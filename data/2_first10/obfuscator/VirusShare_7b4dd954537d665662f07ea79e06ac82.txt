push
call
ret
ret
outsl
cmp
out
scas
jmp
and
sti
repz
stos
dec
fidivrs
and
fwait
decl
lret
inc
les
mov
lret
inc
xor
xchg
lahf
mul
push
lock
pop
daa
fs
fcoml
mov
stos
push
cmovge
mov
sbbl
cmp
lcall
and
cmpsb
lea
mov
icebp
pop
add
add
out
jae
hlt
lcall
dec
xchg
and
fdivp
cli
cmp
psubd
jo
fwait
xor
out
cli
fwait
dec
jmp
loop
cmpsl
sub
jp
and
pop
cmc
xchg
cmp
inc
jne
pop
imul
icebp
and
sahf
or
cltd
sub
mov
js
imul
pop
ljmp
or
pusha
sub
in
mov
mov
pop
add
cmp
loop
adc
leave
test
push
sbb
ja
popf
insb
xor
xchg
shufps
test
sub
ret
aas
sbb
jnp
or
pop
loopne
cmpsb
fldenv
cwtl
adc
insl
xchg
sub
addb
les
inc
cmpsb
sbb
lods
mov
pop
dec
dec
pop
cmp
mov
mov
sti
add
jle
cwtl
std
arpl
mov
lcall
mov
xchg
jo
xor
fstl
mov
jnp
mov
sbbb
pop
test
cmpps
js
mov
les
lret
sahf
mov
leave
scas
mov
mov
scas
push
xchg
mov
call
sbbl
adc
js
dec
enter
pop
and
scas
pop
push
fsubrs
add
arpl
push
push
inc
cltd
divl
sub
or
adc
mov
pop
out
xor
adc
ds
adc
cmp
mov
cld
mov
sub
push
ds
pop
add
ret
jbe
push
add
nop
sub
pop
sti
mov
cmp
pop
into
call
enter
daa
jne
xchg
pop
adc
inc
inc
sub
aam
mov
ds
hlt
pushf
cmp
mov
push
fisttps
repnz
mov
dec
sti
fistl
fcompl
mov
adc
push
sahf
leave
adc
imul
icebp
cltd
scas
jle
insb
push
xor
mov
sahf
xchg
hlt
xchg
ljmp
mov
cmp
cltd
pop
leave
dec
or
fidivl
push
adc
aas
leave
fdivrs
pusha
dec
outsb
mov
or
sete
and
in
or
dec
pop
into
add
scas
test
or
lods
dec
subb
in
lret
test
push
xchg
and
stos
gs
mov
cmp
push
xor
and
test
lea
mov
inc
mov
repz
std
or
xchg
sar
add
and
or
rcr
int
daa
cmpsl
stos
imul
push
mov
xor
in
mov
out
test
imul
je
in
imul
xor
jmp
movsb
lea
out
hlt
fidivs
mov
xlat
jb
nop
push
or
addb
mov
nop
repz
pop
dec
out
push
xorb
mov
out
and
lret
lahf
enter
movhlps
xchg
lcall
into
outsl
jno
dec
push
xchg
mov
cs
aaa
xchg
xchg
or
dec
lods
push
mov
mov
inc
lret
ret
out
mov
inc
mov
loop
and
dec
testl
mov
scas
test
adc
push
arpl
add
push
add
jecxz
jns
adcl
popa
cmp
cmpsl
repz
cmp
xor
repz
dec
pop
das
es
mov
jl
out
adc
fs
in
mov
nop
mov
movsl
rcr
fs
xchg
sub
lods
fdivrl
sbb
cmp
gs
fmuls
nop
jbe
sub
jmp
sub
xor
mov
cmpl
push
orl
mov
add
mov
fldt
lret
fwait
mov
repz
xor
jg
mov
int
addr16
cmp
lods
or
pop
nop
xor
xchg
pop
jae
rcrb
loop
xchg
inc
sub
lods
ja
adc
int3
jae
push
push
ret
dec
mov
ds
cmp
mov
cld
push
outsb
movsb
out
pop
mov
xchg
mov
sbb
and
popf
cli
dec
mov
adc
pop
mov
add
push
or
sbb
jb
mov
cmp
hlt
outsb
push
popl
dec
dec
dec
aad
sub
pushf
mov
dec
loop
cmp
test
inc
fisttpll
pushw
into
imul
scas
xchg
fdivrl
mov
aad
in
jns
clc
outsb
pop
repnz
fisttpll
idivb
cmpl
lret
fnstcw
mulb
sbb
lahf
mov
pop
ljmp
scas
push
in
sarl
inc
xchg
icebp
leave
mov
out
mov
cltd
adc
int
dec
aaa
push
push
or
xlat
cmp
insl
es
fnsave
add
jg
jmp
jnp
stos
lock
movsb
iret
roll
test
gs
in
jge
jle
mov
jle
push
subl
jae
adc
or
lock
fimull
in
nop
cli
xchg
rclb
mov
pop
sub
daa
jns
xchg
adc
lods
aad
cmp
xchg
xchg
lret
mov
dec
xlat
mov
sbb
cld
aaa
int3
lds
inc
jecxz
dec
and
subb
addr16
inc
fs
outsl
negl
scas
mov
sbb
or
je
out
in
sahf
jmp
add
add
and
lds
in
and
pop
test
sbb
rcll
repz
jae
cmpsb
mov
sbb
fs
hlt
movsb
dec
mov
or
pop
adc
and
fwait
mov
xchg
loop
jge
mov
punpcklwd
pop
cmp
scas
dec
mov
sub
sti
adc
or
lods
fistpll
shlb
fdivl
sbb
mov
and
cmp
pop
es
std
pusha
xchg
jg
push
ret
aaa
call
push
test
add
mov
xlat
pop
sbb
sub
imul
in
orps
faddl
into
pushf
lret
sbb
sub
pop
inc
mov
out
sub
jo
in
push
pop
lret
mov
sti
ret
pop
mov
test
xchg
fs
into
or
es
sub
cmp
aam
pusha
inc
leave
ret
push
pop
shll
pop
lea
sbb
les
pushf
out
adc
inc
inc
sbb
sub
sub
adc
gs
push
ret
dec
adc
adc
shrb
fcmovb
lock
and
mov
sbbl
lcall
and
outsb
add
or
xor
ds
leave
xchg
jns
push
xchg
add
addb
js
jae
or
push
and
push
sbb
int
mov
and
mov
mov
dec
push
stc
nop
int
xchg
scas
fldln2
les
movsb
dec
leave
out
push
jmp
jno
dec
pop
push
les
mov
mov
xchg
cli
enter
pop
dec
inc
inc
mull
ds
cmp
pop
pop
sbb
inc
stc
sbb
and
lret
mov
dec
in
imul
cmpsl
push
or
dec
mov
inc
and
in
sbb
daa
and
jae
int3
ds
daa
jge
scas
repz
mov
or
push
cmp
jl
stos
fs
pop
pushf
pop
loopne
js
add
pop
pop
sub
out
push
sbb
pop
pop
mov
popf
or
inc
mov
fdiv
rcll
adc
xor
pop
jbe
dec
ljmp
and
jp
je
mov
mov
cmpsl
sbb
or
add
gs
icebp
xor
cmpsl
inc
js
ret
es
mov
dec
jmp
mov
fwait
mov
jo
aad
sbb
xor
aad
inc
xor
sub
or
cmp
add
or
ror
sub
cmp
sysret
or
gs
adc
stc
cltd
lock
sub
jge
cmp
xor
int3
sub
mov
xor
push
push
nop
into
testl
push
ret
jbe
lret
jbe
adc
xchg
xchg
mov
cwtl
ss
jle
pop
inc
dec
adc
xchg
mov
or
test
jmp
gs
out
push
jg
sbb
adc
mov
push
xchg
inc
stos
inc
push
ficomps
sub
in
jns
fiaddl
xor
pop
aas
ja
adc
fucomip
add
pushf
es
inc
outsb
ljmp
sub
subl
das
test
mov
pusha
pop
jmp
je
test
jl
punpckhwd
outsl
mov
adc
inc
cltd
ja
cmp
sbb
cmpsl
imul
movl
sahf
cs
or
movsl
sbb
push
andb
in
mov
js
or
loope
data16
mov
inc
movb
je
aas
jp
aam
loopne
cltd
dec
adc
mov
repnz
pop
aaa
fimuls
sbbb
test
sbb
cmpb
call
lcall
lea
scas
mov
mov
syscall
aam
mov
insb
stos
loope
ficompl
push
in
add
push
and
mov
iret
jne
inc
cmp
push
push
or
imul
pop
into
imul
addr16
pop
faddl
mov
sub
xor
stc
push
rcr
adc
ljmp
orl
out
pop
mov
inc
aaa
clc
cmc
jmp
ja
fistpl
popf
insb
scas
aam
mov
ret
popa
out
push
push
imul
cld
rolb
test
cwtl
jbe
pushf
pusha
aaa
add
push
cmpsl
test
cmpsb
mov
imul
lds
call
call
xchg
movsb
in
aam
or
push
inc
mov
ss
add
test
push
dec
or
adc
sbb
xchg
das
push
push
shl
pop
test
mov
push
inc
mov
es
cmpsl
loope
jl
mov
outsb
addr16
cmp
pop
stos
xchg
mov
cltd
mov
xchg
arpl
in
jns
pusha
cld
xchg
xchg
sti
sbb
dec
fcoms
daa
inc
mov
pop
pop
xor
gs
pop
and
jb
int3
cli
std
pop
mov
cmc
enter
pop
fdivl
add
push
dec
mov
xor
xchg
test
mov
int3
int
push
xlat
mov
mov
sub
out
cmp
dec
and
mov
adc
rorl
sbb
rcrb
mov
icebp
or
mov
ds
cwtl
fldenv
insl
pop
iret
dec
xor
lcall
xchg
pop
fsubl
sbb
leave
pop
add
lea
inc
dec
xchg
xchg
xor
icebp
or
int
pop
xor
pop
icebp
xchg
cmc
cmp
icebp
xchg
mov
pop
add
sbb
sbb
cmp
mov
ret
pop
ja
fidivs
and
pop
push
sbb
xor
push
fdivr
pop
fwait
xchg
pop
aas
das
or
jp
aas
test
je
push
ljmp
packssdw
jb
ja
fisttpl
or
sarl
mov
push
ret
sqrtps
xor
add
rcrl
cmp
xchg
dec
cltd
push
mov
pop
lcall
push
push
cltd
sbb
sub
mov
mov
lods
mov
lret
cli
arpl
jns
jne
and
mov
push
sub
mov
mov
daa
in
daa
loope
inc
das
lret
mov
cwtl
adc
pop
je
shrb
jl
jl
pushf
push
adc
repnz
addr16
fsubrl
arpl
sub
dec
lock
shll
add
push
ja
mov
stos
pop
jge
adc
les
std
cs
testb
out
mov
pushf
stos
movsl
pop
scas
es
vpaddw
mov
adc
mov
xlat
mov
out
mov
and
jl
popf
pop
sbb
mov
mov
dec
and
dec
pop
xor
test
into
jg
aad
rcll
aas
nop
jmp
addr16
mov
pop
sbb
pop
into
test
xlat
lods
mov
shrl
add
addr16
sub
mov
mov
jmp
out
aam
sbb
xchg
stc
lret
in
test
stc
lods
mov
jmp
push
dec
mov
lahf
out
xor
in
or
or
inc
cwtl
ficomps
push
xchg
addr16
add
movsb
mov
push
in
shll
lods
xchg
push
mov
sub
and
inc
sub
lods
in
mov
in
sahf
jecxz
adc
imul
sbb
or
or
in
lock
icebp
je
sub
mov
jnp
jb
xlat
pusha
jp
or
inc
cli
mov
arpl
fiadds
sub
pop
sbb
and
and
sti
inc
fs
ljmp
adc
add
inc
fisttps
cmc
mov
shlb
xchg
das
jp
mov
pop
lret
neg
jl
jbe
mov
test
push
pop
jecxz
mov
xchg
ja
mov
pop
dec
xchg
push
ret
fcomp
or
lea
adc
or
jbe
adc
jecxz
jge
sbb
adc
or
jmp
stos
xchg
adc
cmp
cmpsl
push
imul
and
lret
sub
push
pop
outsb
in
mov
sbb
or
xchg
test
and
sub
xor
clc
pop
jecxz
jns
cmp
fistl
dec
push
inc
call
repnz
rclb
push
in
inc
mov
mov
jno
mov
lock
add
cmpsl
xchg
xchg
icebp
int
inc
sbb
and
lods
nop
pop
roll
mov
jecxz
or
lock
negb
mov
iret
idivb
nop
xchg
subb
into
lods
jp
sbb
push
jge
jp
mov
pushf
push
shll
jno
mov
add
push
das
xchg
aaa
cmp
xchg
shll
jecxz
out
pop
outsl
jg
imul
mov
or
mov
out
cltd
cmpsl
jo
aas
dec
fistps
or
xchg
or
outsb
in
cld
rcrb
jecxz
adc
stos
dec
rcll
mov
push
sbb
xchg
sbbl
arpl
jne
mov
out
cli
movsb
mov
mov
inc
dec
cmp
ret
dec
bound
cmc
pop
xor
loopne
sub
lds
cmp
jno
mov
inc
xor
push
cwtl
pop
lahf
stos
push
stc
mov
icebp
jmp
aad
xlat
cmc
sbb
sbb
pop
std
enter
cmovl
loope
add
clc
xor
out
shl
dec
xor
or
mov
cmpsl
les
es
movsb
pop
lea
insb
insl
ret
ret
inc
sub
into
adc
inc
sarb
mov
imul
and
dec
testl
lret
xchg
push
dec
sbb
push
jae
mov
pushf
dec
xor
adc
or
xchg
stos
out
push
ds
cli
out
popa
cmp
fs
push
jmp
or
nop
gs
inc
xchg
dec
jecxz
dec
fnstenv
je
cmc
add
out
ljmp
jmp
ret
mov
and
sbb
inc
push
andl
es
mov
inc
jmp
aad
xlat
cmpsb
ret
scas
and
xchg
loope
mov
inc
cmp
fbld
pop
imull
add
lods
sbb
jo
les
push
lcall
xor
jp
xchg
jp
add
int3
jnp
xchg
jo
jae
push
xchg
and
or
pop
repnz
mov
in
shr
pop
cmp
mov
or
gs
dec
dec
pusha
lods
fistpl
jns
mov
mov
mov
iret
jecxz
or
loop
dec
roll
cli
pop
test
xchg
es
adc
sub
add
sub
loopne
jge
in
jae
and
inc
mov
pop
cld
sbb
aaa
cmpl
jmp
add
mov
in
cs
imul
jecxz
pop
rcrb
les
inc
je
test
push
xchg
jb
pusha
std
and
push
movsb
test
or
sbb
jnp
cmp
ljmp
add
mov
neg
cmp
js
adc
loope
adc
dec
sub
inc
or
xor
sub
fs
enter
adcl
roll
mov
ret
xchg
addb
push
repz
fwait
dec
nop
fsts
bound
roll
jbe
adc
dec
cltd
mov
test
mov
pop
cmp
and
test
movsb
cmp
push
outsb
in
jnp
jle
addr16
popl
xor
ds
or
flds
movlps
mov
mov
repz
xchg
inc
scas
jle
adc
add
dec
or
clc
cltd
inc
jg
push
cld
adc
mov
sahf
repz
xor
adc
sub
lret
out
jge
sub
mov
sub
loop
jl
ret
insl
jp
lret
fcmovbe
sbb
push
bnd
ds
mov
jnp
mov
js
dec
repnz
push
dec
xchg
inc
js
decl
aad
jo
scas
sub
xchg
cmpsb
leave
and
xchg
pop
dec
xchg
out
push
shlb
fnstenv
dec
sub
pop
out
mov
dec
push
or
xchg
mov
cmp
sub
dec
xor
and
frstor
cmpsb
rcll
mov
adc
fbstp
lcall
in
out
adc
sub
std
fidivs
loope
xchg
sub
hlt
lods
cs
inc
push
lock
xor
insl
out
ds
pushf
add
pop
nop
add
xor
ljmp
sbb
mov
cmpsl
loopne
rolb
dec
and
repz
pop
mov
or
xchg
mov
dec
ljmp
dec
and
pop
cmp
jecxz
je
pop
mov
ret
dec
xor
add
jg
nop
cli
push
fistpll
or
std
fisttps
insb
jge
pop
and
mov
sbb
jecxz
cmpsb
push
icebp
add
cmp
stos
test
lret
std
mov
cmpsl
ljmp
leave
jmp
or
xor
ja
test
sbb
dec
inc
insl
lret
aas
ror
sub
xlat
or
mov
mov
stos
push
inc
fs
stc
mov
jb
mov
les
imul
jecxz
lahf
frstor
push
enter
inc
pop
icebp
push
mov
popf
es
lock
notb
aam
es
jecxz
adc
pop
lret
add
sarl
fcompl
xchg
cmp
sbbl
xchg
cmc
out
in
in
int3
xchg
push
sbb
shrl
sbb
dec
lcall
xchg
dec
push
add
sbb
aas
rcll
loop
push
movsb
mov
mov
cwtl
adc
out
add
xor
imul
hlt
mov
jle
cli
push
mov
mov
cld
js
outsb
jge
out
pop
imul
pop
out
dec
jb
arpl
out
in
jmp
pop
add
dec
jg
cli
pushf
stos
imul
mov
roll
gs
cmp
sbb
out
xchg
fwait
mov
jmp
in
jb
pop
inc
jae
cli
push
sbb
push
dec
cmp
xchg
dec
fsubrl
xor
rcll
inc
enter
call
jmp
je
sti
or
mov
fstps
ljmp
mov
fists
sub
sub
std
sbb
jo
lds
pusha
gs
aas
dec
push
shrl
sbb
cmp
pop
sbb
adc
insl
xorl
scas
xchg
xchg
adc
sbb
cmc
test
fcom
inc
loopne
les
adc
push
inc
xchg
adc
adc
in
jg
dec
insl
lret
lret
mov
sahf
in
jnp
cmpsb
daa
fs
inc
and
mov
xor
cmp
repz
mov
gs
mov
dec
push
inc
out
inc
vpshad
cmp
daa
ret
push
push
sbb
outsl
mov
rorb
cltd
push
popa
pop
movsl
rcll
mov
xor
insl
std
cmp
lret
push
cmp
xorl
nop
out
out
sarl
popf
xchg
sub
xchg
xchg
popf
or
sub
aaa
sub
jmp
mov
xor
insb
xorl
and
push
add
push
aad
and
lret
enter
popl
push
cwtl
shll
inc
repnz
mov
call
popf
pusha
adcb
mov
icebp
les
int3
inc
int
loop
mov
mov
xchg
aam
pop
mov
addb
idivb
dec
mov
or
xchg
push
movsl
xchg
cmpsl
push
dec
mov
popf
adc
jne
data16
jno
iret
testb
cli
out
sub
fistps
cmp
lret
arpl
out
jns
push
out
push
insl
repz
out
lods
mov
mov
stc
arpl
int
nop
mov
dec
jmp
fcmovb
scas
add
in
insl
outsl
outsl
inc
cmpsb
inc
lods
inc
es
add
sbb
dec
cmp
sbb
push
sub
and
fxch
sbb
and
jmp
and
ret
ss
clc
loop
jp
lahf
out
add
cs
fisubrl
add
into
add
popf
jb
adc
mov
out
push
mov
les
inc
loopne
xchg
xorl
lods
rcrl
push
fldt
xchg
add
dec
leave
cltd
xor
lcall
out
xchg
or
push
rclb
pop
sub
or
out
pop
pushf
jge
cmpsb
mov
mov
bnd
outsl
push
ficoml
cmpl
push
mov
mov
xor
pusha
sub
sub
clc
cwtl
cmp
dec
subl
ret
inc
mov
stc
ficomps
in
sti
and
sub
xor
sbb
cmp
stos
mov
es
xchg
inc
cmp
pushf
cmp
fwait
in
fcmovnu
and
fisubrl
cmp
push
jmp
mov
mov
inc
xchg
cmc
dec
imul
mov
inc
add
xor
or
pusha
clc
pop
mov
pushf
mov
mov
pop
xor
adc
aad
adc
pop
imul
out
lock
jg
push
dec
mov
xchg
dec
jg
jno
jp
sti
cmp
jmp
mov
pop
rol
daa
sbb
imul
rcrb
arpl
jge
and
push
cld
daa
out
xchg
imul
out
outsb
nop
or
into
xor
iret
bound
mov
into
stos
insb
lods
in
orl
xor
jmp
call
and
mov
and
mov
xor
cs
lret
movsl
ret
roll
pushf
jns
or
mov
add
leave
xchg
inc
bound
out
xchg
cmp
idiv
or
scas
repz
addr16
stos
mov
iret
push
mov
inc
xchg
or
mov
pop
xor
dec
cmpl
addr16
pusha
lret
pop
xor
mov
pushf
mov
jg
mov
mov
sbb
icebp
push
test
and
push
mov
mov
lahf
gs
add
out
or
out
data16
mov
add
std
adc
stos
out
jno
jge
pusha
pop
or
mov
gs
and
fdiv
inc
outsl
fimuls
jecxz
imul
sbb
inc
lods
mov
cmc
scas
push
jnp
in
insb
das
push
mov
add
jne
int3
mov
mov
push
stos
lea
and
mov
inc
dec
mov
pop
mov
xchg
mov
test
fcompl
filds
and
aad
or
pop
sub
out
imul
xlat
lcall
daa
dec
ficoml
fsub
addb
in
cli
loopne
test
mov
inc
das
mul
jle
daa
mov
fwait
scas
xchg
clc
out
adc
js
aam
cmp
test
or
xor
inc
arpl
ucomiss
in
addr16
in
cli
testb
fucomip
push
sub
push
inc
mov
and
sub
lods
push
cmc
fwait
aad
outsl
or
mov
mov
aas
dec
mov
cmpsl
pop
xorb
stos
push
and
movsb
mov
xchg
jbe
fstps
push
out
cmp
pop
xor
jo
push
int
cmp
sub
daa
adc
adc
out
dec
pop
cmp
sbb
pushw
je
arpl
bound
sbb
inc
ds
loopne
mov
leave
inc
push
lock
or
rcrb
push
das
xor
ret
push
or
loope
jmp
sbb
mov
loop
cmpsb
push
mov
lret
test
fistpll
mov
adc
movsl
into
dec
mov
shll
ret
mov
and
lods
push
pop
push
fmull
add
cmc
out
mov
and
cli
xor
out
and
fimull
mov
test
push
inc
xchg
sub
xchg
push
rorb
jo
outsb
cmpsb
sti
adc
insb
xor
movsl
ja
or
fiadds
hlt
add
loope
xchg
test
jp
xchg
pushf
jmp
repz
int3
push
lret
push
ljmp
aaa
or
sub
and
je
xorb
mov
inc
mov
xchg
push
jo
and
or
sbb
notl
loopne
jecxz
mov
and
sbb
mov
push
mov
sarb
or
stos
xchg
std
loope
xor
cmc
jbe
push
je
outsl
push
mov
call
cmp
outsb
xor
jle
push
inc
outsl
xor
inc
js
loop
or
jp
or
jo
shll
sbb
and
pop
lods
inc
outsl
or
out
push
or
mov
into
filds
mov
sahf
dec
and
xor
mov
lock
test
test
push
out
mov
aad
lock
scas
shll
cli
pushf
dec
inc
and
push
dec
outsb
push
into
mov
das
pop
je
pop
mov
push
pop
or
pop
jae
aaa
mov
mov
adc
int3
sbb
out
test
dec
aas
xchg
hlt
addr16
mov
pop
mov
neg
push
dec
jbe
mov
lods
pop
fstps
mov
xchg
jo
inc
nop
fdivl
push
add
in
sub
jmp
loop
add
adc
enter
mov
mov
mov
add
cmp
inc
sbb
inc
xchg
add
outsl
push
test
sub
ljmp
adc
mov
cmp
nop
xchg
test
loop
jmp
lods
rcll
xchg
mov
pusha
mov
fidivl
push
ja
and
or
loopne
fldt
mov
stos
roll
repz
les
cmc
inc
mov
mov
out
mov
shlb
push
mov
cmp
add
rcrl
dec
insl
jne
and
das
es
mov
fisttps
sub
iret
insb
jg
sbb
sub
leave
push
or
dec
adc
mov
lock
pop
stos
push
mov
xor
enter
fstpl
mov
pop
data16
push
outsl
loope
aaa
pop
mov
add
and
inc
adc
jp
lods
cli
mov
sbb
cmp
inc
stos
cli
pop
or
xor
mov
lret
mov
jno
int
mov
pop
inc
lcall
fidivl
das
fiadds
or
lods
dec
mov
mov
push
adc
cmp
mov
fwait
inc
sub
imul
xchg
jecxz
test
dec
jmp
scas
das
mov
pop
stos
fstpt
addr16
data16
loop
mov
jns
mov
stc
pushf
fcmovb
clc
mov
ret
jo
xchg
push
testb
or
sub
pop
or
je
push
int3
jp
lahf
dec
inc
repnz
pop
pop
pop
mov
outsl
mov
inc
test
int
cmc
pop
outsl
dec
ljmp
push
loope
cmc
sub
call
es
idivl
sbb
mov
dec
popf
mov
mov
bound
test
stos
cli
test
jl
ret
cwtl
test
cmp
sub
add
es
fdivs
or
or
movsb
enter
sbb
adc
daa
cli
xchg
int
add
xchg
lret
dec
sbb
mov
cltd
pop
addr16
mov
or
outsb
xchg
or
in
mov
lcall
fisubl
ljmp
xchg
icebp
xor
scas
pop
andl
pop
xchg
sbb
imul
or
scas
mov
inc
xchg
aaa
les
insl
inc
sub
adc
test
jmp
mov
rcr
sub
push
mov
in
sub
mov
aas
lret
test
pop
out
jbe
mov
cwtl
mov
or
ret
push
sub
xor
dec
sub
insb
je
push
data16
jno
mov
jmp
mul
loopne
sub
xchg
aam
cwtl
pop
cwtl
shr
and
repz
xchg
cmp
xor
mov
addr16
adc
fwait
jno
fidivl
stos
jns
mov
in
orb
and
shl
mov
xchg
pop
bound
jg
pop
pop
nop
push
arpl
iret
mov
movsb
add
push
mov
data16
mov
push
out
or
xlat
aam
into
pop
fsubrs
aas
loope
inc
pop
jae
enter
stc
mov
xchg
mov
mov
mov
push
jne
push
sub
test
pop
ljmp
mov
cmpsb
mov
sub
mov
dec
dec
inc
inc
iret
cmp
fisttpl
aad
loop
pop
imul
mov
sub
movsb
movsb
inc
out
insl
add
mov
inc
ja
sbb
dec
cmpsb
std
les
insb
push
inc
pop
cld
aad
xchg
and
dec
sar
add
add
or
dec
lods
xchg
xchg
lods
jnp
pushf
aaa
ja
xor
xor
add
rorb
dec
test
out
andl
mov
pop
xchg
push
cs
je
dec
arpl
loopne
fwait
or
push
mov
add
adc
rcll
sahf
mov
dec
jns
dec
add
or
jle
pushf
inc
push
lods
scas
jae
mov
daa
add
insl
adc
gs
imul
sub
scas
in
sub
and
ss
imul
ficoms
sbb
bound
out
mov
iret
mov
jp
push
notl
xor
in
jae
repnz
cmp
lcall
or
stos
cmp
push
lock
les
ret
pop
dec
xchg
fsubrs
xor
orb
call
fsubl
mov
mov
fcmovnb
les
iret
std
jmp
mov
out
or
cld
and
pusha
mov
std
int3
sbb
or
jg
out
mov
int3
lods
mov
or
cld
fwait
imul
mov
or
mov
sub
or
mov
dec
sub
push
push
or
cmpsb
mov
mov
enter
fdivs
jge
inc
ljmp
test
into
mov
js
sbb
outsl
test
rcr
cmp
je
mov
xchg
ljmp
fisubrl
cmp
and
xor
jns
lea
mov
lods
pop
shlb
cltd
mov
mov
test
jb
add
stc
and
fcmovu
arpl
imul
mov
jmp
jl
out
and
loope
inc
daa
mov
mov
cli
fs
adc
jmp
push
in
xchg
pushf
mov
test
shl
loope
jecxz
sub
push
test
and
push
inc
pop
mov
and
pop
outsb
inc
fldcw
int3
in
lock
mov
sub
or
adc
jl
dec
adc
jno
pop
decb
pop
xor
mov
outsb
mov
pop
add
inc
sub
fwait
cmc
lods
cmpsb
movsl
mov
sahf
mov
mov
add
pop
pop
and
fs
fisttpll
fnstsw
or
and
aaa
sti
mov
fcmove
add
aas
dec
mov
xchg
sbb
ds
push
addr16
add
or
in
add
pop
lahf
adc
lret
movsb
lock
movl
dec
pusha
xchg
sbb
stos
push
lock
bound
pushf
jp
popa
out
mov
sarb
pop
mov
cli
sahf
imulb
or
sub
shl
jns
or
jecxz
or
pushf
mov
cmp
test
ret
jl
movsl
push
ljmp
sbb
loope
gs
mov
aam
jp
imul
add
ljmp
movsb
enter
push
ret
ds
mov
icebp
pop
scas
cmpsb
pop
scas
jge
pop
inc
push
sbb
out
and
add
lahf
shrl
xor
jb
mov
mov
jecxz
ret
scas
not
mov
call
loopne
mov
mov
mov
test
jns
fwait
rcrl
mov
sub
push
subb
stos
xchg
cmpsl
xor
clc
dec
mov
std
popf
loop
mov
lcall
ja
add
pop
loopne
out
and
pop
xchg
lret
push
sbb
mov
aaa
aad
xchg
cmpsb
in
movd
in
leave
push
and
loop
call
sub
std
lods
dec
sub
ja
inc
dec
movsl
xchg
mov
out
daa
push
sti
cmpsb
jae
movsl
out
sar
mov
mov
mov
icebp
pop
mov
jns
ss
mov
aam
sbb
push
and
mov
lahf
sar
add
push
shrb
repz
xchg
loop
xchg
push
clc
inc
inc
shrb
pushf
daa
ficomps
sub
xor
fnsave
inc
inc
mov
dec
mov
out
sub
sbb
xor
fisubl
cmpsl
sbb
iret
mov
sbb
pop
mov
cld
mov
out
pop
sub
add
stos
and
mov
mov
xor
mov
bound
outsb
int3
icebp
jg
shr
movsb
dec
mov
inc
cmp
xor
xor
xlat
lea
xor
mov
daa
sub
andl
int
loope
mov
scas
inc
cmpsb
mov
dec
xor
pop
lret
push
cli
out
mov
stos
movsb
jbe
shr
xchg
mov
jg
xchg
imul
mov
xor
jbe
cmpsl
out
inc
sub
imul
hlt
push
shrb
sbb
fmull
movsb
pop
xchg
cmp
sub
notb
lahf
or
mov
or
mov
push
dec
addb
pop
repz
mov
dec
sbb
data16
stos
sub
ficomps
sahf
cmp
jb
cltd
ja
out
adc
scas
add
mov
pop
shl
push
or
gs
int
int
jne
arpl
push
xchg
adc
or
push
sti
icebp
fcomip
sub
sahf
cmc
das
sti
test
mov
orb
repnz
lock
mov
scas
sahf
xchg
sahf
xchg
clc
adc
dec
sti
xchg
inc
jl
sahf
pop
mov
xor
sub
fwait
inc
cmc
fcmovbe
sub
mov
loopne
ret
push
and
inc
dec
xorb
out
add
mov
scas
mov
or
loope
lret
mov
pusha
mov
cs
clc
das
mov
stc
and
call
dec
frstor
rcl
mov
sbb
jno
aas
bnd
sub
repz
xchg
lock
jnp
mov
dec
rcr
ss
inc
dec
pop
and
add
mov
pop
pusha
adc
mov
mov
xchg
xchg
mov
fwait
ret
out
into
aam
jno
sub
push
cmc
xchg
jp
sub
mov
jg
inc
aad
mov
outsl
cli
jo
xchg
jge
xor
inc
test
incb
arpl
scas
test
sub
push
sbb
leave
fnstenv
xor
adc
addr16
jecxz
fsub
aam
jb
dec
dec
sbb
mov
inc
cmp
add
and
lods
fwait
pushf
data16
call
xchg
jb
and
inc
inc
rorl
sbb
mov
imul
push
out
sbb
mov
call
xchg
ret
les
mulb
fdivrs
icebp
mov
rcll
ret
pushf
xchg
xchg
icebp
xchg
mov
inc
sbbb
lcall
das
rorl
scas
push
inc
jne
or
pop
lock
adc
jno
dec
pop
push
ret
daa
ret
loopne
mov
cmc
xchg
sub
xchg
mov
mov
out
fdivl
shrl
test
in
ljmp
aam
ds
push
je
and
xchg
aad
ljmp
cs
sub
jg
inc
enter
iret
les
pop
aam
pop
mov
pop
lret
pop
cltd
pop
mov
fldl
dec
cs
jae
aas
cmp
ret
inc
pop
pusha
adc
mov
and
push
es
mov
push
sbb
add
and
dec
cmp
fstps
in
loopne
adc
stos
insb
mov
lods
jmp
sbbb
mov
mov
fisubl
push
stos
sub
outsl
xchg
fstps
lcall
push
popa
fstpl
push
stc
sbb
cmp
fldcw
mov
ja
and
popf
pop
pop
sti
outsb
test
or
fcomps
movsl
mov
adc
sub
add
xlat
test
fwait
xchg
jmp
cmc
pusha
mov
or
push
scas
pop
sbb
inc
les
decl
cmp
es
or
jp
xor
shll
mov
frstor
dec
mov
dec
repnz
and
mov
repnz
pop
mov
out
sub
xchg
cmp
shl
clc
aad
dec
jno
push
lret
jne
adc
pop
hlt
lock
xchg
jb
push
lea
std
outsl
cmp
pop
popf
xchg
shlb
cwtl
icebp
xor
lcall
sar
jns
ja
mov
out
mov
jecxz
loop
pop
cmp
call
movsb
mov
repz
sub
je
cs
stos
cwtl
rol
cmp
out
shl
sub
imul
ja
dec
jl
arpl
add
clc
lock
pop
stos
mov
cs
in
cld
jae
inc
fadd
jp
sahf
ljmp
pusha
imul
sub
inc
insb
loope
sub
inc
in
movb
cmpsb
enter
adc
sub
xlat
sub
mov
out
out
sbb
gs
mov
push
add
or
loope
les
and
out
mov
sub
fstl
dec
scas
mov
aas
cld
test
lods
leave
dec
fiadds
mov
outsb
add
stos
xor
int3
sub
pop
in
into
js
pop
cmc
mov
adc
testl
lock
xor
dec
jb
push
jle
and
jbe
sub
mov
fadd
or
aas
mov
jnp
aas
mov
jmp
cmpsb
add
xchg
test
push
cmpsb
sbb
rcrl
mov
bound
or
mov
xchg
movsb
out
dec
cmpsl
dec
aam
pop
sbb
rclb
int
fidivrl
mov
into
mov
pop
repnz
scas
in
xlat
xor
jmp
pop
sar
bound
int
shlb
lret
lahf
dec
mov
jne
fbld
decl
lret
jbe
and
adc
jecxz
ss
pusha
loop
push
and
add
dec
repz
scas
adc
sub
aam
mov
pop
orl
and
clc
sub
cmp
fsubrs
and
jmp
gs
jb
testb
sbb
mov
push
ja
add
fwait
popa
adc
sbb
shlb
fisttpll
popf
pop
les
mov
mov
pop
xchg
into
jg
pusha
repnz
dec
mov
int
adc
push
mov
cmpsl
jnp
es
xchg
insl
xor
cmp
sub
fsubrs
mov
sbb
insb
jo
and
xor
xchg
push
mov
inc
andb
mov
xor
cmp
mov
leave
shlb
xor
mov
fs
inc
fwait
mov
and
pop
addl
loop
sti
out
lret
scas
jl
jns
out
jecxz
mov
fnstenv
lds
ffreep
mov
repz
pop
sbb
dec
xchg
test
dec
cmc
push
nop
pop
sbb
icebp
xor
call
jg
fwait
mov
and
fcom
sub
outsb
inc
and
dec
inc
inc
mov
test
int
xlat
repz
pop
sub
jae
cwtd
and
sahf
in
insl
jmp
nop
lods
push
mov
test
inc
test
out
shlb
add
mov
imul
jmp
fwait
cwtl
push
sub
filds
or
and
adc
push
aam
sub
add
int
insb
cmp
adc
mov
movzwl
or
jae
hlt
lock
dec
mov
sub
repz
adc
cld
pop
and
cmp
in
out
pop
mov
pop
cmpsb
xchg
test
mov
scas
sbb
add
aad
into
shlb
xchg
repz
dec
scas
mov
pop
jmp
ss
div
dec
in
add
das
dec
bound
pop
xor
js
xchg
inc
pushf
sub
test
ffree
data16
test
pop
sbb
shll
pusha
jp
jle
sbb
mov
lahf
test
mov
ds
xchg
adc
mov
jecxz
mov
mov
in
pop
xchg
shll
push
inc
test
sub
movsl
ds
mov
dec
fiaddl
push
mov
mov
call
dec
movsb
push
ljmp
push
lcall
jbe
cmp
rorl
scas
pop
sub
loope
cld
nop
ljmp
xchg
ds
jmp
push
bound
jp
sbb
jb
pushf
insb
push
in
push
xchg
push
pop
ljmp
nop
jmp
inc
sbb
imul
in
xor
imul
and
cmpb
into
in
jl
lods
pop
out
or
jo
inc
jge
jecxz
wbinvd
in
ja
lahf
shlb
sub
lcall
inc
and
xor
cmc
jge
adc
dec
jecxz
mov
aam
xchg
and
mov
jb
das
and
or
sbb
ljmp
repnz
outsb
in
mov
dec
les
repnz
pop
das
ljmp
in
sbb
aad
add
sbb
pop
int
mov
push
hlt
enter
and
push
int3
hlt
ret
mov
sub
jnp
push
and
cld
mov
fsubs
mov
repnz
xchg
jns
mov
fidivrs
dec
xchg
mov
rcll
gs
xor
pop
xor
xor
or
bound
jnp
js
lock
adc
aaa
dec
pop
pop
dec
stos
aad
sbb
daa
daa
jae
mov
mov
or
or
sub
aas
or
or
stc
adc
sub
jne,pt
mov
pop
nop
mov
lahf
mov
jecxz
pop
mov
clc
pop
fwait
pop
mov
xchg
lds
loop
test
shl
pop
and
jae
movsb
scas
sub
mov
and
mov
rcll
fstl
xor
xchg
insb
fisubrl
push
mov
testl
stos
imul
mov
test
push
add
or
cltd
pop
ljmp
pop
pop
cmpsl
ret
pusha
shlb
dec
cmp
rol
jne
xor
int3
loope
pop
frstor
out
fincstp
int3
mov
fdivrs
dec
int
xchg
dec
lsl
in
outsb
ja
xorl
cmp
mov
cmp
adc
mov
fs
add
jo
and
mov
mov
dec
inc
clc
in
mov
out
sub
je
inc
test
add
shr
test
adc
je
sbb
lds
xor
adc
jge
jae
ds
push
cs
sub
sarw
lret
lea
adc
jg
ljmp
stos
add
fwait
sti
jecxz
out
lret
shll
adc
mov
add
mov
movsb
jbe
call
xor
dec
or
adc
andb
xorb
inc
aaa
mov
or
lea
insl
or
push
cmp
sbb
scas
push
cs
inc
fmuls
dec
das
add
push
dec
adcl
sti
dec
testl
rolb
sub
rcrb
cmpl
icebp
gs
or
iret
jg
ja
aam
in
push
fldcw
inc
jb
cli
mov
cltd
js
mov
orl
xchg
adc
jo
std
adc
cmp
mov
and
jmp
aad
and
stc
in
testl
sahf
cltd
jnp
int
lahf
pusha
addr16
das
fwait
mov
cltd
push
and
dec
and
lahf
mov
jmp
sub
jo
stos
mov
loope
test
mov
xchg
sub
dec
loop
loop
xor
adc
lds
mov
insb
aam
jnp
int3
and
pop
push
lock
addr16
sbb
jb
sub
cmc
ficompl
mov
popa
sub
pop
jmp
or
mov
mov
cmp
lcall
leave
xchg
pop
jge
mov
out
ljmp
add
or
lea
pop
xor
loop
loope
int
mov
je
sti
jbe
mov
or
pop
ljmp
push
stos
int3
jl
mov
jns
or
cmp
cmpsb
cld
js
ss
ds
leave
mov
push
repz
add
or
push
mov
push
daa
pop
xchg
cmp
lret
je
ja
int
cwtl
in
cmp
jmp
mov
and
lods
xchg
and
pop
mov
fdivrl
xchg
insb
or
cmpsl
in
add
fwait
jecxz
in
out
movsb
test
mov
inc
adc
cmp
loop
fwait
cmpsb
out
std
add
test
in
sub
movsb
dec
pop
inc
mov
aam
push
rcrb
lods
cltd
mov
outsb
in
pop
movsl
mov
adc
ljmp
fsubs
sub
ret
sub
inc
sahf
sarb
xchg
mov
fsubrs
stc
or
insb
xor
insb
shll
dec
addl
mov
push
mov
pusha
push
or
nop
push
clc
fldt
clc
adc
and
dec
jle
and
push
stos
or
mov
adcb
push
or
push
jnp
sbbl
jno
cmp
lea
cmpsb
nopl
push
rcrl
sahf
pop
push
cmp
inc
sub
push
cli
ds
push
divl
fistpl
sub
cmpsl
enter
mov
jp
dec
and
and
sbb
mov
add
xor
xor
dec
fisttpll
add
inc
or
dec
push
push
mov
sti
inc
cld
lret
mov
jl
repz
or
je
sub
mov
adc
add
jle
xchg
jp
pop
cmp
pop
stos
inc
jbe
gs
test
sahf
and
mov
or
dec
shlb
mov
xorl
xlat
push
or
fistpll
inc
shrb
neg
lds
aam
inc
mov
shl
enter
pop
fdivrs
shrl
std
lock
xlat
rcrl
cmc
inc
and
shlb
negb
shl
in
scas
xor
mov
imul
adc
add
popa
mull
cmpsl
add
cwtl
jo
test
dec
ss
sbb
pop
xor
and
outsw
jmp
cmp
ror
in
addr16
sbb
or
ljmp
sbb
lods
or
jl
mov
in
dec
push
ss
sub
push
pusha
mov
dec
movsl
add
std
jo
leave
cmpsl
movsl
cs
xor
vmread
add
test
ficoml
xlat
xchg
ret
jp
or
add
f2xm1
cli
std
cmp
ficoml
push
fwait
jg
xor
enter
fwait
push
mov
and
movsb
add
lds
icebp
es
leave
cmp
or
fdivs
mov
add
repz
mov
push
jl
push
pop
shlb
xor
loopne
repz
into
sub
sub
or
call
call
inc
push
adc
icebp
out
rcr
arpl
popa
std
fs
push
pop
stos
scas
adc
adc
xor
incl
mov
les
sbb
jno
ret
mov
cltd
cmpsb
inc
je
out
lock
pop
pop
in
mov
les
ret
cmp
push
pusha
mov
pop
ja
fwait
xchg
sub
sbbb
or
enter
add
adc
cs
jp
mov
pop
mov
dec
aas
fnstsw
push
stc
add
mov
jp
repz
cmp
jb
stos
mov
test
and
mov
inc
lock
les
xor
xor
clc
cmp
push
mov
out
icebp
sbb
shll
sbb
inc
test
out
loope
scas
imul
xor
inc
mov
dec
push
pop
es
mov
je
movsb
or
jns
add
es
pop
mov
sbb
int3
nop
sbb
lret
push
ftst
mov
fucom
add
adc
jb
jbe
dec
or
sbb
cmp
adc
and
jmp
or
insb
imul
add
aaa
loope
imul
push
aaa
pop
mov
fwait
pop
ljmp
push
sar
pop
xchg
mov
push
or
fists
push
jno
xchg
mov
test
fsubl
bound
loope
divl
incb
cmp
mov
add
mov
fcmovne
mov
mov
adc
and
lods
lods
stc
lds
pop
repz
xchg
test
aaa
add
aas
clc
xor
mov
aad
ret
sbb
sub
insl
aad
scas
lock
fwait
leave
scas
dec
sub
pop
inc
mov
push
adc
mov
into
scas
movsl
cmpsl
jno
stos
mov
jp
sub
stos
mov
lods
rep
jb
xchg
popa
fs
cmp
dec
jmp
jecxz
loope
test
fisubs
cmp
aas
mov
inc
repz
clc
js
sub
out
sub
pop
js
lock
jmp
xchg
pop
lahf
xchg
cld
xlat
out
sbb
mov
insb
pushf
jge
jnp
and
adc
addr16
adc
aaa
fildll
in
xchg
cld
jp
add
pop
aaa
xchg
pop
mov
jne
insb
jle
es
mov
xchg
fcmovnb
and
dec
pop
fcmovu
xchg
or
popa
lcall
cmp
add
and
jbe
push
sarl
lods
int
aam
pop
insl
int
sbb
adc
fimuls
xchg
jns
mov
mov
sbb
and
adcl
jmp
loop
out
lds
ljmp
loop
or
outsl
xchg
sub
mov
mov
jns
push
js
fdivs
ss
pop
add
dec
xchg
pop
pusha
or
mov
jns
push
pop
mov
mov
stos
jo
mov
clc
scas
mov
and
fadds
andl
fldenv
cmp
stc
cltd
mov
movsb
inc
mov
jo
mov
jno
pop
xchg
outsl
insl
aam
int3
popa
shll
bound
adc
or
push
push
dec
mov
cmc
xchg
inc
jae
push
fcmovu
sub
ror
out
push
jp
addr16
daa
mov
aaa
sub
push
jns
cmp
jecxz
sbb
cs
inc
adcl
and
adc
negl
mov
stos
insl
frstor
push
lods
loope
lods
das
in
repnz
xor
dec
pop
mov
outsl
insb
stc
ffree
mov
iret
lea
xor
jge
and
jno
add
adc
pop
mov
test
aam
test
test
roll
clc
adc
imul
sbb
mov
addl
pop
mov
pusha
adc
or
in
dec
dec
adc
cltd
rcrl
inc
xor
loop
cmp
stos
mov
test
iret
addl
mov
cmpsb
loopne
add
int
lret
push
cld
sbbb
cmp
adc
mov
inc
int3
mov
adc
mov
loop
cmp
hlt
aas
mov
jmp
and
inc
lret
sub
mov
dec
jmp
and
hlt
and
mov
xchg
out
addl
int3
xlat
cmp
fwait
pop
aas
sbb
sub
mov
adc
jg
dec
mov
adcb
loop
test
fcompl
or
fldt
sub
cs
dec
push
mov
pop
les
sub
or
std
pop
fists
inc
mov
inc
mulb
out
popa
outsb
clc
outsb
mov
es
lock
push
mov
sbbb
mov
das
loop
stos
jmp
fdiv
sub
pushf
or
lods
lcall
push
jg
scas
push
jbe
sub
adc
out
enter
fwait
cli
daa
xor
and
xchg
mov
pop
add
arpl
mov
inc
repz
and
xor
push
aam
inc
sarl
es
ret
sbb
pop
rcll
mov
jb
out
das
pusha
scas
push
xchg
push
out
jecxz
dec
sahf
test
mov
sarb
hlt
pop
lds
insb
and
jle
fdivl
fwait
and
push
clc
jecxz
mov
push
push
adc
or
mov
pop
lea
add
das
dec
pop
ljmp
mov
mov
pop
cmp
repnz
fdiv
rcll
cli
jo
sub
cwtl
shr
repz
mov
out
push
or
xchg
mov
inc
dec
dec
sarb
je
or
mov
shll
es
sub
popl
ja
inc
shll
sub
mov
jb
add
adc
test
mov
dec
icebp
push
sbb
or
adc
mov
inc
in
push
or
cli
data16
imul
repnz
gs
rolb
inc
mov
pop
or
add
ljmp
mov
mov
out
nop
je
lea
inc
mov
call
jne
shll
inc
mov
stos
mov
fwait
push
and
arpl
aad
icebp
adcl
adcb
sub
cs
mov
fs
mov
outsb
push
push
jp
out
jo
pop
ret
jo
stc
mov
les
shll
lret
mov
stos
jb
out
fiaddl
sbb
fcmovb
incb
into
mov
fistps
push
dec
sbbb
push
popf
mov
sbb
lods
jne
and
test
push
fimull
iret
pop
data16
mov
push
icebp
push
jo
sub
inc
jo
jnp
ljmp
mov
out
fwait
xchg
sub
or
jmp
fs
ds
mov
out
or
push
lahf
xchg
lds
in
inc
xor
outsl
cmp
ljmp
clc
pusha
adc
xchg
cmp
sbb
adc
dec
in
dec
push
pop
in
push
pop
inc
mov
aaa
adc
movsb
jne
imul
lea
popa
idiv
mov
pop
dec
xchg
scas
xchg
mov
popa
mov
lock
test
mov
fildll
lahf
adc
sbb
jns
and
xor
test
pop
sub
cmp
xchg
xchg
dec
push
hlt
lock
lea
cmp
cli
out
mov
test
cld
push
outsb
in
jbe
mov
out
cmp
test
add
iret
fwait
cld
or
pop
fs
xor
ja
inc
mov
pop
inc
pop
fisubl
fwait
sub
out
mov
leave
adc
jmp
or
test
add
mov
cmp
enter
lds
push
cmpsl
xor
jb
mov
xchg
leave
cwtl
mov
dec
clts
push
jmp
int
out
pop
jb
push
pop
aaa
xchg
push
xorb
sti
gs
cmp
xchg
xchg
jb
jne
into
cmp
adc
pusha
cmpsl
cltd
mov
aad
mov
lea
ja
mov
mov
lahf
iret
mov
push
adc
in
sti
ds
mov
bnd
ljmp
icebp
stos
inc
jb
sbb
test
xlat
mov
das
dec
add
loopne
and
xchg
dec
lds
fwait
jo
jl
xor
shrl
icebp
add
mov
push
fwait
mov
inc
push
cmp
add
inc
sahf
cmpsb
cmpsl
sbb
push
aaa
mov
mov
sub
stos
pusha
les
cmp
push
sub
das
aam
pop
mul
repnz
cltd
jmp
jle
repnz
repnz
stos
jae
lret
mov
xor
and
js
popf
sub
xchg
std
test
pusha
jbe
js
outsb
mov
cltd
iret
push
roll
sub
push
int
inc
lds
enter
mov
movsb
add
adc
lods
loopne
not
or
pmulhw
out
nop
jns
movsl
xchg
or
or
mov
sar
cmc
outsl
ss
and
fmul
rclb
iret
xchg
jnp
or
sbb
add
inc
dec
ljmp
pushf
sbb
pop
inc
adc
push
lea
mov
push
mov
mov
and
or
out
sbbl
inc
enter
sbb
inc
das
cmp
loope
imul
pop
xor
add
int3
sub
addr16
jae
fdivr
test
jl
inc
cmc
rcrb
cwtl
sub
scas
inc
dec
lahf
sarb
mov
aam
xor
out
jns
aas
rorl
mov
cmpsl
cmp
mov
sub
insb
xchg
loope
dec
push
and
inc
sbb
loop
sub
fiaddl
jge
insl
and
aam
mov
sub
push
cmp
pop
jb
stc
jnp
push
fcomip
loop
jl
push
clc
pop
arpl
pop
loopne
filds
and
ss
jns
jns
xchg
pop
mov
xchg
into
sub
push
aas
lcall
fcompl
sbb
loopne
ret
mov
fwait
xor
push
lods
add
lcall
sbb
push
test
fldln2
fidivrl
sub
xlat
pushf
lock
data16
dec
add
cmp
mov
xor
js
shrb
xchg
pop
inc
add
lahf
bound
mov
sub
roll
shll
lock
test
fwait
or
adc
xor
jg
out
or
mov
xlat
push
pusha
inc
lods
scas
sub
pop
loope
fldt
jecxz
lcall
dec
jg
jmp
dec
nop
sub
rorl
ds
mov
xor
adc
adc
cmp
test
ja
xor
or
ss
clc
adcb
jle
mov
cmpsb
shlb
jmp
mov
js
test
and
in
out
sbb
cmp
sbb
sub
in
rorl
icebp
sbb
sbb
xchg
adc
cmpsl
mov
dec
ljmp
or
cmpsb
sbb
fiadds
dec
aad
loop
and
xchg
push
pushf
sbb
sub
push
cmp
and
shl
rcll
add
push
inc
sbb
cmp
push
fwait
cmp
push
decl
add
xchg
or
sbb
xchg
stos
mov
push
sbb
sbb
inc
stos
jecxz
push
shll
pop
mov
mov
push
jnp
add
les
push
xor
adc
popa
and
xor
loope
ja
jo
dec
and
int
mov
mov
les
test
xchg
scas
shlb
loop
hlt
or
aas
push
mov
ds
imul
or
and
out
pop
push
lods
addl
cmc
adcl
mov
mov
mov
xor
and
cs
stc
ja
stos
hlt
xchg
dec
jae
mov
nop
inc
push
dec
aad
mov
or
mov
cmc
into
jl
nop
adc
adc
adc
jmp
pushf
gs
mov
aad
jnp
xor
and
push
adc
pop
jns
sbb
in
pusha
sti
ja
mov
sub
cmp
cmp
or
fiaddl
data16
push
pop
mov
sbb
icebp
fisubl
pop
loop
or
and
insb
rcrl
lea
pop
insl
jo
dec
popf
push
test
sub
add
out
and
rorb
imul
std
lcall
iret
sbb
lret
jecxz
xchg
shll
fcoms
stos
dec
dec
push
lcall
or
andl
cltd
sub
lods
imul
sbb
sbb
xor
cmc
fidivrs
mov
rorl
in
repz
cs
cmpsb
adcl
cmpsb
test
jae
sbb
sub
lea
icebp
shll
xchg
loope
sub
cmc
inc
movsl
pop
jmp
jae
or
cmp
push
lret
and
mov
enter
in
cli
or
mov
stos
pop
loopne
daa
repz
in
fstps
js
mov
mov
sub
cmp
adc
aam
cmp
push
or
loopne
jne
es
arpl
test
mov
js
sbb
outsl
lods
call
fcmovne
dec
mov
out
dec
adcl
add
fistl
notb
mov
lea
fdivs
and
sbbb
push
adc
pop
in
shl
inc
pop
mov
or
lret
mov
ret
xor
jb
lds
sbb
xchg
xor
push
call
jne
dec
cmpsb
dec
mov
mov
mov
sub
lods
dec
cmpb
fdivs
and
mov
imul
pop
add
push
rorl
dec
cmp
in
pop
iret
push
jecxz
jecxz
inc
cmp
notb
or
adc
std
pushf
sbb
sub
dec
imul
mov
jle
and
stos
bnd
xlat
fisubl
stc
jno
jmp
mov
cmp
pop
cmp
cmc
dec
sub
into
stos
adc
ljmp
cltd
jg
rorb
push
push
arpl
sub
xor
cmp
in
fwait
rolb
cmp
adc
das
enter
push
jb
repz
bound
adc
popa
das
adc
test
fmull
ja
mov
mov
mov
jecxz
pop
hlt
and
into
dec
mov
pop
adc
adc
lret
jmp
shl
aas
hlt
push
jle
cld
movsl
mov
push
fcmovnbe
test
push
mov
sbb
sahf
fcoms
jg
test
popa
xor
int
insl
mov
test
mov
iret
fneni(8087
jno
xor
lret
hlt
or
cmp
int
mov
sbb
cmp
fadd
stos
jae
insb
sub
jnp
push
mov
sbbb
push
mov
out
lahf
lods
push
push
les
cmp
inc
pop
out
mov
add
push
cs
roll
pop
into
jne
mov
jle
lods
ret
jnp
push
pop
arpl
cmpsl
dec
out
push
mov
xchg
ds
sub
inc
adc
repz
add
jae
or
daa
jnp
adc
enter
rcll
xorl
enter
push
mov
cmp
cmp
cmpsl
cwtl
shlb
inc
and
lock
xor
rol
out
pop
addr16
pop
lds
out
sub
xchg
cmp
add
cmc
pop
insb
out
adcb
dec
xor
int
sbb
rorl
cmp
fs
clc
data16
add
push
add
sbb
icebp
inc
aaa
mov
in
sub
pop
rcll
enter
popf
xchg
mov
mov
pusha
pop
mov
xor
sub
inc
xchg
data16
add
cs
enter
enter
cmpsb
push
jno
test
add
fsubl
sbb
test
aas
jmp
movsb
mov
rolb
mov
xchg
jnp
cld
stos
incl
or
pop
outsl
jo
or
lahf
lret
inc
fs
and
ret
js
xchg
mov
push
repz
push
mov
sbb
jae
nop
mov
xchg
mov
outsl
push
inc
test
jp
test
cs
ds
push
xchg
or
jo
bound
sub
add
pop
fisttpl
stos
shrl
test
aam
rorl
scas
lahf
and
jp
loope
xchg
clc
test
inc
mov
push
ret
popf
mov
imul
in
pop
std
fsubr
dec
sar
fnsave
sahf
cwtl
xor
movsl
or
jle
mov
cld
fildll
lods
mov
cmpsl
xchg
and
inc
cmp
enter
out
in
addr16
std
mov
es
jge
imul
mov
sub
sub
cmpsb
sub
scas
clc
ljmp
ja
push
adc
imul
or
repnz
fidivrl
dec
dec
cmp
sub
mov
call
xor
int3
arpl
xor
push
mov
sbb
fs
aad
mov
mov
sahf
cmpsb
into
xchg
cltd
lds
pop
jmp
insl
xor
fidivs
mov
fwait
push
das
xchg
jo
mov
mov
fs
adc
sbb
ja
gs
and
add
js
out
xor
push
push
arpl
imul
sub
xor
lds
pop
xchg
jns
iret
lea
lock
lahf
or
inc
dec
jle
vandpd
mov
mov
sub
adc
insl
cmpsl
pop
into
xchg
push
movsl
or
fimuls
mov
std
fsub
test
add
int
push
out
add
push
movsl
push
jmp
adc
in
pop
fdivrs
pop
fildll
imul
fsub
ja
das
xchg
and
nop
test
pusha
call
jo
stos
aas
sub
dec
push
imul
lods
daa
pop
cmp
pop
cltd
and
pop
xor
push
stos
jo
scas
pusha
push
mov
rorl
push
sbb
in
push
inc
adc
std
testl
insl
icebp
lret
push
mov
out
outsb
dec
not
mov
es
nop
mov
and
ja
sub
inc
pop
jecxz
mov
or
adc
mov
in
mov
icebp
pop
jns
int3
push
jl
sbb
xlat
push
loop
xor
out
inc
xchg
dec
cmp
pop
add
cmp
test
xchg
pop
adc
dec
mov
inc
mov
pop
fwait
testb
adc
mov
pop
enter
movsl
pop
jo
cmp
xor
cmp
push
icebp
scas
fisubs
push
push
pop
scas
jae
das
push
mov
xchg
and
xor
cmp
sbb
sarl
push
in
icebp
mov
and
inc
fstl
jne
fwait
mov
jns
sti
or
loope
pop
xchg
fists
fwait
and
lret
jo
dec
ljmp
loopne
hlt
jno
or
xchg
cwtl
shr
fldl
movsl
jg
mov
shl
mov
pop
data16
aaa
inc
ja
out
shl
inc
das
aaa
lret
repz
cli
cmpsb
xchg
fwait
mov
cmpsl
fstl
and
addb
dec
ljmp
mov
nop
cmpsb
mov
ret
add
sub
and
iret
inc
nop
cli
mov
xlat
add
std
flds
dec
out
sahf
mov
sub
int
cmpsb
out
aaa
sti
mov
pop
aas
outsb
outsl
or
lock
push
xor
xchg
scas
jg
out
jns
aad
push
dec
cmp
mov
subl
xor
int
pop
mov
in
mov
rorb
icebp
into
fisubs
mov
inc
ret
push
adc
inc
flds
push
pop
jmp
and
push
out
fimull
mov
es
fisubs
xchg
mov
sub
loopne
std
mov
decl
js
xchg
xchg
loop
jno
jp
insb
mov
jns
pop
pusha
in
repz
lahf
mov
mov
pop
jmp
jmp
mov
icebp
mov
sar
pusha
mov
es
mov
sub
aaa
jbe
inc
gs
or
vpsrlw
or
js
test
mov
insb
xor
xchg
mov
cmpsb
or
jg
out
fistpl
inc
sbb
adc
insb
pop
sbb
mov
test
fstpl
sbb
jne
mov
test
out
ja
outsl
push
pop
and
mov
mov
aas
cmp
pop
push
xchg
rsqrtps
xor
test
scas
add
pop
add
sub
inc
xorl
loop
jle
scas
fs
cmp
pushf
outsb
popf
jb
aad
jmp
sar
and
pop
in
cmc
dec
mov
out
dec
mov
js
xchg
leave
mov
pushf
iret
mov
icebp
mov
or
loopne
cli
cmp
outsb
sub
popa
int
push
imul
push
hlt
sbb
or
lret
dec
jmp
inc
lcall
sub
adc
setns
inc
sbb
mov
or
lcall
jmp
cld
push
popa
or
in
inc
push
ret
adc
add
cmpsb
jl
add
inc
pop
add
sub
ret
addr16
lahf
or
lret
ds
test
dec
shlb
mov
xor
add
sub
xchg
jne
sbb
fstpl
test
bnd
gs
lds
mov
or
jns
cmp
in
mov
ror
adc
cld
dec
pop
scas
addr16
pop
addb
movsl
inc
rcrb
pop
test
outsb
shlb
xchg
and
cmp
push
push
testl
xchg
int3
push
mov
and
std
movsb
push
ljmp
sbb
adc
daa
xor
dec
mov
adc
ret
xor
pop
push
cmpsb
out
push
add
xchg
popa
icebp
ret
das
inc
push
push
shl
pusha
orb
psubq
jnp
xor
ss
xlat
lcall
movsl
shlb
repnz
jmp
in
insl
orb
pop
andb
inc
inc
add
mov
pop
in
mov
inc
xchg
loop
sub
mov
inc
inc
mov
mov
mov
add
test
insl
clc
mov
and
xchg
dec
push
out
mov
xchg
sbb
push
fwait
inc
sbb
inc
dec
adc
lcall
icebp
rcll
sub
scas
jbe
push
cmp
lods
push
std
cmp
mov
push
mov
ret
jne
lods
fisubl
xlat
stc
jmp
or
xlat
mov
cmp
inc
cmp
test
jle
iret
adc
sub
cs
loopne
aad
inc
in
mov
mov
mov
xor
inc
negl
in
cwtl
mov
add
lret
dec
cs
rclb
jbe
inc
xor
mov
pop
or
mov
inc
repz
inc
nop
adc
mov
xor
std
testb
pop
fmuls
push
pop
mov
lret
xchg
or
and
stc
sti
mov
ljmp
nop
push
pushf
push
mov
jmp
frstor
pop
adc
xor
scas
xchg
jno
cmpsb
sbbl
pop
sahf
pushf
xor
add
shlb
enter
std
aas
mov
aad
movsb
and
mov
test
lea
push
jnp
fistps
push
jge
push
outsl
mov
dec
lods
push
inc
lds
pop
mov
sbb
cmp
and
xor
sub
sub
pop
cmp
and
movsb
jmp
mov
pop
rolb
xchg
push
jmp
fsubr
pop
mov
inc
jmp
hlt
lahf
fstl
sti
sub
out
sbb
fwait
sub
ds
dec
lods
jecxz
mov
jge
popa
lods
push
stos
pusha
and
xor
xchg
loop
mov
xchg
xchg
xor
leave
inc
movsb
inc
xchg
adc
stc
imul
lcall
cmp
popa
addr16
mov
lret
xchg
dec
lods
decl
in
les
call
mov
test
lods
mov
pop
fnsave
cmc
xchg
aam
add
sub
mov
aad
enter
sbb
pop
xchg
mov
cmpsl
push
movsb
lret
dec
sbb
sbb
in
xor
push
or
pop
test
mov
call
mov
popf
jmp
rcr
mov
inc
lods
dec
push
rclb
scas
lret
fidivs
int3
xor
pop
mov
rcl
ror
lods
sbb
ret
les
inc
jae
and
cmp
das
lock
aas
pop
ret
sub
cmpsl
cltd
outsl
or
add
in
mov
push
enter
sbb
adc
loope
sbb
stos
xchg
mov
rclb
fsub
in
jb
cwtl
cmpsl
sbb
testb
sti
cmc
add
or
hlt
adc
cltd
dec
xchg
aad
sar
sbb
adc
je
cltd
sbbb
shlb
cltd
cmpsl
cmc
mov
add
sub
and
scas
sub
cli
ror
rcl
cmpsl
inc
add
out
dec
lods
pop
movsl
sahf
or
inc
jl
mov
mov
fstl
int
xchg
popa
lods
loop
or
aad
push
cmpsl
bound
mov
or
cmc
add
mov
mov
les
aad
push
test
fsubrl
xor
shl
jl
sbbb
fcoms
fcoms
rcr
sub
movsb
cmpsb
fsub
xchg
roll
add
mov
loopne
add
or
in
push
rclb
cmc
faddl
push
pop
roll
ljmp
fistpl
jo
ret
shrl
mov
inc
push
and
mov
enter
out
ja
pop
push
popf
pushf
mov
inc
or
test
push
jp
pop
xchg
fdivs
outsb
ss
pop
test
and
lock
ja
lods
andb
mov
inc
mov
pop
lret
pop
dec
fcmovnu
scas
xchg
test
cmp
add
jmp
fsubs
loope
add
ljmp
cs
inc
jnp
mulb
nop
lock
lcall
hlt
ret
lods
sub
cmp
dec
and
movsb
inc
mov
movsl
jb
les
jns
cltd
sarl
in
aam
mov
push
imul
xchg
frstor
cwtl
jmp
add
inc
aad
imul
lods
cs
mov
js
cmp
jne
push
test
jmp
cmp
push
lock
adc
cmpsl
cmpsl
push
mov
fstl
arpl
aad
cmp
jmp
pusha
mov
inc
dec
movsl
in
add
popf
in
fcomip
xor
jl
jle
mov
aad
daa
jecxz
adc
jl
loopne
sub
jmp
xor
pop
pop
cmc
push
mov
cmpsl
mov
adc
lods
mov
push
in
fwait
dec
sbb
jnp
mov
mov
cmpsb
test
stos
add
in
cmc
mov
and
imulb
mov
repnz
push
sub
mov
pusha
es
fsubrl
xchg
dec
bound
lods
xchg
lea
rorl
dec
mov
cwtl
aaa
push
or
inc
xchg
mov
jl
sarb
xchg
call
push
loopne
mov
lds
das
push
mov
mov
rol
popa
jmp
or
cmpsl
mov
rcrb
leave
inc
mov
cmpsl
popf
sbb
cmpl
jmp
imulb
push
jecxz
divl
mov
inc
xor
adc
sbb
mov
cmpsb
outsl
and
out
in
push
push
and
adc
pop
cltd
inc
push
lret
cmp
dec
sbbl
call
push
xor
push
scas
jge
popf
in
pop
jg
icebp
add
in
shll
mov
shl
sarl
adc
mov
lds
and
clc
pop
js
inc
mov
cltd
mov
aas
shrl
add
loope
pushf
fisubs
imul
xor
push
sbb
ret
pop
xchg
inc
cld
repnz
adc
repz
mov
es
sarl
pop
ja
cvtdq2ps
pusha
test
xor
push
into
mov
data16
in
add
xor
add
and
mov
adc
sub
push
mov
ss
adc
add
adcb
push
cmp
xor
ljmp
xchg
jecxz
cwtl
mov
sbb
add
cs
frstor
loope
jns
aam
addr16
aam
outsl
xchg
loop
add
imul
jne
pop
cmp
mov
rcrl
inc
es
mov
cmp
add
mov
ficoms
dec
mov
icebp
sbb
xchg
lock
fildll
ja
iret
cmp
push
popa
decl
icebp
push
addl
pop
ret
cld
repnz
push
lock
sbb
test
xor
outsb
lret
popa
arpl
or
in
and
push
jp
and
mov
cmp
stos
pop
sbb
mov
xchg
xlat
inc
cmc
pop
jmp
mov
sbb
xor
mov
mov
std
test
rorb
sub
jo
cwtl
push
adc
xchg
mov
fs
sbb
outsb
aaa
mov
xchg
lcall
jle
out
fadd
je
pop
repnz
cs
fiaddl
test
mulb
jne
int
add
rcl
je
enter
jne
or
push
cmpsb
insb
jge
ja
int
adc
jo
sub
scas
add
sub
jg
cmp
gs
and
mov
orl
fsub
mov
ret
arpl
data16
out
jae
int
ficomps
xor
jg
dec
ss
and
int
scas
inc
cli
jne
pop
push
cmpsl
ret
scas
sub
inc
push
int
push
dec
bound
das
stos
inc
lods
xchg
jg
sbb
into
adc
lahf
fwait
xchg
adc
mov
pop
lods
sbb
cwtl
pop
inc
rcrb
popa
aaa
orl
in
test
mov
jmp
scas
fs
jmp
jo
xor
out
xchg
inc
jle
sub
movsb
inc
cmpsb
adc
repnz
mov
out
push
xchg
jae
sbb
fildll
fiaddl
jb
in
push
arpl
lcall
ficompl
mov
pushf
push
lods
mov
dec
lock
sti
out
mov
and
and
orb
jne
push
imul
sub
jno
pop
pop
pusha
mov
lods
push
push
mov
stos
mov
into
lods
jle
lcall
or
and
jb
fsubr
mov
pop
jecxz
inc
xchg
jns
pop
in
add
xchg
xchg
sub
adc
das
les
sbb
test
scas
add
aad
mov
xchg
fldt
mov
pop
mov
stc
mov
stos
xchg
push
sbb
and
push
mov
dec
rorb
pop
shll
mov
ret
aam
adc
out
jge
jge
scas
mov
push
data16
mov
push
pop
jno
mov
xor
adcb
loopne
mov
xchg
shll
sbbb
cwtl
push
ja
shl
int3
or
mov
xor
sti
daa
jle
push
popw
inc
push
push
rclb
mov
adc
fdivrp
cli
mov
icebp
fwait
mov
xor
cmpsb
xchg
sub
and
xlat
add
cmpsb
mov
shrl
nop
jns
ljmp
xchg
int
pop
sub
pop
jmp
mov
xchg
bound
lods
jmp
and
rcrl
or
imul
jne
xchg
cmp
push
lods
lock
fwait
addr16
sbb
ret
push
pop
jbe
fldenv
jge
push
push
pop
call
pop
inc
fsubrl
push
gs
ja
cli
insb
loope
imul
jbe
sub
leave
add
mov
rclb
jmp
cmp
pop
xorl
or
cmp
xor
insb
imul
cmp
inc
scas
fldenv
repz
in
mov
out
pop
sub
lcall
mov
ret
lret
xor
jae
inc
mov
cs
punpckhdq
jbe
outsb
pop
shr
dec
sti
cmp
js
call
loopne
pop
enter
xchg
mov
loop
sub
jle
jecxz
insb
hlt
mov
cmc
sahf
stos
subl
test
mov
test
cltd
jge
sub
popf
repz
adc
and
xchg
test
js
stos
pop
aaa
and
mov
xor
loop
push
jge
and
popa
pop
lret
cmp
daa
cwtl
scas
xchg
movl
inc
mov
das
push
data16
adc
mov
lods
shlb
mov
jmp
rcl
mov
push
daa
cmp
sub
test
jae
xor
pop
sub
je
addr16
int
jbe
pop
repnz
sbb
outsb
push
sbbb
inc
mov
push
imul
decl
jnp
sbb
push
out
mov
outsl
jl
movsb
rcrl
or
xorl
sbb
in
and
mov
jg
inc
fsts
lcall
mov
cmp
incb
pushf
adc
cld
adc
daa
nop
add
addb
or
pop
xor
int
popa
imul
mov
sbb
jne
push
nop
fnsave
pop
shl
and
movsb
sbb
lds
test
gs
aaa
imulb
mov
ret
or
xchg
imulb
sbb
out
scas
mov
sahf
out
pop
pop
and
icebp
rol
aam
xor
push
lock
bound
dec
push
mov
cmp
ds
psrld
int
ficoml
out
scas
lcall
cmpsl
dec
int
insb
int
adc
pop
pop
pop
xchg
or
lret
aam
dec
int
and
mov
popa
pop
out
jmp
in
adc
sub
sub
lahf
or
lcall
pop
xchg
test
daa
call
es
sets
ja
pop
rolb
mov
outsb
outsb
stos
dec
stos
sbb
adc
jp
push
mov
push
in
loop
pusha
xchg
fs
test
push
fnstcw
in
imull
push
icebp
shrl
hlt
jl
cmp
lea
mov
xchg
call
fadds
ljmp
sbb
cmp
jl
fs
lret
adc
out
jge
lcall
fs
xor
lcall
stos
or
xchg
sbb
pop
repnz
jne
lcall
adc
out
pop
popf
in
xchg
mov
lcall
mov
pop
add
bnd
jbe
pop
sbb
cmp
adc
mov
rolb
push
cltd
idiv
sbb
pusha
jge
cli
scas
sub
mov
addr16
dec
add
fdivrs
bound
pop
idivl
inc
push
adc
jns
popf
fistpl
push
faddp
and
addr16
pop
add
loop
movsl
push
xchg
popf
shll
inc
xchg
dec
sbb
pop
fisubrl
mov
mov
ja
push
jmp
mov
mov
cmp
cmpsl
imul
or
mov
ret
in
mov
call
jge
lock
das
lret
pop
clc
bound
mov
imul
mov
jmp
add
stos
icebp
jbe
negb
loopne
sub
fidivl
jmp
jl
cmp
shrb
pop
push
loope
test
pusha
hlt
sub
mov
ss
scas
jns
push
out
ds
ja
xchg
aas
adc
sub
fildll
lcall
mov
push
dec
call
mov
jge
pmaxsw
incl
xchg
pusha
fdivrl
jnp
imul
mov
lods
pop
jno
or
jp
aad
fildll
push
jle
mov
test
js
lods
out
icebp
pop
lods
xchg
add
mov
xor
mov
shl
call
push
iret
mov
xor
jns
rolb
lret
xchg
ret
inc
ficompl
loope
lret
mov
in
adc
push
jmp
add
fsub
push
es
mov
lahf
pop
cld
push
stc
add
pop
outsb
adc
xor
cmp
jb
clc
enter
adc
push
pop
mov
jns
pushf
jle
mov
cmc
out
nop
sti
cli
leave
dec
xor
rcrl
ljmp
sbb
fcmove
in
pusha
jg
cs
sub
inc
in
dec
lods
push
sub
dec
into
lcall
mov
sub
sti
decl
mov
pop
or
fiaddl
ss
out
jle
lds
push
lods
in
sub
cld
lret
sub
mov
and
repnz
push
stos
inc
nop
lods
xor
pop
call
inc
insl
pop
loope
mov
in
push
mov
lods
cwtl
jmp
jmp
sbb
mov
testb
and
jge
xlat
mov
mov
or
jmp
mov
jmp
cs
jmp
icebp
je
imul
loopne
in
mov
leave
inc
subl
mov
popw
out
int3
mov
insl
xor
data16
add
mov
fnstenv
pop
push
mov
mov
in
mov
sub
or
xlat
data16
or
mov
out
fistpl
fsubr
inc
sub
jbe
cmpsb
jae
mov
push
out
pop
or
mov
push
and
into
aas
test
inc
out
lret
sbb
lock
pop
xor
jg
sub
repz
ja
movsl
dec
faddl
popa
sbb
sbb
sub
mov
jne
js
pop
cltd
jle
xchg
popf
add
hlt
adc
push
or
fs
insb
adc
enter
dec
in
or
stos
loopne
inc
xor
add
adc
inc
cmp
bound
push
hlt
loopne
mov
inc
xor
mov
mov
lods
aas
enter
lods
ds
ljmp
arpl
outsl
xor
ss
and
fs
in
and
xor
sub
in
push
sbb
arpl
addb
ljmp
mov
push
cli
add
push
stc
or
repnz
repnz
adc
jmp
push
jmp
mov
movsl
jle
fisubs
roll
mov
mov
push
gs
sub
fsubrs
jg
scas
jno
jo
cs
pusha
lcall
in
xor
iret
out
sti
sbbl
jl
add
subl
xchg
or
cmc
loop
imul
call
adc
stos
adc
leave
dec
out
pop
xor
pop
xchg
push
xchg
je
ja
and
cwtl
or
out
imul
inc
xor
sbbl
mov
sbb
inc
push
adc
mov
or
xlat
in
daa
nop
jns
and
lods
sub
std
xchg
fisubs
cmc
add
push
push
lock
inc
out
daa
pop
mov
nop
adc
pop
stos
dec
imul
mov
dec
lret
jne
mov
xchg
mov
sub
dec
pop
es
les
pushf
out
pop
push
test
sbb
popf
push
xor
jnp
and
inc
or
orb
fs
jne
filds
ja
iret
sbbl
lahf
jo
testl
and
ret
push
push
clc
insl
clc
jl
sarl
adc
sbb
jecxz
fdivrp
int3
adc
int3
mov
pop
mov
cltd
fs
out
push
imul
les
nop
mov
imul
addr16
mov
lds
movsl
sbbl
inc
sbb
out
pop
es
xchg
push
mov
mov
test
adc
rclb
cwtl
leave
cmp
push
in
movsb
jmp
cs
adc
xor
adc
jecxz
ss
push
or
push
ret
xchg
add
inc
inc
stos
inc
loopne
popa
mov
pop
xchg
jne
xor
mov
mov
js
les
leave
pop
insb
pop
jne
mov
sub
popa
js
inc
xor
outsb
ljmp
sub
jns
pushw
lock
nop
pushf
insb
or
jb
pop
hlt
and
out
sub
rcrb
repz
popa
cmpsl
ljmp
pop
ss
stos
jnp
stos
cmp
xor
xor
inc
insl
xchg
push
popa
scas
fbld
enter
orb
sub
cmpsb
sub
testl
aam
mov
jle
xor
imul
outsl
rcrb
dec
pop
cli
mov
lds
out
pop
fisttps
ret
cmpb
test
fnstcw
push
mov
xchg
pop
jb
shl
loop
cli
lea
and
or
lock
ss
xchg
mov
adc
push
mov
bound
mov
mov
xchg
lods
pop
push
sarl
and
lds
stos
sbb
sbb
out
adc
pusha
ja
fbld
enter
ss
lods
clc
in
in
cmp
in
pop
flds
shlb
mov
add
icebp
in
test
jp
dec
push
ret
negl
lock
or
cld
imul
mov
xchg
pusha
out
mov
cltd
shll
cli
aad
xchg
push
push
psrad
xor
js
jne
or
sbb
loope
ficoms
lret
test
rol
ja
test
pop
lcall
cmpsb
lock
mov
inc
mov
dec
mov
pushl
int3
test
dec
mov
fcoml
mov
fiadds
gs
and
rcrl
cld
rcrl
add
cltd
jns
mov
repz
and
add
inc
shll
push
cmpsl
icebp
mov
out
ret
sub
iret
lods
lods
dec
aaa
lahf
push
mov
popa
push
cmpsl
xchg
xchg
mov
lock
pop
xor
sub
mov
pop
xchg
pop
lods
xchg
add
ret
cmpsb
pop
mov
cmc
scas
push
push
and
inc
mov
adc
inc
in
test
lret
popf
dec
pop
inc
pop
sahf
int3
stos
aas
inc
out
dec
cmp
idivb
inc
dec
jmp
sub
mov
or
lods
sub
sbb
pop
dec
push
das
out
aam
sbb
lea
xchg
inc
movsl
dec
inc
imul
call
inc
fadd
inc
or
subl
mov
in
cli
addr16
cltd
ficomps
jo
cmp
lret
inc
test
jmp
pop
push
mov
jbe
mov
jl
mov
in
loop
sbb
pop
dec
shll
or
push
mov
lcall
loopne
cs
pop
imul
push
mov
repz
ljmp
les
mov
mov
pop
pop
dec
adc
repz
add
adc
mov
jno
xchg
sub
scas
jns
iret
mov
es
pop
mov
sarl
lock
fsubp
lods
shlb
pop
insl
movsl
cmpsl
add
stos
lret
fildl
mov
xchg
mov
jp
lea
into
push
fidivs
orl
int
adc
rolb
dec
mov
or
insl
xchg
mov
ljmp
jo
push
mov
fstps
mov
push
test
loopne
mov
push
add
insl
cmpsb
pop
fcompl
mov
test
daa
mov
in
fists
pop
xlat
mov
in
out
stos
fidivs
adc
ss
cmp
andb
fwait
mov
test
mov
xchg
popf
mov
stos
aas
bound
sbb
int3
in
xchg
sub
pop
leave
cld
in
lea
imul
jno
mov
clc
ret
mov
test
or
lcall
repnz
sbb
sbb
cmc
xor
sbb
pop
js
mov
inc
sub
stos
sbb
cmp
lahf
stos
sarl
sub
push
and
cmc
lahf
inc
jns
add
jge
fdivl
out
xor
je
dec
inc
std
lcall
add
fistl
jle
cwtl
ret
jne
insb
sti
cld
sub
loopne
jg
out
pop
out
or
adc
cmp
dec
fwait
es
pop
xchg
pop
cmp
jne
jae
sub
cmp
push
mov
aad
arpl
data16
fnstcw
mov
cltd
xor
in
xor
adc
push
out
lret
pop
xor
mov
mov
pop
sub
in
test
fiadds
sbb
and
mov
ss
adc
add
cmp
dec
mov
imul
or
or
imul
jae
jmp
lods
adcl
xlat
notl
xchg
ret
push
mov
int3
sbb
xor
pop
test
imul
and
jle
movsb
add
fxch
sub
adc
sub
sub
inc
pop
loop
pusha
ret
insl
enter
mov
mov
adc
pop
pop
xchg
subb
div
sbb
mov
stos
inc
push
mov
jb
pop
dec
mov
test
or
arpl
and
popa
popf
and
fnstsw
mov
xlat
stos
pushl
jb
mov
loopne
repnz
cmp
pop
push
test
jno
test
inc
loop
xor
cli
loopne
sahf
cmpsb
mov
jne
xchg
cltd
cmp
and
or
cmpb
loope
int
enter
in
mov
test
mov
ds
loope
jae
add
fcoml
push
test
jp
adc
mov
ljmp
adc
sub
lds
push
icebp
push
sub
or
imul
sbb
stc
lods
test
cmpsl
lcall
push
jbe
fldl2t
lock
test
cmpsb
jno
js
xlat
inc
push
dec
xor
jmp
jle
sbb
mov
cmp
mov
dec
mov
push
push
lret
test
push
inc
outsl
push
fxch
dec
ret
cld
or
fs
es
insb
xor
stos
fwait
in
xchg
or
ret
jp
dec
cmp
ljmp
adc
push
sub
xchg
pop
stos
shrb
mov
inc
xchg
xchg
or
mov
movsb
aad
pop
add
lahf
pop
inc
orb
mov
sti
push
int3
mov
jp
mov
fcom
or
inc
test
cmp
dec
iret
roll
jnp
or
mov
das
mov
jae
push
add
scas
in
xchg
jbe
andb
int
les
cmp
push
loop
push
add
jge
jmp
push
sub
outsb
sbb
data16
dec
push
scas
sbb
add
xor
push
and
mov
aad
stos
pop
int
inc
sbb
mov
mov
cs
sub
clc
stos
add
divb
dec
dec
iret
and
test
testb
push
loopne
in
aaa
cltd
pusha
aas
dec
fdivl
jg
test
sub
pop
sbb
out
fdivr
sub
fists
gs
jae
and
outsl
inc
push
and
int3
loope
and
in
xchg
cmc
add
sbb
call
dec
sbb
mov
repz
call
mov
push
das
jmp
aad
adc
push
cmp
and
das
inc
mov
in
jb
lahf
mov
int3
cs
adc
adc
inc
or
rorb
lea
mov
cmp
mov
mov
add
out
sbb
dec
mov
xor
leave
and
xor
icebp
enter
sbb
jp
outsb
mov
lcall
cmc
outsb
das
movsl
push
pop
sub
xchg
or
ja
add
mov
cltd
inc
das
inc
jbe
jmp
push
les
sbb
stc
xchg
leave
mov
lock
xchg
mov
inc
insl
gs
push
lea
leave
sti
jl
inc
outsb
cmpsl
cmp
jne
mov
aad
xor
push
xchg
test
outsl
in
fbstp
xchg
adc
cli
inc
sbb
cmp
xchg
pusha
xchg
lret
mov
rcrb
idivl
mov
xchg
lock
ss
orl
adc
imul
xor
push
inc
cmp
cmpsb
push
lahf
cmpsb
xlat
dec
xor
fiadds
dec
sbb
add
add
lahf
pop
dec
add
jb
mov
popf
jge
sbb
sub
dec
add
and
rcrl
mov
pop
leave
jnp
sbb
rcr
sub
sbb
nop
xor
xor
xchg
std
std
aam
in
shll
orl
jle
lock
bound
fcmovne
rcl
popf
xlat
je
dec
std
pop
xchg
notb
or
js
mov
mov
cmp
cltd
out
int
mov
xchg
inc
stos
xchg
pop
iret
aas
inc
lret
jno
add
jmp
pop
push
mov
push
pop
fiadds
cmp
mov
push
fnstenv
sub
fcmovu
ja
sar
push
daa
aaa
fbstp
mov
sahf
pop
test
test
in
add
int3
rep
xchg
mov
std
sbb
jmp
jecxz
hlt
inc
xchg
out
scas
repz
sbb
ret
mov
test
mov
jnp
push
mov
dec
mov
mov
lods
dec
cmp
jne
sbb
mov
into
out
sub
mov
dec
ja
sub
mov
mov
dec
push
jg
add
lods
jge
xchg
pop
cmp
stos
nop
xchg
inc
rorb
cmp
scas
adc
popf
cltd
pop
cmp
and
stc
xchg
mov
and
pop
les
aad
dec
rep
inc
repz
and
stos
nop
xchg
jne
out
dec
lock
xchg
icebp
jecxz
mov
sar
imul
and
and
test
aad
push
test
inc
mov
adc
xchg
sub
imul
data16
mov
adc
cli
es
cmp
enter
jo
andb
xchg
les
out
mov
insl
aaa
mov
rcll
loop
ja
mov
lret
mov
dec
jp
dec
cltd
jecxz
stc
ljmp
sub
pop
xchg
loope
loopne
sub
sub
insl
incl
push
push
adcl
loopne
mov
ljmp
xor
pop
movsl
push
jl
push
mov
or
lcall
mov
xlat
and
outsl
cmp
xor
in
mov
and
or
ret
and
lcall
mov
je
or
testl
cmpsb
push
add
mov
pusha
gs
aam
dec
sub
aaa
mov
pop
sub
lea
and
xchg
xchg
out
das
pop
adc
adc
fisubrl
cld
push
stos
xor
mov
mov
push
sti
pop
push
les
or
mov
ljmp
lds
idiv
orb
das
inc
sti
dec
cmp
in
inc
jmp
addb
pop
sub
ficomps
mov
fwait
ret
fnstenv
sbb
mov
mov
adc
lea
pop
shll
movsb
out
pop
xor
test
lods
imul
pop
mov
test
mov
xor
push
aad
cmpsl
fisttpll
cld
adc
pop
jns
or
sbb
adc
fsubl
rcll
add
pusha
pop
push
cmp
dec
in
mov
repnz
add
iret
push
lock
inc
clc
or
xchg
imul
lods
dec
mov
ja
ds
jb
mov
cli
adc
cmpl
aas
iret
push
adc
mov
jo
cltd
shrb
std
xchg
out
das
pop
imul
jbe
nop
nop
or
imulb
cmp
cmp
movsl
int3
orb
dec
lods
cmpsb
push
int
add
jecxz
xchg
add
cmp
fadd
sbb
pop
pushf
sbbl
push
ja
push
mov
pop
mov
lds
fstps
xor
cmp
lock
mov
inc
push
outsb
aad
stos
pop
xor
call
or
jmp
mov
inc
pop
pusha
popf
xor
xchg
ss
hlt
jb
push
sahf
inc
imul
push
xchg
adc
rcr
and
adc
pop
in
or
push
cwtl
or
int3
or
popf
push
icebp
lahf
out
sbb
dec
xor
sbb
cmp
jmp
xchg
lret
std
out
nop
jp
scas
fs
sbb
push
imul
ficomps
movsb
mov
push
inc
popa
and
mov
cwtl
mov
outsb
roll
or
lea
mov
inc
inc
out
out
rorl
rolb
or
xor
dec
push
pop
and
movsl
jo
je
sub
xor
mov
adc
lret
fimull
pop
lcall
cli
xchg
fdivs
cmpb
ja
add
or
js
cld
nop
push
mov
sbb
lods
inc
jge
jns
subb
clc
testb
cmp
mov
insb
fucomp
xor
mov
xor
or
rol
inc
jo
popa
mov
mov
or
fs
and
test
cmp
add
fs
jp
aam
je
jb
and
sar
push
or
jmp
cmp
movsl
clc
lret
or
lea
roll
pushf
lods
xlat
ds
and
fcomps
xchg
inc
loop
push
mov
cmp
add
clc
pusha
xor
sub
jecxz
jno
adc
mov
adc
add
pop
xor
hlt
mov
or
dec
jmp
push
das
fildll
mov
test
jns
jnp
inc
sar
test
fisttpll
bound
imul
push
mov
popa
cmpsl
imul
inc
pop
push
fnstsw
ja
push
adc
jg
addr16
iret
repz
jecxz
sub
pop
lret
dec
push
cmc
ss
mov
jb
push
adc
cli
std
stos
inc
or
cmpsl
daa
pusha
mov
xor
pop
insl
dec
dec
mov
cmpsl
jae
subl
lock
ss
ljmp
clc
jp
xor
cmpl
stos
fwait
addb
popf
mov
cmpl
inc
aaa
jbe
sbb
imul
dec
aad
int
xor
imul
nop
push
sbb
add
cmp
jg
cmp
shll
jo
push
out
lods
fs
lcall
lret
pop
xchg
xor
aad
lret
push
ffree
pushf
mov
enter
mov
aas
jle
inc
cld
sbb
dec
mov
mov
iret
sbb
mov
inc
sahf
cli
add
pop
leave
pushl
jbe
push
dec
and
sbb
cmp
int3
push
aam
inc
aaa
add
mov
mov
push
rcpps
push
roll
pop
inc
orb
and
mov
dec
pop
insb
int3
sbb
add
fnstsw
mov
lahf
cltd
fcompl
loop
mov
popf
dec
bound
test
loope
dec
popa
mov
dec
cmp
xchg
add
jp
in
lcall
cmp
mov
jge
dec
ljmp
scas
or
or
jl
lods
mov
and
xchg
or
push
out
loop
or
jno
mov
cmpsb
mov
sbb
out
xchg
mov
test
inc
sbb
mov
dec
sbb
adcl
in
out
xlat
fcoml
repnz
pop
add
fs
push
xor
push
mov
add
lahf
shl
and
mov
push
push
pop
cmp
push
cld
pop
push
pop
pop
push
adcb
and
iret
mov
inc
mov
xchg
jge
fcomp
es
push
cmp
into
mov
sub
adc
dec
jne
loope
xchg
and
repz
xor
jne
inc
sub
adc
fwait
jecxz
add
dec
lcall
popf
pushf
imul
test
xchg
sbb
push
dec
rorb
xor
adc
jl
jp
jno
xchg
dec
xchg
cmp
js
popl
add
ljmp
adc
ja
daa
add
inc
nop
out
xchg
xor
decl
xor
push
int
int
xchg
fnstenv
xchg
cmc
les
popa
inc
mov
adc
std
arpl
test
sub
pop
in
faddp
xor
jg
pop
pop
push
movsb
jg
test
es
push
mov
mov
mov
push
call
mov
hlt
loopne
mov
mov
push
es
test
inc
dec
sub
lods
repnz
stc
ljmp
sbb
push
xor
and
mov
in
pop
test
testb
xchg
data16
mov
movsb
ds
out
fwait
cld
mov
fisubrl
xchg
and
mov
sarb
push
call
fs
push
jecxz
sub
xor
xor
xorb
out
dec
bound
hlt
lock
fnsave
push
and
repz
xchg
jl
pushf
mov
add
jns
arpl
xor
out
cld
ret
daa
or
fnstsw
push
cli
lea
adc
not
das
adc
out
xor
xor
es
lods
pop
loope
add
sti
jmp
push
lods
push
lcall
mulb
pop
fildl
das
int
and
xchg
jno
adc
push
xor
or
xrelease
movsb
je
jbe
xchg
lods
adc
leave
and
pop
adc
out
enter
jecxz
sbb
rclb
in
inc
xchg
or
add
and
or
xor
xchg
mov
push
shlb
jns
lock
and
jmp
jne
cmp
imul
lcall
xor
aas
jg
xor
ljmp
sbb
stos
pop
test
mov
add
outsl
movsb
mov
fcomps
sbb
xchg
and
in
cmp
mov
xchg
jp
and
dec
mov
inc
femms
in
cmp
subl
ljmp
xlat
addb
test
jge
enter
add
mov
inc
xlat
iret
xchg
out
inc
data16
xor
inc
repz
ffreep
cwtl
pop
mov
lock
in
iret
mov
sbb
fsts
jle
mov
cmp
test
sbb
xorl
ss
xor
subb
xor
and
les
int
pop
aas
and
lcall
xor
jmp
aam
or
lods
pop
push
ja
push
push
push
sbb
cmc
jae
negb
mov
xor
ljmp
nop
cmpsl
cmp
insb
es
pop
sub
xchg
jg
faddl
out
aas
jl
int
ds
mov
push
or
or
enter
cld
push
gs
aam
popa
imul
in
out
pushf
cmc
jle
loope
ljmp
lret
out
push
js
pop
je
mov
sbb
cwtl
mov
xor
mov
jnp
pop
mov
adc
dec
test
sub
sbb
xchg
xor
mov
mov
sbb
inc
stos
sti
aas
icebp
divb
sub
inc
mov
aas
pop
pop
andnps
or
pop
ds
cmp
cmpb
xor
ret
jns
lret
cmp
icebp
xor
lea
mov
lods
repnz
xor
sbb
push
cmp
movsl
push
fiadds
stc
and
mov
mov
dec
add
pop
xchg
mov
add
jecxz
jg
inc
in
xlat
xchg
add
mov
jae
std
dec
ds
cld
data16
mov
insb
jbe
ret
jnp
push
fildll
xchg
push
bound
lret
sbb
cmpsb
out
shlb
cmp
inc
mov
add
movsl
cs
or
mov
jecxz
idivl
mov
in
scas
jle
xchg
out
call
out
xor
ds
ljmp
shrl
in
mov
adc
imul
aas
jo
cwtl
push
nop
cltd
add
or
pop
and
add
sbb
xor
inc
fcmovnbe
cli
loop
or
dec
xor
lret
push
mov
movsl
outsl
mov
sar
sbb
xchg
pop
mov
sub
fs
inc
pop
adc
sbb
out
add
jnp
dec
mov
call
loope
pop
mov
jns
mov
push
push
stos
lock
add
pop
sbb
int
ror
sbb
hlt
cltd
or
fstl
in
call
mov
insl
test
ret
pop
mov
pop
mov
add
fidivl
pop
faddl
cmpsl
push
in
fwait
push
rclb
jmp
das
and
js
push
dec
ljmp
cli
ljmp
inc
mov
ja
add
inc
scas
mov
push
cltd
mov
pop
lods
jno
dec
rolb
xor
test
adc
add
repz
nop
movsl
add
push
jnp
push
rorb
repnz
inc
inc
ja
int3
jae
ret
cmp
repz
mov
push
or
mov
scas
movsb
movaps
sub
daa
mov
mov
repz
jo
int3
js
addr16
xchg
xor
cmc
flds
sbb
add
sub
sub
adc
sub
xor
xchg
mov
rdtsc
mov
outsb
adc
xchg
iret
fdivr
mov
push
pop
ror
pop
adc
mov
pop
jae
out
xor
dec
xlat
and
aad
sub
sbb
cmp
js
ficoms
inc
ljmp
xchg
addr16
jg
jl
inc
cmc
in
pop
fs
lret
pusha
in
mov
mov
lret
cmp
notl
inc
lcall
lock
mov
or
push
sub
or
cld
icebp
add
fdivrs
lret
xrelease
sbb
test
xlat
cld
or
test
fisubrs
cmp
xchg
pop
lahf
pop
inc
mov
aam
icebp
mov
test
mov
clc
cmp
bswap
bound
jl
push
fldpi
pop
test
xchg
sti
ja
into
sbb
pop
inc
fsubrl
movsl
int
cmp
push
ds
fwait
jmp
jo
xchg
sub
or
test
jge
mov
arpl
or
addr16
fists
fisubl
and
jne
stos
pop
daa
iret
mov
and
dec
or
mov
and
mov
inc
or
mov
cltd
pop
pop
add
mov
sbb
xchg
aas
pop
outsb
aas
test
ror
push
lods
mov
std
outsl
push
das
dec
out
push
and
gs
pop
fldenv
orb
rclb
shlb
sub
rcrb
or
movsb
and
inc
xchg
push
cli
fsubr
clc
mov
push
lods
clc
xchg
scas
subl
jecxz
mov
xchg
cli
in
and
or
mov
daa
in
out
popa
inc
xlat
pop
xor
xchg
fmul
sbb
cmpsb
ffree
iret
jne
stos
adc
les
int3
shr
sbb
fcomp
int
mov
and
lea
fwait
pop
roll
mov
ret
xor
out
push
popf
out
jo
inc
dec
and
call
sbb
jns
add
lcall
lods
pushf
mov
add
data16
inc
inc
dec
mov
mov
sub
mov
xchg
aad
data16
mov
insb
push
fxch
sarb
adc
sub
xchg
in
sub
push
jmp
dec
and
inc
pop
cmp
stos
or
dec
mov
cmp
fwait
movsl
fistpll
adc
fstpt
out
in
and
stc
xchg
dec
push
inc
insl
imul
mov
shrb
loope
addr16
int3
add
and
adc
sub
arpl
xchg
addr16
inc
pusha
js
mov
rcll
mov
repnz
jno
mov
add
std
xchg
xor
lahf
fnsave
xlat
ss
push
out
jp
in
push
mov
dec
adc
or
popa
je
mov
inc
imul
sub
push
mov
add
repnz
xchg
jle
stc
cltd
fnstsw
jg
mov
fcoml
xchg
std
or
push
xor
and
int3
mov
lret
xchg
xchg
and
push
add
jne
stos
sbb
mov
daa
xchg
add
or
mov
rcrb
or
movsb
xorl
sub
mov
sub
and
movsl
xchg
jb
mov
aad
xchg
mov
inc
lea
enter
ficoms
dec
pop
cld
adc
or
adc
or
cmpsb
jl
js
mov
jecxz
les
insb
cmp
imul
add
out
inc
mov
aas
sti
mov
div
pusha
xchg
adc
pop
mov
idivl
or
shrl
add
pop
lea
in
add
pop
jae
xchg
inc
fs
loope
or
dec
cmp
push
inc
into
sbb
jl
jp
jnp
jb
es
or
dec
mov
enter
dec
std
pop
mov
cmp
mov
push
es
arpl
sarl
xor
sub
loopne
mov
cwtl
in
jecxz
push
fs
aas
pop
cmc
addb
enter
and
push
add
and
sbb
pop
popf
lahf
lock
sahf
jecxz
imul
xchg
push
mov
mov
dec
loop
jl
insl
aad
ss
jbe
push
mov
faddl
lcall
mov
inc
xchg
dec
stc
scas
and
cs
stos
fxch
mov
sub
aad
aaa
pusha
mov
pop
mov
fcoms
mov
out
xchg
sbb
je
cmp
or
mov
lcall
repz
inc
in
rcrl
pop
mov
sub
fsubrs
leave
insl
in
fwait
test
call
sub
outsl
push
fsubrl
or
daa
pushf
xlat
loope
mov
cmp
mov
cmp
fimuls
jecxz
sbb
sub
or
shrl
loopne
out
pop
scas
mov
call
dec
xchg
add
inc
cmp
push
push
sarl
add
xorl
xchg
test
jnp
bound
push
mov
xlat
cmpsb
and
sbb
cmp
imul
pusha
push
addr16
pushf
cld
and
add
xor
xchg
and
cmp
scas
icebp
cld
fxch
ret
call
lods
and
pop
movsl
pop
xchg
xchg
mov
pop
push
push
jne
insb
bound
adcb
out
mov
jno
pop
pop
popa
cltd
push
dec
pushl
stos
mov
ja
inc
rolb
pusha
into
sub
inc
call
imul
pop
pop
mov
dec
ss
and
int3
adc
out
xor
shr
adc
add
ret
pop
into
mov
pusha
push
push
dec
push
dec
mov
call
in
push
fistps
sbb
repnz
ficoml
pop
jmp
dec
dec
movsl
popa
aas
xchg
fstpt
mov
shrl
sub
dec
inc
in
jbe
repnz
sbb
jmp
or
push
xchg
jno
enter
stos
sbb
or
lcall
ss
loope
ss
aad
xor
cmp
fidivs
insb
mov
rolb
es
out
add
xchg
insl
sub
sub
adc
sarl
inc
arpl
mov
addr16
push
pop
mul
sbb
sbb
pop
dec
inc
pop
js
mov
test
xchg
xor
stos
and
fildll
mov
sub
sahf
xchg
xor
jns
loopne
mov
lret
mov
sbb
mov
ds
scas
sub
mov
call
mov
jb
adc
add
jg
testb
rcr
jecxz
and
je
adc
mov
mov
hlt
cmp
jg
rolb
icebp
outsl
push
adc
lcall
popa
imul
ljmp
in
sub
sbb
sahf
inc
adc
fldz
xchg
fcomps
cltd
xchg
mov
pop
pop
hlt
add
rcl
fimuls
and
xor
mov
cli
push
mov
cmp
sub
shlb
jne
and
adc
mov
sbb
mov
out
loopne
mov
cmp
into
divb
into
ret
inc
mov
out
push
dec
xlat
daa
xchg
sbb
add
cmc
sub
jmp
orw
cs
mov
psrad
in
je
faddl
pop
mov
jns
pop
dec
fdivl
push
out
and
ss
jmp
add
inc
rorb
pop
xor
orb
inc
cli
sub
inc
cmpsl
rol
or
xchg
scas
add
mov
sbb
mov
scas
mov
mov
xor
test
cwtl
pop
mov
or
lods
into
jmp
das
cmp
imul
divb
test
mov
push
dec
mov
test
xchg
adc
mov
xchg
mov
sarl
daa
adc
or
and
xor
arpl
vdivss
lods
lret
push
jle
inc
push
pop
rcr
movsb
pop
fnstsw
xchg
or
and
daa
fs
enter
sub
mov
add
push
mov
add
jbe
fs
cmp
jle
rclb
adc
mov
arpl
xchg
ret
dec
shlb
insl
fldln2
mov
xchg
imul
add
fistps
adc
clts
xchg
call
cmp
push
or
inc
fcoms
hlt
out
stc
mov
pop
mov
pop
ret
imul
test
pop
popf
adc
and
into
out
aaa
push
je
mov
les
pop
or
insl
int3
ss
and
rcrl
xor
les
push
ja
cmp
sbb
jae
lret
pop
mov
jnp
and
pop
les
fcoml
pop
test
movsb
andl
mov
dec
jge
cmpsl
dec
mov
add
sbb
movsl
inc
sarb
pop
outsb
xchg
gs
sub
fnstcw
cmp
stos
push
test
mov
pop
push
and
add
aaa
push
mov
cld
gs
sti
mov
push
mov
idivl
push
jne
mov
xor
mov
repnz
xchg
inc
dec
adc
lahf
sbb
dec
mov
pop
jecxz
mov
push
inc
mov
cwtl
sbb
cmp
push
je
jl,pt
or
test
dec
lds
ja
jmp
jno
stc
xor
adc
stos
mov
iret
mov
div
push
dec
cmp
mov
push
loopne
fwait
xor
dec
rol
sbb
jle
jnp
ljmp
popa
outsb
sbb
inc
cmpl
push
mov
pop
outsl
pop
fadds
mul
outsl
mov
subl
jle
aas
inc
cltd
loop
sub
sahf
enter
push
daa
xchg
out
inc
push
xchg
cmovnp
mov
cld
pop
movsl
roll
xchg
enter
gs
fwait
pop
xor
test
scas
mov
mov
in
repnz
std
xor
xchg
jb
lods
leave
adc
mov
insl
mov
pusha
test
jno
out
xchg
hlt
movsb
xchg
sbb
mov
lock
fadds
inc
ficoml
mov
jns
and
rcrl
xor
mov
mov
dec
stc
and
popa
sahf
xor
movups
adc
test
mov
mov
inc
ret
fcomp
mov
pop
sbb
mov
adc
fs
or
movsb
loope
or
xchg
xor
cli
in
jnp
fnstenv
aas
dec
add
mov
addr16
xchg
subb
mov
xor
xor
dec
mov
dec
into
adc
xor
push
xchg
pushf
fld
lahf
xchg
inc
adc
xchg
pop
int3
jecxz
stos
cs
rorb
push
push
sub
adcl
pop
mov
xchg
xor
sub
test
dec
cmpsb
sbb
sbb
arpl
fmuls
test
imul
and
mov
xchg
pop
shl
cli
cwtl
pop
jecxz
scas
push
popf
icebp
inc
and
add
cmp
mov
imul
out
pop
bnd
test
add
popf
inc
imull
movsb
pop
ret
jle
cmp
ss
ds
aad
daa
mov
scas
inc
add
sbb
mov
xor
je
pushf
js
dec
lahf
mov
mov
xchg
sti
pop
fisubs
fwait
int
push
cmp
pushf
push
xchg
stc
inc
dec
jmp
out
aas
roll
or
jno
mov
fidivs
xchg
push
stc
sbbb
outsl
faddp
sub
add
sbb
cs
jecxz
repz
adc
push
adc
fadd
mov
cmp
xchg
push
loopne
popa
dec
aad
int3
inc
xor
loope
es
jbe
push
sbb
cli
cli
jb
dec
out
out
adc
and
fdivs
loope
add
mov
out
sbb
lcall
add
iret
data16
inc
jbe
and
sti
sub
js
dec
and
ja
inc
xchg
nop
and
int
xor
lcall
pushf
insl
xchg
lcall
in
pop
mov
mov
sub
decl
pop
arpl
insl
adcb
in
cld
ds
dec
pop
xchg
lret
push
hlt
mov
or
out
jnp
ja
pop
dec
inc
es
add
stos
lods
ror
insb
sbb
pop
out
push
xchg
clc
mov
jmp
mov
dec
and
jb
or
mov
cmp
jge
adcb
lea
jns
nop
inc
shrb
xor
jne
scas
mov
pop
mov
fidivl
sbb
adc
jp
cmp
or
mov
lret
mov
push
leave
int3
mov
gs
jecxz
idivb
lock
int
enter
cmp
inc
ja
fld
mov
repz
jns
pop
insl
add
stos
sbb
cmp
jl
add
cli
pop
in
pop
or
cmp
jmp
pop
xor
add
xchg
out
into
cli
mull
pop
dec
out
xchg
nop
inc
jnp
ja
stos
push
lds
into
std
sahf
cwtl
or
add
cmp
xor
and
sub
aam
inc
push
add
inc
loopne,pn
sbb
ja
mov
sahf
into
mov
cltd
icebp
cmpl
test
idiv
mov
jp
lea
fidivs
inc
fistl
call
add
roll
lds
lods
inc
push
outsl
mov
repnz
push
dec
jp
stc
or
or
cld
mov
lret
xchg
xchg
mov
test
jmp
inc
and
push
fnsave
push
fsubrl
cld
mov
popf
xlat
push
push
fwait
ja
rolb
negb
loop
mov
leave
out
js
pop
outsb
rorl
hlt
mov
shrb
mov
aas
test
xor
mov
xchg
je
stc
or
or
and
mov
into
xor
jns
mov
cmp
sahf
pop
push
fsubrl
jp
pop
and
jge
inc
imul
and
push
cltd
xchg
adc
sbb
popf
cmp
outsl
cmp
in
rolb
outsb
es
mov
fimuls
xchg
cmp
data16
dec
or
push
cmc
mov
popf
jnp
inc
or
ss
enter
arpl
sub
inc
xchg
sub
xor
enter
in
test
add
les
mov
cli
loope
xorl
mov
out
mov
out
js
repnz
sub
inc
cmp
adc
mov
sahf
decb
les
sahf
mov
mov
enter
dec
ret
mov
jp
xor
jecxz
sahf
xor
pop
xlat
repz
push
mov
pop
roll
add
dec
push
or
loop
xlat
rcrl
das
loop
pop
or
jns
dec
push
adc
imul
lock
sub
test
push
dec
mov
pop
xor
in
dec
in
inc
es
pop
pop
das
push
fiadds
es
adc
mov
in
fwait
fs
in
and
je
pop
fs
lds
loopne
sub
icebp
std
mov
xchg
sbb
movsl
daa
jmp
bound
or
lds
insl
mov
add
test
lahf
cmpl
mov
aas
xchg
jo
and
inc
jmp
inc
psubsw
movsl
xchg
dec
aas
lock
mov
repnz
cs
mov
loopne
imul
out
dec
repz
clc
xor
inc
xchg
pop
sbbl
jg
int
cmp
lcall
push
push
push
sahf
in
or
or
call
lods
ja
imulb
inc
or
sub
stos
les
mov
lcall
mov
out
arpl
sti
shl
movsb
sbb
in
or
mov
cld
std
xchg
jecxz
faddl
inc
jns
jnp
rol
sub
mov
rcr
out
or
pusha
jnp
jmp
inc
aam
js
pusha
in
stc
mov
inc
jae
dec
into
lock
jmp
nop
cmpsb
aam
and
adc
mov
fimull
pushf
andb
ljmp
insl
sub
test
mov
mov
shll
jecxz
aaa
jo
gs
insl
mov
in
or
push
mov
test
jbe
and
fs
or
shlb
xchg
jecxz
sbb
inc
cmpsb
or
pop
inc
mov
ret
outsl
sbb
es
sbb
in
inc
mov
ret
std
cmpsb
cmpsl
call
daa
and
sub
stos
movsl
ret
shll
dec
mov
xchg
imul
out
mov
xchg
fmuls
es
sub
jle
xchg
xchg
xchg
leave
fs
mov
inc
subb
xor
inc
outsb
inc
or
mov
cmp
push
fidivrs
push
jno
or
adc
cmp
xlat
dec
scas
outsb
sbb
shll
mov
jp
lcall
mov
fprem
bswap
xor
clc
int
shrl
sbb
addb
in
and
scas
test
mov
and
sub
in
mov
pop
pop
push
xchg
into
adcb
shlb
and
and
negb
jle
cmp
push
clc
lcall
pop
mov
and
pop
sbb
mov
sahf
push
decb
loopne
ret
iret
mov
cmp
arpl
xchg
pop
subl
xchg
cld
fisubrl
adc
jp
add
mov
sti
sti
fs
jmp
test
xor
rorb
cld
xchg
adc
jmp
shll
std
or
jp
je
jle
xchg
pop
insb
sbb
repz
cmpsb
loop
sbb
lcall
push
cmp
test
jl
fists
idivl
test
jg
sbb
pop
sub
lahf
jmp
in
dec
mulb
aam
aad
popa
cmc
xchg
out
popw
add
sub
mov
sub
jl
je
push
xor
xlat
jg
aaa
push
sbb
iret
hlt
jae
xor
mov
cmpsb
or
in
or
mov
lahf
mov
sub
sub
cltd
xor
xchg
imul
mov
mov
testl
add
pop
popf
out
leave
or
jg
mov
xor
repz
mov
pop
dec
add
stos
jbe
jle
mov
mov
cld
push
imul
int
pushl
fs
out
jecxz
stos
mov
sbb
sarb
sti
test
dec
pop
adc
stc
xor
sbb
xchg
cmpsl
xor
or
stos
int3
cld
mov
and
adc
repz
and
pop
mov
mov
mov
mov
sbb
add
push
pop
pop
sub
aad
adc
inc
cli
stos
fmul
test
dec
jmp
xchg
shrl
loope
les
cmp
mov
and
sbb
or
in
fnstenv
push
aaa
mov
andl
movsb
movl
push
hlt
scas
jp
inc
adc
mov
rorb
sbb
mov
arpl
sbb
pop
arpl
ret
push
push
jno
dec
pop
repnz
test
enter
and
gs
push
adc
xchg
outsl
fucomp
ret
cli
pop
sbb
xor
jg
out
sbb
out
jecxz
sahf
sbb
pop
jae
xchg
in
and
roll
aas
sub
das
js
pop
insl
jp
ret
fwait
or
sbb
ljmp
stos
loope
mov
add
out
sarl
cmp
clc
fistpl
mov
cltd
sbbb
insl
jae
jge
jl
and
dec
mov
pop
adc
int3
inc
jbe
hlt
sub
xchg
scas
les
scas
mov
sbb
xchg
dec
lods
les
xor
loope,pn
pusha
and
push
cs
inc
out
cld
xchg
cmc
fnstenv
mov
adc
push
insl
adc
push
or
movq
sbb
xor
les
xor
pop
sbb
icebp
mov
lret
xchg
cltd
pop
mov
enter
dec
sub
loop
aam
xor
data16
cs
jle
xchg
ja
in
test
std
daa
and
mov
enter
clc
mov
rcrb
push
mov
ret
or
xor
or
push
xchg
fdivrl
lea
idivb
jns
or
mov
sub
mov
lret
jne
jae
mov
jo
shll
and
cs
pop
add
aam
adcb
and
rcll
jle
fldl
mov
hlt
jecxz
mov
aad
inc
or
shld
push
jnp
scas
add
push
fimull
adc
shll
xchg
repz
test
xor
dec
cltd
test
mov
adc
adc
movsl
mov
test
push
jecxz
jp
add
inc
jae
push
rcrl
cs
jl
sub
jne
adc
or
aad
fimull
inc
divb
lock
enter
fidivl
cs
add
cmp
das
daa
cmpsb
cmpsl
push
neg
icebp
xor
adc
pop
pop
jne
adc
dec
pusha
xchg
xchg
andl
stos
lods
faddl
adc
dec
cmp
jmp
pop
cmpsb
jmp
dec
jb
loope
xor
test
pop
loopne
adc
aaa
mulb
pop
mov
insl
repnz
daa
outsl
push
push
sub
or
mov
in
ljmp
aas
sub
cltd
jg
or
cmpsl
push
loopne
dec
cltd
and
pop
pop
outsl
aas
aas
or
lret
inc
sarl
adc
loope
add
dec
jmp
add
outsb
add
push
sbb
jge
cmp
testb
inc
cmp
js
xchg
sub
inc
push
ficomps
in
inc
xor
fwait
testl
in
pop
out
loop
adc
fldenv
push
lds
fimull
sbb
in
movsb
cmp
xchg
mov
ss
sub
adc
sbb
out
enter
inc
or
psubd
xchg
jmp
lahf
ss
or
movsl
jnp
into
push
inc
aad
cmp
mov
lea
push
mov
mov
pop
sbb
add
push
sub
out
mov
fsts
jo
jne
and
cmc
rep
dec
cli
mov
push
pop
imul
add
testl
push
add
and
mov
push
in
popf
jmp
rolb
inc
jb
xor
test
shl
cltd
stos
popa
sub
outsb
aas
and
sahf
sbbb
and
ret
sbb
fadds
ds
movsl
jl
pop
es
add
movsb
jns
cmc
sub
xor
cmpsl
mov
pop
xchg
and
sti
insl
adc
mov
sarb
mov
cmc
in
dec
lods
dec
outsb
subb
mov
cmp
jle
xor
mov
add
inc
jbe
imul
inc
bound
nop
sti
push
out
popl
sbb
xor
js
pop
rorb
jge
mov
jg
lock
pushl
lret
scas
loop
jmp
scas
popa
sbb
scas
xor
or
mov
stos
test
jae
clc
adc
adc
and
in
sub
shrl
imul
fstpt
fidivl
mov
mov
jo
movsb
outsb
sbb
rcr
js
dec
jcxz
jno
rcrb
in
lret
rcrl
out
loopne
pusha
leave
jmp
add
fisubrl
les
mov
cmp
dec
cs
sbb
lcall
pop
cmp
cmp
xchg
add
xor
adc
sbb
and
and
scas
jns
cltd
push
lahf
movsl
jo
popa
dec
jo
and
dec
je
adc
xor
mov
test
jns
cmp
mov
aam
test
ret
mov
int
in
scas
dec
fbld
loopne
mov
insb
mov
pop
aaa
add
stos
pop
jb
loope
add
jge
inc
daa
clc
lcall
sub
pop
pop
sub
dec
or
push
cli
mov
sti
enter
mov
inc
mov
xor
imul
idivl
in
mov
add
jo
pop
daa
inc
xor
cmpb
dec
xor
jno
dec
pushw
rorl
mov
xor
and
xor
inc
lods
adc
sub
xor
and
daa
adc
cmp
sbb
pop
xchg
xor
cmpsb
mov
dec
shl
push
fmull
inc
xchg
in
pop
js
popl
jge
arpl
inc
sub
lods
aas
sbb
add
add
sub
insb
rol
data16
mov
mov
shlb
pop
dec
pop
aaa
lret
pop
jg
push
sbb
sbb
pop
push
cmp
pop
add
andb
dec
mov
gs
loop
xorb
or
sbb
ljmp
stos
stos
add
sbb
mov
int3
sahf
cld
jmp
sub
xchg
mov
cmp
sub
jne
outsl
rcll
and
sub
negb
xchg
xchg
xorl
push
pop
lea
push
mov
loope
cmp
jle
mov
jg
dec
mov
sub
in
push
rorl
dec
cmp
nop
and
addb
lock
mov
stos
sub
pop
xor
ret
dec
mov
call
cld
aaa
jb
es
imul
jge
inc
test
stos
clc
in
iret
and
js
test
es
xor
in
push
dec
mov
into
inc
push
pushf
cmpsb
pushf
rol
cmp
mov
pop
pop
lds
jnp
pop
cwtl
in
cmp
sbb
stos
pop
cmp
outsb
fldl
shl
sbb
aad
cmp
fs
fwait
loope
mov
aaa
es
lods
cmp
adc
scas
fildll
es
xor
xlat
outsl
xchg
inc
imul
lock
lret
xchg
sarb
pop
sub
adc
cmp
push
out
stos
sbb
sbb
adc
out
mov
pop
or
or
loop
cwtl
lods
fmull
push
push
add
sub
sub
movsb
xchg
cmp
adc
ja
xchg
mov
inc
add
lahf
cltd
sbb
jg
fistpl
aaa
cmc
daa
fisttpll
lods
xor
mov
dec
mov
push
or
add
imul
mov
inc
enter
jmp
push
arpl
and
lret
inc
bound
xor
or
push
cmp
data16
leave
add
and
loopne
add
mov
mov
mov
and
dec
imul
lret
lret
psubusw
push
out
pop
mov
xor
and
lock
jo
push
scas
mov
mov
lret
cli
ret
xchg
mov
xor
adc
pop
int
aam
enter
std
adc
push
mov
xchg
adcl
test
mov
pop
add
scas
mov
cmp
lahf
and
fs
and
jbe
cmp
sub
xchg
scas
or
fiadds
xchg
pop
sub
jb
xchg
sub
popf
xor
out
shr
add
pop
jmp
or
mov
fmul
push
addr16
mov
inc
sahf
in
cmp
ret
mov
sbb
sbb
outsb
xor
adc
popa
and
pop
cmp
fcmovnu
fidivrs
mov
std
outsb
repnz
adc
mov
xchg
inc
ret
aas
xorl
rol
dec
int3
fs
dec
es
inc
push
push
fs
sbb
add
or
mov
lods
or
jns
sbb
sub
jg
mov
sbb
pop
sub
sti
cmp
pop
loop
mov
mov
in
movsb
or
dec
adc
adc
lods
and
test
inc
or
cltd
lods
outsl
jne
test
cmp
clc
add
adc
popa
icebp
or
add
mov
push
nop
jl
sarl
test
pop
add
sahf
stos
jmp
hlt
sub
out
aaa
ret
outsb
sbb
cmc
xor
xchg
aaa
pop
jl
shlb
cmp
mov
cmp
adc
mov
adc
notb
inc
push
mov
popa
nop
mov
pusha
mov
scas
in
out
push
mov
outsb
cld
sti
mov
out
cmc
inc
jb
pop
add
arpl
loop
jmp
mov
inc
adc
rclb
or
bound
and
mov
movb
and
fisttpl
xor
in
loopne
hlt
xchg
cmp
and
mov
in
les
testl
ds
loopne
lea
in
dec
cltd
out
out
pop
movsb
or
adc
sub
push
inc
pop
imul
sub
aam
lret
les
aas
test
add
jnp
stc
pop
xchg
cmp
arpl
aas
in
and
dec
xlat
outsl
jbe
adc
lret
bound
jb
std
les
dec
adc
stc
adc
inc
inc
fstpt
fwait
rcr
and
cmpsb
jo
pop
cmp
dec
hlt
add
jb
fldt
shrb
push
stc
cmpsb
add
clc
mov
and
mov
or
adc
lock
into
sbb
jle
lock
sbb
rcrb
jp
mov
movsl
lahf
xchg
cwtl
pop
or
leave
add
sbb
ja
out
call
dec
movsl
cmp
repz
dec
add
dec
push
xchg
sbb
pop
ss
sbb
daa
xor
pcmpgtb
push
dec
and
cmpsl
mov
xor
mov
mov
xor
pop
pop
outsl
adc
in
jb
in
fabs
ja
iret
cmc
xchg
repz
mov
aaa
mov
pop
pop
sub
je
enter
jo
mov
lea
jecxz
scas
xchg
aad
jb
mov
test
push
cmp
inc
add
jbe
inc
je
cmp
shr
fcoml
jnp
fstl
mov
popa
arpl
add
mov
mov
mov
add
ds
loope
cmp
fs
sahf
ljmp
pop
xchg
cmp
imul
xchg
repz
sub
das
or
push
ja
scas
jns
fistps
jns
iret
sbb
pop
or
jb
repz
fisubs
ret
cltd
aam
and
jmp
add
negb
push
popa
add
mov
jmp
scas
or
dec
xor
daa
jae
call
mov
fwait
mov
lahf
aaa
add
xchg
jno
jo
adc
push
inc
add
push
es
gs
jne
jl
jnp
dec
adc
or
jmp
idivb
mov
imul
mov
jbe
xor
cmpsb
push
hlt
xchg
jp
mov
push
and
nop
dec
pop
aad
jg
scas
leave
mov
jbe
sub
lds
stos
pop
jg
andl
cmp
jmp
sbb
pop
data16
sbb
test
and
cmpb
cmp
outsb
popf
jg
push
add
mov
lds
mov
std
out
shrb
mov
int
pop
inc
push
mov
call
insl
add
add
push
mov
fstl
adc
mov
dec
stc
rorb
jmp
pop
mov
pop
pushw
push
jl
nop
dec
sahf
xchg
pop
xor
mov
sub
or
decb
fdivr
jno
mov
jno
out
es
fidivrl
jmp
fwait
xchg
mov
xor
scas
pop
pop
dec
sbb
push
jbe
into
mov
out
and
pop
push
imull
cs
mov
aaa
add
outsl
ss
push
loop
aaa
add
mov
in
mov
mov
cs
push
lods
push
sub
mov
dec
lds
xchg
lret
mov
lahf
xlat
mov
insb
adc
sub
aaa
fsubl
push
xchg
sbb
pop
jmp
in
mov
adc
jb
jle
lahf
addb
mov
inc
mov
fidivl
dec
push
mov
pop
dec
mov
insl
cwtl
popf
outsl
push
jg
pop
ret
jle
cs
mull
ja
dec
dec
int3
jo
int
jb
dec
mov
loop
lahf
add
jmp
push
pop
pop
loop
jecxz
push
mov
call
pop
xlat
popf
dec
xor
sub
adc
insb
push
scas
shlb
push
or
push
int3
sbb
sahf
lret
bound
mov
popa
stos
or
jb
jmp
mov
scas
std
cmpsl
jl
fisubs
adc
addl
in
xchg
rorl
and
mov
push
pusha
xchg
cwtl
btr
pushf
cld
pop
mov
insb
cwtl
lock
imul
cmp
mov
aam
jne
test
stos
push
mov
cmpsb
mov
pop
bnd
ss
push
mov
inc
cmpsl
mov
scas
jg
idivb
or
mov
pop
sarb
sbb
je
jl
and
bound
stos
xchg
cld
iret
xchg
xchg
imul
addr16
mov
test
dec
mov
xchg
push
ret
das
xor
cli
pusha
in
mov
out
adc
or
add
adc
pop
mov
mov
sbb
fidivrs
enter
xchg
clc
push
subb
in
xor
sbb
ja
sub
add
in
pusha
stos
jmp
test
jge
adc
sti
insb
xor
xorl
jle
arpl
repnz
int
push
pop
sbb
ficompl
out
jmp
data16
push
or
shll
lock
outsb
push
mov
xchg
fiaddl
fidivrl
sti
adcb
pop
test
loop
loopne
cwtl
int3
mov
dec
loope
lret
add
jge
les
popf
jbe
aad
cld
pop
mov
xchg
xchg
popa
test
xor
fisttps
lret
cmp
movsb
lods
daa
std
jmp
in
push
ret
daa
lock
maskmovq
xlat
ss
xor
xorb
push
jle
or
add
les
pop
stos
mov
loope
mov
dec
loope
or
mov
sub
filds
cmp
sub
mov
fsubrl
data16
pop
and
jecxz
call
sub
xchg
pop
imul
repnz
ret
mov
mov
xorl
test
iret
inc
iret
popl
sub
jno
lret
cli
inc
or
icebp
fsubrl
sbb
xor
pushf
pop
fwait
jmp
pop
test
mov
gs
lds
mov
pop
ficomps
sbb
loop
fcompl
std
bound
lret
sbb
lock
and
dec
xorb
mov
xor
pop
or
incl
roll
loopne
sub
sbbl
mov
inc
mov
dec
xchg
cmp
sub
dec
outsb
idivb
and
pop
pop
nop
scas
and
repz
or
int3
inc
or
mov
test
jge
and
cmp
lcall
lahf
add
mov
das
push
cmp
scas
ror
movsb
mov
andl
clc
jne
js,pn
mov
stos
repz
cmp
pop
pop
gs
and
fldcw
call
jb
addr16
cld
int
pop
insl
ljmp
lods
mov
pop
lods
insl
pop
scas
addl
inc
sahf
or
cmpsl
push
sbb
mov
push
cmpsb
pop
pop
mov
frstor
pushf
inc
inc
push
xor
data16
cld
rorb
fdivrs
clc
aaa
xchg
addr16
push
or
pop
mov
mov
mov
scas
daa
les
hlt
mov
push
xor
push
mov
shll
mov
adc
xchg
add
xchg
out
ja
cmp
repz
inc
rorb
xchg
test
fucomp
cmp
push
icebp
dec
xor
xor
sti
lret
roll
imul
cmp
lret
adc
mov
mov
pop
jne
and
loop
or
cs
pusha
or
iret
xlat
mov
cmpb
test
push
leave
mov
std
aas
jbe
xor
aaa
aam
ljmp
outsb
jecxz
aaa
xorps
dec
dec
aam
mov
std
mov
cmp
cmp
sub
dec
cli
ret
int3
mov
cmp
xor
sub
adc
repnz
add
inc
push
dec
mov
sbb
sbb
outsb
neg
test
out
cmp
inc
jl
mov
xchg
int
bound
jb
or
push
push
lret
adc
or
decl
push
loop
sbb
imul
or
cmp
cmc
jno
sbb
movsl
and
negl
rclb
and
mov
mov
inc
sub
sti
xor
push
hlt
lods
mov
outsb
pop
mov
mov
jbe
insl
movsl
xor
and
pmullw
stos
dec
push
out
add
jmp
lods
jge
movsb
jl
fists
lods
pop
into
mov
jne
dec
pop
imul
mov
subb
fmuls
and
xchg
sub
and
test
mov
aaa
or
mov
and
daa
mov
adc
pop
cmc
sbb
xchg
int
in
imul
pop
or
pop
xor
or
dec
push
mov
sbb
ja
mov
nop
jl
push
lods
je
and
sub
lods
push
out
pop
es
js
shl
xchg
out
jmp
mov
inc
pop
cmpsl
aad
into
and
sahf
je
fldcw
adc
scas
mov
pop
ret
mov
xchg
add
ret
jb
clc
sahf
fmuls
push
dec
ret
jae
push
cs
push
popf
add
repz
pop
in
push
sub
out
cmc
and
fiaddl
rclb
xchg
sub
stc
mov
aam
xchg
jp
out
sbb
cmp
sub
movsl
cmp
je
and
xchg
hlt
mov
cmpxchg
loope
lods
xor
xor
pop
fists
fwait
dec
add
mov
and
mov
aaa
repnz
adc
inc
js
lock
mov
jno
pop
addr16
jo
xchg
popf
mov
mov
inc
cli
cmpsb
test
leave
inc
repnz
outsl
call
test
xchg
notl
fidivl
add
inc
insb
sbb
push
scas
mov
aam
push
leave
stos
mov
push
xchg
inc
dec
fisttpll
test
add
mov
inc
xor
push
movd
out
pop
icebp
push
mov
mov
cmp
dec
pop
jo
jecxz
stos
sbb
jecxz
inc
or
enter
aas
add
lret
or
cwtl
cwtl
jp
xor
je
mov
imul
push
scas
and
es
xchg
jbe
shl
js
adc
add
xchg
mov
push
sbb
dec
jmp
lret
test
sahf
int
xchg
cmp
add
int3
rorb
sub
andl
and
push
adc
jns
cmp
mov
and
xchg
and
data16
cltd
dec
or
xchg
in
and
pop
sub
popa
dec
test
sub
mov
fdivrs
add
add
icebp
xor
push
out
sbb
scas
cld
notb
xchg
or
or
jnp
leave
push
stos
les
icebp
cli
mov
xlat
cmp
je
push
jae
das
dec
fcoms
scas
movsb
test
out
adc
jo
or
imulb
dec
outsb
daa
mov
fs
repnz
addr16
lret
pop
fmulp
cli
cwtl
cwtl
add
lahf
test
xor
adc
aaa
fwait
mov
neg
cmp
in
lret
adc
data16
idivb
pop
jle
andl
jp
pusha
loopne
fisubrl
inc
add
cltd
in
dec
jne
fs
fidivrs
imul
ficompl
test
jno
hlt
les
xor
lcall
into
mov
and
cs
and
adc
outsb
adc
hlt
or
push
jns
out
or
push
loop
jmp
xor
scas
xchg
push
or
mov
sbb
mov
nop
xchg
jno
inc
insb
lods
in
and
push
test
mov
sti
jo
inc
es
in
xchg
hlt
aas
hlt
pop
pushl
mov
cmp
lods
stos
subb
or
cmp
sbb
pop
loopne
xorl
sbb
sub
and
or
and
cmp
sub
add
ret
out
addl
loop
mov
arpl
sub
inc
leave
out
out
fs
jae
test
mov
mov
enter
cmp
jmp
push
arpl
mov
push
pop
stc
shll
inc
es
fadds
outsb
push
lds
xor
jne
sub
lcall
push
pop
mov
dec
rcrl
mov
fsubrp
clc
movsb
loope
loope
xlat
mov
jno
or
insl
dec
scas
push
or
sbb
and
or
cmc
mov
sub
mov
lcall
cmc
pop
lahf
jge
ficoml
dec
iret
mov
jle
stos
mov
ror
dec
pop
es
lods
movsb
xor
insl
adc
scas
sbb
mov
pop
xor
lret
jl
es
sbb
push
mov
fmuls
or
push
mov
ljmp
gs
lds
out
test
inc
mov
xchg
lea
cmp
imul
pop
inc
jge
stos
mov
push
ror
sbb
dec
std
and
scas
sbb
sub
scas
mov
inc
xor
or
inc
jns
cmp
fwait
xor
xchg
add
imul
pop
and
ds
cmp
adc
push
push
pusha
insb
orb
fs
xor
leave
mov
arpl
lcall
lods
in
mov
fs
sbb
pop
mov
lret
push
loop
cmp
insb
mov
dec
imul
inc
sti
insl
testb
sahf
push
xorl
mov
pop
pmuludq
adc
pop
cmp
ret
push
adc
mov
mov
sbb
lret
pop
negl
out
fnstcw
loope
mov
sbb
scas
dec
lods
jl
loopne
push
mov
jle
cli
pusha
lds
push
nop
jecxz
lahf
imul
or
xor
add
pushf
in
pop
inc
or
pop
jne
cmp
movsl
int3
in
adc
dec
and
je
sahf
aad
ds
pop
jle
mov
fwait
sbb
jmp
push
in
outsl
jns
push
mov
into
push
adc
push
adc
sub
mov
leave
jo
mov
and
cmc
cmpsl
push
or
mov
jmp
inc
adc
fadd
sti
adcb
loop
push
dec
xchg
sahf
pmuludq
jecxz
daa
inc
and
test
int3
push
popf
dec
dec
inc
adc
sub
add
add
inc
aam
dec
and
fisttps
cmpsl
or
xchg
push
or
mov
dec
mov
outsl
sbb
lahf
jmp
and
sub
pop
xchg
sahf
pop
ds
cmp
sti
mov
lahf
inc
pop
stc
scas
xor
dec
pushf
jge
xchg
pop
xchg
pusha
xchg
lret
insb
scas
ror
jmp
add
mov
sub
xor
arpl
push
jne
mov
and
mov
lds
adc
mov
insb
xchg
fidivrs
push
icebp
test
or
cmp
adc
and
push
xchg
cmp
leave
xlat
lods
xchg
lret
adc
lods
fimull
adc
sti
pop
cs
imul
xor
xchg
or
push
mov
xchg
pop
or
and
mov
lods
cmp
iret
fbstp
jp
adc
ds
imul
xchg
sub
leave
xchg
insb
or
and
mov
pop
fs
add
insl
xchg
enter
in
gs
sbb
mov
xchg
movsl
pushf
test
dec
aas
aad
sub
cld
and
adc
sbbb
cld
scas
data16
mov
aad
aaa
xchg
pop
dec
fucom
in
xchg
gs
xor
frstor
in
ret
outsb
inc
hlt
xor
daa
dec
fcmovnbe
mov
add
sub
fwait
pop
push
cmp
xcrypt-ofb
cmpsl
jmp
xchg
xor
mov
les
cmpsl
dec
out
fisubl
stc
pop
loopne
mov
imul
lods
pop
sbb
xor
cs
ljmp
and
cmpsb
mov
rcr
lods
jns
push
cmp
push
jle
jo
scas
sbb
sub
je
int3
mov
inc
xchg
loope
mov
loop
and
pop
xlat
mov
mov
jnp
addr16
daa
or
jl
xchg
in
cld
pop
and
lods
lcall
lret
mov
outsl
iret
jp
sub
push
add
vphaddudq
bound
imul
pop
aam
not
enter
les
mov
iret
sti
xor
push
es
push
clc
cld
out
jns
pop
out
call
push
pop
cmp
cltd
loopew
inc
jnp
sahf
jne
jae
negb
rolb
and
sub
daa
push
mov
sbb
push
aas
or
dec
int
adc
cwtl
aas
rolb
lret
movsl
testb
push
sbb
mov
and
ss
into
iret
xor
cmc
xchg
repnz
fs
push
js
out
out
mov
sbb
inc
daa
push
or
xor
cs
repnz
sahf
mov
dec
cltd
xorl
mov
lahf
mov
cli
mov
js
lods
call
pop
subb
xchg
push
loop
out
push
call
sti
movsb
pushf
pop
or
and
mov
test
outsl
cmp
popf
xor
mov
pop
outsb
xor
in
or
incb
dec
cli
mov
mov
cmp
lds
sahf
ljmp
sahf
pop
sar
test
sbb
out
pushf
mov
aad
pop
inc
cmp
xchg
bound
xor
loope
outsl
cltd
push
mov
mov
divl
and
loope
enter
xchg
adc
js
push
mov
push
xor
cmpsb
push
mov
pusha
cmp
cmp
ret
xchg
enter
lods
ret
sub
andl
dec
mov
test
or
pop
clc
inc
nop
push
jecxz
movsl
xchg
loope
jg
mov
cmpl
rcl
fwait
mov
mov
stc
and
bound
sub
mov
mov
ret
mov
inc
xchg
ret
adc
in
or
jge
mov
andl
mov
pop
ds
mov
sub
cmpsl
sub
pop
xchg
mov
dec
sbb
or
popa
push
lods
add
orb
mov
in
iret
pop
cmp
pushf
inc
stos
loop
fsubrl
xor
push
push
xchg
pop
jb
jmp
jl
ds
push
sub
out
fisttpll
cmpsb
ss
cli
fnsave
in
pop
push
test
scas
adc
sub
stos
pop
je
xchg
pusha
mov
imul
or
pop
push
mov
test
stos
shrl
mov
lea
jbe
sbb
lock
jl
scas
sub
fdivrl
aas
lock
in
mov
test
cs
gs
xchg
sbb
js
aaa
jno
jno
pop
insl
xor
js
and
bound
cmp
xor
faddl
push
mov
cmc
repnz
xchg
pop
test
cmp
mov
fmul
cmpsb
mov
lcall
push
stos
fdivrs
mov
and
repz
sbb
xchg
ret
add
pop
or
mov
out
or
mov
ljmp
test
imul
jno
sahf
aaa
or
popf
adc
shlb
lods
les
test
sub
push
sub
jle
icebp
xor
jno
xchg
out
sub
ret
repz
push
cmp
lds
mov
push
divb
pop
push
push
jmp
leave
cmp
mov
repnz
lods
pop
addl
repz
mov
sbb
dec
jg
sbb
inc
test
xor
adc
mov
jns
push
insb
jl
inc
xor
aam
out
adc
mov
lock
hlt
enter
mov
sti
xchg
ja
inc
pop
mov
mov
incl
xor
mov
xor
sbb
xchg
pop
xor
push
lea
cmpsl
mov
inc
div
pop
in
in
jp
mov
sub
js
adc
lea
stos
pop
adc
out
hlt
inc
jne
lret
out
inc
or
gs
jns
imul
cmpsb
inc
rorb
cmpsl
jg
sub
and
xor
outsb
sbb
incl
sahf
ret
imul
stos
divl
push
xor
jg
mov
mov
or
divl
js
ret
dec
aam
cmp
xor
inc
icebp
push
fs
xorl
out
inc
test
fidivrs
mov
add
dec
cmp
out
sahf
adc
or
lock
addr16
mov
cmp
aas
adc
jecxz
or
jle
pop
mov
dec
jo
mov
rorb
loope
cltd
mov
in
fwait
jnp
dec
jb
lret
fimull
pop
mov
mov
ss
ljmp
lcall
shrl
mov
aaa
arpl
cltd
stos
call
bnd
push
clc
loope
push
popf
xor
leave
pop
cmp
pop
cmp
loop
add
sti
dec
fsubl
sub
push
loopne
mov
sbbl
or
arpl
mov
cli
fwait
pop
in
lods
arpl
hlt
add
sbb
ret
push
imul
mov
mov
enter
and
out
lret
mov
sahf
dec
inc
push
adc
into
or
and
cmpsl
sti
lock
jp
rorl
test
push
popf
sub
cmp
loop
stos
jmp
cmp
repz
popa
arpl
popf
in
or
mov
fwait
sbb
mov
aam
cmp
fisubrs
adc
int3
fsubrs
push
and
sub
sub
and
push
jmp
xor
lods
data16
shlb
mov
cmpsb
dec
xchg
jnp
mov
and
data16
rcrb
dec
movsl
dec
fsubrl
jge
dec
pop
sti
fistps
shll
imul
fwait
push
fistpl
hlt
sub
jne
das
sbbb
loop
dec
mov
adc
or
fs
inc
adcl
arpl
mov
or
lret
inc
lcall
add
inc
fsub
inc
or
push
fistpl
lcall
pop
cwtl
push
inc
pop
cmp
mov
test
inc
hlt
je
out
adc
jp
and
xchg
push
in
jg
hlt
xlat
out
xchg
sahf
cmp
mov
adc
cmp
aad
fisttpll
jl
ret
in
mov
rol
mov
and
lcall
adc
inc
sahf
mov
in
in
fwait
push
mov
mov
cwtl
pop
into
push
vpsraw
addb
ret
repnz
mov
in
cmp
inc
xchg
lock
and
fs
jg
sar
push
cmpsl
repnz
popf
sub
sbbl
push
sub
shll
adc
push
outsl
adc
xor
andps
push
notb
leave
imul
popa
sbb
or
cmpb
push
xchg
es
ret
cld
je
add
pop
stos
out
aas
sub
sub
daa
lea
in
shll
es
inc
cmpsl
jl
repz
out
cld
rcrl
out
out
and
cmp
loop
gs
les
insb
pop
pop
cmp
pop
cmc
inc
fldenv
or
scas
adc
cmpsl
inc
sbb
pusha
sahf
inc
cmp
sub
add
shl
push
bswap
adc
test
insb
outsb
aas
call
sbbl
jmp
dec
xchg
scas
int3
and
popf
std
test
mov
sbb
push
pusha
fs
push
push
xchg
pop
sti
popf
inc
jnp
popf
stos
mov
fists
inc
outsb
insl
ds
popa
sbb
mov
test
pop
out
xor
inc
lock
xchg
shl
xchg
sbb
adc
scas
lods
push
jb
push
call
es
loopne
ja
insb
orl
enter
and
sahf
mov
mov
sbb
dec
mov
push
rcrl
lock
loopne
pop
cmc
xchg
fcoms
xor
push
icebp
es
sbb
inc
call
dec
inc
pop
sbb
out
mov
and
lods
loop
stos
mov
lods
pmulhw
xchg
lods
jns
stos
stos
ljmp
sub
cwtl
mov
fcmovbe
fs
and
fwait
push
into
jl
lret
scas
and
inc
pop
mov
lret
sub
in
lods
divb
fdivs
lahf
mov
mov
lret
adcl
push
pusha
and
jo
push
jae
jle
pushf
or
add
enter
fnsave
mov
add
mov
jl
or
nop
sbb
add
cmovae
out
sub
dec
fbstp
xchg
repnz
test
sub
push
pop
stos
roll
xor
sub
aad
xor
sub
adc
rolb
xchg
mov
pop
dec
cmpl
pop
in
and
inc
sbb
test
mov
std
xchg
hlt
test
cmc
adc
ljmp
jnp
push
ret
xchg
idiv
push
xor
push
mov
fwait
out
inc
xchg
ret
shl
push
in
cmc
cld
mov
jmp
xor
ret
inc
mov
test
or
jge
ljmp
cld
bound
pop
test
sub
and
loope
outsb
into
jecxz
shl
jbe
mov
iret
test
pop
dec
and
xlat
addr16
test
call
sbb
insl
dec
jae
lea
das
cld
add
cs
test
mov
int3
xor
sti
push
pop
shlb
leave
aaa
inc
into
ja,pt
cs
mov
dec
xchg
sbb
repz
xchg
inc
sub
add
push
push
jbe
sbb
add
dec
in
pushf
inc
sbb
sub
jae
lahf
movsl
pop
testl
lret
into
std
aam
data16
pop
jnp
sub
add
lds
xchg
movsl
sub
cmp
daa
scas
pop
movzbl
mov
sbb
mov
add
add
adc
mov
sbb
lcall
jl
jl
std
adc
jne
xchg
inc
out
fldlg2
pop
push
fsubl
dec
cwtl
jp
mov
xlat
push
mov
mov
stc
fistpll
scas
out
ljmp
mov
cwtl
mov
pop
and
jp
and
xchg
int3
fnstenv
mov
ljmp
push
mov
xor
andb
sbb
mov
gs
iret
cmp
sub
popf
mov
xor
fstpt
cwtl
cltd
add
xchg
gs
stc
movsl
lds
mov
pop
lds
inc
xchg
in
jbe
mov
and
out
jbe
inc
jg
sbb
and
fwait
rclb
xchg
imul
adc
mov
outsl
fimuls
outsl
test
jno
je
in
ret
js
cmpsl
fcmovbe
popf
xor
inc
loop
es
int
shll
push
bound
jecxz
aad
push
out
es
sarb
xchg
pop
jo
.byte
.byte
.byte
and
mov
add
movsb
arpl
aaa
cld
push
test
pushf
xchg
jae
repnz
lahf
pop
push
or
dec
xchg
mov
ljmp
adc
jnp
adc
in
xchg
insb
add
out
hlt
mulb
dec
mov
xchg
cmc
mov
adc
imul
lahf
dec
out
sbb
pop
mov
scas
jno
aaa
mov
mov
dec
fildll
mov
mov
sbbl
lock
repnz
into
lahf
dec
inc
in
and
call
push
xor
imul
int3
int3
cltd
jg
mov
xor
sahf
movsb
in
pop
test
lret
lea
mov
mov
popa
fwait
push
sub
dec
or
movsl
sbb
vphaddwd
pop
addr16
call
adc
icebp
jo
ljmp
sbb
xchg
fnstcw
lcall
pusha
push
xlat
addr16
mov
lock
fs
sahf
fs
cmp
cltd
imul
out
andb
ret
inc
lods
xchg
jg
mov
repz
push
js
mov
mov
sbb
mov
push
shl
enter
sbb
xor
enter
ret
andl
lods
das
cmp
sahf
jae
mov
mov
pop
loop
lds
xor
mov
aad
jecxz
movl
jbe
mov
arpl
xchg
add
ret
es
sarb
leave
fnstsw
push
xor
loopne
pop
mov
add
sbb
dec
popf
mov
xchg
arpl
xchg
fistps
cwtl
leave
stos
aad
mov
cmp
ss
adc
je
int
push
add
loop
inc
jmp
data16
outsb
dec
sahf
popa
jne
jle
jnp
xor
pusha
nop
inc
lods
out
mov
jle
jo
dec
push
les
dec
stos
mov
jl
mov
insb
pop
dec
mov
rcrb
ss
nop
or
adc
repz
xchg
out
call
out
mov
in
shrl
cli
lret
adc
bound
add
jle
push
ljmp
dec
lds
xchg
add
fs
shr
repnz
jnp
sub
movsl
addr16
cmp
or
sahf
add
jl
adc
add
cmpsl
pop
push
inc
mov
repnz
test
aam
in
xchg
push
jnp
cmpsb
mov
sub
jge
add
sbb
loopne
mov
fs
jb
loopne
icebp
add
jae
ss
jae
push
jmp
sti
leave
outsb
mov
je
enter
cli
push
neg
sbb
loopne
and
loopne
ret
or
cmp
leave
pop
mov
jbe
push
cltd
mov
sti
imul
dec
pop
cmp
repz
lea
sbb
iret
sub
data16
pop
inc
push
add
jne
mov
orl
frstor
mov
aas
hlt
jecxz
gs
mov
cltd
xor
jno
adc
mov
shll
nop
jae
mov
sub
dec
push
pop
addr16
mov
out
orb
add
sti
mov
sbb
jle
cmp
dec
cmp
stc
pop
dec
xor
pop
cmp
inc
repz
lahf
xor
xor
outsb
or
and
ret
adc
js
cwtl
mov
cmp
out
push
push
pushf
addl
in
and
ret
jmp
fwait
scas
mov
mov
push
push
jo
hlt
fs
loop
jg
push
dec
jge
push
stc
add
lcall
push
loopne
and
mov
mov
push
xor
cmp
enter
sub
add
mov
and
ja
inc
stos
push
adcb
int3
mov
sub
push
data16
xor
mov
cmpsb
and
xor
lods
js
arpl
out
pop
stos
jns
cmp
mov
mov
iret
pop
clc
jle
and
loop
jae
lea
xchg
nop
stos
cmpl
push
adc
repnz
sarl
sbb
lret
pop
test
das
push
pop
pop
dec
mov
mov
jge
ss
jecxz
sbb
push
mov
cltd
push
insl
and
mov
mov
adc
mov
sbb
mov
aam
lock
jo
movsl
scas
dec
mov
sub
push
daa
icebp
pusha
movsl
aas
daa
subl
adc
jbe
lcall
push
pop
fadds
arpl
push
pop
adc
dec
xchg
out
mov
rorl
push
mov
mov
pop
test
int
mov
iret
push
ds
stos
pop
cmp
or
inc
cmpsl
jne
insl
fcoms
inc
jmp
adc
lcall
inc
leave
ds
jg
mov
xchg
testb
fwait
lods
sub
push
stos
fcompl
in
sbb
int
cltd
ficoms
fst
aam
mov
rcrb
in
lods
addr16
sti
outsb
and
sarb
xchg
jmp
sbb
mov
jg
xchg
rcrb
xchg
jae
mov
clc
pop
xor
outsl
xorl
insl
cwtl
cmp
stc
stos
movsl
mov
dec
jmp
idiv
lods
pop
leave
xchg
aaa
jns
fnsave
lret
cmp
push
stos
fmuls
aas
pop
adc
test
jnp
push
jo
dec
xchg
cmc
leave
addr16
sbb
mov
add
in
xorl
inc
push
sub
orl
js
adc
movsb
push
test
sbb
idivl
out
arpl
sbb
jmp
cwtl
movsb
or
loop
sti
ds
lea
arpl
and
andl
aaa
xor
addl
push
repnz
in
sub
mov
aas
or
and
and
xchg
mov
pop
push
sub
sub
shl
repnz
adc
lods
xor
xor
push
push
dec
jbe
jns
add
jg
xchg
jmp
gs
fdivs
xchg
aas
call
xchg
es
gs
jo
dec
adc
mov
xor
insb
jnp
inc
or
xor
or
lret
sbb
lock
cmc
hlt
std
or
ret
aaa
jl
add
loope
jmp
in
testl
jns
and
inc
mov
pop
xchg
lcall
jp
idivl
fisttpl
sbb
gs
inc
fisttpll
hlt
ret
jns
je
xor
adc
fstpl
xchg
fnstcw
rorl
mov
inc
pop
scas
insl
mov
pop
in
push
jmp
pop
lods
in
mov
pop
xchg
inc
inc
test
xchg
add
sub
pop
sti
gs
pop
mov
clc
clc
lret
mov
sbb
fstpt
add
xor
negb
jmp
dec
inc
adc
mov
pop
sti
pop
jl
lods
inc
aam
cltd
inc
js
dec
pop
sub
into
cmp
mov
or
mov
and
mov
push
fistpl
ror
adc
add
and
sbb
sub
sub
addr16
inc
in
insb
adc
cmpsb
sahf
cmp
or
adc
call
arpl
fadd
insl
jmp
xchg
mov
xchg
sbb
ss
cmpl
cwtl
cs
cmpsl
xor
gs
and
test
and
jns
loopne
leave
out
aas
dec
jae
inc
or
mull
mov
push
out
mov
dec
hlt
lock
in
lds
scas
test
shrb
repz
dec
mov
aaa
or
pushf
je
sbb
jp
and
mov
inc
mov
stos
jl
mov
arpl
push
fs
repz
jmp
push
shll
or
loop
stc
push
hlt
cmp
mov
push
push
push
xchg
xlat
inc
cmpsb
adc
ret
popa
inc
aam
std
cwtl
pop
pinsrw
shlb
adc
sahf
shrl
aas
mov
negb
call
adc
cld
or
cltd
mov
shlb
bound
or
sbb
pop
insb
adc
xor
mov
addr16
imul
out
inc
int3
in
sti
orl
incl
pop
into
push
and
divb
imul
leave
dec
insl
cld
in
pushf
or
jne
xchg
mov
pop
sbb
es
test
lahf
mov
add
mov
sar
outsl
cmp
push
jbe
adc
inc
or
xlat
push
shll
push
leave
imull
sub
lods
pop
sahf
mov
adc
jo
mov
icebp
push
fimuls
sbb
mov
pop
add
add
mov
fmuls
lcall
jo
jne
xchg
adc
lock
and
mov
inc
jg
pop
dec
add
cmp
addl
clc
mov
xchg
pop
in
out
in
in
lds
frstor
sbb
adc
stc
dec
lcall
out
push
popf
lcall
rorl
jg,pn
imul
jb
stos
sahf
inc
negb
lods
lds
add
stc
or
sbb
jnp
pop
adc
lods
mov
adc
jle
xor
dec
mov
mov
push
xor
jb
xor
inc
mov
stos
fwait
and
ror
in
bound
ret
mov
in
faddp
lea
cmp
bound
leave
in
mov
mov
jnp
mov
lods
sbb
lock
push
sub
insl
mov
and
jmp
xchg
addl
sub
sub
or
pusha
push
icebp
fmuls
jbe
or
daa
mov
mov
shlb
shr
cltd
mov
or
jmp
pushf
push
add
pushf
push
xchg
popf
dec
dec
cmp
fistl
pop
push
aaa
jbe
add
lcall
repnz
mov
push
push
add
inc
lds
lea
pop
mov
mov
sbb
jne
ljmp
mov
cmp
mov
xor
test
pusha
mov
push
or
sub
ja
pop
mov
pop
loope
test
lods
mov
inc
std
aaa
sbb
test
scas
inc
push
push
xor
iret
mov
sbb
packuswb
mov
mov
push
push
idiv
pop
popa
pusha
into
mov
insb
jmp
outsb
flds
dec
add
mov
insl
mov
adc
jecxz
loopne
std
ja
mov
push
out
fisubl
xor
cmpsl
inc
jne
in
sub
mov
dec
ja
xchg
jae
stc
jl
jno
adc
mov
rorl
repz
dec
fs
cmpsl
mov
mov
xchg
out
mov
add
and
or
cmp
mov
adc
cmp
mov
lds
cmp
rorl
dec
or
xchg
push
repnz
add
leave
cmp
or
sbb
push
test
repz
pushf
or
mov
push
sub
test
xor
lcall
add
daa
rcrb
std
adc
mov
repz
push
imul
cwtl
sbb
and
dec
cmc
outsb
pop
inc
int3
cwtl
jae
xor
inc
es
pop
xor
fsubrs
out
pop
xchg
int3
or
les
xchg
fs
pop
jl
test
nop
mov
insb
pop
adc
fldz
loopne
mov
jno
dec
rorb
gs
rcrl
pop
mov
incb
push
out
das
rcr
adc
popf
and
mov
call
adc
dec
xchg
fldenv
mov
jns
adc
dec
cmp
inc
aas
pop
movl
cltd
push
mov
adc
call
lret
call
and
clc
sub
cmc
call
imul
mov
dec
shrl
lret
inc
pop
stos
pop
std
rcrb
movsl
or
int
inc
ret
repnz
jge
mov
add
dec
loop
sub
xchg
jb
and
test
stc
mov
mov
push
movsl
jge
fbstp
je
stos
popa
aad
jne
jmp
push
push
or
or
xor
add
pop
rcll
cmp
mov
rcr
cwtl
mov
cmp
in
test
push
lret
loop
std
lock
cld
sbb
push
inc
adc
inc
dec
lock
or
out
popa
xor
fcoms
add
ja
fildll
fwait
sub
jo
enter
dec
movsb
or
xchg
sbbb
pusha
inc
lret
cmc
loopne
sbbl
pop
sbb
cwtl
xor
aaa
sbb
add
aam
out
jnp
and
fists
rcrl
cmp
insl
sarb
adc
pop
mov
mov
xchg
mov
fnsave
jae
jns
cwtl
push
pop
push
fstps
cli
or
and
movsb
cs
mov
pop
and
jo
sbb
jno
repz
push
inc
loope
mov
std
imul
out
pop
bound
xchg
stc
cmpb
inc
mov
mov
cwtl
pop
loope
aam
addr16
jae
xchg
pusha
pop
pop
sti
divb
sbbb
cld
aad
out
sub
sbb
or
push
in
mov
popf
aam
lret
mov
stc
ja
xchg
jb
mov
pop
or
dec
pop
lret
iret
lds
mov
mov
xchg
mov
shrb
call
pop
je
pop
loop
fcompl
push
mov
mov
or
cmp
adc
fcompl
pop
adc
mov
or
and
jg
adc
scas
dec
xchg
sbbb
outsb
mov
xor
aas
lods
fsubrs
shr
inc
popf
mov
imul
and
mov
leave
or
cltd
out
mov
lods
xor
ds
dec
mov
out
xor
pusha
idiv
sub
jo
mov
push
ss
pop
add
idivl
xlat
adc
js
out
sbb
cmpsb
ds
xor
lods
scas
loopne
sub
ss
mulb
fildl
sbb
sbb
xor
movsb
push
push
push
dec
cmpsl
and
out
ljmp
mov
aaa
xlat
pusha
xor
outsb
ja
or
dec
aas
or
inc
push
pop
rcll
mov
inc
dec
inc
stos
mov
aas
ds
jns
in
and
and
jno
js
push
xchg
jl
in
inc
into
inc
ror
mov
cmp
mov
pop
fistps
sti
imul
pop
pop
rcrb
fbld
and
mov
mov
ss
sub
lock
and
clc
mov
xchg
adc
lea
jmp
gs
xor
test
pop
and
sbbl
std
jmp
jnp
mov
iret
xchg
mov
sub
inc
cmpsl
cmp
jecxz
xchg
mov
xor
into
loop
pusha
aas
and
or
ud1
out
ljmp
mov
dec
sub
and
add
mov
ret
push
popf
scas
out
mov
or
fdivrs
xchg
aaa
loope
cmp
imul
lretw
cmp
push
cmpsl
ja
ret
fimuls
sbb
shrb
lcall
ret
inc
fadds
sahf
aad
jno
gs
into
scas
outsb
adc
repz
dec
mov
sbb
repz
out
dec
dec
stos
repz
sbb
cmpsl
clc
jno
outsb
or
je
mov
jge
cld
lea
daa
fwait
cmc
inc
xor
sbb
xor
stos
pop
dec
xor
dec
jae
andb
inc
jle
or
dec
xor
aaa
stc
push
sub
pusha
addb
adc
push
out
mov
jo
ljmp
pop
mov
add
jmp
sbb
in
mov
fmul
sub
cmc
std
call
jge
fisttpl
outsl
daa
or
movsl
cmp
dec
addl
iret
mov
push
inc
mov
stc
push
or
jp
inc
sub
dec
int
and
jne
rclb
aam
fildll
test
aas
cli
mov
cmp
popa
lds
add
dec
sti
pop
pop
mov
or
adc
mov
mov
cli
inc
cmp
jo
ficoms
fldl
fdivr
jne
sub
xor
inc
and
and
cli
cmp
jb
inc
xchg
jle
push
cmp
pop
mov
lods
addl
in
in
fcoml
in
ljmp
test
mov
icebp
aad
mov
push
or
mov
push
repz
movd
mov
push
xor
lods
fadd
mov
cmp
xchg
adc
pop
popf
xor
hlt
out
pop
mov
push
jmp
pop
insl
and
push
mov
outsb
xchg
pusha
push
test
ret
mov
add
ret
xchg
and
cld
push
xor
movsl
sbb
cmc
movsb
fmuls
push
adc
or
mov
cmpl
cld
or
inc
movsl
dec
stc
lods
cmc
mov
dec
jo
or
lea
mov
push
mov
aad
add
jecxz
cwtl
mov
xor
mov
aaa
xchg
and
adc
mov
sub
stos
push
adc
addr16
pop
outsl
inc
ret
sbb
xor
inc
dec
dec
insl
cmp
fidivrs
imul
jle
aam
xchg
lock
sbb
pop
in
mov
inc
cmp
jbe
imul
rcl
jmp
add
xchg
cwtl
jl
jns
add
lods
adc
lds
das
jmp
out
sbb
sbb
sahf
dec
ret
lock
dec
arpl
popa
dec
outsb
jg
movsb
adc
ret
jno
ss
jge
mov
int
jg
fnstcw
invd
shr
rol
mov
fisttpl
jg
int
or
cmp
es
ret
test
jae
pop
insl
sahf
jb
mov
push
add
xor
ficoml
inc
xchg
jge
incl
popf
arpl
int
sub
loop
mov
lret
insl
not
inc
ja
mov
add
pop
cltd
andb
test
lock
ljmp
jno
pop
add
adc
push
imul
jle
jae
mov
aam
loop
push
lods
ds
fdivrl
fcmovbe
mov
xchg
test
inc
mov
dec
in
icebp
push
bound
push
push
push
cmp
pop
aad
sbb
hlt
sub
sbb
xchg
mov
mov
cltd
cmp
sarb
and
insl
int3
aad
or
data16
cmpb
aad
iret
mov
jge
xchg
repz
mov
shll
sbb
cmpsb
out
scas
mov
inc
lock
inc
cmp
lret
jg
cmp
dec
rorl
mov
movsb
outsb
movd
jle
mov
xor
sti
sub
xchg
xor
fadd
sub
pop
aad
sub
lcall
sbb
ret
dec
pop
jg
mov
out
lds
cld
xlat
xor
jae
push
or
jo
hlt
test
addr16
xor
adc
lahf
imul
mov
shl
push
jns
loopne
dec
jnp
je
popa
addr16
jae
mov
mov
iret
cmp
lock
mov
add
test
sahf
push
pop
jg
mov
out
imul
out
sar
std
icebp
aaa
shl
repnz
popf
jnp
mov
lret
xchg
mov
push
pop
mov
xlat
add
out
xchg
push
test
pop
test
and
or
int
out
fxtract
outsb
mov
pop
out
inc
mov
mov
and
mov
out
mov
mov
scas
and
lock
in
add
inc
mov
sub
test
lea
out
xor
addb
xchg
bound
xchg
lds
push
sub
fs
in
sbb
sbb
scas
inc
mov
mov
cmp
inc
xchg
push
ret
xor
lods
xor
mov
fistpll
mov
lds
outsb
mov
out
push
mov
and
in
or
xor
adc
or
add
mov
inc
sbb
sbb
fldln2
daa
shlb
jb
je
fwait
jle
add
xchg
test
cmp
mov
xorl
fistpll
mov
pushf
cmp
scas
repnz
adc
jno
shlb
pop
int
mov
dec
ljmp
pop
push
jnp
ret
movsb
stc
jae
testl
jne
xorb
lahf
outsl
imul
stc
inc
je
or
jmp
inc
jne
sbb
aam
nop
add
rdmsr
jnp
psrlw
inc
pop
jne
xor
cmc
adc
push
hlt
hlt
push
repnz
insl
rcll
pop
test
or
cmpsl
and
dec
xchg
or
leave
xchg
inc
xchg
and
fadds
jge
dec
aas
mov
xchg
mov
jbe
dec
hlt
das
pusha
cs
cld
clc
std
movsl
dec
std
jbe
js
xlat
enter
cmpsl
leave
mov
mov
xor
fcmovb
push
jae
mov
sub
mov
fwait
out
mov
lods
lret
testb
cmpsl
push
test
push
add
out
sbb
into
ret
cwtl
jb
pop
subl
jp
bound
mov
push
add
int
adc
int3
clc
xchg
push
arpl
cltd
mov
divl
push
sub
sub
scas
xchg
mov
push
pop
sub
pop
cmp
jp
icebp
sbb
inc
push
daa
inc
lahf
imul
mov
cmpb
mov
xchg
popf
mov
jl
test
into
sbb
inc
pop
out
adc
das
dec
pushf
sahf
daa
out
mov
lds
xchg
arpl
mov
pop
ret
ds
push
lods
jmp
xlat
xchg
xchg
xor
sub
pop
popa
out
shll
cmp
int
outsl
sahf
mov
mov
pop
aam
lods
test
pop
jb
leave
sbb
stos
inc
rolb
lds
cmp
mov
mov
movb
pslld
mov
mov
popf
fldcw
icebp
cmp
daa
lock
pop
outsb
insl
xchg
dec
add
or
mov
xchg
das
addr16
dec
mov
xchg
xlat
je
pop
pop
pop
fs
xchg
test
push
out
test
cmp
repz
sbb
xorb
or
pop
rcrb
add
dec
lods
lock
aas
in
ret
and
dec
dec
call
push
ret
pop
cmp
adc
adc
and
ljmp
ljmp
jns
shlb
xchg
pop
jle
mov
std
jne
inc
cmp
cmp
add
sbb
mov
jl
insl
add
sti
and
or
mov
push
xchg
aam
pop
or
mov
sub
out
cltd
xor
cmc
data16
push
popa
test
dec
jl
outsl
roll
insb
xor
push
add
push
mov
mov
shlb
movsb
ret
fdiv
inc
sub
cmp
jp
or
sahf
mov
mov
xor
jnp
cmc
call
jae
mov
icebp
add
pusha
cmp
stos
push
loop
shll
loope
inc
mov
inc
jbe
stos
xorl
insb
ds
xor
ret
out
test
add
aaa
inc
outsl
loopne
fs
shl
inc
mov
cmp
jae
pop
lods
shlb
xchg
xchg
cmp
test
aas
dec
mov
mov
test
movsl
das
jl
sub
xchg
dec
shll
add
cmc
fcmovne
xchg
out
mov
sbb
pop
xchg
cmp
mov
outsb
xor
sub
iret
xchg
fistpl
dec
cli
or
mov
int3
push
in
xchg
mov
cmp
inc
mov
dec
pop
bound
mov
test
ss
push
jb
pop
hlt
mov
mov
ljmp
xor
fs
adc
mov
test
clc
push
jmp
and
pop
mov
pop
jmp
sub
out
cmp
divl
push
xchg
testl
icebp
sbb
gs
adc
repnz
push
xlat
out
pop
mov
daa
flds
push
addr16
xchg
cmp
push
jmp
xor
lret
sub
notb
movsbl
rcrl
pop
and
push
and
call
sbb
xor
mov
cli
int3
inc
in
ds
and
out
dec
mov
in
pop
mov
insl
out
mov
pop
lods
mov
data16
inc
mov
outsl
xor
sub
jge
mov
xchg
mov
mov
pop
pop
cmpsb
movsl
fst
cld
cmpsb
hlt
inc
cmpsl
testb
add
inc
mov
mov
sbb
and
int
aam
push
push
clc
sbbl
insl
lret
aas
jmp
fbld
xchg
test
insl
cwtl
adc
imul
mov
inc
mov
cmp
jae
xor
adc
push
jle
in
and
js
and
mov
pusha
mov
adc
xor
bound
pop
xchg
rcr
stos
adc
scas
inc
imul
xchg
jo
push
push
daa
scas
inc
icebp
data16
mov
adc
movsb
fisttpll
cmp
mov
pop
jb
lock
mov
data16
adc
cmp
cs
and
stos
loope
ficompl
fsubl
mov
cmpsl
jmp
fs
std
xor
ja
push
dec
aaa
movsb
push
sub
pop
leave
mov
mov
jae
lock
and
sub
clc
les
xorl
repnz
dec
push
dec
sub
lret
mov
out
push
sub
out
xchg
sahf
dec
lcall
and
inc
inc
arpl
xchg
xchg
jp
in
movsb
mov
xor
repz
psubsb
sub
les
fs
sbb
mov
mov
out
mov
lds
lods
lcall
repz
mov
sbb
jle
aad
lock
cmpl
jmp
imul
jb
dec
lods
fldt
sub
and
mov
stc
imul
and
xchg
jae
fldz
and
in
mov
push
xor
fwait
mov
leave
fcmovu
lret
pop
out
and
bound
or
fisubs
or
stc
and
lret
fdivrl
and
jle
leave
pop
inc
ljmp
addr16
mov
pop
pop
xchg
cmc
adc
pop
movsb
inc
inc
movsl
cli
sarl
jecxz
jle
stc
fnsave
loope
iret
movsb
cltd
jno
jmp
cltd
sbb
fcmovb
insl
cmp
push
cmpsl
cwtl
or
rcr
imul
pop
sahf
cmp
aaa
xchg
fimuls
and
pop
jno
lcall
or
std
jb
mov
xchg
and
xor
mov
push
xchg
jbe
xor
loopne
xlat
aas
add
loop
add
pop
aaa
mov
mov
in
mov
push
fwait
call
mov
mov
cli
inc
pop
cli
xchg
push
push
aas
jo
fidivrl
cmp
inc
out
in
je
dec
hlt
xchg
inc
sarb
xchg
or
xchg
loop
out
mov
mov
imul
aaa
ret
hlt
repnz
stos
je
and
and
dec
xor
sub
pushf
and
ja
fistl
add
sbb
ljmp
cmpsl
fdivrl
or
rcrl
cmp
jno
loope
data16
fsubrs
lret
xchg
mov
insl
dec
or
cmc
add
xchg
xchg
push
out
daa
and
pop
shlb
jle
mov
and
mov
test
jmp
fstps
lret
fiadds
ds
and
jle
adc
or
mov
ret
enter
lock
mov
or
lea
pusha
add
imul
or
cld
inc
mov
mov
sbb
cmp
lret
inc
je
push
repz
jb
icebp
paddusw
dec
popf
jne
nop
jb
cwtl
sarl
jge
loopne
inc
outsl
arpl
ficoml
loope
aad
cmpsl
test
shlb
fwait
test
in
inc
inc
out
test
push
adc
sub
sbb
lret
shlb
lahf
pop
loope
icebp
sbb
je
xchg
push
and
addl
lods
sub
sbb
inc
xchg
push
add
xorl
in
dec
or
and
dec
rclb
or
sub
sub
aaa
movsl
fildl
ret
dec
outsl
and
adc
and
or
test
push
rolb
jnp
adcl
inc
sbb
xor
popa
ds
addr16
leave
jmp
stc
jo
cmc
ficoml
push
xor
xor
add
mov
dec
fadds
mov
inc
pushw
les
push
je
cmp
aaa
cmpsb
dec
es
hlt
xchg
int
cwtl
enter
jle
pop
mov
jle
jle
add
imul
in
mov
sbb
ficompl
jb
jae
aad
aas
and
mov
inc
fidivrl
movsb
xchg
jmp
sarl
call
shl
stos
sbb
add
movsb
cmp
ret
cli
fs
leave
push
adc
stc
enter
imul
sbb
and
fidivl
mov
lahf
int
fildl
sub
mov
lods
xchg
add
cld
je
popf
mov
popf
fistl
adc
stos
mov
mov
jnp
lods
lods
nop
add
in
push
mov
scas
insb
push
xchg
lret
push
add
adc
rcrb
arpl
cltd
aam
add
jbe
jecxz
lea
insl
ret
loopne
fisubs
loope
cmp
in
aam
inc
push
xor
and
adc
dec
fldcw
sbb
lods
add
xchg
ss
loope
dec
inc
push
ja
mov
in
pop
insb
stc
arpl
xchg
xchg
dec
cmp
cmp
mov
xor
loopne
xchg
jne
mov
mov
scas
repnz
sub
scas
xchg
cmp
mov
pop
sub
xchg
rcrb
int
and
shlb
sub
cmp
subb
data16
imul
les
test
mov
enter
xchg
xlat
inc
les
mov
inc
inc
popa
pushf
ja
daa
cld
loopne
pop
scas
jb
or
mov
pop
mov
mov
xor
fdivs
mov
pop
xchg
sub
imul
cmp
ds
ljmp
js
push
mov
nop
inc
lret
inc
pop
lret
ds
int
out
mov
mov
je
sub
jecxz
mov
push
pushf
pusha
fsubrl
push
pop
loope
fsubrs
jne
mov
int3
sbb
adcb
scas
mov
pop
pop
outsb
mov
mov
cmpsl
in
jecxz
mov
sub
xchg
es
push
sub
inc
das
lcall
cmp
je
sbb
outsl
jle
ds
inc
testl
cmp
shr
fisttpl
xchg
lret
aaa
cmp
xor
push
stc
jns
xor
jae
pxor
pushf
add
and
push
stos
xchg
xchg
pop
ror
sarb
and
adc
mov
or
cmp
into
sbb
mov
out
xchg
loop
xor
xor
repnz
arpl
mov
pusha
mov
in
jbe
mov
ljmp
outsl
pop
push
ds
cld
cwtl
sub
sub
mov
cmpl
lahf
sahf
iret
fsubrl
jge
cmpsl
int
jle
das
sub
stos
fstpl
cmp
shr
lret
into
pop
and
inc
xchg
or
lcall
mov
push
in
and
xchg
mov
jne
jno
jnp
lret
xchg
out
sbb
mov
xchg
xor
xchg
pop
cmp
in
inc
mov
fisttpll
pop
lock
cmp
sbbb
mov
push
loope
icebp
add
inc
ror
sbb
cmp
push
ljmp
std
daa
insl
mov
icebp
mov
xor
insl
aas
mov
out
repz
aad
or
sub
jl
ds
jle
sbb
sub
gs
mov
mov
sti
push
mov
cwtl
xchg
in
iret
and
fwait
rcr
mov
fisubs
movsl
push
mov
mov
shll
pop
inc
sub
sbb
leave
mov
mov
je
test
push
jns
icebp
clc
incl
in
and
mov
imul
push
pop
addb
mov
out
xor
or
pop
mov
lods
and
xor
push
int
leave
mov
orb
add
dec
inc
in
out
in
add
loopne
push
jg
xor
sub
test
aad
pop
insb
mov
push
cmp
add
repz
shlb
mov
sub
lea
jne
in
adc
inc
call
sahf
nop
repz
icebp
jbe
ljmp
stc
sti
call
lret
mov
lret
xchg
lret
scas
dec
inc
sbb
and
or
stos
out
jle
adc
and
inc
cmp
arpl
cli
pop
mov
rclb
fdivrp
clc
and
jge
push
nop
inc
fistps
jge
stc
xor
jecxz
and
sahf
jno
stos
sub
cmp
mov
or
cmpsl
ja
push
sbb
add
xchg
and
cmp
nopl
pop
dec
outsl
sbb
xchg
xor
addl
xchg
decl
pop
xchg
xchg
mov
aaa
cltd
hlt
or
xor
jl
xchg
xchg
mov
je
es
mov
sar
insb
adc
jb
pop
sub
inc
xor
dec
cmpsb
push
sub
into
mov
insl
jl
lret
push
in
cmp
cmc
andl
js
es
xchg
out
arpl
movsl
inc
in
dec
mov
push
fidivrs
mov
test
ds
leave
inc
subb
test
inc
aas
ror
xchg
stos
mov
xchg
add
lcall
div
jge
adc
loop
iret
aad
sbb
orl
cmp
adc
inc
jg
pop
sbb
jnp
and
cmp
inc
inc
mov
in
mov
inc
sub
xor
add
or
sbb
insl
pop
pop
jne
sub
clc
jns
and
movsl
xchg
lret
lods
xor
pusha
sub
or
pop
insl
push
repnz
aad
jb
and
test
fwait
sti
aad
xor
inc
and
add
scas
popf
mov
mov
jp
push
out
dec
movsb
addps
sbb
cmp
cltd
sbb
add
inc
repz
out
fdiv
inc
sub
inc
inc
xchg
and
shl
add
lock
ret
pop
pusha
sbb
je
or
inc
and
add
rep
les
cmp
or
and
popf
enter
cmp
push
cmc
mov
aam
inc
cwtl
pusha
aaa
cmp
jno
jmp
ret
push
sahf
mov
out
sbb
and
inc
mov
fbld
into
lods
mov
jmp
cmp
lahf
dec
push
iret
jl
dec
into
inc
push
dec
mov
ret
push
stos
xchg
mov
mov
jl
sub
fstps
mov
stos
and
insb
adc
notl
inc
shlb
outsb
es
ror
push
lret
cmpsl
sub
repz
pop
push
xchg
stos
pop
daa
cld
pop
mov
push
cmp
pusha
lret
mov
jae
mov
pop
out
out
mov
movsb
rorb
gs
adc
lock
cmp
in
out
pop
ss
aam
pop
ret
ret
js
out
pusha
jnp
mov
negl
mov
aas
sub
adc
cmc
sub
inc
inc
mov
and
jo
sub
insb
aas
pop
test
mov
and
xor
adc
shr
xlat
mov
daa
cmp
pop
ret
xor
inc
mov
dec
xor
inc
test
test
mov
fdivr
pop
jnp
mov
test
out
mov
das
and
repnz
imul
or
inc
incb
scas
jle
dec
jbe
icebp
mov
add
inc
in
test
pushl
push
cmc
movsl
fidivs
pop
es
mov
xchg
fwait
jp
dec
leave
icebp
ret
fbld
insb
mov
xchg
add
dec
hlt
pop
lds
jae
into
inc
in
cmp
in
or
xchg
aas
out
dec
pop
mov
loopne
sti
pop
cli
push
cld
outsb
fsubs
into
fcmovnb
ja
or
bound
loope
lea
add
dec
dec
nop
pop
push
cmpsl
lret
or
add
mov
popf
or
test
mov
push
cmpsl
scas
and
outsb
mov
daa
fwait
in
cmp
outsb
jmp
mov
imul
mov
and
add
mov
lret
inc
les
insl
pop
addl
dec
cs
cmp
ss
in
je
cmp
and
jmp
add
je
jmp
enter
push
and
sbb
inc
jo
fyl2xp1
add
lcall
in
int3
xor
pop
and
int
imul
xchg
lock
mov
aaa
or
sbb
roll
ja
cld
push
jns
repnz
pop
dec
sbb
mov
mov
mov
cmc
sub
rcll
adc
jbe
pop
lcall
or
xchg
mov
mov
sub
mov
push
gs
or
mov
push
push
mov
sbb
mov
lods
loopne
mov
int3
jmp
and
cmp
push
mov
or
popf
add
data16
inc
mov
leave
sbb
mov
jae
mov
es
insl
hlt
sub
call
inc
test
mov
scas
xchg
inc
xchg
jb
scas
sahf
and
out
scas
stos
or
cmp
in
lahf
jns
mov
cmc
cmpsl
ljmp
fisubrl
fwait
mov
stos
arpl
pusha
mov
into
cs
xor
mov
adc
inc
sub
jge
jecxz
pushf
mov
mov
xor
rol
mov
dec
cli
mov
add
jae
data16
sbb
int3
xor
xchg
test
ss
arpl
jbe
dec
in
xchg
inc
je
rorb
sbb
loop
xlat
mov
push
fbstp
fcoms
mov
cmp
scas
push
fdivl
push
and
in
mov
jno
lods
je
and
xchg
dec
iret
cltd
pop
mov
sti
data16
scas
adc
call
jnp
mov
push
add
sub
iret
addl
cmp
shrl
popf
dec
insl
cli
clc
pop
sub
pop
jmp
pop
out
add
mov
inc
or
pop
or
cs
cs
mov
frstor
pop
or
pop
outsb
cmp
pop
pop
xchg
lods
adc
mov
sub
mov
sti
aad
add
outsl
jbe
dec
pop
mov
out
cld
loopne
std
sub
loop
mov
ljmp
mov
fidivl
imul
and
popa
sub
jnp
and
stos
mov
xchg
mov
outsl
xchg
sub
push
mov
push
xor
rolb
jns
pop
in
sub
jns
xor
ljmp
push
cltd
adc
sbb
jg
and
pushf
jmp
inc
in
sub
stc
dec
leave
jl
js
popa
je
sub
pop
leave
nop
dec
insb
cmp
sub
mov
sub
push
push
inc
xor
pop
je
pushf
mov
int
mov
mov
sub
mov
mov
or
repz
xor
or
push
xor
loope
sbb
add
and
pop
daa
mov
xor
adcb
stc
cmc
mov
loope
shlb
push
fmull
aam
imul
aas
sbb
hlt
jb
sbb
jl
test
mov
or
xchg
clc
xor
xor
lret
scas
jecxz
scas
xor
pop
inc
cmp
push
and
mov
mov
and
fidivrs
pop
or
jl
cmp
test
mov
insl
mov
sbb
out
or
and
mov
xchg
outsb
dec
pushf
test
cltd
les
cmp
mov
insl
cli
in
negb
das
popf
mov
xor
les
mov
cmp
jge
xchg
data16
ficoms
daa
into
cmp
mov
es
outsl
sbb
dec
jnp
cmpsb
xchg
mov
cltd
jge
leave
lahf
lods
inc
shrb
outsb
sbb
xchg
es
xchg
popa
loope
dec
leave
aas
adc
cmpsb
xchg
les
jno,pn
cld
or
or
and
cltd
dec
cmpsb
shlb
and
mov
cmp
sbb
or
adc
add
out
lret
incl
mov
in
or
inc
jmp
mov
in
cmp
int3
sar
pop
sti
movsl
call
jmp
adc
xchg
mov
lea
dec
cmp
cmpsl
sarb
sub
jge
xchg
pop
into
jbe
loop
and
dec
fdivrl
arpl
in
rorl
popa
add
je
mov
xor
push
jmp
mov
xor
jne
scas
repz
rcrb
faddl
movb
idivl
jp
and
inc
jle
mov
mov
shll
cs
dec
inc
adc
xorb
add
out
push
aam
outsl
sbb
ss
sub
inc
push
pop
aaa
ljmp
repnz
xor
inc
lahf
sub
lods
mov
adc
insb
adc
icebp
sub
mov
lcall
aaa
mov
mov
sub
mov
cmp
cli
daa
dec
add
cmp
je
inc
lea
or
cmp
sbb
pop
inc
sbb
cmpsb
mov
test
mov
fstl
adc
test
repnz
inc
adc
int
lock
sub
xor
mov
pusha
xorl
jmp
or
cmc
pop
mov
cmpsb
jle
cmpsb
int
test
iret
dec
arpl
in
stos
dec
push
dec
outsb
and
cmc
out
push
in
mov
push
cmp
je
mov
fs
in
adc
out
pandn
mov
jle
mov
fisttpll
adc
fldenv
sahf
xor
lret
sub
inc
mov
mov
in
or
xchg
xchg
lret
lods
dec
mov
adc
sbb
mov
in
push
pop
fs
push
push
or
test
inc
add
adc
mov
test
stos
and
pop
out
adc
cmc
push
sbb
ljmp
add
dec
sub
pop
xor
push
pop
sub
das
int
es
xchg
cs
inc
sub
bound
sbb
out
push
loopne
sub
aam
add
mov
dec
stc
add
sarb
adc
push
shlb
std
jp
adc
fistpll
les
int
dec
dec
push
adc
add
xor
push
es
pop
dec
or
jecxz
sbbb
cmp
and
sub
mov
.byte
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
pop
push
dec
adc
push
daa
pop
jb
mov
add
mov
mov
pushl
movzwl
pop
mov
sub
add
mov
add
or
mov
push
mov
pop
mov
sub
jmp
lea
nop
mov
sti
adc
decl
test
lret
xchg
bound
leave
fstpl
cmp
xlat
imul
and
out
inc
and
out
decb
decb
outsl
jge
outsl
ja
addl
rcrl
mov
iret
imul
mov
mov
daa
jmp
sbb
fs
mov
jb
addl
loope
fistl
rcl
pop
out
cmc
insl
cli
mov
pop
mov
pop
lods
outsb
jne
addl
pop
sub
addr16
fidivl
mov
cwtl
insl
mov
xchg
out
mov
jbe
jecxz
xchg
mov
outsl
mov
adcl
gs
pop
jecxz
inc
fidivrs
mov
fimuls
addl
insb
mov
pop
or
xchg
mov
std
pop
push
dec
faddl
push
xor
jle
sbb
out
inc
xlat
loopne
aas
outsl
adc
daa
inc
pop
sub
push
inc
cmp
aas
outsl
call
push
dec
js
pop
in
and
outsl
call
cmp
insb
lock
cmp
shl
mov
inc
sub
repnz
and
inc
pop
dec
xlat
fcomp
stos
aas
outsl
mov
sub
push
mov
add
pop
pusha
js
pop
out
jle
jb
jne
stos
aas
loopne
adc
aad
mov
xor
stos
dec
sub
aas
sub
jno
adc
lea
rorb
sbb
pop
push
xor
mov
mov
cmpsb
cmc
xor
mov
ds
aas
outsl
call
add
ret
stos
aas
outsl
call
mov
outsl
call
stos
aas
aam
stos
aas
outsl
push
pop
or
sahf
sbb
fs
stos
aas
outsl
cmp
dec
sbb
shrl
aaa
cmc
push
arpl
mov
call
cmp
push
sbb
push
jl
push
call
inc
mov
clc
stos
fs
jbe
fdivl
xorb
jo
in
inc
xor
int3
js
jbe
in
cmp
jmp
ljmp
sub
in
es
fs
jle
pushf
imul
call
cmpsb
jbe
add
jb
xor
mov
mov
jne
leave
fs
int3
sub
in
int3
mov
clc
cmpsl
push
push
jecxz
jmp
fcomip
into
cmp
or
pop
addr16
jecxz
jo
and
mov
int3
inc
sub
ds
mov
jecxz
jo
or
sbb
int
or
jle
fnstcw
pop
loop
jbe
xlat
int
fiaddl
out
or
push
call
inc
and
out
shll
add
jmp
cmp
mov
dec
jne
add
daa
jno
js
cmc
loop
mov
fisttpl
insl
out
leave
push
aaa
dec
mov
jno
js
dec
loopne
mov
rorb
cmpsl
and
dec
and
xchg
push
out
mov
fldt
mov
pop
cs
jno
inc
adc
lcall
cmpsb
jp
and
pop
xor
pop
aas
pop
push
xor
icebp
xor
sub
outsb
xchg
xor
inc
xchg
jb
dec
fidivrl
dec
and
xchg
orl
add
fadds
jno
dec
and
stos
pop
sub
fwait
xlat
flds
subb
aad
sub
stc
and
mov
sub
fimull
sahf
orl
add
fildll
cli
sbb
xchg
mov
jno
fisubl
hlt
add
fisubl
cli
lds
insb
xchg
xor
fsubs
add
xor
or
flds
push
mov
dec
es
fsubs
pop
sub
push
dec
pop
jp
loope
mov
hlt
adc
push
outsl
pop
and
aas
hlt
add
fwait
mov
and
cmp
jl
jno
or
orl
sbb
flds
inc
psubd
and
jg
push
in
fmulp
insl
mov
cli
mov
xchg
mov
jno
fisubl
cli
sub
xlat
push
xchg
and
mov
cmp
inc
movsb
jno
stc
and
mov
sbb
lods
jno
dec
and
xchg
jno
dec
and
repnz
push
neg
cltd
jns
into
nop
cbtw
ret
inc
fimull
outsb
add
jg
out
xor
cmc
mov
xor
xchg
rclb
ja
mov
lcall
pop
cmpsl
lret
xchg
outsl
mov
test
mov
inc
push
push
jl
inc
push
ljmp
cwtl
mov
adc
jg
dec
in
test
stc
jg
xor
iret
inc
and
xchg
ljmp
cwtl
mov
adc
jg
lock
pop
inc
cltd
cltd
into
inc
and
xchg
ljmp
cwtl
mov
adc
jg
lock
cld
jae
imul
and
add
add
clc
pop
or
jno
dec
es
inc
push
push
jl
inc
push
ljmp
mov
dec
inc
mov
xor
pop
gs
cld
jae
loop
es
fisubrl
dec
and
add
in
add
outsl
cmc
ficomps
xchg
push
outsl
jmp
jo
fmuls
inc
psubusw
ficomps
xchg
push
outsl
jmp
jo
in
outsl
repz
mov
jns
dec
and
xchg
enter
and
mov
jb
inc
and
xchg
jno
rcrl
sbb
sbb
xchg
sar
sub
dec
aas
mov
insl
xchg
adc
or
setl
xor
sub
xchg
adc
add
xlat
jmp
pop
daa
jno
fmul
xchg
mov
adc
xchg
mov
xchg
pop
jle
add
aad
mov
xchg
and
push
sbbl
jbe
popa
daa
insb
inc
scas
es
pop
daa
mov
lahf
push
cmpsl
cld
cmpsb
pop
add
pop
in
xor
das
pop
test
ss
xchg
and
jae
cmc
ss
sarb
test
lock
jge
xor
xor
cmc
push
xchg
jno
dec
and
xchg
jno
dec
and
xchg
jno
dec
and
xchg
jno
inc
and
jno
test
jno
mov
jno
dec
and
xchg
jno
dec
and
xchg
jno
add
outsb
xchg
jno
dec
and
xchg
jno
dec
and
xchg
arpl
xor
adc
sub
cmpsl
jns
sti
or
or
sub
stc
mov
imul
mov
pop
popa
mov
inc
pop
xor
sbb
outsl
dec
aas
ret
xchg
mov
mov
xchg
mov
les
std
subb
fcompl
mov
popf
mov
xchg
push
fisttpll
mov
popa
arpl
sbb
jae
test
mov
dec
lods
push
dec
jnp
adc
pop
adc
mov
push
mov
mov
sbb
dec
insb
push
iret
sbb
out
rcr
inc
dec
jl
dec
push
repnz
cltd
sbb
and
in
cmc
fists
insb
stos
push
scas
imulb
sbb
dec
dec
inc
movsb
nop
inc
lock
mov
out
js
cmp
sub
lret
sbb
sbb
pop
dec
sbb
sahf
xor
addr16
mov
jmp
ficoms
sbb
pop
inc
test
dec
out
mov
jge
hlt
ds
push
xor
fimuls
adc
mov
sbb
sbb
mov
aad
cwtl
nop
add
or
or
fs
xchg
cmp
push
aaa
pop
addr16
inc
adc
push
out
cmp
rcll
stos
lahf
out
xchg
pop
pop
int
out
sbb
stos
sbb
in
gs
enter
add
pop
outsb
icebp
inc
in
addl
enter
push
test
inc
jmp
mov
adc
xlat
xchg
sbb
out
adc
jb
sbb
ja
mov
std
cmp
ja
insb
dec
call
mov
xor
shlb
pushf
pop
adc
sarb
or
inc
xchg
jb
dec
aam
xchg
mov
xor
cwtl
rcrb
add
popa
and
pop
mov
xchg
mov
into
dec
mov
xchg
push
sub
sbb
mov
cmp
xchg
inc
xchg
xor
inc
clc
rclb
cmpl
mov
xchg
sub
push
shrb
outsb
pop
stos
popf
cmp
cmpb
popa
fs
dec
sbb
lock
push
xor
movsl
xchg
dec
stos
and
int3
fidivs
adcl
int
or
push
add
call
inc
sub
push
aaa
inc
leave
inc
cmc
rclb
sub
pop
or
xchg
sub
cltd
push
lcall
mov
adc
add
loop
shlb
imul
push
pusha
and
cmpsb
cmp
and
add
add
add
cmp
add
cmp
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
cmp
add
cmp
add
add
xor
add
cmp
add
mov
add
add
add
stos
cmp
add
push
cmp
add
pusha
cmp
add
insl
cmp
add
jns
add
lret
cmp
add
xchg
add
outsb
gs
jo
xor
cs
insb
add
gs
xor
fs
insb
add
imul
insb
add
insl
fs
xor
cs
insb
add
outsb
jae
outsl
outsl
insb
cs
add
insl
arpl
xor
fs
insb
add
outsb
imul
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
cmp
add
in
add
add
add
lock
add
cld
cmp
add
or
add
add
add
adc
add
sbb
add
add
add
cmp
add
add
add
push
add
add
add
add
dec
gs
imul
outsl
jo
push
arpl
add
jae
outsl
jb
inc
inc
add
add
je
imul
inc
add
add
outsb
push
jb
outsb
je
jb
add
add
je
jb
gs
gs
popa
jae
push
gs
outsl
outsb
jae
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
add
fdivrl
add
add
add
cltd
loopne
dec
inc
movsl
jae
mov
insb
in
xor
pop
mov
int3
pop
je,pn
cmpl
dec
mov
pop
mov
or
xchg
inc
sub
into
xchg
cmp
mov
sub
mov
ss
fnsave
pop
xor
int
inc
xchg
jg
iret
cld
jmp
pop
shl
dec
add
addr16
into
cmp
push
sub
xor
andb
or
lea
imul
clc
and
mov
into
out
dec
inc
test
push
cmp
cmpsb
loope
fisubs
sbb
inc
push
call
insb
mov
push
scas
mov
cmp
pop
adc
inc
lret
orb
inc
and
jle
jnp
out
pop
dec
inc
xor
call
sub
nop
cld
cld
mov
cmc
pop
jno
imul
mov
pop
out
jbe
mov
push
pop
cmp
sahf
and
xchg
adc
shlb
insl
sti
ja
sbb
and
and
pop
push
outsb
sub
and
lcall
sbb
xor
jp
and
aaa
sub
push
lcall
ja,pt
adc
pop
faddl
xchg
add
cld
fdivs
mov
sub
insb
leave
movsb
dec
dec
pop
and
sbb
inc
adc
push
test
int
in
cmpsb
push
or
add
push
mov
call
call
jns
inc
stos
bound
adc
outsb
adc
adc
imul
pusha
gs
test
xor
lock
jae
andl
mov
aaa
data16
add
mov
cmc
mov
push
shrl
lock
xchg
adc
cs
andl
shld
push
int3
ffreep
mov
pop
pop
outsl
inc
jb
jmp
ret
insb
test
mov
adc
movsb
pop
adc
push
xchg
inc
aad
data16
or
sbb
je
inc
pop
inc
test
jmp
movsb
dec
cmp
imul
imul
fwait
mov
stc
mov
iret
adc
mov
stc
repnz
dec
dec
xchg
lea
fmulp
in
dec
mov
push
jecxz
test
aaa
dec
rolb
mov
cltd
mov
sbb
out
push
jo
ljmp
pop
int3
cmpsb
mov
mov
cmp
cmpsl
push
dec
sarl
jp
dec
test
ljmp
loopne
pop
in
dec
push
iret
lea
or
mov
lea
dec
loopne
ss
scas
popa
ret
mov
xchg
cmp
xor
in
mov
pop
faddp
movb
xor
arpl
icebp
cmp
clc
shll
inc
dec
je
sbb
popf
inc
mov
xor
movsl
stos
arpl
and
pushf
pop
mov
hlt
adc
jbe
lea
inc
dec
fidivs
xlat
and
push
fs
jne
dec
lock
dec
les
jnp
insb
lock
sbb
sahf
into
and
fmull
or
cmp
lds
in
add
xor
jp
adc
fdiv
jb
mov
aam
push
mov
or
xor
xor
mov
jno
xchg
push
fs
out
insl
icebp
sub
jb
fwait
into
sbb
imul
xchg
fnstenv
pop
and
or
xor
sub
pushf
imul
push
inc
adc
lock
pop
cmpl
and
dec
les
or
jae
icebp
or
fisttpl
mov
jne
and
or
sub
cmp
mov
mov
out
pop
sub
jo
hlt
imul
insl
add
mov
int
shlb
and
push
cltd
pop
icebp
stos
mov
loopne
loope
out
mov
sub
sub
push
out
decl
inc
or
sub
jle
adc
popa
pop
push
push
test
push
hlt
cli
movsb
in
jae
cmp
cmp
or
pop
test
lret
sti
sbb
ss
int3
icebp
mov
cwtl
cmp
jle
cmp
in
dec
sub
mov
bound
arpl
das
push
cmp
jl
cmp
mov
stos
lcall
bound
pop
lods
cmp
lods
mov
cld
add
xor
cmc
cs
mov
lods
mov
jp
xchg
cmc
mov
rcll
jns
imul
mov
inc
mov
js
jmp
cmc
std
je
in
imul
gs
aaa
bound
mov
divb
push
add
ja
call
and
clc
sub
jo
push
inc
out
sbb
push
daa
out
mov
repz
int3
xchg
adc
adc
sbb
push
notl
pop
pop
mov
testl
fwait
andl
push
pushf
int3
movsl
imul
xchg
add
pop
mov
sub
mov
inc
adc
cs
ja
pop
insl
mov
jns
inc
cmp
ja
cld
inc
mov
sbb
add
pop
pop
cmpsb
cltd
fs
sub
sub
cs
pusha
adc
mov
xor
loope
inc
hlt
mov
mov
aas
mov
adc
enter
aaa
jmp
push
and
pop
pop
push
ljmp
loope
jecxz
ljmp
push
fld
push
imul
iret
stos
push
test
push
sub
bnd
imul
negb
dec
xor
ret
repnz
adc
add
fxch
mov
mov
push
arpl
jnp
adc
stos
jp
mov
loop
rclb
adc
int
cmp
push
dec
mov
jbe
dec
cli
cmpsb
into
mov
into
xor
add
and
sbb
fstpl
enter
sbbl
xor
out
xchg
sbb
push
mov
je
mov
pusha
pop
push
iret
xchg
mov
mov
inc
cltd
stc
sbb
fs
test
push
scas
mov
inc
jb
xchg
cmp
jmpw
dec
push
push
inc
push
or
sahf
rcrb
xchg
int
aam
lret
rcl
mov
pop
ja
xor
cmpsb
es
arpl
inc
orl
mov
cmp
xor
mov
sbb
popa
rorl
adc
mov
jo
mov
pop
sub
lea
js
aaa
aam
aam
and
arpl
out
mov
lods
jbe
push
xor
ds
fldl
push
lret
aas
sti
incl
cs
dec
lods
jmp
jns
outsl
jmp
push
daa
cs
dec
and
xchg
or
or
stos
hlt
cli
popf
inc
into
scas
inc
xchg
mov
scas
into
or
cmc
int3
in
sub
push
andl
xor
popf
in
pop
sahf
loope
call
cmp
mov
sbb
js
adc
pop
sar
push
scas
stos
cmp
push
mov
aad
aam
push
add
int3
test
xlat
cmpsl
fs
imul
ds
cmpsb
sbb
fdiv
dec
sub
add
shrl
mov
test
adc
shrl
lock
cmc
or
aam
inc
pusha
push
mov
lcall
out
in
sbb
xchg
adc
xchg
mov
addr16
cmp
scas
and
icebp
mov
mov
cmpsl
movsb
mov
inc
lret
mov
jo
jno
push
sub
icebp
sbb
movsb
stos
mov
adc
xor
cmc
pushf
lret
imulb
and
xor
lods
movsb
pop
adc
push
push
push
push
lea
xor
mov
ss
pop
jg
mov
and
aas
ret
xor
inc
mov
xlat
dec
xor
push
mov
in
xchg
mov
adc
xchg
mov
stc
and
stos
inc
cmp
pop
das
aaa
inc
mov
inc
rol
mov
pop
xor
jl
mov
cwtl
mov
xchg
xchg
cmp
xor
mov
or
shll
xor
adc
ret
out
lock
pop
lods
fdivp
ret
add
xor
mov
adc
jb
push
jns
mov
shlb
pop
arpl
jne
mov
fwait
imul
cmp
in
imul
out
fdivs
mov
add
xorb
sub
dec
das
sti
sarl
test
addr16
pop
mov
and
dec
or
imul
movsl
push
jno
mov
jecxz
mov
pop
adc
loopne
mov
data16
push
stc
rorb
mov
sarb
xchg
and
pop
sub
mov
adc
insl
stc
dec
loop
dec
xor
enter
mov
pop
movsl
mov
adc
outsl
add
test
mov
sbb
mov
inc
in
lods
sub
push
decb
sbb
cmpsl
push
pusha
test
mov
fs
ds
into
cld
insb
sbb
adc
jo
and
push
outsb
and
lods
xor
xor
adc
cmp
and
pop
test
jl
cs
sub
or
mov
push
adc
mov
mov
adc
jae
scas
stc
cs
test
mov
loopne
push
inc
jb
add
aad
cmp
outsl
rcr
fdivs
shl
pop
ljmp
cltd
inc
stc
sbb
shll
dec
push
adc
or
dec
sbb
xchg
jae
mov
arpl
scas
xor
outsl
push
daa
lods
cltd
push
mov
cli
or
cwtl
imul
into
xchg
int3
iret
push
ss
pop
and
dec
push
cmp
repz
sbb
ret
push
aam
pop
mov
fcompl
dec
out
sbb
adc
fstpl
or
jl
scas
clc
and
test
outsb
in
pop
out
daa
ret
push
push
loopne
or
mov
cmpsb
and
mov
inc
inc
cmp
push
or
in
pop
ds
mov
add
repnz
xor
stos
out
or
push
sub
pop
ja
mov
leave
jl
pop
mov
fmul
adc
sbb
sub
ret
loopne
add
push
fisubrl
xor
fisubl
pop
rorb
rcll
cmpps
or
loope
inc
icebp
sbb
popa
popw
pusha
cmp
aaa
pop
lcall
add
push
mov
jp
sbb
push
sub
push
xor
mov
paddsb
adc
cs
loopne
lds
push
sbb
xchg
testl
enter
frstor
jg
mov
cltd
adcl
cmp
fnstenv
sub
and
call
mov
loop
xlat
mov
mov
rclb
daa
pushf
stos
stc
es
lret
mov
repnz
jecxz
dec
lds
mov
sub
and
cmp
icebp
pop
mov
out
popf
adc
es
out
loopne
mov
ja
jle
sbb
dec
das
cmp
fnstsw
pop
movsb
cmc
adc
and
fstp
pop
lds
jmp
ret
mov
call
inc
push
loopne
jae
aas
scas
ljmp
or
add
iret
cmp
lahf
sub
and
nop
inc
mov
inc
inc
jge
cmpsl
jns
dec
pop
es
ficoml
lahf
cmpsl
div
mov
adc
scas
and
imul
clc
pusha
sbb
dec
add
sahf
jge
mov
and
mov
in
jp
into
sahf
or
sub
in
adc
nop
dec
ss
sti
int
xor
roll
std
pop
es
pop
dec
hlt
add
sti
inc
sbb
adc
shr
test
cli
je
jae
arpl
cld
sub
sbb
xchg
arpl
and
fcmovbe
xchg
insl
in
xchg
sarb
retw
and
es
test
subb
lods
push
pushf
jmp
nop
int
mov
xchg
push
jmp
enter
mov
insl
mov
pop
out
mov
test
cmp
jmp
mov
sbb
inc
insb
dec
loopne
pop
pusha
inc
gs
push
adc
sub
add
push
inc
ds
bound
mov
inc
sub
lret
pop
or
push
je
fisttpl
lock
sub
sbb
dec
sbb
xor
mov
inc
pusha
test
cmpsl
mov
mov
sahf
mov
icebp
ret
mov
mov
stos
jne
icebp
or
fucomi
xor
adc
mov
pushf
enter
or
jb
pop
xor
scas
ljmp
pop
mov
xlat
cs
jp
inc
int3
sbb
xchg
xor
loopne
es
dec
popa
gs
cltd
imul
daa
dec
dec
lods
ljmp
es
pop
lock
insl
mov
or
repnz
xor
fmull
push
sub
repnz
iret
inc
iret
mov
movsl
int
xor
push
aam
inc
push
lds
jl
mov
test
xor
scas
jle
in
adc
lcall
fcmovne
push
popa
xlat
out
stc
repz
out
frstor
cltd
push
xchg
mov
out
fwait
inc
cld
lea
mov
and
sbb
jge
push
iret
mov
lret
xchg
sbb
out
jg
addr16
push
mov
cmp
mov
outsb
movsl
dec
addr16
mov
lods
ret
dec
das
inc
mov
jge
sbb
xor
aad
and
mov
or
rcll
loope
imul
or
xlat
pop
adc
adc
in
iret
fnstenv
xadd
and
cli
cli
sarl
pop
and
inc
and
bound
mov
mov
test
add
add
rol
jp
sarb
mov
lahf
jg
lret
insb
and
mov
jo
jl
cmp
movsb
pop
add
test
jp
dec
call
imul
jmp
inc
ret
ss
push
stos
mov
pusha
adc
loope
in
mov
push
jns
push
push
pop
inc
cltd
dec
dec
xor
into
shlb
das
into
shlb
adc
mov
mov
mov
enter
in
mov
std
lock
or
inc
cmp
js
clc
jecxz
xor
push
adc
mov
inc
lock
push
fstl
xchg
bound
mov
sbb
and
pusha
sbb
ds
fwait
cld
les
cmpb
lret
mov
xchg
lods
mov
loopne
sahf
jno
inc
cld
out
dec
cld
out
dec
imul
or
in
xor
outsl
cmp
outsb
or
scas
sub
fyl2x
sbb
negb
sbb
aas
in
in
adc
xor
cmpsl
out
mov
filds
mov
or
sub
and
fidivrl
push
aas
not
imul
inc
pusha
inc
loop
fstpt
mov
and
or
mov
or
push
jle
test
push
rorl
arpl
movsb
stos
mov
dec
adc
add
lea
repnz
jns
and
movb
bnd
fwait
idivb
stos
add
and
loop
idiv
mov
stos
jmp
cltd
jns
lret
aad
mov
fsubr
iret
sbb
pop
jnp
scas
dec
inc
imul
cld
pusha
out
lret
mov
out
push
xor
aaa
dec
jmp
movsl
add
jg
aaa
or
xchg
lcall
out
inc
pop
cmc
lcall
packssdw
mov
and
push
xchg
enter
orl
mov
xlat
jne
cmp
fwait
test
cwtl
jmp
divb
in
xchg
popl
pop
int
mov
add
push
inc
or
cmp
dec
mov
loop
add
jb
loop
ret
shrl
setns
fstp
aad
mov
xor
and
pop
scas
jge
or
out
lods
cmp
mov
test
aad
inc
xor
rorb
cld
xlat
les
jle
cmp
aaa
loop
lods
or
jge
je
pop
inc
test
mov
scas
ret
test
out
sub
mov
mov
mov
xor
push
pop
fstpt
pop
cmc
loopne
sbb
les
inc
dec
int3
or
sbb
stc
lock
test
mov
jne
test
out
stos
dec
lahf
dec
aam
aam
dec
lea
mov
and
aas
imul
lods
bndldx
scas
push
imulb
push
and
negl
and
stos
inc
repnz
ljmp
orl
xor
lcall
and
ret
xchg
test
sub
pushf
xchg
fnstcw
pop
movsb
les
mov
loopne
jg
cmp
stc
add
mov
dec
sbb
sbb
ss
shrb
or
lret
sbb
lods
icebp
int
or
cli
mov
cmp
mov
xchg
mov
dec
shll
out
lahf
sub
jp
out
inc
and
cwtl
add
dec
push
or
inc
aas
adc
mov
jl
cltd
inc
inc
arpl
add
insb
out
jae
pusha
pop
pushl
nop
and
dec
popa
aam
mov
stos
cmp
movsb
test
jmp
dec
pop
mov
iret
rcrl
or
ror
lods
xor
and
inc
call
mov
jb
sbb
xchg
daa
rorb
insl
cmc
add
adc
dec
in
stos
add
add
jo
push
lea
bound
int
jp
add
outsb
lods
inc
leave
jmp
stos
jl
pop
jns
cwtl
and
testl
mov
adcl
mov
xor
test
or
or
adc
push
push
aad
mov
inc
xor
fwait
sub
int3
dec
sbb
or
jne
js
clc
aaa
mov
mov
addr16
cltd
mov
sbb
mov
ds
push
cld
xchg
lahf
add
push
xchg
mov
sbb
sahf
pop
jns
push
movsb
scas
inc
cs
fs
inc
loope
push
inc
mov
xchg
mov
mov
loope
mov
xchg
sub
jmp
xor
lods
sub
cmp
repnz
sub
push
push
out
ficoml
mov
xchg
mov
cmp
cmp
push
inc
loope
or
pop
test
rclb
jg
std
cmpb
aaa
cmp
mov
pop
into
push
xor
pop
pushf
mov
sub
subb
cmp
mov
enter
xor
pop
jmp
xchg
scas
push
sbb
test
push
stos
pusha
inc
sub
add
add
cmp
int3
stos
call
std
xor
xor
xchg
adc
pop
jl
adc
xchg
test
in
sub
xchg
push
mov
lret
inc
icebp
mov
and
aam
and
in
cmp
sub
cwtl
dec
and
mov
or
xchg
xor
and
repnz
and
ss
iret
scas
push
xor
pop
push
cld
in
aaa
test
mov
cwtl
mov
adc
fwait
cld
ds
in
cwtl
fcomps
dec
inc
fnsave
cmpsl
mov
ja
jp
mov
addr16
das
xchg
jns
sub
shll
add
mov
stos
ret
add
bnd
pop
and
jg
sub
mov
sbb
mov
pop
or
inc
js
push
sti
lea
shrl
int
jmp
lcall
je
adc
sub
sahf
fdivrp
fcoms
xchg
dec
and
pop
jns
push
stos
inc
mov
sub
xor
jmp
test
jnp
lock
dec
repz
aas
mov
lea
pop
mov
movsl
call
adc
or
xchg
sub
mov
cmc
out
repnz
xor
stos
aam
inc
cs
jg
sbb
push
imul
sub
jge
aam
mov
pop
shlb
mov
jb
dec
scas
addb
push
or
push
xchg
in
inc
jns
dec
int
inc
iret
leave
adc
push
mov
inc
add
stc
in
popa
loopne
xchg
scas
pop
push
outsb
leave
test
cmp
xchg
flds
dec
outsb
pop
lds
fldt
test
les
movsl
dec
inc
iret
movsl
rorb
or
popa
cmp
mov
mov
mov
cwtl
scas
cmp
xchg
aas
fsub
data16
pop
mov
mov
test
adc
call
es
cmp
push
test
mov
lock
xchg
imul
adc
adc
inc
divb
adc
xchg
mov
pop
popa
mov
add
or
and
push
ljmp
icebp
pop
popf
adc
nop
popf
jg
jb
push
mov
mov
sub
ljmp
iret
push
pop
mov
sbb
adc
inc
testb
inc
es
rcrl
mov
adc
icebp
or
and
mov
inc
ret
mov
sbb
mov
pop
mov
xchg
adc
and
jp
daa
or
or
sarl
mov
pushf
sbbl
fdivrl
dec
inc
pop
daa
fsubrl
lock
jb
insb
jae
sahf
mov
push
test
xchg
les
or
sbbl
push
rcll
sub
or
cs
in
call
stc
jbe
pop
and
jo
mov
pop
mov
push
incl
hlt
mov
mov
outsb
test
xchg
movsb
mov
xor
cmp
movsb
movsb
xlat
inc
rcrl
movsb
pop
adc
and
ds
enter
cltd
pop
into
sub
stc
popa
pop
jne
stos
adc
push
loopne
xor
cmpsl
push
aas
data16
sub
loop
decl
loope
je
xor
pop
adc
jbe
leave
sbb
shrl
daa
pop
mov
pop
mov
push
pop
pop
and
fsin
sub
out
loope
or
ljmp
insl
dec
stos
test
mov
sub
call
loopne
dec
adc
sbb
popf
jbe
pop
lret
ficoml
das
and
sbb
pop
push
sbb
inc
pop
fst
lret
pop
or
enter
iret
jecxz
xchg
or
in
sub
out
negb
aaa
data16
xchg
jo
jb
out
mov
or
push
jmp
sub
aam
into
mov
push
push
xchg
and
and
dec
jns
xor
addb
mov
xor
xor
es
xlat
shr
or
cwtl
cmp
mov
lret
xor
mov
cwtl
mov
test
or
popa
popa
cmp
lods
cmp
inc
sbb
mov
repnz
mov
pushf
sbb
sbb
or
in
pushf
aam
mov
mov
mov
lret
lret
jbe
sbb
adc
mov
outsl
cmpsl
pop
jp
test
mov
movnti
xchg
ret
cmp
push
pop
shll
mov
mov
mov
loopne
add
jg
imul
lret
fnstsw
jle
jne
rolb
arpl
mov
fchs
shrb
aaa
in
idivb
ljmp
push
inc
fcomps
lret
xchg
sub
lcall
mov
ret
in
jle
push
push
lods
out
or
jg
gs
bound
mov
leave
adc
ret
jg
mov
push
mov
into
iret
idivb
add
in
lock
mov
mov
sub
jbe
jae
lret
mov
out
or
adc
lret
and
add
jecxz
adc
or
or
rorl
xor
cltd
les
pop
push
and
lea
mov
cmp
jbe
test
cmp
lock
fisttps
or
outsb
dec
jg
fisubs
arpl
loop
cmpsl
repz
mov
out
cmp
test
jae
push
js
shll
maxps
pushf
arpl
je
enter
cmpsl
push
dec
sbb
adc
push
cmpsl
mov
fisubl
add
hlt
inc
xor
cmp
std
xchg
outsl
into
in
push
xchg
cli
cmp
fwait
mov
repz
adc
idivb
pop
je
mov
hlt
or
push
mov
mov
pop
ret
dec
push
cmpsl
mov
out
outsb
add
arpl
mov
sub
jecxz
aaa
push
rcl
jecxz
das
fs
out
pop
lret
imul
and
js
je
pop
cwtl
clc
roll
mull
mov
mov
int3
add
or
outsb
xor
dec
scas
bound
aas
jo
dec
lcall
push
aam
popa
jp
cmp
inc
mov
pop
adc
adc
lcall
or
or
mulb
push
sar
adc
lods
daa
inc
ret
or
mov
lahf
mov
and
and
mov
out
and
aaa
imul
mov
inc
ljmp
dec
sub
lcall
imul
insl
loope
jmp
and
adc
xchg
mov
dec
push
bound
inc
out
or
fwait
push
xor
clc
in
imul
fisubl
pop
cmp
aam
xlat
imul
call
and
jno
repnz
cmpsl
imul
pushf
out
das
jb
rorl
ret
mov
imul
jg
scas
sbbl
pop
mov
cmpsb
das
pop
or
scas
adc
jge
ss
scas
sub
push
int3
int
sub
enter
std
pushw
stos
xchg
jge
iret
enter
sarb
pusha
lret
pop
mov
popf
fucomp
ficomps
and
cmp
fucomp
xchg
fidivl
cld
jae
loop
xchg
sub
and
cli
mov
xchg
aas
aam
inc
aad
test
insl
into
xor
int3
fmuls
cld
pusha
and
adc
rcr
popf
inc
push
push
cmpsl
mov
and
insl
lahf
push
movsb
adc
jb
sbb
insb
test
pop
mov
addr16
pop
jne
call
imul
mov
cmpb
dec
push
lods
push
cli
pop
xor
inc
pop
aam
jle
and
mov
pop
fwait
rolb
mov
js
in
adc
fcoms
enter
fwait
aaa
repnz
shll
jnp
subb
adc
test
stos
sub
xchg
ret
outsb
inc
jo
dec
cmc
shlb
fnsave
scas
or
add
outsl
cmp
inc
in
cmp
adc
fcoml
adc
popa
sbb
inc
icebp
jne
push
sub
mov
xchg
xor
cmpsb
fdivrl
pop
add
jb
out
mov
mov
push
mov
loopne
lds
das
xor
aaa
nop
dec
lahf
test
ss
mov
lock
icebp
loop
push
fldt
and
mov
mov
ficomps
out
fwait
aam
bound
jp
xchg
repnz
aam
subb
push
test
xchg
shr
insb
jle
xchg
mov
adc
jae
push
pop
imul
fisubrl
lahf
sbb
push
pushl
repnz
sub
mov
int3
mov
inc
sub
mov
cmp
icebp
clc
mov
mov
inc
mov
inc
pop
mov
rcl
xor
push
or
mov
pop
lock
mov
add
jns
out
dec
mov
data16
ret
dec
cmpsb
xor
dec
popf
mov
push
mov
repnz
xor
rcrl
fistpl
jge
mov
ja
lret
mov
jbe
fwait
das
repz
shrl
rclb
movsl
sbb
vmaxsd
add
push
sbb
popf
lret
bound
loopne
icebp
mov
fidivl
inc
pusha
imul
in
lods
divb
pop
jp
cld
aaa
repz
scas
imul
pop
jae
adc
enter
mov
imul
icebp
daa
lahf
and
adc
hlt
adcl
add
cs
push
pop
dec
sarl
test
pop
adcb
aas
ja
xchg
lock
aas
cmp
inc
adc
ja
pushf
mov
sub
cmp
push
arpl
dec
das
mov
mov
pop
push
mov
movswl
movsl
push
hlt
stos
pushf
and
notl
xchg
enter
inc
pushf
dec
outsb
xor
shll
ljmp
xor
stos
lret
mov
roll
loop
lret
ret
inc
das
inc
inc
mov
in
or
out
push
push
ss
mov
sub
sub
das
add
lret
or
jno
pop
pusha
pop
cmpsb
fnsave
leave
jnp
push
sub
icebp
mov
cmp
mov
addr16
addr16
push
outsb
jl
fs
mov
leave
jo
and
icebp
xchg
or
iret
inc
cwtl
fnstsw
add
dec
adcl
scas
push
sub
aas
int
mov
cltd
movsl
inc
in
push
addl
sub
loop
jns
pop
add
sbb
imul
pushf
dec
jbe
adc
mov
add
dec
mov
jb
or
push
jnp
jo
mov
xchg
fs
fcomps
scas
cmpsb
mov
js
push
pop
dec
stc
lods
dec
in
test
int
fs
fdivrs
in
xchg
mov
leave
sbb
cs
stc
lret
mov
mov
adc
addr16
fs
and
out
pop
ja
int
ja
push
add
pop
gs
mov
addr16
mov
pop
adc
in
dec
adc
scas
lods
int3
hlt
push
pop
mov
sub
outsl
xchg
dec
pop
fistl
add
movsl
xor
loopne
pop
and
shrb
imul
shr
pop
or
jmp
imul
out
adc
xor
das
cmpsl
xor
sbb
mov
fldl
adc
int
inc
loope
mov
sub
gs
mov
pusha
jg
jmp
sbb
pop
lods
xchg
jle
jle
arpl
ds
aaa
repnz
inc
fwait
pand
mov
mov
icebp
xor
outsl
push
cld
adcb
adcl
lds
dec
or
loope
or
iret
cwtl
cmp
xlat
outsb
imul
mov
push
push
rcrl
and
sub
inc
std
int3
pop
xor
push
xchg
mov
fwait
les
push
fcoms
movsl
and
xor
mov
andl
ret
lea
cmp
andb
lea
iret
pop
cmc
dec
jb
push
xor
pop
add
or
es
dec
push
out
xchg
shlb
push
inc
lock
push
mov
mov
jecxz
stos
std
mov
in
inc
mov
mov
pop
cmc
jne
das
jne
adc
ret
add
sahf
inc
sbb
inc
inc
shl
sub
pop
outsb
sbb
shrb
test
jbe
or
and
int
fidivl
push
bound
xor
ret
adc
scas
add
mov
dec
test
daa
jae
cwtl
test
mov
mov
sub
inc
out
outsb
push
mov
test
shrl
mov
roll
jg
sbb
adc
sub
movsb
sub
sub
jne
iret
pop
xchg
mov
jecxz
mov
fwait
push
divb
mov
or
nop
cmpb
lods
sti
sbb
in
call
repz
movsl
dec
mov
test
mov
cltd
add
jns
dec
insl
xlat
push
sub
insb
jge
xchg
mulb
aaa
je
mov
test
inc
mov
fidivrs
scas
ds
jmp
sbb
sub
loope
push
jp
pop
sbb
dec
pop
lock
sub
nop
data16
into
inc
stos
push
inc
inc
pop
fistps
adc
sub
add
aad
call
cli
cmp
push
mov
push
lock
mov
sub
lods
xor
outsb
jne
dec
add
mov
cmp
aam
lds
movsb
hlt
in
or
push
test
loopne
pop
ss
mov
pop
lds
push
add
xor
into
mov
notl
push
aas
and
sbb
les
notb
jp
pop
std
orb
in
mov
movsl
repz
mov
mov
lret
mov
pop
scas
andb
xor
sub
fs
cli
out
sti
mov
push
pushf
or
daa
and
fnstenv
fiaddl
je
movsb
cmp
dec
jmp
and
arpl
mov
push
lahf
dec
loope
rclb
lcall
mov
sti
sbbl
pop
rcrl
push
ds
bnd
mov
mov
push
push
dec
dec
cmp
lock
addb
and
cltd
cmp
pusha
or
pcmpeqd
dec
in
adc
xchg
adc
adc
enter
or
sub
leave
pop
jo
movsb
mov
and
aaa
cmp
sub
xchg
aam
into
xorb
int3
ja
inc
cs
fwait
lods
jle
test
jmp
fwait
stc
jle
or
adc
push
push
mov
mov
das
sti
cmp
das
movsl
aad
lcall
into
xor
stos
adc
clc
pop
pop
sahf
fadds
mov
popa
ljmp
adc
inc
xlat
and
ret
insl
fiaddl
pushl
pop
mov
std
fdivl
push
cs
xchg
fsts
lret
ja
mov
jae
fcmovbe
fldt
mov
lcall
pop
cmpsb
out
or
test
rolb
cs
and
cld
adc
std
jne
bound
dec
lret
je
or
mov
xchg
mov
pushf
adc
xor
fsts
pop
push
stos
fisttpll
outsb
jns
ficoms
aaa
cmpsl
jmp
sbb
pop
stc
inc
mov
in
add
jno
cld
cltd
lret
jbe
or
push
dec
cltd
divl
je
push
pop
xlat
and
pop
icebp
xchg
imulb
int3
or
je
mov
fnstcw
jne
jmp
insb
hlt
aad
mov
pop
cmp
mov
lock
rolb
arpl
mov
and
rcrb
pop
cmp
lods
dec
dec
inc
lret
mov
add
mov
xchg
sahf
call
sub
fldenv
in
pop
je
pop
jbe
push
push
mov
int3
nop
mov
and
shll
adc
cmp
jp
xor
cmpsb
xor
xchg
sub
lock
ljmp
mov
pop
sbb
idivb
fwait
add
popa
push
fistl
and
dec
sub
push
xchg
les
aaa
iret
jmp
stc
test
andb
popa
cli
or
pop
mov
mov
lods
daa
das
mov
lods
mov
stc
je
mov
or
push
in
and
aad
cwtl
test
push
cmc
jmp
jne
sub
dec
outsl
pop
call
outsb
push
jecxz
je
lret
mov
mov
fsubrl
aaa
push
sahf
orb
dec
notl
xchg
push
lret
call
sub
mov
sub
cmp
cmp
addb
mov
mov
orl
and
mov
insl
cmp
mov
jns
lret
ljmp
sub
adc
or
call
dec
jge
aam
jmp
sbbb
mov
cmp
cmpsl
jb
mov
call
imul
xor
mov
jle
imul
inc
lea
jno
popa
jns
and
loope
out
pop
or
sbb
cmpsb
push
dec
sbb
insb
sbb
in
into
and
daa
gs
ret
addl
scas
mov
je
fstps
mov
js
imulb
iret
pop
adc
int3
sbb
pop
scas
in
loope
and
sbb
or
and
or
mov
enter
ljmp
movsl
into
jno
xchg
cltd
roll
mov
cmp
std
mov
jg
loope
xchg
sub
popa
dec
pop
push
test
scas
mov
sub
addb
cmp
int3
jl
mov
shr
fnstcw
mov
xchg
sbb
nop
mov
shrb
inc
scas
and
fldcw
pop
ficomps
sub
insl
mov
jmp
mov
jae
cmp
out
jb
test
push
fstps
fsubrl
dec
dec
mov
xor
or
pop
jl
shr
mov
out
mov
mov
and
push
xchg
add
stc
pop
mov
sub
push
out
sbb
cmp
scas
enter
movsl
movsl
or
add
xchg
test
test
popa
movsb
adc
shlb
aas
mov
pusha
imulb
push
mov
add
adcb
xchg
loope
xor
push
mov
je
xor
js
scas
cmp
dec
fwait
sbb
cmp
pop
bound
jmp
inc
test
ja
mov
leave
scas
add
mov
popa
cli
inc
imul
dec
mov
push
inc
aad
xchg
jnp
jg
inc
inc
add
sub
sbb
fmul
pop
stos
inc
cmp
ret
pop
pop
fistpl
mov
test
test
mov
lods
push
flds
das
hlt
add
jnp
add
rol
aaa
aad
lahf
iret
es
das
jne
mov
or
dec
int
loope
jnp
or
jge
cmpsb
jg,pn
mov
sbb
push
sbb
out
jno
div
in
inc
mov
bound
jbe
clc
daa
sub
call
mov
cmc
cmpsl
cmp
sbb
and
js
mov
xchg
sahf
push
sub
into
aam
cmp
scas
xchg
add
cmp
mov
jp
fdivr
lret
xchg
jecxz
push
lea
pop
adc
xor
dec
arpl
movsl
sbb
test
xlat
sbb
pop
ret
push
movsb
xor
xchg
and
add
cmp
adc
call
dec
sbb
jno
push
icebp
pop
out
idivl
outsb
xchg
gs
fsubs
mov
mov
or
in
pop
dec
inc
xchg
stc
repz
inc
inc
push
xlat
cmc
shrb
ds
pop
inc
lock
sbb
sbb
xchg
sahf
inc
push
jp
mov
stc
dec
mov
xchg
cli
dec
xchg
xor
adc
into
je
inc
dec
xchg
push
cld
jno
lock
andb
inc
fnstenv
int3
rorl
mov
or
lret
and
popa
fnstenv
and
data16
decl
bound
and
dec
cmpsl
lea
or
test
lahf
loope
pop
adc
scas
lea
cmpsl
jbe
xor
sub
cld
and
rorl
sbb
cmp
cmp
pop
mov
xchg
jns
xchg
sbb
lds
jbe
hlt
fisubs
leave
fst
xchg
out
dec
clc
push
fisubrs
iret
jmp
push
aad
ljmp
js
fidivrs
cltd
mov
mov
imul
sahf
fsubrs
fcomps
pop
cmp
jecxz
leave
out
sbb
push
push
mov
rep
jecxz
imul
addl
das
aam
fisubrs
jb
outsb
mov
lods
aas
or
sahf
mov
push
and
dec
stos
mov
idiv
lods
push
add
lea
insb
popf
sbb
lahf
jns
lock
je
lock
push
out
jp
or
push
and
mov
aaa
iret
or
std
xchg
lds
sahf
push
adc
xchg
mov
out
lods
jbe
sarb
bound
adc
add
clc
dec
xrelease
xor
push
xor
pushl
push
sbb
jno
fld
cmc
lds
fucomp
cmpsl
xchg
sub
lock
movsb
inc
cmp
jg
dec
add
inc
rcrl
mov
jo
fwait
jecxz
adc
shrl
cld
adc
add
and
out
movsl
mov
mov
dec
dec
addr16
mov
lods
popa
cwtl
sbb
push
testb
or
pop
popf
fwait
mov
or
sbb
pop
jecxz
dec
fwait
notb
popa
adc
out
xor
jnp
sbb
inc
push
sub
pop
push
pop
or
incl
ljmp
notb
push
mov
mov
inc
or
icebp
js
cmp
sub
lds
test
iret
sub
or
jmp
lods
mov
sub
push
mov
push
pop
mov
test
repz
aad
shll
xlat
cld
inc
xchg
mov
ret
stos
pop
jne
pop
loopne
inc
ret
mov
dec
dec
mov
scas
jmp
or
loope
popa
mov
test
pop
in
lcall
dec
mov
leave
mov
or
pop
icebp
sti
imul
leave
imul
insl
clc
sbb
rorl
push
mov
mov
aaa
cmp
lea
add
gs
dec
leave
push
mov
pop
or
xchg
jge
andl
jecxz
in
and
fucompp
add
cmp
xor
ja
ficoml
loope
je
push
cmp
xchg
test
out
les
inc
add
fdivrs
fs
out
jae
subl
ja
jbe
shrb
aam
pop
or
fcmovnb
fs
subb
xchg
repnz
mov
cmp
jge
loopne
mov
mov
mov
inc
int
fidivs
mov
adc
sbb
das
psllq
rcrl
adc
xor
lods
mov
lcall
push
mov
add
cli
sbb
aas
xor
xchg
xchg
pop
lods
push
shrl
stos
push
scas
add
jo
insb
cmpsl
es
mov
pushf
xchg
add
mov
addr16
sub
mov
xor
mov
or
cwtl
jl
fstpl
ret
repz
or
or
jno
loope
mov
sub
cltd
movsl
push
dec
pop
int
out
cmp
mov
fcmovb
adc
xchg
jge
inc
pop
daa
pusha
fcomi
fcmovu
mov
pop
movsb
sub
insl
pop
push
pop
mov
rorb
mov
sub
push
pusha
lods
jmp
cmpsb
mov
into
push
mov
outsl
fistps
fcomip
pop
jg
dec
sub
fisttps
xor
mov
mov
test
mov
test
xor
and
pop
mov
aaa
movsb
dec
jge
daa
outsb
je
pop
push
mov
ret
pop
in
iret
xor
push
pop
lea
addr16
adc
mov
jg
icebp
or
mov
dec
mov
and
outsl
fcoms
jnp
adc
idivb
jl
push
xchg
fadd
fidivrl
mov
mov
mov
jno
movsl
jecxz
mov
aam
lahf
mov
test
push
popa
jb
push
jae
cmpl
movl
lock
cs
adc
and
jle
sbb
imul
pop
and
out
fstps
int
loop
test
xor
push
andb
lods
outsb
fiaddl
xchg
mov
mov
sbb
imul
adc
xor
repnz
sub
outsl
fisttps
std
andl
fs
push
call
nop
jp
stos
cmp
jnp
and
or
inc
nop
xchg
add
cmp
flds
fst
roll
add
sarb
or
popf
mov
jbe
fbld
repz
xlat
addl
ret
sbbl
cmp
push
lret
pop
outsb
scas
adc
mov
ljmp
test
sbb
pop
arpl
xor
fdiv
pop
mov
movsl
or
mov
adcl
int
stos
or
lret
fstl
leave
xor
mov
jmp
mov
inc
jge
int3
cwtl
shll
ljmp
jnp
imul
or
hlt
xchg
outsl
inc
test
or
in
hlt
push
ret
cmp
scas
mov
xchg
hlt
mov
imul
test
outsb
sarl
inc
add
xor
cmp
lds
xor
stc
jne
popa
fnstcw
into
cltd
bswap
xchg
jo
push
jno
bound
movsb
push
lea
outsb
cli
mov
ret
fnstenv
aad
shrb
mov
js
leave
sbb
cmp
repz
test
sub
lods
mov
dec
mov
ss
jo
aad
jp
sbb
cli
fs
adc
icebp
push
sbb
test
insl
js
push
daa
push
daa
scas
daa
imul
or
jae
xchg
fwait
rcrl
dec
int3
add
ficompl
clc
ja
jl
rcr
mov
icebp
out
xor
jnp
cmc
push
je
out
loop
mov
xor
dec
cwtl
jnp
clc
mov
xor
pop
loop
mov
decl
pushf
out
or
adc
jae
into
in
pop
aaa
pop
addl
or
adc
or
scas
push
push
outsb
and
mov
pop
into
cmp
push
call
nop
mov
loope
gs
cwtl
lretw
cwtl
cmp
lds
or
xor
dec
in
push
je
fwait
mov
sub
test
leave
cmpsl
mov
in
xor
sbb
jno
xchg
jmp
addb
fisttps
inc
stos
dec
leave
fcoms
mov
pushf
mov
push
adcb
sub
int
mov
jnp
outsl
subl
inc
inc
cmp
sub
mov
dec
adc
pop
add
mov
xchg
out
push
jg
push
mov
idivb
mov
call
jnp
jbe
fwait
pop
sahf
jg
jae
xor
test
in
pop
or
push
in
add
movsb
xchg
xchg
movsb
into
pop
mov
mov
fs
loopne
sbb
aam
inc
push
jl
mov
jne
mov
roll
mov
dec
fcmove
shll
loopne
cmp
lret
in
loope
cmpsl
jno
daa
sub
orb
cmp
dec
sbb
int
jns
stc
mov
mov
xlat
outsl
jmp
clc
mov
cli
cltd
push
sbb
in
xor
inc
dec
jg
dec
pop
test
lret
push
dec
mov
dec
or
lahf
dec
cmp
jns
mov
xchg
adc
popa
mov
insb
in
sbb
xchg
out
fs
sti
push
cld
ljmp
mov
lahf
or
push
repnz
lods
or
and
fs
mov
sbb
insb
cmpsb
jge
repnz
std
and
loop
mov
lret
daa
ret
js
pusha
dec
lea
in
mov
aaa
cmpsl
mov
std
hlt
adc
inc
xchg
xor
sub
sub
data16
sbb
jp
jmp
and
pop
fld
xor
xchg
iret
loopne
xor
or
mov
mov
insb
xchg
sbb
clc
or
dec
jns
jnp
cltd
pop
addb
mov
add
and
jnp
out
and
cli
test
jp
jae
movq
pop
jle
mov
xor
es
adc
pop
call
arpl
jp
int
bound
or
fists
mov
xchg
pop
sarl
sub
aad
sub
popa
mov
cmp
jns
and
inc
paddusw
pop
mov
adc
inc
mov
aas
into
je
add
fst
cmp
std
mov
sub
xor
add
psubb
add
aam
mov
inc
or
push
pusha
push
mov
insl
sbb
mov
ds
mov
dec
jge
mov
rcr
test
out
out
sbb
hlt
fisubs
hlt
fdivrs
lahf
fidivs
xor
xor
sub
pushf
push
sub
mov
mov
and
repz
pmaxsw
mov
test
adc
mov
mov
push
xor
arpl
dec
ja
cli
outsl
test
test
dec
stos
bound
inc
jg
rol
mov
mov
pop
jae
inc
jo
pop
cmc
pop
cltd
aaa
mov
shlb
mov
rolb
inc
sbb
ds
shl
test
sub
and
outsb
mov
inc
add
loop
out
jae
xchg
iret
jns
xchg
cli
clc
jecxz
xor
jb
ss
jae
js
fcompl
push
push
fwait
mov
sub
push
jne
addb
shrb
pop
cmp
loop
sahf
stos
mov
loope
ret
inc
sub
xor
pop
shll
fbld
mov
mov
adc
aam
shll
xchg
ljmp
adcl
cmp
pop
push
xchg
jae
xor
insb
cli
pop
adc
push
jns
mov
cmpb
adc
inc
jmp
mov
mov
cltd
lret
in
mov
in
cmp
pop
cmpsb
loop
repnz
xor
pop
or
inc
sub
jae
stos
push
mov
sbb
add
adc
fimuls
ss
push
cmpsl
sub
cltd
shr
sub
insl
int3
and
movsl
sub
shll
xchg
ss
mov
mov
cmp
xchg
int3
sbb
enter
dec
or
pop
adc
ljmp
int3
inc
sub
out
outsb
pop
pushf
leave
int3
sbbb
test
xor
rcll
dec
pushf
and
sub
sub
in
das
test
out
cmp
xchg
add
pusha
mov
data16
sbb
arpl
xlat
xlat
rcll
mov
push
jmp
mov
lret
inc
sub
inc
push
jecxz
iret
jae
imul
clc
add
test
addb
lcall
adc
lds
push
jb
call
ss
push
scas
lret
cs
sbb
push
movsl
dec
and
aas
mov
mov
mov
arpl
pop
ja
xchg
and
mov
flds
xor
inc
or
mov
fnstenv
pop
xchg
xchg
xchg
loopne
lret
insb
in
movsb
es
aas
js
dec
dec
mov
or
cmpsb
lret
repz
rcrl
adc
adc
outsl
mov
popf
cmp
xchg
push
jb
mov
jle
ss
mov
push
or
std
mov
das
lcall
xor
inc
jge
ss
cmp
dec
popf
push
mov
pop
test
ljmp
dec
movsl
roll
push
sbb
mov
jne
push
xor
ret
aaa
lret
add
xor
das
iret
aaa
clc
enter
and
into
sub
adcb
mov
daa
jns
popf
jle
dec
jbe
xchg
insl
xchg
mov
xchg
pop
push
or
test
fldl
mov
je
mov
add
xchg
into
mov
inc
lea
mov
dec
aam
and
scas
icebp
cmpsb
inc
inc
jno
ljmp
outsl
icebp
into
fnstsw
leave
jg
and
outsb
push
mov
pop
push
push
ret
in
push
sarb
loopne
jo
lds
push
movsl
std
pop
lret
mov
cld
adc
or
cmc
mov
leave
dec
mov
mov
clc
ds
jp
gs
mov
out
fsubs
and
push
scas
push
and
push
ds
push
adc
cmp
push
setl
push
imul
das
inc
lret
pushf
sahf
in
sbb
cwtl
sti
adc
xchg
and
mov
loope
push
roll
mov
popa
hlt
divl
cmpsb
cmp
add
mov
fwait
repz
arpl
data16
jl
sahf
adc
push
sub
das
clc
mov
in
fcoml
xor
jmp
fistl
push
je
outsl
jl
aaa
and
or
jp
shlb
jns
cmp
dec
cmpsl
push
or
dec
push
jge
subl
or
lcall
movsb
shrl
mov
sub
into
dec
in
cmp
sub
xchg
push
pop
jl
test
ret
aad
dec
aam
shrl
testb
adc
inc
mov
insb
std
cvttps2pi
popf
js
sbb
cmp
daa
jae
xor
jmp
std
ljmp
mov
inc
sahf
push
jb
pushf
adc
nop
insb
lret
stc
icebp
cli
scas
fadds
mov
stos
and
jp
jns
mov
idivb
cmp
sub
imul
push
inc
enter
dec
mov
xchg
fcoml
dec
mov
ljmp
push
stos
adc
cmc
sub
or
adc
sarl
dec
jnp
push
pop
lret
ss
push
push
and
push
inc
cmp
pop
inc
jns
cmpl
pop
cltd
fmull
mov
movb
push
sub
push
mov
push
mov
jge
jmp
xchg
pop
push
sarl
sub
and
mov
jg
movsb
cwtl
pop
pop
sbb
ret
adc
xor
push
mull
lea
or
je
dec
dec
rorb
push
lods
mov
andb
lret
les
mov
sbb
movsl
sbb
das
pop
jno
mov
push
ficompl
rclb
iret
inc
mov
pop
jb
dec
aad
fimull
cmpsb
pop
movb
mov
cs
pop
sub
mov
sub
fwait
idivl
in
mov
xchg
adc
mov
adcl
and
dec
aad
mov
sbb
test
push
fcompl
call
inc
mov
das
int3
mov
and
sub
cmpsl
popf
test
inc
jbe
adc
rcrb
xchg
mov
jne
sbb
int
or
loop
mov
mov
jno
sbb
data16
rorb
push
pop
fwait
dec
inc
mov
pop
sarb
leave
dec
aas
push
xor
imul
sti
imul
fs
jne
and
inc
pushf
xchg
add
pop
jae
cmp
sub
pop
mov
pop
cltd
xor
lods
add
push
rcll
adc
lods
outsl
inc
jle
add
lock
pop
dec
and
loopne,pt
leave
mov
lret
xchg
aam
icebp
inc
adc
jle
jb
daa
push
fisubrl
jne
pop
cs
out
imul
js
das
pop
pop
cwtl
jb
iret
pop
divb
into
jb
sahf
adc
dec
sub
inc
pop
pop
xor
test
mov
das
pop
mov
jno
xchg
aas
add
mov
shrl
mov
les
pop
cmc
inc
ja
clc
popa
xchg
inc
push
sbb
fwait
cld
sub
sbb
out
and
adc
mov
mov
fs
loope
push
mov
cmp
sbb
sbb
ret
out
test
aad
inc
dec
mov
adc
jb
icebp
dec
xorb
fs
fwait
test
mov
out
test
mov
stos
dec
aas
imul
cmp
lret
cmp
adc
insl
mov
adc
or
ljmp
pop
xor
push
adc
jecxz
repnz
shll
jb
add
iret
push
mov
pop
into
outsl
mov
adc
ficoml
jns
pop
fildl
outsb
or
bound
inc
nop
adc
fildll
xchg
and
stos
xor
sbb
hlt
sahf
sbb
rcl
dec
and
out
mov
es
xchg
lahf
mov
add
cs
sbb
mov
sti
out
test
addr16
mov
xor
xor
shll
out
xorl
out
in
sbbl
cmp
insb
push
cmp
aas
fidivrs
jns
ret
push
movsb
dec
out
hlt
xchg
aam
xchg
cli
dec
aaa
addr16
jae
sbb
push
dec
fcom
jnp
mov
je
pop
enter
pop
aam
aaa
lcall
push
cmpsl
bound
jb
fiadds
xchg
aad
out
sbb
ret
cmp
out
push
testl
test
and
cmp
outsb
mov
inc
orl
mov
push
and
xchg
mov
ret
aam
das
add
xor
mov
sub
dec
mov
mov
les
push
fdivrs
xor
xor
in
pop
adc
cltd
clc
pop
shl
dec
push
sbb
ss
or
inc
jnp
sub
inc
sti
cli
push
in
addr16
xlat
cmpsl
mov
hlt
test
dec
sbb
jno
je
mov
xor
push
inc
adc
mov
xor
mov
push
jmp
mov
daa
stos
arpl
ret
mov
fistpll
fadds
lret
mov
lds
int
shlb
push
xchg
jl
mov
inc
dec
xor
sbb
jle
scas
mov
or
mov
jns
std
mov
inc
sbb
dec
adc
outsb
in
or
push
adc
lods
call
cmp
add
iret
xor
cmp
sarl
in
pop
jno
stos
jo
xchg
test
mov
push
cwtl
mov
js
sar
adc
or
fst
out
jnp
cmpsl
mov
adc
adc
mov
xor
cmc
mov
or
aas
add
push
sahf
hlt
sbb
insl
push
and
jecxz
sub
dec
repnz
les
nop
mov
je
cltd
sbb
sbb
insl
out
test
sub
and
sqrtps
sbb
mov
xor
push
xchg
jne
add
clc
push
sbb
pop
sbb
sub
or
cltd
mov
cmpsb
insl
adc
fs
out
mov
inc
test
adc
jle
int3
inc
jmp
imul
fsubs
sub
imul
fs
subl
jmp
scas
cmp
dec
pop
jmp
testb
pushf
pop
shrb
push
push
sub
cwtl
and
stos
dec
jnp
dec
or
in
loope
sbb
test
mov
sub
leave
pop
mov
aam
nop
xchg
xlat
cmpsb
inc
test
push
mov
add
cmp
jo
xchg
jl
push
adc
push
mov
xchg
subb
jmp
out
and
sub
loopne
or
cmpsl
rorl
divl
xchg
cmp
adc
enter
mov
push
pop
int3
popl
mov
jo
sub
xchg
push
mov
mov
mov
push
inc
shrb
mov
aas
adc
ljmp
xchg
repnz
fistps
xchg
sti
js
xlat
lret
bound
jge
push
jo
mov
fptan
xlat
mov
pop
xor
adc
cs
adc
in
pusha
xlat
push
and
xchg
scas
ds
jno
jg
sbb
push
shlb
push
popa
mov
xchg
imul
mov
clc
jle
push
jo
xchg
pushf
dec
pusha
cmpsl
aam
push
mov
jbe
je
adc
lret
jmp
mov
out
test
push
ss
push
pop
and
adc
rsm
aam
in
pop
jb
add
pop
fwait
movsb
dec
dec
scas
jmp
sub
scas
fnsetpm(287
or
adc
sbbb
js
mov
jle
pop
lock
js
jge
mov
mov
stc
rorb
sbb
push
bound
sbb
cmp
or
pop
jne
lret
clc
jbe
cli
clc
ret
aam
arpl
xchg
or
pop
out
out
jmp
dec
cmpsl
push
xchg
cmp
loope
or
dec
fwait
or
cwtl
xor
popa
mov
test
jnp
pop
div
push
pop
push
sub
jl
in
xchg
cld
mov
sbb
or
inc
push
push
pop
les
das
mov
int
mov
pushf
jle
sbb
daa
cmpsl
insl
add
and
lock
or
push
lcall
arpl
bound
pushf
addr16
movsb
mov
and
aaa
add
mov
js
roll
jne
inc
adc
aaa
mov
movsl
xlat
mov
fs
ficoml
outsl
lods
das
add
out
aad
lret
ja
daa
pop
pop
jp
outsl
mov
xlat
adc
mov
sbb
lret
dec
shlb
xor
inc
jg
pop
test
xor
mov
scas
cmp
ds
inc
jo
leave
or
cltd
rcr
sbb
mov
imul
popf
or
loopne
mov
test
inc
outsb
cmp
stos
xor
cli
stos
imul
test
lock
jle
das
fsubl
cmp
inc
jp
sbb
add
push
test
or
in
fs
rorb
sahf
push
push
mov
fnstsw
dec
dec
cmp
push
sub
addb
cmpsl
pop
imul
xchg
lds
push
mov
imul
dec
mov
inc
cmp
loope
cmc
xchg
dec
pop
sbb
es
testl
dec
out
stc
dec
pop
jmp
ss
xor
push
xadd
adc
incb
scas
or
rolb
xor
lods
fisttps
jle
push
dec
pop
and
in
mov
arpl
inc
lds
push
cmc
and
test
int3
mov
cmpsb
punpckhdq
cmp
xchg
jno
scas
imul
cmp
insb
aaa
inc
pop
cld
adc
cmpl
push
sub
loop
inc
movsl
jl
or
sarl
dec
sti
sarl
mov
inc
and
or
paddsw
dec
dec
stos
mov
cmp
stc
mov
lret
mov
sahf
mov
test
mov
ss
out
aam
pushw
lea
mov
and
sub
hlt
or
add
loopne
pop
test
ja
and
mov
test
inc
jmp
push
xor
dec
addr16
cmp
mov
mov
rolb
lret
mov
fcmovnu
xchg
dec
addr16
lcall
and
sbbl
push
inc
fldcw
sub
shrl
or
iret
xlat
lods
subb
pop
and
dec
insb
imul
out
cltd
mov
mov
inc
fwait
sub
setnp
cmp
xor
cld
cs
pop
es
pop
push
lret
outsb
ljmp
jecxz
and
pop
js
adc
lcall
cs
and
enter
loope
xchg
aas
or
push
popf
xchg
loop
jl
sub
loop
or
push
cld
xor
es
std
inc
jmp
icebp
bound
mov
sti
jo
pop
jae
movb
sarb
fstpl
outsl
sbb
pop
in
or
test
ja
cmc
inc
cmc
loope
out
repz
sbb
das
loope
das
pop
cmpsl
adc
arpl
fwait
jge
pop
bound
inc
push
les
mov
mov
sbb
mov
lods
pop
ret
push
inc
aas
fildll
cmp
aad
adc
daa
xchg
imul
pop
and
lret
jo
sub
xchg
xor
insl
cmp
cmp
mov
int
mov
sub
cltd
pop
dec
dec
inc
iret
in
scas
pop
daa
imul
std
inc
popa
fidivrs
xchg
fisubl
daa
sbb
push
add
insl
aas
push
jp
mov
sub
mov
mov
insl
movsl
cmp
insl
loope
fidivs
movsl
jg
cli
sbb
lahf
pop
loope
mov
ljmp
mov
call
insl
outsl
mov
sbb
mov
stc
push
mov
dec
je
pop
mov
test
inc
mov
add
adc
pop
adc
cli
inc
cmp
insb
shll
pop
cs
jb
imul
mov
pushf
jno
xchg
aad
sti
xchg
adc
test
xchg
addr16
push
imul
repz
loop
mov
mov
das
lahf
fmul
dec
cli
ss
ljmp
enter
fwait
mov
push
xor
sub
sub
lds
addr16
push
mov
jle
pop
mov
leave
pop
stos
sbb
and
adc
dec
xor
fcmovnb
stos
mov
hlt
icebp
cmc
inc
popa
ljmp
fimull
add
sub
es
adc
mul
divl
fstps
mov
adc
je
jl
sbb
jmp
not
cli
mov
outsl
loop
jp
dec
lret
js
sub
mov
inc
adc
mov
jno
arpl
scas
aad
and
mov
hlt
stos
cmpsb
lock
mov
out
cmp
jns
sub
pop
jbe
sbb
int3
fcmovb
sahf
sub
inc
nop
push
rcll
gs
push
lcall
xor
ss
push
sub
loopne
cs
mov
sbb
mov
aas
mov
pop
aam
add
out
jg
pop
repz
jl
push
enter
jo
rcrb
push
fld
or
dec
test
std
push
js
imul
and
or
adc
push
insl
xor
hlt
shrb
jl
or
je
mov
mov
pop
sbb
stc
pop
pop
sub
insl
pushf
cmp
cli
out
cmpsb
cmp
jne
aad
jmp
shlb
mov
sbb
lock
ss
insb
pop
fadd
dec
arpl
es
jmp
test
cmp
loope
jmp
adc
fstl
dec
mov
jnp
dec
out
outsl
pop
arpl
and
enter
pop
pushf
insb
fsubl
or
adc
sbb
add
sub
lods
lret
insl
insb
bnd
repz
mulb
stos
push
xlat
jno
add
xchg
xor
add
pop
fwait
jbe
pop
push
or
sub
les
mov
push
aad
xchg
inc
push
cmc
fdivl
or
cwtl
aad
lret
call
jbe
test
dec
aaa
xchg
shlb
cmc
inc
adcb
push
fnstenv
jmp
mov
aam
xlat
test
shrb
iret
jmp
out
pop
stc
lahf
xchg
stos
shrb
sbb
jmp
jp
movsl
enter
pop
rcll
mov
aam
adc
mov
aaa
inc
mov
ffreep
pop
add
loopne
cli
mov
cli
andl
or
aaa
outsb
push
add
adc
jae
sub
pop
mov
daa
ja
push
stos
movsb
rcr
and
stc
push
jb
movsl
lods
int
ficomps
adc
xlat
shrb
xlat
test
inc
fcoms
js
xchg
cltd
and
inc
xchg
hlt
int3
jg
pop
sbb
dec
push
pushf
out
pop
jle
pop
and
adc
jne
sbb
push
dec
mov
shl
out
test
aam
fmuls
push
imul
adc
and
int
cmpsb
gs
std
jo
jbe
jno
mov
rolb
dec
inc
js
jmp
sbb
add
iret
xor
cmc
cli
pop
push
mov
bound
ds
jg
lret
or
negl
adcb
or
insl
push
mov
mov
add
mov
adc
les
pop
shlb
icebp
push
add
rolb
sub
int
aam
inc
cli
fdivs
cli
ds
adcb
mov
or
loope
insl
fisubrs
xchg
jge
mov
js
cmp
shrl
iret
jle
int
push
ljmp
stos
mov
sbb
push
or
push
aad
cmp
pop
mov
imul
test
std
push
nop
outsl
inc
daa
ret
or
sub
add
cmp
cld
aaa
cltd
sahf
js
loop
inc
mov
push
sbb
lods
push
xchg
rclb
xchg
add
xchg
mov
lret
push
sbb
subb
xor
dec
or
popf
movsb
mov
aad
stos
mov
pop
out
cmp
mov
sub
jl
push
adc
and
imul
hlt
int3
int
jmp
cmp
pop
pushf
popf
repnz
add
inc
orl
jmp
sarl
mov
xchg
hlt
and
or
jp
pop
test
cmpsl
int3
dec
dec
mov
lds
inc
rcr
xchg
popf
jle
mov
mov
std
mov
or
add
and
push
cmp
jae
idiv
mov
inc
xlat
test
cli
push
mov
sub
add
cmp
in
jecxz
popa
addl
idivl
notl
leave
aad
fisttpll
dec
stos
push
sbb
adc
pop
sbb
pop
pop
adcb
jae
mov
cmc
insb
push
dec
lret
sub
repnz
adcb
mov
adcl
aam
or
addl
dec
jns
lret
loopne
sbb
insl
out
push
push
shl
cs
xor
or
hlt
jl
loopne
pop
ljmp
iretw
ret
out
lods
insb
int
es
ljmp
outsl
inc
ja
push
fld1
jbe
pop
fdivp
imul
mov
jl
and
cld
sbb
xchg
xor
push
out
mov
push
mov
and
mov
cmpsl
sbb
sub
vlddqu
adc
cmpsb
xlat
icebp
add
rcll
xor
imul
mov
mov
sbb
pop
es
sub
addl
mov
fdivrs
jo
sub
add
sub
cmp
mov
or
adc
push
or
jbe
push
mov
cmp
aas
or
outsl
dec
push
shll
call
fs
xor
and
xchg
data16
mov
dec
repnz
push
and
pop
add
pushf
xchg
sbb
imul
jge
push
and
inc
rol
jg
mov
adc
std
adc
cwtl
je
adc
or
pop
jno
sarl
xchg
push
ret
pop
sub
xrelease
repnz
push
testb
mov
inc
notl
cwtl
add
clc
mov
push
xchg
xchg
cltd
sbb
inc
outsl
lcall
push
cltd
aas
out
inc
push
xchg
mov
clc
nop
pop
mov
loope
xchg
sub
sbb
sub
push
icebp
rorl
faddp
fldt
cmpsb
mov
push
es
mov
jnp
enter
testb
mov
fnstcw
into
add
push
iret
cltd
pusha
aas
andl
cld
inc
jg
gs
repnz
inc
incb
loope
aas
decb
aas
popf
sub
sbb
lods
mov
push
mov
sahf
rclb
mov
jnp
das
add
xor
mov
sbb
mov
and
or
jle
and
xor
sub
ljmp
pop
mov
mov
stos
push
add
addr16
sbb
mov
pop
cmp
dec
dec
cmpsb
jl
nop
movsb
test
mov
sahf
mov
push
outsl
cld
pop
cltd
sahf
lods
in
jb
xor
loop
scas
pop
cltd
xchg
roll
test
cltd
pop
dec
daa
in
fiaddl
in
jg
dec
jge
call
jno
and
aas
push
xor
dec
push
sub
fstpt
jl
ds
xor
test
push
xor
dec
jae
nop
cld
add
test
xchg
jo
or
xchg
lcall
mov
call
jg
in
and
and
iret
and
push
repnz
idiv
stos
pop
jne
mov
icebp
xlat
adc
jne
push
mov
js
push
gs
cwtl
push
jmp
pop
sub
xor
int
pop
push
cltd
popf
inc
mov
push
or
and
and
mov
ficoml
gs
or
push
add
out
stos
xchg
xlat
and
aad
loope
repz
sbb
movsl
gs
jl
xchg
and
xchg
call
add
push
mov
ds
xor
subb
outsb
mov
lahf
call
sub
loop
cmp
in
inc
inc
sbb
gs
xor
mov
ja
sti
push
inc
jmp
sub
and
es
mov
aam
dec
jo
mov
add
mov
test
outsb
jne
sbb
xor
rorl
in
ds
pop
aaa
xchg
sbb
daa
in
pop
faddl
inc
sbb
push
mov
movsb
scas
das
call
pop
lret
popa
imul
stos
das
iret
add
roll
cmp
add
mov
in
cmpsl
mov
divb
test
aad
xchg
and
inc
or
sub
setp
shlb
pusha
adc
shrb
add
pop
outsl
lcall
inc
mov
cmp
lds
out
sbb
jle
mov
pop
inc
and
movsl
jle
test
lret
sub
jp
mov
je
mov
sub
or
aas
push
cmp
push
sbb
and
mov
insl
or
mov
popa
mov
fcomip
call
cmp
gs
sub
es
cld
sbb
testl
cmp
cmp
mov
mov
jl
cmp
rclb
sub
push
adc
jp
adc
nop
sbb
lock
mov
dec
xchg
jnp
dec
xor
clc
push
xor
dec
xchg
mov
xchg
daa
xchg
jnp
repz
cli
push
inc
or
sti
pop
adc
xor
lahf
leave
es
jecxz
scas
pop
push
test
mov
fiaddl
lahf
sbb
push
cli
and
mov
xchg
repz
and
into
dec
fisttps
jmp
mov
imul
jno
pusha
aas
sbb
inc
orl
out
sbb
adc
sbb
adc
push
jnp
or
cli
dec
fstpt
mov
rep
and
jbe
cmp
mov
jnp
fadds
pop
iret
in
or
adc
adc
push
push
mov
ss
sti
and
and
inc
divb
sbb
ret
hlt
jb
add
fimull
and
cmp
cmp
jbe
inc
inc
inc
in
fsts
sub
pop
loope
mov
loopne
enter
push
inc
ficoml
gs
mov
scas
iret
insl
dec
pop
gs
xchg
mov
incl
mov
fimuls
or
push
dec
pop
push
pop
shlb
repnz
sub
mov
loopne
arpl
loope
xchg
sub
xor
pop
imul
test
pushf
adc
mov
xchg
out
cmpsl
cmp
outsl
or
pinsrw
push
imul
rclb
test
lahf
daa
adc
inc
pop
mov
out
jae
add
cmp
jne
enter
adcb
test
mov
mov
inc
mov
sarl
push
add
ljmp
pop
jnp
shll
jbe
mov
ja
mov
fisubs
jnp
jb
or
cmp
iret
add
dec
icebp
inc
push
int
lods
test
mov
push
sbb
inc
fdivl
mov
and
add
jns
xchg
push
and
xchg
shl
lcall
jmp
cmp
push
cmpsl
std
and
shlb
push
ds
dec
iret
xchg
cli
jmp
bound
in
mov
inc
cs
std
add
xchg
inc
add
in
notl
aad
movsb
daa
icebp
push
inc
or
sarl
jns
mov
rol
jecxz
sub
cmp
popf
call
pop
jnp
ss
int3
and
pop
hlt
cmp
and
cmpsb
sti
adc
sbb
or
add
ljmp
lret
sbbb
adc
mov
in
xlat
push
inc
xor
jle
fscale
orl
leave
fcos
or
dec
add
and
sub
pop
mov
mov
or
sbb
cwtl
test
int3
push
pop
xchg
aam
or
repnz
mov
jbe
mov
lds
or
adc
stos
lods
mov
cmp
jp
cmp
push
int
xchg
mov
mov
ret
scas
pop
add
pop
out
cwtl
repnz
xchg
and
sbb
dec
xchg
lret
lods
sub
sti
inc
push
mov
mov
test
loope
jnp
int
out
shr
cmp
push
cmc
mov
cs
fs
fcmovb
add
jne
insl
data16
outsl
pop
imul
push
jae
lea
push
mov
push
pop
and
fs
popa
mov
sub
insb
mov
addr16
xchg
mov
push
or
jno
pop
aad
jecxz
pusha
inc
xor
enter
adc
jb
or
je
shl
mov
and
sbb
mov
int
or
add
or
jge
adc
and
or
xor
les
mull
cmpsl
ljmp
mov
sar
pop
mov
lahf
imul
stos
adc
fcmovu
pop
or
lcall
mov
mov
aas
push
jl
xor
pop
cld
sbb
jbe
mov
adc
daa
jl
cmp
add
sbb
cli
ret
mov
mov
outsl
lds
adc
sub
push
imul
sub
adc
js
sub
loope
into
mov
push
mov
stos
shll
iret
xlat
es
dec
ret
xor
lcall
dec
mov
mov
and
xor
sbb
in
inc
mov
adc
jne
add
jmp
lcall
subb
fwait
inc
mov
add
mov
adcb
jge
out
push
cmp
cmc
mov
mov
js
stos
jns
dec
xor
cld
test
mov
les
inc
loope
test
mov
inc
stos
jb
imul
das
or
add
aad
xlat
pop
dec
xchg
xor
in
scas
push
mov
sub
or
loop
add
scas
mov
push
mov
sti
sbbb
xchg
mov
add
inc
insl
xchg
cmpl
add
jb
lret
sub
mov
sbb
lods
push
sub
fldenv
push
mov
cmp
xor
test
stc
repz
inc
loopne
inc
hlt
sub
jns
popa
ss
data16
add
cmp
rolb
sbbl
push
aaa
push
jns
fs
dec
cs
push
inc
and
fmuls
pop
sub
adc
adc
mov
call
out
in
dec
dec
cmp
add
clc
test
cwtl
in
xor
sbb
add
adc
loope
shlb
jg
fs
cmpsl
sub
mov
sti
mov
pop
fimuls
inc
xor
scas
pop
pop
inc
nop
push
stc
push
idivl
ret
fldcw
cs
sub
ds
ljmp
jno
in
in
into
jbe
xchg
fcoms
inc
jno
push
ret
lods
mov
mov
je
popa
outsl
dec
out
out
shrb
ret
daa
inc
mov
popa
lods
mov
push
or
out
fucom
aaa
orl
mov
lahf
mov
sbb
addb
les
fucomp
loopne
lods
adc
jns
into
sbb
hlt
xchg
push
pop
push
fwait
xchg
xchg
sbb
mov
ja
and
pushf
mov
sub
pop
sbb
add
jp
notb
inc
pop
arpl
nop
push
add
test
fildl
xor
add
mov
fisubrs
sub
loopne
cmpl
and
in
fimull
pop
dec
pop
xchg
jg
shl
bound
loope
js
xor
mov
shrb
adc
bound
pop
and
pop
mov
cmpsl
add
pop
mov
repz
mov
loopne
aad
pop
jno
stos
shrb
es
pop
and
cld
adc
in
nop
push
mov
adc
ja
aad
mov
dec
mov
sbb
add
stc
out
cmpsl
mov
mov
xor
call
pop
add
ja
cmp
int
mov
add
inc
jecxz
insb
add
mov
imul
mov
sbb
shll
std
dec
outsl
xchg
std
popa
mov
sub
xchg
push
add
pop
int
faddp
sbb
icebp
stc
lcall
js
sub
mov
shll
jbe
sti
xchg
rol
pop
int3
das
mov
sub
fisubl
cltd
mov
sbb
jns
lret
cwtl
sub
mov
push
pop
nop
test
outsb
stos
insb
jae
bound
dec
and
call
cmpl
dec
push
and
lcall
add
xchg
lret
stc
sbb
cmp
out
add
outsl
int
mov
dec
scas
imul
call
aas
and
cmc
inc
into
roll
sbb
hlt
cltd
aas
ja
lcall
lret
pop
ret
adcl
test
bndldx
inc
lret
fadds
scas
rcrb
cmpl
mov
leave
push
popf
cmp
enter
stos
cmpsl
sbb
outsl
push
add
inc
mov
xchg
loop
and
jbe
not
nop
and
test
xor
and
daa
mov
xchg
xchg
in
inc
mov
jno,pt
clc
out
mov
lret
cmpsl
sbb
adc
loop
out
fcomi
ja
pop
xchg
sarb
in
jg
iret
or
push
xchg
and
ljmp
add
push
in
loop
push
sub
push
dec
pushf
cmp
mov
push
fildll
sub
test
add
insl
aad
repz
roll
jbe
jno
adc
mov
add
mov
push
popa
std
mov
lea
cmc
jnp
pop
mov
xchg
xchg
lds
mov
xchg
shl
shlb
adcb
inc
out
jne
adc
jae
add
jbe
sbb
mov
fisubrs
adc
add
fdivs
sbb
lea
shl
stos
push
inc
dec
xor
daa
cs
test
addl
jp
xchg
in
je
pop
inc
dec
mov
out
icebp
add
rcll
data16
mov
das
dec
cmpsb
fnstenv
bound
sub
outsb
fs
push
and
imul
mov
into
xchg
jle
sbb
stos
dec
out
sbb
xor
cwtl
in
sbb
adc
stos
xor
rcrl
sbb
inc
iret
push
mov
mov
and
shll
push
xor
in
add
adc
into
jbe
int3
inc
add
adc
add
cld
sahf
push
loopne
arpl
sbbl
cmpsb
mov
add
xchg
dec
dec
jmp
je
push
scas
mov
push
adc
stos
lods
cmpsb
add
inc
add
stos
std
ret
cmp
mov
ja
lcall
cmp
js
lahf
sbb
push
dec
xor
sahf
cli
sub
inc
push
jl
out
mov
jge
sub
mov
mov
mov
testb
xchg
jmp
mov
lods
cmp
cmpsl
push
inc
cs
and
and
imul
push
push
xchg
data16
jecxz
dec
jle
pop
mov
in
xchg
lahf
clc
in
mov
push
cmp
mov
cmpsb
popf
lods
jl
jae
addr16
in
int
mov
push
int
cli
fnstsw
call
icebp
push
push
jge
movsl
ss
mov
cld
adc
xchg
mov
sub
mov
lret
insb
hlt
pop
push
mov
repz
idivb
imul
mov
insb
into
mov
xchg
test
imul
imul
insl
cmpsl
xor
cmpb
fnstcw
repnz
movb
dec
jl
insl
xchg
or
sarl
push
in
inc
jge
fcomip
call
ss
fisubrl
cmpl
pusha
push
pusha
xchg
sub
dec
ficoml
pop
jecxz
subl
dec
mov
jecxz
orb
pop
clc
jmp
mov
idivl
stos
or
sub
xchg
dec
xchg
mov
ret
lahf
mov
cli
testb
test
xor
jmp
int3
hlt
les
es
adcb
addr16
pop
call
inc
sub
test
inc
push
pop
dec
cmpsl
fs
pop
movsb
hlt
pop
sub
xchg
sbb
mov
test
adc
in
pop
repz
rcll
mov
inc
in
pop
xor
outsl
mov
testb
fidivrs
mov
sbb
push
push
mov
fdivs
or
adc
lods
daa
insl
mov
jmp
dec
pop
arpl
ret
pop
out
xor
push
rclb
loop
je
pop
ljmp
cmp
loop
or
mov
xchg
mov
cli
jns
int
dec
loopne
jns
enter
adc
sbb
xor
cs
fstl
cmp
mov
decl
mov
pop
rcll
add
xor
popf
add
or
cmpsl
adc
out
adc
jo
in
fsts
aas
pushf
stos
jle
or
jp
xorb
aaa
fiadds
cmpsb
insb
addr16
sbbb
push
pop
sarl
movsl
dec
lahf
jecxz
mov
sbb
jmp
sahf
hlt
jbe
cmp
xadd
test
pop
jp
jmp
roll
jl
and
mov
push
inc
in
sub
hlt
fisubs
ficompl
jo
cmp
fildll
in
repz
out
adc
jg
jbe
iret
xchg
scas
dec
xor
push
xchg
rclb
clc
aam
icebp
cmp
jnp
dec
mov
push
dec
sub
dec
aam
mov
mov
cmpsl
sub
push
jge
xor
imul
dec
mov
xor
jl
out
mov
not
xchg
xchg
arpl
es
ds
lea
rcr
lret
shll
cmp
push
mull
inc
gs
rcr
cmp
and
mov
push
frstor
dec
push
les
ds
cwtl
pop
xchg
aas
leave
inc
in
lahf
mov
xor
or
arpl
mov
dec
pmullw
lcall
xor
push
xchg
aam
jge
ds
sub
fidivl
jnp
dec
mov
and
bound
jae
into
popa
mov
shrb
into
inc
out
add
xor
imul
out
out
jb
decl
push
mov
inc
fsts
adc
sbb
insl
js
pop
adc
imull
and
test
ficompl
or
sbb
and
pop
xor
dec
jb
pop
adc
insb
cltd
dec
aam
fisubs
jmp
jg
mov
adc
dec
xchg
insb
mov
punpcklwd
xchg
xor
stos
movsb
jg
lock
dec
in
pop
mov
inc
jmp
cmp
jns
mov
push
fbstp
mov
inc
lret
mov
or
repnz
jbe
mov
addr16
loop
jge
into
adc
cmp
xchg
xorb
jg
mov
xchg
pop
jge
and
lock
cmp
jnp
jo
pop
mov
cmpsl
je
jg
leave
lock
add
les
dec
into
inc
xor
insl
pop
icebp
pop
insl
mov
and
repz
jo
sub
fldcw
mov
jmp
inc
stos
mov
cmpsb
mov
scas
lret
dec
incb
out
hlt
add
mov
test
mov
std
xchg
fcomip
sub
unpcklps
addr16
outsb
test
xchg
sub
imul
and
xor
out
push
dec
dec
dec
and
pop
inc
pop
and
xor
pop
or
cmp
fstps
xchg
sub
mov
xorb
push
ss
mov
push
mov
push
sub
fildl
pop
push
out
lret
cli
sbb
ljmp
into
cltd
stos
inc
dec
mov
addl
dec
jle
lea
in
xor
stos
mov
xchg
shll
xor
jae
lcall
xchg
jb
loopne
pushf
xlat
mov
jg
int
cs
mov
sbb
pop
pushf
sti
dec
pushf
fs
cld
lret
addr16
adc
inc
into
sub
jns
jmp
stos
push
stos
icebp
push
or
pusha
movsl
in
negb
stc
cmp
arpl
scas
pusha
loope
cmp
dec
inc
add
fldl
mov
rol
in
aaa
pop
outsb
stos
dec
ret
stos
in
mov
iret
cmpsl
push
idivl
or
inc
les
and
pusha
dec
into
pop
adc
aam
shlb
pop
xchg
pop
out
lea
lahf
dec
pop
cmp
lahf
push
stos
scas
imul
negb
sub
mov
mov
mov
andb
ret
das
push
stos
inc
aaa
jmp
add
mov
mov
mov
roll
lret
jnp
movsb
nop
test
popf
cmpsl
cmp
or
inc
enter
and
xor
inc
xchg
add
push
mov
inc
cmp
imul
push
cmp
jbe
xchg
sub
subl
mov
and
dec
push
mov
lret
mov
insb
pop
nop
fsts
cmp
mov
mov
pop
cs
clc
and
jbe
ljmp
mov
bound
sub
xchg
dec
jl
daa
into
mov
andl
sub
daa
and
aas
sbb
inc
and
push
mov
je
xlat
js
sti
push
fistps
pop
mov
aam
pusha
sub
xchg
enter
icebp
dec
sarb
sbb
sbb
mov
cwtl
in
mov
jp
pop
and
clc
dec
jns
xchg
test
int3
mov
dec
and
cmpsl
push
jns
stc
jmp
imull
adc
ret
xor
mov
nop
dec
xchg
mov
xchg
jp
jle
pop
fldln2
jb
ret
jecxz
xor
adcl
pop
es
mov
ds
dec
mov
stos
sub
inc
cmp
lret
out
mov
dec
mov
push
lret
jnp
push
arpl
rorl
lods
out
test
fimull
inc
movsl
xchg
clc
xchg
adc
aad
mov
or
icebp
adc
repnz
or
add
popf
leave
lods
xor
add
pop
arpl
rcrl
jnp
loope
scas
test
pop
mov
sarb
hlt
mov
xchg
mov
xor
rcrb
shll
iret
and
mov
push
jmp
lods
adc
sti
mov
xorb
les
je
dec
push
rcll
cmpsb
outsb
inc
out
or
loop
jb
xchg
cmp
jns
in
clc
adc
mov
test
inc
jnp
pop
xor
sub
mov
out
in
int3
in
daa
xchg
mov
mov
sub
adc
loope
mov
xlat
lds
xor
inc
insb
mov
mov
push
ret
aaa
lds
mov
jne
mov
ss
sti
mov
aad
sbb
jnp
cmpsl
lret
stos
loopne
pop
fsubrp
loope
mov
nop
mov
add
and
pop
scas
out
mov
pop
insl
in
dec
jmp
lods
add
mov
mov
movsl
push
movsl
pop
add
push
and
push
pop
push
mov
and
push
and
sbb
faddl
adc
mov
rol
cld
cli
daa
xor
push
test
inc
aam
xor
mov
shrl
mov
xchg
mov
mov
sbb
or
add
pop
fldenv
popa
dec
inc
sub
dec
pop
push
sub
cld
repz
ret
sbb
xor
cli
mov
out
ds
icebp
test
call
xchg
int
xchg
jo
xor
stc
sbb
fdivrl
dec
das
adc
test
rcrl
add
notl
jle
orl
sub
or
fidivrs
popa
mov
jo
imul
xor
jae
rcll
jge
ja
sub
adc
scas
subl
test
ficomps
and
fwait
mov
jo
jb
mov
ja
cwtl
mov
fisubrs
add
repnz
push
out
add
xchg
and
ss
jp
mov
test
mov
fbstp
out
lret
aas
or
cld
lea
out
jmp
lods
mov
stos
or
pushf
test
leave
jne
pop
lods
mov
out
mov
mov
cmp
sbb
pop
push
mov
xchg
mov
int3
aad
leave
aas
fidivrs
aad
ss
iret
call
push
dec
sub
addr16
xor
push
jbe
enter
cmp
push
fdivl
xor
in
arpl
mov
jo
jl
adc
ret
out
decl
and
and
pop
iret
add
mov
out
mov
cli
cmc
into
leave
ret
movsb
mov
or
xor
movsb
pushf
in
push
sub
sub
stos
testb
push
lret
inc
out
and
cmp
imul
sub
sub
adc
mov
inc
push
cmp
sub
xchg
pushf
cmp
das
sbb
lcall
loop
inc
xorb
test
pushf
cmp
fiadds
pop
adc
adc
inc
into
mov
mov
mov
inc
ja
repz
dec
jmp
or
jnp
mov
sahf
pop
mov
dec
jg
add
jnp
cmp
iret
inc
and
sti
stos
loop
ud0
sub
into
and
cmpsl
mov
fwait
cmpsb
push
inc
icebp
imul
movb
or
out
pop
stos
popa
add
and
xor
ja
or
or
mov
sti
je
cld
push
and
std
pop
adc
mov
mov
aad
aas
jbe
dec
mov
mov
out
pop
jbe
repnz
jecxz
es
insb
lahf
cmc
or
mov
dec
cmp
push
or
dec
inc
mov
cmp
cltd
lea
pushf
popf
leave
jae
pop
xlat
lods
in
inc
out
push
lock
int3
push
ljmp
push
dec
sbb
inc
dec
mov
mov
cltd
sub
inc
aaa
add
roll
lods
push
int
inc
orb
add
sub
pop
and
add
mov
out
ret
pop
into
ret
mov
and
xor
add
icebp
cwtl
imul
cwtl
xor
cmpsb
and
push
test
call
xor
sbb
fnstsw
push
pop
in
enter
mov
mov
aas
xchg
jmp
mov
jo
test
outsl
fs
mov
stc
sbb
xchg
and
daa
inc
aad
pop
divl
cltd
sub
cmp
sbb
add
mov
mov
xchg
cmp
test
sub
dec
xchg
loopne
ljmp
lret
mov
mov
jmp
or
mov
es
mov
push
mov
xchg
mov
out
sbb
mov
outsl
pop
imul
nop
inc
imul
enter
loopne
fisttps
or
dec
cwtl
jo
cltd
mov
push
xchg
call
ret
and
jae
addr16
popa
fdivrs
mov
divl
lcall
stos
pusha
mov
cmpsl
fs
inc
xor
xor
mov
rcrb
hlt
push
faddl
dec
and
cmp
and
mov
xor
popa
pop
xchg
cmp
sub
jnp
jmp
bound
and
fcompl
pop
push
push
je
mov
mov
das
mov
mov
pop
out
ret
xchg
add
adc
popa
jle
icebp
jbe
push
loop
negb
pop
dec
adc
push
and
pop
push
leave
mov
cmc
sbb
sbb
fstl
in
rcr
dec
mov
pop
sahf
leave
lret
cmpsl
or
mov
jmp
mov
jns
and
mov
xor
ja
aad
and
cli
xchg
and
test
push
les
nop
cmpl
pusha
daa
fwait
je
iret
and
dec
js
jl
inc
repnz
or
test
jg
data16
adc
add
jle
rclb
push
lcall
cld
push
push
stc
lret
adcl
int
mov
ret
adc
and
mov
iret
mov
push
jmp
push
push
cli
pop
push
aas
out
hlt
mov
mov
mov
lock
adc
scas
cs
stos
rorb
mov
add
jge
stos
ds
insb
int
inc
inc
int3
mov
scas
imul
jmp
mov
mov
dec
dec
sub
mov
insb
fwait
lods
js
adc
fmull
test
lods
test
sub
sub
fstl
inc
nop
mov
fldcw
in
fildll
mov
fs
push
test
mov
inc
inc
jp
adc
adc
icebp
pop
int3
cmp
sub
cmp
mov
fs
call
jne
mov
cmp
fwait
enter
sub
push
or
cmp
xchg
clc
das
insb
clc
pusha
push
jmp
lock
dec
add
pop
out
pop
enter
lods
fs
stc
pushf
jne
iret
int3
pop
pop
out
jo
xor
jmp
add
sahf
test
test
pop
mov
add
dec
test
outsl
sbb
jecxz
or
icebp
hlt
rol
push
mov
jg
pop
jns
retw
xchg
or
fnsave
sti
adc
add
adc
lods
testb
add
cmpsl
dec
mov
adc
lret
fsubr
or
dec
clc
stos
add
adc
dec
or
shll
jmp
push
addb
loop
stos
push
test
ficompl
jmp
jmp
scas
sahf
inc
daa
es
mov
pop
cltd
xchg
andl
jne
fdivs
sbb
loope
aad
xchg
mov
es
adc
cli
jecxz
popf
xchg
mov
sahf
push
and
mov
pop
test
adc
and
xchg
push
add
add
inc
cmp
test
lods
lods
mov
cmpsb
xor
sub
sbb
add
scas
ja
insl
scas
pop
pop
test
mov
js
loopne
xor
nop
mov
xchg
repnz
inc
pop
decl
mov
dec
or
aad
cmp
and
pop
std
divb
aam
xchg
data16
mulb
idivb
mov
jno
pop
dec
lret
fwait
ret
dec
dec
xor
sub
add
inc
mov
daa
push
sbb
or
cmc
mov
jl
enter
pop
in
dec
rcr
dec
lods
shrl
pop
mov
test
cli
flds
movsl
and
enter
xor
repnz
mov
and
mov
mov
mov
xor
arpl
adc
jmp
popa
sub
jbe
adc
shr
mov
pop
movsb
add
mov
shll
cmp
jecxz
out
jp
inc
scas
addr16
or
xchg
adc
cs
negb
add
dec
cmp
xchg
push
jnp
dec
scas
dec
xchg
push
jmp
or
inc
mov
mov
lods
dec
icebp
imul
lret
mov
inc
push
mov
xlat
dec
lods
push
shrd
dec
in
push
cmc
pop
out
jmp
mov
ficoms
jnp
ss
in
sbb
lods
pushf
mov
pop
clc
outsb
cmpl
popf
add
xchg
je
pop
mov
mov
push
jge
cwtl
mov
fldl
sti
dec
lock
rcll
jo
mov
or
push
adc
int3
lods
xlat
insl
pusha
add
cmpl
add
sahf
pop
jbe
xor
clc
and
mov
and
outsl
aad
mov
dec
sti
xchg
cmp
push
jecxz
cmp
in
data16
jnp
js
popa
lods
xor
ret
outsl
xor
loope
ds
or
mov
or
cmp
fincstp
adc
sub
nop
jb
push
mov
adc
sub
or
add
outsb
ss
xor
xchg
out
mov
jp
pop
popf
push
nop
cmp
mov
jmp
inc
cmp
mov
fists
ret
xchg
xchg
push
insl
hlt
loopne
mov
adc
push
cli
pop
cmp
psubb
nop
adc
repnz
inc
mov
or
jb
mov
mov
xor
pop
inc
in
sbb
rcrl
in
popa
jge
pop
rorb
inc
addr16
xchg
ret
mov
pusha
iret
add
mov
lcall
xor
insl
xlat
mov
lods
mov
pop
mov
xchg
mov
push
cs
rolb
cmc
in
mov
lods
faddl
icebp
inc
ss
inc
add
outsl
lds
xchg
leave
or
adc
ja
fstpt
and
ret
scas
mov
add
and
stc
xor
sbb
mov
push
hlt
and
sbb
push
pop
iret
mov
push
push
leave
test
icebp
hlt
rolb
fsubs
leave
cld
dec
clc
aam
xchg
cli
push
aas
scas
mov
sub
sub
fwait
mov
cmp
test
lods
add
scas
movb
lods
or
jl
push
inc
xchg
mov
push
js
fistl
loop
cmp
mov
pop
mov
test
cmp
rorb
pop
test
cmpsb
mov
xor
call
push
dec
aam
mov
cmpsb
scas
ss
mov
mov
sahf
insb
mov
call
lea
cs
xor
ja
adc
orb
xor
sub
fdivs
xchg
xor
dec
fwait
jne,pt
pop
shl
flds
sbb
clc
lahf
xchg
push
outsl
outsb
and
pushf
arpl
aad
push
arpl
fisttpll
cmp
arpl
mov
sub
add
repnz
rorb
mov
mov
xor
mov
cmp
sub
shrb
int3
or
lds
stos
imul
cmpsb
pop
incl
and
cli
dec
or
sub
push
sub
mov
cmpsl
lods
xor
fwait
dec
test
fistpl
fldenv
hlt
rolb
or
jecxz
push
pop
scas
into
push
add
pop
outsl
xor
jne
cli
pop
out
adc
dec
dec
mov
mov
sbb
inc
repnz
scas
pop
pop
lcall
mov
and
in
xchg
loopne
push
loop
xchg
fwait
and
jl
or
xlat
dec
adc
xlat
sub
repnz
sub
mov
mov
test
addr16
mov
xchg
mov
scas
sub
pop
pop
shll
repnz
aas
mov
loopne
lret
sbb
add
lea
jecxz
sub
cmp
dec
mov
mov
cmp
pop
enter
and
jmp
mov
mov
outsb
dec
loope
xor
je
rclb
je
sub
or
es
inc
ss
arpl
imul
fiadds
sub
dec
mov
hlt
imul
filds
add
pop
fistl
stc
in
and
adc
mov
xchg
dec
cmp
fisubs
or
inc
pop
jbe
mov
mov
mov
cmp
sbb
leave
addr16
daa
cld
pop
lret
xchg
shrl
add
dec
adc
dec
dec
fisttpll
jp
std
inc
mov
xchg
lods
fbstp
sti
dec
xchg
mov
je
jbe
sahf
inc
pop
jb
cs
scas
or
and
cmp
out
adcb
xor
sbb
stos
inc
nop
lds
inc
inc
cmpsl
or
mov
mov
xchg
mov
ja
dec
or
arpl
push
addl
sbb
dec
pop
jl
je
dec
push
mov
out
inc
pop
aad
dec
pop
xor
gs
fbstp
push
mov
jge
push
jo
adcb
adc
pop
enter
mov
repz
pop
lods
or
dec
cwtl
jmp
ja
or
push
mov
outsb
jbe
lret
dec
xchg
bound
lods
or
mov
or
adc
add
imul
adcl
lods
addl
andb
loope
repz
popf
popf
callw
push
adc
int
dec
inc
fs
popl
sbb
aad
jg,pt
mov
jp
mov
mov
add
xchg
mov
xor
jl
sub
push
and
cmp
daa
jnp
int3
lds
clc
daa
dec
xor
outsb
loope
dec
loopne
fdivl
aas
data16
dec
out
or
jbe
pop
arpl
mov
xor
mov
mov
cmp
dec
adc
jle
sarl
popa
xchg
mov
add
add
mov
xchg
lock
jmp
popf
lea
mov
push
into
mov
outsb
rcll
mov
lcall
sti
adc
mov
pop
cmpsb
imul
test
and
xor
adc
in
mov
dec
stos
pop
lds
into
lea
jae
mov
lret
mov
mov
insb
pop
int3
lods
jmp
mov
xchg
aaa
icebp
xchg
mov
pop
andl
fldenv
scas
push
pop
test
loope
ficomps
mov
in
rorl
ret
pop
push
push
mov
shl
cmp
test
insl
and
xchg
ja
jnp
aam
mov
jne
loop
pop
dec
and
adc
sbb
dec
ds
cmp
shll
xchg
jg
mov
sub
fildll
mov
mov
xchg
mov
outsb
loop
or
inc
sub
cmc
cwtl
sub
stos
shlb
leave
or
bound
jl
sahf
or
xchg
dec
or
rcl
dec
stos
pop
fimuls
xor
add
ljmp
and
mov
or
outsb
leave
pop
stos
xchg
add
sarl
nop
mov
adcl
jb
jp
out
or
sbb
rcll
and
aam
test
dec
mov
cltd
xchg
xor
sbb
and
inc
sub
jne
push
loop
mov
jne
sbb
add
inc
and
sbb
dec
pop
xor
push
cmp
inc
sahf
js
ja
insl
jmp
fisubs
adc
sub
fnstsw
mov
dec
mov
repnz
das
aad
pop
jmp
jns
inc
pop
xchg
ret
xor
cmp
imul
pushf
push
mov
and
cmp
add
jae
gs
pop
push
fmuls
xchg
mov
scas
mov
lret
sub
inc
push
pop
xchg
sub
fsub
or
ficoml
cmp
cs
sub
xchg
pushf
std
mov
inc
incb
aas
lods
sub
cmp
fld
push
jge
cmp
or
or
out
lods
icebp
add
fbstp
mov
into
mov
add
rcrb
gs
iret
ret
jne
add
sar
je
adcl
mov
shr
xchg
test
sub
push
ljmp
mov
jp
js
pop
test
sbb
lcall
loope
popa
xor
lods
mov
sub
pop
lds
movsl
ss
mov
and
jnp
add
subb
xchg
mov
mov
xor
dec
scas
into
mov
lods
rcrb
sbb
movsb
jg
push
xorb
dec
fadd
push
adc
aad
in
cmp
sub
jecxz
cli
pop
inc
adc
xchg
sbb
jmp
adcl
jne
mov
scas
imul
push
loopne
xor
mov
push
or
adc
movsl
inc
mov
ja
test
enter
dec
aam
pop
push
sbb
pop
mov
mov
inc
into
mov
adc
cs
push
cmp
mov
inc
jp
push
fsubs
fcomp
or
push
cmp
push
cmp
cmp
pop
bound
xlat
hlt
push
jns
adc
mov
cmp
dec
test
and
jmp
int
cmc
int
and
mov
lret
cmc
push
or
lods
xor
call
cmp
popf
inc
mov
bnd
pop
fwait
xrelease
rcrl
add
fbstp
stos
mov
call
scas
in
push
loope
cmp
sub
mov
mov
bnd
sbb
xchg
icebp
push
mov
mov
sub
sub
inc
pop
das
xor
pop
inc
mov
xchg
fidivl
les
packsswb
jbe
sub
movsl
je
int
fisttps
or
mov
mov
push
xor
jns
cli
pop
sub
pop
pop
test
fs
add
jle
push
push
ret
addr16
sub
mov
scas
lock
mov
bound
push
jmp
les
mov
test
cli
arpl
mov
movl
iret
jmp
ret
out
inc
adc
ja
stc
ret
dec
fidivs
mov
dec
fwait
push
rorb
out
daa
cld
hlt
mov
pushf
pop
jl
frstor
sbb
cmpsb
shll
cmpsl
cs
xor
mov
mov
lods
pop
arpl
push
inc
adc
subl
push
dec
adc
test
clc
lock
out
xchg
sbb
push
sbb
bound
popf
pop
and
mov
imul
daa
cmp
dec
pop
gs
jg
adc
test
mov
fcoms
jmp
imul
ja
inc
pushf
xchg
lds
test
jl
in
push
mov
sbbb
nop
pop
and
cwtl
aas
xlat
das
dec
mov
fistpl
fildll
das
outsl
stos
pop
or
push
xchg
and
out
and
xor
lcall
dec
pop
push
xlat
inc
pop
ljmp
xchg
sbbb
test
and
xchg
mov
adcl
dec
aas
jge
mov
xchg
add
or
mov
insl
jg
mov
int
pop
cmpsl
prefetchnta
cwtl
sub
aam
push
inc
outsl
pop
daa
mov
pushf
fisubl
sbb
mov
mov
stos
or
adc
jecxz
nop
mov
and
pushf
jo
adc
mov
gs
cmpsl
pop
mov
sub
or
inc
push
jo
stos
lock
xor
stc
inc
loope
mov
and
fists
add
cmp
es
jb
fdivrs
sub
mov
cli
cs
hlt
data16
push
std
cmpsb
sbb
mov
cwtl
test
es
movl
push
xorb
jns
lods
in
jle
push
push
or
ret
scas
and
fdiv
imul
mov
mov
mov
push
icebp
and
push
mov
daa
lret
dec
repnz
repz
outsb
loop
adc
push
lea
pavgw
inc
outsl
add
add
clc
lahf
jle
inc
and
jb
jbe
call
jno
inc
out
divl
mov
sub
out
fdivrl
iret
ret
inc
sbb
xor
aad
xchg
jl
addr16
cltd
push
jbe
cmpsl
lcall
shrl
jne
hlt
out
mov
int
mov
test
adc
inc
pop
mov
or
xor
pop
push
jns
lcall
push
add
mov
pop
jae
test
dec
pop
aad
fcomps
mov
inc
adc
mov
push
leave
pop
dec
sti
add
jae
mov
or
cmp
nop
frstor
mov
xor
lret
cmpl
fwait
inc
push
sbb
dec
inc
pop
dec
cltd
pusha
insl
call
repnz
ret
fs
adc
jmp
add
xchg
or
and
aaa
mov
es
jp
and
cmp
inc
sub
xlat
dec
push
rcl
test
fwait
pop
mov
adc
cmp
icebp
aas
mov
fldt
push
adc
dec
filds
loope
ja
pop
sub
xor
addr16
cld
lret
lcall
repz
popf
sahf
inc
test
push
jmp
je
imul
lods
cmp
repnz
into
xchg
movsl
fimull
and
push
rcrb
pop
and
mov
in
scas
leave
lret
sub
xlat
pop
movsl
adc
lods
mov
jge
push
mov
lahf
dec
dec
mov
push
rcr
lahf
jnp
push
js
cmpl
mov
out
jo
xchg
lods
or
or
lret
ret
pop
cmp
insb
xchg
inc
out
lret
iret
adc
scas
imull
loopne
push
cmp
test
adc
mov
outsb
jbe
xor
xor
push
int
test
hlt
mov
dec
sti
xlat
pop
pop
es
sub
jmp
stc
cmpsl
pushf
sub
repnz
repnz
adc
push
and
add
mov
push
pop
sub
mov
mov
mov
nop
jbe
mov
mov
movsl
scas
scas
ficoml
lods
outsl
jecxz
out
mov
stc
cli
pop
lods
or
mov
pop
xchg
call
jge
mov
sub
dec
jmp
ret
jmp
mov
adcb
sbb
add
mov
gs
fbstp
in
push
jmp
mov
mov
add
inc
lea
leave
dec
pop
test
lods
push
cmpsb
int3
iret
or
outsb
pop
cltd
bound
test
aas
cmpsl
mov
imul
cs
test
xchg
mov
mov
and
fisttpl
test
add
jge
pop
popa
js
mov
inc
mov
sub
inc
mov
ja
sbb
adc
xchg
cltd
push
imull
cmp
arpl
push
testl
lods
es
sbb
xor
cs
inc
push
lahf
mov
or
and
bound
popa
mov
mov
bound
sub
or
sbb
popf
push
vpackuswb
out
aas
adc
repz
inc
mov
inc
test
cwtl
cld
push
mov
mov
in
mov
int3
lods
and
je
test
je
adc
mov
movsl
sbb
in
sub
lcall
jmp
imul
cmc
xor
gs
mov
rclb
mov
lret
rclb
jle
cmp
dec
push
push
rorl
jp
cmp
pop
jp
jge
js
fwait
sarb
cld
shll
xchg
es
xchg
cmp
jmp
shlb
sub
pop
std
lds
mov
and
sbb
mov
repz
xor
adcl
mov
cmp
orl
bound
add
mov
dec
mov
pop
popf
sub
and
in
pop
cmp
imul
jecxz
fdivrl
cmp
out
outsl
adc
jg
cmp
pop
xchg
xchg
movsb
pushw
cmp
fistpl
fsub
xchg
fsubs
or
jno
rcr
add
cmpsb
iret
add
repnz
icebp
es
push
ret
push
or
pop
aad
fistl
gs
insb
inc
mov
inc
daa
test
xor
sub
iret
out
je
mov
push
push
pushf
insb
sub
sti
mov
mov
dec
push
movsl
dec
xor
int
jb
sahf
inc
es
aad
and
aas
sbb
rcrb
sub
cmp
mov
les
sub
sbb
or
call
scas
and
pop
jl
mov
jb
cmp
andl
sub
push
xchg
aad
mov
cmpsb
xchg
dec
xchg
xorl
int3
mov
xchg
dec
mov
mov
or
xchg
fs
mov
push
cmpsb
mov
mov
rcrb
das
ja
push
aad
pop
jbe
cmp
les
mov
cmpl
or
in
dec
scas
popa
hlt
xchg
jb
jge
mov
lea
pop
push
mov
inc
aas
inc
cmp
fiadds
or
popl
imul
stc
sbb
jnp
rclb
adc
jae
das
mov
and
rcrl
jp
aad
jno
iret
ja
stos
subl
repnz
cli
popf
and
cmp
inc
pop
popf
cmp
pop
xor
packssdw
pop
hlt
xor
cmpsb
notb
movsb
xor
and
xchg
sti
scas
lret
inc
sbb
lds
ficoms
andb
test
and
insl
popf
xchg
cmpsb
insl
pop
sbb
push
jo
in
sti
fsubs
daa
nop
lea
xor
andl
int
xchg
insb
or
and
cmpsb
les
push
sub
cs
mov
or
dec
mov
xor
ss
fsubrs
addr16
clc
rep
cmp
jge
js
jno
imul
aas
inc
xor
push
leave
xor
add
int3
jmp
lods
mov
leave
push
loopne
mov
xchg
movsl
cmp
cwtl
orl
xor
xchg
js
or
dec
shr
add
push
addr16
xchg
push
mov
jne
xchg
dec
or
and
dec
pop
mov
icebp
mov
dec
ret
ret
fsubl
and
and
push
mov
mov
add
fiadds
jae
cmpsl
cli
shll
dec
lret
icebp
fbstp
js
xchg
push
outsb
loop
xchg
mov
sarl
insl
sbb
pop
imul
mov
push
movsl
cs
cwtl
rcrb
outsl
pusha
lea
fcoms
mov
aaa
sbb
push
mov
hlt
out
add
inc
push
mov
in
out
dec
ret
loope
hlt
cmp
nop
sbb
imulb
lods
fwait
sahf
sbb
lahf
and
xor
arpl
cmp
and
lods
mov
and
jmp
lret
pop
add
ds
jp
add
xor
sub
or
inc
cmp
xor
arpl
test
mov
push
scas
pop
int
lcall
loop
inc
jno
or
jmp
cwtl
popf
dec
repz
adc
insl
out
jbe
mov
xorl
decl
xor
mov
loop
xchg
nop
es
or
pop
rorl
mov
mov
add
out
cmp
scas
dec
aaa
sbb
push
sbb
adc
mov
mov
es
mov
sbb
cs
or
fistps
lds
mov
pusha
cld
cmpsb
or
or
fcmovnb
ljmp
ficoms
jp
imul
notb
lock
imul
fdivs
mov
pop
daa
shrl
insb
mov
pop
push
mov
into
int
mov
xchg
jb
mov
leave
push
push
inc
stos
mov
scas
xor
ret
adc
xchg
pop
push
fcoml
cmp
rcr
pop
xchg
jmp
jge
orl
testb
movsl
push
xor
or
repnz
and
xchg
int3
and
cmp
jne
jp
xor
sarb
mov
mov
mov
stc
lret
jns
stos
out
insb
mov
subb
or
fstpt
inc
fsubs
repnz
xchg
sbb
pop
sub
inc
movl
inc
xorl
lcall
es
dec
fucom
mov
iret
cmp
add
pop
sbb
fwait
xabort
lcall
shrb
ljmp
das
loope
mov
pop
stc
lea
leave
and
push
into
hlt
fidivl
imulb
out
aaa
or
fs
inc
in
dec
ret
lods
in
ss
lcall
ja
stos
jmp
push
scas
sbb
int3
sub
push
test
popa
mov
push
and
dec
test
sti
movsb
std
rclb
fisubrs
dec
insb
fnsave
stc
jns
lods
push
das
mov
mov
dec
fcmovbe
push
lea
insl
inc
pop
dec
loop
xlat
das
push
or
adc
cltd
dec
sub
or
in
and
xchg
push
jno
aad
pop
sbb
pop
mov
cmp
outsl
jo
insb
push
and
mov
cmp
stos
mov
sbb
or
add
stos
lcall
aas
push
push
mov
adc
xchg
popa
xor
out
shll
add
dec
inc
int3
repnz
test
push
ret
jae
je
or
dec
mov
mov
or
jmp
or
mov
insl
jno
out
inc
and
mov
notb
mov
jp
aas
fcoms
lea
xor
es
popl
inc
mov
lret
scas
aas
scas
mov
xor
dec
popf
xchg
in
je
sahf
or
into
outsl
shufps
nop
mov
stos
aad
jns
std
lds
repz
filds
les
inc
sub
dec
loop
orl
in
lret
leave
dec
js
add
inc
pop
push
jl
lahf
outsb
inc
add
out
mov
sub
push
outsb
jbe
mov
les
test
or
mov
clc
inc
mov
popf
dec
std
test
dec
cmp
icebp
ds
rcrb
pop
mov
pop
data16
add
cmc
loop
dec
mov
adc
dec
test
stc
lods
pop
inc
orb
lahf
ljmp
jl
inc
lea
add
out
adc
pop
pop
push
cmp
enter
add
cmpsl
dec
ja
sub
ljmp
mov
addr16
mov
or
cltd
jo
dec
cmp
pop
jg
shr
jp
jne
sti
fs
cmpsl
cmp
pop
out
lock
pop
fbstp
aam
shrb
imulb
stos
cmp
sbb
push
pop
dec
pop
andl
and
mov
and
es
xchg
sbb
cmpsb
or
roll
mov
outsl
ss
add
pushl
inc
es
iret
cmp
add
inc
sbb
jae
xor
pop
jmp
icebp
push
testl
pop
loop
and
mov
sbb
jg
xor
rorl
jmp
adc
sbb
adc
das
pop
push
mov
test
xor
sbb
jns
mov
xchg
sbb
adc
popf
xchg
push
sarb
mov
scas
sbb
jmp
xchg
mov
mov
insl
dec
pop
inc
push
clc
sti
in
dec
lock
xchg
adcb
cwtl
scas
inc
push
or
push
cs
cli
jnp
pop
or
test
mov
aaa
push
adc
jmp
jo
adc
sub
dec
mov
hlt
adc
pop
push
movsl
imul
inc
arpl
dec
inc
cmc
jbe
daa
add
cwtl
rol
cmp
pop
loope
sbb
je
add
sub
adc
dec
popf
cld
add
adc
int3
xchg
lea
sbb
rclb
cmp
fwait
xchg
dec
push
or
aas
movsb
lahf
lea
inc
test
stos
enter
sub
sub
shrl
or
xchg
jmp
dec
outsb
jbe
mov
inc
negb
dec
test
mov
stc
mov
jp
dec
lahf
test
cmp
xlat
sub
popa
rcr
add
add
sbb
addl
into
stos
cli
rep
lahf
movsl
js
mov
test
inc
mov
pop
sarb
clc
fnsave
insb
xchg
sti
pop
or
enter
push
sbb
mov
sbb
jno
pop
mul
shlb
jae
outsb
enter
sbb
fcmovb
mov
shll
lock
sbb
push
in
lods
dec
out
addb
mov
test
std
cli
shr
aas
and
xchg
in
mov
cmpsb
xor
popf
inc
dec
sub
cmc
test
and
je
or
int3
stos
out
xlat
xchg
lret
add
or
adc
push
mov
adc
sbb
or
adc
jmp
mov
xor
out
aad
ret
aaa
movb
xchg
adc
out
ret
lea
stos
mov
js
cld
test
or
or
pop
push
mov
cmp
lods
sub
sub
aad
sti
fbstp
mull
dec
std
xchg
jp
pop
mov
mov
nop
mov
clc
and
insl
pop
pop
mov
pop
mov
sbb
fcompl
and
daa
bound
xchg
mov
loope
addr16
push
std
mov
out
into
test
rol
ss
pop
icebp
clc
aam
push
mov
cwtl
test
jbe
xor
dec
jmp
rcrl
in
or
popl
enter
loop
mov
inc
ret
pop
test
xor
push
incl
jne
sub
pop
xchg
xchg
mov
repz
cld
push
pop
jo,pt
outsb
cmp
pop
movsl
or
cmp
out
push
cmp
in
adc
mov
sbb
cs
repnz
jbe
jg
scas
loop
adc
jle
push
mov
out
jl
push
push
scas
ret
test
in
out
xor
cld
xor
lods
rorb
inc
int
cmpsb
xor
faddl
jmp
push
out
mov
lret
shlb
xchg
in
mov
xor
pop
fcomi
das
and
mov
lret
or
push
cmpsl
loop
stos
pop
mov
jg
xor
mov
add
xlat
rcrl
lcall
adc
push
imul
sub
jno
mov
mov
adc
fucom
push
or
mov
mov
xor
or
jle
mov
bound
in
or
push
xchg
ret
pop
pop
jnp
sbb
sub
cs
ret
mov
mov
fldl
add
dec
dec
ds
lods
fistpl
adc
fs
adc
sbb
and
add
stos
xchg
mov
fsubs
jecxz
inc
ss
cmpl
out
adc
pop
mov
push
jecxz
fstpl
cmp
ss
fnstcw
xchg
insb
inc
push
popf
cmp
outsl
lods
mov
fldt
icebp
test
inc
add
stc
inc
fcmovb
push
cmpsb
clc
mov
jge
or
fcoml
aas
cmp
movsb
or
sti
jle
rclb
xchg
add
popf
stc
test
jle
xchg
insl
and
xlat
dec
rcr
cmpsb
fstpl
idivb
lcall
sti
or
jbe
dec
xchg
fcoml
into
mov
sti
lock
movsl
fxch
in
call
nop
xchg
push
jae
in
inc
xor
or
inc
sub
sbb
push
in
mov
pop
add
sub
clc
xchg
jle
sbb
xor
sti
fstpl
pusha
rcrl
xchg
mov
in
xchg
lcall
lcall
mov
cltd
adc
call
cwtl
jne
in
negl
cmp
xorl
out
stc
mov
pop
fscale
jb
icebp
fiadds
mov
pop
lds
movsl
xchg
pop
xchg
lret
outsb
fiadds
adc
dec
xor
mov
lahf
xor
mulb
movsl
push
loopne
cmp
xor
add
mov
in
test
push
or
ljmp
dec
imul
adc
xor
out
testb
mov
sbb
xchg
xor
mov
and
mov
popl
sbb
aam
outsb
mov
adc
scas
fs
push
jae
std
inc
adc
inc
cmpsl
fmuls
push
sar
jmp
inc
add
dec
int3
dec
lods
mov
rcrb
cwtl
es
xchg
and
sub
mov
mov
test
mov
outsl
cld
dec
push
mov
mov
dec
sub
iret
jns
jae
sub
out
cmp
xchg
lcall
repnz
add
mulb
cmp
xor
aad
out
xchg
pop
add
orl
popa
loope
bound
das
cmp
fwait
add
sub
mov
jne
test
pop
mov
lock
pop
mov
jmp
add
loopne
gs
outsb
fmul
mov
adc
ret
ss
sbbl
aas
mov
add
or
pop
gs
or
enter
js
hlt
ret
push
mov
call
or
push
insb
dec
xchg
bnd
adc
outsb
sub
aad
stos
jb
jge
test
lret
pop
fld1
mov
dec
out
and
mov
push
push
test
jbe
ljmp
jg
out
mov
test
dec
test
imul
js
and
or
cs
adc
jne
stc
xchg
adc
add
stos
cmp
test
jge
dec
mov
dec
mov
jp
xchg
add
js
dec
mov
adc
fsubrl
test
mov
out
stos
mov
das
out
fmul
js
jp
fiaddl
popf
xor
cwtl
sub
or
adc
push
push
xchg
mov
lds
rcll
call
mov
cmp
mov
jle
add
mov
or
js
stc
xchg
in
loope
pop
and
shrl
mov
adc
loopne
sub
stos
jns
test
cmp
xor
dec
ds
stc
mov
repz
cmp
xchg
in
adc
push
clc
stc
icebp
jg
cmpsl
adcl
and
stos
mov
mov
mov
jl
fstpt
dec
or
mov
xchg
stos
rcl
shlb
and
xchg
pushf
dec
jmp
scas
fldcw
and
fwait
mov
push
sub
enter
or
mov
shrl
shlb
mov
dec
sub
jp
iret
ja
cmp
pop
subl
dec
sbb
xlat
ss
cmpsl
js
rorb
mov
jnp
popa
sahf
sub
stos
popf
jecxz
iret
jno
arpl
sub
mov
ficomps
xorl
inc
stos
and
mov
mov
sbb
les
stc
xor
mov
xchg
stc
jecxz
popf
inc
test
mov
xor
loopne
xchg
insl
lea
mov
cmp
fildll
or
cmp
test
cmp
leave
fdivrs
jnp
ljmp
cld
popl
hlt
aas
xor
outsb
inc
aas
mov
cmpsb
out
push
xor
mov
push
fsubrs
mov
xor
xor
jne
mov
push
das
xchg
jae
ficompl
mov
or
out
shl
fdivs
popa
fbld
and
or
push
shr
mov
adc
mov
mov
xchg
imul
mov
loopne
scas
jne
sub
popf
add
xor
dec
jp
and
push
and
lcall
int
pop
jb
ret
out
incb
lret
mov
xchg
jne
addr16
cli
out
stos
mov
pusha
pop
fs
push
inc
clc
hlt
xchg
lds
dec
dec
pop
mov
jp
xchg
add
ret
sbbb
cld
imul
and
repnz
fdivrl
adc
sbb
repnz
rcrl
testl
gs
jp
lea
sub
fucomi
stc
sbb
test
orb
ret
insb
push
je
rorl
cli
push
mov
popa
in
adc
ret
mov
push
popa
mov
adc
or
aam
loope
rorl
mov
adc
xchg
ror
mov
jl
rcrb
cld
mov
cmc
das
idiv
into
add
aaa
add
sub
inc
xor
push
shr
mov
testl
aaa
shlb
cmp
cmp
imul
test
push
xor
dec
sub
scas
call
aad
repnz
loope
sub
inc
aad
push
shrb
mov
cmp
sub
les
mov
pop
je
dec
push
rep
ljmp
xchg
and
insb
xchg
mov
lcall
outsb
mov
fcmovnb
fs
aas
pushf
cmpsb
call
gs
mov
scas
add
mov
jnp
mov
stos
in
xchg
pop
cs
lds
xor
adc
jb
adc
xorl
dec
int
add
add
mov
cwtl
lahf
inc
sub
popf
insb
or
cmpsb
inc
or
push
icebp
leave
rcr
mov
test
fstpt
cmpsb
xor
cwtl
das
push
ret
jnp,pt
pop
neg
push
xchg
jmp
inc
fs
out
aaa
inc
sub
or
in
bound
or
xor
pop
loop
aad
fs
push
sub
cmpsb
push
fs
arpl
shll
sbb
mov
scas
jge
std
mov
sub
aam
repnz
nop
mov
loope
int
pop
sbb
leave
inc
dec
aad
in
imul
jne
fistpl
pop
push
iret
add
fldt
popa
or
adc
dec
cmp
fmull
jbe
arpl
or
fistpll
icebp
js
mov
sbb
ret
pop
jp
and
mov
mov
dec
ds
or
add
imul
rcll
rcrb
test
push
xor
addl
flds
cmpb
and
mov
in
push
mov
stc
and
sarl
inc
inc
xchg
cmp
push
lock
sub
add
leave
jge
push
jnp
outsl
sbb
sbb
test
loope
sbb
mov
orl
or
test
mov
popa
js
pop
xor
xor
mov
jnp
push
jne
jae
les
jmp
cmpsl
rorb
fwait
and
fimull
icebp
test
es
mov
movsb
fimull
pusha
adc
adc
ss
loopne
mov
ja
cs
out
insl
pushf
cmp
jg
xchg
sbbb
and
iret
scas
loop,pn
mov
adc
mov
push
dec
aad
mov
jge
mov
mov
loope
jb
fadd
popa
adc
loopne
sub
dec
cs
lods
pushf
cmp
jl
aam
jge
add
xchg
push
cs
lods
clc
lret
push
mov
mov
jge
inc
jns
mov
mul
dec
mov
les
mov
jmp
and
outsl
and
add
cmpsb
push
inc
ret
sahf
cltd
mov
gs
popf
test
xor
and
test
int
inc
lods
jb
fdivrs
and
dec
and
sub
fwait
test
xor
adc
xchg
pop
sbb
mov
pop
sub
sbbb
lahf
xchg
fnstenv
subb
mov
ret
sbb
push
or
pop
lcall
jns
and
les
and
push
sbb
cs
or
das
and
push
dec
push
add
sti
daa
dec
orl
fldlg2
call
push
aas
adc
add
adc
fdivl
cmp
mov
je
add
cmp
fcoms
jge
outsb
dec
stos
xchg
add
mov
mov
dec
add
cmp
clc
and
inc
int
pop
mov
int3
lcall
xchg
cmp
pop
inc
call
ja
fwait
cltd
rcll
mov
iret
mov
xchg
sbb
addr16
rol
leave
cmc
gs
inc
in
sbb
into
pop
sub
sub
adc
mov
test
or
xchg
sbb
bound
loope
jnp
popf
mov
adc
xchg
sbb
mov
push
xchg
rcll
addr16
dec
jecxz
sti
pop
sub
out
nop
mov
dec
mov
in
cltd
mov
adc
arpl
mov
sub
out
mov
pop
add
aaa
roll
faddl
xchg
shrl
add
in
popf
jg
sbb
or
fnstenv
mov
ret
insb
aas
cmp
sub
scas
push
repnz
int
sub
pusha
pop
ljmp
mov
push
orb
sbb
sar
repnz
vphaddbw
cmp
xchg
aas
inc
dec
xchg
in
mov
add
test
adcl
xor
cmp
and
push
push
mov
mov
fnop
repz
pop
imul
dec
xor
pop
movsl
jmp
addb
adc
imul
lds
sbb
repz
inc
sbb
jnp
aad
sbb
jecxz
ljmp
and
pop
int3
std
mov
pop
cmp
jp
xlat
push
jmp
leave
into
sub
out
push
push
stos
xorb
jo
lahf
lods
lock
add
movsl
daa
cmp
arpl
int3
ja
ffree
scas
arpl
xchg
and
jns
roll
push
int
dec
insl
sti
mov
lods
stos
ja
jbe
pop
fmul
xor
sti
cmp
add
ffreep
cmc
sbbb
xchg
gs
scas
repz
rcl
scas
cmpb
cwtl
int3
push
push
push
test
xchg
aam
dec
cmp
subb
in
jecxz
fadds
inc
pop
stc
or
fisttpll
test
testl
mov
in
loopne
fs
jmp
ljmp
lods
movsb
push
insb
push
jp
orl
jl
jge
shlb
cmp
dec
cwtl
rcrb
mov
pop
sti
add
jns
mov
fstps
jle
les
cmpsl
hlt
jg
leave
repz
lds
fmul
fisubrs
addr16
cmp
pusha
push
sub
push
fisttps
mov
xchg
ror
lret
mov
or
add
mov
in
daa
xorl
cwtl
pop
sub
mov
mov
insb
mov
mov
clc
imul
out
or
sbb
cmc
pushf
xchg
aas
adc
xor
stos
pop
lods
pop
icebp
fisubrs
or
push
in
in
dec
pop
push
lahf
push
bound
inc
out
leave
add
cmp
fwait
in
lahf
adc
mov
or
les
adc
sbb
cs
shrl
and
rclb
fcomp
mov
shlb
js
push
mov
pushf
rorl
cmp
ljmp
and
enter
les
mov
cmp
iret
test
push
push
and
outsl
call
xor
jae
xor
sbb
lods
test
mov
add
inc
xchg
xchg
shl
sbb
outsb
or
fwait
sti
and
or
fs
movsl
push
cmp
inc
dec
outsb
test
and
cmp
in
jle,pn
sub
out
or
adc
mov
in
xchg
dec
int3
pop
jae
ds
fidivrl
in
push
sub
lods
test
and
dec
daa
jno
mov
mov
fildl
pop
dec
xchg
adc
rcll
mov
push
push
cmpsb
aam
arpl
sub
mov
icebp
mov
lock
mov
lea
push
pop
mov
push
add
xor
bound
mov
lret
mov
fdivrl
loopne
adc
mov
arpl
push
xorl
loopne
xchg
cmp
shlb
ret
sbb
insl
pop
lods
je
jecxz
push
lea
jecxz
inc
outsb
sahf
sub
mov
imul
inc
pop
mov
cmp
mov
cwtl
rorb
push
mov
and
adc
mov
pusha
mov
andl
roll
std
pop
icebp
and
rcll
xchg
or
in
xor
popf
jns
repz
cmpsl
stos
fisttpll
push
cmpb
rclb
arpl
push
adc
cmp
push
push
mov
xchg
fldl
bound
test
inc
mov
mov
cmp
decl
loop
roll
stos
sub
int
icebp
cmpsl
jmp
or
leave
jg
pop
xor
arpl
and
push
in
das
enter
cmp
mov
jne
push
push
fisttpl
cld
cmp
adc
popf
notl
movzwl
mov
push
cld
mov
addb
push
mov
shlb
dec
jno
lods
push
ret
sub
pop
sbb
xor
into
sbb
fcomps
mov
xchg
adc
inc
cli
js
cmpsl
xchg
call
cli
xchg
pop
mov
push
in
jg
pop
lcall
mov
outsb
jmp
out
lahf
or
jae
and
nop
int3
cmp
ljmp
rorb
sbb
sub
dec
inc
iret
sbb
mov
and
jo
mov
sbb
mov
cwtl
jo
repnz
ffree
das
sub
cltd
jl
outsb
testb
push
pop
mov
insl
cmpsb
add
rorb
push
rcrb
lods
movsl
add
sub
pop
inc
test
loopne
in
pop
subb
cli
pop
fidivrs
jo
jns
imul
add
aaa
and
movsl
inc
and
movsl
xchg
pop
mov
dec
rorl
cmp
repnz
daa
or
sub
jmp
icebp
mov
fwait
test
push
pop
and
cmpsl
pushf
jp
in
push
push
sub
mov
cmp
test
enter
cs
dec
loop
popa
inc
sub
insb
xchg
push
add
mov
jmp
gs
sbb
arpl
adc
into
or
insl
mov
pushf
xor
inc
imul
sbb
lcall
mov
mov
mov
mov
cmpb
fcoms
cmp
xor
xor
std
push
mov
out
jecxz
mov
stc
call
cwtl
cmp
sbb
sbb
test
sub
lea
popf
cmp
jge
scas
stos
jo
mov
loope
inc
dec
add
pop
pop
lret
icebp
data16
out
in
push
ficompl
add
lods
dec
jns
cs
xor
negb
cmp
sub
mov
sub
mov
jb
sbb
inc
rorb
jle
push
stc
inc
add
lret
insb
inc
sbb
aaa
or
dec
dec
adc
ret
sub
adc
repz
das
popf
or
rclb
loop
dec
shll
dec
cwtl
push
sbb
outsb
mov
add
js
int3
xor
aam
adc
pop
xchg
movsb
pop
test
sti
jnp
pop
jno
sbb
sub
shlb
call
add
int3
fisubl
pop
lds
cs
js
lock
xcrypt-cbc
cmpsl
adc
lock
pcmpeqw
cwtl
cmovge
rclb
js
repnz
movsb
sub
pop
stc
mov
icebp
daa
jnp
das
scas
sub
into
jl
sub
jmp
int3
lods
lahf
sbb
xchg
test
loopne
enter
jecxz
out
xor
test
jmp
std
xor
in
mov
cli
in
and
push
and
mov
dec
mov
cmp
cld
cmp
cld
jecxz
add
addr16
out
fstl
in
and
push
mov
xchg
mov
js
sub
sub
sub
xorl
cwtl
in
frstor
das
shlb
cmp
test
cmp
jge
mov
pop
push
nop
lret
sbb
and
inc
jne
pop
movsb
lcall
daa
xchg
andb
push
mov
mov
cmp
jne
cmp
dec
mov
repnz
pop
insb
loopne
cli
sub
sbb
sub
add
outsl
repz
or
inc
xchg
rcl
xor
in
inc
cmp
inc
fnstsw
mov
insb
xchg
mov
dec
cmc
lods
jnp
out
pushf
jnp
sub
pop
loop
push
jo
add
insb
dec
aad
mov
push
xor
xor
adc
fs
lret
pop
les
jp
add
clc
jae
movd
or
jp
cwtl
adc
lods
pop
test
push
mov
call
iret
pop
inc
lock
pop
cmp
icebp
xor
xor
aas
dec
jecxz
rclb
jmp
push
push
jge
jge
loop
pushf
lods
leave
xor
imul
int
xor
xor
mov
lret
or
psrad
std
inc
xchg
xchg
nop
jmp
es
xlat
movsb
out
xchg
iret
call
fwait
outsl
xchg
into
outsb
inc
arpl
scas
sbb
popa
in
and
sbb
jle
push
or
scas
adc
jb
push
ret
mov
mov
dec
ja
dec
mov
aaa
popf
loop
push
sti
pop
and
xchg
fisttpl
add
xchg
ds
mov
jns
lods
jge
insb
pop
out
xchg
lods
js
cmp
mov
out
enter
mov
xor
mov
in
movsl
subb
loopne
mov
repnz
push
outsb
in
movsl
data16
xlat
pusha
add
mov
insl
or
pop
push
jae
xchg
ss
push
daa
adc
stos
cmpsb
inc
fdiv
jo
pop
xor
fdivl
fs
rorb
inc
sub
add
lahf
jb
mov
xlat
push
into
adcl
xchg
pop
and
in
and
xchg
outsb
pop
and
cmpsl
sub
adc
insb
mov
pushf
sub
test
adc
ljmp
imul
or
loope
xchg
sub
fists
test
xchg
sub
jno
push
into
imul
xchg
fistpll
lahf
jl
xor
sbb
sub
add
iret
addl
cmc
insl
ss
dec
loop
adc
std
adc
adcl
sub
adc
out
mov
sbb
notl
cmp
dec
xchg
ds
or
shrb
pop
pushf
xchg
popa
sub
push
mov
dec
leave
push
cmp
loop
cwtl
pop
xchg
in
jp
sbb
pop
add
push
or
sti
mov
add
push
push
shll
int3
shrl
lcall
mov
dec
pusha
dec
and
repz
jge
jp
sbb
movb
or
cmp
fadds
sbb
shlb
sbb
jno
mov
push
or
mov
sub
jns,pn
dec
mov
mov
cmpsl
insl
mov
fiaddl
out
test
mov
inc
cwtl
add
nop
lock
mov
stos
ficompl
mov
ja
or
push
in
mov
cmc
fisubs
nop
xchg
cs
mov
jo
or
xor
aam
sti
aas
push
jne
popf
and
loopne
pop
int3
imul
idivl
push
fcoml
inc
jnp
push
jnp
sahf
insl
sar
mov
data16
mov
loop
mov
add
mov
dec
pop
xor
and
pop
stc
sbb
in
xchg
xlat
mov
xor
das
or
mov
push
cwtl
push
sahf
je
les
mov
rcrb
jae
mov
or
rorb
popa
test
aas
je
adc
nop
xchg
xor
out
mov
sub
mov
in
lea
mov
jae
sub
adc
adc
stos
pop
dec
aad
lret
cmp
sbb
fiaddl
test
imul
test
repz
addb
or
mov
mov
test
sub
mov
adc
loop
pop
in
inc
xlat
std
gs
dec
scas
xchg
push
mov
mov
adc
fnstsw
icebp
clc
cmp
inc
inc
fs
scas
adc
dec
ret
jle
cmp
loope
jg
xchg
lods
cmpb
sbb
pop
aas
push
and
rolb
aad
stc
ds
shlb
jnp
into
pextrw
dec
mov
jge
adc
add
enter
ss
jbe
iret
sub
jno
pushf
xorb
push
loope
nop
ljmp
mov
and
int3
aaa
sub
es
mov
pop
dec
lret
lret
cwtl
or
pop
das
mov
lods
imul
sbb
shlb
jmp
pop
xchg
pop
jae
cmp
lods
lea
ret
mov
in
mov
sbbb
push
xchg
xchg
jg
arpl
push
enter
les
mov
in
and
pop
xchg
jne
cmpsl
out
xchg
push
jb
mov
xor
movsl
sub
xor
daa
gs
call
or
cli
cmp
mov
pop
scas
lock
mov
cli
divl
mov
loope
popa
fbstp
test
stos
jo
mov
and
lods
dec
pop
adc
and
sub
stos
adc
sbb
jns
add
cltd
sub
cvttps2pi
adc
ja
inc
inc
push
and
gs
in
andl
hlt
scas
pop
fildl
std
lds
mov
and
push
jb
cmp
inc
xchg
jl
push
add
in
jmp
ret
testl
mov
mov
pop
xchg
jp
or
shlb
inc
fxch
jle
pop
xchg
xchg
les
mov
fimull
les
or
and
pop
jecxz
out
mov
cli
ja
je
inc
mov
cmp
xor
cltd
jno
std
and
sbb
sub
call
hlt
add
pop
imul
rcl
in
push
pop
cmp
mov
enter
loop
xor
adc
movsl
jne
jge
add
enter
inc
xor
fbld
les
xchg
cmp
push
dec
or
fidivrl
push
jbe
out
xlat
cmpsb
sub
ss
nop
mov
inc
add
scas
mov
add
sbb
pop
cmp
add
jnp
insl
dec
dec
insb
mov
add
lods
jns
mov
sbb
ss
cltd
xor
in
cmp
and
sldt
ds
loop
and
pop
mov
sbb
out
loopne
sbb
sub
lods
and
iret
loope
inc
xchg
lods
leave
sub
push
f2xm1
es
ss
js
mov
call
ret
push
or
mov
xchg
sub
fildl
ss
nop
xor
or
scas
jnp
or
lahf
fimull
lret
xchg
fsubrs
mov
sahf
ret
inc
jle
xor
push
cmpsl
dec
fcmovne
mov
xchg
inc
push
push
push
out
xchg
sbb
test
sbb
push
pusha
xor
fidivl
push
lret
xor
clc
sbb
jp
mov
push
cltd
fsubs
rolb
int3
xor
inc
pop
pop
stos
fnstsw
in
in
mov
xor
mov
jnp
mov
add
or
orb
push
je
jne
icebp
ret
adc
stc
xchg
loopne
mov
jno
aad
out
cmp
xor
cltd
loop
repz
xchg
mov
ret
and
pop
xchg
rorb
popl
xor
into
jns
repz
pop
pop
subl
enter
cltd
std
cltd
sti
adc
dec
in
mov
repz
stos
adc
mov
insl
je
adc
mov
add
jae
in
shl
dec
loop
repnz
imul
je
pop
inc
pop
insl
call
mov
mov
cmp
jmp
testb
mov
loope
push
stc
xor
aad
xlat
je
sub
inc
xor
cld
lcall
xchg
bound
notl
fnstcw
push
movsb
sbb
rolb
pop
imul
pusha
pop
cmp
inc
iret
int
or
add
lcall
out
cmp
dec
mov
cwtl
clc
sbb
dec
outsb
sbb
scas
cmpsb
push
nop
popf
mov
aas
add
rcrb
mov
sub
addr16
adc
cmp
mov
jne
adc
push
jns
popf
lock
cmp
mov
je
popl
mov
xchg
or
mov
movsl
cmp
rorl
mov
mov
leave
cmp
aas
dec
je
mov
adc
repz
andl
imul
mov
std
inc
stos
jns
add
cmp
jg
xor
xchg
loope
hlt
push
movsb
lods
popf
addl
cmpsb
cmp
inc
arpl
stos
out
add
lock
pop
push
sub
xchg
xor
pusha
gs
ds
cmp
aad
pusha
push
adc
clc
and
out
sub
and
cli
test
or
jmp
aam
rolb
jo
movsl
adc
and
or
movsl
lret
cmp
push
hlt
xchg
lret
jb
lret
cmc
xchg
out
aas
fnstsw
testl
mov
outsl
fs
enter
push
dec
fidivs
and
call
out
jae
add
sbb
adc
pop
pop
push
lods
ljmp
or
mov
jmp
xchg
jb
pop
pop
leave
aad
xchg
outsb
adc
xchg
fidivrs
into
frstor
pop
lock
loopne
sbb
cwtl
jle
outsb
ss
and
cmp
testb
and
mov
or
mov
push
daa
pop
pop
mov
fs
nop
ss
pop
shlb
out
out
in
xor
sbb
movb
mov
mov
push
rorl
cltd
mov
test
lret
aas
pop
or
or
cmp
sbb
jge
out
add
bound
sub
pushf
arpl
adc
adc
les
fistl
inc
ljmp
faddp
mov
mov
mov
dec
mov
or
add
clc
test
in
dec
mov
repz
push
mov
in
xor
xchg
jo
sbb
mov
es
incl
aaa
jmp
jbe
bound
arpl
cltd
fxch
jecxz
jmp
cmpl
cli
or
xchg
jb
xor
roll
ss
lcall
xor
xchg
movsb
push
push
mov
ret
jp
or
mov
add
adc
xchg
xor
add
sbb
and
sbb
xchg
adc
and
jnp
push
repz
sti
push
aaa
push
fnstenv
leave
js
aam
testl
in
push
and
imul
out
mov
cmp
leave
mov
xchg
ret
mov
in
cmp
clc
push
mov
mull
push
mov
sbb
mov
adc
dec
imul
or
mov
adc
mov
dec
push
nop
inc
and
arpl
fcoml
sbb
push
adc
or
shlb
add
ss
or
stos
ret
addr16
int3
fwait
decl
nop
xorl
test
pop
and
mov
add
popf
or
add
jmp
out
jb
aaa
insb
fistps
cld
jb
pop
pop
ljmp
inc
pusha
repz
cltd
lock
push
push
int3
and
mov
icebp
pop
mov
push
sub
lods
mov
pop
inc
dec
movsl
mov
shl
int3
xor
sbb
pop
dec
loop
loop
dec
test
inc
jecxz
cmp
pusha
jmp
enter
mov
lret
cmp
pop
arpl
gs
stos
loope
inc
hlt
jecxz
lea
enter
xchg
rdmsr
mov
imul
test
inc
jmp
fstl
out
push
sarl
mov
jns
leave
mov
loope
xorb
or
jmp
iret
mov
out
push
ds
shll
sbb
push
mov
xor
jp
in
mov
pop
stos
pop
std
or
adc
cmc
or
add
pop
xor
insl
mov
scas
push
adc
inc
lcall
mov
inc
push
in
daa
jb
push
cwtl
notb
sub
sbb
scas
outsb
adc
adc
in
subl
test
sbb
jno
push
fs
add
add
pop
jle
das
fcoms
test
imul
sahf
inc
pop
jne
sub
or
iret
inc
in
in
xor
sub
int3
sbb
fmul
jno
xor
jg
push
jle
movsb
push
sbb
sbb
pop
sub
scas
add
lds
and
dec
xchg
jbe
stos
pop
push
stos
hlt
fs
loopne
pop
sbb
xchg
cmp
inc
clc
xor
or
jmp
dec
sub
test
sub
test
fistps
jmp
aam
jle
idiv
out
repnz
lret
sub
jmp
xor
mov
stos
mov
adc
pop
push
jb
mov
shrb
jb
nop
jle
ja
leave
inc
xor
xchg
add
and
xchg
xchg
cld
xchg
out
xor
xchg
add
ja
pop
lret
add
fdiv
int3
leave
mov
insb
add
rcl
les
push
and
sbb
adc
xor
jo
dec
loop
faddl
pop
cltd
jbe
jbe
loopne
ret
test
jb
mov
mov
loope
stos
xor
loope
gs
sub
lret
dec
mov
call
push
ret
roll
and
test
mov
mov
and
ret
sbb
jae
imull
pushf
sub
popa
std
pop
mov
int3
mov
negl
loope
pop
cmc
and
or
and
and
sub
inc
dec
cmpsb
enter
pop
addr16
sub
pop
scas
push
outsb
loopne
ja
repz
cmc
fs
out
mov
clc
push
int3
test
xchg
push
xchg
je
lods
xchg
loopne
pusha
test
push
jbe
cmp
ljmp
ret
cmp
fcoml
push
and
test
call
push
mov
push
jl
mov
ret
push
or
and
mov
jg
inc
ss
out
ret
ljmp
je,pn
push
mov
jnp
insb
arpl
xorb
dec
enter
adc
pop
loop
mov
mov
dec
adc
jnp
int
push
cmp
cmp
pusha
es
jae
popa
ja
outsl
adcb
arpl
fildll
test
out
aam
lret
jp
das
xor
mov
cmp
jl
mov
mov
out
or
cmp
pushf
fisubrs
mov
or
jno
ss
cmpsb
push
imulb
mov
pop
insl
mov
lods
das
loope
ficompl
repz
std
mov
sbb
loope
add
and
xchg
test
mov
cmp
mov
dec
stc
ret
mov
dec
lret
jnp
add
adc
out
addr16
cmp
dec
xchg
das
mov
daa
push
ja
mov
add
mov
dec
nop
gs
mov
mov
push
lds
fsubs
jbe
outsl
push
aad
cltd
sbb
in
lret
js
fcoms
mov
stos
pop
mov
push
out
or
out
imul
js
sbb
lahf
in
cmp
rorb
xor
je
movsl
xchg
dec
daa
je
add
into
aad
or
xchg
and
xchg
and
jecxz
xlat
shll
dec
mov
sbb
loope
pop
call
cmpsl
cltd
cmc
adc
stc
push
repz
shlb
mov
push
inc
jb
or
aas
mov
repz
mov
stos
lods
jp
cltd
popf
das
adc
test
inc
push
popaw
and
icebp
mov
cmp
mov
aaa
lock
xchg
repnz
repz
mov
shl
outsb
aad
std
fcoml
and
add
lcall
stc
jge
movsb
jp
data16
sbb
sub
xor
or
int3
dec
pushw
sub
or
push
sub
lds
lods
aam
dec
scas
aad
lods
inc
push
enter
adc
mov
or
push
fstl
pop
jae
fwait
mov
push
lods
mov
cli
in
ficoml
jne
lds
lret
push
fstl
stos
std
dec
nop
ds
mov
adc
and
loopne
test
inc
pusha
mov
ret
ds
jae
sbb
fucomip
adc
xor
in
xchg
inc
icebp
pushf
sbb
data16
insb
inc
lods
lcall
aam
sbb
loopne
pop
int3
inc
inc
jg
xchg
mov
adc
cli
and
mov
inc
pop
jp
xor
mov
ljmp
cmpsl
fnsave
icebp
lock
dec
out
int
out
decl
cmp
cmp
adc
jne
hlt
ret
pop
xchg
dec
jg
pop
inc
mov
lock
out
jmp
cltd
int
scas
mov
outsl
jno
hlt
dec
fmuls
jecxz
ret
jp
les
sub
push
leave
adc
into
hlt
sub
mov
dec
insb
xchg
lret
cmp
addl
and
mov
push
test
add
sbbb
ja
sbb
arpl
and
cmp
inc
xchg
adc
rolb
push
int
xchg
hlt
mov
jecxz
add
xchg
dec
jb
ja
daa
sbb
and
push
push
clc
in
in
test
pusha
aaa
mov
movsb
les
mov
loope
lock
scas
lock
fucompp
icebp
sub
adc
push
cltd
dec
lret
cld
fwait
in
pop
jp
aad
mov
mov
mov
sub
xor
pop
pop
cmp
sub
push
in
arpl
lock
or
sub
mov
ret
and
into
dec
xchg
xchg
jmp
mov
dec
scas
aas
nop
pop
pop
in
cmp
in
pop
out
jg
es
ja
stc
into
push
adc
jmp
les
lret
cmpsl
movsl
enterw
loopne
orl
cmc
es
cli
jmp
push
dec
cmp
xchg
pop
push
fbstp
addr16
aad
notl
sub
lock
xchg
movsb
xchg
andl
adcb
imul
stos
cmp
dec
mov
rcll
xchg
ret
sbb
cmp
push
cli
mov
sub
aam
rorb
xchg
stos
and
add
filds
push
dec
xchg
out
hlt
mov
ret
enter
loopne
push
mov
or
lahf
mov
jge
push
xor
stos
dec
sbb
add
xchg
loope
sub
inc
pusha
shl
mov
push
punpckhdq
xor
sub
pop
mov
andl
cmc
jl
xchg
lods
pushf
xor
add
add
test
mov
call
popaw
inc
push
xor
jg
jecxz
and
inc
in
xchg
pusha
sbb
int3
in
push
xor
aam
movsl
into
repnz
scas
push
daa
les
fldcw
mov
pop
push
int3
shrb
adc
mov
nop
cmp
xor
out
sahf
sbb
jne
xchg
jmp
or
jnp
data16
pop
sarl
test
mov
mov
mov
xor
das
movsl
test
out
mov
xchg
xlat
push
ljmp
mov
pop
add
hlt
cwtl
bound
inc
aas
andb
es
call
fwait
mov
xchg
mov
cwtl
add
inc
dec
sub
insb
sahf
jp
mul
cmc
imul
inc
inc
pmaxsw
push
popf
pop
inc
pop
sub
jle
dec
out
dec
sarl
dec
pushf
loope
mov
mov
mov
jb
dec
repz
icebp
push
mov
ficomps
ret
lods
in
cmp
mov
das
test
lock
fidivs
push
icebp
and
mov
subl
xchg
inc
fisubs
pop
nop
popa
xorb
push
mov
push
xor
and
loopne
and
loope
push
xor
add
cmp
mov
xor
orl
add
mov
ret
insl
sub
roll
push
mov
adcb
cmpsl
push
in
clc
lahf
xlat
jl
push
cs
or
fadds
bound
cmpsb
or
and
xchg
jecxz
fnsetpm(287
push
sbb
cmp
ljmp
or
or
xor
cmp
loopne
sti
mov
push
sub
icebp
lock
popa
bound
fs
jg
cmpsb
dec
mov
dec
gs
gs
daa
add
imul
mov
mov
adc
mov
iret
jmp
repz
sbb
mov
push
mov
xchg
ret
ret
push
dec
pop
inc
jbe
dec
rcl
pop
pop
imul
push
mov
pushf
dec
repz
clc
add
jne
jmp
rcrl
imul
or
cmp
add
pop
data16
xchg
jp
mov
and
aad
out
fsubs
sbb
pusha
adc
inc
mov
mov
js
nop
mov
jg
clc
sbbl
stos
in
cmp
lods
cmpsl
in
cmp
js
inc
inc
cld
cmp
dec
lds
movsb
push
lock
or
mov
pop
wbinvd
ss
addb
push
mov
cld
data16
mov
aam
or
cltd
inc
push
lret
push
or
popf
push
jb
push
jbe
insb
mov
fidivrl
imul
jmp
mov
imul
push
imul
sbb
push
xchg
fists
jns
cmp
mov
fcoms
push
outsl
cmp
push
pop
inc
shlb
and
mov
mov
dec
adc
jg
dec
pop
test
adc
shrl
lods
mov
leave
clc
jle
dec
popf
int
or
xchg
lods
fwait
mov
or
loop
dec
das
das
pop
dec
mov
mov
mov
push
stos
mov
pop
cmp
nop
lret
jle
fdivrs
sbb
or
adc
push
testb
push
cmpsb
push
testb
jno
mov
movsb
mov
sub
inc
loop
cmp
pop
lret
addr16
insb
push
jl
pushf
mov
pop
lock
es
cmp
pop
lret
iret
int
xor
inc
sbb
mov
mov
fcoml
insl
mov
fcomps
frstor
jecxz
jb
outsb
and
movsl
sahf
adc
jae
mov
mov
push
das
movsb
ret
repz
add
sbb
fcoms
aad
or
pushl
inc
in
daa
mov
pop
imul
jmp
test
add
xchg
or
mov
insl
movsb
fadd
mov
aas
lds
sub
adc
jmp
fcmovnbe
addl
sub
xchg
push
fidivs
out
decl
inc
stc
scas
cmp
push
addr16
or
dec
sbb
sbb
add
add
sahf
popf
adc
adc
out
pop
sarl
and
mov
and
dec
xor
jge
inc
jl
or
xor
inc
cmpl
or
cmp
enter
scas
das
xchg
repz
icebp
mov
hlt
out
iret
rolb
and
imul
inc
js
mov
or
aam
jo
mov
fidivl
mov
and
pop
cmpsb
mov
inc
inc
js
mov
repz
sub
inc
jle
push
daa
daa
cmpsl
jg
movsb
cmp
push
sbb
outsb
and
ljmp
sbb
outsl
jmp
sbb
push
cmp
sbb
mov
cs
push
in
cmp
fsubrl
std
pushf
mov
stos
push
sbb
fdivp
pop
sub
iret
or
nop
fnstsw
or
push
push
cld
rolb
sub
gs
add
mov
cmp
cwtl
inc
add
and
jle
xor
push
js
mov
lods
inc
loopne
das
cmp
sub
lahf
and
mov
jns
es
sbb
ds
jmp
mov
insb
dec
push
notb
sub
and
xchg
mov
js
sbb
jo
in
mov
pop
lock
fisubrs
aad
mov
xchg
dec
pusha
sbb
xor
sub
out
jno
fistps
das
fists
call
sub
cs
mov
push
cmpsl
push
rorb
jg
aas
ds
xchg
lods
je
test
lock
add
sub
inc
dec
mov
out
cmp
shlb
jle
jae
dec
aam
inc
es
sbb
xor
mov
jns
jo
scas
lcall
and
sub
sbb
call
mov
mov
mov
popf
std
popa
add
pop
out
inc
daa
and
popa
les
ret
in
xor
mov
jmp
sub
and
ja
in
inc
cmpsl
pop
mov
outsl
add
outsl
lret
adc
insb
orl
repz
fcmovbe
fwait
mov
in
xchg
jp
aas
cmp
dec
xor
pop
sbb
jecxz
cmp
sarl
insl
xor
xchg
mov
cmp
mov
xor
cmp
dec
popa
pop
mov
in
es
mov
inc
jle
mov
add
push
jo
popa
or
and
cmpsl
jo
fwait
mov
jnp
or
arpl
stos
fnstenv
in
cmc
or
nop
ja
imul
pop
inc
mov
push
xchg
arpl
cmp
imul
jg
inc
cld
icebp
out
addb
pop
adcl
mov
popa
sbb
nop
or
mov
pushf
repz
stos
and
scas
daa
addr16
push
test
iret
xchg
ja
jne
scas
sub
push
xor
mov
pop
frstor
add
mov
scas
inc
pop
leave
in
dec
or
add
icebp
inc
mov
jecxz
out
outsl
arpl
cmp
fwait
pop
mov
imul
xchg
in
and
sub
or
lret
or
test
shll
in
fstl
cmc
sti
shlb
fbld
inc
and
stos
push
aaa
iret
xor
sbb
les
or
jnp
addb
repz
jno
shr
js
loope
cld
fildll
cmp
js
addl
mov
jle
xor
sub
iret
lret
test
int
cmp
pop
push
push
lret
hlt
scas
int3
jge
aam
jae
jne
jae
fsubs
cmp
push
cltd
mov
out
and
data16
rcrl
loope
sti
jg
push
out
push
xchg
popa
pop
dec
push
daa
cld
int
xchg
sarb
xchg
push
fbstp
je
movsl
clc
xchg
pop
dec
cmp
mov
aam
int3
nop
jmp
js
xor
sbb
popf
sub
pop
sub
inc
dec
fsubp
xor
rcl
nop
orl
mov
push
testl
adc
ret
aas
fcmovnbe
cli
cs
jmp
mov
out
xor
xchg
lret
ret
cmpsl
mov
out
xchg
jo
fsubs
fmuls
mov
shlb
notb
sub
adc
jnp
push
pop
js
dec
mov
pop
and
daa
into
or
inc
jmp
shld
outsb
mov
stc
xor
mov
lret
aad
loope
ja
sbb
cmpsl
movsb
sub
popa
push
inc
inc
cmpsl
daa
shr
mov
fldl
iret
bound
rol
std
shl
in
inc
xchg
jns
push
fbstp
xchg
dec
repnz
add
jmp
xchg
pop
adc
fucomp
loopne
jmp
sbb
outsl
mov
jmp
ljmp
xlat
loope
pusha
aaa
ret
stos
mov
cmp
insb
and
movsb
jle
sub
sub
mov
cmp
dec
cmp
dec
into
jb
decb
pop
mov
das
popf
xor
inc
jg
xorb
mov
insb
in
clc
push
push
mov
aas
sbbl
mov
pop
aad
xchg
add
subl
mov
jae
xchg
iret
xor
add
xor
jmp
jbe
mov
pushf
lret
or
outsl
loop
push
jecxz
mov
cld
cmp
or
mov
popa
jno
in
pop
daa
pop
scas
or
bswap
jle
jecxz
pop
imul
dec
ficompl
test
cmp
out
mov
mov
lods
ss
push
cmp
xchg
imul
pushf
movsl
dec
jae
sub
lret
and
ret
cli
add
or
cs
push
shufps
movsl
ljmp
mov
sub
test
movsb
mov
je
lods
scas
cmp
je
and
mov
sbb
int3
add
sbb
xor
in
orl
ljmp
xchg
mov
idivl
imul
mov
sub
aas
jno
or
mov
fbstp
fistpll
movsb
mov
inc
mov
addr16
mov
call
mov
out
ret
sti
call
sub
xchg
into
imul
lds
inc
push
pop
enter
lret
mov
jns
popf
push
es
mov
dec
imul
bound
push
jmp
sarb
fmul
ret
in
push
pop
int3
cmp
sub
cmp
inc
cmpsl
mov
daa
fdivrl
xchg
jl
sbb
mov
insl
movsb
idivb
sub
mov
pop
fidivl
lcall
sub
sub
jmp
cs
lds
push
pusha
ja
mov
push
and
fbstp
and
fsubrs
or
loop
inc
testb
loope
out
out
push
je
stos
lea
sbb
aad
push
lcall
mov
pop
add
fstps
jl
test
mov
push
icebp
mov
daa
mov
ret
add
mov
std
xor
repnz
insb
xor
imul
in
add
jge
test
pop
push
in
pop
je
lret
xor
aad
fadds
add
in
adc
inc
sbbl
lcall
ret
sub
push
jmp
cli
paddsb
pop
ficomps
add
mov
cmp
sbb
fisubrl
dec
sub
mov
out
sbb
fdivp
adc
popa
dec
mov
pop
cmp
xchg
cmp
sar
fcmovne
mov
and
ss
or
or
addb
dec
sarl
sbb
adc
insb
cmpsl
jg
fisubl
or
lret
jo
lret
mov
sbb
or
int
sbb
loop
push
int
push
fisubrs
pop
jb
test
sub
mov
rclb
mov
dec
push
jb
jo
push
push
dec
mov
sbb
nop
jns
fs
mov
xchg
xchg
das
sbb
pop
cmp
push
test
or
sub
xchg
cwtl
push
negl
sub
jne
pop
aaa
jmp
stos
inc
add
cwtl
imul
jg
mov
loope
cmp
xor
mov
imul
dec
aas
jl
sub
imul
outsl
jecxz
lods
loopne
or
cmp
adc
ficompl
iret
or
or
das
and
test
add
addr16
aas
rcrb
repnz
jbe
cmpsl
fistpll
lods
xor
xchg
inc
psadbw
in
sbb
mov
or
or
jnp
loopne
out
lea
sbb
push
xchg
ja
lea
mov
andb
jb
lret
scas
out
lock
pushf
cmp
xchg
int3
pop
cmp
in
mov
xchg
lret
lods
movb
pop
jl
push
imul
or
fsts
scas
in
sahf
stos
or
sbb
xchg
cmp
inc
dec
cmpsb
pop
or
jge
xlat
adc
push
sbb
pop
loopne
loopne
jne
dec
lahf
adcl
loop
add
or
sarl
mov
lock
xor
mov
inc
cmp
jp
movsb
movsb
aam
push
rcll
push
pop
sbb
adc
adc
xchg
push
cmovle
test
jb
cltd
fwait
sbb
push
xchg
iret
dec
mov
or
jl
repnz
mov
int3
pop
push
repz
dec
push
xchg
and
pop
sbb
cmpsb
mov
lahf
cmp
es
das
das
mov
pop
lret
and
out
or
push
sub
xchg
pop
xor
or
inc
add
and
jno
mov
arpl
inc
and
mov
push
push
cwtl
in
pop
xor
rorl
int
lods
pop
push
pusha
push
add
push
es
out
popf
jnp
insl
ror
bndldx
cli
add
leave
mov
bound
lahf
mov
jae
test
or
in
xorl
mov
mov
sbb
or
nop
aad
lcall
mov
icebp
aas
mov
lea
hlt
xlat
jno
dec
icebp
in
rol
cmpsb
incb
pop
test
bound
shlb
adc
push
out
cmp
out
xchg
sarl
stos
add
in
adc
mov
aas
adc
fidivs
fwait
shl
jg
add
out
mov
clc
aam
push
adc
ljmp
sbb
push
ds
jnp
inc
clc
pop
pop
push
xor
xchg
dec
jbe
mov
cmp
idivb
iret
test
loop
stos
pop
push
mov
lea
or
orl
and
mov
push
jl
sbb
xchg
jge
scas
pop
inc
into
pusha
enter
pop
adc
jge
inc
sbb
subb
jecxz
push
jb
filds
fistps
pop
cmpl
mov
sub
lea
cwtl
in
mov
xor
cmpsl
sub
lret
insb
push
dec
shl
call
xchg
cmp
test
es
jbe
pop
scas
stos
adc
push
mov
movsl
nop
fdivs
adc
jnp
sub
push
aas
mov
movsl
mov
lock
loope
lods
xor
push
adc
iret
xor
pop
sbb
xchg
mov
push
sysret
push
mov
fwait
push
ds
jnp
shlb
mov
xorb
les
mov
negb
dec
ja
push
mov
inc
inc
dec
imul
cmp
xor
lods
pop
sub
dec
ja
jne
pushf
or
in
jae
std
hlt
or
jmp
dec
cmc
xchg
and
mov
mov
call
mov
jecxz
fwait
lds
lret
pop
xlat
jbe
inc
les
push
xchg
mov
and
xlat
push
sti
mov
sbb
push
and
scas
and
mov
cmp
adc
mov
es
adc
jmp
or
ficoms
or
adc
push
push
jbe
inc
and
and
push
imul
and
mov
addr16
insb
jo
mov
adc
addl
aas
dec
add
push
xchg
popa
stc
inc
inc
es
lea
lock
dec
popf
mov
call
xor
mov
sahf
imul
push
orl
and
fwait
nop
js
imul
test
inc
repz
lahf
decb
push
pop
jns
orb
mov
dec
jns
fnstcw
pop
and
ss
mov
dec
push
xor
subl
fwait
les
mov
mul
sti
rcrl
testl
jp
mov
add
dec
xchg
push
cmpsl
sub
sbb
cmp
scas
daa
sbb
fcomp
sub
cmpsl
adc
aad
cld
outsb
and
roll
testl
pop
loop
test
or
div
dec
outsb
sbb
push
sbb
mov
push
stc
jg
jecxz
jmp
add
sbb
mov
and
pop
fbld
pop
insl
ljmp
fbld
arpl
jmp
pop
and
dec
push
imul
push
rcrb
jb
movsb
push
shr
arpl
test
add
add
cli
cmp
mov
xchg
push
xchg
jns
jg
inc
or
mov
sub
ret
jl
or
inc
cmp
or
xor
out
icebp
xor
es
and
jl
js
test
mov
xchg
arpl
arpl
jns
xchg
cmc
popf
pop
pop
cmpsb
xchg
es
pop
test
sbb
lock
push
stc
fisubrs
jecxz
sarb
xchg
mov
aaa
outsb
mov
xchg
icebp
or
sbb
mov
idivl
or
loope
xchg
aad
fdivrs
pop
sbb
jnp
inc
lock
aaa
in
imul
sbb
lods
inc
xchg
sbb
and
xchg
rolb
xchg
mov
inc
test
ret
out
insb
inc
mov
ret
mov
and
push
clc
jmp
inc
cmp
inc
mov
jge
pop
jnp
mov
add
enter
pop
scas
gs
inc
pop
scas
insb
fucompp
or
xlat
pop
hlt
dec
cmp
mov
pop
shll
daa
popf
sbb
mov
pop
push
hlt
jmp
sub
jo
mov
pop
in
xor
jno
lock
sub
and
mov
sbb
popf
sti
das
inc
cmpsl
addr16
call
push
pop
adc
cmp
int
push
push
imul
pop
mov
cld
pop
lock
cli
adcb
ds
stc
negl
jg
out
jecxz
cmp
sub
test
mov
jl
pop
pop
bnd
xchg
and
outsl
push
sub
insb
loopne
jge
and
inc
inc
mov
jecxz
sub
popf
dec
loope
out
or
test
ret
jge
cmp
pop
mov
jmp
and
xchg
lods
xor
lods
enter
cmc
insl
cltd
inc
xor
sbb
mov
loopne
test
sbb
call
in
xchg
cmpsb
sub
ret
lea
xchg
xor
adc
or
insl
je
xchg
in
pushf
je
xor
fcoms
jo
mov
out
movsb
xchg
imul
inc
pop
sbb
xchg
out
and
inc
loopne
les
test
mov
jne
lret
mov
add
lret
movsb
push
mov
repnz
xchg
ds
pop
mov
or
mov
std
clc
mov
mov
sbb
adc
mov
jle
xacquire
and
addr16
out
subl
jg
mov
mov
ficomps
inc
in
lods
stc
int3
and
xchg
fsubl
cmpsl
adc
xchg
out
or
clc
test
pushf
sbb
mov
sbb
push
lret
dec
bound
call
lock
movsl
stos
pop
out
popl
and
js
pushf
pop
sbb
xchg
cmpsb
xor
fwait
lea
or
add
push
adc
lahf
mov
jp
xchg
mov
add
fnsave
filds
xchg
aaa
inc
outsl
les
lret
mov
pop
fisttpl
icebp
xlat
cmp
lds
and
loopne
std
or
adc
xchg
push
ror
daa
aas
pop
mov
cli
test
rcr
in
sbb
inc
push
scas
out
mov
clc
fs
sbb
in
or
mov
sbb
mov
xchg
xor
aas
in
mov
sub
mov
ret
cwtl
stos
sbb
testl
xlat
mov
popf
lcall
xchg
mov
mov
jp
je
xor
insb
mov
sub
dec
je
andl
cmp
mov
insl
enter
or
mov
cli
mov
xor
jle
repnz
ret
aam
aad
jo
cmp
lret
ret
xchg
lods
mov
sbb
mov
xchg
scas
xchg
push
icebp
cmp
aam
bound
push
jl
repnz
mov
and
mov
or
xor
jg
xchg
movsl
iret
and
xchg
sbbb
adc
dec
ljmp
xor
repz
cmpsb
push
imul
mov
test
sbbb
dec
add
push
cld
stos
jge
mov
inc
pusha
sub
jo
adc
bound
gs
shll
jno
and
scas
mov
lea
fnsave
jae
iret
int3
rolb
sahf
inc
jae
daa
sub
mov
sahf
add
sbb
orb
aaa
sub
imul
aad
dec
dec
daa
pusha
enter
aas
xchg
xchg
dec
out
inc
add
pop
mov
fdiv
dec
ffree
sahf
fcoml
inc
mov
test
xchg
bound
xchg
xchg
popa
push
or
or
fdivs
mov
mov
mov
mov
pop
movsb
inc
push
fwait
aas
mov
xchg
cmp
out
ds
jmp
jnp
loopne
inc
dec
fcmovbe
sahf
popa
negl
stos
mov
jg
test
pop
adc
sbb
cmp
cmpsb
push
jnp
jae
jnp
mov
inc
push
repnz
das
xor
jb
std
dec
jae
push
ljmp
adc
ficoml
sub
lock
outsb
faddl
pop
out
sbb
stos
lock
cmp
xchg
push
out
in
clc
and
mov
push
pop
jmp
or
add
ret
sbb
repnz
daa
adc
sub
mov
cmp
test
fistpl
ja
cli
push
sub
fwait
lret
stos
sbb
dec
pop
jmp
addb
mov
out
shr
ret
pop
ja
sub
fcoms
adc
aas
sub
jnp
jle
push
sub
in
adc
call
neg
cmp
jp
imul
cmc
cli
notl
mov
stos
push
xchg
jns
xchg
mov
iret
fdivrl
push
jg
push
add
dec
dec
sub
lods
xor
add
fidivl
scas
int
xor
stos
aas
mov
cmp
mov
push
mov
pushf
shlb
mov
push
pop
lods
push
test
push
lds
cmp
xor
lds
push
out
dec
out
jl
add
nop
inc
add
xor
sub
in
or
jmp
cmp
or
fs
xchg
or
jne
fisubrl
jo
inc
outsb
jecxz
add
dec
push
xor
int
mov
or
and
push
imul
push
popa
nop
mov
fsubl
rcl
mov
mov
lret
add
jl
cmp
loop
pushf
or
repnz
mov
icebp
xchg
enter
mov
lahf
jp
test
into
sbb
cmpps
ljmp
inc
pop
mov
adc
dec
cli
lds
pushf
shr
into
lcall
inc
or
dec
mov
cmc
xchg
sahf
rolb
mov
ss
or
mov
popa
rolb
inc
jae
mov
and
mov
int3
lds
scas
push
xchg
xchg
data16
push
adc
movsb
xlat
ret
test
cmp
adc
outsl
call
or
cmp
iret
or
fs
enter
int
rolb
xchg
std
flds
mov
sub
loope
xchg
xchg
nopl
int3
jnp
push
loopne
stos
mov
xor
test
mov
jecxz
or
addr16
inc
lea
jbe
jae
cs
fisttpl
xchg
data16
inc
or
add
mulb
mov
aam
loope
js
dec
test
sbb
outsl
sbb
pop
pop
scas
rcll
xchg
cli
adc
popf
cltd
cmpsl
or
cs
loope
dec
out
or
jmp
fucomip
ja
lcall
popa
adcb
sub
jne
mov
sbb
fwait
jle
add
and
mov
lods
sbb
jl
js
xor
sbb
gs
jmp
jo
cmp
sub
cmpsl
inc
out
sub
cmp
cli
int3
adc
pop
cmpsb
call
es
cmpsl
inc
xor
or
mov
sbb
pop
jg
sub
pusha
or
int
inc
mov
cmp
rcll
pop
sti
fstps
jecxz
dec
jecxz
pop
ja
mov
lret
iret
dec
fildll
icebp
jbe
and
xchg
arpl
lret
popf
jbe
in
adc
outsb
bound
clc
mov
and
pop
orb
out
mov
in
inc
aas
lea
mov
jae
adc
sahf
pop
xchg
loope
test
insl
inc
sub
or
lods
sub
mov
inc
mov
push
fisubrl
dec
testl
hlt
cld
shlb
jne
iret
ret
roll
js,pn
jmp
mov
and
shr
clc
adc
fldenv
mov
out
add
jl
subl
shll
fsubrs
adc
mov
outsl
test
je
pop
cmp
add
cwtl
imul
nop
and
inc
mov
int
mov
pop
cli
hlt
pop
sub
loop
outsb
mov
mov
jns
sub
loop
jle
jmp
push
add
or
test
cmp
arpl
imul
test
loope
cli
xchg
movsl
push
mov
adc
mov
jns
stos
jbe
adc
pushf
mov
shll
mov
add
mov
rorb
mov
mov
fsubr
dec
jbe
pushl
insb
add
rcrl
jno
daa
ret
popf
add
xchg
adc
sti
test
mov
icebp
jl
xor
stos
adc
xchg
xorl
imul
jge
adc
pextrw
lods
test
xor
xchg
int
cld
hlt
cs
cmpsl
repz
cli
mov
pop
pushf
mov
ds
or
push
fwait
mov
adc
sub
cltd
pop
pop
xchg
inc
mov
in
shll
cmp
and
fstpl
adc
lcall
add
mull
cmc
inc
mov
lahf
push
xchg
sbb
stos
cld
cld
into
or
in
mov
xchg
pop
mov
aad
lret
sub
ja
pop
fcomps
mov
lret
jmp
shll
xor
mov
push
andnps
movsl
adc
mov
and
xor
adc
add
movsl
rep
or
popa
xchg
mov
cwtl
jbe
cmp
mov
push
scas
mov
ret
fmull
shr
shlb
sub
or
sahf
pop
xchg
jg
outsb
pop
pop
in
dec
jae
dec
mov
ds
es
nop
xor
jns
lds
sbb
fstps
push
mov
pop
sbb
lock
and
add
je
out
leave
add
stos
mov
iret
test
sub
aam
adc
mov
cmp
cmp
lock
inc
mov
adc
pop
aas
mov
pop
fldl
ret
xchg
scas
sub
dec
pop
sahf
sarl
cli
sub
shl
data16
fnstcw
fs
cmp
movsb
inc
pusha
or
shll
cmpl
jnp
xor
hlt
imul
out
sbb
dec
push
jo
aaa
scas
inc
adcb
sbb
inc
adc
mov
lds
jae
addr16
mov
mov
popa
repnz
ficompl
mov
int
call
das
dec
js
addr16
push
or
and
pop
lret
and
add
xlat
dec
xor
fists
cmp
cwtl
mov
cmc
jge
aam
cmp
aam
xchg
adc
jae
add
inc
mov
sbb
scas
addb
pop
pop
pop
aam
mov
pusha
test
jl
and
jns
stos
cmpsl
out
ret
adc
sub
repz
insb
add
fldenv
pop
test
pop
xchg
or
ljmp
mov
and
pop
cmp
mov
lret
mov
mov
daa
pop
jne
inc
add
cmp
xor
jge
jo
jns
sub
push
mov
mov
hlt
adc
les
jae
roll
sahf
int
imulb
lock
fs
jg
xchg
arpl
fmuls
sub
mov
jecxz
in
cmp
mov
in
cmc
inc
test
dec
fs
xchg
adcb
dec
xor
mov
jns
push
add
pop
bound
sub
or
lcall
ds
pop
mov
push
outsb
cmp
lcall
mov
jno
pop
xchg
push
mov
inc
cs
scas
push
adc
aaa
imul
inc
pop
adc
and
imul
xlat
jge
push
pop
inc
jg
sub
adc
jne
cld
frstor
sub
push
push
subl
fistpl
xor
gs
fisttps
inc
xorb
aam
cmpsb
out
hlt
dec
ret
mov
adc
sti
hlt
icebp
mov
filds
pop
xor
dec
push
shlb
jbe
repnz
in
or
scas
inc
inc
inc
dec
lods
push
or
loop
add
mov
sub
dec
mov
xlat
add
xchg
pop
mov
jb
sbb
mov
lcall
pop
cmp
repz
lock
jmp
fdivr
jo
mov
cmp
xor
cmp
pop
or
inc
xchg
jg
mov
lds
dec
cmp
mov
popa
xchg
xchg
imul
inc
arpl
lds
xor
jmp
sti
adc
xchg
sub
xor
notb
push
testb
shll
push
lea
int
sub
jns
adc
xor
push
int3
bound
add
xor
insb
cld
jne
pop
mov
call
jbe
xchg
mov
sub
mov
bound
dec
push
scas
pop
ja
push
xlat
lret
fists
je
aad
into
fsubs
jno
add
daa
xchg
bound
sub
adc
ret
cmp
and
out
jl
dec
call
ljmp
int3
addr16
stos
push
push
cmp
movsl
push
lods
ret
loope
pop
in
ss
fstpt
test
pop
ljmp
test
mov
pop
arpl
imul
scas
mov
and
adcb
jmp
and
mov
or
loope
adc
and
rcll
in
push
push
ret
cli
lock
mov
cmpsb
sti
sub
ja
test
cwtl
push
xor
imul
pop
les
js
push
cwtl
mov
cmp
jecxz
adc
cwtl
out
cmp
clc
dec
fidivl
stos
andb
scas
pop
fbld
out
add
repnz
mov
sti
cmpsl
hlt
dec
lcall
stos
mov
scas
es
bound
jno
jno
add
xor
out
ss
in
sub
pop
scas
into
xchg
lahf
add
cld
dec
std
cli
mov
outsl
cmpsb
sbb
sahf
sbb
pop
movsb
repnz
bnd
clc
add
cwtl
sbb
sbb
jmp
hlt
lcall
ljmp
jb
ret
sub
dec
addb
aad
mov
stos
imul
jl
pushf
hlt
cmpsb
cld
orb
mov
push
and
mov
rclb
stos
xchg
repz
push
inc
mov
push
js
jmp
dec
cli
pusha
push
cld
leave
inc
ficompl
testb
test
mov
negb
push
decl
push
adc
stc
add
subb
dec
mov
mov
or
inc
cmp
jae
cld
push
lea
ljmp
or
fistpl
xchg
xlat
loopne
imulb
mov
or
add
cmp
leave
or
add
sbb
xchg
stos
pop
and
jecxz
aas
dec
std
adc
faddp
sub
or
sbb
pop
dec
mov
mov
xchg
dec
hlt
dec
ret
fwait
loope
mov
push
jnp
out
mov
fwait
cli
sahf
orb
adc
mov
aad
and
push
lret
inc
enter
bnd
mov
inc
aad
movsl
inc
cmp
inc
inc
loopne
or
cmp
add
dec
sti
loop
clc
jg
push
or
imul
shrb
loopne
push
ja
mov
movsb
cmp
sub
lea
sub
sbb
cmp
fidivrl
les
lods
cmc
stos
push
andb
sub
push
out
shll
cmp
jle
sub
pop
mov
movsl
or
sub
sbb
inc
loopne
jge
push
jne
jl
mov
loopne
xchg
or
scas
sbb
mov
aad
adc
push
iret
adc
inc
rcl
call
es
in
movsl
dec
sbb
sub
mov
lock
pop
push
pop
ret
jno
jle
lods
mov
ljmp
sub
mov
xor
push
psrlq
rclb
loop
mov
sbb
das
mov
outsl
push
lcall
jl
sub
pop
in
sub
cli
mov
xchg
or
or
loopne
aas
iret
inc
jne
sbb
cwtl
daa
mov
cmp
or
mov
repnz
stos
sub
sbb
pop
push
call
dec
sub
inc
cmp
push
push
sub
xchg
mov
aad
xchg
cmp
xchg
pop
inc
mov
mov
ds
add
mov
rcll
sub
dec
sub
push
addr16
mov
test
in
push
jle
subl
and
add
sbb
fdivr
cmp
xchg
sub
imul
lods
insl
test
inc
imul
mov
pop
into
mov
pop
int
pop
in
data16
lret
test
and
rcrl
mov
mov
mov
mov
rclb
push
rorl
fiadds
cwtl
push
and
test
mov
mov
clc
int3
sub
cmc
rcr
gs
rolb
jmp
xchg
sub
xchg
add
xchg
add
sti
cmp
fsubrs
adc
icebp
pushf
cmc
outsb
cmc
add
dec
xor
in
xchg
mov
sbb
xchg
mov
mov
xor
lock
mov
xchg
pop
repz
lret
xchg
xchg
mov
movl
jmp
mov
inc
and
pop
popa
mov
mov
shlb
sbb
push
push
dec
xchg
insl
xor
add
out
or
movsb
test
inc
adc
push
pop
xchg
push
xchg
xchg
cmp
mov
out
js
adc
lcall
lret
sbb
call
in
loopne
mov
shlb
daa
inc
das
cmp
cs
push
mov
repz
arpl
fmul
leave
or
jne
mov
pop
add
xchg
inc
mov
call
adc
sbb
rcrb
dec
inc
xchg
ret
add
and
push
mov
push
fcoms
rol
lds
pop
inc
hlt
and
out
int
fcmovb
xor
inc
pushf
sub
shrl
sbb
lret
cmp
cmc
push
int3
dec
jle
sub
cwtl
cmpsl
dec
sbb
inc
scas
mov
fisttpll
outsl
add
pop
and
push
fdivrs
push
out
xor
pop
movsl
and
divb
stos
sbb
adcb
icebp
xlat
adc
loope
xchg
arpl
dec
fstp
sahf
jns
fbld
pop
sub
ret
or
imul
movsl
push
jp
mov
stos
cmc
mov
movsl
and
or
mov
mov
shll
sub
arpl
sbb
and
or
out
adc
sub
mov
out
or
sbb
mov
pop
sarb
stos
inc
movsb
aaa
ljmp
xor
and
movsb
xchg
jg
push
outsb
jp
es
jge
bound
hlt
in
pop
dec
jnp
xchg
fldt
ljmp
add
dec
insb
orb
mov
stos
pusha
jg
outsb
ret
pop
pushf
pop
xor
cmp
outsl
outsl
sub
test
lods
cli
stos
jno
mov
stc
dec
or
sub
adc
mov
add
jne
pop
mov
into
adc
rclb
nop
mov
or
stc
fwait
cltd
dec
xor
mov
and
push
dec
rorb
out
xorb
mov
pop
fisubs
pop
in
inc
push
or
fwait
leave
and
repnz
sub
es
cmpsl
aad
or
jecxz
dec
stc
cs
movb
sbb
aas
fs
jno
dec
stos
iret
mov
jns
orl
popa
fwait
jnp
sbb
adc
push
cs
inc
imul
and
movsb
shrb
xor
inc
out
inc
dec
and
and
mov
fmul
adc
in
ret
lret
mov
xlat
bound
hlt
jns
daa
jbe
xchg
leave
xchg
imul
fwait
push
pop
lret
aaa
call
add
jecxz
mov
xchg
sbb
push
mov
adc
dec
sar
inc
sbb
push
pop
sbb
xor
ret
cmpsl
xchg
cli
mov
cmpsb
cmpsb
or
in
pop
sbb
mov
or
inc
sbb
out
add
mov
mov
sub
pop
clc
subb
daa
xor
mov
and
jecxz
lret
test
jmp
jno
loop
adc
add
ljmp
push
fcompl
mov
arpl
or
sub
repz
pop
insl
or
pop
adc
hlt
cwtl
push
push
out
testl
rorl
sub
adcb
loope
jne
cmpsb
test
cmpsb
push
insl
call
cmp
inc
rcl
add
test
add
lret
add
sub
inc
jl
mov
ret
je
lret
dec
test
mov
jns
and
out
int
sub
inc
cmp
adc
std
repz
int
cmp
out
out
loop
in
fisubl
pop
jns
loope
pop
pushf
xchg
or
ja
in
outsb
movsl
cmp
and
and
jns
sbb
hlt
push
push
repz
xchg
daa
lods
sbb
sbb
test
pusha
push
xchg
mov
dec
out
call
lcall
jns
dec
mov
jno
mov
jb
fsubs
mov
add
or
dec
add
mov
fmuls
inc
and
das
adc
xor
adc
mov
sub
xchg
lock
xchg
out
adcl
add
faddl
bound
push
bound
movsl
sbb
mov
mov
and
mov
or
stc
xchg
inc
orb
add
arpl
or
mov
loope
mov
js
pushf
lds
jp
loopne
aam
jb
sbb
mov
jae
mov
addl
xlat
std
mov
out
mov
mov
mov
jg
cld
sti
push
ss
stos
lret
vdivpd
sub
out
dec
inc
mov
mov
pusha
insb
aas
popa
mov
js
stos
adc
jecxz,pt
stc
and
loop
into
cmpb
pop
popf
subb
xchg
pop
call
icebp
mov
xchg
pop
frstor
xchg
mov
xchg
jb
sbb
xlat
imul
push
repnz
dec
and
inc
mov
xor
adc
push
lods
mov
xchg
dec
mov
xchg
lahf
and
mov
mov
xchg
mov
gs
cli
mov
icebp
iret
outsl
inc
mov
cmp
mov
mov
lcall
dec
push
lret
fisttpl
aaa
sub
ret
cltd
xor
xor
jo
data16
imul
test
sbb
sbb
xor
into
out
and
in
sbbl
lcall
and
dec
mov
hlt
out
imul
loopne
xor
cmc
jmp
mov
outsl
or
pop
out
xchg
xchg
cld
daa
jmp
outsb
lahf
bound
inc
adc
push
sahf
js
lds
ret
sbb
sbb
adc
push
int
push
dec
xchg
push
icebp
outsl
fbld
and
outsl
rcrl
push
sub
sub
xchg
jae
int3
push
sarl
xlat
xchg
rcrl
jp
icebp
sub
mov
push
out
dec
stc
sub
cmpb
repz
push
dec
test
jg
loopne
cs
shll
sahf
jbe
stc
jnp
lret
mov
sbb
int
daa
in
cld
pop
push
mov
or
outsl
pop
xchg
mov
or
out
sbb
cwtl
icebp
pop
imulb
adc
push
cmc
andl
rcl
hlt
ds
pop
fwait
cmp
fcoms
pop
mov
and
cmp
add
leave
sbb
jg
add
push
data16
test
push
test
inc
aam
out
adc
push
push
fs
jle
ljmp
push
sahf
mov
push
push
xor
xor
out
xor
ds
xchg
ret
mov
add
mov
adc
or
dec
jnp
aad
sbb
dec
les
das
jl
xor
clc
inc
sarl
adc
jle
mov
lods
rcr
inc
pop
inc
sub
outsl
inc
jae
ss
and
mov
mov
outsl
mov
xchg
addr16
imul
loope
push
movsb
sub
test
call
mov
sub
out
mov
repz
add
pop
mov
inc
testb
ljmp
fsubrs
mov
xlat
movsl
psadbw
ret
mov
repnz
ficomps
imul
jge
inc
xor
sbb
popf
mov
jno
add
pop
shll
push
inc
arpl
xchg
lock
inc
pop
sub
dec
dec
add
imul
das
xor
mov
sahf
out
iret
cmpsl
loopne
dec
fidivs
sub
mov
pop
in
push
call
jge
insl
jmp
push
in
lds
mov
jne
xchg
mov
aam
add
xchg
sbb
pop
sub
stos
scas
scas
inc
xor
int3
sbbl
outsl
or
fucom
sahf
inc
pop
and
je
or
adcb
sbb
mov
xor
jbe
pop
add
mov
aam
mov
cmp
mov
lcall
arpl
add
mov
ret
inc
out
mov
rorl
add
mov
aad
insb
dec
lahf
push
sbb
aas
lret
lret
into
test
push
jp
out
or
loop
dec
inc
push
mov
orb
stos
jbe
xor
or
ret
cli
mov
movsl
aas
add
jecxz
xor
mov
mov
or
or
adc
mov
lds
jae
mov
push
imul
and
pushf
push
je
mov
or
mov
scas
iret
jl
push
subb
fdiv
xchg
std
mov
filds
mov
xor
and
add
out
jp
dec
mov
mov
mov
test
dec
dec
add
into
in
dec
and
inc
xchg
stos
mov
mov
mov
jge
jmp
jge
or
xchg
out
pusha
or
xlat
outsb
xchg
mov
sbb
movsb
or
imul
xchg
and
inc
fsubrl
add
movsb
pop
mov
outsl
in
imul
std
mov
subps
jecxz
leave
bound
xchg
dec
mov
push
inc
rol
xchg
xchg
inc
and
addb
scas
and
stos
scas
lahf
cmp
xor
and
xchg
jmp
cmp
test
jl
push
pushf
fstpt
push
cld
ror
push
clc
fidivs
jae
rol
iret
insl
push
inc
dec
jl
fwait
cltd
jp
pop
add
mov
insb
int3
pop
adc
push
movsl
jl
imul
mov
mov
xchg
jns
xchg
or
es
dec
mov
test
xor
ret
dec
dec
adc
mov
add
aad
adc
inc
fstl
fldenv
jae
xor
mov
dec
pop
add
mov
mov
and
sub
cmpsb
cmp
scas
mov
std
insl
sub
in
xchg
xchg
dec
jmp
xor
cmp
xchg
sub
dec
xchg
or
les
movsl
stos
pop
add
stos
pop
push
pop
ljmp
pop
arpl
scas
cmpsb
adc
jmp
jl
xchg
sub
ret
loopne
and
and
mov
mov
jmp
mov
fiadds
dec
mov
push
int
popa
cmp
push
daa
rorl
pop
add
imul
inc
xchg
jbe
shr
fld1
cmpb
mov
jp
jb
mov
add
sbb
ds
rolb
or
cmp
sbb
ret
jecxz
jne
call
cli
aad
roll
es
push
ljmp
scas
push
inc
lret
mov
sbb
mov
jae
push
jmp
cs
jae
dec
xchg
out
test
jl
insb
ds
fstpl
add
push
xchg
fsubl
cmpl
jnp
mov
ljmp
test
rcrl
and
sbb
xor
lret
mov
xchg
in
fcoml
jne
int3
mov
arpl
cmp
cmpsl
lods
shll
repnz
adc
xchg
movsl
pop
mov
dec
mov
mov
xor
jne
sbb
push
loopne
cld
lea
inc
dec
push
xor
jle
aad
mov
xchg
or
ss
in
cmp
ljmp
push
sahf
jle
xlat
js
dec
ret
pop
lahf
ljmp
ret
test
or
pop
imul
out
std
rolb
push
xor
jmp
sub
ret
ss
pop
jne
aad
cmp
fimull
shll
shll
lahf
inc
mov
data16
lret
mov
testb
shr
clc
out
push
xchg
fld
adc
mov
xor
inc
push
or
xchg
arpl
xor
sub
pop
xchg
sahf
add
cmpb
and
nop
mov
inc
in
movsl
hlt
in
xchg
sbb
or
cld
cmp
jecxz
mov
mov
jo
je
xchg
movsb
in
pop
sub
cmp
jb
xchg
xlat
pop
iret
mov
js
roll
lret
lods
jb
cmpsb
cld
sub
in
adc
adc
int
enter
imul
mov
lahf
xchg
fldl
test
out
cmp
push
jecxz
jg
mov
jne
adcl
xchg
test
cli
loope
inc
lds
imul
sbb
call
shlb
xchg
mov
mov
pop
lahf
cmp
or
push
arpl
enter
into
cs
arpl
pop
fst
scas
xchg
rol
dec
in
repz
ret
idivl
adc
lods
adc
movsl
and
add
iret
rol
cmp
push
or
pushf
push
and
mov
test
dec
push
pop
fmull
fcompl
xchg
cwtl
xor
inc
test
fimull
hlt
and
subb
sub
mov
xchg
mov
jmp
sbb
xor
imul
mov
test
push
lcall
decl
into
out
cmpsb
into
xor
xlat
sbb
mov
das
aaa
inc
lret
push
out
mov
or
fs
or
mov
mov
movsl
adc
push
xorb
sbb
neg
call
in
test
push
mov
pop
pop
add
enter
ret
ljmp
pusha
ficomps
movsb
repz
cltd
inc
mov
jle
ds
mov
lret
out
dec
cmp
rclb
les
jge
xor
test
sbb
bnd
xchg
fists
lret
insl
test
sarb
arpl
push
push
push
stos
jle
loope
cs
cmp
xchg
add
inc
subb
and
aad
add
xor
push
je
in
pop
pop
cmp
add
inc
cmp
lock
mov
sub
push
push
insb
cmp
in
std
xchg
cltd
mov
mov
rep
xchg
pop
outsb
nop
fs
and
sub
push
test
aaa
pop
mov
xor
pop
mov
in
mov
clc
xlat
cs
out
sahf
jl
dec
xor
mov
shrl
xlat
mov
jb
pop
sbb
pop
pop
mov
dec
jno
fwait
and
sub
loopne
insb
repz
ja
in
xchg
xor
pop
xchg
lods
dec
mov
hlt
mov
iret
sub
pop
clc
aaa
cli
pop
jl
sub
push
sbb
popa
test
mov
xor
jge
cmpl
mov
inc
loop
clc
adcb
fsubl
adc
inc
xor
adc
cli
mov
iret
sub
or
sbb
ss
mov
dec
iret
mov
cmp
pop
adc
call
push
xor
fcoms
adc
push
into
xor
or
sub
cmp
mov
add
imul
addr16
jb
mov
shll
call
mov
iret
iret
push
lock
or
fnsave
mov
mov
or
lods
jnp
lret
sbb
dec
mov
aaa
cmp
jns
push
xor
push
sub
and
fsubs
lds
xor
popa
pushf
imul
pop
mov
arpl
inc
rol
jbe
fidivrl
mov
and
cmpl
les
mov
lcall
fs
icebp
xchg
andl
dec
ja
cld
dec
outsl
test
popf
mov
sub
fnstenv
mov
xor
push
sbb
clc
hlt
jae
and
aas
push
pop
int
nop
and
dec
daa
movsl
repz
mov
outsb
das
xchg
sbb
push
enter
cmp
aam
mov
xchg
push
push
popa
data16
shlb
aad
js
out
sub
or
xchg
adc
fldcw
outsl
loopne
or
inc
loop
xchg
fsubrl
and
or
mov
mov
in
mov
into
push
stos
leave
jl
sbb
cmp
mov
add
out
js
or
cli
lea
jb
dec
xchg
sbb
sbb
fs
mov
mov
daa
js
adc
insb
push
sbb
cmp
test
popf
sbb
mov
in
pop
js
cmp
mov
pop
test
cmp
gs
pop
fwait
test
or
xchg
sub
add
out
jne
adc
mov
std
in
in
insb
inc
mov
push
iret
push
icebp
pextrw
and
pop
mov
rcrl
int3
int3
cmp
loope
xchg
mov
xchg
adc
adc
stos
outsb
xchg
sbb
popf
xor
ret
shrl
cmc
mov
aad
inc
or
dec
out
lret
pop
repz
inc
sahf
imul
or
dec
xor
decb
push
cmp
daa
push
and
aas
add
ja
push
fs
xlat
scas
or
movsl
shll
xor
mov
push
xor
cmp
mov
and
push
gs
arpl
inc
jnp
cmp
push
mov
stos
fsub
jp
scas
mov
fwait
leave
fwait
and
mov
repz
cmp
sub
mov
loope
push
popf
and
push
push
cli
dec
pop
test
sbb
faddl
mov
mov
xchg
data16
add
stos
shlb
in
push
rolb
mov
pop
fadd
jne
in
dec
ja
paddb
mov
push
ss
gs
sbb
jg
add
pop
clc
mov
and
test
or
and
jg
ss
leave
lret
push
lret
fstpt
scas
daa
ja
mov
xor
inc
jecxz
idivl
dec
fucomp
pop
push
out
push
sub
mov
lock
shlb
aaa
ja
fidivs
jno
cmp
je
testl
mov
ja
pop
aad
inc
or
into
and
arpl
icebp
xor
imul
mov
and
xor
movsl
xchg
fisubrl
cmp
divb
inc
pushf
inc
adc
test
jbe
xor
dec
inc
dec
insl
pop
mov
mov
push
mov
popf
pop
jae
inc
test
lock
out
nop
xor
pop
movb
add
sahf
mov
outsl
mov
int3
inc
dec
jecxz
push
jne
jp
pop
bound
lahf
sbb
pop
or
stc
sahf
push
je
push
shrb
xchg
ret
inc
xor
xor
mov
aas
mov
lcall
inc
scas
cmp
add
push
or
rol
rol
xchg
adc
push
cmpsl
call
in
push
cmp
andw
loop
je
xorl
and
test
lea
ret
sub
add
out
ljmp
xchg
outsb
int
pop
sbb
cli
dec
loop
pop
mov
nop
sub
lahf
movsl
addr16
dec
test
mov
jg
push
jmp
test
ds
out
mov
adc
xor
addr16
faddl
stos
add
pop
mov
add
pop
push
inc
add
lods
cmp
fbld
test
out
in
icebp
imul
inc
jl
xchg
orb
pop
mov
push
sbb
std
lock
mov
or
pop
and
test
je
lock
mov
inc
dec
dec
ljmp
inc
xor
jno
or
pop
loope
mov
in
pop
mov
sbb
lahf
and
hlt
stc
and
cmp
sub
es
test
inc
mov
mov
push
cmpsb
shll
fs
and
jae
push
sub
fadd
mov
inc
pop
inc
mov
fmull
fcmovnb
push
fisubrl
sbb
pop
fs
leave
adc
lahf
fcomps
cld
arpl
xlat
push
outsl
pop
jnp
bound
in
jle
inc
dec
cmc
shll
add
add
ljmp
jno
xor
or
pusha
mov
lahf
mov
mov
stc
aaa
mov
xchg
pop
insl
adc
out
popa
cld
movsl
mov
pop
pop
mov
sti
lds
dec
sub
std
push
sbb
push
adc
mov
xor
aam
int3
xchg
inc
and
scas
cmp
jle
pop
add
out
sub
cmp
cmp
push
push
incl
mov
cmp
adc
nop
inc
and
aaa
daa
jmp
sub
js
test
pop
push
cmpsb
mov
sbb
lret
sbb
jnp
mov
xchg
in
test
mov
fmul
push
add
push
test
add
inc
jecxz
dec
xchg
add
incb
sbbl
pop
xor
rol
ljmp
push
mov
imul
adc
xchg
push
smsw
orb
dec
or
push
xchg
and
sti
je
or
push
cld
scas
mov
cmc
jmp
inc
xlat
inc
and
sub
sub
movsb
loope
and
je
push
cltd
repnz
mov
xchg
or
aad
mov
cmp
jbe
and
aam
sub
test
incb
inc
cmp
les
addl
cmp
dec
sub
jo
dec
outsl
loop
cmp
add
mov
orb
xor
es
pushf
in
movsb
popf
js
cmp
jmp
jo
fxch
cs
inc
mov
inc
jbe
mov
cmpsb
adc
out
xchg
shll
jae
fsubrp
js
cwtl
cltd
mov
lods
je
adc
mov
imul
adc
dec
add
pop
frstor
sar
mov
fldt
sbb
jbe
fiaddl
jecxz
inc
es
cmc
scas
movsl
enter
inc
test
cmc
push
push
sub
das
inc
ss
sbbl
jge
js
push
icebp
dec
pop
sarb
pushf
daa
cmp
push
jb
or
test
pop
xchg
xchg
fwait
mov
or
divb
push
mov
inc
fistpll
pop
stc
xchg
mov
push
dec
stc
imul
or
lret
out
xchg
dec
dec
clc
add
sets
xor
loop
repz
push
jl
add
xchg
pushf
sti
inc
out
es
ja
lahf
int3
and
add
aam
mov
mov
das
jnp
icebp
les
cltd
xchg
outsb
into
mov
sub
sbb
out
idiv
mov
jecxz
rorl
fwait
mov
movsb
and
push
iret
stos
je
lret
movsl
xchg
out
xor
mov
ret
xlat
adc
leave
sbb
inc
scas
dec
and
sti
aaa
cld
scas
mov
mov
movsb
adcb
lret
xchg
hlt
lret
jae
out
xor
insl
inc
fbstp
aad
loop
mov
divl
aas
sbb
or
fst
mov
mov
jmp
shll
roll
inc
sbb
inc
mov
sbb
prefetch
jmpw
repz
adc
jne
push
mov
xchg
idiv
imul
bound
dec
or
push
stc
lcall
pusha
jae
shl
xchg
out
xor
mov
ja
mov
adc
fstps
sub
dec
mov
outsl
dec
jmp
stos
cmpsl
das
and
jg
daa
xchg
hlt
cmc
mov
rorl
xchg
insb
stos
mov
xchg
leave
xchg
mull
mov
inc
pop
pop
inc
add
or
insb
xlat
ret
and
dec
movsb
test
shll
jmp
aad
outsl
dec
pop
pop
rcr
adc
clc
nop
daa
js
xchg
test
cmp
cld
aas
mov
sbb
ficomps
les
scas
loopne
pop
cmp
test
jp
pop
pushf
jge
mov
inc
push
ret
cmp
or
fwait
lret
imulb
jns
push
insl
ja
push
int
cmp
leave
stc
jbe
imul
insb
xchg
inc
push
mov
xchg
sub
mov
and
adc
lret
sbb
pop
mov
stc
sub
cmc
push
pop
push
call
loopne
mov
sub
sub
aaa
test
sbb
mov
dec
mov
int3
iret
fmul
fucomp
test
lmsw
into
fst
xor
dec
and
sbb
pop
fsubs
sbb
sbb
cmp
jl
xchg
push
gs
adc
push
or
jmp
leave
shrb
vpshlw
push
cmp
std
add
pop
inc
pop
sub
insb
sub
mov
pop
aad
sarl
daa
push
lods
inc
dec
push
jnp
fwait
imul
pop
and
ficomps
cmp
andl
scas
addr16
mov
aam
loope
std
jg
icebp
jae
xchg
sahf
rclb
sbb
mov
movsb
stos
xchg
mov
mov
addr16
dec
fdivs
pusha
mov
xor
lods
mov
push
ffreep
mov
stos
mov
js
addr16
xchg
mov
cmc
pop
lods
fisttpl
push
into
ret
push
mov
addb
sub
insb
mov
ja
in
inc
push
push
mov
enter
or
sub
xchg
js
jge
xor
int
mov
nop
rol
sub
js
jl
imul
loopne
or
cli
inc
scas
adc
sbb
out
mov
les
dec
cld
out
sub
xchg
popl
int
sahf
xor
dec
mov
out
cmp
jbe
jno
dec
add
lods
and
mov
cmc
jo
mov
cltd
mov
subl
or
xorl
jno
xchg
lods
push
cmp
sub
das
jns
jp
mov
out
push
fimull
adc
in
popa
cmp
and
and
xchg
xchg
jnp
stos
roll
clc
mov
pop
cmp
fdivs
loop
inc
xorb
pop
add
push
sub
mov
mov
fsubrs
stos
mov
stos
push
cmp
pop
push
call
sbb
mov
mov
mov
hlt
inc
cli
inc
ja
aas
fsub
rolb
das
lea
out
lret
cld
mov
jp
and
mov
jle
sbb
idiv
ja
adc
cli
repz
mov
xchg
pop
mov
dec
in
jl
out
test
mov
repz
cwtl
cmpb
push
or
xchg
movsl
inc
xchg
loope
jno
addb
push
cli
ficoms
aaa
movsl
pop
hlt
iret
xchg
inc
sbb
popa
mov
rcll
dec
lret
stc
imul
xchg
int3
mov
out
bound
mov
lock
lret
inc
jecxz
jle
lahf
push
ret
mov
dec
cmp
xcrypt-ofb
cmpsl
outsb
mov
inc
inc
pop
adc
outsb
mov
xchg
pop
into
jns
sbb
xchg
dec
add
mov
repz
int
mov
mov
sbb
xor
mov
ret
out
adc
adc
mov
shrl
ljmp
mov
push
cmp
and
dec
pusha
stc
or
decl
int
lds
inc
xchg
data16
test
mov
out
ljmp
fldenv
jge
xchg
push
into
loopne
lret
and
pop
rcrl
sbb
pop
ret
mov
pcmpgtb
and
shrl
dec
push
jmp
add
dec
sbb
pop
and
add
repz
negb
movsl
ret
aas
dec
xor
lods
adc
inc
sbb
or
enter
sbb
repnz
aad
negb
aad
inc
and
cmp
jecxz
mov
sbb
xchg
rorl
lahf
psrad
add
xlat
ret
jge
or
icebp
dec
xor
mov
shlb
inc
sub
add
mov
loop
shr
sbb
mov
jno
sbb
mov
mov
cmpsb
dec
adc
repnz
mov
aad
adc
inc
mov
insb
mov
call
push
push
cmp
inc
add
mov
lea
fs
lea
int
push
stos
or
inc
add
out
sub
lods
lret
jb
jle
add
push
mov
sub
inc
inc
incl
lods
lds
cmp
push
test
dec
sub
push
jnp
sub
pop
mov
sbb
cmp
inc
ret
push
in
lcall
lods
mov
popf
je
inc
das
lock
pop
cmpb
loop
rcll
xchg
pop
jne
inc
nop
lret
rorl
sub
lods
mov
ljmp
scas
lock
adc
je
dec
mov
add
jp
sbb
pop
sti
insb
loopne
aas
mov
inc
fucom
daa
data16
push
mov
xchg
rol
fadds
xorb
xor
mov
pop
push
fsubr
mov
pop
jge
dec
pop
push
rcrb
out
testb
pusha
shrl
mov
mov
stos
xchg
push
test
test
pop
out
cli
int
js
idiv
xchg
cmp
push
mov
cmp
mov
push
flds
or
adc
aas
int3
xlat
int3
jns
jbe
xchg
sub
xchg
and
add
loopne
dec
cld
sbb
test
jbe
ret
cmp
fiaddl
mov
popa
cli
push
push
dec
and
roll
push
jae
in
add
cltd
mov
popa
or
adc
sbb
pminub
lock
dec
jo
out
push
rcrl
mov
loop
and
sub
cld
xchg
lds
lock
and
add
xchg
cwtl
lds
xor
js
mov
cltd
bound
dec
pop
jmp
sub
popf
fwait
lahf
shlb
gs
and
dec
pusha
cmp
aaa
xor
xor
gs
leave
mov
loopne
out
cwtl
cltd
mov
repnz
aaa
mov
ds
add
and
cmp
mov
inc
lret
push
cmp
cmp
mov
push
push
add
sti
jbe
pop
push
or
mov
inc
cld
sbb
add
add
or
test
xor
and
es
jg
dec
fsubrs
cmp
jnp
stos
cltd
jns
jp
jbe
jbe
add
jp
out
into
push
lahf
pop
insb
ds
shll
inc
mov
adc
jg
gs
fbstp
out
push
movl
mov
xchg
movsl
xchg
jge
add
pop
in
ret
cmpsl
xchg
stos
mov
sbb
ret
xchg
in
mov
xor
pop
mov
popf
mull
jnp
cmp
movsl
add
inc
pop
out
push
adc
push
int3
pop
cmp
out
nop
mov
pop
pop
cmp
lods
popa
ret
cmp
sub
jnp
add
ja
pop
push
hlt
or
nop
push
test
test
int
adc
out
rorl
sbb
loopne
pop
lahf
lret
rcrl
or
push
mov
fdiv
rcr
sub
mov
rclb
fisttpl
int3
imul
aaa
fidivrl
sub
std
pop
mov
outsl
pop
mov
mov
movsb
cmp
stos
rcrl
adc
outsb
lods
lret
xlat
fildl
inc
inc
xchg
mov
and
adc
mov
lahf
arpl
mov
inc
mov
cwtl
push
xor
lods
pop
mov
inc
imul
fisubs
or
push
xor
mov
shlb
out
xor
jecxz
int3
jno
gs
mov
loop
jns
pushl
pop
fbstp
inc
std
daa
hlt
push
mov
movl
mov
jmp
stc
dec
xchg
sbbb
add
scas
push
mov
push
inc
push
stos
cmp
lods
push
mov
imul
add
call
fisttpll
movb
das
mov
and
cmpsl
adc
sub
sub
add
mov
lds
lods
jbe
xchg
faddl
imul
repz
and
loop
orl
leave
ss
pop
fdivs
mov
cmp
in
jmp
inc
sub
in
mov
jmp
lods
mov
fbld
cmc
icebp
push
adc
fldcw
push
cmp
scas
mov
mov
inc
pop
shlb
lret
test
and
jmp
adc
xchg
jnp
push
add
adc
pop
fstpl
mov
fdivp
sbbl
cmp
mov
add
sub
add
pop
mov
bound
unpckhps
pop
pop
pop
fcmove
sub
or
movsb
leave
xor
adc
cltd
and
mov
push
add
cli
rcll
mov
mov
arpl
js
mov
fidivrs
xchg
xchg
push
lret
insl
push
data16
gs
fiadds
mov
fwait
or
cs
mov
aaa
jp
mov
jne
cmp
push
bound
pushf
push
popa
mov
xor
push
inc
add
ds
mov
mov
mov
jl
jno
inc
add
enter
shlb
push
push
jno
mov
mov
pop
filds
in
xor
mov
sarl
scas
dec
fcoms
popa
int
sub
cmpsl
aad
ljmp
testb
or
sbb
lret
sti
shrl
pop
cmp
daa
addr16
into
adc
popa
push
pushf
fstpt
pop
mov
testl
push
jno
ret
add
dec
jnp
aad
mov
adc
pop
fwait
ja
jbe
lahf
jne
jle
mov
mov
inc
xchg
loop
out
into
push
pop
adc
fmul
cmp
das
rcll
std
mov
popf
repnz
xchg
loop
mov
cmc
xor
cmpsb
cmp
dec
lock
sub
mov
jl
jle
cmp
dec
stos
jge
dec
sbbl
orb
dec
and
mov
scas
sub
mov
cmp
inc
inc
ret
out
cmp
emms
mov
push
pop
mov
sti
mov
jne
cs
hlt
es
xchg
push
inc
stc
mov
sbb
jo
cpuid
add
popa
fldl
movsl
sti
mov
int
add
lods
sub
int
xchg
inc
inc
push
cmc
mov
jae
popa
pusha
je
sub
ret
out
cmp
sbb
cmpsl
aad
test
loop
les
xor
negl
mov
jge
adc
and
sub
jnp
daa
mov
mov
and
fdivl
or
and
jo
test
lods
imul
lahf
adc
sbb
sti
imul
hlt
cltd
xor
in
or
jecxz
xchg
fsubrs
push
movsb
mov
xchg
pop
ja
mov
lock
shlb
add
mov
fists
mov
pop
xchg
pop
or
cmp
xorb
jle
push
daa
mov
or
push
lea
jl
out
loope
ds
aad
popf
jns
or
lods
bnd
and
rcr
xchg
fcoms
les
aad
sbb
in
push
jmp
les
cmp
adc
push
shll
sub
popa
dec
mov
movsb
xor
push
ja
cmp
inc
ret
shl
inc
fistps
nop
adc
in
mov
adc
add
gs
xor
mov
add
ja
cmp
lret
push
pop
cli
shlb
jo
cli
int
icebp
inc
mov
decl
pop
outsl
mov
adc
cmp
in
ds
mov
sti
jg
cld
imul
aam
push
ret
movsl
sub
paddw
aam
out
ret
xchg
out
mov
arpl
mov
sub
cmp
movsl
ljmp
test
out
pop
xchg
xor
sbb
jmp
push
adc
or
xorb
sbbl
add
cld
jo
dec
xchg
mov
pop
nop
mov
enter
mov
adc
icebp
in
jp
sti
xor
aaa
push
test
mov
push
jo
adc
mov
pusha
ja
rclb
fsubrs
cmpsl
imul
test
idivl
lret
stc
push
sbb
rcrb
sub
xchg
in
mov
aas
fmul
outsl
mov
push
nop
dec
dec
sbb
pop
and
cmp
adc
test
pop
fsubrl
or
push
ficoml
out
nop
push
leave
and
pop
cs
and
mov
daa
sbb
dec
add
push
push
pop
inc
dec
pop
in
jo
lret
jns
sbb
add
insl
and
mov
pop
bound
mov
inc
enter
mov
mov
gs
iret
gs
mov
add
xchg
hlt
xchg
sbb
scas
cmp
ds
rcll
js
nop
xchg
pusha
fimull
sbb
sahf
pop
gs
jmp
and
arpl
and
roll
mov
loop
mov
outsl
ja
mov
lods
cmpsb
jae
cs
sbb
push
dec
or
xchg
aad
jne
in
mov
and
out
movsl
pop
loope
frstor
test
mov
xorb
lahf
jecxz
adc
cmp
add
sbbl
iret
xchg
xlat
jmp
sti
les
inc
fadd
aam
cmp
out
dec
jne
xchg
ljmp
js
push
lods
inc
ret
jmp
das
pop
dec
dec
loop
fwait
add
aaa
dec
addr16
push
mov
pusha
sub
repnz
sti
repnz
ret
inc
xor
cmp
lcall
and
icebp
icebp
shrl
in
ds
xchg
push
and
mov
pop
xorl
push
mov
das
hlt
mov
mov
xor
jecxz
pop
inc
in
cs
sub
movsl
inc
push
ja
sbb
sti
lret
mov
or
imul
pop
fwait
popa
in
fstps
pop
or
pop
and
inc
mov
xchg
les
add
es
loope
pop
inc
hlt
and
lret
cld
push
insb
std
in
xchg
fiaddl
inc
lretw
lret
cmpb
mov
push
xchg
idiv
fidivl
loop
je
ret
xlat
bound
or
stos
mov
push
cltd
push
imul
lods
popa
jae
test
inc
inc
fisubl
add
cmpsl
leave
pushf
test
ljmp
mov
pop
xchg
movb
push
aas
sti
push
stos
fwait
push
jp
repnz
daa
fstps
jno
jne
call
jb
xchg
adc
pop
repz
pop
loope
xor
testl
mov
pop
pop
icebp
cmpsb
clc
scas
test
dec
pushf
or
cmp
push
fldt
pop
adc
dec
dec
mov
cmpsl
lret
lret
ret
jns
imul
inc
push
cwtl
and
mov
ret
mov
dec
lds
push
adc
sub
out
ja
cmp
ds
push
mov
inc
cmpsl
cmp
mov
sti
cli
adcl
popf
inc
cmp
rcl
add
jnp
fisubrl
and
sbb
cmp
cld
and
daa
push
jno
dec
mov
mov
rcr
enter
jae
loope
lods
mull
and
jle
lds
cmp
fldcw
push
jne
neg
mov
bound
rcr
xor
arpl
fcoml
inc
and
fidivrs
sub
test
or
jp
shlb
bound
xor
jmp
std
scas
test
int3
jbe
inc
sub
dec
mov
das
dec
sbb
call
lret
mov
push
xor
lahf
mov
dec
mov
lret
jo
dec
mov
mov
ss
int
and
or
imul
js
mov
sub
outsl
nop
ss
testl
mov
subl
sub
in
dec
mov
push
xchg
lods
fwait
aam
pop
sarl
inc
mov
dec
movsl
push
jecxz
push
dec
mov
cmp
xchg
fists
cmp
loopne
cmp
test
mov
ja
js
xlat
pop
fisubl
xor
and
cmp
adc
lret
adc
not
push
iret
in
pushf
test
inc
mov
roll
lods
cmp
mov
mov
fistpl
mov
into
outsb
sbb
fcoml
and
sbb
sbb
icebp
pop
jle
mov
add
adc
or
outsb
or
add
test
dec
mov
jecxz
jb
push
fs
and
adc
sbb
test
sub
cmp
scas
mov
jp,pn
pop
jmp
jbe,pn
adc
scas
cmpb
pop
js
data16
popf
jns
jg
ret
jmp
xchg
dec
or
shll
les
mov
cmc
dec
mov
cmp
push
sub
in
xor
push
inc
pop
into
movsl
es
cmp
pop
push
xchg
xlat
ret
and
clc
mov
cwtl
outsl
and
push
mov
test
js
xchg
jge
mov
repnz
lahf
lret
lock
imul
shl
mov
push
mov
mov
test
and
rcll
roll
movsl
or
je
fistl
dec
int3
movb
sbb
in
jne
jne
test
dec
into
lcall
push
inc
mov
sti
jbe
push
ret
push
movsb
mov
dec
push
jbe
or
xchg
insb
fildl
inc
and
sub
ljmp
add
fs
fdivl
call
call
mov
lods
push
xchg
pusha
repz
dec
add
xchg
repnz
mov
out
mov
pop
mov
aaa
adc
mov
inc
cld
push
clc
lea
and
inc
jne
insl
sbb
std
imul
decb
jne
push
es
inc
int
sub
xor
jl
xor
fistpl
sub
and
test
das
inc
mov
push
fdivrs
and
lcall
adcb
lods
lret
fisttps
cmpsl
imul
pusha
insb
jo
mov
out
dec
sti
rcr
int
fwait
aad
pop
cmp
scas
mov
dec
fs
sub
dec
jmp
ret
push
pushl
xchg
lret
les
lahf
pop
sub
pushl
jmp
xor
xchg
scas
repnz
cmp
loop
pusha
push
subb
sub
or
aam
inc
lock
mov
mov
call
jne
adc
jbe
or
aad
sub
mov
mov
sbb
xchg
and
test
pop
jo
push
sbb
outsb
movsb
jmp
sub
sti
aaa
jae
or
in
pop
cld
adc
adc
bound
mov
call
movsb
mov
or
pushf
std
mov
mov
sbb
ficoms
shlb
mov
insb
dec
push
sarl
adc
in
movsl
push
rcl
mov
cmc
jge
sbb
jb
outsl
rolb
mov
icebp
mov
sub
pop
mov
xchg
inc
repz
aam
mov
or
or
jbe
cli
lahf
jp
and
adc
out
nop
jg
xchg
or
cld
movsl
das
mov
imul
mov
inc
mov
mov
adc
bound
push
scas
dec
dec
repz
adc
inc
sub
pop
xchg
add
ret
cmp
cmpsb
mov
outsb
dec
dec
jo
mov
mov
ss
inc
xchg
popa
xor
xchg
ret
cmpl
or
mov
in
mov
popf
mov
add
mov
aaa
pop
fisubl
jbe
xor
or
insl
mov
push
mov
adc
xchg
jge
sahf
sbb
pop
inc
movsb
push
inc
inc
fs
sbb
or
addr16
inc
and
in
cwtl
lods
in
push
aad
sarb
and
loop
repnz
jecxz
and
sbb
sti
xlat
mov
cmc
clc
or
movsl
jmp
jns
scas
stc
pop
push
test
fwait
mov
mov
ret
lds
jcxz
test
push
jmp
adc
aad
loopne
je
lret
sbbl
sbb
xchg
inc
shlb
mov
test
pusha
data16
jb
sbbl
sti
inc
mov
cmp
xor
dec
inc
aaa
shll
add
insb
sbbb
pop
cmp
dec
mov
int
mov
mov
xor
jmp
adc
pop
push
leave
or
jnp
lea
pop
inc
add
sub
leave
jb
jno
je
jg
cmp
inc
out
pop
fneni(8087
sbb
daa
fnstcw
sub
outsb
mov
sub
cmp
outsb
hlt
popa
mov
adc
cmp
in
pop
sbb
jne
out
inc
daa
or
mov
and
push
pop
sti
xlat
or
mov
xchg
fidivrl
pop
icebp
xor
push
jl
das
jmp
sahf
cli
cmp
adc
bound
mov
xlat
mov
frstor
sti
fnstsw
test
mov
ja
inc
dec
pop
call
push
mov
or
adc
mov
add
cmp
test
or
mov
mov
outsl
iret
das
cmp
clc
xchg
push
leave
shrl
cmp
pop
popa
int
adc
cmp
cli
ja
mov
jp
mov
pop
inc
ss
scas
shll
std
sahf
and
push
addl
notl
mov
shll
cmp
or
bound
loopne
push
lahf
addr16
iret
ja
jno
mov
mov
sahf
lods
insb
jle
jecxz
and
dec
ss
lret
push
fldcw
mov
jb
das
jg
jne
adc
xlat
stos
jle
lret
or
or
pop
xlat
and
in
insb
pop
sbb
pop
scas
xor
mov
mov
cmpsb
pop
gs
pop
lret
jp
pop
pop
sahf
cwtl
cmpsb
daa
mov
aam
in
int3
inc
in
mov
dec
jmp
jbe
ljmp
mov
push
pusha
xlat
cmp
xchg
adc
fcoms
dec
adc
mov
dec
rcrl
inc
insl
daa
cwtl
jnp
mov
jg
dec
repz
je
clc
outsl
inc
cs
and
jmp
ds
cmp
popf
subb
dec
repnz
xchg
and
loop
mov
test
mov
push
xchg
stc
int
jl
xlat
out
les
shrb
lret
inc
iret
neg
je
movsb
lahf
adc
add
test
cmpl
fldcw
pushf
test
aam
adcb
notb
int
int3
shrb
cmpl
adc
pushf
nop
jne
mov
ljmp
int3
in
push
jae
outsl
out
and
repz
cmp
arpl
sub
dec
icebp
sbb
scas
fisubrl
dec
mov
daa
mov
adc
push
mov
test
int
and
add
dec
in
int
and
jmp
xchg
cmp
inc
adc
outsl
mov
jle
test
push
in
test
testb
and
jp
mov
lea
or
imul
jae
fildl
mov
ljmp
jl
lods
daa
addb
cs
outsb
add
fstps
sbb
ss
pop
scas
sti
in
lods
jae
lret
std
xchg
lea
mov
loopne
rorl
xchg
inc
xchg
daa
jl
mov
jmp
add
lea
inc
cmp
push
xor
cli
enter
js
or
loope
out
sbb
add
jb
enter
xor
repnz
mov
loope
enter
or
adc
xor
xchg
insb
inc
mov
xchg
push
dec
push
cli
enter
ret
inc
xor
jge
aam
rcll
or
pop
stos
aad
ds
stos
lea
in
and
mov
ja
sarb
cwtl
dec
cmpsb
cld
pop
and
call
lock
mov
sbb
fcoms
lods
xchg
add
push
sbb
daa
fisttps
js
out
mov
ds
hlt
ljmp
cli
sub
inc
ds
repz
push
pop
xor
and
int
jmp
nop
xchg
xchg
lret
fimull
jl
cltd
and
insl
pop
pop
xor
xchg
push
xor
data16
aam
lods
xchg
popa
les
into
dec
js
mov
push
xor
xorb
or
addb
inc
mov
pusha
ficoms
mov
cmp
dec
inc
imul
insl
nop
lret
push
or
mov
cmp
add
das
comiss
xchg
rorb
rcll
sbb
inc
cld
dec
loopne
stc
and
out
fisttpl
jle
rolb
nop
testl
and
push
jle
sbb
mov
sub
mov
scas
inc
mov
jecxz
inc
adcb
pusha
mov
push
push
test
sbb
mov
lods
mov
pushf
icebp
jns
nop
mov
mov
cwtl
addr16
ja
and
lret
pop
in
xchg
in
adc
push
pop
loopne
xor
lret
aaa
loop
dec
mov
sub
xchg
push
push
sti
lods
js
outsl
sti
rcrb
js
or
aaa
shlb
mov
xchg
cwtl
lods
les
dec
or
cltd
jno
movl
xchg
outsb
sahf
push
and
adc
test
je
sbb
inc
xor
rol
ljmp
js
pusha
push
push
sbb
stc
adc
inc
ljmp
mov
lods
fistpl
xchg
or
mov
or
pop
pop
shr
icebp
mov
es
inc
mov
das
outsb
std
dec
mov
sti
push
int
adc
and
test
pushf
or
lds
xchg
fucomp
push
scas
mov
sub
loope
cmp
enter
xor
cli
ss
jb
cmp
std
xchg
int
into
or
iret
aas
xchg
add
int
mov
repz
push
cltd
push
insl
imul
loope
adc
xor
jno
ret
dec
aad
sbb
pop
cmpsb
dec
pop
mov
or
int3
mov
pusha
notb
sub
dec
inc
jae
aad
push
insl
fsubr
out
ds
sbb
mov
mov
sub
dec
xor
xchg
jno
aam
cmp
mov
jmp
jae
pop
pop
leave
lcall
xchg
leave
lahf
mov
ffreep
xchg
xchg
inc
mov
in
ror
sbb
push
xchg
das
fisttpll
pop
jno
sbb
inc
data16
clc
adc
push
stos
mov
iret
jecxz
lcall
cltd
dec
fcmovnbe
add
xorb
cli
mov
sub
dec
add
dec
pop
pop
in
xor
mov
loopne
test
imul
push
dec
stos
pop
mov
sbb
aas
enter
scas
push
dec
push
iret
and
cltd
loope
and
gs
fiaddl
sub
cmp
sub
pop
repnz
adc
sbb
into
sbb
cli
daa
jbe
pop
enter
ret
repnz
jmp
mov
arpl
push
fiadds
mov
in
ljmp
lret
and
int
push
dec
outsb
loopne
mov
stc
jmp
movl
and
mov
mov
push
ss
in
sbb
dec
movsl
push
xor
inc
sub
cld
jg,pt
scas
test
lcall
sub
push
lds
daa
ja
jmp
sbb
insl
ja
mov
cli
int3
and
loope
push
push
ja
divb
pop
aad
cli
int
mov
rcll
mov
aaa
test
shll
mov
mov
sub
cmp
scas
stos
fdivp
mov
loope
loopne
add
icebp
mov
movl
adc
jp
in
jmp
and
mov
test
arpl
sti
pop
inc
mov
arpl
mov
jo
sub
shl
stc
adc
pop
js
or
call
fadds
mov
fsubrs
add
push
inc
daa
mov
clc
addr16
or
mov
test
push
pop
mov
pusha
pop
add
sahf
ljmp
lods
pop
std
out
fidivl
mov
mov
mov
push
aad
fdivl
mov
push
mov
add
cmpsb
mov
test
add
test
push
loope
xchg
out
imul
lcall
arpl
loope
movsl
xchg
call
loopne
inc
negb
ret
dec
out
adc
lahf
adc
pop
cmc
dec
pop
ds
jmp
popa
sub
mov
imull
or
mov
pop
fiadds
lods
jmp
push
xchg
in
lods
and
inc
mov
add
mov
sti
jle
pop
out
sub
cmpsb
daa
jae
jge
mov
xchg
push
insl
fwait
aad
push
cmp
adc
mulb
jne
jmp
dec
mov
mov
insb
jmp
jo
int
scas
in
mov
xchg
int
mov
shrb
fwait
ret
dec
inc
fistps
popa
fildll
xor
mov
mov
es
lods
pop
push
adc
dec
or
jge
test
adcb
dec
js
push
movsb
sub
rcrb
add
jp
xchg
cmp
cwtl
mov
flds
pop
fstps
mov
mov
xchg
pop
dec
jecxz
pop
or
inc
lahf
icebp
mov
stos
pop
jb
inc
rcrl
stos
out
mov
xor
hlt
mov
inc
inc
mov
repnz
cmp
adc
rcr
mov
addr16
mov
mov
cmpsb
jne
lea
clc
lock
xchg
repnz
or
xor
out
jne
dec
ds
testl
psraw
pop
xchg
pop
test
negl
ljmp
hlt
imul
and
loop
repz
pop
push
pop
sub
movsb
in
sbb
pop
lods
insb
xchg
add
stos
insb
ret
test
shrl
into
pusha
push
pop
adcl
and
push
push
sub
cwtl
adcl
sarl
sarl
pop
lret
fs
xor
xor
xchg
aas
jmp
and
popa
sub
xor
inc
push
pop
loopne
cmpb
fistps
sub
aam
mov
mov
cmpsl
push
mov
mov
adc
mov
andb
addr16
mov
imul
push
jo
pop
rcll
xor
lock
pop
adc
js
xor
sti
mov
mov
pop
mov
int3
jecxz
sub
out
out
sub
test
sub
pop
loopew
adc
adc
jle
pushf
jmp
cmp
or
push
fstl
push
ror
dec
jl
sub
mov
addr16
xchg
or
mov
call
movsl
push
rorb
loopne
out
or
addb
fisttpll
cmp
lea
pop
insl
dec
xor
cwtl
loopne
inc
addr16
js
xor
dec
inc
or
add
pusha
or
xchg
cmp
push
stos
push
lret
popa
cmpsl
shll
popa
mov
sub
and
jo
fisttpll
adc
xor
nop
ss
sbb
inc
fdiv
std
je
or
push
test
fisubl
clc
and
out
xor
out
loopne
and
jo
inc
jmp
push
ret
xor
jbe
add
aas
jne
xchg
mov
cs
xor
push
mov
pop
outsl
jb
dec
fwait
scas
shl
mov
sahf
mov
jp
fs
std
ffree
xchg
inc
push
jbe
pop
xchg
xchg
les
jcxz
xchg
push
mov
sbb
fnstsw
into
sarl
mov
shl
sub
xchg
sahf
sbb
sbb
pop
mov
push
shlb
inc
js
lock
out
je
int3
inc
mov
cwtl
nop
test
mov
fldt
nopl
cmp
or
sbb
test
jb
push
adc
inc
inc
pushw
pop
xchg
adc
xor
cmp
fldl
mov
mov
dec
xor
dec
subb
aaa
imul
mov
jmp
fstps
mov
movlps
addr16
ljmp
xor
xchg
or
mov
out
mov
pop
xchg
inc
adc
gs
das
inc
mov
es
cmp
xchg
and
push
sub
repz
mov
pop
pop
mov
xchg
cmp
xchg
test
fwait
dec
leave
push
nop
je
pop
sti
sbb
sti
sub
inc
inc
movsl
pop
aad
std
fimuls
and
ds
loopne
adc
push
stos
or
data16
out
mov
cmp
orl
xchg
mov
push
add
nop
out
fwait
jnp
lcall
pop
jne,pt
mov
push
rcl
mov
xor
insl
lds
jmp
cmpsl
testl
pop
movsl
jp
in
jmp
xor
push
test
mov
pop
sti
mov
jmp
mov
into
test
lock
sub
std
pop
cmc
popa
push
fsts
or
lds
js
ds
bts
adc
sub
out
scas
outsb
xorb
jnp
insl
mov
push
call
es
dec
cmc
cmpsb
cmp
mov
mov
add
dec
add
aam
insl
sbb
inc
out
stos
iret
fbld
lock
push
adc
pop
leave
in
add
jecxz
dec
or
push
notb
mov
lea
loop
loop
fbld
gs
lcall
stos
test
xchg
push
call
pop
or
movsl
mov
inc
aaa
cmc
js
xchg
js
insl
xor
scas
inc
shll
inc
js
sbb
inc
add
or
bound
arpl
and
push
into
shl
mov
shlb
mov
inc
xchg
cmc
pushf
mov
aaa
insb
mov
sbb
in
shrl
or
test
repnz
add
daa
test
cmp
and
shrb
or
outsb
les
enter
cs
repz
cltd
and
push
dec
insb
jmp
ja
mov
decb
inc
test
aaa
sbb
push
pop
lock
scas
pop
adc
cmc
mov
out
iret
ds
test
push
out
sbb
jns
mov
adc
xor
ds
cmp
add
test
jo
sbb
lret
sarb
insb
daa
pop
adc
scas
xor
push
or
or
mov
sti
jbe
roll
xchg
inc
adc
add
mov
mov
sub
ljmp
jg
pop
pushf
inc
xor
dec
mov
movsl
mov
or
pop
call
jmp
lar
adc
adc
outsb
fsubr
xor
imul
and
cmp
aas
testb
daa
dec
imul
sub
iret
jbe
jg
adc
dec
sub
adc
dec
fbld
mov
mov
fs
cmp
sbb
in
stos
pop
mov
jmp
addb
mov
inc
mov
movsl
push
xor
test
xor
movsl
sub
push
sbb
sti
popa
cmp
sub
pop
jge
or
out
hlt
and
sarl
cmp
push
testl
loope
aaa
outsl
push
mov
inc
loope
sub
fcmovbe
cmp
push
sbb
mov
push
lret
xor
sbb
adc
fs
mov
push
xchg
stos
jp
and
lret
incl
dec
xlat
add
sub
xchg
push
xchg
cli
out
dec
ss
mov
sbb
jne
jnp
dec
test
inc
mov
movsl
ja
je
test
loop
jae
rcr
pop
adc
lret
ds
shll
dec
fwait
js
insb
roll
sub
rcrl
pop
fidivrs
sahf
pop
jp
and
cmp
mov
hlt
and
mov
inc
cld
xor
stos
adc
popa
divl
jecxz
pusha
and
pop
xor
loopne
mov
xor
imul
mov
ret
xor
rorl
ror
push
in
inc
ds
add
xorb
xchg
xchg
hlt
push
dec
push
cmpsb
or
loope
jno
stc
test
and
mov
mov
jno
mov
lret
ret
loopne
pusha
xlat
std
pop
cld
mov
lcall
rcll
cmpb
in
sub
cld
lea
inc
imul
sub
bound
jmp
or
sub
test
push
dec
xchg
pop
cmp
or
sete
or
scas
adc
sti
inc
dec
ficompl
ds
cmp
or
testb
mov
adc
je
mov
stos
mov
xchg
outsl
fwait
ljmp
or
push
fwait
inc
jb
cld
loop
inc
push
xchg
jle
popf
pop
loop
inc
lret
jae
loope
pop
jp
jbe
jne
push
rcr
mov
pop
mov
arpl
jae
out
ret
fstpl
ret
cmpb
test
lock
cmp
adcb
fsubrl
pop
outsb
push
and
jno
fs
sbb
fwait
out
shll
repz
fists
std
jne
or
cmp
fcomps
icebp
pop
in
lock
xor
cmp
aaa
lock
js
jnp
or
stc
jge
inc
jge
std
stos
push
jo
push
push
loop
rolb
pop
jg
pusha
mov
xchg
xor
or
mov
orb
pusha
cmp
cwtl
lock
fnstenv
cmpsb
cmp
or
mov
js
test
xchg
hlt
cmovs
inc
dec
and
lret
repnz
or
pop
icebp
jecxz
mov
pop
add
pop
push
fstpt
push
stos
je
dec
inc
dec
xchg
add
les
in
orb
mov
xchg
jno
and
stos
gs
daa
lods
jnp
jb
data16
cmp
sub
sbb
lods
push
mov
mov
dec
or
fmuls
adc
jp
or
cmc
imul
iret
ds
jnp
push
sub
xor
out
dec
repnz
mov
mov
sub
ds
and
add
cmc
je
xchg
fmuls
lods
sbb
lahf
jo
pop
pusha
fiaddl
cli
ret
mov
cmp
jmp
lods
adc
inc
push
push
push
movsl
shlb
pop
faddl
dec
xor
push
mov
dec
lea
cltd
adc
adc
lds
imul
jb
jp
pop
ss
inc
repnz
mov
scas
xchg
push
jle
jae
subl
mov
lock
lods
push
and
addl
push
inc
stos
outsb
popf
pop
lods
ss
shrl
cmp
repz
cmp
dec
mov
call
push
and
sub
mov
cmp
subl
cld
and
shl
add
mov
ds
mov
in
out
mov
push
or
adc
mov
cmp
pop
cmp
lret
movsbl
add
test
fisubrl
notl
enter
lgs
mov
jns
sub
inc
dec
and
mov
std
pusha
inc
mov
stos
aaa
adc
mov
pop
je
or
or
sub
push
adc
sbb
push
inc
int3
cmp
test
jp
or
fidivrl
adc
jnp
and
mov
push
imul
mov
stos
xchg
sub
mov
fs
xlat
movsb
adc
dec
lea
xchg
or
outsb
cmpsl
scas
jne
push
sbb
das
cmc
pop
jne
imul
mov
cmpsb
sti
mov
std
daa
mov
ja
icebp
mov
sub
out
and
and
sub
mov
mov
ss
or
mov
sbb
int
xor
subb
pusha
adc
jb
sbb
lock
insl
xchg
data16
lahf
cmc
cmp
cmovnp
add
dec
cmc
mov
mov
jle
add
xlat
mov
push
dec
and
mov
push
out
stc
inc
mov
jo
test
dec
stc
movsb
aad
into
adc
loopne
dec
jge
dec
inc
push
mov
rol
inc
mov
sar
add
push
shll
xchg
pop
out
ja
cmp
sbb
mov
mov
comiss
xchg
push
mov
call
sar
xchg
and
mov
stos
jo
decl
and
mov
movsl
dec
lds
mov
fistl
add
and
mov
mov
xchg
out
push
push
pop
inc
mov
adc
mov
and
fisubrl
sub
daa
dec
or
insb
int3
xor
cs
push
xchg
int3
or
xor
enter
add
dec
push
xchg
jle
adc
pop
pop
js
xchg
mov
lock
xor
or
pusha
into
jge
or
inc
cwtl
sbb
popa
out
loopne
test
clc
mov
pop
inc
pop
fmuls
xchg
jb
adc
pop
sbb
jecxz
mov
stc
ret
inc
sbb
jmp
in
cli
cltd
in
cli
add
push
fimull
rcrl
ret
enter
mov
jmp
adcb
jge
imul
scas
sbb
cld
lock
insl
mov
cmp
pop
testb
shufps
gs
push
aad
xchg
mov
or
sbb
cmp
inc
out
adc
dec
fsubrs
insb
out
xor
popf
clc
outsb
xchg
mov
test
imul
xor
pushf
cmp
shl
repz
cmp
add
mov
clc
mov
xor
sub
es
inc
jg
stos
out
sbb
mov
stos
xlat
sub
mov
dec
sbb
out
cltd
jle
dec
xor
pop
xchg
xchg
mov
imul
out
scas
orl
push
arpl
lods
mov
es
pusha
cmp
sub
andl
jbe
mov
lcall
aaa
mov
fwait
les
aad
ret
xchg
orb
mov
mov
ret
inc
icebp
sbb
cli
pop
mov
shlb
je
dec
fwait
mov
imul
gs
sub
scas
adc
push
push
mov
mov
jns
pop
fsubl
jg
test
push
mov
jl
pop
adc
and
flds
pop
in
push
es
sbb
imul
xor
iret
inc
mov
inc
arpl
cs
rcrb
cld
mov
inc
inc
xchg
repz
mov
jge
mov
inc
pop
dec
mov
xor
enter
or
loop
adc
cmpsl
pop
fs
fbld
lret
sbb
lods
mov
fsubl
push
push
jle
xor
xchg
imul
push
rolb
ljmp
inc
or
idiv
imul
imull
ds
loopne
push
mov
stos
and
inc
into
stos
daa
imul
je
push
push
sbb
sub
mov
js
cmpb
mov
push
aas
fcomps
sbb
cli
add
repnz
lods
and
or
jp
mov
jno
dec
inc
scas
sar
sbb
rcll
aam
add
sub
sbbl
int
loopne
popf
pop
dec
xor
xor
mov
mov
jle
popf
das
mov
cmp
jmp
imul
inc
les
cmp
or
rorb
sub
cmpsl
mov
adc
pop
aam
mov
jp
and
dec
mov
sti
mov
dec
cmp
jb
ss
push
push
add
in
fs
into
out
jns
sbb
shrl
movl
daa
ret
in
mov
add
and
dec
repz
and
arpl
insl
push
pop
sbb
outsb
call
inc
mov
cmp
push
movsl
inc
pop
jp
pop
push
and
cmpsb
or
sar
pop
xlat
bound
sbb
mov
mov
imul
add
dec
xchg
scas
mov
cmc
jae
lock
stos
test
or
and
fisttpl
ret
testl
jle
mov
mov
add
mov
mov
mov
pop
sti
cltd
jmp
dec
in
inc
int
mov
sub
in
mov
arpl
or
mov
dec
and
clc
repnz
jns
mov
fsubrl
push
cld
inc
das
lcall
adc
push
fs
pop
stos
rcll
ret
rcrb
daa
inc
mov
mov
fwait
dec
cmp
popa
and
jne
pop
hlt
xchg
das
in
push
hlt
ss
mov
insb
loope
incl
mov
push
pop
shl
pop
jno
mov
xchg
loopne
mov
bound
xchg
dec
add
enter
sbb
pusha
aas
sbb
hlt
and
cmp
sbb
jnp
xorl
jle
jne
add
stos
es
inc
fucomip
add
xor
cmp
or
leave
xchg
aam
adc
nop
xor
ret
pop
or
ret
sbb
mov
fsubr
mov
mov
xchg
into
mov
in
pop
jno
icebp
push
push
pop
jno
sbb
outsl
jo
movsb
mov
push
shlb
mov
stos
gs
xchg
aas
sti
notl
sub
cld
dec
add
inc
mov
popl
xor
leave
out
or
dec
loop
mov
fisubrl
fidivl
mov
adc
mov
arpl
jmp
outsb
cwtl
test
pushf
push
mov
das
fs
rcr
aas
adc
cmp
mov
lods
jmp
pop
and
inc
add
xchg
enter
js
mov
dec
daa
lods
cmp
adc
lret
sti
shrl
gs
ds
mov
mov
dec
iret
cwtl
test
sbb
stos
insl
std
mov
int3
aam
enter
push
repnz
mov
bound
aaa
push
sbb
in
xchg
stos
lods
dec
dec
push
sbb
push
sahf
pusha
adc
add
jb
sbb
movsb
imul
mov
and
aad
aam
fucom
push
dec
mov
in
pop
xor
mov
mov
fisubrl
and
mov
fs
sub
push
pop
mov
or
das
xchg
and
xor
adc
movsb
lret
jns
popf
mov
in
scas
mov
inc
push
dec
out
aad
xchg
stos
sub
or
fistpll
jo
mov
mov
xchg
jle
jo
push
jecxz
mov
stos
jbe
lds
pop
xchg
imul
pop
sahf
pop
mov
jg
cltd
cmp
inc
out
pop
or
add
pop
es
std
cmp
clc
xchg
fnstenv
ds
mov
int
cmc
or
jle
mov
lret
inc
jmp
insl
rol
int3
ret
push
sar
xchg
and
or
ss
data16
imulb
mov
and
cmpsb
loop
push
scas
cmp
and
subl
das
dec
icebp
nop
inc
or
in
insb
pop
stc
cli
mov
xor
sub
fsubrs
and
scas
fisubl
xor
clc
jne
std
imul
scas
and
mov
xor
push
jp
push
adc
or
xchg
pop
mov
mov
jle
mov
inc
popf
popf
mov
and
mov
push
xchg
das
inc
insb
hlt
int
jmp
push
das
add
es
mov
pop
and
out
dec
sbb
fsubr
pop
push
outsb
push
outsb
fsubs
clc
sarl
mov
push
pop
mov
adc
cwtl
mov
cmc
inc
movsb
ret
fistpll
sub
sbb
sub
or
icebp
outsb
enter
aad
fnstsw
out
iret
shlb
mov
add
aaa
mov
adc
movsb
cld
xchg
out
push
sub
sbb
mov
out
std
xchg
mov
sbbl
bound
push
rcrb
cld
call
dec
popf
stc
push
cs
sub
das
add
imul
jge
enter
outsl
xchg
add
adc
je
cmpsb
or
mov
adc
fildl
inc
or
mov
cwtl
idivb
jle
pop
jge
adcl
repz
push
add
jmp
js
adc
test
and
cmpsl
jle
and
iret
sub
shl
testl
rcrb
aam
cltd
xchg
inc
dec
jbe
cmp
subl
and
mov
ror
int
dec
pop
xchg
add
push
adc
push
sbb
cmp
mov
imul
scas
mov
add
lock
aad
push
stos
jl
cs
mov
xor
sub
stos
or
lods
loop
push
xchg
imul
xor
enter
sub
dec
mov
pop
cli
mov
out
sub
inc
neg
push
mov
inc
and
jp
stc
lods
pop
shl
mov
inc
add
jl
jge
in
sub
loop
or
lcall
and
dec
into
jnp
jbe
sbb
or
lods
xchg
std
shlb
jnp
enter
push
fisubrl
and
jo
in
mulps
lods
sarb
sub
xor
inc
cmp
loopne
pusha
push
mov
inc
jmp
aaa
daa
mov
add
inc
sbb
add
dec
in
loope
xor
cmp
xchg
jmp
push
in
popf
xchg
pop
cltd
mov
fisubrs
adc
pop
jno
inc
pop
cmp
fildll
dec
mov
fidivrl
push
rorb
mov
int3
out
les
sub
jmp
fisubs
xor
cmc
pushf
arpl
push
xlat
sub
data16
je
sar
in
push
popf
fwait
xlat
pop
and
filds
jp
in
mov
ret
scas
jns
adc
ljmp
sbb
cli
arpl
sbb
cltd
negl
cmpsl
cmc
popa
xor
call
push
lea
out
jle
xchg
sub
inc
lock
scas
out
cmp
fiadds
cmp
pop
outsb
rclb
push
movl
push
mov
adc
sub
pop
mov
popa
ret
mov
xchg
jl
dec
popf
pop
mov
mov
pop
dec
out
push
or
jbe
adc
fucomp
lret
jnp
imul
fistpll
mov
stc
stos
dec
mov
icebp
adc
mov
or
jo
outsb
mov
cmpxchg
xchg
loope
xor
jg
cmp
and
jmp
test
adc
xor
mov
testb
push
iret
adc
mov
xchg
test
inc
shl
das
filds
mov
idivb
pushf
movl
pop
adc
and
jp
mov
stos
push
repz
add
inc
add
leave
push
gs
mov
cmp
push
in
lods
adc
sub
xchg
add
jne
popf
push
out
push
out
inc
push
fsubs
js
pusha
imul
in
jg
adc
push
xor
inc
shlb
sbb
sub
sbb
mov
hlt
mov
aam
mov
pusha
xchg
xchg
cmpsb
cs
imul
loopne
sbb
mov
cwtl
divl
sbb
push
adc
push
ds
dec
popa
out
test
dec
jg
mov
dec
dec
jae
and
ret
pop
sub
iret
int
bound
jb
imul
imul
sub
test
dec
aaa
lds
lock
out
push
lock
sub
mov
ds
or
or
shll
fsubrl
add
xor
xor
repnz
test
lds
dec
fst
lret
add
lea
frstor
cli
xchg
push
inc
loop
push
jo
mov
out
mov
je
fs
adc
mov
mov
int3
mov
mov
cmp
sub
sbbb
push
in
and
int3
mov
jge
das
inc
je
lcall
dec
inc
bound
rolb
icebp
cmp
dec
in
hlt
add
loop
push
divl
cmpl
jle
aad
xchg
inc
mov
mov
xchg
dec
jle
mov
lahf
inc
icebp
inc
rol
dec
jne
xorb
adc
xor
or
adc
stos
xchg
sar
jo
int
shll
push
test
into
data16
push
mov
mov
pop
jo
mov
fldcw
leave
in
push
sar
mov
push
lret
push
hlt
bound
cwtl
cs
cmp
das
or
or
sbb
in
out
cmp
jne
stc
xchg
sub
or
or
adc
xchg
xor
addr16
fwait
and
sti
adc
arpl
call
and
push
loopne
push
popf
add
sbb
cmp
cld
fldl2e
push
cwtl
pop
je
cmpl
lahf
pop
in
mov
int3
in
fldt
or
je
data16
xchg
push
js
pusha
mov
mov
pop
lds
popa
push
faddp
sbb
test
cwtl
loopne
xor
je
or
mov
ret
jg
cmp
mov
lea
xchg
push
rcrl
sub
fwait
add
fistps
jl
or
aam
lret
adc
les
stc
jbe
es
ds
in
mov
cmp
andb
mov
jmp
stos
lcall
test
jecxz
cli
xor
mov
adc
jge
inc
xchg
out
aad
movsl
push
popa
push
out
scas
psrlq
cmpsb
aam
aas
arpl
mov
push
dec
lahf
mov
xor
out
dec
addr16
fstpl
jno
loop
sub
ret
fwait
cs
addr16
or
sub
add
fstps
or
sub
call
cmpsl
push
push
inc
mov
iret
jle
test
xchg
mov
jb
stc
or
sbb
xor
nop
loope
imul
mov
mov
cmpsl
push
push
mov
imul
rclb
pop
enter
mov
mov
push
xchg
and
leave
stc
out
xor
cwtl
popf
inc
adc
cli
xor
insl
dec
int
iret
mov
fbstp
mov
dec
mov
daa
scas
frstor
movsl
and
test
mov
jo
push
rorl
push
mov
or
addl
pop
and
mov
xor
xchg
xorb
cld
dec
sub
addb
xor
movl
insl
push
pop
xlat
adc
lret
outsb
mov
outsl
lret
push
cmp
inc
popa
inc
cwtl
aad
jge
push
out
and
popl
popa
std
mov
mov
stc
xchg
in
rcll
push
mov
pop
outsb
mov
xchg
jbe
pop
jle
push
jg
out
mov
jecxz
cltd
ja
js
les
or
or
lret
iret
or
loopne
jae
mov
or
inc
dec
ret
add
sbbl
pop
mov
push
pop
repnz
ret
pop
pop
loopne
jbe
cmp
sbb
push
les
dec
add
xchg
mov
repz
mov
imul
pop
mov
mov
test
push
dec
repnz
cmc
push
inc
out
in
mov
std
cmp
cmp
inc
outsl
test
js
mov
add
ja
dec
dec
int
cmpsl
or
icebp
xlat
fstps
cmp
call
divl
int
jno
cmp
es
mov
mov
push
cmpsb
fildll
cmpsb
bound
in
sbb
lods
adc
in
sub
stos
mov
or
jnp
nop
gs
iret
lods
pop
mov
push
fcoms
repnz
popf
stos
xchg
push
pop
adc
daa
push
jg
mov
adc
stos
rolb
pop
mov
xor
mov
js
mov
cltd
sbb
jmp
mov
or
and
dec
xor
jmp
dec
and
inc
push
sbb
imul
aas
popa
lret
test
sbb
mov
dec
cmp
xchg
push
jnp
add
mov
xor
xchg
fdivrl
add
ja
sub
adc
loope
push
je
adc
sarl
inc
bound
pop
add
es
sbb
std
adc
dec
je
subl
adc
enter
sub
loopne
hlt
mov
pop
in
adc
adc
out
xor
add
das
repnz
dec
mov
inc
imul
pop
in
push
sub
push
fcompl
out
mov
hlt
jne
push
mov
popa
test
or
out
jnp
adc
push
jns
dec
push
sub
imul
mov
sbb
pop
iret
xchg
or
push
test
xchg
pop
in
jnp
mov
xor
cmp
rcll
aam
sti
xchg
fsincos
xchg
mov
push
cli
jg
fnstcw
imul
fcomip
aad
dec
fisubs
rorl
cli
addr16
pop
ret
in
cltd
adc
mov
repnz
mov
and
jg
jecxz
or
mov
mov
call
sbb
pop
in
xchg
nop
jae
aad
and
fcomi
add
lock
out
fwait
loope
lret
es
add
and
mov
inc
pop
in
xor
leave
rcrl
frstor
std
mov
shrl
xchg
or
lret
sbb
cli
cmc
add
jns
ljmp
cwtl
cltd
out
jge
popa
add
insl
es
xlat
ficoms
lahf
dec
lods
jp
or
sub
test
repz
mov
xchg
sbb
rclb
inc
rcrl
or
ret
or
add
imul
jbe
imul
cmpsb
xchg
inc
xor
pusha
jno
or
ret
pop
cmpsb
ret
loop
or
mov
xor
adc
jo
or
addl
cld
sbb
scas
pop
xchg
lods
shrl
sbb
jp
dec
int
or
movsb
push
xchg
dec
ljmp
iret
in
xchg
rcll
push
sbb
pop
sbb
mov
arpl
iret
sbb
sarb
andb
inc
sahf
dec
out
fbld
mov
in
in
imul
mov
notl
add
mov
aaa
outsl
xchg
or
pop
xchg
mov
mov
aas
stc
mov
pop
adc
roll
or
inc
sbb
mov
imul
ret
in
push
scas
mov
inc
cli
jp
sti
sbb
fs
fiadds
into
lea
jle
dec
push
out
and
lds
push
mov
mov
mov
cmp
outsb
es
repnz
adc
jbe
push
dec
sti
push
pop
in
and
or
es
mov
sub
xchg
xchg
stos
jge
pop
inc
aam
sub
das
pushf
push
addl
add
je
stos
mov
ret
mov
test
lahf
add
jecxz
mov
adc
pop
dec
aam
pop
pop
cwtl
out
lret
jae
mov
int3
xchg
jmp
iret
ljmp
iret
sub
push
inc
stc
cmpsb
nop/reserved
sar
pop
fdiv
sub
or
loope
xchg
dec
loope
shrb
mov
sbb
and
or
mov
cmp
mov
jae
push
pop
lds
xchg
push
adc
push
mov
scas
roll
push
xor
pop
faddl
int3
mov
insb
cmpsl
je
xchg
lods
int3
pop
sbb
jl
mov
jno
fwait
imul
or
clc
daa
insb
adc
sarb
flds
hlt
clc
scas
push
inc
mov
jnp
repz
inc
mov
fstl
test
adcb
scas
and
mov
sbb
xor
jns
mov
rorl
jbe
dec
sub
inc
repnz
push
shr
mov
push
xor
cmp
roll
data16
jb
fnstsw
push
pop
cmp
dec
adc
bound
jns
lds
scas
pop
es
sub
adc
popf
aas
imul
fdivrp
xor
outsb
pop
test
rorb
inc
inc
test
test
test
je
add
jp
push
popf
inc
or
sub
xchg
outsl
outsl
rcll
daa
jno
mov
div
dec
sbb
add
lods
aad
pop
adc
shrb
push
mov
cmpsb
sub
andl
js
xchg
mov
scas
pop
xchg
inc
jp
fistl
fistps
sbb
das
sahf
leave
add
mov
inc
jno
pop
sahf
movsl
xor
arpl
aas
pminsw
dec
add
adc
ds
les
imul
in
push
xchg
sarb
and
addr16
outsb
adc
sub
fs
test
dec
cli
rep
xchg
scas
std
push
pop
and
jbe
xor
or
rolb
or
leave
rcll
clc
push
jge
mov
icebp
sub
dec
cwtl
int
popf
mov
pop
arpl
rcrb
inc
int3
filds
mov
test
out
mov
imul
ficomps
cwtl
inc
gs
test
mov
in
jns
jl
adc
or
jno
fisubrl
test
or
pop
imul
nop
xchg
adc
das
imul
out
push
repz
push
sub
push
jne
ja
push
stc
dec
cmc
imul
fxch
or
int
ljmp
cli
mov
push
jne
rcl
sub
loop
aad
push
sbbl
and
adc
push
and
lock
and
imul
jl
mov
inc
gs
int3
pop
xchg
cmpsb
jp
rcrb
add
pop
loopne
xchg
xchg
insl
imul
xor
loop
dec
cmc
notl
mov
outsl
xchg
push
repz
sbb
cmp
popf
aam
in
mov
ja
xchg
pop
cmpsl
aas
mov
call
lods
insl
xchg
fcoml
jp
inc
push
aam
jb
in
mov
or
leave
adc
dec
in
repnz
daa
mov
push
dec
pusha
lock
in
and
xor
adc
dec
xor
xor
outsb
std
push
iret
sbb
imul
aad
or
xchg
cli
fildl
push
cmpsl
push
push
push
fsin
out
or
dec
test
popf
sub
mov
sub
or
jl
repz
sub
cli
cmp
insb
sub
sub
sub
push
dec
xor
sti
mov
sahf
sarb
cmp
jmp
repnz
sar
pop
cmc
pop
push
cmp
inc
sub
test
push
dec
fwait
ljmp
cltd
out
test
lret
mov
adc
jnp
iret
pop
stos
out
jg
bnd
xchg
xchg
or
out
test
mov
lods
enter
loope
negl
add
inc
fsubr
xchg
faddl
femms
js
stos
lods
pop
std
cwtl
mov
mov
push
xchg
cmp
lods
in
scas
movsb
inc
mov
jne
cmp
in
lock
mov
bound
or
std
push
mov
in
loope
push
div
fwait
mov
or
out
enter
dec
xchg
and
sub
in
faddp
adc
xchg
add
lods
lock
lods
xor
imul
push
push
imul
mov
dec
repnz
mov
clc
iret
enter
xchg
repz
xchg
sbb
fimuls
ja
dec
cmpsb
add
cmp
into
incl
mov
pushf
das
cld
jg
in
push
cmpsl
sbb
push
xchg
ret
add
or
jp
dec
dec
mov
sub
sti
movsb
sbb
sbb
cmp
mov
cmp
and
sbb
rorb
repz
aam
scas
lods
xchg
aam
repz
inc
mov
push
sahf
lock
or
stos
and
sbb
testl
pop
ret
sbb
pop
pop
mov
shlb
and
stc
fiaddl
lock
mov
xor
mov
inc
mov
data16
push
lret
mov
inc
cltd
jl
inc
shll
and
dec
xchg
test
and
mov
jno
mov
and
out
loop
adc
cs
lret
scas
scas
cwtl
mov
stos
mov
push
aam
dec
bound
xchg
fmull
ljmp
cmp
test
lahf
push
aam
mov
aam
cmp
adc
movsl
test
ss
push
pop
mov
loopne
add
or
mov
jle
xor
fisubs
push
loopne
xlat
mov
sub
xor
addr16
scas
outsl
dec
jno
inc
cwtl
pop
add
popf
jo
lahf
jbe
aad
ret
mov
sub
push
addr16
into
out
mov
mov
ja
and
and
xor
addl
test
jge
or
mov
cmp
push
fsubrl
mov
call
pop
movsl
mov
pop
sub
sti
lret
or
test
sbb
mov
mov
cltd
xlat
leave
mov
ret
insl
test
les
ror
inc
xor
inc
add
outsl
stos
outsb
or
stos
xchg
lds
push
dec
shufps
mov
call
cmp
mov
push
fxch
push
jecxz
pushf
into
mov
mov
mov
jne
sub
add
push
shrb
insl
xchg
push
xchg
shl
push
pop
std
inc
lret
mov
cli
dec
test
jbe
mov
sarl
leave
les
mov
inc
sqrtss
aam
sbb
jp
out
mov
btc
lods
movsl
and
int3
jl
call
pop
mov
lret
cmp
outsb
push
faddl
popf
cmpsl
jmp
or
xchg
jge
jecxz
jg
inc
push
scas
mov
dec
sub
adc
movsb
jno
jecxz
pop
sub
out
insb
in
jge
and
push
negl
dec
pop
mov
shr
xchg
inc
bound
ds
xchg
icebp
pop
push
push
add
in
iret
cmpsb
jne
sub
push
ss
xlat
enter
push
mov
and
or
mov
mov
lahf
out
push
in
adc
jge
inc
adc
mov
fstpt
outsl
dec
mov
lock
clc
out
xor
into
mov
test
pushf
jb
push
mov
jb
call
movsb
aad
enter
test
dec
pop
test
adc
call
add
jge
scas
into
cmp
stc
or
lods
pop
cmp
mov
sbb
pop
pop
hlt
pop
scas
push
cwtl
loop
dec
stos
and
imul
bound
gs
pop
mov
cmp
rolb
arpl
into
mov
and
insb
sbb
sub
mov
fcoml
jge
lcall
sub
iret
test
xor
loope
into
stos
mov
in
add
imulb
movsl
jge
lahf
or
leave
lret
sbb
pusha
xor
mov
mov
cmpsb
mov
testl
into
fiaddl
dec
jmp
loope
jnp
dec
lret
push
ljmp
push
add
xor
cli
or
or
ficompl
leave
jg
test
int
in
fidivs
fs
imul
push
insl
lods
mov
adcb
jae
enter
frstor
mov
inc
jae
adc
push
adc
movsb
jle
xor
push
sbb
and
pop
jbe
xchg
or
inc
jge
dec
out
xor
or
add
in
rorl
pop
dec
adc
sbb
fstps
hlt
test
ficompl
js
div
mov
mov
and
pop
bswap
add
and
aam
rcr
sub
pushf
mov
jge
and
daa
pop
jecxz
mov
int3
xchg
pop
ret
lods
inc
sbb
jbe
setbe
xor
rolb
mov
jmp
dec
cmp
or
mov
pop
or
fcoml
and
add
cmp
fdivl
ret
cmp
movsl
or
push
call
int3
lret
ret
bound
xchg
jg
les
cld
add
aam
repz
inc
adc
mov
xchg
ljmp
inc
cmp
sbb
xchg
orb
insl
mov
popf
je
cmpb
movsl
or
mov
xor
mov
push
shrl
cwtl
mov
dec
mov
stc
cmp
sti
push
shll
sahf
cltd
pop
pop
int
aaa
movsb
andb
cmpsb
xchg
fistl
andl
scas
sbb
out
xchg
mov
sub
std
and
xchg
filds
pop
dec
pop
dec
sbb
pop
add
les
inc
adc
jno
sbb
cmp
sub
out
lahf
xchg
gs
jne
test
aad
negl
and
mov
and
xchg
fcoml
std
xor
and
inc
stos
iret
pop
xchg
pop
repz
scas
incb
cmpsl
shr
fstl
xchg
push
int3
ficomps
mov
mov
xchg
popf
in
loopne
iret
pop
xchg
xchg
movsl
lret
mov
jl
add
cmpsl
repz
inc
xchg
loop
sbbl
repz
xchg
mov
loope
mov
cmp
push
fwait
stos
fs
mov
xlat
inc
cmp
push
out
imull
test
xchg
or
adc
dec
popf
fistpl
in
dec
movsl
xor
adcb
inc
jecxz
cmp
add
adc
rorl
aad
sub
pusha
mov
movsb
dec
jns
stos
add
call
push
mov
in
push
popf
pop
popa
enter
pop
adc
ficomps
add
shrb
and
push
mov
inc
emms
mov
xchg
push
xor
inc
xor
pop
test
or
in
addr16
or
adc
pop
imulb
sahf
std
hlt
mov
jb
ljmp
inc
int3
push
xor
and
push
or
jns
cmp
xor
pop
pop
sbb
pop
xchg
or
cmpsl
inc
jecxz
mov
lods
pop
mov
mov
in
mov
aas
lods
leave
fcoms
cmpsb
in
cmp
lret
mov
mov
adc
in
xchg
cltd
mov
pop
dec
fildll
jnp
dec
xor
jnp
fsts
mov
adc
imul
test
shrl
pop
and
lods
sbbl
psadbw
jmp
cmp
cmp
fists
jbe
inc
xchg
lock
loopne
lcall
in
or
jnp
push
add
scas
and
inc
sbb
aas
xor
gs
ret
je
jno
dec
aam
lea
inc
das
nop
iret
fldcw
fisttpll
negl
and
test
xchg
mov
xchg
push
icebp
jl
imul
repz
and
mov
jmp
mov
fwait
test
mov
dec
jbe
out
jae
mov
xor
popf
lea
add
and
std
mov
stc
cmp
pop
adcb
scas
aam
adc
shl
orl
cmpsl
je
ja
and
sub
pop
jg
lock
into
push
pop
cmpsl
lcall
mov
sbb
or
jp
pop
aas
in
sub
adc
lcall
xor
jg
sbb
sbb
sbb
fucomip
push
mov
repz
dec
mov
lods
xchg
out
and
scas
fimull
or
lods
sbb
add
sub
jle
push
test
xchg
cmp
push
pop
push
movsl
or
adc
js
dec
stos
nop
fsubl
push
fcoms
testl
je
movsb
inc
cmc
jb
adc
test
push
cwtl
test
es
sub
xchg
in
push
sub
xchg
pop
loope
notl
dec
jmp
out
outsl
sub
fiaddl
mov
mov
and
in
icebp
dec
das
fmull
jge
mov
push
mov
movsb
into
xchg
inc
iret
movsb
push
pop
add
jl
mov
outsb
scas
adc
jns
xor
sbbb
loop
pushf
xor
les
outsl
lea
or
and
mov
or
add
dec
test
cmp
mov
stc
cwtl
lret
outsb
push
rcrl
jbe
pop
mov
add
pop
insl
cs
insb
jmp
adc
or
sbb
lret
addl
mov
sti
aas
ret
test
inc
das
add
aas
mov
sub
jl
push
inc
call
lds
mov
jae
mov
dec
sub
push
stos
inc
push
scas
xchg
xchg
out
lods
sub
xchg
mov
sbb
adc
stc
inc
sbb
and
adc
imul
orb
jge
mov
sbb
and
push
dec
pop
out
or
scas
sub
inc
cwtl
imul
add
add
and
mov
sub
mov
xchg
cld
jg
in
hlt
sbb
inc
rorl
mov
mov
shll
jnp
ljmp
jmp
or
jge
movl
and
outsb
scas
cmp
inc
sbb
movsl
push
push
outsl
mov
test
scas
rolb
enter
inc
cmp
and
iret
into
push
xor
or
sub
cmpsl
sbb
test
adc
call
mov
cmp
scas
popa
imul
std
movsl
pop
lret
aaa
adcl
xchg
fistpll
lds
pop
cmpsb
leave
adc
mov
popf
fbstp
sub
cld
xchg
jle
mov
faddl
add
or
cmp
mov
add
roll
and
lock
xchg
mov
adc
mov
dec
xor
cmp
enter
gs
stc
js
push
push
inc
cmp
aam
xor
or
fimuls
repnz
push
mov
adc
jmp
mov
lret
inc
lods
gs
cld
add
sub
push
inc
dec
into
insl
or
movb
mov
adc
xor
rorb
movsl
cmpsl
inc
into
mov
lea
dec
cltd
lds
cmp
mov
es
jmp
xchg
cmp
mov
sub
push
add
in
in
xor
mov
xchg
cmp
add
push
lahf
and
das
adc
lea
bound
lods
shr
insb
mov
xchg
inc
daa
pop
hlt
push
les
je
les
add
push
cld
stos
jb
dec
sbb
inc
cmpsl
popf
inc
loopne
or
je
rcrl
out
dec
xor
sbb
inc
cmp
gs
in
inc
push
jae
inc
lods
push
xchg
inc
and
jge
shll
andl
add
and
cli
xchg
jg
jns
jmp
jge
and
movsb
dec
sub
cmpsb
jecxz
jns
push
dec
push
inc
mov
bound
xor
xchg
jmp
and
int3
pop
ds
pop
lahf
fwait
inc
xchg
call
cmpsl
adc
push
xlat
mov
jge
js
stos
inc
arpl
jbe
cltd
add
mov
mov
in
xlat
jae
dec
pop
push
repnz
add
scas
lret
inc
push
and
inc
gs
aaa
jae
mov
out
mov
pop
inc
or
jbe
int3
sti
rcr
xchg
dec
addr16
sbb
mov
pushf
xor
outsb
sbb
inc
pushf
rolb
sti
jmp
or
pop
ret
fsubr
pop
out
fistpll
push
sahf
or
dec
dec
fs
hlt
lcall
iret
mov
sub
bnd
fwait
movsl
out
lcall
fwait
leave
or
ss
or
mov
or
fists
out
sarb
fs
adc
into
or
loopne
inc
cmc
cmp
inc
lahf
sbb
sub
pop
add
mov
sbb
push
repnz
jnp
adc
mov
lods
dec
jecxz
out
jns
scas
jo
test
out
stos
loope
sub
cmp
pop
lcall
mull
jae
out
out
inc
popf
rcl
dec
push
int
jg
icebp
push
sbb
imul
lea
sti
in
dec
cmp
xor
rcr
jp
and
test
xchg
mov
es
divl
pop
mov
jg
mov
sub
repnz
mov
sub
push
cli
sub
cmp
adc
fs
in
rcrl
mov
add
sti
sti
inc
ja
push
sub
inc
mov
dec
out
jne
sub
xchg
aad
dec
and
lods
jae
lock
jmp
sub
sbb
and
call
loop
cmp
add
popa
push
mov
imul
je
subb
in
inc
decl
jge
sbb
cmpsb
lock
ljmp
sti
lock
repnz
mov
adc
rolb
xor
pop
pop
adc
cmc
les
mov
adc
push
cmpsl
push
push
movsl
int
outsl
mov
fimuls
lds
xor
xadd
scas
iret
sub
shrl
cltd
sub
out
sub
insl
test
push
add
aaa
mov
mov
pop
jge
push
dec
insl
pop
ret
add
jecxz
mov
idivl
sub
scas
dec
pop
xchg
je
sub
int3
pusha
cmp
cmpsl
pop
push
cwtl
xchg
mov
cmp
pop
pop
daa
outsl
mov
test
stos
test
jns
clc
inc
icebp
jns
dec
xor
nop
push
xchg
mov
cli
ficoms
push
mov
cmp
dec
mov
jl
jg
xchg
fcmovb
push
iret
mov
sub
dec
int3
sub
and
pop
stos
daa
dec
fistps
and
les
ret
mov
pop
in
mov
pand
dec
mov
ja
dec
pop
mov
jno
shr
fwait
es
lock
inc
aaa
mov
fists
sahf
add
jbe
pop
addr16
add
stos
sub
adc
addr16
andb
mov
cmpps
sub
xlat
out
insl
xchg
daa
movsb
in
mov
std
inc
and
xchg
add
data16
insl
sbb
mov
insb
repnz
stos
sbb
jae
cwtl
adc
push
mov
and
ret
mov
out
lock
enter
test
aaa
test
push
sub
add
stc
jmp
std
mov
or
adc
dec
sbb
sub
xchg
push
mov
rcr
dec
in
test
mov
fs
scas
mov
jge
xchg
push
pop
push
call
out
imul
out
jbe
lea
rcr
inc
cmp
sahf
pop
push
roll
lret
loope
cmp
jnp
popa
sub
push
and
or
cmp
or
out
int
cld
jbe
popa
sub
outsl
jno
mov
ret
pop
int
imul
push
sbb
jecxz
jmp
aam
cmp
jbe
sub
lea
xchg
add
shlb
fistl
aam
cmp
loope
xor
xorb
vunpckhps
inc
lret
ret
icebp
lcall
sbb
in
mov
out
add
mov
repz
xchg
ljmp
add
mov
fnstcw
lret
je
xchg
out
dec
vmovlpd
mull
inc
and
lea
int
outsb
and
out
add
mov
xor
lret
pop
cltd
icebp
sbb
cld
mov
xchg
sub
stos
and
jge
fsubrl
push
mov
loope
mov
shll
repz
aaa
je
cmp
imul
call
cmp
outsl
fildll
mov
xchg
dec
subl
mov
test
dec
popa
ljmp
popf
jno
add
cmp
fsubrs
dec
loop
test
cmp
fldl
mov
fists
jnp
mov
push
pop
int3
mov
mov
xchg
add
cmp
out
pop
or
inc
cwtl
pop
lret
lret
inc
cmpsb
inc
mov
ror
pop
mov
add
jecxz
mov
mov
jmp
out
or
aad
push
mov
jno
or
jne
outsb
mov
sub
sahf
adc
jp
ffreep
and
ret
neg
imul
sbb
hlt
jle
or
mov
xor
fildll
jo
and
dec
xor
enter
cmp
lahf
pop
fwait
pop
lcall
sub
cmp
jp
clc
inc
stc
mov
mov
inc
testb
xor
inc
dec
push
bound
divl
xchg
shr
dec
xor
jns
adc
rcrl
lods
sbb
mov
jge
sub
sbb
xchg
inc
cli
mov
mov
in
mov
outsb
ficoml
xchg
sub
into
xor
cmpsl
loope
popf
shll
jne,pt
mov
in
sbb
xlat
cmp
jmp
inc
popf
push
push
pop
add
inc
in
scas
inc
push
jge
test
cli
push
xor
sbb
fistps
nop
or
pushf
orb
xchg
lret
hlt
jmp
aam
jns
sbb
fadds
fadds
test
sbb
jge
fistpll
leave
mov
stos
test
inc
push
pop
leave
cmp
jb
push
mov
jbe
add
sahf
xorl
push
dec
int3
mov
aas
mov
or
divb
loope
lret
outsl
fcompl
dec
std
push
adc
cmp
int
inc
jnp
subl
pushf
push
inc
inc
jae
xchg
pop
inc
aas
mov
pop
jg
pusha
jnp
enter
push
mov
mov
sub
sbb
sbb
sub
cmp
or
orl
andl
enter
bound
mov
lods
stos
cwtl
clc
pop
cmp
rcr
ret
jp
lea
idivl
sub
mov
fldenv
out
jbe
addr16
repnz
sbb
jge
mov
cmpsb
shll
js
jp
mov
scas
mov
ret
out
mov
xchg
sub
inc
jmp
mov
mov
push
inc
push
cmp
fdivr
mov
cld
test
pop
mov
dec
in
add
dec
push
add
inc
inc
cmp
jne
jp
push
inc
xchg
sbb
sbb
mov
sbb
sbb
dec
nop
dec
fs
scas
sbb
repz
sbb
adc
fists
and
cmpl
pop
cltd
xlat
lods
addr16
mov
or
fldcw
mov
ja
dec
inc
loop
and
xchg
bound
mov
stos
xchg
insb
xor
and
mov
fdivl
push
jle
or
pop
mov
pop
insl
icebp
sbb
push
add
insl
lock
lret
ret
in
pop
data16
mov
add
add
xor
imul
test
mov
outsb
ss
push
nop
je
push
lret
mov
iret
fcmovne
dec
arpl
mov
inc
mov
mov
add
mov
enter
add
jb
enter
gs
sbb
mov
clc
loopne
mov
sbb
fcomp
and
fwait
imul
xchg
daa
fwait
aaa
mov
cmpsl
and
icebp
imul
arpl
mov
push
outsb
mov
movsl
mov
in
out
and
test
pop
mov
aas
jmp
fisubs
testl
mov
repz
pop
jne
popa
clc
jo
xchg
sub
jae
push
loopne
incl
js
shrl
cld
push
stos
cltd
push
pop
mov
test
mov
scas
sti
mov
dec
add
adc
bound
mov
fsubr
stc
cmp
push
sbbl
mov
xchg
jge
adc
negl
add
ds
add
mov
test
rol
mov
adc
scas
xchg
shl
jg
xchg
mov
adc
mov
les
aam
test
cmp
or
jmp
dec
jmp
push
or
or
dec
mov
cmp
mov
int
sbb
jne
cmp
jns
cltd
push
cltd
sub
pop
in
imul
call
mov
fs
dec
and
inc
cmpsb
cmp
xchg
loope
cmp
pop
xor
pop
xor
xchg
xchg
lea
push
das
mov
loopne
sbb
sbb
ss
mov
dec
and
push
cmp
jg
mov
dec
ds
xchg
sub
loop
push
aam
xor
xchg
add
add
add
or
clc
mov
addl
movsb
jne
or
sbb
and
xor
lds
and
jbe
mov
pop
dec
mov
dec
xchg
and
pop
in
cmp
xchg
fmuls
les
dec
mov
shll
xchg
lea
icebp
sub
scas
sbb
mov
pop
dec
sbbb
jmp
fstpt
idivl
je
in
push
sub
jbe
imul
pop
adc
ss
int
stos
testb
xor
pop
ret
mov
mul
cs
mov
xor
xchg
fldenv
out
mov
sbb
pop
sbb
xchg
popa
push
adc
hlt
xchg
push
sub
arpl
ret
jae
cmc
and
xor
subb
mov
adcb
mov
rolb
push
or
and
or
and
lret
mov
cmp
inc
fcompl
scas
fldz
mov
or
fcomi
push
aaa
fimull
dec
push
rcrb
xadd
xchg
lods
cmp
fimuls
mov
sbb
daa
fbstp
ds
adc
outsl
push
push
xchg
icebp
js
int3
mov
into
shl
pusha
inc
add
dec
aad
fldt
lds
jl
cmp
test
push
aas
inc
push
adc
jmp
shlb
adc
repz
jne
pop
jp
sbb
cld
sbb
mov
pop
xchg
jbe
pusha
inc
rolb
pop
or
cmpsb
outsl
leave
stos
jmp
pop
cmp
les
scas
add
jl
sbb
sbb
mov
cli
orb
xchg
mov
cmp
mov
int
bound
push
sub
lods
fisttps
jnp
fisubrs
xor
cld
cmpsb
das
shl
sub
mov
out
repz
ret
test
mov
sub
push
mov
lds
and
std
out
dec
test
jg
or
xchg
dec
nop
iret
test
cmc
jge
aam
xor
inc
push
outsb
repz
fwait
mov
lods
neg
sbb
add
sub
inc
fsubrp
lea
add
out
adc
sub
xor
dec
mov
ds
repz
imul
wbinvd
cmc
shl
mov
inc
rorl
xor
aam
pop
sub
cs
out
mov
inc
scas
jg
xchg
fnop
mov
fisubs
mov
xchg
rorl
popf
inc
in
lds
cmp
jb
and
mov
mov
ds
adc
pop
or
out
pop
pusha
jge
fs
push
and
int
testb
mov
or
xchg
adc
aam
outsl
push
add
mov
cmp
push
xchg
xorb
pop
lret
cld
ljmp
out
out
fsubs
and
fiadds
mov
xor
cs
je
mov
loope
inc
push
insl
ret
scas
or
mov
imul
mov
or
adc
push
cs
xor
pop
lret
xchg
sbb
fstl
nop
movsl
push
pop
fldt
das
outsl
ja
jno
add
pop
push
sbb
test
ficomps
pop
cmp
ja
jbe
mov
hlt
adc
lahf
lock
or
mov
and
cmp
std
js
ficomps
push
push
inc
add
mov
cld
mov
add
pop
inc
pop
push
insl
lods
push
xchg
lcall
fcomps
mov
add
adc
mov
and
or
loop
test
call
xchg
sub
mov
aam
pop
popf
in
and
mov
aas
dec
push
push
xor
jg
mov
mov
inc
mov
cmp
push
pop
add
pop
lea
jecxz
les
lock
imul
popa
sub
cltd
das
outsl
movsl
and
shrb
scas
pop
add
cld
sbb
in
mov
ss
jmp
shrl
mov
and
es
or
mov
cmp
jl
adc
pop
or
sub
xchg
cmp
test
test
aaa
scas
and
mov
movsl
xchg
mov
add
popa
xchg
lret
mov
subb
push
cmp
ficompl
push
dec
into
jno
fwait
pop
jmp
ret
xchg
push
mov
std
leave
sbb
push
imull
add
test
call
daa
and
xchg
mov
pop
mov
mov
push
leave
xor
push
push
cs
ret
test
jl
scas
fidivl
cltd
fistl
movsb
call
push
push
shll
pop
sbb
pop
andl
cs
dec
mov
ljmp
movsw
mov
mov
jno
popf
sti
sub
pop
xchg
mov
stos
jl
je
ja
push
add
fsubs
jecxz
add
into
xor
add
jo
stos
fs
push
rcr
mov
cmp
sub
sti
inc
dec
stos
gs
and
push
adc
push
push
fs
push
pop
xchg
and
cmp
sub
cmp
mov
aad
mov
cmp
jno
or
pop
cmp
cmp
outsb
sub
leave
cmp
inc
dec
test
mov
or
pusha
das
jecxz
cmc
adc
mov
xchg
xor
cmp
cli
xchg
cmp
lods
and
ja
add
ss
out
lahf
fcoml
lea
clc
push
inc
xor
fdivr
dec
sbb
xchg
push
cmp
je
sbb
adc
dec
mov
fsubs
out
inc
aam
pop
les
in
scas
gs
andb
xorb
daa
jge
xlat
in
mov
mov
aad
insb
scas
cmp
mov
test
les
jo
sarb
ljmp
in
add
sbb
loopne
sbb
xchg
fisubrl
sub
xchg
inc
push
jno
lret
movsl
mov
popf
dec
pop
rol
test
mov
cmpsl
inc
sub
cld
mov
add
push
sub
fdivrp
sar
sbb
adc
fcoms
cmp
loopne
loopne
mov
xor
repz
clc
outsl
enter
movsl
sbb
dec
dec
loopne
xlat
outsb
jnp
aam
aas
mov
sbb
pop
lcall
xor
cld
shrl
sahf
pop
mov
mov
or
or
iret
aad
jle
push
or
out
cld
mov
push
popf
mov
test
dec
xchg
dec
cmc
add
dec
add
jmp
cmc
push
insl
addr16
mov
xor
sahf
es
outsb
shlb
lcall
bound
push
arpl
arpl
inc
fiadds
jg
xor
cld
clc
in
or
and
stc
loope
xor
adc
test
push
lret
cmp
adc
jb
push
dec
inc
in
inc
pop
jle
jmp
pop
in
push
push
dec
dec
shrb
cmp
add
xchg
mov
jns
sub
xchg
cmpsb
sbb
aaa
xchg
pop
sub
cli
gs
insl
push
inc
cld
ja
out
in
jns
and
int
lods
sub
insl
ljmp
mov
xchg
cmp
fwait
std
adcl
add
ljmp
mov
xorl
inc
cld
add
jle
out
and
mov
add
enter
test
jno
dec
inc
jmp
pop
out
dec
xchg
pop
push
jecxz
enter
jnp
js
add
daa
and
add
insl
js
jge
icebp
roll
iret
jmp
jle
jge
inc
fldt
mov
xor
mov
adc
mov
or
loop
arpl
adc
pushf
add
cmpsl
push
xchg
pop
push
mov
fsts
loopne
mov
pop
push
jne
inc
mov
jo
mov
sbb
hlt
adc
xchg
add
nop
arpl
lds
hlt
test
cmp
shlb
cli
or
pop
xchg
mov
inc
add
in
xchg
jmp
mov
adc
cmp
mov
test
scas
faddl
addr16
mov
mov
lock
call
shrb
shl
push
push
pop
enter
lods
jbe
ja
cmc
out
jae
push
stos
not
xor
sub
aam
mov
test
cltd
fidivs
adc
xor
cmpsl
dec
mov
push
cmp
stos
dec
lea
in
iret
out
cmp
mov
adc
xchg
cmp
pusha
push
rolb
fisubrl
and
mov
adc
sub
int
inc
hlt
int3
mov
or
mov
pop
data16
pop
jge
push
popa
dec
test
adc
lahf
add
push
daa
pop
sti
jp
cmp
jnp
out
or
mul
sahf
int
push
inc
xchg
xchg
pop
pop
movsb
loope
xchg
dec
and
and
inc
add
pop
pop
maskmovq
divl
cmp
xchg
sub
dec
dec
lahf
imull
adc
push
stos
add
mov
push
mov
xor
addr16
fs
lods
mov
cld
lods
sub
pop
xor
mov
push
jg
adc
in
jl
cmp
xor
pop
xchg
jmp
cld
cltd
inc
push
fistpl
orl
loope
rcrb
pop
nop
js
ljmp
sub
testb
cmp
mov
int
mov
or
xchg
jle
fsubl
ljmp
mov
adc
xchg
insb
mov
orb
fwait
icebp
jle
adc
dec
jge
rcrb
and
shl
add
inc
sub
pop
enter
cmpsb
inc
lock
dec
out
fdivrs
mov
push
adc
sti
ss
mov
enter
or
arpl
pop
push
test
popa
mov
les
mov
leave
loope
xchg
xorl
mov
cs
cmc
inc
xor
mov
inc
sub
add
adc
leave
xor
incl
mov
dec
add
pop
push
call
cmp
fstps
les
and
pop
fcmove
lret
add
mov
xor
je
pop
and
or
inc
mov
mov
dec
stc
test
into
dec
jle
sub
pop
push
dec
pop
add
adc
daa
fcomi
and
fisubrl
fwait
and
lods
bound
clc
mov
xchg
jns
pop
ret
fildll
or
jmp
mov
into
addb
adc
mov
pop
test
ss
pop
sbb
dec
mov
dec
fimuls
pop
inc
xchg
pop
int3
inc
push
mov
jb
and
popa
loope
pop
std
xchg
cld
rolb
addr16
fs
fucomip
mov
ds
jo
dec
lods
int3
jns
insb
call
clc
sbb
fsts
add
xchg
adc
jne
and
jno
ret
sbbl
out
scas
push
dec
loop
outsb
les
add
pause
and
push
dec
mov
push
imul
cmp
outsl
lods
scas
imul
mov
xchg
xor
pop
and
push
in
mov
adcb
adc
sub
smsw
arpl
pop
ret
mov
and
mov
push
xor
cmc
cmp
sub
arpl
fnstenv
mov
insb
loopne
push
fstpl
cmp
inc
cld
add
cltd
mov
jecxz
push
testl
adcb
fwait
sub
cld
bound
mov
xchg
jns
jg
pusha
dec
xor
xchg
push
aaa
mov
addb
jle
dec
inc
out
pusha
outsl
dec
outsb
test
popa
pop
subb
push
jns
test
pop
inc
fsubrs
pop
add
repnz
mov
je
in
add
sbb
xor
imul
jb
adc
lods
or
mov
repnz
ja
add
pushl
arpl
sub
xor
xlat
in
adc
push
outsb
cmp
cmpsb
fcoml
fldcw
fldt
data16
test
fxam
jg
cwtl
loop
fidivl
sub
or
push
jmp
mov
lret
mov
jns
mov
shll
xchg
adc
cmpsl
or
std
pusha
add
scas
dec
out
in
and
sbb
mov
jno
mov
xor
sub
jecxz
jmp
push
sbb
pop
adc
fwait
lods
xchg
daa
or
je
pop
or
orl
mov
cltd
or
add
cltd
rcrl
rcrb
add
cmp
imul
sahf
dec
loope
fsubrl
jnp
push
out
adc
fsub
xor
add
adc
and
cmp
ds
add
push
dec
pop
jmp
inc
loopne
pushl
xor
sbb
test
hlt
out
mov
mov
xchg
jo
push
adc
xlat
and
loope
movsl
jl
inc
ret
lcall
xchg
dec
mov
sbb
push
int
cmc
movsl
and
pop
ffreep
scas
and
popa
or
test
mov
or
pop
push
in
cmpsl
push
out
arpl
cmp
sbb
in
sbb
push
stos
nop
dec
push
mov
movsb
imul
sub
mov
pop
adcb
fwait
pop
enter
add
hlt
daa
das
pusha
fcmovne
dec
and
loopne
sub
dec
cli
add
fiadds
lods
into
add
enter
int
imul
es
xor
mov
adc
frstor
push
mov
stc
jne
pop
and
mov
add
cmp
test
xor
loop
adc
pop
mov
mov
push
cmp
lcall
jp
adc
dec
push
and
add
mov
adc
fistpll
ficoml
dec
orl
or
jb
addr16
inc
mov
lret
xchg
ss
repz
jp
divb
in
ror
and
add
repnz
add
shlb
dec
fs
or
sbbb
cmp
mov
hlt
hlt
aaa
jbe
mov
inc
mov
adc
and
aaa
cmp
shr
adc
dec
in
arpl
inc
das
jle
dec
leave
fs
inc
cmpsb
and
pop
mov
push
fwait
sbb
add
repz
pop
add
sbb
cmp
out
sub
sub
mov
mov
dec
jge
cmpsb
jp
adc
shl
pop
ret
rcrl
push
sbb
hlt
mov
jle
outsb
pop
das
xchg
ja
xchg
sub
mov
ljmp
or
xchg
push
add
aam
in
mov
xchg
aam
ljmp
andb
sbb
pop
seto
addl
push
sbb
lret
cmc
jle
rorl
roll
dec
addb
mov
insl
pop
lcall
loop
test
cmc
mov
pop
ja
add
adc
push
test
xor
inc
call
sbb
mov
scas
fistpll
push
es
mov
pop
filds
jnp
inc
push
cmp
xlat
ret
loope
data16
popf
pop
clc
sub
cli
xor
xchg
pop
orb
cli
mov
jns
outsb
and
repz
loopne
mov
mov
add
out
aam
rol
cmp
scas
or
mov
roll
add
or
in
jne
orb
inc
push
pop
loop
pushf
pop
lds
mov
jno
sub
insl
xor
repnz
cmpsl
imul
sbb
movsb
mov
test
xor
pop
repz
push
fdivr
inc
lahf
cmc
cs
dec
jno
and
scas
pop
dec
jl
fadd
inc
sbb
sbb
sbb
sub
movsb
xchg
and
pushf
xrelease
lcall
adc
mov
das
aam
and
jmp
lock
xchg
sbb
adc
inc
xor
adc
mov
fsubr
lret
adc
and
movsb
push
push
xor
addl
sbb
adc
add
andl
sahf
mov
pushf
xor
test
fcmovnb
pusha
gs
in
xchg
imul
jecxz
mov
daa
dec
adc
pop
xor
and
push
test
imul
push
mov
adc
clc
and
test
test
fwait
into
and
cmp
adc
cmp
fadds
and
jmp
jmp
mov
jg
cmp
xor
das
push
repnz
adc
rcr
inc
adc
mov
js
gs
test
add
das
xor
into
in
or
dec
enter
dec
jae
inc
mov
mov
xor
imul
or
dec
daa
sahf
mov
std
dec
cmpsb
or
ds
das
movsl
nop
jle
mov
cs
push
mov
add
xchg
inc
js
jmp
cmp
mov
push
jb
orl
pop
jl
inc
adc
inc
das
sub
jns
and
mov
sub
in
lea
leave
xlat
adc
int3
cwtl
xlat
jbe
loope
and
sbb
cmpsb
adc
cmpsl
dec
xchg
dec
js
data16
daa
lea
lea
push
jmp
add
mov
push
imul
test
inc
push
shll
jo
sub
jo
pop
fisttpl
push
mov
test
cmp
and
rolb
push
shrb
inc
orb
mov
imul
push
and
out
push
icebp
enter
and
add
repz
jecxz
fucomp
bound
lret
jmp
push
jle
inc
inc
mov
fistpll
addr16
sbb
popf
sub
lret
and
mov
xchg
les
popf
test
addr16
mov
test
repz
lods
pop
test
cs
and
test
pop
outsb
sbb
imul
push
xchg
int3
mov
push
lods
les
iret
or
inc
ret
mov
xorb
fstl
loop
test
out
in
cmc
jmp
mov
jecxz
movsl
xchg
push
test
das
mov
mov
push
add
cmp
cld
push
jecxz
sbb
insl
in
in
int3
pop
cmp
pusha
mov
mov
push
adc
xchg
in
test
call
push
inc
sub
jo
jge
cmp
or
stc
jg
aas
cmp
jl
fnstsw
jae
lcall
repz
icebp
inc
mov
xchg
pop
repnz
in
shll
push
mov
mov
add
sbb
shlb
dec
pushf
mov
mov
ffreep
mov
sub
and
pop
jb
rorb
push
daa
mov
popa
mov
ds
push
push
subb
cwtl
ljmp
add
cwtl
movsb
or
imul
in
lds
add
adc
dec
inc
iret
adc
xchg
mov
popf
pop
cs
push
ss
mov
push
lret
sbb
test
test
mov
je
and
mov
adc
adc
dec
std
xchg
xchg
inc
out
pop
cmp
or
lcall
fbstp
cmp
mov
mov
iret
jo
repnz
and
in
sbb
xchg
adc
or
inc
pop
cmpsl
enter
add
or
add
lods
adc
push
imul
fstps
gs
in
add
xchg
jmp
arpl
pop
je
or
jno
test
cmp
and
movsl
jb
out
push
pop
pusha
fwait
out
pop
lcall
add
mov
and
pop
cmp
jb
sbb
sbb
push
sar
cs
into
and
inc
enter
adc
xor
fistps
mov
mov
out
faddl
shl
dec
test
cmp
cmp
mov
leave
mov
inc
mov
sahf
xor
jle
cli
dec
xchg
dec
movsl
cwtl
sub
dec
xorl
test
adc
fwait
shl
or
in
mov
mov
mov
mov
bound
pop
arpl
shll
or
cmpl
inc
jecxz
out
fmuls
push
cmp
push
sbb
pop
add
popf
int3
lret
jp,pt
pop
adc
mov
or
sub
or
and
addr16
push
cmp
adc
lahf
sub
mov
sub
aam
push
popf
popa
cmpsl
inc
and
shl
sbb
jg
sub
dec
iret
bound
rcl
mov
hlt
inc
repnz
jbe
stos
popf
lods
repnz
jge
push
adc
jg
ret
lahf
jb
mov
jno
push
mov
icebp
stos
xor
sub
pop
adc
lods
subl
mov
inc
jns
pop
mov
pop
pop
pop
cmp
mov
filds
or
inc
cmc
push
out
dec
inc
add
std
shll
inc
insb
fisubrs
lock
subb
jo
cli
jg
xor
adc
mov
jmp
adc
and
push
decl
cmp
cmpsb
cmp
jbe
enter
cmp
xlat
mov
dec
ds
xor
sub
cmp
jp
sbb
cld
ret
jle
insb
push
cmc
clc
or
cmp
pop
imul
adc
insb
in
jo
dec
or
jb
sbb
pop
jl
mov
icebp
ds
mov
test
pushf
frstor
pop
sbb
ds
or
sub
push
jecxz
add
or
push
adc
xor
or
adc
popa
das
stos
test
pop
dec
mov
fs
mov
addl
clc
dec
jmp
fisubrs
idiv
mov
sbb
or
loope,pn
lock
rcrb
cmp
testb
cs
stos
cmp
dec
jb
dec
fistpll
in
xchg
rcll
adc
pushf
cwtl
mov
jns
out
jns
aas
mov
xchg
dec
cmc
jns
divl
in
fwait
dec
pop
fcoms
jnp
cmp
or
jle
mov
sbb
out
push
call
xchg
test
addr16
sub
insb
out
sub
and
mov
xchg
mov
and
add
mov
mulb
xchg
shl
pop
mov
icebp
imul
out
repz
sbb
or
aas
and
jmp
add
cmpsb
test
or
ret
mov
pop
pop
mov
mov
jb
aam
notl
inc
mov
sub
iret
xchg
jge
popf
jae
adc
cld
lret
notl
fldl
pusha
in
or
subb
xchg
cmp
push
xchg
movsb
pusha
faddl
jbe
hlt
lcall
push
sub
test
cmp
icebp
dec
jp
fwait
xchg
jns
rolb
cmp
cltd
fimuls
jmp
inc
mov
icebp
pop
sbb
insl
mov
mov
mov
jo
pushf
inc
fwait
lcall
scas
lds
stc
jb
fwait
mov
adc
mov
push
jl
pop
pop
lock
pusha
xor
mov
xor
adc
pop
icebp
mov
sub
rcll
add
nop
data16
insl
sahf
push
int
lea
add
leave
lock
jns
mov
sbb
jnp
jb
idivb
mov
sti
inc
iret
jmp
mov
cmp
add
jne
jp
mov
pushf
cmc
in
adc
aad
pop
xor
mov
xor
sbb
dec
jge
pop
or
or
sbb
mov
mov
mov
cmp
pop
or
push
fisubs
mov
cmpl
sub
cmp
mov
fbld
and
fildl
mov
mov
push
push
dec
and
mov
negb
mov
outsl
xlat
mov
call
fwait
xor
sbb
pop
leave
ret
add
mov
push
mov
sub
out
adc
xor
je
rclb
adc
stos
pop
int3
in
jle
mov
mov
or
int
and
xchg
out
scas
in
xchg
cltd
movsl
cld
daa
push
push
sub
sbb
xor
ja
jg
or
sub
mov
leave
xchg
jge
mov
sbb
mov
adc
sbb
out
sub
dec
shll
repnz
pop
call
mov
fwait
lods
push
cmovne
in
xor
jno
test
xchg
les
enter
sbb
mov
dec
cmpsb
repnz
jecxz
gs
int
pop
mov
stos
push
cmp
jne
shll
cmpb
mov
cmp
test
mov
xor
hlt
aaa
inc
fdiv
mul
sbb
movsl
outsl
xlat
jo
nop
push
pop
sbb
ja
push
das
movsl
cmpsl
mov
aam
mov
or
dec
inc
mov
in
mov
imul
mov
adc
daa
push
scas
dec
add
imul
cmp
mov
push
push
out
pop
adc
inc
push
pop
outsl
imulb
xchg
cwtl
ficompl
jg
loopne
popa
dec
add
dec
out
outsl
sbb
dec
inc
scas
mov
mov
mov
jne
test
xchg
addr16
in
scas
mov
dec
xor
fldcw
aas
inc
nop
inc
add
int3
xchg
addl
mov
aad
xor
add
sar
inc
xlat
inc
xchg
fs
out
rcrl
inc
push
ret
mov
lock
movsb
dec
or
push
les
sbb
loope
cmpsb
mov
in
rcll
jo
push
xchg
sahf
and
out
ret
adc
outsb
xchg
test
stos
sub
data16
xor
into
dec
adc
mov
test
and
jne
gs
je
xor
movsl
call
movsl
outsb
jg
xchg
pop
sbb
pusha
adc
loop
inc
subb
and
nop
mov
push
mov
js
add
cmp
test
mov
sub
test
outsb
cmpsl
mov
mov
pop
cmp
stos
mov
daa
fstpl
mov
cld
mov
aad
fstpt
rcll
movsb
cwtl
fs
addr16
pushf
es
adc
push
cmpsb
fstps
add
push
mov
mov
adc
int
push
mov
pop
aad
sub
adc
hlt
loopew
sti
aad
test
outsb
lret
sbb
or
fwait
xor
dec
ljmp
add
insl
inc
mov
cmp
jne
mov
dec
insl
popf
movsb
inc
in
pop
int3
scas
dec
mov
data16
inc
cmp
or
and
cmp
in
test
arpl
pop
stos
add
cmp
test
xor
iret
dec
insl
mov
cmp
pop
int
mov
mov
inc
add
mov
scas
push
into
cmp
mov
sbb
cmp
and
daa
pop
pop
ljmp
xchg
mov
or
iret
push
and
inc
sub
out
scas
sub
add
iret
loop
aad
push
insl
in
orb
mov
xchg
loope
rcr
inc
in
sbb
dec
push
adc
add
inc
mov
ds
push
xchg
insl
push
pop
xchg
mov
fdivrl
xchg
cltd
mov
inc
lcall
or
lcall
es
xlat
enter
or
and
mov
popa
jmp
xchg
jnp
jb
xor
inc
stos
ljmp
pop
add
out
inc
cmpsb
repz
cmp
mov
enter
aam
ljmp
or
cmpsl
adc
imulb
push
push
dec
repz
push
cmpsl
mov
or
mov
rcrb
pop
les
pop
push
mov
or
ds
leave
call
xchg
push
push
js
test
sub
adc
sbb
into
cld
inc
insb
dec
clc
inc
xor
and
bound
adc
pop
inc
push
loope
xor
push
push
pop
std
imul
lds
les
push
xchg
adc
bnd
cs
jno
stos
and
push
inc
out
int
fwait
dec
xchg
mov
pop
or
movsl
dec
lock
scas
mov
js
fisttps
mov
jb
les
loopne
in
fcmovnu
xchg
push
jb
outsl
mov
push
imul
jbe
je
orl
dec
rcr
fcomps
mov
sti
jno
mov
in
out
jmp
push
xchg
mov
add
fwait
ss
xor
sti
xchg
sbb
imul
in
or
push
into
add
daa
scas
push
mov
ret
or
stos
aam
fs
xor
jmp
xor
daa
je
js
and
loopne
filds
push
or
loop
test
sti
dec
in
lcall
aam
icebp
inc
push
add
xchg
in
mov
ja
popf
lret
xor
push
cmp
jns
js
cltd
shlb
je
push
pop
imul
aaa
lods
mov
or
js
loop
jo
lea
addr16
mov
call
mov
popa
sbb
loopne
inc
add
inc
and
addr16
inc
inc
popf
sbb
mulb
rolb
sbb
cli
imul
push
ret
aas
int
aas
in
add
sahf
daa
ds
sbb
lock
out
dec
mov
mov
or
jnp
mov
pushf
mov
das
mov
in
dec
sarb
fbld
lret
cltd
aam
sbb
add
mov
sbb
mov
lcall
ds
pop
imul
std
out
aad
pop
mov
jp
shll
push
cmp
mov
push
cmp
mov
adc
imul
addr16
clc
mov
stos
mov
sahf
xchg
repnz
sub
les
rclb
sbb
cwtl
xchg
mov
sub
add
pop
push
addb
aam
pop
jnp
lods
ret
push
enter
jo
outsb
pusha
ss
jno
dec
mov
or
and
repnz
xor
pop
pop
sbb
hlt
jmp
bound
cmp
lcall
mov
hlt
mov
in
out
sub
int
test
ret
mov
adc
mov
push
enter
xchg
cmp
cwtl
push
dec
cmp
sub
cltd
testb
sub
inc
xor
pop
sarl
pop
leave
lea
test
imul
iret
xor
stc
stos
in
lds
ljmp
popa
mov
and
gs
xor
faddl
test
fldenv
pop
xchg
cmp
fildll
lahf
adc
rorl
movsl
sbb
add
add
loopne
ret
xlat
popf
jo
mov
shrl
gs
inc
cs
xor
jl
pop
jecxz
les
or
hlt
xchg
testl
sbb
arpl
inc
test
stc
jge
inc
fldcw
xchg
movsb
sub
cmp
pop
jmp
push
lods
lcall
lret
lcall
mov
mov
mov
mov
lret
aaa
subb
popa
mov
cltd
dec
push
pop
add
push
inc
cwtl
lahf
xchg
sti
lock
into
sbb
sbb
or
repz
inc
lret
pop
dec
incl
adc
adc
test
leave
push
lods
push
and
cwtl
iret
pop
jns
fs
pop
das
xor
adc
inc
mov
cmp
sub
aad
outsl
dec
testb
fwait
icebp
push
sbb
movsb
into
imul
lss
fcomps
pop
push
mov
imul
fistl
inc
mov
pop
icebp
xorb
fdivrs
sbb
sub
cld
push
dec
lods
ja
and
mov
ret
into
push
or
out
add
jl
test
or
and
dec
es
clc
cmp
test
jle
jge
push
std
lea
pop
fidivl
out
sbb
imul
pushf
adc
push
sub
es
bnd
mov
cmpsb
pop
mov
ljmp
popf
xchg
jnp
cmpsb
js
dec
mov
scas
xchg
subb
imul
fdivs
dec
sar
xor
les
mov
movsb
pop
pop
xchg
aad
clc
cmpsl
dec
ds
xor
lcall
in
dec
mov
jns
pop
pushf
cs
rorb
in
rorl
dec
mov
pusha
sahf
sar
lret
and
push
add
aam
call
les
imul
jbe
out
cmp
inc
jns
inc
and
adc
test
out
jge
add
pusha
and
dec
imul
and
jne
dec
cmp
inc
out
mov
mov
mov
es
push
push
pop
and
insb
lea
mull
mov
test
add
add
push
shl
jb
test
sbb
test
nop
fiaddl
ret
sbbb
jmp
cmp
iret
insl
sbb
mov
loopne
cli
outsl
mov
or
movsb
and
popa
sahf
mov
mov
sbb
pusha
inc
cmpsb
stos
lret
mov
das
jecxz
push
mov
mov
out
inc
mov
add
decl
lcall
gs
xchg
cmpsb
loopne
int3
jne
stos
cmp
mov
cs
pusha
mov
rcrl
sub
das
clc
sbb
enter
mov
imul
jne
xor
fwait
xor
xchg
mov
out
rclb
xchg
mov
pop
in
adc
sti
add
ror
cmc
sbb
shl
sti
outsl
mov
scas
cmp
je
pop
sbb
xchg
fsubrs
das
movsb
push
sub
shrl
shlb
fsts
popa
or
pop
stc
cli
pushf
aam
dec
ja
addr16
jl
fdivs
enter
lret
inc
and
xchg
pop
movsl
out
mov
mov
and
dec
sub
xor
out
std
dec
sahf
or
outsl
scas
mov
jg
cwtl
dec
test
lea
cwtl
out
adc
mov
and
and
xor
addr16
push
test
push
sbb
sbb
daa
je
ret
or
icebp
lcall
push
cmc
sbbb
fisttpll
cmp
aam
loope
push
mov
mov
lcall
sbb
arpl
inc
sub
js
cmp
dec
outsb
mov
enter
cwtl
insb
sarl
loope
add
dec
test
aaa
mov
add
lcall
add
fildl
xchg
je
cmp
in
test
xor
dec
mov
mov
jns
in
out
lret
cmp
fdivrs
inc
pop
mov
mov
mov
fyl2xp1
fbld
or
lret
mov
js
into
nop
inc
mov
fcomp
out
fs
dec
mov
and
add
ret
js
push
jg
pusha
inc
inc
outsl
sbb
ret
inc
mov
lcall
dec
lods
xlat
cli
mov
push
cltd
test
daa
inc
out
insb
fs
stos
push
daa
xchg
insb
fs
xchg
in
push
pop
sarb
mov
aad
mov
jp
and
faddl
repnz
test
into
ficoms
out
fwait
hlt
pop
mov
pop
out
inc
sbb
adc
dec
jecxz
add
add
scas
call
mov
push
lahf
scas
daa
int
xchg
sahf
clc
jp
out
sub
psrld
inc
mov
sub
out
test
lea
mov
mov
pop
xchg
aas
bound
mov
call
mov
dec
mov
or
icebp
dec
stos
cmpsb
pop
shll
pusha
mov
and
clc
dec
push
roll
aam
loop
mov
mov
int3
clc
adc
mov
pop
in
push
jns
jle
mov
cmp
outsb
sbb
cwtl
int
sbb
jo
lea
ljmp
leave
sahf
hlt
sub
adc
loop
cmpsb
jge
arpl
mov
dec
call
jns
xchg
cmp
xor
push
test
mov
daa
sbb
ret
outsb
pop
inc
inc
fldl
adc
icebp
sahf
push
ficoms
aas
jp
push
test
inc
imul
test
mov
mov
cmp
dec
push
test
ds
out
pop
mov
jo
rcrb
dec
mov
std
jnp
cld
fiadds
sbb
cmp
pop
sbb
mov
and
fstps
clc
movsb
pusha
stc
add
push
ficomps
outsb
imul
xchg
inc
and
rolb
arpl
jmp
pop
movsb
aaa
lds
sarl
inc
push
jge
in
or
sub
popf
push
insb
mov
cmp
mov
dec
add
sarl
adc
mov
cmp
lret
cmp
data16
inc
movb
lock
mov
loopne
push
inc
pop
dec
icebp
out
or
pop
mov
std
enter
pop
icebp
in
mov
loop
fs
pop
jge
lea
xchg
lds
shlb
out
sub
mov
aaa
es
sbb
in
mov
and
addr16
and
sbb
lret
or
arpl
loope
push
dec
imul
add
icebp
inc
imul
xchg
mov
mov
clc
outsl
gs
lcall
xor
pop
inc
jmp
imul
adc
in
dec
mov
in
push
popa
fstl
jno
mov
xor
push
dec
mov
lods
int
ficomps
cwtl
sub
repz
push
mov
adc
orb
sub
daa
pop
cmp
lcall
out
enter
mov
add
cmp
pop
mov
dec
mov
jl
pushf
daa
xchg
push
mov
inc
pop
in
cs
xlat
fnstsw
xchg
mov
push
decl
mov
inc
fisttpll
xchg
mov
xor
cltd
add
inc
dec
rcrl
and
movsb
inc
shl
add
mov
adc
outsb
arpl
jp
dec
mov
shlb
stc
sbb
and
shl
pop
jns
push
cmp
std
test
lahf
iret
mov
mov
cmp
xlat
dec
inc
ja
push
push
adc
nop
jle
std
jge
mov
aaa
fs
mov
in
pop
add
iret
pop
and
jp
dec
data16
aaa
popf
sbb
push
lcall
mov
ret
repz
jo
into
dec
fstl
movb
xchg
or
pushf
out
popf
outsb
pop
mov
jb
dec
incl
jmp
mov
repnz
jbe
int3
imul
mov
pushf
addb
and
mov
jno
fsubrp
std
sti
in
mov
loop
jg
cwtl
mov
cmp
adc
imul
mov
ja
movsb
push
mov
cmpsl
sub
push
les
add
cwtl
lods
rcr
adc
arpl
insb
fcmovnb
or
mov
hlt
insl
and
idivl
int3
cmp
cmp
inc
cmpsb
enter
cmpsb
loop
pop
jo
fldenv
pop
inc
and
outsl
mov
es
or
sbb
inc
pop
adc
pop
call
adc
fsub
mov
in
mov
mov
ss
mov
mov
loopne
fcmovbe
cmp
cltd
adc
testb
lock
push
loopne
dec
scas
test
lea
sbb
je
mov
call
arpl
cs
fidivl
xchg
adc
cmp
gs
lahf
fwait
dec
mov
fstps
jge
inc
push
mov
lahf
pop
jmp
mov
inc
adc
lods
xor
les
adc
dec
loop
stos
ret
dec
pusha
fstps
inc
inc
add
mov
adc
push
shlb
outsl
xchg
mov
xor
loope
call
fsub
or
mov
lock
daa
daa
iret
pop
mov
inc
add
mov
call
adcb
sbb
das
pop
mov
imul
inc
stos
movsl
into
jbe
test
ss
xchg
mov
rep
inc
jbe
in
cltd
push
sub
mov
or
sub
xchg
mov
js
push
sti
nop
aad
pop
fwait
mov
mov
leave
or
in
pop
icebp
sar
dec
jno
out
ror
sub
inc
mov
insb
mov
add
sbb
testl
out
negb
jo
iret
out
dec
mov
jp
xor
call
testb
mov
pop
out
aad
pop
repnz
das
or
push
das
mov
jnp
rolb
jo
push
insl
lret
stos
divl
lds
enter
pop
addr16
jmp
cmpsb
mov
lret
ljmp
std
nop
pop
add
insb
cltd
mov
cmp
insb
rolb
in
ja
xor
pop
jl
test
das
cs
fsubl
or
out
fisttpl
sbb
mov
jne
lret
pop
jnp
xchg
je
mov
mov
xor
jp
dec
fmull
icebp
das
fs
xor
popa
pusha
mov
sbb
sub
push
leave
inc
push
scas
rolb
and
call
xchg
dec
pop
sbb
fistpll
mov
xor
sbb
fdiv
movntps
xlat
mov
sti
mov
add
popf
dec
mov
hlt
fbstp
testl
cmpsb
cld
dec
or
inc
add
push
mov
in
push
pop
imul
push
mov
push
shlb
fstpt
xchg
xchg
dec
jne
fisubrs
pop
mov
cmp
lret
sbb
out
xchg
loope
push
addr16
and
mov
mov
iret
or
out
xor
mov
mov
jb
lcall
scas
sbb
ret
add
popf
xchg
imul
cmpsl
cs
cmp
push
movsl
add
js
push
icebp
cli
cmp
imul
cmp
jmp
fdivs
rcll
sub
xor
sbb
mov
bound
xchg
xlat
pop
jle
fbstp
dec
inc
push
mov
and
nop
mov
int3
mov
pop
dec
stc
enter
pushl
int3
scas
sarl
xor
push
icebp
xlat
nop
xor
gs
je
inc
fwait
xchg
scas
adc
mov
mov
lahf
imul
adc
les
int
jecxz
std
push
in
ds
out
das
sbb
je
fisubrl
jmp
aad
mov
xchg
xchg
push
pop
aad
cmp
test
pushf
rol
mov
cmp
in
adc
mov
mov
pop
movsl
cwtl
mov
or
mov
add
lock
mov
stos
jp
and
mov
push
mov
dec
jbe
push
inc
aaa
jno
pop
je
in
jnp
add
mov
loope
movsl
rclb
imull
mov
loop
adc
inc
jmp
in
sub
jne
push
lods
pop
dec
xor
inc
ret
icebp
shrl
test
jecxz
mov
shlb
ret
adc
and
push
push
out
cmp
adc
jo
xchg
cs
insb
jl
cwtl
xor
push
pop
rcrb
out
scas
add
rol
inc
sub
dec
cmp
xchg
jnp
cmp
pop
and
pop
ficompl
mov
fsubrl
insb
cmp
pop
movsl
push
pop
lds
in
jl
push
arpl
inc
sbb
sbbb
loopne
mov
push
fisttps
inc
test
lahf
imul
xlat
stc
pop
insl
xor
cmp
nop
jle
xchg
dec
or
adc
mov
lods
sbb
lea
dec
xor
and
lock
fldcw
movsl
xorl
dec
add
scas
call
dec
scas
mov
pop
sbb
cmp
or
xor
outsl
xchg
fsubp
ja
test
mov
movsl
mov
test
mov
es
sub
add
xchg
xchg
stc
and
pop
iret
es
rorl
mov
fs
std
add
add
mov
in
dec
cmpsl
add
mov
mov
jmp
inc
div
dec
xchg
mov
mov
std
bound
mov
movlps
loopne
mov
stc
push
jb
sbb
icebp
and
out
or
add
jae
inc
shrl
mov
pop
xchg
push
jo
adc
and
hlt
mov
push
add
cs
and
out
sbb
js
or
pop
aaa
ret
jp
repnz
add
pop
xor
inc
push
cmp
dec
movsb
mov
xchg
in
add
sub
mov
out
rorb
xchg
and
rorl
jl
in
pushf
rorl
rol
popa
cmp
test
or
daa
mov
mov
mov
loopne
sbb
mov
jns
push
sbb
pop
sbb
out
das
fstl
jecxz
mov
dec
sub
bound
lret
push
icebp
pop
and
pop
nop
xor
outsl
test
sub
xchg
xor
jae
stos
xchg
aaa
movsb
inc
sub
lahf
mov
shl
add
js
ret
gs
mov
in
icebp
mov
jo
dec
repnz
iret
sbb
pop
outsl
fisubrl
mov
out
test
pop
pop
push
xchg
pop
fs
mov
inc
sbb
push
adc
aam
sarl
loop
daa
pop
test
lret
dec
je
xor
adcb
xchg
push
dec
add
mov
or
xor
cmpsl
ja
and
jp
int3
faddl
fists
mov
inc
fildl
adcb
mov
imul
push
xor
mov
inc
inc
sahf
pushf
aam
lods
mov
bound
pop
xchg
mov
mov
popa
jbe
jno
sbb
xchg
lds
pushf
xchg
cmp
or
comiss
jp
sbb
fsubrl
jno,pt
and
pop
adc
mov
jge
dec
push
mov
adc
sbb
mov
sarb
or
or
lock
cmpsb
mov
push
movsb
mov
sbb
pop
mov
fbstp
xor
mov
cmpsb
ss
data16
pop
notb
popa
mov
or
in
movsl
sti
iret
test
cmpsb
es
sub
lea
and
push
xor
xor
cmpl
mov
int3
cmp
inc
sbb
mov
jne
or
test
mov
aad
movsl
mov
pusha
loope
bound
fdivs
xchg
mov
xorb
push
pusha
pop
xchg
outsb
add
xchg
fstps
sub
pop
addl
int
imul
das
stc
jle
or
test
jle
into
push
mov
ffree
mov
push
inc
repz
lret
add
aaa
sub
sti
xchg
rcr
pushf
jp
sbb
sbb
adc
sarl
int
jmp
adc
rorl
push
sub
outsl
mov
in
loope
inc
sub
rol
mov
sbb
addr16
push
int
out
lahf
les
xchg
lret
sarb
xchg
mov
dec
orb
loope
ljmp
std
mov
push
mov
lds
inc
test
inc
ficomps
xchg
scas
fmull
push
sbb
aam
dec
mov
cmp
fs
cmp
sbb
mov
jecxz
push
sub
add
daa
inc
adc
pop
mov
adc
cmpsb
sub
mov
adc
ds
or
cmp
pop
add
pop
pusha
xchg
imul
xchg
sti
nop
and
jp
in
aaa
xor
xor
inc
xor
ljmp
insb
lea
jmp
std
popf
inc
rcll
shl
dec
add
mov
adc
rcrl
dec
ja
loopne
outsl
ret
mov
xchg
mov
into
xor
mov
mov
adc
bound
xchg
cmpsl
iret
out
jmp
or
mov
mov
loopne
push
ret
bound
insb
inc
add
dec
aaa
xchg
lret
mov
fs
mov
stos
push
mov
pop
add
xor
js
cmp
and
in
add
fstps
cs
push
fstpl
sub
push
xor
pop
dec
push
xchg
into
jecxz
push
and
xorl
cmp
xadd
je
popa
push
push
mov
std
insb
imul
or
rorl
bound
dec
mov
lcall
mov
ret
sbb
gs
cwtl
xlat
ficoml
pop
lcall
mov
das
inc
lock
sahf
fmull
fcoml
push
sarl
div
sbb
repnz
cwtl
insl
sbb
aad
bound
rcrb
sbb
pop
mov
je
pop
int
and
inc
into
mov
cmp
mov
mov
mov
jb
imul
jl
bound
aam
lods
cli
inc
lahf
xor
add
jb
sbb
pop
arpl
mov
xor
xlat
cmp
lea
mov
imulb
xchg
clc
xor
movsl
xor
dec
mov
repz
pop
fistps
pop
leave
dec
lea
fsubrl
shrb
pusha
push
xor
sub
dec
xor
or
insl
inc
lods
scas
inc
and
mov
sub
stos
nop
or
inc
xor
pop
out
or
in
fldenv
cmp
scas
sub
sbb
jle
pop
jg
bound
sbb
ja
or
mov
sub
sub
mov
shrl
inc
inc
sbb
cmc
jns
test
jle
gs
out
mull
test
sarb
mov
in
aas
ret
dec
scas
mov
add
mov
mov
cmpsb
lods
mov
insb
pop
xor
es
mov
test
sub
adc
dec
add
jb
adc
sbb
movsb
scas
sbb
in
adc
nop
out
cwtl
aaa
inc
insb
dec
testb
loopne
bound
sahf
jo
pop
call
stc
push
adc
pusha
incl
loopne
das
dec
sub
xor
into
test
outsl
jle
outsb
in
mov
fildll
pusha
cltd
mov
jg
in
sbb
push
xchg
mov
ds
jg
daa
fdivrs
sbb
jo
push
arpl
push
or
pop
xor
mov
sub
jge
repnz
add
nop
xor
cwtl
jne
add
adc
jns
push
shr
push
sbb
mov
outsb
out
jp
nop
jge
mov
fwait
cmp
cmpsl
push
cmp
jmp
xor
xor
jbe
leave
xchg
mov
and
jb
mov
sub
or
sbb
sbb
add
call
pop
shr
and
mov
std
jnp
or
hlt
cli
stos
jmp
push
ret
push
scas
test
or
jmp
mov
cli
xor
lahf
lea
mov
jmp
pushf
enter
clc
jnp
fwait
sbbl
cmp
mov
out
mov
xchg
pop
jo
andb
lcall
cli
repz
push
cmc
fdivl
pop
aaa
lfs
lret
call
jl
jecxz
pop
scas
repz
cmp
dec
and
xchg
inc
add
mov
add
fdivs
jne
cs
bound
fs
stos
add
jl
imul
inc
fnstenv
pop
add
jecxz
add
pushf
add
cmp
into
enter
xchg
imul
ret
pop
cmp
pusha
jecxz
xor
pop
add
das
shl
xor
stos
xor
xchg
icebp
bound
adc
cmp
sbb
shll
dec
insb
gs
sbbl
dec
ret
mov
jecxz
adc
xchg
mov
test
movsb
mov
loopne
mov
push
dec
xchg
mov
inc
mov
and
fistl
imul
jl
leave
jle
adc
enter
cltd
and
dec
lods
gs
or
filds
sub
adc
jge
or
cmp
mov
jno
or
mov
mov
arpl
fisubs
cwtl
push
jo
cltd
aaa
hlt
and
int3
fyl2xp1
fistl
sub
inc
insl
sbb
jp
inc
loop
inc
jns
xor
jl
mov
cmp
lret
cmpb
mov
jl
mov
in
sbb
sub
mov
hlt
or
sbb
sub
call
cmp
cmp
jns
bound
or
popf
or
jg
outsb
stc
push
jge
inc
add
pop
jb
arpl
xor
or
test
dec
lcall
sbb
cmpsl
jne
mov
xor
test
and
sbb
jge
sarb
jle
cmp
shlb
push
mov
push
xchg
pop
aad
xchg
mov
in
or
push
cmp
dec
in
int
call
pop
pop
imul
or
nop
push
loopne
inc
mov
and
bound
inc
xchg
outsl
int3
dec
cmpsl
mov
pop
cs
cmp
clc
dec
inc
jnp
jae
lods
sub
mov
mov
add
push
dec
cld
pop
sbb
mov
fmuls
in
hlt
shll
data16
das
xlat
jg
lea
push
mov
mov
ret
mov
fildl
jg
sub
mov
loopne
jnp
adc
outsb
bnd
xchg
jns
sahf
xchg
fisttpl
add
aas
aad
sti
in
shll
dec
jns
inc
or
xor
adc
pop
fwait
lods
pop
mov
add
mov
bnd
js
xchg
dec
repz
fisubs
or
mov
pushf
les
xor
lea
push
or
and
push
mov
or
adc
pop
pop
mov
jne
ret
int3
xchg
loope
stos
sbb
loope
xor
xor
mov
repz
data16
int3
loope
sub
jp
aaa
stos
mov
xchg
xchg
or
push
xchg
add
and
push
ds
aaa
dec
push
jns
mov
xor
add
rcll
enter
jb
sar
adc
push
lret
mov
dec
inc
js
dec
shrb
sbb
pusha
and
mov
adcb
cmp
enter
insl
sti
add
inc
stos
mov
movsb
mov
push
lock
push
mov
sub
jge
sbb
add
mov
fcomip
and
or
sbb
stos
adc
mov
pop
mov
and
pop
mov
mov
sbb
sbb
push
test
inc
xchg
cmc
mov
xor
outsl
mov
inc
lds
pushf
dec
mov
adc
mov
cmpsl
shll
pushf
sbb
lods
push
or
test
jnp
push
dec
lods
mov
stos
hlt
loopne
rol
in
daa
out
ret
das
jp
or
paddsw
jle
dec
out
jae
andl
mov
sbb
sbb
cmp
inc
xor
movsb
iret
test
int3
push
push
xor
push
push
mov
aaa
movsl
mov
mov
fwait
inc
fs
and
sub
rcr
push
or
loop
cs
inc
xor
add
cli
and
and
lret
iret
mov
popf
adc
pop
lods
push
mov
gs
pushf
pop
xchg
pop
mov
mov
out
sahf
mov
int3
xor
ret
cltd
insb
mov
pop
mov
test
js
push
cmp
in
dec
jecxz
adc
les
cmc
inc
test
lods
mov
shrb
adc
jmp
xchg
ret
sbb
xor
pop
xchg
popf
mov
ja
iret
std
push
js
xchg
arpl
add
and
rolb
sub
cld
loop
dec
dec
cmp
adc
lret
loope
fdiv
test
das
icebp
lds
inc
mov
mov
inc
jge
inc
add
cmc
adc
cwtl
in
and
pop
cwtl
lret
sub
dec
xor
in
inc
fstps
add
jo,pt
cmp
add
push
cmpsb
jmp
dec
cmp
or
sbb
sub
fimull
ja
mov
popf
fwait
jp
push
lock
jle
pop
lods
or
imul
shll
je
xor
lods
mov
xor
cmpsb
mov
rcll
jle
or
imul
lods
xor
inc
pusha
cmpsb
add
aam
loop
dec
mov
cmp
xor
in
and
rol
add
popa
std
push
add
inc
xchg
shrl
ds
push
fnsetpm(287
clc
sahf
lods
mov
scas
mov
dec
adc
jp
ja
jae
lret
in
push
ret
out
push
or
fldt
outsl
fstpt
popl
xchg
jp
mov
adc
gs
repz
adc
mov
popf
mov
adc
popa
fldcw
pop
pop
mov
cmpsl
cmp
sbb
sub
sub
inc
sub
cltd
xor
andb
push
out
sub
lret
jo
xlat
inc
pop
clc
mov
push
insl
lods
xor
add
fwait
jns
sbb
cmp
cmp
xchg
arpl
or
nop
repz
je
leave
add
cli
and
push
fs
or
xchg
int
aad
mov
sub
es
out
adc
push
sbb
addr16
xchg
cmp
loop
mov
sbb
xor
xor
mov
cltd
adc
bound
push
imul
cwtl
xor
fstl
fwait
sti
inc
or
popa
add
xor
add
sbb
pusha
pop
sbb
mov
enter
fidivrl
mov
jmp
aaa
es
std
fwait
mov
lcall
adc
sbb
dec
push
jns
xchg
push
pop
negl
cmc
xor
mov
stos
mov
stos
pcmpeqd
addr16
ds
mov
xor
loope
ljmp
insb
pop
mov
sub
pop
shrl
jnp
dec
jo
test
lcall
nop
xor
or
adc
adc
inc
popf
ja
cmp
cmp
xchg
pusha
jge
and
into
and
sti
in
adcl
dec
arpl
addb
and
ror
loop
clc
out
dec
into
push
inc
mov
in
xchg
sti
sub
or
mov
test
xchg
cmp
add
push
sar
adc
test
pop
dec
xchg
int3
repnz
insb
loop
clc
mov
lahf
jnp
lea
cmp
fnstenv
dec
in
ja
xchg
ja,pn
fcmove
mov
push
dec
or
fxch
hlt
andl
inc
inc
in
push
sahf
adc
jle
push
das
fldcw
outsb
ljmp
and
xor
pusha
xchg
sub
cmc
or
jns
jp
cmp
daa
sbb
xor
addl
imul
frstor
inc
fs
imul
loope
lods
push
ss
jno
or
test
shl
in
lret
loope
iret
jecxz
xchg
fidivs
lods
out
add
pushf
out
aad
mov
cmpl
xchg
ljmp
sarb
in
js
punpcklbw
cmc
inc
pop
add
data16
xchg
pop
and
push
pushf
cld
icebp
mov
inc
inc
cmc
scas
or
pop
mov
jb
icebp
fidivrl
shrl
xchg
and
xor
cmpsb
bound
rorb
sbb
xchg
xor
dec
cmp
add
xchg
add
or
imull
push
mov
fadds
pop
xchg
roll
lret
mov
fwait
mov
pop
pop
dec
mov
mov
sub
xor
test
dec
jge
loop
mov
inc
or
pop
push
xchg
pop
ljmp
data16
gs
push
fwait
sbb
popl
dec
hlt
dec
stc
sbb
pop
mov
lcall
scas
movsw
stos
dec
cs
inc
cmp
pushf
fscale
pop
jp
sub
cmp
rcll
jb
mov
mov
test
sub
ret
xor
sbb
out
hlt
aaa
adc
out
adc
adcb
mov
xorb
popl
fsubrp
pop
test
scas
dec
sub
sbb
inc
xor
sarl
mov
xchg
mov
push
lea
push
daa
add
enter
add
cmp
and
xor
xorl
mov
cs
and
pop
mov
adcb
mull
lcall
jle
adc
inc
sbb
jo
fisubrs
test
pop
mov
lahf
xchg
add
test
add
fdivl
test
adc
pop
lcall
cmc
xchg
dec
insl
lock
loope
sbb
xchg
xchg
das
ret
std
push
add
mov
nop
sbb
push
lea
pop
add
fcomip
xor
dec
sub
mov
adc
cmpsb
fsts
add
xchg
nop
sub
jl
add
push
jne
out
mov
mov
outsl
or
jne
jecxz
ret
ljmp
mov
cld
and
fdivr
fildll
rep
cli
pop
es
pop
push
into
lcall
push
jo
adc
jo
push
jl
loope
mov
or
roll
clc
les
jmp
fwait
aaa
sub
xor
icebp
call
icebp
pop
and
cmp
sub
loopne
mov
loope
arpl
addr16
movsl
or
ret
int
push
popl
jo
mov
sbb
addb
mov
cmp
in
xor
sti
xor
jle
fisttpll
cwtl
lret
ret
popa
xchg
std
repnz
inc
out
stc
pop
cltd
test
mov
jb
push
dec
stc
fiaddl
push
dec
inc
ror
lret
daa
ljmp
popa
jae
xor
and
sbb
aad
sti
clc
in
jl
mov
sahf
jg
loopne
push
les
xchg
mov
mov
les
sbb
adc
push
cwtl
lret
add
addb
add
and
sahf
xchg
sub
push
notl
dec
mov
pop
sti
add
push
jbe
and
test
xor
or
insl
pop
xorb
fldcw
dec
xor
or
jge
push
js
lods
add
xchg
call
or
jno
shr
and
add
mov
js
or
pop
loopne
mov
inc
movsl
jbe
inc
xchg
shrb
push
imul
in
mov
orb
cmc
add
and
dec
cld
icebp
push
xchg
call
movsl
jnp
mov
insb
sbb
loop
sub
mov
mov
pop
sub
dec
ret
movsb
pop
sub
pop
je
lcall
je
ja
jge
je
cmc
fmul
lds
adc
stc
repz
or
pop
addr16
ds
shll
out
add
aad
mov
int3
imul
sbb
sbb
add
cmc
xchg
jnp
imul
push
pop
and
outsl
mov
les
test
mov
jge
mov
test
cltd
movsb
mov
fcmovu
in
push
xor
js
iret
and
push
mov
and
mov
pop
push
aaa
je
and
mov
sbb
push
push
push
cltd
push
loope
add
xchg
out
movsb
orb
call
iret
push
into
pop
pop
inc
cmp
scas
hlt
xchg
lea
mov
cmp
mov
or
ljmp
mov
rcr
mov
cld
adcl
rorl
cmpb
fcmovnb
sub
imul
jbe
std
insl
es
lods
lods
fnstsw
jne
std
xor
movsb
cmpsb
dec
les
popl
test
in
cmp
adc
sub
lods
jae
pop
scas
mov
sub
lahf
mov
pushf
and
push
sub
fnsetpm(287
lods
push
push
inc
push
pusha
push
outsl
mov
stos
cmp
jne
movsl
clc
mov
cmp
sbb
ds
shrb
jns
cmp
add
adc
xchg
push
xor
and
and
enter
mov
mov
cmpsb
pop
int3
loopne
add
cli
ja
test
mov
and
xor
cmc
xor
mov
mov
push
bound
push
push
or
cmp
mov
ljmp
fidivs
fistps
lret
sbb
pop
shlb
sub
xchg
jle
push
mov
addl
out
stos
adc
clc
sub
dec
xor
addr16
shr
xor
test
sub
mov
or
sbb
pop
lock
and
and
xor
outsb
or
sub
mov
in
lea
aas
out
mov
push
sbb
iret
mov
jecxz
mov
ret
mov
mov
dec
int
pop
adc
add
push
jbe
xor
mov
mov
push
adc
cmc
cmpsl
into
loopne
inc
adc
lahf
loop
mov
aas
imul
aad
imul
lea
jp
pop
jle
cmp
cmp
in
aam
push
pop
push
pop
std
mov
dec
popa
test
adc
cltd
add
lret
fsubrp
lds
mov
stos
out
adc
js
push
pop
add
sub
bound
mov
or
pushf
push
sub
sbb
cld
inc
fmuls
cmpsb
stos
fucompp
popa
mov
cli
flds
cmpsb
and
icebp
mov
jg
cmc
sti
or
decl
mov
hlt
int
mov
data16
lahf
ja
cld
push
jg
push
and
inc
inc
insb
mov
daa
xorb
test
idiv
mov
xor
jl
xchg
lock
imul
in
fistpll
mov
push
pop
inc
dec
pop
lcall
mov
inc
cmpb
js
push
add
cmpsl
xchg
sub
pop
and
mov
push
cmp
aas
decl
ret
xchg
xchg
imul
loop
int3
xchg
mov
adc
inc
cmp
or
mov
mov
movsl
dec
cmp
clc
mov
mov
xor
scas
adc
push
imul
push
cmpsl
mov
inc
xor
push
in
mov
jle
jecxz
mov
xchg
pop
cmp
and
jp
aam
ljmp
cs
fldenv
pop
scas
jmp
cmp
call
push
and
add
push
sub
es
xor
inc
imul
xor
mov
repz
out
jno
stos
adc
and
addr16
jo
add
push
mov
push
sbb
mov
cltd
pop
lret
sub
pop
or
icebp
mov
add
sbb
push
mov
iret
cltd
je
xchg
adc
fisubl
xchg
push
adc
mov
out
xchg
jp
dec
imul
mov
popf
stc
or
movsl
and
imul
jle
xchg
push
je
shrl
or
mov
scas
or
addb
pop
and
arpl
xor
nop
mov
adc
int3
sub
push
mov
and
mov
sahf
es
pop
dec
mov
pop
push
inc
aas
xchg
pop
imul
push
mov
mov
dec
scas
or
fsubrl
mov
push
cmp
pop
dec
adc
mov
mov
int3
or
jne
stos
pop
cmp
andps
and
repz
jb
dec
cltd
sbb
mov
out
cwtl
stos
pop
cltd
aas
adc
insl
in
add
xor
or
mov
sub
mov
cltd
dec
sbb
inc
and
fnsave
sub
sbb
sub
mov
mov
add
push
or
test
cmp
out
loope
clc
and
pop
inc
jne
xchg
lods
or
sub
mov
cmp
inc
cmp
dec
in
jae
in
or
xchg
subl
xor
imul
push
mov
adc
std
xor
xor
bound
xchg
xchg
sbb
xor
lcall
push
data16
pop
mov
mov
ljmp
leave
call
push
cmc
xchg
scas
bound
in
and
aas
push
das
mov
int3
pop
lods
mov
mov
and
loop
das
xor
mov
jbe
mov
cmp
mov
push
dec
push
iret
arpl
mov
cltd
test
cmpsl
xchg
cmp
adc
mov
mov
movsb
xor
push
xchg
mov
mov
or
sub
das
jnp
mov
lcall
adc
nop
dec
pop
stos
pop
push
daa
mov
cmp
inc
inc
lods
pop
lret
mov
cmp
movzwl
cmpsb
mov
or
stos
and
clc
hlt
adc
lods
repz
xor
fcmovne
inc
test
jae
loopne
add
movsl
pop
lahf
loope
cmp
ljmp
dec
and
adc
xor
push
pop
sub
out
mov
lea
cs
or
into
xlat
lods
mov
push
jae
mov
pushf
popa
negb
dec
mov
jp
pushf
ljmp
dec
call
sarl
inc
mov
shlb
mov
mov
push
pop
add
mov
das
or
rcrb
popa
push
outsb
mov
fwait
lds
insb
inc
pop
and
pop
sub
add
fs
loopne
daa
jbe
mov
fistpl
and
push
add
xchg
mov
shl
shll
xchg
or
and
in
dec
and
pop
fdivrs
lahf
mov
out
sarb
pop
int
add
lcall
icebp
mov
jbe
mov
adc
popf
loope
and
cs
xchg
insl
andb
xor
lcall
adcb
push
xchg
out
fldl
rorl
scas
dec
jl
mov
and
pop
inc
loopne
out
das
mov
mov
xchg
data16
mov
or
dec
enter
push
pop
in
and
dec
mov
xchg
sub
pop
jnp
rcr
pop
scas
and
or
inc
sbbb
mov
or
xor
adc
das
mov
adc
iret
loopne
mov
mov
pop
das
mul
or
ret
aam
jg
in
ret
pop
pop
cmp
or
add
lcall
and
push
xor
adc
add
movsb
xchg
push
lahf
dec
fs
loopne
movsl
leave
fst
mov
fwait
data16
int3
ror
xor
test
pop
jge
test
xchg
cs
push
add
mov
adc
xor
xor
daa
sub
stc
add
sbb
scas
inc
test
lods
xchg
mov
adc
movsb
jl
test
rcll
daa
pop
in
sub
test
ja
out
xchg
xor
xor
adc
int
outsl
hlt
push
inc
pop
jo
out
or
xor
jle
push
fistpll
testb
fsts
lret
pop
cmp
cmp
add
cmpsl
int
das
sti
and
fxch
xor
pushf
mov
in
mov
out
push
pop
test
xchg
jae
adc
jp
daa
add
fistpll
inc
mov
inc
insb
mov
adc
pop
iret
inc
shrb
sahf
rcll
and
or
push
or
inc
jecxz
inc
xor
test
pop
xlat
out
pop
call
mov
push
mov
cwtl
xchg
hlt
push
mov
faddl
cmpsl
outsb
cmp
aam
mov
sbb
add
and
or
mov
jmp
loope
sahf
test
loopne
movsl
adcl
adc
jnp
inc
popa
lods
push
jecxz
sub
aas
ja
xor
xchg
cmpb
mov
dec
mov
in
jp
lea
or
jmp
dec
lock
pop
jb
fs
cmp
or
cmp
mov
xor
cmp
xchg
sbb
adc
outsl
stos
insb
and
adc
js
sub
insl
mov
inc
pop
push
dec
cwtl
fsubl
jns
sbb
jae
jbe
mov
outsb
cmp
pop
popa
xchg
xchg
mov
ljmp
rcrb
mov
iret
sub
xchg
inc
sbb
pop
fs
sub
mov
lods
push
add
sbb
mov
mov
push
negl
jg
test
jno
lock
jo
pinsrw
cmpsb
xor
cmpsb
xor
shlb
pop
xorb
rorb
pop
add
pop
xlat
cmp
pop
inc
jno
iret
gs
pop
data16
xchg
or
mov
pop
adc
test
das
inc
shrl
jge
fwait
xor
lret
int
jg
push
fstps
decb
xchg
cli
pop
cmp
inc
fsts
jbe
cmpsl
into
stos
mov
mov
mov
dec
gs
bound
insl
lds
adc
adc
std
lds
loope
xorb
inc
dec
jg
sub
xchg
adc
add
sarl
rol
decb
rolb
xorl
lods
xorb
lahf
xor
mov
jnp
pop
hlt
add
into
cmpsl
add
lds
ljmp
sub
fiaddl
adc
adc
inc
cltd
movsl
pop
inc
sub
jnp
leave
jmp
mov
mov
ret
pop
cmp
orb
lret
add
loope
mov
stos
mov
pop
xor
mov
in
lds
addr16
mulb
pushf
or
xor
test
enter
inc
not
fsubrs
in
jns
mov
mov
imul
lods
inc
fwait
mov
add
or
imul
mov
mov
cli
inc
push
sub
xchg
jno
push
jle
cld
es
sub
inc
outsl
mov
pop
mov
in
sbb
iret
inc
sub
int3
test
cmp
outsb
cmpsl
inc
iret
std
dec
bound
cmp
out
rorb
sub
bound
xchg
inc
cmp
mov
dec
jmp
in
mov
lret
pop
mov
sarb
stos
shlb
cmp
cmc
dec
push
insl
stos
push
jnp
sub
into
push
mov
stos
inc
cs
sub
cmp
inc
fnstcw
jmp
xchg
ret
sahf
push
fdivrs
mov
out
adc
pop
or
cmp
mov
dec
stos
shlb
inc
push
lods
mov
add
jg
adc
jnp
push
imul
cmp
insl
jno
aam
jne
push
mov
scas
mov
inc
mov
dec
subl
fcompl
adc
pop
movsl
cli
lea
subb
shlb
xchg
xchg
outsl
fcmovu
mov
in
scas
dec
pop
test
cmpsb
fstl
hlt
pushf
loopne
mov
arpl
insb
loopne
fwait
popa
push
adc
add
cmc
jns
add
lahf
nop
mov
cmc
stos
mov
je
addr16
xor
incl
repz
aas
popa
cmp
jb
or
mov
lcall
leave
lods
push
pop
in
cs
lret
push
ljmp
jne
cmp
push
cld
loope
sbb
mov
mov
adc
dec
push
cmpb
pop
outsl
mov
imulb
pop
das
push
pusha
sub
and
mov
dec
aad
pusha
push
mov
ret
movsb
inc
pop
jge
or
inc
dec
jnp
popf
mov
pop
ja,pt
sub
add
inc
jg
inc
xchg
pop
sbb
ffreep
jo
pusha
aas
inc
icebp
rep
xor
ret
push
xchg
mov
rorl
mov
pushf
push
stos
pop
push
jnp
nop
ljmp
ret
adc
orl
lcall
enter
push
lret
mov
int3
aad
gs
xchg
inc
test
sbb
test
js
fs
test
sbb
jl
push
flds
jp
cmp
outsb
fsubrl
sar
xor
out
aas
lahf
inc
ljmp
sbb
jne
lea
js
lea
mov
fwait
test
and
mov
jle
mov
decb
sti
mov
mov
and
cmp
imul
loope
mov
mov
leave
jno
pop
cmpsl
sub
jns
adc
push
in
pop
and
mov
xchg
add
cmpb
cmc
cmp
ljmp
idiv
xchg
outsb
jbe
pusha
cld
movsb
mov
push
stos
mov
stos
sub
ds
or
insb
repz
das
or
stc
test
inc
movsb
lret
in
stc
push
mov
jp,pn
sbb
es
test
jno
je
incl
jecxz
xchg
movsl
repnz
sahf
and
inc
sti
mov
orb
bound
lahf
mov
nop
mov
loop
ret
add
jl
jl
and
xor
aas
mov
push
jmp
push
mov
mov
add
and
out
sbb
stos
in
adc
or
jmp
hlt
adc
sub
es
adc
pushf
ret
cltd
xor
js
lcall
mov
movl
cltd
and
lret
je
cltd
sub
adc
dec
in
cmp
das
mov
inc
mov
sar
gs
cmpsb
outsl
cmp
lock
cmc
xchg
decb
push
adc
and
adc
in
or
push
inc
mov
adc
sbb
mov
sbb
ds
jo
dec
push
cmp
jge
adc
inc
adc
mov
outsl
mov
ret
jmp
push
call
sbb
sbb
imul
pop
jp
call
call
mov
mov
or
iret
inc
xchg
insb
xorl
fsubs
imul
cmp
jle
rorl
cwtl
out
pop
imul
in
cmc
push
ljmp
and
cmp
es
xchg
cmp
mov
mov
push
movsl
inc
and
sbbb
lea
mov
push
push
test
pop
sbb
cltd
in
jp
addr16
mov
fildl
dec
sub
mov
xor
mov
add
repz
push
mov
add
test
push
mov
scas
xchg
inc
call
ficompl
aad
sub
icebp
pop
push
jge
mov
imul
imul
mov
push
xchg
fnstsw
or
adc
out
push
adc
mov
jecxz
add
dec
and
xlat
xchg
or
bound
push
imul
mov
fcmovnu
xchg
jmp
clc
sbb
jb
sbb
jle
mov
pop
or
mov
cmpsb
je
cs
sbb
jnp
pop
jle
sbb
out
icebp
movsl
push
dec
not
xchg
or
nop
sbb
mov
xchg
mov
es
or
ss
sub
mov
sub
push
addb
icebp
cmp
and
pop
jbe
and
jbe
push
dec
dec
inc
mov
inc
mov
sti
daa
jmp
mov
sbb
mov
aaa
int
push
js
aam
sbb
sbb
or
rcl
jno
inc
sbb
push
sti
repz
out
sub
sub
mov
xor
mov
mov
std
mov
push
mov
fldl
cmc
or
and
inc
in
push
xor
in
cmp
adc
mov
xchg
jge
pop
mov
xchg
in
hlt
pop
jmp
lret
fcmovne
xchg
arpl
jo
dec
pop
sub
lock
mov
hlt
adc
push
dec
pop
cld
stc
adc
dec
sbb
cmpl
in
aas
cltd
stos
repnz
mov
and
sbb
loopne
fs
pop
inc
subl
pop
sbb
ja
mov
sub
icebp
stos
or
dec
and
and
ja
dec
jbe
sarl
movsl
leave
xchg
fcmovnb
dec
jg
fdivrs
sbb
repz
sub
adc
mov
inc
push
cmp
jmp
push
push
or
mov
rcr
in
xchg
mov
fisubl
pop
scas
inc
cli
jg
cmp
daa
nop
js
push
xchg
sub
std
fwait
inc
loop
mov
aaa
pop
nop
mov
mov
cwtl
and
es
dec
xchg
dec
add
adcb
out
js
mov
xchg
cmp
movsb
xchg
xchg
outsb
adc
aam
sub
sti
or
jecxz
xchg
inc
dec
xchg
mov
push
ret
inc
insb
aaa
clc
pusha
fildll
pop
add
sub
dec
jp
hlt
cmp
mov
ljmp
mov
adc
xchg
std
dec
or
push
mov
leave
movsl
insl
or
pop
sbb
xor
xchg
arpl
shl
test
sti
les
lods
lock
push
fsubs
fdivrl
mov
fs
in
xor
mov
lret
jle
dec
cmpsb
dec
divb
mov
pop
lea
inc
inc
stos
xlat
call
jnp
call
es
inc
repz
roll
in
mov
pop
jg
rorb
jle
cwtl
jmp
push
xchg
pop
xchg
les
sub
mov
adc
call
dec
mov
and
sti
xchg
or
loopew
xlat
inc
xchg
mov
dec
dec
test
jae
pusha
loop
and
and
call
lods
mov
scas
fisttps
and
pop
cmc
aad
lahf
movsl
dec
cwtl
jbe
cmp
popa
pop
xchg
fsubrs
inc
jp
jno
flds
scas
mov
adc
add
pop
add
jge
or
cmpsl
iret
cwtl
insb
cmp
cmp
or
push
sub
cld
das
int
cmp
fildl
push
lods
data16
fists
pop
cmp
jge
and
jle
ret
aad
or
pop
push
adc
push
cmp
mov
fisubrs
test
js
into
bound
mov
imul
test
mov
lcall
adc
pushf
or
jg
stos
testl
xchg
xchg
shl
and
aaa
dec
jno
mov
mov
lock
dec
out
nop
jbe
bound
fldln2
sbb
fldt
jns
ljmp
mov
dec
xchg
push
push
mov
int
std
stc
xor
ja
inc
xchg
jnp
ss
mov
push
mov
jno
popl
andl
rcl
push
add
xchg
repnz
adc
es
xlat
inc
xchg
jno
mov
movsl
ja
sub
cli
clc
add
push
add
cltd
mov
mov
imul
mov
rorb
push
vcvtss2si
adc
xor
push
outsb
hlt
mov
sub
dec
lahf
int3
mov
aad
jmp
andb
rcrb
mov
stos
stc
mul
ss
sbb
or
push
int3
or
ret
mov
mov
dec
shll
pop
repz
loope
add
xor
and
in
jle
sahf
divl
sub
xchg
data16
fidivs
fstl
cmp
lods
or
js
test
rcl
xchg
sub
mov
and
and
cmp
inc
out
int
push
jbe
lcall
and
pop
pop
inc
sbb
sub
jecxz
sbb
scas
xchg
add
push
ficoml
mov
push
inc
aad
mov
sub
and
out
xor
or
mov
mov
out
call
push
fadds
or
mov
xor
and
jnp
shll
insl
cmpsb
popa
inc
xchg
fnsave
pop
dec
push
jbe
or
mov
out
or
dec
mov
imul
test
pop
add
inc
jecxz
lock
sub
js
push
or
aad
mov
xchg
jnp
adc
xlat
out
inc
and
push
xor
hlt
mov
ret
cli
fistl
and
jne
loop
sub
mov
das
sbb
mov
icebp
fwait
daa
roll
in
cmp
les
repnz
sub
hlt
test
lcall
rol
je
mov
in
adc
push
xchg
loope
jl,pt
mov
xchg
mov
mov
inc
scas
repz
or
cmp
aas
stos
aam
fcoms
stos
add
xchg
pushf
clc
fcoml
mov
inc
rcrb
stos
mov
aas
push
shl
cmpsb
jae
push
fcompl
fistpll
jp
test
pop
sahf
sub
fbld
shll
test
lea
pusha
aaa
inc
mov
scas
sbb
out
sti
popa
and
mov
cmc
xchg
pop
add
mov
jg
dec
add
data16
int3
popa
adc
mov
adc
mov
cld
jb
mov
iret
mov
xor
aas
adc
test
xchg
or
pop
adc
mov
cmp
mov
popf
push
push
je
inc
push
lds
mov
xchg
imul
movsl
mov
shrl
cmpsb
sub
mov
cli
add
imul
xchg
push
sub
js
push
or
push
scas
cmpl
pushf
cmpb
lods
aad
xchg
xchg
popf
daa
imul
mov
jae
inc
xchg
mov
sbb
cmpsl
in
inc
mov
sti
aaa
add
mov
xor
in
push
cmpsb
sub
xor
dec
pop
mov
and
mov
and
insb
vaddpd
jp
negb
or
mov
lds
sbb
sub
add
filds
jne
out
sub
pop
mov
hlt
pop
sbb
mov
xorb
enter
jmp
xchg
jno
push
push
aad
sub
dec
sar
daa
adc
icebp
sbb
aas
div
push
adcl
xlat
test
sub
cwtl
cmp
test
add
xor
mov
inc
iret
test
mov
sbbb
pop
test
fwait
shlb
inc
fistpl
dec
iret
pop
and
sub
cmp
out
jge
fildl
jp
rolb
movsl
fsubrp
or
xor
push
mov
inc
in
sbb
jecxz
jecxz
adcl
rolb
test
inc
mov
jbe
insl
mov
mov
test
in
loop
fldt
mov
popa
int3
incb
sbb
inc
test
shld
push
ljmp
dec
xor
ljmp
xchg
lret
xor
pop
test
adc
imul
dec
cmpl
jmp
fiaddl
in
mov
mov
mov
push
fists
or
xchg
fcmovb
xchg
into
call
jge
shll
lds
push
imul
fistps
pop
inc
push
mov
mov
add
fisubs
inc
in
add
add
loop
mov
push
mov
jnp
jmp
enter
jp
mov
dec
fnstsw
sub
les
mov
int3
pop
inc
inc
jmp
ret
lahf
xchg
mov
cmpsb
pop
mov
or
nop
ljmp
mov
add
subb
add
sub
fcomps
int
and
shlb
or
push
pop
or
cmp
and
xor
fildll
cmp
arpl
rolb
fisttpl
sub
repnz
fwait
popf
sar
jl
outsl
aaa
sbb
jmp
pop
mov
pop
lds
daa
jle
outsl
or
scas
push
ret
mov
or
add
sti
mov
mov
loope
stos
adc
lret
lret
pop
add
fwait
rcr
add
fsub
xchg
paddusw
sahf
lcall
rcr
nop
mov
aas
sbb
lds
fdivrl
xor
mov
pop
xor
outsl
push
push
addl
adc
mov
dec
cld
fdivr
dec
pop
notb
xchg
cmp
mov
or
or
stos
pop
mov
sbb
repz
arpl
shll
sub
inc
jo
mov
sub
pop
jl
outsb
mov
inc
sbb
fst
xchg
sub
mov
pop
pop
jmp
pop
lods
mov
out
inc
xchg
scas
dec
addl
fiaddl
inc
pop
in
jmp
sub
pop
sahf
adc
mov
ret
rcll
lahf
test
clc
sub
pop
int
or
arpl
mov
fnsave
in
jns
int
sbbb
ds
push
jns
xchg
clc
cmp
cmp
xlat
dec
xchg
es
cld
gs
or
or
adc
pop
pop
hlt
pop
and
fwait
xorl
sub
cmpsb
data16
xchg
and
jno
into
inc
jmp
sub
jns
dec
repnz
dec
push
sub
loopne
mov
sub
push
cmp
sbb
push
out
xor
shlb
push
pop
lods
inc
push
cs
cmp
push
mov
bound
test
je
in
sbb
fs
incb
and
add
std
gs
call
xor
cmc
cmp
or
jbe
push
nop
jecxz
das
xor
mov
std
addr16
jecxz
imul
dec
testl
stos
mul
cmp
outsb
aaa
sub
pop
mov
js
xchg
push
mov
fs
inc
iret
mov
mov
xor
dec
push
fmuls
jmp
cltd
sbb
andb
push
jg
or
pop
fidivrs
test
or
dec
mov
lret
adc
mov
fwait
xchg
sbb
cmc
out
adc
adc
leave
add
sub
sbb
sbb
pop
add
jecxz
movsb
ds
das
mov
int
sub
fs
ficoms
pop
scas
inc
movsb
ja
jno
jge
fdivrp
jae
jne
fnsave
mov
pop
shrb
push
insb
push
mov
scas
jl
insl
xor
addr16
int
pop
adc
add
enter
fnsave
cld
lods
jnp
mov
inc
fldt
stc
das
shlb
cmp
xchg
dec
aas
push
mov
push
mov
mov
push
xor
push
push
js
sbb
jmp
adc
lea
fwait
mov
jne
rcll
push
outsb
dec
adc
mov
jp
jle
dec
dec
inc
or
cmp
pop
lret
adcl
lods
loop
jg
adc
mov
mov
mov
cmp
inc
adc
loope
or
out
jno
insl
jge
outsb
cmpsb
insl
repz
aam
push
and
icebp
rorl
adc
xchg
inc
loope
adc
orb
movsl
xchg
lock
pop
mov
dec
arpl
outsb
jne
cwtl
mov
and
aam
enter
sti
dec
sti
lods
add
sub
les
clc
cmpsb
push
push
in
lods
xor
cmc
shl
mov
rol
ds
fs
mov
add
push
fcmovnbe
sbb
mov
mov
fnstenv
cmp
add
add
dec
ror
ror
mov
mov
loopne
notb
or
testl
mov
jl
mov
popa
jno
popa
jp
and
rolb
pop
add
in
jno
dec
call
or
gs
mov
ret
iret
pop
sub
das
dec
add
mov
fs
mov
lock
lahf
aas
lahf
push
push
aaa
testl
ljmp
push
sti
xchg
dec
jmp
pop
call
mov
adc
call
roll
and
mov
fiadds
cmpsl
push
hlt
jge
inc
test
and
add
sti
icebp
imul
push
fiaddl
mov
pop
and
add
pop
adc
jmp
add
add
fidivrl
jg
ficompl
sub
or
or
daa
dec
sub
imul
lea
fisttpll
mov
lahf
jns
in
es
or
int3
pop
lret
repz
sbb
arpl
icebp
or
repz
insb
inc
bound
lret
shll
fstl
sub
inc
stos
mov
lods
mov
or
sub
lcall
adc
sbb
xor
pop
inc
rcrb
into
iret
pop
cmp
arpl
ds
ja
jp
out
dec
inc
mov
mov
xor
stos
xor
data16
rcl
ret
adc
xchg
call
incl
adc
ret
ja
inc
mov
add
iret
inc
inc
push
xchg
cmpsb
and
das
pop
jl,pt
ror
repz
loopne
mov
out
or
xor
popa
inc
jne
push
icebp
outsb
mov
cmp
and
mov
push
mov
fwait
mov
aaa
jg
aam
test
aam
sbb
dec
cmp
outsl
mov
jo
cld
hlt
inc
cmc
sub
into
push
sub
loope
inc
mov
jae
js
clc
gs
sbb
ljmp
and
cmc
into
leave
shll
lock
jmp
rcr
mov
in
movb
mov
loope
xor
cli
mov
imul
addr16
icebp
loope
testb
fstl
sbb
sbb
sub
push
sbb
cvttps2pi
imul
nop
mov
outsl
andb
mov
jmp
iret
xlat
hlt
push
mov
inc
lock
loop
fstps
cwtl
push
enter
mov
js
lahf
cmc
movsl
in
aad
stc
call
push
push
scas
stc
inc
faddl
xlat
aas
and
lahf
clc
mov
stos
fs
icebp
adc
cmpsl
fimull
ljmp
sub
adc
mov
xchg
jp
stos
jns
sbb
xor
repz
xchg
les
lea
sbb
pop
sbb
jp
fs
ret
fdivp
fcoml
dec
ficoms
adc
fdivrs
imul
push
loop
adc
push
and
dec
xor
lcall
in
mov
movsb
insb
inc
jns
je
lahf
xchg
mov
dec
rclb
mov
dec
aaa
loopne
out
ret
add
jnp
and
aad
mov
jb
jmp
push
add
fildl
or
cltd
lea
cmp
sub
pusha
lods
push
popf
fs
lret
add
or
ret
test
mov
mov
sahf
adc
jno
out
xor
mov
pop
mov
jecxz
push
sbb
fisttpl
fs
xchg
pop
leave
fidivs
div
pop
shrb
loope
shll
lods
aaa
push
push
add
pop
fcmove
and
fnstcw
pop
lret
cs
mov
test
roll
push
mov
sbb
sub
jmp
cwtl
jnp
rep
adc
aas
test
jg
jbe
movsb
ret
sub
dec
pusha
xor
push
nopl
mov
in
repz
ja
mov
mov
loope
sub
dec
scas
or
rorl
daa
leave
push
jg
imul
sub
jp
mov
sbb
aam
test
push
stos
cmc
mov
je
jae
jle
jp
int3
lret
popf
inc
adc
mov
lds
push
jp
dec
push
shrl
cs
out
push
adc
cmpb
in
jne
and
mov
ja
sbb
lret
fsubs
mov
dec
scas
int3
adc
sub
jp
in
jge
nop
cmpsb
rcrb
adc
push
fmuls
aad
ljmp
or
fwait
adc
insb
xor
fisubrs
mov
and
cmpsb
arpl
xor
loop
repz
sub
sub
xchg
sti
sub
sub
cld
loop
pop
sbb
cmp
xor
fmuls
imul
or
inc
popf
xlat
mov
scas
jae
ret
inc
push
or
scas
aas
stc
loop
les
negl
cltd
pop
push
enter
add
mov
cmpl
cmp
outsl
sub
pop
syscall
popa
mov
scas
test
push
arpl
aaa
stc
mov
mov
sbb
mov
push
inc
xorb
vaddss
sbb
adc
dec
adc
out
inc
into
push
cmp
fnstsw
imul
cli
lret
jmp
stc
or
stos
mov
je
shrl
incb
ljmp
imul
and
or
call
pushfw
push
stos
adc
orb
xchg
xchg
mov
cltd
stos
and
push
je
push
leave
jl
inc
xchg
leave
adc
push
or
xorl
subb
or
cmpsl
rcrl
sub
dec
xor
sbb
pop
mov
fadd
jae
lcall
sub
pop
cmc
es
imull
int
cmp
fbstp
add
pop
flds
movsl
sub
mov
out
popa
pop
mov
adc
add
rolb
inc
push
xchg
inc
pushf
dec
adc
idivl
ljmp
pop
jnp
and
xchg
je
cmpsl
pop
mov
test
jae
xchg
cmp
cmp
sub
xor
cmp
lea
mov
adc
test
ret
imul
out
fcoml
movb
int
and
push
aaa
fwait
ja
inc
jecxz
sub
mov
sbb
sub
insb
jmp
sahf
pxor
dec
loopne
mov
mov
jb
cmp
push
call
pop
mov
out
mov
adc
cmp
mov
ljmp
cmc
cld
mov
jb
xor
pop
insl
subb
hlt
mov
shr
fdivrs
sahf
push
adc
xchg
lahf
adcb
fdivs
cmp
xor
pop
cmp
adc
mov
mov
add
inc
sbb
pop
cmp
js
xchg
adc
xchg
add
push
cwtl
out
in
arpl
shll
out
pop
and
pop
icebp
movsb
add
scas
mov
push
or
popa
testl
lods
mov
xchg
cmp
push
arpl
ret
jnp
push
jmp
pop
sub
fcompl
xor
test
pop
mov
add
stc
pop
or
into
adc
jnp
cmp
mov
or
xchg
lods
enter
and
cli
xor
push
ret
inc
bound
add
or
les
popa
sub
inc
dec
mov
inc
test
push
inc
jge
jnp
xlat
dec
sub
sti
cmpsl
lahf
or
mov
addr16
pop
lcall
pop
xchg
and
jbe
movsb
sbb
ja
mov
icebp
repz
ja
bound
push
cmp
bound
push
shll
incb
and
jns
nop
add
mov
pushf
imull
inc
and
test
cli
ds
pop
add
test
and
sbb
imul
notb
incl
pop
jno
xchg
dec
jmp
pop
mov
xchg
cwtl
scas
adc
js
mov
popa
mov
mov
xor
mov
daa
clc
xchg
adc
mov
in
add
push
pop
pop
adc
sar
inc
mov
adc
aaa
mov
js
cli
ljmpw
or
test
sbb
inc
xor
pop
jne
insl
int
repz
inc
push
inc
mov
mov
lret
mov
lock
outsb
test
sub
scas
xlat
push
xorb
hlt
jp
add
adc
arpl
dec
leave
pop
sub
push
test
loop
jp
cmp
dec
mov
jnp
jecxz
in
pop
inc
pop
cmpsb
push
push
sub
push
add
mov
jmp
or
sub
dec
lds
mov
test
mov
dec
insb
aam
dec
stos
ds
ds
aas
xchg
ja
stos
xorb
mov
xchg
loope
addr16
fstl
xor
testl
mov
or
xchg
mov
jns
inc
cmp
into
mov
test
jp
dec
cmp
add
inc
sub
cmp
pusha
fmuls
in
push
sub
mov
shlb
leave
in
jne,pt
aam
ret
cmovp
pop
imul
scas
push
mov
sbb
or
push
pop
loope
fwait
insb
inc
jns,pn
fistpll
mov
insl
and
push
sbb
shl
jb
inc
shll
pop
iret
mov
out
or
outsb
movb
cmp
fsts
xor
shll
mov
mov
and
insl
mov
jecxz
push
lock
js
mov
je
shll
fiadds
push
mov
mov
nop
dec
inc
sub
js
xor
push
mov
inc
or
stc
push
pop
add
fdivl
cmpsb
push
cmpsb
push
fucom
lds
and
mov
push
inc
cltd
enter
jnp
js
dec
adc
sahf
xchg
test
cmpsl
repnz
scas
repz
push
ret
cmp
cmp
mov
mov
or
xchg
adc
cltd
and
cmp
dec
imul
jb
mov
mov
and
adc
ret
jne
xor
shl
push
jb
jne
push
cmp
adc
mov
mov
cld
mov
adc
lea
push
and
adc
pop
cld
loop
inc
push
push
fs
add
fsubrp
pop
out
sbb
pushf
cmpsl
xor
mov
mov
pop
arpl
leave
test
pop
jecxz
pushf
sarb
adc
push
rol
mov
dec
pop
cmpsb
lcall
mov
xor
repz
sub
orb
notl
push
in
nop
add
push
mov
dec
lret
enter
xor
mov
fldenv
ja
lcall
mov
push
mov
inc
aad
and
mov
fldenv
scas
cltd
xchg
push
mov
mov
fmuls
punpckldq
iret
scas
daa
inc
mov
lods
fcomi
subl
jne
int
out
push
xor
jecxz
cmp
mov
cld
lods
movsb
add
sbb
mov
call
mov
cmp
addr16
sub
dec
imul
les
mov
cltd
jg
add
xor
ss
loop
addr16
arpl
mov
xchg
into
nop
popa
xorl
push
stos
mov
stc
dec
movsl
popa
scas
je
in
cmp
imul
mov
cwtl
adc
sub
into
es
jg
push
mov
mov
cmpsl
adcl
mov
data16
es
or
jmp
fistpll
dec
inc
loopne
mov
push
mov
sbb
mov
arpl
inc
xchg
sbb
nop
mov
mov
lods
shll
icebp
fbld
jbe
jae
xor
xchg
insl
jb
add
dec
mov
movsb
daa
sbb
sar
into
fsubp
pop
rorl
arpl
cmp
stc
ljmp
ss
mov
jns
addl
stos
mov
jecxz
lcall
and
cli
outsb
cmp
push
test
jno
xor
repnz
add
mov
js
sahf
xor
fdivs
push
xor
jmp
shlb
xor
fs
add
pop
jo
mov
dec
nop
popa
and
dec
cmc
push
test
imul
cli
mov
in
scas
fldcw
addr16
jno
mov
mov
aas
nop
iret
out
dec
xor
cwtl
mov
add
out
jecxz
fnstenv
xchg
mov
or
nop
cmpsb
jbe
pop
push
jge
stc
aas
leave
xchg
cmpsb
test
jae
rorb
fsub
inc
or
std
faddl
mov
psubb
xchg
jg
and
loopne
pop
adc
sub
mov
push
out
nop
inc
inc
imul
xorl
clc
mov
cmp
aas
out
imul
xchg
or
xchg
in
fcomip
xorb
pop
mov
pop
add
push
adc
pop
es
push
int3
jb
fnstenv
xor
mov
cmp
clc
xchg
push
xchg
inc
sbbb
push
mov
push
stc
jo
adcl
pop
add
mov
cli
adc
les
and
mov
shr
enter
loopne
scas
fs
ret
mov
sbb
out
mov
adc
out
lock
sbb
popf
hlt
iret
dec
ljmp
sbb
insb
adc
sub
xchg
ret
jb
xchg
hlt
cmpsl
pop
clc
adc
sti
ss
mov
in
cmp
mov
xor
lods
and
cmp
sbb
pop
jp
dec
mov
mov
pop
push
sub
in
push
mov
jmp
fldenv
mov
pop
movsb
dec
pusha
adc
lods
push
xchg
sbbl
mov
lock
jp
and
add
call
loopne
loope
adc
rorl
push
mov
insb
jle
sub
lcall
leave
xchg
jns
xor
and
in
dec
or
xchg
push
ret
cli
add
xorl
mov
imul
in
sub
sarb
cmp
mov
jnp
sbb
xchg
std
jae
mov
scas
adc
cltd
or
cmp
mov
arpl
vmwrite
adc
fisubs
rol
cs
jns
push
sub
pop
cwtl
nop
daa
xor
test
das
sbb
xor
out
addl
inc
rcrl
sub
cwtl
sbb
mov
test
mov
fisttpll
push
mov
adc
pushf
and
int
cli
nop
andl
test
fldt
cwtl
jg
cs
xor
jmp
in
outsl
repnz
inc
imul
std
into
jmp
mov
xor
hlt
stos
jmp
clc
sarl
in
add
test
xchg
out
xor
aad
push
and
and
mov
xchg
out
inc
or
dec
or
cmp
out
cmpl
int3
sar
ss
mov
into
jns
xor
jbe
or
jmp
xchg
push
pop
cmpsl
push
dec
add
mov
xor
jge
push
enter
movsb
mov
lret
mov
movsb
push
adc
frstor
add
aaa
push
add
divl
outsl
cmp
lret
jns
rcll
sub
cmp
xor
xchg
adc
xchg
sub
xor
icebp
in
ds
or
cld
cltd
or
dec
outsl
movsb
mov
cmp
push
repnz
das
jns
iret
mov
repnz
cwtl
push
jbe
aas
mov
fmull
cmp
mov
cli
test
adc
loopne
sub
cmpsb
vmovntpd
in
pop
int3
es
lds
mov
or
repnz
imul
rcll
xor
pop
mov
jmp
arpl
jge,pn
loopne
cmp
das
cli
loopne
aas
mov
sbb
jb
inc
cltd
call
lds
popa
jbe
fxch
cmpsl
push
mov
adc
sarb
cmp
or
xchg
mov
test
sub
fcoms
popf
mov
mov
sbb
outsl
pop
cs
fisubl
fwait
repnz
scas
icebp
scas
mov
push
ret
pop
les
addr16
inc
push
xchg
fmul
aas
test
mov
push
lock
inc
mov
in
iret
and
fs
jle
pop
jge
movsl
xor
jmp
out
call
pop
sub
aaa
cmp
shlb
push
sti
mov
lock
inc
jmp
lret
movsb
pop
shlb
andl
push
jl
cmp
sbb
cmpsb
shlb
fs
pop
xchg
dec
jmp
cmc
fdivr
add
in
in
pop
icebp
cs
sbb
cmp
fsubrs
adcb
pop
mov
jae
leave
mov
clc
mov
mov
popf
aas
mov
inc
sbb
inc
mov
stc
stc
lods
loopne
pop
shll
dec
dec
lea
jae
inc
pop
mov
jg
sub
cmc
xchg
push
mov
notb
jne
outsl
sbb
sub
imul
outsb
adc
ja
jae
enter
cmp
pop
clc
aad
xchg
fptan
jle
jno
out
or
ja
fsubrl
or
addr16
sahf
inc
inc
aas
and
fdivrl
aas
iret
push
jbe
adc
stc
cld
xor
rcl
jecxz
sbb
aad
sahf
lcall
xchg
cli
xor
add
test
lods
inc
aam
cmpl
inc
lods
rorb
test
mov
outsl
cmp
decb
push
loopne
aaa
jmp
sub
ss
out
sbb
cmova
jnp
js
mov
hlt
clc
adc
in
aad
sub
roll
cmp
cmp
out
inc
mov
in
dec
scas
cmp
in
shrl
push
push
pop
xchg
fwait
xchg
out
mov
add
push
repnz
dec
ret
fidivrs
imul
sbb
xchg
jp
cmpsl
cmpsl
out
add
call
mov
and
shll
add
fmulp
popf
mov
out
dec
jbe
stos
andb
mov
push
sahf
sub
or
dec
stos
dec
mov
loope
cld
flds
pusha
mov
and
sbb
xchg
inc
jle
aaa
jb
out
das
adc
bnd
lea
cwtl
dec
sub
xlat
mov
add
mov
mov
mov
xchg
mov
inc
sti
sahf
cmp
or
xor
cmp
shlb
mov
mov
push
enter
jmp
lret
mov
inc
pandn
ret
mov
mov
test
and
imul
pop
bound
mov
test
cmc
dec
outsl
cmc
test
mov
push
adc
sub
imul
mov
out
out
clc
dec
das
sbb
outsl
dec
cwtl
dec
cmp
or
and
mov
add
shll
add
lods
pushf
andb
cmpsb
xor
dec
add
ret
scas
std
sbb
mov
and
sbb
ja
cli
lock
mov
xor
adc
popf
push
out
jnp
mov
mov
or
mov
popf
jae
into
sbb
lds
jo
sti
or
push
ss
cld
mov
xor
fnstcw
int
js
addr16
add
lret
or
pop
mov
cs
call
movsl
test
roll
or
pop
stos
mov
fs
dec
add
mov
loopne
adc
mov
mov
mov
mov
inc
es
test
fstp
sbb
jo
cmp
jb
leave
xor
pop
movsl
or
outsl
mov
mov
into
dec
cltd
and
adc
mov
imul
sti
enter
or
insl
sahf
adc
xchg
cli
ret
lock
adc
subl
or
ficomps
mov
adc
xchg
in
sub
jg
push
loop
lods
sbb
adcb
fistpl
aad
jbe
pop
vhaddps
jge
repz
jecxz
jae
rolb
adc
mov
sbb
pushl
add
or
sbb
push
bound
dec
add
int
sub
daa
mov
movsb
xchg
js
ret
jge
add
adc
cmp
push
xor
ss
mov
sbb
adc
cli
orl
fwait
push
ss
ljmp
lret
adc
mov
add
mov
popf
dec
inc
lcall
movsb
sbb
mov
lea
test
xchg
push
sub
sub
lcall
js
in
test
das
stos
dec
fnstcw
cmp
push
daa
icebp
sti
mov
outsl
inc
scas
int3
insl
pop
lock
addr16
ss
pop
sti
mov
push
pop
outsb
mov
sbb
inc
xor
enter
xchg
outsb
fnsave
test
mov
adc
cltd
mov
notb
imul
mov
push
push
fcmovnbe
mov
pop
lret
stos
mov
fists
stc
pop
sbb
mov
icebp
inc
add
add
jb
repnz
inc
cs
pusha
loopne
sub
lock
and
push
push
cmpsl
dec
jp
pop
mov
inc
mov
xchg
mov
mov
dec
sub
lahf
xchg
scas
jp
loop
into
adc
test
xor
out
ss
xchg
inc
mov
jp
test
jbe
repz
and
adc
sbb
push
insb
test
sbb
cs
jne
pop
jge
xchg
mov
mov
xor
popaw
fdivrl
cmp
addr16
mov
inc
cmp
or
xchg
push
xchg
cwtl
repnz
mov
add
rcrl
mov
scas
leave
sub
and
cmp
lods
pusha
jo
insb
cmc
sbb
bound
push
push
and
cs
mov
inc
stos
jecxz
push
jecxz
call
add
leave
sub
in
adc
test
push
out
test
rcrb
ljmp
sub
hlt
mov
imul
js
push
push
adc
xchg
add
les
inc
cmp
push
cmp
ljmp
fnstcw
add
aaa
out
fnsave
ret
out
cmpsl
movsb
and
cmp
or
sub
mov
lds
fwait
jnp
jno
and
mov
xchg
mov
fsubp
pop
dec
lret
mov
scas
ljmp
in
icebp
test
jbe
inc
sbb
sti
push
js
mov
inc
ds
fwait
in
sub
movsl
in
mov
sbb
fs
sub
outsl
mov
das
popf
test
daa
sbb
cwtl
in
shll
sbb
add
dec
das
and
inc
mov
push
jae
stc
jle
mov
movsb
add
push
rorb
cltd
sub
sub
dec
cli
or
sbb
pop
fnop
sbb
fbld
cmpsl
mov
fstl
jns
and
sbb
js
lahf
push
fld
imul
sbb
loopne
mov
scas
subb
lahf
xchg
popf
mov
sub
xor
or
int
pop
imull
fwait
push
adc
gs
sub
mov
nop
inc
push
add
adc
adc
inc
and
movsl
mov
adc
add
dec
fstps
mov
cmp
movsb
adc
jno
cmpsl
lea
pusha
aaa
mov
cli
and
mov
ljmp
ja
cld
cld
aam
mov
in
pop
cld
adc
ljmp
jmp
sub
and
or
cld
and
fistl
out
notb
out
cltd
sbb
pop
sbb
scas
test
cmpsb
xor
jmp
das
leave
and
inc
js
inc
jae
call
arpl
xor
dec
xor
shll
mov
outsb
imul
loop
jmp
xchg
inc
lret
pop
mov
ret
jecxz
cmpsb
mov
mov
jmp
or
aaa
add
cmp
rcr
inc
xor
push
mov
fldl
in
cwtl
add
leave
stos
addr16
and
shlb
mov
out
add
dec
outsb
addl
cmp
adc
stc
cmpsb
sbb
rclb
stos
mov
push
mov
pop
mov
popf
or
mov
movsl
movsl
sbb
mov
out
out
rorl
sbb
push
add
push
dec
call
inc
stos
scas
fbld
stos
jmp
mov
mov
jecxz
std
iret
sbb
cmp
jl
xchg
lea
adc
fldenv
or
dec
test
ret
loop
sbb
and
sub
in
jb
inc
outsl
lods
out
pop
rorl
inc
xchg
int3
add
inc
ss
push
je
aad
xor
dec
addr16
cmp
out
or
xlat
in
in
ret
push
in
popa
dec
test
adc
push
sub
insl
sbb
cwtl
jp
icebp
jge
sub
clc
and
enter
adcb
jecxz
daa
addb
repz
sub
push
fldcw
aaa
mov
test
fcompl
add
andl
mov
push
jnp
inc
enter
xchg
gs
roll
sub
push
dec
cmp
mov
lods
or
cmpsb
in
pop
xor
xchg
push
xor
fldl
cwtl
cmpb
pop
movsl
daa
lea
mov
add
pop
popa
cmp
aam
xchg
xchg
sub
clc
jecxz
loop
xchg
jp
lret
mov
xchg
xor
mov
sbb
jg
sbb
incl
cwtl
dec
test
mov
aaa
imul
test
push
adcl
sub
popf
sahf
aaa
mov
or
sub
inc
in
mov
mov
jge
and
lret
dec
leave
adcl
lock
jbe
cmp
pop
or
mov
pop
xchg
push
rcrl
jmp
std
jmp
xor
outsl
push
mov
mov
aas
and
or
xor
cmp
dec
mov
dec
mov
hlt
mov
xchg
jp
sbb
sbb
mov
mul
xchg
push
pop
idivl
or
xchg
leave
dec
cmpsl
add
fidivs
jle
inc
arpl
scas
lcall
adc
mov
aam
imul
sub
into
push
shlb
pop
sti
stos
cmp
xchg
aam
mov
dec
mov
mov
mov
mov
arpl
push
mov
push
mov
sbb
xor
xor
xchg
inc
stc
push
mov
adc
sbb
sub
pop
jb
imulb
jg
or
inc
or
jp
sub
and
add
outsb
xchg
pop
flds
xor
fists
mov
mov
xchg
out
mov
outsl
jmp
pusha
popa
xchg
insl
pop
sub
inc
add
adc
mov
jle
lea
inc
mov
xchg
push
adc
loope
addl
ljmp
jnp
test
test
mulb
enter
adc
sbb
cld
jmp
stos
jle
or
mov
dec
in
pop
add
add
cs
fs
mov
mov
mov
or
push
ljmpw
iret
xchg
popf
push
stos
movsl
dec
fstps
cmp
scas
add
xchg
push
popl
mov
xchg
pop
insl
cltd
mov
sub
popa
insl
jle
jmp
aaa
test
sub
outsb
xchg
xchg
sub
out
inc
sti
mov
and
adc
aad
sbb
jns
add
jns
add
loope
test
and
inc
mov
outsl
lahf
mov
sub
mov
pop
push
jecxz
add
pop
push
inc
les
sbb
inc
ljmp
mov
lods
push
inc
xor
or
cmp
xor
mov
repz
jbe
ss
pop
push
sbb
out
sbb
gs
jmp
jne
cli
and
clc
ret
lods
add
je
jno
repnz
or
push
out
les
pop
rorb
loopne
add
in
mov
sbb
aam
ret
xor
roll
and
rcr
stos
jns
stos
jmp
xor
scas
mov
loope
cmp
lods
dec
add
cmp
pop
bound
mov
shll
mov
push
fildl
data16
fdiv
shll
push
insb
cs
inc
adc
fidivl
pushf
in
nop
jbe
test
bnd
test
movsb
outsb
pop
fnstsw
jge
js
inc
inc
sbb
ret
mov
add
clc
cli
inc
mov
lock
lods
aaa
mov
fdivrs
and
dec
js
push
fimull
ljmp
mov
mov
sbb
xchg
pop
shlb
ja
or
mov
sbb
mov
test
pop
inc
nop
xchg
adc
out
xlat
push
mov
lcall
ret
das
mov
int3
xor
add
or
in
mov
sub
sub
rclb
mov
out
sbb
out
rclb
insb
jne
and
add
outsl
es
loope
push
lods
fnstsw
lret
inc
mov
das
out
sbb
adc
int3
lds
jnp
xor
cs
xlat
icebp
sbb
dec
shrb
dec
daa
aaa
xchg
pop
xchg
popa
jge
cltd
add
push
clc
pop
lods
cmpsb
loop
add
rcrb
or
pop
xlat
and
insl
arpl
jno
pop
shll
inc
jp
stc
jmp
test
jb
rclb
mov
outsl
in
outsb
push
mov
enter
cmpsl
add
out
cli
or
pop
pop
in
int
ficomps
jg
push
loopne
jo
inc
cmp
xor
out
scas
pop
jmp
mov
call
ffreep
cs
xchg
inc
mov
mov
loope
seta
xchg
jne
sub
xchg
test
xlat
fcoml
sbb
stc
ljmp
into
cmpb
jne
mov
daa
test
bound
rorl
adc
loope
pop
push
js
mov
ja
pop
mov
scas
xorl
ret
sarb
mov
stos
sbb
out
outsl
mov
cmp
je
add
mov
stos
or
andb
stos
sub
in
xchg
cmp
pop
fdivs
xor
pop
scas
cmp
and
push
int3
repz
push
repnz
push
adc
or
js
gs
inc
adc
pop
popa
jo
sti
jle
inc
clc
lcall
lea
leave
mov
das
xchg
mov
insl
sub
std
push
lds
mov
fimuls
movsl
sahf
xchg
xchg
inc
adc
inc
pushf
inc
std
iret
repnz
xor
gs
mov
lcall
scas
inc
std
xchg
frstor
cmp
mov
fcoml
sbb
mov
inc
aad
fsubrp
dec
jbe
int3
xchg
pushf
xchg
sub
pop
add
push
ja
xor
in
out
push
dec
lcall
xor
cmpsb
mov
lret
movsb
xor
sbb
jg
cli
lcall
inc
jb
inc
push
add
sbb
stc
ss
jge
mov
lods
jne
inc
mov
mov
jae
out
cmp
mov
adc
cwtl
sarb
movsl
adc
out
shrl
mov
mov
repnz
cmp
nop
int3
lahf
sub
lock
inc
mov
mov
mov
imul
clc
cmp
xchg
pop
pusha
sarb
adc
stc
pop
leave
out
add
push
pop
mov
repz
jne
push
xchg
xor
sub
and
push
cmp
mov
adc
std
les
addl
sbb
xor
fnstcw
or
push
cld
adc
test
lret
fistpll
les
dec
xor
cmp
push
or
imul
fisubl
fcomps
es
xchg
inc
mov
scas
and
adc
cmc
movsb
loopne
insb
sbb
arpl
jne
adc
movsl
pop
pop
mov
and
inc
sti
test
ljmp
sbb
stos
cli
clc
inc
outsl
adcb
xchg
xchg
shll
mov
jb
mov
scas
xor
adc
aas
adc
into
hlt
addr16
sbb
mov
adc
outsb
shrb
jge
shrb
sub
or
xor
cmpsl
into
xor
sub
jge
das
loopne
int3
rorb
les
jecxz
clc
arpl
cmp
out
dec
xchg
jl
lock
mov
notl
adc
js
push
iret
clc
xchg
lods
adc
test
ret
push
push
or
adc
sahf
ds
adc
pusha
xchg
or
xchg
fisubs
cmp
mov
jmp
cltd
in
pop
xchg
sti
cmpsl
pop
pusha
mov
xor
xchg
jns
ja
mov
or
inc
sub
insl
push
or
adc
sub
sti
idivl
pop
ret
cmp
lods
add
insb
jnp
mov
adc
stc
sti
cld
push
xor
pop
pop
xor
aaa
addr16
in
adc
mov
gs
insl
out
loop
pop
fidivl
inc
testl
pop
cmc
jg
xchg
pusha
sbb
gs
mov
sbb
sarb
cmpxchg
push
sbb
sub
jns
push
mov
mov
dec
and
divl
and
sub
push
cld
xchg
xchg
mov
and
adc
data16
fsubrp
sahf
xchg
xchg
jno
loop
mov
out
imul
daa
pop
mov
mov
pop
mov
and
xor
repnz
data16
xchg
outsb
test
dec
push
outsl
push
not
sub
jno
pop
and
lds
sbb
aad
sub
mov
imul
mov
popl
rcl
mov
out
push
push
pop
aaa
sub
add
cmpsb
inc
pop
jle
lds
mov
arpl
test
adc
scas
mov
mov
pop
nop
ja
push
cli
add
jne
or
dec
loop
adcb
sti
out
mov
fidivrl
sti
testb
int3
mov
dec
cmpsb
scas
push
ret
jo
mov
mov
dec
sbb
xor
cmpsl
arpl
or
cwtl
jbe
in
stos
cmpsb
push
dec
push
mov
ljmp
aam
les
inc
xor
mov
mov
inc
push
sub
sbb
jmp
pop
hlt
ret
fwait
outsl
and
xor
cmpsb
add
mov
fldcw
push
lahf
cmp
cs
mov
mov
imul
mov
subl
lahf
mov
js
fimull
leave
jl
test
scas
or
or
inc
xor
jmp
cmp
adcb
sbb
cmpsb
stos
ret
aaa
dec
rcl
sub
aas
das
pop
mov
and
inc
pop
jge
outsl
xchg
or
jle
jbe
pop
xchg
adc
subb
push
bound
pop
in
lods
push
cltd
xchg
pop
push
mov
mov
aad
in
xchg
add
inc
jmp
cmp
pop
xchg
sahf
lock
jb
xor
mov
jns
insw
stos
add
xlat
mov
push
jl
sub
pop
push
pop
adc
mov
push
adc
fld
adc
xchg
cmp
xorl
mov
pusha
fdivl
movl
es
dec
bnd
pop
loope
jns
pop
stos
xor
jae
lea
sti
adc
push
jns
sbb
add
xchg
lret
repnz
mov
dec
cmp
mulb
hlt
addr16
and
lcall
loopne
push
sub
push
xor
in
mov
cmp
cmp
pop
test
fidivs
sbb
call
cltd
orl
mov
ljmp
pop
cld
cs
mov
add
jmp
mov
scas
mov
in
pop
lods
into
mov
test
cmp
cmpsl
fwait
rolb
mov
repz
mov
pop
lret
add
pop
gs
pushf
movsb
test
mov
push
mov
mov
add
xorl
lods
mov
inc
in
xchg
fidivrs
int3
das
dec
mov
cmpsb
jne
js
scas
scas
mov
sti
leave
imul
jbe
stos
and
mov
fwait
into
mov
jb
scas
mov
add
mov
xchg
xor
aas
cmp
pop
or
dec
xchg
or
test
jp
jnp
imul
shl
test
aad
or
add
into
push
mov
aam
xor
and
inc
lods
shrl
test
mov
out
inc
sti
lcall
xchg
shrl
outsb
cmp
fisubrl
dec
jl
es
movsl
jbe
sbb
xchg
sbb
push
scas
sbb
subl
xor
cmpsl
sbb
mov
mov
xor
jb
push
shll
push
test
clc
jb
andl
lahf
pop
stos
mov
icebp
aad
dec
insl
sub
insl
dec
xor
xchg
fcmovu
sub
in
call
cmp
pop
out
inc
mov
les
cld
stos
aas
dec
mov
mov
in
clc
xchg
sbb
sbb
mov
enter
sbb
sbb
mov
cmp
cmpb
xchg
mov
mov
pop
int3
and
mov
jmp
cmp
mov
in
or
outsb
inc
ror
fdivrp
js
out
mov
leave
shl
push
xor
or
sub
subl
sub
iret
repnz
lret
dec
hlt
mov
enter
mov
push
pop
in
xchg
out
into
sub
hlt
pushf
mov
test
in
mov
sahf
cmp
or
adc
sbb
add
jo
and
int3
imul
fadd
lock
sbb
mov
in
lods
mov
test
cmpsl
aaa
inc
adc
test
xor
iret
mov
mov
push
or
adc
icebp
xor
mov
inc
rolb
dec
xlat
iret
add
jns
stc
jmp
and
sbb
data16
dec
jg
jmp
jb
jb
fcoml
pop
fwait
adc
adc
sub
mov
fdivp
mov
xchg
cmc
ljmp
filds
lods
cmc
pop
push
into
cmp
pop
mov
push
push
or
mov
dec
scas
fisttps
push
sahf
outsb
leave
dec
sbb
rorb
dec
mov
push
cltd
mov
pop
pop
xchg
mov
cmpsb
mov
jbe
push
mov
inc
cmp
adc
fidivrl
arpl
cmp
push
cmp
rolb
inc
dec
pop
mov
mov
inc
lock
xchg
jnp
imulb
loope
push
push
push
xlat
leave
push
sub
pop
adc
xchg
ss
lock
cmpsb
jmp
repz
and
and
sbb
roll
aad
das
hlt
out
pop
xchg
popl
fsubs
push
jae
xor
jae
pop
es
icebp
cmp
mov
xchg
mov
ljmp
xchg
mov
cmp
fisubl
and
push
fs
jmp
mov
dec
jno
dec
add
leave
subl
xlat
jnp
cmpsb
or
adcb
mov
sbb
cmp
mov
mov
fldt
scas
daa
in
adc
dec
cmp
int3
inc
incb
pop
icebp
push
or
in
push
add
leave
dec
xchg
push
mov
xlat
mov
sbb
jecxz
mov
jno
add
dec
adc
xchg
inc
cli
push
leave
push
inc
sub
fstp
repnz
mov
lods
mov
scas
mov
test
push
pop
dec
add
xor
into
push
or
xor
scas
mov
shr
mov
mov
out
inc
lods
daa
pop
repnz
and
inc
and
into
and
adc
negl
imul
sahf
fs
in
adc
push
sbb
loop
push
xchg
jl
inc
adc
fstpt
fs
and
or
mov
jmp
stc
push
cmp
push
aas
in
mov
mov
imulb
add
leave
ljmp
frstor
mov
xor
jb
outsl
mov
inc
imul
sbb
arpl
incb
lods
pop
inc
ret
idivb
outsl
adc
inc
outsb
sbb
ds
sub
push
das
mov
out
outsl
daa
mov
int3
lret
out
cs
xchg
and
fstp
shll
xor
push
cmp
fnstsw
xchg
sub
jae
lea
xchg
pop
nop
setbe
jmp
jg
sar
lea
mov
cli
dec
mov
lds
add
sbb
xor
test
xchg
jae
mov
pop
mov
push
xchg
jecxz
repnz
negb
ds
inc
test
sub
and
loop
outsl
pushf
push
mov
mov
or
add
push
mov
cmp
adc
add
xchg
sub
inc
loope
ljmp
inc
xor
dec
inc
leave
cmp
push
sahf
jbe
or
xor
xor
push
adc
pop
jbe
adc
dec
mov
mov
out
jae
icebp
cmp
mov
adc
dec
sub
sarl
xchg
inc
xor
xchg
pop
xchg
dec
repz
fsub
insb
pop
popf
push
mov
test
aaa
idivl
push
ljmp
mov
mov
jmp
fidivl
iret
je
push
mov
faddl
test
fistpll
push
sub
out
jl
lret
stos
mov
call
enter
add
sub
pop
ljmp
adc
dec
push
arpl
cwtl
je
add
pusha
hlt
xor
repz
sti
add
adc
mov
ds
pop
xchg
ret
adc
fists
mov
inc
test
or
mov
mov
or
das
std
jmp
pop
cmp
or
adc
in
fcomps
adc
popf
pop
xchg
cmp
xchg
inc
pop
imul
cmpsb
cltd
sub
mov
mov
push
jmp
mov
xchg
mov
xchg
xchg
jecxz
addb
xchg
hlt
je
loopne
and
dec
push
nop
insl
pushf
xchg
test
dec
pop
dec
sarb
outsb
mov
xor
cmpsb
nop
jno
jp
sbb
xor
sub
sti
pop
imul
loop
pop
lcall
cs
stos
mov
inc
mov
cmpsb
xchg
push
movsl
mov
jne
xor
sub
xchg
inc
jge
daa
pop
cmp
andl
push
add
mov
cmpsb
loopne
in
cmpsl
add
xchg
cwtl
aam
jo
jmp
loop
mov
dec
int3
xchg
mov
popf
and
fmuls
inc
js
pop
not
sub
movsb
movl
cmp
mov
mov
xchg
xchg
lret
and
mov
cmp
sbb
insl
pop
into
cs
push
in
shlb
jmp
sub
cmp
lahf
sbb
xchg
pop
and
mov
scas
lods
mov
nop
push
leave
mov
repnz
jl
inc
divb
repnz
pop
scas
call
adc
cmp
enter
jo
push
pop
and
movsl
dec
std
scas
mov
add
pop
test
lea
jg
mov
push
mov
pcmpeqd
jl
pop
lahf
xor
incb
rcrl
popa
add
test
add
cltd
inc
insl
rclb
rcrb
lahf
shrl
inc
lret
jne
hlt
stos
loope
jmp
adc
dec
sub
mov
sub
or
dec
imul
test
mov
push
ret
mov
and
mov
or
mov
sub
adc
mov
dec
add
sub
pusha
sbb
mov
and
mov
dec
jle
pop
inc
js
sub
pop
jb
insl
sahf
sahf
negb
test
or
sar
stc
insl
mull
lods
dec
xor
lds
pop
inc
out
das
cmpsb
jbe
sbb
out
sub
ret
int
in
std
sbb
inc
repnz
setb
stos
iret
loopne
loop
and
sub
pop
subb
jl
adc
ret
inc
jno
jnp
test
out
cmp
scas
lock
out
xchg
enter
mov
pop
sahf
dec
add
pop
daa
inc
or
xlat
jo
push
and
sub
jecxz
das
lods
and
mov
cld
mov
sahf
mov
dec
movsl
fidivl
pop
test
xchg
imull
mov
mov
fs
mov
in
or
jg
sbb
push
xor
inc
int
ja
lea
dec
mov
mov
xor
popa
and
pop
leave
cmp
psubsw
loopne
repnz
add
sbb
int3
sbb
cwtl
imul
push
addr16
jne
add
add
fcompl
int3
shrb
mov
xchg
test
imul
xchg
fildl
jle
xchg
in
lret
mov
jnp
repnz
inc
cs
cmpb
mov
fcmove
cmp
push
ljmp
and
mov
push
xchg
out
repz
mov
rcrl
std
cmp
fldenv
test
cs
xor
mov
push
clc
and
inc
adc
push
mov
sbb
movb
daa
cmc
pop
lret
mov
add
push
pushf
aam
std
std
push
adc
stos
cltd
dec
adc
pop
cwtl
stos
or
fldenv
push
or
movsl
jmp
dec
in
bound
seta
fsubs
or
lret
sar
xor
mov
mov
lock
fbstp
sbb
and
pop
mov
pushf
mov
mov
fnstcw
mov
push
out
sahf
cmp
lods
adc
test
adc
dec
les
rolb
xchg
mov
mov
pop
lock
stos
icebp
sub
cmp
lcall
call
addr16
dec
push
in
into
in
mov
call
mov
adc
lock
mov
jmp
mov
push
cmc
jmp
mov
add
cmp
xorb
add
loope
dec
sub
adc
leave
mov
mov
or
mov
xlat
dec
rolb
es
cmpsb
cli
cmp
or
stos
mov
jle
sub
sar
mov
jae
iret
xor
enter
popa
out
in
gs
mov
fmuls
xlat
inc
add
int3
sbb
mov
mov
icebp
andb
inc
jbe
or
loope
xor
cmp
pop
mov
mov
stc
mov
mov
jns
pop
cmp
imul
mov
add
arpl
adc
cltd
dec
mov
ljmp
icebp
addl
jle
inc
sbb
jae
movsb
cmpsl
cmpsb
pop
cltd
dec
out
adc
jnp
mov
fs
cs
cmp
ret
jns
daa
sarb
popf
lcall
add
int3
xor
pop
out
fadd
jae
add
inc
add
ss
mov
repnz
push
scas
sbb
scas
fdivs
enter
test
add
test
idivl
mov
movsb
lock
or
mov
inc
fcmovu
mov
inc
mov
leave
adc
les
xchg
pop
xchg
lret
or
lea
gs
and
popa
dec
cmp
movsl
mov
sahf
movsw
icebp
iret
insl
pop
pusha
push
mov
pushf
mov
xor
jl
fstpt
mov
push
pop
xchg
mov
push
pmaxub
xor
xor
std
outsl
push
pop
icebp
call
movsl
les
mov
test
shr
sbb
stos
mov
movsl
or
sarb
imul
outsl
xor
mov
pusha
in
cmp
xchg
scas
inc
add
fidivl
or
adc
clc
movsl
and
or
stos
scas
pop
je
in
outsl
cld
push
push
popa
fnsave
jp
jo
cmp
pop
xchg
cltd
push
cs
adc
push
or
iret
popa
cmpps
adc
popa
arpl
sbb
jl
andl
mov
fstps
jmp
data16
daa
cmp
dec
call
repz
mov
pop
out
leave
rorl
popf
hlt
stc
cmpsl
jnp
aam
adc
sbb
add
adc
push
push
insb
popa
lods
add
dec
pop
cmp
add
je
rcrb
push
adc
xor
jecxz
fisubl
ljmp
mov
cmpsb
test
sub
dec
cmp
jmp
and
inc
mov
push
sub
insl
push
fdivs
or
push
cwtl
mov
loope
loope
mov
fimuls
cli
dec
nop
shlb
ficoml
and
dec
and
mov
in
cmp
dec
push
pop
movsb
cmc
adc
aad
xor
ds
div
jno
sbb
cwtl
cmp
ret
out
sbb
imul
cmpsl
mov
mov
scas
and
xchg
icebp
aad
das
adc
add
mov
adc
rcr
push
nop
rcrb
inc
mov
mov
add
daa
mov
cld
lds
pop
push
clc
add
push
xchg
dec
incb
imul
fwait
scas
lea
mov
mov
out
xchg
pop
cmpb
mov
adc
sub
mov
mul
xchg
mov
xchg
out
mov
hlt
mov
mov
or
std
shrl
int
xchg
jl
adc
sub
sbb
lret
stc
cmpsb
and
nop
mov
adc
cmp
int
es
ljmp
movsl
imul
ja
dec
xchg
pop
aaa
push
jne
and
pop
inc
fnstcw
loope
enter
or
mov
inc
add
decb
shlb
lahf
xlat
sub
inc
and
test
loopne
pop
push
test
add
or
int
repnz
jns
pop
daa
jg
mov
push
popf
in
inc
xor
jo
fcoml
dec
dec
fsts
and
mov
cmp
shrb
inc
mov
cmp
test
sub
mov
lods
xchg
sub
jne
xor
xchg
jns
dec
jg
clc
mov
xor
or
shl
or
adc
push
pop
adc
xor
pop
mov
mov
add
cwtl
mov
add
mov
in
mov
sbb
pop
fdiv
dec
insl
cmc
and
jnp
repnz
mov
fwait
jecxz
cwtl
dec
sub
sbb
cmpsb
jge
mov
dec
sbb
test
stos
adc
sub
stos
mov
push
mov
mov
dec
jb
pushf
jl
lret
mov
enter
loopne
xorl
add
pop
data16
rclb
dec
jle
movsb
iret
je
cmp
dec
stos
or
in
push
in
adc
mov
mov
fs
sahf
flds
mov
dec
nop
iret
ficoms
dec
dec
pop
and
clc
or
and
sub
inc
leave
ficomps
enter
pusha
outsl
enter
loope
aam
xor
xchg
stos
out
xchg
xchg
sbbl
fistpl
in
pop
pop
cmc
jmp
push
push
sub
movsb
das
jp
fdiv
inc
cmp
mov
mov
mov
movl
nopl
fadd
das
push
in
push
pop
fsubr
lea
mov
push
lock
lcall
loopne
imul
mov
and
push
dec
cltd
jne
sub
push
outsb
cli
inc
ret
roll
imul
dec
add
popa
loop
jno
xchg
add
jecxz
sub
mov
cld
jp
xchg
rcl
out
jbe
insl
rclb
pusha
lods
in
fsubrs
leave
mov
inc
lds
lret
xchg
out
sahf
dec
mov
stos
daa
pop
xchg
jae
fcompl
aad
data16
jmp
adc
inc
or
sub
inc
outsl
jbe
enter
cwtl
mov
sub
js
xor
lret
inc
ret
icebp
jne
icebp
jge
scas
stos
mov
addr16
ret
pushf
dec
int
add
mov
add
shrb
add
pop
aad
mov
fstpl
out
push
mov
mov
cmp
pop
sbb
arpl
mov
add
movsb
mov
daa
jecxz
sbb
add
jae
add
mov
jo
dec
add
pop
fistps
inc
into
or
jns
mov
out
lea
test
rorb
pop
test
shll
jecxz
pop
add
add
lret
out
repz
sub
add
sbb
or
jg
dec
aaa
aaa
push
imulb
cmp
mov
or
mov
jp
mov
add
jg
cltd
xor
lcall
leave
push
dec
or
mov
push
inc
adc
imul
jmp
jp
test
push
cmp
or
or
adc
mov
dec
je
das
and
or
scas
dec
call
mov
or
or
lcall
jnp
mov
push
pusha
dec
sti
test
cmpsb
add
mov
dec
sbbl
or
loop
adc
pop
mov
addr16
aam
scas
sub
push
sbb
jge
ret
mov
test
push
mov
scas
in
shl
cmc
popa
add
int
mov
dec
dec
repnz
cltd
mov
leave
int3
shrb
mov
pop
cmp
xor
into
push
xchg
add
ffree
scas
out
lahf
push
movsl
das
xor
cmpsb
cld
ss
sub
adc
lea
sub
inc
push
call
out
cmp
or
add
jae
sahf
sub
fwait
in
repnz
mov
fidivrl
imul
adc
ljmp
cmp
fs
pop
movsb
rorl
add
loope
fsts
cmpl
push
stos
decl
lock
icebp
xor
xor
push
push
cmp
loope
and
loopne
adc
idiv
je
xchg
xchg
adc
and
mov
pop
lods
inc
pop
inc
mov
mov
pop
fnsave
cltd
into
divl
jle
sub
sub
imul
loope
fstpl
enter
sbb
ljmp
xchg
jle
ja
xchg
xor
in
sub
movsl
imul
push
push
outsl
push
es
aaa
je
sub
jne
ffree
xor
mov
retw
pop
ss
adcl
imul
dec
inc
pop
gs
sbb
mov
push
pop
dec
dec
pusha
and
les
outsl
dec
xor
mov
mov
rcl
sbb
xor
or
dec
scas
xchg
inc
mov
ljmp
add
dec
ljmp
jbe
dec
fildl
pop
ja
js
xchg
push
ss
fs
push
push
cltd
inc
nop
sti
xor
mov
pop
jo
cltd
cmp
push
dec
lcall
adcb
out
test
mov
into
movsb
aas
daa
mov
push
xchg
mov
jmp
mov
outsb
xor
and
pop
or
jmp
dec
clc
ret
sub
fistpll
rcrb
lods
pop
outsb
sbb
dec
push
cmp
or
xchg
cmp
in
fildll
sbb
xor
stos
repz
mov
lahf
enter
cmp
or
push
sub
popa
je
lods
dec
lret
decb
cld
mov
out
bound
mov
inc
cmp
loope
aas
mov
mov
ret
cli
cmp
inc
cld
adcb
les
std
jmp
call
cli
nop
push
jg
scas
ret
insl
shrl
adc
insb
mov
pop
push
imul
cltd
dec
scas
inc
lahf
inc
mov
and
push
sbb
cmp
lret
jp
xchg
dec
popa
or
cmp
ret
in
and
lahf
jo
or
es
shll
inc
fstps
cmpsl
cli
xchg
jl
push
lcall
test
test
cmp
fdecstp
icebp
mov
sub
xchg
mov
data16
dec
je
in
aaa
outsl
dec
out
pop
stc
inc
cmp
pop
push
cwtl
dec
xor
aam
dec
mov
divb
inc
pop
out
xchg
push
call
sbb
out
sub
test
data16
jae
outsl
sbb
cmp
bnd
imul
out
cmpsb
inc
lret
testl
stos
iret
push
stc
popl
inc
mov
add
and
xchg
mov
testb
test
movsl
sbb
add
out
cmp
das
stos
mov
add
popa
or
and
pop
int3
hlt
dec
adc
cmp
fcomps
in
pop
stos
cmp
lea
cld
cltd
or
dec
repnz
scas
hlt
fwait
pop
sub
out
popa
cmp
and
pop
gs
pop
dec
cmpsl
inc
hlt
jne
lcall
loopne
mov
jp
push
das
mov
push
clc
jae
lcall
repnz
outsb
sub
mov
arpl
xchg
sub
dec
cmp
push
xlat
xchg
inc
mov
lahf
pop
in
test
notl
jbe
mov
push
add
mov
mov
pushf
stos
adc
fwait
pop
jle
push
cmp
pop
ja
cmp
sbbb
adc
daa
pop
hlt
xchg
cmpsb
push
loopne
mov
adc
sub
and
cmp
pop
cmp
adc
adc
ja
cmp
aam
mov
sbb
xchg
push
data16
inc
daa
dec
adc
push
lret
jg
jnp
hlt
out
pop
and
fwait
pop
jnp
or
pop
cmpsb
or
mov
and
mov
enter
insl
push
mov
scas
sbb
adc
add
insl
in
add
ss
sub
jmp
add
dec
icebp
xchg
push
aas
mov
push
add
ret
je
fs
dec
sti
jmp
pop
sub
clc
pop
lcall
scas
dec
ja
movl
iret
inc
add
es
adc
xchg
pop
sub
roll
sub
adc
mov
cmp
cmp
dec
sarb
in
cmp
int3
dec
dec
test
push
shrl
rorb
sub
cmp
xchg
sub
or
xchg
push
xchg
adc
jnp
mov
insb
aaa
jbe
cmp
xchg
xchg
scas
sbb
cli
stc
add
int
push
push
call
jge
dec
in
scas
mov
push
jecxz
data16
pop
imul
xchg
sbb
or
xchg
cvttps2pi
out
mov
in
jne
xor
xor
mov
cmp
loop
push
push
jbe
cmp
rclb
dec
adc
sub
or
loop
mov
dec
imul
xchg
push
lods
or
cltd
jg
mov
or
jno
and
mov
add
dec
ljmp
sbb
xor
mov
bound
les
fabs
out
mov
cmp
insl
int3
in
sub
jns
stos
xor
push
rorb
mov
lret
pop
mov
cwtl
push
adc
and
sahf
in
loopne
js
lcall
fwait
cmc
addr16
pop
gs
lret
cmp
xorl
xchg
insb
mov
and
pop
mov
and
jbe
sub
fwait
xor
lret
cwtl
inc
daa
cli
mov
ret
push
adc
test
jmp
mov
jg
and
push
xchg
mov
fisttpl
mov
insl
jno
push
negl
inc
mov
fnstenv
and
test
jg
push
dec
js
xor
mov
adc
cld
sahf
pop
xor
sub
bsf
xor
fnstenv
shrb
xlat
pop
repz
xor
cltd
fisttps
xor
shlb
test
or
mov
or
jae
xor
dec
ja
int
aaa
lds
sbb
jmp
ds
push
sub
ss
push
imul
in
aam
jg
mov
cltd
notb
lock
push
sub
dec
cmp
jnp
aam
sbb
loop
add
aas
cmp
dec
mov
mov
jbe
shll
jo
dec
adcl
adc
xchg
mov
lods
loope
loop
mov
inc
pop
sbb
inc
adc
jo
in
dec
movsl
stos
hlt
pop
push
ficoml
mov
add
and
push
jmp
adc
icebp
jp
sub
inc
lock
mov
aaa
cmp
es
jmp
fldl
xor
jecxz
shll
packssdw
out
dec
ljmp
iret
sbb
jbe
push
or
mov
and
xor
xor
mov
das
fisttpl
inc
xchg
sbb
dec
je
jne
repz
push
sub
bound
fimull
int
mov
xchg
insb
clc
mov
aaa
dec
ss
mov
lcall
in
fisubrs
call
xchg
jl
pop
push
adc
adc
mov
in
jge
xor
test
sbb
sbb
mov
push
popf
testb
in
pop
ficomps
ljmp
xlat
and
xor
loop
call
sbb
xor
std
xchg
mov
sbb
jg
add
or
and
cli
fisubrs
sarb
adc
popa
dec
int3
lods
cltd
and
je
mov
xor
or
dec
push
add
lds
xchg
fcomps
inc
pop
and
add
mov
aam
mov
add
or
popf
icebp
arpl
popa
push
jo
jp
sti
xchg
das
iret
popf
or
sub
jg
add
cld
loopne
out
jo
icebp
pop
adc
aaa
and
cli
fists
ret
test
cmp
inc
xchg
xchg
ljmp
jnp
cmp
daa
mov
mov
sub
jle
sub
sbb
mov
jne
and
mov
pop
cmp
adc
rcrl
inc
adc
jle
in
or
pushf
sub
xor
cmp
out
add
mov
mov
bound
test
mov
jno
push
sahf
jno
pop
cltd
cmp
or
dec
mov
cltd
and
lods
std
in
dec
out
mov
cli
xchg
inc
lret
pop
dec
iret
lods
xchg
fld
lods
mov
pusha
and
jl
das
shrb
lods
fldz
xor
jge
je
jp
mov
fidivrl
mov
adc
mov
mov
ss
ss
pop
mov
sub
cmp
sbbb
rcrb
fldt
cmpsl
push
test
jb
cmp
mov
mov
movsb
das
xor
or
mov
inc
add
adc
or
cmp
outsb
fdivs
push
mov
cmp
clc
sub
add
and
add
cs
fsts
push
xor
ljmp
aad
sbb
xor
jo
scas
fldl
testl
mov
push
cmp
sahf
repnz
xor
sub
adc
cmp
adcb
xchg
push
adc
fwait
xor
dec
outsl
adc
mov
dec
xchg
pop
or
hlt
daa
pop
pop
outsl
and
add
push
fsubrl
movsb
ljmp
mov
jns
jbe
jnp
jmp
push
repnz
cmp
insb
adc
adc
ret
cmp
sbb
fmul
bound
lret
mov
cmp
fbstp
push
insl
sbb
aaa
pop
sub
fwait
leave
sub
adc
lods
sti
fcompl
jb
mov
je
pop
fildl
add
test
arpl
add
pop
sbb
add
ss
gs
leave
out
fst
in
cmp
les
or
fimuls
pop
dec
lahf
cli
fs
push
mov
mov
in
hlt
fisubs
mov
pop
movsl
lea
mov
in
dec
jl
pop
sti
xchg
add
lds
dec
xlat
jle
sahf
mov
xlat
aas
lods
data16
and
shrb
sbb
xor
sub
add
loopne
inc
movl
adc
rorb
jns
push
in
rorb
hlt
inc
sub
mov
popa
pop
sarl
adc
cmp
sar
aad
addr16
es
call
dec
mov
sub
hlt
add
xor
or
jecxz
jb
xchg
clc
jg
stos
mov
pop
pop
push
mov
lods
or
jno
in
xor
fidivrl
clc
xor
inc
lret
or
add
xchg
out
pop
das
add
sti
rcll
jp,pt
sub
pop
pop
loop
mov
dec
or
mov
cs
mov
aaa
outsb
push
imul
push
loopne
mov
int
mov
pop
sbb
mov
push
jb
lods
insl
or
int
icebp
js
inc
sbb
test
push
fimuls
fsubs
dec
cmp
ss
fstp
mov
enter
cs
je
fs
adcb
sbb
add
dec
in
cmp
loopne
push
dec
test
stc
jnp
mov
fildl
push
ficoms
xchg
mov
dec
xchg
cld
ret
push
insl
aad
adc
or
scas
leave
jge
and
jecxz
in
xchg
les
jns
out
and
xor
cmp
ret
cmp
fimuls
adc
sub
dec
shl
test
jne
pop
lret
add
aas
gs
sbb
xchg
or
dec
popf
add
pop
xor
arpl
jbe
pop
pop
testl
xor
nop
push
scas
das
pop
jb
popf
fdivs
inc
stc
notl
mov
adc
sbb
out
nop
pop
or
nop
adc
rcrl
addb
pop
stos
aaa
pop
jo
lods
pop
xlat
fs
push
pop
xor
call
pop
leave
sbb
pushf
sbb
adc
mov
sbb
cmp
jmp
and
jbe
and
cli
mov
fidivs
push
push
cmp
in
ss
jns
and
shrb
les
mov
daa
jl
sub
jg
mov
imul
int
mov
gs
dec
jae
push
jno
dec
sub
daa
cmp
pop
push
mov
dec
xchg
inc
push
adc
ljmp
sbb
and
adc
add
push
sbb
outsb
push
lcall
sahf
push
fdiv
mov
adc
insb
xlat
mov
xlat
mov
or
gs
sti
rcll
mov
mov
pop
dec
enter
xor
fldt
aam
mov
sahf
xchg
inc
jnp
and
orl
inc
add
pop
lods
add
lret
xchg
push
sbb
in
arpl
hlt
lods
push
nopl
rolb
loopne
stos
mov
push
fxch
push
jno
lcall
in
mov
pop
and
unpcklps
xchg
int
xchg
arpl
fldt
cmp
dec
notb
ret
dec
jne
mov
jnp
lods
outsb
mov
test
daa
adc
push
lea
aaa
xor
arpl
in
ror
ds
and
sub
icebp
jns
or
outsb
add
mov
xor
mov
pop
jb,pn
add
test
ror
push
out
jbe
jnp
sahf
mov
loop
addr16
fisttpl
std
lods
popf
mov
sbb
test
fdivs
lds
jno
dec
mov
xor
iret
mov
inc
ss
push
cmc
repz
mov
sub
xchg
movsb
das
sub
test
inc
icebp
in
and
movsl
in
sbb
nop
jl
into
mov
repz
mov
push
fisttpll
out
jbe
push
sbb
imul
pop
adc
mov
add
cmp
pushf
pop
leave
push
sbb
fiadds
xchg
xchg
andb
push
aam
dec
popf
out
cmp
pop
ja
outsb
imul
testl
adc
mov
push
enter
xchg
mov
mov
stc
ret
stos
xorb
dec
mov
jmp
cltd
xor
popa
xor
jae
xor
sysenter
fmull
inc
xchg
rorl
enter
pop
ficompl
jb
nop
jne
sub
fistpl
scas
das
in
inc
repnz
add
xor
iret
ljmp
fwait
adc
in
lea
add
push
inc
inc
push
jmp
rolb
loop
stos
insb
or
inc
lods
outsb
mov
dec
data16
add
xchg
mov
cli
mov
dec
lcall
lds
jg
rcrb
cli
not
pop
add
fnstenv
pop
testb
sti
mov
inc
and
mov
cmp
fsubs
dec
mov
in
lcall
loop
jne
sarl
fdivl
out
cmp
ret
cmp
jbe
xor
xor
lahf
aad
mov
sbb
je
ror
cmp
lret
adc
stc
xor
xchg
test
neg
add
mov
xchg
test
loopne
nop
imul
sbbl
fsubr
push
or
cmp
inc
cmp
sbb
ja
push
pop
prefetchwt1
or
xchg
jl
add
mov
shrl
loope
push
sbb
cmc
icebp
xchg
sbb
es
cmp
test
xor
and
je
dec
adc
dec
xor
and
mov
sar
jl
mov
movsl
add
sub
insl
xor
or
out
jge
nop
notl
inc
jbe
pop
mov
dec
mov
pushl
xchg
lea
mov
xchg
cmp
aas
es
je
les
mov
adc
clc
push
roll
cmc
aaa
popa
push
enter
shll
adc
push
imul
dec
movl
out
ror
or
jmp
les
mov
and
lahf
adc
pushf
jne
sub
push
or
arpl
xchg
jecxz
mov
mov
pop
aam
movsb
sti
mov
push
jge,pn
and
ljmp
inc
push
pop
jnp
das
cmpsb
sahf
push
sub
cmpsb
jp
test
sbb
jge
jle
mov
inc
mov
std
pop
adc
inc
push
pop
mov
cmc
pop
xor
jmp
or
cmpl
jae
mov
pushf
fstpl
faddl
push
dec
fadds
cld
dec
neg
jbe
push
movsl
leave
scas
push
mov
mov
pop
in
xchg
loop
ficomps
mov
int3
ljmp
or
inc
lods
xchg
jge
cltd
fsubp
xchg
push
pop
inc
push
stos
cmpsb
lret
in
dec
aas
dec
pop
rolb
movsl
jne
jb
inc
push
lcall
sbb
add
fidivrl
sbb
aaa
jnp
dec
xor
test
pop
fisubl
daa
xor
adc
dec
push
jae
or
dec
fisttpll
test
lret
cmp
mov
dec
dec
aam
into
adc
out
mov
ss
xor
dec
dec
push
sub
jp
ret
cltd
pop
xchg
push
testb
inc
jnp
push
mov
fs
or
sub
fwait
jp
mov
jmp
test
dec
cmpsb
mov
mov
loopne
sti
or
mov
push
or
idiv
xlat
rcll
pop
mov
jmp
mov
hlt
sub
js
jb
insl
in
bound
loope
fwait
inc
aaa
nop
es
xor
mov
adc
sbb
daa
ffreep
pop
sti
jmp
pop
sbb
outsl
js
push
inc
cmp
test
sub
xor
pop
lds
addb
push
mov
rorb
add
jo
iret
in
jmp
push
add
push
pushl
lock
xchg
pop
repz
cltd
test
inc
fiadds
gs
in
sbb
push
jle
aaa
out
pop
aad
fnstenv
push
lods
xchg
adc
jp
push
sar
mov
jmp
mov
sub
ret
cmp
xorb
sbb
test
clc
mov
cmp
lea
rclb
push
sub
test
push
mov
insb
ja
push
and
xor
repnz
lods
xchg
test
xor
xchg
inc
cmp
or
and
pop
lock
sbb
fisubs
xor
mov
push
adc
add
adc
mov
lret
call
push
rclb
iret
fldenv
add
jecxz
std
adc
cmp
out
sbb
xor
mov
outsb
aas
scas
std
dec
ror
and
and
dec
setnp
fidivrl
jp
push
inc
dec
test
or
lock
js
sub
pop
in
addr16
push
mov
pop
pop
arpl
cmp
cli
cmp
test
mov
test
pop
es
push
jo
test
test
jae
cwtl
insl
aam
mov
ja
jb
shl
pop
imul
pop
jmp
je
daa
jns
pop
mov
jno
mov
adc
push
shrb
and
call
aad
sbb
adc
xchg
adc
aaa
daa
in
cli
in
push
fcoms
hlt
sub
xor
xor
mov
inc
mov
adcb
cmp
lcall
jbe
movsl
shl
inc
and
outsb
jg
add
push
icebp
jne
or
pop
mov
popa
dec
push
add
add
lcall
mov
mov
in
adcb
bound
mov
les
or
jb
jnp
fs
or
loope
mov
add
es
dec
les
lods
xchg
or
mov
push
sub
fisttpll
shl
and
rcrl
rol
mov
mov
mov
data16
jbe
cld
lahf
mov
daa
xor
outsb
cwtl
jl
jnp
fnstcw
addb
bound
aam
sahf
repz
loopne
test
jae
loop
movd
jp
xor
sbb
nop
repz
loopne
and
inc
sahf
hlt
cmp
iret
push
lahf
xor
sbb
into
pop
xchg
and
int3
stos
mov
roll
inc
push
and
daa
in
rorb
mov
xchg
mov
or
xchg
pushl
out
cld
test
cmp
lcall
unpckhps
jo
test
mov
push
mov
loop
cltd
movsl
push
scas
jbe
aas
mov
xchg
stos
add
sbb
js
fs
mov
lods
cmc
hlt
shrb
pop
jne
outsl
adc
fmull
out
mov
jl
dec
in
mov
into
popa
je
mov
xchg
pop
cwtl
mov
jmp
insl
dec
sub
mov
xchg
popf
wrmsr
fnstsw
retw
js
adc
jbe
in
add
sub
pusha
movsb
jg
mov
jbe
movsl
outsb
int
push
xchg
and
es
inc
xor
movsl
dec
mov
cmpl
pusha
jne
dec
pop
jnp
sub
pop
sub
nop
test
jne
cmpl
xchg
pop
mov
mov
push
xchg
sbb
pop
adc
lret
jl
xor
jg
ss
and
pop
aas
pop
pop
std
cld
mov
jo
bound
cmp
jmp
add
lahf
outsl
push
stos
jp
jg
fwait
negb
mov
sbb
sbb
inc
push
mov
data16
fdivl
and
in
roll
daa
adc
movsb
aas
push
call
cli
xor
add
aaa
pop
je
mov
mov
mov
test
mov
cmp
dec
adc
dec
sub
scas
and
movsb
pop
data16
fiaddl
mov
adc
sbb
leave
jl
xor
push
fcoms
ret
loope
inc
aam
rorl
add
pop
sar
cmp
cmp
mov
xor
xchg
xchg
mov
jg
adc
movsb
into
orb
in
or
ljmp
das
adc
inc
pusha
xchg
dec
xchg
dec
mov
insb
in
xchg
or
mov
daa
mov
fstps
aaa
divl
jns
adc
ret
push
aas
xchg
or
idivl
push
mov
in
push
addr16
les
lcall
xchg
jmp
mov
mov
loope
dec
out
xchg
mov
push
movsb
fdivrs
in
add
push
inc
hlt
addr16
jb
mov
mov
dec
dec
cwtl
mov
mov
adc
push
adc
and
and
jp
loop
lahf
ret
cmp
js
inc
or
xchg
aad
pop
popa
and
mov
xor
mov
out
pop
dec
lock
das
scas
xchg
sar
aas
xchg
stos
divl
jno
sahf
jl
sahf
lds
sub
dec
cmp
cmp
xchg
jno
pop
outsb
je
daa
pop
ret
and
pop
outsl
push
sti
xchg
and
lods
add
loope
sub
xchg
jmp
or
psubb
rcrb
cmpb
inc
sti
out
shlb
jmp
mov
push
jo
sarb
add
leave
dec
dec
mov
inc
push
aaa
cmpb
pusha
fisttps
fwait
inc
mov
push
mov
lret
bound
push
inc
test
int
daa
inc
xchg
lods
out
mov
xchg
into
rorb
mov
test
push
adcb
sub
pop
dec
inc
sbb
jae
mov
push
test
pop
es
push
or
sbb
dec
sub
push
dec
mov
xor
lcall
inc
cltd
pop
imul
push
or
jno
mov
cmp
mov
xchg
sbb
push
lods
xor
cmp
sub
syscall
jmp
jne
imull
imul
xchg
jno
addb
fstl
pop
popf
es
imul
cmp
out
out
dec
sti
xor
mov
or
sahf
divps
xacquire
fistpll
test
mov
fnstsw
mov
filds
shlb
mov
call
out
add
clc
nop
jmp
nop
dec
jb
mov
cli
dec
and
pop
arpl
xchg
in
sti
mov
sbb
mov
shl
adc
mov
push
mov
into
lret
sub
bnd
or
pusha
inc
sbb
aad
xor
xor
add
push
mov
or
dec
iret
addr16
insb
mov
inc
data16
je
xchg
push
push
sti
fsubrl
nop
mov
nop
aam
add
and
lcall
inc
popf
enter
mov
inc
movsb
add
mov
sbb
xchg
xor
add
nop
or
xchg
outsl
jns
aas
loopne
loop
inc
pusha
push
adc
stos
sub
int
arpl
out
in
out
dec
add
insb
jl
and
mov
movsb
std
cmpsl
aad
in
addb
data16
das
push
addr16
xchg
imul
push
mov
jno
lahf
dec
dec
xor
js
test
cli
shrl
mov
je
out
int3
mov
or
bound
cmc
sbb
faddl
xor
inc
ss
lods
push
call
scas
mov
inc
lods
inc
cmpsb
pushf
push
loopne
xchg
popa
es
jmp
out
xor
testl
outsl
dec
lcall
inc
sub
outsl
lods
cli
jnp
out
push
cmp
adcl
adc
push
jp
xchg
mov
les
cmc
outsl
insl
popa
or
out
or
or
das
insl
or
insl
fucomi
fmul
pop
fdecstp
icebp
les
fimuls
jmp
xchg
dec
jo
or
cmpb
sar
push
js
push
xor
cmp
lock
pop
fsubrl
lret
into
popf
xchg
mov
lahf
fwait
lock
inc
push
pop
bound
je
bound
jl
rcl
jns
iret
and
add
mov
clc
inc
mov
inc
and
push
adc
inc
scas
ret
dec
and
xchg
sbb
shrb
mov
sti
sub
dec
sbbb
xchg
aam
dec
mov
add
clc
dec
ficoml
cs
jle
pop
sti
push
das
ret
imul
xchg
lods
and
xchg
in
push
sbb
pop
add
sbb
sahf
add
outsl
inc
iret
lods
cmc
sarl
adc
mov
push
or
jb
push
mov
int3
pop
xor
cmp
push
movsb
dec
into
mov
cmpsl
je
iret
cmpb
cmp
jg
mov
ffree
iret
or
push
add
adc
outsb
sub
add
xor
scas
xor
int3
fcmovbe
idivl
jg
inc
out
jmp
mov
int3
notl
fdivrs
pushf
lret
mov
hlt
dec
aaa
mov
sub
sub
test
mov
stc
dec
sub
mov
imul
cmpsb
mov
fldl
xchg
jge
xchg
dec
das
stc
mov
test
gs
call
or
mov
cmp
jle
sbb
mov
scas
jmp
jno
and
or
pop
stos
push
jae
xlat
inc
or
dec
or
imul
dec
mov
imul
mul
push
scas
pusha
dec
mov
cmp
mov
insl
mov
rcl
push
mov
pop
jno
lds
cmp
fwait
lret
in
rorl
jo
aam
stos
mov
stc
dec
xchg
rorb
push
sub
test
sub
cmpsl
xor
add
jl
add
dec
repz
lahf
xchg
dec
xchg
dec
dec
stos
mov
into
add
fnstenv
jnp
std
add
pop
xlat
cmpsb
pop
shrl
lods
jmp
cmp
push
mov
out
lcall
test
pop
lret
xorl
hlt
popa
testl
push
pop
inc
arpl
dec
shll
mov
push
sub
movsb
into
jbe
popf
enter
loopne
enter
jae
mov
jmp
fnstcw
cmpsb
mov
out
jp
mov
add
push
loop
mov
dec
xchg
filds
jle
and
sub
and
out
jno
inc
jp
cmp
rorl
out
call
sbb
orl
imul
jp
scas
out
mov
out
das
sbb
inc
adc
mov
nop
shll
mov
jns
cs
shll
or
dec
xlat
xor
push
push
lds
push
push
aam
imul
aad
loopne
cwtl
xchg
jecxz
movsb
pop
lods
dec
insb
iret
call
push
push
bound
adc
js
cmp
push
xchg
enter
nop
loop
pop
lret
cmpsl
loopne
test
mov
cmp
xchg
cli
mov
sbb
cs
repnz
adc
add
cmpsb
insl
fucom
and
out
sbb
pop
and
shl
jb
mov
jg
xchg
xor
stc
test
int
jle
mov
ficompl
cltd
lret
iret
inc
push
imul
movsl
add
lea
fstpl
dec
lcall
dec
inc
mov
cmp
xchg
xchg
cli
push
lret
das
and
lret
cwtl
pop
cmp
es
push
das
fcoms
repnz
bound
jb
pop
fs
mov
jne
cltd
jmp
dec
xchg
jecxz
mov
je
rol
jp
xlat
and
or
lods
xor
dec
loopne
sub
jb
add
icebp
sbb
cld
mov
sarb
lea
jmp
insb
pop
pop
xchg
fstpl
adc
scas
clc
xchg
add
jo
sub
leave
in
cltd
jecxz
add
sbb
pop
mov
lret
cmpsb
je
rcr
out
outsl
mov
mov
lahf
ds
dec
popl
movsl
mov
out
mov
mov
add
add
inc
fcompl
or
and
xor
jle
ja
push
pop
cld
dec
jl
test
jmp
and
stos
sub
jns
out
xchg
insb
xchg
rolb
fnstenv
xchg
in
dec
shrb
push
adc
push
loopne
nop
dec
into
fstp
stos
icebp
stos
jmp
push
mov
mov
sbb
cmp
xor
adc
inc
or
mov
sub
sub
iret
mov
rcr
push
mov
mov
dec
repnz
add
popf
lea
sbb
push
jne
push
and
cmp
or
jmp
adc
stos
rcll
pop
sbb
xchg
xor
mov
or
inc
insl
mov
es
sub
jge
mov
jmp
inc
or
inc
lds
jecxz
push
adc
mov
sub
fadd
mov
lret
xlat
shll
sub
call
fiaddl
sahf
or
mov
js
mov
push
dec
mov
hlt
dec
jns
mov
jbe
in
lock
xchg
test
adc
rcll
adc
leave
mov
das
push
pusha
aam
mov
jae
movsl
arpl
mov
mov
data16
ljmp
addr16
bound
pop
pmuludq
jnp
and
and
sahf
inc
sub
xlat
jmp
pop
inc
jmp
call
and
outsb
mov
sub
movzwl
push
or
repz
mov
xchg
fs
mov
js
movsb
mov
scas
jge
sub
andb
out
call
das
xchg
inc
adc
pusha
or
pop
xor
movsl
fdivl
fisubrl
xchg
mov
xor
dec
jl
ret
pop
outsl
inc
incl
ret
sub
sbb
movsl
push
push
xor
rclb
cmp
jnp
inc
aaa
push
insl
mov
pop
movsb
in
xor
cmpsl
dec
and
lahf
xchg
pop
stos
mov
movsl
imul
xchg
and
iret
or
add
repz
cld
adc
inc
xorl
mov
out
out
or
popa
xlat
pop
dec
inc
xlat
mov
push
jo
arpl
ljmp
jmp
dec
lds
jae
inc
xchg
leave
arpl
shl
cmp
xchg
iret
int3
cwtl
lahf
push
into
test
outsl
pop
push
jle
data16
xchg
pop
push
shlb
ss
or
pop
mov
dec
xor
lods
loopne
ds
xchg
adc
stc
xchg
pop
hlt
and
dec
addl
xor
test
cmp
and
mov
jne
push
clc
out
sub
pushw
xor
push
ljmp
pop
loop
icebp
lret
inc
cwtl
enter
pop
je
inc
mov
adc
sub
or
jmp
lret
arpl
xchg
sahf
ret
repnz
jecxz
or
std
mov
cmp
xor
aad
iret
iret
mov
cltd
popf
push
cmp
pop
test
push
hlt
fdivp
rcrb
aad
pop
aad
push
pushf
or
xchg
mov
rcrb
sbb
inc
cld
sti
xor
stc
xchg
dec
and
dec
add
jnp
cmp
test
cmp
cmc
cmp
push
pop
lret
in
jge
sbb
iret
das
and
jb
jmp
sub
bound
int3
and
xor
je
fisubl
sub
adcl
idiv
dec
mov
mov
repnz
inc
inc
icebp
lret
jg
push
arpl
nop
mov
mov
xor
inc
cltd
xor
scas
dec
mov
xorl
mov
sbb
pop
outsl
test
outsl
adc
mov
jb
addr16
sbb
outsb
mov
enter
jb
test
mov
jg
xor
cmp
add
mov
into
cmp
fs
rclb
mov
daa
sbb
push
iret
sub
js
int
sbb
mov
xchg
add
mov
popf
movsb
ja
add
mov
rcrl
push
xchg
adc
lods
adc
movsl
addr16
push
jl
ret
outsl
and
add
push
lods
jo
push
add
dec
out
imul
lds
ljmp
cmp
jns
jno
mov
nop
setbe
lahf
xor
mov
jg
mov
xor
outsl
xlat
mov
cmp
lret
lds
lret
push
xchg
xchg
jae
fs
and
sarl
in
jle
adcl
out
scas
vmovupd
or
lods
inc
adc
fldcw
pop
lahf
push
mov
rorb
aam
pop
out
loop
lcall
shll
std
xchg
jmp
pop
movsb
xchg
sub
enter
and
out
push
or
cltd
fwait
fwait
sarl
pop
mov
test
jge
sub
lcall
ljmp
stos
int
xor
ja
mov
push
rcrb
fisubl
mov
sub
or
out
inc
mov
mov
cli
pushf
dec
sbb
bound
into
pop
mov
cld
loope
popa
jge
aad
xchg
cli
gs
jnp
pop
insl
stos
and
adc
xor
and
sub
xor
mov
and
in
std
imul
mov
test
pop
jg
popf
fldenv
cmc
test
and
mov
loop
pop
mov
jbe
jbe
xchg
outsl
mov
scas
xchg
div
sbb
rep
sbb
sub
lds
jne
rorl
imul
mov
sub
dec
jp
jns
push
stos
es
pop
fcomps
daa
jo
lcall
insb
jnp
dec
jecxz
test
ficompl
data16
pop
fidivrl
push
add
pop
subl
xor
out
dec
sub
aaa
cs
das
sbb
xchg
lds
ljmp
add
shlb
inc
mov
inc
in
mov
cltd
pop
stc
js
jg
frstor
inc
push
sbbl
push
out
in
arpl
and
decb
inc
rclb
dec
andb
add
call
jno
cli
xchg
jbe
cmp
aas
mov
jmp
mov
mov
stc
sub
xchg
or
aad
push
aas
xor
jae
xchg
sub
clc
pushf
add
mov
inc
dec
pop
xchg
icebp
push
jno
mov
sub
fadds
out
in
push
xor
in
ret
xchg
cmp
xor
enter
ficoms
and
and
imul
stc
sbb
push
push
jo
pushf
in
fmul
je
addr16
push
rclb
inc
mov
test
xor
bound
pop
pusha
adc
shlb
sti
mov
mov
jl
jne
ja
jns
clc
mov
push
sbb
iret
xor
in
cmp
sub
repnz
dec
icebp
pop
das
pusha
pop
xor
shll
mov
movsl
testb
jg
cmp
bound
aas
cs
test
sahf
pop
cmp
mov
mov
sub
xchg
lahf
mov
or
jae
shlb
xchg
call
es
ja,pt
movsl
xor
jbe
loope
lret
pop
adc
daa
ja
mov
jae
xchg
sbb
cmp
or
aaa
outsl
jmp
fsubrl
testb
rorl
add
inc
lock
cli
aad
adc
in
xlat
pop
mov
sub
pushf
jbe
mov
mov
mov
pop
adc
stc
and
sbb
jns
pop
xchg
loope
loopne
sbb
mov
shlb
ret
or
and
add
daa
lods
popa
inc
ja
cmc
push
jae
scas
jg
and
out
loopne
push
pop
scas
cmpsl
and
and
mov
mov
roll
jne
mov
cmc
push
into
imul
in
ja
pop
and
mov
pop
inc
iret
push
pop
adc
iret
and
adc
add
dec
xchg
pop
out
movsl
or
pop
cmpb
imul
add
std
pop
sub
addb
sbb
daa
pop
add
mov
push
repz
subb
leave
loop
cwtl
cmp
std
jl
add
and
jbe
fistl
push
xor
and
jns
mov
cmpsb
stc
movsl
bound
adc
lock
fdiv
leave
bnd
mov
out
mov
inc
in
cmpsl
fisubs
mov
xchg
fisttpll
cmp
cmp
cltd
cmc
jmp
bound
pop
ja
jb
bound
push
xor
pop
pop
daa
inc
dec
push
hlt
add
mov
aas
int3
push
mov
roll
jnp
xor
lcall
faddl
xchg
and
fimull
in
loopne
pop
mov
sbb
mov
iret
and
lods
repnz
or
ss
mov
dec
mov
inc
fs
arpl
ljmp
cld
sub
lods
cmp
or
es
enter
loopne
out
hlt
scas
cltd
repz
int3
pop
cmp
jno
inc
stos
dec
lds
stc
jo
int3
iret
push
sbb
roll
ficompl
fldcw
das
ss
stos
dec
shl
addb
cs
mov
pop
jnp
fcompl
daa
fisubl
fbld
aad
pop
lahf
sbb
leave
gs
nop
cmp
test
and
in
in
int
push
fwait
jb
test
sbb
pop
sbb
sub
enter
in
xorl
mov
pop
pop
stos
rol
ja
push
push
inc
adc
mov
repnz
imul
mov
xor
scas
jmp
cmc
xchg
xchg
cld
mov
mov
add
cld
ljmp
out
in
sub
add
dec
pop
or
les
cmc
jle
adc
pop
adc
imul
cmc
rolb
add
int3
adc
cmp
mov
adc
inc
push
sbb
ja
jmp
sbb
aad
decb
xor
push
xlat
xor
xlat
sbb
into
std
jb
sbb
stc
decb
imul
push
mov
mov
xor
and
xchg
lods
push
movsb
aas
arpl
les
jmp
sub
shlb
push
loopne
adc
or
repz
add
in
mov
xor
mov
lcall
movsb
pop
inc
push
mov
pop
in
movsb
mov
push
leave
sub
sbb
shll
pusha
cwtl
sub
testb
jge
test
or
roll
sub
inc
or
cmp
out
sbb
aad
mov
jg
add
in
fidivrs
das
push
mov
pop
popa
les
test
xor
mov
mov
dec
std
inc
mov
adc
inc
jmp
or
pop
sub
dec
push
inc
cli
divl
outsb
mov
test
jo
sub
enter
sub
insl
inc
lds
stc
sbb
in
and
notb
pop
outsl
gs
pop
popa
cltd
inc
out
bound
dec
imulb
lock
add
out
leave
jns
xor
jne
mov
sbbl
inc
dec
test
jmp
jbe
inc
sub
insl
insb
jb
sahf
mov
push
mov
xchg
pop
scas
mov
push
aas
fdivs
jns
and
addr16
add
cmp
mov
outsb
jnp
ja
push
loop
xlat
rclb
test
xchg
jle
lods
push
arpl
test
mov
ja
jae
push
fmull
push
mov
clc
inc
push
lea
scas
jl
cld
xchg
fs
subl
roll
fisttps
xchg
scas
aam
arpl
sbb
ret
or
mov
bound
push
xor
nop
cmovno
addl
jae
cmp
hlt
jge
pop
mov
in
insl
rcrl
xchg
out
popa
and
add
sbb
sbb
mov
cmpsb
loope
mov
xor
test
mov
and
movsl
lea
mov
mov
xor
cmc
xor
movsb
mov
lret
into
jp
ljmp
out
aas
inc
call
xor
dec
jg
daa
sarl
or
push
int
cmp
scas
shlb
fbstp
js
adc
aaa
pop
jmp
add
jne
das
inc
stos
jo
mov
mov
imul
fcmovnbe
jo
and
in
test
call
cmp
or
mov
sub
cli
mov
mov
dec
pop
daa
sub
mov
jae,pt
inc
mov
sub
outsb
mov
lret
fisubl
mov
mov
mov
cltd
mov
loop
fldenv
pop
mov
sub
pop
out
out
lret
pop
aas
mov
push
test
mov
add
lret
arpl
shlb
xchg
in
test
cwtl
fidivl
mov
dec
aaa
iret
fwait
sub
dec
sarl
pop
iret
fisubl
int
enter
ss
add
mov
data16
push
cmp
fmuls
and
out
mov
cmpsb
js
sbb
cmc
dec
test
mov
and
mov
insb
mov
pushl
aaa
je
out
xor
or
xchg
jno
xchg
mov
or
loop
outsw
outsl
mov
mov
fs
aas
leave
outsw
sbb
ljmp
insb
mov
scas
mov
lret
into
jbe
in
stos
sahf
pop
lods
or
sahf
inc
and
dec
enter
jp
xchg
mov
xchg
pop
mov
push
pop
jne,pn
ds
jo
loopne
mov
mov
data16
data16
popa
in
pushf
sbb
cmp
cli
ss
mov
mov
int
mov
sbb
movsl
dec
sahf
repz
movsl
sbb
cmp
or
add
push
test
xor
jbe
cmc
or
cmp
xchg
in
repz
ds
sbb
push
jge
sbb
sahf
and
push
fnstenv
push
lea
mov
and
les
push
je
mov
jo
xor
xlat
lds
scas
incl
aam
or
movsl
mov
add
jnp
sbb
test
in
sub
shll
imul
jbe
pop
push
or
xchg
aaa
movsl
ret
in
in
pop
shll
sti
int3
stos
pop
addr16
decl
mov
insl
mov
dec
mov
or
movsb
frstor
into
jle
fdivr
adcb
pop
je
jb
je
pop
dec
add
into
inc
cwtl
int3
add
mov
jb
xor
push
mov
mov
jb
subb
imul
xor
sub
sbb
daa
in
push
inc
insl
pushf
clc
test
mov
lcall
jge
xchg
jnp
sub
lds
mov
imul
fiadds
dec
pop
aas
xor
repnz
mov
pop
fld
adc
daa
lahf
mov
shll
imul
pop
fisttps
dec
dec
add
or
lods
imul
sub
insl
mov
mov
mov
mov
mov
ficomps
orl
inc
cmp
push
sub
ja
sbb
cmpb
je
rcrl
ds
aam
mov
orb
fcmovnu
loope
mov
jg
pushf
sub
sbb
cmpsl
cmp
sbb
and
add
jae
pop
shrb
into
iret
xor
sahf
outsl
add
pop
sub
and
daa
bound
sbb
daa
mov
adc
test
sbb
leave
into
fs
xchg
mov
adc
pop
cli
notl
push
pushf
daa
cld
movsb
push
cld
lds
in
gs
fs
in
outsb
mov
push
or
pop
fadd
mov
xor
and
movsl
inc
rcl
jl
pop
mov
sti
xchg
add
push
mov
outsb
and
adc
dec
pop
loopne
mov
dec
cs
scas
mov
ja
ljmp
mov
jecxz
out
in
sbb
insb
inc
hlt
std
ficoml
cli
aam
sub
lods
mov
inc
pop
mov
jnp
scas
stos
fs
pop
dec
in
mov
shlb
test
fstpt
js
dec
jmp
push
adc
js
cmp
jecxz
fimuls
push
jbe
push
sti
pop
add
ret
lcall
and
mov
sbb
fldt
loopne
movsl
lock
sbbl
push
mov
in
popf
jmp
or
or
cmpsl
pop
mov
cmp
mov
into
int3
push
and
outsl
mov
rclb
mov
cld
popf
mov
xchg
lock
cmp
daa
shll
sahf
loope
gs
jae
pop
shll
adc
jecxz
popa
adc
pop
ds
fidivs
pop
xor
cmp
pop
leave
ljmp
xor
mov
ds
in
cmp
cmp
repz
std
imul
pop
shrl
xchg
shrl
bnd
sub
loope
daa
mov
dec
ret
jb
lret
daa
push
fldl
shrb
imul
insl
fmuls
dec
xchg
pop
cmp
ja
mov
and
lret
mov
jno
fcmovnu
jne
cmp
add
sbb
sbb
and
add
sbb
cmpsb
cwtl
dec
mov
fbld
inc
addr16
mov
fidivs
bound
pop
int
sub
std
negl
scas
shrb
in
out
adc
mov
jg
rcrb
jne
jns
jns
add
jne
xchg
pop
add
add
ret
mov
inc
add
hlt
jne
cmp
punpcklbw
xor
inc
pop
sbb
adc
add
sbb
cltd
lods
jmp
or
lahf
push
jne
pop
arpl
adc
in
mov
fsts
lret
pusha
clc
sbb
in
les
inc
stos
in
repnz
inc
imul
mov
sbb
sbb
push
xchg
pop
mov
inc
push
bound
jb
sbb
jle
adc
jne
ja
out
jns
dec
push
push
jl
dec
bound
loop
pushf
rorb
dec
jl
pusha
pop
inc
cmp
rcll
pop
icebp
jge
sbb
push
and
aaa
mov
jb
fcoms
fiaddl
icebp
hlt
mov
loope
mov
jge
sahf
nopl
or
inc
bound
sub
or
gs
mov
divb
mov
fwait
and
lret
inc
pop
dec
lret
add
lcall
imul
iret
mov
mul
cs
jle
adc
imul
test
jle
in
mov
mov
fcoms
pop
jne
xchg
push
fcoml
add
pop
in
pusha
jns
pop
nop
mov
in
mov
cmp
popw
xor
cld
xchg
xchg
popf
pop
iret
or
push
lods
pop
into
mov
jnp
sbb
mov
xchg
push
mov
ss
jne
outsl
call
out
adc
fmuls
inc
mov
clc
pop
sub
inc
bound
push
adc
lods
les
add
jb
mov
and
adc
sahf
mov
int
icebp
lret
insl
lret
jge
cmp
mov
dec
add
loop
cmp
jmp
push
lahf
iret
mov
mov
push
inc
std
and
xchg
or
sbb
xchg
fsubl
sti
mov
iret
repz
inc
mov
sbb
xchg
jge
fidivl
test
push
rclb
and
cmpb
push
dec
daa
xor
mov
test
sbb
fstpl
out
pop
hlt
ja
out
and
inc
sbb
cmpsl
cmp
mov
sarb
sub
push
daa
jnp
and
xor
xor
dec
rcrb
or
push
sarl
aad
pop
mov
cmc
xor
mov
jo
lret
mul
xor
mov
mulb
shlb
add
jp
gs
jne
sub
lret
out
cmp
ds
push
or
outsl
xor
mov
push
xchg
mov
jns
iret
loope
xchg
ficomps
pop
in
jbe
jle
out
or
xor
inc
imul
fisubrl
push
fs
jg
jbe
add
int3
jnp
testl
cmp
jle
fsubs
lahf
and
pop
shrl
inc
mov
and
lret
cwtl
test
inc
out
rorl
int
jl
xchg
or
sbb
mov
sbb
push
mov
jg
sbb
gs
xchg
add
xchg
out
scas
dec
jmp
cmpsb
nop
repz
mov
sbb
jb
jle
sbb
xor
mov
movsb
rcrl
iret
mov
jno
mov
xchg
xchg
dec
pop
mov
lods
mov
add
cmp
inc
sub
cmp
stos
mov
jmp
hlt
mov
out
aam
setge
cmp
aaa
xchg
add
jg
inc
or
cmp
or
js
into
fisubrl
shrb
jg
dec
int
pop
lods
imul
orb
and
scas
mov
pushf
jecxz
sbb
cmp
dec
enter
popf
inc
popf
stos
outsb
shlb
ret
jle
inc
shr
mov
add
loop
dec
mov
movsl
pop
jmp
xchg
xor
jmp
and
xor
int
popf
and
cmp
sub
mov
repnz
leave
inc
adc
test
or
pushf
std
sub
movsl
mov
pop
xor
shrl
hlt
gs
dec
and
sbb
int3
jo
nop
aam
test
mov
push
sbb
loop
jno
jge
out
testl
push
cli
lret
jg
fs
mov
xchg
je
jle
dec
idivl
cmc
out
sub
out
enter
add
pop
sbb
mov
in
fildl
mov
lea
fldenv
arpl
js
jmp
addr16
cmp
dec
sub
cld
leave
mov
andl
sub
mov
and
lcall
dec
loopne
in
mov
dec
ret
push
ss
add
sub
or
aad
scas
subb
sub
ljmp
mov
test
add
popa
dec
lahf
push
add
outsb
loope
mov
push
leave
ret
lods
push
clc
fisttpll
xor
or
push
xchg
xchg
sbb
add
pop
xchg
sti
jae
repnz
sbb
and
pop
push
sbb
bound
aas
hlt
xchg
adc
pop
imulb
inc
pusha
icebp
sbb
loopne
xor
imull
int3
sti
mov
lea
add
push
push
adcl
xchg
inc
sbb
push
leave
add
and
lds
fwait
sbb
mov
mov
je
hlt
mov
lock
icebp
inc
mov
scas
shlb
mov
in
xor
idivb
mov
mov
fwait
mov
mov
ja
jnp
bound
push
xor
mov
sbbl
nop
sbb
or
pusha
xchg
aas
mov
or
icebp
add
adcl
mov
leave
push
mov
iret
sbb
push
add
push
cmp
pop
gs
movsb
fsubs
shl
stos
pop
xchg
es
inc
fdivl
pusha
jne
insb
pop
adc
xchg
sub
or
mov
loope
retw
lcall
jmp
shrl
fiaddl
push
or
dec
add
jnp
sub
movsl
adc
inc
and
or
in
add
xor
pop
mov
fisubrl
incb
mov
test
xlat
mov
sti
push
xchg
gs
mov
out
popf
dec
popf
call
sub
cmpsl
xor
sub
adc
cmp
xchg
es
sbb
es
push
fcom
dec
fsubs
sub
pop
xchg
sbb
loopne
ljmp
addr16
cmp
lret
or
mov
hlt
mov
addr16
hlt
rorl
xchg
in
nop
dec
push
inc
inc
mov
jmp
mov
sti
pushf
icebp
aas
push
shr
stos
into
inc
mov
in
int3
mov
test
mov
inc
stos
fisttpll
mov
cwtl
xchg
imul
push
jmp
add
orb
sbb
mov
or
push
sahf
fdivr
jmp
test
mov
movsb
cwtl
aad
daa
cmpsl
mov
sbb
hlt
mov
sbb
cs
pop
popf
aad
jecxz
jne
rcrl
stc
aad
leave
test
loopew
int
mov
test
cltd
outsl
sbb
ss
rorb
and
leave
xor
cli
jbe
xorl
xor
popl
sbb
movsb
mov
or
ret
sub
mov
test
cmc
xchg
test
adc
dec
pop
into
into
inc
sahf
dec
arpl
sub
sub
inc
outsb
std
ret
cmp
sti
ds
xor
pop
insl
dec
mov
js
xchg
or
cmp
test
nop
and
pop
dec
loopne
lea
xor
decb
sub
push
gs
sahf
lcall
sbb
sub
mov
sti
push
cmp
push
fsub
insb
ret
adc
cli
xchg
iret
fs
cmp
or
mov
inc
adc
adc
sarb
sub
pop
lea
iret
push
mov
aam
adc
lds
sub
or
push
enter
inc
std
xchg
outsb
shlb
pop
lahf
push
mov
scas
fcoms
aad
sbb
or
out
outsl
scas
popa
adc
pop
cs
jecxz
jb
fdivl
popa
lock
sarb
aad
test
mov
outsb
in
das
test
mov
aad
xchg
fsubrl
test
and
iret
lea
popf
scas
js
std
lods
das
or
insb
call
aas
cpuid
mov
data16
in
out
lea
sbb
out
push
xchg
scas
mov
jp
xchg
mov
mov
and
movsl
jle
jne
cs
stc
inc
ficoml
push
sub
pop
or
sub
cs
nop
loopne
xchg
cltd
into
daa
popa
xor
repnz
jb
mov
movsl
adc
das
int3
mov
dec
repnz
shr
pop
fistpl
adc
jge
xor
push
mov
mov
add
rep
push
push
mov
cmp
jge
push
insb
and
pop
ja
jecxz
sub
sub
xchg
fcom
xor
loope
std
push
dec
bound
mov
add
mov
adc
and
in
jl
mov
cmpsb
outsb
mov
imul
sbb
push
push
sub
popf
jne
and
imul
xchg
add
pop
jmp
xchg
xchg
icebp
out
jns
add
or
imull
mov
jmp
cs
xor
xor
lds
bound
gs
mov
jecxz
cli
into
inc
shrb
pmullw
sub
shrb
sbb
jns
xchg
ljmp
pop
cmpsb
mov
lret
xor
jge
sub
subb
sbb
and
test
adc
fistpl
enter
pop
dec
push
inc
scas
test
bound
inc
sbb
addr16
mov
andl
xchg
aaa
pop
ljmp
fisubrs
push
std
sbb
pop
xchg
push
pop
pop
push
add
mov
pop
and
or
fwait
lret
xor
pop
or
jno
push
sbb
mov
inc
addb
int
sbb
mov
movsl
lcall
sub
mov
pushf
out
jl
xchg
inc
fwait
std
mov
andb
ss
mov
test
xchg
movsb
ja
push
fwait
push
iret
aaa
aas
stos
cmpsl
jecxz
push
and
pusha
jne
jns
subb
ss
pop
shll
mov
aaa
push
aas
add
insl
loopne
mov
stos
dec
inc
xlat
in
sub
and
rcr
jae
adc
adc
pop
adc
pop
and
or
push
sbb
das
fistl
popa
outsb
push
fwait
jnp
push
xor
mov
imul
mov
push
or
aam
push
push
ret
and
add
mov
mov
sub
jg
adc
lods
roll
mov
fld
lea
jns
xchg
dec
fbld
fisubl
xor
push
xor
xor
xchg
mov
ficompl
jl
jno
jno
jp
bound
loopne
fmull
in
inc
ret
mov
xchg
push
adc
imul
movsl
dec
std
sub
adc
ficompl
sub
fstps
scas
addb
out
sbb
es
adcl
aaa
mov
scas
aam
aaa
mov
arpl
mov
inc
fs
pop
pop
hlt
xor
enter
test
pop
scas
bound
mov
out
add
addl
jle
stc
cmp
nop
dec
mov
rol
fwait
cmpsl
cltd
les
fstpl
add
idivl
xchg
jo
xor
lds
or
cwtl
inc
cmp
lahf
xchg
pop
xor
mov
jnp
xor
dec
and
mov
inc
loop
xor
in
push
aad
mov
xchg
xchg
test
call
add
mov
or
mov
add
mull
mov
out
rcl
push
sub
js
jae
mov
nop
imul
test
add
stos
mov
movl
out
mov
pop
les
js
inc
fdivr
loopne
outsb
test
sbb
insb
jns
fcmovnu
sub
inc
push
xor
shlb
test
movsb
rcrl
decl
in
popf
xchg
lods
and
lods
adc
mov
and
push
test
fsubrs
sahf
mull
lea
cmp
stos
andl
inc
fbld
mov
inc
stos
inc
outsb
mov
ret
xchg
sub
jno
negl
mov
fistps
mov
sub
sbb
cmp
fsubrs
push
mov
lcall
and
cmp
pusha
sbb
movsl
push
push
add
xchg
xchg
jnp
iret
es
mov
bound
lods
mov
add
mov
test
or
push
cmpl
in
xchg
js
sbb
cli
scas
adc
dec
pushf
push
cmpsl
fdivrl
adc
dec
inc
scas
ds
mov
js
push
jns
pushf
adc
fwait
dec
in
xchg
mov
adc
jecxz
aas
mov
pop
repnz
jno
jo
sqrtps
out
inc
jg
cmp
loope
dec
pop
inc
out
cmp
sub
dec
data16
mov
sbb
push
push
cmpsl
or
in
sbb
push
push
sub
mov
add
inc
lret
les
sti
mov
inc
js
jae
add
mov
or
sbb
sbb
or
andl
jae
xor
sti
mov
xchg
aaa
mov
in
cmpsb
pop
insb
mov
jno
jb
jae
movsl
push
cltd
lds
andb
jbe
bound
xchg
or
shll
lds
bound
inc
fmull
loopne
dec
dec
adc
outsl
or
jmp
out
xor
xchg
shrl
aam
or
xchg
fsubp
mov
out
ljmp
les
mov
fldcw
daa
pop
sbb
sbb
shrb
lock
xor
nop
iret
int
add
xchg
inc
dec
test
push
push
adc
std
add
add
jl
inc
imul
arpl
rcrl
pop
jnp
jmp
sbb
xchg
popa
cld
adc
push
aam
aam
mov
mov
lods
sbb
les
xchg
fcompl
in
mov
jmp
fstps
jmp
inc
das
adcb
xchg
adc
fnstsw
dec
adc
js
fdivs
call
mov
mov
pop
out
sub
add
mov
rolb
imul
lret
xchg
lds
mov
and
inc
push
cmp
sbb
fxch
fisubrl
in
cmp
aad
popa
or
in
test
sub
add
arpl
pop
push
adc
dec
int3
push
cmpsb
mov
mov
push
adc
lods
inc
das
stos
lahf
scas
jg
cmp
iret
push
add
insl
dec
lea
lret
mov
mov
fsubrl
je
insb
and
or
jle
lods
les
push
bound
xchg
cli
cmc
pop
add
add
mov
call
mov
sar
call
jecxz
mov
dec
sbb
mov
stc
es
push
negl
sub
dec
pop
stos
sbb
outsl
mov
or
dec
lods
add
les
xor
or
cmp
cltd
aas
sub
rcrb
or
iret
cmpsl
clc
loop
movsl
adcb
and
adc
and
push
movsb
mov
mov
ljmp
pop
cmp
adc
incl
fs
loopew
sub
fstpt
push
push
xchg
pop
dec
movsb
xor
cmc
sti
mov
add
dec
or
push
cld
cmp
adc
push
sbb
aas
stc
imul
rcrb
dec
sbb
pop
pop
leave
cmp
mov
js
clc
ret
in
or
int
sbb
bound
cli
push
push
addr16
or
in
rolb
loop
rcrl
mov
rorl
jb
mov
push
mov
add
mov
les
sbb
mov
nop
scas
test
mov
adc
and
stc
inc
mov
out
dec
flds
into
out
add
jo
xchg
cld
push
mov
push
sahf
shl
andb
addr16
addr16
jnp
mov
sub
and
mov
test
rorl
push
adc
xlat
mov
xchg
data16
xchg
pop
cmp
mov
and
xchg
inc
rcrl
cmp
shrl
cwtl
push
xor
out
jne
leave
jae
pop
mov
lods
arpl
xchg
xchg
loop
cmp
push
gs
push
xchg
in
or
outsl
jg
leave
inc
std
std
vmovupd
jo
sbb
push
jle
cmp
xor
in
jno
notl
adc
ljmp
fs
xor
mov
sarl
rcrl
push
not
inc
jae
jg
xor
or
fcmovbe
in
and
push
add
fdivs
aad
mov
dec
ja
mov
cli
push
push
pand
adc
test
or
or
jne
mov
xor
inc
cmp
in
bound
xchg
cld
jo
or
repz
iret
dec
sub
popa
xor
fwait
push
xchg
mov
sub
aaa
and
dec
ds
xchg
mov
pop
iret
or
lcall
sbb
in
mov
ret
fistl
negl
cs
jmp
ja
nop
jg
pop
ret
add
shrl
nop
or
outsb
cmp
cwtl
pop
fsubl
rorl
idivb
push
lea
mov
call
or
jbe
add
incb
jno
mov
dec
aaa
push
mov
sbb
xchg
call
imul
je
out
nop
jo
mov
es
rorb
std
push
test
testb
cmpsl
pusha
scas
jns
testl
push
mov
lods
packsswb
xor
popa
cmp
mov
stos
xchg
and
lret
pushf
arpl
cli
inc
lock
fbstp
dec
jnp
and
cmp
aaa
lret
popf
mov
lcall
cwtl
imul
mov
mull
test
rorl
cmp
and
leave
dec
jne
xchg
cmp
dec
inc
xor
imull
mov
jbe
cmp
decb
in
dec
and
push
mov
mov
lds
divl
ljmp
fisttps
add
ds
xor
dec
add
inc
fnsave
imulb
imul
jge
sbb
sarl
mov
gs
jbe
cmpsb
mov
sar
dec
xor
popa
clc
repnz
push
or
xchg
mov
sub
adc
ss
adc
in
in
jb
je
cmpsb
inc
and
int
stos
inc
test
mov
mov
inc
popa
mov
jg
and
mov
pop
nop
mov
pop
rcrb
mov
faddp
push
repz
push
lahf
cs
or
loope
out
movsb
pop
xchg
push
sbb
xor
pop
setnp
ror
shlb
repz
add
test
cmpsb
outsb
push
jmp
enter
cmp
stos
rclb
popa
mov
inc
out
mov
inc
aaa
ror
inc
fstl
mov
push
mov
dec
xchg
loop
mov
push
es
mov
add
ret
out
xchg
mov
inc
lock
add
cmpb
jnp
push
xor
mov
and
lock
xor
faddl
jge
je
int
dec
xchg
push
fdivrl
jmp
xchg
pop
jns
cld
cmp
stos
cmp
xor
mov
inc
dec
sahf
mov
imul
jmp
and
pop
mov
cld
jb
shr
pop
ss
push
ficoms
fstpt
push
mov
stos
int3
or
fwait
mov
sub
rorl
pop
loope
push
pop
pop
out
test
loopne
push
adc
call
xchg
and
out
jns
lret
or
sbb
push
dec
stc
and
xchg
js
sahf
mov
sti
xor
lea
push
outsb
out
sub
filds
fwait
pop
jno
ret
mov
mov
jmp
outsb
push
sub
pop
cmp
xlat
push
dec
xchg
aam
dec
mov
mov
mov
push
mov
adc
fcomps
mov
mov
cmp
fnstcw
scas
pushf
call
adc
pop
data16
jb
lds
or
jbe
aad
pusha
cmp
mov
incl
sbb
aam
mov
repnz
dec
cwtl
push
arpl
sahf
psrlw
aad
jge
mov
imul
insb
mov
out
and
loopne
jmp
cmp
fidivs
mov
add
dec
nop
mov
add
xor
clc
or
ja
std
cmc
leave
stc
jle
dec
mov
pop
into
push
mov
or
adcl
movsb
pop
adc
leave
mov
jo
int
and
out
cmc
cmp
push
movsl
and
mov
adc
xchg
and
addr16
and
xchg
repnz
loope
faddl
push
fisubl
pop
cmc
add
mov
insl
push
test
arpl
add
mov
sub
adc
mov
xlat
inc
add
inc
xorb
xchg
sub
test
addr16
int3
sub
fs
mov
cmp
xor
cmp
jo
movsb
cwtl
pusha
ds
arpl
arpl
mov
add
jbe
or
repnz
dec
dec
jg
lcall
in
sbb
gs
push
cmpsb
pop
icebp
xchg
jecxz
jp
lock
mov
push
cwtl
lret
loopne
das
xchg
jg
cmp
mov
movsb
fldt
cltd
divl
cmp
imul
lock
mov
call
shl
test
inc
cmp
negl
cmpsb
sub
and
dec
hlt
jmp
mov
mov
daa
andl
fildl
add
stos
cltd
adc
dec
xor
pop
movsl
sub
ret
sub
int
push
sbb
jp
jecxz
push
xchg
sbb
xorb
jnp
faddl
cwtl
lldt
jg
cltd
xor
mov
imul
ficompl
mov
mov
loop
test
arpl
rcll
cmp
sti
out
mov
sahf
inc
mov
lods
out
or
rol
pushf
push
imul
lahf
jl
add
ja
push
mov
out
pop
in
and
pop
shlb
insl
popf
jae
out
push
jo
dec
sub
andb
testl
inc
mov
cmp
sub
mov
mov
mov
sub
pop
sbb
sbb
pop
pop
loopne
push
std
into
in
push
inc
pop
and
adc
cmp
ret
repz
ds
cmp
jp
mov
mov
sub
adc
push
and
dec
sbb
pushf
fidivrl
test
imull
lcall
dec
dec
iret
lahf
aas
mov
test
imul
mov
in
imul
ret
shrb
push
pop
sbb
call
mov
bound
or
pop
fcomi
inc
xchg
add
push
in
cmp
int3
xor
hlt
or
out
repnz
or
push
add
mov
sbb
daa
fldenv
and
push
int
pop
in
jmp
mov
incb
fwait
into
iret
and
and
sbb
mov
xor
mov
mov
jo
or
out
test
mov
int3
leave
pushf
insl
int
add
leave
xlat
mov
mov
mov
enter
add
sub
xchg
int
mov
mov
test
lret
add
fs
enter
push
and
or
pop
xor
mov
rolb
repz
cmc
inc
xchg
cmp
outsl
cld
cmp
adcl
lods
dec
add
bound
rcl
inc
stos
cs
ss
push
or
or
les
inc
sub
iret
mov
imul
cmp
and
repz
lds
ja
ja
xor
lock
in
mov
inc
jl
pushf
rcrl
in
dec
fwait
push
push
mov
and
out
dec
inc
mov
mov
lock
adc
jne
sbb
sarl
fucomip
and
lds
sbb
push
pusha
fldl
fcoms
popf
imul
sti
mov
and
and
inc
cmp
js
push
js
in
stos
or
jmp
push
pusha
stos
cmpsb
adc
sahf
adc
insb
adc
testl
jecxz
call
das
roll
test
outsl
or
das
lods
xchg
ret
inc
mov
mov
andl
sbb
fwait
mov
shrb
data16
loopne
stc
pop
dec
adcl
cmpb
mov
shll
xchg
ljmp
sub
ds
jbe
mov
orl
sbb
stos
mov
pop
cs
imul
in
cs
into
cmp
hlt
xchg
jp
mov
popf
mov
sahf
push
js
mov
jne
pop
pop
pop
push
mov
repz
idiv
xchg
sbb
aas
jns
dec
xchg
cmp
mov
cmp
std
mov
push
push
push
xchg
fcom
subb
sbb
sub
sub
cltd
inc
xchg
fadds
je
outsb
scas
sub
xchg
bnd
sub
sub
or
cli
sbb
mov
pop
in
fs
mov
testb
je
inc
aas
xor
fcmovbe
insl
dec
mov
cmp
or
cmp
xlat
push
mov
sub
jecxz
rclb
mov
sahf
pop
mov
and
sti
movsl
dec
call
sbb
and
mov
out
or
sbb
jg
pushf
mov
pop
mov
jmp
adc
cld
in
dec
ds
xor
test
pop
mov
mov
and
xor
push
xor
pop
mov
insb
femms
mov
stos
jno
mov
pop
pop
sbb
push
mov
icebp
cmp
fwait
test
dec
mov
vpgatherqd
rolb
xchg
mov
jne
jp
test
hlt
lcall
xor
mov
jo
stos
or
xor
fst
cmc
insl
dec
push
loop
jbe
imul
cmpsl
mov
sbb
loopne
mov
pop
cs
cmp
add
enter
rorl
test
mov
outsb
mov
xor
loope
fists
in
daa
sbb
dec
fs
sbb
fisubrl
in
xchg
cmpsl
push
arpl
mov
push
sbb
pop
lahf
push
mov
adc
xchg
sub
add
cmpsb
mov
in
push
in
pop
xchg
mov
inc
pop
lret
sbb
enter
xchg
in
mov
pop
je
add
repnz
lods
add
les
aad
and
mov
xchg
mov
aam
pusha
inc
inc
mov
push
push
imul
aam
fwait
push
loop
mov
notl
iret
lock
cmp
dec
imulb
or
arpl
adc
les
sbb
in
cmp
jmp
add
mov
push
push
addb
add
xchg
in
or
aam
ljmp
xor
les
xchg
enter
xchg
ljmp
ss
scas
pop
lods
daa
pop
aam
and
lea
and
std
pop
test
scas
js
xor
subb
add
cmp
cmp
inc
iret
dec
mov
inc
mov
pop
jno
cmp
enter
fsub
shll
xor
sbb
shll
mov
xchg
sbb
imul
inc
movsl
jg
lods
fsubl
or
or
mov
inc
mov
push
xchg
adc
scas
pop
sub
addr16
dec
xchg
fidivrl
cmp
movsb
xchg
inc
push
pop
dec
mov
fwait
sub
cs
mov
sub
out
cmpl
pop
push
leave
out
mov
clc
insb
adc
jae
mov
inc
push
mov
repnz
xchg
paddw
push
imull
inc
adc
mov
dec
subl
icebp
push
imul
fcompl
call
xchg
pop
dec
dec
jl
xor
pop
mov
xadd
xchg
fs
jg
call
shlb
xlat
or
mov
rol
in
and
mov
rcl
jne
push
pop
xor
cwtl
xor
test
mov
xchg
mov
leave
jge
ror
rorl
push
push
loope
mov
jmp
movb
lds
aad
je
ja
lods
std
mov
lods
clc
dec
das
popa
lock
mov
in
xchg
push
fldt
mov
push
mov
dec
test
jb
mov
fsubr
insl
js
jge
into
push
pusha
push
xor
jge
pop
fwait
and
push
xor
jmp
xchg
fnstsw
ret
inc
xchg
flds
aaa
lret
js
sbb
jp
cltd
fldcw
flds
nop
lock
or
in
mov
jnp
cmpsl
scas
lret
into
cwtl
out
loopne
pop
stos
push
out
xchg
adc
hlt
add
pop
loop
mov
rcl
xchg
add
push
adcl
mov
jbe
jl
pushf
jge
adc
jb
mov
pusha
jp
loop,pt
push
fwait
stos
shr
out
mov
adc
das
cs
adc
stos
scas
clc
es
or
jnp
gs
pop
push
test
pop
cmp
fwait
cli
lods
jg
out
add
fildl
leave
mov
mov
cmp
push
and
mov
pushf
pop
sbb
fimull
insl
fnstcw
adc
daa
adc
pushf
pop
imull
push
sbb
mov
dec
mov
pop
arpl
mov
or
cmp
fildl
sub
add
loop
cmpsb
dec
rcrb
mov
jns
sahf
mov
and
lahf
mov
in
sbb
sub
int
mov
mov
in
pop
imul
push
jl
int
fwait
or
sub
repnz
test
nop
jns
cwtl
iret
mul
sub
jl
jo
sbb
jg
dec
cmpsl
ret
addb
je
mov
cmpsl
fistl
mov
inc
push
xor
outsl
in
movsl
xor
mov
fidivl
scas
inc
mov
lods
out
fyl2x
and
xlat
mov
add
push
dec
cmp
jae
call
jbe
mov
pusha
movsb
testb
out
mov
dec
aaa
fisubl
push
insl
mov
loope
outsl
addb
dec
ja
rorb
add
jge
aam
jmp
and
out
data16
mull
xchg
add
adc
pop
mov
pop
sbb
fcoml
push
lret
mov
adc
sub
dec
testb
in
hlt
dec
ret
mov
in
lock
mov
lret
jg
inc
mov
mov
add
push
test
divl
sub
fcompl
iret
or
or
ret
xor
icebp
ds
sub
out
or
es
testb
adc
es
pop
popf
or
rclb
fisttpll
in
pop
inc
sbb
mull
fidivl
mov
leave
sub
lahf
push
out
in
es
dec
mov
mov
pop
sarl
cmpsl
sti
pushf
jp
rol
xchg
pop
adc
xchg
push
xor
xchg
mov
insb
jno
pop
fimuls
push
lcall
cmp
stos
inc
or
lahf
leave
stc
mov
incb
sub
hlt
mov
fidivs
cmp
pop
bound
push
mov
shll
mov
or
ret
and
fisubrl
sbb
cmp
fwait
push
xor
mov
add
enter
cmp
fimull
and
mov
test
jne
adc
ds
lods
xlat
loop
popf
sub
addr16
in
or
pusha
xchg
xchg
or
jmp
je
aam
lcall
sub
daa
adc
mov
fcmove
cmp
jo
stc
mov
mov
bound
imul
repnz
out
cli
lret
leave
out
test
int3
xor
imul
leave
xor
mov
pushf
or
inc
sbb
popf
mov
xchg
insb
xchg
in
adc
cmp
jle
pop
mov
sbb
adc
mov
or
adc
sbb
xchg
cmp
or
push
push
lods
jbe
iret
in
or
ljmp
in
ret
push
dec
mov
cmpsl
orl
divl
jb
xchg
fmull
sub
xorb
repnz
dec
mov
push
gs
jno
mov
cmp
and
fs
jecxz
cmp
inc
subb
int3
popf
sub
jnp
test
shrb
mov
xchg
div
shlb
in
add
insl
pop
mov
cmc
aam
stos
fldcw
mov
dec
mov
xorl
scas
fildll
int3
fdivp
bound
test
scas
in
lcall
jecxz
addl
sti
hlt
sub
sbb
sub
and
ret
call
lods
jle
das
imul
xchg
jg
mov
inc
inc
jge
cmpsb
sbb
adc
cmpsb
and
pushf
push
inc
fcomi
pushf
daa
idivl
jns
and
enter
adc
xchg
xchg
mov
push
popf
lret
sarl
scas
mov
or
in
adc
lea
xlat
outsb
mov
sbb
sub
repz
or
lcall
push
jge
fidivs
push
inc
or
daa
and
repz
mov
push
jmp
aas
cmpsl
aas
push
add
scas
mov
cs
in
decb
clc
jne
mov
sub
les
mov
sub
jb
mov
push
in
cmp
cs
andb
dec
sbb
sbb
mov
aad
adcl
loopne
ret
jae
call
lret
xchg
add
loope
xchg
fsubrs
xchg
out
jbe
in
cmp
test
pop
fistps
add
std
xor
outsb
mov
or
jecxz
xlat
push
xor
lcall
testl
cmp
sbb
test
sub
and
jecxz
pop
adc
pop
ja
cmp
dec
or
xchg
adc
or
xor
xor
jmp
or
bound
mov
mov
stos
push
mov
ss
dec
outsb
orb
sub
pop
sar
sbbl
in
inc
jno
cmp
inc
push
sbb
xchg
and
sbb
add
lahf
jne
xchg
or
add
mov
push
and
mov
add
inc
mov
popa
leave
mov
cmp
push
filds
cmp
cwtl
add
fldl
mov
stos
mov
data16
adcl
stos
stc
leave
ficoms
xor
xchg
iret
and
sub
dec
and
mov
sbb
dec
xchg
shrb
fsubp
dec
and
cmc
insl
dec
and
inc
cli
sbb
fwait
and
fiadds
imul
les
mov
xchg
or
xor
insl
test
imul
cmp
jnp
rclb
pushf
adc
clc
dec
cwtl
lds
notl
scas
mov
sarb
shll
shl
in
pusha
inc
fsubs
cmp
sub
pop
cmp
or
sub
jae
mov
push
leave
dec
iret
cmp
repz
cli
add
sbb
and
mul
jns
repz
push
scas
fcmovbe
cmp
push
cmp
das
imul
push
cld
adc
inc
pop
xchg
pop
jge
add
jp
es
leave
lret
mov
xor
ret
sub
xlat
insl
mov
add
clc
add
cmpsb
outsl
jbe
xlat
dec
sub
pop
cmp
lods
ret
scas
sti
scas
pop
add
and
je
jbe
adc
hlt
jne
scas
jne
das
lahf
lock
push
jns
adc
sbb
stos
inc
and
adc
test
call
aam
fucomip
repz
inc
movsl
push
inc
add
pop
aas
sbb
icebp
dec
cmpsb
pop
stc
sti
mov
ds
xor
mov
in
pop
mov
pop
xchg
jecxz
pop
imulb
inc
and
and
gs
jbe
rcrl
mulb
pop
xchg
cmc
andl
or
dec
adc
sub
xchg
insl
xchg
mov
es
das
xchg
xchg
inc
sbb
xor
xchg
xchg
iret
stc
call
pop
js
mov
cmpsb
gs
cmpsl
fiadds
shrb
dec
push
cmp
xchg
pop
pop
rclb
data16
pop
inc
or
or
jnp
rorl
icebp
fcmovnbe
cld
xlat
arpl
or
adc
xchg
cmpsl
pushf
pop
inc
pop
jecxz
mov
sub
or
adc
int3
outsl
mov
jnp
push
xchg
add
aad
or
jecxz
cmpsb
std
mov
lds
jg
into
and
mov
iret
arpl
xor
arpl
adc
hlt
dec
pusha
pop
loop
push
xchg
mov
push
push
dec
xchg
mov
jecxz
push
or
scas
in
fistpll
out
int3
sub
mov
cmp
sti
pop
jmp
adc
mov
out
aas
lahf
addb
fdivrs
mov
call
xchg
or
sub
mov
out
fldcw
push
fwait
jl
dec
ret
aam
xor
adc
jg
popf
popf
ret
mov
fisttps
test
loopne
jns
loope
aaa
hlt
jmp
xrelease
nop
dec
or
sbbl
mov
ss
jge
mov
mov
cmpb
ljmp
inc
ljmp
leave
mov
into
jnp
out
insb
mov
decb
subl
cli
mov
cmp
shrl
js
cmpl
jp
adc
xchg
mov
nop
out
int
xor
jb
mov
jno
movsl
aas
aad
xorb
jmp
jns
xor
push
mov
leave
cld
ficoml
fbld
pop
mov
pop
fwait
add
inc
cld
outsb
lcall
outsl
adc
sti
andb
push
xchg
mov
cmp
scas
lcall
cmpsb
call
cmc
mov
rclb
sbb
pop
adc
arpl
aas
xor
clc
dec
fimull
insl
mov
jle
push
mov
add
pop
idiv
add
mov
cmp
fs
lock
cmc
into
loope
pop
in
rolb
or
jns
inc
pop
repnz
aaa
movsl
mov
xchg
pop
rcll
test
cld
pushf
fwait
xchg
mov
mov
mov
push
sbb
push
xlat
das
lcall
mov
adc
call
rsm
lahf
in
jbe
inc
stos
xchg
sahf
roll
adc
mov
das
mov
popf
js
test
dec
or
or
rorl
dec
adc
lock
jnp
stc
sub
inc
add
sbb
sarl
out
into
sarb
clc
sti
out
fdivs
roll
imul
hlt
inc
inc
mov
mov
aas
mov
lds
and
es
aaa
pushf
mov
cmp
cmp
scas
mov
repnz
in
inc
mov
lods
fimull
jno
or
fildll
mov
call
mov
mov
pop
cld
cld
shrl
fldt
dec
mov
fldln2
cmpb
mov
arpl
inc
and
xchg
push
in
sbb
and
inc
cmpsb
scas
pop
push
xor
sti
movsb
mov
aam
xor
sbb
jne
xchg
movl
movsb
xchg
adc
inc
mov
icebp
mov
sbb
insb
movsl
ror
imull
sbb
mov
cs
push
leave
stc
scas
xchg
scas
fdivs
adc
js
sub
negb
je
pushf
xor
jmp
pop
sahf
jne
dec
adc
scas
int3
or
ret
cmpl
hlt
mov
lds
fbld
mov
jo
sub
mov
push
pop
scas
cmpsb
js
ja
daa
popf
jge
mov
pop
std
ss
mov
icebp
dec
or
pusha
call
mov
pop
mov
fistpll
mov
fmuls
fwait
cwtl
ds
shll
lahf
mov
nop
pop
cmp
xchg
pavgw
insl
pop
stos
int
push
pop
lock
push
in
adc
inc
sbb
shrl
and
cli
inc
loop
scas
xchg
cmpsl
mov
fimull
add
inc
mov
xor
mov
scas
or
pop
sahf
jns
xor
xchg
jb
in
or
pop
dec
inc
add
cmpsb
lahf
test
lods
ds
xlat
cmp
jbe
into
cld
shl
xchg
pop
aam
fists
pop
loop
sbb
mov
push
push
in
or
lods
lods
repnz
scas
sbb
mov
pusha
mov
jbe
pop
adc
data16
jmp
test
mov
push
mov
mov
push
xchg
xchg
inc
jns
pop
nop
push
dec
mov
das
cli
sbb
lods
in
hlt
and
cmp
mov
jle
inc
pop
lret
mov
pop
xor
mov
pop
clc
cli
mov
lods
pushf
imul
cwtl
mov
push
mov
sbb
push
jnp
sub
cvtdq2ps
fistpl
es
addr16
pop
mov
test
movsl
inc
mov
add
filds
decl
aam
jp
sbbl
arpl
divb
in
mov
cltd
cltd
incl
push
test
scas
sbb
clc
xor
xor
icebp
lret
add
jbe
mov
sbb
dec
pop
mov
sti
jo
call
xchg
xlat
fisubrs
test
pop
lods
sbb
pop
ja
arpl
stc
test
lods
in
call
or
roll
and
pushf
cmp
stos
sahf
pop
cmp
push
jmp
pop
sti
inc
cmp
daa
test
outsb
dec
cwtl
scas
mov
imul
rorl
std
sbb
inc
subb
xor
push
adc
xchg
mov
or
rorb
divb
aaa
push
mov
cli
cmc
push
cwtl
adc
dec
mov
cmp
in
xchg
sub
dec
cltd
cmc
cmpsb
addr16
push
cmp
ja
movsb
mov
dec
jns
out
ds
fdiv
popa
outsl
addr16
inc
fisubl
inc
aas
cltd
xor
jns
pop
xchg
mov
stc
lock
movsl
inc
mov
outsl
enter
imul
dec
subl
dec
jl
jae
sahf
mov
mov
push
pop
pusha
out
pop
fs
ja
int
loop
cli
dec
loop
cmp
cltd
push
repnz
mov
cld
iret
xchg
pop
fldt
fists
aam
pop
mov
adcl
lods
xor
xor
mov
mov
shr
push
pusha
out
aaa
adc
negb
stos
cmp
daa
addr16
pop
adc
and
dec
fadds
scas
cld
imul
inc
mov
xchg
ljmp
gs
sbb
ljmp
jbe
cmp
cld
ret
sbb
jle
sbb
mov
nop
or
mov
sbb
fidivrs
movsb
jecxz
in
repnz
push
stos
fdivl
jp
imul
lea
pop
outsb
popf
enter
lahf
std
aam
test
mov
xor
nop
or
ret
rcll
and
jbe
loop
lcall
aam
ret
push
jp
mov
dec
pop
lret
imul
and
lock
jae
xor
arpl
fcmovu
lds
and
out
and
setnp
fbstp
repnz
test
mov
push
pusha
js
pop
cvtpi2ps
stos
scas
cld
adc
call
jno
xchg
insl
dec
xor
pop
sbb
push
push
repnz
xor
leave
push
out
hlt
mov
inc
lock
push
pop
ja
mov
dec
lea
add
adc
mov
adc
int3
fcoml
enter
inc
mov
daa
leave
fimuls
and
popa
aaa
lds
pop
out
jbe
mov
fnstcw
or
push
paddb
frstor
jo
ja
idivb
or
pushf
jmp
clc
xor
inc
cltd
fmuls
jb
jle
adc
cmovg
and
adc
jg
mov
out
dec
int
mov
and
es
popa
rorb
dec
sub
or
and
adcb
xchg
cwtl
xchg
inc
hlt
ret
cmp
outsl
outsb
lods
popf
dec
inc
dec
insb
pushf
and
inc
mov
sbb
cli
aaa
mov
or
jl
add
mul
ss
jne
rep
into
scas
lds
mov
imul
mov
mov
dec
push
mov
push
inc
rcr
xor
and
aad
mov
addr16
cmp
cmp
add
and
mov
ret
mov
sub
sbb
push
push
clc
mov
andl
pushf
adc
inc
cli
jbe
mov
push
jecxz
rdtsc
ret
adc
fcomps
mov
loop
push
mov
mov
and
popf
cmp
stos
shlb
hlt
imul
popf
aaa
jbe
mov
in
stos
push
dec
loop
insb
mov
push
pop
or
sub
nop
adc
inc
xchg
and
in
add
push
pushf
dec
sbb
or
cwtl
daa
ret
out
push
push
sbb
out
mov
rcrl
inc
aam
jbe
inc
jne
and
sarb
scas
cmc
shl
inc
icebp
push
mov
pop
arpl
push
rorb
and
cmp
imul
mov
and
in
jle
mov
hlt
inc
aaa
mov
addb
test
ret
lahf
xor
enter
jb
cmpsl
cmc
sub
mov
test
mov
jb
imulb
sub
js,pt
mov
sub
mov
mov
cmpsb
ja
das
xchg
fsubs
ret
mov
mov
ret
or
ret
push
pop
nop
call
orl
adc
cmp
clc
pop
mov
sbb
enter
jnp
pop
repz
orl
lods
mov
xor
jns
roll
sub
or
sub
sbb
push
push
and
mov
mov
add
cmc
fisubs
sbb
push
jns
scas
mov
inc
jbe
pop
xor
sbb
and
mov
jmp
jns
push
push
push
and
sub
loopne
sahf
sbb
aaa
lret
jo
cmc
jmp
mov
ficompl
cmc
inc
aas
pop
push
and
pop
xchg
ljmp
jo
mov
push
or
jge
and
dec
mov
sahf
push
dec
jg
dec
lret
insl
mov
push
mov
lahf
push
and
lods
fldenv
das
stos
add
imul
arpl
in
jb
roll
pop
xor
arpl
xchg
call
fwait
sbb
xchg
mov
popf
lds
add
add
cmp
xor
ds
and
daa
jo,pn
sub
mov
sub
push
xchg
rcll
frstor
sbb
out
cltd
push
call
movsl
addr16
adc
loopne
mov
jge
add
xor
xor
add
mov
enter
mov
jmp
push
sahf
mov
inc
push
sbb
mov
cwtl
shlb
jle
in
imul
sub
or
ret
pop
fsts
int
prefetcht0
std
addr16
add
outsb
and
xchg
mov
add
and
mov
dec
and
inc
fbstp
xchg
inc
push
push
sti
out
insl
sub
jg
xchg
push
adc
lock
or
and
push
adc
adc
jo
addr16
dec
sbb
cmp
loop
cmp
cltd
sbb
adc
xchg
sub
pop
jne
jno,pn
repz
daa
aaa
insb
adc
xchg
jg
shll
xchg
mov
pushw
or
pop
or
mov
xor
call
vpminub
mov
bound
fwait
mov
mov
arpl
cmp
aad
and
dec
add
aas
xchg
add
rcr
sub
fbld
es
pop
or
mov
roll
xlat
ljmp
inc
pop
inc
sub
repz
cli
loopne
jecxz
xchg
push
test
cmp
js
jnp
or
mov
orl
mov
rcrl
jecxz
ljmp
inc
hlt
cwtl
cmp
sbb
or
jae
rorl
stos
scas
inc
mov
and
imul
fscale
sbb
mov
sub
mov
xchg
ret
mov
subl
fdiv
push
lock
sub
inc
out
mov
cwtl
nop
jp
les
xchg
jae
rcll
fs
ss
inc
pop
xchg
arpl
push
jno
insl
push
mov
mov
stos
push
test
mov
pop
xchg
in
mov
sbb
je
inc
xchg
ss
loope
dec
sbb
out
and
dec
push
orb
push
rorl
mov
xlat
jno
punpckhwd
mov
int3
jns
xor
rcrb
hlt
xchg
sub
jmp
or
inc
movsl
or
pop
push
test
repnz
imul
sub
fwait
sub
popa
loopne
jecxz
push
stos
cwtl
lret
in
lock
and
mov
loop
inc
in
or
sbb
test
cld
sub
jl
decl
outsb
pop
mov
popa
enter
test
push
repnz
add
mov
push
xchg
lcall
bound
int3
sarl
pop
gs
orl
aaa
jmp
subl
jnp
mov
mov
cmp
cwtl
sarl
cli
adc
cmpsb
arpl
leave
cmp
aas
jle
jg
mov
and
aaa
xchg
insb
jle
lret
xchg
cmp
jnp
xchg
mov
popf
sub
mov
dec
stos
mov
fsts
or
and
mov
shrb
cmc
and
popa
ret
mov
inc
pushf
sub
mov
mov
cli
mov
add
imul
xchg
pop
gs
add
nop
call
sub
test
notl
mov
mov
leave
int
test
xor
jle
mov
sahf
mov
mov
or
adc
mov
fnstcw
pop
pushf
fimull
subb
fs
lahf
xor
push
je
js
mov
outsl
jg
or
dec
sahf
mov
popa
aas
clc
pop
xor
pop
int
or
and
clc
and
or
imul
mov
hlt
call
mov
aaa
jb
mov
fisttpl
lret
enter
icebp
fsubrl
shrl
arpl
aaa
jne
pushf
sbb
cmp
ror
stos
jg
sub
push
mov
mov
xchg
and
mov
pushf
fdivr
das
imul
mov
bound
jg
xor
pop
jnp
adc
jae
std
jne
add
cmp
int3
adc
shrl
xchg
popf
dec
popf
jp
mov
ror
add
mov
jae
or
mov
sbb
call
incb
icebp
fbld
mull
fimull
or
ss
pop
add
ret
popa
push
insb
pop
jmp
dec
loope
mov
popa
mov
cmp
add
inc
das
jno
mov
pop
add
fcoml
xlat
jns
mov
xchg
sbb
test
cmp
dec
in
mov
in
repnz
gs
popa
mov
mov
and
notl
repnz
mov
mov
fs
out
xchg
lret
cmpsl
sbbl
cwtl
mov
jmp
stc
imul
adc
mov
outsb
cmpsl
mov
sti
in
cmp
loope
scas
sub
sub
rsqrtps
in
mov
push
scas
stc
lods
xchg
sbb
sbb
lods
je
data16
popa
cli
cmp
cmc
fidivs
stos
scas
add
pop
xchg
xor
cmp
adc
cs
pop
mov
sub
sbb
push
loope
test
stc
cmp
lahf
mul
adc
mov
mov
call
or
imul
inc
call
lea
aas
jnp
sub
dec
inc
sbbl
mov
xor
push
bound
lcall
aad
sbb
addr16
aam
mov
shrl
outsl
mov
inc
insb
adc
dec
ss
jp
and
fs
mov
pop
pop
fdivrs
or
ffreep
fists
xor
hlt
dec
xor
mov
js
mov
jne
leave
inc
mov
testb
push
adc
sbb
sbb
pop
in
and
leave
enter
insl
lret
xchg
out
cmp
mov
add
pop
cwtl
les
fwait
jae
adc
jnp
cld
pop
lods
mov
nop
in
leave
ror
dec
push
or
int3
xor
inc
adc
jb
mov
test
mov
add
xchg
cmpsb
outsl
jo
xor
jnp
push
xchg
pop
mov
mov
sub
mov
or
fsubl
xchg
xor
cmp
push
pop
popf
shl
mov
jp
mov
jbe
xchg
xor
mov
jge
jns
mov
jmp
fcomp
xor
pop
fs
jne
xor
cmp
add
sbb
xor
mov
daa
sbb
jl
jae
rclb
mov
mov
push
fwait
xor
xchg
push
mov
and
push
orb
je
stos
std
xchg
stc
cltd
adcb
sub
mov
inc
decb
pop
test
sub
mov
loope
mov
pop
sbb
dec
pop
daa
std
jne
scas
sbb
xchg
popl
mov
inc
sub
scas
sti
sub
sub
mov
sbb
push
fnsave
dec
mov
push
dec
clc
aaa
or
pop
push
dec
dec
mov
scas
pop
or
push
or
xchg
rclb
jmp
cmp
out
iret
mov
jl
es
dec
cltd
dec
sub
sbb
outsb
popf
push
inc
pop
push
dec
outsl
sarb
xchg
in
dec
fnstcw
push
popf
stos
mov
dec
push
and
inc
out
fimull
and
pop
data16
push
lds
dec
enter
insl
jae
and
test
ret
sahf
xor
imul
pop
inc
iret
add
adc
insl
push
out
fistl
push
jnp
mov
cmp
dec
outsb
mov
sbb
std
popf
in
sbb
nop
mov
add
ss
lret
insb
sbb
adc
mov
mov
in
mov
scas
xor
testb
lcall
addr16
popl
dec
sbb
stos
jle
repz
lods
and
cmp
mov
stos
xor
sbb
xlat
stos
push
xor
cs
sub
xor
scas
ds
push
dec
or
mov
xchg
mov
jl
dec
aam
fwait
sbb
mov
mov
fists
xor
test
mov
cmp
dec
dec
insb
xchg
sbb
call
in
push
call
fidivs
add
sbb
repnz
mov
fwait
mov
testb
sub
and
lret
adc
cmp
insl
aam
push
in
dec
ljmp
sbbl
sbb
aas
ljmp
xchg
sar
jg
imul
outsb
loope
lea
fucomip
pop
and
insl
popf
sub
mov
mov
xchg
adc
dec
popa
push
aaa
ja
jnp
add
shlb
pop
lock
cmp
imul
movsb
or
out
inc
xor
call
ret
jne
int
push
ror
or
or
call
xor
jle
into
popf
cltd
cmp
or
popa
fisubrl
mov
popf
fucomip
and
stc
enter
iret
add
inc
out
lds
mov
rorl
subl
jo
sbb
mov
cmc
cmpsb
popf
cmc
test
ja
jl
and
sub
cwtl
cmc
adc
mov
jecxz
jbe
out
jae
add
mov
pop
or
aam
hlt
inc
add
ret
pop
fisubrl
mov
pop
es
cmp
jle
and
add
jg
and
lgs
aam
and
dec
mov
inc
int3
loop
xchg
sub
test
repnz
push
jb
fistl
test
mov
mov
fbld
dec
mov
pop
aad
aas
jp
dec
and
mov
out
pusha
inc
xchg
imul
and
aaa
stc
add
ret
daa
inc
inc
add
aad
cld
jnp
dec
lods
xor
mov
shr
push
pop
stc
sbb
mov
cmp
push
add
inc
xchg
leave
rclb
in
call
mov
ret
push
inc
push
jbe
sahf
iret
sbb
cmp
pop
jae
dec
call
aad
int3
icebp
lods
popf
sti
mov
sub
roll
inc
insb
clc
and
inc
lods
adc
hlt
and
mov
ja
inc
test
xorb
sti
mov
call
sub
push
popa
jns
cmp
and
in
iret
pop
cli
ret
mov
clc
stos
pop
out
or
sub
sbb
ret
bound
sbb
mov
ljmp
std
mov
cld
movsl
push
adcl
gs
add
mov
xor
mov
mov
stos
and
push
shl
faddl
and
ficoml
jecxz
jmp
xchg
cmp
sbb
add
adc
sub
sti
xchg
xor
hlt
cli
int3
stc
int3
sub
inc
push
neg
or
sbb
or
lds
mov
data16
jge
lods
fs
aas
imul
aaa
inc
enter
dec
add
scas
jl
sbb
andb
mov
popa
mov
xchg
stos
pop
mul
add
mov
insl
addb
cmp
pop
xlat
jns
mov
or
les
jns
lea
fnsave
stos
push
mov
insb
pop
orb
repnz
loope
int
pop
dec
mov
jg
ss
int3
stos
aas
icebp
and
jae
nop
cmp
adcb
adc
out
std
mov
lret
xchg
test
js
and
arpl
jl
mov
jge
sahf
ret
stc
add
cld
jge
pop
jecxz
jne
add
push
sbbb
sti
jmp
clc
fnstsw
cmp
add
cmp
repnz
sub
fldenv
not
sahf
xor
aam
xchg
pushf
add
lods
mov
pop
sti
outsb
jne
pop
jg
and
imull
and
imull
lret
dec
pop
push
cltd
mov
dec
enter
and
inc
inc
call
jno
cmc
push
dec
mov
inc
es
jns
mov
push
sti
dec
rcrb
les
lods
hlt
out
add
add
or
pop
mov
mov
inc
adc
orl
enter
adc
sbb
test
lods
popa
or
sbb
inc
imul
jnp
insl
inc
sbb
dec
sub
mov
and
lods
adc
push
xchg
jo
cmp
fdiv
sub
imul
sub
adc
dec
daa
mov
shll
cmovp
clc
push
and
popf
add
mov
out
cli
cltd
push
aad
lcall
stc
push
aam
sub
cmp
scas
inc
or
mov
fwait
mov
lret
adc
negb
gs
cmc
add
jg
mov
xlat
jcxz
scas
loop
push
dec
loop
int3
xor
imul
lahf
push
xlat
dec
nop
cmpsl
pop
xchg
xchg
roll
hlt
lret
and
test
xor
cltd
jecxz
pushf
fimuls
rolb
xorl
in
xor
ds
jle
dec
adc
sub
xchg
cmp
pop
xlat
mov
mov
cltd
adc
mov
dec
call
out
push
mov
push
adc
sbb
sub
shrb
cs
adc
pxor
mov
repz
mov
xchg
insl
mov
or
and
jbe
ret
jecxz
dec
adc
leave
push
or
mov
shl
popa
popa
mov
add
aaa
insb
xchg
adc
and
add
adc
inc
xchg
push
fisubs
xor
call
mov
xor
jge
lcall
bound
ret
in
cmp
cltd
push
cwtl
cmpsl
push
inc
mov
or
icebp
pop
fwait
sub
in
pop
cmpsb
shrb
fwait
rcrb
jg
lds
lds
loope
lock
sbb
mov
jbe
lods
movsb
stc
lods
cmpsb
pusha
ljmp
out
or
add
jl
mov
push
inc
add
pop
mov
cwtl
pop
fcompl
push
xchg
pop
push
xchg
js
mov
mov
cmp
andnps
xor
adc
jns
push
iret
mov
mov
push
arpl
fdivp
dec
adc
mov
call
lret
push
sbb
sahf
shll
imul
nop
ret
mov
cmpsb
adc
gs
xchg
cmp
movsb
into
cmp
xor
push
sub
mov
imul
dec
arpl
mov
mov
stos
xchg
out
in
mov
or
loope
movsb
dec
xchg
inc
cmp
in
sub
xor
lea
jns
imul
jae
out
or
pop
inc
xor
fwait
pop
or
addb
xor
pop
push
scas
xchg
icebp
sub
fwait
rcll
pop
bound
or
cmc
jb
cli
push
pop
sti
add
cmp
es
loope
mov
icebp
ficoml
mov
dec
xchg
pop
push
fnsave
or
das
bnd
cltd
gs
outsl
sbb
test
aam
test
or
arpl
imul
mov
sub
mov
sbb
bound
push
adc
xchg
cmp
pop
jns
dec
sti
imul
fidivl
sub
jb
imul
mov
sub
in
fwait
xor
dec
das
fldt
cmc
in
sub
mov
xchg
or
xchg
and
lods
repz
mov
fmuls
mov
jbe
dec
push
xchg
adc
addb
fidivrs
and
mov
aas
or
daa
cmp
loop
outsb
imul
sub
jae
js
aam
or
mov
and
aam
push
pop
or
arpl
in
adc
inc
orl
mov
mov
pop
jge
inc
mov
in
sub
ljmp
cs
xchg
pop
stc
xchg
lret
pop
sub
in
ret
lock
repz
lock
pop
mov
inc
push
int3
sub
inc
inc
loope
bound
sbb
jnp
repz
das
cmp
or
and
movsl
jb
push
lret
mov
adc
fisttpl
mov
insb
outsb
add
pusha
mov
daa
inc
cmp
pop
add
out
lret
enter
jmp
add
pusha
orl
in
cmp
pop
jmp
call
pop
fiadds
pop
xchg
inc
cmp
mov
rolb
stc
lahf
mov
pop
sub
xor
mov
dec
xchg
test
sbb
jmp
repnz
fs
mov
js
scas
fst
enter
aam
or
sub
or
out
scas
sti
outsb
mov
push
mov
cmc
aas
rolb
xor
stos
cmp
inc
cmp
xchg
fidivl
cmp
gs
sub
jle
jle
jnp
rol
inc
stos
cmpb
std
je
dec
xor
inc
lock
sub
mov
and
mov
and
cmp
sahf
push
adc
sti
out
outsb
sahf
repnz
scas
xorl
pushf
pop
scas
pop
call
test
mov
bound
push
mov
push
sahf
jnp
out
mov
xchg
bound
lds
sbb
inc
int
push
push
inc
pop
fs
or
cmp
aam
mov
das
push
dec
push
aad
popf
insb
mov
out
and
dec
das
rcrb
adc
bound
push
xlat
and
gs
push
jnp
jl
in
mov
popf
cmpsl
mov
xor
push
mov
mov
repnz
mov
lret
repnz
jmp
xchg
inc
pop
scas
or
cmp
dec
and
fwait
or
imul
fcomi
daa
push
mov
fwait
mulb
xchg
add
mov
pop
or
popa
imul
sbb
adc
fcomi
push
inc
mov
pop
lahf
push
add
divb
mov
add
je
hlt
jmp
mov
shr
and
out
pop
add
mov
push
fiadds
xchg
sbb
popa
inc
enter
sbb
push
sbb
sbb
cmpsb
jmp
sub
pop
aad
sub
and
fbld
mov
shrl
cs
mov
and
xor
js
hlt
mov
push
dec
mov
xlat
roll
inc
icebp
repnz
jne
stc
es
je
loope
cmp
push
loope
mov
sbb
lret
ja
inc
cmp
shll
orb
or
dec
mov
aaa
jg
jbe
popf
xor
repnz
jno
pop
mov
clc
stos
jae
stc
in
xlat
add
pop
stos
sbb
add
ljmp
aad
in
fcmovbe
test
mov
jecxz
pop
pop
movl
xchg
push
cs
sbb
xchg
sbb
push
ja
pop
sub
stc
push
dec
cmpsl
mov
mov
mov
xor
ljmp
push
cmp
pop
mul
inc
mov
jo
xrelease
shrb
mov
jbe
aaa
daa
filds
int
scas
adcl
negb
and
jo
sbb
cmp
fwait
jg
icebp
fbstp
cmp
lret
xchg
add
jo
out
xor
sbb
sahf
dec
out
xor
mov
or
lea
fs
aam
sub
imul
inc
inc
jb
pop
inc
stos
xor
scas
movsb
data16
data16
or
outsb
push
and
pop
fdivs
jb
jl
adc
movsl
out
daa
inc
fwait
ss
cltd
paddq
mov
cmp
sti
adc
ljmp
mov
mov
sbb
aaa
cmpsb
fildll
jle
cmp
mov
xchg
sbb
imulb
scas
les
sbb
pop
cmp
cmp
mov
imul
pop
out
fisttpll
xor
xor
outsl
mov
inc
cmp
adc
dec
lods
cs
add
xchg
lcall
ds
jmp
repz
stos
testb
aas
sbb
jae
shl
test
inc
stos
repnz
mov
out
and
ljmp
negl
jle
leave
xor
in
rorb
call
pop
lock
push
pop
pop
dec
cmp
rep
call
or
mov
out
add
cmp
dec
test
mov
mov
aaa
aam
and
test
cmpsl
in
cmpsb
mov
outsb
mov
stc
cmp
shrl
sbb
icebp
pop
in
lret
jge
jecxz
nop
sbb
push
add
xchg
xor
int3
dec
stos
lods
sub
hlt
pop
ror
pop
dec
call
dec
das
mov
je
xlat
dec
and
push
cmc
shlb
and
xchg
dec
inc
push
rol
mov
shll
xchg
orb
push
in
sbb
mov
jecxz
repnz
push
mov
and
call
sbb
sbbl
mov
xchg
sahf
test
shlb
sbb
push
jmp
into
adcb
push
jne
cmp
jge
arpl
push
xchg
push
and
sbb
and
fstpt
cmp
xor
jecxz
inc
and
das
add
int3
movsl
push
pop
rolw
mov
test
mov
imul
inc
fptan
mov
and
cltd
outsl
iret
or
movsb
xor
cli
mov
sbb
mov
iret
dec
aam
push
std
daa
mov
or
inc
icebp
pop
sbb
lcall
or
dec
ret
loop
aad
shrl
sbbl
ja
ss
xchg
pop
add
jl
ror
mov
sub
mov
xor
sub
cmp
mov
aaa
out
icebp
shll
sub
inc
mov
sbb
inc
insl
je
sbbb
clc
in
push
movsl
mov
dec
scas
xchg
adc
push
mov
outsl
jle
inc
pop
ret
xlat
jg
pop
jge
sbb
mov
lret
or
mov
push
jecxz
repnz
dec
add
fmuls
cwtl
imul
mov
pop
cmp
inc
xor
and
sub
test
repnz
sbb
xchg
mov
or
push
addr16
outsl
mov
inc
pop
mov
out
test
xor
adc
dec
mov
sub
and
or
ret
add
fisttps
add
sub
out
pop
jb
outsl
adc
ffreep
jns
sbb
and
aad
mov
cmpsl
movb
jbe
jg
fistps
movsl
std
rcl
cmpsb
stos
js
push
jb
inc
pop
cmpsl
pushf
cld
pop
push
fdivp
and
cs
rcll
andl
mov
jmp
adc
mov
jg
cmc
jo
or
inc
int3
sti
jno
imul
sub
out
mov
insb
jae
sahf
in
loop
popl
pop
cld
outsl
ret
das
pop
repnz
mov
ret
mov
fsubrl
jp
test
jbe
add
stos
inc
mov
inc
aas
dec
and
roll
cs
add
jo
sbb
movsb
mov
add
lods
xlat
jb
xor
repz
and
push
je
repz
outsl
or
or
enter
lret
push
insl
jle
push
aaa
fs
push
jl
cmp
xor
jo
xchg
xlat
xor
das
add
pop
daa
cltd
xor
popf
in
mov
dec
or
fidivl
lcall
push
icebp
test
jecxz
jecxz
or
dec
popa
xchg
data16
ja
test
lret
into
insl
repz
ljmp
jecxz
inc
test
fistpl
add
pop
lahf
scas
shl
mov
push
icebp
add
push
ljmp
lret
jbe
cwtl
mov
incl
stc
jp
push
sti
xchg
dec
jmp
cmc
cmp
and
pop
fcmove
cld
fcmovb
jl
insb
inc
inc
or
mov
xchg
out
pop
andb
fdivr
in
ja
lcall
mov
dec
dec
cld
inc
mov
pop
insb
push
pop
mov
xor
test
mov
push
sub
mov
sbb
xchg
inc
sbb
lahf
sub
into
pop
cmpsl
and
clc
xchg
inc
in
lods
add
cli
lret
push
pusha
jmp
mov
cmpsl
cli
je
mov
xchg
lcall
xchg
repz
pop
enter
fdivrs
and
adc
mov
push
rolb
stos
sbb
fs
adc
shl
adc
inc
cmc
mov
imul
jae
pop
sbb
andb
ret
mov
jne
jecxz
xor
and
movsb
cwtl
dec
icebp
addr16
movsl
addr16
and
imull
cmpsl
push
mov
lcall
sbb
loopne
mov
jl
prefetch
stc
hlt
stc
stos
mov
add
xchg
mov
xor
mov
pop
mov
jmp
adc
mov
ret
fidivl
xchg
rep
daa
xchg
lret
jmp
leave
fildll
loope
mov
adc
push
cwtl
mov
jno
cmp
add
inc
inc
in
mov
cmp
or
rcrb
insb
sub
sub
addr16
push
ss
fimuls
add
sub
jae
add
into
xlat
add
push
arpl
jg
or
insl
xor
lahf
sub
mov
insl
jne
ja
mov
push
jb
mov
and
xchg
xchg
or
pop
and
adc
mov
das
lcall
test
xor
mov
mov
adc
adc
scas
pop
sub
jmp
xor
insb
xor
xchg
shr
mov
ja
in
clc
cmp
xchg
popa
cmp
xchg
xchg
icebp
mov
rcll
cmpsb
orb
mov
pop
mov
cwtl
push
cmp
mov
out
out
outsl
das
mov
bound
mov
sahf
inc
xchg
lea
stos
call
or
cmc
xor
out
leave
push
pop
mov
mov
cmpsl
mov
into
mov
add
xchg
call
xor
sub
push
sub
mov
lea
fs
ljmp
jp
inc
rorb
call
ds
pop
cltd
js
outsb
mov
mov
cmpl
jg
mov
shlb
mov
pop
subl
in
outsb
dec
jo
dec
addr16
rorb
in
popf
and
mov
rcl
testb
dec
shlb
lret
xchg
inc
or
jge
dec
cmpsb
sbb
pop
clc
fcomps
jecxz,pt
pop
jbe
in
cs
jbe
pop
mov
jecxz
adc
mov
pop
sbb
cmp
mov
push
outsb
in
testb
xor
sbb
shrb
lahf
cltd
dec
test
inc
or
jp
std
sub
xchg
sbb
or
add
rolb
jae
push
clc
loope
jg
daa
jl
ljmp
mov
pop
jmp
jp
jnp
jno
sub
mov
test
cmp
or
or
xchg
test
mov
pusha
stc
inc
clc
lock
cmpsb
mov
enter
lahf
jae
pop
out
cmpsb
add
gs
data16
test
adc
dec
push
outsl
push
and
mov
dec
push
mov
ljmp
inc
shr
es
add
adc
in
sub
fisubs
inc
add
fwait
mov
sbb
loop
cmc
pushf
scas
outsl
mov
and
fimuls
and
mov
mov
lock
cmp
xchg
xchg
in
jne
imul
cwtl
sub
push
fistpll
or
adc
xchg
popf
adc
call
adc
push
jb
jecxz
and
xor
flds
int3
fcompl
stc
mov
mov
mov
test
cmp
or
and
mov
dec
cmp
mov
inc
stos
add
fmul
pusha
movsb
and
std
imul
push
in
popa
xor
js
xor
jle
xorps
push
lock
jnp
daa
mov
or
aaa
cwtl
lret
cmp
dec
in
repz
ss
jo
inc
xor
int3
nop
lds
lretw
mov
ret
out
lea
add
lcall
arpl
push
xchg
dec
xlat
push
out
nop
scas
arpl
xchg
dec
push
push
pop
popf
jp
mov
mov
clc
sti
jge
popa
cmp
es
sbb
adc
aam
push
rolb
loope
sub
popf
adc
sbb
lea
loopne
ja
adc
jns
cli
push
into
jecxz
mov
cmp
rcrl
loop
stos
iret
pushf
lods
mov
imul
cli
mov
xor
push
jl
lock
dec
and
mov
add
outsl
cmp
mov
xor
adcl
call
into
icebp
std
adc
pop
jbe
mov
aas
pop
mov
add
cmp
jb
xor
aas
xchg
movsb
and
adc
outsl
and
or
fistl
adc
lea
and
sbb
dec
and
imul
icebp
stos
push
add
into
rcll
sub
in
lods
stos
inc
jg
rorl
sub
inc
or
xor
mov
adc
fmuls
nop
popa
bnd
adc
shl
jge
insl
arpl
clc
imul
orl
into
dec
cmp
jne
push
push
xor
sbb
js
adc
sahf
mov
mov
nop
sub
jmp
dec
inc
xchg
push
int3
mov
jge
in
loopne
fnsave
mov
ja
pop
stos
pusha
xor
mov
fsubs
push
mov
jnp
xor
sub
mov
xor
mov
and
shll
jecxz
sub
adc
cmp
pushf
pop
stos
add
cwtl
cwtl
adcb
add
mov
test
sqrtps
inc
xor
in
xor
shrb
insl
and
mov
dec
sbb
pop
mov
and
and
loope
cwtl
js
scas
bound
and
dec
ret
ror
mov
mov
mov
push
or
hlt
sahf
mov
rorl
in
in
pop
cmpsl
shll
mov
adc
jbe
pushl
in
and
scas
fwait
lret
inc
lods
push
sbb
mov
icebp
leave
jge
jle
pop
pop
xchg
jo
xor
adc
xchg
shlb
add
push
fsts
and
rclb
es
cli
xor
jecxz
push
ret
and
or
xchg
ljmp
pop
push
mov
dec
pop
ja
sub
jg
cmpsl
and
rcpps
pop
stc
mov
xchg
pop
and
xor
lods
cmp
ss
and
pop
aas
cmc
mov
mov
mov
dec
pop
ficompl
mul
fstpl
xchg
cli
or
xor
pop
std
int3
loopne
scas
xchg
mov
jl
xorl
or
jb
xchg
jp
or
in
push
and
data16
inc
mov
mov
fstpl
push
or
lret
inc
push
mov
out
int3
push
jge
enter
in
sub
adc
rorb
cs
xor
sti
add
mov
cmp
sbb
lahf
mov
inc
pusha
out
in
int3
pusha
lods
cmc
mov
and
adc
xlat
gs
int
jne
dec
fsubl
ror
fldt
scas
xchg
jns
outsb
neg
mov
pusha
ja
inc
pop
push
pop
mov
mov
xchg
loopne
scas
adc
subl
mov
rclb
adc
ljmp
or
sahf
sbb
mov
ret
pusha
stc
and
inc
out
iret
sub
mov
adc
xchg
sbb
and
cltd
pop
in
inc
fisttpll
pop
jmp
mov
jge
dec
and
mov
int
mov
inc
mov
dec
int
dec
sbb
xchg
jge
adc
push
pop
or
cmpsl
loop
xor
pop
sbb
arpl
loopne
fs
xorl
div
xchg
out
incl
cld
nop
sbb
push
mov
insl
testb
aaa
adc
sub
mov
xor
push
mov
jmp
and
out
std
xor
insb
cmp
jne
pop
aam
cmp
xor
jmp
xchg
int
xchg
or
pop
dec
mov
sbb
push
lods
lods
das
mov
in
jp
movsb
cmpsb
inc
cld
jecxz
xchg
mov
aam
push
jmp
in
insb
and
jbe
out
repz
jmp
mov
stos
icebp
aaa
xor
outsb
xlat
sbb
xchg
es
loopne
cmc
popa
dec
pop
push
mov
or
fsubrs
mov
sbb
aas
test
sbb
add
xchg
stos
repnz
sbb
int
cmp
aaa
cli
mov
lret
aad
fwait
add
or
push
shr
push
jns
push
push
push
inc
mov
push
sub
ss
out
rcrb
mov
out
testb
xor
jo
push
mov
idiv
xor
daa
inc
cld
add
push
and
push
aas
fwait
push
icebp
arpl
pop
js
mov
popf
xor
push
and
loop
inc
or
jb
ret
ds
jo
pop
rcrb
xchg
dec
add
dec
cmpsb
jecxz
pushl
sahf
mov
adc
push
stos
stos
test
neg
jns
ds
outsb
inc
push
pop
fisttps
xor
inc
in
out
push
iret
in
sbb
leave
xchg
sub
adc
and
sbb
push
pop
cmp
lods
imul
insb
lods
lds
xchg
xor
push
gs
icebp
fmull
int
lret
cmc
inc
jge
es
movsl
sub
jl
jnp
sbb
jne
cli
ss
xchg
stos
test
jo
dec
jg
mov
push
addl
pop
inc
pop
mov
push
push
inc
or
arpl
jge
sbb
mov
push
mov
inc
mov
cli
test
xchg
sub
fwait
xlat
scas
frstor
mov
mov
stos
pop
mov
mov
inc
pop
jne
loop
cmp
jo
pop
movsl
jg
or
or
or
mov
lea
jp
roll
movsb
loopne
in
pop
lods
lods
sbb
out
sub
scas
mov
rcrl
push
les
cmpsb
arpl
insb
cs
lds
cs
int3
scas
dec
loopne
pop
lods
pop
outsb
jnp
and
pop
adc
loopne
and
and
mov
faddl
adc
enter
mov
fistpll
movsb
call
int
stos
mov
pop
stc
pcmpgtw
inc
sub
shrb
fiadds
icebp
and
xchg
mov
adc
incb
sbb
sbb
paddusw
sub
int3
ret
dec
push
pop
faddp
lahf
imul
insb
je
push
ds
aad
cmc
inc
cmp
mov
pop
pop
mov
adc
fisubrl
add
imul
call
mov
adc
rorb
mov
push
mov
ss
movb
in
es
dec
mov
rcrb
mov
and
hlt
xor
xor
fnsave
andl
jp
int
xorl
das
mov
mov
call
data16
aad
fadd
test
ja
mov
int
hlt
lret
cmp
and
loope
cmp
arpl
xchg
dec
add
cmp
inc
iret
dec
in
jnp
xlat
lods
or
repnz
aad
push
add
ret
mov
pop
fnsave
das
cmpb
bound
es
nop
xchg
and
dec
sub
enter
add
fisubrs
push
jo
gs
xchg
int
test
xor
or
out
stc
push
fnstcw
cmp
in
jns
movsl
sub
mov
scas
out
ljmp
lret
add
adc
mov
dec
stc
push
test
xchg
lock
decb
sahf
test
mov
mov
fs
les
add
pop
lds
insb
push
jle
sbb
fnstsw
jmp
or
in
cmc
daa
add
pop
cmpsl
sub
cld
push
enter
push
fstpt
pusha
sub
mov
cmp
in
les
push
in
pop
fistpll
popf
faddl
lret
sub
sub
jge
dec
ljmp
popa
push
out
rol
sub
dec
scas
test
jbe
fs
ds
xor
push
sbb
icebp
inc
add
adc
aam
sbb
cmp
je
fwait
pop
sbb
test
fdivs
add
jbe
jle
addr16
inc
add
clc
lods
fdivs
mov
mov
cmp
rorb
popa
call
pop
sbbl
cmpsb
pop
push
dec
inc
clc
inc
in
shll
sub
mov
inc
jg
push
into
das
mov
xchg
call
sbb
shlb
and
or
shrb
inc
xor
in
or
test
xor
pop
movb
adc
fsubr
aaa
push
rcll
sbb
int3
push
dec
test
and
lret
push
dec
shll
and
mov
dec
xchg
out
mov
jno
xchg
pop
sahf
dec
sbb
mov
mov
push
rolb
sbb
out
push
jecxz
fisubl
sbb
jne
sub
jge
pop
pop
rclb
cmp
repz
mov
adc
popa
fimull
cli
or
shlb
pop
jl
int
pop
mov
add
popf
and
stc
rclb
lods
arpl
jmp
cs
mov
cmpsb
jge
lds
stos
jl
bound
scas
addr16
rol
pop
adc
jmp
in
leave
xor
inc
jg
or
cmc
mov
adc
rolb
stc
mov
das
mov
clc
cmpsl
outsl
adc
jbe
jecxz
cmpsb
dec
ljmp
fimuls
repz
mov
inc
inc
or
clc
je
jnp
rclb
inc
mov
cwtl
push
mov
inc
das
test
nop
and
popa
clc
das
mov
fisttps
mov
ffreep
mov
push
jecxz
xchg
je
xor
adc
scas
ja
ds
fsts
lahf
shlb
clc
sbb
pop
cwtl
and
jle
adc
test
adc
into
loop
push
jno
sbb
imul
xchg
mov
out
sbb
xchg
hlt
stc
cmp
ret
jns
in
popf
daa
cmp
mov
add
int3
fldenv
or
mov
sti
cmp
and
sub
mov
ficomps
sbb
loop
cli
push
xchg
push
mov
cmp
adc
and
mov
movsb
mov
orb
dec
cli
test
adc
std
into
inc
adc
imul
cmpsl
xchg
lea
mov
adc
ret
adc
cltd
add
jg
ret
push
mov
sti
push
dec
lock
push
inc
negl
dec
adc
inc
jbe
mov
cmp
sub
hlt
sub
push
jnp
lret
cwtl
movsb
out
dec
or
or
xchg
mov
or
mov
pop
aaa
in
mov
das
adc
sbb
loope
pushf
mov
lret
sbb
sahf
or
loopne
sbbl
jl
into
adc
pushf
leave
nop
jp
xchg
adc
sub
sar
inc
shlb
pop
aas
inc
fists
lock
imul
inc
push
xchg
pusha
jmp
dec
addl
bsr
sar
aad
lea
ss
test
mov
scas
jbe
push
mov
jle
lahf
sti
and
xor
sub
mov
pop
inc
add
repz
xchg
das
mov
das
adc
pop
pop
outsl
mov
mov
outsb
mov
mov
xchg
xor
movsl
cwtl
repnz
ret
pop
mov
mov
popa
push
jne
inc
ljmp
leave
cld
test
mov
dec
hlt
pop
negb
sub
adc
xchg
std
mov
add
imul
push
cs
push
rolb
sahf
mov
in
stc
mov
push
pop
insl
dec
pop
xor
not
xchg
sub
lea
test
fs
and
test
pop
push
andb
imul
pextrw
jae
out
nop
xchg
testb
jge
add
cwtl
scas
jg
mov
lret
fnop
roll
sbb
stc
test
xchg
jb
dec
xor
iret
inc
addb
cmpsb
push
xchg
fadds
fistpll
test
cmpsb
dec
rorl
xor
adc
in
bound
dec
int
pop
add
mov
lret
and
popa
ljmp
mov
movsb
out
test
cli
jp
addr16
mov
lods
or
repz
jne
xor
bswap
pop
adc
cmp
cmpsl
aaa
dec
push
cmp
hlt
iret
lock
jns
jmp
push
xchg
inc
pop
push
lods
mov
addr16
loop
mov
aam
loop
in
in
lahf
out
pop
pop
das
sbb
push
sarl
mov
add
pop
jmp
inc
scas
mov
mov
push
aas
in
or
cs
cmpsb
in
add
mov
hlt
add
add
sub
mov
and
push
push
pop
int3
les
ds
cmp
fstps
mov
or
push
jp
fisubl
mov
shll
push
add
pop
sub
aaa
rorb
ds
mov
fcomps
call
sub
cmp
pop
xlat
xchg
dec
jb
pop
pop
push
dec
nop
dec
mov
cld
xor
fists
and
xchg
add
ds
sti
testl
les
roll
outsl
mov
mov
in
stos
or
sbb
mov
dec
out
gs
daa
jnp
and
loopne
and
xchg
fisubs
test
fs
jmp
fcoms
xchg
jg
pop
divl
int
fists
sbb
jge
test
mov
stos
sbb
mov
mov
int3
gs
in
jae
and
and
incl
adc
mov
push
xchg
xchg
sbb
sbb
mov
out
push
shlb
add
adc
fs
lahf
bnd
jne
mov
out
mov
xchg
jae
inc
add
out
mov
lcall
mov
or
pop
std
pop
imul
repnz
lods
fisttpll
jo
jg
jle
xchg
push
frstor
shll
dec
xchg
jnp
in
fbld
sbb
and
jge
insl
and
test
scas
xchg
mov
mov
in
sub
cltd
je
push
xchg
or
out
inc
push
pusha
outsl
addr16
xchg
sarl
jg
lret
ret
std
arpl
idivb
sarb
clc
jno
es
arpl
xchg
lds
lea
repnz
daa
ret
inc
inc
or
pop
jae
jmp
push
adc
mov
aad
cmp
or
jle
add
filds
pop
xor
dec
sti
stos
lods
xchg
dec
lcall
dec
cmc
lcall
or
int3
stos
in
jl
movsb
xchg
adc
test
pop
imul
inc
adc
lret
stos
aam
in
out
out
sub
cmp
mov
mov
stc
in
dec
jne
repnz
popf
pop
nop
fsubrl
out
jg
jns
rolb
in
fmul
test
xchg
and
cmp
stos
cs
cld
cmp
rclb
shrl
subl
mov
mov
add
leave
ret
inc
stos
cmpb
xchg
imull
mov
push
and
insl
jb
pop
fistpl
xor
mov
inc
outsl
loop
dec
ljmp
xchg
inc
test
xchg
test
and
mov
test
and
sbb
pop
push
mov
mov
loopne
and
test
sub
pop
call
push
mov
mov
pop
stc
shr
out
cs
pop
sbb
das
add
mov
sbb
ljmp
ljmp
mov
aas
xchg
sbb
cmpsb
in
jp
dec
dec
jecxz
mov
les
ljmp
loope
cmpsl
addr16
jns
shlb
jmp
enter
adc
pop
inc
ds
mov
fnstcw
iret
loope
and
dec
fs
aam
fucomi
clc
dec
pop
xchg
xchg
sub
jecxz
movsb
and
sub
icebp
ja
call
mov
ret
dec
es
lea
test
ds
mov
push
xor
je
jb
add
ja
jl
sahf
sbbb
sbb
xchg
aad
and
aam
outsb
mov
jl
xor
mov
sbb
arpl
or
xor
cltd
enter
mov
dec
inc
icebp
aaa
add
xlat
iret
ss
sub
mov
outsb
or
push
repnz
mov
cmc
and
cmp
adc
sub
aas
pusha
or
add
inc
jne
inc
subl
dec
ja
xlat
insl
cld
addr16
and
lret
pop
stc
std
inc
mov
imul
gs
loopne
lods
pop
or
pop
rclb
cltd
pusha
xchg
xchg
repz
sbb
pushf
sub
xchg
and
or
adc
lods
imul
xorb
je
rcll
or
outsb
in
shrb
cmc
xor
dec
sbb
push
or
aam
int
es
push
adc
repz
mov
popf
repnz
mov
mov
lcall
jb
gs
icebp
sbb
xor
into
scas
sahf
dec
adc
ret
shl
mov
mov
pusha
lods
addr16
mov
scas
inc
adc
notl
das
jo
xorl
inc
adc
int3
inc
add
mov
pop
mov
paddsb
je
xchg
test
lock
fimuls
sbb
jp
mov
mov
xchg
cmp
inc
mov
pop
mov
pop
cld
andb
inc
aam
imulb
adc
rcrb
inc
aad
hlt
adc
test
mov
or
lock
pop
adcb
inc
inc
testl
je
dec
adc
in
fnstcw
out
ss
clc
adc
loop
pop
and
mov
mov
mov
sub
imul
inc
jbe
add
mov
jle
cmp
adcb
push
scas
and
imul
xchg
sbb
push
out
fnstenv
inc
notl
enter
insb
negb
or
ja
out
rcll
aad
dec
or
xor
xchg
push
fs
or
fs
lahf
add
es
pushf
outsb
shrb
iret
inc
pop
sti
dec
mov
dec
cmp
outsb
dec
sbb
sub
mov
rclb
sub
sub
lea
add
shlb
addb
dec
imul
repz
jnp
rcrb
cwtl
ficomps
mov
mov
and
push
daa
aas
sbb
shrl
popf
leave
push
orl
sti
int
sbb
ret
mov
cli
or
stc
addb
aaa
cmc
lock
int3
outsb
adc
pop
lock
ds
out
or
jo
jp
pop
inc
adc
jle
and
add
arpl
xor
jge
mov
es
movsl
jecxz
scas
xor
ss
cli
fwait
out
imul
rcrb
test
mov
mov
leave
stc
shrb
adc
mov
arpl
mov
hlt
and
jnp
adc
ljmp
pop
dec
pusha
mov
sahf
mov
xor
or
jle
imul
jns
mov
popl
out
inc
inc
inc
cmp
or
inc
rorl
movsb
movsl
loopne
and
push
es
jb
pop
out
mov
cld
mov
sahf
mov
repnz
movzwl
lcall
jb
testl
sahf
call
and
idivb
mov
lret
gs
push
leave
mov
repnz
popa
fidivrs
xchg
sub
pop
subl
adc
inc
jno
in
sub
ja
fstsw
jno
das
sbb
in
cld
dec
push
mov
insl
call
push
hlt
cmpsb
cld
fwait
in
cltd
xchg
testl
pop
in
int
ljmp
jo
stc
fisttpll
sub
xchg
dec
mov
lret
in
test
stos
mov
pop
pop
fisttpll
sub
xchg
xchg
pop
mov
push
sar
mov
mov
adc
or
xchg
sbb
adcb
jg
iret
cmp
loopne
xchg
fdivrl
add
sub
test
cmpsl
sti
into
aad
push
xchg
ss
push
sti
arpl
lods
jne
and
sub
dec
push
jbe
mov
je
outsl
push
push
scas
imul
lds
add
add
std
decl
sbb
jmp
and
insl
push
jo
aam
dec
push
push
js
mov
jge
aaa
stc
push
loopne
loope
sbbb
mov
leave
jmp
pop
sbbb
stos
aaa
aaa
cmp
imul
popa
dec
pop
adc
or
cli
sub
loope
jae
mov
roll
mov
sbb
imul
shrl
dec
repz
shl
sbb
push
push
int
loop
inc
add
mov
enter
cltd
fistpl
movb
mov
mov
ja
push
mov
pop
jmp
and
push
lcall
ss
mov
mov
in
push
loope
and
mov
sbb
mov
jge
and
pushf
mov
daa
aad
cmp
dec
xorb
jle
lock
and
dec
dec
and
lods
cwtl
and
and
pop
xor
sbb
divb
or
push
push
lcall
repnz
xor
mov
mov
cmp
outsb
lods
mov
fcmovne
xor
std
dec
cwtl
aaa
aad
xchg
add
lds
jl
lahf
add
push
pmaxsw
mov
and
cli
fistl
outsl
in
call
std
jo
ljmp
in
inc
push
outsb
jg
mov
pusha
inc
lret
mov
cmpsl
in
xchg
xlat
sub
popf
jno
and
out
inc
sub
and
xchg
ss
xchg
arpl
sbb
cmp
mov
xchg
addr16
mov
negb
xorb
cmpb
lods
sbb
in
dec
xor
jl
cmp
data16
negb
cmp
push
stos
mov
test
rorl
xchg
push
sub
es
cmc
je
push
mov
adc
or
rcr
dec
outsb
mov
push
xor
mov
pop
sti
out
push
adc
out
xlat
test
ficoms
movsl
cmpsb
test
sarb
std
sub
sarb
call
sbb
jnp
ret
iret
or
cmpl
xlat
inc
dec
fwait
xchg
test
daa
pop
mov
out
jbe
cltd
fmuls
mov
push
and
test
and
sub
xchg
stc
or
rcl
jle
jne
ljmp
adc
cmp
push
mov
cmpsb
and
fincstp
sub
inc
movsl
leave
inc
and
pushf
mov
jecxz
fs
jle
stc
das
and
jge
pop
sbb
mov
inc
ret
hlt
mov
mov
lds
jae
add
jmp
xchg
add
test
pop
into
outsb
test
hlt
out
call
push
mov
xor
or
jmp
xor
in
lods
xchg
lods
fsubp
cmp
dec
loopne
movsb
cmp
popa
clc
and
jo
loope
pop
sub
lret
leave
mov
out
inc
adc
hlt
pop
or
xchg
or
sbb
xlat
pop
sbb
lret
aas
cli
jl
or
adc
addr16
dec
fcmovnbe
test
fwait
aad
add
cmpsb
outsb
pop
ljmp
push
repnz
imul
jg
adc
xchg
fld
cltd
cmpsb
je
cmpsl
xorb
out
int
negb
sub
sub
lret
arpl
into
rorl
aaa
nop
jp
icebp
xorb
in
mov
add
lods
push
int
jecxz
aad
sub
lods
call
inc
inc
inc
mov
fsubl
fisttpl
add
xchg
jg
int
sahf
dec
cmp
jmp
jbe
xchg
xchg
idivb
pop
jo
lea
mov
std
std
mov
mov
fwait
dec
ret
int
cmc
call
push
cmpsb
or
jle
mov
mov
sbb
mov
xor
dec
xchg
ds
js
inc
dec
mov
loop
push
mov
xor
xor
sub
xor
loopne
jmp
icebp
icebp
dec
push
xchg
in
int
pop
xor
cmp
mov
cmp
mov
push
clc
es
adc
aad
pusha
out
adc
inc
hlt
pop
fists
xchg
inc
pop
or
and
sbb
loope
xchg
leave
mov
mov
sbb
clc
icebp
sub
dec
xor
lahf
xorb
neg
sub
push
or
and
xor
cmovge
jle
or
adcl
mov
sub
sub
mov
pushf
or
out
sbb
inc
push
push
out
and
pushf
xchg
inc
shrb
sub
and
ss
divb
clc
mov
xchg
rorl
lds
or
testb
fwait
push
fidivs
clc
aam
pop
inc
cmp
push
and
out
xchg
lods
popa
pop
lcall
pusha
add
dec
jbe
loope
push
dec
or
fidivs
xchg
loopne
bound
mov
and
or
ja
jg
mov
aad
negb
xor
bound
mov
add
xor
pop
jg
cmp
xchg
jle
fdivrl
push
inc
dec
je
fwait
xorl
lcall
xchg
inc
xchg
push
mov
adc
or
and
inc
push
mov
cmp
push
call
mov
iret
push
iret
fidivrl
pop
push
rcrb
push
pop
sbb
adc
dec
mov
je
cmpb
cmc
inc
cmp
orl
xchg
lret
mov
add
test
add
jbe
mov
mov
scas
daa
mov
popa
cmc
test
nop
into
jo
lret
push
pushl
mov
or
test
imul
repnz
int3
and
fwait
mov
mov
pushf
xchg
subb
mov
cwtl
fs
insl
test
scas
xchg
mov
sbb
and
dec
push
mov
inc
das
pop
mov
add
add
mov
out
mov
lods
lea
pop
sub
jnp,pt
adc
ret
dec
mov
push
out
sbb
repz
lret
cs
decl
shll
fwait
push
pop
push
pop
pop
arpl
test
scas
mov
in
and
test
sub
int
pop
jg
mov
pop
jne
outsl
inc
rorb
or
movsl
jns
add
add
jecxz
add
or
add
xor
mov
popa
sub
sub
leave
aas
cmc
sbbb
cwtl
push
mov
nop
adc
inc
nop
mov
and
push
stos
xor
fs
add
add
mov
cmpsb
jb
aaa
pop
mov
lea
push
sbb
jae
dec
xchg
push
mov
push
test
adc
aam
jge
cmp
aam
jg
sbb
dec
adc
lock
xchg
cmpsb
fisubrs
lcall
xor
and
into
sbbb
insl
cmc
test
add
add
lcall
dec
push
sarb
sbb
add
xchg
mov
sbb
pop
ret
lcall
mov
in
cmp
xchg
insl
shr
clc
jne
mov
cmp
leave
push
add
cmp
adc
ljmp
loope
cmp
call
dec
rol
jecxz
jbe
cmp
or
push
loop
hlt
mov
mov
out
or
outsl
iret
les
dec
jecxz
ret
mov
stc
je
mov
mov
scas
mov
mov
or
jbe
pop
stc
int
lds
push
dec
push
idivl
lods
in
sbb
loope
lea
dec
fisubrl
dec
lds
jmp
cmpsl
and
jo
mov
or
aaa
leave
cmpb
add
pop
and
repnz
dec
icebp
out
fwait
arpl
xor
sbb
and
stos
jne
xchg
pop
dec
sahf
rorl
pop
xor
dec
sbb
out
cmp
bound
movsl
jo
jb
jo
data16
dec
ret
jo
push
mov
out
mov
push
fucomip
ffreep
xor
jnp
fdivr
mov
outsb
mov
test
jo
aam
mov
aas
in
or
jecxz
mov
xor
adc
add
pop
mov
fwait
pop
andl
jmp
sbb
lfs
mov
mov
or
inc
push
insl
sbb
and
adc
andb
fs
imul
test
mov
adc
mov
cli
add
xor
xchg
dec
dec
pop
jns
adc
pop
lcall
outsb
daa
lods
jae
pop
popf
jns
shll
push
xchg
inc
mov
cmp
sub
ss
mov
xlat
icebp
imulb
cmp
inc
or
movsl
lods
or
stos
out
pop
push
add
pushf
pop
xor
imul
fstpl
inc
xor
lock
add
xorl
icebp
mov
ss
push
pop
mov
mov
call
cmpb
js
push
dec
mov
mov
or
jle
mov
loope
aam
faddp
pop
pop
jp
int
mov
jp
mov
xchg
inc
rcll
fcomp
jecxz
sub
or
dec
dec
adc
push
cmp
lcall
mov
add
insb
in
aaa
test
cltd
inc
fisubrl
out
sbbl
cmp
sbb
and
dec
jmp
aas
mov
shlb
cmp
mov
jne
sub
push
cmpsl
jle
xchg
data16
mov
ljmp
adc
orb
or
in
shrl
mov
je
fists
mov
gs
addl
xchg
aaa
stc
xchg
in
nop
jae
jle
rorb
test
push
aad
adc
sbb
stos
dec
add
popa
enter
xchg
movsl
mov
jmp
mov
pop
or
jl
jne
jno
das
cmp
lock
cld
inc
and
lret
stos
fadds
mov
out
aaa
scas
jl
dec
cmp
cltd
lahf
jbe
pushf
cli
inc
imul
sbb
in
sbb
fsubl
aas
add
test
movsb
out
adc
jb
mov
test
mov
sti
mov
mov
imul
cmp
call
pop
scas
xor
jne
lds
jb
jb
xor
je
adc
jp
sbb
cmc
cmc
cmpsb
es
or
xchg
addr16
xor
xlat
push
movsb
ja
push
jp
xchg
mov
sti
sar
sub
jmp
stos
testl
mov
jl
lock
aad
or
or
mov
or
mull
or
pusha
mulps
cmp
mov
push
add
aas
dec
push
sbb
test
push
mov
jne
inc
insb
xor
inc
jl
lods
cld
aam
fnstcw
mull
lret
loop
jl
xlat
sahf
jmp
adc
mov
cli
xchg
leave
jns
jl
mov
and
insb
dec
sub
push
inc
jb
pop
insl
cmpsb
pushf
xchg
aas
mov
push
dec
aas
cmpsl
mov
dec
lods
das
in
cmpsl
imul
lahf
cmpsb
cmp
mov
pop
adc
ja
mov
ret
test
pop
add
pop
jns
call
inc
jbe
push
repnz
enter
je
mov
in
sub
mov
pop
and
loope
mov
inc
sub
ss
cmp
add
push
cmpsb
jo
stc
push
fbld
sbbl
dec
pop
and
enter
outsb
mov
daa
dec
push
jecxz
add
push
shlb
mov
xchg
nop
ds
call
push
mov
sti
push
cmp
std
push
xchg
into
ja
imul
repz
push
pop
js
ja
in
push
inc
sarl
es
inc
clc
pop
out
adc
sub
test
icebp
clc
inc
int
movsl
dec
ret
xlat
mov
mov
into
test
or
rcrb
jno
xor
daa
insb
xchg
and
in
mov
stos
push
mov
xor
inc
xor
repz
in
stc
mov
pop
arpl
das
sbb
leave
sub
inc
fisubrl
shll
into
loopne
scas
mov
adc
fnstcw
and
push
sub
push
repz
cmp
pop
adc
movsb
movsl
aam
cmpsl
pusha
das
pop
xorl
push
icebp
pusha
cld
in
mov
pusha
sbb
mov
neg
cmpb
xchg
clc
fistpl
mov
pop
adc
shlb
ss
testl
cld
add
ds
sbb
inc
loope
gs
mov
lea
mov
imul
pop
or
cs
lods
int3
inc
mov
stc
sub
inc
in
ds
dec
pop
or
xor
dec
mov
push
add
mov
hlt
shlb
loope
jnp
rol
pop
lahf
cwtl
les
xor
cwtl
xchg
cmp
jbe
aaa
cwtl
mov
xchg
xchg
pushf
insb
fimull
andl
cmp
ds
outsb
mov
xchg
adc
dec
sub
pop
xor
jg
sbb
jb
nop
js
shr
andb
sbbl
les
adc
out
inc
xchg
mov
das
lods
cmp
jnp
xchg
push
inc
in
das
mov
fisubs
movsb
pop
xchg
jl
pop
adcb
sbb
pop
mov
ds
and
popf
ffree
repz
mov
cwtl
sbb
adc
cmc
fwait
xchg
jecxz
imul
push
js
xlat
adc
es
int3
mov
lods
cmc
sub
xor
in
adc
lcall
mov
dec
lods
movsb
sbb
and
adc
and
jne
jae
rcll
mov
cmp
cmc
push
rol
imul
scas
ljmp
mov
pop
lcall
ds
mov
arpl
shl
pop
lret
int
mov
lods
mov
mov
pop
or
jno
sub
leave
and
mov
mov
subb
stos
cli
sbb
mov
jg
push
out
movsb
int3
jno
mov
sub
subb
cli
jb
cli
push
decl
sub
repnz
dec
mov
sub
in
iret
roll
add
pop
loop
fdivrl
out
jp
imul
sub
aas
mov
add
mov
adc
dec
in
fistl
out
aaa
stos
pop
xchg
out
fsts
mov
xor
mov
leave
xchg
mov
shl
push
xchg
adc
test
setg
ret
mov
out
shr
jp
sti
inc
push
fsts
and
xchg
push
push
cmpsl
icebp
jl
xor
negb
stos
pop
js
movsb
pop
insb
ds
adc
in
psrld
sub
xchg
jo
push
sbb
jnp
cli
movsl
and
add
sub
push
sbb
push
jne
iret
mov
jmp
cmp
pop
enter
cmc
mov
aas
xor
aam
ljmp
pop
or
and
sub
mov
jge
xchg
mov
push
pop
in
jb
push
and
cmp
jge
adc
mov
mov
push
sbb
bound
and
sub
add
stos
cld
jno
rclb
cltd
fs
adc
cltd
jae
adc
cmpsl
push
insb
or
std
sbb
adc
in
lods
xchg
enter
mov
push
insl
fwait
cmp
loope
jge
jmp
arpl
adc
fucomip
lds
les
jae
jb
aam
lret
aam
ficoms
stos
pop
push
icebp
pop
test
add
sub
cmp
mov
cmp
sbb
dec
cmpsb
mov
out
pusha
pop
sbb
data16
pop
imul
mul
movsl
ss
sbb
xor
leave
add
lea
mov
ret
xchg
lret
iret
in
lods
fbstp
sbb
sahf
in
add
jp
or
push
test
sbbl
in
mov
inc
popa
leave
add
adc
cld
jg
mulb
xlat
lret
mov
lea
dec
jmp
xor
fisttpl
mov
nop
aad
sub
mov
add
stos
lock
movsl
xor
sub
lret
imul
imul
outsb
pop
jae
stos
xor
lcall
rcrb
xor
in
out
jg
cmc
lcall
les
addr16
mov
mov
bound
or
daa
imul
std
pop
stc
mov
lds
popf
push
fldl
mov
inc
push
repz
jmp
add
push
icebp
iret
push
add
lds
cwtl
sub
in
push
pop
xchg
dec
add
push
jecxz
jmp
scas
lcall
jae
popa
inc
dec
test
sub
repnz
int
lahf
cmp
lods
inc
divb
test
dec
push
inc
adc
pop
pop
dec
setns
sub
out
mov
test
mov
imul
in
repz
outsl
hlt
jl
mov
add
in
nop
outsb
js
mov
jg
addr16
daa
add
fstps
imul
fdiv
repz
mov
ss
jle
push
mov
rolb
das
addr16
add
inc
and
push
leave
add
xchg
fsub
mov
sti
in
jbe
xchg
jo
filds
xchg
leave
les
inc
push
adc
xor
mov
mov
push
dec
outsb
fsubs
adc
cmp
jecxz
sub
mov
fadd
push
cmp
mov
lock
adc
xor
pop
fimull
lods
push
jne
xor
pop
mov
pop
adc
mov
test
dec
repz
pop
jge
jecxz
mov
add
mov
fistpl
ds
adc
stos
es
mov
int
test
xor
out
daa
in
mov
cmp
sub
jne
xor
xchg
lock
xchg
mov
xor
xchg
mov
das
dec
bound
xchg
mov
ret
and
pop
cmpsl
outsl
mov
loop
mov
pop
dec
int3
in
mov
scas
sub
cwtl
mov
dec
push
les
or
sub
xchg
or
push
ja
mov
subl
inc
lods
daa
insb
add
xorl
sub
mov
cmpsb
add
sub
cmc
cmp
out
sbb
adc
push
hlt
adc
enter
lods
leave
ljmp
cmc
jno
sub
jo
inc
outsl
call
sub
aas
daa
cmp
pop
sti
or
cmp
cmp
mov
aad
lock
rorl
adcl
pushf
jp
lea
add
dec
leave
arpl
cltd
jbe
sub
jg
loopne
mov
in
bound
and
lret
xlat
pop
iret
ljmp
pop
test
sub
popf
or
outsb
daa
aas
sbb
shl
mov
popf
imul
sub
jg
inc
add
xchg
dec
adc
jge
adc
cmpsl
pusha
mov
add
xor
in
pusha
hlt
mov
or
dec
sub
pop
sub
daa
addr16
adc
popl
jae
ds
into
add
xchg
ja
jae
in
out
sbb
mov
xchg
ja
adc
mov
xor
sahf
inc
mov
dec
adc
ljmp
ljmp
xorl
lods
inc
fdivl
fisttpll
mov
and
xchg
xor
mov
mov
nop
aam
stos
fiadds
jno
push
divl
inc
out
aad
jmp
pusha
push
mov
imul
dec
dec
lock
mov
inc
sub
repnz
and
lock
loope
push
xchg
mov
pop
pusha
dec
and
out
stos
call
ja
ljmp
pop
lretw
sub
sub
sub
std
push
std
inc
dec
adc
fs
lods
pop
xchg
lea
jge
int3
push
aam
fcoml
loop
pop
jb
stos
xchg
rcl
add
enter
mov
imul
jl
lcall
imul
test
cmp
adc
frstor
mov
lea
or
add
popf
popf
xchg
pop
sub
jno
mov
xchg
dec
mov
cmp
lret
inc
mov
push
hlt
xchg
aad
push
mov
xor
stc
cmp
outsl
popf
jae
add
dec
sbb
dec
xchg
push
sbb
daa
xchg
nop
cmpsl
xor
or
cld
loopne
test
imul
dec
mov
arpl
and
aaa
cmp
pop
in
xorl
addr16
fs
dec
pop
and
in
or
pop
lods
mov
add
pop
jnp
rcrb
loopne
adc
pop
dec
lds
dec
fsubl
out
adc
lret
pop
out
pushf
lret
pop
cmp
data16
adc
mov
loop
into
push
sbb
daa
sbb
stos
int3
mov
aaa
push
ds
or
xor
push
cmp
jo
rcll
fsubrl
sub
or
mov
mov
ss
fstl
jno
in
js
sub
sahf
cmc
pop
mov
pop
lods
adc
jns
shl
push
cli
cltd
shll
xor
scas
ja
jp
jp
popf
repz
inc
gs
cmpsb
xor
dec
icebp
ret
in
sarb
mov
mov
loope
loop
js
push
inc
jae
rorb
sub
mov
gs
mov
sbb
pop
aam
sbb
and
push
shrb
pop
add
in
mov
les
push
jns
iret
cmc
sub
scas
push
dec
pusha
sbb
cld
sub
xchg
mov
lret
test
dec
jle
cli
dec
sarb
es
adc
ret
xor
hlt
aad
cmp
pop
int
iret
cmc
push
sahf
xchg
sub
sub
cmpsb
mov
jp
jp
mov
les
cmp
aaa
out
xchg
xor
inc
out
into
adc
insb
vcmptrue_ussd
jb
push
push
inc
icebp
mov
cwtl
mov
popf
inc
ds
sbb
cmp
filds
sbb
pop
jle
or
and
cmp
cs
sti
addr16
in
inc
sahf
test
jmp
lcall
dec
xchg
push
shr
mov
repz
fnsave
pop
daa
mov
pop
roll
jle
mov
cmp
idivl
cmpsl
addr16
aad
xor
notl
dec
pop
lods
push
lret
lret
out
pop
jecxz
je
cmpsl
mov
push
repnz
popaw
and
in
mov
dec
movsb
dec
or
push
imul
xlat
xchg
pop
push
enter
insb
push
xor
loop
xchg
mov
pop
jae
roll
mov
outsl
std
mov
jb
jg
inc
stc
jmp
fimull
cmp
fwait
add
cmpsl
lret
gs
cmp
divb
stos
idivb
push
pop
inc
aad
push
hlt
jmp
pusha
ret
gs
jo
push
pop
cld
int3
mov
mov
push
xor
mov
jne
xor
pop
test
popf
dec
insb
mov
push
xchg
cmovle
cmp
and
sbb
scas
dec
xchg
or
std
cmp
and
and
sbb
mov
stos
mov
mov
int3
adc
lahf
inc
in
sbb
stc
call
mov
ret
lret
mov
cmp
shl
rcl
cs
cmp
mov
js
sub
ljmp
add
clc
incb
push
loop
dec
fbld
push
mov
pusha
xchg
ds
mov
test
mov
push
jl
ja
fs
push
xchg
lcall
leave
test
pop
mov
data16
pop
cmpsb
aad
and
pop
fstl
test
adc
jbe
cmpsb
adc
and
adc
cmpsb
push
mov
call
adc
lret
xchg
subl
les
orl
out
aaa
dec
mov
mov
mov
sahf
jae
push
aaa
cmc
outsb
outsb
xchg
mov
repnz
jns
leave
mov
lods
hlt
pop
insl
sub
mov
fwait
and
xor
push
cli
sar
jmp
sub
pop
pop
iret
jae
or
jbe
sti
sbb
cmp
shl
and
ja
mov
fcmovnbe
hlt
aaa
dec
sub
in
mov
jge
into
in
push
adc
xor
insb
jecxz
mov
dec
inc
xchg
pop
inc
inc
decl
mov
push
mov
jl
adc
dec
ds
dec
add
out
in
jmp
ficomps
mov
ret
bound
int
dec
pop
xchg
push
adc
push
push
scas
cli
pop
aas
jo
imul
icebp
mov
dec
inc
mov
sbb
test
dec
and
js
jmp
fidivl
mov
pusha
sub
xchg
les
or
shl
mov
mov
std
cmpsl
mov
xchg
pop
pop
ret
add
xchg
cmp
jp
or
rcrb
or
push
call
insb
jmp
pmullw
cld
sarb
mov
int
loop
fimull
daa
repz
movsl
mov
mov
fwait
jecxz
or
lahf
loop
mul
lds
movsl
sub
mov
sub
xor
jp
add
xchg
jb
adc
and
not
sbb
sub
jle
insl
and
pop
lret
icebp
mov
xchg
sarl
clc
mov
mov
xchg
mov
xor
cmp
cmpsl
lods
jecxz
out
inc
stos
test
or
iret
inc
xchg
rcrb
mov
std
imul
add
jno
nop
adc
add
pop
pop
daa
adc
mov
sbb
incb
sbbl
or
std
lods
jg
mov
subl
cmpsb
ss
jge
pop
in
test
cmp
test
cmp
pop
inc
mov
loope
ljmp
shlb
pop
mov
stos
mov
push
mov
out
mov
aaa
cmpl
jae
popa
inc
clc
testb
scas
in
and
and
test
xor
hlt
xchg
movsb
jmp
jl
add
popa
cwtl
int
nop
jle
push
fdivrl
add
pop
pusha
pmaddwd
adc
lret
rsqrtps
fisubrl
divl
icebp
aam
gs
add
push
stos
pusha
push
pop
icebp
mov
xchg
cmp
out
fcoml
jle
sbb
dec
mov
cltd
and
lods
je
fwait
mov
into
insb
add
inc
xorb
add
inc
repz
mov
cmp
popf
sub
enter
sbbb
daa
xchg
inc
movsb
mov
sbb
sub
adc
cmp
mov
sub
je
mov
adc
pushf
xor
add
stc
es
movsl
inc
rclb
pop
mov
xorb
jle
les
call
push
inc
sbb
out
incl
es
jl
push
mov
xchg
xor
push
mov
mov
fs
pushf
idivl
jns
stc
popa
dec
daa
scas
dec
and
pop
jl
xchg
mov
sbb
and
in
xchg
add
push
or
and
and
cmc
orb
sbb
mov
mov
int3
or
xchg
sbb
and
mov
cltd
mov
int3
mov
dec
stos
test
hlt
out
jl
inc
sbb
int
and
jp
sbb
pop
aad
push
jnp
push
sub
push
pop
jp
pop
insb
xchg
push
or
sub
mov
lcall
lret
jno
jl
xor
js
pop
or
push
addr16
flds
movsb
leave
fists
sub
push
cmp
push
mov
xchg
dec
adc
inc
jl
xorl
lea
into
jo
sahf
adcb
aas
or
in
in
mov
addr16
or
push
sbb
xchg
pop
jp
dec
dec
out
lret
je
pop
in
aaa
lea
loop
xor
ss
repz
mov
test
popf
add
std
or
xchg
out
dec
adc
std
push
cmp
jnp
pop
sub
push
xchg
add
lcall
fidivl
fldl
nop
movsb
push
loope
jno
mov
nop
sbb
ja
sbb
inc
clc
xor
notl
loopne
xchg
aad
xchg
push
ljmp
ret
add
out
mov
leave
jl
jb
es
lock
adc
pop
lock
sahf
adc
add
add
and
add
push
add
mov
jp
mov
and
mov
and
push
outsb
push
pop
push
push
pop
rcrb
cmp
subl
lea
dec
xlat
scas
inc
jns
ffree
push
je
jp
scas
andl
fsubrp
aaa
sub
adc
movsl
jne
and
mov
push
insl
mov
mov
lret
cwtl
add
ljmp
inc
fwait
lock
clc
xor
sub
inc
nop
in
inc
mov
insb
gs
jae
xchg
push
mov
gs
out
int3
in
lods
out
mov
enter
outsl
bound
mov
cmp
in
add
push
xor
add
add
cwtl
or
fildl
xchg
jns
movl
jne
add
pop
pusha
xor
lock
mov
jne
push
out
inc
lea
test
imul
add
pop
outsb
lgs
iret
sub
flds
or
popf
mov
pushf
cmp
subb
mov
clc
repz
adc
cmc
dec
and
push
rcrl
inc
and
outsl
mov
loop
pop
add
insb
and
lds
jne
dec
jmp
cs
pop
roll
cmp
push
lods
lock
pop
jne
push
xor
sub
fbld
out
ret
pop
jno
jmp
or
lea
push
sub
fs
jecxz
in
scas
mov
adc
xor
lods
andl
cmp
mov
aad
into
mov
std
pop
adc
inc
push
fldt
clc
sub
pop
inc
andl
adc
addr16
jl
push
sub
in
daa
out
and
addb
jecxz
ljmp
mov
push
mov
pop
cs
into
cltd
jno
lret
dec
push
pop
lods
test
cmp
or
jge
push
xchg
cltd
pop
dec
lods
insb
sub
push
xchg
push
hlt
les
ror
xchg
pusha
loopne
sub
and
pop
mov
jo
push
or
in
mov
add
sub
mov
je
dec
repz
in
std
jae
int3
cmpsb
mov
and
cmp
inc
stc
pop
fwait
inc
jle
cmpsl
es
movsb
clc
cmp
jns
lret
out
sahf
cmp
push
dec
repnz
jno
pop
inc
and
aam
int3
mov
andb
leave
pusha
sbb
jl
sbb
cld
sbb
test
arpl
ljmp
cwtl
cmc
pop
test
adc
mov
inc
fcompl
test
jecxz
mov
add
in
in
mov
jno
fwait
loopne
and
mov
xor
inc
out
add
inc
int
and
cld
xor
adc
loop
leave
testb
push
mov
pop
jp
push
pop
pop
in
pop
fwait
roll
add
cli
push
dec
mov
fbstp
in
jae
pop
inc
or
jbe
fdivl
cmp
inc
sub
jb
inc
fadd
sbb
imulb
cmp
icebp
mov
das
dec
xchg
sbb
mov
dec
cmpsl
mov
mov
rclb
mov
stos
mov
fs
lods
push
lret
jmp
cmp
sbb
sbb
mov
aas
test
mov
jb
inc
mov
mov
cmp
mov
push
repz
xor
sub
int
or
xchg
repz
push
mov
mov
mov
into
inc
xchg
xchg
loopne
jl
or
lret
sbb
push
loopne
dec
shlb
ss
scas
sti
repnz
mov
mov
std
add
mov
dec
pusha
dec
pop
xor
jb
sti
cs
js
and
mov
inc
lcall
lods
loop
xchg
cmp
aas
pop
xlat
popa
jmp
outsb
or
or
sarb
lea
add
fstl
mov
dec
rorl
fldcw
cmpsl
jne
dec
call
adc
jns
push
sbb
and
jge
mov
inc
sti
adc
arpl
push
xchg
sbb
pushf
lea
dec
ret
dec
das
cmpsb
jo
sub
js
testb
ficoms
mov
ret
push
mov
arpl
aad
lods
sbb
stc
cmp
jl
mov
lret
cmp
pushf
lret
jp
mov
movsb
pop
lcall
outsl
inc
cmp
dec
cmp
loope
add
pop
jns
push
adc
mov
or
xchg
pop
insb
jbe
aam
or
dec
xlat
xchg
lods
push
sbbl
xor
sbb
pop
mov
mov
inc
cwtl
add
dec
xor
sub
shr
mov
inc
jnp
lods
int3
js
mov
xor
adc
jne
cltd
std
mov
insl
mov
xor
scas
cmpsb
mov
mov
jl
ljmp
lock
subl
adc
lcall
inc
fbstp
dec
fstl
add
in
fistl
outsb
imul
in
or
fwait
das
stc
test
xor
xchg
lods
out
inc
jge
sub
sub
sarl
push
jg
ds
or
out
repnz
das
aaa
sbb
mov
or
jo
push
fdivs
cmp
dec
jge,pt
cltd
test
sbb
push
fcompl
xor
dec
pop
jle
fsubrs
xor
rorl
pop
cli
fimuls
dec
loope
clc
jo
dec
and
jnp
mov
out
dec
aam
jle
fstpl
jbe
cmpsb
ds
enter
lea
mov
test
inc
push
xlat
cmpsb
xor
popf
mov
mov
xchg
std
ret
int3
xchg
aam
push
and
out
fsts
adc
test
cmp
lahf
cmp
xor
dec
imul
sbb
shll
cli
dec
in
rcrb
mov
adc
test
cltd
add
bound
insl
fwait
mul
xchg
push
mov
jmp
fnstsw
add
sbb
sub
lods
push
sub
leave
push
leave
fsubrl
sahf
jbe
cmp
incl
icebp
jne
pop
in
cmpl
test
or
push
outsb
pop
mov
clc
xchg
push
or
and
call
sub
cs
in
cs
jmp
negb
lods
mov
repnz
je
testl
or
push
das
jb
ja
dec
aam
mov
add
mov
inc
fsubrs
cmp
adc
movsl
or
sbb
sarb
test
nop
fwait
push
or
movsb
icebp
aaa
jecxz
lret
lods
outsb
clc
sar
mov
dec
addb
add
xor
mov
mov
ret
cld
jp
xchg
adc
or
repnz
sub
mov
mov
stos
ret
cmpsl
or
or
xor
sbbl
add
pop
nop
popf
int
ljmp
insl
xchg
push
adc
mov
add
fcomip
jns
adc
sbb
hlt
daa
nopl
fwait
stc
insl
adc
rorl
sarb
mov
test
mov
sub
loop
xor
or
push
adc
xor
push
ss
pusha
mov
lahf
xor
out
mov
pop
ss
pop
pop
call
repnz
adc
stos
jnp
inc
jle
insl
mov
inc
cmp
push
add
into
lcall
inc
gs
out
aam
sub
lcall
mov
test
sub
dec
mov
jno
aad
popa
sbb
pop
divb
in
dec
cld
pop
inc
jae
xchg
test
pop
jge
xor
test
mov
sti
push
rorl
test
push
mov
sbb
sub
lods
leave
fcompl
fistpl
xchg
out
gs
mov
loope
cmpsl
aas
xchg
sub
pop
imul
addr16
xchg
andl
xor
stc
ret
adc
mov
mov
fistps
push
sub
pop
sarl
adc
push
out
test
sarl
xor
gs
pop
adc
sub
icebp
mov
cltd
mov
mov
in
int
fimuls
or
sar
mov
xor
outsb
fiaddl
pushf
test
cltd
mov
fwait
push
add
push
cld
sbb
test
lods
negb
jo
cmp
dec
push
je
clc
pop
or
xor
and
mov
mov
movsb
xor
push
lods
jo
pop
out
lods
xor
in
jmp
xchg
addr16
subb
dec
fwait
xor
stc
xchg
push
loop
push
popa
rorl
fsubp
push
lea
xchg
popa
fdivl
jg
pop
mov
fidivrs
dec
inc
pop
push
xchg
pop
cmpsl
scas
bnd
add
xchg
jo
fsubl
mov
sub
aaa
push
hlt
scas
inc
xchg
inc
mov
imul
jbe
lods
aam
vmovss
adc
xchg
xchg
aad
cmpl
mov
stc
popf
and
imul
dec
push
sbb
in
iret
mov
and
sbb
sbb
push
mov
xchg
cli
xor
pop
pop
rolb
ljmp
test
insl
aam
mov
scas
push
xchg
xor
pop
test
out
xor
not
cmp
xchg
adc
fs
aaa
out
sbbl
cwtl
jmp
pop
lea
test
daa
cwtl
mov
movsb
in
pop
jge
incb
pop
cwtl
mov
adc
dec
adc
scas
pop
dec
out
cmc
sahf
mov
push
adc
xchg
sbb
push
jp
rcrl
in
mov
jmp
aad
aam
add
sub
adc
arpl
mov
jl
imull
sarb
xchg
js
xor
mov
fneni(8087
pop
mov
push
mov
jge
jmp
inc
mov
xor
rcl
inc
mov
cmp
test
cmc
loope
mov
loopne
data16
xchg
ja
lods
outsl
enter
mov
test
pop
in
imul
xchg
outsl
inc
xor
popa
pop
xor
add
jae
add
loop
xchg
int
outsb
xchg
addr16
outsl
cmp
sahf
sbb
mov
icebp
cwtl
pop
pop
gs
xlat
imul
sbb
push
cmpsb
mov
sbb
dec
xchg
xchg
dec
fildl
in
xchg
jne
testb
push
xor
mov
push
movb
or
jns
pop
shl
cmpsl
dec
push
fcmovbe
lods
sahf
in
jecxz
pusha
push
daa
xchg
sbb
add
fildl
xor
add
add
mov
pop
cmp
sub
inc
mov
loope
cmp
lret
jmp
push
sbb
out
sbb
daa
cltd
in
cmp
lahf
scas
jnp
mov
outsl
xchg
shrl
jo
and
push
push
adc
mov
ret
iret
test
sub
mov
jo
adc
out
rolb
mul
xchg
scas
mov
test
push
sub
xor
pop
inc
mov
sarl
mov
xlat
inc
imul
mov
xchg
jnp
pusha
in
pop
stos
fnstenv
push
xor
inc
mov
rcll
ja
mov
lock
mov
lret
outsl
add
fistpll
sbb
mov
sub
mov
and
data16
int3
or
inc
and
jg
cmpsb
ficomps
in
mov
mov
dec
cmpsb
xchg
pop
or
add
scas
add
xor
mov
jmp
inc
xor
pop
repz
inc
push
lcall
loope
push
pop
lods
xor
rcll
cs
pop
pop
mov
push
sbbb
push
in
nop
lahf
inc
lahf
nop
sub
mov
xor
cwtl
cmp
mov
add
jecxz
scas
out
call
hlt
ljmp
arpl
sbb
fldcw
shl
push
rorl
push
fmuls
or
xchg
pop
decl
clc
test
ja,pt
xchg
iret
jle
sbb
pop
orb
mov
dec
ljmp
dec
jle
shl
inc
xchg
xchg
or
cwtl
sbb
stos
test
fists
push
mov
je
fidivrs
inc
or
mov
sub
xchg
ds
mov
cltd
cmc
insl
lds
lods
loopne
push
add
pushf
das
out
and
xchg
sub
xor
cs
push
jns
ja
and
sub
cld
fistpll
test
test
es
adc
std
inc
push
dec
sbb
sbb
push
sub
data16
mov
nop
mov
testl
cmc
add
jbe
cmp
icebp
dec
xchg
loop
sbb
rclb
lret
mov
jl
lock
xor
addl
stc
inc
and
mov
js
fsub
cmpsl
scas
push
xchg
pop
cld
cmp
fucomip
dec
gs
mov
mov
push
cld
mov
cmpsb
cmp
roll
out
testl
pop
lds
jl
and
cltd
mov
add
pop
mov
fsub
mov
mov
in
and
add
nop
mov
stc
mov
outsl
sbb
xchg
xor
mov
xlat
lahf
jne
cmp
and
mov
sub
sub
mov
xorl
or
mov
fs
dec
adc
insl
imul
push
add
gs
imul
dec
jecxz
std
dec
hlt
test
inc
jb
jnp
sub
sti
fnstenv
std
jg
adc
scas
push
xor
cmpsl
add
movsb
xor
mov
xchg
or
jmp
inc
cmpsb
dec
cltd
fisttpll
xchg
movsl
cmpsb
rcl
mov
push
mov
xor
gs
clc
leave
push
cld
bound
mov
rorl
repz
rolb
lods
jne
lods
mov
cmp
fmuls
scas
xchg
aad
jecxz
sbb
adc
negl
bound
insl
adc
jmp
cmp
mov
sub
jne
bnd
jns
and
mov
or
cmc
stos
sbb
out
std
pop
mov
mov
sub
loop
je
popa
lcall
inc
stos
pusha
dec
or
mov
out
scas
dec
jnp
insl
jbe
mov
or
inc
mov
movsb
stos
mov
xor
pop
xchg
push
pusha
divl
add
dec
out
loope
or
xchg
mov
iret
fcomps
mov
mov
xchg
repz
push
repnz
mov
pop
xchg
fidivs
imul
sbb
cmp
cwtl
adc
sub
xchg
mov
fs
adc
pop
mov
gs
dec
adc
cmc
pop
ds
mov
xorl
push
xorb
lret
mov
sbb
or
scas
jno
xor
test
xchg
push
idivl
mov
adc
sbb
int
cs
sub
dec
ficoml
aad
into
repnz
xchg
sub
mov
mov
push
xlat
pop
mov
popf
xchg
cld
pushf
daa
add
adc
out
fs
jns
data16
mov
ret
les
dec
bound
movsb
xor
icebp
sbb
mov
or
aad
ds
push
imul
movsb
push
sbb
js
jmp
push
xchg
mov
sub
jb
add
fwait
mov
cltd
xchg
push
pop
lds
sbb
inc
mov
fadds
aad
mov
jbe
cmp
inc
jb
jmp
mov
ljmp
stc
mov
and
ud2
out
cmp
jle
pop
and
mov
add
loop
stos
stc
push
dec
stos
jge
sbb
sti
ret
shll
push
outsb
mov
jno
xor
fisubs
fwait
repnz
xchg
and
xchg
cli
dec
xor
aaa
jle
aad
cmp
fstpl
stos
dec
pop
aaa
push
cltd
adc
or
ljmp
lds
cli
pop
flds
nop
mov
mov
inc
int
test
mov
data16
popa
sub
push
enter
pop
mov
pop
ret
stc
xor
cltd
cmc
or
sar
dec
lcall
mov
rcrb
jmp
pop
dec
js
sbb
cli
sub
test
sahf
pop
xlat
mov
mov
sahf
add
pop
push
and
scas
jo
mov
int
mov
and
mov
adc
sbb
rcll
stos
add
sub
jbe
shlb
xchg
ficompl
push
jmp
or
jle
mov
cmp
push
xchg
notl
or
xchg
iret
test
ret
mov
pop
arpl
mov
xchg
ljmp
add
jmp
add
iret
sub
jecxz
lods
and
pop
mov
cmp
xchg
jle
daa
xor
sbb
dec
test
push
popf
les
push
cmp
dec
or
mov
incl
mov
xchg
lods
pop
mov
or
mov
test
cmc
jnp
addr16
enter
dec
xchg
aas
adc
mov
jge
sbb
mov
dec
push
in
xchg
aaa
push
jp
lcall
sub
mov
test
lods
and
mov
jp
data16
dec
xlat
add
sub
pop
jle
fwait
pop
dec
push
clc
and
push
jecxz
call
mov
scas
jp
add
pop
mov
aaa
scas
jnp
adc
push
add
sbb
and
add
fwait
das
adc
pushf
dec
repz
daa
shlb
daa
insb
mov
imul
pushf
sub
pop
mov
test
insb
pop
fstpt
dec
or
ret
inc
shl
and
mov
rcrl
fistps
leave
repnz
mov
repz
mov
dec
or
into
clc
gs
jge
push
xchg
mov
mov
and
cli
loop
scas
pop
dec
cli
jno
push
enter
fcom
mov
push
insb
mov
push
fwait
mov
sbb
shlb
adc
aas
pop
push
sub
das
dec
mov
sarb
push
pushf
leave
imul
scas
repnz
adc
mov
out
rcrb
pop
ret
inc
adc
or
repnz
and
adc
loope
and
mov
mov
hlt
mov
mov
rcll
jg
dec
sarl
jg
mov
pause
and
scas
je
push
popf
sahf
stos
inc
jmp
divl
adc
xor
jmp
mov
push
dec
mov
mulb
xchg
call
enter
je
add
push
adcl
je
jno
lret
mov
lds
xor
adc
std
pushf
es
shrl
mov
inc
mov
mov
or
adc
cmp
movsb
jo
int
shr
cmp
jbe
enter
mov
xor
mov
or
cld
jp
fnsave
inc
imul
mov
repz
mov
pop
sub
add
in
ret
jle
push
mov
jg
xchg
push
icebp
mov
lds
addb
adc
sub
inc
jl
fwait
icebp
pop
sbb
sahf
sbb
mov
mov
mov
in
xor
push
ljmp
or
pop
xor
jb
cmpsl
stos
mov
and
xchg
xor
inc
fstl
fistpll
and
xchg
dec
xchg
dec
and
or
sbb
add
out
or
jmp
cmpsb
sysenter
fcompl
or
mov
and
lret
lea
jmp
mov
cmpsl
sbb
mov
shll
leave
ret
out
mov
sub
or
das
mov
dec
pop
mov
add
mov
and
add
and
movsl
mov
or
inc
mov
pop
xor
mov
and
mov
inc
and
push
cmp
pusha
sub
dec
xlat
dec
cmp
mov
rcll
jns
cmc
cmp
inc
es
sub
push
rclb
cmp
adc
movsl
sub
or
fildl
insl
ret
hlt
sbb
pop
test
loopne
imul
fisubrl
sub
dec
shrl
xchg
pop
cmp
loope
or
nop
add
sbb
jp
inc
xchg
add
sti
aam
cmp
lods
push
sbb
jae
les
fistl
cs
mov
push
fxch
push
js
insb
in
jp
imul
out
pop
add
mov
scas
lea
ljmp
jo
mov
das
mov
movsb
cmp
flds
sub
xor
in
mov
cmpsl
sub
mov
jae
imul
scas
pop
outsl
inc
pushf
jmp
arpl
rcrl
fcoml
sub
es
push
or
mov
add
repnz
or
scas
out
push
or
mov
ret
lods
cmp
jnp
mov
jp
into
xchg
and
lahf
cmp
ficompl
fwait
inc
jne
mov
popa
adc
pusha
cmp
xchg
sbb
mov
xchg
pop
mov
dec
aad
int
cmpsl
push
xor
push
mov
dec
jp
cwtl
test
scas
faddp
sbb
cmc
xor
dec
scas
aas
js
std
jecxz
add
aaa
mov
sbb
ds
mov
or
pop
pushl
jecxz
lret
stos
lock
ss
mov
mov
sar
fdivp
data16
xchg
sbb
movsl
jle
inc
push
ret
cmp
pop
outsb
imul
test
dec
in
mov
sub
push
js
inc
add
mov
inc
xorb
outsl
mov
mov
call
push
testb
push
jmp
lcall
push
cmpsl
adc
dec
xchg
aam
les
push
ss
fwait
not
jae
jne
cs
fisubrs
imul
sub
arpl
fsubp
outsl
ret
lahf
repnz
ret
rcr
scas
pushf
sub
lcall
xor
outsl
repnz
inc
sarl
outsl
pop
test
outsl
or
out
push
leave
addr16
movsb
das
iret
xchg
or
loope
arpl
rdtsc
mov
sub
aam
cmp
in
outsb
pop
xchg
movsb
mov
jmp
mov
push
inc
cmp
mov
adcl
jecxz
cmpsb
jl
stc
lds
mov
jle
pop
xor
dec
xor
nop
mov
js
icebp
sub
mov
mov
xor
sbb
push
sub
mov
pop
jmp
test
xorb
std
call
sbb
jmp
dec
and
pop
inc
push
pusha
mov
aad
pop
xor
in
int
mov
mov
add
add
dec
inc
gs
gs
call
aad
mov
or
mov
inc
or
xchg
xchg
pushf
pop
adc
ss
pop
push
dec
fwait
scas
insl
add
push
jecxz
orl
cmc
fdivl
pusha
scas
lock
add
sbb
fcoms
xchg
pop
jnp
test
mov
out
lds
dec
movsb
mov
cmp
fidivrl
xor
sub
scas
xor
cld
sarl
fbstp
mov
adc
mov
loope
mov
fs
jg
inc
add
jecxz
mov
mov
fisttps
call
mov
insb
lahf
cli
scas
inc
xchg
imul
push
jnp
xchg
mov
rolb
es
scas
sub
and
add
aam
and
les
mov
daa
mov
pop
inc
adc
xchg
mov
inc
mov
mov
andb
add
or
sarb
jbe
push
or
sub
mov
sbb
outsb
add
mov
jnp
and
out
stc
adc
mov
imul
pushf
shl
js
xchg
aaa
ret
test
push
mov
out
ljmp
aaa
lea
adc
nop
repz
sub
dec
jecxz
push
pop
mov
jle
add
sti
stc
inc
pop
fcomi
mov
ret
hlt
mov
repz
in
jecxz
lds
pop
sbb
test
xchg
adc
push
and
push
jle
or
pop
popf
in
mov
imul
pop
sbb
fiaddl
imul
sbb
je
and
enter
adc
ret
cmp
and
adc
cmp
and
test
push
xchg
in
mov
push
pop
xchg
pusha
divl
adcb
mov
mov
scas
inc
sbb
sarb
mov
andb
mov
inc
jns
xchg
cli
je
popa
mov
pusha
repz
ret
cs
push
subb
push
cmp
jge
sub
imul
nop
sbb
int
xor
mov
add
fiaddl
mov
jecxz
testb
jbe
sub
and
add
pop
mov
jmp
dec
mov
rolb
cmp
out
push
clc
shl
xor
adc
lods
jo
lods
cli
imul
vprotb
and
aam
fucomi
cmp
mov
pop
push
jle
dec
and
push
mov
sahf
cmpsb
dec
in
or
mov
xchg
mulb
or
leave
dec
in
out
sti
dec
insl
push
out
xchg
sub
ffreep
fwait
add
insl
and
cltd
out
or
mov
mov
mov
pop
lea
cmpsb
sub
daa
lret
popa
adc
mov
shll
pop
or
cmp
insb
outsl
movsl
lret
iret
fdivrs
outsb
add
push
loop
mov
mov
push
mov
fdivs
mov
loopne
mov
pop
pop
xor
mov
js
adc
iret
mov
dec
iret
jns
mov
fwait
push
ds
fdivl
aaa
ljmp
movsb
call
pop
rorl
addr16
shrb
mov
xor
or
clc
mov
and
lods
mov
pop
fcomps
sbb
pushf
inc
sbb
out
lcall
and
dec
jno
push
push
loope
mov
loopne
push
adc
sbb
nop
dec
pop
adc
jle
ja
sub
xchg
sti
adc
sbb
push
movsl
jb
inc
loop
andl
movsl
add
jnp
ss
cmp
leave
sub
dec
dec
dec
lods
test
leave
cmp
fnstsw
ja
mov
push
cli
fsubrl
cmp
mov
sub
pop
or
cmp
xchg
cmpsb
clc
in
mov
lds
and
sbb
mov
pusha
pop
rorl
mov
mov
ds
push
pop
sub
dec
cmp
mov
or
and
ljmp
clc
ret
addb
enter
cltd
iret
std
cmp
push
in
cmpsb
cmpsb
ljmp
stos
aam
lret
fcmove
fildll
adc
jo
sarb
inc
or
sbb
push
call
lea
je
push
xlat
jne
mov
push
mov
mov
aas
ret
pop
inc
push
xchg
ljmp
fistpll
in
arpl
es
xchg
call
pop
dec
out
sarb
jbe
stc
mov
sarl
movsl
sbb
mov
sub
mul
outsb
xor
bnd
js
popfw
jbe
mov
imul
push
inc
imul
pop
ss
flds
xor
in
adc
xor
mov
xchg
scas
in
das
lcall
adc
aaa
xor
dec
fidivrs
shrb
out
sbb
out
or
cs
push
sbb
adc
popa
cmp
jp
cmpsl
lds
insb
ds
mov
sub
adc
stos
loopne
mov
jnp
ficomps
jmp
in
test
fcmovu
mov
dec
pop
mov
and
addr16
xchg
cwtl
fistps
mov
cli
dec
sti
das
cltd
mov
aad
push
les
fistpl
push
leave
xchg
adc
sub
mov
stc
lahf
jg
pop
jg
lret
or
in
scas
adc
subl
jg
add
and
pop
inc
xchg
push
sarb
xchg
or
push
gs
sub
and
popf
ja
out
nop
add
cmpsb
xor
pushf
popa
repz
xchg
jno
int
lock
cwtl
jns
push
dec
les
and
jl
loopne
or
fidivs
and
cmp
xor
sbb
jmp
outsb
lret
mov
jb
movl
add
push
repnz
xor
push
add
repz
sbb
sub
and
sbb
sbb
cli
rep
sarb
xchg
mov
lea
vhsubps
sub
ret
xchg
leave
push
mov
int
cltd
loopne
dec
sbb
pop
faddp
lret
pop
repz
enter
lock
les
push
jg
cld
outsb
adc
lahf
leave
lahf
inc
shll
std
es
clc
lea
mov
enter
in
xor
arpl
push
push
mov
xchg
clc
dec
and
dec
shrl
mov
aaa
stos
into
dec
ljmp
je
mov
decb
call
mov
scas
cli
mov
loopne
sbb
rcll
push
cmp
and
mov
popa
mov
out
loopne
cwtl
or
sub
mov
xchg
or
jne
mov
push
lcall
dec
pop
cmpsb
pop
push
xor
icebp
es
or
je
inc
or
sub
mov
fucom
jmp
xchg
cmpsb
popa
inc
add
push
dec
fucomi
adc
in
sub
ret
ret
inc
and
xor
insl
cli
sub
ficompl
das
sub
push
testl
push
cmp
adc
ret
mov
ret
cmp
mov
mov
rolb
cmp
notb
adc
aaa
fisttps
mov
xchg
loopne
lcall
popf
pop
sbb
dec
jmp
sub
std
inc
mov
and
sbb
setno
sub
xorb
js
xchg
sbb
je
sub
insb
cmp
push
pop
mov
cmp
sub
mov
xor
mov
stos
xchg
push
pop
cmpsl
sbb
pusha
gs
jle
scas
sub
aad
sbb
pop
xchg
mov
lea
push
frstor
or
fadd
xor
push
ret
or
cmp
cld
out
into
jno
push
dec
movsl
push
movsl
in
pop
adc
in
pushf
aaa
sub
dec
outsl
sbbb
adc
sub
pusha
and
mov
sti
orb
mov
lods
cmp
mov
int
dec
cmp
cmp
pop
daa
cmc
mov
adc
cmp
push
sub
es
dec
xchg
or
mov
daa
cmp
iret
jnp
lods
stc
fsin
inc
pop
into
mov
ss
cmp
stos
sti
test
sbb
adc
std
icebp
push
sub
lret
cmp
add
dec
xchg
mov
sbb
cld
lods
leave
sub
cmp
adc
test
shlb
scas
inc
pop
call
fbld
cmp
xchg
bound
xor
jecxz
scas
push
pop
mov
mov
jg
add
out
mov
inc
nop
pushf
push
fmuls
push
pushf
cmc
sub
fisttpll
mov
fcoms
leave
mov
and
outsb
xor
popa
and
sbb
jg
hlt
and
sub
out
mov
xor
cmc
cli
push
dec
push
fimull
cmp
mov
push
scas
mov
mov
jl
inc
int
sahf
fstl
cmp
sbb
mov
std
sti
inc
sahf
push
arpl
loop
cmpsb
xlat
pop
test
adc
inc
movsl
in
push
imul
mov
lret
icebp
ret
outsb
jb
stos
shlb
stos
cmpsb
ljmp
ja
into
mov
andl
sar
xor
jg
scas
and
rcrb
fucom
xor
mov
push
mov
jl
cmp
call
pop
aaa
rcl
sub
xor
in
int
mov
popf
cld
adc
inc
jo
mov
jg
xchg
sbb
mov
test
sub
dec
cmp
push
in
int
movsb
dec
lret
adc
fisttpll
jg
xchg
out
sti
iret
movsb
into
pop
mov
std
xchg
mov
sbb
push
mov
flds
bnd
fsqrt
jnp
call
push
mov
xchg
pop
mov
les
cltd
lods
test
or
mov
cs
inc
mov
jge
int
fildll
xchg
nop
add
xchg
setbe
aas
mov
das
in
outsb
lock
adc
sub
into
nop
fistpll
test
mov
xchg
scas
xchg
hlt
or
push
nop
add
sub
clc
out
push
xchg
cmp
fidivl
dec
xor
xchg
xchg
xchg
mov
shlb
in
out
fdivl
clc
stos
decl
in
in
jle
push
ficomps
sub
push
enter
stos
fld1
movsb
xchg
sbb
ljmp
stos
int3
mov
push
mov
dec
xorl
xchg
inc
leave
push
and
xchg
outsl
int
dec
push
jecxz
jle
fwait
scas
pop
jmp
and
dec
mov
xchg
mov
fistps
push
cmp
rorb
or
or
or
repnz
mov
xor
out
pop
mov
xor
idivl
int
outsl
movsl
mov
pop
ss
jbe
mov
dec
in
or
mov
dec
pop
jae
sbb
and
sub
mov
sbb
sbb
add
jl
sbb
pop
or
jb
sti
or
aas
lods
insl
scas
fs
mov
sub
aam
jmp
stos
cmp
xchg
jp
leave
jmp
mov
nop
loop
push
mov
fsts
and
jbe
lahf
loopne
xor
lahf
in
inc
sbb
dec
xchg
pop
xchg
outsb
xchg
add
push
xchg
aaa
or
stc
lods
pop
mov
lods
ret
lods
call
add
mov
sbb
outsb
out
xchg
pushf
std
cmp
sar
push
xchg
cmp
cmpb
mov
add
dec
dec
popf
push
add
jo
fwait
gs
cmp
sahf
test
ja
add
out
pop
xor
lret
dec
mov
bound
out
cmc
call
je
adc
pop
pop
adc
fldl
sbb
ficoml
xchg
mov
stos
mov
sbb
jge
mov
mov
xchg
lds
test
jge
js
lods
push
xor
shrb
es
cmpsl
pop
les
sbb
mov
push
xor
sbb
pop
and
pop
xchg
push
pop
mov
jmp
pusha
xor
xchg
loop
xchg
in
ja
repz
lret
adc
call
xor
std
mov
lea
inc
cmp
sbb
lcall
aam
mov
in
mov
into
ds
scas
lcall
and
cmpsb
mov
popf
inc
adc
pusha
inc
sbb
fcoms
fs
or
xlat
sub
adc
xor
xchg
shrl
dec
and
mov
fimuls
dec
mov
daa
jnp,pt
in
cmp
jns
xchg
adc
cmpsl
addb
mov
and
add
lret
insl
jo
pop
or
xlat
jbe
repz
sub
ret
jmp
jne
cmp
fsub
loope
in
test
shlb
mov
lods
fidivl
ljmp
jbe
arpl
fldl
repnz
mov
xor
push
cmpsl
cmpsl
or
mov
add
nop
popa
mov
push
sbb
fcomi
jae
inc
cwtl
lahf
bound
lret
push
or
jns
cmp
fcomps
xchg
fs
scas
cld
scas
mov
icebp
adc
sub
push
and
int
popa
add
cmp
inc
sub
jp
repz
mov
rorl
in
stos
in
inc
leave
movsl
mov
push
lahf
mov
add
sub
cmp
arpl
mov
xchg
lock
push
test
or
mov
mov
inc
aam
sbb
cli
test
cmc
cmp
mov
add
nop
add
enter
ss
mov
int
mov
ljmp
sbb
adc
fildl
jbe
fistl
and
and
push
enter
push
pop
pop
mov
clc
pop
fs
jmp
mov
stos
inc
mov
outsb
test
icebp
cmp
test
push
mov
mov
loopne
pop
mov
push
xchg
add
xorl
arpl
cltd
sub
popa
xor
out
and
push
inc
shll
mov
mov
in
adc
jl
test
ja
lds
or
mov
out
sahf
ljmp
pop
lcall
rorb
mov
cmp
push
sub
pop
or
xorb
push
push
sti
mov
repnz
or
test
ret
push
ficoml
scas
cmc
pop
dec
xor
or
pop
fbld
call
sub
add
fcomps
push
and
je
fisttpll
xchg
jno
ret
mov
ljmp
or
loopne
nop
add
stc
outsl
test
cwtl
daa
jnp
sbb
mov
into
outsb
out
sub
sub
test
fcmovb
ror
adc
and
xor
jnp
insb
mov
fcomp
insl
jecxz
sbb
jns
jbe
clc
rcr
sbb
movsb
ds
outsl
je
dec
aam
and
jle
and
push
pusha
mov
add
push
jmp
cli
andb
mov
in
mov
loope
xor
mov
insb
jge
push
enter
lcall
rolb
jno
ror
scas
pop
inc
movsb
int
in
sahf
int
fwait
push
iret
dec
push
jecxz
sbbb
fisubs
ret
cld
xchg
inc
inc
push
aaa
jp
arpl
inc
mov
sub
push
adc
test
fcom
imul
lods
outsl
dec
jle
sar
mov
adc
fstps
cmp
cmp
sbb
int3
scas
ret
fnsave
bound
loop
and
out
push
jmp
testl
mov
dec
adc
sub
xchg
insb
xor
lock
cmp
cmp
xor
pushf
add
cmp
dec
cmp
or
gs
pop
xchg
adc
push
ss
insb
pop
xchg
inc
push
push
inc
xorb
cltd
clc
xchg
aam
test
xchg
pop
cwtl
mov
mov
jg
notb
cmp
push
in
fsub
enter
decb
xor
imul
push
push
adcl
enter
std
mov
test
popf
lods
mov
cmpsl
inc
mov
push
pop
pop
popf
mov
in
cmp
std
fsubs
push
cli
or
je
loope
cs
leave
aad
and
jb
add
add
das
inc
pop
mov
in
fcom
fdivrs
leave
jg
add
xchg
xcrypt-cfb
cmpsl
and
jmp
and
xchg
adc
mov
sub
sub
outsb
aas
fcmove
divb
push
aad
mov
adc
xor
fwait
xchg
ffreep
add
pop
or
push
xor
mov
sbb
mov
mov
jg
sub
mov
jmp
roll
pop
repnz
push
out
and
rolb
jnp
or
test
js
hlt
push
icebp
mov
add
xor
mov
xchg
aam
cmc
xchg
repnz
add
xor
adc
mov
iret
sub
es
dec
int
dec
sub
sbb
out
dec
rcrb
mov
popf
mov
push
sahf
jno
inc
xchg
cmpb
mov
dec
push
pop
cld
cmp
jbe
mov
icebp
das
or
lret
fistpll
mov
iret
adc
dec
xchg
test
dec
aam
daa
mov
out
jecxz
sub
dec
xchg
cmp
ret
jne
or
arpl
imul
cmpsl
decb
repnz
mov
ret
inc
fs
add
mov
push
das
sbb
lahf
pop
inc
lods
jg
int3
ret
ret
enter
cwtl
or
int3
fmull
cmp
mov
push
xchg
push
sahf
scas
outsl
out
sub
icebp
dec
insl
leave
mov
push
add
rcr
ficoms
gs
lods
mov
sbbb
lods
insl
decb
ja
mov
push
push
insb
fcomps
scas
out
movsb
and
test
rcrl
sub
int
dec
cld
dec
pop
sub
push
dec
push
lods
jecxz
pop
pop
adc
cmp
cmpsb
fwait
inc
mov
push
pop
add
xchg
mov
jl
ret
cmc
lret
aam
xchg
in
jecxz
mov
lahf
adc
in
stc
mov
in
enter
push
or
push
mov
mov
into
xor
push
jns
or
and
mov
cmc
out
icebp
rolb
iret
cmp
test
imul
jmp
repz
jmp
jae
inc
mov
push
aam
jecxz
dec
ret
and
mov
dec
push
mov
sarb
loopne
pop
inc
or
stos
fdiv
xorb
jb
ja
cld
in
push
cmp
ds
int
xchg
and
je
enter
adc
inc
sbb
mov
and
ds
iret
decb
test
stos
aad
sbb
xchg
fiaddl
fists
aam
adc
lcall
adc
sbb
sub
dec
lods
lret
push
sub
cs
xorl
bound
pop
int3
lods
mulb
stc
sub
test
mov
pop
inc
mov
jmp
bound
xor
and
dec
or
xor
xchg
leave
gs
cmp
ss
inc
cmpsb
jo
lods
mov
xchg
lods
outsb
sbb
jb
sbb
pop
int3
fsubrp
dec
mov
lods
fdivp
cmp
ljmp
sbb
xchg
outsl
faddp
shrl
enter
and
inc
xor
adc
out
adc
jne
mov
pop
or
iret
dec
adc
mov
xor
sub
lret
xchg
mov
mov
cmp
iret
scas
int
fcoms
push
or
cld
mov
jg
jp
jne
lods
loope
mov
shr
jae
jne
jae
mov
cmp
outsb
add
fisubl
inc
jg
test
and
and
test
inc
cld
cmp
nop
ds
push
mov
push
mov
subb
cmpsl
xchg
push
loop
push
mov
ljmp
shl
mov
scas
push
addr16
pop
in
popf
adc
idivl
cmp
hlt
cmp
pop
or
dec
loopne
ret
stos
cmc
and
loop
mov
dec
jae
and
push
dec
mov
ror
or
insl
pop
jmp
popf
sar
nop
fistpll
sti
dec
dec
icebp
sub
je
test
mov
imul
js
dec
jcxz
sahf
test
in
rcl
cmp
add
mov
nop
ret
push
out
fadd
int3
imul
jle
cmpsb
popf
or
jne
in
in
sbb
loope
fwait
mov
lods
leave
ds
test
mov
push
pop
or
dec
add
imull
cli
je
cld
dec
dec
popa
xor
sbb
lods
mov
lods
or
es
push
jno
aas
faddl
daa
add
push
and
mov
pop
dec
adc
shll
push
std
mov
xor
into
pop
add
pop
push
repnz
push
lock
cmpsb
mov
and
leave
inc
fnstenv
jg
ljmp
mov
loopne
enter
jecxz
ficoms
das
mov
ret
push
leave
pop
ss
aaa
andb
or
xchg
sub
xchg
or
mov
push
int3
enter
dec
es
push
in
subl
push
daa
insl
lcall
pop
lahf
mov
jle
lea
aas
mov
jo
fbld
les
add
cmp
sub
frstor
imul
jle
pop
xchg
dec
add
mov
not
jl
rolb
bound
xchg
roll
les
movsb
daa
dec
cmp
push
imul
inc
test
stc
imul
or
out
pop
pusha
cmp
sysret
inc
lcall
std
mov
mov
cmc
lret
cmp
rorl
shll
lcall
loop
std
jl
sub
add
xchg
vmread
test
or
mov
sbb
das
add
mov
dec
xor
pop
outsb
and
jbe
sarl
out
scas
inc
or
inc
rcrl
sbb
sub
gs
loope
out
clc
xchg
scas
pushf
xlat
push
mov
ljmp
and
sahf
mov
adc
mov
jno
mov
rclb
cmp
cmp
int
nop
imul
test
sub
and
cltd
stos
jne
aaa
xchg
mov
aam
outsb
sbb
xchg
add
push
xchg
jl
pop
xchg
dec
ss
mov
mov
stos
or
popa
mov
mov
mov
repz
idiv
mov
pop
pop
jmp
push
mov
adc
das
stc
mov
mov
add
push
cmpsb
sbb
lds
sti
push
mov
das
xor
dec
add
std
mov
or
jno
adcb
lret
cmp
adc
inc
in
xchg
mov
xor
mov
fsubrs
fwait
mov
cld
dec
push
inc
and
addb
sbb
shr
nop
push
mov
mov
pop
xor
xchg
push
dec
clc
jbe
inc
mov
fdivrs
sahf
jmp
out
jnp
cltd
mov
xchg
xchg
inc
and
stos
lods
cmp
xor
cmpsl
sbb
arpl
loop
and
xchg
fcmovu
mov
cltd
shlb
iret
cmpsb
andl
dec
repz
or
mov
shlb
mov
clc
mov
sub
ds
xor
sbb
and
imul
push
mov
jg
divb
int3
mov
imul
loop
xchg
lahf
sbbl
in
fwait
xchg
stc
sbb
pop
lock
js
mov
out
sti
gs
pop
aas
xor
pop
push
inc
push
push
xor
mov
pushf
aam
fmulp
mov
popf
sbb
or
xor
popa
jo,pt
pop
pop
and
or
add
add
jns
cli
xor
movsb
jmp
push
mov
and
in
push
push
.byte
