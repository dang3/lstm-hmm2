incl
or
and
pop
add
push
adc
add
or
cmpl
or
or
rclb
in
jmp
cmp
add
push
or
loopne
push
xor
and
inc
add
incl
push
inc
adc
sti
mov
std
add
pusha
pop
and
dec
cmp
add
cmp
jge
pusha
and
adc
incl
pop
add
push
mov
incl
sub
pop
sti
add
inc
push
jbe
push
and
adc
nop
pusha
sbb
add
sahf
cmp
pushl
loope
and
cmp
push
addb
nop
or
addb
nop
add
decl
add
adcb
cmp
add
nop
call
imulb
clc
and
add
or
inc
add
adc
pusha
add
cmpb
add
js
mov
mov
cmpsb
and
pop
and
loope
add
jg
xor
and
sbb
pop
inc
nop
sbb
push
push
inc
add
mov
outsb
loopne
incl
adc
push
loopne
add
sbb
add
ljmp
xorb
orl
adc
push
push
cmp
xor
add
stos
push
mov
jg
cli
pop
or
and
sbbb
and
push
add
clc
adc
mov
xchg
push
adc
add
adc
push
sbb
inc
add
adcb
adc
xchg
fiaddl
or
subl
inc
pop
adc
or
sbb
and
sar
nop
add
repnz
mov
add
nop
loope
cmp
mov
sbb
push
push
pusha
push
ret
lds
push
push
and
push
add
movsb
push
pop
jo
lock
loopne
nop
jo
pop
outsb
cmpl
jo
add
push
ret
fmull
adc
jbe
xor
sbb
scas
mov
xor
push
cmp
mov
add
adc
adc
sbb
sbb
pop
outsl
mov
rorb
cmp
addl
fistps
xchg
and
add
sbb
xor
add
loopne
adc
pushf
or
add
add
nop
adc
mov
loopne
dec
test
rcrb
rorb
in
or
pop
push
loope
pushf
nop
push
and
loopne
adc
mov
andb
testb
incl
lods
sub
orb
nop
push
pop
xor
sub
add
adc
cmp
push
shlb
or
xor
push
or
push
cli
add
mov
sbb
rolb
add
arpl
adc
pop
push
and
push
mov
loope
push
jp
data16
or
push
xor
add
and
fdivl
movsb
dec
call
int
ret
or
cmp
cli
pop
cltd
add
xchg
fdivl
loope
push
es
mov
sub
fs
inc
push
inc
add
xor
jo
shl
fimull
test
mov
push
cwtl
sub
push
inc
push
add
movsb
inc
push
rcll
jo
shlb
call
in
and
push
mov
sbb
mov
pop
xor
loope
xchg
or
fsubl
inc
or
cli
dec
out
xor
or
lcall
push
je
roll
inc
xor
mov
adc
push
in
push
pushf
add
int3
pusha
adc
and
aam
sub
cltd
data16
add
push
push
imul
or
or
push
sbb
out
lret
adc
xchg
ljmp
push
push
sbb
mov
clc
push
call
outsb
hlt
shl
xor
sbb
pop
or
dec
mov
adc
or
inc
sbb
dec
add
mov
je
sbb
add
mov
sbb
and
push
push
push
inc
and
sub
push
mov
mov
xchg
mov
loopne
push
adc
call
or
addl
cmpb
fs
sbb
sub
adc
out
movsb
mov
or
jle,pn
mov
add
adc
shrb
push
push
loopne
add
sbb
add
jo
movsb
outsb
fidivrs
or
and
jo
je
lods
adc
push
pusha
out
and
stos
mov
sbb
inc
adc
rolb
xchg
pusha
scas
push
dec
add
push
sbb
jl
add
pusha
push
cmpl
aam
movsb
cs
push
stos
sbb
nop
jb
enter
add
popf
lods
rolb
add
add
xchg
orl
or
js
je
cmp
ss
cs
cmpsb
push
adc
in
or
sbb
adc
in
or
sbb
sbbb
hlt
adc
into
xor
push
test
adc
inc
jp
stos
imul
and
je
mov
xor
add
inc
out
lcall
dec
fs
xor
xor
push
hlt
pop
out
adc
les
adc
adc
cmp
dec
loopne
jb
adc
test
dec
add
push
push
out
into
stos
dec
lods
xor
inc
jo
pushf
shlb
adc
push
insb
lcall
cmpsb
js
fidivrs
mov
and
mov
mov
shlb
or
sbb
pusha
addb
push
push
mov
add
and
cli
add
sbb
addb
sub
into
or
ficoms
push
loopne
adc
mov
ret
xchg
lret
cwtl
in
pop
shlb
add
pop
xor
cmpsb
sbb
and
ret
push
outsb
mov
and
sub
cwtl
movsb
sub
adc
push
add
mov
push
and
into
cli
lret
and
xor
add
xor
lret
jno
sbb
add
outsl
adc
sbb
xor
orb
and
jle
push
pushl
push
pop
or
dec
loope
push
loopne
shrb
sub
loope
jo
mov
or
fsubp
cmpb
push
xor
jle
xchg
fs
sub
and
test
cmp
cmp
push
xchg
adc
dec
je
int3
and
add
sub
mov
xor
andb
push
cmp
or
xor
pusha
ret
inc
push
bound
push
mov
sti
or
out
jl
or
int3
stos
rol
cmpb
aam
loope
nop
xchg
sbb
mov
adc
push
adc
rorb
lret
test
add
call
mov
stos
jo
lret
push
rolb
mov
fcomps
mov
inc
add
mov
cwtl
or
lret
inc
cmc
push
sbbb
nop
xor
add
add
xchg
enter
push
dec
mov
andb
sub
fadds
push
test
pusha
fs
fsubp
push
mov
push
fs
inc
int3
or
inc
loope
aam
mov
andl
add
test
push
xchg
add
push
addb
test
adc
jo
mov
push
xchg
inc
nop
mov
aaa
add
add
add
inc
xchg
test
loope
outsb
push
test
cmp
xor
add
or
fcoms
cwtl
dec
xchg
sbb
inc
and
loopne
subb
loopne
scas
xor
adcl
dec
inc
lcall
add
mov
add
fadd
mov
in
push
mov
add
inc
xchg
inc
mov
les
mov
loop
or
sub
orb
and
mov
and
pop
add
or
push
test
adc
xchg
push
inc
or
in
xlat
test
movsb
adc
or
es
adc
dec
mov
push
shlb
fmuls
add
add
xor
sbb
in
mov
pusha
lods
inc
pusha
dec
push
add
push
orb
mov
or
sbb
cmp
push
mov
dec
mov
lcall
adc
inc
push
loop
ret
mov
push
adc
xor
dec
es
mov
cwtl
or
xchg
mov
decb
mov
repnz
loopne
stos
xchg
mov
lods
movsb
mov
push
pop
push
adcb
xor
inc
fs
inc
xor
push
mov
shlb
and
fadds
inc
cmpl
es
movsl
ficoml
sbb
sub
fsubrs
mov
push
sbb
add
add
push
and
cmp
add
push
cltd
xlat
data16
loopne
or
xor
xchg
sbb
shlb
stos
push
loope
push
push
jo
add
add
subb
and
add
add
addb
dec
mov
xorb
test
sbb
adc
scas
and
or
add
and
pop
mov
fsubl
rclb
shr
and
push
mov
or
jo,pt
in
sbb
inc
mov
inc
add
and
lret
or
pusha
cmpsb
mov
loopne
add
pusha
fisubl
add
push
nop
add
stos
xchg
rclb
and
fs
sarb
mov
pusha
pop
mov
rcll
inc
mov
dec
or
mov
dec
scas
sarb
shlb
add
push
push
or
sahf
sbb
pusha
je
xchg
add
push
xchg
push
es
jle
push
loopne
sub
push
loopne
nop
in
sub
mov
add
ds
cmp
test
fs
sbb
inc
cwtl
cmp
aam
outsb
movb
jb
xor
rolb
push
cwtl
rorl
and
fidivrs
es
arpl
sbb
add
mov
push
sub
les
popa
test
hlt
adc
call
mov
sbb
sbbb
push
add
xor
inc
jo
pop
and
cmp
push
clc
ret
xchg
pusha
pop
mov
push
out
sbb
lods
sbb
push
add
nop
sub
or
in
adc
mov
sahf
pop
je
dec
mov
cmp
xor
sbb
inc
push
pop
cwtl
sbb
inc
add
add
hlt
pop
dec
mov
add
rorl
jo
loop
or
adc
add
ds
adc
adc
xchg
cmp
cs
mulb
xor
lods
cli
add
and
pop
and
and
sbb
mov
cwtl
and
add
xor
movsl
sbb
sub
cwtl
mov
pop
and
incb
push
loope
nop
cld
jle
or
dec
mov
or
xor
push
pusha
mov
or
xchg
lret
pusha
loop
xchg
cltd
lret
mov
cmpsb
push
push
and
push
loope
mov
popa
push
sbb
pop
xchg
addb
adc
sbb
xor
int
sbb
repnz
push
shlb
push
xchg
mov
jo
les
mov
mov
add
loopne
ret
fisubl
je
dec
push
push
fadds
push
add
ljmp
int3
push
cmp
adc
shlb
push
push
xor
mov
jo
loope
or
sbb
mov
shrb
adc
insb
scas
add
jo
add
pusha
addl
fcomps
adc
in
adc
adc
cli
and
inc
sbb
xorl
pusha
and
add
cmp
push
test
add
loop
or
cmp
xchg
ljmp
int3
or
pushf
mov
adc
xor
ds
addl
push
push
sub
in
rcrb
pop
loope
sbb
xor
jmp
add
mov
mov
ret
jbe
or
push
adc
push
les
call
nop
inc
jo
and
int3
int
loop
mov
and
repnz
cmp
enter
adc
cltd
jbe
add
pop
or
or
mov
test
add
adc
cmp
pop
xchg
add
test
lea
dec
sbb
or
dec
inc
je
sbb
push
stos
mov
adc
xchg
into
sub
pusha
cmp
dec
and
nop
clc
sbb
xchg
mov
cmp
push
in
repnz
popf
or
lods
movb
jl
test
adc
pusha
inc
aam
jne
dec
pusha
pop
mov
cs
xorl
jo,pt
lret
js
add
lock
rol
test
pushf
push
push
jp
mov
pop
nop
add
adc
mov
sbb
bound
nop
fsubs
in
rcrb
inc
je
adc
out
pop
cmpb
mov
call
sbb
cmp
pusha
call
sub
push
push
and
into
pusha
nop
enter
push
or
out
inc
jl
mov
mov
inc
icebp
aad
or
pusha
shll
pop
pop
fsubrl
and
sahf
inc
sub
mov
lods
add
nop
inc
shlb
lcall
push
adc
pop
int
cmp
mov
mov
sbb
loopne
cwtl
dec
mov
xor
mov
or
movb
rclb
js
nop
add
pusha
adc
inc
pop
outsb
lret
loopne
jo
or
dec
test
jle
pushw
push
popa
jo
cli
test
and
loopne
push
fsub
adcb
loop
loopne
or
fsubrs
call
sarb
add
xor
call
sbb
cmpsb
xor
adc
jo
cmp
inc
and
fs
cs
adc
clc
pop
inc
lods
mov
dec
sbb
push
mov
sbb
adcb
adc
cmpl
and
push
stos
push
mov
rclb
adc
push
dec
call
push
test
orb
or
mov
jbe
pop
in
adc
cmp
pop
or
out
add
loopne
add
add
add
cmp
dec
pusha
xchg
push
or
insb
cmpsb
jbe
push
or
cli
add
inc
sub
je
push
mov
push
mov
inc
or
subb
xor
inc
push
push
dec
mov
mov
loope
out
movsb
xorb
fsub
jb
lret
add
push
mov
nop
xor
mov
add
fcoml
or
cs
sbb
aaa
adc
push
and
sarb
pop
scas
adc
add
jle
sub
inc
nop
jb
mov
xor
add
pushf
adc
adc
ret
push
stos
xchg
push
dec
divb
test
mov
xor
or
in
ret
dec
imulb
sub
jae
mov
rolb
xchg
out
and
loop
mov
enter
mov
jb
andl
mov
xchg
rolb
jb
add
xchg
inc
cmp
push
adcl
pusha
inc
adcl
mov
je
cmp
jbe
jb
into
push
pop
push
pusha
in
mov
mov
icebp
test
push
mov
mov
nop
pop
cmp
inc
ret
imul
add
push
mov
pop
sbb
pop
push
cmp
cli
push
adc
add
adc
test
xchg
and
mov
outsb
or
xor
jle
pop
or
jl
movsb
repnz
xchg
pop
test
rorb
jo
push
cmp
push
or
int3
addl
push
mov
jo
clc
sub
push
lret
or
adc
pop
dec
andl
lret
add
and
adc
adc
sbb
repnz
xchg
or
xor
xor
cltd
and
ds
hlt
push
ss
test
lret
sub
fisubl
sub
and
xchg
popa
and
cmp
push
mov
and
and
inc
or
sub
pusha
mulb
jle
push
xchg
mov
loope
mov
push
bound
adc
aam
inc
cmp
add
lods
add
loope
mov
je
jne
sub
push
fmuls
or
add
add
adc
sub
fiaddl
inc
or
sbb
push
or
rcrb
jo
loope
movsb
push
ljmp
xor
or
or
aam
push
and
fnsetpm(287
inc
or
and
nop
dec
loopne
shlb
cmp
add
movsb
jo
mov
mov
hlt
push
pop
or
pop
and
or
mov
enter
cmp
dec
inc
sbb
xchg
bound
inc
or
data16
xor
hlt
ljmp
out
jo
xchg
and
mov
or
add
stos
daa
xchg
leave
inc
mov
addb
pusha
sbb
mov
push
fldl
pop
pusha
pusha
into
add
insb
or
adc
mov
loope
cmp
addb
les
sbb
jo
push
and
outsb
pusha
add
push
adc
push
inc
add
cwtl
dec
mov
pop
inc
add
adc
xchg
hlt
sbb
dec
adc
and
xchg
sbb
fs
pop
xchg
mov
mov
leave
and
pop
push
push
bound
mov
xchg
push
sbb
add
adc
add
jo
push
inc
mov
sbb
mov
add
inc
cmp
js
nop
cmp
loope
in
jo
cmp
xchg
dec
push
loopne
inc
jb
or
inc
and
pop
and
mov
mov
nop
lcall
or
push
insl
addl
xor
call
or
sahf
add
mov
pop
sbb
fs
subl
mov
and
add
subl
xchg
xor
adc
mov
and
nop
xor
xchg
dec
xchg
clc
cmp
adc
adc
subb
call
add
adc
sub
scas
xor
icebp
adc
push
inc
loope
js
ret
and
jp
loopne
sub
push
add
inc
mov
xchg
sarb
push
sbb
jbe
rorl
je
data16
xchg
mov
or
clc
add
xor
rolb
push
gs
xchg
add
loopne
dec
push
lea
shl
mov
js
push
nop
push
mov
push
shrb
loope
xor
loopne
addl
push
cmpb
les
adc
push
movsb
or
fadds
cmp
incb
push
loop
and
xor
add
or
dec
js
dec
add
pop
sub
andb
dec
mov
sbb
inc
call
sbb
adc
and
sub
mov
mov
jb
test
pop
add
sbb
lcall
nop
push
push
call
sub
add
into
mov
sbb
cld
mov
push
jge
sbb
movsb
add
movsl
sbb
xor
or
mov
dec
cmpsb
inc
cwtl
in
add
pop
mov
lret
rorb
dec
mov
add
adc
ss
fs
adc
mov
push
ret
in
xchg
movsb
push
adc
test
lods
or
test
cltd
arpl
xchg
sahf
xchg
sbb
pop
shlb
xchg
xchg
pop
cmpsb
or
sbb
cs
pop
and
and
cmp
cld
or
push
or
mov
push
mov
lret
xor
dec
cmp
int3
adc
pop
dec
fadds
fs
and
cmp
xor
je
mov
call
cmpb
jno
mov
push
inc
into
add
fcoml
adc
xchg
sbb
sbb
and
pop
push
addl
testb
sbb
fsts
cmp
outsb
and
lret
mov
and
test
push
xorl
cmp
adc
add
jle
or
nop
leave
icebp
adcl
inc
push
xor
shr
mov
in
xchg
call
inc
loopne
add
cs
movsl
pop
xchg
add
dec
push
gs
xchg
les
add
rcrb
decl
jo
sub
pop
jb
add
mov
or
dec
xor
cmp
dec
add
pop
sbb
push
xchg
and
sahf
nop
or
call
nop
push
test
mov
add
and
loopne
or
jo
stos
mov
es
test
pusha
bound
pusha
push
mov
js
ret
sub
mov
add
adc
xor
rorb
mov
nop
push
rclb
dec
call
push
addl
push
nop
or
adc
mov
cmpsb
dec
mov
or
push
sahf
or
bound
ficompl
mov
or
dec
jbe
xchg
insl
fwait
cmp
or
nop
inc
push
fadds
out
and
or
rclb
xchg
mov
or
stos
xchg
inc
push
cmpsb
add
mov
adc
int3
scas
ret
add
aam
inc
jbe
push
sub
dec
bound
add
sub
jp
mov
xor
rorb
lock
mov
adc
xchg
sub
push
push
and
mov
sbb
mov
push
xor
ljmp
ds
mov
in
inc
mov
sbb
xchg
stos
mov
mov
or
fs
add
sbbb
cmpsl
nop
lock
lods
mov
or
sbb
rorb
adc
orb
les
cs
lcall
dec
subb
loopne
dec
or
add
xchg
cmp
xor
fadd
rol
or
inc
nop
nop
adc
xor
sbb
es
adc
andb
adcl
inc
bound
scas
and
mulb
jge
pusha
and
pusha
jo
add
xchg
ret
pop
ss
xchg
mov
mov
mov
rclb
ret
push
fiadds
xchg
xor
sahf
mov
sbb
pushf
sub
pop
mov
add
sub
inc
pop
adc
je
loopne
sbb
push
push
scas
cmpsb
test
sub
push
push
push
ret
sbb
movsb
and
fsub
sbb
push
pusha
test
jl
out
inc
pusha
lcall
and
pop
mov
adc
int
xor
push
inc
lock
adc
mov
cmp
cmp
xchg
js
mov
cltd
dec
or
and
inc
mov
cwtl
xchg
adcb
pop
mov
mov
lcall
or
sar
add
decl
sub
sub
or
cli
jle
adc
lcall
push
in
enter
add
xor
xor
popa
lods
mov
push
or
sub
jp
sahf
add
fs
in
push
sbb
clc
sbb
and
fs
clc
or
sbb
mov
mov
nop
call
mov
sbb
and
add
inc
nop
sub
jne
sub
ficompl
xchg
call
lods
loope
cmp
dec
shll
and
add
dec
inc
mov
xchg
mov
xchg
or
pop
add
fidivrl
pop
or
push
sbb
es
les
nop
push
rolb
or
loope
push
sub
in
push
sbb
fcomps
mov
push
adc
and
push
pop
stos
or
mov
test
clc
ljmp
fcomps
cli
xor
inc
out
cmpb
add
ss
adc
xor
mov
add
cmp
push
loope
mov
add
ss
ret
idivb
stos
jl,pn
lret
adc
dec
cwtl
int3
sub
add
dec
jo
cmp
addb
xchg
adc
mov
clc
push
cmpsb
inc
push
or
loopne
or
jle
xchg
loopne
adc
push
add
fs
rorb
fimull
and
adc
cwtl
andb
mov
dec
into
shrb
enter
dec
sbbb
ror
lcall
or
sub
pop
mov
inc
hlt
inc
xchg
cmp
sarb
ss
jo
add
cwtl
push
sbbb
es
clc
mov
mov
and
mov
pop
push
pop
push
push
adc
mov
add
mov
mov
sbb
dec
int3
mov
test
mov
out
add
inc
push
rolb
addl
je
mov
mov
test
dec
cmpsb
push
mov
mov
test
sbbb
cwtl
dec
xor
mov
add
dec
or
pushf
push
leave
scas
cmp
jo
jne
sbb
push
cmp
push
xchg
mov
xor
push
mov
xor
gs
bound
cwtl
stos
or
inc
mov
mov
and
mov
orb
outsb
xor
adcl
loop,pn
xor
lret
mov
and
adc
cmpsb
sub
mov
push
adc
cmp
add
into
test
adc
and
ds
ljmp
pop
sbb
sbb
add
xor
xor
push
push
xchg
inc
and
inc
shlb
nop
pop
lcall
cmpb
lret
or
pop
pop
and
adc
je
cmp
lcall
pusha
clc
pop
addb
cld
inc
into
xor
je
sbb
sub
mov
shlb
mov
sbb
sbb
adc
or
pop
incb
sahf
jo
adc
push
out
mov
jl
dec
or
add
or
jb
push
inc
and
or
lcall
sbb
mov
adc
xor
xor
add
cmp
add
outsl
push
and
mov
or
loope
push
push
or
cmp
aad
or
add
loopne
push
sub
sub
pusha
pusha
inc
xchg
sbb
dec
mov
cmp
ficoms
rcrl
loop
push
cmp
fs
sub
xchg
scas
push
cltd
add
insb
into
mov
mov
cli
loop
push
test
dec
jmp
adc
inc
mov
and
fcoml
addb
adc
sub
out
mov
and
sbb
ret
pop
xchg
mov
and
pusha
rorb
pop
pusha
out
sub
aaa
lcall
and
pop
push
push
js
ds
addb
out
andl
cmp
mov
sahf
mov
and
mov
test
sbbl
jl
rorb
and
cmp
je
add
add
clc
or
loope
sbbb
adc
fsubs
js
loope,pt
fimull
dec
sbbl
sbb
movsb
sbb
test
sbb
cltd
inc
and
dec
shlb
sbb
es
mov
fisubl
adc
add
pop
add
adc
and
xor
test
add
push
sbbl
xchg
cli
or
inc
test
sub
add
push
mov
inc
addl
aam
loope
rclb
xor
sbb
repnz
sbb
add
loopne
add
pusha
fs
push
mov
inc
inc
mov
test
inc
xchg
add
pusha
jb
stos
add
fiaddl
pop
dec
or
push
sahf
out
or
adc
xor
mov
mov
test
add
xchg
add
out
nop
push
dec
popa
xchg
stos
ljmp
pop
dec
jo
adc
in
adc
es
add
or
and
rol
addb
adc
ret
add
add
add
outsb
mov
dec
lods
inc
pusha
push
push
pusha
cwtl
sub
rcl
push
or
pusha
lods
sbb
popa
push
mov
rcl
adc
push
loopne
or
and
shrb
mov
push
or
cmp
add
test
repnz
dec
dec
sub
nop
sub
mov
jo
dec
dec
je
dec
xlat
dec
xor
addb
cld
inc
add
push
dec
and
push
and
adc
pop
movsb
loope
sub
add
pop
ljmp
sbb
add
fs
inc
push
push
adc
adc
adc
and
mov
add
or
cmp
rcrl
lock
jp
mov
gs
lock
adc
movsb
push
sbb
jb
sub
jbe
dec
and
shrb
add
andb
mov
loopne
cmp
or
or
jle
mov
fadds
or
lret
fs
or
insb
shlb
add
adcl
and
shr
fiadds
ret
push
push
sbb
pop
push
sbb
xor
cltd
cmp
out
or
mov
or
inc
xor
cwtl
cmp
pop
adc
cmp
sbb
add
inc
sub
and
dec
enter
jne
push
adc
data16
inc
loope
sbb
inc
add
mov
xchg
dec
and
mov
into
push
rorb
mov
test
sbb
cs
cmp
inc
inc
into
add
nop
pop
sbb
inc
inc
imul
andb
adc
call
mov
jo
and
inc
out
xchg
sbb
xchg
sub
sbb
add
mov
xchg
insb
enter
lock
and
push
push
dec
mov
rclb
sub
jbe
push
lcall
mov
insb
lret
add
xchg
lods
loopne
fcoml
mov
xchg
and
bound
push
cmp
pop
adc
mov
inc
testb
push
mov
data16
mov
adc
inc
mov
sbb
jbe
dec
mov
inc
mov
inc
sub
push
cmp
loopne
cmpsb
jb
cltd
ljmp
mov
adc
mov
add
cmp
or
push
pop
sar
jp
arpl
cmp
and
xchg
xchg
and
push
mov
xchg
dec
and
add
test
xor
xor
sbb
sbb
inc
xor
into
ret
pop
cmpl
testb
dec
pusha
inc
int
movsb
andb
adc
push
and
test
xor
cmp
pushf
push
imulb
inc
xchg
sbb
and
fcoms
and
jbe
or
xor
loopne
add
cmpsb
push
add
scas
sbb
xchg
loop
inc
pop
dec
or
mov
inc
xchg
mov
push
js
popf
adc
push
sub
pusha
call
hlt
int3
sbb
jb
add
lock
mov
shlb
shlb
loopne
and
jp
test
inc
xchg
xchg
stos
add
loopne
inc
sbb
orb
inc
mov
adc
movsb
lock
push
add
cltd
inc
push
add
lods
mov
mov
add
or
add
enter
dec
and
xor
mov
mov
push
xor
push
or
lcall
ret
stos
mov
jbe
int3
xchg
jne
inc
and
push
dec
mov
enter
pop
inc
sub
or
push
scas
dec
loopne
je
add
pushf
or
add
outsb
or
inc
jo
xchg
or
test
adc
ficomps
sbb
xor
add
fiadds
xor
add
stos
mov
or
mov
add
push
sub
or
xchg
push
loopne,pt
xchg
inc
and
jp
dec
mov
rolb
inc
out
ret
push
outsb
xor
mov
xchg
push
and
sub
dec
mov
loopne
cs
dec
shll
scas
fidivrl
mov
push
loope
fcom
mov
popa
push
or
inc
or
sbb
push
adc
pop
gs
dec
sub
push
es
xchg
xchg
cwtl
fiadds
pusha
add
add
mov
sbb
sub
and
es
xchg
or
inc
add
xchg
leave
dec
pushf
jle
xor
fisubs
lea
mov
testb
jo
adc
inc
inc
int3
sbb
jbe
mov
xchg
adc
push
ret
push
adc
rcll
mov
add
shl
push
push
sub
pop
jae
inc
mov
inc
add
sbb
jp
lods
push
pop
and
mov
add
mov
mov
mov
push
lcall
test
les
andb
cwtl
sbbl
sub
sub
xchg
lds
jp
add
mov
jae
loope
testb
dec
fdivrs
jo
sbb
js
mov
inc
mov
push
mov
pop
push
cmp
test
stos
or
sbb
cmp
pushf
push
pusha
push
sbb
xor
enter
pop
jle
shrb
mov
add
sahf
add
pop
int3
sub
scas
adc
sub
mov
js
es
xor
jbe
fmuls
sbb
jbe
dec
cwtl
push
cld
or
sbb
test
dec
sub
cmp
stos
aad
and
orb
sbb
or
subl
in
adc
adc
cmpsb
and
add
mov
test
inc
push
and
xchg
mov
and
jo
push
push
jo
lcall
ljmp
js
xchg
sbb
inc
mov
add
popa
push
mov
loop
inc
or
insb
adcb
andb
inc
rolb
or
push
push
subb
add
sub
and
loopne
pop
sbb
push
push
jge
scas
sbb
adc
lock
sbb
rcrb
inc
movsl
cld
push
data16
ret
cld
jle
cmp
insb
outsb
or
push
pusha
add
mulb
sub
rcll
hlt
mov
and
inc
and
js
pop
push
push
lcall
cmp
aam
push
loopne
rorb
cli
movsb
test
mov
push
dec
and
dec
stos
pop
shlb
dec
add
mov
adc
mov
mov
sub
inc
push
pop
pop
adc
add
and
mov
xor
push
or
sub
sbb
sbb
xchg
loope
push
xchg
add
fisubl
xchg
push
out
or
mov
incl
mov
adc
aam
push
pop
add
sbb
xor
sub
or
int3
cmpb
sbb
or
xchg
or
sbb
cmpsb
adc
sub
clc
jb
ror
and
cwtl
cmp
push
adc
cmp
sbbb
inc
xchg
add
pusha
and
and
inc
and
and
dec
fcompl
jo
sub
mov
rolb
data16
adc
sbb
or
add
lock
push
add
mov
pop
add
inc
lea
dec
mov
or
lods
movsb
mov
dec
sub
push
and
nop
sub
xor
lods
pushf
orb
out
stos
xor
push
jp
mov
in
push
loopne
into
sbb
loope
cwtl
cmp
and
cmp
mov
cs
adc
push
sub
inc
pop
ret
clc
mov
sbb
and
and
test
dec
aam
xchg
mov
js
push
stos
or
jbe
loop
and
adc
xor
ss
rcrl
ret
or
or
mov
cld
push
scas
inc
cmpb
mov
int3
xor
add
clc
xchg
clc
fs
xor
loopne
add
push
loope
mov
orl
xor
push
pop
mov
test
mov
jo
outsb
repnz
and
push
or
mov
mov
pop
add
cwtl
pop
jo
push
sub
xor
push
jbe
test
mov
push
xchg
or
hlt
xor
fmuls
fsubs
lods
push
nop
xor
adcb
pop
rclb
js
adc
aam
jo
or
sub
ret
test
pusha
xor
enter
leave
fs
push
mov
inc
add
adc
xor
sub
loopne
add
xchg
push
xor
out
add
jle
push
call
adc
xchg
test
dec
xor
ror
dec
mov
sbb
add
sbbl
loope
mov
enter
or
sbb
and
mov
inc
mov
dec
mov
inc
inc
addb
loopne
sbbl
pushaw
aam
push
pusha
ljmp
nop
mov
xchg
add
cmpsb
add
bound
call
adc
push
adc
and
sub
add
add
cltd
or
lret
loopne
sahf
loop
fstpl
adc
push
mov
in
inc
add
adc
and
lock
sbb
or
inc
and
push
push
sahf
cmp
out
or
mov
es
push
sbb
shl
leave
xor
pop
adc
mov
mov
adcl
jbe
hlt
test
dec
loop
ljmp
orb
xor
cmpsb
inc
xchg
lods
shl
andb
rolb
adc
or
sub
repnz
jo
pop
es
push
fmull
clc
adc
and
jo
xor
dec
xchg
es
es
xchg
shl
mov
adcb
pop
loopne
stos
inc
add
adc
jbe
sub
dec
and
enter
mov
sbb
push
adc
pop
scas
fs
call
jp
and
jbe
jne
sub
call
and
mov
nop
or
add
test
adc
mov
sbb
mov
xchg
push
into
pop
test
inc
jb
xor
add
dec
loopne
ret
inc
pop
pusha
in
push
xchg
loope
inc
or
cmp
inc
xor
mov
loopne
adc
mov
push
sbb
test
mov
call
and
fadd
push
sbb
leave
popa
jo
testb
push
jb
push
or
sub
enter
add
test
and
fsubl
xchg
loopne
mov
pop
loopne
or
mov
xor
jbe
loopne
fidivs
pop
add
stos
or
test
ret
adc
add
popa
dec
test
and
sbb
push
test
push
cwtl
call
int3
les
cmp
inc
test
pusha
add
out
xor
test
lret
sbb
stos
push
xchg
sub
push
test
and
push
add
or
lods
mov
inc
xchg
sbb
or
and
jno
adc
xchg
and
jae
dec
jl
cmpsb
cwtl
stos
xchg
pop
push
inc
les
lret
cmpsb
xor
lcall
enter
imul
test
xor
add
adc
gs
int3
cmp
inc
cmpsb
and
sarb
sbb
xor
mov
xor
outsb
shlb
es
pusha
stos
xor
xor
add
loopne
push
pop
xchg
and
jo
mov
xchg
lock
sbb
pop
cwtl
ds
loopne
scas
cmpsl
push
or
xor
jb
in
in
sbbb
push
or
test
or
sbb
push
push
popa
data16
mov
add
add
outsl
orb
sub
rolb
sub
aad
loopne
mov
ror
push
mov
scas
andb
les
jbe
and
add
adc
adc
test
ljmp
push
mov
push
jb
push
into
xor
cwtl
and
test
push
mov
sub
add
mov
push
adc
scas
dec
or
push
in
sbb
and
xchg
inc
aad
mov
sbb
lock
or
nop
sub
imul
scas
rolb
pushf
enter
add
mov
ret
sub
dec
push
stos
mov
add
push
fs
lret
mov
es
stos
and
cli
loop
inc
outsb
cmp
loopne
jbe
push
sbb
mov
or
sbb
add
rolb
inc
repnz
and
sbbb
or
mov
cwtl
hlt
sbbb
sbbb
xchg
add
push
adc
or
lcall
push
pop
cli
or
inc
inc
loopne
fidivl
adc
mov
xor
xor
cmpsb
lock
popa
push
mov
xor
mov
mov
fadds
and
inc
add
sbb
xorb
xchg
cmp
mov
sbb
inc
scas
out
test
push
adc
add
sub
xor
dec
je
pop
sbb
xor
inc
xor
push
loope
jb
int
dec
loopne
ds
pop
subb
mov
hlt
mov
int3
adc
sbb
out
dec
out
testb
pop
mov
mov
cmp
and
ror
mov
and
outsb
pop
inc
sbb
xor
cmp
mov
js
test
push
dec
push
cli
push
push
sub
inc
push
in
sub
sbbb
cs
and
or
pop
and
xor
mov
push
daa
ds
sub
stos
lods
sbb
test
or
add
xor
data16
or
and
inc
ret
lods
push
nop
push
or
inc
jbe
lock
loope
cmp
out
lcall
pushf
pusha
test
popa
sbb
add
ds
int3
add
sarb
aad
xor
loope
inc
or
loopne
add
xor
faddl
fadd
xor
movsl
jb
pusha
pushl
mov
sub
inc
mov
and
dec
data16
test
enter
push
xchg
popa
cmpps
push
les
push
and
adcb
add
and
cmp
push
push
or
cmp
inc
int3
sbb
xor
mov
add
mov
andb
loopne
or
cmp
dec
inc
xchg
adcb
sbb
cwtl
sbb
dec
les
scas
aam
mov
es
and
sbb
sbb
push
and
add
inc
add
test
sbb
dec
xchg
xor
or
nop
and
push
ret
adcl
jb
add
loope
out
and
sbb
sar
jo
enter
enter
imul
fiaddl
and
or
mov
push
popa
mov
push
sbb
pop
incl
add
dec
cmpsb
call
dec
rorb
inc
aad
fiadds
mov
sbb
push
push
call
mov
mov
orb
rolb
rclb
dec
test
pusha
int3
je
add
and
ret
addl
push
ss
adc
fdivl
daa
jno
orl
adc
lods
pop
mov
test
pop
inc
or
push
or
xor
push
js
cwtl
add
int3
adc
jo
rclb
sbb
sub
popa
push
sub
bound
dec
pusha
mov
push
js
andl
mov
mov
pop
cwtl
scas
inc
add
mov
into
or
push
sbb
xor
movsb
push
push
pushf
inc
add
push
cmp
out
inc
inc
add
mov
jl
push
or
sub
xor
dec
orb
cwtl
and
sbb
inc
cmp
clc
add
cmp
adc
push
pusha
cmp
inc
pop
adc
or
add
sbb
push
mov
clc
cmp
push
in
enter
mov
or
clc
push
xchg
sbb
mov
mov
loope
add
roll
push
rol
loopne
mov
and
xor
pop
int
test
mov
push
andb
and
add
mov
cmp
adc
adc
out
cmp
or
lods
sub
subb
loope
inc
mov
dec
and
push
fiaddl
and
sbb
push
dec
sbb
fmull
test
or
les
xchg
sub
add
aam
sbb
aam
mov
and
into
push
lods
and
and
push
adc
or
lcall
out
nop
xchg
mov
add
xor
cmp
mov
push
int3
pop
add
dec
icebp
sbb
lret
adc
inc
sti
nop
jne
add
inc
xchg
lret
lods
push
je
push
cmp
sub
xor
push
int3
push
adc
loop
pushf
mov
and
mov
xor
push
push
sbb
xor
enter
cmpsb
mov
add
inc
stos
testb
push
inc
mov
cmpsb
push
xor
fdivl
jae
cmp
andb
adcl
and
push
xchg
lret
adc
testb
test
dec
cmp
push
adc
cmp
xchg
inc
loope
rclb
ljmp
add
mov
add
insl
mov
mov
push
xchg
adc
adc
mov
enter
adc
adc
push
es
or
lock
pop
jl
rorb
fcompl
movl
sbb
xor
inc
xor
test
int3
and
test
push
rolb
sub
push
and
mov
mov
ret
push
xor
pop
es
andb
inc
ret
imul
xchg
inc
jo
add
add
mov
or
xor
shr
mov
ret
sbb
add
and
andb
or
xchg
mov
push
push
je
aam
jb
sub
pusha
dec
notb
add
add
mov
ljmp
xor
push
add
nop
and
jo
add
aam
and
add
fsubs
inc
aad
mov
xchg
and
or
sbbl
pushw
ds
ds
cli
jbe
fisubrl
cli
ror
and
fsubrs
and
sub
movb
pop
call
or
mov
xor
mov
push
pop
loopne
test
add
dec
inc
and
lret
sbb
loop
xor
test
and
int3
test
mov
inc
adc
jb
push
mov
push
or
pushl
sbb
insb
add
insb
add
pop
xor
xchg
xchg
add
loopne
and
pop
out
adc
sbb
dec
push
push
add
or
sub
and
mov
mov
xchg
loope
sub
inc
nop
sub
clc
add
xchg
insb
out
adc
hlt
cmp
fcoml
mov
push
leave
or
add
adc
inc
rclb
cs
xor
push
test
shlb
dec
cmp
ds
sub
nop
sbb
inc
or
out
mov
push
inc
sbb
test
out
xchg
and
and
xchg
or
faddl
add
adc
cmp
add
or
xor
mov
rorb
and
popa
adc
data16
add
faddl
aaa
int3
xchg
ljmp
adc
xchg
rorb
sbb
adc
and
add
pop
and
add
dec
js
and
sub
add
dec
mov
cmp
aad
mov
push
and
add
loopne
rclb
pop
dec
or
cmp
xor
cmp
jo
push
lcall
add
adc
xchg
scas
repnz
mov
push
test
or
enter
lods
sbb
orb
xchg
xchg
pop
fcompl
add
insb
adc
or
lcall
xor
push
movsb
data16
and
cld
xor
mov
jp
inc
and
push
fisubs
add
push
xchg
data16
enter
and
jo
mov
sub
jb
pusha
inc
adc
fs
sub
jbe
sbb
subl
addl
fs
imul
jo
test
ret
cli
pusha
xor
push
or
inc
and
call
mov
dec
and
and
es
adc
xor
fs
inc
xor
push
addb
stos
dec
and
add
cmp
xchg
xor
sbb
push
xchg
and
pop
and
ret
xor
and
test
mov
les
and
xor
rorb
push
inc
and
or
scas
pop
push
and
add
je
inc
and
add
bound
pop
add
adc
cmp
add
sub
jle
fs
or
or
pusha
and
lret
sahf
mov
outsb
push
les
inc
orb
lcall
sahf
and
dec
or
loope
stos
incb
mov
or
inc
mov
jb,pn
pop
and
xchg
or
loope
test
test
xor
dec
xchg
mov
testb
pop
loope
or
push
aam
lcall
push
push
stos
adc
ret
sbb
test
inc
mov
test
mov
inc
cmp
es
add
or
cs
xor
pusha
nop
jo
push
inc
pushf
inc
pusha
pusha
lret
les
andb
insb
adc
cmpsb
sub
and
loop
or
call
adc
jbe
dec
out
data16
adc
inc
jb
inc
mov
faddl
mov
mov
inc
sub
out
sbb
sbb
cmp
adc
sarb
in
xchg
sbb
in
push
inc
cwtl
cmp
jo
sbb
push
addl
pop
pop
dec
sub
push
adc
and
add
adcb
cwtl
or
les
add
rcr
push
and
nop
sbb
cltd
mov
lods
lcall
call
xor
inc
js
je
int3
and
ljmp
lea
addb
xchg
fmuls
dec
cmpb
dec
loopne
adc
mov
adc
push
sub
aam
lret
into
pusha
sbb
push
and
or
xchg
inc
outsb
dec
lret
int3
and
sub
mov
add
rcrb
push
xchg
sub
mov
daa
add
xor
inc
mov
inc
ret
adc
leave
xchg
xchg
jl
xor
push
mov
or
in
push
inc
lcall
mov
out
int3
mov
sub
sub
inc
push
inc
insb
add
sbb
and
sub
clc
adc
mov
mov
inc
adc
or
and
or
sahf
pop
int
or
inc
adc
or
ret
enter
dec
sub
mov
mov
sub
les
lcall
xor
mov
mov
call
sub
sbb
adc
hlt
or
pop
les
into
loopne
popf
push
flds
hlt
push
pop
nop
xchg
fs
add
add
fdivr
adc
add
sub
nop
xor
jl
pusha
inc
dec
insl
pop
sbbb
xchg
add
shl
xchg
loopne
imulb
dec
sub
xor
pop
jbe
add
jecxz
movsb
add
call
rclb
jb
mov
and
adc
ljmp
sbb
and
lods
lret
push
fs
cmpsl
fwait
inc
pop
xchg
sbb
add
and
mov
dec
pop
jo
cmpsb
xchg
ret
push
sub
ss
addb
push
add
dec
jp
hlt
jle
adc
add
add
xor
sbb
mov
jo
or
xchg
aam
stos
push
push
outsb
cmpsb
sbb
rcrb
aam
sbb
mov
nop
sbb
dec
out
sbb
lret
sbb
cltd
add
push
mov
nop
shlb
xchg
push
fs
pushf
push
or
inc
push
inc
xor
loopne
stos
dec
adc
dec
sahf
loop
xorb
cmp
sub
inc
ret
xchg
dec
push
nop
ljmp
sub
dec
or
addl
sbb
jae
sahf
nop
sahf
nop
add
or
and
lcall
mov
adc
stos
aam
nop
pop
mov
jp
je
adc
adc
sbb
or
test
pusha
insb
adc
mov
adc
adc
aam
inc
es
adc
xor
cltd
ret
and
add
and
shl
scas
cmp
out
mov
jp
or
sbb
sub
mov
pop
cli
sbb
es
and
and
inc
and
push
pushaw
pop
adc
or
orb
mov
data16
pushf
js
mov
or
fmull
test
xchg
mov
adc
xchg
loope,pn
mov
andb
shr
xor
mov
in
enter
jmp
mov
add
add
sarb
inc
loopne
pop
lcall
xchg
insb
xchg
lret
push
inc
fsubs
mov
enter
adc
xchg
adc
in
fcompl
jb
or
mov
call
mov
xchg
dec
repnz
push
pusha
dec
aam
or
adc
cs
push
jl
adc
push
mov
cmp
push
xlat
add
inc
push
sahf
into
and
cli
xchg
push
and
ficoms
fsubr
xchg
add
ret
enter
mov
lds
inc
sahf
fsubs
inc
inc
int3
jle
inc
push
adc
push
add
xchg
mov
call
test
cmp
loop
nop
icebp
xchg
add
mov
stos
cs
xorb
xor
add
insb
aaa
push
in
or
inc
enter
sub
dec
pusha
add
push
test
test
adc
or
push
jo
mov
movsb
pusha
adc
pop
or
pusha
push
xchg
xchg
xor
mov
stos
mov
lcall
mov
push
loopne
mov
les
push
mov
push
lock
pop
push
scas
dec
fidivrl
dec
or
sbb
loop
adc
es
mov
dec
or
push
sbb
vcvtsi2ssl
mov
xchg
jle
mov
lret
mov
adc
enter
scas
andl
clc
mov
xor
bound
add
xchg
dec
xor
pop
cmp
mov
inc
jo
rclb
sub
or
dec
mov
jle
mov
addl
stos
outsb
sbb
jo
push
rcr
je
orb
add
or
test
cmp
hlt
sbbb
popf
jo
fiadds
adc
cwtl
clc
lret
push
mov
enter
rcl
or
out
loop
and
and
es
call
fadds
jl
test
outsb
test
push
sub
adc
add
jo
loop
and
push
jle
push
pop
xchg
leave
faddl
or
cmp
mov
stos
rolb
shlb
dec
or
and
or
dec
jmp
cmp
inc
sbb
jo
test
mov
adcb
cmp
pop
cmp
and
or
push
xor
add
add
data16
add
enter
push
inc
js
nop
fdivs
fwait
xor
js
dec
mov
bound
or
into
les
sbb
and
sbb
jb
mov
mov
cmp
pushf
nop
adcb
ds
es
add
out
xchg
lret
adc
cmp
cmp
xor
test
out
jae
insb
lods
addr16
insb
mov
lds
and
or
or
push
push
sub
or
dec
or
mov
add
push
sub
mov
add
sbb
push
mov
jb
enter
stos
clc
add
and
sahf
or
cld
add
and
icebp
or
push
pusha
mov
add
or
sbb
mov
test
dec
test
or
loop
ret
sbb
in
dec
or
and
push
loope
ss
inc
or
pusha
into
push
inc
or
or
and
test
test
pop
loop
add
xor
add
faddl
mov
adc
pop
je
or
sub
jb
mov
or
cs
mov
xor
dec
sbb
push
dec
xor
mulb
inc
jp
es
mov
jo
ss
lret
push
inc
dec
sahf
into
sub
push
mov
dec
adc
xor
xorb
add
loop
cli
sarb
das
xchg
outsb
in
or
mov
roll
cltd
add
add
int3
add
adc
sarb
addr16
mov
jbe
xor
or
and
xor
outsb
jo
add
xor
loope
fmuls
or
ljmp
jno
les
dec
xor
push
aam
pushf
rclb
xor
mov
cmp
push
xor
popa
dec
inc
or
or
mov
scas
mov
orb
xor
push
add
add
or
loope
jo
cld
xor
or
in
ret
push
cli
add
xchg
or
jmp
test
dec
mov
pop
rcrb
xor
cmp
cs
push
es
and
pop
sub
or
push
sub
xchg
adc
cs
add
lods
dec
cmp
fsubl
add
add
data16
xchg
add
cmpl
dec
adc
shlb
sbb
clc
xor
mov
mov
pop
adc
add
insb
and
pop
inc
dec
push
or
lods
dec
push
les
push
dec
dec
add
mov
adc
and
cwtl
add
jo
subb
dec
ljmp
pop
sub
dec
and
sbb
jo
test
inc
cmp
push
out
and
pusha
out
and
cld
je
cmp
xchg
enter
push
rcrl
add
sahf
or
xor
loopne
dec
lock
mov
mov
dec
mov
sub
les
in
clc
push
insb
jae
call
add
leave
ret
sbb
xor
add
push
mov
cld
outsl
fwait
xor
outsb
dec
push
push
pushl
jecxz
mov
push
out
ret
push
add
mov
mov
pop
mov
push
outsl
add
sti
fstp
or
je
add
rolb
dec
add
je
mov
sarl
arpl
or
add
lea
push
push
sahf
clc
out
imul
mov
jge
idiv
rorb
test
inc
call
ss
xor
into
jnp
test
xor
cwtl
push
inc
mov
out
push
jb
jo
fidivs
xor
inc
xor
pusha
lock
cmp
push
inc
push
fs
in
in
rcr
pop
xlat
dec
cmp
bound
int3
mov
dec
inc
add
dec
loopne
js
push
fbstp
stc
cmp
addr16
jle
fstpt
fucomp
dec
inc
dec
dec
aam
fbld
fdivr
push
out
je
stos
add
jp
fs
dec
cmp
or
data16
outsl
mov
add
enter
pusha
shll
ret
dec
out
jp
test
test
cli
mov
add
test
add
inc
addr16
mov
rorl
cld
subb
jle
jno
js
pop
inc
jle
jne
jmp
xor
adc
inc
cmp
insb
outsl
cmp
push
dec
popa
dec
add
jb
repz
js
jecxz
sub
bound
add
ss
fdivrl
js
sti
fldt
addr16
inc
dec
pop
cmp
inc
add
inc
dec
push
mov
add
xor
jmp
testl
push
adc
iret
ss
hlt
push
sti
cmp
jne
push
jae
add
push
aam
pop
icebp
or
dec
dec
inc
inc
dec
jb
mov
cmp
aaa
jbe
push
push
aaa
mov
mov
dec
xorb
pop
mov
dec
dec
adc
push
fistps
mov
push
jae
mov
inc
decb
andb
aas
psubsw
adc
adc
jmp
jmp
mov
jmp
xor
into
and
jmp
inc
push
cmpsl
push
out
pop
cmp
js
das
mov
push
adcl
sar
pushl
mov
shr
out
dec
xor
mov
jmp
std
jmp
jmp
outsl
jg
jmp
pop
xor
and
mov
sub
or
jmp
adc
jl
movsb
in
jmp
push
pop
jmp
mov
jmp
shrl
es
adc
sbb
movsb
add
outsl
out
jmp
int3
sbb
add
jg
jmp
push
lds
jbe
clc
jg
push
jmp
jmp
int3
jmp
in
neg
jmp
jg
lock
adc
xchg
in
push
mov
jmp
cli
xchg
jmp
clc
mov
jmp
or
cmpsl
das
clc
mov
adc
outsb
mov
mov
decb
sbb
fucomip
int
ljmp
push
jmp
testb
shr
jge
jp
push
and
sti
fidivl
sub
test
pop
add
pop
fdiv
push
ds
push
push
jo
jle
in
jmp
hlt
xchg
adc
jmp
mov
mov
testb
and
xor
xchg
jmp
fwait
add
lea
dec
or
insl
call
and
in
inc
pcmpgtd
pushf
dec
repnz
shr
insb
add
pop
add
idivb
or
ret
imul
cs
in
ret
inc
jle
subl
jl
sub
jnp
shlb
idivb
jl
lcall
je
mov
int
test
and
xorl
aam
repz
jmp
push
and
into
cld
cmpsb
cmp
test
cs
jmp
mov
jne
add
adc
mov
jmp
pusha
addr16
ror
test
inc
movsl
pop
mov
into
fimuls
lret
mov
sahf
jmp
fs
add
mov
out
xor
jmp
sbb
fwait
rcrl
jo
push
dec
push
mov
push
clc
pop
insb
sub
fidivrs
or
mov
outsl
out
mov
inc
jmp
add
data16
mov
shlb
or
sub
std
lahf
mov
mov
push
cmp
faddl
outsl
adc
cs
inc
data16
add
push
loop
sbb
xchg
jle
in
cmpsb
jmp
cmp
mov
icebp
push
dec
out
dec
iret
push
stos
nop
roll
mov
les
outsl
pop
jmp
adc
pushf
mov
dec
test
out
pop
bnd
cmp
ret
adcl
mov
dec
ss
cld
push
scas
adc
fdivp
jmp
loope
dec
sbb
ss
inc
jb
cmpb
lods
rcl
jmp
pop
pop
jp
inc
jbe
cmp
ljmp
jb
dec
add
insb
mov
jecxz
mov
iret
mov
mov
or
push
add
cld
sub
push
jg
jmp
mov
popf
sub
mov
shlb
mov
sahf
push
cmp
mov
mov
imull
stos
mov
jmp
fs
icebp
jmp
ss
in
inc
xchg
mov
ss
or
in
daa
push
cld
cmc
mov
pushl
pop
jge
dec
adc
loopne
mov
jle
jle
icebp
or
adc
bnd
push
add
jne
cmp
fdivr
and
stos
js
push
mov
sti
jmp
sbb
ss
add
inc
inc
xchg
dec
add
shlb
js
push
or
and
push
lods
pop
es
aaa
mov
in
xor
pop
push
rcr
aas
xor
movsb
inc
add
in
add
cmp
stc
cli
and
sbb
in
mov
mov
sahf
nop
shll
jp
popa
dec
xchg
ss
lret
ret
fsub
loopne
sub
mov
stc
xchg
jb
jp
cmp
add
test
sbb
xchg
and
pop
push
pushf
push
push
add
lret
icebp
mov
and
pop
cld
pushf
jle
mov
sub
sahf
lcall
popf
hlt
sbb
or
mov
stc
imul
int
push
mov
sbb
jnp
std
sbb
pop
lock
pop
or
call
add
xchg
mov
scas
and
insb
std
loope
add
inc
cs
cmp
add
lahf
mov
cmpl
nop
rcr
in
cmpsb
loope
bound
push
add
or
cmp
add
sbb
jb
cmp
mov
dec
sbb
dec
iret
and
mov
mov
xchg
pop
jmp
lods
add
xor
push
clc
adc
jbe
inc
mov
fistl
or
enter
and
les
std
aaa
dec
test
cmp
cmp
subb
jge
test
sbb
pop
or
pusha
aad
xor
jo
add
xchg
mov
sub
dec
fwait
fwait
mov
aas
imul
cmp
pop
jge
mov
test
jl
pop
xchg
cmp
push
jge
call
jns
repnz
add
std
es
je
out
shrl
adc
fld
jb
pushf
jno
adcl
loopne
add
cld
sbb
jmp
push
out
jae
lods
ds
cld
jnp
call
adc
or
sub
dec
and
ljmp
insl
xchg
jp
jns
cmpsl
jl
mov
fildl
mov
sbb
nop
inc
push
lock
add
insb
pusha
icebp
cmp
outsl
push
imul
pop
xor
mov
fadd
jb
leave
scas
mov
mov
adc
push
dec
stos
loop
or
xchg
insl
mov
leave
cld
js
mov
add
in
sub
mov
fidivrl
nop
mov
inc
ficompl
push
ss
data16
and
arpl
mov
pop
pop
cli
push
mov
loopne
mov
sti
push
aad
mov
dec
test
xbegin
call
or
mov
adc
call
xor
popf
mov
push
hlt
pop
aaa
push
xor
cmp
add
jbe
mov
movb
xchg
mov
mov
pop
mov
mov
lods
jmp
mov
jle
add
sarl
sbb
jns,pn
dec
lock
jp
push
mov
loopne
sub
bound
jle
xchg
bound
test
shl
add
outsl
mov
push
idiv
sbb
cmpb
or
add
xchg
dec
fsubrl
mov
fimull
das
push
jmp
pop
push
jle
sbb
xor
aad
das
xchg
inc
sarl
mov
and
dec
and
mov
sbb
nop
or
mov
xor
add
pop
xor
loop
stos
add
or
dec
cltd
loop
inc
lret
shlb
cmp
mov
dec
add
push
rcrl
arpl
cmp
mov
jg
dec
jbe
add
inc
in
cmpsb
insb
ret
insl
fsubs
xchg
mov
inc
clc
ljmp
mov
mov
add
mov
inc
dec
inc
int3
dec
push
add
pushl
dec
addb
shll
add
ja
dec
add
je
push
js
jo
lods
dec
add
decl
inc
pop
inc
popa
dec
add
dec
push
jbe
mov
adc
push
inc
add
xor
and
add
jbe
out
jl
xchg
out
mov
adc
ljmp
int
jle
xor
cld
push
push
push
imul
idivl
js
cmp
or
push
arpl
mov
dec
mov
dec
push
xor
xor
pop
push
out
dec
inc
insb
insb
insl
xor
sbb
out
dec
mov
fcmove
es
or
push
and
push
pminub
inc
push
fistl
pushl
add
adc
inc
dec
hlt
inc
inc
inc
jl
lock
stos
mov
dec
lea
push
lea
cmp
loop
bound
fldt
ret
inc
inc
add
cwtl
add
sti
sahf
pusha
arpl
push
sbb
xchg
out
xor
dec
cwtl
dec
hlt
dec
pop
mov
sub
mov
push
in
in
pop
outsl
cmp
aas
xchg
bound
pop
cld
filds
sub
inc
dec
or
dec
jl
and
push
adc
xlat
clc
pop
imul
dec
fisubrl
jno
in
jno
inc
add
adc
enter
sub
sub
imul
add
fmull
add
cmp
pop
or
jne
jmp
jecxz
adc
or
add
sbb
repnz
push
lds
popf
loope
mov
add
test
mov
xchg
mov
inc
add
dec
sar
loop
dec
jno
pop
inc
add
clc
mov
mov
fcmovu
fs
pop
cli
loope
fimuls
push
dec
xchg
shll
cli
lds
aam
insl
js
stos
fucomip
div
dec
dec
je
jb
and
push
mov
mov
cs
mov
pop
sahf
outsb
xchg
pop
je
inc
enter
or
xchg
test
push
jmp
pop
rcr
jo
pop
dec
inc
add
in
cmp
inc
or
lock
dec
aaa
int3
bound
shll
xchg
test
and
bound
lret
mov
mov
add
cmp
mov
pop
push
movsb
fs
push
je
adc
or
jae
add
fs
add
mov
xor
in
mov
inc
lods
adc
pusha
xor
std
mov
cmp
push
js
and
data16
je
mov
aad
decl
push
jmp
inc
stc
call
pop
out
cmp
ret
addr16
sub
or
dec
dec
push
jae
lcall
jnp
fs
rclb
mov
clc
dec
or
shrl
push
insl
dec
jno
mov
add
add
incl
sbb
mov
sbb
movb
jo
mov
sub
add
jo
stos
jl
cwtl
pushl
mov
cmp
rolb
ror
mov
loope
mov
rcrb
jmp
mov
sarl
inc
mov
push
mov
stos
icebp
xchg
mov
jmp
push
xor
xor
xorb
push
test
inc
enter
push
cli
jmp
mov
jo
jle
sub
add
das
ret
pusha
jmp
jmp
mov
mov
insb
neg
or
aad
cwtl
aam
mov
insl
mov
push
bound
push
test
mov
ret
add
les
mov
jo
jbe,pn
fidivl
dec
jmp
jg
les
mov
fiaddl
or
movd
int3
dec
push
ret
dec
dec
add
test
sub
jmp
jmp
mov
inc
loopne
lcall
push
call
mov
mov
outsb
push
mov
jo
mov
adc
add
xchg
fiaddl
xor
inc
sahf
pop
sbb
jmp
sbb
fildll
jg
movsb
nop
andb
imulb
addb
mov
insb
sub
jbe
addb
dec
je
add
or
cmpsb
mov
es
je
ljmp
jmp
fs
jmp
insl
int
adc
pop
mov
add
push
mov
and
mov
and
pushf
ljmp
aaa
or
sbbl
aaa
lock
pop
or
mov
outsb
rorb
xchg
addr16
push
adc
mov
and
aad
testb
jbe
jg
shll
sahf
push
cwtl
in
cmpsb
lods
jmp
es
call
fsubrs
mov
cmp
pop
fldt
xor
or
and
push
mov
ret
jne
jmp
sub
xchg
mov
cltd
sar
jo
mov
mov
and
int3
pop
scas
or
ja
inc
loope
fsubrp
gs
mov
add
and
cltd
mov
cs
ja
loope
pop
repnz
sub
adcb
cld
sbb
xorb
cmp
pop
adc
mov
popa
stos
andl
ret
mov
sub
push
stc
pop
cld
in
mov
mov
fbstp
in
jg
in
mov
ret
shr
push
xchg
call
aaa
stos
daa
push
nop
mov
dec
ja
ja
test
out
add
push
mov
std
fisttps
fdiv
jmp
add
mov
fdivrs
xchg
jg
cwtl
stos
xor
pushf
test
das
jp
and
jne
mov
mov
roll
jp
popa
ds
lcall
xchg
jb
test
jg
aas
into
jae
stos
jmp
fsts
scas
add
not
jg
bound
ds
lods
in
mov
pop
or
sub
dec
mov
sub
jmp
clc
adcb
les
mov
mov
jb
add
cwtl
cmp
or
or
cs
stos
cwtl
jmp
rcr
xchg
sub
mov
negl
loope
mov
mov
stos
xor
hlt
rcll
pop
xor
mov
mov
cltd
outsb
xchg
mov
testb
notb
adc
mov
or
mov
adc
sahf
push
negb
cmc
aad
lahf
pusha
jg
mov
sbb
icebp
or
xchg
in
je
add
aas
add
lea
xor
mov
les
std
mov
cmp
mov
in
add
or
xor
sub
out
les
lahf
out
lods
mov
mov
fmuls
push
lods
mov
repnz
fisttps
and
and
mov
subl
inc
push
pusha
mov
testb
dec
inc
sbb
cmp
mov
mov
out
imul
mov
ret
jl
fmuls
xchg
jno
lret
adc
adcb
pop
jo
imul
inc
jmp
or
sbb
sti
xlat
cli
popf
cmp
mov
cmp
and
sti
scas
cli
ds
xor
inc
mov
adc
sbb
push
adc
or
int3
sbb
add
shl
mov
pop
and
pop
mov
dec
fsubrl
mov
add
sti
cltd
dec
pop
stos
mov
mov
cmp
pop
cmp
adc
xor
jecxz
dec
dec
shl
jmp
je
cli
ja
ficoml
add
mov
lds
add
mov
push
mov
jmp
repnz
clc
jg
push
mov
jmp
dec
mov
push
pusha
stos
mov
jge
andb
ret
jno
cmp
and
or
andb
cmp
sbb
ficompl
mov
outsl
aam
call
sub
andl
xor
ret
mov
scas
jle
and
fucomi
shll
push
lock
out
jo
cwtl
jb
add
hlt
rcll
out
or
cmp
push
loopne
inc
in
adc
inc
cli
outsl
imul
adc
mov
add
jb
knotb
push
dec
test
pop
push
jo
aam
decb
adc
xchg
out
cs
in
add
jb
jb
or
decl
sub
fmull
leave
dec
pop
jo
add
hlt
add
sbb
adc
and
and
das
lret
leave
ds
lock
loop
jns,pt
push
imul
mov
sbb
jl
dec
xchg
xchg
in
push
pop
aam
das
aam
pop
mov
aas
cmc
adc
cmc
xlat
jmp
aas
push
in
sub
jb
subl
pop
loopne
mov
push
fmull
mov
aam
cmp
cmp
fwait
orb
lcall
push
imul
or
push
add
lods
mov
mov
jmp
ret
mov
andb
push
adc
adc
or
mov
jge
loopne
fwait
mov
ljmp
fidivrl
jmp
loopne
shlb
ss
pushf
ret
inc
or
add
mov
call
push
test
pop
es
aad
js
mov
xchg
adc
loopne
dec
jo
xor
aad
jnp
push
dec
push
fimull
lret
xor
inc
and
pop
testb
pop
sub
pop
sub
aad
fildll
pusha
jge
fisubrl
mov
push
loopne
mov
xorl
adc
mov
add
pop
icebp
or
push
cs
loopne
push
pop
lock
pusha
mov
pop
fdivrl
fdivs
add
fcoml
cld
loop
fsubrs
mov
repnz
xchg
jl
sar
gs
mov
stos
lea
out
call
push
pop
mov
mov
mov
jnp
pop
pop
push
loopne
push
pusha
mov
adcb
sub
xlat
adcl
adc
sbb
loope
outsb
adc
shll
add
ja
mov
push
mov
push
rolb
inc
icebp
push
loopne
mov
dec
jo
jno
pcmpgtb
cmp
xor
inc
add
lcall
push
mov
push
mov
dec
dec
insb
inc
push
mov
jns
xlat
es
adc
push
add
push
js
inc
test
push
repz
stos
inc
test
out
inc
push
ljmp
ljmp
add
sub
sbb
inc
out
pop
inc
dec
in
xor
icebp
lahf
mov
inc
dec
popa
dec
inc
dec
add
jnp
lahf
imul
insl
add
fdivrs
sbb
add
xchg
pop
push
add
inc
add
movsb
mov
inc
push
imul
sbbb
push
lods
jmp
xor
aas
jae
xor
push
in
rorb
test
ljmp
cmp
aaa
mov
add
test
cmp
sbb
xor
dec
addr16
cmp
not
mov
xor
outsb
push
or
pushl
sar
pop
cmp
inc
push
jbe
jb
dec
pop
inc
dec
scas
ret
xor
add
testb
lcall
inc
mov
pop
mov
xchg
sub
fimull
push
sarl
inc
push
data16
outsb
dec
or
call
in
push
push
lea
pop
movlps
mov
add
paddusw
add
push
data16
dec
je
imul
fildl
and
outsl
dec
aaa
jl
jl
mov
out
push
inc
pop
roll
clc
outsb
add
push
mov
mov
js
jnp
in
outsb
push
push
pop
ret
incb
mov
add
sti
inc
bnd
dec
inc
rolb
clc
inc
outsl
ja
jle
dec
mov
mov
popa
leave
inc
push
inc
or
inc
inc
xor
outsl
inc
sub
add
sbb
nop
inc
xchg
subl
inc
dec
das
push
test
insl
push
dec
leave
push
repnz
or
rclb
push
loop
clc
mov
outsb
xor
inc
sbb
pop
dec
xor
in
inc
pop
add
dec
or
sbb
inc
push
aad
arpl
and
movsl
fbld
inc
dec
dec
fwait
nop
xchg
cmp
and
mov
xor
shlb
outsl
inc
mov
mov
int3
push
loope
jp
test
addr16
dec
ficoml
adc
dec
mov
jl
jmp
adc
push
sbb
adc
lock
pop
mov
out
dec
insl
je
xor
and
inc
jo
inc
les
loopne
xchg
lds
addr16
aaa
jo
loope
sti
shrb
add
pop
rorl
xor
and
in
dec
add
cmp
push
addr16
sub
stos
push
fiadds
popf
sbb
mov
int
stos
sti
in
jno
sbb
push
jp
shrl
pop
add
push
ja
fistpll
mov
fistps
fdivr
out
inc
inc
imul
inc
fsubl
je
ljmp
push
push
dec
testl
inc
push
cmp
inc
push
push
push
push
inc
mov
mov
sub
popa
jmp
test
push
sbb
inc
jns
lahf
stos
out
jnp
xor
nop
dec
je
imul
ds
inc
dec
xor
jle
clc
xor
pop
aad
outsl
jo
into
dec
in
cmp
inc
mov
sti
inc
xchg
jmp
inc
xchg
jmp
das
iret
add
dec
scas
xlat
rol
ja
cmp
loopne
outsl
jb
bound
loopne
jmp
jo
aad
cwtl
mov
sbb
cmp
clc
cmpsb
fs
push
push
iret
jne
push
jae
les
mov
xchg
mov
iret
mov
js
inc
pop
dec
push
mov
dec
mov
shr
shl
mov
add
inc
cmp
push
pusha
push
aaa
mov
inc
push
lock
xor
out
mov
sahf
insb
push
xor
xor
rorb
gs
mov
xchg
in
scas
inc
dec
push
jns
push
lock
xchg
jbe
dec
inc
jmp
jno
fmull
fisttps
outsl
bound
loope
add
gs
repnz
insl
lock
adc
clc
inc
repnz
mov
arpl
sbb
inc
push
inc
shl
out
in
dec
insb
push
add
loopne
jbe
pop
jl
add
add
sub
fimuls
push
jmp
dec
dec
push
dec
dec
push
bound
adc
ret
fs
addb
dec
cld
pop
add
dec
movsb
mov
push
ret
insb
push
insb
dec
lods
xor
or
and
dec
imul
int3
jo
mov
xor
inc
push
xor
icebp
loope
dec
jmp
mov
pop
arpl
jmp
movsb
inc
jbe
lock
push
jmp
inc
dec
cmp
out
inc
pop
andl
cmpsb
pop
popf
cmc
std
pop
push
fs
jo
push
or
call
xchg
shl
mov
push
lea
add
push
fistpl
or
pop
and
jmp
ret
dec
lock
bound
jne
ret
data16
rclb
bound
repnz
dec
hlt
lds
je
push
push
push
dec
fimuls
xchg
push
jnp
xchg
call
dec
lods
fstpt
cwtl
xor
repnz
push
dec
mov
inc
push
ret
popa
dec
pop
cmp
ss
icebp
inc
mov
dec
idivb
lock
jns
xor
cmp
inc
inc
push
repz
or
jbe
test
insl
clc
nop
jne
data16
or
jge
jno
push
push
aaa
dec
in
xchg
clc
jmp
jno
jo
inc
or
pop
loop
inc
push
push
add
push
outsl
addr16
fwait
rolb
fldl
out
mov
je
flds
sbb
subb
js
push
jno
pop
out
or
lods
jae
loop
xchg
dec
inc
push
push
inc
lret
jbe
fadds
call
mov
add
ds
loope
xor
sub
ss
add
xor
xchg
nop
psubw
inc
js
mulb
inc
imull
cwtl
lret
mov
test
popf
xor
fimuls
sbb
sarl
add
pop
push
cli
pop
lock
add
add
aas
adc
jne
loopne
inc
inc
popa
addr16
repz
cmp
xor
add
push
in
in
js
push
dec
das
fnstenv
sbb
mov
fs
dec
dec
lock
and
dec
ss
fisttps
aaa
sbb
inc
push
push
pop
out
pop
test
inc
dec
int
jp
test
or
jae
fs
cld
mov
sahf
dec
jno
cmp
jl
cld
pop
push
popf
mov
and
pop
xor
dec
dec
pushf
xchg
ficoml
pop
or
jle
add
test
adc
lahf
in
mov
mov
mov
mov
jg
pushf
xor
inc
data16
pop
xchg
xor
loope
jmp
dec
movsb
outsl
or
mov
or
add
jmp
adc
cld
xchg
mov
sbb
test
push
push
inc
mov
mov
or
cli
fbstp
mov
inc
out
insb
add
shlb
test
scas
xlat
shl
jmp
into
xor
mov
inc
jmp
lds
ret
jmp
lock
jo
xchg
mov
or
jmp
mov
push
incl
in
mov
inc
mov
jecxz
add
jmp
or
push
xor
inc
push
test
clc
fistps
sbb
pop
bnd
and
push
leave
cmp
adc
inc
mov
pop
je
jecxz
mov
inc
inc
fnstcw
adc
fwait
icebp
push
std
dec
aas
call
jmp
mov
adc
ss
decb
lock
cmpsb
ret
sbb
jle
push
lret
cmpsb
sar
push
pop
or
outsb
mov
jmp
pushf
jmp
fwait
je
add
jmp
xchg
fdivrl
mov
arpl
adc
push
or
or
mov
dec
lock
jmp
pop
sbb
shll
jmp
clc
ret
jae
aas
push
add
pop
sub
xchg
scas
dec
sub
or
xor
mov
mov
ss
scas
and
push
movsb
dec
jno
or
mov
aam
addl
lret
orb
jmp
push
xchg
and
adc
clc
add
jmp
pusha
loopne
sub
jmp
sti
sbb
inc
xor
cs
lods
jb
cltd
inc
jmp
xchg
jle
mov
mov
sub
dec
loopne
add
ficompl
lret
ret
fucomip
jg
ds
or
ds
aaa
jmp
mov
cld
add
dec
pop
ljmp
gs
loop
outsb
inc
lock
loopne
mov
cmp
push
xchg
inc
out
cli
aas
add
loop
inc
cmp
aas
lcall
pop
pop
mov
js
out
call
adc
call
push
cmp
mov
and
cmpsb
inc
jbe
adc
gs
orb
adc
test
push
mov
std
adc
push
jae
mov
sbb
xor
jns
and
ret
xor
adc
or
cmp
xchg
clc
xchg
mov
arpl
test
adc
sbb
lret
jo
adcb
enter
or
or
mov
pop
cltd
adc
jle
xor
mov
lock
cwtl
fimuls
es
cmc
std
adc
jmp
and
outsb
xchg
and
gs
hlt
in
shrb
icebp
jno
or
sbb
test
fidivs
addr16
arpl
inc
fsubs
ds
lcall
inc
add
pop
pop
adc
fstps
rep
shrl
xchg
cmp
jo
cld
pop
fldl
jb
mov
mov
and
out
dec
inc
jbe
mov
sub
les
cld
add
mulb
lcall
mov
ss
mov
adc
in
mov
cli
movl
in
pusha
push
loop
cmp
movsl
jb
arpl
ret
mov
or
jmp
std
pop
movsb
pop
insl
xor
lods
push
fcoms
inc
addr16
ss
sarb
mov
add
clc
and
loopne
sahf
mov
adc
je
into
pop
and
aad
xchg
push
rcrb
cmpsb
cmp
and
leave
mov
dec
and
pop
adc
stos
insl
adc
add
add
popa
test
push
lods
or
pop
cmp
sub
rcrb
inc
and
fnstcw
push
push
jecxz
sahf
test
ds
fbstp
dec
add
xchg
sub
arpl
cli
scas
push
inc
sbb
dec
mov
jecxz
inc
dec
mov
fucomp
or
xor
pop
das
cli
int
bound
cmp
repz
loope
loopne
mov
shrl
fdivrl
cwtl
xor
movsl
addb
inc
jnp
sti
xor
xor
cmp
dec
adc
cmpsb
repz
sub
mov
fimull
sub
popa
xchg
lock
lock
pop
push
loopne
push
cli
pusha
inc
mov
lds
outsl
xchg
jne
mov
fwait
cmp
bound
xor
mov
dec
sbb
and
cmpsb
dec
popa
push
pushf
sbbb
inc
xchg
fisttpl
std
mov
call
pop
inc
mov
push
xorb
stos
clc
shr
mov
in
mov
jg
and
es
pop
mov
je
out
fbld
fisubl
inc
adc
loopne
test
or
jmp
dec
dec
add
push
ffreep
jl
dec
jp
mov
mov
mov
mov
loopne
stos
sub
test
ds
sahf
clc
add
ror
data16
clc
or
scas
mov
das
clc
xchg
cld
sarl
test
cmc
sahf
jmp
xchg
and
out
xchg
insb
repz
add
push
mov
jecxz
in
fdivrl
in
jmp
cs
or
cmpsb
mov
rolb
lret
adcl
push
jno
in
inc
pop
je
aaa
in
jp
sub
inc
sub
shrl
bound
inc
sbb
pop
popa
test
cmp
sub
and
jne
adc
push
scas
xor
pop
xlat
outsb
movsb
sbb
mov
add
add
in
sub
insl
push
jle
xorb
jmp
add
or
pop
lret
aam
jns
xchg
stos
fimuls
inc
mov
ss
scas
adc
adc
jle
ljmp
movsl
scas
jp
jo
jge
xor
mov
loopne
mov
bound
loopne
inc
push
testb
mov
push
jo
jb
sahf
pop
je
fcmovne
add
and
push
test
scas
stos
stos
mov
dec
pop
inc
pop
xchg
add
aad
test
xor
and
into
test
sub
shl
icebp
sub
repnz
negl
pusha
test
dec
jo
and
xchg
xchg
and
mov
call
jo
mov
adc
sbb
arpl
clc
divb
fisttps
andb
enter
cld
pop
clc
sub
lock
loopne
add
mov
sbb
push
std
add
test
cmp
cpuid
add
mov
cmc
mov
rorl
shlb
pop
mov
fstpt
mov
lea
jp
mov
push
lods
rorb
stos
xor
cwtl
int3
jb
sub
dec
popa
icebp
pop
insl
cmc
adc
ror
push
or
mov
jp
inc
push
sub
xchg
pop
or
push
push
loope
notb
mov
and
lods
shlb
shll
test
mov
and
push
mov
or
fstpt
sbb
sub
lods
add
addb
push
push
js
movsl
mov
cs
aad
jo
xchg
adc
fs
out
add
faddl
mov
sahf
call
add
sub
cmp
adcl
push
jp
jb
mov
push
std
rolb
or
inc
js
sbb
xchg
push
dec
and
pop
push
fcomps
sbb
fidivrs
notl
outsb
cmp
inc
hlt
icebp
rcr
push
adc
add
cmp
fs
and
xor
ss
pop
loope
fimuls
cli
aam
xor
pop
mov
mov
pusha
into
and
dec
push
vmread
sbb
addl
xchg
shlb
test
push
dec
or
inc
sbb
stos
mov
adcl
cli
push
jp
push
push
rolb
sbb
mov
mov
cmp
jbe
pusha
xor
adc
jmp
or
sbb
rol
xor
inc
mov
fisttps
cld
push
pusha
movsb
pop
jnp
add
push
push
je
mov
pop
mov
lock
adc
mov
dec
push
or
rcrb
or
cs
call
enter
pop
mov
or
xor
cmp
and
and
stos
mov
cs
fimull
push
pop
pop
sub
jp
insb
cmpsb
loop
pop
xor
add
mov
jecxz
pop
pop
or
cmc
sbb
mov
sbb
cmpsb
jp
aad
push
xor
dec
add
sub
rclb
pop
mov
rcrl
pusha
filds
jmp
mov
stos
xor
sub
and
rclb
mov
fnstsw
sub
mov
gs
push
cld
call
and
push
or
pop
les
or
test
xlat
rorb
data16
lock
ret
nop
js
pusha
xchg
andps
jb
mov
add
es
dec
and
xor
dec
dec
mov
sub
or
sub
out
repnz
push
jb
fmull
lret
or
push
dec
ss
ds
mov
dec
addr16
das
scas
jl
and
xchg
int
mov
mov
add
popa
inc
adc
sbb
pop
adc
xor
jns
imul
mov
cs
mov
jnp
ret
jae
jge
loopne
jae
xor
or
xor
mov
ret
add
inc
cli
inc
mov
cmp
divb
movb
icebp
call
sub
inc
mov
dec
inc
fnstenv
imul
jl
icebp
mov
inc
enter
mov
call
mov
adcb
push
push
loopne
mov
cmpsb
sub
rcl
fdivp
xchg
test
out
inc
or
add
jl
fildl
pop
es
sbb
ret
icebp
into
out
pop
adc
pusha
jge
xor
jmp
daa
lahf
or
jmp
ds
pop
cmp
ret
or
xacquire
push
inc
aas
inc
fiaddl
xor
add
loopne
call
mov
fucomip
cli
fisubs
dec
push
stc
mov
sub
sti
sbb
mov
add
add
pop
and
sbb
cmp
flds
inc
rolb
lods
mov
imul
inc
dec
mov
cwtl
call
into
rorb
cmp
and
rorl
pop
gs
popf
or
rclb
xchg
xor
mov
sbb
mov
push
fldl
sub
add
push
fstp
dec
stc
sti
xor
daa
mov
insl
shl
pushf
idivl
in
jmp
jle
test
imul
fildl
sbb
loop
and
dec
pop
lcall
add
or
jns
jb
mov
push
cmc
push
jns
in
ljmp
sbb
cs
xchg
dec
lret
jp
cs
ss
int
js
jle
inc
vmread
jl
mov
inc
sbb
shrl
lock
and
test
loopne
or
pop
lock
pop
in
int3
mov
or
push
in
cmp
push
aam
push
dec
ret
add
mov
mov
cmp
int
ret
and
mov
xor
mov
pop
gs
dec
mov
rcrb
xchg
fildll
sbb
lret
dec
add
daa
sub
frstor
inc
add
mov
xorl
add
out
test
fistps
push
dec
rorl
mov
out
lock
cld
pushf
cmp
inc
inc
nop
push
rcrb
repnz
fsubrs
pop
mov
data16
icebp
dec
sbb
pusha
mov
jo
pop
xchg
push
jge
imulb
out
lock
dec
dec
in
scas
mov
cmp
ljmp
pop
mov
mov
jbe
add
bound
stos
pop
jne
push
cmp
push
icebp
in
ret
mov
fisubrs
or
or
sarl
mov
stos
pop
mov
ds
lcall
and
jmp
loope
adc
cli
fdivrl
add
push
mov
repnz
fs
cs
bound
xor
jle
pop
clc
add
hlt
call
std
or
xchg
jle
stos
pop
daa
or
fidivs
leave
imul
es
in
iret
je
push
add
out
cli
adc
pushf
call
aam
insb
cli
stc
inc
push
je,pn
cmp
and
add
and
inc
movb
add
add
add
out
test
stos
aad
clc
dec
bound
push
fxtract
push
repz
sahf
div
outsb
lret
jle
xchg
cmp
push
adc
push
rolb
sbb
add
add
lahf
xchg
jae
dec
xor
add
and
js
xchg
nop
mov
mov
lock
loopne
mov
addr16
jle
or
add
icebp
incb
fisttps
push
dec
mov
inc
cmp
gs
jbe
in
dec
pop
nop
nop
clc
je
push
cmp
lahf
andb
lock
mov
push
xchg
xchg
or
dec
adc
es
dec
ret
call
outsb
loopne
inc
inc
inc
aaa
gs
mov
rclb
les
xor
sarb
ss
clc
data16
lret
jbe
push
mov
cmpl
inc
push
mov
add
jno
dec
push
pop
fs
cmc
stos
push
arpl
pop
jo
push
push
xchg
mov
push
xchg
or
sbb
ljmp
dec
insl
outsb
jno
mov
jle
inc
popf
icebp
and
jae
cmp
inc
xchg
addb
cli
sti
xchg
out
rep
dec
inc
jp
mov
mov
lds
or
push
push
test
cmp
bound
add
es
mov
fdivrl
bound
inc
cmp
push
shrb
jno
je
inc
dec
icebp
add
add
aaa
popa
push
jo
push
fsubr
push
sbb
ret
aaa
lds
pop
outsb
inc
dec
xor
shrb
mov
clc
adc
leave
mov
das
test
dec
decb
bound
mov
jns
mov
add
mov
jne
divb
push
jbe
aam
dec
insb
dec
push
mov
jecxz
loopne
push
dec
mov
cmp
sarl
outsb
inc
push
cli
ficomps
fadds
mov
adc
add
movsb
dec
add
cwtl
jnp
call
adc
inc
nop
into
ds
xchg
push
ja
clc
mov
dec
imul
pop
in
stos
pop
das
repnz
mov
or
insl
jno
out
imul
je
iret
inc
add
ret
ja
shlb
pop
addr16
das
mov
dec
testb
push
scas
xor
inc
cmp
rcrb
clc
js
cmp
stos
lret
pop
xchg
loope
test
hlt
mov
sti
ss
popa
inc
fs
stc
mov
cmp
fsubrs
repnz
xchg
fiaddl
rcll
loopne
xchg
insl
dec
jecxz
insb
icebp
subl
fidivs
rorb
mov
shlb
push
xchg
lahf
sub
js
add
add
mov
incb
lcall
dec
pusha
jl
jae
inc
mov
push
sbb
fidivrl
sub
push
inc
imul
jbe
movsb
mov
in
stc
cmp
ds
jo
or
xor
in
jo
mov
mov
stos
in
pop
xor
shll
add
leave
jae
mov
movsb
inc
or
mov
enter
fcomps
xor
cli
ret
popa
pop
dec
test
inc
fcmovb
js
mov
addr16
fwait
outsb
lret
stos
dec
inc
cmp
xor
fs
xchg
push
xchg
add
mov
xchg
push
jae
outsl
xchg
outsb
bound
rorb
fidivrs
jns
dec
fistps
xchg
dec
cmp
js
jb
mov
cmp
adc
loop,pn
shrb
outsb
insl
inc
mov
sahf
ret
push
push
and
dec
fsubr
shufps
insb
push
push
in
mov
cmpsb
jp
rolb
iret
sbb
inc
dec
push
inc
push
cmp
mov
in
xchg
jg
jo
inc
add
push
arpl
inc
sbb
movsl
sub
cmp
std
ffreep
bound
ss
adcb
rclb
or
pusha
mov
jae
aaa
jecxz
outsl
adc
jecxz
sub
sub
jmp
addr16
push
in
xor
jl
clc
jmp
jmp
jge
aaa
out
push
nop
out
into
outsb
out
rorb
cmp
cmp
mov
jp
jp
subl
pop
or
shl
fcomps
pop
icebp
outsl
clc
das
js
mov
aam
or
stc
jmp
xchg
mov
dec
pushf
in
and
ljmp
inc
and
clc
das
ret
sbb
push
loop
xchg
outsb
add
cmp
xor
mov
clc
icebp
stc
mov
ret
mov
xchg
push
orb
cmp
pop
cmp
test
movsb
push
sub
ljmp
out
and
loopne
xor
jecxz
or
push
inc
inc
cld
aas
lock
xor
rcll
xchg
sar
inc
ljmp
adc
loopne
mov
xor
mov
aas
jmp
xor
mov
pop
int3
mov
and
pusha
data16
pop
negl
jle
shlb
movsb
loopne
or
pop
icebp
pop
adc
loopne
inc
dec
sub
pop
je
jle
adc
jg
ret
xchg
cmp
sbb
aas
fcos
add
mov
push
ds
mov
in
lahf
sub
or
and
inc
lds
imul
jmp
jg
pop
retw
mov
jmp
mov
cwtl
xor
dec
outsl
inc
push
mov
dec
xor
bound
sbb
unpcklps
sub
rolb
pushf
dec
xor
inc
mov
out
cmp
inc
fs
or
fmuls
and
inc
mov
sar
mov
pop
in
aad
add
mov
icebp
das
les
mov
std
mov
inc
sub
adc
clc
ja
push
add
scas
xor
or
pop
lods
ret
xlat
mov
pop
jo
flds
dec
or
sub
adc
push
mov
ret
sar
lock
adc
sub
rclb
mov
testb
pop
jb
sub
jae
mov
ret
sub
imul
xor
fcmovnb
adc
mov
ja
es
fmul
cmp
fcmovb
in
pop
dec
mov
add
or
into
add
scas
or
clc
pop
push
ja
std
cmpl
pop
mov
pop
mov
int
out
mov
cmp
push
push
jmp
hlt
les
and
push
dec
push
pop
mov
lcall
out
jbe
and
mov
mov
ljmp
sub
and
push
orl
xor
cld
mov
nop
dec
insl
or
imul
xor
add
push
dec
and
clc
sub
add
jg
push
xor
jecxz
aaa
cmp
pop
lcall
movsl
bound
mov
or
mov
jle
or
cmp
notb
std
or
aad
dec
xor
pop
adc
pop
in
clc
or
pop
sbb
nop
aad
pop
ss
push
leave
dec
xor
pop
rcrb
mov
aad
mov
push
push
mov
push
rep
adc
outsl
or
loop
clc
push
sbb
adc
pop
lcall
fadd
stos
stos
aad
mov
sbb
inc
or
adcb
push
xor
xchg
sub
sbb
std
inc
inc
xor
call
or
dec
sti
insl
and
andb
ficompl
ficompl
ljmp
cli
fistpll
xor
xor
lods
or
mov
add
fcmovb
and
adcb
pop
mov
add
cmpsb
jmpw
loopne
add
push
lea
mov
or
add
je
adc
pop
es
shrb
addl
test
movsb
cs
shl
xor
xchg
xchg
aaa
cmpb
push
pop
pop
pushf
add
adc
push
call
mov
insl
add
inc
mov
js
push
jmp
cmpsb
mov
push
repz
std
dec
call
cmpsl
pop
bound
idivl
bound
sbb
push
mov
mov
mov
or
cmp
addr16
dec
out
mov
rcrb
sbb
xchg
aas
shll
add
enter
push
test
test
lret
fnstenv
outsb
sub
adc
pop
fimuls
mov
jbe
clc
inc
xchg
out
std
call
xor
xlat
pop
fisubrs
cmpl
pop
mov
and
jg
mov
xchg
sbb
add
fwait
jne
dec
arpl
or
adc
pop
sub
dec
js
mov
pop
stos
inc
sti
int3
shlb
lea
push
push
mov
pop
sbb
outsl
enter
lea
jns
jl
mov
mov
data16
cmp
mov
mov
repnz
push
sub
das
pop
push
sub
pop
push
dec
lods
mov
push
or
into
jp
fs
shlb
jb
inc
subb
in
mov
test
std
mov
or
vdivps
cli
and
fs
pop
pushf
mov
mov
test
mov
decb
xor
fs
bound
mov
lds
mov
pop
mov
push
jmp
cmpsb
cs
stos
mov
xchg
cmp
jb
nop
and
xchg
push
or
std
jae
pop
mov
ret
in
jns
lahf
cld
fs
insl
push
dec
js
sti
mov
push
nop
pop
dec
scas
inc
mov
rorl
mov
mov
ljmp
sub
jg
xchg
in
xchg
pop
fnstsw
jae
outsb
xor
movsl
outsb
repnz
mov
xchg
mov
jbe
andl
dec
dec
xor
movsb
push
add
lock
cwtl
pop
hlt
mov
jp
jo
and
int
mov
mov
aaa
jnp
iret
push
pushf
cmpl
xchg
push
cwtl
mov
popa
jl
adc
outsl
add
shrb
cltd
and
push
mov
xchg
movsb
cwtl
xchg
cmp
fildl
scas
dec
js
xlat
les
fiaddl
jp
shlb
insb
mov
insl
shrb
mov
add
pop
cs
ss
rclb
jo
xorb
in
insl
dec
loopne
test
xchg
clc
pop
xchg
jns
test
imul
pop
ret
xor
jmp
in
sbbb
xchg
stc
in
int3
pop
or
mov
xchg
xor
in
xchg
jmp
jae
call
xor
daa
xorb
mov
dec
cmp
les
pop
stos
mov
jno
dec
outsl
mov
adc
xchg
mov
imul
ja
adc
pop
icebp
out
loop
push
lods
add
lret
pusha
cmp
fisubrs
in
test
push
cmc
pop
lock
stc
enter
loope
pop
lock
add
or
andl
sub
cmp
int
sti
or
dec
push
push
clc
pop
das
and
js
sahf
push
or
pop
pop
jmp
nop
jne
jno
add
dec
icebp
xor
inc
mov
pop
and
out
push
and
mov
into
into
sbb
pusha
sub
push
inc
cwtl
jmp
jbe
sub
jo
push
pop
test
fidivl
cmp
adc
dec
movsb
int3
cmpsl
pusha
jg
inc
dec
inc
xchg
out
popa
xor
add
or
push
hlt
into
adc
sarb
stos
shll
adc
push
mov
dec
and
lock
sti
inc
test
loopew
jecxz
cwtl
insl
push
inc
aaa
loope
sub
push
lret
add
bound
fiadds
outsb
inc
inc
test
mov
sub
dec
mov
jecxz
in
dec
rol
shlb
jne
inc
pusha
add
xlat
inc
sbb
lods
insb
inc
and
pop
push
jae
push
push
ja
push
adc
pushf
icebp
nop
sub
inc
fmul
clc
push
mov
pop
aad
pushl
ja
mov
xor
les
jp
push
pop
ss
pop
test
jo
mov
jne
add
dec
rcrb
loopne
mov
dec
int3
push
cmp
sub
andl
sub
or
or
outsb
inc
add
adc
xor
shl
imul
cltd
mov
xchg
lods
test
dec
sbb
xchg
or
jl
pop
or
adc
mov
test
sbb
mov
or
icebp
sub
push
call
rorb
cmp
or
xchg
scas
mov
ljmp
repz
inc
add
push
add
add
imul
lahf
inc
inc
lret
cmp
lods
mov
rolb
push
sbb
sbb
pop
push
std
sbb
cmpsb
out
xchg
addb
insl
sahf
ljmp
mov
das
jmp
xchg
adcb
rclb
popa
jmp
mov
cmp
push
iret
loope
xchg
insl
dec
adc
leave
inc
jmp
add
mov
add
pop
outsb
add
ret
popa
and
mov
xchg
inc
mov
test
cli
sub
xor
sar
sbb
mov
mov
sub
test
add
clc
jmp
mov
or
pushf
addr16
add
and
mov
rolb
xor
mov
add
mov
ds
loopne
pop
dec
call
mov
in
cmpsb
push
bnd
push
pop
mov
loop
adc
pop
lock
jmp
scas
pmaxub
scas
enter
bound
aaa
jmp
loopne
xor
out
fstpt
mov
in
fidivrl
pop
jbe
sbb
or
pop
adc
outsb
mov
divb
daa
xor
add
les
dec
add
xchg
and
sbb
icebp
and
icebp
ljmp
and
jle
fwait
xor
inc
mov
or
mov
ss
lods
xlat
montmul
fdivrp
jbe
mov
lods
push
jp
adc
fcomip
or
inc
call
mov
push
fwait
decl
hlt
jg
loopne
add
pusha
sbb
jl
call
outsl
aam
sbb
inc
test
add
pop
add
lcall
call
mov
jge
or
sahf
andb
mov
cmc
shlb
sub
or
sub
ds
jg
sahf
adc
or
or
les
rcr
test
ja
lds
xchg
sahf
dec
jmp
in
cltd
mov
push
imul
nop
les
fildll
addb
dec
aad
dec
imul
fstps
pusha
sub
insl
sarl
test
mov
mov
pop
int
xor
xchg
cli
pop
add
cmpsl
fs
shll
pxor
dec
fs
ret
add
lock
sbb
lods
jb
shll
mov
pop
xchg
xchg
sub
or
add
pop
shl
jb
xor
out
jg
std
cmovb
ljmp
sub
sbb
popa
mov
pushf
mov
andb
jbe
xor
and
push
sub
mov
jg
adc
push
jmp
cld
mov
stos
lods
test
out
dec
jmp
test
pop
add
fldl2t
push
push
vmread
add
nop
sub
int3
pusha
dec
jg
cmp
jp
stos
add
or
repnz
stc
sarb
mov
jb
and
call
pusha
pop
mov
jg
push
mov
dec
cmc
fsubrs
or
pop
mov
push
mov
nop
mov
dec
loopne
cmp
outsb
je
insl
es
adc
cmc
nop
jp
pop
inc
inc
dec
das
and
pop
bound
aaa
cld
pop
call
and
adc
or
fwait
loope
test
imul
xlat
sbb
push
iret
fsubrp
inc
shl
in
pop
enter
inc
jbe
shlb
or
data16
bnd
test
fwait
or
out
xor
jo
sbb
faddp
and
sub
push
pop
rol
sbb
loope
push
mov
jmp
and
fsubl
ja
jecxz
loopne
sahf
call
push
push
or
pop
dec
mov
add
scas
push
dec
adcb
pop
add
jge
jg
incl
mov
xchg
inc
imul
clc
lret
das
sub
fistl
stos
add
nop
mov
push
outsb
inc
cwtl
lock
sub
cmc
pop
sub
push
push
push
ds
add
or
adc
sub
push
sbb
cltd
adc
sahf
add
decl
cmp
dec
roll
cmp
ljmp
mov
jge
fnstenv
fstpl
mov
xor
sbb
sub
sbb
in
jecxz
ja
xchg
or
xchg
mov
pop
lea
xchg
push
in
es
scas
push
mov
mov
sub
cs
pop
loop
aad
mov
stos
inc
pop
sub
shl
mov
push
sbb
cmpb
stos
and
and
adc
pop
mov
pop
xor
adc
adc
cmc
jmp
add
lock
outsl
lahf
push
pop
add
mov
adc
test
and
scas
xlat
mov
add
notb
add
jae
add
jbe
js
lahf
cmp
sbb
pop
sbb
mov
das
jmp
cli
icebp
add
imull
sub
add
add
repnz
jne
shl
dec
and
insl
pop
mov
xchg
xlat
inc
xchg
jo
lret
xchg
jmp
addr16
imul
mov
jno
cld
adc
push
sbb
je
and
repz
jmp
lock
cs
push
push
sbb
sub
js
xchg
leave
push
mov
dec
adc
add
xchg
in
ss
int
aaa
loopne
pushf
cmp
or
inc
sub
mov
mov
push
mov
adc
test
add
lock
jne
jae
sub
ljmp
inc
add
cmpsb
jl
mov
xchg
lds
pop
add
aam
jge
outsl
and
jg
nop
push
push
jns
sub
lods
in
jmp
ljmp
adc
enter
push
jbe
fimull
sbb
pop
push
mov
jbe
rclb
movsl
lret
and
mov
cld
push
out
pop
push
add
dec
push
push
or
sbb
out
push
xorb
sbb
inc
adc
xor
cli
data16
or
jnp
shlb
insl
push
or
dec
push
mov
mov
sbbb
mov
scas
lcall
dec
add
ds
push
stos
dec
sub
popa
call
stos
inc
shlb
dec
mov
call
call
and
and
sbb
mov
popa
sarb
push
rclb
popa
push
cvtpi2ps
pusha
outsl
cmpsb
dec
aaa
xor
inc
rorb
out
adcb
push
outsl
xor
out
insb
insl
inc
dec
and
js
push
push
testl
mov
fcmovbe
stos
add
xor
mov
aaa
pop
ret
pop
clc
sbb
pop
or
stos
dec
aaa
jno
cmp
mov
sarb
pushl
repnz
idivb
bound
je
jle
ret
jmp
fbld
and
sub
fistpll
mov
gs
xchg
pop
mov
add
mov
out
scas
enter
cmc
inc
inc
ss
call
adc
or
movsl
jle
aas
push
xor
mov
mov
negb
add
mov
add
xchg
fdivrs
pop
fwait
int
lahf
sbb
inc
pop
test
mov
adc
jne
jle
inc
call
aam
out
sahf
add
adc
ss
jno
lods
shlb
sar
lods
add
subb
xor
push
ret
add
pmaxsw
pop
dec
clc
inc
and
and
cld
adc
cs
daa
scas
ret
popa
js
mov
jle
fdivs
mov
pop
xchg
xor
xor
cmpsb
popa
sbb
add
add
mov
loopne
mov
lret
aam
mov
pusha
decl
ret
push
arpl
aas
pop
xor
nop
sbb
xchg
out
fcomip
pop
sub
adc
cltd
fwait
dec
mov
aaa
or
cmp
in
xchg
or
sbb
lods
fs
aad
pop
rclb
je
jbe
cwtl
lods
cld
loop
sub
inc
arpl
icebp
loop
pop
mov
jmp
dec
jl
fmuls
lods
sbb
cmp
outsl
adc
sar
sahf
push
mov
push
mov
aam
rolb
mov
jb
pop
out
rcrb
mov
or
dec
and
in
mov
sub
mov
sbb
mov
and
leave
sbb
xlat
sub
cltd
std
or
subb
mov
cwtl
mov
call
inc
cld
stos
out
mov
mov
and
push
ja
outsb
adc
pop
and
jmp
test
shlb
or
sub
ds
leave
rorl
dec
test
popa
pop
js
or
jo
jmp
jno
hlt
add
push
fisubs
les
sub
lds
pop
shl
in
imul
add
pop
add
cs
adc
sbb
aaa
clc
loop
dec
jg
inc
hlt
sti
mov
pop
cli
inc
in
outsb
aam
cmp
scas
lret
scas
andl
push
pop
mov
sub
adc
mov
mov
jg
pop
mov
xor
push
mov
popa
mov
movsl
dec
test
pop
mov
pop
or
and
add
gs
mov
xor
mov
mov
pop
leave
adc
adc
mov
addr16
or
mov
ret
inc
sub
loopne
pushf
push
mov
orb
sarb
jnp
push
shll
push
cld
pop
xchg
jg
adc
je
mov
lcall
mov
and
out
adc
jg
fdivrs
shrl
out
xorb
jbe
xchg
insb
cmc
subb
add
lods
inc
inc
daa
loope
ds
sbb
mov
in
enter
jbe,pn
add
inc
sbb
test
es
cld
jg
les
fbstp
mov
fiadds
inc
lds
or
sbb
nop
es
cmp
shrb
movsl
ret
jns
mov
jmp
into
cmpsb
add
sbb
cmp
lea
jbe
add
jnp
push
mov
sbb
push
xchg
icebp
sub
dec
xor
and
pop
sub
mov
pop
aam
and
or
je
jg
rcll
mov
clc
cmpl
enter
mov
loop
rorb
pop
inc
push
rol
aaa
mov
data16
in
fisubl
sub
ljmp
sbb
push
cmp
ljmp
or
dec
pop
push
cltd
jne
inc
jecxz
aas
in
mov
clc
push
int3
xchg
fildl
pop
mov
sarb
jb
sub
jmp
cli
mov
mov
idivb
fiadds
shr
stc
xor
add
mov
ret
sbb
iret
lods
std
outsb
pop
pop
cmpsb
add
cld
cmpsl
mov
jb
mov
enter
dec
add
pop
mov
mov
mov
cmpsb
cmpsb
ss
pop
mov
aaa
dec
sub
pop
popa
popf
out
fsubrs
xchg
jmp
or
push
cli
xchg
mov
mov
mov
push
sbb
sub
mov
adc
or
xchg
jp
inc
and
sbb
ret
pop
dec
lcall
insb
into
pop
inc
or
mov
int3
mov
inc
rcr
psraw
mov
push
fsubr
xchg
mov
push
imul
xchg
and
push
and
out
push
push
out
mov
or
xor
lret
popf
stos
push
popf
mov
pop
movb
dec
in
mov
lock
pop
xor
in
xchg
ds
je
sbb
xchg
mov
xchg
rcrb
jle
pextrw
add
jl
add
push
xor
pusha
xchg
cmp
fadd
mov
or
outsb
adc
push
inc
jge
push
push
inc
jb
push
shl
negb
es
add
int3
lea
test
lods
xchg
adc
fsubr
pop
push
dec
imul
sar
cs
jo
cmp
and
jmp
cmp
mov
mov
mov
iret
push
pop
shll
and
insb
dec
lods
and
dec
cld
sbb
push
sub
pop
xchg
xlat
dec
push
aad
jg
lock
or
push
add
fwait
movsb
xchg
ds
sbb
add
mov
ret
push
adc
aam
inc
subb
jmp
jmp
iret
and
adcb
loope
xor
adc
push
mov
inc
shlb
mov
mov
pop
les
and
test
addb
cli
mov
orb
orb
mov
push
pushf
cmp
xor
pushf
gs
or
push
and
ret
loopne
rcl
sub
inc
loop
stos
push
cmp
cmp
xchg
or
push
daa
aam
or
and
aas
jmp
rolb
in
cld
in
sbbb
dec
in
jb
pop
in
pop
divb
jp
into
testb
add
adc
dec
xor
cmp
fwait
jno
orb
push
inc
add
pop
loope
mov
test
sub
adc
mov
mov
push
mov
fcomps
xor
push
scas
sbb
pop
popf
jle
dec
in
jmp
ud0
pop
js
jbe
cmpsl
inc
sbb
jecxz
ljmp
loopne
and
add
cs
adc
call
inc
movl
mov
push
loop
mov
jbe
imul
lock
testl
lret
inc
inc
mov
push
mov
in
pusha
std
mov
add
inc
mov
gs
xchg
fisubl
fwait
mov
xor
push
mov
addr16
xor
sbb
inc
jne
add
ljmp
inc
xor
pop
inc
jle
jge
and
inc
movb
cli
lods
mov
cmpsb
js
sbb
or
inc
mov
dec
pusha
xchg
stos
test
and
inc
dec
push
mov
addr16
push
jbe
inc
out
pusha
pop
js
jb
stos
jmp
pop
lods
push
and
ja
insl
mov
ficoml
outsl
inc
inc
pop
mov
dec
push
inc
js
dec
dec
add
jl
insl
inc
add
dec
mov
ds
xchg
dec
inc
adc
aas
test
movsb
xlat
pop
inc
inc
fadd
mov
sub
push
stos
add
push
pop
movsb
or
std
hlt
ret
push
add
in
ret
mov
movsl
sub
inc
mov
cwtl
pop
dec
aaa
sbb
inc
dec
inc
add
adc
jbe
add
xor
jno
fs
add
push
aaa
push
loope
inc
lahf
aam
fimuls
add
in
lret
add
int3
jns
popa
xor
js
outsb
clc
ljmp
sub
xchg
ret
into
mulb
inc
jl
rcrl
mov
jbe
dec
dec
inc
aam
jo
sbb
add
sub
xchg
add
ja
inc
mov
ret
dec
js
add
pop
pop
jb
dec
clc
js
fsubrs
cmp
data16
mov
fcomps
jo
bound
cmp
mov
inc
sbb
fidivs
adc
push
add
test
and
mov
popa
clc
aaa
cmc
cmp
stc
cli
lret
pusha
xor
lcall
dec
insl
and
mov
fsubl
mov
push
das
inc
jae
imul
nop
rolb
iret
dec
push
popf
mov
stos
jge
loop
lock
jbe
push
pop
inc
push
inc
imul
daa
sahf
inc
push
add
xor
ljmp
outsl
inc
push
jno
movl
xor
dec
out
lcall
mov
mov
sub
dec
push
cmp
jecxz
pop
fdivrs
sbb
ffreep
pusha
sar
push
xor
das
loope
or
call
push
inc
sub
rolb
mov
xor
scas
insb
mov
add
inc
push
mov
push
dec
pop
dec
xchg
dec
mov
push
call
dec
out
loopne
push
add
cmp
and
es
dec
ret
cmp
gs
dec
fisttps
enter
or
cmpsl
dec
mov
inc
push
sbb
push
fs
clc
popa
push
ds
push
dec
fsubr
dec
xchg
ja
lret
ret
cld
cmp
dec
insl
mov
dec
push
push
dec
je
enter
push
push
icebp
dec
loop
popf
movsl
in
fisttpll
ffreep
dec
dec
jbe
lret
inc
test
or
xor
push
ss
inc
adc
pop
inc
imul
pop
stos
dec
inc
pop
pop
popa
lahf
es
dec
inc
out
jae
outsb
jb
fadd
dec
xchg
jne
ss
lret
je
out
add
jle
jbe
je
push
icebp
mov
dec
inc
dec
push
jle
imul
insl
sti
and
mov
insl
dec
aam
stos
mov
arpl
jno
sbb
push
imul
shll
inc
outsl
pop
jmp
dec
stos
jl
push
bound
mov
xor
inc
je
inc
loopne
dec
inc
pusha
loopne
loopne
into
dec
dec
jl
sub
push
push
out
push
lock
push
decb
adc
pop
push
jne
movsb
sub
bound
out
mov
cmp
or
and
jne
fcmovne
outsb
cltd
mov
push
dec
mov
cmp
jae
push
jae
dec
inc
push
mov
outsb
imul
cmpl
arpl
inc
push
lock
mov
popa
ja
ret
cmp
xchg
mov
mov
into
ret
mov
fs
divl
pop
xor
rolb
xchg
xor
sahf
into
push
xor
mov
pop
mov
inc
jb
push
lcall
push
push
imul
call
js
dec
adc
inc
pop
lahf
shr
mov
xor
mov
push
pop
jo
xchg
jecxz
add
dec
xor
inc
push
pop
sub
loopne
hlt
out
imul
jne
adc
jb
jno
mov
cmpsb
mov
dec
clc
fildll
dec
outsl
push
push
mov
pop
sub
cmp
mov
pop
lods
cmp
pusha
jmp
pop
aad
or
in
fsubr
jns
cmp
inc
mov
and
hlt
aas
pop
lock
rcr
rcrb
scas
js
lret
in
es
insb
test
jmp
adc
std
testb
dec
pop
xchg
jmp
ret
adc
mov
scas
inc
test
jp
int3
or
and
jmp
or
xchg
in
xchg
gs
je
push
pop
push
movsb
jmp
jp
mov
cld
xchg
or
das
jmp
inc
jmp
daa
cs
ret
sub
inc
cmp
call
jbe
sub
push
lock
jmp
popa
fldt
adc
adc
cmpb
xchg
inc
pop
shll
xchg
xchg
pushf
dec
push
pop
ds
loope
popf
mov
xchg
pop
jg
out
pop
jmp
inc
dec
sbbb
movsl
cwtl
add
mov
push
add
mov
dec
adc
mov
leave
decl
sbb
cs
sbb
jmp
sti
and
add
lock
jnp
sub
clc
jmp
push
cli
mov
mov
and
jbe
jge
jbe
jl
jo
dec
mov
fcoms
adc
add
sbb
mov
jno
mov
inc
shlb
mov
mov
sbb
roll
push
mov
ficomps
adc
fistpll
push
hlt
ret
fildll
add
pop
and
nop
incb
adc
xchg
and
pop
jmp
and
cmpsl
pop
sub
jbe
jns
push
sub
sti
hlt
or
fwait
mov
sbb
push
and
cmp
jmp
fcompl
xor
ss
dec
xchg
rcrb
cmp
pop
push
push
jmp
cld
ds
jmp
push
add
les
xor
adc
gs
pop
pop
pop
imul
and
lods
loope
mov
xor
sbb
jmp
adc
mov
pushf
mov
pop
mov
fmull
adc
sbb
jne
clc
push
bnd
lock
scas
or
sbb
and
jnp
addr16
sub
push
fcmovne
pop
sub
inc
sub
jmp
ss
test
cmp
mov
add
adc
push
imul
scas
icebp
add
jmp
movsb
adc
lods
test
add
xchg
scas
jge
cld
out
popl
and
push
xchg
fcmovb
daa
call
or
xchg
push
jle
insb
add
push
imul
aam
ljmp
or
loop
push
clc
rcll
pop
push
jecxz
rcrb
sub
dec
in
out
je
mov
push
pop
adc
mov
sbb
or
mov
lods
inc
jg
xchg
fs
das
adc
test
fdiv
gs
dec
dec
insl
sub
aas
sub
daa
shlb
cmp
add
mov
insl
and
push
dec
test
shlb
or
mov
push
pop
mulb
cmp
lcall
fisubl
jbe
cmp
xchg
shlb
fsubl
cmp
add
roll
adc
mov
nop
in
sbb
push
rcrl
mov
add
mov
mov
push
mov
cmp
fwait
test
jmp
or
cmp
cli
fbstp
scas
outsb
dec
mov
mov
call
pop
cld
cmp
dec
ret
xchg
or
sub
das
xchg
or
lret
pushl
pushf
lock
lret
inc
or
loopne
lret
xchg
rcr
lods
mov
cmp
adc
cmp
push
mov
mov
inc
lret
inc
test
out
pushf
fidivl
dec
movl
mov
bound
pusha
mov
aad
stos
add
decb
inc
ret
inc
inc
lret
fwait
clc
daa
subl
aam
adc
xchg
xchg
xor
and
mov
sub
insb
loope
es
jnp
jmp
inc
cli
in
sub
dec
add
cmp
mov
roll
xor
cwtl
jne
or
cmp
bound
rcr
inc
test
sbb
shl
mov
ljmp
fcmove
loope
fdivrs
rcr
xor
xchg
jmp
mov
mov
cld
add
ja
pop
xchg
pop
inc
in
and
ret
adc
jg
scas
shll
sub
xor
repnz
sbb
out
push
pop
lea
mov
clc
add
and
xor
movsb
mov
andb
in
mov
loopne
mov
mov
aam
icebp
out
or
sub
cs
ds
imul
lahf
or
mov
fdivr
jecxz
inc
lret
cmc
push
inc
xchg
dec
cli
jp
pop
adc
mov
sbb
mov
lods
ficomps
sahf
adc
add
fdivrl
sub
jbe,pt
jbe
jae
push
aam
cli
push
xchg
add
push
xchg
sub
push
lds
push
stos
add
sbbl
hlt
push
dec
mov
pop
lods
mov
fstl
movsb
out
and
pop
jmp
dec
dec
loop
stos
jo
pop
push
sbb
jne
mov
clc
jmp
mov
dec
leave
cmp
ret
xchg
inc
cmp
cld
or
mov
outsl
enter
addl
outsb
xchg
mov
outsb
mov
push
rcl
es
test
out
jg
testb
jb
loop
shl
jecxz
jecxz
pop
in
mov
repnz
into
adc
sbb
nop
add
mov
dec
nop
push
imul
data16
shll
fidivs
xchg
mov
sahf
xor
mov
cli
mov
pop
inc
shll
or
movsl
dec
popa
clc
jg
push
jmp
jmp
inc
mov
cmp
mov
jns
test
or
cmpsl
jg
ds
and
inc
stos
mov
popa
shll
mov
jp
lods
jge
xor
sbb
adc
je
repz
popf
jmp
inc
in
arpl
lods
mov
push
push
mov
xchg
movhps
stos
loope
lock
nop
pop
inc
xchg
xlat
std
cmp
push
mov
hlt
into
out
cmc
scas
jle
adc
add
mov
cmp
nop
pushf
into
daa
mov
icebp
pop
mov
pop
pop
xchg
bound
push
jno
mov
cld
jl
mov
xor
mov
xor
clc
add
push
cs
pop
aam
ja
or
dec
fwait
shrb
dec
test
or
ljmp
xor
fnstcw
sub
sti
arpl
jmp
ljmp
adc
jo
xchg
rcll
addl
sub
mov
cmp
mov
nop
lahf
dec
push
std
iret
add
mov
push
addr16
scas
add
cmpsl
or
fwait
add
cs
push
sbb
xor
pusha
xor
push
incl
movsl
xlat
cmp
retw
cwtl
adc
lea
in
les
adc
imul
sbb
adc
ljmp
nop
std
mov
icebp
xor
fs
inc
add
test
adc
lock
rclb
movl
dec
add
xorl
push
lods
inc
mov
dec
push
out
movsb
fdivp
and
add
mov
add
pop
dec
bound
out
xchg
repnz
mov
outsl
xor
test
cmpsb
out
inc
push
inc
jle
xor
rcll
lret
int
add
sti
cmp
pop
push
sbb
js
and
mov
cmp
jo
mov
roll
mov
ret
jbe
push
mov
ror
fsubs
js
iret
mov
jae
push
lock
inc
shll
xchg
mov
xor
test
bound
and
je
xor
mov
dec
xchg
mov
and
rolb
xor
test
cmp
dec
aam
nop
sbb
mov
and
bound
bound
xchg
dec
push
inc
movsl
pushf
in
inc
fadd
jl
jbe
or
fcompl
ret
ljmp
mov
addr16
ficoml
scas
dec
fcomp
push
sub
push
popa
test
cmp
dec
xor
aad
push
dec
add
push
test
das
orb
clc
dec
adc
push
xor
int3
inc
pop
sub
emms
imul
push
popa
push
ds
or
shr
dec
add
push
lea
dec
call
mov
push
push
fsubp
test
into
test
cmp
mov
iret
pop
lcall
shlb
push
xlat
clc
xor
push
inc
jb
mov
stc
adc
push
xor
pop
mov
test
jae
xchg
add
sahf
imul
or
jecxz
testl
out
arpl
sbb
push
icebp
dec
jbe
inc
inc
adc
jmp
add
jb
call
inc
xchg
push
shll
push
pop
in
push
inc
inc
push
sarb
shlb
push
or
inc
xchg
xchg
sarb
pop
lea
mov
into
pop
insb
or
xchg
or
and
or
lret
repnz
hlt
sub
push
mov
imul
dec
and
or
es
inc
xor
dec
rclb
in
jo
icebp
push
and
hlt
mov
add
dec
jno
jne
scas
rorb
and
jo
pop
pop
jns
cmpsb
movsl
loopne
dec
lods
or
inc
pop
popa
lahf
mov
aaa
inc
xlat
inc
test
fs
push
out
lods
jns
popa
jb
mov
push
pop
mov
dec
inc
xor
jae
push
inc
jecxz
rorb
sub
fistps
stos
dec
sbbl
idiv
insl
cmp
icebp
pusha
jecxz
lret
push
xor
push
sbb
lahf
xchg
stc
icebp
push
push
push
mov
add
dec
xor
xchg
faddl
js
jne
loop
pop
push
cmp
adc
js
insl
je
sbb
test
cmp
xchg
add
mov
push
jnp
inc
insl
sbb
jl
pop
test
inc
fwait
je
inc
jmp
ficompl
inc
pop
lods
test
sarb
or
pop
out
pop
pop
fwait
loopne
dec
xchg
jb
dec
call
int
push
int3
mov
jp
push
jo
roll
and
jmp
orl
hlt
lock
push
movsb
clc
inc
popf
outsb
data16
xchg
lods
jmp
push
inc
imul
sub
jne
leave
or
lock
lods
push
xor
mov
adc
xorb
ja
pop
sbb
adc
loope
or
xchg
andb
or
push
xor
push
and
iret
insb
andb
rclb
lock
sbb
dec
daa
dec
pop
cmc
outsl
ret
jmp
aaa
add
scas
mov
pusha
mov
ret
outsl
push
and
xchg
dec
push
int
mov
fs
push
push
cmpsl
leave
inc
test
mov
bound
mov
xchg
jmp
sub
mov
mov
stc
push
and
rcrb
orl
ret
scas
and
jmp
mov
mov
clc
mov
insl
or
cmpsb
andl
fwait
int
cwtl
sti
and
int3
dec
inc
das
xor
pusha
cmpsl
shrb
or
cld
sbb
mov
dec
ficoms
or
test
iret
xor
shll
repnz
ficoml
dec
and
sbb
adc
les
andb
or
je
and
fisubrs
mov
js
nop
or
nop
or
jp
push
xor
clc
dec
jmp
add
sahf
insb
pop
sub
or
inc
inc
push
inc
and
dec
clc
add
pop
das
xchg
lcall
test
in
fsub
jmp
popa
cld
je
lds
insl
out
ds
rorl
and
iret
movsb
mov
lret
push
mov
jmp
mov
mov
add
ja
jmp
xor
subl
shr
into
loope
maxps
and
fs
dec
jl
mov
jns
out
push
sbb
xor
inc
hlt
arpl
mov
ret
or
fisttpl
int
test
mov
xchg
cmpl
mov
out
mov
push
icebp
xchg
push
adcl
push
mov
enter
and
out
lock
stos
push
add
xor
cwtl
mov
sbb
adc
and
enter
adc
push
mov
cmp
sbb
add
and
pusha
xchg
outsb
jmp
jge
xor
mov
shrl
out
push
mov
mov
mov
rorb
mov
mov
sub
push
or
clc
lahf
out
ret
aas
cwtl
mov
lock
mov
adc
in
int3
and
adc
loop
mov
xchg
fwait
jp
pusha
or
adc
and
loopne
or
loopne
or
bound
sbb
inc
mov
shlb
insb
or
dec
adc
jmp
adc
sbb
loopne
sub
dec
jg
mov
lds
mov
adc
push
repz
je
call
xchg
inc
pop
push
adc
inc
and
test
inc
push
fsubrs
int3
fwait
sahf
sbb
jle
leave
pop
sbb
imul
sti
pop
rcrb
adc
lret
add
imul
cmp
mov
jmp
push
mov
js
into
pop
jmp
push
in
mov
rcll
dec
jmp
mov
pop
enter
inc
pop
in
xchg
push
jp
add
and
push
mov
xor
xchg
lock
orl
mov
js
jmp
pop
push
push
clc
adc
movsb
xchg
inc
movsl
sub
hlt
mov
mov
mov
loop
dec
cli
cmpsl
stos
dec
or
adc
movsb
inc
cmp
rcrl
cmp
inc
jmp
push
cmp
sub
cmp
xchg
and
mov
shl
add
mov
lcall
imul
cmpsb
stos
data16
rclb
pop
orb
and
cmpsb
sbbb
hlt
mov
fwait
stos
out
or
cmpsb
fmuls
lcall
pop
and
test
incl
xchg
pop
cld
out
mov
add
stos
pusha
addb
cmpb
filds
mov
pop
lds
pop
aam
pushf
mov
cmovns
imul
sub
add
cmpsb
mov
jne
pusha
test
rolb
std
push
jge
es
dec
fcoml
pop
jmp
adc
std
push
push
dec
jl
sahf
and
pushl
push
jle
cmp
xchg
sub
mov
or
loopne
out
aam
xchg
adc
popf
inc
into
mov
push
or
push
push
cmpsb
mov
add
adc
sbb
xor
divb
stos
fucompp
fidivrl
or
inc
repz
and
or
inc
pushf
lcall
cmp
stos
jmp
xor
dec
dec
pop
test
xlat
mov
sub
adc
adc
cmp
push
jecxz
xor
ss
inc
fidivrl
mov
decl
mov
cli
cmpsb
dec
out
pushf
mov
fsubrl
xor
insb
aad
mov
dec
mov
cld
lcall
and
cli
dec
call
cs
movsb
inc
push
sub
fldl
sub
push
or
insb
orb
repnz
dec
inc
ret
in
pop
adc
clc
fwait
mov
test
movsb
sbb
xchg
es
cmp
adc
xchg
mov
mov
mov
dec
push
or
shlb
inc
ret
test
loop
bound
pushf
pop
jo
ljmp
and
or
lods
and
faddl
adc
je
sub
repnz
pop
faddl
inc
lods
and
jp
dec
test
xor
into
push
mov
outsl
or
std
pop
sbb
test
mov
in
popf
add
sbb
repnz
xchg
mov
outsb
adc
es
cmpsl
cmpsl
lods
les
sbb
push
mov
jg
sahf
fidivrs
push
xor
inc
jp
push
xchg
jmp
and
push
cli
test
dec
ret
imul
sbb
xor
inc
pop
cmp
or
les
mov
fmuls
xchg
cmp
hlt
sahf
mov
sti
cli
jmp
pop
and
les
out
faddl
xlat
and
xchg
mov
mulb
xor
cwtl
cmp
sub
inc
mov
push
sbb
je
push
mov
cmpsl
xlat
loopne
popa
orb
testb
mov
jp
sbb
or
cmp
jb
mov
push
js
fdivrs
aaa
and
xchg
rcrl
rcrb
jno
nop
add
add
test
mov
ljmp
pop
sbb
mov
push
pop
cmp
inc
jmp
je
outsb
cmp
add
or
xor
lcall
adc
and
or
ds
filds
sbb
xor
jno
scas
and
and
push
testb
pusha
mov
mov
jp
jae
mov
mov
cld
mov
mov
xor
xchg
loopne
cmp
testb
imul
hlt
cs
fucomip
push
out
inc
stc
mov
lahf
sub
mov
mov
aas
lea
test
inc
test
or
mov
pushf
nop
mov
mov
push
les
mov
outsb
xor
in
push
jecxz
fstpt
scas
push
add
add
xchg
jp
fcomip
jo
es
jl
pop
push
mov
xor
insb
xor
loopne
jb
mov
add
mov
inc
pushf
jbe
jg
out
xorl
pop
xlat
jb
xchg
adc
mov
test
xchg
repnz
jg
push
ljmp
mov
add
dec
roll
jl
jl
mov
dec
push
popa
add
inc
push
pop
inc
call
push
dec
push
push
inc
xor
add
xchg
or
inc
bound
and
dec
push
dec
cwtl
je
bound
inc
rolb
pop
pop
push
xor
aam
mov
push
insb
xor
repnz
add
sbb
gs
adc
inc
dec
clc
inc
or
outsb
add
dec
lock
add
add
push
mov
xor
add
mov
rorb
xchg
mov
adc
and
mov
or
cmp
aaa
lock
add
repnz
ds
push
mov
cmpsb
lods
dec
push
push
frstor
dec
outsb
push
lods
in
or
push
ss
cmp
mov
inc
dec
dec
test
dec
or
jae
push
push
xor
cmp
fimuls
lock
jl
daa
loope
and
inc
aas
or
outsl
sub
popa
jmp
sub
inc
lods
mov
and
push
ss
jne
jne
fimull
jo
dec
jb
dec
and
hlt
mov
push
add
lock
cmpsb
bound
jnp
aas
into
ret
pop
and
jns
jge
jge
sbb
push
xor
push
pop
iret
or
sub
jmp
ss
add
scas
cmp
jo
jmp
adc
mov
pop
mov
dec
push
mov
or
clc
push
int3
fs
pop
inc
jmp
push
jne
sbb
inc
shrb
sub
mov
push
pop
cmp
and
adcl
jbe
mov
push
dec
fldenv
adc
mov
push
out
mov
or
lock
outsl
add
push
jae
inc
out
inc
add
dec
imul
imul
sahf
rol
dec
stos
lods
loopne
jo
push
insb
jns
jle
movsb
lea
push
jbe
dec
test
ficoml
cmpb
mov
insw
adc
inc
leave
or
sbb
cs
nop
jb
cmp
inc
xor
psrad
xchg
addb
cli
inc
and
inc
arpl
xchg
sub
adc
call
pop
stos
je
lods
fs
inc
push
ss
lods
hlt
popf
jge
pop
jmp
dec
dec
push
dec
pusha
sub
pop
cmpsb
lock
insb
ret
out
jae
mov
out
sbb
ja
dec
repz
fs
jno
ds
add
clc
dec
or
xchg
push
shrl
jne
mov
out
sub
sbb
or
aaa
cli
aad
mov
jg
push
add
mov
xchg
push
sbb
mov
mov
cmp
add
dec
xchg
aaa
pop
or
mov
mov
outsl
popf
inc
adc
shl
and
sti
daa
fwait
ret
jp
andl
push
fisubrs
jg
jo
xor
lret
cmpsb
cmc
ret
add
or
mov
cld
push
sub
and
sbb
mov
mov
xor
pop
mov
jne
push
jmp
add
add
or
cmp
or
add
popf
dec
and
in
mov
iret
add
sbb
push
sub
test
pop
mov
or
test
push
cmp
into
testl
inc
test
dec
or
adc
and
or
push
or
jg
fistps
mov
enter
cmp
xchg
sbbb
int
mov
and
sub
fdivr
in
gs
adc
mov
cmp
cmpb
jl
add
jge
jg
pop
adc
mov
adc
and
and
add
mov
xchg
adc
fs
cmp
out
in
scas
push
push
inc
rorb
inc
mov
cmp
jbe
xchg
sub
xchg
mov
push
mov
cwtl
ficompl
or
sbb
je
mov
jns
xor
loop
push
pop
xor
pop
insl
pop
xchg
int3
add
aad
add
icebp
mov
les
pop
ret
cmp
xchg
jg
adc
sbb
clc
lcall
xchg
lret
xlat
lret
sbb
push
ret
insb
rcl
fistpl
mov
dec
in
add
add
je
mov
and
mov
jmp
mov
jbe
adc
cmpsb
sub
bound
flds
in
dec
sbb
mov
cmc
pop
add
cld
xchg
mov
test
orl
scas
and
mov
jecxz
out
movsb
jmp
lock
mov
fwait
sbb
sahf
ret
icebp
and
push
dec
idivl
leave
xlat
test
sub
jge
pop
push
fldt
aas
adc
pop
jge
cli
sub
das
in
fldl
movsb
scas
inc
add
cmpsl
scas
or
lods
lcall
adc
dec
sti
je
push
imul
jp
xor
mov
dec
cmc
xlat
divl
sbb
sbb
and
cmp
fst
inc
roll
push
cmp
dec
or
in
push
pop
imul
push
lret
mov
loope
outsl
nop
adc
cmpb
mov
mov
bound
sub
stos
fucomi
sar
jge
sbb
sub
sub
aam
mov
jmp
jnp
push
adcb
iret
stos
shl
dec
xchg
jne
xchg
mov
shlb
lock
pop
fnstenv
aad
bnd
jno
cmp
and
lahf
out
call
lock
pusha
mov
out
or
add
dec
leave
cli
sub
jnp
jge
hlt
pusha
in
xchg
sub
mov
in
mov
mov
aaa
arpl
mov
xor
and
jl
loopne
push
aad
push
push
aaa
enter
stos
add
mov
jb
adc
sub
jg
pop
lods
hlt
sti
rclb
loopne
popf
faddl
loopne
pminub
mov
or
loopne
imul
push
andb
stos
cmpsl
icebp
stos
mov
clc
add
pop
inc
sub
shll
or
push
aaa
xor
mov
pusha
jns
movb
mov
xor
pop
inc
push
cld
pop
pop
adc
mov
xor
pop
lds
pop
cmp
push
sub
outsl
nop
faddp
sbb
rcll
cmp
fsub
add
inc
bound
sbb
pop
test
cmp
inc
adc
jns
dec
lret
loope
jle
xor
push
add
inc
aaa
lock
cmp
dec
or
dec
es
adc
inc
inc
popa
jno
subl
mov
inc
mov
mov
mov
mov
gs
js
inc
pop
mov
dec
rorb
mov
add
hlt
in
and
pop
fisubrl
jbe
add
push
xchg
fdivr
sbb
mov
xor
cli
pop
sub
pop
jbe
mov
shlb
dec
outsl
nop
dec
jnp
inc
fadds
dec
inc
popf
sarl
icebp
mov
orb
sbb
dec
rolb
jno
xchg
pop
jl
addr16
outsb
push
add
dec
mov
testb
clc
lock
dec
or
pop
push
ja
mov
inc
ja
js
add
pusha
lcall
call
int
cmp
xchg
loop
cmp
fstl
push
add
dec
loope
lret
or
cli
ljmp
dec
rclb
aas
push
jb
cmp
xchg
add
test
jne
push
pop
mov
outsb
inc
stos
jge
push
stos
mov
mov
in
xor
mov
jl
add
test
cmc
andl
add
push
cmpsb
sbb
sub
enter
stos
fcompl
cli
sub
idivl
iret
cmp
push
pop
out
cmp
cli
dec
dec
push
movsl
subl
mov
fcomp
inc
pop
insb
push
jg
decl
dec
dec
pop
sbb
lock
adc
add
adc
adc
mov
test
jmp
jmp
mov
add
push
popf
jae
sub
or
jne
sub
mov
jbe
lods
pop
cmp
xchg
add
xor
pushf
dec
iret
hlt
push
xchg
ds
ror
inc
lahf
stos
or
jo
sub
sub
addr16
cmp
jo
mov
xorb
or
jo
xor
sbb
or
cmp
pop
inc
dec
sarl
inc
adc
mov
pop
and
jmp
mov
movsb
xchg
mov
sbb
xor
add
push
stos
sbb
enter
add
jge
mulb
call
pop
icebp
cmpsl
loopne
push
jo
mov
push
movsl
outsb
xor
out
pop
sub
cld
mov
fnstenv
mov
dec
mov
xor
xchg
jns
imul
ljmp
mov
xor
inc
sub
mov
push
ficoml
pop
and
add
sub
mov
aas
lds
cmp
lahf
push
sbb
add
dec
fs
mov
mov
mov
ss
or
dec
cld
jmp
jno
xor
imul
fucomp
in
mulb
xor
nop
mov
push
jecxz
cmp
mov
and
outsl
cmpb
pop
or
aad
pusha
jo
outsl
rorl
mov
xor
ret
lret
dec
or
out
add
enter
aaa
jbe
aaa
push
cld
mov
add
ret
mov
push
mov
cli
and
shl
call
ret
push
sub
outsb
imul
jmp
and
cmp
jbe
dec
shlb
cmpb
sub
ss
sub
adc
aas
fcoml
xchg
nop
out
shrb
outsl
movb
dec
mov
loope
cmpl
test
mov
icebp
adc
test
adc
adc
mov
jp
mov
inc
sbb
add
lods
pop
lret
fildll
mov
xor
and
rclb
pop
sub
and
or
adc
inc
rcrb
rolb
jnp
rorb
add
mov
outsb
clc
in
mov
popa
outsl
mov
or
je
arpl
sbb
sbb
cs
mov
bound
mov
fsubrl
adc
sahf
mov
inc
push
or
adc
or
push
jmp
or
dec
pop
pop
pop
sbb
jl
shrl
rorb
xchg
xchg
pop
int
outsl
sbb
add
jl
pusha
out
mov
fsub
mov
adc
lret
or
pop
pop
jge
sub
push
test
mov
jmp
jp
clc
outsb
sub
mov
fsubrp
ret
fwait
push
sbb
jno
jmp
sub
das
int
mov
rcl
mov
mov
outsl
sbb
push
and
or
push
xchg
nop
mov
loopne
pop
mov
test
jmp
push
imul
lods
cmp
cmpsl
js
outsb
clc
icebp
rcr
push
adc
jmp
push
clc
xchg
in
dec
jns
clc
pusha
or
mov
in
lods
aad
lret
hlt
inc
cmp
mov
mov
mov
and
andb
ss
in
lds
dec
mov
lcall
out
daa
mov
int
or
lret
andb
adc
add
push
aas
dec
adc
out
xchg
xorb
xor
in
ret
mov
cmp
pop
sub
cs
add
push
mov
test
aas
out
adc
cmp
mov
bound
test
icebp
bound
add
ja
outsl
cmp
jo
mov
icebp
mov
rcrb
add
dec
out
mov
push
std
inc
lahf
and
mov
in
dec
xor
into
cmp
fisttpl
adc
cmp
lcall
call
pop
pop
cmp
or
push
adcb
cmp
xchg
jo
in
mov
mov
xchg
int
jbe
xor
add
rorb
add
xchg
enter
jbe
inc
sub
jecxz
pop
hlt
cmp
xchg
xor
into
ss
ret
les
mov
iret
loop
imul
or
popa
loope
in
xchg
aaa
or
outsl
icebp
xor
mov
add
jg
mov
jb
pop
mov
shr
dec
push
sub
out
cmp
cli
inc
ret
js
or
bound
data16
ljmp
add
call
lcall
nop
pop
cmp
cmp
mov
filds
mov
sub
popa
movsl
cmp
lds
lock
mov
leave
jl
push
fmuls
push
and
pop
xor
lcall
ja
loop
sbb
jnp
mulb
shrb
pop
add
jb
push
pop
ffree
sub
out
pushf
add
push
aad
ljmp
dec
cltd
bound
arpl
dec
push
divl
xor
sbbl
mov
adcb
sbb
pop
jecxz
push
push
mov
xchg
sti
fists
pop
test
or
push
aaa
cli
popf
add
dec
or
rcrl
jmp
inc
xchg
mov
test
in
cmc
pop
aas
add
pop
or
bound
mov
clc
add
jnp
lock
inc
xchg
and
icebp
jmp
or
xor
outsl
mov
adc
sahf
paddb
movsb
popa
insb
lret
roll
dec
loope
sub
push
mov
popa
cmp
out
or
sbb
or
dec
cmpsl
shlb
mov
adc
push
out
mov
mov
roll
jmp
lret
mov
sarb
cmp
aam
arpl
adc
sbb
mov
cld
mov
xor
xor
sub
sub
add
push
faddl
insl
or
add
dec
std
adc
dec
pop
push
in
xlat
add
test
aad
popl
sub
dec
add
dec
jmp
sbbb
sub
push
push
fcoml
and
pop
bound
mov
cmp
dec
je
aaa
inc
fs
xchg
push
gs
ret
jo
inc
in
lds
fs
pushf
jne
pop
fists
cmp
mov
inc
bound
adc
add
imul
push
push
jo
mov
out
dec
shlb
cld
aaa
add
sahf
mov
mov
xor
cld
add
add
jg
inc
push
sub
cmp
mov
dec
fadd
test
mov
pop
test
cmp
xchg
test
ljmp
pop
mov
add
adc
mov
inc
inc
in
sub
lock
pop
mov
add
pop
mov
add
add
jp
push
je
mov
jbe
orl
and
dec
xor
xchg
test
pop
adc
je
loope
mov
pop
and
lcall
fnstsw
rolb
or
push
adc
nop
les
pushf
sbb
pop
mov
mov
cltd
sbb
add
enter
sahf
pop
sub
int3
push
pop
or
pop
cwtl
repz
aad
icebp
or
jb
adc
sbb
scas
sub
jle
ret
outsl
xchg
cmp
or
mov
push
jne
sti
push
or
mov
cld
nop
xor
xchg
jo
xor
cs
cld
dec
xlat
shlb
pushf
incl
cmpsl
xchg
push
mov
push
inc
fs
mov
lds
or
or
mov
inc
pop
int3
add
shl
jno
jae
push
jmp
rorl
mov
pop
cwtl
testb
xor
mov
mov
xchg
adc
jo
jae
fwait
lock
push
push
mov
mov
push
xor
clc
inc
stos
inc
out
mul
add
or
dec
add
hlt
fildll
sub
inc
out
decb
push
push
and
addl
shrl
fists
dec
bound
shrl
call
int3
inc
shlb
add
mov
mov
aam
inc
xchg
add
cmp
xchg
adc
test
mov
aaa
and
adc
loope
dec
mov
imul
adc
sbb
dec
lret
add
out
leave
int3
rorb
mov
popa
aaa
je
and
sub
or
loopne
jbe
outsb
mov
pop
sub
lods
xor
dec
jnp
adc
adc
dec
ss
test
sbb
xor
insb
aam
sti
fidivl
shll
pushf
insl
mov
dec
test
and
jno
lods
ljmp
es
mov
pop
test
scas
and
mov
mov
clc
lahf
pop
loopne
mov
aas
mov
push
xchg
bound
xchg
aaa
je
inc
mov
stos
add
or
ss
sbb
sub
mov
jb
sar
lea
and
sub
adc
jmp
mov
jge
sbb
insl
lock
scas
ret
pushf
das
pop
mov
mov
add
sbb
mov
stc
dec
in
inc
mov
enter
insb
adcb
orb
ja
outsb
test
in
push
scas
xor
cli
shlb
add
xchg
out
adc
mov
add
scas
fs
rolb
and
popf
pop
aaa
push
adc
lret
pushf
addr16
cmc
lods
sbb
and
adc
pop
clc
jg
dec
jne
stos
cmp
jp
add
stos
add
lcall
stos
and
jno
mov
aam
inc
or
or
arpl
mov
inc
dec
jge
aaa
jge
out
test
sub
add
std
dec
mov
add
cmp
stos
or
mov
jmp
shlb
pop
ljmp
scas
xchg
hlt
fsubs
and
push
sub
pop
mov
mov
xchg
mov
add
xorb
es
sbb
push
cwtl
stos
sub
cmc
repnz
and
test
in
pop
stos
mov
mov
inc
fwait
orb
dec
icebp
jl
xor
sbb
cmp
and
cmc
push
jmp
sub
jbe
loopne
sub
fsubp
mov
andb
pop
jbe
push
arpl
add
inc
aam
cmp
ljmp
or
or
xchg
pop
orl
les
push
lea
mov
aad
jmp
and
pop
fstl
pop
cmpsl
jle
movsl
shlb
mov
push
or
jmp
ds
sbb
inc
xorb
adc
inc
fadds
sbb
in
aad
fs
mov
or
xchg
dec
jl
push
fsubr
mov
push
xor
or
pop
popa
fs
jno
add
add
mov
ljmp
rorb
lods
andb
pop
and
sub
and
lcall
inc
lea
push
cmp
andl
mov
push
cltd
stc
mov
adc
clc
cmc
rcrw
push
push
mov
faddp
enter
inc
sub
out
dec
xor
pushl
mov
aam
loop
scas
sbb
sbb
popa
fdivrl
dec
mov
pop
dec
mov
mov
dec
xchg
jecxz
stc
cmpl
or
jge
andb
js
fdivrs
imulb
sbb
repz
and
cmp
push
dec
mov
das
add
outsb
je
adc
jnp
xor
loop
ja
push
jle
inc
sti
push
fs
mov
pop
push
clc
mov
mov
adcb
pop
sbb
dec
dec
push
and
cld
fs
cld
add
int3
test
js
data16
rcpps
daa
pushf
or
aad
pop
lods
sub
jns
and
inc
inc
aad
pop
cmc
pop
popa
push
std
xlat
mov
push
cmp
jmp
adc
ja
fwait
data16
jg
lcall
add
insl
sub
xchg
pop
lods
xchg
lock
push
outsb
push
mov
insb
out
push
in
test
enter
ret
mov
divl
clc
sub
incl
fadd
imul
mov
loope
jmp
jnp
mov
inc
loopne
insb
push
idivb
popa
jae
loop
scas
popf
push
jp
call
lcall
out
inc
xchg
fadds
or
sti
jno
enter
cld
mov
sub
add
and
test
pop
cs
pop
shrl
mov
pop
movsl
bound
pop
cmp
inc
mov
mov
jo
push
or
mov
ds
shrb
mov
pop
adc
ljmp
xchg
ljmp
sub
or
icebp
jl
out
pop
fldl
cltd
push
and
in
jecxz
sbb
or
mov
aas
cmp
sbb
jl
lret
lret
negl
dec
addb
repnz
lahf
clc
mov
das
or
or
shlb
or
pop
jmp
inc
xorl
push
dec
inc
fildll
cmp
sbb
sbb
inc
mov
adc
dec
xor
cmp
mov
push
fsubp
push
js
push
add
dec
lods
adc
pop
icebp
sub
inc
pop
jecxz
cmp
jne
lret
add
xchg
push
out
inc
and
add
testl
movsb
pop
push
push
lock
pusha
das
adcb
stc
push
loop
leave
xor
push
sti
cli
popa
jns
mov
into
loop
push
addr16
imul
xlat
jmp
dec
add
fwait
loop
sbb
push
push
cmp
outsl
rcrb
popa
push
bound
imul
jo
into
in
ret
adc
sbb
jb
gs
jne
inc
xchg
cmp
sti
popa
cwtl
in
push
push
xor
nop
test
pop
xchg
fisubs
ret
sbb
mov
xorl
ljmp
add
fimull
ljmp
jl
xchg
cld
cli
add
sub
ja
mov
jo
push
jecxz
jbe
pop
fs
mov
jp
or
push
pop
icebp
push
shlb
lods
movsb
mov
push
ss
mov
stos
mov
push
cmp
mov
pusha
pusha
js
inc
cs
push
into
mov
mov
in
add
dec
inc
sub
sbbb
or
mov
push
ret
dec
mov
adc
inc
dec
mov
or
dec
subb
cli
push
push
test
jle
or
mov
add
adc
test
add
xor
add
cli
sub
aas
and
cs
jle
sti
and
mov
mov
lret
lret
push
dec
sbb
add
pop
mov
jae
out
imul
ret
add
fsubrl
out
jl
xchg
push
in
enter
xchg
popa
push
roll
adc
shrb
xor
outsl
add
pop
loopne
outsl
push
cmp
mov
cmp
and
inc
fucom
or
mov
scas
std
dec
ret
sub
mov
pop
jg
cmc
inc
xchg
out
add
mov
test
scas
add
vmread
push
lods
sub
loop
jg
orb
aad
or
stc
cmpl
or
aam
into
scas
pop
pushf
int
sub
xchg
mov
stos
nop
push
add
sarb
jp
xlat
rolb
jge
or
sbb
or
das
sub
icebp
mov
aas
xor
mov
dec
arpl
adc
mov
lods
imul
mov
sub
mov
ss
gs
pop
add
xabort
call
push
and
js
dec
xor
je
scas
aas
inc
sbbl
clc
cmc
adc
dec
jmp
push
movsb
jns
xor
mull
aaa
rorb
sub
clc
sub
mov
or
cmp
in
jmp
loope
insl
out
pop
xlat
lahf
sub
mov
push
pop
mov
in
inc
movsl
loopne
dec
je
mov
mov
pop
into
jmp
popf
adc
movb
lds
jg
aad
xchg
out
cmpsl
sub
out
test
mov
popf
sarl
fmuls
mov
add
push
adc
pop
lahf
mov
pop
call
jmp
dec
jp
xchg
mov
fdiv
mov
je
lods
adcl
push
jae
daa
mov
cs
shrb
fdiv
xor
stc
fists
scas
jle
shlb
xchg
out
add
lods
daa
fnsave
ret
sbb
push
faddl
jmp
lock
adcb
popl
in
add
inc
test
cmp
pop
rcll
xor
es
add
cmp
cltd
popa
test
sbb
sbb
adc
lea
fldl
or
push
addr16
inc
jne
xchg
cmp
jmp
cltd
push
jbe
repnz
jmp
jo
imul
dec
cmc
movsl
les
hlt
les
adcb
and
sbb
repnz
hlt
stos
mov
sahf
push
dec
cmp
lahf
push
sub
and
or
cwtl
cs
push
xlat
les
pop
test
sbb
mov
push
xchg
fisubl
mov
and
inc
mov
popf
adc
add
push
and
daa
push
loope
sub
hlt
adc
mov
data16
and
mov
je
and
add
xor
imul
sub
dec
sub
clc
test
pusha
orl
or
jb
xor
pop
jle
dec
pop
fs
int
aas
jle
les
pop
cmp
lea
cmpb
mov
jae
adc
imul
jno
pop
push
lret
mov
pop
fildl
lret
rcrl
lods
lock
or
push
outsl
push
or
pusha
loop
ss
loopne
and
cli
scas
outsb
xor
pop
add
fisubrs
ret
xchg
cs
faddl
mov
xor
adc
lock
mov
mov
adc
dec
cli
fwait
xor
jbe
lret
shl
lcall
shll
das
out
cmpsb
fucomi
mov
adc
jp
sbb
mov
cmp
mov
loopne
inc
fs
pmaddwd
mov
add
imul
popa
xchg
xor
or
pop
sub
push
jno
jmp
lret
inc
rcl
fwait
outsb
or
out
mov
sub
or
mov
pop
cmp
inc
mov
push
mov
out
movsl
jbe
jb
mov
adc
pushf
push
ds
daa
loop
and
inc
pop
or
movsb
inc
lret
mov
pop
aam
xor
js
mov
sub
sub
push
adc
push
das
in
cs
js
and
fdivrl
sbb
mov
sub
adc
or
push
mov
test
lea
test
shl
pop
js
mov
insl
dec
jb
shlb
jl
dec
or
pop
mov
maxps
in
adc
inc
mov
in
lock
scas
pusha
xor
es
ficompl
pushf
mov
adc
in
test
popf
out
cmpl
stc
xchg
int3
jmp
cwtl
call
addb
dec
inc
lods
out
cwtl
or
sub
popa
insb
fs
rorl
sub
aas
out
lcall
and
pop
mov
mov
pop
pop
add
aam
cmc
and
pop
inc
lods
sahf
pop
mov
dec
iret
jecxz
mov
fsubrs
ljmp
pop
movsb
xor
dec
push
out
mul
aad
aam
int
cmp
add
int3
daa
mov
cmp
sbb
adc
dec
or
bound
add
mov
sub
push
addr16
jge
loopne
into
add
inc
push
jae
add
dec
insb
push
add
das
sbb
jo
adc
or
push
jo
int
dec
inc
ds
imul
adc
ficoms
bound
aas
negl
mull
sub
dec
cmpb
outsb
jno
push
hlt
cmp
flds
fildll
adc
add
out
sahf
aam
clc
and
fstl
mov
dec
outsl
bound
xchg
addr16
xor
push
pushw
xlat
dec
xchg
add
test
lods
dec
jbe
push
dec
inc
mov
dec
dec
inc
incl
push
and
jo
xor
pop
shl
jbe
add
les
sub
jb
gs
cwtl
inc
xor
and
add
mov
sub
inc
mov
and
call
cmp
fs
outsl
xchg
mov
add
in
mov
push
pop
inc
pop
lock
inc
dec
adc
adc
push
dec
call
inc
add
outsl
sub
les
or
or
js
aaa
jne
push
mov
sub
dec
xor
inc
aaa
or
dec
repnz
sub
pop
js
inc
fcompl
movb
mov
push
jbe
push
imul
cmp
lods
push
test
or
or
aas
rclb
jno
pop
sbb
mov
jmp
cmp
xrelease
data16
orb
ficoml
jnp
shll
add
fwait
out
mov
push
in
cmp
push
xorl
sbb
inc
mov
xor
pavgb
stc
sub
lret
pop
cld
add
aaa
sarl
aas
inc
push
inc
mov
jbe
dec
sub
jo
mov
ljmp
add
orl
jp
push
adc
mov
leave
xchg
cmpsl
jo
cmp
and
idivl
push
pop
mov
jecxz
lock
or
adc
pop
pop
or
add
pop
pop
into
xchg
jnp
test
rorl
mov
outsl
add
into
movsb
movsl
add
loope
jno
daa
pusha
mov
insb
icebp
add
push
and
push
cld
sbb
stos
dec
push
addb
ret
mov
xchg
sub
xor
lahf
mov
mov
mov
jp
push
scas
add
push
push
addb
jge
stos
lret
cwtl
lsl
pop
mov
pop
dec
scas
stos
shrb
sub
xor
push
sarb
les
push
int3
movb
dec
dec
hlt
rorl
stos
int3
jl
jmp
aaa
fs
mov
loop
or
xor
std
cli
shll
sub
faddl
inc
outsl
sbb
lds
test
adc
fmull
adc
cld
lock
das
stc
dec
ja
jmp
outsb
enter
push
gs
out
aam
aam
sbb
push
and
add
adc
sub
pop
pop
dec
bound
pop
mov
mov
or
ss
jmp
cmp
jnp
sub
dec
push
mov
inc
push
pop
call
inc
imul
fadds
or
pop
flds
cmovno
loope
add
inc
mov
and
add
jb
dec
cmp
add
repnz
das
inc
jmp
and
mov
sbb
add
and
pop
loope
movsb
mov
cwtl
jg
nop
fildll
push
add
sbb
subl
mov
jo
in
adc
mov
mov
xor
ljmp
lahf
iret
xchg
mov
mov
lods
add
into
xchg
sbb
dec
loop
hlt
sub
out
popf
cmp
push
idivb
in
sbb
push
jl
mov
xor
arpl
dec
enter
jmp
mov
lea
jle
pop
xlat
mov
xchg
lock
push
repnz
sub
outsl
jle
sbb
rcr
jne
adc
jecxz
fs
inc
cmp
mov
mov
rcll
ror
push
rcl
cwtl
mov
cmc
test
fidivl
jle
pop
adc
push
mov
daa
or
shl
daa
xchg
in
mov
pop
inc
std
push
add
ret
je,pn
sub
pop
clc
xor
mov
fiadds
in
std
in
pop
jl
loope,pn
cwtl
dec
dec
out
hlt
dec
pop
push
cmpsb
push
push
sub
and
mov
jge
arpl
ret
popa
and
sahf
cmp
sub
inc
jg
or
mov
jo
adc
and
out
lea
mov
pop
fdivs
mov
test
jne
push
insl
mov
add
js
xchg
das
call
jl
aad
mov
or
ret
clc
or
xor
xlat
jae
dec
mov
sbb
pop
icebp
test
sti
cmp
fstl
pop
cli
stc
jo
test
je
rorb
xchg
cmpsl
sbb
push
add
cwtl
pop
jns
ret
jecxz
stos
stos
mov
sbb
insb
mov
xor
pop
ret
clc
pusha
lods
mov
mov
xor
add
and
dec
push
dec
add
mov
jnp
add
xor
rolb
imul
adc
pop
adc
notl
pop
pop
imul
add
dec
shlb
ljmp
je
xor
stc
mov
jp
add
js
jecxz
jae
dec
dec
rorl
mov
or
pop
and
loopne
sbbb
xchg
xchg
mov
repz
mov
mov
mov
mov
push
pop
repnz
cmp
inc
and
and
jl
iret
ds
mov
sbb
sbb
ficoms
jne
fidivs
ficompl
adc
push
stc
xor
les
les
movl
jl
mov
xchg
push
pop
mov
lods
xor
adc
lahf
xchg
push
pusha
ds
aam
gs
inc
add
mov
mov
shl
jle
jle
and
cmovge
cld
arpl
jmp
jnp
fadds
and
mov
add
js
cld
lds
inc
xor
sub
loop
mov
ss
mulb
ret
xor
jg
loope
jle
in
xchg
ret
pop
inc
jmp
jecxz
mov
pop
and
adc
add
xlat
adc
fdivl
out
mov
cmpsl
push
shlb
fcoml
insl
mov
cmpsl
sub
int3
push
pop
jne
jge
and
or
jmp
imul
push
pop
mov
mov
fdivrl
and
lds
insl
fiaddl
and
lods
call
jb
jp
pushl
push
lret
or
out
add
xor
orb
xlat
mov
push
dec
add
inc
js
rorb
dec
mov
push
jbe
test
xchg
ljmpw
add
lea
aas
movsb
add
pop
mov
pop
insl
loopne
jg
cs
leave
xchg
fs
fisubrs
cmp
or
pop
pushf
out
push
mov
xor
mov
mov
sub
adc
insl
aas
mov
scas
inc
jg
inc
sbb
xchg
mov
jmp
je
xchg
cmp
pop
or
add
sahf
decb
cmp
jecxz
int
push
sete
outsb
jmp
mov
insb
inc
movsl
add
jg
dec
cmp
sub
pop
clc
mov
pop
movsb
dec
test
fiadds
adc
pop
sub
das
pop
je
pop
or
loope
repz
lahf
pop
jne
test
punpcklbw
hlt
dec
xor
fbstp
jne
outsb
scas
inc
cmpsb
ficoml
rolb
jge
mov
lods
mov
mov
add
pop
imul
add
jecxz
pop
sbb
sbb
pop
call
dec
lea
orb
jle
stos
fistpll
xchg
leave
pop
sbb
dec
rolb
bnd
lock
xchg
or
inc
xor
jno
sbb
cmpsb
fldenv
inc
inc
add
mov
ss
or
xor
sub
jb
out
push
mov
mov
and
notl
pop
sbb
es
sahf
mov
out
jmp
sbb
inc
mov
loopne
cmp
sbb
xchg
or
mov
std
scas
xor
dec
mov
mov
lahf
jge
mov
or
int
inc
insb
cmc
aas
pop
std
lods
xchg
hlt
imul
nop
xlat
data16
push
inc
mov
sbb
lods
jp
adc
sub
pop
sbb
push
cld
push
stc
ljmp
aaa
add
les
mov
leave
lret
mov
jbe
jb
es
outsb
dec
jmp
inc
dec
jmp
and
subb
jbe
add
xor
js
mov
push
imul
sub
ret
sbb
movsl
jg
clc
sub
cmp
pop
push
je
imul
sbb
push
sbb
in
add
rcll
addl
cmpb
sbb
xor
mov
inc
cmp
inc
loop
enter
push
in
cmpl
aam
adc
sub
mov
push
adc
add
jle
jge
loope
data16
fucompp
mov
out
cmc
ja
xor
rcl
in
movsl
add
mov
jecxz
mov
pop
das
bound
pop
test
in
or
mov
ja
js
es
xchg
mov
cmp
pxor
ret
fidivl
jns
sub
or
lods
or
rolb
movsb
nop
pop
shll
fs
cwtl
in
cmp
test
xor
push
sub
dec
push
jmp
push
jl
loope
dec
popf
lods
gs
sti
js
std
bound
xchg
nop
fidivl
ja
pop
in
ss
xor
jmp
mov
jp
scas
out
sarl
add
xchg
movsl
inc
inc
sarl
cld
mov
mov
push
out
or
sbb
popf
js
out
push
vpcmov
cmp
or
out
cmp
sbb
adc
ret
jp
sub
xor
cmp
insb
sub
sub
add
aas
adc
dec
mov
xchg
pop
loop
popa
sbbl
loop
ja
arpl
add
mov
jne
cmp
push
dec
fadds
outsb
push
or
ret
or
fists
dec
pop
mov
mov
inc
inc
or
push
shrl
call
xchg
push
adc
jl
cmp
pushaw
sub
loopne
nop
lods
orb
shrb
jg
add
pop
sbb
out
dec
dec
xor
shr
push
cmp
std
mov
cld
push
pop
lea
pop
or
loop
fwait
repz
cmp
in
cmp
lods
lcall
inc
shlb
rorb
subb
add
ds
xchg
push
arpl
loop
and
addr16
les
aam
xor
cmp
lods
and
movnti
sahf
xchg
push
mov
jg
hlt
mov
in
stc
inc
addr16
jmp
jno
mov
insl
add
enter
pop
pop
xorb
das
mov
fisubl
loopne
mov
cli
cmc
push
lock
lret
pusha
adc
xchg
inc
ret
jle
repnz
lods
and
call
ret
xor
das
out
xor
sub
fstpt
adc
ds
roll
mov
xor
mov
mov
addr16
movsb
dec
cmpsl
gs
test
repz
jno
mov
jg
nop
icebp
scas
fsubrl
imul
xchg
aaa
out
lods
ret
subl
dec
dec
loopne
loopne
int3
mov
pop
xchg
mov
lods
xlat
mov
ret
mov
cmpsb
or
xchg
lods
enter
mov
sub
add
pop
rcll
sub
jecxz
jle
int
stos
test
stc
dec
add
imul
je
lock
sub
rorb
pop
das
xchg
sbbb
lods
popf
pop
add
sub
cmpsb
xchg
xchg
push
sbb
sahf
or
or
pushf
mov
ljmp
lock
lods
mov
lcall
nop
mov
loope
pop
push
and
insb
pop
mov
or
mov
mov
dec
mov
std
cmpsb
dec
sub
ss
imul
xchg
fbld
sub
and
adc
xchg
xchg
xchg
cbtw
sub
int3
xchg
cmp
jmp
mov
sahf
hlt
dec
mov
ja
arpl
lock
jp
rolb
sub
mov
shll
std
mov
hlt
in
sbb
les
mov
jbe
jmp
cli
into
das
inc
mov
push
test
lret
in
add
pushf
add
cmp
xor
gs
jae
and
rolb
mov
pop
movsb
lea
sahf
sbb
xchg
mov
mov
inc
leave
inc
xor
push
adc
rcrb
aas
sub
sbb
scas
scas
mov
cmpsb
loope
and
mov
jbe
sbb
add
adc
xchg
mov
ret
addr16
mov
add
ljmp
rorl
test
xchg
ss
xchg
sti
je
push
push
xor
std
push
or
sti
int3
dec
ss
mov
push
int3
mov
data16
cltd
js
testb
test
jmp
mov
cli
pop
fildll
subb
pop
daa
dec
sub
push
inc
outsb
push
xchg
mov
mov
hlt
sbb
or
xor
aaa
cld
fs
in
pop
push
sub
push
das
sbb
mov
sbb
lock
push
inc
push
ret
or
push
adc
inc
mov
inc
xchg
dec
ret
dec
add
inc
dec
lcall
jne
sub
shll
icebp
out
push
dec
je
mov
into
dec
pushf
clc
mov
xchg
push
jns
addr16
mov
sbbb
outsl
dec
int
sbbl
dec
cmp
sub
sahf
fbstp
xor
outsl
add
inc
or
dec
dec
ficompl
pop
outsb
dec
repz
dec
jo
lock
xchg
add
inc
orl
ss
daa
loope
jo
mov
lcall
sub
test
je
inc
jne
loopne
shrl
jbe
xor
rorb
jo
lods
popf
cmp
dec
fs
mov
outsb
imul
pop
jle
dec
push
add
xor
call
inc
shlb
je
dec
adc
into
ficomps
stos
movsl
cmpsb
push
mov
or
lods
dec
cmp
mov
inc
jp
xchg
add
add
insl
inc
pop
sbb
das
xor
push
hlt
loopne
push
lcall
insb
adc
jo
jo
sbb
xchg
dec
mov
cmp
jmp
cmp
sub
inc
mov
mov
cli
mov
push
mov
pop
lret
ljmp
mov
arpl
xchg
imul
mov
popl
insl
sbb
or
sbb
pusha
sahf
xchg
js
cmp
in
loopne
std
dec
add
xor
decb
cwtl
and
adc
ffreep
cmpb
mov
movsb
inc
imul
test
sub
add
sbb
ret
scas
loope
cwtl
js
cmp
adc
loope
pop
xlat
icebp
push
in
addr16
dec
lret
loopne
add
dec
dec
loope
add
adc
or
push
push
jbe,pt
push
imul
movsl
xchg
push
or
xchg
lock
aas
test
mov
cli
test
cld
push
sbb
cmc
push
fistl
test
test
ja
cmpsl
lret
test
sub
loopne
dec
lcall
mov
lahf
and
pusha
subb
enter
push
rorl
les
fists
xchg
mov
and
shlb
mov
add
scas
inc
adc
xchg
mov
je
push
std
das
addl
or
adc
test
push
mov
pushf
call
push
cli
outsl
cmp
jne
lcall
push
xchg
inc
adc
lock
outsb
stos
adc
push
xor
jle
jo
out
and
icebp
jb
xchg
jge
das
insb
int3
pop
lret
ja
and
clc
scas
cmp
sbb
pusha
loop
cmpb
push
leave
jmp
mov
fsubrp
xor
xchg
jmp
add
jmp
ljmp
jg
push
int3
loope
fwait
ret
inc
mov
adc
cmp
aam
inc
std
jo
mov
outsb
pop
and
pop
sbb
jnp
mov
inc
into
jns
fcmovnu
lock
insb
mov
leave
push
cwtl
jo
adc
nop
divb
outsb
mov
sti
ss
pusha
stos
cmp
in
lds
sahf
fidivrs
sub
push
pop
lcall
adc
ror
test
cmp
aas
xor
xchg
rcrb
jb
dec
cld
dec
inc
mov
pop
scas
jne
jae
jmp
stos
mov
add
add
fsubl
jl
jno
cli
repnz
xor
adc
and
inc
mov
lahf
or
mov
jbe
sti
adc
mov
andl
push
sbb
idiv
push
bound
cmp
xchg
push
jl
and
jl
std
pop
sbb
mov
into
lcall
push
fcomps
cmp
dec
jmp
loopne
insb
or
aad
fsubp
pop
pop
nop
push
pop
push
sub
or
push
add
cs
fdivs
dec
cmpsb
aas
push
adc
mov
sbb
ret
sar
stos
insl
xor
add
sub
or
movsb
jns
mov
xor
enter
daa
add
mov
jnp
add
addr16
ficompl
sbb
pop
cmpsb
inc
push
aaa
aad
sub
lcall
rol
pop
xor
fstp
pop
mov
sahf
or
mov
ret
lcall
dec
cli
or
xchg
dec
push
decb
xor
mov
sub
cmp
stos
push
mov
mov
cmp
add
out
sbb
push
push
lea
je
fwait
loope
sub
or
mov
jb
add
arpl
cmpsl
repz
xchg
mov
int
popa
jnp
mov
xor
sbbl
rolb
cld
jb
in
call
jo
out
je
lds
mov
stos
fistpl
push
pop
jo
lds
stos
or
and
pop
push
sub
and
mov
pusha
test
push
push
sarb
sub
sub
sub
or
mov
cld
out
ret
aad
push
lahf
or
ljmp
push
clc
addb
test
lret
mov
or
in
aas
cmp
loop
mov
decb
mov
imul
fcoms
jl
push
lret
jg
push
stc
nop
outsb
xor
jo
pop
jno
pushf
fsubrl
adc
pusha
cwtl
rclb
pushf
xor
outsl
add
add
fcoms
adc
mov
das
push
sbb
outsl
adc
data16
mov
hlt
out
pop
fs
pop
out
pusha
jns
inc
push
loop
fiaddl
sahf
outsb
clc
lret
sarl
mov
and
dec
dec
mov
mov
cmp
out
jno
pop
mov
mov
shll
jno
aad
dec
pusha
mov
xchg
jns
pop
lock
or
les
jmp
or
test
jecxz
mov
jno
fidivrl
mov
push
insb
mov
add
mov
add
mov
jl
sahf
shll
ficomps
fsubs
gs
dec
shll
push
lods
hlt
cld
or
push
push
leave
mov
push
xor
sbb
loopne
cwtl
pop
or
sahf
insb
cmp
movb
add
stos
mov
hlt
lahf
setne
jge
add
cltd
js
pop
in
pop
pop
jne
push
andl
imul
iret
pushf
jle
fmuls
inc
sbb
ret
xchg
repnz
jecxz
jne
mov
jae
aas
add
mov
jbe
xchg
jbe
loope
mov
icebp
and
add
dec
idiv
dec
adc
push
adc
jo
cmpsl
fbld
jo
inc
mov
mov
cmpsb
mov
lods
outsl
imul
loop
jo
xor
and
cmpsl
push
fcompp
fsubrl
outsb
ljmp
inc
inc
jo
push
cmp
xchg
jo
xchg
pop
ljmp
jb
outsb
imul
dec
clc
push
push
out
movsl
inc
dec
pop
adc
call
add
out
dec
test
mov
pop
aam
push
mov
mov
add
lret
push
push
mov
adc
aad
shl
and
mov
shufps
and
dec
jo
or
xchg
pushf
adc
and
pop
shrl
imul
jns
pusha
xor
dec
clc
ficoms
push
dec
stc
ret
dec
dec
jns
lock
add
outsb
dec
mov
popf
pop
xchg
add
clc
adc
iret
scas
add
push
dec
imul
sub
push
mov
out
or
repnz
dec
out
jmp
mov
push
sub
out
lods
cmp
mov
pop
sub
inc
mov
add
add
mov
lods
cmp
inc
gs
outsb
fwait
sub
cmp
xchg
subb
daa
mov
pop
ss
inc
push
adc
aas
inc
mov
rcrb
sti
adc
mov
mov
sbb
subl
insl
xchg
fcoml
jmp
mov
pusha
add
cmp
inc
xor
or
dec
mov
and
movsl
or
fsubs
or
cmp
jg
sub
and
stos
rorl
mov
xchg
scas
pause
std
lcall
pop
cmp
mov
xor
fiaddl
xchg
int
xchg
sbb
pushf
ds
test
fldenv
mov
lret
inc
test
or
xor
sbb
jns
loopne
jnp,pn
jmp
inc
jge
test
cld
fisubl
or
das
dec
jno
xor
adc
mov
mov
in
or
ret
dec
dec
pop
or
ljmp
mov
add
lds
adc
in
and
test
sbb
int3
mov
sbb
and
test
jne
dec
in
lods
imul
faddl
mov
mov
sbb
arpl
sub
push
xor
or
xchg
rol
lret
sub
sub
add
adc
fsub
stc
shll
adc
mov
ror
ror
or
sbb
xchg
or
out
jmp
insl
cmp
or
lcall
mov
and
add
and
movl
int
je
mov
mov
xor
cmp
fstps
cmpsb
loope,pt
or
inc
popf
out
cmp
sbb
sahf
push
push
jae
das
in
ret
push
xor
stos
jnp
inc
jne
es
insb
inc
imul
push
or
stc
cmp
sub
xchg
add
in
in
add
and
arpl
cld
sub
lock
xlat
das
pop
sub
imul
cmpsb
popa
out
cmpsl
jmp
jge
nop
sbb
push
pop
ja
xchg
sti
lea
dec
rcll
pop
cmp
push
stos
sbb
not
dec
xor
daa
mov
sub
daa
xchg
xchg
pusha
add
shrl
cmpsl
inc
movsl
cmc
add
mov
ds
mov
xlat
mov
add
mov
jecxz
push
mov
push
xchg
mov
mov
popa
js
dec
fcmovnu
cmp
push
icebp
shr
call
and
filds
or
pusha
cmpsb
mov
cmp
cmp
inc
scas
push
jnp
gs
jmp
xchg
push
mov
mov
leave
inc
ret
addl
in
dec
jns
lcall
movsl
dec
pop
inc
mov
jmp
sub
data16
ss
in
inc
mov
mov
in
sub
repz
add
dec
push
loopne
or
test
xchg
pop
jl
mov
push
loope
movsb
mov
mov
ljmp
setne
lahf
xor
mov
test
push
sarb
xor
scas
popa
imul
mov
lahf
insl
pop
out
cmpsb
aad
push
adc
jle
add
mov
inc
test
movsb
jb
mov
jno
imul
daa
sbb
aad
add
ljmp
daa
jbe
mov
sbb
xchg
pushf
xor
ss
aam
dec
imul
incb
inc
sbb
xor
int3
stos
or
fs
movsb
addr16
mov
fsubrs
in
les
xor
add
sbb
mov
cs
testl
ret
loopne
dec
popa
pop
adc
repnz
and
pusha
aad
push
testb
dec
jno
pop
stc
lret
outsb
add
ss
ret
inc
push
in
das
adc
jae
arpl
clc
push
outsl
aaa
pusha
dec
mov
sti
adc
fbld
dec
dec
cmp
sahf
inc
mov
dec
push
add
or
push
cmp
push
xor
repnz
cmp
push
push
fs
xchg
add
sbb
inc
dec
in
movsb
jbe
inc
inc
inc
jne
jg
insb
dec
cli
and
dec
cmp
fildll
mov
loop
adc
jo
or
popa
lcall
inc
clc
sub
rcll
add
cltd
int3
mov
lret
insl
je
ficoms
xchg
bound
push
add
add
push
lcall
lock
adc
inc
outsl
outsb
xor
ret
pop
dec
sbb
inc
outsb
xor
mov
testl
lcall
in
lret
aam
leave
mov
loop
xchg
gs
lods
jmp
movsl
sub
add
aad
adc
dec
lcall
lret
adc
andl
pop
dec
fcoms
or
pusha
and
nop
iret
aas
inc
out
ds
imul
push
cmp
test
je
sti
cmc
nop
lret
or
cltd
pusha
xchg
aad
add
mov
jb
fwait
and
outsl
les
loop
ds
es
int
pop
in
dec
out
xchg
sub
fsubr
lods
jb
leave
mov
mov
pop
mov
fwait
mov
sbb
daa
aam
arpl
push
xchg
or
stos
enter
out
scas
ficoms
lods
mov
or
push
pop
insl
adc
jge
cld
or
add
add
js
scas
loopne
push
cwtl
add
repnz
scas
popa
inc
mov
fcoms
or
ret
loopne
sahf
test
cmp
xor
in
rcl
xor
or
xchg
cwtl
mov
test
mov
cmpsl
add
or
cmpsb
xor
jge
jbe
enter
mov
lds
mov
jbe
dec
loopne
xor
jge
pushf
sub
jle
outsb
adc
xchg
fsqrt
pop
push
mov
mov
inc
mov
sub
jp
adc
jge
or
pop
loop
jg
pop
dec
call
movsb
pop
push
movsl
gs
add
ds
pop
lahf
add
icebp
orl
rorb
xor
mov
into
loop
or
insl
cmp
add
push
rolb
rorl
data16
into
cmp
popa
repnz
imul
mov
adc
out
push
daa
adc
pop
sub
ret
inc
push
enter
add
outsl
test
sub
inc
and
addr16
call
hlt
push
inc
push
jmp
pop
jae
js
data16
lods
inc
adc
in
add
idivb
push
sbb
inc
xsha256
cmpsb
push
pop
mov
sbb
dec
cmpsb
or
jl
pop
sbb
add
sahf
stos
lods
repz
push
mov
lods
push
hlt
rorb
cltd
das
aam
jbe
inc
or
push
stos
mov
rolb
mov
add
jnp
je
or
xor
lods
dec
xchg
and
jg
push
push
daa
std
inc
into
inc
add
and
jns
fnstsw
sbb
cld
sub
test
les
daa
adc
sbb
cwtl
mov
loope
mov
fcmovnbe
xor
sbb
push
cmp
pop
and
lock
mov
push
sarl
mov
mov
mov
push
inc
mov
jne
movsl
adc
pop
pop
ss
dec
vmovd
cmp
lea
mov
mov
push
sarl
in
adc
adc
inc
bound
int
inc
and
xchg
inc
int3
push
add
lods
or
fcmovne
mov
js
imul
adc
pusha
sbb
mov
sbbl
pushaw
stos
bound
andl
cmp
jg
add
in
fsts
push
loopne
pop
mov
xor
xlat
push
sti
insb
and
push
insb
cmp
loope
std
or
or
enter
and
adc
enter
sbb
xlat
ljmp
pop
cmp
sbb
jg
jb
mov
mov
xor
cmpb
mov
pop
lea
mov
or
lods
pop
orb
aad
test
in
outsb
or
sti
xchg
je,pt
dec
stc
cmc
xchg
leave
lret
jno
fs
and
in
dec
xchg
mov
sbb
idivb
in
and
pop
inc
orb
jns
daa
mov
add
fisttps
ret
xor
icebp
pop
pushf
andl
adc
cmpsb
inc
aaa
pop
adc
cmp
mov
ret
sub
data16
jmp
jno
fisttps
or
and
clc
jns
ret
and
mov
fdivp
ja
loop
jmp
test
imul
mov
faddl
call
in
int
notb
hlt
repz
mov
xor
aas
xchg
add
dec
popf
mov
inc
cmp
jo
fldl
sbb
and
mov
pop
cmp
inc
xchg
mov
shrl
mov
outsb
cmp
sbb
jg
cmp
xor
gs
xchg
xor
pop
and
stos
or
or
mov
ret
repnz
pop
fcoms
imul
mov
and
mov
inc
test
or
mov
push
insl
loop
sub
mov
mov
push
or
xchg
mov
btc
xor
jnp
inc
inc
cmp
push
jne
mov
mov
jp
in
lods
fisubl
xlat
adc
mov
push
jle
mov
lds
imul
pusha
es
rorb
lds
addr16
das
dec
adc
outsl
sub
mov
insb
es
push
pop
cmpsl
das
xor
dec
mov
cltd
pop
int
sbb
insl
decb
es
and
xor
pop
cmpb
adc
rclb
mov
das
pop
mov
cmp
mov
lea
fwait
insl
inc
arpl
stos
pop
mov
or
call
loopne
inc
lods
dec
js
jne
outsb
mov
pop
push
call
add
add
rcrb
or
pushf
add
popl
test
addr16
loopne
mov
mov
movsl
adc
cs
jp
mov
push
testb
pop
mov
repz
inc
lods
or
data16
bound
subl
adc
movsb
fstps
bound
in
rclb
mov
mov
mov
adc
lret
outsl
and
and
xor
loopne
pop
aas
adc
add
mov
mov
sub
imulb
dec
addl
mov
adc
xor
gs
addr16
xchg
testl
jge
lods
xchg
loope
je
xor
sarl
add
dec
das
pushf
cmc
shrb
dec
js
sbb
call
xchg
aam
andb
in
mov
xor
add
mov
lret
fcomps
jmp
andb
lret
dec
in
mov
adc
jmp
arpl
shll
adc
stos
mov
inc
and
pop
dec
jg
sarb
xorb
rclb
daa
inc
and
pop
push
xor
sbb
outsb
pushf
jl
pop
sbb
ljmp
addr16
pop
jecxz
shlb
adc
add
jp
shll
pop
in
jecxz
icebp
int
bound
in
or
xor
mov
lock
test
loopne
lahf
aad
mov
pop
and
push
xchg
inc
gs
icebp
sbbl
inc
mov
nop
stos
adcl
scas
je
mov
std
mov
lods
lret
popa
mov
mov
es
mov
mov
cs
mov
rcrl
or
xchg
std
sbbl
insl
movsl
in
cmp
ds
push
xchg
sbb
push
pop
adc
in
pop
jecxz
jnp
das
mov
stos
imul
push
mov
test
in
mov
pusha
stos
cwtl
in
inc
mov
jge
add
mov
push
scas
mov
mov
dec
clc
sub
push
insl
xlat
add
repnz
adc
mov
push
leave
adc
push
mov
lods
mov
mov
rolb
push
inc
iret
ret
sub
dec
ror
sub
inc
loopne
adc
popf
shll
mov
cmp
addb
popf
cmp
cmp
jns
cmp
loopne
jmp
daa
icebp
adc
ja
mov
xchg
lods
sbb
xor
mov
imul
test
xchg
mov
mov
imul
sbb
add
mov
mov
negl
mov
es
into
pop
shl
sbb
fbld
cmpsb
minps
push
cmp
inc
cmp
notb
dec
cli
movsb
adc
cmpb
add
xor
addb
sub
outsb
mov
xchg
rolb
movsb
call
xor
pop
mov
rclb
movsb
push
stos
lret
loop
xor
add
mov
mov
mov
cmp
shll
and
aad
mov
out
dec
cld
lcall
xorb
out
bound
js
lods
inc
stos
adc
jo
pop
xor
inc
loope
mov
emms
or
mov
insb
dec
lods
mov
and
popa
mov
sbb
fwait
cmp
dec
fisubrs
aad
jb
sahf
jg
icebp
or
dec
xchg
pop
push
and
and
ds
loope
xor
fs
es
mov
push
mov
andl
cmp
mov
hlt
add
gs
ret
adc
bound
cmpsl
push
stc
adc
ljmp
dec
sbb
into
adc
rorb
xor
jno
orl
stos
imull
test
into
and
push
sbb
ds
cltd
ret
test
xor
mov
jp
mov
dec
cmp
xchg
jnp
jne
shrb
out
xchg
fldl
loop
add
mov
sti
and
stos
clc
sbb
test
lea
test
jle
xchg
xor
repnz
pop
clc
and
cmpl
sbb
xchg
icebp
add
cwtl
jg
gs
arpl
cmpsb
stos
dec
mov
shll
dec
mov
ljmp
sub
or
addb
jb
test
mov
jno
jno
mov
mov
cltd
es
jnp
inc
xchg
test
push
cmp
push
cmp
dec
dec
mov
syscall
cmp
push
scas
stos
addl
dec
add
inc
cmp
test
gs
adc
testb
call
test
cmp
pmaddwd
sbb
ret
sub
dec
daa
mov
adc
xchg
movsb
or
les
jl
aaa
add
and
inc
inc
add
sub
jae
cmp
lea
xchg
inc
cmp
jo
push
add
jo
out
sbbb
rolb
sub
push
or
adc
pop
cwtl
test
std
and
jo
sbb
add
mov
sbb
idivl
pop
add
add
or
ljmp
cmpsb
lcall
mov
mov
mov
pop
arpl
adc
shrb
mov
repz
jbe
add
std
jno
fistl
cmpsl
jge
lea
call
jl
xchg
cmp
aaa
dec
imul
adc
add
mov
leave
push
imul
loopne
das
repz
movsb
sbb
mov
in
push
add
push
xor
cltd
mov
xchg
pop
out
adc
imul
adc
jbe
and
stos
cwtl
sahf
pusha
aas
push
jge
inc
cli
jno
push
sub
insl
xchg
not
xorl
jl
cs
mov
and
cmp
or
sub
sub
sti
jecxz
aad
adc
test
call
add
push
adc
imul
incl
add
dec
shl
pusha
sar
cli
inc
sbb
add
pop
fildll
jne
jg
mov
rol
adc
xchg
in
in
mov
sbbl
xor
jle
xor
xchg
out
movsl
sub
in
jo
fdivl
fsubp
jp
aad
push
int
dec
out
out
push
cs
popa
lock
xor
cmc
xor
pop
mov
adc
pushf
pop
or
xchg
sbb
or
push
hlt
inc
mov
sbb
push
std
mov
test
addl
cli
push
rolb
xchg
icebp
xlat
mov
test
aam
sub
cmp
rolb
dec
rorl
add
das
stos
inc
sbb
fidivrs
lahf
sbbl
add
clc
xchg
mov
ret
jnp
das
sub
push
add
push
filds
aam
mov
addr16
inc
mov
sarb
cmp
inc
xor
insb
popa
fistl
add
and
add
sbb
push
cmpsb
jno
add
cmp
push
rcrl
lock
es
cmp
push
pushf
mov
adc
mov
aas
dec
pop
inc
mov
in
rolb
fdivs
push
js
jb
jbe
fs
xor
dec
add
add
xor
mov
mov
jo
and
insl
dec
gs
add
mov
arpl
mov
ja
sbb
mov
push
stos
int3
inc
mov
dec
in
loope,pn
pop
inc
add
testl
inc
js
jl
mov
pop
push
stc
daa
mov
jecxz
imul
dec
insb
mov
dec
dec
bound
ss
adc
jecxz
sti
cmovb
xor
mov
jo
cli
xchg
test
inc
push
aaa
stos
add
aaa
xor
loopne
fimuls
ret
jae
fs
adc
ja
loope
cmc
in
out
ret
loopne
sbb
test
xchg
int3
or
inc
and
bound
cmpsl
ss
push
push
jne
call
xor
iret
repz
clc
and
cmp
lock
inc
jmp
dec
jne
inc
pop
jl
enter
inc
pop
lods
adc
fsts
ffreep
push
dec
lret
dec
adcb
insb
popf
xchg
clc
sahf
cmp
imul
shrl
clc
mov
and
dec
jge
js
imul
jg
dec
fs
add
or
cli
rclb
clc
dec
add
insb
jno
ret
sub
cmp
dec
cwtl
inc
cmpb
ljmp
cmp
lret
mov
js
dec
sbb
inc
dec
mov
or
ljmp
xor
inc
pop
push
cld
xchg
or
inc
fmuls
sbb
jb
dec
jae
pop
inc
add
pop
push
sub
xchg
add
mov
mov
mov
xchg
adc
rol
inc
lea
add
xor
cmp
inc
dec
cld
and
into
cmpsb
sbb
fs
mov
sbb
popa
dec
push
jae
rorl
or
inc
jp
into
incl
subb
gs
push
xchg
jo
push
int3
push
pop
ja
xchg
std
add
xlat
insl
sbb
push
mov
dec
imul
ja
dec
addr16
addl
push
push
dec
xchg
js
rorb
push
and
cld
push
imul
cmpl
xor
jae
jbe
jecxz
xchg
xor
repz
inc
sub
ss
ret
mov
adc
pop
dec
fsubr
loope
push
idiv
or
or
mov
mov
jne
xor
xchg
mov
pop
iret
push
ja
sub
inc
jecxz
jp
lea
inc
adc
or
loopne
in
inc
dec
pusha
int3
inc
and
out
movsl
push
fnstcw
ret
call
dec
rcl
scas
fdivl
lret
add
mov
jnp
inc
add
mov
sbb
ds
imul
outsb
xchg
sub
inc
sbb
inc
push
xor
hlt
pop
pop
into
push
pushf
push
imul
push
adc
inc
ficompl
jle
fdivr
insb
js
inc
out
push
cli
cmp
dec
or
push
scas
pop
fdivrs
push
loop
iret
push
push
insl
mov
adc
pushf
sub
icebp
aad
outsb
adc
scas
dec
bound
jle
mov
xor
pop
jae
inc
ret
inc
jbe
shrl
mov
xorl
call
mov
adc
out
pop
roll
xor
loop
cmp
sbb
or
ja
sahf
push
lret
push
mov
insb
jns
push
dec
push
sub
xor
push
mov
enter
mov
lock
mov
ja
sbb
inc
pop
ss
iret
icebp
lret
inc
arpl
mov
add
shll
jb
addr16
mov
xor
xor
jmp
flds
sbb
les
add
addb
dec
jge
push
dec
xor
test
mov
or
lock
fiaddl
sahf
add
mov
pop
xchg
dec
or
pop
adc
dec
xor
cmp
sub
lcall
cmpsb
inc
cmp
in
cmpsb
mov
jmp
test
popa
push
dec
jae
ret
add
jns
fisubrs
inc
push
mov
push
or
mov
subb
inc
popf
xchg
xor
dec
in
loopne
ja
js
add
pop
mov
push
sub
loopne
adc
ficompl
es
cmp
or
imul
ja
xchg
push
xorb
aam
outsb
sbb
adc
outsb
jbe
outsb
iret
cmp
fucomip
jbe
imul
insb
push
stos
stos
daa
pop
sub
jae
sarl
and
sbb
cmp
ds
test
into
ds
inc
stos
popa
jb
fimull
rolb
data16
sar
testb
inc
inc
dec
popa
and
dec
dec
inc
loopne
mov
sub
jb
js
or
mov
mov
addb
inc
mov
ljmp
xor
inc
arpl
arpl
data16
fisubrs
dec
inc
sahf
push
js
inc
int
popl
push
mov
push
insb
add
gs
insb
les
push
imull
dec
and
shlb
out
imul
in
lock
cmpsl
loopne
dec
jne
lret
cs
xor
fs
mov
push
dec
imul
inc
cmp
xor
pop
inc
inc
jns
les
xorl
icebp
or
xor
mov
lret
ljmp
xor
sbb
sub
dec
lock
inc
rcrl
jno
add
adc
cld
or
insb
mov
mov
jno
push
or
mov
or
adc
pop
lea
orl
movsb
pop
es
shrl
push
jmp
mov
mov
stos
xor
test
push
out
jmp
test
and
push
add
aas
fsubrs
in
pushf
dec
popa
xor
in
ss
mov
jo
add
movq
scas
xor
data16
sub
cwtl
bswap
adc
imul
mov
mov
cmpsl
jb
mov
xchg
cmp
adc
roll
cltd
adc
adc
or
ljmp
ret
dec
xorw
add
inc
xchg
jnp
popa
les
add
das
cwtl
xchg
jge
jnp,pt
or
jl
dec
in
cwtl
push
sbb
push
pop
leave
incb
adc
dec
sub
pop
sti
dec
dec
cmp
mov
mov
or
or
add
loope
sbb
pop
xor
lods
subb
xchg
xchg
pop
jnp
adc
push
push
or
xchg
sbb
out
ffree
arpl
out
mov
imul
jo
pop
push
dec
faddp
cwtl
mov
inc
push
adc
lret
jmp
sub
lret
mov
sub
mov
sbb
jbe
popa
lods
loope
xor
cmp
pop
jp
push
push
pop
ss
sub
repz
mov
mov
repz
lret
push
orb
sti
xchg
clc
mov
sub
cmc
mov
xor
xorl
jecxz
and
aam
das
add
aam
dec
andl
popf
jmp
xchg
jne
in
movl
cltd
sbb
fists
jp
or
rolb
jge
shll
cmp
stos
popa
and
and
and
shr
mov
addb
mov
xchg
mov
cmp
in
icebp
out
mov
cmp
orb
in
movsb
xchg
pop
into
adc
es
or
fsubl
mulb
xchg
lea
roll
gs
dec
shl
cmp
emms
lock
test
in
pop
xor
sbb
sub
mov
xor
push
scas
cmpsb
sbb
xchg
add
add
rorl
mov
mov
loopne
ds
movsl
xor
loop
stc
jle
sub
sub
mov
movsb
xchg
cmp
loopne
in
cmp
cmp
sbb
and
mov
xorb
outsb
cmp
bound
test
arpl
loop
jecxz
inc
ret
mov
test
lcall
jecxz
mulb
imul
cmpsl
cld
or
lret
sti
popf
or
adc
rcll
adcl
cmp
sub
adc
xor
mov
inc
push
or
dec
push
xor
push
mov
xchg
shrl
stc
loopne
pop
xorl
lock
add
arpl
mov
scas
inc
cwtl
push
push
cs
rorb
mov
mov
mov
test
rcl
imul
push
jnp
sub
mov
cs
rolb
lea
add
add
rolb
cltd
loope
mov
cmpsb
cli
cmp
mov
and
dec
add
cmp
dec
es
mov
nop
data16
je
pop
mov
lcall
push
and
dec
and
add
fcoml
or
xor
cmc
dec
call
xlat
pop
fistpll
cmp
mov
pop
jle
test
mov
xchg
sbbb
xlat
fwait
cmp
lahf
push
xchg
lods
push
insb
xor
pop
aaa
jne
jecxz
fisttpl
dec
js
mov
inc
fld
fsubs
pop
js
xor
cli
lock
cld
aam
xor
cmp
mov
imull
jae
push
xchg
outsb
xchg
ret
mov
bound
sub
xlat
push
lods
dec
xchg
mov
inc
cmp
mov
sbb
das
xor
jae
pop
dec
inc
sub
mov
jmp
add
push
ds
or
add
ret
das
shlb
cs
dec
cli
ljmp
mov
je
dec
dec
inc
dec
add
outsl
rolb
fidivl
xor
pusha
mov
pop
dec
dec
je
mov
out
stos
xor
mov
and
shll
loopne
push
push
push
push
jne
ja
lahf
sbb
push
jmp
mov
addr16
int
xchg
sbb
lea
insb
push
add
clc
mov
pop
sbb
push
outsb
add
xchg
jne
or
fs
jg
mov
inc
mov
loope
sub
mov
sar
jp
cmp
xor
adc
ret
outsl
mov
or
insb
push
ja
push
xor
pop
clc
pop
sahf
mov
sbb
test
call
dec
adc
mov
jo
push
inc
inc
ja
outsl
popf
out
push
or
jne
mov
dec
dec
in
or
pop
leave
cmp
push
ljmp
repnz
jo
push
lds
sbb
jle
jne
fs
inc
adc
inc
inc
jecxz
pop
pusha
hlt
push
push
jg
dec
cli
jecxz
test
push
pop
push
icebp
incb
inc
xor
mov
int
nop
addb
inc
or
push
sub
jb
addl
inc
or
in
lods
popa
and
cmpsb
icebp
add
jmp
mov
movq
inc
aam
outsw
sbb
mov
imul
fmul
dec
outsl
push
js
std
adcb
push
mov
jle
mov
insl
dec
stc
cmp
dec
js
shr
dec
add
pop
mov
dec
jbe
aam
jl
clc
jge
pop
add
call
lret
jae
add
inc
mov
and
push
hlt
cmpsb
jns
les
pushf
fs
mov
cli
test
clc
push
pop
push
xor
addr16
sbb
outsb
dec
sbb
inc
movsl
mul
std
inc
push
inc
ss
or
cmp
in
clc
jbe
inc
cmp
dec
push
lret
dec
add
dec
inc
dec
loop
push
xchg
mov
push
dec
jmp
bound
jle
cmp
add
inc
inc
sbb
cmp
fidivs
dec
push
xor
jge
test
sbb
imul
mov
movl
in
fisubrl
flds
shll
lret
mov
test
add
and
or
mov
jo
sbb
ret
arpl
enter
stos
add
sbb
xor
or
and
test
lods
or
cwtl
xacquire
push
jo
inc
jb
dec
mov
cmp
sbbl
cmp
les
imul
mov
pop
fiaddl
test
dec
iret
adc
or
out
test
cwtl
cs
aad
xor
sbb
ds
js
add
inc
jecxz
outsl
push
pop
lret
jbe
jne
jmp
test
cltd
mov
loope
fdivr
out
dec
add
jae
pop
js
iret
dec
add
dec
sub
ret
loop
fistps
jne
push
mov
test
mov
cs
sub
ret
xor
aam
sub
jbe
stos
cmp
jp
push
mov
inc
sbb
add
sbb
fimuls
cmp
out
sbb
lock
jbe
cmp
jno
iret
cmp
push
or
es
dec
pop
sbb
dec
into
mov
addl
sbb
sbb
adcl
mov
call
add
out
xchg
sbb
ret
out
add
mov
push
imul
jb
and
in
aaa
lds
add
daa
rcrl
adc
mov
ficoml
mov
loop
push
call
aaa
adc
push
ret
loop
stc
loopne
pop
shll
ror
mov
jl
cmp
mov
xor
jl
push
adc
es
pusha
dec
cli
or
sbb
mov
test
mov
inc
push
ss
loop
aas
add
and
mov
negb
call
fistpll
add
sbb
pop
add
mov
icebp
outsb
mov
icebp
add
jp
cmpsl
es
xor
daa
sti
stos
lcall
cmp
shll
outsl
faddl
dec
sbb
sub
adc
js
out
in
inc
push
int3
sub
mov
cltd
imul
cmp
xchg
inc
push
mov
push
xchg
test
je
sti
ret
inc
or
cmpsl
fdivrs
xchg
scas
addl
les
dec
repnz
push
lods
mov
push
inc
cld
xchg
sub
lahf
add
paddusw
in
js
mov
loopne
push
push
sub
das
sub
sbb
mov
mov
push
scas
dec
xchg
adc
lahf
icebp
inc
lods
sub
std
add
cld
sub
stos
test
add
inc
push
in
cmp
les
adc
cmp
push
inc
pushf
daa
lods
out
push
dec
push
adc
lods
adc
mov
jp
ret
mov
push
push
add
mov
adc
add
rcrl
loopne
and
sub
jmp
aad
mov
sub
ret
xor
jns
xchg
mov
sbb
sbb
into
jmp
frstor
mov
pop
loope
adc
push
cld
xchg
pop
pop
push
lds
lock
ret
cmp
hlt
cli
xor
shll
insb
test
cmc
push
push
cmp
lock
sti
xchg
push
mov
lret
or
ffreep
iret
sti
push
inc
loop
jb
push
dec
sub
pop
icebp
push
add
shl
add
jle
decl
insl
cmp
inc
int3
mov
popa
shr
xlat
lea
mov
mov
mov
aad
mov
inc
out
jp
nop
jl
dec
jo
fiaddl
mov
shl
rcrl
loopne
cmp
sbb
shrb
ficoms
inc
jbe
xchg
pop
push
push
dec
shlb
pop
cld
push
or
repz
ret
mov
sbb
fidivl
jne
add
mov
xchg
aaa
inc
inc
cld
dec
dec
adcl
dec
fnstenv
pop
lea
xorl
pushf
xchg
ja
rcll
out
je
jbe
sti
xchg
je
lea
cli
mov
jnp
shll
loope
push
push
pop
sbb
push
or
pop
ret
push
dec
faddl
rorb
clc
and
add
inc
pop
inc
mov
clc
xchg
push
dec
arpl
sahf
mov
sbb
aam
sub
push
add
lds
jecxz
mov
sub
ficompl
inc
cld
jl
test
sbb
rcrb
xchg
and
pop
gs
push
dec
push
pop
flds
jge
jl
outsb
out
outsl
cmp
cmc
js
sbbb
push
les
push
mov
idiv
xor
mov
mov
pushf
add
dec
inc
xchg
imul
aas
push
enter
sbb
ljmp
lea
add
outsl
dec
pop
jbe
bound
mov
lcall
test
repnz
add
and
sbb
sub
sti
ficompl
cmp
adc
loop
lcall
hlt
cmp
inc
or
test
xchg
es
out
ja
orl
mov
sbb
jecxz
das
mov
movsl
jmp
out
aam
cmp
test
mov
push
js
add
fisubs
fwait
mov
mov
adc
jne
fiadds
cmpsb
mov
xor
add
mov
addb
stos
sarl
sbbb
pop
loop
cmp
cltd
es
mov
and
dec
add
mov
xchg
jmp
inc
movsl
iret
fcmovbe
mov
ss
jmp
adc
xchg
test
push
js
sbb
ja
jne
push
inc
jne
mov
xor
lds
sahf
or
sbb
jnp
ja
sbbb
mov
or
movsb
push
add
out
xchg
std
push
xchg
jle,pn
add
cmp
or
ret
lods
pushl
xchg
icebp
add
and
or
xchg
pop
test
aas
sahf
push
cmpsl
sub
dec
out
push
rorb
jns
mov
int
mov
xchg
notl
push
jp
push
xor
loopne
sbb
inc
outsb
jae
fs
sbb
push
xor
push
mov
data16
insl
ja
insl
bound
adc
mov
outsl
inc
fs
jp
xlat
call
out
inc
jge
bound
imul
testl
scas
add
xor
jae
inc
mov
je
adc
adc
addr16
push
jp
mov
push
dec
dec
push
jecxz
popa
imul
fwait
sbb
sub
in
push
push
inc
cmp
fs
jns
push
xor
or
aaa
les
dec
pop
icebp
jg
or
pop
js
push
nop
mov
pop
movsl
mov
xor
pop
push
dec
call
popf
mov
mov
lods
mov
bound
lret
popa
js
mov
pop
push
inc
sbb
repnz
out
jp
push
lcall
inc
dec
or
inc
aaa
adc
arpl
hlt
pop
decb
add
mov
mov
push
pushf
in
out
xor
and
sbb
push
mov
add
push
rorb
mov
and
adc
inc
inc
rcrl
add
das
jl
ds
add
inc
insb
inc
scas
bound
pop
cmpsl
mov
fisubrs
xorb
enter
scas
and
jae
ljmp
nop
or
jae
xor
lods
js
push
mov
pusha
inc
xchg
shll
xchg
add
push
loop
test
jp
xor
pop
mov
jp
in
imul
mov
movsl
and
push
push
pop
inc
es
adc
push
in
mov
lock
subb
icebp
sti
jp
jmp
sub
scas
movsl
ljmp
mov
fcomip
dec
loop
je
sbb
and
sub
xchg
or
js
pop
cli
adc
sub
lret
cmpsb
push
xlat
add
mov
jo
sbb
in
fimull
cwtl
in
leave
lret
push
mov
mov
mov
mov
lea
adc
shlb
xchg
data16
push
fildl
in
dec
dec
push
push
scas
cltd
xchg
mov
dec
loop
xor
cmc
and
cwtl
inc
mov
jl
mov
mov
aam
mov
push
iret
cltd
stos
mov
adc
icebp
jmp
scas
pop
jp
jmp
jo
mov
push
xchg
push
test
lock
fldt
loopne
les
adc
or
add
cld
decl
jno
stos
jns
mov
xchg
sbb
fcompl
mov
shlb
sbb
xlat
and
mov
pop
pop
inc
xchg
addr16
sti
les
int3
jmp
xlat
cmp
xlat
or
loopne
mov
bound
sub
inc
adc
in
aaa
ljmp
cli
and
mov
je
fiadds
xchg
push
test
lock
daa
adc
jo
test
mov
cmpsl
loop
pop
out
fdivl
int
roll
mov
pop
jae
shrb
lahf
pop
cmpsl
add
je
cmp
comiss
or
lock
movsb
jle
jmp
imul
and
aaa
insb
roll
or
ret
fcmovnb
rcll
dec
jmp
test
jecxz
add
mov
ret
aas
test
rcrb
insb
fisttpll
shl
fisubrs
or
in
or
add
inc
fcoml
jecxz
mov
pop
sahf
ljmp
jle
and
fidivrl
sbb
mov
adc
sbb
cltd
pop
dec
sbb
jp
pop
xchg
add
sahf
lret
adc
into
inc
test
mov
shr
call
bound
mov
push
pusha
popf
sub
pop
adc
aad
lret
loop
movsl
sbb
push
mov
loope
push
mov
xchg
and
iret
icebp
add
or
adcl
jmp
dec
sbb
dec
sti
dec
test
mov
lods
sbb
push
fiaddl
ds
pop
rcl
push
fmull
int3
or
sub
and
mov
scas
lods
sub
jge
outsl
lea
fcom
inc
inc
repnz
mov
pop
test
mov
movsl
add
xor
inc
out
adc
cmc
mov
addl
xor
dec
ret
ret
and
sbb
in
xor
imul
push
mov
adc
aam
out
stos
ret
push
lret
sub
imul
xor
push
in
jl
or
ret
or
add
stc
or
and
mov
daa
xchg
pusha
mov
dec
mov
and
imul
add
dec
push
mov
ljmp
jae
jb
roll
add
push
fcmovbe
adc
decl
mull
pop
lods
and
dec
push
xchg
mov
dec
inc
arpl
mov
add
inc
and
mov
mov
inc
and
negl
test
repz
subb
test
lds
xor
sub
adc
pop
inc
inc
popa
mov
mov
mov
adc
mov
inc
popf
mov
push
cmp
gs
insl
dec
rcrb
or
iret
add
mov
pusha
fsubrl
xlat
dec
xor
gs
mov
jecxz
xchg
mov
add
inc
push
aaa
outsl
xor
xor
mov
dec
inc
add
xor
rolb
add
mov
add
xchg
pop
sbb
xor
xor
sub
into
sahf
inc
dec
xor
inc
sub
push
push
add
fs
dec
in
lcall
js
jle
xlat
adc
sub
xchg
push
popa
pop
jle
mov
push
out
dec
outsb
cmp
adc
jns
in
mov
or
and
push
dec
sarb
hlt
aad
xor
dec
jb
xor
je
jnp
lock
outsb
enter
pop
test
sbb
mov
inc
loopne
mov
xchg
xor
adc
bound
lods
push
dec
aaa
cmp
ficoms
xor
bound
lds
popa
bound
arpl
jp
rcl
scas
fidivrl
ret
lret
rcr
add
cmp
icebp
pusha
jbe
pop
xor
scas
cmp
inc
clc
inc
xchg
test
fimull
sub
add
sbb
je
fists
or
push
pop
lret
add
jl
mov
js
xor
nop
push
je
fcomps
sub
scas
dec
leave
rorb
xor
and
add
ret
cmp
ss
ljmp
sub
jg
mov
insl
cmp
pop
xlat
cmp
test
xchg
push
les
daa
loopne
incb
inc
inc
imul
ret
loopne
and
push
ret
arpl
shlb
and
into
inc
rclb
imul
mov
addr16
cwtl
mov
xchg
clc
push
push
jne
or
sbb
or
popa
outsl
shlb
and
mov
lock
insl
dec
shl
addr16
mov
dec
inc
jbe
dec
push
adc
fs
pop
outsb
push
pop
lret
adc
rorb
js
xchg
xor
adc
push
add
les
sub
pusha
adc
dec
push
xor
lahf
adc
bound
insl
jne
inc
je
inc
aaa
jno,pt
push
dec
dec
mov
push
scas
inc
dec
inc
push
insl
push
inc
js
xchg
sbb
ds
ss
pop
movsb
jg
cmp
dec
push
es
jb
xor
mov
dec
popa
push
outsl
jns
jecxz
push
gs
call
sub
jno
push
rcrl
jl
shll
dec
adc
mov
jle
jmp
insl
mov
dec
push
clc
pop
cmpps
test
pop
adc
push
push
push
aaa
jle
push
push
into
insb
cmp
fsts
inc
jae
xlat
aad
mov
add
xchg
push
xor
insb
arpl
sbb
dec
jns
ss
bound
jae
ret
aad
inc
push
jo
fdivs
subl
js
push
mov
xor
xchg
xchg
mov
and
scas
lret
pop
dec
sbb
push
xor
hlt
or
jle
xchg
mov
ret
sbb
clc
icebp
pop
gs
jmp
sbb
je
ret
lock
dec
xor
mov
nop
cmp
ljmp
mov
addr16
ret
xor
rcrl
inc
jns
les
je
je
mov
xchg
bound
js
pop
and
dec
xor
or
adc
add
jp
sti
inc
loopne
mov
jmp
push
jmp
push
divl
jns
orl
push
add
pop
jecxz
test
sub
cmp
sub
add
mov
das
mov
roll
jp
jae
or
call
inc
xor
dec
sub
fcmove
and
and
sub
aas
psubsb
pop
inc
rcr
pop
adc
adc
xor
pushf
popa
ficoml
adc
or
adc
push
insb
loopne
insl
lahf
mov
mov
imul
pop
lea
aas
lret
or
pop
outsb
push
fists
push
push
xor
inc
mov
push
add
ja
lret
jmp
pushf
nop
mov
jo
fimull
jo
jns
rorb
andb
push
mov
cmpsl
outsl
adc
insb
bound
icebp
in
cmc
movsb
jp
pop
orb
sbb
inc
imul
dec
faddp
jmp
dec
arpl
mov
outsl
pusha
inc
inc
inc
push
dec
aad
add
sti
dec
hlt
test
bound
enter
ret
lock
adc
dec
in
js
add
comiss
lcall
insl
push
js
test
or
push
xor
mov
or
fwait
stos
out
xor
mov
fistps
pushf
clc
outsb
adc
mov
push
fidivs
push
cmpsb
lret
pop
jge
out
jbe
or
ret
dec
jbe
mov
or
orb
jne
dec
stc
xor
sub
xlat
push
mov
adc
mov
push
ss
mov
pop
and
pop
jno
pop
in
push
repnz
data16
pop
or
and
inc
jmp
cmp
lock
dec
push
sub
push
insl
push
loop
scas
js
icebp
fadds
dec
jno
push
mov
ror
xor
inc
push
test
push
push
cmp
shl
dec
push
fs
loopne
jbe
jl
pop
ss
int3
sti
add
loope
ds
gs
mov
xchg
xor
push
pop
jno
jne
push
mov
rolb
jo
scas
xor
pop
enter
adcb
dec
cmp
mov
inc
inc
fcoml
arpl
xchg
dec
gs
cli
push
dec
aaa
or
ficomps
gs
data16
into
and
mov
xchg
xor
dec
push
popa
add
cmpsl
mov
inc
dec
adc
nop
mov
fs
adc
cmp
dec
jbe
ss
sub
call
fs
adc
pop
insl
mov
add
or
sub
mulb
shlb
outsb
test
data16
pop
roll
daa
adc
mov
dec
aas
sarb
sbb
cmp
push
testl
lret
lods
jl
ret
aam
adc
jmp
popa
ficomps
aam
xchg
adc
lcall
and
jmp
mov
inc
mov
cmp
jmp
jp
das
and
xabort
cld
inc
adc
nop
add
nop
ljmp
push
xchg
push
scas
mov
lcall
out
or
shlb
sub
int3
adc
inc
mov
rcrb
adc
jae
cli
into
rolb
adc
jmp
inc
test
cmp
jne
test
xor
loopne
or
jnp
sub
jne
xchg
lods
adcb
mov
std
cwtl
xchg
inc
aaa
stos
roll
out
or
mov
or
test
jg
imul
sub
cmp
addb
fdivl
cmp
xchg
mov
dec
inc
andb
mov
jmp
lahf
add
jbe
jecxz
pop
jns
push
dec
ret
sbb
call
jp
jbe
jmp
stos
scas
aad
inc
fnstsw
adc
pop
mov
push
mov
and
or
fwait
adc
add
mov
sbb
or
xchg
movsb
xlat
aad
hlt
xorb
xor
jno
xchg
pop
mov
or
adc
test
add
push
push
or
repz
pusha
int
ja
jl
mov
mov
and
aam
pop
or
mov
adc
pop
sub
push
mov
int
decb
pop
adc
jmp
pop
mov
xchg
mov
movsb
outsb
dec
jmp
pop
xor
lcall
mov
imul
negb
push
ss
jne
pusha
pushf
jecxz
sarb
add
aam
pusha
rolb
fsubrs
adc
outsb
sti
mov
ss
daa
sbb
sbb
scas
stos
push
xchg
cs
xor
test
rolb
pop
xchg
js
jno
loope
outsb
mov
repnz
mov
in
push
frstor
lret
sti
shll
xchg
sbb
add
call
pop
orl
add
push
push
mov
pop
or
fwait
insb
jl
add
test
fldl
xor
sarl
xor
xchg
push
lods
stos
xor
push
popf
and
rcrb
test
cwtl
xchg
fildll
sbbl
pop
testb
ds
push
std
inc
lahf
ret
adc
cmp
fidivrs
pop
lock
mov
mov
inc
push
xchg
leave
sbb
jmp
dec
fistl
test
mov
cs
lcall
sub
test
sub
mov
inc
push
lds
rorb
fiaddl
ret
stos
shr
es
push
stc
inc
add
adc
mov
ds
lock
test
xchg
dec
mov
hlt
inc
jb
lock
add
scas
nop
scas
mov
fdiv
call
jb
fmull
repnz
stos
cmpsb
inc
mov
mov
mov
mov
es
mov
mov
lods
pop
xchg
xchg
sub
shlb
pop
and
data16
shrl
clc
call
gs
cli
pusha
adc
incb
ds
push
mov
icebp
push
jg
push
aas
cs
sbb
or
fcoms
jo
jmp
cmp
jp
loope
enter
sub
out
stc
push
scas
push
cli
xor
push
push
dec
cmpsb
adc
adc
xchg
pusha
outsb
adc
nop
les
cli
scas
xor
xorl
adc
push
std
mov
jecxz
cmp
orl
mov
mov
ss
or
pop
xor
mov
push
pop
mov
scas
out
lcall
adc
xchg
rolb
dec
enter
pop
xor
cs
les
sbb
out
jmp
lea
imul
ja
jg
xor
fwait
sub
clc
xor
add
push
cld
cwtl
nop
inc
lods
add
fisttpll
orb
sbb
nop
adcb
sbb
xchg
repnz
add
dec
sbb
xchg
push
cmc
dec
jle
inc
bts
dec
xor
sar
sti
jmp
jmp
call
fsubrp
and
testb
mov
adc
dec
scas
mov
arpl
es
sbbl
adc
add
ret
or
cmpsl
push
testb
adc
rcl
insb
nop
enter
ja
xchg
rorl
sub
push
sub
fwait
int3
mov
sbb
push
xorl
cmpsl
fs
push
adc
add
push
dec
fdivr
rcr
in
add
add
in
loope
inc
inc
xchg
in
mov
mov
ret
int
xor
ja
enter
orl
ret
push
xchg
jmp
fistl
inc
cmp
add
mov
pop
jecxz
cmc
add
lret
jo
mov
and
jg
lds
out
adc
jle
fstl
mov
jp
sbb
push
adc
add
mov
jb
and
sub
lock
lret
jge
push
or
and
pop
ret
add
sbb
aas
data16
aad
xchg
pusha
dec
add
pop
addr16
add
dec
jne
out
stos
inc
lock
into
cmpsb
in
xchg
ljmp
inc
imul
mov
push
shll
and
fisttpll
bound
loope
push
inc
mov
sahf
scas
pop
pop
mov
cmc
xchg
rcll
out
mov
mov
cmpsb
aaa
mov
pop
dec
fildl
adc
lds
ss
ljmp
les
or
iret
out
push
out
xchg
add
pop
fdiv
push
adc
aas
and
jb
fstpl
xchg
in
dec
jmp
loopne
jb
outsb
imul
add
mov
or
cmp
mov
pop
scas
mov
popf
imul
xor
int3
add
push
rclb
das
inc
or
ja
inc
and
sbb
jne
jb
call
leave
scas
sub
push
mov
call
pusha
mov
jl
aaa
inc
outsb
mov
push
imul
ficomps
cmpsb
mov
test
sub
pop
sbb
or
push
lret
roll
popf
imul
mov
mov
or
inc
jp
sub
int3
sub
sub
cmp
fmull
cmp
push
in
xchg
rcrb
add
lcall
xchg
scas
rorb
add
repnz
test
inc
push
cmpsl
mov
lock
and
add
orb
in
fwait
clc
int
dec
lcall
pusha
add
fcomip
dec
pop
sbb
or
icebp
in
sbb
pusha
adc
inc
inc
loopne
push
push
pop
mov
lds
push
insl
xor
in
sbb
adc
cwtl
jecxz
clc
push
fisubrs
mov
lods
imul
sahf
jb
sbb
sbb
dec
pop
nop
aas
mov
dec
mov
sbb
xchg
movsl
sbb
jg
sbb
jecxz
shll
popf
cmpsb
fmuls
mov
cld
mov
mov
sbb
js
sbb
jb
mov
pop
adc
ret
sbb
cmpsl
bound
ret
and
xor
jp
shr
sub
lea
mov
call
and
enter
fsubl
mov
jp
add
cmc
inc
ret
lock
mov
sbb
or
pushf
or
jne
mov
hlt
je
mov
add
push
aaa
test
jnp
lods
js
add
lret
or
inc
leave
add
xchg
out
or
fbstp
add
stos
orb
sbb
shrb
outsl
xor
jb
addl
add
ljmp
jbe
std
xchg
out
imul
mov
dec
inc
testl
sarb
cwtl
and
add
out
jge
add
xor
sub
mov
sub
fisubrs
xchg
mov
ss
xor
add
push
add
and
loop
adc
dec
mov
sbb
aaa
cli
xchg
or
push
ss
sarb
lods
pop
xchg
fdivrl
dec
cmp
loop
scas
mov
mov
ret
test
and
and
aas
push
outsb
sub
push
dec
or
mov
mov
add
in
aam
sub
in
mov
fisubrs
cmp
inc
add
cmp
xor
popa
pop
inc
rcll
mov
mov
fst
pop
lods
jge
mov
pusha
clc
pop
lods
out
add
and
test
mov
sub
jecxz
inc
cmp
pop
push
xlat
pop
insl
jmp
mov
or
sti
jmp
mov
ljmp
pusha
std
adc
fildl
xchg
xchg
mov
push
aam
clc
faddl
or
fsubrl
add
jge
loop
scas
xor
pop
lcall
out
adc
inc
xchg
mov
mov
inc
test
enter
bound
jle
sbb
adc
int3
testb
xor
fwait
das
dec
test
gs
pop
add
idiv
mov
cmp
and
sbb
ljmp
xor
push
popa
je
out
add
and
mov
fsubr
in
subl
cmp
or
push
fistpll
inc
cli
adc
inc
adcb
xchg
dec
popa
rcll
shl
sbb
mov
mov
js
lock
enter
xchg
sbb
mov
push
sti
adc
nop
push
cs
or
push
adc
sub
loope
jl
sub
lods
lret
nop
inc
sub
mov
push
mov
add
pop
dec
jmp
xchg
jno
cli
sbb
js
jb
xchg
sbb
sbb
cwtl
and
ficoms
pop
sbb
xor
or
es
insb
decl
loop
inc
dec
cld
scas
and
or
push
jecxz
add
or
mov
mov
mov
sbb
and
call
rcr
jmp
add
pushf
mov
jbe
pop
or
les
test
cld
test
jns
mov
inc
mov
jb
popf
and
adc
lret
push
pop
mov
add
pop
fsubrl
leave
sbb
push
pop
test
ficomps
dec
jl
sbbb
pop
mov
cmp
mov
clc
popa
fsubr
jno
cmpsb
pop
test
push
mov
aam
mov
rcrb
aam
js
xorb
int
call
in
nop
lods
lock
daa
push
ss
sbb
mov
dec
xor
xchg
cli
mov
xchg
popa
add
ljmp
out
in
jecxz
mov
push
mov
sub
mov
rcll
xchg
lea
add
push
aad
mov
out
pushf
dec
add
push
jmp
xchg
jle
sbb
shr
inc
xchg
or
mov
int
push
xor
jmp
jp
and
cld
xor
popf
cmc
insb
mov
aam
pop
adcb
cli
clc
roll
xchg
add
push
pop
lock
pop
pushf
or
lea
jo
add
sbb
aaa
leave
push
mov
mov
push
jecxz
pandn
aas
popa
cmp
jp
and
testb
jecxz
pusha
xor
lods
movl
test
cmp
mov
daa
js
fstpt
inc
inc
adcb
bound
adc
shrb
xor
ret
push
adcb
xor
outsl
test
xchg
jl
pushf
dec
std
adc
sbb
pslld
jle
sbb
dec
push
fwait
push
add
push
fnsave
fstl
roll
fs
icebp
mov
mov
stos
subl
lock
pushf
xchg
ja
in
mov
sub
and
fincstp
lahf
cli
or
sahf
jle
lret
push
hlt
sbb
adc
cmp
ds
and
fistpll
lcall
loop
sbb
lea
imulb
mov
cmpsb
std
push
push
xchg
ror
and
pop
rcrb
adc
into
adc
adcb
mov
lods
dec
jecxz
test
bound
cmpsb
fbstp
outsb
cmp
cwtl
movb
test
rcl
addb
pop
cmpb
sbb
push
mov
test
test
mov
add
jl
es
push
fsubl
xor
loope
push
popw
mov
inc
mov
xchg
inc
shlb
mov
fs
inc
hlt
popa
cmp
inc
cmp
fwait
lock
dec
inc
jl
push
mov
dec
or
cmpsl
push
lock
lret
xchg
or
movsb
sahf
push
mov
icebp
mov
xor
rcrb
ret
push
rolb
sbb
pop
and
ret
fdivl
into
call
out
cli
loop
push
sbb
mov
jge
scas
mov
sbb
jmp
lods
int3
mov
inc
mov
cmpl
push
or
mov
insl
cmpsb
addr16
cmpsl
lock
mov
stos
inc
lods
xor
dec
mov
push
mov
ja
push
adc
adc
into
mov
or
mov
xor
adc
dec
nop
adc
xor
add
mov
js
jl
ds
jne
loop
xchg
dec
outsl
mov
lods
mov
dec
pop
mov
xchg
add
xchg
sar
lods
mov
pushf
sarb
sar
pop
and
ffreep
jae
mov
int3
xor
push
fmuls
cli
and
je
lods
adc
xlat
filds
sub
xchg
sbb
push
mov
fmuls
add
jo
popf
add
push
test
inc
ja
repnz
jg
rorl
push
sbb
push
insb
push
mov
push
outsl
pop
mov
dec
or
ds
lods
sub
pop
jb
icebp
pop
lds
xor
aam
xor
outsb
ret
cwtl
fdivr
scas
mov
pop
push
ljmp
pusha
fadd
jns
lods
into
xchg
fwait
add
movw
arpl
fmull
push
mov
and
push
push
lcall
ret
or
notb
fwait
mov
mov
pop
xor
mov
pop
or
add
xlat
or
lods
pop
js
insb
pop
ja
inc
push
push
push
shl
out
jae
sbb
stos
or
pop
xchg
inc
inc
cmp
sarb
punpckhbw
mov
add
dec
rorb
gs
lock
xchg
hlt
adc
js
dec
add
sahf
and
xchg
jecxz
in
scas
mov
sbb
pop
cli
dec
push
add
pusha
inc
mov
xchg
aam
mov
push
push
mov
add
adc
jp
scas
gs
inc
je
or
xchg
mov
movsl
xor
jmp
test
and
jo
push
push
shll
hlt
pop
lock
inc
inc
xor
imul
cmp
jmp
or
or
fcomp
dec
data16
imul
pop
push
dec
out
inc
xchg
test
dec
nop
out
mov
jmp
inc
cli
xlat
fildll
call
inc
dec
cmp
pop
arpl
mov
fadds
jl
addr16
push
add
ret
cmpsb
inc
inc
pop
mov
jnp
subb
push
mov
mov
xchg
test
and
ss
pop
pop
dec
jl
call
inc
xor
push
ja
outsb
push
scas
ss
bound
testb
pmaxsw
subl
push
ss
xchg
or
inc
jbe
mov
cmp
in
pop
pop
ret
div
icebp
aaa
add
inc
mov
aaa
inc
mov
daa
adc
adc
dec
add
je
pusha
jb
imul
lock
push
xor
inc
cmp
dec
cmp
and
sub
pop
push
sbb
clc
ja
gs
rol
inc
adc
clc
cmp
adc
add
in
fcomps
pushf
fcoms
sbb
iret
inc
ret
jae
rorb
jo
dec
lock
dec
push
aam
dec
ret
addr16
or
inc
mov
pop
xor
je
jno
add
xchg
jecxz
jp
imul
pop
mov
dec
je
jns
xor
push
or
dec
inc
lcall
xchg
push
add
fwait
inc
push
insl
xor
ss
outsl
bnd
cld
adc
push
pop
bound
inc
jo
mov
push
and
push
ret
or
push
bound
adc
adc
jle
pop
push
inc
aad
dec
jns
lea
push
cmp
aaa
lret
into
add
lret
mov
pop
dec
xor
hlt
ret
xor
rorb
adc
cmp
push
jge
dec
cmpsb
dec
hlt
inc
xchg
insl
ss
or
jns
loopne
add
cld
sahf
jg
mov
push
call
scas
test
mov
ffreep
push
pop
push
popa
in
push
rcrb
mov
mov
xor
imul
adc
xor
fcmovbe
fbld
ljmp
add
arpl
enter
dec
inc
inc
xor
inc
ss
lahf
rclb
cli
add
sub
dec
add
mov
insl
inc
mov
jae
or
push
into
dec
cld
movsb
mov
jge
push
iret
xor
jmp
inc
push
cmc
dec
inc
in
not
loop
mov
fs
and
addr16
dec
dec
aas
std
outsb
xor
mov
test
push
inc
testl
inc
jo
or
sbb
push
mov
pusha
push
dec
push
into
repnz
sbb
add
cmp
lock
into
std
inc
xor
stos
or
pop
dec
ss
lahf
or
cwtl
lock
mov
jl
bound
pop
inc
xlat
shrb
mov
stc
inc
xlat
enter
sub
mov
inc
sub
negb
or
push
jno
adc
mov
jae
add
and
into
inc
decl
enter
inc
jl
jns
dec
movsb
xchg
idiv
cli
mov
setp
jle
inc
je
ljmp
loope
push
fisubrs
adcl
call
jae
xchg
mov
pushf
bound
and
lret
pop
leave
push
jo
adc
push
cmp
jae
dec
jne
pop
xor
mov
mov
ljmp
push
dec
jl
jge
ret
xor
xchg
call
add
lds
mov
inc
add
push
cmp
bound
jp
xor
pop
mov
inc
dec
mov
sbbb
inc
dec
mov
mov
fmuls
call
shl
ret
adc
push
mov
push
xor
mov
push
cmp
insb
pusha
fdivrl
icebp
aaa
inc
push
cld
inc
and
roll
xchg
mov
and
popa
lock
lret
insl
inc
adc
and
xor
insb
jb
aam
adc
inc
fildll
dec
ss
rorb
add
add
xor
in
ds
test
bound
lods
mov
loope
loop
pusha
ret
inc
sbb
es
ret
dec
cli
je
pop
inc
sub
bound
les
outsl
imulb
add
pushf
add
pop
push
addr16
push
pushf
cli
insb
in
ret
xchg
push
in
shr
jl
push
push
imul
pop
out
shl
data16
xor
ret
sub
je
test
enter
fs
sub
icebp
imul
loope
push
cwtl
outsl
shrb
orl
pusha
xchg
fmull
stc
out
dec
or
outsl
out
in
test
lock
push
inc
cmp
pop
loope
iret
xor
push
dec
push
mov
subl
popa
imul
call
pop
push
pop
aaa
sub
mov
and
add
jno
xchg
loopne
mov
dec
test
sub
mov
sbb
test
fisttpll
fsqrt
push
aaa
rorl
push
pop
call
push
jge
push
mov
jno
sahf
dec
push
imul
xchg
ljmp
jge
push
test
sti
cmpsb
out
inc
push
or
xchg
clc
in
lcall
outsb
add
pop
pop
sub
jb
outsl
inc
aaa
push
inc
in
sbb
push
push
rolb
sub
je
push
add
daa
clc
adc
sbb
adc
xchg
aam
xor
dec
push
jno
hlt
aam
push
bound
lock
pop
adc
gs
push
js
xchg
jb
idivb
push
addr16
push
fst
cmpb
fwait
insb
and
push
test
test
pop
jmp
mov
cmp
xor
loopne
pusha
ljmp
mov
iret
jp
ja
xchg
jl
repnz
lcall
xor
inc
fmull
push
insl
sahf
sbb
sub
cli
mov
ja
sub
jns
jae
or
mov
sbb
dec
leave
jecxz
in
ret
icebp
out
dec
out
inc
rorb
mov
xchg
dec
sub
fnstenv
dec
leave
mov
testb
andl
or
inc
push
sub
in
push
pusha
cmp
rorl
cmp
iret
or
enter
cmp
rorb
push
aam
xchg
lock
mov
clc
cmpsl
xchg
push
js
call
xor
insl
ljmp
inc
arpl
push
dec
sub
pop
or
aad
dec
movsb
xor
mov
hlt
pushf
jl
pop
mov
clc
je
inc
dec
out
cld
add
fs
add
sbb
adc
movsb
test
dec
clc
or
stos
mov
mov
daa
stc
cmp
insb
xor
xor
push
lea
imul
mov
iret
push
pusha
int3
dec
or
mov
outsb
jo
jbe
mov
xchg
dec
sub
push
jno
jmp
aam
cmpsl
and
jbe
loopne
psrlq
cmp
daa
push
xchg
aam
movsl
test
insl
daa
fsubrp
out
dec
jae
fwait
dec
pop
push
jno
cmp
sub
in
adc
dec
cwtl
dec
cmpsl
lds
sbb
inc
fidivrs
push
jns
daa
or
mov
test
mov
add
dec
jecxz
sbb
fidivrs
cwtl
adcb
je
xor
jbe
inc
xor
dec
jle
or
loop
push
shr
sbb
push
dec
cmp
jo
outsl
fisubl
imul
inc
dec
push
jae
stc
mov
clc
repnz
aam
ja
ljmp
notl
out
dec
ss
dec
in
out
inc
mov
jmp
push
xchg
movsb
fisttpll
je
es
dec
xor
lods
inc
jg
rorl
mov
mov
cmp
or
rcll
and
or
pusha
sbbl
data16
stos
idivl
cwtl
outsl
pop
jmp
outsl
inc
inc
cmp
mov
dec
xor
pusha
add
push
mov
imul
jae
push
dec
call
mov
clc
fs
ret
orb
push
jne
dec
aad
sub
mov
rcr
push
inc
or
mov
pushf
rcrl
aam
push
bts
addr16
add
fsubrs
sub
hlt
xchg
fs
xchg
insl
pop
xchg
pop
jmp
push
push
xor
jecxz
les
inc
ficomps
out
jmp
cmp
pop
jmp
ljmp
push
adc
push
dec
repnz
jo
rorb
incl
push
or
into
xlat
addr16
hlt
pop
sbb
iret
sub
jmp
cmpb
cmp
or
je
push
xchg
push
add
pop
xchg
shr
shl
xchg
testl
mov
adc
xor
push
mov
pop
add
enter
movsb
loop
rolb
mov
ss
mulb
outsb
imul
or
jne
adc
das
or
add
sub
or
cwtl
repnz
jo
es
pushf
add
dec
sahf
lahf
mov
sahf
xchg
pop
shrb
dec
or
leave
dec
sub
cmp
cli
mov
test
cmpsb
push
popf
dec
into
xor
lret
adc
test
pop
shrl
call
dec
enter
sahf
int3
aam
mov
lods
pusha
mov
jbe
or
add
hlt
shrb
push
test
movsl
shlb
inc
jae
cmp
mov
cmp
or
and
sub
movsl
dec
clc
pushf
mov
add
and
leave
mov
aam
test
ljmp
fs
fabs
jb
adc
xor
fwait
xor
negl
rolb
xchg
pusha
cld
pop
xchg
cmpsb
lds
jne
shll
xchg
shll
push
les
mov
les
ljmp
fistpl
mov
pop
shl
inc
dec
push
cmp
mov
add
mov
dec
add
xchg
dec
notl
jmp
cmp
faddl
clc
adc
mov
xchg
push
xchg
insb
icebp
add
js
leave
push
xchg
lds
aas
or
mov
and
push
je
test
loopne
dec
ret
stos
pop
and
push
hlt
lods
ljmp
mov
cwtl
lock
dec
mov
xchg
mov
pop
mov
nop
pusha
dec
pop
jbe
sbb
cld
mov
xor
popw
rorb
cmp
add
out
in
mov
test
jbe
cmp
push
cwtl
sbb
iret
xchg
push
pop
cld
jmp
outsb
pop
push
sbb
call
cmp
mov
jb
mov
mov
sub
mov
sbb
into
js
sbb
sub
xchg
sub
pop
mov
adc
push
push
fstpt
add
loope
cmp
out
sub
mov
test
sbb
sbb
xchg
mov
mov
js
inc
roll
mov
xor
inc
testb
ret
adc
jl
js
jg
or
xchg
jbe
clc
jnp
jo
sbb
call
xchg
outsb
add
in
negb
outsb
xlat
hlt
pop
lods
cmc
xor
inc
xchg
sahf
xchg
or
lcall
jl
push
flds
inc
stc
aam
ljmp
mov
sbb
push
test
inc
je
and
mov
test
in
mov
pop
imul
movb
push
jge
dec
gs
in
push
subb
dec
inc
or
dec
aad
mov
enter
sub
test
mov
inc
cmp
jns
jbe
add
adc
pushf
jge
stos
gs
xchg
mov
push
inc
cmp
jg
mov
icebp
jns
test
jb
dec
dec
cmp
ja
mov
enter
mov
xchg
mov
jo
data16
add
inc
outsl
xor
jp
mov
fisttps
andb
cmp
cmp
push
cmc
pop
or
fcompl
out
push
aad
clc
loopne
mov
fsubrs
or
pop
insb
adc
sub
push
inc
mov
in
stc
out
cwtl
lcall
add
mov
push
ret
adc
adc
nop
xor
icebp
outsl
loope
popa
sbb
lock
loope
mov
int3
in
dec
jo
lock
sbb
xor
jg
add
and
test
icebp
rcll
mov
fadd
cmp
leave
rolb
stos
sbb
je
test
notb
adc
xor
out
js
sbb
inc
cld
loop
push
jmp
movb
ret
jmp
dec
dec
test
in
jg
loop
int3
or
mov
sti
cmp
in
cmp
call
cmpsl
icebp
or
outsb
push
mov
mov
xchg
outsl
or
xchg
or
and
pop
cmpb
xchg
lcall
scas
lcall
jp
movsb
push
sti
add
enter
sub
cld
ja
adc
je
jmp
sbb
iret
sbb
mov
jle
aam
push
lock
sti
sbb
jp
adcl
add
fdivs
xlat
inc
cmpsl
mov
sbb
or
adc
negb
add
jo
imulb
sub
clc
jno
cmc
or
fimuls
cmp
cmp
call
dec
data16
or
add
push
xchg
and
shrb
sarl
pop
dec
jge
stc
sbb
shrl
jp
push
cmpsl
push
add
loopne
das
jae
cmp
jne
push
pop
or
lds
add
and
test
hlt
lock
or
cmp
pop
data16
movsb
jl
jne
xchg
mov
xor
add
lahf
mov
mov
sbb
inc
rcll
inc
pop
cld
sub
push
inc
mov
dec
push
mov
leave
cmc
or
and
sarb
js
rolb
push
cli
jne
xor
dec
pop
nop
pop
pop
jg
out
adc
lods
in
push
daa
loop
and
int
addl
enter
cli
inc
xchg
out
adc
std
sub
ja
or
push
push
in
sub
dec
call
adc
roll
arpl
sahf
inc
sub
test
adc
clc
ljmp
stc
mov
lock
aas
lret
lds
add
push
dec
push
dec
push
add
xchg
test
call
dec
scas
dec
or
xor
cwtl
lcallw
xchg
dec
imul
adc
out
ja
mov
inc
outsl
arpl
jmp
xchg
dec
fsubl
push
ret
imul
dec
fwait
dec
push
gs
addr16
xorl
std
add
push
cmp
pusha
fsubrs
mov
cmp
dec
jno
pop
cli
add
push
cmp
xchg
je
aam
xchg
push
xlat
mov
xchg
adc
sahf
jmp
dec
jp
lods
sbb
xchg
push
out
jno
add
arpl
inc
add
sub
inc
push
xor
mov
clc
call
pmuludq
rorb
inc
aam
dec
ds
ss
push
cli
stc
push
add
adc
jae
lods
loopne
mov
rcrl
inc
mov
xor
repnz
shl
cmp
jno
or
add
xor
ss
jne
fisttps
imul
xor
loop
fs
jnp
mov
sub
jge
sbbb
cld
test
bnd
mov
movsb
add
test
and
mov
ds
mov
scas
clc
in
xor
out
mov
les
clc
add
and
and
push
add
mov
out
roll
pushf
adc
mov
lahf
fwait
daa
push
outsb
add
push
or
mov
jg
mov
pop
pushaw
repz
lods
push
stos
cmp
repnz
fldt
and
add
call
xchg
fmuls
push
imul
mov
inc
jp
in
push
jb
fimuls
push
cmp
aad
and
cmp
lahf
jge
insb
add
xor
movsl
cmp
in
adc
popf
insl
aam
mov
lret
xor
mov
pop
inc
jle
bound
jnp
adcb
stos
loopne
fimuls
add
sbb
inc
into
fs
push
lea
sbb
in
jb
sti
in
dec
xchg
adc
xchg
xor
shlb
add
les
and
adcb
jle
stos
lret
mov
daa
je
mov
and
pushf
adcb
xchg
push
push
pusha
andl
push
sub
lods
sub
lret
out
cmp
loope
dec
shl
sbb
sbb
jmp
push
dec
sub
sbb
inc
stos
ficoml
outsb
dec
ja
lret
mov
xchg
mov
xchg
mov
mov
jmp
jbe
xor
setp
aas
loop
jmp
xor
jo
jge
outsb
out
mov
fwait
pusha
dec
jbe
and
push
sti
sbb
sbb
mov
sbb
test
aaa
mov
pop
xor
out
jmp
xor
outsl
pop
jp
leave
dec
loopne
and
xor
mov
js
jb
sub
cmpsl
mov
lods
push
inc
or
pop
or
sbbb
mov
push
insb
jl
out
les
sbb
call
sub
sbbl
sbb
jb
mov
or
ja
loopne
mov
mov
mov
sbb
aad
sbb
push
xchg
xorb
test
jp
arpl
mov
push
mov
jmp
pushf
jmp
pop
inc
jno
daa
sbb
test
and
pop
out
in
repz
or
rcll
jecxz,pt
pushw
fcmovbe
mov
sahf
icebp
jg
push
push
pop
fnstcw
add
cwtl
or
out
jmp
int
sub
push
xor
ret
lock
mov
shrb
je
mov
adc
sbb
imul
fdivrl
mov
fimull
sub
xchg
push
insb
fsubrs
out
mov
ret
dec
mov
outsl
xor
test
adc
add
xor
icebp
divb
push
xchg
push
xor
mov
outsl
jmp
ja
ret
aas
idivb
es
xchg
mov
push
dec
jge
jns
adcl
or
or
fcompl
adc
mov
es
mov
hlt
push
add
inc
add
out
clc
push
aam
cmpsb
xchg
cmp
jmp
popa
je
outsb
cmp
dec
mov
pop
or
pop
cld
loope
ret
stos
and
pushf
ret
jg
lret
or
dec
lods
in
stos
push
loopne
xchg
mov
mov
sarb
ror
xor
loope
lods
imul
dec
mov
sbb
mov
loop
add
jle
movb
gs
out
mov
xchg
push
shld
jecxz
je
push
jb
loopne
rcrb
jmp
jp,pt
inc
ret
mov
jg
lods
adc
jle
mov
dec
push
add
mov
xor
add
pop
fidivrs
jmp
push
mov
es
adc
aad
out
insb
adc
ror
push
out
lea
mov
adc
in
in
idivl
add
or
lea
fs
add
cmpsb
pop
jecxz
dec
push
shlb
bound
rcrl
jae
roll
jle
sti
sbb
pusha
sub
ljmp
outsb
and
mov
lds
lret
dec
xchg
fdivl
orl
pusha
mov
test
dec
das
js
xorb
push
add
fadd
push
add
movsb
or
hlt
test
mov
inc
jl
xor
data16
mov
dec
fisttpl
sbb
dec
pop
lret
call
pop
pop
dec
data16
adc
mov
sub
fcmovne
orb
rcrb
nop
adc
jg
push
cwtl
dec
inc
jmp
and
pop
mov
ss
xchg
shlb
mov
sub
push
and
arpl
inc
pushf
lock
inc
mov
imul
aaa
ljmp
call
stos
mov
pop
xor
lret
dec
test
jne
pop
mov
mov
ss
nop
jb
stos
notb
jle
cld
testl
cmp
hlt
push
fsubrl
pop
aam
hlt
in
movsb
js
and
mov
and
add
or
or
xadd
or
fidivrs
lods
pop
ljmp
in
sbb
mov
cwtl
jae
mov
les
fistps
jb
test
pop
mov
lods
pop
fxch
dec
pop
fs
jnp
pop
or
or
or
mov
sub
cmc
pusha
xchg
loope
stos
aam
hlt
cmp
sub
out
rolb
sbb
adc
add
aaa
cld
lea
push
insb
mov
mov
ret
xchg
push
les
sub
test
sub
sub
push
xchg
add
dec
insb
jg
icebp
das
subb
add
int
mov
cs
xlat
popf
fcoms
pop
adc
xlat
xchg
in
and
cmc
or
test
push
faddl
aaa
js
mov
add
xor
add
pop
add
mov
scas
test
or
inc
loop
push
or
ret
and
adc
and
into
mov
ja
pusha
pop
loopne
in
cmp
xchg
dec
dec
adc
rorb
es
cli
xchg
in
sub
outsb
push
push
outsb
jmp
push
into
pusha
repz
loope
xchg
mov
in
push
ret
ljmp
mov
subb
and
repnz
cmp
addb
jmp
call
or
cmc
call
mov
dec
or
add
lock
cmp
rclb
or
incb
pop
mov
add
cwtl
inc
and
xor
add
inc
ret
jecxz
fistpl
push
pusha
lea
cld
insl
test
sub
lds
push
pushl
mov
and
jns
adc
call
mov
adc
xor
fsubs
jb
ret
sbb
jge
adc
outsl
xorb
add
sbb
jle
in
test
or
inc
push
aam
sbb
adc
ljmp
lock
mov
xor
stos
ljmp
jno
inc
lahf
mov
add
xor
adc
fidivs
aad
or
dec
mov
andb
pop
pop
test
sbb
jl
sbb
out
jecxz
rolb
je
push
push
jg
movsb
jbe
jno
inc
testb
shrl
inc
cs
xor
ret
inc
mov
mov
sti
arpl
push
jne
movsb
into
and
fimull
jecxz
fwait
add
inc
pop
mov
or
shrb
int
ja
jp
jb
push
jne
clc
aaa
adc
inc
dec
dec
pop
push
pop
rclb
iret
mov
push
jbe
decb
out
cmp
dec
sbb
pop
cmp
scas
movsb
adc
add
dec
push
and
cli
push
add
je
add
inc
es
inc
dec
dec
popf
cmp
ret
mov
icebp
mov
lock
mov
aad
mov
rolb
push
pop
and
pop
xchg
std
mov
mov
dec
adc
out
sbb
pop
std
mov
aad
jo
lock
in
mov
xor
pop
repnz
push
mov
jle
mov
imul
lock
cmc
and
xlat
sbb
jae
in
push
fnstsw
sub
mov
stos
andb
fidivrs
sub
lds
sub
mov
es
and
ret
lods
scas
adc
hlt
in
inc
stos
cwtl
pop
outsl
jge
adc
sahf
inc
jg
xor
fwait
pushf
add
test
insl
jmp
out
xor
fistl
movsb
cli
push
loop
pusha
rol
orl
jl
add
sub
jecxz
aaa
insl
fsubs
mov
mov
adc
mov
push
fidivs
xchg
pop
ret
inc
jmp
push
mov
xchg
xor
xchg
enter
or
mov
mov
mov
pop
ret
ficomps
and
loopne
ret
mov
int3
add
add
gs
mov
adc
mov
call
jp
sbb
inc
mov
pop
adc
jmp
push
sub
js
xor
outsl
arpl
call
jp
mov
push
enter
mov
test
bound
mov
and
xchg
cld
and
add
mov
lods
xchg
adc
xchg
mov
fists
sti
push
icebp
dec
and
mov
xchg
adc
scas
aam
adc
mov
xchg
sbb
push
shl
cld
mov
dec
jmp
pop
lock
sahf
adc
push
movsb
insb
loopne
add
sbb
cmpsl
popa
orl
pop
mov
cmp
out
lea
mov
call
mov
jno
ret
mov
mov
ja
clc
inc
movsb
adc
mov
lahf
lds
pop
out
jmp
loopne
add
mov
add
out
clc
ljmp
aam
sbb
cs
jmp
mov
mov
mov
push
fdivs
sub
push
outsl
inc
and
arpl
mov
jmp
push
les
push
adc
das
int
lock
aad
adc
sub
sub
pop
and
inc
js
ljmp
loop
mov
nop
dec
int
call
addb
xor
mov
jg
push
lods
or
ljmp
pop
add
inc
pusha
mov
std
incl
sbb
bswap
sbb
mov
rclb
push
xor
push
mov
in
jmp
xor
jp
push
popl
push
movsb
paddusw
outsb
ret
popa
xor
jo
jmp
xchg
push
mov
jno
or
dec
ret
test
or
inc
js
movsb
loopne
arpl
sbb
xchg
or
adc
lock
sbb
mov
scas
jl
shrb
sbb
sub
in
or
lds
or
and
mov
push
cmp
lods
dec
lods
sti
inc
xor
lea
subl
scas
cmp
test
inc
push
push
insb
dec
add
inc
popf
pop
imul
jecxz
push
add
jb
cltd
call
ja
movsb
xchg
loope
popa
ljmp
jae
out
test
push
lcall
pop
xor
shlb
sbb
add
in
pop
cmpsl
mov
fstps
call
xchg
out
add
fsubrl
lods
add
outsl
faddl
fcom
sbb
jg
es
rcr
sub
lea
mov
lds
cmp
inc
repnz
pop
gs
insb
mov
data16
push
call
xlat
cmp
test
outsb
arpl
out
idivb
mov
cltd
mov
sbb
je
sti
movhps
sub
cwtl
jge
inc
insl
add
mov
adcl
mov
xchg
mov
orb
pushf
jecxz
call
inc
aaa
sbb
jb
mov
and
xchg
insb
push
js
inc
ret
loopne
cmp
out
incl
aaa
cwtl
mov
in
mov
in
jg
or
dec
sbb
inc
mov
shrl
loop
stc
pop
nop
mov
shll
adc
pop
enter
sub
and
test
fs
lock
lcall
lret
jne,pn
pop
inc
cmpsb
push
mov
icebp
call
inc
jmp
mov
add
and
out
cld
lret
decb
cmp
pop
mov
les
dec
idiv
mov
push
hlt
mov
cmp
jno
jmp
test
xchg
push
sbb
loop
es
inc
mov
je
ss
mov
xchg
int
addb
xchg
and
jbe
inc
sub
mov
pushf
mov
stos
rorb
push
jb
fisttps
nop
das
xchg
sahf
push
fnsave
jecxz
sub
bound
mov
jmp
cld
scas
pop
or
sub
enter
out
loope
lret
jne
cld
sar
mov
xchg
mov
jle
lcall
ljmp
xor
add
push
js
sub
sub
mov
lret
mull
push
dec
fldl
pop
fdivrl
fwait
mov
pop
mov
pop
stos
lods
lods
cmp
jb
sbb
daa
push
pop
pop
xchg
mov
xchg
aaa
add
sub
lahf
push
and
lret
loope
ds
mov
inc
sub
mov
popf
xchg
xchg
divb
sarl
das
loopne
jmp
data16
jo
outsl
mov
sub
outsl
clc
fwait
lea
or
jge
or
stos
rorl
ret
callw
js
fmuls
adc
dec
add
mov
lcall
icebp
mov
adc
lea
adc
inc
mov
push
inc
iret
stos
add
push
sbb
bnd
icebp
loope
jns
sbb
sub
mov
jne
pushf
adc
cmc
movsb
jmp
sarb
inc
pop
cld
xchg
cmpsl
addb
push
nop
and
pop
jns
jmp
jne
pop
arpl
mov
test
sub
outsl
xor
je
jl
xor
loopne
pusha
fadds
sub
sarl
dec
shrl
adc
cmp
add
lods
mov
xor
add
lcall
ret
ljmp
mov
mov
xchg
adc
mov
je
mov
add
insb
inc
daa
jmp
cmp
in
jmp
dec
inc
inc
or
jne
insl
inc
movsl
aam
mov
add
les
pop
ret
ss
pop
enter
pusha
gs
adc
adc
push
cmpb
pushf
jbe
push
mov
sub
add
mov
test
push
adc
jo
dec
es
data16
fs
sub
cs
into
jmp
push
outsb
push
push
insl
inc
inc
jl
imul
inc
push
dec
dec
rol
mov
nop
pushf
inc
insb
push
pop
fisubrs
outsl
lret
pop
add
push
xor
jbe
xchg
adc
scas
push
orb
fs
inc
sarb
xor
sbb
pushf
dec
fcoms
insl
jae
xor
icebp
out
je
js
jns
xchg
jl
jno
icebp
add
adc
pop
nop
lods
sbb
insl
outsb
inc
arpl
push
or
aaa
pushf
and
push
imul
xor
enter
and
add
lret
push
dec
inc
adcb
es
gs
push
push
add
lds
and
or
movsl
push
push
mov
fidivrs
mov
nop
js
dec
xor
cmp
dec
or
inc
and
mov
lods
hlt
fistps
and
or
dec
fdivrl
fisttpll
xor
add
add
testl
cld
mov
xchg
hlt
mov
cli
xchg
lock
jb
mov
or
jge
push
xchg
enter
pop
movsb
xchg
jp
jge
ja
daa
aas
and
xchg
xor
cmpsb
jo
push
repz
cli
loopne
aaa
into
lahf
test
cmpsb
xor
nopl
add
popa
push
xchg
push
jnp
test
mov
and
pop
je
mov
jl
sbb
loopne
lea
dec
dec
int
mov
fwait
xor
xorb
add
movb
insl
cmp
mov
sti
pusha
fdivrl
push
adc
cmpsb
mov
jge
or
jmp
adc
negl
ljmp
loopne
and
xchg
js
mov
sbb
push
pop
lock
bound
nop
out
add
call
inc
pushf
cmp
fcoms
jo
shl
or
sub
push
sbb
enter
enter
or
pop
lock
sbb
jl
dec
loopne
push
rcrl
ss
ret
xchg
aad
aam
pop
or
mov
push
push
add
shlb
gs
pop
ret
es
scas
test
incl
pop
loope
cmp
out
cltd
sti
sbb
push
inc
jg
sub
and
pusha
add
push
push
or
push
lock
jmp
mov
lods
fstps
adc
add
xchg
xor
jno
mov
adc
rcll
ret
shlb
loopne
xor
sbb
test
les
push
mov
xchg
add
pop
sub
aam
or
mov
mov
mov
adc
sub
lcall
addr16
stos
adc
fldt
bound
or
js
pop
and
lods
or
xor
pop
xchg
push
mov
outsb
fnstenv
dec
jmp
push
xor
leave
cmpsb
aam
hlt
loopne
cld
sbbb
aas
push
std
jmp
rolb
mov
movsb
adc
push
rorb
push
and
push
notb
sub
add
mulb
and
inc
nop
pop
rcrb
mov
in
dec
or
cmp
and
add
mov
dec
ret
movntq
enter
sahf
sbb
mov
test
mov
rol
call
gs
jbe
ljmp
adc
jbe
inc
ret
roll
stc
inc
push
push
lods
or
out
dec
push
pusha
mov
dec
mov
push
pop
mov
pop
push
out
aaa
or
std
sub
sbb
ja
lods
jo
jno
test
ret
inc
out
shll
in
test
add
bound
push
push
sbb
xor
insb
sarb
aad
dec
xor
jmp
mov
dec
daa
orb
insb
sarl
outsb
adc
shrb
mov
jle
je
scas
sar
lods
popf
or
cltd
jbe
push
add
pop
mov
icebp
hlt
adc
fidivs
cmp
or
dec
push
loope
cmpl
xchg
adc
mov
lea
inc
mov
dec
imul
addr16
mov
lret
jmp
into
lcall
arpl
test
or
jg
test
gs
aaa
test
adc
rolb
dec
pop
pop
xor
xor
loope
mov
mov
in
mov
push
push
sub
mov
ret
inc
jmp
jl
jnp
std
jnp
cmp
fmuls
aaa
into
daa
scas
cmp
scas
xlat
jmp
jmp
jmp
bound
test
xchg
scas
sarl
push
sbbb
xor
jnp
es
push
push
dec
xchg
add
daa
and
or
mov
xlat
mov
mov
scas
shl
shlb
push
dec
hlt
stc
mov
push
push
sahf
sti
inc
int3
dec
pop
loopne
cs
ret
push
push
inc
mov
icebp
ret
pusha
sub
pop
loopne
roll
jl
sub
aaa
push
fnstenv
sub
nop
imul
xchg
push
out
aad
push
js
test
jg
movsb
je
xchg
ret
subb
ljmp
fs
lahf
mov
or
sbbl
push
es
add
les
cmp
icebp
call
inc
jno
cmp
psrlq
xchg
add
loopne
lret
and
nopl
cmp
push
xchg
adc
pop
mov
mov
gs
mov
adc
ja
jg
or
iret
lret
add
and
dec
inc
and
dec
add
pop
add
js
and
push
inc
adc
mov
call
ljmp
xchg
or
push
lret
or
adc
jmp
shlb
mov
and
add
out
push
inc
mov
add
dec
dec
cmp
pop
inc
mov
jnp
jle
scas
cwtl
mov
dec
push
lea
lea
mov
int3
lret
cmp
pusha
je
or
sti
dec
stos
pop
dec
lea
aas
mov
dec
in
gs
pop
call
call
fs
lahf
sub
les
mov
aam
nop
add
pop
xchg
insb
sbb
add
add
icebp
or
dec
inc
imul
xchg
pop
fwait
clc
add
insl
insl
sbb
scas
add
mov
ss
imul
mov
mov
or
fstps
dec
push
xor
stos
jne
clc
dec
sbb
xor
jb
add
cmp
xchg
fldl
mov
inc
sub
inc
xor
int
lcall
aaa
test
push
dec
push
addr16
sub
jg
push
push
sbbl
add
daa
sarl
inc
pop
jo
outsb
rcl
mov
call
ret
dec
daa
jo
test
rolb
push
xor
movsb
xor
pop
idivb
icebp
cmpb
nop
dec
andb
dec
xchg
cmc
mov
jb
inc
fmuls
outsb
push
loop
jecxz
pusha
push
ja
ret
add
xchg
mov
insb
inc
push
loope
sub
xchg
fs
mov
inc
mov
jg
push
pusha
scas
outsl
js
xor
inc
popa
cmp
inc
pop
inc
daa
jmp
pop
int3
dec
jmp
pop
xor
cmp
lods
pop
sarl
push
mov
xlat
inc
fsubrs
or
sarb
inc
push
loopne
xchg
adc
fsubs
push
xor
jg
sub
dec
data16
js
push
mov
mov
movsb
adc
outsb
xor
fs
in
mov
xor
clc
aam
push
test
sarl
sbb
cmp
aam
push
xchg
dec
js
andb
mov
js
lods
inc
cmp
cli
sbb
jb
xchg
mov
ret
push
jns
push
testl
xor
rcrb
push
das
jg
add
pop
bound
sub
xor
inc
push
push
dec
push
insl
inc
xor
out
das
inc
jbe
push
gs
out
xor
lods
lock
jno
add
aam
xor
std
lock
mov
lcall
push
cmp
insl
pusha
shlb
add
and
mov
subl
ss
adc
dec
ss
aam
push
mov
push
inc
das
int3
dec
ljmp
fs
xor
add
push
xchg
test
jae
rorl
mov
cmp
es
inc
or
test
test
cmovnp
clc
push
pop
dec
pop
rol
inc
fnstenv
ljmp
mov
inc
xor
stos
cmp
jp
dec
dec
xor
cld
and
pop
push
or
enter
int3
sbb
push
push
inc
lret
insb
inc
incb
ss
mov
add
or
push
js
jbe
mov
jg
pop
rorl
sbb
adc
incb
mov
add
icebp
xchg
sarb
push
insb
adc
pop
mov
adcb
jecxz
sub
aaa
push
push
mov
or
scas
lret
mov
mov
adcl
push
pop
in
cld
daa
arpl
mov
rolb
lcall
mov
out
subl
mov
shll
xchg
mov
and
dec
mov
jno
inc
out
int
push
sub
cs
add
mov
fnstsw
ret
adc
jae
pop
sbb
bnd
adc
mov
gs
or
pusha
sbb
xor
into
add
push
pop
arpl
test
or
das
mov
cmp
stos
cmpl
mov
jmp
xchg
scas
add
sarb
mov
pop
mov
sbb
sahf
aad
or
push
sub
jns
jle
popf
push
call
mov
or
inc
adc
cmp
jmp
sahf
js
pushl
ds
jb
movd
push
inc
in
mov
xchg
sbb
xchg
push
mov
jg
jae
mov
sub
mov
lock
and
dec
inc
cwtl
sub
mov
push
sbb
movl
adc
cmp
or
orb
test
dec
sbb
movsl
mov
and
jnp
or
push
sub
add
dec
push
test
lahf
faddl
addl
clc
dec
push
fsubl
dec
sub
divb
adc
push
nop
adc
push
jl
xchg
mov
dec
jnp
rcrb
push
mov
xor
or
gs
subb
out
mov
mov
popa
bound
mov
stc
add
mov
inc
mov
inc
push
sbb
pop
xchg
add
lret
add
sub
add
inc
outsb
pop
test
bswap
leave
mov
pop
mov
jl
stos
out
xchg
pop
mov
and
addr16
sbb
popa
push
fimull
push
iret
mov
add
sub
imul
push
les
ja
mov
ficompl
orl
aam
sbb
jo
dec
icebp
pop
lods
xchg
xor
subl
mov
add
andl
movsl
push
push
addb
out
aas
sub
sub
nop
icebp
ljmp
mov
test
adc
add
cmpb
stc
xlat
or
aaa
test
xlat
add
lea
lds
xorl
add
push
add
pushf
popf
xchg
adc
push
add
scas
mov
adc
cmc
lds
lea
and
jecxz
loope
imul
cmp
mov
jle
sbb
push
cmc
lahf
mov
ja
cmpsl
jne
inc
add
and
lret
hlt
and
popf
sbb
and
push
jne
jnp
pop
lods
xor
push
mov
and
xlat
mov
inc
lcall
loop
push
or
mov
pop
jmp
mov
das
xchg
loopne
in
and
dec
xchg
push
js
inc
outsl
cwtl
ret
xor
add
or
mov
test
js
ja
inc
or
rclb
push
test
or
sbb
pop
outsb
je
push
aas
xchg
xchg
jmp
push
xchg
pop
aas
xchg
adc
inc
mov
sbb
xor
hlt
orl
loope
or
xchg
xor
dec
xor
push
push
and
scas
dec
rcll
xor
cs
add
lea
aas
ss
push
loopne
jmp
push
ffreep
repnz
pop
stos
lock
mov
dec
sti
sbb
adc
or
rcll
cmpsb
or
jle
inc
or
cmc
rolb
mov
icebp
bound
shlb
movsl
dec
push
xlat
shrb
shlb
data16
insb
iret
cmp
mov
and
das
adc
mov
movsb
imul
push
dec
mov
test
sub
fld1
add
lods
dec
jae
clc
out
push
jno
clc
cmp
xchg
push
jp,pn
sub
xchg
outsl
mov
inc
testl
lahf
clc
pop
inc
jns
jo
ret
mov
dec
push
repz
dec
pop
sbb
aam
test
adc
or
push
pop
fildl
testl
dec
mov
push
ljmp
stos
dec
pop
or
and
shl
das
movsl
or
cld
in
es
out
add
pop
pop
and
adcl
in
adc
ret
movsb
andb
flds
mov
or
cli
push
pop
xchg
in
push
test
xchg
repz
adc
xor
cmpsb
mov
mov
mov
std
jg
xor
cmp
sbb
mov
fwait
andb
mov
aas
xorl
in
pusha
add
lds
jle
push
sub
mov
mov
cmp
push
call
ss
xor
cmp
pop
mov
loop
lods
add
arpl
jno
imul
mov
mov
pop
ret
add
dec
call
lock
mov
pop
xchg
add
call
cmp
test
popa
test
push
aas
popa
arpl
cmp
pop
push
sub
aam
pop
sub
dec
dec
arpl
scas
adc
lock
sbb
pop
mov
frstor
jo
xor
or
xchg
js
add
xor
inc
xchg
add
popf
inc
inc
cld
lret
adc
inc
add
icebp
jb
mov
aam
push
fneni(8087
arpl
add
sbb
mov
fsubs
mov
cli
adc
add
and
or
mov
addl
outsb
add
xchg
adc
insl
rorl
cmpb
adc
popf
lods
pop
or
and
pop
mov
out
adc
push
dec
jno
jmp
outsb
jg
xor
sub
dec
stc
push
push
enter
xchg
sub
sbb
addl
daa
sbb
pushl
insl
inc
push
cmp
aaa
repz
mov
lods
inc
inc
cmpsb
mov
pop
jecxz
mov
pop
jb
ret
jnp
out
ficoml
xchg
and
lcall
sbb
je
shll
out
leave
aad
add
sub
inc
imul
or
xor
cs
push
fwait
popf
and
mov
loope
into
cmp
jmp
pop
loop
enter
inc
movsb
cmp
sbb
jge
inc
push
idivb
push
sub
mov
mov
imul
outsb
or
addr16
shll
ret
popa
scas
test
nop
call
shll
inc
xchg
push
sbb
jo
cs
divl
mov
ss
je
insl
shlb
bound
cltd
mov
xchg
inc
lret
adc
xor
lret
adc
xor
lds
push
jo
xlat
into
adc
xor
push
cmp
xlat
push
mov
js
in
lcall
ss
and
sub
stos
ja
xor
mov
mov
pop
mov
push
xchg
ljmp
add
es
shrl
je
mov
cmpsb
and
xchg
std
adc
pusha
xchg
lods
mov
pusha
loopne
testl
mov
jno
movsl
inc
mov
jbe
stos
adc
aam
mov
add
in
shl
sub
pop
mov
clc
loope
cmp
in
clc
stc
jg
mov
arpl
sbb
dec
mov
cli
push
call
push
pop
mov
ljmp
outsb
mov
xchg
add
inc
pop
jno
add
inc
push
divl
push
sub
push
adc
push
push
xchg
shlb
push
and
pop
test
jp
xor
icebp
ja
lahf
imul
push
dec
dec
in
push
in
xlat
ljmp
mov
jbe
push
or
add
shlb
add
mov
data16
lods
and
pop
ss
dec
push
cmp
ds
and
test
jns
pop
lret
xor
xchg
movl
ror
js
inc
inc
imul
adc
fs
dec
mov
or
adc
push
add
imul
jbe
pop
lods
add
jno
fs
add
mov
cmp
push
dec
aaa
addb
cli
jle
ljmp
push
dec
jle
jg
flds
push
push
dec
add
mov
sbb
gs
or
jb
xchg
cli
inc
int
aam
lcall
gs
imulb
mov
or
inc
jns
fwait
test
lods
sti
ss
jo
aam
mov
inc
sub
pop
mov
enter
add
pushf
js
ja
sbb
add
insl
inc
cmpsb
shll
clc
orb
inc
push
add
popf
mov
dec
repnz
xchg
add
pop
add
jg
push
jne
inc
mov
lret
and
lcall
incb
xor
push
inc
lock
fmul
call
bound
gs
dec
inc
xor
adc
inc
or
add
movaps
adc
pusha
add
pop
dec
inc
stc
xchg
cmpsb
xchg
mov
js
inc
loope
and
adc
out
je
push
add
sbbl
add
lahf
fiadds
sub
jg
in
cmp
inc
xor
icebp
call
fdivp
ljmp
cwtl
insl
pop
push
ss
movsl
imul
lret
pop
dec
dec
add
xor
fistpl
pop
sbb
inc
lcall
jae
push
insl
pop
loopne
add
add
testl
mov
push
push
xor
dec
pop
push
sub
ljmp
data16
mov
sub
ljmp
or
jl
mov
xchg
push
xchg
js
push
cmp
je
mov
xorb
jp
in
fisubs
insl
sbb
arpl
xchg
pusha
push
jns
push
lret
mov
ljmp
jmp
push
push
dec
inc
push
cmpsb
mov
and
popa
mov
movsb
cmp
xor
das
int3
dec
imul
outsb
and
add
pop
push
or
icebp
popf
test
lret
imul
fs
push
sub
dec
mov
dec
or
xchg
ror
das
out
inc
push
inc
dec
inc
dec
ss
add
jno
inc
mov
js
xchg
lret
call
or
xchg
inc
xor
add
add
test
mov
jmp
shlb
inc
xor
jle
enter
pop
cmp
in
pushf
push
pop
shrb
dec
push
push
cmp
movsb
mov
ja
add
push
lock
add
push
push
mov
push
xlat
pop
jp
call
outsl
or
je
push
ret
jecxz
sbb
sti
test
push
mov
imul
test
bnd
mov
dec
inc
or
ss
xchg
fcompl
sub
gs
mov
jle
xor
pop
ret
out
dec
stc
icebp
outsb
ja
rcr
jne
mov
xor
adc
inc
push
jo
mov
xor
rcr
insb
cmpsb
pop
js
push
push
mov
xchg
imul
jb
subb
add
fisubrl
sti
pop
shrl
dec
hlt
lret
shr
jno
repnz
sbb
dec
push
insl
xor
lods
test
dec
dec
xor
dec
push
addb
addl
fmuls
pop
mov
xor
pop
outsl
mov
outsl
jnp
cmp
rclb
mov
arpl
mov
rcl
inc
cmp
aaa
call
popa
adcl
stos
mov
mov
inc
inc
inc
push
lret
outsb
shl
cmpsl
insb
arpl
push
fsubrl
xor
inc
push
jno
dec
push
nop
std
sbb
dec
xchg
push
push
and
test
clc
ja
pop
and
or
add
in
aaa
imul
dec
inc
data16
lret
stc
divb
dec
xchg
or
cmc
mov
clc
dec
outsl
inc
dec
aaa
ja
clc
mov
pop
push
push
lret
jecxz
xchg
inc
xor
movsb
adc
inc
and
hlt
adc
mov
inc
push
jge
aas
sub
out
pop
out
pushf
pop
adc
adc
pop
xchg
add
js
pop
popf
mov
inc
pushl
inc
shr
mov
or
sub
out
lock
mov
xor
mov
test
std
movsl
adc
xor
aaa
lcall
dec
jne
jne
xorl
ret
in
sbb
cmp
mov
xchg
push
jp
scas
xor
test
je
fstpt
adc
lea
xchg
dec
or
push
clc
and
sbb
sub
insb
jno
ss
jp
jge
jb
pop
xor
and
arpl
data16
jnp
aas
lret
les
jne
sub
adc
push
push
add
jmp
or
jmp
shl
sbb
xchg
loopne
inc
cmp
test
add
sub
stos
outsl
out
in
xor
sub
shlb
nop
or
sti
push
xchg
dec
out
fisttpl
pop
out
in
roll
pushf
cld
test
adc
sub
adc
inc
inc
pop
movsl
jecxz
cmovnp
xor
enter
add
std
int
loopne
xor
outsb
imul
dec
inc
lods
mov
adc
imul
mov
fsubl
insb
fimull
aaa
xor
xor
inc
das
fistps
cmp
jl
cmc
push
mov
add
enter
ss
push
mov
mov
push
or
sbb
xchg
lds
add
sbb
and
adc
or
icebp
pop
sub
test
or
sbb
testl
loop
xor
inc
mov
or
sbb
je
cmp
and
imul
dec
leave
pop
testb
sbb
cs
sub
sbb
jle
rclb
add
loope
int3
es
repz
jb
dec
inc
and
push
ror
or
loopne
and
andb
mov
jo
lahf
js
flds
fimull
jp
inc
xchg
cli
mov
xor
xor
and
call
addb
fs
jl
std
mov
push
movsl
je
aaa
and
mov
pop
add
leave
ljmp
mov
mov
bound
sbb
js
rol
jae
loope
pushf
test
mov
hlt
rorb
cmp
adc
pop
pusha
movb
jge
cmp
jns
push
imul
movsl
mov
imul
btr
loope
cmp
dec
std
mov
dec
add
stos
add
adc
sub
fnstenv
dec
sbb
xlat
sarl
movsl
mov
sub
dec
lcall
mov
mov
mov
imul
cmp
shrl
jo
bound
les
lods
add
push
xchg
aas
push
inc
in
popa
call
inc
jo
stos
loopne
add
lret
pop
fiaddl
cmp
ja
shlb
adc
popa
mov
adc
mov
outsl
test
aam
in
cmp
push
leave
pop
out
mov
lret
mov
cmc
out
jns
inc
ret
inc
adc
mov
jnp
dec
jbe
adc
jo
xchg
cmc
out
ret
js
add
loopne
add
inc
or
aad
add
test
pop
hlt
fstl
imul
pop
xchg
pop
push
jno
sbb
loopne
pop
xchg
jp
je
mov
repz
shrb
sbb
mov
inc
lds
push
mov
mov
jae
pop
or
lds
js
xor
adc
rorl
repnz
and
icebp
inc
loope
pop
testl
sub
cli
mov
mov
data16
lret
sbb
dec
or
incb
push
aas
aas
fsub
insl
inc
push
loop
mov
out
sbb
adc
push
and
test
test
fst
dec
ljmp
shll
dec
push
push
add
movsb
das
add
sub
je
pop
nop
clc
inc
sbb
jno
dec
sarl
ficoml
inc
xor
xor
insb
inc
stos
js
xchg
ss
push
lock
lds
insb
cmpsb
and
cli
dec
ja
lret
cli
push
arpl
lahf
add
jmp
xor
add
lret
and
cmp
dec
aam
movsb
jg
ss
inc
xor
negl
call
mov
mov
xchg
add
jnp
stos
nop
pop
icebp
popa
pop
pop
mov
mov
rclb
incb
xchg
lods
inc
push
es
inc
dec
xchg
aam
insl
dec
ljmp
fsubrs
push
inc
push
cli
inc
push
rcrb
jno
inc
dec
xchg
je
out
add
bound
xor
cmp
jbe
clc
jo
aad
into
test
ja
add
xchg
addl
mov
pop
cli
sbb
add
jae
ljmp
shll
cld
lcall
out
js
pusha
inc
cwtl
and
add
mov
shlb
dec
inc
push
and
cmp
dec
dec
dec
xor
dec
push
or
loope
lods
dec
jbe
aaa
push
outsb
pop
jbe
fisubrl
mov
mov
xchg
lahf
mov
and
jne
mov
dec
pop
or
mov
mov
fmuls
gs
fistl
icebp
push
hlt
scas
pop
mov
les
dec
pop
jno
inc
das
dec
pop
adc
adc
and
addr16
adc
add
or
push
push
push
ss
inc
insl
mov
ret
and
aaa
jo
inc
jmp
sub
lods
dec
jns
push
sub
xor
pop
cmovl
inc
jae
add
stos
jbe
inc
xor
les
sub
outsb
rorb
inc
ss
inc
fimull
push
cli
jns
insb
call
push
add
dec
jne
adc
daa
pop
mov
dec
arpl
fidivl
dec
xor
push
icebp
dec
inc
jb
cwtl
dec
dec
xchg
ja
lods
sbb
jbe
lock
fldenv
xor
xchg
sbb
clc
imul
cwtl
pusha
lds
dec
aaa
shll
dec
insb
or
cmp
cmpsb
mov
xchg
add
add
outsb
push
mov
aas
aad
les
sub
rol
and
out
inc
ffree
jbe
mov
pop
push
mov
push
add
mov
xchg
adc
inc
ljmp
hlt
inc
sbb
inc
fs
fs
or
push
imul
add
aam
jae
in
jmp
rcl
push
aas
test
rorb
jle
push
fisttps
dec
mov
dec
insl
test
cmp
mov
inc
data16
add
outsl
dec
bound
js
dec
dec
popa
xor
test
xor
inc
jp
xor
or
pop
push
imul
daa
dec
cmpb
lock
cwtl
into
dec
dec
mov
mov
dec
insl
fimull
add
js
int3
les
inc
iret
les
push
xchg
dec
adc
dec
orl
jo
outsb
ss
iret
jnp
cli
dec
test
dec
icebp
test
xor
mov
pop
jo
je
jo
lea
shlb
mov
pushf
pop
or
adc
ret
sub
rclb
imul
mov
inc
icebp
pop
xchg
mov
dec
dec
inc
and
xorl
insl
xor
push
push
inc
shl
pop
sbb
imul
push
xor
lret
mov
inc
push
jno
jl
movsl
jbe
ret
dec
pop
arpl
mov
inc
ja
lods
add
lods
inc
add
or
push
add
inc
int3
cmp
loope
add
test
ds
and
mov
sbb
inc
jmp
jp
pop
dec
int3
sub
aaa
ja
and
icebp
cld
roll
push
pop
fsubl
ds
ret
push
in
add
adc
dec
jo
and
inc
sbb
shrb
cltd
ss
dec
inc
add
pop
push
mov
bound
out
mov
or
addr16
cmc
movsl
outsb
je
rolb
add
xor
mov
mov
arpl
push
into
cmp
stos
xchg
test
inc
xchg
lret
mov
out
pop
es
gs
js
dec
iret
inc
sbb
gs
adc
cmpsl
addr16
add
ret
pop
inc
dec
cltd
and
mov
dec
jns
aam
test
mov
inc
xchg
sti
and
jb
repz
jmp
or
pop
xor
jo
clc
add
iret
fwait
lea
inc
mov
lods
loop
mov
popa
gs
xor
pop
jp
and
sbb
push
push
push
xor
cmp
test
in
push
ret
jecxz
mov
push
cmp
push
inc
push
jns
add
pop
into
and
in
jle
sahf
jnp
aaa
add
xor
sub
and
push
lock
jo
dec
pop
ss
mov
dec
mov
add
test
rolb
das
xor
loopne
les
arpl
je
dec
inc
push
pop
adc
mov
out
icebp
mov
inc
xor
and
add
in
add
out
inc
xor
pop
sbb
loop
sbb
es
dec
xchg
andl
scas
pop
andl
popa
pop
xor
dec
add
arpl
pop
clc
xor
shlb
xor
mov
bound
ret
pop
and
sub
add
clc
cmp
jno
loopne
dec
addr16
push
fs
in
es
mov
imull
jnp
test
pop
dec
icebp
loop
push
rolb
add
sbb
or
shrl
cld
bound
aaa
mov
push
addr16
adc
cltd
inc
testb
add
xchg
inc
jo
cmp
cmpsl
push
sub
lods
sbbb
cli
xor
fimuls
lret
lret
ljmp
dec
sbb
jmp
cmpb
outsl
fs
pop
jne
je
add
push
add
jl
and
sahf
popa
inc
aaa
add
aad
into
inc
xchg
in
dec
cmp
ret
into
jnp
pop
insb
repnz
bound
call
mov
test
inc
ss
repnz
mov
lods
js
ds
mov
xor
xchg
rolb
in
and
dec
add
cmpsl
scas
push
jno
aad
sub
gs
rcrb
in
rorb
loop
arpl
dec
imul
xor
or
aaa
imul
imul
add
nop
xlat
fs
push
push
dec
aad
or
rcll
mov
mov
into
jbe
dec
cmp
out
arpl
cmpsb
pop
mov
dec
add
call
adc
loop
xor
pop
inc
inc
inc
dec
inc
push
lods
xchg
inc
jo
push
fsubrs
imul
inc
mov
dec
xchg
dec
push
push
fists
inc
add
add
into
ss
loope
decl
stc
and
inc
inc
scas
ds
adc
cmp
add
roll
jno
mov
ljmp
dec
outsb
scas
mov
scas
jns
push
push
push
dec
or
mov
mov
jge
int3
mov
add
xor
fs
lock
cmc
mov
mov
lock
andb
push
out
pushf
push
jae
sub
mov
call
enter
adc
lods
jo
mov
or
loopne
and
stos
lock
push
fisubs
inc
jns
push
inc
xor
stos
add
aas
mov
or
jb
imul
test
mov
jne
adc
jne
push
fldenv
add
ror
push
cmpsb
inc
jge
into
cmc
lret
mov
out
mov
pop
fmul
mov
pop
insl
mov
inc
cltd
pusha
sub
xchg
push
rorb
or
push
push
push
lret
out
push
mov
pop
inc
xlat
popl
sbb
dec
or
jmp
xchg
out
inc
aaa
insl
adc
jmp
adc
ret
ja
inc
mov
pop
in
sbb
pop
addr16
mov
aaa
shll
push
and
outsb
dec
les
or
xchg
dec
cwtl
into
sub
inc
xchg
mov
repnz
test
inc
outsb
inc
dec
pop
jmp
out
insb
xor
xchg
add
and
push
ss
xchg
or
stos
xor
cld
sub
fcompl
fcmovnb
outsb
jle
mov
leave
rolb
xor
jle
dec
mov
add
push
jecxz
pop
orl
xor
outsb
pop
rcrb
or
adc
xchg
in
pop
inc
inc
sub
fisubs
pop
or
add
adc
mov
dec
dec
jb
push
in
add
mov
mov
add
and
pop
xchg
push
jno
or
inc
inc
xor
les
mov
mov
in
xor
pop
dec
pop
or
aas
inc
mov
arpl
dec
stos
icebp
lret
dec
shlb
ljmp
stos
add
push
aam
lock
call
inc
and
jmp
xchg
into
ss
push
jo
outsb
test
sbb
fs
mov
enter
adc
push
mov
aad
std
clc
push
je
jmp
jo
add
test
repnz
movsb
adc
xor
insb
mov
adc
xchg
arpl
pusha
jo
cmp
adc
fisttps
ds
stc
cmpsb
adc
out
push
popa
xor
adc
inc
shlb
enter
lock
xchg
adc
arpl
dec
pop
outsl
or
inc
push
xor
mov
test
dec
dec
inc
dec
jnp
rolb
pop
push
sub
movsl
leave
shlb
rclb
lret
mov
pop
inc
inc
loopne
pop
rorb
fists
aam
push
and
cld
mov
cmp
icebp
jp
sbb
mov
sbb
push
stos
mov
popf
ret
inc
and
imul
jns
jno
loope
dec
outsl
and
push
mov
push
push
sub
aam
inc
arpl
sbb
dec
inc
jno
outsl
mov
insb
xor
jmp
adc
adc
dec
add
in
dec
or
jno
int3
xor
lock
lods
gs
mov
imul
xchg
int
pop
test
out
sbb
xlat
cmpl
cmp
test
ljmp
lods
ljmp
hlt
test
addb
stc
mov
cmpl
xor
jmp
lea
pop
push
lock
popl
fisubrl
xor
lock
jae
add
adc
mov
in
pop
sub
add
scas
ljmp
in
and
or
shrl
punpckhwd
sbb
adc
push
push
addl
lret
jle
ficoms
or
jo
sbb
and
sarb
fwait
push
ja
inc
and
cmp
sbb
xor
in
add
xchg
in
xchg
addr16
sahf
in
lcall
leave
ja
leave
cmp
lcall
mov
in
mov
jo
andb
insl
jno
mov
cmpsl
or
pop
les
pop
and
and
sub
call
or
push
dec
inc
pop
mov
cmp
cmc
pop
les
jo
je
add
lds
mov
adc
arpl
dec
jge
mov
mov
inc
adc
xchg
sahf
cmpsl
out
cmpsb
dec
cmp
jmp
mov
daa
push
sbb
or
sbb
fiaddl
pusha
or
mov
bound
dec
adc
dec
push
add
inc
mov
add
icebp
or
aam
jns
push
xchg
mov
lds
arpl
mov
icebp
jl
in
mov
dec
xchg
rcrl
jnp
or
jecxz
sbb
or
stos
inc
rolb
lods
stos
xor
xchg
sarl
jmp
mov
jo
mov
push
dec
mov
shrb
mov
mov
mov
sbb
sbb
mov
add
dec
nop
les
rorb
mov
jmp
push
or
push
popf
cmpsb
dec
rclb
cmp
cld
push
das
lods
jmp
inc
lods
mov
js
xchg
andl
outsb
jo
push
lcall
sbbl
fcomp
or
hlt
xchg
cltd
cmpsl
jmp
xor
lret
lea
mov
xlat
or
xor
daa
les
xchg
arpl
lock
pushf
dec
jo
gs
cmp
jg
stos
insl
and
je
cmpsb
scas
mov
sbb
jo
fcompl
ret
pavgb
pop
icebp
adc
xchg
ljmp
arpl
lret
mov
pop
fwait
mov
mov
pop
aad
xchg
mov
xor
mov
xchg
ja
and
pop
and
xchg
xchg
loopne
push
popf
cmp
push
xchg
sub
jl
cwtl
ret
cld
fidivs
mov
cs
adc
bound
pop
inc
xchg
mov
adc
cs
cmc
pop
cmp
movsb
mov
or
scas
push
fists
loope
fwait
cmp
sbb
fsubs
sub
push
ds
xchg
iret
inc
inc
mov
pop
roll
push
mov
mov
loope
jo
adcl
fs
or
jno
dec
std
mov
fmull
mov
rcl
sbb
adc
mov
lds
push
jbe
outsb
imul
aaa
decb
push
inc
or
insl
bound
push
sbb
jns
movsl
cmp
or
xchg
jge
dec
xchg
sar
push
jecxz
cmp
xchg
test
out
xor
push
jp
test
lcall
out
and
add
or
test
cmp
shl
roll
add
or
enter
pop
add
lods
sbb
lock
cwtl
cwtl
mov
push
mov
cs
mov
jecxz
or
cli
lds
flds
push
mov
sbb
stc
rolb
push
in
jecxz
mov
bound
fcomi
inc
pusha
jo
xor
pop
int
leave
outsl
mov
inc
xchg
or
xchg
inc
cli
ja
xchg
mov
dec
daa
lods
arpl
outsb
sbb
jg
shll
adc
mov
jns
cmp
inc
push
repnz
pop
add
jge
pop
ljmp
cmp
jp
jecxz
pushf
je
ficoms
pop
loop
outsb
pusha
rcr
orb
imulb
xchg
clc
fcompl
inc
inc
push
lock
mov
aam
mov
jecxz
mov
fmul
mov
ret
dec
push
jbe
dec
imul
inc
fcmovu
dec
add
add
push
add
rorl
out
push
xchg
outsb
inc
dec
add
aaa
lcall
ja
push
pop
js
pop
pop
xor
mov
adc
cld
xor
dec
cmpsl
add
test
pop
sub
jbe
xor
push
aas
out
sbbb
or
push
inc
sbbl
pop
jbe
cmovl
sbb
outsb
rcll
push
pop
dec
test
dec
inc
add
addr16
dec
inc
dec
fcompl
sahf
sti
jp
cmp
loop
push
data16
sahf
xor
rcl
arpl
call
sbb
jns
inc
jg
stos
inc
icebp
mov
outsb
sbb
add
add
xchg
push
inc
insl
cmp
loope
mov
je
push
mov
push
inc
fdiv
or
shrb
dec
dec
inc
sub
aam
xor
bnd
outsl
dec
imul
in
pop
sbbb
mov
insl
inc
fs
jmp
aaa
dec
xor
push
fsubp
sub
inc
xchg
jae
dec
das
add
push
push
fdivl
aam
jmp
xor
add
mov
imul
aas
rcr
mov
xor
add
call
shl
sbb
push
inc
push
add
sub
push
imul
inc
and
hlt
lcall
fdivs
mov
std
xchg
jge
or
leave
mov
push
mov
shll
xor
ja
or
dec
sub
nop
cmp
outsl
add
jne
xchg
push
imul
inc
and
add
shrb
enter
pop
add
add
insb
push
ret
inc
xor
js
xor
sbb
xchg
nop
mov
xor
insb
dec
dec
and
dec
bound
pop
out
addr16
sarl
ret
inc
sub
push
arpl
xchg
test
fisubrl
xor
pop
fisubrl
push
fdivrl
je
jne
in
fs
push
scas
add
pop
jns
lods
dec
hlt
imul
push
sbb
inc
imul
out
mov
rcrl
lcall
rep
clc
imul
dec
popl
xor
shlb
mov
mov
mov
imul
hlt
js
inc
add
lea
int
leave
mov
pop
adc
cmpsb
out
sbb
inc
shlb
rorb
xchg
ret
cmpsb
jns
jno
clc
repz
lds
aaa
movsl
outsl
inc
imul
out
test
rol
jne
adc
mov
inc
xchg
mov
addr16
push
mov
dec
or
clc
nop
cmp
inc
or
movsl
mov
inc
xchg
push
shll
notl
lock
inc
mov
in
and
push
pop
out
arpl
sub
cmc
push
xor
clc
nop
adc
cmp
mov
xor
outsb
and
sbb
shrb
subb
jo
clc
dec
call
sbb
xor
add
les
xchg
inc
jmp
adc
cmp
ret
mov
mov
pop
cmp
mov
into
subl
push
scas
aas
adc
xchg
inc
minps
decb
pop
dec
jmp
sub
je
in
fmull
ss
int
popf
into
ljmp
jle
lret
jbe
pop
lds
mov
bound
or
xchg
push
and
lret
pushf
sub
jg
setl
int
sti
mov
dec
dec
jp
in
jp,pn
xchg
push
das
pop
xor
aad
jmp
cmp
aam
add
stos
push
push
pusha
mov
out
enter
outsl
push
inc
dec
jnp
mov
divb
mov
in
int3
shrl
mov
adc
sbb
lret
dec
mov
psllw
mov
push
nop
pop
cmpl
and
scas
movsb
pop
push
test
incl
mov
shll
push
jle,pt
xchg
pop
cmpsb
sahf
lahf
test
inc
or
pushl
pop
call
mov
xchg
xchg
mov
cli
outsb
loop
sub
push
sbb
pop
enter
js
cld
sti
adc
fxch
push
mov
mov
pop
pop
sub
dec
push
cmp
setns
es
loope
xor
stos
cs
pop
add
out
push
cmpsb
js
cli
leave
pusha
movsl
or
ret
dec
push
add
int
mov
push
inc
pop
rcrb
mov
sbb
sbb
pop
mov
push
lods
test
lods
jmp
mov
orl
icebp
inc
pop
push
mov
sbb
out
outsl
jmp
test
pusha
dec
push
jnp
sbb
fchs
sbb
dec
sbbl
fisubl
test
and
lea
jge
aaa
pusha
fnstcw
jecxz
aas
xor
pop
mov
insb
push
test
inc
in
popa
xchg
mov
jle
cmp
aaa
lds
lahf
hlt
adc
aas
cmc
out
inc
test
dec
lret
jg
push
or
pop
in
loope
add
hlt
mov
cmp
les
cmp
xchg
loopne
mov
test
int3
movsb
jno
lret
mov
test
xchg
mov
enter
leave
jo
xchg
mov
imul
jmp
inc
inc
in
aad
lock
add
add
lcall
pop
push
loopne
int
inc
and
mov
mov
imul
and
loopne
dec
cli
rolb
dec
repnz
ret
sbb
push
push
cmpb
fiaddl
scas
stos
mov
sbb
inc
imull
outsb
push
jno
repz
mov
call
jecxz
clc
or
jne
sahf
and
jecxz
push
and
jmp
pushf
and
sbb
roll
pop
frstor
repz
mov
or
mov
xor
cld
jg
or
test
inc
pop
mov
movsl
pop
inc
push
leave
pop
inc
jp
mov
mov
or
loope
mov
inc
ja
push
inc
inc
jmp
sub
out
jmp
mov
add
cwtl
icebp
jbe
pop
dec
ljmp
les
pop
mov
sbb
daa
imull
cvttps2pi
xchg
mov
fists
jnp
ss
fnstsw
popa
call
pop
pop
ret
sbb
loope
push
jg
jge
push
push
mov
push
xchg
lahf
sbb
cli
aaa
xlat
inc
pop
mov
xor
cmpb
jno
nop
or
mov
xchg
sbb
nop
cmp
rcl
inc
push
xor
or
push
out
jne
mov
fdiv
shl
add
pop
push
mov
sub
pop
pop
xchg
pop
rorb
mov
jmp
lock
aam
pop
dec
push
cwtl
lock
popa
jmp
add
lock
out
cmp
inc
add
sbb
dec
lods
xchg
push
bound
ljmp
sub
pop
sbb
adc
stos
out
cld
add
push
ret
add
mov
dec
add
aad
mov
cmc
xlat
push
or
cld
xabort
jmp
xchg
movsb
or
inc
sbb
adcb
loope
outsb
mov
xchg
insl
imul
sbb
sbb
scas
lock
rcrl
jno
mov
repnz
gs
add
dec
rol
inc
stos
mov
das
repz
mov
adc
mov
cmp
pusha
add
mov
popf
inc
or
shr
ljmp
mov
subb
xchg
scas
aam
dec
or
inc
xchg
push
jo
and
pop
lods
dec
pop
cwtl
pop
jne
sub
fnstsw
outsb
jno
lods
inc
daa
cld
nop
es
fcomps
shll
add
cmp
mov
dec
xor
cmp
sbb
or
loop
xor
test
push
insb
add
and
je
xchg
ss
xchg
add
fidivl
xchg
aam
adc
xchg
frstor
add
lock
out
and
ja
mov
daa
scas
fsubs
inc
push
ficoml
ret
push
push
and
lret
jmp
fcomps
and
insb
push
push
pop
sub
xor
or
xor
inc
inc
push
pop
add
xor
shll
inc
or
inc
pop
mov
inc
jns
dec
or
pusha
and
outsb
and
jo
pop
popa
push
js
dec
shrl
dec
inc
dec
push
xor
or
mov
and
xchg
inc
outsb
push
push
mov
adc
and
popa
insl
xor
ja
xchg
inc
andb
mov
mov
mov
ss
fnsave
and
inc
push
shlb
jb
fcomps
sub
push
inc
bound
pop
movsb
jl
fisubrs
push
aam
ret
mov
test
insb
inc
inc
adc
mov
gs
push
push
lock
mov
loopne
mov
dec
sub
sbb
inc
mov
cli
stos
sub
jecxz
lods
inc
arpl
add
insl
dec
data16
xor
in
fdivrl
mov
imul
cmp
rolb
fdivrs
hlt
data16
push
mov
cld
inc
jbe
ja
pop
shll
pop
jo
jno
sbb
outsl
mov
imul
xor
stc
push
fsubrp
gs
inc
xchg
dec
inc
hlt
and
test
into
xchg
push
mov
sbb
mov
cmp
xchg
and
lret
xor
dec
jp
das
addl
mov
popa
mov
subl
lret
mov
dec
jb
imul
inc
mov
sbbb
lods
jb
test
pop
sub
dec
cmp
test
or
enter
cmpb
ret
insl
ret
dec
push
enter
sub
sub
addr16
pop
insb
in
sub
fdivr
xchg
arpl
je
out
dec
nop
xchg
shll
roll
enter
sbb
popa
hlt
inc
ret
pop
jp
sahf
mov
arpl
mov
or
enter
pop
dec
mov
inc
addb
pop
popaw
pop
xor
imulb
stos
xor
mov
pop
aam
xorb
js
jmp
in
dec
ss
inc
cmpsb
outsl
or
loope
mov
pushf
xor
clc
shll
jbe
push
cmp
push
in
shlb
aaa
out
insb
leave
cli
scas
inc
pop
and
insb
xorl
xchg
and
and
pop
mov
iret
ret
popa
push
ja
in
xor
pop
xchg
test
adc
mov
adc
mov
shrb
sub
cltd
jmp
mov
sbb
push
pop
dec
adc
arpl
popa
push
push
fisttps
js
test
sbb
test
int3
adc
addr16
inc
pop
sbb
in
dec
out
jb
cs
mov
fwait
and
lret
jmp
inc
xor
xchg
xchg
pop
inc
push
sub
push
jno
mov
cli
mov
xor
jp
push
xor
inc
dec
jb
jbe
push
pusha
mov
call
adcb
into
addr16
shlb
push
push
mov
or
movsb
xchg
jecxz
xchg
sbb
nop
or
dec
add
aas
repnz
dec
lret
add
push
inc
je
push
rorl
cmp
mov
js
js
jmp
adc
les
ret
push
dec
xchg
bound
aaa
sbb
test
leave
ficoml
mov
pop
dec
pop
imul
cmc
xchg
sbb
or
imul
sbb
cmp
popa
jbe
insl
fwait
roll
cmp
dec
and
add
ficompl
sbb
pushf
and
outsb
or
dec
and
scas
jb
addl
xlat
or
iret
jb
cmc
ret
shr
jae
inc
cmp
addr16
xor
xor
sbb
pushw
push
jns
xor
push
shrb
xlat
cmp
lahf
or
mov
adc
enter
jle
aam
inc
imul
repz
sub
xor
jb
push
inc
ljmp
jl
inc
gs
ret
lahf
daa
inc
push
bound
lock
pop
rclb
arpl
push
int
out
inc
xchg
mov
ret
inc
ja
mov
and
jnp
mov
xchg
mov
jb
push
outsb
xor
jbe
mov
cmpsb
repz
mov
loopne
mov
or
jns
xor
dec
or
xchg
inc
or
dec
mov
ljmp
jmp
js
je
dec
and
add
xor
adc
cmp
orb
cmp
jl
inc
fcmove
fildl
push
shrb
outsb
inc
mov
out
sub
cmp
cmp
pop
or
inc
shlb
and
jbe
push
stos
sub
sbb
mov
jne
gs
ss
xor
sub
add
push
mov
imul
scas
and
mov
sbb
ljmp
insb
loopne
inc
jbe
push
imul
imul
iret
mov
insb
addr16
jo
insb
add
outsb
test
push
je
jae
fs
sbb
rolb
cmp
gs
lock
xor
cld
loop
addb
or
cli
inc
addr16
repnz
pop
mov
cmp
jne
je
lret
inc
nop
repz
mov
cwtl
jg
push
sub
inc
dec
and
push
ss
je
clc
sub
in
sbb
push
aas
dec
pop
xor
pop
shl
xlat
xchg
adc
and
pop
call
push
mov
andl
push
imul
jns
inc
dec
mov
dec
push
and
rol
inc
fmul
ror
xor
nop
dec
js
inc
pusha
test
jb
inc
push
loop
sbb
ret
in
scas
shll
inc
push
push
cmp
pusha
add
aaa
dec
cwtl
sbb
and
mov
xchg
push
test
movsl
xchg
adc
push
inc
sub
mov
inc
loop
inc
pop
outsb
push
pop
clc
add
adc
mov
lock
rcll
push
pop
push
sub
mov
ds
insl
jo
call
popa
sub
loope
dec
mov
pop
adc
outsb
fs
or
jle
mov
js
sub
xchg
loopne
dec
jbe
dec
xchg
ret
jbe
pop
jge
cli
movsb
fucomip
sbbl
call
pushf
add
pop
fwait
aad
inc
sub
mov
sub
cmp
xchg
inc
add
test
ja
les
xor
pop
ret
int3
pusha
dec
mov
xlat
loopne
bound
jp
mov
push
inc
mov
inc
inc
ja
or
sbb
pop
xchg
dec
aas
or
push
mov
hlt
imul
pop
pop
adc
fidivs
inc
add
insl
jno
ljmp
inc
cltd
out
outsl
xor
loopne
or
jbe
jno
lock
xor
dec
in
xlat
add
mov
ja
gs
jmp
mov
and
les
test
test
dec
dec
iret
int3
je
inc
jg
xor
mov
inc
add
inc
fidivl
mov
jno
jo
jb
pop
rolb
popa
push
sbb
xchg
loopne
out
inc
cmp
add
mov
push
lret
mov
sbb
enter
aad
cmc
mov
int
das
inc
outsb
call
xchg
shrb
jmp
pop
ja
dec
or
nop
add
pusha
imul
data16
push
stos
inc
mov
inc
inc
jb
dec
and
dec
or
sub
inc
jmp
pop
sbb
jno
dec
xchg
mov
dec
add
dec
lods
icebp
pop
test
dec
jp
popa
sub
test
jae
pop
add
nop
sbb
and
call
push
jne
roll
xchg
add
push
test
mov
inc
das
cmpb
loopne
add
test
in
jmp
sahf
out
les
jmp
js
loop
xrelease
cmp
mov
incl
jecxz
sbb
add
aam
push
ret
sbb
or
pop
or
leave
shlb
add
mov
xor
inc
sub
outsl
sbb
push
pop
jbe
mov
cmpsb
dec
mov
xor
inc
sub
shll
sbb
push
cld
js
pop
cmp
add
rorb
insb
add
mov
ficoml
loope
rolb
pop
sub
adc
push
jmp
ret
mov
add
stos
in
jmp
mov
lcall
xor
sbb
inc
or
sub
lock
cmc
inc
and
lods
out
iret
push
push
aad
outsb
pop
xchg
inc
sbb
cmc
mov
adcb
aaa
inc
and
jg
rcr
push
je
loop
mov
or
ret
dec
or
sub
xor
mov
shrb
stos
fdivrs
jmp
and
dec
rorb
or
xor
cld
aaa
jo
xchg
nop
jmp
decb
and
xor
cmp
out
push
and
pop
out
jmp
pop
jo
icebp
stos
pop
mov
push
xlat
loopne
mov
push
add
cltd
cmp
out
sub
add
lcall
ss
and
leave
xor
pop
in
xorb
pop
xchg
cmp
sub
xchg
pop
rol
sub
cmp
mov
loopne
pop
and
lods
inc
loope
in
mov
ja
cwtl
xchg
rcll
testl
test
push
cltd
xchg
jmp
in
sub
sti
push
cmc
or
and
mov
jp
loopne
xor
into
mov
ja
int3
lods
jae
popa
mov
movsb
scas
loope
repz
mov
jmp
pop
jmp
inc
pop
add
fisttps
sbb
testl
test
mov
cwtl
jp
jmp
mov
adc
mov
fldenv
rcrl
lods
inc
rcrb
popa
jle
mov
sbb
sbb
adc
mov
fcompl
fimull
andb
cmc
push
ljmp
and
cs
jecxz
and
loop
movsb
xor
enter
cmp
adc
lret
fsubrs
or
mov
or
sub
lds
push
lret
inc
push
fcompl
rcrl
cli
ret
test
inc
cmp
test
lcall
mov
mov
sub
push
sub
dec
cmp
sub
pop
mov
lahf
test
add
aad
aas
add
pop
rclb
sar
lahf
adc
je
addr16
clc
aas
inc
dec
scas
ss
imulb
jmp
mov
sbb
loope
xchg
sti
jg
scas
jbe
orb
or
stos
pop
test
adc
or
js
test
adc
or
or
fmull
adc
add
jl
mov
adc
xor
cmp
clc
lock
mov
sbbb
hlt
les
mov
xchg
xchg
inc
or
outsb
jge
mov
mov
loop
out
pop
sub
leave
scas
int3
dec
xor
dec
push
push
cmp
jne
pop
loopne
and
hlt
rorl
daa
stos
ret
jmp
clc
or
cmp
nop
lock
je
dec
or
call
aad
and
test
pop
or
sub
mov
pop
add
ficoms
loopne,pn
ret
push
sub
scas
push
adc
shlb
mov
fisubrl
jb
mov
pop
test
mov
insb
nop
pop
popa
imul
sub
es
mov
mov
mov
sub
enter
out
stos
or
shlb
xor
fcompl
imulb
pop
int3
mov
mov
sbb
and
dec
repnz
sbb
test
mov
jl
aam
rolb
nop
cmp
pop
cld
jmp
inc
loope
ret
mov
add
xor
push
loopne
lcall
mov
adc
xchg
push
int
sub
stos
adc
cmpsl
incb
ss
rorl
out
push
mov
push
jmp
sub
push
add
fcompl
fwait
dec
lcall
hlt
testl
mov
jmp
ds
test
cmpsb
adc
mov
cmp
cmp
xchg
sarb
loope
ss
dec
jmp
stos
aad
mov
push
jno
cmp
jmp
rcrl
dec
test
or
mov
test
imul
push
enter
add
push
dec
mov
fs
popf
add
push
pop
pushl
sub
pushf
mov
out
mov
test
lods
mov
adc
mov
les
adc
xchg
cmpsl
mov
mov
in
adc
cwtl
jp
outsl
add
mov
push
dec
mov
cmp
xor
mov
popa
push
stos
mov
dec
or
xor
insl
call
loopne
adc
jmp
cmp
and
call
scas
sbb
inc
test
mov
add
or
enter
gs
jle
pop
test
and
push
lds
stos
mov
or
imul
ret
dec
testb
cmp
xor
rclb
insl
lcall
movsb
or
jo
ss
stos
mov
repz
mov
aad
mov
arpl
mov
incl
adc
cmp
mov
xor
and
mov
mov
sarb
inc
lods
push
adc
aaa
insl
jg
mov
out
ror
gs
mov
xchg
push
lock
aam
xchg
pop
jmp
xor
bound
jo
cmp
loopne
or
fadds
push
jle
call
cmc
in
xor
clc
test
fsub
jge
or
adc
or
mov
dec
mov
in
in
push
mov
mov
inc
test
mov
incl
scas
inc
rorb
jmp
in
sub
push
mov
adc
shlb
out
outsb
outsl
and
clc
sub
ficompl
add
mov
cmp
add
sub
pop
push
and
mov
aam
xchg
push
repnz
pushf
loop
adc
push
jmp
jg
cmp
leave
ds
lea
or
test
push
push
inc
jae
into
mov
push
fsubrl
clc
xchg
aam
pusha
xlat
sahf
std
in
out
mov
push
lret
cld
jg
and
cmp
mov
mov
dec
test
incb
stc
add
mov
push
sbb
xor
dec
add
dec
ret
jp
outsl
dec
js
mov
movsl
sub
data16
inc
push
xchg
mov
pop
lret
pop
dec
fdivrs
xchg
push
pop
add
pop
pop
cmp
mov
movsb
add
les
adcb
and
stos
ret
inc
inc
add
notl
inc
and
movsl
add
je
cmp
mov
cwtl
movsb
lcall
lods
push
push
cmc
add
jle
sub
sbb
and
bound
inc
xlat
push
mov
and
or
pop
ljmp
xor
dec
xchg
arpl
push
in
fwait
into
sbb
xchg
cmp
cmp
adc
jbe
jnp
inc
popf
lods
or
je
sub
in
inc
add
dec
pop
clc
adc
cwtl
mov
rclb
add
clc
mov
fucompp
cltd
cmpsb
xor
mov
add
xchg
das
rcr
sti
aaa
xchg
or
pop
insb
sbbl
sbb
stos
fldl
mov
push
lods
pop
sub
push
jne
in
pusha
data16
or
mov
arpl
xchg
pop
fadd
movsb
jbe
add
dec
fsubs
orl
popl
out
insb
sbb
aam
gs
sub
sahf
push
push
es
or
pop
lcall
dec
add
mov
sbb
mov
rcl
or
loop
add
inc
add
insl
or
clc
popa
mov
cmp
push
adc
lret
mov
sbb
jmp
push
test
je
add
pop
test
push
aaa
and
dec
iret
imul
mov
outsb
xlat
in
jnp
test
dec
add
popa
fistpll
ret
adc
xorb
rorb
sbb
xchg
adc
push
fwait
pop
xor
inc
add
fidivrl
sbb
repnz
or
dec
scas
mov
or
jp
add
dec
scas
nop
aam
test
mov
or
jp
inc
rorl
push
test
xor
dec
insb
out
mov
int3
cltd
jo
pop
outsl
andl
jmp
leave
dec
cmp
and
out
loopne
and
inc
cli
call
or
cmp
sub
cmp
fimull
xor
or
adc
xor
ret
or
push
jo
cmp
popf
fnstenv
nop
lret
mov
outsl
orl
cli
rolb
into
shl
js
mov
jecxz
ds
push
mov
xchg
pop
icebp
mov
js
sti
mov
xor
xor
sbb
negb
cmp
stos
addr16
cltd
inc
ds
orb
ds
scas
fs
ret
mov
jo
cmp
fs
mov
pop
stos
jno
push
add
sbb
and
mov
jecxz
inc
imul
ljmp
jl
push
lea
mov
in
and
test
sub
test
js
pop
aam
adcl
jl
push
sbb
imul
out
pop
jo
test
mov
loop
sarl
int
inc
xor
add
in
dec
jnp
out
sbb
mov
sbb
mov
adc
jmp
adc
or
xchg
loope
fisttpl
or
push
jno
or
out
mov
or
mov
mov
mov
movsl
xor
push
addr16
or
lods
xchg
push
and
push
add
pop
inc
popf
loopne
aam
mov
cmp
cmp
enter
push
mov
add
popa
sbb
cmpsl
add
mov
xor
ret
xor
pop
mov
mov
adc
js
cmpsb
lcall
push
xchg
jns
fcompl
aaa
jg
push
dec
scas
lret
jmp
cmc
aad
mov
pop
push
or
xor
push
mov
pop
add
push
mov
jo
mov
or
outsb
in
and
push
inc
aad
std
add
movsl
scas
adcl
pop
cmp
imul
lea
ret
out
js
aam
std
pop
out
push
mov
je
adc
popa
inc
push
scas
push
pop
andl
cmp
cltd
cmpsl
pusha
stc
mov
iret
jmp
loopne
pop
sub
pushf
push
cs
mov
and
jno
fwait
push
cs
loope
roll
dec
push
sbb
call
push
jl
xor
ret
pushf
mov
loopne
pop
popf
lock
cmpsl
and
jb
push
mov
mov
lret
rcrb
leave
mov
push
loop
or
ret
mov
aaa
jo
cmp
xchg
push
das
sub
pop
imul
out
in
xor
mov
mov
or
mov
and
dec
stos
fimuls
and
jmp
js
push
sbb
mov
cmp
sti
sbb
out
decl
mov
lret
mov
jae
inc
xchg
ss
cmp
pop
mov
mov
pop
inc
pop
lock
add
sbb
repnz
nop
push
and
inc
inc
std
bound
scas
in
ss
jbe
jbe
dec
mov
xor
cmp
push
push
cmp
scas
jne
std
rcr
out
sub
or
into
incl
mov
inc
fisubs
jns
aad
pushl
and
jp,pn
fwait
push
shl
sub
rclb
pop
fs
stos
push
or
dec
decl
testl
add
sub
xlat
test
data16
xchg
fsubl
xor
pop
sub
incl
test
aam
inc
mov
aam
xor
loopne
decl
xchg
loope
mov
mov
mov
fs
stc
shl
push
popa
ret
icebp
jno
incl
mov
inc
repnz
cmp
outsb
ljmp
fs
jnp
or
pop
in
lods
cmp
add
clc
inc
push
dec
or
fwait
sub
out
aas
movsl
jbe
scas
cmp
ficomps
xchg
fidivs
jl
or
inc
out
mov
inc
sbb
fstps
lock
call
mov
mov
or
sub
and
xor
or
lcall
push
pop
sbb
cmp
scas
insl
dec
mov
inc
xchg
shrl
roll
popf
rcll
leave
adc
xchg
cld
lret
out
lahf
icebp
push
xchg
loope
in
or
add
sbb
or
dec
mov
bound
push
popl
fcompl
aam
dec
mov
sbb
mov
jmp
fcompl
mov
mov
mov
sbb
call
hlt
cmc
test
insl
mov
or
cmp
adc
cmpsb
jno
pop
aad
roll
incb
adc
mov
gs
negb
jmp
ljmp
push
dec
leave
push
pop
hlt
xlat
push
test
sbb
push
inc
xchg
fcomi
pop
scas
or
pop
cld
mov
stos
jg
xchg
pusha
jae
lahf
adc
add
pushl
jbe
loop
cs
and
pushf
lock
lods
ds
push
push
outsl
jle
jnp
dec
xchg
xchg
test
cmpsl
jbe
sbbl
jmp
mov
lods
repnz
mov
jo
jle
dec
xchg
lret
xor
pop
adc
pop
cmc
call
bound
mov
push
sbb
push
xchg
mov
fwait
decl
xchg
fstl
je
or
jne
push
adc
or
ja
and
xor
adc
clc
pop
std
pop
movsb
ja
fstpl
es
cli
inc
nop
lods
pcmpeqw
out
pop
cmp
ljmp
sbbb
fimuls
mov
and
mov
lods
movsb
push
mov
push
out
mov
dec
lret
pop
mov
push
pushf
iret
push
xchg
adc
div
xchg
mov
push
out
fdiv
jg
cmp
pusha
divl
or
dec
add
js
ljmp
inc
aas
jno
fisubrl
sbb
jl
xor
repz
push
lret
movsb
out
pop
out
inc
lea
or
mov
mov
sub
xchg
jnp
movsb
sti
inc
xchg
ljmp
mov
dec
push
out
cmp
fists
inc
out
rcrb
mov
out
cmp
push
xchg
fmull
xchg
leave
xchg
and
or
incl
cmc
jge
out
cmp
gs
xchg
enter
cmpsb
adcb
sbb
mov
push
push
lea
dec
push
pop
mov
or
pop
lods
clc
inc
stc
fnstenv
cmp
mov
int3
adc
inc
addl
imul
jl
or
mov
call
xor
jbe
jmp
pop
jmp
sub
push
jb
dec
xchg
imul
int3
adc
jbe
sub
mov
ljmp
sbb
out
or
and
daa
call
jg
push
xchg
sbb
xchg
mov
pop
push
and
or
decl
dec
xchg
mov
pop
rclb
insl
pushf
push
jbe
stos
cltd
jo
out
mov
jmp
xor
pop
pop
xchg
cmp
mov
cs
js
dec
xchg
insb
jno
in
push
inc
mov
jle
mov
lahf
sub
mov
add
mov
mov
jno
push
push
cmp
ljmp
mov
pop
bound
xor
dec
xchg
cmp
loopne
cmpsb
and
aad
sarb
mov
push
mov
jnp
adc
push
or
mov
jecxz
add
nop
inc
jne
inc
and
pop
mov
mov
jns
and
cmp
std
dec
inc
stc
inc
mov
jg
jg
int3
xchg
loope
add
xchg
inc
dec
xor
inc
add
jg
rolb
pop
imul
inc
fsincos
mov
cmp
jmp
mov
inc
mov
sbb
and
adc
adc
dec
enter
scas
xchg
call
add
cmp
mov
xchg
mov
and
and
mov
call
lds
in
adc
sub
mov
aas
jle
ljmp
jbe
lock
test
inc
dec
xor
add
ret
mov
add
lods
sti
inc
cld
aaa
jp
das
jae
pop
and
mov
in
sti
aad
je
dec
sbbl
ja
js
mov
inc
test
adcb
je
jns
jb,pn
push
movsb
call
std
imul
xor
xor
loop
mov
call
dec
out
sti
inc
nop
sub
pop
out
xor
ret
or
daa
or
pushl
mov
xchg
and
mov
cmp
testl
push
fcomi
jmp
inc
cld
in
cmp
add
je
pop
sbb
lcall
mov
lcall
outsl
jbe
lods
pop
pop
push
mov
iret
add
mov
cld
inc
cli
mov
shl
mov
adc
cld
cld
pushl
xor
dec
into
pop
inc
rclb
outsb
test
gs
or
mov
sbb
fistps
cmp
jecxz
jge
lds
fstpl
imul
call
or
xchg
push
fnstenv
xor
std
pop
and
ljmp
jl
std
or
mov
decb
enter
or
repnz
cmp
jge
xchg
notl
add
push
outsb
mov
in
adc
jmp
mov
xor
jg
pushl
dec
and
mov
pop
stos
test
inc
arpl
mov
les
inc
repz
sbb
repz
jl
sub
xchg
stos
aam
imul
fisubrs
jmp
mov
test
jmp
shll
lds
xor
call
gs
hlt
cmpsl
mov
loopne
pusha
sbb
call
pop
mov
sbb
pop
sbb
data16
mov
test
inc
data16
cmp
incl
dec
xchg
leave
jno
lods
clc
ja
mov
into
rcr
dec
jb
mov
incl
xchg
push
jno
dec
scas
mov
ficomps
pushf
dec
xchg
fildll
lret
ljmp
call
scas
testl
or
loope
cmpsb
lock
sbb
ljmp
xor
out
mov
cmc
test
leave
adc
in
add
lcall
out
mov
add
lods
push
cmpsb
mov
mov
mov
cld
inc
xchg
addr16
cmp
loop
cmp
and
hlt
aas
je
lcall
imul
jae
push
pusha
sub
mov
mov
inc
rol
aam
mov
pusha
fcomi
or
mov
push
lcall
mov
jbe
pop
and
or
or
sub
pop
std
dec
lcall
jle
rcrb
stos
jmp
push
loope
adc
fs
fcomip
call
cli
test
push
dec
xchg
stc
inc
sar
add
leave
sti
mov
je
call
push
loopne
arpl
idivl
adc
or
fs
pop
adcb
jne
and
fimuls
gs
cmp
push
mov
dec
jge
adc
mov
sub
jp
out
scas
mov
stos
in
sub
std
jp
dec
inc
push
mov
sub
inc
decl
inc
cmp
repz
popa
bound
mov
jge
loop
mov
jbe
outsb
loope
xchg
and
xor
in
jge
sti
jmp
fcomip
pushf
pop
in
mov
and
cmc
jne
ljmp
insb
sbb
es
ljmp
sti
popf
in
or
sbb
jo
sbb
test
jae
or
lahf
ljmp
add
cwtl
lahf
mov
insl
mov
mov
mov
std
lods
sbb
das
lcall
push
pop
addr16
mov
push
lock
push
shlb
mov
xchg
cwtl
insl
mov
push
ljmp
decl
stc
mov
stc
cmc
out
jne
adc
pop
jg
clc
or
jge
lret
mov
ficomps
fs
xor
xchg
jmp
pushl
sub
lcall
push
push
and
dec
xchg
enter
or
arpl
xlat
push
lcall
js
mov
imul
mov
mov
sbb
mov
or
lock
popa
out
ja
mov
jmp
lods
testb
sti
dec
lcall
popa
push
adc
jnp
cmpl
mov
shrb
leave
adc
xor
and
iret
adc
stos
ds
lds
inc
inc
jp
daa
jno
pusha
fwait
test
decl
adc
ja
mov
xor
xlat
sub
ret
lods
aas
insb
movsb
decl
arpl
mov
fwait
in
gs
push
jge
mov
sub
xlat
das
pushl
std
fwait
add
jno
push
xor
or
or
scas
add
call
incl
jp
gs
sbb
xchg
scas
push
in
sbb
or
mov
stos
testb
shll
inc
cli
repnz
rorl
mov
xor
cwtl
movsl
sub
lahf
movsb
cmpsb
fisubs
pop
clc
fwait
stos
imul
jge
lcall
xlat
inc
xchg
sbb
inc
jnp
xchg
dec
mov
mov
leave
sub
mov
fxtract
mov
ja
pop
incl
push
and
pop
xor
insb
xchg
jbe
lret
cmc
lcall
jmp
mov
roll
ljmp
jg
pop
mov
cmp
in
mov
inc
sub
cld
jns
sub
xchg
nop
mov
and
cmp
add
rcll
int3
int
or
mov
mov
aad
jl
loope
xor
into
das
lahf
fildll
jae
dec
inc
out
sar
pop
jl
mov
xor
cmc
testl
dec
dec
sub
jg
das
fisttpl
in
popf
rorb
jg
mov
mov
test
loopne
addl
adc
xorb
jbe
rcl
mov
test
decl
add
fxch
sbb
fst
push
outsl
push
cld
fucomip
push
mov
xchg
ja
test
mov
aaa
inc
xchg
inc
jns
cmp
jle
bnd
mov
rcrl
jp
sub
cld
incl
fdivs
arpl
dec
cwtl
lods
icebp
add
icebp
xchg
sbb
div
scas
xchg
cmpsl
sub
mov
incb
fsubrs
ljmp
shlb
scas
insl
in
and
mov
add
jb
outsl
iret
ljmp
into
mov
push
push
sub
int3
pop
push
inc
cmp
mov
movsl
sahf
in
aaa
pop
push
sbb
lds
push
pushf
out
lcall
cmp
push
icebp
sub
stos
imul
and
add
sbb
cmp
mov
scas
int3
jle
stos
jb
xchg
lds
test
orl
sbb
popa
aam
jge
adc
not
or
jg
and
xchg
addr16
fdivr
sbb
out
cmp
adcb
xchg
pop
dec
decl
push
lahf
push
pusha
gs
dec
ljmp
add
cmp
inc
sub
cmp
mov
push
add
jbe
push
sahf
call
fiaddl
add
loop
lods
ljmp
sub
das
cmpb
sbb
sub
data16
cmp
mov
xor
sti
dec
xchg
xor
jmp
cwtl
pushf
lods
cmp
out
mov
bound
imul
pop
hlt
dec
push
jns
adc
shlb
xor
xchg
enter
sbb
jbe
push
pushl
xchg
push
cmp
dec
lcall
and
shrb
jmp
cli
inc
jg
add
xchg
fcompl
and
imul
incl
rcrb
mov
and
je
cltd
cmpsb
push
std
call
pop
mov
sbb
or
push
stos
cmc
aas
push
lcall
clc
pop
xchg
cmp
mov
bound
jecxz
and
clc
pushl
dec
pop
test
daa
jl
insl
jmp
inc
inc
arpl
or
decl
mov
rcll
int3
lods
ja
mov
into
into
sub
imul
insl
adc
ljmp
cmp
push
call
add
mov
adc
out
adc
shrb
xchg
ljmp
mov
sbb
inc
sbb
pop
push
sahf
jne
or
xlat
dec
out
stos
mov
push
mov
push
test
cmpsb
ljmp
fcompl
out
ror
js
adc
aad
dec
mov
dec
xorb
std
ret
adcl
hlt
hlt
cs
fsubs
add
fcomip
mov
rcrl
aam
call
fbstp
shll
pop
dec
daa
push
inc
mov
jae
adc
repnz
xchg
and
xor
dec
ljmp
sbb
ja
add
pop
leave
and
popa
push
xor
jmp
cmpsb
stos
fidivl
xchg
test
sbb
mov
int
jmp
fs
hlt
lret
outsl
push
add
inc
cs
adc
and
test
mov
rolb
or
cmp
and
or
jmp
pushl
xlat
or
push
xor
ljmp
add
cld
add
shrb
out
ja
test
mov
movsl
dec
push
push
sub
push
jmp
aad
xchg
sbb
push
jmp
mov
cmp
cmp
fs
fdivl
push
push
dec
mov
cltd
pop
mov
push
xor
push
inc
jmp
adcb
les
mov
add
or
and
cmpb
mov
fidivrs
or
inc
jmp
mov
or
push
je
jmp
mov
movsb
mov
pop
add
shrl
pop
call
rclb
mov
cli
pusha
insl
mov
inc
fnstenv
sub
orb
hlt
adc
jmp
inc
std
push
divl
jmp
cmc
jb
call
sti
sub
mov
stos
or
int
mov
and
dec
hlt
push
mov
adc
stos
or
mov
sbb
jnp
push
xchg
das
sbb
add
xor
pushf
lods
jne
jo
push
and
repnz
jmp
add
sti
into
push
pop
cli
mov
or
movsb
daa
sbbb
pushf
jge
or
mov
xor
iret
in
dec
adc
or
add
out
adc
push
jle
sub
or
test
mov
flds
mov
push
clc
in
or
roll
test
and
mov
adc
dec
add
push
push
or
sub
int
mov
in
fwait
and
lods
mov
push
xchg
es
cmp
dec
mov
adc
and
aad
loope
mov
jo
mov
imul
xorb
popf
loope
fbstp
jmp
aas
add
adc
out
out
jbe
xchg
in
ss
sbb
jnp
xor
js
adc
pop
jae
mov
push
mov
in
push
push
xor
movsb
inc
lret
jo
sbb
shrb
mov
mov
push
add
jb
cmp
xor
inc
xor
ds
pop
mov
xchg
push
jae
sub
outsb
xchg
sbb
ss
es
sbb
test
cld
xchg
lock
xor
inc
inc
mov
ss
or
adc
xchg
mov
in
push
shll
mov
or
rcll
popf
and
push
mov
xchg
out
mov
push
into
dec
mov
lods
paddq
jo
ret
movsb
sti
clts
add
sti
flds
ficoms
aam
fcmovnbe
push
dec
cmp
mov
ja
div
mov
lret
js
leave
inc
xor
adc
loopne
sbb
insl
inc
pop
xor
dec
or
add
xor
cmp
jg
cld
data16
in
pop
jp
inc
rorl
test
inc
push
cmp
js
leave
scas
decl
clc
push
adc
pop
jno
mov
lcall
pushf
cmp
in
xchg
add
pop
xor
add
mov
arpl
stos
shrb
outsl
insb
clc
and
fildl
push
in
cmp
push
add
lods
add
pushl
cmc
jp
mov
imul
jg
pusha
clc
das
mov
clc
insb
ss
mov
sub
or
xchg
pop
push
add
xor
mov
push
movsb
or
aaa
mov
mov
fnsave
ret
xchg
push
ss
mov
add
imulb
fisubrs
mov
mov
pop
insb
test
les
mov
cmp
in
push
mov
js
mov
cmc
xor
fdivr
xchg
jae
jbe
or
sub
pop
pop
push
mov
cmpl
adc
rorb
mov
adc
add
lahf
cmpsb
fistl
jns
pop
xor
out
and
sbbb
lcall
xchg
pop
push
ret
dec
daa
and
out
or
sbb
xor
loopne
fs
es
xchg
add
mov
test
int3
push
sub
cmp
sub
dec
xchg
pusha
adc
jo
sub
pop
pop
jmp
push
push
or
test
aad
adc
mov
mov
ret
jmp
stos
es
inc
popf
test
cwtl
mov
je
leave
shll
jns
and
mov
xor
add
mov
jo
out
adc
call
mov
imul
pusha
lret
pop
aam
dec
mov
dec
jp
pop
dec
js
cld
sub
in
test
jmp
push
fdivrl
jge
in
mull
es
xorb
adc
mov
out
dec
mov
or
mov
lods
cs
jnp
popf
adcb
ror
ds
mov
ficoms
insw
mov
bound
jl
aam
add
jl
adc
jne
push
sbb
and
mov
sub
ret
mov
clc
pop
inc
mov
xchg
xchg
adc
pop
adc
gs
push
mov
or
call
movsb
sbb
stc
shlb
mov
rcll
je
loope
sbb
addb
xchg
lea
stos
in
adc
enter
xor
jmp
shrl
sub
cmpsb
mov
nop
daa
ja
addl
mov
fiaddl
ljmp
pop
add
aad
xor
outsb
xchg
inc
hlt
pop
jns
mov
inc
xor
arpl
pop
repz
cmp
mov
les
daa
ss
imull
add
xchg
sub
inc
sbbb
shll
mov
or
mov
mov
and
jbe
js
sahf
out
hlt
mov
sub
clc
loopne
cmpsl
popa
ret
add
test
push
push
fistps
add
lods
shl
lret
jmp
pop
mov
fadds
flds
adc
sub
pusha
mov
mov
jo
fidivrs
cwtl
push
bound
and
mov
loope
push
clc
dec
inc
mov
mov
popa
sbbb
movsb
call
in
cmpsb
cmp
test
in
push
lock
aaa
es
orb
js
les
cld
fidivrs
or
mov
mov
or
adc
icebp
jnp
pop
cmc
or
add
dec
das
dec
ljmp
sahf
push
mov
jg
jne
out
cmpb
xor
or
dec
cli
arpl
insb
sub
lock
imul
jecxz
shl
add
js
adc
sti
in
daa
pushf
popf
xor
loopne
jo
sbb
cld
loopne
xor
stc
inc
ret
icebp
sbb
inc
loopne
jge
xlat
shll
pop
cmpl
mov
insb
fwait
push
movsb
xor
mov
mov
scas
or
cmc
mov
add
add
and
pop
lret
dec
rcll
xchg
fcomp
loop
mov
xor
sahf
mov
lret
mov
sub
icebp
push
repz
mov
mov
shlb
fsub
call
dec
push
and
test
insl
add
aad
leave
inc
pushf
loopne
add
or
push
sbb
test
adc
shlb
mov
jg
loopne
jg
aam
jmp
je
push
je
jle
mov
popa
mov
cmp
or
dec
jb
subl
mov
add
mov
rorb
mov
mov
mov
push
movsl
mov
push
popa
mov
cmp
push
mov
addl
and
mov
gs
jmp
jo
in
fdivrl
ljmp
jmp
aas
and
push
sub
xor
jmp
mov
mov
jo
clc
add
add
jnp
jmp
aaa
aad
out
inc
nop
inc
imul
lods
sub
popa
xchg
add
rolb
cmpsb
loop
pop
dec
jne
in
insl
push
je
mov
sub
adc
pop
ret
aas
daa
sub
push
sbb
sub
loope
adc
push
test
xchg
push
neg
hlt
lock
ljmp
fsubrl
out
fcmovnu
jo
cmpsb
lock
pop
sub
dec
adcl
mov
and
pop
insl
sbbb
aas
or
jg
mov
ror
inc
insb
jmp
jb
aam
sbb
int
outsl
inc
jge
and
fld
or
aam
cmp
aam
sub
lock
jb
lock
and
movsb
icebp
fwait
or
xchg
popa
lahf
or
jmp
jnp
jg
cld
out
push
nop
push
push
ss
loop,pn
ljmp
add
daa
lock
ss
adc
xchg
and
enter
ljmp
enter
push
mov
add
gs
daa
jp
add
or
xor
or
cmpl
out
add
dec
test
test
out
sub
ss
and
dec
js
mov
adc
mul
movsl
rorb
cmpsl
dec
mov
and
push
in
cli
sbb
repnz
and
xchg
loope
jecxz
sbbl
xor
out
stos
mov
cmp
push
or
pop
movlps
mov
jp
out
subl
mov
cmp
mov
mul
adc
cmp
xchg
xchg
and
adc
cmpsb
mov
pop
fwait
or
pop
cmp
mov
fisubrs
sbb
jmp
mov
cltd
ss
insb
add
bound
or
add
sbb
fwait
sub
lds
lock
jbe
popa
cmpw
movsb
or
nop
add
call
jne
sahf
xor
dec
imul
and
pop
jmp
mov
call
add
jmp
movsb
faddl
jb
add
sub
test
cmp
cmp
adc
lock
xchg
and
addr16
pop
xor
cli
loopne
hlt
std
test
mov
mov
into
int
or
pop
pop
jge
lret
cmc
and
mov
pusha
push
xor
push
xor
jo
cmpl
xchg
repnz
cli
cwtl
in
or
jbe
mov
mov
loop
push
cli
test
fadds
mov
xchg
lock
pushf
add
jnp
fcmovu
fs
inc
das
sahf
pop
test
jmp
dec
xchg
sbb
outsl
iret
rol
mov
sahf
in
pop
rclb
popa
and
push
pop
sub
pop
aad
cmc
or
pop
sbb
ljmp
push
lods
gs
enter
pop
adc
lcall
push
into
add
popl
sbb
rcll
inc
cwtl
mov
mov
gs
roll
inc
movsl
adc
call
push
pusha
mov
sahf
in
int3
stos
incl
lret
inc
icebp
fstl
sahf
sbb
sub
dec
inc
fwait
gs
out
sti
mov
test
out
je
ret
cmp
mov
sub
call
jbe
push
add
cmp
adc
pop
or
jb
fldt
mov
mov
dec
sub
in
adc
in
mov
bound
popf
in
xchg
and
mov
es
inc
lods
push
mov
sbb
fst
insl
outsb
mov
sbb
jmp
pop
lock
push
or
fistpl
fisubrs
and
xor
push
imul
enter
insl
xchg
sbb
mov
lret
enter
call
cli
push
sbb
js
xchg
and
scas
add
js
test
inc
add
push
xchg
sti
lret
in
jmp
adc
mov
fsubrs
add
and
sub
dec
pop
rcrb
dec
push
inc
xor
and
hlt
and
cwtl
mov
or
xor
dec
aad
xor
leave
mov
add
lea
push
les
aad
jg
and
fldcw
add
xor
add
popf
and
icebp
je
dec
inc
xchg
jg
int3
dec
loope
int
dec
xlat
dec
icebp
bound
mov
xor
dec
jle
pusha
pushf
js
loope
je
popa
ret
push
stos
sbb
or
lea
sub
scas
mov
cltd
dec
jle
dec
mov
in
clc
adc
jp
dec
adc
jno
sub
and
cmp
mov
shll
jo
iret
mov
je
ja
movsl
cltd
loopne
das
push
shlb
roll
in
movsb
in
ret
pop
int3
out
loope
cmp
mov
mov
xchg
out
inc
js
ret
lcall
dec
push
jb
mov
jo
dec
js
and
cpuid
sbb
pop
cwtl
adc
aas
inc
ja
xchg
push
test
add
mov
nop
and
mov
imul
xchg
dec
and
mov
lock
stos
ss
add
mov
mov
mov
filds
js
popa
jbe
out
rorb
push
jmp
fldcw
stc
stos
and
xor
popa
outsb
das
fcomps
pop
sub
ljmp
add
in
aam
push
push
imul
xor
inc
add
rclb
stos
mov
mov
sbb
rcrl
jle
add
out
add
adc
dec
xor
movsl
adc
inc
cmp
push
or
adc
bound
shrl
push
xchg
cli
add
adc
test
call
sub
inc
or
mov
push
std
cld
movsb
sahf
and
bnd
sbb
ds
xchg
fs
push
xorl
sub
sbb
addps
adc
or
cmp
or
pop
ds
ret
ja
std
cmp
push
jl
cmc
jmp
fisubl
fdivrl
pop
add
out
ljmp
jo
lock
jb
dec
push
aad
mov
add
cmp
xchg
loopnew
lahf
out
jecxz
or
imul
sbb
sub
sbb
out
mov
shll
test
xchg
insl
mov
push
mov
cmpsb
xchg
pop
repz
icebp
adc
sahf
popa
into
test
mov
cwtl
adc
fnstsw
mov
mov
out
dec
mov
adc
jmp
inc
rcrb
adc
lcall
adc
add
out
xor
push
lcall
push
adc
inc
xchg
sub
push
das
shll
lods
adc
repnz
fisubrl
xorl
mov
mov
pusha
and
sub
pop
pop
push
dec
xchg
in
aaa
addl
pop
sub
add
push
pop
pop
rclb
pop
sub
loopne
lods
iret
mov
cmp
inc
into
dec
mov
mov
loopne
out
lock
mov
mov
push
pop
test
js
mov
in
jo
stc
es
fimull
lods
sbb
stos
adc
in
xor
sub
pop
iret
jge
mulb
fs
outsb
xor
xor
dec
jb
jmp
fs
xor
adc
push
aas
add
js
pushf
sub
jne
sahf
andb
inc
iret
sub
mov
push
leave
or
cmovs
stos
jecxz
test
jo
gs
lret
fwait
cs
adc
mov
and
jo
inc
fwait
lea
inc
mov
fcoml
mov
inc
pop
lods
aam
inc
add
repz
js
sub
lock
cmpsb
or
clc
cld
jmp
inc
divb
jg
pop
mov
mov
ja
xor
jno
out
clc
inc
scas
xor
loop
notb
or
fcompl
push
enter
aas
loope
loop
leave
xchg
ss
pop
sbb
fildl
loopne
add
pop
movsl
mov
out
movsb
rolb
stos
cmpsb
mov
xor
stc
mov
xchg
jno
sbb
sti
mov
mov
sti
inc
mov
adc
sahf
dec
dec
repnz
xchg
mov
cmp
xlat
and
push
mov
jmp
icebp
fsubl
rcr
repnz
or
gs
fcoml
fwait
popa
sbb
loopne
or
or
push
jmp
out
fwait
mov
dec
andb
lock
jae
push
out
push
fnstcw
mov
push
arpl
iret
icebp
inc
rol
jo
mov
in
adc
cwtl
popf
js
adc
jnp
adc
sar
jb
stos
clc
ret
outsb
or
lret
and
fstpt
mov
imul
jg
andb
or
lea
dec
adc
data16
adc
out
cwtl
shlb
mov
ds
dec
je
outsb
xchg
icebp
mov
xchg
dec
mov
ret
xchg
inc
lods
mov
movsb
test
scas
mov
test
lods
shlb
out
xor
iret
mov
cmpb
add
test
add
jge
mov
mov
shl
add
push
xchg
and
inc
sbb
cld
xor
jp
arpl
cmp
pusha
clc
pop
rclb
test
arpl
jmp
xlat
es
mov
pusha
cmpsl
pop
cmp
jb
shlw
adc
xchg
dec
mov
mov
pop
xchg
adc
add
pop
lea
clc
jmp
mov
xchg
fwait
icebp
adc
fildll
cmp
mov
add
cli
lock
push
fsub
scas
shlb
loope
cmp
inc
testb
and
xor
mov
jo
test
out
adc
or
shlb
enter
mov
push
mov
xor
mov
insb
loope
hlt
dec
push
repnz
mov
jp
mov
sbb
add
es
cld
clc
insb
add
stc
test
js
scas
imull
cmp
cmpb
push
inc
pushf
inc
sbb
mov
jb
adc
mov
push
push
insb
loope
mov
lods
push
mov
mov
mov
sahf
cmp
mov
arpl
testb
repnz
push
pusha
pop
mov
lods
imul
jp
sbb
scas
outsb
mov
mov
xchg
and
xlat
hlt
adc
add
movsl
movsl
bound
inc
aas
lods
call
jnp
cld
push
scas
add
push
jp
pop
cmp
mov
loopne
in
pop
fsubrs
fisubl
pop
or
pop
add
add
aas
aam
xchg
clc
mov
push
mov
std
xorb
das
push
dec
lods
sub
xchg
shlb
hlt
movsl
sub
movsb
js
xchg
js
call
cmp
pop
cmc
rorl
add
jo
aaa
adc
push
adc
orl
movsb
das
fimuls
xchg
or
cmp
push
push
aam
sub
cmpsl
mov
enter
xchg
shrl
dec
test
es
js
pop
push
add
inc
adc
in
popf
daa
or
filds
xchg
ja
fstpt
jp
insl
movsl
sbbb
pop
lods
roll
push
or
xchg
jbe
add
xchg
sub
add
loop
cmpsl
js
loop
pusha
ljmp
jle
aaa
insb
call
repnz
sbb
mov
fwait
repz
stos
pop
lock
shlb
decl
add
aam
lcall
add
mov
cld
inc
add
loopne
repnz
sbb
or
adc
xchg
inc
lock
mov
or
pop
jmp
jae
dec
jge
xor
andb
mov
and
call
popa
aam
into
ret
rolb
mov
sbb
enter
xchg
ljmp
push
imul
mov
aam
push
pop
and
xchg
add
push
dec
fs
push
cli
outsb
xchg
repnz
jo
ja
sub
push
or
jo
pop
xor
push
loopne
gs
mov
data16
cmp
mov
mov
out
or
mov
push
mov
or
mov
into
imul
pop
pop
sbbb
xchg
xor
pop
lcall
jne
or
push
test
mov
aam
pop
icebp
imul
mov
test
cmc
push
add
faddl
test
inc
sbb
or
fwait
and
lret
out
add
mov
xor
sub
jo
xor
rolb
inc
xchg
icebp
fistpll
popa
xchg
xchg
or
loopne
dec
add
jno
jl
data16
jg
mov
cmp
incl
fldcw
add
ljmp
fwait
sub
mov
mov
ret
jmp
or
loop
jle
sbb
stos
stos
jecxz
ret
add
push
int3
dec
sbb
mov
insb
hlt
inc
js
orl
mov
adcl
push
or
insb
flds
cmp
imul
and
cmpsb
lahf
sbb
jl
out
jno
inc
test
leave
ja
popf
cwtl
les
xor
and
dec
or
or
cmp
ds
sub
int3
push
add
pop
and
lea
and
adc
cmp
jmp
cmp
cmpsb
fwait
jge
jnp
push
rorb
add
mov
bound
into
call
dec
push
xchg
mov
in
test
jcxz
dec
lret
jae
sbb
push
dec
inc
mov
sub
mov
jl
mov
insb
pop
xchg
fstpt
lods
pop
and
hlt
test
sbb
mov
mov
xchg
aad
jno
or
stos
nop
add
add
in
add
jns
and
jbe
and
loope
popa
mov
mov
jecxz
jno
mov
dec
cmp
fwait
lea
mov
test
push
das
mov
push
add
cltd
or
ds
and
arpl
insb
sub
mov
das
icebp
loop
ret
bound
mov
test
or
lods
insb
sbb
mov
adc
fadds
push
mov
jbe
test
push
adc
lea
and
xor
sbb
push
xchg
adc
sub
imul
test
inc
add
sbb
mov
loopne
loope
rorb
add
lods
cmp
test
inc
inc
aaa
sbb
enter
mov
cmp
sub
pop
js
flds
andb
jecxz
cs
or
ds
pop
ja
xor
xlat
jne
or
aaa
rorb
mov
loopne
push
pop
popf
mov
dec
xchg
loope
test
ljmp
outsb
and
int
loop
imul
imul
jecxz
lcall
imul
adcb
sub
pop
mov
gs
outsl
arpl
fldt
rcrb
jo
mov
adc
sub
add
push
cli
shrl
mov
repz
jb
or
cltd
clc
jbe
jns
mov
stc
outsb
ss
ss
cld
shrb
int
aam
popl
sbb
and
pop
sbb
xchg
jle
sub
shr
push
pop
xor
dec
mov
push
sub
mov
adc
rolb
adc
and
dec
and
inc
or
or
arpl
cmp
xchg
mov
adc
jle
add
inc
lock
pushf
int
lcall
mov
pop
mov
cmp
je
xor
insl
inc
stos
pop
sbb
fcmovnu
rol
jmp
push
iret
aas
pop
fsubrs
movsb
fistps
jnp
mov
sbb
dec
add
pusha
aad
frstor
mov
fsub
xchg
mov
pusha
sbb
or
sbb
add
fwait
lcall
jl
addb
loope
sti
mov
mov
aam
out
ljmp
stos
inc
mov
pop
stc
cmp
mov
cmpsb
ss
aam
movsl
pop
adc
pop
inc
sub
sti
test
rcll
adc
ds
lret
and
xchg
movsb
sbb
cli
cmp
pop
dec
js
addb
out
pushf
out
arpl
cmp
xor
inc
call
lea
and
ljmp
mul
jmp
jo
push
insl
gs
and
jb
insl
cs
les
mov
cmpsl
or
jno
movsb
push
insl
and
and
mov
inc
popa
and
flds
or
pop
pop
mov
cmpsb
jnp
in
fwait
mov
insb
and
lds
add
xchg
push
aas
cmpsb
outsb
aas
mov
fwait
push
pusha
lcall
sub
and
lock
inc
pop
sub
and
mov
mov
test
or
dec
mov
jne
test
inc
sub
stos
enter
shl
inc
jne
adc
mov
les
call
xor
mov
cmp
dec
jb
cmpsb
push
jecxz
inc
or
add
lret
mov
pop
dec
loop
sbb
cwtl
fs
jb
or
scas
shrb
aaa
jo
mov
pushf
sub
mov
sub
lret
push
pop
xchg
pop
pop
push
xor
inc
adcl
fildll
sub
sbb
rcll
test
push
iret
mov
cmp
test
shll
out
cmc
sahf
cmc
push
push
sub
clc
jmp
popa
pop
jg
adc
aas
loopne
mov
jmp
inc
sbb
xchg
xor
jp
mov
subl
add
sub
mov
jmp
lret
jns
sbb
sub
or
mov
push
je
hlt
loopne
pop
lods
dec
push
or
push
pop
inc
cmp
and
sub
pop
jb
inc
ret
movsl
repz
sbb
or
add
pop
dec
adc
inc
call
jno
out
lret
push
dec
aas
addl
or
movsl
stc
jno
hlt
mov
int
mov
add
and
es
xchg
push
lcall
hlt
add
test
jmp
bswap
icebp
loopne
or
push
mov
mov
jne
xlat
stos
popf
je
mov
insl
pop
addb
sbb
lods
popf
sahf
dec
aas
sub
dec
mov
xchg
test
call
iret
jl
into
pop
xchg
in
decb
mov
xchg
std
movsl
fnstcw
iret
aam
cmp
push
insb
sbb
pusha
cmp
cwtl
mov
cmp
pop
ss
mov
cmpsb
addb
cmpsl
push
fidivl
adc
push
or
push
jb
aas
loop
ret
push
lcall
cmp
xchg
out
into
data16
std
and
popa
imulb
aaa
inc
jmp
popf
cmp
cld
ret
jmp
add
push
lret
aad
mov
jecxz
and
dec
mov
pop
shll
shrb
out
jl
outsl
movsl
xor
adc
arpl
loopne
and
mov
mov
leave
sbb
cld
jmp
into
sub
add
mov
add
jbe
cmp
imul
outsb
cwtl
insb
sbb
or
mov
imul
mov
call
dec
fistps
clc
and
mov
mov
cmp
sbb
testl
pop
mov
mov
adc
xor
insl
sbb
lcall
aaa
loope
mov
push
and
add
lods
sahf
xor
ds
in
stos
push
orl
push
jne
lcall
decl
rol
mov
push
xchg
outsb
inc
jmp
je
jbe
popf
imul
sahf
test
or
cld
rol
mov
subl
mov
mov
xor
mov
imul
and
lahf
sbb
scas
scas
jo
or
data16
scas
leave
scas
adc
xlat
shlb
movsb
sub
cmp
nop
xchg
cltd
cmp
shr
inc
jg
scas
dec
jb
fcmove
jmp
add
frstor
lahf
or
pop
call
inc
mov
xor
pop
sbb
mov
loop
aad
xchg
mov
mulb
lods
xor
push
sahf
cmp
aas
sub
nop
loop
aas
mov
mov
or
mov
jl
scas
scas
outsl
ss
pusha
dec
loope
push
jl
loop
frndint
cmp
inc
in
int3
or
mov
cld
mov
xor
sub
inc
ja
in
leave
xchg
inc
cld
lea
push
inc
jg
cmp
jge
mov
movsl
call
push
ret
cwtl
lret
push
jmp
add
push
lock
xchg
xchg
pop
mov
test
stos
nop
stc
jmp
cltd
rorl
fildll
add
lcall
fsubs
lahf
xor
pop
mov
addr16
cld
fs
cmp
sub
loopne
inc
rorl
popf
xorb
push
cmp
pop
sub
daa
inc
bound
cwtl
xlat
in
clc
ja
dec
aaa
push
in
dec
push
or
andb
sbb
sbb
adc
push
stos
fimull
adc
outsl
stos
insl
push
btcl
aas
mov
or
adc
or
adc
adc
lret
aad
mov
cmpsl
push
bound
ss
fstpl
push
mov
mov
enter
xlat
or
pop
test
popa
lock
shll
or
lahf
and
pushf
daa
ds
mov
xchg
cmp
mov
lret
and
imul
hlt
jg
xchg
in
fdivs
cs
jmp
dec
leave
add
insb
mov
jp
jp
cmp
sub
lods
jmp
pop
aam
add
mov
ret
lds
jl
push
or
sti
sub
push
ret
xor
test
sbb
outsb
aad
int3
mov
call
push
data16
je
push
and
movsl
scas
push
or
xor
mov
cmp
shl
push
fisubl
push
ret
das
xchg
xorl
pop
fwait
ret
push
ljmp
out
mov
cmp
or
inc
rorl
add
inc
cmp
mov
push
mov
push
sbb
ljmp
mov
out
lcall
pop
or
mov
out
repnz
outsl
decl
clc
jge
stos
pop
add
mov
inc
cs
not
dec
xor
mov
shll
cmpsb
mov
movsb
sub
pop
sub
fmull
loop
pop
adc
push
pushf
push
push
mov
loopne
or
jl
jecxz
and
je
int3
xchg
dec
pop
sub
stc
dec
jno
cmp
dec
bound
lahf
rol
sub
pop
pop
mov
aad
rorl
pop
repnz
sbb
shrl
clc
xchg
sub
test
ljmp
scas
aam
xorl
test
xchg
arpl
adc
mov
mov
jb
ret
aas
sbb
mul
inc
dec
fwait
cmp
sub
xchg
mov
jnp
repnz
lret
push
mov
adc
dec
lock
mov
loopne
out
xor
adc
xchg
jmp
decb
xor
or
cmp
test
add
popl
mov
or
xchg
sbb
push
inc
das
pop
stos
push
sbb
test
mov
mov
add
jbe
cvttps2pi
add
sbb
ret
insb
lret
aam
jmp
dec
xor
or
rorb
xor
push
scas
loop
or
mov
je
pop
xchg
ljmp
xor
jg
sub
inc
cmp
pop
dec
fs
push
fsubrs
lods
pop
out
jb
mov
rcl
cmc
xchg
adc
sbb
sub
mov
incl
dec
mov
sbb
pop
jbe
daa
and
idivb
and
mov
test
xchg
ss
push
js
sarb
cmc
mov
jns
mov
cmpb
push
mov
fdivrs
inc
inc
insb
jno
pop
pop
push
cmp
mov
xchg
push
xor
jb
nop
push
jmp
pop
out
pusha
in
fbstp
jns
jge
inc
dec
push
repz
jecxz
movsb
cs
test
test
mov
or
xchg
lods
cmp
mov
stos
js
jo
mov
jns
add
jg
jbe
dec
lods
into
andl
imulb
das
mov
sub
movsb
incl
add
sub
sbb
cwtl
out
ljmp
testb
add
ja
or
rcll
repnz
ficomps
cmp
dec
and
movsl
cmp
scas
xchg
push
push
js
pusha
pop
jle
xor
fs
mov
loope
mov
stc
sbb
jp
mov
out
clc
mov
mov
jo
pop
jmp
scas
sarl
push
sbb
cmp
or
pop
pop
loopne
push
push
jb
cltd
jmp
or
mov
ljmp
adc
cwtl
sub
fidivs
hlt
mov
and
pop
mov
push
add
mov
das
ja
jne
push
ljmp
mov
push
xor
dec
or
fdivs
pop
stos
xor
sub
loopne
adc
jno
iret
dec
je
cli
shl
xlat
lds
or
ficoms
lods
movsb
adc
sbb
insb
dec
push
in
ds
jmp
test
in
ret
ss
imulb
mov
aam
sbb
outsb
sbb
jge
cwtl
mov
xchg
and
xchg
movsl
cmp
cli
roll
ds
rcrb
inc
add
cs
xor
add
mov
push
mov
and
or
push
out
call
repnz
enter
or
sub
sbb
cwtl
pop
xor
push
fcoml
popl
pushf
pop
pop
insl
jo
push
jno
and
mov
mov
mov
and
add
clc
dec
pop
inc
lret
icebp
scas
cltd
aad
ss
iret
jmp
js
add
and
fucomi
test
push
xchg
daa
cmp
xchg
push
movsl
jg
cld
int
lds
xchg
fimull
sbb
jmp
jne
add
mov
mov
mov
nop
jo
les
push
mov
xchg
fwait
xor
or
cmpsb
mull
mov
loop
push
mov
adc
lcall
mov
movsb
outsl
add
fwait
push
add
js
add
js
lock
sub
cltd
xchg
scas
mov
sbb
mov
xchg
adc
sbb
mov
sarb
nop
fidivrs
adc
out
ds
sahf
cmp
stos
adc
int
mov
xor
es
mov
sar
lcall
sti
movsb
push
add
push
sub
nop
jb
test
pop
cmpl
adc
mov
dec
imul
leave
dec
loope
or
les
jecxz
xor
repz
inc
add
mov
cmp
inc
sbb
inc
repnz
inc
and
cmc
mov
sbb
imul
push
xor
lret
mov
fisubs
rorb
icebp
mov
test
push
inc
xlat
add
mov
ja
jo
mov
pop
add
mov
in
pop
sbb
repz
push
xor
scas
andl
sbb
sbb
je
mov
loope
out
fdivp
clc
jmp
mov
data16
sbb
dec
xchg
pop
pop
scas
sub
or
and
sbb
movsl
cmp
aaa
jo
pushf
or
xchg
decl
xchg
mov
xor
push
enter
cmpsb
sbb
lock
sub
stos
sbb
call
pop
push
fstl
scas
sbb
mov
push
andb
int
mov
push
std
pop
cmp
xorb
inc
pop
adc
push
xor
and
fildl
cmp
and
jl
loopne
rclb
mov
mov
adc
add
jge
xorl
inc
enter
push
cmpsb
jmp
stc
add
data16
mov
mov
cmp
out
sbb
insl
cmp
mov
mov
mov
andl
and
ret
roll
mov
dec
mov
popf
mov
mov
inc
jae
inc
mov
out
push
in
out
or
es
jmp
and
std
push
lds
jb
out
mov
call
int
jo
pop
cmp
xchg
test
ljmp
inc
insb
dec
fadd
inc
adc
jg
mov
int3
mov
cwtl
sub
mov
add
into
rorb
mov
adc
out
in
mov
jg
lock
sbb
ss
popa
dec
sub
mov
xchg
es
inc
out
arpl
push
loop
lods
orl
xchg
sbbl
jne
ss
inc
xor
xlat
rorl
jl
push
loopne
xchg
lret
sbbb
cmp
rolb
mov
pop
jnp
cs
mov
jecxz
push
mov
lds
pop
fwait
mov
andl
sbb
dec
push
enter
lds
jmp
inc
icebp
rcl
and
or
lods
cmpsl
lret
push
sbb
pop
xchg
pop
pop
mov
enter
pop
and
data16
push
jb
ret
imul
sbb
xor
inc
or
xchg
xchg
cmc
mov
pop
cmp
lds
lods
or
cld
mov
and
in
dec
dec
mov
sbb
fimull
pop
add
jo
add
test
in
movsb
test
jle
cmp
sahf
jae
ret
inc
movsb
sahf
test
or
jbe
negl
or
or
add
push
add
inc
rcr
and
jp
sbb
and
cld
test
pop
imul
sub
jmp
popa
add
mov
rorb
inc
add
jo
jb
xor
insl
sub
or
mov
and
cmp
xor
mov
aad
insb
inc
dec
sbb
push
cmp
icebp
scas
and
mov
pop
xchg
ss
jge
jecxz
mov
pop
adc
outsb
je
fidivrl
jns
xchg
add
loop
repz
cmp
pop
or
cmp
iret
add
jmp
add
pop
das
popa
int3
adc
icebp
scas
mov
mov
push
push
dec
fcmove
add
add
cwtl
pop
mov
inc
adc
cli
and
sub
movsl
xchg
lea
lock
inc
mov
mov
in
repnz
ljmp
rorb
sub
clc
test
stos
ret
and
dec
mov
subb
or
mov
push
movsl
fwait
sbb
sbb
jg
push
pop
sub
sbb
mov
aas
int
inc
sbb
jns
xor
lea
and
lock
sub
daa
adc
lcall
call
incl
loop
ljmp
test
fsub
jmp
xchg
dec
lds
cmpl
ret
jnp
stos
push
mov
es
mov
cltd
add
or
jle
mov
repnz
push
dec
int
cld
les
xchg
outsb
daa
popa
ljmp
mov
movb
repz
xchg
jmp
push
cli
loope
pop
sub
dec
cld
sub
xchg
adc
pop
jo
push
movsl
ss
jge
jnp
xchg
aas
mov
or
scas
ljmp
add
jb
cmp
xor
pop
mov
testb
dec
pushf
insb
cmp
popf
dec
je
and
xor
sub
push
fst
mov
je
sbbb
insl
cmpb
ss
pop
inc
sub
add
or
mov
mov
push
clc
addb
ret
ret
xor
cld
xlat
les
mov
test
mov
or
adc
mov
mov
pushf
scas
hlt
inc
pop
fadd
ss
push
insl
fiaddl
divb
movsb
mov
sub
int
cmp
pusha
insb
jb
bound
or
call
scas
pop
aam
xchg
fwait
lahf
xor
add
stos
inc
push
xchg
ror
xchg
ljmp
inc
jp
lock
shlb
push
sarl
jmp
mov
jno
lds
daa
or
addr16
mov
add
lret
lods
sbb
les
mov
add
xor
shll
adc
xlat
pop
mov
jo
insb
push
fwait
dec
sbb
mov
int
sub
test
loope
push
add
mov
xchg
cmc
pop
jle
add
sub
inc
loope
mov
mov
inc
inc
shlb
sbb
orl
movsb
mov
lcall
cli
shl
je
cmp
ret
sub
fdivr
decl
das
shlb
out
inc
add
sub
push
cmp
mov
jbe,pn
or
ret
std
mov
pop
push
and
xchg
pop
das
and
add
or
pop
cwtl
daa
xorl
sbb
inc
scas
dec
xor
jbe
dec
dec
add
pop
xlat
int
sarb
mov
or
je
pop
add
repnz
add
mov
mov
adc
call
mov
scas
lcall
insb
push
aam
movl
mov
std
pop
dec
jmp
dec
push
ret
cmc
push
jecxz
add
repnz
pusha
jno
shlb
mov
ss
pop
jo
ficoms
ss
pop
sub
js
add
mov
les
test
cltd
xor
adc
mov
sbb
cmpsl
pop
std
imul
sub
mov
sbb
sub
ja
loop
sbb
js
sbb
rcll
mov
test
sub
dec
jg
int3
jmp
xchg
add
xchg
mov
ret
stos
insb
loop
aad
push
outsb
inc
bound
ljmp
movsb
mov
leave
aad
adc
xor
aaa
and
and
and
xlat
testb
mov
cmp
fisubrl
bound
adc
inc
add
push
int3
xorl
movl
mov
shrl
or
sti
rcrb
int3
enter
mov
ds
scas
sub
jne
in
xchg
lock
sbb
or
dec
push
inc
filds
mov
or
and
rclb
adc
pop
dec
mov
jle
ja
push
test
mov
jecxz
push
lock
mov
xor
push
add
int
pusha
adc
cmp
jb
cwtl
or
sbb
mov
dec
adc
push
inc
shl
loop
jl
stos
xor
repz
dec
and
adc
pop
dec
sbb
outsb
xchg
in
test
gs
cmp
nop
enter
add
dec
dec
dec
inc
pop
scas
mov
xchg
pusha
xchg
push
lahf
sub
dec
repnz
call
sub
leave
mov
ret
add
pop
rclb
mov
stc
cbtw
sbb
mov
test
cs
cmp
and
roll
or
cmp
cmpsb
insl
mov
insb
pop
loope
xchg
clc
ds
add
dec
pop
xor
cmp
mov
or
int3
sbb
mov
cld
cvtpi2ps
in
mov
mov
adc
hlt
xorl
daa
sbb
aas
jp
pop
mov
mov
mov
clc
loopne
fstp
sub
movsl
mov
clc
mov
stc
int
insb
pop
pop
filds
jo
cmp
and
pop
arpl
xor
insb
std
mov
rolb
or
ret
xor
stc
xor
mov
add
arpl
lcall
inc
push
mov
addb
sub
std
aad
xor
fwait
dec
cmc
gs
cmp
pop
push
imul
xchg
cmp
xchg
ret
dec
sbb
pop
pop
jl
push
mov
test
hlt
mov
clc
roll
outsb
adc
pop
mov
leave
cmp
subps
mov
mov
pop
in
dec
aas
add
cld
inc
add
test
xor
rolb
je
pusha
cltd
adc
xchg
mov
test
sbb
mov
fcom
add
out
ret
dec
push
mov
lret
fisubl
sbb
test
ja
loop
scas
push
pop
mov
and
or
push
sahf
xor
adc
sub
lret
rolb
sahf
push
xor
sub
jne
cmp
insb
mov
jbe
jbe
fmuls
push
and
fdivrp
xchg
fdivrp
adc
loopne
sub
and
mov
or
mov
imul
cli
mov
and
ret
add
mov
cmp
or
inc
push
jp
mov
rcrl
fisubrl
push
fmuls
out
insl
ret
out
movsl
rolb
xor
ja
add
sahf
jns
sub
lea
jl
xor
dec
xchg
jle
mov
or
mov
enter
rcrb
in
add
pop
add
rcrl
xor
push
movsb
mov
xor
hlt
mov
jae
fdivrl
push
addb
pop
stos
sbb
loope
mov
pop
cmc
and
test
mov
sahf
jbe
outsl
add
inc
mov
add
divl
mov
sbb
or
mov
pop
jmp
push
js
push
lods
ret
xor
bound
pop
dec
inc
xchg
or
mov
sub
leave
pop
mov
sub
mov
push
jnp
add
inc
pop
cmp
push
dec
fsub
and
repz
insl
add
sbb
mov
shlb
push
imul
add
pop
pusha
mov
lock
sub
in
ja
clts
inc
or
cmp
cmpsl
pop
cli
push
or
icebp
cmp
mov
fidivl
push
mov
int3
inc
aaa
in
test
movsl
or
xchg
jp
subb
fxch
jae
test
sbb
cmp
add
fcmovbe
shlb
sbb
xchg
xchg
nop
in
inc
sub
and
push
dec
fldl
adc
rep
andl
test
adc
in
bound
inc
cmpsl
je
fucomi
test
inc
sbb
test
fucomp
xor
push
and
idivl
cmpl
out
js
pushf
jo
aas
inc
sbb
ljmp
jae
jp
jnp
repnz
cs
fs
inc
and
aam
movsb
xchg
dec
ret
push
fisubl
and
add
dec
mov
add
lcall
and
cmp
pop
cmpsl
adc
scas
sub
pop
or
or
fstl
lods
jecxz
insb
ja
daa
mov
movsl
xlat
mov
xchg
add
filds
push
or
xor
add
push
sub
xor
sbbb
mov
in
mov
and
inc
jecxz
cmp
mov
ds
mov
pop
sub
add
lcall
shr
aam
push
xchg
adc
rolb
aas
mov
pop
xor
testl
inc
dec
rcrl
add
lock
add
sub
xchg
jg
xchg
push
popf
lcall
fidivl
push
fimull
fs
xor
loopne
cwtl
sub
pop
pushfw
mov
pop
sub
les
push
in
mov
inc
cltd
or
leave
and
mov
jns
add
jnp
fmull
sbb
cmp
nop
and
stc
push
popl
inc
push
or
pop
xor
dec
mov
hlt
add
cmp
sub
mov
cmc
sti
lock
ds
in
nop
out
mov
into
test
xor
jne
call
cmp
pop
lods
pop
minps
adc
xor
jb
scas
jmp
sub
outsb
dec
add
mov
xchg
jnp
mov
addl
xchg
fsubs
jecxz
add
lock
jae
cmp
jns
dec
dec
dec
in
sbb
loopne
and
adc
subb
xchg
or
cmp
test
mov
xchg
mov
daa
dec
enter
push
insl
cmp
pop
add
mov
aaa
push
inc
ja
call
lahf
push
into
xchg
inc
int
or
je
and
mov
or
inc
dec
test
push
sahf
out
arpl
adc
js
cmpsl
std
test
dec
xchg
inc
push
cs
into
and
shlb
sbb
add
and
cmp
inc
push
bnd
jns
jp,pn
add
test
sbb
xchg
add
iret
xchg
pop
das
shlb
jge
mov
lret
movsb
lods
test
testb
sbb
lock
cs
cwtl
ret
movsb
fwait
push
std
leave
mov
jge
addr16
mov
fists
and
cld
mov
iret
jne
sbb
mov
fnsave
stc
pusha
adc
lret
fldt
pop
or
mov
cmp
xchg
push
push
or
and
add
repz
dec
insb
adc
scas
loope
sub
test
lds
popa
push
cli
push
mov
lods
adc
das
jae
ss
sub
and
das
mov
xchg
xor
pop
jl
scas
push
outsb
sbb
fsub
hlt
loopne
call
mov
xlat
aaa
mov
imul
dec
jbe
in
adc
dec
movsb
add
test
mov
xchg
cs
adc
adc
add
loop
mov
rcrb
cmp
mov
outsl
xchg
dec
add
xor
mov
daa
ret
pop
dec
sbb
sahf
mov
jne
xorl
mov
and
sbbl
inc
inc
or
movsb
cwtl
push
pop
mov
mov
in
dec
out
dec
add
sub
jo
lods
adc
xor
lock
loop
sbb
jg
add
ret
mov
sbb
or
mov
sarl
push
add
insb
dec
outsl
dec
or
sub
dec
ret
lea
gs
ret
jo
jp
sbb
mov
arpl
test
jns
out
mov
dec
in
mov
sarl
add
les
sbb
aaa
pop
mov
xlat
sbb
into
mov
xor
dec
sti
push
call
inc
pop
sbbl
ror
sahf
and
data16
xchg
cmp
or
mov
add
je
test
loop
push
xchg
xor
adc
dec
orl
pop
dec
cmp
xor
add
jb
outsb
mov
mov
jecxz
dec
add
test
ud1
movl
shl
jmp
jns
ljmp
jbe
dec
test
or
cmp
mov
sbb
ret
ret
cli
ret
ds
ds
push
repz
loop
clc
outsl
ss
ljmp
cli
mov
pop
mov
add
push
in
sarl
orl
pusha
push
mov
nop
orl
jg
sub
inc
fdiv
jns
aam
hlt
imul
in
mov
out
sbb
and
ffreep
popl
xchg
fcom
addb
jle
xor
ja
or
ret
mov
dec
std
mov
jg
fmuls
xor
pop
pop
sahf
add
push
dec
cld
mov
icebp
rorl
ljmp
lret
or
jge
addb
aaa
dec
das
adc
test
cmp
fldcw
icebp
mov
mov
pop
loop
push
cmc
divl
dec
das
sbb
dec
ficoml
push
test
xlat
push
push
sahf
fcomps
ret
test
sbb
cmpsb
out
fst
dec
scas
push
sub
pop
cmp
push
or
mov
add
inc
push
push
jno
test
rcl
pop
xor
mov
add
fsubrs
mov
sti
cmp
js
hlt
call
cs
test
push
roll
pusha
in
mov
negl
loopne
scas
movsl
push
dec
pop
out
mov
jg
pusha
push
fsts
incb
fisttpll
cmp
or
rcrb
pusha
push
lods
je
or
imul
xchg
mov
mov
movsl
push
icebp
test
push
shlb
ja
idivl
shlb
pop
std
lret
addr16
and
test
inc
mov
dec
xor
rol
inc
xor
jnp
sahf
mov
cwtl
aaa
cld
loop
or
pusha
jmp
aaa
mov
pop
test
add
inc
sarl
cmc
ret
mov
inc
aam
call
clc
outsl
inc
xchg
in
out
pop
ljmp
mov
lcall
push
mov
xchg
pop
adc
xchg
mov
add
jmp
xor
push
sub
js
adcb
nop
pop
addr16
dec
or
jb
fcoms
cmc
jo
xchg
lods
push
push
jo
push
les
lret
insb
gs
sbb
mov
jge
or
adc
jmp
xchg
xor
ror
loope
push
add
add
xchg
fiadds
ficomps
cmp
fildl
adc
sub
adc
popa
and
lcall
mov
outsb
add
jnp
push
stos
or
pop
cmp
fld1
sub
sbb
adc
inc
mov
mov
or
icebp
xor
shrb
cmp
jmp
orb
jmp
rolb
and
or
fldcw
push
pop
adc
xchg
pop
pop
jp
cltd
jo
and
push
jp
fistps
je
in
bound
and
xchg
inc
repz
cmp
and
fwait
add
push
mov
mov
dec
ret
xor
testb
pop
inc
or
lret
mov
ficoms
out
xchg
cmp
pop
push
adc
out
scas
sub
xchg
incl
mov
add
jno
xor
jbe
lea
mov
hlt
arpl
insl
add
fildl
mov
push
dec
les
insb
dec
inc
je
repnz
sub
sub
jnp
stos
push
insb
jecxz
rcl
xchg
pop
cmp
sbb
fs
and
xor
xor
sbb
xsaves
cld
ret
or
or
insl
popf
jb
call
sbb
pop
ret
push
outsl
shrb
add
outsl
popa
pop
jle
pop
pop
sbb
cltd
and
rcrb
les
stos
cmpsl
xchg
mov
jl
out
xor
push
repz
add
sbb
sbb
hlt
icebp
jg
pop
pop
xchg
daa
out
pop
sahf
mov
mov
push
or
mov
loopne
pop
dec
jnp
and
or
inc
shrb
int3
adc
or
or
inc
xor
inc
add
sbb
adc
sti
aaa
js
mov
rol
jne
repnz
mov
pop
out
iret
gs
notb
sub
mov
movsb
out
jae
aas
fdiv
push
jb
fldenv
in
adc
dec
dec
pop
push
insb
sub
in
add
xchg
js
xchg
out
das
mov
add
test
pushf
call
adc
sbb
cmpsb
shll
ret
add
dec
or
mov
nop
pushf
jmp
xchg
push
sbb
cmp
mov
sub
sub
jle
fsubr
add
bound
andl
lret
outsb
add
test
xorb
add
mov
repz
fcom
pusha
add
mov
test
pop
jg
inc
cmp
pop
or
xchg
mov
and
mov
or
mov
or
stos
addb
mov
inc
je
sub
fwait
cli
subb
jns
jmp
adc
repnz
cmp
into
clc
jo
cmp
jae
pushl
ret
sbb
pushf
xor
daa
mov
test
aaa
mov
jg
push
jmp
xor
lret
sbb
cmp
xlat
mov
hlt
adc
sub
add
cmc
sbb
sbb
jp
loopne
xchg
add
bound
push
mov
and
push
inc
ret
int
fcomip
add
gs
in
pop
mov
jno
cmpsl
ja
add
popl
add
fiaddl
adc
test
mov
sbb
sbb
test
add
xchg
das
adc
push
inc
hlt
cli
aaa
sbb
push
adc
mov
int
xor
mov
data16
xchg
dec
movsb
pop
into
add
inc
mov
sub
jo
xchg
dec
xchg
xlat
jo
mov
aas
repnz
push
sub
lcall
gs
add
add
jb
pop
rorl
shlb
mov
jne
aas
ljmp
push
test
push
stc
cli
call
jle
cld
popf
nop
inc
aas
les
icebp
pusha
dec
clc
icebp
or
sbb
pop
jo
xchg
pop
cmp
loopne
and
fndisi(8087
xor
push
cltd
lret
fildll
mov
dec
mov
fwait
in
inc
in
adc
subb
sbb
mov
ret
mov
pop
lret
sub
jle
or
iret
jl
in
popa
sub
jg
inc
aam
and
xchg
or
js
pop
pusha
fistpll
push
adc
cld
and
out
push
popa
dec
mov
shlb
mov
fdivrl
cltd
adc
les
sahf
and
xor
push
cmp
mov
into
sbb
cmp
mov
pop
movsl
bound
aaa
dec
adc
hlt
add
rcrl
outsb
loop
repnz
mov
adc
jo
mov
iret
pop
push
push
insl
add
add
mov
sti
imul
dec
add
dec
xchg
add
sbb
push
mov
push
push
std
sbb
es
test
ljmp
xlat
inc
pop
and
sub
divb
into
inc
mov
sub
push
mov
hlt
cmpb
loope
jb
or
loope
and
inc
adc
cmp
call
leave
mov
rcl
jne
syscall
cli
rol
adc
mov
pop
push
push
add
jbe
add
out
iret
and
sbb
add
jbe
dec
or
movsb
jg
mov
stos
sub
insl
sbb
sub
addb
jb
mov
adc
lods
in
insb
pop
test
jecxz
push
push
push
test
mov
dec
mov
fcompl
and
pusha
data16
fcomps
and
jle
add
mov
mov
mov
xlat
ljmp
push
cld
pop
in
in
xchg
mov
and
loop
les
fsubrs
add
cmp
incl
xor
loope
or
jb
mov
test
imul
xchg
xlat
ss
outsl
push
stos
mov
pop
nop
mov
lcall
add
or
inc
scas
loop
push
inc
fildll
loope
int3
mov
pop
movswl
adc
add
loope
pop
lock
pop
push
test
pop
adc
cwtl
movsb
xchg
cmp
or
adc
add
outsb
xchg
test
in
dec
scas
mov
imulb
adc
inc
mov
add
jno
or
test
dec
jmp
or
adc
pop
clc
les
jne
hlt
dec
jnp
add
inc
add
add
pop
mov
pop
ret
mov
into
and
inc
sub
outsb
cld
jmp
mov
scas
std
je
push
jbe
pushf
dec
std
xorb
xchg
mov
lea
addr16
ror
jecxz
ja
dec
xchg
lock
jnp
mov
cwtl
and
xchg
lret
dec
xchg
mov
outsb
nop
ja
scas
mov
cli
push
xorl
push
test
mov
sub
pop
mov
popa
push
in
add
mov
enter
inc
or
xchg
bound
mov
mov
xor
std
mov
mov
inc
aaa
not
movsl
xchg
adc
push
pop
je
insl
jl
add
or
pop
dec
out
outsl
ret
mov
dec
mov
xchg
addl
xchg
xchg
add
mov
test
les
inc
popa
add
cmp
mov
jg
mov
aam
lret
push
ret
loop
cmp
ds
lock
les
inc
cmpsl
pop
les
jg
xor
jmp
cmpsl
shlb
xchg
add
adc
add
xor
add
or
xchg
fnstsw
out
jbe
xorb
in
ss
sub
sbbb
inc
push
sbb
sbb
add
cs
mov
lods
and
xor
jle
divb
idiv
or
mov
jne
mov
cmp
push
add
sarb
mov
push
sub
mov
loopne
loopne
lea
dec
inc
jo
mov
sbbb
cmp
enter
and
add
jle
xchg
push
xor
jns
jg
push
dec
mov
xchg
rolb
mov
sbb
cld
jp
cmc
or
es
fcomps
push
xor
out
xorl
out
or
ret
insb
outsb
test
push
xor
ljmp
dec
dec
inc
out
mov
add
ret
lcall
ja
mov
xchg
and
or
jnp
ja
nop
dec
or
xchg
xchg
gs
xchg
stos
std
xlat
addr16
inc
out
pushf
push
fidivrs
cmp
mov
daa
sbb
dec
fildl
pop
jmp
call
in
subb
jle
dec
jle
mov
adcb
add
add
fnstenv
or
push
mov
ret
and
ud2
dec
inc
mov
jp
rol
push
xor
shll
pop
shufps
jb
and
mov
test
mov
out
inc
or
jae
sub
and
nop
decb
test
mov
jecxz
into
mov
call
ds
clc
cwtl
sbb
iret
mov
cmp
dec
jo
pushf
add
lds
dec
aam
cmc
pop
xor
mov
pop
push
enter
subb
cli
aaa
mov
inc
lahf
push
mov
mov
imul
pop
hlt
pop
adc
sub
pop
and
xchg
popa
dec
stos
ret
cmp
js
ljmp
mov
xor
inc
mov
lcall
sbb
and
inc
sub
or
sbb
xchg
add
subl
int
cmp
dec
and
ret
pop
pop
incb
cmp
jns
mov
clc
xorb
mov
jne
repnz
stos
js
xlat
shrb
xor
sti
sbb
scas
push
sbb
pop
pushf
lds
cmpsl
pop
ret
je
lods
or
fs
sbb
add
shlb
mov
aad
clc
adc
fs
jl
pop
lcall
popa
iret
push
jmp
stos
and
mov
xor
jecxz
test
add
mov
nop
mov
pop
xchg
push
lods
xchg
push
xchg
sbb
ds
rcl
adc
jge
lahf
pop
mov
es
jno
loope
adc
sahf
or
mov
xor
mov
pop
mov
xorb
push
ret
push
cmp
jno
add
sarl
outsl
or
shll
sub
mov
add
in
jbe
sbb
sbb
push
addl
mov
div
shlb
jmp
outsl
lcall
pop
lods
inc
aaa
imul
and
mov
movsb
mov
xor
mov
adc
sub
adcb
jl
sub
jne
hlt
dec
pushf
pop
mov
test
cmp
loop
inc
ficoml
addl
cli
loop
xor
sahf
and
push
sbb
sbb
inc
roll
sbb
test
jge
int3
lock
test
out
add
rcll
jnp
cmpsl
xor
and
pusha
or
mov
push
jg
mov
or
xor
inc
sub
adc
xchg
repnz
xor
mov
xor
or
fs
xchg
fisttpl
jmp
aas
pushl
lcall
xor
and
loope
sti
jl,pn
mov
shlb
ljmp
insl
jnp
jmp
aas
pop
add
in
ret
sub
push
movsl
out
cmp
das
cwtl
adc
inc
adc
xchg
mov
sbb
sub
ljmp
mov
jmp
sbb
and
inc
test
pop
pop
mov
ljmp
mov
push
bound
stos
aam
jecxz
sbbb
or
cmp
int3
fwait
lcall
repz
das
pop
mov
or
adc
out
xchg
jmp
out
jp
fisubs
add
pop
cmc
pusha
mov
add
ficoml
test
add
aas
jle
jmp
mov
xchg
pop
inc
test
or
jno
cmpsl
jmp
fisttpll
jmp
or
movsb
pop
popa
jne
inc
orb
and
xor
cmp
xor
or
inc
push
cmc
test
jge
dec
push
jp
mov
sub
cmp
faddl
pop
cmp
push
aam
cld
stc
sbb
insb
int3
cmp
cmpsl
push
sub
pusha
ds
inc
aaa
lods
popf
xchg
pop
fiadds
cmpsb
and
mov
xchg
jle
test
jmp
and
mov
ret
sbb
outsl
xor
adc
or
mov
les
and
adc
xchg
fisttpll
jno
js
xchg
jno
and
or
movsb
loope
ret
xor
js
imul
push
jo
movsb
fiadds
mov
je
inc
out
sbb
inc
insl
outsb
jae
xor
add
mov
aad
faddl
add
ja
dec
sahf
orl
andb
adc
movsb
nop
jne
test
sub
outsb
adc
in
jo
enter
push
dec
xor
cmp
push
in
hlt
leave
je
jmp
ljmp
cmp
cmc
pop
add
data16
jb
fisubrl
ficoml
into
mov
or
lret
mov
cmpl
nop
dec
cld
push
movsl
add
and
dec
call
mov
cmp
dec
mov
stos
loopne
outsb
inc
sbb
push
std
jle
dec
adc
mov
rorb
decl
mov
cmpsb
hlt
adc
lcall
cli
loop
xchg
mov
and
cmp
vmwrite
inc
add
sub
push
pop
cmp
xchg
inc
jg
xchg
nop
cmp
or
lods
add
mov
mov
sub
lcall
push
pop
in
xor
rorl
nop
mov
rclb
insb
cmp
mov
pop
jmp
push
push
in
in
mov
jbe
fsubs
xchg
mov
bndldx
add
jmp
mov
mov
cwtl
lods
add
daa
outsl
dec
mov
xlat
rcrb
add
xlat
fiaddl
stos
ret
lret
inc
adc
xor
fcompl
js
outsl
jno
les
or
inc
jo
nop
fs
adc
dec
lods
pusha
adc
inc
push
adc
ret
aam
xchg
ja
cld
mov
jle
xor
jmp
lsl
mov
andl
inc
dec
and
aam
xchg
adc
mov
mov
in
sbb
fimull
pop
xlat
and
push
es
fcomps
pop
out
jbe
ficompl
js
push
aaa
jecxz
cld
cmp
xchg
xchg
jns
jmp
lods
fbld
jle,pn
or
mov
stos
mov
pusha
shrb
inc
ljmp
pop
add
lea
fwait
aad
fidivl
sub
mov
clc
add
fimull
and
sbb
test
cltd
ficompl
lock
clc
sahf
pop
mov
dec
jo
push
insl
cmc
notl
andb
out
mov
and
or
dec
dec
pop
push
xor
inc
lods
jbe
jmp
and
fimuls
gs
mov
cli
xchg
and
call
lods
add
and
push
fsub
push
leave
push
dec
add
lret
test
adc
sub
and
dec
loopne
mov
insb
ret
dec
mov
and
mov
shrb
cmp
pop
add
cmp
jbe
dec
ljmp
push
call
add
pop
push
jl
mov
mov
mov
inc
sbb
cltd
push
outsb
call
xorb
cmp
in
and
add
dec
sbb
fists
fstpt
mov
fs
loope
add
dec
add
xchg
xor
xchg
xchg
cmc
jecxz
ja
push
adc
sahf
rcll
cmp
jle
pop
pusha
cs
cltd
sti
iret
mov
adc
or
and
pop
jp
mov
movsl
mov
sahf
mov
inc
cwtl
repnz
push
rcll
jmp
add
push
mov
fildll
pop
mov
jno
aam
ljmp
scas
mov
push
adc
bound
cmp
movsl
xor
fs
mov
xor
sbb
pushf
and
insl
jb
add
mov
addb
cld
ret
fistpl
xlat
push
ja
xchg
push
inc
les
xchg
bound
cmp
fdivl
mov
mov
adc
data16
fstps
cld
or
and
push
sbb
adc
sarl
enter
xchg
push
add
adc
inc
adc
addb
inc
mov
add
mov
rol
jno
decl
repnz
lods
cmpsb
xchg
jmp
stc
outsl
sub
mov
aas
sbb
out
fs
pop
pusha
xor
dec
pushf
ds
sub
pop
pop
mov
fildl
stos
adc
es
and
aaa
das
pop
icebp
mov
mov
mov
nop
unpckhps
jecxz
pop
out
fistpll
push
and
inc
cld
loop
push
mov
inc
in
jp
sub
shrl
pop
or
xor
or
lock
push
inc
push
sbb
loope
stos
sub
sar
dec
pop
in
jecxz
xorl
and
and
in
sbb
xor
mov
push
jb
andb
add
pop
loope
inc
rolb
insl
icebp
jmp
adc
sub
add
add
mov
addl
or
ss
cli
bound
mov
mov
lcall
std
xchg
jle
and
lods
pop
adc
pop
mov
sahf
mov
adc
test
mov
nop
inc
push
sarl
sahf
mov
test
or
sub
ljmp
and
xchg
dec
add
sub
jmp
arpl
aaa
mov
jl
sahf
push
pop
les
mov
jmp
or
adc
nop
sti
test
sub
lods
push
hlt
push
or
sbb
and
xor
xor
scas
jle
or
mov
je
cmp
jno
lock
cli
inc
cmp
jno
scas
adc
or
test
test
cmp
xlat
xorl
fdiv
lock
addb
push
push
push
scas
rcr
xor
xor
loopne
jnp
es
push
sub
add
loope
cs
aas
push
loopne
mov
mov
subb
adc
je
cmp
in
sub
add
fwait
outsl
cli
push
or
inc
outsb
pop
add
inc
cli
and
pop
and
jecxz
les
je
jb
sub
iret
xchg
or
add
test
fs
adc
add
push
rol
inc
mov
mov
add
repnz
xor
dec
or
mov
push
arpl
cmp
fsubrs
call
mov
adc
mov
jmp
rclb
sbb
loope
xor
push
rol
outsl
push
add
cmpsb
stos
lock
loopne
push
into
push
rcrl
cmp
lcall
int
lahf
cmp
pop
jb
repz
jecxz
insb
add
and
xchg
jmp
adc
dec
sub
insb
xchg
fsubl
or
pop
jbe
push
das
xchg
mov
stos
hlt
push
daa
lea
add
and
or
mov
in
add
ljmp
adc
mov
cmp
add
fsub
mov
xchg
test
add
sbb
int3
enter
scas
xchg
dec
mov
hlt
mov
cmp
js
shll
or
xchg
sbb
inc
xlat
arpl
push
mov
cmp
sub
test
mov
movsb
mov
mov
loope
cwtl
lcall
pop
xlat
pop
aam
dec
pop
shlb
or
fbstp
jo
or
sbb
lcall
cli
dec
jg
and
hlt
addr16
arpl
popf
fistpl
cmpsb
jmp
jne
cmp
sbbb
pop
aad
sbb
bnd
add
sub
cli
les
xchg
dec
ret
repz
lcall
mov
lret
xor
xor
sbb
pop
adc
pop
or
xor
mov
push
repnz
push
add
dec
push
lahf
dec
dec
fdivr
movsb
popa
xchg
std
loopne
add
xor
mov
sub
aam
shlb
mov
outsl
das
or
inc
daa
fstpl
push
ret
pop
jbe
mov
cmpb
cli
fldenv
popf
xchg
outsb
cmp
hlt
aam
call
lcall
out
loopne
pusha
add
push
xchg
lods
cli
mov
lret
sub
addl
adc
mov
xchg
ficomps
cli
jp
jbe
mov
ljmp
cmpsl
adc
arpl
cmc
xor
lcall
sarb
cs
int
cltd
xchg
fbld
push
mov
inc
je
sbb
jbe
int
pop
cmpb
mov
xor
clc
adc
repnz
es
add
push
xchg
mov
data16
mov
xchg
aad
lcall
and
add
xor
push
sub
mov
jb,pt
aad
mov
dec
shlb
lret
scas
ret
movl
ret
bndldx
push
shrb
notb
sbb
fisttpll
push
cmp
stc
sbb
push
scas
sbb
icebp
out
jge
orb
inc
mov
aaa
test
inc
je
mov
adc
outsl
pop
lcall
js
sub
test
mov
jl,pt
lcall
movsl
ficoml
jno
int3
test
push
sub
jle
pushf
enter
mov
mov
loope
jecxz
mov
testb
xor
adc
xlat
mov
cmp
dec
mov
fisubrl
xor
push
ror
mov
or
push
cmp
ret
pushf
fstpt
inc
sub
add
mov
or
in
jle
fsubrs
cld
repz
stc
out
into
sahf
call
adcb
rcrl
rol
xchg
xor
sbb
push
pop
jp
sbb
inc
adc
jecxz
jno
and
vmread
loop
cmp
push
and
repz
out
inc
inc
inc
movsb
sahf
incl
jg
pop
pop
fs
xchg
ljmp
loopne
in
inc
hlt
lock
or
or
push
out
xchg
adc
jmp
adc
insb
jge
mov
cs
mov
clc
mov
popl
dec
sbb
test
idiv
stos
and
add
jecxz
cltd
push
fildl
lret
ret
push
test
jb
adc
decl
cmp
dec
or
cld
loop
popl
pop
dec
add
or
icebp
push
sbb
in
loop
lock
stc
rorb
cmp
jecxz
sub
sbb
mov
xchg
out
push
push
jns
push
add
aas
dec
lea
and
rclb
mov
jae
cmp
cli
or
mov
ret
adc
das
pop
jle
add
jp
add
and
xor
jae
pop
lahf
mov
mov
loop
xchg
jnp
and
mov
mov
sub
or
inc
or
xchg
dec
add
push
mov
and
push
aad
and
adc
lahf
aam
adcb
sub
or
and
pop
cmc
and
jmp
rolb
push
jns
adc
test
pop
scas
and
push
push
fcoml
call
lods
cli
xchg
or
mov
xor
mov
dec
dec
pop
fsubp
pop
fcoml
pushf
sbb
imul
hlt
mov
outsw
fisubs
mov
movsl
cmp
popa
insb
in
ja
cmp
sub
mov
out
bound
sar
push
je
cmp
push
jg
negl
or
and
xchg
mov
dec
sarb
sarb
je
adc
paddb
in
adc
inc
adc
scas
jle
add
and
pop
mov
sbb
sbb
xor
mov
or
push
push
fsubr
rorl
fdivs
sub
in
lcall
mov
iret
sub
pusha
push
jbe
roll
pop
adc
sbbl
mov
cmp
clc
adc
clc
mov
or
scas
push
cmp
mov
xor
inc
dec
scas
gs
push
lahf
aaa
cmp
les
mov
xchg
js
add
add
pop
call
testb
jne
jle
mov
ret
mov
ret
cli
cmp
es
cs
push
insb
jmp
lcall
sti
add
cmpsl
inc
jp
mov
inc
pop
inc
outsb
clc
cmp
ja
pop
bound
dec
mov
xchg
sbb
mov
push
adc
add
sbb
cmp
cmp
mov
shrl
sbb
jo
mov
fcmovnbe
daa
test
mov
add
or
loopne
pushf
adc
dec
jmp
ljmpw
cld
or
inc
clc
and
mov
std
or
in
sar
call
es
lea
fcomip
adc
xchg
rol
mov
dec
std
repz
data16
add
push
xchg
aas
mov
aas
movsb
mov
es
mov
rcll
and
jno
shrb
je
cmpsb
std
sti
dec
stc
mov
mov
dec
std
es
add
rcrl
orb
push
push
push
mov
filds
xchg
and
and
cmp
inc
sub
jmp
clc
or
out
fidivs
xor
push
fmulp
sbb
push
push
roll
lock
inc
inc
add
je
xor
out
adc
inc
clc
out
loop
or
loope
adc
cmp
ljmp
push
jno
xchg
sub
mov
cmpb
jo
or
movsb
scas
data16
cltd
jmp
mov
addr16
repz
xchg
lahf
notb
jae
pop
in
out
adc
jecxz
pop
shll
lock
adc
xchg
mov
or
ljmpw
pop
add
jno
sbb
roll
or
or
jl
mov
pushf
adc
cwtl
xor
xlat
in
inc
pop
jo
sti
test
mov
xor
jge
mov
lea
clc
call
add
cwtl
jno
sbb
push
push
shl
into
mov
stos
sti
pop
pop
jg
in
push
xor
out
ljmp
adc
sub
pop
loopne
inc
filds
test
adc
jo
mov
jmp
lods
or
inc
test
das
sbb
fwait
lods
xor
ja
sti
out
add
push
mov
repz
pop
popf
jl
push
setae
pop
pop
outsb
pop
jo
jge
jb
mov
cld
cwtl
inc
fbstp
xchg
pop
push
jmp
xor
sbb
dec
lods
stc
adc
out
mov
sbb
and
cmp
mov
cwtl
pop
pop
cld
xlat
or
push
push
orb
aam
mov
nop
pop
rcll
cs
push
dec
dec
xor
scas
push
scas
inc
movl
mov
adc
inc
shl
pop
push
dec
pop
xor
xor
and
insl
jge
in
fidivs
xchg
dec
call
mov
or
shlb
sbb
xchg
push
shlb
jg
mov
cmp
stc
pop
mov
inc
mov
in
xchg
pop
test
sarl
into
sbb
cmpsb
ds
in
adc
or
mov
add
lret
xor
fbld
sbb
xor
jne
mov
mov
sub
bound
and
inc
jg
push
mov
cmpsl
and
mov
or
xor
mov
aad
ret
pop
ret
movsb
and
inc
mov
dec
add
cmp
adc
pop
loope
mov
push
cld
pop
mov
lods
push
xor
bound
xor
add
sbb
fwait
or
mov
xchg
push
pop
fidivl
xor
pop
jg
call
xor
mov
pop
lods
and
call
stc
sahf
adc
dec
clc
add
cwtl
fs
pop
jb
pushf
mov
fadds
outsl
rolb
idiv
loop
inc
inc
inc
mov
xchg
cmp
xor
add
push
lds
in
pop
pop
push
adc
pop
out
inc
jp
clc
ja
mov
xchg
push
je
lahf
mov
adc
dec
ljmp
push
rolb
cltd
sbb
lds
push
or
or
or
pop
pop
test
cwtl
adc
inc
xor
push
sbb
sbb
mov
inc
repz
adc
mov
dec
sub
out
data16
icebp
or
daa
xchg
out
mov
mov
stos
xor
loope
jge
or
aad
cmc
lods
mov
pop
das
pop
daa
push
push
push
loopne
xchg
cmp
lods
mov
sub
xor
and
xchg
cmp
push
icebp
inc
repnz
push
fistl
xor
cmpsb
add
insl
mov
dec
and
hlt
sarl
cli
ljmp
aad
push
jmp
and
movsl
mov
adc
jp
cs
adc
loop
lret
ds
into
push
aas
mov
data16
ja
sbb
sarl
dec
adc
add
std
outsl
inc
and
loope
lret
cmp
add
les
shll
lret
pop
sbbb
lcall
push
add
dec
xor
insb
dec
mov
inc
loope
inc
imul
push
subb
pop
inc
jb
pop
les
xchg
cld
scas
ja
testb
loope
push
orb
mov
popf
repnz
enter
scas
ja
into
dec
aad
addr16
cli
sub
out
and
adc
mov
shlb
loop
in
cwtl
sarl
xchg
xchg
jo
pop
insl
outsb
push
adc
fsubr
or
pushl
xchg
push
popa
movsl
cmpsl
cmp
sbb
add
jo
adc
ret
sbb
xchg
mov
xchg
jns
jl
movsb
mov
je
js
xchg
mov
cs
xchg
cs
bound
mov
sbb
ret
cltd
xchg
lock
xor
push
fstps
arpl
cs
popf
or
mov
fisttpll
into
cmp
and
sub
es
mov
dec
mov
daa
or
push
mov
inc
cmpsl
sub
sub
xlat
cmpsb
sbb
inc
cmp
mov
dec
adc
mov
shl
push
jl
in
add
mov
pop
sbb
xchg
mov
ret
hlt
sbb
iret
ss
popf
sarl
sbb
pop
lock
fildll
icebp
xchg
cmp
jmp
jo
push
daa
pop
push
inc
add
xchg
jae
cmp
jmp
adc
lcall
cmp
xchg
push
pushf
pusha
lock
push
sub
iret
mov
push
out
js
mov
imul
cs
lahf
mulb
adc
std
lret
xchg
or
inc
add
or
jg
in
jg
insb
leave
cmp
ss
in
mov
dec
clc
ret
test
pop
mov
roll
test
lahf
sub
sbbb
cwtl
mov
addb
in
or
push
loope
leave
mov
mov
lahf
shll
jne
inc
and
adc
sub
pop
and
in
mov
push
subl
jmp
icebp
or
pcmpgtb
aas
jae
xor
adc
test
mov
les
call
into
mov
xor
out
lea
repz
fsubs
stc
or
test
sarl
movsl
sub
out
xchg
or
mov
push
mov
and
or
in
pop
int
or
movsb
mov
mov
mov
aaa
fdivr
rcr
pop
addb
add
mov
aaa
pop
ljmp
push
push
mov
nop
push
xor
cmc
fimull
bsf
mov
js
add
mov
sbb
xor
xchg
pop
mov
ret
pop
decl
push
mov
sbb
pop
pop
sbbl
mov
lds
outsb
cmpsb
inc
xor
sbb
mov
clc
sti
or
mov
push
jmp
push
jge
pusha
aam
push
push
dec
rcl
mov
fcom
test
lret
outsl
lds
add
rorl
adc
jmp
shll
jno
jb
push
adc
pop
loope
out
adc
lcall
or
jmp
lock
pop
cmc
sub
push
jnp
cmp
push
loopne
mov
sub
and
outsb
dec
add
or
or
lret
pop
insb
add
pop
imul
cmp
outsb
xchg
mov
stos
push
pop
jmp
mov
dec
push
in
int3
push
xchg
out
mov
addr16
adc
in
mov
and
ds
call
adc
pop
cld
push
adc
xchg
xchg
ds
stc
clc
dec
test
insb
push
jecxz
jle
cld
and
adc
xor
inc
rorl
ljmp
mov
add
mov
test
rolb
sbb
mov
out
sbb
out
and
or
loope
mov
nop
lret
aad
shlb
sahf
das
xor
mov
adc
fdivl
es
cli
test
mov
jmp
mov
inc
mov
lret
cld
cmpb
inc
mov
ret
jns
sub
push
clc
nop
sub
aam
adc
daa
jp,pt
int3
push
mov
out
adcb
xchg
out
sbb
sbb
in
sub
jbe
lock
pusha
pop
sbb
andl
in
pshufw
aam
inc
mov
subb
adcb
or
mov
add
loopne
fs
cwtl
xor
aad
lcall
lock
data16
sbb
insl
adc
mov
inc
scas
pop
nop
cli
adc
les
push
inc
pop
bound
sub
int3
mov
lret
in
std
sub
pop
lods
mov
pop
fildll
ds
call
add
xchg
pop
adc
fistpll
jecxz
dec
lds
jmp
adc
pusha
pusha
movsb
or
filds
iret
add
iret
cmp
jmp
sbb
xchg
sbb
rorw
mov
jg
lret
clc
dec
inc
dec
or
adc
xchg
cli
push
or
sbb
push
lret
sbb
lcall
ja
jle
add
adc
push
rorl
jp
jo
push
xor
fwait
jmp
call
lea
int
pop
pop
sbb
out
lcall
add
inc
mov
ds
jae
cmp
pop
shrb
subb
rolb
mov
inc
in
sbb
jge
lods
test
or
sub
or
adc
shrl
dec
ret
dec
pop
jbe
hlt
inc
add
mov
lcall
mov
icebp
lret
push
pop
lahf
mov
imull
sbbl
test
lret
hlt
mov
sbb
leave
mov
incl
outsb
pop
mov
adc
test
mov
cli
inc
pop
pop
pop
jl
in
cmpsl
mov
push
sahf
shl
pop
call
pop
jbe
cld
mov
incl
jnp
add
ret
or
push
loop
or
xchg
push
dec
std
sbb
idiv
and
pop
ret
and
adc
push
notl
outsl
jb
dec
or
lcall
push
sbb
repnz
cmp
imul
and
mov
addr16
lret
mov
dec
dec
jp
mov
sbb
cld
push
mov
sbb
sbb
sbb
push
sub
cmp
or
cs
jmp
ja
addr16
jne
pop
movsb
jo
mov
ds
mov
add
push
pop
mov
mov
fldl
addr16
addl
jmp
je
aad
sbb
push
push
repz
pop
push
cmpl
push
adc
fstps
push
push
dec
mov
rcr
mov
mov
inc
insl
sbb
loopne
scas
imull
dec
push
sub
sbb
pop
shrl
jge
xchg
movl
mov
or
inc
in
add
ds
jo
cmp
in
xchg
out
fstpt
popf
stos
es
dec
shld
pushf
in
imul
sahf
jo
pop
jecxz
add
mov
andb
add
xchg
lock
dec
das
cmc
mov
or
inc
dec
inc
adc
inc
ficompl
dec
pop
mov
sub
andb
or
adc
rorb
fsubs
inc
test
push
pop
stos
test
out
jo
xor
inc
jg
adc
and
fisubrl
dec
insl
rclb
ljmp
add
adc
pop
xchg
xchg
icebp
cmp
je,pt
push
arpl
arpl
pop
cmpsl
fadd
xchg
popf
shr
pusha
mov
mov
sbb
roll
add
push
scas
pop
xor
shll
push
mov
mov
sbb
add
pop
push
mov
pop
movsl
pop
test
scas
xorl
pop
jb
add
loope
inc
loopne
fcoml
mov
scas
fildll
in
mov
mov
pop
push
call
sbb
sbb
pop
push
dec
ljmp
lahf
mov
lods
rorb
stos
cmc
movsb
addr16
scas
adc
pop
nop
cmpsb
imul
ret
test
lcall
push
pop
push
pop
inc
cmp
dec
and
pop
push
jmp
subl
cmp
jne
jge
push
push
pop
sub
pop
add
mov
fmul
jl
rolb
shll
std
push
xchg
inc
adc
push
fbstp
mov
popf
out
cs
fwait
subb
ds
call
stos
push
sbb
push
push
ret
fwait
rol
pop
sbb
sbb
mov
add
xchg
and
cmp
xchg
in
das
dec
sti
test
add
cmc
dec
ljmp
popa
mov
jb
in
adc
and
pusha
add
push
dec
xor
lahf
mov
mov
imul
femms
mov
push
sub
adc
dec
sub
push
adc
fcomp
jmp
out
addb
xchg
and
cmp
jno
pop
mov
rcr
or
adc
jp
cmp
jns
in
sbb
rorl
jge
push
mov
adc
lea
add
jno
ret
mov
mov
das
or
test
sbb
push
loopne
mov
xor
loop
sbb
sub
cwtl
mov
jno
mov
insb
shl
or
nop
es
int
or
and
pop
outsl
js
scas
xchg
out
repnz
jae
adc
cmp
sbbl
xor
hlt
push
fnstcw
pusha
add
aad
dec
inc
fisubl
cld
adc
xchg
hlt
jmp
imul
jecxz
in
push
dec
jmp
les
dec
pusha
sti
movsb
shll
scas
dec
aad
inc
add
aam
daa
js
stos
sbb
sub
mov
pop
lahf
cmp
push
je
cld
mov
or
sub
hlt
mov
xor
outsb
rolb
cmpl
test
aaa
loopne
xor
jno
decl
int
sub
jb
mov
mov
sahf
or
inc
or
lahf
mov
mov
or
pop
adc
push
jns
aam
adc
dec
push
inc
les
push
popf
aaa
fwait
xchg
add
cs
pop
cltd
incb
jmp
jo
cmp
jle
in
mov
jb
fiadds
add
out
test
push
and
xchg
out
into
mov
in
call
jecxz
or
out
pop
cmp
rcrb
sbb
cmp
adc
arpl
pop
cmp
xor
push
xorl
pop
xchg
ret
stos
fwait
xchg
dec
add
rolb
sub
in
imul
xchg
lret
push
loope
jmp
push
movsl
mov
add
dec
and
repnz
shl
pusha
add
push
cmpsl
mov
pop
test
sub
pop
movsb
mov
out
repnz
arpl
pop
orl
xlat
out
in
sahf
or
adc
pop
ljmp
scas
push
mov
xor
add
scas
jge
lret
mov
xchg
push
pop
daa
sbb
cmp
cwtl
and
sbb
hlt
cmp
cli
scas
aaa
repnz
inc
not
mov
cmp
and
cmp
lods
loopne
mov
jle
xorl
cmp
add
arpl
jns
lds
or
push
mov
xor
inc
jne
shl
std
subb
sub
test
leave
adc
xchg
xadd
out
sbbb
mov
jbe
maxps
lahf
xchg
rcrb
cmp
push
push
and
inc
jb
and
pop
mov
lahf
popf
sbb
pop
pop
mov
dec
loopne
push
and
in
xchg
push
mov
cmp
and
mov
cmp
push
repnz
jo
sbb
xor
mov
xchg
jl
out
jp
dec
pop
mov
rcrb
adc
bound
test
bound
jo
movsl
fisubrl
in
jecxz
push
push
outsb
and
pop
push
popa
mov
lods
mov
rorl
push
test
aam
cvtps2pi
mov
cmp
std
sub
rol
imul
push
mov
icebp
cmp
test
xchg
jb
mov
push
test
jmp
push
fildl
cmc
pusha
scas
jns
jg
ljmp
inc
sbb
push
data16
adc
pop
mov
inc
adc
lahf
mov
add
test
movsb
push
imul
inc
aas
and
cwtl
fnstcw
mov
imul
fldt
and
xor
inc
cmp
test
cmp
bound
pop
test
fcmovne
es
add
and
sti
mov
dec
mov
mov
pop
or
fistpll
scas
cmp
sub
pcmpeqb
jo
cmp
gs
jge
xchg
mov
fcompl
jo
cmp
jmp
int
jmp
dec
mov
sbb
cmp
sbb
arpl
mov
add
ja
lods
fsubl
in
shrb
xor
xchg
cmp
loop
mov
es
jo
scas
test
fiadds
popa
dec
cmc
mov
sub
or
out
mov
xlat
pop
or
or
mov
and
or
jmp
adcb
iret
icebp
cmp
cld
push
push
pop
stos
and
insb
or
sub
push
inc
pop
mov
mov
popl
divl
inc
idiv
jp,pt
stos
arpl
test
int3
imull
icebp
daa
mov
push
mov
add
mov
pop
xor
jl
popf
fisubrl
and
flds
mov
faddl
push
push
test
pop
stos
xor
into
in
aam
or
ret
inc
jo
push
psraw
jl
imul
xor
push
add
jo
cltd
in
cmp
xor
cwtl
xor
rolb
inc
xor
xor
les
and
inc
jg
or
inc
ret
inc
test
jno
adc
jmp
inc
mov
sub
mov
scas
mov
inc
sahf
call
pusha
mov
pop
sbb
sub
push
ss
inc
sub
aaa
cmp
ret
cmp
fmull
clc
mov
clc
mov
mov
rcrb
fcompl
jb
or
scas
xchg
dec
fnstsw
aaa
and
mov
dec
pop
jp
xchg
xchg
mov
movsb
pop
and
imul
mov
mov
or
scas
xor
or
scas
fimull
dec
fadd
insb
inc
aaa
or
cltd
mov
stos
push
shlb
leave
cwtl
cld
fisttps
test
jmp
or
add
cmp
ja
sub
mov
fdivl
dec
andb
ss
pop
jb
xlat
mov
cli
mov
xchg
shl
sub
or
scas
rolb
lret
pop
adc
inc
push
cmp
inc
lret
or
jmp
xchg
push
mov
ja
pop
shr
faddp
dec
aad
pop
lret
jne
fcoml
fidivs
xchg
jmp
inc
sbbb
hlt
or
into
fiaddl
mov
cmp
cmp
or
and
out
sbb
aam
lret
fbstp
jae
xor
push
inc
cmp
scas
push
mov
int3
sbb
cmpsb
push
pop
cli
jbe
shlb
adc
sbb
and
jbe
mov
mov
or
ret
xlat
aas
out
ds
xchg
cmc
or
cmp
das
arpl
and
aaa
jnp
fisttpl
sbb
movsl
aam
addb
lcall
lock
test
rorl
dec
nop
add
jmp
ss
int
push
xlat
mov
dec
data16
shll
add
je
lock
sbb
mov
fiadds
push
lahf
cli
sbbl
push
sub
inc
js
arpl
outsl
adc
pop
int3
sbb
add
adc
mov
ljmp
inc
mov
cld
mov
inc
es
ja
pushl
loope
or
lcall
sti
add
lock
jb
bound
int
pop
xor
add
cltd
jo
sub
jp,pn
pop
xchg
xor
push
shrb
int3
pop
and
stos
or
dec
jl
push
pop
in
cli
ljmp
cli
pop
xor
mov
or
xchg
fidivrl
lock
push
add
jg
inc
dec
jnp
popl
popa
pop
jg,pt
mov
xor
push
ljmp
leave
cmp
daa
pop
adc
add
fidivl
push
sub
cmpb
push
pop
pusha
cmp
fdivl
jne
cmc
movb
mov
jno
dec
cmp
call
and
sbb
jmp
mov
add
push
push
jnp
call
mov
mov
sbb
mov
aad
mov
fimull
push
out
arpl
shll
outsb
push
pushf
xorl
shlb
mov
xchg
js
mov
repz
jo
or
test
clc
inc
pop
aaa
xchg
adcb
in
add
dec
clc
ss
add
mov
dec
loopne
or
xorb
int
cli
inc
or
jb
push
in
jo
lcall
sub
cmp
sti
fsubl
mov
push
aaa
sbb
dec
fmuls
push
cmp
add
dec
stos
jo
inc
cmp
popa
lret
es
cmp
jecxz
inc
sbb
movsb
inc
cmp
push
loop
clc
add
push
rcrl
mov
or
adc
rorl
int
jo
xchg
sbb
sbb
fs
or
or
mov
shl
pop
add
pop
es
jbe
jbe
jno
xor
sub
cmpsb
jg
add
push
lcall
fisubs
mov
xor
inc
adc
mov
mov
mov
pusha
scas
push
add
mov
enter
bound
sbb
push
mov
jle
pop
dec
ret
xchg
dec
shrb
in
push
call
cwtl
xchg
inc
xor
pop
inc
mov
mov
pop
int
sub
cli
ljmp
sahf
test
mov
xor
mulb
and
mov
xor
and
in
ljmp
cli
mov
cmp
mov
sti
pushf
clc
sub
xor
xor
mov
shll
jge
and
mov
xchg
pop
or
dec
push
stos
or
loop
psllq
scas
mov
shll
cwtl
mov
add
inc
and
gs
add
push
inc
roll
lock
jmp
mov
or
adc
iret
out
stc
sub
or
sub
cltd
push
ret
xchg
fcmovnu
sbb
movsl
push
mov
xchg
test
jmp
add
push
and
mov
mov
sub
ljmp
jno
fs
sbb
jmp
add
pop
adc
mov
sub
fmul
sub
fadds
jo
lret
sub
adc
das
daa
cmp
mov
pop
xor
dec
cmp
dec
je
loop
mov
movsb
adc
addl
insl
mov
and
xor
adc
mov
dec
push
sub
frstor
sub
cwtl
cmpsb
add
inc
mov
push
cli
loope
add
jp
sub
aaa
sbb
ds
mov
dec
cmc
out
xchg
les
addb
add
out
sbb
ljmp
lret
add
cmovs
out
jl
add
ja
or
int3
enter
jg
shrb
jo
mov
iret
mov
sbb
stos
mov
enter
jle
mov
cmp
lods
daa
imul
xchg
cmp
cli
test
cmp
addb
lods
add
add
outsb
push
and
data16
add
in
shrb
dec
adc
hlt
dec
aad
push
cmpb
inc
sahf
inc
adc
cli
test
push
loop
fildl
push
cs
inc
loopne
jmp
mov
sbb
stos
xchg
sbb
adc
filds
es
push
add
lods
push
adc
or
sti
push
pop
mov
jb
sub
sbb
mov
shrl
lret
call
jge
mov
mov
push
sbb
xor
mov
add
adcl
and
pop
and
cld
mov
sbb
sbb
xor
push
loopne
aam
notb
lock
mov
nop
out
mov
icebp
xchg
icebp
lahf
bound
pop
test
sub
add
xchg
pop
sub
mov
inc
sub
push
mov
and
add
enter
loope
and
outsl
adc
call
or
out
inc
pusha
push
sbb
cmc
pop
in
scas
pusha
cmc
or
es
sbb
jb
or
mov
sbb
aaa
mov
std
mov
mov
or
shlb
push
test
loop
pop
outsl
sub
iret
cwtl
dec
negb
aas
scas
test
dec
ret
sahf
push
lds
fidivs
leave
in
fs
jp
aam
hlt
mov
mov
sbb
outsb
jnp
dec
jno
loope
push
dec
push
sbb
lcall
add
push
cli
out
xchg
fsub
inc
mov
aas
push
add
jp
mov
or
lods
insb
movsb
jb
jbe
inc
mov
cmp
or
xchg
mov
sahf
xor
out
loope
inc
sbb
xchg
sbb
xor
loope
pop
into
repnz
mov
hlt
cli
jge
les
popf
fidivl
lcall
or
adc
adc
fwait
or
add
sbb
lcall
and
inc
mov
inc
adc
das
sbb
out
popa
es
xchg
or
cmp
inc
cmp
jmp
ret
adcl
sarb
pop
icebp
stos
in
sub
xor
rol
mov
pusha
lret
jbe
in
sbb
dec
mov
mov
dec
add
addr16
cs
clc
ficoms
add
or
jns
or
add
aam
push
jle
or
push
shr
bound
push
and
lahf
sbb
mov
mov
je
push
and
ss
repnz
lock
scas
mov
add
es
aaa
mov
loopne
cmpsb
ss
add
cmp
xchg
sbb
adc
inc
or
add
push
das
add
xlat
add
std
aaa
out
mov
mov
xchg
loope
push
cmp
out
movb
mov
or
and
mov
sbb
sub
dec
testb
pop
lret
clc
clc
in
sbb
sbb
adc
pop
xor
stos
push
cmpsl
mov
sbb
fucomip
into
and
stos
ljmp
mov
lock
jno
shrl
pop
test
pop
cmpsb
xor
arpl
das
inc
xor
leavew
pop
lahf
jnp
in
adc
clc
pop
and
dec
dec
push
outsb
push
cmp
enter
xchg
or
pop
or
add
subb
xor
and
imul
movsb
cmp
in
lock
pop
xchg
ret
jp
adc
inc
inc
jo
lock
mov
jl
mov
sarb
clc
mov
dec
push
xor
jmp
sbb
push
jp
outsl
stos
jge
stos
xor
pop
cmp
sbb
cmp
ret
xor
scas
jl
nop
fisubrs
add
ja
fildl
rolb
nop
in
mov
mov
push
xor
push
roll
ret
mov
dec
push
xorl
add
and
adc
push
jo
inc
adc
dec
or
mov
sbb
sub
in
mov
bound
pop
or
adc
ret
stos
pop
js
clc
test
dec
mov
push
jp
xchg
popa
movsl
push
hlt
jns
dec
ret
mov
shlb
pop
dec
loop
fmull
sub
inc
xchg
add
test
inc
loope
dec
dec
xchg
mov
insb
fdivl
loopne
sub
inc
jo
push
dec
push
adc
dec
dec
sub
sub
add
mov
insl
repnz
data16
push
push
stos
icebp
das
mov
push
pushl
cli
sbb
xchg
fadds
xor
jmp
cs
aaa
fldcw
test
scas
mov
roll
push
or
popf
div
sub
push
adc
push
jge
jae
icebp
ds
test
jp
and
das
pusha
dec
cmc
xchg
call
xchg
push
aam
test
push
add
adc
push
push
mov
or
pop
pop
ret
dec
xchg
in
cmpsl
xchg
sbb
mov
dec
add
sbb
arpl
ss
xor
lock
sub
loop
inc
inc
lods
aad
mov
xchg
test
jecxz
js
in
add
mov
jl
adc
out
jg
incb
xchg
or
adc
lcall
inc
notb
inc
loopne
int3
inc
aam
lock
loope
pop
push
out
and
jnp
in
xchg
dec
inc
scas
imull
inc
loopnew
xor
mov
push
icebp
pop
push
pushf
sbb
sbb
in
data16
add
push
jmp
xchg
mov
clc
dec
xor
mov
xorb
dec
loop
aad
sub
dec
lret
sbb
push
shl
sub
adc
in
jp
shlb
cmpsb
cmp
cmp
inc
add
add
push
or
pop
sub
lds
stos
inc
mov
adc
pop
out
jbe
cmpsb
call
sahf
ds
pop
push
and
mov
in
push
mov
loop
sahf
sbb
jle
rcll
ret
xchg
mov
cmp
mov
je
lds
fdivrs
xor
jle
fnsave
mov
jbe
xchg
lret
call
add
int
inc
cmp
cmp
pop
mov
pop
jb
rorl
or
add
loope
adc
adc
lds
or
inc
test
bnd
add
add
adc
pop
pop
pop
mov
call
xchg
into
sarl
gs
inc
lret
inc
dec
push
icebp
pop
adc
fcoml
push
sub
insb
jno
push
dec
mov
repz
aaa
inc
and
adc
scas
sahf
jnp
inc
add
call
movsb
dec
and
fldt
movb
mov
push
clc
shll
mov
add
or
adc
sbb
push
ljmp
jns
sarl
lcall
dec
push
ljmp
subb
les
std
add
jl
shll
sub
data16
and
push
call
push
lret
clc
dec
insl
push
out
lret
push
push
imul
add
cmpsl
push
jecxz
sub
loope
pop
hlt
orl
test
decb
aaa
jl
hlt
fsubrs
fnstenv
movsb
cli
or
shrl
mov
sbb
das
xchg
je
filds
pop
dec
div
repnz
and
mov
cwtl
adc
out
cltd
mov
push
mov
sub
repz
pusha
xchg
and
push
inc
dec
cbtw
adc
xchg
lahf
cltd
pushf
imul
enter
cs
lret
and
stc
xlat
sbb
jae
mov
test
insb
insb
lods
add
cmpsl
xchg
loope
or
ja
xor
ret
bt
adc
pop
cmp
dec
int3
push
xor
inc
xchg
icebp
rorb
pop
mov
popa
jne
call
pop
icebp
jmp
cmp
cld
mov
dec
inc
jp
mov
test
or
std
adc
cmp
add
push
or
and
jp
mov
loop
inc
shrl
sub
adc
xchg
loopne
jl
mov
cmp
jecxz
insb
pop
push
sbb
es
sbbb
int3
adc
lds
inc
loop
sub
push
in
sbb
mov
sbb
mov
cmp
and
push
adc
push
push
xor
fadds
shlb
psubusb
loope
rcrl
fldl
popa
pop
push
cld
mov
sub
mov
sbb
stc
ljmp
and
sbb
aaa
lock
ret
int3
sub
in
inc
rcl
cmp
dec
loop
lret
inc
push
aam
iret
or
ret
js
push
mov
int
pusha
outsb
add
clc
mov
or
pop
ficoms
push
cmp
imul
aaa
xor
pop
outsb
add
add
js
inc
pushf
xchg
jbe
pop
mov
adc
or
and
les
call
mov
add
mov
ret
adc
push
sbb
loopne
lcall
cmpsl
loope
fisttps
scas
pop
ffree
outsl
adc
cmp
pop
in
mov
push
adc
push
test
das
lret
cmpsl
and
sbb
fwait
sbb
or
inc
in
pusha
xchg
add
or
pop
imul
push
xchg
jge
imul
pop
xchg
sbb
pop
sub
mov
loopne
cmpsl
es
sub
push
fidivs
cmp
lcall
cmpsb
call
into
int
pop
and
sub
sub
push
xchg
pop
sub
andl
rclb
faddl
ds
je
mov
xchg
std
les
cmpsb
adcb
outsb
jo
cmp
fbld
jo
lahf
ret
xchg
sbb
mov
mov
mov
adc
cmp
adc
ljmp
out
add
daa
mov
and
pop
push
sbb
ss
insl
mov
mov
les
jge
pushf
and
hlt
aaa
aad
or
cmp
xchg
push
scas
mov
jne
xchg
in
sbb
loope
stos
test
repnz
roll
sbb
dec
fistpl
add
lods
fimull
es
lds
orl
sub
test
pusha
jle
cs
or
add
dec
adc
mov
pop
aaa
pop
icebp
adc
sbb
xchg
mov
aad
mov
cs
push
addr16
pop
cmp
and
imul
push
cmp
roll
movl
outsb
jg
sub
push
sbb
adc
adc
pushf
sbb
test
lea
pop
or
aam
cld
adc
mov
or
test
jl
xchg
jl
adc
loopne
rep
xor
mov
aas
mov
das
jne
mov
xchg
ret
imul
inc
mov
sbb
jmp
add
les
xchg
adc
pop
mov
aad
mov
adc
mov
test
sbb
lret
scas
lret
mov
jnp
lahf
test
adc
add
or
adc
lods
sbb
mov
fstp
mov
jnp
cmp
stos
sbb
cmp
or
mov
aad
movsl
lret
sbb
fistpl
add
insb
stos
scas
cmp
dec
sub
cmp
jno
bswap
sbb
or
ret
jno
cmp
pop
pop
sahf
push
pop
ret
std
ret
adc
dec
xor
test
push
pop
lcall
int3
in
js
push
iret
xor
lock
xor
inc
xor
test
in
cmp
sti
xor
adc
mov
sahf
ljmp
ret
cmp
adc
xchg
add
lock
js
or
test
pand
cmp
ret
insl
push
jae
setnp
scas
push
mov
and
adc
in
mov
jmp
mov
mov
test
mov
or
int3
fwait
outsb
cmp
sbb
fcoml
push
aad
pop
sbb
bound
and
mov
pop
out
add
dec
push
clc
xor
mov
andb
lea
or
imulb
incb
rorb
mov
push
mov
mov
insb
xor
mov
or
dec
add
pop
shrb
andb
dec
or
outsb
sahf
cmp
cmpl
mov
sarb
out
cltd
jbe
adc
jmp
scas
cld
rclb
insb
ljmp
cs
jb
insb
xchg
in
enter
or
or
or
cli
inc
ljmp
push
or
or
rcll
test
jnp
shll
jecxz
loope
add
cwtl
and
cs
xor
inc
addr16
lahf
roll
sub
fiaddl
mov
sti
aad
ljmp
jne
fsts
cmp
int
lods
fsubs
and
pop
push
add
sbb
push
fcoml
sbb
or
fsubrs
push
jl
mov
push
jo
or
jns
pop
inc
push
push
fsubrs
pop
lock
loopne
pop
jae
into
mov
sbb
subl
test
into
adc
mov
cmpl
and
lods
insb
int
fisttpll
test
or
push
adc
in
xchg
cwtl
xchg
pop
movsb
and
mov
mov
insl
xchg
push
mov
adc
xchg
add
shlb
cwtl
pop
or
pushw
shrl
sbb
repnz
imul
lods
loop
int3
in
sub
cs
rorb
mov
orb
inc
mov
decb
push
xor
testb
fldl
add
push
push
jbe
mov
into
ds
mov
or
fcoms
lock
mov
mov
and
mov
enter
sub
icebp
inc
inc
imulb
outsb
jp
roll
nop
call
outsl
add
shll
ja
aad
jp
sbb
cltd
or
lock
add
dec
or
clc
and
add
pop
std
lcall
jp
jl
test
mov
jne
or
mov
inc
stos
cwtl
movsl
jbe
ret
je
sbb
push
mov
test
int
add
rolb
jecxz
aam
int3
mov
fstl
add
decl
nop
mov
or
jns
cmp
les
mov
lds
sahf
decb
and
aaa
cli
jns
js
jge
and
out
jg
cmp
ja
fldcw
pop
adc
xorb
lods
insl
daa
fwait
xchg
scas
sub
mov
mov
fnstsw
pop
add
sub
jb
fsubl
sub
cmp
nop
pop
cmpl
xchg
int3
data16
lds
inc
xchg
popa
add
pusha
cltd
fsubrs
int3
incl
fwait
and
mov
mov
or
dec
inc
mul
sbb
ret
shll
mov
stos
add
mov
inc
push
mov
inc
mov
mov
enter
jbe,pt
scas
mov
mov
repz
loope
ss
scas
sarb
mov
or
xchg
inc
iret
cld
movl
sahf
xor
cltd
xlat
jmp
pusha
je
add
jmp
imul
mov
xchg
jmp
dec
rcll
adc
cmpxchg
push
push
xor
movsl
mov
dec
cld
fbld
xchg
std
sub
test
fwait
in
les
loop
push
cld
mov
add
shld
test
cmp
and
jg
mov
jmp
mov
fisttpl
in
mov
adc
cwtl
mov
adc
lock
sub
roll
add
push
insb
shlb
test
pop
lahf
or
xchg
sub
lea
test
xchg
cmp
add
dec
fidivrs
daa
les
inc
mov
sbb
rolb
pop
or
jle
jge
or
js
shlb
push
push
inc
add
dec
lds
and
sub
sar
dec
clc
outsl
push
sbb
fwait
call
xchg
inc
das
shll
jle
test
fcomp
push
sbbb
push
addr16
sar
xchg
movsl
pop
pop
jmp
xchg
ror
scas
cli
std
mov
pop
mov
sub
loope
stos
adc
mov
test
lods
add
les
notb
sbb
outsb
mov
adc
negb
aaa
in
pop
or
lock
sub
idivb
cmp
jae
ds
lret
test
mov
fiadds
jmp
jne
push
mov
mov
add
xor
pusha
adc
adcb
clc
mov
jmp
sbb
inc
xor
test
and
ljmp
je
xchg
mov
cltd
push
mov
inc
lock
clc
fdivr
sub
or
sbb
fcomi
sub
aam
sub
mov
xor
call
stc
outsl
lret
pop
aaa
jp
mov
repz
lds
loopne
ficompl
fmulp
push
rol
addl
es
and
nop
pop
std
adc
mov
sbb
cmpsl
add
dec
call
ljmp
or
cmp
fmul
mov
push
inc
cld
xorl
cmpb
mov
sbb
ret
mov
out
nop
ljmp
jbe
jo
push
subl
cmp
mov
test
out
sbb
incb
push
lods
push
loopne
inc
ljmp
icebp
jg
xor
sbb
pop
shl
aad
xchg
pop
loop
outsb
mov
enter
fnsave
movsl
test
adc
mov
daa
std
xor
adc
cmp
push
fsubs
xchg
inc
clc
pushf
movsl
add
jo
and
mov
add
push
ds
xchg
push
pushl
addl
insl
shrb
clc
stos
clc
adc
add
setb
xchg
mov
out
data16
shl
pop
and
dec
cmc
rolb
xchg
push
jno
push
ret
data16
adc
add
loope
adc
test
inc
cmp
aad
add
cmpsb
mov
ficoml
jno
adc
fninit
loop
outsb
mov
push
sub
int
jge
mov
xor
cmpsb
sub
scas
dec
inc
add
inc
or
dec
pop
add
pop
xor
push
ja
xor
xor
xchg
mov
arpl
push
aam
bound
clc
mov
int3
test
and
lock
jnp
lcall
cld
jg
stc
aam
or
pop
push
enter
mov
shl
les
or
shlb
js
daa
test
push
jle
mov
pop
loope
add
mov
mov
or
and
imul
mov
and
lods
mov
lods
sub
in
mov
sbb
jle
and
fwait
dec
das
xor
outsl
test
and
xchg
pop
adc
mov
push
and
push
or
adc
outsl
jnp
cmp
repz
add
loop
ss
xor
in
gs
xchg
mov
or
lds
clc
mov
xor
jbe
dec
or
das
add
jge
add
aas
je
jns
sbbl
jns
call
pop
sbb
inc
pop
out
xor
stos
dec
rep
jns
fdivrl
imul
loopne
inc
sub
fimuls
xchg
dec
jp
inc
mov
pop
jecxz
xchg
sarl
xchg
fucomp
add
dec
jge
cmp
dec
or
add
incl
or
sbb
pop
popa
push
rol
stc
ret
sbb
or
cmc
or
xor
jle
repnz
lret
dec
pop
jmpw
or
aad
fmull
mov
mov
dec
and
dec
fwait
sub
loope
testb
cmc
xor
ds
stos
dec
ret
jne,pt
jge
pushf
mov
and
mov
xchg
les
jecxz
jns
addr16
add
ja
or
xor
dec
or
xor
ret
pop
mov
stos
xchg
jle
add
mov
js
arpl
dec
outsl
sbbb
or
pop
jle
fdivp
pop
and
mov
out
inc
sbb
jns
mov
int3
add
mov
mov
repnz
stc
icebp
xchg
js
push
sub
nop
push
push
add
es
add
mov
inc
cli
adcb
mov
fs
fidivl
mov
sar
or
out
movsb
inc
fnstcw
cmpsl
daa
cmc
mov
pop
dec
test
nop
fimull
jl
cmpsl
int
les
dec
push
mov
addr16
adc
icebp
jmp
pop
xchg
js
jae
mov
cwtl
insb
jne
cmpsb
push
adc
push
rcrb
popf
add
dec
or
jge
addb
fsubl
sub
mov
aas
fadd
lcall
clc
xchg
pop
pop
push
push
add
cmc
push
mov
push
test
mov
inc
es
mov
movsl
ss
mov
cmp
dec
jg
or
push
xor
js
icebp
fdivr
add
cltd
das
inc
lcall
or
imul
cmp
mov
pop
mov
js
rcrl
mov
inc
cmp
inc
jge
pop
imul
jo
lods
dec
test
mov
inc
pop
das
sbb
lds
add
fildl
xchg
push
sbb
xchg
dec
cmp
aas
stc
test
inc
pop
test
lret
adc
fldl
add
mov
popf
or
cmp
pop
cmpl
scas
add
jbe
iret
andb
movsl
cmpsl
mov
lock
mov
mov
lahf
ljmp
push
push
jg
lds
ret
cmp
add
jnp
jle
test
dec
jo
and
mov
adc
sub
xchg
pop
jae
mov
pop
sti
jp
mov
adc
lock
add
mov
cmpb
jb
bound
push
rcrl
imul
adc
mov
pop
into
aad
imul
fistl
ljmp
subb
cli
sahf
push
rcrl
test
aas
bound
addb
pop
dec
jnp
movsl
jae
shl
add
push
cmc
pop
mov
xchg
xor
xor
das
and
pop
mov
dec
popa
or
add
sub
lods
adc
mov
repnz
cmp
lahf
pop
xchg
lea
cmpsb
fs
xchg
mov
stos
pop
inc
inc
aam
pop
mov
daa
loope
push
pop
jnp,pn
out
fildll
add
arpl
dec
push
lock
cmp
mov
arpl
xchg
adc
call
jmp
mov
addr16
jg
jne
push
popf
push
mov
jo
nop
lock
addl
outsb
jl
xor
imul
and
inc
dec
insl
xchg
inc
ror
fisubs
sbb
rcll
dec
shl
cwtl
clc
int3
lds
pop
add
add
mov
or
mov
das
adc
dec
cwtl
ror
pusha
push
rclb
jb
jg
xchg
lods
and
scas
stos
fcmovne
cmp
mov
pusha
loopne
daa
cltd
std
adc
pop
xor
call
xor
pusha
dec
mov
std
xor
pusha
mov
lods
mov
mov
clc
add
dec
push
mov
xchg
mov
mov
test
cmp
enter
dec
insb
loopne
or
repz
fdivs
cmp
adc
xchg
lcall
xchg
shl
data16
or
and
cmpl
cld
leave
jmp
movsl
push
inc
push
add
add
sub
pusha
mov
cmp
into
stos
es
or
add
or
cmpb
in
xor
fwait
xchg
sbb
decb
or
cs
movsl
loope
test
or
or
jp
fistpl
cmp
dec
mov
pusha
mov
push
mov
sub
xchg
loope
add
add
cs
mov
sbb
cli
xor
pop
and
push
inc
sbb
and
jl
inc
aam
orb
pushf
fnstenv
or
lods
rorl
or
inc
inc
xorb
fmuls
icebp
and
mov
andb
jmp
add
mov
pushl
mov
inc
dec
in
shrb
and
jae
xchg
dec
push
std
cmp
pop
mov
mov
dec
dec
call
loop
fbstp
mov
lret
fs
or
notb
push
cmpl
mov
insb
mov
and
add
shlb
pop
mov
fs
std
or
test
cld
mov
or
mov
mov
aad
dec
jne
ss
test
push
xchg
push
adc
mov
iret
add
mov
jmp
adcb
shlb
and
ja
shlb
cld
test
xchg
inc
pushf
cmpsl
mov
rol
popa
xchg
sub
leave
stc
mov
or
adc
fiadds
xchg
xor
xor
mov
or
inc
jb
add
dec
pop
sbb
sub
pop
test
xchg
ds
in
push
out
rcrb
adc
mov
adc
sub
or
hlt
pop
xor
add
mov
jg
adc
lock
test
dec
pop
mov
mov
das
popa
cs
push
xchg
loopne
push
pop
sbb
pusha
adc
or
cmp
push
jge
aad
cmpsb
or
sbb
daa
popa
adc
cld
jecxz
add
addr16
mov
lea
or
dec
adc
je
jp
filds
mov
mov
cli
das
cld
mov
in
and
cwtl
adc
add
add
leave
or
jle
or
aas
loope
jmp
cld
stos
call
sbb
in
jbe
or
std
xchg
push
stos
loopne
mov
loop
fmuls
loope
es
rorl
push
jge
in
pop
push
cs
jp
cmp
push
push
add
jmp
xor
das
popf
lcall
and
cmp
mov
aaa
mov
sbb
inc
and
cmpsl
push
call
pop
scas
cmp
cmp
xchg
mov
rcr
std
push
pop
mov
xor
xor
add
mov
ja
adc
xor
push
dec
pop
and
add
add
in
andl
mov
xchg
and
or
subb
mov
insb
mov
mov
cltd
pop
sub
out
sbb
inc
addb
push
clc
mov
mov
icebp
jae
adcl
lock
push
cmp
cs
push
aaa
xchg
shll
mov
cmpsl
icebp
pop
push
data16
pop
xchg
into
mov
test
jo
pop
test
ja
cwtl
adc
push
sub
cmp
andl
add
pop
add
push
or
ja
xor
aaa
push
lods
shll
test
push
jle
cmpsb
sub
or
jb
xchg
test
andl
or
push
add
mov
xor
jp
jp
add
adc
inc
and
outsl
lea
xchg
add
pop
add
ficompl
test
dec
popf
pop
cmp
push
mov
insb
pop
or
shlb
test
adc
sub
dec
enter
mov
fsubr
lret
pop
testl
decb
mov
imul
rcl
cmp
inc
mov
nop
into
push
jmp
pop
pop
jnp
push
jmp
xor
and
or
stos
pusha
bound
inc
idiv
fnsave
push
rorl
pop
lock
add
cmp
addl
cld
xchg
rclb
cltd
mov
dec
loope
push
movsl
divl
add
inc
andb
cwtl
xchg
int
jb
or
les
insb
cmp
lret
ljmp
pop
sbb
inc
jmp
in
fstl
dec
std
add
mov
adc
and
push
mov
std
mov
jnp
lret
add
inc
in
sub
fs
test
movsl
jle
fiadds
xchg
add
sub
cld
das
pop
xor
pop
insb
loop
aad
adcl
leave
sti
xchg
frstpm(287
jecxz
and
push
and
rorb
testl
loopne
sahf
and
push
inc
mov
sbb
dec
and
cmp
add
inc
mov
stos
roll
imul
test
aam
sti
rolb
clc
das
adc
mov
and
inc
nop
inc
mov
out
mov
cmp
bound
fadds
ret
gs
cmpsl
adc
or
add
outsl
adcb
cmp
push
aaa
xchg
inc
movsb
std
sub
mov
cmp
and
andl
in
aam
xor
cli
add
inc
inc
push
insl
sub
pop
xchg
mov
mov
or
mov
out
pop
dec
orb
jmp
cld
jne
jo
inc
aas
push
fiaddl
inc
mov
mov
push
inc
scas
clc
add
or
movsb
in
xor
or
test
unpckhps
in
cwtl
mov
test
push
add
imul
aam
pop
clc
aad
jp
icebp
mov
lret
hlt
inc
aam
popa
sbb
pop
or
ja
scas
mov
mov
jg
lock
mov
pushf
add
test
push
decb
fisttpl
test
cmpsb
rcrb
hlt
push
ret
arpl
cmp
jo
xor
push
push
and
adc
mov
xchg
cmp
jle
jno
add
or
inc
popf
daa
jns
lock
imul
ret
push
sub
je
subl
inc
imul
inc
mov
pop
jmp
cmp
mov
ret
orl
sbb
test
in
mov
jns
mov
pushf
cmp
mov
sub
loopne
pop
loop
dec
or
xor
or
js
mov
into
jp
out
sahf
mov
fwait
jmp
std
xchg
sbb
and
xchg
lock
cltd
lods
mov
xchg
and
cli
mov
add
aad
stos
cmpsl
adc
mov
mov
mov
jg
incb
pop
iret
incb
jmp
xchg
daa
xor
or
mov
push
imul
std
mov
dec
test
in
dec
add
into
and
sub
cmpsb
sbb
mov
imul
xor
sub
dec
dec
lods
icebp
xchg
adc
rorb
iret
push
inc
lods
push
mov
push
imul
imul
dec
insb
xor
inc
xchg
cmp
les
adc
cmc
loopne
or
pusha
pop
jmp
pop
ret
add
mov
pop
mov
out
subl
das
or
add
jb
movsl
cmp
imul
dec
cmc
stos
movsl
sbb
cmpl
int3
sub
ja,pn
xor
into
notl
mov
sbb
add
dec
xchg
bound
mov
jecxz
fmul
jbe
jle
dec
mov
ds
ss
sbb
push
jp
add
push
jbe
add
ljmp
adc
gs
cmp
xor
loopne
xchg
adc
lret
imul
dec
mov
mov
leave
inc
push
jmp
lods
sub
shlb
arpl
cmp
pop
cld
xor
or
in
test
or
push
icebp
iret
scas
pop
fwait
and
idivl
pop
jb
scas
addr16
add
testl
loope
stc
adcl
inc
leave
sti
adc
fidivrl
sti
xlat
jo
je
subl
sbb
and
cli
std
jo
out
cmp
mov
mov
pop
rcll
xchg
cli
xchg
jbe
push
fisubl
mov
push
sub
out
in
and
push
inc
inc
and
or
dec
fsub
std
and
cmp
pop
xchg
pushf
mov
dec
test
xchg
and
sysret
shrb
cmp
stos
sub
jbe
xor
and
arpl
add
mov
xor
or
fwait
scas
js
push
lahf
push
fisubrl
push
xor
out
dec
stos
mov
and
pop
sub
pop
dec
xlat
inc
aas
and
neg
cwtl
mov
lods
push
and
adcl
mov
pop
popf
or
int
es
aad
fisttpl
push
lds
sti
adc
sub
orb
xchg
sbb
pop
add
mov
jmp
dec
xchg
rorl
inc
jmp
into
mov
push
push
ror
in
push
movsb
stc
cmc
pop
ljmp
xchg
aaa
movsl
mov
lods
enter
jns
mov
iret
xor
dec
mov
cli
aam
pop
xor
pop
test
mov
pop
mov
ror
in
add
int
dec
sbb
mov
dec
pop
aas
jle
adc
and
jge
loope
daa
push
pop
cmpsl
cmp
cmp
pop
lods
or
out
ss
xchg
in
ficoml
mov
fwait
sbb
popf
dec
cmp
aam
add
pusha
xchg
lock
xchg
je
push
popf
repnz
sub
and
loope
mov
jg
dec
add
mov
repz
dec
dec
dec
movsl
pusha
orb
in
xor
pop
or
inc
call
insl
test
es
mov
pushf
sbb
pusha
inc
dec
adc
sarb
inc
jg
xchg
adc
aam
jo
test
shll
les
add
data16
mov
xchg
dec
dec
inc
push
test
pop
mov
icebp
and
xor
in
movsb
nop
js
pop
test
mov
sub
mov
adc
mov
adc
imul
xchg
fiaddl
or
pop
arpl
push
jge
jl
xchg
aaa
cs
xor
or
push
enter
ds
push
or
pop
jmp
dec
mov
and
popf
push
or
xchg
loopne
inc
popf
int
mov
in
xor
call
mov
in
ret
adc
adc
sbb
pop
push
in
das
ret
dec
rorl
mov
je
xchg
fcom
mov
xchg
jo
cmp
push
push
out
mov
loopne
popl
aaa
jne
jmp
inc
jecxz
adc
dec
stc
xchg
fucomp
inc
mov
push
add
ret
push
push
je
jb
jbe
fmull
gs
jbe
pop
mov
sub
jbe
ret
dec
jmp
sbb
adc
cwtl
enter
and
add
subb
pop
cld
mov
jmp
sbb
test
dec
in
lods
inc
cld
xor
add
sbb
xor
sbb
popf
push
mov
mov
xor
sbb
orl
pop
in
push
sbb
pop
scas
inc
mov
mov
leave
in
inc
pop
mov
xor
sub
shlb
ds
mov
lret
dec
cmp
scas
aad
js,pn
cli
inc
lds
pusha
sub
imul
in
mov
jo
cmp
lcall
or
cli
pop
pusha
push
and
insl
pop
mov
insb
nop
mov
jp
sub
scas
out
mov
fiadds
push
pushl
shr
test
pop
mov
dec
push
xchg
pop
or
lret
ds
mov
mov
adc
ficomps
sub
mov
andb
scas
scas
cmpsb
icebp
mov
mov
jmp
lock
push
xchg
data16
jo
xchg
mov
or
add
mov
sahf
lock
adc
movsl
dec
mov
xchg
ljmp
pslld
dec
mov
pushf
pushl
jo
adc
les
sub
gs
rol
jg
sbb
les
popa
out
add
adc
mov
lds
inc
je
xchg
add
cmpsl
in
xlat
xor
mov
loope
sbb
in
cmp
jno
jle
ljmp
loopne
pop
or
dec
in
mov
cmp
insb
jno
movsb
in
clc
pop
mov
mov
fstpt
jecxz
stos
ds
pop
movsb
and
ss
cmpb
cmp
mov
ljmp
adc
pop
inc
sarb
lods
sti
pushf
movsb
pop
sbb
test
mov
xchg
ss
mov
adc
sbb
and
push
repz
jmp
subb
and
xor
mov
lods
jo
mov
clc
pop
sub
mov
sub
sbb
and
scas
or
xor
js
jmp
push
mov
ror
or
rcrb
push
hlt
iret
jl
inc
jp
lds
lock
xchg
nop
push
add
ljmp
rcl
cmp
push
pushf
mov
mov
add
loope
adc
or
ss
xchg
insb
imul
cmp
sti
daa
divb
std
in
mov
test
mov
test
dec
push
mov
xchg
pop
lret
jp
int
cmpb
or
cmp
adc
push
jl
lret
cmpb
clc
dec
cltd
sub
add
lret
pop
les
push
sub
enter
mov
pusha
jecxz
mov
cwtl
std
bnd
push
push
repnz
fwait
das
fmull
or
popf
mov
mov
xchg
add
aam
lret
aas
or
push
lea
pop
shr
insb
rolb
add
stos
test
sarl
cmpsb
add
mov
adc
adc
pop
cmp
mov
xchg
mov
test
jge
pusha
pushl
xchg
cmp
ds
xlat
loope
mov
pushf
or
and
es
xor
jbe
in
cmp
or
pop
cltd
rclb
outsb
xchg
dec
ret
jle
fwait
jmp
movsb
mov
push
cmc
xor
inc
jl
cmp
movsb
scas
daa
fiaddl
sub
iret
add
cmpsb
js
out
fisttpll
mov
push
push
out
fwait
test
ljmp
add
popa
test
sbb
mov
jecxz
test
inc
es
jne
mov
xor
test
pop
rclb
cmp
cmp
mov
call
shll
cmc
inc
or
adc
inc
in
dec
mov
sbb
insb
enter
test
pusha
roll
mov
pop
int
call
fcomps
test
adc
dec
inc
sbb
dec
mov
aad
push
ret
push
xor
sahf
lds
mov
in
sar
push
lock
pop
imul
ljmp
add
movsb
rcrl
rolb
mov
mov
test
call
push
fadds
or
and
lahf
sahf
nop
loopne
xchg
in
sub
add
xor
push
mov
jne
mov
adc
jno
xor
or
sub
or
mov
lock
xor
inc
or
jns
mov
popa
dec
clc
xchg
cli
movb
add
cmpb
adc
sbb
je
aad
push
aam
mov
cmp
xchg
nop
adc
popf
cmpsb
cmpsb
xchg
mov
lods
inc
das
jp
xor
loop
or
sub
es
add
clc
xor
cld
loope
lock
xor
shll
mov
js
mov
mov
mov
push
insl
movsb
add
nop
pop
push
shlb
inc
or
add
pop
sbb
xchg
stc
xor
sarl
sbb
lret
nop
xchg
push
fmull
jg
xchg
clc
fistl
jb
mov
sub
jl
sbb
xchg
ss
mov
loopne
out
repnz
int
mov
pop
test
xchg
xor
lds
sub
loop
int
fisttps
adc
nop
mov
xlat
lock
vmovdqu
mov
in
out
sub
mov
xor
mov
outsb
push
clc
pusha
pushf
pusha
jl
pop
cli
popa
loopne
dec
lret
adc
adc
out
test
push
inc
stc
mov
pop
mov
inc
mov
mov
mov
out
loop
jo
xchg
cmp
notl
or
pusha
jb
mov
sub
push
mov
outsl
fdiv
fistpl
or
mov
add
jne
clc
xor
mov
mov
addb
call
push
icebp
sbb
pop
ljmp
into
mov
add
mov
imul
xchg
rcrl
ds
outsb
xchg
out
add
dec
outsb
test
add
sbb
xchg
or
add
call
push
or
jmp
pop
push
or
insb
sbb
lods
cwtl
push
mov
jae
and
xor
adc
mov
inc
insb
push
sub
push
idiv
add
lea
add
pop
sahf
lret
into
aas
inc
loope
cwtl
es
fcmovb
ret
clc
pop
or
arpl
subb
xlat
mov
lcall
cmp
xor
fcoms
sbb
ja
push
cli
push
ljmp
mov
push
xlat
jecxz
test
pop
lahf
jbe
push
mov
dec
and
inc
ret
adc
add
mov
mov
mov
jb
mov
pop
out
mov
add
jbe
aam
pop
inc
fdivs
icebp
push
sbb
adc
rcll
fmull
cwtl
inc
push
sbb
add
out
add
je
and
testb
push
push
dec
out
pop
sbb
aaa
test
cs
and
xchg
push
add
cwtl
pop
icebp
shl
sbb
sbb
or
das
clc
push
mov
push
push
dec
int
pop
out
aad
add
xchg
movsl
add
mov
add
dec
adc
jecxz
pushl
mov
mov
push
clc
jge
mov
addl
sub
mov
add
imul
pusha
shlb
mov
add
xor
jmp
sbb
mov
add
sbb
das
dec
pop
sbb
add
mov
and
cmpsb
and
cli
daa
test
call
push
insb
push
fucomp
repnz
mov
shl
xor
and
call
lahf
inc
stos
fdiv
inc
data16
hlt
cmp
clc
outsb
jb
cmp
mov
imul
in
mov
add
xchg
jnp
push
jno
pop
inc
insb
jbe
adc
js
loop
cwtl
dec
xor
in
inc
clc
add
jmp
or
test
mov
ror
inc
ljmp
mov
rolb
sar
push
jle
sarb
adc
arpl
pop
cmp
adc
adc
mov
lcall
xchg
js
pop
aam
ret
call
jmp
hlt
lahf
lods
loopne
scas
idivb
push
xchg
add
icebp
jecxz
adc
jno,pn
mov
test
sbb
mov
add
daa
jmp
adc
push
js
aad
push
aam
sub
out
mov
push
sbb
xlat
ret
add
sub
mov
jbe
adc
xor
enter
cmp
stos
aad
ljmp
mov
ficoms
jle
test
inc
push
adc
ficomps
dec
shll
orb
insl
repz
cmpsl
pop
xchg
cmp
add
adc
jo
adc
clc
sarb
aaa
dec
sub
pop
mov
pop
or
add
mov
mov
loopne
inc
pop
add
dec
shrl
xchg
mov
out
stc
loop
mov
call
mov
aad
jg
sarl
push
or
dec
call
or
cmpl
test
or
pusha
pop
ja
push
jne
scas
hlt
in
je
loop
add
je
js
sbb
aas
adc
xorb
cmpsb
sbb
stos
push
cmp
mov
sub
pop
gs
mov
lods
aam
mov
pop
lock
addl
gs
sar
mov
fdivl
mov
jp
sbb
push
shll
lea
xchg
adc
inc
add
xchg
fimuls
out
mov
cmpsb
jae
mov
push
adc
cmp
ret
adc
sub
xchg
inc
add
jg
dec
repnz
and
pop
lods
pop
mov
mov
pop
andl
iret
push
in
out
mov
shrb
jecxz
and
sub
mov
gs
push
or
pop
mov
ss
mov
inc
xchg
push
popa
jecxz
cmp
ret
mov
adc
cmp
add
and
dec
loop
lods
xchg
adc
loop
xor
push
pushf
stos
inc
lock
or
push
mov
adc
call
inc
pop
or
dec
lods
inc
add
inc
shlb
scas
push
jecxz
les
and
int
or
mov
mov
lret
fsubrl
test
jbe
addl
mov
push
sti
sub
cld
data16
testb
xor
shll
jp
lock
pop
inc
int
int3
rclb
pop
lock
stos
mov
cmp
sbb
add
jno
rorl
stos
cmp
in
jp
rol
cli
lods
pop
pushf
mov
in
test
je
ud0
ljmp
xor
pop
push
outsb
push
lahf
and
das
test
cld
or
scas
lock
es
mov
movsb
add
mov
es
ret
frstor
mov
sub
or
imul
pop
add
out
sub
cmp
out
mov
push
outsb
sub
sti
xor
outsb
das
mov
cmpl
popa
sti
test
jne
rclb
inc
jl
imul
and
adcb
pop
pop
xchg
jle
out
test
subb
dec
cmp
mov
test
mov
adc
cmpsb
sub
pop
and
add
and
inc
cmp
popa
sbb
imul
je
push
aas
call
lea
test
jmp
sub
fcmove
push
sbb
mov
loop
push
ficoml
orb
incl
or
and
pop
add
push
adc
add
or
cmpl
or
or
rclb
in
jmp
cmp
add
push
or
loopne
push
xor
and
inc
add
incl
push
inc
adc
sti
mov
std
add
pusha
pop
and
dec
cmp
add
cmp
jge
pusha
and
adc
incl
pop
add
push
mov
incl
sub
pop
sti
add
inc
push
jbe
push
and
adc
nop
pusha
sbb
add
sahf
cmp
pushl
loope
and
cmp
push
addb
nop
or
addb
nop
add
decl
add
adcb
cmp
add
nop
call
imulb
clc
and
add
or
inc
add
adc
pusha
add
cmpb
add
js
mov
mov
cmpsb
and
pop
and
loope
add
jg
xor
and
sbb
pop
inc
nop
sbb
push
push
inc
add
mov
outsb
loopne
incl
adc
push
loopne
add
sbb
add
ljmp
xorb
orl
adc
push
push
cmp
xor
add
stos
push
mov
jg
cli
pop
or
and
sbbb
and
push
add
clc
adc
mov
xchg
push
adc
add
adc
push
sbb
inc
add
adcb
adc
xchg
fiaddl
or
subl
inc
pop
adc
or
sbb
and
sar
nop
add
repnz
mov
add
nop
loope
cmp
mov
sbb
push
push
pusha
push
ret
lds
push
push
and
push
add
movsb
push
pop
jo
lock
loopne
nop
jo
pop
outsb
cmpl
jo
add
push
ret
fmull
adc
jbe
xor
sbb
scas
mov
xor
push
cmp
mov
add
adc
adc
sbb
sbb
pop
outsl
mov
rorb
cmp
addl
fistps
xchg
and
add
sbb
xor
add
loopne
adc
pushf
or
add
add
nop
adc
mov
loopne
dec
test
rcrb
rorb
in
or
pop
push
loope
pushf
nop
push
and
loopne
adc
mov
andb
testb
incl
lods
sub
orb
nop
push
pop
xor
sub
add
adc
cmp
push
shlb
or
xor
push
or
push
cli
add
mov
sbb
rolb
add
arpl
adc
pop
push
and
push
mov
loope
push
jp
data16
or
push
xor
add
and
fdivl
movsb
dec
call
int
ret
or
cmp
cli
pop
cltd
add
xchg
fdivl
loope
push
es
mov
sub
fs
inc
push
inc
add
xor
jo
shl
fimull
test
mov
push
cwtl
sub
push
inc
push
add
movsb
inc
push
rcll
jo
shlb
call
in
and
push
mov
sbb
mov
pop
xor
loope
xchg
or
fsubl
inc
or
cli
dec
out
xor
or
lcall
push
je
roll
inc
xor
mov
adc
push
in
push
pushf
add
int3
pusha
adc
and
aam
sub
cltd
data16
add
push
push
imul
or
or
push
sbb
out
lret
adc
xchg
ljmp
push
push
sbb
mov
clc
push
call
outsb
hlt
shl
xor
sbb
pop
or
dec
mov
adc
or
inc
sbb
dec
add
mov
je
sbb
add
mov
sbb
and
push
push
push
inc
and
sub
push
mov
mov
xchg
mov
loopne
push
adc
call
or
addl
cmpb
fs
sbb
sub
adc
out
movsb
mov
or
jle,pn
mov
add
adc
shrb
push
push
loopne
add
sbb
add
jo
movsb
outsb
fidivrs
or
and
jo
je
lods
adc
push
pusha
out
and
stos
mov
sbb
inc
adc
rolb
xchg
pusha
scas
push
dec
add
push
sbb
jl
add
pusha
push
cmpl
aam
movsb
cs
push
stos
sbb
nop
jb
enter
add
popf
lods
rolb
add
add
xchg
orl
or
js
je
cmp
ss
cs
cmpsb
push
adc
in
or
sbb
adc
in
or
sbb
sbbb
hlt
adc
into
xor
push
test
adc
inc
jp
stos
imul
and
je
mov
xor
add
inc
out
lcall
dec
fs
xor
xor
push
hlt
pop
out
adc
les
adc
adc
cmp
dec
loopne
jb
adc
test
dec
add
push
push
out
into
stos
dec
lods
xor
inc
jo
pushf
shlb
adc
push
insb
lcall
cmpsb
js
fidivrs
mov
and
mov
mov
shlb
or
sbb
pusha
addb
push
push
mov
add
and
cli
add
sbb
addb
sub
into
or
ficoms
push
loopne
adc
mov
ret
xchg
lret
cwtl
in
pop
shlb
add
pop
xor
cmpsb
sbb
and
ret
push
outsb
mov
and
sub
cwtl
movsb
sub
adc
push
add
mov
push
and
into
cli
lret
and
xor
add
xor
lret
jno
sbb
add
outsl
adc
sbb
xor
orb
and
jle
push
pushl
push
pop
or
dec
loope
push
loopne
shrb
sub
loope
jo
mov
or
fsubp
cmpb
push
xor
jle
xchg
fs
sub
and
test
cmp
cmp
push
xchg
adc
dec
je
int3
and
add
sub
mov
xor
andb
push
cmp
or
xor
pusha
ret
inc
push
bound
push
mov
sti
or
out
jl
or
int3
stos
rol
cmpb
aam
loope
nop
xchg
sbb
mov
adc
push
adc
rorb
lret
test
add
call
mov
stos
jo
lret
push
rolb
mov
fcomps
mov
inc
add
mov
cwtl
or
lret
inc
cmc
push
sbbb
nop
xor
add
add
xchg
enter
push
dec
mov
andb
sub
fadds
push
test
pusha
fs
fsubp
push
mov
push
fs
inc
int3
or
inc
loope
aam
mov
andl
add
test
push
xchg
add
push
addb
test
adc
jo
mov
push
xchg
inc
nop
mov
aaa
add
add
add
inc
xchg
test
loope
outsb
push
test
cmp
xor
add
or
fcoms
cwtl
dec
xchg
sbb
inc
and
loopne
subb
loopne
scas
xor
adcl
dec
inc
lcall
add
mov
add
fadd
mov
in
push
mov
add
inc
xchg
inc
mov
les
mov
loop
or
sub
orb
and
mov
and
pop
add
or
push
test
adc
xchg
push
inc
or
in
xlat
test
movsb
adc
or
es
adc
dec
mov
push
shlb
fmuls
add
add
xor
sbb
in
mov
pusha
lods
inc
pusha
dec
push
add
push
orb
mov
or
sbb
cmp
push
mov
dec
mov
lcall
adc
inc
push
loop
ret
mov
push
adc
xor
dec
es
mov
cwtl
or
xchg
mov
decb
mov
repnz
loopne
stos
xchg
mov
lods
movsb
mov
push
pop
push
adcb
xor
inc
fs
inc
xor
push
mov
shlb
and
fadds
inc
cmpl
es
movsl
ficoml
sbb
sub
fsubrs
mov
push
sbb
add
add
push
and
cmp
add
push
cltd
xlat
data16
loopne
or
xor
xchg
sbb
shlb
stos
push
loope
push
push
jo
add
add
subb
and
add
add
addb
dec
mov
xorb
test
sbb
adc
scas
and
or
add
and
pop
mov
fsubl
rclb
shr
and
push
mov
or
jo,pt
in
sbb
inc
mov
inc
add
and
lret
or
pusha
cmpsb
mov
loopne
add
pusha
fisubl
add
push
nop
add
stos
xchg
rclb
and
fs
sarb
mov
pusha
pop
mov
rcll
inc
mov
dec
or
mov
dec
scas
sarb
shlb
add
push
push
or
sahf
sbb
pusha
je
xchg
add
push
xchg
push
es
jle
push
loopne
sub
push
loopne
nop
in
sub
mov
add
ds
cmp
test
fs
sbb
inc
cwtl
cmp
aam
outsb
movb
jb
xor
rolb
push
cwtl
rorl
and
fidivrs
es
arpl
sbb
add
mov
push
sub
les
popa
test
hlt
adc
call
mov
sbb
sbbb
push
add
xor
inc
jo
pop
and
cmp
push
clc
ret
xchg
pusha
pop
mov
push
out
sbb
lods
sbb
push
add
nop
sub
or
in
adc
mov
sahf
pop
je
dec
mov
cmp
xor
sbb
inc
push
pop
cwtl
sbb
inc
add
add
hlt
pop
dec
mov
add
rorl
jo
loop
or
adc
add
ds
adc
adc
xchg
cmp
cs
mulb
xor
lods
cli
add
and
pop
and
and
sbb
mov
cwtl
and
add
xor
movsl
sbb
sub
cwtl
mov
pop
and
incb
push
loope
nop
cld
jle
or
dec
mov
or
xor
push
pusha
mov
or
xchg
lret
pusha
loop
xchg
cltd
lret
mov
cmpsb
push
push
and
push
loope
mov
popa
push
sbb
pop
xchg
addb
adc
sbb
xor
int
sbb
repnz
push
shlb
push
xchg
mov
jo
les
mov
mov
add
loopne
ret
fisubl
je
dec
push
push
fadds
push
add
ljmp
int3
push
cmp
adc
shlb
push
push
xor
mov
jo
loope
or
sbb
mov
shrb
adc
insb
scas
add
jo
add
pusha
addl
fcomps
adc
in
adc
adc
cli
and
inc
sbb
xorl
pusha
and
add
cmp
push
test
add
loop
or
cmp
xchg
ljmp
int3
or
pushf
mov
adc
xor
ds
addl
push
push
sub
in
rcrb
pop
loope
sbb
xor
jmp
add
mov
mov
ret
jbe
or
push
adc
push
les
call
nop
inc
jo
and
int3
int
loop
mov
and
repnz
cmp
enter
adc
cltd
jbe
add
pop
or
or
mov
test
add
adc
cmp
pop
xchg
add
test
lea
dec
sbb
or
dec
inc
je
sbb
push
stos
mov
adc
xchg
into
sub
pusha
cmp
dec
and
nop
clc
sbb
xchg
mov
cmp
push
in
repnz
popf
or
lods
movb
jl
test
adc
pusha
inc
aam
jne
dec
pusha
pop
mov
cs
xorl
jo,pt
lret
js
add
lock
rol
test
pushf
push
push
jp
mov
pop
nop
add
adc
mov
sbb
bound
nop
fsubs
in
rcrb
inc
je
adc
out
pop
cmpb
mov
call
sbb
cmp
pusha
call
sub
push
push
and
into
pusha
nop
enter
push
or
out
inc
jl
mov
mov
inc
icebp
aad
or
pusha
shll
pop
pop
fsubrl
and
sahf
inc
sub
mov
lods
add
nop
inc
shlb
lcall
push
adc
pop
int
cmp
mov
mov
sbb
loopne
cwtl
dec
mov
xor
mov
or
movb
rclb
js
nop
add
pusha
adc
inc
pop
outsb
lret
loopne
jo
or
dec
test
jle
pushw
push
popa
jo
cli
test
and
loopne
push
fsub
adcb
loop
loopne
or
fsubrs
call
sarb
add
xor
call
sbb
cmpsb
xor
adc
jo
cmp
inc
and
fs
cs
adc
clc
pop
inc
lods
mov
dec
sbb
push
mov
sbb
adcb
adc
cmpl
and
push
stos
push
mov
rclb
adc
push
dec
call
push
test
orb
or
mov
jbe
pop
in
adc
cmp
pop
or
out
add
loopne
add
add
add
cmp
dec
pusha
xchg
push
or
insb
cmpsb
jbe
push
or
cli
add
inc
sub
je
push
mov
push
mov
inc
or
subb
xor
inc
push
push
dec
mov
mov
loope
out
movsb
xorb
fsub
jb
lret
add
push
mov
nop
xor
mov
add
fcoml
or
cs
sbb
aaa
adc
push
and
sarb
pop
scas
adc
add
jle
sub
inc
nop
jb
mov
xor
add
pushf
adc
adc
ret
push
stos
xchg
push
dec
divb
test
mov
xor
or
in
ret
dec
imulb
sub
jae
mov
rolb
xchg
out
and
loop
mov
enter
mov
jb
andl
mov
xchg
rolb
jb
add
xchg
inc
cmp
push
adcl
pusha
inc
adcl
mov
je
cmp
jbe
jb
into
push
pop
push
pusha
in
mov
mov
icebp
test
push
mov
mov
nop
pop
cmp
inc
ret
imul
add
push
mov
pop
sbb
pop
push
cmp
cli
push
adc
add
adc
test
xchg
and
mov
outsb
or
xor
jle
pop
or
jl
movsb
repnz
xchg
pop
test
rorb
jo
push
cmp
push
or
int3
addl
push
mov
jo
clc
sub
push
lret
or
adc
pop
dec
andl
lret
add
and
adc
adc
sbb
repnz
xchg
or
xor
xor
cltd
and
ds
hlt
push
ss
test
lret
sub
fisubl
sub
and
xchg
popa
and
cmp
push
mov
and
and
inc
or
sub
pusha
mulb
jle
push
xchg
mov
loope
mov
push
bound
adc
aam
inc
cmp
add
lods
add
loope
mov
je
jne
sub
push
fmuls
or
add
add
adc
sub
fiaddl
inc
or
sbb
push
or
rcrb
jo
loope
movsb
push
ljmp
xor
or
or
aam
push
and
fnsetpm(287
inc
or
and
nop
dec
loopne
shlb
cmp
add
movsb
jo
mov
mov
hlt
push
pop
or
pop
and
or
mov
enter
cmp
dec
inc
sbb
xchg
bound
inc
or
data16
xor
hlt
ljmp
out
jo
xchg
and
mov
or
add
stos
daa
xchg
leave
inc
mov
addb
pusha
sbb
mov
push
fldl
pop
pusha
pusha
into
add
insb
or
adc
mov
loope
cmp
addb
les
sbb
jo
push
and
outsb
pusha
add
push
adc
push
inc
add
cwtl
dec
mov
pop
inc
add
adc
xchg
hlt
sbb
dec
adc
and
xchg
sbb
fs
pop
xchg
mov
mov
leave
and
pop
push
push
bound
mov
xchg
push
sbb
add
adc
add
jo
push
inc
mov
sbb
mov
add
inc
cmp
js
nop
cmp
loope
in
jo
cmp
xchg
dec
push
loopne
inc
jb
or
inc
and
pop
and
mov
mov
nop
lcall
or
push
insl
addl
xor
call
or
sahf
add
mov
pop
sbb
fs
subl
mov
and
add
subl
xchg
xor
adc
mov
and
nop
xor
xchg
dec
xchg
clc
cmp
adc
adc
subb
call
add
adc
sub
scas
xor
icebp
adc
push
inc
loope
js
ret
and
jp
loopne
sub
push
add
inc
mov
xchg
sarb
push
sbb
jbe
rorl
je
data16
xchg
mov
or
clc
add
xor
rolb
push
gs
xchg
add
loopne
dec
push
lea
shl
mov
js
push
nop
push
mov
push
shrb
loope
xor
loopne
addl
push
cmpb
les
adc
push
movsb
or
fadds
cmp
incb
push
loop
and
xor
add
or
dec
js
dec
add
pop
sub
andb
dec
mov
sbb
inc
call
sbb
adc
and
sub
mov
mov
jb
test
pop
add
sbb
lcall
nop
push
push
call
sub
add
into
mov
sbb
cld
mov
push
jge
sbb
movsb
add
movsl
sbb
xor
or
mov
dec
cmpsb
inc
cwtl
in
add
pop
mov
lret
rorb
dec
mov
add
adc
ss
fs
adc
mov
push
ret
in
xchg
movsb
push
adc
test
lods
or
test
cltd
arpl
xchg
sahf
xchg
sbb
pop
shlb
xchg
xchg
pop
cmpsb
or
sbb
cs
pop
and
and
cmp
cld
or
push
or
mov
push
mov
lret
xor
dec
cmp
int3
adc
pop
dec
fadds
fs
and
cmp
xor
je
mov
call
cmpb
jno
mov
push
inc
into
add
fcoml
adc
xchg
sbb
sbb
and
pop
push
addl
testb
sbb
fsts
cmp
outsb
and
lret
mov
and
test
push
xorl
cmp
adc
add
jle
or
nop
leave
icebp
adcl
inc
push
xor
shr
mov
in
xchg
call
inc
loopne
add
cs
movsl
pop
xchg
add
dec
push
gs
xchg
les
add
rcrb
decl
jo
sub
pop
jb
add
mov
or
dec
xor
cmp
dec
add
pop
sbb
push
xchg
and
sahf
nop
or
call
nop
push
test
mov
add
and
loopne
or
jo
stos
mov
es
test
pusha
bound
pusha
push
mov
js
ret
sub
mov
add
adc
xor
rorb
mov
nop
push
rclb
dec
call
push
addl
push
nop
or
adc
mov
cmpsb
dec
mov
or
push
sahf
or
bound
ficompl
mov
or
dec
jbe
xchg
insl
fwait
cmp
or
nop
inc
push
fadds
out
and
or
rclb
xchg
mov
or
stos
xchg
inc
push
cmpsb
add
mov
adc
int3
scas
ret
add
aam
inc
jbe
push
sub
dec
bound
add
sub
jp
mov
xor
rorb
lock
mov
adc
xchg
sub
push
push
and
mov
sbb
mov
push
xor
ljmp
ds
mov
in
inc
mov
sbb
xchg
stos
mov
mov
or
fs
add
sbbb
cmpsl
nop
lock
lods
mov
or
sbb
rorb
adc
orb
les
cs
lcall
dec
subb
loopne
dec
or
add
xchg
cmp
xor
fadd
rol
or
inc
nop
nop
adc
xor
sbb
es
adc
andb
adcl
inc
bound
scas
and
mulb
jge
pusha
and
pusha
jo
add
xchg
ret
pop
ss
xchg
mov
mov
mov
rclb
ret
push
fiadds
xchg
xor
sahf
mov
sbb
pushf
sub
pop
mov
add
sub
inc
pop
adc
je
loopne
sbb
push
push
scas
cmpsb
test
sub
push
push
push
ret
sbb
movsb
and
fsub
sbb
push
pusha
test
jl
out
inc
pusha
lcall
and
pop
mov
adc
int
xor
push
inc
lock
adc
mov
cmp
cmp
xchg
js
mov
cltd
dec
or
and
inc
mov
cwtl
xchg
adcb
pop
mov
mov
lcall
or
sar
add
decl
sub
sub
or
cli
jle
adc
lcall
push
in
enter
add
xor
xor
popa
lods
mov
push
or
sub
jp
sahf
add
fs
in
push
sbb
clc
sbb
and
fs
clc
or
sbb
mov
mov
nop
call
mov
sbb
and
add
inc
nop
sub
jne
sub
ficompl
xchg
call
lods
loope
cmp
dec
shll
and
add
dec
inc
mov
xchg
mov
xchg
or
pop
add
fidivrl
pop
or
push
sbb
es
les
nop
push
rolb
or
loope
push
sub
in
push
sbb
fcomps
mov
push
adc
and
push
pop
stos
or
mov
test
clc
ljmp
fcomps
cli
xor
inc
out
cmpb
add
ss
adc
xor
mov
add
cmp
push
loope
mov
add
ss
ret
idivb
stos
jl,pn
lret
adc
dec
cwtl
int3
sub
add
dec
jo
cmp
addb
xchg
adc
mov
clc
push
cmpsb
inc
push
or
loopne
or
jle
xchg
loopne
adc
push
add
fs
rorb
fimull
and
adc
cwtl
andb
mov
dec
into
shrb
enter
dec
sbbb
ror
lcall
or
sub
pop
mov
inc
hlt
inc
xchg
cmp
sarb
ss
jo
add
cwtl
push
sbbb
es
clc
mov
mov
and
mov
pop
push
pop
push
push
adc
mov
add
mov
mov
sbb
dec
int3
mov
test
mov
out
add
inc
push
rolb
addl
je
mov
mov
test
dec
cmpsb
push
mov
mov
test
sbbb
cwtl
dec
xor
mov
add
dec
or
pushf
push
leave
scas
cmp
jo
jne
sbb
push
cmp
push
xchg
mov
xor
push
mov
xor
gs
bound
cwtl
stos
or
inc
mov
mov
and
mov
orb
outsb
xor
adcl
loop,pn
xor
lret
mov
and
adc
cmpsb
sub
mov
push
adc
cmp
add
into
test
adc
and
ds
ljmp
pop
sbb
sbb
add
xor
xor
push
push
xchg
inc
and
inc
shlb
nop
pop
lcall
cmpb
lret
or
pop
pop
and
adc
je
cmp
lcall
pusha
clc
pop
addb
cld
inc
into
xor
je
sbb
sub
mov
shlb
mov
sbb
sbb
adc
or
pop
incb
sahf
jo
adc
push
out
mov
jl
dec
or
add
or
jb
push
inc
and
or
lcall
sbb
mov
adc
xor
xor
add
cmp
add
outsl
push
and
mov
or
loope
push
push
or
cmp
aad
or
add
loopne
push
sub
sub
pusha
pusha
inc
xchg
sbb
dec
mov
cmp
ficoms
rcrl
loop
push
cmp
fs
sub
xchg
scas
push
cltd
add
insb
into
mov
mov
cli
loop
push
test
dec
jmp
adc
inc
mov
and
fcoml
addb
adc
sub
out
mov
and
sbb
ret
pop
xchg
mov
and
pusha
rorb
pop
pusha
out
sub
aaa
lcall
and
pop
push
push
js
ds
addb
out
andl
cmp
mov
sahf
mov
and
mov
test
sbbl
jl
rorb
and
cmp
je
add
add
clc
or
loope
sbbb
adc
fsubs
js
loope,pt
fimull
dec
sbbl
sbb
movsb
sbb
test
sbb
cltd
inc
and
dec
shlb
sbb
es
mov
fisubl
adc
add
pop
add
adc
and
xor
test
add
push
sbbl
xchg
cli
or
inc
test
sub
add
push
mov
inc
addl
aam
loope
rclb
xor
sbb
repnz
sbb
add
loopne
add
pusha
fs
push
mov
inc
inc
mov
test
inc
xchg
add
pusha
jb
stos
add
fiaddl
pop
dec
or
push
sahf
out
or
adc
xor
mov
mov
test
add
xchg
add
out
nop
push
dec
popa
xchg
stos
ljmp
pop
dec
jo
adc
in
adc
es
add
or
and
rol
addb
adc
ret
add
add
add
outsb
mov
dec
lods
inc
pusha
push
push
pusha
cwtl
sub
rcl
push
or
pusha
lods
sbb
popa
push
mov
rcl
adc
push
loopne
or
and
shrb
mov
push
or
cmp
add
test
repnz
dec
dec
sub
nop
sub
mov
jo
dec
dec
je
dec
xlat
dec
xor
addb
cld
inc
add
push
dec
and
push
and
adc
pop
movsb
loope
sub
add
pop
ljmp
sbb
add
fs
inc
push
push
adc
adc
adc
and
mov
add
or
cmp
rcrl
lock
jp
mov
gs
lock
adc
movsb
push
sbb
jb
sub
jbe
dec
and
shrb
add
andb
mov
loopne
cmp
or
or
jle
mov
fadds
or
lret
fs
or
insb
shlb
add
adcl
and
shr
fiadds
ret
push
push
sbb
pop
push
sbb
xor
cltd
cmp
out
or
mov
or
inc
xor
cwtl
cmp
pop
adc
cmp
sbb
add
inc
sub
and
dec
enter
jne
push
adc
data16
inc
loope
sbb
inc
add
mov
xchg
dec
and
mov
into
push
rorb
mov
test
sbb
cs
cmp
inc
inc
into
add
nop
pop
sbb
inc
inc
imul
andb
adc
call
mov
jo
and
inc
out
xchg
sbb
xchg
sub
sbb
add
mov
xchg
insb
enter
lock
and
push
push
dec
mov
rclb
sub
jbe
push
lcall
mov
insb
lret
add
xchg
lods
loopne
fcoml
mov
xchg
and
bound
push
cmp
pop
adc
mov
inc
testb
push
mov
data16
mov
adc
inc
mov
sbb
jbe
dec
mov
inc
mov
inc
sub
push
cmp
loopne
cmpsb
jb
cltd
ljmp
mov
adc
mov
add
cmp
or
push
pop
sar
jp
arpl
cmp
and
xchg
xchg
and
push
mov
xchg
dec
and
add
test
xor
xor
sbb
sbb
inc
xor
into
ret
pop
cmpl
testb
dec
pusha
inc
int
movsb
andb
adc
push
and
test
xor
cmp
pushf
push
imulb
inc
xchg
sbb
and
fcoms
and
jbe
or
xor
loopne
add
cmpsb
push
add
scas
sbb
xchg
loop
inc
pop
dec
or
mov
inc
xchg
mov
push
js
popf
adc
push
sub
pusha
call
hlt
int3
sbb
jb
add
lock
mov
shlb
shlb
loopne
and
jp
test
inc
xchg
xchg
stos
add
loopne
inc
sbb
orb
inc
mov
adc
movsb
lock
push
add
cltd
inc
push
add
lods
mov
mov
add
or
add
enter
dec
and
xor
mov
mov
push
xor
push
or
lcall
ret
stos
mov
jbe
int3
xchg
jne
inc
and
push
dec
mov
enter
pop
inc
sub
or
push
scas
dec
loopne
je
add
pushf
or
add
outsb
or
inc
jo
xchg
or
test
adc
ficomps
sbb
xor
add
fiadds
xor
add
stos
mov
or
mov
add
push
sub
or
xchg
push
loopne,pt
xchg
inc
and
jp
dec
mov
rolb
inc
out
ret
push
outsb
xor
mov
xchg
push
and
sub
dec
mov
loopne
cs
dec
shll
scas
fidivrl
mov
push
loope
fcom
mov
popa
push
or
inc
or
sbb
push
adc
pop
gs
dec
sub
push
es
xchg
xchg
cwtl
fiadds
pusha
add
add
mov
sbb
sub
and
es
xchg
or
inc
add
xchg
leave
dec
pushf
jle
xor
fisubs
lea
mov
testb
jo
adc
inc
inc
int3
sbb
jbe
mov
xchg
adc
push
ret
push
adc
rcll
mov
add
shl
push
push
sub
pop
jae
inc
mov
inc
add
sbb
jp
lods
push
pop
and
mov
add
mov
mov
mov
push
lcall
test
les
andb
cwtl
sbbl
sub
sub
xchg
lds
jp
add
mov
jae
loope
testb
dec
fdivrs
jo
sbb
js
mov
inc
mov
push
mov
pop
push
cmp
test
stos
or
sbb
cmp
pushf
push
pusha
push
sbb
xor
enter
pop
jle
shrb
mov
add
sahf
add
pop
int3
sub
scas
adc
sub
mov
js
es
xor
jbe
fmuls
sbb
jbe
dec
cwtl
push
cld
or
sbb
test
dec
sub
cmp
stos
aad
and
orb
sbb
or
subl
in
adc
adc
cmpsb
and
add
mov
test
inc
push
and
xchg
mov
and
jo
push
push
jo
lcall
ljmp
js
xchg
sbb
inc
mov
add
popa
push
mov
loop
inc
or
insb
adcb
andb
inc
rolb
or
push
push
subb
add
sub
and
loopne
pop
sbb
push
push
jge
scas
sbb
adc
lock
sbb
rcrb
inc
movsl
cld
push
data16
ret
cld
jle
cmp
insb
outsb
or
push
pusha
add
mulb
sub
rcll
hlt
mov
and
inc
and
js
pop
push
push
lcall
cmp
aam
push
loopne
rorb
cli
movsb
test
mov
push
dec
and
dec
stos
pop
shlb
dec
add
mov
adc
mov
mov
sub
inc
push
pop
pop
adc
add
and
mov
xor
push
or
sub
sbb
sbb
xchg
loope
push
xchg
add
fisubl
xchg
push
out
or
mov
incl
mov
adc
aam
push
pop
add
sbb
xor
sub
or
int3
cmpb
sbb
or
xchg
or
sbb
cmpsb
adc
sub
clc
jb
ror
and
cwtl
cmp
push
adc
cmp
sbbb
inc
xchg
add
pusha
and
and
inc
and
and
dec
fcompl
jo
sub
mov
rolb
data16
adc
sbb
or
add
lock
push
add
mov
pop
add
inc
lea
dec
mov
or
lods
movsb
mov
dec
sub
push
and
nop
sub
xor
lods
pushf
orb
out
stos
xor
push
jp
mov
in
push
loopne
into
sbb
loope
cwtl
cmp
and
cmp
mov
cs
adc
push
sub
inc
pop
ret
clc
mov
sbb
and
and
test
dec
aam
xchg
mov
js
push
stos
or
jbe
loop
and
adc
xor
ss
rcrl
ret
or
or
mov
cld
push
scas
inc
cmpb
mov
int3
xor
add
clc
xchg
clc
fs
xor
loopne
add
push
loope
mov
orl
xor
push
pop
mov
test
mov
jo
outsb
repnz
and
push
or
mov
mov
pop
add
cwtl
pop
jo
push
sub
xor
push
jbe
test
mov
push
xchg
or
hlt
xor
fmuls
fsubs
lods
push
nop
xor
adcb
pop
rclb
js
adc
aam
jo
or
sub
ret
test
pusha
xor
enter
leave
fs
push
mov
inc
add
adc
xor
sub
loopne
add
xchg
push
xor
out
add
jle
push
call
adc
xchg
test
dec
xor
ror
dec
mov
sbb
add
sbbl
loope
mov
enter
or
sbb
and
mov
inc
mov
dec
mov
inc
inc
addb
loopne
sbbl
pushaw
aam
push
pusha
ljmp
nop
mov
xchg
add
cmpsb
add
bound
call
adc
push
adc
and
sub
add
add
cltd
or
lret
loopne
sahf
loop
fstpl
adc
push
mov
in
inc
add
adc
and
lock
sbb
or
inc
and
push
push
sahf
cmp
out
or
mov
es
push
sbb
shl
leave
xor
pop
adc
mov
mov
adcl
jbe
hlt
test
dec
loop
ljmp
orb
xor
cmpsb
inc
xchg
lods
shl
andb
rolb
adc
or
sub
repnz
jo
pop
es
push
fmull
clc
adc
and
jo
xor
dec
xchg
es
es
xchg
shl
mov
adcb
pop
loopne
stos
inc
add
adc
jbe
sub
dec
and
enter
mov
sbb
push
adc
pop
scas
fs
call
jp
and
jbe
jne
sub
call
and
mov
nop
or
add
test
adc
mov
sbb
mov
xchg
push
into
pop
test
inc
jb
xor
add
dec
loopne
ret
inc
pop
pusha
in
push
xchg
loope
inc
or
cmp
inc
xor
mov
loopne
adc
mov
push
sbb
test
mov
call
and
fadd
push
sbb
leave
popa
jo
testb
push
jb
push
or
sub
enter
add
test
and
fsubl
xchg
loopne
mov
pop
loopne
or
mov
xor
jbe
loopne
fidivs
pop
add
stos
or
test
ret
adc
add
popa
dec
test
and
sbb
push
test
push
cwtl
call
int3
les
cmp
inc
test
pusha
add
out
xor
test
lret
sbb
stos
push
xchg
sub
push
test
and
push
add
or
lods
mov
inc
xchg
sbb
or
and
jno
adc
xchg
and
jae
dec
jl
cmpsb
cwtl
stos
xchg
pop
push
inc
les
lret
cmpsb
xor
lcall
enter
imul
test
xor
add
adc
gs
int3
cmp
inc
cmpsb
and
sarb
sbb
xor
mov
xor
outsb
shlb
es
pusha
stos
xor
xor
add
loopne
push
pop
xchg
and
jo
mov
xchg
lock
sbb
pop
cwtl
ds
loopne
scas
cmpsl
push
or
xor
jb
in
in
sbbb
push
or
test
or
sbb
push
push
popa
data16
mov
add
add
outsl
orb
sub
rolb
sub
aad
loopne
mov
ror
push
mov
scas
andb
les
jbe
and
add
adc
adc
test
ljmp
push
mov
push
jb
push
into
xor
cwtl
and
test
push
mov
sub
add
mov
push
adc
scas
dec
or
push
in
sbb
and
xchg
inc
aad
mov
sbb
lock
or
nop
sub
imul
scas
rolb
pushf
enter
add
mov
ret
sub
dec
push
stos
mov
add
push
fs
lret
mov
es
stos
and
cli
loop
inc
outsb
cmp
loopne
jbe
push
sbb
mov
or
sbb
add
rolb
inc
repnz
and
sbbb
or
mov
cwtl
hlt
sbbb
sbbb
xchg
add
push
adc
or
lcall
push
pop
cli
or
inc
inc
loopne
fidivl
adc
mov
xor
xor
cmpsb
lock
popa
push
mov
xor
mov
mov
fadds
and
inc
add
sbb
xorb
xchg
cmp
mov
sbb
inc
scas
out
test
push
adc
add
sub
xor
dec
je
pop
sbb
xor
inc
xor
push
loope
jb
int
dec
loopne
ds
pop
subb
mov
hlt
mov
int3
adc
sbb
out
dec
out
testb
pop
mov
mov
cmp
and
ror
mov
and
outsb
pop
inc
sbb
xor
cmp
mov
js
test
push
dec
push
cli
push
push
sub
inc
push
in
sub
sbbb
cs
and
or
pop
and
xor
mov
push
daa
ds
sub
stos
lods
sbb
test
or
add
xor
data16
or
and
inc
ret
lods
push
nop
push
or
inc
jbe
lock
loope
cmp
out
lcall
pushf
pusha
test
popa
sbb
add
ds
int3
add
sarb
aad
xor
loope
inc
or
loopne
add
xor
faddl
fadd
xor
movsl
jb
pusha
pushl
mov
sub
inc
mov
and
dec
data16
test
enter
push
xchg
popa
cmpps
push
les
push
and
adcb
add
and
cmp
push
push
or
cmp
inc
int3
sbb
xor
mov
add
mov
andb
loopne
or
cmp
dec
inc
xchg
adcb
sbb
cwtl
sbb
dec
les
scas
aam
mov
es
and
sbb
sbb
push
and
add
inc
add
test
sbb
dec
xchg
xor
or
nop
and
push
ret
adcl
jb
add
loope
out
and
sbb
sar
jo
enter
enter
imul
fiaddl
and
or
mov
push
popa
mov
push
sbb
pop
incl
add
dec
cmpsb
call
dec
rorb
inc
aad
fiadds
mov
sbb
push
push
call
mov
mov
orb
rolb
rclb
dec
test
pusha
int3
je
add
and
ret
addl
push
ss
adc
fdivl
daa
jno
orl
adc
lods
pop
mov
test
pop
inc
or
push
or
xor
push
js
cwtl
add
int3
adc
jo
rclb
sbb
sub
popa
push
sub
bound
dec
pusha
mov
push
js
andl
mov
mov
pop
cwtl
scas
inc
add
mov
into
or
push
sbb
xor
movsb
push
push
pushf
inc
add
push
cmp
out
inc
inc
add
mov
jl
push
or
sub
xor
dec
orb
cwtl
and
sbb
inc
cmp
clc
add
cmp
adc
push
pusha
cmp
inc
pop
adc
or
add
sbb
push
mov
clc
cmp
push
in
enter
mov
or
clc
push
xchg
sbb
mov
mov
loope
add
roll
push
rol
loopne
mov
and
xor
pop
int
test
mov
push
andb
and
add
mov
cmp
adc
adc
out
cmp
or
lods
sub
subb
loope
inc
mov
dec
and
push
fiaddl
and
sbb
push
dec
sbb
fmull
test
or
les
xchg
sub
add
aam
sbb
aam
mov
and
into
push
lods
and
and
push
adc
or
lcall
out
nop
xchg
mov
add
xor
cmp
mov
push
int3
pop
add
dec
icebp
sbb
lret
adc
inc
sti
nop
jne
add
inc
xchg
lret
lods
push
je
push
cmp
sub
xor
push
int3
push
adc
loop
pushf
mov
and
mov
xor
push
push
sbb
xor
enter
cmpsb
mov
add
inc
stos
testb
push
inc
mov
cmpsb
push
xor
fdivl
jae
cmp
andb
adcl
and
push
xchg
lret
adc
testb
test
dec
cmp
push
adc
cmp
xchg
inc
loope
rclb
ljmp
add
mov
add
insl
mov
mov
push
xchg
adc
adc
mov
enter
adc
adc
push
es
or
lock
pop
jl
rorb
fcompl
movl
sbb
xor
inc
xor
test
int3
and
test
push
rolb
sub
push
and
mov
mov
ret
push
xor
pop
es
andb
inc
ret
imul
xchg
inc
jo
add
add
mov
or
xor
shr
mov
ret
sbb
add
and
andb
or
xchg
mov
push
push
je
aam
jb
sub
pusha
dec
notb
add
add
mov
ljmp
xor
push
add
nop
and
jo
add
aam
and
add
fsubs
inc
aad
mov
xchg
and
or
sbbl
pushw
ds
ds
cli
jbe
fisubrl
cli
ror
and
fsubrs
and
sub
movb
pop
call
or
mov
xor
mov
push
pop
loopne
test
add
dec
inc
and
lret
sbb
loop
xor
test
and
int3
test
mov
inc
adc
jb
push
mov
push
or
pushl
sbb
insb
add
insb
add
pop
xor
xchg
xchg
add
loopne
and
pop
out
adc
sbb
dec
push
push
add
or
sub
and
mov
mov
xchg
loope
sub
inc
nop
sub
clc
add
xchg
insb
out
adc
hlt
cmp
fcoml
mov
push
leave
or
add
adc
inc
rclb
cs
xor
push
test
shlb
dec
cmp
ds
sub
nop
sbb
inc
or
out
mov
push
inc
sbb
test
out
xchg
and
and
xchg
or
faddl
add
adc
cmp
add
or
xor
mov
rorb
and
popa
adc
data16
add
faddl
aaa
int3
xchg
ljmp
adc
xchg
rorb
sbb
adc
and
add
pop
and
add
dec
js
and
sub
add
dec
mov
cmp
aad
mov
push
and
add
loopne
rclb
pop
dec
or
cmp
xor
cmp
jo
push
lcall
add
adc
xchg
scas
repnz
mov
push
test
or
enter
lods
sbb
orb
xchg
xchg
pop
fcompl
add
insb
adc
or
lcall
xor
push
movsb
data16
and
cld
xor
mov
jp
inc
and
push
fisubs
add
push
xchg
data16
enter
and
jo
mov
sub
jb
pusha
inc
adc
fs
sub
jbe
sbb
subl
addl
fs
imul
jo
test
ret
cli
pusha
xor
push
or
inc
and
call
mov
dec
and
and
es
adc
xor
fs
inc
xor
push
addb
stos
dec
and
add
cmp
xchg
xor
sbb
push
xchg
and
pop
and
ret
xor
and
test
mov
les
and
xor
rorb
push
inc
and
or
scas
pop
push
and
add
je
inc
and
add
bound
pop
add
adc
cmp
add
sub
jle
fs
or
or
pusha
and
lret
sahf
mov
outsb
push
les
inc
orb
lcall
sahf
and
dec
or
loope
stos
incb
mov
or
inc
mov
jb,pn
pop
and
xchg
or
loope
test
test
xor
dec
xchg
mov
testb
pop
loope
or
push
aam
lcall
push
push
stos
adc
ret
sbb
test
inc
mov
test
mov
inc
cmp
es
add
or
cs
xor
pusha
nop
jo
push
inc
pushf
inc
pusha
pusha
lret
les
andb
insb
adc
cmpsb
sub
and
loop
or
call
adc
jbe
dec
out
data16
adc
inc
jb
inc
mov
faddl
mov
mov
inc
sub
out
sbb
sbb
cmp
adc
sarb
in
xchg
sbb
in
push
inc
cwtl
cmp
jo
sbb
push
addl
pop
pop
dec
sub
push
adc
and
add
adcb
cwtl
or
les
add
rcr
push
and
nop
sbb
cltd
mov
lods
lcall
call
xor
inc
js
je
int3
and
ljmp
lea
addb
xchg
fmuls
dec
cmpb
dec
loopne
adc
mov
adc
push
sub
aam
lret
into
pusha
sbb
push
and
or
xchg
inc
outsb
dec
lret
int3
and
sub
mov
add
rcrb
push
xchg
sub
mov
daa
add
xor
inc
mov
inc
ret
adc
leave
xchg
xchg
jl
xor
push
mov
or
in
push
inc
lcall
mov
out
int3
mov
sub
sub
inc
push
inc
insb
add
sbb
and
sub
clc
adc
mov
mov
inc
adc
or
and
or
sahf
pop
int
or
inc
adc
or
ret
enter
dec
sub
mov
mov
sub
les
lcall
xor
mov
mov
call
sub
sbb
adc
hlt
or
pop
les
into
loopne
popf
push
flds
hlt
push
pop
nop
xchg
fs
add
add
fdivr
adc
add
sub
nop
xor
jl
pusha
inc
dec
insl
pop
sbbb
xchg
add
shl
xchg
loopne
imulb
dec
sub
xor
pop
jbe
add
jecxz
movsb
add
call
rclb
jb
mov
and
adc
ljmp
sbb
and
lods
lret
push
fs
cmpsl
fwait
inc
pop
xchg
sbb
add
and
mov
dec
pop
jo
cmpsb
xchg
ret
push
sub
ss
addb
push
add
dec
jp
hlt
jle
adc
add
add
xor
sbb
mov
jo
or
xchg
aam
stos
push
push
outsb
cmpsb
sbb
rcrb
aam
sbb
mov
nop
sbb
dec
out
sbb
lret
sbb
cltd
add
push
mov
nop
shlb
xchg
push
fs
pushf
push
or
inc
push
inc
xor
loopne
stos
dec
adc
dec
sahf
loop
xorb
cmp
sub
inc
ret
xchg
dec
push
nop
ljmp
sub
dec
or
addl
sbb
jae
sahf
nop
sahf
nop
add
or
and
lcall
mov
adc
stos
aam
nop
pop
mov
jp
je
adc
adc
sbb
or
test
pusha
insb
adc
mov
adc
adc
aam
inc
es
adc
xor
cltd
ret
and
add
and
shl
scas
cmp
out
mov
jp
or
sbb
sub
mov
pop
cli
sbb
es
and
and
inc
and
push
pushaw
pop
adc
or
orb
mov
data16
pushf
js
mov
or
fmull
test
xchg
mov
adc
xchg
loope,pn
mov
andb
shr
xor
mov
in
enter
jmp
mov
add
add
sarb
inc
loopne
pop
lcall
xchg
insb
xchg
lret
push
inc
fsubs
mov
enter
adc
xchg
adc
in
fcompl
jb
or
mov
call
mov
xchg
dec
repnz
push
pusha
dec
aam
or
adc
cs
push
jl
adc
push
mov
cmp
push
xlat
add
inc
push
sahf
into
and
cli
xchg
push
and
ficoms
fsubr
xchg
add
ret
enter
mov
lds
inc
sahf
fsubs
inc
inc
int3
jle
inc
push
adc
push
add
xchg
mov
call
test
cmp
loop
nop
icebp
xchg
add
mov
stos
cs
xorb
xor
add
insb
aaa
push
in
or
inc
enter
sub
dec
pusha
add
push
test
test
adc
or
push
jo
mov
movsb
pusha
adc
pop
or
pusha
push
xchg
xchg
xor
mov
stos
mov
lcall
mov
push
loopne
mov
les
push
mov
push
lock
pop
push
scas
dec
fidivrl
dec
or
sbb
loop
adc
es
mov
dec
or
push
sbb
vcvtsi2ssl
mov
xchg
jle
mov
lret
mov
adc
enter
scas
andl
clc
mov
xor
bound
add
xchg
dec
xor
pop
cmp
mov
inc
jo
rclb
sub
or
dec
mov
jle
mov
addl
stos
outsb
sbb
jo
push
rcr
je
orb
add
or
test
cmp
hlt
sbbb
popf
jo
fiadds
adc
cwtl
clc
lret
push
mov
enter
rcl
or
out
loop
and
and
es
call
fadds
jl
test
outsb
test
push
sub
adc
add
jo
loop
and
push
jle
push
pop
xchg
leave
faddl
or
cmp
mov
stos
rolb
shlb
dec
or
and
or
dec
jmp
cmp
inc
sbb
jo
test
mov
adcb
cmp
pop
cmp
and
or
push
xor
add
add
data16
add
enter
push
inc
js
nop
fdivs
fwait
xor
js
dec
mov
bound
or
into
les
sbb
and
sbb
jb
mov
mov
cmp
pushf
nop
adcb
ds
es
add
out
xchg
lret
adc
cmp
cmp
xor
test
out
jae
insb
lods
addr16
insb
mov
lds
and
or
or
push
push
sub
or
dec
or
mov
add
push
sub
mov
add
sbb
push
mov
jb
enter
stos
clc
add
and
sahf
or
cld
add
and
icebp
or
push
pusha
mov
add
or
sbb
mov
test
dec
test
or
loop
ret
sbb
in
dec
or
and
push
loope
ss
inc
or
pusha
into
push
inc
or
or
and
test
test
pop
loop
add
xor
add
faddl
mov
adc
pop
je
or
sub
jb
mov
or
cs
mov
xor
dec
sbb
push
dec
xor
mulb
inc
jp
es
mov
jo
ss
lret
push
inc
dec
sahf
into
sub
push
mov
dec
adc
xor
xorb
add
loop
cli
sarb
das
xchg
outsb
in
or
mov
roll
cltd
add
add
int3
add
adc
sarb
addr16
mov
jbe
xor
or
and
xor
outsb
jo
add
xor
loope
fmuls
or
ljmp
jno
les
dec
xor
push
aam
pushf
rclb
xor
mov
cmp
push
xor
popa
dec
inc
or
or
mov
scas
mov
orb
xor
push
add
add
or
loope
jo
cld
xor
or
in
ret
push
cli
add
xchg
or
jmp
test
dec
mov
pop
rcrb
xor
cmp
cs
push
es
and
pop
sub
or
push
sub
xchg
adc
cs
add
lods
dec
cmp
fsubl
add
add
data16
xchg
add
cmpl
dec
adc
shlb
sbb
clc
xor
mov
mov
pop
adc
add
insb
and
pop
inc
dec
push
or
lods
dec
push
les
push
dec
dec
add
mov
adc
and
cwtl
add
jo
subb
dec
ljmp
pop
sub
dec
and
sbb
jo
test
inc
cmp
push
out
and
pusha
out
and
cld
je
cmp
xchg
enter
push
rcrl
add
sahf
or
xor
loopne
dec
lock
mov
mov
dec
mov
sub
les
in
clc
push
insb
jae
call
add
leave
ret
sbb
xor
add
push
mov
cld
outsl
fwait
xor
outsb
dec
push
push
pushl
jecxz
mov
push
out
ret
push
add
mov
mov
pop
mov
push
outsl
add
sti
fstp
or
je
add
rolb
dec
add
je
mov
sarl
arpl
or
add
lea
push
push
sahf
clc
out
imul
mov
jge
idiv
rorb
test
inc
call
ss
xor
into
jnp
test
xor
cwtl
push
inc
mov
out
push
jb
jo
fidivs
xor
inc
xor
pusha
lock
cmp
push
inc
push
fs
in
in
rcr
pop
xlat
dec
cmp
bound
int3
mov
dec
inc
add
dec
loopne
js
push
fbstp
stc
cmp
addr16
jle
fstpt
fucomp
dec
inc
dec
dec
aam
fbld
fdivr
push
out
je
stos
add
jp
fs
dec
cmp
or
data16
outsl
mov
add
enter
pusha
shll
ret
dec
out
jp
test
test
cli
mov
add
test
add
inc
addr16
mov
rorl
cld
subb
jle
jno
js
pop
inc
jle
jne
jmp
xor
adc
inc
cmp
insb
outsl
cmp
push
dec
popa
dec
add
jb
repz
js
jecxz
sub
bound
add
ss
fdivrl
js
sti
fldt
addr16
inc
dec
pop
cmp
inc
add
inc
dec
push
mov
add
xor
jmp
testl
push
adc
iret
ss
hlt
push
sti
cmp
jne
push
jae
add
push
aam
pop
icebp
or
dec
dec
inc
inc
dec
jb
mov
cmp
aaa
jbe
push
push
aaa
mov
mov
dec
xorb
pop
mov
dec
dec
adc
push
fistps
mov
push
jae
mov
inc
decb
andb
aas
psubsw
adc
adc
jmp
jmp
mov
jmp
xor
into
and
jmp
inc
push
cmpsl
push
out
pop
cmp
js
das
mov
push
adcl
sar
pushl
mov
shr
out
dec
xor
mov
jmp
std
jmp
jmp
outsl
jg
jmp
pop
xor
and
mov
sub
or
jmp
adc
jl
movsb
in
jmp
push
pop
jmp
mov
jmp
shrl
es
adc
sbb
movsb
add
outsl
out
jmp
int3
sbb
add
jg
jmp
push
lds
jbe
clc
jg
push
jmp
jmp
int3
jmp
in
neg
jmp
jg
lock
adc
xchg
in
push
mov
jmp
cli
xchg
jmp
clc
mov
jmp
or
cmpsl
das
clc
mov
adc
outsb
mov
mov
decb
sbb
fucomip
int
ljmp
push
jmp
testb
shr
jge
jp
push
and
sti
fidivl
sub
test
pop
add
pop
fdiv
push
ds
push
push
jo
jle
in
jmp
hlt
xchg
adc
jmp
mov
mov
testb
and
xor
xchg
jmp
fwait
add
lea
dec
or
insl
call
and
in
inc
pcmpgtd
pushf
dec
repnz
shr
insb
add
pop
add
idivb
or
ret
imul
cs
in
ret
inc
jle
subl
jl
sub
jnp
shlb
idivb
jl
lcall
je
mov
int
test
and
xorl
aam
repz
jmp
push
and
into
cld
cmpsb
cmp
test
cs
jmp
mov
jne
add
adc
mov
jmp
pusha
addr16
ror
test
inc
movsl
pop
mov
into
fimuls
lret
mov
sahf
jmp
fs
add
mov
out
xor
jmp
sbb
fwait
rcrl
jo
push
dec
push
mov
push
clc
pop
insb
sub
fidivrs
or
mov
outsl
out
mov
inc
jmp
add
data16
mov
shlb
or
sub
std
lahf
mov
mov
push
cmp
faddl
outsl
adc
cs
inc
data16
add
push
loop
sbb
xchg
jle
in
cmpsb
jmp
cmp
mov
icebp
push
dec
out
dec
iret
push
stos
nop
roll
mov
les
outsl
pop
jmp
adc
pushf
mov
dec
test
out
pop
bnd
cmp
ret
adcl
mov
dec
ss
cld
push
scas
adc
fdivp
jmp
loope
dec
sbb
ss
inc
jb
cmpb
lods
rcl
jmp
pop
pop
jp
inc
jbe
cmp
ljmp
jb
dec
add
insb
mov
jecxz
mov
iret
mov
mov
or
push
add
cld
sub
push
jg
jmp
mov
popf
sub
mov
shlb
mov
sahf
push
cmp
mov
mov
imull
stos
mov
jmp
fs
icebp
jmp
ss
in
inc
xchg
mov
ss
or
in
daa
push
cld
cmc
mov
pushl
pop
jge
dec
adc
loopne
mov
jle
jle
icebp
or
adc
bnd
push
add
jne
cmp
fdivr
and
stos
js
push
mov
sti
jmp
sbb
ss
add
inc
inc
xchg
dec
add
shlb
js
push
or
and
push
lods
pop
es
aaa
mov
in
xor
pop
push
rcr
aas
xor
movsb
inc
add
in
add
cmp
stc
cli
and
sbb
in
mov
mov
sahf
nop
shll
jp
popa
dec
xchg
ss
lret
ret
fsub
loopne
sub
mov
stc
xchg
jb
jp
cmp
add
test
sbb
xchg
and
pop
push
pushf
push
push
add
lret
icebp
mov
and
pop
cld
pushf
jle
mov
sub
sahf
lcall
popf
hlt
sbb
or
mov
stc
imul
int
push
mov
sbb
jnp
std
sbb
pop
lock
pop
or
call
add
xchg
mov
scas
and
insb
std
loope
add
inc
cs
cmp
add
lahf
mov
cmpl
nop
rcr
in
cmpsb
loope
bound
push
add
or
cmp
add
sbb
jb
cmp
mov
dec
sbb
dec
iret
and
mov
mov
xchg
pop
jmp
lods
add
xor
push
clc
adc
jbe
inc
mov
fistl
or
enter
and
les
std
aaa
dec
test
cmp
cmp
subb
jge
test
sbb
pop
or
pusha
aad
xor
jo
add
xchg
mov
sub
dec
fwait
fwait
mov
aas
imul
cmp
pop
jge
mov
test
jl
pop
xchg
cmp
push
jge
call
jns
repnz
add
std
es
je
out
shrl
adc
fld
jb
pushf
jno
adcl
loopne
add
cld
sbb
jmp
push
out
jae
lods
ds
cld
jnp
call
adc
or
sub
dec
and
ljmp
insl
xchg
jp
jns
cmpsl
jl
mov
fildl
mov
sbb
nop
inc
push
lock
add
insb
pusha
icebp
cmp
outsl
push
imul
pop
xor
mov
fadd
jb
leave
scas
mov
mov
adc
push
dec
stos
loop
or
xchg
insl
mov
leave
cld
js
mov
add
in
sub
mov
fidivrl
nop
mov
inc
ficompl
push
ss
data16
and
arpl
mov
pop
pop
cli
push
mov
loopne
mov
sti
push
aad
mov
dec
test
xbegin
call
or
mov
adc
call
xor
popf
mov
push
hlt
pop
aaa
push
xor
cmp
add
jbe
mov
movb
xchg
mov
mov
pop
mov
mov
lods
jmp
mov
jle
add
sarl
sbb
jns,pn
dec
lock
jp
push
mov
loopne
sub
bound
jle
xchg
bound
test
shl
add
outsl
mov
push
idiv
sbb
cmpb
or
add
xchg
dec
fsubrl
mov
fimull
das
push
jmp
pop
push
jle
sbb
xor
aad
das
xchg
inc
sarl
mov
and
dec
and
mov
sbb
nop
or
mov
xor
add
pop
xor
loop
stos
add
or
dec
cltd
loop
inc
lret
shlb
cmp
mov
dec
add
push
rcrl
arpl
cmp
mov
jg
dec
jbe
add
inc
in
cmpsb
insb
ret
insl
fsubs
xchg
mov
inc
clc
ljmp
mov
mov
add
mov
inc
dec
inc
int3
dec
push
add
pushl
dec
addb
shll
add
ja
dec
add
je
push
js
jo
lods
dec
add
decl
inc
pop
inc
popa
dec
add
dec
push
jbe
mov
adc
push
inc
add
xor
and
add
jbe
out
jl
xchg
out
mov
adc
ljmp
int
jle
xor
cld
push
push
push
imul
idivl
js
cmp
or
push
arpl
mov
dec
mov
dec
push
xor
xor
pop
push
out
dec
inc
insb
insb
insl
xor
sbb
out
dec
mov
fcmove
es
or
push
and
push
pminub
inc
push
fistl
pushl
add
adc
inc
dec
hlt
inc
inc
inc
jl
lock
stos
mov
dec
lea
push
lea
cmp
loop
bound
fldt
ret
inc
inc
add
cwtl
add
sti
sahf
pusha
arpl
push
sbb
xchg
out
xor
dec
cwtl
dec
hlt
dec
pop
mov
sub
mov
push
in
in
pop
outsl
cmp
aas
xchg
bound
pop
cld
filds
sub
inc
dec
or
dec
jl
and
push
adc
xlat
clc
pop
imul
dec
fisubrl
jno
in
jno
inc
add
adc
enter
sub
sub
imul
add
fmull
add
cmp
pop
or
jne
jmp
jecxz
adc
or
add
sbb
repnz
push
lds
popf
loope
mov
add
test
mov
xchg
mov
inc
add
dec
sar
loop
dec
jno
pop
inc
add
clc
mov
mov
fcmovu
fs
pop
cli
loope
fimuls
push
dec
xchg
shll
cli
lds
aam
insl
js
stos
fucomip
div
dec
dec
je
jb
and
push
mov
mov
cs
mov
pop
sahf
outsb
xchg
pop
je
inc
enter
or
xchg
test
push
jmp
pop
rcr
jo
pop
dec
inc
add
in
cmp
inc
or
lock
dec
aaa
int3
bound
shll
xchg
test
and
bound
lret
mov
mov
add
cmp
mov
pop
push
movsb
fs
push
je
adc
or
jae
add
fs
add
mov
xor
in
mov
inc
lods
adc
pusha
xor
std
mov
cmp
push
js
and
data16
je
mov
aad
decl
push
jmp
inc
stc
call
pop
out
cmp
ret
addr16
sub
or
dec
dec
push
jae
lcall
jnp
fs
rclb
mov
clc
dec
or
shrl
push
insl
dec
jno
mov
add
add
incl
sbb
mov
sbb
movb
jo
mov
sub
add
jo
stos
jl
cwtl
pushl
mov
cmp
rolb
ror
mov
loope
mov
rcrb
jmp
mov
sarl
inc
mov
push
mov
stos
icebp
xchg
mov
jmp
push
xor
xor
xorb
push
test
inc
enter
push
cli
jmp
mov
jo
jle
sub
add
das
ret
pusha
jmp
jmp
mov
mov
insb
neg
or
aad
cwtl
aam
mov
insl
mov
push
bound
push
test
mov
ret
add
les
mov
jo
jbe,pn
fidivl
dec
jmp
jg
les
mov
fiaddl
or
movd
int3
dec
push
ret
dec
dec
add
test
sub
jmp
jmp
mov
inc
loopne
lcall
push
call
mov
mov
outsb
push
mov
jo
mov
adc
add
xchg
fiaddl
xor
inc
sahf
pop
sbb
jmp
sbb
fildll
jg
movsb
nop
andb
imulb
addb
mov
insb
sub
jbe
addb
dec
je
add
or
cmpsb
mov
es
je
ljmp
jmp
fs
jmp
insl
int
adc
pop
mov
add
push
mov
and
mov
and
pushf
ljmp
aaa
or
sbbl
aaa
lock
pop
or
mov
outsb
rorb
xchg
addr16
push
adc
mov
and
aad
testb
jbe
jg
shll
sahf
push
cwtl
in
cmpsb
lods
jmp
es
call
fsubrs
mov
cmp
pop
fldt
xor
or
and
push
mov
ret
jne
jmp
sub
xchg
mov
cltd
sar
jo
mov
mov
and
int3
pop
scas
or
ja
inc
loope
fsubrp
gs
mov
add
and
cltd
mov
cs
ja
loope
pop
repnz
sub
adcb
cld
sbb
xorb
cmp
pop
adc
mov
popa
stos
andl
ret
mov
sub
push
stc
pop
cld
in
mov
mov
fbstp
in
jg
in
mov
ret
shr
push
xchg
call
aaa
stos
daa
push
nop
mov
dec
ja
ja
test
out
add
push
mov
std
fisttps
fdiv
jmp
add
mov
fdivrs
xchg
jg
cwtl
stos
xor
pushf
test
das
jp
and
jne
mov
mov
roll
jp
popa
ds
lcall
xchg
jb
test
jg
aas
into
jae
stos
jmp
fsts
scas
add
not
jg
bound
ds
lods
in
mov
pop
or
sub
dec
mov
sub
jmp
clc
adcb
les
mov
mov
jb
add
cwtl
cmp
or
or
cs
stos
cwtl
jmp
rcr
xchg
sub
mov
negl
loope
mov
mov
stos
xor
hlt
rcll
pop
xor
mov
mov
cltd
outsb
xchg
mov
testb
notb
adc
mov
or
mov
adc
sahf
push
negb
cmc
aad
lahf
pusha
jg
mov
sbb
icebp
or
xchg
in
je
add
aas
add
lea
xor
mov
les
std
mov
cmp
mov
in
add
or
xor
sub
out
les
lahf
out
lods
mov
mov
fmuls
push
lods
mov
repnz
fisttps
and
and
mov
subl
inc
push
pusha
mov
testb
dec
inc
sbb
cmp
mov
mov
out
imul
mov
ret
jl
fmuls
xchg
jno
lret
adc
adcb
pop
jo
imul
inc
jmp
or
sbb
sti
xlat
cli
popf
cmp
mov
cmp
and
sti
scas
cli
ds
xor
inc
mov
adc
sbb
push
adc
or
int3
sbb
add
shl
mov
pop
and
pop
mov
dec
fsubrl
mov
add
sti
cltd
dec
pop
stos
mov
mov
cmp
pop
cmp
adc
xor
jecxz
dec
dec
shl
jmp
je
cli
ja
ficoml
add
mov
lds
add
mov
push
mov
jmp
repnz
clc
jg
push
mov
jmp
dec
mov
push
pusha
stos
mov
jge
andb
ret
jno
cmp
and
or
andb
cmp
sbb
ficompl
mov
outsl
aam
call
sub
andl
xor
ret
mov
scas
jle
and
fucomi
shll
push
lock
out
jo
cwtl
jb
add
hlt
rcll
out
or
cmp
push
loopne
inc
in
adc
inc
cli
outsl
imul
adc
mov
add
jb
knotb
push
dec
test
pop
push
jo
aam
decb
adc
xchg
out
cs
in
add
jb
jb
or
decl
sub
fmull
leave
dec
pop
jo
add
hlt
add
sbb
adc
and
and
das
lret
leave
ds
lock
loop
jns,pt
push
imul
mov
sbb
jl
dec
xchg
xchg
in
push
pop
aam
das
aam
pop
mov
aas
cmc
adc
cmc
xlat
jmp
aas
push
in
sub
jb
subl
pop
loopne
mov
push
fmull
mov
aam
cmp
cmp
fwait
orb
lcall
push
imul
or
push
add
lods
mov
mov
jmp
ret
mov
andb
push
adc
adc
or
mov
jge
loopne
fwait
mov
ljmp
fidivrl
jmp
loopne
shlb
ss
pushf
ret
inc
or
add
mov
call
push
test
pop
es
aad
js
mov
xchg
adc
loopne
dec
jo
xor
aad
jnp
push
dec
push
fimull
lret
xor
inc
and
pop
testb
pop
sub
pop
sub
aad
fildll
pusha
jge
fisubrl
mov
push
loopne
mov
xorl
adc
mov
add
pop
icebp
or
push
cs
loopne
push
pop
lock
pusha
mov
pop
fdivrl
fdivs
add
fcoml
cld
loop
fsubrs
mov
repnz
xchg
jl
sar
gs
mov
stos
lea
out
call
push
pop
mov
mov
mov
jnp
pop
pop
push
loopne
push
pusha
mov
adcb
sub
xlat
adcl
adc
sbb
loope
outsb
adc
shll
add
ja
mov
push
mov
push
rolb
inc
icebp
push
loopne
mov
dec
jo
jno
pcmpgtb
cmp
xor
inc
add
lcall
push
mov
push
mov
dec
dec
insb
inc
push
mov
jns
xlat
es
adc
push
add
push
js
inc
test
push
repz
stos
inc
test
out
inc
push
ljmp
ljmp
add
sub
sbb
inc
out
pop
inc
dec
in
xor
icebp
lahf
mov
inc
dec
popa
dec
inc
dec
add
jnp
lahf
imul
insl
add
fdivrs
sbb
add
xchg
pop
push
add
inc
add
movsb
mov
inc
push
imul
sbbb
push
lods
jmp
xor
aas
jae
xor
push
in
rorb
test
ljmp
cmp
aaa
mov
add
test
cmp
sbb
xor
dec
addr16
cmp
not
mov
xor
outsb
push
or
pushl
sar
pop
cmp
inc
push
jbe
jb
dec
pop
inc
dec
scas
ret
xor
add
testb
lcall
inc
mov
pop
mov
xchg
sub
fimull
push
sarl
inc
push
data16
outsb
dec
or
call
in
push
push
lea
pop
movlps
mov
add
paddusw
add
push
data16
dec
je
imul
fildl
and
outsl
dec
aaa
jl
jl
mov
out
push
inc
pop
roll
clc
outsb
add
push
mov
mov
js
jnp
in
outsb
push
push
pop
ret
incb
mov
add
sti
inc
bnd
dec
inc
rolb
clc
inc
outsl
ja
jle
dec
mov
mov
popa
leave
inc
push
inc
or
inc
inc
xor
outsl
inc
sub
add
sbb
nop
inc
xchg
subl
inc
dec
das
push
test
insl
push
dec
leave
push
repnz
or
rclb
push
loop
clc
mov
outsb
xor
inc
sbb
pop
dec
xor
in
inc
pop
add
dec
or
sbb
inc
push
aad
arpl
and
movsl
fbld
inc
dec
dec
fwait
nop
xchg
cmp
and
mov
xor
shlb
outsl
inc
mov
mov
int3
push
loope
jp
test
addr16
dec
ficoml
adc
dec
mov
jl
jmp
adc
push
sbb
adc
lock
pop
mov
out
dec
insl
je
xor
and
inc
jo
inc
les
loopne
xchg
lds
addr16
aaa
jo
loope
sti
shrb
add
pop
rorl
xor
and
in
dec
add
cmp
push
addr16
sub
stos
push
fiadds
popf
sbb
mov
int
stos
sti
in
jno
sbb
push
jp
shrl
pop
add
push
ja
fistpll
mov
fistps
fdivr
out
inc
inc
imul
inc
fsubl
je
ljmp
push
push
dec
testl
inc
push
cmp
inc
push
push
push
push
inc
mov
mov
sub
popa
jmp
test
push
sbb
inc
jns
lahf
stos
out
jnp
xor
nop
dec
je
imul
ds
inc
dec
xor
jle
clc
xor
pop
aad
outsl
jo
into
dec
in
cmp
inc
mov
sti
inc
xchg
jmp
inc
xchg
jmp
das
iret
add
dec
scas
xlat
rol
ja
cmp
loopne
outsl
jb
bound
loopne
jmp
jo
aad
cwtl
mov
sbb
cmp
clc
cmpsb
fs
push
push
iret
jne
push
jae
les
mov
xchg
mov
iret
mov
js
inc
pop
dec
push
mov
dec
mov
shr
shl
mov
add
inc
cmp
push
pusha
push
aaa
mov
inc
push
lock
xor
out
mov
sahf
insb
push
xor
xor
rorb
gs
mov
xchg
in
scas
inc
dec
push
jns
push
lock
xchg
jbe
dec
inc
jmp
jno
fmull
fisttps
outsl
bound
loope
add
gs
repnz
insl
lock
adc
clc
inc
repnz
mov
arpl
sbb
inc
push
inc
shl
out
in
dec
insb
push
add
loopne
jbe
pop
jl
add
add
sub
fimuls
push
jmp
dec
dec
push
dec
dec
push
bound
adc
ret
fs
addb
dec
cld
pop
add
dec
movsb
mov
push
ret
insb
push
insb
dec
lods
xor
or
and
dec
imul
int3
jo
mov
xor
inc
push
xor
icebp
loope
dec
jmp
mov
pop
arpl
jmp
movsb
inc
jbe
lock
push
jmp
inc
dec
cmp
out
inc
pop
andl
cmpsb
pop
popf
cmc
std
pop
push
fs
jo
push
or
call
xchg
shl
mov
push
lea
add
push
fistpl
or
pop
and
jmp
ret
dec
lock
bound
jne
ret
data16
rclb
bound
repnz
dec
hlt
lds
je
push
push
push
dec
fimuls
xchg
push
jnp
xchg
call
dec
lods
fstpt
cwtl
xor
repnz
push
dec
mov
inc
push
ret
popa
dec
pop
cmp
ss
icebp
inc
mov
dec
idivb
lock
jns
xor
cmp
inc
inc
push
repz
or
jbe
test
insl
clc
nop
jne
data16
or
jge
jno
push
push
aaa
dec
in
xchg
clc
jmp
jno
jo
inc
or
pop
loop
inc
push
push
add
push
outsl
addr16
fwait
rolb
fldl
out
mov
je
flds
sbb
subb
js
push
jno
pop
out
or
lods
jae
loop
xchg
dec
inc
push
push
inc
lret
jbe
fadds
call
mov
add
ds
loope
xor
sub
ss
add
xor
xchg
nop
psubw
inc
js
mulb
inc
imull
cwtl
lret
mov
test
popf
xor
fimuls
sbb
sarl
add
pop
push
cli
pop
lock
add
add
aas
adc
jne
loopne
inc
inc
popa
addr16
repz
cmp
xor
add
push
in
in
js
push
dec
das
fnstenv
sbb
mov
fs
dec
dec
lock
and
dec
ss
fisttps
aaa
sbb
inc
push
push
pop
out
pop
test
inc
dec
int
jp
test
or
jae
fs
cld
mov
sahf
dec
jno
cmp
jl
cld
pop
push
popf
mov
and
pop
xor
dec
dec
pushf
xchg
ficoml
pop
or
jle
add
test
adc
lahf
in
mov
mov
mov
mov
jg
pushf
xor
inc
data16
pop
xchg
xor
loope
jmp
dec
movsb
outsl
or
mov
or
add
jmp
adc
cld
xchg
mov
sbb
test
push
push
inc
mov
mov
or
cli
fbstp
mov
inc
out
insb
add
shlb
test
scas
xlat
shl
jmp
into
xor
mov
inc
jmp
lds
ret
jmp
lock
jo
xchg
mov
or
jmp
mov
push
incl
in
mov
inc
mov
jecxz
add
jmp
or
push
xor
inc
push
test
clc
fistps
sbb
pop
bnd
and
push
leave
cmp
adc
inc
mov
pop
je
jecxz
mov
inc
inc
fnstcw
adc
fwait
icebp
push
std
dec
aas
call
jmp
mov
adc
ss
decb
lock
cmpsb
ret
sbb
jle
push
lret
cmpsb
sar
push
pop
or
outsb
mov
jmp
pushf
jmp
fwait
je
add
jmp
xchg
fdivrl
mov
arpl
adc
push
or
or
mov
dec
lock
jmp
pop
sbb
shll
jmp
clc
ret
jae
aas
push
add
pop
sub
xchg
scas
dec
sub
or
xor
mov
mov
ss
scas
and
push
movsb
dec
jno
or
mov
aam
addl
lret
orb
jmp
push
xchg
and
adc
clc
add
jmp
pusha
loopne
sub
jmp
sti
sbb
inc
xor
cs
lods
jb
cltd
inc
jmp
xchg
jle
mov
mov
sub
dec
loopne
add
ficompl
lret
ret
fucomip
jg
ds
or
ds
aaa
jmp
mov
cld
add
dec
pop
ljmp
gs
loop
outsb
inc
lock
loopne
mov
cmp
push
xchg
inc
out
cli
aas
add
loop
inc
cmp
aas
lcall
pop
pop
mov
js
out
call
adc
call
push
cmp
mov
and
cmpsb
inc
jbe
adc
gs
orb
adc
test
push
mov
std
adc
push
jae
mov
sbb
xor
jns
and
ret
xor
adc
or
cmp
xchg
clc
xchg
mov
arpl
test
adc
sbb
lret
jo
adcb
enter
or
or
mov
pop
cltd
adc
jle
xor
mov
lock
cwtl
fimuls
es
cmc
std
adc
jmp
and
outsb
xchg
and
gs
hlt
in
shrb
icebp
jno
or
sbb
test
fidivs
addr16
arpl
inc
fsubs
ds
lcall
inc
add
pop
pop
adc
fstps
rep
shrl
xchg
cmp
jo
cld
pop
fldl
jb
mov
mov
and
out
dec
inc
jbe
mov
sub
les
cld
add
mulb
lcall
mov
ss
mov
adc
in
mov
cli
movl
in
pusha
push
loop
cmp
movsl
jb
arpl
ret
mov
or
jmp
std
pop
movsb
pop
insl
xor
lods
push
fcoms
inc
addr16
ss
sarb
mov
add
clc
and
loopne
sahf
mov
adc
je
into
pop
and
aad
xchg
push
rcrb
cmpsb
cmp
and
leave
mov
dec
and
pop
adc
stos
insl
adc
add
add
popa
test
push
lods
or
pop
cmp
sub
rcrb
inc
and
fnstcw
push
push
jecxz
sahf
test
ds
fbstp
dec
add
xchg
sub
arpl
cli
scas
push
inc
sbb
dec
mov
jecxz
inc
dec
mov
fucomp
or
xor
pop
das
cli
int
bound
cmp
repz
loope
loopne
mov
shrl
fdivrl
cwtl
xor
movsl
addb
inc
jnp
sti
xor
xor
cmp
dec
adc
cmpsb
repz
sub
mov
fimull
sub
popa
xchg
lock
lock
pop
push
loopne
push
cli
pusha
inc
mov
lds
outsl
xchg
jne
mov
fwait
cmp
bound
xor
mov
dec
sbb
and
cmpsb
dec
popa
push
pushf
sbbb
inc
xchg
fisttpl
std
mov
call
pop
inc
mov
push
xorb
stos
clc
shr
mov
in
mov
jg
and
es
pop
mov
je
out
fbld
fisubl
inc
adc
loopne
test
or
jmp
dec
dec
add
push
ffreep
jl
dec
jp
mov
mov
mov
mov
loopne
stos
sub
test
ds
sahf
clc
add
ror
data16
clc
or
scas
mov
das
clc
xchg
cld
sarl
test
cmc
sahf
jmp
xchg
and
out
xchg
insb
repz
add
push
mov
jecxz
in
fdivrl
in
jmp
cs
or
cmpsb
mov
rolb
lret
adcl
push
jno
in
inc
pop
je
aaa
in
jp
sub
inc
sub
shrl
bound
inc
sbb
pop
popa
test
cmp
sub
and
jne
adc
push
scas
xor
pop
xlat
outsb
movsb
sbb
mov
add
add
in
sub
insl
push
jle
xorb
jmp
add
or
pop
lret
aam
jns
xchg
stos
fimuls
inc
mov
ss
scas
adc
adc
jle
ljmp
movsl
scas
jp
jo
jge
xor
mov
loopne
mov
bound
loopne
inc
push
testb
mov
push
jo
jb
sahf
pop
je
fcmovne
add
and
push
test
scas
stos
stos
mov
dec
pop
inc
pop
xchg
add
aad
test
xor
and
into
test
sub
shl
icebp
sub
repnz
negl
pusha
test
dec
jo
and
xchg
xchg
and
mov
call
jo
mov
adc
sbb
arpl
clc
divb
fisttps
andb
enter
cld
pop
clc
sub
lock
loopne
add
mov
sbb
push
std
add
test
cmp
cpuid
add
mov
cmc
mov
rorl
shlb
pop
mov
fstpt
mov
lea
jp
mov
push
lods
rorb
stos
xor
cwtl
int3
jb
sub
dec
popa
icebp
pop
insl
cmc
adc
ror
push
or
mov
jp
inc
push
sub
xchg
pop
or
push
push
loope
notb
mov
and
lods
shlb
shll
test
mov
and
push
mov
or
fstpt
sbb
sub
lods
add
addb
push
push
js
movsl
mov
cs
aad
jo
xchg
adc
fs
out
add
faddl
mov
sahf
call
add
sub
cmp
adcl
push
jp
jb
mov
push
std
rolb
or
inc
js
sbb
xchg
push
dec
and
pop
push
fcomps
sbb
fidivrs
notl
outsb
cmp
inc
hlt
icebp
rcr
push
adc
add
cmp
fs
and
xor
ss
pop
loope
fimuls
cli
aam
xor
pop
mov
mov
pusha
into
and
dec
push
vmread
sbb
addl
xchg
shlb
test
push
dec
or
inc
sbb
stos
mov
adcl
cli
push
jp
push
push
rolb
sbb
mov
mov
cmp
jbe
pusha
xor
adc
jmp
or
sbb
rol
xor
inc
mov
fisttps
cld
push
pusha
movsb
pop
jnp
add
push
push
je
mov
pop
mov
lock
adc
mov
dec
push
or
rcrb
or
cs
call
enter
pop
mov
or
xor
cmp
and
and
stos
mov
cs
fimull
push
pop
pop
sub
jp
insb
cmpsb
loop
pop
xor
add
mov
jecxz
pop
pop
or
cmc
sbb
mov
sbb
cmpsb
jp
aad
push
xor
dec
add
sub
rclb
pop
mov
rcrl
pusha
filds
jmp
mov
stos
xor
sub
and
rclb
mov
fnstsw
sub
mov
gs
push
cld
call
and
push
or
pop
les
or
test
xlat
rorb
data16
lock
ret
nop
js
pusha
xchg
andps
jb
mov
add
es
dec
and
xor
dec
dec
mov
sub
or
sub
out
repnz
push
jb
fmull
lret
or
push
dec
ss
ds
mov
dec
addr16
das
scas
jl
and
xchg
int
mov
mov
add
popa
inc
adc
sbb
pop
adc
xor
jns
imul
mov
cs
mov
jnp
ret
jae
jge
loopne
jae
xor
or
xor
mov
ret
add
inc
cli
inc
mov
cmp
divb
movb
icebp
call
sub
inc
mov
dec
inc
fnstenv
imul
jl
icebp
mov
inc
enter
mov
call
mov
adcb
push
push
loopne
mov
cmpsb
sub
rcl
fdivp
xchg
test
out
inc
or
add
jl
fildl
pop
es
sbb
ret
icebp
into
out
pop
adc
pusha
jge
xor
jmp
daa
lahf
or
jmp
ds
pop
cmp
ret
or
xacquire
push
inc
aas
inc
fiaddl
xor
add
loopne
call
mov
fucomip
cli
fisubs
dec
push
stc
mov
sub
sti
sbb
mov
add
add
pop
and
sbb
cmp
flds
inc
rolb
lods
mov
imul
inc
dec
mov
cwtl
call
into
rorb
cmp
and
rorl
pop
gs
popf
or
rclb
xchg
xor
mov
sbb
mov
push
fldl
sub
add
push
fstp
dec
stc
sti
xor
daa
mov
insl
shl
pushf
idivl
in
jmp
jle
test
imul
fildl
sbb
loop
and
dec
pop
lcall
add
or
jns
jb
mov
push
cmc
push
jns
in
ljmp
sbb
cs
xchg
dec
lret
jp
cs
ss
int
js
jle
inc
vmread
jl
mov
inc
sbb
shrl
lock
and
test
loopne
or
pop
lock
pop
in
int3
mov
or
push
in
cmp
push
aam
push
dec
ret
add
mov
mov
cmp
int
ret
and
mov
xor
mov
pop
gs
dec
mov
rcrb
xchg
fildll
sbb
lret
dec
add
daa
sub
frstor
inc
add
mov
xorl
add
out
test
fistps
push
dec
rorl
mov
out
lock
cld
pushf
cmp
inc
inc
nop
push
rcrb
repnz
fsubrs
pop
mov
data16
icebp
dec
sbb
pusha
mov
jo
pop
xchg
push
jge
imulb
out
lock
dec
dec
in
scas
mov
cmp
ljmp
pop
mov
mov
jbe
add
bound
stos
pop
jne
push
cmp
push
icebp
in
ret
mov
fisubrs
or
or
sarl
mov
stos
pop
mov
ds
lcall
and
jmp
loope
adc
cli
fdivrl
add
push
mov
repnz
fs
cs
bound
xor
jle
pop
clc
add
hlt
call
std
or
xchg
jle
stos
pop
daa
or
fidivs
leave
imul
es
in
iret
je
push
add
out
cli
adc
pushf
call
aam
insb
cli
stc
inc
push
je,pn
cmp
and
add
and
inc
movb
add
add
add
out
test
stos
aad
clc
dec
bound
push
fxtract
push
repz
sahf
div
outsb
lret
jle
xchg
cmp
push
adc
push
rolb
sbb
add
add
lahf
xchg
jae
dec
xor
add
and
js
xchg
nop
mov
mov
lock
loopne
mov
addr16
jle
or
add
icebp
incb
fisttps
push
dec
mov
inc
cmp
gs
jbe
in
dec
pop
nop
nop
clc
je
push
cmp
lahf
andb
lock
mov
push
xchg
xchg
or
dec
adc
es
dec
ret
call
outsb
loopne
inc
inc
inc
aaa
gs
mov
rclb
les
xor
sarb
ss
clc
data16
lret
jbe
push
mov
cmpl
inc
push
mov
add
jno
dec
push
pop
fs
cmc
stos
push
arpl
pop
jo
push
push
xchg
mov
push
xchg
or
sbb
ljmp
dec
insl
outsb
jno
mov
jle
inc
popf
icebp
and
jae
cmp
inc
xchg
addb
cli
sti
xchg
out
rep
dec
inc
jp
mov
mov
lds
or
push
push
test
cmp
bound
add
es
mov
fdivrl
bound
inc
cmp
push
shrb
jno
je
inc
dec
icebp
add
add
aaa
popa
push
jo
push
fsubr
push
sbb
ret
aaa
lds
pop
outsb
inc
dec
xor
shrb
mov
clc
adc
leave
mov
das
test
dec
decb
bound
mov
jns
mov
add
mov
jne
divb
push
jbe
aam
dec
insb
dec
push
mov
jecxz
loopne
push
dec
mov
cmp
sarl
outsb
inc
push
cli
ficomps
fadds
mov
adc
add
movsb
dec
add
cwtl
jnp
call
adc
inc
nop
into
ds
xchg
push
ja
clc
mov
dec
imul
pop
in
stos
pop
das
repnz
mov
or
insl
jno
out
imul
je
iret
inc
add
ret
ja
shlb
pop
addr16
das
mov
dec
testb
push
scas
xor
inc
cmp
rcrb
clc
js
cmp
stos
lret
pop
xchg
loope
test
hlt
mov
sti
ss
popa
inc
fs
stc
mov
cmp
fsubrs
repnz
xchg
fiaddl
rcll
loopne
xchg
insl
dec
jecxz
insb
icebp
subl
fidivs
rorb
mov
shlb
push
xchg
lahf
sub
js
add
add
mov
incb
lcall
dec
pusha
jl
jae
inc
mov
push
sbb
fidivrl
sub
push
inc
imul
jbe
movsb
mov
in
stc
cmp
ds
jo
or
xor
in
jo
mov
mov
stos
in
pop
xor
shll
add
leave
jae
mov
movsb
inc
or
mov
enter
fcomps
xor
cli
ret
popa
pop
dec
test
inc
fcmovb
js
mov
addr16
fwait
outsb
lret
stos
dec
inc
cmp
xor
fs
xchg
push
xchg
add
mov
xchg
push
jae
outsl
xchg
outsb
bound
rorb
fidivrs
jns
dec
fistps
xchg
dec
cmp
js
jb
mov
cmp
adc
loop,pn
shrb
outsb
insl
inc
mov
sahf
ret
push
push
and
dec
fsubr
shufps
insb
push
push
in
mov
cmpsb
jp
rolb
iret
sbb
inc
dec
push
inc
push
cmp
mov
in
xchg
jg
jo
inc
add
push
arpl
inc
sbb
movsl
sub
cmp
std
ffreep
bound
ss
adcb
rclb
or
pusha
mov
jae
aaa
jecxz
outsl
adc
jecxz
sub
sub
jmp
addr16
push
in
xor
jl
clc
jmp
jmp
jge
aaa
out
push
nop
out
into
outsb
out
rorb
cmp
cmp
mov
jp
jp
subl
pop
or
shl
fcomps
pop
icebp
outsl
clc
das
js
mov
aam
or
stc
jmp
xchg
mov
dec
pushf
in
and
ljmp
inc
and
clc
das
ret
sbb
push
loop
xchg
outsb
add
cmp
xor
mov
clc
icebp
stc
mov
ret
mov
xchg
push
orb
cmp
pop
cmp
test
movsb
push
sub
ljmp
out
and
loopne
xor
jecxz
or
push
inc
inc
cld
aas
lock
xor
rcll
xchg
sar
inc
ljmp
adc
loopne
mov
xor
mov
aas
jmp
xor
mov
pop
int3
mov
and
pusha
data16
pop
negl
jle
shlb
movsb
loopne
or
pop
icebp
pop
adc
loopne
inc
dec
sub
pop
je
jle
adc
jg
ret
xchg
cmp
sbb
aas
fcos
add
mov
push
ds
mov
in
lahf
sub
or
and
inc
lds
imul
jmp
jg
pop
retw
mov
jmp
mov
cwtl
xor
dec
outsl
inc
push
mov
dec
xor
bound
sbb
unpcklps
sub
rolb
pushf
dec
xor
inc
mov
out
cmp
inc
fs
or
fmuls
and
inc
mov
sar
mov
pop
in
aad
add
mov
icebp
das
les
mov
std
mov
inc
sub
adc
clc
ja
push
add
scas
xor
or
pop
lods
ret
xlat
mov
pop
jo
flds
dec
or
sub
adc
push
mov
ret
sar
lock
adc
sub
rclb
mov
testb
pop
jb
sub
jae
mov
ret
sub
imul
xor
fcmovnb
adc
mov
ja
es
fmul
cmp
fcmovb
in
pop
dec
mov
add
or
into
add
scas
or
clc
pop
push
ja
std
cmpl
pop
mov
pop
mov
int
out
mov
cmp
push
push
jmp
hlt
les
and
push
dec
push
pop
mov
lcall
out
jbe
and
mov
mov
ljmp
sub
and
push
orl
xor
cld
mov
nop
dec
insl
or
imul
xor
add
push
dec
and
clc
sub
add
jg
push
xor
jecxz
aaa
cmp
pop
lcall
movsl
bound
mov
or
mov
jle
or
cmp
notb
std
or
aad
dec
xor
pop
adc
pop
in
clc
or
pop
sbb
nop
aad
pop
ss
push
leave
dec
xor
pop
rcrb
mov
aad
mov
push
push
mov
push
rep
adc
outsl
or
loop
clc
push
sbb
adc
pop
lcall
fadd
stos
stos
aad
mov
sbb
inc
or
adcb
push
xor
xchg
sub
sbb
std
inc
inc
xor
call
or
dec
sti
insl
and
andb
ficompl
ficompl
ljmp
cli
fistpll
xor
xor
lods
or
mov
add
fcmovb
and
adcb
pop
mov
add
cmpsb
jmpw
loopne
add
push
lea
mov
or
add
je
adc
pop
es
shrb
addl
test
movsb
cs
shl
xor
xchg
xchg
aaa
cmpb
push
pop
pop
pushf
add
adc
push
call
mov
insl
add
inc
mov
js
push
jmp
cmpsb
mov
push
repz
std
dec
call
cmpsl
pop
bound
idivl
bound
sbb
push
mov
mov
mov
or
cmp
addr16
dec
out
mov
rcrb
sbb
xchg
aas
shll
add
enter
push
test
test
lret
fnstenv
outsb
sub
adc
pop
fimuls
mov
jbe
clc
inc
xchg
out
std
call
xor
xlat
pop
fisubrs
cmpl
pop
mov
and
jg
mov
xchg
sbb
add
fwait
jne
dec
arpl
or
adc
pop
sub
dec
js
mov
pop
stos
inc
sti
int3
shlb
lea
push
push
mov
pop
sbb
outsl
enter
lea
jns
jl
mov
mov
data16
cmp
mov
mov
repnz
push
sub
das
pop
push
sub
pop
push
dec
lods
mov
push
or
into
jp
fs
shlb
jb
inc
subb
in
mov
test
std
mov
or
vdivps
cli
and
fs
pop
pushf
mov
mov
test
mov
decb
xor
fs
bound
mov
lds
mov
pop
mov
push
jmp
cmpsb
cs
stos
mov
xchg
cmp
jb
nop
and
xchg
push
or
std
jae
pop
mov
ret
in
jns
lahf
cld
fs
insl
push
dec
js
sti
mov
push
nop
pop
dec
scas
inc
mov
rorl
mov
mov
ljmp
sub
jg
xchg
in
xchg
pop
fnstsw
jae
outsb
xor
movsl
outsb
repnz
mov
xchg
mov
jbe
andl
dec
dec
xor
movsb
push
add
lock
cwtl
pop
hlt
mov
jp
jo
and
int
mov
mov
aaa
jnp
iret
push
pushf
cmpl
xchg
push
cwtl
mov
popa
jl
adc
outsl
add
shrb
cltd
and
push
mov
xchg
movsb
cwtl
xchg
cmp
fildl
scas
dec
js
xlat
les
fiaddl
jp
shlb
insb
mov
insl
shrb
mov
add
pop
cs
ss
rclb
jo
xorb
in
insl
dec
loopne
test
xchg
clc
pop
xchg
jns
test
imul
pop
ret
xor
jmp
in
sbbb
xchg
stc
in
int3
pop
or
mov
xchg
xor
in
xchg
jmp
jae
call
xor
daa
xorb
mov
dec
cmp
les
pop
stos
mov
jno
dec
outsl
mov
adc
xchg
mov
imul
ja
adc
pop
icebp
out
loop
push
lods
add
lret
pusha
cmp
fisubrs
in
test
push
cmc
pop
lock
stc
enter
loope
pop
lock
add
or
andl
sub
cmp
int
sti
or
dec
push
push
clc
pop
das
and
js
sahf
push
or
pop
pop
jmp
nop
jne
jno
add
dec
icebp
xor
inc
mov
pop
and
out
push
and
mov
into
into
sbb
pusha
sub
push
inc
cwtl
jmp
jbe
sub
jo
push
pop
test
fidivl
cmp
adc
dec
movsb
int3
cmpsl
pusha
jg
inc
dec
inc
xchg
out
popa
xor
add
or
push
hlt
into
adc
sarb
stos
shll
adc
push
mov
dec
and
lock
sti
inc
test
loopew
jecxz
cwtl
insl
push
inc
aaa
loope
sub
push
lret
add
bound
fiadds
outsb
inc
inc
test
mov
sub
dec
mov
jecxz
in
dec
rol
shlb
jne
inc
pusha
add
xlat
inc
sbb
lods
insb
inc
and
pop
push
jae
push
push
ja
push
adc
pushf
icebp
nop
sub
inc
fmul
clc
push
mov
pop
aad
pushl
ja
mov
xor
les
jp
push
pop
ss
pop
test
jo
mov
jne
add
dec
rcrb
loopne
mov
dec
int3
push
cmp
sub
andl
sub
or
or
outsb
inc
add
adc
xor
shl
imul
cltd
mov
xchg
lods
test
dec
sbb
xchg
or
jl
pop
or
adc
mov
test
sbb
mov
or
icebp
sub
push
call
rorb
cmp
or
xchg
scas
mov
ljmp
repz
inc
add
push
add
add
imul
lahf
inc
inc
lret
cmp
lods
mov
rolb
push
sbb
sbb
pop
push
std
sbb
cmpsb
out
xchg
addb
insl
sahf
ljmp
mov
das
jmp
xchg
adcb
rclb
popa
jmp
mov
cmp
push
iret
loope
xchg
insl
dec
adc
leave
inc
jmp
add
mov
add
pop
outsb
add
ret
popa
and
mov
xchg
inc
mov
test
cli
sub
xor
sar
sbb
mov
mov
sub
test
add
clc
jmp
mov
or
pushf
addr16
add
and
mov
rolb
xor
mov
add
mov
ds
loopne
pop
dec
call
mov
in
cmpsb
push
bnd
push
pop
mov
loop
adc
pop
lock
jmp
scas
pmaxub
scas
enter
bound
aaa
jmp
loopne
xor
out
fstpt
mov
in
fidivrl
pop
jbe
sbb
or
pop
adc
outsb
mov
divb
daa
xor
add
les
dec
add
xchg
and
sbb
icebp
and
icebp
ljmp
and
jle
fwait
xor
inc
mov
or
mov
ss
lods
xlat
montmul
fdivrp
jbe
mov
lods
push
jp
adc
fcomip
or
inc
call
mov
push
fwait
decl
hlt
jg
loopne
add
pusha
sbb
jl
call
outsl
aam
sbb
inc
test
add
pop
add
lcall
call
mov
jge
or
sahf
andb
mov
cmc
shlb
sub
or
sub
ds
jg
sahf
adc
or
or
les
rcr
test
ja
lds
xchg
sahf
dec
jmp
in
cltd
mov
push
imul
nop
les
fildll
addb
dec
aad
dec
imul
fstps
pusha
sub
insl
sarl
test
mov
mov
pop
int
xor
xchg
cli
pop
add
cmpsl
fs
shll
pxor
dec
fs
ret
add
lock
sbb
lods
jb
shll
mov
pop
xchg
xchg
sub
or
add
pop
shl
jb
xor
out
jg
std
cmovb
ljmp
sub
sbb
popa
mov
pushf
mov
andb
jbe
xor
and
push
sub
mov
jg
adc
push
jmp
cld
mov
stos
lods
test
out
dec
jmp
test
pop
add
fldl2t
push
push
vmread
add
nop
sub
int3
pusha
dec
jg
cmp
jp
stos
add
or
repnz
stc
sarb
mov
jb
and
call
pusha
pop
mov
jg
push
mov
dec
cmc
fsubrs
or
pop
mov
push
mov
nop
mov
dec
loopne
cmp
outsb
je
insl
es
adc
cmc
nop
jp
pop
inc
inc
dec
das
and
pop
bound
aaa
cld
pop
call
and
adc
or
fwait
loope
test
imul
xlat
sbb
push
iret
fsubrp
inc
shl
in
pop
enter
inc
jbe
shlb
or
data16
bnd
test
fwait
or
out
xor
jo
sbb
faddp
and
sub
push
pop
rol
sbb
loope
push
mov
jmp
and
fsubl
ja
jecxz
loopne
sahf
call
push
push
or
pop
dec
mov
add
scas
push
dec
adcb
pop
add
jge
jg
incl
mov
xchg
inc
imul
clc
lret
das
sub
fistl
stos
add
nop
mov
push
outsb
inc
cwtl
lock
sub
cmc
pop
sub
push
push
push
ds
add
or
adc
sub
push
sbb
cltd
adc
sahf
add
decl
cmp
dec
roll
cmp
ljmp
mov
jge
fnstenv
fstpl
mov
xor
sbb
sub
sbb
in
jecxz
ja
xchg
or
xchg
mov
pop
lea
xchg
push
in
es
scas
push
mov
mov
sub
cs
pop
loop
aad
mov
stos
inc
pop
sub
shl
mov
push
sbb
cmpb
stos
and
and
adc
pop
mov
pop
xor
adc
adc
cmc
jmp
add
lock
outsl
lahf
push
pop
add
mov
adc
test
and
scas
xlat
mov
add
notb
add
jae
add
jbe
js
lahf
cmp
sbb
pop
sbb
mov
das
jmp
cli
icebp
add
imull
sub
add
add
repnz
jne
shl
dec
and
insl
pop
mov
xchg
xlat
inc
xchg
jo
lret
xchg
jmp
addr16
imul
mov
jno
cld
adc
push
sbb
je
and
repz
jmp
lock
cs
push
push
sbb
sub
js
xchg
leave
push
mov
dec
adc
add
xchg
in
ss
int
aaa
loopne
pushf
cmp
or
inc
sub
mov
mov
push
mov
adc
test
add
lock
jne
jae
sub
ljmp
inc
add
cmpsb
jl
mov
xchg
lds
pop
add
aam
jge
outsl
and
jg
nop
push
push
jns
sub
lods
in
jmp
ljmp
adc
enter
push
jbe
fimull
sbb
pop
push
mov
jbe
rclb
movsl
lret
and
mov
cld
push
out
pop
push
add
dec
push
push
or
sbb
out
push
xorb
sbb
inc
adc
xor
cli
data16
or
jnp
shlb
insl
push
or
dec
push
mov
mov
sbbb
mov
scas
lcall
dec
add
ds
push
stos
dec
sub
popa
call
stos
inc
shlb
dec
mov
call
call
and
and
sbb
mov
popa
sarb
push
rclb
popa
push
cvtpi2ps
pusha
outsl
cmpsb
dec
aaa
xor
inc
rorb
out
adcb
push
outsl
xor
out
insb
insl
inc
dec
and
js
push
push
testl
mov
fcmovbe
stos
add
xor
mov
aaa
pop
ret
pop
clc
sbb
pop
or
stos
dec
aaa
jno
cmp
mov
sarb
pushl
repnz
idivb
bound
je
jle
ret
jmp
fbld
and
sub
fistpll
mov
gs
xchg
pop
mov
add
mov
out
scas
enter
cmc
inc
inc
ss
call
adc
or
movsl
jle
aas
push
xor
mov
mov
negb
add
mov
add
xchg
fdivrs
pop
fwait
int
lahf
sbb
inc
pop
test
mov
adc
jne
jle
inc
call
aam
out
sahf
add
adc
ss
jno
lods
shlb
sar
lods
add
subb
xor
push
ret
add
pmaxsw
pop
dec
clc
inc
and
and
cld
adc
cs
daa
scas
ret
popa
js
mov
jle
fdivs
mov
pop
xchg
xor
xor
cmpsb
popa
sbb
add
add
mov
loopne
mov
lret
aam
mov
pusha
decl
ret
push
arpl
aas
pop
xor
nop
sbb
xchg
out
fcomip
pop
sub
adc
cltd
fwait
dec
mov
aaa
or
cmp
in
xchg
or
sbb
lods
fs
aad
pop
rclb
je
jbe
cwtl
lods
cld
loop
sub
inc
arpl
icebp
loop
pop
mov
jmp
dec
jl
fmuls
lods
sbb
cmp
outsl
adc
sar
sahf
push
mov
push
mov
aam
rolb
mov
jb
pop
out
rcrb
mov
or
dec
and
in
mov
sub
mov
sbb
mov
and
leave
sbb
xlat
sub
cltd
std
or
subb
mov
cwtl
mov
call
inc
cld
stos
out
mov
mov
and
push
ja
outsb
adc
pop
and
jmp
test
shlb
or
sub
ds
leave
rorl
dec
test
popa
pop
js
or
jo
jmp
jno
hlt
add
push
fisubs
les
sub
lds
pop
shl
in
imul
add
pop
add
cs
adc
sbb
aaa
clc
loop
dec
jg
inc
hlt
sti
mov
pop
cli
inc
in
outsb
aam
cmp
scas
lret
scas
andl
push
pop
mov
sub
adc
mov
mov
jg
pop
mov
xor
push
mov
popa
mov
movsl
dec
test
pop
mov
pop
or
and
add
gs
mov
xor
mov
mov
pop
leave
adc
adc
mov
addr16
or
mov
ret
inc
sub
loopne
pushf
push
mov
orb
sarb
jnp
push
shll
push
cld
pop
xchg
jg
adc
je
mov
lcall
mov
and
out
adc
jg
fdivrs
shrl
out
xorb
jbe
xchg
insb
cmc
subb
add
lods
inc
inc
daa
loope
ds
sbb
mov
in
enter
jbe,pn
add
inc
sbb
test
es
cld
jg
les
fbstp
mov
fiadds
inc
lds
or
sbb
nop
es
cmp
shrb
movsl
ret
jns
mov
jmp
into
cmpsb
add
sbb
cmp
lea
jbe
add
jnp
push
mov
sbb
push
xchg
icebp
sub
dec
xor
and
pop
sub
mov
pop
aam
and
or
je
jg
rcll
mov
clc
cmpl
enter
mov
loop
rorb
pop
inc
push
rol
aaa
mov
data16
in
fisubl
sub
ljmp
sbb
push
cmp
ljmp
or
dec
pop
push
cltd
jne
inc
jecxz
aas
in
mov
clc
push
int3
xchg
fildl
pop
mov
sarb
jb
sub
jmp
cli
mov
mov
idivb
fiadds
shr
stc
xor
add
mov
ret
sbb
iret
lods
std
outsb
pop
pop
cmpsb
add
cld
cmpsl
mov
jb
mov
enter
dec
add
pop
mov
mov
mov
cmpsb
cmpsb
ss
pop
mov
aaa
dec
sub
pop
popa
popf
out
fsubrs
xchg
jmp
or
push
cli
xchg
mov
mov
mov
push
sbb
sub
mov
adc
or
xchg
jp
inc
and
sbb
ret
pop
dec
lcall
insb
into
pop
inc
or
mov
int3
mov
inc
rcr
psraw
mov
push
fsubr
xchg
mov
push
imul
xchg
and
push
and
out
push
push
out
mov
or
xor
lret
popf
stos
push
popf
mov
pop
movb
dec
in
mov
lock
pop
xor
in
xchg
ds
je
sbb
xchg
mov
xchg
rcrb
jle
pextrw
add
jl
add
push
xor
pusha
xchg
cmp
fadd
mov
or
outsb
adc
push
inc
jge
push
push
inc
jb
push
shl
negb
es
add
int3
lea
test
lods
xchg
adc
fsubr
pop
push
dec
imul
sar
cs
jo
cmp
and
jmp
cmp
mov
mov
mov
iret
push
pop
shll
and
insb
dec
lods
and
dec
cld
sbb
push
sub
pop
xchg
xlat
dec
push
aad
jg
lock
or
push
add
fwait
movsb
xchg
ds
sbb
add
mov
ret
push
adc
aam
inc
subb
jmp
jmp
iret
and
adcb
loope
xor
adc
push
mov
inc
shlb
mov
mov
pop
les
and
test
addb
cli
mov
orb
orb
mov
push
pushf
cmp
xor
pushf
gs
or
push
and
ret
loopne
rcl
sub
inc
loop
stos
push
cmp
cmp
xchg
or
push
daa
aam
or
and
aas
jmp
rolb
in
cld
in
sbbb
dec
in
jb
pop
in
pop
divb
jp
into
testb
add
adc
dec
xor
cmp
fwait
jno
orb
push
inc
add
pop
loope
mov
test
sub
adc
mov
mov
push
mov
fcomps
xor
push
scas
sbb
pop
popf
jle
dec
in
jmp
ud0
pop
js
jbe
cmpsl
inc
sbb
jecxz
ljmp
loopne
and
add
cs
adc
call
inc
movl
mov
push
loop
mov
jbe
imul
lock
testl
lret
inc
inc
mov
push
mov
in
pusha
std
mov
add
inc
mov
gs
xchg
fisubl
fwait
mov
xor
push
mov
addr16
xor
sbb
inc
jne
add
ljmp
inc
xor
pop
inc
jle
jge
and
inc
movb
cli
lods
mov
cmpsb
js
sbb
or
inc
mov
dec
pusha
xchg
stos
test
and
inc
dec
push
mov
addr16
push
jbe
inc
out
pusha
pop
js
jb
stos
jmp
pop
lods
push
and
ja
insl
mov
ficoml
outsl
inc
inc
pop
mov
dec
push
inc
js
dec
dec
add
jl
insl
inc
add
dec
mov
ds
xchg
dec
inc
adc
aas
test
movsb
xlat
pop
inc
inc
fadd
mov
sub
push
stos
add
push
pop
movsb
or
std
hlt
ret
push
add
in
ret
mov
movsl
sub
inc
mov
cwtl
pop
dec
aaa
sbb
inc
dec
inc
add
adc
jbe
add
xor
jno
fs
add
push
aaa
push
loope
inc
lahf
aam
fimuls
add
in
lret
add
int3
jns
popa
xor
js
outsb
clc
ljmp
sub
xchg
ret
into
mulb
inc
jl
rcrl
mov
jbe
dec
dec
inc
aam
jo
sbb
add
sub
xchg
add
ja
inc
mov
ret
dec
js
add
pop
pop
jb
dec
clc
js
fsubrs
cmp
data16
mov
fcomps
jo
bound
cmp
mov
inc
sbb
fidivs
adc
push
add
test
and
mov
popa
clc
aaa
cmc
cmp
stc
cli
lret
pusha
xor
lcall
dec
insl
and
mov
fsubl
mov
push
das
inc
jae
imul
nop
rolb
iret
dec
push
popf
mov
stos
jge
loop
lock
jbe
push
pop
inc
push
inc
imul
daa
sahf
inc
push
add
xor
ljmp
outsl
inc
push
jno
movl
xor
dec
out
lcall
mov
mov
sub
dec
push
cmp
jecxz
pop
fdivrs
sbb
ffreep
pusha
sar
push
xor
das
loope
or
call
push
inc
sub
rolb
mov
xor
scas
insb
mov
add
inc
push
mov
push
dec
pop
dec
xchg
dec
mov
push
call
dec
out
loopne
push
add
cmp
and
es
dec
ret
cmp
gs
dec
fisttps
enter
or
cmpsl
dec
mov
inc
push
sbb
push
fs
clc
popa
push
ds
push
dec
fsubr
dec
xchg
ja
lret
ret
cld
cmp
dec
insl
mov
dec
push
push
dec
je
enter
push
push
icebp
dec
loop
popf
movsl
in
fisttpll
ffreep
dec
dec
jbe
lret
inc
test
or
xor
push
ss
inc
adc
pop
inc
imul
pop
stos
dec
inc
pop
pop
popa
lahf
es
dec
inc
out
jae
outsb
jb
fadd
dec
xchg
jne
ss
lret
je
out
add
jle
jbe
je
push
icebp
mov
dec
inc
dec
push
jle
imul
insl
sti
and
mov
insl
dec
aam
stos
mov
arpl
jno
sbb
push
imul
shll
inc
outsl
pop
jmp
dec
stos
jl
push
bound
mov
xor
inc
je
inc
loopne
dec
inc
pusha
loopne
loopne
into
dec
dec
jl
sub
push
push
out
push
lock
push
decb
adc
pop
push
jne
movsb
sub
bound
out
mov
cmp
or
and
jne
fcmovne
outsb
cltd
mov
push
dec
mov
cmp
jae
push
jae
dec
inc
push
mov
outsb
imul
cmpl
arpl
inc
push
lock
mov
popa
ja
ret
cmp
xchg
mov
mov
into
ret
mov
fs
divl
pop
xor
rolb
xchg
xor
sahf
into
push
xor
mov
pop
mov
inc
jb
push
lcall
push
push
imul
call
js
dec
adc
inc
pop
lahf
shr
mov
xor
mov
push
pop
jo
xchg
jecxz
add
dec
xor
inc
push
pop
sub
loopne
hlt
out
imul
jne
adc
jb
jno
mov
cmpsb
mov
dec
clc
fildll
dec
outsl
push
push
mov
pop
sub
cmp
mov
pop
lods
cmp
pusha
jmp
pop
aad
or
in
fsubr
jns
cmp
inc
mov
and
hlt
aas
pop
lock
rcr
rcrb
scas
js
lret
in
es
insb
test
jmp
adc
std
testb
dec
pop
xchg
jmp
ret
adc
mov
scas
inc
test
jp
int3
or
and
jmp
or
xchg
in
xchg
gs
je
push
pop
push
movsb
jmp
jp
mov
cld
xchg
or
das
jmp
inc
jmp
daa
cs
ret
sub
inc
cmp
call
jbe
sub
push
lock
jmp
popa
fldt
adc
adc
cmpb
xchg
inc
pop
shll
xchg
xchg
pushf
dec
push
pop
ds
loope
popf
mov
xchg
pop
jg
out
pop
jmp
inc
dec
sbbb
movsl
cwtl
add
mov
push
add
mov
dec
adc
mov
leave
decl
sbb
cs
sbb
jmp
sti
and
add
lock
jnp
sub
clc
jmp
push
cli
mov
mov
and
jbe
jge
jbe
jl
jo
dec
mov
fcoms
adc
add
sbb
mov
jno
mov
inc
shlb
mov
mov
sbb
roll
push
mov
ficomps
adc
fistpll
push
hlt
ret
fildll
add
pop
and
nop
incb
adc
xchg
and
pop
jmp
and
cmpsl
pop
sub
jbe
jns
push
sub
sti
hlt
or
fwait
mov
sbb
push
and
cmp
jmp
fcompl
xor
ss
dec
xchg
rcrb
cmp
pop
push
push
jmp
cld
ds
jmp
push
add
les
xor
adc
gs
pop
pop
pop
imul
and
lods
loope
mov
xor
sbb
jmp
adc
mov
pushf
mov
pop
mov
fmull
adc
sbb
jne
clc
push
bnd
lock
scas
or
sbb
and
jnp
addr16
sub
push
fcmovne
pop
sub
inc
sub
jmp
ss
test
cmp
mov
add
adc
push
imul
scas
icebp
add
jmp
movsb
adc
lods
test
add
xchg
scas
jge
cld
out
popl
and
push
xchg
fcmovb
daa
call
or
xchg
push
jle
insb
add
push
imul
aam
ljmp
or
loop
push
clc
rcll
pop
push
jecxz
rcrb
sub
dec
in
out
je
mov
push
pop
adc
mov
sbb
or
mov
lods
inc
jg
xchg
fs
das
adc
test
fdiv
gs
dec
dec
insl
sub
aas
sub
daa
shlb
cmp
add
mov
insl
and
push
dec
test
shlb
or
mov
push
pop
mulb
cmp
lcall
fisubl
jbe
cmp
xchg
shlb
fsubl
cmp
add
roll
adc
mov
nop
in
sbb
push
rcrl
mov
add
mov
mov
push
mov
cmp
fwait
test
jmp
or
cmp
cli
fbstp
scas
outsb
dec
mov
mov
call
pop
cld
cmp
dec
ret
xchg
or
sub
das
xchg
or
lret
pushl
pushf
lock
lret
inc
or
loopne
lret
xchg
rcr
lods
mov
cmp
adc
cmp
push
mov
mov
inc
lret
inc
test
out
pushf
fidivl
dec
movl
mov
bound
pusha
mov
aad
stos
add
decb
inc
ret
inc
inc
lret
fwait
clc
daa
subl
aam
adc
xchg
xchg
xor
and
mov
sub
insb
loope
es
jnp
jmp
inc
cli
in
sub
dec
add
cmp
mov
roll
xor
cwtl
jne
or
cmp
bound
rcr
inc
test
sbb
shl
mov
ljmp
fcmove
loope
fdivrs
rcr
xor
xchg
jmp
mov
mov
cld
add
ja
pop
xchg
pop
inc
in
and
ret
adc
jg
scas
shll
sub
xor
repnz
sbb
out
push
pop
lea
mov
clc
add
and
xor
movsb
mov
andb
in
mov
loopne
mov
mov
aam
icebp
out
or
sub
cs
ds
imul
lahf
or
mov
fdivr
jecxz
inc
lret
cmc
push
inc
xchg
dec
cli
jp
pop
adc
mov
sbb
mov
lods
ficomps
sahf
adc
add
fdivrl
sub
jbe,pt
jbe
jae
push
aam
cli
push
xchg
add
push
xchg
sub
push
lds
push
stos
add
sbbl
hlt
push
dec
mov
pop
lods
mov
fstl
movsb
out
and
pop
jmp
dec
dec
loop
stos
jo
pop
push
sbb
jne
mov
clc
jmp
mov
dec
leave
cmp
ret
xchg
inc
cmp
cld
or
mov
outsl
enter
addl
outsb
xchg
mov
outsb
mov
push
rcl
es
test
out
jg
testb
jb
loop
shl
jecxz
jecxz
pop
in
mov
repnz
into
adc
sbb
nop
add
mov
dec
nop
push
imul
data16
shll
fidivs
xchg
mov
sahf
xor
mov
cli
mov
pop
inc
shll
or
movsl
dec
popa
clc
jg
push
jmp
jmp
inc
mov
cmp
mov
jns
test
or
cmpsl
jg
ds
and
inc
stos
mov
popa
shll
mov
jp
lods
jge
xor
sbb
adc
je
repz
popf
jmp
inc
in
arpl
lods
mov
push
push
mov
xchg
movhps
stos
loope
lock
nop
pop
inc
xchg
xlat
std
cmp
push
mov
hlt
into
out
cmc
scas
jle
adc
add
mov
cmp
nop
pushf
into
daa
mov
icebp
pop
mov
pop
pop
xchg
bound
push
jno
mov
cld
jl
mov
xor
mov
xor
clc
add
push
cs
pop
aam
ja
or
dec
fwait
shrb
dec
test
or
ljmp
xor
fnstcw
sub
sti
arpl
jmp
ljmp
adc
jo
xchg
rcll
addl
sub
mov
cmp
mov
nop
lahf
dec
push
std
iret
add
mov
push
addr16
scas
add
cmpsl
or
fwait
add
cs
push
sbb
xor
pusha
xor
push
incl
movsl
xlat
cmp
retw
cwtl
adc
lea
in
les
adc
imul
sbb
adc
ljmp
nop
std
mov
icebp
xor
fs
inc
add
test
adc
lock
rclb
movl
dec
add
xorl
push
lods
inc
mov
dec
push
out
movsb
fdivp
and
add
mov
add
pop
dec
bound
out
xchg
repnz
mov
outsl
xor
test
cmpsb
out
inc
push
inc
jle
xor
rcll
lret
int
add
sti
cmp
pop
push
sbb
js
and
mov
cmp
jo
mov
roll
mov
ret
jbe
push
mov
ror
fsubs
js
iret
mov
jae
push
lock
inc
shll
xchg
mov
xor
test
bound
and
je
xor
mov
dec
xchg
mov
and
rolb
xor
test
cmp
dec
aam
nop
sbb
mov
and
bound
bound
xchg
dec
push
inc
movsl
pushf
in
inc
fadd
jl
jbe
or
fcompl
ret
ljmp
mov
addr16
ficoml
scas
dec
fcomp
push
sub
push
popa
test
cmp
dec
xor
aad
push
dec
add
push
test
das
orb
clc
dec
adc
push
xor
int3
inc
pop
sub
emms
imul
push
popa
push
ds
or
shr
dec
add
push
lea
dec
call
mov
push
push
fsubp
test
into
test
cmp
mov
iret
pop
lcall
shlb
push
xlat
clc
xor
push
inc
jb
mov
stc
adc
push
xor
pop
mov
test
jae
xchg
add
sahf
imul
or
jecxz
testl
out
arpl
sbb
push
icebp
dec
jbe
inc
inc
adc
jmp
add
jb
call
inc
xchg
push
shll
push
pop
in
push
inc
inc
push
sarb
shlb
push
or
inc
xchg
xchg
sarb
pop
lea
mov
into
pop
insb
or
xchg
or
and
or
lret
repnz
hlt
sub
push
mov
imul
dec
and
or
es
inc
xor
dec
rclb
in
jo
icebp
push
and
hlt
mov
add
dec
jno
jne
scas
rorb
and
jo
pop
pop
jns
cmpsb
movsl
loopne
dec
lods
or
inc
pop
popa
lahf
mov
aaa
inc
xlat
inc
test
fs
push
out
lods
jns
popa
jb
mov
push
pop
mov
dec
inc
xor
jae
push
inc
jecxz
rorb
sub
fistps
stos
dec
sbbl
idiv
insl
cmp
icebp
pusha
jecxz
lret
push
xor
push
sbb
lahf
xchg
stc
icebp
push
push
push
mov
add
dec
xor
xchg
faddl
js
jne
loop
pop
push
cmp
adc
js
insl
je
sbb
test
cmp
xchg
add
mov
push
jnp
inc
insl
sbb
jl
pop
test
inc
fwait
je
inc
jmp
ficompl
inc
pop
lods
test
sarb
or
pop
out
pop
pop
fwait
loopne
dec
xchg
jb
dec
call
int
push
int3
mov
jp
push
jo
roll
and
jmp
orl
hlt
lock
push
movsb
clc
inc
popf
outsb
data16
xchg
lods
jmp
push
inc
imul
sub
jne
leave
or
lock
lods
push
xor
mov
adc
xorb
ja
pop
sbb
adc
loope
or
xchg
andb
or
push
xor
push
and
iret
insb
andb
rclb
lock
sbb
dec
daa
dec
pop
cmc
outsl
ret
jmp
aaa
add
scas
mov
pusha
mov
ret
outsl
push
and
xchg
dec
push
int
mov
fs
push
push
cmpsl
leave
inc
test
mov
bound
mov
xchg
jmp
sub
mov
mov
stc
push
and
rcrb
orl
ret
scas
and
jmp
mov
mov
clc
mov
insl
or
cmpsb
andl
fwait
int
cwtl
sti
and
int3
dec
inc
das
xor
pusha
cmpsl
shrb
or
cld
sbb
mov
dec
ficoms
or
test
iret
xor
shll
repnz
ficoml
dec
and
sbb
adc
les
andb
or
je
and
fisubrs
mov
js
nop
or
nop
or
jp
push
xor
clc
dec
jmp
add
sahf
insb
pop
sub
or
inc
inc
push
inc
and
dec
clc
add
pop
das
xchg
lcall
test
in
fsub
jmp
popa
cld
je
lds
insl
out
ds
rorl
and
iret
movsb
mov
lret
push
mov
jmp
mov
mov
add
ja
jmp
xor
subl
shr
into
loope
maxps
and
fs
dec
jl
mov
jns
out
push
sbb
xor
inc
hlt
arpl
mov
ret
or
fisttpl
int
test
mov
xchg
cmpl
mov
out
mov
push
icebp
xchg
push
adcl
push
mov
enter
and
out
lock
stos
push
add
xor
cwtl
mov
sbb
adc
and
enter
adc
push
mov
cmp
sbb
add
and
pusha
xchg
outsb
jmp
jge
xor
mov
shrl
out
push
mov
mov
mov
rorb
mov
mov
sub
push
or
clc
lahf
out
ret
aas
cwtl
mov
lock
mov
adc
in
int3
and
adc
loop
mov
xchg
fwait
jp
pusha
or
adc
and
loopne
or
loopne
or
bound
sbb
inc
mov
shlb
insb
or
dec
adc
jmp
adc
sbb
loopne
sub
dec
jg
mov
lds
mov
adc
push
repz
je
call
xchg
inc
pop
push
adc
inc
and
test
inc
push
fsubrs
int3
fwait
sahf
sbb
jle
leave
pop
sbb
imul
sti
pop
rcrb
adc
lret
add
imul
cmp
mov
jmp
push
mov
js
into
pop
jmp
push
in
mov
rcll
dec
jmp
mov
pop
enter
inc
pop
in
xchg
push
jp
add
and
push
mov
xor
xchg
lock
orl
mov
js
jmp
pop
push
push
clc
adc
movsb
xchg
inc
movsl
sub
hlt
mov
mov
mov
loop
dec
cli
cmpsl
stos
dec
or
adc
movsb
inc
cmp
rcrl
cmp
inc
jmp
push
cmp
sub
cmp
xchg
and
mov
shl
add
mov
lcall
imul
cmpsb
stos
data16
rclb
pop
orb
and
cmpsb
sbbb
hlt
mov
fwait
stos
out
or
cmpsb
fmuls
lcall
pop
and
test
incl
xchg
pop
cld
out
mov
add
stos
pusha
addb
cmpb
filds
mov
pop
lds
pop
aam
pushf
mov
cmovns
imul
sub
add
cmpsb
mov
jne
pusha
test
rolb
std
push
jge
es
dec
fcoml
pop
jmp
adc
std
push
push
dec
jl
sahf
and
pushl
push
jle
cmp
xchg
sub
mov
or
loopne
out
aam
xchg
adc
popf
inc
into
mov
push
or
push
push
cmpsb
mov
add
adc
sbb
xor
divb
stos
fucompp
fidivrl
or
inc
repz
and
or
inc
pushf
lcall
cmp
stos
jmp
xor
dec
dec
pop
test
xlat
mov
sub
adc
adc
cmp
push
jecxz
xor
ss
inc
fidivrl
mov
decl
mov
cli
cmpsb
dec
out
pushf
mov
fsubrl
xor
insb
aad
mov
dec
mov
cld
lcall
and
cli
dec
call
cs
movsb
inc
push
sub
fldl
sub
push
or
insb
orb
repnz
dec
inc
ret
in
pop
adc
clc
fwait
mov
test
movsb
sbb
xchg
es
cmp
adc
xchg
mov
mov
mov
dec
push
or
shlb
inc
ret
test
loop
bound
pushf
pop
jo
ljmp
and
or
lods
and
faddl
adc
je
sub
repnz
pop
faddl
inc
lods
and
jp
dec
test
xor
into
push
mov
outsl
or
std
pop
sbb
test
mov
in
popf
add
sbb
repnz
xchg
mov
outsb
adc
es
cmpsl
cmpsl
lods
les
sbb
push
mov
jg
sahf
fidivrs
push
xor
inc
jp
push
xchg
jmp
and
push
cli
test
dec
ret
imul
sbb
xor
inc
pop
cmp
or
les
mov
fmuls
xchg
cmp
hlt
sahf
mov
sti
cli
jmp
pop
and
les
out
faddl
xlat
and
xchg
mov
mulb
xor
cwtl
cmp
sub
inc
mov
push
sbb
je
push
mov
cmpsl
xlat
loopne
popa
orb
testb
mov
jp
sbb
or
cmp
jb
mov
push
js
fdivrs
aaa
and
xchg
rcrl
rcrb
jno
nop
add
add
test
mov
ljmp
pop
sbb
mov
push
pop
cmp
inc
jmp
je
outsb
cmp
add
or
xor
lcall
adc
and
or
ds
filds
sbb
xor
jno
scas
and
and
push
testb
pusha
mov
mov
jp
jae
mov
mov
cld
mov
mov
xor
xchg
loopne
cmp
testb
imul
hlt
cs
fucomip
push
out
inc
stc
mov
lahf
sub
mov
mov
aas
lea
test
inc
test
or
mov
pushf
nop
mov
mov
push
les
mov
outsb
xor
in
push
jecxz
fstpt
scas
push
add
add
xchg
jp
fcomip
jo
es
jl
pop
push
mov
xor
insb
xor
loopne
jb
mov
add
mov
inc
pushf
jbe
jg
out
xorl
pop
xlat
jb
xchg
adc
mov
test
xchg
repnz
jg
push
ljmp
mov
add
dec
roll
jl
jl
mov
dec
push
popa
add
inc
push
pop
inc
call
push
dec
push
push
inc
xor
add
xchg
or
inc
bound
and
dec
push
dec
cwtl
je
bound
inc
rolb
pop
pop
push
xor
aam
mov
push
insb
xor
repnz
add
sbb
gs
adc
inc
dec
clc
inc
or
outsb
add
dec
lock
add
add
push
mov
xor
add
mov
rorb
xchg
mov
adc
and
mov
or
cmp
aaa
lock
add
repnz
ds
push
mov
cmpsb
lods
dec
push
push
frstor
dec
outsb
push
lods
in
or
push
ss
cmp
mov
inc
dec
dec
test
dec
or
jae
push
push
xor
cmp
fimuls
lock
jl
daa
loope
and
inc
aas
or
outsl
sub
popa
jmp
sub
inc
lods
mov
and
push
ss
jne
jne
fimull
jo
dec
jb
dec
and
hlt
mov
push
add
lock
cmpsb
bound
jnp
aas
into
ret
pop
and
jns
jge
jge
sbb
push
xor
push
pop
iret
or
sub
jmp
ss
add
scas
cmp
jo
jmp
adc
mov
pop
mov
dec
push
mov
or
clc
push
int3
fs
pop
inc
jmp
push
jne
sbb
inc
shrb
sub
mov
push
pop
cmp
and
adcl
jbe
mov
push
dec
fldenv
adc
mov
push
out
mov
or
lock
outsl
add
push
jae
inc
out
inc
add
dec
imul
imul
sahf
rol
dec
stos
lods
loopne
jo
push
insb
jns
jle
movsb
lea
push
jbe
dec
test
ficoml
cmpb
mov
insw
adc
inc
leave
or
sbb
cs
nop
jb
cmp
inc
xor
psrad
xchg
addb
cli
inc
and
inc
arpl
xchg
sub
adc
call
pop
stos
je
lods
fs
inc
push
ss
lods
hlt
popf
jge
pop
jmp
dec
dec
push
dec
pusha
sub
pop
cmpsb
lock
insb
ret
out
jae
mov
out
sbb
ja
dec
repz
fs
jno
ds
add
clc
dec
or
xchg
push
shrl
jne
mov
out
sub
sbb
or
aaa
cli
aad
mov
jg
push
add
mov
xchg
push
sbb
mov
mov
cmp
add
dec
xchg
aaa
pop
or
mov
mov
outsl
popf
inc
adc
shl
and
sti
daa
fwait
ret
jp
andl
push
fisubrs
jg
jo
xor
lret
cmpsb
cmc
ret
add
or
mov
cld
push
sub
and
sbb
mov
mov
xor
pop
mov
jne
push
jmp
add
add
or
cmp
or
add
popf
dec
and
in
mov
iret
add
sbb
push
sub
test
pop
mov
or
test
push
cmp
into
testl
inc
test
dec
or
adc
and
or
push
or
jg
fistps
mov
enter
cmp
xchg
sbbb
int
mov
and
sub
fdivr
in
gs
adc
mov
cmp
cmpb
jl
add
jge
jg
pop
adc
mov
adc
and
and
add
mov
xchg
adc
fs
cmp
out
in
scas
push
push
inc
rorb
inc
mov
cmp
jbe
xchg
sub
xchg
mov
push
mov
cwtl
ficompl
or
sbb
je
mov
jns
xor
loop
push
pop
xor
pop
insl
pop
xchg
int3
add
aad
add
icebp
mov
les
pop
ret
cmp
xchg
jg
adc
sbb
clc
lcall
xchg
lret
xlat
lret
sbb
push
ret
insb
rcl
fistpl
mov
dec
in
add
add
je
mov
and
mov
jmp
mov
jbe
adc
cmpsb
sub
bound
flds
in
dec
sbb
mov
cmc
pop
add
cld
xchg
mov
test
orl
scas
and
mov
jecxz
out
movsb
jmp
lock
mov
fwait
sbb
sahf
ret
icebp
and
push
dec
idivl
leave
xlat
test
sub
jge
pop
push
fldt
aas
adc
pop
jge
cli
sub
das
in
fldl
movsb
scas
inc
add
cmpsl
scas
or
lods
lcall
adc
dec
sti
je
push
imul
jp
xor
mov
dec
cmc
xlat
divl
sbb
sbb
and
cmp
fst
inc
roll
push
cmp
dec
or
in
push
pop
imul
push
lret
mov
loope
outsl
nop
adc
cmpb
mov
mov
bound
sub
stos
fucomi
sar
jge
sbb
sub
sub
aam
mov
jmp
jnp
push
adcb
iret
stos
shl
dec
xchg
jne
xchg
mov
shlb
lock
pop
fnstenv
aad
bnd
jno
cmp
and
lahf
out
call
lock
pusha
mov
out
or
add
dec
leave
cli
sub
jnp
jge
hlt
pusha
in
xchg
sub
mov
in
mov
mov
aaa
arpl
mov
xor
and
jl
loopne
push
aad
push
push
aaa
enter
stos
add
mov
jb
adc
sub
jg
pop
lods
hlt
sti
rclb
loopne
popf
faddl
loopne
pminub
mov
or
loopne
imul
push
andb
stos
cmpsl
icebp
stos
mov
clc
add
pop
inc
sub
shll
or
push
aaa
xor
mov
pusha
jns
movb
mov
xor
pop
inc
push
cld
pop
pop
adc
mov
xor
pop
lds
pop
cmp
push
sub
outsl
nop
faddp
sbb
rcll
cmp
fsub
add
inc
bound
sbb
pop
test
cmp
inc
adc
jns
dec
lret
loope
jle
xor
push
add
inc
aaa
lock
cmp
dec
or
dec
es
adc
inc
inc
popa
jno
subl
mov
inc
mov
mov
mov
mov
gs
js
inc
pop
mov
dec
rorb
mov
add
hlt
in
and
pop
fisubrl
jbe
add
push
xchg
fdivr
sbb
mov
xor
cli
pop
sub
pop
jbe
mov
shlb
dec
outsl
nop
dec
jnp
inc
fadds
dec
inc
popf
sarl
icebp
mov
orb
sbb
dec
rolb
jno
xchg
pop
jl
addr16
outsb
push
add
dec
mov
testb
clc
lock
dec
or
pop
push
ja
mov
inc
ja
js
add
pusha
lcall
call
int
cmp
xchg
loop
cmp
fstl
push
add
dec
loope
lret
or
cli
ljmp
dec
rclb
aas
push
jb
cmp
xchg
add
test
jne
push
pop
mov
outsb
inc
stos
jge
push
stos
mov
mov
in
xor
mov
jl
add
test
cmc
andl
add
push
cmpsb
sbb
sub
enter
stos
fcompl
cli
sub
idivl
iret
cmp
push
pop
out
cmp
cli
dec
dec
push
movsl
subl
mov
fcomp
inc
pop
insb
push
jg
decl
dec
dec
pop
sbb
lock
adc
add
adc
adc
mov
test
jmp
jmp
mov
add
push
popf
jae
sub
or
jne
sub
mov
jbe
lods
pop
cmp
xchg
add
xor
pushf
dec
iret
hlt
push
xchg
ds
ror
inc
lahf
stos
or
jo
sub
sub
addr16
cmp
jo
mov
xorb
or
jo
xor
sbb
or
cmp
pop
inc
dec
sarl
inc
adc
mov
pop
and
jmp
mov
movsb
xchg
mov
sbb
xor
add
push
stos
sbb
enter
add
jge
mulb
call
pop
icebp
cmpsl
loopne
push
jo
mov
push
movsl
outsb
xor
out
pop
sub
cld
mov
fnstenv
mov
dec
mov
xor
xchg
jns
imul
ljmp
mov
xor
inc
sub
mov
push
ficoml
pop
and
add
sub
mov
aas
lds
cmp
lahf
push
sbb
add
dec
fs
mov
mov
mov
ss
or
dec
cld
jmp
jno
xor
imul
fucomp
in
mulb
xor
nop
mov
push
jecxz
cmp
mov
and
outsl
cmpb
pop
or
aad
pusha
jo
outsl
rorl
mov
xor
ret
lret
dec
or
out
add
enter
aaa
jbe
aaa
push
cld
mov
add
ret
mov
push
mov
cli
and
shl
call
ret
push
sub
outsb
imul
jmp
and
cmp
jbe
dec
shlb
cmpb
sub
ss
sub
adc
aas
fcoml
xchg
nop
out
shrb
outsl
movb
dec
mov
loope
cmpl
test
mov
icebp
adc
test
adc
adc
mov
jp
mov
inc
sbb
add
lods
pop
lret
fildll
mov
xor
and
rclb
pop
sub
and
or
adc
inc
rcrb
rolb
jnp
rorb
add
mov
outsb
clc
in
mov
popa
outsl
mov
or
je
arpl
sbb
sbb
cs
mov
bound
mov
fsubrl
adc
sahf
mov
inc
push
or
adc
or
push
jmp
or
dec
pop
pop
pop
sbb
jl
shrl
rorb
xchg
xchg
pop
int
outsl
sbb
add
jl
pusha
out
mov
fsub
mov
adc
lret
or
pop
pop
jge
sub
push
test
mov
jmp
jp
clc
outsb
sub
mov
fsubrp
ret
fwait
push
sbb
jno
jmp
sub
das
int
mov
rcl
mov
mov
outsl
sbb
push
and
or
push
xchg
nop
mov
loopne
pop
mov
test
jmp
push
imul
lods
cmp
cmpsl
js
outsb
clc
icebp
rcr
push
adc
jmp
push
clc
xchg
in
dec
jns
clc
pusha
or
mov
in
lods
aad
lret
hlt
inc
cmp
mov
mov
mov
and
andb
ss
in
lds
dec
mov
lcall
out
daa
mov
int
or
lret
andb
adc
add
push
aas
dec
adc
out
xchg
xorb
xor
in
ret
mov
cmp
pop
sub
cs
add
push
mov
test
aas
out
adc
cmp
mov
bound
test
icebp
bound
add
ja
outsl
cmp
jo
mov
icebp
mov
rcrb
add
dec
out
mov
push
std
inc
lahf
and
mov
in
dec
xor
into
cmp
fisttpl
adc
cmp
lcall
call
pop
pop
cmp
or
push
adcb
cmp
xchg
jo
in
mov
mov
xchg
int
jbe
xor
add
rorb
add
xchg
enter
jbe
inc
sub
jecxz
pop
hlt
cmp
xchg
xor
into
ss
ret
les
mov
iret
loop
imul
or
popa
loope
in
xchg
aaa
or
outsl
icebp
xor
mov
add
jg
mov
jb
pop
mov
shr
dec
push
sub
out
cmp
cli
inc
ret
js
or
bound
data16
ljmp
add
call
lcall
nop
pop
cmp
cmp
mov
filds
mov
sub
popa
movsl
cmp
lds
lock
mov
leave
jl
push
fmuls
push
and
pop
xor
lcall
ja
loop
sbb
jnp
mulb
shrb
pop
add
jb
push
pop
ffree
sub
out
pushf
add
push
aad
ljmp
dec
cltd
bound
arpl
dec
push
divl
xor
sbbl
mov
adcb
sbb
pop
jecxz
push
push
mov
xchg
sti
fists
pop
test
or
push
aaa
cli
popf
add
dec
or
rcrl
jmp
inc
xchg
mov
test
in
cmc
pop
aas
add
pop
or
bound
mov
clc
add
jnp
lock
inc
xchg
and
icebp
jmp
or
xor
outsl
mov
adc
sahf
paddb
movsb
popa
insb
lret
roll
dec
loope
sub
push
mov
popa
cmp
out
or
sbb
or
dec
cmpsl
shlb
mov
adc
push
out
mov
mov
roll
jmp
lret
mov
sarb
cmp
aam
arpl
adc
sbb
mov
cld
mov
xor
xor
sub
sub
add
push
faddl
insl
or
add
dec
std
adc
dec
pop
push
in
xlat
add
test
aad
popl
sub
dec
add
dec
jmp
sbbb
sub
push
push
fcoml
and
pop
bound
mov
cmp
dec
je
aaa
inc
fs
xchg
push
gs
ret
jo
inc
in
lds
fs
pushf
jne
pop
fists
cmp
mov
inc
bound
adc
add
imul
push
push
jo
mov
out
dec
shlb
cld
aaa
add
sahf
mov
mov
xor
cld
add
add
jg
inc
push
sub
cmp
mov
dec
fadd
test
mov
pop
test
cmp
xchg
test
ljmp
pop
mov
add
adc
mov
inc
inc
in
sub
lock
pop
mov
add
pop
mov
add
add
jp
push
je
mov
jbe
orl
and
dec
xor
xchg
test
pop
adc
je
loope
mov
pop
and
lcall
fnstsw
rolb
or
push
adc
nop
les
pushf
sbb
pop
mov
mov
cltd
sbb
add
enter
sahf
pop
sub
int3
push
pop
or
pop
cwtl
repz
aad
icebp
or
jb
adc
sbb
scas
sub
jle
ret
outsl
xchg
cmp
or
mov
push
jne
sti
push
or
mov
cld
nop
xor
xchg
jo
xor
cs
cld
dec
xlat
shlb
pushf
incl
cmpsl
xchg
push
mov
push
inc
fs
mov
lds
or
or
mov
inc
pop
int3
add
shl
jno
jae
push
jmp
rorl
mov
pop
cwtl
testb
xor
mov
mov
xchg
adc
jo
jae
fwait
lock
push
push
mov
mov
push
xor
clc
inc
stos
inc
out
mul
add
or
dec
add
hlt
fildll
sub
inc
out
decb
push
push
and
addl
shrl
fists
dec
bound
shrl
call
int3
inc
shlb
add
mov
mov
aam
inc
xchg
add
cmp
xchg
adc
test
mov
aaa
and
adc
loope
dec
mov
imul
adc
sbb
dec
lret
add
out
leave
int3
rorb
mov
popa
aaa
je
and
sub
or
loopne
jbe
outsb
mov
pop
sub
lods
xor
dec
jnp
adc
adc
dec
ss
test
sbb
xor
insb
aam
sti
fidivl
shll
pushf
insl
mov
dec
test
and
jno
lods
ljmp
es
mov
pop
test
scas
and
mov
mov
clc
lahf
pop
loopne
mov
aas
mov
push
xchg
bound
xchg
aaa
je
inc
mov
stos
add
or
ss
sbb
sub
mov
jb
sar
lea
and
sub
adc
jmp
mov
jge
sbb
insl
lock
scas
ret
pushf
das
pop
mov
mov
add
sbb
mov
stc
dec
in
inc
mov
enter
insb
adcb
orb
ja
outsb
test
in
push
scas
xor
cli
shlb
add
xchg
out
adc
mov
add
scas
fs
rolb
and
popf
pop
aaa
push
adc
lret
pushf
addr16
cmc
lods
sbb
and
adc
pop
clc
jg
dec
jne
stos
cmp
jp
add
stos
add
lcall
stos
and
jno
mov
aam
inc
or
or
arpl
mov
inc
dec
jge
aaa
jge
out
test
sub
add
std
dec
mov
add
cmp
stos
or
mov
jmp
shlb
pop
ljmp
scas
xchg
hlt
fsubs
and
push
sub
pop
mov
mov
xchg
mov
add
xorb
es
sbb
push
cwtl
stos
sub
cmc
repnz
and
test
in
pop
stos
mov
mov
inc
fwait
orb
dec
icebp
jl
xor
sbb
cmp
and
cmc
push
jmp
sub
jbe
loopne
sub
fsubp
mov
andb
pop
jbe
push
arpl
add
inc
aam
cmp
ljmp
or
or
xchg
pop
orl
les
push
lea
mov
aad
jmp
and
pop
fstl
pop
cmpsl
jle
movsl
shlb
mov
push
or
jmp
ds
sbb
inc
xorb
adc
inc
fadds
sbb
in
aad
fs
mov
or
xchg
dec
jl
push
fsubr
mov
push
xor
or
pop
popa
fs
jno
add
add
mov
ljmp
rorb
lods
andb
pop
and
sub
and
lcall
inc
lea
push
cmp
andl
mov
push
cltd
stc
mov
adc
clc
cmc
rcrw
push
push
mov
faddp
enter
inc
sub
out
dec
xor
pushl
mov
aam
loop
scas
sbb
sbb
popa
fdivrl
dec
mov
pop
dec
mov
mov
dec
xchg
jecxz
stc
cmpl
or
jge
andb
js
fdivrs
imulb
sbb
repz
and
cmp
push
dec
mov
das
add
outsb
je
adc
jnp
xor
loop
ja
push
jle
inc
sti
push
fs
mov
pop
push
clc
mov
mov
adcb
pop
sbb
dec
dec
push
and
cld
fs
cld
add
int3
test
js
data16
rcpps
daa
pushf
or
aad
pop
lods
sub
jns
and
inc
inc
aad
pop
cmc
pop
popa
push
std
xlat
mov
push
cmp
jmp
adc
ja
fwait
data16
jg
lcall
add
insl
sub
xchg
pop
lods
xchg
lock
push
outsb
push
mov
insb
out
push
in
test
enter
ret
mov
divl
clc
sub
incl
fadd
imul
mov
loope
jmp
jnp
mov
inc
loopne
insb
push
idivb
popa
jae
loop
scas
popf
push
jp
call
lcall
out
inc
xchg
fadds
or
sti
jno
enter
cld
mov
sub
add
and
test
pop
cs
pop
shrl
mov
pop
movsl
bound
pop
cmp
inc
mov
mov
jo
push
or
mov
ds
shrb
mov
pop
adc
ljmp
xchg
ljmp
sub
or
icebp
jl
out
pop
fldl
cltd
push
and
in
jecxz
sbb
or
mov
aas
cmp
sbb
jl
lret
lret
negl
dec
addb
repnz
lahf
clc
mov
das
or
or
shlb
or
pop
jmp
inc
xorl
push
dec
inc
fildll
cmp
sbb
sbb
inc
mov
adc
dec
xor
cmp
mov
push
fsubp
push
js
push
add
dec
lods
adc
pop
icebp
sub
inc
pop
jecxz
cmp
jne
lret
add
xchg
push
out
inc
and
add
testl
movsb
pop
push
push
lock
pusha
das
adcb
stc
push
loop
leave
xor
push
sti
cli
popa
jns
mov
into
loop
push
addr16
imul
xlat
jmp
dec
add
fwait
loop
sbb
push
push
cmp
outsl
rcrb
popa
push
bound
imul
jo
into
in
ret
adc
sbb
jb
gs
jne
inc
xchg
cmp
sti
popa
cwtl
in
push
push
xor
nop
test
pop
xchg
fisubs
ret
sbb
mov
xorl
ljmp
add
fimull
ljmp
jl
xchg
cld
cli
add
sub
ja
mov
jo
push
jecxz
jbe
pop
fs
mov
jp
or
push
pop
icebp
push
shlb
lods
movsb
mov
push
ss
mov
stos
mov
push
cmp
mov
pusha
pusha
js
inc
cs
push
into
mov
mov
in
add
dec
inc
sub
sbbb
or
mov
push
ret
dec
mov
adc
inc
dec
mov
or
dec
subb
cli
push
push
test
jle
or
mov
add
adc
test
add
xor
add
cli
sub
aas
and
cs
jle
sti
and
mov
mov
lret
lret
push
dec
sbb
add
pop
mov
jae
out
imul
ret
add
fsubrl
out
jl
xchg
push
in
enter
xchg
popa
push
roll
adc
shrb
xor
outsl
add
pop
loopne
outsl
push
cmp
mov
cmp
and
inc
fucom
or
mov
scas
std
dec
ret
sub
mov
pop
jg
cmc
inc
xchg
out
add
mov
test
scas
add
vmread
push
lods
sub
loop
jg
orb
aad
or
stc
cmpl
or
aam
into
scas
pop
pushf
int
sub
xchg
mov
stos
nop
push
add
sarb
jp
xlat
rolb
jge
or
sbb
or
das
sub
icebp
mov
aas
xor
mov
dec
arpl
adc
mov
lods
imul
mov
sub
mov
ss
gs
pop
add
xabort
call
push
and
js
dec
xor
je
scas
aas
inc
sbbl
clc
cmc
adc
dec
jmp
push
movsb
jns
xor
mull
aaa
rorb
sub
clc
sub
mov
or
cmp
in
jmp
loope
insl
out
pop
xlat
lahf
sub
mov
push
pop
mov
in
inc
movsl
loopne
dec
je
mov
mov
pop
into
jmp
popf
adc
movb
lds
jg
aad
xchg
out
cmpsl
sub
out
test
mov
popf
sarl
fmuls
mov
add
push
adc
pop
lahf
mov
pop
call
jmp
dec
jp
xchg
mov
fdiv
mov
je
lods
adcl
push
jae
daa
mov
cs
shrb
fdiv
xor
stc
fists
scas
jle
shlb
xchg
out
add
lods
daa
fnsave
ret
sbb
push
faddl
jmp
lock
adcb
popl
in
add
inc
test
cmp
pop
rcll
xor
es
add
cmp
cltd
popa
test
sbb
sbb
adc
lea
fldl
or
push
addr16
inc
jne
xchg
cmp
jmp
cltd
push
jbe
repnz
jmp
jo
imul
dec
cmc
movsl
les
hlt
les
adcb
and
sbb
repnz
hlt
stos
mov
sahf
push
dec
cmp
lahf
push
sub
and
or
cwtl
cs
push
xlat
les
pop
test
sbb
mov
push
xchg
fisubl
mov
and
inc
mov
popf
adc
add
push
and
daa
push
loope
sub
hlt
adc
mov
data16
and
mov
je
and
add
xor
imul
sub
dec
sub
clc
test
pusha
orl
or
jb
xor
pop
jle
dec
pop
fs
int
aas
jle
les
pop
cmp
lea
cmpb
mov
jae
adc
imul
jno
pop
push
lret
mov
pop
fildl
lret
rcrl
lods
lock
or
push
outsl
push
or
pusha
loop
ss
loopne
and
cli
scas
outsb
xor
pop
add
fisubrs
ret
xchg
cs
faddl
mov
xor
adc
lock
mov
mov
adc
dec
cli
fwait
xor
jbe
lret
shl
lcall
shll
das
out
cmpsb
fucomi
mov
adc
jp
sbb
mov
cmp
mov
loopne
inc
fs
pmaddwd
mov
add
imul
popa
xchg
xor
or
pop
sub
push
jno
jmp
lret
inc
rcl
fwait
outsb
or
out
mov
sub
or
mov
pop
cmp
inc
mov
push
mov
out
movsl
jbe
jb
mov
adc
pushf
push
ds
daa
loop
and
inc
pop
or
movsb
inc
lret
mov
pop
aam
xor
js
mov
sub
sub
push
adc
push
das
in
cs
js
and
fdivrl
sbb
mov
sub
adc
or
push
mov
test
lea
test
shl
pop
js
mov
insl
dec
jb
shlb
jl
dec
or
pop
mov
maxps
in
adc
inc
mov
in
lock
scas
pusha
xor
es
ficompl
pushf
mov
adc
in
test
popf
out
cmpl
stc
xchg
int3
jmp
cwtl
call
addb
dec
inc
lods
out
cwtl
or
sub
popa
insb
fs
rorl
sub
aas
out
lcall
and
pop
mov
mov
pop
pop
add
aam
cmc
and
pop
inc
lods
sahf
pop
mov
dec
iret
jecxz
mov
fsubrs
ljmp
pop
movsb
xor
dec
push
out
mul
aad
aam
int
cmp
add
int3
daa
mov
cmp
sbb
adc
dec
or
bound
add
mov
sub
push
addr16
jge
loopne
into
add
inc
push
jae
add
dec
insb
push
add
das
sbb
jo
adc
or
push
jo
int
dec
inc
ds
imul
adc
ficoms
bound
aas
negl
mull
sub
dec
cmpb
outsb
jno
push
hlt
cmp
flds
fildll
adc
add
out
sahf
aam
clc
and
fstl
mov
dec
outsl
bound
xchg
addr16
xor
push
pushw
xlat
dec
xchg
add
test
lods
dec
jbe
push
dec
inc
mov
dec
dec
inc
incl
push
and
jo
xor
pop
shl
jbe
add
les
sub
jb
gs
cwtl
inc
xor
and
add
mov
sub
inc
mov
and
call
cmp
fs
outsl
xchg
mov
add
in
mov
push
pop
inc
pop
lock
inc
dec
adc
adc
push
dec
call
inc
add
outsl
sub
les
or
or
js
aaa
jne
push
mov
sub
dec
xor
inc
aaa
or
dec
repnz
sub
pop
js
inc
fcompl
movb
mov
push
jbe
push
imul
cmp
lods
push
test
or
or
aas
rclb
jno
pop
sbb
mov
jmp
cmp
xrelease
data16
orb
ficoml
jnp
shll
add
fwait
out
mov
push
in
cmp
push
xorl
sbb
inc
mov
xor
pavgb
stc
sub
lret
pop
cld
add
aaa
sarl
aas
inc
push
inc
mov
jbe
dec
sub
jo
mov
ljmp
add
orl
jp
push
adc
mov
leave
xchg
cmpsl
jo
cmp
and
idivl
push
pop
mov
jecxz
lock
or
adc
pop
pop
or
add
pop
pop
into
xchg
jnp
test
rorl
mov
outsl
add
into
movsb
movsl
add
loope
jno
daa
pusha
mov
insb
icebp
add
push
and
push
cld
sbb
stos
dec
push
addb
ret
mov
xchg
sub
xor
lahf
mov
mov
mov
jp
push
scas
add
push
push
addb
jge
stos
lret
cwtl
lsl
pop
mov
pop
dec
scas
stos
shrb
sub
xor
push
sarb
les
push
int3
movb
dec
dec
hlt
rorl
stos
int3
jl
jmp
aaa
fs
mov
loop
or
xor
std
cli
shll
sub
faddl
inc
outsl
sbb
lds
test
adc
fmull
adc
cld
lock
das
stc
dec
ja
jmp
outsb
enter
push
gs
out
aam
aam
sbb
push
and
add
adc
sub
pop
pop
dec
bound
pop
mov
mov
or
ss
jmp
cmp
jnp
sub
dec
push
mov
inc
push
pop
call
inc
imul
fadds
or
pop
flds
cmovno
loope
add
inc
mov
and
add
jb
dec
cmp
add
repnz
das
inc
jmp
and
mov
sbb
add
and
pop
loope
movsb
mov
cwtl
jg
nop
fildll
push
add
sbb
subl
mov
jo
in
adc
mov
mov
xor
ljmp
lahf
iret
xchg
mov
mov
lods
add
into
xchg
sbb
dec
loop
hlt
sub
out
popf
cmp
push
idivb
in
sbb
push
jl
mov
xor
arpl
dec
enter
jmp
mov
lea
jle
pop
xlat
mov
xchg
lock
push
repnz
sub
outsl
jle
sbb
rcr
jne
adc
jecxz
fs
inc
cmp
mov
mov
rcll
ror
push
rcl
cwtl
mov
cmc
test
fidivl
jle
pop
adc
push
mov
daa
or
shl
daa
xchg
in
mov
pop
inc
std
push
add
ret
je,pn
sub
pop
clc
xor
mov
fiadds
in
std
in
pop
jl
loope,pn
cwtl
dec
dec
out
hlt
dec
pop
push
cmpsb
push
push
sub
and
mov
jge
arpl
ret
popa
and
sahf
cmp
sub
inc
jg
or
mov
jo
adc
and
out
lea
mov
pop
fdivs
mov
test
jne
push
insl
mov
add
js
xchg
das
call
jl
aad
mov
or
ret
clc
or
xor
xlat
jae
dec
mov
sbb
pop
icebp
test
sti
cmp
fstl
pop
cli
stc
jo
test
je
rorb
xchg
cmpsl
sbb
push
add
cwtl
pop
jns
ret
jecxz
stos
stos
mov
sbb
insb
mov
xor
pop
ret
clc
pusha
lods
mov
mov
xor
add
and
dec
push
dec
add
mov
jnp
add
xor
rolb
imul
adc
pop
adc
notl
pop
pop
imul
add
dec
shlb
ljmp
je
xor
stc
mov
jp
add
js
jecxz
jae
dec
dec
rorl
mov
or
pop
and
loopne
sbbb
xchg
xchg
mov
repz
mov
mov
mov
mov
push
pop
repnz
cmp
inc
and
and
jl
iret
ds
mov
sbb
sbb
ficoms
jne
fidivs
ficompl
adc
push
stc
xor
les
les
movl
jl
mov
xchg
push
pop
mov
lods
xor
adc
lahf
xchg
push
pusha
ds
aam
gs
inc
add
mov
mov
shl
jle
jle
and
cmovge
cld
arpl
jmp
jnp
fadds
and
mov
add
js
cld
lds
inc
xor
sub
loop
mov
ss
mulb
ret
xor
jg
loope
jle
in
xchg
ret
pop
inc
jmp
jecxz
mov
pop
and
adc
add
xlat
adc
fdivl
out
mov
cmpsl
push
shlb
fcoml
insl
mov
cmpsl
sub
int3
push
pop
jne
jge
and
or
jmp
imul
push
pop
mov
mov
fdivrl
and
lds
insl
fiaddl
and
lods
call
jb
jp
pushl
push
lret
or
out
add
xor
orb
xlat
mov
push
dec
add
inc
js
rorb
dec
mov
push
jbe
test
xchg
ljmpw
add
lea
aas
movsb
add
pop
mov
pop
insl
loopne
jg
cs
leave
xchg
fs
fisubrs
cmp
or
pop
pushf
out
push
mov
xor
mov
mov
sub
adc
insl
aas
mov
scas
inc
jg
inc
sbb
xchg
mov
jmp
je
xchg
cmp
pop
or
add
sahf
decb
cmp
jecxz
int
push
sete
outsb
jmp
mov
insb
inc
movsl
add
jg
dec
cmp
sub
pop
clc
mov
pop
movsb
dec
test
fiadds
adc
pop
sub
das
pop
je
pop
or
loope
repz
lahf
pop
jne
test
punpcklbw
hlt
dec
xor
fbstp
jne
outsb
scas
inc
cmpsb
ficoml
rolb
jge
mov
lods
mov
mov
add
pop
imul
add
jecxz
pop
sbb
sbb
pop
call
dec
lea
orb
jle
stos
fistpll
xchg
leave
pop
sbb
dec
rolb
bnd
lock
xchg
or
inc
xor
jno
sbb
cmpsb
fldenv
inc
inc
add
mov
ss
or
xor
sub
jb
out
push
mov
mov
and
notl
pop
sbb
es
sahf
mov
out
jmp
sbb
inc
mov
loopne
cmp
sbb
xchg
or
mov
std
scas
xor
dec
mov
mov
lahf
jge
mov
or
int
inc
insb
cmc
aas
pop
std
lods
xchg
hlt
imul
nop
xlat
data16
push
inc
mov
sbb
lods
jp
adc
sub
pop
sbb
push
cld
push
stc
ljmp
aaa
add
les
mov
leave
lret
mov
jbe
jb
es
outsb
dec
jmp
inc
dec
jmp
and
subb
jbe
add
xor
js
mov
push
imul
sub
ret
sbb
movsl
jg
clc
sub
cmp
pop
push
je
imul
sbb
push
sbb
in
add
rcll
addl
cmpb
sbb
xor
mov
inc
cmp
inc
loop
enter
push
in
cmpl
aam
adc
sub
mov
push
adc
add
jle
jge
loope
data16
fucompp
mov
out
cmc
ja
xor
rcl
in
movsl
add
mov
jecxz
mov
pop
das
bound
pop
test
in
or
mov
ja
js
es
xchg
mov
cmp
pxor
ret
fidivl
jns
sub
or
lods
or
rolb
movsb
nop
pop
shll
fs
cwtl
in
cmp
test
xor
push
sub
dec
push
jmp
push
jl
loope
dec
popf
lods
gs
sti
js
std
bound
xchg
nop
fidivl
ja
pop
in
ss
xor
jmp
mov
jp
scas
out
sarl
add
xchg
movsl
inc
inc
sarl
cld
mov
mov
push
out
or
sbb
popf
js
out
push
vpcmov
cmp
or
out
cmp
sbb
adc
ret
jp
sub
xor
cmp
insb
sub
sub
add
aas
adc
dec
mov
xchg
pop
loop
popa
sbbl
loop
ja
arpl
add
mov
jne
cmp
push
dec
fadds
outsb
push
or
ret
or
fists
dec
pop
mov
mov
inc
inc
or
push
shrl
call
xchg
push
adc
jl
cmp
pushaw
sub
loopne
nop
lods
orb
shrb
jg
add
pop
sbb
out
dec
dec
xor
shr
push
cmp
std
mov
cld
push
pop
lea
pop
or
loop
fwait
repz
cmp
in
cmp
lods
lcall
inc
shlb
rorb
subb
add
ds
xchg
push
arpl
loop
and
addr16
les
aam
xor
cmp
lods
and
movnti
sahf
xchg
push
mov
jg
hlt
mov
in
stc
inc
addr16
jmp
jno
mov
insl
add
enter
pop
pop
xorb
das
mov
fisubl
loopne
mov
cli
cmc
push
lock
lret
pusha
adc
xchg
inc
ret
jle
repnz
lods
and
call
ret
xor
das
out
xor
sub
fstpt
adc
ds
roll
mov
xor
mov
mov
addr16
movsb
dec
cmpsl
gs
test
repz
jno
mov
jg
nop
icebp
scas
fsubrl
imul
xchg
aaa
out
lods
ret
subl
dec
dec
loopne
loopne
int3
mov
pop
xchg
mov
lods
xlat
mov
ret
mov
cmpsb
or
xchg
lods
enter
mov
sub
add
pop
rcll
sub
jecxz
jle
int
stos
test
stc
dec
add
imul
je
lock
sub
rorb
pop
das
xchg
sbbb
lods
popf
pop
add
sub
cmpsb
xchg
xchg
push
sbb
sahf
or
or
pushf
mov
ljmp
lock
lods
mov
lcall
nop
mov
loope
pop
push
and
insb
pop
mov
or
mov
mov
dec
mov
std
cmpsb
dec
sub
ss
imul
xchg
fbld
sub
and
adc
xchg
xchg
xchg
cbtw
sub
int3
xchg
cmp
jmp
mov
sahf
hlt
dec
mov
ja
arpl
lock
jp
rolb
sub
mov
shll
std
mov
hlt
in
sbb
les
mov
jbe
jmp
cli
into
das
inc
mov
push
test
lret
in
add
pushf
add
cmp
xor
gs
jae
and
rolb
mov
pop
movsb
lea
sahf
sbb
xchg
mov
mov
inc
leave
inc
xor
push
adc
rcrb
aas
sub
sbb
scas
scas
mov
cmpsb
loope
and
mov
jbe
sbb
add
adc
xchg
mov
ret
addr16
mov
add
ljmp
rorl
test
xchg
ss
xchg
sti
je
push
push
xor
std
push
or
sti
int3
dec
ss
mov
push
int3
mov
data16
cltd
js
testb
test
jmp
mov
cli
pop
fildll
subb
pop
daa
dec
sub
push
inc
outsb
push
xchg
mov
mov
hlt
sbb
or
xor
aaa
cld
fs
in
pop
push
sub
push
das
sbb
mov
sbb
lock
push
inc
push
ret
or
push
adc
inc
mov
inc
xchg
dec
ret
dec
add
inc
dec
lcall
jne
sub
shll
icebp
out
push
dec
je
mov
into
dec
pushf
clc
mov
xchg
push
jns
addr16
mov
sbbb
outsl
dec
int
sbbl
dec
cmp
sub
sahf
fbstp
xor
outsl
add
inc
or
dec
dec
ficompl
pop
outsb
dec
repz
dec
jo
lock
xchg
add
inc
orl
ss
daa
loope
jo
mov
lcall
sub
test
je
inc
jne
loopne
shrl
jbe
xor
rorb
jo
lods
popf
cmp
dec
fs
mov
outsb
imul
pop
jle
dec
push
add
xor
call
inc
shlb
je
dec
adc
into
ficomps
stos
movsl
cmpsb
push
mov
or
lods
dec
cmp
mov
inc
jp
xchg
add
add
insl
inc
pop
sbb
das
xor
push
hlt
loopne
push
lcall
insb
adc
jo
jo
sbb
xchg
dec
mov
cmp
jmp
cmp
sub
inc
mov
mov
cli
mov
push
mov
pop
lret
ljmp
mov
arpl
xchg
imul
mov
popl
insl
sbb
or
sbb
pusha
sahf
xchg
js
cmp
in
loopne
std
dec
add
xor
decb
cwtl
and
adc
ffreep
cmpb
mov
movsb
inc
imul
test
sub
add
sbb
ret
scas
loope
cwtl
js
cmp
adc
loope
pop
xlat
icebp
push
in
addr16
dec
lret
loopne
add
dec
dec
loope
add
adc
or
push
push
jbe,pt
push
imul
movsl
xchg
push
or
xchg
lock
aas
test
mov
cli
test
cld
push
sbb
cmc
push
fistl
test
test
ja
cmpsl
lret
test
sub
loopne
dec
lcall
mov
lahf
and
pusha
subb
enter
push
rorl
les
fists
xchg
mov
and
shlb
mov
add
scas
inc
adc
xchg
mov
je
push
std
das
addl
or
adc
test
push
mov
pushf
call
push
cli
outsl
cmp
jne
lcall
push
xchg
inc
adc
lock
outsb
stos
adc
push
xor
jle
jo
out
and
icebp
jb
xchg
jge
das
insb
int3
pop
lret
ja
and
clc
scas
cmp
sbb
pusha
loop
cmpb
push
leave
jmp
mov
fsubrp
xor
xchg
jmp
add
jmp
ljmp
jg
push
int3
loope
fwait
ret
inc
mov
adc
cmp
aam
inc
std
jo
mov
outsb
pop
and
pop
sbb
jnp
mov
inc
into
jns
fcmovnu
lock
insb
mov
leave
push
cwtl
jo
adc
nop
divb
outsb
mov
sti
ss
pusha
stos
cmp
in
lds
sahf
fidivrs
sub
push
pop
lcall
adc
ror
test
cmp
aas
xor
xchg
rcrb
jb
dec
cld
dec
inc
mov
pop
scas
jne
jae
jmp
stos
mov
add
add
fsubl
jl
jno
cli
repnz
xor
adc
and
inc
mov
lahf
or
mov
jbe
sti
adc
mov
andl
push
sbb
idiv
push
bound
cmp
xchg
push
jl
and
jl
std
pop
sbb
mov
into
lcall
push
fcomps
cmp
dec
jmp
loopne
insb
or
aad
fsubp
pop
pop
nop
push
pop
push
sub
or
push
add
cs
fdivs
dec
cmpsb
aas
push
adc
mov
sbb
ret
sar
stos
insl
xor
add
sub
or
movsb
jns
mov
xor
enter
daa
add
mov
jnp
add
addr16
ficompl
sbb
pop
cmpsb
inc
push
aaa
aad
sub
lcall
rol
pop
xor
fstp
pop
mov
sahf
or
mov
ret
lcall
dec
cli
or
xchg
dec
push
decb
xor
mov
sub
cmp
stos
push
mov
mov
cmp
add
out
sbb
push
push
lea
je
fwait
loope
sub
or
mov
jb
add
arpl
cmpsl
repz
xchg
mov
int
popa
jnp
mov
xor
sbbl
rolb
cld
jb
in
call
jo
out
je
lds
mov
stos
fistpl
push
pop
jo
lds
stos
or
and
pop
push
sub
and
mov
pusha
test
push
push
sarb
sub
sub
sub
or
mov
cld
out
ret
aad
push
lahf
or
ljmp
push
clc
addb
test
lret
mov
or
in
aas
cmp
loop
mov
decb
mov
imul
fcoms
jl
push
lret
jg
push
stc
nop
outsb
xor
jo
pop
jno
pushf
fsubrl
adc
pusha
cwtl
rclb
pushf
xor
outsl
add
add
fcoms
adc
mov
das
push
sbb
outsl
adc
data16
mov
hlt
out
pop
fs
pop
out
pusha
jns
inc
push
loop
fiaddl
sahf
outsb
clc
lret
sarl
mov
and
dec
dec
mov
mov
cmp
out
jno
pop
mov
mov
shll
jno
aad
dec
pusha
mov
xchg
jns
pop
lock
or
les
jmp
or
test
jecxz
mov
jno
fidivrl
mov
push
insb
mov
add
mov
add
mov
jl
sahf
shll
ficomps
fsubs
gs
dec
shll
push
lods
hlt
cld
or
push
push
leave
mov
push
xor
sbb
loopne
cwtl
pop
or
sahf
insb
cmp
movb
add
stos
mov
hlt
lahf
setne
jge
add
cltd
js
pop
in
pop
pop
jne
push
andl
imul
iret
pushf
jle
fmuls
inc
sbb
ret
xchg
repnz
jecxz
jne
mov
jae
aas
add
mov
jbe
xchg
jbe
loope
mov
icebp
and
add
dec
idiv
dec
adc
push
adc
jo
cmpsl
fbld
jo
inc
mov
mov
cmpsb
mov
lods
outsl
imul
loop
jo
xor
and
cmpsl
push
fcompp
fsubrl
outsb
ljmp
inc
inc
jo
push
cmp
xchg
jo
xchg
pop
ljmp
jb
outsb
imul
dec
clc
push
push
out
movsl
inc
dec
pop
adc
call
add
out
dec
test
mov
pop
aam
push
mov
mov
add
lret
push
push
mov
adc
aad
shl
and
mov
shufps
and
dec
jo
or
xchg
pushf
adc
and
pop
shrl
imul
jns
pusha
xor
dec
clc
ficoms
push
dec
stc
ret
dec
dec
jns
lock
add
outsb
dec
mov
popf
pop
xchg
add
clc
adc
iret
scas
add
push
dec
imul
sub
push
mov
out
or
repnz
dec
out
jmp
mov
push
sub
out
lods
cmp
mov
pop
sub
inc
mov
add
add
mov
lods
cmp
inc
gs
outsb
fwait
sub
cmp
xchg
subb
daa
mov
pop
ss
inc
push
adc
aas
inc
mov
rcrb
sti
adc
mov
mov
sbb
subl
insl
xchg
fcoml
jmp
mov
pusha
add
cmp
inc
xor
or
dec
mov
and
movsl
or
fsubs
or
cmp
jg
sub
and
stos
rorl
mov
xchg
scas
pause
std
lcall
pop
cmp
mov
xor
fiaddl
xchg
int
xchg
sbb
pushf
ds
test
fldenv
mov
lret
inc
test
or
xor
sbb
jns
loopne
jnp,pn
jmp
inc
jge
test
cld
fisubl
or
das
dec
jno
xor
adc
mov
mov
in
or
ret
dec
dec
pop
or
ljmp
mov
add
lds
adc
in
and
test
sbb
int3
mov
sbb
and
test
jne
dec
in
lods
imul
faddl
mov
mov
sbb
arpl
sub
push
xor
or
xchg
rol
lret
sub
sub
add
adc
fsub
stc
shll
adc
mov
ror
ror
or
sbb
xchg
or
out
jmp
insl
cmp
or
lcall
mov
and
add
and
movl
int
je
mov
mov
xor
cmp
fstps
cmpsb
loope,pt
or
inc
popf
out
cmp
sbb
sahf
push
push
jae
das
in
ret
push
xor
stos
jnp
inc
jne
es
insb
inc
imul
push
or
stc
cmp
sub
xchg
add
in
in
add
and
arpl
cld
sub
lock
xlat
das
pop
sub
imul
cmpsb
popa
out
cmpsl
jmp
jge
nop
sbb
push
pop
ja
xchg
sti
lea
dec
rcll
pop
cmp
push
stos
sbb
not
dec
xor
daa
mov
sub
daa
xchg
xchg
pusha
add
shrl
cmpsl
inc
movsl
cmc
add
mov
ds
mov
xlat
mov
add
mov
jecxz
push
mov
push
xchg
mov
mov
popa
js
dec
fcmovnu
cmp
push
icebp
shr
call
and
filds
or
pusha
cmpsb
mov
cmp
cmp
inc
scas
push
jnp
gs
jmp
xchg
push
mov
mov
leave
inc
ret
addl
in
dec
jns
lcall
movsl
dec
pop
inc
mov
jmp
sub
data16
ss
in
inc
mov
mov
in
sub
repz
add
dec
push
loopne
or
test
xchg
pop
jl
mov
push
loope
movsb
mov
mov
ljmp
setne
lahf
xor
mov
test
push
sarb
xor
scas
popa
imul
mov
lahf
insl
pop
out
cmpsb
aad
push
adc
jle
add
mov
inc
test
movsb
jb
mov
jno
imul
daa
sbb
aad
add
ljmp
daa
jbe
mov
sbb
xchg
pushf
xor
ss
aam
dec
imul
incb
inc
sbb
xor
int3
stos
or
fs
movsb
addr16
mov
fsubrs
in
les
xor
add
sbb
mov
cs
testl
ret
loopne
dec
popa
pop
adc
repnz
and
pusha
aad
push
testb
dec
jno
pop
stc
lret
outsb
add
ss
ret
inc
push
in
das
adc
jae
arpl
clc
push
outsl
aaa
pusha
dec
mov
sti
adc
fbld
dec
dec
cmp
sahf
inc
mov
dec
push
add
or
push
cmp
push
xor
repnz
cmp
push
push
fs
xchg
add
sbb
inc
dec
in
movsb
jbe
inc
inc
inc
jne
jg
insb
dec
cli
and
dec
cmp
fildll
mov
loop
adc
jo
or
popa
lcall
inc
clc
sub
rcll
add
cltd
int3
mov
lret
insl
je
ficoms
xchg
bound
push
add
add
push
lcall
lock
adc
inc
outsl
outsb
xor
ret
pop
dec
sbb
inc
outsb
xor
mov
testl
lcall
in
lret
aam
leave
mov
loop
xchg
gs
lods
jmp
movsl
sub
add
aad
adc
dec
lcall
lret
adc
andl
pop
dec
fcoms
or
pusha
and
nop
iret
aas
inc
out
ds
imul
push
cmp
test
je
sti
cmc
nop
lret
or
cltd
pusha
xchg
aad
add
mov
jb
fwait
and
outsl
les
loop
ds
es
int
pop
in
dec
out
xchg
sub
fsubr
lods
jb
leave
mov
mov
pop
mov
fwait
mov
sbb
daa
aam
arpl
push
xchg
or
stos
enter
out
scas
ficoms
lods
mov
or
push
pop
insl
adc
jge
cld
or
add
add
js
scas
loopne
push
cwtl
add
repnz
scas
popa
inc
mov
fcoms
or
ret
loopne
sahf
test
cmp
xor
in
rcl
xor
or
xchg
cwtl
mov
test
mov
cmpsl
add
or
cmpsb
xor
jge
jbe
enter
mov
lds
mov
jbe
dec
loopne
xor
jge
pushf
sub
jle
outsb
adc
xchg
fsqrt
pop
push
mov
mov
inc
mov
sub
jp
adc
jge
or
pop
loop
jg
pop
dec
call
movsb
pop
push
movsl
gs
add
ds
pop
lahf
add
icebp
orl
rorb
xor
mov
into
loop
or
insl
cmp
add
push
rolb
rorl
data16
into
cmp
popa
repnz
imul
mov
adc
out
push
daa
adc
pop
sub
ret
inc
push
enter
add
outsl
test
sub
inc
and
addr16
call
hlt
push
inc
push
jmp
pop
jae
js
data16
lods
inc
adc
in
add
idivb
push
sbb
inc
xsha256
cmpsb
push
pop
mov
sbb
dec
cmpsb
or
jl
pop
sbb
add
sahf
stos
lods
repz
push
mov
lods
push
hlt
rorb
cltd
das
aam
jbe
inc
or
push
stos
mov
rolb
mov
add
jnp
je
or
xor
lods
dec
xchg
and
jg
push
push
daa
std
inc
into
inc
add
and
jns
fnstsw
sbb
cld
sub
test
les
daa
adc
sbb
cwtl
mov
loope
mov
fcmovnbe
xor
sbb
push
cmp
pop
and
lock
mov
push
sarl
mov
mov
mov
push
inc
mov
jne
movsl
adc
pop
pop
ss
dec
vmovd
cmp
lea
mov
mov
push
sarl
in
adc
adc
inc
bound
int
inc
and
xchg
inc
int3
push
add
lods
or
fcmovne
mov
js
imul
adc
pusha
sbb
mov
sbbl
pushaw
stos
bound
andl
cmp
jg
add
in
fsts
push
loopne
pop
mov
xor
xlat
push
sti
insb
and
push
insb
cmp
loope
std
or
or
enter
and
adc
enter
sbb
xlat
ljmp
pop
cmp
sbb
jg
jb
mov
mov
xor
cmpb
mov
pop
lea
mov
or
lods
pop
orb
aad
test
in
outsb
or
sti
xchg
je,pt
dec
stc
cmc
xchg
leave
lret
jno
fs
and
in
dec
xchg
mov
sbb
idivb
in
and
pop
inc
orb
jns
daa
mov
add
fisttps
ret
xor
icebp
pop
pushf
andl
adc
cmpsb
inc
aaa
pop
adc
cmp
mov
ret
sub
data16
jmp
jno
fisttps
or
and
clc
jns
ret
and
mov
fdivp
ja
loop
jmp
test
imul
mov
faddl
call
in
int
notb
hlt
repz
mov
xor
aas
xchg
add
dec
popf
mov
inc
cmp
jo
fldl
sbb
and
mov
pop
cmp
inc
xchg
mov
shrl
mov
outsb
cmp
sbb
jg
cmp
xor
gs
xchg
xor
pop
and
stos
or
or
mov
ret
repnz
pop
fcoms
imul
mov
and
mov
inc
test
or
mov
push
insl
loop
sub
mov
mov
push
or
xchg
mov
btc
xor
jnp
inc
inc
cmp
push
jne
mov
mov
jp
in
lods
fisubl
xlat
adc
mov
push
jle
mov
lds
imul
pusha
es
rorb
lds
addr16
das
dec
adc
outsl
sub
mov
insb
es
push
pop
cmpsl
das
xor
dec
mov
cltd
pop
int
sbb
insl
decb
es
and
xor
pop
cmpb
adc
rclb
mov
das
pop
mov
cmp
mov
lea
fwait
insl
inc
arpl
stos
pop
mov
or
call
loopne
inc
lods
dec
js
jne
outsb
mov
pop
push
call
add
add
rcrb
or
pushf
add
popl
test
addr16
loopne
mov
mov
movsl
adc
cs
jp
mov
push
testb
pop
mov
repz
inc
lods
or
data16
bound
subl
adc
movsb
fstps
bound
in
rclb
mov
mov
mov
adc
lret
outsl
and
and
xor
loopne
pop
aas
adc
add
mov
mov
sub
imulb
dec
addl
mov
adc
xor
gs
addr16
xchg
testl
jge
lods
xchg
loope
je
xor
sarl
add
dec
das
pushf
cmc
shrb
dec
js
sbb
call
xchg
aam
andb
in
mov
xor
add
mov
lret
fcomps
jmp
andb
lret
dec
in
mov
adc
jmp
arpl
shll
adc
stos
mov
inc
and
pop
dec
jg
sarb
xorb
rclb
daa
inc
and
pop
push
xor
sbb
outsb
pushf
jl
pop
sbb
ljmp
addr16
pop
jecxz
shlb
adc
add
jp
shll
pop
in
jecxz
icebp
int
bound
in
or
xor
mov
lock
test
loopne
lahf
aad
mov
pop
and
push
xchg
inc
gs
icebp
sbbl
inc
mov
nop
stos
adcl
scas
je
mov
std
mov
lods
lret
popa
mov
mov
es
mov
mov
cs
mov
rcrl
or
xchg
std
sbbl
insl
movsl
in
cmp
ds
push
xchg
sbb
push
pop
adc
in
pop
jecxz
jnp
das
mov
stos
imul
push
mov
test
in
mov
pusha
stos
cwtl
in
inc
mov
jge
add
mov
push
scas
mov
mov
dec
clc
sub
push
insl
xlat
add
repnz
adc
mov
push
leave
adc
push
mov
lods
mov
mov
rolb
push
inc
iret
ret
sub
dec
ror
sub
inc
loopne
adc
popf
shll
mov
cmp
addb
popf
cmp
cmp
jns
cmp
loopne
jmp
daa
icebp
adc
ja
mov
xchg
lods
sbb
xor
mov
imul
test
xchg
mov
mov
imul
sbb
add
mov
mov
negl
mov
es
into
pop
shl
sbb
fbld
cmpsb
minps
push
cmp
inc
cmp
notb
dec
cli
movsb
adc
cmpb
add
xor
addb
sub
outsb
mov
xchg
rolb
movsb
call
xor
pop
mov
rclb
movsb
push
stos
lret
loop
xor
add
mov
mov
mov
cmp
shll
and
aad
mov
out
dec
cld
lcall
xorb
out
bound
js
lods
inc
stos
adc
jo
pop
xor
inc
loope
mov
emms
or
mov
insb
dec
lods
mov
and
popa
mov
sbb
fwait
cmp
dec
fisubrs
aad
jb
sahf
jg
icebp
or
dec
xchg
pop
push
and
and
ds
loope
xor
fs
es
mov
push
mov
andl
cmp
mov
hlt
add
gs
ret
adc
bound
cmpsl
push
stc
adc
ljmp
dec
sbb
into
adc
rorb
xor
jno
orl
stos
imull
test
into
and
push
sbb
ds
cltd
ret
test
xor
mov
jp
mov
dec
cmp
xchg
jnp
jne
shrb
out
xchg
fldl
loop
add
mov
sti
and
stos
clc
sbb
test
lea
test
jle
xchg
xor
repnz
pop
clc
and
cmpl
sbb
xchg
icebp
add
cwtl
jg
gs
arpl
cmpsb
stos
dec
mov
shll
dec
mov
ljmp
sub
or
addb
jb
test
mov
jno
jno
mov
mov
cltd
es
jnp
inc
xchg
test
push
cmp
push
cmp
dec
dec
mov
syscall
cmp
push
scas
stos
addl
dec
add
inc
cmp
test
gs
adc
testb
call
test
cmp
pmaddwd
sbb
ret
sub
dec
daa
mov
adc
xchg
movsb
or
les
jl
aaa
add
and
inc
inc
add
sub
jae
cmp
lea
xchg
inc
cmp
jo
push
add
jo
out
sbbb
rolb
sub
push
or
adc
pop
cwtl
test
std
and
jo
sbb
add
mov
sbb
idivl
pop
add
add
or
ljmp
cmpsb
lcall
mov
mov
mov
pop
arpl
adc
shrb
mov
repz
jbe
add
std
jno
fistl
cmpsl
jge
lea
call
jl
xchg
cmp
aaa
dec
imul
adc
add
mov
leave
push
imul
loopne
das
repz
movsb
sbb
mov
in
push
add
push
xor
cltd
mov
xchg
pop
out
adc
imul
adc
jbe
and
stos
cwtl
sahf
pusha
aas
push
jge
inc
cli
jno
push
sub
insl
xchg
not
xorl
jl
cs
mov
and
cmp
or
sub
sub
sti
jecxz
aad
adc
test
call
add
push
adc
imul
incl
add
dec
shl
pusha
sar
cli
inc
sbb
add
pop
fildll
jne
jg
mov
rol
adc
xchg
in
in
mov
sbbl
xor
jle
xor
xchg
out
movsl
sub
in
jo
fdivl
fsubp
jp
aad
push
int
dec
out
out
push
cs
popa
lock
xor
cmc
xor
pop
mov
adc
pushf
pop
or
xchg
sbb
or
push
hlt
inc
mov
sbb
push
std
mov
test
addl
cli
push
rolb
xchg
icebp
xlat
mov
test
aam
sub
cmp
rolb
dec
rorl
add
das
stos
inc
sbb
fidivrs
lahf
sbbl
add
clc
xchg
mov
ret
jnp
das
sub
push
add
push
filds
aam
mov
addr16
inc
mov
sarb
cmp
inc
xor
insb
popa
fistl
add
and
add
sbb
push
cmpsb
jno
add
cmp
push
rcrl
lock
es
cmp
push
pushf
mov
adc
mov
aas
dec
pop
inc
mov
in
rolb
fdivs
push
js
jb
jbe
fs
xor
dec
add
add
xor
mov
mov
jo
and
insl
dec
gs
add
mov
arpl
mov
ja
sbb
mov
push
stos
int3
inc
mov
dec
in
loope,pn
pop
inc
add
testl
inc
js
jl
mov
pop
push
stc
daa
mov
jecxz
imul
dec
insb
mov
dec
dec
bound
ss
adc
jecxz
sti
cmovb
xor
mov
jo
cli
xchg
test
inc
push
aaa
stos
add
aaa
xor
loopne
fimuls
ret
jae
fs
adc
ja
loope
cmc
in
out
ret
loopne
sbb
test
xchg
int3
or
inc
and
bound
cmpsl
ss
push
push
jne
call
xor
iret
repz
clc
and
cmp
lock
inc
jmp
dec
jne
inc
pop
jl
enter
inc
pop
lods
adc
fsts
ffreep
push
dec
lret
dec
adcb
insb
popf
xchg
clc
sahf
cmp
imul
shrl
clc
mov
and
dec
jge
js
imul
jg
dec
fs
add
or
cli
rclb
clc
dec
add
insb
jno
ret
sub
cmp
dec
cwtl
inc
cmpb
ljmp
cmp
lret
mov
js
dec
sbb
inc
dec
mov
or
ljmp
xor
inc
pop
push
cld
xchg
or
inc
fmuls
sbb
jb
dec
jae
pop
inc
add
pop
push
sub
xchg
add
mov
mov
mov
xchg
adc
rol
inc
lea
add
xor
cmp
inc
dec
cld
and
into
cmpsb
sbb
fs
mov
sbb
popa
dec
push
jae
rorl
or
inc
jp
into
incl
subb
gs
push
xchg
jo
push
int3
push
pop
ja
xchg
std
add
xlat
insl
sbb
push
mov
dec
imul
ja
dec
addr16
addl
push
push
dec
xchg
js
rorb
push
and
cld
push
imul
cmpl
xor
jae
jbe
jecxz
xchg
xor
repz
inc
sub
ss
ret
mov
adc
pop
dec
fsubr
loope
push
idiv
or
or
mov
mov
jne
xor
xchg
mov
pop
iret
push
ja
sub
inc
jecxz
jp
lea
inc
adc
or
loopne
in
inc
dec
pusha
int3
inc
and
out
movsl
push
fnstcw
ret
call
dec
rcl
scas
fdivl
lret
add
mov
jnp
inc
add
mov
sbb
ds
imul
outsb
xchg
sub
inc
sbb
inc
push
xor
hlt
pop
pop
into
push
pushf
push
imul
push
adc
inc
ficompl
jle
fdivr
insb
js
inc
out
push
cli
cmp
dec
or
push
scas
pop
fdivrs
push
loop
iret
push
push
insl
mov
adc
pushf
sub
icebp
aad
outsb
adc
scas
dec
bound
jle
mov
xor
pop
jae
inc
ret
inc
jbe
shrl
mov
xorl
call
mov
adc
out
pop
roll
xor
loop
cmp
sbb
or
ja
sahf
push
lret
push
mov
insb
jns
push
dec
push
sub
xor
push
mov
enter
mov
lock
mov
ja
sbb
inc
pop
ss
iret
icebp
lret
inc
arpl
mov
add
shll
jb
addr16
mov
xor
xor
jmp
flds
sbb
les
add
addb
dec
jge
push
dec
xor
test
mov
or
lock
fiaddl
sahf
add
mov
pop
xchg
dec
or
pop
adc
dec
xor
cmp
sub
lcall
cmpsb
inc
cmp
in
cmpsb
mov
jmp
test
popa
push
dec
jae
ret
add
jns
fisubrs
inc
push
mov
push
or
mov
subb
inc
popf
xchg
xor
dec
in
loopne
ja
js
add
pop
mov
push
sub
loopne
adc
ficompl
es
cmp
or
imul
ja
xchg
push
xorb
aam
outsb
sbb
adc
outsb
jbe
outsb
iret
cmp
fucomip
jbe
imul
insb
push
stos
stos
daa
pop
sub
jae
sarl
and
sbb
cmp
ds
test
into
ds
inc
stos
popa
jb
fimull
rolb
data16
sar
testb
inc
inc
dec
popa
and
dec
dec
inc
loopne
mov
sub
jb
js
or
mov
mov
addb
inc
mov
ljmp
xor
inc
arpl
arpl
data16
fisubrs
dec
inc
sahf
push
js
inc
int
popl
push
mov
push
insb
add
gs
insb
les
push
imull
dec
and
shlb
out
imul
in
lock
cmpsl
loopne
dec
jne
lret
cs
xor
fs
mov
push
dec
imul
inc
cmp
xor
pop
inc
inc
jns
les
xorl
icebp
or
xor
mov
lret
ljmp
xor
sbb
sub
dec
lock
inc
rcrl
jno
add
adc
cld
or
insb
mov
mov
jno
push
or
mov
or
adc
pop
lea
orl
movsb
pop
es
shrl
push
jmp
mov
mov
stos
xor
test
push
out
jmp
test
and
push
add
aas
fsubrs
in
pushf
dec
popa
xor
in
ss
mov
jo
add
movq
scas
xor
data16
sub
cwtl
bswap
adc
imul
mov
mov
cmpsl
jb
mov
xchg
cmp
adc
roll
cltd
adc
adc
or
ljmp
ret
dec
xorw
add
inc
xchg
jnp
popa
les
add
das
cwtl
xchg
jge
jnp,pt
or
jl
dec
in
cwtl
push
sbb
push
pop
leave
incb
adc
dec
sub
pop
sti
dec
dec
cmp
mov
mov
or
or
add
loope
sbb
pop
xor
lods
subb
xchg
xchg
pop
jnp
adc
push
push
or
xchg
sbb
out
ffree
arpl
out
mov
imul
jo
pop
push
dec
faddp
cwtl
mov
inc
push
adc
lret
jmp
sub
lret
mov
sub
mov
sbb
jbe
popa
lods
loope
xor
cmp
pop
jp
push
push
pop
ss
sub
repz
mov
mov
repz
lret
push
orb
sti
xchg
clc
mov
sub
cmc
mov
xor
xorl
jecxz
and
aam
das
add
aam
dec
andl
popf
jmp
xchg
jne
in
movl
cltd
sbb
fists
jp
or
rolb
jge
shll
cmp
stos
popa
and
and
and
shr
mov
addb
mov
xchg
mov
cmp
in
icebp
out
mov
cmp
orb
in
movsb
xchg
pop
into
adc
es
or
fsubl
mulb
xchg
lea
roll
gs
dec
shl
cmp
emms
lock
test
in
pop
xor
sbb
sub
mov
xor
push
scas
cmpsb
sbb
xchg
add
add
rorl
mov
mov
loopne
ds
movsl
xor
loop
stc
jle
sub
sub
mov
movsb
xchg
cmp
loopne
in
cmp
cmp
sbb
and
mov
xorb
outsb
cmp
bound
test
arpl
loop
jecxz
inc
ret
mov
test
lcall
jecxz
mulb
imul
cmpsl
cld
or
lret
sti
popf
or
adc
rcll
adcl
cmp
sub
adc
xor
mov
inc
push
or
dec
push
xor
push
mov
xchg
shrl
stc
loopne
pop
xorl
lock
add
arpl
mov
scas
inc
cwtl
push
push
cs
rorb
mov
mov
mov
test
rcl
imul
push
jnp
sub
mov
cs
rolb
lea
add
add
rolb
cltd
loope
mov
cmpsb
cli
cmp
mov
and
dec
add
cmp
dec
es
mov
nop
data16
je
pop
mov
lcall
push
and
dec
and
add
fcoml
or
xor
cmc
dec
call
xlat
pop
fistpll
cmp
mov
pop
jle
test
mov
xchg
sbbb
xlat
fwait
cmp
lahf
push
xchg
lods
push
insb
xor
pop
aaa
jne
jecxz
fisttpl
dec
js
mov
inc
fld
fsubs
pop
js
xor
cli
lock
cld
aam
xor
cmp
mov
imull
jae
push
xchg
outsb
xchg
ret
mov
bound
sub
xlat
push
lods
dec
xchg
mov
inc
cmp
mov
sbb
das
xor
jae
pop
dec
inc
sub
mov
jmp
add
push
ds
or
add
ret
das
shlb
cs
dec
cli
ljmp
mov
je
dec
dec
inc
dec
add
outsl
rolb
fidivl
xor
pusha
mov
pop
dec
dec
je
mov
out
stos
xor
mov
and
shll
loopne
push
push
push
push
jne
ja
lahf
sbb
push
jmp
mov
addr16
int
xchg
sbb
lea
insb
push
add
clc
mov
pop
sbb
push
outsb
add
xchg
jne
or
fs
jg
mov
inc
mov
loope
sub
mov
sar
jp
cmp
xor
adc
ret
outsl
mov
or
insb
push
ja
push
xor
pop
clc
pop
sahf
mov
sbb
test
call
dec
adc
mov
jo
push
inc
inc
ja
outsl
popf
out
push
or
jne
mov
dec
dec
in
or
pop
leave
cmp
push
ljmp
repnz
jo
push
lds
sbb
jle
jne
fs
inc
adc
inc
inc
jecxz
pop
pusha
hlt
push
push
jg
dec
cli
jecxz
test
push
pop
push
icebp
incb
inc
xor
mov
int
nop
addb
inc
or
push
sub
jb
addl
inc
or
in
lods
popa
and
cmpsb
icebp
add
jmp
mov
movq
inc
aam
outsw
sbb
mov
imul
fmul
dec
outsl
push
js
std
adcb
push
mov
jle
mov
insl
dec
stc
cmp
dec
js
shr
dec
add
pop
mov
dec
jbe
aam
jl
clc
jge
pop
add
call
lret
jae
add
inc
mov
and
push
hlt
cmpsb
jns
les
pushf
fs
mov
cli
test
clc
push
pop
push
xor
addr16
sbb
outsb
dec
sbb
inc
movsl
mul
std
inc
push
inc
ss
or
cmp
in
clc
jbe
inc
cmp
dec
push
lret
dec
add
dec
inc
dec
loop
push
xchg
mov
push
dec
jmp
bound
jle
cmp
add
inc
inc
sbb
cmp
fidivs
dec
push
xor
jge
test
sbb
imul
mov
movl
in
fisubrl
flds
shll
lret
mov
test
add
and
or
mov
jo
sbb
ret
arpl
enter
stos
add
sbb
xor
or
and
test
lods
or
cwtl
xacquire
push
jo
inc
jb
dec
mov
cmp
sbbl
cmp
les
imul
mov
pop
fiaddl
test
dec
iret
adc
or
out
test
cwtl
cs
aad
xor
sbb
ds
js
add
inc
jecxz
outsl
push
pop
lret
jbe
jne
jmp
test
cltd
mov
loope
fdivr
out
dec
add
jae
pop
js
iret
dec
add
dec
sub
ret
loop
fistps
jne
push
mov
test
mov
cs
sub
ret
xor
aam
sub
jbe
stos
cmp
jp
push
mov
inc
sbb
add
sbb
fimuls
cmp
out
sbb
lock
jbe
cmp
jno
iret
cmp
push
or
es
dec
pop
sbb
dec
into
mov
addl
sbb
sbb
adcl
mov
call
add
out
xchg
sbb
ret
out
add
mov
push
imul
jb
and
in
aaa
lds
add
daa
rcrl
adc
mov
ficoml
mov
loop
push
call
aaa
adc
push
ret
loop
stc
loopne
pop
shll
ror
mov
jl
cmp
mov
xor
jl
push
adc
es
pusha
dec
cli
or
sbb
mov
test
mov
inc
push
ss
loop
aas
add
and
mov
negb
call
fistpll
add
sbb
pop
add
mov
icebp
outsb
mov
icebp
add
jp
cmpsl
es
xor
daa
sti
stos
lcall
cmp
shll
outsl
faddl
dec
sbb
sub
adc
js
out
in
inc
push
int3
sub
mov
cltd
imul
cmp
xchg
inc
push
mov
push
xchg
test
je
sti
ret
inc
or
cmpsl
fdivrs
xchg
scas
addl
les
dec
repnz
push
lods
mov
push
inc
cld
xchg
sub
lahf
add
paddusw
in
js
mov
loopne
push
push
sub
das
sub
sbb
mov
mov
push
scas
dec
xchg
adc
lahf
icebp
inc
lods
sub
std
add
cld
sub
stos
test
add
inc
push
in
cmp
les
adc
cmp
push
inc
pushf
daa
lods
out
push
dec
push
adc
lods
adc
mov
jp
ret
mov
push
push
add
mov
adc
add
rcrl
loopne
and
sub
jmp
aad
mov
sub
ret
xor
jns
xchg
mov
sbb
sbb
into
jmp
frstor
mov
pop
loope
adc
push
cld
xchg
pop
pop
push
lds
lock
ret
cmp
hlt
cli
xor
shll
insb
test
cmc
push
push
cmp
lock
sti
xchg
push
mov
lret
or
ffreep
iret
sti
push
inc
loop
jb
push
dec
sub
pop
icebp
push
add
shl
add
jle
decl
insl
cmp
inc
int3
mov
popa
shr
xlat
lea
mov
mov
mov
aad
mov
inc
out
jp
nop
jl
dec
jo
fiaddl
mov
shl
rcrl
loopne
cmp
sbb
shrb
ficoms
inc
jbe
xchg
pop
push
push
dec
shlb
pop
cld
push
or
repz
ret
mov
sbb
fidivl
jne
add
mov
xchg
aaa
inc
inc
cld
dec
dec
adcl
dec
fnstenv
pop
lea
xorl
pushf
xchg
ja
rcll
out
je
jbe
sti
xchg
je
lea
cli
mov
jnp
shll
loope
push
push
pop
sbb
push
or
pop
ret
push
dec
faddl
rorb
clc
and
add
inc
pop
inc
mov
clc
xchg
push
dec
arpl
sahf
mov
sbb
aam
sub
push
add
lds
jecxz
mov
sub
ficompl
inc
cld
jl
test
sbb
rcrb
xchg
and
pop
gs
push
dec
push
pop
flds
jge
jl
outsb
out
outsl
cmp
cmc
js
sbbb
push
les
push
mov
idiv
xor
mov
mov
pushf
add
dec
inc
xchg
imul
aas
push
enter
sbb
ljmp
lea
add
outsl
dec
pop
jbe
bound
mov
lcall
test
repnz
add
and
sbb
sub
sti
ficompl
cmp
adc
loop
lcall
hlt
cmp
inc
or
test
xchg
es
out
ja
orl
mov
sbb
jecxz
das
mov
movsl
jmp
out
aam
cmp
test
mov
push
js
add
fisubs
fwait
mov
mov
adc
jne
fiadds
cmpsb
mov
xor
add
mov
addb
stos
sarl
sbbb
pop
loop
cmp
cltd
es
mov
and
dec
add
mov
xchg
jmp
inc
movsl
iret
fcmovbe
mov
ss
jmp
adc
xchg
test
push
js
sbb
ja
jne
push
inc
jne
mov
xor
lds
sahf
or
sbb
jnp
ja
sbbb
mov
or
movsb
push
add
out
xchg
std
push
xchg
jle,pn
add
cmp
or
ret
lods
pushl
xchg
icebp
add
and
or
xchg
pop
test
aas
sahf
push
cmpsl
sub
dec
out
push
rorb
jns
mov
int
mov
xchg
notl
push
jp
push
xor
loopne
sbb
inc
outsb
jae
fs
sbb
push
xor
push
mov
data16
insl
ja
insl
bound
adc
mov
outsl
inc
fs
jp
xlat
call
out
inc
jge
bound
imul
testl
scas
add
xor
jae
inc
mov
je
adc
adc
addr16
push
jp
mov
push
dec
dec
push
jecxz
popa
imul
fwait
sbb
sub
in
push
push
inc
cmp
fs
jns
push
xor
or
aaa
les
dec
pop
icebp
jg
or
pop
js
push
nop
mov
pop
movsl
mov
xor
pop
push
dec
call
popf
mov
mov
lods
mov
bound
lret
popa
js
mov
pop
push
inc
sbb
repnz
out
jp
push
lcall
inc
dec
or
inc
aaa
adc
arpl
hlt
pop
decb
add
mov
mov
push
pushf
in
out
xor
and
sbb
push
mov
add
push
rorb
mov
and
adc
inc
inc
rcrl
add
das
jl
ds
add
inc
insb
inc
scas
bound
pop
cmpsl
mov
fisubrs
xorb
enter
scas
and
jae
ljmp
nop
or
jae
xor
lods
js
push
mov
pusha
inc
xchg
shll
xchg
add
push
loop
test
jp
xor
pop
mov
jp
in
imul
mov
movsl
and
push
push
pop
inc
es
adc
push
in
mov
lock
subb
icebp
sti
jp
jmp
sub
scas
movsl
ljmp
mov
fcomip
dec
loop
je
sbb
and
sub
xchg
or
js
pop
cli
adc
sub
lret
cmpsb
push
xlat
add
mov
jo
sbb
in
fimull
cwtl
in
leave
lret
push
mov
mov
mov
mov
lea
adc
shlb
xchg
data16
push
fildl
in
dec
dec
push
push
scas
cltd
xchg
mov
dec
loop
xor
cmc
and
cwtl
inc
mov
jl
mov
mov
aam
mov
push
iret
cltd
stos
mov
adc
icebp
jmp
scas
pop
jp
jmp
jo
mov
push
xchg
push
test
lock
fldt
loopne
les
adc
or
add
cld
decl
jno
stos
jns
mov
xchg
sbb
fcompl
mov
shlb
sbb
xlat
and
mov
pop
pop
inc
xchg
addr16
sti
les
int3
jmp
xlat
cmp
xlat
or
loopne
mov
bound
sub
inc
adc
in
aaa
ljmp
cli
and
mov
je
fiadds
xchg
push
test
lock
daa
adc
jo
test
mov
cmpsl
loop
pop
out
fdivl
int
roll
mov
pop
jae
shrb
lahf
pop
cmpsl
add
je
cmp
comiss
or
lock
movsb
jle
jmp
imul
and
aaa
insb
roll
or
ret
fcmovnb
rcll
dec
jmp
test
jecxz
add
mov
ret
aas
test
rcrb
insb
fisttpll
shl
fisubrs
or
in
or
add
inc
fcoml
jecxz
mov
pop
sahf
ljmp
jle
and
fidivrl
sbb
mov
adc
sbb
cltd
pop
dec
sbb
jp
pop
xchg
add
sahf
lret
adc
into
inc
test
mov
shr
call
bound
mov
push
pusha
popf
sub
pop
adc
aad
lret
loop
movsl
sbb
push
mov
loope
push
mov
xchg
and
iret
icebp
add
or
adcl
jmp
dec
sbb
dec
sti
dec
test
mov
lods
sbb
push
fiaddl
ds
pop
rcl
push
fmull
int3
or
sub
and
mov
scas
lods
sub
jge
outsl
lea
fcom
inc
inc
repnz
mov
pop
test
mov
movsl
add
xor
inc
out
adc
cmc
mov
addl
xor
dec
ret
ret
and
sbb
in
xor
imul
push
mov
adc
aam
out
stos
ret
push
lret
sub
imul
xor
push
in
jl
or
ret
or
add
stc
or
and
mov
daa
xchg
pusha
mov
dec
mov
and
imul
add
dec
push
mov
ljmp
jae
jb
roll
add
push
fcmovbe
adc
decl
mull
pop
lods
and
dec
push
xchg
mov
dec
inc
arpl
mov
add
inc
and
mov
mov
inc
and
negl
test
repz
subb
test
lds
xor
sub
adc
pop
inc
inc
popa
mov
mov
mov
adc
mov
inc
popf
mov
push
cmp
gs
insl
dec
rcrb
or
iret
add
mov
pusha
fsubrl
xlat
dec
xor
gs
mov
jecxz
xchg
mov
add
inc
push
aaa
outsl
xor
xor
mov
dec
inc
add
xor
rolb
add
mov
add
xchg
pop
sbb
xor
xor
sub
into
sahf
inc
dec
xor
inc
sub
push
push
add
fs
dec
in
lcall
js
jle
xlat
adc
sub
xchg
push
popa
pop
jle
mov
push
out
dec
outsb
cmp
adc
jns
in
mov
or
and
push
dec
sarb
hlt
aad
xor
dec
jb
xor
je
jnp
lock
outsb
enter
pop
test
sbb
mov
inc
loopne
mov
xchg
xor
adc
bound
lods
push
dec
aaa
cmp
ficoms
xor
bound
lds
popa
bound
arpl
jp
rcl
scas
fidivrl
ret
lret
rcr
add
cmp
icebp
pusha
jbe
pop
xor
scas
cmp
inc
clc
inc
xchg
test
fimull
sub
add
sbb
je
fists
or
push
pop
lret
add
jl
mov
js
xor
nop
push
je
fcomps
sub
scas
dec
leave
rorb
xor
and
add
ret
cmp
ss
ljmp
sub
jg
mov
insl
cmp
pop
xlat
cmp
test
xchg
push
les
daa
loopne
incb
inc
inc
imul
ret
loopne
and
push
ret
arpl
shlb
and
into
inc
rclb
imul
mov
addr16
cwtl
mov
xchg
clc
push
push
jne
or
sbb
or
popa
outsl
shlb
and
mov
lock
insl
dec
shl
addr16
mov
dec
inc
jbe
dec
push
adc
fs
pop
outsb
push
pop
lret
adc
rorb
js
xchg
xor
adc
push
add
les
sub
pusha
adc
dec
push
xor
lahf
adc
bound
insl
jne
inc
je
inc
aaa
jno,pt
push
dec
dec
mov
push
scas
inc
dec
inc
push
insl
push
inc
js
xchg
sbb
ds
ss
pop
movsb
jg
cmp
dec
push
es
jb
xor
mov
dec
popa
push
outsl
jns
jecxz
push
gs
call
sub
jno
push
rcrl
jl
shll
dec
adc
mov
jle
jmp
insl
mov
dec
push
clc
pop
cmpps
test
pop
adc
push
push
push
aaa
jle
push
push
into
insb
cmp
fsts
inc
jae
xlat
aad
mov
add
xchg
push
xor
insb
arpl
sbb
dec
jns
ss
bound
jae
ret
aad
inc
push
jo
fdivs
subl
js
push
mov
xor
xchg
xchg
mov
and
scas
lret
pop
dec
sbb
push
xor
hlt
or
jle
xchg
mov
ret
sbb
clc
icebp
pop
gs
jmp
sbb
je
ret
lock
dec
xor
mov
nop
cmp
ljmp
mov
addr16
ret
xor
rcrl
inc
jns
les
je
je
mov
xchg
bound
js
pop
and
dec
xor
or
adc
add
jp
sti
inc
loopne
mov
jmp
push
jmp
push
divl
jns
orl
push
add
pop
jecxz
test
sub
cmp
sub
add
mov
das
mov
roll
jp
jae
or
call
inc
xor
dec
sub
fcmove
and
and
sub
aas
psubsb
pop
inc
rcr
pop
adc
adc
xor
pushf
popa
ficoml
adc
or
adc
push
insb
loopne
insl
lahf
mov
mov
imul
pop
lea
aas
lret
or
pop
outsb
push
fists
push
push
xor
inc
mov
push
add
ja
lret
jmp
pushf
nop
mov
jo
fimull
jo
jns
rorb
andb
push
mov
cmpsl
outsl
adc
insb
bound
icebp
in
cmc
movsb
jp
pop
orb
sbb
inc
imul
dec
faddp
jmp
dec
arpl
mov
outsl
pusha
inc
inc
inc
push
dec
aad
add
sti
dec
hlt
test
bound
enter
ret
lock
adc
dec
in
js
add
comiss
lcall
insl
push
js
test
or
push
xor
mov
or
fwait
stos
out
xor
mov
fistps
pushf
clc
outsb
adc
mov
push
fidivs
push
cmpsb
lret
pop
jge
out
jbe
or
ret
dec
jbe
mov
or
orb
jne
dec
stc
xor
sub
xlat
push
mov
adc
mov
push
ss
mov
pop
and
pop
jno
pop
in
push
repnz
data16
pop
or
and
inc
jmp
cmp
lock
dec
push
sub
push
insl
push
loop
scas
js
icebp
fadds
dec
jno
push
mov
ror
xor
inc
push
test
push
push
cmp
shl
dec
push
fs
loopne
jbe
jl
pop
ss
int3
sti
add
loope
ds
gs
mov
xchg
xor
push
pop
jno
jne
push
mov
rolb
jo
scas
xor
pop
enter
adcb
dec
cmp
mov
inc
inc
fcoml
arpl
xchg
dec
gs
cli
push
dec
aaa
or
ficomps
gs
data16
into
and
mov
xchg
xor
dec
push
popa
add
cmpsl
mov
inc
dec
adc
nop
mov
fs
adc
cmp
dec
jbe
ss
sub
call
fs
adc
pop
insl
mov
add
or
sub
mulb
shlb
outsb
test
data16
pop
roll
daa
adc
mov
dec
aas
sarb
sbb
cmp
push
testl
lret
lods
jl
ret
aam
adc
jmp
popa
ficomps
aam
xchg
adc
lcall
and
jmp
mov
inc
mov
cmp
jmp
jp
das
and
xabort
cld
inc
adc
nop
add
nop
ljmp
push
xchg
push
scas
mov
lcall
out
or
shlb
sub
int3
adc
inc
mov
rcrb
adc
jae
cli
into
rolb
adc
jmp
inc
test
cmp
jne
test
xor
loopne
or
jnp
sub
jne
xchg
lods
adcb
mov
std
cwtl
xchg
inc
aaa
stos
roll
out
or
mov
or
test
jg
imul
sub
cmp
addb
fdivl
cmp
xchg
mov
dec
inc
andb
mov
jmp
lahf
add
jbe
jecxz
pop
jns
push
dec
ret
sbb
call
jp
jbe
jmp
stos
scas
aad
inc
fnstsw
adc
pop
mov
push
mov
and
or
fwait
adc
add
mov
sbb
or
xchg
movsb
xlat
aad
hlt
xorb
xor
jno
xchg
pop
mov
or
adc
test
add
push
push
or
repz
pusha
int
ja
jl
mov
mov
and
aam
pop
or
mov
adc
pop
sub
push
mov
int
decb
pop
adc
jmp
pop
mov
xchg
mov
movsb
outsb
dec
jmp
pop
xor
lcall
mov
imul
negb
push
ss
jne
pusha
pushf
jecxz
sarb
add
aam
pusha
rolb
fsubrs
adc
outsb
sti
mov
ss
daa
sbb
sbb
scas
stos
push
xchg
cs
xor
test
rolb
pop
xchg
js
jno
loope
outsb
mov
repnz
mov
in
push
frstor
lret
sti
shll
xchg
sbb
add
call
pop
orl
add
push
push
mov
pop
or
fwait
insb
jl
add
test
fldl
xor
sarl
xor
xchg
push
lods
stos
xor
push
popf
and
rcrb
test
cwtl
xchg
fildll
sbbl
pop
testb
ds
push
std
inc
lahf
ret
adc
cmp
fidivrs
pop
lock
mov
mov
inc
push
xchg
leave
sbb
jmp
dec
fistl
test
mov
cs
lcall
sub
test
sub
mov
inc
push
lds
rorb
fiaddl
ret
stos
shr
es
push
stc
inc
add
adc
mov
ds
lock
test
xchg
dec
mov
hlt
inc
jb
lock
add
scas
nop
scas
mov
fdiv
call
jb
fmull
repnz
stos
cmpsb
inc
mov
mov
mov
mov
es
mov
mov
lods
pop
xchg
xchg
sub
shlb
pop
and
data16
shrl
clc
call
gs
cli
pusha
adc
incb
ds
push
mov
icebp
push
jg
push
aas
cs
sbb
or
fcoms
jo
jmp
cmp
jp
loope
enter
sub
out
stc
push
scas
push
cli
xor
push
push
dec
cmpsb
adc
adc
xchg
pusha
outsb
adc
nop
les
cli
scas
xor
xorl
adc
push
std
mov
jecxz
cmp
orl
mov
mov
ss
or
pop
xor
mov
push
pop
mov
scas
out
lcall
adc
xchg
rolb
dec
enter
pop
xor
cs
les
sbb
out
jmp
lea
imul
ja
jg
xor
fwait
sub
clc
xor
add
push
cld
cwtl
nop
inc
lods
add
fisttpll
orb
sbb
nop
adcb
sbb
xchg
repnz
add
dec
sbb
xchg
push
cmc
dec
jle
inc
bts
dec
xor
sar
sti
jmp
jmp
call
fsubrp
and
testb
mov
adc
dec
scas
mov
arpl
es
sbbl
adc
add
ret
or
cmpsl
push
testb
adc
rcl
insb
nop
enter
ja
xchg
rorl
sub
push
sub
fwait
int3
mov
sbb
push
xorl
cmpsl
fs
push
adc
add
push
dec
fdivr
rcr
in
add
add
in
loope
inc
inc
xchg
in
mov
mov
ret
int
xor
ja
enter
orl
ret
push
xchg
jmp
fistl
inc
cmp
add
mov
pop
jecxz
cmc
add
lret
jo
mov
and
jg
lds
out
adc
jle
fstl
mov
jp
sbb
push
adc
add
mov
jb
and
sub
lock
lret
jge
push
or
and
pop
ret
add
sbb
aas
data16
aad
xchg
pusha
dec
add
pop
addr16
add
dec
jne
out
stos
inc
lock
into
cmpsb
in
xchg
ljmp
inc
imul
mov
push
shll
and
fisttpll
bound
loope
push
inc
mov
sahf
scas
pop
pop
mov
cmc
xchg
rcll
out
mov
mov
cmpsb
aaa
mov
pop
dec
fildl
adc
lds
ss
ljmp
les
or
iret
out
push
out
xchg
add
pop
fdiv
push
adc
aas
and
jb
fstpl
xchg
in
dec
jmp
loopne
jb
outsb
imul
add
mov
or
cmp
mov
pop
scas
mov
popf
imul
xor
int3
add
push
rclb
das
inc
or
ja
inc
and
sbb
jne
jb
call
leave
scas
sub
push
mov
call
pusha
mov
jl
aaa
inc
outsb
mov
push
imul
ficomps
cmpsb
mov
test
sub
pop
sbb
or
push
lret
roll
popf
imul
mov
mov
or
inc
jp
sub
int3
sub
sub
cmp
fmull
cmp
push
in
xchg
rcrb
add
lcall
xchg
scas
rorb
add
repnz
test
inc
push
cmpsl
mov
lock
and
add
orb
in
fwait
clc
int
dec
lcall
pusha
add
fcomip
dec
pop
sbb
or
icebp
in
sbb
pusha
adc
inc
inc
loopne
push
push
pop
mov
lds
push
insl
xor
in
sbb
adc
cwtl
jecxz
clc
push
fisubrs
mov
lods
imul
sahf
jb
sbb
sbb
dec
pop
nop
aas
mov
dec
mov
sbb
xchg
movsl
sbb
jg
sbb
jecxz
shll
popf
cmpsb
fmuls
mov
cld
mov
mov
sbb
js
sbb
jb
mov
pop
adc
ret
sbb
cmpsl
bound
ret
and
xor
jp
shr
sub
lea
mov
call
and
enter
fsubl
mov
jp
add
cmc
inc
ret
lock
mov
sbb
or
pushf
or
jne
mov
hlt
je
mov
add
push
aaa
test
jnp
lods
js
add
lret
or
inc
leave
add
xchg
out
or
fbstp
add
stos
orb
sbb
shrb
outsl
xor
jb
addl
add
ljmp
jbe
std
xchg
out
imul
mov
dec
inc
testl
sarb
cwtl
and
add
out
jge
add
xor
sub
mov
sub
fisubrs
xchg
mov
ss
xor
add
push
add
and
loop
adc
dec
mov
sbb
aaa
cli
xchg
or
push
ss
sarb
lods
pop
xchg
fdivrl
dec
cmp
loop
scas
mov
mov
ret
test
and
and
aas
push
outsb
sub
push
dec
or
mov
mov
add
in
aam
sub
in
mov
fisubrs
cmp
inc
add
cmp
xor
popa
pop
inc
rcll
mov
mov
fst
pop
lods
jge
mov
pusha
clc
pop
lods
out
add
and
test
mov
sub
jecxz
inc
cmp
pop
push
xlat
pop
insl
jmp
mov
or
sti
jmp
mov
ljmp
pusha
std
adc
fildl
xchg
xchg
mov
push
aam
clc
faddl
or
fsubrl
add
jge
loop
scas
xor
pop
lcall
out
adc
inc
xchg
mov
mov
inc
test
enter
bound
jle
sbb
adc
int3
testb
xor
fwait
das
dec
test
gs
pop
add
idiv
mov
cmp
and
sbb
ljmp
xor
push
popa
je
out
add
and
mov
fsubr
in
subl
cmp
or
push
fistpll
inc
cli
adc
inc
adcb
xchg
dec
popa
rcll
shl
sbb
mov
mov
js
lock
enter
xchg
sbb
mov
push
sti
adc
nop
push
cs
or
push
adc
sub
loope
jl
sub
lods
lret
nop
inc
sub
mov
push
mov
add
pop
dec
jmp
xchg
jno
cli
sbb
js
jb
xchg
sbb
sbb
cwtl
and
ficoms
pop
sbb
xor
or
es
insb
decl
loop
inc
dec
cld
scas
and
or
push
jecxz
add
or
mov
mov
mov
sbb
and
call
rcr
jmp
add
pushf
mov
jbe
pop
or
les
test
cld
test
jns
mov
inc
mov
jb
popf
and
adc
lret
push
pop
mov
add
pop
fsubrl
leave
sbb
push
pop
test
ficomps
dec
jl
sbbb
pop
mov
cmp
mov
clc
popa
fsubr
jno
cmpsb
pop
test
push
mov
aam
mov
rcrb
aam
js
xorb
int
call
in
nop
lods
lock
daa
push
ss
sbb
mov
dec
xor
xchg
cli
mov
xchg
popa
add
ljmp
out
in
jecxz
mov
push
mov
sub
mov
rcll
xchg
lea
add
push
aad
mov
out
pushf
dec
add
push
jmp
xchg
jle
sbb
shr
inc
xchg
or
mov
int
push
xor
jmp
jp
and
cld
xor
popf
cmc
insb
mov
aam
pop
adcb
cli
clc
roll
xchg
add
push
pop
lock
pop
pushf
or
lea
jo
add
sbb
aaa
leave
push
mov
mov
push
jecxz
pandn
aas
popa
cmp
jp
and
testb
jecxz
pusha
xor
lods
movl
test
cmp
mov
daa
js
fstpt
inc
inc
adcb
bound
adc
shrb
xor
ret
push
adcb
xor
outsl
test
xchg
jl
pushf
dec
std
adc
sbb
pslld
jle
sbb
dec
push
fwait
push
add
push
fnsave
fstl
roll
fs
icebp
mov
mov
stos
subl
lock
pushf
xchg
ja
in
mov
sub
and
fincstp
lahf
cli
or
sahf
jle
lret
push
hlt
sbb
adc
cmp
ds
and
fistpll
lcall
loop
sbb
lea
imulb
mov
cmpsb
std
push
push
xchg
ror
and
pop
rcrb
adc
into
adc
adcb
mov
lods
dec
jecxz
test
bound
cmpsb
fbstp
outsb
cmp
cwtl
movb
test
rcl
addb
pop
cmpb
sbb
push
mov
test
test
mov
add
jl
es
push
fsubl
xor
loope
push
popw
mov
inc
mov
xchg
inc
shlb
mov
fs
inc
hlt
popa
cmp
inc
cmp
fwait
lock
dec
inc
jl
push
mov
dec
or
cmpsl
push
lock
lret
xchg
or
movsb
sahf
push
mov
icebp
mov
xor
rcrb
ret
push
rolb
sbb
pop
and
ret
fdivl
into
call
out
cli
loop
push
sbb
mov
jge
scas
mov
sbb
jmp
lods
int3
mov
inc
mov
cmpl
push
or
mov
insl
cmpsb
addr16
cmpsl
lock
mov
stos
inc
lods
xor
dec
mov
push
mov
ja
push
adc
adc
into
mov
or
mov
xor
adc
dec
nop
adc
xor
add
mov
js
jl
ds
jne
loop
xchg
dec
outsl
mov
lods
mov
dec
pop
mov
xchg
add
xchg
sar
lods
mov
pushf
sarb
sar
pop
and
ffreep
jae
mov
int3
xor
push
fmuls
cli
and
je
lods
adc
xlat
filds
sub
xchg
sbb
push
mov
fmuls
add
jo
popf
add
push
test
inc
ja
repnz
jg
rorl
push
sbb
push
insb
push
mov
push
outsl
pop
mov
dec
or
ds
lods
sub
pop
jb
icebp
pop
lds
xor
aam
xor
outsb
ret
cwtl
fdivr
scas
mov
pop
push
ljmp
pusha
fadd
jns
lods
into
xchg
fwait
add
movw
arpl
fmull
push
mov
and
push
push
lcall
ret
or
notb
fwait
mov
mov
pop
xor
mov
pop
or
add
xlat
or
lods
pop
js
insb
pop
ja
inc
push
push
push
shl
out
jae
sbb
stos
or
pop
xchg
inc
inc
cmp
sarb
punpckhbw
mov
add
dec
rorb
gs
lock
xchg
hlt
adc
js
dec
add
sahf
and
xchg
jecxz
in
scas
mov
sbb
pop
cli
dec
push
add
pusha
inc
mov
xchg
aam
mov
push
push
mov
add
adc
jp
scas
gs
inc
je
or
xchg
mov
movsl
xor
jmp
test
and
jo
push
push
shll
hlt
pop
lock
inc
inc
xor
imul
cmp
jmp
or
or
fcomp
dec
data16
imul
pop
push
dec
out
inc
xchg
test
dec
nop
out
mov
jmp
inc
cli
xlat
fildll
call
inc
dec
cmp
pop
arpl
mov
fadds
jl
addr16
push
add
ret
cmpsb
inc
inc
pop
mov
jnp
subb
push
mov
mov
xchg
test
and
ss
pop
pop
dec
jl
call
inc
xor
push
ja
outsb
push
scas
ss
bound
testb
pmaxsw
subl
push
ss
xchg
or
inc
jbe
mov
cmp
in
pop
pop
ret
div
icebp
aaa
add
inc
mov
aaa
inc
mov
daa
adc
adc
dec
add
je
pusha
jb
imul
lock
push
xor
inc
cmp
dec
cmp
and
sub
pop
push
sbb
clc
ja
gs
rol
inc
adc
clc
cmp
adc
add
in
fcomps
pushf
fcoms
sbb
iret
inc
ret
jae
rorb
jo
dec
lock
dec
push
aam
dec
ret
addr16
or
inc
mov
pop
xor
je
jno
add
xchg
jecxz
jp
imul
pop
mov
dec
je
jns
xor
push
or
dec
inc
lcall
xchg
push
add
fwait
inc
push
insl
xor
ss
outsl
bnd
cld
adc
push
pop
bound
inc
jo
mov
push
and
push
ret
or
push
bound
adc
adc
jle
pop
push
inc
aad
dec
jns
lea
push
cmp
aaa
lret
into
add
lret
mov
pop
dec
xor
hlt
ret
xor
rorb
adc
cmp
push
jge
dec
cmpsb
dec
hlt
inc
xchg
insl
ss
or
jns
loopne
add
cld
sahf
jg
mov
push
call
scas
test
mov
ffreep
push
pop
push
popa
in
push
rcrb
mov
mov
xor
imul
adc
xor
fcmovbe
fbld
ljmp
add
arpl
enter
dec
inc
inc
xor
inc
ss
lahf
rclb
cli
add
sub
dec
add
mov
insl
inc
mov
jae
or
push
into
dec
cld
movsb
mov
jge
push
iret
xor
jmp
inc
push
cmc
dec
inc
in
not
loop
mov
fs
and
addr16
dec
dec
aas
std
outsb
xor
mov
test
push
inc
testl
inc
jo
or
sbb
push
mov
pusha
push
dec
push
into
repnz
sbb
add
cmp
lock
into
std
inc
xor
stos
or
pop
dec
ss
lahf
or
cwtl
lock
mov
jl
bound
pop
inc
xlat
shrb
mov
stc
inc
xlat
enter
sub
mov
inc
sub
negb
or
push
jno
adc
mov
jae
add
and
into
inc
decl
enter
inc
jl
jns
dec
movsb
xchg
idiv
cli
mov
setp
jle
inc
je
ljmp
loope
push
fisubrs
adcl
call
jae
xchg
mov
pushf
bound
and
lret
pop
leave
push
jo
adc
push
cmp
jae
dec
jne
pop
xor
mov
mov
ljmp
push
dec
jl
jge
ret
xor
xchg
call
add
lds
mov
inc
add
push
cmp
bound
jp
xor
pop
mov
inc
dec
mov
sbbb
inc
dec
mov
mov
fmuls
call
shl
ret
adc
push
mov
push
xor
mov
push
cmp
insb
pusha
fdivrl
icebp
aaa
inc
push
cld
inc
and
roll
xchg
mov
and
popa
lock
lret
insl
inc
adc
and
xor
insb
jb
aam
adc
inc
fildll
dec
ss
rorb
add
add
xor
in
ds
test
bound
lods
mov
loope
loop
pusha
ret
inc
sbb
es
ret
dec
cli
je
pop
inc
sub
bound
les
outsl
imulb
add
pushf
add
pop
push
addr16
push
pushf
cli
insb
in
ret
xchg
push
in
shr
jl
push
push
imul
pop
out
shl
data16
xor
ret
sub
je
test
enter
fs
sub
icebp
imul
loope
push
cwtl
outsl
shrb
orl
pusha
xchg
fmull
stc
out
dec
or
outsl
out
in
test
lock
push
inc
cmp
pop
loope
iret
xor
push
dec
push
mov
subl
popa
imul
call
pop
push
pop
aaa
sub
mov
and
add
jno
xchg
loopne
mov
dec
test
sub
mov
sbb
test
fisttpll
fsqrt
push
aaa
rorl
push
pop
call
push
jge
push
mov
jno
sahf
dec
push
imul
xchg
ljmp
jge
push
test
sti
cmpsb
out
inc
push
or
xchg
clc
in
lcall
outsb
add
pop
pop
sub
jb
outsl
inc
aaa
push
inc
in
sbb
push
push
rolb
sub
je
push
add
daa
clc
adc
sbb
adc
xchg
aam
xor
dec
push
jno
hlt
aam
push
bound
lock
pop
adc
gs
push
js
xchg
jb
idivb
push
addr16
push
fst
cmpb
fwait
insb
and
push
test
test
pop
jmp
mov
cmp
xor
loopne
pusha
ljmp
mov
iret
jp
ja
xchg
jl
repnz
lcall
xor
inc
fmull
push
insl
sahf
sbb
sub
cli
mov
ja
sub
jns
jae
or
mov
sbb
dec
leave
jecxz
in
ret
icebp
out
dec
out
inc
rorb
mov
xchg
dec
sub
fnstenv
dec
leave
mov
testb
andl
or
inc
push
sub
in
push
pusha
cmp
rorl
cmp
iret
or
enter
cmp
rorb
push
aam
xchg
lock
mov
clc
cmpsl
xchg
push
js
call
xor
insl
ljmp
inc
arpl
push
dec
sub
pop
or
aad
dec
movsb
xor
mov
hlt
pushf
jl
pop
mov
clc
je
inc
dec
out
cld
add
fs
add
sbb
adc
movsb
test
dec
clc
or
stos
mov
mov
daa
stc
cmp
insb
xor
xor
push
lea
imul
mov
iret
push
pusha
int3
dec
or
mov
outsb
jo
jbe
mov
xchg
dec
sub
push
jno
jmp
aam
cmpsl
and
jbe
loopne
psrlq
cmp
daa
push
xchg
aam
movsl
test
insl
daa
fsubrp
out
dec
jae
fwait
dec
pop
push
jno
cmp
sub
in
adc
dec
cwtl
dec
cmpsl
lds
sbb
inc
fidivrs
push
jns
daa
or
mov
test
mov
add
dec
jecxz
sbb
fidivrs
cwtl
adcb
je
xor
jbe
inc
xor
dec
jle
or
loop
push
shr
sbb
push
dec
cmp
jo
outsl
fisubl
imul
inc
dec
push
jae
stc
mov
clc
repnz
aam
ja
ljmp
notl
out
dec
ss
dec
in
out
inc
mov
jmp
push
xchg
movsb
fisttpll
je
es
dec
xor
lods
inc
jg
rorl
mov
mov
cmp
or
rcll
and
or
pusha
sbbl
data16
stos
idivl
cwtl
outsl
pop
jmp
outsl
inc
inc
cmp
mov
dec
xor
pusha
add
push
mov
imul
jae
push
dec
call
mov
clc
fs
ret
orb
push
jne
dec
aad
sub
mov
rcr
push
inc
or
mov
pushf
rcrl
aam
push
bts
addr16
add
fsubrs
sub
hlt
xchg
fs
xchg
insl
pop
xchg
pop
jmp
push
push
xor
jecxz
les
inc
ficomps
out
jmp
cmp
pop
jmp
ljmp
push
adc
push
dec
repnz
jo
rorb
incl
push
or
into
xlat
addr16
hlt
pop
sbb
iret
sub
jmp
cmpb
cmp
or
je
push
xchg
push
add
pop
xchg
shr
shl
xchg
testl
mov
adc
xor
push
mov
pop
add
enter
movsb
loop
rolb
mov
ss
mulb
outsb
imul
or
jne
adc
das
or
add
sub
or
cwtl
repnz
jo
es
pushf
add
dec
sahf
lahf
mov
sahf
xchg
pop
shrb
dec
or
leave
dec
sub
cmp
cli
mov
test
cmpsb
push
popf
dec
into
xor
lret
adc
test
pop
shrl
call
dec
enter
sahf
int3
aam
mov
lods
pusha
mov
jbe
or
add
hlt
shrb
push
test
movsl
shlb
inc
jae
cmp
mov
cmp
or
and
sub
movsl
dec
clc
pushf
mov
add
and
leave
mov
aam
test
ljmp
fs
fabs
jb
adc
xor
fwait
xor
negl
rolb
xchg
pusha
cld
pop
xchg
cmpsb
lds
jne
shll
xchg
shll
push
les
mov
les
ljmp
fistpl
mov
pop
shl
inc
dec
push
cmp
mov
add
mov
dec
add
xchg
dec
notl
jmp
cmp
faddl
clc
adc
mov
xchg
push
xchg
insb
icebp
add
js
leave
push
xchg
lds
aas
or
mov
and
push
je
test
loopne
dec
ret
stos
pop
and
push
hlt
lods
ljmp
mov
cwtl
lock
dec
mov
xchg
mov
pop
mov
nop
pusha
dec
pop
jbe
sbb
cld
mov
xor
popw
rorb
cmp
add
out
in
mov
test
jbe
cmp
push
cwtl
sbb
iret
xchg
push
pop
cld
jmp
outsb
pop
push
sbb
call
cmp
mov
jb
mov
mov
sub
mov
sbb
into
js
sbb
sub
xchg
sub
pop
mov
adc
push
push
fstpt
add
loope
cmp
out
sub
mov
test
sbb
sbb
xchg
mov
mov
js
inc
roll
mov
xor
inc
testb
ret
adc
jl
js
jg
or
xchg
jbe
clc
jnp
jo
sbb
call
xchg
outsb
add
in
negb
outsb
xlat
hlt
pop
lods
cmc
xor
inc
xchg
sahf
xchg
or
lcall
jl
push
flds
inc
stc
aam
ljmp
mov
sbb
push
test
inc
je
and
mov
test
in
mov
pop
imul
movb
push
jge
dec
gs
in
push
subb
dec
inc
or
dec
aad
mov
enter
sub
test
mov
inc
cmp
jns
jbe
add
adc
pushf
jge
stos
gs
xchg
mov
push
inc
cmp
jg
mov
icebp
jns
test
jb
dec
dec
cmp
ja
mov
enter
mov
xchg
mov
jo
data16
add
inc
outsl
xor
jp
mov
fisttps
andb
cmp
cmp
push
cmc
pop
or
fcompl
out
push
aad
clc
loopne
mov
fsubrs
or
pop
insb
adc
sub
push
inc
mov
in
stc
out
cwtl
lcall
add
mov
push
ret
adc
adc
nop
xor
icebp
outsl
loope
popa
sbb
lock
loope
mov
int3
in
dec
jo
lock
sbb
xor
jg
add
and
test
icebp
rcll
mov
fadd
cmp
leave
rolb
stos
sbb
je
test
notb
adc
xor
out
js
sbb
inc
cld
loop
push
jmp
movb
ret
jmp
dec
dec
test
in
jg
loop
int3
or
mov
sti
cmp
in
cmp
call
cmpsl
icebp
or
outsb
push
mov
mov
xchg
outsl
or
xchg
or
and
pop
cmpb
xchg
lcall
scas
lcall
jp
movsb
push
sti
add
enter
sub
cld
ja
adc
je
jmp
sbb
iret
sbb
mov
jle
aam
push
lock
sti
sbb
jp
adcl
add
fdivs
xlat
inc
cmpsl
mov
sbb
or
adc
negb
add
jo
imulb
sub
clc
jno
cmc
or
fimuls
cmp
cmp
call
dec
data16
or
add
push
xchg
and
shrb
sarl
pop
dec
jge
stc
sbb
shrl
jp
push
cmpsl
push
add
loopne
das
jae
cmp
jne
push
pop
or
lds
add
and
test
hlt
lock
or
cmp
pop
data16
movsb
jl
jne
xchg
mov
xor
add
lahf
mov
mov
sbb
inc
rcll
inc
pop
cld
sub
push
inc
mov
dec
push
mov
leave
cmc
or
and
sarb
js
rolb
push
cli
jne
xor
dec
pop
nop
pop
pop
jg
out
adc
lods
in
push
daa
loop
and
int
addl
enter
cli
inc
xchg
out
adc
std
sub
ja
or
push
push
in
sub
dec
call
adc
roll
arpl
sahf
inc
sub
test
adc
clc
ljmp
stc
mov
lock
aas
lret
lds
add
push
dec
push
dec
push
add
xchg
test
call
dec
scas
dec
or
xor
cwtl
lcallw
xchg
dec
imul
adc
out
ja
mov
inc
outsl
arpl
jmp
xchg
dec
fsubl
push
ret
imul
dec
fwait
dec
push
gs
addr16
xorl
std
add
push
cmp
pusha
fsubrs
mov
cmp
dec
jno
pop
cli
add
push
cmp
xchg
je
aam
xchg
push
xlat
mov
xchg
adc
sahf
jmp
dec
jp
lods
sbb
xchg
push
out
jno
add
arpl
inc
add
sub
inc
push
xor
mov
clc
call
pmuludq
rorb
inc
aam
dec
ds
ss
push
cli
stc
push
add
adc
jae
lods
loopne
mov
rcrl
inc
mov
xor
repnz
shl
cmp
jno
or
add
xor
ss
jne
fisttps
imul
xor
loop
fs
jnp
mov
sub
jge
sbbb
cld
test
bnd
mov
movsb
add
test
and
mov
ds
mov
scas
clc
in
xor
out
mov
les
clc
add
and
and
push
add
mov
out
roll
pushf
adc
mov
lahf
fwait
daa
push
outsb
add
push
or
mov
jg
mov
pop
pushaw
repz
lods
push
stos
cmp
repnz
fldt
and
add
call
xchg
fmuls
push
imul
mov
inc
jp
in
push
jb
fimuls
push
cmp
aad
and
cmp
lahf
jge
insb
add
xor
movsl
cmp
in
adc
popf
insl
aam
mov
lret
xor
mov
pop
inc
jle
bound
jnp
adcb
stos
loopne
fimuls
add
sbb
inc
into
fs
push
lea
sbb
in
jb
sti
in
dec
xchg
adc
xchg
xor
shlb
add
les
and
adcb
jle
stos
lret
mov
daa
je
mov
and
pushf
adcb
xchg
push
push
pusha
andl
push
sub
lods
sub
lret
out
cmp
loope
dec
shl
sbb
sbb
jmp
push
dec
sub
sbb
inc
stos
ficoml
outsb
dec
ja
lret
mov
xchg
mov
xchg
mov
mov
jmp
jbe
xor
setp
aas
loop
jmp
xor
jo
jge
outsb
out
mov
fwait
pusha
dec
jbe
and
push
sti
sbb
sbb
mov
sbb
test
aaa
mov
pop
xor
out
jmp
xor
outsl
pop
jp
leave
dec
loopne
and
xor
mov
js
jb
sub
cmpsl
mov
lods
push
inc
or
pop
or
sbbb
mov
push
insb
jl
out
les
sbb
call
sub
sbbl
sbb
jb
mov
or
ja
loopne
mov
mov
mov
sbb
aad
sbb
push
xchg
xorb
test
jp
arpl
mov
push
mov
jmp
pushf
jmp
pop
inc
jno
daa
sbb
test
and
pop
out
in
repz
or
rcll
jecxz,pt
pushw
fcmovbe
mov
sahf
icebp
jg
push
push
pop
fnstcw
add
cwtl
or
out
jmp
int
sub
push
xor
ret
lock
mov
shrb
je
mov
adc
sbb
imul
fdivrl
mov
fimull
sub
xchg
push
insb
fsubrs
out
mov
ret
dec
mov
outsl
xor
test
adc
add
xor
icebp
divb
push
xchg
push
xor
mov
outsl
jmp
ja
ret
aas
idivb
es
xchg
mov
push
dec
jge
jns
adcl
or
or
fcompl
adc
mov
es
mov
hlt
push
add
inc
add
out
clc
push
aam
cmpsb
xchg
cmp
jmp
popa
je
outsb
cmp
dec
mov
pop
or
pop
cld
loope
ret
stos
and
pushf
ret
jg
lret
or
dec
lods
in
stos
push
loopne
xchg
mov
mov
sarb
ror
xor
loope
lods
imul
dec
mov
sbb
mov
loop
add
jle
movb
gs
out
mov
xchg
push
shld
jecxz
je
push
jb
loopne
rcrb
jmp
jp,pt
inc
ret
mov
jg
lods
adc
jle
mov
dec
push
add
mov
xor
add
pop
fidivrs
jmp
push
mov
es
adc
aad
out
insb
adc
ror
push
out
lea
mov
adc
in
in
idivl
add
or
lea
fs
add
cmpsb
pop
jecxz
dec
push
shlb
bound
rcrl
jae
roll
jle
sti
sbb
pusha
sub
ljmp
outsb
and
mov
lds
lret
dec
xchg
fdivl
orl
pusha
mov
test
dec
das
js
xorb
push
add
fadd
push
add
movsb
or
hlt
test
mov
inc
jl
xor
data16
mov
dec
fisttpl
sbb
dec
pop
lret
call
pop
pop
dec
data16
adc
mov
sub
fcmovne
orb
rcrb
nop
adc
jg
push
cwtl
dec
inc
jmp
and
pop
mov
ss
xchg
shlb
mov
sub
push
and
arpl
inc
pushf
lock
inc
mov
imul
aaa
ljmp
call
stos
mov
pop
xor
lret
dec
test
jne
pop
mov
mov
ss
nop
jb
stos
notb
jle
cld
testl
cmp
hlt
push
fsubrl
pop
aam
hlt
in
movsb
js
and
mov
and
add
or
or
xadd
or
fidivrs
lods
pop
ljmp
in
sbb
mov
cwtl
jae
mov
les
fistps
jb
test
pop
mov
lods
pop
fxch
dec
pop
fs
jnp
pop
or
or
or
mov
sub
cmc
pusha
xchg
loope
stos
aam
hlt
cmp
sub
out
rolb
sbb
adc
add
aaa
cld
lea
push
insb
mov
mov
ret
xchg
push
les
sub
test
sub
sub
push
xchg
add
dec
insb
jg
icebp
das
subb
add
int
mov
cs
xlat
popf
fcoms
pop
adc
xlat
xchg
in
and
cmc
or
test
push
faddl
aaa
js
mov
add
xor
add
pop
add
mov
scas
test
or
inc
loop
push
or
ret
and
adc
and
into
mov
ja
pusha
pop
loopne
in
cmp
xchg
dec
dec
adc
rorb
es
cli
xchg
in
sub
outsb
push
push
outsb
jmp
push
into
pusha
repz
loope
xchg
mov
in
push
ret
ljmp
mov
subb
and
repnz
cmp
addb
jmp
call
or
cmc
call
mov
dec
or
add
lock
cmp
rclb
or
incb
pop
mov
add
cwtl
inc
and
xor
add
inc
ret
jecxz
fistpl
push
pusha
lea
cld
insl
test
sub
lds
push
pushl
mov
and
jns
adc
call
mov
adc
xor
fsubs
jb
ret
sbb
jge
adc
outsl
xorb
add
sbb
jle
in
test
or
inc
push
aam
sbb
adc
ljmp
lock
mov
xor
stos
ljmp
jno
inc
lahf
mov
add
xor
adc
fidivs
aad
or
dec
mov
andb
pop
pop
test
sbb
jl
sbb
out
jecxz
rolb
je
push
push
jg
movsb
jbe
jno
inc
testb
shrl
inc
cs
xor
ret
inc
mov
mov
sti
arpl
push
jne
movsb
into
and
fimull
jecxz
fwait
add
inc
pop
mov
or
shrb
int
ja
jp
jb
push
jne
clc
aaa
adc
inc
dec
dec
pop
push
pop
rclb
iret
mov
push
jbe
decb
out
cmp
dec
sbb
pop
cmp
scas
movsb
adc
add
dec
push
and
cli
push
add
je
add
inc
es
inc
dec
dec
popf
cmp
ret
mov
icebp
mov
lock
mov
aad
mov
rolb
push
pop
and
pop
xchg
std
mov
mov
dec
adc
out
sbb
pop
std
mov
aad
jo
lock
in
mov
xor
pop
repnz
push
mov
jle
mov
imul
lock
cmc
and
xlat
sbb
jae
in
push
fnstsw
sub
mov
stos
andb
fidivrs
sub
lds
sub
mov
es
and
ret
lods
scas
adc
hlt
in
inc
stos
cwtl
pop
outsl
jge
adc
sahf
inc
jg
xor
fwait
pushf
add
test
insl
jmp
out
xor
fistl
movsb
cli
push
loop
pusha
rol
orl
jl
add
sub
jecxz
aaa
insl
fsubs
mov
mov
adc
mov
push
fidivs
xchg
pop
ret
inc
jmp
push
mov
xchg
xor
xchg
enter
or
mov
mov
mov
pop
ret
ficomps
and
loopne
ret
mov
int3
add
add
gs
mov
adc
mov
call
jp
sbb
inc
mov
pop
adc
jmp
push
sub
js
xor
outsl
arpl
call
jp
mov
push
enter
mov
test
bound
mov
and
xchg
cld
and
add
mov
lods
xchg
adc
xchg
mov
fists
sti
push
icebp
dec
and
mov
xchg
adc
scas
aam
adc
mov
xchg
sbb
push
shl
cld
mov
dec
jmp
pop
lock
sahf
adc
push
movsb
insb
loopne
add
sbb
cmpsl
popa
orl
pop
mov
cmp
out
lea
mov
call
mov
jno
ret
mov
mov
ja
clc
inc
movsb
adc
mov
lahf
lds
pop
out
jmp
loopne
add
mov
add
out
clc
ljmp
aam
sbb
cs
jmp
mov
mov
mov
push
fdivs
sub
push
outsl
inc
and
arpl
mov
jmp
push
les
push
adc
das
int
lock
aad
adc
sub
sub
pop
and
inc
js
ljmp
loop
mov
nop
dec
int
call
addb
xor
mov
jg
push
lods
or
ljmp
pop
add
inc
pusha
mov
std
incl
sbb
bswap
sbb
mov
rclb
push
xor
push
mov
in
jmp
xor
jp
push
popl
push
movsb
paddusw
outsb
ret
popa
xor
jo
jmp
xchg
push
mov
jno
or
dec
ret
test
or
inc
js
movsb
loopne
arpl
sbb
xchg
or
adc
lock
sbb
mov
scas
jl
shrb
sbb
sub
in
or
lds
or
and
mov
push
cmp
lods
dec
lods
sti
inc
xor
lea
subl
scas
cmp
test
inc
push
push
insb
dec
add
inc
popf
pop
imul
jecxz
push
add
jb
cltd
call
ja
movsb
xchg
loope
popa
ljmp
jae
out
test
push
lcall
pop
xor
shlb
sbb
add
in
pop
cmpsl
mov
fstps
call
xchg
out
add
fsubrl
lods
add
outsl
faddl
fcom
sbb
jg
es
rcr
sub
lea
mov
lds
cmp
inc
repnz
pop
gs
insb
mov
data16
push
call
xlat
cmp
test
outsb
arpl
out
idivb
mov
cltd
mov
sbb
je
sti
movhps
sub
cwtl
jge
inc
insl
add
mov
adcl
mov
xchg
mov
orb
pushf
jecxz
call
inc
aaa
sbb
jb
mov
and
xchg
insb
push
js
inc
ret
loopne
cmp
out
incl
aaa
cwtl
mov
in
mov
in
jg
or
dec
sbb
inc
mov
shrl
loop
stc
pop
nop
mov
shll
adc
pop
enter
sub
and
test
fs
lock
lcall
lret
jne,pn
pop
inc
cmpsb
push
mov
icebp
call
inc
jmp
mov
add
and
out
cld
lret
decb
cmp
pop
mov
les
dec
idiv
mov
push
hlt
mov
cmp
jno
jmp
test
xchg
push
sbb
loop
es
inc
mov
je
ss
mov
xchg
int
addb
xchg
and
jbe
inc
sub
mov
pushf
mov
stos
rorb
push
jb
fisttps
nop
das
xchg
sahf
push
fnsave
jecxz
sub
bound
mov
jmp
cld
scas
pop
or
sub
enter
out
loope
lret
jne
cld
sar
mov
xchg
mov
jle
lcall
ljmp
xor
add
push
js
sub
sub
mov
lret
mull
push
dec
fldl
pop
fdivrl
fwait
mov
pop
mov
pop
stos
lods
lods
cmp
jb
sbb
daa
push
pop
pop
xchg
mov
xchg
aaa
add
sub
lahf
push
and
lret
loope
ds
mov
inc
sub
mov
popf
xchg
xchg
divb
sarl
das
loopne
jmp
data16
jo
outsl
mov
sub
outsl
clc
fwait
lea
or
jge
or
stos
rorl
ret
callw
js
fmuls
adc
dec
add
mov
lcall
icebp
mov
adc
lea
adc
inc
mov
push
inc
iret
stos
add
push
sbb
bnd
icebp
loope
jns
sbb
sub
mov
jne
pushf
adc
cmc
movsb
jmp
sarb
inc
pop
cld
xchg
cmpsl
addb
push
nop
and
pop
jns
jmp
jne
pop
arpl
mov
test
sub
outsl
xor
je
jl
xor
loopne
pusha
fadds
sub
sarl
dec
shrl
adc
cmp
add
lods
mov
xor
add
lcall
ret
ljmp
mov
mov
xchg
adc
mov
je
mov
add
insb
inc
daa
jmp
cmp
in
jmp
dec
inc
inc
or
jne
insl
inc
movsl
aam
mov
add
les
pop
ret
ss
pop
enter
pusha
gs
adc
adc
push
cmpb
pushf
jbe
push
mov
sub
add
mov
test
push
adc
jo
dec
es
data16
fs
sub
cs
into
jmp
push
outsb
push
push
insl
inc
inc
jl
imul
inc
push
dec
dec
rol
mov
nop
pushf
inc
insb
push
pop
fisubrs
outsl
lret
pop
add
push
xor
jbe
xchg
adc
scas
push
orb
fs
inc
sarb
xor
sbb
pushf
dec
fcoms
insl
jae
xor
icebp
out
je
js
jns
xchg
jl
jno
icebp
add
adc
pop
nop
lods
sbb
insl
outsb
inc
arpl
push
or
aaa
pushf
and
push
imul
xor
enter
and
add
lret
push
dec
inc
adcb
es
gs
push
push
add
lds
and
or
movsl
push
push
mov
fidivrs
mov
nop
js
dec
xor
cmp
dec
or
inc
and
mov
lods
hlt
fistps
and
or
dec
fdivrl
fisttpll
xor
add
add
testl
cld
mov
xchg
hlt
mov
cli
xchg
lock
jb
mov
or
jge
push
xchg
enter
pop
movsb
xchg
jp
jge
ja
daa
aas
and
xchg
xor
cmpsb
jo
push
repz
cli
loopne
aaa
into
lahf
test
cmpsb
xor
nopl
add
popa
push
xchg
push
jnp
test
mov
and
pop
je
mov
jl
sbb
loopne
lea
dec
dec
int
mov
fwait
xor
xorb
add
movb
insl
cmp
mov
sti
pusha
fdivrl
push
adc
cmpsb
mov
jge
or
jmp
adc
negl
ljmp
loopne
and
xchg
js
mov
sbb
push
pop
lock
bound
nop
out
add
call
inc
pushf
cmp
fcoms
jo
shl
or
sub
push
sbb
enter
enter
or
pop
lock
sbb
jl
dec
loopne
push
rcrl
ss
ret
xchg
aad
aam
pop
or
mov
push
push
add
shlb
gs
pop
ret
es
scas
test
incl
pop
loope
cmp
out
cltd
sti
sbb
push
inc
jg
sub
and
pusha
add
push
push
or
push
lock
jmp
mov
lods
fstps
adc
add
xchg
xor
jno
mov
adc
rcll
ret
shlb
loopne
xor
sbb
test
les
push
mov
xchg
add
pop
sub
aam
or
mov
mov
mov
adc
sub
lcall
addr16
stos
adc
fldt
bound
or
js
pop
and
lods
or
xor
pop
xchg
push
mov
outsb
fnstenv
dec
jmp
push
xor
leave
cmpsb
aam
hlt
loopne
cld
sbbb
aas
push
std
jmp
rolb
mov
movsb
adc
push
rorb
push
and
push
notb
sub
add
mulb
and
inc
nop
pop
rcrb
mov
in
dec
or
cmp
and
add
mov
dec
ret
movntq
enter
sahf
sbb
mov
test
mov
rol
call
gs
jbe
ljmp
adc
jbe
inc
ret
roll
stc
inc
push
push
lods
or
out
dec
push
pusha
mov
dec
mov
push
pop
mov
pop
push
out
aaa
or
std
sub
sbb
ja
lods
jo
jno
test
ret
inc
out
shll
in
test
add
bound
push
push
sbb
xor
insb
sarb
aad
dec
xor
jmp
mov
dec
daa
orb
insb
sarl
outsb
adc
shrb
mov
jle
je
scas
sar
lods
popf
or
cltd
jbe
push
add
pop
mov
icebp
hlt
adc
fidivs
cmp
or
dec
push
loope
cmpl
xchg
adc
mov
lea
inc
mov
dec
imul
addr16
mov
lret
jmp
into
lcall
arpl
test
or
jg
test
gs
aaa
test
adc
rolb
dec
pop
pop
xor
xor
loope
mov
mov
in
mov
push
push
sub
mov
ret
inc
jmp
jl
jnp
std
jnp
cmp
fmuls
aaa
into
daa
scas
cmp
scas
xlat
jmp
jmp
jmp
bound
test
xchg
scas
sarl
push
sbbb
xor
jnp
es
push
push
dec
xchg
add
daa
and
or
mov
xlat
mov
mov
scas
shl
shlb
push
dec
hlt
stc
mov
push
push
sahf
sti
inc
int3
dec
pop
loopne
cs
ret
push
push
inc
mov
icebp
ret
pusha
sub
pop
loopne
roll
jl
sub
aaa
push
fnstenv
sub
nop
imul
xchg
push
out
aad
push
js
test
jg
movsb
je
xchg
ret
subb
ljmp
fs
lahf
mov
or
sbbl
push
es
add
les
cmp
icebp
call
inc
jno
cmp
psrlq
xchg
add
loopne
lret
and
nopl
cmp
push
xchg
adc
pop
mov
mov
gs
mov
adc
ja
jg
or
iret
lret
add
and
dec
inc
and
dec
add
pop
add
js
and
push
inc
adc
mov
call
ljmp
xchg
or
push
lret
or
adc
jmp
shlb
mov
and
add
out
push
inc
mov
add
dec
dec
cmp
pop
inc
mov
jnp
jle
scas
cwtl
mov
dec
push
lea
lea
mov
int3
lret
cmp
pusha
je
or
sti
dec
stos
pop
dec
lea
aas
mov
dec
in
gs
pop
call
call
fs
lahf
sub
les
mov
aam
nop
add
pop
xchg
insb
sbb
add
add
icebp
or
dec
inc
imul
xchg
pop
fwait
clc
add
insl
insl
sbb
scas
add
mov
ss
imul
mov
mov
or
fstps
dec
push
xor
stos
jne
clc
dec
sbb
xor
jb
add
cmp
xchg
fldl
mov
inc
sub
inc
xor
int
lcall
aaa
test
push
dec
push
addr16
sub
jg
push
push
sbbl
add
daa
sarl
inc
pop
jo
outsb
rcl
mov
call
ret
dec
daa
jo
test
rolb
push
xor
movsb
xor
pop
idivb
icebp
cmpb
nop
dec
andb
dec
xchg
cmc
mov
jb
inc
fmuls
outsb
push
loop
jecxz
pusha
push
ja
ret
add
xchg
mov
insb
inc
push
loope
sub
xchg
fs
mov
inc
mov
jg
push
pusha
scas
outsl
js
xor
inc
popa
cmp
inc
pop
inc
daa
jmp
pop
int3
dec
jmp
pop
xor
cmp
lods
pop
sarl
push
mov
xlat
inc
fsubrs
or
sarb
inc
push
loopne
xchg
adc
fsubs
push
xor
jg
sub
dec
data16
js
push
mov
mov
movsb
adc
outsb
xor
fs
in
mov
xor
clc
aam
push
test
sarl
sbb
cmp
aam
push
xchg
dec
js
andb
mov
js
lods
inc
cmp
cli
sbb
jb
xchg
mov
ret
push
jns
push
testl
xor
rcrb
push
das
jg
add
pop
bound
sub
xor
inc
push
push
dec
push
insl
inc
xor
out
das
inc
jbe
push
gs
out
xor
lods
lock
jno
add
aam
xor
std
lock
mov
lcall
push
cmp
insl
pusha
shlb
add
and
mov
subl
ss
adc
dec
ss
aam
push
mov
push
inc
das
int3
dec
ljmp
fs
xor
add
push
xchg
test
jae
rorl
mov
cmp
es
inc
or
test
test
cmovnp
clc
push
pop
dec
pop
rol
inc
fnstenv
ljmp
mov
inc
xor
stos
cmp
jp
dec
dec
xor
cld
and
pop
push
or
enter
int3
sbb
push
push
inc
lret
insb
inc
incb
ss
mov
add
or
push
js
jbe
mov
jg
pop
rorl
sbb
adc
incb
mov
add
icebp
xchg
sarb
push
insb
adc
pop
mov
adcb
jecxz
sub
aaa
push
push
mov
or
scas
lret
mov
mov
adcl
push
pop
in
cld
daa
arpl
mov
rolb
lcall
mov
out
subl
mov
shll
xchg
mov
and
dec
mov
jno
inc
out
int
push
sub
cs
add
mov
fnstsw
ret
adc
jae
pop
sbb
bnd
adc
mov
gs
or
pusha
sbb
xor
into
add
push
pop
arpl
test
or
das
mov
cmp
stos
cmpl
mov
jmp
xchg
scas
add
sarb
mov
pop
mov
sbb
sahf
aad
or
push
sub
jns
jle
popf
push
call
mov
or
inc
adc
cmp
jmp
sahf
js
pushl
ds
jb
movd
push
inc
in
mov
xchg
sbb
xchg
push
mov
jg
jae
mov
sub
mov
lock
and
dec
inc
cwtl
sub
mov
push
sbb
movl
adc
cmp
or
orb
test
dec
sbb
movsl
mov
and
jnp
or
push
sub
add
dec
push
test
lahf
faddl
addl
clc
dec
push
fsubl
dec
sub
divb
adc
push
nop
adc
push
jl
xchg
mov
dec
jnp
rcrb
push
mov
xor
or
gs
subb
out
mov
mov
popa
bound
mov
stc
add
mov
inc
mov
inc
push
sbb
pop
xchg
add
lret
add
sub
add
inc
outsb
pop
test
bswap
leave
mov
pop
mov
jl
stos
out
xchg
pop
mov
and
addr16
sbb
popa
push
fimull
push
iret
mov
add
sub
imul
push
les
ja
mov
ficompl
orl
aam
sbb
jo
dec
icebp
pop
lods
xchg
xor
subl
mov
add
andl
movsl
push
push
addb
out
aas
sub
sub
nop
icebp
ljmp
mov
test
adc
add
cmpb
stc
xlat
or
aaa
test
xlat
add
lea
lds
xorl
add
push
add
pushf
popf
xchg
adc
push
add
scas
mov
adc
cmc
lds
lea
and
jecxz
loope
imul
cmp
mov
jle
sbb
push
cmc
lahf
mov
ja
cmpsl
jne
inc
add
and
lret
hlt
and
popf
sbb
and
push
jne
jnp
pop
lods
xor
push
mov
and
xlat
mov
inc
lcall
loop
push
or
mov
pop
jmp
mov
das
xchg
loopne
in
and
dec
xchg
push
js
inc
outsl
cwtl
ret
xor
add
or
mov
test
js
ja
inc
or
rclb
push
test
or
sbb
pop
outsb
je
push
aas
xchg
xchg
jmp
push
xchg
pop
aas
xchg
adc
inc
mov
sbb
xor
hlt
orl
loope
or
xchg
xor
dec
xor
push
push
and
scas
dec
rcll
xor
cs
add
lea
aas
ss
push
loopne
jmp
push
ffreep
repnz
pop
stos
lock
mov
dec
sti
sbb
adc
or
rcll
cmpsb
or
jle
inc
or
cmc
rolb
mov
icebp
bound
shlb
movsl
dec
push
xlat
shrb
shlb
data16
insb
iret
cmp
mov
and
das
adc
mov
movsb
imul
push
dec
mov
test
sub
fld1
add
lods
dec
jae
clc
out
push
jno
clc
cmp
xchg
push
jp,pn
sub
xchg
outsl
mov
inc
testl
lahf
clc
pop
inc
jns
jo
ret
mov
dec
push
repz
dec
pop
sbb
aam
test
adc
or
push
pop
fildl
testl
dec
mov
push
ljmp
stos
dec
pop
or
and
shl
das
movsl
or
cld
in
es
out
add
pop
pop
and
adcl
in
adc
ret
movsb
andb
flds
mov
or
cli
push
pop
xchg
in
push
test
xchg
repz
adc
xor
cmpsb
mov
mov
mov
std
jg
xor
cmp
sbb
mov
fwait
andb
mov
aas
xorl
in
pusha
add
lds
jle
push
sub
mov
mov
cmp
push
call
ss
xor
cmp
pop
mov
loop
lods
add
arpl
jno
imul
mov
mov
pop
ret
add
dec
call
lock
mov
pop
xchg
add
call
cmp
test
popa
test
push
aas
popa
arpl
cmp
pop
push
sub
aam
pop
sub
dec
dec
arpl
scas
adc
lock
sbb
pop
mov
frstor
jo
xor
or
xchg
js
add
xor
inc
xchg
add
popf
inc
inc
cld
lret
adc
inc
add
icebp
jb
mov
aam
push
fneni(8087
arpl
add
sbb
mov
fsubs
mov
cli
adc
add
and
or
mov
addl
outsb
add
xchg
adc
insl
rorl
cmpb
adc
popf
lods
pop
or
and
pop
mov
out
adc
push
dec
jno
jmp
outsb
jg
xor
sub
dec
stc
push
push
enter
xchg
sub
sbb
addl
daa
sbb
pushl
insl
inc
push
cmp
aaa
repz
mov
lods
inc
inc
cmpsb
mov
pop
jecxz
mov
pop
jb
ret
jnp
out
ficoml
xchg
and
lcall
sbb
je
shll
out
leave
aad
add
sub
inc
imul
or
xor
cs
push
fwait
popf
and
mov
loope
into
cmp
jmp
pop
loop
enter
inc
movsb
cmp
sbb
jge
inc
push
idivb
push
sub
mov
mov
imul
outsb
or
addr16
shll
ret
popa
scas
test
nop
call
shll
inc
xchg
push
sbb
jo
cs
divl
mov
ss
je
insl
shlb
bound
cltd
mov
xchg
inc
lret
adc
xor
lret
adc
xor
lds
push
jo
xlat
into
adc
xor
push
cmp
xlat
push
mov
js
in
lcall
ss
and
sub
stos
ja
xor
mov
mov
pop
mov
push
xchg
ljmp
add
es
shrl
je
mov
cmpsb
and
xchg
std
adc
pusha
xchg
lods
mov
pusha
loopne
testl
mov
jno
movsl
inc
mov
jbe
stos
adc
aam
mov
add
in
shl
sub
pop
mov
clc
loope
cmp
in
clc
stc
jg
mov
arpl
sbb
dec
mov
cli
push
call
push
pop
mov
ljmp
outsb
mov
xchg
add
inc
pop
jno
add
inc
push
divl
push
sub
push
adc
push
push
xchg
shlb
push
and
pop
test
jp
xor
icebp
ja
lahf
imul
push
dec
dec
in
push
in
xlat
ljmp
mov
jbe
push
or
add
shlb
add
mov
data16
lods
and
pop
ss
dec
push
cmp
ds
and
test
jns
pop
lret
xor
xchg
movl
ror
js
inc
inc
imul
adc
fs
dec
mov
or
adc
push
add
imul
jbe
pop
lods
add
jno
fs
add
mov
cmp
push
dec
aaa
addb
cli
jle
ljmp
push
dec
jle
jg
flds
push
push
dec
add
mov
sbb
gs
or
jb
xchg
cli
inc
int
aam
lcall
gs
imulb
mov
or
inc
jns
fwait
test
lods
sti
ss
jo
aam
mov
inc
sub
pop
mov
enter
add
pushf
js
ja
sbb
add
insl
inc
cmpsb
shll
clc
orb
inc
push
add
popf
mov
dec
repnz
xchg
add
pop
add
jg
push
jne
inc
mov
lret
and
lcall
incb
xor
push
inc
lock
fmul
call
bound
gs
dec
inc
xor
adc
inc
or
add
movaps
adc
pusha
add
pop
dec
inc
stc
xchg
cmpsb
xchg
mov
js
inc
loope
and
adc
out
je
push
add
sbbl
add
lahf
fiadds
sub
jg
in
cmp
inc
xor
icebp
call
fdivp
ljmp
cwtl
insl
pop
push
ss
movsl
imul
lret
pop
dec
dec
add
xor
fistpl
pop
sbb
inc
lcall
jae
push
insl
pop
loopne
add
add
testl
mov
push
push
xor
dec
pop
push
sub
ljmp
data16
mov
sub
ljmp
or
jl
mov
xchg
push
xchg
js
push
cmp
je
mov
xorb
jp
in
fisubs
insl
sbb
arpl
xchg
pusha
push
jns
push
lret
mov
ljmp
jmp
push
push
dec
inc
push
cmpsb
mov
and
popa
mov
movsb
cmp
xor
das
int3
dec
imul
outsb
and
add
pop
push
or
icebp
popf
test
lret
imul
fs
push
sub
dec
mov
dec
or
xchg
ror
das
out
inc
push
inc
dec
inc
dec
ss
add
jno
inc
mov
js
xchg
lret
call
or
xchg
inc
xor
add
add
test
mov
jmp
shlb
inc
xor
jle
enter
pop
cmp
in
pushf
push
pop
shrb
dec
push
push
cmp
movsb
mov
ja
add
push
lock
add
push
push
mov
push
xlat
pop
jp
call
outsl
or
je
push
ret
jecxz
sbb
sti
test
push
mov
imul
test
bnd
mov
dec
inc
or
ss
xchg
fcompl
sub
gs
mov
jle
xor
pop
ret
out
dec
stc
icebp
outsb
ja
rcr
jne
mov
xor
adc
inc
push
jo
mov
xor
rcr
insb
cmpsb
pop
js
push
push
mov
xchg
imul
jb
subb
add
fisubrl
sti
pop
shrl
dec
hlt
lret
shr
jno
repnz
sbb
dec
push
insl
xor
lods
test
dec
dec
xor
dec
push
addb
addl
fmuls
pop
mov
xor
pop
outsl
mov
outsl
jnp
cmp
rclb
mov
arpl
mov
rcl
inc
cmp
aaa
call
popa
adcl
stos
mov
mov
inc
inc
inc
push
lret
outsb
shl
cmpsl
insb
arpl
push
fsubrl
xor
inc
push
jno
dec
push
nop
std
sbb
dec
xchg
push
push
and
test
clc
ja
pop
and
or
add
in
aaa
imul
dec
inc
data16
lret
stc
divb
dec
xchg
or
cmc
mov
clc
dec
outsl
inc
dec
aaa
ja
clc
mov
pop
push
push
lret
jecxz
xchg
inc
xor
movsb
adc
inc
and
hlt
adc
mov
inc
push
jge
aas
sub
out
pop
out
pushf
pop
adc
adc
pop
xchg
add
js
pop
popf
mov
inc
pushl
inc
shr
mov
or
sub
out
lock
mov
xor
mov
test
std
movsl
adc
xor
aaa
lcall
dec
jne
jne
xorl
ret
in
sbb
cmp
mov
xchg
push
jp
scas
xor
test
je
fstpt
adc
lea
xchg
dec
or
push
clc
and
sbb
sub
insb
jno
ss
jp
jge
jb
pop
xor
and
arpl
data16
jnp
aas
lret
les
jne
sub
adc
push
push
add
jmp
or
jmp
shl
sbb
xchg
loopne
inc
cmp
test
add
sub
stos
outsl
out
in
xor
sub
shlb
nop
or
sti
push
xchg
dec
out
fisttpl
pop
out
in
roll
pushf
cld
test
adc
sub
adc
inc
inc
pop
movsl
jecxz
cmovnp
xor
enter
add
std
int
loopne
xor
outsb
imul
dec
inc
lods
mov
adc
imul
mov
fsubl
insb
fimull
aaa
xor
xor
inc
das
fistps
cmp
jl
cmc
push
mov
add
enter
ss
push
mov
mov
push
or
sbb
xchg
lds
add
sbb
and
adc
or
icebp
pop
sub
test
or
sbb
testl
loop
xor
inc
mov
or
sbb
je
cmp
and
imul
dec
leave
pop
testb
sbb
cs
sub
sbb
jle
rclb
add
loope
int3
es
repz
jb
dec
inc
and
push
ror
or
loopne
and
andb
mov
jo
lahf
js
flds
fimull
jp
inc
xchg
cli
mov
xor
xor
and
call
addb
fs
jl
std
mov
push
movsl
je
aaa
and
mov
pop
add
leave
ljmp
mov
mov
bound
sbb
js
rol
jae
loope
pushf
test
mov
hlt
rorb
cmp
adc
pop
pusha
movb
jge
cmp
jns
push
imul
movsl
mov
imul
btr
loope
cmp
dec
std
mov
dec
add
stos
add
adc
sub
fnstenv
dec
sbb
xlat
sarl
movsl
mov
sub
dec
lcall
mov
mov
mov
imul
cmp
shrl
jo
bound
les
lods
add
push
xchg
aas
push
inc
in
popa
call
inc
jo
stos
loopne
add
lret
pop
fiaddl
cmp
ja
shlb
adc
popa
mov
adc
mov
outsl
test
aam
in
cmp
push
leave
pop
out
mov
lret
mov
cmc
out
jns
inc
ret
inc
adc
mov
jnp
dec
jbe
adc
jo
xchg
cmc
out
ret
js
add
loopne
add
inc
or
aad
add
test
pop
hlt
fstl
imul
pop
xchg
pop
push
jno
sbb
loopne
pop
xchg
jp
je
mov
repz
shrb
sbb
mov
inc
lds
push
mov
mov
jae
pop
or
lds
js
xor
adc
rorl
repnz
and
icebp
inc
loope
pop
testl
sub
cli
mov
mov
data16
lret
sbb
dec
or
incb
push
aas
aas
fsub
insl
inc
push
loop
mov
out
sbb
adc
push
and
test
test
fst
dec
ljmp
shll
dec
push
push
add
movsb
das
add
sub
je
pop
nop
clc
inc
sbb
jno
dec
sarl
ficoml
inc
xor
xor
insb
inc
stos
js
xchg
ss
push
lock
lds
insb
cmpsb
and
cli
dec
ja
lret
cli
push
arpl
lahf
add
jmp
xor
add
lret
and
cmp
dec
aam
movsb
jg
ss
inc
xor
negl
call
mov
mov
xchg
add
jnp
stos
nop
pop
icebp
popa
pop
pop
mov
mov
rclb
incb
xchg
lods
inc
push
es
inc
dec
xchg
aam
insl
dec
ljmp
fsubrs
push
inc
push
cli
inc
push
rcrb
jno
inc
dec
xchg
je
out
add
bound
xor
cmp
jbe
clc
jo
aad
into
test
ja
add
xchg
addl
mov
pop
cli
sbb
add
jae
ljmp
shll
cld
lcall
out
js
pusha
inc
cwtl
and
add
mov
shlb
dec
inc
push
and
cmp
dec
dec
dec
xor
dec
push
or
loope
lods
dec
jbe
aaa
push
outsb
pop
jbe
fisubrl
mov
mov
xchg
lahf
mov
and
jne
mov
dec
pop
or
mov
mov
fmuls
gs
fistl
icebp
push
hlt
scas
pop
mov
les
dec
pop
jno
inc
das
dec
pop
adc
adc
and
addr16
adc
add
or
push
push
push
ss
inc
insl
mov
ret
and
aaa
jo
inc
jmp
sub
lods
dec
jns
push
sub
xor
pop
cmovl
inc
jae
add
stos
jbe
inc
xor
les
sub
outsb
rorb
inc
ss
inc
fimull
push
cli
jns
insb
call
push
add
dec
jne
adc
daa
pop
mov
dec
arpl
fidivl
dec
xor
push
icebp
dec
inc
jb
cwtl
dec
dec
xchg
ja
lods
sbb
jbe
lock
fldenv
xor
xchg
sbb
clc
imul
cwtl
pusha
lds
dec
aaa
shll
dec
insb
or
cmp
cmpsb
mov
xchg
add
add
outsb
push
mov
aas
aad
les
sub
rol
and
out
inc
ffree
jbe
mov
pop
push
mov
push
add
mov
xchg
adc
inc
ljmp
hlt
inc
sbb
inc
fs
fs
or
push
imul
add
aam
jae
in
jmp
rcl
push
aas
test
rorb
jle
push
fisttps
dec
mov
dec
insl
test
cmp
mov
inc
data16
add
outsl
dec
bound
js
dec
dec
popa
xor
test
xor
inc
jp
xor
or
pop
push
imul
daa
dec
cmpb
lock
cwtl
into
dec
dec
mov
mov
dec
insl
fimull
add
js
int3
les
inc
iret
les
push
xchg
dec
adc
dec
orl
jo
outsb
ss
iret
jnp
cli
dec
test
dec
icebp
test
xor
mov
pop
jo
je
jo
lea
shlb
mov
pushf
pop
or
adc
ret
sub
rclb
imul
mov
inc
icebp
pop
xchg
mov
dec
dec
inc
and
xorl
insl
xor
push
push
inc
shl
pop
sbb
imul
push
xor
lret
mov
inc
push
jno
jl
movsl
jbe
ret
dec
pop
arpl
mov
inc
ja
lods
add
lods
inc
add
or
push
add
inc
int3
cmp
loope
add
test
ds
and
mov
sbb
inc
jmp
jp
pop
dec
int3
sub
aaa
ja
and
icebp
cld
roll
push
pop
fsubl
ds
ret
push
in
add
adc
dec
jo
and
inc
sbb
shrb
cltd
ss
dec
inc
add
pop
push
mov
bound
out
mov
or
addr16
cmc
movsl
outsb
je
rolb
add
xor
mov
mov
arpl
push
into
cmp
stos
xchg
test
inc
xchg
lret
mov
out
pop
es
gs
js
dec
iret
inc
sbb
gs
adc
cmpsl
addr16
add
ret
pop
inc
dec
cltd
and
mov
dec
jns
aam
test
mov
inc
xchg
sti
and
jb
repz
jmp
or
pop
xor
jo
clc
add
iret
fwait
lea
inc
mov
lods
loop
mov
popa
gs
xor
pop
jp
and
sbb
push
push
push
xor
cmp
test
in
push
ret
jecxz
mov
push
cmp
push
inc
push
jns
add
pop
into
and
in
jle
sahf
jnp
aaa
add
xor
sub
and
push
lock
jo
dec
pop
ss
mov
dec
mov
add
test
rolb
das
xor
loopne
les
arpl
je
dec
inc
push
pop
adc
mov
out
icebp
mov
inc
xor
and
add
in
add
out
inc
xor
pop
sbb
loop
sbb
es
dec
xchg
andl
scas
pop
andl
popa
pop
xor
dec
add
arpl
pop
clc
xor
shlb
xor
mov
bound
ret
pop
and
sub
add
clc
cmp
jno
loopne
dec
addr16
push
fs
in
es
mov
imull
jnp
test
pop
dec
icebp
loop
push
rolb
add
sbb
or
shrl
cld
bound
aaa
mov
push
addr16
adc
cltd
inc
testb
add
xchg
inc
jo
cmp
cmpsl
push
sub
lods
sbbb
cli
xor
fimuls
lret
lret
ljmp
dec
sbb
jmp
cmpb
outsl
fs
pop
jne
je
add
push
add
jl
and
sahf
popa
inc
aaa
add
aad
into
inc
xchg
in
dec
cmp
ret
into
jnp
pop
insb
repnz
bound
call
mov
test
inc
ss
repnz
mov
lods
js
ds
mov
xor
xchg
rolb
in
and
dec
add
cmpsl
scas
push
jno
aad
sub
gs
rcrb
in
rorb
loop
arpl
dec
imul
xor
or
aaa
imul
imul
add
nop
xlat
fs
push
push
dec
aad
or
rcll
mov
mov
into
jbe
dec
cmp
out
arpl
cmpsb
pop
mov
dec
add
call
adc
loop
xor
pop
inc
inc
inc
dec
inc
push
lods
xchg
inc
jo
push
fsubrs
imul
inc
mov
dec
xchg
dec
push
push
fists
inc
add
add
into
ss
loope
decl
stc
and
inc
inc
scas
ds
adc
cmp
add
roll
jno
mov
ljmp
dec
outsb
scas
mov
scas
jns
push
push
push
dec
or
mov
mov
jge
int3
mov
add
xor
fs
lock
cmc
mov
mov
lock
andb
push
out
pushf
push
jae
sub
mov
call
enter
adc
lods
jo
mov
or
loopne
and
stos
lock
push
fisubs
inc
jns
push
inc
xor
stos
add
aas
mov
or
jb
imul
test
mov
jne
adc
jne
push
fldenv
add
ror
push
cmpsb
inc
jge
into
cmc
lret
mov
out
mov
pop
fmul
mov
pop
insl
mov
inc
cltd
pusha
sub
xchg
push
rorb
or
push
push
push
lret
out
push
mov
pop
inc
xlat
popl
sbb
dec
or
jmp
xchg
out
inc
aaa
insl
adc
jmp
adc
ret
ja
inc
mov
pop
in
sbb
pop
addr16
mov
aaa
shll
push
and
outsb
dec
les
or
xchg
dec
cwtl
into
sub
inc
xchg
mov
repnz
test
inc
outsb
inc
dec
pop
jmp
out
insb
xor
xchg
add
and
push
ss
xchg
or
stos
xor
cld
sub
fcompl
fcmovnb
outsb
jle
mov
leave
rolb
xor
jle
dec
mov
add
push
jecxz
pop
orl
xor
outsb
pop
rcrb
or
adc
xchg
in
pop
inc
inc
sub
fisubs
pop
or
add
adc
mov
dec
dec
jb
push
in
add
mov
mov
add
and
pop
xchg
push
jno
or
inc
inc
xor
les
mov
mov
in
xor
pop
dec
pop
or
aas
inc
mov
arpl
dec
stos
icebp
lret
dec
shlb
ljmp
stos
add
push
aam
lock
call
inc
and
jmp
xchg
into
ss
push
jo
outsb
test
sbb
fs
mov
enter
adc
push
mov
aad
std
clc
push
je
jmp
jo
add
test
repnz
movsb
adc
xor
insb
mov
adc
xchg
arpl
pusha
jo
cmp
adc
fisttps
ds
stc
cmpsb
adc
out
push
popa
xor
adc
inc
shlb
enter
lock
xchg
adc
arpl
dec
pop
outsl
or
inc
push
xor
mov
test
dec
dec
inc
dec
jnp
rolb
pop
push
sub
movsl
leave
shlb
rclb
lret
mov
pop
inc
inc
loopne
pop
rorb
fists
aam
push
and
cld
mov
cmp
icebp
jp
sbb
mov
sbb
push
stos
mov
popf
ret
inc
and
imul
jns
jno
loope
dec
outsl
and
push
mov
push
push
sub
aam
inc
arpl
sbb
dec
inc
jno
outsl
mov
insb
xor
jmp
adc
adc
dec
add
in
dec
or
jno
int3
xor
lock
lods
gs
mov
imul
xchg
int
pop
test
out
sbb
xlat
cmpl
cmp
test
ljmp
lods
ljmp
hlt
test
addb
stc
mov
cmpl
xor
jmp
lea
pop
push
lock
popl
fisubrl
xor
lock
jae
add
adc
mov
in
pop
sub
add
scas
ljmp
in
and
or
shrl
punpckhwd
sbb
adc
push
push
addl
lret
jle
ficoms
or
jo
sbb
and
sarb
fwait
push
ja
inc
and
cmp
sbb
xor
in
add
xchg
in
xchg
addr16
sahf
in
lcall
leave
ja
leave
cmp
lcall
mov
in
mov
jo
andb
insl
jno
mov
cmpsl
or
pop
les
pop
and
and
sub
call
or
push
dec
inc
pop
mov
cmp
cmc
pop
les
jo
je
add
lds
mov
adc
arpl
dec
jge
mov
mov
inc
adc
xchg
sahf
cmpsl
out
cmpsb
dec
cmp
jmp
mov
daa
push
sbb
or
sbb
fiaddl
pusha
or
mov
bound
dec
adc
dec
push
add
inc
mov
add
icebp
or
aam
jns
push
xchg
mov
lds
arpl
mov
icebp
jl
in
mov
dec
xchg
rcrl
jnp
or
jecxz
sbb
or
stos
inc
rolb
lods
stos
xor
xchg
sarl
jmp
mov
jo
mov
push
dec
mov
shrb
mov
mov
mov
sbb
sbb
mov
add
dec
nop
les
rorb
mov
jmp
push
or
push
popf
cmpsb
dec
rclb
cmp
cld
push
das
lods
jmp
inc
lods
mov
js
xchg
andl
outsb
jo
push
lcall
sbbl
fcomp
or
hlt
xchg
cltd
cmpsl
jmp
xor
lret
lea
mov
xlat
or
xor
daa
les
xchg
arpl
lock
pushf
dec
jo
gs
cmp
jg
stos
insl
and
je
cmpsb
scas
mov
sbb
jo
fcompl
ret
pavgb
pop
icebp
adc
xchg
ljmp
arpl
lret
mov
pop
fwait
mov
mov
pop
aad
xchg
mov
xor
mov
xchg
ja
and
pop
and
xchg
xchg
loopne
push
popf
cmp
push
xchg
sub
jl
cwtl
ret
cld
fidivs
mov
cs
adc
bound
pop
inc
xchg
mov
adc
cs
cmc
pop
cmp
movsb
mov
or
scas
push
fists
loope
fwait
cmp
sbb
fsubs
sub
push
ds
xchg
iret
inc
inc
mov
pop
roll
push
mov
mov
loope
jo
adcl
fs
or
jno
dec
std
mov
fmull
mov
rcl
sbb
adc
mov
lds
push
jbe
outsb
imul
aaa
decb
push
inc
or
insl
bound
push
sbb
jns
movsl
cmp
or
xchg
jge
dec
xchg
sar
push
jecxz
cmp
xchg
test
out
xor
push
jp
test
lcall
out
and
add
or
test
cmp
shl
roll
add
or
enter
pop
add
lods
sbb
lock
cwtl
cwtl
mov
push
mov
cs
mov
jecxz
or
cli
lds
flds
push
mov
sbb
stc
rolb
push
in
jecxz
mov
bound
fcomi
inc
pusha
jo
xor
pop
int
leave
outsl
mov
inc
xchg
or
xchg
inc
cli
ja
xchg
mov
dec
daa
lods
arpl
outsb
sbb
jg
shll
adc
mov
jns
cmp
inc
push
repnz
pop
add
jge
pop
ljmp
cmp
jp
jecxz
pushf
je
ficoms
pop
loop
outsb
pusha
rcr
orb
imulb
xchg
clc
fcompl
inc
inc
push
lock
mov
aam
mov
jecxz
mov
fmul
mov
ret
dec
push
jbe
dec
imul
inc
fcmovu
dec
add
add
push
add
rorl
out
push
xchg
outsb
inc
dec
add
aaa
lcall
ja
push
pop
js
pop
pop
xor
mov
adc
cld
xor
dec
cmpsl
add
test
pop
sub
jbe
xor
push
aas
out
sbbb
or
push
inc
sbbl
pop
jbe
cmovl
sbb
outsb
rcll
push
pop
dec
test
dec
inc
add
addr16
dec
inc
dec
fcompl
sahf
sti
jp
cmp
loop
push
data16
sahf
xor
rcl
arpl
call
sbb
jns
inc
jg
stos
inc
icebp
mov
outsb
sbb
add
add
xchg
push
inc
insl
cmp
loope
mov
je
push
mov
push
inc
fdiv
or
shrb
dec
dec
inc
sub
aam
xor
bnd
outsl
dec
imul
in
pop
sbbb
mov
insl
inc
fs
jmp
aaa
dec
xor
push
fsubp
sub
inc
xchg
jae
dec
das
add
push
push
fdivl
aam
jmp
xor
add
mov
imul
aas
rcr
mov
xor
add
call
shl
sbb
push
inc
push
add
sub
push
imul
inc
and
hlt
lcall
fdivs
mov
std
xchg
jge
or
leave
mov
push
mov
shll
xor
ja
or
dec
sub
nop
cmp
outsl
add
jne
xchg
push
imul
inc
and
add
shrb
enter
pop
add
add
insb
push
ret
inc
xor
js
xor
sbb
xchg
nop
mov
xor
insb
dec
dec
and
dec
bound
pop
out
addr16
sarl
ret
inc
sub
push
arpl
xchg
test
fisubrl
xor
pop
fisubrl
push
fdivrl
je
jne
in
fs
push
scas
add
pop
jns
lods
dec
hlt
imul
push
sbb
inc
imul
out
mov
rcrl
lcall
rep
clc
imul
dec
popl
xor
shlb
mov
mov
mov
imul
hlt
js
inc
add
lea
int
leave
mov
pop
adc
cmpsb
out
sbb
inc
shlb
rorb
xchg
ret
cmpsb
jns
jno
clc
repz
lds
aaa
movsl
outsl
inc
imul
out
test
rol
jne
adc
mov
inc
xchg
mov
addr16
push
mov
dec
or
clc
nop
cmp
inc
or
movsl
mov
inc
xchg
push
shll
notl
lock
inc
mov
in
and
push
pop
out
arpl
sub
cmc
push
xor
clc
nop
adc
cmp
mov
xor
outsb
and
sbb
shrb
subb
jo
clc
dec
call
sbb
xor
add
les
xchg
inc
jmp
adc
cmp
ret
mov
mov
pop
cmp
mov
into
subl
push
scas
aas
adc
xchg
inc
minps
decb
pop
dec
jmp
sub
je
in
fmull
ss
int
popf
into
ljmp
jle
lret
jbe
pop
lds
mov
bound
or
xchg
push
and
lret
pushf
sub
jg
setl
int
sti
mov
dec
dec
jp
in
jp,pn
xchg
push
das
pop
xor
aad
jmp
cmp
aam
add
stos
push
push
pusha
mov
out
enter
outsl
push
inc
dec
jnp
mov
divb
mov
in
int3
shrl
mov
adc
sbb
lret
dec
mov
psllw
mov
push
nop
pop
cmpl
and
scas
movsb
pop
push
test
incl
mov
shll
push
jle,pt
xchg
pop
cmpsb
sahf
lahf
test
inc
or
pushl
pop
call
mov
xchg
xchg
mov
cli
outsb
loop
sub
push
sbb
pop
enter
js
cld
sti
adc
fxch
push
mov
mov
pop
pop
sub
dec
push
cmp
setns
es
loope
xor
stos
cs
pop
add
out
push
cmpsb
js
cli
leave
pusha
movsl
or
ret
dec
push
add
int
mov
push
inc
pop
rcrb
mov
sbb
sbb
pop
mov
push
lods
test
lods
jmp
mov
orl
icebp
inc
pop
push
mov
sbb
out
outsl
jmp
test
pusha
dec
push
jnp
sbb
fchs
sbb
dec
sbbl
fisubl
test
and
lea
jge
aaa
pusha
fnstcw
jecxz
aas
xor
pop
mov
insb
push
test
inc
in
popa
xchg
mov
jle
cmp
aaa
lds
lahf
hlt
adc
aas
cmc
out
inc
test
dec
lret
jg
push
or
pop
in
loope
add
hlt
mov
cmp
les
cmp
xchg
loopne
mov
test
int3
movsb
jno
lret
mov
test
xchg
mov
enter
leave
jo
xchg
mov
imul
jmp
inc
inc
in
aad
lock
add
add
lcall
pop
push
loopne
int
inc
and
mov
mov
imul
and
loopne
dec
cli
rolb
dec
repnz
ret
sbb
push
push
cmpb
fiaddl
scas
stos
mov
sbb
inc
imull
outsb
push
jno
repz
mov
call
jecxz
clc
or
jne
sahf
and
jecxz
push
and
jmp
pushf
and
sbb
roll
pop
frstor
repz
mov
or
mov
xor
cld
jg
or
test
inc
pop
mov
movsl
pop
inc
push
leave
pop
inc
jp
mov
mov
or
loope
mov
inc
ja
push
inc
inc
jmp
sub
out
jmp
mov
add
cwtl
icebp
jbe
pop
dec
ljmp
les
pop
mov
sbb
daa
imull
cvttps2pi
xchg
mov
fists
jnp
ss
fnstsw
popa
call
pop
pop
ret
sbb
loope
push
jg
jge
push
push
mov
push
xchg
lahf
sbb
cli
aaa
xlat
inc
pop
mov
xor
cmpb
jno
nop
or
mov
xchg
sbb
nop
cmp
rcl
inc
push
xor
or
push
out
jne
mov
fdiv
shl
add
pop
push
mov
sub
pop
pop
xchg
pop
rorb
mov
jmp
lock
aam
pop
dec
push
cwtl
lock
popa
jmp
add
lock
out
cmp
inc
add
sbb
dec
lods
xchg
push
bound
ljmp
sub
pop
sbb
adc
stos
out
cld
add
push
ret
add
mov
dec
add
aad
mov
cmc
xlat
push
or
cld
xabort
jmp
xchg
movsb
or
inc
sbb
adcb
loope
outsb
mov
xchg
insl
imul
sbb
sbb
scas
lock
rcrl
jno
mov
repnz
gs
add
dec
rol
inc
stos
mov
das
repz
mov
adc
mov
cmp
pusha
add
mov
popf
inc
or
shr
ljmp
mov
subb
xchg
scas
aam
dec
or
inc
xchg
push
jo
and
pop
lods
dec
pop
cwtl
pop
jne
sub
fnstsw
outsb
jno
lods
inc
daa
cld
nop
es
fcomps
shll
add
cmp
mov
dec
xor
cmp
sbb
or
loop
xor
test
push
insb
add
and
je
xchg
ss
xchg
add
fidivl
xchg
aam
adc
xchg
frstor
add
lock
out
and
ja
mov
daa
scas
fsubs
inc
push
ficoml
ret
push
push
and
lret
jmp
fcomps
and
insb
push
push
pop
sub
xor
or
xor
inc
inc
push
pop
add
xor
shll
inc
or
inc
pop
mov
inc
jns
dec
or
pusha
and
outsb
and
jo
pop
popa
push
js
dec
shrl
dec
inc
dec
push
xor
or
mov
and
xchg
inc
outsb
push
push
mov
adc
and
popa
insl
xor
ja
xchg
inc
andb
mov
mov
mov
ss
fnsave
and
inc
push
shlb
jb
fcomps
sub
push
inc
bound
pop
movsb
jl
fisubrs
push
aam
ret
mov
test
insb
inc
inc
adc
mov
gs
push
push
lock
mov
loopne
mov
dec
sub
sbb
inc
mov
cli
stos
sub
jecxz
lods
inc
arpl
add
insl
dec
data16
xor
in
fdivrl
mov
imul
cmp
rolb
fdivrs
hlt
data16
push
mov
cld
inc
jbe
ja
pop
shll
pop
jo
jno
sbb
outsl
mov
imul
xor
stc
push
fsubrp
gs
inc
xchg
dec
inc
hlt
and
test
into
xchg
push
mov
sbb
mov
cmp
xchg
and
lret
xor
dec
jp
das
addl
mov
popa
mov
subl
lret
mov
dec
jb
imul
inc
mov
sbbb
lods
jb
test
pop
sub
dec
cmp
test
or
enter
cmpb
ret
insl
ret
dec
push
enter
sub
sub
addr16
pop
insb
in
sub
fdivr
xchg
arpl
je
out
dec
nop
xchg
shll
roll
enter
sbb
popa
hlt
inc
ret
pop
jp
sahf
mov
arpl
mov
or
enter
pop
dec
mov
inc
addb
pop
popaw
pop
xor
imulb
stos
xor
mov
pop
aam
xorb
js
jmp
in
dec
ss
inc
cmpsb
outsl
or
loope
mov
pushf
xor
clc
shll
jbe
push
cmp
push
in
shlb
aaa
out
insb
leave
cli
scas
inc
pop
and
insb
xorl
xchg
and
and
pop
mov
iret
ret
popa
push
ja
in
xor
pop
xchg
test
adc
mov
adc
mov
shrb
sub
cltd
jmp
mov
sbb
push
pop
dec
adc
arpl
popa
push
push
fisttps
js
test
sbb
test
int3
adc
addr16
inc
pop
sbb
in
dec
out
jb
cs
mov
fwait
and
lret
jmp
inc
xor
xchg
xchg
pop
inc
push
sub
push
jno
mov
cli
mov
xor
jp
push
xor
inc
dec
jb
jbe
push
pusha
mov
call
adcb
into
addr16
shlb
push
push
mov
or
movsb
xchg
jecxz
xchg
sbb
nop
or
dec
add
aas
repnz
dec
lret
add
push
inc
je
push
rorl
cmp
mov
js
js
jmp
adc
les
ret
push
dec
xchg
bound
aaa
sbb
test
leave
ficoml
mov
pop
dec
pop
imul
cmc
xchg
sbb
or
imul
sbb
cmp
popa
jbe
insl
fwait
roll
cmp
dec
and
add
ficompl
sbb
pushf
and
outsb
or
dec
and
scas
jb
addl
xlat
or
iret
jb
cmc
ret
shr
jae
inc
cmp
addr16
xor
xor
sbb
pushw
push
jns
xor
push
shrb
xlat
cmp
lahf
or
mov
adc
enter
jle
aam
inc
imul
repz
sub
xor
jb
push
inc
ljmp
jl
inc
gs
ret
lahf
daa
inc
push
bound
lock
pop
rclb
arpl
push
int
out
inc
xchg
mov
ret
inc
ja
mov
and
jnp
mov
xchg
mov
jb
push
outsb
xor
jbe
mov
cmpsb
repz
mov
loopne
mov
or
jns
xor
dec
or
xchg
inc
or
dec
mov
ljmp
jmp
js
je
dec
and
add
xor
adc
cmp
orb
cmp
jl
inc
fcmove
fildl
push
shrb
outsb
inc
mov
out
sub
cmp
cmp
pop
or
inc
shlb
and
jbe
push
stos
sub
sbb
mov
jne
gs
ss
xor
sub
add
push
mov
imul
scas
and
mov
sbb
ljmp
insb
loopne
inc
jbe
push
imul
imul
iret
mov
insb
addr16
jo
insb
add
outsb
test
push
je
jae
fs
sbb
rolb
cmp
gs
lock
xor
cld
loop
addb
or
cli
inc
addr16
repnz
pop
mov
cmp
jne
je
lret
inc
nop
repz
mov
cwtl
jg
push
sub
inc
dec
and
push
ss
je
clc
sub
in
sbb
push
aas
dec
pop
xor
pop
shl
xlat
xchg
adc
and
pop
call
push
mov
andl
push
imul
jns
inc
dec
mov
dec
push
and
rol
inc
fmul
ror
xor
nop
dec
js
inc
pusha
test
jb
inc
push
loop
sbb
ret
in
scas
shll
inc
push
push
cmp
pusha
add
aaa
dec
cwtl
sbb
and
mov
xchg
push
test
movsl
xchg
adc
push
inc
sub
mov
inc
loop
inc
pop
outsb
push
pop
clc
add
adc
mov
lock
rcll
push
pop
push
sub
mov
ds
insl
jo
call
popa
sub
loope
dec
mov
pop
adc
outsb
fs
or
jle
mov
js
sub
xchg
loopne
dec
jbe
dec
xchg
ret
jbe
pop
jge
cli
movsb
fucomip
sbbl
call
pushf
add
pop
fwait
aad
inc
sub
mov
sub
cmp
xchg
inc
add
test
ja
les
xor
pop
ret
int3
pusha
dec
mov
xlat
loopne
bound
jp
mov
push
inc
mov
inc
inc
ja
or
sbb
pop
xchg
dec
aas
or
push
mov
hlt
imul
pop
pop
adc
fidivs
inc
add
insl
jno
ljmp
inc
cltd
out
outsl
xor
loopne
or
jbe
jno
lock
xor
dec
in
xlat
add
mov
ja
gs
jmp
mov
and
les
test
test
dec
dec
iret
int3
je
inc
jg
xor
mov
inc
add
inc
fidivl
mov
jno
jo
jb
pop
rolb
popa
push
sbb
xchg
loopne
out
inc
cmp
add
mov
push
lret
mov
sbb
enter
aad
cmc
mov
int
das
inc
outsb
call
xchg
shrb
jmp
pop
ja
dec
or
nop
add
pusha
imul
data16
push
stos
inc
mov
inc
inc
jb
dec
and
dec
or
sub
inc
jmp
pop
sbb
jno
dec
xchg
mov
dec
add
dec
lods
icebp
pop
test
dec
jp
popa
sub
test
jae
pop
add
nop
sbb
and
call
push
jne
roll
xchg
add
push
test
mov
inc
das
cmpb
loopne
add
test
in
jmp
sahf
out
les
jmp
js
loop
xrelease
cmp
mov
incl
jecxz
sbb
add
aam
push
ret
sbb
or
pop
or
leave
shlb
add
mov
xor
inc
sub
outsl
sbb
push
pop
jbe
mov
cmpsb
dec
mov
xor
inc
sub
shll
sbb
push
cld
js
pop
cmp
add
rorb
insb
add
mov
ficoml
loope
rolb
pop
sub
adc
push
jmp
ret
mov
add
stos
in
jmp
mov
lcall
xor
sbb
inc
or
sub
lock
cmc
inc
and
lods
out
iret
push
push
aad
outsb
pop
xchg
inc
sbb
cmc
mov
adcb
aaa
inc
and
jg
rcr
push
je
loop
mov
or
ret
dec
or
sub
xor
mov
shrb
stos
fdivrs
jmp
and
dec
rorb
or
xor
cld
aaa
jo
xchg
nop
jmp
decb
and
xor
cmp
out
push
and
pop
out
jmp
pop
jo
icebp
stos
pop
mov
push
xlat
loopne
mov
push
add
cltd
cmp
out
sub
add
lcall
ss
and
leave
xor
pop
in
xorb
pop
xchg
cmp
sub
xchg
pop
rol
sub
cmp
mov
loopne
pop
and
lods
inc
loope
in
mov
ja
cwtl
xchg
rcll
testl
test
push
cltd
xchg
jmp
in
sub
sti
push
cmc
or
and
mov
jp
loopne
xor
into
mov
ja
int3
lods
jae
popa
mov
movsb
scas
loope
repz
mov
jmp
pop
jmp
inc
pop
add
fisttps
sbb
testl
test
mov
cwtl
jp
jmp
mov
adc
mov
fldenv
rcrl
lods
inc
rcrb
popa
jle
mov
sbb
sbb
adc
mov
fcompl
fimull
andb
cmc
push
ljmp
and
cs
jecxz
and
loop
movsb
xor
enter
cmp
adc
lret
fsubrs
or
mov
or
sub
lds
push
lret
inc
push
fcompl
rcrl
cli
ret
test
inc
cmp
test
lcall
mov
mov
sub
push
sub
dec
cmp
sub
pop
mov
lahf
test
add
aad
aas
add
pop
rclb
sar
lahf
adc
je
addr16
clc
aas
inc
dec
scas
ss
imulb
jmp
mov
sbb
loope
xchg
sti
jg
scas
jbe
orb
or
stos
pop
test
adc
or
js
test
adc
or
or
fmull
adc
add
jl
mov
adc
xor
cmp
clc
lock
mov
sbbb
hlt
les
mov
xchg
xchg
inc
or
outsb
jge
mov
mov
loop
out
pop
sub
leave
scas
int3
dec
xor
dec
push
push
cmp
jne
pop
loopne
and
hlt
rorl
daa
stos
ret
jmp
clc
or
cmp
nop
lock
je
dec
or
call
aad
and
test
pop
or
sub
mov
pop
add
ficoms
loopne,pn
ret
push
sub
scas
push
adc
shlb
mov
fisubrl
jb
mov
pop
test
mov
insb
nop
pop
popa
imul
sub
es
mov
mov
mov
sub
enter
out
stos
or
shlb
xor
fcompl
imulb
pop
int3
mov
mov
sbb
and
dec
repnz
sbb
test
mov
jl
aam
rolb
nop
cmp
pop
cld
jmp
inc
loope
ret
mov
add
xor
push
loopne
lcall
mov
adc
xchg
push
int
sub
stos
adc
cmpsl
incb
ss
rorl
out
push
mov
push
jmp
sub
push
add
fcompl
fwait
dec
lcall
hlt
testl
mov
jmp
ds
test
cmpsb
adc
mov
cmp
cmp
xchg
sarb
loope
ss
dec
jmp
stos
aad
mov
push
jno
cmp
jmp
rcrl
dec
test
or
mov
test
imul
push
enter
add
push
dec
mov
fs
popf
add
push
pop
pushl
sub
pushf
mov
out
mov
test
lods
mov
adc
mov
les
adc
xchg
cmpsl
mov
mov
in
adc
cwtl
jp
outsl
add
mov
push
dec
mov
cmp
xor
mov
popa
push
stos
mov
dec
or
xor
insl
call
loopne
adc
jmp
cmp
and
call
scas
sbb
inc
test
mov
add
or
enter
gs
jle
pop
test
and
push
lds
stos
mov
or
imul
ret
dec
testb
cmp
xor
rclb
insl
lcall
movsb
or
jo
ss
stos
mov
repz
mov
aad
mov
arpl
mov
incl
adc
cmp
mov
xor
and
mov
mov
sarb
inc
lods
push
adc
aaa
insl
jg
mov
out
ror
gs
mov
xchg
push
lock
aam
xchg
pop
jmp
xor
bound
jo
cmp
loopne
or
fadds
push
jle
call
cmc
in
xor
clc
test
fsub
jge
or
adc
or
mov
dec
mov
in
in
push
mov
mov
inc
test
mov
incl
scas
inc
rorb
jmp
in
sub
push
mov
adc
shlb
out
outsb
outsl
and
clc
sub
ficompl
add
mov
cmp
add
sub
pop
push
and
mov
aam
xchg
push
repnz
pushf
loop
adc
push
jmp
jg
cmp
leave
ds
lea
or
test
push
push
inc
jae
into
mov
push
fsubrl
clc
xchg
aam
pusha
xlat
sahf
std
in
out
mov
push
lret
cld
jg
and
cmp
mov
mov
dec
test
incb
stc
add
mov
push
sbb
xor
dec
add
dec
ret
jp
outsl
dec
js
mov
movsl
sub
data16
inc
push
xchg
mov
pop
lret
pop
dec
fdivrs
xchg
push
pop
add
pop
pop
cmp
mov
movsb
add
les
adcb
and
stos
ret
inc
inc
add
notl
inc
and
movsl
add
je
cmp
mov
cwtl
movsb
lcall
lods
push
push
cmc
add
jle
sub
sbb
and
bound
inc
xlat
push
mov
and
or
pop
ljmp
xor
dec
xchg
arpl
push
in
fwait
into
sbb
xchg
cmp
cmp
adc
jbe
jnp
inc
popf
lods
or
je
sub
in
inc
add
dec
pop
clc
adc
cwtl
mov
rclb
add
clc
mov
fucompp
cltd
cmpsb
xor
mov
add
xchg
das
rcr
sti
aaa
xchg
or
pop
insb
sbbl
sbb
stos
fldl
mov
push
lods
pop
sub
push
jne
in
pusha
data16
or
mov
arpl
xchg
pop
fadd
movsb
jbe
add
dec
fsubs
orl
popl
out
insb
sbb
aam
gs
sub
sahf
push
push
es
or
pop
lcall
dec
add
mov
sbb
mov
rcl
or
loop
add
inc
add
insl
or
clc
popa
mov
cmp
push
adc
lret
mov
sbb
jmp
push
test
je
add
pop
test
push
aaa
and
dec
iret
imul
mov
outsb
xlat
in
jnp
test
dec
add
popa
fistpll
ret
adc
xorb
rorb
sbb
xchg
adc
push
fwait
pop
xor
inc
add
fidivrl
sbb
repnz
or
dec
scas
mov
or
jp
add
dec
scas
nop
aam
test
mov
or
jp
inc
rorl
push
test
xor
dec
insb
out
mov
int3
cltd
jo
pop
outsl
andl
jmp
leave
dec
cmp
and
out
loopne
and
inc
cli
call
or
cmp
sub
cmp
fimull
xor
or
adc
xor
ret
or
push
jo
cmp
popf
fnstenv
nop
lret
mov
outsl
orl
cli
rolb
into
shl
js
mov
jecxz
ds
push
mov
xchg
pop
icebp
mov
js
sti
mov
xor
xor
sbb
negb
cmp
stos
addr16
cltd
inc
ds
orb
ds
scas
fs
ret
mov
jo
cmp
fs
mov
pop
stos
jno
push
add
sbb
and
mov
jecxz
inc
imul
ljmp
jl
push
lea
mov
in
and
test
sub
test
js
pop
aam
adcl
jl
push
sbb
imul
out
pop
jo
test
mov
loop
sarl
int
inc
xor
add
in
dec
jnp
out
sbb
mov
sbb
mov
adc
jmp
adc
or
xchg
loope
fisttpl
or
push
jno
or
out
mov
or
mov
mov
mov
movsl
xor
push
addr16
or
lods
xchg
push
and
push
add
pop
inc
popf
loopne
aam
mov
cmp
cmp
enter
push
mov
add
popa
sbb
cmpsl
add
mov
xor
ret
xor
pop
mov
mov
adc
js
cmpsb
lcall
push
xchg
jns
fcompl
aaa
jg
push
dec
scas
lret
jmp
cmc
aad
mov
pop
push
or
xor
push
mov
pop
add
push
mov
jo
mov
or
outsb
in
and
push
inc
aad
std
add
movsl
scas
adcl
pop
cmp
imul
lea
ret
out
js
aam
std
pop
out
push
mov
je
adc
popa
inc
push
scas
push
pop
andl
cmp
cltd
cmpsl
pusha
stc
mov
iret
jmp
loopne
pop
sub
pushf
push
cs
mov
and
jno
fwait
push
cs
loope
roll
dec
push
sbb
call
push
jl
xor
ret
pushf
mov
loopne
pop
popf
lock
cmpsl
and
jb
push
mov
mov
lret
rcrb
leave
mov
push
loop
or
ret
mov
aaa
jo
cmp
xchg
push
das
sub
pop
imul
out
in
xor
mov
mov
or
mov
and
dec
stos
fimuls
and
jmp
js
push
sbb
mov
cmp
sti
sbb
out
decl
mov
lret
mov
jae
inc
xchg
ss
cmp
pop
mov
mov
pop
inc
pop
lock
add
sbb
repnz
nop
push
and
inc
inc
std
bound
scas
in
ss
jbe
jbe
dec
mov
xor
cmp
push
push
cmp
scas
jne
std
rcr
out
sub
or
into
incl
mov
inc
fisubs
jns
aad
pushl
and
jp,pn
fwait
push
shl
sub
rclb
pop
fs
stos
push
or
dec
decl
testl
add
sub
xlat
test
data16
xchg
fsubl
xor
pop
sub
incl
test
aam
inc
mov
aam
xor
loopne
decl
xchg
loope
mov
mov
mov
fs
stc
shl
push
popa
ret
icebp
jno
incl
mov
inc
repnz
cmp
outsb
ljmp
fs
jnp
or
pop
in
lods
cmp
add
clc
inc
push
dec
or
fwait
sub
out
aas
movsl
jbe
scas
cmp
ficomps
xchg
fidivs
jl
or
inc
out
mov
inc
sbb
fstps
lock
call
mov
mov
or
sub
and
xor
or
lcall
push
pop
sbb
cmp
scas
insl
dec
mov
inc
xchg
shrl
roll
popf
rcll
leave
adc
xchg
cld
lret
out
lahf
icebp
push
xchg
loope
in
or
add
sbb
or
dec
mov
bound
push
popl
fcompl
aam
dec
mov
sbb
mov
jmp
fcompl
mov
mov
mov
sbb
call
hlt
cmc
test
insl
mov
or
cmp
adc
cmpsb
jno
pop
aad
roll
incb
adc
mov
gs
negb
jmp
ljmp
push
dec
leave
push
pop
hlt
xlat
push
test
sbb
push
inc
xchg
fcomi
pop
scas
or
pop
cld
mov
stos
jg
xchg
pusha
jae
lahf
adc
add
pushl
jbe
loop
cs
and
pushf
lock
lods
ds
push
push
outsl
jle
jnp
dec
xchg
xchg
test
cmpsl
jbe
sbbl
jmp
mov
lods
repnz
mov
jo
jle
dec
xchg
lret
xor
pop
adc
pop
cmc
call
bound
mov
push
sbb
push
xchg
mov
fwait
decl
xchg
fstl
je
or
jne
push
adc
or
ja
and
xor
adc
clc
pop
std
pop
movsb
ja
fstpl
es
cli
inc
nop
lods
pcmpeqw
out
pop
cmp
ljmp
sbbb
fimuls
mov
and
mov
lods
movsb
push
mov
push
out
mov
dec
lret
pop
mov
push
pushf
iret
push
xchg
adc
div
xchg
mov
push
out
fdiv
jg
cmp
pusha
divl
or
dec
add
js
ljmp
inc
aas
jno
fisubrl
sbb
jl
xor
repz
push
lret
movsb
out
pop
out
inc
lea
or
mov
mov
sub
xchg
jnp
movsb
sti
inc
xchg
ljmp
mov
dec
push
out
cmp
fists
inc
out
rcrb
mov
out
cmp
push
xchg
fmull
xchg
leave
xchg
and
or
incl
cmc
jge
out
cmp
gs
xchg
enter
cmpsb
adcb
sbb
mov
push
push
lea
dec
push
pop
mov
or
pop
lods
clc
inc
stc
fnstenv
cmp
mov
int3
adc
inc
addl
imul
jl
or
mov
call
xor
jbe
jmp
pop
jmp
sub
push
jb
dec
xchg
imul
int3
adc
jbe
sub
mov
ljmp
sbb
out
or
and
daa
call
jg
push
xchg
sbb
xchg
mov
pop
push
and
or
decl
dec
xchg
mov
pop
rclb
insl
pushf
push
jbe
stos
cltd
jo
out
mov
jmp
xor
pop
pop
xchg
cmp
mov
cs
js
dec
xchg
insb
jno
in
push
inc
mov
jle
mov
lahf
sub
mov
add
mov
mov
jno
push
push
cmp
ljmp
mov
pop
bound
xor
dec
xchg
cmp
loopne
cmpsb
and
aad
sarb
mov
push
mov
jnp
adc
push
or
mov
jecxz
add
nop
inc
jne
inc
and
pop
mov
mov
jns
and
cmp
std
dec
inc
stc
inc
mov
jg
jg
int3
xchg
loope
add
xchg
inc
dec
xor
inc
add
jg
rolb
pop
imul
inc
fsincos
mov
cmp
jmp
mov
inc
mov
sbb
and
adc
adc
dec
enter
scas
xchg
call
add
cmp
mov
xchg
mov
and
and
mov
call
lds
in
adc
sub
mov
aas
jle
ljmp
jbe
lock
test
inc
dec
xor
add
ret
mov
add
lods
sti
inc
cld
aaa
jp
das
jae
pop
and
mov
in
sti
aad
je
dec
sbbl
ja
js
mov
inc
test
adcb
je
jns
jb,pn
push
movsb
call
std
imul
xor
xor
loop
mov
call
dec
out
sti
inc
nop
sub
pop
out
xor
ret
or
daa
or
pushl
mov
xchg
and
mov
cmp
testl
push
fcomi
jmp
inc
cld
in
cmp
add
je
pop
sbb
lcall
mov
lcall
outsl
jbe
lods
pop
pop
push
mov
iret
add
mov
cld
inc
cli
mov
shl
mov
adc
cld
cld
pushl
xor
dec
into
pop
inc
rclb
outsb
test
gs
or
mov
sbb
fistps
cmp
jecxz
jge
lds
fstpl
imul
call
or
xchg
push
fnstenv
xor
std
pop
and
ljmp
jl
std
or
mov
decb
enter
or
repnz
cmp
jge
xchg
notl
add
push
outsb
mov
in
adc
jmp
mov
xor
jg
pushl
dec
and
mov
pop
stos
test
inc
arpl
mov
les
inc
repz
sbb
repz
jl
sub
xchg
stos
aam
imul
fisubrs
jmp
mov
test
jmp
shll
lds
xor
call
gs
hlt
cmpsl
mov
loopne
pusha
sbb
call
pop
mov
sbb
pop
sbb
data16
mov
test
inc
data16
cmp
incl
dec
xchg
leave
jno
lods
clc
ja
mov
into
rcr
dec
jb
mov
incl
xchg
push
jno
dec
scas
mov
ficomps
pushf
dec
xchg
fildll
lret
ljmp
call
scas
testl
or
loope
cmpsb
lock
sbb
ljmp
xor
out
mov
cmc
test
leave
adc
in
add
lcall
out
mov
add
lods
push
cmpsb
mov
mov
mov
cld
inc
xchg
addr16
cmp
loop
cmp
and
hlt
aas
je
lcall
imul
jae
push
pusha
sub
mov
mov
inc
rol
aam
mov
pusha
fcomi
or
mov
push
lcall
mov
jbe
pop
and
or
or
sub
pop
std
dec
lcall
jle
rcrb
stos
jmp
push
loope
adc
fs
fcomip
call
cli
test
push
dec
xchg
stc
inc
sar
add
leave
sti
mov
je
call
push
loopne
arpl
idivl
adc
or
fs
pop
adcb
jne
and
fimuls
gs
cmp
push
mov
dec
jge
adc
mov
sub
jp
out
scas
mov
stos
in
sub
std
jp
dec
inc
push
mov
sub
inc
decl
inc
cmp
repz
popa
bound
mov
jge
loop
mov
jbe
outsb
loope
xchg
and
xor
in
jge
sti
jmp
fcomip
pushf
pop
in
mov
and
cmc
jne
ljmp
insb
sbb
es
ljmp
sti
popf
in
or
sbb
jo
sbb
test
jae
or
lahf
ljmp
add
cwtl
lahf
mov
insl
mov
mov
mov
std
lods
sbb
das
lcall
push
pop
addr16
mov
push
lock
push
shlb
mov
xchg
cwtl
insl
mov
push
ljmp
decl
stc
mov
stc
cmc
out
jne
adc
pop
jg
clc
or
jge
lret
mov
ficomps
fs
xor
xchg
jmp
pushl
sub
lcall
push
push
and
dec
xchg
enter
or
arpl
xlat
push
lcall
js
mov
imul
mov
mov
sbb
mov
or
lock
popa
out
ja
mov
jmp
lods
testb
sti
dec
lcall
popa
push
adc
jnp
cmpl
mov
shrb
leave
adc
xor
and
iret
adc
stos
ds
lds
inc
inc
jp
daa
jno
pusha
fwait
test
decl
adc
ja
mov
xor
xlat
sub
ret
lods
aas
insb
movsb
decl
arpl
mov
fwait
in
gs
push
jge
mov
sub
xlat
das
pushl
std
fwait
add
jno
push
xor
or
or
scas
add
call
incl
jp
gs
sbb
xchg
scas
push
in
sbb
or
mov
stos
testb
shll
inc
cli
repnz
rorl
mov
xor
cwtl
movsl
sub
lahf
movsb
cmpsb
fisubs
pop
clc
fwait
stos
imul
jge
lcall
xlat
inc
xchg
sbb
inc
jnp
xchg
dec
mov
mov
leave
sub
mov
fxtract
mov
ja
pop
incl
push
and
pop
xor
insb
xchg
jbe
lret
cmc
lcall
jmp
mov
roll
ljmp
jg
pop
mov
cmp
in
mov
inc
sub
cld
jns
sub
xchg
nop
mov
and
cmp
add
rcll
int3
int
or
mov
mov
aad
jl
loope
xor
into
das
lahf
fildll
jae
dec
inc
out
sar
pop
jl
mov
xor
cmc
testl
dec
dec
sub
jg
das
fisttpl
in
popf
rorb
jg
mov
mov
test
loopne
addl
adc
xorb
jbe
rcl
mov
test
decl
add
fxch
sbb
fst
push
outsl
push
cld
fucomip
push
mov
xchg
ja
test
mov
aaa
inc
xchg
inc
jns
cmp
jle
bnd
mov
rcrl
jp
sub
cld
incl
fdivs
arpl
dec
cwtl
lods
icebp
add
icebp
xchg
sbb
div
scas
xchg
cmpsl
sub
mov
incb
fsubrs
ljmp
shlb
scas
insl
in
and
mov
add
jb
outsl
iret
ljmp
into
mov
push
push
sub
int3
pop
push
inc
cmp
mov
movsl
sahf
in
aaa
pop
push
sbb
lds
push
pushf
out
lcall
cmp
push
icebp
sub
stos
imul
and
add
sbb
cmp
mov
scas
int3
jle
stos
jb
xchg
lds
test
orl
sbb
popa
aam
jge
adc
not
or
jg
and
xchg
addr16
fdivr
sbb
out
cmp
adcb
xchg
pop
dec
decl
push
lahf
push
pusha
gs
dec
ljmp
add
cmp
inc
sub
cmp
mov
push
add
jbe
push
sahf
call
fiaddl
add
loop
lods
ljmp
sub
das
cmpb
sbb
sub
data16
cmp
mov
xor
sti
dec
xchg
xor
jmp
cwtl
pushf
lods
cmp
out
mov
bound
imul
pop
hlt
dec
push
jns
adc
shlb
xor
xchg
enter
sbb
jbe
push
pushl
xchg
push
cmp
dec
lcall
and
shrb
jmp
cli
inc
jg
add
xchg
fcompl
and
imul
incl
rcrb
mov
and
je
cltd
cmpsb
push
std
call
pop
mov
sbb
or
push
stos
cmc
aas
push
lcall
clc
pop
xchg
cmp
mov
bound
jecxz
and
clc
pushl
dec
pop
test
daa
jl
insl
jmp
inc
inc
arpl
or
decl
mov
rcll
int3
lods
ja
mov
into
into
sub
imul
insl
adc
ljmp
cmp
push
call
add
mov
adc
out
adc
shrb
xchg
ljmp
mov
sbb
inc
sbb
pop
push
sahf
jne
or
xlat
dec
out
stos
mov
push
mov
push
test
cmpsb
ljmp
fcompl
out
ror
js
adc
aad
dec
mov
dec
xorb
std
ret
adcl
hlt
hlt
cs
fsubs
add
fcomip
mov
rcrl
aam
call
fbstp
shll
pop
dec
daa
push
inc
mov
jae
adc
repnz
xchg
and
xor
dec
ljmp
sbb
ja
add
pop
leave
and
popa
push
xor
jmp
cmpsb
stos
fidivl
xchg
test
sbb
mov
int
jmp
fs
hlt
lret
outsl
push
add
inc
cs
adc
and
test
mov
rolb
or
cmp
and
or
jmp
pushl
xlat
or
push
xor
ljmp
add
cld
add
shrb
out
ja
test
mov
movsl
dec
push
push
sub
push
jmp
aad
xchg
sbb
push
jmp
mov
cmp
cmp
fs
fdivl
push
push
dec
mov
cltd
pop
mov
push
xor
push
inc
jmp
adcb
les
mov
add
or
and
cmpb
mov
fidivrs
or
inc
jmp
mov
or
push
je
jmp
mov
movsb
mov
pop
add
shrl
pop
call
rclb
mov
cli
pusha
insl
mov
inc
fnstenv
sub
orb
hlt
adc
jmp
inc
std
push
divl
jmp
cmc
jb
call
sti
sub
mov
stos
or
int
mov
and
dec
hlt
push
mov
adc
stos
or
mov
sbb
jnp
push
xchg
das
sbb
add
xor
pushf
lods
jne
jo
push
and
repnz
jmp
add
sti
into
push
pop
cli
mov
or
movsb
daa
sbbb
pushf
jge
or
mov
xor
iret
in
dec
adc
or
add
out
adc
push
jle
sub
or
test
mov
flds
mov
push
clc
in
or
roll
test
and
mov
adc
dec
add
push
push
or
sub
int
mov
in
fwait
and
lods
mov
push
xchg
es
cmp
dec
mov
adc
and
aad
loope
mov
jo
mov
imul
xorb
popf
loope
fbstp
jmp
aas
add
adc
out
out
jbe
xchg
in
ss
sbb
jnp
xor
js
adc
pop
jae
mov
push
mov
in
push
push
xor
movsb
inc
lret
jo
sbb
shrb
mov
mov
push
add
jb
cmp
xor
inc
xor
ds
pop
mov
xchg
push
jae
sub
outsb
xchg
sbb
ss
es
sbb
test
cld
xchg
lock
xor
inc
inc
mov
ss
or
adc
xchg
mov
in
push
shll
mov
or
rcll
popf
and
push
mov
xchg
out
mov
push
into
dec
mov
lods
paddq
jo
ret
movsb
sti
clts
add
sti
flds
ficoms
aam
fcmovnbe
push
dec
cmp
mov
ja
div
mov
lret
js
leave
inc
xor
adc
loopne
sbb
insl
inc
pop
xor
dec
or
add
xor
cmp
jg
cld
data16
in
pop
jp
inc
rorl
test
inc
push
cmp
js
leave
scas
decl
clc
push
adc
pop
jno
mov
lcall
pushf
cmp
in
xchg
add
pop
xor
add
mov
arpl
stos
shrb
outsl
insb
clc
and
fildl
push
in
cmp
push
add
lods
add
pushl
cmc
jp
mov
imul
jg
pusha
clc
das
mov
clc
insb
ss
mov
sub
or
xchg
pop
push
add
xor
mov
push
movsb
or
aaa
mov
mov
fnsave
ret
xchg
push
ss
mov
add
imulb
fisubrs
mov
mov
pop
insb
test
les
mov
cmp
in
push
mov
js
mov
cmc
xor
fdivr
xchg
jae
jbe
or
sub
pop
pop
push
mov
cmpl
adc
rorb
mov
adc
add
lahf
cmpsb
fistl
jns
pop
xor
out
and
sbbb
lcall
xchg
pop
push
ret
dec
daa
and
out
or
sbb
xor
loopne
fs
es
xchg
add
mov
test
int3
push
sub
cmp
sub
dec
xchg
pusha
adc
jo
sub
pop
pop
jmp
push
push
or
test
aad
adc
mov
mov
ret
jmp
stos
es
inc
popf
test
cwtl
mov
je
leave
shll
jns
and
mov
xor
add
mov
jo
out
adc
call
mov
imul
pusha
lret
pop
aam
dec
mov
dec
jp
pop
dec
js
cld
sub
in
test
jmp
push
fdivrl
jge
in
mull
es
xorb
adc
mov
out
dec
mov
or
mov
lods
cs
jnp
popf
adcb
ror
ds
mov
ficoms
insw
mov
bound
jl
aam
add
jl
adc
jne
push
sbb
and
mov
sub
ret
mov
clc
pop
inc
mov
xchg
xchg
adc
pop
adc
gs
push
mov
or
call
movsb
sbb
stc
shlb
mov
rcll
je
loope
sbb
addb
xchg
lea
stos
in
adc
enter
xor
jmp
shrl
sub
cmpsb
mov
nop
daa
ja
addl
mov
fiaddl
ljmp
pop
add
aad
xor
outsb
xchg
inc
hlt
pop
jns
mov
inc
xor
arpl
pop
repz
cmp
mov
les
daa
ss
imull
add
xchg
sub
inc
sbbb
shll
mov
or
mov
mov
and
jbe
js
sahf
out
hlt
mov
sub
clc
loopne
cmpsl
popa
ret
add
test
push
push
fistps
add
lods
shl
lret
jmp
pop
mov
fadds
flds
adc
sub
pusha
mov
mov
jo
fidivrs
cwtl
push
bound
and
mov
loope
push
clc
dec
inc
mov
mov
popa
sbbb
movsb
call
in
cmpsb
cmp
test
in
push
lock
aaa
es
orb
js
les
cld
fidivrs
or
mov
mov
or
adc
icebp
jnp
pop
cmc
or
add
dec
das
dec
ljmp
sahf
push
mov
jg
jne
out
cmpb
xor
or
dec
cli
arpl
insb
sub
lock
imul
jecxz
shl
add
js
adc
sti
in
daa
pushf
popf
xor
loopne
jo
sbb
cld
loopne
xor
stc
inc
ret
icebp
sbb
inc
loopne
jge
xlat
shll
pop
cmpl
mov
insb
fwait
push
movsb
xor
mov
mov
scas
or
cmc
mov
add
add
and
pop
lret
dec
rcll
xchg
fcomp
loop
mov
xor
sahf
mov
lret
mov
sub
icebp
push
repz
mov
mov
shlb
fsub
call
dec
push
and
test
insl
add
aad
leave
inc
pushf
loopne
add
or
push
sbb
test
adc
shlb
mov
jg
loopne
jg
aam
jmp
je
push
je
jle
mov
popa
mov
cmp
or
dec
jb
subl
mov
add
mov
rorb
mov
mov
mov
push
movsl
mov
push
popa
mov
cmp
push
mov
addl
and
mov
gs
jmp
jo
in
fdivrl
ljmp
jmp
aas
and
push
sub
xor
jmp
mov
mov
jo
clc
add
add
jnp
jmp
aaa
aad
out
inc
nop
inc
imul
lods
sub
popa
xchg
add
rolb
cmpsb
loop
pop
dec
jne
in
insl
push
je
mov
sub
adc
pop
ret
aas
daa
sub
push
sbb
sub
loope
adc
push
test
xchg
push
neg
hlt
lock
ljmp
fsubrl
out
fcmovnu
jo
cmpsb
lock
pop
sub
dec
adcl
mov
and
pop
insl
sbbb
aas
or
jg
mov
ror
inc
insb
jmp
jb
aam
sbb
int
outsl
inc
jge
and
fld
or
aam
cmp
aam
sub
lock
jb
lock
and
movsb
icebp
fwait
or
xchg
popa
lahf
or
jmp
jnp
jg
cld
out
push
nop
push
push
ss
loop,pn
ljmp
add
daa
lock
ss
adc
xchg
and
enter
ljmp
enter
push
mov
add
gs
daa
jp
add
or
xor
or
cmpl
out
add
dec
test
test
out
sub
ss
and
dec
js
mov
adc
mul
movsl
rorb
cmpsl
dec
mov
and
push
in
cli
sbb
repnz
and
xchg
loope
jecxz
sbbl
xor
out
stos
mov
cmp
push
or
pop
movlps
mov
jp
out
subl
mov
cmp
mov
mul
adc
cmp
xchg
xchg
and
adc
cmpsb
mov
pop
fwait
or
pop
cmp
mov
fisubrs
sbb
jmp
mov
cltd
ss
insb
add
bound
or
add
sbb
fwait
sub
lds
lock
jbe
popa
cmpw
movsb
or
nop
add
call
jne
sahf
xor
dec
imul
and
pop
jmp
mov
call
add
jmp
movsb
faddl
jb
add
sub
test
cmp
cmp
adc
lock
xchg
and
addr16
pop
xor
cli
loopne
hlt
std
test
mov
mov
into
int
or
pop
pop
jge
lret
cmc
and
mov
pusha
push
xor
push
xor
jo
cmpl
xchg
repnz
cli
cwtl
in
or
jbe
mov
mov
loop
push
cli
test
fadds
mov
xchg
lock
pushf
add
jnp
fcmovu
fs
inc
das
sahf
pop
test
jmp
dec
xchg
sbb
outsl
iret
rol
mov
sahf
in
pop
rclb
popa
and
push
pop
sub
pop
aad
cmc
or
pop
sbb
ljmp
push
lods
gs
enter
pop
adc
lcall
push
into
add
popl
sbb
rcll
inc
cwtl
mov
mov
gs
roll
inc
movsl
adc
call
push
pusha
mov
sahf
in
int3
stos
incl
lret
inc
icebp
fstl
sahf
sbb
sub
dec
inc
fwait
gs
out
sti
mov
test
out
je
ret
cmp
mov
sub
call
jbe
push
add
cmp
adc
pop
or
jb
fldt
mov
mov
dec
sub
in
adc
in
mov
bound
popf
in
xchg
and
mov
es
inc
lods
push
mov
sbb
fst
insl
outsb
mov
sbb
jmp
pop
lock
push
or
fistpl
fisubrs
and
xor
push
imul
enter
insl
xchg
sbb
mov
lret
enter
call
cli
push
sbb
js
xchg
and
scas
add
js
test
inc
add
push
xchg
sti
lret
in
jmp
adc
mov
fsubrs
add
and
sub
dec
pop
rcrb
dec
push
inc
xor
and
hlt
and
cwtl
mov
or
xor
dec
aad
xor
leave
mov
add
lea
push
les
aad
jg
and
fldcw
add
xor
add
popf
and
icebp
je
dec
inc
xchg
jg
int3
dec
loope
int
dec
xlat
dec
icebp
bound
mov
xor
dec
jle
pusha
pushf
js
loope
je
popa
ret
push
stos
sbb
or
lea
sub
scas
mov
cltd
dec
jle
dec
mov
in
clc
adc
jp
dec
adc
jno
sub
and
cmp
mov
shll
jo
iret
mov
je
ja
movsl
cltd
loopne
das
push
shlb
roll
in
movsb
in
ret
pop
int3
out
loope
cmp
mov
mov
xchg
out
inc
js
ret
lcall
dec
push
jb
mov
jo
dec
js
and
cpuid
sbb
pop
cwtl
adc
aas
inc
ja
xchg
push
test
add
mov
nop
and
mov
imul
xchg
dec
and
mov
lock
stos
ss
add
mov
mov
mov
filds
js
popa
jbe
out
rorb
push
jmp
fldcw
stc
stos
and
xor
popa
outsb
das
fcomps
pop
sub
ljmp
add
in
aam
push
push
imul
xor
inc
add
rclb
stos
mov
mov
sbb
rcrl
jle
add
out
add
adc
dec
xor
movsl
adc
inc
cmp
push
or
adc
bound
shrl
push
xchg
cli
add
adc
test
call
sub
inc
or
mov
push
std
cld
movsb
sahf
and
bnd
sbb
ds
xchg
fs
push
xorl
sub
sbb
addps
adc
or
cmp
or
pop
ds
ret
ja
std
cmp
push
jl
cmc
jmp
fisubl
fdivrl
pop
add
out
ljmp
jo
lock
jb
dec
push
aad
mov
add
cmp
xchg
loopnew
lahf
out
jecxz
or
imul
sbb
sub
sbb
out
mov
shll
test
xchg
insl
mov
push
mov
cmpsb
xchg
pop
repz
icebp
adc
sahf
popa
into
test
mov
cwtl
adc
fnstsw
mov
mov
out
dec
mov
adc
jmp
inc
rcrb
adc
lcall
adc
add
out
xor
push
lcall
push
adc
inc
xchg
sub
push
das
shll
lods
adc
repnz
fisubrl
xorl
mov
mov
pusha
and
sub
pop
pop
push
dec
xchg
in
aaa
addl
pop
sub
add
push
pop
pop
rclb
pop
sub
loopne
lods
iret
mov
cmp
inc
into
dec
mov
mov
loopne
out
lock
mov
mov
push
pop
test
js
mov
in
jo
stc
es
fimull
lods
sbb
stos
adc
in
xor
sub
pop
iret
jge
mulb
fs
outsb
xor
xor
dec
jb
jmp
fs
xor
adc
push
aas
add
js
pushf
sub
jne
sahf
andb
inc
iret
sub
mov
push
leave
or
cmovs
stos
jecxz
test
jo
gs
lret
fwait
cs
adc
mov
and
jo
inc
fwait
lea
inc
mov
fcoml
mov
inc
pop
lods
aam
inc
add
repz
js
sub
lock
cmpsb
or
clc
cld
jmp
inc
divb
jg
pop
mov
mov
ja
xor
jno
out
clc
inc
scas
xor
loop
notb
or
fcompl
push
enter
aas
loope
loop
leave
xchg
ss
pop
sbb
fildl
loopne
add
pop
movsl
mov
out
movsb
rolb
stos
cmpsb
mov
xor
stc
mov
xchg
jno
sbb
sti
mov
mov
sti
inc
mov
adc
sahf
dec
dec
repnz
xchg
mov
cmp
xlat
and
push
mov
jmp
icebp
fsubl
rcr
repnz
or
gs
fcoml
fwait
popa
sbb
loopne
or
or
push
jmp
out
fwait
mov
dec
andb
lock
jae
push
out
push
fnstcw
mov
push
arpl
iret
icebp
inc
rol
jo
mov
in
adc
cwtl
popf
js
adc
jnp
adc
sar
jb
stos
clc
ret
outsb
or
lret
and
fstpt
mov
imul
jg
andb
or
lea
dec
adc
data16
adc
out
cwtl
shlb
mov
ds
dec
je
outsb
xchg
icebp
mov
xchg
dec
mov
ret
xchg
inc
lods
mov
movsb
test
scas
mov
test
lods
shlb
out
xor
iret
mov
cmpb
add
test
add
jge
mov
mov
shl
add
push
xchg
and
inc
sbb
cld
xor
jp
arpl
cmp
pusha
clc
pop
rclb
test
arpl
jmp
xlat
es
mov
pusha
cmpsl
pop
cmp
jb
shlw
adc
xchg
dec
mov
mov
pop
xchg
adc
add
pop
lea
clc
jmp
mov
xchg
fwait
icebp
adc
fildll
cmp
mov
add
cli
lock
push
fsub
scas
shlb
loope
cmp
inc
testb
and
xor
mov
jo
test
out
adc
or
shlb
enter
mov
push
mov
xor
mov
insb
loope
hlt
dec
push
repnz
mov
jp
mov
sbb
add
es
cld
clc
insb
add
stc
test
js
scas
imull
cmp
cmpb
push
inc
pushf
inc
sbb
mov
jb
adc
mov
push
push
insb
loope
mov
lods
push
mov
mov
mov
sahf
cmp
mov
arpl
testb
repnz
push
pusha
pop
mov
lods
imul
jp
sbb
scas
outsb
mov
mov
xchg
and
xlat
hlt
adc
add
movsl
movsl
bound
inc
aas
lods
call
jnp
cld
push
scas
add
push
jp
pop
cmp
mov
loopne
in
pop
fsubrs
fisubl
pop
or
pop
add
add
aas
aam
xchg
clc
mov
push
mov
std
xorb
das
push
dec
lods
sub
xchg
shlb
hlt
movsl
sub
movsb
js
xchg
js
call
cmp
pop
cmc
rorl
add
jo
aaa
adc
push
adc
orl
movsb
das
fimuls
xchg
or
cmp
push
push
aam
sub
cmpsl
mov
enter
xchg
shrl
dec
test
es
js
pop
push
add
inc
adc
in
popf
daa
or
filds
xchg
ja
fstpt
jp
insl
movsl
sbbb
pop
lods
roll
push
or
xchg
jbe
add
xchg
sub
add
loop
cmpsl
js
loop
pusha
ljmp
jle
aaa
insb
call
repnz
sbb
mov
fwait
repz
stos
pop
lock
shlb
decl
add
aam
lcall
add
mov
cld
inc
add
loopne
repnz
sbb
or
adc
xchg
inc
lock
mov
or
pop
jmp
jae
dec
jge
xor
andb
mov
and
call
popa
aam
into
ret
rolb
mov
sbb
enter
xchg
ljmp
push
imul
mov
aam
push
pop
and
xchg
add
push
dec
fs
push
cli
outsb
xchg
repnz
jo
ja
sub
push
or
jo
pop
xor
push
loopne
gs
mov
data16
cmp
mov
mov
out
or
mov
push
mov
or
mov
into
imul
pop
pop
sbbb
xchg
xor
pop
lcall
jne
or
push
test
mov
aam
pop
icebp
imul
mov
test
cmc
push
add
faddl
test
inc
sbb
or
fwait
and
lret
out
add
mov
xor
sub
jo
xor
rolb
inc
xchg
icebp
fistpll
popa
xchg
xchg
or
loopne
dec
add
jno
jl
data16
jg
mov
cmp
incl
fldcw
add
ljmp
fwait
sub
mov
mov
ret
jmp
or
loop
jle
sbb
stos
stos
jecxz
ret
add
push
int3
dec
sbb
mov
insb
hlt
inc
js
orl
mov
adcl
push
or
insb
flds
cmp
imul
and
cmpsb
lahf
sbb
jl
out
jno
inc
test
leave
ja
popf
cwtl
les
xor
and
dec
or
or
cmp
ds
sub
int3
push
add
pop
and
lea
and
adc
cmp
jmp
cmp
cmpsb
fwait
jge
jnp
push
rorb
add
mov
bound
into
call
dec
push
xchg
mov
in
test
jcxz
dec
lret
jae
sbb
push
dec
inc
mov
sub
mov
jl
mov
insb
pop
xchg
fstpt
lods
pop
and
hlt
test
sbb
mov
mov
xchg
aad
jno
or
stos
nop
add
add
in
add
jns
and
jbe
and
loope
popa
mov
mov
jecxz
jno
mov
dec
cmp
fwait
lea
mov
test
push
das
mov
push
add
cltd
or
ds
and
arpl
insb
sub
mov
das
icebp
loop
ret
bound
mov
test
or
lods
insb
sbb
mov
adc
fadds
push
mov
jbe
test
push
adc
lea
and
xor
sbb
push
xchg
adc
sub
imul
test
inc
add
sbb
mov
loopne
loope
rorb
add
lods
cmp
test
inc
inc
aaa
sbb
enter
mov
cmp
sub
pop
js
flds
andb
jecxz
cs
or
ds
pop
ja
xor
xlat
jne
or
aaa
rorb
mov
loopne
push
pop
popf
mov
dec
xchg
loope
test
ljmp
outsb
and
int
loop
imul
imul
jecxz
lcall
imul
adcb
sub
pop
mov
gs
outsl
arpl
fldt
rcrb
jo
mov
adc
sub
add
push
cli
shrl
mov
repz
jb
or
cltd
clc
jbe
jns
mov
stc
outsb
ss
ss
cld
shrb
int
aam
popl
sbb
and
pop
sbb
xchg
jle
sub
shr
push
pop
xor
dec
mov
push
sub
mov
adc
rolb
adc
and
dec
and
inc
or
or
arpl
cmp
xchg
mov
adc
jle
add
inc
lock
pushf
int
lcall
mov
pop
mov
cmp
je
xor
insl
inc
stos
pop
sbb
fcmovnu
rol
jmp
push
iret
aas
pop
fsubrs
movsb
fistps
jnp
mov
sbb
dec
add
pusha
aad
frstor
mov
fsub
xchg
mov
pusha
sbb
or
sbb
add
fwait
lcall
jl
addb
loope
sti
mov
mov
aam
out
ljmp
stos
inc
mov
pop
stc
cmp
mov
cmpsb
ss
aam
movsl
pop
adc
pop
inc
sub
sti
test
rcll
adc
ds
lret
and
xchg
movsb
sbb
cli
cmp
pop
dec
js
addb
out
pushf
out
arpl
cmp
xor
inc
call
lea
and
ljmp
mul
jmp
jo
push
insl
gs
and
jb
insl
cs
les
mov
cmpsl
or
jno
movsb
push
insl
and
and
mov
inc
popa
and
flds
or
pop
pop
mov
cmpsb
jnp
in
fwait
mov
insb
and
lds
add
xchg
push
aas
cmpsb
outsb
aas
mov
fwait
push
pusha
lcall
sub
and
lock
inc
pop
sub
and
mov
mov
test
or
dec
mov
jne
test
inc
sub
stos
enter
shl
inc
jne
adc
mov
les
call
xor
mov
cmp
dec
jb
cmpsb
push
jecxz
inc
or
add
lret
mov
pop
dec
loop
sbb
cwtl
fs
jb
or
scas
shrb
aaa
jo
mov
pushf
sub
mov
sub
lret
push
pop
xchg
pop
pop
push
xor
inc
adcl
fildll
sub
sbb
rcll
test
push
iret
mov
cmp
test
shll
out
cmc
sahf
cmc
push
push
sub
clc
jmp
popa
pop
jg
adc
aas
loopne
mov
jmp
inc
sbb
xchg
xor
jp
mov
subl
add
sub
mov
jmp
lret
jns
sbb
sub
or
mov
push
je
hlt
loopne
pop
lods
dec
push
or
push
pop
inc
cmp
and
sub
pop
jb
inc
ret
movsl
repz
sbb
or
add
pop
dec
adc
inc
call
jno
out
lret
push
dec
aas
addl
or
movsl
stc
jno
hlt
mov
int
mov
add
and
es
xchg
push
lcall
hlt
add
test
jmp
bswap
icebp
loopne
or
push
mov
mov
jne
xlat
stos
popf
je
mov
insl
pop
addb
sbb
lods
popf
sahf
dec
aas
sub
dec
mov
xchg
test
call
iret
jl
into
pop
xchg
in
decb
mov
xchg
std
movsl
fnstcw
iret
aam
cmp
push
insb
sbb
pusha
cmp
cwtl
mov
cmp
pop
ss
mov
cmpsb
addb
cmpsl
push
fidivl
adc
push
or
push
jb
aas
loop
ret
push
lcall
cmp
xchg
out
into
data16
std
and
popa
imulb
aaa
inc
jmp
popf
cmp
cld
ret
jmp
add
push
lret
aad
mov
jecxz
and
dec
mov
pop
shll
shrb
out
jl
outsl
movsl
xor
adc
arpl
loopne
and
mov
mov
leave
sbb
cld
jmp
into
sub
add
mov
add
jbe
cmp
imul
outsb
cwtl
insb
sbb
or
mov
imul
mov
call
dec
fistps
clc
and
mov
mov
cmp
sbb
testl
pop
mov
mov
adc
xor
insl
sbb
lcall
aaa
loope
mov
push
and
add
lods
sahf
xor
ds
in
stos
push
orl
push
jne
lcall
decl
rol
mov
push
xchg
outsb
inc
jmp
je
jbe
popf
imul
sahf
test
or
cld
rol
mov
subl
mov
mov
xor
mov
imul
and
lahf
sbb
scas
scas
jo
or
data16
scas
leave
scas
adc
xlat
shlb
movsb
sub
cmp
nop
xchg
cltd
cmp
shr
inc
jg
scas
dec
jb
fcmove
jmp
add
frstor
lahf
or
pop
call
inc
mov
xor
pop
sbb
mov
loop
aad
xchg
mov
mulb
lods
xor
push
sahf
cmp
aas
sub
nop
loop
aas
mov
mov
or
mov
jl
scas
scas
outsl
ss
pusha
dec
loope
push
jl
loop
frndint
cmp
inc
in
int3
or
mov
cld
mov
xor
sub
inc
ja
in
leave
xchg
inc
cld
lea
push
inc
jg
cmp
jge
mov
movsl
call
push
ret
cwtl
lret
push
jmp
add
push
lock
xchg
xchg
pop
mov
test
stos
nop
stc
jmp
cltd
rorl
fildll
add
lcall
fsubs
lahf
xor
pop
mov
addr16
cld
fs
cmp
sub
loopne
inc
rorl
popf
xorb
push
cmp
pop
sub
daa
inc
bound
cwtl
xlat
in
clc
ja
dec
aaa
push
in
dec
push
or
andb
sbb
sbb
adc
push
stos
fimull
adc
outsl
stos
insl
push
btcl
aas
mov
or
adc
or
adc
adc
lret
aad
mov
cmpsl
push
bound
ss
fstpl
push
mov
mov
enter
xlat
or
pop
test
popa
lock
shll
or
lahf
and
pushf
daa
ds
mov
xchg
cmp
mov
lret
and
imul
hlt
jg
xchg
in
fdivs
cs
jmp
dec
leave
add
insb
mov
jp
jp
cmp
sub
lods
jmp
pop
aam
add
mov
ret
lds
jl
push
or
sti
sub
push
ret
xor
test
sbb
outsb
aad
int3
mov
call
push
data16
je
push
and
movsl
scas
push
or
xor
mov
cmp
shl
push
fisubl
push
ret
das
xchg
xorl
pop
fwait
ret
push
ljmp
out
mov
cmp
or
inc
rorl
add
inc
cmp
mov
push
mov
push
sbb
ljmp
mov
out
lcall
pop
or
mov
out
repnz
outsl
decl
clc
jge
stos
pop
add
mov
inc
cs
not
dec
xor
mov
shll
cmpsb
mov
movsb
sub
pop
sub
fmull
loop
pop
adc
push
pushf
push
push
mov
loopne
or
jl
jecxz
and
je
int3
xchg
dec
pop
sub
stc
dec
jno
cmp
dec
bound
lahf
rol
sub
pop
pop
mov
aad
rorl
pop
repnz
sbb
shrl
clc
xchg
sub
test
ljmp
scas
aam
xorl
test
xchg
arpl
adc
mov
mov
jb
ret
aas
sbb
mul
inc
dec
fwait
cmp
sub
xchg
mov
jnp
repnz
lret
push
mov
adc
dec
lock
mov
loopne
out
xor
adc
xchg
jmp
decb
xor
or
cmp
test
add
popl
mov
or
xchg
sbb
push
inc
das
pop
stos
push
sbb
test
mov
mov
add
jbe
cvttps2pi
add
sbb
ret
insb
lret
aam
jmp
dec
xor
or
rorb
xor
push
scas
loop
or
mov
je
pop
xchg
ljmp
xor
jg
sub
inc
cmp
pop
dec
fs
push
fsubrs
lods
pop
out
jb
mov
rcl
cmc
xchg
adc
sbb
sub
mov
incl
dec
mov
sbb
pop
jbe
daa
and
idivb
and
mov
test
xchg
ss
push
js
sarb
cmc
mov
jns
mov
cmpb
push
mov
fdivrs
inc
inc
insb
jno
pop
pop
push
cmp
mov
xchg
push
xor
jb
nop
push
jmp
pop
out
pusha
in
fbstp
jns
jge
inc
dec
push
repz
jecxz
movsb
cs
test
test
mov
or
xchg
lods
cmp
mov
stos
js
jo
mov
jns
add
jg
jbe
dec
lods
into
andl
imulb
das
mov
sub
movsb
incl
add
sub
sbb
cwtl
out
ljmp
testb
add
ja
or
rcll
repnz
ficomps
cmp
dec
and
movsl
cmp
scas
xchg
push
push
js
pusha
pop
jle
xor
fs
mov
loope
mov
stc
sbb
jp
mov
out
clc
mov
mov
jo
pop
jmp
scas
sarl
push
sbb
cmp
or
pop
pop
loopne
push
push
jb
cltd
jmp
or
mov
ljmp
adc
cwtl
sub
fidivs
hlt
mov
and
pop
mov
push
add
mov
das
ja
jne
push
ljmp
mov
push
xor
dec
or
fdivs
pop
stos
xor
sub
loopne
adc
jno
iret
dec
je
cli
shl
xlat
lds
or
ficoms
lods
movsb
adc
sbb
insb
dec
push
in
ds
jmp
test
in
ret
ss
imulb
mov
aam
sbb
outsb
sbb
jge
cwtl
mov
xchg
and
xchg
movsl
cmp
cli
roll
ds
rcrb
inc
add
cs
xor
add
mov
push
mov
and
or
push
out
call
repnz
enter
or
sub
sbb
cwtl
pop
xor
push
fcoml
popl
pushf
pop
pop
insl
jo
push
jno
and
mov
mov
mov
and
add
clc
dec
pop
inc
lret
icebp
scas
cltd
aad
ss
iret
jmp
js
add
and
fucomi
test
push
xchg
daa
cmp
xchg
push
movsl
jg
cld
int
lds
xchg
fimull
sbb
jmp
jne
add
mov
mov
mov
nop
jo
les
push
mov
xchg
fwait
xor
or
cmpsb
mull
mov
loop
push
mov
adc
lcall
mov
movsb
outsl
add
fwait
push
add
js
add
js
lock
sub
cltd
xchg
scas
mov
sbb
mov
xchg
adc
sbb
mov
sarb
nop
fidivrs
adc
out
ds
sahf
cmp
stos
adc
int
mov
xor
es
mov
sar
lcall
sti
movsb
push
add
push
sub
nop
jb
test
pop
cmpl
adc
mov
dec
imul
leave
dec
loope
or
les
jecxz
xor
repz
inc
add
mov
cmp
inc
sbb
inc
repnz
inc
and
cmc
mov
sbb
imul
push
xor
lret
mov
fisubs
rorb
icebp
mov
test
push
inc
xlat
add
mov
ja
jo
mov
pop
add
mov
in
pop
sbb
repz
push
xor
scas
andl
sbb
sbb
je
mov
loope
out
fdivp
clc
jmp
mov
data16
sbb
dec
xchg
pop
pop
scas
sub
or
and
sbb
movsl
cmp
aaa
jo
pushf
or
xchg
decl
xchg
mov
xor
push
enter
cmpsb
sbb
lock
sub
stos
sbb
call
pop
push
fstl
scas
sbb
mov
push
andb
int
mov
push
std
pop
cmp
xorb
inc
pop
adc
push
xor
and
fildl
cmp
and
jl
loopne
rclb
mov
mov
adc
add
jge
xorl
inc
enter
push
cmpsb
jmp
stc
add
data16
mov
mov
cmp
out
sbb
insl
cmp
mov
mov
mov
andl
and
ret
roll
mov
dec
mov
popf
mov
mov
inc
jae
inc
mov
out
push
in
out
or
es
jmp
and
std
push
lds
jb
out
mov
call
int
jo
pop
cmp
xchg
test
ljmp
inc
insb
dec
fadd
inc
adc
jg
mov
int3
mov
cwtl
sub
mov
add
into
rorb
mov
adc
out
in
mov
jg
lock
sbb
ss
popa
dec
sub
mov
xchg
es
inc
out
arpl
push
loop
lods
orl
xchg
sbbl
jne
ss
inc
xor
xlat
rorl
jl
push
loopne
xchg
lret
sbbb
cmp
rolb
mov
pop
jnp
cs
mov
jecxz
push
mov
lds
pop
fwait
mov
andl
sbb
dec
push
enter
lds
jmp
inc
icebp
rcl
and
or
lods
cmpsl
lret
push
sbb
pop
xchg
pop
pop
mov
enter
pop
and
data16
push
jb
ret
imul
sbb
xor
inc
or
xchg
xchg
cmc
mov
pop
cmp
lds
lods
or
cld
mov
and
in
dec
dec
mov
sbb
fimull
pop
add
jo
add
test
in
movsb
test
jle
cmp
sahf
jae
ret
inc
movsb
sahf
test
or
jbe
negl
or
or
add
push
add
inc
rcr
and
jp
sbb
and
cld
test
pop
imul
sub
jmp
popa
add
mov
rorb
inc
add
jo
jb
xor
insl
sub
or
mov
and
cmp
xor
mov
aad
insb
inc
dec
sbb
push
cmp
icebp
scas
and
mov
pop
xchg
ss
jge
jecxz
mov
pop
adc
outsb
je
fidivrl
jns
xchg
add
loop
repz
cmp
pop
or
cmp
iret
add
jmp
add
pop
das
popa
int3
adc
icebp
scas
mov
mov
push
push
dec
fcmove
add
add
cwtl
pop
mov
inc
adc
cli
and
sub
movsl
xchg
lea
lock
inc
mov
mov
in
repnz
ljmp
rorb
sub
clc
test
stos
ret
and
dec
mov
subb
or
mov
push
movsl
fwait
sbb
sbb
jg
push
pop
sub
sbb
mov
aas
int
inc
sbb
jns
xor
lea
and
lock
sub
daa
adc
lcall
call
incl
loop
ljmp
test
fsub
jmp
xchg
dec
lds
cmpl
ret
jnp
stos
push
mov
es
mov
cltd
add
or
jle
mov
repnz
push
dec
int
cld
les
xchg
outsb
daa
popa
ljmp
mov
movb
repz
xchg
jmp
push
cli
loope
pop
sub
dec
cld
sub
xchg
adc
pop
jo
push
movsl
ss
jge
jnp
xchg
aas
mov
or
scas
ljmp
add
jb
cmp
xor
pop
mov
testb
dec
pushf
insb
cmp
popf
dec
je
and
xor
sub
push
fst
mov
je
sbbb
insl
cmpb
ss
pop
inc
sub
add
or
mov
mov
push
clc
addb
ret
ret
xor
cld
xlat
les
mov
test
mov
or
adc
mov
mov
pushf
scas
hlt
inc
pop
fadd
ss
push
insl
fiaddl
divb
movsb
mov
sub
int
cmp
pusha
insb
jb
bound
or
call
scas
pop
aam
xchg
fwait
lahf
xor
add
stos
inc
push
xchg
ror
xchg
ljmp
inc
jp
lock
shlb
push
sarl
jmp
mov
jno
lds
daa
or
addr16
mov
add
lret
lods
sbb
les
mov
add
xor
shll
adc
xlat
pop
mov
jo
insb
push
fwait
dec
sbb
mov
int
sub
test
loope
push
add
mov
xchg
cmc
pop
jle
add
sub
inc
loope
mov
mov
inc
inc
shlb
sbb
orl
movsb
mov
lcall
cli
shl
je
cmp
ret
sub
fdivr
decl
das
shlb
out
inc
add
sub
push
cmp
mov
jbe,pn
or
ret
std
mov
pop
push
and
xchg
pop
das
and
add
or
pop
cwtl
daa
xorl
sbb
inc
scas
dec
xor
jbe
dec
dec
add
pop
xlat
int
sarb
mov
or
je
pop
add
repnz
add
mov
mov
adc
call
mov
scas
lcall
insb
push
aam
movl
mov
std
pop
dec
jmp
dec
push
ret
cmc
push
jecxz
add
repnz
pusha
jno
shlb
mov
ss
pop
jo
ficoms
ss
pop
sub
js
add
mov
les
test
cltd
xor
adc
mov
sbb
cmpsl
pop
std
imul
sub
mov
sbb
sub
ja
loop
sbb
js
sbb
rcll
mov
test
sub
dec
jg
int3
jmp
xchg
add
xchg
mov
ret
stos
insb
loop
aad
push
outsb
inc
bound
ljmp
movsb
mov
leave
aad
adc
xor
aaa
and
and
and
xlat
testb
mov
cmp
fisubrl
bound
adc
inc
add
push
int3
xorl
movl
mov
shrl
or
sti
rcrb
int3
enter
mov
ds
scas
sub
jne
in
xchg
lock
sbb
or
dec
push
inc
filds
mov
or
and
rclb
adc
pop
dec
mov
jle
ja
push
test
mov
jecxz
push
lock
mov
xor
push
add
int
pusha
adc
cmp
jb
cwtl
or
sbb
mov
dec
adc
push
inc
shl
loop
jl
stos
xor
repz
dec
and
adc
pop
dec
sbb
outsb
xchg
in
test
gs
cmp
nop
enter
add
dec
dec
dec
inc
pop
scas
mov
xchg
pusha
xchg
push
lahf
sub
dec
repnz
call
sub
leave
mov
ret
add
pop
rclb
mov
stc
cbtw
sbb
mov
test
cs
cmp
and
roll
or
cmp
cmpsb
insl
mov
insb
pop
loope
xchg
clc
ds
add
dec
pop
xor
cmp
mov
or
int3
sbb
mov
cld
cvtpi2ps
in
mov
mov
adc
hlt
xorl
daa
sbb
aas
jp
pop
mov
mov
mov
clc
loopne
fstp
sub
movsl
mov
clc
mov
stc
int
insb
pop
pop
filds
jo
cmp
and
pop
arpl
xor
insb
std
mov
rolb
or
ret
xor
stc
xor
mov
add
arpl
lcall
inc
push
mov
addb
sub
std
aad
xor
fwait
dec
cmc
gs
cmp
pop
push
imul
xchg
cmp
xchg
ret
dec
sbb
pop
pop
jl
push
mov
test
hlt
mov
clc
roll
outsb
adc
pop
mov
leave
cmp
subps
mov
mov
pop
in
dec
aas
add
cld
inc
add
test
xor
rolb
je
pusha
cltd
adc
xchg
mov
test
sbb
mov
fcom
add
out
ret
dec
push
mov
lret
fisubl
sbb
test
ja
loop
scas
push
pop
mov
and
or
push
sahf
xor
adc
sub
lret
rolb
sahf
push
xor
sub
jne
cmp
insb
mov
jbe
jbe
fmuls
push
and
fdivrp
xchg
fdivrp
adc
loopne
sub
and
mov
or
mov
imul
cli
mov
and
ret
add
mov
cmp
or
inc
push
jp
mov
rcrl
fisubrl
push
fmuls
out
insl
ret
out
movsl
rolb
xor
ja
add
sahf
jns
sub
lea
jl
xor
dec
xchg
jle
mov
or
mov
enter
rcrb
in
add
pop
add
rcrl
xor
push
movsb
mov
xor
hlt
mov
jae
fdivrl
push
addb
pop
stos
sbb
loope
mov
pop
cmc
and
test
mov
sahf
jbe
outsl
add
inc
mov
add
divl
mov
sbb
or
mov
pop
jmp
push
js
push
lods
ret
xor
bound
pop
dec
inc
xchg
or
mov
sub
leave
pop
mov
sub
mov
push
jnp
add
inc
pop
cmp
push
dec
fsub
and
repz
insl
add
sbb
mov
shlb
push
imul
add
pop
pusha
mov
lock
sub
in
ja
clts
inc
or
cmp
cmpsl
pop
cli
push
or
icebp
cmp
mov
fidivl
push
mov
int3
inc
aaa
in
test
movsl
or
xchg
jp
subb
fxch
jae
test
sbb
cmp
add
fcmovbe
shlb
sbb
xchg
xchg
nop
in
inc
sub
and
push
dec
fldl
adc
rep
andl
test
adc
in
bound
inc
cmpsl
je
fucomi
test
inc
sbb
test
fucomp
xor
push
and
idivl
cmpl
out
js
pushf
jo
aas
inc
sbb
ljmp
jae
jp
jnp
repnz
cs
fs
inc
and
aam
movsb
xchg
dec
ret
push
fisubl
and
add
dec
mov
add
lcall
and
cmp
pop
cmpsl
adc
scas
sub
pop
or
or
fstl
lods
jecxz
insb
ja
daa
mov
movsl
xlat
mov
xchg
add
filds
push
or
xor
add
push
sub
xor
sbbb
mov
in
mov
and
inc
jecxz
cmp
mov
ds
mov
pop
sub
add
lcall
shr
aam
push
xchg
adc
rolb
aas
mov
pop
xor
testl
inc
dec
rcrl
add
lock
add
sub
xchg
jg
xchg
push
popf
lcall
fidivl
push
fimull
fs
xor
loopne
cwtl
sub
pop
pushfw
mov
pop
sub
les
push
in
mov
inc
cltd
or
leave
and
mov
jns
add
jnp
fmull
sbb
cmp
nop
and
stc
push
popl
inc
push
or
pop
xor
dec
mov
hlt
add
cmp
sub
mov
cmc
sti
lock
ds
in
nop
out
mov
into
test
xor
jne
call
cmp
pop
lods
pop
minps
adc
xor
jb
scas
jmp
sub
outsb
dec
add
mov
xchg
jnp
mov
addl
xchg
fsubs
jecxz
add
lock
jae
cmp
jns
dec
dec
dec
in
sbb
loopne
and
adc
subb
xchg
or
cmp
test
mov
xchg
mov
daa
dec
enter
push
insl
cmp
pop
add
mov
aaa
push
inc
ja
call
lahf
push
into
xchg
inc
int
or
je
and
mov
or
inc
dec
test
push
sahf
out
arpl
adc
js
cmpsl
std
test
dec
xchg
inc
push
cs
into
and
shlb
sbb
add
and
cmp
inc
push
bnd
jns
jp,pn
add
test
sbb
xchg
add
iret
xchg
pop
das
shlb
jge
mov
lret
movsb
lods
test
testb
sbb
lock
cs
cwtl
ret
movsb
fwait
push
std
leave
mov
jge
addr16
mov
fists
and
cld
mov
iret
jne
sbb
mov
fnsave
stc
pusha
adc
lret
fldt
pop
or
mov
cmp
xchg
push
push
or
and
add
repz
dec
insb
adc
scas
loope
sub
test
lds
popa
push
cli
push
mov
lods
adc
das
jae
ss
sub
and
das
mov
xchg
xor
pop
jl
scas
push
outsb
sbb
fsub
hlt
loopne
call
mov
xlat
aaa
mov
imul
dec
jbe
in
adc
dec
movsb
add
test
mov
xchg
cs
adc
adc
add
loop
mov
rcrb
cmp
mov
outsl
xchg
dec
add
xor
mov
daa
ret
pop
dec
sbb
sahf
mov
jne
xorl
mov
and
sbbl
inc
inc
or
movsb
cwtl
push
pop
mov
mov
in
dec
out
dec
add
sub
jo
lods
adc
xor
lock
loop
sbb
jg
add
ret
mov
sbb
or
mov
sarl
push
add
insb
dec
outsl
dec
or
sub
dec
ret
lea
gs
ret
jo
jp
sbb
mov
arpl
test
jns
out
mov
dec
in
mov
sarl
add
les
sbb
aaa
pop
mov
xlat
sbb
into
mov
xor
dec
sti
push
call
inc
pop
sbbl
ror
sahf
and
data16
xchg
cmp
or
mov
add
je
test
loop
push
xchg
xor
adc
dec
orl
pop
dec
cmp
xor
add
jb
outsb
mov
mov
jecxz
dec
add
test
ud1
movl
shl
jmp
jns
ljmp
jbe
dec
test
or
cmp
mov
sbb
ret
ret
cli
ret
ds
ds
push
repz
loop
clc
outsl
ss
ljmp
cli
mov
pop
mov
add
push
in
sarl
orl
pusha
push
mov
nop
orl
jg
sub
inc
fdiv
jns
aam
hlt
imul
in
mov
out
sbb
and
ffreep
popl
xchg
fcom
addb
jle
xor
ja
or
ret
mov
dec
std
mov
jg
fmuls
xor
pop
pop
sahf
add
push
dec
cld
mov
icebp
rorl
ljmp
lret
or
jge
addb
aaa
dec
das
adc
test
cmp
fldcw
icebp
mov
mov
pop
loop
push
cmc
divl
dec
das
sbb
dec
ficoml
push
test
xlat
push
push
sahf
fcomps
ret
test
sbb
cmpsb
out
fst
dec
scas
push
sub
pop
cmp
push
or
mov
add
inc
push
push
jno
test
rcl
pop
xor
mov
add
fsubrs
mov
sti
cmp
js
hlt
call
cs
test
push
roll
pusha
in
mov
negl
loopne
scas
movsl
push
dec
pop
out
mov
jg
pusha
push
fsts
incb
fisttpll
cmp
or
rcrb
pusha
push
lods
je
or
imul
xchg
mov
mov
movsl
push
icebp
test
push
shlb
ja
idivl
shlb
pop
std
lret
addr16
and
test
inc
mov
dec
xor
rol
inc
xor
jnp
sahf
mov
cwtl
aaa
cld
loop
or
pusha
jmp
aaa
mov
pop
test
add
inc
sarl
cmc
ret
mov
inc
aam
call
clc
outsl
inc
xchg
in
out
pop
ljmp
mov
lcall
push
mov
xchg
pop
adc
xchg
mov
add
jmp
xor
push
sub
js
adcb
nop
pop
addr16
dec
or
jb
fcoms
cmc
jo
xchg
lods
push
push
jo
push
les
lret
insb
gs
sbb
mov
jge
or
adc
jmp
xchg
xor
ror
loope
push
add
add
xchg
fiadds
ficomps
cmp
fildl
adc
sub
adc
popa
and
lcall
mov
outsb
add
jnp
push
stos
or
pop
cmp
fld1
sub
sbb
adc
inc
mov
mov
or
icebp
xor
shrb
cmp
jmp
orb
jmp
rolb
and
or
fldcw
push
pop
adc
xchg
pop
pop
jp
cltd
jo
and
push
jp
fistps
je
in
bound
and
xchg
inc
repz
cmp
and
fwait
add
push
mov
mov
dec
ret
xor
testb
pop
inc
or
lret
mov
ficoms
out
xchg
cmp
pop
push
adc
out
scas
sub
xchg
incl
mov
add
jno
xor
jbe
lea
mov
hlt
arpl
insl
add
fildl
mov
push
dec
les
insb
dec
inc
je
repnz
sub
sub
jnp
stos
push
insb
jecxz
rcl
xchg
pop
cmp
sbb
fs
and
xor
xor
sbb
xsaves
cld
ret
or
or
insl
popf
jb
call
sbb
pop
ret
push
outsl
shrb
add
outsl
popa
pop
jle
pop
pop
sbb
cltd
and
rcrb
les
stos
cmpsl
xchg
mov
jl
out
xor
push
repz
add
sbb
sbb
hlt
icebp
jg
pop
pop
xchg
daa
out
pop
sahf
mov
mov
push
or
mov
loopne
pop
dec
jnp
and
or
inc
shrb
int3
adc
or
or
inc
xor
inc
add
sbb
adc
sti
aaa
js
mov
rol
jne
repnz
mov
pop
out
iret
gs
notb
sub
mov
movsb
out
jae
aas
fdiv
push
jb
fldenv
in
adc
dec
dec
pop
push
insb
sub
in
add
xchg
js
xchg
out
das
mov
add
test
pushf
call
adc
sbb
cmpsb
shll
ret
add
dec
or
mov
nop
pushf
jmp
xchg
push
sbb
cmp
mov
sub
sub
jle
fsubr
add
bound
andl
lret
outsb
add
test
xorb
add
mov
repz
fcom
pusha
add
mov
test
pop
jg
inc
cmp
pop
or
xchg
mov
and
mov
or
mov
or
stos
addb
mov
inc
je
sub
fwait
cli
subb
jns
jmp
adc
repnz
cmp
into
clc
jo
cmp
jae
pushl
ret
sbb
pushf
xor
daa
mov
test
aaa
mov
jg
push
jmp
xor
lret
sbb
cmp
xlat
mov
hlt
adc
sub
add
cmc
sbb
sbb
jp
loopne
xchg
add
bound
push
mov
and
push
inc
ret
int
fcomip
add
gs
in
pop
mov
jno
cmpsl
ja
add
popl
add
fiaddl
adc
test
mov
sbb
sbb
test
add
xchg
das
adc
push
inc
hlt
cli
aaa
sbb
push
adc
mov
int
xor
mov
data16
xchg
dec
movsb
pop
into
add
inc
mov
sub
jo
xchg
dec
xchg
xlat
jo
mov
aas
repnz
push
sub
lcall
gs
add
add
jb
pop
rorl
shlb
mov
jne
aas
ljmp
push
test
push
stc
cli
call
jle
cld
popf
nop
inc
aas
les
icebp
pusha
dec
clc
icebp
or
sbb
pop
jo
xchg
pop
cmp
loopne
and
fndisi(8087
xor
push
cltd
lret
fildll
mov
dec
mov
fwait
in
inc
in
adc
subb
sbb
mov
ret
mov
pop
lret
sub
jle
or
iret
jl
in
popa
sub
jg
inc
aam
and
xchg
or
js
pop
pusha
fistpll
push
adc
cld
and
out
push
popa
dec
mov
shlb
mov
fdivrl
cltd
adc
les
sahf
and
xor
push
cmp
mov
into
sbb
cmp
mov
pop
movsl
bound
aaa
dec
adc
hlt
add
rcrl
outsb
loop
repnz
mov
adc
jo
mov
iret
pop
push
push
insl
add
add
mov
sti
imul
dec
add
dec
xchg
add
sbb
push
mov
push
push
std
sbb
es
test
ljmp
xlat
inc
pop
and
sub
divb
into
inc
mov
sub
push
mov
hlt
cmpb
loope
jb
or
loope
and
inc
adc
cmp
call
leave
mov
rcl
jne
syscall
cli
rol
adc
mov
pop
push
push
add
jbe
add
out
iret
and
sbb
add
jbe
dec
or
movsb
jg
mov
stos
sub
insl
sbb
sub
addb
jb
mov
adc
lods
in
insb
pop
test
jecxz
push
push
push
test
mov
dec
mov
fcompl
and
pusha
data16
fcomps
and
jle
add
mov
mov
mov
xlat
ljmp
push
cld
pop
in
in
xchg
mov
and
loop
les
fsubrs
add
cmp
incl
xor
loope
or
jb
mov
test
imul
xchg
xlat
ss
outsl
push
stos
mov
pop
nop
mov
lcall
add
or
inc
scas
loop
push
inc
fildll
loope
int3
mov
pop
movswl
adc
add
loope
pop
lock
pop
push
test
pop
adc
cwtl
movsb
xchg
cmp
or
adc
add
outsb
xchg
test
in
dec
scas
mov
imulb
adc
inc
mov
add
jno
or
test
dec
jmp
or
adc
pop
clc
les
jne
hlt
dec
jnp
add
inc
add
add
pop
mov
pop
ret
mov
into
and
inc
sub
outsb
cld
jmp
mov
scas
std
je
push
jbe
pushf
dec
std
xorb
xchg
mov
lea
addr16
ror
jecxz
ja
dec
xchg
lock
jnp
mov
cwtl
and
xchg
lret
dec
xchg
mov
outsb
nop
ja
scas
mov
cli
push
xorl
push
test
mov
sub
pop
mov
popa
push
in
add
mov
enter
inc
or
xchg
bound
mov
mov
xor
std
mov
mov
inc
aaa
not
movsl
xchg
adc
push
pop
je
insl
jl
add
or
pop
dec
out
outsl
ret
mov
dec
mov
xchg
addl
xchg
xchg
add
mov
test
les
inc
popa
add
cmp
mov
jg
mov
aam
lret
push
ret
loop
cmp
ds
lock
les
inc
cmpsl
pop
les
jg
xor
jmp
cmpsl
shlb
xchg
add
adc
add
xor
add
or
xchg
fnstsw
out
jbe
xorb
in
ss
sub
sbbb
inc
push
sbb
sbb
add
cs
mov
lods
and
xor
jle
divb
idiv
or
mov
jne
mov
cmp
push
add
sarb
mov
push
sub
mov
loopne
loopne
lea
dec
inc
jo
mov
sbbb
cmp
enter
and
add
jle
xchg
push
xor
jns
jg
push
dec
mov
xchg
rolb
mov
sbb
cld
jp
cmc
or
es
fcomps
push
xor
out
xorl
out
or
ret
insb
outsb
test
push
xor
ljmp
dec
dec
inc
out
mov
add
ret
lcall
ja
mov
xchg
and
or
jnp
ja
nop
dec
or
xchg
xchg
gs
xchg
stos
std
xlat
addr16
inc
out
pushf
push
fidivrs
cmp
mov
daa
sbb
dec
fildl
pop
jmp
call
in
subb
jle
dec
jle
mov
adcb
add
add
fnstenv
or
push
mov
ret
and
ud2
dec
inc
mov
jp
rol
push
xor
shll
pop
shufps
jb
and
mov
test
mov
out
inc
or
jae
sub
and
nop
decb
test
mov
jecxz
into
mov
call
ds
clc
cwtl
sbb
iret
mov
cmp
dec
jo
pushf
add
lds
dec
aam
cmc
pop
xor
mov
pop
push
enter
subb
cli
aaa
mov
inc
lahf
push
mov
mov
imul
pop
hlt
pop
adc
sub
pop
and
xchg
popa
dec
stos
ret
cmp
js
ljmp
mov
xor
inc
mov
lcall
sbb
and
inc
sub
or
sbb
xchg
add
subl
int
cmp
dec
and
ret
pop
pop
incb
cmp
jns
mov
clc
xorb
mov
jne
repnz
stos
js
xlat
shrb
xor
sti
sbb
scas
push
sbb
pop
pushf
lds
cmpsl
pop
ret
je
lods
or
fs
sbb
add
shlb
mov
aad
clc
adc
fs
jl
pop
lcall
popa
iret
push
jmp
stos
and
mov
xor
jecxz
test
add
mov
nop
mov
pop
xchg
push
lods
xchg
push
xchg
sbb
ds
rcl
adc
jge
lahf
pop
mov
es
jno
loope
adc
sahf
or
mov
xor
mov
pop
mov
xorb
push
ret
push
cmp
jno
add
sarl
outsl
or
shll
sub
mov
add
in
jbe
sbb
sbb
push
addl
mov
div
shlb
jmp
outsl
lcall
pop
lods
inc
aaa
imul
and
mov
movsb
mov
xor
mov
adc
sub
adcb
jl
sub
jne
hlt
dec
pushf
pop
mov
test
cmp
loop
inc
ficoml
addl
cli
loop
xor
sahf
and
push
sbb
sbb
inc
roll
sbb
test
jge
int3
lock
test
out
add
rcll
jnp
cmpsl
xor
and
pusha
or
mov
push
jg
mov
or
xor
inc
sub
adc
xchg
repnz
xor
mov
xor
or
fs
xchg
fisttpl
jmp
aas
pushl
lcall
xor
and
loope
sti
jl,pn
mov
shlb
ljmp
insl
jnp
jmp
aas
pop
add
in
ret
sub
push
movsl
out
cmp
das
cwtl
adc
inc
adc
xchg
mov
sbb
sub
ljmp
mov
jmp
sbb
and
inc
test
pop
pop
mov
ljmp
mov
push
bound
stos
aam
jecxz
sbbb
or
cmp
int3
fwait
lcall
repz
das
pop
mov
or
adc
out
xchg
jmp
out
jp
fisubs
add
pop
cmc
pusha
mov
add
ficoml
test
add
aas
jle
jmp
mov
xchg
pop
inc
test
or
jno
cmpsl
jmp
fisttpll
jmp
or
movsb
pop
popa
jne
inc
orb
and
xor
cmp
xor
or
inc
push
cmc
test
jge
dec
push
jp
mov
sub
cmp
faddl
pop
cmp
push
aam
cld
stc
sbb
insb
int3
cmp
cmpsl
push
sub
pusha
ds
inc
aaa
lods
popf
xchg
pop
fiadds
cmpsb
and
mov
xchg
jle
test
jmp
and
mov
ret
sbb
outsl
xor
adc
or
mov
les
and
adc
xchg
fisttpll
jno
js
xchg
jno
and
or
movsb
loope
ret
xor
js
imul
push
jo
movsb
fiadds
mov
je
inc
out
sbb
inc
insl
outsb
jae
xor
add
mov
aad
faddl
add
ja
dec
sahf
orl
andb
adc
movsb
nop
jne
test
sub
outsb
adc
in
jo
enter
push
dec
xor
cmp
push
in
hlt
leave
je
jmp
ljmp
cmp
cmc
pop
add
data16
jb
fisubrl
ficoml
into
mov
or
lret
mov
cmpl
nop
dec
cld
push
movsl
add
and
dec
call
mov
cmp
dec
mov
stos
loopne
outsb
inc
sbb
push
std
jle
dec
adc
mov
rorb
decl
mov
cmpsb
hlt
adc
lcall
cli
loop
xchg
mov
and
cmp
vmwrite
inc
add
sub
push
pop
cmp
xchg
inc
jg
xchg
nop
cmp
or
lods
add
mov
mov
sub
lcall
push
pop
in
xor
rorl
nop
mov
rclb
insb
cmp
mov
pop
jmp
push
push
in
in
mov
jbe
fsubs
xchg
mov
bndldx
add
jmp
mov
mov
cwtl
lods
add
daa
outsl
dec
mov
xlat
rcrb
add
xlat
fiaddl
stos
ret
lret
inc
adc
xor
fcompl
js
outsl
jno
les
or
inc
jo
nop
fs
adc
dec
lods
pusha
adc
inc
push
adc
ret
aam
xchg
ja
cld
mov
jle
xor
jmp
lsl
mov
andl
inc
dec
and
aam
xchg
adc
mov
mov
in
sbb
fimull
pop
xlat
and
push
es
fcomps
pop
out
jbe
ficompl
js
push
aaa
jecxz
cld
cmp
xchg
xchg
jns
jmp
lods
fbld
jle,pn
or
mov
stos
mov
pusha
shrb
inc
ljmp
pop
add
lea
fwait
aad
fidivl
sub
mov
clc
add
fimull
and
sbb
test
cltd
ficompl
lock
clc
sahf
pop
mov
dec
jo
push
insl
cmc
notl
andb
out
mov
and
or
dec
dec
pop
push
xor
inc
lods
jbe
jmp
and
fimuls
gs
mov
cli
xchg
and
call
lods
add
and
push
fsub
push
leave
push
dec
add
lret
test
adc
sub
and
dec
loopne
mov
insb
ret
dec
mov
and
mov
shrb
cmp
pop
add
cmp
jbe
dec
ljmp
push
call
add
pop
push
jl
mov
mov
mov
inc
sbb
cltd
push
outsb
call
xorb
cmp
in
and
add
dec
sbb
fists
fstpt
mov
fs
loope
add
dec
add
xchg
xor
xchg
xchg
cmc
jecxz
ja
push
adc
sahf
rcll
cmp
jle
pop
pusha
cs
cltd
sti
iret
mov
adc
or
and
pop
jp
mov
movsl
mov
sahf
mov
inc
cwtl
repnz
push
rcll
jmp
add
push
mov
fildll
pop
mov
jno
aam
ljmp
scas
mov
push
adc
bound
cmp
movsl
xor
fs
mov
xor
sbb
pushf
and
insl
jb
add
mov
addb
cld
ret
fistpl
xlat
push
ja
xchg
push
inc
les
xchg
bound
cmp
fdivl
mov
mov
adc
data16
fstps
cld
or
and
push
sbb
adc
sarl
enter
xchg
push
add
adc
inc
adc
addb
inc
mov
add
mov
rol
jno
decl
repnz
lods
cmpsb
xchg
jmp
stc
outsl
sub
mov
aas
sbb
out
fs
pop
pusha
xor
dec
pushf
ds
sub
pop
pop
mov
fildl
stos
adc
es
and
aaa
das
pop
icebp
mov
mov
mov
nop
unpckhps
jecxz
pop
out
fistpll
push
and
inc
cld
loop
push
mov
inc
in
jp
sub
shrl
pop
or
xor
or
lock
push
inc
push
sbb
loope
stos
sub
sar
dec
pop
in
jecxz
xorl
and
and
in
sbb
xor
mov
push
jb
andb
add
pop
loope
inc
rolb
insl
icebp
jmp
adc
sub
add
add
mov
addl
or
ss
cli
bound
mov
mov
lcall
std
xchg
jle
and
lods
pop
adc
pop
mov
sahf
mov
adc
test
mov
nop
inc
push
sarl
sahf
mov
test
or
sub
ljmp
and
xchg
dec
add
sub
jmp
arpl
aaa
mov
jl
sahf
push
pop
les
mov
jmp
or
adc
nop
sti
test
sub
lods
push
hlt
push
or
sbb
and
xor
xor
scas
jle
or
mov
je
cmp
jno
lock
cli
inc
cmp
jno
scas
adc
or
test
test
cmp
xlat
xorl
fdiv
lock
addb
push
push
push
scas
rcr
xor
xor
loopne
jnp
es
push
sub
add
loope
cs
aas
push
loopne
mov
mov
subb
adc
je
cmp
in
sub
add
fwait
outsl
cli
push
or
inc
outsb
pop
add
inc
cli
and
pop
and
jecxz
les
je
jb
sub
iret
xchg
or
add
test
fs
adc
add
push
rol
inc
mov
mov
add
repnz
xor
dec
or
mov
push
arpl
cmp
fsubrs
call
mov
adc
mov
jmp
rclb
sbb
loope
xor
push
rol
outsl
push
add
cmpsb
stos
lock
loopne
push
into
push
rcrl
cmp
lcall
int
lahf
cmp
pop
jb
repz
jecxz
insb
add
and
xchg
jmp
adc
dec
sub
insb
xchg
fsubl
or
pop
jbe
push
das
xchg
mov
stos
hlt
push
daa
lea
add
and
or
mov
in
add
ljmp
adc
mov
cmp
add
fsub
mov
xchg
test
add
sbb
int3
enter
scas
xchg
dec
mov
hlt
mov
cmp
js
shll
or
xchg
sbb
inc
xlat
arpl
push
mov
cmp
sub
test
mov
movsb
mov
mov
loope
cwtl
lcall
pop
xlat
pop
aam
dec
pop
shlb
or
fbstp
jo
or
sbb
lcall
cli
dec
jg
and
hlt
addr16
arpl
popf
fistpl
cmpsb
jmp
jne
cmp
sbbb
pop
aad
sbb
bnd
add
sub
cli
les
xchg
dec
ret
repz
lcall
mov
lret
xor
xor
sbb
pop
adc
pop
or
xor
mov
push
repnz
push
add
dec
push
lahf
dec
dec
fdivr
movsb
popa
xchg
std
loopne
add
xor
mov
sub
aam
shlb
mov
outsl
das
or
inc
daa
fstpl
push
ret
pop
jbe
mov
cmpb
cli
fldenv
popf
xchg
outsb
cmp
hlt
aam
call
lcall
out
loopne
pusha
add
push
xchg
lods
cli
mov
lret
sub
addl
adc
mov
xchg
ficomps
cli
jp
jbe
mov
ljmp
cmpsl
adc
arpl
cmc
xor
lcall
sarb
cs
int
cltd
xchg
fbld
push
mov
inc
je
sbb
jbe
int
pop
cmpb
mov
xor
clc
adc
repnz
es
add
push
xchg
mov
data16
mov
xchg
aad
lcall
and
add
xor
push
sub
mov
jb,pt
aad
mov
dec
shlb
lret
scas
ret
movl
ret
bndldx
push
shrb
notb
sbb
fisttpll
push
cmp
stc
sbb
push
scas
sbb
icebp
out
jge
orb
inc
mov
aaa
test
inc
je
mov
adc
outsl
pop
lcall
js
sub
test
mov
jl,pt
lcall
movsl
ficoml
jno
int3
test
push
sub
jle
pushf
enter
mov
mov
loope
jecxz
mov
testb
xor
adc
xlat
mov
cmp
dec
mov
fisubrl
xor
push
ror
mov
or
push
cmp
ret
pushf
fstpt
inc
sub
add
mov
or
in
jle
fsubrs
cld
repz
stc
out
into
sahf
call
adcb
rcrl
rol
xchg
xor
sbb
push
pop
jp
sbb
inc
adc
jecxz
jno
and
vmread
loop
cmp
push
and
repz
out
inc
inc
inc
movsb
sahf
incl
jg
pop
pop
fs
xchg
ljmp
loopne
in
inc
hlt
lock
or
or
push
out
xchg
adc
jmp
adc
insb
jge
mov
cs
mov
clc
mov
popl
dec
sbb
test
idiv
stos
and
add
jecxz
cltd
push
fildl
lret
ret
push
test
jb
adc
decl
cmp
dec
or
cld
loop
popl
pop
dec
add
or
icebp
push
sbb
in
loop
lock
stc
rorb
cmp
jecxz
sub
sbb
mov
xchg
out
push
push
jns
push
add
aas
dec
lea
and
rclb
mov
jae
cmp
cli
or
mov
ret
adc
das
pop
jle
add
jp
add
and
xor
jae
pop
lahf
mov
mov
loop
xchg
jnp
and
mov
mov
sub
or
inc
or
xchg
dec
add
push
mov
and
push
aad
and
adc
lahf
aam
adcb
sub
or
and
pop
cmc
and
jmp
rolb
push
jns
adc
test
pop
scas
and
push
push
fcoml
call
lods
cli
xchg
or
mov
xor
mov
dec
dec
pop
fsubp
pop
fcoml
pushf
sbb
imul
hlt
mov
outsw
fisubs
mov
movsl
cmp
popa
insb
in
ja
cmp
sub
mov
out
bound
sar
push
je
cmp
push
jg
negl
or
and
xchg
mov
dec
sarb
sarb
je
adc
paddb
in
adc
inc
adc
scas
jle
add
and
pop
mov
sbb
sbb
xor
mov
or
push
push
fsubr
rorl
fdivs
sub
in
lcall
mov
iret
sub
pusha
push
jbe
roll
pop
adc
sbbl
mov
cmp
clc
adc
clc
mov
or
scas
push
cmp
mov
xor
inc
dec
scas
gs
push
lahf
aaa
cmp
les
mov
xchg
js
add
add
pop
call
testb
jne
jle
mov
ret
mov
ret
cli
cmp
es
cs
push
insb
jmp
lcall
sti
add
cmpsl
inc
jp
mov
inc
pop
inc
outsb
clc
cmp
ja
pop
bound
dec
mov
xchg
sbb
mov
push
adc
add
sbb
cmp
cmp
mov
shrl
sbb
jo
mov
fcmovnbe
daa
test
mov
add
or
loopne
pushf
adc
dec
jmp
ljmpw
cld
or
inc
clc
and
mov
std
or
in
sar
call
es
lea
fcomip
adc
xchg
rol
mov
dec
std
repz
data16
add
push
xchg
aas
mov
aas
movsb
mov
es
mov
rcll
and
jno
shrb
je
cmpsb
std
sti
dec
stc
mov
mov
dec
std
es
add
rcrl
orb
push
push
push
mov
filds
xchg
and
and
cmp
inc
sub
jmp
clc
or
out
fidivs
xor
push
fmulp
sbb
push
push
roll
lock
inc
inc
add
je
xor
out
adc
inc
clc
out
loop
or
loope
adc
cmp
ljmp
push
jno
xchg
sub
mov
cmpb
jo
or
movsb
scas
data16
cltd
jmp
mov
addr16
repz
xchg
lahf
notb
jae
pop
in
out
adc
jecxz
pop
shll
lock
adc
xchg
mov
or
ljmpw
pop
add
jno
sbb
roll
or
or
jl
mov
pushf
adc
cwtl
xor
xlat
in
inc
pop
jo
sti
test
mov
xor
jge
mov
lea
clc
call
add
cwtl
jno
sbb
push
push
shl
into
mov
stos
sti
pop
pop
jg
in
push
xor
out
ljmp
adc
sub
pop
loopne
inc
filds
test
adc
jo
mov
jmp
lods
or
inc
test
das
sbb
fwait
lods
xor
ja
sti
out
add
push
mov
repz
pop
popf
jl
push
setae
pop
pop
outsb
pop
jo
jge
jb
mov
cld
cwtl
inc
fbstp
xchg
pop
push
jmp
xor
sbb
dec
lods
stc
adc
out
mov
sbb
and
cmp
mov
cwtl
pop
pop
cld
xlat
or
push
push
orb
aam
mov
nop
pop
rcll
cs
push
dec
dec
xor
scas
push
scas
inc
movl
mov
adc
inc
shl
pop
push
dec
pop
xor
xor
and
insl
jge
in
fidivs
xchg
dec
call
mov
or
shlb
sbb
xchg
push
shlb
jg
mov
cmp
stc
pop
mov
inc
mov
in
xchg
pop
test
sarl
into
sbb
cmpsb
ds
in
adc
or
mov
add
lret
xor
fbld
sbb
xor
jne
mov
mov
sub
bound
and
inc
jg
push
mov
cmpsl
and
mov
or
xor
mov
aad
ret
pop
ret
movsb
and
inc
mov
dec
add
cmp
adc
pop
loope
mov
push
cld
pop
mov
lods
push
xor
bound
xor
add
sbb
fwait
or
mov
xchg
push
pop
fidivl
xor
pop
jg
call
xor
mov
pop
lods
and
call
stc
sahf
adc
dec
clc
add
cwtl
fs
pop
jb
pushf
mov
fadds
outsl
rolb
idiv
loop
inc
inc
inc
mov
xchg
cmp
xor
add
push
lds
in
pop
pop
push
adc
pop
out
inc
jp
clc
ja
mov
xchg
push
je
lahf
mov
adc
dec
ljmp
push
rolb
cltd
sbb
lds
push
or
or
or
pop
pop
test
cwtl
adc
inc
xor
push
sbb
sbb
mov
inc
repz
adc
mov
dec
sub
out
data16
icebp
or
daa
xchg
out
mov
mov
stos
xor
loope
jge
or
aad
cmc
lods
mov
pop
das
pop
daa
push
push
push
loopne
xchg
cmp
lods
mov
sub
xor
and
xchg
cmp
push
icebp
inc
repnz
push
fistl
xor
cmpsb
add
insl
mov
dec
and
hlt
sarl
cli
ljmp
aad
push
jmp
and
movsl
mov
adc
jp
cs
adc
loop
lret
ds
into
push
aas
mov
data16
ja
sbb
sarl
dec
adc
add
std
outsl
inc
and
loope
lret
cmp
add
les
shll
lret
pop
sbbb
lcall
push
add
dec
xor
insb
dec
mov
inc
loope
inc
imul
push
subb
pop
inc
jb
pop
les
xchg
cld
scas
ja
testb
loope
push
orb
mov
popf
repnz
enter
scas
ja
into
dec
aad
addr16
cli
sub
out
and
adc
mov
shlb
loop
in
cwtl
sarl
xchg
xchg
jo
pop
insl
outsb
push
adc
fsubr
or
pushl
xchg
push
popa
movsl
cmpsl
cmp
sbb
add
jo
adc
ret
sbb
xchg
mov
xchg
jns
jl
movsb
mov
je
js
xchg
mov
cs
xchg
cs
bound
mov
sbb
ret
cltd
xchg
lock
xor
push
fstps
arpl
cs
popf
or
mov
fisttpll
into
cmp
and
sub
es
mov
dec
mov
daa
or
push
mov
inc
cmpsl
sub
sub
xlat
cmpsb
sbb
inc
cmp
mov
dec
adc
mov
shl
push
jl
in
add
mov
pop
sbb
xchg
mov
ret
hlt
sbb
iret
ss
popf
sarl
sbb
pop
lock
fildll
icebp
xchg
cmp
jmp
jo
push
daa
pop
push
inc
add
xchg
jae
cmp
jmp
adc
lcall
cmp
xchg
push
pushf
pusha
lock
push
sub
iret
mov
push
out
js
mov
imul
cs
lahf
mulb
adc
std
lret
xchg
or
inc
add
or
jg
in
jg
insb
leave
cmp
ss
in
mov
dec
clc
ret
test
pop
mov
roll
test
lahf
sub
sbbb
cwtl
mov
addb
in
or
push
loope
leave
mov
mov
lahf
shll
jne
inc
and
adc
sub
pop
and
in
mov
push
subl
jmp
icebp
or
pcmpgtb
aas
jae
xor
adc
test
mov
les
call
into
mov
xor
out
lea
repz
fsubs
stc
or
test
sarl
movsl
sub
out
xchg
or
mov
push
mov
and
or
in
pop
int
or
movsb
mov
mov
mov
aaa
fdivr
rcr
pop
addb
add
mov
aaa
pop
ljmp
push
push
mov
nop
push
xor
cmc
fimull
bsf
mov
js
add
mov
sbb
xor
xchg
pop
mov
ret
pop
decl
push
mov
sbb
pop
pop
sbbl
mov
lds
outsb
cmpsb
inc
xor
sbb
mov
clc
sti
or
mov
push
jmp
push
jge
pusha
aam
push
push
dec
rcl
mov
fcom
test
lret
outsl
lds
add
rorl
adc
jmp
shll
jno
jb
push
adc
pop
loope
out
adc
lcall
or
jmp
lock
pop
cmc
sub
push
jnp
cmp
push
loopne
mov
sub
and
outsb
dec
add
or
or
lret
pop
insb
add
pop
imul
cmp
outsb
xchg
mov
stos
push
pop
jmp
mov
dec
push
in
int3
push
xchg
out
mov
addr16
adc
in
mov
and
ds
call
adc
pop
cld
push
adc
xchg
xchg
ds
stc
clc
dec
test
insb
push
jecxz
jle
cld
and
adc
xor
inc
rorl
ljmp
mov
add
mov
test
rolb
sbb
mov
out
sbb
out
and
or
loope
mov
nop
lret
aad
shlb
sahf
das
xor
mov
adc
fdivl
es
cli
test
mov
jmp
mov
inc
mov
lret
cld
cmpb
inc
mov
ret
jns
sub
push
clc
nop
sub
aam
adc
daa
jp,pt
int3
push
mov
out
adcb
xchg
out
sbb
sbb
in
sub
jbe
lock
pusha
pop
sbb
andl
in
pshufw
aam
inc
mov
subb
adcb
or
mov
add
loopne
fs
cwtl
xor
aad
lcall
lock
data16
sbb
insl
adc
mov
inc
scas
pop
nop
cli
adc
les
push
inc
pop
bound
sub
int3
mov
lret
in
std
sub
pop
lods
mov
pop
fildll
ds
call
add
xchg
pop
adc
fistpll
jecxz
dec
lds
jmp
adc
pusha
pusha
movsb
or
filds
iret
add
iret
cmp
jmp
sbb
xchg
sbb
rorw
mov
jg
lret
clc
dec
inc
dec
or
adc
xchg
cli
push
or
sbb
push
lret
sbb
lcall
ja
jle
add
adc
push
rorl
jp
jo
push
xor
fwait
jmp
call
lea
int
pop
pop
sbb
out
lcall
add
inc
mov
ds
jae
cmp
pop
shrb
subb
rolb
mov
inc
in
sbb
jge
lods
test
or
sub
or
adc
shrl
dec
ret
dec
pop
jbe
hlt
inc
add
mov
lcall
mov
icebp
lret
push
pop
lahf
mov
imull
sbbl
test
lret
hlt
mov
sbb
leave
mov
incl
outsb
pop
mov
adc
test
mov
cli
inc
pop
pop
pop
jl
in
cmpsl
mov
push
sahf
shl
pop
call
pop
jbe
cld
mov
incl
jnp
add
ret
or
push
loop
or
xchg
push
dec
std
sbb
idiv
and
pop
ret
and
adc
push
notl
outsl
jb
dec
or
lcall
push
sbb
repnz
cmp
imul
and
mov
addr16
lret
mov
dec
dec
jp
mov
sbb
cld
push
mov
sbb
sbb
sbb
push
sub
cmp
or
cs
jmp
ja
addr16
jne
pop
movsb
jo
mov
ds
mov
add
push
pop
mov
mov
fldl
addr16
addl
jmp
je
aad
sbb
push
push
repz
pop
push
cmpl
push
adc
fstps
push
push
dec
mov
rcr
mov
mov
inc
insl
sbb
loopne
scas
imull
dec
push
sub
sbb
pop
shrl
jge
xchg
movl
mov
or
inc
in
add
ds
jo
cmp
in
xchg
out
fstpt
popf
stos
es
dec
shld
pushf
in
imul
sahf
jo
pop
jecxz
add
mov
andb
add
xchg
lock
dec
das
cmc
mov
or
inc
dec
inc
adc
inc
ficompl
dec
pop
mov
sub
andb
or
adc
rorb
fsubs
inc
test
push
pop
stos
test
out
jo
xor
inc
jg
adc
and
fisubrl
dec
insl
rclb
ljmp
add
adc
pop
xchg
xchg
icebp
cmp
je,pt
push
arpl
arpl
pop
cmpsl
fadd
xchg
popf
shr
pusha
mov
mov
sbb
roll
add
push
scas
pop
xor
shll
push
mov
mov
sbb
add
pop
push
mov
pop
movsl
pop
test
scas
xorl
pop
jb
add
loope
inc
loopne
fcoml
mov
scas
fildll
in
mov
mov
pop
push
call
sbb
sbb
pop
push
dec
ljmp
lahf
mov
lods
rorb
stos
cmc
movsb
addr16
scas
adc
pop
nop
cmpsb
imul
ret
test
lcall
push
pop
push
pop
inc
cmp
dec
and
pop
push
jmp
subl
cmp
jne
jge
push
push
pop
sub
pop
add
mov
fmul
jl
rolb
shll
std
push
xchg
inc
adc
push
fbstp
mov
popf
out
cs
fwait
subb
ds
call
stos
push
sbb
push
push
ret
fwait
rol
pop
sbb
sbb
mov
add
xchg
and
cmp
xchg
in
das
dec
sti
test
add
cmc
dec
ljmp
popa
mov
jb
in
adc
and
pusha
add
push
dec
xor
lahf
mov
mov
imul
femms
mov
push
sub
adc
dec
sub
push
adc
fcomp
jmp
out
addb
xchg
and
cmp
jno
pop
mov
rcr
or
adc
jp
cmp
jns
in
sbb
rorl
jge
push
mov
adc
lea
add
jno
ret
mov
mov
das
or
test
sbb
push
loopne
mov
xor
loop
sbb
sub
cwtl
mov
jno
mov
insb
shl
or
nop
es
int
or
and
pop
outsl
js
scas
xchg
out
repnz
jae
adc
cmp
sbbl
xor
hlt
push
fnstcw
pusha
add
aad
dec
inc
fisubl
cld
adc
xchg
hlt
jmp
imul
jecxz
in
push
dec
jmp
les
dec
pusha
sti
movsb
shll
scas
dec
aad
inc
add
aam
daa
js
stos
sbb
sub
mov
pop
lahf
cmp
push
je
cld
mov
or
sub
hlt
mov
xor
outsb
rolb
cmpl
test
aaa
loopne
xor
jno
decl
int
sub
jb
mov
mov
sahf
or
inc
or
lahf
mov
mov
or
pop
adc
push
jns
aam
adc
dec
push
inc
les
push
popf
aaa
fwait
xchg
add
cs
pop
cltd
incb
jmp
jo
cmp
jle
in
mov
jb
fiadds
add
out
test
push
and
xchg
out
into
mov
in
call
jecxz
or
out
pop
cmp
rcrb
sbb
cmp
adc
arpl
pop
cmp
xor
push
xorl
pop
xchg
ret
stos
fwait
xchg
dec
add
rolb
sub
in
imul
xchg
lret
push
loope
jmp
push
movsl
mov
add
dec
and
repnz
shl
pusha
add
push
cmpsl
mov
pop
test
sub
pop
movsb
mov
out
repnz
arpl
pop
orl
xlat
out
in
sahf
or
adc
pop
ljmp
scas
push
mov
xor
add
scas
jge
lret
mov
xchg
push
pop
daa
sbb
cmp
cwtl
and
sbb
hlt
cmp
cli
scas
aaa
repnz
inc
not
mov
cmp
and
cmp
lods
loopne
mov
jle
xorl
cmp
add
arpl
jns
lds
or
push
mov
xor
inc
jne
shl
std
subb
sub
test
leave
adc
xchg
xadd
out
sbbb
mov
jbe
maxps
lahf
xchg
rcrb
cmp
push
push
and
inc
jb
and
pop
mov
lahf
popf
sbb
pop
pop
mov
dec
loopne
push
and
in
xchg
push
mov
cmp
and
mov
cmp
push
repnz
jo
sbb
xor
mov
xchg
jl
out
jp
dec
pop
mov
rcrb
adc
bound
test
bound
jo
movsl
fisubrl
in
jecxz
push
push
outsb
and
pop
push
popa
mov
lods
mov
rorl
push
test
aam
cvtps2pi
mov
cmp
std
sub
rol
imul
push
mov
icebp
cmp
test
xchg
jb
mov
push
test
jmp
push
fildl
cmc
pusha
scas
jns
jg
ljmp
inc
sbb
push
data16
adc
pop
mov
inc
adc
lahf
mov
add
test
movsb
push
imul
inc
aas
and
cwtl
fnstcw
mov
imul
fldt
and
xor
inc
cmp
test
cmp
bound
pop
test
fcmovne
es
add
and
sti
mov
dec
mov
mov
pop
or
fistpll
scas
cmp
sub
pcmpeqb
jo
cmp
gs
jge
xchg
mov
fcompl
jo
cmp
jmp
int
jmp
dec
mov
sbb
cmp
sbb
arpl
mov
add
ja
lods
fsubl
in
shrb
xor
xchg
cmp
loop
mov
es
jo
scas
test
fiadds
popa
dec
cmc
mov
sub
or
out
mov
xlat
pop
or
or
mov
and
or
jmp
adcb
iret
icebp
cmp
cld
push
push
pop
stos
and
insb
or
sub
push
inc
pop
mov
mov
popl
divl
inc
idiv
jp,pt
stos
arpl
test
int3
imull
icebp
daa
mov
push
mov
add
mov
pop
xor
jl
popf
fisubrl
and
flds
mov
faddl
push
push
test
pop
stos
xor
into
in
aam
or
ret
inc
jo
push
psraw
jl
imul
xor
push
add
jo
cltd
in
cmp
xor
cwtl
xor
rolb
inc
xor
xor
les
and
inc
jg
or
inc
ret
inc
test
jno
adc
jmp
inc
mov
sub
mov
scas
mov
inc
sahf
call
pusha
mov
pop
sbb
sub
push
ss
inc
sub
aaa
cmp
ret
cmp
fmull
clc
mov
clc
mov
mov
rcrb
fcompl
jb
or
scas
xchg
dec
fnstsw
aaa
and
mov
dec
pop
jp
xchg
xchg
mov
movsb
pop
and
imul
mov
mov
or
scas
xor
or
scas
fimull
dec
fadd
insb
inc
aaa
or
cltd
mov
stos
push
shlb
leave
cwtl
cld
fisttps
test
jmp
or
add
cmp
ja
sub
mov
fdivl
dec
andb
ss
pop
jb
xlat
mov
cli
mov
xchg
shl
sub
or
scas
rolb
lret
pop
adc
inc
push
cmp
inc
lret
or
jmp
xchg
push
mov
ja
pop
shr
faddp
dec
aad
pop
lret
jne
fcoml
fidivs
xchg
jmp
inc
sbbb
hlt
or
into
fiaddl
mov
cmp
cmp
or
and
out
sbb
aam
lret
fbstp
jae
xor
push
inc
cmp
scas
push
mov
int3
sbb
cmpsb
push
pop
cli
jbe
shlb
adc
sbb
and
jbe
mov
mov
or
ret
xlat
aas
out
ds
xchg
cmc
or
cmp
das
arpl
and
aaa
jnp
fisttpl
sbb
movsl
aam
addb
lcall
lock
test
rorl
dec
nop
add
jmp
ss
int
push
xlat
mov
dec
data16
shll
add
je
lock
sbb
mov
fiadds
push
lahf
cli
sbbl
push
sub
inc
js
arpl
outsl
adc
pop
int3
sbb
add
adc
mov
ljmp
inc
mov
cld
mov
inc
es
ja
pushl
loope
or
lcall
sti
add
lock
jb
bound
int
pop
xor
add
cltd
jo
sub
jp,pn
pop
xchg
xor
push
shrb
int3
pop
and
stos
or
dec
jl
push
pop
in
cli
ljmp
cli
pop
xor
mov
or
xchg
fidivrl
lock
push
add
jg
inc
dec
jnp
popl
popa
pop
jg,pt
mov
xor
push
ljmp
leave
cmp
daa
pop
adc
add
fidivl
push
sub
cmpb
push
pop
pusha
cmp
fdivl
jne
cmc
movb
mov
jno
dec
cmp
call
and
sbb
jmp
mov
add
push
push
jnp
call
mov
mov
sbb
mov
aad
mov
fimull
push
out
arpl
shll
outsb
push
pushf
xorl
shlb
mov
xchg
js
mov
repz
jo
or
test
clc
inc
pop
aaa
xchg
adcb
in
add
dec
clc
ss
add
mov
dec
loopne
or
xorb
int
cli
inc
or
jb
push
in
jo
lcall
sub
cmp
sti
fsubl
mov
push
aaa
sbb
dec
fmuls
push
cmp
add
dec
stos
jo
inc
cmp
popa
lret
es
cmp
jecxz
inc
sbb
movsb
inc
cmp
push
loop
clc
add
push
rcrl
mov
or
adc
rorl
int
jo
xchg
sbb
sbb
fs
or
or
mov
shl
pop
add
pop
es
jbe
jbe
jno
xor
sub
cmpsb
jg
add
push
lcall
fisubs
mov
xor
inc
adc
mov
mov
mov
pusha
scas
push
add
mov
enter
bound
sbb
push
mov
jle
pop
dec
ret
xchg
dec
shrb
in
push
call
cwtl
xchg
inc
xor
pop
inc
mov
mov
pop
int
sub
cli
ljmp
sahf
test
mov
xor
mulb
and
mov
xor
and
in
ljmp
cli
mov
cmp
mov
sti
pushf
clc
sub
xor
xor
mov
shll
jge
and
mov
xchg
pop
or
dec
push
stos
or
loop
psllq
scas
mov
shll
cwtl
mov
add
inc
and
gs
add
push
inc
roll
lock
jmp
mov
or
adc
iret
out
stc
sub
or
sub
cltd
push
ret
xchg
fcmovnu
sbb
movsl
push
mov
xchg
test
jmp
add
push
and
mov
mov
sub
ljmp
jno
fs
sbb
jmp
add
pop
adc
mov
sub
fmul
sub
fadds
jo
lret
sub
adc
das
daa
cmp
mov
pop
xor
dec
cmp
dec
je
loop
mov
movsb
adc
addl
insl
mov
and
xor
adc
mov
dec
push
sub
frstor
sub
cwtl
cmpsb
add
inc
mov
push
cli
loope
add
jp
sub
aaa
sbb
ds
mov
dec
cmc
out
xchg
les
addb
add
out
sbb
ljmp
lret
add
cmovs
out
jl
add
ja
or
int3
enter
jg
shrb
jo
mov
iret
mov
sbb
stos
mov
enter
jle
mov
cmp
lods
daa
imul
xchg
cmp
cli
test
cmp
addb
lods
add
add
outsb
push
and
data16
add
in
shrb
dec
adc
hlt
dec
aad
push
cmpb
inc
sahf
inc
adc
cli
test
push
loop
fildl
push
cs
inc
loopne
jmp
mov
sbb
stos
xchg
sbb
adc
filds
es
push
add
lods
push
adc
or
sti
push
pop
mov
jb
sub
sbb
mov
shrl
lret
call
jge
mov
mov
push
sbb
xor
mov
add
adcl
and
pop
and
cld
mov
sbb
sbb
xor
push
loopne
aam
notb
lock
mov
nop
out
mov
icebp
xchg
icebp
lahf
bound
pop
test
sub
add
xchg
pop
sub
mov
inc
sub
push
mov
and
add
enter
loope
and
outsl
adc
call
or
out
inc
pusha
push
sbb
cmc
pop
in
scas
pusha
cmc
or
es
sbb
jb
or
mov
sbb
aaa
mov
std
mov
mov
or
shlb
push
test
loop
pop
outsl
sub
iret
cwtl
dec
negb
aas
scas
test
dec
ret
sahf
push
lds
fidivs
leave
in
fs
jp
aam
hlt
mov
mov
sbb
outsb
jnp
dec
jno
loope
push
dec
push
sbb
lcall
add
push
cli
out
xchg
fsub
inc
mov
aas
push
add
jp
mov
or
lods
insb
movsb
jb
jbe
inc
mov
cmp
or
xchg
mov
sahf
xor
out
loope
inc
sbb
xchg
sbb
xor
loope
pop
into
repnz
mov
hlt
cli
jge
les
popf
fidivl
lcall
or
adc
adc
fwait
or
add
sbb
lcall
and
inc
mov
inc
adc
das
sbb
out
popa
es
xchg
or
cmp
inc
cmp
jmp
ret
adcl
sarb
pop
icebp
stos
in
sub
xor
rol
mov
pusha
lret
jbe
in
sbb
dec
mov
mov
dec
add
addr16
cs
clc
ficoms
add
or
jns
or
add
aam
push
jle
or
push
shr
bound
push
and
lahf
sbb
mov
mov
je
push
and
ss
repnz
lock
scas
mov
add
es
aaa
mov
loopne
cmpsb
ss
add
cmp
xchg
sbb
adc
inc
or
add
push
das
add
xlat
add
std
aaa
out
mov
mov
xchg
loope
push
cmp
out
movb
mov
or
and
mov
sbb
sub
dec
testb
pop
lret
clc
clc
in
sbb
sbb
adc
pop
xor
stos
push
cmpsl
mov
sbb
fucomip
into
and
stos
ljmp
mov
lock
jno
shrl
pop
test
pop
cmpsb
xor
arpl
das
inc
xor
leavew
pop
lahf
jnp
in
adc
clc
pop
and
dec
dec
push
outsb
push
cmp
enter
xchg
or
pop
or
add
subb
xor
and
imul
movsb
cmp
in
lock
pop
xchg
ret
jp
adc
inc
inc
jo
lock
mov
jl
mov
sarb
clc
mov
dec
push
xor
jmp
sbb
push
jp
outsl
stos
jge
stos
xor
pop
cmp
sbb
cmp
ret
xor
scas
jl
nop
fisubrs
add
ja
fildl
rolb
nop
in
mov
mov
push
xor
push
roll
ret
mov
dec
push
xorl
add
and
adc
push
jo
inc
adc
dec
or
mov
sbb
sub
in
mov
bound
pop
or
adc
ret
stos
pop
js
clc
test
dec
mov
push
jp
xchg
popa
movsl
push
hlt
jns
dec
ret
mov
shlb
pop
dec
loop
fmull
sub
inc
xchg
add
test
inc
loope
dec
dec
xchg
mov
insb
fdivl
loopne
sub
inc
jo
push
dec
push
adc
dec
dec
sub
sub
add
mov
insl
repnz
data16
push
push
stos
icebp
das
mov
push
pushl
cli
sbb
xchg
fadds
xor
jmp
cs
aaa
fldcw
test
scas
mov
roll
push
or
popf
div
sub
push
adc
push
jge
jae
icebp
ds
test
jp
and
das
pusha
dec
cmc
xchg
call
xchg
push
aam
test
push
add
adc
push
push
mov
or
pop
pop
ret
dec
xchg
in
cmpsl
xchg
sbb
mov
dec
add
sbb
arpl
ss
xor
lock
sub
loop
inc
inc
lods
aad
mov
xchg
test
jecxz
js
in
add
mov
jl
adc
out
jg
incb
xchg
or
adc
lcall
inc
notb
inc
loopne
int3
inc
aam
lock
loope
pop
push
out
and
jnp
in
xchg
dec
inc
scas
imull
inc
loopnew
xor
mov
push
icebp
pop
push
pushf
sbb
sbb
in
data16
add
push
jmp
xchg
mov
clc
dec
xor
mov
xorb
dec
loop
aad
sub
dec
lret
sbb
push
shl
sub
adc
in
jp
shlb
cmpsb
cmp
cmp
inc
add
add
push
or
pop
sub
lds
stos
inc
mov
adc
pop
out
jbe
cmpsb
call
sahf
ds
pop
push
and
mov
in
push
mov
loop
sahf
sbb
jle
rcll
ret
xchg
mov
cmp
mov
je
lds
fdivrs
xor
jle
fnsave
mov
jbe
xchg
lret
call
add
int
inc
cmp
cmp
pop
mov
pop
jb
rorl
or
add
loope
adc
adc
lds
or
inc
test
bnd
add
add
adc
pop
pop
pop
mov
call
xchg
into
sarl
gs
inc
lret
inc
dec
push
icebp
pop
adc
fcoml
push
sub
insb
jno
push
dec
mov
repz
aaa
inc
and
adc
scas
sahf
jnp
inc
add
call
movsb
dec
and
fldt
movb
mov
push
clc
shll
mov
add
or
adc
sbb
push
ljmp
jns
sarl
lcall
dec
push
ljmp
subb
les
std
add
jl
shll
sub
data16
and
push
call
push
lret
clc
dec
insl
push
out
lret
push
push
imul
add
cmpsl
push
jecxz
sub
loope
pop
hlt
orl
test
decb
aaa
jl
hlt
fsubrs
fnstenv
movsb
cli
or
shrl
mov
sbb
das
xchg
je
filds
pop
dec
div
repnz
and
mov
cwtl
adc
out
cltd
mov
push
mov
sub
repz
pusha
xchg
and
push
inc
dec
cbtw
adc
xchg
lahf
cltd
pushf
imul
enter
cs
lret
and
stc
xlat
sbb
jae
mov
test
insb
insb
lods
add
cmpsl
xchg
loope
or
ja
xor
ret
bt
adc
pop
cmp
dec
int3
push
xor
inc
xchg
icebp
rorb
pop
mov
popa
jne
call
pop
icebp
jmp
cmp
cld
mov
dec
inc
jp
mov
test
or
std
adc
cmp
add
push
or
and
jp
mov
loop
inc
shrl
sub
adc
xchg
loopne
jl
mov
cmp
jecxz
insb
pop
push
sbb
es
sbbb
int3
adc
lds
inc
loop
sub
push
in
sbb
mov
sbb
mov
cmp
and
push
adc
push
push
xor
fadds
shlb
psubusb
loope
rcrl
fldl
popa
pop
push
cld
mov
sub
mov
sbb
stc
ljmp
and
sbb
aaa
lock
ret
int3
sub
in
inc
rcl
cmp
dec
loop
lret
inc
push
aam
iret
or
ret
js
push
mov
int
pusha
outsb
add
clc
mov
or
pop
ficoms
push
cmp
imul
aaa
xor
pop
outsb
add
add
js
inc
pushf
xchg
jbe
pop
mov
adc
or
and
les
call
mov
add
mov
ret
adc
push
sbb
loopne
lcall
cmpsl
loope
fisttps
scas
pop
ffree
outsl
adc
cmp
pop
in
mov
push
adc
push
test
das
lret
cmpsl
and
sbb
fwait
sbb
or
inc
in
pusha
xchg
add
or
pop
imul
push
xchg
jge
imul
pop
xchg
sbb
pop
sub
mov
loopne
cmpsl
es
sub
push
fidivs
cmp
lcall
cmpsb
call
into
int
pop
and
sub
sub
push
xchg
pop
sub
andl
rclb
faddl
ds
je
mov
xchg
std
les
cmpsb
adcb
outsb
jo
cmp
fbld
jo
lahf
ret
xchg
sbb
mov
mov
mov
adc
cmp
adc
ljmp
out
add
daa
mov
and
pop
push
sbb
ss
insl
mov
mov
les
jge
pushf
and
hlt
aaa
aad
or
cmp
xchg
push
scas
mov
jne
xchg
in
sbb
loope
stos
test
repnz
roll
sbb
dec
fistpl
add
lods
fimull
es
lds
orl
sub
test
pusha
jle
cs
or
add
dec
adc
mov
pop
aaa
pop
icebp
adc
sbb
xchg
mov
aad
mov
cs
push
addr16
pop
cmp
and
imul
push
cmp
roll
movl
outsb
jg
sub
push
sbb
adc
adc
pushf
sbb
test
lea
pop
or
aam
cld
adc
mov
or
test
jl
xchg
jl
adc
loopne
rep
xor
mov
aas
mov
das
jne
mov
xchg
ret
imul
inc
mov
sbb
jmp
add
les
xchg
adc
pop
mov
aad
mov
adc
mov
test
sbb
lret
scas
lret
mov
jnp
lahf
test
adc
add
or
adc
lods
sbb
mov
fstp
mov
jnp
cmp
stos
sbb
cmp
or
mov
aad
movsl
lret
sbb
fistpl
add
insb
stos
scas
cmp
dec
sub
cmp
jno
bswap
sbb
or
ret
jno
cmp
pop
pop
sahf
push
pop
ret
std
ret
adc
dec
xor
test
push
pop
lcall
int3
in
js
push
iret
xor
lock
xor
inc
xor
test
in
cmp
sti
xor
adc
mov
sahf
ljmp
ret
cmp
adc
xchg
add
lock
js
or
test
pand
cmp
ret
insl
push
jae
setnp
scas
push
mov
and
adc
in
mov
jmp
mov
mov
test
mov
or
int3
fwait
outsb
cmp
sbb
fcoml
push
aad
pop
sbb
bound
and
mov
pop
out
add
dec
push
clc
xor
mov
andb
lea
or
imulb
incb
rorb
mov
push
mov
mov
insb
xor
mov
or
dec
add
pop
shrb
andb
dec
or
outsb
sahf
cmp
cmpl
mov
sarb
out
cltd
jbe
adc
jmp
scas
cld
rclb
insb
ljmp
cs
jb
insb
xchg
in
enter
or
or
or
cli
inc
ljmp
push
or
or
rcll
test
jnp
shll
jecxz
loope
add
cwtl
and
cs
xor
inc
addr16
lahf
roll
sub
fiaddl
mov
sti
aad
ljmp
jne
fsts
cmp
int
lods
fsubs
and
pop
push
add
sbb
push
fcoml
sbb
or
fsubrs
push
jl
mov
push
jo
or
jns
pop
inc
push
push
fsubrs
pop
lock
loopne
pop
jae
into
mov
sbb
subl
test
into
adc
mov
cmpl
and
lods
insb
int
fisttpll
test
or
push
adc
in
xchg
cwtl
xchg
pop
movsb
and
mov
mov
insl
xchg
push
mov
adc
xchg
add
shlb
cwtl
pop
or
pushw
shrl
sbb
repnz
imul
lods
loop
int3
in
sub
cs
rorb
mov
orb
inc
mov
decb
push
xor
testb
fldl
add
push
push
jbe
mov
into
ds
mov
or
fcoms
lock
mov
mov
and
mov
enter
sub
icebp
inc
inc
imulb
outsb
jp
roll
nop
call
outsl
add
shll
ja
aad
jp
sbb
cltd
or
lock
add
dec
or
clc
and
add
pop
std
lcall
jp
jl
test
mov
jne
or
mov
inc
stos
cwtl
movsl
jbe
ret
je
sbb
push
mov
test
int
add
rolb
jecxz
aam
int3
mov
fstl
add
decl
nop
mov
or
jns
cmp
les
mov
lds
sahf
decb
and
aaa
cli
jns
js
jge
and
out
jg
cmp
ja
fldcw
pop
adc
xorb
lods
insl
daa
fwait
xchg
scas
sub
mov
mov
fnstsw
pop
add
sub
jb
fsubl
sub
cmp
nop
pop
cmpl
xchg
int3
data16
lds
inc
xchg
popa
add
pusha
cltd
fsubrs
int3
incl
fwait
and
mov
mov
or
dec
inc
mul
sbb
ret
shll
mov
stos
add
mov
inc
push
mov
inc
mov
mov
enter
jbe,pt
scas
mov
mov
repz
loope
ss
scas
sarb
mov
or
xchg
inc
iret
cld
movl
sahf
xor
cltd
xlat
jmp
pusha
je
add
jmp
imul
mov
xchg
jmp
dec
rcll
adc
cmpxchg
push
push
xor
movsl
mov
dec
cld
fbld
xchg
std
sub
test
fwait
in
les
loop
push
cld
mov
add
shld
test
cmp
and
jg
mov
jmp
mov
fisttpl
in
mov
adc
cwtl
mov
adc
lock
sub
roll
add
push
insb
shlb
test
pop
lahf
or
xchg
sub
lea
test
xchg
cmp
add
dec
fidivrs
daa
les
inc
mov
sbb
rolb
pop
or
jle
jge
or
js
shlb
push
push
inc
add
dec
lds
and
sub
sar
dec
clc
outsl
push
sbb
fwait
call
xchg
inc
das
shll
jle
test
fcomp
push
sbbb
push
addr16
sar
xchg
movsl
pop
pop
jmp
xchg
ror
scas
cli
std
mov
pop
mov
sub
loope
stos
adc
mov
test
lods
add
les
notb
sbb
outsb
mov
adc
negb
aaa
in
pop
or
lock
sub
idivb
cmp
jae
ds
lret
test
mov
fiadds
jmp
jne
push
mov
mov
add
xor
pusha
adc
adcb
clc
mov
jmp
sbb
inc
xor
test
and
ljmp
je
xchg
mov
cltd
push
mov
inc
lock
clc
fdivr
sub
or
sbb
fcomi
sub
aam
sub
mov
xor
call
stc
outsl
lret
pop
aaa
jp
mov
repz
lds
loopne
ficompl
fmulp
push
rol
addl
es
and
nop
pop
std
adc
mov
sbb
cmpsl
add
dec
call
ljmp
or
cmp
fmul
mov
push
inc
cld
xorl
cmpb
mov
sbb
ret
mov
out
nop
ljmp
jbe
jo
push
subl
cmp
mov
test
out
sbb
incb
push
lods
push
loopne
inc
ljmp
icebp
jg
xor
sbb
pop
shl
aad
xchg
pop
loop
outsb
mov
enter
fnsave
movsl
test
adc
mov
daa
std
xor
adc
cmp
push
fsubs
xchg
inc
clc
pushf
movsl
add
jo
and
mov
add
push
ds
xchg
push
pushl
addl
insl
shrb
clc
stos
clc
adc
add
setb
xchg
mov
out
data16
shl
pop
and
dec
cmc
rolb
xchg
push
jno
push
ret
data16
adc
add
loope
adc
test
inc
cmp
aad
add
cmpsb
mov
ficoml
jno
adc
fninit
loop
outsb
mov
push
sub
int
jge
mov
xor
cmpsb
sub
scas
dec
inc
add
inc
or
dec
pop
add
pop
xor
push
ja
xor
xor
xchg
mov
arpl
push
aam
bound
clc
mov
int3
test
and
lock
jnp
lcall
cld
jg
stc
aam
or
pop
push
enter
mov
shl
les
or
shlb
js
daa
test
push
jle
mov
pop
loope
add
mov
mov
or
and
imul
mov
and
lods
mov
lods
sub
in
mov
sbb
jle
and
fwait
dec
das
xor
outsl
test
and
xchg
pop
adc
mov
push
and
push
or
adc
outsl
jnp
cmp
repz
add
loop
ss
xor
in
gs
xchg
mov
or
lds
clc
mov
xor
jbe
dec
or
das
add
jge
add
aas
je
jns
sbbl
jns
call
pop
sbb
inc
pop
out
xor
stos
dec
rep
jns
fdivrl
imul
loopne
inc
sub
fimuls
xchg
dec
jp
inc
mov
pop
jecxz
xchg
sarl
xchg
fucomp
add
dec
jge
cmp
dec
or
add
incl
or
sbb
pop
popa
push
rol
stc
ret
sbb
or
cmc
or
xor
jle
repnz
lret
dec
pop
jmpw
or
aad
fmull
mov
mov
dec
and
dec
fwait
sub
loope
testb
cmc
xor
ds
stos
dec
ret
jne,pt
jge
pushf
mov
and
mov
xchg
les
jecxz
jns
addr16
add
ja
or
xor
dec
or
xor
ret
pop
mov
stos
xchg
jle
add
mov
js
arpl
dec
outsl
sbbb
or
pop
jle
fdivp
pop
and
mov
out
inc
sbb
jns
mov
int3
add
mov
mov
repnz
stc
icebp
xchg
js
push
sub
nop
push
push
add
es
add
mov
inc
cli
adcb
mov
fs
fidivl
mov
sar
or
out
movsb
inc
fnstcw
cmpsl
daa
cmc
mov
pop
dec
test
nop
fimull
jl
cmpsl
int
les
dec
push
mov
addr16
adc
icebp
jmp
pop
xchg
js
jae
mov
cwtl
insb
jne
cmpsb
push
adc
push
rcrb
popf
add
dec
or
jge
addb
fsubl
sub
mov
aas
fadd
lcall
clc
xchg
pop
pop
push
push
add
cmc
push
mov
push
test
mov
inc
es
mov
movsl
ss
mov
cmp
dec
jg
or
push
xor
js
icebp
fdivr
add
cltd
das
inc
lcall
or
imul
cmp
mov
pop
mov
js
rcrl
mov
inc
cmp
inc
jge
pop
imul
jo
lods
dec
test
mov
inc
pop
das
sbb
lds
add
fildl
xchg
push
sbb
xchg
dec
cmp
aas
stc
test
inc
pop
test
lret
adc
fldl
add
mov
popf
or
cmp
pop
cmpl
scas
add
jbe
iret
andb
movsl
cmpsl
mov
lock
mov
mov
lahf
ljmp
push
push
jg
lds
ret
cmp
add
jnp
jle
test
dec
jo
and
mov
adc
sub
xchg
pop
jae
mov
pop
sti
jp
mov
adc
lock
add
mov
cmpb
jb
bound
push
rcrl
imul
adc
mov
pop
into
aad
imul
fistl
ljmp
subb
cli
sahf
push
rcrl
test
aas
bound
addb
pop
dec
jnp
movsl
jae
shl
add
push
cmc
pop
mov
xchg
xor
xor
das
and
pop
mov
dec
popa
or
add
sub
lods
adc
mov
repnz
cmp
lahf
pop
xchg
lea
cmpsb
fs
xchg
mov
stos
pop
inc
inc
aam
pop
mov
daa
loope
push
pop
jnp,pn
out
fildll
add
arpl
dec
push
lock
cmp
mov
arpl
xchg
adc
call
jmp
mov
addr16
jg
jne
push
popf
push
mov
jo
nop
lock
addl
outsb
jl
xor
imul
and
inc
dec
insl
xchg
inc
ror
fisubs
sbb
rcll
dec
shl
cwtl
clc
int3
lds
pop
add
add
mov
or
mov
das
adc
dec
cwtl
ror
pusha
push
rclb
jb
jg
xchg
lods
and
scas
stos
fcmovne
cmp
mov
pusha
loopne
daa
cltd
std
adc
pop
xor
call
xor
pusha
dec
mov
std
xor
pusha
mov
lods
mov
mov
clc
add
dec
push
mov
xchg
mov
mov
test
cmp
enter
dec
insb
loopne
or
repz
fdivs
cmp
adc
xchg
lcall
xchg
shl
data16
or
and
cmpl
cld
leave
jmp
movsl
push
inc
push
add
add
sub
pusha
mov
cmp
into
stos
es
or
add
or
cmpb
in
xor
fwait
xchg
sbb
decb
or
cs
movsl
loope
test
or
or
jp
fistpl
cmp
dec
mov
pusha
mov
push
mov
sub
xchg
loope
add
add
cs
mov
sbb
cli
xor
pop
and
push
inc
sbb
and
jl
inc
aam
orb
pushf
fnstenv
or
lods
rorl
or
inc
inc
xorb
fmuls
icebp
and
mov
andb
jmp
add
mov
pushl
mov
inc
dec
in
shrb
and
jae
xchg
dec
push
std
cmp
pop
mov
mov
dec
dec
call
loop
fbstp
mov
lret
fs
or
notb
push
cmpl
mov
insb
mov
and
add
shlb
pop
mov
fs
std
or
test
cld
mov
or
mov
mov
aad
dec
jne
ss
test
push
xchg
push
adc
mov
iret
add
mov
jmp
adcb
shlb
and
ja
shlb
cld
test
xchg
inc
pushf
cmpsl
mov
rol
popa
xchg
sub
leave
stc
mov
or
adc
fiadds
xchg
xor
xor
mov
or
inc
jb
add
dec
pop
sbb
sub
pop
test
xchg
ds
in
push
out
rcrb
adc
mov
adc
sub
or
hlt
pop
xor
add
mov
jg
adc
lock
test
dec
pop
mov
mov
das
popa
cs
push
xchg
loopne
push
pop
sbb
pusha
adc
or
cmp
push
jge
aad
cmpsb
or
sbb
daa
popa
adc
cld
jecxz
add
addr16
mov
lea
or
dec
adc
je
jp
filds
mov
mov
cli
das
cld
mov
in
and
cwtl
adc
add
add
leave
or
jle
or
aas
loope
jmp
cld
stos
call
sbb
in
jbe
or
std
xchg
push
stos
loopne
mov
loop
fmuls
loope
es
rorl
push
jge
in
pop
push
cs
jp
cmp
push
push
add
jmp
xor
das
popf
lcall
and
cmp
mov
aaa
mov
sbb
inc
and
cmpsl
push
call
pop
scas
cmp
cmp
xchg
mov
rcr
std
push
pop
mov
xor
xor
add
mov
ja
adc
xor
push
dec
pop
and
add
add
in
andl
mov
xchg
and
or
subb
mov
insb
mov
mov
cltd
pop
sub
out
sbb
inc
addb
push
clc
mov
mov
icebp
jae
adcl
lock
push
cmp
cs
push
aaa
xchg
shll
mov
cmpsl
icebp
pop
push
data16
pop
xchg
into
mov
test
jo
pop
test
ja
cwtl
adc
push
sub
cmp
andl
add
pop
add
push
or
ja
xor
aaa
push
lods
shll
test
push
jle
cmpsb
sub
or
jb
xchg
test
andl
or
push
add
mov
xor
jp
jp
add
adc
inc
and
outsl
lea
xchg
add
pop
add
ficompl
test
dec
popf
pop
cmp
push
mov
insb
pop
or
shlb
test
adc
sub
dec
enter
mov
fsubr
lret
pop
testl
decb
mov
imul
rcl
cmp
inc
mov
nop
into
push
jmp
pop
pop
jnp
push
jmp
xor
and
or
stos
pusha
bound
inc
idiv
fnsave
push
rorl
pop
lock
add
cmp
addl
cld
xchg
rclb
cltd
mov
dec
loope
push
movsl
divl
add
inc
andb
cwtl
xchg
int
jb
or
les
insb
cmp
lret
ljmp
pop
sbb
inc
jmp
in
fstl
dec
std
add
mov
adc
and
push
mov
std
mov
jnp
lret
add
inc
in
sub
fs
test
movsl
jle
fiadds
xchg
add
sub
cld
das
pop
xor
pop
insb
loop
aad
adcl
leave
sti
xchg
frstpm(287
jecxz
and
push
and
rorb
testl
loopne
sahf
and
push
inc
mov
sbb
dec
and
cmp
add
inc
mov
stos
roll
imul
test
aam
sti
rolb
clc
das
adc
mov
and
inc
nop
inc
mov
out
mov
cmp
bound
fadds
ret
gs
cmpsl
adc
or
add
outsl
adcb
cmp
push
aaa
xchg
inc
movsb
std
sub
mov
cmp
and
andl
in
aam
xor
cli
add
inc
inc
push
insl
sub
pop
xchg
mov
mov
or
mov
out
pop
dec
orb
jmp
cld
jne
jo
inc
aas
push
fiaddl
inc
mov
mov
push
inc
scas
clc
add
or
movsb
in
xor
or
test
unpckhps
in
cwtl
mov
test
push
add
imul
aam
pop
clc
aad
jp
icebp
mov
lret
hlt
inc
aam
popa
sbb
pop
or
ja
scas
mov
mov
jg
lock
mov
pushf
add
test
push
decb
fisttpl
test
cmpsb
rcrb
hlt
push
ret
arpl
cmp
jo
xor
push
push
and
adc
mov
xchg
cmp
jle
jno
add
or
inc
popf
daa
jns
lock
imul
ret
push
sub
je
subl
inc
imul
inc
mov
pop
jmp
cmp
mov
ret
orl
sbb
test
in
mov
jns
mov
pushf
cmp
mov
sub
loopne
pop
loop
dec
or
xor
or
js
mov
into
jp
out
sahf
mov
fwait
jmp
std
xchg
sbb
and
xchg
lock
cltd
lods
mov
xchg
and
cli
mov
add
aad
stos
cmpsl
adc
mov
mov
mov
jg
incb
pop
iret
incb
jmp
xchg
daa
xor
or
mov
push
imul
std
mov
dec
test
in
dec
add
into
and
sub
cmpsb
sbb
mov
imul
xor
sub
dec
dec
lods
icebp
xchg
adc
rorb
iret
push
inc
lods
push
mov
push
imul
imul
dec
insb
xor
inc
xchg
cmp
les
adc
cmc
loopne
or
pusha
pop
jmp
pop
ret
add
mov
pop
mov
out
subl
das
or
add
jb
movsl
cmp
imul
dec
cmc
stos
movsl
sbb
cmpl
int3
sub
ja,pn
xor
into
notl
mov
sbb
add
dec
xchg
bound
mov
jecxz
fmul
jbe
jle
dec
mov
ds
ss
sbb
push
jp
add
push
jbe
add
ljmp
adc
gs
cmp
xor
loopne
xchg
adc
lret
imul
dec
mov
mov
leave
inc
push
jmp
lods
sub
shlb
arpl
cmp
pop
cld
xor
or
in
test
or
push
icebp
iret
scas
pop
fwait
and
idivl
pop
jb
scas
addr16
add
testl
loope
stc
adcl
inc
leave
sti
adc
fidivrl
sti
xlat
jo
je
subl
sbb
and
cli
std
jo
out
cmp
mov
mov
pop
rcll
xchg
cli
xchg
jbe
push
fisubl
mov
push
sub
out
in
and
push
inc
inc
and
or
dec
fsub
std
and
cmp
pop
xchg
pushf
mov
dec
test
xchg
and
sysret
shrb
cmp
stos
sub
jbe
xor
and
arpl
add
mov
xor
or
fwait
scas
js
push
lahf
push
fisubrl
push
xor
out
dec
stos
mov
and
pop
sub
pop
dec
xlat
inc
aas
and
neg
cwtl
mov
lods
push
and
adcl
mov
pop
popf
or
int
es
aad
fisttpl
push
lds
sti
adc
sub
orb
xchg
sbb
pop
add
mov
jmp
dec
xchg
rorl
inc
jmp
into
mov
push
push
ror
in
push
movsb
stc
cmc
pop
ljmp
xchg
aaa
movsl
mov
lods
enter
jns
mov
iret
xor
dec
mov
cli
aam
pop
xor
pop
test
mov
pop
mov
ror
in
add
int
dec
sbb
mov
dec
pop
aas
jle
adc
and
jge
loope
daa
push
pop
cmpsl
cmp
cmp
pop
lods
or
out
ss
xchg
in
ficoml
mov
fwait
sbb
popf
dec
cmp
aam
add
pusha
xchg
lock
xchg
je
push
popf
repnz
sub
and
loope
mov
jg
dec
add
mov
repz
dec
dec
dec
movsl
pusha
orb
in
xor
pop
or
inc
call
insl
test
es
mov
pushf
sbb
pusha
inc
dec
adc
sarb
inc
jg
xchg
adc
aam
jo
test
shll
les
add
data16
mov
xchg
dec
dec
inc
push
test
pop
mov
icebp
and
xor
in
movsb
nop
js
pop
test
mov
sub
mov
adc
mov
adc
imul
xchg
fiaddl
or
pop
arpl
push
jge
jl
xchg
aaa
cs
xor
or
push
enter
ds
push
or
pop
jmp
dec
mov
and
popf
push
or
xchg
loopne
inc
popf
int
mov
in
xor
call
mov
in
ret
adc
adc
sbb
pop
push
in
das
ret
dec
rorl
mov
je
xchg
fcom
mov
xchg
jo
cmp
push
push
out
mov
loopne
popl
aaa
jne
jmp
inc
jecxz
adc
dec
stc
xchg
fucomp
inc
mov
push
add
ret
push
push
je
jb
jbe
fmull
gs
jbe
pop
mov
sub
jbe
ret
dec
jmp
sbb
adc
cwtl
enter
and
add
subb
pop
cld
mov
jmp
sbb
test
dec
in
lods
inc
cld
xor
add
sbb
xor
sbb
popf
push
mov
mov
xor
sbb
orl
pop
in
push
sbb
pop
scas
inc
mov
mov
leave
in
inc
pop
mov
xor
sub
shlb
ds
mov
lret
dec
cmp
scas
aad
js,pn
cli
inc
lds
pusha
sub
imul
in
mov
jo
cmp
lcall
or
cli
pop
pusha
push
and
insl
pop
mov
insb
nop
mov
jp
sub
scas
out
mov
fiadds
push
pushl
shr
test
pop
mov
dec
push
xchg
pop
or
lret
ds
mov
mov
adc
ficomps
sub
mov
andb
scas
scas
cmpsb
icebp
mov
mov
jmp
lock
push
xchg
data16
jo
xchg
mov
or
add
mov
sahf
lock
adc
movsl
dec
mov
xchg
ljmp
pslld
dec
mov
pushf
pushl
jo
adc
les
sub
gs
rol
jg
sbb
les
popa
out
add
adc
mov
lds
inc
je
xchg
add
cmpsl
in
xlat
xor
mov
loope
sbb
in
cmp
jno
jle
ljmp
loopne
pop
or
dec
in
mov
cmp
insb
jno
movsb
in
clc
pop
mov
mov
fstpt
jecxz
stos
ds
pop
movsb
and
ss
cmpb
cmp
mov
ljmp
adc
pop
inc
sarb
lods
sti
pushf
movsb
pop
sbb
test
mov
xchg
ss
mov
adc
sbb
and
push
repz
jmp
subb
and
xor
mov
lods
jo
mov
clc
pop
sub
mov
sub
sbb
and
scas
or
xor
js
jmp
push
mov
ror
or
rcrb
push
hlt
iret
jl
inc
jp
lds
lock
xchg
nop
push
add
ljmp
rcl
cmp
push
pushf
mov
mov
add
loope
adc
or
ss
xchg
insb
imul
cmp
sti
daa
divb
std
in
mov
test
mov
test
dec
push
mov
xchg
pop
lret
jp
int
cmpb
or
cmp
adc
push
jl
lret
cmpb
clc
dec
cltd
sub
add
lret
pop
les
push
sub
enter
mov
pusha
jecxz
mov
cwtl
std
bnd
push
push
repnz
fwait
das
fmull
or
popf
mov
mov
xchg
add
aam
lret
aas
or
push
lea
pop
shr
insb
rolb
add
stos
test
sarl
cmpsb
add
mov
adc
adc
pop
cmp
mov
xchg
mov
test
jge
pusha
pushl
xchg
cmp
ds
xlat
loope
mov
pushf
or
and
es
xor
jbe
in
cmp
or
pop
cltd
rclb
outsb
xchg
dec
ret
jle
fwait
jmp
movsb
mov
push
cmc
xor
inc
jl
cmp
movsb
scas
daa
fiaddl
sub
iret
add
cmpsb
js
out
fisttpll
mov
push
push
out
fwait
test
ljmp
add
popa
test
sbb
mov
jecxz
test
inc
es
jne
mov
xor
test
pop
rclb
cmp
cmp
mov
call
shll
cmc
inc
or
adc
inc
in
dec
mov
sbb
insb
enter
test
pusha
roll
mov
pop
int
call
fcomps
test
adc
dec
inc
sbb
dec
mov
aad
push
ret
push
xor
sahf
lds
mov
in
sar
push
lock
pop
imul
ljmp
add
movsb
rcrl
rolb
mov
mov
test
call
push
fadds
or
and
lahf
sahf
nop
loopne
xchg
in
sub
add
xor
push
mov
jne
mov
adc
jno
xor
or
sub
or
mov
lock
xor
inc
or
jns
mov
popa
dec
clc
xchg
cli
movb
add
cmpb
adc
sbb
je
aad
push
aam
mov
cmp
xchg
nop
adc
popf
cmpsb
cmpsb
xchg
mov
lods
inc
das
jp
xor
loop
or
sub
es
add
clc
xor
cld
loope
lock
xor
shll
mov
js
mov
mov
mov
push
insl
movsb
add
nop
pop
push
shlb
inc
or
add
pop
sbb
xchg
stc
xor
sarl
sbb
lret
nop
xchg
push
fmull
jg
xchg
clc
fistl
jb
mov
sub
jl
sbb
xchg
ss
mov
loopne
out
repnz
int
mov
pop
test
xchg
xor
lds
sub
loop
int
fisttps
adc
nop
mov
xlat
lock
vmovdqu
mov
in
out
sub
mov
xor
mov
outsb
push
clc
pusha
pushf
pusha
jl
pop
cli
popa
loopne
dec
lret
adc
adc
out
test
push
inc
stc
mov
pop
mov
inc
mov
mov
mov
out
loop
jo
xchg
cmp
notl
or
pusha
jb
mov
sub
push
mov
outsl
fdiv
fistpl
or
mov
add
jne
clc
xor
mov
mov
addb
call
push
icebp
sbb
pop
ljmp
into
mov
add
mov
imul
xchg
rcrl
ds
outsb
xchg
out
add
dec
outsb
test
add
sbb
xchg
or
add
call
push
or
jmp
pop
push
or
insb
sbb
lods
cwtl
push
mov
jae
and
xor
adc
mov
inc
insb
push
sub
push
idiv
add
lea
add
pop
sahf
lret
into
aas
inc
loope
cwtl
es
fcmovb
ret
clc
pop
or
arpl
subb
xlat
mov
lcall
cmp
xor
fcoms
sbb
ja
push
cli
push
ljmp
mov
push
xlat
jecxz
test
pop
lahf
jbe
push
mov
dec
and
inc
ret
adc
add
mov
mov
mov
jb
mov
pop
out
mov
add
jbe
aam
pop
inc
fdivs
icebp
push
sbb
adc
rcll
fmull
cwtl
inc
push
sbb
add
out
add
je
and
testb
push
push
dec
out
pop
sbb
aaa
test
cs
and
xchg
push
add
cwtl
pop
icebp
shl
sbb
sbb
or
das
clc
push
mov
push
push
dec
int
pop
out
aad
add
xchg
movsl
add
mov
add
dec
adc
jecxz
pushl
mov
mov
push
clc
jge
mov
addl
sub
mov
add
imul
pusha
shlb
mov
add
xor
jmp
sbb
mov
add
sbb
das
dec
pop
sbb
add
mov
and
cmpsb
and
cli
daa
test
call
push
insb
push
fucomp
repnz
mov
shl
xor
and
call
lahf
inc
stos
fdiv
inc
data16
hlt
cmp
clc
outsb
jb
cmp
mov
imul
in
mov
add
xchg
jnp
push
jno
pop
inc
insb
jbe
adc
js
loop
cwtl
dec
xor
in
inc
clc
add
jmp
or
test
mov
ror
inc
ljmp
mov
rolb
sar
push
jle
sarb
adc
arpl
pop
cmp
adc
adc
mov
lcall
xchg
js
pop
aam
ret
call
jmp
hlt
lahf
lods
loopne
scas
idivb
push
xchg
add
icebp
jecxz
adc
jno,pn
mov
test
sbb
mov
add
daa
jmp
adc
push
js
aad
push
aam
sub
out
mov
push
sbb
xlat
ret
add
sub
mov
jbe
adc
xor
enter
cmp
stos
aad
ljmp
mov
ficoms
jle
test
inc
push
adc
ficomps
dec
shll
orb
insl
repz
cmpsl
pop
xchg
cmp
add
adc
jo
adc
clc
sarb
aaa
dec
sub
pop
mov
pop
or
add
mov
mov
loopne
inc
pop
add
dec
shrl
xchg
mov
out
stc
loop
mov
call
mov
aad
jg
sarl
push
or
dec
call
or
cmpl
test
or
pusha
pop
ja
push
jne
scas
hlt
in
je
loop
add
je
js
sbb
aas
adc
xorb
cmpsb
sbb
stos
push
cmp
mov
sub
pop
gs
mov
lods
aam
mov
pop
lock
addl
gs
sar
mov
fdivl
mov
jp
sbb
push
shll
lea
xchg
adc
inc
add
xchg
fimuls
out
mov
cmpsb
jae
mov
push
adc
cmp
ret
adc
sub
xchg
inc
add
jg
dec
repnz
and
pop
lods
pop
mov
mov
pop
andl
iret
push
in
out
mov
shrb
jecxz
and
sub
mov
gs
push
or
pop
mov
ss
mov
inc
xchg
push
popa
jecxz
cmp
ret
mov
adc
cmp
add
and
dec
loop
lods
xchg
adc
loop
xor
push
pushf
stos
inc
lock
or
push
mov
adc
call
inc
pop
or
dec
lods
inc
add
inc
shlb
scas
push
jecxz
les
and
int
or
mov
mov
lret
fsubrl
test
jbe
addl
mov
push
sti
sub
cld
data16
testb
xor
shll
jp
lock
pop
inc
int
int3
rclb
pop
lock
stos
mov
cmp
sbb
add
jno
rorl
stos
cmp
in
jp
rol
cli
lods
pop
pushf
mov
in
test
je
ud0
ljmp
xor
pop
push
outsb
push
lahf
and
das
test
cld
or
scas
lock
es
mov
movsb
add
mov
es
ret
frstor
mov
sub
or
imul
pop
add
out
sub
cmp
out
mov
push
outsb
sub
sti
xor
outsb
das
mov
cmpl
popa
sti
test
jne
rclb
inc
jl
imul
and
adcb
pop
pop
xchg
jle
out
test
subb
dec
cmp
mov
test
mov
adc
cmpsb
sub
pop
and
add
and
inc
cmp
popa
sbb
imul
je
push
aas
call
lea
test
jmp
sub
fcmove
push
sbb
mov
loop
push
ficoml
orb
mov
pop
mov
mov
and
ja
ss
add
je
divl
mov
and
jmp
int
lods
rcr
push
aad
lods
adcb
sahf
sbb
pop
mov
cli
xchg
xorl
sbb
cmp
pop
std
add
push
cmp
add
movaps
mov
movsb
add
jae
xor
xor
test
add
lds
imul
mov
pop
into
pop
mov
and
add
imul
test
mov
sbb
mov
outsl
pushl
cs
inc
inc
stos
cmp
pop
jo
cmp
mov
pop
cs
mov
mov
sbb
and
mov
sahf
xchg
outsb
or
fidivs
jl
mov
push
sbb
mov
repz
call
icebp
xor
or
pop
test
jno
icebp
sahf
or
jb
and
notb
clc
mov
mov
inc
mov
add
mov
mov
pop
sbb
cld
or
sbb
xlat
icebp
lock
add
and
pop
push
ja
or
add
add
inc
push
push
push
push
fisubrs
xchg
sti
lcall
cmp
xor
pop
cmpl
jno
jb
add
adc
pop
mov
add
cmc
mov
jo
pop
sti
movsb
test
imul
jmp
stos
mov
stos
orl
add
mov
inc
sbb
pusha
mov
sbb
andl
cmpsb
ljmp
sub
mov
out
cmp
adc
pusha
dec
or
dec
sti
sarl
adc
cmp
test
ret
or
and
inc
fisubs
jb
dec
mov
bound
aaa
lock
adcl
cwtl
inc
loopne
rcrb
lods
mov
xor
push
inc
movsl
shl
into
push
aas
pop
call
cmpsb
pop
test
xor
outsb
xor
loop
divl
mov
push
mov
das
andb
lret
and
aad
out
or
fisttpl
jmp
lret
mov
mov
lods
push
jl
add
xchg
nop
add
nop
xchg
adc
add
ljmp
inc
fldlg2
push
inc
scas
jno
mov
in
das
mov
movsl
and
ja
rclb
mov
dec
and
sub
int
loop
insl
xchg
cld
push
mov
outsb
pop
add
add
cmp
aaa
add
xor
insb
jge
pop
pop
int3
mov
pop
jbe
test
call
stos
out
mov
mov
cmp
pop
xchg
inc
sbb
out
dec
aas
cmp
mov
hlt
insl
aas
sub
push
js
shl
jno
addr16
pusha
inc
mov
rcr
dec
ror
adc
or
scas
pop
sbb
sbb
cmp
subb
mov
mov
cs
xor
aad
hlt
adc
loop
mov
imul
mov
mov
and
sbb
aad
xchg
test
inc
rorb
int3
mov
adc
mov
xlat
test
stc
and
or
add
add
adc
fnsave
xchg
adc
filds
icebp
pop
xor
subl
mov
incb
or
push
dec
push
and
andl
ja
fidivl
add
jns
push
addr16
inc
pushf
dec
mov
lods
out
pop
pop
ljmp
adc
popa
or
sub
imul
les
xlat
clc
pop
jb
jnp
outsl
mov
add
jmp
push
sub
cmp
add
hlt
fsubl
jns
orl
dec
inc
add
xchg
pushf
test
pop
sbb
div
xchg
mov
mov
pop
pop
out
and
cmp
jl
pushf
mov
cmc
mov
xchg
leave
add
adcl
push
adc
and
cmpl
addr16
lret
loopne
jbe
pop
xchg
xlat
push
ja
test
setle
mov
cltd
cmp
sbb
lods
lret
sbb
and
cmp
sbb
ljmp
inc
add
in
xchg
dec
clc
idivb
pop
dec
xchg
push
lds
sbb
mov
or
jl
jle
mov
stos
pusha
jno
mov
add
xor
fdivr
jae
dec
cmp
gs
shll
test
or
mov
fchs
je
clc
inc
pushf
xchg
and
add
fwait
jp
push
sbb
jle
mov
push
incb
scas
lahf
add
add
xchg
mov
sti
jmp
scas
add
sub
int3
ljmp
rcl
addr16
insl
push
add
in
pop
jmp
inc
jecxz
pop
push
adc
cwtl
jecxz
cmp
into
aaa
xchg
adc
xchg
out
sbb
lods
aad
jne
xchg
sub
mov
ja
es
add
xchg
arpl
fwait
fwait
movsb
and
adc
push
shlb
cmpb
lret
push
into
ljmp
adc
jmp
and
movsb
testb
icebp
add
rcr
test
inc
fcoms
fadds
mov
jo
je
mov
add
mov
je
or
sbb
es
aas
jo
mov
cli
ss
add
pop
or
xchg
lock
adc
jmp
inc
enter
nop
test
ja
orb
jg
pop
add
push
mov
dec
stc
fnstsw
push
sbb
in
push
jle
inc
je
sbb
test
jl
push
fcomps
ljmp
jmp
cmp
push
js
inc
lock
and
dec
sti
cmc
subl
lahf
inc
cmpsl
sti
insb
mov
repz
lret
addl
outsl
jecxz
cmp
out
xlat
stc
add
pushl
pop
push
dec
mov
mov
xor
in
inc
pop
xchg
pop
int3
mov
cmp
shll
jl
icebp
das
ds
jns
dec
mov
mov
shl
filds
pop
nop
xorl
cmpsl
addb
loope
push
mov
out
aas
lea
mov
and
jle
mov
aam
or
mov
mov
cmc
fld
sub
cmp
in
sub
push
jb
push
add
hlt
adc
push
je
inc
jae
sbb
out
test
loope
xchg
xchg
insb
adc
insb
mov
data16
mov
stos
add
scas
add
push
and
loop
xor
or
sub
mov
jge
pop
lds
pop
es
push
inc
inc
daa
daa
lods
adcb
pop
sub
mov
stos
mov
shr
push
test
aam
inc
jnp
shrl
add
dec
stc
mov
sbb
aad
sbb
je
movsl
or
das
lea
xchg
dec
and
dec
out
rcrb
call
jo
fcmovnu
or
and
jno
cli
out
xor
jbe
enter
mov
call
sbb
inc
cs
outsb
stos
mov
rorl
loopne
and
or
push
arpl
stos
pop
xor
gs
xchg
cmp
imull
pushf
inc
jl
insl
mov
sub
mov
lcall
ljmp
adc
adc
ja
pop
je
test
stos
push
adc
pusha
mov
adc
inc
std
dec
xorl
sub
cmp
adc
and
pusha
mov
mov
or
popa
iret
or
sub
adc
ss
clc
jle
mov
push
repz
dec
imul
mov
clc
loop
add
pop
adcl
cwtl
mov
inc
test
xchg
fstps
and
maxps
addb
inc
cmpsb
jb
pop
dec
dec
mov
fdivl
pop
subl
cmp
fistpll
mov
shlb
fimull
xchg
add
lret
repz
scas
adc
movsb
popa
jp
cmc
jmp
inc
in
lods
not
jl
jg
loope
or
cli
xor
dec
sbb
shlb
rcrb
call
push
fldt
mov
push
jo
test
dec
ret
adc
cltd
loope
push
mov
adc
and
push
and
popa
or
fmuls
add
mov
mov
push
add
shll
js
pushf
sbb
add
add
dec
loopne
mov
adc
mov
inc
xor
rcrb
inc
shl
pop
pop
push
mov
outsb
push
jb
xor
gs
inc
lahf
add
sbb
push
sub
fisubrs
jecxz
hlt
pusha
cmp
popf
sbb
inc
mov
loopne
or
inc
push
pushf
pop
or
jns
push
push
pop
lret
inc
test
in
fdiv
stos
lock
loop
mov
arpl
jbe
or
xchg
mov
je
cltd
test
lds
out
dec
adc
add
and
push
push
imul
rcrb
aaa
xor
call
in
ss
or
lahf
arpl
push
and
test
loope
mov
mov
or
addl
mov
shlb
mov
aad
in
mov
mulb
inc
dec
sub
xlat
sbb
push
cwtl
pop
and
or
jbe
or
adc
je
mov
mov
je
sub
movsl
pop
add
aaa
fsubrp
and
popf
testl
dec
xchg
jb
mov
cmp
lods
or
or
inc
call
push
mov
outsl
xorl
pop
xorl
push
test
hlt
adc
aaa
add
xchg
into
js
dec
push
or
scas
lds
stc
lea
mov
ds
jge
dec
shll
push
push
push
shlb
xor
or
mov
mov
out
add
roll
or
sub
and
sub
les
inc
cld
jns
and
sbb
xchg
push
mov
popf
push
adc
add
daa
pushl
and
repnz
add
pop
movsl
pop
movb
add
cmpsb
test
in
and
push
cmc
mov
pop
lods
inc
jle
mov
addr16
cs
iret
mov
pop
js
push
sub
adc
xor
or
decb
cmp
subl
mov
add
je
out
mov
shll
push
pop
insb
mov
mov
scas
mov
out
ss
pop
and
mov
jmp
sbb
xor
jo
int
scas
lock
push
pop
and
aas
mov
or
mov
fcomip
lret
imul
aaa
sar
lock
test
dec
enter
inc
enter
je
jbe
dec
mov
pop
stos
test
inc
dec
and
dec
push
movsl
mov
sub
jp
jo
out
mov
sbb
mov
ja
out
sub
sub
adc
sbb
adc
aam
std
jge
call
sbb
xlat
adc
sar
lds
lahf
int
ret
sub
or
push
cmp
push
int
mov
ffreep
push
sbb
pop
cmp
mov
inc
pop
push
push
shrb
mov
cmp
out
xor
dec
pop
or
jecxz
sbb
inc
test
xchg
xor
sub
fdivrs
sbb
adc
cmp
test
push
and
cmp
lock
inc
out
pop
shrb
add
daa
test
scas
rclb
fs
and
cld
and
pop
pop
cmp
clc
jbe
sbb
and
mov
add
xchg
dec
xchg
aam
mov
xor
push
xor
cmp
fildl
cwtl
jb
xchg
mov
mov
cli
adc
bound
xor
stos
lahf
xor
arpl
les
rclb
fcmovne
fucomip
cld
adc
inc
push
push
sahf
inc
pushf
cli
jecxz
mov
cmpsb
roll
jp
jp
mov
mov
jp
add
xor
ret
gs
into
les
and
int
and
cltd
icebp
ja
sbb
jne
jle
call
cmp
repz
pop
scas
ljmp
out
or
pop
scas
movsb
sub
push
les
xchg
lret
mov
push
int3
orl
fisttpll
aam
fwait
or
inc
sbb
outsb
cmp
adc
icebp
mov
cmc
ret
bnd
imul
nop
subl
xchg
jecxz
mov
in
loop
fcmovb
std
lock
loop
ret
pop
push
mov
lret
fsubl
sub
fiadds
lea
test
roll
push
xchg
imul
dec
xchg
shlb
movsl
fnsave
ret
loop
loopne
cld
xchg
mov
pop
out
add
pop
xlat
je
adc
hlt
jne
hlt
cwtl
out
ret
or
mov
outsb
mov
icebp
aaa
rorl
sbb
inc
inc
repnz
adc
inc
xor
xchg
xchg
inc
js
jno
push
xor
stos
pop
mov
pop
inc
aaa
cmp
hlt
test
mov
pop
add
dec
scas
mov
fsubrp
fistl
lcall
arpl
andl
or
aam
adc
shrl
js
mov
clc
cld
popf
cmp
sub
cmp
adc
fcomps
mov
lahf
ss
orb
in
mov
push
add
inc
rorb
in
push
mov
jp
inc
in
xchg
div
push
push
loop
mov
dec
lret
fwait
cmp
pop
adc
neg
pop
pop
push
jmp
outsb
dec
adc
lcall
loope
mov
mov
movsl
mov
mov
mov
ret
pusha
dec
inc
inc
inc
sti
jg
or
sub
mov
jmp
dec
outsl
bound
sbb
shrb
call
enter
aaa
faddl
rcrb
or
mov
cmp
dec
xor
add
fidivrl
inc
mov
repnz
inc
jmp
fsubs
mov
int
enter
mov
fs
push
les
shl
mov
push
mov
cmp
push
pop
push
jo
pop
mov
push
push
mov
loopne
stos
cmp
imul
aam
xor
enter
push
pop
js
xchg
adc
gs
repz
and
mov
inc
in
in
vmovaps
es
out
sti
adc
adc
cmpsb
ret
or
cwtl
repnz
shlb
mov
loop
xchg
inc
pop
sbb
mov
aas
add
ret
lahf
mov
sahf
das
mov
add
xchg
xor
or
shl
fldt
mov
mov
das
xsha1
cmpsb
push
add
xchg
cli
je
xor
push
xchg
aad
outsb
mov
cmp
test
sbb
cli
adc
adc
arpl
jo
cli
insb
stc
and
push
adc
lea
or
movsl
or
addr16
aas
lock
cld
ds
pop
xchg
sub
push
stos
popf
mov
inc
adc
arpl
jbe
outsb
jb
idivl
inc
orl
add
jb
mov
sbb
test
inc
dec
ret
fisubs
cs
add
lcall
adc
ljmp
pop
arpl
rorl
pop
jmp
fisttpl
icebp
xlat
mov
mov
mov
lods
js
fmuls
sub
mov
xchg
pop
sbb
cmpb
in
adc
xor
cwtl
pop
sub
rcrl
add
cmp
mov
and
push
mov
push
mov
les
pop
pop
mov
push
adc
pop
jle
aaa
mov
mov
rorl
push
bound
es
pop
loopne
arpl
cmp
push
and
add
cmp
je
push
xor
subl
or
ss
push
lock
inc
xor
xchg
jle
mov
sbbl
or
fsubrs
jge
pop
and
jmp
sub
out
testb
or
outsl
lock
adcb
adc
lret
sub
mov
je
sahf
mov
pusha
xor
test
mov
mov
and
pop
loop
xchg
hlt
sub
lods
xlat
lds
out
js
sub
nop
aaa
loop
lock
cmp
xor
jb
cmp
call
ds
fs
es
testb
insb
or
xor
aas
divb
jne
fsubr
stos
pop
add
sbb
sbb
xor
stos
sarl
pushw
out
jle
cs
mov
sbb
fs
jle
push
int
add
push
cmp
inc
add
pushf
test
into
push
mov
or
cmp
pop
loope
lock
lret
inc
jge
add
mov
push
enter
cld
pop
scas
mov
fisttps
movsb
add
scas
cmpsl
xchg
jl
xchg
bound
inc
pop
hlt
and
lret
lock
scas
pop
jb
addb
and
cmp
sarb
repz
xchg
adc
mov
adcb
jecxz
test
jns
jmp
adc
jecxz
test
or
mov
arpl
jbe
mov
addb
jno
fwait
es
andl
mov
mull
sarl
fwait
aaa
data16
or
addr16
xor
les
nop
dec
cmp
jmp
cmp
push
xor
push
repnz
aaa
mov
sarb
and
mov
rcl
mov
xor
fcoms
push
lahf
cmp
imul
out
jmp
or
hlt
fidivl
jns
mov
add
mov
pusha
js
jecxz
jl
into
call
imul
cli
push
or
into
scas
sub
inc
cld
daa
xor
xchg
dec
xchg
push
fwait
test
int3
mov
pop
std
lds
decb
movsl
mov
push
and
pop
rolb
mov
scas
adc
cs
cmp
adc
cmp
call
jo
int3
jno
lods
andl
push
ss
xchg
test
adc
sbb
je
das
or
inc
mov
cmp
rorb
or
cld
enter
mov
inc
sub
dec
mov
popa
mov
push
lea
roll
jl
je
jl
cld
push
arpl
jno
out
mov
push
jbe,pn
inc
inc
fs
into
out
jge
icebp
pop
dec
decb
sahf
in
lret
hlt
icebp
xchg
jg
aad
into
mov
or
jl
push
dec
ret
in
xchg
mov
incb
inc
jo
mov
lcall
lcall
jnp
cli
ficompl
or
or
test
xor
push
push
sub
add
mov
add
jbe
push
fmull
insl
and
out
ja
sarb
jecxz
clc
insl
int
add
nop
sub
rorl
mov
sub
adc
push
push
negb
rol
minps
dec
and
ffree
bound
push
push
cmp
rolb
jbe
mov
shrl
inc
jp
push
xchg
es
inc
stos
inc
daa
push
push
insb
test
mov
ljmp
pop
movb
or
push
or
cld
xchg
or
adc
decl
adc
mov
testl
pop
jge
mov
push
repnz
aad
std
sbb
xorb
daa
sbb
sahf
push
adc
push
mov
daa
jmp
pop
or
push
pop
xchg
cmp
inc
cmpsl
or
xchg
sub
roll
fisubs
xor
mov
ficoml
mov
push
mov
pop
pop
xchg
call
sti
aam
mov
pop
cld
mov
push
dec
pop
cmpsl
scas
sub
mov
or
fsubrl
loopne
ficoml
mov
adcb
mov
ficoms
adc
fisttps
outsb
push
mov
sub
sub
jbe
mov
sub
orb
lods
adc
push
push
sub
and
stos
repnz
xor
fdivr
sahf
jb
mov
cli
outsb
pop
imul
mov
push
loopne
scas
adc
and
push
jp
jg
pop
pop
adc
inc
sti
enter
add
test
xchg
sbb
push
cmp
jo
rolb
bound
rcll
insb
mov
fwait
lret
mov
fcoms
dec
adc
bound
loopne
xor
jge
mov
movsl
in
push
add
pusha
jecxz
xchg
stos
sahf
popa
pop
or
mov
pop
add
add
sub
loopne
push
mov
add
icebp
add
fisubrs
pop
cmp
ffree
xchg
fdivrl
sbb
dec
sub
mov
xor
aas
sub
or
sub
mov
jp
add
and
jo
xchg
sbb
lock
ss
cmp
test
ficoml
imul
js
in
in
hlt
bound
xor
adc
inc
bound
fcmove
ss
lcall
push
pop
mov
lods
mov
or
pushf
bound
dec
jl
xor
imull
addl
sub
mov
push
mov
fdivp
inc
and
push
mov
and
adc
pop
mov
lahf
adc
push
lock
xor
jo
je
fistpl
jle
testl
jl
xchg
scas
stos
or
lods
movsl
xor
data16
hlt
std
push
mov
push
push
adc
enter
aaa
loop
push
ss
test
adc
pop
fcmovnb
dec
leave
xchg
mov
push
loop
je
mov
push
mov
mulb
add
notb
adc
push
sbb
outsb
sar
pop
je
adc
outsb
adc
adcb
idivb
loop
cwtl
xchg
cmpsb
jmp
enter
std
sub
clc
ss
lods
inc
adc
and
or
jo
and
les
pusha
sbb
push
decb
pop
sbb
pop
add
lea
out
jb
lea
js
adcl
jb
outsl
les
into
repz
ret
cmp
and
sub
bound
movb
sahf
inc
jnp
inc
loopne
aas
ret
out
or
sbb
mov
hlt
addr16
fstp
test
push
mov
mov
aam
daa
jle
jbe
jg
cmp
cmp
test
fidivs
or
mov
jge
bound
add
decb
add
js
arpl
ror
arpl
jle
xchg
add
lock
pusha
lds
pop
dec
mov
sub
sub
push
dec
mov
sub
frstor
outsl
xchg
dec
mov
adc
xchg
rolb
xorl
mov
jl
jp
sbb
mov
dec
and
sbb
push
inc
mov
jge
sub
jmp
cmp
test
fs
xchg
loop
hlt
mov
jecxz
inc
mov
ds
jle
insb
fstp
push
mov
fdivr
and
pop
fs
jnp
and
add
mov
jge
sbb
xor
adc
movsb
ret
or
inc
or
fimull
xchg
loope
sbb
inc
mov
pop
add
decl
pop
or
dec
idivb
add
call
rcrl
xor
add
loopne
or
insb
clc
cwtl
lods
add
push
adc
inc
inc
sti
shlb
add
lods
pusha
mov
cmp
inc
jle
pop
sub
test
imulb
sub
pop
inc
adc
aam
mov
popf
mov
cmp
cmp
je
add
mov
les
ficompl
sbb
or
sub
add
ss
xorb
jge
adc
or
loop
pusha
mov
cmp
js
aas
loopne
inc
cmpsl
add
add
jl
mov
dec
mov
ljmp
mov
sbb
sahf
in
cmpsb
aam
xchg
sub
sbb
cli
mov
jg
in
sub
fcomi
or
add
jl
test
hlt
subl
test
add
sub
cltd
sbb
in
mov
pop
loop
in
dec
inc
lock
jge
mov
cmovg
jl
bound
mov
sbb
jle
ss
lock
in
cmp
iret
inc
push
cld
fildl
scas
cld
mov
ss
ss
mov
push
sub
cmp
mov
xchg
xchg
adc
hlt
imul
push
ret
mov
loop
adc
cltd
aas
rol
dec
dec
dec
popa
lock
or
jb
rcl
mov
sahf
pop
mov
notb
adc
mov
mov
adc
dec
test
hlt
ljmp
cwtl
repnz
imul
push
push
xchg
outsl
repz
lods
fcomps
xor
dec
ja
stos
lret
or
movsb
add
xor
mov
or
dec
popa
and
xor
movsb
jmp
cmp
outsl
mov
out
mov
pop
bound
popa
and
sub
sbb
or
add
js
pop
xlat
push
push
movb
xor
adc
lcall
inc
stos
mov
mov
mov
cli
add
xchg
sbb
jl
sbb
add
sbb
aas
adc
int
xor
jo
fiaddl
outsb
in
adc
lcall
rcr
in
lods
fstps
inc
test
or
out
mov
jae
fs
push
loop
inc
clc
ret
add
sti
movsl
cmpsb
dec
lods
jecxz
mov
lds
xlat
push
dec
mov
es
orl
mov
add
pusha
repz
imul
jg
and
out
out
jae
out
scas
jg
ja
outsl
cmp
and
mov
popf
stos
adc
jns
push
fisttpl
dec
outsb
test
lret
inc
cld
xchg
jns
rolb
data16
mov
clc
mov
loopne
es
aad
inc
cmp
movsl
loope
cltd
subb
cmp
clc
push
xchg
inc
and
mov
out
inc
rcrb
sub
push
mov
or
jmp
adc
mov
adc
pusha
mov
sub
xchg
mov
cmp
or
jmp
testl
les
rolb
jo
leave
and
test
pop
mov
jbe
movsl
repnz
inc
or
xchg
push
cmp
bound
xchg
movsl
sub
push
jg
mov
or
movsb
das
es
push
and
xchg
insl
rep
xor
dec
pop
dec
pop
ret
inc
ja
lds
mov
jb
mov
or
mov
test
mov
int3
lret
testb
or
mov
pop
ljmp
jl
test
gs
pop
push
fsubl
lock
sbb
add
mov
cmp
sub
cmp
cmp
sbb
sbb
or
cmp
icebp
pop
ja
xor
lods
shl
ror
dec
ja
outsl
leave
out
ss
sti
push
pop
xchg
dec
jae
dec
jge
jnp
add
dec
es
adc
mov
sub
xor
inc
mov
adc
adc
dec
nop
cld
sub
ret
imul
push
movsl
sub
jae
insb
xor
add
add
mov
clc
lcall
pushf
ss
enter
shl
add
gs
adc
mov
shrl
in
mov
stc
dec
fwait
jmp
cmpsl
push
loopne
inc
int3
and
push
push
mov
popl
cmpxchg
xchg
cli
push
mov
xorb
nop
mov
jmp
movsb
inc
dec
xlat
hlt
cwtl
xor
lock
rclb
dec
lahf
es
xor
xlat
loop
pop
push
jmp
clc
sub
lods
les
leave
push
mov
pop
shlb
es
xchg
mov
inc
or
shll
inc
in
out
xchg
jge
pop
push
faddp
sbb
xchg
jmp
sbb
xor
sahf
add
add
pop
add
pop
sbb
rcrl
dec
shrl
addr16
push
jne
shl
jmp
call
ja
lock
push
les
imul
lock
aas
pop
andl
jno
dec
mov
or
push
or
jbe
ss
ret
adc
add
or
dec
xchg
int3
in
xor
push
sub
pop
mov
aad
cmp
push
xor
lahf
lds
jp
aaa
out
push
movsl
mov
xchg
add
in
cmp
call
hlt
cmp
fsubl
xor
or
movhps
adc
xor
pusha
sub
aas
inc
insl
frstor
jbe
decb
dec
dec
loope
daa
mov
push
scas
hlt
lods
xchg
add
pop
or
ljmp
test
sub
dec
leave
call
pop
lock
xchg
decl
imul
gs
xor
cs
insb
add
movsl
push
ja
js
rclb
inc
xchg
mov
aad
push
add
adc
push
notb
cmp
test
xor
pop
rcrb
nop
cltd
rorb
mov
xlat
mov
jl
aas
ret
into
xor
cmp
dec
je
scas
outsl
jp
or
std
in
mov
out
imul
jmp
sub
push
std
or
jne
scas
stos
mov
cs
mov
or
clc
stos
dec
out
and
int3
fimull
leave
ss
inc
push
xor
subl
push
cwtl
mov
nop
jp
lds
mov
jp
xor
pusha
and
add
push
call
mov
sbb
imul
mov
cmovs
push
pop
nop
jnp
dec
jle
cmpsl
pop
xchg
inc
dec
lods
leave
inc
rcr
data16
outsb
adc
mov
int3
call
loope
push
mov
das
cld
out
mov
pusha
daa
ret
dec
jp
inc
movhps
pop
add
pop
add
cli
or
test
lahf
sub
mov
and
into
pop
mov
mov
cltd
out
pusha
inc
scas
outsl
inc
sub
add
adc
enter
jmp
rcl
mov
adcb
xor
push
mov
cwtl
div
push
and
cli
cmp
in
xchg
dec
add
ss
mov
in
pop
cmp
loopne
push
loopne
test
test
out
les
or
inc
pop
cmp
and
cltd
push
push
test
lcall
out
push
xchg
jo
dec
mov
popa
gs
lock
clc
xor
shlb
int3
cmpsb
cmp
clc
repnz
jo
mov
jo
add
inc
ret
test
dec
inc
addr16
icebp
pop
loopne
cmp
add
das
pusha
cmp
aad
adc
sub
jno
test
xchg
push
xchg
and
dec
cld
pop
nop
jmp
loope
mov
or
addl
xchg
cmc
jb
mov
mov
inc
loope
ds
nop
hlt
mov
addl
add
stos
adc
push
xchg
pop
ret
adc
cld
pop
icebp
insl
mov
rcrb
hlt
test
cmp
cmpsb
int
movsb
daa
xor
add
jo
popa
push
js
int3
lahf
push
add
inc
subl
cs
and
sbb
lcall
inc
cmpsl
stc
mov
pop
pop
ss
js
enter
xor
push
aam
decl
pusha
daa
les
mov
les
shrl
inc
jo
adcl
jo
int
dec
rorl
jbe
nop
popa
mov
cmp
sub
bound
mul
scas
fsts
push
cmc
out
and
das
ljmp
cmp
js
in
add
outsb
dec
push
or
pop
loop
dec
and
movswl
jl
in
rcrb
mov
dec
dec
jmp
push
fldt
push
push
rcll
mov
push
clc
fiaddl
andl
push
cmp
pop
icebp
adc
adc
insb
pop
xchg
jbe
lds
lret
dec
out
cmc
dec
orb
push
add
test
cmp
loope
daa
mov
jbe
cmp
call
sub
push
loop
repz
cmp
sti
jmp
scas
sbb
add
cmp
add
mov
xor
cli
xchg
pop
loopne
xchg
jmp
test
push
imul
or
inc
push
or
jecxz
out
cmpsb
lods
or
xchg
js
divb
hlt
subl
mov
cs
cmp
sub
lahf
cmp
cli
cltd
sub
push
cwtl
fsubrs
sbb
mov
lods
int
incb
les
add
sub
or
fdivrl
pop
fmuls
mov
xor
and
dec
cmp
jp
push
scas
nop
adc
shll
mov
pusha
mov
cld
pusha
mov
aad
ljmp
scas
push
lea
popf
idivl
sub
add
lcall
mov
cwtl
jb
dec
cmp
outsl
cli
and
testl
pop
push
pop
cltd
mov
les
dec
test
or
cmp
xor
mov
push
add
fs
mov
lock
xchg
es
shl
xchg
adc
inc
push
repz
xchg
loope
movsb
sub
repnz
js
lret
int
dec
ficomps
fstpl
andb
adc
xchg
cmpb
fmuls
mov
xchg
lret
mov
pop
inc
repz
fwait
or
jg
xchg
push
sbb
mov
outsl
imulb
cs
add
stos
fildll
sub
imull
inc
add
fiaddl
adc
fstps
mov
sbb
test
lods
sahf
fs
sbb
adc
hlt
adc
push
icebp
fisttpl
xchg
out
aas
out
sahf
mov
popa
cmpsb
push
pop
cld
test
ja
scas
aam
std
and
mov
dec
push
inc
and
pop
dec
hlt
or
or
mov
mov
pop
iret
jle
xor
mov
mov
mov
loope
stos
popa
inc
cli
cmpsb
out
push
inc
nop
xor
pop
xor
test
repnz
push
fwait
outsb
jge
cld
loop
in
add
sub
les
sahf
push
inc
les
pop
movsb
pusha
adc
pop
push
inc
jl
loopne
jle
xchg
aam
mov
inc
xchg
xchg
adc
jnp
xor
jnp
and
sbb
dec
cmovns
aad
stc
adc
inc
int3
lea
movsb
loop
push
sub
and
xchg
mov
orb
movsb
mov
lods
sbbl
xchg
js
arpl
insb
cmp
pand
adc
mov
dec
imul
xor
test
pop
loopne
or
notl
sbb
pusha
cwtl
mov
sub
fisubl
inc
aam
cmpsb
popf
adc
dec
cmp
clc
roll
push
push
inc
test
pusha
mov
pop
or
int3
sbb
lret
jle
push
sub
adc
std
sbb
int3
inc
insl
push
ja
jle
sbb
sti
orb
add
xor
rorb
scas
xchg
ljmp
pop
sbb
int3
fstpt
and
sarb
lcall
pusha
jo
push
mov
mov
push
jle
xor
jno
inc
fwait
inc
repz
xchg
cs
jnp
mov
dec
push
add
fisttps
sahf
jo
lock
dec
outsl
xchg
mov
shrb
mov
cs
pushl
mov
xchg
testb
jno,pt
pushf
inc
sti
shrl
xor
incl
clc
and
and
xorb
xor
xchg
sbb
fmull
leave
fucom
sub
out
movsl
inc
call
sbb
xchg
mov
mov
hlt
cwtl
lods
imul
in
in
sub
push
jp
jle
xor
icebp
xlat
pop
clc
lods
popa
clc
sub
mov
lret
les
insb
loope
mov
mov
jge
out
mov
daa
lock
and
sub
adc
mov
test
orb
fidivrl
sbb
mov
cmp
roll
out
sbb
push
jns
mov
sbb
gs
mov
adc
lods
ss
mov
push
jmp
add
movsb
leave
ret
lea
out
or
xor
cld
paddusw
fisttpll
fdivrl
cmp
dec
mov
push
outsb
dec
inc
pop
inc
push
adc
enter
iret
pop
or
sub
cmp
pusha
nop
int
xor
insb
popa
push
ret
push
mov
adc
sub
aad
dec
inc
push
test
dec
bound
push
imul
js
mov
sub
rorl
out
enter
cmp
or
adc
orl
push
cltd
imul
mov
add
imul
lods
lret
jns
add
jecxz
inc
push
icebp
push
and
jl
pop
das
inc
mov
cmp
add
dec
pop
add
sti
sub
or
std
or
push
or
pop
pop
push
mov
adc
dec
xor
jbe
xchg
mov
fdivs
xchg
pop
ja
jmp
mov
sbb
bound
mov
and
cmp
push
xchg
fcoms
lret
lcall
mov
mov
xchg
xor
mov
popf
xchg
arpl
xor
or
popa
cmp
repz
cmp
or
pop
adc
mov
clc
push
stos
lret
mov
loop
xchg
mov
bound
cli
movsb
je
ds
cmc
inc
xchg
push
or
push
add
or
dec
mov
xor
sbb
cli
push
dec
lods
jb
push
pushf
imul
ds
and
adc
xor
addl
push
mov
cli
test
adc
aam
mov
xor
and
fbstp
pop
div
int
mov
add
popf
xchg
cmp
push
xor
add
sbb
push
pop
inc
dec
call
or
push
inc
addb
sub
je
and
cmc
icebp
jecxz
add
pusha
lock
adc
inc
push
mull
cmpsb
cmpb
fists
mov
scas
int3
push
xor
xor
lods
ss
push
addb
cli
mov
lcall
add
push
lcall
jno
sub
push
or
lock
pop
lock
js
test
xor
push
daa
add
mov
xchg
stos
mov
shl
fwait
and
jbe
test
xor
mov
cltd
jb
lcall
and
lret
dec
insb
cmc
cmp
adc
addr16
inc
sbb
andl
mov
outsb
roll
aas
adc
pop
or
andl
xchg
sub
test
adc
cmpsb
adc
cmp
pop
into
inc
pop
jmp
int
lcall
dec
adc
add
jmp
jg
jp
and
ds
stos
imul
sarb
les
lods
lock
inc
adc
jmp
push
push
es
int
sub
out
insb
notb
jl
inc
or
xchg
daa
mov
insl
jo
cli
xchg
jle
xor
dec
dec
pusha
sbb
pop
es
dec
mov
stos
mov
insb
xor
add
into
jo
jbe
pusha
shlb
jge
es
repz
sub
icebp
lds
aas
pushf
popa
lret
add
jle
lret
addl
cmp
aad
add
xchg
jno
test
pop
ror
add
repnz
adc
lods
push
cwtl
call
rcrl
into
movsl
jmp
push
sub
dec
rclb
sub
data16
inc
loope
cmp
sub
sbbl
mov
push
das
inc
adc
enter
sbb
push
jo
scas
mov
mov
push
push
incl
pop
lcall
in
addl
sub
push
iret
pop
add
jmp
sahf
pop
jmp
sub
dec
imul
mov
push
lahf
addb
push
add
jns
rorl
add
add
adc
into
add
pop
cld
je
sbb
ret
sub
push
dec
aad
cmp
leave
jmp
pusha
scas
dec
in
mov
xchg
jae
mov
pop
mul
sub
xchg
jb
les
sub
cmp
mov
mov
comiss
cmp
mov
mov
out
hlt
xchg
stos
add
stos
loopne
jno
es
jne
cmp
fidivrs
lock
sbb
xor
cltd
loop
cmp
lock
and
clc
mov
push
daa
cld
mov
orb
les
add
adcb
fs
fwait
call
push
rol
push
jecxz
xlat
xor
sti
xchg
dec
push
nop
les
rcrb
leave
add
push
cmp
sub
call
pop
repnz
test
jge
mov
cmpsb
push
xlat
or
stc
mov
roll
lret
int3
mov
arpl
pop
mov
inc
push
dec
insl
xor
iret
hlt
imul
pop
mov
xchg
mov
mov
inc
inc
jae
out
andl
sahf
and
push
dec
xor
vmread
pop
daa
out
cmp
test
hlt
rcr
jno
add
ret
mov
adc
mov
adc
xorl
mov
pop
cmovl
pop
mov
jae
jne
out
push
imul
je
rorb
dec
mov
shlb
out
pop
adc
das
dec
jns
xor
inc
stos
adc
loopne
subl
in
outsl
and
stos
ds
mov
je
push
pop
jo
sbb
stos
cmp
aaa
and
jge
push
dec
popa
ret
test
jbe
enter
out
or
movsl
sub
push
sbb
std
or
dec
nop
mov
adc
xchg
add
add
xchg
daa
xor
lcall
loope
pop
arpl
rol
cmp
or
add
and
adc
inc
stos
jns
and
xor
and
mov
or
push
cmp
arpl
cmc
xchg
mov
adc
push
cmpsl
pop
dec
jno
pushf
jmp
fmull
mov
stos
xchg
in
stos
sti
xchg
test
cld
cmp
enter
cltd
or
inc
in
sub
insb
and
dec
in
loop
push
sub
cmp
dec
cltd
mov
iret
cmp
xchg
cmp
test
xorb
jle
add
je
filds
adc
jmp
rorb
xchg
in
xor
repnz
push
outsl
mov
pop
jb
sub
fists
adc
scas
out
dec
pop
clc
addb
icebp
insl
cmp
sbb
jle
push
imul
enter
das
jo
inc
jo
sbb
or
ficomps
jp
hlt
mov
lock
push
insl
sbb
mov
imul
add
rcr
cmp
adc
and
xchg
xchg
push
fxam
adc
cmc
pop
dec
orl
cmp
pushf
bound
and
in
pusha
roll
and
test
icebp
popf
in
dec
test
cmp
push
adc
in
sub
push
jp
movsl
rol
dec
push
das
outsb
into
inc
or
clc
out
or
inc
mov
push
scas
mov
aaa
cmp
pop
xchg
fs
sbbb
adc
popa
mov
pusha
jne
sti
jp
rolb
pop
mov
mov
stc
adc
jmp
add
dec
inc
dec
sahf
push
mov
mov
dec
inc
test
or
mov
and
sti
rclb
fadds
loop
jae
adc
xchg
sarl
dec
gs
push
xor
insl
rorl
cmpsl
inc
in
lods
mov
mov
cmpsl
push
testb
or
mov
mov
xor
lods
jp
loope
mov
stos
add
hlt
movl
cld
xlat
rclb
jge
data16
or
xchg
push
sbb
cmp
or
cmc
shlb
xchg
iret
push
repz
adc
and
lret
arpl
clc
mov
nop
ljmp
jne
insb
inc
insb
insb
outsl
lcall
shrl
pop
mov
sub
lret
test
add
scas
or
pop
add
lock
out
inc
xor
sbb
insl
das
stos
rcr
pop
fimuls
notl
push
sub
sbb
outsb
dec
iret
push
mov
xchg
sarl
and
mov
std
shrb
push
ljmp
mov
cltd
es
push
xchg
leave
in
aas
cli
mov
cmp
or
clc
adc
sar
je
dec
cmc
cmp
inc
into
fstpl
pop
mov
and
cmpsb
dec
adc
jge
fld
out
sbb
lea
iret
add
outsb
in
ss
ss
lods
push
mov
sbb
outsb
lcall
insb
mov
movb
imul
iret
lret
dec
js
pop
fmuls
sbb
mov
push
pop
mov
cmpsl
sbb
jle
inc
or
push
imul
inc
movsl
cmp
xchg
sub
mov
cld
dec
cs
sub
add
and
mov
jle
test
arpl
orps
pop
mov
fsub
push
les
push
inc
rcrl
lods
or
test
adc
mov
lea
mov
sti
pop
jae
or
lret
mov
outsb
movsl
mov
lods
adc
mov
jns
push
mov
mov
cmpsb
sahf
dec
mov
aam
push
sub
pop
dec
repz
xchg
lock
pop
shl
loope
test
xchg
dec
sahf
xchg
cmc
or
hlt
frndint
dec
jg
sbb
jo
fs
sbb
test
scas
stos
xchg
and
inc
mov
ret
xchg
mov
sbb
push
sub
jl
mov
xchg
mov
cmpsl
in
inc
test
ret
fdivr
and
and
or
push
mov
pop
pop
push
mov
push
mov
pushf
xchg
wbinvd
test
pop
in
in
imul
or
cmpsl
mov
lock
mov
push
enter
xchg
out
cltd
in
test
les
mov
sbb
stos
inc
mov
jmp
adcl
push
jns
cwtl
jmp
push
jecxz
jno
andb
xor
loope
aas
xchg
jnp
pop
ljmp
gs
nop
sbb
nop
fldl
sbb
jne
sbb
push
popa
inc
hlt
add
fisubs
sub
dec
jbe
adcl
sub
cmp
outsl
inc
inc
xor
fs
fsubrs
jne
inc
dec
movb
fisttpll
adc
cmp
mov
sbb
js
loopne
outsb
add
cmp
xchg
pusha
xor
js
push
cmp
cli
sbb
mov
mov
xlat
add
mov
adc
dec
ficoml
pushf
dec
lahf
addr16
sub
in
lds
jp
hlt
sbb
out
lods
mov
mov
subb
pop
cli
pop
mov
mov
scas
dec
movsl
adc
shll
nop
jp
xchg
insb
mul
push
inc
push
add
inc
cld
pushw
aad
push
stos
sub
nopl
dec
fiaddl
movsb
jb
mov
mov
aas
icebp
push
sahf
mov
inc
int
lahf
cmp
push
aam
xor
xchg
ds
ja
jb
inc
fwait
popa
adc
and
stc
stc
mov
out
jge
int3
ds
cmp
cltd
pushl
sti
loope
push
jbe
jp
lods
push
pop
or
ret
dec
or
lea
cmpsl
xchg
aas
cmpsb
lods
fdivrs
push
jno
ret
shrl
insl
inc
xabort
dec
fstpt
sbb
push
movsb
bound
dec
ja
pop
or
lds
xchg
out
pop
pop
cmc
imul
xor
sbbl
cld
adc
fistpl
lds
rorl
add
and
inc
sahf
pop
push
popa
dec
or
fadds
mov
adc
mov
scas
mov
inc
and
ds
mov
shl
push
shl
stos
jns
xor
insb
test
jl
addl
xor
inc
std
or
mov
es
inc
int
jnp
ljmp
in
lea
ja
mov
inc
js
repnz
push
xor
shl
shl
das
push
push
cltd
lret
jle
inc
jmp
and
mov
xor
pop
out
push
test
loop
loope
outsl
mov
inc
test
mov
cs
int3
in
ljmp
sti
cmp
repnz
add
daa
mov
mov
inc
iret
dec
add
inc
add
add
ret
add
pop
aad
in
jl
int3
cwtl
inc
sti
inc
mov
jecxz
pushf
pop
ja
mov
mov
mov
ret
sbb
push
sbb
hlt
xchg
arpl
sarl
fcoml
test
aad
aam
dec
jmp
pusha
pop
in
lahf
inc
or
sub
mov
pop
sub
mov
bound
aas
cmp
jmp
movsb
xchg
ret
es
inc
sbb
xor
or
popa
mov
jecxz
imul
arpl
aaa
lea
js
mov
jge
adc
mov
adcb
call
mov
jecxz
mov
and
pop
sbb
sub
dec
xorb
pop
ljmp
dec
jl
cmp
jb
sub
out
jmp
jge
dec
imul
aam
push
add
sar
and
jb
loopne
and
add
arpl
cmp
xchg
sub
imul
xchg
cmovno
push
push
jne,pn
cmp
dec
adc
push
adc
mov
cmp
cli
lock
lds
jmp
cmc
pop
jecxz
push
cli
mov
mov
mov
sbb
fbld
movb
js
lret
out
aas
xor
and
lock
pop
cli
push
lret
mov
mov
cmp
or
push
lods
push
shll
cmpsl
loopne
sub
xlat
sbb
sub
leave
mov
cmpl
mov
orb
and
jmp
fsubrl
add
aaa
movnti
cld
or
les
arpl
sbb
out
jg
movb
js
adc
add
scas
adc
faddl
out
stos
jbe
dec
ret
mov
mov
sti
cmp
adc
jo
cltd
notl
loope
dec
mov
movsb
negb
sub
int
lock
test
adc
push
cli
fldl
xchg
movsb
mov
inc
adc
fmull
aam
popa
cmp
add
xchg
lahf
add
hlt
shrb
sbb
sbbl
push
or
adc
add
sub
orb
jl
lods
add
enter
dec
pop
lahf
aad
xor
mov
shrb
dec
jnp
mov
lret
mul
dec
adc
ds
push
mov
mov
add
mov
js
pop
sahf
in
hlt
stc
or
cld
dec
gs
mov
dec
cmp
and
ror
test
xchg
loop
pop
in
xchg
fldl
stos
in
lret
daa
test
add
fwait
jle
mov
dec
adc
mov
aad
lods
out
push
adc
xchg
inc
xor
add
pop
jne
int3
loopne
pop
jne
sbb
mov
jg
mov
stos
add
mov
xchg
mov
clc
aam
and
shlb
mov
dec
cmp
cld
pushf
insl
ret
dec
jbe
xchg
addb
sbbb
into
lret
and
aam
push
js
and
icebp
mov
xor
dec
roll
and
cmp
dec
lds
mov
sbb
loop
xor
rcl
pop
mov
mov
and
loopne
bound
mov
js
add
or
loop
inc
and
or
mov
pop
adc
sahf
je
xlat
sbb
jmp
inc
in
and
rcrl
xchg
xchg
mov
lods
lcall
cmpsb
cltd
scas
add
stos
mov
test
mov
aam
and
push
pop
push
loope
sbb
daa
mov
hlt
pop
jmp
add
hlt
scas
add
ret
mov
js
inc
retw
loopne
popf
ss
lds
adc
outsb
adc
fmull
sub
idivl
and
rorb
jbe
mov
mov
sti
cwtl
ja
or
ja
push
dec
pop
sub
push
sub
xchg
clc
pop
int
push
std
ror
cwtl
adc
inc
nop
addb
loope
test
imul
outsb
lds
push
jno
into
push
dec
test
ljmp
add
dec
pop
or
test
push
sbb
shlb
inc
sbb
mov
shl
je
jg
pop
sub
jmp
or
inc
sub
cmp
xchg
mov
xchg
adc
clc
or
sbb
xor
adc
push
imul
repnz
loop
enter
cmp
js
js
mov
leave
xchg
idiv
call
iret
sub
mov
outsb
sbb
ljmp
add
push
xchg
add
xor
scas
mov
xchg
lock
sbb
ret
xlat
movsb
fisubl
icebp
adc
out
inc
add
shlb
push
add
inc
loopne
dec
mov
loop
inc
shlb
push
cmp
add
jle
adc
loopne
jno
mov
icebp
sub
xor
jg
out
push
push
mov
popl
call
stos
int3
fldcw
mov
cmp
addr16
call
push
movsl
pop
push
sub
pop
cwtl
movsb
lods
add
les
in
shrb
std
pop
sti
jmp
xorb
jge
dec
sbb
add
loopne
fwait
adc
mov
sbb
cmp
adc
cmpl
push
in
rol
push
test
cli
mov
push
je
jb
or
je
dec
pop
jnp
ret
push
movsl
shrl
sbb
clc
loope
movsl
es
fstpt
lock
cs
push
pusha
mov
dec
xlat
push
xor
or
or
pop
scas
repnz
pop
mov
mov
mov
incb
or
pushf
lcall
fimuls
add
xor
pop
xchg
cmp
or
mov
push
push
jne
or
xchg
inc
sub
adc
add
imul
std
shlb
mov
mov
pop
popa
push
mov
adc
xor
pop
mov
shlb
mov
lock
or
ljmp
addb
int3
and
push
xchg
lods
rcl
mov
inc
sbb
aam
pop
pushf
xlat
push
dec
hlt
pop
inc
add
adc
xchg
add
in
ret
int
lock
cmc
scas
ret
je
lahf
mov
adc
shrb
adc
lock
insl
outsb
js
outsl
add
aas
js
test
cmp
addb
push
xor
push
in
les
cli
push
pop
test
lods
xchg
scas
jl
ss
loop
add
pop
or
lret
pop
dec
push
shl
outsl
jo
xlat
mov
test
xor
dec
cmp
inc
loop
movsl
lahf
mov
add
inc
cli
icebp
cmp
xchg
outsb
jg
repnz
shrb
add
nop
jle
add
sbb
les
pop
xlat
ljmp
fnstsw
leave
xchg
jno
test
jo
test
push
mov
fadds
or
sbb
dec
ljmp
je,pn
add
cmp
stos
or
jns
ja
cmpb
aaa
push
es
inc
in
sbb
mov
or
mov
mov
mov
add
add
adc
or
int3
inc
sub
inc
push
shrb
lods
mov
test
inc
fadd
adc
add
inc
test
aad
or
xchg
icebp
fstl
lods
jb
pop
cmp
or
pop
ret
push
cmp
lods
cs
and
and
jle
out
jns
lea
cli
gs
pop
push
fistpll
add
fwait
dec
pop
faddl
jnp
or
mov
filds
test
rcrl
lahf
or
call
or
cli
hlt
aaa
add
in
stos
test
xchg
fnstsw
sub
mov
mov
loopne
ja
push
or
xchg
xchg
sub
imul
pusha
aaa
dec
pop
add
push
insl
sbb
cld
lcall
push
xorb
pop
jg
scas
mov
test
cltd
push
and
sbb
push
aas
add
jmp
inc
pop
mov
js
lock
pushl
mov
popl
mov
add
ljmp
fisttps
push
jle
jle
pop
add
unpckhps
xor
cmpsb
call
mov
or
and
mov
negb
jmp
cmpl
adc
popa
std
and
cwtl
cli
mov
jg
pop
cli
les
shlb
jge
pushf
lahf
lret
cmp
sbb
xor
sub
pop
lods
cmp
aam
aam
fscale
sbb
push
mov
cs
pop
rcrb
in
adc
jg
ret
ss
bound
mov
into
cmc
ret
jle
dec
addb
test
fbld
test
insl
xchg
nop
mov
and
dec
inc
adc
ficompl
ret
std
add
test
scas
push
mov
stos
pop
scas
lods
cmpsl
mov
js
in
sub
jle
mov
pop
or
dec
clc
adc
es
fwait
pop
sarl
jae
negb
sub
hlt
xor
xor
cmp
or
xchg
scas
mov
leave
adc
mov
pop
stos
out
adc
jle
ds
fbstp
push
pop
in
mov
mov
dec
js
or
mov
dec
ljmp
rcl
movsb
nop
adc
les
sub
and
xchg
dec
ja
fistps
fimuls
push
imul
mov
insb
mov
pusha
loop
addb
rorb
stos
ret
in
xchg
xchg
pusha
imul
mov
lds
xchg
incb
or
rcr
mov
dec
shl
lret
cs
in
inc
das
xor
lret
jno
scas
xchg
cmp
cld
fisubrl
cli
test
inc
rolb
pop
stos
cmp
mov
mov
mov
dec
pop
in
adc
enter
lods
push
rorb
add
aam
hlt
dec
add
sahf
out
shrb
dec
ss
outsb
mov
or
call
jnp
mov
jge
add
lock
xrelease
js
mov
xor
cs
xor
cmpsl
stos
push
sbb
push
pop
data16
enter
or
inc
mov
scas
outsb
mov
imul
sbb
sub
inc
in
inc
repz
inc
hlt
add
arpl
sub
pusha
cwtl
neg
imul
dec
fcom
hlt
push
enter
mov
mov
cmp
call
mov
jl
mov
mov
push
mov
enter
call
clc
add
loop
dec
int
pushf
add
xchg
cwtl
xchg
mov
aad
jmp
fists
mov
je
std
les
popf
jne
data16
mov
inc
mov
mov
jecxz
dec
cli
loopne
add
cltd
fs
inc
inc
push
mov
sahf
cmp
add
stc
mov
mov
or
aad
pusha
lahf
mov
mov
xor
adc
cmp
test
sub
call
pop
mov
mov
in
outsb
add
int3
pop
clc
or
outsl
fwait
aam
mov
mov
jmp
sbb
stos
push
in
mov
mov
sbb
push
xor
fdivrs
mov
nop
xchg
mov
icebp
mov
shr
stos
pop
mov
xor
xlat
hlt
or
sbb
cmp
jle
adc
test
movsl
lcall
ds
or
mov
mov
jo
std
mov
and
inc
hlt
popf
dec
clc
out
aas
jl
cmp
adc
das
loopne
xor
inc
ja
and
shrb
push
ss
mov
into
add
les
cmp
dec
leave
cli
daa
mov
sbb
xchg
adc
xchg
push
out
jo
mov
lock
add
into
mov
divb
or
ss
jle
inc
rorb
jge
or
lock
pop
push
ret
push
in
mov
int3
and
push
mov
rclb
cmp
sahf
lods
xchg
inc
clc
mov
sub
add
push
add
cmp
out
adc
sub
cmpsb
cwtl
and
xchg
push
lret
inc
jmp
adc
clc
sahf
outsb
imul
or
cmp
jle
pop
push
std
fdivrs
mov
dec
pop
and
add
enter
rcrb
ljmp
inc
jb
xchg
dec
mulps
addr16
out
add
mov
xor
lods
adc
mov
mov
push
xchg
push
push
aam
adc
mov
xchg
xchg
sahf
and
fsubs
or
ljmp
lret
add
fdivrl
or
pop
push
sub
popa
bound
push
pop
mov
cmp
cmp
pop
popa
aaa
add
mov
cmpsb
mov
loopne
pusha
lods
cmp
dec
pop
xchg
outsb
enter
inc
dec
or
push
sbb
cmpsb
xor
and
cmp
push
sub
neg
mov
adc
addl
mov
aaa
call
inc
in
movsl
xor
int3
xor
jl
push
aas
ljmp
add
ljmp
sti
mov
je
pop
sar
bound
jns
cmp
rclb
out
adc
ds
lds
sbb
sbb
and
lret
adc
and
in
add
add
lret
data16
dec
pop
scas
mov
shl
lods
xlat
lret
jecxz
jle
call
mov
ds
test
push
cmpsl
mov
mov
inc
into
ficompl
pusha
scas
add
mov
xchg
cmp
adc
push
imulb
fs
imul
aam
pop
ret
loopne
push
jl
add
mov
icebp
mov
es
jg
sahf
sub
push
fcoml
xor
out
xor
in
mov
mov
out
jne
ds
adc
cmp
push
pop
and
movsl
mov
addb
cmpsb
icebp
inc
es
adc
pop
pushf
sahf
adc
fmuls
pop
dec
mov
test
add
dec
loopw
adc
add
stos
je
mov
nop
leave
sbbb
or
dec
fcompl
mov
xor
popa
mov
cmc
insb
push
call
and
lcall
stos
xor
mov
cmp
jbe
mov
shld
cld
xchg
cwtl
add
xchg
cmc
pop
add
pop
add
push
cmp
cli
push
imul
stos
and
popf
je
add
es
pop
pop
mov
adc
stos
or
lret
mov
sbb
lret
testl
in
int
push
sbb
mov
popa
xorb
int3
pop
push
outsb
pop
and
sbb
inc
pop
add
arpl
mov
ljmp
fmull
or
addb
fistps
les
cmp
mov
mov
shlb
push
in
cli
insl
mov
jbe
shl
mov
cmpsb
and
inc
pop
and
dec
fs
push
ret
test
popf
jg
aam
out
push
pop
in
popa
mov
or
mov
in
adc
rcrl
cmp
push
xor
int
adc
sub
mov
nop
cmpsl
add
xchg
jp
lock
cmpsl
adc
push
ljmp
mov
arpl
enter
add
imul
test
adcb
es
cmp
hlt
push
out
incl
sbb
jmp
jo
popa
ret
fwait
js
pop
push
jno
imul
jbe
cmp
xlat
adc
jecxz
clc
pusha
jge
test
add
lcall
adc
push
inc
outsl
jnp
outsl
scas
filds
mov
stos
fld
sbb
call
adc
mov
std
sbb
pop
sbb
inc
hlt
xor
rclb
outsb
nop
fmuls
leave
xor
movsl
add
hlt
ret
lds
js
add
gs
loop
and
cs
dec
jo
cltd
sahf
xorb
cmp
icebp
out
add
sbb
jne
adc
dec
xor
cwtl
push
or
inc
add
popf
mov
es
bound
mov
sub
mov
nop
xchg
movsb
pop
dec
xor
add
jne
enter
inc
fisubl
out
sub
pop
es
inc
pop
cld
call
xor
lret
rclb
dec
dec
les
data16
fdivs
add
jmp
pop
rclb
add
in
xlat
test
mov
push
out
lret
sti
add
jmp
xchg
push
pop
popa
push
push
cmp
mov
arpl
hlt
pop
jns
jns
pop
and
add
push
sbb
push
mov
adc
test
cmpb
hlt
aam
repnz
fmull
aam
lods
rolb
sub
daa
pop
add
cmpsl
orb
inc
adc
sbb
std
xchg
push
mov
cmp
frstor
cmpsb
negl
lcall
pop
shlb
mov
mov
insl
stos
insl
jl
sub
dec
movsb
add
mov
jbe
jle
bound
pop
jecxz
xchg
and
cs
add
xchg
cmp
and
inc
xchg
jne
fst
xchg
iret
insl
mov
mov
lret
mov
out
sbb
fs
push
push
enter
ss
lock
dec
xchg
mov
xchg
xchg
pop
insb
mov
cli
faddl
loopne
jle
push
mov
popf
inc
add
inc
das
sahf
or
shlb
and
mov
jb
loop
stc
adc
es
push
addb
jg
add
or
fsin
and
adc
sbb
pushf
pop
mov
incl
out
lock
jle
dec
mov
js
sbb
movsl
mov
jbe
mov
cmpb
adcb
jmp
call
dec
push
xorb
js
mov
xchg
push
sub
and
bound
jmp
lcall
or
mov
les
pop
mov
iret
adcb
pop
pop
lods
push
lcall
scas
push
jecxz
enter
dec
jnp
cmpsl
sarb
mov
iret
pop
jbe
push
push
jns
xor
test
xchg
add
mov
mov
fwait
sbb
cmp
jl
addr16
lahf
mov
add
movsl
add
mov
outsb
outsb
std
lea
insb
pushf
add
pop
jne
mov
jno
xchg
mov
shrl
in
aam
aaa
mov
mov
cmp
dec
jbe
mulb
fwait
stos
xchg
sub
and
add
out
xlat
push
cmc
xchg
hlt
sub
mov
adc
xchg
test
inc
pop
xsha1
cmpsb
dec
xor
mov
mov
inc
loopne
inc
ret
mov
data16
inc
test
xchg
movlps
js
cltd
mov
cmp
shll
and
xchg
push
shrb
mov
xchg
mov
shrb
pop
inc
and
ds
daa
shrb
cmp
xchg
sub
clc
or
shl
mov
cld
js
shlb
das
popf
imul
xchg
out
jb
xor
pop
mov
push
mov
jp
je
movsl
jns
dec
and
sub
lods
fiaddl
sar
or
pusha
in
std
fcomip
sbb
sbb
insl
push
bound
aam
lods
dec
mov
push
mov
js
push
punpckldq
int
rcr
cmp
jl
sbb
push
frstor
adcb
push
push
cmpsb
stc
or
insl
es
push
inc
lods
sbbb
jle
sub
shrb
lret
xor
mov
fs
shrb
mov
sbb
lcall
test
out
pop
js
rcrb
iret
ret
dec
xchg
stos
rorb
sbb
icebp
xor
mov
mov
pop
push
ds
push
adc
inc
lcall
pop
sub
loop
sub
fsts
insb
xor
out
lahf
ret
push
shll
xchg
pushf
pop
imul
iret
push
adc
and
inc
adc
shlb
dec
cwtl
pop
ss
add
cmp
lahf
loope
xor
hlt
jo
mov
inc
and
or
adc
pop
out
inc
add
add
sub
andb
mov
dec
push
push
je
loopne
es
dec
mov
push
ret
add
push
in
pusha
add
mov
adc
adc
mov
aam
xchg
jge
cmc
xlat
add
jne
and
cwtl
mov
test
push
pop
mov
add
scas
cld
es
mov
cmp
ret
inc
sub
les
repz
inc
push
xorb
sti
inc
xlat
xchg
cmpb
test
mov
in
pop
xor
push
clc
push
mov
xor
inc
aad
push
adc
je
or
fimuls
ds
push
outsl
dec
movsl
dec
sbb
xchg
shll
sbb
dec
out
stos
sub
clc
dec
dec
add
mov
sub
pop
adc
ficompl
mov
movsb
mov
test
pop
dec
jb
jb
lods
mov
stos
adc
sub
sub
loopne
rorl
orl
lds
and
sti
bound
outsl
cmp
or
lcall
cmp
or
movups
mov
jg
gs
mov
lods
clc
pop
popa
sbb
cmpsl
movsb
mov
push
or
and
mov
adc
or
xlat
aad
arpl
sub
loop
mov
les
imul
clc
adc
pop
test
adc
enter
push
js
sbb
jne
xchg
mov
ret
or
test
bound
sbb
lcall
jbe
push
lock
cmpsl
add
sub
or
or
push
inc
xlat
cmpsb
push
repz
cmc
stc
out
mov
cmpsb
xchg
dec
adc
xchg
ret
push
push
mov
dec
jecxz
sub
xchg
loope
inc
cmp
mov
dec
faddl
cmpsl
mov
and
cmpsl
rcrb
mov
out
push
push
into
cmp
cld
mov
nop
sarb
loop
adc
or
aad
jo
ret
and
pop
sahf
sbb
add
call
js
ljmp
and
mov
xor
in
cmp
pushf
sub
xchg
inc
push
out
call
test
mov
pop
rclb
inc
cmp
enter
mov
mov
ja
in
lods
and
pop
leave
sub
aad
pushf
lcall
mov
pop
fnstcw
or
mov
cmp
xlat
cmp
sahf
xchg
add
xchg
cmpsl
stos
test
ds
jg
xchg
call
cmp
fcomps
cmpsb
push
pop
clc
lock
cmp
cli
fstpl
sarl
pop
pop
scas
jp
cmp
cmp
mov
push
mov
dec
imul
xor
adc
stos
rorl
test
mov
pop
mov
jmp
sbb
lds
add
cmp
sbb
lds
lds
inc
sbb
cmpsb
xchg
out
fidivrs
adc
std
in
es
dec
clc
sub
test
dec
add
sub
sbb
adc
inc
jge
add
ss
fs
aam
cmp
sbb
pop
ja
rorb
flds
lret
push
ss
ret
and
push
pop
push
ja
push
jp
mull
bnd
ds
sarl
sub
and
shlb
les
insb
pop
movsb
orb
cltd
xchg
ret
sbb
mov
fisubrs
sahf
repz
push
xor
popa
push
jne
inc
mov
aad
ret
pop
out
stc
add
pusha
sahf
or
je
sbb
add
out
adc
xor
je
or
push
xor
mov
xor
js
popl
and
adc
mov
mov
cmp
inc
cmpsl
daa
loopne
dec
jnp
mov
addb
mov
or
ja
jp
imul
jmp
enter
ja
xchg
or
lds
and
pop
pop
fimull
push
inc
fnstsw
xchg
rorl
lods
rclb
int3
or
movsl
arpl
out
in
pop
xor
shlb
in
or
cs
mov
or
mov
dec
jecxz
pop
shll
lock
mov
xor
insb
dec
repz
aaa
push
mov
in
mov
and
addb
push
movsb
jo
and
loopne
adc
mov
loope
out
inc
fdivrs
sbb
lahf
ss
jecxz
pop
cmp
popf
or
loope
add
fadd
mov
std
or
roll
push
mov
leave
popf
ss
sti
das
xor
push
cmp
push
std
idiv
cmc
add
bound
jmp
cmpsb
mov
dec
jmp
adc
mov
insl
fsub
testb
lret
add
add
fs
adc
nop
adc
push
fists
push
ljmp
insl
mov
xor
sbb
in
gs
cmpsb
orl
test
scas
loopne
inc
scas
call
clc
jb
shr
pop
cs
mov
add
lods
mov
mov
into
test
mov
daa
cmpsl
add
roll
push
addb
dec
test
dec
sub
dec
loop
dec
inc
mov
call
xor
cwtl
shl
lods
adc
sub
sub
enter
jbe
push
cmp
xor
lock
jbe
pushf
jle
repnz
mov
pop
fwait
in
stos
ret
ss
and
and
xor
call
jnp
jg
insb
and
clc
xchg
add
xor
rol
mov
jge
pushl
jmp
cld
push
dec
sbb
xor
and
js
jl
add
pop
sub
test
sub
dec
and
or
mov
mov
push
imul
enter
test
adc
and
mov
rol
in
and
aaa
pop
dec
divl
lods
pop
add
mov
aam
ds
inc
clc
out
mul
ret
sbb
dec
sbb
mov
pop
insb
fimull
addb
mov
jl
lock
aaa
adc
adc
pusha
cmpsb
push
lods
aad
dec
xchg
push
inc
adc
scas
adc
cs
sbb
or
mov
data16
cltd
out
mov
inc
push
mov
bound
push
aad
pushf
fld
pusha
or
in
ds
xchg
pop
je
jo
or
pusha
fdivrl
hlt
bound
push
jnp
xlat
lock
add
loope
pop
sbb
sbb
jne
cltd
adc
ja
shll
std
scas
loop
faddl
sub
push
cmp
addr16
shll
lea
sbb
xchg
push
je
lcall
jne
cmp
xchg
es
shrl
push
pop
push
movsb
inc
loope
mov
fs
jmp
inc
xlat
cmpsl
imul
and
mov
pusha
aas
dec
aas
sub
mov
mov
cld
mov
mov
xor
cmp
imul
call
les
lods
pop
in
icebp
and
mov
ljmp
adc
jno,pt
ds
lahf
stos
push
mov
jns
rol
cltd
clc
dec
dec
lcall
int
int
popa
lcall
add
cmp
jbe
icebp
lock
inc
push
fmuls
pop
add
pop
cmpsb
pop
mov
push
cltd
xchg
xor
mov
ret
mov
pop
rclb
movl
mov
xor
push
ret
scas
pop
push
leave
or
fcomps
enter
cltd
add
int3
cmp
pusha
sub
js
push
sub
les
lret
sbb
and
fsubr
mov
or
lret
sahf
or
xor
and
pusha
push
adc
dec
fmull
push
adc
lods
lods
add
negl
in
rorl
pop
jle
nop
jb
in
lods
in
dec
sub
aam
out
pop
push
inc
sbb
push
in
sub
mov
in
xchg
pop
rorl
pop
and
sbb
xor
insb
incl
push
daa
loopne
and
decb
in
cmp
pop
in
insb
xor
mov
ret
orps
insb
call
push
movsl
inc
mov
fldl2t
scas
or
lock
or
jne
sbb
mov
or
mov
hlt
cmp
int3
mov
pop
nop
sbb
popa
call
xchg
cmp
fdivs
push
sbbl
paddb
cmp
add
or
add
push
pop
jl
push
enter
and
rcrl
into
jnp
pop
cmpxchg
adcb
push
mov
shl
cld
adc
adc
dec
push
sub
sti
fwait
ret
mov
inc
mov
mov
add
push
cwtl
lret
push
icebp
jge
mov
inc
jbe
sub
jno
mov
xchg
arpl
and
jp
jae
popl
dec
push
les
push
daa
decb
mov
femms
mov
push
lock
xchg
call
pusha
popa
or
mov
mov
push
cmc
xchg
or
rcrb
insb
add
sbb
sub
cmp
inc
mov
inc
cmpsb
sysenter
add
mov
outsb
addb
popf
xor
out
push
xor
cmpsb
dec
movsl
js
lcall
hlt
rcrl
adc
add
adc
adc
push
stos
jp
and
jmp
mov
mov
pop
in
js
loopne
aaa
xchg
jbe
jge
cmp
popa
aam
popf
loop
les
aas
imul
rorl
lock
inc
pop
out
orb
sar
add
shlb
add
sbb
add
lods
inc
fdivr
shlb
std
cli
mov
dec
cli
adc
loope
mov
ss
lcall
mov
insl
loop
out
push
and
call
nop
xchg
or
dec
and
mov
out
cld
add
inc
sbb
lret
js
mov
loopne
mov
push
fiadds
or
aas
mov
loop
andb
mov
outsl
in
add
push
cmp
cmp
inc
dec
jle
push
push
cli
mov
cli
je
mov
loope
scas
ret
jno
mov
mov
rclw
jge
cmpb
ret
add
push
sti
push
insb
push
mov
fadds
mov
push
xorb
stos
aaa
enter
add
xor
rol
pop
mov
ror
mov
inc
or
mov
mov
cmpsb
movsb
mov
sarb
adc
xchg
add
pop
ljmp
and
add
jae
push
push
jae
mov
push
out
cld
scas
in
pop
stos
pusha
xchg
mov
add
jno
aas
aam
push
ss
jb
loope
xchg
into
mov
pop
out
call
inc
clc
lods
fnstenv
adc
add
cmpsb
imul
clc
add
std
out
in
mov
xor
or
ljmp
mov
pop
icebp
fisttps
cmp
cs
rolb
xchg
adc
pop
mov
test
daa
cs
aam
mov
mov
cmp
aad
pop
in
mov
sbbl
bound
cmp
mov
into
pop
mov
pushf
sar
xor
cli
loopne
in
mov
mov
decl
call
and
aam
andb
fcmove
pop
jg
jns
jmp
shll
jl
add
into
or
es
xchg
adc
jo
jl
jmp
imul
and
lea
dec
lock
xchg
add
pusha
idivb
adc
int3
cmp
loope
sub
cmp
movsl
into
aad
cs
push
les
dec
test
repz
push
pop
jl
xor
scas
daa
mov
outsl
fadds
push
push
es
cs
mov
js
sub
xchg
pxor
xor
pop
out
mov
sbb
cmp
adc
push
pop
add
sbbl
rcr
pop
cmp
push
enter
mov
cwtl
shlb
ss
lds
pop
xchg
loopne
cmp
sbb
cmp
cld
fsubl
test
inc
sar
test
sbb
pusha
pop
scas
decl
or
fisttps
rcrb
jmp
mov
cmc
rolb
adc
sub
cltd
mov
enter
push
push
hlt
clc
xchg
fcoms
cmp
xor
push
adc
cld
push
cltd
add
xlat
notb
or
cld
std
outsb
mov
xchg
sbb
or
push
mov
or
cmp
hlt
jno
mov
loopne
jp
add
sbbl
cmp
add
cmp
pop
std
and
sti
aam
aaa
push
aaa
or
icebp
aad
icebp
and
mov
add
adc
jo
cmpsb
ds
mov
mov
orb
ds
or
ss
or
mov
pop
push
in
push
xchg
lcall
adc
push
lods
out
cmp
mov
int
sbb
jnp
in
inc
andl
dec
inc
add
mov
test
and
sub
jg
pop
mov
xorb
jb
pop
les
enter
call
jmp
shrl
mov
jle
test
int3
hlt
mov
in
mov
out
in
stos
add
mov
jg
cwtl
add
xchg
xchg
adc
sbb
xchg
and
mov
scas
nop
mov
push
mov
in
cmp
adc
cmp
cltd
and
sarb
sbb
sub
inc
inc
jle
jl
push
pop
mov
test
ds
add
out
push
pop
popa
inc
dec
jg
mov
add
fs
aam
xchg
test
movl
rol
pop
shlb
inc
push
inc
mov
in
mov
scas
cmc
loopne
cs
divb
mov
cmp
sahf
add
or
mov
inc
xor
and
call
jb
push
mov
cli
ret
movb
test
repz
mov
shrl
inc
xor
out
decb
cmp
cmp
push
push
mov
stc
cmpsb
mov
cmp
inc
push
loop
fnstcw
mov
and
push
outsb
andb
cwtl
cmp
orb
mov
push
jbe
xlat
xchg
sub
daa
iret
dec
push
mov
jp
or
out
ja,pn
mov
decb
icebp
addr16
dec
dec
ret
add
cmpsb
mov
hlt
mov
imul
movsl
or
and
pop
jbe
lock
cmp
add
shr
push
shl
dec
inc
popf
push
push
or
popa
mov
xchg
mov
xor
insb
shrb
jl
push
add
inc
or
or
mov
jmp
push
cltd
aaa
dec
push
dec
lret
ljmp
sbb
mov
pop
int3
jmp
lds
jbe
mov
pushl
adc
stos
sbb
dec
xchg
js
pop
pop
out
mov
push
fistl
dec
and
xor
loopne
and
sbb
push
or
adcl
scas
subb
rcll
rorb
and
sbb
addb
fsubrl
add
cli
dec
xor
sub
rcll
push
xchg
mov
adc
and
out
adc
jle
push
insb
cmp
sub
push
xor
push
aad
or
sub
push
sar
sbb
pop
add
jo
loopne
aad
movsb
push
movsb
decl
cmp
cmp
cmpsl
dec
nop
xchg
or
push
adc
add
xlat
mov
jae
or
sti
push
aaa
mov
daa
sbb
ljmp
cld
push
fs
push
sarl
or
loope
dec
movsb
xor
ds
pop
test
pop
or
adc
mov
js
pop
loop
push
mov
push
or
fists
orb
dec
aas
fidivrl
adc
scas
inc
mov
mov
adc
inc
js
js
add
xchg
mov
or
faddl
fdivr
add
rol
in
add
pop
mov
xchg
sbb
sub
out
and
adc
lock
mov
pop
dec
rcrb
pop
ds
and
aaa
inc
jge
fimuls
jb
loop
mov
push
repz
xchg
pop
and
inc
push
adc
lea
cmp
and
mov
mov
mov
push
mov
clc
jl
pop
jg
sub
dec
adc
mov
rclb
filds
mov
ret
hlt
inc
std
inc
shlb
fs
insl
mov
rclb
test
or
mov
shll
aam
lods
jle
adc
incb
stos
inc
decb
sub
scas
sarl
jl,pn
mov
mov
in
in
mov
cmp
clc
xchg
imul
mov
je
dec
rcll
loope
divb
js
out
ret
lods
adcb
scas
aaa
mov
xchg
fsubl
jp
mov
sahf
iret
loopne
jb
push
pop
rolb
jbe
out
cli
popf
inc
add
mov
mov
movsb
pop
inc
xchg
nop
cmp
je
sahf
xor
aas
out
test
ljmp
xchg
scas
sti
add
or
insb
push
es
xchg
cmp
push
sbb
jbe
cmpsl
pop
push
es
sub
xchg
roll
push
push
les
sti
push
jne
xchg
push
dec
pop
push
loope
in
sti
movb
jmp
mov
jg
dec
lods
addl
js
aam
rol
adc
ljmp
jl
sti
push
pushf
scas
mov
sub
dec
or
mov
push
pop
movsb
vmread
inc
and
mov
xchg
adc
icebp
cmpsb
pop
addr16
nop
jns
nop
fcmovb
mov
inc
mov
mov
push
sbb
and
arpl
imul
in
push
add
lock
fsubrl
adc
add
pop
fisttps
mov
adc
gs
cld
cwtl
sbb
or
mov
daa
insl
adc
clc
movsb
clc
or
nop
mov
rorl
xor
add
in
popf
mov
add
adc
cmp
ret
adcl
adc
mov
xchg
jle
add
out
aaa
outsb
shlb
ds
cmp
leave
sbb
sbb
cwtl
popf
mov
xchg
rcl
mov
pusha
roll
pusha
decl
or
sbb
add
pop
and
cltd
push
xor
imul
pop
fidivrl
roll
add
pop
outsl
add
xchg
sahf
push
add
popl
icebp
cmpsb
pop
cmp
loopne
add
push
xchg
ficoml
pop
mov
and
jbe
pop
fldenv
stos
pop
or
or
shll
fs
mov
pop
data16
aas
dec
es
sub
mov
inc
inc
or
pop
rcrb
enter
push
lahf
repnz
lea
jge
dec
jl
xchg
add
ds
add
ljmp
pop
inc
lahf
push
push
cmp
mov
jo
dec
mov
je
mov
mov
lock
xor
sbb
incb
or
pop
imul
mov
or
dec
dec
cmpsb
sub
and
adc
clc
fbld
add
pop
adc
testb
or
cmp
mov
loopne
es
pop
cwtl
loopne
push
insb
imul
mov
adc
sub
nop
sbb
lea
cmp
add
fiadds
shrl
scas
outsl
cmc
sbb
imul
mov
movsb
nop
sub
add
ljmp
pop
jge
cmp
mov
addl
cmpsb
push
push
sahf
dec
push
push
lret
je
sti
xchg
out
xor
xor
sti
adc
jmp
xchg
movsb
loopne
bound
sub
rol
fadds
mov
jb
sar
js
outsl
jecxz
sub
cwtl
add
sbb
jno
dec
sbb
cmpb
imul
inc
xor
inc
jmp
xor
mov
pop
mov
outsl
sbb
pop
pop
vpmullw
push
pop
lds
cwtl
or
sub
inc
cld
pop
inc
ficoml
add
rolb
adc
pop
and
fisttps
popf
int3
sahf
pop
lea
fmuls
cmpsl
les
cs
pushf
and
xor
or
bound
push
add
test
shl
dec
xor
pop
pop
mov
pushaw
loop
jnp
movsl
push
jg
adc
dec
mov
cli
out
dec
in
es
mov
daa
subl
sbb
sub
dec
dec
and
push
sub
or
mov
adc
jl
pop
jnp
dec
enter
test
jae
loope
mov
add
inc
mov
rolb
jmp
lcall
mov
bound
jp
and
push
mov
cld
bound
pop
cwtl
das
and
lock
data16
outsb
dec
fcmovnb
add
mov
cmp
xchg
xor
jnp
aam
fisubrs
ret
and
fcmovbe
pushf
xor
adc
dec
rorl
int3
addb
cmp
mov
pop
add
mov
push
or
clc
push
mov
mov
jmp
out
frstor
push
pushf
sbb
sub
aaa
add
inc
xchg
push
add
aaa
ficoms
rol
dec
mov
loope,pt
loopne
mov
push
enter
xchg
inc
xor
ds
sbb
jecxz
push
jp
mov
adc
jle
cs
sahf
fildl
pop
and
inc
push
inc
bextr
mov
ljmp
jo
push
roll
pop
cmc
testb
jmp
push
rorb
jbe
dec
cmpb
fiadds
push
adc
and
adcb
jnp
in
xchg
xchg
jnp
pop
pop
int3
lock
pop
pop
cmp
sub
or
xchg
in
out
and
imul
push
call
adc
pop
push
arpl
lcall
jb
aam
dec
or
mov
push
add
shl
xchg
sub
adc
fiaddl
sti
test
cmp
push
shlb
push
jecxz
inc
push
sub
sbb
push
outsb
jmp
sbb
cmp
iret
or
inc
test
movsl
imul
jbe
icebp
dec
int
out
popa
add
xorb
sub
scas
sbb
push
insb
push
out
add
mov
insb
sbb
insb
fists
out
adc
xchg
js
mov
movsl
sbb
roll
and
adc
enter
push
movsl
lahf
or
mov
dec
faddl
sahf
and
pop
sub
and
fldl
mov
push
insb
mov
mov
sbb
sbb
mov
xchg
dec
xchg
lock
stos
or
mov
pop
add
push
add
call
insb
inc
imul
cs
shlb
adc
pushf
ds
or
pop
add
popf
shrb
push
js
jae
repz
shl
insb
adcb
jae
pusha
mov
fwait
mov
inc
sbb
out
and
divb
xor
pop
adc
clc
aaa
or
cwtl
fcmovne
adc
xchg
sbb
shll
mov
enter
ret
clc
in
add
int3
pop
lock
xchg
cmp
or
jg
imull
addb
mov
jl
daa
mov
lods
add
shlb
add
pop
enter
ret
out
adc
jle
jl
mov
in
fsub
lahf
inc
je
int3
adc
xchg
sahf
dec
int3
mov
mov
and
scas
push
add
xchg
gs
popa
scas
or
call
out
adc
mov
pop
sbbb
jle
gs
xchg
pop
adc
imul
insb
es
mov
fld
adc
mov
cs
push
xchg
xor
jbe
jp
jp
xchg
mov
mov
push
xor
dec
and
lds
arpl
mov
aas
xchg
sarb
movsl
arpl
aaa
inc
lock
pop
je
lcall
xor
and
adc
ret
dec
insb
ja
les
or
rolb
inc
mov
jg
lods
mov
lods
push
ds
dec
push
ret
xchg
mov
in
outsl
arpl
rclb
add
lock
cld
cmpsb
mov
dec
imull
cmp
data16
nop
xor
out
push
clc
add
mov
xlat
inc
cmp
out
and
jl
jnp
fiaddl
or
stos
pop
xor
mov
push
sbb
lds
aaa
sbb
mov
es
cld
inc
push
loopne
icebp
pop
xor
dec
std
int3
sub
dec
pop
pop
imul
in
mov
or
push
jno
add
cltd
pusha
mov
scas
call
aad
rolb
push
or
mov
mov
loopne
lcall
lahf
adc
add
jo
dec
pop
sti
loop
mov
add
adc
data16
scas
pop
stos
jle
push
loope
test
mov
cmp
adc
push
rorl
call
loopne
fidivs
and
shll
jl
sub
repnz
in
loopne
mov
lock
push
cmp
je
mov
pushf
mov
pop
sbb
push
ss
notl
cmpl
xchg
jl
cmp
pop
add
sbb
inc
sub
cmc
sub
test
xchg
out
int
shrb
leave
jmp
cli
outsl
cli
lcall
xor
in
add
adc
inc
add
bound
movsb
xchg
shll
pop
pop
inc
and
sub
push
test
or
in
std
jle
in
dec
inc
adc
movsb
sbb
sbb
cmp
orl
cld
insl
mov
nop
cmp
jp
loope
lock
call
push
js
cli
pushl
sarl
add
lea
push
mov
jmp
jne
or
fsts
push
push
call
mov
enter
pop
pushf
lcall
xor
lods
mov
or
cmp
xchg
and
ret
mov
inc
xchg
mov
push
xchg
outsb
nop
and
imul
pop
fwait
test
dec
lahf
xchg
jle
dec
push
fmuls
sub
xor
or
adcb
inc
fdivrl
out
dec
fbld
xchg
mov
js
mov
mov
popa
add
inc
sbb
bound
in
int3
pusha
inc
lcall
adcl
xchg
pop
and
rclb
push
ud2
dec
rol
or
cmp
sbb
xchg
cmp
cli
push
test
dec
sub
push
sarl
adc
into
mov
sub
mov
cmpsl
xor
rcr
pop
sub
mov
inc
repz
cmc
loopne
jbe
xchg
shl
int3
adc
cs
aaa
adc
lods
and
sbb
fsubr
iret
add
adc
inc
xchg
xchg
repnz
mov
mov
sti
shlb
imul
push
loop
lret
decb
mov
ret
scas
mov
add
pop
and
pusha
das
ficompl
push
adc
mov
popa
dec
adc
aaa
add
and
push
and
add
or
mov
or
mov
jb
lods
loopne
aas
imull
sub
icebp
movsl
pop
pop
push
in
xchg
out
mov
clc
inc
testl
ss
iret
mov
mov
test
mov
adc
outsl
cmp
push
inc
cmp
adc
xchg
sbb
xchg
mov
mov
imul
cmp
mov
inc
fs
xor
cmpsl
mov
in
lods
cmp
jg
fistpll
dec
jl
js
push
jno
sub
jo
mov
inc
push
cmp
xor
scas
repz
and
xchg
inc
pop
push
aam
std
or
inc
addl
cmpsb
movsl
mov
aas
xor
push
repnz
push
inc
push
xchg
push
subl
das
insl
nop
cld
mov
inc
xchg
mov
loopne
mov
or
cmp
xor
mov
loope
xor
xor
insb
insl
xor
push
or
adc
pop
sbb
pop
sub
mov
loope
push
sub
dec
pop
inc
xor
loope
xchg
clc
sbb
insb
dec
mov
or
pop
mov
dec
rcl
stos
lcall
sbb
jo
pop
aaa
mov
in
mov
sub
andb
das
sahf
jecxz
xor
out
jge
data16
dec
jp
sub
mov
nop
jo
dec
out
sub
add
enter
cmpsb
cld
ds
pop
insl
and
sub
mulb
jp
jg
pop
xlat
je
and
fcmove
daa
pop
dec
pop
mov
or
ret
xor
jns
push
jbe
pop
jno
adc
outsb
inc
das
add
inc
add
and
and
add
lock
rolb
dec
dec
es
scas
les
add
dec
or
in
dec
mov
or
push
xlat
scas
push
adc
mul
mov
sbb
cmp
dec
insb
cs
sti
mov
cmp
ror
aad
dec
xchg
add
cmp
sbb
xchg
dec
xchg
stos
mov
sub
insl
xchg
mov
cmp
pop
out
fcoms
push
leave
and
in
mov
in
mul
xchg
hlt
cmp
add
popf
mov
js
gs
jp
mov
add
pop
dec
dec
aam
adcl
cmp
inc
mov
movsl
cld
xchg
scas
lea
dec
adc
fisubrs
stos
call
in
dec
pop
lea
adc
mov
dec
stos
mov
jmp
ret
sbb
test
add
adcb
dec
daa
and
iret
les
dec
jno
cmp
call
cld
mov
add
pop
mov
adc
cmpsl
xor
iret
sub
scas
lods
int
loopne
xor
mov
loopne
push
loop
ljmp
jbe
sub
or
push
adc
add
and
mov
mov
insl
dec
push
cwtl
add
shlb
adc
xchg
sbbb
sbb
rolb
pop
add
mov
push
lock
mov
xor
xchg
push
addl
je
add
dec
xchg
mov
push
popf
mov
xlat
shrb
push
cmp
in
pop
rcrl
xor
or
gs
jo
movsl
sub
add
push
cltd
shl
nop
push
add
push
adc
pop
jne
sarb
aas
pusha
sub
push
mov
or
push
addr16
gs
ja
sahf
lock
lock
popf
sbb
adc
xchg
pop
rorl
jae
cmpl
aas
aaa
fadd
inc
xor
out
and
mov
adc
fisttps
mov
add
cmp
call
or
mov
cli
fbld
push
jb
in
cs
loopne
dec
dec
arpl
pop
sbb
inc
scas
jmp
imul
or
xchg
ror
ja
pop
aam
stc
cmp
sbb
loop
cmp
test
xlat
add
insl
jb
cmp
xchg
pop
insb
test
push
lcall
mov
dec
iret
dec
push
xchg
rorl
pop
sbbl
lret
rcrb
push
and
movsb
adc
inc
icebp
xchg
add
add
fldl
cwtl
repz
inc
ret
and
push
cwtl
pop
push
inc
xor
ss
and
inc
nop
cld
mov
sub
sub
out
xchg
lret
lock
xor
push
cmp
sub
xor
pop
iret
or
add
lret
inc
push
sahf
and
add
scas
cli
fisubs
nop
mov
mov
add
dec
les
cwtl
sahf
inc
int
pop
data16
negl
fwait
cltd
aas
ljmp
mov
jno
out
jle
les
xor
test
fs
loopne
icebp
fmulp
stos
fwait
leave
dec
push
pop
mov
jle
ret
inc
add
inc
rol
sbb
xchg
xchg
and
test
fs
faddl
adc
jbe
xor
loopne
and
mov
jge
test
rclb
cmpb
cs
xchg
insb
out
subb
xor
xchg
xor
mov
cwtl
in
cmpsl
loopne
push
xchg
push
xor
xorl
sbbb
and
js
ljmp
outsl
and
sub
fisubrl
mov
cmp
pop
mov
xor
jno
mov
aad
lods
in
leave
lret
xchg
pop
imul
push
in
or
push
mov
inc
jl
adc
adc
in
inc
inc
lock
lcall
pop
gs
cvtps2pi
push
test
push
pop
mov
aad
pop
scas
cmp
in
add
leave
divl
leave
jmp
out
adc
mov
imul
stc
into
repz
popa
pusha
fcmovb
je
push
mov
imul
mov
lock
andb
ret
or
pop
std
sub
push
or
and
aam
mov
pop
cs
test
add
setns
mov
pushf
nop
sahf
std
sti
mov
loope
cmp
jae
dec
icebp
sbb
add
cmp
sbb
sbb
lods
pop
sub
outsb
jmp
add
mov
das
dec
add
push
insl
insb
popa
out
fsubrs
rcl
pop
arpl
jg
out
pushf
xchg
cmp
and
idivl
movsl
mov
movsl
add
mov
inc
inc
loopne
ret
jecxz
dec
pop
or
orb
aam
push
adc
jecxz
fsubr
cmpsl
and
add
clc
xchg
cmp
test
into
push
mov
push
scas
pop
mov
jmp
sbb
sub
je
aad
loopne
jp
pop
adc
add
mov
leave
clc
sub
ja
psrlq
sub
daa
adc
cli
or
out
cmpsb
mov
in
sbb
jge
add
in
mov
and
mov
outsb
cwtl
nop
sub
je
movsb
lcall
test
test
dec
adc
in
out
mov
int
inc
push
into
and
jl
shrb
in
hlt
mov
push
das
pop
negb
dec
pop
inc
push
ret
and
loopne
mov
lea
push
dec
inc
inc
mov
int3
and
add
add
push
push
mov
ret
and
cwtl
mov
fistps
ret
add
sbb
pushf
rcl
adc
fbstp
or
aaa
je
sub
xor
fwait
or
xor
sbb
and
aad
clc
or
iret
mov
out
inc
fildll
add
dec
and
jnp
xchg
mov
add
pop
insb
shll
sarb
pop
jmp
mov
pop
ljmp
ret
mov
jno
adc
data16
cld
or
inc
faddl
xchg
nop
push
inc
push
loopne
mov
lcall
inc
mov
xorb
das
mov
dec
pop
fistpll
adc
les
cltd
adc
xchg
rorb
push
cmp
enter
stos
inc
incl
jnp
cmpsb
pusha
push
addb
popa
jmp
ret
ja
sbb
call
arpl
adc
mov
sti
test
mov
subl
inc
es
xor
faddl
lahf
and
movsb
inc
mov
sub
filds
mov
mov
gs
es
inc
scas
add
jmp
mov
and
scas
fbld
fidivrs
popa
pop
adc
xlat
dec
and
mov
or
or
cmp
lock
jle
cld
pop
mov
mov
inc
movsl
loopne
xor
sbb
test
push
inc
aam
xor
ss
aas
sahf
cmp
xchg
mov
pushf
shll
mov
jmp
sub
clc
aad
push
ljmp
jno
sbb
adc
ss
js
mov
cmp
mov
push
out
ss
mov
rolb
ljmp
inc
or
xchg
mov
movl
cld
mov
xorb
rcl
and
and
out
sub
nop
in
jno
mov
cmovp
add
shlb
mov
inc
xor
xchg
sbb
sub
inc
pusha
push
int3
popa
inc
adc
cmp
cmpsb
gs
loopne
fidivs
sbb
lock
cmpsl
push
jg
xchg
sub
stc
adc
test
and
out
xchg
or
and
push
je
scas
das
jg
inc
add
movl
pop
pusha
inc
jo
icebp
mov
repz
clc
popa
out
mov
inc
pop
jo
xchg
push
push
sbb
outsl
pop
arpl
hlt
sarb
mov
cli
mov
push
jge
dec
out
lock
push
subl
mov
jbe
add
ljmp
sub
cld
lcall
and
mov
rorl
clc
nop
sbb
pop
lret
mov
xchg
xchg
aad
mov
and
mov
mov
mov
mov
mov
mov
jecxz
or
mov
shll
jmp
and
mov
dec
mov
fisttpl
cmp
test
and
mov
pop
clc
test
es
jp
jbe
jmp
mov
sahf
inc
inc
jns
fsubrs
shlb
ret
sub
and
xchg
cmp
imul
mov
sub
cld
jg
out
mov
test
cmp
bound
int3
sub
sbb
dec
jbe
test
or
mov
call
and
je
push
dec
xor
mov
pop
das
mov
sub
cmp
test
xchg
dec
fldcw
and
add
pop
je
sbb
sti
xor
push
sbb
jmp
mov
inc
jo
jmp
dec
jmp
aaa
xchg
xor
pop
sbb
sbb
je
movsl
sbb
push
xchg
fdivr
mov
jno
or
add
loope
lods
sahf
mov
push
xchg
pop
lcall
cltd
mov
jl
pushf
cmp
jge
lock
aaa
lods
sbb
enter
out
shr
mov
xchg
cwtl
fstpt
imul
cmp
subl
jnp
adc
repnz
mov
adc
cmc
roll
lcall
sbb
or
adc
call
imul
movsb
mov
add
test
test
jecxz
add
dec
jecxz
cli
mov
inc
mov
and
jge
mov
fs
rolb
and
ljmp
je
cmpsb
ljmp
mov
lcall
pusha
lea
cmp
out
push
xor
fdivs
repnz
xor
sbb
lret
sub
sbb
pop
out
xorb
je
jb
add
call
psubusb
in
ja
sbb
js
lock
fisttpll
and
das
adc
mov
movsl
pusha
incl
pop
rcl
or
ret
movnti
fistl
xor
into
out
icebp
sub
pop
cmpsl
or
mov
jb
shl
xchg
push
mov
ret
xorb
testl
movsl
pop
jle
test
xchg
mov
rcl
loope
cmc
data16
addl
xchg
in
push
test
adc
mov
mov
out
lods
dec
call
movsb
pop
push
dec
mov
mov
dec
lods
sub
pop
incb
xor
push
lcall
out
xor
sub
dec
call
sti
inc
xchg
aas
jb
pop
xchg
inc
mov
pop
pop
cmp
clc
insb
bound
inc
mov
rol
add
inc
test
clc
push
nop
jp
push
lahf
mov
in
mov
dec
scas
clc
mov
inc
je
das
in
jecxz
sbb
pop
xchg
mov
lcall
mov
mov
adc
sbb
xor
in
add
aam
xchg
enter
sbb
inc
loopne
push
ljmp
imul
mov
andl
nop
dec
xchg
mov
scas
jbe
cmp
inc
ret
pushf
lret
dec
mov
push
loopne
sub
mulb
mov
adc
and
sti
jno
outsl
decl
cld
pusha
xorl
das
ds
xorb
aam
je
aas
xchg
ret
mov
jmp
cmc
push
mov
cmp
adc
call
cmpsl
rcll
and
icebp
push
sub
loopne
mov
rorb
cmpsb
jl
ret
lcall
cli
divb
push
cmpb
fiaddl
pusha
in
jp
fwait
add
and
arpl
cmovne
xchg
push
hlt
pusha
ss
test
and
faddl
inc
mov
mov
dec
dec
mov
inc
cmp
lock
cs
push
jle
cli
popa
inc
jg
inc
add
test
ret
iret
dec
negb
push
scas
cmp
loope
ja
mov
stos
icebp
ss
jns,pn
cmc
push
popl
pop
pop
mov
hlt
fists
inc
push
mov
cwtl
mov
outsl
mov
subb
lss
push
jo
inc
and
push
push
fisubs
or
pop
nop
pop
pop
push
or
lock
popl
sbbb
cld
mov
stos
mov
push
dec
out
pcmpeqd
je
pop
add
lods
push
clc
cmp
and
or
outsb
clc
aaa
xchg
xchg
mov
add
adc
insl
jnp
out
outsb
fistps
mov
and
ds
ds
dec
sub
and
clc
pushf
lock
shlb
popa
jo
xorl
and
mov
je
cs
call
outsb
cmpsb
dec
imul
aam
nop
iret
add
mov
rclb
aam
cmp
or
pop
cmpsl
mov
xor
mov
popa
xchg
sub
clc
push
sbb
dec
orb
iret
popl
repnz
sub
adc
fadd
xchg
lock
mov
push
mov
sbb
fsubl
push
dec
mov
fcomps
popf
jbe
or
les
fstl
bound
sahf
xor
mov
pop
adc
cmp
push
mov
lret
hlt
js
fiaddl
iret
and
lcall
adcb
jo
dec
add
adc
adc
push
imul
lcall
out
mov
mov
xor
scas
jmp
lret
jp
xchg
jb
scas
adc
out
mov
mov
cli
lods
push
movsl
adc
adc
jmp
cmpsb
jg
jns
insb
cmpsb
or
jne
mov
or
cmp
nop
add
mov
addr16
fidivs
xchg
aaa
mov
int
jecxz
and
adc
inc
aaa
mov
or
dec
aas
mov
pusha
pop
xor
add
in
fucomi
add
xor
sub
jle
fnstsw
ret
add
sbb
mov
push
add
in
sub
sbb
inc
sub
or
std
xchg
jge
cmc
gs
cmp
stos
push
insb
pop
insl
mov
xor
mov
mov
xchg
mov
lahf
jmp
cld
call
or
sahf
je
sbb
pop
loop
push
mov
cmpsl
movsl
pusha
push
ljmp
scas
ljmp
inc
outsl
adc
fsubr
pop
rcl
adc
popa
shll
sarb
into
adc
arpl
aas
leave
inc
push
mov
push
aam
daa
out
sbb
movsl
dec
shl
addr16
lock
inc
cld
push
out
pop
and
and
rcl
loop
je
push
shlb
stc
movb
hlt
pop
sub
loope
loopne
dec
cli
mov
aaa
scas
addr16
bound
subb
pop
and
or
loopne
inc
sbb
inc
call
add
mov
bound
stos
shrl
shll
test
fwait
dec
push
dec
and
es
fcom
shlb
popf
imul
shr
cld
shl
xchg
push
mov
mov
mov
dec
xor
add
outsl
sbb
adc
cmp
clc
gs
aam
or
push
cmpl
pop
and
outsl
xor
xchg
mov
xchg
scas
and
aas
call
subl
xor
add
pop
faddl
lods
push
cwtl
shlb
adcl
add
ds
and
scas
add
jo
das
imulb
pop
or
clc
or
mov
sub
das
out
std
lds
roll
out
ljmp
and
or
pop
pop
inc
sbb
sub
mov
out
mov
ss
push
fcoml
mov
inc
cmpb
mov
add
and
or
jge
adc
notb
push
pop
loop
lret
fsubr
fwait
add
sub
lahf
popa
mov
xchg
cmp
sbb
ds
lcall
xchg
push
xor
push
roll
js
daa
outsl
pushf
pushf
mov
inc
mov
ret
cmpl
push
movlhps
dec
lcall
pop
push
ficompl
test
ret
inc
mov
mov
mov
insl
and
adc
adc
icebp
subl
and
pop
or
outsb
push
push
loopne
je
or
dec
hlt
loop
in
inc
and
ret
lods
sub
push
add
mov
dec
sar
push
jp
pop
pxor
int3
pop
outsb
jae
les
lods
cli
adc
daa
mov
outsl
in
bound
jo
push
jle
lock
push
mov
scas
dec
popf
or
pop
and
inc
clc
inc
ret
pop
jmp
jl
add
je
dec
mov
add
icebp
lock
cmp
adc
pop
inc
inc
mov
ret
addb
inc
aaa
jp
imul
loopne
mov
arpl
push
outsb
sahf
push
add
push
scas
cmp
push
dec
ljmp
inc
es
or
nop
sbb
or
adc
ret
adc
js
dec
int
dec
xor
or
pop
fstpl
jne
std
out
dec
adc
adc
xchg
add
sbb
repz
sbb
and
or
cmp
jmp
jbe
xchg
fs
pop
popf
mov
jl
and
out
jg
pusha
in
jp
gs
mov
inc
mov
mov
xchg
nop
pushf
in
out
pop
test
xchg
mov
mov
xorb
lea
sbb
jbe
xor
mov
cmp
jle
mov
xor
adc
push
loopne
push
test
in
rcll
mov
mov
arpl
test
push
sbbl
dec
shrb
fdivr
mov
push
bound
xchg
xchg
sub
ljmp
mov
jbe
mov
popw
cld
into
mov
pop
stc
lds
fdivl
add
sbb
inc
clc
icebp
or
pop
int
lock
std
jp
inc
xchg
sbb
xchg
add
daa
or
jp
mov
mov
pop
jmp
xor
aad
mov
cmp
dec
in
es
dec
mov
mov
idivb
inc
sub
xchg
mov
push
icebp
inc
inc
xor
push
aad
sub
rolb
jae
stc
incl
sbb
fucomi
ret
mov
push
push
jg
and
aaa
adc
clc
sbb
sbb
aaa
andl
insl
repz
mov
push
mov
cmp
and
xlat
jno
pop
aad
mov
xor
xchg
pop
dec
mov
sub
push
ret
cld
pushf
test
push
and
mov
lret
in
lds
ss
jecxz
lock
hlt
sub
add
pusha
out
xchg
jl
lods
mov
mov
adc
sbb
dec
inc
add
dec
cmp
addr16
sbb
int3
and
aad
mov
inc
sbb
sub
loope
lods
mov
push
push
jbe
and
push
xchg
fsts
dec
ljmp
idivb
addb
add
mov
mov
out
push
or
aaa
scas
das
sbb
mov
inc
data16
in
ret
movsb
les
mull
inc
dec
fidivrs
jecxz
sbb
dec
push
cmp
mov
sarl
aaa
call
roll
add
xchg
jmp
push
imulb
pop
sub
fists
fsubs
push
mov
jge
mov
ja
std
ja
fldlg2
dec
mov
jge
pop
jo
jle
push
vmovq
mov
xor
inc
in
cs
jmp
sub
aam
mov
jno
dec
jmp
xrelease
add
dec
test
jbe
aas
add
sbb
push
rclb
cmp
lret
inc
jbe
jb
leave
and
mov
push
mov
push
add
jnp
jle
jp
adc
xchg
rcll
add
fadds
cld
xorl
loopne
outsb
mov
enter
or
and
or
andb
out
fcomps
push
cld
pushf
sub
out
imul
or
lret
dec
les
test
fisubs
cld
inc
mov
call
daa
sbb
push
dec
jl
xchg
fwait
push
divl
jl
jecxz
in
pop
xchg
js
push
out
lahf
adc
into
loop
ljmp
cwtl
add
add
lods
fadds
inc
add
sub
push
divb
inc
adc
movsl
mov
xchg
dec
out
clc
lahf
mov
loopne
push
cmp
inc
fdiv
mov
mov
popa
adc
inc
outsl
inc
lds
movsb
test
ds
aad
outsb
cmpb
mov
adc
ret
sub
incl
lea
jbe
add
fstl
aam
int3
into
push
in
pop
pop
cld
call
inc
test
and
lcall
pusha
sbb
mov
sbb
cmp
clc
pusha
adcb
or
pop
sbbl
lods
sub
sub
inc
repnz
xchg
and
sbb
push
sahf
cltd
add
out
sub
in
popa
das
ret
fidivl
pop
mov
adc
incl
loopne
mov
sbb
loop
sub
add
in
mov
add
xor
xchg
lock
mov
xchg
and
jbe
xchg
add
dec
mov
sbb
clc
bound
ljmp
mov
lods
fisubs
mov
adc
je
in
mov
inc
pop
loopne
lret
popa
int
sub
data16
adc
test
xchg
sbb
mov
outsb
mov
sbb
xchg
shrb
push
lahf
jne
or
outsb
mov
ljmp
fcomp
mov
mov
ljmp
es
add
sub
add
and
add
push
sahf
sbb
ret
and
leave
cmp
or
pop
imul
into
std
shll
and
xchg
test
cvttps2pi
adc
jbe
aam
inc
leave
lods
add
das
add
mov
aas
ljmp
and
clc
mov
testl
scas
cmp
call
shll
imul
adc
out
mov
popa
and
test
int
fisttps
addl
and
add
add
fistpl
or
loop
sahf
fsubr
clc
popf
test
mov
movsl
add
mov
nop
push
insb
inc
xchg
adc
dec
sub
add
push
sbb
sub
inc
loopne
push
dec
clc
out
xlat
loope
pushf
fstpt
pop
dec
cmp
or
add
xchg
bnd
mov
mov
sub
aaa
pop
pusha
stos
push
push
cmp
inc
and
lods
mov
jb
cmp
ret
jecxz
or
ja
loop
ret
jge
aam
sub
shlb
ljmp
xor
fs
xchg
dec
scas
jg
ljmp
jl
fxch
ret
sub
insl
js
jno
sub
or
movsl
cmp
xchg
shll
inc
movsb
mov
data16
data16
icebp
or
js
sub
loop
and
adc
inc
cwtl
jae
mov
and
addb
cmp
leave
jbe
jbe
sbb
gs
mov
jg
ret
stos
dec
jmp
in
lock
fiaddl
dec
inc
and
rolb
jecxz
sub
cli
fs
incl
pop
or
andb
mov
lret
jmp
jnp
inc
pop
call
inc
inc
jns
iret
add
pop
adc
jmp
jmp
add
xor
adc
popl
xchg
int3
int3
es
shll
negb
mov
adc
test
push
jns
sbb
inc
xor
xchg
pop
call
shl
pop
mov
adc
stos
sbb
lahf
fwait
push
sbb
jp
adc
xchg
ljmp
sub
pop
or
mov
add
bnd
xor
adc
adc
inc
mov
rcrb
xlat
das
jl
scas
xor
or
jl
mov
sbb
add
and
cld
inc
mov
or
pop
call
cli
mov
loop
and
add
cli
and
mov
pop
cld
xchg
jns
or
xchg
or
dec
add
sar
push
data16
fbstp
sbb
xchg
pop
mov
sub
push
sub
inc
pusha
ja
data16
ja
in
orb
jecxz
unpckhps
test
and
and
outsb
aas
ficomps
js,pt
dec
pop
adc
cmp
push
call
mov
pop
add
and
les
xchg
inc
rclb
scas
loop
and
inc
es
lock
aas
and
dec
data16
and
add
add
dec
and
mov
mov
pop
and
clc
xor
rorb
push
andl
adcl
jno
shl
cmp
adc
dec
xor
jle
adc
insb
push
mov
pop
mov
xchg
and
xor
jmp
sahf
or
jbe
dec
push
aam
jmp
dec
lret
fwait
mov
in
and
inc
push
jecxz
aad
xchg
dec
test
dec
adc
mov
jmp
in
lods
lcall
popa
sbb
pop
mov
pusha
lret
insl
daa
mov
mov
push
adcb
das
test
pop
mov
cmp
inc
mov
xchg
loope
test
out
xchg
cmp
scas
push
jo
or
cmp
lods
mov
scas
pmaxsw
movsl
sbb
ds
into
mov
pop
ds
aam
ljmp
sub
inc
into
mov
push
mov
xchg
js
xchg
push
push
shl
mov
out
sbb
icebp
cmpb
popf
aaa
mov
ss
fs
cmp
testb
and
hlt
fnsave
lods
or
mov
cmp
insl
ss
lcall
or
lods
test
call
add
push
jg
mov
test
lahf
inc
cmp
jo
out
sarb
test
pop
push
mov
add
adc
stos
addr16
push
cmp
insl
icebp
mov
pop
push
mov
sbb
sbbb
cmp
mov
pop
aaa
cwtl
sbb
push
push
add
lods
mov
cmp
outsl
adc
dec
sbb
cmp
enter
pop
push
xchg
xor
mov
xor
mov
xchg
inc
clc
xor
and
lods
loope
leave
dec
mov
fsubs
leave
loopne
test
fbstp
fnsave
adc
inc
rolb
ret
xor
cltd
dec
iret
cli
cwtl
daa
lahf
in
je
fildl
dec
mov
jmp
jl
mov
jmp
xor
xor
stos
call
mov
testb
stos
and
aam
popf
sti
dec
and
and
mov
jp
cmc
adc
aas
lret
fisttps
jecxz
imul
outsb
aad
cld
push
dec
jmp
dec
cs
push
ljmp
cmp
push
dec
aad
ret
sbb
mov
addl
movsb
xor
scas
mov
mov
and
int3
pop
inc
dec
xor
inc
jecxz
sbb
inc
pop
fidivl
mov
ret
jae
out
sbb
inc
mov
push
add
pop
stos
sarb
lcall
xor
sbb
xor
xchg
sarb
popa
mov
and
inc
adc
cmpsb
nop
cmp
stos
push
cmp
pushf
daa
std
in
cwtl
xor
jl
dec
xchg
inc
mov
jne
outsb
dec
xchg
outsl
add
add
out
jge
cs
pop
mov
clc
mov
mov
or
pop
lods
mov
jg
cwtl
ljmp
xchg
cmp
movsl
mov
sub
je
mov
into
pop
xor
iret
aam
add
aad
mov
mov
sarl
lds
sbb
sti
fdivl
sub
imul
out
mov
push
in
sarl
js
or
mov
aaa
clc
mov
mov
add
sub
and
xchg
test
cmp
add
test
sub
xchg
add
or
xor
loopne
sbb
add
push
pop
in
test
mov
popa
es
push
fcmove
out
xchg
and
xor
int
adc
js
popa
add
push
sub
movsl
jl
hlt
xchg
test
repz
mov
adc
lds
xchg
pop
sar
pop
shr
ret
les
repz
mov
pop
jno
popa
dec
ret
inc
mov
cmp
inc
and
add
and
test
addb
loope
dec
ret
push
xor
add
mov
mov
jae
jecxz
jecxz
push
hlt
and
pushf
push
test
ljmp
add
aaa
mov
hlt
cmp
je
add
cmp
add
out
jb
mov
shll
loop
pop
cmc
jle,pn
jbe
bswap
inc
gs
mov
add
mov
sbb
test
mov
push
ficompl
adc
sub
jo
fisubl
ljmp
xor
outsb
cmpsb
jnp
js
adc
xorb
sbb
sub
cmp
nop
push
adc
fsubl
and
scas
iret
les
sbb
lds
mov
xor
lahf
cmc
mov
mov
fadds
adc
mov
dec
fwait
lods
xchg
pop
adc
stos
mov
cld
ss
dec
add
cmp
xchg
add
sbb
jo
lds
les
nop
rcll
add
jp
and
rcrb
or
scas
and
out
sbb
aaa
insb
and
push
inc
add
lods
shlb
and
mov
mov
xor
inc
mov
push
imul
gs
addl
out
mov
mov
loopne
jbe
clc
cmpsl
xchg
stos
mov
andl
jp
xchg
clc
push
add
in
decl
xchg
shlb
pop
imul
add
loope
pop
or
jge
sbb
or
icebp
xor
sahf
mov
pop
cli
cli
movb
pop
ret
outsl
adc
loope
jg
fsubp
scas
sub
ljmp
push
fdiv
sti
jp
inc
sub
and
scas
nop
shlb
or
test
mov
pop
add
mov
fdivs
movsb
popa
dec
push
les
add
push
js
mov
mov
xchg
sbb
repz
call
xchg
sbb
mov
rcr
adc
addb
mov
test
mov
int3
cmp
movsl
loop
out
pop
sar
push
push
sbb
ds
jo
pop
or
jg
jle,pt
in
inc
inc
adcb
push
test
lods
das
push
sub
gs
push
or
sbb
xor
and
test
fdivrl
lcall
adc
sbb
shr
mov
mov
push
sub
popa
mov
iret
jae
stc
mov
or
push
sbb
mov
adc
sub
push
mov
jbe
lods
test
enter
dec
inc
outsl
adc
mov
dec
mov
sbb
xchg
push
dec
loop
inc
xor
in
icebp
imul
or
or
jb
xlat
pop
aas
incl
sub
add
adc
call
enter
pop
sbbl
pop
sbb
push
cmp
pop
push
mov
sbb
adc
shlb
mov
int3
idivb
jbe
sbb
pop
xchg
mov
pop
inc
loop
sbb
adc
push
clc
mov
inc
cmpb
scas
fs
pushf
out
push
lret
sub
lods
or
dec
xor
push
sbb
lret
dec
cs
add
mov
xor
roll
bound
es
outsl
dec
inc
inc
lcall
cmp
adc
adc
sub
out
in
dec
divb
xchg
dec
repnz
into
or
or
or
jns
dec
inc
fsubrs
pop
cmpsb
dec
pop
mov
pop
add
mov
sahf
incb
mov
fpatan
mov
dec
out
into
cmpsb
jecxz
ja
mov
lods
subl
jmp
testb
add
ljmp
repz
push
mov
loopne
push
out
cmpsb
dec
cmp
jne
call
out
xor
push
int3
pop
insl
ds
mov
cmp
notb
push
push
xor
je
call
sahf
pop
ret
mov
jns
add
add
adc
or
bound
fdivrs
inc
add
popa
aam
js
imul
jnp
es
mov
movlps
fisubrl
shlb
xchg
pop
or
or
inc
inc
push
je
test
outsl
stos
sbb
subb
es
bound
jns
hlt
add
jge
cltd
xchg
add
sbbl
adc
push
out
sarb
int3
test
je
cmpsl
cmp
cmp
add
sub
push
mov
sbb
push
jecxz
add
punpcklwd
jmp
out
incb
repnz
jnp
sub
mov
and
in
pop
nop
inc
shlb
sub
push
pusha
imul
insl
daa
sbb
adc
insl
push
add
sub
adc
or
std
pop
cmpsb
jle
xchg
out
jno
cwtl
add
insb
pop
cmpsb
shrl
push
mov
inc
cmc
movsb
test
lds
lock
js
pop
and
and
adc
mul
jl
out
xchg
sbb
clc
cmp
mov
sub
inc
xchg
adcb
jecxz
pop
xchg
fiaddl
dec
loop
gs
scas
std
adc
jle
mov
mov
xchg
jl
std
es
inc
or
faddp
lock
shl
push
push
cmp
int
fidivl
inc
inc
fs
jg
add
cmp
add
not
dec
fistpl
xchg
push
lock
idiv
cld
xchg
push
pop
imulb
mov
pop
mov
or
rol
mov
outsb
pusha
mov
dec
xchg
aam
xor
jbe
lock
push
push
and
mov
gs
nop
jo
push
mov
repz
sti
js
stos
aaa
shlb
into
xchg
push
addb
dec
insl
inc
pop
mov
loopne
cli
lods
mov
call
stos
in
sub
call
mov
cmpsl
in
jmp
loopne
pop
mov
jecxz
imul
mov
pop
cmp
push
xchg
mov
test
scas
rclb
mov
enter
xchg
add
sbb
dec
testb
loopne
inc
mov
iret
cld
and
xchg
jo
add
decb
mov
fsubl
push
fldt
es
sbb
orb
das
out
cli
adc
push
add
daa
lret
testl
pop
repnz
imul
pop
test
inc
lcall
adc
push
or
into
fcom
cmc
cld
hlt
push
mov
popf
pop
push
into
xchg
ret
outsb
ficoml
jle
push
shll
scas
mov
js
sbb
outsb
fdiv
mov
push
in
mov
mov
lcall
jg
call
cli
push
addb
inc
mov
jmp
adc
pushf
push
dec
and
loopne
mov
cmp
xorl
cmp
jl
fs
mov
mov
cwtl
pop
lods
dec
fs
icebp
mov
gs
pop
push
lret
mov
nop
jo
fs
insb
jmp
ret
sub
mov
fsubrs
jmp
or
mov
icebp
rolb
jle
push
push
pop
scas
add
add
fcmovnbe
fistpll
adc
add
enter
cli
lds
xor
sub
clc
mov
sbb
fsub
aam
push
test
mov
mov
lock
cmc
insb
jecxz
lea
insb
ret
mov
push
mov
jno
pop
test
sbbl
std
cmp
mov
js
mov
mov
lret
scas
lcall
pop
sub
xchg
sub
xchg
add
jne
xor
imul
push
jg
xor
aas
js
mov
mov
add
and
sbb
pop
dec
loopne
sbb
and
in
ret
pop
mov
call
push
push
lret
add
testl
mov
clc
adc
xor
pop
cld
jle
fptan
pop
sub
jmp
xor
lret
nop
sub
xchg
or
pusha
andl
mov
fwait
xor
movsb
push
jecxz
mov
pop
icebp
or
das
call
cmp
in
mov
push
fadds
mov
lods
inc
lock
mov
dec
xchg
jecxz
hlt
sbb
mov
adc
jo
mov
adcb
push
dec
push
daa
push
adc
cmp
movsb
pushf
cltd
dec
and
jbe
and
nop
fcomps
cmpsl
aam
push
sub
lcall
lds
add
daa
dec
cmp
bound
in
lret
and
into
cwtl
lock
mov
lahf
pop
cmp
push
cs
push
mov
sub
cmp
mov
and
sbb
nop
mov
gs
or
mov
mov
cmp
xchg
outsl
cmp
pop
sub
lahf
js
movsb
fmull
std
clc
aaa
jb
jmp
pop
xchg
out
push
fwait
cs
jo
aas
add
or
rcr
mov
mov
dec
adc
pop
push
push
jge
fisttps
push
out
adc
out
in
and
mov
imul
dec
inc
inc
cmc
lods
add
or
icebp
mov
push
fistl
xchg
or
dec
inc
inc
stos
andl
adc
lods
sub
cmp
sbb
mov
add
shr
iret
dec
in
mov
cmp
sbb
push
sbb
cmpsb
sbb
add
xchg
pusha
jne
jns
push
xchg
rolb
mov
stos
rcrb
sbb
adc
fwait
call
push
jns
dec
inc
push
push
fistl
push
jmp
imul
flds
pop
adc
cmpsl
mov
sahf
loopne
cs
inc
mov
mov
hlt
popf
sbb
test
loopne
hlt
cmp
push
xchg
ds
mov
inc
cmp
mov
inc
cltd
test
mov
negl
sbb
cltd
arpl
add
imul
push
rorl
xchg
sbb
push
jmp
mov
xchg
cmp
jecxz
jno
push
sub
mov
mov
add
or
jmp
sbb
shrb
push
inc
push
inc
sub
xchg
jno
stos
jecxz
mov
mov
or
mov
push
pop
es
ds
addb
xlat
sbb
cmp
hlt
add
arpl
sti
mov
adc
ret
mov
movb
andb
mov
data16
jmp
sbbl
dec
cmp
inc
jnp
mov
test
mov
pop
xchg
jp
xor
cmpb
ljmp
nop
ss
and
sbb
or
mov
jb
sub
push
add
xor
neg
pop
imul
pop
cmp
mov
daa
out
or
sbb
dec
mov
fcoms
rcll
jo
loop
inc
aas
sbb
adc
cwtl
add
in
sarl
rclb
jl
lods
add
lret
cmp
test
mov
adc
xchg
fistpl
and
xorl
jecxz
mov
mov
loope
aam
iret
xchg
mov
outsb
lock
lods
sub
and
lret
aad
out
nop
add
shrb
movsb
mov
jl
cmpsl
movsb
or
testl
or
or
lods
out
clc
push
repnz
pop
pop
es
nop
sbb
js
jecxz
inc
pop
pusha
lock
lea
lea
pop
divl
jmp
hlt
jmp
std
pop
rclb
mov
xor
xchg
lcall
jne
cmp
cmp
rol
lea
push
inc
mov
cmp
fisubrs
je
xor
call
test
popf
mov
sub
jmp
push
sbb
or
dec
shrl
mov
xorb
inc
inc
lcall
pusha
lds
gs
or
std
cli
add
dec
mov
push
jmp
xor
es
test
mov
pop
mov
pop
dec
mov
mov
inc
mov
xor
push
fstpt
repnz
sti
cmp
jl
push
testl
aaa
mov
in
gs
mov
aad
push
pop
pop
aad
mov
scas
xlat
mov
and
lods
fwait
les
ficomps
adc
and
mov
fst
xchg
or
xor
jno
sbb
xchg
sbb
and
push
rorl
mov
jo
adc
cmp
dec
and
sub
ja
mov
mov
jno
je
xchg
rorl
lret
adc
pop
lea
lock
hlt
mov
loope
jnp
test
push
out
gs
pop
test
mov
js
mov
mov
sbb
push
mov
nop
outsb
push
mov
jg
pusha
das
sbb
push
lods
lock
mov
sti
pop
mov
sbb
sbb
inc
ja
test
addl
mov
xor
adc
cs
add
pop
les
ret
adc
or
mov
inc
push
pop
mov
incl
enter
mov
int
cmpsl
inc
push
arpl
sub
and
ret
add
test
jns
inc
aam
jmp
repnz
clc
push
fdivrp
xor
push
cmpsl
mov
mov
mov
jg
test
sbbb
std
add
mov
add
sub
scas
or
mov
xchg
clc
mov
inc
stc
int
inc
inc
sahf
and
sub
cmp
sub
outsb
or
nop
loop
insl
lock
push
orl
xchg
in
jae
lcall
insb
adc
ret
mov
enter
add
inc
and
and
inc
outsb
int3
sub
cli
frstor
sub
lret
xor
daa
xor
dec
call
sbb
nop
lret
leave
int3
mov
pushf
xchg
xor
add
inc
addr16
stos
and
xor
sahf
int3
pop
mov
jo
xor
rorl
arpl
push
mov
lcall
std
mov
movsb
push
into
outsb
xor
inc
push
in
ret
push
ret
inc
cli
fisubrl
jno
pop
outsb
gs
jecxz
icebp
pusha
jo
push
sahf
ss
cli
mov
daa
mov
mov
loope
add
or
filds
fdivrl
push
xor
sub
ret
push
adc
jne
inc
pusha
jbe
mov
aaa
cld
pop
stos
repz
out
jg
sbb
testl
aas
cltd
jg
cld
int
inc
std
lods
lock
ret
xor
fisttpll
pop
insb
bound
sbb
fcomps
inc
adc
scas
je
cli
out
or
inc
aam
xchg
adc
jp
rcl
clc
sub
pop
sub
ficoml
pusha
or
sbbl
mov
push
imul
pushf
pop
inc
mov
sub
sahf
mov
out
xchg
and
mov
xchg
loope
push
cli
loopne
mov
inc
loop
out
inc
insl
mov
stc
jmp
jb
mov
mov
mov
aam
mov
mov
jl
jb
filds
inc
rol
cmpsl
shlb
pop
xor
or
pusha
outsb
push
jae
and
loop
dec
push
jnp
pop
jo
dec
push
stos
and
add
out
or
jbe
xchg
ret
xorl
js
sub
cmp
in
sbb
jns
mov
gs
scas
and
ds
adcl
arpl
inc
add
out
lahf
jae
inc
mov
popa
lods
sub
aaa
mov
cli
cmp
sub
or
or
pop
push
test
push
rcrb
push
mov
lds
push
pop
ret
push
dec
inc
les
jle
mulb
sub
fidivrs
icebp
decb
sub
fidivl
mov
stos
popl
stos
jo
out
cwtl
and
xchg
int
jb
cwtl
in
je
scas
jbe
sbb
hlt
ret
movsb
je
cld
xchg
repnz
js
push
or
lcall
xor
jnp
add
push
pshufw
mov
insl
sub
pop
add
int
scas
popa
mov
xor
jmp
mov
insb
jae
mov
mov
cmp
jl
mov
mov
push
sbb
mov
mov
cmc
push
fadds
jae
push
and
movsl
sub
stos
lcall
sub
stc
sub
xor
out
push
ds
pop
sbb
int
call
push
ret
fistps
setle
aam
clc
inc
xor
xchg
or
sub
mov
sub
push
or
les
test
lret
xchg
sbb
cltd
sub
insl
or
push
stos
or
add
fcomip
fwait
xchg
mov
rcl
stc
xor
incb
and
adc
mov
addr16
lods
fs
jns
scas
movsb
mov
dec
cmp
loopne
cli
mov
jge
lds
in
ret
jmp
mov
push
les
loop
arpl
insb
daa
mov
xchg
xchg
divl
insl
js
inc
add
cmp
aas
push
mov
xchg
movsb
scas
lods
shll
mov
inc
faddp
lcall
sbb
addl
or
push
rorb
adc
add
fmuls
mov
mov
ror
ret
incb
xchg
sbb
add
push
lret
mov
shlb
jge
push
pusha
faddl
lods
sub
mov
xchg
xchg
aad
adc
adc
sahf
or
pop
jnp
mov
into
adc
ret
fs
andnps
jl,pt
add
adc
xor
push
mov
sbb
jp
xchg
mov
cmp
sbb
pop
pop
add
push
cmp
push
add
jl
nop
sub
subb
mov
or
cmpsb
sarl
leave
add
mov
add
pop
icebp
mov
mov
sbb
or
pop
push
es
push
in
push
mov
test
seta
jb
cmpb
adc
test
ds
movsb
scas
data16
jne
mov
add
inc
daa
mov
pop
push
cmp
jl
dec
gs
add
lahf
popa
loope
mov
lahf
mov
mov
xor
and
push
in
cld
js
sbb
call
xor
test
rclb
sbb
jbe
test
pusha
mov
testl
aas
sahf
push
mov
cmp
mov
and
dec
dec
cld
pop
loopne
pop
outsb
jne
xor
push
stos
xchg
lds
adc
adc
call
dec
sub
mov
stos
cmp
nop
or
out
lods
mov
lahf
daa
add
addl
lock
jp
inc
cld
in
ss
jp
jge
pop
mov
mov
jmp
dec
pushf
xchg
sbb
and
loopne
fidivrl
in
rcr
push
sar
cwtl
jne
mov
sbb
lock
adc
call
adc
ss
test
sbb
pop
sbb
adc
adc
notb
xor
cld
pop
cmpsb
andb
pop
das
out
inc
jl
xchg
or
outsb
gs
insl
sbb
pop
dec
lret
mov
or
loop
pop
fistps
stos
ljmp
mov
dec
loop
out
insl
sbb
add
in
scas
mov
int
mov
idiv
iret
ret
insl
sbb
enter
cwtl
inc
arpl
push
sbb
and
adc
into
cs
xorb
fisubrl
add
mov
pusha
jmp
cld
push
gs
mov
or
jl
ja
adc
lret
in
jp
fld1
cmpsb
xchg
jbe
or
scas
jo
dec
mov
stc
inc
sbb
arpl
xchg
jmp
ret
pushf
sbb
roll
push
ljmp
inc
push
sub
mov
mov
mov
faddp
xchg
mov
and
js
add
fdivl
daa
lds
int
cmp
mov
mov
xor
push
sub
icebp
loopne
hlt
imul
ret
cwtl
ret
add
scas
xchg
lock
ja
adc
in
push
sahf
sub
lahf
xor
into
adc
dec
xchg
out
daa
scas
leave
aas
fsubrl
mov
jp
mov
insb
jno
lahf
inc
jp
dec
sbb
hlt
jecxz
xchg
popa
sti
lea
fsts
into
and
call
mov
sbb
nop
pusha
mov
enter
data16
loopne
cli
cmp
orl
mov
imul
arpl
cmp
outsl
mov
aad
pushf
movsb
inc
mov
sbb
lock
test
xchg
ss
std
pushf
pusha
or
add
sti
sub
jge
lret
fnstsw
mov
jo
std
daa
ljmp
sbb
cmp
mov
jg
lret
pushf
jb
jmp
inc
imul
aam
push
add
mov
aam
mov
outsl
cmc
mov
inc
adc
int3
pop
mov
sar
loopne
xchg
cs
rolb
jnp
mov
xchg
incb
ja
sub
add
movsb
aas
pop
add
inc
cld
mov
inc
int
mov
stos
stos
pop
xchg
insb
jge
scas
xor
xlat
out
int
add
adc
push
or
stos
add
xchg
push
dec
gs
loopne
cs
adc
ss
xchg
adc
add
jp
add
fwait
aam
mov
inc
popa
cmp
sub
nop
data16
lahf
push
sbb
data16
ljmp
push
sub
jl
imul
adc
cmc
and
movsb
cmp
adc
mov
jle
test
xchg
ss
cmp
adc
pop
int
loop
ljmp
sub
xor
cs
mov
jmp
mov
hlt
imulb
jno
sahf
rcll
or
mov
jns
or
test
jp
sarl
pop
outsl
xor
adc
test
jmp
pop
shlb
xlat
push
or
xor
jbe
clc
jno
je
sahf
inc
dec
jo,pn
xchg
call
mov
inc
adc
add
test
js
mov
push
shll
sbb
pop
pop
or
aas
cli
dec
lret
pushf
or
inc
xor
push
sbb
lret
lods
add
push
shrb
inc
xor
lahf
aam
pop
mov
aam
adcl
or
adc
int3
xchg
jnp
aas
and
sbb
cmp
xor
into
nop
sar
push
sub
adc
sbb
ljmp
sbb
icebp
popf
push
cld
inc
pop
inc
in
mov
xor
popf
mov
pop
cmp
or
rol
std
int3
insl
jne
les
bound
cmp
mov
mov
fstpl
imul
mov
fs
and
outsb
pop
ret
pop
ljmp
daa
in
call
dec
daa
mov
lcall
sub
jno
cli
xor
movsb
call
push
shl
test
cmc
pop
loope
sbb
clc
mov
rcrb
adc
add
cmp
dec
mov
xchg
push
stc
add
mov
xchg
mov
ficoml
int3
fwait
sub
scas
push
js
outsl
sub
cwtl
sbb
bound
lock
ds
dec
test
mov
iret
add
sub
mov
add
inc
and
sbb
pop
cld
lock
mov
inc
pusha
jo
cwtl
test
fdivrl
adc
cmp
cmp
jbe
fs
dec
ss
sub
shr
cli
xor
rol
sarl
mov
inc
fisttpl
fadds
hlt
pop
and
add
xor
xlat
xor
mov
fisubl
imul
stc
rolb
pop
adc
loopne
mov
push
add
shl
cmpsl
cmp
sbb
rolb
mov
incl
push
fdiv
pop
sbbb
and
sub
push
test
inc
lcall
aam
pop
adc
les
and
movsb
xor
test
je
les
fmuls
sub
loop
xor
lahf
test
adcb
cmpsb
loopne
xchg
xchg
scas
push
push
mov
cs
inc
inc
add
add
pop
push
sbb
and
and
xor
sbb
mov
mov
fwait
cmpb
mov
push
adc
clc
aam
xchg
xor
ljmp
cld
mov
and
mov
es
out
dec
lds
xchg
imul
sub
push
mov
xchg
out
and
pop
inc
repnz
ljmp
out
xor
sbb
pop
jp
lea
rclb
sbbl
orl
fdiv
mov
in
pop
mov
sahf
pop
push
rolb
arpl
dec
push
adc
xchg
xchg
push
clc
leave
xchg
dec
popf
dec
push
out
test
and
leave
lret
sbb
mov
mov
addb
lcall
mov
js
xchg
arpl
mov
add
out
mov
mov
cmp
push
mov
adc
jecxz
notb
and
push
std
mov
or
andb
jg
ret
arpl
jmp
and
lea
outsl
enter
jp
jb
xor
test
inc
lods
and
xchg
xor
dec
mov
mov
inc
xor
cmp
addr16
sbb
enter
or
add
hlt
repz
pushl
jno
ds
inc
iret
ds
xchg
pop
test
js
lea
inc
ret
ja
xlat
mov
lret
push
fcomi
inc
sbb
jecxz
push
lret
xor
push
or
add
sub
push
sub
jne
dec
aam
jg
lcall
jb
sbb
lret
add
cmp
jge
xchg
insl
repz
pop
xchg
lds
and
adc
add
adc
push
pop
mov
add
test
mov
xchg
and
fsub
fwait
pop
cmp
aam
cmpsb
fdivs
xchg
and
leave
pop
lock
cmp
and
sub
xchg
mov
dec
push
inc
push
cmp
lahf
or
inc
ds
fisubrs
ret
enter
jne
ds
xor
lret
mov
or
and
orl
jecxz
xchg
mov
popa
lret
ss
clc
ss
lea
je
mov
mov
mov
ds
cmp
pop
loop
fwait
lock
ret
ficoms
sub
sbb
and
sahf
int3
subb
xchg
mov
xchg
and
fisttpll
aas
sbb
sub
adc
int
sub
add
mov
call
dec
sbb
fcmove
mov
aam
pop
jo
iretw
loop
or
pusha
lods
dec
les
movsb
jge
sti
or
xchg
cmpsb
outsb
mov
bound
enter
mov
mov
cmp
std
inc
out
xchg
or
or
and
push
call
fwait
push
mov
lds
adc
aaa
sub
push
add
push
rclb
mov
testb
bound
mov
push
xchg
scas
shr
jbe
outsl
dec
lock
adc
insl
add
xlat
add
rcrb
pop
or
add
push
dec
mov
push
stos
loopne
sub
icebp
loope
aaa
call
xchg
aam
into
cmpsb
mov
enter
aam
inc
mov
or
xor
add
call
popa
jbe
test
fisubrl
ret
cmp
add
ljmp
jnp
add
or
imul
mov
pop
add
out
push
cmpsl
not
mov
or
xor
insb
cmp
and
movsb
mov
scas
pop
adc
cmpsb
mov
xor
cli
mov
push
sbb
xchg
add
clc
adc
or
cmc
inc
xchg
int3
cwtl
xor
mov
jmp
lds
push
or
push
outsb
mov
adc
jbe
adcb
nop
inc
imul
add
mov
pop
call
mov
orb
roll
mov
add
push
and
xor
push
sbb
in
int
jo
cld
mov
push
das
clc
jg
xchg
negb
leave
jo
add
shrl
pop
sti
sahf
cs
push
test
mov
add
fcmovb
cmp
decl
pop
adc
je
push
sbb
xchg
sub
pop
aam
xchg
mov
xchg
mov
ss
and
je
les
popf
and
jle
inc
adc
mov
lds
mov
repz
and
inc
jl
push
mov
mov
jecxz
inc
les
sbb
push
adc
sub
and
dec
xchg
test
addr16
test
in
cmp
ds
aaa
mov
mov
jl
insl
imulb
loope
ss
fdivl
lcall
xor
je
add
mov
dec
adc
cmp
inc
add
andb
dec
rorl
cmp
rclb
xor
dec
shlb
mov
sub
inc
movsb
sbb
xorb
sub
mov
adc
jmp
les
je
das
xchg
jnp
insb
add
cmp
sbb
dec
pop
jle
jg
sbb
pusha
push
pop
mov
xor
add
ss
sbb
add
and
adc
inc
cwtl
shlb
or
test
rcrl
insl
and
mov
add
pop
push
jns
incb
mov
push
jl
mov
in
push
inc
dec
add
fidivl
jmp
sbb
dec
adc
insb
mov
cmp
ret
rorl
in
popf
clc
and
sbb
jmp
nop
fcmovb
push
mov
inc
out
cmp
or
cmpb
scas
sbb
or
add
mov
fdivp
mov
mov
xor
inc
mov
inc
pushl
mov
ss
faddl
insl
add
addb
cmc
push
dec
call
scas
and
pop
push
or
add
sbb
jo
dec
test
inc
repnz
xchg
unpcklps
inc
lcall
pushf
mov
jae
adc
push
sbb
addl
jo
mov
cmpsl
pop
push
inc
pusha
mov
mov
popa
das
fidivl
das
mov
jecxz
call
lds
inc
js
xor
aad
jp
insl
enter
or
clc
xchg
pop
mov
mov
xor
push
lock
add
push
push
push
cld
cmpsb
jp
setnp
loop
jnp
cmp
mov
mov
loope
xchg
cld
sub
fsubl
xor
ret
mov
push
inc
ljmp
mov
rolb
test
add
sbb
xor
pop
stos
sub
xchg
mov
add
mov
rorb
gs
jg
fnstcw
bnd
bound
test
mov
add
stos
int3
in
push
inc
add
and
fidivrs
inc
add
adc
mov
inc
movsb
dec
pop
rcrb
cmc
daa
pop
push
push
pop
cs
rolb
xchg
daa
xorb
cmp
insl
inc
dec
in
dec
mov
mov
adc
cmp
js
push
out
jg
lock
outsb
mov
add
ret
roll
rorb
js
sub
pop
sbb
lret
rclb
bound
add
inc
pop
dec
mov
lcall
sbb
clc
ljmp
inc
sub
popf
inc
jnp
nop
lret
test
and
push
cmp
pop
or
mov
adc
inc
add
bound
mov
adc
lret
xor
adc
inc
hlt
lock
sahf
mov
test
lods
adc
or
push
ss
dec
mov
clc
hlt
inc
push
rolb
xlat
cmpb
pop
inc
add
call
or
hlt
cwtl
mov
push
pop
jbe
inc
out
ss
xchg
test
pusha
xor
pop
lret
jo
fsub
fiadds
adc
mull
lds
mov
or
or
sarb
ret
ja
add
adc
out
inc
loopne
and
imul
inc
xlat
mov
shl
cmp
pmaxsw
xor
in
loope
push
movsl
dec
ss
push
jne
dec
pop
clc
addb
adc
xchg
test
mov
icebp
xchg
outsb
out
shr
jl
pop
jo
adc
mov
and
repnz
pop
sub
push
pusha
cli
gs
daa
sbb
xchg
or
sub
je
pop
or
pushf
sub
outsl
clc
lea
mov
movsb
in
push
adc
mov
mov
test
cmp
rorb
ljmp
jo
nop
jno
add
std
orb
pusha
test
push
mov
imul
in
inc
sbb
mov
addl
pop
sub
or
mov
pushf
enter
clc
hlt
das
sbb
xchg
cmc
dec
pop
orl
out
jne
sbb
clc
stos
mov
cld
cmpsl
or
aaa
xor
or
lret
dec
lods
mov
mov
dec
pop
jp
adc
ret
pop
jg
inc
out
inc
cmp
nop
pop
mov
clc
inc
push
out
mov
xlat
and
and
and
add
pop
je
pop
lret
leave
add
add
mov
sbb
dec
inc
lahf
or
xchg
cs
adc
add
dec
lret
rcl
jecxz
popf
jle
mov
outsb
pusha
xchg
mov
cwtl
fst
pop
inc
les
xchg
xor
pop
sbb
in
dec
std
adc
rcr
mov
lods
xor
pop
add
dec
mov
or
add
xor
lods
dec
fiaddl
cwtl
outsl
add
and
mov
dec
scas
add
shrl
pop
dec
inc
out
rorl
sub
mov
pop
iret
or
dec
adc
mov
rorl
mov
sbb
incb
sbb
cltd
xchg
push
sbb
and
jmp
mov
jbe
enter
and
ret
pushf
cmp
inc
add
outsb
rolb
int3
push
cmp
dec
jbe
arpl
sub
push
dec
lock
mov
pop
subl
xorb
in
push
sub
push
jle
loopne
nop
js
loop
push
insb
push
orb
adc
pop
inc
out
pop
fcoml
cmp
xor
cli
pop
popa
mov
test
cmp
sbb
mov
mov
pop
cmp
jo
add
cmp
scas
popa
cwtl
fstpt
add
cmc
jg
xor
cmovnp
sarl
push
adc
dec
mov
mov
dec
pusha
jecxz
inc
add
jnp
or
add
rcl
jp
inc
lret
pop
loop
and
inc
out
jae
in
call
inc
aad
aaa
mov
xchg
mov
pop
add
ljmp
or
mov
and
ljmp
push
outsb
and
rclb
ret
and
jl
adc
test
pop
out
inc
lock
cs
shrl
mov
icebp
mov
daa
mov
ret
arpl
mov
mov
jecxz
adc
pop
inc
and
ret
imul
add
cli
push
pop
jp
jecxz
cltd
das
int
or
adc
jecxz
roll
add
push
cmp
fisubrl
cmpsl
or
dec
cmp
and
sti
jae
aad
sbb
jmp
sbb
jns
leave
clc
jmp
into
test
sbb
xor
jg
dec
pop
lea
mov
add
stos
lea
and
cmpsb
int
pop
pusha
push
cmp
cmovg
jo
inc
inc
push
mov
dec
sub
fcomps
and
dec
sub
ds
sub
cmp
jmp
jo
outsl
fwait
jmp
push
xor
sbb
in
dec
in
gs
xor
lcall
jp
sub
pop
pop
push
movsl
fsubr
clc
pushf
sub
xor
push
mov
leave
imul
movsl
xchg
fisttpll
div
add
inc
nop
js
or
jecxz
add
mov
mov
sbbl
push
ret
sbb
inc
mov
test
mov
dec
out
rcll
or
lcall
and
or
pop
mov
sub
cwtl
mov
popa
roll
xchg
cltd
loopnew
add
sbb
dec
jp
add
repnz
daa
sbb
mov
mov
add
ret
adc
dec
dec
jbe
or
andb
ja
pop
push
cmp
pop
cmp
hlt
test
inc
pop
dec
sar
and
loopne
jo
shl
inc
daa
jae
inc
xor
rclb
dec
xor
mov
cmp
xor
mov
imul
das
adc
loopne
ffree
pushf
and
ficompl
stos
testl
ret
add
leave
add
lcall
sub
cltd
push
loop
int3
push
imul
call
dec
or
xchg
xchg
mov
inc
test
nop
into
loope
aas
inc
int3
test
cmp
xchg
aaa
aad
nop
fmul
jno
add
mov
enter
jle
xor
add
or
enter
pop
in
xor
aam
out
daa
repnz
push
cld
xchg
rdmsr
jecxz
sahf
lahf
push
inc
mov
xchg
out
dec
mov
adc
flds
mov
mov
adc
test
and
dec
adc
mov
add
mov
push
nopl
or
mov
inc
inc
cmp
out
xchg
xchg
ret
mov
jmp
lcall
mov
pop
pop
in
jae
or
and
inc
jle
cmpsb
sub
loop
sbb
mov
jmp
stos
aas
lds
bound
dec
mov
pushl
add
dec
push
or
mov
imul
sub
cmpsl
cmp
lret
fists
ficomps
enter
sub
push
fldcw
sub
test
cltd
jge
shll
adc
and
and
mov
test
or
jnp
gs
jmp
imul
nop
test
sbb
mov
mov
lret
inc
call
rcl
shrl
fcompl
mov
and
sbb
ja
aas
adc
fldt
add
pfsubr
sbb
jno
mov
push
mov
jle
cmpsl
jns
jne
xor
fdivl
add
fmuls
and
push
stos
and
push
and
in
inc
enter
cli
add
outsb
inc
mov
int3
loop
sbb
mov
pop
pop
sti
fadds
ret
popa
add
dec
add
sub
add
xchg
xchg
out
dec
es
sbb
inc
xor
or
and
and
pop
fwait
xchg
sbb
mov
push
cmp
push
dec
aad
jno
push
add
sbb
mov
outsb
scas
iret
lret
std
inc
aam
mov
enter
add
or
fsub
sarl
pop
dec
mov
mov
aaa
mov
push
aas
inc
in
pushf
lahf
xchg
sar
jge
jmp
xorl
pusha
fsubr
int3
addr16
aam
add
add
dec
pushl
xorb
add
or
aad
mov
sar
shll
and
pop
dec
push
hlt
push
xorb
outsl
and
fldt
pop
lret
ss
int
mov
into
insb
loop
je
sti
outsl
push
mov
call
xor
fnop
cmp
mov
cmp
decl
cmp
movsb
jno
push
add
cmp
sub
cmp
cmp
mov
xor
push
and
icebp
mov
int
push
subb
outsb
xchg
push
jp
loop
in
andl
jecxz
mov
aaa
cmpsb
sub
add
das
dec
ret
pop
cmpsb
outsb
mov
addl
adc
fst
loop
dec
jp
lret
lcall
xchg
mov
jns
push
inc
mov
add
ret
pusha
mov
lock
inc
inc
je
addb
dec
aaa
push
cmp
testb
int
sbb
dec
pusha
dec
in
lock
enter
insl
pop
lods
cmpsl
pop
call
jmp
inc
subl
add
insb
js
test
xchg
rol
jnp
jae
fwait
push
lret
les
fs
mov
mov
jne
clc
push
out
mov
push
add
ljmp
inc
or
ds
shrl
push
sub
or
movb
int3
inc
adcb
jbe
insb
mov
loopne
or
xlat
lods
xchg
dec
shlb
pop
pop
mov
sahf
and
inc
lods
adc
cmp
outsl
dec
clc
mov
dec
sarb
mov
loopne
push
ficomps
add
cltd
scas
xor
xor
mov
dec
fldt
ss
pop
xor
adc
mov
sbb
sbb
cli
scas
push
out
rcll
and
lahf
push
mov
out
sub
push
mov
test
nop
lea
fdivrs
mov
cmpsl
or
fimuls
push
dec
fs
sub
rcll
ja
cmp
jmp
gs
adc
xchg
fsubrs
test
inc
cmp
insb
dec
loop
or
mov
mov
jge
clc
cmp
xor
movsb
adc
loopne
push
mov
cltd
js
inc
xor
insl
ret
mov
or
fcoml
adc
scas
or
and
xchg
jo
pop
hlt
outsb
pop
mov
cmp
mov
adc
add
xor
nop
sub
inc
loopne
lcall
lods
or
lods
xor
inc
cmpsl
sub
jbe
push
cs
xor
fisubs
pusha
push
ljmp
jg
in
icebp
dec
jmp
push
mov
enter
aaa
bound
push
add
cmpsb
lcall
jp
sbb
push
and
lret
fimull
and
add
xchg
or
adc
lock
bound
pop
sub
add
mov
cmpsb
loop
sahf
shl
xor
fidivl
test
test
push
push
push
dec
data16
push
pop
push
ss
jb
adc
lahf
add
adc
pusha
or
push
or
pop
cmpsb
pusha
inc
cmp
fiaddl
and
dec
cmpsb
cs
mov
mov
or
inc
xor
movsb
pop
loop
cmpsl
lret
into
pop
mov
sahf
adc
cmc
andb
mov
rolb
push
lock
lahf
test
pop
je
jmp
or
sub
and
adc
sub
pop
add
mov
int
mov
pop
pop
sub
dec
pop
mov
xchg
ljmp
or
orb
das
xorl
pop
ja
mov
jecxz
pop
mov
cwtl
imul
and
mov
sbb
daa
lds
jnp
and
push
aad
jle
mov
inc
enter
xor
fisttpll
and
and
mov
scas
outsb
pop
mov
ss
push
mov
xchg
jecxz
sahf
call
fdivrs
out
jmp
or
sub
adc
xor
push
push
rcrl
mov
popa
nop
pop
cmp
repnz
cmp
sarb
jbe
or
sbb
ljmp
push
daa
test
adc
ljmp
and
xchg
rcll
orl
xor
jmp
scas
call
cli
push
out
cmp
jae
add
jg
mov
push
stos
leave
incb
pop
or
sahf
inc
stos
divb
js,pt
stos
adc
ficoms
in
ljmp
jno
aam
lahf
jp
int
push
je
sarl
rcl
adc
lods
fisubrs
out
add
inc
cmp
add
and
aam
std
mov
insb
jo
cmp
xorl
js
mov
or
pop
inc
xchg
out
call
mov
mov
mov
dec
jnp
ds
outsl
dec
fsubl
lcall
fcomp
vmovdqu
pusha
rolb
pop
cwtl
adc
inc
ret
push
mov
sahf
aam
add
adc
pop
pop
pushf
mov
adc
insl
fadds
pop
xor
idivl
inc
dec
popl
call
and
arpl
loope
cmp
add
push
inc
push
inc
mov
adc
mov
pop
xor
lcall
jle
fwait
jmp
mov
mov
mov
leave
sbb
push
pop
cmp
mov
shl
ljmp
cmp
cld
gs
xor
enter
imul
repz
mov
push
mov
fwait
mov
shrb
imul
addb
shr
ret
xor
rolb
xchg
xor
inc
clc
fiadds
js
mov
lahf
push
dec
sbb
inc
inc
xchg
test
xchg
add
js
mov
push
in
or
movsb
loop
mov
push
std
push
push
jno
mov
stc
mov
xchg
add
shrb
insb
pop
push
jl
hlt
and
or
sub
lcall
sub
addr16
lcall
inc
xorb
stc
out
and
and
jne
mov
inc
rcrb
cmovl
mov
pop
fisubl
mov
dec
jb
dec
cmpsb
rolb
mov
aad
push
mov
sub
sub
xor
out
or
inc
push
push
orb
dec
add
bound
or
and
mov
add
sbb
add
testl
inc
mov
repnz
xchg
lds
pushf
popf
rol
fidivrl
and
lock
xor
ss
push
inc
inc
xor
jle
inc
orb
dec
add
aam
fdivl
ret
sub
sub
mov
pop
inc
enter
es
fisubrl
stos
push
xchg
add
and
mov
jg
paddd
adc
pop
aad
and
loopne
dec
push
sbbb
fs
les
adc
push
xlat
inc
lock
or
in
mov
enter
mov
push
sbb
addb
inc
testb
flds
out
push
push
les
std
cwtl
jecxz
adc
lea
xcrypt-cfb
cmpsl
popa
mov
mov
add
mov
mov
or
sar
pop
cmpb
in
roll
push
push
add
push
adc
je
test
pop
mov
cmpsl
or
xor
psubq
add
sub
pop
jno
mov
adc
in
push
in
push
or
cmpsb
nop
sub
ljmp
scas
leave
pushf
loopne
outsl
out
clc
into
sarl
es
jl
std
ss
push
or
push
xchg
or
and
adc
ret
pop
push
adc
adc
add
push
and
push
insb
call
je
mov
cmpb
mov
jb
mov
ret
add
jbe
mov
pop
mov
scas
je
in
inc
dec
inc
xchg
lock
rolb
mov
test
dec
sub
cmpsl
sahf
dec
pop
daa
jge,pn
mov
or
xchg
into
xchg
rolb
addb
xor
xchg
jno
sub
sub
and
ss
push
test
inc
xchg
xchg
loopne,pn
scas
add
xchg
add
out
xchg
adc
insl
or
cmp
mov
int3
jl
dec
imul
xchg
mov
lds
fisubl
aam
incl
cli
aas
call
xor
out
xor
sbb
insb
mov
inc
jmp
and
mov
stos
movsb
fldt
jp
inc
iret
lods
mov
movb
leave
add
data16
inc
loopne
xchg
test
jmp
pop
xor
push
subb
dec
data16
add
inc
jo
out
into
test
mov
fcomip
les
and
test
jle
push
aam
leave
push
cs
inc
stos
add
int3
mov
call
movsb
icebp
dec
pop
xchg
ljmp
pop
movsb
cli
jae
add
push
add
add
xchg
adc
mov
mov
bound
call
mov
or
mov
btr
cmp
adc
fsubrl
rcrb
es
dec
dec
or
lock
sub
add
add
and
stos
mov
fcmovbe
jl
xchg
scas
xchg
sbb
ret
movb
and
daa
ss
bnd
pop
xor
movsb
aas
jo
pop
push
mov
shl
push
cmp
adc
test
adc
inc
popf
adcl
shr
jo
mov
jg
sbb
lret
sbb
aaa
cmc
adc
inc
dec
cmpsl
outsb
imul
inc
push
inc
jbe
push
xor
adc
loope
test
orl
sbb
or
and
jge
iret
arpl
push
inc
sub
mov
lret
insb
punpckhdq
movsl
aam
push
ret
or
roll
adc
adc
adc
xchg
adc
rorb
dec
push
dec
pop
lods
push
aad
fisubrl
mov
mov
mov
add
inc
rcll
inc
out
pop
pusha
stos
jb
scas
push
add
push
jno
sbb
mov
iret
stos
push
orb
cwtl
mov
inc
adc
or
test
inc
sub
xor
mov
test
cmpsb
add
mov
cmp
mov
add
inc
addr16
mov
loopne
add
inc
pop
push
dec
icebp
arpl
or
sti
push
loop
mov
mulb
mov
ret
imul
or
dec
mov
jmp
jmp
mov
inc
inc
lds
rolb
mov
pop
pop
mov
dec
ljmp
call
push
inc
inc
push
lds
inc
sub
stos
clc
cmp
sub
ret
push
xor
xlat
inc
inc
int3
push
add
mov
das
push
rolb
add
or
setb
adc
lods
mov
rol
xchg
lds
mov
push
fcomps
or
inc
cmp
or
imul
pop
push
push
ret
loope
je
adc
dec
pop
pushf
scas
test
pop
dec
lcall
ljmp
jbe
fidivl
lret
aas
mov
or
xlat
es
mov
pushf
mov
lods
stc
fwait
push
adc
xchg
adc
push
sbb
inc
ljmp
xchg
call
not
std
and
in
scas
lock
add
incb
andl
faddl
fsubr
jae
xchg
jge
mov
fcompl
lds
clc
loop
mov
ficoml
and
push
rclb
jne
add
arpl
sbb
lret
sbb
ret
in
ds
cmpsl
call
icebp
dec
pop
cmpb
push
xchg
fistl
data16
xchg
sbb
mov
jmp
and
fucomip
adc
push
insb
adc
rolb
mov
popf
int
xchg
pop
cmc
xchg
dec
pop
jl
or
js
ret
or
mov
dec
jbe
jo
stos
push
jl
or
sbb
dec
shl
ret
add
sub
or
add
add
lcall
lock
jecxz
clc
xchg
sub
push
je
loope
in
push
int
loopne
xchg
dec
clc
jg
mov
push
fldl
cli
inc
out
in
push
jmp
sarb
mov
rcrb
rcrl
or
je
sti
push
xchg
lods
es
cld
mov
shlb
daa
call
inc
fcomp
or
xchg
sub
cld
xor
cvttps2pi
adcl
push
inc
sbb
aad
or
and
mov
or
adc
out
insb
stos
fwait
sub
fstpt
push
push
popa
sbb
xor
dec
clc
dec
inc
ljmp
rorb
in
scas
outsl
adc
jmp
sahf
daa
sub
test
inc
jo
and
loop
lds
subb
lret
addr16
nop
pushf
inc
push
hlt
andb
xchg
push
cmpsl
incb
push
incb
xchg
inc
push
sbb
fcoms
mov
pop
cltd
mov
jnp
out
push
repz
pushf
add
hlt
pop
inc
popa
mov
bnd
add
lods
insb
lods
cmp
stos
sbb
inc
xor
popf
mov
addl
cs
add
in
sub
cld
or
scas
push
inc
xor
inc
sbb
mov
lock
std
jecxz
add
cmpsl
fsubs
rcll
xchg
and
mov
arpl
jb
xor
push
adc
fs
aam
or
movsl
mov
add
xor
cmp
mov
ret
inc
aam
or
mov
aam
loope
xchg
xor
std
test
sti
add
inc
wrmsr
arpl
sbb
insl
and
std
adc
sub
hlt
inc
inc
adc
push
jle
ljmp
inc
xor
push
les
int3
enter
mov
push
adc
sbb
imull
adc
cmp
and
ror
mov
pop
rorl
sbb
push
hlt
dec
test
arpl
cmp
pop
cmpsb
add
jbe
xchg
movsl
adc
fdivrs
sti
loopne
scas
test
pusha
jno
lds
insl
sti
or
push
inc
jae
arpl
jle
pop
push
pop
add
xchg
in
orl
jge
pop
mov
dec
sub
jbe
push
or
je
xchg
andb
dec
faddl
outsl
scas
cmp
jno
xor
sub
aam
ja
inc
xchg
int3
xchg
jp
pusha
fcmovnb
xchg
xor
mov
mov
sbb
cmp
add
jmp
adc
jb
int3
sbb
sub
ficoml
mov
xor
xchg
add
test
cli
adc
mov
cmpsb
lret
lcall
neg
dec
sub
mov
dec
inc
inc
sahf
add
xchg
or
and
outsl
mov
aaa
adc
push
clc
jb
mov
loope
lods
aad
data16
adc
test
push
cli
cmpsb
or
out
icebp
dec
add
mov
in
nop
and
std
lock
loopne
andb
fwait
or
mov
stos
pop
sub
jb
dec
stos
stos
lods
adc
addr16
nop
movsb
fsubrs
mov
lret
icebp
sbb
inc
lods
loop
cli
loop
lcall
jb
pusha
hlt
jle
sub
add
pushf
xor
sbb
in
ret
cwtl
mov
add
mov
cmp
adc
jp
nop
adcl
out
push
mov
push
jns
inc
push
push
sub
mov
sbb
pop
pop
jnp
and
cwtl
jo
rolb
sbb
fmull
add
shlb
pop
mov
stos
out
call
iret
in
enter
arpl
pop
pushf
sub
mov
movsl
and
imul
daa
cwtl
xchg
jg
clc
scas
push
sahf
add
jp
sub
push
add
into
cmpb
xchg
cmp
push
and
decb
cmp
adc
rclb
xchg
pusha
mov
mov
scas
or
push
and
mov
dec
mov
loopne
xchg
mov
fdiv
icebp
fsubrl
pop
inc
sub
mov
mov
cmpsb
push
or
loop
scas
jb
cmc
and
movsl
add
popf
and
pop
adc
jne
cli
ret
sbb
daa
add
lahf
stos
xchg
cmp
arpl
push
and
inc
repnz
fsubl
ss
subb
and
adc
push
pop
push
push
adc
repnz
outsl
inc
data16
jno
enter
sub
clc
inc
add
insl
push
push
pop
push
adc
and
shlb
sbb
ljmp
mov
pusha
js
lock
fcomps
pop
xorb
shlb
xor
add
cs
fstp
rcrl
shlb
push
gs
jp
mov
cmc
fldenv
cmp
cmp
push
dec
jmp
movsl
mov
out
sub
add
or
pushf
outsb
pop
test
fiadds
cmc
into
dec
out
jo
adc
pop
and
mov
mov
dec
sub
sarb
dec
stos
jae
adcl
add
jle
inc
loope
ror
add
fcomps
insb
xlat
inc
inc
data16
cmp
or
sub
call
push
jmp
mov
add
fs
xor
and
jge
imul
loopne
xchg
push
loop
insl
push
cwtl
add
and
popa
notb
scas
ljmp
jecxz
jmp
push
dec
push
das
xor
scas
daa
push
add
cmp
sub
sar
movsb
notb
jecxz
adc
jbe
call
mov
call
and
mov
scas
jl
or
jp
inc
sahf
xorl
sub
pusha
xor
add
mov
pop
xor
bound
es
xchg
jb
cmp
add
add
add
mov
mov
cmp
mov
or
jb
and
outsb
arpl
pop
and
push
xchg
jl
and
lahf
clc
inc
mov
xchg
rcl
sub
inc
xor
sbb
add
or
inc
jmp
sub
pop
xorl
andb
push
stos
xchg
pop
xlat
incb
loop
das
lods
loopne
arpl
adc
and
das
or
add
repnz
lret
inc
push
sub
ljmp
mov
sub
andl
and
das
add
mov
add
mov
adc
pop
mov
xor
mov
sbb
or
jecxz
sar
dec
fsub
xchg
cmp
push
ss
jb
pop
sahf
push
push
sbb
or
mov
ficoms
fwait
std
or
pop
push
and
dec
or
dec
mov
imul
fisubs
jmp
sub
cmp
pop
inc
fmull
out
xor
sbb
adc
mov
ljmp
insl
or
cld
fmuls
and
inc
adc
lock
cmpsb
inc
adc
je
data16
inc
jmp
inc
mov
xor
dec
fildll
and
clc
add
push
inc
fdivrs
hlt
rcrb
int3
or
cmp
mov
test
mov
mov
add
rolb
mov
push
test
in
cli
dec
pop
sti
pushf
xor
imul
loop
mov
lods
pop
sbb
push
mov
pop
cmp
addl
out
ret
push
mov
fidivs
test
cmp
or
les
in
mov
int
test
aas
sahf
pop
leave
push
add
int
pushf
jo
daa
movsb
mov
rcl
pop
cmc
call
scas
shlb
xor
fsubs
imul
add
sbb
rolb
lea
dec
inc
ljmp
int
pop
sub
lea
ds
add
fisubrl
adc
pop
mov
ss
inc
push
or
inc
add
mov
loope
mov
test
cli
sbb
data16
nop
sbb
lods
loope
and
cmp
popa
add
jae
negb
mov
cmp
pop
mov
add
cmp
aaa
lea
insb
rol
add
xchg
fucom
push
and
hlt
into
jecxz
jne
sub
loopne
fsubrp
pop
movsl
sub
outsl
mov
lcall
pop
pop
lods
add
sub
shll
or
pop
orl
cmpsl
clc
dec
adc
es
movsb
sub
jbe
fs
mov
jb
inc
cmp
add
inc
add
popf
sub
mov
pushf
jg
sti
cmp
or
insb
xor
ljmp
and
pop
jmp
or
and
test
lock
gs
push
jmp
and
jecxz
dec
aad
add
enter
cmpsb
push
popa
push
outsb
jecxz
sbb
xor
sahf
sbb
je
fsubrs
push
jb
ja
or
sbb
in
popa
pusha
mulb
and
out
and
es
mov
sub
dec
and
imul
xor
roll
and
loop
pop
pop
not
push
stos
or
repz
pop
inc
jne
fnstenv
jno
jp
xchg
pop
jne
add
leave
xor
add
pop
sbb
jle
out
xchg
add
mov
add
shlb
mov
and
adc
js
xor
xor
es
mov
xor
push
insb
xor
aam
add
int3
and
lock
insl
push
bound
pop
jmp
mov
push
les
divl
push
clc
popa
ja
cmp
sbb
out
cwtl
adc
pop
jecxz
push
cmpsl
fsubs
xchg
jg
jnp
clc
and
in
repz
cmc
jmp
mov
jecxz
out
mov
adc
aad
je
in
adc
sub
inc
pop
pushf
daa
cltd
mov
push
add
inc
mov
pop
mov
hlt
push
mov
lds
and
loop
xchg
push
sub
jmp
loop
mov
inc
andb
nop
pop
push
xor
movl
loope
enter
inc
pextrw
xchg
shrl
mov
movsl
arpl
dec
inc
repnz
mov
shl
push
pop
xchg
xor
mov
in
mov
cmpsl
push
jmp
or
dec
mov
nop
add
xor
xor
mov
hlt
pop
xchg
cmp
xlat
add
inc
popf
fimuls
mov
sti
cmp
push
cmp
lock
sub
ret
inc
dec
sbb
les
mov
mov
add
or
stc
test
nop
add
pushf
dec
sub
jo
push
xlat
outsb
insl
push
sti
insl
jae
inc
cs
fbld
dec
xchg
push
dec
pop
daa
xlat
fcmovb
inc
repnz
adc
lds
lret
lods
sti
in
sbb
inc
pop
scas
aam
andl
add
sbb
xor
lcall
imul
pop
mov
cmp
xchg
arpl
mov
ret
pop
ret
rorl
lods
xchg
ret
pop
fldl
mov
lods
dec
xor
add
push
add
gs
sbb
sub
adc
add
push
push
inc
lret
or
push
xchg
aam
pushf
fldcw
lds
cmp
insb
in
sbb
sahf
pusha
and
adc
inc
ja
push
ljmp
ret
cmp
adc
popa
jge
inc
adc
add
jl
scas
push
jle
mov
cmpsb
les
clc
pop
jmp
fdivrs
cs
inc
or
stos
test
pop
adc
adc
int3
cmp
call
mov
lock
ret
js
aaa
xchg
cmp
stos
sbbb
push
ret
push
imul
cli
push
adc
add
xchg
or
xchg
jl
push
imul
sbb
mov
jnp
sub
mov
dec
sbb
xchg
cwtl
xlat
sub
pop
jmp
lods
les
mov
shrl
adc
cmp
mov
icebp
js
es
dec
mov
daa
sarb
rorb
xor
or
push
les
xlat
and
cmc
mov
mov
lods
cmp
movsb
and
lods
jbe
lret
or
fs
pop
lds
shlb
loop
push
icebp
mov
pop
jl
and
dec
add
and
mov
pop
mov
push
das
loop
mov
shrd
bnd
out
or
mov
loopne
js
or
inc
xchg
inc
sub
enter
test
jl
cs
push
adc
dec
mov
movsb
push
movsb
test
push
test
repnz
xor
inc
scas
in
iret
dec
ja
rol
daa
ds
ret
dec
pop
repnz
mov
lcall
jns
imul
call
mov
push
movsb
push
inc
rorl
push
mov
orb
mov
adcb
inc
fistl
jl
fisubs
sub
push
orl
cli
cmpsl
mov
jecxz
test
sbb
aaa
sub
mov
inc
shl
cwtl
js
std
mov
xchg
cmp
inc
mov
add
inc
les
popf
cwtl
out
test
or
loop
sbb
and
add
loope
hlt
xchg
mov
xchg
xor
push
ret
aad
xchg
or
rcr
cmp
sahf
and
shlb
fsubs
gs
shlb
in
pushf
mov
xor
mov
into
mov
in
pop
subb
jg
fndisi(8087
lea
dec
test
out
push
sti
jbe
push
dec
mov
push
adcl
and
shlb
xchg
push
enter
test
sbb
ret
jmp
push
dec
jnp
es
pop
int3
inc
adc
ficomps
mov
jno
and
xor
sub
mov
xor
jo
cmp
leave
or
les
push
inc
sti
pop
stos
mov
sbbl
add
cs
mov
adc
aam
adc
push
sub
std
and
sub
pop
push
sarb
dec
pop
mov
incb
subl
cli
cmpl
pop
xchg
pop
test
sub
loop
js
adc
icebp
mov
call
dec
lods
jbe
mov
test
xchg
pop
pop
mov
cmp
jp
movsb
push
pop
sarl
shr
mov
xor
ret
sub
mov
fwait
outsb
mov
andl
sar
mov
xchg
js
or
sarb
sub
ljmp
push
arpl
adc
or
aad
adc
nop
hlt
clc
pop
adc
jb
dec
sub
in
mov
jb
addb
adc
jp
icebp
cmp
ss
ret
pop
and
xor
test
push
fdivl
push
mov
es
inc
lcall
dec
and
call
xchg
jne
lock
cwtl
adcb
push
xchg
cltd
mov
icebp
ja
fildl
jbe
lahf
daa
inc
popa
ljmp
cmc
fwait
sub
push
shrb
int3
hlt
mov
addb
inc
sbb
mov
xor
jns
sbb
mov
or
fsubr
mov
cmc
push
test
in
xchg
xchg
lock
add
push
pop
cmp
xor
mov
xchg
jp
lcall
lds
mov
mov
pop
pop
pop
jl
sarb
cmc
push
fistpl
js
outsb
or
cli
sub
inc
cwtl
hlt
sub
lcall
lods
loop
cmp
std
jno
or
call
sub
xor
in
adc
cmp
shll
push
lods
mov
loopne
pushf
and
add
mov
push
add
xchg
fists
add
mov
rcll
sbb
mov
dec
vmread
loop
subl
sub
stos
pusha
fadd
aam
ja
jge
in
cwtl
push
ss
call
jns
xor
mov
leave
call
inc
shrl
fiaddl
add
decl
mov
lock
jb
hlt
dec
enter
roll
cmp
add
fwait
in
nop
inc
xchg
mov
es
and
js
aaa
or
out
xchg
pop
jb
cmpl
push
rclb
xor
jbe
cmp
jno
push
adc
and
sarb
lcall
stos
adc
add
or
ljmp
inc
jge
mov
xor
mov
lahf
mov
pop
cli
mov
xor
loop
icebp
aad
sbb
in
movb
sahf
fldcw
sub
mov
hlt
jb
shl
and
aas
stos
inc
xchg
add
sbb
int
les
mov
jbe
and
inc
push
cltd
insb
inc
lods
xchg
inc
mov
addr16
push
cmp
sbb
xor
addr16
sub
fstpl
in
fcoms
lcall
pop
loop
xorb
mov
add
pop
pop
jecxz
sub
loopne
test
mov
push
adc
inc
es
roll
lahf
ret
rcl
andb
jecxz
jne
mov
js
xchg
jge
jae
add
lock
mov
adc
subl
pop
dec
cli
cmp
or
xchg
pop
xlat
adc
scas
inc
aad
adc
movsl
movsl
shlb
dec
or
adcb
rorl
loop
or
shrl
dec
jo
adc
xor
loop
mov
or
sub
xchg
daa
aad
cmp
mov
push
outsl
push
shr
cmpsb
dec
hlt
sbb
in
jp
popf
pop
cmp
or
add
mov
cmp
pop
add
js
addb
loope
inc
es
fsubrl
cli
sub
jle
jae
xor
test
ds
inc
adc
cli
rclb
mov
pop
sub
and
out
xor
das
adc
test
add
mov
les
push
loop
mov
and
ja
jb
sbb
pop
das
cs
outsb
insl
imul
daa
mov
js
or
decl
mov
sbb
pushf
icebp
mov
push
dec
inc
das
cmc
or
cmpsb
jl
cmp
outsb
imul
sub
dec
mov
xor
jb
or
push
out
add
mov
vmptrld
jp
cmpsb
stc
aaa
je
sahf
push
fildl
mov
repnz
test
mov
sub
cmp
call
dec
dec
mov
cmovs
mov
pop
insl
test
test
inc
pop
gs
xorb
dec
cmp
sbb
mov
xorb
xor
ret
movsb
rolb
gs
jmp
pop
lcall
mov
xor
lods
push
ret
mov
lods
test
mov
ljmp
outsb
mov
push
scas
mov
xchg
pop
je
sub
insb
dec
push
push
mov
imul
mov
int3
arpl
ret
test
aad
cmp
repnz
pop
push
mov
jl
dec
xchg
pop
out
sub
pop
sti
and
push
subl
in
jns
lret
push
lahf
pusha
mov
pop
insl
imul
sbb
mov
aaa
jecxz
xchg
lock
ss
inc
pop
popa
fs
scas
insb
or
js
call
adc
and
lock
shr
pop
shlb
sub
mov
lahf
mov
sbbl
and
mov
out
push
lock
loope
and
xchg
dec
bound
fcmovu
iret
ret
lods
popa
movsb
out
jle
mov
pushf
arpl
sub
push
subb
cmc
or
ds
fmull
neg
inc
loop
jo
outsl
cmpsl
int3
dec
cli
stos
sub
mov
xchg
mov
xchg
fdivrl
jge
mov
movsb
stc
push
call
push
test
xor
adc
cmp
jno
xchg
mov
adc
xor
mov
cmp
or
mov
dec
lock
icebp
jmp
call
clc
rcl
je
out
ret
mov
pop
jb
jns
push
mov
jge
jle
inc
jg
dec
andb
scas
dec
sub
in
int
hlt
test
mov
mov
push
add
mov
scas
cmp
pusha
mov
cmpsb
rorb
cli
push
jne
cmp
mov
jb
mov
push
xchg
stos
enter
cwtl
adc
popa
mov
in
in
pop
ficoml
push
pop
inc
cmp
repnz
pushf
mov
movb
sbbb
cli
sbb
pop
repnz
inc
lret
sbb
pop
pop
inc
mov
ss
jg
jg
add
add
loope
lea
std
scas
fimuls
cltd
lds
test
push
test
dec
stos
or
cmp
jae
pushf
loopne
xchg
aam
xchg
call
ds
cltd
call
xor
dec
xor
cmp
jbe
ror
pop
aaa
push
in
movsl
data16
push
ss
xor
bnd
lret
pusha
stos
popa
aam
inc
das
cmc
push
fcompl
jle
dec
scas
xor
adc
imul
xchg
sub
add
loop
jp
shl
fld1
or
loopne
aam
add
daa
and
cmp
dec
push
mov
jne
jne
sbb
or
mov
add
loop
jl
aad
das
cmp
out
fsubp
adc
dec
jg
sub
sub
cld
repz
xchg
iret
adc
push
mov
sbb
fsubrl
and
ja
mov
jecxz
add
jo
fs
sbb
leave
iret
dec
popa
stos
pop
scas
sbb
push
inc
adc
cmp
push
and
lds
xor
sub
cld
and
shrb
push
mov
inc
pop
or
push
push
add
cli
fwait
aam
outsb
ljmp
test
push
xor
xor
add
xchg
xor
mov
inc
mov
push
stos
sub
mov
pop
add
addr16
cld
xchg
sub
xchg
insl
clc
dec
bound
or
pop
mov
push
nop
shlb
rcll
out
mov
jbe
xlat
popf
loope
or
or
inc
fcompl
lods
cli
loop
ret
or
adc
xchg
push
push
xchg
stos
call
int
mov
and
jmp
mov
int3
aad
lahf
sahf
rcrb
xor
cmp
pop
inc
sub
push
inc
adc
leave
mov
and
mov
cli
lcall
pop
and
adc
push
orl
sarb
sbbb
rcrb
lock
jno
ds
sub
lock
mov
mov
inc
adc
cmp
push
arpl
orl
aaa
je
or
movsb
aaa
add
pop
push
sbb
jp
mov
fwait
ret
cli
or
mov
and
adc
jmp
mov
jl
fiadds
int3
jp
cmp
les
mov
xor
jl
shll
mov
mov
jmp
sub
adc
jl
xchg
xchg
mov
mov
dec
fdivr
push
adc
mov
pop
test
es
pop
inc
fisubl
mov
pop
push
xor
daa
lret
jno
sbb
cs
js
sub
sub
mov
or
jp
test
inc
mov
test
or
es
pop
jp
in
imul
sub
inc
pusha
aad
jecxz
add
dec
ljmp
adcb
shlb
jmp
imul
cmpsb
test
int
movb
insl
xchg
test
loopne
pusha
push
mov
or
push
dec
out
fstps
push
fldenv
pop
push
inc
cmp
sbb
mov
and
enter
xchg
cmpsb
xor
inc
imul
mov
fbstp
add
inc
push
pusha
inc
dec
test
sti
adc
push
mov
dec
lahf
add
xor
xchg
rolb
out
call
popa
popa
adc
pop
popa
cli
fisttpl
xchg
mov
orl
hlt
loopne
fcompl
stc
cmpsl
int
xor
xchg
mov
inc
out
ja
ss
outsb
jge
jl
mov
je
xchg
mov
inc
cmp
decl
mov
add
push
pushf
push
jecxz
rcll
es
inc
push
femms
ret
sbb
mov
add
xchg
xorl
testb
dec
test
or
incl
push
into
and
jmp
jmp
jnp
jl
hlt
scas
arpl
shrb
xchg
mov
adc
or
roll
cmp
xchg
sbb
push
mov
cmp
in
mov
inc
cmpsb
lods
mov
rorl
mov
mov
or
cwtl
add
addb
or
loop
shlb
push
hlt
xchg
mov
mov
xor
sarl
push
pushf
pusha
xchg
inc
out
movsl
pop
mov
adc
xor
xchg
das
adc
inc
mov
mov
lcall
mov
adc
pop
arpl
gs
push
add
jne
test
mov
subb
mov
push
fisttps
cmp
ds
jb
ja
sbb
cli
dec
adc
jl
jl
mov
jmp
jnp
and
sarb
adc
mov
pop
pop
inc
fldt
mov
enter
cmpsl
fistps
test
adc
inc
daa
fcompl
xchg
inc
cmp
lahf
push
mov
and
mov
hlt
lret
sbb
pop
push
dec
aaa
dec
mov
pop
jp
xchg
daa
pop
pop
jmp
vandps
rolb
sbb
push
add
lret
negb
shll
test
mov
push
inc
push
inc
cwtl
mov
push
add
filds
sbbb
call
mov
and
xor
dec
aaa
push
xor
pop
rorb
popf
sub
cld
jg
xchg
pop
cs
outsl
cmp
cmp
or
das
push
add
cmpsl
mov
jl
pushf
xor
xchg
mov
mov
inc
inc
mov
divl
loop
loopne
mov
popf
pop
int3
and
sarb
dec
mov
xor
or
jle
or
popa
sub
insl
addr16
int3
dec
rcl
sar
add
mov
mov
hlt
in
push
mov
pop
mov
mov
pop
add
les
inc
lds
dec
sbb
lods
sahf
adc
clc
ljmp
and
aas
pushf
shrb
insb
pop
sbb
dec
mov
mov
push
push
in
mov
mov
negb
cmpsb
add
lea
mov
mov
xchg
inc
and
pop
repnz
stos
cmpsb
sub
jae
insb
fistl
cmp
adc
clc
clc
pop
xchg
and
loop
data16
xchg
inc
xor
enter
rorl
inc
or
mov
cmp
pop
out
xor
loopne
repnz
push
mov
pop
dec
xlat
test
sahf
mov
cmp
sbb
xchg
fidivrs
add
das
xor
lods
or
out
dec
sbb
test
sbb
adc
insl
add
and
aam
mov
inc
pop
insl
mov
pushf
sub
dec
loop
mov
les
pop
xchg
jl
movsl
jmp
mov
push
call
add
and
aam
test
in
pusha
out
sbb
mov
nop
fldcw
call
or
adc
sbb
jg
add
pop
out
mov
lock
pop
out
mov
ss
lods
mov
pushf
sti
lock
push
inc
inc
mov
je
add
cmc
test
js
jp
pusha
js
xor
inc
rcrb
inc
call
and
push
dec
lea
jmp
stos
mov
ljmp
dec
dec
inc
shll
and
add
lcall
ret
in
call
hlt
push
ds
inc
enter
mov
jmp
inc
aam
mov
jo
or
scas
les
adc
and
cmp
push
stos
dec
add
or
test
andb
mov
int
xchg
aad
and
sub
adc
sub
inc
xor
rol
loop
jg
into
daa
mov
cli
and
mov
jp
cld
loop
insl
in
and
inc
push
sbb
cs
addr16
fs
or
out
aam
and
dec
sti
aaa
xlat
xor
or
hlt
adc
into
mov
adc
iret
and
mov
mov
and
mov
xor
add
aas
mov
mov
clc
and
div
in
mov
jns
inc
out
fwait
sbb
scas
jp,pt
inc
dec
loopne
mov
lahf
movsl
mov
push
sub
inc
inc
jecxz
push
mov
push
sbb
mov
stos
push
xor
push
mov
push
cmp
ja
lcall
mov
aad
cmp
div
roll
incl
pushf
clc
nop
push
shll
lret
lds
outsl
fwait
xchg
xlat
hlt
call
mov
inc
adc
jl
test
lret
add
fcomip
aad
repnz
stos
fnstenv
mov
fisttps
nop
add
mov
mov
inc
add
or
insb
dec
mov
mov
sbb
jle
inc
mull
mov
mov
loopne
adc
into
movb
andb
pop
adc
cmp
xchg
scas
cmc
fcomps
out
cld
loop
ds
sub
negb
cli
mov
test
and
test
addr16
pusha
int
in
js
cld
push
add
pop
pop
push
sbb
lea
leave
aaa
mov
push
dec
fdivl
pop
ja
inc
out
sub
and
jo
sbb
or
pop
fidivl
mov
inc
push
addr16
pop
pop
and
adc
adc
pushf
stc
jo
testb
pop
add
push
mov
les
rolb
movsb
inc
fwait
or
pusha
iret
testb
jl
dec
jle
fildl
sbb
sub
mov
aad
xorb
mov
pop
mov
sub
add
cmp
aas
or
mov
fistps
pop
fistl
cmp
es
add
imul
or
push
push
lock
mov
mov
ss
ds
aaa
fsub
scas
fstl
jecxz
out
pop
or
push
jbe
cli
xor
clc
push
ficomps
lcall
shlb
push
insb
xor
cs
lock
push
in
subb
add
pop
push
call
repnz
and
test
ds
dec
les
and
xorb
push
mov
push
xlat
cs
and
das
mov
test
lds
jl
add
out
pop
adc
aas
lcall
dec
mov
push
jle
and
cmp
movsl
outsl
fiadds
sub
ljmp
fstpl
loop
push
mov
fistps
je
cmp
rcrl
cs
shll
xchg
sub
or
jae
mov
jmp
lea
and
mov
icebp
into
xchg
movsl
lods
sarb
pop
xor
pop
clc
or
and
insl
nop
mov
outsb
scas
xor
test
push
push
lock
js
insl
or
les
sub
andl
xchg
cmc
jg
lret
add
gs
out
or
and
xorl
rolb
inc
mov
cltd
mov
adc
sbb
aaa
or
cld
mov
insb
sub
les
and
xchg
cltd
fs
or
call
mov
push
ret
out
and
inc
movb
inc
xor
add
cmp
inc
loope
cmp
inc
enter
dec
sub
cmp
pop
dec
xchg
rclb
jnp
andl
mov
adcl
leave
or
test
lock
dec
add
inc
and
mov
sbb
sbb
fldl
mov
int3
sbb
iret
and
addr16
je
in
loopne
rcr
dec
push
sub
sub
js
cmp
mov
dec
mov
aad
jmp
in
pop
and
fs
loope
sti
pop
push
repnz
rorw
adc
or
into
fwait
jbe
cmc
out
stos
sub
xchg
mov
call
out
in
adc
es
ret
jmp
ss
or
pop
inc
mov
lret
or
ficoml
add
push
imul
pusha
pop
out
mov
mov
push
inc
push
out
mov
xchg
add
hlt
xchg
mov
jg
cmp
mov
repz
cmp
cmp
push
test
addr16
pop
ljmp
push
int3
mov
fcoml
lds
pop
in
or
or
pop
es
mov
fimull
pop
inc
repz
int3
popf
inc
dec
jle
lahf
inc
lods
lods
pop
mov
xchg
xchg
xchg
add
aas
enter
push
lahf
jne
push
adc
fiaddl
ljmp
xchg
dec
aad
push
aad
fcompl
push
push
push
adc
push
sbb
jns
jnp
cmp
pop
js
cmp
adc
imul
sbb
mov
lods
cmpsl
jnp
data16
pop
mov
iret
sbb
movsl
mov
dec
dec
add
xor
and
or
shll
dec
scas
popa
adc
les
mov
aas
cmp
mov
sub
mov
outsl
xchg
pusha
test
movsl
roll
xchg
inc
or
mov
jecxz
pusha
ror
adc
mov
cmp
push
jmp
adc
cli
lock
push
in
mov
push
movsb
enter
inc
es
fcoml
adc
sub
ljmp
rorb
scas
mov
mov
add
rolb
into
add
jle
insb
movsl
iret
imul
test
mov
mov
lods
xor
sbb
packuswb
lds
lods
jge
dec
movsb
cs
xchg
push
arpl
ljmp
mov
xchg
cwtl
mov
loop
repz
aam
ret
pop
repz
xor
clc
cmpsb
add
or
rcr
jp
cmpl
aaa
lods
pop
pusha
ss
flds
test
pushf
pop
rolb
mov
stos
xchg
cli
push
rorl
jae
adc
or
adc
add
lcall
or
xchg
daa
sahf
ret
jno
adc
das
add
xor
push
adc
and
shlb
xor
jg
ret
cmp
pop
fidivl
xor
or
call
ja
pop
out
cmp
insl
xor
out
xchg
cmpsb
std
push
or
imul
pop
jno
lahf
and
or
aam
loop
sub
adc
mov
stos
push
inc
inc
daa
shlb
clc
das
icebp
outsb
cmp
pushf
inc
loope
daa
add
or
lods
sar
push
jg
loop
sub
call
xor
xchg
mov
fildl
fcmovnb
test
add
fcomps
das
and
and
xor
dec
or
inc
cmp
jmp
leave
stos
push
pop
rcl
in
mov
scas
dec
sub
mov
xor
subl
test
add
in
mov
push
adc
and
cmpsb
insl
cmp
ja
hlt
mov
lret
rol
ljmp
or
mov
sbb
out
xchg
sub
mov
cld
test
shlb
xchg
out
mov
add
sub
mov
test
mov
pop
or
fcmovnbe
dec
ret
int
mov
stos
aaa
xor
sub
mov
xchg
jecxz
xchg
fwait
jmp
and
fcmovnbe
aas
or
test
fsub
repnz
inc
xchg
xlat
fisttpll
mov
xor
mov
xor
mov
aad
or
shlb
push
or
add
xchg
dec
pushf
pop
and
push
mov
movl
jnp
cli
fadds
or
arpl
or
test
inc
dec
pop
repz
sub
incl
orl
lea
loope
icebp
add
dec
dec
mov
shr
add
inc
pop
xor
lock
sub
icebp
or
daa
xlat
mov
ret
xor
shrl
fmuls
icebp
mov
cli
jge
adc
andl
mov
and
leave
and
out
dec
sub
xor
ret
dec
adc
or
int3
enter
stos
ds
sbb
cli
cmp
imul
ret
test
shlb
pusha
test
lock
andb
push
hlt
adc
pop
push
mov
cmp
pop
or
arpl
insb
dec
adc
add
mov
stos
sub
loop
adc
jp
clc
insb
lcall
jl
lret
ds
or
pop
cltd
inc
call
cwtl
dec
fdivr
push
stos
add
pop
mov
fisttps
cmp
pop
aaa
std
push
sti
sbb
imul
ret
and
aam
in
stos
mov
adc
movl
je
clc
add
lahf
ficompl
lea
mov
push
cld
pop
fwait
jae
push
mov
jbe
es
cmp
loopne
xchg
jle
add
in
lcall
rcrl
call
sub
cmpsl
or
fnstenv
pop
inc
dec
inc
pop
lods
hlt
fisubrs
js
lock
lds
mov
or
xor
and
mov
mov
lret
and
dec
pop
hlt
or
cmc
addr16
mov
jmp
or
and
cmc
pop
adc
mov
scas
daa
lods
loop
test
enter
sub
inc
rcr
push
pop
shlb
inc
cld
notb
cmp
fcoms
loope
loopne
les
stos
rol
andb
insl
push
sbb
not
xor
push
mov
adc
push
xchg
mov
fninit
push
or
hlt
cmp
adc
fiadds
xchg
push
int3
adcb
mov
or
inc
and
fmuls
test
dec
lds
popa
sahf
cmp
and
add
add
loope
inc
dec
mov
es
lods
pop
fists
push
imul
in
cs
int
loop
loopne
aaa
in
inc
fisttps
jmp
hlt
adc
jl
std
fsts
dec
ljmp
xchg
push
or
scas
pop
xor
mov
adc
stos
rclb
addr16
push
sbb
pop
jns
aam
ds
je
data16
les
mov
bound
rcrb
nop
pop
adc
pushf
test
sbb
cmp
inc
push
inc
cs
and
ljmp
and
out
aad
jmp
loope
mov
lods
mov
mov
or
push
jno
out
add
jmp
mov
pop
xchg
mov
add
fildl
push
push
add
dec
push
dec
subb
cli
mov
movsl
jnp
pop
jge
test
out
lds
nop
jne
add
add
leave
jno
sub
push
dec
popa
mov
movsb
aas
std
add
xlat
fstl
jmp
and
pop
cld
push
pop
test
dec
cmp
add
xchg
pusha
inc
mov
mov
testl
pushf
daa
sarb
bound
in
xor
cmp
mov
xor
and
sbb
mov
test
out
movb
adc
popa
lods
rolb
dec
xor
add
shll
movsl
sbb
sub
adcb
fists
nop
sub
dec
cmp
out
into
rcl
roll
inc
sti
into
movsb
cmpsl
xchg
xor
outsl
xor
pop
pop
add
sbb
mov
xchg
xor
sbb
mov
pop
cmp
lret
add
lock
or
inc
mov
mov
je
ja
add
and
xchg
mov
inc
sbb
imul
cld
loopne
movsb
movsl
push
jns
adc
iret
add
ja
jbe
outsl
adc
orl
ficomps
fxam
inc
inc
push
repz
lods
adc
fstps
push
jle
pop
sbb
inc
or
cmp
mov
mov
push
in
mov
and
notb
sub
dec
scas
pop
mov
dec
mov
pop
cmp
in
ret
cli
fdivrs
pop
and
out
dec
loop
sarb
add
inc
sbb
pusha
dec
ja
and
pusha
xchg
fidivrl
dec
adc
adc
aad
push
xorb
les
shrl
jo
cmpsl
in
mov
imul
lret
cmp
fstp
jecxz
icebp
inc
outsb
push
sub
xor
jbe
aaa
adcb
mov
lds
jno
xor
add
jg,pn
rcrl
xorl
add
orb
mov
mov
inc
js
jmp
jmp
adc
pop
inc
adc
movsb
cld
xchg
hlt
jmp
fmuls
lock
pop
insl
jge
mov
sbb
fists
arpl
sub
dec
push
pop
push
leave
cwtl
push
or
inc
mov
je
ss
xor
je
addl
fstl
sbb
movb
movb
insl
lock
sbb
int3
or
add
jae
push
aam
mov
nop
fistpl
mov
jecxz
data16
or
pop
repz
push
rep
cs
or
xchg
xor
fadds
or
inc
push
shlb
clc
in
lea
hlt
sbbb
sbb
add
testb
cmp
cmp
out
dec
mov
rolb
in
hlt
cmc
call
add
sbb
addr16
aad
sub
mov
in
notb
inc
sbb
daa
pop
cmp
xor
jbe
mull
and
pop
lods
hlt
test
sub
stos
add
imull
xor
fwait
pop
inc
dec
in
xchg
test
push
fwait
add
mov
mov
test
insl
test
aad
mov
adc
andl
fldl
xchg
inc
lea
pop
push
or
imul
clc
lods
lds
mov
rcll
cmpb
xchg
into
mov
cmpxchg
shlb
lock
jo
clc
or
mov
cmp
mov
add
jns
xchg
pop
add
scas
test
hlt
enter
and
out
sbb
or
arpl
loope
xor
xor
fsubrs
ljmp
arpl
leave
dec
mov
hlt
out
sbb
loope
in
dec
pop
cmp
imul
xor
mov
or
inc
dec
js
popf
movsb
jp
push
inc
and
outsl
mov
ret
rcll
add
pop
add
inc
add
inc
movl
add
orl
sub
xor
inc
jb
in
pop
mov
pop
shrb
nop
or
outsb
cli
inc
pop
sbb
int
dec
xchg
or
jp
adc
adc
add
jno
add
subb
les
add
dec
pushl
jp
mov
mov
bound
jge
and
stos
jo
xor
call
ss
mov
js
addl
push
add
in
adc
ja
pop
push
sbb
sub
or
rcll
and
xchg
movsl
adcb
sub
jg
cmp
jo
dec
jl
sub
pusha
xor
stos
pushl
ret
repz
in
sub
imul
orl
push
inc
nop
ret
cli
adc
push
movsb
cld
add
push
aam
aas
sbb
dec
cmp
loop
mov
dec
inc
pop
dec
xorb
lcall
out
add
fs
btc
sbb
pop
leave
pop
cmp
adc
pop
out
sub
fwait
add
popf
add
ja
stos
mov
mov
das
cmc
sbb
roll
mov
pop
push
fsubrs
dec
push
rorb
add
add
add
cwtl
mov
jle
std
add
or
jnp
adc
mov
ds
add
jle
fidivrs
sahf
insb
inc
sbb
mov
add
nop
pop
jl
push
push
hlt
push
stos
sti
aaa
clc
test
inc
cli
stos
mov
fcmove
jmp
mov
push
push
inc
sbb
pop
int
cli
add
gs
jo
loop
jno
mul
add
fdivl
fucomi
rcll
loopne
or
imul
js
lods
dec
mov
or
aad
xor
sar
ret
test
or
lock
jae
sub
add
ret
rcll
insb
test
rclb
dec
adc
scas
adc
cmc
jb
xor
xchg
mov
icebp
xor
addb
sbb
mov
adc
in
lock
adc
fisttps
and
inc
ja
jmp
pop
insl
push
andl
push
mov
test
adc
scas
shlb
sub
inc
les
sbb
pop
pop
mov
xchg
jo
int
and
adcb
xchg
push
cmpsb
xor
add
movsl
or
test
ss
hlt
cwtl
cmp
fsubl
lcall
mov
stos
mov
dec
mov
cmp
xchg
decb
jl
ret
add
push
and
push
mov
into
mov
pop
dec
int
or
or
pusha
call
xchg
mov
jg
daa
test
subl
lock
pop
icebp
movsb
test
jmp
in
or
gs
jmp
movsl
xlat
shl
dec
add
fdivrl
sub
cs
call
mov
addb
popf
call
sarl
call
add
cmpsb
cld
test
pop
and
or
or
inc
mov
nop
jnp
popa
sar
iret
mov
push
dec
cli
push
dec
inc
fisttps
jmp
cmpsl
or
pop
insl
jg
pop
test
and
xchg
enter
or
shl
out
mov
cmp
mov
lea
outsb
loopne
mov
jne
jecxz
mov
and
out
iret
out
push
dec
outsb
mov
push
fnsave
cwtl
push
add
movsb
testb
dec
sahf
mov
shll
and
push
push
jmp
ficompl
fnstenv
xchg
jbe
push
mov
pop
cmp
sahf
push
shl
push
rcll
sbb
in
jmp
lret
pop
xlat
pop
aam
sbbl
inc
xchg
pop
mov
vunpckhps
sbb
sbb
pop
fidivrl
xchg
ss
cmp
fwait
jp
pop
out
push
mov
loope
nop
shl
cmp
add
jmp
lock
mov
inc
pop
add
xor
sub
fcoms
or
mov
lsl
popf
jecxz
hlt
or
stos
insl
cmc
adc
repz
inc
fadds
scas
pusha
and
fldl
sub
push
insl
shlb
cmpsl
bound
or
popf
jecxz
or
cmp
test
mov
push
inc
push
xor
or
insl
xchg
out
cld
out
xchg
xchg
push
imul
xor
sub
jecxz
cs
mov
push
cs
daa
xchg
punpckldq
or
aas
or
iret
push
insb
cmp
ljmp
push
es
int3
cmp
dec
pusha
ljmp
add
or
popa
inc
sub
ficoms
pop
jge
lahf
shl
sbb
aas
cmp
or
push
pop
jae
xor
fiadds
pop
inc
loope
shlb
cmp
nop
pop
iret
and
int
push
adc
shrl
pusha
imul
pop
pop
pop
inc
fsub
adc
xchg
pop
fisubrl
push
mov
insl
mov
mov
dec
cmp
add
sub
mov
call
lret
push
mov
lods
test
aaa
jb
test
hlt
jo
jecxz
stc
mov
xlat
imul
xorw
xchg
pushf
lds
data16
inc
sarb
out
aaa
cmp
loopne
adc
imul
lret
aaa
or
daa
xchg
add
cli
fldcw
and
cwtl
mov
mov
loope
push
push
mov
imul
idiv
sti
jbe
push
inc
lahf
repz
xor
dec
ret
cmp
mov
jo,pt
shll
mov
adc
xchg
push
int
xchg
jp
ficomps
stos
mov
adc
add
and
aam
sahf
rorb
lods
or
adc
mov
pop
mov
lahf
add
sub
stc
add
pop
add
popa
cli
nop
aad
dec
mov
jae
push
cmp
dec
sub
or
cli
push
push
shlb
xlat
xchg
mov
lods
push
xor
mov
lods
dec
and
jnp
add
jbe
shlb
lcall
in
jmp
das
mov
adc
push
test
je
pop
fsubrs
cmp
pop
insl
lods
aas
cli
pop
gs
xor
xchg
test
jmp
repnz
iret
and
gs
in
outsb
add
lods
pop
and
push
jp
jmp
or
enter
inc
push
test
cmp
add
jb
cld
bound
out
mov
sbb
pop
xchg
fisubrs
sbb
jno
dec
jne
sub
xchg
inc
test
clc
pop
cltd
lock
inc
cmpsb
xchg
in
or
mov
and
xor
mov
xchg
jae
add
cs
fdivr
mov
or
adc
fadd
cmp
cmc
mov
jb
dec
test
push
ficoml
fmull
push
sbb
fidivrs
rol
je
or
xchg
mov
add
les
js
push
push
mov
scas
leave
lods
jbe
and
inc
and
adc
addr16
fwait
dec
loope
popl
xchg
mov
sbb
movb
push
sbb
jmp
je
fs
mov
dec
loope
jg
pop
bound
jp
ret
addl
call
sub
mov
add
stc
loope
sbbb
pop
adc
or
cld
insb
add
add
mov
push
mov
jge
pop
or
js
leave
sbb
push
popa
ljmp
sub
dec
call
push
lahf
shl
data16
mov
filds
cmp
sbb
rolb
loop
sub
inc
push
loope
pop
pop
mov
mov
inc
or
sub
aas
inc
lcall
pop
add
stc
out
push
adc
mov
rcrl
fcoms
xor
ret
fidivrs
mov
lret
shll
add
and
mov
scas
push
int
mov
jb
ja
stos
in
cmpsb
push
sarb
cwtl
clc
inc
or
fcoml
insl
add
insb
std
loopne
js
lcall
clc
or
cmp
mov
inc
fsubrs
mov
adc
push
call
push
push
subl
inc
add
insl
adc
ljmp
adc
gs
gs
outsl
outsb
imul
popa
jae
sub
jns
jae
dec
outsb
outsw
push
in
fnstsw
push
fs
js
gs
inc
imul
xor
jae
arpl
insl
cmp
jo
and
insl
notb
outsl
arpl
mov
pop
mov
push
xor
push
imul
outsl
inc
dec
push
dec
sahf
cwtl
push
je
ja
adc
sub
mov
push
dec
fsubrs
outsb
push
pusha
fcmovnu
addr16
and
fs
xor
sub
sbb
push
push
imul
bound
mulb
push
popa
addr16
adc
inc
in
int3
fdivp
jb
jo
push
inc
push
push
sbb
sbb
cmp
sbb
mov
jnp
insb
outsl
bound
jb
gs
push
or
inc
je
inc
and
adc
and
aaa
xor
push
inc
jbe
jg
outsl
ja
inc
imul
cwtl
pusha
in
pop
scas
js
or
shlb
pushf
inc
dec
inc
daa
subb
insl
rolb
sbb
outsb
je
push
sbb
or
gs
push
push
push
mov
cltd
and
je
inc
push
out
dec
ret
fs
rcrl
popa
out
int
push
jo
xchg
and
lods
xchg
push
mov
into
fbld
test
jae
and
inc
jb
pop
mov
icebp
jo
mov
jle
insb
jns
mov
outsb
cmovl
adc
outsb
out
gs
sbb
fs
fld
shll
or
inc
in
or
push
sub
inc
gs
push
ret
and
mov
and
push
adc
pop
push
jp
les
xchg
enter
ret
leave
push
jo
inc
daa
jge
idivb
pusha
outsb
push
lcall
ficoml
add
enter
xchg
insb
pop
push
xchg
fsubrl
pop
add
ret
push
insb
hlt
and
push
and
jae
dec
test
mov
xchg
sub
and
mov
sub
jmp
jae
push
push
cmp
mov
lock
je
mov
lods
sbb
sbb
ret
jne
inc
adcb
jo
sbb
xchg
inc
add
iret
icebp
jle
popa
sub
sbb
mov
sub
into
pop
bound
imul
stos
fidivrl
rol
push
popa
cmp
ljmp
mov
cmp
in
js
add
jae
imul
insb
stos
push
inc
outsl
js
fs
sub
jbe
push
xchg
fisttpl
jns
push
divl
jne
dec
push
and
push
push
cli
or
inc
push
subl
push
inc
jae
cmp
dec
adc
and
and
mov
stos
mov
push
push
inc
insb
addr16
jae
outsl
addr16
cs
or
hlt
test
or
push
adc
sbb
pusha
popa
bound
xor
imul
mov
cmp
outsb
sub
xor
inc
mov
popa
cmc
and
mov
test
sahf
cmpsb
jae
in
sbb
mov
dec
cs
js
cltd
push
cmpsb
add
dec
outsb
movb
xor
mov
xor
and
bound
repz
and
jae
inc
subb
inc
je
inc
jo
aam
dec
insb
mov
int
daa
insb
insb
popa
jae
cmp
std
xchg
mov
xchg
les
shrb
xor
push
je
xor
inc
imul
xchg
mov
in
aaa
ret
and
push
inc
push
dec
add
add
inc
rcrl
fsts
daa
loopne
sidtl
add
add
add
add
fildll
adc
xor
add
adc
add
iret
xchg
add
push
push
push
out
lods
mov
add
and
xchg
push
adc
lods
jle
sub
pusha
sbb
je,pn
push
xor
add
sbb
mov
mov
add
push
sahf
and
inc
cmpsb
mov
mov
add
movl
inc
dec
add
rorb
push
sub
pusha
mov
outsl
dec
dec
das
pusha
add
sub
loopne
or
xor
ja
inc
repnz
xor
xchg
add
add
add
xchg
incl
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
repnz
jne
cmpb
jne
mov
shr
rol
xchg
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
inc
add
inc
