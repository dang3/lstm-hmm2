mov
div
mov
div
mov
jb
divb
testb
div
jbe
loop
idiv
cmpsb
xchg
cld
div
testb
mov
jg
jne
repnz
jge
jae
sbb
mov
cmpsb
pushf
repnz
mul
div
or
cli
out
negb
and
or
jge
hlt
out
idivb
cli
out
idivb
repz
mov
jle
mov
add
idivb
jmp
pop
pop
ja
mulb
repnz
sahf
cmp
negb
sbb
or
jae
stc
jb
div
idivb
or
jnp
cli
repnz
xor
test
jg
xor
hlt
div
divb
mov
or
or
jne
out
mov
div
div
and
jg
jg
jg
bnd
out
mov
div
div
jg
jg
jg
repnz
repnz
cmc
div
idivb
dec
div
div
jnp
jno
hlt
hlt
div
testb
div
jnp
jno
hlt
div
div
dec
div
div
and
jg
jne
repnz
xchg
jge
or
xor
and
mov
jne
mov
mov
mov
xor
je
inc
xor
mov
sbb
out
sbb
or
pop
sub
test
scas
test
pop
ret
adc
jnp
rclb
out
and
and
or
xor
inc
and
mov
sub
faddp
rorb
jmp
xchg
mov
add
rcrl
mov
adc
imul
je
sbb
addr16
test
add
out
jmp
push
psrlw
or
xor
lods
xor
mov
inc
inc
inc
inc
pop
mov
adcl
jno
jns
mov
popf
stc
cmp
pop
out
ja
imul
mov
xchg
lcall
add
mov
adc
pop
rcl
lods
cmp
xchg
pop
mov
mov
call
mov
notb
test
aaa
mov
mov
arpl
fnstenv
clc
sarb
into
xor
xchg
out
out
xchg
inc
xchg
nop
jnp
xor
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
aam
ja
lret
mov
jecxz
mov
aas
mov
jae
gs
jno
fst
dec
mov
xor
test
or
out
flds
and
adc
sub
jno
pop
or
fstp
pop
rcrb
inc
mov
sbb
pop
pop
fstp
mov
jne
mov
pop
mov
sbb
push
add
cld
jno
int3
ud2
mov
xor
movsb
pop
xor
mov
mov
mov
popf
xorl
jecxz
dec
pop
xchg
mov
push
dec
cmp
ljmp
and
cmc
pop
adc
adc
mov
out
mov
push
fists
in
pusha
lock
or
xorl
shl
dec
clc
test
lea
test
fstpt
add
cmc
mov
cmp
mov
cld
xchg
clc
testl
push
xchg
ficomps
cmp
adc
scas
lcall
adc
data16
mov
pop
imul
add
mov
mov
pop
repnz
or
ret
shl
xorb
movsb
adc
xchg
mov
sarw
das
divb
jno
callw
stos
jo
loop
neg
xor
push
repz
sahf
test
fimuls
pop
mov
push
lret
enter
dec
aad
push
rcll
mov
lea
aad
data16
lret
mul
jne
loop
movb
or
movsl
and
jg
jp
rcrb
stc
or
lock
shlb
add
shll
lret
hlt
dec
adc
dec
in
call
inc
push
and
pop
in
jo
mov
inc
pop
dec
dec
or
or
fcompl
xchg
xor
mov
es
arpl
out
pop
xor
pop
loop
ret
outsl
clc
lds
ficompl
dec
lcall
pop
and
push
push
push
or
jp
sub
add
iret
lods
push
movl
daa
loope
mul
pop
push
jle
mov
adcb
gs
in
imul
fcmovnu
jl
cmp
jge
xor
dec
test
into
sbb
jnp
imul
in
xor
dec
adc
out
add
in
cmp
mov
and
jg
or
xchg
nop
lea
int3
cmc
xchg
mov
sarl
ss
pop
test
filds
mov
xchg
mov
cmp
fwait
sub
gs
inc
jecxz
cmp
xor
cmp
ja
fwait
sbb
and
and
in
cwtl
inc
xor
icebp
ret
pop
mov
and
mull
fbld
in
jno
push
fwait
mov
dec
push
pop
js
cmp
or
out
mov
mov
lds
push
and
pop
mov
popa
and
jge
ret
mov
rcrb
cmp
cmp
push
repnz
stos
stc
rorl
cmp
cmpsb
cltd
sub
cltd
push
js
scas
mov
xor
imul
mov
xor
mov
jg
xor
insb
xchg
mov
rorl
mov
iret
std
rorl
mov
cli
jns
mov
cmp
clc
std
loop
xchg
sub
dec
stos
cmp
lcall
jnp
mov
push
lock
in
cmp
jno
mov
out
sub
sub
jo
icebp
push
dec
mov
mov
pop
adc
mov
js
jns
xor
lods
fstl
fwait
sahf
xchg
mov
int
popf
movsb
movsl
jno
pop
cwtl
cld
xor
inc
test
jno
stc
in
scas
iret
mov
bnd
je
cmp
mov
imul
es
sub
jns
push
test
xor
loope
subl
and
dec
pop
mov
cmp
cmpsb
negl
sarl
cmp
mov
xor
cmpsl
lcall
mov
sub
std
push
mov
jb
cltd
clc
sbb
pushf
jl
push
neg
movsb
xchg
setle
mov
or
jmp
fbstp
int3
hlt
std
dec
dec
inc
into
jmp
jg
adc
aaa
push
shrb
insb
pushf
insb
pop
sti
adc
inc
nop
adc
push
xchg
dec
adc
ror
std
ret
pop
lock
ss
in
clc
or
out
push
jae
imull
mov
sbb
push
cli
test
test
cmp
push
xchg
adc
hlt
sbb
ss
data16
xchg
push
jp
ja
dec
outsl
ret
xchg
bound
ds
ficoml
js
insb
fs
popf
in
repnz
sub
data16
into
aam
dec
rcl
xor
addl
fs
dec
add
lods
add
mov
and
dec
dec
push
or
lret
cmc
gs
jae
mov
xchg
fcmovnb
xchg
mov
out
repnz
adc
call
pop
rep
adc
xchg
sbb
add
repz
sbb
jne
inc
lahf
hlt
stos
aad
xlat
jb
jg
mov
cmp
stos
lea
adc
daa
push
pushf
adc
out
or
fistpll
sub
or
lahf
jo
dec
arpl
sbb
or
jmp
mov
xchg
cmpsl
daa
cmpsl
bound
stos
jge
cmp
mov
pop
adc
fcoms
sbb
and
outsb
push
into
add
sub
fidivs
cmp
ret
imul
sar
out
scas
cwtl
jo
out
push
sbb
jmp
sbb
pop
lea
mov
icebp
xor
lcall
xchg
jmp
imul
inc
iret
dec
sub
popa
sti
shll
std
dec
imul
push
xchg
or
mov
pusha
or
fsubs
sub
dec
jnp
popa
lods
mov
mov
xchg
mov
addb
mov
mov
dec
or
push
xchg
ljmp
rcr
lret
cld
mov
mov
sbb
pop
jecxz
cmpsl
and
pop
mov
mov
mov
or
loope
enter
ret
push
fdivr
mov
dec
and
push
scas
inc
js
repnz
mov
xchg
lds
jp
mov
inc
andb
loope
mov
sti
nop
lods
stos
outsl
xchg
dec
xchg
inc
shlb
pushf
scas
and
add
fistpl
adc
mov
sub
stos
aaa
lock
mov
mov
mov
aas
call
aad
jge
mov
pushf
loope
pop
test
mov
pop
out
xor
push
mov
sub
mov
xor
cmpsl
pop
xchg
sbb
fildll
mov
jmp
pop
pmulhuw
jns
es
push
add
dec
sub
out
inc
push
fiadds
add
lds
ljmp
or
xor
repz
sti
aad
jecxz
test
xchg
and
ss
inc
jmp
dec
add
aas
sub
inc
cmpsl
and
rcrb
push
push
add
into
dec
sti
mov
add
mov
mov
int3
mov
mov
aas
fsubrp
testl
inc
jnp
ljmp
sbbl
scas
lahf
dec
cmc
out
shrd
pop
cs
out
cmp
jmp
test
sub
stos
adc
clc
mov
imul
jl
push
loop
fwait
push
leave
mov
xor
inc
xchg
pusha
xor
ljmp
pop
xchg
nop
dec
inc
jge
xor
sub
xchg
inc
sbb
cmp
icebp
repz
cmpsl
sbb
stos
mov
aad
dec
ret
inc
push
xor
scas
add
lds
mov
rcr
sbb
mov
mov
cmc
loope
scas
xor
decb
xor
testl
push
jnp
mov
mov
mov
filds
aaa
jno
dec
cli
shlb
jbe
sub
pop
sub
int3
call
or
aad
sarb
xlat
mov
jp
push
les
shrl
mov
mov
imull
jne
lds
and
test
leave
push
mov
sti
idivl
xor
or
lock
insl
or
xchg
scas
sahf
enter
jbe
scas
in
dec
adc
pop
sub
dec
test
jne
gs
daa
lods
and
jp
sbb
jle
sub
mov
jp
inc
in
mov
jge
adc
pop
push
xchg
jge
data16
xor
repnz
int3
inc
into
fbstp
jp
clc
dec
xchg
lret
inc
movsb
dec
mov
popf
xor
dec
icebp
pusha
in
sbb
jno
fadds
imul
das
popf
and
mov
add
test
cltd
outsb
ds
out
test
sub
mov
cmpsl
lock
add
scas
mov
add
mov
and
fstpt
xchg
mov
pop
mov
ficoml
paddsb
xchg
push
xchg
imul
pop
cli
movsl
fmuls
stc
mov
std
ja
cltd
pop
js
mov
mov
sub
adc
stos
mov
mov
mov
sbb
xchg
jle
mov
cmp
mov
lods
gs
les
or
mov
mulb
pop
mov
inc
jo
inc
lret
sub
sub
mov
lods
sbb
sbbl
pop
mov
fnstenv
inc
xchg
xor
xor
popa
cmp
xor
xor
pop
jno
insl
xor
call
cmp
mov
xor
aas
loopne
mov
cld
pop
xchg
push
ja
xor
mov
sti
out
and
or
pop
aad
movsl
sbb
hlt
sbb
insb
add
xchg
in
fwait
xor
je
mov
sbb
rorl
faddl
xor
xchg
jecxz
outsb
movsl
test
sbb
sbb
mov
ja
xchg
mov
in
or
popf
or
jp
rcrb
lahf
cltd
or
nop
mov
mov
daa
pop
cwtl
or
repnz
dec
jmp
js
cmp
mov
jb
sub
test
sbb
mov
inc
pop
and
aad
pop
cli
push
std
popf
adc
sti
fcompl
cmc
movsb
xor
mov
popf
xorl
dec
push
add
mov
and
mov
and
cmpl
jge
sar
incb
mov
movsb
cmp
cs
xchg
jns
pop
sti
subl
loope
fs
and
mov
mov
mov
pop
popf
cmp
test
movsb
sti
sbb
and
in
imul
std
jge
adc
push
cwtl
subl
xchg
fdivrl
sub
js
xor
cmp
cmp
jp
adc
lods
sbb
jns
sbb
mov
or
arpl
sbb
leave
lret
je
andl
push
sub
sub
sbb
sbb
adc
stc
imul
pop
xor
arpl
add
notb
lret
mov
out
and
cmpsl
dec
xlat
or
jae
xor
into
daa
or
inc
paddsb
jg
jmp
sbb
pop
out
dec
sub
out
cmp
and
aad
lods
in
push
or
adc
repnz
popf
aad
out
xor
leave
xor
fistpl
mov
fsubrs
sahf
or
imul
sarl
push
jmp
cmp
push
into
leave
test
or
and
sub
mov
fs
test
push
xor
stos
lods
repz
pop
jne
pushf
pop
rcrb
mov
push
fwait
cmp
frstor
lcall
mov
dec
hlt
add
repz
out
stos
xor
into
das
out
or
mov
scas
xchg
dec
and
adc
adc
test
hlt
cmp
shlb
push
mov
xchg
mov
fyl2x
outsb
lret
push
adc
sbb
xor
xchg
add
mov
imul
mov
daa
or
push
rcll
pop
add
call
das
repz
js
out
xchg
pusha
dec
je
cld
hlt
mov
aam
popf
repz
pusha
pop
lods
xchg
xchg
dec
and
or
and
fdivr
mov
push
testb
repz
or
sbb
adc
pusha
lcall
xchg
push
xchg
pop
call
mov
aad
shrb
gs
jmp
or
xor
ja
lods
cmp
fmull
scas
lret
stos
xchg
dec
jmp
sti
mov
cltd
inc
cmp
mov
fwait
scas
cwtl
mov
in
xchg
sbb
xor
dec
add
cmp
dec
jecxz
jno
xchg
adc
test
icebp
insl
stc
arpl
aam
push
test
cli
out
popf
ret
decl
jns
sbb
movsl
add
add
dec
rcrl
mov
xchg
mov
test
enter
jns
jns
or
adc
in
adc
aad
mov
inc
mov
push
jle
mov
hlt
aam
sub
popf
rcrb
push
fwait
mov
nop
xchg
adc
mov
jns
push
sbb
mov
cmp
jbe
xor
ja
push
push
sahf
fs
pcmpgtw
mov
cmpsl
pop
jmp
jle
mov
mov
in
or
mov
sbb
jne
sar
lea
xor
and
mov
push
fidivl
mov
imul
xchg
mov
xorl
mov
jae
cs
cmp
ret
xor
es
sub
push
scas
cmp
xchg
sbb
pop
inc
cmp
stc
cmp
mov
jmp
pop
scas
lahf
loop
push
pop
push
push
sbb
stc
push
cmp
cli
push
mov
jo
loope
insb
pop
dec
adc
mov
jl
adc
xchg
scas
and
call
mov
call
roll
mov
mov
daa
std
loope
sub
lock
mov
xchg
aam
je
mov
pushf
sub
jmp
cmp
mov
add
jo
cmp
add
lret
addr16
mov
stos
out
xchg
xchg
fsubp
push
and
inc
dec
sub
les
and
and
andl
loope
pop
mov
cmc
sbbb
cld
inc
sbb
add
xchg
sbb
mov
sbb
stc
jb
mov
fmuls
pop
push
icebp
jb
dec
sub
adc
dec
adc
test
stos
lods
pop
mov
test
or
ret
jns
adc
in
dec
lret
rolb
dec
mov
lea
push
stc
and
jle
xchg
lahf
jns
leave
aad
and
insl
mov
mov
shlb
dec
cmp
imul
mov
jae
fnstcw
test
mov
pushf
test
mov
cmp
dec
loop
sahf
cmp
sbb
fwait
mov
adc
test
xor
xchg
push
ficomps
add
ds
mov
add
lds
stos
movsb
divl
adc
mov
les
lods
lds
fisubs
in
mov
outsl
sub
pop
imul
lcall
lock
and
push
clc
and
mov
mov
and
out
daa
cmpsb
mov
sub
or
pop
ss
sbb
mov
stos
xchg
adc
or
push
repnz
mov
daa
fnsave
sub
sbb
fwait
sbb
clc
rol
int
pop
test
add
movsl
mov
cli
xor
mov
imul
in
mov
test
scas
inc
inc
addl
lahf
mov
subb
hlt
add
or
mov
cmpsb
or
jnp
cmp
enter
mov
int3
das
fimuls
enter
xchg
leave
int
push
cmpb
mov
cmc
iret
mov
sbb
pop
mov
out
movsl
inc
add
mov
sbb
aas
mov
sbb
xor
sbb
pop
xchg
repz
call
pushf
xor
popa
push
fwait
mov
iret
test
cltd
decl
stos
dec
insl
ffree
in
flds
cltd
lds
leave
movl
xor
pop
mov
cli
filds
mov
addr16
mov
lret
cmp
pop
mov
cmp
clc
js
mov
xchg
loopne
cmpsb
jno
xchg
inc
sbb
gs
xlat
xchg
fwait
pop
add
and
lods
sub
mov
fimull
pop
mov
mov
xlat
jecxz
mov
int3
push
enter
stc
and
push
mov
shll
push
mov
pop
dec
pushf
cs
sub
sub
add
hlt
sahf
call
sbb
push
or
dec
mov
adc
inc
jns
push
sub
sbb
fildl
push
cwtl
das
popa
ja
ja
ret
scas
jmp
test
mov
int
fsubl
sbb
mov
dec
add
rorb
movsb
cmp
aad
sahf
sbb
mov
mov
sarl
outsb
lcall
push
mov
imul
cmp
aas
test
mov
cmpsl
mov
inc
int
ja
add
dec
mov
arpl
mov
shlb
inc
aas
mov
jle
fstp
cli
and
xchg
mov
gs
nop
add
stc
jno
out
cmp
inc
mov
add
mov
scas
jge
xchg
lret
stos
lret
jno
adcb
cmp
loop
lds
ror
cmc
dec
xchg
and
fs
jno
mov
leave
fnstsw
mov
fdivs
cmpl
das
das
jb
mov
cmpsl
bnd
bound
and
sub
hlt
aas
stos
dec
loopne
mov
mov
mov
pop
cmpsb
rcrb
add
test
out
pop
mov
mov
insl
sbb
shl
push
aad
or
sub
sub
pop
pop
xor
sub
cwtl
in
cmp
cmp
dec
fldt
inc
add
or
sbb
imul
push
adc
mov
sbb
mov
jnp
stos
push
negl
jns
pop
cmp
test
out
push
stc
ljmp
cs
hlt
push
jb
jnp
inc
cmp
xchg
mov
std
jno
loope
mov
mov
fdivrs
test
or
int3
aad
inc
push
fwait
add
jecxz
xorb
mov
jp
push
push
stos
loop
mov
fidivl
mov
jmp
push
inc
cmp
jb
or
adc
ret
lret
ret
subl
repnz
sub
cmp
jmp
out
gs
adc
dec
jmp
xor
outsl
cmpsl
mov
test
mov
mov
aad
clc
cwtl
mov
xor
leave
mov
add
sbb
mov
pop
jnp
fidivl
insb
and
jo
fdivs
mov
jmp
stc
in
xchg
add
xchg
das
mov
inc
lods
and
mov
or
dec
arpl
inc
mov
xlat
cmp
ret
inc
jb
cmp
mov
out
mov
or
jg
rol
test
stos
lahf
cwtl
decb
cmp
loope
jo
inc
mov
xor
fisttps
mov
mov
icebp
sbb
fwait
repz
ficomps
add
sti
xor
sbb
and
icebp
jnp
xor
cmp
jnp
fstps
mov
lock
sub
pop
das
sbb
mov
lods
aaa
and
int3
xchg
and
mov
bound
in
pop
adc
xor
push
inc
repnz
icebp
roll
into
test
mov
cltd
sbb
pop
in
xchg
fwait
nop
es
sbb
mov
inc
push
arpl
dec
lea
negl
add
xor
ds
clc
mov
xor
aad
sub
push
mov
ficomps
cli
jl
sbb
cltd
out
je
push
je
adc
push
test
dec
sahf
popa
sbb
imul
shlb
stos
insb
call
scas
out
lret
mov
xor
add
adc
je
mov
js,pn
rcl
sti
mov
jmp
cmpsb
in
jl
adc
jp
mov
mov
mov
icebp
sarl
leave
sub
data16
inc
inc
fstpt
clc
dec
sbb
lods
push
cwtl
inc
jl
sahf
inc
add
sub
push
xor
lret
xor
pushf
sti
cmp
ja
mov
jo
cs
insb
mov
movsl
dec
mov
jne
in
mov
mov
jmp
mov
dec
cmp
cmp
cmp
lea
pop
insb
lock
cmpsl
lods
fdivrl
xchg
addl
movsl
in
jns
mov
rcrl
ror
dec
jne
clc
mov
test
lods
pop
mov
bound
push
in
xlat
ljmp
push
movsb
outsb
xlat
or
mov
sbb
pushf
in
stos
inc
dec
cmp
push
sbb
inc
sbb
shll
ja
popf
fs
mov
outsl
jb
test
push
insl
stc
push
jl
jo
outsl
mov
jle,pt
add
and
add
pop
sub
sti
js
xchg
mov
sti
and
jns
fidivs
push
lret
xor
cmc
rcl
lods
sub
and
sti
dec
rcr
jl
push
test
sbb
fucomi
push
cld
sub
lret
sbb
jg
pop
addr16
out
je
pop
cmpsb
cmp
push
xchg
sbb
mov
mov
mov
add
sub
sbb
inc
lods
push
das
xchg
lock
add
fsubs
mov
inc
lods
sbb
mov
or
pop
incb
mov
dec
dec
call
scas
inc
testb
hlt
movsb
or
sarb
pop
sahf
mov
sarb
pop
sbb
xor
adcb
cmp
or
inc
fucomp
and
js
lds
outsl
jns
pop
mov
cmc
xchg
test
xchg
ss
pop
cli
push
popf
sbb
mov
mov
lret
stc
hlt
les
js
ljmp
outsb
fisttps
test
call
popa
aas
enter
jnp
idiv
xor
or
loop
cld
push
sbbl
xor
ret
popf
imul
mov
inc
mov
dec
cmp
mov
mov
movl
mov
dec
test
sub
icebp
dec
lcall
repnz
dec
pop
mulb
mov
insl
add
stos
movsl
push
mov
cli
sar
and
js
addr16
hlt
clc
and
in
shlb
lea
pop
imul
mov
idivl
pop
adc
std
testb
data16
sti
cmp
scas
gs
imul
mov
sub
push
mov
pushf
stos
xchg
ljmp
or
push
js
lea
shll
cmp
sub
sub
loop
cltd
lret
mov
xchg
inc
mov
xor
stos
mov
idiv
imul
test
data16
repz
mov
sbb
pop
repnz
sub
aaa
loop
push
daa
lea
xor
mov
cmc
and
out
xor
subl
xlat
leave
xchg
fwait
sahf
jg
pop
ja
test
repz
adcb
inc
lods
sti
adc
andl
pop
mov
es
mov
std
lea
pop
scas
adc
test
sub
and
xor
or
inc
cwtl
inc
dec
sbb
mov
es
insl
stos
push
mov
cmp
repz
jns
sub
dec
mov
sti
inc
xor
in
xchg
int
in
pop
xlat
jb
dec
imul
sub
aam
daa
les
into
popa
loop
lock
dec
push
loope
cmpsl
out
outsb
mov
loop
bound
jns
jp
mov
stos
push
in
cmc
sbb
cmp
cmc
jnp
push
xchg
push
clc
gs
cmp
cmp
movsl
adc
inc
test
cmp
adc
jo
lahf
shrb
sub
icebp
or
mov
mov
mov
iret
shl
arpl
dec
cld
pushf
jmp
sti
stc
xchg
call
adc
sub
add
mov
sub
or
sbb
mov
aad
pop
push
pop
add
xor
mov
sarl
add
fnclex
push
frstor
sbb
mov
ss
sub
sbb
fisttpll
outsb
pusha
xchg
fyl2x
xchg
lahf
mov
mov
sub
and
test
mov
mov
and
pop
and
mov
lret
and
mov
xchg
pop
mov
pop
add
mov
rcrl
add
mov
pop
xchg
les
add
pop
mov
sbbl
pop
out
mov
popf
xor
mov
adc
movsb
sub
add
jmp
mov
and
mov
into
xor
cmp
mov
out
xchg
xchg
jge
mov
mov
jmp
ljmp
out
pop
and
decb
bound
push
arpl
gs
cmp
and
mov
je
add
mov
dec
into
mov
xor
mov
movsl
inc
sbb
cmp
push
sub
fistpll
mov
popa
call
mov
lods
mov
fidivrl
push
in
icebp
cmp
lods
iret
popf
dec
cwtl
popa
xor
mov
repnz
jb
and
fsubrs
jmp
dec
jp
xor
sbb
sbb
inc
mov
psraw
in
add
mov
rcrl
add
icebp
aaa
in
mov
mov
sarl
jp
in
and
in
les
shlb
mov
or
test
inc
fsubr
fincstp
push
imul
in
cs
mov
fisubs
sbb
ret
leave
inc
jbe
mov
dec
test
mov
outsb
xchg
into
ret
and
jns
pop
fidivs
and
mov
jl
test
xlat
mov
fidivs
stos
es
push
mov
dec
and
in
cmp
test
mov
mov
add
mov
or
push
lcall
push
das
cwtl
shll
pcmpeqd
add
test
cmp
push
in
xor
or
mov
in
jnp
ret
pop
ja
fs
cmp
cwtl
lods
call
call
mov
sub
jp
mov
mov
jnp
aaa
lods
rorb
push
pop
lret
lea
lea
lea
sbb
lods
push
aad
lods
push
xchg
arpl
pop
out
mov
xchg
adcb
outsb
sti
dec
fimull
lods
xchg
add
pop
les
jnp
iret
push
mov
or
mov
mov
ljmp
das
or
xchg
xchg
ret
outsb
push
inc
mov
mov
jnp
sub
andl
les
sbb
dec
negl
mov
sub
pop
out
iret
imul
pop
xor
mov
mov
daa
inc
popf
ret
daa
rcrb
mulb
fnsave
ret
cmpsl
sbb
es
or
out
push
sbb
icebp
in
cmp
push
xchg
int
shrl
mov
adc
loop
sub
call
divb
mov
push
jle
sbb
push
lock
pop
hlt
data16
bound
orb
aaa
pushf
sub
cmpsb
push
pop
not
inc
add
outsl
jmp
dec
xchg
andb
mov
stos
mov
popf
loope
adc
mov
cmp
and
mov
jge
fldl2e
lock
in
mov
inc
dec
lret
pop
pop
jmp
cld
jnp
int3
arpl
inc
lret
popf
mov
test
loope
adc
jle
es
scas
mov
call
and
jbe
lcall
je
test
ljmp
sub
mov
punpckldq
or
jbe
mov
test
and
negb
add
mov
mov
fwait
insl
ret
data16
fmuls
fimuls
arpl
dec
stos
or
or
add
or
sub
inc
xchg
or
and
xor
aaa
vpunpckhqdq
pop
jnp
nop
fmul
xchg
dec
pop
push
cmpsl
mov
cmpsl
ret
dec
and
inc
in
jg
das
pop
sti
js
sarb
leave
mov
fnsave
jp
cmp
sub
imul
clc
call
pusha
stos
xchg
test
sbb
xor
jns
xchg
lods
sub
mov
shlb
cld
xor
int3
pushf
or
gs
cmp
pop
js
fsubl
dec
loop
cltd
insl
xchg
int3
and
cmpsl
or
in
cmp
push
sbb
sub
es
lock
jb
cmp
imul
iret
adc
and
sbb
push
in
push
mov
push
aaa
and
jp
dec
mov
lods
rcrb
or
popf
lret
pushl
jns
sbb
aad
js
dec
scas
jg
mov
and
jp
xor
mov
lods
gs
sub
js
mov
jmp
jl
xchg
aam
ljmp
dec
popf
outsb
stos
jns
cwtl
mov
sbb
cmc
bound
scas
stos
and
sbb
data16
and
jo
rcrl
cmp
stos
push
in
repz
xchg
adc
add
jae
repnz
mov
sub
adc
cmp
ljmp
aaa
call
movsb
pop
icebp
pop
fwait
sub
mov
cmp
sub
fdiv
mov
dec
lahf
stc
ret
cmp
fisttpll
jne
mov
mov
adc
xchg
mov
fcoms
xchg
xor
ret
test
fs
sbb
or
nop
pushf
rcr
lods
xchg
jecxz
push
sub
lahf
loop
std
push
mov
and
lock
stos
fidivs
xor
cmp
std
and
jo
scas
fidivrl
sahf
pushf
push
and
cmp
jo
sahf
sbb
add
stc
and
dec
divl
sbbb
fwait
das
lods
mov
push
xor
fstpl
sub
cmp
in
lock
xchg
jnp
call
mov
sub
fistpl
mov
sub
cmp
pop
sbb
lcall
jo
mov
dec
aad
or
jmp
inc
mov
pop
out
cltd
mov
fsts
cmp
pop
mov
xor
jmp
repz
nop
in
pop
repz
mov
mov
or
add
sti
stc
jmp
sub
cmp
in
jno
in
loop
mov
jmp
fstpt
sbb
mov
sub
mov
mov
jmp
or
js
jae
test
js
mov
mov
mov
sbb
mov
icebp
in
jns
cmp
call
or
mov
in
fldl
pop
mov
out
jl
in
inc
mov
sbb
and
add
adc
sbb
adc
arpl
stc
in
fisttpll
jmp
icebp
in
stos
lock
mov
xchg
hlt
out
sbb
xchg
inc
xor
mov
inc
mov
mov
fsts
lods
js
cmc
mov
mov
imul
lods
dec
mov
push
sub
or
jno
das
out
cmp
cmp
test
imul
dec
in
xor
mov
call
movsl
or
int
sub
or
add
mov
insl
mov
das
scas
mov
dec
insl
clc
insl
and
movsb
call
mov
push
mov
clc
sub
lock
sub
jb
mov
or
cmp
jge
test
inc
xchg
sbb
movsb
xchg
fisttpll
mov
cmp
inc
pop
mov
mov
in
ss
mov
ss
out
xor
lds
sahf
jb
mov
jg
sahf
popa
sbb
and
loope
es
flds
push
or
fmuls
lret
mov
xchg
sbb
mov
imul
popf
ffreep
cmc
fwait
jb
rorl
scas
aaa
cmpsl
call
push
jnp
into
je
test
pop
rorb
lret
push
mov
out
pop
mov
jbe
add
push
scas
mov
lret
in
fistpl
xor
pop
push
or
aas
lcall
add
dec
ficoms
cwtl
inc
iret
sbb
push
jbe
mov
fsubrl
or
stos
push
scas
jp
int
loope
and
mov
dec
cmc
jl
mov
mov
out
inc
aad
sub
fs
lock
push
mov
ja
decl
add
push
mov
pop
mov
pop
repz
inc
ficoml
loopne
adc
aaa
dec
mov
mov
movsb
and
jle
shrb
and
icebp
jmp
dec
repnz
push
pop
jne
sti
mov
enter
iret
fnstenv
clc
enter
and
lahf
roll
repnz
call
add
inc
jae
sbb
add
dec
sahf
loopne
dec
push
fs
jne
int
lcall
aas
fucomip
dec
mov
mov
notb
and
stos
push
inc
je
mov
imul
mov
je
and
add
dec
sub
mov
repnz
or
je
pop
addb
insl
dec
cltd
mov
mov
dec
lea
cmc
popf
jl
cmp
or
xchg
jmp
mov
fsts
rcr
lcall
add
outsl
ror
lcall
mov
pop
or
sbb
aam
inc
adc
mov
fs
lds
out
ret
test
aas
orl
ljmp
inc
loop
jle
xor
pop
sbb
shlb
add
filds
and
pop
jecxz
testb
test
es
pop
sbb
mov
cli
cmpsl
js
daa
rcrb
or
imul
push
scas
add
shll
call
xchg
shlb
aad
jg
mov
ret
rcl
imul
xor
jne
adc
mov
cmpsb
xor
jo
mov
cmp
xorl
xchg
in
lods
pop
dec
jmp
iret
sbbb
push
inc
movsb
jg
mov
adc
xor
aaa
push
or
mov
data16
sub
cmp
test
cmc
jnp
cmp
or
aad
outsb
jb
xchg
fdivrs
enter
dec
clc
xchg
aad
sub
mov
mov
dec
pop
and
imul
dec
aam
add
or
ss
jae
lods
jle
sub
iret
sbbb
ds
stos
test
inc
movsl
ret
mov
jge
sub
enter
pop
mov
sarb
outsb
shlb
cltd
repnz
cmpsl
inc
pop
xchg
lret
loope
xchg
jnp
jecxz
in
or
cmpl
add
adc
mov
in
jmp
dec
mov
ljmp
in
xor
inc
and
push
subb
adc
pop
lcall
adc
xchg
stos
mov
adc
outsl
in
or
jo
test
push
enter
add
cmp
pop
roll
adc
mov
dec
xchg
xor
test
push
sti
loope
xchg
dec
jbe
imul
or
xlat
filds
or
pop
dec
mov
hlt
scas
add
pop
xchg
mov
push
pop
push
imul
shlb
icebp
mov
xchg
rorl
xor
xchg
pop
fcmovne
movsb
pop
enter
test
add
mov
inc
repnz
jmp
dec
adc
push
cli
dec
out
out
mov
sbb
push
pop
mov
add
fmull
mov
sub
gs
roll
mov
dec
mov
aaa
lcall
and
sub
outsl
aaa
ljmp
call
mov
clc
cltd
xchg
cli
cmpsl
test
push
mov
jae
pop
or
inc
pop
call
movsb
mov
pop
in
shll
cwtl
lret
enter
add
adc
popf
lahf
fnstenv
jg
adc
loop
popa
icebp
test
rorl
xchg
jl
cmpsl
cmp
mov
mov
or
clc
sub
pop
push
in
sbb
mov
sbb
adc
push
mov
mov
faddl
jecxz
rcrl
jecxz
add
xor
and
scas
movsb
jmp
movsl
mov
push
cmp
xchg
mov
inc
pusha
jmp
sar
in
fucomp
pushf
cmp
rorl
test
fistps
pop
xchg
pop
cmpl
cld
xchg
aam
ds
push
in
in
adc
repz
add
scas
push
faddl
cmp
pop
in
test
jae
jnp
xchg
xor
sub
adc
clc
insb
mov
pop
mov
mov
fdivrp
stc
xlat
dec
adc
jmp
add
shrb
std
or
mov
sahf
add
call
xchg
cmc
fnstsw
iret
clc
popa
popf
sbbl
xor
ficoms
cltd
pop
inc
jl
mov
mov
pop
sahf
mov
test
lock
jge
mov
test
xor
shr
out
mov
push
add
mov
mov
push
std
dec
fstps
ljmp
add
or
dec
je
fsubl
jecxz
mov
cli
pop
loope
mov
jp
loope
cmp
fnstsw
mov
out
inc
scas
mov
pop
sbb
or
nop
push
lods
push
sub
push
pop
ret
lret
loope
push
imul
imul
mov
jle
jmp
xlat
mov
adc
adc
loop
lods
sub
mov
mov
sbbb
push
adc
in
adc
neg
cmp
dec
push
cmp
and
and
sub
sub
shlb
aaa
dec
test
je
sahf
popa
les
lea
cmpsb
mov
sbb
stos
lret
movsl
insb
fnstsw
mov
sub
mov
lock
jmp
into
bound
les
jb
imul
int3
mov
cs
subb
jns
or
mov
xchg
ret
dec
pusha
fbld
lock
jns
cmovns
bound
test
or
pop
jmp
enter
xchg
negb
mov
repz
or
sbb
push
fidivrl
mov
out
js
dec
repnz
sub
push
add
pop
lock
xchg
call
mov
ret
in
adc
scas
adc
jae
jae
mov
popa
and
mov
xchg
leave
repnz
mov
mov
sbb
mov
and
aam
mov
cld
xor
inc
push
loope
sti
idiv
xorb
xchg
outsb
mov
mov
add
jno
sub
mov
and
push
dec
lahf
sbb
mov
loop
xor
not
adc
movsl
inc
js
add
rol
lds
lret
test
jae
clc
fsts
adc
jle
daa
xlat
and
dec
or
jg
pushfw
dec
cltd
jge
ret
xchg
sub
or
addr16
bound
mov
sbb
hlt
rorb
lods
xchg
mov
or
rclb
mov
stos
pop
sub
stos
mov
pop
xchg
cld
ja
jl
icebp
xor
cmpsl
pop
pop
andl
fistpl
or
xor
pop
or
mov
hlt
mov
nop
mov
cmpsl
out
mov
ja
mov
sub
push
adc
imul
cmp
insb
nop
ret
xorl
iret
mov
pop
xchg
adc
imul
insb
or
in
fwait
dec
xor
or
loop
inc
mov
jns
jmp
sub
and
cmp
lcall
lods
xchg
jo
in
add
lods
mov
cmp
movsl
ja
stos
ret
movsl
and
movsl
fld
dec
jbe
jmp
cmp
sub
xor
mov
iret
mov
insb
mov
dec
adc
xchg
jae
push
push
cmp
cmpsl
rorl
xor
mov
fisttpll
insb
pop
aad
push
test
je
cltd
push
js
sub
int3
ret
ds
fwait
xor
scas
fldl2e
mov
and
pop
inc
das
sti
xchg
cld
test
out
scas
jae
lods
xchg
inc
iret
push
scas
or
dec
add
push
outsl
adc
notl
pop
loopne
push
jecxz
add
das
fistl
xchg
mov
cmc
xorl
jno
mov
adc
xchg
adc
jecxz
test
mov
mov
push
lret
adc
jle
orl
cmpsl
outsl
aaa
js
mov
mov
xchg
fdiv
adc
scas
mov
hlt
mov
cmp
movsl
jecxz
push
mov
test
clc
inc
je
mov
insl
test
pop
cwtl
push
movsl
dec
in
jecxz
sub
loop
dec
pop
hlt
fimull
std
xchg
sbb
cs
ja
pop
gs
pop
jge
dec
dec
call
outsl
fstl
fcomps
shlb
mov
pop
ljmp
adc
lea
arpl
pushf
adc
push
lcall
or
popf
fcmovnb
hlt
jo
sbb
pop
add
xchg
loopne
in
mov
dec
pop
lret
lret
add
nop
mov
cmpb
stc
push
outsl
sti
dec
scas
pop
jmp
out
loopne
cs
idivb
cmp
jp
pop
mov
and
insl
mov
sbb
repz
push
imul
ds
test
adc
xor
test
add
rcr
dec
xchg
inc
mov
mov
sbb
xchg
scas
push
popa
sub
mov
or
push
hlt
xchg
cmp
xlat
jl
inc
inc
sub
xor
sbb
sbb
sbb
imul
lret
push
mov
or
add
xor
xchg
les
jmp
fstps
jecxz
adc
pop
sbb
mov
lds
push
push
test
adc
js
push
xor
pop
xor
fisttpll
xchg
movsl
fucom
sbb
adc
mov
lds
lock
popf
and
aaa
mov
subb
arpl
cli
shrl
das
sbb
insb
and
imul
ja
out
inc
and
pop
pop
loopne
or
xor
adcb
adc
test
mov
cmp
or
pop
in
xorb
jp
lea
mov
dec
std
filds
in
cli
mov
add
or
jne
add
stos
cmpsl
cmp
xorb
xor
jne
sbb
fcmovnb
sub
add
int
decl
lods
scas
mov
mov
mov
push
sub
imul
add
iret
push
in
jge
ffree
adc
add
call
mov
add
inc
xlat
jle
mov
and
adc
les
jnp
mov
sbb
rorb
jo
out
mov
mov
xor
addr16
bound
cld
shrl
xchg
mov
sub
jbe
roll
sub
in
pop
int3
dec
rcl
lahf
sub
scas
jge
dec
jmp
mov
mov
mov
arpl
aaa
test
ss
push
jne
cmpsl
call
mov
sub
mov
call
gs
xor
cmp
div
dec
mov
idiv
mov
hlt
xchg
and
shr
mov
pusha
sbb
dec
int3
int
imul
fucomip
iret
jns
enter
pop
sub
push
mov
mov
adc
loope
ror
dec
call
clc
jo
push
jns
sub
cmp
aas
mov
sbb
push
aad
lcall
push
iret
xor
fs
bound
lret
sub
xor
push
sub
xor
lret
inc
xor
call
xor
mov
fistpl
jle
ficoml
mov
xor
push
movsl
push
aad
jecxz
mov
mov
xchg
add
and
fdivs
nop
or
lods
loop
and
out
sbbb
inc
in
lods
and
inc
xor
pop
ror
mov
or
dec
jo
pop
imul
inc
sub
mov
jno
in
dec
push
xor
les
jmp
bound
aam
out
jne
mov
jne
push
and
pushf
xchg
inc
mov
repz
pop
dec
std
ret
in
arpl
int
and
jl
addr16
xor
and
loope
pusha
test
ds
sub
mov
xchg
xchg
inc
mov
mov
xor
sbb
mov
inc
mov
push
or
popf
mov
xlat
sbb
stos
lods
cmp
xlat
xchg
les
orl
xor
test
adc
lret
inc
ss
pop
jmp
sahf
int3
cmp
scas
ja
cmpsl
xchg
lret
mov
outsb
popf
sbb
cmp
cmp
scas
adc
mov
and
pushf
jo
testb
inc
jecxz
mov
sub
or
cmp
lahf
cmp
in
jnp
mov
ret
data16
sar
popf
add
nop
pusha
inc
fadd
push
cld
add
cmp
loop
call
mov
iret
or
cmp
pop
outsl
lcall
pop
adc
and
negb
fs
xchg
popf
sub
movsb
fsubrs
inc
mov
pusha
scas
insl
es
iret
xor
cs
sub
adc
and
xor
icebp
push
ljmp
mov
jae
mov
pop
xchg
inc
jb
aaa
and
call
movsb
out
out
lods
xor
sar
cmp
jg
xchg
cli
lret
jge
mov
sub
dec
or
cmp
and
sbb
jbe
popa
mov
mov
mov
pop
xor
add
notb
js
dec
jnp
push
bound
adc
enter
and
jmp
sbb
lods
pop
sub
push
mov
movsb
faddl
or
jg
pop
movsb
mov
sub
jge
push
inc
adc
das
push
sub
jmp
pushf
mov
jmp
lcall
jle
outsl
mov
fldcw
jmp
xchg
cli
adc
inc
int3
mov
bound
out
pushf
xchg
push
sub
pop
fwait
mov
jl
mov
jno
pop
idiv
in
sbb
out
inc
data16
sub
dec
fbstp
xchg
sub
inc
mov
pop
mov
test
add
mov
mov
jno
insl
jns
jns
std
push
xor
mov
stos
mov
enter
dec
xor
xchg
jmp
mov
call
mov
add
outsb
insb
lea
sbb
push
adc
lahf
clc
mov
xchg
nop
jnp
add
jg
xchg
gs
popa
jnp
adc
pop
sub
insb
jae
sbb
jg
je
mov
lret
or
jo
jl
lret
imul
aaa
bnd
inc
mov
mov
clc
push
cmp
cmpsb
test
sub
mov
mov
mov
fwait
dec
arpl
lods
orl
jp
fists
scas
xor
sbb
fcoms
mov
ret
arpl
push
daa
bound
sbb
jne
xchg
test
sbb
inc
fmuls
xchg
adc
fists
jecxz
stos
mov
fmul
xchg
out
call
pop
arpl
dec
dec
outsb
adc
mov
xor
push
inc
arpl
fstpl
test
pusha
xlat
add
adc
test
xor
add
fcom
push
les
pop
into
cld
loopne
cmp
sbb
jnp
test
sbb
push
dec
xor
jb
pop
xchg
das
ja
mov
ret
fstps
xchg
loope
in
jnp,pt
int3
movsb
sbb
sti
movsb
mov
out
xchg
lret
cmpsb
ret
sbb
stos
ficoms
loop
sbb
fcomps
daa
xchg
out
popa
dec
mov
not
or
mov
loop
int
jp
xor
mov
in
jg
pop
mov
shlb
jge
cmp
test
mov
and
pop
jne
add
sahf
adcb
in
lods
mov
popa
lret
lods
loop
icebp
scas
das
daa
inc
and
jmp
scas
dec
and
repnz
ret
js
sti
dec
mov
jae
and
ficoml
enter
lret
or
xor
loope
mov
cmp
pusha
mov
bound
mov
js
shrb
pop
hlt
popf
xchg
cmc
mov
jne
mov
add
movsb
cmp
dec
in
sub
cmp
sbb
mov
scas
dec
sub
xor
push
mov
push
xlat
or
and
outsl
fldl
bound
out
enter
arpl
rorb
mov
imul
pop
cltd
clc
push
sub
addl
ret
insl
inc
fstpl
mov
xor
and
loop
and
sub
lock
xorb
shlb
lret
cmp
popf
fdivrl
aad
insl
fisubrl
sbb
xchg
jo
mov
sbb
ljmp
ret
mov
jg
pop
int3
mov
imul
sub
pop
fbld
jo
int
and
jle
mov
and
or
xchg
xlat
mov
in
jnp
in
repnz
or
add
or
pusha
das
mov
shrl
and
mov
and
outsb
out
jmp
test
mov
pop
out
push
iret
cmp
sub
xchg
mov
cli
mov
pop
pop
es
mov
cmp
add
xlat
mov
incb
add
sbb
pop
and
lock
iret
mov
call
daa
test
jp
sbb
filds
into
loopne
outsb
and
push
inc
mov
sbb
pop
lods
cmc
pop
and
notb
or
xchg
cmp
jbe
lcall
aaa
das
jg
mov
adc
clc
pop
out
imul
inc
loopne
imulb
hlt
addr16
iret
pop
mov
mov
cmpsb
addps
lahf
xchg
das
adc
push
cltd
bswap
xor
push
pop
cs
pop
inc
push
xchg
fmulp
xchg
fdivs
ss
adc
pop
outsl
stos
gs
jecxz
pop
idivl
in
sbb
lods
aam
gs
mov
lds
push
inc
aas
xchg
subl
pop
fdivrl
aam
dec
cltd
jae
filds
pop
int
mov
push
mov
cs
xchg
stc
jae
in
stc
xor
xor
push
fsubrs
xor
imul
jnp
fdiv
mov
cltd
adc
lds
inc
mov
lds
adc
cwtl
dec
pop
aas
push
and
stos
adc
les
xchg
jo
mov
insl
cmp
cli
xor
int
push
add
call
sub
adc
rcr
push
adc
inc
lcall
sub
out
mov
pop
mov
cmp
mov
aam
or
dec
adc
xlat
loopne
adc
rcr
lcall
push
jmp
pop
in
nop
lea
mov
mov
into
in
or
lcall
clc
pop
xchg
sbb
movsb
mov
sbb
test
stc
js
movsb
movsb
lock
int3
sbbl
xchg
insl
xor
xchg
fidivrl
push
in
in
ss
mov
fstpt
adc
push
bound
push
mov
addb
push
mov
scas
aam
cmp
mov
push
sub
inc
enter
mov
push
xchg
xchg
ftst
repz
xlat
out
xor
cmpl
xor
pop
lea
loopne
stos
mov
xchg
cmp
movsb
fisubrs
add
aas
jbe
cmp
std
popl
das
jle
mov
xchg
mov
outsb
pushf
aaa
sbb
or
mov
scas
xchg
add
fidivrs
lret
data16
mov
jb
mov
add
push
fistpll
nop
pop
or
sbb
lcall
ja
jno
mov
aaa
outsl
mov
mov
add
int
rcl
push
mov
cmp
and
ds
add
popa
fs
xor
mov
dec
addr16
jae
mulb
shll
sbb
iret
xor
into
pop
mov
adc
popa
shlb
int3
popl
mov
ljmp
sbb
scas
or
xor
pushf
insl
nop
cmpsl
js
outsb
jle
sbb
and
imul
inc
xchg
sahf
rcl
inc
test
fidivs
and
fsubrl
and
bound
xor
mov
js
add
out
push
sub
test
loopne
dec
and
jmp
mov
pop
pop
inc
mov
xchg
pop
stos
and
aad
dec
and
dec
or
mov
xlat
shlb
notb
push
insb
out
and
loope
jmp
je
push
sbb
and
out
movsb
inc
cmp
insl
xchg
imul
jae
mov
mov
mov
shlb
in
mov
test
incb
adc
int3
pop
xor
sbb
andl
lds
xor
adc
xchg
movsb
cs
sbb
daa
divb
sub
push
xchg
or
push
push
add
adc
adc
pop
mov
ret
mov
sbb
mov
ja
mov
cmp
out
sub
popf
arpl
pop
popa
mov
pop
adc
imul
fwait
add
test
popa
pop
dec
push
mov
sub
xchg
js
cmp
jnp
mov
out
dec
cs
xchg
sbb
es
outsl
clc
dec
ret
cwtl
fimuls
push
adc
push
sbb
std
cld
cmc
mov
cli
fildl
push
add
mov
jns
xorl
cmp
enter
xchg
mov
inc
or
pushf
push
push
out
xor
push
mov
sub
push
pusha
sbb
sub
mov
scas
arpl
fcomps
insb
shll
dec
jb
jmp
mov
subb
ds
roll
fcoms
jmp
jecxz
dec
jne
xchg
cmp
repnz
mov
out
cmpsb
pop
test
iret
lock
cmp
insw
enter
icebp
ds
jbe
inc
in
popa
xor
jl
ret
mov
lea
sub
pop
adc
icebp
sbb
push
inc
xchg
and
stc
jmp
sarl
jb
aaa
push
mov
in
lcall
insb
jge
cmp
xchg
mov
test
rcll
push
lret
outsb
rclb
out
fisubrl
mov
dec
sbb
inc
pop
lock
adc
xchg
and
ja
mov
popf
push
mov
shll
int
mov
ds
pop
xlat
insb
stc
cmp
pop
adc
mov
repz
xor
test
push
iret
lock
stc
mov
leave
ret
gs
push
sti
sbb
xchg
sub
cmc
js
test
push
push
push
ss
add
in
xlat
push
sub
pop
fiadds
les
stos
test
push
out
mov
xor
mov
add
lret
ss
xor
jns
imul
jg
dec
daa
mov
mov
jnp
bound
cmc
mov
out
bound
cmp
push
jle
lea
pop
mov
push
mov
out
xor
xor
cmp
sub
mov
mov
popa
pop
pop
push
xor
add
inc
inc
add
push
mov
push
mov
jne
cmp
scas
int
ds
xchg
sub
mov
cmpl
fwait
lock
lods
stc
sub
in
fwait
jecxz
sar
fimuls
test
hlt
clc
inc
mov
out
outsb
jp
and
or
incb
stos
dec
iret
xor
iret
inc
adc
in
cmp
outsb
imul
iret
pop
psubq
mov
or
mov
mov
jnp
dec
fldcw
sub
shr
push
sbbb
jmp
mov
xor
mov
in
mov
xchg
pop
ljmp
fcmove
jmp
std
fnstsw
int
filds
jmp
lds
push
jge
xchg
repnz
push
and
sbb
add
push
repz
test
xor
add
sti
and
inc
dec
pop
aas
ror
scas
dec
aas
inc
call
enter
dec
add
xchg
outsl
mov
adc
inc
cmp
movsb
pop
adc
mov
mov
scas
dec
mov
mov
iret
adc
pop
mov
sub
outsl
sub
add
data16
pop
in
mov
xor
adc
insb
jbe
fidivl
or
dec
push
pop
xchg
outsb
add
inc
sub
lea
push
loop
mov
mov
pop
xor
leave
xchg
xor
fs
movsb
pop
dec
not
test
je
cmpl
cltd
sub
xor
inc
jns
mov
dec
lock
pop
mov
ja
mov
jb
mov
mov
fnstenv
fisubl
ljmp
xorb
jmp
xchg
rcr
mov
jo
jno
mov
xor
jg
adcl
adc
sbb
push
cmpsb
jl
xor
in
jbe
sub
fs
and
sub
xchg
rorl
inc
mov
lahf
push
ja
and
cmc
popf
mov
mov
mov
pop
add
nop
in
mov
sahf
xor
ds
sbb
push
scas
mov
adc
lock
pop
inc
mov
mov
cmp
add
inc
int
cli
mov
js
push
mov
loopne
jae
stos
imul
movsb
scas
or
xor
inc
cmpl
push
call
dec
mov
cmp
mov
jo
test
int
sbb
mov
push
in
int3
dec
js
add
add
mov
fisubrs
popf
mov
sub
movsb
stc
scas
push
push
push
in
dec
lock
iret
or
ja
push
and
cmp
xlat
jg
or
jmp
pop
scas
cli
into
fs
repnz
and
cmp
mov
push
leave
repz
fnstcw
mov
pop
cmp
repz
sbb
cmp
add
push
dec
bound
mov
adc
adc
or
push
jl
lock
js
jnp
iret
imul
or
jns
decl
mov
cltd
sub
fs
int3
fdiv
xlat
sub
mov
fcmovnbe
cmp
xchg
insl
adc
test
leave
test
adc
or
in
sbbl
sub
movsb
loope
out
jl
mov
adc
mov
aad
sbb
pop
or
adc
xabort
iret
cmp
sbb
cmpsl
cmpsl
mov
cld
dec
stos
movsb
pop
in
stos
lret
pop
add
ja
sub
mov
ja
mov
movsb
out
rorl
cmp
shll
addr16
xor
lret
insb
pushf
int3
jge
inc
adc
loop
aaa
mov
push
jl
hlt
mov
in
xor
stos
mov
add
lret
xor
jne
push
dec
loopne
xor
inc
cmp
adc
push
fdivl
testl
cld
mov
hlt
push
push
mov
push
push
dec
je
insb
loop
pop
pop
out
xchg
iret
jecxz
lods
jns
arpl
add
xor
in
packssdw
mov
push
aam
out
out
pop
cmp
xchg
mov
int
shlb
cwtl
sbb
mov
js
ficompl
iret
mov
jecxz
clc
cmpsb
outsl
cmp
fcomps
xchg
inc
cmp
pop
sbb
sbb
push
cmpsl
xchg
jecxz
inc
mov
out
sbb
mov
mov
dec
stos
popa
insb
mov
fs
jnp
mov
pop
lds
decl
stos
imul
push
fbld
loope
into
pop
subb
mov
dec
scas
outsl
mov
test
imul
arpl
sbb
or
lds
push
jne
pop
cltd
xor
enter
xlat
cmp
mov
xlat
sarl
and
adc
dec
jnp
mov
add
adc
sti
pop
mov
pop
int
jns
dec
xor
mov
insb
mov
mov
lock
xchg
int3
mov
adc
pop
dec
out
das
sub
jge
cmpsl
sub
mov
cld
stos
imul
lds
pop
aam
inc
arpl
das
popf
sbb
jno
jb
jae
mov
xchg
mov
add
mov
sti
pop
pushf
mov
xchg
push
inc
jle
pop
pop
fdivrp
mov
pop
add
mov
repz
repz
dec
push
push
mov
stos
push
jp
lods
sub
and
in
pop
sbb
or
push
movsl
and
sbb
push
aas
cmc
stos
aam
test
inc
mov
mov
xlat
cmp
stos
bound
xchg
fdivrs
cs
fcmovu
jmp
xchg
and
fistpll
pushf
mov
inc
and
addl
xor
sub
pusha
xor
mov
bound
call
stc
negl
push
ret
mov
lea
shl
lret
clc
xor
stc
dec
sbb
loope
negb
dec
cmpsl
call
sbb
jne
mov
jmp
pop
ret
fistpll
clc
jae
cmpsl
mov
push
lcall
nop
je
jne
pop
xchg
popa
data16
inc
and
mov
test
mov
in
repz
xor
fstps
ficomps
xchg
les
sbb
lret
mov
pop
sahf
push
jno
and
cli
nop
mov
or
inc
rol
dec
cltd
out
and
add
jnp
xchg
outsl
cmpsl
out
sub
mov
das
jno
outsb
mov
pushf
into
rcr
fwait
mov
stos
aad
pusha
ds
lahf
inc
jo
jne
push
jns
test
push
xchg
pop
and
sbb
xchg
xchg
lret
aaa
add
add
push
add
mov
add
add
loope
dec
mov
cwtl
clc
jmp
xor
movsb
addr16
push
es
push
iret
mov
popa
lret
rclb
inc
push
sbb
mov
int
jecxz
jnp
out
mov
idivl
cmp
sahf
xor
mov
xor
push
mov
into
push
mov
inc
inc
dec
xlat
lock
lret
idiv
test
cli
push
jno
popf
insl
jae
sbb
mov
fbld
addl
sti
and
lret
jge
add
push
mov
jge
mov
mov
xchg
pop
push
negl
cmp
add
fsubrl
ret
movl
outsb
test
or
adc
popf
out
sub
addb
aas
test
cmp
and
xor
mov
mov
add
mov
adc
xor
cwtl
xchg
mov
outsl
sarb
mov
push
xor
mov
stc
fcoms
pop
push
push
mov
adc
call
xlat
subb
jecxz
mov
xor
in
sbb
mov
imul
fmuls
push
movsb
jge
lcall
sub
int3
xor
jno
push
sbb
mov
sub
cwtl
mov
mov
sti
adc
adc
mov
icebp
pop
roll
sbb
test
mov
popa
mov
or
and
sub
cmp
xor
sbb
mov
xchg
jg
pop
dec
pop
or
cld
jecxz
pop
mov
or
jg
inc
repz
pop
jo
cmp
push
ss
pop
test
stos
cmp
mov
lret
inc
out
pop
cld
testl
push
cltd
cmp
lcall
daa
cmp
mov
into
cmpsl
push
push
cmp
shl
cmpsb
fstps
and
inc
lret
mov
sub
mov
push
dec
push
sbbb
sbb
fwait
dec
mov
cmp
xchg
xor
push
and
or
std
xor
rcrl
xor
sti
and
cmpsl
repz
cld
movsl
ret
push
sub
test
inc
es
out
xchg
test
sahf
popf
mov
dec
mov
repnz
data16
push
cltd
loopne
adc
mov
and
imul
lds
rolb
mov
mov
test
jne
xchg
mov
or
xchg
sarl
sbb
daa
bound
cmp
rol
ljmp
inc
dec
inc
cmp
cwtl
push
cmp
mov
jne
xchg
jg,pn
fdivr
ficompl
add
xchg
or
ficoms
inc
movzwl
jno
and
lds
cmp
mov
jl
push
mov
push
or
lret
pop
cmpsb
fimuls
xchg
mov
out
ds
or
xlat
dec
or
mov
cmp
mov
and
dec
sbbb
leave
lods
scas
dec
insb
stos
xchg
fiadds
daa
adc
test
cmp
pop
inc
mov
cmpsb
movb
mov
mov
jae
gs
mov
or
lods
jmp
push
imulb
inc
out
sbb
ja
in
fdivr
mov
add
ss
jecxz
inc
dec
sbb
mov
pop
pop
arpl
add
xchg
mov
rolb
mull
jne
add
pop
sub
loop
xor
adc
ds
push
aas
or
popf
mov
xchg
movsl
jno
adc
and
mov
push
xor
mov
adc
pop
clc
sbb
cmc
xchg
fiaddl
out
nop
push
hlt
pop
ficoml
in
cs
sti
test
sub
dec
mov
pop
std
lea
shr
mov
sbb
popa
ret
cmp
or
jo
stos
cmp
mov
sbb
adc
add
rolb
std
pop
test
mov
jb
jb
cmp
cmp
idivb
in
xorl
xor
test
sarl
push
hlt
loope
mov
clc
and
adc
jbe
cmp
lahf
fs
pop
mov
mov
or
hlt
data16
cmp
xor
xchg
push
ret
fadds
or
dec
test
std
jno
and
cmp
js
add
pop
enter
adc
sub
lea
and
mov
sub
dec
jnp
xchg
pushf
ja
js
mov
ds
sbb
insb
inc
cs
inc
pop
div
out
cmp
bound
dec
addl
add
xchg
mov
xchg
push
mov
pop
mov
ss
filds
fs
jl
stos
mov
pushf
and
mov
cmp
cmp
clc
push
test
clc
lds
cwtl
popf
mov
sub
cwtl
sarl
insl
pop
icebp
xchg
mov
imul
pop
mov
jg
ror
test
xor
clc
mov
in
in
nop
cmp
add
mov
push
enter
or
and
xchg
push
jo
fistpl
and
mov
popfw
clc
out
scas
stos
movsl
mov
xor
aad
xor
pop
arpl
cmp
sub
fisubrl
testb
inc
and
lock
xchg
inc
pop
sbb
pop
sbb
jno
and
aas
repz
cmp
out
add
xchg
adc
and
jnp
aas
outsb
cmpsl
int3
mov
in
jg
sbb
scas
xor
addl
insb
jno
inc
sbb
lods
mov
lcall
sub
jmp
rcrb
aaa
mov
mov
mov
movsb
es
pop
pop
ljmp
mov
sub
cli
test
xchg
pop
jno
mov
lods
outsl
add
test
adc
jl
fldl
or
or
dec
push
lods
stc
mov
aam
test
cwtl
cmp
lahf
xor
into
in
fsts
sbb
aas
into
les
or
repz
mov
adc
push
mov
jp
sahf
les
jno
push
jecxz
lds
push
sarl
cmp
jno
xor
cld
pop
mov
add
imul
cmp
jle
mov
mov
fadds
cld
dec
icebp
add
adc
cltd
outsb
cmp
popf
ret
pop
shll
and
addr16
add
shll
mov
mov
pop
jg
mov
mov
sti
pushf
push
jl
jmp
filds
sahf
repz
pop
loop
mov
scas
inc
sbb
test
cmpsb
pop
push
movsl
mov
adc
jns
jb
inc
pop
lret
mov
movsbl
aas
mull
int
add
pop
push
sti
and
and
sub
and
jae
daa
out
cld
pop
mov
dec
jno
mov
subl
pop
test
mov
xor
mov
inc
xor
pusha
nop
jo
push
repnz
into
ljmp
push
add
leave
std
inc
add
xchg
xor
mov
icebp
insl
in
push
mov
dec
adc
imul
sbb
xchg
lcall
add
roll
mov
and
jl
test
jne
mov
aad
or
sbb
stc
repz
xor
sbb
mov
mov
pop
and
jge
xchg
jmp
ljmp
popf
push
data16
stos
scas
sahf
cltd
or
popa
mov
lods
cmpsl
js
es
or
xor
mov
je
scas
fwait
lds
subb
pushf
lret
das
mov
imul
add
mov
sahf
lods
inc
jge
lcall
adc
mov
clc
mov
xor
cmc
cmpsl
mov
jmp
stc
or
xchg
xchg
pop
xor
dec
cli
paddd
cmc
mov
cmpl
dec
ret
push
xchg
jne
jns
mov
shll
cmc
cltd
cmp
stos
sub
in
mov
fdivs
leave
aad
divb
mov
mov
add
gs
das
cli
out
fnsave
cmp
std
inc
mov
mov
inc
xchg
fidivrs
cld
popa
jns
xor
nop
pop
sbb
scas
in
sbb
scas
out
test
lret
inc
jmp
add
inc
in
adc
xchg
mov
fistpll
xchg
in
lods
xor
fidivl
fs
sub
and
add
jne
rclb
popl
mov
pop
mov
push
ja
mov
fwait
push
pop
add
mov
push
xor
mov
call
repz
mov
mov
mov
arpl
mov
clc
push
mov
repz
mov
ret
fldt
popf
je
cmc
xchg
pop
loope
jnp
ss
and
mov
add
insb
and
lcall
jg
mov
icebp
ljmp
add
xor
push
jns
pop
lret
pop
jb
das
jmp
fdivrl
dec
and
adc
jmp
pushf
in
sbb
fcom
push
stos
xchg
sbb
pushf
stos
mov
outsb
mov
nop
lods
sbb
mov
cmc
cmp
mov
jo
iret
bound
xor
mov
xor
xor
push
stc
cltd
scas
stos
adc
lods
call
xchg
xchg
xor
adc
xchg
xor
mov
push
cli
xor
std
repz
mov
in
stos
js
jae
cmp
rorl
pop
sbb
push
add
jge
mov
lahf
fnstenv
das
and
or
in
loope
mov
scas
mov
into
cmp
mov
nop
pop
push
out
or
pop
movsl
jno
and
inc
pop
sub
out
pop
lods
fsts
dec
ret
fldt
ja
jae
xor
xchg
or
sub
xor
pop
mov
push
idiv
adc
dec
mov
rol
cmp
push
cltd
sti
and
jo
sbb
sbb
mov
imul
pop
test
jo
test
pushf
in
cmc
leave
sbb
rcl
cli
add
cmp
xlat
push
adc
add
divl
pushf
cmpb
stos
daa
nop
or
clc
ljmp
and
mov
stos
test
mov
xchg
inc
sahf
dec
test
fucomip
and
dec
cltd
sti
fldl
xor
jae
jno
pop
lock
mov
jle
push
imul
xchg
pop
inc
push
negb
dec
dec
mov
mov
cmc
push
clc
ljmp
xchg
mov
mov
inc
in
mov
ds
out
ret
cmpsl
jmp
imul
sbb
js
cmp
sbb
adc
sub
inc
adc
pusha
sub
or
test
pusha
or
sub
in
mov
add
xchg
xchg
rcr
cmp
fmuls
daa
and
pop
faddl
inc
push
clc
das
sbb
ret
jne
pop
add
sbb
js
rcr
mov
dec
out
xchg
mov
loop
lret
sbb
lds
mov
or
scas
mov
jmp
adc
mov
dec
cltd
popf
loope
add
xchg
adc
std
mov
or
inc
popf
mov
sub
fbld
cmc
ds
fistl
fwait
pop
sub
mov
xchg
insb
lds
fiaddl
sub
sti
int3
aad
mov
aaa
pusha
sbb
dec
inc
xchg
mov
mov
movb
pop
xlat
push
in
mov
cmp
mov
cmc
inc
xchg
pop
ljmp
adc
lret
les
sti
mov
lock
shl
dec
push
stos
jl
pop
mov
dec
shl
outsl
or
std
ss
mov
inc
jp
in
fstps
cwtl
mov
mov
test
in
les
and
popa
sbb
mov
testb
nop
dec
xchg
xchg
pop
inc
stos
imul
repnz
sub
cmp
fisubs
and
mov
dec
sbb
scas
stc
cmp
xor
push
pop
xchg
mov
les
popf
out
mov
sbb
and
fcmovu
aas
mov
es
lcall
test
adc
push
lret
jle
push
lcall
adc
fs
int
xchg
sbb
mov
add
lods
cli
push
or
mov
loopne
arpl
sbb
dec
mov
lods
inc
addb
scas
jmp
inc
popf
jno
mov
push
cs
shll
call
jmp
fcompl
aas
lds
jg
sbb
cmp
inc
push
out
cli
mov
mov
or
xchg
insl
lods
pop
jne
sub
add
sub
fsts
jo
push
daa
sub
add
stos
fsubl
adc
and
test
sbb
xchg
jmp
in
scas
fnstenv
mov
mov
daa
cmp
adc
jp
mov
shrb
call
pop
icebp
cmp
fcoms
pop
jo
jmp
lret
or
or
sub
stos
and
pop
inc
mov
sub
ljmp
mov
loopne
or
sub
cmp
dec
and
icebp
mov
insl
push
sub
cmc
sti
fwait
and
rorb
inc
jecxz
mov
mov
fisubrl
in
jns
adc
sarb
loope
popf
test
sub
push
push
sti
dec
lea
clc
imul
int3
jl
xor
jne
in
sti
test
aam
sub
mov
aad
stos
and
nop
ret
and
test
stos
sbb
sbb
lock
gs
aaa
adc
or
jle
lods
lret
xchg
cmpsl
xchg
outsb
lcall
add
popa
leave
jae
lock
cltd
int
aad
imul
xchg
imul
nop
add
shrl
lret
jecxz
sub
test
push
mov
jl
loope
push
mov
loop
scas
pop
pop
pop
sbb
adc
xor
xor
dec
jbe
cltd
aaa
or
mov
pop
fiaddl
arpl
insl
sbb
scas
pop
xor
outsb
call
mov
aad
adc
cli
sti
jo,pt
xor
push
mov
inc
loop
sbb
ljmp
inc
sub
jmp
cwtl
mov
mov
mov
mov
insb
dec
xor
imul
xchg
or
jle
in
add
push
push
mov
int3
data16
lahf
aam
or
push
xor
rorl
cmpsb
fisttpll
and
mov
xchg
mov
cmpsl
cmp
xorl
cwtl
cltd
mov
sbb
or
lret
movsl
xchg
cmp
sbb
xor
sbb
jmp
add
pop
mov
push
lcall
loopne
gs
jge
stc
or
lods
mov
add
insb
mov
pop
push
adc
addr16
pop
cli
cmc
icebp
sub
enter
xor
loopne
xchg
mov
clc
mov
push
mov
mov
cltd
mov
mov
dec
and
xchg
dec
lahf
lods
in
xor
inc
aad
jno
mov
xchg
sbb
repz
xor
mov
cmpb
push
out
incl
sub
cld
jmp
mov
pop
or
mov
fldl
mov
dec
xchg
popl
cli
andl
rcll
cmp
cmpsl
adc
sbb
cltd
jns
mov
scas
and
xor
inc
mov
pop
mulb
dec
cmp
and
mov
in
pop
sbbb
mov
mov
cmp
mov
leave
cs
data16
pop
mov
dec
push
roll
loope
clc
pop
dec
andl
outsl
dec
clc
sbb
inc
std
mov
cmp
mov
mov
add
pop
cmp
mov
les
mov
or
scas
movsb
subl
loopne
or
aas
or
push
fdivrs
xchg
shrl
add
xor
out
lods
and
clc
add
fisttpl
repz
sub
lea
mov
push
mov
dec
shrl
push
or
in
inc
mov
shr
loopne
lods
jns
incl
test
cmp
jecxz
popa
icebp
ja
pop
popa
lret
sbb
insb
sub
jp
in
adc
testb
call
arpl
dec
lcall
cwtl
jge
jo
xor
or
lock
stc
call
inc
and
in
mov
jg
mov
aaa
jg
or
or
inc
subb
pop
sti
lods
push
lock
pushaw
xor
cmp
xchg
mov
imul
inc
call
aas
xchg
fstl
imul
addr16
test
outsb
adc
sub
dec
stc
mov
pop
sar
push
outsb
xor
xchg
adc
cmpsl
std
xorb
scas
jo
xor
lock
cmpsb
pop
test
jg
or
shl
jnp
sbb
aas
or
or
movsb
dec
enter
jo
repz
push
adc
lcall
call
pushf
mov
sub
push
jo
mov
ficompl
enter
push
dec
cmp
leave
test
shrb
or
mov
push
sti
cwtl
outsb
cmp
jmp
push
mov
stos
sti
jp
inc
jno
cld
cmp
inc
xchg
push
icebp
dec
sbb
sbb
test
fildll
ljmp
call
enter
xchg
jnp
cwtl
mov
push
mov
aas
jbe
test
cmp
xchg
imul
lods
mov
mov
xor
out
push
fmull
xor
lock
push
test
pop
dec
add
cmp
aas
loopne
and
pushf
add
pop
lds
xchg
mov
mov
pop
les
ljmp
pushf
push
or
lcall
xor
sub
cs
out
cwtl
inc
pop
sti
and
push
jecxz
loopne
push
inc
cli
popa
imul
sbb
mov
add
mov
sahf
cli
ss
mov
icebp
pop
mov
outsl
xor
add
test
mov
jo
jl
clc
ficoms
sub
dec
mov
dec
andb
mov
inc
movsb
shlb
xor
lret
mov
jnp
movsl
push
fldt
jg
adc
stos
sub
xchg
imul
xor
jp
sbb
std
fwait
test
lods
notb
inc
or
or
repz
xchg
xchg
sbb
in
loopne
data16
jmp
sti
xor
in
repz
out
mov
push
pop
cs
pop
adc
scas
jmp
xor
and
je
push
ss
sbb
sarl
jae
adc
sbb
rorb
dec
push
mov
in
dec
or
xor
inc
ljmp
das
xabort
push
fisubrl
or
fldenv
mov
jecxz
xor
fcomps
xchg
sbbl
cmp
shrl
jl
rcll
adc
add
xchg
movsl
jne
mov
mov
pop
enter
stos
dec
push
enter
ds
movsl
out
cmpb
in
lahf
dec
jo
cmp
nop
mov
daa
inc
ficoms
ficoms
scas
cwtl
mov
cmpsb
sbb
test
jae
or
and
mov
fiadds
aad
or
jo
fildll
dec
insl
ja
mov
mov
mov
fmul
adc
push
pop
mov
sbb
aas
mov
inc
and
jae
mov
rclb
and
arpl
mov
in
inc
jl
sub
sub
stc
and
jb
sahf
and
stc
sub
mov
mov
dec
out
test
test
jmp
repz
lods
mov
and
sar
or
adc
in
ror
push
mov
push
or
cmp
pop
jmp
fstpl
movsl
sbb
test
pop
mov
sub
xchg
mov
push
xchg
mov
or
dec
loopne
repnz
mov
xchg
cmc
xor
imul
aam
aam
fildll
sbb
mov
arpl
sbb
in
inc
jmp
icebp
in
xor
pop
sbb
jle
sarl
xor
popf
movsl
out
ss
mov
inc
loop
leave
outsb
pop
arpl
inc
xchg
mov
test
test
jae
adc
sbb
jae
push
mulb
dec
aam
push
xor
or
cwtl
bound
jno
jl
mov
jno
inc
xor
in
adc
ret
out
dec
inc
les
ret
loop
inc
cld
mov
clc
jnp
mov
jl
push
mov
jno
in
test
jecxz
stos
fbstp
and
aaa
and
sbb
sbb
and
std
mov
loope
shl
hlt
pop
gs
cmc
ret
clc
sub
fisubrl
lock
fs
xor
lods
fucompp
in
add
adc
mov
inc
stos
fucomip
ret
jg
fdivr
push
jbe
das
aas
push
hlt
icebp
xchg
scas
shll
and
test
push
pop
mov
jecxz
lods
and
or
mov
fnstcw
push
out
test
mov
push
je
out
call
cmp
in
or
push
lds
mov
push
push
push
add
xchg
decl
mov
negl
imul
fsubs
push
scas
adc
negb
jnp
into
pop
mov
mov
ud1
cmp
adc
xlat
jo
adc
sbb
push
adcb
popf
mov
jne
mov
xchg
into
xor
jl
call
scas
push
and
rorl
mov
filds
adc
push
jns
movsb
enter
bound
adc
in
mov
enter
int
cmpsl
rorl
and
mov
aaa
xchg
addr16
test
addr16
es
fwait
sbb
stos
and
xor
rcrb
sbbb
and
out
es
adcl
clc
das
jns
ss
es
jmp
or
mov
and
adc
push
in
int3
fcoml
jnp
in
mov
jmp
aam
cmpsb
dec
int
mov
repnz
int3
and
sbb
movsb
pushf
les
lretw
dec
fstpt
inc
outsb
mov
out
jmp
bound
jecxz
pop
cmpsl
inc
jb
mov
jl
push
push
jecxz
in
in
test
clc
gs
call
pushf
mov
fdivrs
mov
push
adc
add
incl
imul
nop
ss
in
push
and
gs
dec
sarl
std
es
negl
lret
ja
fidivrl
adc
popa
jo
std
push
bound
hlt
dec
mov
jle
push
test
es
inc
lret
cmp
nop
iret
lcall
push
hlt
js
mov
es
test
rcll
ljmp
cmp
jmp
sub
dec
push
das
je
pop
mov
idivl
notl
out
movsl
sbb
push
daa
lock
lock
push
push
mov
xchg
pushl
pop
cld
stc
mov
or
out
pusha
into
idivb
xlat
add
and
mov
jp
cmp
jo
pop
inc
cld
and
fs
jecxz
jmp
xchg
subb
clc
mov
fsubrs
lds
and
cmp
xchg
icebp
xor
ja
adc
shr
mov
flds
andl
in
lock
mov
dec
popf
mov
inc
mov
mov
out
fstpl
insb
jbe
int3
mov
pusha
cwtl
test
clc
sbb
popf
mov
fs
add
rcll
mov
ljmp
inc
gs
sahf
cmp
inc
sub
aaa
mov
es
out
mov
loopne
adcl
mov
pop
daa
dec
pushl
loop
jge
sub
into
andb
idivb
xchg
fs
fnstsw
cmp
inc
xchg
push
hlt
cmp
movsb
imul
adc
incb
inc
rcl
scas
push
nop
push
mov
cmpsl
mov
fcomp
push
outsl
aad
loope
jne
test
in
mov
jmp
mov
pop
out
lods
pop
test
mov
xchg
icebp
push
jecxz
loope
inc
sbb
mov
jo
or
xor
xor
xor
shll
fcmovu
and
pop
xor
push
data16
std
in
jne
ds
inc
scas
and
and
in
pop
dec
movsb
pusha
dec
or
repnz
mov
cli
call
push
sbb
jl
fiadds
jne
mov
js
les
mov
lahf
rorb
mov
pop
mov
aaa
dec
inc
mov
jno
pop
cmp
xor
dec
pusha
push
adc
insb
or
pop
adc
imul
call
mov
lods
push
addr16
lret
and
lods
mov
out
mov
outsl
mov
loop
xor
xor
pop
std
dec
lds
imul
mov
rcr
jo
push
je
daa
sbbl
cmp
aas
roll
mov
mov
lods
sahf
insl
inc
mov
xlat
xor
mov
call
jae
aam
dec
sub
not
out
push
fmuls
iret
sub
and
lret
cmc
aad
in
cmp
icebp
hlt
arpl
push
fs
cmpb
mov
rcrl
stos
sub
hlt
into
jle
in
push
and
imul
mov
jno
mov
in
repnz
mov
inc
jne
rclb
xchg
push
push
pop
push
repnz
and
insl
hlt
push
xchg
jb
in
lcall
adc
gs
inc
inc
xchg
hlt
fs
movsb
leave
xchg
rcrb
pushf
xor
je
push
data16
jo
call
xor
pusha
repnz
cmp
mov
loop
pusha
mov
push
ds
in
xor
xchg
leave
xor
or
dec
sub
movl
dec
sub
mov
push
lcall
in
cmc
fdivs
out
data16
and
jb
pushf
inc
xor
out
sbb
in
jne
sar
negb
mov
int
inc
in
fnsave
hlt
mov
inc
in
mov
aas
sub
mov
adc
pop
insl
inc
adc
jle
inc
divb
mov
jbe
jbe
stos
cs
adc
dec
mov
icebp
imul
dec
mov
xor
dec
fisubrs
xlat
imul
mov
popa
das
loope
cmp
loop
mov
fisttpl
fdivl
jmp
insb
cwtl
cmp
mov
sbb
in
mov
cmp
adc
fsubl
pusha
popf
jmp
jae
in
mov
out
std
add
imul
jle
mov
sbb
mov
cwtl
mov
add
pop
fldl
aad
out
pop
cs
fs
insb
mov
divl
jge
out
fs
sbb
add
push
pop
mov
loope
ds
push
lods
cmp
popa
xchg
popa
xchg
push
movsl
adc
adc
andb
jecxz
outsl
mov
into
dec
cmpsl
jno
test
sti
xchg
cmpsl
frstor
movsl
xchg
adc
xchg
imul
push
cltd
cmp
add
adc
cmp
mov
mov
decb
cmp
mov
bound
sub
xchg
fdivl
scas
xor
jp
push
mov
not
xchg
mov
jp
or
in
scas
lea
stc
repz
sbb
ljmp
lds
mov
movsb
xchg
ja
jge
mov
xchg
in
mov
mov
dec
sti
sub
insb
clc
xchg
std
or
mov
flds
les
loopne
test
or
loop
or
enter
push
xchg
mov
pop
push
push
mov
imul
lock
jo
je
or
lods
rcrb
in
movsl
lahf
mulb
push
push
inc
mov
jne
orl
test
or
dec
imul
ja
inc
mov
xor
lds
js
cmpsl
push
ja
notl
xchg
out
adc
push
or
hlt
nop
jne
inc
pushf
dec
mov
jecxz
mov
push
daa
pusha
adc
test
mov
fldenv
test
cli
js
push
lods
mov
cmp
mov
in
lods
dec
cmp
test
xor
xor
mov
cli
xor
dec
sahf
mov
fmulp
mov
mov
xor
pusha
fsubl
cmp
mov
mov
ss
cs
in
inc
xchg
sub
xchg
pop
cld
js
push
movsl
pop
sbb
inc
push
jle
lret
into
inc
pushf
into
cs
push
lcall
jbe
loop
xorl
hlt
fcoms
pop
or
jmp
adc
out
mov
pop
iret
inc
movsl
call
and
inc
jl
ficompl
pop
mov
xchg
and
pop
xor
loopne
out
popf
inc
inc
loope
mov
cmc
cmpsb
xchg
dec
les
je
inc
stos
std
jle
loop
cmc
or
jae
popa
sub
mov
stos
pop
clc
pop
inc
mov
cmp
xchg
rol
sahf
data16
pusha
sbbb
mov
sbb
dec
test
sub
mov
out
push
je
mulb
mov
stc
push
lods
aad
or
fnstenv
bound
movsl
jmp
mov
cmpsl
xchg
repz
mov
gs
jno
adc
adc
fisubrs
int3
lods
push
sbb
inc
idivb
or
pop
mov
test
arpl
cld
and
into
mov
int
pop
insl
neg
mov
sub
cmp
insl
mov
cmp
jno
imul
fimull
out
jae
pop
sub
insb
jno
popa
sbb
mov
add
mov
jb
adc
popf
mov
mov
int3
mov
pop
xor
xchg
mov
sbb
sbb
int
mul
xchg
xchg
enter
mov
mov
xchg
xor
test
xorb
into
rcll
or
lock
push
enter
subb
rcrl
jge
out
push
dec
push
out
mov
sbb
pop
shrb
sahf
xor
pop
jg
scas
sub
stos
adc
call
mov
fbstp
jle
loopne
cwtl
lret
jbe
mov
idivb
not
mov
jno
movsb
cmp
rcrl
in
inc
icebp
mov
mov
fstl
push
cmp
pop
add
sahf
rol
lea
mov
inc
xor
repnz
hlt
and
cmpsl
fdiv
mov
test
xchg
sbb
jl
lcall
push
fldcw
push
xchg
lea
or
dec
cmpsl
pop
insb
mov
clc
data16
mov
stos
pop
push
lds
xchg
ror
or
roll
shlb
mov
jle
pusha
popf
xchg
mov
shrb
dec
jne
push
cwtl
ror
jne
call
push
sub
adc
idivb
add
lock
xchg
jns
jbe
xor
sub
add
stos
cmp
psllw
adc
dec
cs
inc
pop
cmp
lods
fisttps
je
mov
xchg
cmp
mov
data16
push
and
mov
ds
xchg
and
pop
movb
pushf
out
cmpsb
xchg
jno
shll
scas
inc
jmp
add
fdivs
int
add
fildll
add
sbbb
clc
sub
xchg
jl
xor
adc
push
test
les
push
test
or
pop
cmp
pop
shr
xlat
adc
outsl
xchg
ds
pop
in
in
push
cltd
push
int
add
loop
es
dec
ds
and
out
fsubs
sub
mov
mov
fists
aad
outsb
push
or
cmpsl
test
cmp
pop
inc
sahf
adc
scas
dec
mov
out
dec
int
insb
or
sub
xor
pushf
fistpl
test
dec
adc
jle
mov
dec
xchg
push
add
xlat
jmp
call
lods
fiadds
out
lea
push
iret
dec
test
negl
and
adc
push
outsb
lods
mov
in
pop
call
neg
push
dec
jne
xchg
repnz
push
test
fcompl
xchg
insb
add
scas
push
pop
sub
and
aam
inc
int
andl
jecxz
jmp
out
cmp
movb
std
mov
ds
js
test
xchg
xlat
push
cmp
fnstsw
jl
cs
inc
fisubs
xchg
push
loop
cmpsl
pop
pusha
jbe
sub
in
inc
in
fildll
sbb
jns
and
test
int3
lock
push
mov
or
testb
pop
mov
into
xchg
test
dec
mov
adc
in
mov
or
sbb
push
lcall
paddusw
test
fs
fidivrl
nop
leave
imulb
gs
mov
scas
gs
sub
repnz
lock
inc
shll
mov
push
loopne
dec
adc
enter
mov
mov
fnstsw
addr16
dec
sbb
sub
cmp
and
into
insb
xor
mov
mov
mov
je
xor
adc
inc
pusha
ret
push
cmp
or
dec
mov
lods
mov
arpl
inc
icebp
mov
jns
insl
jne
dec
xchg
xchg
push
inc
addr16
je
insb
sbb
add
loope
inc
jmp
jns
test
push
sbb
xchg
mov
and
mov
mov
or
test
in
cli
and
test
loopne
mov
inc
or
push
outsl
std
neg
jg
sub
fcoml
outsb
call
mov
mov
aam
test
in
adc
sub
lods
mov
jbe
lods
mov
add
out
xor
shl
mov
xchg
or
xor
or
aaa
shrb
mov
jmp
push
int3
jbe
dec
jo
push
leave
pop
lea
jge
jne
and
push
push
leave
nop
out
pop
and
cmp
add
cmp
ret
jo
cwtl
imul
aas
inc
sub
clc
pop
and
in
mov
jle
icebp
loop
xchg
adc
mov
fmull
and
out
sub
xchg
push
adc
add
sub
aam
inc
inc
fcompl
frstor
cltd
sbb
int
leave
xchg
arpl
fstps
stc
inc
cmp
push
or
les
sti
xor
jns
stc
and
jle
aad
add
pop
hlt
loopne
std
mov
add
fsubr
in
adc
pop
mov
xor
and
jmp
test
rcr
scas
sub
in
inc
insl
fsubl
pop
mov
lret
push
les
neg
in
cmp
inc
jmp
sarb
add
cmp
insb
xchg
fcoml
out
test
ret
mov
push
push
xorb
jae
xchg
add
sub
out
add
dec
adc
mov
out
out
clc
push
sub
inc
inc
xor
jle
xor
push
subb
test
jecxz
inc
xchg
nop
enter
bound
add
xchg
pop
jne
movsl
test
sti
jle
pop
cmpl
mov
jns
popf
or
or
bound
inc
push
rcrb
cmp
lea
fnstenv
cld
mov
mov
dec
movsb
push
test
mov
popa
lret
mov
pushf
movsl
xor
aam
test
inc
into
jge
inc
jge
fnstenv
cld
xlat
add
clc
mov
enter
pop
jecxz
mov
mov
mov
popa
imul
fisubl
in
lret
xor
roll
cld
test
jo
push
sub
out
adc
test
arpl
inc
imul
lods
xor
sar
push
add
cmc
xchg
jb
std
push
adc
sbb
mov
sbb
ss
jg
dec
sub
and
mov
cwtl
lds
push
gs
mov
fimuls
mov
mov
adc
sub
push
mov
addr16
cmp
in
shll
std
out
cmpsl
pop
cmp
inc
mov
dec
das
xchg
mov
pop
dec
xor
sub
xchg
mov
repnz
addb
push
and
rcr
sti
int3
movsb
xor
jb
inc
fisubrl
pushaw
std
les
ret
aas
push
out
inc
jmp
out
in
jge
push
fdivr
loope
pop
out
test
sub
jecxz
mov
fst
aas
bound
std
movsb
adc
rcll
scas
sbb
cmp
div
or
bound
clc
xchg
cmp
std
dec
xchg
mov
xor
iret
xor
hlt
ljmp
xor
mov
dec
and
add
or
insl
gs
aam
jno
outsb
repz
jb
mov
in
push
in
dec
pop
sub
rcr
xchg
fstl
cltd
inc
mov
outsb
rcrl
and
arpl
add
jne
jp
loopne
push
ss
push
add
jno
rcl
jge
sub
xchg
xchg
inc
sarl
popa
push
cld
les
cmpsb
lods
lcall
pop
loopne
or
xchg
in
shll
cmpsl
shr
cmp
mov
out
fsubrl
push
sub
or
aaa
fistps
iret
ljmp
push
pop
int3
add
int3
insb
xor
pop
pop
pusha
lahf
ss
dec
dec
sahf
repz
mov
or
mov
iret
mov
in
push
in
mov
sbb
fs
lcall
xchg
push
sub
shll
pushf
adc
push
cmp
pop
in
popf
cli
movsl
inc
out
aam
xor
pop
loopne
fnsave
leave
xor
jecxz
icebp
ret
and
jle
je,pt
test
mov
push
cs
shlb
xchg
jecxz
xchg
ss
idivb
sub
test
xchg
imul
mov
and
jecxz
pop
add
sbb
das
addr16
and
jno
cmp
loopne
insl
mov
in
fs
sub
clc
scas
add
add
movsb
ja
lods
mov
jns
imul
nop
jns
and
aam
or
adc
lock
lret
in
scas
out
sub
int
jns
in
scas
ffree
fildll
sti
fwait
cltd
cmc
sbb
mov
mov
xchg
xor
pop
and
mov
data16
cltd
jbe
call
rclb
movsb
cld
fsts
pop
mull
mov
pop
filds
hlt
stos
gs
test
icebp
hlt
add
int
aaa
hlt
xor
xchg
pop
sub
xchg
in
rolb
jl
popa
call
pop
jo
lods
sbb
iret
or
mov
sarb
adc
xchg
pop
or
xor
cs
cmpsb
clc
pop
inc
jne
xchg
cmp
test
lods
shll
lret
outsb
jo
arpl
xor
addr16
in
ds
imul
mov
jl
sub
cmc
out
and
outsb
popa
push
sub
in
hlt
outsb
out
push
jge
sti
fnstcw
ret
pop
mov
mov
xchg
jne
pop
mov
jge
nop
mov
cmp
data16
mov
jbe
cmp
cmp
in
jno
dec
push
sub
dec
adc
fisubrs
in
mov
jge
ja
cld
jo
aaa
mov
mov
mov
cltd
js
dec
cs
xlat
sub
stc
sub
repnz
pop
xchg
fildl
pop
cmp
test
in
jo
insb
cmp
jg
xchg
test
mov
jo
pop
in
iret
ret
dec
jge
shlb
mov
adc
mov
loopne
mov
jp
roll
lahf
std
aam
mov
inc
popf
mov
in
shll
mov
aam
data16
pop
test
sub
push
push
pop
fidivrl
pop
fistps
dec
in
xchg
dec
jno
cltd
int
fisttps
push
jo
ud2
mov
add
in
ret
mov
xor
push
dec
mov
mov
mov
mov
xlat
popa
aad
mov
test
dec
inc
jne
inc
pop
sbb
sbb
mov
lds
out
add
gs
pop
ret
add
call
lret
adc
repnz
mov
lock
push
sub
xor
mov
outsb
mov
cmp
shl
push
nop
xchg
fdivrl
jb
repnz
mov
in
mov
pop
dec
push
das
stos
in
movsb
adc
jbe
adc
dec
iret
enter
jae
lock
clc
enter
nop
test
xchg
dec
xchg
divb
push
lcall
sbb
pop
sbb
jle
outsb
xor
outsl
movsl
xchg
and
jae
jg
xchg
dec
jecxz
jne
pop
jl
jp
dec
nop
mov
inc
test
sahf
ficoml
jb
jae
clc
pop
sub
or
dec
cmp
cmpsb
inc
lcall
popa
dec
aam
and
stos
insl
adc
fiadds
es
pushf
out
dec
shrb
imul
cwtl
jae
jae
daa
dec
lret
sbb
jno
mov
shl
bound
aam
nop
popf
push
sbb
lods
iretw
push
push
fbstp
sti
out
js
pop
dec
fidivs
in
gs
jl
mov
ljmp
inc
xchg
inc
mov
and
dec
xchg
repnz
ret
xchg
mov
lret
aas
movsl
fsubp
leave
xor
mov
sbbb
adc
leave
subb
movsl
jge
fists
out
imul
mov
mov
mov
and
dec
push
outsb
mov
jmp
mov
aam
mov
xor
out
mov
sarl
test
mov
lods
add
cmp
in
clc
and
xchg
mov
cmp
xchg
xor
cmp
jne
ret
js
ss
lock
sbb
cmp
stc
insb
push
mov
cwtl
jb
pushf
mov
pop
mov
jne
adc
lcall
cmp
dec
jns
mov
test
out
int3
lods
mov
mov
not
pop
jl
out
ja
lcall
xorb
adc
ss
into
xlat
jp
jno
mov
repz
or
dec
adc
adc
fsubl
xlat
mov
hlt
lret
cmp
loopne
add
movsl
popf
xchg
insb
mov
fwait
stos
lods
enter
adc
cli
pop
push
pop
xlat
pop
and
mov
fidivs
and
jbe
fdivs
ds
aad
out
sub
sbb
in
mov
xchg
popa
cmpsl
mov
adcb
or
mov
leave
rcll
nop
sbb
inc
xchg
mov
and
inc
sub
push
fsts
jl
sbb
xchg
sbb
insb
sub
mov
jmp
adc
push
jge
sub
cmpsb
fxch
cli
loop
mov
xchg
cmpsb
aas
xchg
sbb
add
cmp
cmc
mov
mov
test
sbb
lea
test
in
imul
test
fdivs
in
mov
adc
mov
xchg
divl
cmc
ret
imul
pop
xchg
nop
cmpsb
mov
imul
imul
adc
in
fwait
icebp
into
cmp
loop
fbstp
les
dec
xor
cld
add
fs
mov
xor
mov
xchg
sub
clc
xor
mov
hlt
lahf
adc
jmp
in
nop
stc
push
push
test
lods
adc
dec
aam
jne
sub
xor
and
sub
idiv
dec
jmp
push
xor
je
xchg
jl
xchg
or
call
pop
xchg
mov
or
gs
repnz
cmp
push
adc
inc
jnp
fs
mov
add
inc
sahf
fsubp
mov
or
push
push
imull
xrelease
sbb
jmp
mov
add
fdivs
aaa
cli
inc
test
mov
test
pushw
adc
xor
cmp
add
sbb
mov
fs
mov
out
inc
sub
movsb
sarl
js
in
fdivs
push
loopne
jl
hlt
xchg
je
aad
adc
imul
sarl
xchg
ja
inc
out
mov
push
mov
push
and
push
cmp
mov
scas
sub
xor
jecxz
fdivrs
fimuls
es
sub
ljmp
fdivrs
lods
out
ss
insl
stc
outsl
push
inc
clc
clc
or
popf
dec
mov
jns
xchg
hlt
nop
mov
imulb
xor
subb
jmp
test
bnd
cld
push
int3
out
xor
ficoms
mov
dec
shlb
or
cmp
sub
adc
clc
ss
jl
lock
inc
push
sbb
push
lods
and
aad
aad
add
lods
cmpsl
jno
jne
rclb
out
mov
adc
pushf
rclb
xchg
rep
int3
dec
cld
push
data16
sahf
jge
mov
or
out
ljmp
xchg
shlb
into
sub
push
je
daa
mov
addb
fisttpl
aas
in
lcall
mov
xor
push
mov
push
in
xor
adc
imul
int3
sbb
mov
dec
js
sti
fnstenv
data16
orb
fs
loope
lret
popa
xchg
adc
sbb
push
rcrb
imul
jl
cmp
lahf
out
out
ja
lret
dec
cs
jb
clc
cmp
mov
std
cmp
rorl
ror
jno
inc
sub
cmpsl
push
gs
inc
add
mov
insb
push
jmp
sahf
das
mov
add
pop
lods
fisubrl
mov
sub
dec
or
call
xchg
ret
loopne
outsl
test
icebp
pop
out
add
paddw
mov
pop
jbe
sub
cmp
imul
mov
testl
lock
xchg
mov
and
add
push
sbb
mov
xchg
imul
adc
fs
testb
aas
pop
sub
ss
pusha
mov
int
jo
pop
lahf
xor
into
mov
daa
or
mov
leave
xor
movsb
ds
jl
daa
mov
add
popf
and
outsl
std
add
clc
repz
mov
or
xchg
andb
cld
cld
rolb
aam
mov
cwtl
rcrb
sbb
lock
jmp
push
orl
je
xchg
sti
lcall
mov
sub
push
xchg
sarl
test
ja
sbb
lods
femms
imul
test
test
in
gs
in
pop
xchg
movsb
ret
loope
fcompl
adc
cmc
mov
mov
cmp
push
hlt
push
cwtl
clc
leave
and
add
sbb
out
pushf
cmovnp
out
adc
mov
imul
pop
xchg
ret
mov
mov
jp
push
and
jae
inc
divb
pop
adc
je
jge
sub
daa
ret
inc
sub
lret
fs
mov
fdivl
and
divb
int3
fs
fs
mov
mov
rcll
pop
add
mov
adc
push
das
in
or
dec
pop
push
cs
xor
jl
jmp
or
shlb
hlt
sub
dec
fprem
xchg
imul
dec
popf
aas
sar
jge
dec
cld
hlt
add
fisubrs
add
fistpl
add
outsb
pop
and
push
sbbl
lahf
negl
push
inc
jo
int
fsubs
sub
imul
loopne
nop
mov
icebp
je
out
cmpsl
call
cld
jge
mov
loopne
jb
sbb
jne
stc
aaa
dec
push
jge
sbb
cmp
loope
rclb
mov
scas
in
ret
movsl
add
jne
dec
jbe
call
enter
xor
mov
xor
outsl
xchg
sahf
in
add
xchg
imul
or
xchg
ds
mov
mov
mov
lods
adc
inc
sbb
pop
inc
pop
push
push
jb
jle
or
cmpsl
dec
pusha
xchg
and
xchg
dec
jb
hlt
les
mov
adc
loope
repnz
stos
mov
int
cmpsb
adc
xor
lods
push
cmp
mov
inc
pop
sub
out
push
jno
fs
and
xchg
lods
scas
pushf
sbb
inc
dec
movsb
stc
fdivrl
dec
push
sbb
push
hlt
mov
mov
sub
pop
mov
repz
or
fiaddl
cli
fcmove
push
in
fdivl
pop
or
push
push
pop
sti
fnstcw
call
push
scas
shll
cmpsl
sahf
mov
stos
fdivs
and
rclb
pop
inc
call
out
cli
mull
mov
repnz
cltd
out
jge
mov
pusha
arpl
pop
push
cmpsl
lods
cmp
push
mov
cli
push
ret
insb
pop
push
int3
inc
lret
cmc
test
xor
sar
ljmp
xlat
je
shl
mov
jae
movsl
pushf
pop
insl
jo
or
test
mov
fimuls
xchg
inc
insb
std
push
clc
call
or
jp
jo
loopne
and
sbb
fs
cmp
jl
jl
xchg
inc
sbb
cwtl
and
pop
jbe
ljmp
push
call
int3
ss
mov
adc
popa
lea
mov
mov
inc
movsl
xor
or
pop
mov
imul
mov
inc
jg
cmpsl
xor
cmc
in
out
nop
inc
daa
jbe
xor
or
xlat
xor
shlb
ja
add
aad
dec
movsl
mov
push
movsb
mov
loop
mov
insl
sbb
fistpl
xlat
testb
adc
cmp
adc
shll
xor
pop
neg
sti
out
dec
mov
movsl
adc
jmp
mov
sub
test
jp
mov
jge
xchg
mov
js
push
xlat
adc
lods
push
stos
cmp
inc
pop
xchg
lcall
shll
les
orl
aam
dec
fsts
pop
scas
loope
pushf
push
pushf
data16
loop
popa
pushf
push
repnz
fwait
cmpb
and
out
aaa
pop
sub
sub
or
int3
cld
lcall
jge
cwtl
fsubrs
mov
xlat
xchg
repz
fstl
cwtl
mov
mov
pop
adc
mov
dec
and
gs
std
jno
cmc
test
jecxz
js
int3
andb
mov
fisubl
xor
sub
mov
jg
inc
mov
in
lret
mov
ficomps
dec
cmp
cld
add
pusha
maxps
xlat
mov
test
xor
loopne
aam
mov
mov
mov
fsubrl
mov
sbb
stos
mov
fimuls
outsb
mov
clc
jbe
mov
jnp
lock
add
lret
lock
mov
pop
xchg
out
inc
mov
or
jno
cli
inc
mov
adc
ljmp
jbe
jae
icebp
cmp
arpl
inc
xchg
sti
test
mov
or
mov
lods
js
inc
lahf
cli
jne
jmp
jae
mov
pop
sahf
pop
popa
int3
cmp
repz
sti
cwtl
cmp
cmpsb
xchg
dec
cs
dec
stos
ror
adc
out
or
cli
cmp
dec
lods
mov
fsubp
xor
jmp
sbb
movsl
pop
stos
cmp
pushf
flds
fstps
mov
sub
out
push
popa
inc
sahf
hlt
jo
aad
movsl
jle
loop
gs
sub
xchg
les
repz
mov
jno
cld
xor
dec
sub
mov
mov
jp
fmul
push
mov
sub
shlb
arpl
int
cmpsl
data16
fiadds
and
cld
and
iret
xlat
int
pop
ret
mov
or
insl
adc
andb
push
jl
ss
fisttpll
push
cmp
in
cli
xor
inc
and
ljmp
jl
test
test
or
pushf
cmp
pop
mov
inc
incl
jne
in
aaa
sub
in
sbbl
popf
imul
mov
loop
dec
fs
addr16
jmp
jp
dec
xchg
dec
aam
sub
adcl
test
fadds
in
push
test
lea
cmpsb
cmc
cmp
dec
aam
ss
rcll
lock
push
cmp
mov
add
mov
and
adc
hlt
push
dec
pop
ljmp
mov
pop
nop
xlat
fdivl
or
repnz
inc
int3
cmp
rcr
add
add
fdecstp
rclb
filds
clc
ret
fidivl
insb
aam
push
lock
push
jp
push
or
int3
scas
cld
sub
test
fbld
sub
lea
push
sub
test
jno
dec
movsb
add
rcrb
stc
dec
xchg
jge
mov
xchg
mov
mov
jmp
or
and
push
mov
pop
add
adc
int3
mov
addr16
jmp
adc
outsl
mov
rcrl
push
add
mov
in
arpl
stc
add
jge
aad
add
stc
daa
pusha
xchg
fs
popa
inc
notb
adc
in
pop
mov
pop
cld
test
test
imul
xorl
mull
xchg
xchg
hlt
incl
pop
pusha
movsb
insb
pop
xor
jae
jmp
inc
fiaddl
std
loop
out
sbb
loopne
inc
test
out
je
into
push
in
enter
lods
push
lahf
outsb
mov
pushf
lods
shll
outsl
icebp
fmul
and
sub
mov
je
dec
fstpt
inc
jno
mov
incl
mov
sahf
shlb
push
jecxz
mov
mov
fnsave
inc
out
and
iret
xor
dec
fadds
repz
in
jg
out
stos
pop
gs
and
inc
ret
or
je
adc
aam
lea
test
stos
xchg
iret
idivl
out
xchg
js
push
and
testl
lds
or
jmp
cld
and
adc
in
inc
dec
mov
xor
mov
dec
jne
xor
jnp
pusha
shl
addr16
in
mov
jb
cmpb
and
and
aaa
or
pop
mov
in
fsts
xor
cwtl
ja
movsb
in
fistpll
pusha
xor
fdivl
xchg
cwtl
pop
insb
push
hlt
xadd
iret
rcrb
add
outsl
loop
notl
jbe
and
jmp
ja
and
pop
idivb
inc
repnz
es
loop
cmp
jg
mov
std
in
inc
lret
and
mov
pop
adc
decb
fsts
xchg
xchg
pushf
enter
ds
mov
sbb
out
push
mov
xchg
pop
add
xchg
rcl
jp
mov
mov
rorb
loop
push
and
jns
cmp
mov
mov
pushf
sti
orb
fs
push
pop
and
loop
mov
jmp
add
cld
hlt
out
xorb
pop
inc
fadd
mov
js
enter
and
or
and
js
leave
lods
xchg
push
dec
xor
sbbl
pop
stos
xor
cmpsl
cmp
int
dec
repnz
je
vmovdqu
ret
lret
js
ja
je
fxch
push
xchg
negb
push
std
shlb
clc
xor
rcl
xor
aam
and
ja
and
ja
cmp
out
test
dec
or
cmp
jae
pop
mov
out
int
in
enter
jg
or
outsl
dec
pusha
test
dec
je
mov
cmp
movsl
inc
shl
fiaddl
repnz
sbb
addr16
test
mov
pop
les
call
mov
jge
or
push
adc
into
gs
dec
mov
sub
xchg
je
push
dec
inc
rol
jns
jmp
mov
adc
aad
mov
or
sub
dec
jae
inc
mov
loope
or
or
cmp
push
inc
adc
loopne
leave
clc
pop
mov
fcmove
xchg
sar
das
push
imul
fwait
dec
sahf
aam
or
pop
sarb
int3
fcomps
ja
fs
aam
negb
jl
maxps
jns
xor
daa
rcll
add
ja
test
sub
xchg
inc
inc
lock
mov
sub
cmpsl
push
xchg
out
repz
pop
ret
icebp
push
adc
jmp
ds
popa
push
cmpsb
sbb
mov
sarb
cltd
mov
data16
popa
sbb
mov
add
and
mov
daa
std
sbb
dec
les
xlat
push
adc
sbbl
dec
cmp
push
xchg
jbe
xchg
xchg
fs
insl
jae
push
xchg
sub
pop
pusha
scas
adc
cmp
xchg
ret
imul
sbb
dec
pop
aaa
or
add
xor
mov
or
or
andb
sbb
sub
mov
divb
xor
cmp
es
xor
ljmp
mov
jb
mov
pop
xlat
inc
dec
jmp
mov
xchg
in
ljmp
movsb
or
adc
nop
cmc
sahf
cld
cltd
bound
cmp
nop
rcl
testb
xchg
iret
xor
xor
jns
push
sbb
sub
mov
repz
push
imul
js
add
mov
add
push
aad
xchg
popa
cmc
fcmovu
out
lea
incl
push
lahf
pop
fldl
cmp
or
popa
inc
fcoml
dec
or
lret
in
lea
in
paddusw
ficomps
pop
pop
cmp
in
sbb
or
mov
mov
std
sub
stos
mov
aam
mov
dec
xchg
clc
jne
push
sahf
les
aaa
in
and
jns
rcr
dec
das
or
xchg
mov
adc
adcl
push
sar
push
int3
adc
dec
push
aaa
mov
xor
add
cmp
mov
jnp
lods
psubd
loopne
xchg
cs
xchg
cld
xchg
push
fwait
lock
ficoms
insl
mov
sti
das
jo
imul
lock
hlt
nop
sub
cs
sti
cwtl
lret
inc
mov
out
push
cmc
push
stos
loope
call
cmp
jne
mov
xor
inc
push
int3
or
add
sbb
mov
dec
inc
stos
pop
lcall
xlat
fsubrp
pop
mov
inc
pushf
pusha
pop
sbb
cmpsl
push
inc
inc
mov
lods
mov
test
sbb
mov
ja
aas
shll
cmp
fwait
jl
sar
mov
cltd
xor
dec
sub
loop
data16
pop
sub
fs
or
sbb
xor
mov
inc
add
mov
jg
mov
stos
sti
es
cs
mov
mov
hlt
push
adc
fdivl
push
mov
fldcw
jmp
add
cmp
adc
mov
repnz
xchg
jecxz
jl
push
fildll
jl
shl
les
sbb
lods
pop
imul
inc
push
adc
push
and
and
rolb
jp
into
mov
mov
or
and
ljmp
dec
pusha
pop
lahf
cmp
sbb
jle
dec
aam
jg
push
pop
xor
divl
out
xchg
fnstsw
cmp
adc
call
das
aad
dec
in
xor
push
out
call
lret
pop
xchg
xchg
jmp
repnz
inc
mov
loope
inc
lret
pop
xchg
xor
flds
je
scas
sar
sbb
hlt
sti
sbb
insb
and
std
push
mov
ss
repnz
jl
lock
sub
sub
add
idivb
jbe
jne
adc
sbb
je
push
js
popa
mov
push
xor
jae
out
outsl
sub
cltd
xor
xor
or
scas
adc
movsb
mov
push
jae
icebp
ljmp
mov
pop
call
push
shll
test
push
sub
mov
or
ja
out
mov
pop
mov
in
xor
mov
imul
cltd
cmp
je
dec
in
stc
adc
ja
add
mov
sub
arpl
adc
cmc
ret
xor
add
out
mov
or
add
gs
insb
jmp
scas
mov
xchg
arpl
sahf
icebp
cmpsl
or
lock
insl
out
inc
dec
mov
jle
pop
lcall
mov
dec
test
lock
jnp
mov
xchg
out
repz
out
rcr
aaa
iret
in
outsb
sub
push
ret
xchg
data16
in
mov
push
mov
mov
mov
movsb
test
lret
cwtl
cli
xchg
mov
hlt
and
int3
mov
mov
movsb
push
jne
call
jbe
dec
inc
mov
ja
push
rorl
adc
sarl
insl
movsl
mov
fildl
not
cs
out
xor
or
out
leave
adcl
sub
repnz
ljmp
adc
xchg
adc
shlb
outsb
out
loop
fwait
emms
adc
cmc
call
cmpsb
mulb
pop
pop
ret
shld
es
jb
out
test
rclb
xchg
jl
sub
pop
into
add
sub
insb
sti
ret
sub
pop
mov
js
cmp
cld
mov
mov
xor
xchg
idivb
lret
push
mov
test
push
jg
out
aam
mov
into
mov
jb
adc
les
call
cmp
pop
cltd
jl
loopne
or
repz
sub
and
sbb
fs
imul
arpl
sbb
sub
or
movsb
je
out
xchg
aad
jp
pushf
dec
push
jl
enter
push
sub
icebp
jnp
push
mov
aam
in
sub
inc
sbb
jmp
adc
jne
testb
arpl
shlb
dec
repnz
inc
inc
mov
xchg
or
mov
mov
mov
xlat
pop
sub
and
mov
fsub
jno
arpl
and
mov
sub
ds
cli
jge
and
lret
lods
inc
cmp
loopne
lds
mov
mov
fdiv
call
sbb
push
sbb
inc
int
dec
movb
js
xchg
pop
in
cmpsl
aad
and
inc
xchg
xor
add
jmp
cmpsb
sub
inc
lock
faddl
notb
add
cld
push
xchg
mov
jmp
stos
pop
jb
jo
jecxz
pop
push
or
fs
scas
insl
cmpsb
mov
aad
dec
enter
push
xchg
ss
rcl
insb
pop
lret
pushf
xchg
add
shlb
lret
push
mov
dec
sub
xor
mov
mov
mov
test
test
push
fs
inc
or
cmpsb
push
xchg
lock
cltd
xor
inc
sbb
mov
test
mov
inc
sbb
jl
inc
mov
jg
ret
mov
cltd
xlat
aaa
mov
icebp
fs
push
xor
or
jbe
inc
pop
mov
imul
iret
sub
aam
vmwrite
in
out
das
xor
fisubl
outsl
dec
fidivl
sbb
in
cltd
aaa
jo
test
sub
out
test
outsb
pop
mov
lret
mov
or
pushf
test
xor
les
cs
shll
push
push
jo
repnz
add
bound
fs
or
test
mov
test
loopne
hlt
mov
hlt
scas
mov
rolb
sahf
aaa
fmuls
jge
sub
mov
mov
data16
or
or
pop
aad
cs
and
je
incl
lock
push
test
sub
loopne
mov
test
jbe
push
mov
mov
testb
fidivs
inc
lock
int3
push
icebp
test
mov
jbe
pop
les
ret
cmpsl
xchg
repnz
lods
iret
bound
xchg
dec
je
jg
mov
inc
cmp
inc
mov
lods
lret
sub
fistpll
cmpsl
cmp
mov
gs
out
les
lock
inc
mov
stc
sub
mov
outsl
lret
cmp
lock
jnp
jb
insb
mov
clc
pop
pushl
fdivl
shl
mov
icebp
jle
cmpsl
add
out
adc
mov
adc
mov
rcr
push
and
add
jg
push
out
dec
or
xor
subl
sbb
inc
push
xor
je
xor
xchg
daa
int3
iret
mov
inc
lcall
repnz
hlt
movsb
out
xlat
sub
arpl
dec
xchg
jmp
sub
add
mov
cmpb
adc
ljmp
leave
insb
and
or
lret
testb
insb
add
push
loop
ljmp
and
push
hlt
push
std
je
mov
inc
push
psubd
in
xor
sub
push
idivb
rorb
cmp
cmp
std
das
jnp
or
jg
aam
cmp
dec
pop
cmp
xchg
mov
lock
jle
jo
and
sub
stos
or
addb
in
ret
push
xlat
shl
fcoml
xchg
ss
mov
pop
fsubrl
mov
dec
xchg
call
mov
mov
adc
mov
test
scas
stos
xor
inc
stc
enter
sub
es
insb
int
scas
imul
push
cmp
or
loopne
dec
or
fistpl
fucomip
pop
stc
adc
out
and
loopne
adc
loop
ja
sub
or
jne
loope
cld
xchg
sub
movsl
mov
and
dec
ja
std
xchg
shrb
mov
sti
push
stos
fidivrs
mov
mov
gs
and
in
mov
aam
mov
in
mov
fistl
sti
popa
jmp
out
imul
ret
jg
xchg
movsb
mov
mov
xchg
inc
push
jne
push
fistpl
in
mov
mov
dec
cmp
cmp
inc
cmp
in
out
xchg
scas
sbb
sub
add
mov
jo
repnz
xor
pcmpeqw
xor
jle
push
mov
repz
das
add
test
subl
inc
mov
cmp
dec
lock
sbb
jl
adc
rorl
xlat
and
mov
in
movsb
sbbb
addr16
mov
inc
test
in
call
je
push
add
adc
sbb
daa
dec
sub
into
sub
mov
or
ret
rcll
and
adc
insb
rol
cld
xchg
jne
mov
incb
or
jbe
cmpsb
ret
and
daa
mov
out
push
mov
idivb
push
jg
gs
das
push
loope
mov
jae
xor
addr16
dec
cld
xchg
jne
pop
xchg
testl
pop
insb
mov
xlat
lock
gs
loopne
rcll
data16
wrmsr
push
jb
or
insl
jne
into
mov
adc
adc
roll
inc
call
jl
pop
xchg
loope
rolb
mov
ja,pt
mov
cmp
sbb
xchg
ss
mov
cmp
in
sub
aaa
loopne
push
lock
adc
xor
in
or
sar
mov
push
mov
and
shr
sahf
jns
es
inc
es
sub
out
stos
push
push
repnz
out
or
hlt
nop
mov
lods
loop
sub
loopne
mov
mov
pushf
mov
jae
dec
int3
jnp
stc
in
dec
std
je
popa
incb
lock
arpl
mov
lds
fisubl
pop
cpuid
icebp
xchg
jb
sti
lock
mov
dec
rolb
js
mov
scas
cmpsl
pop
lret
jl
adc
sub
push
cli
cltd
xor
cmp
push
xchg
xchg
sub
rcrl
push
mov
cmpsb
add
in
xor
sbb
jne
mov
fdivl
mov
aam
out
and
sahf
mov
cmpsb
mov
adc
jle
jecxz
hlt
in
jmp
outsb
dec
mov
movsl
mull
jecxz
xchg
dec
repnz
test
lret
sub
pop
lret
pop
xor
xchg
insl
xchg
or
hlt
lods
dec
outsl
flds
out
cmp
jns
adc
xchg
rolb
mov
mov
out
test
sti
mov
incl
pop
or
jno
pop
pushf
add
clc
and
cmp
pop
inc
out
jns
xor
iret
adc
cmp
xor
sti
push
orb
fs
aad
jle
lcall
dec
and
adc
push
jmp
daa
jl
mov
std
xchg
xor
xchg
jae
xor
push
lds
pop
cmp
aaa
hlt
push
stos
loope
fs
push
add
gs
leave
nop
jbe
xchg
call
stos
xchg
lcall
movsb
fisubl
into
ret
sahf
pop
push
pusha
andl
sub
fsubrs
pop
push
aad
imul
cld
xchg
add
sbb
mov
or
inc
fisttpll
fisubrs
test
test
jbe
movsl
clc
push
sbb
daa
and
xorb
push
scas
rcrl
je
into
gs
xor
xchg
fiadds
arpl
mulb
xorb
dec
out
ss
jne
in
div
aad
je
xchg
jne
dec
sbb
mov
xor
pop
sub
ja
js
jb
rcrb
lret
fildl
mov
mov
cwtl
cmp
jo
xchg
imul
into
aas
call
and
dec
out
std
int
add
aam
sub
pushf
inc
sub
mov
mov
fxam
and
shll
rorl
dec
mov
retw
dec
ss
cli
ffree
in
inc
or
sbb
jbe
mov
jg
pop
mov
add
push
ss
jle
mov
in
arpl
mov
js
ljmp
repz
lcall
jb
in
jbe
dec
inc
add
xor
push
sar
jp
das
imul
inc
mov
ljmp
arpl
testl
pusha
cli
cmp
inc
add
into
mov
jge
lods
push
mov
jmp
jmp
xor
out
fwait
std
push
sbbl
out
jl
pop
cmp
imul
loope
push
adc
shl
sbb
movb
insb
sub
jnp
fs
and
and
mov
mov
sub
jo
cmpsb
orb
es
aas
sbb
test
pop
sbb
push
nop
ss
mov
dec
test
in
aam
or
arpl
out
mov
insb
imul
das
jb
cmc
cltd
in
sbb
std
xor
and
les
testb
sbb
push
sti
add
fcoml
fnstenv
shll
mov
inc
call
jl
pop
xchg
lcall
xchg
cmp
mov
iret
iret
push
xchg
out
xchg
sbb
or
in
or
pop
or
mov
aaa
jns
in
mov
add
and
push
jmp
xchg
inc
dec
push
lret
icebp
xor
fistpl
cmpsl
call
adc
mov
sahf
loope
rcrl
lods
or
inc
pop
test
repz
pushf
adc
push
in
fistps
sbb
sub
mov
gs
int
mov
adc
dec
cmc
xchg
xchg
push
sub
sbb
pop
or
aam
in
loope
leave
push
pop
xor
jg
aad
pop
inc
cmp
in
clc
lret
xchg
add
sub
cmp
sti
cld
insb
jbe
stos
mov
fcompl
lods
data16
js
cmp
push
stc
sub
inc
jecxz
lret
lcall
push
pop
pop
adc
and
aaa
add
je
std
cmpsb
das
pop
lret
enter
push
out
mov
stos
dec
arpl
xchg
mov
dec
push
jb
fstp
iret
and
jecxz
sbb
orl
jnp
imul
mov
aad
mov
loop
movsb
mov
sub
fistps
bound
in
inc
xchg
fdivl
sbb
add
inc
xchg
in
xlat
push
pop
stos
and
xor
mov
ss
sub
cmp
filds
ret
decb
inc
and
les
gs
clc
push
add
faddl
in
imull
jmp
jb
push
mov
push
cmp
test
pop
xor
aad
cmp
call
loopne
sub
shrb
sbb
mov
sbb
mov
push
and
xchg
in
out
xor
dec
shl
add
pop
sbb
imull
xchg
inc
loop
aas
jb
push
push
sar
popa
add
mov
imul
icebp
movsl
and
add
add
hlt
jae
pop
xlat
sti
movsl
mov
mov
inc
jmp
ds
out
loopne
and
popf
jp
mov
imul
fcompl
outsl
and
mov
fidivs
loope
scas
inc
mov
lods
pushf
scas
std
fsubr
dec
aad
out
cld
sbb
imul
in
clc
mov
xchg
jmp
mov
lods
out
fnstcw
fdivr
mov
iret
stc
insb
jnp
fisubrl
mov
in
sub
pop
js
mov
adc
sbb
arpl
mov
jns
jmp
icebp
aas
sbb
cmpsb
cmp
cwtl
mov
mov
addr16
iret
xor
adc
xlat
cmp
int
movb
jmp
mov
jg
out
vrsqrt28pd
cli
hlt
pop
pop
inc
cli
leave
sub
sbbl
movsb
pop
jecxz
in
fs
pop
jecxz
arpl
dec
dec
mov
in
mov
fstpl
data16
mov
inc
pop
ljmp
cmpsb
mov
insb
les
cmp
mov
sub
sbb
or
jno
jp
mov
cmc
data16
leave
test
push
push
adc
movsl
jmp
aad
xor
mov
xchg
es
cmp
mov
add
movsb
stos
jle
and
js
lea
dec
jb
aam
ljmp
clc
pop
mov
lods
jnp
test
push
and
dec
call
data16
dec
in
stos
ror
xor
sarb
sbb
cmc
jp
orl
dec
push
mov
xlat
gs
mov
dec
popl
xor
jecxz
inc
aaa
movsb
dec
in
mov
pushf
int
adc
rcrl
shlb
adc
push
arpl
mov
dec
popa
or
xor
sub
int3
repz
push
and
mov
in
lcall
sarb
push
int3
pop
inc
mov
ror
sbb
inc
mov
repz
fnstcw
jb
pop
rcrl
fs
ret
xor
in
js
push
mov
mov
in
dec
jmp
mov
aam
les
jp
cmp
out
sub
mov
cmpsb
sub
lahf
push
rcll
mov
cmc
inc
out
jecxz
push
add
scas
icebp
xor
repnz
call
in
ret
fisttpl
push
icebp
and
push
dec
mov
ss
push
mov
sbb
and
lock
mov
nop
mov
jno
sub
xchg
sub
jge
int
iret
je
sub
jp
adc
mov
ficompl
inc
pop
cmp
xor
flds
jnp
cmpsb
shl
adc
and
fwait
xchg
clc
and
ret
push
mov
shll
mov
push
out
in
test
incl
rcll
cs
xor
dec
jecxz
test
hlt
das
ret
notl
aas
jl
in
dec
mov
push
fprem1
push
and
imul
fidivrs
imul
adc
hlt
ret
test
or
xchg
mov
call
out
popa
add
sub
mov
jecxz
mov
cmp
jl
out
mov
push
arpl
cli
arpl
inc
fnsave
js
test
out
pop
mov
aad
orl
mov
negb
push
xor
iret
jns
fistpll
fabs
pop
iret
dec
incl
inc
data16
aaa
test
popa
mov
mov
out
mov
xor
sti
push
decb
sbb
add
xchg
cmp
inc
outsb
imul
dec
fcomps
mov
jl
adc
dec
jae
icebp
mov
mov
lcall
mov
add
fldcw
inc
test
adc
adc
mov
movsl
jne
pusha
jmp
dec
jns
js
mov
or
xor
dec
cmp
je
mov
mov
inc
into
xor
ret
dec
mov
jp
mov
push
cmp
ficomps
sbb
cld
fwait
push
test
insl
mov
in
mov
test
xchg
sub
sub
negl
or
push
jbe
scas
test
outsb
mov
fists
ja
push
jbe
pop
xchg
hlt
movsl
fldl
popa
jb
in
icebp
aaa
adc
ss
jg
cmp
loopne
push
mov
mov
clc
mov
jl
in
nop
fstps
mov
je
loope
xchg
repz
and
pop
xchg
rcr
test
lock
idivb
cmpl
sbb
gs
test
cmp
cli
and
sbb
nop
negb
rclb
lea
ja
adc
inc
mov
mov
popf
cmp
push
mov
or
inc
ja
adc
mov
cmpl
cli
mov
jbe
xchg
push
jbe
jo
push
xchg
cltd
nop
mov
mov
mov
mov
loopne
bound
mov
mov
xor
mov
jmp
push
jnp
pushf
push
movl
into
sub
cmp
mov
nop
notb
shl
leave
jo
repnz
xlat
clc
mov
mov
cmp
lds
cld
xchg
xchg
jge
lds
mov
push
jno
test
push
mov
push
out
jle
call
nop
pop
sti
lcall
pop
lds
das
imul
hlt
add
sub
jns
std
inc
add
sub
fmul
add
adc
and
mov
adc
hlt
cmp
mov
dec
jge
jg
fwait
in
das
out
repz
mov
mov
sti
cmpsb
in
aam
mov
jne
inc
cmp
mov
add
sahf
js
sub
sub
getsec
push
cmp
test
lock
fwait
sub
xchg
jle
into
mov
outsl
mov
int3
test
xchg
mov
mov
pop
fldenv
xlat
sub
cwtl
adc
cmp
or
lock
out
lock
jo
pop
adc
loop
aaa
add
shll
insb
shrl
call
int
mov
push
lock
inc
js
mov
scas
loope
mov
stc
and
loope
cmc
push
pop
shlb
xchg
pop
loope
cmp
in
or
lds
cwtl
fldt
jecxz
jno
adc
xlat
idivb
mov
dec
iret
js
jb
stc
fisubrs
imul
roll
hlt
js
jo
push
jl
sub
cmp
jmp
out
imulb
loope
pop
test
jl
xchg
adc
sub
stos
int
cld
mov
jo
fistps
sub
mov
inc
xchg
std
dec
sub
mov
nop
jb
loop
insl
enter
je
jno
cmpsl
pop
insl
lahf
loopne
adc
inc
imull
cli
scas
push
mov
xchg
pop
loop
sbb
mov
int
fstpt
pop
loope
lods
nop
loop
jle
or
pop
adc
test
sub
ja
and
push
out
fisubrs
jbe
inc
pop
pop
pushf
xchg
out
push
je
pop
popa
ss
ss
or
xchg
stos
cs
mov
xorb
lock
test
mov
aaa
loop
aad
sbb
push
mov
dec
mov
paddusb
movsl
pop
xchg
jg
push
xchg
aas
int3
call
rcrl
clc
ficoms
mov
sbb
xchg
jmp
fbstp
mov
and
push
out
push
jo
mov
in
ss
sbb
jbe
in
lock
pop
test
pop
jbe
xchg
xchg
push
jp
ljmp
fnstcw
adc
aas
std
shl
int
cld
or
pushf
into
mov
sub
es
push
jp
xor
lds
je
cmp
mov
fcomi
xor
and
lret
aam
or
push
or
shlb
scas
mov
jle
call
mov
sbb
lock
push
repnz
push
dec
adc
outsl
fildl
rclb
pop
lock
pop
clc
inc
jne
sahf
inc
out
push
test
dec
lret
push
push
pop
mov
pop
jmp
sub
mov
or
into
cmp
sbb
in
xchg
xchg
or
iret
inc
lock
dec
or
sbb
and
test
xor
loopne
xor
add
jne
cwtl
shll
and
push
mov
pop
xchg
out
cld
ja
pusha
push
movsb
ljmp
jge
add
or
js
xchg
pop
cld
stos
xor
pushf
mov
pop
divl
inc
push
loopne
xchg
pop
add
inc
or
rcr
mov
push
imul
jno
jle
inc
cltd
sar
ss
or
out
inc
inc
sbb
mov
cltd
pop
mov
xchg
xchg
xor
fs
mov
insb
popa
pop
loop
cld
cmp
loopne
aam
mov
or
loope
out
mov
and
mov
imul
jle
gs
mov
push
mov
mov
push
inc
mov
jmp
aam
addr16
in
outsl
cmp
sahf
insl
icebp
sbb
cmp
xchg
in
push
insb
movsl
mov
les
repz
mov
sbb
std
sub
xlat
pop
lods
aam
into
adc
in
aas
ds
mov
xlat
in
enter
mov
pop
loop
pushf
aad
sbb
movsl
mov
mov
in
xchg
xchg
xlat
sub
xchg
xchg
dec
pop
cwtl
lds
pushf
fdivr
sti
aad
dec
ss
push
or
hlt
mov
insb
and
and
or
xchg
ja
jns
test
sub
push
inc
jmp
jns
fdivl
shrb
xor
jge
aam
mov
mov
pop
jne
popa
push
sbb
sarl
fnsave
jl
stos
test
fnsave
dec
imul
xor
rcl
in
mov
repz
mov
insb
imul
mov
mov
mov
push
lock
fbstp
sar
sti
lahf
movsl
mov
cwtl
xlat
mov
out
xor
in
mov
leave
in
loopne
lock
leave
jnp
in
or
imul
mov
enter
imul
imul
xorb
sbb
adc
push
ret
push
mov
jo
popf
clc
out
push
mov
bswap
das
mov
js
dec
mov
or
xlat
mov
cmp
xchg
pop
or
sbb
cmp
jae
test
es
cld
lds
or
xchg
push
ret
and
cld
mov
rolb
inc
cli
add
mulb
insb
rorb
pusha
fsubp
pop
jp
subl
mov
js
mov
lret
dec
push
sbb
cs
ljmp
xchg
push
movsl
bound
into
jge
nop
inc
xchg
and
cmpb
jmp
pop
mov
add
seta
ja
inc
mov
mov
inc
dec
push
int3
pop
cmp
dec
sub
xchg
cltd
rol
adc
mov
add
sub
ret
xlat
fimull
xlat
mov
test
into
and
xchg
mov
movsl
int
aas
and
mov
push
movb
test
lahf
icebp
clc
adc
rorb
jecxz
jno
in
gs
out
or
fwait
mov
sbb
cmpsb
add
or
shll
adc
in
imul
push
xchg
js
xor
xchg
sub
cltd
fildll
xchg
and
and
icebp
adc
imul
mov
aam
push
sub
pop
jmp
mov
xlat
xchg
mov
packssdw
outsl
insb
mov
adcb
pushf
out
test
adc
loopne
jne
out
cmp
scas
jbe
add
cld
add
stc
or
push
mov
xchg
loope
in
mov
fdivl
pop
das
fnstsw
push
ss
rcrb
mov
add
test
or
mov
movsb
xor
cmp
call
pop
pop
subl
mov
je
std
outsl
mov
imull
sub
add
lods
hlt
test
les
iret
push
cmpsl
jns
sbb
add
jae
gs
or
and
push
lock
test
jnp
iret
jbe
pop
decb
aam
mov
xchg
in
push
mov
fisubl
dec
dec
xchg
enter
addl
mov
icebp
sbb
inc
mov
cmpsb
xor
idivl
lock
sub
outsb
lds
mov
jecxz
fwait
stos
push
xor
les
dec
aaa
mov
and
imul
mov
leave
daa
xor
setp
mov
jecxz
push
adc
jae
adc
jae
cmp
mov
mov
test
jns
in
dec
jge
xchg
les
in
insl
bound
pop
inc
idiv
xor
in
rcll
sbb
int
das
and
push
add
insb
aas
dec
xchg
add
ret
stc
sub
xchg
repz
testl
outsl
xor
mov
adc
inc
in
add
loop
scas
cmp
inc
sub
cmp
clc
icebp
xchg
hlt
mov
in
xchg
sbb
pop
hlt
dec
push
adc
jge
xor
cmp
mov
and
inc
sbb
fldenv
rcrl
hlt
pop
cwtl
ljmp
jmp
fnsave
daa
or
fnstsw
inc
cld
xchg
or
xchg
adc
mov
dec
mov
pcmpeqb
inc
popa
mov
adc
mov
and
insl
addr16
or
jecxz
jo,pt
jo
jno
loop
pushf
idivb
stc
jbe
pop
add
out
dec
in
push
in
in
mov
cmp
inc
push
xlat
mov
jne
stc
shrb
std
loope
mov
pop
jnp
xor
jb
je
pusha
jl
fisttpl
movsb
cltd
or
aad
jbe
fdivs
mov
inc
jl
lret
lret
outsl
shll
test
adc
push
sbb
cmp
fnsave
negl
inc
dec
fiadds
incb
adc
cmpsl
adc
push
sbb
divb
pop
pop
and
add
inc
adc
in
sub
cld
movsl
jno
sarb
rorb
xchg
jae
test
in
inc
stos
clc
pop
or
je
xchg
xor
sbb
in
sahf
sbb
jbe
repz
adc
inc
dec
loopne
jbe
mov
push
xchg
jecxz
and
mov
test
mov
fisttps
mov
inc
mov
sbb
jle
cmova
and
icebp
jae
cmpl
cld
sbb
add
fbld
or
hlt
mov
mov
div
hlt
es
xchg
mov
inc
push
dec
push
or
add
ds
jo
movsb
jae
jp
shlb
cmpsl
gs
js
push
bound
ret
call
scas
cli
roll
xchg
xchg
rcrb
or
inc
or
int3
pop
sahf
ja
fildl
gs
mov
es
jbe
insb
xor
popf
mov
fildll
notb
cli
jo
data16
aaa
in
add
test
push
imull
push
xor
icebp
mov
out
ficomps
jb
ja
cs
push
sbb
cmpsl
jno
xor
and
xor
mov
mov
loope
scas
mov
cmpsl
mov
loop
xor
inc
jmp
sbb
push
movsb
sarb
push
movsb
test
inc
adc
xchg
rcll
or
inc
outsl
pop
mov
aaa
xchg
inc
test
sarl
repnz
data16
insl
pop
mov
jb
pop
loop
mov
bound
movsl
and
jne
lea
sbb
sbb
dec
icebp
mov
insl
jno
sarb
icebp
fsubl
btc
or
nop
cmp
stos
aad
sub
aas
cwtl
in
adc
jecxz
outsb
enter
mov
loopne
repz
out
cmp
push
sbb
out
test
lahf
mov
cld
aaa
mov
iret
cmp
push
call
or
sarb
mov
rcrl
mov
shl
jb
in
lcall
jge
pop
jns
arpl
lret
cld
fwait
cmc
inc
leave
xor
outsl
cld
test
jmp
cmp
cmp
sub
aam
in
xlat
aad
ds
pop
ret
push
mov
mov
nop
bound
or
mov
adc
ljmp
fiaddl
pop
pop
dec
arpl
in
or
into
dec
xor
not
jne
je
jne
sbb
add
sarl
mov
mov
push
lods
mov
hlt
inc
and
arpl
push
pop
inc
add
repz
in
inc
add
inc
ret
adc
gs
xor
loope
push
cmp
jnp
dec
call
mov
in
and
inc
aad
cmpsl
repz
int3
rorb
mov
iret
pop
test
mov
add
int
out
or
popf
rolb
movsb
enter
add
cmp
in
scas
mov
sub
xchg
add
adc
inc
or
mov
imul
test
xchg
fsub
ret
mov
adc
and
jne
loop
and
nop
mov
fnstsw
mov
mov
mov
jl
fs
and
cmpsl
faddl
inc
xor
mov
ja
xchg
shl
in
sub
cmc
lret
dec
jb
fstps
add
popf
in
aas
mov
fcoml
xlat
cmp
pop
xor
mov
mov
cmpsb
out
mov
lds
mov
call
push
or
pop
pop
push
gs
add
mov
cmp
jbe
es
adc
sahf
int
pop
scas
jg
mov
stos
fnstcw
outsb
jge
mull
or
inc
sub
jb
insb
loop
push
out
sbb
mov
fcoms
shl
lods
push
ret
push
jno
adc
or
lcall
insb
xchg
out
imul
loopne
pop
loopne
xor
data16
daa
ja
or
jo
insl
pop
sarb
lahf
pop
shll
arpl
pop
inc
fidivs
bound
stos
rorl
mov
insb
sub
or
jp
sti
push
fwait
xchg
jae
add
jnp
push
and
pusha
lret
mov
sbb
test
mov
std
cwtl
aam
cmp
xchg
sub
xor
aam
stos
or
or
jne
jae
outsb
iret
cwtl
sub
das
mov
sub
mov
imull
mov
xor
ds
add
in
ret
mov
rclb
aad
stos
xchg
stos
mov
jne
repnz
jl,pn
jno
cmpsb
clc
cmpsb
loop
jb
sub
inc
repz
adc
popf
mov
cmp
lret
lods
rcrb
and
adc
roll
ret
mov
push
mov
adc
push
mov
shrb
pop
and
mov
iret
push
adc
addl
repnz
push
in
fdiv
mov
push
or
mov
sahf
icebp
jno
and
pop
jle
loope
mov
mov
cmc
fiaddl
outsb
push
fimuls
pop
std
jbe
inc
enter
faddp
rcrl
pop
push
and
idivl
mov
lods
in
mov
and
cmpsb
adc
jns
cmp
add
push
push
clc
stos
cmp
stc
test
pop
jge
inc
mov
out
mov
sub
clc
fwait
popa
loopne
or
outsb
pop
mov
and
sti
push
mov
cmpl
sub
mov
fildl
xchg
jmp
sbb
cs
popa
in
iret
mov
inc
push
fs
nopl
mov
out
int3
leave
cld
push
xor
fwait
ret
mov
sub
dec
std
and
and
inc
ss
popl
loop
fwait
xchg
push
test
xor
cld
push
adcl
in
fmuls
jae
push
scas
lock
out
mov
mov
push
mov
mov
inc
dec
cmp
repz
push
fsubs
fsubl
in
cmp
pop
adc
loope,pn
mov
hlt
sahf
ja
test
mov
mov
stc
xchg
dec
int
outsb
addr16
cmpsl
gs
mov
xlat
das
xchg
shl
in
jne
cld
pop
lea
or
xchg
and
jb
and
xor
xlat
push
loop
mov
fildll
xchg
fwait
shl
das
jp,pt
jbe
push
stos
nop
xchg
mov
clc
call
mov
mov
mov
mov
cmp
sub
push
inc
or
xor
xor
idiv
jns
mov
sti
or
aad
push
dec
imul
bnd
fisubrl
iret
mov
test
jge
lds
jns
xor
sahf
dec
or
mov
sti
mov
mov
hlt
lds
dec
jne
sbb
sahf
cmp
jne
and
mov
ret
mov
out
mov
aam
popa
pop
call
push
je
jle
push
not
cmpsb
adc
jne
mov
mov
xchg
sbb
and
dec
fs
mov
push
test
push
cmp
push
sbb
out
pop
push
imul
sub
xlat
mov
or
outsl
xor
jge
int3
iret
jle
sarb
call
adcb
aaa
fdivl
or
out
cltd
out
xlat
popf
cmp
arpl
jge
cmp
inc
decl
fwait
push
adcb
faddl
rclb
out
push
rcr
iret
ret
in
pushf
jb
push
enter
shl
add
mov
jle
inc
shlb
jo
xchg
ljmp
mov
pop
push
add
xor
es
cld
icebp
popa
fucomi
add
pop
push
iret
sbb
out
mov
mov
push
and
adc
mov
jbe,pn
into
xchg
lea
outsl
jecxz
mov
pop
data16
nop
xchg
int
mov
xlat
mov
mov
divl
cmc
cwtl
movsb
lahf
sti
ret
dec
xchg
sbb
sbb
inc
icebp
arpl
adc
lods
lods
outsb
addr16
xor
test
mov
sbb
or
adc
mov
mov
xchg
jle
call
mov
inc
ljmp
imul
sub
xor
nop
dec
push
adc
jnp
pop
mov
stos
xor
add
sub
or
stos
imul
cmpsl
dec
inc
adc
jle
je
and
rcr
out
mov
jnp
cmp
mov
out
dec
xor
pop
ficoms
in
or
mov
lahf
shlb
outsb
mov
ja
mov
mov
mov
mov
pusha
enter
xchg
das
jns
pushf
enter
xchg
ja
pop
xchg
or
jmp
dec
jno
cmp
in
xor
jb
in
push
rclb
push
jle
imul
fmull
add
vaddps
ljmp
loop
repz
jle
bnd
outsl
add
out
xor
pusha
out
pop
inc
mov
shlb
or
mov
push
add
sub
je
sub
jne
loopne
cli
adc
sbb
scas
xor
xor
xor
xchg
iret
bound
jb
in
inc
insb
test
ljmp
icebp
pop
jo,pt
sbb
inc
sub
int
pop
xor
imul
insl
dec
cwtl
inc
out
inc
outsb
cld
jns
shlb
mov
movsb
lock
rclb
std
int
and
das
xchg
mov
push
cld
aam
movsb
icebp
adcl
sbb
jmp
aaa
mov
and
and
icebp
lahf
inc
test
enter
mov
jecxz
shl
popa
mov
addr16
testb
ds
mov
stos
in
cli
lds
xor
jmp
mov
fdivl
shll
inc
out
lahf
pop
jge
dec
test
or
shll
xchg
pushf
jbe
imul
xchg
jge
outsb
inc
sbb
push
lock
cmc
out
repz
mov
or
ljmp
mov
pop
mov
psubusw
cs
mov
daa
stc
pop
xlat
or
das
xor
scas
mov
fcom
mov
mov
loop
ficompl
gs
jbe
jmp
mov
in
subl
adc
cwtl
xor
cmp
fdivrl
mov
inc
and
repz
in
jl
sti
cmp
mov
popa
mov
js
aam
out
loopne
cltd
jne
fimuls
jl
xlat
fbld
test
cmpsl
mov
js
or
aam
jbe
jbe
lods
jae
mov
scas
xor
inc
adc
test
sahf
data16
pop
cltd
mov
cltd
fists
pop
shll
out
pop
dec
pop
mov
cmp
cmp
pop
ret
sbb
sbbb
adc
enter
xor
push
cmp
cmp
xchg
jnp
mov
jno
adc
dec
and
ja
aaa
xchg
ret
xchg
dec
push
cmp
push
fisubs
jp
dec
cmpsl
lock
xchg
push
adc
or
addl
fdivrp
sbb
sub
test
insb
mov
sub
sahf
in
fldenv
mov
icebp
jecxz
les
rcrl
pop
out
cli
dec
aaa
imul
add
in
adc
in
pop
xchg
imul
stos
fs
es
mov
enter
nop
iret
int3
dec
sti
fstl
sub
adc
and
mov
dec
std
mov
xchg
sbb
in
stc
mov
jp
in
loopne
les
lock
mov
mov
into
loop
sub
jecxz
in
int3
ds
push
sti
cltd
out
in
cmc
mov
xor
push
cmpl
fsubrl
icebp
xchg
push
movl
mov
div
enter
mov
ret
dec
adc
fstpt
je
rcr
mov
insl
xor
pop
ljmp
iret
mov
mov
loop
mov
lea
dec
push
into
shlb
into
xor
push
pushf
lods
out
jp
xlat
adc
jp
mov
lret
mov
and
push
mov
xchg
js
mov
outsl
je
incb
pop
cmp
lds
inc
ja
lea
data16
negl
les
inc
jecxz
sti
scas
fwait
ret
lahf
cmp
or
mov
jne
int
insl
popf
jnp
repnz
insb
loop
daa
sbb
lea
ficompl
xor
clc
mov
cmp
loopne
lock
in
push
arpl
pop
jno
fs
xlat
fadd
pop
inc
movsl
pop
sub
lcall
mov
cmc
mov
pop
icebp
inc
and
fcmovu
add
inc
mov
ja
out
out
movsl
cmp
and
mov
dec
sbb
push
mov
pop
cli
imul
repnz
shrb
les
lock
xchg
mov
xchg
in
xchg
push
ret
sub
xchg
and
aaa
scas
jl
rcrb
ss
iret
pop
repnz
jmp
jbe
les
sbb
pop
xor
sar
jmp
cmc
sub
and
push
lds
mov
pushf
int
insb
mov
lods
sub
popf
lods
jecxz
adc
cld
ljmp
jl
fwait
push
or
movsl
inc
xlat
jbe
mov
rcl
mov
out
repnz
push
xor
inc
xchg
mov
and
cld
sbb
and
adc
mov
xor
lock
sbb
cmc
in
xchg
inc
cmc
xchg
and
mov
data16
in
daa
ss
xchg
jbe
clc
aam
pop
lahf
inc
fwait
add
lcall
es
mov
popa
addr16
and
shrl
xor
loop
test
out
jbe
enter
push
in
rcrb
and
jecxz
xlat
cltd
xchg
scas
sbb
cmpsb
and
fcomps
out
jne
or
enter
leave
ja
out
aam
and
dec
push
cmp
add
test
mov
pop
jne
out
or
sahf
mov
in
xor
hlt
cld
inc
pop
mov
shll
pushf
pop
jne
and
movsl
subb
fistpll
cwtl
mov
mov
cmp
std
adc
pop
lea
xlat
sub
mov
test
pop
add
adc
fstps
test
flds
sub
mov
push
mov
inc
cli
and
mov
mov
outsb
popf
cs
dec
xlat
repnz
in
xor
mov
dec
out
mov
sbb
jecxz
lcall
bound
sub
enter
add
add
in
fisubl
xchg
sarb
insb
int3
xor
add
xchg
repz
aam
faddp
add
fisttpll
xor
sub
adc
es
mov
xor
in
popf
xchg
in
xor
rcr
test
aad
dec
xchg
out
add
mov
push
mov
sub
mov
rcr
movsl
lods
mull
hlt
xchg
mov
ja
ljmp
mov
out
mov
fwait
pop
cld
xlat
loopne
daa
inc
pop
jns
mov
jns
cltd
jbe
or
xchg
jo
pop
gs
sub
cltd
popf
icebp
xor
sub
cwtl
insl
pop
sub
or
xchg
shrb
scas
inc
mov
fstpt
mov
lock
mull
pop
test
cs
imulb
mov
stos
jg
xor
mov
out
nop
movsb
or
into
jns
dec
pop
sahf
mov
jl
sub
decb
pop
mov
imul
jns
es
in
mov
push
xchg
mov
jmp
lock
idivl
pop
dec
dec
pop
inc
sub
idivl
pop
repz
in
or
hlt
jecxz
cmp
rcrb
sahf
xchg
fstpl
push
adc
jne
and
mov
fwait
pop
std
outsb
jmp
insb
jle
jecxz
sbb
push
push
pop
mov
repnz
test
add
movsb
push
push
rcll
mov
dec
ret
mov
int
sub
and
aaa
addr16
out
lock
popa
add
jmp
in
xchg
mov
loopne
mov
xchg
gs
xor
cmc
in
std
mov
xchg
mov
dec
xchg
fbstp
xchg
mov
sarl
add
dec
inc
daa
pop
pop
adc
insb
jne
mov
in
ja
and
xor
movsl
adc
dec
cli
mov
sub
call
in
pop
adc
int3
dec
pop
leave
mull
dec
pusha
push
push
lret
xchg
xor
ret
imul
cmc
fiaddl
cmp
lret
mov
mov
jne
or
jo
je
call
jbe
lock
pop
or
outsb
xchg
jns
dec
push
or
jge
in
pop
addr16
mov
and
cs
out
sbbl
cs
repz
push
les
fisubrs
fstpt
pminsw
in
mov
popf
daa
movsb
clc
addr16
pop
mov
jg
cld
int
roll
movsb
out
mov
sarl
jle
jno
push
inc
aad
insb
inc
fistpll
rclb
pop
mov
mov
and
loop
les
sub
lret
mov
lret
mov
adc
mov
xchg
insb
mov
mov
fs
jb
xor
out
rcrb
cmp
in
pop
mov
sub
sbb
mov
pop
mov
pop
jnp
push
dec
dec
dec
fs
in
fwait
push
shl
jmp
cmp
cmp
cmp
insb
mov
shlb
mov
inc
mov
mov
fs
push
sarb
xor
jge
push
sub
insb
idiv
jle
fstl
lahf
sub
bound
testb
aam
das
push
loope
mov
fsubl
mov
or
in
leave
aaa
mov
js
les
xchg
jp
aas
es
int3
and
push
in
adc
xor
xlat
fcomps
sti
xchg
test
loopne
mov
push
pop
jno
pop
push
icebp
xor
dec
andb
in
ja
xorl
xchg
cmp
fdivr
daa
xchg
jmp
xchg
cmp
lock
adc
ljmp
dec
enter
cli
addr16
add
out
inc
gs
inc
mov
imul
jbe
jl
mov
push
aam
movsb
imul
fsubp
std
ret
in
or
cmp
xchg
insb
icebp
iretw
and
ret
hlt
popa
lock
xchg
scas
inc
in
fsubrp
pushf
les
stc
aam
fxch
es
pop
and
xchg
outsl
fdivrl
jo
mov
cmp
pop
in
add
mov
sbb
and
mov
out
jle
outsl
dec
add
cmp
imul
add
xor
push
cmp
xor
cmp
cmp
cs
outsl
jbe
imul
push
repz
sbb
jmp
adc
outsb
enter
dec
sti
cmpsb
and
mov
pusha
aam
test
sub
inc
nop
pop
inc
pusha
shl
scas
sub
xchg
add
mov
mov
cltd
inc
mov
add
loopne
add
jmp
cmp
subb
loop
cmc
enter
in
lret
movsl
push
jne
lods
mov
leave
mov
daa
in
mov
mov
pop
lcall
sahf
mov
das
jmp
pop
sub
xchg
pop
xchg
lods
mov
pop
mov
and
jg
clc
mov
sub
loop
mov
leave
add
shr
lret
xor
inc
jnp
test
fdivp
je
fidivs
sbb
cwtl
stos
jl
add
inc
hlt
pop
pop
rcr
les
jbe
cmpsl
jl
xchg
aam
cmpsb
cli
sysenter
subb
mov
in
and
fistpl
mov
xchg
sbb
jle
or
pop
hlt
je
dec
or
rorb
jl
popa
les
pop
jo
lock
dec
xchg
xchg
and
cmp
in
leave
pop
inc
popf
jb
mov
out
ficoml
adc
xchg
jne
jo
adc
sub
sub
fisubs
mov
in
pusha
xchg
mov
scas
loopne
push
loopne
mov
fmul
xlat
xor
shrl
in
adc
test
ss
push
and
aam
popf
mov
imulb
inc
or
in
int
mov
mov
inc
pop
in
cli
fdiv
push
sub
mov
jl
scas
test
jno
xor
dec
mov
repz
sarb
incl
mov
jbe
in
fisubs
dec
ljmp
stos
mov
mov
cld
mov
sbbb
mov
lcall
xor
inc
cltd
push
test
rcrb
mov
xchg
int3
stc
pop
mov
idivb
sbb
fbld
push
in
mulb
add
insb
mov
xor
dec
mov
cwtl
jecxz
xchg
fs
mov
sbb
repz
mov
pop
addr16
cltd
adc
or
jecxz
nop
inc
jecxz
cld
mov
mov
shll
lock
ja
cmp
push
ja
xor
xchg
jno
aaa
in
push
iret
cmp
test
adc
out
cmpsb
mov
fs
repz
mov
rcrb
mov
xor
leave
aaa
cli
push
xchg
xchg
sub
push
loop
repnz
push
fdivrl
mov
adc
in
lret
push
fcoms
xchg
xchg
stos
pop
out
xchg
push
xor
roll
loop
xor
gs
pop
add
mov
pop
stos
fisttpl
fst
xor
cmp
jmp
mulb
pop
imul
subb
mov
std
adc
lahf
and
xor
or
and
push
imul
mov
shr
enter
mov
push
xor
lds
in
add
add
int
imul
cmpsb
xor
jae
loop
xorb
cmc
mov
dec
jmp
out
cmp
push
rolb
loop
sbb
inc
xchg
pop
cmpl
icebp
int3
adc
enter
lret
in
andb
lret
jae
pusha
and
insl
stos
pop
bnd
sub
movsl
or
push
leave
sub
jl
test
xor
pop
lahf
sbb
pusha
add
idivb
rcrb
cltd
jl
ret
leave
fsubr
movsl
popf
inc
lods
mov
xlat
loop
push
fiadds
xchg
push
ja
xor
jl
pop
pop
pop
lock
xor
dec
jne
mov
test
lock
popa
mov
xchg
cmp
inc
imul
je
es
xor
pop
mov
shrb
lret
cld
out
clc
xor
jecxz,pt
test
clc
xor
xchg
andb
sahf
pushf
fmull
lret
inc
lret
adc
xchg
xchg
mov
xor
roll
mov
push
dec
fsubl
fistl
pop
mov
mov
add
push
repnz
arpl
cmp
lds
gs
cmp
push
jb
inc
mov
and
push
dec
in
cli
jb
je
push
add
popa
mov
mov
pop
fwait
xor
xor
ss
je
das
and
rclb
and
add
push
int3
lods
testb
cwtl
pushf
test
dec
dec
mov
jne
jae
sbb
lods
outsl
std
sbb
mull
idivl
inc
xor
bnd
mov
xor
aad
lret
in
aaa
inc
xor
daa
sub
leave
dec
xchg
ja
inc
enter
mov
call
pop
out
subb
push
sahf
imul
stos
pop
shll
jne
inc
jp
adc
cmp
test
clc
jmp
mov
jge
popa
xchg
mov
sub
mov
lcall
ficompl
inc
popa
xor
jno
out
and
clc
cli
cmp
call
xchg
inc
ret
aas
inc
repz
xor
xchg
mov
fs
mov
shlb
je
in
mov
xchg
daa
or
cmpsb
dec
int
hlt
cmp
pop
outsl
push
jle
sub
pop
cmp
mov
roll
or
dec
addl
and
jne
call
inc
push
cltd
hlt
jle
shll
xor
popa
jnp,pt
in
frstor
cmp
or
sbb
jp
inc
cmp
dec
inc
cld
push
jl
jb
cmp
pop
call
push
xor
cld
add
lods
mov
xchg
cwtl
ret
or
stos
call
mov
lahf
xor
in
out
jbe
scas
je
xchg
inc
pop
xor
sbb
sub
loope
aaa
call
pop
mov
inc
daa
push
jmp
xor
fstps
in
mov
icebp
hlt
loope
ljmp
aas
mov
add
add
orl
pop
out
loop
jl
push
test
jnp
test
in
push
xor
ficoml
sti
cmp
int
inc
and
cmp
repnz
adc
in
adc
shl
arpl
push
pop
mov
dec
aas
lods
sarb
and
mov
jg
adc
incb
dec
inc
sbb
lea
icebp
cs
ret
xchg
out
mov
mov
and
pop
ret
fdivs
arpl
imul
jb
test
jo
into
dec
mov
idivb
sbb
mov
xchg
cmp
xchg
adc
js
xor
les
ja
fcomi
or
aam
mov
les
pop
insb
int3
add
mov
xor
scas
inc
xlat
jnp
adc
lret
and
rorb
inc
js
push
dec
std
sbb
xor
test
hlt
outsl
mov
insl
call
xor
push
push
dec
mov
bnd
jecxz
stos
pop
jle
mov
inc
mov
mov
cmp
pop
xlat
cmp
test
xorb
push
push
cmp
inc
xchg
pop
add
insl
aam
fildl
jne
fldl
jmp
xchg
xchg
lods
xchg
int
testl
cmp
inc
push
mov
sub
out
shl
je
leave
mov
iret
mov
mov
adc
icebp
add
mull
and
leave
mov
sbb
lahf
mov
sbb
sti
out
test
pop
jnp
in
icebp
pop
mov
mov
test
push
xchg
jno
xchg
and
aam
scas
in
call
push
adc
movsb
jne
xchg
cmc
ds
cmp
jnp
cmp
jae
jge
lods
mov
cmp
clc
insb
int
jmp
inc
sbb
fs
faddl
inc
jb
push
and
scas
push
mov
jno
negl
mov
in
sbb
test
xor
rol
or
aas
dec
lods
or
mov
cmp
mov
stos
mov
adc
xor
fdivrs
push
fcmove
aad
cmp
push
shlb
jbe
mov
pop
out
or
shr
xor
stos
cmpsb
sub
xchg
mov
add
jno
mov
lea
je
jecxz
or
lods
or
push
mov
lods
adc
inc
aas
inc
jbe
mov
cmp
jl
pop
push
push
lock
jge
jp
not
sbb
push
cs
sbb
jnp
fsts
lods
pop
adc
insb
inc
loopne
jle
fstps
dec
inc
sarb
adc
fwait
xor
mov
push
outsb
mov
jb
sub
call
decl
and
xchg
stos
adc
mov
aam
ss
sub
loop
shrl
faddl
rcrb
xor
pop
stos
sub
insl
shll
mov
mov
xlat
in
xor
out
icebp
push
repz
into
popf
push
jmp
mov
hlt
or
scas
xor
subb
and
int3
jg
xchg
mov
pop
xchg
mulb
or
les
pop
push
je
xor
divl
scas
xor
je
outsb
sub
mov
mov
push
jp
adcl
daa
data16
mov
mov
int3
pusha
seta
repz
xchg
imul
xchg
dec
stos
pop
jns
mov
xor
pusha
popf
push
ss
push
subb
mov
inc
fadds
outsl
add
pusha
test
push
mov
in
lods
lock
bound
rcrl
xchg
sbb
dec
fsub
cmc
cmpsl
divb
add
notl
mov
cmp
pop
add
sub
nop
inc
mov
xchg
mov
mov
cmp
jno
sub
jmp
out
dec
cmpsl
cmpsb
rcl
and
aam
das
sub
sub
negb
mov
fsubl
enter
push
pusha
xchg
jbe
outsb
push
lock
daa
icebp
mov
stos
nop
inc
mov
pop
out
jne
jp
test
pusha
enter
pop
mov
cld
int
jmp
ficoms
pop
into
jns
pushf
cwtl
sub
cld
adc
jmp
aaa
gs
fdiv
and
shrb
xor
sarb
ret
mov
scas
data16
stc
jp
xor
xchg
cltd
jnp
rcll
sbb
sbb
lods
cmc
push
mov
mov
push
sub
fidivl
fcoms
das
cld
sbb
ret
jmp
inc
xchg
fldt
push
out
dec
aam
push
rol
jmp
sbb
ret
xchg
mov
cmpsl
mov
scas
and
push
ljmp
idiv
jns
mov
lea
bound
in
icebp
loope
rolb
imul
add
sahf
jge
cmpsl
rolb
lds
push
pop
test
ljmp
pshufw
add
out
jo
lods
lret
nop
mov
xchg
sbb
jo
xor
jmp
push
and
int3
xchg
inc
loop
jbe
adc
add
fidivrs
mov
hlt
lahf
xchg
mov
mov
push
adc
jae
inc
lods
ret
stc
sub
jo
mov
or
sbb
add
shl
ljmp
ss
shlb
jns
insl
je
mov
mov
cmpb
dec
lock
imul
in
or
ss
mov
loope
or
or
dec
inc
xlat
pop
lcall
xor
aas
dec
ljmp
mov
xchg
dec
dec
jb
cmp
ljmp
dec
pop
and
shlb
dec
pusha
ss
xlat
xchg
fistpll
popa
mov
inc
jae
ljmp
das
mov
adc
ljmp
stos
jecxz
notb
pop
idiv
xlat
add
cli
jb
sahf
aad
lcall
adc
push
popa
adc
sub
pop
es
dec
jne
jae
imul
pop
aam
cmp
inc
jg
mov
or
ds
rorb
lds
push
flds
push
test
cmp
call
mov
mov
inc
stos
in
jecxz
or
cs
jecxz
scas
loopne
out
pop
inc
xchg
out
inc
nop
data16
push
xlat
outsb
fistps
mov
vmwrite
rolb
test
popf
lea
jnp
hlt
rcrb
dec
test
stos
imul
cmp
cmp
xlat
cmp
sahf
sub
mov
xor
add
cld
mov
mov
push
or
mov
adc
add
imul
movsl
push
ret
cltd
dec
adc
cmp
and
mov
mov
jns
pop
lods
and
adc
into
sbb
scas
shll
in
outsb
ret
stos
ljmp
mov
or
orb
lret
push
je
iret
adc
or
mov
sti
jp
xchg
repnz
jl
movsl
mov
ret
mov
test
stos
nop
cli
mov
xor
mov
pushf
pop
mov
rcr
sub
lcall
fsts
sahf
push
dec
jmp
pop
pushf
mov
ss
cmp
ficoml
fsubs
jne
mov
add
cs
and
aas
dec
sbb
loop
adc
add
ds
adc
fidivl
pushf
in
ds
dec
loope
lds
fwait
add
sbb
nop
cwtl
pop
stos
mov
dec
out
inc
stos
dec
das
jo
inc
repnz
das
mov
cmc
lods
orb
sahf
xchg
addl
les
mov
cwtl
fcoms
ffreep
imul
ret
xor
aad
xorb
cmp
into
xchg
xor
loop
and
in
pop
int3
ds
jae
add
call
sti
shll
push
inc
addr16
js
sbb
fwait
pop
loop
test
fcompl
divb
adc
mov
mov
push
xchg
push
cwtl
xor
stos
mov
jle
or
mov
test
in
addr16
int3
mov
in
jno
dec
les
jne
pushf
push
hlt
xchg
lcall
add
cmpsl
std
shlb
sti
div
or
adc
xchg
pop
lahf
jae
mov
lods
mov
int
in
jo
loopne
mov
mov
div
add
aad
rcrl
in
sbb
mov
jne
jle
or
mov
enter
inc
dec
mov
mov
push
lahf
in
mov
push
and
sahf
pop
decb
push
xchg
cmp
aaa
xor
add
jl
les
lret
push
mov
call
cmp
pop
pushf
mov
cmp
daa
lds
inc
in
inc
push
jns
nop
pushf
lock
test
xchg
shll
xor
jne
mov
ljmp
lcall
push
sub
cli
ss
push
fwait
and
sti
sbb
mov
dec
std
cmp
add
dec
shll
pushf
jnp
xlat
stos
sbb
jae
xchg
or
push
aaa
jp
add
fiadds
sbb
aaa
sarb
and
cmp
daa
lret
call
pop
push
movsl
lahf
xor
or
test
stos
in
mov
add
mov
imull
repnz
xchg
outsl
in
stc
stos
push
stc
insb
ds
sub
push
mov
and
icebp
clc
cmp
sub
addl
add
add
and
add
in
in
inc
cmp
inc
jns
in
out
inc
mov
sbb
out
sbbb
and
fisubl
mov
arpl
sub
call
and
sbb
adc
pop
ss
mov
adc
and
clc
add
xchg
loop
and
loope
psubsw
push
pop
shlb
loopne
mov
test
ja
ss
hlt
loopne
sbb
fcmovu
jae
nop
add
out
pop
mov
decb
xchg
mov
lods
jo
inc
stos
test
rolb
or
addr16
fstpt
xchg
xor
dec
push
daa
pop
xchg
jmp
out
insl
xor
js
inc
lods
lret
xchg
mov
movsb
in
xchg
adc
cli
sbb
mov
addr16
popf
enter
aaa
cmp
push
arpl
std
dec
cld
movsb
fs
inc
in
enter
nop
mov
mov
nop
enter
pusha
lock
adcb
lcall
pop
cmp
pop
adc
in
pop
dec
cmp
in
sti
test
push
mov
push
sbb
ljmp
dec
es
sbb
cmp
popa
outsb
je
mov
or
pusha
in
jmp
jmp
scas
mov
pusha
std
sahf
mov
cld
adc
add
es
inc
aam
notl
adc
std
xor
idivb
mov
inc
mov
cmp
inc
mov
movsl
mov
jbe
or
pop
icebp
mov
int
push
pop
in
lahf
cmp
add
hlt
mov
pop
iret
pushf
aas
push
insb
fs
enter
cmc
nop
std
fs
cwtl
push
fistl
gs
and
xchg
sbb
pusha
popa
mov
aaa
dec
repnz
adc
aam
mov
aam
insb
dec
mov
dec
pop
xor
xlat
and
adc
push
cwtl
das
dec
les
daa
imul
xchg
mov
inc
lcall
hlt
mov
pop
nop
fs
aaa
pop
outsb
mov
je
pop
jp
test
adcb
sub
xchg
mov
push
scas
inc
cmp
xchg
imul
jg
lods
lods
ror
mov
xchg
mov
inc
dec
test
out
add
inc
notl
lcall
lret
enter
inc
sbb
cli
dec
cmp
inc
sub
mov
mov
add
movsb
ficoml
imulb
or
and
jg
mov
pop
rcrb
push
dec
adc
xlat
add
xor
je
cmpsl
lcall
std
jne
jl
test
pop
lods
pop
pop
push
icebp
call
xor
decl
fdivrs
sbb
test
jbe
std
pop
dec
out
mov
ljmp
fdivrs
jne
push
inc
mov
pop
repnz
and
fcmovu
xor
pop
pop
fcomp
shrl
cmpsb
jns
dec
push
js
or
test
sbb
mov
sub
cs
dec
cmpsb
dec
cmpsb
je
push
inc
jle
inc
xchg
xchg
mov
jns
in
mov
leave
adc
data16
lods
push
mov
loope
mov
mov
popf
jl
je
xchg
xor
adcb
pusha
adc
repz
pop
cs
popl
mov
jge
shr
push
jae
loope
cmpsb
push
into
in
pop
mov
ja
enter
inc
jnp
inc
xchg
call
inc
inc
xor
mov
xchg
jo
mov
test
shrl
pop
xor
jo
shl
scas
or
fadd
out
orb
stos
loope
popf
syscall
fs
popf
xchg
fidivrl
decb
xchg
test
dec
mov
clc
iret
and
pop
aam
inc
push
xor
push
rcl
out
insb
je
xor
xor
lea
push
rcr
loop
pusha
movsl
and
push
int
movsb
xlat
icebp
jbe
leave
lods
scas
mov
pop
xorl
cmp
pop
adc
stc
xor
fsub
mov
xchg
out
and
andb
xor
dec
cmp
xchg
loope
faddl
xchg
out
jbe
adc
ror
inc
icebp
push
pop
in
adc
in
test
ljmp
ds
mov
icebp
ficomps
adc
std
lea
jb
inc
push
inc
xchg
dec
stos
cmc
or
mov
int3
in
add
scas
repnz
cmc
ret
js
ret
xchg
repz
mov
mov
ret
fwait
mov
mov
mul
das
mov
in
sbb
shrl
fstps
lods
repnz
or
and
sbb
add
cmpsb
cmp
je
ljmp
loop
ror
cmp
mov
movsb
sahf
inc
add
mov
add
jne
popf
and
inc
sub
fcompl
adc
sti
sbb
adc
es
hlt
sbb
outsl
sbb
jp
gs
pop
mov
scas
hlt
xlat
jge
add
lds
stc
add
push
fs
jb
pop
and
fcoml
sbb
pop
inc
mov
repz
test
jl
mov
jo
xor
mov
pop
mov
insb
xchg
clc
test
mov
xchg
mov
scas
mov
adc
das
jp
hlt
sub
outsb
popf
ds
int3
xor
popf
movsl
push
cmp
adc
test
ja
or
sub
mov
sarb
cmpsb
adc
jmp
sarl
xchg
dec
cli
jae
jecxz
mov
std
jnp
xor
das
inc
dec
push
mov
loop
mov
sahf
mov
adc
xchg
scas
xor
scas
dec
inc
icebp
pop
adc
add
add
out
jae
sub
scas
mov
jg
jne
jno
jo
icebp
mov
movsl
pop
cld
mov
les
xor
lret
sbb
push
jb,pt
test
test
mov
jb
mov
fdivrs
or
cmp
cld
xchg
xchg
cwtl
repz
fistpll
mov
inc
jp
jns
fdivs
imul
daa
xchg
cmp
pop
pusha
das
jp
xchg
movb
pop
fldl
inc
sbb
mov
ss
sbb
lcall
adc
int
mov
dec
repnz
mov
imul
push
xchg
clc
inc
hlt
insl
scas
cld
xchg
or
mov
pop
into
enter
sbb
mov
sar
aas
jge,pn
mov
fwait
push
cmp
sbbb
cbtw
imul
aad
dec
divl
jmp
stos
fcoms
cmp
cmp
dec
sub
gs
sbb
ret
xor
mov
dec
xchg
and
scas
les
fisubl
push
mov
lds
adc
push
lret
divl
pop
iret
sub
ljmp
shll
addr16
popa
push
pop
adc
mov
xor
xchg
mov
pusha
mov
fs
out
je
inc
bound
je
sbb
mov
jle
xchg
pusha
ficomps
cmp
mov
int3
mov
xabort
rcrb
enter
jge
sbb
fdivrp
pop
rorb
xchg
imul
jbe
lcallw
fwait
in
pop
clc
push
je
inc
leave
fmuls
rcrl
dec
cmp
push
js
stos
cmp
mov
insb
jmp
sub
xchg
push
mov
adc
mov
mov
inc
cwtl
mov
mov
mov
stos
stc
cs
fldcw
sub
push
pusha
out
lock
faddl
and
adc
pop
fbstp
lea
push
mov
das
lds
lcall
adc
push
int3
pop
cmpb
cli
leave
sub
xor
ljmp
pop
cmpsb
rcrl
sbb
inc
shll
fucomi
fs
pop
jb
sub
pusha
xchg
cmp
cmp
or
mov
inc
scas
inc
jo
sub
xchg
lock
sub
imul
leave
dec
xchg
cs
hlt
xchg
jg
enter
iret
inc
adc
sub
jae
xor
add
lods
loop
push
test
inc
pop
pop
stos
test
loopne
testb
repz
jb
inc
xor
or
mov
jg
push
std
sub
test
clc
cmpsl
insl
rolb
aam
and
movsb
in
gs
mov
lea
cld
aad
leave
push
sub
push
sbb
jle
fistpl
jl
scas
add
or
pop
daa
sbb
rorb
test
movsb
jne
imul
adc
les
pop
and
jne
aad
lahf
repnz
jbe
cld
lret
popa
adc
dec
stc
sbbl
mov
inc
shll
jl
hlt
mov
sbb
sub
push
mov
fsubrl
sbb
call
sub
fdivs
jnp
sbb
xor
push
push
jno
imul
sarb
scas
ljmp
das
cld
insb
mov
loop
inc
outsl
cs
rcll
in
outsl
mov
out
out
daa
inc
push
cmc
adc
mov
inc
hlt
lds
cld
sbb
cmp
xchg
or
je
frstor
sbb
push
pop
jg
mov
push
xchg
mov
xor
roll
and
dec
mov
aaa
dec
mov
mov
pop
mov
cmp
sub
loopne
lock
nop
lcall
pop
pop
jle
push
xchg
mov
std
pop
mov
ljmp
inc
test
fstps
in
cmp
mov
daa
scas
adc
stos
in
imul
ljmp
add
xchg
pop
imul
add
ds
ror
outsb
into
in
repz
inc
pushf
scas
shrb
sarb
inc
outsl
loope
jb
xor
adc
xchg
mov
in
jp
iret
call
adc
inc
dec
xchg
mov
fbstp
test
xchg
popf
cmp
push
and
aam
push
pop
or
inc
fmul
orps
mov
scas
rorl
lock
and
add
fisubl
sbb
fistl
incl
repnz
dec
inc
and
xchg
test
leave
clc
pop
test
mov
jbe
repnz
mov
jmp
leave
xor
mov
cmp
sarb
pop
lahf
xor
inc
xlat
or
sub
dec
repnz
in
or
cmpsb
jg
int
jg
daa
and
lds
xor
into
sarb
cmp
addr16
pop
xchg
and
xor
cmpsl
ss
cmpsb
shl
lcall
sti
mov
out
mov
cmc
xor
or
lret
cmc
push
in
add
cmc
cmp
ss
fidivs
xor
in
test
add
jne
shrl
xchg
push
nop
jmp
lock
negl
mov
imul
adc
es
or
je
pop
jnp
jp
fstl
inc
push
adc
in
jle
cmc
xchg
int
mov
hlt
mov
scas
sub
outsb
ret
mov
fcmovne
ds
aad
iret
out
das
pusha
or
outsb
cmp
js
dec
enter
aad
test
cmp
jae
fstl
and
testl
xor
hlt
int3
in
and
shrl
xchg
push
pushf
adc
cltd
add
jmp
pop
faddl
xlat
sbb
jnp
outsl
test
ss
xchg
rolb
push
dec
xor
or
mov
and
fsub
hlt
dec
ret
xchg
jmp
in
or
lods
scas
xor
xor
mov
call
adc
sbb
ffreep
insb
ret
ljmp
aas
imull
ja
scas
lds
fidivs
bound
inc
mov
sbb
push
dec
jle
dec
add
jns
imul
lcall
fiaddl
inc
jmp
iret
jmp
aaa
xchg
cmp
push
arpl
jo
and
jo
mov
fstl
and
bound
pop
push
lods
rclb
in
clc
jmp
adc
cld
out
test
outsl
cltd
mov
in
das
test
enter
iret
xchg
add
jbe
idiv
cmp
inc
imul
sub
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
cmp
xlat
pop
sbb
and
hlt
xor
cmc
jg
add
test
outsl
inc
out
mov
mov
test
in
cli
arpl
lret
ja
enter
insl
cli
les
fistpll
rcrb
fcoms
push
pop
jecxz
mov
test
outsl
adc
mov
adc
adc
jnp
add
cli
jg
lods
xchg
pushf
shl
pop
out
stos
popf
in
lea
in
fdivl
sub
arpl
jnp
movl
loop
xor
ljmp
int3
dec
ret
xchg
paddd
mov
adc
and
xlat
sub
xor
push
arpl
in
js
mov
xor
js
push
hlt
dec
adc
xchg
push
adc
xor
lds
mov
mov
test
sub
lock
fdivl
and
roll
xor
xchg
jmp
js
lods
cmp
loope
testb
ja
jbe
lret
repnz
mov
enter
cmp
cld
repz
in
rolb
sub
cmp
mov
mov
sub
sub
pop
inc
insl
pop
push
push
push
push
fbld
jno
in
sbb
or
dec
rcll
mov
imul
jle
addr16
pop
nop
xchg
loopne
test
mov
cmp
dec
iret
add
ja
mov
repnz
lret
mov
call
imul
cmp
xchg
mov
pusha
movsl
lahf
je
pop
leave
stos
cmp
pop
sub
lock
pop
push
insb
lahf
xchg
adc
jge
jb
ret
pop
daa
stc
filds
stos
lods
push
bound
ljmp
cmpsb
jmp
cmp
mov
js
mov
shll
dec
lea
sub
xchg
xor
mov
data16
out
popf
pop
mov
insb
lahf
mov
mov
repnz
scas
lret
inc
popa
cmp
inc
push
andl
xor
fs
imul
mov
icebp
movsl
dec
push
push
shrl
jo
push
xchg
cli
push
clc
sbb
xor
ret
xor
mov
pinsrw
add
and
rorl
cwtl
shlb
lea
std
roll
cmpsb
fildll
icebp
test
loopne
std
icebp
into
out
mov
aad
and
push
in
imul
shll
mov
movl
jns
pop
and
xchg
es
pop
frstor
jle
xchg
jnp
mov
add
mov
jge
pop
push
hlt
or
lret
mov
jnp
jne
inc
xor
sbb
adc
pop
nop
mull
int
and
add
or
mov
lods
add
stos
fnstsw
test
mov
push
jnp
add
test
lods
out
mov
jno
jno
xchg
inc
fidivl
out
cmp
shrl
mov
xorl
call
es
mov
or
cmpsb
or
dec
stos
out
and
test
sub
mov
mov
pop
jle
pop
push
push
pop
cwtl
push
push
and
xchg
xchg
enter
scas
scas
push
shl
push
sub
add
cli
test
inc
jnp
pop
push
and
test
cmp
int3
lahf
ja
in
aam
icebp
sub
mov
or
mov
outsl
imul
ret
inc
adc
sbb
mov
and
loop
mov
dec
push
fistpl
ljmp
xor
or
pop
lret
inc
arpl
xchg
subb
add
addr16
jbe
adc
and
jl
inc
into
pushf
icebp
mov
mov
lock
out
xchg
or
pop
jmp
setne
in
lods
or
aaa
adc
add
out
mov
test
and
or
lcall
or
sub
pop
or
or
or
idivl
movsb
dec
mov
enter
lods
gs
inc
je
call
loope
push
jge
sub
jo
pop
int
test
jb
mov
inc
mov
pop
mov
push
mov
cmp
cmp
pop
push
push
xor
cwtl
fmul
push
out
push
repz
not
fwait
xchg
out
fsub
sbb
sbb
lcall
dec
jp
aas
ja
lea
dec
lods
rol
push
in
cmp
sub
mov
xor
test
dec
or
ljmp
les
popa
mov
ss
jne
cmp
sahf
xchg
or
clc
and
xchg
je
outsb
jl
dec
add
stos
in
arpl
pop
add
stos
and
xor
dec
neg
imul
cmp
ds
roll
aam
fdivl
and
movsl
leave
cld
pusha
imul
mov
xchg
clc
push
cli
jge
mov
xchg
js
ljmp
jl
hlt
xor
fucomp
and
jmp
fnstsw
addr16
xchg
pop
ja
add
lret
jnp
mov
or
pop
dec
sub
lcall
push
in
xchg
xor
test
ret
out
stos
xlat
jmp
push
sbb
mov
stos
rcrb
outsl
jo
sbb
jne
adc
dec
push
call
mov
mov
enter
shl
jb
aas
mov
jno
int3
pop
mov
push
xchg
jmp
dec
jp
ss
add
mov
enter
mov
ss
mov
scas
or
dec
addr16
popf
shl
dec
push
cmp
cld
cmp
inc
scas
cli
pop
xlat
repz
xor
divb
mov
mov
idiv
pusha
hlt
daa
adc
lock
push
orl
rorb
jmp
les
push
hlt
sbb
mov
stc
inc
cmp
inc
jbe
dec
cmpsb
dec
inc
int
das
and
dec
test
test
rcrl
pop
cld
mov
aas
loope
mov
mov
lcall
dec
outsb
insl
fmul
fcomps
bound
mov
jbe
aas
xlat
jns
inc
clc
adc
jge
ss
dec
jb
pop
jo
data16
pop
fwait
xlat
js
push
sub
push
sub
xlat
popa
cmp
pop
aaa
jl
push
mov
and
shl
adc
in
out
add
rcll
dec
jae
in
ret
adc
mov
js
and
stos
and
dec
jne
mov
pop
or
or
mov
inc
int3
cmp
sbb
andb
dec
out
repz
movb
lea
addr16
adc
adc
adc
sbbb
mov
pop
inc
insl
mov
hlt
movsb
xchg
cmpsl
mov
xchg
fists
cli
mov
lods
jge
fcoms
lcall
inc
js
xchg
mov
inc
jbe
movl
stc
mov
mov
aas
jne
sbb
pop
mov
adc
mov
jge
lea
mov
stos
jp
stos
mov
lock
data16
repnz
cmp
addl
aam
test
lds
scas
sub
or
inc
inc
dec
inc
nop
jle
mov
dec
test
or
cmp
pop
pushf
push
xchg
sub
fisubl
in
cli
mov
sahf
mov
into
call
aad
nop
ja
push
jle
mov
scas
xchg
dec
call
pop
inc
pushf
mov
cltd
add
bound
push
js
ss
movsl
pop
mov
inc
cmp
gs
aad
jge
push
repz
fs
iret
jle
jb
mov
call
loop
mov
mov
clc
test
jp
mov
mull
xor
bound
adc
subb
popa
sbb
jge
cmpsb
imul
sbb
mov
bound
imul
aaa
adc
ja
enter
and
pusha
push
jle
cltd
mov
mov
xchg
mov
xor
jno
lahf
jne
push
mov
adc
xor
mov
aam
adc
mov
mov
and
mov
and
xchg
js
cmp
mov
inc
mov
cs
std
and
jmp
dec
je
leave
or
iret
cmp
mov
popw
int3
nop
clc
sbb
sub
xlat
push
aaa
pushf
mov
data16
adcb
out
xor
sub
int
shll
xchg
mov
repz
jmp
push
lods
xchg
jo
outsb
mov
test
inc
inc
add
fwait
cli
xchg
repnz
aas
adc
push
fdivs
or
dec
out
add
fstl
out
lret
movsl
insl
cmp
jnp
arpl
and
push
mov
inc
loope
outsb
jmp
dec
xchg
pop
xor
scas
inc
sahf
or
pop
jae
jl
mov
into
sar
cld
pop
xchg
loopne
rclb
push
add
les
iret
mov
int3
int
fsubl
loope
fistpll
xchg
pop
jb
aas
data16
jns
insl
std
divb
jo
rolb
insb
or
in
xor
gs
jno
pushf
and
ds
fucomi
jae
int
pop
adc
rolb
mov
adc
sbb
sbb
cmpsl
test
or
push
and
adc
adc
pop
test
lahf
mov
test
and
imul
sub
cmpb
scas
rcrb
sub
dec
sub
inc
xchg
sbb
adc
ja
xor
mov
rcrb
jmp
push
xorb
imul
xlat
mov
cmp
sbbb
and
push
js
std
icebp
in
mov
or
cld
jge
pushf
add
xor
repz
iret
and
cmp
cmp
pop
das
imul
xchg
push
or
xor
lea
xchg
dec
shrl
mov
sub
xchg
and
push
aas
fstl
fistps
push
mov
je
inc
push
jae
popa
cmp
adc
daa
ljmp
sbb
cmc
push
ja
xchg
adc
pop
insl
mov
int3
or
inc
sbb
mov
testl
enter
lea
sub
pusha
loop
jnp
jne
push
ss
push
xlat
roll
lock
pop
push
hlt
mov
dec
mov
por
scas
flds
or
stos
xor
sbb
mov
sbb
push
and
pop
out
stc
xor
icebp
adc
push
adc
jne
xor
scas
add
inc
add
icebp
cmp
sarl
lret
and
loopne
fwait
iret
lret
pop
pop
hlt
mov
adc
arpl
jle
dec
xor
je
xchg
movsl
fs
xor
dec
push
jecxz
push
mov
cmp
jmp
pop
out
xchg
cmp
inc
shr
daa
mov
mov
xor
sub
imul
jo
jbe
add
xchg
and
xchg
mov
in
rcrl
aad
jb
fistpl
push
push
mov
inc
pop
inc
add
jbe
jae
mov
addb
mov
xor
mov
gs
andl
orl
lahf
mov
ficoms
pop
sbb
enter
add
les
fnstenv
cltd
movsl
jne
and
add
loopne
popa
lock
sahf
xchg
adc
and
adc
aad
jb
pop
mov
rcl
or
add
sbb
gs
faddl
mov
ds
sbb
in
cmp
dec
stos
xchg
push
inc
mov
cmc
fs
rolb
call
gs
mov
dec
insb
int
push
sbb
and
lock
sbb
rclb
push
arpl
jp
jle
jg
jl
xchg
push
popa
add
test
inc
mov
mov
insb
or
ja
ja
lea
dec
inc
xor
add
mov
add
xlat
adc
lods
and
mov
dec
imul
mov
push
icebp
xchg
fidivrl
dec
hlt
lds
xchg
mov
push
cmc
mov
jp
add
sbb
jnp
push
or
inc
arpl
mov
sbb
mov
vmovlps
inc
mov
shll
push
aam
cmpsb
add
ljmp
pop
xor
xchg
or
jmp
push
shr
lahf
pop
mov
pop
mov
pop
fwait
cltd
pop
cmc
fnstenv
stc
lock
cmp
xor
cmp
stos
sub
jns
mov
push
inc
ss
pop
and
sti
add
or
popa
xlat
fistl
aas
mov
adc
mov
into
mov
dec
dec
xor
bound
test
xchg
pop
dec
sub
xchg
sbb
xchg
dec
sub
inc
ja
xor
clc
xchg
int
mov
movsb
in
cmp
mov
add
mov
fcomps
fwait
cmpsl
lea
push
js
pop
sarb
rclb
or
dec
jge
nop
cmp
shrb
sbb
sbb
xchg
mov
mov
dec
pop
rolb
icebp
push
sbb
imul
mov
test
xchg
pop
mov
xchg
dec
mov
jne
decb
cli
aaa
xchg
jle
inc
inc
add
inc
arpl
dec
popf
roll
jae
pop
pop
mov
add
mov
les
xchg
inc
push
cmp
dec
mov
cmc
inc
xchg
add
das
inc
push
aad
sub
bt
add
fldt
mov
sub
into
ret
sub
mov
mov
out
adc
push
mov
pop
mov
loop
mov
in
test
repz
mov
add
lea
cmp
sub
push
inc
push
add
inc
loope
les
mov
lock
pushf
push
add
cmp
jmp
dec
mov
add
xchg
lret
mov
jbe
shlb
pop
int
enter
sbb
or
idiv
sbb
rcl
movsb
mov
jb
xor
inc
and
jne
fnstsw
inc
incb
ja
xchg
adc
xchg
rorl
insl
in
mov
inc
jge
stos
xchg
incl
xchg
cmc
xor
push
insl
cmc
in
xor
dec
push
jb
inc
and
pop
lret
mov
dec
sub
or
not
mov
popf
pop
add
sbb
scas
clc
outsl
and
mov
aad
mov
xorb
data16
lods
hlt
mov
push
nop
cs
aad
test
lods
fmull
xor
cltd
mov
push
and
std
add
pop
mov
jae
clc
roll
sarl
orb
sub
adc
dec
inc
arpl
and
nop
test
mov
add
dec
mov
push
mov
lds
shl
repnz
adc
inc
mov
fs
xchg
jmp
shlb
jae
mov
rcr
sub
sar
dec
and
adcb
ss
pop
test
pushf
test
lcall
dec
lock
adc
mov
dec
das
xor
ret
jge
shlb
icebp
sti
xchg
mov
xchg
xchg
shl
xchg
pop
imul
fldl
and
outsb
sub
and
ret
mov
xchg
dec
sub
in
jb
or
pavgb
dec
cltd
mov
test
xchg
cltd
lcall
sub
xlat
je
mov
and
pop
cwtl
mov
xlat
dec
shlb
push
ss
roll
jbe
dec
and
or
fs
push
popf
ret
push
sbb
xor
mov
lahf
ja
mov
add
pop
mov
mov
mov
xchg
inc
adc
jl
nop
js
jne
jp
and
dec
mov
movb
or
psubusw
stos
adc
dec
mov
das
ss
cmp
pop
inc
jo
rcrb
arpl
imul
ret
cwtl
add
dec
jg
ljmp
and
or
and
sbb
clc
fnstsw
xchg
dec
adc
cmpb
pop
icebp
or
dec
cwtl
adc
mov
lea
jge
shll
shrb
add
je
aad
jle
ret
sbb
pop
ret
lds
push
xchg
cwtl
shll
xchg
sub
and
jge
in
pop
clc
jmp
cmp
adc
pushf
mov
mov
inc
and
jl
jne
jecxz
inc
ret
mov
and
enter
dec
insl
or
and
lret
rcr
sub
call
xor
fwait
cmpsb
cli
mov
call
fstpt
inc
mov
push
cmpsb
in
jnp
mov
push
mov
lea
cltd
xchg
inc
xchg
rolb
push
jge
mov
and
sub
mov
adc
scas
and
push
pop
xor
mov
aad
xor
sub
out
addr16
adc
test
inc
imul
hlt
aam
popa
fistpll
dec
js
xor
ret
rclb
int3
push
cmp
jnp
add
les
xor
mov
xchg
inc
mov
fadd
leave
xchg
inc
test
sbb
jno
mov
sub
cmp
fiadds
aaa
test
sbb
aam
push
imul
inc
test
ja
movsl
xchg
pop
in
nop
addb
gs
aam
movsl
outsb
pop
loopne
nop
addl
pop
aam
mov
xchg
mov
mov
adc
xchg
cmp
add
aad
mov
or
xor
push
sbb
pop
push
movsl
jge
mov
or
mov
aad
and
cmp
push
lods
jnp
or
sbb
dec
test
sub
and
int3
dec
mov
and
jo
ds
mov
mov
or
imul
aad
sbb
arpl
insb
jne
inc
xor
xor
sbb
into
xlat
out
pop
nop
add
dec
xchg
xor
fstps
sbb
and
data16
rorl
nop
dec
adc
cld
xorb
dec
fistps
jne
movb
imul
sbb
dec
mov
mov
jno
inc
jno
mov
add
lret
shlb
stos
and
popa
pop
jp
roll
addr16
lahf
inc
pusha
gs
std
lds
add
sbb
lea
push
xor
push
adc
sub
mov
imul
adc
and
xor
cmp
dec
inc
jns
int3
xor
fdivrp
jo
dec
or
sbb
mov
int
lds
and
dec
jl
push
js
add
mov
lahf
fists
dec
pop
test
loopne
mov
out
stos
lahf
adc
lods
xor
mov
mov
mov
imul
jb
dec
push
adcb
dec
arpl
adc
out
test
shrl
dec
push
stc
shlb
jge
clc
push
xchg
mov
fs
jb
push
ljmp
xor
faddl
pop
jmp
dec
mov
add
fldl
imul
xchg
sbb
fwait
jle
push
or
out
fcmovnbe
int3
fldcw
adc
arpl
imull
pop
xchg
jno
test
mov
pop
push
jle
cmc
hlt
push
lds
adc
clc
push
and
xchg
test
adc
adc
pusha
je
lods
jge
movsb
fwait
push
dec
inc
pop
js
mov
test
lahf
fwait
lods
aam
cmp
cmp
dec
fildl
das
and
adc
mov
dec
shll
adc
nop
mov
jp
mov
shlb
fidivs
test
arpl
jnp
mov
or
adc
or
mov
add
xchg
adc
sub
scas
jne
js
stos
inc
fcoml
pop
inc
fstps
add
popf
out
sbb
adc
test
jbe
mov
mov
mov
dec
ret
test
fs
dec
test
pop
xor
inc
sub
sahf
popf
lods
mov
rolb
pop
add
mov
popf
es
rcrl
ret
adc
sbb
jg
loope
cltd
sarb
sub
push
and
sub
xor
or
lret
pop
stos
cwtl
je
sbb
xchg
cmpsb
and
jnp
mov
mov
xchg
ficoml
and
jnp
daa
add
jns
jp
mov
mov
xor
push
ficomps
cmpl
popa
mov
push
pop
push
insl
fsubrl
ret
sarl
push
lahf
sub
loope
clc
nop
ja
push
out
loope
mov
mov
lea
add
pop
mov
xor
adc
imull
les
mov
bound
xchg
inc
mov
sbb
add
lea
shll
fmuls
inc
std
aad
pop
adc
add
pushf
clc
movsb
mov
inc
mov
lret
pop
sbb
add
xor
push
inc
xchg
inc
add
xor
jae
and
xor
hlt
jne
mov
or
fistl
rorl
adc
inc
loopne
je
adcl
add
mov
dec
add
sbb
or
adc
xor
imul
rorb
inc
mov
xor
pop
js
add
pop
adc
push
adcl
rcll
push
sub
or
xchg
mov
roll
add
cmpsl
addl
cwtl
push
rcrb
daa
stos
push
movsl
sti
jo
jne
dec
or
jge
sbb
aam
jmp
mov
xchg
pusha
lock
ret
insb
jge
add
pop
sahf
or
jmp
jl
and
and
roll
push
cmp
or
push
xlat
es
and
jmp
test
and
bound
push
movsl
int
repnz
lcall
sbb
aas
inc
pop
adc
xchg
pop
adc
inc
sub
xor
xor
or
movsl
insb
or
out
sub
mov
xchg
leave
mov
cwtl
xchg
fwait
push
fcoml
sbb
rcll
jge
jo
push
add
outsb
ret
sbb
mull
cld
push
jecxz
je
mov
and
adc
stos
and
pop
movb
mov
add
subb
stos
lret
dec
xor
pop
dec
push
call
cmp
xor
dec
mov
jle
loop
mov
inc
cmpsl
fiadds
arpl
mov
mov
and
adc
push
push
sahf
subl
sbb
dec
cmp
xchg
pop
inc
or
adc
stc
cmc
rclb
pop
lods
or
xor
ret
in
xor
hlt
jmp
mov
lds
add
or
and
lock
add
fstl
mov
push
lret
cmp
and
in
inc
mov
shl
pop
in
mov
dec
stos
test
xor
mov
pop
inc
cmp
addb
mov
xchg
rolb
fadd
sub
jb
xchg
jb
ss
and
inc
jns
mov
cwtl
jnp
dec
pop
pushf
adc
aaa
lahf
arpl
push
mov
icebp
push
aam
or
cwtl
push
mov
nop
ret
inc
mov
scas
jo
push
xor
mov
add
popa
pop
rcll
shll
push
dec
push
stc
pop
cmp
in
sub
mov
mov
add
fisttpll
and
cs
gs
pop
jl
and
mov
in
sub
mov
test
ja
rorb
das
gs
adc
sub
std
adc
and
orl
popa
sbb
inc
jmp
adc
pop
and
mov
sbb
push
stc
xchg
xchg
pop
das
in
cwtl
dec
cltd
jmp
test
adc
arpl
es
cltd
xchg
les
in
dec
adc
xorb
jb
adc
test
jge
xor
mov
imul
mov
add
xchg
push
cmp
sbb
jmp
gs
xchg
mov
adcb
in
stc
call
cmc
xchg
xchg
mov
inc
and
das
mov
push
out
and
xor
movsl
jle
leave
or
xchg
mov
sub
stc
inc
jl
lock
cli
int3
inc
jmp
inc
bound
jnp
mov
mov
call
test
gs
mov
sbb
movsb
pop
fldenv
andb
mov
push
lods
shl
or
push
fdivr
and
pushf
subb
incb
push
inc
jne
jg
sub
sub
xlat
sub
sub
sub
xchg
pop
push
ret
mov
jb
js
dec
outsb
push
sub
lds
lret
xchg
test
sub
loop
and
add
push
xchg
xlat
mov
shrb
out
mov
mov
scas
inc
aas
push
into
nop
adc
jo
adc
fdivs
xor
dec
clc
scas
stc
cltd
mov
fistps
mov
jg
sub
or
jne
aam
loopne
cwtl
subb
mov
sbb
mul
pop
fs
lea
mov
dec
das
and
in
xchg
sbb
mov
pop
sub
fiaddl
inc
mov
xchg
mov
dec
pop
test
push
jge
push
pop
mov
pop
test
mov
pusha
dec
pextrw
popa
fistpll
push
and
nop
dec
inc
inc
fsubrs
popa
add
pop
dec
cmp
xchg
mov
sub
mov
cmp
sarl
fidivl
add
in
cmp
nop
push
fwait
in
fwait
adc
xchg
mov
adc
pop
out
sub
mov
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
pop
inc
sub
shll
pop
add
cmp
mov
test
mov
bound
mov
pushf
cmp
fisubs
lds
xchg
lock
mov
clc
xchg
cmpsb
imul
pop
filds
addr16
mov
les
notl
jmp
add
rclb
mov
inc
into
or
scas
mov
ja
inc
pop
jge
pusha
push
dec
xchg
mov
sahf
ljmp
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
loop
jno
in
pop
pop
pop
pop
or
mov
outsl
sahf
xlat
sbb
dec
push
pop
arpl
pop
pop
pop
sub
inc
dec
push
pop
pop
dec
dec
dec
push
pop
push
call
push
pop
mov
pop
push
call
pop
jl
jg
push
pop
outsl
xchg
pop
mov
dec
push
pop
push
call
pop
fisttpl
dec
push
pop
sahf
sub
sahf
push
xlat
sbb
xchg
popf
loopne
pop
pop
pop
pop
or
mov
sub
inc
aad
push
out
fcmovbe
jl
outsb
lcall
or
adc
xlat
adc
cmpb
pushf
push
pop
fwait
outsl
pushf
fistps
pop
pop
or
mov
aad
push
aad
dec
mov
pushf
push
pop
jg
pop
pop
pop
mov
pop
pop
pop
pop
mov
and
pop
mov
movsl
mov
mov
jnp
out
pop
pop
or
rcll
dec
pop
pop
movzbl
xchg
pop
popf
into
xchg
xchg
pop
xchg
xchg
pop
mov
pop
mov
mov
outsl
sahf
pop
pop
or
or
ss
dec
pop
pop
mov
mov
sub
xlat
cwtl
push
ss
pop
pop
ss
lret
pop
pop
push
mov
mov
jp
adc
pop
pop
push
ss
pop
pop
pop
ss
pop
pop
push
mov
mov
jp
leave
pop
pop
pop
push
ss
pop
pop
rorb
pop
push
mov
mov
jp
jno
pop
pop
push
ss
pop
pop
pop
ss
pop
pop
push
mov
mov
sbb
pop
int3
pop
pop
pop
xlat
popf
test
pop
ss
pop
pop
push
mov
mov
or
popf
outsl
insl
in
pop
pop
pop
or
mov
outsl
mov
pop
lea
dec
push
pop
outsl
sahf
xlat
sbb
push
call
pop
arpl
pop
pop
pop
sub
dec
inc
dec
push
pop
pop
dec
dec
dec
push
pop
push
call
push
pop
push
call
pop
mov
pop
xlat
scas
push
call
pop
jg
fistpl
mov
pop
lea
push
pop
mov
pop
fistpl
fidivs
mov
insb
rcrl
pop
pop
or
mov
inc
aad
pop
fbld
pop
pop
fisubrs
pop
out
pop
pop
pop
mov
mov
pop
out
mov
pop
pop
pop
fwait
push
pop
pop
pop
mov
mov
xlat
mov
outsl
sahf
xlat
sbb
pop
aad
push
ljmp
mov
push
push
jmp
pop
pop
sub
pop
or
push
jmp
pop
pop
sub
push
jmp
sub
sub
rorl
xlat
sub
pmullw
pop
sub
push
outsl
sahf
lods
hlt
aad
dec
pop
and
adc
invd
or
fstpl
and
pop
pop
pop
pop
lods
cli
aas
aad
mov
xchg
xchg
cmp
pop
pop
mov
pop
ss
ficomps
push
mov
or
mov
outsl
sahf
xlat
sbb
dec
pop
pushf
xlat
or
sahf
pop
aad
dec
ja
adc
push
pop
aad
inc
aad
pop
pushf
xlat
or
sahf
pop
aad
inc
ja
adc
push
pop
out
pop
pop
pop
fstpl
aad
cwtl
pop
mov
pushf
fnsave
mov
pop
pop
pop
pop
push
fnsave
aad
cwtl
pop
mov
pushf
fnsave
sub
or
pop
pop
push
pop
or
ss
ficomps
push
mov
mov
dec
fbld
dec
aad
bound
cmp
fs
sbb
push
aad
jbe
scas
xlat
sbb
fistpl
push
xchg
fstpl
add
mov
or
jae
pop
pop
pop
pop
or
mov
aad
push
aad
dec
xor
push
ror
push
pop
pop
pop
aad
push
fistpl
push
lahf
mov
rcrl
data16
aad
push
xor
push
ror
dec
pop
pop
pop
xlat
fs
xor
push
ror
dec
pop
pop
pop
xlat
fs
push
ror
push
pop
pop
pop
aad
push
fistpl
push
lahf
mov
rcrl
outsb
mov
aad
push
xor
push
ror
push
pop
pop
pop
xlat
sub
push
xor
push
ror
push
pop
pop
pop
xlat
sub
aad
push
xor
dec
push
pop
pop
pop
xor
pop
push
pop
pop
pop
shll
scas
xlat
mov
dec
pop
pop
pop
lods
cli
aas
xlat
mov
cwtl
out
pop
pop
pop
lods
cli
aas
aad
stos
xlat
adc
aad
pop
xlat
adc
scas
out
pop
pop
pop
lods
cli
aas
xchg
pushf
push
pop
and
aas
inc
pop
pop
pop
mov
test
cmp
pop
pop
pop
mov
sub
pop
mov
daa
pop
pop
or
mov
outsl
sahf
xlat
sbb
mov
sub
pop
pop
pop
outsl
sahf
addr16
inc
dec
push
pop
and
push
inc
dec
push
pop
aad
mov
pop
rorl
aam
insb
pop
pop
dec
push
pop
pop
mov
or
arpl
pop
pop
sub
pop
sbb
or
mov
or
jne
push
xlat
imul
pop
aas
xchg
pushf
pop
pop
jns,pt
lahf
pop
ja
dec
pop
jge
inc
out
push
cld
bound
cmp
xchg
rolb
je
mov
aas
in
lret
and
paddusb
sub
cwtl
pop
and
sub
subb
cmovbe
push
sub
ss
or
lahf
mov
mov
mov
xor
mov
dec
dec
in
mov
scas
xchg
in
sbb
inc
dec
mov
and
push
pop
.byte
dec
inc
insb
push
orb
lea
jb
fadds
in
push
clc
test
jnp
loopne
or
lea
jb
test
jb
jb
enter
or
out
popf
add
fwait
orl
stc
nop
add
vminss
mov
push
or
mov
lock
outsl
outsb
mov
stc
sbb
test
jb
jb
out
popf
push
xor
and
inc
dec
test
mov
push
push
clc
test
jnp
or
test
jne
add
jns
int
enter
or
lock
add
mov
mov
popf
add
fwait
orl
lea
lock
add
mov
mov
add
mov
lret
insl
popl
mov
push
enter
out
jns
add
mov
mov
add
cmpl
xor
push
enter
cmpl
jns
lret
enter
or
enter
in
inc
dec
test
lea
jb
repnz
lea
jb
fadds
push
popa
mov
mov
push
clc
test
jnp
lret
add
orl
push
iret
test
dec
clc
addl
jb
jb
dec
pushw
pop
popf
add
add
jno
jb
mov
test
jb
jb
enter
clc
test
jb
jb
push
enter
mov
mov
sbbl
inc
cmpb
or
lea
movsl
mov
cwtl
scas
popf
int
push
mov
fs
in
dec
stos
pusha
xchg
or
push
or
cmpl
gs
jb
jb
inc
dec
mov
lea
cmp
push
mov
push
fadds
aaa
lea
test
mov
lea
test
gs
jb
jb
dec
stc
mov
jno
push
enter
mov
lea
popa
mov
push
fadds
lea
dec
mov
icebp
lret
push
rolb
pushf
orl
mov
add
mov
mov
add
mov
xor
lea
out
popf
add
pushf
orl
pop
ret
cmp
rolb
les
sbb
lret
out
popf
mov
test
sbb
out
popf
mov
test
or
mov
dec
popf
mov
test
or
add
add
jno
pop
add
test
lret
push
enter
popf
mov
test
pop
orl
addr16
in
add
movsb
je
inc
popf
out
popf
mov
test
pop
orl
mov
test
cmp
pop
jle
in
out
popf
mov
test
pop
orl
movl
fs
jb
jb
clc
test
cmp
mov
mov
pop
popf
mov
test
pop
orl
pushf
push
testl
add
push
testl
orl
add
mov
data16
inc
dec
mov
add
jmp
add
add
add
jmp
add
hlt
out
idiv
jecxz
add
add
and
add
add
pop
inc
pop
pop
pop
cmpsb
xchg
add
add
lea
add
add
mov
into
add
add
add
xchg
mov
cmp
je
jmp
pusha
mov
mov
mov
xor
mov
xchg
mov
imul
add
push
call
sbb
loop
mov
mov
push
xor
push
push
push
xor
call
lea
mov
sub
xchg
push
lods
mov
lods
mov
lods
mov
lods
mov
lods
push
push
call
xor
sub
xor
mov
ror
pop
dec
jecxz
jmp
push
xor
xor
xor
xor
pop
mov
test
je
mov
xor
mov
inc
loop
pop
loop
add
call
xor
xor
popa
ret
push
mov
pusha
mov
mov
mov
imul
mov
xor
popa
leave
ret
mov
mov
push
arpl
lret
lret
cmp
cli
stos
mov
mov
cmp
cli
cltd
add
sti
mov
cmp
add
testl
mov
lret
add
jae
dec
xchg
data16
jo
jo
jmp
into
jo
sbb
into
fiaddl
push
in
jo
xchg
jo
jo
dec
sti
in
jmp
dec
mov
xchg
orl
sti
xlat
mov
xchg
mov
jo
jo
dec
sti
int
dec
add
or
mov
lahf
mov
xchg
lahf
mov
xchg
xorb
jo
mov
fstp
fsubs
jo
jo
push
lea
mov
fs
rorl
fwait
fs
inc
dec
mov
mov
push
ret
nop
and
das
test
inc
pop
fwait
xor
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
