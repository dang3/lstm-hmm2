jmp
nop
add
in
sub
push
push
idivb
call
inc
hlt
push
push
lea
sbb
push
pushl
push
push
bound
fdivr
hlt
push
call
leave
ret
iret
jbe
fidivrl
addl
lods
lock
push
jae
out
mov
jbe
add
sti
mov
and
insb
cmp
cld
push
dec
inc
call
fstpt
push
arpl
push
in
add
and
add
xor
push
pop
mov
dec
jno
jp
outsb
outsb
mov
add
xchg
xchg
in
mov
iret
pusha
lcall
sbbb
xor
mov
lods
clc
mov
push
pusha
ja
adc
or
lcall
sub
in
pop
jmp
enter
push
insb
inc
in
push
inc
cmp
push
fadds
sbb
lods
adc
pop
dec
push
or
sub
inc
repz
repz
mov
dec
repz
push
movsb
subb
push
push
inc
add
ds
add
repz
inc
add
icebp
mov
mov
inc
clc
enter
hlt
jo
push
or
xor
dec
dec
decl
out
js
js
outsb
jl
push
aaa
dec
mov
es
lock
rorb
rcl
js,pn
nop
push
jno
inc
sub
inc
cwtl
add
mov
cld
push
jb
inc
rclb
jg
fidivs
xor
js
shlb
outsb
notb
inc
push
dec
ja
icebp
inc
addr16
mov
std
insl
jbe
jne
insl
xlat
jns
test
push
pop
outsl
inc
out
inc
lea
cwtl
jge
bound
or
in
adc
push
std
dec
andl
jno
sbb
loopne
cmpl
data16
adc
push
push
jmp
inc
out
sahf
push
loop
ret
pop
sbb
push
movsl
xor
jno
out
lock
pushf
push
mov
push
movsl
lcall
add
push
pop
pop
or
xor
jbe,pt
sti
pop
xchg
je
scas
sbb
jbe
aaa
call
push
enter
or
shll
and
mov
hlt
push
push
push
push
xor
sbb
sbb
dec
cmp
negl
cld
and
cmp
add
imul
cli
mov
jbe
xor
mov
inc
inc
push
paddb
incl
dec
mov
adc
dec
sbb
out
subl
sub
enter
lcall
imul
xor
dec
dec
dec
push
inc
insb
xor
pop
push
and
bound
out
xor
add
add
jne
mov
dec
push
jne
push
push
pop
push
xchg
pop
jbe
inc
dec
loop
out
movsl
cli
adc
pushf
cmp
mov
stos
imul
inc
and
lock
dec
mov
into
sub
adc
insl
arpl
adc
std
sbb
jmp
pop
xor
xor
cmc
inc
jle
ja
and
cmp
push
faddl
hlt
pop
push
int
pushf
jmp
pop
xor
dec
xor
adc
ss
sub
cmp
out
aaa
aad
loopne
and
out
push
movzwl
sub
mov
andl
mov
jnp
push
loope
mov
pop
add
inc
add
dec
scas
out
add
inc
rcll
mov
or
rolb
cmp
aam
fs
ss
dec
pop
or
ret
dec
xor
dec
pop
inc
xor
mov
dec
aaa
pop
dec
adc
xor
loopne
sub
jg
roll
wbinvd
js
xor
xchg
repnz
pop
addr16
and
jno
andl
sub
cld
cmp
inc
and
outsb
adc
xor
outsb
mov
js
ja
mov
dec
push
push
mov
dec
adc
sub
pop
std
or
dec
pop
push
jo
add
ret
and
scas
in
test
push
pop
sub
inc
cld
loopne
and
add
dec
aaa
xor
dec
inc
add
xchg
sbb
push
cmp
xchg
inc
sub
in
pop
negl
das
mov
xor
jno
fcos
and
push
push
mov
sub
adc
fdivrs
adc
or
jg
xchg
mov
sbb
pop
sub
out
inc
jns
stos
ficomps
addr16
adc
inc
jae
adc
adc
xchg
inc
adc
inc
add
jmp
push
sbb
mov
sub
inc
pop
jmp
pusha
and
ds
adc
int
push
cld
mov
add
ds
outsl
jo
cli
add
push
and
sbb
pop
mov
lahf
sub
rolb
addb
pop
clc
cmc
jbe
cmp
dec
movsb
imul
xlat
lds
out
shll
clc
xchg
adc
sub
sbb
pop
inc
mov
adc
shl
xor
loopne
add
or
fs
or
mov
fimuls
outsb
jno
arpl
fdivrl
ja
mov
add
mov
inc
adc
insb
dec
push
rcrl
mov
sub
push
je
fs
xor
fwait
pop
std
pop
push
push
xor
push
cmp
push
je
int
xlat
adc
add
add
sub
outsl
xor
push
daa
pop
cmp
sahf
jo
mov
push
mov
or
insb
push
bound
or
inc
jle
in
xorl
popa
push
movsb
add
mov
dec
fsubl
jge
mov
pop
leave
ret
addr16
test
adc
cmp
ficoml
ds
sub
cmp
mov
inc
cmp
inc
jbe
dec
es
mov
enter
dec
out
int3
repz
fcoms
mov
je
ja
jecxz
flds
inc
jno
dec
mov
fisubrs
fcomp
mov
add
cli
dec
cli
dec
dec
fs
cmp
neg
xorl
add
push
mov
mulb
jo
inc
push
inc
add
mov
dec
push
inc
outsb
sbb
std
push
jae
pop
and
push
mov
xlat
add
loopne
push
neg
imul
sbb
je
sbb
dec
test
popa
mov
je
push
aam
push
ja
addr16
push
outsb
mov
popa
mov
push
imul
cmp
sarb
inc
lret
xor
sub
inc
mov
mov
gs
or
nop
adc
pusha
addr16
fnstenv
adc
in
sub
lock
inc
mov
sbb
adc
jle
add
js
mov
out
mov
sahf
xor
inc
push
jbe
mov
rcl
sbbl
pop
adc
jmp
xor
sbb
scas
loopne
movsl
inc
sub
inc
dec
push
push
or
inc
shr
push
lods
fsubrs
imul
js
hlt
out
push
add
ror
les
fsub
push
outsl
mov
jg
test
push
push
mov
dec
inc
add
inc
mov
outsl
js
subl
cmp
je
icebp
in
add
xor
inc
xor
outsb
push
jg
repz
popa
js
jmp
add
sub
inc
dec
mov
jae
mov
jnp
adc
loopne
das
js
dec
push
add
clc
pop
enter
jb
mov
lock
in
or
inc
clc
adc
popa
inc
push
mov
imull
jl
fucomi
push
inc
xor
popa
dec
add
sub
bound
cld
mov
jo
sub
shrb
push
dec
mov
push
mov
mov
push
xor
push
insb
mov
out
inc
jne
push
aas
push
test
add
pop
pop
add
jp
mov
sub
ret
push
lock
lret
adc
ljmp
inc
cmp
dec
or
scas
pop
xchg
mov
je
sub
and
in
push
and
xor
fmuls
dec
adc
sbb
cli
mov
fwait
and
add
inc
scas
ret
bound
push
shlb
push
xor
loopne
push
xchg
lods
negl
dec
push
imul
les
add
pop
push
push
sahf
dec
mov
and
pop
clc
hlt
push
pop
inc
mov
inc
cmp
fbld
xchg
repnz
jg
xchg
or
add
jecxz
iret
or
jne
pop
mov
push
jo
dec
sbb
outsl
fs
nop
push
das
or
jbe
cld
test
fdiv
js
gs
test
sub
mov
in
jl
jbe
enter
dec
arpl
bound
push
cmp
inc
sub
dec
daa
push
arpl
inc
dec
sub
xchg
mov
mov
ja
jg
sbb
or
insl
push
pop
push
test
push
jno
inc
rolb
xchg
gs
inc
xor
test
dec
js
add
xor
sub
inc
inc
jae
jecxz
sub
pop
cmp
in
stos
adc
sbb
inc
dec
imul
push
mov
ja
push
cwtl
adc
dec
bound
mov
add
pusha
jno
aam
push
stc
dec
fisttpl
fs
mov
add
mov
xor
or
or
pop
jae
loope
xorb
and
inc
jne
in
adc
or
dec
testb
xchg
push
xchg
out
aaa
cld
jbe
add
enter
inc
push
insb
sub
mov
sbb
les
pusha
insb
ret
fwait
fwait
jp
adc
fs
push
add
sub
sbb
js
loop
js
jno
fidivrl
pop
xor
stos
pop
or
xor
sub
and
stos
cmp
adc
mov
jnp
add
jecxz
push
jae
and
add
outsl
incb
clc
add
or
mov
cmpsl
in
xchg
decb
aam
popa
push
fs
aad
cmp
sahf
add
imul
ljmp
and
pop
aas
jb
gs
mov
sbbb
xchg
add
add
push
pop
cld
push
je
xor
aam
push
ljmp
roll
sti
push
iret
sbb
pushl
fsubl
rolb
pop
sbb
add
sub
pushl
add
pop
fs
jns
ret
mov
imul
xlat
push
sbb
push
cmp
add
int
jae
adc
add
cld
lcall
push
ja
insl
push
jb
push
jmp
into
mov
and
mov
imul
xor
or
movl
xchg
and
mov
mov
jae
sub
inc
aaa
outsl
sti
jne
inc
jno
or
push
xchg
lds
imul
gs
xor
sbbl
add
outsl
cld
xor
push
mov
and
adcb
push
add
and
popa
test
test
in
subb
jae
adc
int
xor
popa
push
dec
pushf
shll
jl
inc
inc
xor
dec
push
mov
sbb
dec
mov
dec
sbb
adc
std
jmp
pop
mov
dec
insl
jge
add
mov
loopne
push
fildl
sbb
mov
je
add
or
repnz
or
push
adc
and
test
sub
in
pop
js
cmp
cld
xchg
and
sbb
and
sbb
jp
out
daa
lock
loopne
xlat
xchg
gs
adc
xorl
jecxz
in
push
dec
outsb
push
xor
inc
jmp
cmp
sub
loopne
mov
pop
hlt
clc
jno
sarl
xor
in
lahf
push
cmpb
inc
jb
add
pop
test
push
or
dec
loope
pop
stos
in
add
outsl
dec
sbb
pop
mov
push
addl
testb
negl
imul
shl
xor
out
sub
push
pop
and
or
adc
fdivp
les
jle
jmp
js
push
adc
cld
or
repz
dec
jne
stos
daa
sub
push
mov
add
sub
or
sub
pop
adcl
jle
hlt
les
iret
dec
dec
mov
pop
cmp
dec
xor
lret
call
pop
stc
or
loopne
ret
dec
mov
adc
and
inc
dec
js
js
mov
aad
inc
outsb
mov
sub
stos
adcb
stos
lods
mov
clc
test
sbb
xor
loop
std
popl
xor
cli
dec
or
arpl
clc
out
test
dec
jno
arpl
mov
lea
push
push
and
pop
rclb
push
inc
mov
xchg
mov
jge
inc
fs
jg
mov
push
inc
push
add
orb
in
lret
mov
sbb
mov
mov
pop
mov
adc
out
sbb
rolb
mov
sub
jmp
negl
enter
pop
jmp
iret
fstpt
test
pop
add
dec
pop
shlb
in
imul
add
add
repnz
fnsave
add
push
jg
lcall
add
jnp
cld
out
jg
test
add
lret
add
pop
cwtl
mov
fdivr
pop
sub
add
movsb
add
stc
insl
ljmp
mov
scas
jmp
inc
add
mov
cmp
add
orl
testb
mov
sub
subb
xchg
add
lods
add
and
xor
add
cs
int
add
outsl
in
cmc
or
rcrb
add
rorl
nop
mov
out
and
jo,pn
out
lds
stos
fldl
sub
imul
mov
jge
add
cmp
in
je
mov
clc
xorl
subb
push
push
jo
add
push
add
bound
mov
push
push
mov
mov
cmp
call
cmpsb
mov
sub
and
call
adc
adc
pop
push
fsin
sbb
aam
pop
cmp
into
and
xor
addr16
fdiv
pop
imul
xor
mov
adc
jae
mov
shlb
push
mov
mov
xchg
cmpsl
int3
pop
cmpsl
mov
add
aam
sbb
lods
imul
test
lret
bound
sbb
sbb
mov
jo
add
cltd
or
pop
cmp
lahf
iret
roll
mov
inc
gs
roll
faddl
inc
dec
pop
mov
xchg
ret
push
add
push
xor
sub
cltd
test
sub
fadd
mov
mov
ret
sub
fwait
add
out
ja
add
xchg
sbb
add
addl
lret
mov
ficompl
or
jns
lahf
jmp
pusha
add
loope
loopne
test
cmp
out
aaa
dec
mov
jae
or
xchg
add
sarb
data16
stos
pop
stos
push
rorl
add
cmp
jle
mov
andl
cld
add
sub
sub
cmp
inc
repz
cs
aad
incb
sbb
or
pop
fstpl
mov
xchg
enter
es
sbb
repz
es
test
out
or
cmp
xchg
or
andl
mov
insb
js
pop
dec
mov
add
push
adc
out
test
cmp
adc
cmpsl
inc
xor
cwtl
aam
cmpb
push
inc
push
push
add
cmp
pushl
test
mov
dec
lock
cmc
pushf
sti
je
adc
xchg
sbb
cmp
fdivrl
mov
sbb
and
pusha
jns
iret
lock
aas
fmull
int
cmc
xor
adc
xor
inc
rcrb
mov
add
push
and
push
jg
add
lcall
andb
xchg
fistl
dec
lcall
mov
pop
fiadds
sub
mov
iret
das
sarb
fs
dec
inc
and
int
out
pop
popa
mov
inc
dec
mov
out
push
mul
pushf
jge
cmp
call
sbb
mov
cmpsb
outsl
jbe
and
xchg
mov
push
mov
scas
testb
call
sub
clc
sub
js
arpl
popf
shrl
adc
cmc
out
add
add
add
xchg
sti
mov
pop
bound
nop
xchg
push
xor
jne
imul
mov
mov
les
cltd
pop
mov
sbb
pop
dec
push
cmpsl
hlt
subb
mov
cmpsb
add
cld
repnz
add
xlat
icebp
loopne
shl
out
nop
mov
and
in
mov
sbb
jle
imul
cli
mov
clc
pop
mov
push
push
mov
int3
lret
xor
pop
ja
cs
addb
cwtl
jo
pop
ds
jmp
add
out
mov
push
lahf
mov
fiaddl
sub
ficoms
xchg
gs
movb
lock
pop
mov
addl
push
outsl
push
rcl
jo
mov
out
sbb
js
out
neg
cld
stos
mov
imul
clc
push
cltd
mov
cwtl
sbb
cmpsb
push
and
adc
clc
mov
xchg
add
lea
out
cs
cli
fsubl
sbb
and
inc
js
hlt
dec
aas
lods
rcl
pop
mov
pop
das
fbstp
or
push
mov
add
popf
adc
cmp
dec
cmp
es
cmp
xchg
outsb
mov
xor
xor
push
mov
and
mov
adc
or
gs
test
shll
mov
add
sub
inc
dec
rorl
mov
es
scas
pop
xchg
in
inc
pop
lock
rorb
adc
or
sbb
adc
add
aad
mov
jb
pop
scas
mov
insb
aas
fsubrl
mov
call
push
ret
daa
add
aad
cmp
xor
call
add
mov
cmp
jo
xor
sbb
lods
lods
cmpl
ljmp
pop
cmpsb
inc
mov
add
rclb
sub
nop
xor
xor
aam
mov
push
jl
xchg
iret
icebp
jbe
jle
outsl
adc
mov
pop
push
les
xchg
stos
outsb
pop
pop
pushl
ret
push
pop
aad
das
pusha
es
add
cmp
mov
stos
inc
fstps
cmp
rcrl
and
cli
incb
aad
inc
mov
rolb
lcall
loope
add
and
outsb
and
loop
push
pop
ds
jbe
lock
pop
mov
mov
inc
icebp
or
fwait
push
push
push
mov
push
ja
push
cli
outsb
inc
push
cmc
ds
js
sbb
xor
movl
mov
int3
sbb
pop
adcb
push
cmp
out
ja
push
incl
adc
dec
fwait
xor
clc
sub
mov
shrl
or
loope
cli
dec
pop
mov
add
xchg
and
out
cmp
pop
mov
hlt
add
movsb
xchg
jb
cld
xchg
lods
addb
rorb
mov
push
sbb
cmpsl
or
ljmp
mov
out
inc
loope
or
jae
call
test
or
pop
inc
jae
push
testb
xchg
push
adc
jb
xor
fidivl
rolb
and
je
mov
mov
movsl
add
and
push
data16
in
sar
jl
nop
inc
mov
aaa
lcall
add
jle
sbb
iret
mov
cwtl
jns
push
push
pop
sbb
add
int
jp
mov
enter
fisubrs
pop
push
mov
mov
xchg
pop
inc
movsl
in
add
js
sbbl
js
rcrb
lods
lcall
movsl
push
imul
adc
and
push
in
repnz
cmp
xor
push
pushf
dec
jnp
push
insb
popa
aam
mov
incl
push
pop
and
loopne
sahf
sub
sub
xchg
ret
pop
sbb
lret
add
adc
add
addr16
mov
jb
adc
or
add
mov
push
sbb
call
adc
inc
rcrl
in
daa
push
repnz
or
dec
mov
mov
das
jmp
rol
pusha
mov
imul
cmpsb
je
push
mov
mov
dec
clc
hlt
inc
cmpsb
sahf
add
sbbb
jbe
xor
mov
cmpsb
add
imul
xchg
nop
icebp
fidivl
and
cmp
in
mov
pop
loop
jge
cmpsl
xchg
xor
or
sbb
fwait
lock
js
enter
pop
nop
xchg
dec
ret
adc
xorl
cmp
loop
aas
cvtps2pd
jns
sbb
pop
in
adc
push
push
add
test
and
dec
push
add
movsb
push
in
mov
or
and
ds
out
mov
and
shlw
enter
cmp
sub
inc
push
add
cmpsl
xchg
cmp
faddl
inc
xchg
cli
xchg
lret
add
in
sbb
mov
jbe
fwait
add
sbb
push
mov
out
add
mov
mov
xchg
mov
mov
idivl
ficomps
pusha
jne
mulb
insl
mov
mov
test
sahf
push
mov
call
mov
push
sbb
roll
mov
loopne
loope
adc
inc
cwtl
xchg
sahf
xchg
je
or
push
xchg
pop
stos
pop
mov
pop
fcoms
clc
xor
mov
je
and
add
sub
fdivl
fisubrs
ss
cmpsb
xchg
jg
pusha
cmpsl
mov
clc
in
stos
bound
fisubrs
inc
dec
add
add
mov
es
insb
data16
adc
call
add
mov
cmp
push
rclb
outsl
mov
shlb
call
sub
mov
movl
enter
xchg
cmp
insb
push
add
add
inc
hlt
add
into
adc
fidivrl
ss
jge
pusha
pop
nop
scas
and
leave
mov
push
in
jmp
xor
sahf
movsl
push
dec
mov
dec
sbb
lea
jp
inc
cmp
or
or
push
cli
xchg
jae
push
faddl
les
fwait
inc
test
jnp
js
xchg
jp
fsts
icebp
mov
loopne
push
std
mov
add
and
fwait
ret
pop
pusha
sub
filds
sbb
or
fsubrp
jecxz
sub
sub
adc
jle
imul
cltd
in
sbb
xchg
and
sbb
loope
mov
fmull
popa
xchg
or
imul
dec
or
lret
push
jecxz
scas
js
loope
arpl
or
data16
decl
subb
in
test
or
ret
popf
aas
dec
sbb
scas
or
inc
rcl
dec
imul
xor
mov
fnsave
or
mov
lds
pop
push
test
pop
repz
test
pop
aam
sbb
cld
jne
mov
insb
sub
inc
and
cmp
xchg
adc
jbe
sub
in
adc
or
and
out
mov
loopne
sub
insl
push
and
cmpsl
sub
addr16
rcrl
test
sub
arpl
lret
xchg
and
ss
ret
loop
aam
xchg
add
inc
xchg
mov
push
in
sub
rcll
inc
mov
cli
cmp
scas
xchg
xchg
dec
je
das
lret
test
cmp
decl
mov
loopne
mov
clc
jmp
jecxz
push
imul
or
cmp
jg
pusha
add
into
push
test
mov
xor
mov
adc
add
mov
mov
je
sbb
add
or
les
mov
call
inc
add
sub
xor
jg
loopne
and
push
jb
and
xchg
mov
add
mov
adc
fcmovnbe
lods
sbb
vprotb
enter
sbbl
fildl
add
incb
data16
out
push
cli
sub
push
pop
es
imul
cmp
push
and
or
shl
xchg
scas
cmp
inc
enter
movsb
decl
out
movsb
shl
push
mov
fmuls
shrl
fcmovnb
and
add
ret
and
call
loop
cltd
push
call
rorb
jo
call
mov
fwait
xor
adc
cmpsb
sbb
cltd
xlat
jnp
push
int3
sub
pop
ret
in
in
adc
es
mov
mov
shlb
jne
or
xchg
xchg
in
cli
cmp
addr16
mov
jmp
enter
jge
clc
inc
data16
aad
outsb
or
cltd
mov
add
xchg
pop
mov
add
ret
repz
add
push
insb
cmp
and
cmp
pop
incb
out
test
xor
inc
sbb
sub
dec
adc
mov
outsb
push
add
test
mov
mov
xor
adcl
jmp
or
out
push
jo
int3
xor
mov
icebp
scas
mov
and
std
mov
adc
mov
jge
jecxz
in
jmp
sbb
and
push
jne
data16
dec
loopne
lret
mov
fbstp
sbb
or
push
add
int
loopne
mov
sbb
dec
mov
jl
jae
dec
outsl
cli
pop
dec
dec
test
inc
inc
test
push
aas
aad
mov
hlt
dec
cmp
add
orb
xor
sbb
stos
cmpsl
enter
mov
sbb
in
es
clc
fs
mov
popf
in
shrl
mov
jle
xchg
push
push
lret
sub
mov
test
xchg
mov
mov
sub
insb
iret
cmp
pop
inc
pusha
mov
mov
jb
push
jecxz
or
sub
pop
cli
ffree
shlb
sub
mov
std
test
outsl
lahf
fldl
push
pop
mov
mov
xchg
sbb
bound
push
lds
pop
lock
xor
pushl
test
xchg
outsb
test
pop
sub
sbb
cmp
repz
xor
add
cld
push
cli
xor
add
mov
xchg
adc
mov
test
push
mov
adc
pop
iret
insb
movsb
jmp
xor
mov
xor
hlt
jg
ja
sbb
jne
sbb
push
lods
cmp
fwait
fs
loope
subb
adc
adc
jo
mov
inc
push
add
dec
adc
jle
rcrl
sbb
lock
mov
mov
clc
rol
push
xchg
lock
dec
mov
and
lock
and
push
test
rcrb
jg
outsb
cmc
call
xchg
xlat
popa
add
pop
aas
cli
sti
and
xor
cmp
add
das
gs
dec
jmp
mov
mov
repnz
fcmove
jae
enter
inc
or
hlt
xchg
pop
out
clc
xorl
pusha
pop
push
push
sub
sarb
ljmp
cmpsb
add
add
pop
cwtl
pop
negb
push
aam
loopne
out
xor
pop
dec
lea
adc
subb
sbb
mov
data16
add
prefetcht1
rorl
loopne
dec
or
clc
dec
pusha
add
cmp
aam
jl
mov
scas
out
jmp
xchg
adc
clc
lods
dec
xchg
stc
push
stc
jae
je
and
hlt
jg
mov
lret
repz
ret
xorl
or
movsb
fcom
push
loope
push
add
push
xchg
cli
insb
ljmp
data16
sub
pop
jbe
js
lret
and
cmpl
and
orb
or
aad
stos
push
sub
lret
and
out
adc
cmp
out
scas
fsubs
jp
xchg
sarb
sar
inc
in
pop
sub
mov
add
orb
callw
mov
cmpsb
in
loopne
test
push
ret
stos
ja
pushl
test
xor
je
jns
push
xchg
xor
popf
test
inc
mov
xor
mov
lea
cmpsl
xchg
add
lods
mov
fiadds
pop
mov
stos
adc
sbbb
add
popa
loopne
add
mov
into
push
rorl
adc
outsb
lret
add
add
loope
sub
add
ffreep
fwait
push
pop
mov
jo
adc
add
push
filds
shll
inc
insb
rcrb
cwtd
inc
push
ss
int
xchg
adc
and
pop
clc
or
adc
pushf
jbe
repnz
imul
push
inc
sub
sarl
sub
sbb
jp
or
mov
orb
out
mov
ror
pop
insl
and
jne
sub
insl
cmp
adcb
movsl
add
lahf
lret
mov
loopne
js
pop
sti
dec
inc
cmp
sub
jge
inc
pop
jb
or
push
mov
or
sbbl
es
mov
adc
mov
inc
loope
push
add
cs
add
or
adc
cwtl
push
lret
bound
int3
sub
xor
mov
adc
sub
jl
xchg
scas
and
mov
pop
movsl
icebp
movsb
dec
dec
sub
xor
mov
sahf
sbb
mov
lock
push
lods
popf
mov
fdivl
lock
bound
loope
shll
stos
jbe
xor
data16
adc
mov
inc
lods
mov
push
mov
daa
or
cli
pop
fsubs
xor
cli
push
sbbb
xchg
jp
js
push
shl
sub
iret
sbbb
dec
xor
xchg
testb
outsl
ja
push
mov
nop
ret
mov
add
or
testl
test
rolb
movsb
fisttpll
cmc
cmp
aaa
jl
out
xchg
mov
je
adc
push
enter
bound
test
shll
add
lods
push
std
lret
add
xor
mov
jnp
sbb
sbb
sub
sti
jecxz
lcall
sbb
js
jae
push
es
jns
enter
insl
fwait
mov
mov
fs
and
cs
or
stos
jp
push
push
lret
pop
ljmp
aad
pop
add
add
sub
pop
ret
movsb
in
sti
sti
mov
jg
mov
cmp
jp
ret
fimull
loope
int3
mov
inc
push
mov
push
inc
add
inc
inc
and
xchg
rcrb
or
rorl
cmp
enter
adc
adc
fstl
iret
xchg
popa
lret
add
movsl
stos
loop
ss
inc
inc
mov
test
mov
push
mov
add
test
add
jle
cli
jle
lcall
push
jns
add
xor
outsl
add
or
push
inc
jg
fildl
stos
cmp
add
mov
int3
push
fisttps
push
aas
das
mov
adc
xor
and
sahf
sub
add
pop
repnz
cmp
adc
jecxz,pt
and
sub
jno
mov
js
mov
pop
adc
dec
cmpsl
out
test
sbb
xor
mov
inc
roll
mov
icebp
call
js
popa
rclb
inc
add
dec
fbstp
add
add
push
ds
mov
fwait
mov
and
std
mov
lock
loopne
das
out
push
inc
flds
mov
lods
mov
jg
sbb
jp
test
add
ljmp
dec
rcll
cwtl
pop
sub
mov
pop
rorb
jge
out
pop
jo
xchg
mov
sbb
inc
mov
dec
js
or
in
fwait
int
int3
add
pop
clc
mov
inc
and
inc
inc
and
fs
dec
outsb
aad
sbbl
clc
aad
inc
mov
push
fsubrs
mov
stos
loopne
cmp
scas
leave
clc
ds
add
lods
xchg
or
jecxz
or
add
pop
push
pop
lods
sub
fnstsw
mov
mov
cs
lahf
pop
cwtl
dec
mov
jo
pop
loope
icebp
push
inc
cld
add
pop
inc
sarl
inc
es
cmp
pop
fnop
mov
add
pop
cmp
add
pusha
jno
mov
lret
cmpsb
cld
add
ror
lods
dec
mov
push
or
sbb
mov
leave
pop
popf
mov
adc
cmp
add
push
fcmovnu
arpl
std
ret
push
push
inc
push
add
out
decl
inc
std
or
push
sbb
cmp
cmpsb
js
add
movsl
jmp
int
shlb
push
jl
inc
clc
leave
mov
inc
lds
xor
adc
subb
stos
xor
sub
stos
mov
dec
dec
jb
outsl
push
decb
mov
adc
mov
xor
jl
mov
push
pop
xchg
push
dec
jl
vmovshdup
hlt
cmpsl
push
push
subl
movsb
mov
aam
fiaddl
push
shll
xor
jne
mov
mov
std
add
pop
add
cmp
mov
add
mov
dec
std
scas
ret
iret
nop
sbb
and
inc
inc
setne
cmp
and
in
inc
and
and
bound
ret
loopne
sub
jns
addl
push
inc
cmpb
scas
sub
cmpsl
out
and
and
test
xchg
cli
enter
jmp
mov
jnp
sarl
loop
ljmp
sbb
adc
jo
pop
or
sbb
mov
out
andl
dec
sysenter
inc
jo
pop
outsb
mulb
sub
lock
pop
lds
stos
ljmp
push
sbb
rcrl
movsb
mov
inc
int3
test
mov
push
shrb
push
shll
decl
out
and
dec
dec
and
xchg
jbe
or
sar
mov
lods
rorb
or
rolb
rcrl
mov
scas
lods
lret
and
inc
xchg
mov
lock
loop
or
jle
test
mull
fnstsw
loopne
push
push
aas
pop
shr
push
aam
data16
xor
loop
cmpsb
lea
xchg
cmp
idiv
outsl
test
xchg
rol
cmp
outsl
out
sar
sbb
sub
sbbb
xchg
mov
mov
js
mov
ljmp
cwtl
sbb
mov
jmp
jb
sarb
mov
mov
mov
shrb
out
cs
scas
pop
lret
dec
mov
and
add
enter
outsb
mov
sub
fwait
inc
pop
mov
dec
test
rorl
call
sahf
mov
bound
fdivs
fdivl
xor
jo
push
test
sub
mov
mov
icebp
das
rolb
les
adcl
push
fxch
or
outsl
ret
data16
loop
and
cmpsb
js
mov
mov
outsl
fs
cmp
fistpll
mov
scas
call
aam
dec
add
cmp
sub
xor
add
mov
push
jecxz
push
hlt
mov
jmp
test
pop
or
in
sub
pop
jno
insb
fisubrs
push
push
fldt
push
leave
or
dec
pop
mov
push
roll
vcvtsd2ss
dec
lret
mov
adc
add
ljmp
sti
jns
dec
adc
sbb
aad
and
sub
shlb
mov
pop
inc
repz
sbb
data16
cwtl
jb
pushf
into
xchg
stos
cs
inc
and
adc
mov
dec
rcrb
sub
scas
pop
into
sbb
sahf
inc
or
fs
jbe
mov
dec
movsl
shl
roll
loope
sbb
xchg
jno
push
test
lds
test
out
out
fistpl
add
jne
ror
outsb
add
fdivl
jmp
push
cmp
push
mov
imul
ffree
inc
pop
jmp
jns
in
add
rcrl
and
adc
mov
mov
jmp
cmp
or
negb
loop
jbe
out
mov
mov
lods
ljmp
sahf
xor
or
movsb
jo
scas
call
test
cmp
adc
rcr
int3
insl
ljmp
imul
stc
das
cli
xchg
fisubl
push
fcmove
idivb
pop
aam
jle
add
into
mov
les
stos
inc
sbb
dec
xorl
push
pop
aad
sbb
in
mov
idivl
add
stos
mov
and
adc
mov
decb
lahf
xchg
xor
xor
in
ret
jg
imul
mov
sbb
out
clc
and
lcall
std
jecxz
xor
test
add
cld
or
or
roll
iret
pop
jp
push
or
mov
orb
xor
in
test
adc
in
and
cmp
cmp
mov
jbe
mov
loop
in
jb
fucomi
xchg
sub
push
ss
sbb
pop
xchg
inc
inc
orl
dec
push
push
imul
fidivrl
inc
sub
xor
sub
adc
cli
jns
mov
or
cltd
and
adc
push
std
in
jp
cmp
insl
mov
pop
lock
jbe
iret
cmp
pop
fadds
add
mov
dec
popf
insb
orl
shrb
adc
jp
insb
cli
outsl
js
cmp
add
sbb
inc
frstpm(287
xchg
xor
lds
clc
or
ret
dec
outsb
jno
pop
sti
mov
pop
ja
inc
mov
js
bound
inc
dec
sub
jmp
sub
jo
mov
cmp
adcb
mov
out
mov
popf
dec
xor
sbbb
pop
fcomip
inc
push
dec
in
dec
lahf
arpl
cmp
das
ret
test
mov
outsw
xchg
xchg
xor
add
stos
rorl
fmull
pop
sbb
xor
xchg
cmp
aam
jle
fs
xchg
fisubrl
push
adc
out
int3
mov
lahf
push
or
dec
dec
add
xchg
dec
out
cmp
add
pop
pop
hlt
fcoms
add
ret
mov
sub
cmpb
sbb
inc
clc
or
popl
shrd
scas
shl
push
pushl
pop
subb
sub
or
inc
call
outsl
icebp
inc
dec
add
stos
repnz
and
add
push
pop
int
mov
mov
mov
mov
push
push
mov
in
int
xchg
aas
push
sub
inc
rcll
and
nop
aam
mov
imul
ja
xor
movsb
cmp
and
xchg
pop
rorl
movl
popa
pusha
pop
lea
fdivrs
insb
mov
push
sub
cmp
mov
pop
pop
mov
test
inc
mov
aaa
nop
mov
mov
pop
push
add
add
inc
in
daa
push
jno
lods
push
test
popa
add
pop
les
add
or
push
pop
test
mov
mov
or
jge
movsl
lods
sbb
lods
sbb
ret
mov
and
in
roll
or
pop
fdivr
insl
dec
mov
enter
pop
lret
enter
rorl
sub
dec
shlb
adc
popf
enter
addb
sub
mov
icebp
hlt
ljmp
add
push
fidivrl
inc
add
sbbb
push
mov
sub
sbb
cli
mov
jmp
cltd
or
push
scas
sbb
mov
xchg
cmpb
mov
mov
lret
xor
adc
add
div
add
inc
jmp
fsubr
sbb
ljmp
lea
fiaddl
mov
fcomps
and
adc
jge
pop
and
add
xor
aam
lods
sbb
incl
pop
lods
adc
cwtl
xor
mov
add
pop
jo
cmpsb
aam
daa
mov
xlat
push
fildl
addr16
adc
pop
jae
xchg
shl
hlt
mov
xchg
jl
in
mov
data16
fcom
and
pop
test
dec
cmpsb
sarb
add
sti
add
fwait
and
call
pop
lea
pop
and
adc
out
lret
mov
mov
push
sub
leave
shlb
sub
dec
jp
pop
jecxz
std
dec
ja
push
fwait
and
add
push
insb
pop
mov
or
clc
lcall
add
mov
mov
dec
mov
mov
aas
inc
mov
inc
mov
xor
pop
push
ss
xor
inc
stos
adc
xchg
mov
dec
aaa
sarl
mov
adc
mov
xorb
shll
xor
fdivp
pop
inc
jp
and
stos
mov
ljmp
sbb
test
mov
dec
push
xchg
and
jle
loope
sub
je
test
push
cmpsb
push
jle
test
sub
je
stos
add
or
or
jl
push
gs
lret
test
dec
lods
orl
insb
ret
xor
insb
inc
sub
or
test
push
lret
data16
in
fbstp
add
push
or
or
push
jp
loop
cmp
push
cwtl
or
jnp
push
ret
loopne
sti
mov
addb
add
adc
lock
lret
xor
push
xor
dec
or
xor
frstor
subb
iret
fdiv
jo
cld
cmpb
push
lret
cmp
add
mov
pusha
sbb
mov
and
mov
sbbb
insb
ljmp
mov
nop
fs
push
jge
mov
push
add
jl
ret
in
pop
inc
add
adc
cmp
shrl
out
icebp
fwait
sub
filds
das
int3
mov
popa
jge
xor
jecxz
aam
mov
mov
shr
jo
out
popa
dec
xchg
orl
sbb
mov
fwait
in
sub
mov
in
sub
add
pop
xlat
dec
jns
adc
and
add
bound
dec
lock
insb
dec
cli
push
mov
loopne,pt
clc
je
testb
inc
adc
push
cmp
ljmp
cmp
push
in
out
or
fists
sti
addr16
mov
or
out
mov
movl
sub
icebp
cmp
xchg
sbb
mov
nop
lcall
js
sti
movsl
mov
loop
and
mov
push
call
inc
jp
push
or
or
and
mov
inc
fisttpl
insl
mov
pop
push
mov
xor
pop
cld
mov
fwait
outsb
jbe
and
test
add
mov
ja
test
scas
mov
out
cmp
fwait
adc
pushf
jp
sbb
int3
sbb
lods
sbb
ss
movsb
fdivs
int
fcoms
sahf
adc
cld
sub
das
cmp
nop
inc
mov
add
pop
sbb
js
rolb
dec
repnz
test
mov
les
iret
cltd
mov
mov
add
add
repnz
jg
out
push
and
mov
jae
or
pop
insb
inc
out
aam
xor
push
rcrl
lds
es
jns
xchg
bound
ret
sbb
mov
xchg
cmove
push
ret
ljmp
or
adc
mov
push
push
jl
mov
mov
loop
cmpsb
lret
fmuls
mov
das
lock
push
les
jmp
out
popa
adc
lret
sub
dec
xchg
mov
jo
sbb
hlt
in
dec
mov
out
popa
stos
sub
sahf
xor
jno
or
fdiv
cmpsl
jle
addb
in
push
jl
xchg
cmp
push
xchg
mov
lea
push
cmpsb
adc
lock
arpl
into
in
fs
mov
pop
notb
rolb
mov
dec
xor
lret
loope
outsl
in
xlat
inc
leave
push
es
sbb
xor
sub
push
pop
test
mov
clc
pop
or
das
rorl
fsubrs
or
outsb
mov
mov
fwait
pop
loope
or
adc
lock
mov
pop
gs
dec
pop
je
stos
call
iret
push
dec
addl
sbb
adc
fiadds
fmuls
repnz
add
not
aaa
call
pop
push
sub
and
aas
push
xor
leave
mov
lock
pop
lock
nop
fwait
pop
push
and
adc
andl
inc
das
dec
dec
cld
dec
mov
pop
sbb
add
sbb
adc
sub
mov
test
pop
gs
jb
jge
enter
outsl
and
inc
pop
stos
cmpsb
cmp
das
insb
int3
dec
in
push
push
pop
add
in
inc
ret
call
push
mov
and
dec
mov
jg
test
dec
cmp
jge
jg
subb
in
pop
ret
ret
data16
orb
cmpl
add
jle
adcl
ljmp
addb
lock
sahf
cwtl
jle
subb
pusha
in
scas
adc
and
xchg
jmp
std
das
push
cmp
or
lcall
in
fidivs
xchg
les
test
or
and
adc
std
js
push
push
jp
add
xchg
inc
mov
cmp
jne
sub
shrb
inc
mov
cmp
shrb
sahf
push
jp
mov
sub
xor
sbb
sti
cwtl
mov
lahf
ja
xor
xchg
sbb
hlt
jle
pop
cwtl
mov
ljmp
outsb
dec
rcrl
jl
pusha
adc
add
out
ret
dec
xor
sbb
fisttpl
outsb
push
xlat
loop
sub
int3
sarl
ljmp
pushf
outsb
mov
or
repnz
cs
mov
subl
jl
aad
push
mov
push
daa
sbb
inc
cmp
test
cmpsl
fstpt
dec
inc
mov
cmp
clc
and
repnz
rcrb
dec
mov
push
jns
add
aam
inc
push
test
stos
mov
sbb
cli
jns
inc
push
mov
mov
orb
sub
mov
mov
roll
frstor
outsb
into
push
mov
push
lds
xlat
or
lretw
fcompl
mov
inc
into
arpl
fildl
or
inc
fldcw
shlb
mov
test
loop
lret
pop
pop
das
ret
mov
jno
aam
scas
mov
sbb
and
shl
mov
out
clc
xor
std
mov
outsl
cltd
mov
lds
fmul
popf
orb
out
dec
out
das
jae
into
push
movsb
movsb
test
adc
sub
lods
clc
enter
and
xlat
loope
sbb
shlb
pop
pop
ret
sub
sub
jecxz
dec
ficomps
adc
loop
mov
add
jle
cmpsb
stos
pushl
dec
add
sbb
stos
jmp
sub
data16
shll
and
pop
loop
lret
xor
push
inc
test
cli
push
mov
add
sub
test
sbb
mov
js
je
mov
jae
add
jns
adc
scas
icebp
out
adc
or
icebp
add
xchg
dec
inc
mov
xchg
push
and
mov
jo
out
in
incb
insl
dec
inc
xchg
leave
or
mov
data16
xor
push
mov
faddl
loope
outsb
sbb
mov
add
sbb
push
jo
pop
andl
pop
sub
sbb
and
imul
inc
cmp
lods
push
pop
sbb
out
mov
lret
data16
xchg
lcall
cli
cmpsb
sub
push
rclb
jbe
or
dec
adc
les
sub
or
jp
test
or
std
sub
add
xor
mov
push
loopne
mov
lods
test
inc
or
incb
add
push
pusha
cld
test
push
arpl
sub
fs
xchg
test
fcompl
mov
add
xlat
mov
jmp
inc
xchg
adc
xchg
loope
scas
call
sbb
mov
pop
push
sbb
push
aam
lret
dec
adc
andb
fs
outsb
xor
test
xchg
inc
xor
xchg
shrb
jl
iret
arpl
add
add
cltd
push
cld
sbbb
cli
adc
andb
push
sar
lods
clc
neg
push
and
ret
cmp
mov
data16
cmpsl
adc
mov
mov
outsb
sar
out
mov
bound
mov
push
sbb
cmc
pop
test
pop
test
js
mov
testb
cld
ss
fs
mov
adc
outsl
jp
test
lret
jb
into
leave
mov
push
rolb
in
jb
pop
push
sbb
scas
or
jo
iret
andb
xchg
pusha
xor
inc
cwtl
push
sbb
cld
inc
cmp
pop
sbb
cli
sbb
pop
cmpsl
scas
int3
das
and
aaa
rcrb
jbe
sbb
inc
jp
adc
sbb
dec
pmuludq
xor
or
ret
loopne
xchg
push
fs
leave
scas
mov
or
mov
clc
pusha
das
mov
mov
cmc
pop
jl
mov
and
clc
fwait
mov
add
add
bound
sbb
insb
cltd
fcoml
dec
or
in
cld
scas
xchg
and
lods
add
scas
pop
icebp
out
out
and
adc
inc
cwtl
mov
xchg
stos
add
jo
mov
clc
jo
imul
fistl
out
test
add
sbb
lcall
clc
sbb
sub
lret
fwait
int3
push
rcl
fistpll
ja
sbb
jg
loop
push
inc
mov
or
leave
jb
jmp
aaa
mov
leave
aam
gs
mov
int3
test
lock
pop
mov
dec
mov
fiaddl
test
lret
in
push
push
adc
cmp
call
les
stos
repnz
sbb
xchg
dec
push
sbb
outsl
push
dec
out
outsl
cmp
gs
or
dec
in
scas
inc
cmp
mov
sbb
add
lea
pop
push
and
push
mov
adc
popl
xor
pop
add
cs
jb
add
sbbl
shrl
pop
std
dec
xchg
fwait
daa
mov
push
std
mov
insb
incl
cmp
xor
lcall
adcl
xor
inc
stos
scas
mov
adc
sub
sbb
out
stos
shrb
push
xor
sbb
lcall
cwtl
inc
out
shlb
lahf
mov
test
test
push
or
cmp
sbb
cmp
pop
mov
xchg
jge
pop
push
repz
pop
in
dec
scas
test
bound
inc
xchg
xchg
inc
shrb
orl
inc
jnp
pop
into
mov
inc
xchg
or
xor
je
movsb
scas
xor
icebp
mov
inc
xor
lret
push
mov
hlt
inc
sahf
cmp
mov
fsubrl
inc
or
cmp
outsl
jbe
test
je
pop
je
pop
jo
jbe
loope
jp
jecxz
loop
in
stos
fisubrs
lret
shlb
mov
incb
loopne
mov
mov
pop
dec
in
sbb
push
shrl
rcrb
testl
int
ja
sbb
sahf
shrb
fbstp
mov
insb
lcall
lock
mov
sub
repz
prefetch
or
scas
push
jg
ljmp
mov
sub
sahf
jbe
sbb
aam
inc
scas
clc
pop
sar
xchg
mov
test
pop
das
idivl
movsl
shlb
lcall
repnz
cs
jecxz
std
sbb
stc
inc
xchg
or
mov
mov
pop
addl
fdivp
cmp
stos
inc
loopne
push
fistpll
mov
outsl
cmp
or
dec
aas
leave
scas
cmc
mov
sub
cmp
hlt
jg
and
stc
je
test
cmpsb
fwait
inc
ret
add
int3
bound
cmp
adcl
pop
scas
cmp
js
mov
add
lret
push
or
pop
rcrb
ret
xchg
sub
pop
jle
sub
push
lea
imulb
or
lds
xchg
inc
jg
in
jg
insl
add
js
xchg
call
stos
push
mov
mov
inc
jg
mov
call
xchg
repz
inc
imul
add
imul
add
adc
or
inc
rorl
test
lods
cwtl
or
loopne
ss
mov
push
lock
insl
adc
pop
ds
sub
std
aam
lret
je
mov
sahf
popf
inc
jl
xor
into
mov
lahf
dec
fstl
sub
mov
xchg
jl
and
push
popa
ret
call
loopne
test
sub
fidivl
int
jle
dec
test
pop
scas
add
clc
outsb
ret
lahf
add
push
in
ret
loopne
pop
icebp
xchg
add
mov
cmp
adc
mov
mov
push
cmp
add
pop
and
jl
in
int
cmp
sub
cmpsl
mov
fistpl
out
mov
lret
daa
jo
mov
mov
ret
addr16
lea
std
mov
add
jmp
sbb
out
push
pop
je
fs
loopne
mov
iret
pushf
roll
mov
push
adc
aam
xchg
push
adcl
jnp
mov
imul
xchg
arpl
enter
lcall
out
mov
mov
lock
add
xor
push
std
in
push
add
insl
lret
out
mov
mov
inc
cmp
fcmovnu
push
test
mov
lahf
int
add
dec
loope
pusha
mov
fists
jbe
sub
push
sbb
dec
in
rcr
cltd
push
test
cmpsb
mov
sub
or
and
lods
or
sti
mov
rcrl
mov
mov
cmp
jnp
sbb
mov
inc
js
testl
int3
cld
ss
data16
mov
mov
adc
mov
xchg
jb
add
mov
cmp
push
cmp
fsts
cltd
mov
sbbl
dec
and
pop
add
call
call
jno
stc
pop
std
sbb
insb
movsl
int
or
and
mov
and
mov
push
xor
adc
call
pushf
das
dec
pushf
push
sbb
je
stos
loope
or
das
sbb
push
push
sti
mov
adc
pusha
popa
mov
xor
andb
dec
ljmp
out
insl
xchg
push
cld
add
xchg
out
jg
pop
cmp
cmc
movsb
icebp
xor
and
cmp
daa
and
hlt
aas
std
scas
insb
mov
sbb
std
movsl
icebp
int3
push
cs
add
mov
stos
mov
pop
fsubr
addb
mov
cld
fdivp
testb
adc
add
xchg
push
and
sahf
fmull
jp
rcrb
mov
sbb
lods
xchg
lea
outsl
pop
push
rcll
mov
test
xchg
icebp
xchg
cmpsb
inc
scas
mov
and
jl
inc
add
add
or
pushf
stos
sahf
pop
add
addb
enter
addb
push
loope
dec
adc
iret
mov
push
sub
in
sahf
fstpt
mov
das
mov
cmp
sub
add
outsl
clc
push
loopne
lcall
push
fstpt
dec
mov
lds
ss
call
stos
fdivl
loop
loopne
add
sub
or
mov
je
push
lds
pop
div
inc
jbe
imul
mov
cmp
jmp
aas
rcl
xor
cmpsl
rol
enter
adcb
cmp
sbb
lahf
xchg
xchg
xchg
insb
jb
andb
in
rcrl
pop
xor
mov
mov
xchg
popa
jnp
rcrl
cmc
dec
mov
push
std
in
mov
mov
testb
test
ret
pop
add
lahf
daa
dec
mov
mov
sahf
mov
jge
lds
mov
mov
stos
cmp
in
imul
sbb
pop
imul
mov
jecxz
mov
data16
bound
dec
ja
negb
jne
add
adc
sbb
fidivrl
or
rclb
inc
mov
mov
add
inc
and
aam
mov
bound
push
stos
icebp
clc
sub
movl
arpl
adc
pusha
and
push
mov
mov
xchg
jb
sub
cmp
xchg
test
addb
ja
or
jle
aam
test
push
pusha
sbb
out
push
jle
jp
nop
add
test
ret
xor
pop
jne
jne
aad
add
pop
and
testb
inc
lahf
push
shrb
test
stos
dec
lret
testb
sub
ss
jb
dec
lahf
jno
ljmp
mov
xchg
xchg
test
sub
pop
movsl
xchg
mov
push
shlb
fimull
lds
imul
xchg
xor
cmp
jecxz
adc
test
jo
in
sahf
cmc
and
mov
out
call
aad
adc
lds
lretw
gs
aaa
dec
mov
add
enter
push
cmpsb
stos
ret
push
ret
pop
pop
hlt
iret
mov
mov
adc
pop
push
test
pushl
cmp
ret
aad
mov
sbb
push
xor
sub
xchg
das
ficomps
addl
push
jne
clc
divb
push
mov
cmp
pop
test
jnp
sarb
xor
insl
addl
push
in
test
pop
add
or
or
mov
lock
insb
xchg
fcompl
fidivl
sbb
push
daa
mov
int3
or
xor
fwait
lock
fstpl
inc
call
mov
outsl
mov
sbb
and
pop
sbb
sub
add
lods
xlat
jo
rcrl
loope
sahf
mov
dec
add
repnz
incl
push
fs
push
push
push
ror
negb
cmp
pusha
rolb
testb
inc
les
daa
loopne
fistps
cmp
inc
push
stos
mov
xor
imul
aam
daa
push
mov
mov
pop
xchg
inc
lock
mov
adc
nop
mov
mov
pop
insb
add
adc
lcall
or
xchg
xor
adc
in
pusha
inc
sbb
rorl
mov
jno
add
pop
loop
and
sub
or
fcoml
or
idivl
cmpsb
xlat
jp
fs
adc
and
mov
mov
cmp
out
sbb
ljmp
stos
xor
push
ss
into
and
push
pop
mov
sbb
test
xor
aam
adc
repnz
sbb
faddl
in
es
adc
jge
cwtl
inc
sub
sbb
cmc
sub
les
push
mov
es
fists
movsb
int
ja
mov
idivb
addl
bound
pop
call
insb
inc
xor
push
enter
jo
fwait
mov
movsb
push
stc
mov
add
inc
ret
mulb
leave
and
mov
js
xor
flds
addl
push
lods
sbb
insb
inc
and
mov
int
jbe
and
rorb
pop
sbb
std
divb
sbb
sbb
cmp
stos
sbb
subb
decl
push
adc
filds
inc
push
adc
jne
dec
mov
and
and
mov
js
lea
mov
pushf
orl
push
mov
pop
rorb
aas
push
xchg
andl
sbb
rcl
and
ja
arpl
xor
sbb
lret
in
xlat
outsb
mov
pop
push
or
scas
mov
imul
in
add
sub
aad
sbb
lcall
iret
pop
stos
push
mov
mov
push
aaa
test
incl
rol
mov
push
xchg
or
not
fs
adc
or
ljmp
mov
push
dec
pop
add
inc
fadd
mov
fldcw
call
xchg
leave
mov
mov
int3
hlt
les
out
icebp
movb
jmp
dec
mov
sub
add
and
ja
jecxz
mov
or
sbb
mov
mov
sbb
mov
push
enter
cmc
sub
inc
push
lahf
push
mov
test
jnp
fidivrl
aam
outsb
ret
cltd
pushf
add
imul
aaa
add
ret
and
cmp
inc
add
pop
adcb
pop
addl
xorb
push
xchg
jmp
sbb
je
in
sbb
addr16
loope
xchg
push
mov
cwtl
mov
inc
mov
out
js,pn
sbb
jae
pop
jbe
test
mov
push
jmp
into
scas
push
jno
fstpl
adc
std
jg
and
addl
or
cmp
adc
mulb
or
push
cmp
mov
add
in
aas
sarb
fs
or
jge
jo
test
inc
push
push
lcall
fwait
pop
enter
xchg
cmpb
dec
push
and
je
cmp
shrl
ss
les
inc
push
cld
fadds
cli
mov
loop
push
push
adc
test
dec
jp
mov
inc
rcll
pop
mul
sar
sarb
mov
lea
arpl
inc
out
mov
insb
jae
mov
xchg
or
push
in
xor
sbb
sub
nop
je
lods
shll
aam
jae
mov
call
stos
je
sub
add
sbb
popa
mov
xlat
lds
push
sub
inc
mov
sar
cmp
nop
cmp
xor
bound
inc
aad
rolb
mov
mov
outsb
mov
shlb
rclb
inc
mov
cmc
andl
les
and
cwtl
lods
add
test
mov
test
push
xlat
arpl
or
adc
push
add
test
pop
lods
xor
jle
xchg
jne
cmp
xchg
mov
or
jecxz
mov
pop
add
insb
stos
pop
mov
jb
ss
fmuls
inc
call
cltd
push
adc
xor
mov
mov
mov
pop
push
inc
pop
pusha
jg
xor
pop
jo
add
lods
sbb
xchg
ja
xchg
clc
cmpsb
cli
xor
push
pop
inc
sub
push
or
call
clc
push
pop
push
sti
or
loopne
ret
mov
add
inc
call
or
sahf
dec
ret
mov
cmc
add
xchg
inc
sbb
or
mov
ja
adcb
cmp
in
subb
cmc
xchg
pop
sbb
sbb
dec
pop
jmp
enter
mov
lock
xchg
and
pop
or
cmp
push
sahf
pop
nop
xchg
test
sub
xchg
adc
mov
sbb
popf
push
xor
push
sti
nop
xchg
sbb
mov
shlb
jle
lods
dec
jo
mov
cmp
mov
mov
scas
sbb
inc
mov
icebp
aad
adc
adcb
js
gs
call
lods
sub
mov
adc
lock
mov
jbe
or
cmp
xchg
and
lret
filds
mov
xchg
push
orl
fcoms
in
inc
hlt
dec
mov
das
and
jo
idiv
mov
fadds
lods
fisubrs
iret
add
cmp
rolb
fdivp
mov
push
mov
xor
cld
pop
int3
das
and
mov
pop
sub
mov
jmp
insb
add
add
inc
push
mov
dec
xor
je
and
loopne
adc
arpl
mov
fwait
mov
pop
aad
test
mov
push
stos
outsl
aas
sbb
sub
hlt
mov
fdivrs
sbb
sub
out
pop
push
ja
adc
dec
and
mov
lret
pop
hlt
pop
outsl
adc
push
movsb
jb
pop
jg
andb
fdiv
mov
orl
mov
testb
stos
loop
int
mov
mov
into
movsl
lret
push
pop
jb
repz
pop
sbb
lds
xor
testl
push
rol
test
sbb
aam
incl
fcompl
ret
jo
xor
xchg
mov
push
fxch
inc
inc
push
cli
mov
and
adc
clc
ss
lods
popa
add
xor
jle
cs
clc
adc
inc
jge
cs
xchg
paddb
fcomip
xchg
or
pop
sub
lret
pop
ss
outsb
sahf
inc
sbb
sub
scas
mov
icebp
pop
jo
fdiv
pop
cmp
clc
sbb
lods
sub
sbb
aam
fyl2x
mov
aad
adc
pusha
out
push
jge
outsb
adc
js
jle
inc
mov
lods
sbb
push
imul
inc
popa
movsl
and
cmpsb
pop
inc
sub
cmp
inc
jl
sub
or
sub
je
xor
xor
outsl
clc
pop
jmp
and
inc
js
add
dec
sbb
jae
cmpsl
fcomip
adc
dec
out
rol
dec
into
sarl
fstl
daa
ret
fdivs
test
fisttpl
repnz
adc
or
mov
add
lcall
push
int
adc
enter
rorb
rcrb
xchg
jmp
dec
push
cld
aam
sbb
jmp
pushf
dec
lret
xor
pop
or
sbb
mov
das
daa
mov
ficoml
fldl
pop
loope
pop
cmp
inc
add
sbbw
jmp
adc
dec
jbe
lret
jb
push
scas
mov
add
push
sub
addb
sar
stos
pop
hlt
mov
ljmp
dec
cld
es
jb
and
enter
into
in
ret
jg
sub
mov
push
ljmp
imul
xchg
stos
rolb
xor
pop
mov
xor
or
push
stos
xchg
lock
aad
dec
inc
cmp
pop
mov
pop
ja
add
loope,pn
mov
and
push
sbb
loop
popf
test
sbb
pop
xor
insl
mov
mov
enter
jnp
insb
imul
stos
adc
adc
or
popa
push
jnp
xchg
out
addr16
and
xchg
sbb
dec
ljmp
leave
jp
inc
inc
dec
inc
imul
or
outsl
clc
mov
xlat
fimuls
mov
jle
hlt
fs
popa
aad
decb
faddl
xacquire
dec
push
push
fisttps
or
hlt
fwait
lock
or
or
xchg
repnz
xchg
mov
scas
call
stos
inc
mov
xchg
mov
pushf
aad
jge
aad
add
rolb
pop
outsl
pop
inc
test
fldl
xor
jbe
clc
or
push
sub
add
repnz
ror
mov
xor
stc
lock
push
mov
fwait
sahf
stos
add
xor
jge
push
mov
loopne
loop
lods
sbb
subb
inc
xchg
xor
pushf
popf
xchg
maxps
sbb
or
loop
add
cmp
or
icebp
cltd
sahf
subb
cwtl
xchg
mov
cmp
xchg
inc
or
adc
push
repnz
inc
mov
cmpl
movsb
and
data16
outsb
jle
sbb
push
and
arpl
test
lret
sub
iret
sbb
cwtl
xchg
or
sub
adc
ret
xchg
cwtl
inc
loopne
in
sbb
inc
shrl
xchg
push
sub
sub
or
adc
dec
jl
cld
andl
jl
and
inc
inc
sbb
sbb
mov
cltd
int3
mov
sub
aad
sbb
xlat
push
enter
mov
enter
xchg
ret
pop
mov
cmp
and
js
inc
lods
pusha
mov
sbb
or
hlt
adc
adc
add
push
mov
add
mov
pop
lock
mov
pop
inc
xor
outsb
mov
test
mov
insb
std
jmp
jnp
jl
cmpsb
mov
in
out
add
pop
jecxz
movsb
addr16
ret
adc
inc
nop
and
inc
test
faddl
adc
and
into
out
mov
js
movsl
xchg
cmp
push
jecxz
dec
xor
fwait
add
icebp
scas
shrb
hlt
test
lret
int3
into
sub
inc
mov
nop
add
clc
mov
cmp
pop
inc
push
cmp
ljmp
pushf
stos
int
lock
loope
pop
mov
xchg
pop
outsl
push
adc
aam
inc
add
imul
mov
mov
outsb
cld
aaa
call
or
cli
inc
pop
int3
push
out
push
jecxz
lcall
loop
cmpsb
imul
into
rcl
fisttpl
inc
ds
xchg
add
cmc
sbb
loopne
popa
inc
test
pop
pop
ljmp
adc
xchg
outsl
xchg
cmp
mov
in
jne
cli
outsb
mov
or
outsb
mov
sti
cmp
jmp
pop
add
xor
out
or
in
inc
or
frstor
jp
pop
xor
int
or
out
push
nop
mov
addb
loopne
gs
mov
repz
and
les
je
clc
mov
cmp
fidivl
mov
shlb
lahf
xchg
enter
hlt
xor
push
ret
cmpsl
cmp
test
cmp
nop
aas
ds
push
dec
xchg
jp
adc
shrb
push
addb
sub
cmpsl
scas
sub
jg
sbb
js
pushf
cmp
lods
pop
mov
call
cmpsb
stos
mov
inc
pop
cli
ds
xchg
mov
xchg
insb
mov
jns
ss
js
sbb
sbb
mov
sbb
rcll
hlt
iret
inc
jno
and
daa
stos
imul
cmp
mov
dec
mov
lcall
orb
jbe
cwtl
sti
add
push
pop
adc
fdivl
or
sbb
test
call
sbb
sub
fistl
mov
mov
lock
mov
popa
divps
xor
xor
call
mov
mov
cmp
or
pushl
mov
lret
push
repnz
pop
xchg
xor
fsubp
xchg
jmp
xchg
roll
jb
jns
std
mov
stos
mov
push
in
xor
mov
xchg
inc
clc
sub
bound
push
stos
jbe
add
adc
sbb
stos
loop
hlt
pop
shlb
xor
push
pop
push
and
lock
inc
and
in
mov
push
jno
xor
mov
repnz
xorb
inc
push
add
and
cmp
adc
filds
aam
dec
call
scas
xchg
ret
nop
jo
imul
push
mov
sti
add
mov
test
mov
lock
pop
inc
icebp
mov
shll
shlb
shrb
lcall
std
cmpsb
scas
call
bnd
shr
or
xlat
fildl
and
mov
jbe
jns
inc
mov
and
sbb
hlt
fcomip
std
imul
xor
fistl
mov
sub
scas
repz
push
pop
add
shl
rcrl
fmul
add
push
dec
fwait
stos
push
mov
push
adc
xor
sbb
in
adc
hlt
repnz
and
push
mov
mov
repnz
incb
pop
mov
mov
pusha
mov
clc
adc
or
jp
sarl
sub
cmpsl
mov
movsb
inc
jns
arpl
es
push
sbb
lock
shrb
or
addl
push
mov
aam
mov
fstpt
icebp
loop
pop
jnp
push
cwtl
adc
add
mov
jns
mov
push
pop
data16
push
mov
test
xchg
push
xchg
pop
push
loope
sbb
iret
sbb
inc
jnp
adc
xor
inc
insl
test
lret
loop
push
aaa
test
rcl
sbb
in
aas
rcl
mov
aaa
add
mov
aas
clc
rcr
stos
xchg
or
xor
movsl
aaa
loopne
sub
add
orb
loopne
out
call
lmsw
push
adcb
pop
pop
xchg
dec
lock
push
inc
addr16
jl
sub
and
push
aam
mov
test
pop
clc
mov
lds
fidivs
jecxz
sub
adc
add
adc
fbld
lock
flds
cltd
adc
add
inc
jmp
pop
incb
sbb
jge
icebp
sarb
shll
push
xor
mov
outsb
fmul
xor
inc
jp
mov
push
pop
xchg
xchg
pop
push
push
aam
test
add
lock
mov
test
fwait
testb
push
sub
in
push
mov
mov
mov
scas
aad
push
aam
pop
jp
ss
dec
loop
ljmp
cmp
hlt
or
test
sahf
or
mov
aaa
jl
push
stos
lcall
sbb
outsl
loope
ljmp
loop
xchg
std
pop
mov
mov
jo
mov
js
insb
sbb
xchg
inc
mov
fsubl
jbe
mov
out
xchg
xlat
rcr
mov
pop
icebp
inc
mov
in
pop
mov
sti
fbstp
in
into
test
and
push
mov
orl
xor
fdivrl
pop
inc
stc
enter
add
popa
fiadds
es
or
aam
ja
inc
mov
es
cltd
sti
dec
and
scas
fcmovbe
aaa
fnsave
cwtl
es
sub
xor
out
into
je
add
push
sub
ffree
inc
test
mov
cmp
sbb
xor
lock
or
leave
inc
insb
sbb
cmpsb
sub
push
xchg
sbb
mov
or
rol
je
lret
aam
ret
add
pop
aam
mov
mov
or
mov
cli
lcall
outsl
jmp
cmpsb
lods
mov
mov
jbe
add
cmp
insb
jl
sub
in
sub
mov
mov
cmp
mov
mov
sbb
jnp
lock
call
xchg
lods
mov
fwait
lock
push
mov
in
insl
and
add
adc
mov
addr16
loop
sbb
mov
xor
sbb
das
pop
pop
xorb
ja
subl
inc
scas
fdivrs
pop
push
sti
dec
jo
test
pop
inc
and
add
jecxz
adc
mov
std
stos
and
mov
inc
divb
in
fbstp
enter
pop
pop
rclb
mov
mov
mov
mov
push
and
xchg
push
out
cmp
cmp
enter
push
das
repz
or
mov
mov
out
and
adc
add
insl
sar
or
das
cmp
cmpsl
push
cs
jno
sahf
mov
add
fldenv
out
cwtl
xchg
lret
pop
jge
and
subb
sbb
cmc
pop
and
mov
jecxz
cmp
xor
pop
lret
xchg
stos
mov
mov
mov
sbb
and
loop
dec
rorw
adc
out
ret
add
sbb
dec
adc
mov
add
inc
jg
xor
sbb
shl
jb
mov
cmpsb
stos
insb
sbb
xchg
add
repnz
dec
arpl
shll
popa
jmp
cmp
neg
push
insl
mov
push
adc
or
add
loopne
push
cmp
xor
imul
or
pop
inc
dec
rcl
ljmp
mov
or
xchg
jne
repz
enter
adc
mov
sub
jg
ja
sti
outsl
std
push
aam
int3
push
xchg
test
adc
imulb
lahf
fisubl
jle
fildl
pop
outsb
push
lahf
sbb
mov
push
push
repz
mov
pop
int
inc
push
rolb
cmp
ret
jp
aas
fcmovbe
in
imul
xchg
cli
ljmp
outsb
cmp
fsubs
inc
loop
and
inc
jl
dec
sbb
pop
mov
daa
outsl
ret
out
sbb
sub
xlat
orl
and
js
inc
inc
lds
pop
ss
shl
jbe
add
inc
mov
jo
iret
jae
pop
push
dec
mov
or
idivb
mov
mov
aas
pusha
push
xchg
mov
out
pop
lock
inc
jae
fsubrp
dec
pushf
js
nop
sbb
stos
inc
adc
aam
ljmp
jb
push
jmp
fwait
sbb
push
or
jmp
out
xchg
test
je
stos
mov
ficompl
and
add
fidivs
repnz
or
mov
lods
mov
dec
pop
lods
ret
xchg
jo
loope
add
ljmp
lret
mov
popf
mov
or
addr16
and
add
or
icebp
jo
dec
loopne
in
add
mov
push
adc
or
jne
pusha
sub
cmp
clc
subb
inc
daa
mov
data16
xor
sub
xor
mov
mov
jo
cmp
insl
jo
cwtl
cmp
clc
jl
out
mov
mov
pop
mov
lods
dec
or
adc
or
cld
push
mov
outsl
jno
test
lods
sbb
add
test
or
dec
and
and
test
insl
push
lods
jb
rcll
mov
mov
adc
mov
movsl
imul
cmpsb
jecxz
pushf
clc
or
mov
inc
je
add
incb
mov
mov
pop
xchg
test
jle
sub
mov
push
push
xchg
mov
mov
fnstcw
in
mov
pop
aam
jl
jmp
inc
incl
fdivl
pop
lcall
pop
and
call
es
add
inc
sbb
cmpb
and
xchg
cmp
inc
pop
adc
rcrl
les
fadds
xchg
xchg
insl
xor
into
int3
or
jb
clc
and
lret
or
adcb
cmp
ror
in
mov
int3
jecxz
bound
aaa
sub
ds
jo
mov
in
inc
cwtl
sbb
jbe
rolb
test
push
add
mov
test
in
cmp
enter
add
mov
fcmove
stos
mov
hlt
mov
or
sub
je
adc
cwtl
and
sbb
addb
pop
push
mov
loop
inc
xchg
xchg
push
lret
fldenv
shl
fildl
ret
bound
push
pop
push
push
inc
sahf
mov
mov
mov
lret
push
clc
xor
push
sub
sar
andw
xor
and
jbe
mov
push
and
mov
mov
add
les
mov
jp
mov
or
sbb
fcompl
js
loope
in
stos
dec
sbb
adc
add
xchg
lods
icebp
or
or
mov
and
pop
lahf
loope
sbb
jmp
mov
and
in
test
inc
push
je
dec
adc
faddl
mov
iret
notb
aam
or
loop
test
push
mov
add
scas
pop
mov
pop
out
hlt
xchg
icebp
sahf
gs
test
mov
cs
sub
or
mov
addr16
test
mov
ret
sub
call
mov
mov
daa
adc
jo
push
cwtl
push
pushf
and
push
push
mov
dec
mov
sub
test
mov
or
lret
xlat
jg
push
addr16
jl
in
jb
insb
add
clc
insl
shll
hlt
andb
repz
sub
xchg
pop
mov
adc
sub
mov
rcr
call
push
loop
sbb
int
and
aaa
mov
les
xchg
add
loopne
push
test
pop
lds
std
fldl
or
inc
bound
add
loopne
subl
xor
inc
or
and
pop
mov
je
inc
cmpsl
or
loop
cmpsl
sarb
mov
sti
outsb
mov
jp
add
sub
pop
ret
lea
in
shll
inc
mov
outsl
push
adc
ss
or
push
mov
or
inc
pop
in
add
das
rcll
mov
and
cmp
mov
jmp
inc
jns
decb
jb
test
icebp
loop
stc
nop
cmp
cwtl
pop
mulb
adcb
xchg
lcall
jge
add
xchg
inc
mov
out
mov
add
repz
bound
add
adc
dec
into
mov
into
shr
cmp
ret
jp
push
mov
add
cmp
inc
lahf
xor
inc
inc
sar
loop
test
pop
ret
mov
mov
push
cli
sarl
sbb
enter
add
aam
add
in
push
inc
ret
mov
adc
aam
jno
push
push
cmp
mov
dec
push
scas
fdivrl
int3
dec
cld
ret
outsb
rorl
ljmp
jne
out
fsubrl
mov
sub
add
je
ss
js
sbb
pop
sub
jbe
push
pop
mov
insl
popa
mov
icebp
ret
mov
pusha
push
xchg
loop
sbb
lods
push
jmp
mov
push
pushf
adc
bound
std
inc
adc
mov
push
clc
mov
dec
fdivs
mov
js
jb
cmpb
outsl
je
inc
xor
sbb
pop
lcall
lds
nop
into
lock
sub
enter
ljmp
inc
add
jae
xor
mov
xor
adc
ljmp
aam
das
cmpsb
scas
xchg
push
lcall
mov
andl
insb
sarl
sbb
int3
mov
dec
cli
cmpsb
subl
ds
sub
mov
rolb
or
xorb
pop
test
jecxz
iret
mov
addr16
enter
and
dec
outsl
mov
mov
out
pop
outsl
cli
push
dec
cmpsl
in
jbe
inc
sub
lcall
pop
cmc
add
outsb
jge
dec
xchg
mov
jnp
cmpsl
je
mov
call
add
call
out
adc
mov
shll
dec
add
lcall
mov
ds
push
cmp
xlat
dec
aaa
jb
iret
add
add
jbe
xchg
mov
cmpsl
lock
hlt
jbe
lods
adc
or
lods
ljmp
scas
mov
mov
lods
stos
jge
es
pop
add
xchg
mov
add
mov
jae
xchg
lea
dec
test
fcmovnb
dec
loopne
stos
mov
mov
sbb
dec
rcrb
xchg
rclb
sub
mov
loope
lods
ret
xchg
aad
aad
orl
fcmovb
lahf
or
fisubrs
push
lret
fldenv
inc
mov
es
subb
mov
outsb
pop
loope
push
dec
sbb
mov
in
jp
mov
xchg
mov
or
push
rolb
addr16
sbb
mov
push
dec
data16
mov
adc
test
lea
in
nop
sarb
cmp
sahf
pop
xchg
stos
mov
lods
jecxz
sub
adc
jle
jge
fdiv
push
jl
ljmp
movl
xor
test
repz
aam
mov
pop
mov
dec
rcrb
jg
into
jecxz
adc
stc
lcall
imul
cmp
sbbl
ror
jnp
out
push
in
rclb
mov
cli
pop
cmp
xor
sbb
mov
mov
pop
mov
pusha
es
cmpsb
jg
fbstp
mov
mov
jb
insb
add
ss
mov
decl
inc
fwait
sbbl
xor
inc
andb
sahf
or
ss
jno
mov
rorl
push
fildll
dec
xor
insl
fmuls
rcl
and
inc
rcrl
sub
data16
test
mov
pop
xchg
xchg
leave
out
test
test
roll
mov
test
adcb
mov
sub
cvttps2pi
out
adc
bound
cld
jmp
aad
mov
js
fdivrs
mov
mov
sbb
aam
fs
jno
ds
sbb
xlat
scas
imul
add
push
sub
les
push
orl
loopne
das
jmp
aaa
xlat
outsb
inc
je
fisttpl
jmp
or
loopne
cld
bound
hlt
push
test
mov
fbld
in
or
jmp
add
hlt
add
inc
sar
inc
nop
mov
jae
fisttps
ror
out
push
sbb
push
sub
jg
call
mov
testb
fdivp
les
test
add
xchg
xor
scas
push
push
jl
xchg
outsl
lods
xchg
dec
cmp
repnz
lock
idivb
mov
mov
xchg
inc
clc
sbb
lea
pop
jbe,pn
in
mov
shl
jle
xchg
popa
shl
nop
xchg
push
xchg
rolb
sub
jl
ja
inc
out
insl
jb
push
subl
inc
add
push
dec
xor
js
scas
loop
popa
xchg
cld
scas
dec
adc
and
sbb
push
std
xchg
ss
pop
push
sub
sbb
add
rclb
jbe
pop
push
sti
inc
cli
rolb
xor
sti
dec
mov
add
mov
sbb
out
rcll
leave
jmp
add
xchg
sub
xor
add
outsb
arpl
scas
jo
fdivr
int3
adc
mov
fdivrl
sub
lret
repnz
repz
sbb
fistps
mov
add
clc
cwtl
ljmp
pop
jbe
lods
cwtl
xchg
les
add
and
es
cli
pop
push
movsb
aad
sub
adc
jmp
inc
les
mov
and
in
test
xchg
mov
int3
mov
mov
push
and
in
mov
jp
les
test
testb
loope
jno
pop
stos
inc
cmp
or
mov
dec
mov
out
mov
cmp
ljmp
movsb
test
mov
add
dec
pop
js
add
cltd
or
jo
add
adc
jne
jae
je
mov
idivb
pop
push
outsb
sbb
add
xchg
add
inc
loop
sbb
dec
adc
pop
sbb
shrb
sbb
enter
stos
loope
inc
xor
adc
rolb
lcall
icebp
jg
adc
xor
dec
fldln2
cmpl
sbb
in
sub
jp
push
mov
ds
rol
or
cmp
loop
cmp
lcall
pop
sbb
adc
cli
in
data16
or
addr16
lods
mov
push
cmp
ds
outsl
js
lcall
pop
inc
mov
cmpl
enter
test
add
pop
out
clc
push
arpl
jbe
pop
loopne
fadds
insl
fildll
mov
xchg
clc
out
sbbb
push
aad
out
dec
cltd
cmp
into
jg
ret
stos
in
mov
push
divb
stos
jg
test
pop
and
fmulp
imul
ret
stos
pop
pop
dec
xor
arpl
sbb
pop
pop
imul
jno
inc
cli
mov
xchg
mov
test
push
jecxz,pt
stos
dec
in
inc
cmp
insl
dec
and
push
jne
pop
push
js
push
push
clc
mov
pop
or
dec
xor
movsb
mov
cmp
mov
adc
xor
dec
les
dec
dec
les
fwait
push
enter
cmp
mov
xchg
mov
rolb
push
adc
lret
jecxz
push
and
pusha
ds
adc
dec
shll
dec
xor
jmp
jge
fsubl
and
and
loop
adc
mov
add
and
sub
clc
mov
repnz
les
mov
fisubs
les
push
and
cmp
push
clc
cli
in
xor
push
test
push
or
dec
push
rolb
sti
and
pop
mov
ret
nop
and
sbb
pop
insb
test
xchg
pminub
stc
nop
mov
ds
sbb
int
xchg
sti
sbb
mov
dec
jg
imul
rcr
jo
outsl
add
mov
push
xchg
push
dec
jg
mov
mov
cmc
mov
mov
rcrl
or
xchg
js
and
inc
int
push
pop
fiadds
sti
popf
test
add
mov
mov
mov
aad
fsubrp
lods
push
lcall
scas
push
ret
jg
adcb
icebp
adc
call
xchg
or
jne
xor
or
addr16
mov
cmp
das
mov
add
pop
add
inc
mov
xchg
stos
or
pop
sbbl
sbb
xchg
imul
jae
xor
lds
mov
dec
or
push
or
js
loop
outsl
or
std
loopne
clc
cmp
or
fildll
sti
decl
cmpsl
adc
xchg
and
add
addl
sub
inc
pop
and
mov
push
in
les
mov
fimull
shl
and
aam
subl
inc
and
dec
js
icebp
mov
dec
js
testb
inc
push
dec
fdivl
cld
ljmp
mov
testb
adc
rcrl
ficoms
clc
xchg
pop
mov
mov
cmp
push
add
lds
loop
sbb
lds
clc
aam
push
aas
mov
fistpll
call
call
aam
pop
scas
in
xor
mov
jbe
and
stos
mov
outsl
pop
mov
insl
mov
mov
jp
bound
cltd
test
dec
ja
out
fadds
cmp
repnz
cmp
repz
push
cld
shr
or
adc
sbb
dec
inc
mov
dec
push
fildl
shll
hlt
xchg
and
adcl
shlb
mov
out
lock
incb
jno
cmp
cltd
pop
out
scas
iret
xchg
pop
mov
or
shrl
mov
mov
cwtl
loope
out
sub
inc
jmp
stc
mov
jnp
dec
imul
adc
adc
mov
and
add
test
aad
scas
scas
lret
inc
shlb
add
add
test
xchg
inc
test
inc
mov
cltd
adc
sbbl
ds
in
fdiv
inc
mov
pop
ljmp
push
jle
add
movsb
push
je
adc
and
loopne
fimuls
je
inc
call
pop
and
data16
pop
mov
pop
and
lds
test
sub
fistps
mov
jle
call
jl
sahf
mov
ljmp
shll
and
jle
mov
js
and
xor
out
in
js
push
push
fbstp
mov
test
loopne
inc
inc
and
test
and
jecxz
adcb
mov
sar
mov
lods
mov
sbb
cmp
fcomi
lret
movsb
test
add
adc
outsb
ret
push
aas
cmp
daa
imulb
fimull
das
push
data16
or
push
sti
outsb
roll
cmp
cmp
mov
jnp
cmp
lods
js
mov
fcomip
in
dec
ffree
aam
sub
les
fstl
les
xchg
insl
clc
ja
pushf
repz
push
or
and
daa
cld
push
jl
push
lds
fnstcw
cmpsb
sarb
stos
aad
adc
outsb
mov
jp
cld
negb
stc
repnz
cli
inc
adc
test
roll
stos
push
adc
sbb
and
nop
or
mov
jb
adc
inc
popf
jg
pop
cwtl
jl
nop
pop
sub
int3
pop
add
or
lret
inc
incl
movsl
jb
cmp
add
or
lcall
pusha
adc
aas
data16
loopne
ds
sbb
xor
mov
push
pop
popf
repnz
rorl
cli
incl
pop
sub
mov
xchg
add
and
or
push
inc
push
lds
dec
xor
mov
imul
cmp
outsb
clc
add
in
aam
mulb
lods
mov
xor
fmul
in
jbe
cmpsl
jb
jge
xchg
push
enter
adc
jmp
jbe
mov
jne
je
mov
inc
or
pusha
lock
popa
call
sbb
mov
inc
cld
mov
push
subl
add
sti
fisubl
sbb
pop
mov
cmp
mov
xor
jb
rcrb
mov
pop
iret
movsb
cmpsb
cmp
pop
in
xor
and
jle
push
ss
xchg
dec
add
lds
jb
xor
or
push
test
out
or
push
outsb
loop
fimull
push
xchg
aad
mov
xor
mov
sbb
push
mov
in
ja
jecxz
dec
inc
dec
movsl
cmp
sub
cwtl
adc
andb
push
ffreep
sarl
jne
jle
int3
or
out
or
mov
xchg
cld
jne
and
shl
fildl
clc
dec
push
dec
inc
dec
jle
mov
loop
mov
jp
lock
adc
xchg
test
push
enter
test
or
cli
cltd
ss
out
pop
loopne
adc
test
shrl
aam
xor
dec
push
insb
mov
into
pop
pop
pop
pop
cmp
fdivs
arpl
ds
xor
inc
mov
fisttpll
add
mov
mov
or
dec
push
out
xlat
add
add
push
aas
inc
filds
rorb
pop
data16
or
sbb
arpl
mov
int3
jns
jmp
and
xchg
int3
ret
sbb
rclb
sbb
es
data16
push
sbb
cltd
adc
repz
pop
imulb
sarb
fisttpl
pusha
dec
shl
rcrb
add
es
cmp
cmpsl
adc
jle
mov
jge
inc
hlt
add
xchg
rclb
dec
int3
adc
loope
sbb
je
mov
jnp
add
mov
test
insb
jge
xchg
push
jmp
inc
adc
mov
push
dec
add
add
sar
add
daa
mov
add
inc
ss
sbb
fsubs
nop
sbb
test
inc
add
js
iret
xchg
add
fdivp
and
dec
push
imul
lods
nop
subb
lahf
adc
rol
mov
mov
push
out
mov
decl
xorb
push
mov
fsubrs
add
inc
test
mov
inc
sbb
jle
jne
inc
xchg
lock
xor
push
and
js
xchg
cwtl
rcl
sub
adc
sbb
add
pop
sub
inc
shrl
fisttpl
add
push
smsw
sarb
cmp
test
jl
or
cmp
test
call
xor
mov
mov
mov
cmpl
xor
sbb
test
fnsave
test
push
fidivrl
mov
outsl
push
add
sbb
fnstcw
jle
sti
test
cmp
fistpll
pop
cwtl
inc
mov
test
push
adc
add
loopne
lret
push
inc
mov
cld
pop
xor
jecxz
test
inc
cmc
in
mov
pop
orb
cmp
xor
sbb
add
popf
add
inc
pop
or
add
and
jmp
mov
jb
fs
and
call
mov
and
bound
loopne
or
out
fimull
mov
faddl
shrl
lods
lcall
xchg
cmp
loop
scas
jb
out
adc
rorb
ds
in
in
dec
xchg
and
or
lahf
shlb
rcrl
stc
xor
fidivrl
add
lcall
ds
pop
sbbb
cmpb
hlt
dec
sbb
daa
pop
sbb
ja
inc
jp
cmp
mov
push
cmp
roll
dec
push
aad
add
stc
stos
xchg
add
pop
pop
adc
cmp
mov
mov
stc
push
hlt
push
xchg
cmp
dec
add
call
mov
cwtl
or
ja
mov
push
aaa
out
in
push
test
sbb
outsb
sub
pop
repz
icebp
xchg
rorb
jmp
pop
jge
inc
fistpll
lock
repz
inc
lcall
aad
push
mov
icebp
ds
mov
mov
add
pusha
and
xchg
lret
dec
mov
lods
inc
cltd
inc
add
xor
outsb
sub
adc
push
adc
mov
pop
xchg
mov
movsl
insl
add
add
mov
fsubs
adc
adc
cmc
add
inc
or
fldenv
test
sbb
cld
jbe
rcll
dec
aaa
adc
jle
std
outsl
sub
shl
lock
push
adc
mov
pop
aam
inc
xchg
pop
mov
bound
xchg
enter
divb
mov
xchg
pop
and
cld
imulb
cld
inc
icebp
xchg
pop
adc
and
into
mov
add
bswap
sbb
sbb
or
insl
mov
out
dec
pop
push
pushf
cmp
scas
sbb
and
inc
cmp
cmpsb
stos
es
sarb
bound
mov
pushf
data16
std
mov
test
or
pop
and
mov
dec
adc
das
clc
lcall
call
mov
push
and
fsubl
pop
cmp
in
sahf
in
mov
push
add
adc
dec
lds
out
scas
cli
je
pusha
pop
mov
cld
mov
adc
aad
std
rcrb
dec
inc
cmp
loopne
lock
fcomip
pop
stc
jle
pushf
repz
xor
mov
xchg
jb
jg
push
sub
or
xor
mov
add
add
stos
lds
mov
fnstsw
sbb
pusha
lds
insl
rorl
jne
lcall
or
pop
push
out
cld
das
mov
and
lcall
lret
call
or
rcr
mull
xchg
xor
ljmp
pop
sub
lods
jmp
inc
push
dec
fdiv
call
pop
subb
sti
mov
mov
jns
lahf
xlat
adc
mov
adc
in
push
pop
enter
dec
hlt
loop
imul
and
pop
aas
decb
mov
lahf
sarb
add
lods
inc
mov
add
stos
sbb
aam
lock
or
push
int
pop
sbb
cmpsl
push
push
add
add
add
push
inc
imul
jno
mov
push
lods
imul
mov
add
mov
jecxz
dec
mov
movsl
mov
pop
aam
cmpsb
fisttpl
inc
test
mov
int
dec
xor
out
mov
cs
add
rol
mov
fisttpll
icebp
xlat
push
scas
ret
cmpsl
inc
pop
lock
pushf
sub
inc
sub
insb
outsb
fstpl
dec
popf
loop
push
loop
cmpsl
pop
insl
xlat
xchg
mov
sbb
sti
nop
mov
es
lock
or
aam
add
push
xor
fists
and
mov
ret
mov
or
mov
xchg
stc
push
std
loop
jno
or
loopne
push
sub
adc
bound
in
push
inc
dec
xchg
mov
mov
mov
jnp
pop
inc
int3
cmp
xchg
add
sub
jp
frstor
or
adc
xor
sub
rcl
pop
adc
dec
xchg
jbe
push
out
in
mov
mov
inc
ret
and
pop
adc
mov
loopne
les
fmuls
push
imul
mov
imul
inc
mov
cmp
pop
fiaddl
xchg
into
and
outsb
inc
lds
adc
fwait
push
mov
sbb
fwait
or
dec
or
call
gs
adc
mov
adc
cwtl
ret
rcrl
pop
xchg
test
add
mov
push
aam
jbe
sbb
js
lock
ljmp
mov
jbe
inc
cld
scas
inc
xchg
mov
sub
rcll
xchg
cmp
push
std
std
ljmp
aad
ja
adc
xor
call
jl
inc
cwtl
inc
cmc
aas
pop
xorb
stos
int3
popa
cmp
xchg
dec
or
or
push
push
jne
sarl
sbbb
cld
in
mov
sub
enter
add
add
cli
fwait
cs
inc
pop
insb
cmp
mov
sub
xchg
subb
repnz
or
outsl
adcb
lea
and
fwait
push
repnz
lcall
pusha
jecxz
pop
xor
test
leave
mov
inc
pop
or
xchg
hlt
mov
lret
pop
cld
dec
insb
pop
lock
test
mov
mov
cmpsb
mov
push
mov
mov
lock
ret
jg
int3
not
shll
jb
pop
sub
sub
dec
or
lret
cmpsl
shrb
jne
inc
mov
cmp
cmp
push
orb
dec
adc
imul
pop
mov
mov
int
jge
out
add
mov
xorb
test
pop
fs
add
mov
add
inc
test
add
scas
mov
pushf
out
and
ret
and
stc
xchg
add
cmp
repnz
popa
das
ret
mov
jl
cmc
inc
das
jmp
in
idivb
mov
in
cmpl
and
decl
ret
dec
ret
cld
mov
fwait
sbb
pop
rcll
bound
xchg
adc
sbb
push
movsl
xor
mov
subl
jns
push
jbe
pop
fs
loope
xchg
inc
xor
xlat
or
aaa
jecxz
jbe
mov
inc
jge
sbb
scas
cmp
add
repnz
sub
xchg
js
shll
cmp
aad
adc
jecxz
jmp
mov
lret
mov
adc
fcoml
loope
dec
xlat
add
or
add
pop
jge
mov
bound
lcall
mov
jo
fiadds
xchg
inc
ret
and
mov
pop
test
scas
imul
mov
int
mov
in
xor
aad
add
scas
shl
adc
push
dec
mov
xchg
lods
fldt
adc
xchg
jg
push
add
out
jbe
adc
xor
aaa
mov
dec
sbb
add
sub
lcall
jbe
and
shll
enter
xchg
inc
mov
cld
inc
add
inc
jno
cmp
dec
mov
push
out
out
pop
sbb
mov
loopne
push
xor
mov
sbbb
mov
popa
xchg
or
in
and
ficoml
sbb
mov
or
xchg
push
pop
and
lock
sbb
xchg
mov
cli
insl
mov
sbb
xor
jle
or
lcall
std
add
stos
mov
push
gs
test
in
jg
jo
push
jb
bnd
pop
cmp
inc
xor
lock
adc
mov
bound
sub
out
lods
les
xchg
lock
dec
add
imul
mov
rolb
mov
mov
add
push
mov
jne
xor
inc
push
mov
xor
sub
dec
lock
pop
popa
lods
push
xchg
jp
loop
and
push
or
or
or
lock
in
js
push
and
test
imulb
test
add
daa
hlt
test
and
jge
xor
in
xorl
pusha
xor
pop
enter
sub
jno
or
out
push
jp,pt
inc
adcb
imul
les
cmp
cld
mov
mov
aaa
sbb
mov
jl
fists
add
xor
loopne
ljmp
fcomi
add
add
test
inc
sub
pop
repnz
push
cmp
push
pop
sub
das
mov
in
mov
ja
cwtl
into
aam
into
push
mov
push
aam
out
mov
fsubs
mov
mov
mov
sbb
add
mov
arpl
dec
call
pop
add
cmp
xchg
add
and
jmp
lret
lret
test
test
push
sub
inc
fldt
rorb
sahf
sbb
lods
imul
or
ja
adc
inc
out
xchg
jle
jb
and
lock
sarb
rol
pop
pop
adc
or
scas
pop
mov
xchg
inc
jge
inc
adc
std
push
hlt
idivb
mov
xchg
mov
cmp
lods
repnz
lahf
fldcw
xchg
jbe
jg
sub
jb
lds
mulb
mov
scas
negl
sub
adc
mov
fdiv
adc
rcl
cmp
ljmp
aam
mov
stos
stos
sbb
mov
into
loopne
loopne
cld
jno
add
inc
mov
lret
repz
in
mov
or
test
orb
mov
test
inc
iret
add
sub
pop
jne
fcomps
mov
push
or
pop
add
push
push
ljmp
adc
xchg
inc
pop
popa
sbb
mov
cmp
pop
push
and
push
xchg
orl
jg
adcb
loope
mov
mov
pop
fildl
cmp
sub
jle
pop
call
or
mov
push
push
xchg
pop
lock
cmpsb
pop
js
adc
rcrl
aad
dec
fs
scas
cmp
pop
js
daa
jle
cmp
jo
and
icebp
mov
lock
dec
jmp
jae
int
push
fdivr
call
insb
call
or
push
in
push
cmp
xchg
add
dec
mov
xchg
dec
ss
jae
test
cmpsl
push
inc
loop
push
call
das
mov
scas
add
push
jo
push
cwtl
sbb
shl
pop
add
incb
inc
or
push
mov
dec
sbb
repz
out
and
pop
cmp
add
jg
add
aam
testl
into
adc
pop
or
rcrl
add
jmp
jo
push
push
rcr
jg
jecxz
cmp
push
push
ja
cmp
fidivl
cmpsl
push
adc
mov
push
pop
enter
push
and
das
sub
mov
cmp
push
cld
enter
mov
xchg
add
in
jl
sub
jl
mov
fiaddl
cwtl
mov
or
pop
pop
repnz
pop
dec
cli
mov
push
lock
data16
in
insb
insb
sbb
out
adc
lods
jg
loopne
sti
dec
test
movsb
rcr
add
fsts
add
dec
dec
jae
mov
cmpsb
jmp
ljmp
addl
inc
sahf
out
inc
mov
sbb
nop
jbe
mov
xor
xchg
add
insb
into
jp
ret
mov
pop
je
mov
pushf
outsl
test
ficoms
in
call
adc
mov
sub
imul
in
mov
or
push
sub
outsl
clc
das
or
push
add
mov
sahf
jns
repnz
xchg
jb
stos
jg
sub
or
pusha
jl,pt
dec
or
stos
add
daa
push
mov
jb
push
inc
test
add
and
stos
cmp
adc
ss
adc
das
into
push
outsb
or
loopne
jmp
push
mov
cs
subl
pushf
mov
addl
sbb
dec
ja
test
push
pop
pop
aam
adc
jge
mov
push
mov
lock
adc
cmp
dec
jno
jne
scas
stos
pop
sub
jecxz
mov
push
inc
push
bound
ja
dec
add
adc
inc
xchg
mov
adc
ds
icebp
sub
or
mov
sub
inc
and
mov
sahf
sarl
adc
pop
inc
sub
ficomps
cmp
nop
bound
outsl
sub
push
mov
hlt
or
insl
mov
and
nop
loope
jg
ffree
andl
mov
push
mov
sbb
test
in
fadds
add
mov
sbb
sub
lds
loope
push
mov
push
and
dec
das
adc
stos
arpl
in
dec
and
adc
incl
xchg
ret
les
xlat
pop
xchg
sarl
inc
xchg
jmp
mov
add
adcb
adc
cltd
nop
sub
and
test
dec
bound
sub
sbb
fidivs
jne
sbb
and
in
or
shrb
gs
out
clc
stos
xchg
inc
addr16
add
pop
mov
mov
cmp
sarl
jecxz
pusha
dec
or
cmpsb
hlt
stos
std
adc
outsb
sahf
test
sub
pushf
mov
cmp
pop
dec
fadds
mov
cmp
stc
lds
flds
mov
mov
xchg
inc
mov
jp
aas
sub
cwtl
sbb
ret
or
mov
ret
decb
or
fmuls
or
or
pusha
out
sahf
popa
and
xor
inc
jg
lock
xor
sub
or
inc
loope
imul
and
add
hlt
fcompl
push
or
sbb
lods
pop
pop
or
pusha
pusha
and
insl
push
push
pop
or
call
push
ljmp
sub
xchg
dec
insb
mov
mov
loopne
test
stos
mov
ret
inc
aaa
xor
jg
fcomps
repnz
dec
jb
pusha
push
mov
jbe
add
mov
nop
addb
or
test
mov
lock
cs
add
sbb
out
mov
push
outsl
add
sbb
adc
addr16
push
add
rorl
lock
fidivrs
pop
cli
fnstsw
hlt
cmp
or
adc
movsb
dec
or
lock
in
dec
call
and
xchg
std
jg
fwait
inc
mov
repz
inc
xor
and
mov
enter
mov
pop
xchg
rorl
icebp
sub
mov
or
add
aam
pop
and
aad
push
in
scas
mov
call
inc
jmp
in
add
and
loopne
pushf
push
insb
add
adc
cmp
pop
int3
inc
push
cwtl
xchg
xchg
jo
or
xchg
notl
mov
sub
sbb
jecxz
xor
pop
loope
lahf
jle
loope
xchg
nop
cmpsl
subb
and
sahf
mov
out
push
lret
adc
jbe
js
hlt
es
adc
adc
scas
pop
aam
fs
pop
xlat
sbb
jg
stos
lret
push
mov
sub
cmpsb
lret
fdivl
inc
loopne
fiadds
mov
mulb
push
dec
xchg
ficomps
cltd
jp
ret
cmp
add
cmp
das
jo
and
push
clc
loopne
push
sarb
cmpsb
dec
mov
lods
inc
mov
rorb
scas
cmp
xlat
repnz
sbb
repz
or
ret
or
fcom
xchg
stos
outsb
cld
out
push
test
lahf
fs
ss
and
adc
or
mov
cmp
movsb
outsl
pop
push
or
and
aas
scas
dec
adc
jp
outsl
out
outsb
dec
pop
cld
bound
cmp
popf
jb
push
jp
mov
dec
jo
int3
jo
jne
mov
mov
pop
inc
lcall
aas
xor
or
pusha
popa
pop
loope
cmp
ljmp
bound
mov
fisttpll
call
xchg
movsb
ljmp
call
mov
cmc
call
mov
push
orb
enter
adc
cld
scas
fwait
push
push
imul
hlt
sbb
dec
jo
mov
xor
jle
adc
dec
jl
imul
imul
xchg
inc
cmp
repz
xor
or
pop
push
cmp
test
dec
add
mov
xor
ja
insb
outsb
cmp
mov
push
add
mov
decl
xor
aaa
ja
adc
and
inc
cs
sbb
sbb
arpl
jns
cld
stos
or
cld
andb
mov
cmp
sbb
sbb
ret
inc
shrb
push
fimull
mov
sbb
lret
or
cmpl
add
setns
cmp
or
lock
ret
out
add
pushf
pop
pop
xchg
mov
dec
cs
out
test
fs
cld
call
mov
ja
mov
imul
popa
pop
sar
ja
mov
xchg
dec
popa
aam
cmp
cli
orb
aad
das
add
enter
mov
pop
mov
cmp
fbld
pop
add
adc
pop
out
xor
roll
ja
fdivrp
cli
rcll
push
repnz
add
mov
push
cld
test
pop
adc
jg
or
daa
imul
ljmp
shl
dec
pop
bound
xchg
movb
ret
mov
arpl
inc
mov
sbb
test
or
push
add
fidivrl
sarl
fwait
push
notb
cmpl
add
jo
testb
cmc
mov
fmuls
sub
pop
mov
jo
dec
and
fwait
add
inc
add
sahf
inc
mov
test
leave
test
or
mov
subb
cmp
cmp
repnz
rol
outsl
inc
push
pop
and
pop
outsl
pop
and
sbb
out
inc
test
xchg
roll
divl
sbb
sub
sub
xor
sarl
xchg
aaa
fbstp
outsb
clc
and
enter
mull
push
mov
je
xor
pop
call
mov
imul
pushf
push
dec
das
inc
push
mov
cmpsb
xlat
stos
ficompl
test
sahf
cmpsl
sub
ljmp
add
negb
ds
push
dec
sub
hlt
sub
cwtl
adc
adc
xlat
ret
add
adc
xor
push
push
loopne
mov
inc
mov
xor
sub
pop
cli
sub
and
sbb
cs
and
and
mov
and
push
shlb
jb
repz
jle
and
ret
sub
cmp
pop
add
decl
mov
mov
dec
nop
out
add
loopne
faddl
cmpsb
cmpsl
mov
dec
or
dec
andb
mulb
mov
and
xor
int3
out
insb
add
mov
ret
adc
clc
add
jmp
and
push
mov
pop
lock
out
movsl
cld
push
je
jp
or
popa
pop
pop
mov
aad
xchg
call
dec
lock
dec
cmp
js
or
push
popf
ljmp
xchg
out
mov
mov
sahf
jns
add
mov
adc
mov
pop
sbb
adc
jne
add
cwtl
hlt
je
adc
xor
mov
and
sub
dec
aas
fisubs
fsubrs
nop
and
sbb
xchg
push
icebp
scas
dec
add
add
inc
sbb
js,pn
int3
aaa
cld
jmp
inc
xchg
in
jmp
bound
sbb
loop
jge
hlt
arpl
jp
xchg
mov
sub
or
push
cmpsb
mov
and
cld
mov
std
adc
icebp
pop
push
pop
ljmp
fstps
sub
sti
ss
das
imul
imul
outsb
or
mov
cmp
test
stos
jo
call
xor
insl
jp
seto
ret
push
add
xchg
aaa
ss
inc
movsb
mov
jb
ret
xchg
fsubl
mov
sbb
sahf
arpl
mov
cmpl
push
orb
pusha
push
mov
int
jp
xor
test
out
in
js
dec
subb
or
jl
push
scas
adc
sub
cmp
mov
int3
jg
jbe
push
xor
fidivl
popa
jmp
inc
clc
xchg
rorb
pop
enter
adc
dec
pusha
mov
mov
dec
adc
add
xchg
fdivrs
lock
cmp
dec
sbbb
test
aad
pop
push
push
insb
in
mov
mov
pop
mov
cmp
sbb
shlb
adc
mov
loop
out
add
fistps
inc
fwait
mov
adc
loope
fwait
je
nop
jecxz
push
cmp
sub
mov
shlb
jecxz,pt
adc
aad
inc
aas
pop
adc
loop
shl
adc
fwait
lcall
cmp
mov
ds
fstl
xrelease
jg
cmp
arpl
inc
push
es
stos
dec
ljmp
cmpl
xchg
mov
push
frstor
push
insl
bound
loop
scas
inc
roll
icebp
jbe
xchg
fcompl
out
mov
jp
outsb
faddp
add
mov
pop
call
and
sbb
lods
lret
jp
aaa
mov
shlb
mov
or
bnd
inc
ret
decb
adc
and
pushf
lcall
sub
sub
mov
adc
mov
data16
push
xchg
mov
int3
mov
pop
aad
shrb
cmp
addb
scas
fcomps
decl
jbe
mov
jge
pop
sub
xchg
or
add
xor
stc
inc
sahf
sub
in
sub
mov
inc
je
mull
insl
or
dec
mov
push
aaa
mov
mov
and
in
xor
sub
imul
lods
sub
inc
pop
and
repz
push
inc
sub
add
dec
scas
mov
pop
mov
in
int
push
imul
outsl
push
jecxz
insb
lret
sarl
fistpl
cmp
adc
mov
mov
xor
or
out
push
and
adc
les
hlt
fmull
decl
movsb
aaa
aaa
xchg
cmpsb
imul
jg
mov
les
mov
adc
bound
sbb
clc
and
int
sub
add
mov
aas
movsl
subb
dec
and
sub
ficoms
inc
push
cmp
clc
mov
ret
loope
adc
pop
mov
jo
shll
xor
fildll
adc
mov
fimuls
cmp
or
int3
sub
lahf
inc
dec
lods
mov
int3
test
push
dec
add
stos
and
fidivrl
mov
rclb
leave
sub
call
xor
jae
push
jl
sub
mov
in
or
ljmp
add
jae
add
lcall
data16
adc
or
inc
cs
test
lock
or
push
push
xor
incl
cwtl
xchg
pop
adc
xor
fnstcw
cld
xchg
mov
testl
call
sarb
push
and
sbb
xchg
adc
add
jbe
adc
nop
testb
scas
push
pop
fsubs
or
scas
in
dec
hlt
mov
xor
lods
sarl
xchg
sbbb
push
clc
mov
call
and
arpl
mov
jbe
daa
jle
pop
xchg
aaa
push
aas
outsl
push
aaa
or
dec
test
mov
ljmp
daa
dec
adc
cmp
pop
push
sub
aam
clc
jmp
cld
jne
push
int
inc
cmp
test
push
pop
cld
cwtl
sub
or
flds
cli
popa
sahf
add
addl
lret
cli
xor
jmp
cmp
add
add
movsb
mov
js
shrl
andb
test
push
push
fstl
scas
add
adc
sbb
xchg
mov
leave
xchg
jmp
push
sub
call
jle
test
push
movsb
sbb
mov
mov
adc
out
add
mov
or
out
nop
ficoms
fucomip
dec
mov
adc
mov
pushf
or
shrl
fimull
enter
or
js
xchg
jecxz
lock
sahf
cmp
mov
loopne
mov
insb
push
mov
cmovae
es
mov
inc
sbbb
jle
xchg
mov
jp
les
push
cmp
dec
test
bound
das
std
fbld
lods
and
mov
mov
xor
pop
loopne
loope
pop
inc
add
xchg
jo
or
sahf
xchg
repz
dec
mov
popa
lret
cs
add
cmp
mov
repnz
aam
mulb
call
cmc
dec
mov
mov
sti
sub
inc
loop
xor
cld
sub
or
push
bound
pop
mov
push
add
adcb
dec
faddp
lds
addr16
cmp
mov
cmp
scas
pop
push
jg
adc
cmp
pushl
es
subl
inc
cwtl
xor
or
xchg
fmulp
xchg
ss
loop
loopne
dec
repnz
inc
jns
adc
cmpb
into
or
fbld
gs
mov
sbb
mov
xchg
lea
jge
inc
add
sti
mov
push
xchg
add
mov
shlb
push
xor
adc
cli
pop
in
dec
icebp
xchg
jge
stos
or
andl
push
pop
jnp
icebp
inc
pushf
les
ljmp
popa
mov
andb
jns
xor
test
xchg
add
in
cmp
shr
and
add
incb
scas
repz
jecxz
jle
xchg
mov
xchg
push
in
dec
pop
stos
dec
mov
outsb
std
or
xor
lcall
jle
pop
mov
ret
mov
ret
das
sbb
mov
and
fcomp
cld
fadds
out
stc
test
stos
push
xlat
xchg
pop
popf
test
cmp
mov
push
xor
lods
neg
fwait
jg
push
std
lock
cmpsb
or
xor
mov
dec
pop
test
pop
jle
cli
ljmpw
inc
add
mov
fdivrl
movsbl
adc
adc
decl
leave
cs
add
call
xchg
add
mov
les
or
add
xchg
xchg
mov
test
fistl
subb
mov
or
sbb
popa
int
xchg
insb
or
xor
shlb
ja
push
fstpl
mov
pop
jge
jmp
push
inc
and
push
or
insl
imul
pop
add
jl
cmc
dec
loope
mov
jge
dec
push
push
js
xchg
fldl
mov
sbb
icebp
pop
rol
inc
mov
outsl
lods
aam
mov
add
inc
or
imul
aas
fcom
dec
movsl
xchg
stc
pop
inc
or
mov
lret
lods
inc
insl
out
pusha
es
icebp
push
js
fidivl
outsb
dec
adc
rcrb
sub
int
pop
std
xlat
dec
ret
jecxz
pop
jle
mov
aad
mov
xchg
dec
je
or
push
out
movb
mov
out
nop
stos
fiadds
inc
bound
ds
or
sbb
jg
loopne
test
xor
test
add
mov
icebp
adc
mov
gs
aaa
fildl
sbb
orb
jp
mov
adc
enter
xor
aaa
cld
xchg
dec
roll
sti
pop
mov
and
and
jl
pop
or
repz
insb
add
inc
inc
xchg
and
stos
les
mov
pop
mov
test
or
cli
inc
lcall
xchg
push
pop
dec
dec
cmp
movsb
test
jg
loope
dec
and
xor
push
incl
inc
shr
nop
xchg
outsl
cmp
test
in
inc
cs
adc
cmc
ret
xchg
stos
sar
into
mov
dec
fxch
sahf
xor
icebp
add
and
lret
loope
sub
mov
clc
dec
nop
iret
jle
or
cmp
mov
cli
add
nop
iret
dec
mov
or
pop
cs
mov
ret
adc
cli
lahf
sub
fcmove
hlt
cmc
rorb
test
insl
mov
inc
pop
push
or
std
es
xchg
mov
jmp
or
stos
cltd
mov
popa
adc
push
push
lret
dec
roll
add
xchg
aas
inc
hlt
sbb
jl
push
xor
fsubr
outsl
push
add
push
xchg
fcomps
loopne
or
stos
mov
add
add
push
sub
push
cmp
inc
add
out
mov
inc
shlb
jle
sub
cld
incl
sub
add
mov
adc
divb
push
jo
cmp
fld
out
loopne
movsl
mov
mov
fisubrl
inc
add
push
ss
push
imul
add
cmovb
lock
inc
enter
dec
pop
push
sahf
insb
jns
movsb
mov
adc
in
mov
bound
adc
pop
mov
mov
push
mov
loope
dec
cmpb
push
lahf
mov
xchg
xchg
call
dec
mov
push
sarl
and
pop
fucom
dec
and
js
cmp
jecxz
lret
rcrb
sub
jne
aam
pop
add
jnp
je
or
insb
mov
add
add
mov
call
jmp
jge
pop
or
hlt
cmp
incb
pop
xor
insl
jmp
mov
popa
rorl
and
xorb
pop
in
mov
adc
in
fisubrl
jne
sarl
dec
decl
xor
xchg
mov
push
adc
add
inc
testb
aad
sbb
mov
push
xchg
and
mov
dec
insl
inc
jge,pn
inc
push
add
sub
jns
push
movb
int3
sbb
cmp
rorl
mov
inc
xchg
lock
scas
pop
rorb
mov
in
jo
or
andb
sub
sub
dec
dec
ret
adc
aas
mov
xchg
ret
cwtl
pop
aad
pop
cs
add
mov
mov
aas
jecxz
in
inc
int3
ds
jecxz
sub
xchg
test
nop
cmovp
sub
sub
adc
jmp
cs
mov
jge
repnz
add
adc
ljmp
fmuls
cmp
xor
sub
mov
out
xchg
jl
sub
pop
mov
push
fs
pop
rorl
fdiv
js
stos
ja
aad
or
stos
pop
sub
lea
js
imul
jg
push
or
daa
xor
ljmp
lea
sbb
xor
nop
sub
push
adc
fldenv
rol
xlat
ffree
and
pop
adcl
dec
dec
adc
insb
clc
xchg
aaa
push
popa
inc
xor
pop
int
lret
mov
fidivrs
aad
repnz
nop
jle
sbbb
mov
cli
in
andb
frstor
cmpb
add
sbbb
shlb
xchg
dec
xchg
pop
or
or
in
adc
loopne
mov
jmp
adc
mov
jl
icebp
js
imul
lea
ret
jge
push
repz
and
call
stos
cli
inc
test
incl
pop
xor
rclb
mov
sbb
fwait
inc
call
adc
pop
cli
jo
mov
sub
xchg
std
cmpsl
test
inc
outsb
add
xlat
or
mov
in
push
dec
movsb
mov
push
jecxz
push
ljmp
mov
cmp
sub
jb
call
in
mov
adc
mov
bound
iret
jno
movsl
mov
repnz
mov
dec
add
mov
in
inc
cld
adc
cmp
push
dec
test
pusha
idiv
sub
into
xor
in
sbb
sbb
testb
mov
fiaddl
cmp
cmpsl
xor
inc
adcl
mov
lods
xorb
stos
flds
or
jecxz
fdivr
test
mov
rolb
inc
pop
mov
movsb
ret
pop
inc
inc
push
mov
push
nop
sbb
pusha
addr16
daa
out
mov
test
or
data16
mov
pushf
xchg
adc
dec
iret
out
ja
jo
mov
nop
or
fisttpl
push
push
adc
scas
pop
scas
sbb
pop
jae
jno,pt
pop
outsl
cli
fidivs
mov
pop
push
subb
lods
add
mov
fisubrs
add
jge
sbb
test
es
mov
xchg
insb
sahf
push
lret
lcall
jb
sbb
mov
xor
es
adc
or
cmp
std
xchg
add
inc
dec
aam
and
cmpsb
in
fcompl
out
hlt
xchg
in
sbb
pop
xor
call
in
mov
stos
es
data16
mov
jecxz
test
dec
adc
sbb
mov
push
stos
mov
inc
adc
add
lcall
adc
ret
jg
ljmp
add
inc
fwait
jle
mov
ds
pop
add
push
fsubr
pushf
pop
jmp
mov
mov
cmp
dec
in
push
fnstsw
xor
cmp
push
nop
add
sahf
insb
sarb
mov
inc
sbb
js
push
inc
inc
inc
or
stc
nop
cltd
sbb
scas
add
into
or
pop
cmp
push
lock
xrelease
dec
ret
inc
insb
ss
lds
nop
ret
sub
xchg
outsb
sarb
mov
roll
aam
icebp
testb
jle
sti
dec
ds
daa
add
xchg
rorb
mov
mov
sbb
addr16
sbb
jno
cld
inc
xlat
mov
fdivrs
fisttps
sahf
cmp
add
movsb
dec
fmull
and
lock
adc
movhps
cmp
outsl
push
pop
and
inc
incb
or
mov
scas
sbb
outsl
enter
pop
inc
sbb
rcl
cmp
xchg
push
dec
cmpsb
mov
clc
lcall
sbbl
dec
pop
popf
je
sub
je
icebp
out
inc
shl
jns
ret
stos
mov
adcb
scas
xchg
push
arpl
pop
sbbb
inc
fisubs
xchg
or
mov
bnd
mov
add
dec
push
ffreep
clc
loope
ss
sub
fldl
jbe
inc
movsl
shrl
mov
pusha
lds
xor
cs
in
sbb
or
dec
addr16
rcrb
cmc
add
jmp
daa
test
cmp
aaa
cmp
mov
sub
fmull
mov
add
lcall
add
lods
push
inc
loope
mov
and
cli
jo
xor
mov
push
cli
add
adc
call
adc
push
mov
xchg
jl
jo
dec
mov
mov
mov
cmp
insb
mov
les
jo
arpl
mov
adc
push
pop
add
xchg
aaa
jb
push
lret
add
add
mov
dec
and
mov
loop
and
mov
fsubr
mov
xor
xchg
push
movsb
xchg
jno
imul
xlat
add
mov
jle
or
adc
dec
mov
jb
jg
in
insl
xchg
xchg
sbb
sub
mov
imul
mov
dec
aam
jbe
hlt
mov
jecxz
hlt
incl
stc
mov
inc
scas
mov
bound
sub
jle
pop
mov
loopne
sbb
xor
dec
sbb
and
rol
mov
sahf
add
adc
xchg
mov
add
loop
jle
dec
push
stos
inc
call
lods
sbb
or
sbb
cmp
mov
movl
cmpsb
inc
push
or
add
fstpt
mov
add
push
or
mov
add
sarb
jl
add
mov
or
ds
mov
dec
mov
sub
bound
rdmsr
and
jl
sub
mov
mov
inc
test
lds
mov
xor
push
loopne
sbb
pushl
inc
sub
or
push
jae
lret
pop
in
mov
or
aam
js
loope
sar
pop
mov
loope
mov
mov
aaa
std
mov
jge
int
je
shrl
loop
dec
test
xchg
les
or
rol
push
and
xchg
jle
mov
lds
call
loopne
jmp
loopne
ret
mov
inc
ret
out
mov
imul
andl
xchg
nop
pop
xchg
sahf
push
push
jle
push
cmp
mov
push
lds
add
mov
imul
xor
xchg
and
xlat
add
in
push
dec
jg
enter
dec
add
std
push
jns
or
enter
and
ss
aaa
fsub
ss
pop
push
movsb
mov
enter
clc
xlat
jmp
or
cmpsl
in
or
mov
sbb
lock
insb
hlt
xor
shl
scas
and
push
das
loopne
dec
xchg
add
dec
inc
jno
mov
cmp
sub
call
mov
inc
aaa
mov
mov
xchg
mov
mov
mov
in
adc
in
js
outsl
pusha
cmp
adc
bound
ss
and
jg
scas
or
push
mov
push
scas
addb
cmp
lcall
scas
sbbb
pop
mov
jp
push
or
pop
push
push
or
mov
inc
push
sub
push
loop
add
and
test
ret
and
lock
mov
mov
pop
sti
insl
sar
xchg
xor
xchg
mov
cltd
xor
sbb
pop
pop
mov
xor
mov
data16
fnstenv
cmp
and
fimull
negl
lods
add
stos
lods
add
call
fmul
jmp
fldt
pushf
or
adc
add
repz
sub
orl
cmpl
imul
xchg
xor
mov
sbb
xorl
mov
call
lret
push
jo
les
adc
into
cwtl
mov
cmp
pop
mov
data16
add
fsubl
xchg
add
or
imul
sub
lds
sbb
inc
mov
pusha
lds
inc
push
push
lds
cmc
lcall
sbb
mulb
xchg
test
cld
add
fisubrs
js
and
push
sub
xlat
cwtl
es
adc
ss
out
sbb
cmpsl
add
into
pop
lock
outsl
incb
push
jecxz
js
test
jmp
out
aam
lahf
jno
adc
jmp
inc
ss
roll
ss
mov
xor
mov
and
std
push
or
aam
stc
xlat
jecxz
insb
add
pop
shlb
js
pop
int
sbbb
out
das
int3
sbb
xchg
mov
xor
jmp
jb
aad
mov
pop
push
add
aas
arpl
jl
jecxz
scas
decl
push
fdivs
mov
lea
mov
push
add
insl
add
dec
imul
mov
cli
out
add
decl
call
inc
stos
mov
filds
adc
mov
or
inc
xchg
xor
mov
push
push
adc
lahf
loope
jl
add
adc
inc
or
stos
mov
pop
sbb
push
inc
out
add
xlat
fnsave
iret
push
add
hlt
les
cmp
out
in
adcb
adc
dec
inc
pop
xor
incb
mov
cmp
pop
pop
fidivrl
mov
test
in
ss
pop
mov
imul
xchg
stos
clc
test
xchg
rcll
stos
in
mov
push
adc
testb
xchg
aam
lods
add
dec
jmp
pop
cmp
js
cld
mov
inc
enter
sbb
adc
test
adc
cmpsb
xchg
adc
dec
add
mulb
fidivrs
xchg
enter
push
xchg
pop
fdivrs
orl
or
push
adc
pop
aas
add
aad
decl
popf
and
sbb
mov
sti
cmp
and
int3
fdivrp
nop
or
cld
inc
ret
out
xor
or
out
jmp
cli
pop
adc
mov
adc
sbb
mov
add
mov
sub
jbe
adc
xchg
push
pop
add
mov
push
xchg
jmp
sub
ret
cmpb
mov
inc
mov
mov
jbe
loopne
mov
insl
divb
or
add
cli
aam
lcall
xchg
out
fldcw
adc
mov
jecxz
cmpb
jo
loope
test
mov
int
add
mov
out
push
xchg
jp
pop
mov
ljmp
js
cmp
dec
in
inc
scas
sbb
test
shl
or
cmp
or
mov
push
inc
mov
fisubrs
enter
mov
xchg
mov
stos
mov
push
ret
adc
push
or
xchg
mul
jb
push
outsl
inc
std
insb
xor
dec
aad
popa
sub
mov
nop
adc
pusha
mov
mov
lods
orb
adc
and
xchg
adc
mov
js
jbe
fsubrp
es
jae
mov
sahf
or
movsl
sbb
mov
mov
dec
inc
mov
outsb
add
push
inc
sarb
out
jle
rorb
arpl
lcall
cli
push
push
lahf
idivb
fwait
cmp
push
sub
ret
mov
loop
clc
test
adc
outsb
loop
dec
mov
int3
pop
cld
test
pop
lock
int3
fnstenv
and
insl
call
adc
adc
sub
andl
mov
loopne
outsb
push
dec
add
xchg
push
pop
push
push
loop
and
daa
or
movsl
call
ret
faddp
lock
cmp
je
cs
and
lods
cmp
jbe
adc
or
lock
clc
aaa
push
push
jge
sub
je
movsl
leave
dec
call
stos
lcall
gs
jne
inc
add
stos
or
mov
aam
lds
sahf
mov
push
rcr
xchg
ljmp
xor
sahf
inc
rcll
fcoms
adc
mov
pushf
and
cmpsl
sahf
sbb
leave
mov
fwait
scas
sbb
scas
stc
ss
clc
sarb
icebp
fildl
lds
lcall
cmp
mov
loop
shll
sbb
pop
notb
add
pop
jmp
cmp
cmpsb
in
int3
xchg
jbe
daa
jb
mov
movsl
xchg
mov
movhlps
xchg
lock
js
xor
daa
cmc
inc
push
jge
dec
sub
fsubr
pop
je
psraw
notb
movsb
xchg
out
cmc
inc
outsl
inc
push
inc
xchg
mov
push
in
xlat
aaa
adc
lods
push
dec
orl
cmp
add
lea
ja
orb
jo
popa
pop
cmpb
std
push
pusha
cli
mov
repz
pop
push
and
mov
lods
and
and
aad
lock
insb
dec
jne
dec
stos
fimuls
push
ret
outsl
rorl
push
and
add
loop
xlat
call
cmpb
pop
ficoms
xchg
push
mov
movsb
ljmp
lcall
andb
sbb
or
imul
out
insl
data16
dec
mov
rorb
pop
test
sbbb
std
sub
mov
aad
sub
jp
push
fistl
inc
pop
jl
mov
mov
cmpsb
push
js
in
fistps
sub
movsl
pop
xchg
jle
adc
add
lock
fbstp
xor
popa
sbb
xchg
repnz
sbb
push
adc
push
in
xor
in
sub
mov
pop
pusha
jle
push
sub
bound
lcall
call
movsb
mov
aam
and
jae
and
int3
pop
sbbl
call
xchg
adc
mov
mov
mov
push
popa
mov
pusha
out
and
fmulp
out
push
arpl
or
dec
xchg
dec
out
cmp
test
test
mov
sub
jmp
sbb
inc
mov
and
mov
jnp
fs
inc
inc
mov
into
jg
mov
sahf
pusha
and
out
outsb
in
mov
lret
in
aaa
inc
add
fwait
jle
jbe
imul
inc
or
sbb
call
xor
and
or
sbb
jg
out
mov
shrl
movsb
repnz
mull
repnz
aam
mov
push
mov
xor
fsts
scas
inc
mov
jne
and
gs
pop
cmpsb
jg
jbe
xchg
push
leave
cmp
js
add
bound
adc
leave
lahf
cmp
xlat
nop
pop
imul
outsb
mov
cld
xchg
push
fwait
push
push
jp
and
cmp
adc
pop
clc
or
xchg
push
xor
dec
jl
outsb
cmpb
push
pusha
cmp
inc
fsubr
outsb
jl
fisubl
inc
cld
fisubrs
iret
jmp
loop
movsl
or
and
add
mov
sarb
xchg
cli
sbb
sahf
pop
fcoml
xor
jo
addl
loopne
loopne
adc
rcr
cwtl
adc
inc
xor
add
adc
lret
adc
push
stos
add
pop
jo
push
nop
fst
jo
adc
push
insb
xor
push
jmp
gs
pop
add
mov
nop
insl
test
mov
fcoml
jno
jg
icebp
outsl
fiaddl
mov
mov
pop
jp
push
clc
cmpsl
shll
mov
clc
loope
inc
add
pop
lahf
fcoml
rcr
imul
add
stc
jp
xor
and
and
mov
aas
es
jbe
test
and
ret
or
outsb
test
pop
xchg
add
insb
mov
push
dec
cli
std
insl
push
inc
sbb
or
insb
cld
push
fs
mov
fcomps
jnp
rcl
nop
inc
aad
cmpsl
test
cli
pop
cmc
imul
or
mov
inc
lret
nop
outsl
mov
xchg
pop
adc
mov
or
sbb
push
dec
pop
inc
mov
enter
pop
sarb
push
rorb
jp
mov
xor
in
push
mov
pop
sbb
sahf
call
sub
jmp
ljmp
insb
inc
cli
repz
pop
std
push
cmp
cwtl
push
push
dec
int3
sbb
pop
jbe
test
sbb
decl
sbb
ljmp
cmp
mov
in
into
addl
jle
or
push
jg
mov
add
xchg
cs
xor
das
cmp
rcrb
push
or
cld
xchg
cld
sub
push
mov
pop
add
dec
inc
jmp
mov
test
pop
mov
mulb
mov
mov
mov
push
pop
add
cld
lods
mov
dec
dec
pusha
out
add
sbb
nopl
jne
scas
out
scas
mov
bound
test
lds
mov
into
jg
adc
mov
adc
mov
lahf
or
mov
or
inc
js
iret
jb
sub
jno
and
decl
movl
adc
mov
and
xchg
mov
clc
jp
aas
or
ja
xor
pushw
nop
loopne
xor
push
or
popa
clc
test
dec
xor
rcrl
push
mov
lea
in
cmpsl
nop
hlt
in
mov
decl
in
cli
sbb
add
mov
sub
scas
and
add
je
bound
pop
adc
bound
mov
xor
dec
xor
or
dec
push
mov
mov
int
fwait
int3
imul
dec
pop
or
sub
stc
pop
push
mov
test
iret
call
push
imul
aaa
sbb
adc
out
dec
push
push
xor
adc
cmpl
inc
inc
icebp
dec
xor
add
push
add
cmp
push
add
add
push
push
pop
in
inc
mov
movsl
lock
cmc
fbstp
push
loop
or
push
repnz
or
or
test
gs
jo
inc
add
jp
push
pop
jg
loop
dec
jge
sbb
jmp
or
adc
cli
xchg
mov
aad
sub
fildl
push
decl
ds
sbb
clc
bound
in
addl
push
imul
test
pop
xor
adc
pushl
pusha
dec
mov
lock
add
push
cmc
in
fadds
mov
and
orl
andl
mov
jo
divb
mov
jb
hlt
jecxz
xor
out
cmpsl
adc
std
movq
mov
aam
pop
or
jp
add
popf
cmp
and
inc
push
fmul
adc
mov
push
push
mov
jno
pushf
andb
aad
sub
les
inc
in
adc
xchg
clc
fists
mov
test
js
xor
sub
dec
enter
pop
or
cwtl
lret
lods
cs
xor
lea
cmp
movsb
clc
pop
imul
stos
and
jge
xchg
push
sub
mov
idivb
lcall
fstps
or
push
mov
adc
cmp
arpl
push
lods
jo
mov
sbb
jmp
out
je
loop
dec
ja
cmp
sbbb
test
or
sub
mov
iret
add
popa
bound
jp
or
in
rol
mov
inc
inc
adcb
jl
push
loopne
adc
clc
or
sub
dec
aad
ds
mov
shll
lret
lock
call
fld
fwait
lcall
adc
cmp
lea
add
aad
shlb
into
jne
pop
mov
paddd
xor
ljmp
xor
dec
icebp
lods
add
out
jo
sarl
dec
in
out
dec
pmaxub
add
data16
and
and
loope
je
fisubrs
ficoms
imul
sar
pushf
add
fdivp
loop
incl
ret
inc
enter
inc
xchg
mov
test
cwtl
loop
fidivrl
sub
jl
add
fdivrl
adc
jne
aad
jp
mov
jbe
push
push
das
cli
mov
push
mov
xor
loope,pn
adc
jb
sbb
cmp
repz
mov
filds
in
dec
aas
or
lock
mov
mov
mov
roll
push
cwtl
and
dec
adc
pushf
mov
nop
xchg
sbb
cltd
mov
dec
pusha
loopne
adc
mov
xchg
xchg
jmp
mov
push
pop
cmp
xor
pushf
loop
fildll
pop
cmp
or
cs
sub
push
cld
cmp
xlat
adc
daa
aad
std
ljmp
ret
scas
inc
dec
pop
lods
cmp
in
dec
stos
add
inc
add
bnd
clc
mov
ficomps
aam
adc
mov
pop
insb
testl
cmp
outsb
fldenv
mov
test
lods
out
pop
hlt
sub
lcall
push
ret
sub
xchg
jmp
stos
lds
mov
sub
sbb
nop
and
sbb
out
ret
push
cmp
js
push
lahf
movsb
lahf
jle
inc
mov
or
leave
add
nop
dec
and
cld
xchg
cli
sub
rcrl
add
jb
mov
push
insl
ret
lret
mov
add
adc
pop
and
xor
inc
movsb
mov
push
xor
loope
fs
cmp
incb
xor
pop
mov
es
inc
sub
dec
sub
xor
js
push
scas
mov
dec
lret
into
sub
pop
lock
add
out
test
mov
arpl
cmp
or
insl
hlt
enter
fistps
push
cwtl
pop
mov
jne
cmpsb
js
adc
dec
inc
fnstsw
popa
clc
pop
xchg
jecxz
std
gs
mov
lcall
cmpb
sbb
and
rolb
cwtl
xchg
push
add
movsb
jle
call
pop
sti
pusha
mov
jmp
xchg
mov
add
test
adc
adc
inc
mov
fimull
mov
frstor
inc
adc
or
sbb
maxps
mov
and
mov
sub
add
inc
add
pop
pop
cld
test
and
or
and
mov
dec
aam
out
imul
sbb
into
es
cmp
push
jmp
out
adc
push
xor
push
mov
ss
or
push
ljmp
jmp
jecxz
aam
mov
cs
mov
or
insb
pushf
jl
test
jbe
cmc
or
int3
mov
adc
cld
inc
test
idiv
mov
fdivrs
and
push
add
sub
and
jns
ret
sbb
test
or
clc
cmpsb
or
sti
mov
mov
sbb
std
aas
inc
aad
pop
add
jp
leave
push
or
cmp
jnp
or
cmp
jge
rorb
popa
sub
shrb
lahf
shlb
in
inc
call
sti
sti
and
int3
aam
sysexit
sarl
sbb
pop
mov
lret
in
daa
gs
dec
mov
std
addb
fadds
mov
call
decl
movsb
xor
cmp
mov
sbb
into
adc
push
push
and
int
inc
je
stos
pop
or
out
xchg
sbb
mov
into
mov
ret
add
lds
xor
adc
mov
pusha
leave
xor
mov
test
hlt
ret
xchg
inc
sub
mov
mov
adc
pop
mov
sti
add
cmp
movsb
jbe
cwtl
pushl
nop
dec
adc
adc
inc
icebp
rclb
clc
add
insl
xorl
rolb
xor
mov
loopne
pop
movsb
jl
popf
cmp
inc
push
loop
call
into
fucomi
jb
in
mov
and
xor
pushf
mov
sub
pop
data16
sti
cmp
push
xchg
cmp
jbe
hlt
and
fs
push
mov
mov
dec
loope,pt
sahf
test
rcr
and
out
call
mov
out
push
int
cmp
into
adc
bound
int3
mov
ret
outsl
in
add
push
add
fwait
test
mov
dec
pop
mov
push
outsl
aas
fldt
icebp
aam
scas
jo
jge
mov
fstps
dec
pop
stc
in
cmp
lock
xor
sbb
xor
rcl
sbb
push
inc
jl
mov
das
dec
idivl
and
mov
pusha
sbb
pop
xchg
sub
hlt
sbb
mov
add
ss
insl
loop
pop
xchg
out
insb
movsb
outsl
fcoms
hlt
adc
inc
nop
push
lds
inc
push
fiaddl
adc
push
and
or
inc
orb
arpl
aas
sub
outsb
pusha
fildll
test
ds
movsb
add
ds
jne
or
sub
sbbb
xchg
add
and
xor
fimull
out
cmp
mov
push
aad
push
xor
pop
mov
add
das
fmull
cld
mov
stc
or
lea
xor
push
into
shl
outsb
cs
stos
sub
or
push
dec
jnp
insb
jno
movsb
cmc
cmc
mov
add
xor
push
xchg
push
enter
xor
dec
mov
ficoml
mov
push
test
lds
ljmp
jecxz
or
adc
into
or
xchg
jne
loop
cmpsl
lahf
push
push
shll
pop
mov
pushf
mov
add
or
jmp
cld
loopne
insl
lea
dec
inc
cmp
adc
loope
mov
adc
xor
jo
xchg
iret
cmp
and
lock
loop
fisubrs
jp
nop
sbb
push
shr
in
subb
movsl
outsl
mov
dec
push
mov
push
sub
pop
sbb
add
sbbl
pusha
jo
cs
xchg
roll
testb
test
adc
push
shll
xchg
mov
cli
es
mov
aas
push
lods
cmp
popf
pop
sbb
adc
jecxz
or
test
jo
fwait
pop
adc
shll
loopne
js
addl
shlb
xor
out
jno
sub
nop
ljmp
movsl
xchg
add
shll
test
lea
xchg
pop
in
cmp
cmp
into
test
es
js
xor
xor
test
cmpsb
or
lods
adc
clc
dec
jg
test
cltd
sbb
fst
loop
or
stos
sbb
or
xchg
stos
mov
push
daa
xor
mov
hlt
call
add
imul
mov
movsb
fdivrs
scas
ror
in
sti
or
aam
mov
xchg
mov
shrl
dec
mov
jge
int3
rorl
mov
xchg
sarl
scas
into
loopne
mov
enter
pop
inc
loop
sahf
loope
inc
cs
xchg
push
sbb
sub
jge
fsub
adc
jmp
mov
jnp
cwtl
mov
inc
add
inc
sub
jecxz
dec
jmp
mov
arpl
sub
loop
outsl
xor
cmp
cmp
les
pushf
pop
test
push
lds
sub
and
popa
pop
sbb
ss
pop
in
sbb
scas
out
and
lahf
and
icebp
mov
clc
add
imulb
inc
and
nop
pusha
sub
and
fnstsw
jg
jnp
jp
dec
dec
and
imul
add
insb
mov
mulb
jno
sbbb
popf
pop
sub
lret
mov
dec
inc
loope
pop
cmp
mov
xchg
mov
enter
and
fdivr
push
dec
icebp
sbb
inc
filds
inc
dec
sbb
or
into
add
sub
rclb
sbb
out
mov
sbb
nop
push
iret
xor
jge
push
lods
mulb
fstpt
movntps
mov
std
sbb
mov
or
clc
sbb
aam
jp
subb
test
rclb
push
xchg
lahf
cwtl
call
int3
xor
ja
clc
push
adc
inc
adc
xor
ret
adc
mov
mov
push
mov
mov
loopne
mov
push
orb
rcrb
clc
jle
inc
xchg
loop
push
cmc
cmp
cltd
sub
pusha
sub
je
jb
lret
repz
mulb
push
sub
sbb
add
push
adc
icebp
mov
and
mov
mov
add
and
testl
jns
lds
mov
adc
mov
push
inc
xchg
jns
push
ja
inc
xor
mov
adc
add
cwtl
clc
dec
fmull
inc
ret
sbb
push
adcb
into
fwait
mov
addb
cmpsb
dec
loope
js
and
popa
jl
cmp
mov
mov
adc
jge
fwait
mov
js
sbb
xlat
cmp
subb
sbb
adc
add
pop
lods
dec
sarb
lods
jge
push
jl
push
outsb
mov
mov
sbb
ljmp
mov
inc
mov
pop
mov
push
movsl
jnp
es
dec
xchg
or
xchg
fidivrs
das
outsb
or
push
mov
std
outsl
push
lods
add
nop
sub
jno
jg
mov
clc
sbb
push
mov
xchg
xchg
cmpsb
dec
clc
mov
inc
jns
dec
or
sub
sbb
iret
add
mov
adc
les
jno
mov
pop
lock
imul
inc
jmp
pop
jge
inc
clc
test
push
clc
imul
xor
or
dec
sbb
dec
stc
aas
mov
iret
out
mov
dec
fildl
mov
cwtl
cltd
or
adc
mov
mov
jg
cmpsl
in
dec
xchg
sbb
jp
jb
in
or
xor
ret
xlat
movsl
and
cmpsb
jle
iret
mov
int
lock
ret
or
test
inc
lods
std
cmp
adc
add
mov
xorb
loop
add
popa
sti
insl
push
and
or
pop
lock
fwait
jb
lea
add
xchg
mov
and
and
sbb
arpl
mov
cmpsl
ja
add
test
push
nop
add
jecxz
pop
sub
add
enter
mov
ljmp
jmp
mov
cltd
mov
sbb
out
sbb
jg
adc
fwait
popf
shll
sbb
mov
aam
add
inc
add
sbb
push
cmp
cmp
pop
stos
adc
push
sub
enter
fadds
mov
insb
xchg
jecxz
push
ret
sbbb
daa
test
mov
lock
add
and
adc
in
aas
in
or
inc
lods
inc
je
jb
mov
sbb
out
mov
push
jnp
clc
jg
lret
xchg
and
push
pop
add
jb
sub
movsb
cmc
cmc
mov
xchg
out
jae
xchg
inc
out
add
xor
cmp
lock
stos
lock
fisttpl
push
jp
adc
inc
cmp
scas
push
scas
cmpsb
push
fs
das
pop
push
push
movsb
in
ds
adc
jbe
mov
and
xor
aad
loopne
pop
jne
and
leave
mov
sbb
add
popf
sbb
rolb
mov
push
push
flds
jmp
inc
adc
test
mov
cmpsb
lea
jbe
mov
xor
cli
adc
cmp
inc
lods
sub
int3
push
add
push
test
ja
mov
lret
nop
ds
fdivr
outsl
es
repnz
xlat
inc
ret
scas
jg
repnz
pop
rol
decl
js
cmc
or
lock
xor
jle
subb
mov
inc
jbe
mov
xchg
cs
cmpb
imul
mov
les
cs
scas
sub
movsb
jle
sbb
fcomps
adc
pop
xor
mov
pop
inc
scas
clc
ret
xchg
pop
mov
xor
and
mov
push
aaa
mov
scas
push
sub
add
in
orl
xor
incb
mov
push
mov
jo
clc
shrl
icebp
pop
xchg
mov
out
jnp
push
pop
xorb
in
add
push
outsb
cmp
mov
fimuls
rcrb
in
lods
push
push
mov
adc
jl
insl
pop
outsl
subl
xor
xorb
push
cmp
add
mov
rolb
cli
or
mov
mov
shll
int3
mov
mov
loopne
and
push
dec
das
xor
das
and
jp
mov
sbb
sbb
dec
shrb
stos
xchg
push
dec
cld
clc
and
jo
js
pop
cld
sub
subb
lcall
xchg
cli
jg
dec
pop
dec
push
insb
mov
adc
loopne
mov
outsb
imull
test
pusha
or
js
cmpb
aad
mov
cwtl
fwait
cmpsb
cmp
mov
mov
les
fsubrs
push
add
mov
adc
call
xchg
mov
adc
pop
clc
sbb
xor
or
aas
pop
sti
pop
push
push
cmp
xchg
push
je
mov
and
leave
cmp
mov
inc
lcall
adc
jbe
shl
or
sbb
dec
stos
stc
lret
inc
fs
test
add
fnsave
filds
fmul
fisubl
sbb
clc
mov
dec
out
js
js
test
and
inc
icebp
mov
out
jo
sub
in
aad
xchg
mov
call
push
xchg
push
dec
adc
stos
adc
into
loop
push
insb
pop
mov
movsb
dec
push
iret
mov
lods
movsb
sbb
in
js
ja
push
jb
jns
cli
jg
sbbl
cmp
mov
sbb
dec
imul
addl
out
pop
shrl
push
popa
lods
pop
ret
mov
dec
pusha
pop
fs
imul
mov
rolb
or
xchg
jne
push
outsb
mov
daa
call
mov
sub
xor
dec
jmp
notb
inc
xor
cmc
add
adc
pop
incl
mov
mov
xchg
sub
pop
or
pop
rcr
aaa
pushf
xor
sbb
arpl
scas
hlt
and
ja
mov
xchg
xor
xchg
fdivp
inc
popf
mov
mov
enter
mov
filds
xchg
adc
cltd
outsb
xchg
adc
pop
push
or
mov
pop
push
ficoml
loopne
cmp
dec
add
insb
jbe
movsb
push
shlb
fildll
lahf
jb
cltd
jns
cmp
cmp
repz
jo
movb
aad
or
mov
insb
lock
mov
mov
ds
insb
jbe
daa
mov
mov
lret
loopne
push
jle
dec
sahf
mov
loop
mov
pop
dec
push
clc
outsl
sub
inc
pop
out
mov
inc
pop
mov
fmull
push
dec
push
roll
js
js
pop
and
insb
xchg
pop
mov
stos
cld
cmp
jg
add
add
fwait
xchg
in
notl
lock
jmp
add
ss
mov
adc
cli
xchg
popf
sub
fsin
jle
dec
xchg
or
insl
iret
clc
mov
aad
add
or
xchg
clc
pop
cld
cmp
push
cmpsb
xor
dec
cwtl
or
jb
xor
adc
mov
add
adc
push
sub
loopne
add
gs
push
les
xchg
add
push
xor
inc
mov
in
mov
inc
sub
pusha
inc
push
test
xchg
ret
testb
ljmp
movsb
jne,pn
dec
loopne
test
clc
and
pusha
push
shlb
jbe
mov
adc
add
and
pushw
mov
mov
insl
in
push
addl
mov
pushf
je
jae
shlb
or
fiadds
sbb
jle
test
xchg
jmp
lea
iret
or
dec
dec
pop
adc
mov
inc
fildl
mov
cmp
xchg
rcrb
fwait
push
mov
sbb
add
cltd
div
sub
or
xchg
repz
lock
jg
pop
mov
shlb
dec
inc
pop
mov
jmp
cltd
fs
push
dec
push
add
sarb
add
fcompl
mov
dec
or
in
xor
aaa
loope
sub
pop
incb
mov
add
xor
movsb
add
aam
sbb
imul
mov
mov
sahf
cmpsb
mov
test
lock
and
arpl
lcall
jle
or
call
ret
push
xor
mov
jb
aaa
inc
inc
cmpps
movsb
inc
mov
push
jmp
fisubrl
lcall
pop
mov
adc
movsl
xor
xorps
scas
in
sbb
mov
rol
enter
inc
sbb
mov
adc
inc
decb
mov
mov
push
mov
scas
sub
adc
xor
push
pushf
ss
pop
add
mov
hlt
mov
pop
hlt
xchg
and
shr
push
sbb
test
inc
sub
nop
jmp
push
aad
outsl
std
and
pop
outsl
dec
je
push
call
loopne
pop
xor
sbb
fbstp
int
popf
xchg
call
test
jmp
in
mov
add
inc
and
xchg
sub
pop
sbb
cmpl
into
lea
cmp
mov
lret
and
xor
push
push
inc
dec
addb
rol
inc
sub
rcll
xor
sbb
mov
mov
adc
loope
es
lds
dec
rcr
inc
scas
pop
push
popf
xchg
mov
cs
sub
cmpl
xchg
adc
cli
adc
pop
pop
adc
in
dec
push
mov
push
push
es
and
lods
dec
add
rolb
jmp
mov
inc
inc
data16
scas
pop
call
adc
addl
xlat
mov
push
sbb
es
and
xchg
mov
xchg
dec
mov
add
lcall
dec
push
or
dec
pop
lock
repnz
and
cmp
test
jecxz
fdivr
push
rolb
cltd
clc
fistpll
mov
mov
pop
dec
or
mov
xlat
xor
push
dec
and
lea
in
fidivs
int3
pop
lahf
je
cwtl
jp
cld
push
mov
xor
xchg
push
push
or
mov
js
int3
stos
js
cmpsl
xor
ljmp
shll
sbb
dec
mov
pop
pop
sub
std
stos
clc
lock
and
das
cli
push
add
insb
jge
adc
pop
mov
or
test
das
push
push
mov
or
ss
mov
mov
fcomip
jg
mov
jmp
insl
adc
dec
xadd
mov
inc
int3
dec
xor
mov
sub
and
cmp
sub
cli
rorl
les
popf
jecxz
aaa
lods
jecxz
shrb
pushf
repz
xor
dec
xor
outsb
loope
aas
cmp
adc
out
push
mov
fistpl
pop
xchg
ja
fs
push
jg
cmpsb
lods
fbstp
push
or
leave
ljmp
nop
jecxz
jmp
movsb
add
clc
or
adc
rclb
push
adc
fdivrs
movsb
pop
lcall
into
push
dec
inc
cld
dec
mov
outsl
push
push
bound
imul
cmp
dec
in
and
mov
add
sti
dec
cwtl
dec
jp
daa
cltd
add
jl
call
pop
data16
sub
test
cmp
adc
mulb
pop
sub
adc
add
pop
mov
mov
pushf
add
lret
or
add
ja
filds
aaa
adc
jnp
mov
stc
sbb
stos
cmc
push
std
mov
adc
cmp
out
lock
dec
cwtl
mov
push
or
sub
sub
leave
sbb
lret
push
adc
outsl
dec
into
inc
je
lods
clc
dec
icebp
jbe
outsb
icebp
or
push
les
adc
fnstsw
call
hlt
int
and
push
xlat
aaa
sub
cs
f2xm1
pop
test
jle
ss
cld
bound
fdivl
cmovo
add
pop
ficoms
mov
push
call
shll
daa
sbb
aam
cltd
ss
fdiv
mov
and
in
and
push
add
jae
clc
cmpsb
fdivrl
mov
mov
data16
pop
jns
fldt
ret
mov
mov
mov
pop
loop
lea
cmpsb
out
and
out
xor
nop
xchg
adc
arpl
sub
ficompl
mov
or
pop
xorl
test
push
add
pop
insl
ret
cwtl
clc
xchg
ret
push
push
test
mov
ss
lret
adc
pop
dec
and
popa
pop
xor
mov
adc
imul
inc
scas
add
popf
and
dec
sbb
test
inc
pop
mov
pop
pusha
push
fidivs
jle
sbb
add
loopne
sbb
mov
mov
lods
aam
call
add
mov
movsb
outsb
cmpsb
mov
test
dec
cld
push
mov
adc
fsubrl
into
loopne
jp
mov
je
sub
mov
push
mov
and
outsb
aad
jne
and
push
or
mov
sub
or
repz
in
test
xor
in
add
lods
int3
push
cmp
adc
jg
sbb
push
sub
movsb
mov
insl
jnp
cmp
rolb
test
stos
shrb
sahf
sbb
aaa
dec
sub
inc
push
mov
out
mov
lods
mov
mov
addl
jb
mov
popf
dec
sub
mov
fcoml
mov
mov
sbb
test
icebp
pushl
imul
stos
or
cwtl
push
adc
sahf
subb
dec
add
lods
sbb
mov
jg
fistpl
mov
jb
iret
negb
lods
push
push
orl
dec
cmp
pop
push
and
mov
add
sbb
cmp
xchg
mov
mov
or
add
jbe
mov
pop
inc
mov
outsl
insb
fisttpll
int3
rcll
pop
repnz
cmpl
in
mov
cld
lcall
jno
sbb
sub
das
dec
add
push
inc
stos
rol
bound
and
xor
adc
add
test
jo
fisubl
or
xchg
sbb
ljmp
dec
adc
add
inc
pop
jp
roll
out
add
lock
dec
jnp
sarb
ret
mov
and
loopne
lock
xor
pop
test
jne
dec
hlt
and
les
not
je
movl
lock
in
jle
cmp
jbe
jle
jnp
push
mov
ja
sub
ja
adc
dec
inc
in
mov
loop
fisubrs
inc
inc
or
cmp
call
xchg
mov
jg
pop
sarb
test
inc
add
jns
or
jecxz
cli
add
outsb
test
test
xchg
push
pop
xlat
push
dec
dec
sbb
mov
pop
mov
out
into
xchg
lret
jo
jmp
insb
mov
fisubrs
pop
fs
mov
mov
ljmp
xchg
or
adc
adc
data16
sub
xchg
mov
icebp
aad
sti
shl
mov
mov
das
jb
dec
nop
insl
inc
in
jno
push
mov
insb
scas
and
lahf
pop
inc
adc
pop
push
lock
jmp
cwtl
insl
xor
mov
enter
repz
push
sub
and
cs
fcmovnu
mov
mov
mov
fmuls
cmpsl
mov
pop
pop
fbld
push
adc
fwait
xchg
mov
aam
mov
push
bound
sbb
add
add
orb
hlt
hlt
xor
fldenv
xchg
jb
bswap
inc
jg
add
sbbb
rclb
pop
lods
imul
addb
and
sbb
iret
sub
loope
enter
dec
loope
xchg
mov
loope
lods
in
sahf
jb
mov
xlat
inc
or
xor
jg
mov
pop
loop
inc
imull
or
adc
stos
in
or
mov
mov
inc
ret
push
and
ss
cli
in
in
scas
insb
data16
mov
mov
sub
cmp
xor
xchg
lret
hlt
mov
mov
pop
sbb
xchg
adc
mov
dec
mov
cmp
push
and
mov
push
in
loope
cmp
call
xorb
add
or
pop
sub
mov
or
and
cmp
mov
inc
xchg
mov
out
cmp
add
push
ljmp
imulb
loope
or
ret
adc
rcrb
jo
cmc
fisttpl
rcll
mov
sti
rdmsr
orb
sub
fldt
or
cli
jno
inc
inc
lds
into
call
gs
xchg
test
arpl
pop
push
repnz
xchg
insb
pop
and
xchg
out
jl
scas
mov
inc
ljmp
pusha
sbb
lock
decl
dec
fs
push
scas
or
jb
pop
push
xor
std
test
jle
inc
hlt
mov
push
sub
ficomps
xchg
and
and
int
test
stos
in
pop
clc
pushl
adc
loope
testb
xchg
push
cmp
add
add
shlb
scas
xlat
out
sub
outsl
adc
and
mov
pop
sarl
add
jno
cmpl
inc
pop
cmp
dec
lods
imul
sbb
sub
stos
outsl
mov
mov
or
jns
std
sub
sub
loope
xor
lods
mov
and
movsl
popf
dec
mov
rcl
std
jg
decl
mov
imul
jmp
int3
bound
pop
cs
nop
jl
xchg
mov
ret
ja
jecxz
mov
xchg
push
popa
sub
sbb
xchg
mov
mov
xchg
jle
pop
call
stos
lock
loopne
andl
push
dec
das
fildl
xor
cld
jle
test
sub
mov
enterw
cmp
pop
sub
cmp
jnp
sbb
roll
and
iret
vaddss
shlb
push
mov
pop
mov
jle
add
pop
lods
inc
popf
cltd
xchg
and
mov
mov
push
test
outsb
and
mov
hlt
push
jecxz
out
ficomps
test
sbb
push
sbb
scas
cli
jbe
icebp
xor
enter
inc
sbb
pop
and
pop
shlb
jmp
loop
call
scas
int3
mov
mov
rorl
jmp
pop
loop
mov
mov
ret
sub
jl
mov
sub
or
in
mov
sub
jecxz
push
add
push
les
mov
xor
sub
test
add
call
xchg
adc
inc
out
pusha
xor
insl
mov
adc
aas
insb
and
pusha
orl
filds
orl
jg
pop
cmp
and
mov
mov
mov
xchg
in
cmpsb
sub
inc
add
ret
push
gs
mov
sub
inc
testb
ficoml
outsb
adc
or
ret
add
cmpsb
fs
test
loopne
out
push
push
push
sbb
mov
xchg
int3
push
aad
pop
enter
aas
and
call
mov
cmp
mov
sahf
dec
add
adc
scas
mov
jno
inc
popf
inc
add
mov
stc
cmp
add
jg
or
inc
ljmp
imull
dec
add
xor
in
pop
add
sti
jmp
xor
xchg
xchg
das
and
add
popf
sub
mov
sub
cli
jno
mov
add
inc
shll
ss
mov
aam
push
jno
push
call
inc
jb
jmp
stos
ss
es
lock
sbb
ja
cltd
inc
je
pop
mov
arpl
mov
sahf
std
mov
inc
inc
mov
adcb
jbe
sub
faddp
les
add
imul
sbb
ja
pop
and
clc
les
push
nop
cmpsb
push
loopne
jecxz
int
cmp
jnp
push
incl
push
test
jge
xor
push
cli
std
insl
mov
fmull
jmp
mov
es
cmp
shrb
ret
stc
shrl
pop
in
adc
mov
lock
xchg
rcl
add
mov
and
insl
inc
sub
insb
insb
push
ret
jbe
jg
add
cmp
repz
add
add
add
xchg
outsb
jae
or
shlb
push
push
stos
mov
ss
mov
sbb
pop
out
shrb
jb
inc
ret
and
jno
inc
lea
xchg
loopne
mov
cmp
mov
or
pop
dec
cs
es
xchg
and
mov
sbb
repz
jl
scas
push
sti
lahf
cld
fcoml
cmp
add
scas
lret
xor
aad
call
push
mov
loope
loope
add
add
mov
stos
xor
dec
addl
pop
cld
clc
mov
pop
cmp
stc
adc
adc
stc
xchg
xor
mov
and
push
sti
ficoms
in
inc
jg
cld
cmp
dec
incl
movsl
xor
or
mov
out
push
add
add
testl
ret
add
outsb
push
sbb
mov
enter
mov
shrb
call
loopne
lcall
pop
lock
sub
add
pop
xorb
inc
dec
mov
add
sbb
mov
fildll
push
inc
test
pop
js
jecxz
je
pop
loop
shll
outsb
push
scas
ljmp
das
push
mov
xchg
test
sbbb
enter
sbb
stos
bound
push
pop
xor
and
or
dec
sbb
mov
jo
loopne
or
jns
call
or
jns
dec
xor
fs
jg
pop
pushf
loope
push
ljmp
sti
subl
test
fdivrl
lods
inc
outsl
mov
dec
jge
fldt
test
push
clc
stos
inc
mulb
jmp
js
pop
jne
dec
pop
push
dec
ljmp
fs
lods
sarb
scas
out
jg
xchg
test
iret
dec
packuswb
decl
add
or
mov
xor
jo
fdivp
out
out
clc
sbb
pop
pusha
mov
mov
dec
hlt
das
push
push
adc
call
dec
outsl
cli
dec
mov
insb
xchg
idiv
into
mov
jne
push
adc
aam
jne
std
in
cmp
out
dec
inc
rcl
into
jae
and
jle
testb
andb
ret
scas
aam
pop
insb
incl
out
xor
rcrb
in
xor
inc
lock
cmp
ljmp
push
jo
adc
add
mov
adc
scas
in
into
add
mov
inc
ljmp
mov
enter
push
test
data16
out
movsb
mov
xor
or
xorb
jns
mov
fwait
mov
outsl
fbstp
mov
mov
xor
cmp
jae
mov
lcall
orl
mov
fnstcw
and
pop
mov
dec
js
sub
mov
lods
adc
insb
mov
cmpsb
sbb
sub
repz
fs
inc
je
xchg
sbb
cmp
test
pusha
xchg
cmp
insl
cld
ljmp
xchg
inc
ret
movsl
xchg
mov
xor
dec
push
pushf
pop
cwtl
add
stos
dec
outsb
loope
movsl
dec
push
mov
sbb
cli
mov
jmp
pop
add
mov
in
adc
pop
inc
shr
cmc
and
xchg
push
sahf
shrl
lret
push
sub
mov
vandpd
jbe
fisttps
jecxz
ds
fdiv
jl
loope
mov
dec
sub
pop
lret
sbb
ret
outsl
outsl
mov
cwtl
jp
jbe
repz
sti
stc
decl
in
fnstcw
into
mov
or
mov
sub
shlb
mov
jo
add
fmull
fs
lods
loop
popf
sbb
out
sub
iret
or
and
add
jmp
fadds
lds
es
xor
pusha
and
xor
cli
int3
jbe
xchg
push
ret
pop
pop
fists
icebp
scas
lock
jecxz
push
xchg
xchg
xorl
sbb
push
jne
lea
mov
adc
cs
mov
into
push
jle
mov
dec
inc
sahf
or
into
mov
xchg
push
mov
ret
sub
addl
mov
stos
jo
mov
outsb
xchg
or
xor
gs
ds
stos
or
sub
shrl
or
mov
mov
fsubrl
mov
mov
xor
add
es
jge
and
xor
xor
outsb
add
ds
das
dec
clc
mov
or
adc
fcoms
mov
je
cmp
aad
inc
in
inc
aad
xor
aaa
and
out
clc
insl
and
dec
stc
jne
mov
mov
filds
push
xchg
lock
dec
divb
add
cli
loope,pt
pusha
add
insb
mov
shll
inc
loop
scas
cmp
cmp
add
or
int3
push
pop
ljmp
push
or
mov
scas
aam
and
roll
aaa
pushf
dec
add
dec
mov
sbb
jns
adc
outsb
clc
or
dec
or
dec
sub
and
xor
and
hlt
incl
mov
out
pop
sti
into
adc
mov
adc
leave
add
inc
icebp
sub
das
repnz
dec
cmp
loopw
push
lods
repnz
cmc
add
xchg
cli
inc
fidivs
mov
js
push
lods
pop
js
orl
pop
jo
push
fisttps
lods
clc
mov
clc
hlt
mov
jmp
inc
xchg
out
cwtl
sub
cmc
stos
adcb
jo
sub
mov
add
jo
rcl
mov
and
lcall
xchg
in
lock
je
pop
into
jge
ss
incl
loop
mov
jmp
adc
add
mov
insb
inc
das
adc
sub
jle
jge
pushf
daa
or
cmp
ja
add
decl
jle
das
cmp
jecxz
mov
adc
js
add
movsb
and
xchg
sub
push
dec
cld
xorl
add
int3
or
mov
insl
or
shlb
stos
ss
push
and
je
or
insb
mov
decl
lret
dec
sub
or
clc
mov
adc
scas
dec
lods
jmp
es
inc
imull
inc
sahf
fiadds
dec
out
add
mov
jbe
cld
dec
xor
fstpl
push
stos
jbe
sub
cwtl
loop
ds
incb
insl
mov
pop
ds
fimuls
jl
add
rolb
lods
popa
xchg
es
rolb
lret
adc
mov
xor
enter
in
fdiv
fadd
stc
orb
jg
inc
test
sar
filds
sbb
sbb
ret
jmp
lock
add
or
mov
rorl
cmp
dec
push
mov
xchg
sub
jle
or
ljmp
das
mov
lret
or
sub
das
inc
mov
jle
int
test
lock
cmp
and
push
mov
dec
dec
push
cs
cld
es
jns
xchg
pop
and
xor
inc
jo
cmpsl
lahf
outsb
ja
push
xchg
cmp
xchg
mov
mov
cltd
push
add
sbb
mov
add
fidivrs
andb
jne
add
or
or
pushf
dec
adc
jbe
jmp
sbb
inc
and
ficomps
lret
stos
arpl
sbb
and
jmp
out
adc
std
adc
add
add
push
or
mov
jl
xchg
push
xchg
add
ds
je
and
or
daa
sar
dec
push
shrl
adc
out
pop
inc
cld
cwtl
adc
mov
lds
sub
or
pop
icebp
or
mov
in
pop
stos
sbbl
or
fcomip
mov
gs
aas
cltd
lock
adc
xor
sahf
push
orb
pop
xor
mov
and
ficompl
adc
adc
enter
pop
movsb
xchg
dec
sar
mov
ja
mov
fdivs
push
ss
movsl
cmp
and
fwait
inc
lcall
lods
push
ljmp
jl
decl
lea
sbb
sbb
mov
mov
sbb
call
inc
adc
xor
std
xchg
je
jns
js
add
outsl
clc
push
lret
pusha
stc
mov
jmp
ljmp
adc
pop
sub
pop
mov
mov
adc
adcl
rolb
cld
negb
scas
clc
incl
stos
cmpsb
mov
add
sti
inc
outsl
sub
jl
movsl
pushf
ljmp
cmp
mov
enter
cmp
mov
insl
dec
pop
repnz
inc
ret
dec
cld
int
lods
cld
jg
pop
mov
push
jo
pusha
es
push
or
imull
ss
clc
jl
cmp
jne
or
test
sbb
mov
mov
jo
shlb
hlt
enter
sbb
scas
jno
les
nop
xchg
dec
leave
xchg
ret
mov
scas
mov
in
mov
les
stos
add
es
sbb
cmpsl
push
xchg
or
lret
popf
jp
sbb
ret
fadds
inc
pop
out
gs
and
cs
push
test
mov
test
ds
repnz
outsl
fiadds
das
test
add
in
mov
inc
cld
add
repz
jo
or
jg
ja
loope
xchg
test
xchg
sub
call
imul
add
in
addr16
jmp
xor
rcrb
adcl
sbb
cmpsb
mov
int
adcb
outsl
push
pop
and
push
es
cmc
aam
add
pop
adc
lock
ror
push
pop
decl
or
or
rclb
jb
aaa
sbb
mov
negb
add
jge
push
das
xchg
jmpw
push
icebp
xor
insb
mov
jae
mov
inc
decl
add
xor
js
inc
sti
inc
add
jle
pop
xorb
call
fadd
in
stos
daa
ja
and
add
dec
enter
arpl
xor
rorl
dec
out
mov
or
pop
ret
xorl
or
jno
ret
sbb
dec
mov
shlb
inc
sarb
cmp
aaa
dec
xor
scas
cmc
pop
xorb
mov
inc
add
pop
cmp
and
and
clc
fldz
pop
negb
enter
sbb
shrb
loop
rcr
sub
push
call
inc
pmaxub
sub
xchg
and
ljmp
push
jae
push
incb
mov
jmp
out
adc
repz
call
mov
and
rcl
push
inc
mov
mov
cmp
shlb
or
pop
fmuls
sbb
cmp
sbb
fstpt
loop
aaa
movsl
cld
pusha
mov
orl
sbb
repz
and
mov
stos
or
loop
inc
cmc
add
jecxz
lds
notb
and
xor
cmp
push
out
xlat
pop
fmull
movsl
mov
and
pop
pop
out
movsl
decl
push
inc
sub
cmp
pusha
flds
sbb
aam
js
pop
mov
int3
test
cli
cltd
mov
sti
jb
push
stc
cmp
xor
mov
fists
pop
add
xor
sub
or
jbe
aas
shrl
clc
bound
jg
loop
sbb
add
dec
ficomps
mov
pop
aam
stos
stos
xchg
add
icebp
xor
ljmp
into
cmp
rorb
stos
xchg
pushf
fisttpll
push
lcall
sub
rorb
mov
cld
pusha
jb
jle,pn
popa
xlat
cwtl
xchg
xlat
inc
jno
pop
ds
rolb
cmp
lock
popf
sahf
push
subl
outsl
ljmp
mov
push
xor
and
sub
mov
sbbl
rorb
nop
mov
orl
mov
sbb
sbb
and
mull
inc
cmpsl
mov
mov
push
and
mov
call
clc
scas
adc
and
add
fisubs
sbb
cmpsb
mov
mov
ficoml
out
rcl
std
mov
add
and
mov
push
test
iret
push
cli
negb
insl
sbb
fwait
sub
in
test
cmp
fs
cmpsl
andb
pop
adc
jg
cmp
push
or
fmull
mov
mov
sbb
cltd
rcr
mov
or
mov
push
or
out
adc
mov
jno
fbld
rolb
add
sub
filds
in
pop
mov
das
icebp
pusha
sub
sbb
cs
ja
inc
mov
lds
fsubrl
test
fidivs
nop
or
pushf
sbb
and
sbb
pop
dec
aaa
sbb
jg
sbb
mov
pop
loope
dec
sub
pop
sbb
dec
incl
jne
xchg
pop
inc
pop
sbb
sbb
out
bound
and
sbb
mov
sub
imul
sbb
pop
je
insl
mov
mov
test
or
fbstp
scas
loope
cmp
gs
and
push
push
insl
jp
and
mov
push
mov
cmp
adc
subb
or
or
imul
lahf
ss
decb
xchg
or
decl
cmp
adc
imul
add
fsubrl
adc
inc
jo
mov
ret
je
push
mov
mov
pushf
push
mov
int
sbb
hlt
aaa
repnz
sbb
and
pusha
sbb
fdivrl
push
out
push
test
dec
icebp
mov
dec
fdivl
pop
mov
mov
mov
lock
add
in
mov
xor
fdiv
pop
imul
or
adc
cwtl
jae
mov
or
pushf
sub
cmpsb
call
leave
fildl
aam
mov
inc
and
sub
push
pushf
sbb
movsb
xchg
mov
out
cwtl
out
shrb
hlt
pushf
lods
xor
rorb
nop
loopne
jns
pop
mov
push
push
push
lahf
jge
jb
repz
pop
inc
dec
imul
push
push
jl
insb
dec
lock
jp
adc
adc
sbb
mov
inc
push
xchg
lods
xchg
adc
or
push
add
and
je
sbb
lds
xor
dec
cld
testl
xchg
lea
xchg
call
inc
sub
loopne
or
add
sti
mov
cs
std
adc
shlb
testl
aaa
dec
cld
es
mov
mov
push
and
cmpsl
sbb
pop
dec
mov
in
repnz
add
mov
pop
lock
sub
pop
xor
push
push
mov
add
addr16
xlat
sarl
sarb
inc
jmp
scas
movsl
mov
cmp
fisttps
mov
icebp
xor
lret
push
stos
mov
xor
bound
popf
mov
push
icebp
loop
rcll
test
inc
scas
add
sbbb
xor
lods
out
xor
je
ljmp
mov
arpl
into
mov
mov
cwtl
mov
pop
movsb
out
mov
add
test
fstps
add
add
mov
jnp
add
decl
addr16
jbe
pop
cwtl
stos
push
lods
inc
icebp
pop
add
add
sbb
sbb
or
mov
ret
out
push
dec
loope
aam
push
pushf
outsl
pop
icebp
fmuls
xchg
pusha
sub
mov
fistpl
outsb
cli
pusha
mov
adc
push
adc
add
fwait
adc
push
adc
pop
mov
dec
lods
or
jo
push
icebp
mov
orl
push
dec
dec
les
mov
sbb
cmp
xor
fistpll
mov
jno
ror
cs
adc
decl
adc
push
mov
push
mov
jp
test
jg,pn
les
lock
hlt
inc
or
and
loope
pop
xchg
push
or
push
dec
mov
mov
int
fwait
inc
cltd
add
ret
mov
xor
out
xor
sarb
xor
shlb
mov
and
sbb
sub
out
ja
jae
sub
dec
adc
sti
testl
sbb
inc
pushf
cmpl
and
xchg
or
mov
repnz
jae
mov
incb
mov
mov
stos
imul
sti
mov
ret
and
mov
xchg
decb
dec
sub
ss
sbb
rolb
mov
clc
in
mov
mov
inc
and
fildl
cmp
loop
add
js
ret
or
lock
xchg
out
push
and
xor
add
cmp
movsb
or
test
and
push
inc
in
clc
andb
dec
pop
dec
testl
add
sub
lock
sbb
fwait
xor
cmpb
or
mov
mov
repnz
or
push
cld
fadds
mov
jmp
movsl
and
mov
jg
repz
cwtl
faddl
jb
addb
adc
call
outsb
push
jp
ret
gs
xor
sub
mov
sbb
out
cmp
jg
imul
xchg
inc
mov
adc
or
adc
push
xchg
sbb
test
cmpsl
pusha
mov
push
sub
in
add
xchg
data16
mov
cmp
xchg
call
js
outsb
hlt
adc
bound
push
stos
movsl
or
daa
ss
cmp
cmp
add
mov
nop
adc
pop
test
shrb
and
mov
jecxz
fdivs
loopne
jge
cld
push
cltd
cmp
ljmp
lcall
dec
mov
adc
mov
fdivr
es
adc
mov
clc
pop
xchg
pusha
xlat
jbe
and
ror
jo
inc
cld
fwait
js
cmpsb
xor
daa
mov
std
scas
fisttpl
in
dec
out
jno
jb
mov
stos
jmp
das
xchg
inc
testb
cld
xchg
je
dec
pop
xchg
add
or
inc
xchg
mov
push
std
and
pushf
subb
or
daa
adc
out
test
push
mov
add
std
push
xchg
adc
dec
sub
mov
cld
lock
mov
push
sub
inc
sub
pop
push
xor
add
orb
adc
fistps
and
jle
mov
cmpsb
js
sub
les
push
icebp
add
xchg
xlat
cld
lods
ljmp
add
lods
ds
in
adc
or
lahf
pop
jl
cmp
mov
roll
ja
jo
cmp
adc
fldcw
cmp
or
and
out
jecxz
call
into
sub
cltd
aam
add
sbb
mov
sti
xchg
lock
adc
sub
data16
ds
mov
jge
jnp
fnsave
std
and
dec
mov
ljmp
sbb
add
dec
data16
enter
roll
add
sbb
add
jo
stos
cmp
or
popa
jmp
stos
fldl
outsl
pusha
js
clc
mov
into
xchg
xchg
xorb
popa
pop
mov
fdivl
in
add
push
jne
and
xor
inc
push
adc
imul
or
pop
add
mov
push
cmp
imul
and
mov
sbb
xor
xor
adc
or
js
data16
mov
clc
call
rcll
jp
scas
xchg
xchg
sub
add
mov
push
nop
and
xchg
mov
call
data16
popf
mov
aam
add
icebp
hlt
add
sbb
lock
sbb
jge
outsl
add
or
pushf
iret
les
in
push
cmp
push
jl
lds
push
sbb
add
pop
xchg
popa
sub
push
and
adc
clc
incl
fwait
sti
push
add
jns
je
dec
sarl
lea
ret
stos
roll
sub
add
and
sbb
test
dec
dec
sbb
push
inc
mov
add
jo
xchg
cwtl
jo
mov
test
leave
js
in
test
mov
incb
mov
mov
out
call
cltd
or
nop
push
pop
mov
sbb
mov
jb
and
fnstcw
adc
aaa
jno
add
loope
enter
fmuls
inc
imul
ss
inc
push
jns
cmp
xchg
jb
incl
test
mov
push
fadds
inc
ds
adc
xchg
idivl
fisubs
push
xchg
xchg
cltd
test
cmp
int
xchg
js
jno
xchg
push
mov
mov
arpl
adc
dec
xlat
shll
xorl
inc
adc
out
mov
cmp
hlt
fldcw
adc
cs
clc
mov
add
loop
push
sub
push
inc
bound
adc
lcall
push
in
sub
add
xor
rclb
lahf
leave
cmp
test
pusha
test
push
jb
dec
jle
push
movsb
out
shr
jg
faddl
je,pn
loop
lahf
insb
mov
cmc
es
xor
inc
js
mov
pop
mov
inc
dec
push
or
rorb
cld
jge
pop
int3
ja
jae
jl
and
and
jl
cmpl
std
std
outsb
std
or
pushf
cmp
popf
sub
sbb
sbb
inc
inc
xor
jge
lcall
pop
mov
fildl
inc
sbb
dec
pop
mov
insb
fcmovb
push
nop
shlb
mov
cmpsl
dec
push
shr
sub
shrl
push
pop
xchg
jbe
inc
imul
or
push
ljmp
fnstenv
jb
fsubl
adc
sub
int3
xorb
pusha
lahf
push
jle
loope
cmpsl
mov
js
add
pop
insb
ja
bound
jmp
cmp
or
je
and
aam
pop
pop
mov
sahf
mov
dec
mov
mov
hlt
fwait
mov
jbe
push
xrelease
loop
push
shlb
popl
shlb
fsubr
cwtl
out
dec
adc
mov
and
mov
ss
mov
out
add
pop
pusha
sub
ficompl
xor
arpl
mov
mov
inc
jg
aad
jecxz
pop
mov
or
push
mov
sbb
pop
or
and
andb
mov
loopne
int3
pop
cmp
hlt
pop
stc
or
movsbl
and
mov
pop
les
ds
mov
outsl
jle
in
hlt
jno
dec
pop
cmpsl
jg
scas
jae,pt
or
lds
xor
xchg
push
and
mov
dec
dec
adc
or
js
xor
stos
add
push
cmp
jge
shr
loope
add
movsb
sub
nop
sbb
lods
push
mov
aas
add
push
jge
nop
xchg
adc
pop
pop
mov
add
add
fs
divb
sub
and
add
icebp
jg
sarl
fstp
pop
out
lock
push
fsubl
xchg
mov
fildll
mov
addb
test
jle
js
sbb
pusha
orb
sub
xchg
movsb
insl
orl
push
cmpsb
mov
dec
dec
xorl
aaa
cmp
cmp
push
mov
popf
mov
and
mov
pop
stos
mov
aas
add
add
out
hlt
scas
cli
xor
push
xchg
je
push
xchg
filds
push
cmp
bound
mov
cmp
jae
fdivrs
push
ss
decl
inc
or
jb
daa
add
and
mov
data16
mov
mov
icebp
shlb
add
stos
xor
test
mov
cmp
add
addb
cmp
call
pushf
mov
imul
es
mov
sbb
pop
add
orb
cmpb
xchg
into
mov
rorl
mov
rcrl
mov
xor
imull
test
sbb
es
add
mov
mov
ja
bound
mov
lcall
rcll
push
xlat
add
popa
mov
iret
mov
jne
subb
loop
mov
mov
rcrb
pop
lock
sbb
adcl
pusha
insb
and
sub
mov
add
jo
sbb
mov
mov
lcall
mov
call
fiadds
dec
mov
adc
sbb
call
wrmsr
mov
sbb
push
je
push
jmp
jae
add
xor
incl
rol
enterw
pop
data16
sbb
cmpsb
enter
shrb
mov
sub
aaa
jg
cmp
lahf
add
lods
add
jnp
dec
cmp
hlt
inc
ds
jl
cmp
sti
pop
test
jb
out
or
ficoms
cmpsb
mov
or
dec
add
loop
push
mov
and
add
adcl
icebp
sbb
mov
mov
pop
lods
ret
js
stos
les
jb
jecxz
mov
stc
inc
std
cmp
ret
inc
mov
mov
cltd
or
jl
mov
ja
hlt
mov
sub
pop
jp
add
test
jecxz
mov
cmc
push
jno
mov
or
sbb
mov
xor
pop
out
sub
nop
or
decl
js
addr16
mov
and
and
dec
jns
sbb
test
inc
pop
psadbw
push
mov
loopne
pop
adc
test
inc
lcall
mov
and
push
call
int
push
sbb
icebp
xchg
loopne
movsb
inc
test
mov
cld
add
xor
push
lds
push
fwait
inc
xchg
pop
adc
out
repnz
and
pop
xor
mov
mov
sbb
mov
loopne
loop
push
inc
mov
add
les
pop
lods
sbb
mov
push
mov
adc
adc
jle
inc
push
push
int3
test
and
cmp
cli
sub
mov
sub
fsubrs
ja
mov
lcall
push
adc
xor
mov
outsb
inc
mov
cs
mov
lret
push
adc
pop
or
mov
mov
movsb
push
sub
out
fucomip
ljmp
lret
adc
bound
fwait
mov
mov
and
xor
fnstsw
lods
and
pushf
dec
filds
lcall
add
inc
sub
lret
push
dec
dec
push
xchg
rorb
xchg
mov
scas
jbe
dec
pushf
lret
mov
xor
mov
nop
lock
add
or
sub
fdiv
adc
adc
cs
movhps
clc
jg
push
xchg
mov
mov
jg
mov
int3
dec
dec
cmp
or
lods
lea
mov
icebp
shrl
cmc
and
movsb
xchg
leave
rclb
loopne
movsb
rcrb
xor
and
ret
rep
scas
hlt
loope
and
sbb
call
inc
int3
call
std
ljmp
xor
dec
in
std
and
mov
not
or
pop
std
cmp
leave
and
cltd
lea
cmp
xchg
sbb
sbb
cmp
aam
aad
fists
mov
in
hlt
or
roll
or
leave
mov
call
rclb
out
ljmp
push
subl
insb
and
push
cwtl
sarb
lret
inc
incl
add
outsl
mov
test
movsb
push
mov
test
jp
aaa
mov
pop
xor
jnp
add
filds
inc
pop
je
lcall
scas
xchg
pop
lock
push
das
xchg
test
imul
inc
mov
insb
mov
lock
or
in
inc
jecxz
push
movsb
xor
dec
int3
imul
pop
jne
ret
cs
adc
pop
dec
fiadds
xchg
jle
div
push
xchg
sub
mov
pop
add
jl
jne
aad
jl
mov
sub
inc
or
push
popf
inc
mov
les
clc
aad
mulb
sbb
xor
rcll
pusha
jp,pt
adc
pop
push
sub
outsb
mov
adc
clc
mov
repz
jmp
mov
das
dec
cltd
mov
jno
jg
bound
aas
push
pop
stos
cmpl
lock
pop
scas
pushf
or
mov
loopne
scas
ljmp
loopne
pop
pusha
call
and
inc
jne
xor
xchg
sbb
mov
sarb
and
popf
into
or
stos
sbb
mov
mov
xchg
inc
sbb
cwtl
pop
adc
lcall
mov
add
subb
adc
insb
mov
xchg
or
push
cmp
aas
push
jbe
sub
inc
jmp
das
xor
pop
cmpsb
push
es
xlat
aaa
jecxz
into
add
fst
sub
dec
jp
push
adc
cmp
dec
ret
xchg
or
push
jl
cmp
fbld
mov
lds
push
out
jp
icebp
movsb
mov
sbb
inc
jno
jle
mov
add
mov
sbb
stos
mov
push
stos
cmpsb
decb
cmp
add
loopne
addr16
mov
pop
sbb
sbb
pop
or
pop
sub
imul
fwait
mov
das
xchg
push
clc
and
ret
into
cmp
nop
lret
stc
mov
mov
fdivrp
jg
pop
stos
mov
cmp
inc
loope
mov
dec
push
icebp
cmp
movsb
out
out
add
jmp
dec
add
cwtl
sub
xor
xchg
dec
dec
jp
fmull
loopne
jg
fbstp
xchg
inc
mov
sahf
sbb
mov
mov
or
sti
or
js
cmp
enter
sbb
iret
ljmp
or
xchg
daa
mov
add
lret
mull
out
sbb
jb
fisttps
mov
ficoml
int3
jne
lret
insb
cmp
inc
or
es
outsl
loop
xor
loopne
sub
push
insb
sti
add
stc
cmp
mov
test
sub
inc
in
aam
or
outsl
push
lcall
inc
mov
and
cwtl
sbb
add
into
aad
jnp
outsl
sub
adc
js
jl
add
aad
pmaddwd
mov
xchg
ds
adc
add
out
ret
jbe
fdivr
inc
mov
outsl
adc
dec
jne
lcall
test
jmp
andb
mov
je
push
loopne
and
outsb
test
jo
ror
cmp
popa
or
scas
clc
insl
fnstenv
movsl
dec
mov
lcall
push
stos
adc
sbb
dec
ja
or
icebp
jbe
add
mov
push
push
jle
pop
push
mov
dec
cmp
in
cmp
add
lcall
ret
test
fisubrs
fadds
push
pop
xchg
mov
not
dec
add
mov
or
lods
xor
sub
dec
cld
adc
rcr
xchg
je
sbb
mov
adc
adc
xor
orb
xchg
imulb
iret
jb
je
mov
mov
xlat
dec
inc
cmpl
rcll
call
nop
or
jge
push
dec
int
cmp
lcall
test
inc
mov
push
movsb
bound
hlt
pop
and
jg
mov
notb
and
pop
fwait
push
cmp
mov
pop
push
inc
rcl
jo
cli
dec
mov
fcoml
popa
sub
pop
inc
loopne
ss
push
inc
sbb
add
xchg
jne
cli
mov
and
sub
mov
in
xlat
aam
sub
lret
outsl
mov
cwtl
xchg
in
in
daa
sahf
mov
aaa
adcl
sbb
rcrl
mov
xchg
imul
push
mov
pop
enter
push
push
data16
pop
mov
scas
bound
in
ljmp
js
push
xor
fildll
lods
lret
pop
fs
or
div
cwtl
stos
mov
xchg
dec
add
cld
xlat
xchg
fidivrs
jg
mov
add
cli
and
or
adc
cmc
and
xlat
incl
aad
mov
loope
adc
dec
xor
sub
out
xchg
and
cmp
stos
push
pop
pop
stc
aaa
mov
mov
adc
popa
shrl
dec
mov
cmp
inc
repz
mov
push
orb
mov
roll
push
je
mov
and
mov
and
cmp
inc
into
js
pushf
imul
adc
stos
push
js
push
jp
mov
mov
and
nop
mov
inc
and
clc
inc
or
sbb
mov
mov
cli
dec
pusha
dec
repz
fdivrp
gs
scas
rcrb
and
pop
icebp
pop
mov
sar
out
xchg
scas
push
add
mov
scas
xchg
ret
lock
cmp
jmp
pushl
add
roll
inc
aad
mov
jbe
shl
scas
jp
fisubrs
cmp
mov
cwtl
lods
pusha
push
and
data16
call
or
ljmp
test
jge
cmp
daa
xchg
je
shlb
ret
dec
es
adc
mov
sbb
incb
rolb
mov
dec
stos
and
ja
pop
mov
xchg
shrl
xchg
and
lea
cmp
add
in
clc
movsl
repz
or
pop
lock
jns
sbb
loop
or
mov
and
dec
cli
ljmp
mov
push
lods
jae
repz
sub
xchg
pop
push
sti
les
or
pusha
jl
add
xor
lods
js
mov
les
out
imul
cwtl
inc
inc
adc
in
loop
xor
sar
push
dec
jnp
cmp
out
sbb
test
mov
sbb
test
push
add
clc
movsb
shl
ja
loop
xchg
mov
push
sarb
ss
pop
jl
push
xor
bound
aaa
cld
or
xchg
jo
push
push
shrb
pop
mov
mov
outsl
movsb
hlt
call
pop
adc
xchg
cltd
in
fsubl
pop
std
pop
in
jbe
xchg
adcl
mulb
cmp
mov
es
sar
add
sbb
add
sbb
dec
cmp
ja
leave
shrl
dec
sbb
sub
mov
adcl
fstpt
daa
movsb
sbb
call
inc
pmuludq
scas
out
repz
ja
shrl
stos
inc
fs
cmp
das
pop
popa
sbb
movsb
push
stos
rcll
out
and
clc
add
loopne
std
test
pop
jno
in
mov
int3
cmp
cmc
cmpsb
sub
sub
push
ret
dec
lods
loopne
push
shl
inc
sbb
cltd
xchg
addb
xor
fs
clc
mov
and
mov
pop
loopne
cmc
lcall
rorb
in
push
mov
enter
fnsave
lods
scas
cs
ficoms
pop
popf
ss
scas
scas
dec
jo
lods
push
add
adc
ret
add
hlt
mov
xor
lock
pop
int
inc
repz
lcall
mov
popa
bound
rcr
inc
pop
rcr
mov
lods
and
adc
push
dec
push
out
data16
mov
jmp
cmp
and
push
sbb
push
scas
test
sub
push
cli
jecxz
stos
hlt
sbb
outsl
cmp
dec
mov
inc
das
adc
mov
add
les
push
lret
mov
pop
xor
cmp
sbb
sbb
into
popl
sub
movsb
sahf
aas
add
xorl
sub
cld
pop
adc
mov
xor
xchg
dec
mov
or
xor
jle
xor
or
testb
es
scas
pop
incl
mov
and
insl
bound
loope
pushf
and
clc
push
insb
adc
jnp
mov
testb
leave
mov
loopne
cmp
lahf
jo
mov
ret
and
int3
jbe
lcall
inc
daa
mov
xor
loop
cmp
add
sbb
push
xchg
les
rorl
or
stos
lock
jno
ret
ljmp
ljmp
pop
cmp
repz
lahf
shlb
loop
cmp
mov
sbb
pop
rcrl
cld
xor
dec
xchg
adc
jle
notl
out
lock
xor
lds
mov
add
mov
mov
push
mov
or
inc
xor
shlb
or
fwait
repnz
in
mov
mov
inc
adc
cli
lea
mov
mov
inc
lock
mov
dec
pop
pop
loopne
sbb
dec
imull
ljmp
adc
add
jl
xchg
mov
xchg
mov
or
pop
sbbb
jne
sti
shlb
sti
jne
in
test
and
cmp
mov
jp
adc
mov
mov
pushl
ret
in
test
mov
shll
push
jmp
sub
push
push
xlat
pop
xchg
push
or
or
test
inc
mov
clc
mov
insl
push
in
push
mov
or
mov
decb
add
ds
lahf
jmp
add
imul
fisttps
jne
jmp
movsb
push
jno
clc
enter
push
push
clc
or
adc
je
mov
in
jo
sbbb
dec
idivb
cmp
mov
pop
lcall
imulb
and
cmp
cmc
or
push
fs
and
call
dec
mov
sub
and
ret
pop
fadd
dec
add
sub
ja
dec
fildll
xor
push
push
pop
je
pushl
fstl
fcoml
cwtl
loopne
and
and
mov
xchg
ficoms
enter
adc
daa
and
in
cmp
or
pop
stos
ss
test
push
add
or
insl
sub
hlt
mov
cmc
inc
jp
jmp
and
scas
fstpl
out
or
in
pop
mov
pop
sub
inc
adc
or
call
push
jne
pop
lea
clc
and
mov
mov
out
icebp
sub
mov
dec
mov
sub
add
pushl
in
inc
hlt
sarl
push
pusha
mov
ja
push
push
rcrb
pop
cld
push
aaa
dec
mov
out
mov
dec
loope
or
or
aaa
ss
jo
dec
lret
mov
subb
repnz
sbb
ljmp
xor
xchg
push
xchg
sub
insb
mov
orb
sbb
jecxz
movsb
jo
aas
xchg
sub
jp
mov
push
icebp
add
pushf
adc
adc
in
andl
std
ljmp
je
enter
cwtl
cmp
dec
fidivrs
call
and
into
hlt
mov
xchg
aas
pop
dec
sti
enter
gs
hlt
fidivl
jl
lcall
jbe
leave
xchg
push
pop
dec
popf
arpl
orb
lock
adc
xchg
cli
pop
and
outsb
add
fiadds
or
loopne
pop
xor
out
xchg
sbb
mov
xor
mov
lods
dec
adc
ret
and
mov
faddl
xchg
psubsw
cmp
fimull
and
outsl
mov
sub
out
xor
cs
push
cmp
push
sti
fisubrs
rorl
push
lret
call
inc
inc
and
inc
cmp
jnp
xchg
ficomps
cmpsb
lahf
ljmp
xchg
cld
scas
push
sub
test
xchg
test
mov
or
xlat
push
dec
pop
inc
fs
rcll
mov
adc
insb
or
push
lcall
aam
mov
dec
sbb
inc
addr16
scas
cli
aaa
test
push
add
xchg
ret
push
add
push
mov
decb
popf
or
pop
icebp
loope
mov
fwait
add
in
mov
fsubl
leave
shlb
scas
push
jle
sahf
leave
or
in
or
push
and
dec
sbb
cmp
xchg
cwtl
xor
or
xor
test
aaa
mov
ret
pop
ss
and
cmp
orb
pop
inc
adc
sbb
xor
mov
mov
mov
xor
loopne
ljmp
dec
adc
roll
jl
sub
add
iret
gs
pop
sbb
subb
and
sub
icebp
add
add
ret
pop
js
out
or
mov
mulb
in
out
daa
lods
add
mov
mov
mov
adc
add
cwtl
sub
jge
shrb
out
xor
aad
mov
mov
mov
cmp
call
popa
inc
nop
arpl
sub
ja
out
loopne
loop
pop
or
and
cmpsb
or
les
xor
xor
divb
call
lock
cmp
inc
jbe
int
sub
push
and
into
out
cmp
add
sahf
lahf
inc
or
xchg
sbb
decl
cmpl
xchg
mov
or
push
rol
dec
sbb
mov
mov
or
imul
mov
add
xchg
push
push
leave
cli
xorl
pop
imul
stc
inc
pop
or
aaa
dec
clc
jg
fmul
mov
mov
sbb
outsb
push
mov
jae
mov
addl
sub
pushf
pop
jno
adcl
sub
enter
mov
call
sub
scas
add
pop
mov
or
and
sbb
cmp
bound
shlb
test
pop
in
pop
imul
mov
jmp
outsb
mov
sbb
mov
lahf
pop
mov
dec
jle
rclb
aas
lret
add
xor
sti
fdivrl
and
loop
adc
jb
xchg
inc
and
lods
cwtl
cmp
adc
pop
mov
in
sub
fistps
movsb
in
push
insl
sub
lcall
scas
fdivs
addr16
sbb
out
sbb
and
pop
adc
add
push
fisttpl
imul
inc
data16
fistpl
inc
fwait
loope
mov
jmp
fisubs
call
mov
aas
loopne
lods
xor
xchg
mov
inc
cmp
push
jl
push
push
hlt
stos
mov
xor
ljmp
dec
fidivrs
mov
pushf
cli
shl
and
rorb
movsb
cli
dec
add
mov
lcall
fisubl
mov
lock
push
ljmp
pop
push
xchg
loop
cli
pusha
lcall
and
cmp
ret
mov
xor
pop
aam
xchg
dec
pop
je
jne
mov
dec
xor
loope
lock
mov
adc
mov
inc
std
fwait
popa
mov
pop
xchg
adc
rcrl
mov
jl
cli
jg
jo
or
mov
jbe
pop
aam
iret
inc
mov
or
sbb
push
jmp
mov
mov
dec
rorb
test
lahf
bound
dec
iret
xor
fs
add
mov
dec
xor
clc
jg
cmp
loop
pop
cmc
movsl
and
ret
int3
sbb
stos
pop
incl
inc
xlat
mov
pop
add
pop
incb
cld
aaa
std
xor
call
dec
add
jge
cli
and
pop
mov
xor
pusha
sbb
wrmsr
add
int
inc
sbb
call
mov
mov
ss
loopne
cmc
push
mov
ret
xchg
shrl
jecxz
sub
ss
mov
rorb
lea
rcr
jmp
add
or
stos
jge
negl
push
movsb
fisttps
mov
cmp
jbe
andb
push
sti
push
add
mov
inc
dec
inc
stos
cmpsl
dec
jb
es
aas
push
inc
xor
pushf
in
dec
add
pusha
in
addl
sbb
fdivr
sbb
call
bnd
test
or
and
ljmp
pop
lock
add
pop
or
addr16
je
jne
dec
cmp
adc
jg
mov
or
and
jnp
into
and
and
mov
add
std
pop
mov
push
js
cmp
or
dec
shlb
sar
and
sbb
jmp
mov
mov
sub
mov
cmpsb
enter
pop
xor
jp
loop
jo
inc
fidivl
int3
push
xor
xor
or
push
aas
pop
cli
cmpb
push
sar
outsb
mov
adc
or
call
sbb
push
arpl
push
loop
adcb
rorb
in
inc
dec
clc
or
mov
sub
bound
xor
push
xchg
fidivs
or
sub
lret
jne
mov
mov
pop
call
push
pop
scas
lea
sub
adc
outsl
js
or
mov
and
dec
inc
sub
or
stc
in
scas
aad
adc
loopne
scas
push
pop
mov
dec
loopne
data16
push
int
dec
pop
enter
in
jl
pop
jge
test
push
ljmp
int3
lahf
decl
out
push
sbbl
movsl
push
jecxz
add
push
cmp
lret
mov
mov
push
scas
add
icebp
dec
cli
xchg
dec
int3
sti
hlt
movsb
mov
fwait
jne
xor
inc
mov
inc
pop
inc
lods
mov
push
pusha
sarb
cld
testb
push
adc
add
imul
adc
das
pop
inc
pop
jle
data16
aas
std
clc
push
negb
outsl
xor
je
push
cld
mov
adc
test
cmpsl
rolb
or
xor
push
clc
aas
pop
jp
xor
mov
loopne
popa
movsl
fdivp
out
sbb
cli
inc
mov
outsb
ljmp
jge
dec
js
scas
push
cmpsb
cmp
xchg
cmp
sahf
xchg
loopne
push
push
loop
adc
iret
add
dec
mov
mov
lret
inc
inc
xchg
sub
cltd
and
shl
imul
fdivl
sub
sahf
fldcw
add
imul
divb
or
adc
add
mov
mov
inc
in
ss
sbb
cld
jg
jmp
into
sbb
rcl
gs
flds
out
pop
sbb
ss
mov
mov
sahf
inc
mov
outsl
jne
ja
add
pop
insb
icebp
mov
xchg
add
mov
xchg
lea
into
lods
push
popa
lcall
xor
data16
fimull
fstpt
aaa
sar
mov
mov
js
mov
std
jl
inc
add
es
movsl
xor
aaa
jb
fstpt
sbb
jbe
jecxz
jae
sub
jg
cld
cmp
pop
mov
add
and
push
inc
enter
ljmp
les
xchg
jne
sub
out
rol
mov
mov
or
push
add
pop
add
sbb
iret
rclb
lods
outsl
pop
push
stc
mov
jo
fdivrp
dec
fnstsw
loopne
aas
movsb
jge
mov
add
in
mov
lret
icebp
aas
and
pop
or
push
mov
add
jg
jmp
sbb
mov
xchg
sub
sbb
push
bound
add
add
push
and
call
sar
or
pop
mov
inc
pop
jge
pop
adc
addl
mov
push
xor
daa
mov
les
jno
decb
int
add
adc
js
xchg
and
decl
and
xchg
sbb
mov
push
imul
inc
mov
or
mov
cmp
es
adc
ja
shr
sub
out
sti
jl
cmpsl
scas
clc
jb
inc
lds
cmp
sub
xchg
hlt
dec
sbb
les
jo
inc
or
xchg
or
mov
mov
lods
or
call
push
inc
sahf
adc
mov
pop
sbb
cmp
jns
cmc
adc
cmc
outsb
dec
inc
add
xchg
push
push
movsb
dec
sub
jl
dec
adc
push
cmp
inc
cmpsb
sub
sub
stos
cmc
push
mov
je
mov
psadbw
jbe
adcb
mov
js
or
icebp
addb
adc
push
mov
icebp
or
pop
mov
pusha
js
cs
pop
call
sbb
pop
cld
out
add
sbb
sub
mov
aaa
adc
sbb
cmp
inc
loope
fdivrs
movsb
push
test
inc
mov
adc
pusha
lock
fcomps
cmp
in
sbb
mov
jle
push
pop
out
inc
sbb
hlt
scas
xchg
xlat
loop
call
adc
jbe
ds
ret
dec
pop
push
js
mov
adc
adc
gs
ret
sahf
xor
adc
or
loope
dec
out
sti
push
mov
mov
push
repnz
push
movsb
or
roll
call
rcll
lods
loop
in
fimuls
adc
ret
and
mov
mov
fsubrs
push
clc
loopne
add
dec
dec
cli
pop
aam
or
clc
fdivrl
jecxz
decb
push
sarb
lret
sbbb
pusha
and
xchg
mov
pop
nop
out
fidivrs
xorb
add
fidivl
add
jl
xor
jmp
rcrl
push
or
push
sub
xchg
inc
test
repnz
mov
push
push
rclb
jae
mov
xlat
std
testb
mov
mov
popf
xor
push
ljmp
lock
or
push
leave
push
dec
lock
imul
cltd
mov
sub
hlt
cwtl
sysenter
dec
cmpsb
out
loop
gs
cli
sahf
mov
sub
inc
pop
test
movb
test
inc
dec
add
dec
xor
dec
call
sub
pop
lret
into
aaa
pop
fsubl
or
mov
lcall
in
lret
js
inc
push
dec
lods
push
aas
push
pop
sbb
push
mov
mov
std
filds
cmpl
and
loopne
in
fcos
xchg
mov
bound
imul
dec
jg
fiadds
div
or
insl
mov
or
inc
cld
shll
mov
xchg
and
movsb
shlb
sar
inc
dec
sub
faddl
fisubs
sbb
mov
or
mov
pop
jge
repz
pop
add
pushf
fdivrs
popa
or
inc
jae
add
or
push
mov
dec
clc
mov
or
xchg
mov
shrb
cmpsl
pop
adc
dec
loopne
mov
insb
pop
sar
mov
enter
lds
and
pusha
or
pop
add
lcall
push
lods
pop
pop
stc
out
mov
push
jl
cld
sbb
lcall
ss
sar
sub
inc
inc
add
lret
neg
mov
adc
jns
repnz
push
call
jg
pop
xchg
sar
inc
lea
sub
jno
ret
mov
jo
aam
aaa
cld
xor
hlt
xchg
fistpll
mov
mov
cmpsl
adcl
xor
xchg
roll
push
faddl
push
out
sub
mov
xchg
or
sub
cmp
cmp
in
data16
inc
mov
dec
add
ljmp
out
insb
inc
cmc
mov
aas
inc
nop
jns
mov
push
daa
cmpsl
add
bound
xorb
lahf
lds
bound
cs
push
dec
cmp
clc
stos
loop
ret
into
es
jl
pop
arpl
jg
cmpsb
incb
aam
adc
and
push
int3
xchg
add
xor
arpl
rolb
push
or
pop
sbb
jl
les
push
sahf
ret
sub
lods
jg
pop
xchg
and
sbb
decb
cld
adc
sub
and
push
shl
ret
fwait
lods
jle
ret
pushl
inc
in
add
sbb
movsb
fidivrs
mov
pushf
add
cmp
pop
adc
jg
pop
push
pop
jb
adc
cmpsb
jne
leave
and
push
mov
inc
shl
xor
mov
lahf
lods
bound
lock
add
rcrl
fistps
movsb
shlb
call
pop
mov
std
pop
pop
cli
jns
neg
cmpb
add
jmp
sbb
loope
and
xor
xchg
loop,pn
inc
push
lea
xchg
stos
mov
push
ficomps
or
push
sub
lcall
fistpll
pop
sti
sbb
sub
imul
add
xor
jb
int3
cmp
ret
add
jbe
mov
adc
test
or
add
aas
adcb
sahf
fidivl
pop
sub
lds
mov
xor
push
in
dec
inc
sub
or
loopne
sub
imul
iret
and
pop
test
dec
xor
sahf
ficompl
and
add
mov
int3
pushf
cmp
out
into
lcall
loop
pop
add
and
and
or
int
ret
pop
ret
sbb
loope
xchg
lds
loopne
adc
inc
mov
andb
and
xchg
mov
cmpsb
cmpsb
xor
imul
dec
add
dec
add
and
mov
mov
pop
add
add
add
adc
stc
insl
shlb
sub
ret
jmp
push
adc
cmp
cmp
movsb
dec
mov
inc
jae
clc
dec
xchg
jg
out
lret
push
aam
data16
imul
xchg
insb
push
push
into
pushf
pop
mov
push
cwtl
sahf
mov
jbe
sub
jg
pop
sub
or
add
outsl
push
cs
xchg
adcl
testb
ljmp
cmp
sub
mov
fcomps
mov
or
test
fidivs
lods
movsb
outsb
call
or
mov
mov
dec
jp
xchg
mov
cmpsl
add
lock
int
test
test
xlat
mov
adc
xor
in
pop
stos
push
mov
dec
mov
cmp
in
out
shr
hlt
sar
fs
outsb
inc
mov
popf
add
push
jne
adc
add
add
or
sub
outsl
jbe
ficoms
cmp
fwait
scas
iret
jo
lds
and
ss
addr16
dec
ja
nop
jb
shll
and
shlb
push
test
cmp
pinsrw
mov
inc
es
sbb
sbb
call
mov
cmpsb
sub
lea
sub
orb
popf
mov
jp
loopne
sub
push
aam
push
aaa
decb
sbb
cmc
xchg
push
fimuls
push
inc
mov
hlt
repnz
comiss
daa
mov
push
aas
setp
cmp
jmp
shlb
jb
mov
fcmovnu
sbb
and
ljmp
cmp
add
fistpl
movsb
cmp
xchg
jno
or
cmc
fbstp
inc
sbb
fldl
out
clc
xor
outsl
aas
lds
clc
mov
push
insb
push
int3
decl
push
jl
mov
mov
out
or
mov
clc
cwtl
stos
ret
xor
mov
lods
cld
jo
and
cmp
adc
sub
cwtl
xchg
fsubrs
shrl
sahf
popa
push
adc
mov
sub
pop
insl
je
repnz
add
inc
mov
pop
jmp
and
ss
cmp
cld
or
xor
cwtl
push
adc
inc
loopne
test
xchg
enter
add
scas
xor
fiadds
subl
icebp
jg
jo
adc
les
inc
rolb
dec
jg
mov
in
scas
ja
call
fisttps
and
push
adc
and
jbe
pushf
xchg
sub
push
jge
aad
and
jle
or
mov
rorl
cli
add
push
out
mov
aaa
adc
push
jl
inc
les
add
or
add
push
outsb
sub
jmp
xlat
ja
idivb
jo
pop
push
adc
push
jl
jge
movsb
pop
cmp
adc
stos
sbb
and
mov
incb
cwtl
push
pop
es
sub
mov
dec
mov
hlt
int
sahf
push
clc
mov
xor
arpl
xor
xchg
ror
sub
inc
ljmp
pop
popa
sti
or
jecxz
in
jmp
jle
or
xlat
inc
fwait
ljmp
sub
test
xchg
dec
push
orl
loope
insb
negl
mov
popa
adc
int
dec
gs
and
ret
dec
cmpsb
enter
orl
jp
push
jl
leave
mov
push
mov
les
xchg
cmp
clc
mov
fistps
gs
xchg
pop
stos
out
idiv
icebp
outsl
movsb
jo
jnp
repnz
repz
jge
mov
mov
fisubrs
add
ret
add
lds
xor
xchg
pop
dec
int3
cli
lcall
rcl
clc
mov
pop
movsb
mov
out
sbb
scas
or
lcall
adc
push
mov
scas
or
les
roll
loop
mov
sub
cwtl
fs
outsl
pop
push
add
stc
nop
inc
aas
mov
add
sub
ljmp
enter
xchg
in
cmp
inc
pop
mov
sbb
sahf
inc
test
push
adc
cmp
fmull
xchg
or
rclb
outsb
cmp
mov
mov
lcall
inc
and
jne
xchg
mov
add
call
scas
add
scas
push
or
lock
and
in
stos
ror
pop
inc
push
pop
push
movsl
xlat
push
outsl
mov
fmuls
xchg
and
scas
enter
in
call
aas
dec
inc
xchg
inc
addr16
xchg
into
in
add
fmull
inc
push
mov
into
imul
cmp
lret
jo
sub
xchg
xchg
mov
pop
rcr
ret
dec
sahf
in
or
pop
add
inc
sbb
enter
jmp
cld
addr16
or
cmpsl
cwtl
subl
mov
fcom
test
mov
insb
push
or
sbb
xor
cmp
les
mov
xor
fcomip
add
sbb
enter
aas
cmp
xchg
mov
mov
add
imul
movsl
push
dec
shll
xorb
mov
ds
decl
dec
notb
cmp
add
mov
pushl
pop
and
sub
push
fmuls
fwait
aam
mov
push
repnz
jbe
add
stos
cli
sub
xor
push
fnstenv
push
rcl
xchg
fiaddl
cmp
leave
je
les
ds
xchg
popa
push
jecxz
adcb
popf
cmpsb
cmc
xor
mov
adc
mov
mov
or
pop
pop
hlt
ljmp
xchg
inc
aad
cmpsl
mov
mov
or
fisubl
cmc
push
sarb
hlt
jecxz
dec
loop
pushl
and
mov
sbb
popa
mov
push
jge
das
add
test
cld
movsb
jnp
arpl
or
insl
mov
cmp
pushl
and
mov
xchg
jne
mov
add
in
and
sti
xchg
cmp
jg
sbb
mov
pop
popa
out
push
push
test
cld
push
stos
cld
pop
ret
cmc
fsts
dec
adc
mov
test
sarb
xchg
xchg
mov
ja
fbld
rcl
sub
mov
mov
xor
lock
xchg
xor
pop
lcall
sbb
icebp
jmp
mov
andb
inc
add
mov
mov
testb
clc
add
into
push
xor
jge
add
data16
das
stos
enter
push
sbb
orb
push
xchg
call
push
xchg
or
xchg
jbe
out
jae
outsb
pusha
pop
test
fidivs
in
add
jge
jns
xor
aam
and
icebp
mov
push
inc
movl
mov
mov
mov
or
push
inc
out
test
in
push
cmpsl
xchg
test
das
adc
cmp
cmp
loope
adc
or
cmpl
cmp
dec
imul
pusha
cmp
frstor
stos
imul
mov
mov
inc
and
jo
or
push
mov
pop
pusha
jmp
cmpsb
and
push
mov
iret
sub
mov
les
popa
xchg
push
faddl
xchg
dec
aam
xchg
jmp
jno
test
lods
adc
adc
add
push
cld
or
cli
add
sub
aas
sub
les
aad
or
add
loope
mov
dec
subb
add
or
pop
and
mov
sub
dec
inc
lret
aam
pop
hlt
add
loop
inc
push
xor
dec
scas
out
enter
mov
dec
jbe
push
ljmp
rorb
pop
icebp
icebp
insl
imul
jle
cs
decb
cli
pop
push
mov
push
incl
outsl
sub
out
or
add
pop
fisttpl
insl
rolb
popa
and
shl
lcall
and
rcrb
sub
ret
outsb
dec
pop
dec
daa
mov
aas
mov
sbb
je
std
cmpsl
sbb
std
add
cmp
sbb
mov
fisttpll
mov
data16
pop
add
sub
cli
out
pop
in
xchg
out
data16
fisttps
nop
nop
orl
mov
jg
fdivr
xchg
jbe
push
ja
movsb
sbb
std
call
jae
les
sahf
cmp
ljmp
add
xor
jbe,pn
cmp
adc
int3
or
push
or
fisubs
xor
fsubl
xor
cld
lahf
mov
clc
sbb
dec
add
mov
jb
cmpsb
or
ljmp
and
jle
jp
out
loopne
movsb
mov
mov
lock
push
in
hlt
jbe
push
mov
imul
dec
jle
mov
in
inc
push
fwait
pop
xchg
outsl
gs
leave
aam
inc
cli
fwait
dec
xchg
mov
and
sub
push
aaa
jecxz
mov
mov
sub
adc
shll
jmp
adc
mov
pusha
push
sahf
xchg
cld
in
std
sub
dec
mov
and
in
add
sub
inc
sub
pop
sub
test
adc
mov
inc
in
cmp
pop
inc
popf
dec
in
push
push
jmp
popl
jnp
pop
ljmp
scas
inc
lea
lods
testl
push
sbb
jb
icebp
xor
mov
es
nop
inc
mov
dec
inc
adc
fldl
pop
mov
fcmove
mov
outsb
adc
inc
fadds
or
dec
xor
insl
sbb
push
inc
or
mov
push
inc
xor
mov
or
test
inc
cmp
lret
filds
mov
data16
add
je
jp
pop
addl
sbb
cmp
fisubs
sub
sub
inc
sbb
sbb
insl
push
jae
ss
jns
push
gs
data16
add
dec
mov
mov
cmc
xor
push
fcoms
in
out
pop
into
pop
or
add
or
negl
push
rcll
or
xor
enter
adc
in
mov
inc
stos
into
jg
sub
xor
add
iret
dec
push
lret
sbb
add
or
add
sub
pop
inc
xlat
add
sti
mov
sub
cmpsl
adc
add
pop
sub
mov
ret
pop
pop
fwait
lcall
insb
mull
push
out
inc
aaa
sub
inc
xchg
unpcklps
inc
add
mov
sub
outsl
inc
dec
add
sub
push
out
fnstcw
push
loop
jns
dec
inc
sub
mov
cmpb
lret
mov
ds
pop
dec
inc
mov
add
inc
adc
add
push
mov
add
dec
sbbl
sbb
pop
test
test
jo
js
fistps
lret
xor
inc
pop
pop
push
lret
addr16
imul
xchg
push
int3
add
xchg
sub
push
je
sbb
xor
or
xor
xor
inc
and
out
pushf
repz
xchg
add
mov
dec
shlb
dec
inc
sub
dec
inc
lahf
jno
dec
data16
cmpsl
cmp
dec
pop
out
test
inc
dec
dec
testl
push
dec
aaa
fdiv
or
sub
fisubrl
xlat
push
lret
xchg
cmc
loope
cmp
jae
push
pop
fndisi(8087
fcoms
repnz
andb
ds
rcrb
stos
and
ret
stos
sbb
pop
jne
push
xor
outsl
push
fs
shll
test
mov
test
outsl
insl
add
push
out
mov
ss
pop
jp
inc
inc
pop
pop
push
nop
xchg
fadd
push
cmpsl
jnp
mov
jle
jb
and
ss
sub
or
or
roll
mov
aam
addb
aam
mov
push
pop
scas
add
push
nop
pusha
ret
add
jp
movl
gs
push
es
fxch
push
push
jle
arpl
fadds
imul
sbb
in
dec
hlt
xchg
les
inc
and
mov
push
jmp
mov
fadds
inc
push
lods
imul
push
add
push
stos
outsb
dec
dec
push
stc
clc
data16
fmuls
dec
pop
ret
jnp
add
movsl
sar
stos
lcall
inc
inc
add
pop
loope
and
repz
add
or
pop
ret
push
inc
push
inc
inc
dec
aaa
cmp
xchg
and
inc
xor
inc
dec
xor
or
hlt
repz
mov
pusha
jle
lods
ja
mov
inc
setb
inc
loopne
aam
cli
bound
ja
jb
add
in
inc
sub
inc
lock
push
cmc
ljmp
xlat
andnps
inc
xor
bound
xlat
lds
ds
repz
cmpsl
push
inc
mov
or
or
cltd
add
das
jecxz
loopne
sub
push
dec
mov
xchg
inc
rol
pop
add
pop
hlt
sbb
and
pop
aaa
popf
inc
js
fsts
jbe
setno
faddp
inc
mov
mov
push
outsl
push
dec
sbb
push
mov
adc
sub
mov
sub
dec
add
inc
mov
pop
push
jno
ret
clc
subl
mov
dec
jae
xchg
xor
movsl
and
in
cld
inc
mov
loopne
jl
repz
enter
cwtl
jp
stos
lcall
sbb
insb
jno
sbb
pop
mov
das
add
aaa
and
test
cld
test
xor
cmp
test
fdivl
pop
pop
mov
mov
pop
call
push
jne
pop
ret
lret
dec
add
dec
fnstenv
xchg
sub
dec
dec
cmp
cli
jns
push
mov
mov
mov
dec
and
mov
dec
push
mov
fcmovb
push
outsb
xor
ret
cmp
rorl
add
adc
in
sbb
inc
shlb
or
push
rcrl
jb
dec
push
inc
test
aaa
sub
imul
add
lcall
xor
sarb
add
inc
dec
repnz
daa
outsl
xor
xor
inc
adc
mov
mov
dec
push
mov
out
lock
andb
mov
insl
ja
dec
xor
or
dec
and
add
rorl
adc
sbb
les
inc
and
add
fwait
dec
cld
dec
je
popa
outsl
ds
popa
lods
shrb
push
push
repnz
dec
cmp
and
lods
pop
add
rorl
jo
cs
dec
in
jns
popa
push
xlat
test
sub
lcall
pop
daa
insb
bound
and
rclb
lods
cld
cwtl
shll
mov
and
and
loop
and
cwtl
movl
lea
dec
mov
and
mov
mov
inc
loope
mov
cmpsb
dec
rcr
mov
jle
popa
repz
mov
rorl
fildll
jnp
es
pop
add
call
pop
sub
lods
cmp
cmp
clc
or
jmp
dec
daa
hlt
inc
inc
sub
sbb
jb
xor
addl
std
lods
sbb
cwtl
sbb
mov
hlt
stos
add
out
aam
repnz
mov
rep
xchg
lock
jg
push
add
jmp
push
xchg
dec
lret
dec
add
jae
pop
pusha
data16
mov
mov
cmpsb
out
pop
add
loop
and
adcl
cmp
cs
push
test
dec
add
push
and
out
loop
ret
adc
in
cmp
add
sbb
aaa
mov
roll
add
sbb
cmp
sub
pop
int
jne
add
inc
push
loop
into
adc
xchg
out
mov
jmp
jg
cli
repnz
aaa
icebp
pop
pop
js
mov
lea
stos
or
or
scas
pop
cld
mov
inc
js
xor
jo
loop
or
mov
lret
xlat
or
inc
cld
lahf
push
xchg
add
add
push
adc
add
stos
push
outsb
xchg
orb
push
sbb
dec
ret
int
pop
lock
jl
mov
inc
cmp
xor
shll
mov
shrb
inc
inc
iret
sub
hlt
inc
push
adc
sbb
mov
add
decl
aas
xor
add
add
clc
xchg
push
out
testb
sub
adc
rorl
jp
sub
jbe
mov
clc
mov
pop
in
adc
mov
ljmp
out
add
das
mulb
add
lcall
adc
xchg
push
sar
add
out
push
stc
xchg
pushf
dec
ljmp
or
lcall
mov
push
test
xor
cmp
xchg
imul
add
in
popf
add
add
cmp
dec
xchg
and
iret
adc
jg
and
xchg
scas
jo
mov
inc
outsl
and
add
jne
not
add
push
xor
add
sub
jo
enter
fwait
lea
enter
mov
ret
or
in
pop
cld
push
adc
stos
hlt
lock
mov
pusha
push
enter
pusha
ss
hlt
in
xor
add
sbb
mov
loopne
add
je
push
sub
sub
or
insb
ljmp
xor
adc
xchg
outsb
ret
jmp
insb
pop
int3
jno
mov
fisubrs
cmpsb
xchg
mov
fs
add
pop
dec
adc
sub
lcall
enter
ja
divl
fimull
mov
scas
or
cmp
push
add
mov
and
jp
push
call
push
and
or
push
jle
xchg
mov
xor
xchg
mov
jns
ljmp
fimuls
repz
xchg
jg
xchg
xchg
lock
inc
adc
add
std
add
dec
rclb
int3
inc
xchg
je
or
imul
inc
inc
inc
xchg
pop
icebp
fcomip
pop
imul
mov
cwtl
or
fstl
mov
outsb
imul
jle
lods
rcl
jg
dec
or
add
mov
loop
outsb
insb
pop
fiadds
or
movsb
sbb
scas
cli
pop
fsubrl
mov
enter
test
mov
xor
cmp
rclb
inc
nop
mov
data16
xchg
sti
inc
push
inc
popf
mov
es
inc
sbb
mov
shr
sahf
loopne
mov
mov
add
push
sbb
cmc
in
mov
inc
jp
add
loop
push
pop
stos
std
mov
push
dec
mov
fistps
pop
push
adc
dec
and
dec
mov
cmc
adc
fwait
jecxz
mov
pop
mov
lods
sub
stos
push
dec
leave
pop
ret
sub
sub
push
ret
call
jecxz
sub
add
out
lcall
fimuls
arpl
icebp
stc
and
cmp
out
loop
cld
int
or
iret
cmpsb
push
cmp
cli
iret
jae
insb
mov
add
mov
les
dec
adc
and
pop
sub
inc
roll
jmp
shlb
fimull
lods
inc
les
sbb
mov
inc
jno
dec
inc
mov
push
or
pop
dec
cmp
dec
inc
mov
fcom
mov
pop
mov
loopne
jecxz
aam
loope
xor
add
fnstenv
push
and
fdivrs
push
mov
fwait
pop
and
add
jb
cmp
loope
mov
add
sub
jecxz
fcmovnb
inc
mov
stos
dec
imul
jnp
jo
stos
pop
in
ss
movsb
popa
sbb
mov
bound
sahf
bound
mov
or
push
ja
or
test
xor
inc
push
imul
leave
add
movsb
lock
mov
mov
dec
ljmp
cli
ljmp
jae
addr16
hlt
pop
mov
inc
orb
add
insl
pop
cmp
and
lret
shrb
xchg
mov
adc
dec
jg
sbb
lahf
stc
pop
dec
adc
addr16
popf
insb
adc
popa
mov
cmp
mov
jg
dec
arpl
xchg
and
sbb
test
sbb
pusha
and
mov
push
or
sarb
into
jo
inc
and
mov
dec
nop
xchg
sub
and
psrld
sub
push
loope
sbb
test
fbld
loop
arpl
icebp
ja
pop
mov
add
dec
shll
xchg
mov
or
push
inc
leave
imul
mov
std
mov
jb
mov
cwtl
mov
xlat
mov
pop
mov
push
jo
imulb
sahf
pop
xchg
mov
aas
cli
nop
xchg
add
fisubs
add
inc
stc
test
mov
aam
mov
and
into
out
xchg
pop
add
enter
jbe
addl
jge
xchg
and
jnp
mov
sar
shl
mov
or
adc
arpl
clc
and
adc
add
lods
mov
sub
jl
sub
mov
xlat
mulb
sahf
add
xor
sbb
ret
outsb
pop
roll
pop
dec
icebp
sub
mov
test
lods
and
popf
push
pop
cmp
inc
cs
cmp
jb
xlat
xor
jmp
aam
mov
orb
incb
dec
dec
ljmp
push
mov
int3
sub
adc
ljmp
and
das
into
fsubrs
mov
decl
and
push
mov
loop
mov
popf
jmp
sbb
rolb
dec
add
mov
cmpsb
adc
pop
ja
out
sub
les
jmp
filds
inc
xchg
shl
fcmovu
daa
mov
les
adcb
push
dec
push
outsb
pop
cmpsb
test
bound
das
xor
in
pusha
ret
mov
mov
sbb
adc
out
cmpsb
icebp
bound
inc
cwtl
pusha
sarl
icebp
negb
jns
aaa
inc
push
pop
sub
mov
jl
aam
out
jge
cwtl
test
fwait
je
lret
adc
cs
out
ret
mov
mov
in
data16
mov
mov
in
lods
stos
push
leave
pop
mov
mov
jmp
inc
jmp
sti
inc
push
test
add
popa
loopne
les
jge
mov
mov
stos
icebp
inc
cs
out
out
loopne
mov
pop
clc
adc
and
or
pop
pop
pop
adc
int3
into
pop
sbb
xchg
dec
hlt
pop
push
ret
sbb
pop
cmp
sbb
adc
pop
push
icebp
rcll
aaa
jmp
mov
cmp
push
xor
das
sarb
inc
push
add
push
add
das
out
sub
dec
add
arpl
or
xchg
ret
repnz
push
lcall
imul
adc
ret
pop
mov
inc
cwtl
xchg
je
add
sbb
mov
enter
mov
aas
mov
mov
insl
popa
fmull
push
add
shl
in
call
or
inc
out
or
fstps
cli
jno
cltd
test
xor
mov
sti
mov
scas
inc
mov
push
or
jg
or
and
sub
dec
dec
out
ljmp
jecxz
cmpsb
or
inc
push
pop
lcall
fistps
mov
sbb
pusha
out
scas
faddp
fldl
loope
inc
pop
dec
out
push
xor
cld
fwait
add
aam
lods
lea
cmp
mov
ret
push
lret
movl
pop
cmp
sbb
push
js
jnp
adcb
sbb
hlt
ds
jo
mov
orl
mov
xor
mov
inc
fmull
pop
aas
repz
cmp
aam
add
aam
push
sbb
mov
inc
idiv
mov
ds
loope
add
inc
movb
movsl
cltd
and
mov
push
repnz
xchg
out
aad
mov
shll
mov
or
int3
loop
or
mov
rclb
pop
addb
mov
repnz
call
cli
and
stos
test
int3
movsb
testb
mov
shlb
sbbb
cmp
outsb
cld
cmp
mov
shlb
or
jge
or
clc
mov
xor
mov
pop
jbe
inc
xlat
add
dec
out
in
sub
rcl
pop
cmp
or
loop
leave
pop
push
pop
imul
push
aam
shrb
adc
ljmp
and
mov
push
inc
and
sahf
stos
lods
adc
mov
fsubs
push
jle
cmp
add
xlat
insb
decl
push
rol
add
lock
lods
xchg
test
scas
fwait
ds
inc
mov
leave
mov
sub
fidivrl
jnp
or
mov
inc
data16
cmp
adc
test
incl
or
xchg
push
pop
scas
xor
push
les
out
or
in
mov
js
mov
adc
adc
pop
dec
out
mov
cld
mov
push
cmp
jp
pop
xor
lock
dec
pushf
call
push
fdivrl
jmp
call
subl
sahf
jbe
stc
decb
cs
subb
mov
xchg
data16
jg
andb
sub
mov
or
mov
and
sbbb
or
inc
adc
mov
mov
dec
shr
push
pop
inc
icebp
call
xchg
out
sub
test
jle
cld
mov
stos
lds
jmp
xor
dec
das
jecxz
push
adc
cmp
push
sub
decl
xchg
cmpsl
or
xor
jle
jge
jo
inc
test
xlat
cmp
out
nop
repnz
dec
xchg
mov
sarb
sub
cmpb
pop
inc
test
and
fwait
ror
push
jg
sti
mov
or
cmp
and
push
pop
repnz
aaa
cmp
add
add
out
pushl
pop
pop
and
shrb
cwtl
lcall
ficoms
jno
call
pop
sti
pop
and
pop
xchg
jnp
in
outsb
add
rcrb
aad
rcrb
cmp
dec
jecxz
clc
orb
mov
loopne
add
sbb
pop
fiadds
pusha
nop
pop
mov
cmc
xchg
sub
jb
ja
cli
pop
mov
add
call
mov
stos
stos
lds
jl
enter
xor
out
mov
sub
clc
and
push
int
loope,pn
jmp
adc
dec
and
jl
push
pop
xor
cli
cmp
xchg
mov
fwait
or
jo
adc
sbb
sti
shrb
inc
std
inc
stos
and
sub
gs
adc
fs
dec
aad
pop
push
out
filds
adc
test
cmp
mov
mov
sbb
adc
push
out
xor
cmp
and
mov
arpl
pop
pop
cmc
sete
push
inc
sub
push
and
fdivr
mov
cltd
pcmpgtd
fdivr
sub
mov
jns
faddp
addr16
stos
push
sub
outsl
ds
push
out
in
cmp
call
mov
push
add
aas
adc
jecxz
fistl
or
lahf
mov
cmpl
jae
loopne
or
xchg
inc
pop
shlb
loop
cmp
mov
add
out
cli
jbe
es
js
jp
sbb
rorb
addr16
xor
pop
mov
push
pop
stos
cli
test
ljmp
mov
pop
jns
lea
scas
adc
loopne
mov
test
mov
out
inc
sub
call
or
out
push
cmpb
jp
inc
daa
mov
jne
mov
inc
shll
adc
jge
not
xchg
mov
cld
push
mov
lock
nop
fidivs
inc
into
cld
jg
inc
rclb
in
loope
pusha
stos
jno
nop
mov
jecxz
adc
ja
inc
imul
add
cmpsb
cmp
pop
push
xchg
out
dec
push
push
add
dec
push
or
dec
cmp
cmp
mov
adcb
xor
cs
out
fcmovne
sbb
pushf
data16
cmpsb
call
xor
sbb
lahf
outsl
xchg
jb
lcall
push
lea
test
mov
push
or
lcall
insl
mov
xor
negb
test
fmuls
repz
pop
nop
push
sbb
movl
cmp
ret
enter
test
xor
add
mov
add
loopne
daa
mov
test
jmp
jecxz
or
inc
add
and
adc
out
adc
mov
and
stos
cmp
pop
sarl
hlt
add
lret
movsl
lret
jo
xchg
mov
sub
test
cmp
mov
dec
push
push
nop
sub
idivb
push
jmp
mov
sub
jb
sbb
gs
inc
xor
and
pop
outsb
or
adc
and
mov
adc
hlt
and
mov
mov
incl
jecxz
xchg
inc
pop
sbb
mov
add
addb
enter
mov
cmp
and
test
neg
sbb
cmpl
ss
repz
test
incl
mov
mov
add
push
cmp
dec
push
pusha
mov
push
or
fldt
ss
mov
mov
bound
xor
cli
out
jp
adcb
mov
mov
testb
mov
push
sub
push
mov
xor
jp
lret
in
xor
lret
and
popa
sub
loop
pop
lods
repnz
test
ljmp
push
lea
hlt
or
aam
das
or
and
push
je
mov
out
into
pop
ljmp
iret
push
push
sub
test
xchg
sbb
dec
or
adc
aas
js
lahf
sub
or
inc
dec
pop
cmp
rorb
mov
mov
clc
jno
dec
xchg
pop
mov
pop
jge
repnz
dec
movsl
int3
into
push
add
inc
sti
mov
mov
pop
lcall
jg
cli
ja
pop
out
cltd
jl
mov
dec
in
daa
and
xor
loop
loope
loop
pop
and
jb
pushf
and
mov
inc
push
fs
ret
pop
push
icebp
jne
push
or
arpl
rclb
push
mov
into
fnstsw
dec
mov
fistpl
ljmp
jb
xor
mov
stos
rol
mov
inc
pop
js
std
jg
xchg
std
popl
repnz
pop
cmp
pop
push
push
xchg
push
mov
out
mov
adc
or
pushw
pop
test
mov
subb
hlt
stc
es
and
and
mov
xorb
mov
jo
pop
shrl
fcomip
subb
mov
fbstp
add
inc
dec
mov
stos
jmp
bound
imul
out
pop
clc
aam
mov
fistpl
aas
mov
in
inc
aaa
icebp
and
inc
add
lret
ss
test
loop
sarl
test
out
clc
xlat
inc
es
xor
add
mov
pop
push
xor
cld
mov
lock
push
loopne
adc
adc
loop
sbb
clc
popa
loope
mov
mov
add
jl
xor
xor
sahf
stc
lock
or
dec
sbb
cmp
or
push
fcoms
dec
jo
fbld
test
cwtl
cmp
cmovle
add
jmp
pop
insb
pop
jb
push
sbb
jp
cmp
lods
test
xchg
sbb
mov
xchg
int3
sub
cmc
xchg
loop
aaa
sbb
add
mov
add
pop
adc
pop
insb
lcall
jecxz
aaa
xor
mov
pop
xchg
mov
jg
jl
mov
cmpsl
cli
rolb
or
xor
jo
add
fwait
xor
fsubrs
jmp
mov
push
js
push
repz
sbb
in
daa
adc
inc
sub
mov
mov
sbb
mov
fidivrs
rcrb
dec
stc
push
add
mov
jns
je
bound
mov
pop
inc
or
dec
jns
roll
pop
cmpsb
add
hlt
stos
lret
mov
insl
repnz
adc
adc
lock
das
jo
or
sub
xor
jmp
pop
sbb
mov
ds
sub
es
jle
mov
or
int3
mov
dec
leave
add
mov
ret
dec
cmp
mov
cld
mov
inc
std
insb
in
je
dec
inc
dec
push
cmp
adc
jo
test
mov
add
mov
fwait
das
push
mov
mov
and
xor
jmp
push
lcall
ja
push
fwait
call
scas
fistpll
lods
enter
pop
mov
push
or
mov
adc
mov
jecxz
pusha
fdivr
stos
stos
push
jmp
pop
xchg
add
pop
aas
cmc
das
test
pop
cld
push
xchg
and
push
pop
inc
and
cmp
xchg
aam
xchg
push
adcl
push
loope
mov
xor
xor
sbb
sti
mov
nop
fidivrs
and
jp
les
sub
imul
inc
fcomi
adc
cmp
outsb
jecxz
insb
sub
sarb
test
dec
sar
pop
dec
aam
xchg
mov
dec
movsl
adc
je
addr16
xor
loope
xchg
xor
sub
fs
sub
adc
push
inc
xchg
je
lahf
imul
clc
mov
inc
cmp
rolb
sar
and
adc
loopne
enter
jne
sar
xchg
out
loope
xchg
cmp
pop
push
sbb
jg
bound
imul
push
rolb
fs
pop
lock
enter
call
add
std
pop
loope
aaa
jb
movsb
inc
xor
sarb
das
add
adc
mov
mov
pop
cld
loop
or
test
addr16
jge
adc
mov
sbbb
daa
or
add
and
push
movsb
data16
xor
cmc
call
add
cwtl
outsb
shr
pop
xchg
sub
or
ret
test
out
dec
ljmp
test
sbb
ljmp
pop
or
xchg
mov
movsl
cli
mov
incb
xor
sub
add
lods
cmp
mov
xchg
xchg
loopne
ret
ret
data16
jnp
pop
mov
pop
or
and
dec
mov
js
aam
insb
out
push
sub
sbb
cmc
mov
andb
adc
call
dec
push
jo
adc
adc
cmp
das
clc
mov
cmc
or
sbb
push
pop
mov
cmp
mov
push
xor
xchg
rcrb
insl
leave
shl
lea
sub
sub
stos
sub
inc
jmp
jmp
push
sbb
mov
clc
mov
push
jbe
lods
add
add
pushl
out
push
mov
pop
cmpl
subl
add
or
cld
loope
filds
sbb
mov
adc
inc
mov
push
adc
rolb
es
and
sbb
movsl
inc
push
xchg
adc
sub
xchg
or
popf
mov
cmp
inc
into
rcl
incl
pop
cltd
mov
push
adc
subl
cmp
bound
arpl
call
out
cld
mov
cwtl
pop
shl
or
mov
out
mov
incl
ljmp
push
cmp
clc
sub
pushf
add
loope
xlat
sbb
cmc
decl
fisubrs
lock
xchg
dec
ret
test
add
lods
es
jge
popa
daa
mov
ss
pushf
loopne
xor
in
pop
icebp
mov
jne
imul
cmp
xchg
push
sahf
xchg
and
dec
cmp
flds
pop
sbb
ret
push
out
xchg
mov
or
loopne
cld
icebp
sti
mov
mov
loope
cli
incl
xchg
add
add
pop
je
push
lcall
cmp
pop
push
mov
pop
hlt
or
aam
fcompl
outsb
sbb
sub
cmp
add
xor
adc
fidivs
push
cmp
jecxz,pn
xchg
dec
imul
mov
hlt
vpmadcsswd
je
push
scas
fists
pop
push
mov
and
imul
jo
scas
and
cmp
sahf
mov
nop
popa
xchg
fs
mov
into
xor
add
push
jge
cld
insb
adc
or
add
mov
in
scas
sub
jle
dec
mov
lret
rorb
fisubrs
ret
ss
add
mov
inc
mov
movb
incl
sbb
add
pop
inc
incb
jle
iret
add
mov
push
out
xchg
ja
mov
mov
andb
cltd
sub
dec
jp
pop
sbb
fs
loop
pop
push
sub
cmpsl
test
notb
clc
add
fistps
adc
in
mov
cmpsb
push
loopne
or
movsb
dec
jge
test
pushf
fnstcw
std
stos
stos
dec
scas
es
pop
sub
shlb
add
sti
sub
jge
mov
es
movsl
push
inc
stos
add
mov
pop
inc
sbb
sbb
shr
mov
les
xchg
test
insl
fstenv
leave
push
mov
mov
mov
fnsave
mov
mov
and
das
mov
sub
mov
xchg
pushf
sbb
inc
cmp
push
js
adcb
test
cmp
mov
loopne
int3
sbb
jo
jecxz
clc
or
mov
je
dec
xchg
pop
add
ds
inc
mov
mov
jbe
pop
sub
xchg
mov
sbb
sbbb
loop
inc
xor
or
jb
clc
aad
fildll
lcall
clc
loope
outsl
pop
icebp
ljmp
mov
jg
mov
sahf
or
mov
hlt
movsb
cs
lea
sbb
push
ret
dec
cwtl
mov
cmpsb
jb
ret
scas
call
add
sbb
test
bswap
shll
inc
in
inc
sbb
xchg
adc
cmp
sub
xchg
and
popa
rorl
jne
adc
or
mov
fwait
push
jp
aas
mov
js
sub
push
xchg
cmp
loop
and
nop
xchg
or
and
data16
decl
pushf
fimuls
out
orb
or
pop
stc
decl
jg
jb
dec
leave
sbb
adc
or
rclb
adc
mov
dec
outsl
ljmp
jmp
sar
mov
mov
or
test
ljmp
shll
jo
xor
aaa
lods
adc
fadds
xor
push
xor
andb
sub
arpl
pop
mov
or
adc
js
mov
sbb
cmc
pop
repz
or
dec
hlt
mov
push
rclb
or
ljmp
fists
xor
stc
push
xchg
sub
aad
cs
mov
scas
push
cli
pop
add
push
repnz
pop
push
xor
xor
xchg
push
jo
mov
lock
push
pop
or
dec
pop
imul
jno
and
movsb
scas
clc
aam
gs
push
int
inc
in
mov
shrb
lea
outsl
jle
inc
das
adc
or
push
std
xchg
mov
imul
cltd
xor
std
add
pop
daa
cs
cmpsl
sbb
or
dec
inc
lods
add
sub
sahf
pop
rorl
rolb
stos
mov
fs
mov
int3
xchg
in
cmpsl
add
icebp
cmp
fs
shr
test
scas
push
add
in
shrb
test
adc
or
sbb
add
jbe
jge
fistpl
imul
cmpsl
cmc
into
lock
push
enter
loopne
jg
xchg
mov
js
bound
gs
inc
add
jl
and
ljmp
add
jmp
mov
incl
jae
hlt
add
push
mov
mov
loope
call
into
add
nop
out
dec
pushf
jno
ljmp
test
sub
jge
or
sahf
daa
add
loopne
push
mov
mov
inc
add
fimull
lcall
nop
mov
dec
dec
mov
decb
cli
inc
ficoml
pop
adc
pop
popa
stos
and
inc
xor
mov
mov
xchg
xor
outsb
test
mov
push
cmp
cld
pop
push
lock
and
mov
mov
mov
jecxz
subb
or
cmpsb
jb
je
sbb
sti
fistpll
outsb
lock
in
lock
mov
jmp
adc
jo
aas
sub
ljmp
scas
mov
push
pop
and
mov
add
stos
lock
mov
mov
lods
rcl
fwait
push
fs
lds
pop
sarb
or
jne
mov
and
mov
scas
sub
fildll
sub
mov
popf
out
mov
inc
xchg
sarb
and
lcall
cltd
iret
mov
cmpsb
mov
or
lds
pushf
ret
out
xchg
pop
add
jg
mov
stc
outsb
out
and
mov
stos
out
data16
rcll
dec
pop
add
sub
cli
incl
shrb
dec
dec
addr16
add
pushf
xor
std
xchg
je
adc
mov
add
mov
jnp
jl
mov
sub
xchg
sub
inc
sub
lods
pusha
mov
je
cmp
add
sahf
stc
xor
mov
and
movb
sbb
sub
mov
pop
filds
jg
lahf
inc
and
ficoms
int3
rolb
repnz
or
lret
test
mov
sbb
jp
or
out
sub
jecxz
mov
ret
int3
xchg
call
dec
aam
adc
lret
cli
mov
sbb
jge
mov
mov
rolb
xor
je
inc
mov
dec
push
xchg
xorl
stos
fcomps
xlat
popf
ret
push
add
xchg
dec
scas
dec
mov
adcb
movsl
mov
cmpsb
jne
dec
or
daa
sbb
imul
jbe
clc
leave
mov
jecxz
add
cli
xchg
mov
xchg
clc
pop
outsl
fadd
pusha
loope
jge
fdivs
dec
add
test
xchg
fldenv
jg
mov
inc
ja
pop
or
clc
sbb
add
mov
out
pop
mov
pop
dec
in
mov
mov
hlt
fcomip
and
adcb
fucomip
xchg
dec
dec
mov
leave
adc
rorl
frstor
or
pop
fnsave
jp
test
mov
insl
add
lret
cmp
lods
mov
add
testl
push
fs
hlt
add
sbb
add
fs
fldt
rorb
adc
imul
fs
inc
int
cwtl
out
fisubs
in
clc
dec
jmp
lods
ret
jmp
testl
in
add
mov
pop
jge
aam
stos
clc
les
xorb
stos
sub
es
jge,pt
inc
jne
repnz
call
scas
sbb
sbb
cltd
xchg
sbb
mov
in
mov
or
cwtl
lcall
repz
movsb
js
call
push
jl
sti
jp
test
cmc
loopne
mov
add
aam
std
addr16
push
cmp
xor
lcall
jno
sbb
or
lock
fwait
loope
xchg
and
jp
or
clc
sbb
mov
mov
outsb
mov
and
pop
and
js
std
call
test
mov
shlb
and
pushf
xor
outsl
push
loopne
mov
sub
mov
lahf
shr
mov
arpl
add
loopne
aad
scas
lcall
sub
sar
cli
pop
xor
and
cltd
jp
adc
xchg
orl
scas
inc
out
sub
loop
sub
pusha
jge
add
aas
daa
dec
sarl
mov
push
aad
andb
push
das
xchg
sahf
push
cmpsl
jb
shll
or
out
lock
jbe
iret
xchg
fcomps
xchg
mov
add
scas
inc
lret
imul
and
ljmp
inc
gs
pop
xchg
hlt
sub
pusha
mov
lahf
or
mov
inc
pusha
push
push
and
fwait
jg
mov
js
movsl
dec
adc
pusha
lret
ret
mov
data16
mov
in
mov
arpl
mov
sbb
fimuls
sub
ret
or
lds
and
dec
jle
mov
ljmp
daa
popa
aas
mov
dec
mov
push
into
test
shr
jmp
jb
or
jo
cmovs
sbb
nop
jno
jge
mov
decl
clc
icebp
sbb
pushf
in
popa
xlat
pop
and
mov
pop
inc
fadds
mov
lcall
bound
xchg
ret
inc
pop
call
pushf
mov
gs
fisttps
aaa
push
subb
jle
pop
mov
loope
fistpll
pop
inc
adcb
xor
sub
nop
enter
je,pn
xor
sbb
movsb
sbb
and
js
scas
sar
les
daa
dec
sub
inc
adc
icebp
test
in
fnstenv
push
insb
xchg
shll
shlb
cmpl
ljmp
vaddsd
jne
pop
adc
xchg
mov
push
clc
jo
fisubl
nop
in
js
mov
ds
or
cld
outsl
sbb
js
mov
addr16
jbe
roll
enter
pop
fsubp
incl
sub
cwtd
or
jp
mov
mov
int3
lock
test
adc
sub
incl
sbb
ss
shll
pop
jbe
andb
lahf
nop
les
xor
andl
incl
jmp
push
adc
data16
cmp
icebp
inc
outsb
lock
ds
dec
pusha
daa
cmp
incl
adc
xchg
xchg
popa
test
dec
dec
jmp
mov
mov
insb
hlt
in
popl
incb
aad
or
js
push
out
cmp
cmpsb
and
jbe
xor
addl
in
mov
xchg
xor
lds
out
in
fs
fdivrs
add
loop,pn
std
incl
or
push
cmpsb
lcall
ror
cmc
mov
aas
loope
outsb
bound
push
dec
inc
leave
sar
push
icebp
xorl
mov
das
rcrb
inc
pop
int
jne
sub
pop
adcb
ljmp
in
push
movsb
lea
xorl
sar
jnp
lock
xlat
cmp
test
mov
push
and
add
les
rclb
in
xchg
jmp
orb
jmp
adc
jg
sbb
cmp
clc
pop
push
lahf
add
sbb
push
xchg
pop
sbb
out
xchg
roll
inc
jno
cmp
lcall
pop
add
push
jns
sub
sbb
std
decl
mov
and
cwtl
outsb
scas
mov
add
dec
bound
add
inc
pop
mov
cmp
pusha
add
in
mov
fstpl
or
push
pusha
sbbb
mov
inc
insl
sub
gs
stc
pop
or
mov
sub
xchg
fistpll
jg
fwait
and
fnstenv
or
aam
and
lds
add
add
mov
out
mov
pop
repz
nop
fdivs
lods
sub
inc
add
and
push
cld
jecxz
out
loop,pn
add
mov
aas
lods
push
mov
lods
push
cmp
cwtl
dec
ficompl
xchg
mov
dec
mov
pop
lods
add
outsb
add
mov
pop
inc
jmp
ret
das
inc
xor
sbb
xchg
sub
insb
cwtl
push
adc
lahf
stc
ja
repz
sub
mov
ss
bound
jbe
mov
jmp
sub
push
ret
and
xchg
roll
shlb
sbb
imul
sbb
mov
out
ficoml
pop
repz
inc
or
data16
daa
pop
xchg
mov
dec
popa
push
ds
ds
push
ljmp
popa
or
movsl
jnp
shlb
imul
in
das
ljmp
sahf
pushl
pop
idivl
and
add
mov
dec
inc
mov
add
mov
add
aam
cltd
pop
mov
dec
repnz
and
xor
mov
jg
sbb
pusha
add
and
arpl
insl
test
and
aas
shl
call
jmp
adc
jle
ljmp
stos
mov
cwtl
add
or
fdivl
add
sub
in
add
sbb
add
mov
mov
lods
loope
and
and
jl
shll
dec
jle
and
mov
arpl
pop
mov
inc
or
lock
or
fwait
sub
sbb
imul
add
lret
rolb
stc
mov
mov
or
or
and
sub
dec
mov
xchg
or
xor
sbb
movl
add
setb
jne
in
ja
fs
xor
inc
jecxz
cmpsb
out
inc
push
or
xor
flds
hlt
jg
sbb
pop
dec
push
shrl
test
lock
add
mov
or
lds
idiv
pop
aam
loop
rcr
jmp
jns
adc
stos
mov
pushl
pushf
ret
repz
test
add
sbb
mov
fs
jmp
test
xor
cmp
mov
outsl
fcomp
push
sub
ret
lret
sbb
loopne
pop
or
sbb
cmp
std
jb
popa
push
mov
es
sahf
xchg
cmc
push
call
test
xor
lods
ja
stos
out
adc
dec
mov
bound
mov
mov
scas
pop
push
hlt
lcall
test
adc
outsl
addb
and
enter
push
push
out
lock
clc
mov
xor
push
sub
xchg
je
lods
push
out
xchg
les
sub
push
mov
scas
mov
ret
lret
add
sub
push
loope
or
sub
cmp
inc
mov
leave
fdivrs
sub
xlat
xor
pop
add
data16
lock
pop
mov
cmp
dec
lds
sub
outsl
movsb
stos
mov
mov
push
mov
add
insb
insl
clc
mov
mull
pop
cmp
fcoml
into
in
sub
pushl
in
or
add
test
dec
dec
pop
call
nop
pop
into
add
in
cli
jmp
push
cwtl
xchg
clc
icebp
stc
lods
jmp
xchg
sub
aas
push
adc
cmp
push
mov
mov
ret
stc
jle
mov
aam
ds
and
cmc
rclb
sahf
cmpsl
lret
movsb
push
jle
fidivl
ret
lods
add
cld
xor
or
mov
add
in
cmpsl
fisttps
push
and
cmpsl
xchg
mov
mov
sbb
call
cmp
or
mov
cmc
mov
rcr
push
imul
xchg
pushf
sbb
or
pop
sar
mov
arpl
in
clc
jp
andb
sbb
add
or
sbb
jl
nop
mov
mov
call
ret
and
mov
sbb
sbb
pop
or
mov
cwtl
int3
mov
mov
outsl
ficoml
xor
sbb
cmp
and
scas
fwait
xchg
sahf
pop
pop
pop
inc
lock
push
sub
loopne
add
xchg
fsubrs
mov
inc
lods
adc
and
add
stos
call
and
rorl
test
jo
out
jne
jmp
test
dec
pusha
push
leave
xor
insb
je
mov
fwait
les
push
dec
aaa
stos
ljmp
repz
mov
inc
push
jg
cld
lods
mov
mov
xchg
inc
adc
mull
scas
adc
int3
clc
jbe
jge
test
push
incb
rep
pop
inc
int
ret
mov
lcall
lret
in
orb
stos
pop
add
ljmp
dec
iret
cmp
std
add
or
inc
hlt
xchg
aas
add
ljmp
mov
lahf
aam
inc
sti
mov
inc
jo
pop
and
filds
pop
mov
lds
in
repz
into
adc
pusha
ret
cmp
adc
adc
outsb
test
jg
pusha
jne
pop
pop
adc
call
test
mov
inc
call
cmp
mov
outsl
cli
pop
ss
or
rcrb
or
jmp
xchg
sub
aad
jo
cmp
aas
std
pop
js
jnp
call
aad
pop
xchg
xchg
cmc
stos
imul
pop
xor
xor
insb
std
or
rorb
pushf
adc
nop
roll
push
mov
adc
jg
leave
push
scas
stc
push
scas
mov
fcompl
jl
mov
dec
sub
sbb
xor
aam
add
xchg
stos
push
stos
jge
es
inc
cmpb
cmp
test
repnz
movsl
adcl
gs
xchg
or
cmpsb
adc
inc
jae
rcrb
adc
mov
lock
add
neg
jno
cmp
ljmp
xor
pop
jecxz
or
insb
lahf
add
gs
clc
pop
sarb
add
sbb
pop
mov
lret
rol
or
push
sbb
push
std
jmp
sub
mov
mov
and
mov
das
cmp
ljmp
xor
lock
jb
aad
ret
pushl
push
or
sbb
dec
push
loopne
xor
out
mov
rcrb
sbb
pop
cmc
ljmp
inc
mov
aad
rol
jg
and
test
jns
inc
adc
cmp
fists
push
subb
or
mov
fstpt
in
push
mov
je
iret
andb
adcb
adc
aad
sbb
hlt
lods
push
dec
adc
aad
pushl
arpl
adc
mov
ss
sub
add
icebp
das
xchg
test
fidivl
and
xchg
test
ss
jg
mov
add
data16
js
lret
in
adc
or
push
ds
popa
jg
lret
subb
sub
ljmp
clc
pop
call
and
push
lret
mov
inc
jmp
incl
data16
mov
cmp
scas
and
lret
mov
out
insl
std
add
push
adc
cs
stos
ret
adc
popf
lahf
pop
dec
fcompl
jle
movl
clc
inc
addl
test
and
sub
mov
pop
out
add
decl
push
mov
arpl
xchg
popa
incl
pusha
fsubrs
mov
aaa
inc
dec
adc
rolb
adc
mov
dec
and
xchg
mov
lods
pop
jp
inc
and
dec
push
xchg
push
dec
cmp
ret
add
das
cmpsb
sbb
bound
xor
sbb
dec
add
cmpb
xchg
push
stos
movsl
sub
rolb
mov
or
mov
dec
mov
add
add
repz
js
push
shrl
jp
push
or
in
adc
cld
decl
inc
xchg
xchg
scas
push
rcll
ret
jns
scas
add
stos
ljmp
subl
cs
sbb
mov
in
outsb
push
and
dec
aad
mov
xchg
ljmp
inc
clc
pop
xor
test
out
adc
ret
cmp
aam
sub
adc
inc
loope
ja
faddl
adc
adc
dec
add
inc
shrb
pusha
out
add
sbb
pop
sbb
lcall
adc
sarb
inc
cmp
out
jmp
add
mov
and
in
aad
and
or
jmp
mov
out
repnz
rolb
jp
mov
mov
mov
dec
pushl
xchg
dec
push
xchg
test
xor
sbb
outsl
pop
xchg
ljmp
mov
push
ja
das
loope
pusha
push
in
and
mov
pop
adc
or
xchg
pop
bound
test
push
jp
fisubl
dec
mov
mov
jg
xor
push
pop
ds
mov
or
mov
push
es
mov
dec
mov
incl
push
nop
mov
push
cmp
std
fistl
jp
inc
popf
push
push
out
sahf
cltd
or
je
add
adc
aaa
mov
fmuls
and
sbb
cmpl
enter
imul
xchg
push
jne
add
or
scas
loope
jb
das
sarb
mov
xor
xor
mov
xchg
insb
mov
xor
mov
push
or
sbb
jp
lock
jo
bound
jle
or
in
test
ljmp
call
fs
loope
sbbl
ffreep
enter
das
clc
push
std
loop
icebp
sbb
rcll
sub
pop
mov
adc
out
cmpb
lods
sbb
add
push
jbe
push
call
inc
imul
dec
xchg
icebp
jg
enter
lahf
lret
adc
jle
or
imul
outsl
pop
cs
add
test
mov
or
inc
ja
jg
pop
popf
sub
ss
test
and
orl
inc
inc
clc
popf
ja
inc
lock
call
stos
je
mov
pop
xchg
push
mov
ljmp
add
inc
fcomi
push
ret
das
loop
fcoms
push
sub
mov
inc
out
jnp
insl
sbb
cwtl
clc
cmpsl
jno
jmp
lock
sbb
pop
aam
je
mov
xchg
sahf
xor
xchg
jle
gs
bound
in
nop
add
push
add
add
cmp
inc
mov
icebp
xor
xchg
xor
aas
test
xor
pop
loopne
lods
inc
add
or
mov
mov
jge
jo
rclb
xlat
sub
ss
test
xchg
rclb
pop
jg
sbb
notl
ja
mov
xor
dec
xchg
mov
adc
movsb
addl
lock
fadds
xor
ds
or
dec
inc
cmpsl
rolb
sub
jle
pop
or
sar
pop
dec
xorb
mov
add
mov
or
mov
icebp
das
ds
rolb
and
cmp
dec
jl
stc
xor
clc
sbb
test
out
cli
mov
fildll
push
and
les
mov
outsb
mov
jle
push
mov
rolb
lret
popa
sbb
test
push
sub
push
ret
cli
sbb
out
pushf
dec
packsswb
cmp
mov
ljmp
push
jle
out
add
fucomp
cmpsb
mov
push
adc
cmp
bound
fnsave
int3
repz
fists
add
push
xchg
ds
add
cmpsb
aas
js
cmp
hlt
add
lcall
pop
popa
aad
jbe
shll
jo
lret
fsubrs
add
imul
insb
add
dec
adc
pop
movsb
jg
xor
and
pop
cmpsb
insb
add
ljmp
xchg
inc
adc
and
xchg
adc
and
xor
or
mov
nop
cwtl
ficompl
adc
int
pop
xchg
je
push
outsl
sbb
cmpb
xor
shlb
xor
repnz
shll
add
xchg
outsl
cmp
lods
push
loopne
xchg
je
stos
testb
jmp
aas
mov
jbe
std
push
push
sbb
out
outsl
dec
mov
pushf
push
lret
mov
pusha
in
andl
cmp
sub
add
or
xor
hlt
les
add
imul
decb
incl
adc
push
inc
dec
add
mov
clc
pop
dec
xor
adcl
cmp
pushf
pushl
mov
outsl
incl
imul
xor
mov
inc
mov
outsl
push
std
jp
or
inc
inc
popa
testb
repnz
jg
fs
dec
aas
jne
xchg
into
cwtl
shrl
inc
shr
cli
push
dec
mov
std
incl
push
push
and
jl
add
add
pop
cmc
and
sub
sbb
divl
add
mov
add
pop
pusha
xchg
cmc
ljmp
or
sub
inc
sub
repnz
lcall
jns
pushl
pop
ds
sti
adc
sahf
icebp
push
jns
inc
inc
in
cmp
fbstp
sub
in
ret
jle
cmpl
mov
subl
cmp
xor
mov
pop
mov
xchg
mov
xor
mov
jg
int3
xchg
loop
inc
in
movsb
mov
xlat
cwtl
movaps
add
and
dec
enter
cmp
cli
cmp
mov
cmp
pusha
out
sub
bound
std
lea
sbb
nop
push
add
or
outsb
add
jne
jl
nop
or
add
outsl
pop
cld
and
enter
jo
jae
add
cmpb
je
mov
rorl
loope
jnp
push
dec
insl
test
pop
stos
test
xchg
icebp
pop
lds
jns
mov
aaa
imul
test
ffreep
or
push
push
xchg
loopne
jbe
fdivrs
lret
dec
add
and
sbb
cmp
hlt
icebp
scas
cli
jmp
push
xor
mov
into
sub
pop
add
dec
lock
pushl
loopne
jp
cwtl
xchg
pushf
xchg
enter
sti
xor
sub
push
pop
jbe
mov
mov
or
adc
pushf
pop
dec
call
xchg
inc
fwait
and
pushf
jg
push
test
fidivl
add
cmp
enter
push
cmpsb
fisttpl
pop
out
mov
jg
mov
clc
pop
jbe
addr16
pushf
mov
sbb
xchg
lock
jbe
loope
mov
add
adc
jo
call
and
fwait
sub
xchg
shlb
loope
sub
xor
bound
loopne
pop
ss
mov
lcall
shll
scas
mov
fcmove
xor
sub
pop
inc
mov
jmp
clc
jbe
rorb
mov
pextrw
lock
scas
es
jo
xchg
pop
insb
in
imul
loope
cmp
aas
clc
incl
lods
fwait
movsl
mov
loopne
inc
mov
xchg
shrb
mov
pop
mov
mov
imull
clc
hlt
mov
inc
icebp
or
adc
call
mov
sub
shr
sub
xor
adc
xchg
mov
inc
and
sarb
push
shll
xor
pop
scas
add
cmp
xor
and
cmp
mov
lcall
clc
daa
shll
cmc
jo
ljmp
mov
test
lea
pusha
popa
push
xchg
js
lahf
pop
inc
sarl
subb
cli
js
fs
shl
push
sbbl
jp
mov
loopne
fisttpl
xor
fcmovnu
in
mov
jl
int3
inc
out
or
xchg
lods
xor
incl
sti
dec
inc
out
lret
fcmovnb
hlt
aad
loop
pop
testb
outsb
or
add
jmp
in
jmp
fists
push
out
jbe
je
cs
out
icebp
mov
add
lods
mov
cmpb
andl
sub
fsub
mov
icebp
popa
xchg
mov
orb
jo
mov
outsb
fcomip
jg
stos
clc
lods
push
pop
mov
f2xm1
mov
xor
loopne
mov
add
add
das
and
pop
sahf
ja
cmp
push
ds
jp
pushl
dec
add
movsl
mov
push
sbb
in
imul
std
lcall
jb
pop
rolb
adc
pop
adc
and
into
mov
inc
scas
and
cld
fwait
sbb
ds
xor
mov
nop
add
push
sbb
data16
jae
cli
and
adc
inc
clc
sub
jmp
mov
push
jne
fidivrs
add
add
mov
push
fsts
pop
lahf
dec
xchg
sbb
addr16
cmp
mov
mov
cmpsb
scas
xor
movsl
push
cmp
or
lods
mov
mov
dec
dec
sub
nop
dec
aam
jmp
dec
mov
mov
scas
xchg
add
mov
out
push
adc
and
call
sbbl
cltd
lcall
xor
call
inc
mov
pop
ljmp
pop
xor
add
mov
sub
test
jle
ss
das
pop
jno
scas
xchg
sarb
in
mov
or
cli
jmp
cmp
mov
xchg
movsb
es
xor
mov
jb
ss
mov
cli
sbb
jne
dec
and
mov
imul
inc
dec
subb
mov
loopne
cltd
mov
jno
cli
mov
inc
mov
inc
fucom
and
add
cmp
adc
rcrl
data16
mov
cmp
lock
icebp
adc
mov
rol
dec
test
or
cld
rcl
xor
cmp
nop
pop
pop
popf
xchg
gs
movsl
dec
sbb
or
pop
incl
push
pop
add
mov
and
xchg
push
loop
xlat
adc
mov
jmp
clc
addr16
addl
mov
or
lahf
cmp
inc
jb
xchg
cmp
fdivr
pop
dec
push
aam
xlat
ja
call
cld
mov
aad
dec
daa
inc
nop
pop
and
mov
cli
dec
sub
nop
or
jle
pop
mov
loopne
cmp
test
cld
mov
pop
and
outsl
pop
push
fnstcw
clc
enter
repz
mov
mov
pop
xchg
pop
mov
and
jg
jmp
fcmovb
xor
mov
add
mov
jge
cwtl
sub
mov
or
adc
sarb
xchg
mov
es
mov
xchg
shll
xchg
pushf
popa
push
add
push
add
sbb
cmp
loop
call
mov
dec
inc
mov
mov
pop
les
inc
fcomps
aam
scas
rcr
mov
pop
dec
ljmp
aad
fwait
sbb
cs
jbe
mov
not
lock
shl
mov
aaa
fidivrs
inc
mov
xlat
sbb
pusha
xor
sub
fildl
dec
lea
addr16
or
out
mov
into
add
mov
pop
xchg
push
sub
mov
push
dec
mov
cld
pop
push
loop
cmpsl
push
hlt
rolb
test
jnp
int
pop
xor
adc
outsb
cld
outsl
xor
adc
test
out
xchg
les
imul
rol
pop
mov
inc
mov
and
inc
mov
aaa
adc
push
adc
cmp
test
or
or
pop
inc
leave
mov
pushf
cmpb
xor
je
add
fnstenv
inc
sub
cmpl
xchg
lods
ficoms
mov
and
fldt
pop
jp
pusha
out
pop
dec
cli
cmp
and
xor
pop
dec
cs
std
mov
leave
lock
dec
out
push
jle
and
repnz
loop
inc
outsb
or
adc
mull
mov
xor
jae
fistl
mov
loope
rorb
or
in
push
jp
cmpsl
adc
lds
hlt
ja
imul
imul
add
jo
imul
mov
ljmp
inc
loopne
sahf
sbb
lret
dec
stos
fldt
enter
push
inc
jp
mov
cld
ds
fisubrs
lcall
insb
sbb
mov
out
outsl
push
inc
inc
test
mov
dec
enter
cmpsl
and
rolb
inc
cmp
add
lret
add
repnz
aaa
sahf
das
mov
add
subl
ss
scas
jp
scas
push
lahf
push
mov
pop
xorl
and
scas
in
ljmp
lock
jle
xor
sarl
or
pop
leave
fisttpll
lods
nop
stos
and
add
clc
pop
hlt
pop
imul
sbb
and
rcll
adc
xchg
push
clc
inc
daa
mov
es
lock
bound
push
orb
nop
mov
hlt
jne
fs
insl
or
mov
cmp
cmc
mov
rorb
int
cmpsb
inc
rcrb
pop
cld
mov
test
adc
and
adc
or
jl
mov
loopne
mov
xchg
sbb
insb
jmp
clc
filds
bound
test
lock
call
les
cmpl
push
add
icebp
mov
inc
or
mov
xor
lea
add
add
jp
fwait
lret
or
adc
lds
js
adc
push
mov
ret
inc
adc
adc
mov
xchg
insl
addl
test
dec
into
stos
inc
pop
lock
cwtl
mov
jbe
mov
ljmp
mov
adc
repnz
add
xor
ret
rcll
fmulp
stos
lds
jmp
daa
sahf
fs
enter
fstpt
pusha
sub
int
adc
cmp
mov
inc
mov
mov
ljmp
fistpll
ja
pusha
xchg
lcall
repnz
mov
pop
ret
decb
test
loope
adc
dec
std
and
cmc
lods
pop
scas
xor
fwait
mov
inc
or
jb
pop
jne
test
data16
fdivr
pop
mov
test
shr
int3
add
dec
or
stos
pop
test
mov
movsb
cmpl
je
push
mov
mov
lcall
xchg
jo
sub
xorb
into
push
lcall
sbb
std
lcall
repz
or
cmp
push
sub
pop
imul
xor
mov
les
fbstp
push
or
clc
scas
fstpt
data16
inc
inc
xchg
test
adc
mov
ja
shll
sub
lcall
out
lea
lahf
in
test
or
and
xor
cld
jg
add
jl
daa
jle
mov
xor
add
sbb
adc
dec
fnstcw
rorl
stos
or
pop
push
push
pop
mov
ljmp
lods
sbb
loop
pop
mov
icebp
dec
jns
add
shl
adc
and
stos
xor
xchg
or
in
lahf
arpl
mov
cmpsb
lcall
les
mov
mov
cli
cmp
test
andl
imull
ljmp
inc
jmp
mov
sti
jg
jge
jne
push
push
cmp
pop
fbld
cmc
inc
ret
add
cmp
xchg
xchg
add
sub
push
dec
loop
dec
dec
icebp
jno
shl
jp
ficoms
or
fistpll
bound
test
or
cmc
mov
mov
int
sarb
adc
int
loopne
mov
mov
mov
clc
mov
cs
sti
and
sbb
xchg
jmp
adc
dec
dec
mov
cmp
push
mov
nopl
les
test
loopne
xchg
or
scas
shrb
in
jg
xor
into
mov
sbb
cmc
aaa
add
push
in
out
xchg
pushf
lcall
insb
xor
push
repz
daa
pushl
mov
pop
push
push
mov
mov
decl
shlb
loope
mov
lds
inc
mov
leave
or
mov
fwait
xor
out
adc
push
sar
inc
and
lods
clc
daa
or
negb
push
pop
js
and
push
mov
clc
or
mov
sub
rcll
jg
xor
pop
dec
sub
popa
mov
into
xor
mov
pushl
prefetcht2
jg
popa
or
push
jbe
mov
xor
xchg
inc
aad
or
mov
dec
mov
adc
mov
cld
push
loope
aaa
cmpl
pusha
mov
loope
sbb
and
mov
rolb
and
add
mov
inc
cld
ljmp
sbb
adc
ss
fstpl
aad
andb
les
mov
push
sbb
iret
out
xorb
fcoml
in
mov
out
jp
xchg
cmpb
inc
mov
scas
pusha
fcompl
pop
es
ljmp
push
fldenv
out
pushf
sub
je
mov
fmuls
outsb
je
js
mov
cli
fwait
outsb
rolb
adc
mov
inc
cld
lcall
push
ror
push
movsb
lcall
ss
sub
mov
mov
ret
mov
adc
push
lcall
cmc
fs
daa
icebp
fistpll
pop
mov
mov
inc
out
and
sahf
and
into
or
rolb
or
push
out
shrb
leave
andl
popa
add
jl
pop
fisttps
fists
inc
inc
cmpb
push
add
pop
cltd
cs
sbb
mov
js
ljmp
or
pop
jno
jecxz
inc
scas
cmc
mov
xor
cmpsb
push
pushl
sub
inc
ljmp
jl
testb
add
jg
cmp
stos
fstps
insl
sbb
mov
mov
and
ss
adc
cli
clc
loope
idivb
push
loope
rcl
add
rcr
shll
mov
lcall
in
adc
jmp
xor
fxch
adc
jae
mov
push
sahf
fidivl
pop
cmp
xchg
and
or
inc
mov
dec
fisubrl
pop
add
push
dec
pop
test
loopne
xchg
into
mov
mov
stc
adc
mov
fsubrp
mov
popa
stc
cwtl
and
sbb
cmp
stos
ja
jno
loop
xchg
sub
dec
sarb
cld
fwait
sub
test
mov
aaa
push
bound
bound
jg
pop
clc
jg
fwait
dec
sbb
fs
or
call
mov
lods
fs
xor
std
inc
mov
sbb
outsb
sbb
jno
mov
or
ja
dec
pop
sarl
daa
cld
pop
xchg
incl
or
lock
stos
inc
mov
cmp
movsb
lock
test
sbb
xchg
lock
jno
int
cli
adc
fwait
lcall
add
cmp
xchg
cmpsl
add
or
dec
and
add
int
xchg
paddusb
scas
les
cltd
cmp
or
push
roll
xlat
call
add
add
out
sub
mov
jmp
repnz
cmp
repnz
enter
xor
ljmp
mov
push
xlat
rsm
lea
or
loopne
xchg
es
xchg
mov
das
xor
mov
imul
imul
ret
cmpb
pusha
call
cmpsl
mov
xchg
push
fdiv
inc
je
bswap
aam
xlat
movsl
test
call
mov
ret
add
popf
popf
mov
or
lds
xor
jl
in
push
jbe
inc
push
lods
adc
test
test
push
jle
std
push
sbb
je
xchg
add
push
xor
insb
fildll
or
inc
adc
mov
adc
xchg
popa
out
jb
rol
jmp
add
and
jnp
fidivs
jo,pt
fcos
mov
pop
sbb
jb
cmp
inc
mov
xlat
sbb
repnz
in
cmpsb
fadds
ljmp
into
add
shll
pop
lret
fildl
jg
xor
sbb
fdivrs
jns
jge
dec
mov
xor
inc
push
dec
imul
mov
test
xor
push
repz
insl
xchg
shlb
mov
fwait
and
aaa
or
adc
ds
sub
in
dec
rcl
cmp
cld
add
cmpl
and
jge
mov
sbb
add
sub
pushl
push
call
jp
adc
inc
mov
test
decl
shr
jl
ljmp
or
pop
dec
lods
mov
ds
mov
sub
incl
push
inc
adc
enter
inc
sti
inc
cli
mov
mov
in
push
lcall
scas
mov
and
sub
sub
nop
pop
aad
or
jmp
jb
imul
sub
cmp
lds
stc
pop
lret
pusha
ljmp
xor
lods
rclb
ret
mov
call
into
mov
test
out
push
subb
lods
cmp
add
add
movsb
incl
add
push
mov
ret
cmp
push
jle
ds
or
xlat
fstps
loop
clc
fwait
pushf
pop
mov
mov
xchg
jg
in
cmp
mulb
sahf
push
cltd
xchg
loopne
cmp
add
call
jo
xchg
scas
call
out
sbb
jmp
idivb
mov
mov
or
pop
outsb
mov
aam
incl
sub
mov
inc
call
movsl
mov
iret
mov
sbb
add
neg
pusha
add
pop
addb
cmp
outsb
sbb
idiv
or
test
out
pop
testb
pop
enter
out
sbb
into
mov
ret
inc
mov
testb
xor
pusha
out
or
or
sub
in
lds
mov
lahf
addr16
loop
fcomip
mov
mov
xor
das
add
fldl
push
adc
es
les
ret
rcrl
rcrb
add
cmpl
negl
pop
sarl
hlt
stos
dec
mov
jnp
ret
push
xchg
int
push
mull
loop
fmull
shll
dec
xchg
cmp
jg
in
test
adc
call
push
icebp
aas
jp
iret
add
and
sar
mov
jo
cmp
int3
call
xchg
orb
xor
dec
test
or
add
mov
push
push
out
aam
aas
xchg
and
or
inc
lods
mov
imul
inc
repnz
fsubl
add
movb
push
sbb
idivb
xchg
and
push
xchg
pop
adc
hlt
sar
sub
xlat
lret
adc
fisubl
add
dec
xor
xor
addl
and
add
or
rcr
aaa
jge
lock
test
pop
in
push
inc
adc
sti
or
cld
pop
enter
add
xor
and
roll
popa
lds
insl
int3
test
or
jmp
sub
add
pop
dec
out
push
xchg
pop
lods
and
filds
sbb
push
pop
ss
cmp
or
dec
jno
cld
pop
pushf
lret
cli
lds
aam
and
jle
stos
add
mov
cwtl
mov
sub
pusha
push
pop
jmp
sbb
cli
cs
sbb
inc
pop
or
cld
jmp
adc
mov
jae
inc
inc
dec
fwait
es
jmp
pop
push
inc
sti
decl
push
mov
cmp
adc
jge
dec
sbb
dec
pop
andl
mov
loop
loope
pop
cltd
das
test
fistl
daa
push
outsb
cwtl
movsb
adc
mov
ja
push
loop
lds
popf
repnz
and
pop
add
jbe
jb
out
cmpsl
clc
add
jmp
cmp
jbe
sub
es
pop
adc
or
mov
jo
inc
mov
das
outsb
bound
dec
inc
lock
lock
sub
fsubl
sub
mov
mov
std
stos
add
inc
pop
adcl
pop
bound
cmpsb
sub
sub
sub
mov
dec
pusha
mov
rcrb
shl
mov
adcb
add
jmp
and
sbb
adc
aad
jmp
and
incl
inc
loopne
orb
add
fimull
lcall
pop
idivb
inc
stc
in
pop
mov
mov
xor
in
mov
pop
jg
pushw
and
clc
aaa
mov
adc
loope
loop
and
adc
jbe
mov
xor
ss
mov
push
int3
xor
inc
pusha
imul
scas
aad
dec
mov
or
xor
stos
cmpsb
cmp
roll
pusha
pop
jl
inc
adc
cmc
das
mov
imul
mov
dec
push
test
sbb
adcl
into
xchg
lea
ret
test
insb
sar
outsb
mov
fdivrs
xchg
xor
subb
mov
pop
in
loop
aaa
clc
cs
add
dec
pushf
mov
mov
rcl
test
push
pushf
test
out
inc
mov
aaa
pusha
or
or
and
ljmp
cmpsl
cli
stc
mov
and
les
dec
decl
stos
inc
mov
ret
jecxz
pop
int3
jo
roll
test
cld
cs
jb
out
inc
mov
jmp
leave
sbb
out
adc
jp
out
pusha
mov
loop
adc
jo
hlt
cmc
decl
pusha
push
sar
jo
lock
shrl
jp
lods
stos
pop
call
jmp
dec
mov
in
mov
shlb
out
and
mov
js
dec
das
loopne
or
mov
xor
xor
addl
xchg
push
ret
dec
leave
fbstp
lock
scas
pop
sarb
aas
adc
loope
daa
xor
mov
ds
lea
pop
ficompl
xchg
push
fwait
push
call
neg
add
dec
jle
adc
test
fstpt
sbb
pop
lea
js
sub
std
in
jg
dec
repz
xor
xor
xchg
test
jg
shrb
jg
lret
mov
je
xchg
fidivrs
or
loopne
cmp
incb
sahf
in
jo
cmp
nop
pushl
push
sahf
cltd
mov
std
cld
add
ds
fldenv
icebp
fwait
or
fildll
add
clc
fbstp
out
aaa
adc
testb
push
dec
push
xor
clc
push
push
cmp
mov
adc
and
push
jle
into
insb
and
comiss
jne
push
push
cmp
dec
xchg
sbb
adc
lcall
pop
mov
lods
movsl
jge
push
inc
daa
push
or
push
mov
cmp
sub
imul
out
cmp
xor
std
add
mov
out
add
jo
pusha
jne
data16
stos
js
inc
inc
in
shll
sub
sub
push
push
ljmp
xor
rcl
nop
add
pop
add
mov
stos
add
cli
shl
ljmp
xchg
pop
call
lods
aaa
push
xchg
ret
les
pop
mov
fsubl
xorl
ljmp
dec
into
or
cwtl
in
fs
ret
mov
push
xor
inc
fcompl
xor
scas
pusha
setae
loop
std
xchg
imull
pop
xchg
stc
dec
or
dec
test
adc
jbe
je
fwait
in
lahf
dec
jl
push
stc
pop
xor
rcll
jl
push
iret
dec
rcrl
push
test
or
cmc
or
fisubl
cmp
testl
cmpsb
out
shrb
mov
add
in
cltd
ror
mov
out
sbb
jne
notb
jg
jmp
mov
pusha
jg
out
cwtl
aaa
fdiv
adc
lcall
iret
add
ja
test
push
cmp
mov
jne
adc
add
dec
enter
adc
mov
add
stos
mov
in
sub
mov
jmp
pop
out
addr16
fidivrs
ss
push
mov
push
sbb
pop
das
es
or
fs
out
ljmp
cmp
cltd
mov
test
jmp
jge
jnp
push
cld
mov
add
imul
mov
pop
stos
push
add
inc
mov
iret
mov
dec
sahf
mov
ljmp
jne
sbb
mov
or
dec
push
xor
xchg
daa
sub
test
loope
dec
inc
into
into
jo
push
fldl
jmp
sub
or
mov
jl
add
add
mov
xchg
mov
dec
add
add
inc
mov
add
mov
add
mov
mov
outsl
jp
adc
or
test
jb
pop
lock
jecxz
jle
push
adc
push
lock
jmp
adc
adc
adc
mov
sub
mov
jno
jecxz
inc
xchg
lods
addl
mov
push
xchg
or
test
aaa
das
sti
das
clc
decl
mov
xchg
xchg
frstor
add
push
repz
xor
mov
je
jl
pop
ljmp
jo
adc
dec
cmp
dec
lock
jg
mov
adc
push
les
add
xchg
lea
stos
scas
ss
in
mov
imul
inc
adc
lret
add
adc
mov
test
add
xor
or
sbb
icebp
sub
out
movsl
stos
lock
in
inc
nop
subb
xor
pop
xchg
jbe
les
ljmp
aad
stos
cmpl
shll
cmpsb
jle
sbb
out
in
test
outsb
ret
jg
add
sbb
or
loop
adc
sbb
icebp
xor
jo
xorb
adc
dec
cwtl
jo
aam
add
call
or
xor
js
addl
jge
sbb
mov
decb
test
repz
lret
insb
hlt
addb
insl
adc
loopne
cwtl
leave
push
mov
stc
hlt
call
cmpsb
test
or
push
mov
loop
rolb
stos
popa
cwtl
or
push
push
fwait
pop
jbe
rcll
mov
and
lcall
movsb
sub
in
je
add
push
faddl
test
fs
inc
jno
stos
pushl
popa
inc
pop
int
inc
ss
or
imul
arpl
les
cmpsl
xorl
and
adc
or
sub
jo
cld
mov
adc
fwait
lock
ret
daa
push
mov
and
test
dec
or
je
and
mov
mov
add
and
mov
pop
pop
add
and
jg
add
mov
pusha
sbbb
sub
out
mov
pusha
jno
xlat
dec
inc
enter
add
add
jecxz
movsb
ja
call
insb
ja
fistps
clc
adc
test
jg
mov
sbb
add
stos
in
fs
mov
inc
add
data16
mov
and
mov
dec
cmp
call
cmp
test
add
push
andb
pushf
inc
inc
test
mov
lcall
negb
pop
cld
add
and
add
or
ja
xor
ljmp
adc
jp
std
jle
xchg
sqrtps
imul
xchg
jl
std
out
xor
dec
cmpsb
push
push
or
fcomi
cmp
icebp
js
cmp
fistpl
rorb
sub
mov
add
fdivrs
or
ss
mov
add
mov
add
sub
loopne
mov
ljmp
push
stos
push
inc
xor
xchg
jmp
das
clc
push
ret
mov
aam
test
lock
mov
clc
call
push
adc
sub
testb
push
inc
pop
jmp
call
xchg
out
mov
aas
sarb
mov
adc
pop
fstcw
ret
bound
aam
cmp
in
mov
mov
loop
test
xchg
xor
cli
insl
jp
inc
jns
jle
dec
inc
sarl
cmpb
cmp
subl
adcb
cmp
xchg
jb
or
lea
pop
in
and
movsb
mov
fbld
jp
pop
shrb
es
cli
inc
repnz
mov
add
fstps
ret
pop
rol
popa
push
test
and
adc
add
or
pusha
out
call
push
hlt
jl
mov
dec
pop
cmp
add
lcall
fisubs
xchg
jbe
mov
int3
stos
cmp
xor
mov
push
or
sub
scas
mov
mov
jecxz
fs
hlt
inc
ja
int
in
and
mov
fdivrs
movsb
lcall
inc
and
js
enter
or
mov
xlat
xor
sub
xor
ja
sub
mov
sti
mov
jmp
xchg
nop
inc
iret
out
adc
stos
or
mov
jmp
xchg
sbb
int
inc
out
js
add
inc
testl
mov
mov
ljmp
ret
add
sbb
mov
movsb
ds
stos
add
lock
mov
out
es
dec
inc
xorl
pop
push
aaa
test
mov
jmp
loopne
sub
mov
mov
lcall
test
xchg
fs
mov
sbb
je
or
incl
ret
orl
add
vcvtps2pd
mov
hlt
push
fs
or
mov
scas
push
out
fbstp
or
jmp
jo
das
dec
sbb
cmp
xor
xorb
add
jne
pop
sbb
mov
cmp
inc
mov
clc
or
data16
dec
mov
xchg
fiaddl
push
adc
or
cmp
mov
les
test
es
push
cwtl
add
push
lcall
mov
call
and
or
xlat
stc
push
xchg
jnp
mov
mov
inc
and
push
sti
xor
adc
or
bound
add
popa
add
add
xor
subl
push
jle
add
scas
incl
pop
rclb
clc
or
fwait
xchg
xchg
icebp
pop
mov
xchg
inc
xor
xchg
sbb
imul
ljmp
insb
int
or
pop
lock
add
fldl2e
xor
imul
fwait
push
push
outsl
out
insb
out
and
int
mov
push
in
inc
ja
pop
push
and
mov
sarb
adc
into
mov
lahf
pop
js
add
xlat
cmp
rcll
jl
adc
mov
adc
sbb
mov
xlat
das
mov
push
cltd
jle
lods
aaa
rcrl
jne
or
icebp
jg
push
sub
and
mov
imul
ljmp
mov
stos
inc
xchg
shll
add
jb
adcb
and
inc
ss
aas
sarb
aaa
movl
jle
mov
pop
xchg
pop
sar
ja
add
dec
adc
and
loop
cs
or
dec
call
xor
addb
rcll
mov
out
and
incl
mov
push
addr16
mov
enter
sub
int3
es
jnp
fisubrl
add
and
hlt
pop
ficoms
sub
rcl
push
nop
lahf
push
jbe
dec
add
hlt
in
and
test
adc
rolb
mov
loopne
ret
dec
nop
sub
ja
xchg
push
lcall
push
clc
out
pop
pop
hlt
sub
and
adc
cld
out
fmull
xlat
pop
inc
xchg
jo
sahf
xchg
es
xchg
and
repz
repnz
cld
add
lcall
int3
dec
cmpsl
push
nop
cmp
sti
cld
incl
and
insb
add
out
movsb
ret
xor
mov
lret
push
sahf
jno
sub
cmc
lods
push
ret
icebp
adc
mov
aas
jns
jae
fnstsw
aam
and
and
sarb
xchg
mov
cmpb
sub
aas
or
lods
mov
lods
inc
add
clc
add
jg
mov
mov
pop
std
out
jbe
mov
or
push
out
ljmp
push
je
sbb
mov
subb
or
lods
out
jmp
mov
adc
xor
lods
cld
stos
or
sbb
fildl
mov
aaa
or
mov
cmp
inc
in
push
mov
pop
push
push
jo
popa
push
ja
inc
xor
addr16
les
mov
mov
mov
mov
add
adc
mov
movsl
das
mull
ljmp
dec
sbb
mov
es
loope
loope
inc
jno
adc
sti
add
mov
jp
popa
bound
jb
dec
lea
add
inc
enter
fcoms
repnz
bound
pop
cltd
js
out
jb
sarl
mov
ret
clc
sarb
push
push
jmp
inc
mov
jg
mov
adc
cmc
pop
sbb
add
ret
clc
mov
add
aad
jb
into
xchg
cmpl
add
test
lods
add
lret
ja
add
adc
ljmp
clc
daa
or
mov
loop
iret
stos
rcrb
test
adc
dec
xor
lds
loopne
rolb
ds
cmp
sbbl
jno
lahf
cmp
dec
negl
cwtl
inc
xor
les
push
lds
scas
sub
daa
call
outsb
jg
and
jmp
and
decl
jb
cwtl
xlat
lods
stos
neg
sub
cmpsl
cmpsb
enter
add
mov
cwtl
xor
loopne
mov
jnp
dec
xchg
dec
mov
fcmovb
pop
fdivr
sub
cmp
in
pop
jg
jg
scas
and
mov
push
push
out
mov
stc
icebp
or
aas
or
icebp
add
xor
dec
lcall
in
xchg
xchg
cmp
xor
adc
pop
or
add
out
test
push
test
lret
xor
movsb
sbb
or
pusha
icebp
stos
imul
inc
mov
subl
mov
mov
dec
or
mov
xchg
dec
dec
fwait
in
inc
sub
ljmp
stos
nop
dec
cmp
pop
push
or
push
jnp
idiv
cwtl
loop
mov
dec
icebp
out
push
push
sbb
or
cmpsb
outsl
lock
sub
push
bnd
pop
push
cmc
pop
pop
rolb
frstor
xor
mov
sahf
fcmovb
in
mov
push
jb
lods
jo
cld
jle
add
imull
data16
sar
mov
sub
out
outsl
pusha
mov
or
mov
pop
dec
bnd
mov
rcrb
stos
into
sbbl
fistl
lret
or
mulb
jge
mov
push
xchg
push
nop
mov
in
repnz
scas
push
decb
mov
push
xor
pop
es
push
lret
movsl
scas
cli
cmpsb
push
pop
and
cli
and
out
dec
notrack
jno
in
imul
pop
scas
sbb
lods
rorb
mov
push
dec
idiv
outsl
mov
mov
ss
dec
mov
test
push
cmpsl
into
jmp
in
lods
addps
jmp
test
mov
inc
push
xchg
mov
jbe
sbb
and
adc
ljmp
nop
push
rcl
push
mov
sahf
lcall
mov
mov
mov
dec
xchg
xchg
lcall
cmp
call
rorl
push
jge
sti
pop
add
add
xchg
in
sbb
push
aam
popf
je
fidivrs
sbb
add
dec
mov
sti
call
jmp
inc
test
jmp
repnz
ljmp
mov
dec
ret
jg
pop
in
aas
jl
jle
inc
lock
add
mov
js
mov
cmp
loope
lcall
mov
sub
push
push
jmp
int3
mov
fs
lock
add
pushf
rol
and
dec
fcomip
pushf
loopne
test
adc
lcall
jp
ficoml
sbb
push
das
sub
cs
icebp
rorb
or
fxtract
pop
fucompp
cli
jmp
push
add
mov
es
in
and
mov
sub
pop
xchg
adc
inc
fildl
sub
sub
fisttpl
roll
sbbl
icebp
mov
and
sub
sbb
mov
sbb
loopne
clc
lcall
shll
or
mov
pop
es
sbb
lahf
nop
and
or
fidivrl
jp
lret
jmp
add
incl
or
mov
jae
lock
cmp
xor
lcall
aaa
subl
inc
movsb
rcll
and
rorl
jb
pop
aas
sub
shl
jno
cmp
jg
push
mov
out
cmp
cld
pop
hlt
push
pop
andb
test
imul
int
add
xchg
test
ret
jns
jns
pop
adc
mov
icebp
inc
ret
clc
or
sub
mov
punpckhdq
hlt
pop
out
adc
cld
cli
bound
mov
cmp
fimuls
add
push
repnz
mov
inc
mov
adc
push
inc
jb
es
mov
and
jns
xor
fisubrl
inc
add
or
push
shr
lock
lcall
sub
pop
int
nop
dec
mov
mov
les
fidivrs
shrb
or
clc
pop
loopne
xor
xor
fsubr
es
popf
shlb
add
adc
idiv
ljmp
ss
subl
xor
test
ret
push
fs
lret
loop
js
cmpsl
and
addps
ret
cmpsb
les
hlt
jg
int
daa
shll
ljmp
movsb
jbe
cmp
out
fildl
hlt
test
add
adc
xorb
adc
or
sbb
sub
mov
mov
inc
shrl
roll
out
mov
jns
movsb
sub
fcomip
sarl
mov
cmovne
or
rclb
call
call
subb
icebp
push
mov
sbb
sbb
pop
mov
or
or
adc
into
sub
push
xor
mov
mov
mov
in
add
push
cld
int
addr16
jmp
adc
jno
int3
stos
mov
jge
out
call
jp
xor
xor
mov
mov
scas
call
jne
jl
mov
mov
sbb
xchg
jp
add
push
jnp
mov
add
bound
cmpsb
icebp
jg
mov
xor
and
sub
das
movsb
icebp
cmpsb
dec
inc
stos
sahf
adc
ljmp
lock
or
notl
push
mov
add
iret
adc
pop
xlat
ss
js
or
lock
xor
loopne
out
push
adc
pop
push
sub
sarb
ss
inc
dec
push
scas
add
sbb
dec
fcmove
bound
push
lds
je
cmp
insl
cmp
xor
add
test
idiv
sub
xchg
add
and
sbb
test
sbb
add
add
lahf
xor
dec
mov
add
xchg
dec
pop
xor
imul
mov
add
imul
push
outsl
clc
dec
les
pusha
in
jbe
adc
in
fs
sahf
adc
sbb
or
mov
inc
jecxz
stc
ss
mov
lods
xor
push
rclb
xchg
inc
xchg
or
jae
out
mov
scas
cli
hlt
cmp
adc
ljmp
popf
movswl
gs
mov
and
and
int
jmp
in
adc
sbb
idiv
xor
add
mov
mov
stc
push
sub
mov
xor
lock
movsb
cli
aam
into
jbe
add
mov
call
scas
int3
and
leave
sti
cmp
out
and
jo
adc
or
mov
add
dec
cmc
push
pop
mov
jl
mov
cld
adc
inc
pop
mov
cmp
std
push
push
enter
jo
and
int
cltd
jle
mov
clc
lods
call
inc
mov
bound
aam
filds
sub
sub
loopne
sar
pop
orb
xor
push
xchg
inc
inc
mov
mov
fwait
inc
inc
mov
fdivs
ret
xor
dec
and
rcl
xorb
bound
mov
adc
aas
mov
sub
out
mov
movsl
add
adc
push
imul
fldenv
dec
ja
xlat
mov
cwtl
outsb
dec
hlt
sbb
mov
push
incl
ss
clc
bound
fwait
push
lret
out
adc
mov
in
jp
mov
fldcw
lock
pop
inc
aaa
mulb
loop
and
je
fs
pop
js
add
and
fdivs
lock
and
jp
jmp
push
aam
dec
push
and
adc
push
loopne
jno
mov
mov
or
or
jle
aad
sbb
dec
test
inc
jg
icebp
push
xchg
add
mov
dec
sub
shr
jmp
inc
jge
rol
ds
mov
cld
jl
loope
add
nop
andb
lds
sub
mov
jg
and
lcall
xchg
lret
adc
or
mov
repnz
in
mov
imul
mov
xor
cmp
sbb
cmpsl
test
xchg
mov
sub
or
lret
nop
inc
mov
dec
inc
mov
incl
mov
dec
push
orb
loopne
shr
repz
jmp
les
decl
inc
sub
daa
or
cli
ss
add
mov
stos
scas
dec
ret
pop
test
call
outsb
pop
add
notl
jp
and
jno
cli
call
pusha
faddl
mov
mov
adc
xor
aaa
mov
imul
pop
dec
mov
and
pop
movsl
outsl
das
cmpsb
int
cmpsb
or
mov
mov
cli
push
xchg
add
adc
cli
incl
inc
insl
int3
pop
cmpsl
cs
pop
arpl
or
and
sbb
jbe
mov
stos
lods
mov
push
stos
inc
push
jg
xor
jo
cmp
mov
sbb
pop
std
jg
push
mov
cs
fmull
aam
stos
iret
sbb
or
loopne
xchg
add
enter
push
and
popa
cwtl
and
cmc
scas
and
in
fcmove
pop
mov
adc
pop
push
popa
mov
out
in
loope
icebp
lcall
ret
adc
fdivp
sbb
lcall
inc
mov
jg
or
inc
lret
push
jge
paddq
hlt
outsl
push
mov
xchg
dec
or
cltd
dec
mov
mov
mov
cmpl
pushf
or
scas
cli
jg
xchg
lgs
adc
test
scas
and
jp
test
addr16
inc
mov
xchg
jo
or
adc
les
or
sub
adcl
rolb
mov
fbld
fildl
xor
adc
clc
fisttps
pop
stos
loopne
and
adc
in
mov
mov
lods
sbb
rcll
xor
ds
jg
push
pop
icebp
sti
jl
cmpsl
jg
cwtl
mov
xor
lret
xchg
aad
std
aaa
test
mov
lds
aam
loopne
shlb
xchg
adc
ss
movsl
mov
mov
ds
lock
fldcw
das
incl
mov
jecxz
cmpb
sti
mov
sbb
in
dec
xor
rol
inc
call
jnp
in
fs
outsl
das
jmp
mov
mov
mov
mov
cmpsb
add
jno
stc
jmp
xlat
mov
mov
push
in
cmp
xor
mov
push
lcall
add
leave
je
pop
je
mov
jns
adc
call
leave
sub
call
lcall
mov
and
flds
xchg
or
xchg
scas
data16
jb
adcb
dec
xor
sbb
add
stos
pop
hlt
ljmp
repz
out
jo
sub
les
cmc
mov
std
incl
jle
rclb
dec
repz
cmpsb
inc
lcall
xor
fst
fs
jne
xor
adcl
adc
inc
test
push
dec
xor
cmp
out
cs
stc
pushf
imul
mov
ljmp
push
jmp
pop
jae
jb
sarl
fldl
hlt
rcl
pop
or
subb
test
push
sub
cmp
mov
jl
out
xchg
mov
mov
and
and
lcall
add
loopne
jae
cmpsl
fisubl
xor
scas
cli
push
xchg
xorl
enter
fs
and
adc
inc
push
jecxz
test
or
mov
pop
jecxz
test
and
pop
cwtl
mov
sub
jne
incl
out
xchg
lret
leave
lock
sub
xchg
mov
mov
or
sbb
or
cmc
test
mov
mov
pop
movsb
test
mov
inc
jg
mov
jb
cwtl
xchg
rclb
xchg
stos
rorb
sub
push
sbb
les
adc
pop
test
stos
shrl
push
aaa
push
and
adc
push
push
stos
cld
push
push
pop
sbb
push
sub
jle
sbb
sub
mov
mov
jbe
sub
jbe
cmp
sub
int3
adc
test
daa
or
jecxz
and
xchg
std
xchg
mov
ljmp
addr16
aas
mov
daa
or
xor
decl
enter
test
xor
int3
mov
fwait
rcrb
dec
push
pop
aaa
arpl
push
xlat
push
sbb
pop
mov
cli
xlat
jg
sbb
inc
xor
test
xor
pop
jne
add
pop
in
stc
gs
nop
loopne
sbb
aaa
std
dec
or
mov
and
or
sahf
add
fistpll
mov
mov
pop
cs
dec
sbb
test
sub
xchg
gs
sbb
data16
faddl
and
jg
dec
sbb
loopne
scas
sub
loop
add
dec
movsb
xchg
and
add
ljmp
sbb
arpl
addl
lds
inc
cwtl
sbb
xor
xchg
adcl
enter
ljmp
sbb
mov
mov
rclb
jge
inc
and
xchg
xchg
xor
xchg
cmpsl
call
cli
sbb
lahf
repz
out
xor
shr
in
adc
xchg
or
add
inc
notl
jecxz
pop
cmp
pushf
xchg
cmp
lcall
incl
sub
sbb
sub
push
push
lahf
adc
jbe
fcmove
mov
inc
sub
mov
inc
jo
adc
sbb
stos
sub
movsb
jnp
dec
push
cmp
inc
mov
mov
daa
add
loope
mov
sbb
rcrl
incl
jb
aad
and
cwtl
mov
in
cld
mov
cld
mov
add
daa
xor
rolb
call
xchg
loop
ret
lcall
sub
dec
pop
cli
pop
stos
cmpl
cmp
and
call
sub
cmp
push
das
sub
aaa
cld
outsl
ret
ja
dec
ret
adc
pop
inc
inc
pop
mov
fists
ds
ficomps
frstor
cmp
js
and
mov
sbb
lahf
jns
adc
add
lock
adc
adc
mov
mov
push
subb
xchg
jo
pusha
out
ret
hlt
out
pop
push
push
icebp
enter
mov
push
fucomi
shl
dec
ja
shlb
push
je
sbb
sub
or
inc
and
sahf
mov
ret
clc
fstpt
jl
loope
push
jae
and
xchg
add
mov
loopne
jbe
ja
adc
sbb
mov
js
sbb
pusha
push
xchg
xor
arpl
jnp
sahf
adc
call
pop
cmp
xchg
jo
push
cli
xor
sbb
repnz
sbb
inc
roll
adc
sahf
pusha
pop
mov
cltd
addr16
out
xchg
addb
mov
jg
add
sub
jno
sahf
xor
movsl
out
push
sub
loop
das
xchg
sub
inc
shrb
inc
push
movsb
xchg
loope
inc
push
xor
rcrb
or
aaa
lea
add
arpl
jns
xchg
push
mov
or
movsb
orl
adc
add
and
loopne
or
rcrl
fcmovbe
in
movsl
mov
inc
clc
fildll
lds
sahf
iret
jl
movsl
jb
push
mov
adc
sar
adc
ds
push
dec
arpl
pop
in
cmpsl
push
mov
cmc
clc
pop
pop
mov
inc
fldcw
lcall
dec
and
cmp
test
fs
fucom
mov
cmp
clc
add
inc
out
mov
mov
cmp
jle
aas
push
fsubs
lods
ljmp
loope
arpl
ret
pop
cld
xchg
std
shr
test
add
js
add
xchg
lock
lret
jecxz
in
imul
sub
dec
loope
jg
jmp
cmp
sti
mov
sub
push
mov
call
sbb
xor
add
imul
fs
sub
rorl
jmp
pop
ds
push
loopne
xchg
pop
add
aaa
std
aaa
sbb
popa
cmp
and
xchg
xchg
shll
xchg
mov
or
cmpsb
mov
mov
dec
incl
lcall
das
xchg
lcall
adc
push
outsb
iret
adc
pop
pop
icebp
outsl
xor
pop
xor
int
jl
into
testb
mov
enter
push
sbb
dec
mov
test
mov
mov
stc
cli
movsl
xor
sbb
mov
ja
fsubs
mov
ja
pop
lret
loope
mov
aaa
add
jg
test
ret
mov
or
xor
outsb
sbb
call
inc
aaa
sbbl
jb
scas
inc
xchg
xlat
and
out
lock
jge
and
push
dec
lds
jmp
js
sub
mov
stos
in
jb
nop
sti
sbb
fs
push
xor
das
mov
in
out
lcall
call
aam
ljmp
add
sbb
fmull
scas
lods
sarl
mov
scas
test
ret
loope
push
mov
repnz
sub
and
cs
and
lcall
xchg
sbb
add
lahf
insb
mov
inc
es
in
clc
sub
pop
mov
fiaddl
ja
jp
mov
hlt
pop
lahf
cmpsb
sar
jmp
add
add
cmp
inc
dec
or
test
jg
inc
jo
add
scas
ljmp
jo
push
repnz
add
and
inc
stos
pop
gs
popf
dec
pop
pop
stos
movsl
pop
mov
add
push
inc
iret
add
shlb
pop
hlt
cmp
call
orl
fsubl
out
clc
pushl
jle
addr16
push
sti
sbb
dec
and
dec
and
andl
mov
push
pop
fsubrs
stos
dec
sub
or
mov
enter
push
ss
xchg
pop
sbb
out
mov
arpl
pop
test
adc
fwait
cmp
cmpb
call
outsl
mov
pop
insb
push
sahf
mov
mov
mov
cli
or
push
jge
jecxz
loopne
jo
fs
mov
cmp
iret
repnz
nop
out
add
nop
add
cli
aaa
inc
cmpsb
pop
out
aam
adc
sbb
xor
dec
aaa
insb
cwtl
loope
mov
mov
adc
push
pop
push
idivl
mov
lock
mov
ljmp
mov
inc
xorps
clc
rclb
mov
cmp
add
inc
inc
movsb
inc
mov
inc
cld
je
lock
jmp
xchg
cld
out
push
arpl
jo
sahf
nop
dec
and
add
js
clc
pop
sbb
mov
inc
test
lar
add
decl
xchg
loope
dec
outsl
add
mov
mov
test
clc
icebp
adcb
rcll
dec
xlat
sub
adc
cltd
add
cld
mov
popl
fwait
cmc
jmp
outsl
cwtl
scas
mov
test
xchg
fisubs
fimuls
xor
insl
sub
lcall
call
out
lcall
and
in
mov
icebp
pop
xorl
or
jmp
inc
shl
inc
push
xor
push
sbb
mov
push
jmp
loop
unpcklps
data16
inc
decl
mov
faddp
or
iret
cltd
pusha
cmp
pop
lahf
mov
mov
mov
ljmp
dec
jle
imul
adc
sub
sbb
and
arpl
sub
hlt
js
xchg
jb
enter
xchg
hlt
push
or
ljmp
inc
xor
sti
loopne
aam
add
jb
pop
cli
or
cwtl
jl
sub
or
rolb
ljmp
jle
iret
lret
out
ds
sub
test
fmul
mov
roll
ffree
jno
shrb
movsl
mov
mov
push
dec
mulb
mov
dec
enter
test
sub
or
addb
movsb
mov
or
xor
gs
xchg
pop
mov
decl
sti
push
inc
jge
push
add
sub
aad
mov
inc
lret
sub
jno
sbb
sub
imul
push
shl
cli
or
pop
jne
jge
or
mov
mov
mov
mov
rcr
inc
jbe
add
arpl
lock
mulb
jg
lods
test
cmp
int
out
into
add
push
jle
xor
clc
pushl
mov
and
dec
inc
lock
pop
stos
scas
cmp
clc
mov
mov
loopne,pn
cli
dec
push
add
int
lods
add
stos
mov
xchg
mov
das
arpl
mov
pushf
add
jae
mov
iret
fmull
push
mov
xlat
jne
daa
out
aas
sub
pop
in
loop
int
sub
xor
pop
fcoms
or
pop
jo
mov
pushf
call
cmp
stos
fidivs
bound
sub
cs
inc
cld
jecxz
sbb
sub
std
cmpsb
pop
or
mov
pop
mov
in
dec
movsl
and
enter
mull
fisubrs
add
mov
pop
lock
subb
dec
rclb
fidivrl
inc
jg
inc
and
leave
xchg
mov
das
loope
sarl
fisubl
gs
xchg
cwtl
inc
push
adc
or
mov
sahf
lock
fsts
scas
or
rcrl
adc
test
ret
xor
scas
sbb
pop
ds
or
fs
xchg
dec
mov
inc
xchg
dec
push
dec
xor
mov
inc
rorb
sbb
frstor
xchg
push
pop
inc
inc
adc
subb
sbb
std
mov
adc
push
push
decb
mov
cld
outsl
mov
ret
sbb
pop
call
ja
pop
push
sub
xor
and
outsb
aas
mov
sbb
pop
add
mov
dec
ret
pop
sub
add
adc
xor
mov
sbb
pop
pop
cmp
call
push
or
aad
pusha
aas
mov
ja
push
lcall
js
pop
decb
dec
xlat
fists
or
ret
cmc
icebp
sbb
loopne
cmp
gs
mov
test
mov
sub
dec
push
popf
sub
jecxz
insl
aam
stc
hlt
call
scas
xor
add
loope
adc
hlt
lret
and
lcall
push
mov
iret
je
popa
mov
xchg
clc
pop
dec
xor
push
leave
push
xchg
std
xor
mov
nop
pushf
fcmove
sub
mov
ss
addb
sbb
and
add
add
and
mov
nop
shl
pop
jg
push
lods
inc
scas
jmp
pop
jmp
movsb
pusha
clc
neg
test
loopne
rcrb
ljmp
inc
cmpsb
addr16
inc
cmpsl
sahf
push
dec
orb
insb
sbb
mov
out
mov
adc
xchg
stc
loopne
pushl
pop
fiaddl
lods
out
sbb
xchg
out
sbb
add
mov
add
sbb
pop
sub
in
pop
sub
mov
daa
movb
cmc
jmp
jo
push
push
and
mov
int3
mov
test
add
jecxz
sbb
push
mov
dec
faddp
das
clc
mov
pop
rorb
push
cmp
inc
test
insb
cs
shll
xchg
ds
int
jle
nop
push
jbe
ja
decl
bound
pushf
push
int3
sbb
or
xchg
dec
mov
cmp
out
pop
xor
pushf
sbb
repnz
sbb
mov
fnstenv
jns
pop
jo
out
sbb
adc
jmp
paddusb
pop
in
insl
add
pop
add
pop
add
rolb
mov
mov
mov
movb
mov
push
ret
adc
pop
outsb
pop
lcall
test
sbb
adc
jno
popa
insl
xor
sub
addr16
loop
clc
fildll
mov
mov
lahf
sbbb
push
pop
add
clc
mov
dec
mov
nop
lock
mov
lock
into
adc
decl
test
mov
lds
cmp
push
pop
movsb
mov
popf
nop
jmp
repnz
rorb
pop
lods
adc
add
scas
push
rcl
xchg
insb
ret
or
mov
out
sbb
inc
cld
jl
shll
jmp
fucomp
xor
movsb
and
cmp
repz
cmpsb
cmp
bound
clc
xor
das
sbb
lret
add
and
mov
incl
sbb
and
dec
jp
mov
enter
ljmp
lods
add
or
push
xor
mov
pop
rcr
lods
add
jno
ljmp
popf
cmpsb
ljmp
xchg
data16
insl
push
xchg
je
sbb
dec
cmp
adc
call
fs
bound
or
ljmp
mov
xor
add
daa
lods
jp
cwtl
push
fisubrl
imul
rcrl
pop
fcom
mov
cld
mov
cli
pop
pop
jbe
pop
movb
xchg
pop
fwait
dec
jge
into
mov
inc
mov
inc
in
push
inc
dec
movsb
sub
gs
jp
aaa
add
add
aad
mov
test
push
cmpsb
clc
cwtl
xchg
addb
add
hlt
jecxz
mov
sub
mov
lods
xchg
jne
xor
scas
adc
dec
imul
out
adc
fcmovu
push
mov
mov
xor
push
fdivrl
stos
add
add
aad
hlt
cld
outsb
icebp
add
fadds
scas
add
les
out
jp
xor
or
stos
lahf
mov
sub
gs
and
jmp
jb
cwtl
incl
pop
outsl
scas
pavgb
xchg
dec
add
jecxz
pop
pop
fs
jg
data16
jle
cmp
sbb
mov
pop
dec
sbb
dec
ror
movsl
cmpsl
cwtl
pop
scas
add
jmp
mov
ja
xchg
push
add
les
inc
loopne
shrb
and
sub
in
mov
call
adc
sub
jg
add
shl
shlb
xchg
std
data16
inc
leave
mov
push
mov
sbb
pusha
mov
cltd
loope
cmc
aaa
cld
test
sub
lcall
mov
inc
enter
push
ret
inc
push
add
jge
addb
cmp
test
loop
and
adc
hlt
xchg
aad
inc
push
lret
sbb
fiadds
jo
into
and
enter
clc
sub
xor
adc
mov
cld
idiv
movsb
test
scas
mov
jl
and
jb
outsb
and
andl
stos
push
hlt
or
in
cs
xchg
clc
dec
js
mov
testl
sub
sbb
clc
outsl
js
sub
inc
jl
jae
xchg
lahf
hlt
cmc
sub
adc
clc
cld
cmp
pop
lock
rcll
call
mov
mov
lds
xor
sarl
into
xor
clc
stos
ficoml
cmp
xlat
rorl
cwtl
clc
mov
gs
pop
stos
test
popf
aas
shl
mov
jg
test
lret
or
std
sbb
xchg
mov
pusha
push
fcoms
xchg
and
jnp
fistpl
jo
jmp
adc
fs
cmpsl
and
loope
cmp
inc
inc
cli
pop
fdivr
push
sbb
and
jmp
rol
call
dec
mov
int3
add
mov
jecxz
sub
mov
mov
inc
inc
pop
sbb
in
fwait
and
out
dec
jo
aam
and
mov
add
sub
inc
fwait
add
xorb
mov
sub
popf
test
or
or
pushf
pop
mov
loopne
mov
or
push
cmpsb
sahf
scas
sub
movsb
inc
popf
int3
mov
cld
inc
sbb
push
call
push
jbe
in
int
lret
bound
inc
and
dec
jecxz
push
cld
jb
in
inc
out
icebp
ljmp
mov
test
ss
add
maxps
insb
cli
mov
pop
dec
jae
loopne
cmp
jecxz
pop
pop
mov
repnz
push
push
in
in
cmc
xchg
nop
por
iret
jmp
test
cli
aam
xchg
push
popf
pop
pop
inc
dec
cmc
adc
mov
jp
inc
loopne
test
stos
jb
and
dec
or
adc
pop
idiv
das
jbe
adc
add
or
sub
adc
xchg
bswap
mov
dec
cmp
mov
daa
jp
std
inc
fbstp
lret
mov
pop
iret
cmp
add
lcall
jp
ja
call
scas
xchg
pop
mov
xlat
aaa
adc
adc
push
cmpb
push
or
repnz
mov
out
adc
add
xor
jg
xchg
jbe
mov
push
xor
dec
incl
xor
mov
push
lahf
xor
call
jp
ret
cmp
mov
mov
mov
mov
mov
jo
and
inc
ljmp
test
fcompl
mov
mov
mov
hlt
ljmp
call
pop
pushf
cli
cltd
adc
lret
scas
pushf
dec
or
les
ljmp
call
out
repnz
inc
mov
imull
out
sbb
pop
mov
faddl
xor
mov
mov
sub
test
jle
sbb
aaa
jne
cmp
cmp
in
mov
push
insb
mov
cmp
outsb
sub
ja
pop
cmp
stc
syscall
movsb
or
ds
mov
lcall
cmp
clc
xchg
push
xchg
add
add
push
je
cmp
pop
sub
je
adc
sub
inc
das
xor
mov
mov
and
icebp
push
pop
loop
repnz
shll
pop
jp
popf
out
loopne
xor
dec
and
into
sub
sbb
mov
add
and
xchg
xchg
popf
rcrb
mov
cmp
inc
xchg
sub
dec
push
enter
and
jmp
mov
ret
clc
xor
es
call
or
scas
dec
rorb
xor
jno
add
cli
adc
push
and
decl
inc
push
adc
add
jl
dec
sar
add
movsb
cld
push
shlb
jno
jp
adc
mov
mov
andl
mov
fldenv
pop
icebp
stos
incb
test
adc
repz
xchg
jmp
jb
pop
lea
push
outsl
outsl
repz
decl
loop
cwtl
fld
or
cltd
xchg
add
pop
loopne
xor
push
popa
stos
add
and
pop
jo
jo
mov
subps
and
lcall
sub
stos
mov
jae
sbb
inc
mov
add
mov
xchg
shll
push
lock
cld
mov
inc
cmp
ret
xchg
and
xlat
cli
cli
and
lcall
fidivl
out
sbb
xchg
lock
call
pop
mov
rclb
push
adc
and
dec
mov
push
enter
sub
jmp
movsb
adc
std
jg
or
ud0
dec
mov
lcall
sub
lods
push
js
or
lds
test
sub
ss
sbb
movlps
fisttps
scas
xor
call
addr16
sub
inc
push
mov
xchg
fdivrs
les
dec
stos
jbe,pt
pop
inc
vcvtsi2sdl
xchg
pop
in
push
js
vpshlw
in
cli
es
subb
pusha
fcompl
test
lods
cmp
stos
clc
xor
addr16
xchg
push
sar
sbb
or
pop
mov
lea
xlat
cmp
cmp
jmp
sbb
add
les
outsl
xor
sub
dec
repz
scas
mov
mov
incl
jp
and
cmp
inc
sub
movsl
movsb
adc
jmp
mov
pushl
or
jbe
sub
ret
mov
decb
add
xchg
mov
rcr
in
mov
test
mov
imul
addr16
or
fwait
in
test
enter
lahf
cltd
jl
mov
mov
cmp
xorb
imul
test
xor
gs
call
adc
fdivrl
inc
rorb
loop
jle
jbe
addr16
incl
int
sbb
out
aad
in
inc
fidivrl
rclb
push
call
add
pop
sub
mov
lret
pop
sbb
sbb
decb
jl
aad
rclb
ds
xchg
sub
sub
aas
ds
orb
dec
pushl
cmp
mov
sbb
in
cs
lock
mov
psrlw
jnp
stos
out
out
adc
leave
push
sbb
call
cld
mov
pop
call
cli
push
mov
movsl
dec
out
out
movsb
es
inc
push
and
lock
push
pop
clc
push
cld
lahf
and
inc
pusha
push
jmp
xlat
mov
jnp
mov
mov
jle
add
mov
lret
and
jl
repnz
sub
stos
lock
out
xor
jno
and
mov
test
xlat
lret
jge
insl
movsb
mov
inc
push
cld
data16
push
lods
dec
sbb
dec
sub
test
pop
push
clc
pushl
xchg
xchg
lret
in
and
push
fs
test
pop
insb
cwtl
pop
dec
decl
pusha
push
out
fcompl
and
cmp
ja
dec
std
jb
nop
outsl
jbe
dec
inc
ja
xlat
test
jp
jg
mov
jb
push
pop
mov
mov
repnz
insl
mov
cmp
add
mov
pushf
xor
pushf
mov
mov
adc
add
sarl
push
lock
dec
mov
mov
inc
das
cli
mov
mov
add
xor
daa
pop
imul
or
jg
xor
push
pop
stos
or
add
addr16
xchg
in
popf
jp
xchg
les
push
arpl
or
sbb
sub
in
rcrb
stos
or
ja
popa
in
mov
cmpsb
cs
or
jno
jge
lret
inc
add
cmp
cmc
addl
call
sarb
add
pop
int3
sbb
flds
pop
mov
dec
xchg
xchg
outsb
push
mov
mov
inc
or
jbe
and
popa
imul
fs
xor
jecxz
enter
mov
cmp
and
mov
imul
mov
out
cwtl
lds
addb
add
mov
adc
outsl
mov
pop
jg
push
mov
int3
mov
leave
mov
push
cmpb
mov
es
out
lcall
mov
xchg
dec
sbb
sub
xchg
xor
loop
add
add
mov
dec
dec
adc
xorb
loopne
pop
aaa
lods
fnstsw
mov
into
adc
mov
addb
iret
fadds
fstpt
mov
lds
xchg
fdivs
mov
pop
or
cwtl
pop
out
ljmp
mov
xchg
sbb
lcall
call
or
and
nop
lds
icebp
dec
or
mov
or
decl
jbe
mov
xchg
outsl
xor
mov
fwait
adcb
call
notl
cwtl
addl
cmp
mov
push
popa
and
sbb
fistps
mov
mov
sub
and
cld
xorb
jno
hlt
jae
rolb
sub
xor
dec
sbb
loopne
pop
js
pop
outsb
rcr
test
addr16
or
in
sti
cwtl
fmul
shll
fxch
je
fmull
mov
mov
dec
leave
add
pop
cs
cmp
mov
lcall
add
pop
sub
ljmp
call
ret
mov
lahf
sbb
test
inc
scas
mov
les
cwtl
inc
adc
pop
inc
ret
or
andb
push
cmp
lcall
fstpl
pushf
dec
adcl
stos
dec
xchg
xorb
shl
or
popf
icebp
stos
push
ds
mov
fdivs
mov
dec
lock
jg
mov
sub
inc
or
inc
push
divb
adc
add
js
xor
sti
shl
mov
mov
in
cltd
add
mov
arpl
ds
fnstsw
inc
aam
fdivrl
sbb
fs
inc
lahf
inc
pop
int3
mull
push
sbb
shlb
sub
adc
push
pop
ds
ljmp
rclb
mov
lock
add
popa
add
or
adc
test
clc
subb
add
xchg
pop
sub
and
pop
ljmp
cs
cmpsl
sub
dec
push
dec
mov
lret
cmp
dec
sbb
aam
pop
inc
push
gs
jo
arpl
aas
or
pop
call
imul
jle
cld
dec
loopne
pop
outsb
mov
loop
cmpsl
push
add
adc
mov
out
shrl
mov
cmp
inc
jmp
enter
hlt
add
cld
add
cmc
xchg
outsb
xchg
popa
cmp
pop
shrl
lods
lcall
cmpsb
outsl
nop
lcall
jle
jmp
xchg
cmp
mov
cwtl
sub
adc
jmp
mov
push
mov
lahf
in
pop
ja
shl
add
das
enter
mov
jg
cmpl
dec
addl
or
adc
mov
xor
or
mov
subb
mov
mov
outsl
mov
out
xor
push
mov
mov
sbb
add
insb
mov
mov
xchg
stos
sbb
ja
push
cmp
xchg
cmp
jnp
pop
pop
test
adc
mov
pop
inc
mov
cltd
test
cli
out
adcl
xchg
jle
fiadds
subl
cmpb
adc
pushl
inc
stc
outsl
push
push
jns
fidivrl
add
andl
xchg
jle
and
push
leave
fdivl
mov
and
jmp
inc
mov
sub
jb
inc
hlt
xchg
add
mov
aam
shll
pop
mov
jmp
aad
aas
sbb
push
fisubl
jbe
jle
or
jg
cmpl
inc
xor
mov
push
call
ret
pushf
shll
jae
lods
pop
fdivr
adc
sub
or
into
cmp
and
sbb
mov
push
jp
push
jg
cmpsb
xchg
adc
cld
je
test
jno
addl
movsl
fbstp
xor
rcrb
mov
adc
or
clc
incl
loopne
xchg
in
pop
in
repnz
icebp
mov
jg
lods
pop
test
push
lahf
pop
sti
inc
add
mov
pushf
inc
cwtl
pop
enter
or
clc
mov
jno
inc
mov
cmp
xchg
das
les
cs
push
push
pusha
jb
out
dec
fcoml
lahf
or
inc
xor
daa
inc
mov
in
sar
push
or
cmp
add
aaa
pop
pop
dec
jecxz
and
sahf
iret
test
sbb
ja
dec
test
icebp
adc
mov
or
cmpsl
ret
pop
mov
push
mov
inc
sar
or
outsb
or
lds
sbb
jo
orl
outsl
and
incl
pushl
stos
sbb
and
mov
aam
cmp
in
rclb
out
dec
dec
enter
incl
mov
hlt
fiaddl
mov
cmpsb
fisttps
lods
push
sbb
fildll
mov
pop
push
lods
pop
cli
sti
sub
pop
or
insl
mov
cmp
xchg
lock
sub
xchg
stos
mov
nop
pop
push
pusha
sahf
cmpsl
hlt
lret
les
or
xor
sti
mov
test
jmp
jno
dec
ja
lahf
mov
jp
rorb
sbbb
add
pop
int3
add
add
cmp
stos
push
xor
adc
pop
cmp
gs
repnz
in
xor
xor
push
or
mov
rep
ss
fadds
loope
decl
sarl
loopne
mov
in
mov
leave
mov
mov
out
xor
jae
cld
int3
mov
cld
inc
push
test
dec
push
int3
mov
pop
mov
in
sbb
jbe
mov
aas
add
mov
iret
sbb
sbbl
add
mov
mov
les
std
imul
ljmp
inc
mov
and
pop
dec
sub
fimuls
hlt
sbb
jp
cmp
lcall
jle
or
xchg
pop
or
xchg
pusha
fadds
cld
rcl
inc
fsub
das
mov
mov
fiadds
inc
int3
aam
sahf
out
sub
mov
add
sub
dec
repz
cmpsl
mov
or
scas
mov
pop
scas
fdivrs
fsts
aas
add
cmp
jnp
fsub
popa
stos
arpl
cmp
mov
jno
xor
add
rcll
add
shrl
je
and
decb
out
nop
imul
sbb
adc
and
dec
xchg
cs
add
mov
inc
jle
fidivrl
lds
cmpsl
jg
lods
mov
sbb
jbe
or
mov
mov
jecxz
clc
es
es
and
fs
jg
mov
mov
xchg
xchg
add
lea
push
mov
test
inc
hlt
push
sar
lds
push
push
or
fldt
sar
hlt
sub
mov
fcmovb
movsl
add
mov
adc
mov
stos
inc
js
loopne
rol
add
test
add
enter
sbb
sub
into
jno
test
ljmp
xchg
pusha
in
add
pop
mov
out
lahf
push
jns
ret
std
in
es
xchg
pop
pop
jecxz
pop
lock
push
insb
fwait
xchg
or
mov
insb
fs
inc
out
loope
incl
jb
in
call
mov
mov
or
subb
jmp
leave
adc
sbb
dec
std
jl
mov
scas
fimull
and
sub
xorb
add
stos
outsb
jne
sbbb
clc
dec
into
mov
dec
mov
sbb
adc
add
or
jmp
add
enter
lock
dec
jl
fstpl
in
mov
scas
orl
ss
cld
or
les
lods
call
add
movsb
stc
ljmp
jg
decl
int
popf
fcomps
or
mov
rcl
jle
mov
imull
xor
xor
cli
mov
hlt
stos
mov
test
cmp
scas
mov
sbb
jl
mov
add
lea
sbb
add
ret
push
out
pop
ret
cmp
inc
jg
sub
push
cld
add
xchg
pop
in
roll
adc
jg
test
pop
bnd
sub
int3
lcall
pop
aam
add
jmp
sub
mov
cli
pop
testb
add
addb
js
mov
xchg
jno
loop
popf
dec
dec
std
mov
dec
dec
push
imul
fs
sub
pusha
sbb
inc
xor
inc
sbb
aad
add
fiadds
roll
mov
cld
lds
cmp
add
push
jl
sbb
jl
mov
xorb
mov
orb
decl
inc
mov
dec
mov
adc
loope
enter
add
sbb
jp
and
ja
ret
or
lahf
xchg
xchg
dec
mov
je
xchg
pop
jbe
jbe
fcomip
lss
inc
call
mov
sti
add
insl
adc
insl
loope
or
xchg
hlt
maskmovq
mull
fcoms
and
pop
inc
xchg
call
cmp
ja
mov
inc
cmp
ja
icebp
xchg
cmp
call
std
dec
enter
or
mov
out
add
cmpsl
mov
mov
sub
add
pop
fiaddl
scas
push
iret
mov
clc
pop
rcrb
add
sbb
mov
dec
push
cmp
mov
xor
pop
leave
push
mov
add
sub
push
mov
add
leave
bound
ret
sbb
repz
cmp
and
aas
out
mov
push
pusha
pop
adc
inc
push
cli
aas
sahf
or
movsl
and
sbb
in
pop
sub
iret
add
fldenv
dec
rcll
and
test
shrl
enter
scas
add
shrb
pop
sub
adc
push
and
dec
or
mov
cltd
pushf
adc
jbe
xor
test
mov
cwtl
sti
cmp
sub
mov
pop
cmp
inc
je
call
mov
and
nop
mov
push
jmp
push
ja
iret
out
pop
shll
movlps
outsl
ljmp
push
sarb
add
inc
stos
arpl
xchg
push
and
mov
inc
cmp
add
test
push
out
cmp
push
lcall
sbbb
push
clc
mov
cmovb
add
loopne
inc
fnsave
sbb
ja
mov
test
daa
add
jne
adc
xchg
ljmp
jmp
and
push
add
xchg
mov
sbb
adc
inc
lock
cmp
inc
lock
add
push
xchg
popf
cmp
sahf
sub
stos
stos
test
sub
mov
mov
pop
dec
sub
insl
mov
cmc
dec
add
mov
call
mov
iret
jne
push
sbb
or
mov
std
fnsave
mov
stos
dec
push
orb
bound
xchg
push
stos
outsb
sbb
nopl
fwait
adc
clc
das
call
ret
jo
xchg
push
into
mov
lcall
push
push
jbe
or
sar
test
test
ljmp
push
cmp
js
aam
pop
jl
clc
adc
and
in
add
and
dec
pop
dec
popa
sbb
xor
xor
xchg
scas
sub
pop
fs
pop
fdivrl
cmp
pusha
adc
dec
push
xchg
push
sbb
xchg
loopne
inc
sbbb
test
mov
out
test
adc
and
bound
popf
dec
sub
shll
loope
ds
cmp
and
and
in
push
scas
jae
add
and
fnstenv
in
xor
and
sbb
pushl
sbb
cmp
dec
inc
insl
add
pop
fcoms
ljmp
scas
test
pop
pop
sahf
inc
pop
xchg
jg
add
push
or
scas
sahf
addr16
jo
add
decl
adcb
xor
sbb
jg
fsubrs
adc
hlt
xchg
sahf
repnz
cmp
pop
outsl
loop
ret
sti
in
jb
sub
aaa
notl
fdivr
loope
cld
jg
movsl
loop
cld
arpl
call
es
cld
jge
push
lea
xor
jg
add
gs
dec
cmp
adc
xlat
cltd
fcmove
fs
adc
and
jbe
sub
and
outsl
aaa
mov
lock
clc
mov
scas
pusha
orb
cmpl
pop
rorb
mov
imull
and
xor
cmc
das
sub
jbe
out
cltd
mov
mov
dec
xor
mov
adc
jbe
orb
add
std
fcomip
push
xchg
and
in
or
imul
mov
int
addl
aam
mov
xchg
pop
jne
mov
icebp
fwait
in
in
dec
cld
fistl
xchg
mov
imul
adc
repnz
ret
aad
cmp
les
push
mov
inc
sbb
inc
outsb
jge
and
aaa
jbe
cmp
or
add
xor
or
aam
incl
pop
std
pop
adc
dec
femms
sub
dec
cmc
jo
dec
lods
add
out
loop
cltd
mov
or
shlb
inc
movsb
or
inc
xchg
jmp
fsubrp
inc
mov
or
ret
jo
xchg
jnp
inc
xchg
mov
jg
add
cmp
mov
pop
xchg
cltd
daa
cmpsb
or
adc
mov
xchg
push
scas
nop
xchg
pusha
clc
dec
or
incl
push
fs
or
sbb
and
push
or
loopne
dec
icebp
pop
pop
cld
inc
sub
mov
push
jnp
pop
dec
lods
lret
pop
xchg
rclb
add
sub
sub
ss
xchg
adc
adc
cmpl
stos
sub
dec
inc
push
cmp
pop
sbb
lock
rcr
rolb
pop
push
pusha
push
shrb
mov
call
push
push
lret
cld
jle
gs
pusha
bound
data16
add
pop
pop
xor
mov
push
cmpsl
add
fidivl
std
ljmp
add
inc
xchg
mov
jns
jmp
stc
popa
mov
pushl
sbb
sarl
jnp
add
xchg
movsb
adc
sub
movsb
rolb
push
aas
mov
mov
es
inc
das
mov
lock
jecxz
flds
and
push
adc
sti
fwait
mov
cwtl
insl
mov
cmc
mov
xchg
addr16
std
mov
lcall
inc
fisubrl
icebp
jg
andb
shlb
imul
cwtl
das
xchg
frstor
adc
push
fdiv
sbb
repz
movsb
push
fcomps
adc
dec
sub
add
mov
cmp
clc
dec
clc
sbb
nop
jle
xor
cld
jmp
mov
jp
ret
jp
and
insb
lahf
rcrl
push
or
add
mov
fidivrl
mov
rorb
inc
mov
test
fistl
cmpsl
int
loop
lret
push
push
dec
xor
out
xor
out
or
stos
xchg
sub
rolb
jo
mov
adc
mov
xor
loope
mov
xorb
das
mov
mov
or
push
arpl
je
rorb
daa
mulb
pop
les
adc
ljmp
incl
mov
cmp
in
and
fsubl
les
std
lods
into
dec
decb
addl
add
push
add
pop
push
cli
add
mov
adc
fwait
movb
mov
loop
lcall
enter
and
and
lahf
hlt
addr16
pop
lock
cli
fcomip
jg
inc
aam
int
pusha
pop
push
mov
ja
outsb
cmp
out
incb
adc
adc
xlat
rolb
adc
jge
test
xchg
pushf
sbb
adc
ud0
or
jle
push
dec
scas
pop
repz
jno
sahf
mov
mov
movsl
sub
xor
jmp
xor
adc
int3
pop
mull
inc
mov
mov
mov
pop
cmpsb
mov
push
cltd
jge
adc
or
inc
mov
mov
je
call
and
add
push
sub
test
ljmp
xchg
lret
jnp
push
rorl
icebp
jmp
pusha
testb
adc
call
loop
shll
push
mov
sub
lret
insl
scas
mov
ss
fists
sbb
mov
jle
outsb
lahf
pop
popf
mov
fiaddl
and
adc
pop
jo
call
or
mov
ja
mov
ret
push
or
mov
jb
sub
dec
or
das
push
aas
adc
out
movsl
or
movsb
mov
in
add
jg
or
mov
mov
xchg
adc
sbb
sub
inc
and
fcompl
fidivs
inc
adc
pop
pop
in
mov
xchg
test
lods
aas
das
test
pop
movsl
notl
push
fiadds
cld
outsl
add
mov
sub
xchg
xlat
test
xor
clc
lods
xor
rorb
pop
test
pushl
push
dec
sub
rcl
xchg
andb
jmp
cld
sub
repz
sub
pushf
aad
and
pop
add
or
test
xor
add
movsb
iret
decb
addb
roll
out
gs
ja
pop
in
out
fimull
and
sti
cld
scas
jle
mov
call
out
shlb
add
test
pop
ljmp
or
cmp
push
enter
pop
mov
push
xlat
or
js
sti
jg
in
out
add
cmp
inc
jecxz
mov
jmp
jg
sbb
sbb
pop
mov
inc
sahf
mov
scas
aaa
adc
dec
pushf
mov
mov
sti
aad
xor
call
flds
jbe
dec
add
scas
movsb
or
dec
adc
pop
push
push
mov
lcall
add
push
push
jae
inc
outsb
sub
fisubs
push
ficoms
in
int3
repnz
mov
cmp
pop
je
clc
stos
jle
nop
push
mov
mov
lds
jg
fwait
or
inc
out
sub
adc
cli
lcall
adc
arpl
pop
pop
cmc
dec
push
popa
imulb
stos
out
dec
pop
ja
adc
mov
scas
les
testl
cmc
cmp
in
adc
jl
pop
lcall
sub
lds
add
addb
or
test
ror
jb
cwtl
sub
inc
add
or
into
or
imul
push
aas
pushf
jnp
xor
mov
dec
pop
mov
jge
dec
addr16
jg
sbb
mov
mov
mov
inc
fwait
inc
fadd
fdivr
pop
mov
cmpsb
imul
mov
dec
jne
add
sbb
lods
fildll
out
pusha
and
mov
das
xchg
bound
pop
cmpsb
popa
aas
lret
mov
mov
inc
xchg
test
sub
repz
or
cld
or
or
sub
cs
lret
push
pop
pushl
out
dec
and
div
sbbb
rorb
mov
ja
push
sahf
mov
sbb
adc
adc
imul
jecxz
mov
test
mov
and
repnz
dec
popf
cmp
sbb
loopne
stos
mov
lods
sub
mov
data16
aaa
sar
jmp
and
test
mov
lret
push
mov
cmp
or
int
xchg
call
lret
gs
jbe
xchg
sub
test
cmpsb
cs
add
or
jg
insb
stos
jg
daa
js
sbb
mov
add
in
jge
and
cld
and
stos
push
cmp
lds
push
pop
negb
lods
or
pop
data16
fiadds
loopne
clc
test
lcall
outsl
movsb
push
int3
xchg
cmp
and
fs
xor
add
pop
test
lods
fisttps
jecxz
cmp
lcall
add
sub
incl
jae
pop
test
sbb
and
jg
movsb
inc
movsl
movsb
push
cmp
xchg
int3
dec
xor
jl
pop
mov
pop
add
mov
inc
in
mov
adc
and
test
pop
mov
lea
pop
faddl
pop
jp
pusha
push
pop
dec
jo
loopne
movsl
add
into
in
and
test
shll
test
scas
and
and
add
arpl
mov
shlb
cmp
sub
add
push
xor
dec
xchg
cmp
and
fimull
push
decl
mov
and
sbb
mov
es
mov
shlb
xchg
xor
testb
pushl
rolb
scas
and
inc
orl
push
cmp
shr
jl
cmpsl
push
in
sub
xor
sbb
shrl
xor
dec
push
fimuls
or
call
sti
pusha
shr
xor
dec
xchg
dec
push
cmc
mov
jae
push
fadds
rclb
cmc
dec
adc
add
scas
dec
xor
lea
leave
insb
mov
decl
lods
pop
jb
fildll
lret
dec
mov
pop
dec
jg
cmp
add
and
shr
pop
dec
xor
sbb
mov
decl
mov
cwtl
adc
mov
in
inc
dec
js
add
jecxz
add
cmpsb
cmp
enter
insb
shlb
cs
lds
sar
test
mov
xor
sub
nop
lods
hlt
in
int3
sub
xor
adc
rorb
stos
adcb
and
por
rclb
fildll
xchg
push
xor
call
pushl
xor
jle
cmc
ljmp
mov
push
jmp
adc
out
push
pop
lea
sbb
dec
inc
test
fmuls
les
daa
dec
scas
pop
and
fbld
xor
mov
pop
mov
gs
pushl
mov
stos
or
jp
push
add
roll
rolb
dec
aas
jp
arpl
xchg
xchg
jecxz
inc
push
adc
pop
shl
pusha
aaa
push
pop
add
sarl
mov
ret
rsm
cwtl
push
pop
mov
and
add
add
lret
lds
mov
dec
hlt
incl
std
or
mov
xchg
jo
cmp
aas
or
ds
ljmp
mov
fnstcw
add
sub
pop
jp
decb
shlb
jle
jo
sub
sub
incl
hlt
loopne
ret
and
leave
xchg
data16
cmp
add
fwait
lcall
and
fwait
sbb
pop
jae
sti
mov
xor
daa
aad
xor
cld
inc
push
fisttpll
shlb
lea
dec
ljmp
add
adc
divb
mov
pop
test
mov
sub
pusha
cmc
add
push
push
jmp
adc
aam
jo
add
das
mov
dec
mov
lret
sahf
cmc
aam
pop
dec
and
or
insb
push
movsl
scas
cmp
inc
xchg
push
fidivl
test
cld
jg
les
jge
in
jno
das
xor
bound
push
scas
cwtl
xorl
sbb
out
aas
add
cmc
dec
or
outsl
adc
pop
dec
add
jle
mov
scas
cmpsb
inc
xlat
inc
shlb
xchg
clc
loop
add
dec
cli
out
loope
mov
mov
push
jae
or
cmp
pushf
test
insl
adc
loopne
repz
aas
clc
pop
fimull
xchg
in
pop
popa
adc
jecxz
int3
fiaddl
fsubp
lcall
sub
dec
dec
loopne
jbe
sbb
xchg
pop
adc
sbb
movl
inc
aam
stos
and
inc
inc
fimull
adc
aad
xchg
dec
pop
loope
push
std
loope
fwait
scas
loop
ss
sub
rolb
test
sbb
aaa
loope
daa
loopne
pop
jl
mov
mov
sbb
fwait
inc
adc
sub
movsl
icebp
aad
ret
leave
sbb
pushl
pop
aad
out
inc
scas
rolb
and
sbb
addl
sar
mov
in
sbbb
fs
inc
movsb
sub
push
mov
pushl
je
rcll
xor
and
mov
add
mov
jmp
or
inc
jo
adc
jge
loope
xchg
inc
and
loop
add
pusha
aam
cli
sbb
cmc
adc
imul
xchg
test
push
inc
dec
cmpb
lods
mov
in
ds
adc
xchg
or
lock
mov
imul
mov
inc
push
adc
add
mov
inc
addb
sbb
pop
push
nop
dec
ljmp
lock
fsubrs
sbb
xor
cmpsb
xor
inc
mov
ljmp
int
add
cwtl
jno
xchg
push
aaa
outsb
dec
cmp
xchg
mov
ljmp
pop
repnz
scas
aaa
and
fstps
add
iret
xchg
lock
cli
orl
mov
int3
xor
or
push
push
clc
jg
push
cmp
imul
mov
scas
cld
dec
inc
mov
xchg
ficoml
add
mov
stos
cmp
cmpb
inc
jmp
cmp
jg
stos
pushf
adc
push
lock
pop
pushl
in
pop
hlt
add
stc
jge
aas
insl
xor
push
or
pop
push
aam
je
inc
stos
cmpsb
jp
data16
cmp
push
push
jno
mov
inc
lret
movsb
outsb
inc
lods
in
adc
push
sub
adc
sub
jl
mov
add
bound
xchg
push
mul
push
mov
pop
push
lock
or
push
xor
push
adc
sbb
mov
rclb
sub
cmpsb
jne
ret
lods
std
mov
lret
ret
jle
int
lea
lods
es
sub
fsubs
push
cmpsb
cli
je
pushf
pop
add
incl
mov
loope
les
adc
scas
push
in
push
sbb
cmp
adc
or
out
stc
loopne
ret
push
cld
call
lret
sub
mov
das
gs
shl
popa
fsubrs
add
xchg
add
pop
dec
test
push
mov
xor
test
adc
aad
dec
sbb
add
imul
or
mov
std
les
shlb
fmul
adc
mov
sbb
pushf
fs
fwait
jle
cli
inc
loope
adc
jae
adc
or
inc
cmp
pop
ror
enter
mov
movsb
call
ret
lea
push
das
pushf
cltd
ds
sub
clc
pop
js
loopne
lret
xchg
lock
pop
sbb
add
outsl
jbe
stc
insb
dec
mov
addl
scas
decl
lretw
repnz
sub
cld
incb
pop
xchg
add
into
dec
mov
mov
lcall
lods
test
push
pop
pop
adc
xchg
jmp
sti
pop
cli
js
pop
pushf
adc
mov
test
pop
push
je
push
lock
adc
repnz
ss
out
adc
xor
rol
pop
adc
scas
dec
dec
loope
xor
in
lret
mov
push
fsubl
sub
jb
cli
push
pop
and
xorl
enter
inc
sbb
cmp
ffreep
mov
fistps
mov
cmpsl
cmp
pop
cltd
adc
ljmp
cmpsb
inc
xchg
popa
lcall
test
mov
push
rorl
cmp
insb
imull
adc
jnp
mov
aaa
adc
xchg
xor
mov
xlat
mov
push
push
icebp
cmpsb
mov
jo
lcall
incl
daa
ds
cmp
gs
pop
stos
pop
adc
out
mov
mov
js
popa
xor
bound
nop
push
add
pop
data16
inc
dec
loopne
inc
das
sub
ja
push
mov
fcoms
bound
cmpsb
adc
cld
sbb
lret
ds
cli
sbb
and
cltd
popa
inc
clc
sub
dec
push
add
inc
inc
xchg
in
rcl
add
xchg
add
mov
cmc
push
push
mov
pop
mov
cli
es
push
mov
ret
es
inc
push
imul
pushf
xchg
sub
cmc
mov
mov
xchg
pushf
andb
cmc
inc
shll
pop
icebp
clc
inc
insl
mov
or
xor
jge
aad
xlat
bound
popa
scas
cld
lock
hlt
dec
les
mov
add
push
cmp
push
aas
or
int
dec
cmc
fisubs
and
inc
movsl
aam
stos
insb
loopne
test
movl
push
mov
jbe
and
jle
mov
or
or
flds
sub
mov
mov
xorl
outsl
push
mov
mov
repnz
mov
sahf
sbb
pop
dec
data16
mov
sbb
or
lret
mov
add
inc
or
cli
lcall
fs
or
outsl
std
insl
xchg
enter
xchg
loopne
pop
push
mov
adc
push
xorl
lret
aam
push
fdivrs
add
push
mov
lods
lds
cli
hlt
mov
lret
and
lcall
fiadds
lahf
add
mov
pop
rcll
iret
push
fists
inc
shr
pop
imul
repnz
movsb
xchg
lret
or
cmp
mov
jp
shlb
test
inc
push
shrl
test
leave
icebp
scas
add
js
mov
cmc
stos
mov
ret
sti
outsb
mov
sbb
push
inc
cmp
inc
cmc
decl
pop
cmp
or
vmread
mov
stos
lock
jecxz
push
push
addr16
imulb
mov
ret
push
les
notb
out
test
call
push
mov
call
inc
xor
mov
pop
sbb
add
dec
jge
decl
cmp
std
shl
and
dec
or
cmp
add
es
jns
les
or
pop
cmp
out
jno
filds
sbb
pusha
mov
pop
mov
sbb
test
aas
xchg
rolb
mov
inc
dec
aas
data16
add
aas
mov
or
mov
sub
incb
add
xor
lea
das
shll
in
pop
mov
daa
add
mov
cmp
mov
mov
fdivr
pop
call
add
add
out
pushf
adc
pop
out
fst
call
test
jmp
daa
lret
mov
aas
je
dec
push
add
cld
or
ljmp
or
cs
mov
loop
cmpsb
add
jb
mov
pop
xchg
and
add
xchg
add
test
pushl
cli
rorb
movsb
push
fistpll
faddl
sbb
shlb
sub
jg
out
lret
xor
in
xchg
xor
xchg
pop
or
not
test
or
mov
xchg
dec
stc
imull
add
ds
lcall
push
push
cmpb
arpl
sti
insb
adc
insb
mov
or
in
push
and
jbe
push
icebp
loope
lcall
ret
sub
pop
loope
push
pop
aam
mov
cmpl
cmp
nop
inc
or
test
adcb
nop
cmpb
sub
jbe
sarl
out
fcomip
fcompl
xor
mov
pusha
mov
loopne
mov
xchg
decb
mov
push
pop
addr16
cmc
mov
les
ret
mov
cmp
sbb
cmc
aad
dec
sbb
lds
push
lods
shrl
cmp
scas
in
pusha
xchg
out
jns
xor
sarb
xchg
ds
fcoml
out
call
push
data16
shrl
or
mov
aaa
lds
and
outsb
inc
out
push
insb
push
mov
mov
out
sti
pop
ret
and
jbe
or
popf
sti
cmp
clc
fbld
ret
jbe
xlat
cs
cmp
mov
in
or
lcall
fcmovnbe
dec
or
bound
sub
adc
xorl
std
pushl
mov
mov
inc
xorl
fdivrl
cmc
fmuls
std
cmp
clc
adc
or
mov
fsub
push
jno
push
dec
dec
out
mov
push
fcomp
clc
mov
popf
ror
clc
hlt
testl
jb
dec
lret
ret
call
ljmp
repnz
jmp
fs
mov
sbb
sbb
shl
mov
push
call
test
fbstp
sbb
insb
jl
xchg
mov
mov
ds
clc
jg
pushl
add
add
pop
dec
xchg
int3
dec
imul
decl
jg
enter
cmpsl
sub
ja
adc
ljmp
call
mov
addr16
or
test
and
adc
jmp
xchg
data16
push
adc
pop
lock
negl
sub
or
and
imulb
sbb
or
and
mov
lahf
bound
movsl
xor
inc
inc
clc
outsl
or
cmp
add
push
xor
ljmp
sub
xchg
push
popa
inc
cmpsb
cmp
movsb
das
mov
insl
mov
adc
push
dec
dec
pop
xor
aas
test
outsb
mov
adc
xor
xchg
jno
xor
mov
sub
clc
add
mov
rcll
hlt
dec
cmp
xorl
pop
xchg
pop
mov
and
inc
stc
pop
push
mov
cmp
cmc
or
pop
xchg
cmp
imul
clc
push
add
dec
daa
or
sbb
cs
xchg
and
movsb
fdivrl
into
xlat
add
scas
clc
pushl
push
mov
push
lcall
or
roll
clc
mov
or
sub
mov
scas
sub
cli
cwtl
negl
and
jbe
clc
push
jle
jle
mov
repz
push
or
pop
movsl
mov
xchg
outsb
pop
fdivl
xor
jecxz
popf
adcb
mov
jle
jle
dec
inc
xchg
leave
push
adc
inc
das
push
mov
lret
dec
mov
mov
push
ret
cmp
out
jno
shrb
cmp
pop
gs
pop
stc
loopne
jnp
lea
mulb
push
rorl
xor
ds
mov
pop
shlb
jns
arpl
or
sbb
adc
mov
mov
mov
mov
js
sbb
mov
mov
pop
ljmp
push
insl
push
pushf
imul
sahf
pop
dec
rcrb
lock
mov
sub
push
mov
test
xchg
mov
xchg
sub
orl
repnz
pop
std
jg
lock
sub
lock
pand
test
out
mov
and
fnsave
mov
mov
xor
push
in
lret
decl
or
sub
enter
mov
cltd
fsubl
fbld
add
pop
sub
cmp
jbe
sbb
or
bound
out
addb
das
mov
push
icebp
adc
insb
jmp
jmp
adc
push
adc
int
cwtl
jmp
xchg
pop
mov
addr16
in
shlb
cli
add
add
out
loopne
sbb
mov
js
stos
fisubs
push
mov
jnp
mov
repz
jmp
cmpsl
testl
clc
imul
fisubrs
ja
sbb
mov
aam
jnp
shl
dec
daa
mov
inc
mov
mov
jl
fadds
and
pop
adc
dec
arpl
or
sbb
push
xchg
mov
and
pop
call
dec
fists
cmp
inc
add
popa
jl
cmpsb
mov
add
aad
lods
jp
xor
sub
ja
sub
pop
pop
jae
push
or
cmpsb
ret
xchg
cmp
sub
inc
jl
push
lcall
sbb
pop
jo
cli
les
addr16
xorb
movl
decl
insl
jle
add
sti
cmpsl
into
mov
fwait
cld
mov
leave
hlt
sbb
cmp
repnz
je
and
adc
outsb
sbbl
add
bt
stos
lock
add
jg
cmpsl
mov
mov
pop
add
addb
sti
stos
and
pop
outsb
push
hlt
adc
cltd
pop
testb
in
aam
fdivrl
or
mov
mov
xor
xchg
push
pop
ljmp
idiv
mov
es
lock
cld
cmpsl
and
pop
aad
insl
movsb
test
push
std
push
clc
xor
sub
cmp
leave
imul
movsb
cmp
add
mov
mov
fs
repnz
lret
scas
inc
hlt
inc
incb
xor
ljmp
insb
lret
imul
sub
aam
je
scas
jo
sub
test
xchg
cmpsl
cmp
stos
rorb
shrl
movsb
push
fs
adc
mov
lds
dec
cmp
lea
jbe
or
dec
fldcw
icebp
jo
jmp
mov
inc
xchg
pop
push
xor
mov
xor
je
cmp
add
pop
test
sbb
rorb
dec
jmp
out
repnz
jmp
push
cmc
jle
adc
push
mov
es
xchg
inc
cld
jmp
shlb
test
mov
ret
xchg
bound
push
bound
jmp
mov
mov
dec
and
loopne
ret
mov
add
inc
iret
sbb
movsb
int
enter
sbb
jnp
and
inc
fsubs
or
mov
push
adc
add
xor
aaa
inc
mov
inc
add
and
inc
inc
std
leave
add
insl
jl
cmpsb
push
cmp
movsl
mov
or
cmp
shlb
xlat
out
dec
and
adcl
cld
and
test
or
jmp
xor
or
insb
decl
mov
mov
mov
pop
popf
adc
lds
cmp
outsl
inc
loopne
xor
imul
cltd
push
add
or
mov
jo
xchg
int3
call
mov
mov
jbe
mov
test
push
push
jp
inc
leave
adc
and
ljmp
dec
sub
ljmp
je
out
sbbb
rcrb
in
faddl
pop
pop
jmp
addr16
scas
out
inc
test
je
mov
xor
mov
mov
adc
repnz
les
adc
mov
inc
lahf
mov
cld
outsb
adc
cmp
dec
push
decb
and
mov
push
adc
out
sbb
loope
dec
mov
adc
pop
xor
pop
ret
inc
cmpsb
push
mov
in
or
scas
or
mov
jmp
push
xchg
mov
leave
mov
push
sbb
xor
lcall
add
mov
sub
fnstenv
xchg
jp
adc
call
bound
rolb
pop
sbb
inc
repz
mov
insb
pop
insb
inc
sub
cmc
outsl
and
or
xor
sub
and
mov
jle
mov
jp
notb
popf
push
mov
pop
dec
stc
push
dec
xlat
iret
rol
std
add
clc
movsl
pop
and
rcll
aad
sbb
cmp
call
in
sub
mov
in
sub
stc
rclb
or
ja
nop
lret
inc
pop
adc
ljmp
jmp
lock
mov
pop
mov
and
insl
inc
les
je
dec
popf
pop
gs
int
and
movsb
hlt
inc
xchg
add
cwtl
pop
es
mov
fbld
cmpsb
adc
push
dec
add
icebp
js
lock
inc
mov
shl
adc
rcrb
mov
jl
scas
cld
jne
dec
and
pop
add
cmp
cmp
lock
jmp
pop
jecxz
call
inc
rcl
cmp
stos
and
push
mov
lret
dec
mov
sbb
bound
cmpsb
js
mov
roll
popf
ds
add
add
mov
fmul
out
ja
sub
push
fcmove
nop
push
imul
adc
rep
push
lret
pop
scas
xor
mov
jp
sbb
nop
add
insb
xor
xor
xor
call
or
out
jns
js
sbb
add
and
les
jp
pop
aaa
pop
push
in
add
adcb
sub
push
bound
fwait
sbb
cmp
pop
xchg
jecxz
inc
inc
shlb
push
inc
repnz
roll
cmp
push
sti
stc
mov
and
and
mov
inc
xlat
mov
mov
add
add
add
xor
leave
xchg
jecxz
cmp
out
aam
cmpsb
mov
insb
pop
dec
enter
fdivr
pop
orb
lds
xor
mov
inc
xchg
mov
rcrb
cmp
orl
shrl
lahf
daa
ret
mov
dec
or
adc
sbb
leave
cmc
out
mov
pusha
mov
ficompl
and
xor
or
cli
xor
add
mov
lods
sbb
cld
pushl
in
mov
cmp
xor
pop
fcoml
mov
fldl
push
jle
dec
sub
movsb
mov
mov
mov
jbe
or
repz
cmp
push
jl
jae
fsubrp
icebp
lds
leave
mov
push
or
push
ja
fsubrs
test
incl
lods
or
out
insl
ds
loop
inc
cmpsb
mov
xchg
lret
das
cmpsl
lds
pop
lcall
fwait
js
repnz
andb
subb
jnp
jmp
call
call
mov
outsb
ret
sub
arpl
jg
cmc
out
ret
ret
loop
xorl
testb
push
inc
add
movsb
in
xchg
inc
xor
inc
mov
mov
dec
jmp
dec
adc
dec
ret
inc
ror
cli
lret
int3
mov
mov
subb
sbb
and
mov
inc
push
adc
hlt
mov
sti
shll
xchg
cli
xchg
rol
fildl
add
mov
fdivrl
popa
mov
scas
cs
cmp
dec
mov
sub
lea
mov
scas
pmulhw
loopne
mov
outsl
jp
int
mov
add
test
add
dec
sbbl
and
inc
clc
mov
std
mov
mov
add
gs
sub
sbb
pop
pop
xchg
js
add
leave
inc
jbe
mov
dec
push
sbb
sub
mov
cmc
das
stos
movsb
mov
loop
or
fisttps
xor
shlb
loopne
les
cmc
or
and
mov
xor
scas
pusha
dec
push
ljmp
mov
data16
pop
dec
iret
cli
cld
push
mov
int3
sbb
in
fisubs
cmp
and
lods
sbb
cs
mov
pop
sbb
sub
lcall
push
sub
pop
inc
pop
sub
stos
je
insl
jmp
add
or
jg
xchg
lock
mov
out
xchg
push
cmpl
add
and
add
mov
xor
adc
aas
ljmp
or
or
cli
outsl
jle
sub
sti
stos
add
roll
scas
mov
xchg
out
loopne
cmp
out
les
fbld
fcompl
pop
insl
lret
push
xor
aas
sar
in
sub
cltd
rep
dec
pop
ja
je
jmp
call
mov
jle
test
mov
out
cwtl
inc
xchg
jl
stos
jle
lcall
rorl
aam
cmpsb
into
decl
test
lret
add
adc
out
cmpb
call
xor
insl
fildll
scas
add
adc
pop
lock
inc
and
sub
out
pop
pop
add
mov
add
add
cmovs
push
idivb
flds
fwait
nop
lds
insl
mov
dec
js
pop
push
inc
dec
cmp
inc
cmpsl
out
call
repnz
mov
xchg
mov
mov
imul
test
adc
adc
mov
test
dec
lret
mov
inc
je
fmuls
or
jle
sbb
push
sub
loopne
and
and
and
jp
hlt
punpcklwd
adc
jg
inc
ret
into
cmp
pop
sub
sbb
cmpl
out
mov
notb
out
stos
add
fmull
rcll
cmpsb
mov
add
add
add
inc
sarl
mov
icebp
aam
in
ljmp
or
lods
inc
scas
sbb
mov
mov
lock
jne
inc
sahf
lods
stos
out
mov
pop
repnz
inc
mov
push
fmull
rorl
or
mov
scas
pop
inc
dec
mov
jmp
pushf
addr16
adc
rolb
push
aam
imul
pop
insl
cmp
shlb
dec
out
xchg
push
pop
fdivrl
es
sbb
adc
jle
add
ret
adc
incl
mov
popf
push
mov
push
sub
sbb
mov
xor
aad
fiaddl
daa
dec
xor
sbb
mov
or
mov
sbb
into
cmp
and
xchg
mov
les
mov
sarb
push
adc
jbe
mov
and
dec
out
call
lock
call
lods
push
clc
xchg
sbb
cmc
or
sbb
mov
sbb
add
incb
xor
repnz
pushf
ljmp
stos
pop
mov
add
out
lcall
jb
mov
call
mov
mov
pop
pop
cmp
popa
ret
mov
or
cmpsl
lret
movsb
mov
test
jg
sub
mov
in
dec
dec
call
inc
notl
sbb
gs
out
cli
dec
add
mov
jno
cli
lock
jg
orb
sub
xor
repnz
pop
je
loopne
repz
idiv
mov
test
and
stc
fidivrl
dec
cmpsl
sub
daa
pusha
and
and
lds
pop
lods
add
shl
sbb
into
inc
and
test
mov
sub
call
mov
inc
call
out
cmp
out
data16
into
sbb
fists
inc
push
adc
mov
movsb
jl
lock
cs
fldl
rol
js
cmp
aas
adc
cli
popf
add
inc
fimull
subl
repnz
cmp
outsl
jp
mov
bound
in
jmp
lock
adc
add
and
and
push
pop
add
call
and
cmpsl
add
adc
lea
ljmp
push
inc
pop
push
lds
andb
lods
or
jno
mov
mov
test
loope
js
add
mov
push
add
and
adc
jg
ret
test
hlt
dec
fadds
mov
mov
add
adc
and
mov
ljmp
or
mov
push
and
pop
cltd
add
lods
ja
xlat
cmp
add
cmc
push
jo
mov
mov
cmpsb
pop
adc
push
test
adc
add
imul
into
lds
pusha
loopne
sbb
scas
decb
or
call
push
inc
clc
test
in
sar
mov
fimull
jmp
aam
rcr
in
ds
incl
fcmovnbe
inc
sbb
and
cli
or
test
frstor
ror
adc
lea
clc
cmp
movsb
sbb
popf
cwtl
or
jmp
push
cli
gs
scas
mov
xor
xchg
enter
in
js
jg
mov
icebp
adc
out
out
dec
outsb
adc
mov
sbb
mov
mov
in
push
lods
cltd
pop
sub
jne
cmp
xlat
jb
subb
add
mov
lock
das
shrb
adc
into
cmc
notl
cmp
mov
or
jns
mov
icebp
aam
jae
adc
frstor
cltd
clc
mov
sub
fsubrl
mov
mov
cmpsl
std
ret
mov
lods
xchg
dec
push
pop
pushf
cmp
jae
xor
decl
lods
jae
inc
in
pop
mov
iret
pop
lods
ret
inc
clc
lods
adc
push
inc
or
sbb
pop
ljmp
add
jo
xchg
xor
dec
add
xchg
push
dec
push
xchg
js
xor
add
pop
pop
xchg
pop
mov
push
push
add
outsl
sbbb
js
nop
mov
ljmp
push
sub
insb
xor
push
adc
dec
dec
xchg
rolb
sbb
call
mov
sbb
and
xor
hlt
decl
dec
sbb
mov
test
stos
mull
lcall
movsb
pop
push
flds
ret
xchg
movsb
jge
xor
loope
dec
xor
scas
pop
add
insb
daa
es
mov
cmpsb
jns
push
xchg
test
dec
sahf
and
sahf
pop
or
inc
lcall
mov
incl
adc
cltd
aam
xchg
add
xchg
jmp
or
jle
adc
jmp
mov
out
sbb
dec
push
push
jns
andl
add
into
je
or
dec
add
or
jmp
cmp
lods
xchg
cmp
popa
loopne
xor
jle
test
mov
mov
imul
insl
mov
idivl
inc
shrb
std
test
incl
xchg
shr
and
sbb
fdivr
cli
push
hlt
fstl
dec
add
cmp
dec
and
test
lock
xchg
clc
pushl
das
and
nop
loopne
pop
inc
mov
stos
rcrb
jb
repnz
add
xor
test
sti
pop
icebp
insl
dec
bound
ret
mov
mov
jg
ljmp
inc
daa
inc
jg
test
dec
inc
mov
fbld
inc
mov
pop
icebp
push
sbb
std
mov
pmaxub
inc
jo
mov
or
ljmp
rolb
sub
xorb
inc
aam
in
rclb
and
mov
or
decl
sbb
rorl
push
xor
inc
in
xlat
jg
push
ss
aas
rolb
pusha
add
adc
mov
inc
push
rcll
mov
shrl
sub
arpl
lcall
fistpll
xor
cmp
xor
adc
nop
shl
pop
sub
push
rorl
out
cli
mov
les
xor
and
andb
mov
sbb
loopne
inc
pushf
mov
clc
and
adc
test
cmpb
lret
jmp
pminsw
bound
lcall
jno
adc
rolb
lcall
pusha
jnp
mov
inc
data16
adc
sub
dec
mov
pusha
sub
roll
ror
shrl
add
test
loopne
sbb
icebp
push
xchg
lcall
gs
std
jg
xor
push
xchg
add
std
inc
xor
adc
mov
or
pop
mov
sbb
xlat
dec
jmp
jg
outsl
lret
mov
das
cmp
outsl
xor
dec
arpl
xlat
popf
fs
int
xchg
dec
add
or
add
decl
fs
cmpsb
cmp
aad
inc
cwtl
sub
sub
inc
ljmp
or
push
mov
das
test
test
lcall
addr16
popf
repnz
inc
xor
orl
add
movsl
int
pop
loope
mov
stc
sbb
out
sbb
loopne
fdivp
pop
jg
mov
mov
xlat
pushl
imul
cli
add
cli
nop
jo
or
loopne
pop
push
jne
lret
sub
jge
and
out
dec
or
xor
inc
out
sbb
sub
xchg
mov
adc
orb
ret
jg
cmp
inc
xor
push
inc
popa
adc
pop
sub
mov
sbb
cmc
outsb
rorl
xchg
mov
test
xchg
pushl
and
xchg
lods
cld
les
testb
lock
jmp
popa
les
and
sub
lret
out
sub
outsb
into
lahf
sbb
add
jle
cmp
mov
cmp
add
testb
inc
inc
and
call
dec
pop
lds
cli
fcompl
mov
mov
shll
sub
shrl
cmc
movsl
add
xchg
adc
and
mov
outsl
mov
aas
push
cltd
fildll
mov
movsb
iret
pop
ljmp
sahf
or
sbbl
adc
cli
cli
jg
mov
lcall
mov
push
mov
outsl
sarl
mov
pop
xorb
sbb
adc
fs
push
fcmovnu
push
pushf
orb
mov
add
outsl
hlt
add
inc
repz
es
add
fcomip
pop
add
inc
cmc
jle
ret
loop
movsl
int3
xchg
push
push
mov
xchg
jb
sub
add
mov
lock
jns
outsb
or
pop
mov
rcll
mov
cs
or
add
es
imul
enter
cmp
xchg
hlt
mov
inc
int3
xchg
fbstp
adc
je
fcoms
push
daa
fldl
lock
pop
adc
add
shl
dec
add
inc
and
sbb
das
rolb
mov
push
push
or
cmp
loopne
icebp
dec
sub
out
out
mov
adc
lods
push
xchg
clc
adc
dec
ja
jg
cmp
or
push
sub
mov
push
movsb
jmp
clc
jge
cmp
sbb
xchg
mov
outsl
xchg
dec
stos
int3
ffree
add
loopne
fistpll
ret
mov
xchg
xchg
mov
add
fwait
cmp
jg
js
in
mov
sti
call
jbe
push
pop
adc
xor
out
pop
popf
pushl
jl
pop
pop
xchg
xor
addr16
cmpsl
cld
lret
decl
fmull
jmp
out
mov
pop
add
and
pop
pop
push
in
lcall
dec
xor
xchg
xchg
cmpsl
dec
push
and
inc
add
mov
xor
cmp
nop
jmp
cmp
cwtl
pop
push
jo
pop
hlt
jg
xchg
shlb
dec
push
mov
mov
sbb
xchg
jo
dec
loopne
adc
cltd
push
sub
sbb
xchg
pushf
fbld
loop
add
frstor
xor
stos
xchg
call
sbb
int
or
lock
adc
jne
leave
mov
cli
jmp
outsl
mov
mov
enter
mov
loop
lret
js
xchg
test
inc
fwait
jo
inc
add
sub
fcoms
jo
cld
push
pop
jg
ja
add
jns
dec
cmp
hlt
ret
sbb
push
xor
outsl
mov
lock
or
je
call
mov
in
pop
pop
sbbb
dec
or
xor
ret
std
fildll
mov
fxch
inc
push
imul
inc
pop
pop
loope
pop
enter
sar
test
bound
add
sar
loopne
out
jbe
sbb
xorb
or
xchg
ss
clc
outsl
inc
and
decl
frstor
insb
loop
mov
lea
pop
call
xor
loopne
incl
aas
scas
pop
call
stos
jmp
sub
cmpsl
ja
iret
or
aad
lret
fwait
movsb
mov
sub
dec
sub
mov
jne
xor
aad
push
sub
cwtl
bound
jge
test
and
movsb
cs
sbb
mov
insl
push
dec
adc
outsl
inc
mov
jecxz
adc
in
mov
adc
incl
test
push
pop
and
popf
lret
jg
call
je
add
and
push
rolb
call
jl
jecxz
mov
jne
call
jbe
shr
jo
and
jb
add
stos
ret
daa
push
bnd
push
repnz
mov
lock
adc
mov
mov
add
pop
bound
inc
xchg
xor
je
mov
inc
jp
push
mov
jg
or
inc
sbb
sbb
fildl
inc
or
call
xor
mov
mov
mov
jmp
mov
bound
je
ljmp
js
hlt
jb
in
adc
cmc
clc
xor
decb
push
movsl
arpl
test
add
fwait
das
mov
mov
inc
adc
imul
sub
cltd
ret
adc
add
in
push
push
pop
jne
dec
call
dec
js
xchg
popf
movsb
movsb
adc
fs
and
adc
push
jle
hlt
add
inc
ljmp
sbb
mov
and
pop
and
mov
mov
push
sbb
inc
cld
adc
adc
mov
enter
xor
icebp
dec
push
loopne
sahf
pusha
and
out
ds
fadds
ficoms
mov
push
xor
dec
mov
ljmp
loope
loopne
arpl
loope
in
sbb
movsb
push
pop
sub
jbe
pushf
jp
test
sub
scas
inc
push
int3
lods
ret
cmp
pop
popa
das
clc
or
jmp
xchg
adc
jmp
loopne
or
jmp
or
add
mov
mov
and
std
in
scas
push
testb
stos
popa
add
push
in
out
jg
add
push
mov
lcall
clc
or
ss
jle
push
sub
jg
fcmovbe
mov
repz
xor
mov
mov
push
out
decl
imul
repz
inc
push
push
dec
fadds
mov
sub
push
jae
cld
mov
fwait
cld
incl
sub
rorl
daa
fisubs
in
int
adc
rol
jmp
sub
push
jge
mov
fadd
loopne
imul
or
ss
mov
or
outsb
test
jnp
je
xchg
cld
inc
jge
sub
inc
sbb
and
rorb
mov
add
jge
add
cmp
clc
int3
bound
sbb
pop
or
test
add
dec
rorl
jp
call
std
mov
xchg
inc
sbb
mov
push
hlt
aas
ljmp
mov
and
push
mov
lcall
in
mov
mov
push
and
push
mov
imul
fcomi
add
push
std
scas
sahf
shlb
xchg
sarb
adc
sub
sub
fadds
cmp
push
outsl
inc
adc
loope
rclb
addb
arpl
or
mov
jnp
and
orb
test
adc
aam
mov
std
loope
mov
add
or
push
add
lret
sub
cld
iret
add
push
inc
mov
call
cmp
popf
mov
lods
mov
mov
fimull
clc
test
sarl
fdivs
outsb
sub
cmp
data16
xchg
loop
mov
inc
bnd
cmp
sbb
mov
stc
and
movsl
mov
sub
sub
cmpsl
mov
xor
xacquire
adc
bound
test
aam
add
stos
dec
pusha
add
cld
stos
movsl
pop
lret
or
imul
iret
push
and
lock
xor
inc
out
cmpsb
call
nop
stc
add
lea
xchg
leave
dec
pop
mov
setb
pop
pop
pop
or
ljmp
test
fdiv
mov
mov
add
lds
adc
fimull
aad
push
in
pop
cmp
loopne
mov
decl
jnp
fiadds
mov
inc
mov
add
movb
dec
push
or
dec
aam
or
test
or
das
loopne
fs
sbb
or
lcall
mov
dec
movsb
add
cmp
fs
dec
and
jnp
int
mov
insl
test
stos
jmp
fisubs
cli
cld
idiv
mov
sbb
xor
cmpsl
push
in
and
fcompl
lret
mov
or
rol
sti
movsb
fs
push
cwtl
jne
mov
mov
mov
negb
inc
and
cmp
stos
rorl
dec
push
mov
add
jl
mov
rcrw
pop
and
and
cld
pushl
add
fwait
iret
out
addb
cmc
mov
sbb
xchg
push
cmp
mov
scas
xchg
push
add
cmp
sbb
xor
add
add
xchg
cmpsl
lea
pop
inc
xchg
cmp
mulb
icebp
pop
cltd
sbb
push
xor
pushl
fists
rclb
loope
adc
push
sbb
add
mov
or
enter
stos
outsb
mov
inc
in
sbb
hlt
cmpsb
dec
or
jmp
fs
push
mov
xorl
mov
test
sub
inc
cwtl
jl
jg
jbe
and
iret
sahf
mov
nop
jbe
inc
repnz
movsb
pop
inc
sbb
cltd
pop
add
fildl
movsl
imul
xchg
insl
jp
mov
mov
loop
push
cld
fisttpl
popf
sub
mov
mov
mov
push
loopne
daa
pop
push
mov
push
inc
pop
loopne
test
jo,pt
inc
sub
or
inc
sar
xchg
sbb
call
mov
xchg
or
and
add
adc
jbe
lret
mov
mov
sbb
in
fadd
daa
lcall
test
jmp
ja
clc
or
push
cmp
int3
es
aas
stos
clc
addb
inc
pop
mov
adc
cli
test
xor
mov
movsb
test
jbe
cs
stos
loopne
jg
add
std
repz
push
clc
sub
sub
cmp
std
inc
mov
mov
sub
lcall
insl
add
ljmp
je
aaa
dec
xlat
int3
repnz
jl
test
adc
mov
xchg
loopne
sub
mov
imul
push
mov
xchg
int
sbb
dec
and
pushf
inc
cmc
lahf
mov
push
lret
rcll
jmp
adc
and
jp
and
je
lret
outsl
adc
ljmp
xchg
cmp
push
ljmp
pop
push
js
jbe
add
inc
outsb
add
inc
fcompl
mov
jbe
test
clc
or
mov
dec
inc
in
xchg
inc
cli
mov
ret
clc
pop
adcl
decb
sbb
test
pop
push
jmp
xchg
pop
or
push
std
jmp
inc
jl
adc
ds
mov
cld
xor
mov
mov
loope
mov
sbb
test
insb
lods
popf
pop
out
dec
push
cmp
sub
mov
in
mov
out
cmp
and
push
sbb
pop
or
hlt
add
inc
adc
add
loope
pop
les
mov
sub
int3
xchg
gs
jg
adc
mov
dec
test
call
and
scas
lock
inc
or
inc
loopne
xchg
into
in
push
lock
jge
sbb
insb
xchg
sar
cld
setle
ret
call
fs
loopne
sub
filds
xor
pushl
lahf
loopne
ret
bound
jmp
test
cmp
xor
ret
push
jae
add
pop
or
jmp
fsubl
cld
mov
mov
or
test
jne
add
test
jle
jmp
push
pusha
popa
jp,pn
add
pop
xorl
int
mov
dec
push
sub
aad
mov
fwait
cli
lcall
clc
loopne
xlat
sub
push
push
sahf
into
xor
jne
rorl
dec
xor
pushf
push
out
mov
and
xchg
insb
loopne
ret
test
pop
loope
push
adc
xchg
inc
mov
inc
test
out
jmp
jno
pop
add
sarl
or
popf
ljmp
push
rorb
stos
out
push
xlat
sbb
pop
jg
loopne
xchg
inc
mov
xor
dec
shrb
inc
or
arpl
repz
nop
test
lcall
pop
and
idiv
rcll
inc
les
mov
sar
mov
enter
and
decl
add
out
xchg
in
mov
add
sbb
inc
cmpsb
cwtl
jb
xchg
das
and
bound
dec
sahf
xor
or
and
jl
mov
jbe
sbb
iret
into
xor
sub
inc
cwtl
addr16
adc
cmpsb
push
and
mov
cmpl
mov
roll
cld
addr16
xchg
sub
fsubrl
dec
add
pop
push
ret
sub
cmp
or
lcall
clc
jg
jge
sbb
mov
or
and
jg
mov
sub
and
mov
cmp
jo
ds
push
push
popf
or
adc
and
inc
shrl
pop
sub
ja
call
idivb
xchg
xor
inc
lahf
fwait
mov
dec
inc
add
inc
mov
fbstp
sub
scas
test
loopne
cmpb
and
ficomps
inc
sti
and
push
das
aaa
xor
mov
dec
mov
sbb
cli
sbb
notl
and
cmp
cld
xor
mov
adc
and
and
sub
iret
xchg
in
adc
xchg
std
or
inc
sbb
lock
scas
sarb
push
cmp
adc
push
clc
aam
clc
jg
pop
add
insb
pop
xchg
mov
mov
xchg
fcomps
ljmp
in
arpl
in
daa
xchg
xlat
pop
jl
pop
cmp
stc
mov
cwtl
add
lcall
dec
out
insl
sub
scas
movsb
icebp
adc
js
jp
adc
adc
push
sbb
sbb
loop
adc
sub
cmpsb
lea
cmp
mov
jmp
push
nop
dec
lret
icebp
cmp
nop
mov
sbb
sub
pushl
lahf
dec
xchg
adc
mov
mov
jg
aam
ss
movsb
ja
jo
lcall
pop
mov
mov
outsb
stc
int3
cmpsb
lret
lcall
inc
jmp
cs
sub
data16
in
cli
pushf
push
jecxz
push
xchg
add
xchg
mov
inc
xchg
fldcw
and
adc
lea
fdivrp
fists
jne
call
mov
push
sub
dec
or
shlb
mov
data16
push
fstp
mov
or
fwait
mov
out
test
subb
lcall
push
aad
pushf
aam
test
push
pop
icebp
add
or
inc
jo
aaa
adc
fdivrl
jmp
cmc
ljmp
add
loope
push
add
add
add
cwtl
test
ds
dec
xchg
push
and
mov
jne
mov
addr16
add
nop
lock
pop
dec
push
adc
sub
jge
movsb
push
cld
pop
jb
pop
addr16
aaa
cmpsl
mov
pop
repnz
shrb
sbb
hlt
call
mov
cmp
cs
pop
sahf
inc
mov
rclb
insl
push
mov
clc
sbb
sub
add
fildl
add
stos
bound
pop
lret
scas
clc
cmp
iret
shlb
push
ds
clc
add
cld
dec
jecxz
lds
cli
sub
inc
and
mov
inc
out
ljmp
aad
or
pop
decl
je
cmp
ret
rcl
pop
cmc
xchg
jae
jnp
imul
into
pop
icebp
jg
jb
bound
inc
pop
jbe
mov
xchg
jl
and
sub
mov
insl
push
xchg
and
pop
hlt
test
mov
mov
dec
loopne
lahf
sbb
insb
inc
icebp
ret
sbb
dec
nop
jmp
add
xchg
repnz
xchg
and
cmp
ja
sub
aas
jp
fcmovbe
int
or
jecxz
or
ja
lods
mov
or
sbbb
pop
nop
rol
dec
insb
decl
xor
and
adc
adcb
call
inc
fstpt
xchg
sbb
or
dec
dec
inc
adc
in
aas
aad
jmp
sub
or
mov
push
sub
xchg
add
jo
movsb
pop
jmp
jmp
mov
push
inc
arpl
enter
pop
ds
pop
cli
fucomip
mov
ja
xchg
and
cld
in
stos
add
push
std
adc
nop
cmp
add
loope
test
cmp
arpl
out
add
dec
dec
hlt
je
jle
das
jmp
fists
jecxz
mov
adc
in
ljmp
imul
or
xor
adc
add
incl
mov
cld
sar
push
and
pop
xchg
push
mov
sbb
add
mov
dec
jp
mov
decl
mov
aas
sbb
lock
in
cs
sub
rclb
jg
xchg
sbb
nop
ret
or
pop
sti
iret
rcr
xchg
bound
movsb
in
mov
in
ljmp
xchg
push
mov
add
mov
nop
out
incl
fwait
bound
in
movsb
pop
sbbl
clc
push
sbb
add
dec
dec
pop
mov
inc
hlt
sbb
inc
fcomip
mov
xchg
lahf
adc
sbb
pop
pop
inc
xlat
out
jno
stos
sbb
stos
and
cmp
adc
xchg
fsubl
pushf
add
jb
test
and
popf
aam
lock
inc
dec
lock
add
xor
pop
push
mov
and
xor
cmpsl
mov
call
dec
jae
iret
jns
fwait
inc
add
jle
mov
ret
std
push
call
cmp
xchg
mov
xor
mov
fwait
adc
pop
mov
cwtl
aas
push
bound
inc
xor
out
mov
aaa
repz
out
stc
jb
mov
into
mov
jbe
test
sub
sub
inc
imul
in
and
cmp
inc
cwtl
ljmp
and
xchg
mov
adc
sub
and
aad
pop
xchg
addr16
add
mov
pop
rorb
jb
incl
dec
jb
rolb
mov
loop
dec
mov
adcb
ljmp
loope
mov
outsl
jbe
clc
mov
imul
pop
pop
add
dec
loopne
and
aam
cmp
incl
sub
cmp
std
and
bound
inc
rclb
shll
or
popa
insb
inc
xlat
fiaddl
ljmp
shl
imul
dec
mov
dec
xchg
jno
imul
subb
sub
add
add
bound
dec
notl
scas
xor
mov
sarl
loope
sti
pop
add
pop
subb
jmp
popa
adc
insb
mov
inc
pop
sbbb
dec
push
ljmp
jmp
mov
push
call
or
pop
shrl
sbb
leave
incl
fsubs
hlt
mov
adc
lock
pop
jae
lods
pop
clc
push
adc
data16
in
mov
loopne
push
cwtl
aad
outsb
push
xchg
or
add
sub
out
push
lock
inc
add
cmpsb
sub
cmp
and
call
cli
test
and
mov
roll
je
daa
std
push
loopne
aaa
std
dec
test
or
push
into
repz
pop
add
testb
mov
call
imul
jl
int3
sbb
dec
sub
pop
rolb
dec
sub
cmpsl
sahf
dec
scas
xor
pop
imul
mov
cmp
adc
xchg
or
push
jb
movsb
add
hlt
mov
loopne
popa
xchg
cmp
xchg
fdivl
rorb
sbb
pop
sbb
mov
das
cmp
enter
cmp
or
push
cld
push
std
cmpsb
dec
pushf
adc
mov
cld
or
sbb
and
pop
hlt
mov
push
pop
mov
push
and
lea
jle
add
mov
sbb
es
add
dec
out
xor
loope
xor
mov
push
je
pop
and
xor
mov
stc
pop
or
outsl
pop
push
push
inc
add
cld
not
and
hlt
lods
push
maskmovq
add
push
les
in
mov
sbb
push
outsl
push
sarb
pop
popa
dec
loopne
loop
dec
loope
fdiv
push
add
jmp
pop
sub
data16
push
ficomps
xchg
nop
mov
lods
cmc
xchg
jb
nop
add
loopne
inc
push
addb
mov
lcall
insl
jno
inc
push
fbld
jbe
jg
loope
outsb
sbb
inc
push
inc
mov
sbb
inc
or
jo
cmc
loop
push
sbb
inc
mov
mov
mov
addr16
inc
int
scas
test
lock
mov
adc
inc
in
pushf
sarl
rol
jbe
sbbl
ja
pop
icebp
je
movsb
lahf
xchg
push
scas
jns,pt
imul
xchg
scas
ss
sbb
cs
xchg
jmp
outsl
jecxz
or
in
shlb
sbb
mov
js
xchg
push
mov
sub
stos
xchg
lock
adc
adc
and
out
pop
inc
jae
mov
fdivrs
mov
cmp
cmp
negb
jle
fildll
ss
scas
stos
lret
and
push
mov
push
cmp
inc
shrb
xor
adc
pop
ret
test
roll
incl
xchg
inc
jo
mov
loopne
mov
sbb
mov
push
lahf
fsubs
fadd
add
cmp
push
cs
and
testb
ljmp
jle
out
and
icebp
cmp
js
fbstp
inc
outsl
mov
lock
adc
sub
mov
pop
lods
in
ffreep
in
and
pop
popf
in
data16
fwait
inc
jo
cli
sub
ljmp
insl
enter
or
add
cmp
es
es
decl
xchg
cmp
xor
pop
pushf
idivb
mov
adcb
xchg
pop
repnz
les
or
insb
pop
sub
jle
hlt
push
cltd
xchg
sti
adc
sbb
mov
cmpsb
add
bound
jle
inc
pushl
fs
cmp
cwtl
jp
nop
fdivrs
iret
fwait
setle
or
scas
ds
out
mov
into
pop
inc
and
mov
dec
or
dec
fs
incl
cs
mov
test
test
fiaddl
pusha
sbb
pop
lret
and
sbb
insb
push
and
mov
mov
add
mov
gs
fwait
add
shll
pop
leave
sbb
arpl
jo
aaa
mov
push
cmp
out
xorb
pop
negb
ret
mov
in
add
inc
fcmovnbe
mov
pop
andb
mov
inc
mov
out
sub
xchg
push
jb
mov
add
std
ljmp
and
cmp
fwait
mov
push
bound
daa
shl
lcall
cmp
orl
popa
or
push
test
xlat
or
jg
cwtl
sbb
adc
ljmp
in
inc
cltd
pop
xor
jge
adc
jmp
cmp
mov
lcall
enter
xchg
sub
jb
jle
xchg
pop
or
ljmp
mov
xorb
add
scas
mov
mov
push
inc
aam
push
aaa
mov
cmp
pop
hlt
pop
icebp
mull
and
and
js
add
jg
mov
or
cmp
outsl
mov
add
sbb
outsb
or
aas
addb
pop
movsb
mov
jno
mov
decl
cmp
push
sbb
pushf
xor
and
fnstsw
outsb
cmpsb
ds
call
and
addl
adc
decb
push
jp
pop
dec
lahf
xor
jl
add
add
cmp
add
push
pop
dec
dec
add
stos
in
mov
jmp
test
out
cli
inc
add
lds
adc
cmp
mov
jae
repz
movsl
andb
mov
lods
cwtl
add
push
in
dec
mov
movsb
push
mov
aam
inc
enter
xorb
or
inc
rol
jecxz
cmp
and
stos
aaa
lar
call
mov
add
mov
cmp
lea
add
xor
movb
or
add
xchg
inc
icebp
lea
pop
cld
or
mov
loop
pushf
or
mov
add
jp,pt
js
lcall
mov
into
mov
mov
cmp
int3
sub
mov
lock
inc
sub
insb
pop
add
cmp
adc
jmp
movsb
dec
decb
sub
andb
xor
das
adcb
cmpsw
mov
add
dec
or
iret
xchg
stos
lahf
pop
xchg
push
dec
xor
rcll
dec
mov
bound
pop
insb
adcb
mov
enter
dec
cmp
lret
cmp
add
aad
or
cmp
jecxz
cmpsl
fadds
cmp
clc
inc
mov
pop
sub
pop
add
add
int3
sub
or
out
xor
mov
jne
push
sbb
imul
add
ljmp
push
bound
push
mov
push
rcl
push
inc
fcoml
cmc
ljmp
cld
sub
xchg
subl
pop
xor
or
rcll
pop
xor
in
xchg
push
pop
adc
push
push
and
mov
stos
insb
push
dec
cmp
addl
in
outsl
fcmovu
pop
sbb
jecxz
cli
ja
ficomps
adc
ret
xchg
inc
xchg
sar
mov
jnp
mov
inc
ljmp
pusha
incb
into
ljmp
xor
subl
ljmp
fs
rolb
outsl
and
and
mov
lods
dec
push
mov
push
xor
and
jle
rclb
cld
push
inc
fbld
mov
ret
icebp
rorb
mov
mov
xchg
out
xchg
sub
js
push
imul
inc
jo
xchg
mov
lods
cmp
xlat
cwtl
and
adc
scas
xor
scas
fucomi
out
adc
add
test
inc
push
into
and
adc
dec
das
insb
std
mov
sbb
sbb
inc
cmpsb
and
filds
add
jae
push
mov
divb
pushaw
add
sub
jp
push
and
mov
jnp
sub
ret
fwait
mov
mov
dec
xchg
pop
pusha
inc
hlt
and
add
pop
mov
js
add
jns
fstps
insl
jg
sub
lcall
jg
jno
jle
mov
mov
push
pop
add
jle
lock
test
xchg
add
rorl
shlb
push
rcrl
push
scas
or
mov
add
push
cmp
subl
xor
jmp
jg
or
mov
leave
push
scas
flds
push
xlat
ficoml
push
dec
push
and
std
lret
adc
in
call
xor
and
inc
sahf
fs
aam
jnp
popa
sti
out
iret
push
push
push
clc
push
and
push
aad
pop
icebp
sub
add
sub
or
mov
ret
inc
and
mov
mov
add
movsl
fcmovnu
add
pop
test
cmp
andb
shlb
or
or
jb,pt
sbb
sbb
outsl
or
loope
fstps
loopne
push
inc
sub
movsl
pop
jge
and
nop
mov
into
adcb
ljmp
testb
ss
pop
cmpb
aas
xor
inc
mov
in
sbb
cmp
das
sbbl
les
ret
inc
cwtl
mov
rorb
sub
sub
xor
call
xor
sahf
jbe
pushf
cmpsb
push
mov
cmp
scas
inc
adc
sbb
sbb
adcb
push
aam
xor
clc
scas
xchg
and
mov
sub
arpl
imul
ds
dec
jne
jecxz
insl
sub
js
xchg
leave
outsb
inc
mov
int3
shll
inc
stos
insb
test
push
sub
rsqrtps
aas
orb
dec
pushf
pop
dec
dec
dec
jecxz
notl
mov
stos
leave
repnz
push
cwtl
add
xor
test
ljmp
hlt
negb
insb
fsubrl
ljmp
mov
mul
cmp
out
or
pop
add
mov
icebp
pushf
stc
ds
pop
ret
incb
lock
jb
movl
lcall
mov
f2xm1
pop
mov
mov
inc
lds
inc
call
cltd
lods
adc
test
leave
jl
dec
or
or
adc
inc
enter
arpl
and
push
sbb
pop
orl
ljmp
and
pop
stc
in
mov
out
dec
sahf
xchg
sub
inc
stos
xor
cmp
dec
dec
or
scas
push
decl
std
daa
xlat
sub
mov
cmp
fistpl
push
sub
jb
lcall
xchg
xchg
sub
repnz
jmp
jecxz
lds
jl
inc
rclb
faddl
test
pop
or
inc
stos
mov
clc
mov
mov
cmp
test
add
aaa
mov
test
inc
jecxz
sbb
faddl
adc
pop
or
pop
ljmp
je
or
adc
shll
and
pusha
cltd
mov
in
das
rcr
adc
aad
adc
push
jmp
lods
pop
xchg
sti
cmpsl
adc
push
js
adc
mov
cltd
movsl
scas
and
jecxz
in
ds
sahf
inc
enter
rcll
ss
mov
or
sub
dec
mov
sub
loop
decl
or
mov
mov
xchg
xchg
and
xor
mov
out
add
mov
xchg
adc
lret
push
mov
inc
pop
js
lcall
inc
sbb
or
sub
pop
mov
push
ljmp
add
push
test
dec
mov
or
push
rol
sbb
add
mov
rorb
subl
jb
adc
mov
bound
or
xor
xor
sub
cmp
mov
sub
mov
xor
jo
call
clc
cmp
jge
in
push
cmp
lock
mov
lds
clc
data16
mov
xor
seto
pop
dec
inc
lods
or
mov
aad
shrb
inc
dec
adc
xchg
arpl
and
jg
out
js
or
mov
jbe
es
and
xlat
aas
push
fiaddl
call
std
aas
jo
clc
fildll
adc
loop
test
inc
gs
pop
jo
fidivrs
rorb
adc
add
repz
sub
ficompl
mov
mov
das
shrb
inc
xor
lcall
cld
jl
mov
cli
rol
int
inc
aad
ss
ljmp
mov
sub
mov
es
stc
fimull
rcr
add
cmp
dec
adc
cmp
xchg
incl
scas
rclb
lcall
int
ret
in
jne
jb
movsl
int
les
mov
movsb
inc
mov
sub
fdivs
test
aad
xchg
jge
test
test
xchg
clc
rorl
out
pop
sbb
in
inc
push
mov
les
adc
xor
add
add
push
rcl
or
mov
int
dec
pop
dec
cli
mov
xor
inc
addr16
and
mov
xchg
or
cmp
fisttps
movsl
jmp
aad
jp
setb
push
xchg
cmp
subb
cmp
mov
sbb
cmp
push
push
xchg
dec
clc
cmc
fildl
movsb
outsb
test
jnp
rorl
push
imul
adc
xchg
inc
jl
xor
xchg
jp
sti
pop
bound
js
xchg
add
ficomps
adc
movsl
mov
fiadds
jno
sbb
inc
mov
in
arpl
push
mov
loope,pt
cmp
faddl
sbb
sub
mov
cmp
and
xor
cmp
adc
not
jb
bound
add
lahf
pcmpeqd
push
push
push
push
mov
gs
in
mov
daa
std
adc
int
mov
js
movsl
je
pop
mov
adc
js
push
mov
mov
jmp
clc
mov
rorb
loope
pop
xchg
test
xor
hlt
jb
jl
pop
test
mov
add
rorl
add
cld
push
fildll
pusha
cmp
fmuls
mov
fcomi
fists
aam
adc
mov
data16
clc
ja
pushf
mov
adc
dec
and
mov
incl
inc
add
add
leave
jo
out
adc
addl
data16
je
and
outsl
cmpsb
and
nop
cmpsl
loop
inc
mov
push
aad
out
and
push
repnz
fbstp
repnz
mov
stc
data16
add
pop
lock
and
ja
inc
fsubr
ficoms
sahf
or
push
push
ds
jne
test
stos
ret
jnp
mov
gs
inc
sarl
inc
jle
hlt
dec
push
mov
stos
in
pop
add
pop
cmp
mov
lods
insl
cs
sub
movsb
mov
movsl
push
jp
add
add
std
data16
fidivl
ja
outsb
mov
pop
lock
arpl
push
and
test
jle
xor
xchg
out
add
mov
idivl
or
cld
mov
and
adc
cld
movsl
stc
mov
and
and
mov
sbb
mov
es
sub
cmpsb
lret
mov
lds
xchg
dec
mov
pop
jp
dec
scas
decl
xor
ja
test
test
adc
cmp
mov
jmp
outsl
inc
repz
icebp
loope
inc
xchg
cli
inc
sahf
jnp
lods
mov
adc
pop
mov
inc
and
fs
pusha
sub
sub
sub
push
subb
dec
call
xlat
fwait
ds
fistpll
and
ret
cld
adc
dec
xchg
pop
psubb
rolb
loop
add
out
push
loop
inc
push
cmp
imul
sub
push
push
jmp
sbb
and
daa
add
dec
push
or
mov
mov
lock
bound
mov
and
sarb
cmpl
push
ds
jg
lock
cmpsb
aam
push
add
outsl
dec
xlat
push
pinsrw
cmpl
xor
adcb
lcall
adc
adc
test
clc
pop
cmpsb
ret
out
xor
inc
rclb
mov
stos
adc
hlt
shrl
test
jg
or
xchg
arpl
xor
mov
outsl
pop
icebp
sub
xchg
inc
mov
hlt
mov
add
popf
out
ret
push
test
sbb
cli
mov
add
into
inc
popf
sub
jo
sbb
push
sub
fucom
xchg
add
shlb
mov
fs
xor
xlat
bound
negl
add
daa
and
ss
pop
scas
or
fwait
push
sub
cli
ret
mov
cmpsb
mov
sub
jno
pop
mov
jmp
push
mov
add
adc
jg
dec
cmp
push
hlt
dec
ljmp
ret
or
jp
xor
sbb
stos
in
fs
loope
stc
dec
call
lods
add
std
or
cli
sbb
and
push
repnz
andb
stos
or
xlat
pop
sbb
cli
cmpl
pop
cmp
jg
mov
cs
add
aas
clc
mov
lea
xchg
inc
jb
dec
in
and
pop
stos
data16
and
adc
lods
add
nop
mov
jb
add
dec
jnp
cli
push
mov
inc
adc
ljmp
dec
jecxz
dec
push
jl
lods
jl
popa
scas
add
push
push
incl
repz
fwait
dec
loop
push
hlt
and
adc
out
jmp
adc
sub
daa
add
stos
dec
mov
add
inc
dec
push
jecxz
mov
jmp
cmpsb
pop
xchg
js
mov
nop
sub
loop
dec
mov
mov
fs
add
mov
out
add
jno
hlt
idivl
scas
andb
ret
aas
cmp
and
stos
inc
cmp
xor
xor
leave
xchg
pop
ljmp
pop
add
js
mov
aad
loopne
outsl
mov
pushf
jmp
mov
cmp
enter
xchg
and
or
pushf
rolb
sub
mov
or
or
lret
push
in
adc
jg
sub
push
jg
push
ret
test
shr
cmc
aas
and
movsl
dec
cld
hlt
ljmp
mov
dec
pop
outsl
add
or
testb
aad
clc
or
mov
adc
dec
leave
iret
mov
es
inc
xchg
cs
pop
subb
mov
loop
fsqrt
cwtl
dec
sahf
clc
and
jne
xchg
mov
mov
mov
add
daa
jnp
lods
pusha
xor
call
or
jg
jmp
adcl
data16
rolb
iret
inc
out
orl
icebp
and
dec
lods
outsl
inc
hlt
data16
inc
jg
sub
or
sbb
xor
clc
arpl
push
push
adc
hlt
jp
fsubs
mov
shlb
jmp
test
or
lods
push
outsb
sbb
aad
cld
pushf
int
stos
adc
nop
lcall
sub
ljmp
popa
jb
fcmovbe
scas
push
push
out
sbb
add
jo
mov
cmp
pop
aam
pop
or
addr16
dec
mov
test
mov
and
fnstenv
mov
push
cmp
jbe
sub
aam
mov
cld
adc
cmc
xor
shrb
jmp
int3
icebp
sbb
stos
pop
pop
das
jne
mov
push
cwtl
andb
into
xchg
mov
mov
jmp
aaa
aaa
fidivl
in
add
xlat
cmp
cmp
dec
push
fildll
clc
mov
adc
les
aas
or
adc
adc
and
aad
lods
lock
cmp
xchg
jbe
adc
es
or
add
cwtl
aas
cmp
xor
fldt
loop
outsl
inc
or
icebp
ljmp
out
jg
imull
jnp
mov
imul
sti
xlat
lcall
mov
sbb
pop
xor
pop
push
pushl
gs
push
rorb
ret
les
ljmp
mov
jo
adc
lock
ffreep
dec
movsl
lods
jb
cmp
xchg
clc
jle
loopne
aaa
test
xchg
pop
cmp
push
iret
cmpsb
adc
orb
das
sar
mov
mov
pop
and
add
iret
decb
pop
or
loopne
mov
adc
mov
adc
push
rcrl
movl
push
flds
imul
imulb
dec
xchg
lea
pop
jo
shlb
aad
test
xor
aam
push
fmull
pop
add
mov
dec
fcoms
xor
ret
sbb
or
mov
mov
cmpsb
lret
adc
outsb
mov
dec
dec
cmp
sbb
push
push
and
out
sti
sbb
repz
add
mov
imul
enter
movsb
push
js
mov
ljmp
pushf
dec
or
pusha
lods
jl
push
scas
ds
pop
sbb
jp
push
jp
mov
mov
adc
adc
scas
jp
mov
pop
mov
dec
idiv
pop
inc
mov
add
jmp
adc
aaa
and
cmp
int3
enter
inc
cmc
lds
jo
rcrl
mov
insb
adc
inc
add
mov
inc
pop
lret
push
mov
fidivl
repnz
inc
xchg
inc
arpl
loopne
push
call
cli
scas
ss
int3
pop
jo
fdivr
cmc
xor
into
dec
jnp
sbb
loopne
xchg
jo
imul
push
test
je
push
add
aaa
rcr
mov
or
lods
mov
gs
ret
lea
leave
cmp
push
call
add
aam
xlat
fadds
sbb
mov
jmp
adc
add
shl
mov
add
in
rolb
out
fnstsw
dec
xor
in
or
adc
cmp
or
inc
or
xor
mov
outsl
in
sub
push
mov
inc
and
mov
icebp
rol
scas
fisttps
cmc
jmp
cli
jb
in
push
add
mov
pop
adc
jg
fimuls
jg
nop
jb
jbe
hlt
adc
enter
push
dec
cmp
cmpsl
sbb
movsl
mov
jg
xchg
sbb
ja
lahf
pop
mov
iret
or
out
rolb
rorl
mov
jp
outsl
js
popa
sub
lcall
push
push
xchg
test
stos
lcall
jo
out
jnp
xchg
push
dec
mov
inc
lods
jge
xchg
mov
repnz
or
xchg
andl
sbbb
int3
into
push
loopne
lea
inc
int
andl
cld
aas
xor
mov
subw
xchg
movsb
out
cmc
js
or
jp
add
ds
mov
lret
mov
fwait
mov
dec
stos
mov
inc
push
dec
repnz
or
adcl
cld
incl
pop
xor
jge
je
in
cmp
rcr
adc
jp
cmp
aad
test
xchg
js
lret
mov
enter
data16
jae
lds
xchg
pop
and
inc
jecxz
mov
and
mov
inc
dec
jb
jl
fs
mov
xchg
sahf
mov
jb
js
push
and
jg
cmc
mov
mov
stos
std
sub
mov
xor
add
add
popf
mov
shll
pop
or
and
push
pop
add
push
test
or
loope
fcoml
aam
xchg
mov
push
mov
mov
js
push
sub
or
imul
hlt
les
or
sub
inc
shlb
mov
adc
ds
jne
push
jmp
push
pop
les
xchg
ljmp
nop
pop
sahf
lock
fs
enter
cmpsl
sub
shll
sbb
in
sub
fadd
cld
test
sub
lock
and
xor
mov
faddl
sbb
subb
fadds
or
pop
sbb
push
sub
inc
or
push
in
stos
sub
mov
pop
int
popf
test
push
jl
adc
add
jl
push
lods
push
cwtl
popa
lahf
mov
lods
and
adc
bound
mov
push
addl
push
lods
xlat
xchg
inc
jl
sub
sbb
sub
mov
hlt
rolb
clc
int3
loopne
cltd
pop
push
cli
mov
sub
pop
inc
dec
subl
stos
adcb
adc
adc
xchg
imul
loopne
push
lds
mov
cs
dec
outsb
mov
push
dec
and
ret
cmp
repnz
loope
inc
or
nop
jo
adc
mov
jge
push
push
or
lods
jg
dec
push
and
imul
test
xchg
lahf
lods
pop
es
in
push
fwait
leave
xchg
adc
sar
mov
inc
inc
int3
lock
pop
jecxz
mov
inc
mov
loop
mov
dec
jmp
rcrb
jbe
add
mov
pop
call
mov
mov
clc
stos
sub
adc
sbb
sub
aam
dec
je
xchg
mov
mov
inc
enter
push
cmp
ljmp
ljmp
push
inc
mov
pop
mov
ljmp
mov
cmp
test
push
dec
xchg
or
dec
and
push
xchg
ret
sbb
xchg
cli
inc
push
addb
lret
sti
shrb
cmc
inc
inc
mov
sbb
push
sub
loope
and
and
xchg
mov
loopne
lock
ljmp
jnp
sub
dec
leave
hlt
sti
outsl
loope
repz
sbb
xor
cli
inc
cmpsb
push
cmpsb
lods
in
pop
xor
adc
sbb
dec
hlt
leave
std
data16
lods
in
or
sarb
or
cli
pusha
push
and
mov
mov
jge
mov
mov
out
rorb
hlt
fidivs
adc
push
outsl
adc
add
stos
hlt
fists
sbb
push
mov
push
sub
loope
loop
jo
jno
loopne
xor
incb
stos
push
add
pusha
hlt
cmp
ljmpw
xchg
bound
mov
decl
xchg
js
mov
jg
lcall
push
inc
or
xchg
mov
inc
xchg
jmp
pop
lret
and
insb
xchg
sbbb
sbb
push
adc
rcr
je
cmp
add
mov
cs
adc
repnz
and
mov
sub
push
icebp
loopne
sub
push
dec
xor
push
sub
call
push
or
xlat
data16
pushf
std
bound
dec
inc
out
fnsave
ret
dec
loope
push
mov
movsb
add
iret
or
or
adc
mov
sahf
lahf
add
push
lods
jo
xor
adc
incl
movsl
xor
andb
cld
lock
pop
jle
xchg
dec
sti
jle
test
orb
sbb
mov
cmp
mov
std
daa
sti
xchg
aam
dec
les
inc
jg
sar
add
fmulp
mov
jmp
nop
decl
je
aas
lock
je
push
xor
rolb
pop
lahf
movl
inc
clc
push
dec
sbb
fisubs
cltd
fcoms
movsb
add
rcrl
js
inc
aaa
inc
cmc
mov
popa
test
fdivrs
mov
jne
xchg
adc
repnz
test
test
sub
cld
lahf
fiaddl
adc
lret
ret
cwtl
mov
imul
inc
rclb
inc
enter
jno
cmc
sbb
rcr
cs
into
mov
pop
fmull
mov
push
jo
out
inc
or
cwtl
mov
and
scas
lret
xor
cli
mov
test
push
outsb
sbb
stc
repnz
add
xchg
aam
call
ror
mov
stc
add
or
test
pop
dec
loop
inc
frstor
addr16
push
nop
or
adc
pop
jge
mov
push
adc
pushf
std
mov
ret
test
fdivrp
and
pop
or
cld
sub
sahf
adcb
pusha
sub
sahf
idivb
stos
cmp
adc
outsl
jb
mov
or
xor
repnz
loopne
in
loop
push
xchg
sbb
fisubrs
std
mov
and
inc
push
test
out
dec
mov
imul
pop
icebp
ret
pop
lods
xchg
xlat
mov
daa
push
mov
xchg
cld
jle
pusha
cmp
stos
push
test
xor
jle
pushf
inc
jne
js
push
or
pusha
or
ret
scas
sbb
in
sahf
cmpsb
fisttps
iret
push
movsl
xchg
inc
cli
ljmp
rolb
push
cmp
jmp
aam
xchg
mov
mov
push
jp
add
mov
inc
les
inc
pop
pop
popa
rcrl
or
sahf
adc
inc
mov
aad
mov
jmp
cli
pop
sbb
xor
adc
fcoms
sub
stc
js
pop
outsl
in
sbb
mov
mov
mov
scas
add
xchg
roll
stos
mov
je
dec
push
movsb
aaa
dec
cmp
imul
inc
mov
stos
mov
jge
adcb
fisttps
lahf
inc
push
sbb
into
xchg
add
ljmp
push
cmp
mov
lret
add
mov
push
add
sub
jl
ret
fwait
inc
inc
jp
outsb
mov
or
jbe
ret
dec
mov
sub
and
repnz
xchg
push
mov
xchg
js
sbb
aaa
mov
dec
mov
mov
inc
rcl
cmp
icebp
push
sar
ss
js
mov
mov
negl
jo
cmpb
jg
call
mov
je
mov
mov
popl
andb
lahf
xchg
mov
mov
scas
arpl
jp
movsb
test
jp
xor
lcall
push
icebp
jno
jmp
add
push
dec
jmp
scas
outsl
sub
cmp
sub
fisttpll
inc
adc
xor
adc
into
push
sub
cmp
mov
pusha
and
std
pop
loopne
int3
jo
scas
pusha
mov
sub
jl
fs
cmpsl
stos
xchg
add
fwait
push
ds
dec
sti
pop
xor
in
xchg
into
fimuls
fidivs
xchg
inc
in
insb
call
mov
ja
movsl
pop
xchg
aaa
push
jae,pn
add
movsb
jno
dec
cmp
jle
int3
pop
rolb
das
shrb
lea
dec
adc
inc
inc
mov
pushf
or
pop
icebp
cmp
ret
mov
cli
je,pt
loop
test
pop
pcmpeqb
rcl
jnp
mov
push
lcall
sar
lret
mov
adc
mov
jo
loopne
or
into
dec
mov
aas
ss
add
sbb
jg
roll
mov
sbb
add
leave
mov
arpl
clc
aam
sarl
cwtl
mov
insl
enter
xor
push
je
dec
inc
inc
lea
jle
sbb
dec
loop
fdivs
push
jg
push
pop
mov
ja
sub
adc
add
or
das
test
cwtl
add
add
add
loope
adc
and
dec
int
inc
incl
cmpsb
lahf
lahf
mov
icebp
dec
sub
push
enter
adc
push
scas
jmp
pop
xor
add
mov
adc
adc
mov
pop
jae
or
incl
ljmp
or
mov
orb
mov
inc
filds
outsl
add
js
mov
cld
sub
mov
lock
cld
mov
push
push
test
addl
cli
pop
inc
ret
mov
pop
sub
popf
mov
cld
cmp
dec
cmp
add
sbb
fisttpl
ficoml
jl
imul
scas
mov
in
add
les
test
sbb
fdivs
cmpsl
into
or
lcall
jbe
stos
loope
mov
popf
movsb
push
adcb
mov
inc
sahf
push
cs
mov
pop
adc
lret
pop
out
add
fs
adc
adc
shrl
into
adc
adc
iret
mov
push
jg
stos
xchg
das
es
or
jmp
xor
and
arpl
js
lds
push
divb
push
dec
repnz
call
enter
pop
je
and
xor
dec
lret
clc
out
addb
loope,pn
xchg
cltd
lahf
xchg
clc
ficoms
jmp
mov
sbb
aas
mov
inc
dec
jo
sub
or
wbinvd
fsin
push
out
stos
dec
roll
mov
loop
loopne
mov
loop
sub
stos
sbb
sbb
cmc
lcall
sbb
mov
aad
mov
stc
dec
outsl
sbb
test
jg
dec
xor
je
push
ss
mov
jae
adc
fcoms
push
cmp
fisttps
push
fmuls
repnz
lret
pcmpgtd
testl
test
push
jl
xlat
mov
fwait
testb
stos
mov
sub
xorl
sub
movb
sbb
les
mov
cwtl
dec
pop
js
sarb
es
je
xchg
pop
rcrl
jmp
mov
icebp
inc
jne
rcrl
dec
jmp
js
sub
sub
pop
and
fbld
lea
stc
push
std
pop
in
lods
stc
aam
cld
mov
xor
test
incl
int
out
xor
add
mov
mov
loop
jl
inc
sbb
in
fdivs
mov
or
call
jb,pn
mov
mov
loopne
mov
and
or
push
push
insb
fwait
sahf
cld
push
jne
mov
les
xchg
push
dec
lods
mov
and
push
ljmp
xorl
les
jl
mov
add
jg
adc
loope
bound
shr
inc
arpl
adc
add
or
in
mov
bound
or
mov
sub
testl
pushf
test
mov
jne
fldt
lods
cltd
ds
out
test
cmc
inc
fisubrs
adc
push
mov
lret
push
inc
scas
sarb
stos
dec
les
xchg
outsb
fs
cmp
sbb
sub
push
aad
pop
push
nop
insb
inc
mov
out
out
dec
test
push
out
outsl
jns
out
mov
inc
cld
test
pusha
mov
mov
add
mov
mov
mov
cmpl
ljmp
mov
mov
cmpl
and
add
mov
es
nop
push
sub
jno
std
mov
mov
ret
push
or
out
fisttpll
scas
pop
jl
roll
gs
inc
mov
push
jge
in
inc
cmpsl
imul
pop
imul
incl
das
ret
push
rcll
mov
iret
xchg
jmp
pop
mov
mov
sbb
dec
shll
sub
insl
ljmp
mulb
clc
mov
jo
cld
xlat
mov
or
movsl
dec
sbb
xor
aam
rcr
cmpsb
mov
push
ljmp
xor
dec
int
ret
mov
adc
clc
and
roll
jg
lods
jb
inc
bound
push
nop
push
mov
dec
push
lcall
sbb
jmp
xchg
dec
inc
andb
sub
movsb
daa
mov
mov
or
xor
in
int
mov
out
push
adc
pop
cs
nop
sbb
mov
je
cmc
dec
sub
sbb
or
push
mov
sub
icebp
jecxz
mov
xchg
lock
dec
test
in
pop
lahf
cmp
movsb
inc
das
or
mov
xchg
lods
add
add
add
push
hlt
aad
adc
add
xlat
mov
sarb
pop
sub
inc
fdivl
pop
test
movsb
ret
test
or
inc
cmpsl
jo
mov
aas
pushf
icebp
xor
push
in
dec
sub
idiv
mov
es
lcall
outsl
add
insl
push
aam
aam
jge
addr16
gs
js
mov
inc
sub
cmpsl
and
pop
inc
xlat
fsubl
insb
insl
ret
jg
es
add
cmp
dec
sub
mov
lods
add
cld
pushl
adc
pop
sbb
mov
ret
xchg
ja
jb
xor
js
xor
inc
ret
clc
lcall
inc
stos
cs
mov
das
or
push
les
mov
pusha
ljmp
les
add
push
fsubrl
and
mov
scas
loopne
add
or
in
adc
test
jl
fmuls
mov
pushl
movsl
mov
test
sub
pop
dec
out
out
outsb
insl
mov
mov
cli
int3
bound
scas
jbe
arpl
mov
test
mov
lcall
lods
adc
jb
int3
adc
cmpsl
xchg
sahf
fistl
and
sbb
les
jg
mul
lods
mov
loopne
scas
mov
outsb
loopne
gs
stc
cmc
lcall
loope
data16
jl
mov
xchg
xchg
rcrb
adc
inc
popf
iret
fldcw
or
or
and
inc
ljmp
or
lret
jl
adc
in
inc
aad
push
xchg
enter
push
xchg
add
pop
xor
and
inc
aam
ljmp
ja
and
mov
xchg
jp
aam
lods
loope
loopne
pop
cmp
mov
push
mov
pop
sbb
ficompl
movsl
arpl
jns
cld
cmp
ds
rolb
arpl
cmc
popa
insl
add
inc
cmpsl
mov
sbb
add
cmp
aam
ja
enter
jmp
cmp
aad
mov
or
xor
add
pop
and
cmpsl
mov
mov
lcall
xor
push
clc
outsl
jmp
aam
or
loopne
dec
loopne
mov
mov
adc
xchg
sbb
mov
xor
test
and
sub
rcll
in
pop
pop
imul
insl
pop
filds
mov
lock
js
jp
sbb
ljmp
out
fadds
das
movsl
sbbl
sub
and
xchg
ja
or
test
dec
push
mov
pop
mov
push
and
push
shrb
add
mov
fidivl
lods
add
js
mov
jns
sub
mov
mov
mov
aam
push
sarb
cld
shlb
ret
cmp
or
or
sti
pop
add
fisubrl
daa
push
inc
scas
jge
mov
cltd
mov
loope
stc
aad
in
push
fdivl
in
push
gs
daa
lahf
jg
fmull
js
in
xor
stos
test
pop
shl
test
dec
adcl
mov
outsb
xor
or
mov
push
mov
ljmp
sub
push
push
dec
xchg
mov
fisubs
xor
inc
push
xchg
ss
cmp
in
arpl
incl
roll
jb
inc
repnz
push
fst
jmp
out
mov
jbe
out
push
xor
push
or
mov
cmc
sbb
sbbb
push
imul
inc
scas
fmuls
mov
and
cmp
adc
outsl
or
pusha
or
js
ret
xchg
hlt
mov
out
movsb
mov
adc
cmp
xlat
cmp
ja
cmpsb
sbb
test
popa
fdivrs
inc
cld
aaa
mulb
sbb
jle
arpl
adc
mov
adc
aas
xor
rorb
pop
imul
fisubrs
add
mov
jge
outsl
js
andl
dec
mov
clc
and
dec
adc
lock
add
sbb
xor
mov
aaa
ret
lock
or
push
sbb
pusha
movsb
jp
sbb
leave
inc
mov
stc
mov
jo
push
dec
xlat
mov
xor
popf
bnd
and
fs
or
pop
mov
xchg
inc
xor
loope
and
adc
cmp
pop
int3
mov
jae
sbb
stos
add
pushf
adc
fsubl
ret
data16
ljmp
cs
push
sarb
inc
mov
push
je
add
ss
test
add
push
mov
inc
xor
je
mov
inc
sbb
sub
ss
shrb
data16
push
ret
movsb
push
neg
pushf
or
popf
cmp
jo
add
test
xchg
mov
jmp
xor
scas
add
scas
sbb
test
sbb
or
insb
cmp
xchg
js
jmp
ss
mov
lock
fs
mov
mov
ljmp
push
push
add
mov
fwait
xor
gs
cmp
out
xor
sysret
xor
movsb
jno
sahf
jle
rclb
cmpsb
xor
jns
mov
push
and
push
loopne,pn
sub
push
test
shl
or
lods
or
inc
mov
leave
adc
sbb
clc
or
loopne
xor
mov
cmp
push
or
icebp
inc
mov
aam
add
add
pusha
ljmp
mov
sub
lock
mov
stos
mov
aad
sbb
loopne
mov
mov
out
sbbb
xor
nop
lock
xor
xor
fdivs
mov
test
orb
aas
dec
sbb
mov
rorl
mov
mov
dec
lret
push
jbe
int3
popf
jle
jecxz
or
or
mov
or
push
jle
aam
sbb
cli
push
mov
fisubrs
dec
mov
pop
cli
ljmp
xchg
and
add
mov
add
or
xchg
stos
jmp
negl
pushf
and
sub
loope
shlb
test
dec
je
cli
mov
add
dec
mov
sahf
fsts
rcrb
cmpsl
push
add
jecxz
sbb
sub
ficomps
jnp
adc
inc
mov
xor
out
push
or
pop
or
fcomps
sbb
mov
imul
mov
aam
rcrb
movsl
and
jg
leave
enter
out
stc
dec
or
movsb
dec
push
aam
cmp
stos
addl
clc
mov
bnd
leave
inc
stos
mov
popa
xchg
js
sahf
mov
dec
addr16
shll
insl
inc
sub
or
outsb
or
push
sub
push
js
xor
add
add
negl
and
pminsw
das
fnop
lret
imul
pop
leave
sarb
dec
in
shlb
loop
inc
pop
jle
mov
aam
test
jmp
cmpsb
mov
es
stc
dec
mov
or
ret
sub
stos
dec
push
mov
adc
xchg
dec
or
mov
adc
fisttpll
pop
cli
inc
sbb
test
rorb
mov
sub
inc
xchg
mov
and
cmp
mov
xchg
xchg
xlat
insl
adc
or
daa
push
add
add
popl
out
sub
mov
pushf
addl
fwait
sbb
sub
mov
into
dec
loop
dec
aas
mov
popf
ret
stos
sub
inc
and
pop
xor
dec
push
push
jno
sarb
loope
fstpl
lcall
xor
pop
or
shrl
inc
inc
mov
sbb
mov
hlt
addb
pushl
inc
repnz
xor
sub
testl
add
mov
dec
xchg
movb
push
sub
sub
fisttps
mov
adc
xchg
adc
aad
push
push
sbb
mov
inc
xchg
std
out
lret
add
in
mov
es
subb
sub
lret
das
push
in
push
cmpsb
icebp
cmp
mov
mov
cli
xchg
adc
mov
imul
dec
aas
mov
cmp
adc
mov
out
sbb
jmp
shll
subb
bound
jno
cmc
adc
hlt
mov
cmp
mov
out
out
add
out
cmpsl
clc
jo
inc
test
sub
adcb
je
mov
cmp
loop
and
xor
scas
div
jecxz
aaa
lock
mov
sub
call
xor
aaa
insb
mov
test
jmp
adc
loop
out
mov
mov
add
mov
xchg
adc
shlb
lea
mov
adc
inc
aaa
lock
inc
out
push
mov
clc
or
shrb
sub
xchg
push
cmc
mov
les
movsb
or
sbb
or
lods
xchg
dec
test
sub
popf
bound
mov
and
out
hlt
lods
add
or
clc
in
and
jecxz
mov
dec
push
lods
add
push
mov
into
popf
js
loop
and
add
or
stos
lret
cmovbe
inc
cmp
mov
add
out
add
daa
push
xor
pop
mov
mov
lret
pop
sub
fmuls
test
sub
lahf
aaa
and
jns
pushf
xor
aaa
sbb
nop
inc
aam
jb
pop
mov
bound
and
push
sti
cltd
sub
mov
mov
dec
xlat
sub
ds
pop
mov
stc
rcr
test
andb
push
lock
jmp
or
lds
add
inc
dec
shrl
mov
fdivrs
icebp
mov
and
pop
sub
add
mov
xor
jecxz
adc
je
or
cmpsb
mov
dec
mov
in
mov
je
jb
add
jb
jo
cmp
inc
and
mov
sub
inc
inc
inc
inc
pop
popa
jne
mov
dec
and
push
jns
incb
add
push
and
inc
cmp
mov
test
sub
sbb
cmp
or
jl
adc
mov
push
cmp
sar
adc
lods
push
test
in
xor
pop
cmp
decb
mov
sub
and
pop
ds
movsb
pop
shrl
adc
mov
mov
xor
push
call
xchg
push
mov
cmp
mov
out
cmp
xchg
lahf
inc
mov
mov
dec
cmc
in
or
mov
pop
mov
pop
ja
jp
mov
loope
dec
sti
sub
call
mov
rolb
jno
nop
clc
jg
jo
test
sbb
cli
adc
pusha
sbb
add
mov
lods
test
xor
pop
shlb
ret
mov
les
inc
xchg
std
jg
mov
lahf
xor
dec
jmp
mov
xchg
add
loop
andl
xor
lahf
jns
push
xchg
push
cmp
inc
and
sub
outsl
mov
xorl
insb
hlt
dec
lods
cmp
dec
lds
mov
jne
xor
lahf
adc
add
push
pop
fbld
pop
jns
stc
adc
add
ja
ret
in
jg
icebp
jg
sbb
push
loope
adc
lock
es
testl
add
test
mov
lock
pop
jne
icebp
lcall
xor
orl
push
je
cmp
adc
fsubl
mov
sub
js
ds
cld
sbb
icebp
out
push
and
mov
out
movsl
cmp
or
pusha
dec
sti
jg
and
insb
cwtl
and
call
jbe
mov
cmc
inc
cmp
mov
and
cmc
ds
mov
xor
ficoml
add
adc
jmp
sub
pop
dec
lods
jo
mov
insb
inc
sbb
loopne
cmpsl
dec
or
rorl
add
xor
xchg
iret
dec
push
mov
xchg
sbb
inc
popl
pop
inc
push
adc
mov
lods
roll
cmp
sbb
sbb
pop
insb
sbb
ja
scas
bound
dec
mov
adc
pop
mov
push
sub
mov
nop
lea
jo
mov
sub
out
subl
pop
jl
lahf
sti
adc
mov
imul
or
mov
dec
adc
rolb
test
adc
mov
cwtl
jb
push
data16
test
int3
pushf
xchg
int3
jae
push
add
dec
cmp
outsb
cli
xlat
out
ljmp
je
pop
mov
xchg
inc
mov
aas
ret
fsubl
pop
xchg
jmp
jp
cmc
pusha
inc
inc
or
add
cwtl
push
jmp
mov
add
mov
sbb
inc
sbb
inc
dec
fmuls
leave
cld
mov
shll
mov
lcall
add
xchg
clc
dec
or
jecxz
add
dec
das
int3
jle
push
push
rolb
mov
cli
lods
movb
popf
jbe
xor
sbb
mov
inc
mov
xor
xchg
xchg
pop
push
xchg
push
xor
jo
dec
shll
mov
rorl
dec
xchg
adc
xchg
xor
dec
adc
fisubrs
int3
xchg
clc
xor
fwait
dec
daa
lds
xchg
add
test
xor
lock
mov
jno
lds
jg
pop
or
shrl
mov
mov
mov
lea
and
pop
push
sub
shufps
push
shlb
nop
imulb
sub
icebp
adc
mov
bound
dec
lret
cli
or
mov
mov
aam
repz
pop
out
jnp
shrb
mov
scas
sbb
mov
and
dec
jae
mov
adc
inc
xlat
lods
jae
sahf
rolb
les
pop
sti
test
fdivp
imul
mov
lahf
mov
inc
cmc
stos
sbb
sbb
imul
jns
inc
mov
rol
mov
pusha
ficoms
cmp
sbb
shl
inc
cld
sub
orl
sub
ffreep
loopne
add
push
clc
sub
or
incb
xchg
cmp
mov
inc
dec
data16
inc
push
mov
inc
in
aad
out
stc
adcl
scas
or
dec
stos
push
addb
lods
xchg
lock
aam
push
xchg
sbb
mov
cmp
insb
mov
les
or
pop
push
stos
dec
mov
dec
inc
mov
adc
mov
test
jbe
sbb
aas
lret
cmp
jno
xor
cld
in
pushf
gs
cmovl
mov
mov
in
pop
sub
mov
fcoms
jp
cmpsl
push
or
outsl
xor
xlat
cmp
xor
mov
push
pop
fdivr
mov
ficompl
pop
push
push
mov
andl
adc
add
push
pusha
pop
pop
push
out
mov
add
fldl
stos
mov
loop
pop
push
inc
inc
in
add
or
imul
xor
mov
lods
decb
into
mov
movl
mov
int3
adc
xor
out
aad
or
dec
xor
xchg
add
stos
dec
xor
add
jo
fs
aas
mov
sub
mov
adc
into
icebp
into
shr
test
shll
movsb
mov
xchg
jb
lea
pop
push
rorb
xchg
das
int
incl
cli
cmp
les
adc
les
int3
int
mov
test
cmp
sbb
push
pushw
movsl
fcomps
mov
jbe
mov
ret
xchg
adc
cli
push
push
add
pop
jne
call
adc
and
cmpsb
ret
andl
mov
xchg
into
sbb
repz
aam
bound
and
mov
les
sub
mov
fwait
loope
mov
mov
push
pop
stc
cli
mov
push
xchg
jp
and
cmc
inc
pop
jbe
sbbl
fiaddl
jecxz
add
push
or
cmp
mov
int3
hlt
gs
xor
ret
ja
loopne
lods
mov
mov
vmovaps
test
cli
inc
or
aam
sahf
xlat
test
inc
leave
or
xor
in
jmp
push
std
xor
scas
cmpsl
scas
dec
mov
incl
aas
push
pop
sbb
aas
aaa
test
xor
fimuls
jp
and
fcom
orb
adc
fisttps
loopne
pusha
addr16
ret
daa
xor
mov
rcr
andl
data16
inc
js
mov
mov
aas
pop
clc
mov
cmp
xchg
xor
and
jmp
mov
lahf
adc
inc
orl
les
loopne
add
repnz
push
xor
aam
push
fs
push
mov
aaa
lock
sub
pushf
lcall
stc
mov
addb
lcall
bound
test
pop
jno
cmp
lods
out
pop
test
adc
pushf
mov
pusha
jmp
es
add
subb
out
pop
jmp
dec
int3
cmp
xchg
gs
rcrb
test
mov
jnp
add
add
jle
jl
inc
adc
fisubrs
xchg
sbbb
pop
mov
xchg
in
jb
cmp
xor
sti
push
adc
or
add
cmc
lret
xchg
cli
loopne
sub
mov
mov
and
adc
jae
or
in
movsb
stos
dec
je
cmp
sbb
jp
adc
mov
inc
fisttpl
jbe
xlat
jp
js
ja
inc
sub
cs
mov
lret
push
sbb
ljmp
xchg
iret
sub
dec
add
jl
jno
cmp
mov
call
or
push
test
or
test
mov
arpl
int3
pop
pop
imul
mov
cs
fcomp
lret
sub
je
popf
xor
push
mov
js
add
mov
stc
mov
mov
nop
test
or
push
jne
inc
xor
push
fidivs
cmp
mov
or
mov
imul
aam
pop
mov
or
ret
xor
lods
cmp
xchg
pop
int3
mov
imul
sbb
sub
and
ds
cmp
mov
fwait
in
sub
mov
inc
dec
mov
dec
jecxz
stos
xor
clc
push
dec
mov
sub
xchg
lock
inc
ret
fmuls
bound
stos
push
adc
add
ljmp
lods
mov
dec
dec
repnz
das
fbld
ror
adc
fdivs
test
pusha
mov
shll
jae
push
push
ds
mov
mov
stos
and
or
lret
or
lock
inc
andb
lcall
inc
decb
dec
fbld
sbb
lds
jecxz
dec
sub
push
hlt
cs
out
stos
and
xchg
stc
cmp
mov
cld
fs
clc
mov
inc
in
roll
add
xor
add
lcall
lcall
adc
lock
cmp
iret
cmp
push
mov
sbb
jbe
or
mov
rclb
pusha
fcom
cmp
sub
mov
jnp
mov
mov
pop
ret
and
bound
or
shlb
adc
subl
adcb
xchg
add
das
inc
movsl
jbe
cs
pop
jb
fcomip
or
repnz
mulb
fnstsw
mov
scas
lock
call
and
out
pop
and
ljmp
dec
loope
pushf
mov
ljmp
adc
jae
out
lock
stc
jns
add
loop
or
cmp
dec
test
pusha
clc
inc
fdivrl
jbe
add
loope
cli
pop
jle
fmull
mov
inc
test
fdivp
pop
and
inc
and
rorb
fwait
mov
rolb
inc
je
inc
mov
jnp
pop
dec
imul
xchg
mov
shlb
cmpsl
adc
adc
loope
into
sbbb
daa
sub
jns
inc
fwait
sbb
add
jbe
pop
jmp
loope
xchg
scas
xchg
imul
les
aam
scas
cmp
jmp
sub
cld
xchg
jg
lods
mov
mov
stos
fisttpll
pushl
mov
add
test
and
add
inc
or
cmpsl
lds
arpl
xchg
adc
xchg
xchg
add
std
and
pop
adc
aas
adc
sub
out
shll
or
push
jo
add
inc
cmpsl
test
or
orl
gs
jg
test
movsb
jno
jb
lahf
test
movd
bound
cli
xchg
push
dec
pop
jae
xchg
es
rorl
xchg
lret
mov
cmp
popa
hlt
lds
loop
fistl
aam
imul
mov
nop
cli
xchg
ss
push
and
imul
out
adc
jl
push
decb
cwtl
call
stos
add
in
jg
pop
cmovl
xor
ljmp
inc
cmp
push
lret
xchg
xchg
data16
das
shrb
dec
out
or
mov
rolb
cld
sub
jecxz
or
dec
cmp
push
shlb
pop
aad
pop
or
add
aas
insb
jb
inc
rcrl
outsl
fcoml
mov
push
lcall
pop
lcall
into
mov
add
dec
cmc
mov
xor
push
decb
add
jp
les
xor
les
add
xchg
aam
decl
mov
outsb
mov
fildl
jmp
add
and
lret
out
pushl
iret
andb
adc
or
jl
cmp
rep
cmp
mov
mov
sahf
pop
or
mov
and
bound
mov
mov
mov
jmp
ja
sbb
leave
in
call
adc
aaa
inc
xchg
push
sbb
lods
lret
dec
cmp
sub
dec
push
dec
fimuls
loop
jp
sub
push
fcmove
mov
cwtl
lahf
sub
or
and
fildll
cld
mov
dec
or
push
outsb
into
mov
mov
xor
dec
push
push
clc
push
aad
pop
or
nop
loopne
scas
xor
jl
pop
hlt
lds
ficoml
cmp
adc
mov
ficoms
adc
and
lods
push
push
daa
jmp
stos
test
add
pop
das
add
push
ljmp
adc
enter
addr16
push
mov
add
sbb
mov
cld
loopne
sub
fiaddl
mov
lock
sub
stos
mov
add
inc
sbb
fcomps
imul
test
in
cltd
mov
shll
es
mov
and
sti
push
pop
sub
cltd
mov
je
movsb
das
sub
xchg
into
aas
daa
push
xchg
xchg
mov
andl
xor
xchg
push
mov
in
or
cmpb
or
jp
push
das
mov
xor
mov
das
mov
int
xlat
lock
aad
and
cmp
adc
aaa
ficompl
or
sbb
rcl
mov
adc
sub
jecxz
insb
jb
inc
or
push
mov
cld
jp
hlt
daa
popf
in
cmp
out
push
dec
mov
dec
sbbb
out
stos
pop
push
sbb
imull
mov
enter
orb
mov
xor
add
decl
fcomps
lahf
xchg
xor
into
sub
add
ret
mov
ss
in
std
lods
jno
inc
lock
aam
aaa
pop
jle
into
xor
mov
pop
popf
lds
and
int
mov
cmp
jp
movsl
stos
xor
cmp
dec
inc
pushf
xor
or
mov
pushf
inc
xor
ret
jg
mov
xor
mov
in
add
sub
inc
jo
das
mov
and
outsb
mov
and
je
xor
mov
mov
stos
fwait
jmp
sahf
movsb
cs
xor
adc
push
out
inc
popl
fmul
pop
xor
xor
jmp
add
mov
fcompl
adc
aam
add
shlw
test
pop
in
js
pop
rolb
add
push
adc
xchg
xchg
or
xlat
push
jo
scas
enter
xchg
pusha
popa
or
call
dec
cmp
outsb
add
push
movl
sub
dec
movsl
dec
inc
shrb
mov
xlat
cltd
xchg
hlt
or
popa
test
add
jg
loope
jge
pushf
ds
icebp
test
popa
test
bound
push
negb
or
push
testb
xor
es
into
cmpsb
or
xchg
inc
andb
call
lret
movd
mov
xor
push
lcall
add
pusha
mov
jmp
jo
test
ljmp
mov
lds
and
cmp
fwait
mov
dec
jmp
adc
sbb
cwtl
cmpsl
xchg
push
adc
adc
cltd
xor
cmp
xchg
gs
sub
test
jl
dec
loope
sbb
fsubr
test
sbb
inc
popa
aad
cmp
enter
sub
popf
sbb
frstor
sub
push
jge
mov
dec
mov
pop
nop
and
mov
pop
std
xchg
mov
or
sbb
cmc
adc
pop
daa
nop
or
add
loopne
hlt
in
jle
and
xchg
mov
loope
rorb
arpl
cmpsb
mov
testl
out
pop
mov
cwtl
push
push
cmc
imul
or
mov
sbb
jle
test
out
cmp
in
inc
fs
lods
cmpsb
inc
pop
aad
fnstcw
testb
sbb
cmp
mov
inc
mov
insl
lahf
inc
in
mov
dec
inc
loopne
mov
outsb
lock
add
and
cmpl
pop
sub
inc
test
data16
push
add
scas
dec
test
sbb
cs
mov
and
sub
hlt
inc
ret
fsubs
mov
test
clc
add
mov
mov
sbb
les
movsb
or
and
ljmp
test
cmc
dec
hlt
jns
int3
fdivl
inc
mov
dec
aam
push
sub
gs
mov
rcrl
jle
sbb
aam
jg
xchg
xor
dec
sbb
out
imul
xchg
lds
adc
mov
stos
jmp
sti
jge
inc
aas
xor
fwait
sbb
cld
lcall
sub
xchg
or
ret
aad
xchg
std
or
lret
jb
pop
call
cli
add
sti
sub
push
push
fsts
out
jmp
testb
rorb
add
cmc
loopne
mov
cltd
daa
ret
in
in
sub
xchg
out
xchg
push
jl
push
dec
sbb
rorb
sub
mov
loop
add
pusha
lret
lock
jg
jae
leave
scas
subb
scas
push
inc
fldt
mov
sub
add
imul
sub
scas
out
jno
adc
push
sbb
jnp
into
enter
adc
dec
icebp
jmp
nop
jge
in
clc
mov
scas
push
pop
adc
jmp
mov
ds
cmp
xchg
insb
sub
pop
jge
adc
xchg
pop
aam
mov
adc
or
fisubl
fcomip
or
lock
xor
mov
outsl
ljmp
pop
mull
pop
rolb
mov
xchg
cmp
mov
bound
test
jnp
add
das
mov
sub
out
scas
lret
dec
jge
jecxz
inc
fistpll
loopne
in
mov
mov
or
inc
fs
or
sub
sub
sub
sub
test
ret
mov
cli
pop
mov
dec
mov
test
sbb
imul
out
pop
or
push
inc
xchg
clc
sbb
inc
in
mov
icebp
pop
add
popa
mov
movsb
lods
push
push
jb
adc
fdivrp
iret
icebp
add
rcrb
jno
xor
sub
xchg
jno
in
cmp
add
aaa
push
arpl
xchg
or
rcll
cmc
popa
mov
xchg
adc
xchg
mov
enter
mov
mov
jle
aaa
jo
xchg
or
adc
dec
rolb
mov
in
nop
and
jmp
insb
nop
imul
sbb
fisubrl
clc
push
push
push
repz
fdivr
rolb
and
fcmovbe
movsl
jmp
fnstenv
stos
mov
mov
and
push
movsb
shll
test
add
xchg
fidivrs
repz
stos
mov
push
jg
inc
mov
je
data16
stos
pushf
lods
movsb
dec
jecxz
xchg
jmp
out
or
and
fisubs
and
test
xchg
sbb
push
fsubrl
xchg
cltd
and
or
arpl
sbb
divl
in
xchg
mov
aas
enter
fadds
mov
es
shlb
fwait
pop
cli
imul
xchg
push
ret
sbb
cmp
loopne
addb
imul
test
mov
pop
clc
shr
stc
adc
add
pop
mov
cltd
loopne
cmp
jmp
negb
les
lea
imul
ds
fistl
mov
ret
bound
lahf
mov
jmp
std
inc
mov
mov
clc
cmpsl
je
cmpsb
sub
cmc
mov
mov
loop
mov
mov
xor
mov
pop
jp
dec
lods
ret
imul
sub
call
loop
lahf
cmp
or
dec
js
sar
xor
subl
loope
cmp
pusha
mov
dec
call
pop
aam
pop
out
rolb
pop
int3
lock
inc
roll
cwtl
out
dec
push
dec
cld
int3
out
shlb
out
mov
pop
fs
and
mov
push
inc
out
repnz
mov
mov
jg
push
loope
fldlg2
mov
cs
jns
outsb
imul
imul
push
lock
test
mov
jns
into
test
clc
or
pop
mov
dec
pop
popa
pop
push
aas
mov
cmp
inc
pop
sbb
add
jp
sub
sbb
adc
jecxz
out
push
dec
jno
pop
lret
cld
dec
xlat
mov
xchg
dec
test
xor
fdivs
enter
cmpsl
ficomps
cmp
bnd
cmpsb
mov
mov
lea
std
push
adc
xchg
pop
fdivrp
sbb
mov
push
imulb
mov
add
jecxz
sarl
push
mov
cmp
inc
sub
test
shll
cmpsb
push
insl
orb
pop
in
adc
mov
cmpb
xor
mov
pop
or
es
xlat
pop
jg
jg
mov
xorb
out
inc
jmp
mov
mov
jnp
cmp
mov
mov
push
fdivr
not
inc
sub
cli
in
decl
dec
mov
xor
adcb
pop
cmpsl
mov
test
clc
push
lcall
popa
fwait
in
aad
mov
cmp
add
cmp
inc
fcoml
add
test
add
lcall
popf
loopne
clc
movsl
push
test
sbb
mov
cwtl
jg
int3
sub
add
int3
cmp
js
sbb
insl
cwtl
jnp
and
fwait
pop
push
or
shlb
xchg
testb
mov
dec
add
fs
cmp
insl
mov
mov
xorb
mov
in
cltd
adc
pop
mov
inc
mov
in
sub
jle
loop
jne
inc
and
pop
jb
int3
and
pop
js
add
xor
lods
int3
cmp
mov
adc
lahf
cmp
mov
mov
jge
test
jmp
xchg
pop
xchg
rcrb
cmpb
call
jmp
xchg
pusha
xor
push
stos
and
cmp
add
ljmp
mov
cmp
xor
pop
adc
stos
faddp
dec
ljmp
push
xor
dec
insb
add
cmp
sub
pop
mov
and
daa
sbb
jle
inc
pusha
rorl
and
mov
mov
int3
dec
loopne
out
icebp
mov
jne
test
mov
inc
icebp
decl
mov
xor
push
mov
scas
sbb
loopne
dec
lret
test
in
aaa
rcrl
loopne
es
sbb
hlt
pop
push
add
stos
push
sub
movsl
push
pop
enter
clc
adc
adc
sbb
mulb
push
adc
mov
stc
mov
push
pop
mov
xchg
decl
add
adc
xor
call
push
pushf
pop
inc
cld
in
mov
data16
push
outsl
adc
push
insb
add
fisubrl
mov
in
adc
dec
in
and
cmp
or
ret
aam
int3
jg
xchg
mov
mov
and
cmp
lcall
aaa
add
andl
adc
jb
pop
mov
stos
test
pmulhuw
inc
aas
fmul
clc
mov
js
jmp
add
push
dec
push
pop
sarl
pop
push
mov
jns
or
pop
cmc
jns
xor
add
and
aam
sbb
mov
add
dec
adc
mov
sbb
mov
mov
xchg
cmpsl
or
dec
ret
ret
shll
repz
dec
push
fistpll
jb
sbb
or
sub
arpl
adc
mov
or
add
dec
push
jl
ja
or
jnp
add
pop
aam
test
jg
xchg
mov
fistpl
mov
push
sbb
or
das
jle
hlt
cmp
jg
or
in
cmp
inc
icebp
push
xor
notb
ficoms
js
xor
cmp
cmp
fcmovnbe
push
inc
pop
ds
cli
das
js
mov
mov
js
cmpsb
jmp
and
pop
cmp
cmp
ss
shrb
scas
mov
push
sti
test
call
out
pop
int3
pop
addb
add
bound
add
enter
pop
xor
jge
in
or
sub
sub
cmp
js
cmc
leave
push
stos
mul
iret
xchg
pushf
jecxz
lcall
dec
sbb
mov
aam
and
xchg
dec
add
xchg
lret
sub
add
loop
cmovg
sti
or
dec
pop
mov
pop
push
out
mov
fsubrs
fwait
lahf
lock
push
roll
mov
out
lods
inc
sub
mov
mov
inc
imul
ss
jne
out
adc
inc
mov
inc
mov
or
fst
leave
loopne
pop
xor
pop
sbb
mov
push
adc
lods
into
xchg
mov
in
or
fistpll
icebp
gs
mov
nop
test
rorb
cmp
pushf
loopne
setg
inc
mov
js
je
inc
aad
mov
rcrl
outsl
repz
clc
mov
sub
inc
inc
or
add
jg
lcall
xor
sbb
aaa
cmpsl
adc
test
xchg
and
rorb
lcall
cli
sub
cmc
fimull
mov
outsl
aad
or
mov
xchg
adc
rep
jno
push
jl
sub
mov
mov
out
gs
adc
les
adcb
test
mov
incl
sub
push
cwtl
add
lret
pop
ss
shll
mov
push
stos
xchg
sbb
mov
xchg
sbb
imull
mov
push
pop
icebp
popf
in
pop
mov
dec
int3
mov
fisttps
add
mov
inc
sbb
test
ret
jl
sbbl
xchg
jp
ds
out
push
push
push
dec
insl
mov
jns
dec
stos
in
xchg
subb
dec
lods
mov
cld
ret
mov
xor
das
call
push
pop
jae
add
sub
adc
das
push
xor
js
call
arpl
adc
sbb
mov
sub
mov
sarb
roll
das
dec
sub
inc
iret
mov
lods
inc
cmc
or
mov
rcrl
adcb
mov
ds
cld
inc
rcrl
pop
fwait
pop
shl
nop
pop
and
or
pusha
inc
xor
inc
sub
cmp
sbb
loopne
pop
adc
cmp
icebp
xor
pusha
sti
adc
imul
adc
cmp
insl
pop
inc
fildl
pop
jne
loop
push
cltd
rclb
and
push
mov
insb
or
in
pushf
into
jbe
outsb
jge
std
jg
push
xor
dec
xor
cld
fwait
inc
cmpsb
push
sbb
xchg
fs
cmp
decl
cmp
pop
or
mov
or
aas
pusha
or
jno
sub
test
fidivl
repz
stos
test
out
mov
ljmp
push
lcall
jo
hlt
test
adc
xorl
cmp
push
pop
fidivs
movsl
pop
lock
mov
xor
adc
data16
in
sbb
jns
or
gs
rorl
les
or
shlb
rclb
test
pop
aas
add
jmp
lea
or
xor
add
fisttps
pop
mov
aam
mov
and
xchg
les
sbb
sub
fdivr
cmp
xor
adc
mov
push
add
repnz
add
rclb
aaa
push
aad
ficoml
inc
pushf
xor
sbb
ljmp
movsb
icebp
clc
xor
xlat
imul
cld
out
mov
movsb
mov
outsl
or
cmp
loop
loopne
push
lret
pop
add
mov
pop
xchg
mov
inc
and
xor
xchg
push
out
test
fadds
scas
stc
hlt
mov
xchg
clc
push
jecxz
fmulp
das
xlat
mov
add
lds
mov
les
jnp
pop
dec
jg
push
push
inc
ret
push
inc
je
add
mov
in
cmp
cmc
daa
fdivrp
sub
pop
pop
mov
aaa
xchg
inc
loop
sbb
ficompl
mov
cli
cltd
inc
mov
test
je
fsubr
in
or
arpl
int3
in
mov
adcl
mov
icebp
add
lea
div
xor
shlb
les
addl
xlat
jmp
push
xor
add
ja
add
cs
hlt
out
pop
mov
pop
inc
push
js
inc
xlat
filds
ret
out
cli
nop
or
shrl
mov
or
mov
jg
cld
dec
ror
or
push
jp
mov
jo
out
cmp
stos
ss
mov
sub
sbb
push
cmpsb
inc
push
sbb
imul
pop
xchg
push
inc
sarb
jo
mov
adc
mov
cmp
mov
xchg
mov
lock
hlt
cli
faddl
sub
adc
cmp
dec
lock
pop
pop
andl
popf
lcall
add
jne
je
enter
aam
scas
fisttpl
dec
call
outsb
dec
sub
lock
adc
adc
insl
bound
mov
push
mov
data16
out
lea
mov
mov
sbb
pusha
lods
push
sbb
pop
jb
sbb
xor
subb
xor
pop
mov
fcomps
mov
mov
fsubl
adc
adc
pop
roll
push
sub
sbb
xchg
insb
xor
xchg
ret
sub
xchg
adc
lock
shl
cwtl
add
push
add
add
sub
sahf
outsb
mov
mov
jp
push
push
ret
push
outsl
mov
das
mov
sbb
add
pop
mov
cmc
test
lcall
mov
frstor
xor
mov
cli
push
pop
aam
insl
pop
fdivrs
and
dec
mov
dec
shl
fcompl
jb
stos
mov
jecxz
aam
aas
fdivrs
xchg
jbe
adc
fiadds
enter
push
loope
dec
testl
call
push
sarl
jmp
shlb
xor
add
push
mov
and
loop
in
icebp
dec
add
sub
lds
add
jge
sub
jb
mov
aam
mov
aam
push
push
jo
ss
test
mov
sbb
arpl
fwait
xor
outsb
cmp
sbb
mov
adc
lcall
xchg
sub
cli
popf
dec
pushf
pop
fmuls
pop
stos
push
and
imul
out
fsubrl
ret
push
inc
mov
inc
rcl
mov
or
push
jg
lds
scas
dec
sbb
icebp
ljmp
or
sub
repnz
lods
aam
fbld
jp
add
test
pop
enter
sbb
mov
add
les
test
jl
mov
out
sub
push
fcomip
or
jle
mov
cs
jp
incl
jno
daa
icebp
push
popa
sub
pop
call
mulb
mov
cmp
pop
mov
jl
in
insb
fsubr
lahf
or
push
xchg
sub
lods
fdivs
mov
and
jp
pop
sub
adc
add
mov
xchg
dec
xchg
nop
jno
lret
in
adc
cmp
jbe
lret
test
sub
loop
mov
test
rorl
mov
loop
jmp
test
mov
or
decl
les
xchg
and
stos
out
in
lcall
cmc
inc
inc
shr
stos
mov
aas
into
jle
lds
rclb
fs
push
xor
aas
push
aas
clc
xor
aas
cmpsb
scas
xorl
call
bound
lcall
int
cmp
pop
jb
nop
add
and
dec
aaa
push
lea
test
sub
popa
inc
cmp
popa
pop
mov
clc
stc
loope
loop
orb
inc
bound
xor
mov
push
pushf
push
fwait
cltd
sar
add
pop
fidivl
jle
pop
mov
aam
jne
cli
aad
sahf
adc
test
icebp
add
cmp
outsb
mov
mov
mov
cmp
xor
pop
rorb
lods
cmc
dec
and
stos
adc
sti
rclb
or
cltd
orb
lods
mov
cwtl
aaa
iret
xchg
push
cld
ret
sbbb
push
push
adc
push
pusha
scas
icebp
inc
int3
push
cmp
rcll
inc
or
xor
mov
inc
rorl
pop
ja
jb
aaa
daa
out
adc
add
jle
cmc
leave
jp
push
in
stc
push
aam
popa
cltd
cltd
lock
lcall
std
sbb
cmp
dec
scas
nop
loopne
adc
and
jl
adc
xor
test
es
adc
cmp
jl
rorb
push
inc
sub
rol
ss
in
push
push
hlt
repnz
scas
out
subb
jnp
mov
ja
add
inc
or
pop
and
ljmp
nop
sbb
xor
sub
or
mov
or
jbe
push
dec
jno
or
insb
pop
and
add
push
sbb
scas
lea
bound
scas
int3
or
filds
sbb
movsb
and
nop
mov
cmp
xchg
jo
lea
mov
lret
daa
das
cmpsl
aad
lds
add
dec
out
mov
sub
lock
out
xchg
add
ja
dec
sbb
into
inc
adc
lock
or
cmp
in
dec
mov
sub
jae
adc
and
fwait
jg,pt
push
push
jno
mov
pop
test
aaa
sbb
test
pop
inc
jae
add
or
lcall
stos
addl
shll
mov
xor
test
dec
test
add
and
sbb
aaa
je
and
movsl
outsb
mov
adc
or
xchg
mov
xor
dec
imul
enter
fs
adc
ret
and
push
sub
or
loopne
add
dec
mov
pop
cld
aam
shll
xor
push
cwtl
mov
push
or
inc
push
aad
outsb
sbb
jbe
push
pop
xlat
jne
jg
fisubrs
adc
in
or
lods
mov
es
inc
fildl
or
pop
ja
dec
and
inc
inc
in
iret
xlat
and
add
icebp
pop
mov
stc
test
dec
hlt
adc
jnp
add
sarb
pop
outsb
loop
sbb
aaa
jne
andb
mov
mov
nop
mov
inc
js
push
lret
mov
mov
nop
mov
sub
mov
ljmp
inc
push
ljmp
xor
fmul
pop
rclb
pop
mov
fdiv
sahf
and
in
fsubs
scas
lock
rolb
adc
ss
dec
popa
pop
push
lret
les
mov
into
or
mov
lcall
push
jo
outsl
dec
inc
fistl
int3
and
inc
sbb
dec
mov
push
mov
and
call
sbb
lods
std
adc
push
pop
cmp
jb
mov
popa
inc
mov
xchg
roll
cmp
cmc
lds
mov
or
pop
jge
or
xchg
ja
and
inc
mov
iret
xor
test
fisttpll
rclb
xor
loope
mov
fsubp
scas
outsl
gs
and
lods
xor
or
cs
data16
sbb
add
push
mov
fs
call
dec
push
cltd
shl
sahf
in
mov
and
xor
add
hlt
fbstp
daa
cmp
and
mov
loopne
popa
movsb
sbb
js
clc
sbb
mov
lret
mov
loope
arpl
cmpsb
testb
fisubl
sarb
sbb
sub
jg
push
movhps
push
int3
sbb
cmp
pop
je
cwtl
ljmp
push
inc
and
nop
cwtl
popa
ja
dec
cmpsb
add
loop
xor
jle
mov
dec
adc
out
xchg
dec
adc
mov
lock
ror
lahf
and
inc
push
std
mov
imul
dec
les
inc
insb
das
xor
push
push
xor
sbb
inc
add
loopne
pop
lret
mov
mov
dec
inc
jns
rol
push
xchg
imul
insl
movb
push
or
hlt
jle
sbb
pusha
mov
loope
in
push
js
ljmp
push
cmp
push
mov
push
sub
loop
aaa
jg
add
in
xor
dec
dec
xchg
pop
adc
or
outsl
mov
mov
leave
hlt
or
aam
outsb
jbe
or
mov
js
mov
cld
lahf
fucomp
or
cmp
jno
sub
adc
sub
mov
jbe
mov
das
or
add
push
pop
push
out
aad
sahf
sbb
pop
icebp
jp
jle
add
stos
xlat
les
mov
inc
and
mov
das
inc
xor
push
jae
mov
xor
into
sahf
and
push
out
sub
rcll
pusha
sub
and
aaa
xchg
jge
jge
cli
xchg
adc
es
lds
outsb
frstor
loopne
jp
outsb
rclb
pop
scas
or
xor
inc
mov
sar
mov
add
cmc
cmp
and
xor
mov
imul
jae
pusha
daa
out
jb
sarb
sbb
ljmp
lcall
or
movsb
push
pop
inc
cmp
jp
push
pop
jae
cld
sub
add
dec
pop
push
es
clc
das
clc
mov
aas
lock
cmp
or
aad
popf
sub
fwait
adc
inc
lcall
cli
or
repnz
add
jmp
imul
sbb
and
popa
mov
outsl
push
hlt
sahf
lock
xchg
roll
xchg
jmp
fcomps
cmp
mov
sbb
push
mov
mov
mov
lds
or
lock
dec
outsb
inc
cmp
lock
gs
adc
stos
aad
daa
adc
mov
jb
inc
adc
pop
sub
xchg
test
icebp
add
push
adc
dec
shrl
lret
mov
out
fwait
outsb
adc
push
and
xchg
faddl
or
inc
add
xor
pop
movb
pop
mov
add
add
test
jno
push
or
lcall
adc
into
icebp
adc
pop
dec
push
jecxz
mov
movb
xchg
mov
and
inc
sti
jle
sbb
xorb
ljmp
mov
sar
sti
test
bound
cld
xchg
jbe
mov
jmp
scas
mov
add
mov
clc
sub
add
inc
push
pop
push
add
test
sbb
shrb
sahf
lcall
fisubrs
and
cmp
mov
pop
and
mov
pop
sub
sbb
bound
or
adc
test
pop
dec
xchg
std
movl
xor
fisubl
dec
cmp
inc
ret
sbbl
adc
push
aam
xor
xchg
mov
sub
or
test
aad
movsl
pop
fmuls
or
scas
mov
ret
cmpsb
xor
push
mov
dec
push
orl
cld
lock
jge
or
ret
jbe
xor
leave
or
loopne
into
sub
pusha
dec
xor
shl
ret
jbe
inc
pop
sub
sub
int3
pop
or
push
movsb
dec
ljmp
sbb
incl
add
pop
je
sbb
mov
sbb
add
aaa
dec
and
inc
shlb
sbb
lds
or
aaa
test
xchg
sub
inc
mov
bound
cmp
outsl
jle
xor
xchg
subb
push
inc
pop
movsb
mov
shrl
test
dec
sbb
push
mov
je
adc
jno
sub
mov
fiaddl
cmpsb
ds
lahf
xlat
jb
lods
cli
jp
clc
xchg
js
subl
pop
dec
filds
jne
sbb
out
jge
clc
mov
aam
adc
js
sub
frstor
hlt
loope
stos
fidivl
hlt
adc
pop
rcrb
je
or
add
cs
std
lcall
fs
test
add
sub
jbe
xor
fistps
cmp
bound
dec
insl
sahf
aad
mov
lock
push
cmp
cmp
jae
xchg
or
in
cmpsb
mov
push
aam
das
fsubrs
jmp
jo
lret
sub
out
nop
cwtl
and
aaa
andl
jbe
ljmp
mov
fldt
cltd
push
inc
jnp
int
mov
jl
adc
mov
jle
cmpsl
cmpsb
xor
mov
xchg
inc
adc
int3
sbb
repz
fidivrl
jmp
lock
push
incl
jp
push
in
mov
mov
and
fmull
sbb
lock
mov
outsl
out
and
in
mov
cmpsl
lea
add
pusha
mov
je
mov
sarb
mov
orb
xorb
pop
icebp
iret
pop
adc
sbb
cwtl
mov
push
pop
mov
daa
andb
data16
sub
sbb
shlb
or
sti
pop
xchg
mov
test
sub
jmp
mov
sub
xor
mov
pop
sti
xchg
and
jp
dec
loopne
push
fdivrs
add
fbstp
lcall
sti
mov
xchg
or
mov
test
shlb
adc
pop
jmp
shr
aad
fwait
pop
in
mov
addl
xor
push
iret
adc
and
mov
and
es
movsb
icebp
xchg
inc
push
cmp
or
mov
sti
push
cmp
jbe
sahf
add
push
out
xor
cmp
adc
pop
pop
pop
fdivs
repnz
sub
jp
or
jo
jnp
fidivrs
and
out
lahf
das
pop
loopne
mov
loop
gs
xchg
je
fnstsw
sbb
call
cmp
sub
es
lcall
bound
lret
inc
xchg
adc
inc
fstps
push
pop
push
and
xor
push
mov
out
and
lock
push
cld
push
test
or
add
sub
mov
out
stos
pusha
std
push
or
cmp
cmp
xchg
adc
dec
jg
mov
jno
adc
sbb
pop
or
pop
das
adc
pop
jb
lods
pusha
add
xchg
jnp
les
cmp
mov
add
or
cmpl
cli
clc
in
pop
or
pop
sar
inc
or
setnp
mov
add
lret
jp
and
adc
testl
add
cmc
dec
ljmp
and
dec
pop
sub
inc
pop
push
push
out
inc
push
ja
cmp
outsl
xor
test
stos
pop
lds
or
loopne
imul
inc
push
lcall
rorb
ljmp
jne
orl
mov
jg
bound
inc
sbb
mov
push
sub
and
ror
dec
loope
add
cmpsb
loop
loopne
cmc
cmp
push
xchg
test
mov
outsl
add
js
push
jne
lret
mov
push
js
les
push
stos
fiadds
sub
and
mov
adc
incl
sbb
cmpsb
movsb
mov
xchg
sbb
stos
dec
das
scas
in
xchg
mov
mov
sbb
fxch
and
les
scas
cmc
aad
pop
fistpll
jo
fsubs
movsb
fstpt
pop
jmp
nop
add
in
sub
push
push
idivb
call
inc
hlt
push
push
lea
sbb
push
pushl
push
push
bound
fdivr
hlt
push
call
leave
ret
iret
jbe
fidivrl
addl
lods
lock
push
jae
out
mov
jbe
add
sti
mov
and
insb
cmp
cld
push
dec
inc
call
fstpt
push
arpl
push
in
add
and
add
xor
push
pop
mov
dec
jno
jp
outsb
outsb
mov
add
xchg
xchg
in
mov
iret
pusha
lcall
sbbb
xor
mov
lods
clc
mov
push
pusha
ja
adc
or
lcall
sub
in
pop
jmp
enter
push
insb
inc
in
push
inc
cmp
push
fadds
sbb
lods
adc
pop
dec
push
or
sub
inc
repz
repz
mov
dec
repz
push
movsb
subb
push
push
inc
add
ds
add
repz
inc
add
icebp
mov
mov
inc
clc
enter
hlt
jo
push
or
xor
dec
dec
decl
out
js
js
outsb
jl
push
aaa
dec
mov
es
lock
rorb
rcl
js,pn
nop
push
jno
inc
sub
inc
cwtl
add
mov
cld
push
jb
inc
rclb
jg
fidivs
xor
js
shlb
outsb
notb
inc
push
dec
ja
icebp
inc
addr16
mov
std
insl
jbe
jne
insl
xlat
jns
test
push
pop
outsl
inc
out
inc
lea
cwtl
jge
bound
or
in
adc
push
std
dec
andl
jno
sbb
loopne
cmpl
data16
adc
push
push
jmp
inc
out
sahf
push
loop
ret
pop
sbb
push
movsl
xor
jno
out
lock
pushf
push
mov
push
movsl
lcall
add
push
pop
pop
or
xor
jbe,pt
sti
pop
xchg
je
scas
sbb
jbe
aaa
call
push
enter
or
shll
and
mov
hlt
push
push
push
push
xor
sbb
sbb
dec
cmp
negl
cld
and
cmp
add
imul
cli
mov
jbe
xor
mov
inc
inc
push
paddb
incl
dec
mov
adc
dec
sbb
out
subl
sub
enter
lcall
imul
xor
dec
dec
dec
push
inc
insb
xor
pop
push
and
bound
out
xor
add
add
jne
mov
dec
push
jne
push
push
pop
push
xchg
pop
jbe
inc
dec
loop
out
movsl
cli
adc
pushf
cmp
mov
stos
imul
inc
and
lock
dec
mov
into
sub
adc
insl
arpl
adc
std
sbb
jmp
pop
xor
xor
cmc
inc
jle
ja
and
cmp
push
faddl
hlt
pop
push
int
pushf
jmp
pop
xor
dec
xor
adc
ss
sub
cmp
out
aaa
aad
loopne
and
out
push
movzwl
sub
mov
andl
mov
jnp
push
loope
mov
pop
add
inc
add
dec
scas
out
add
inc
rcll
mov
or
rolb
cmp
aam
fs
ss
dec
pop
or
ret
dec
xor
dec
pop
inc
xor
mov
dec
aaa
pop
dec
adc
xor
loopne
sub
jg
roll
wbinvd
js
xor
xchg
repnz
pop
addr16
and
jno
andl
sub
cld
cmp
inc
and
outsb
adc
xor
outsb
mov
js
ja
mov
dec
push
push
mov
dec
adc
sub
pop
std
or
dec
pop
push
jo
add
ret
and
scas
in
test
push
pop
sub
inc
cld
loopne
and
add
dec
aaa
xor
dec
inc
add
xchg
sbb
push
cmp
xchg
inc
sub
in
pop
negl
das
mov
xor
jno
fcos
and
push
push
mov
sub
adc
fdivrs
adc
or
jg
xchg
mov
sbb
pop
sub
out
inc
jns
stos
ficomps
addr16
adc
inc
jae
adc
adc
xchg
inc
adc
inc
add
jmp
push
sbb
mov
sub
inc
pop
jmp
pusha
and
ds
adc
int
push
cld
mov
add
ds
outsl
jo
cli
add
push
and
sbb
pop
mov
lahf
sub
rolb
addb
pop
clc
cmc
jbe
cmp
dec
movsb
imul
xlat
lds
out
shll
clc
xchg
adc
sub
sbb
pop
inc
mov
adc
shl
xor
loopne
add
or
fs
or
mov
fimuls
outsb
jno
arpl
fdivrl
ja
mov
add
mov
inc
adc
insb
dec
push
rcrl
mov
sub
push
je
fs
xor
fwait
pop
std
pop
push
push
xor
push
cmp
push
je
int
xlat
adc
add
add
sub
outsl
xor
push
daa
pop
cmp
sahf
jo
mov
push
mov
or
insb
push
bound
or
inc
jle
in
xorl
popa
push
movsb
add
mov
dec
fsubl
jge
mov
pop
leave
ret
addr16
test
adc
cmp
ficoml
ds
sub
cmp
mov
inc
cmp
inc
jbe
dec
es
mov
enter
dec
out
int3
repz
fcoms
mov
je
ja
jecxz
flds
inc
jno
dec
mov
fisubrs
fcomp
mov
add
cli
dec
cli
dec
dec
fs
cmp
neg
xorl
add
push
mov
mulb
jo
inc
push
inc
add
mov
dec
push
inc
outsb
sbb
std
push
jae
pop
and
push
mov
xlat
add
loopne
push
neg
imul
sbb
je
sbb
dec
test
popa
mov
je
push
aam
push
ja
addr16
push
outsb
mov
popa
mov
push
imul
cmp
sarb
inc
lret
xor
sub
inc
mov
mov
gs
or
nop
adc
pusha
addr16
fnstenv
adc
in
sub
lock
inc
mov
sbb
adc
jle
add
js
mov
out
mov
sahf
xor
inc
push
jbe
mov
rcl
sbbl
pop
adc
jmp
xor
sbb
scas
loopne
movsl
inc
sub
inc
dec
push
push
or
inc
shr
push
lods
fsubrs
imul
js
hlt
out
push
add
ror
les
fsub
push
outsl
mov
jg
test
push
push
mov
dec
inc
add
inc
mov
outsl
js
subl
cmp
je
icebp
in
add
xor
inc
xor
outsb
push
jg
repz
popa
js
jmp
add
sub
inc
dec
mov
jae
mov
jnp
adc
loopne
das
js
dec
push
add
clc
pop
enter
jb
mov
lock
in
or
inc
clc
adc
popa
inc
push
mov
imull
jl
fucomi
push
inc
xor
popa
dec
add
sub
bound
cld
mov
jo
sub
shrb
push
dec
mov
push
mov
mov
push
xor
push
insb
mov
out
inc
jne
push
aas
push
test
add
pop
pop
add
jp
mov
sub
ret
push
lock
lret
adc
ljmp
inc
cmp
dec
or
scas
pop
xchg
mov
je
sub
and
in
push
and
xor
fmuls
dec
adc
sbb
cli
mov
fwait
and
add
inc
scas
ret
bound
push
shlb
push
xor
loopne
push
xchg
lods
negl
dec
push
imul
les
add
pop
push
push
sahf
dec
mov
and
pop
clc
hlt
push
pop
inc
mov
inc
cmp
fbld
xchg
repnz
jg
xchg
or
add
jecxz
iret
or
jne
pop
mov
push
jo
dec
sbb
outsl
fs
nop
push
das
or
jbe
cld
test
fdiv
js
gs
test
sub
mov
in
jl
jbe
enter
dec
arpl
bound
push
cmp
inc
sub
dec
daa
push
arpl
inc
dec
sub
xchg
mov
mov
ja
jg
sbb
or
insl
push
pop
push
test
push
jno
inc
rolb
xchg
gs
inc
xor
test
dec
js
add
xor
sub
inc
inc
jae
jecxz
sub
pop
cmp
in
stos
adc
sbb
inc
dec
imul
push
mov
ja
push
cwtl
adc
dec
bound
mov
add
pusha
jno
aam
push
stc
dec
fisttpl
fs
mov
add
mov
xor
or
or
pop
jae
loope
xorb
and
inc
jne
in
adc
or
dec
testb
xchg
push
xchg
out
aaa
cld
jbe
add
enter
inc
push
insb
sub
mov
sbb
les
pusha
insb
ret
fwait
fwait
jp
adc
fs
push
add
sub
sbb
js
loop
js
jno
fidivrl
pop
xor
stos
pop
or
xor
sub
and
stos
cmp
adc
mov
jnp
add
jecxz
push
jae
and
add
outsl
incb
clc
add
or
mov
cmpsl
in
xchg
decb
aam
popa
push
fs
aad
cmp
sahf
add
imul
ljmp
and
pop
aas
jb
gs
mov
sbbb
xchg
add
add
push
pop
cld
push
je
xor
aam
push
ljmp
roll
sti
push
iret
sbb
pushl
fsubl
rolb
pop
sbb
add
sub
pushl
add
pop
fs
jns
ret
mov
imul
xlat
push
sbb
push
cmp
add
int
jae
adc
add
cld
lcall
push
ja
insl
push
jb
push
jmp
into
mov
and
mov
imul
xor
or
movl
xchg
and
mov
mov
jae
sub
inc
aaa
outsl
sti
jne
inc
jno
or
push
xchg
lds
imul
gs
xor
sbbl
add
outsl
cld
xor
push
mov
and
adcb
push
add
and
popa
test
test
in
subb
jae
adc
int
xor
popa
push
dec
pushf
shll
jl
inc
inc
xor
dec
push
mov
sbb
dec
mov
dec
sbb
adc
std
jmp
pop
mov
dec
insl
jge
add
mov
loopne
push
fildl
sbb
mov
je
add
or
repnz
or
push
adc
and
test
sub
in
pop
js
cmp
cld
xchg
and
sbb
and
sbb
jp
out
daa
lock
loopne
xlat
xchg
gs
adc
xorl
jecxz
in
push
dec
outsb
push
xor
inc
jmp
cmp
sub
loopne
mov
pop
hlt
clc
jno
sarl
xor
in
lahf
push
cmpb
inc
jb
add
pop
test
push
or
dec
loope
pop
stos
in
add
outsl
dec
sbb
pop
mov
push
addl
testb
negl
imul
shl
xor
out
sub
push
pop
and
or
adc
fdivp
les
jle
jmp
js
push
adc
cld
or
repz
dec
jne
stos
daa
sub
push
mov
add
sub
or
sub
pop
adcl
jle
hlt
les
iret
dec
dec
mov
pop
cmp
dec
xor
lret
call
pop
stc
or
loopne
ret
dec
mov
adc
and
inc
dec
js
js
mov
aad
inc
outsb
mov
sub
stos
adcb
stos
lods
mov
clc
test
sbb
xor
loop
std
popl
xor
cli
dec
or
arpl
clc
out
test
dec
jno
arpl
mov
lea
push
push
and
pop
rclb
push
inc
mov
xchg
mov
jge
inc
fs
jg
mov
push
inc
push
add
orb
in
lret
mov
sbb
mov
mov
pop
mov
adc
out
sbb
rolb
mov
sub
jmp
negl
enter
pop
jmp
iret
fstpt
test
pop
add
dec
pop
shlb
in
imul
add
add
repnz
fnsave
add
push
jg
lcall
add
jnp
cld
out
jg
test
add
lret
add
pop
cwtl
mov
fdivr
pop
sub
add
movsb
add
stc
insl
ljmp
mov
scas
jmp
inc
add
mov
cmp
add
orl
testb
mov
sub
subb
xchg
add
lods
add
and
xor
add
cs
int
add
outsl
in
cmc
or
rcrb
add
rorl
nop
mov
out
and
jo,pn
out
lds
stos
fldl
sub
imul
mov
jge
add
cmp
in
je
mov
clc
xorl
subb
push
push
jo
add
push
add
bound
mov
push
push
mov
mov
cmp
call
cmpsb
mov
sub
and
call
adc
adc
pop
push
fsin
sbb
aam
pop
cmp
into
and
xor
addr16
fdiv
pop
imul
xor
mov
adc
jae
mov
shlb
push
mov
mov
xchg
cmpsl
int3
pop
cmpsl
mov
add
aam
sbb
lods
imul
test
lret
bound
sbb
sbb
mov
jo
add
cltd
or
pop
cmp
lahf
iret
roll
mov
inc
gs
roll
faddl
inc
dec
pop
mov
xchg
ret
push
add
push
xor
sub
cltd
test
sub
fadd
mov
mov
ret
sub
fwait
add
out
ja
add
xchg
sbb
add
addl
lret
mov
ficompl
or
jns
lahf
jmp
pusha
add
loope
loopne
test
cmp
out
aaa
dec
mov
jae
or
xchg
add
sarb
data16
stos
pop
stos
push
rorl
add
cmp
jle
mov
andl
cld
add
sub
sub
cmp
inc
repz
cs
aad
incb
sbb
or
pop
fstpl
mov
xchg
enter
es
sbb
repz
es
test
out
or
cmp
xchg
or
andl
mov
insb
js
pop
dec
mov
add
push
adc
out
test
cmp
adc
cmpsl
inc
xor
cwtl
aam
cmpb
push
inc
push
push
add
cmp
pushl
test
mov
dec
lock
cmc
pushf
sti
je
adc
xchg
sbb
cmp
fdivrl
mov
sbb
and
pusha
jns
iret
lock
aas
fmull
int
cmc
xor
adc
xor
inc
rcrb
mov
add
push
and
push
jg
add
lcall
andb
xchg
fistl
dec
lcall
mov
pop
fiadds
sub
mov
iret
das
sarb
fs
dec
inc
and
int
out
pop
popa
mov
inc
dec
mov
out
push
mul
pushf
jge
cmp
call
sbb
mov
cmpsb
outsl
jbe
and
xchg
mov
push
mov
scas
testb
call
sub
clc
sub
js
arpl
popf
shrl
adc
cmc
out
add
add
add
xchg
sti
mov
pop
bound
nop
xchg
push
xor
jne
imul
mov
mov
les
cltd
pop
mov
sbb
pop
dec
push
cmpsl
hlt
subb
mov
cmpsb
add
cld
repnz
add
xlat
icebp
loopne
shl
out
nop
mov
and
in
mov
sbb
jle
imul
cli
mov
clc
pop
mov
push
push
mov
int3
lret
xor
pop
ja
cs
addb
cwtl
jo
pop
ds
jmp
add
out
mov
push
lahf
mov
fiaddl
sub
ficoms
xchg
gs
movb
lock
pop
mov
addl
push
outsl
push
rcl
jo
mov
out
sbb
js
out
neg
cld
stos
mov
imul
clc
push
cltd
mov
cwtl
sbb
cmpsb
push
and
adc
clc
mov
xchg
add
lea
out
cs
cli
fsubl
sbb
and
inc
js
hlt
dec
aas
lods
rcl
pop
mov
pop
das
fbstp
or
push
mov
add
popf
adc
cmp
dec
cmp
es
cmp
xchg
outsb
mov
xor
xor
push
mov
and
mov
adc
or
gs
test
shll
mov
add
sub
inc
dec
rorl
mov
es
scas
pop
xchg
in
inc
pop
lock
rorb
adc
or
sbb
adc
add
aad
mov
jb
pop
scas
mov
insb
aas
fsubrl
mov
call
push
ret
daa
add
aad
cmp
xor
call
add
mov
cmp
jo
xor
sbb
lods
lods
cmpl
ljmp
pop
cmpsb
inc
mov
add
rclb
sub
nop
xor
xor
aam
mov
push
jl
xchg
iret
icebp
jbe
jle
outsl
adc
mov
pop
push
les
xchg
stos
outsb
pop
pop
pushl
ret
push
pop
aad
das
pusha
es
add
cmp
mov
stos
inc
fstps
cmp
rcrl
and
cli
incb
aad
inc
mov
rolb
lcall
loope
add
and
outsb
and
loop
push
pop
ds
jbe
lock
pop
mov
mov
inc
icebp
or
fwait
push
push
push
mov
push
ja
push
cli
outsb
inc
push
cmc
ds
js
sbb
xor
movl
mov
int3
sbb
pop
adcb
push
cmp
out
ja
push
incl
adc
dec
fwait
xor
clc
sub
mov
shrl
or
loope
cli
dec
pop
mov
add
xchg
and
out
cmp
pop
mov
hlt
add
movsb
xchg
jb
cld
xchg
lods
addb
rorb
mov
push
sbb
cmpsl
or
ljmp
mov
out
inc
loope
or
jae
call
test
or
pop
inc
jae
push
testb
xchg
push
adc
jb
xor
fidivl
rolb
and
je
mov
mov
movsl
add
and
push
data16
in
sar
jl
nop
inc
mov
aaa
lcall
add
jle
sbb
iret
mov
cwtl
jns
push
push
pop
sbb
add
int
jp
mov
enter
fisubrs
pop
push
mov
mov
xchg
pop
inc
movsl
in
add
js
sbbl
js
rcrb
lods
lcall
movsl
push
imul
adc
and
push
in
repnz
cmp
xor
push
pushf
dec
jnp
push
insb
popa
aam
mov
incl
push
pop
and
loopne
sahf
sub
sub
xchg
ret
pop
sbb
lret
add
adc
add
addr16
mov
jb
adc
or
add
mov
push
sbb
call
adc
inc
rcrl
in
daa
push
repnz
or
dec
mov
mov
das
jmp
rol
pusha
mov
imul
cmpsb
je
push
mov
mov
dec
clc
hlt
inc
cmpsb
sahf
add
sbbb
jbe
xor
mov
cmpsb
add
imul
xchg
nop
icebp
fidivl
and
cmp
in
mov
pop
loop
jge
cmpsl
xchg
xor
or
sbb
fwait
lock
js
enter
pop
nop
xchg
dec
ret
adc
xorl
cmp
loop
aas
cvtps2pd
jns
sbb
pop
in
adc
push
push
add
test
and
dec
push
add
movsb
push
in
mov
or
and
ds
out
mov
and
shlw
enter
cmp
sub
inc
push
add
cmpsl
xchg
cmp
faddl
inc
xchg
cli
xchg
lret
add
in
sbb
mov
jbe
fwait
add
sbb
push
mov
out
add
mov
mov
xchg
mov
mov
idivl
ficomps
pusha
jne
mulb
insl
mov
mov
test
sahf
push
mov
call
mov
push
sbb
roll
mov
loopne
loope
adc
inc
cwtl
xchg
sahf
xchg
je
or
push
xchg
pop
stos
pop
mov
pop
fcoms
clc
xor
mov
je
and
add
sub
fdivl
fisubrs
ss
cmpsb
xchg
jg
pusha
cmpsl
mov
clc
in
stos
bound
fisubrs
inc
dec
add
add
mov
es
insb
data16
adc
call
add
mov
cmp
push
rclb
outsl
mov
shlb
call
sub
mov
movl
enter
xchg
cmp
insb
push
add
add
inc
hlt
add
into
adc
fidivrl
ss
jge
pusha
pop
nop
scas
and
leave
mov
push
in
jmp
xor
sahf
movsl
push
dec
mov
dec
sbb
lea
jp
inc
cmp
or
or
push
cli
xchg
jae
push
faddl
les
fwait
inc
test
jnp
js
xchg
jp
fsts
icebp
mov
loopne
push
std
mov
add
and
fwait
ret
pop
pusha
sub
filds
sbb
or
fsubrp
jecxz
sub
sub
adc
jle
imul
cltd
in
sbb
xchg
and
sbb
loope
mov
fmull
popa
xchg
or
imul
dec
or
lret
push
jecxz
scas
js
loope
arpl
or
data16
decl
subb
in
test
or
ret
popf
aas
dec
sbb
scas
or
inc
rcl
dec
imul
xor
mov
fnsave
or
mov
lds
pop
push
test
pop
repz
test
pop
aam
sbb
cld
jne
mov
insb
sub
inc
and
cmp
xchg
adc
jbe
sub
in
adc
or
and
out
mov
loopne
sub
insl
push
and
cmpsl
sub
addr16
rcrl
test
sub
arpl
lret
xchg
and
ss
ret
loop
aam
xchg
add
inc
xchg
mov
push
in
sub
rcll
inc
mov
cli
cmp
scas
xchg
xchg
dec
je
das
lret
test
cmp
decl
mov
loopne
mov
clc
jmp
jecxz
push
imul
or
cmp
jg
pusha
add
into
push
test
mov
xor
mov
adc
add
mov
mov
je
sbb
add
or
les
mov
call
inc
add
sub
xor
jg
loopne
and
push
jb
and
xchg
mov
add
mov
adc
fcmovnbe
lods
sbb
vprotb
enter
sbbl
fildl
add
incb
data16
out
push
cli
sub
push
pop
es
imul
cmp
push
and
or
shl
xchg
scas
cmp
inc
enter
movsb
decl
out
movsb
shl
push
mov
fmuls
shrl
fcmovnb
and
add
ret
and
call
loop
cltd
push
call
rorb
jo
call
mov
fwait
xor
adc
cmpsb
sbb
cltd
xlat
jnp
push
int3
sub
pop
ret
in
in
adc
es
mov
mov
shlb
jne
or
xchg
xchg
in
cli
cmp
addr16
mov
jmp
enter
jge
clc
inc
data16
aad
outsb
or
cltd
mov
add
xchg
pop
mov
add
ret
repz
add
push
insb
cmp
and
cmp
pop
incb
out
test
xor
inc
sbb
sub
dec
adc
mov
outsb
push
add
test
mov
mov
xor
adcl
jmp
or
out
push
jo
int3
xor
mov
icebp
scas
mov
and
std
mov
adc
mov
jge
jecxz
in
jmp
sbb
and
push
jne
data16
dec
loopne
lret
mov
fbstp
sbb
or
push
add
int
loopne
mov
sbb
dec
mov
jl
jae
dec
outsl
cli
pop
dec
dec
test
inc
inc
test
push
aas
aad
mov
hlt
dec
cmp
add
orb
xor
sbb
stos
cmpsl
enter
mov
sbb
in
es
clc
fs
mov
popf
in
shrl
mov
jle
xchg
push
push
lret
sub
mov
test
xchg
mov
mov
sub
insb
iret
cmp
pop
inc
pusha
mov
mov
jb
push
jecxz
or
sub
pop
cli
ffree
shlb
sub
mov
std
test
outsl
lahf
fldl
push
pop
mov
mov
xchg
sbb
bound
push
lds
pop
lock
xor
pushl
test
xchg
outsb
test
pop
sub
sbb
cmp
repz
xor
add
cld
push
cli
xor
add
mov
xchg
adc
mov
test
push
mov
adc
pop
iret
insb
movsb
jmp
xor
mov
xor
hlt
jg
ja
sbb
jne
sbb
push
lods
cmp
fwait
fs
loope
subb
adc
adc
jo
mov
inc
push
add
dec
adc
jle
rcrl
sbb
lock
mov
mov
clc
rol
push
xchg
lock
dec
mov
and
lock
and
push
test
rcrb
jg
outsb
cmc
call
xchg
xlat
popa
add
pop
aas
cli
sti
and
xor
cmp
add
das
gs
dec
jmp
mov
mov
repnz
fcmove
jae
enter
inc
or
hlt
xchg
pop
out
clc
xorl
pusha
pop
push
push
sub
sarb
ljmp
cmpsb
add
add
pop
cwtl
pop
negb
push
aam
loopne
out
xor
pop
dec
lea
adc
subb
sbb
mov
data16
add
prefetcht1
rorl
loopne
dec
or
clc
dec
pusha
add
cmp
aam
jl
mov
scas
out
jmp
xchg
adc
clc
lods
dec
xchg
stc
push
stc
jae
je
and
hlt
jg
mov
lret
repz
ret
xorl
or
movsb
fcom
push
loope
push
add
push
xchg
cli
insb
ljmp
data16
sub
pop
jbe
js
lret
and
cmpl
and
orb
or
aad
stos
push
sub
lret
and
out
adc
cmp
out
scas
fsubs
jp
xchg
sarb
sar
inc
in
pop
sub
mov
add
orb
callw
mov
cmpsb
in
loopne
test
push
ret
stos
ja
pushl
test
xor
je
jns
push
xchg
xor
popf
test
inc
mov
xor
mov
lea
cmpsl
xchg
add
lods
mov
fiadds
pop
mov
stos
adc
sbbb
add
popa
loopne
add
mov
into
push
rorl
adc
outsb
lret
add
add
loope
sub
add
ffreep
fwait
push
pop
mov
jo
adc
add
push
filds
shll
inc
insb
rcrb
cwtd
inc
push
ss
int
xchg
adc
and
pop
clc
or
adc
pushf
jbe
repnz
imul
push
inc
sub
sarl
sub
sbb
jp
or
mov
orb
out
mov
ror
pop
insl
and
jne
sub
insl
cmp
adcb
movsl
add
lahf
lret
mov
loopne
js
pop
sti
dec
inc
cmp
sub
jge
inc
pop
jb
or
push
mov
or
sbbl
es
mov
adc
mov
inc
loope
push
add
cs
add
or
adc
cwtl
push
lret
bound
int3
sub
xor
mov
adc
sub
jl
xchg
scas
and
mov
pop
movsl
icebp
movsb
dec
dec
sub
xor
mov
sahf
sbb
mov
lock
push
lods
popf
mov
fdivl
lock
bound
loope
shll
stos
jbe
xor
data16
adc
mov
inc
lods
mov
push
mov
daa
or
cli
pop
fsubs
xor
cli
push
sbbb
xchg
jp
js
push
shl
sub
iret
sbbb
dec
xor
xchg
testb
outsl
ja
push
mov
nop
ret
mov
add
or
testl
test
rolb
movsb
fisttpll
cmc
cmp
aaa
jl
out
xchg
mov
je
adc
push
enter
bound
test
shll
add
lods
push
std
lret
add
xor
mov
jnp
sbb
sbb
sub
sti
jecxz
lcall
sbb
js
jae
push
es
jns
enter
insl
fwait
mov
mov
fs
and
cs
or
stos
jp
push
push
lret
pop
ljmp
aad
pop
add
add
sub
pop
ret
movsb
in
sti
sti
mov
jg
mov
cmp
jp
ret
fimull
loope
int3
mov
inc
push
mov
push
inc
add
inc
inc
and
xchg
rcrb
or
rorl
cmp
enter
adc
adc
fstl
iret
xchg
popa
lret
add
movsl
stos
loop
ss
inc
inc
mov
test
mov
push
mov
add
test
add
jle
cli
jle
lcall
push
jns
add
xor
outsl
add
or
push
inc
jg
fildl
stos
cmp
add
mov
int3
push
fisttps
push
aas
das
mov
adc
xor
and
sahf
sub
add
pop
repnz
cmp
adc
jecxz,pt
and
sub
jno
mov
js
mov
pop
adc
dec
cmpsl
out
test
sbb
xor
mov
inc
roll
mov
icebp
call
js
popa
rclb
inc
add
dec
fbstp
add
add
push
ds
mov
fwait
mov
and
std
mov
lock
loopne
das
out
push
inc
flds
mov
lods
mov
jg
sbb
jp
test
add
ljmp
dec
rcll
cwtl
pop
sub
mov
pop
rorb
jge
out
pop
jo
xchg
mov
sbb
inc
mov
dec
js
or
in
fwait
int
int3
add
pop
clc
mov
inc
and
inc
inc
and
fs
dec
outsb
aad
sbbl
clc
aad
inc
mov
push
fsubrs
mov
stos
loopne
cmp
scas
leave
clc
ds
add
lods
xchg
or
jecxz
or
add
pop
push
pop
lods
sub
fnstsw
mov
mov
cs
lahf
pop
cwtl
dec
mov
jo
pop
loope
icebp
push
inc
cld
add
pop
inc
sarl
inc
es
cmp
pop
fnop
mov
add
pop
cmp
add
pusha
jno
mov
lret
cmpsb
cld
add
ror
lods
dec
mov
push
or
sbb
mov
leave
pop
popf
mov
adc
cmp
add
push
fcmovnu
arpl
std
ret
push
push
inc
push
add
out
decl
inc
std
or
push
sbb
cmp
cmpsb
js
add
movsl
jmp
int
shlb
push
jl
inc
clc
leave
mov
inc
lds
xor
adc
subb
stos
xor
sub
stos
mov
dec
dec
jb
outsl
push
decb
mov
adc
mov
xor
jl
mov
push
pop
xchg
push
dec
jl
vmovshdup
hlt
cmpsl
push
push
subl
movsb
mov
aam
fiaddl
push
shll
xor
jne
mov
mov
std
add
pop
add
cmp
mov
add
mov
dec
std
scas
ret
iret
nop
sbb
and
inc
inc
setne
cmp
and
in
inc
and
and
bound
ret
loopne
sub
jns
addl
push
inc
cmpb
scas
sub
cmpsl
out
and
and
test
xchg
cli
enter
jmp
mov
jnp
sarl
loop
ljmp
sbb
adc
jo
pop
or
sbb
mov
out
andl
dec
sysenter
inc
jo
pop
outsb
mulb
sub
lock
pop
lds
stos
ljmp
push
sbb
rcrl
movsb
mov
inc
int3
test
mov
push
shrb
push
shll
decl
out
and
dec
dec
and
xchg
jbe
or
sar
mov
lods
rorb
or
rolb
rcrl
mov
scas
lods
lret
and
inc
xchg
mov
lock
loop
or
jle
test
mull
fnstsw
loopne
push
push
aas
pop
shr
push
aam
data16
xor
loop
cmpsb
lea
xchg
cmp
idiv
outsl
test
xchg
rol
cmp
outsl
out
sar
sbb
sub
sbbb
xchg
mov
mov
js
mov
ljmp
cwtl
sbb
mov
jmp
jb
sarb
mov
mov
mov
shrb
out
cs
scas
pop
lret
dec
mov
and
add
enter
outsb
mov
sub
fwait
inc
pop
mov
dec
test
rorl
call
sahf
mov
bound
fdivs
fdivl
xor
jo
push
test
sub
mov
mov
icebp
das
rolb
les
adcl
push
fxch
or
outsl
ret
data16
loop
and
cmpsb
js
mov
mov
outsl
fs
cmp
fistpll
mov
scas
call
aam
dec
add
cmp
sub
xor
add
mov
push
jecxz
push
hlt
mov
jmp
test
pop
or
in
sub
pop
jno
insb
fisubrs
push
push
fldt
push
leave
or
dec
pop
mov
push
roll
vcvtsd2ss
dec
lret
mov
adc
add
ljmp
sti
jns
dec
adc
sbb
aad
and
sub
shlb
mov
pop
inc
repz
sbb
data16
cwtl
jb
pushf
into
xchg
stos
cs
inc
and
adc
mov
dec
rcrb
sub
scas
pop
into
sbb
sahf
inc
or
fs
jbe
mov
dec
movsl
shl
roll
loope
sbb
xchg
jno
push
test
lds
test
out
out
fistpl
add
jne
ror
outsb
add
fdivl
jmp
push
cmp
push
mov
imul
ffree
inc
pop
jmp
jns
in
add
rcrl
and
adc
mov
mov
jmp
cmp
or
negb
loop
jbe
out
mov
mov
lods
ljmp
sahf
xor
or
movsb
jo
scas
call
test
cmp
adc
rcr
int3
insl
ljmp
imul
stc
das
cli
xchg
fisubl
push
fcmove
idivb
pop
aam
jle
add
into
mov
les
stos
inc
sbb
dec
xorl
push
pop
aad
sbb
in
mov
idivl
add
stos
mov
and
adc
mov
decb
lahf
xchg
xor
xor
in
ret
jg
imul
mov
sbb
out
clc
and
lcall
std
jecxz
xor
test
add
cld
or
or
roll
iret
pop
jp
push
or
mov
orb
xor
in
test
adc
in
and
cmp
cmp
mov
jbe
mov
loop
in
jb
fucomi
xchg
sub
push
ss
sbb
pop
xchg
inc
inc
orl
dec
push
push
imul
fidivrl
inc
sub
xor
sub
adc
cli
jns
mov
or
cltd
and
adc
push
std
in
jp
cmp
insl
mov
pop
lock
jbe
iret
cmp
pop
fadds
add
mov
dec
popf
insb
orl
shrb
adc
jp
insb
cli
outsl
js
cmp
add
sbb
inc
frstpm(287
xchg
xor
lds
clc
or
ret
dec
outsb
jno
pop
sti
mov
pop
ja
inc
mov
js
bound
inc
dec
sub
jmp
sub
jo
mov
cmp
adcb
mov
out
mov
popf
dec
xor
sbbb
pop
fcomip
inc
push
dec
in
dec
lahf
arpl
cmp
das
ret
test
mov
outsw
xchg
xchg
xor
add
stos
rorl
fmull
pop
sbb
xor
xchg
cmp
aam
jle
fs
xchg
fisubrl
push
adc
out
int3
mov
lahf
push
or
dec
dec
add
xchg
dec
out
cmp
add
pop
pop
hlt
fcoms
add
ret
mov
sub
cmpb
sbb
inc
clc
or
popl
shrd
scas
shl
push
pushl
pop
subb
sub
or
inc
call
outsl
icebp
inc
dec
add
stos
repnz
and
add
push
pop
int
mov
mov
mov
mov
push
push
mov
in
int
xchg
aas
push
sub
inc
rcll
and
nop
aam
mov
imul
ja
xor
movsb
cmp
and
xchg
pop
rorl
movl
popa
pusha
pop
lea
fdivrs
insb
mov
push
sub
cmp
mov
pop
pop
mov
test
inc
mov
aaa
nop
mov
mov
pop
push
add
add
inc
in
daa
push
jno
lods
push
test
popa
add
pop
les
add
or
push
pop
test
mov
mov
or
jge
movsl
lods
sbb
lods
sbb
ret
mov
and
in
roll
or
pop
fdivr
insl
dec
mov
enter
pop
lret
enter
rorl
sub
dec
shlb
adc
popf
enter
addb
sub
mov
icebp
hlt
ljmp
add
push
fidivrl
inc
add
sbbb
push
mov
sub
sbb
cli
mov
jmp
cltd
or
push
scas
sbb
mov
xchg
cmpb
mov
mov
lret
xor
adc
add
div
add
inc
jmp
fsubr
sbb
ljmp
lea
fiaddl
mov
fcomps
and
adc
jge
pop
and
add
xor
aam
lods
sbb
incl
pop
lods
adc
cwtl
xor
mov
add
pop
jo
cmpsb
aam
daa
mov
xlat
push
fildl
addr16
adc
pop
jae
xchg
shl
hlt
mov
xchg
jl
in
mov
data16
fcom
and
pop
test
dec
cmpsb
sarb
add
sti
add
fwait
and
call
pop
lea
pop
and
adc
out
lret
mov
mov
push
sub
leave
shlb
sub
dec
jp
pop
jecxz
std
dec
ja
push
fwait
and
add
push
insb
pop
mov
or
clc
lcall
add
mov
mov
dec
mov
mov
aas
inc
mov
inc
mov
xor
pop
push
ss
xor
inc
stos
adc
xchg
mov
dec
aaa
sarl
mov
adc
mov
xorb
shll
xor
fdivp
pop
inc
jp
and
stos
mov
ljmp
sbb
test
mov
dec
push
xchg
and
jle
loope
sub
je
test
push
cmpsb
push
jle
test
sub
je
stos
add
or
or
jl
push
gs
lret
test
dec
lods
orl
insb
ret
xor
insb
inc
sub
or
test
push
lret
data16
in
fbstp
add
push
or
or
push
jp
loop
cmp
push
cwtl
or
jnp
push
ret
loopne
sti
mov
addb
add
adc
lock
lret
xor
push
xor
dec
or
xor
frstor
subb
iret
fdiv
jo
cld
cmpb
push
lret
cmp
add
mov
pusha
sbb
mov
and
mov
sbbb
insb
ljmp
mov
nop
fs
push
jge
mov
push
add
jl
ret
in
pop
inc
add
adc
cmp
shrl
out
icebp
fwait
sub
filds
das
int3
mov
popa
jge
xor
jecxz
aam
mov
mov
shr
jo
out
popa
dec
xchg
orl
sbb
mov
fwait
in
sub
mov
in
sub
add
pop
xlat
dec
jns
adc
and
add
bound
dec
lock
insb
dec
cli
push
mov
loopne,pt
clc
je
testb
inc
adc
push
cmp
ljmp
cmp
push
in
out
or
fists
sti
addr16
mov
or
out
mov
movl
sub
icebp
cmp
xchg
sbb
mov
nop
lcall
js
sti
movsl
mov
loop
and
mov
push
call
inc
jp
push
or
or
and
mov
inc
fisttpl
insl
mov
pop
push
mov
xor
pop
cld
mov
fwait
outsb
jbe
and
test
add
mov
ja
test
scas
mov
out
cmp
fwait
adc
pushf
jp
sbb
int3
sbb
lods
sbb
ss
movsb
fdivs
int
fcoms
sahf
adc
cld
sub
das
cmp
nop
inc
mov
add
pop
sbb
js
rolb
dec
repnz
test
mov
les
iret
cltd
mov
mov
add
add
repnz
jg
out
push
and
mov
jae
or
pop
insb
inc
out
aam
xor
push
rcrl
lds
es
jns
xchg
bound
ret
sbb
mov
xchg
cmove
push
ret
ljmp
or
adc
mov
push
push
jl
mov
mov
loop
cmpsb
lret
fmuls
mov
das
lock
push
les
jmp
out
popa
adc
lret
sub
dec
xchg
mov
jo
sbb
hlt
in
dec
mov
out
popa
stos
sub
sahf
xor
jno
or
fdiv
cmpsl
jle
addb
in
push
jl
xchg
cmp
push
xchg
mov
lea
push
cmpsb
adc
lock
arpl
into
in
fs
mov
pop
notb
rolb
mov
dec
xor
lret
loope
outsl
in
xlat
inc
leave
push
es
sbb
xor
sub
push
pop
test
mov
clc
pop
or
das
rorl
fsubrs
or
outsb
mov
mov
fwait
pop
loope
or
adc
lock
mov
pop
gs
dec
pop
je
stos
call
iret
push
dec
addl
sbb
adc
fiadds
fmuls
repnz
add
not
aaa
call
pop
push
sub
and
aas
push
xor
leave
mov
lock
pop
lock
nop
fwait
pop
push
and
adc
andl
inc
das
dec
dec
cld
dec
mov
pop
sbb
add
sbb
adc
sub
mov
test
pop
gs
jb
jge
enter
outsl
and
inc
pop
stos
cmpsb
cmp
das
insb
int3
dec
in
push
push
pop
add
in
inc
ret
call
push
mov
and
dec
mov
jg
test
dec
cmp
jge
jg
subb
in
pop
ret
ret
data16
orb
cmpl
add
jle
adcl
ljmp
addb
lock
sahf
cwtl
jle
subb
pusha
in
scas
adc
and
xchg
jmp
std
das
push
cmp
or
lcall
in
fidivs
xchg
les
test
or
and
adc
std
js
push
push
jp
add
xchg
inc
mov
cmp
jne
sub
shrb
inc
mov
cmp
shrb
sahf
push
jp
mov
sub
xor
sbb
sti
cwtl
mov
lahf
ja
xor
xchg
sbb
hlt
jle
pop
cwtl
mov
ljmp
outsb
dec
rcrl
jl
pusha
adc
add
out
ret
dec
xor
sbb
fisttpl
outsb
push
xlat
loop
sub
int3
sarl
ljmp
pushf
outsb
mov
or
repnz
cs
mov
subl
jl
aad
push
mov
push
daa
sbb
inc
cmp
test
cmpsl
fstpt
dec
inc
mov
cmp
clc
and
repnz
rcrb
dec
mov
push
jns
add
aam
inc
push
test
stos
mov
sbb
cli
jns
inc
push
mov
mov
orb
sub
mov
mov
roll
frstor
outsb
into
push
mov
push
lds
xlat
or
lretw
fcompl
mov
inc
into
arpl
fildl
or
inc
fldcw
shlb
mov
test
loop
lret
pop
pop
das
ret
mov
jno
aam
scas
mov
sbb
and
shl
mov
out
clc
xor
std
mov
outsl
cltd
mov
lds
fmul
popf
orb
out
dec
out
das
jae
into
push
movsb
movsb
test
adc
sub
lods
clc
enter
and
xlat
loope
sbb
shlb
pop
pop
ret
sub
sub
jecxz
dec
ficomps
adc
loop
mov
add
jle
cmpsb
stos
pushl
dec
add
sbb
stos
jmp
sub
data16
shll
and
pop
loop
lret
xor
push
inc
test
cli
push
mov
add
sub
test
sbb
mov
js
je
mov
jae
add
jns
adc
scas
icebp
out
adc
or
icebp
add
xchg
dec
inc
mov
xchg
push
and
mov
jo
out
in
incb
insl
dec
inc
xchg
leave
or
mov
data16
xor
push
mov
faddl
loope
outsb
sbb
mov
add
sbb
push
jo
pop
andl
pop
sub
sbb
and
imul
inc
cmp
lods
push
pop
sbb
out
mov
lret
data16
xchg
lcall
cli
cmpsb
sub
push
rclb
jbe
or
dec
adc
les
sub
or
jp
test
or
std
sub
add
xor
mov
push
loopne
mov
lods
test
inc
or
incb
add
push
pusha
cld
test
push
arpl
sub
fs
xchg
test
fcompl
mov
add
xlat
mov
jmp
inc
xchg
adc
xchg
loope
scas
call
sbb
mov
pop
push
sbb
push
aam
lret
dec
adc
andb
fs
outsb
xor
test
xchg
inc
xor
xchg
shrb
jl
iret
arpl
add
add
cltd
push
cld
sbbb
cli
adc
andb
push
sar
lods
clc
neg
push
and
ret
cmp
mov
data16
cmpsl
adc
mov
mov
outsb
sar
out
mov
bound
mov
push
sbb
cmc
pop
test
pop
test
js
mov
testb
cld
ss
fs
mov
adc
outsl
jp
test
lret
jb
into
leave
mov
push
rolb
in
jb
pop
push
sbb
scas
or
jo
iret
andb
xchg
pusha
xor
inc
cwtl
push
sbb
cld
inc
cmp
pop
sbb
cli
sbb
pop
cmpsl
scas
int3
das
and
aaa
rcrb
jbe
sbb
inc
jp
adc
sbb
dec
pmuludq
xor
or
ret
loopne
xchg
push
fs
leave
scas
mov
or
mov
clc
pusha
das
mov
mov
cmc
pop
jl
mov
and
clc
fwait
mov
add
add
bound
sbb
insb
cltd
fcoml
dec
or
in
cld
scas
xchg
and
lods
add
scas
pop
icebp
out
out
and
adc
inc
cwtl
mov
xchg
stos
add
jo
mov
clc
jo
imul
fistl
out
test
add
sbb
lcall
clc
sbb
sub
lret
fwait
int3
push
rcl
fistpll
ja
sbb
jg
loop
push
inc
mov
or
leave
jb
jmp
aaa
mov
leave
aam
gs
mov
int3
test
lock
pop
mov
dec
mov
fiaddl
test
lret
in
push
push
adc
cmp
call
les
stos
repnz
sbb
xchg
dec
push
sbb
outsl
push
dec
out
outsl
cmp
gs
or
dec
in
scas
inc
cmp
mov
sbb
add
lea
pop
push
and
push
mov
adc
popl
xor
pop
add
cs
jb
add
sbbl
shrl
pop
std
dec
xchg
fwait
daa
mov
push
std
mov
insb
incl
cmp
xor
lcall
adcl
xor
inc
stos
scas
mov
adc
sub
sbb
out
stos
shrb
push
xor
sbb
lcall
cwtl
inc
out
shlb
lahf
mov
test
test
push
or
cmp
sbb
cmp
pop
mov
xchg
jge
pop
push
repz
pop
in
dec
scas
test
bound
inc
xchg
xchg
inc
shrb
orl
inc
jnp
pop
into
mov
inc
xchg
or
xor
je
movsb
scas
xor
icebp
mov
inc
xor
lret
push
mov
hlt
inc
sahf
cmp
mov
fsubrl
inc
or
cmp
outsl
jbe
test
je
pop
je
pop
jo
jbe
loope
jp
jecxz
loop
in
stos
fisubrs
lret
shlb
mov
incb
loopne
mov
mov
pop
dec
in
sbb
push
shrl
rcrb
testl
int
ja
sbb
sahf
shrb
fbstp
mov
insb
lcall
lock
mov
sub
repz
prefetch
or
scas
push
jg
ljmp
mov
sub
sahf
jbe
sbb
aam
inc
scas
clc
pop
sar
xchg
mov
test
pop
das
idivl
movsl
shlb
lcall
repnz
cs
jecxz
std
sbb
stc
inc
xchg
or
mov
mov
pop
addl
fdivp
cmp
stos
inc
loopne
push
fistpll
mov
outsl
cmp
or
dec
aas
leave
scas
cmc
mov
sub
cmp
hlt
jg
and
stc
je
test
cmpsb
fwait
inc
ret
add
int3
bound
cmp
adcl
pop
scas
cmp
js
mov
add
lret
push
or
pop
rcrb
ret
xchg
sub
pop
jle
sub
push
lea
imulb
or
lds
xchg
inc
jg
in
jg
insl
add
js
xchg
call
stos
push
mov
mov
inc
jg
mov
call
xchg
repz
inc
imul
add
imul
add
adc
or
inc
rorl
test
lods
cwtl
or
loopne
ss
mov
push
lock
insl
adc
pop
ds
sub
std
aam
lret
je
mov
sahf
popf
inc
jl
xor
into
mov
lahf
dec
fstl
sub
mov
xchg
jl
and
push
popa
ret
call
loopne
test
sub
fidivl
int
jle
dec
test
pop
scas
add
clc
outsb
ret
lahf
add
push
in
ret
loopne
pop
icebp
xchg
add
mov
cmp
adc
mov
mov
push
cmp
add
pop
and
jl
in
int
cmp
sub
cmpsl
mov
fistpl
out
mov
lret
daa
jo
mov
mov
ret
addr16
lea
std
mov
add
jmp
sbb
out
push
pop
je
fs
loopne
mov
iret
pushf
roll
mov
push
adc
aam
xchg
push
adcl
jnp
mov
imul
xchg
arpl
enter
lcall
out
mov
mov
lock
add
xor
push
std
in
push
add
insl
lret
out
mov
mov
inc
cmp
fcmovnu
push
test
mov
lahf
int
add
dec
loope
pusha
mov
fists
jbe
sub
push
sbb
dec
in
rcr
cltd
push
test
cmpsb
mov
sub
or
and
lods
or
sti
mov
rcrl
mov
mov
cmp
jnp
sbb
mov
inc
js
testl
int3
cld
ss
data16
mov
mov
adc
mov
xchg
jb
add
mov
cmp
push
cmp
fsts
cltd
mov
sbbl
dec
and
pop
add
call
call
jno
stc
pop
std
sbb
insb
movsl
int
or
and
mov
and
mov
push
xor
adc
call
pushf
das
dec
pushf
push
sbb
je
stos
loope
or
das
sbb
push
push
sti
mov
adc
pusha
popa
mov
xor
andb
dec
ljmp
out
insl
xchg
push
cld
add
xchg
out
jg
pop
cmp
cmc
movsb
icebp
xor
and
cmp
daa
and
hlt
aas
std
scas
insb
mov
sbb
std
movsl
icebp
int3
push
cs
add
mov
stos
mov
pop
fsubr
addb
mov
cld
fdivp
testb
adc
add
xchg
push
and
sahf
fmull
jp
rcrb
mov
sbb
lods
xchg
lea
outsl
pop
push
rcll
mov
test
xchg
icebp
xchg
cmpsb
inc
scas
mov
and
jl
inc
add
add
or
pushf
stos
sahf
pop
add
addb
enter
addb
push
loope
dec
adc
iret
mov
push
sub
in
sahf
fstpt
mov
das
mov
cmp
sub
add
outsl
clc
push
loopne
lcall
push
fstpt
dec
mov
lds
ss
call
stos
fdivl
loop
loopne
add
sub
or
mov
je
push
lds
pop
div
inc
jbe
imul
mov
cmp
jmp
aas
rcl
xor
cmpsl
rol
enter
adcb
cmp
sbb
lahf
xchg
xchg
xchg
insb
jb
andb
in
rcrl
pop
xor
mov
mov
xchg
popa
jnp
rcrl
cmc
dec
mov
push
std
in
mov
mov
testb
test
ret
pop
add
lahf
daa
dec
mov
mov
sahf
mov
jge
lds
mov
mov
stos
cmp
in
imul
sbb
pop
imul
mov
jecxz
mov
data16
bound
dec
ja
negb
jne
add
adc
sbb
fidivrl
or
rclb
inc
mov
mov
add
inc
and
aam
mov
bound
push
stos
icebp
clc
sub
movl
arpl
adc
pusha
and
push
mov
mov
xchg
jb
sub
cmp
xchg
test
addb
ja
or
jle
aam
test
push
pusha
sbb
out
push
jle
jp
nop
add
test
ret
xor
pop
jne
jne
aad
add
pop
and
testb
inc
lahf
push
shrb
test
stos
dec
lret
testb
sub
ss
jb
dec
lahf
jno
ljmp
mov
xchg
xchg
test
sub
pop
movsl
xchg
mov
push
shlb
fimull
lds
imul
xchg
xor
cmp
jecxz
adc
test
jo
in
sahf
cmc
and
mov
out
call
aad
adc
lds
lretw
gs
aaa
dec
mov
add
enter
push
cmpsb
stos
ret
push
ret
pop
pop
hlt
iret
mov
mov
adc
pop
push
test
pushl
cmp
ret
aad
mov
sbb
push
xor
sub
xchg
das
ficomps
addl
push
jne
clc
divb
push
mov
cmp
pop
test
jnp
sarb
xor
insl
addl
push
in
test
pop
add
or
or
mov
lock
insb
xchg
fcompl
fidivl
sbb
push
daa
mov
int3
or
xor
fwait
lock
fstpl
inc
call
mov
outsl
mov
sbb
and
pop
sbb
sub
add
lods
xlat
jo
rcrl
loope
sahf
mov
dec
add
repnz
incl
push
fs
push
push
push
ror
negb
cmp
pusha
rolb
testb
inc
les
daa
loopne
fistps
cmp
inc
push
stos
mov
xor
imul
aam
daa
push
mov
mov
pop
xchg
inc
lock
mov
adc
nop
mov
mov
pop
insb
add
adc
lcall
or
xchg
xor
adc
in
pusha
inc
sbb
rorl
mov
jno
add
pop
loop
and
sub
or
fcoml
or
idivl
cmpsb
xlat
jp
fs
adc
and
mov
mov
cmp
out
sbb
ljmp
stos
xor
push
ss
into
and
push
pop
mov
sbb
test
xor
aam
adc
repnz
sbb
faddl
in
es
adc
jge
cwtl
inc
sub
sbb
cmc
sub
les
push
mov
es
fists
movsb
int
ja
mov
idivb
addl
bound
pop
call
insb
inc
xor
push
enter
jo
fwait
mov
movsb
push
stc
mov
add
inc
ret
mulb
leave
and
mov
js
xor
flds
addl
push
lods
sbb
insb
inc
and
mov
int
jbe
and
rorb
pop
sbb
std
divb
sbb
sbb
cmp
stos
sbb
subb
decl
push
adc
filds
inc
push
adc
jne
dec
mov
and
and
mov
js
lea
mov
pushf
orl
push
mov
pop
rorb
aas
push
xchg
andl
sbb
rcl
and
ja
arpl
xor
sbb
lret
in
xlat
outsb
mov
pop
push
or
scas
mov
imul
in
add
sub
aad
sbb
lcall
iret
pop
stos
push
mov
mov
push
aaa
test
incl
rol
mov
push
xchg
or
not
fs
adc
or
ljmp
mov
push
dec
pop
add
inc
fadd
mov
fldcw
call
xchg
leave
mov
mov
int3
hlt
les
out
icebp
movb
jmp
dec
mov
sub
add
and
ja
jecxz
mov
or
sbb
mov
mov
sbb
mov
push
enter
cmc
sub
inc
push
lahf
push
mov
test
jnp
fidivrl
aam
outsb
ret
cltd
pushf
add
imul
aaa
add
ret
and
cmp
inc
add
pop
adcb
pop
addl
xorb
push
xchg
jmp
sbb
je
in
sbb
addr16
loope
xchg
push
mov
cwtl
mov
inc
mov
out
js,pn
sbb
jae
pop
jbe
test
mov
push
jmp
into
scas
push
jno
fstpl
adc
std
jg
and
addl
or
cmp
adc
mulb
or
push
cmp
mov
add
in
aas
sarb
fs
or
jge
jo
test
inc
push
push
lcall
fwait
pop
enter
xchg
cmpb
dec
push
and
je
cmp
shrl
ss
les
inc
push
cld
fadds
cli
mov
loop
push
push
adc
test
dec
jp
mov
inc
rcll
pop
mul
sar
sarb
mov
lea
arpl
inc
out
mov
insb
jae
mov
xchg
or
push
in
xor
sbb
sub
nop
je
lods
shll
aam
jae
mov
call
stos
je
sub
add
sbb
popa
mov
xlat
lds
push
sub
inc
mov
sar
cmp
nop
cmp
xor
bound
inc
aad
rolb
mov
mov
outsb
mov
shlb
rclb
inc
mov
cmc
andl
les
and
cwtl
lods
add
test
mov
test
push
xlat
arpl
or
adc
push
add
test
pop
lods
xor
jle
xchg
jne
cmp
xchg
mov
or
jecxz
mov
pop
add
insb
stos
pop
mov
jb
ss
fmuls
inc
call
cltd
push
adc
xor
mov
mov
mov
pop
push
inc
pop
pusha
jg
xor
pop
jo
add
lods
sbb
xchg
ja
xchg
clc
cmpsb
cli
xor
push
pop
inc
sub
push
or
call
clc
push
pop
push
sti
or
loopne
ret
mov
add
inc
call
or
sahf
dec
ret
mov
cmc
add
xchg
inc
sbb
or
mov
ja
adcb
cmp
in
subb
cmc
xchg
pop
sbb
sbb
dec
pop
jmp
enter
mov
lock
xchg
and
pop
or
cmp
push
sahf
pop
nop
xchg
test
sub
xchg
adc
mov
sbb
popf
push
xor
push
sti
nop
xchg
sbb
mov
shlb
jle
lods
dec
jo
mov
cmp
mov
mov
scas
sbb
inc
mov
icebp
aad
adc
adcb
js
gs
call
lods
sub
mov
adc
lock
mov
jbe
or
cmp
xchg
and
lret
filds
mov
xchg
push
orl
fcoms
in
inc
hlt
dec
mov
das
and
jo
idiv
mov
fadds
lods
fisubrs
iret
add
cmp
rolb
fdivp
mov
push
mov
xor
cld
pop
int3
das
and
mov
pop
sub
mov
jmp
insb
add
add
inc
push
mov
dec
xor
je
and
loopne
adc
arpl
mov
fwait
mov
pop
aad
test
mov
push
stos
outsl
aas
sbb
sub
hlt
mov
fdivrs
sbb
sub
out
pop
push
ja
adc
dec
and
mov
lret
pop
hlt
pop
outsl
adc
push
movsb
jb
pop
jg
andb
fdiv
mov
orl
mov
testb
stos
loop
int
mov
mov
into
movsl
lret
push
pop
jb
repz
pop
sbb
lds
xor
testl
push
rol
test
sbb
aam
incl
fcompl
ret
jo
xor
xchg
mov
push
fxch
inc
inc
push
cli
mov
and
adc
clc
ss
lods
popa
add
xor
jle
cs
clc
adc
inc
jge
cs
xchg
paddb
fcomip
xchg
or
pop
sub
lret
pop
ss
outsb
sahf
inc
sbb
sub
scas
mov
icebp
pop
jo
fdiv
pop
cmp
clc
sbb
lods
sub
sbb
aam
fyl2x
mov
aad
adc
pusha
out
push
jge
outsb
adc
js
jle
inc
mov
lods
sbb
push
imul
inc
popa
movsl
and
cmpsb
pop
inc
sub
cmp
inc
jl
sub
or
sub
je
xor
xor
outsl
clc
pop
jmp
and
inc
js
add
dec
sbb
jae
cmpsl
fcomip
adc
dec
out
rol
dec
into
sarl
fstl
daa
ret
fdivs
test
fisttpl
repnz
adc
or
mov
add
lcall
push
int
adc
enter
rorb
rcrb
xchg
jmp
dec
push
cld
aam
sbb
jmp
pushf
dec
lret
xor
pop
or
sbb
mov
das
daa
mov
ficoml
fldl
pop
loope
pop
cmp
inc
add
sbbw
jmp
adc
dec
jbe
lret
jb
push
scas
mov
add
push
sub
addb
sar
stos
pop
hlt
mov
ljmp
dec
cld
es
jb
and
enter
into
in
ret
jg
sub
mov
push
ljmp
imul
xchg
stos
rolb
xor
pop
mov
xor
or
push
stos
xchg
lock
aad
dec
inc
cmp
pop
mov
pop
ja
add
loope,pn
mov
and
push
sbb
loop
popf
test
sbb
pop
xor
insl
mov
mov
enter
jnp
insb
imul
stos
adc
adc
or
popa
push
jnp
xchg
out
addr16
and
xchg
sbb
dec
ljmp
leave
jp
inc
inc
dec
inc
imul
or
outsl
clc
mov
xlat
fimuls
mov
jle
hlt
fs
popa
aad
decb
faddl
xacquire
dec
push
push
fisttps
or
hlt
fwait
lock
or
or
xchg
repnz
xchg
mov
scas
call
stos
inc
mov
xchg
mov
pushf
aad
jge
aad
add
rolb
pop
outsl
pop
inc
test
fldl
xor
jbe
clc
or
push
sub
add
repnz
ror
mov
xor
stc
lock
push
mov
fwait
sahf
stos
add
xor
jge
push
mov
loopne
loop
lods
sbb
subb
inc
xchg
xor
pushf
popf
xchg
maxps
sbb
or
loop
add
cmp
or
icebp
cltd
sahf
subb
cwtl
xchg
mov
cmp
xchg
inc
or
adc
push
repnz
inc
mov
cmpl
movsb
and
data16
outsb
jle
sbb
push
and
arpl
test
lret
sub
iret
sbb
cwtl
xchg
or
sub
adc
ret
xchg
cwtl
inc
loopne
in
sbb
inc
shrl
xchg
push
sub
sub
or
adc
dec
jl
cld
andl
jl
and
inc
inc
sbb
sbb
mov
cltd
int3
mov
sub
aad
sbb
xlat
push
enter
mov
enter
xchg
ret
pop
mov
cmp
and
js
inc
lods
pusha
mov
sbb
or
hlt
adc
adc
add
push
mov
add
mov
pop
lock
mov
pop
inc
xor
outsb
mov
test
mov
insb
std
jmp
jnp
jl
cmpsb
mov
in
out
add
pop
jecxz
movsb
addr16
ret
adc
inc
nop
and
inc
test
faddl
adc
and
into
out
mov
js
movsl
xchg
cmp
push
jecxz
dec
xor
fwait
add
icebp
scas
shrb
hlt
test
lret
int3
into
sub
inc
mov
nop
add
clc
mov
cmp
pop
inc
push
cmp
ljmp
pushf
stos
int
lock
loope
pop
mov
xchg
pop
outsl
push
adc
aam
inc
add
imul
mov
mov
outsb
cld
aaa
call
or
cli
inc
pop
int3
push
out
push
jecxz
lcall
loop
cmpsb
imul
into
rcl
fisttpl
inc
ds
xchg
add
cmc
sbb
loopne
popa
inc
test
pop
pop
ljmp
adc
xchg
outsl
xchg
cmp
mov
in
jne
cli
outsb
mov
or
outsb
mov
sti
cmp
jmp
pop
add
xor
out
or
in
inc
or
frstor
jp
pop
xor
int
or
out
push
nop
mov
addb
loopne
gs
mov
repz
and
les
je
clc
mov
cmp
fidivl
mov
shlb
lahf
xchg
enter
hlt
xor
push
ret
cmpsl
cmp
test
cmp
nop
aas
ds
push
dec
xchg
jp
adc
shrb
push
addb
sub
cmpsl
scas
sub
jg
sbb
js
pushf
cmp
lods
pop
mov
call
cmpsb
stos
mov
inc
pop
cli
ds
xchg
mov
xchg
insb
mov
jns
ss
js
sbb
sbb
mov
sbb
rcll
hlt
iret
inc
jno
and
daa
stos
imul
cmp
mov
dec
mov
lcall
orb
jbe
cwtl
sti
add
push
pop
adc
fdivl
or
sbb
test
call
sbb
sub
fistl
mov
mov
lock
mov
popa
divps
xor
xor
call
mov
mov
cmp
or
pushl
mov
lret
push
repnz
pop
xchg
xor
fsubp
xchg
jmp
xchg
roll
jb
jns
std
mov
stos
mov
push
in
xor
mov
xchg
inc
clc
sub
bound
push
stos
jbe
add
adc
sbb
stos
loop
hlt
pop
shlb
xor
push
pop
push
and
lock
inc
and
in
mov
push
jno
xor
mov
repnz
xorb
inc
push
add
and
cmp
adc
filds
aam
dec
call
scas
xchg
ret
nop
jo
imul
push
mov
sti
add
mov
test
mov
lock
pop
inc
icebp
mov
shll
shlb
shrb
lcall
std
cmpsb
scas
call
bnd
shr
or
xlat
fildl
and
mov
jbe
jns
inc
mov
and
sbb
hlt
fcomip
std
imul
xor
fistl
mov
sub
scas
repz
push
pop
add
shl
rcrl
fmul
add
push
dec
fwait
stos
push
mov
push
adc
xor
sbb
in
adc
hlt
repnz
and
push
mov
mov
repnz
incb
pop
mov
mov
pusha
mov
clc
adc
or
jp
sarl
sub
cmpsl
mov
movsb
inc
jns
arpl
es
push
sbb
lock
shrb
or
addl
push
mov
aam
mov
fstpt
icebp
loop
pop
jnp
push
cwtl
adc
add
mov
jns
mov
push
pop
data16
push
mov
test
xchg
push
xchg
pop
push
loope
sbb
iret
sbb
inc
jnp
adc
xor
inc
insl
test
lret
loop
push
aaa
test
rcl
sbb
in
aas
rcl
mov
aaa
add
mov
aas
clc
rcr
stos
xchg
or
xor
movsl
aaa
loopne
sub
add
orb
loopne
out
call
lmsw
push
adcb
pop
pop
xchg
dec
lock
push
inc
addr16
jl
sub
and
push
aam
mov
test
pop
clc
mov
lds
fidivs
jecxz
sub
adc
add
adc
fbld
lock
flds
cltd
adc
add
inc
jmp
pop
incb
sbb
jge
icebp
sarb
shll
push
xor
mov
outsb
fmul
xor
inc
jp
mov
push
pop
xchg
xchg
pop
push
push
aam
test
add
lock
mov
test
fwait
testb
push
sub
in
push
mov
mov
mov
scas
aad
push
aam
pop
jp
ss
dec
loop
ljmp
cmp
hlt
or
test
sahf
or
mov
aaa
jl
push
stos
lcall
sbb
outsl
loope
ljmp
loop
xchg
std
pop
mov
mov
jo
mov
js
insb
sbb
xchg
inc
mov
fsubl
jbe
mov
out
xchg
xlat
rcr
mov
pop
icebp
inc
mov
in
pop
mov
sti
fbstp
in
into
test
and
push
mov
orl
xor
fdivrl
pop
inc
stc
enter
add
popa
fiadds
es
or
aam
ja
inc
mov
es
cltd
sti
dec
and
scas
fcmovbe
aaa
fnsave
cwtl
es
sub
xor
out
into
je
add
push
sub
ffree
inc
test
mov
cmp
sbb
xor
lock
or
leave
inc
insb
sbb
cmpsb
sub
push
xchg
sbb
mov
or
rol
je
lret
aam
ret
add
pop
aam
mov
mov
or
mov
cli
lcall
outsl
jmp
cmpsb
lods
mov
mov
jbe
add
cmp
insb
jl
sub
in
sub
mov
mov
cmp
mov
mov
sbb
jnp
lock
call
xchg
lods
mov
fwait
lock
push
mov
in
insl
and
add
adc
mov
addr16
loop
sbb
mov
xor
sbb
das
pop
pop
xorb
ja
subl
inc
scas
fdivrs
pop
push
sti
dec
jo
test
pop
inc
and
add
jecxz
adc
mov
std
stos
and
mov
inc
divb
in
fbstp
enter
pop
pop
rclb
mov
mov
mov
mov
push
and
xchg
push
out
cmp
cmp
enter
push
das
repz
or
mov
mov
out
and
adc
add
insl
sar
or
das
cmp
cmpsl
push
cs
jno
sahf
mov
add
fldenv
out
cwtl
xchg
lret
pop
jge
and
subb
sbb
cmc
pop
and
mov
jecxz
cmp
xor
pop
lret
xchg
stos
mov
mov
mov
sbb
and
loop
dec
rorw
adc
out
ret
add
sbb
dec
adc
mov
add
inc
jg
xor
sbb
shl
jb
mov
cmpsb
stos
insb
sbb
xchg
add
repnz
dec
arpl
shll
popa
jmp
cmp
neg
push
insl
mov
push
adc
or
add
loopne
push
cmp
xor
imul
or
pop
inc
dec
rcl
ljmp
mov
or
xchg
jne
repz
enter
adc
mov
sub
jg
ja
sti
outsl
std
push
aam
int3
push
xchg
test
adc
imulb
lahf
fisubl
jle
fildl
pop
outsb
push
lahf
sbb
mov
push
push
repz
mov
pop
int
inc
push
rolb
cmp
ret
jp
aas
fcmovbe
in
imul
xchg
cli
ljmp
outsb
cmp
fsubs
inc
loop
and
inc
jl
dec
sbb
pop
mov
daa
outsl
ret
out
sbb
sub
xlat
orl
and
js
inc
inc
lds
pop
ss
shl
jbe
add
inc
mov
jo
iret
jae
pop
push
dec
mov
or
idivb
mov
mov
aas
pusha
push
xchg
mov
out
pop
lock
inc
jae
fsubrp
dec
pushf
js
nop
sbb
stos
inc
adc
aam
ljmp
jb
push
jmp
fwait
sbb
push
or
jmp
out
xchg
test
je
stos
mov
ficompl
and
add
fidivs
repnz
or
mov
lods
mov
dec
pop
lods
ret
xchg
jo
loope
add
ljmp
lret
mov
popf
mov
or
addr16
and
add
or
icebp
jo
dec
loopne
in
add
mov
push
adc
or
jne
pusha
sub
cmp
clc
subb
inc
daa
mov
data16
xor
sub
xor
mov
mov
jo
cmp
insl
jo
cwtl
cmp
clc
jl
out
mov
mov
pop
mov
lods
dec
or
adc
or
cld
push
mov
outsl
jno
test
lods
sbb
add
test
or
dec
and
and
test
insl
push
lods
jb
rcll
mov
mov
adc
mov
movsl
imul
cmpsb
jecxz
pushf
clc
or
mov
inc
je
add
incb
mov
mov
pop
xchg
test
jle
sub
mov
push
push
xchg
mov
mov
fnstcw
in
mov
pop
aam
jl
jmp
inc
incl
fdivl
pop
lcall
pop
and
call
es
add
inc
sbb
cmpb
and
xchg
cmp
inc
pop
adc
rcrl
les
fadds
xchg
xchg
insl
xor
into
int3
or
jb
clc
and
lret
or
adcb
cmp
ror
in
mov
int3
jecxz
bound
aaa
sub
ds
jo
mov
in
inc
cwtl
sbb
jbe
rolb
test
push
add
mov
test
in
cmp
enter
add
mov
fcmove
stos
mov
hlt
mov
or
sub
je
adc
cwtl
and
sbb
addb
pop
push
mov
loop
inc
xchg
xchg
push
lret
fldenv
shl
fildl
ret
bound
push
pop
push
push
inc
sahf
mov
mov
mov
lret
push
clc
xor
push
sub
sar
andw
xor
and
jbe
mov
push
and
mov
mov
add
les
mov
jp
mov
or
sbb
fcompl
js
loope
in
stos
dec
sbb
adc
add
xchg
lods
icebp
or
or
mov
and
pop
lahf
loope
sbb
jmp
mov
and
in
test
inc
push
je
dec
adc
faddl
mov
iret
notb
aam
or
loop
test
push
mov
add
scas
pop
mov
pop
out
hlt
xchg
icebp
sahf
gs
test
mov
cs
sub
or
mov
addr16
test
mov
ret
sub
call
mov
mov
daa
adc
jo
push
cwtl
push
pushf
and
push
push
mov
dec
mov
sub
test
mov
or
lret
xlat
jg
push
addr16
jl
in
jb
insb
add
clc
insl
shll
hlt
andb
repz
sub
xchg
pop
mov
adc
sub
mov
rcr
call
push
loop
sbb
int
and
aaa
mov
les
xchg
add
loopne
push
test
pop
lds
std
fldl
or
inc
bound
add
loopne
subl
xor
inc
or
and
pop
mov
je
inc
cmpsl
or
loop
cmpsl
sarb
mov
sti
outsb
mov
jp
add
sub
pop
ret
lea
in
shll
inc
mov
outsl
push
adc
ss
or
push
mov
or
inc
pop
in
add
das
rcll
mov
and
cmp
mov
jmp
inc
jns
decb
jb
test
icebp
loop
stc
nop
cmp
cwtl
pop
mulb
adcb
xchg
lcall
jge
add
xchg
inc
mov
out
mov
add
repz
bound
add
adc
dec
into
mov
into
shr
cmp
ret
jp
push
mov
add
cmp
inc
lahf
xor
inc
inc
sar
loop
test
pop
ret
mov
mov
push
cli
sarl
sbb
enter
add
aam
add
in
push
inc
ret
mov
adc
aam
jno
push
push
cmp
mov
dec
push
scas
fdivrl
int3
dec
cld
ret
outsb
rorl
ljmp
jne
out
fsubrl
mov
sub
add
je
ss
js
sbb
pop
sub
jbe
push
pop
mov
insl
popa
mov
icebp
ret
mov
pusha
push
xchg
loop
sbb
lods
push
jmp
mov
push
pushf
adc
bound
std
inc
adc
mov
push
clc
mov
dec
fdivs
mov
js
jb
cmpb
outsl
je
inc
xor
sbb
pop
lcall
lds
nop
into
lock
sub
enter
ljmp
inc
add
jae
xor
mov
xor
adc
ljmp
aam
das
cmpsb
scas
xchg
push
lcall
mov
andl
insb
sarl
sbb
int3
mov
dec
cli
cmpsb
subl
ds
sub
mov
rolb
or
xorb
pop
test
jecxz
iret
mov
addr16
enter
and
dec
outsl
mov
mov
out
pop
outsl
cli
push
dec
cmpsl
in
jbe
inc
sub
lcall
pop
cmc
add
outsb
jge
dec
xchg
mov
jnp
cmpsl
je
mov
call
add
call
out
adc
mov
shll
dec
add
lcall
mov
ds
push
cmp
xlat
dec
aaa
jb
iret
add
add
jbe
xchg
mov
cmpsl
lock
hlt
jbe
lods
adc
or
lods
ljmp
scas
mov
mov
lods
stos
jge
es
pop
add
xchg
mov
add
mov
jae
xchg
lea
dec
test
fcmovnb
dec
loopne
stos
mov
mov
sbb
dec
rcrb
xchg
rclb
sub
mov
loope
lods
ret
xchg
aad
aad
orl
fcmovb
lahf
or
fisubrs
push
lret
fldenv
inc
mov
es
subb
mov
outsb
pop
loope
push
dec
sbb
mov
in
jp
mov
xchg
mov
or
push
rolb
addr16
sbb
mov
push
dec
data16
mov
adc
test
lea
in
nop
sarb
cmp
sahf
pop
xchg
stos
mov
lods
jecxz
sub
adc
jle
jge
fdiv
push
jl
ljmp
movl
xor
test
repz
aam
mov
pop
mov
dec
rcrb
jg
into
jecxz
adc
stc
lcall
imul
cmp
sbbl
ror
jnp
out
push
in
rclb
mov
cli
pop
cmp
xor
sbb
mov
mov
pop
mov
pusha
es
cmpsb
jg
fbstp
mov
mov
jb
insb
add
ss
mov
decl
inc
fwait
sbbl
xor
inc
andb
sahf
or
ss
jno
mov
rorl
push
fildll
dec
xor
insl
fmuls
rcl
and
inc
rcrl
sub
data16
test
mov
pop
xchg
xchg
leave
out
test
test
roll
mov
test
adcb
mov
sub
cvttps2pi
out
adc
bound
cld
jmp
aad
mov
js
fdivrs
mov
mov
sbb
aam
fs
jno
ds
sbb
xlat
scas
imul
add
push
sub
les
push
orl
loopne
das
jmp
aaa
xlat
outsb
inc
je
fisttpl
jmp
or
loopne
cld
bound
hlt
push
test
mov
fbld
in
or
jmp
add
hlt
add
inc
sar
inc
nop
mov
jae
fisttps
ror
out
push
sbb
push
sub
jg
call
mov
testb
fdivp
les
test
add
xchg
xor
scas
push
push
jl
xchg
outsl
lods
xchg
dec
cmp
repnz
lock
idivb
mov
mov
xchg
inc
clc
sbb
lea
pop
jbe,pn
in
mov
shl
jle
xchg
popa
shl
nop
xchg
push
xchg
rolb
sub
jl
ja
inc
out
insl
jb
push
subl
inc
add
push
dec
xor
js
scas
loop
popa
xchg
cld
scas
dec
adc
and
sbb
push
std
xchg
ss
pop
push
sub
sbb
add
rclb
jbe
pop
push
sti
inc
cli
rolb
xor
sti
dec
mov
add
mov
sbb
out
rcll
leave
jmp
add
xchg
sub
xor
add
outsb
arpl
scas
jo
fdivr
int3
adc
mov
fdivrl
sub
lret
repnz
repz
sbb
fistps
mov
add
clc
cwtl
ljmp
pop
jbe
lods
cwtl
xchg
les
add
and
es
cli
pop
push
movsb
aad
sub
adc
jmp
inc
les
mov
and
in
test
xchg
mov
int3
mov
mov
push
and
in
mov
jp
les
test
testb
loope
jno
pop
stos
inc
cmp
or
mov
dec
mov
out
mov
cmp
ljmp
movsb
test
mov
add
dec
pop
js
add
cltd
or
jo
add
adc
jne
jae
je
mov
idivb
pop
push
outsb
sbb
add
xchg
add
inc
loop
sbb
dec
adc
pop
sbb
shrb
sbb
enter
stos
loope
inc
xor
adc
rolb
lcall
icebp
jg
adc
xor
dec
fldln2
cmpl
sbb
in
sub
jp
push
mov
ds
rol
or
cmp
loop
cmp
lcall
pop
sbb
adc
cli
in
data16
or
addr16
lods
mov
push
cmp
ds
outsl
js
lcall
pop
inc
mov
cmpl
enter
test
add
pop
out
clc
push
arpl
jbe
pop
loopne
fadds
insl
fildll
mov
xchg
clc
out
sbbb
push
aad
out
dec
cltd
cmp
into
jg
ret
stos
in
mov
push
divb
stos
jg
test
pop
and
fmulp
imul
ret
stos
pop
pop
dec
xor
arpl
sbb
pop
pop
imul
jno
inc
cli
mov
xchg
mov
test
push
jecxz,pt
stos
dec
in
inc
cmp
insl
dec
and
push
jne
pop
push
js
push
push
clc
mov
pop
or
dec
xor
movsb
mov
cmp
mov
adc
xor
dec
les
dec
dec
les
fwait
push
enter
cmp
mov
xchg
mov
rolb
push
adc
lret
jecxz
push
and
pusha
ds
adc
dec
shll
dec
xor
jmp
jge
fsubl
and
and
loop
adc
mov
add
and
sub
clc
mov
repnz
les
mov
fisubs
les
push
and
cmp
push
clc
cli
in
xor
push
test
push
or
dec
push
rolb
sti
and
pop
mov
ret
nop
and
sbb
pop
insb
test
xchg
pminub
stc
nop
mov
ds
sbb
int
xchg
sti
sbb
mov
dec
jg
imul
rcr
jo
outsl
add
mov
push
xchg
push
dec
jg
mov
mov
cmc
mov
mov
rcrl
or
xchg
js
and
inc
int
push
pop
fiadds
sti
popf
test
add
mov
mov
mov
aad
fsubrp
lods
push
lcall
scas
push
ret
jg
adcb
icebp
adc
call
xchg
or
jne
xor
or
addr16
mov
cmp
das
mov
add
pop
add
inc
mov
xchg
stos
or
pop
sbbl
sbb
xchg
imul
jae
xor
lds
mov
dec
or
push
or
js
loop
outsl
or
std
loopne
clc
cmp
or
fildll
sti
decl
cmpsl
adc
xchg
and
add
addl
sub
inc
pop
and
mov
push
in
les
mov
fimull
shl
and
aam
subl
inc
and
dec
js
icebp
mov
dec
js
testb
inc
push
dec
fdivl
cld
ljmp
mov
testb
adc
rcrl
ficoms
clc
xchg
pop
mov
mov
cmp
push
add
lds
loop
sbb
lds
clc
aam
push
aas
mov
fistpll
call
call
aam
pop
scas
in
xor
mov
jbe
and
stos
mov
outsl
pop
mov
insl
mov
mov
jp
bound
cltd
test
dec
ja
out
fadds
cmp
repnz
cmp
repz
push
cld
shr
or
adc
sbb
dec
inc
mov
dec
push
fildl
shll
hlt
xchg
and
adcl
shlb
mov
out
lock
incb
jno
cmp
cltd
pop
out
scas
iret
xchg
pop
mov
or
shrl
mov
mov
cwtl
loope
out
sub
inc
jmp
stc
mov
jnp
dec
imul
adc
adc
mov
and
add
test
aad
scas
scas
lret
inc
shlb
add
add
test
xchg
inc
test
inc
mov
cltd
adc
sbbl
ds
in
fdiv
inc
mov
pop
ljmp
push
jle
add
movsb
push
je
adc
and
loopne
fimuls
je
inc
call
pop
and
data16
pop
mov
pop
and
lds
test
sub
fistps
mov
jle
call
jl
sahf
mov
ljmp
shll
and
jle
mov
js
and
xor
out
in
js
push
push
fbstp
mov
test
loopne
inc
inc
and
test
and
jecxz
adcb
mov
sar
mov
lods
mov
sbb
cmp
fcomi
lret
movsb
test
add
adc
outsb
ret
push
aas
cmp
daa
imulb
fimull
das
push
data16
or
push
sti
outsb
roll
cmp
cmp
mov
jnp
cmp
lods
js
mov
fcomip
in
dec
ffree
aam
sub
les
fstl
les
xchg
insl
clc
ja
pushf
repz
push
or
and
daa
cld
push
jl
push
lds
fnstcw
cmpsb
sarb
stos
aad
adc
outsb
mov
jp
cld
negb
stc
repnz
cli
inc
adc
test
roll
stos
push
adc
sbb
and
nop
or
mov
jb
adc
inc
popf
jg
pop
cwtl
jl
nop
pop
sub
int3
pop
add
or
lret
inc
incl
movsl
jb
cmp
add
or
lcall
pusha
adc
aas
data16
loopne
ds
sbb
xor
mov
push
pop
popf
repnz
rorl
cli
incl
pop
sub
mov
xchg
add
and
or
push
inc
push
lds
dec
xor
mov
imul
cmp
outsb
clc
add
in
aam
mulb
lods
mov
xor
fmul
in
jbe
cmpsl
jb
jge
xchg
push
enter
adc
jmp
jbe
mov
jne
je
mov
inc
or
pusha
lock
popa
call
sbb
mov
inc
cld
mov
push
subl
add
sti
fisubl
sbb
pop
mov
cmp
mov
xor
jb
rcrb
mov
pop
iret
movsb
cmpsb
cmp
pop
in
xor
and
jle
push
ss
xchg
dec
add
lds
jb
xor
or
push
test
out
or
push
outsb
loop
fimull
push
xchg
aad
mov
xor
mov
sbb
push
mov
in
ja
jecxz
dec
inc
dec
movsl
cmp
sub
cwtl
adc
andb
push
ffreep
sarl
jne
jle
int3
or
out
or
mov
xchg
cld
jne
and
shl
fildl
clc
dec
push
dec
inc
dec
jle
mov
loop
mov
jp
lock
adc
xchg
test
push
enter
test
or
cli
cltd
ss
out
pop
loopne
adc
test
shrl
aam
xor
dec
push
insb
mov
into
pop
pop
pop
pop
cmp
fdivs
arpl
ds
xor
inc
mov
fisttpll
add
mov
mov
or
dec
push
out
xlat
add
add
push
aas
inc
filds
rorb
pop
data16
or
sbb
arpl
mov
int3
jns
jmp
and
xchg
int3
ret
sbb
rclb
sbb
es
data16
push
sbb
cltd
adc
repz
pop
imulb
sarb
fisttpl
pusha
dec
shl
rcrb
add
es
cmp
cmpsl
adc
jle
mov
jge
inc
hlt
add
xchg
rclb
dec
int3
adc
loope
sbb
je
mov
jnp
add
mov
test
insb
jge
xchg
push
jmp
inc
adc
mov
push
dec
add
add
sar
add
daa
mov
add
inc
ss
sbb
fsubs
nop
sbb
test
inc
add
js
iret
xchg
add
fdivp
and
dec
push
imul
lods
nop
subb
lahf
adc
rol
mov
mov
push
out
mov
decl
xorb
push
mov
fsubrs
add
inc
test
mov
inc
sbb
jle
jne
inc
xchg
lock
xor
push
and
js
xchg
cwtl
rcl
sub
adc
sbb
add
pop
sub
inc
shrl
fisttpl
add
push
smsw
sarb
cmp
test
jl
or
cmp
test
call
xor
mov
mov
mov
cmpl
xor
sbb
test
fnsave
test
push
fidivrl
mov
outsl
push
add
sbb
fnstcw
jle
sti
test
cmp
fistpll
pop
cwtl
inc
mov
test
push
adc
add
loopne
lret
push
inc
mov
cld
pop
xor
jecxz
test
inc
cmc
in
mov
pop
orb
cmp
xor
sbb
add
popf
add
inc
pop
or
add
and
jmp
mov
jb
fs
and
call
mov
and
bound
loopne
or
out
fimull
mov
faddl
shrl
lods
lcall
xchg
cmp
loop
scas
jb
out
adc
rorb
ds
in
in
dec
xchg
and
or
lahf
shlb
rcrl
stc
xor
fidivrl
add
lcall
ds
pop
sbbb
cmpb
hlt
dec
sbb
daa
pop
sbb
ja
inc
jp
cmp
mov
push
cmp
roll
dec
push
aad
add
stc
stos
xchg
add
pop
pop
adc
cmp
mov
mov
stc
push
hlt
push
xchg
cmp
dec
add
call
mov
cwtl
or
ja
mov
push
aaa
out
in
push
test
sbb
outsb
sub
pop
repz
icebp
xchg
rorb
jmp
pop
jge
inc
fistpll
lock
repz
inc
lcall
aad
push
mov
icebp
ds
mov
mov
add
pusha
and
xchg
lret
dec
mov
lods
inc
cltd
inc
add
xor
outsb
sub
adc
push
adc
mov
pop
xchg
mov
movsl
insl
add
add
mov
fsubs
adc
adc
cmc
add
inc
or
fldenv
test
sbb
cld
jbe
rcll
dec
aaa
adc
jle
std
outsl
sub
shl
lock
push
adc
mov
pop
aam
inc
xchg
pop
mov
bound
xchg
enter
divb
mov
xchg
pop
and
cld
imulb
cld
inc
icebp
xchg
pop
adc
and
into
mov
add
bswap
sbb
sbb
or
insl
mov
out
dec
pop
push
pushf
cmp
scas
sbb
and
inc
cmp
cmpsb
stos
es
sarb
bound
mov
pushf
data16
std
mov
test
or
pop
and
mov
dec
adc
das
clc
lcall
call
mov
push
and
fsubl
pop
cmp
in
sahf
in
mov
push
add
adc
dec
lds
out
scas
cli
je
pusha
pop
mov
cld
mov
adc
aad
std
rcrb
dec
inc
cmp
loopne
lock
fcomip
pop
stc
jle
pushf
repz
xor
mov
xchg
jb
jg
push
sub
or
xor
mov
add
add
stos
lds
mov
fnstsw
sbb
pusha
lds
insl
rorl
jne
lcall
or
pop
push
out
cld
das
mov
and
lcall
lret
call
or
rcr
mull
xchg
xor
ljmp
pop
sub
lods
jmp
inc
push
dec
fdiv
call
pop
subb
sti
mov
mov
jns
lahf
xlat
adc
mov
adc
in
push
pop
enter
dec
hlt
loop
imul
and
pop
aas
decb
mov
lahf
sarb
add
lods
inc
mov
add
stos
sbb
aam
lock
or
push
int
pop
sbb
cmpsl
push
push
add
add
add
push
inc
imul
jno
mov
push
lods
imul
mov
add
mov
jecxz
dec
mov
movsl
mov
pop
aam
cmpsb
fisttpl
inc
test
mov
int
dec
xor
out
mov
cs
add
rol
mov
fisttpll
icebp
xlat
push
scas
ret
cmpsl
inc
pop
lock
pushf
sub
inc
sub
insb
outsb
fstpl
dec
popf
loop
push
loop
cmpsl
pop
insl
xlat
xchg
mov
sbb
sti
nop
mov
es
lock
or
aam
add
push
xor
fists
and
mov
ret
mov
or
mov
xchg
stc
push
std
loop
jno
or
loopne
push
sub
adc
bound
in
push
inc
dec
xchg
mov
mov
mov
jnp
pop
inc
int3
cmp
xchg
add
sub
jp
frstor
or
adc
xor
sub
rcl
pop
adc
dec
xchg
jbe
push
out
in
mov
mov
inc
ret
and
pop
adc
mov
loopne
les
fmuls
push
imul
mov
imul
inc
mov
cmp
pop
fiaddl
xchg
into
and
outsb
inc
lds
adc
fwait
push
mov
sbb
fwait
or
dec
or
call
gs
adc
mov
adc
cwtl
ret
rcrl
pop
xchg
test
add
mov
push
aam
jbe
sbb
js
lock
ljmp
mov
jbe
inc
cld
scas
inc
xchg
mov
sub
rcll
xchg
cmp
push
std
std
ljmp
aad
ja
adc
xor
call
jl
inc
cwtl
inc
cmc
aas
pop
xorb
stos
int3
popa
cmp
xchg
dec
or
or
push
push
jne
sarl
sbbb
cld
in
mov
sub
enter
add
add
cli
fwait
cs
inc
pop
insb
cmp
mov
sub
xchg
subb
repnz
or
outsl
adcb
lea
and
fwait
push
repnz
lcall
pusha
jecxz
pop
xor
test
leave
mov
inc
pop
or
xchg
hlt
mov
lret
pop
cld
dec
insb
pop
lock
test
mov
mov
cmpsb
mov
push
mov
mov
lock
ret
jg
int3
not
shll
jb
pop
sub
sub
dec
or
lret
cmpsl
shrb
jne
inc
mov
cmp
cmp
push
orb
dec
adc
imul
pop
mov
mov
int
jge
out
add
mov
xorb
test
pop
fs
add
mov
add
inc
test
add
scas
mov
pushf
out
and
ret
and
stc
xchg
add
cmp
repnz
popa
das
ret
mov
jl
cmc
inc
das
jmp
in
idivb
mov
in
cmpl
and
decl
ret
dec
ret
cld
mov
fwait
sbb
pop
rcll
bound
xchg
adc
sbb
push
movsl
xor
mov
subl
jns
push
jbe
pop
fs
loope
xchg
inc
xor
xlat
or
aaa
jecxz
jbe
mov
inc
jge
sbb
scas
cmp
add
repnz
sub
xchg
js
shll
cmp
aad
adc
jecxz
jmp
mov
lret
mov
adc
fcoml
loope
dec
xlat
add
or
add
pop
jge
mov
bound
lcall
mov
jo
fiadds
xchg
inc
ret
and
mov
pop
test
scas
imul
mov
int
mov
in
xor
aad
add
scas
shl
adc
push
dec
mov
xchg
lods
fldt
adc
xchg
jg
push
add
out
jbe
adc
xor
aaa
mov
dec
sbb
add
sub
lcall
jbe
and
shll
enter
xchg
inc
mov
cld
inc
add
inc
jno
cmp
dec
mov
push
out
out
pop
sbb
mov
loopne
push
xor
mov
sbbb
mov
popa
xchg
or
in
and
ficoml
sbb
mov
or
xchg
push
pop
and
lock
sbb
xchg
mov
cli
insl
mov
sbb
xor
jle
or
lcall
std
add
stos
mov
push
gs
test
in
jg
jo
push
jb
bnd
pop
cmp
inc
xor
lock
adc
mov
bound
sub
out
lods
les
xchg
lock
dec
add
imul
mov
rolb
mov
mov
add
push
mov
jne
xor
inc
push
mov
xor
sub
dec
lock
pop
popa
lods
push
xchg
jp
loop
and
push
or
or
or
lock
in
js
push
and
test
imulb
test
add
daa
hlt
test
and
jge
xor
in
xorl
pusha
xor
pop
enter
sub
jno
or
out
push
jp,pt
inc
adcb
imul
les
cmp
cld
mov
mov
aaa
sbb
mov
jl
fists
add
xor
loopne
ljmp
fcomi
add
add
test
inc
sub
pop
repnz
push
cmp
push
pop
sub
das
mov
in
mov
ja
cwtl
into
aam
into
push
mov
push
aam
out
mov
fsubs
mov
mov
mov
sbb
add
mov
arpl
dec
call
pop
add
cmp
xchg
add
and
jmp
lret
lret
test
test
push
sub
inc
fldt
rorb
sahf
sbb
lods
imul
or
ja
adc
inc
out
xchg
jle
jb
and
lock
sarb
rol
pop
pop
adc
or
scas
pop
mov
xchg
inc
jge
inc
adc
std
push
hlt
idivb
mov
xchg
mov
cmp
lods
repnz
lahf
fldcw
xchg
jbe
jg
sub
jb
lds
mulb
mov
scas
negl
sub
adc
mov
fdiv
adc
rcl
cmp
ljmp
aam
mov
stos
stos
sbb
mov
into
loopne
loopne
cld
jno
add
inc
mov
lret
repz
in
mov
or
test
orb
mov
test
inc
iret
add
sub
pop
jne
fcomps
mov
push
or
pop
add
push
push
ljmp
adc
xchg
inc
pop
popa
sbb
mov
cmp
pop
push
and
push
xchg
orl
jg
adcb
loope
mov
mov
pop
fildl
cmp
sub
jle
pop
call
or
mov
push
push
xchg
pop
lock
cmpsb
pop
js
adc
rcrl
aad
dec
fs
scas
cmp
pop
js
daa
jle
cmp
jo
and
icebp
mov
lock
dec
jmp
jae
int
push
fdivr
call
insb
call
or
push
in
push
cmp
xchg
add
dec
mov
xchg
dec
ss
jae
test
cmpsl
push
inc
loop
push
call
das
mov
scas
add
push
jo
push
cwtl
sbb
shl
pop
add
incb
inc
or
push
mov
dec
sbb
repz
out
and
pop
cmp
add
jg
add
aam
testl
into
adc
pop
or
rcrl
add
jmp
jo
push
push
rcr
jg
jecxz
cmp
push
push
ja
cmp
fidivl
cmpsl
push
adc
mov
push
pop
enter
push
and
das
sub
mov
cmp
push
cld
enter
mov
xchg
add
in
jl
sub
jl
mov
fiaddl
cwtl
mov
or
pop
pop
repnz
pop
dec
cli
mov
push
lock
data16
in
insb
insb
sbb
out
adc
lods
jg
loopne
sti
dec
test
movsb
rcr
add
fsts
add
dec
dec
jae
mov
cmpsb
jmp
ljmp
addl
inc
sahf
out
inc
mov
sbb
nop
jbe
mov
xor
xchg
add
insb
into
jp
ret
mov
pop
je
mov
pushf
outsl
test
ficoms
in
call
adc
mov
sub
imul
in
mov
or
push
sub
outsl
clc
das
or
push
add
mov
sahf
jns
repnz
xchg
jb
stos
jg
sub
or
pusha
jl,pt
dec
or
stos
add
daa
push
mov
jb
push
inc
test
add
and
stos
cmp
adc
ss
adc
das
into
push
outsb
or
loopne
jmp
push
mov
cs
subl
pushf
mov
addl
sbb
dec
ja
test
push
pop
pop
aam
adc
jge
mov
push
mov
lock
adc
cmp
dec
jno
jne
scas
stos
pop
sub
jecxz
mov
push
inc
push
bound
ja
dec
add
adc
inc
xchg
mov
adc
ds
icebp
sub
or
mov
sub
inc
and
mov
sahf
sarl
adc
pop
inc
sub
ficomps
cmp
nop
bound
outsl
sub
push
mov
hlt
or
insl
mov
and
nop
loope
jg
ffree
andl
mov
push
mov
sbb
test
in
fadds
add
mov
sbb
sub
lds
loope
push
mov
push
and
dec
das
adc
stos
arpl
in
dec
and
adc
incl
xchg
ret
les
xlat
pop
xchg
sarl
inc
xchg
jmp
mov
add
adcb
adc
cltd
nop
sub
and
test
dec
bound
sub
sbb
fidivs
jne
sbb
and
in
or
shrb
gs
out
clc
stos
xchg
inc
addr16
add
pop
mov
mov
cmp
sarl
jecxz
pusha
dec
or
cmpsb
hlt
stos
std
adc
outsb
sahf
test
sub
pushf
mov
cmp
pop
dec
fadds
mov
cmp
stc
lds
flds
mov
mov
xchg
inc
mov
jp
aas
sub
cwtl
sbb
ret
or
mov
ret
decb
or
fmuls
or
or
pusha
out
sahf
popa
and
xor
inc
jg
lock
xor
sub
or
inc
loope
imul
and
add
hlt
fcompl
push
or
sbb
lods
pop
pop
or
pusha
pusha
and
insl
push
push
pop
or
call
push
ljmp
sub
xchg
dec
insb
mov
mov
loopne
test
stos
mov
ret
inc
aaa
xor
jg
fcomps
repnz
dec
jb
pusha
push
mov
jbe
add
mov
nop
addb
or
test
mov
lock
cs
add
sbb
out
mov
push
outsl
add
sbb
adc
addr16
push
add
rorl
lock
fidivrs
pop
cli
fnstsw
hlt
cmp
or
adc
movsb
dec
or
lock
in
dec
call
and
xchg
std
jg
fwait
inc
mov
repz
inc
xor
and
mov
enter
mov
pop
xchg
rorl
icebp
sub
mov
or
add
aam
pop
and
aad
push
in
scas
mov
call
inc
jmp
in
add
and
loopne
pushf
push
insb
add
adc
cmp
pop
int3
inc
push
cwtl
xchg
xchg
jo
or
xchg
notl
mov
sub
sbb
jecxz
xor
pop
loope
lahf
jle
loope
xchg
nop
cmpsl
subb
and
sahf
mov
out
push
lret
adc
jbe
js
hlt
es
adc
adc
scas
pop
aam
fs
pop
xlat
sbb
jg
stos
lret
push
mov
sub
cmpsb
lret
fdivl
inc
loopne
fiadds
mov
mulb
push
dec
xchg
ficomps
cltd
jp
ret
cmp
add
cmp
das
jo
and
push
clc
loopne
push
sarb
cmpsb
dec
mov
lods
inc
mov
rorb
scas
cmp
xlat
repnz
sbb
repz
or
ret
or
fcom
xchg
stos
outsb
cld
out
push
test
lahf
fs
ss
and
adc
or
mov
cmp
movsb
outsl
pop
push
or
and
aas
scas
dec
adc
jp
outsl
out
outsb
dec
pop
cld
bound
cmp
popf
jb
push
jp
mov
dec
jo
int3
jo
jne
mov
mov
pop
inc
lcall
aas
xor
or
pusha
popa
pop
loope
cmp
ljmp
bound
mov
fisttpll
call
xchg
movsb
ljmp
call
mov
cmc
call
mov
push
orb
enter
adc
cld
scas
fwait
push
push
imul
hlt
sbb
dec
jo
mov
xor
jle
adc
dec
jl
imul
imul
xchg
inc
cmp
repz
xor
or
pop
push
cmp
test
dec
add
mov
xor
ja
insb
outsb
cmp
mov
push
add
mov
decl
xor
aaa
ja
adc
and
inc
cs
sbb
sbb
arpl
jns
cld
stos
or
cld
andb
mov
cmp
sbb
sbb
ret
inc
shrb
push
fimull
mov
sbb
lret
or
cmpl
add
setns
cmp
or
lock
ret
out
add
pushf
pop
pop
xchg
mov
dec
cs
out
test
fs
cld
call
mov
ja
mov
imul
popa
pop
sar
ja
mov
xchg
dec
popa
aam
cmp
cli
orb
aad
das
add
enter
mov
pop
mov
cmp
fbld
pop
add
adc
pop
out
xor
roll
ja
fdivrp
cli
rcll
push
repnz
add
mov
push
cld
test
pop
adc
jg
or
daa
imul
ljmp
shl
dec
pop
bound
xchg
movb
ret
mov
arpl
inc
mov
sbb
test
or
push
add
fidivrl
sarl
fwait
push
notb
cmpl
add
jo
testb
cmc
mov
fmuls
sub
pop
mov
jo
dec
and
fwait
add
inc
add
sahf
inc
mov
test
leave
test
or
mov
subb
cmp
cmp
repnz
rol
outsl
inc
push
pop
and
pop
outsl
pop
and
sbb
out
inc
test
xchg
roll
divl
sbb
sub
sub
xor
sarl
xchg
aaa
fbstp
outsb
clc
and
enter
mull
push
mov
je
xor
pop
call
mov
imul
pushf
push
dec
das
inc
push
mov
cmpsb
xlat
stos
ficompl
test
sahf
cmpsl
sub
ljmp
add
negb
ds
push
dec
sub
hlt
sub
cwtl
adc
adc
xlat
ret
add
adc
xor
push
push
loopne
mov
inc
mov
xor
sub
pop
cli
sub
and
sbb
cs
and
and
mov
and
push
shlb
jb
repz
jle
and
ret
sub
cmp
pop
add
decl
mov
mov
dec
nop
out
add
loopne
faddl
cmpsb
cmpsl
mov
dec
or
dec
andb
mulb
mov
and
xor
int3
out
insb
add
mov
ret
adc
clc
add
jmp
and
push
mov
pop
lock
out
movsl
cld
push
je
jp
or
popa
pop
pop
mov
aad
xchg
call
dec
lock
dec
cmp
js
or
push
popf
ljmp
xchg
out
mov
mov
sahf
jns
add
mov
adc
mov
pop
sbb
adc
jne
add
cwtl
hlt
je
adc
xor
mov
and
sub
dec
aas
fisubs
fsubrs
nop
and
sbb
xchg
push
icebp
scas
dec
add
add
inc
sbb
js,pn
int3
aaa
cld
jmp
inc
xchg
in
jmp
bound
sbb
loop
jge
hlt
arpl
jp
xchg
mov
sub
or
push
cmpsb
mov
and
cld
mov
std
adc
icebp
pop
push
pop
ljmp
fstps
sub
sti
ss
das
imul
imul
outsb
or
mov
cmp
test
stos
jo
call
xor
insl
jp
seto
ret
push
add
xchg
aaa
ss
inc
movsb
mov
jb
ret
xchg
fsubl
mov
sbb
sahf
arpl
mov
cmpl
push
orb
pusha
push
mov
int
jp
xor
test
out
in
js
dec
subb
or
jl
push
scas
adc
sub
cmp
mov
int3
jg
jbe
push
xor
fidivl
popa
jmp
inc
clc
xchg
rorb
pop
enter
adc
dec
pusha
mov
mov
dec
adc
add
xchg
fdivrs
lock
cmp
dec
sbbb
test
aad
pop
push
push
insb
in
mov
mov
pop
mov
cmp
sbb
shlb
adc
mov
loop
out
add
fistps
inc
fwait
mov
adc
loope
fwait
je
nop
jecxz
push
cmp
sub
mov
shlb
jecxz,pt
adc
aad
inc
aas
pop
adc
loop
shl
adc
fwait
lcall
cmp
mov
ds
fstl
xrelease
jg
cmp
arpl
inc
push
es
stos
dec
ljmp
cmpl
xchg
mov
push
frstor
push
insl
bound
loop
scas
inc
roll
icebp
jbe
xchg
fcompl
out
mov
jp
outsb
faddp
add
mov
pop
call
and
sbb
lods
lret
jp
aaa
mov
shlb
mov
or
bnd
inc
ret
decb
adc
and
pushf
lcall
sub
sub
mov
adc
mov
data16
push
xchg
mov
int3
mov
pop
aad
shrb
cmp
addb
scas
fcomps
decl
jbe
mov
jge
pop
sub
xchg
or
add
xor
stc
inc
sahf
sub
in
sub
mov
inc
je
mull
insl
or
dec
mov
push
aaa
mov
mov
and
in
xor
sub
imul
lods
sub
inc
pop
and
repz
push
inc
sub
add
dec
scas
mov
pop
mov
in
int
push
imul
outsl
push
jecxz
insb
lret
sarl
fistpl
cmp
adc
mov
mov
xor
or
out
push
and
adc
les
hlt
fmull
decl
movsb
aaa
aaa
xchg
cmpsb
imul
jg
mov
les
mov
adc
bound
sbb
clc
and
int
sub
add
mov
aas
movsl
subb
dec
and
sub
ficoms
inc
push
cmp
clc
mov
ret
loope
adc
pop
mov
jo
shll
xor
fildll
adc
mov
fimuls
cmp
or
int3
sub
lahf
inc
dec
lods
mov
int3
test
push
dec
add
stos
and
fidivrl
mov
rclb
leave
sub
call
xor
jae
push
jl
sub
mov
in
or
ljmp
add
jae
add
lcall
data16
adc
or
inc
cs
test
lock
or
push
push
xor
incl
cwtl
xchg
pop
adc
xor
fnstcw
cld
xchg
mov
testl
call
sarb
push
and
sbb
xchg
adc
add
jbe
adc
nop
testb
scas
push
pop
fsubs
or
scas
in
dec
hlt
mov
xor
lods
sarl
xchg
sbbb
push
clc
mov
call
and
arpl
mov
jbe
daa
jle
pop
xchg
aaa
push
aas
outsl
push
aaa
or
dec
test
mov
ljmp
daa
dec
adc
cmp
pop
push
sub
aam
clc
jmp
cld
jne
push
int
inc
cmp
test
push
pop
cld
cwtl
sub
or
flds
cli
popa
sahf
add
addl
lret
cli
xor
jmp
cmp
add
add
movsb
mov
js
shrl
andb
test
push
push
fstl
scas
add
adc
sbb
xchg
mov
leave
xchg
jmp
push
sub
call
jle
test
push
movsb
sbb
mov
mov
adc
out
add
mov
or
out
nop
ficoms
fucomip
dec
mov
adc
mov
pushf
or
shrl
fimull
enter
or
js
xchg
jecxz
lock
sahf
cmp
mov
loopne
mov
insb
push
mov
cmovae
es
mov
inc
sbbb
jle
xchg
mov
jp
les
push
cmp
dec
test
bound
das
std
fbld
lods
and
mov
mov
xor
pop
loopne
loope
pop
inc
add
xchg
jo
or
sahf
xchg
repz
dec
mov
popa
lret
cs
add
cmp
mov
repnz
aam
mulb
call
cmc
dec
mov
mov
sti
sub
inc
loop
xor
cld
sub
or
push
bound
pop
mov
push
add
adcb
dec
faddp
lds
addr16
cmp
mov
cmp
scas
pop
push
jg
adc
cmp
pushl
es
subl
inc
cwtl
xor
or
xchg
fmulp
xchg
ss
loop
loopne
dec
repnz
inc
jns
adc
cmpb
into
or
fbld
gs
mov
sbb
mov
xchg
lea
jge
inc
add
sti
mov
push
xchg
add
mov
shlb
push
xor
adc
cli
pop
in
dec
icebp
xchg
jge
stos
or
andl
push
pop
jnp
icebp
inc
pushf
les
ljmp
popa
mov
andb
jns
xor
test
xchg
add
in
cmp
shr
and
add
incb
scas
repz
jecxz
jle
xchg
mov
xchg
push
in
dec
pop
stos
dec
mov
outsb
std
or
xor
lcall
jle
pop
mov
ret
mov
ret
das
sbb
mov
and
fcomp
cld
fadds
out
stc
test
stos
push
xlat
xchg
pop
popf
test
cmp
mov
push
xor
lods
neg
fwait
jg
push
std
lock
cmpsb
or
xor
mov
dec
pop
test
pop
jle
cli
ljmpw
inc
add
mov
fdivrl
movsbl
adc
adc
decl
leave
cs
add
call
xchg
add
mov
les
or
add
xchg
xchg
mov
test
fistl
subb
mov
or
sbb
popa
int
xchg
insb
or
xor
shlb
ja
push
fstpl
mov
pop
jge
jmp
push
inc
and
push
or
insl
imul
pop
add
jl
cmc
dec
loope
mov
jge
dec
push
push
js
xchg
fldl
mov
sbb
icebp
pop
rol
inc
mov
outsl
lods
aam
mov
add
inc
or
imul
aas
fcom
dec
movsl
xchg
stc
pop
inc
or
mov
lret
lods
inc
insl
out
pusha
es
icebp
push
js
fidivl
outsb
dec
adc
rcrb
sub
int
pop
std
xlat
dec
ret
jecxz
pop
jle
mov
aad
mov
xchg
dec
je
or
push
out
movb
mov
out
nop
stos
fiadds
inc
bound
ds
or
sbb
jg
loopne
test
xor
test
add
mov
icebp
adc
mov
gs
aaa
fildl
sbb
orb
jp
mov
adc
enter
xor
aaa
cld
xchg
dec
roll
sti
pop
mov
and
and
jl
pop
or
repz
insb
add
inc
inc
xchg
and
stos
les
mov
pop
mov
test
or
cli
inc
lcall
xchg
push
pop
dec
dec
cmp
movsb
test
jg
loope
dec
and
xor
push
incl
inc
shr
nop
xchg
outsl
cmp
test
in
inc
cs
adc
cmc
ret
xchg
stos
sar
into
mov
dec
fxch
sahf
xor
icebp
add
and
lret
loope
sub
mov
clc
dec
nop
iret
jle
or
cmp
mov
cli
add
nop
iret
dec
mov
or
pop
cs
mov
ret
adc
cli
lahf
sub
fcmove
hlt
cmc
rorb
test
insl
mov
inc
pop
push
or
std
es
xchg
mov
jmp
or
stos
cltd
mov
popa
adc
push
push
lret
dec
roll
add
xchg
aas
inc
hlt
sbb
jl
push
xor
fsubr
outsl
push
add
push
xchg
fcomps
loopne
or
stos
mov
add
add
push
sub
push
cmp
inc
add
out
mov
inc
shlb
jle
sub
cld
incl
sub
add
mov
adc
divb
push
jo
cmp
fld
out
loopne
movsl
mov
mov
fisubrl
inc
add
push
ss
push
imul
add
cmovb
lock
inc
enter
dec
pop
push
sahf
insb
jns
movsb
mov
adc
in
mov
bound
adc
pop
mov
mov
push
mov
loope
dec
cmpb
push
lahf
mov
xchg
xchg
call
dec
mov
push
sarl
and
pop
fucom
dec
and
js
cmp
jecxz
lret
rcrb
sub
jne
aam
pop
add
jnp
je
or
insb
mov
add
add
mov
call
jmp
jge
pop
or
hlt
cmp
incb
pop
xor
insl
jmp
mov
popa
rorl
and
xorb
pop
in
mov
adc
in
fisubrl
jne
sarl
dec
decl
xor
xchg
mov
push
adc
add
inc
testb
aad
sbb
mov
push
xchg
and
mov
dec
insl
inc
jge,pn
inc
push
add
sub
jns
push
movb
int3
sbb
cmp
rorl
mov
inc
xchg
lock
scas
pop
rorb
mov
in
jo
or
andb
sub
sub
dec
dec
ret
adc
aas
mov
xchg
ret
cwtl
pop
aad
pop
cs
add
mov
mov
aas
jecxz
in
inc
int3
ds
jecxz
sub
xchg
test
nop
cmovp
sub
sub
adc
jmp
cs
mov
jge
repnz
add
adc
ljmp
fmuls
cmp
xor
sub
mov
out
xchg
jl
sub
pop
mov
push
fs
pop
rorl
fdiv
js
stos
ja
aad
or
stos
pop
sub
lea
js
imul
jg
push
or
daa
xor
ljmp
lea
sbb
xor
nop
sub
push
adc
fldenv
rol
xlat
ffree
and
pop
adcl
dec
dec
adc
insb
clc
xchg
aaa
push
popa
inc
xor
pop
int
lret
mov
fidivrs
aad
repnz
nop
jle
sbbb
mov
cli
in
andb
frstor
cmpb
add
sbbb
shlb
xchg
dec
xchg
pop
or
or
in
adc
loopne
mov
jmp
adc
mov
jl
icebp
js
imul
lea
ret
jge
push
repz
and
call
stos
cli
inc
test
incl
pop
xor
rclb
mov
sbb
fwait
inc
call
adc
pop
cli
jo
mov
sub
xchg
std
cmpsl
test
inc
outsb
add
xlat
or
mov
in
push
dec
movsb
mov
push
jecxz
push
ljmp
mov
cmp
sub
jb
call
in
mov
adc
mov
bound
iret
jno
movsl
mov
repnz
mov
dec
add
mov
in
inc
cld
adc
cmp
push
dec
test
pusha
idiv
sub
into
xor
in
sbb
sbb
testb
mov
fiaddl
cmp
cmpsl
xor
inc
adcl
mov
lods
xorb
stos
flds
or
jecxz
fdivr
test
mov
rolb
inc
pop
mov
movsb
ret
pop
inc
inc
push
mov
push
nop
sbb
pusha
addr16
daa
out
mov
test
or
data16
mov
pushf
xchg
adc
dec
iret
out
ja
jo
mov
nop
or
fisttpl
push
push
adc
scas
pop
scas
sbb
pop
jae
jno,pt
pop
outsl
cli
fidivs
mov
pop
push
subb
lods
add
mov
fisubrs
add
jge
sbb
test
es
mov
xchg
insb
sahf
push
lret
lcall
jb
sbb
mov
xor
es
adc
or
cmp
std
xchg
add
inc
dec
aam
and
cmpsb
in
fcompl
out
hlt
xchg
in
sbb
pop
xor
call
in
mov
stos
es
data16
mov
jecxz
test
dec
adc
sbb
mov
push
stos
mov
inc
adc
add
lcall
adc
ret
jg
ljmp
add
inc
fwait
jle
mov
ds
pop
add
push
fsubr
pushf
pop
jmp
mov
mov
cmp
dec
in
push
fnstsw
xor
cmp
push
nop
add
sahf
insb
sarb
mov
inc
sbb
js
push
inc
inc
inc
or
stc
nop
cltd
sbb
scas
add
into
or
pop
cmp
push
lock
xrelease
dec
ret
inc
insb
ss
lds
nop
ret
sub
xchg
outsb
sarb
mov
roll
aam
icebp
testb
jle
sti
dec
ds
daa
add
xchg
rorb
mov
mov
sbb
addr16
sbb
jno
cld
inc
xlat
mov
fdivrs
fisttps
sahf
cmp
add
movsb
dec
fmull
and
lock
adc
movhps
cmp
outsl
push
pop
and
inc
incb
or
mov
scas
sbb
outsl
enter
pop
inc
sbb
rcl
cmp
xchg
push
dec
cmpsb
mov
clc
lcall
sbbl
dec
pop
popf
je
sub
je
icebp
out
inc
shl
jns
ret
stos
mov
adcb
scas
xchg
push
arpl
pop
sbbb
inc
fisubs
xchg
or
mov
bnd
mov
add
dec
push
ffreep
clc
loope
ss
sub
fldl
jbe
inc
movsl
shrl
mov
pusha
lds
xor
cs
in
sbb
or
dec
addr16
rcrb
cmc
add
jmp
daa
test
cmp
aaa
cmp
mov
sub
fmull
mov
add
lcall
add
lods
push
inc
loope
mov
and
cli
jo
xor
mov
push
cli
add
adc
call
adc
push
mov
xchg
jl
jo
dec
mov
mov
mov
cmp
insb
mov
les
jo
arpl
mov
adc
push
pop
add
xchg
aaa
jb
push
lret
add
add
mov
dec
and
mov
loop
and
mov
fsubr
mov
xor
xchg
push
movsb
xchg
jno
imul
xlat
add
mov
jle
or
adc
dec
mov
jb
jg
in
insl
xchg
xchg
sbb
sub
mov
imul
mov
dec
aam
jbe
hlt
mov
jecxz
hlt
incl
stc
mov
inc
scas
mov
bound
sub
jle
pop
mov
loopne
sbb
xor
dec
sbb
and
rol
mov
sahf
add
adc
xchg
mov
add
loop
jle
dec
push
stos
inc
call
lods
sbb
or
sbb
cmp
mov
movl
cmpsb
inc
push
or
add
fstpt
mov
add
push
or
mov
add
sarb
jl
add
mov
or
ds
mov
dec
mov
sub
bound
rdmsr
and
jl
sub
mov
mov
inc
test
lds
mov
xor
push
loopne
sbb
pushl
inc
sub
or
push
jae
lret
pop
in
mov
or
aam
js
loope
sar
pop
mov
loope
mov
mov
aaa
std
mov
jge
int
je
shrl
loop
dec
test
xchg
les
or
rol
push
and
xchg
jle
mov
lds
call
loopne
jmp
loopne
ret
mov
inc
ret
out
mov
imul
andl
xchg
nop
pop
xchg
sahf
push
push
jle
push
cmp
mov
push
lds
add
mov
imul
xor
xchg
and
xlat
add
in
push
dec
jg
enter
dec
add
std
push
jns
or
enter
and
ss
aaa
fsub
ss
pop
push
movsb
mov
enter
clc
xlat
jmp
or
cmpsl
in
or
mov
sbb
lock
insb
hlt
xor
shl
scas
and
push
das
loopne
dec
xchg
add
dec
inc
jno
mov
cmp
sub
call
mov
inc
aaa
mov
mov
xchg
mov
mov
mov
in
adc
in
js
outsl
pusha
cmp
adc
bound
ss
and
jg
scas
or
push
mov
push
scas
addb
cmp
lcall
scas
sbbb
pop
mov
jp
push
or
pop
push
push
or
mov
inc
push
sub
push
loop
add
and
test
ret
and
lock
mov
mov
pop
sti
insl
sar
xchg
xor
xchg
mov
cltd
xor
sbb
pop
pop
mov
xor
mov
data16
fnstenv
cmp
and
fimull
negl
lods
add
stos
lods
add
call
fmul
jmp
fldt
pushf
or
adc
add
repz
sub
orl
cmpl
imul
xchg
xor
mov
sbb
xorl
mov
call
lret
push
jo
les
adc
into
cwtl
mov
cmp
pop
mov
data16
add
fsubl
xchg
add
or
imul
sub
lds
sbb
inc
mov
pusha
lds
inc
push
push
lds
cmc
lcall
sbb
mulb
xchg
test
cld
add
fisubrs
js
and
push
sub
xlat
cwtl
es
adc
ss
out
sbb
cmpsl
add
into
pop
lock
outsl
incb
push
jecxz
js
test
jmp
out
aam
lahf
jno
adc
jmp
inc
ss
roll
ss
mov
xor
mov
and
std
push
or
aam
stc
xlat
jecxz
insb
add
pop
shlb
js
pop
int
sbbb
out
das
int3
sbb
xchg
mov
xor
jmp
jb
aad
mov
pop
push
add
aas
arpl
jl
jecxz
scas
decl
push
fdivs
mov
lea
mov
push
add
insl
add
dec
imul
mov
cli
out
add
decl
call
inc
stos
mov
filds
adc
mov
or
inc
xchg
xor
mov
push
push
adc
lahf
loope
jl
add
adc
inc
or
stos
mov
pop
sbb
push
inc
out
add
xlat
fnsave
iret
push
add
hlt
les
cmp
out
in
adcb
adc
dec
inc
pop
xor
incb
mov
cmp
pop
pop
fidivrl
mov
test
in
ss
pop
mov
imul
xchg
stos
clc
test
xchg
rcll
stos
in
mov
push
adc
testb
xchg
aam
lods
add
dec
jmp
pop
cmp
js
cld
mov
inc
enter
sbb
adc
test
adc
cmpsb
xchg
adc
dec
add
mulb
fidivrs
xchg
enter
push
xchg
pop
fdivrs
orl
or
push
adc
pop
aas
add
aad
decl
popf
and
sbb
mov
sti
cmp
and
int3
fdivrp
nop
or
cld
inc
ret
out
xor
or
out
jmp
cli
pop
adc
mov
adc
sbb
mov
add
mov
sub
jbe
adc
xchg
push
pop
add
mov
push
xchg
jmp
sub
ret
cmpb
mov
inc
mov
mov
jbe
loopne
mov
insl
divb
or
add
cli
aam
lcall
xchg
out
fldcw
adc
mov
jecxz
cmpb
jo
loope
test
mov
int
add
mov
out
push
xchg
jp
pop
mov
ljmp
js
cmp
dec
in
inc
scas
sbb
test
shl
or
cmp
or
mov
push
inc
mov
fisubrs
enter
mov
xchg
mov
stos
mov
push
ret
adc
push
or
xchg
mul
jb
push
outsl
inc
std
insb
xor
dec
aad
popa
sub
mov
nop
adc
pusha
mov
mov
lods
orb
adc
and
xchg
adc
mov
js
jbe
fsubrp
es
jae
mov
sahf
or
movsl
sbb
mov
mov
dec
inc
mov
outsb
add
push
inc
sarb
out
jle
rorb
arpl
lcall
cli
push
push
lahf
idivb
fwait
cmp
push
sub
ret
mov
loop
clc
test
adc
outsb
loop
dec
mov
int3
pop
cld
test
pop
lock
int3
fnstenv
and
insl
call
adc
adc
sub
andl
mov
loopne
outsb
push
dec
add
xchg
push
pop
push
push
loop
and
daa
or
movsl
call
ret
faddp
lock
cmp
je
cs
and
lods
cmp
jbe
adc
or
lock
clc
aaa
push
push
jge
sub
je
movsl
leave
dec
call
stos
lcall
gs
jne
inc
add
stos
or
mov
aam
lds
sahf
mov
push
rcr
xchg
ljmp
xor
sahf
inc
rcll
fcoms
adc
mov
pushf
and
cmpsl
sahf
sbb
leave
mov
fwait
scas
sbb
scas
stc
ss
clc
sarb
icebp
fildl
lds
lcall
cmp
mov
loop
shll
sbb
pop
notb
add
pop
jmp
cmp
cmpsb
in
int3
xchg
jbe
daa
jb
mov
movsl
xchg
mov
movhlps
xchg
lock
js
xor
daa
cmc
inc
push
jge
dec
sub
fsubr
pop
je
psraw
notb
movsb
xchg
out
cmc
inc
outsl
inc
push
inc
xchg
mov
push
in
xlat
aaa
adc
lods
push
dec
orl
cmp
add
lea
ja
orb
jo
popa
pop
cmpb
std
push
pusha
cli
mov
repz
pop
push
and
mov
lods
and
and
aad
lock
insb
dec
jne
dec
stos
fimuls
push
ret
outsl
rorl
push
and
add
loop
xlat
call
cmpb
pop
ficoms
xchg
push
mov
movsb
ljmp
lcall
andb
sbb
or
imul
out
insl
data16
dec
mov
rorb
pop
test
sbbb
std
sub
mov
aad
sub
jp
push
fistl
inc
pop
jl
mov
mov
cmpsb
push
js
in
fistps
sub
movsl
pop
xchg
jle
adc
add
lock
fbstp
xor
popa
sbb
xchg
repnz
sbb
push
adc
push
in
xor
in
sub
mov
pop
pusha
jle
push
sub
bound
lcall
call
movsb
mov
aam
and
jae
and
int3
pop
sbbl
call
xchg
adc
mov
mov
mov
push
popa
mov
pusha
out
and
fmulp
out
push
arpl
or
dec
xchg
dec
out
cmp
test
test
mov
sub
jmp
sbb
inc
mov
and
mov
jnp
fs
inc
inc
mov
into
jg
mov
sahf
pusha
and
out
outsb
in
mov
lret
in
aaa
inc
add
fwait
jle
jbe
imul
inc
or
sbb
call
xor
and
or
sbb
jg
out
mov
shrl
movsb
repnz
mull
repnz
aam
mov
push
mov
xor
fsts
scas
inc
mov
jne
and
gs
pop
cmpsb
jg
jbe
xchg
push
leave
cmp
js
add
bound
adc
leave
lahf
cmp
xlat
nop
pop
imul
outsb
mov
cld
xchg
push
fwait
push
push
jp
and
cmp
adc
pop
clc
or
xchg
push
xor
dec
jl
outsb
cmpb
push
pusha
cmp
inc
fsubr
outsb
jl
fisubl
inc
cld
fisubrs
iret
jmp
loop
movsl
or
and
add
mov
sarb
xchg
cli
sbb
sahf
pop
fcoml
xor
jo
addl
loopne
loopne
adc
rcr
cwtl
adc
inc
xor
add
adc
lret
adc
push
stos
add
pop
jo
push
nop
fst
jo
adc
push
insb
xor
push
jmp
gs
pop
add
mov
nop
insl
test
mov
fcoml
jno
jg
icebp
outsl
fiaddl
mov
mov
pop
jp
push
clc
cmpsl
shll
mov
clc
loope
inc
add
pop
lahf
fcoml
rcr
imul
add
stc
jp
xor
and
and
mov
aas
es
jbe
test
and
ret
or
outsb
test
pop
xchg
add
insb
mov
push
dec
cli
std
insl
push
inc
sbb
or
insb
cld
push
fs
mov
fcomps
jnp
rcl
nop
inc
aad
cmpsl
test
cli
pop
cmc
imul
or
mov
inc
lret
nop
outsl
mov
xchg
pop
adc
mov
or
sbb
push
dec
pop
inc
mov
enter
pop
sarb
push
rorb
jp
mov
xor
in
push
mov
pop
sbb
sahf
call
sub
jmp
ljmp
insb
inc
cli
repz
pop
std
push
cmp
cwtl
push
push
dec
int3
sbb
pop
jbe
test
sbb
decl
sbb
ljmp
cmp
mov
in
into
addl
jle
or
push
jg
mov
add
xchg
cs
xor
das
cmp
rcrb
push
or
cld
xchg
cld
sub
push
mov
pop
add
dec
inc
jmp
mov
test
pop
mov
mulb
mov
mov
mov
push
pop
add
cld
lods
mov
dec
dec
pusha
out
add
sbb
nopl
jne
scas
out
scas
mov
bound
test
lds
mov
into
jg
adc
mov
adc
mov
lahf
or
mov
or
inc
js
iret
jb
sub
jno
and
decl
movl
adc
mov
and
xchg
mov
clc
jp
aas
or
ja
xor
pushw
nop
loopne
xor
push
or
popa
clc
test
dec
xor
rcrl
push
mov
lea
in
cmpsl
nop
hlt
in
mov
decl
in
cli
sbb
add
mov
sub
scas
and
add
je
bound
pop
adc
bound
mov
xor
dec
xor
or
dec
push
mov
mov
int
fwait
int3
imul
dec
pop
or
sub
stc
pop
push
mov
test
iret
call
push
imul
aaa
sbb
adc
out
dec
push
push
xor
adc
cmpl
inc
inc
icebp
dec
xor
add
push
add
cmp
push
add
add
push
push
pop
in
inc
mov
movsl
lock
cmc
fbstp
push
loop
or
push
repnz
or
or
test
gs
jo
inc
add
jp
push
pop
jg
loop
dec
jge
sbb
jmp
or
adc
cli
xchg
mov
aad
sub
fildl
push
decl
ds
sbb
clc
bound
in
addl
push
imul
test
pop
xor
adc
pushl
pusha
dec
mov
lock
add
push
cmc
in
fadds
mov
and
orl
andl
mov
jo
divb
mov
jb
hlt
jecxz
xor
out
cmpsl
adc
std
movq
mov
aam
pop
or
jp
add
popf
cmp
and
inc
push
fmul
adc
mov
push
push
mov
jno
pushf
andb
aad
sub
les
inc
in
adc
xchg
clc
fists
mov
test
js
xor
sub
dec
enter
pop
or
cwtl
lret
lods
cs
xor
lea
cmp
movsb
clc
pop
imul
stos
and
jge
xchg
push
sub
mov
idivb
lcall
fstps
or
push
mov
adc
cmp
arpl
push
lods
jo
mov
sbb
jmp
out
je
loop
dec
ja
cmp
sbbb
test
or
sub
mov
iret
add
popa
bound
jp
or
in
rol
mov
inc
inc
adcb
jl
push
loopne
adc
clc
or
sub
dec
aad
ds
mov
shll
lret
lock
call
fld
fwait
lcall
adc
cmp
lea
add
aad
shlb
into
jne
pop
mov
paddd
xor
ljmp
xor
dec
icebp
lods
add
out
jo
sarl
dec
in
out
dec
pmaxub
add
data16
and
and
loope
je
fisubrs
ficoms
imul
sar
pushf
add
fdivp
loop
incl
ret
inc
enter
inc
xchg
mov
test
cwtl
loop
fidivrl
sub
jl
add
fdivrl
adc
jne
aad
jp
mov
jbe
push
push
das
cli
mov
push
mov
xor
loope,pn
adc
jb
sbb
cmp
repz
mov
filds
in
dec
aas
or
lock
mov
mov
mov
roll
push
cwtl
and
dec
adc
pushf
mov
nop
xchg
sbb
cltd
mov
dec
pusha
loopne
adc
mov
xchg
xchg
jmp
mov
push
pop
cmp
xor
pushf
loop
fildll
pop
cmp
or
cs
sub
push
cld
cmp
xlat
adc
daa
aad
std
ljmp
ret
scas
inc
dec
pop
lods
cmp
in
dec
stos
add
inc
add
bnd
clc
mov
ficomps
aam
adc
mov
pop
insb
testl
cmp
outsb
fldenv
mov
test
lods
out
pop
hlt
sub
lcall
push
ret
sub
xchg
jmp
stos
lds
mov
sub
sbb
nop
and
sbb
out
ret
push
cmp
js
push
lahf
movsb
lahf
jle
inc
mov
or
leave
add
nop
dec
and
cld
xchg
cli
sub
rcrl
add
jb
mov
push
insl
ret
lret
mov
add
adc
pop
and
xor
inc
movsb
mov
push
xor
loope
fs
cmp
incb
xor
pop
mov
es
inc
sub
dec
sub
xor
js
push
scas
mov
dec
lret
into
sub
pop
lock
add
out
test
mov
arpl
cmp
or
insl
hlt
enter
fistps
push
cwtl
pop
mov
jne
cmpsb
js
adc
dec
inc
fnstsw
popa
clc
pop
xchg
jecxz
std
gs
mov
lcall
cmpb
sbb
and
rolb
cwtl
xchg
push
add
movsb
jle
call
pop
sti
pusha
mov
jmp
xchg
mov
add
test
adc
adc
inc
mov
fimull
mov
frstor
inc
adc
or
sbb
maxps
mov
and
mov
sub
add
inc
add
pop
pop
cld
test
and
or
and
mov
dec
aam
out
imul
sbb
into
es
cmp
push
jmp
out
adc
push
xor
push
mov
ss
or
push
ljmp
jmp
jecxz
aam
mov
cs
mov
or
insb
pushf
jl
test
jbe
cmc
or
int3
mov
adc
cld
inc
test
idiv
mov
fdivrs
and
push
add
sub
and
jns
ret
sbb
test
or
clc
cmpsb
or
sti
mov
mov
sbb
std
aas
inc
aad
pop
add
jp
leave
push
or
cmp
jnp
or
cmp
jge
rorb
popa
sub
shrb
lahf
shlb
in
inc
call
sti
sti
and
int3
aam
sysexit
sarl
sbb
pop
mov
lret
in
daa
gs
dec
mov
std
addb
fadds
mov
call
decl
movsb
xor
cmp
mov
sbb
into
adc
push
push
and
int
inc
je
stos
pop
or
out
xchg
sbb
mov
into
mov
ret
add
lds
xor
adc
mov
pusha
leave
xor
mov
test
hlt
ret
xchg
inc
sub
mov
mov
adc
pop
mov
sti
add
cmp
movsb
jbe
cwtl
pushl
nop
dec
adc
adc
inc
icebp
rclb
clc
add
insl
xorl
rolb
xor
mov
loopne
pop
movsb
jl
popf
cmp
inc
push
loop
call
into
fucomi
jb
in
mov
and
xor
pushf
mov
sub
pop
data16
sti
cmp
push
xchg
cmp
jbe
hlt
and
fs
push
mov
mov
dec
loope,pt
sahf
test
rcr
and
out
call
mov
out
push
int
cmp
into
adc
bound
int3
mov
ret
outsl
in
add
push
add
fwait
test
mov
dec
pop
mov
push
outsl
aas
fldt
icebp
aam
scas
jo
jge
mov
fstps
dec
pop
stc
in
cmp
lock
xor
sbb
xor
rcl
sbb
push
inc
jl
mov
das
dec
idivl
and
mov
pusha
sbb
pop
xchg
sub
hlt
sbb
mov
add
ss
insl
loop
pop
xchg
out
insb
movsb
outsl
fcoms
hlt
adc
inc
nop
push
lds
inc
push
fiaddl
adc
push
and
or
inc
orb
arpl
aas
sub
outsb
pusha
fildll
test
ds
movsb
add
ds
jne
or
sub
sbbb
xchg
add
and
xor
fimull
out
cmp
mov
push
aad
push
xor
pop
mov
add
das
fmull
cld
mov
stc
or
lea
xor
push
into
shl
outsb
cs
stos
sub
or
push
dec
jnp
insb
jno
movsb
cmc
cmc
mov
add
xor
push
xchg
push
enter
xor
dec
mov
ficoml
mov
push
test
lds
ljmp
jecxz
or
adc
into
or
xchg
jne
loop
cmpsl
lahf
push
push
shll
pop
mov
pushf
mov
add
or
jmp
cld
loopne
insl
lea
dec
inc
cmp
adc
loope
mov
adc
xor
jo
xchg
iret
cmp
and
lock
loop
fisubrs
jp
nop
sbb
push
shr
in
subb
movsl
outsl
mov
dec
push
mov
push
sub
pop
sbb
add
sbbl
pusha
jo
cs
xchg
roll
testb
test
adc
push
shll
xchg
mov
cli
es
mov
aas
push
lods
cmp
popf
pop
sbb
adc
jecxz
or
test
jo
fwait
pop
adc
shll
loopne
js
addl
shlb
xor
out
jno
sub
nop
ljmp
movsl
xchg
add
shll
test
lea
xchg
pop
in
cmp
cmp
into
test
es
js
xor
xor
test
cmpsb
or
lods
adc
clc
dec
jg
test
cltd
sbb
fst
loop
or
stos
sbb
or
xchg
stos
mov
push
daa
xor
mov
hlt
call
add
imul
mov
movsb
fdivrs
scas
ror
in
sti
or
aam
mov
xchg
mov
shrl
dec
mov
jge
int3
rorl
mov
xchg
sarl
scas
into
loopne
mov
enter
pop
inc
loop
sahf
loope
inc
cs
xchg
push
sbb
sub
jge
fsub
adc
jmp
mov
jnp
cwtl
mov
inc
add
inc
sub
jecxz
dec
jmp
mov
arpl
sub
loop
outsl
xor
cmp
cmp
les
pushf
pop
test
push
lds
sub
and
popa
pop
sbb
ss
pop
in
sbb
scas
out
and
lahf
and
icebp
mov
clc
add
imulb
inc
and
nop
pusha
sub
and
fnstsw
jg
jnp
jp
dec
dec
and
imul
add
insb
mov
mulb
jno
sbbb
popf
pop
sub
lret
mov
dec
inc
loope
pop
cmp
mov
xchg
mov
enter
and
fdivr
push
dec
icebp
sbb
inc
filds
inc
dec
sbb
or
into
add
sub
rclb
sbb
out
mov
sbb
nop
push
iret
xor
jge
push
lods
mulb
fstpt
movntps
mov
std
sbb
mov
or
clc
sbb
aam
jp
subb
test
rclb
push
xchg
lahf
cwtl
call
int3
xor
ja
clc
push
adc
inc
adc
xor
ret
adc
mov
mov
push
mov
mov
loopne
mov
push
orb
rcrb
clc
jle
inc
xchg
loop
push
cmc
cmp
cltd
sub
pusha
sub
je
jb
lret
repz
mulb
push
sub
sbb
add
push
adc
icebp
mov
and
mov
mov
add
and
testl
jns
lds
mov
adc
mov
push
inc
xchg
jns
push
ja
inc
xor
mov
adc
add
cwtl
clc
dec
fmull
inc
ret
sbb
push
adcb
into
fwait
mov
addb
cmpsb
dec
loope
js
and
popa
jl
cmp
mov
mov
adc
jge
fwait
mov
js
sbb
xlat
cmp
subb
sbb
adc
add
pop
lods
dec
sarb
lods
jge
push
jl
push
outsb
mov
mov
sbb
ljmp
mov
inc
mov
pop
mov
push
movsl
jnp
es
dec
xchg
or
xchg
fidivrs
das
outsb
or
push
mov
std
outsl
push
lods
add
nop
sub
jno
jg
mov
clc
sbb
push
mov
xchg
xchg
cmpsb
dec
clc
mov
inc
jns
dec
or
sub
sbb
iret
add
mov
adc
les
jno
mov
pop
lock
imul
inc
jmp
pop
jge
inc
clc
test
push
clc
imul
xor
or
dec
sbb
dec
stc
aas
mov
iret
out
mov
dec
fildl
mov
cwtl
cltd
or
adc
mov
mov
jg
cmpsl
in
dec
xchg
sbb
jp
jb
in
or
xor
ret
xlat
movsl
and
cmpsb
jle
iret
mov
int
lock
ret
or
test
inc
lods
std
cmp
adc
add
mov
xorb
loop
add
popa
sti
insl
push
and
or
pop
lock
fwait
jb
lea
add
xchg
mov
and
and
sbb
arpl
mov
cmpsl
ja
add
test
push
nop
add
jecxz
pop
sub
add
enter
mov
ljmp
jmp
mov
cltd
mov
sbb
out
sbb
jg
adc
fwait
popf
shll
sbb
mov
aam
add
inc
add
sbb
push
cmp
cmp
pop
stos
adc
push
sub
enter
fadds
mov
insb
xchg
jecxz
push
ret
sbbb
daa
test
mov
lock
add
and
adc
in
aas
in
or
inc
lods
inc
je
jb
mov
sbb
out
mov
push
jnp
clc
jg
lret
xchg
and
push
pop
add
jb
sub
movsb
cmc
cmc
mov
xchg
out
jae
xchg
inc
out
add
xor
cmp
lock
stos
lock
fisttpl
push
jp
adc
inc
cmp
scas
push
scas
cmpsb
push
fs
das
pop
push
push
movsb
in
ds
adc
jbe
mov
and
xor
aad
loopne
pop
jne
and
leave
mov
sbb
add
popf
sbb
rolb
mov
push
push
flds
jmp
inc
adc
test
mov
cmpsb
lea
jbe
mov
xor
cli
adc
cmp
inc
lods
sub
int3
push
add
push
test
ja
mov
lret
nop
ds
fdivr
outsl
es
repnz
xlat
inc
ret
scas
jg
repnz
pop
rol
decl
js
cmc
or
lock
xor
jle
subb
mov
inc
jbe
mov
xchg
cs
cmpb
imul
mov
les
cs
scas
sub
movsb
jle
sbb
fcomps
adc
pop
xor
mov
pop
inc
scas
clc
ret
xchg
pop
mov
xor
and
mov
push
aaa
mov
scas
push
sub
add
in
orl
xor
incb
mov
push
mov
jo
clc
shrl
icebp
pop
xchg
mov
out
jnp
push
pop
xorb
in
add
push
outsb
cmp
mov
fimuls
rcrb
in
lods
push
push
mov
adc
jl
insl
pop
outsl
subl
xor
xorb
push
cmp
add
mov
rolb
cli
or
mov
mov
shll
int3
mov
mov
loopne
and
push
dec
das
xor
das
and
jp
mov
sbb
sbb
dec
shrb
stos
xchg
push
dec
cld
clc
and
jo
js
pop
cld
sub
subb
lcall
xchg
cli
jg
dec
pop
dec
push
insb
mov
adc
loopne
mov
outsb
imull
test
pusha
or
js
cmpb
aad
mov
cwtl
fwait
cmpsb
cmp
mov
mov
les
fsubrs
push
add
mov
adc
call
xchg
mov
adc
pop
clc
sbb
xor
or
aas
pop
sti
pop
push
push
cmp
xchg
push
je
mov
and
leave
cmp
mov
inc
lcall
adc
jbe
shl
or
sbb
dec
stos
stc
lret
inc
fs
test
add
fnsave
filds
fmul
fisubl
sbb
clc
mov
dec
out
js
js
test
and
inc
icebp
mov
out
jo
sub
in
aad
xchg
mov
call
push
xchg
push
dec
adc
stos
adc
into
loop
push
insb
pop
mov
movsb
dec
push
iret
mov
lods
movsb
sbb
in
js
ja
push
jb
jns
cli
jg
sbbl
cmp
mov
sbb
dec
imul
addl
out
pop
shrl
push
popa
lods
pop
ret
mov
dec
pusha
pop
fs
imul
mov
rolb
or
xchg
jne
push
outsb
mov
daa
call
mov
sub
xor
dec
jmp
notb
inc
xor
cmc
add
adc
pop
incl
mov
mov
xchg
sub
pop
or
pop
rcr
aaa
pushf
xor
sbb
arpl
scas
hlt
and
ja
mov
xchg
xor
xchg
fdivp
inc
popf
mov
mov
enter
mov
filds
xchg
adc
cltd
outsb
xchg
adc
pop
push
or
mov
pop
push
ficoml
loopne
cmp
dec
add
insb
jbe
movsb
push
shlb
fildll
lahf
jb
cltd
jns
cmp
cmp
repz
jo
movb
aad
or
mov
insb
lock
mov
mov
ds
insb
jbe
daa
mov
mov
lret
loopne
push
jle
dec
sahf
mov
loop
mov
pop
dec
push
clc
outsl
sub
inc
pop
out
mov
inc
pop
mov
fmull
push
dec
push
roll
js
js
pop
and
insb
xchg
pop
mov
stos
cld
cmp
jg
add
add
fwait
xchg
in
notl
lock
jmp
add
ss
mov
adc
cli
xchg
popf
sub
fsin
jle
dec
xchg
or
insl
iret
clc
mov
aad
add
or
xchg
clc
pop
cld
cmp
push
cmpsb
xor
dec
cwtl
or
jb
xor
adc
mov
add
adc
push
sub
loopne
add
gs
push
les
xchg
add
push
xor
inc
mov
in
mov
inc
sub
pusha
inc
push
test
xchg
ret
testb
ljmp
movsb
jne,pn
dec
loopne
test
clc
and
pusha
push
shlb
jbe
mov
adc
add
and
pushw
mov
mov
insl
in
push
addl
mov
pushf
je
jae
shlb
or
fiadds
sbb
jle
test
xchg
jmp
lea
iret
or
dec
dec
pop
adc
mov
inc
fildl
mov
cmp
xchg
rcrb
fwait
push
mov
sbb
add
cltd
div
sub
or
xchg
repz
lock
jg
pop
mov
shlb
dec
inc
pop
mov
jmp
cltd
fs
push
dec
push
add
sarb
add
fcompl
mov
dec
or
in
xor
aaa
loope
sub
pop
incb
mov
add
xor
movsb
add
aam
sbb
imul
mov
mov
sahf
cmpsb
mov
test
lock
and
arpl
lcall
jle
or
call
ret
push
xor
mov
jb
aaa
inc
inc
cmpps
movsb
inc
mov
push
jmp
fisubrl
lcall
pop
mov
adc
movsl
xor
xorps
scas
in
sbb
mov
rol
enter
inc
sbb
mov
adc
inc
decb
mov
mov
push
mov
scas
sub
adc
xor
push
pushf
ss
pop
add
mov
hlt
mov
pop
hlt
xchg
and
shr
push
sbb
test
inc
sub
nop
jmp
push
aad
outsl
std
and
pop
outsl
dec
je
push
call
loopne
pop
xor
sbb
fbstp
int
popf
xchg
call
test
jmp
in
mov
add
inc
and
xchg
sub
pop
sbb
cmpl
into
lea
cmp
mov
lret
and
xor
push
push
inc
dec
addb
rol
inc
sub
rcll
xor
sbb
mov
mov
adc
loope
es
lds
dec
rcr
inc
scas
pop
push
popf
xchg
mov
cs
sub
cmpl
xchg
adc
cli
adc
pop
pop
adc
in
dec
push
mov
push
push
es
and
lods
dec
add
rolb
jmp
mov
inc
inc
data16
scas
pop
call
adc
addl
xlat
mov
push
sbb
es
and
xchg
mov
xchg
dec
mov
add
lcall
dec
push
or
dec
pop
lock
repnz
and
cmp
test
jecxz
fdivr
push
rolb
cltd
clc
fistpll
mov
mov
pop
dec
or
mov
xlat
xor
push
dec
and
lea
in
fidivs
int3
pop
lahf
je
cwtl
jp
cld
push
mov
xor
xchg
push
push
or
mov
js
int3
stos
js
cmpsl
xor
ljmp
shll
sbb
dec
mov
pop
pop
sub
std
stos
clc
lock
and
das
cli
push
add
insb
jge
adc
pop
mov
or
test
das
push
push
mov
or
ss
mov
mov
fcomip
jg
mov
jmp
insl
adc
dec
xadd
mov
inc
int3
dec
xor
mov
sub
and
cmp
sub
cli
rorl
les
popf
jecxz
aaa
lods
jecxz
shrb
pushf
repz
xor
dec
xor
outsb
loope
aas
cmp
adc
out
push
mov
fistpl
pop
xchg
ja
fs
push
jg
cmpsb
lods
fbstp
push
or
leave
ljmp
nop
jecxz
jmp
movsb
add
clc
or
adc
rclb
push
adc
fdivrs
movsb
pop
lcall
into
push
dec
inc
cld
dec
mov
outsl
push
push
bound
imul
cmp
dec
in
and
mov
add
sti
dec
cwtl
dec
jp
daa
cltd
add
jl
call
pop
data16
sub
test
cmp
adc
mulb
pop
sub
adc
add
pop
mov
mov
pushf
add
lret
or
add
ja
filds
aaa
adc
jnp
mov
stc
sbb
stos
cmc
push
std
mov
adc
cmp
out
lock
dec
cwtl
mov
push
or
sub
sub
leave
sbb
lret
push
adc
outsl
dec
into
inc
je
lods
clc
dec
icebp
jbe
outsb
icebp
or
push
les
adc
fnstsw
call
hlt
int
and
push
xlat
aaa
sub
cs
f2xm1
pop
test
jle
ss
cld
bound
fdivl
cmovo
add
pop
ficoms
mov
push
call
shll
daa
sbb
aam
cltd
ss
fdiv
mov
and
in
and
push
add
jae
clc
cmpsb
fdivrl
mov
mov
data16
pop
jns
fldt
ret
mov
mov
mov
pop
loop
lea
cmpsb
out
and
out
xor
nop
xchg
adc
arpl
sub
ficompl
mov
or
pop
xorl
test
push
add
pop
insl
ret
cwtl
clc
xchg
ret
push
push
test
mov
ss
lret
adc
pop
dec
and
popa
pop
xor
mov
adc
imul
inc
scas
add
popf
and
dec
sbb
test
inc
pop
mov
pop
pusha
push
fidivs
jle
sbb
add
loopne
sbb
mov
mov
lods
aam
call
add
mov
movsb
outsb
cmpsb
mov
test
dec
cld
push
mov
adc
fsubrl
into
loopne
jp
mov
je
sub
mov
push
mov
and
outsb
aad
jne
and
push
or
mov
sub
or
repz
in
test
xor
in
add
lods
int3
push
cmp
adc
jg
sbb
push
sub
movsb
mov
insl
jnp
cmp
rolb
test
stos
shrb
sahf
sbb
aaa
dec
sub
inc
push
mov
out
mov
lods
mov
mov
addl
jb
mov
popf
dec
sub
mov
fcoml
mov
mov
sbb
test
icebp
pushl
imul
stos
or
cwtl
push
adc
sahf
subb
dec
add
lods
sbb
mov
jg
fistpl
mov
jb
iret
negb
lods
push
push
orl
dec
cmp
pop
push
and
mov
add
sbb
cmp
xchg
mov
mov
or
add
jbe
mov
pop
inc
mov
outsl
insb
fisttpll
int3
rcll
pop
repnz
cmpl
in
mov
cld
lcall
jno
sbb
sub
das
dec
add
push
inc
stos
rol
bound
and
xor
adc
add
test
jo
fisubl
or
xchg
sbb
ljmp
dec
adc
add
inc
pop
jp
roll
out
add
lock
dec
jnp
sarb
ret
mov
and
loopne
lock
xor
pop
test
jne
dec
hlt
and
les
not
je
movl
lock
in
jle
cmp
jbe
jle
jnp
push
mov
ja
sub
ja
adc
dec
inc
in
mov
loop
fisubrs
inc
inc
or
cmp
call
xchg
mov
jg
pop
sarb
test
inc
add
jns
or
jecxz
cli
add
outsb
test
test
xchg
push
pop
xlat
push
dec
dec
sbb
mov
pop
mov
out
into
xchg
lret
jo
jmp
insb
mov
fisubrs
pop
fs
mov
mov
ljmp
xchg
or
adc
adc
data16
sub
xchg
mov
icebp
aad
sti
shl
mov
mov
das
jb
dec
nop
insl
inc
in
jno
push
mov
insb
scas
and
lahf
pop
inc
adc
pop
push
lock
jmp
cwtl
insl
xor
mov
enter
repz
push
sub
and
cs
fcmovnu
mov
mov
mov
fmuls
cmpsl
mov
pop
pop
fbld
push
adc
fwait
xchg
mov
aam
mov
push
bound
sbb
add
add
orb
hlt
hlt
xor
fldenv
xchg
jb
bswap
inc
jg
add
sbbb
rclb
pop
lods
imul
addb
and
sbb
iret
sub
loope
enter
dec
loope
xchg
mov
loope
lods
in
sahf
jb
mov
xlat
inc
or
xor
jg
mov
pop
loop
inc
imull
or
adc
stos
in
or
mov
mov
inc
ret
push
and
ss
cli
in
in
scas
insb
data16
mov
mov
sub
cmp
xor
xchg
lret
hlt
mov
mov
pop
sbb
xchg
adc
mov
dec
mov
cmp
push
and
mov
push
in
loope
cmp
call
xorb
add
or
pop
sub
mov
or
and
cmp
mov
inc
xchg
mov
out
cmp
add
push
ljmp
imulb
loope
or
ret
adc
rcrb
jo
cmc
fisttpl
rcll
mov
sti
rdmsr
orb
sub
fldt
or
cli
jno
inc
inc
lds
into
call
gs
xchg
test
arpl
pop
push
repnz
xchg
insb
pop
and
xchg
out
jl
scas
mov
inc
ljmp
pusha
sbb
lock
decl
dec
fs
push
scas
or
jb
pop
push
xor
std
test
jle
inc
hlt
mov
push
sub
ficomps
xchg
and
and
int
test
stos
in
pop
clc
pushl
adc
loope
testb
xchg
push
cmp
add
add
shlb
scas
xlat
out
sub
outsl
adc
and
mov
pop
sarl
add
jno
cmpl
inc
pop
cmp
dec
lods
imul
sbb
sub
stos
outsl
mov
mov
or
jns
std
sub
sub
loope
xor
lods
mov
and
movsl
popf
dec
mov
rcl
std
jg
decl
mov
imul
jmp
int3
bound
pop
cs
nop
jl
xchg
mov
ret
ja
jecxz
mov
xchg
push
popa
sub
sbb
xchg
mov
mov
xchg
jle
pop
call
stos
lock
loopne
andl
push
dec
das
fildl
xor
cld
jle
test
sub
mov
enterw
cmp
pop
sub
cmp
jnp
sbb
roll
and
iret
vaddss
shlb
push
mov
pop
mov
jle
add
pop
lods
inc
popf
cltd
xchg
and
mov
mov
push
test
outsb
and
mov
hlt
push
jecxz
out
ficomps
test
sbb
push
sbb
scas
cli
jbe
icebp
xor
enter
inc
sbb
pop
and
pop
shlb
jmp
loop
call
scas
int3
mov
mov
rorl
jmp
pop
loop
mov
mov
ret
sub
jl
mov
sub
or
in
mov
sub
jecxz
push
add
push
les
mov
xor
sub
test
add
call
xchg
adc
inc
out
pusha
xor
insl
mov
adc
aas
insb
and
pusha
orl
filds
orl
jg
pop
cmp
and
mov
mov
mov
xchg
in
cmpsb
sub
inc
add
ret
push
gs
mov
sub
inc
testb
ficoml
outsb
adc
or
ret
add
cmpsb
fs
test
loopne
out
push
push
push
sbb
mov
xchg
int3
push
aad
pop
enter
aas
and
call
mov
cmp
mov
sahf
dec
add
adc
scas
mov
jno
inc
popf
inc
add
mov
stc
cmp
add
jg
or
inc
ljmp
imull
dec
add
xor
in
pop
add
sti
jmp
xor
xchg
xchg
das
and
add
popf
sub
mov
sub
cli
jno
mov
add
inc
shll
ss
mov
aam
push
jno
push
call
inc
jb
jmp
stos
ss
es
lock
sbb
ja
cltd
inc
je
pop
mov
arpl
mov
sahf
std
mov
inc
inc
mov
adcb
jbe
sub
faddp
les
add
imul
sbb
ja
pop
and
clc
les
push
nop
cmpsb
push
loopne
jecxz
int
cmp
jnp
push
incl
push
test
jge
xor
push
cli
std
insl
mov
fmull
jmp
mov
es
cmp
shrb
ret
stc
shrl
pop
in
adc
mov
lock
xchg
rcl
add
mov
and
insl
inc
sub
insb
insb
push
ret
jbe
jg
add
cmp
repz
add
add
add
xchg
outsb
jae
or
shlb
push
push
stos
mov
ss
mov
sbb
pop
out
shrb
jb
inc
ret
and
jno
inc
lea
xchg
loopne
mov
cmp
mov
or
pop
dec
cs
es
xchg
and
mov
sbb
repz
jl
scas
push
sti
lahf
cld
fcoml
cmp
add
scas
lret
xor
aad
call
push
mov
loope
loope
add
add
mov
stos
xor
dec
addl
pop
cld
clc
mov
pop
cmp
stc
adc
adc
stc
xchg
xor
mov
and
push
sti
ficoms
in
inc
jg
cld
cmp
dec
incl
movsl
xor
or
mov
out
push
add
add
testl
ret
add
outsb
push
sbb
mov
enter
mov
shrb
call
loopne
lcall
pop
lock
sub
add
pop
xorb
inc
dec
mov
add
sbb
mov
fildll
push
inc
test
pop
js
jecxz
je
pop
loop
shll
outsb
push
scas
ljmp
das
push
mov
xchg
test
sbbb
enter
sbb
stos
bound
push
pop
xor
and
or
dec
sbb
mov
jo
loopne
or
jns
call
or
jns
dec
xor
fs
jg
pop
pushf
loope
push
ljmp
sti
subl
test
fdivrl
lods
inc
outsl
mov
dec
jge
fldt
test
push
clc
stos
inc
mulb
jmp
js
pop
jne
dec
pop
push
dec
ljmp
fs
lods
sarb
scas
out
jg
xchg
test
iret
dec
packuswb
decl
add
or
mov
xor
jo
fdivp
out
out
clc
sbb
pop
pusha
mov
mov
dec
hlt
das
push
push
adc
call
dec
outsl
cli
dec
mov
insb
xchg
idiv
into
mov
jne
push
adc
aam
jne
std
in
cmp
out
dec
inc
rcl
into
jae
and
jle
testb
andb
ret
scas
aam
pop
insb
incl
out
xor
rcrb
in
xor
inc
lock
cmp
ljmp
push
jo
adc
add
mov
adc
scas
in
into
add
mov
inc
ljmp
mov
enter
push
test
data16
out
movsb
mov
xor
or
xorb
jns
mov
fwait
mov
outsl
fbstp
mov
mov
xor
cmp
jae
mov
lcall
orl
mov
fnstcw
and
pop
mov
dec
js
sub
mov
lods
adc
insb
mov
cmpsb
sbb
sub
repz
fs
inc
je
xchg
sbb
cmp
test
pusha
xchg
cmp
insl
cld
ljmp
xchg
inc
ret
movsl
xchg
mov
xor
dec
push
pushf
pop
cwtl
add
stos
dec
outsb
loope
movsl
dec
push
mov
sbb
cli
mov
jmp
pop
add
mov
in
adc
pop
inc
shr
cmc
and
xchg
push
sahf
shrl
lret
push
sub
mov
vandpd
jbe
fisttps
jecxz
ds
fdiv
jl
loope
mov
dec
sub
pop
lret
sbb
ret
outsl
outsl
mov
cwtl
jp
jbe
repz
sti
stc
decl
in
fnstcw
into
mov
or
mov
sub
shlb
mov
jo
add
fmull
fs
lods
loop
popf
sbb
out
sub
iret
or
and
add
jmp
fadds
lds
es
xor
pusha
and
xor
cli
int3
jbe
xchg
push
ret
pop
pop
fists
icebp
scas
lock
jecxz
push
xchg
xchg
xorl
sbb
push
jne
lea
mov
adc
cs
mov
into
push
jle
mov
dec
inc
sahf
or
into
mov
xchg
push
mov
ret
sub
addl
mov
stos
jo
mov
outsb
xchg
or
xor
gs
ds
stos
or
sub
shrl
or
mov
mov
fsubrl
mov
mov
xor
add
es
jge
and
xor
xor
outsb
add
ds
das
dec
clc
mov
or
adc
fcoms
mov
je
cmp
aad
inc
in
inc
aad
xor
aaa
and
out
clc
insl
and
dec
stc
jne
mov
mov
filds
push
xchg
lock
dec
divb
add
cli
loope,pt
pusha
add
insb
mov
shll
inc
loop
scas
cmp
cmp
add
or
int3
push
pop
ljmp
push
or
mov
scas
aam
and
roll
aaa
pushf
dec
add
dec
mov
sbb
jns
adc
outsb
clc
or
dec
or
dec
sub
and
xor
and
hlt
incl
mov
out
pop
sti
into
adc
mov
adc
leave
add
inc
icebp
sub
das
repnz
dec
cmp
loopw
push
lods
repnz
cmc
add
xchg
cli
inc
fidivs
mov
js
push
lods
pop
js
orl
pop
jo
push
fisttps
lods
clc
mov
clc
hlt
mov
jmp
inc
xchg
out
cwtl
sub
cmc
stos
adcb
jo
sub
mov
add
jo
rcl
mov
and
lcall
xchg
in
lock
je
pop
into
jge
ss
incl
loop
mov
jmp
adc
add
mov
insb
inc
das
adc
sub
jle
jge
pushf
daa
or
cmp
ja
add
decl
jle
das
cmp
jecxz
mov
adc
js
add
movsb
and
xchg
sub
push
dec
cld
xorl
add
int3
or
mov
insl
or
shlb
stos
ss
push
and
je
or
insb
mov
decl
lret
dec
sub
or
clc
mov
adc
scas
dec
lods
jmp
es
inc
imull
inc
sahf
fiadds
dec
out
add
mov
jbe
cld
dec
xor
fstpl
push
stos
jbe
sub
cwtl
loop
ds
incb
insl
mov
pop
ds
fimuls
jl
add
rolb
lods
popa
xchg
es
rolb
lret
adc
mov
xor
enter
in
fdiv
fadd
stc
orb
jg
inc
test
sar
filds
sbb
sbb
ret
jmp
lock
add
or
mov
rorl
cmp
dec
push
mov
xchg
sub
jle
or
ljmp
das
mov
lret
or
sub
das
inc
mov
jle
int
test
lock
cmp
and
push
mov
dec
dec
push
cs
cld
es
jns
xchg
pop
and
xor
inc
jo
cmpsl
lahf
outsb
ja
push
xchg
cmp
xchg
mov
mov
cltd
push
add
sbb
mov
add
fidivrs
andb
jne
add
or
or
pushf
dec
adc
jbe
jmp
sbb
inc
and
ficomps
lret
stos
arpl
sbb
and
jmp
out
adc
std
adc
add
add
push
or
mov
jl
xchg
push
xchg
add
ds
je
and
or
daa
sar
dec
push
shrl
adc
out
pop
inc
cld
cwtl
adc
mov
lds
sub
or
pop
icebp
or
mov
in
pop
stos
sbbl
or
fcomip
mov
gs
aas
cltd
lock
adc
xor
sahf
push
orb
pop
xor
mov
and
ficompl
adc
adc
enter
pop
movsb
xchg
dec
sar
mov
ja
mov
fdivs
push
ss
movsl
cmp
and
fwait
inc
lcall
lods
push
ljmp
jl
decl
lea
sbb
sbb
mov
mov
sbb
call
inc
adc
xor
std
xchg
je
jns
js
add
outsl
clc
push
lret
pusha
stc
mov
jmp
ljmp
adc
pop
sub
pop
mov
mov
adc
adcl
rolb
cld
negb
scas
clc
incl
stos
cmpsb
mov
add
sti
inc
outsl
sub
jl
movsl
pushf
ljmp
cmp
mov
enter
cmp
mov
insl
dec
pop
repnz
inc
ret
dec
cld
int
lods
cld
jg
pop
mov
push
jo
pusha
es
push
or
imull
ss
clc
jl
cmp
jne
or
test
sbb
mov
mov
jo
shlb
hlt
enter
sbb
scas
jno
les
nop
xchg
dec
leave
xchg
ret
mov
scas
mov
in
mov
les
stos
add
es
sbb
cmpsl
push
xchg
or
lret
popf
jp
sbb
ret
fadds
inc
pop
out
gs
and
cs
push
test
mov
test
ds
repnz
outsl
fiadds
das
test
add
in
mov
inc
cld
add
repz
jo
or
jg
ja
loope
xchg
test
xchg
sub
call
imul
add
in
addr16
jmp
xor
rcrb
adcl
sbb
cmpsb
mov
int
adcb
outsl
push
pop
and
push
es
cmc
aam
add
pop
adc
lock
ror
push
pop
decl
or
or
rclb
jb
aaa
sbb
mov
negb
add
jge
push
das
xchg
jmpw
push
icebp
xor
insb
mov
jae
mov
inc
decl
add
xor
js
inc
sti
inc
add
jle
pop
xorb
call
fadd
in
stos
daa
ja
and
add
dec
enter
arpl
xor
rorl
dec
out
mov
or
pop
ret
xorl
or
jno
ret
sbb
dec
mov
shlb
inc
sarb
cmp
aaa
dec
xor
scas
cmc
pop
xorb
mov
inc
add
pop
cmp
and
and
clc
fldz
pop
negb
enter
sbb
shrb
loop
rcr
sub
push
call
inc
pmaxub
sub
xchg
and
ljmp
push
jae
push
incb
mov
jmp
out
adc
repz
call
mov
and
rcl
push
inc
mov
mov
cmp
shlb
or
pop
fmuls
sbb
cmp
sbb
fstpt
loop
aaa
movsl
cld
pusha
mov
orl
sbb
repz
and
mov
stos
or
loop
inc
cmc
add
jecxz
lds
notb
and
xor
cmp
push
out
xlat
pop
fmull
movsl
mov
and
pop
pop
out
movsl
decl
push
inc
sub
cmp
pusha
flds
sbb
aam
js
pop
mov
int3
test
cli
cltd
mov
sti
jb
push
stc
cmp
xor
mov
fists
pop
add
xor
sub
or
jbe
aas
shrl
clc
bound
jg
loop
sbb
add
dec
ficomps
mov
pop
aam
stos
stos
xchg
add
icebp
xor
ljmp
into
cmp
rorb
stos
xchg
pushf
fisttpll
push
lcall
sub
rorb
mov
cld
pusha
jb
jle,pn
popa
xlat
cwtl
xchg
xlat
inc
jno
pop
ds
rolb
cmp
lock
popf
sahf
push
subl
outsl
ljmp
mov
push
xor
and
sub
mov
sbbl
rorb
nop
mov
orl
mov
sbb
sbb
and
mull
inc
cmpsl
mov
mov
push
and
mov
call
clc
scas
adc
and
add
fisubs
sbb
cmpsb
mov
mov
ficoml
out
rcl
std
mov
add
and
mov
push
test
iret
push
cli
negb
insl
sbb
fwait
sub
in
test
cmp
fs
cmpsl
andb
pop
adc
jg
cmp
push
or
fmull
mov
mov
sbb
cltd
rcr
mov
or
mov
push
or
out
adc
mov
jno
fbld
rolb
add
sub
filds
in
pop
mov
das
icebp
pusha
sub
sbb
cs
ja
inc
mov
lds
fsubrl
test
fidivs
nop
or
pushf
sbb
and
sbb
pop
dec
aaa
sbb
jg
sbb
mov
pop
loope
dec
sub
pop
sbb
dec
incl
jne
xchg
pop
inc
pop
sbb
sbb
out
bound
and
sbb
mov
sub
imul
sbb
pop
je
insl
mov
mov
test
or
fbstp
scas
loope
cmp
gs
and
push
push
insl
jp
and
mov
push
mov
cmp
adc
subb
or
or
imul
lahf
ss
decb
xchg
or
decl
cmp
adc
imul
add
fsubrl
adc
inc
jo
mov
ret
je
push
mov
mov
pushf
push
mov
int
sbb
hlt
aaa
repnz
sbb
and
pusha
sbb
fdivrl
push
out
push
test
dec
icebp
mov
dec
fdivl
pop
mov
mov
mov
lock
add
in
mov
xor
fdiv
pop
imul
or
adc
cwtl
jae
mov
or
pushf
sub
cmpsb
call
leave
fildl
aam
mov
inc
and
sub
push
pushf
sbb
movsb
xchg
mov
out
cwtl
out
shrb
hlt
pushf
lods
xor
rorb
nop
loopne
jns
pop
mov
push
push
push
lahf
jge
jb
repz
pop
inc
dec
imul
push
push
jl
insb
dec
lock
jp
adc
adc
sbb
mov
inc
push
xchg
lods
xchg
adc
or
push
add
and
je
sbb
lds
xor
dec
cld
testl
xchg
lea
xchg
call
inc
sub
loopne
or
add
sti
mov
cs
std
adc
shlb
testl
aaa
dec
cld
es
mov
mov
push
and
cmpsl
sbb
pop
dec
mov
in
repnz
add
mov
pop
lock
sub
pop
xor
push
push
mov
add
addr16
xlat
sarl
sarb
inc
jmp
scas
movsl
mov
cmp
fisttps
mov
icebp
xor
lret
push
stos
mov
xor
bound
popf
mov
push
icebp
loop
rcll
test
inc
scas
add
sbbb
xor
lods
out
xor
je
ljmp
mov
arpl
into
mov
mov
cwtl
mov
pop
movsb
out
mov
add
test
fstps
add
add
mov
jnp
add
decl
addr16
jbe
pop
cwtl
stos
push
lods
inc
icebp
pop
add
add
sbb
sbb
or
mov
ret
out
push
dec
loope
aam
push
pushf
outsl
pop
icebp
fmuls
xchg
pusha
sub
mov
fistpl
outsb
cli
pusha
mov
adc
push
adc
add
fwait
adc
push
adc
pop
mov
dec
lods
or
jo
push
icebp
mov
orl
push
dec
dec
les
mov
sbb
cmp
xor
fistpll
mov
jno
ror
cs
adc
decl
adc
push
mov
push
mov
jp
test
jg,pn
les
lock
hlt
inc
or
and
loope
pop
xchg
push
or
push
dec
mov
mov
int
fwait
inc
cltd
add
ret
mov
xor
out
xor
sarb
xor
shlb
mov
and
sbb
sub
out
ja
jae
sub
dec
adc
sti
testl
sbb
inc
pushf
cmpl
and
xchg
or
mov
repnz
jae
mov
incb
mov
mov
stos
imul
sti
mov
ret
and
mov
xchg
decb
dec
sub
ss
sbb
rolb
mov
clc
in
mov
mov
inc
and
fildl
cmp
loop
add
js
ret
or
lock
xchg
out
push
and
xor
add
cmp
movsb
or
test
and
push
inc
in
clc
andb
dec
pop
dec
testl
add
sub
lock
sbb
fwait
xor
cmpb
or
mov
mov
repnz
or
push
cld
fadds
mov
jmp
movsl
and
mov
jg
repz
cwtl
faddl
jb
addb
adc
call
outsb
push
jp
ret
gs
xor
sub
mov
sbb
out
cmp
jg
imul
xchg
inc
mov
adc
or
adc
push
xchg
sbb
test
cmpsl
pusha
mov
push
sub
in
add
xchg
data16
mov
cmp
xchg
call
js
outsb
hlt
adc
bound
push
stos
movsl
or
daa
ss
cmp
cmp
add
mov
nop
adc
pop
test
shrb
and
mov
jecxz
fdivs
loopne
jge
cld
push
cltd
cmp
ljmp
lcall
dec
mov
adc
mov
fdivr
es
adc
mov
clc
pop
xchg
pusha
xlat
jbe
and
ror
jo
inc
cld
fwait
js
cmpsb
xor
daa
mov
std
scas
fisttpl
in
dec
out
jno
jb
mov
stos
jmp
das
xchg
inc
testb
cld
xchg
je
dec
pop
xchg
add
or
inc
xchg
mov
push
std
and
pushf
subb
or
daa
adc
out
test
push
mov
add
std
push
xchg
adc
dec
sub
mov
cld
lock
mov
push
sub
inc
sub
pop
push
xor
add
orb
adc
fistps
and
jle
mov
cmpsb
js
sub
les
push
icebp
add
xchg
xlat
cld
lods
ljmp
add
lods
ds
in
adc
or
lahf
pop
jl
cmp
mov
roll
ja
jo
cmp
adc
fldcw
cmp
or
and
out
jecxz
call
into
sub
cltd
aam
add
sbb
mov
sti
xchg
lock
adc
sub
data16
ds
mov
jge
jnp
fnsave
std
and
dec
mov
ljmp
sbb
add
dec
data16
enter
roll
add
sbb
add
jo
stos
cmp
or
popa
jmp
stos
fldl
outsl
pusha
js
clc
mov
into
xchg
xchg
xorb
popa
pop
mov
fdivl
in
add
push
jne
and
xor
inc
push
adc
imul
or
pop
add
mov
push
cmp
imul
and
mov
sbb
xor
xor
adc
or
js
data16
mov
clc
call
rcll
jp
scas
xchg
xchg
sub
add
mov
push
nop
and
xchg
mov
call
data16
popf
mov
aam
add
icebp
hlt
add
sbb
lock
sbb
jge
outsl
add
or
pushf
iret
les
in
push
cmp
push
jl
lds
push
sbb
add
pop
xchg
popa
sub
push
and
adc
clc
incl
fwait
sti
push
add
jns
je
dec
sarl
lea
ret
stos
roll
sub
add
and
sbb
test
dec
dec
sbb
push
inc
mov
add
jo
xchg
cwtl
jo
mov
test
leave
js
in
test
mov
incb
mov
mov
out
call
cltd
or
nop
push
pop
mov
sbb
mov
jb
and
fnstcw
adc
aaa
jno
add
loope
enter
fmuls
inc
imul
ss
inc
push
jns
cmp
xchg
jb
incl
test
mov
push
fadds
inc
ds
adc
xchg
idivl
fisubs
push
xchg
xchg
cltd
test
cmp
int
xchg
js
jno
xchg
push
mov
mov
arpl
adc
dec
xlat
shll
xorl
inc
adc
out
mov
cmp
hlt
fldcw
adc
cs
clc
mov
add
loop
push
sub
push
inc
bound
adc
lcall
push
in
sub
add
xor
rclb
lahf
leave
cmp
test
pusha
test
push
jb
dec
jle
push
movsb
out
shr
jg
faddl
je,pn
loop
lahf
insb
mov
cmc
es
xor
inc
js
mov
pop
mov
inc
dec
push
or
rorb
cld
jge
pop
int3
ja
jae
jl
and
and
jl
cmpl
std
std
outsb
std
or
pushf
cmp
popf
sub
sbb
sbb
inc
inc
xor
jge
lcall
pop
mov
fildl
inc
sbb
dec
pop
mov
insb
fcmovb
push
nop
shlb
mov
cmpsl
dec
push
shr
sub
shrl
push
pop
xchg
jbe
inc
imul
or
push
ljmp
fnstenv
jb
fsubl
adc
sub
int3
xorb
pusha
lahf
push
jle
loope
cmpsl
mov
js
add
pop
insb
ja
bound
jmp
cmp
or
je
and
aam
pop
pop
mov
sahf
mov
dec
mov
mov
hlt
fwait
mov
jbe
push
xrelease
loop
push
shlb
popl
shlb
fsubr
cwtl
out
dec
adc
mov
and
mov
ss
mov
out
add
pop
pusha
sub
ficompl
xor
arpl
mov
mov
inc
jg
aad
jecxz
pop
mov
or
push
mov
sbb
pop
or
and
andb
mov
loopne
int3
pop
cmp
hlt
pop
stc
or
movsbl
and
mov
pop
les
ds
mov
outsl
jle
in
hlt
jno
dec
pop
cmpsl
jg
scas
jae,pt
or
lds
xor
xchg
push
and
mov
dec
dec
adc
or
js
xor
stos
add
push
cmp
jge
shr
loope
add
movsb
sub
nop
sbb
lods
push
mov
aas
add
push
jge
nop
xchg
adc
pop
pop
mov
add
add
fs
divb
sub
and
add
icebp
jg
sarl
fstp
pop
out
lock
push
fsubl
xchg
mov
fildll
mov
addb
test
jle
js
sbb
pusha
orb
sub
xchg
movsb
insl
orl
push
cmpsb
mov
dec
dec
xorl
aaa
cmp
cmp
push
mov
popf
mov
and
mov
pop
stos
mov
aas
add
add
out
hlt
scas
cli
xor
push
xchg
je
push
xchg
filds
push
cmp
bound
mov
cmp
jae
fdivrs
push
ss
decl
inc
or
jb
daa
add
and
mov
data16
mov
mov
icebp
shlb
add
stos
xor
test
mov
cmp
add
addb
cmp
call
pushf
mov
imul
es
mov
sbb
pop
add
orb
cmpb
xchg
into
mov
rorl
mov
rcrl
mov
xor
imull
test
sbb
es
add
mov
mov
ja
bound
mov
lcall
rcll
push
xlat
add
popa
mov
iret
mov
jne
subb
loop
mov
mov
rcrb
pop
lock
sbb
adcl
pusha
insb
and
sub
mov
add
jo
sbb
mov
mov
lcall
mov
call
fiadds
dec
mov
adc
sbb
call
wrmsr
mov
sbb
push
je
push
jmp
jae
add
xor
incl
rol
enterw
pop
data16
sbb
cmpsb
enter
shrb
mov
sub
aaa
jg
cmp
lahf
add
lods
add
jnp
dec
cmp
hlt
inc
ds
jl
cmp
sti
pop
test
jb
out
or
ficoms
cmpsb
mov
or
dec
add
loop
push
mov
and
add
adcl
icebp
sbb
mov
mov
pop
lods
ret
js
stos
les
jb
jecxz
mov
stc
inc
std
cmp
ret
inc
mov
mov
cltd
or
jl
mov
ja
hlt
mov
sub
pop
jp
add
test
jecxz
mov
cmc
push
jno
mov
or
sbb
mov
xor
pop
out
sub
nop
or
decl
js
addr16
mov
and
and
dec
jns
sbb
test
inc
pop
psadbw
push
mov
loopne
pop
adc
test
inc
lcall
mov
and
push
call
int
push
sbb
icebp
xchg
loopne
movsb
inc
test
mov
cld
add
xor
push
lds
push
fwait
inc
xchg
pop
adc
out
repnz
and
pop
xor
mov
mov
sbb
mov
loopne
loop
push
inc
mov
add
les
pop
lods
sbb
mov
push
mov
adc
adc
jle
inc
push
push
int3
test
and
cmp
cli
sub
mov
sub
fsubrs
ja
mov
lcall
push
adc
xor
mov
outsb
inc
mov
cs
mov
lret
push
adc
pop
or
mov
mov
movsb
push
sub
out
fucomip
ljmp
lret
adc
bound
fwait
mov
mov
and
xor
fnstsw
lods
and
pushf
dec
filds
lcall
add
inc
sub
lret
push
dec
dec
push
xchg
rorb
xchg
mov
scas
jbe
dec
pushf
lret
mov
xor
mov
nop
lock
add
or
sub
fdiv
adc
adc
cs
movhps
clc
jg
push
xchg
mov
mov
jg
mov
int3
dec
dec
cmp
or
lods
lea
mov
icebp
shrl
cmc
and
movsb
xchg
leave
rclb
loopne
movsb
rcrb
xor
and
ret
rep
scas
hlt
loope
and
sbb
call
inc
int3
call
std
ljmp
xor
dec
in
std
and
mov
not
or
pop
std
cmp
leave
and
cltd
lea
cmp
xchg
sbb
sbb
cmp
aam
aad
fists
mov
in
hlt
or
roll
or
leave
mov
call
rclb
out
ljmp
push
subl
insb
and
push
cwtl
sarb
lret
inc
incl
add
outsl
mov
test
movsb
push
mov
test
jp
aaa
mov
pop
xor
jnp
add
filds
inc
pop
je
lcall
scas
xchg
pop
lock
push
das
xchg
test
imul
inc
mov
insb
mov
lock
or
in
inc
jecxz
push
movsb
xor
dec
int3
imul
pop
jne
ret
cs
adc
pop
dec
fiadds
xchg
jle
div
push
xchg
sub
mov
pop
add
jl
jne
aad
jl
mov
sub
inc
or
push
popf
inc
mov
les
clc
aad
mulb
sbb
xor
rcll
pusha
jp,pt
adc
pop
push
sub
outsb
mov
adc
clc
mov
repz
jmp
mov
das
dec
cltd
mov
jno
jg
bound
aas
push
pop
stos
cmpl
lock
pop
scas
pushf
or
mov
loopne
scas
ljmp
loopne
pop
pusha
call
and
inc
jne
xor
xchg
sbb
mov
sarb
and
popf
into
or
stos
sbb
mov
mov
xchg
inc
sbb
cwtl
pop
adc
lcall
mov
add
subb
adc
insb
mov
xchg
or
push
cmp
aas
push
jbe
sub
inc
jmp
das
xor
pop
cmpsb
push
es
xlat
aaa
jecxz
into
add
fst
sub
dec
jp
push
adc
cmp
dec
ret
xchg
or
push
jl
cmp
fbld
mov
lds
push
out
jp
icebp
movsb
mov
sbb
inc
jno
jle
mov
add
mov
sbb
stos
mov
push
stos
cmpsb
decb
cmp
add
loopne
addr16
mov
pop
sbb
sbb
pop
or
pop
sub
imul
fwait
mov
das
xchg
push
clc
and
ret
into
cmp
nop
lret
stc
mov
mov
fdivrp
jg
pop
stos
mov
cmp
inc
loope
mov
dec
push
icebp
cmp
movsb
out
out
add
jmp
dec
add
cwtl
sub
xor
xchg
dec
dec
jp
fmull
loopne
jg
fbstp
xchg
inc
mov
sahf
sbb
mov
mov
or
sti
or
js
cmp
enter
sbb
iret
ljmp
or
xchg
daa
mov
add
lret
mull
out
sbb
jb
fisttps
mov
ficoml
int3
jne
lret
insb
cmp
inc
or
es
outsl
loop
xor
loopne
sub
push
insb
sti
add
stc
cmp
mov
test
sub
inc
in
aam
or
outsl
push
lcall
inc
mov
and
cwtl
sbb
add
into
aad
jnp
outsl
sub
adc
js
jl
add
aad
pmaddwd
mov
xchg
ds
adc
add
out
ret
jbe
fdivr
inc
mov
outsl
adc
dec
jne
lcall
test
jmp
andb
mov
je
push
loopne
and
outsb
test
jo
ror
cmp
popa
or
scas
clc
insl
fnstenv
movsl
dec
mov
lcall
push
stos
adc
sbb
dec
ja
or
icebp
jbe
add
mov
push
push
jle
pop
push
mov
dec
cmp
in
cmp
add
lcall
ret
test
fisubrs
fadds
push
pop
xchg
mov
not
dec
add
mov
or
lods
xor
sub
dec
cld
adc
rcr
xchg
je
sbb
mov
adc
adc
xor
orb
xchg
imulb
iret
jb
je
mov
mov
xlat
dec
inc
cmpl
rcll
call
nop
or
jge
push
dec
int
cmp
lcall
test
inc
mov
push
movsb
bound
hlt
pop
and
jg
mov
notb
and
pop
fwait
push
cmp
mov
pop
push
inc
rcl
jo
cli
dec
mov
fcoml
popa
sub
pop
inc
loopne
ss
push
inc
sbb
add
xchg
jne
cli
mov
and
sub
mov
in
xlat
aam
sub
lret
outsl
mov
cwtl
xchg
in
in
daa
sahf
mov
aaa
adcl
sbb
rcrl
mov
xchg
imul
push
mov
pop
enter
push
push
data16
pop
mov
scas
bound
in
ljmp
js
push
xor
fildll
lods
lret
pop
fs
or
div
cwtl
stos
mov
xchg
dec
add
cld
xlat
xchg
fidivrs
jg
mov
add
cli
and
or
adc
cmc
and
xlat
incl
aad
mov
loope
adc
dec
xor
sub
out
xchg
and
cmp
stos
push
pop
pop
stc
aaa
mov
mov
adc
popa
shrl
dec
mov
cmp
inc
repz
mov
push
orb
mov
roll
push
je
mov
and
mov
and
cmp
inc
into
js
pushf
imul
adc
stos
push
js
push
jp
mov
mov
and
nop
mov
inc
and
clc
inc
or
sbb
mov
mov
cli
dec
pusha
dec
repz
fdivrp
gs
scas
rcrb
and
pop
icebp
pop
mov
sar
out
xchg
scas
push
add
mov
scas
xchg
ret
lock
cmp
jmp
pushl
add
roll
inc
aad
mov
jbe
shl
scas
jp
fisubrs
cmp
mov
cwtl
lods
pusha
push
and
data16
call
or
ljmp
test
jge
cmp
daa
xchg
je
shlb
ret
dec
es
adc
mov
sbb
incb
rolb
mov
dec
stos
and
ja
pop
mov
xchg
shrl
xchg
and
lea
cmp
add
in
clc
movsl
repz
or
pop
lock
jns
sbb
loop
or
mov
and
dec
cli
ljmp
mov
push
lods
jae
repz
sub
xchg
pop
push
sti
les
or
pusha
jl
add
xor
lods
js
mov
les
out
imul
cwtl
inc
inc
adc
in
loop
xor
sar
push
dec
jnp
cmp
out
sbb
test
mov
sbb
test
push
add
clc
movsb
shl
ja
loop
xchg
mov
push
sarb
ss
pop
jl
push
xor
bound
aaa
cld
or
xchg
jo
push
push
shrb
pop
mov
mov
outsl
movsb
hlt
call
pop
adc
xchg
cltd
in
fsubl
pop
std
pop
in
jbe
xchg
adcl
mulb
cmp
mov
es
sar
add
sbb
add
sbb
dec
cmp
ja
leave
shrl
dec
sbb
sub
mov
adcl
fstpt
daa
movsb
sbb
call
inc
pmuludq
scas
out
repz
ja
shrl
stos
inc
fs
cmp
das
pop
popa
sbb
movsb
push
stos
rcll
out
and
clc
add
loopne
std
test
pop
jno
in
mov
int3
cmp
cmc
cmpsb
sub
sub
push
ret
dec
lods
loopne
push
shl
inc
sbb
cltd
xchg
addb
xor
fs
clc
mov
and
mov
pop
loopne
cmc
lcall
rorb
in
push
mov
enter
fnsave
lods
scas
cs
ficoms
pop
popf
ss
scas
scas
dec
jo
lods
push
add
adc
ret
add
hlt
mov
xor
lock
pop
int
inc
repz
lcall
mov
popa
bound
rcr
inc
pop
rcr
mov
lods
and
adc
push
dec
push
out
data16
mov
jmp
cmp
and
push
sbb
push
scas
test
sub
push
cli
jecxz
stos
hlt
sbb
outsl
cmp
dec
mov
inc
das
adc
mov
add
les
push
lret
mov
pop
xor
cmp
sbb
sbb
into
popl
sub
movsb
sahf
aas
add
xorl
sub
cld
pop
adc
mov
xor
xchg
dec
mov
or
xor
jle
xor
or
testb
es
scas
pop
incl
mov
and
insl
bound
loope
pushf
and
clc
push
insb
adc
jnp
mov
testb
leave
mov
loopne
cmp
lahf
jo
mov
ret
and
int3
jbe
lcall
inc
daa
mov
xor
loop
cmp
add
sbb
push
xchg
les
rorl
or
stos
lock
jno
ret
ljmp
ljmp
pop
cmp
repz
lahf
shlb
loop
cmp
mov
sbb
pop
rcrl
cld
xor
dec
xchg
adc
jle
notl
out
lock
xor
lds
mov
add
mov
mov
push
mov
or
inc
xor
shlb
or
fwait
repnz
in
mov
mov
inc
adc
cli
lea
mov
mov
inc
lock
mov
dec
pop
pop
loopne
sbb
dec
imull
ljmp
adc
add
jl
xchg
mov
xchg
mov
or
pop
sbbb
jne
sti
shlb
sti
jne
in
test
and
cmp
mov
jp
adc
mov
mov
pushl
ret
in
test
mov
shll
push
jmp
sub
push
push
xlat
pop
xchg
push
or
or
test
inc
mov
clc
mov
insl
push
in
push
mov
or
mov
decb
add
ds
lahf
jmp
add
imul
fisttps
jne
jmp
movsb
push
jno
clc
enter
push
push
clc
or
adc
je
mov
in
jo
sbbb
dec
idivb
cmp
mov
pop
lcall
imulb
and
cmp
cmc
or
push
fs
and
call
dec
mov
sub
and
ret
pop
fadd
dec
add
sub
ja
dec
fildll
xor
push
push
pop
je
pushl
fstl
fcoml
cwtl
loopne
and
and
mov
xchg
ficoms
enter
adc
daa
and
in
cmp
or
pop
stos
ss
test
push
add
or
insl
sub
hlt
mov
cmc
inc
jp
jmp
and
scas
fstpl
out
or
in
pop
mov
pop
sub
inc
adc
or
call
push
jne
pop
lea
clc
and
mov
mov
out
icebp
sub
mov
dec
mov
sub
add
pushl
in
inc
hlt
sarl
push
pusha
mov
ja
push
push
rcrb
pop
cld
push
aaa
dec
mov
out
mov
dec
loope
or
or
aaa
ss
jo
dec
lret
mov
subb
repnz
sbb
ljmp
xor
xchg
push
xchg
sub
insb
mov
orb
sbb
jecxz
movsb
jo
aas
xchg
sub
jp
mov
push
icebp
add
pushf
adc
adc
in
andl
std
ljmp
je
enter
cwtl
cmp
dec
fidivrs
call
and
into
hlt
mov
xchg
aas
pop
dec
sti
enter
gs
hlt
fidivl
jl
lcall
jbe
leave
xchg
push
pop
dec
popf
arpl
orb
lock
adc
xchg
cli
pop
and
outsb
add
fiadds
or
loopne
pop
xor
out
xchg
sbb
mov
xor
mov
lods
dec
adc
ret
and
mov
faddl
xchg
psubsw
cmp
fimull
and
outsl
mov
sub
out
xor
cs
push
cmp
push
sti
fisubrs
rorl
push
lret
call
inc
inc
and
inc
cmp
jnp
xchg
ficomps
cmpsb
lahf
ljmp
xchg
cld
scas
push
sub
test
xchg
test
mov
or
xlat
push
dec
pop
inc
fs
rcll
mov
adc
insb
or
push
lcall
aam
mov
dec
sbb
inc
addr16
scas
cli
aaa
test
push
add
xchg
ret
push
add
push
mov
decb
popf
or
pop
icebp
loope
mov
fwait
add
in
mov
fsubl
leave
shlb
scas
push
jle
sahf
leave
or
in
or
push
and
dec
sbb
cmp
xchg
cwtl
xor
or
xor
test
aaa
mov
ret
pop
ss
and
cmp
orb
pop
inc
adc
sbb
xor
mov
mov
mov
xor
loopne
ljmp
dec
adc
roll
jl
sub
add
iret
gs
pop
sbb
subb
and
sub
icebp
add
add
ret
pop
js
out
or
mov
mulb
in
out
daa
lods
add
mov
mov
mov
adc
add
cwtl
sub
jge
shrb
out
xor
aad
mov
mov
mov
cmp
call
popa
inc
nop
arpl
sub
ja
out
loopne
loop
pop
or
and
cmpsb
or
les
xor
xor
divb
call
lock
cmp
inc
jbe
int
sub
push
and
into
out
cmp
add
sahf
lahf
inc
or
xchg
sbb
decl
cmpl
xchg
mov
or
push
rol
dec
sbb
mov
mov
or
imul
mov
add
xchg
push
push
leave
cli
xorl
pop
imul
stc
inc
pop
or
aaa
dec
clc
jg
fmul
mov
mov
sbb
outsb
push
mov
jae
mov
addl
sub
pushf
pop
jno
adcl
sub
enter
mov
call
sub
scas
add
pop
mov
or
and
sbb
cmp
bound
shlb
test
pop
in
pop
imul
mov
jmp
outsb
mov
sbb
mov
lahf
pop
mov
dec
jle
rclb
aas
lret
add
xor
sti
fdivrl
and
loop
adc
jb
xchg
inc
and
lods
cwtl
cmp
adc
pop
mov
in
sub
fistps
movsb
in
push
insl
sub
lcall
scas
fdivs
addr16
sbb
out
sbb
and
pop
adc
add
push
fisttpl
imul
inc
data16
fistpl
inc
fwait
loope
mov
jmp
fisubs
call
mov
aas
loopne
lods
xor
xchg
mov
inc
cmp
push
jl
push
push
hlt
stos
mov
xor
ljmp
dec
fidivrs
mov
pushf
cli
shl
and
rorb
movsb
cli
dec
add
mov
lcall
fisubl
mov
lock
push
ljmp
pop
push
xchg
loop
cli
pusha
lcall
and
cmp
ret
mov
xor
pop
aam
xchg
dec
pop
je
jne
mov
dec
xor
loope
lock
mov
adc
mov
inc
std
fwait
popa
mov
pop
xchg
adc
rcrl
mov
jl
cli
jg
jo
or
mov
jbe
pop
aam
iret
inc
mov
or
sbb
push
jmp
mov
mov
dec
rorb
test
lahf
bound
dec
iret
xor
fs
add
mov
dec
xor
clc
jg
cmp
loop
pop
cmc
movsl
and
ret
int3
sbb
stos
pop
incl
inc
xlat
mov
pop
add
pop
incb
cld
aaa
std
xor
call
dec
add
jge
cli
and
pop
mov
xor
pusha
sbb
wrmsr
add
int
inc
sbb
call
mov
mov
ss
loopne
cmc
push
mov
ret
xchg
shrl
jecxz
sub
ss
mov
rorb
lea
rcr
jmp
add
or
stos
jge
negl
push
movsb
fisttps
mov
cmp
jbe
andb
push
sti
push
add
mov
inc
dec
inc
stos
cmpsl
dec
jb
es
aas
push
inc
xor
pushf
in
dec
add
pusha
in
addl
sbb
fdivr
sbb
call
bnd
test
or
and
ljmp
pop
lock
add
pop
or
addr16
je
jne
dec
cmp
adc
jg
mov
or
and
jnp
into
and
and
mov
add
std
pop
mov
push
js
cmp
or
dec
shlb
sar
and
sbb
jmp
mov
mov
sub
mov
cmpsb
enter
pop
xor
jp
loop
jo
inc
fidivl
int3
push
xor
xor
or
push
aas
pop
cli
cmpb
push
sar
outsb
mov
adc
or
call
sbb
push
arpl
push
loop
adcb
rorb
in
inc
dec
clc
or
mov
sub
bound
xor
push
xchg
fidivs
or
sub
lret
jne
mov
mov
pop
call
push
pop
scas
lea
sub
adc
outsl
js
or
mov
and
dec
inc
sub
or
stc
in
scas
aad
adc
loopne
scas
push
pop
mov
dec
loopne
data16
push
int
dec
pop
enter
in
jl
pop
jge
test
push
ljmp
int3
lahf
decl
out
push
sbbl
movsl
push
jecxz
add
push
cmp
lret
mov
mov
push
scas
add
icebp
dec
cli
xchg
dec
int3
sti
hlt
movsb
mov
fwait
jne
xor
inc
mov
inc
pop
inc
lods
mov
push
pusha
sarb
cld
testb
push
adc
add
imul
adc
das
pop
inc
pop
jle
data16
aas
std
clc
push
negb
outsl
xor
je
push
cld
mov
adc
test
cmpsl
rolb
or
xor
push
clc
aas
pop
jp
xor
mov
loopne
popa
movsl
fdivp
out
sbb
cli
inc
mov
outsb
ljmp
jge
dec
js
scas
push
cmpsb
cmp
xchg
cmp
sahf
xchg
loopne
push
push
loop
adc
iret
add
dec
mov
mov
lret
inc
inc
xchg
sub
cltd
and
shl
imul
fdivl
sub
sahf
fldcw
add
imul
divb
or
adc
add
mov
mov
inc
in
ss
sbb
cld
jg
jmp
into
sbb
rcl
gs
flds
out
pop
sbb
ss
mov
mov
sahf
inc
mov
outsl
jne
ja
add
pop
insb
icebp
mov
xchg
add
mov
xchg
lea
into
lods
push
popa
lcall
xor
data16
fimull
fstpt
aaa
sar
mov
mov
js
mov
std
jl
inc
add
es
movsl
xor
aaa
jb
fstpt
sbb
jbe
jecxz
jae
sub
jg
cld
cmp
pop
mov
add
and
push
inc
enter
ljmp
les
xchg
jne
sub
out
rol
mov
mov
or
push
add
pop
add
sbb
iret
rclb
lods
outsl
pop
push
stc
mov
jo
fdivrp
dec
fnstsw
loopne
aas
movsb
jge
mov
add
in
mov
lret
icebp
aas
and
pop
or
push
mov
add
jg
jmp
sbb
mov
xchg
sub
sbb
push
bound
add
add
push
and
call
sar
or
pop
mov
inc
pop
jge
pop
adc
addl
mov
push
xor
daa
mov
les
jno
decb
int
add
adc
js
xchg
and
decl
and
xchg
sbb
mov
push
imul
inc
mov
or
mov
cmp
es
adc
ja
shr
sub
out
sti
jl
cmpsl
scas
clc
jb
inc
lds
cmp
sub
xchg
hlt
dec
sbb
les
jo
inc
or
xchg
or
mov
mov
lods
or
call
push
inc
sahf
adc
mov
pop
sbb
cmp
jns
cmc
adc
cmc
outsb
dec
inc
add
xchg
push
push
movsb
dec
sub
jl
dec
adc
push
cmp
inc
cmpsb
sub
sub
stos
cmc
push
mov
je
mov
psadbw
jbe
adcb
mov
js
or
icebp
addb
adc
push
mov
icebp
or
pop
mov
pusha
js
cs
pop
call
sbb
pop
cld
out
add
sbb
sub
mov
aaa
adc
sbb
cmp
inc
loope
fdivrs
movsb
push
test
inc
mov
adc
pusha
lock
fcomps
cmp
in
sbb
mov
jle
push
pop
out
inc
sbb
hlt
scas
xchg
xlat
loop
call
adc
jbe
ds
ret
dec
pop
push
js
mov
adc
adc
gs
ret
sahf
xor
adc
or
loope
dec
out
sti
push
mov
mov
push
repnz
push
movsb
or
roll
call
rcll
lods
loop
in
fimuls
adc
ret
and
mov
mov
fsubrs
push
clc
loopne
add
dec
dec
cli
pop
aam
or
clc
fdivrl
jecxz
decb
push
sarb
lret
sbbb
pusha
and
xchg
mov
pop
nop
out
fidivrs
xorb
add
fidivl
add
jl
xor
jmp
rcrl
push
or
push
sub
xchg
inc
test
repnz
mov
push
push
rclb
jae
mov
xlat
std
testb
mov
mov
popf
xor
push
ljmp
lock
or
push
leave
push
dec
lock
imul
cltd
mov
sub
hlt
cwtl
sysenter
dec
cmpsb
out
loop
gs
cli
sahf
mov
sub
inc
pop
test
movb
test
inc
dec
add
dec
xor
dec
call
sub
pop
lret
into
aaa
pop
fsubl
or
mov
lcall
in
lret
js
inc
push
dec
lods
push
aas
push
pop
sbb
push
mov
mov
std
filds
cmpl
and
loopne
in
fcos
xchg
mov
bound
imul
dec
jg
fiadds
div
or
insl
mov
or
inc
cld
shll
mov
xchg
and
movsb
shlb
sar
inc
dec
sub
faddl
fisubs
sbb
mov
or
mov
pop
jge
repz
pop
add
pushf
fdivrs
popa
or
inc
jae
add
or
push
mov
dec
clc
mov
or
xchg
mov
shrb
cmpsl
pop
adc
dec
loopne
mov
insb
pop
sar
mov
enter
lds
and
pusha
or
pop
add
lcall
push
lods
pop
pop
stc
out
mov
push
jl
cld
sbb
lcall
ss
sar
sub
inc
inc
add
lret
neg
mov
adc
jns
repnz
push
call
jg
pop
xchg
sar
inc
lea
sub
jno
ret
mov
jo
aam
aaa
cld
xor
hlt
xchg
fistpll
mov
mov
cmpsl
adcl
xor
xchg
roll
push
faddl
push
out
sub
mov
xchg
or
sub
cmp
cmp
in
data16
inc
mov
dec
add
ljmp
out
insb
inc
cmc
mov
aas
inc
nop
jns
mov
push
daa
cmpsl
add
bound
xorb
lahf
lds
bound
cs
push
dec
cmp
clc
stos
loop
ret
into
es
jl
pop
arpl
jg
cmpsb
incb
aam
adc
and
push
int3
xchg
add
xor
arpl
rolb
push
or
pop
sbb
jl
les
push
sahf
ret
sub
lods
jg
pop
xchg
and
sbb
decb
cld
adc
sub
and
push
shl
ret
fwait
lods
jle
ret
pushl
inc
in
add
sbb
movsb
fidivrs
mov
pushf
add
cmp
pop
adc
jg
pop
push
pop
jb
adc
cmpsb
jne
leave
and
push
mov
inc
shl
xor
mov
lahf
lods
bound
lock
add
rcrl
fistps
movsb
shlb
call
pop
mov
std
pop
pop
cli
jns
neg
cmpb
add
jmp
sbb
loope
and
xor
xchg
loop,pn
inc
push
lea
xchg
stos
mov
push
ficomps
or
push
sub
lcall
fistpll
pop
sti
sbb
sub
imul
add
xor
jb
int3
cmp
ret
add
jbe
mov
adc
test
or
add
aas
adcb
sahf
fidivl
pop
sub
lds
mov
xor
push
in
dec
inc
sub
or
loopne
sub
imul
iret
and
pop
test
dec
xor
sahf
ficompl
and
add
mov
int3
pushf
cmp
out
into
lcall
loop
pop
add
and
and
or
int
ret
pop
ret
sbb
loope
xchg
lds
loopne
adc
inc
mov
andb
and
xchg
mov
cmpsb
cmpsb
xor
imul
dec
add
dec
add
and
mov
mov
pop
add
add
add
adc
stc
insl
shlb
sub
ret
jmp
push
adc
cmp
cmp
movsb
dec
mov
inc
jae
clc
dec
xchg
jg
out
lret
push
aam
data16
imul
xchg
insb
push
push
into
pushf
pop
mov
push
cwtl
sahf
mov
jbe
sub
jg
pop
sub
or
add
outsl
push
cs
xchg
adcl
testb
ljmp
cmp
sub
mov
fcomps
mov
or
test
fidivs
lods
movsb
outsb
call
or
mov
mov
dec
jp
xchg
mov
cmpsl
add
lock
int
test
test
xlat
mov
adc
xor
in
pop
stos
push
mov
dec
mov
cmp
in
out
shr
hlt
sar
fs
outsb
inc
mov
popf
add
push
jne
adc
add
add
or
sub
outsl
jbe
ficoms
cmp
fwait
scas
iret
jo
lds
and
ss
addr16
dec
ja
nop
jb
shll
and
shlb
push
test
cmp
pinsrw
mov
inc
es
sbb
sbb
call
mov
cmpsb
sub
lea
sub
orb
popf
mov
jp
loopne
sub
push
aam
push
aaa
decb
sbb
cmc
xchg
push
fimuls
push
inc
mov
hlt
repnz
comiss
daa
mov
push
aas
setp
cmp
jmp
shlb
jb
mov
fcmovnu
sbb
and
ljmp
cmp
add
fistpl
movsb
cmp
xchg
jno
or
cmc
fbstp
inc
sbb
fldl
out
clc
xor
outsl
aas
lds
clc
mov
push
insb
push
int3
decl
push
jl
mov
mov
out
or
mov
clc
cwtl
stos
ret
xor
mov
lods
cld
jo
and
cmp
adc
sub
cwtl
xchg
fsubrs
shrl
sahf
popa
push
adc
mov
sub
pop
insl
je
repnz
add
inc
mov
pop
jmp
and
ss
cmp
cld
or
xor
cwtl
push
adc
inc
loopne
test
xchg
enter
add
scas
xor
fiadds
subl
icebp
jg
jo
adc
les
inc
rolb
dec
jg
mov
in
scas
ja
call
fisttps
and
push
adc
and
jbe
pushf
xchg
sub
push
jge
aad
and
jle
or
mov
rorl
cli
add
push
out
mov
aaa
adc
push
jl
inc
les
add
or
add
push
outsb
sub
jmp
xlat
ja
idivb
jo
pop
push
adc
push
jl
jge
movsb
pop
cmp
adc
stos
sbb
and
mov
incb
cwtl
push
pop
es
sub
mov
dec
mov
hlt
int
sahf
push
clc
mov
xor
arpl
xor
xchg
ror
sub
inc
ljmp
pop
popa
sti
or
jecxz
in
jmp
jle
or
xlat
inc
fwait
ljmp
sub
test
xchg
dec
push
orl
loope
insb
negl
mov
popa
adc
int
dec
gs
and
ret
dec
cmpsb
enter
orl
jp
push
jl
leave
mov
push
mov
les
xchg
cmp
clc
mov
fistps
gs
xchg
pop
stos
out
idiv
icebp
outsl
movsb
jo
jnp
repnz
repz
jge
mov
mov
fisubrs
add
ret
add
lds
xor
xchg
pop
dec
int3
cli
lcall
rcl
clc
mov
pop
movsb
mov
out
sbb
scas
or
lcall
adc
push
mov
scas
or
les
roll
loop
mov
sub
cwtl
fs
outsl
pop
push
add
stc
nop
inc
aas
mov
add
sub
ljmp
enter
xchg
in
cmp
inc
pop
mov
sbb
sahf
inc
test
push
adc
cmp
fmull
xchg
or
rclb
outsb
cmp
mov
mov
lcall
inc
and
jne
xchg
mov
add
call
scas
add
scas
push
or
lock
and
in
stos
ror
pop
inc
push
pop
push
movsl
xlat
push
outsl
mov
fmuls
xchg
and
scas
enter
in
call
aas
dec
inc
xchg
inc
addr16
xchg
into
in
add
fmull
inc
push
mov
into
imul
cmp
lret
jo
sub
xchg
xchg
mov
pop
rcr
ret
dec
sahf
in
or
pop
add
inc
sbb
enter
jmp
cld
addr16
or
cmpsl
cwtl
subl
mov
fcom
test
mov
insb
push
or
sbb
xor
cmp
les
mov
xor
fcomip
add
sbb
enter
aas
cmp
xchg
mov
mov
add
imul
movsl
push
dec
shll
xorb
mov
ds
decl
dec
notb
cmp
add
mov
pushl
pop
and
sub
push
fmuls
fwait
aam
mov
push
repnz
jbe
add
stos
cli
sub
xor
push
fnstenv
push
rcl
xchg
fiaddl
cmp
leave
je
les
ds
xchg
popa
push
jecxz
adcb
popf
cmpsb
cmc
xor
mov
adc
mov
mov
or
pop
pop
hlt
ljmp
xchg
inc
aad
cmpsl
mov
mov
or
fisubl
cmc
push
sarb
hlt
jecxz
dec
loop
pushl
and
mov
sbb
popa
mov
push
jge
das
add
test
cld
movsb
jnp
arpl
or
insl
mov
cmp
pushl
and
mov
xchg
jne
mov
add
in
and
sti
xchg
cmp
jg
sbb
mov
pop
popa
out
push
push
test
cld
push
stos
cld
pop
ret
cmc
fsts
dec
adc
mov
test
sarb
xchg
xchg
mov
ja
fbld
rcl
sub
mov
mov
xor
lock
xchg
xor
pop
lcall
sbb
icebp
jmp
mov
andb
inc
add
mov
mov
testb
clc
add
into
push
xor
jge
add
data16
das
stos
enter
push
sbb
orb
push
xchg
call
push
xchg
or
xchg
jbe
out
jae
outsb
pusha
pop
test
fidivs
in
add
jge
jns
xor
aam
and
icebp
mov
push
inc
movl
mov
mov
mov
or
push
inc
out
test
in
push
cmpsl
xchg
test
das
adc
cmp
cmp
loope
adc
or
cmpl
cmp
dec
imul
pusha
cmp
frstor
stos
imul
mov
mov
inc
and
jo
or
push
mov
pop
pusha
jmp
cmpsb
and
push
mov
iret
sub
mov
les
popa
xchg
push
faddl
xchg
dec
aam
xchg
jmp
jno
test
lods
adc
adc
add
push
cld
or
cli
add
sub
aas
sub
les
aad
or
add
loope
mov
dec
subb
add
or
pop
and
mov
sub
dec
inc
lret
aam
pop
hlt
add
loop
inc
push
xor
dec
scas
out
enter
mov
dec
jbe
push
ljmp
rorb
pop
icebp
icebp
insl
imul
jle
cs
decb
cli
pop
push
mov
push
incl
outsl
sub
out
or
add
pop
fisttpl
insl
rolb
popa
and
shl
lcall
and
rcrb
sub
ret
outsb
dec
pop
dec
daa
mov
aas
mov
sbb
je
std
cmpsl
sbb
std
add
cmp
sbb
mov
fisttpll
mov
data16
pop
add
sub
cli
out
pop
in
xchg
out
data16
fisttps
nop
nop
orl
mov
jg
fdivr
xchg
jbe
push
ja
movsb
sbb
std
call
jae
les
sahf
cmp
ljmp
add
xor
jbe,pn
cmp
adc
int3
or
push
or
fisubs
xor
fsubl
xor
cld
lahf
mov
clc
sbb
dec
add
mov
jb
cmpsb
or
ljmp
and
jle
jp
out
loopne
movsb
mov
mov
lock
push
in
hlt
jbe
push
mov
imul
dec
jle
mov
in
inc
push
fwait
pop
xchg
outsl
gs
leave
aam
inc
cli
fwait
dec
xchg
mov
and
sub
push
aaa
jecxz
mov
mov
sub
adc
shll
jmp
adc
mov
pusha
push
sahf
xchg
cld
in
std
sub
dec
mov
and
in
add
sub
inc
sub
pop
sub
test
adc
mov
inc
in
cmp
pop
inc
popf
dec
in
push
push
jmp
popl
jnp
pop
ljmp
scas
inc
lea
lods
testl
push
sbb
jb
icebp
xor
mov
es
nop
inc
mov
dec
inc
adc
fldl
pop
mov
fcmove
mov
outsb
adc
inc
fadds
or
dec
xor
insl
sbb
push
inc
or
mov
push
inc
xor
mov
or
test
inc
cmp
lret
filds
mov
data16
add
je
jp
pop
addl
sbb
cmp
fisubs
sub
sub
inc
sbb
sbb
insl
push
jae
ss
jns
push
gs
data16
add
dec
mov
mov
cmc
xor
push
fcoms
in
out
pop
into
pop
or
add
or
negl
push
rcll
or
xor
enter
adc
in
mov
inc
stos
into
jg
sub
xor
add
iret
dec
push
lret
sbb
add
or
add
sub
pop
inc
xlat
add
sti
mov
sub
cmpsl
adc
add
pop
sub
mov
ret
pop
pop
fwait
lcall
insb
mull
push
out
inc
aaa
sub
inc
xchg
unpcklps
inc
add
mov
sub
outsl
inc
dec
add
sub
push
out
fnstcw
push
loop
jns
dec
inc
sub
mov
cmpb
lret
mov
ds
pop
dec
inc
mov
add
inc
adc
add
push
mov
add
dec
sbbl
sbb
pop
test
test
jo
js
fistps
lret
xor
inc
pop
pop
push
lret
addr16
imul
xchg
push
int3
add
xchg
sub
push
je
sbb
xor
or
xor
xor
inc
and
out
pushf
repz
xchg
add
mov
dec
shlb
dec
inc
sub
dec
inc
lahf
jno
dec
data16
cmpsl
cmp
dec
pop
out
test
inc
dec
dec
testl
push
dec
aaa
fdiv
or
sub
fisubrl
xlat
push
lret
xchg
cmc
loope
cmp
jae
push
pop
fndisi(8087
fcoms
repnz
andb
ds
rcrb
stos
and
ret
stos
sbb
pop
jne
push
xor
outsl
push
fs
shll
test
mov
test
outsl
insl
add
push
out
mov
ss
pop
jp
inc
inc
pop
pop
push
nop
xchg
fadd
push
cmpsl
jnp
mov
jle
jb
and
ss
sub
or
or
roll
mov
aam
addb
aam
mov
push
pop
scas
add
push
nop
pusha
ret
add
jp
movl
gs
push
es
fxch
push
push
jle
arpl
fadds
imul
sbb
in
dec
hlt
xchg
les
inc
and
mov
push
jmp
mov
fadds
inc
push
lods
imul
push
add
push
stos
outsb
dec
dec
push
stc
clc
data16
fmuls
dec
pop
ret
jnp
add
movsl
sar
stos
lcall
inc
inc
add
pop
loope
and
repz
add
or
pop
ret
push
inc
push
inc
inc
dec
aaa
cmp
xchg
and
inc
xor
inc
dec
xor
or
hlt
repz
mov
pusha
jle
lods
ja
mov
inc
setb
inc
loopne
aam
cli
bound
ja
jb
add
in
inc
sub
inc
lock
push
cmc
ljmp
xlat
andnps
inc
xor
bound
xlat
lds
ds
repz
cmpsl
push
inc
mov
or
or
cltd
add
das
jecxz
loopne
sub
push
dec
mov
xchg
inc
rol
pop
add
pop
hlt
sbb
and
pop
aaa
popf
inc
js
fsts
jbe
setno
faddp
inc
mov
mov
push
outsl
push
dec
sbb
push
mov
adc
sub
mov
sub
dec
add
inc
mov
pop
push
jno
ret
clc
subl
mov
dec
jae
xchg
xor
movsl
and
in
cld
inc
mov
loopne
jl
repz
enter
cwtl
jp
stos
lcall
sbb
insb
jno
sbb
pop
mov
das
add
aaa
and
test
cld
test
xor
cmp
test
fdivl
pop
pop
mov
mov
pop
call
push
jne
pop
ret
lret
dec
add
dec
fnstenv
xchg
sub
dec
dec
cmp
cli
jns
push
mov
mov
mov
dec
and
mov
dec
push
mov
fcmovb
push
outsb
xor
ret
cmp
rorl
add
adc
in
sbb
inc
shlb
or
push
rcrl
jb
dec
push
inc
test
aaa
sub
imul
add
lcall
xor
sarb
add
inc
dec
repnz
daa
outsl
xor
xor
inc
adc
mov
mov
dec
push
mov
out
lock
andb
mov
insl
ja
dec
xor
or
dec
and
add
rorl
adc
sbb
les
inc
and
add
fwait
dec
cld
dec
je
popa
outsl
ds
popa
lods
shrb
push
push
repnz
dec
cmp
and
lods
pop
add
rorl
jo
cs
dec
in
jns
popa
push
xlat
test
sub
lcall
pop
daa
insb
bound
and
rclb
lods
cld
cwtl
shll
mov
and
and
loop
and
cwtl
movl
lea
dec
mov
and
mov
mov
inc
loope
mov
cmpsb
dec
rcr
mov
jle
popa
repz
mov
rorl
fildll
jnp
es
pop
add
call
pop
sub
lods
cmp
cmp
clc
or
jmp
dec
daa
hlt
inc
inc
sub
sbb
jb
xor
addl
std
lods
sbb
cwtl
sbb
mov
hlt
stos
add
out
aam
repnz
mov
rep
xchg
lock
jg
push
add
jmp
push
xchg
dec
lret
dec
add
jae
pop
pusha
data16
mov
mov
cmpsb
out
pop
add
loop
and
adcl
cmp
cs
push
test
dec
add
push
and
out
loop
ret
adc
in
cmp
add
sbb
aaa
mov
roll
add
sbb
cmp
sub
pop
int
jne
add
inc
push
loop
into
adc
xchg
out
mov
jmp
jg
cli
repnz
aaa
icebp
pop
pop
js
mov
lea
stos
or
or
scas
pop
cld
mov
inc
js
xor
jo
loop
or
mov
lret
xlat
or
inc
cld
lahf
push
xchg
add
add
push
adc
add
stos
push
outsb
xchg
orb
push
sbb
dec
ret
int
pop
lock
jl
mov
inc
cmp
xor
shll
mov
shrb
inc
inc
iret
sub
hlt
inc
push
adc
sbb
mov
add
decl
aas
xor
add
add
clc
xchg
push
out
testb
sub
adc
rorl
jp
sub
jbe
mov
clc
mov
pop
in
adc
mov
ljmp
out
add
das
mulb
add
lcall
adc
xchg
push
sar
add
out
push
stc
xchg
pushf
dec
ljmp
or
lcall
mov
push
test
xor
cmp
xchg
imul
add
in
popf
add
add
cmp
dec
xchg
and
iret
adc
jg
and
xchg
scas
jo
mov
inc
outsl
and
add
jne
not
add
push
xor
add
sub
jo
enter
fwait
lea
enter
mov
ret
or
in
pop
cld
push
adc
stos
hlt
lock
mov
pusha
push
enter
pusha
ss
hlt
in
xor
add
sbb
mov
loopne
add
je
push
sub
sub
or
insb
ljmp
xor
adc
xchg
outsb
ret
jmp
insb
pop
int3
jno
mov
fisubrs
cmpsb
xchg
mov
fs
add
pop
dec
adc
sub
lcall
enter
ja
divl
fimull
mov
scas
or
cmp
push
add
mov
and
jp
push
call
push
and
or
push
jle
xchg
mov
xor
xchg
mov
jns
ljmp
fimuls
repz
xchg
jg
xchg
xchg
lock
inc
adc
add
std
add
dec
rclb
int3
inc
xchg
je
or
imul
inc
inc
inc
xchg
pop
icebp
fcomip
pop
imul
mov
cwtl
or
fstl
mov
outsb
imul
jle
lods
rcl
jg
dec
or
add
mov
loop
outsb
insb
pop
fiadds
or
movsb
sbb
scas
cli
pop
fsubrl
mov
enter
test
mov
xor
cmp
rclb
inc
nop
mov
data16
xchg
sti
inc
push
inc
popf
mov
es
inc
sbb
mov
shr
sahf
loopne
mov
mov
add
push
sbb
cmc
in
mov
inc
jp
add
loop
push
pop
stos
std
mov
push
dec
mov
fistps
pop
push
adc
dec
and
dec
mov
cmc
adc
fwait
jecxz
mov
pop
mov
lods
sub
stos
push
dec
leave
pop
ret
sub
sub
push
ret
call
jecxz
sub
add
out
lcall
fimuls
arpl
icebp
stc
and
cmp
out
loop
cld
int
or
iret
cmpsb
push
cmp
cli
iret
jae
insb
mov
add
mov
les
dec
adc
and
pop
sub
inc
roll
jmp
shlb
fimull
lods
inc
les
sbb
mov
inc
jno
dec
inc
mov
push
or
pop
dec
cmp
dec
inc
mov
fcom
mov
pop
mov
loopne
jecxz
aam
loope
xor
add
fnstenv
push
and
fdivrs
push
mov
fwait
pop
and
add
jb
cmp
loope
mov
add
sub
jecxz
fcmovnb
inc
mov
stos
dec
imul
jnp
jo
stos
pop
in
ss
movsb
popa
sbb
mov
bound
sahf
bound
mov
or
push
ja
or
test
xor
inc
push
imul
leave
add
movsb
lock
mov
mov
dec
ljmp
cli
ljmp
jae
addr16
hlt
pop
mov
inc
orb
add
insl
pop
cmp
and
lret
shrb
xchg
mov
adc
dec
jg
sbb
lahf
stc
pop
dec
adc
addr16
popf
insb
adc
popa
mov
cmp
mov
jg
dec
arpl
xchg
and
sbb
test
sbb
pusha
and
mov
push
or
sarb
into
jo
inc
and
mov
dec
nop
xchg
sub
and
psrld
sub
push
loope
sbb
test
fbld
loop
arpl
icebp
ja
pop
mov
add
dec
shll
xchg
mov
or
push
inc
leave
imul
mov
std
mov
jb
mov
cwtl
mov
xlat
mov
pop
mov
push
jo
imulb
sahf
pop
xchg
mov
aas
cli
nop
xchg
add
fisubs
add
inc
stc
test
mov
aam
mov
and
into
out
xchg
pop
add
enter
jbe
addl
jge
xchg
and
jnp
mov
sar
shl
mov
or
adc
arpl
clc
and
adc
add
lods
mov
sub
jl
sub
mov
xlat
mulb
sahf
add
xor
sbb
ret
outsb
pop
roll
pop
dec
icebp
sub
mov
test
lods
and
popf
push
pop
cmp
inc
cs
cmp
jb
xlat
xor
jmp
aam
mov
orb
incb
dec
dec
ljmp
push
mov
int3
sub
adc
ljmp
and
das
into
fsubrs
mov
decl
and
push
mov
loop
mov
popf
jmp
sbb
rolb
dec
add
mov
cmpsb
adc
pop
ja
out
sub
les
jmp
filds
inc
xchg
shl
fcmovu
daa
mov
les
adcb
push
dec
push
outsb
pop
cmpsb
test
bound
das
xor
in
pusha
ret
mov
mov
sbb
adc
out
cmpsb
icebp
bound
inc
cwtl
pusha
sarl
icebp
negb
jns
aaa
inc
push
pop
sub
mov
jl
aam
out
jge
cwtl
test
fwait
je
lret
adc
cs
out
ret
mov
mov
in
data16
mov
mov
in
lods
stos
push
leave
pop
mov
mov
jmp
inc
jmp
sti
inc
push
test
add
popa
loopne
les
jge
mov
mov
stos
icebp
inc
cs
out
out
loopne
mov
pop
clc
adc
and
or
pop
pop
pop
adc
int3
into
pop
sbb
xchg
dec
hlt
pop
push
ret
sbb
pop
cmp
sbb
adc
pop
push
icebp
rcll
aaa
jmp
mov
cmp
push
xor
das
sarb
inc
push
add
push
add
das
out
sub
dec
add
arpl
or
xchg
ret
repnz
push
lcall
imul
adc
ret
pop
mov
inc
cwtl
xchg
je
add
sbb
mov
enter
mov
aas
mov
mov
insl
popa
fmull
push
add
shl
in
call
or
inc
out
or
fstps
cli
jno
cltd
test
xor
mov
sti
mov
scas
inc
mov
push
or
jg
or
and
sub
dec
dec
out
ljmp
jecxz
cmpsb
or
inc
push
pop
lcall
fistps
mov
sbb
pusha
out
scas
faddp
fldl
loope
inc
pop
dec
out
push
xor
cld
fwait
add
aam
lods
lea
cmp
mov
ret
push
lret
movl
pop
cmp
sbb
push
js
jnp
adcb
sbb
hlt
ds
jo
mov
orl
mov
xor
mov
inc
fmull
pop
aas
repz
cmp
aam
add
aam
push
sbb
mov
inc
idiv
mov
ds
loope
add
inc
movb
movsl
cltd
and
mov
push
repnz
xchg
out
aad
mov
shll
mov
or
int3
loop
or
mov
rclb
pop
addb
mov
repnz
call
cli
and
stos
test
int3
movsb
testb
mov
shlb
sbbb
cmp
outsb
cld
cmp
mov
shlb
or
jge
or
clc
mov
xor
mov
pop
jbe
inc
xlat
add
dec
out
in
sub
rcl
pop
cmp
or
loop
leave
pop
push
pop
imul
push
aam
shrb
adc
ljmp
and
mov
push
inc
and
sahf
stos
lods
adc
mov
fsubs
push
jle
cmp
add
xlat
insb
decl
push
rol
add
lock
lods
xchg
test
scas
fwait
ds
inc
mov
leave
mov
sub
fidivrl
jnp
or
mov
inc
data16
cmp
adc
test
incl
or
xchg
push
pop
scas
xor
push
les
out
or
in
mov
js
mov
adc
adc
pop
dec
out
mov
cld
mov
push
cmp
jp
pop
xor
lock
dec
pushf
call
push
fdivrl
jmp
call
subl
sahf
jbe
stc
decb
cs
subb
mov
xchg
data16
jg
andb
sub
mov
or
mov
and
sbbb
or
inc
adc
mov
mov
dec
shr
push
pop
inc
icebp
call
xchg
out
sub
test
jle
cld
mov
stos
lds
jmp
xor
dec
das
jecxz
push
adc
cmp
push
sub
decl
xchg
cmpsl
or
xor
jle
jge
jo
inc
test
xlat
cmp
out
nop
repnz
dec
xchg
mov
sarb
sub
cmpb
pop
inc
test
and
fwait
ror
push
jg
sti
mov
or
cmp
and
push
pop
repnz
aaa
cmp
add
add
out
pushl
pop
pop
and
shrb
cwtl
lcall
ficoms
jno
call
pop
sti
pop
and
pop
xchg
jnp
in
outsb
add
rcrb
aad
rcrb
cmp
dec
jecxz
clc
orb
mov
loopne
add
sbb
pop
fiadds
pusha
nop
pop
mov
cmc
xchg
sub
jb
ja
cli
pop
mov
add
call
mov
stos
stos
lds
jl
enter
xor
out
mov
sub
clc
and
push
int
loope,pn
jmp
adc
dec
and
jl
push
pop
xor
cli
cmp
xchg
mov
fwait
or
jo
adc
sbb
sti
shrb
inc
std
inc
stos
and
sub
gs
adc
fs
dec
aad
pop
push
out
filds
adc
test
cmp
mov
mov
sbb
adc
push
out
xor
cmp
and
mov
arpl
pop
pop
cmc
sete
push
inc
sub
push
and
fdivr
mov
cltd
pcmpgtd
fdivr
sub
mov
jns
faddp
addr16
stos
push
sub
outsl
ds
push
out
in
cmp
call
mov
push
add
aas
adc
jecxz
fistl
or
lahf
mov
cmpl
jae
loopne
or
xchg
inc
pop
shlb
loop
cmp
mov
add
out
cli
jbe
es
js
jp
sbb
rorb
addr16
xor
pop
mov
push
pop
stos
cli
test
ljmp
mov
pop
jns
lea
scas
adc
loopne
mov
test
mov
out
inc
sub
call
or
out
push
cmpb
jp
inc
daa
mov
jne
mov
inc
shll
adc
jge
not
xchg
mov
cld
push
mov
lock
nop
fidivs
inc
into
cld
jg
inc
rclb
in
loope
pusha
stos
jno
nop
mov
jecxz
adc
ja
inc
imul
add
cmpsb
cmp
pop
push
xchg
out
dec
push
push
add
dec
push
or
dec
cmp
cmp
mov
adcb
xor
cs
out
fcmovne
sbb
pushf
data16
cmpsb
call
xor
sbb
lahf
outsl
xchg
jb
lcall
push
lea
test
mov
push
or
lcall
insl
mov
xor
negb
test
fmuls
repz
pop
nop
push
sbb
movl
cmp
ret
enter
test
xor
add
mov
add
loopne
daa
mov
test
jmp
jecxz
or
inc
add
and
adc
out
adc
mov
and
stos
cmp
pop
sarl
hlt
add
lret
movsl
lret
jo
xchg
mov
sub
test
cmp
mov
dec
push
push
nop
sub
idivb
push
jmp
mov
sub
jb
sbb
gs
inc
xor
and
pop
outsb
or
adc
and
mov
adc
hlt
and
mov
mov
incl
jecxz
xchg
inc
pop
sbb
mov
add
addb
enter
mov
cmp
and
test
neg
sbb
cmpl
ss
repz
test
incl
mov
mov
add
push
cmp
dec
push
pusha
mov
push
or
fldt
ss
mov
mov
bound
xor
cli
out
jp
adcb
mov
mov
testb
mov
push
sub
push
mov
xor
jp
lret
in
xor
lret
and
popa
sub
loop
pop
lods
repnz
test
ljmp
push
lea
hlt
or
aam
das
or
and
push
je
mov
out
into
pop
ljmp
iret
push
push
sub
test
xchg
sbb
dec
or
adc
aas
js
lahf
sub
or
inc
dec
pop
cmp
rorb
mov
mov
clc
jno
dec
xchg
pop
mov
pop
jge
repnz
dec
movsl
int3
into
push
add
inc
sti
mov
mov
pop
lcall
jg
cli
ja
pop
out
cltd
jl
mov
dec
in
daa
and
xor
loop
loope
loop
pop
and
jb
pushf
and
mov
inc
push
fs
ret
pop
push
icebp
jne
push
or
arpl
rclb
push
mov
into
fnstsw
dec
mov
fistpl
ljmp
jb
xor
mov
stos
rol
mov
inc
pop
js
std
jg
xchg
std
popl
repnz
pop
cmp
pop
push
push
xchg
push
mov
out
mov
adc
or
pushw
pop
test
mov
subb
hlt
stc
es
and
and
mov
xorb
mov
jo
pop
shrl
fcomip
subb
mov
fbstp
add
inc
dec
mov
stos
jmp
bound
imul
out
pop
clc
aam
mov
fistpl
aas
mov
in
inc
aaa
icebp
and
inc
add
lret
ss
test
loop
sarl
test
out
clc
xlat
inc
es
xor
add
mov
pop
push
xor
cld
mov
lock
push
loopne
adc
adc
loop
sbb
clc
popa
loope
mov
mov
add
jl
xor
xor
sahf
stc
lock
or
dec
sbb
cmp
or
push
fcoms
dec
jo
fbld
test
cwtl
cmp
cmovle
add
jmp
pop
insb
pop
jb
push
sbb
jp
cmp
lods
test
xchg
sbb
mov
xchg
int3
sub
cmc
xchg
loop
aaa
sbb
add
mov
add
pop
adc
pop
insb
lcall
jecxz
aaa
xor
mov
pop
xchg
mov
jg
jl
mov
cmpsl
cli
rolb
or
xor
jo
add
fwait
xor
fsubrs
jmp
mov
push
js
push
repz
sbb
in
daa
adc
inc
sub
mov
mov
sbb
mov
fidivrs
rcrb
dec
stc
push
add
mov
jns
je
bound
mov
pop
inc
or
dec
jns
roll
pop
cmpsb
add
hlt
stos
lret
mov
insl
repnz
adc
adc
lock
das
jo
or
sub
xor
jmp
pop
sbb
mov
ds
sub
es
jle
mov
or
int3
mov
dec
leave
add
mov
ret
dec
cmp
mov
cld
mov
inc
std
insb
in
je
dec
inc
dec
push
cmp
adc
jo
test
mov
add
mov
fwait
das
push
mov
mov
and
xor
jmp
push
lcall
ja
push
fwait
call
scas
fistpll
lods
enter
pop
mov
push
or
mov
adc
mov
jecxz
pusha
fdivr
stos
stos
push
jmp
pop
xchg
add
pop
aas
cmc
das
test
pop
cld
push
xchg
and
push
pop
inc
and
cmp
xchg
aam
xchg
push
adcl
push
loope
mov
xor
xor
sbb
sti
mov
nop
fidivrs
and
jp
les
sub
imul
inc
fcomi
adc
cmp
outsb
jecxz
insb
sub
sarb
test
dec
sar
pop
dec
aam
xchg
mov
dec
movsl
adc
je
addr16
xor
loope
xchg
xor
sub
fs
sub
adc
push
inc
xchg
je
lahf
imul
clc
mov
inc
cmp
rolb
sar
and
adc
loopne
enter
jne
sar
xchg
out
loope
xchg
cmp
pop
push
sbb
jg
bound
imul
push
rolb
fs
pop
lock
enter
call
add
std
pop
loope
aaa
jb
movsb
inc
xor
sarb
das
add
adc
mov
mov
pop
cld
loop
or
test
addr16
jge
adc
mov
sbbb
daa
or
add
and
push
movsb
data16
xor
cmc
call
add
cwtl
outsb
shr
pop
xchg
sub
or
ret
test
out
dec
ljmp
test
sbb
ljmp
pop
or
xchg
mov
movsl
cli
mov
incb
xor
sub
add
lods
cmp
mov
xchg
xchg
loopne
ret
ret
data16
jnp
pop
mov
pop
or
and
dec
mov
js
aam
insb
out
push
sub
sbb
cmc
mov
andb
adc
call
dec
push
jo
adc
adc
cmp
das
clc
mov
cmc
or
sbb
push
pop
mov
cmp
mov
push
xor
xchg
rcrb
insl
leave
shl
lea
sub
sub
stos
sub
inc
jmp
jmp
push
sbb
mov
clc
mov
push
jbe
lods
add
add
pushl
out
push
mov
pop
cmpl
subl
add
or
cld
loope
filds
sbb
mov
adc
inc
mov
push
adc
rolb
es
and
sbb
movsl
inc
push
xchg
adc
sub
xchg
or
popf
mov
cmp
inc
into
rcl
incl
pop
cltd
mov
push
adc
subl
cmp
bound
arpl
call
out
cld
mov
cwtl
pop
shl
or
mov
out
mov
incl
ljmp
push
cmp
clc
sub
pushf
add
loope
xlat
sbb
cmc
decl
fisubrs
lock
xchg
dec
ret
test
add
lods
es
jge
popa
daa
mov
ss
pushf
loopne
xor
in
pop
icebp
mov
jne
imul
cmp
xchg
push
sahf
xchg
and
dec
cmp
flds
pop
sbb
ret
push
out
xchg
mov
or
loopne
cld
icebp
sti
mov
mov
loope
cli
incl
xchg
add
add
pop
je
push
lcall
cmp
pop
push
mov
pop
hlt
or
aam
fcompl
outsb
sbb
sub
cmp
add
xor
adc
fidivs
push
cmp
jecxz,pn
xchg
dec
imul
mov
hlt
vpmadcsswd
je
push
scas
fists
pop
push
mov
and
imul
jo
scas
and
cmp
sahf
mov
nop
popa
xchg
fs
mov
into
xor
add
push
jge
cld
insb
adc
or
add
mov
in
scas
sub
jle
dec
mov
lret
rorb
fisubrs
ret
ss
add
mov
inc
mov
movb
incl
sbb
add
pop
inc
incb
jle
iret
add
mov
push
out
xchg
ja
mov
mov
andb
cltd
sub
dec
jp
pop
sbb
fs
loop
pop
push
sub
cmpsl
test
notb
clc
add
fistps
adc
in
mov
cmpsb
push
loopne
or
movsb
dec
jge
test
pushf
fnstcw
std
stos
stos
dec
scas
es
pop
sub
shlb
add
sti
sub
jge
mov
es
movsl
push
inc
stos
add
mov
pop
inc
sbb
sbb
shr
mov
les
xchg
test
insl
fstenv
leave
push
mov
mov
mov
fnsave
mov
mov
and
das
mov
sub
mov
xchg
pushf
sbb
inc
cmp
push
js
adcb
test
cmp
mov
loopne
int3
sbb
jo
jecxz
clc
or
mov
je
dec
xchg
pop
add
ds
inc
mov
mov
jbe
pop
sub
xchg
mov
sbb
sbbb
loop
inc
xor
or
jb
clc
aad
fildll
lcall
clc
loope
outsl
pop
icebp
ljmp
mov
jg
mov
sahf
or
mov
hlt
movsb
cs
lea
sbb
push
ret
dec
cwtl
mov
cmpsb
jb
ret
scas
call
add
sbb
test
bswap
shll
inc
in
inc
sbb
xchg
adc
cmp
sub
xchg
and
popa
rorl
jne
adc
or
mov
fwait
push
jp
aas
mov
js
sub
push
xchg
cmp
loop
and
nop
xchg
or
and
data16
decl
pushf
fimuls
out
orb
or
pop
stc
decl
jg
jb
dec
leave
sbb
adc
or
rclb
adc
mov
dec
outsl
ljmp
jmp
sar
mov
mov
or
test
ljmp
shll
jo
xor
aaa
lods
adc
fadds
xor
push
xor
andb
sub
arpl
pop
mov
or
adc
js
mov
sbb
cmc
pop
repz
or
dec
hlt
mov
push
rclb
or
ljmp
fists
xor
stc
push
xchg
sub
aad
cs
mov
scas
push
cli
pop
add
push
repnz
pop
push
xor
xor
xchg
push
jo
mov
lock
push
pop
or
dec
pop
imul
jno
and
movsb
scas
clc
aam
gs
push
int
inc
in
mov
shrb
lea
outsl
jle
inc
das
adc
or
push
std
xchg
mov
imul
cltd
xor
std
add
pop
daa
cs
cmpsl
sbb
or
dec
inc
lods
add
sub
sahf
pop
rorl
rolb
stos
mov
fs
mov
int3
xchg
in
cmpsl
add
icebp
cmp
fs
shr
test
scas
push
add
in
shrb
test
adc
or
sbb
add
jbe
jge
fistpl
imul
cmpsl
cmc
into
lock
push
enter
loopne
jg
xchg
mov
js
bound
gs
inc
add
jl
and
ljmp
add
jmp
mov
incl
jae
hlt
add
push
mov
mov
loope
call
into
add
nop
out
dec
pushf
jno
ljmp
test
sub
jge
or
sahf
daa
add
loopne
push
mov
mov
inc
add
fimull
lcall
nop
mov
dec
dec
mov
decb
cli
inc
ficoml
pop
adc
pop
popa
stos
and
inc
xor
mov
mov
xchg
xor
outsb
test
mov
push
cmp
cld
pop
push
lock
and
mov
mov
mov
jecxz
subb
or
cmpsb
jb
je
sbb
sti
fistpll
outsb
lock
in
lock
mov
jmp
adc
jo
aas
sub
ljmp
scas
mov
push
pop
and
mov
add
stos
lock
mov
mov
lods
rcl
fwait
push
fs
lds
pop
sarb
or
jne
mov
and
mov
scas
sub
fildll
sub
mov
popf
out
mov
inc
xchg
sarb
and
lcall
cltd
iret
mov
cmpsb
mov
or
lds
pushf
ret
out
xchg
pop
add
jg
mov
stc
outsb
out
and
mov
stos
out
data16
rcll
dec
pop
add
sub
cli
incl
shrb
dec
dec
addr16
add
pushf
xor
std
xchg
je
adc
mov
add
mov
jnp
jl
mov
sub
xchg
sub
inc
sub
lods
pusha
mov
je
cmp
add
sahf
stc
xor
mov
and
movb
sbb
sub
mov
pop
filds
jg
lahf
inc
and
ficoms
int3
rolb
repnz
or
lret
test
mov
sbb
jp
or
out
sub
jecxz
mov
ret
int3
xchg
call
dec
aam
adc
lret
cli
mov
sbb
jge
mov
mov
rolb
xor
je
inc
mov
dec
push
xchg
xorl
stos
fcomps
xlat
popf
ret
push
add
xchg
dec
scas
dec
mov
adcb
movsl
mov
cmpsb
jne
dec
or
daa
sbb
imul
jbe
clc
leave
mov
jecxz
add
cli
xchg
mov
xchg
clc
pop
outsl
fadd
pusha
loope
jge
fdivs
dec
add
test
xchg
fldenv
jg
mov
inc
ja
pop
or
clc
sbb
add
mov
out
pop
mov
pop
dec
in
mov
mov
hlt
fcomip
and
adcb
fucomip
xchg
dec
dec
mov
leave
adc
rorl
frstor
or
pop
fnsave
jp
test
mov
insl
add
lret
cmp
lods
mov
add
testl
push
fs
hlt
add
sbb
add
fs
fldt
rorb
adc
imul
fs
inc
int
cwtl
out
fisubs
in
clc
dec
jmp
lods
ret
jmp
testl
in
add
mov
pop
jge
aam
stos
clc
les
xorb
stos
sub
es
jge,pt
inc
jne
repnz
call
scas
sbb
sbb
cltd
xchg
sbb
mov
in
mov
or
cwtl
lcall
repz
movsb
js
call
push
jl
sti
jp
test
cmc
loopne
mov
add
aam
std
addr16
push
cmp
xor
lcall
jno
sbb
or
lock
fwait
loope
xchg
and
jp
or
clc
sbb
mov
mov
outsb
mov
and
pop
and
js
std
call
test
mov
shlb
and
pushf
xor
outsl
push
loopne
mov
sub
mov
lahf
shr
mov
arpl
add
loopne
aad
scas
lcall
sub
sar
cli
pop
xor
and
cltd
jp
adc
xchg
orl
scas
inc
out
sub
loop
sub
pusha
jge
add
aas
daa
dec
sarl
mov
push
aad
andb
push
das
xchg
sahf
push
cmpsl
jb
shll
or
out
lock
jbe
iret
xchg
fcomps
xchg
mov
add
scas
inc
lret
imul
and
ljmp
inc
gs
pop
xchg
hlt
sub
pusha
mov
lahf
or
mov
inc
pusha
push
push
and
fwait
jg
mov
js
movsl
dec
adc
pusha
lret
ret
mov
data16
mov
in
mov
arpl
mov
sbb
fimuls
sub
ret
or
lds
and
dec
jle
mov
ljmp
daa
popa
aas
mov
dec
mov
push
into
test
shr
jmp
jb
or
jo
cmovs
sbb
nop
jno
jge
mov
decl
clc
icebp
sbb
pushf
in
popa
xlat
pop
and
mov
pop
inc
fadds
mov
lcall
bound
xchg
ret
inc
pop
call
pushf
mov
gs
fisttps
aaa
push
subb
jle
pop
mov
loope
fistpll
pop
inc
adcb
xor
sub
nop
enter
je,pn
xor
sbb
movsb
sbb
and
js
scas
sar
les
daa
dec
sub
inc
adc
icebp
test
in
fnstenv
push
insb
xchg
shll
shlb
cmpl
ljmp
vaddsd
jne
pop
adc
xchg
mov
push
clc
jo
fisubl
nop
in
js
mov
ds
or
cld
outsl
sbb
js
mov
addr16
jbe
roll
enter
pop
fsubp
incl
sub
cwtd
or
jp
mov
mov
int3
lock
test
adc
sub
incl
sbb
ss
shll
pop
jbe
andb
lahf
nop
les
xor
andl
incl
jmp
push
adc
data16
cmp
icebp
inc
outsb
lock
ds
dec
pusha
daa
cmp
incl
adc
xchg
xchg
popa
test
dec
dec
jmp
mov
mov
insb
hlt
in
popl
incb
aad
or
js
push
out
cmp
cmpsb
and
jbe
xor
addl
in
mov
xchg
xor
lds
out
in
fs
fdivrs
add
loop,pn
std
incl
or
push
cmpsb
lcall
ror
cmc
mov
aas
loope
outsb
bound
push
dec
inc
leave
sar
push
icebp
xorl
mov
das
rcrb
inc
pop
int
jne
sub
pop
adcb
ljmp
in
push
movsb
lea
xorl
sar
jnp
lock
xlat
cmp
test
mov
push
and
add
les
rclb
in
xchg
jmp
orb
jmp
adc
jg
sbb
cmp
clc
pop
push
lahf
add
sbb
push
xchg
pop
sbb
out
xchg
roll
inc
jno
cmp
lcall
pop
add
push
jns
sub
sbb
std
decl
mov
and
cwtl
outsb
scas
mov
add
dec
bound
add
inc
pop
mov
cmp
pusha
add
in
mov
fstpl
or
push
pusha
sbbb
mov
inc
insl
sub
gs
stc
pop
or
mov
sub
xchg
fistpll
jg
fwait
and
fnstenv
or
aam
and
lds
add
add
mov
out
mov
pop
repz
nop
fdivs
lods
sub
inc
add
and
push
cld
jecxz
out
loop,pn
add
mov
aas
lods
push
mov
lods
push
cmp
cwtl
dec
ficompl
xchg
mov
dec
mov
pop
lods
add
outsb
add
mov
pop
inc
jmp
ret
das
inc
xor
sbb
xchg
sub
insb
cwtl
push
adc
lahf
stc
ja
repz
sub
mov
ss
bound
jbe
mov
jmp
sub
push
ret
and
xchg
roll
shlb
sbb
imul
sbb
mov
out
ficoml
pop
repz
inc
or
data16
daa
pop
xchg
mov
dec
popa
push
ds
ds
push
ljmp
popa
or
movsl
jnp
shlb
imul
in
das
ljmp
sahf
pushl
pop
idivl
and
add
mov
dec
inc
mov
add
mov
add
aam
cltd
pop
mov
dec
repnz
and
xor
mov
jg
sbb
pusha
add
and
arpl
insl
test
and
aas
shl
call
jmp
adc
jle
ljmp
stos
mov
cwtl
add
or
fdivl
add
sub
in
add
sbb
add
mov
mov
lods
loope
and
and
jl
shll
dec
jle
and
mov
arpl
pop
mov
inc
or
lock
or
fwait
sub
sbb
imul
add
lret
rolb
stc
mov
mov
or
or
and
sub
dec
mov
xchg
or
xor
sbb
movl
add
setb
jne
in
ja
fs
xor
inc
jecxz
cmpsb
out
inc
push
or
xor
flds
hlt
jg
sbb
pop
dec
push
shrl
test
lock
add
mov
or
lds
idiv
pop
aam
loop
rcr
jmp
jns
adc
stos
mov
pushl
pushf
ret
repz
test
add
sbb
mov
fs
jmp
test
xor
cmp
mov
outsl
fcomp
push
sub
ret
lret
sbb
loopne
pop
or
sbb
cmp
std
jb
popa
push
mov
es
sahf
xchg
cmc
push
call
test
xor
lods
ja
stos
out
adc
dec
mov
bound
mov
mov
scas
pop
push
hlt
lcall
test
adc
outsl
addb
and
enter
push
push
out
lock
clc
mov
xor
push
sub
xchg
je
lods
push
out
xchg
les
sub
push
mov
scas
mov
ret
lret
add
sub
push
loope
or
sub
cmp
inc
mov
leave
fdivrs
sub
xlat
xor
pop
add
data16
lock
pop
mov
cmp
dec
lds
sub
outsl
movsb
stos
mov
mov
push
mov
add
insb
insl
clc
mov
mull
pop
cmp
fcoml
into
in
sub
pushl
in
or
add
test
dec
dec
pop
call
nop
pop
into
add
in
cli
jmp
push
cwtl
xchg
clc
icebp
stc
lods
jmp
xchg
sub
aas
push
adc
cmp
push
mov
mov
ret
stc
jle
mov
aam
ds
and
cmc
rclb
sahf
cmpsl
lret
movsb
push
jle
fidivl
ret
lods
add
cld
xor
or
mov
add
in
cmpsl
fisttps
push
and
cmpsl
xchg
mov
mov
sbb
call
cmp
or
mov
cmc
mov
rcr
push
imul
xchg
pushf
sbb
or
pop
sar
mov
arpl
in
clc
jp
andb
sbb
add
or
sbb
jl
nop
mov
mov
call
ret
and
mov
sbb
sbb
pop
or
mov
cwtl
int3
mov
mov
outsl
ficoml
xor
sbb
cmp
and
scas
fwait
xchg
sahf
pop
pop
pop
inc
lock
push
sub
loopne
add
xchg
fsubrs
mov
inc
lods
adc
and
add
stos
call
and
rorl
test
jo
out
jne
jmp
test
dec
pusha
push
leave
xor
insb
je
mov
fwait
les
push
dec
aaa
stos
ljmp
repz
mov
inc
push
jg
cld
lods
mov
mov
xchg
inc
adc
mull
scas
adc
int3
clc
jbe
jge
test
push
incb
rep
pop
inc
int
ret
mov
lcall
lret
in
orb
stos
pop
add
ljmp
dec
iret
cmp
std
add
or
inc
hlt
xchg
aas
add
ljmp
mov
lahf
aam
inc
sti
mov
inc
jo
pop
and
filds
pop
mov
lds
in
repz
into
adc
pusha
ret
cmp
adc
adc
outsb
test
jg
pusha
jne
pop
pop
adc
call
test
mov
inc
call
cmp
mov
outsl
cli
pop
ss
or
rcrb
or
jmp
xchg
sub
aad
jo
cmp
aas
std
pop
js
jnp
call
aad
pop
xchg
xchg
cmc
stos
imul
pop
xor
xor
insb
std
or
rorb
pushf
adc
nop
roll
push
mov
adc
jg
leave
push
scas
stc
push
scas
mov
fcompl
jl
mov
dec
sub
sbb
xor
aam
add
xchg
stos
push
stos
jge
es
inc
cmpb
cmp
test
repnz
movsl
adcl
gs
xchg
or
cmpsb
adc
inc
jae
rcrb
adc
mov
lock
add
neg
jno
cmp
ljmp
xor
pop
jecxz
or
insb
lahf
add
gs
clc
pop
sarb
add
sbb
pop
mov
lret
rol
or
push
sbb
push
std
jmp
sub
mov
mov
and
mov
das
cmp
ljmp
xor
lock
jb
aad
ret
pushl
push
or
sbb
dec
push
loopne
xor
out
mov
rcrb
sbb
pop
cmc
ljmp
inc
mov
aad
rol
jg
and
test
jns
inc
adc
cmp
fists
push
subb
or
mov
fstpt
in
push
mov
je
iret
andb
adcb
adc
aad
sbb
hlt
lods
push
dec
adc
aad
pushl
arpl
adc
mov
ss
sub
add
icebp
das
xchg
test
fidivl
and
xchg
test
ss
jg
mov
add
data16
js
lret
in
adc
or
push
ds
popa
jg
lret
subb
sub
ljmp
clc
pop
call
and
push
lret
mov
inc
jmp
incl
data16
mov
cmp
scas
and
lret
mov
out
insl
std
add
push
adc
cs
stos
ret
adc
popf
lahf
pop
dec
fcompl
jle
movl
clc
inc
addl
test
and
sub
mov
pop
out
add
decl
push
mov
arpl
xchg
popa
incl
pusha
fsubrs
mov
aaa
inc
dec
adc
rolb
adc
mov
dec
and
xchg
mov
lods
pop
jp
inc
and
dec
push
xchg
push
dec
cmp
ret
add
das
cmpsb
sbb
bound
xor
sbb
dec
add
cmpb
xchg
push
stos
movsl
sub
rolb
mov
or
mov
dec
mov
add
add
repz
js
push
shrl
jp
push
or
in
adc
cld
decl
inc
xchg
xchg
scas
push
rcll
ret
jns
scas
add
stos
ljmp
subl
cs
sbb
mov
in
outsb
push
and
dec
aad
mov
xchg
ljmp
inc
clc
pop
xor
test
out
adc
ret
cmp
aam
sub
adc
inc
loope
ja
faddl
adc
adc
dec
add
inc
shrb
pusha
out
add
sbb
pop
sbb
lcall
adc
sarb
inc
cmp
out
jmp
add
mov
and
in
aad
and
or
jmp
mov
out
repnz
rolb
jp
mov
mov
mov
dec
pushl
xchg
dec
push
xchg
test
xor
sbb
outsl
pop
xchg
ljmp
mov
push
ja
das
loope
pusha
push
in
and
mov
pop
adc
or
xchg
pop
bound
test
push
jp
fisubl
dec
mov
mov
jg
xor
push
pop
ds
mov
or
mov
push
es
mov
dec
mov
incl
push
nop
mov
push
cmp
std
fistl
jp
inc
popf
push
push
out
sahf
cltd
or
je
add
adc
aaa
mov
fmuls
and
sbb
cmpl
enter
imul
xchg
push
jne
add
or
scas
loope
jb
das
sarb
mov
xor
xor
mov
xchg
insb
mov
xor
mov
push
or
sbb
jp
lock
jo
bound
jle
or
in
test
ljmp
call
fs
loope
sbbl
ffreep
enter
das
clc
push
std
loop
icebp
sbb
rcll
sub
pop
mov
adc
out
cmpb
lods
sbb
add
push
jbe
push
call
inc
imul
dec
xchg
icebp
jg
enter
lahf
lret
adc
jle
or
imul
outsl
pop
cs
add
test
mov
or
inc
ja
jg
pop
popf
sub
ss
test
and
orl
inc
inc
clc
popf
ja
inc
lock
call
stos
je
mov
pop
xchg
push
mov
ljmp
add
inc
fcomi
push
ret
das
loop
fcoms
push
sub
mov
inc
out
jnp
insl
sbb
cwtl
clc
cmpsl
jno
jmp
lock
sbb
pop
aam
je
mov
xchg
sahf
xor
xchg
jle
gs
bound
in
nop
add
push
add
add
cmp
inc
mov
icebp
xor
xchg
xor
aas
test
xor
pop
loopne
lods
inc
add
or
mov
mov
jge
jo
rclb
xlat
sub
ss
test
xchg
rclb
pop
jg
sbb
notl
ja
mov
xor
dec
xchg
mov
adc
movsb
addl
lock
fadds
xor
ds
or
dec
inc
cmpsl
rolb
sub
jle
pop
or
sar
pop
dec
xorb
mov
add
mov
or
mov
icebp
das
ds
rolb
and
cmp
dec
jl
stc
xor
clc
sbb
test
out
cli
mov
fildll
push
and
les
mov
outsb
mov
jle
push
mov
rolb
lret
popa
sbb
test
push
sub
push
ret
cli
sbb
out
pushf
dec
packsswb
cmp
mov
ljmp
push
jle
out
add
fucomp
cmpsb
mov
push
adc
cmp
bound
fnsave
int3
repz
fists
add
push
xchg
ds
add
cmpsb
aas
js
cmp
hlt
add
lcall
pop
popa
aad
jbe
shll
jo
lret
fsubrs
add
imul
insb
add
dec
adc
pop
movsb
jg
xor
and
pop
cmpsb
insb
add
ljmp
xchg
inc
adc
and
xchg
adc
and
xor
or
mov
nop
cwtl
ficompl
adc
int
pop
xchg
je
push
outsl
sbb
cmpb
xor
shlb
xor
repnz
shll
add
xchg
outsl
cmp
lods
push
loopne
xchg
je
stos
testb
jmp
aas
mov
jbe
std
push
push
sbb
out
outsl
dec
mov
pushf
push
lret
mov
pusha
in
andl
cmp
sub
add
or
xor
hlt
les
add
imul
decb
incl
adc
push
inc
dec
add
mov
clc
pop
dec
xor
adcl
cmp
pushf
pushl
mov
outsl
incl
imul
xor
mov
inc
mov
outsl
push
std
jp
or
inc
inc
popa
testb
repnz
jg
fs
dec
aas
jne
xchg
into
cwtl
shrl
inc
shr
cli
push
dec
mov
std
incl
push
push
and
jl
add
add
pop
cmc
and
sub
sbb
divl
add
mov
add
pop
pusha
xchg
cmc
ljmp
or
sub
inc
sub
repnz
lcall
jns
pushl
pop
ds
sti
adc
sahf
icebp
push
jns
inc
inc
in
cmp
fbstp
sub
in
ret
jle
cmpl
mov
subl
cmp
xor
mov
pop
mov
xchg
mov
xor
mov
jg
int3
xchg
loop
inc
in
movsb
mov
xlat
cwtl
movaps
add
and
dec
enter
cmp
cli
cmp
mov
cmp
pusha
out
sub
bound
std
lea
sbb
nop
push
add
or
outsb
add
jne
jl
nop
or
add
outsl
pop
cld
and
enter
jo
jae
add
cmpb
je
mov
rorl
loope
jnp
push
dec
insl
test
pop
stos
test
xchg
icebp
pop
lds
jns
mov
aaa
imul
test
ffreep
or
push
push
xchg
loopne
jbe
fdivrs
lret
dec
add
and
sbb
cmp
hlt
icebp
scas
cli
jmp
push
xor
mov
into
sub
pop
add
dec
lock
pushl
loopne
jp
cwtl
xchg
pushf
xchg
enter
sti
xor
sub
push
pop
jbe
mov
mov
or
adc
pushf
pop
dec
call
xchg
inc
fwait
and
pushf
jg
push
test
fidivl
add
cmp
enter
push
cmpsb
fisttpl
pop
out
mov
jg
mov
clc
pop
jbe
addr16
pushf
mov
sbb
xchg
lock
jbe
loope
mov
add
adc
jo
call
and
fwait
sub
xchg
shlb
loope
sub
xor
bound
loopne
pop
ss
mov
lcall
shll
scas
mov
fcmove
xor
sub
pop
inc
mov
jmp
clc
jbe
rorb
mov
pextrw
lock
scas
es
jo
xchg
pop
insb
in
imul
loope
cmp
aas
clc
incl
lods
fwait
movsl
mov
loopne
inc
mov
xchg
shrb
mov
pop
mov
mov
imull
clc
hlt
mov
inc
icebp
or
adc
call
mov
sub
shr
sub
xor
adc
xchg
mov
inc
and
sarb
push
shll
xor
pop
scas
add
cmp
xor
and
cmp
mov
lcall
clc
daa
shll
cmc
jo
ljmp
mov
test
lea
pusha
popa
push
xchg
js
lahf
pop
inc
sarl
subb
cli
js
fs
shl
push
sbbl
jp
mov
loopne
fisttpl
xor
fcmovnu
in
mov
jl
int3
inc
out
or
xchg
lods
xor
incl
sti
dec
inc
out
lret
fcmovnb
hlt
aad
loop
pop
testb
outsb
or
add
jmp
in
jmp
fists
push
out
jbe
je
cs
out
icebp
mov
add
lods
mov
cmpb
andl
sub
fsub
mov
icebp
popa
xchg
mov
orb
jo
mov
outsb
fcomip
jg
stos
clc
lods
push
pop
mov
f2xm1
mov
xor
loopne
mov
add
add
das
and
pop
sahf
ja
cmp
push
ds
jp
pushl
dec
add
movsl
mov
push
sbb
in
imul
std
lcall
jb
pop
rolb
adc
pop
adc
and
into
mov
inc
scas
and
cld
fwait
sbb
ds
xor
mov
nop
add
push
sbb
data16
jae
cli
and
adc
inc
clc
sub
jmp
mov
push
jne
fidivrs
add
add
mov
push
fsts
pop
lahf
dec
xchg
sbb
addr16
cmp
mov
mov
cmpsb
scas
xor
movsl
push
cmp
or
lods
mov
mov
dec
dec
sub
nop
dec
aam
jmp
dec
mov
mov
scas
xchg
add
mov
out
push
adc
and
call
sbbl
cltd
lcall
xor
call
inc
mov
pop
ljmp
pop
xor
add
mov
sub
test
jle
ss
das
pop
jno
scas
xchg
sarb
in
mov
or
cli
jmp
cmp
mov
xchg
movsb
es
xor
mov
jb
ss
mov
cli
sbb
jne
dec
and
mov
imul
inc
dec
subb
mov
loopne
cltd
mov
jno
cli
mov
inc
mov
inc
fucom
and
add
cmp
adc
rcrl
data16
mov
cmp
lock
icebp
adc
mov
rol
dec
test
or
cld
rcl
xor
cmp
nop
pop
pop
popf
xchg
gs
movsl
dec
sbb
or
pop
incl
push
pop
add
mov
and
xchg
push
loop
xlat
adc
mov
jmp
clc
addr16
addl
mov
or
lahf
cmp
inc
jb
xchg
cmp
fdivr
pop
dec
push
aam
xlat
ja
call
cld
mov
aad
dec
daa
inc
nop
pop
and
mov
cli
dec
sub
nop
or
jle
pop
mov
loopne
cmp
test
cld
mov
pop
and
outsl
pop
push
fnstcw
clc
enter
repz
mov
mov
pop
xchg
pop
mov
and
jg
jmp
fcmovb
xor
mov
add
mov
jge
cwtl
sub
mov
or
adc
sarb
xchg
mov
es
mov
xchg
shll
xchg
pushf
popa
push
add
push
add
sbb
cmp
loop
call
mov
dec
inc
mov
mov
pop
les
inc
fcomps
aam
scas
rcr
mov
pop
dec
ljmp
aad
fwait
sbb
cs
jbe
mov
not
lock
shl
mov
aaa
fidivrs
inc
mov
xlat
sbb
pusha
xor
sub
fildl
dec
lea
addr16
or
out
mov
into
add
mov
pop
xchg
push
sub
mov
push
dec
mov
cld
pop
push
loop
cmpsl
push
hlt
rolb
test
jnp
int
pop
xor
adc
outsb
cld
outsl
xor
adc
test
out
xchg
les
imul
rol
pop
mov
inc
mov
and
inc
mov
aaa
adc
push
adc
cmp
test
or
or
pop
inc
leave
mov
pushf
cmpb
xor
je
add
fnstenv
inc
sub
cmpl
xchg
lods
ficoms
mov
and
fldt
pop
jp
pusha
out
pop
dec
cli
cmp
and
xor
pop
dec
cs
std
mov
leave
lock
dec
out
push
jle
and
repnz
loop
inc
outsb
or
adc
mull
mov
xor
jae
fistl
mov
loope
rorb
or
in
push
jp
cmpsl
adc
lds
hlt
ja
imul
imul
add
jo
imul
mov
ljmp
inc
loopne
sahf
sbb
lret
dec
stos
fldt
enter
push
inc
jp
mov
cld
ds
fisubrs
lcall
insb
sbb
mov
out
outsl
push
inc
inc
test
mov
dec
enter
cmpsl
and
rolb
inc
cmp
add
lret
add
repnz
aaa
sahf
das
mov
add
subl
ss
scas
jp
scas
push
lahf
push
mov
pop
xorl
and
scas
in
ljmp
lock
jle
xor
sarl
or
pop
leave
fisttpll
lods
nop
stos
and
add
clc
pop
hlt
pop
imul
sbb
and
rcll
adc
xchg
push
clc
inc
daa
mov
es
lock
bound
push
orb
nop
mov
hlt
jne
fs
insl
or
mov
cmp
cmc
mov
rorb
int
cmpsb
inc
rcrb
pop
cld
mov
test
adc
and
adc
or
jl
mov
loopne
mov
xchg
sbb
insb
jmp
clc
filds
bound
test
lock
call
les
cmpl
push
add
icebp
mov
inc
or
mov
xor
lea
add
add
jp
fwait
lret
or
adc
lds
js
adc
push
mov
ret
inc
adc
adc
mov
xchg
insl
addl
test
dec
into
stos
inc
pop
lock
cwtl
mov
jbe
mov
ljmp
mov
adc
repnz
add
xor
ret
rcll
fmulp
stos
lds
jmp
daa
sahf
fs
enter
fstpt
pusha
sub
int
adc
cmp
mov
inc
mov
mov
ljmp
fistpll
ja
pusha
xchg
lcall
repnz
mov
pop
ret
decb
test
loope
adc
dec
std
and
cmc
lods
pop
scas
xor
fwait
mov
inc
or
jb
pop
jne
test
data16
fdivr
pop
mov
test
shr
int3
add
dec
or
stos
pop
test
mov
movsb
cmpl
je
push
mov
mov
lcall
xchg
jo
sub
xorb
into
push
lcall
sbb
std
lcall
repz
or
cmp
push
sub
pop
imul
xor
mov
les
fbstp
push
or
clc
scas
fstpt
data16
inc
inc
xchg
test
adc
mov
ja
shll
sub
lcall
out
lea
lahf
in
test
or
and
xor
cld
jg
add
jl
daa
jle
mov
xor
add
sbb
adc
dec
fnstcw
rorl
stos
or
pop
push
push
pop
mov
ljmp
lods
sbb
loop
pop
mov
icebp
dec
jns
add
shl
adc
and
stos
xor
xchg
or
in
lahf
arpl
mov
cmpsb
lcall
les
mov
mov
cli
cmp
test
andl
imull
ljmp
inc
jmp
mov
sti
jg
jge
jne
push
push
cmp
pop
fbld
cmc
inc
ret
add
cmp
xchg
xchg
add
sub
push
dec
loop
dec
dec
icebp
jno
shl
jp
ficoms
or
fistpll
bound
test
or
cmc
mov
mov
int
sarb
adc
int
loopne
mov
mov
mov
clc
mov
cs
sti
and
sbb
xchg
jmp
adc
dec
dec
mov
cmp
push
mov
nopl
les
test
loopne
xchg
or
scas
shrb
in
jg
xor
into
mov
sbb
cmc
aaa
add
push
in
out
xchg
pushf
lcall
insb
xor
push
repz
daa
pushl
mov
pop
push
push
mov
mov
decl
shlb
loope
mov
lds
inc
mov
leave
or
mov
fwait
xor
out
adc
push
sar
inc
and
lods
clc
daa
or
negb
push
pop
js
and
push
mov
clc
or
mov
sub
rcll
jg
xor
pop
dec
sub
popa
mov
into
xor
mov
pushl
prefetcht2
jg
popa
or
push
jbe
mov
xor
xchg
inc
aad
or
mov
dec
mov
adc
mov
cld
push
loope
aaa
cmpl
pusha
mov
loope
sbb
and
mov
rolb
and
add
mov
inc
cld
ljmp
sbb
adc
ss
fstpl
aad
andb
les
mov
push
sbb
iret
out
xorb
fcoml
in
mov
out
jp
xchg
cmpb
inc
mov
scas
pusha
fcompl
pop
es
ljmp
push
fldenv
out
pushf
sub
je
mov
fmuls
outsb
je
js
mov
cli
fwait
outsb
rolb
adc
mov
inc
cld
lcall
push
ror
push
movsb
lcall
ss
sub
mov
mov
ret
mov
adc
push
lcall
cmc
fs
daa
icebp
fistpll
pop
mov
mov
inc
out
and
sahf
and
into
or
rolb
or
push
out
shrb
leave
andl
popa
add
jl
pop
fisttps
fists
inc
inc
cmpb
push
add
pop
cltd
cs
sbb
mov
js
ljmp
or
pop
jno
jecxz
inc
scas
cmc
mov
xor
cmpsb
push
pushl
sub
inc
ljmp
jl
testb
add
jg
cmp
stos
fstps
insl
sbb
mov
mov
and
ss
adc
cli
clc
loope
idivb
push
loope
rcl
add
rcr
shll
mov
lcall
in
adc
jmp
xor
fxch
adc
jae
mov
push
sahf
fidivl
pop
cmp
xchg
and
or
inc
mov
dec
fisubrl
pop
add
push
dec
pop
test
loopne
xchg
into
mov
mov
stc
adc
mov
fsubrp
mov
popa
stc
cwtl
and
sbb
cmp
stos
ja
jno
loop
xchg
sub
dec
sarb
cld
fwait
sub
test
mov
aaa
push
bound
bound
jg
pop
clc
jg
fwait
dec
sbb
fs
or
call
mov
lods
fs
xor
std
inc
mov
sbb
outsb
sbb
jno
mov
or
ja
dec
pop
sarl
daa
cld
pop
xchg
incl
or
lock
stos
inc
mov
cmp
movsb
lock
test
sbb
xchg
lock
jno
int
cli
adc
fwait
lcall
add
cmp
xchg
cmpsl
add
or
dec
and
add
int
xchg
paddusb
scas
les
cltd
cmp
or
push
roll
xlat
call
add
add
out
sub
mov
jmp
repnz
cmp
repnz
enter
xor
ljmp
mov
push
xlat
rsm
lea
or
loopne
xchg
es
xchg
mov
das
xor
mov
imul
imul
ret
cmpb
pusha
call
cmpsl
mov
xchg
push
fdiv
inc
je
bswap
aam
xlat
movsl
test
call
mov
ret
add
popf
popf
mov
or
lds
xor
jl
in
push
jbe
inc
push
lods
adc
test
test
push
jle
std
push
sbb
je
xchg
add
push
xor
insb
fildll
or
inc
adc
mov
adc
xchg
popa
out
jb
rol
jmp
add
and
jnp
fidivs
jo,pt
fcos
mov
pop
sbb
jb
cmp
inc
mov
xlat
sbb
repnz
in
cmpsb
fadds
ljmp
into
add
shll
pop
lret
fildl
jg
xor
sbb
fdivrs
jns
jge
dec
mov
xor
inc
push
dec
imul
mov
test
xor
push
repz
insl
xchg
shlb
mov
fwait
and
aaa
or
adc
ds
sub
in
dec
rcl
cmp
cld
add
cmpl
and
jge
mov
sbb
add
sub
pushl
push
call
jp
adc
inc
mov
test
decl
shr
jl
ljmp
or
pop
dec
lods
mov
ds
mov
sub
incl
push
inc
adc
enter
inc
sti
inc
cli
mov
mov
in
push
lcall
scas
mov
and
sub
sub
nop
pop
aad
or
jmp
jb
imul
sub
cmp
lds
stc
pop
lret
pusha
ljmp
xor
lods
rclb
ret
mov
call
into
mov
test
out
push
subb
lods
cmp
add
add
movsb
incl
add
push
mov
ret
cmp
push
jle
ds
or
xlat
fstps
loop
clc
fwait
pushf
pop
mov
mov
xchg
jg
in
cmp
mulb
sahf
push
cltd
xchg
loopne
cmp
add
call
jo
xchg
scas
call
out
sbb
jmp
idivb
mov
mov
or
pop
outsb
mov
aam
incl
sub
mov
inc
call
movsl
mov
iret
mov
sbb
add
neg
pusha
add
pop
addb
cmp
outsb
sbb
idiv
or
test
out
pop
testb
pop
enter
out
sbb
into
mov
ret
inc
mov
testb
xor
pusha
out
or
or
sub
in
lds
mov
lahf
addr16
loop
fcomip
mov
mov
xor
das
add
fldl
push
adc
es
les
ret
rcrl
rcrb
add
cmpl
negl
pop
sarl
hlt
stos
dec
mov
jnp
ret
push
xchg
int
push
mull
loop
fmull
shll
dec
xchg
cmp
jg
in
test
adc
call
push
icebp
aas
jp
iret
add
and
sar
mov
jo
cmp
int3
call
xchg
orb
xor
dec
test
or
add
mov
push
push
out
aam
aas
xchg
and
or
inc
lods
mov
imul
inc
repnz
fsubl
add
movb
push
sbb
idivb
xchg
and
push
xchg
pop
adc
hlt
sar
sub
xlat
lret
adc
fisubl
add
dec
xor
xor
addl
and
add
or
rcr
aaa
jge
lock
test
pop
in
push
inc
adc
sti
or
cld
pop
enter
add
xor
and
roll
popa
lds
insl
int3
test
or
jmp
sub
add
pop
dec
out
push
xchg
pop
lods
and
filds
sbb
push
pop
ss
cmp
or
dec
jno
cld
pop
pushf
lret
cli
lds
aam
and
jle
stos
add
mov
cwtl
mov
sub
pusha
push
pop
jmp
sbb
cli
cs
sbb
inc
pop
or
cld
jmp
adc
mov
jae
inc
inc
dec
fwait
es
jmp
pop
push
inc
sti
decl
push
mov
cmp
adc
jge
dec
sbb
dec
pop
andl
mov
loop
loope
pop
cltd
das
test
fistl
daa
push
outsb
cwtl
movsb
adc
mov
ja
push
loop
lds
popf
repnz
and
pop
add
jbe
jb
out
cmpsl
clc
add
jmp
cmp
jbe
sub
es
pop
adc
or
mov
jo
inc
mov
das
outsb
bound
dec
inc
lock
lock
sub
fsubl
sub
mov
mov
std
stos
add
inc
pop
adcl
pop
bound
cmpsb
sub
sub
sub
mov
dec
pusha
mov
rcrb
shl
mov
adcb
add
jmp
and
sbb
adc
aad
jmp
and
incl
inc
loopne
orb
add
fimull
lcall
pop
idivb
inc
stc
in
pop
mov
mov
xor
in
mov
pop
jg
pushw
and
clc
aaa
mov
adc
loope
loop
and
adc
jbe
mov
xor
ss
mov
push
int3
xor
inc
pusha
imul
scas
aad
dec
mov
or
xor
stos
cmpsb
cmp
roll
pusha
pop
jl
inc
adc
cmc
das
mov
imul
mov
dec
push
test
sbb
adcl
into
xchg
lea
ret
test
insb
sar
outsb
mov
fdivrs
xchg
xor
subb
mov
pop
in
loop
aaa
clc
cs
add
dec
pushf
mov
mov
rcl
test
push
pushf
test
out
inc
mov
aaa
pusha
or
or
and
ljmp
cmpsl
cli
stc
mov
and
les
dec
decl
stos
inc
mov
ret
jecxz
pop
int3
jo
roll
test
cld
cs
jb
out
inc
mov
jmp
leave
sbb
out
adc
jp
out
pusha
mov
loop
adc
jo
hlt
cmc
decl
pusha
push
sar
jo
lock
shrl
jp
lods
stos
pop
call
jmp
dec
mov
in
mov
shlb
out
and
mov
js
dec
das
loopne
or
mov
xor
xor
addl
xchg
push
ret
dec
leave
fbstp
lock
scas
pop
sarb
aas
adc
loope
daa
xor
mov
ds
lea
pop
ficompl
xchg
push
fwait
push
call
neg
add
dec
jle
adc
test
fstpt
sbb
pop
lea
js
sub
std
in
jg
dec
repz
xor
xor
xchg
test
jg
shrb
jg
lret
mov
je
xchg
fidivrs
or
loopne
cmp
incb
sahf
in
jo
cmp
nop
pushl
push
sahf
cltd
mov
std
cld
add
ds
fldenv
icebp
fwait
or
fildll
add
clc
fbstp
out
aaa
adc
testb
push
dec
push
xor
clc
push
push
cmp
mov
adc
and
push
jle
into
insb
and
comiss
jne
push
push
cmp
dec
xchg
sbb
adc
lcall
pop
mov
lods
movsl
jge
push
inc
daa
push
or
push
mov
cmp
sub
imul
out
cmp
xor
std
add
mov
out
add
jo
pusha
jne
data16
stos
js
inc
inc
in
shll
sub
sub
push
push
ljmp
xor
rcl
nop
add
pop
add
mov
stos
add
cli
shl
ljmp
xchg
pop
call
lods
aaa
push
xchg
ret
les
pop
mov
fsubl
xorl
ljmp
dec
into
or
cwtl
in
fs
ret
mov
push
xor
inc
fcompl
xor
scas
pusha
setae
loop
std
xchg
imull
pop
xchg
stc
dec
or
dec
test
adc
jbe
je
fwait
in
lahf
dec
jl
push
stc
pop
xor
rcll
jl
push
iret
dec
rcrl
push
test
or
cmc
or
fisubl
cmp
testl
cmpsb
out
shrb
mov
add
in
cltd
ror
mov
out
sbb
jne
notb
jg
jmp
mov
pusha
jg
out
cwtl
aaa
fdiv
adc
lcall
iret
add
ja
test
push
cmp
mov
jne
adc
add
dec
enter
adc
mov
add
stos
mov
in
sub
mov
jmp
pop
out
addr16
fidivrs
ss
push
mov
push
sbb
pop
das
es
or
fs
out
ljmp
cmp
cltd
mov
test
jmp
jge
jnp
push
cld
mov
add
imul
mov
pop
stos
push
add
inc
mov
iret
mov
dec
sahf
mov
ljmp
jne
sbb
mov
or
dec
push
xor
xchg
daa
sub
test
loope
dec
inc
into
into
jo
push
fldl
jmp
sub
or
mov
jl
add
add
mov
xchg
mov
dec
add
add
inc
mov
add
mov
add
mov
mov
outsl
jp
adc
or
test
jb
pop
lock
jecxz
jle
push
adc
push
lock
jmp
adc
adc
adc
mov
sub
mov
jno
jecxz
inc
xchg
lods
addl
mov
push
xchg
or
test
aaa
das
sti
das
clc
decl
mov
xchg
xchg
frstor
add
push
repz
xor
mov
je
jl
pop
ljmp
jo
adc
dec
cmp
dec
lock
jg
mov
adc
push
les
add
xchg
lea
stos
scas
ss
in
mov
imul
inc
adc
lret
add
adc
mov
test
add
xor
or
sbb
icebp
sub
out
movsl
stos
lock
in
inc
nop
subb
xor
pop
xchg
jbe
les
ljmp
aad
stos
cmpl
shll
cmpsb
jle
sbb
out
in
test
outsb
ret
jg
add
sbb
or
loop
adc
sbb
icebp
xor
jo
xorb
adc
dec
cwtl
jo
aam
add
call
or
xor
js
addl
jge
sbb
mov
decb
test
repz
lret
insb
hlt
addb
insl
adc
loopne
cwtl
leave
push
mov
stc
hlt
call
cmpsb
test
or
push
mov
loop
rolb
stos
popa
cwtl
or
push
push
fwait
pop
jbe
rcll
mov
and
lcall
movsb
sub
in
je
add
push
faddl
test
fs
inc
jno
stos
pushl
popa
inc
pop
int
inc
ss
or
imul
arpl
les
cmpsl
xorl
and
adc
or
sub
jo
cld
mov
adc
fwait
lock
ret
daa
push
mov
and
test
dec
or
je
and
mov
mov
add
and
mov
pop
pop
add
and
jg
add
mov
pusha
sbbb
sub
out
mov
pusha
jno
xlat
dec
inc
enter
add
add
jecxz
movsb
ja
call
insb
ja
fistps
clc
adc
test
jg
mov
sbb
add
stos
in
fs
mov
inc
add
data16
mov
and
mov
dec
cmp
call
cmp
test
add
push
andb
pushf
inc
inc
test
mov
lcall
negb
pop
cld
add
and
add
or
ja
xor
ljmp
adc
jp
std
jle
xchg
sqrtps
imul
xchg
jl
std
out
xor
dec
cmpsb
push
push
or
fcomi
cmp
icebp
js
cmp
fistpl
rorb
sub
mov
add
fdivrs
or
ss
mov
add
mov
add
sub
loopne
mov
ljmp
push
stos
push
inc
xor
xchg
jmp
das
clc
push
ret
mov
aam
test
lock
mov
clc
call
push
adc
sub
testb
push
inc
pop
jmp
call
xchg
out
mov
aas
sarb
mov
adc
pop
fstcw
ret
bound
aam
cmp
in
mov
mov
loop
test
xchg
xor
cli
insl
jp
inc
jns
jle
dec
inc
sarl
cmpb
cmp
subl
adcb
cmp
xchg
jb
or
lea
pop
in
and
movsb
mov
fbld
jp
pop
shrb
es
cli
inc
repnz
mov
add
fstps
ret
pop
rol
popa
push
test
and
adc
add
or
pusha
out
call
push
hlt
jl
mov
dec
pop
cmp
add
lcall
fisubs
xchg
jbe
mov
int3
stos
cmp
xor
mov
push
or
sub
scas
mov
mov
jecxz
fs
hlt
inc
ja
int
in
and
mov
fdivrs
movsb
lcall
inc
and
js
enter
or
mov
xlat
xor
sub
xor
ja
sub
mov
sti
mov
jmp
xchg
nop
inc
iret
out
adc
stos
or
mov
jmp
xchg
sbb
int
inc
out
js
add
inc
testl
mov
mov
ljmp
ret
add
sbb
mov
movsb
ds
stos
add
lock
mov
out
es
dec
inc
xorl
pop
push
aaa
test
mov
jmp
loopne
sub
mov
mov
lcall
test
xchg
fs
mov
sbb
je
or
incl
ret
orl
add
vcvtps2pd
mov
hlt
push
fs
or
mov
scas
push
out
fbstp
or
jmp
jo
das
dec
sbb
cmp
xor
xorb
add
jne
pop
sbb
mov
cmp
inc
mov
clc
or
data16
dec
mov
xchg
fiaddl
push
adc
or
cmp
mov
les
test
es
push
cwtl
add
push
lcall
mov
call
and
or
xlat
stc
push
xchg
jnp
mov
mov
inc
and
push
sti
xor
adc
or
bound
add
popa
add
add
xor
subl
push
jle
add
scas
incl
pop
rclb
clc
or
fwait
xchg
xchg
icebp
pop
mov
xchg
inc
xor
xchg
sbb
imul
ljmp
insb
int
or
pop
lock
add
fldl2e
xor
imul
fwait
push
push
outsl
out
insb
out
and
int
mov
push
in
inc
ja
pop
push
and
mov
sarb
adc
into
mov
lahf
pop
js
add
xlat
cmp
rcll
jl
adc
mov
adc
sbb
mov
xlat
das
mov
push
cltd
jle
lods
aaa
rcrl
jne
or
icebp
jg
push
sub
and
mov
imul
ljmp
mov
stos
inc
xchg
shll
add
jb
adcb
and
inc
ss
aas
sarb
aaa
movl
jle
mov
pop
xchg
pop
sar
ja
add
dec
adc
and
loop
cs
or
dec
call
xor
addb
rcll
mov
out
and
incl
mov
push
addr16
mov
enter
sub
int3
es
jnp
fisubrl
add
and
hlt
pop
ficoms
sub
rcl
push
nop
lahf
push
jbe
dec
add
hlt
in
and
test
adc
rolb
mov
loopne
ret
dec
nop
sub
ja
xchg
push
lcall
push
clc
out
pop
pop
hlt
sub
and
adc
cld
out
fmull
xlat
pop
inc
xchg
jo
sahf
xchg
es
xchg
and
repz
repnz
cld
add
lcall
int3
dec
cmpsl
push
nop
cmp
sti
cld
incl
and
insb
add
out
movsb
ret
xor
mov
lret
push
sahf
jno
sub
cmc
lods
push
ret
icebp
adc
mov
aas
jns
jae
fnstsw
aam
and
and
sarb
xchg
mov
cmpb
sub
aas
or
lods
mov
lods
inc
add
clc
add
jg
mov
mov
pop
std
out
jbe
mov
or
push
out
ljmp
push
je
sbb
mov
subb
or
lods
out
jmp
mov
adc
xor
lods
cld
stos
or
sbb
fildl
mov
aaa
or
mov
cmp
inc
in
push
mov
pop
push
push
jo
popa
push
ja
inc
xor
addr16
les
mov
mov
mov
mov
add
adc
mov
movsl
das
mull
ljmp
dec
sbb
mov
es
loope
loope
inc
jno
adc
sti
add
mov
jp
popa
bound
jb
dec
lea
add
inc
enter
fcoms
repnz
bound
pop
cltd
js
out
jb
sarl
mov
ret
clc
sarb
push
push
jmp
inc
mov
jg
mov
adc
cmc
pop
sbb
add
ret
clc
mov
add
aad
jb
into
xchg
cmpl
add
test
lods
add
lret
ja
add
adc
ljmp
clc
daa
or
mov
loop
iret
stos
rcrb
test
adc
dec
xor
lds
loopne
rolb
ds
cmp
sbbl
jno
lahf
cmp
dec
negl
cwtl
inc
xor
les
push
lds
scas
sub
daa
call
outsb
jg
and
jmp
and
decl
jb
cwtl
xlat
lods
stos
neg
sub
cmpsl
cmpsb
enter
add
mov
cwtl
xor
loopne
mov
jnp
dec
xchg
dec
mov
fcmovb
pop
fdivr
sub
cmp
in
pop
jg
jg
scas
and
mov
push
push
out
mov
stc
icebp
or
aas
or
icebp
add
xor
dec
lcall
in
xchg
xchg
cmp
xor
adc
pop
or
add
out
test
push
test
lret
xor
movsb
sbb
or
pusha
icebp
stos
imul
inc
mov
subl
mov
mov
dec
or
mov
xchg
dec
dec
fwait
in
inc
sub
ljmp
stos
nop
dec
cmp
pop
push
or
push
jnp
idiv
cwtl
loop
mov
dec
icebp
out
push
push
sbb
or
cmpsb
outsl
lock
sub
push
bnd
pop
push
cmc
pop
pop
rolb
frstor
xor
mov
sahf
fcmovb
in
mov
push
jb
lods
jo
cld
jle
add
imull
data16
sar
mov
sub
out
outsl
pusha
mov
or
mov
pop
dec
bnd
mov
rcrb
stos
into
sbbl
fistl
lret
or
mulb
jge
mov
push
xchg
push
nop
mov
in
repnz
scas
push
decb
mov
push
xor
pop
es
push
lret
movsl
scas
cli
cmpsb
push
pop
and
cli
and
out
dec
notrack
jno
in
imul
pop
scas
sbb
lods
rorb
mov
push
dec
idiv
outsl
mov
mov
ss
dec
mov
test
push
cmpsl
into
jmp
in
lods
addps
jmp
test
mov
inc
push
xchg
mov
jbe
sbb
and
adc
ljmp
nop
push
rcl
push
mov
sahf
lcall
mov
mov
mov
dec
xchg
xchg
lcall
cmp
call
rorl
push
jge
sti
pop
add
add
xchg
in
sbb
push
aam
popf
je
fidivrs
sbb
add
dec
mov
sti
call
jmp
inc
test
jmp
repnz
ljmp
mov
dec
ret
jg
pop
in
aas
jl
jle
inc
lock
add
mov
js
mov
cmp
loope
lcall
mov
sub
push
push
jmp
int3
mov
fs
lock
add
pushf
rol
and
dec
fcomip
pushf
loopne
test
adc
lcall
jp
ficoml
sbb
push
das
sub
cs
icebp
rorb
or
fxtract
pop
fucompp
cli
jmp
push
add
mov
es
in
and
mov
sub
pop
xchg
adc
inc
fildl
sub
sub
fisttpl
roll
sbbl
icebp
mov
and
sub
sbb
mov
sbb
loopne
clc
lcall
shll
or
mov
pop
es
sbb
lahf
nop
and
or
fidivrl
jp
lret
jmp
add
incl
or
mov
jae
lock
cmp
xor
lcall
aaa
subl
inc
movsb
rcll
and
rorl
jb
pop
aas
sub
shl
jno
cmp
jg
push
mov
out
cmp
cld
pop
hlt
push
pop
andb
test
imul
int
add
xchg
test
ret
jns
jns
pop
adc
mov
icebp
inc
ret
clc
or
sub
mov
punpckhdq
hlt
pop
out
adc
cld
cli
bound
mov
cmp
fimuls
add
push
repnz
mov
inc
mov
adc
push
inc
jb
es
mov
and
jns
xor
fisubrl
inc
add
or
push
shr
lock
lcall
sub
pop
int
nop
dec
mov
mov
les
fidivrs
shrb
or
clc
pop
loopne
xor
xor
fsubr
es
popf
shlb
add
adc
idiv
ljmp
ss
subl
xor
test
ret
push
fs
lret
loop
js
cmpsl
and
addps
ret
cmpsb
les
hlt
jg
int
daa
shll
ljmp
movsb
jbe
cmp
out
fildl
hlt
test
add
adc
xorb
adc
or
sbb
sub
mov
mov
inc
shrl
roll
out
mov
jns
movsb
sub
fcomip
sarl
mov
cmovne
or
rclb
call
call
subb
icebp
push
mov
sbb
sbb
pop
mov
or
or
adc
into
sub
push
xor
mov
mov
mov
in
add
push
cld
int
addr16
jmp
adc
jno
int3
stos
mov
jge
out
call
jp
xor
xor
mov
mov
scas
call
jne
jl
mov
mov
sbb
xchg
jp
add
push
jnp
mov
add
bound
cmpsb
icebp
jg
mov
xor
and
sub
das
movsb
icebp
cmpsb
dec
inc
stos
sahf
adc
ljmp
lock
or
notl
push
mov
add
iret
adc
pop
xlat
ss
js
or
lock
xor
loopne
out
push
adc
pop
push
sub
sarb
ss
inc
dec
push
scas
add
sbb
dec
fcmove
bound
push
lds
je
cmp
insl
cmp
xor
add
test
idiv
sub
xchg
add
and
sbb
test
sbb
add
add
lahf
xor
dec
mov
add
xchg
dec
pop
xor
imul
mov
add
imul
push
outsl
clc
dec
les
pusha
in
jbe
adc
in
fs
sahf
adc
sbb
or
mov
inc
jecxz
stc
ss
mov
lods
xor
push
rclb
xchg
inc
xchg
or
jae
out
mov
scas
cli
hlt
cmp
adc
ljmp
popf
movswl
gs
mov
and
and
int
jmp
in
adc
sbb
idiv
xor
add
mov
mov
stc
push
sub
mov
xor
lock
movsb
cli
aam
into
jbe
add
mov
call
scas
int3
and
leave
sti
cmp
out
and
jo
adc
or
mov
add
dec
cmc
push
pop
mov
jl
mov
cld
adc
inc
pop
mov
cmp
std
push
push
enter
jo
and
int
cltd
jle
mov
clc
lods
call
inc
mov
bound
aam
filds
sub
sub
loopne
sar
pop
orb
xor
push
xchg
inc
inc
mov
mov
fwait
inc
inc
mov
fdivs
ret
xor
dec
and
rcl
xorb
bound
mov
adc
aas
mov
sub
out
mov
movsl
add
adc
push
imul
fldenv
dec
ja
xlat
mov
cwtl
outsb
dec
hlt
sbb
mov
push
incl
ss
clc
bound
fwait
push
lret
out
adc
mov
in
jp
mov
fldcw
lock
pop
inc
aaa
mulb
loop
and
je
fs
pop
js
add
and
fdivs
lock
and
jp
jmp
push
aam
dec
push
and
adc
push
loopne
jno
mov
mov
or
or
jle
aad
sbb
dec
test
inc
jg
icebp
push
xchg
add
mov
dec
sub
shr
jmp
inc
jge
rol
ds
mov
cld
jl
loope
add
nop
andb
lds
sub
mov
jg
and
lcall
xchg
lret
adc
or
mov
repnz
in
mov
imul
mov
xor
cmp
sbb
cmpsl
test
xchg
mov
sub
or
lret
nop
inc
mov
dec
inc
mov
incl
mov
dec
push
orb
loopne
shr
repz
jmp
les
decl
inc
sub
daa
or
cli
ss
add
mov
stos
scas
dec
ret
pop
test
call
outsb
pop
add
notl
jp
and
jno
cli
call
pusha
faddl
mov
mov
adc
xor
aaa
mov
imul
pop
dec
mov
and
pop
movsl
outsl
das
cmpsb
int
cmpsb
or
mov
mov
cli
push
xchg
add
adc
cli
incl
inc
insl
int3
pop
cmpsl
cs
pop
arpl
or
and
sbb
jbe
mov
stos
lods
mov
push
stos
inc
push
jg
xor
jo
cmp
mov
sbb
pop
std
jg
push
mov
cs
fmull
aam
stos
iret
sbb
or
loopne
xchg
add
enter
push
and
popa
cwtl
and
cmc
scas
and
in
fcmove
pop
mov
adc
pop
push
popa
mov
out
in
loope
icebp
lcall
ret
adc
fdivp
sbb
lcall
inc
mov
jg
or
inc
lret
push
jge
paddq
hlt
outsl
push
mov
xchg
dec
or
cltd
dec
mov
mov
mov
cmpl
pushf
or
scas
cli
jg
xchg
lgs
adc
test
scas
and
jp
test
addr16
inc
mov
xchg
jo
or
adc
les
or
sub
adcl
rolb
mov
fbld
fildl
xor
adc
clc
fisttps
pop
stos
loopne
and
adc
in
mov
mov
lods
sbb
rcll
xor
ds
jg
push
pop
icebp
sti
jl
cmpsl
jg
cwtl
mov
xor
lret
xchg
aad
std
aaa
test
mov
lds
aam
loopne
shlb
xchg
adc
ss
movsl
mov
mov
ds
lock
fldcw
das
incl
mov
jecxz
cmpb
sti
mov
sbb
in
dec
xor
rol
inc
call
jnp
in
fs
outsl
das
jmp
mov
mov
mov
mov
cmpsb
add
jno
stc
jmp
xlat
mov
mov
push
in
cmp
xor
mov
push
lcall
add
leave
je
pop
je
mov
jns
adc
call
leave
sub
call
lcall
mov
and
flds
xchg
or
xchg
scas
data16
jb
adcb
dec
xor
sbb
add
stos
pop
hlt
ljmp
repz
out
jo
sub
les
cmc
mov
std
incl
jle
rclb
dec
repz
cmpsb
inc
lcall
xor
fst
fs
jne
xor
adcl
adc
inc
test
push
dec
xor
cmp
out
cs
stc
pushf
imul
mov
ljmp
push
jmp
pop
jae
jb
sarl
fldl
hlt
rcl
pop
or
subb
test
push
sub
cmp
mov
jl
out
xchg
mov
mov
and
and
lcall
add
loopne
jae
cmpsl
fisubl
xor
scas
cli
push
xchg
xorl
enter
fs
and
adc
inc
push
jecxz
test
or
mov
pop
jecxz
test
and
pop
cwtl
mov
sub
jne
incl
out
xchg
lret
leave
lock
sub
xchg
mov
mov
or
sbb
or
cmc
test
mov
mov
pop
movsb
test
mov
inc
jg
mov
jb
cwtl
xchg
rclb
xchg
stos
rorb
sub
push
sbb
les
adc
pop
test
stos
shrl
push
aaa
push
and
adc
push
push
stos
cld
push
push
pop
sbb
push
sub
jle
sbb
sub
mov
mov
jbe
sub
jbe
cmp
sub
int3
adc
test
daa
or
jecxz
and
xchg
std
xchg
mov
ljmp
addr16
aas
mov
daa
or
xor
decl
enter
test
xor
int3
mov
fwait
rcrb
dec
push
pop
aaa
arpl
push
xlat
push
sbb
pop
mov
cli
xlat
jg
sbb
inc
xor
test
xor
pop
jne
add
pop
in
stc
gs
nop
loopne
sbb
aaa
std
dec
or
mov
and
or
sahf
add
fistpll
mov
mov
pop
cs
dec
sbb
test
sub
xchg
gs
sbb
data16
faddl
and
jg
dec
sbb
loopne
scas
sub
loop
add
dec
movsb
xchg
and
add
ljmp
sbb
arpl
addl
lds
inc
cwtl
sbb
xor
xchg
adcl
enter
ljmp
sbb
mov
mov
rclb
jge
inc
and
xchg
xchg
xor
xchg
cmpsl
call
cli
sbb
lahf
repz
out
xor
shr
in
adc
xchg
or
add
inc
notl
jecxz
pop
cmp
pushf
xchg
cmp
lcall
incl
sub
sbb
sub
push
push
lahf
adc
jbe
fcmove
mov
inc
sub
mov
inc
jo
adc
sbb
stos
sub
movsb
jnp
dec
push
cmp
inc
mov
mov
daa
add
loope
mov
sbb
rcrl
incl
jb
aad
and
cwtl
mov
in
cld
mov
cld
mov
add
daa
xor
rolb
call
xchg
loop
ret
lcall
sub
dec
pop
cli
pop
stos
cmpl
cmp
and
call
sub
cmp
push
das
sub
aaa
cld
outsl
ret
ja
dec
ret
adc
pop
inc
inc
pop
mov
fists
ds
ficomps
frstor
cmp
js
and
mov
sbb
lahf
jns
adc
add
lock
adc
adc
mov
mov
push
subb
xchg
jo
pusha
out
ret
hlt
out
pop
push
push
icebp
enter
mov
push
fucomi
shl
dec
ja
shlb
push
je
sbb
sub
or
inc
and
sahf
mov
ret
clc
fstpt
jl
loope
push
jae
and
xchg
add
mov
loopne
jbe
ja
adc
sbb
mov
js
sbb
pusha
push
xchg
xor
arpl
jnp
sahf
adc
call
pop
cmp
xchg
jo
push
cli
xor
sbb
repnz
sbb
inc
roll
adc
sahf
pusha
pop
mov
cltd
addr16
out
xchg
addb
mov
jg
add
sub
jno
sahf
xor
movsl
out
push
sub
loop
das
xchg
sub
inc
shrb
inc
push
movsb
xchg
loope
inc
push
xor
rcrb
or
aaa
lea
add
arpl
jns
xchg
push
mov
or
movsb
orl
adc
add
and
loopne
or
rcrl
fcmovbe
in
movsl
mov
inc
clc
fildll
lds
sahf
iret
jl
movsl
jb
push
mov
adc
sar
adc
ds
push
dec
arpl
pop
in
cmpsl
push
mov
cmc
clc
pop
pop
mov
inc
fldcw
lcall
dec
and
cmp
test
fs
fucom
mov
cmp
clc
add
inc
out
mov
mov
cmp
jle
aas
push
fsubs
lods
ljmp
loope
arpl
ret
pop
cld
xchg
std
shr
test
add
js
add
xchg
lock
lret
jecxz
in
imul
sub
dec
loope
jg
jmp
cmp
sti
mov
sub
push
mov
call
sbb
xor
add
imul
fs
sub
rorl
jmp
pop
ds
push
loopne
xchg
pop
add
aaa
std
aaa
sbb
popa
cmp
and
xchg
xchg
shll
xchg
mov
or
cmpsb
mov
mov
dec
incl
lcall
das
xchg
lcall
adc
push
outsb
iret
adc
pop
pop
icebp
outsl
xor
pop
xor
int
jl
into
testb
mov
enter
push
sbb
dec
mov
test
mov
mov
stc
cli
movsl
xor
sbb
mov
ja
fsubs
mov
ja
pop
lret
loope
mov
aaa
add
jg
test
ret
mov
or
xor
outsb
sbb
call
inc
aaa
sbbl
jb
scas
inc
xchg
xlat
and
out
lock
jge
and
push
dec
lds
jmp
js
sub
mov
stos
in
jb
nop
sti
sbb
fs
push
xor
das
mov
in
out
lcall
call
aam
ljmp
add
sbb
fmull
scas
lods
sarl
mov
scas
test
ret
loope
push
mov
repnz
sub
and
cs
and
lcall
xchg
sbb
add
lahf
insb
mov
inc
es
in
clc
sub
pop
mov
fiaddl
ja
jp
mov
hlt
pop
lahf
cmpsb
sar
jmp
add
add
cmp
inc
dec
or
test
jg
inc
jo
add
scas
ljmp
jo
push
repnz
add
and
inc
stos
pop
gs
popf
dec
pop
pop
stos
movsl
pop
mov
add
push
inc
iret
add
shlb
pop
hlt
cmp
call
orl
fsubl
out
clc
pushl
jle
addr16
push
sti
sbb
dec
and
dec
and
andl
mov
push
pop
fsubrs
stos
dec
sub
or
mov
enter
push
ss
xchg
pop
sbb
out
mov
arpl
pop
test
adc
fwait
cmp
cmpb
call
outsl
mov
pop
insb
push
sahf
mov
mov
mov
cli
or
push
jge
jecxz
loopne
jo
fs
mov
cmp
iret
repnz
nop
out
add
nop
add
cli
aaa
inc
cmpsb
pop
out
aam
adc
sbb
xor
dec
aaa
insb
cwtl
loope
mov
mov
adc
push
pop
push
idivl
mov
lock
mov
ljmp
mov
inc
xorps
clc
rclb
mov
cmp
add
inc
inc
movsb
inc
mov
inc
cld
je
lock
jmp
xchg
cld
out
push
arpl
jo
sahf
nop
dec
and
add
js
clc
pop
sbb
mov
inc
test
lar
add
decl
xchg
loope
dec
outsl
add
mov
mov
test
clc
icebp
adcb
rcll
dec
xlat
sub
adc
cltd
add
cld
mov
popl
fwait
cmc
jmp
outsl
cwtl
scas
mov
test
xchg
fisubs
fimuls
xor
insl
sub
lcall
call
out
lcall
and
in
mov
icebp
pop
xorl
or
jmp
inc
shl
inc
push
xor
push
sbb
mov
push
jmp
loop
unpcklps
data16
inc
decl
mov
faddp
or
iret
cltd
pusha
cmp
pop
lahf
mov
mov
mov
ljmp
dec
jle
imul
adc
sub
sbb
and
arpl
sub
hlt
js
xchg
jb
enter
xchg
hlt
push
or
ljmp
inc
xor
sti
loopne
aam
add
jb
pop
cli
or
cwtl
jl
sub
or
rolb
ljmp
jle
iret
lret
out
ds
sub
test
fmul
mov
roll
ffree
jno
shrb
movsl
mov
mov
push
dec
mulb
mov
dec
enter
test
sub
or
addb
movsb
mov
or
xor
gs
xchg
pop
mov
decl
sti
push
inc
jge
push
add
sub
aad
mov
inc
lret
sub
jno
sbb
sub
imul
push
shl
cli
or
pop
jne
jge
or
mov
mov
mov
mov
rcr
inc
jbe
add
arpl
lock
mulb
jg
lods
test
cmp
int
out
into
add
push
jle
xor
clc
pushl
mov
and
dec
inc
lock
pop
stos
scas
cmp
clc
mov
mov
loopne,pn
cli
dec
push
add
int
lods
add
stos
mov
xchg
mov
das
arpl
mov
pushf
add
jae
mov
iret
fmull
push
mov
xlat
jne
daa
out
aas
sub
pop
in
loop
int
sub
xor
pop
fcoms
or
pop
jo
mov
pushf
call
cmp
stos
fidivs
bound
sub
cs
inc
cld
jecxz
sbb
sub
std
cmpsb
pop
or
mov
pop
mov
in
dec
movsl
and
enter
mull
fisubrs
add
mov
pop
lock
subb
dec
rclb
fidivrl
inc
jg
inc
and
leave
xchg
mov
das
loope
sarl
fisubl
gs
xchg
cwtl
inc
push
adc
or
mov
sahf
lock
fsts
scas
or
rcrl
adc
test
ret
xor
scas
sbb
pop
ds
or
fs
xchg
dec
mov
inc
xchg
dec
push
dec
xor
mov
inc
rorb
sbb
frstor
xchg
push
pop
inc
inc
adc
subb
sbb
std
mov
adc
push
push
decb
mov
cld
outsl
mov
ret
sbb
pop
call
ja
pop
push
sub
xor
and
outsb
aas
mov
sbb
pop
add
mov
dec
ret
pop
sub
add
adc
xor
mov
sbb
pop
pop
cmp
call
push
or
aad
pusha
aas
mov
ja
push
lcall
js
pop
decb
dec
xlat
fists
or
ret
cmc
icebp
sbb
loopne
cmp
gs
mov
test
mov
sub
dec
push
popf
sub
jecxz
insl
aam
stc
hlt
call
scas
xor
add
loope
adc
hlt
lret
and
lcall
push
mov
iret
je
popa
mov
xchg
clc
pop
dec
xor
push
leave
push
xchg
std
xor
mov
nop
pushf
fcmove
sub
mov
ss
addb
sbb
and
add
add
and
mov
nop
shl
pop
jg
push
lods
inc
scas
jmp
pop
jmp
movsb
pusha
clc
neg
test
loopne
rcrb
ljmp
inc
cmpsb
addr16
inc
cmpsl
sahf
push
dec
orb
insb
sbb
mov
out
mov
adc
xchg
stc
loopne
pushl
pop
fiaddl
lods
out
sbb
xchg
out
sbb
add
mov
add
sbb
pop
sub
in
pop
sub
mov
daa
movb
cmc
jmp
jo
push
push
and
mov
int3
mov
test
add
jecxz
sbb
push
mov
dec
faddp
das
clc
mov
pop
rorb
push
cmp
inc
test
insb
cs
shll
xchg
ds
int
jle
nop
push
jbe
ja
decl
bound
pushf
push
int3
sbb
or
xchg
dec
mov
cmp
out
pop
xor
pushf
sbb
repnz
sbb
mov
fnstenv
jns
pop
jo
out
sbb
adc
jmp
paddusb
pop
in
insl
add
pop
add
pop
add
rolb
mov
mov
mov
movb
mov
push
ret
adc
pop
outsb
pop
lcall
test
sbb
adc
jno
popa
insl
xor
sub
addr16
loop
clc
fildll
mov
mov
lahf
sbbb
push
pop
add
clc
mov
dec
mov
nop
lock
mov
lock
into
adc
decl
test
mov
lds
cmp
push
pop
movsb
mov
popf
nop
jmp
repnz
rorb
pop
lods
adc
add
scas
push
rcl
xchg
insb
ret
or
mov
out
sbb
inc
cld
jl
shll
jmp
fucomp
xor
movsb
and
cmp
repz
cmpsb
cmp
bound
clc
xor
das
sbb
lret
add
and
mov
incl
sbb
and
dec
jp
mov
enter
ljmp
lods
add
or
push
xor
mov
pop
rcr
lods
add
jno
ljmp
popf
cmpsb
ljmp
xchg
data16
insl
push
xchg
je
sbb
dec
cmp
adc
call
fs
bound
or
ljmp
mov
xor
add
daa
lods
jp
cwtl
push
fisubrl
imul
rcrl
pop
fcom
mov
cld
mov
cli
pop
pop
jbe
pop
movb
xchg
pop
fwait
dec
jge
into
mov
inc
mov
inc
in
push
inc
dec
movsb
sub
gs
jp
aaa
add
add
aad
mov
test
push
cmpsb
clc
cwtl
xchg
addb
add
hlt
jecxz
mov
sub
mov
lods
xchg
jne
xor
scas
adc
dec
imul
out
adc
fcmovu
push
mov
mov
xor
push
fdivrl
stos
add
add
aad
hlt
cld
outsb
icebp
add
fadds
scas
add
les
out
jp
xor
or
stos
lahf
mov
sub
gs
and
jmp
jb
cwtl
incl
pop
outsl
scas
pavgb
xchg
dec
add
jecxz
pop
pop
fs
jg
data16
jle
cmp
sbb
mov
pop
dec
sbb
dec
ror
movsl
cmpsl
cwtl
pop
scas
add
jmp
mov
ja
xchg
push
add
les
inc
loopne
shrb
and
sub
in
mov
call
adc
sub
jg
add
shl
shlb
xchg
std
data16
inc
leave
mov
push
mov
sbb
pusha
mov
cltd
loope
cmc
aaa
cld
test
sub
lcall
mov
inc
enter
push
ret
inc
push
add
jge
addb
cmp
test
loop
and
adc
hlt
xchg
aad
inc
push
lret
sbb
fiadds
jo
into
and
enter
clc
sub
xor
adc
mov
cld
idiv
movsb
test
scas
mov
jl
and
jb
outsb
and
andl
stos
push
hlt
or
in
cs
xchg
clc
dec
js
mov
testl
sub
sbb
clc
outsl
js
sub
inc
jl
jae
xchg
lahf
hlt
cmc
sub
adc
clc
cld
cmp
pop
lock
rcll
call
mov
mov
lds
xor
sarl
into
xor
clc
stos
ficoml
cmp
xlat
rorl
cwtl
clc
mov
gs
pop
stos
test
popf
aas
shl
mov
jg
test
lret
or
std
sbb
xchg
mov
pusha
push
fcoms
xchg
and
jnp
fistpl
jo
jmp
adc
fs
cmpsl
and
loope
cmp
inc
inc
cli
pop
fdivr
push
sbb
and
jmp
rol
call
dec
mov
int3
add
mov
jecxz
sub
mov
mov
inc
inc
pop
sbb
in
fwait
and
out
dec
jo
aam
and
mov
add
sub
inc
fwait
add
xorb
mov
sub
popf
test
or
or
pushf
pop
mov
loopne
mov
or
push
cmpsb
sahf
scas
sub
movsb
inc
popf
int3
mov
cld
inc
sbb
push
call
push
jbe
in
int
lret
bound
inc
and
dec
jecxz
push
cld
jb
in
inc
out
icebp
ljmp
mov
test
ss
add
maxps
insb
cli
mov
pop
dec
jae
loopne
cmp
jecxz
pop
pop
mov
repnz
push
push
in
in
cmc
xchg
nop
por
iret
jmp
test
cli
aam
xchg
push
popf
pop
pop
inc
dec
cmc
adc
mov
jp
inc
loopne
test
stos
jb
and
dec
or
adc
pop
idiv
das
jbe
adc
add
or
sub
adc
xchg
bswap
mov
dec
cmp
mov
daa
jp
std
inc
fbstp
lret
mov
pop
iret
cmp
add
lcall
jp
ja
call
scas
xchg
pop
mov
xlat
aaa
adc
adc
push
cmpb
push
or
repnz
mov
out
adc
add
xor
jg
xchg
jbe
mov
push
xor
dec
incl
xor
mov
push
lahf
xor
call
jp
ret
cmp
mov
mov
mov
mov
mov
jo
and
inc
ljmp
test
fcompl
mov
mov
mov
hlt
ljmp
call
pop
pushf
cli
cltd
adc
lret
scas
pushf
dec
or
les
ljmp
call
out
repnz
inc
mov
imull
out
sbb
pop
mov
faddl
xor
mov
mov
sub
test
jle
sbb
aaa
jne
cmp
cmp
in
mov
push
insb
mov
cmp
outsb
sub
ja
pop
cmp
stc
syscall
movsb
or
ds
mov
lcall
cmp
clc
xchg
push
xchg
add
add
push
je
cmp
pop
sub
je
adc
sub
inc
das
xor
mov
mov
and
icebp
push
pop
loop
repnz
shll
pop
jp
popf
out
loopne
xor
dec
and
into
sub
sbb
mov
add
and
xchg
xchg
popf
rcrb
mov
cmp
inc
xchg
sub
dec
push
enter
and
jmp
mov
ret
clc
xor
es
call
or
scas
dec
rorb
xor
jno
add
cli
adc
push
and
decl
inc
push
adc
add
jl
dec
sar
add
movsb
cld
push
shlb
jno
jp
adc
mov
mov
andl
mov
fldenv
pop
icebp
stos
incb
test
adc
repz
xchg
jmp
jb
pop
lea
push
outsl
outsl
repz
decl
loop
cwtl
fld
or
cltd
xchg
add
pop
loopne
xor
push
popa
stos
add
and
pop
jo
jo
mov
subps
and
lcall
sub
stos
mov
jae
sbb
inc
mov
add
mov
xchg
shll
push
lock
cld
mov
inc
cmp
ret
xchg
and
xlat
cli
cli
and
lcall
fidivl
out
sbb
xchg
lock
call
pop
mov
rclb
push
adc
and
dec
mov
push
enter
sub
jmp
movsb
adc
std
jg
or
ud0
dec
mov
lcall
sub
lods
push
js
or
lds
test
sub
ss
sbb
movlps
fisttps
scas
xor
call
addr16
sub
inc
push
mov
xchg
fdivrs
les
dec
stos
jbe,pt
pop
inc
vcvtsi2sdl
xchg
pop
in
push
js
vpshlw
in
cli
es
subb
pusha
fcompl
test
lods
cmp
stos
clc
xor
addr16
xchg
push
sar
sbb
or
pop
mov
lea
xlat
cmp
cmp
jmp
sbb
add
les
outsl
xor
sub
dec
repz
scas
mov
mov
incl
jp
and
cmp
inc
sub
movsl
movsb
adc
jmp
mov
pushl
or
jbe
sub
ret
mov
decb
add
xchg
mov
rcr
in
mov
test
mov
imul
addr16
or
fwait
in
test
enter
lahf
cltd
jl
mov
mov
cmp
xorb
imul
test
xor
gs
call
adc
fdivrl
inc
rorb
loop
jle
jbe
addr16
incl
int
sbb
out
aad
in
inc
fidivrl
rclb
push
call
add
pop
sub
mov
lret
pop
sbb
sbb
decb
jl
aad
rclb
ds
xchg
sub
sub
aas
ds
orb
dec
pushl
cmp
mov
sbb
in
cs
lock
mov
psrlw
jnp
stos
out
out
adc
leave
push
sbb
call
cld
mov
pop
call
cli
push
mov
movsl
dec
out
out
movsb
es
inc
push
and
lock
push
pop
clc
push
cld
lahf
and
inc
pusha
push
jmp
xlat
mov
jnp
mov
mov
jle
add
mov
lret
and
jl
repnz
sub
stos
lock
out
xor
jno
and
mov
test
xlat
lret
jge
insl
movsb
mov
inc
push
cld
data16
push
lods
dec
sbb
dec
sub
test
pop
push
clc
pushl
xchg
xchg
lret
in
and
push
fs
test
pop
insb
cwtl
pop
dec
decl
pusha
push
out
fcompl
and
cmp
ja
dec
std
jb
nop
outsl
jbe
dec
inc
ja
xlat
test
jp
jg
mov
jb
push
pop
mov
mov
repnz
insl
mov
cmp
add
mov
pushf
xor
pushf
mov
mov
adc
add
sarl
push
lock
dec
mov
mov
inc
das
cli
mov
mov
add
xor
daa
pop
imul
or
jg
xor
push
pop
stos
or
add
addr16
xchg
in
popf
jp
xchg
les
push
arpl
or
sbb
sub
in
rcrb
stos
or
ja
popa
in
mov
cmpsb
cs
or
jno
jge
lret
inc
add
cmp
cmc
addl
call
sarb
add
pop
int3
sbb
flds
pop
mov
dec
xchg
xchg
outsb
push
mov
mov
inc
or
jbe
and
popa
imul
fs
xor
jecxz
enter
mov
cmp
and
mov
imul
mov
out
cwtl
lds
addb
add
mov
adc
outsl
mov
pop
jg
push
mov
int3
mov
leave
mov
push
cmpb
mov
es
out
lcall
mov
xchg
dec
sbb
sub
xchg
xor
loop
add
add
mov
dec
dec
adc
xorb
loopne
pop
aaa
lods
fnstsw
mov
into
adc
mov
addb
iret
fadds
fstpt
mov
lds
xchg
fdivs
mov
pop
or
cwtl
pop
out
ljmp
mov
xchg
sbb
lcall
call
or
and
nop
lds
icebp
dec
or
mov
or
decl
jbe
mov
xchg
outsl
xor
mov
fwait
adcb
call
notl
cwtl
addl
cmp
mov
push
popa
and
sbb
fistps
mov
mov
sub
and
cld
xorb
jno
hlt
jae
rolb
sub
xor
dec
sbb
loopne
pop
js
pop
outsb
rcr
test
addr16
or
in
sti
cwtl
fmul
shll
fxch
je
fmull
mov
mov
dec
leave
add
pop
cs
cmp
mov
lcall
add
pop
sub
ljmp
call
ret
mov
lahf
sbb
test
inc
scas
mov
les
cwtl
inc
adc
pop
inc
ret
or
andb
push
cmp
lcall
fstpl
pushf
dec
adcl
stos
dec
xchg
xorb
shl
or
popf
icebp
stos
push
ds
mov
fdivs
mov
dec
lock
jg
mov
sub
inc
or
inc
push
divb
adc
add
js
xor
sti
shl
mov
mov
in
cltd
add
mov
arpl
ds
fnstsw
inc
aam
fdivrl
sbb
fs
inc
lahf
inc
pop
int3
mull
push
sbb
shlb
sub
adc
push
pop
ds
ljmp
rclb
mov
lock
add
popa
add
or
adc
test
clc
subb
add
xchg
pop
sub
and
pop
ljmp
cs
cmpsl
sub
dec
push
dec
mov
lret
cmp
dec
sbb
aam
pop
inc
push
gs
jo
arpl
aas
or
pop
call
imul
jle
cld
dec
loopne
pop
outsb
mov
loop
cmpsl
push
add
adc
mov
out
shrl
mov
cmp
inc
jmp
enter
hlt
add
cld
add
cmc
xchg
outsb
xchg
popa
cmp
pop
shrl
lods
lcall
cmpsb
outsl
nop
lcall
jle
jmp
xchg
cmp
mov
cwtl
sub
adc
jmp
mov
push
mov
lahf
in
pop
ja
shl
add
das
enter
mov
jg
cmpl
dec
addl
or
adc
mov
xor
or
mov
subb
mov
mov
outsl
mov
out
xor
push
mov
mov
sbb
add
insb
mov
mov
xchg
stos
sbb
ja
push
cmp
xchg
cmp
jnp
pop
pop
test
adc
mov
pop
inc
mov
cltd
test
cli
out
adcl
xchg
jle
fiadds
subl
cmpb
adc
pushl
inc
stc
outsl
push
push
jns
fidivrl
add
andl
xchg
jle
and
push
leave
fdivl
mov
and
jmp
inc
mov
sub
jb
inc
hlt
xchg
add
mov
aam
shll
pop
mov
jmp
aad
aas
sbb
push
fisubl
jbe
jle
or
jg
cmpl
inc
xor
mov
push
call
ret
pushf
shll
jae
lods
pop
fdivr
adc
sub
or
into
cmp
and
sbb
mov
push
jp
push
jg
cmpsb
xchg
adc
cld
je
test
jno
addl
movsl
fbstp
xor
rcrb
mov
adc
or
clc
incl
loopne
xchg
in
pop
in
repnz
icebp
mov
jg
lods
pop
test
push
lahf
pop
sti
inc
add
mov
pushf
inc
cwtl
pop
enter
or
clc
mov
jno
inc
mov
cmp
xchg
das
les
cs
push
push
pusha
jb
out
dec
fcoml
lahf
or
inc
xor
daa
inc
mov
in
sar
push
or
cmp
add
aaa
pop
pop
dec
jecxz
and
sahf
iret
test
sbb
ja
dec
test
icebp
adc
mov
or
cmpsl
ret
pop
mov
push
mov
inc
sar
or
outsb
or
lds
sbb
jo
orl
outsl
and
incl
pushl
stos
sbb
and
mov
aam
cmp
in
rclb
out
dec
dec
enter
incl
mov
hlt
fiaddl
mov
cmpsb
fisttps
lods
push
sbb
fildll
mov
pop
push
lods
pop
cli
sti
sub
pop
or
insl
mov
cmp
xchg
lock
sub
xchg
stos
mov
nop
pop
push
pusha
sahf
cmpsl
hlt
lret
les
or
xor
sti
mov
test
jmp
jno
dec
ja
lahf
mov
jp
rorb
sbbb
add
pop
int3
add
add
cmp
stos
push
xor
adc
pop
cmp
gs
repnz
in
xor
xor
push
or
mov
rep
ss
fadds
loope
decl
sarl
loopne
mov
in
mov
leave
mov
mov
out
xor
jae
cld
int3
mov
cld
inc
push
test
dec
push
int3
mov
pop
mov
in
sbb
jbe
mov
aas
add
mov
iret
sbb
sbbl
add
mov
mov
les
std
imul
ljmp
inc
mov
and
pop
dec
sub
fimuls
hlt
sbb
jp
cmp
lcall
jle
or
xchg
pop
or
xchg
pusha
fadds
cld
rcl
inc
fsub
das
mov
mov
fiadds
inc
int3
aam
sahf
out
sub
mov
add
sub
dec
repz
cmpsl
mov
or
scas
mov
pop
scas
fdivrs
fsts
aas
add
cmp
jnp
fsub
popa
stos
arpl
cmp
mov
jno
xor
add
rcll
add
shrl
je
and
decb
out
nop
imul
sbb
adc
and
dec
xchg
cs
add
mov
inc
jle
fidivrl
lds
cmpsl
jg
lods
mov
sbb
jbe
or
mov
mov
jecxz
clc
es
es
and
fs
jg
mov
mov
xchg
xchg
add
lea
push
mov
test
inc
hlt
push
sar
lds
push
push
or
fldt
sar
hlt
sub
mov
fcmovb
movsl
add
mov
adc
mov
stos
inc
js
loopne
rol
add
test
add
enter
sbb
sub
into
jno
test
ljmp
xchg
pusha
in
add
pop
mov
out
lahf
push
jns
ret
std
in
es
xchg
pop
pop
jecxz
pop
lock
push
insb
fwait
xchg
or
mov
insb
fs
inc
out
loope
incl
jb
in
call
mov
mov
or
subb
jmp
leave
adc
sbb
dec
std
jl
mov
scas
fimull
and
sub
xorb
add
stos
outsb
jne
sbbb
clc
dec
into
mov
dec
mov
sbb
adc
add
or
jmp
add
enter
lock
dec
jl
fstpl
in
mov
scas
orl
ss
cld
or
les
lods
call
add
movsb
stc
ljmp
jg
decl
int
popf
fcomps
or
mov
rcl
jle
mov
imull
xor
xor
cli
mov
hlt
stos
mov
test
cmp
scas
mov
sbb
jl
mov
add
lea
sbb
add
ret
push
out
pop
ret
cmp
inc
jg
sub
push
cld
add
xchg
pop
in
roll
adc
jg
test
pop
bnd
sub
int3
lcall
pop
aam
add
jmp
sub
mov
cli
pop
testb
add
addb
js
mov
xchg
jno
loop
popf
dec
dec
std
mov
dec
dec
push
imul
fs
sub
pusha
sbb
inc
xor
inc
sbb
aad
add
fiadds
roll
mov
cld
lds
cmp
add
push
jl
sbb
jl
mov
xorb
mov
orb
decl
inc
mov
dec
mov
adc
loope
enter
add
sbb
jp
and
ja
ret
or
lahf
xchg
xchg
dec
mov
je
xchg
pop
jbe
jbe
fcomip
lss
inc
call
mov
sti
add
insl
adc
insl
loope
or
xchg
hlt
maskmovq
mull
fcoms
and
pop
inc
xchg
call
cmp
ja
mov
inc
cmp
ja
icebp
xchg
cmp
call
std
dec
enter
or
mov
out
add
cmpsl
mov
mov
sub
add
pop
fiaddl
scas
push
iret
mov
clc
pop
rcrb
add
sbb
mov
dec
push
cmp
mov
xor
pop
leave
push
mov
add
sub
push
mov
add
leave
bound
ret
sbb
repz
cmp
and
aas
out
mov
push
pusha
pop
adc
inc
push
cli
aas
sahf
or
movsl
and
sbb
in
pop
sub
iret
add
fldenv
dec
rcll
and
test
shrl
enter
scas
add
shrb
pop
sub
adc
push
and
dec
or
mov
cltd
pushf
adc
jbe
xor
test
mov
cwtl
sti
cmp
sub
mov
pop
cmp
inc
je
call
mov
and
nop
mov
push
jmp
push
ja
iret
out
pop
shll
movlps
outsl
ljmp
push
sarb
add
inc
stos
arpl
xchg
push
and
mov
inc
cmp
add
test
push
out
cmp
push
lcall
sbbb
push
clc
mov
cmovb
add
loopne
inc
fnsave
sbb
ja
mov
test
daa
add
jne
adc
xchg
ljmp
jmp
and
push
add
xchg
mov
sbb
adc
inc
lock
cmp
inc
lock
add
push
xchg
popf
cmp
sahf
sub
stos
stos
test
sub
mov
mov
pop
dec
sub
insl
mov
cmc
dec
add
mov
call
mov
iret
jne
push
sbb
or
mov
std
fnsave
mov
stos
dec
push
orb
bound
xchg
push
stos
outsb
sbb
nopl
fwait
adc
clc
das
call
ret
jo
xchg
push
into
mov
lcall
push
push
jbe
or
sar
test
test
ljmp
push
cmp
js
aam
pop
jl
clc
adc
and
in
add
and
dec
pop
dec
popa
sbb
xor
xor
xchg
scas
sub
pop
fs
pop
fdivrl
cmp
pusha
adc
dec
push
xchg
push
sbb
xchg
loopne
inc
sbbb
test
mov
out
test
adc
and
bound
popf
dec
sub
shll
loope
ds
cmp
and
and
in
push
scas
jae
add
and
fnstenv
in
xor
and
sbb
pushl
sbb
cmp
dec
inc
insl
add
pop
fcoms
ljmp
scas
test
pop
pop
sahf
inc
pop
xchg
jg
add
push
or
scas
sahf
addr16
jo
add
decl
adcb
xor
sbb
jg
fsubrs
adc
hlt
xchg
sahf
repnz
cmp
pop
outsl
loop
ret
sti
in
jb
sub
aaa
notl
fdivr
loope
cld
jg
movsl
loop
cld
arpl
call
es
cld
jge
push
lea
xor
jg
add
gs
dec
cmp
adc
xlat
cltd
fcmove
fs
adc
and
jbe
sub
and
outsl
aaa
mov
lock
clc
mov
scas
pusha
orb
cmpl
pop
rorb
mov
imull
and
xor
cmc
das
sub
jbe
out
cltd
mov
mov
dec
xor
mov
adc
jbe
orb
add
std
fcomip
push
xchg
and
in
or
imul
mov
int
addl
aam
mov
xchg
pop
jne
mov
icebp
fwait
in
in
dec
cld
fistl
xchg
mov
imul
adc
repnz
ret
aad
cmp
les
push
mov
inc
sbb
inc
outsb
jge
and
aaa
jbe
cmp
or
add
xor
or
aam
incl
pop
std
pop
adc
dec
femms
sub
dec
cmc
jo
dec
lods
add
out
loop
cltd
mov
or
shlb
inc
movsb
or
inc
xchg
jmp
fsubrp
inc
mov
or
ret
jo
xchg
jnp
inc
xchg
mov
jg
add
cmp
mov
pop
xchg
cltd
daa
cmpsb
or
adc
mov
xchg
push
scas
nop
xchg
pusha
clc
dec
or
incl
push
fs
or
sbb
and
push
or
loopne
dec
icebp
pop
pop
cld
inc
sub
mov
push
jnp
pop
dec
lods
lret
pop
xchg
rclb
add
sub
sub
ss
xchg
adc
adc
cmpl
stos
sub
dec
inc
push
cmp
pop
sbb
lock
rcr
rolb
pop
push
pusha
push
shrb
mov
call
push
push
lret
cld
jle
gs
pusha
bound
data16
add
pop
pop
xor
mov
push
cmpsl
add
fidivl
std
ljmp
add
inc
xchg
mov
jns
jmp
stc
popa
mov
pushl
sbb
sarl
jnp
add
xchg
movsb
adc
sub
movsb
rolb
push
aas
mov
mov
es
inc
das
mov
lock
jecxz
flds
and
push
adc
sti
fwait
mov
cwtl
insl
mov
cmc
mov
xchg
addr16
std
mov
lcall
inc
fisubrl
icebp
jg
andb
shlb
imul
cwtl
das
xchg
frstor
adc
push
fdiv
sbb
repz
movsb
push
fcomps
adc
dec
sub
add
mov
cmp
clc
dec
clc
sbb
nop
jle
xor
cld
jmp
mov
jp
ret
jp
and
insb
lahf
rcrl
push
or
add
mov
fidivrl
mov
rorb
inc
mov
test
fistl
cmpsl
int
loop
lret
push
push
dec
xor
out
xor
out
or
stos
xchg
sub
rolb
jo
mov
adc
mov
xor
loope
mov
xorb
das
mov
mov
or
push
arpl
je
rorb
daa
mulb
pop
les
adc
ljmp
incl
mov
cmp
in
and
fsubl
les
std
lods
into
dec
decb
addl
add
push
add
pop
push
cli
add
mov
adc
fwait
movb
mov
loop
lcall
enter
and
and
lahf
hlt
addr16
pop
lock
cli
fcomip
jg
inc
aam
int
pusha
pop
push
mov
ja
outsb
cmp
out
incb
adc
adc
xlat
rolb
adc
jge
test
xchg
pushf
sbb
adc
ud0
or
jle
push
dec
scas
pop
repz
jno
sahf
mov
mov
movsl
sub
xor
jmp
xor
adc
int3
pop
mull
inc
mov
mov
mov
pop
cmpsb
mov
push
cltd
jge
adc
or
inc
mov
mov
je
call
and
add
push
sub
test
ljmp
xchg
lret
jnp
push
rorl
icebp
jmp
pusha
testb
adc
call
loop
shll
push
mov
sub
lret
insl
scas
mov
ss
fists
sbb
mov
jle
outsb
lahf
pop
popf
mov
fiaddl
and
adc
pop
jo
call
or
mov
ja
mov
ret
push
or
mov
jb
sub
dec
or
das
push
aas
adc
out
movsl
or
movsb
mov
in
add
jg
or
mov
mov
xchg
adc
sbb
sub
inc
and
fcompl
fidivs
inc
adc
pop
pop
in
mov
xchg
test
lods
aas
das
test
pop
movsl
notl
push
fiadds
cld
outsl
add
mov
sub
xchg
xlat
test
xor
clc
lods
xor
rorb
pop
test
pushl
push
dec
sub
rcl
xchg
andb
jmp
cld
sub
repz
sub
pushf
aad
and
pop
add
or
test
xor
add
movsb
iret
decb
addb
roll
out
gs
ja
pop
in
out
fimull
and
sti
cld
scas
jle
mov
call
out
shlb
add
test
pop
ljmp
or
cmp
push
enter
pop
mov
push
xlat
or
js
sti
jg
in
out
add
cmp
inc
jecxz
mov
jmp
jg
sbb
sbb
pop
mov
inc
sahf
mov
scas
aaa
adc
dec
pushf
mov
mov
sti
aad
xor
call
flds
jbe
dec
add
scas
movsb
or
dec
adc
pop
push
push
mov
lcall
add
push
push
jae
inc
outsb
sub
fisubs
push
ficoms
in
int3
repnz
mov
cmp
pop
je
clc
stos
jle
nop
push
mov
mov
lds
jg
fwait
or
inc
out
sub
adc
cli
lcall
adc
arpl
pop
pop
cmc
dec
push
popa
imulb
stos
out
dec
pop
ja
adc
mov
scas
les
testl
cmc
cmp
in
adc
jl
pop
lcall
sub
lds
add
addb
or
test
ror
jb
cwtl
sub
inc
add
or
into
or
imul
push
aas
pushf
jnp
xor
mov
dec
pop
mov
jge
dec
addr16
jg
sbb
mov
mov
mov
inc
fwait
inc
fadd
fdivr
pop
mov
cmpsb
imul
mov
dec
jne
add
sbb
lods
fildll
out
pusha
and
mov
das
xchg
bound
pop
cmpsb
popa
aas
lret
mov
mov
inc
xchg
test
sub
repz
or
cld
or
or
sub
cs
lret
push
pop
pushl
out
dec
and
div
sbbb
rorb
mov
ja
push
sahf
mov
sbb
adc
adc
imul
jecxz
mov
test
mov
and
repnz
dec
popf
cmp
sbb
loopne
stos
mov
lods
sub
mov
data16
aaa
sar
jmp
and
test
mov
lret
push
mov
cmp
or
int
xchg
call
lret
gs
jbe
xchg
sub
test
cmpsb
cs
add
or
jg
insb
stos
jg
daa
js
sbb
mov
add
in
jge
and
cld
and
stos
push
cmp
lds
push
pop
negb
lods
or
pop
data16
fiadds
loopne
clc
test
lcall
outsl
movsb
push
int3
xchg
cmp
and
fs
xor
add
pop
test
lods
fisttps
jecxz
cmp
lcall
add
sub
incl
jae
pop
test
sbb
and
jg
movsb
inc
movsl
movsb
push
cmp
xchg
int3
dec
xor
jl
pop
mov
pop
add
mov
inc
in
mov
adc
and
test
pop
mov
lea
pop
faddl
pop
jp
pusha
push
pop
dec
jo
loopne
movsl
add
into
in
and
test
shll
test
scas
and
and
add
arpl
mov
shlb
cmp
sub
add
push
xor
dec
xchg
cmp
and
fimull
push
decl
mov
and
sbb
mov
es
mov
shlb
xchg
xor
testb
pushl
rolb
scas
and
inc
orl
push
cmp
shr
jl
cmpsl
push
in
sub
xor
sbb
shrl
xor
dec
push
fimuls
or
call
sti
pusha
shr
xor
dec
xchg
dec
push
cmc
mov
jae
push
fadds
rclb
cmc
dec
adc
add
scas
dec
xor
lea
leave
insb
mov
decl
lods
pop
jb
fildll
lret
dec
mov
pop
dec
jg
cmp
add
and
shr
pop
dec
xor
sbb
mov
decl
mov
cwtl
adc
mov
in
inc
dec
js
add
jecxz
add
cmpsb
cmp
enter
insb
shlb
cs
lds
sar
test
mov
xor
sub
nop
lods
hlt
in
int3
sub
xor
adc
rorb
stos
adcb
and
por
rclb
fildll
xchg
push
xor
call
pushl
xor
jle
cmc
ljmp
mov
push
jmp
adc
out
push
pop
lea
sbb
dec
inc
test
fmuls
les
daa
dec
scas
pop
and
fbld
xor
mov
pop
mov
gs
pushl
mov
stos
or
jp
push
add
roll
rolb
dec
aas
jp
arpl
xchg
xchg
jecxz
inc
push
adc
pop
shl
pusha
aaa
push
pop
add
sarl
mov
ret
rsm
cwtl
push
pop
mov
and
add
add
lret
lds
mov
dec
hlt
incl
std
or
mov
xchg
jo
cmp
aas
or
ds
ljmp
mov
fnstcw
add
sub
pop
jp
decb
shlb
jle
jo
sub
sub
incl
hlt
loopne
ret
and
leave
xchg
data16
cmp
add
fwait
lcall
and
fwait
sbb
pop
jae
sti
mov
xor
daa
aad
xor
cld
inc
push
fisttpll
shlb
lea
dec
ljmp
add
adc
divb
mov
pop
test
mov
sub
pusha
cmc
add
push
push
jmp
adc
aam
jo
add
das
mov
dec
mov
lret
sahf
cmc
aam
pop
dec
and
or
insb
push
movsl
scas
cmp
inc
xchg
push
fidivl
test
cld
jg
les
jge
in
jno
das
xor
bound
push
scas
cwtl
xorl
sbb
out
aas
add
cmc
dec
or
outsl
adc
pop
dec
add
jle
mov
scas
cmpsb
inc
xlat
inc
shlb
xchg
clc
loop
add
dec
cli
out
loope
mov
mov
push
jae
or
cmp
pushf
test
insl
adc
loopne
repz
aas
clc
pop
fimull
xchg
in
pop
popa
adc
jecxz
int3
fiaddl
fsubp
lcall
sub
dec
dec
loopne
jbe
sbb
xchg
pop
adc
sbb
movl
inc
aam
stos
and
inc
inc
fimull
adc
aad
xchg
dec
pop
loope
push
std
loope
fwait
scas
loop
ss
sub
rolb
test
sbb
aaa
loope
daa
loopne
pop
jl
mov
mov
sbb
fwait
inc
adc
sub
movsl
icebp
aad
ret
leave
sbb
pushl
pop
aad
out
inc
scas
rolb
and
sbb
addl
sar
mov
in
sbbb
fs
inc
movsb
sub
push
mov
pushl
je
rcll
xor
and
mov
add
mov
jmp
or
inc
jo
adc
jge
loope
xchg
inc
and
loop
add
pusha
aam
cli
sbb
cmc
adc
imul
xchg
test
push
inc
dec
cmpb
lods
mov
in
ds
adc
xchg
or
lock
mov
imul
mov
inc
push
adc
add
mov
inc
addb
sbb
pop
push
nop
dec
ljmp
lock
fsubrs
sbb
xor
cmpsb
xor
inc
mov
ljmp
int
add
cwtl
jno
xchg
push
aaa
outsb
dec
cmp
xchg
mov
ljmp
pop
repnz
scas
aaa
and
fstps
add
iret
xchg
lock
cli
orl
mov
int3
xor
or
push
push
clc
jg
push
cmp
imul
mov
scas
cld
dec
inc
mov
xchg
ficoml
add
mov
stos
cmp
cmpb
inc
jmp
cmp
jg
stos
pushf
adc
push
lock
pop
pushl
in
pop
hlt
add
stc
jge
aas
insl
xor
push
or
pop
push
aam
je
inc
stos
cmpsb
jp
data16
cmp
push
push
jno
mov
inc
lret
movsb
outsb
inc
lods
in
adc
push
sub
adc
sub
jl
mov
add
bound
xchg
push
mul
push
mov
pop
push
lock
or
push
xor
push
adc
sbb
mov
rclb
sub
cmpsb
jne
ret
lods
std
mov
lret
ret
jle
int
lea
lods
es
sub
fsubs
push
cmpsb
cli
je
pushf
pop
add
incl
mov
loope
les
adc
scas
push
in
push
sbb
cmp
adc
or
out
stc
loopne
ret
push
cld
call
lret
sub
mov
das
gs
shl
popa
fsubrs
add
xchg
add
pop
dec
test
push
mov
xor
test
adc
aad
dec
sbb
add
imul
or
mov
std
les
shlb
fmul
adc
mov
sbb
pushf
fs
fwait
jle
cli
inc
loope
adc
jae
adc
or
inc
cmp
pop
ror
enter
mov
movsb
call
ret
lea
push
das
pushf
cltd
ds
sub
clc
pop
js
loopne
lret
xchg
lock
pop
sbb
add
outsl
jbe
stc
insb
dec
mov
addl
scas
decl
lretw
repnz
sub
cld
incb
pop
xchg
add
into
dec
mov
mov
lcall
lods
test
push
pop
pop
adc
xchg
jmp
sti
pop
cli
js
pop
pushf
adc
mov
test
pop
push
je
push
lock
adc
repnz
ss
out
adc
xor
rol
pop
adc
scas
dec
dec
loope
xor
in
lret
mov
push
fsubl
sub
jb
cli
push
pop
and
xorl
enter
inc
sbb
cmp
ffreep
mov
fistps
mov
cmpsl
cmp
pop
cltd
adc
ljmp
cmpsb
inc
xchg
popa
lcall
test
mov
push
rorl
cmp
insb
imull
adc
jnp
mov
aaa
adc
xchg
xor
mov
xlat
mov
push
push
icebp
cmpsb
mov
jo
lcall
incl
daa
ds
cmp
gs
pop
stos
pop
adc
out
mov
mov
js
popa
xor
bound
nop
push
add
pop
data16
inc
dec
loopne
inc
das
sub
ja
push
mov
fcoms
bound
cmpsb
adc
cld
sbb
lret
ds
cli
sbb
and
cltd
popa
inc
clc
sub
dec
push
add
inc
inc
xchg
in
rcl
add
xchg
add
mov
cmc
push
push
mov
pop
mov
cli
es
push
mov
ret
es
inc
push
imul
pushf
xchg
sub
cmc
mov
mov
xchg
pushf
andb
cmc
inc
shll
pop
icebp
clc
inc
insl
mov
or
xor
jge
aad
xlat
bound
popa
scas
cld
lock
hlt
dec
les
mov
add
push
cmp
push
aas
or
int
dec
cmc
fisubs
and
inc
movsl
aam
stos
insb
loopne
test
movl
push
mov
jbe
and
jle
mov
or
or
flds
sub
mov
mov
xorl
outsl
push
mov
mov
repnz
mov
sahf
sbb
pop
dec
data16
mov
sbb
or
lret
mov
add
inc
or
cli
lcall
fs
or
outsl
std
insl
xchg
enter
xchg
loopne
pop
push
mov
adc
push
xorl
lret
aam
push
fdivrs
add
push
mov
lods
lds
cli
hlt
mov
lret
and
lcall
fiadds
lahf
add
mov
pop
rcll
iret
push
fists
inc
shr
pop
imul
repnz
movsb
xchg
lret
or
cmp
mov
jp
shlb
test
inc
push
shrl
test
leave
icebp
scas
add
js
mov
cmc
stos
mov
ret
sti
outsb
mov
sbb
push
inc
cmp
inc
cmc
decl
pop
cmp
or
vmread
mov
stos
lock
jecxz
push
push
addr16
imulb
mov
ret
push
les
notb
out
test
call
push
mov
call
inc
xor
mov
pop
sbb
add
dec
jge
decl
cmp
std
shl
and
dec
or
cmp
add
es
jns
les
or
pop
cmp
out
jno
filds
sbb
pusha
mov
pop
mov
sbb
test
aas
xchg
rolb
mov
inc
dec
aas
data16
add
aas
mov
or
mov
sub
incb
add
xor
lea
das
shll
in
pop
mov
daa
add
mov
cmp
mov
mov
fdivr
pop
call
add
add
out
pushf
adc
pop
out
fst
call
test
jmp
daa
lret
mov
aas
je
dec
push
add
cld
or
ljmp
or
cs
mov
loop
cmpsb
add
jb
mov
pop
xchg
and
add
xchg
add
test
pushl
cli
rorb
movsb
push
fistpll
faddl
sbb
shlb
sub
jg
out
lret
xor
in
xchg
xor
xchg
pop
or
not
test
or
mov
xchg
dec
stc
imull
add
ds
lcall
push
push
cmpb
arpl
sti
insb
adc
insb
mov
or
in
push
and
jbe
push
icebp
loope
lcall
ret
sub
pop
loope
push
pop
aam
mov
cmpl
cmp
nop
inc
or
test
adcb
nop
cmpb
sub
jbe
sarl
out
fcomip
fcompl
xor
mov
pusha
mov
loopne
mov
xchg
decb
mov
push
pop
addr16
cmc
mov
les
ret
mov
cmp
sbb
cmc
aad
dec
sbb
lds
push
lods
shrl
cmp
scas
in
pusha
xchg
out
jns
xor
sarb
xchg
ds
fcoml
out
call
push
data16
shrl
or
mov
aaa
lds
and
outsb
inc
out
push
insb
push
mov
mov
out
sti
pop
ret
and
jbe
or
popf
sti
cmp
clc
fbld
ret
jbe
xlat
cs
cmp
mov
in
or
lcall
fcmovnbe
dec
or
bound
sub
adc
xorl
std
pushl
mov
mov
inc
xorl
fdivrl
cmc
fmuls
std
cmp
clc
adc
or
mov
fsub
push
jno
push
dec
dec
out
mov
push
fcomp
clc
mov
popf
ror
clc
hlt
testl
jb
dec
lret
ret
call
ljmp
repnz
jmp
fs
mov
sbb
sbb
shl
mov
push
call
test
fbstp
sbb
insb
jl
xchg
mov
mov
ds
clc
jg
pushl
add
add
pop
dec
xchg
int3
dec
imul
decl
jg
enter
cmpsl
sub
ja
adc
ljmp
call
mov
addr16
or
test
and
adc
jmp
xchg
data16
push
adc
pop
lock
negl
sub
or
and
imulb
sbb
or
and
mov
lahf
bound
movsl
xor
inc
inc
clc
outsl
or
cmp
add
push
xor
ljmp
sub
xchg
push
popa
inc
cmpsb
cmp
movsb
das
mov
insl
mov
adc
push
dec
dec
pop
xor
aas
test
outsb
mov
adc
xor
xchg
jno
xor
mov
sub
clc
add
mov
rcll
hlt
dec
cmp
xorl
pop
xchg
pop
mov
and
inc
stc
pop
push
mov
cmp
cmc
or
pop
xchg
cmp
imul
clc
push
add
dec
daa
or
sbb
cs
xchg
and
movsb
fdivrl
into
xlat
add
scas
clc
pushl
push
mov
push
lcall
or
roll
clc
mov
or
sub
mov
scas
sub
cli
cwtl
negl
and
jbe
clc
push
jle
jle
mov
repz
push
or
pop
movsl
mov
xchg
outsb
pop
fdivl
xor
jecxz
popf
adcb
mov
jle
jle
dec
inc
xchg
leave
push
adc
inc
das
push
mov
lret
dec
mov
mov
push
ret
cmp
out
jno
shrb
cmp
pop
gs
pop
stc
loopne
jnp
lea
mulb
push
rorl
xor
ds
mov
pop
shlb
jns
arpl
or
sbb
adc
mov
mov
mov
mov
js
sbb
mov
mov
pop
ljmp
push
insl
push
pushf
imul
sahf
pop
dec
rcrb
lock
mov
sub
push
mov
test
xchg
mov
xchg
sub
orl
repnz
pop
std
jg
lock
sub
lock
pand
test
out
mov
and
fnsave
mov
mov
xor
push
in
lret
decl
or
sub
enter
mov
cltd
fsubl
fbld
add
pop
sub
cmp
jbe
sbb
or
bound
out
addb
das
mov
push
icebp
adc
insb
jmp
jmp
adc
push
adc
int
cwtl
jmp
xchg
pop
mov
addr16
in
shlb
cli
add
add
out
loopne
sbb
mov
js
stos
fisubs
push
mov
jnp
mov
repz
jmp
cmpsl
testl
clc
imul
fisubrs
ja
sbb
mov
aam
jnp
shl
dec
daa
mov
inc
mov
mov
jl
fadds
and
pop
adc
dec
arpl
or
sbb
push
xchg
mov
and
pop
call
dec
fists
cmp
inc
add
popa
jl
cmpsb
mov
add
aad
lods
jp
xor
sub
ja
sub
pop
pop
jae
push
or
cmpsb
ret
xchg
cmp
sub
inc
jl
push
lcall
sbb
pop
jo
cli
les
addr16
xorb
movl
decl
insl
jle
add
sti
cmpsl
into
mov
fwait
cld
mov
leave
hlt
sbb
cmp
repnz
je
and
adc
outsb
sbbl
add
bt
stos
lock
add
jg
cmpsl
mov
mov
pop
add
addb
sti
stos
and
pop
outsb
push
hlt
adc
cltd
pop
testb
in
aam
fdivrl
or
mov
mov
xor
xchg
push
pop
ljmp
idiv
mov
es
lock
cld
cmpsl
and
pop
aad
insl
movsb
test
push
std
push
clc
xor
sub
cmp
leave
imul
movsb
cmp
add
mov
mov
fs
repnz
lret
scas
inc
hlt
inc
incb
xor
ljmp
insb
lret
imul
sub
aam
je
scas
jo
sub
test
xchg
cmpsl
cmp
stos
rorb
shrl
movsb
push
fs
adc
mov
lds
dec
cmp
lea
jbe
or
dec
fldcw
icebp
jo
jmp
mov
inc
xchg
pop
push
xor
mov
xor
je
cmp
add
pop
test
sbb
rorb
dec
jmp
out
repnz
jmp
push
cmc
jle
adc
push
mov
es
xchg
inc
cld
jmp
shlb
test
mov
ret
xchg
bound
push
bound
jmp
mov
mov
dec
and
loopne
ret
mov
add
inc
iret
sbb
movsb
int
enter
sbb
jnp
and
inc
fsubs
or
mov
push
adc
add
xor
aaa
inc
mov
inc
add
and
inc
inc
std
leave
add
insl
jl
cmpsb
push
cmp
movsl
mov
or
cmp
shlb
xlat
out
dec
and
adcl
cld
and
test
or
jmp
xor
or
insb
decl
mov
mov
mov
pop
popf
adc
lds
cmp
outsl
inc
loopne
xor
imul
cltd
push
add
or
mov
jo
xchg
int3
call
mov
mov
jbe
mov
test
push
push
jp
inc
leave
adc
and
ljmp
dec
sub
ljmp
je
out
sbbb
rcrb
in
faddl
pop
pop
jmp
addr16
scas
out
inc
test
je
mov
xor
mov
mov
adc
repnz
les
adc
mov
inc
lahf
mov
cld
outsb
adc
cmp
dec
push
decb
and
mov
push
adc
out
sbb
loope
dec
mov
adc
pop
xor
pop
ret
inc
cmpsb
push
mov
in
or
scas
or
mov
jmp
push
xchg
mov
leave
mov
push
sbb
xor
lcall
add
mov
sub
fnstenv
xchg
jp
adc
call
bound
rolb
pop
sbb
inc
repz
mov
insb
pop
insb
inc
sub
cmc
outsl
and
or
xor
sub
and
mov
jle
mov
jp
notb
popf
push
mov
pop
dec
stc
push
dec
xlat
iret
rol
std
add
clc
movsl
pop
and
rcll
aad
sbb
cmp
call
in
sub
mov
in
sub
stc
rclb
or
ja
nop
lret
inc
pop
adc
ljmp
jmp
lock
mov
pop
mov
and
insl
inc
les
je
dec
popf
pop
gs
int
and
movsb
hlt
inc
xchg
add
cwtl
pop
es
mov
fbld
cmpsb
adc
push
dec
add
icebp
js
lock
inc
mov
shl
adc
rcrb
mov
jl
scas
cld
jne
dec
and
pop
add
cmp
cmp
lock
jmp
pop
jecxz
call
inc
rcl
cmp
stos
and
push
mov
lret
dec
mov
sbb
bound
cmpsb
js
mov
roll
popf
ds
add
add
mov
fmul
out
ja
sub
push
fcmove
nop
push
imul
adc
rep
push
lret
pop
scas
xor
mov
jp
sbb
nop
add
insb
xor
xor
xor
call
or
out
jns
js
sbb
add
and
les
jp
pop
aaa
pop
push
in
add
adcb
sub
push
bound
fwait
sbb
cmp
pop
xchg
jecxz
inc
inc
shlb
push
inc
repnz
roll
cmp
push
sti
stc
mov
and
and
mov
inc
xlat
mov
mov
add
add
add
xor
leave
xchg
jecxz
cmp
out
aam
cmpsb
mov
insb
pop
dec
enter
fdivr
pop
orb
lds
xor
mov
inc
xchg
mov
rcrb
cmp
orl
shrl
lahf
daa
ret
mov
dec
or
adc
sbb
leave
cmc
out
mov
pusha
mov
ficompl
and
xor
or
cli
xor
add
mov
lods
sbb
cld
pushl
in
mov
cmp
xor
pop
fcoml
mov
fldl
push
jle
dec
sub
movsb
mov
mov
mov
jbe
or
repz
cmp
push
jl
jae
fsubrp
icebp
lds
leave
mov
push
or
push
ja
fsubrs
test
incl
lods
or
out
insl
ds
loop
inc
cmpsb
mov
xchg
lret
das
cmpsl
lds
pop
lcall
fwait
js
repnz
andb
subb
jnp
jmp
call
call
mov
outsb
ret
sub
arpl
jg
cmc
out
ret
ret
loop
xorl
testb
push
inc
add
movsb
in
xchg
inc
xor
inc
mov
mov
dec
jmp
dec
adc
dec
ret
inc
ror
cli
lret
int3
mov
mov
subb
sbb
and
mov
inc
push
adc
hlt
mov
sti
shll
xchg
cli
xchg
rol
fildl
add
mov
fdivrl
popa
mov
scas
cs
cmp
dec
mov
sub
lea
mov
scas
pmulhw
loopne
mov
outsl
jp
int
mov
add
test
add
dec
sbbl
and
inc
clc
mov
std
mov
mov
add
gs
sub
sbb
pop
pop
xchg
js
add
leave
inc
jbe
mov
dec
push
sbb
sub
mov
cmc
das
stos
movsb
mov
loop
or
fisttps
xor
shlb
loopne
les
cmc
or
and
mov
xor
scas
pusha
dec
push
ljmp
mov
data16
pop
dec
iret
cli
cld
push
mov
int3
sbb
in
fisubs
cmp
and
lods
sbb
cs
mov
pop
sbb
sub
lcall
push
sub
pop
inc
pop
sub
stos
je
insl
jmp
add
or
jg
xchg
lock
mov
out
xchg
push
cmpl
add
and
add
mov
xor
adc
aas
ljmp
or
or
cli
outsl
jle
sub
sti
stos
add
roll
scas
mov
xchg
out
loopne
cmp
out
les
fbld
fcompl
pop
insl
lret
push
xor
aas
sar
in
sub
cltd
rep
dec
pop
ja
je
jmp
call
mov
jle
test
mov
out
cwtl
inc
xchg
jl
stos
jle
lcall
rorl
aam
cmpsb
into
decl
test
lret
add
adc
out
cmpb
call
xor
insl
fildll
scas
add
adc
pop
lock
inc
and
sub
out
pop
pop
add
mov
add
add
cmovs
push
idivb
flds
fwait
nop
lds
insl
mov
dec
js
pop
push
inc
dec
cmp
inc
cmpsl
out
call
repnz
mov
xchg
mov
mov
imul
test
adc
adc
mov
test
dec
lret
mov
inc
je
fmuls
or
jle
sbb
push
sub
loopne
and
and
and
jp
hlt
punpcklwd
adc
jg
inc
ret
into
cmp
pop
sub
sbb
cmpl
out
mov
notb
out
stos
add
fmull
rcll
cmpsb
mov
add
add
add
inc
sarl
mov
icebp
aam
in
ljmp
or
lods
inc
scas
sbb
mov
mov
lock
jne
inc
sahf
lods
stos
out
mov
pop
repnz
inc
mov
push
fmull
rorl
or
mov
scas
pop
inc
dec
mov
jmp
pushf
addr16
adc
rolb
push
aam
imul
pop
insl
cmp
shlb
dec
out
xchg
push
pop
fdivrl
es
sbb
adc
jle
add
ret
adc
incl
mov
popf
push
mov
push
sub
sbb
mov
xor
aad
fiaddl
daa
dec
xor
sbb
mov
or
mov
sbb
into
cmp
and
xchg
mov
les
mov
sarb
push
adc
jbe
mov
and
dec
out
call
lock
call
lods
push
clc
xchg
sbb
cmc
or
sbb
mov
sbb
add
incb
xor
repnz
pushf
ljmp
stos
pop
mov
add
out
lcall
jb
mov
call
mov
mov
pop
pop
cmp
popa
ret
mov
or
cmpsl
lret
movsb
mov
test
jg
sub
mov
in
dec
dec
call
inc
notl
sbb
gs
out
cli
dec
add
mov
jno
cli
lock
jg
orb
sub
xor
repnz
pop
je
loopne
repz
idiv
mov
test
and
stc
fidivrl
dec
cmpsl
sub
daa
pusha
and
and
lds
pop
lods
add
shl
sbb
into
inc
and
test
mov
sub
call
mov
inc
call
out
cmp
out
data16
into
sbb
fists
inc
push
adc
mov
movsb
jl
lock
cs
fldl
rol
js
cmp
aas
adc
cli
popf
add
inc
fimull
subl
repnz
cmp
outsl
jp
mov
bound
in
jmp
lock
adc
add
and
and
push
pop
add
call
and
cmpsl
add
adc
lea
ljmp
push
inc
pop
push
lds
andb
lods
or
jno
mov
mov
test
loope
js
add
mov
push
add
and
adc
jg
ret
test
hlt
dec
fadds
mov
mov
add
adc
and
mov
ljmp
or
mov
push
and
pop
cltd
add
lods
ja
xlat
cmp
add
cmc
push
jo
mov
mov
cmpsb
pop
adc
push
test
adc
add
imul
into
lds
pusha
loopne
sbb
scas
decb
or
call
push
inc
clc
test
in
sar
mov
fimull
jmp
aam
rcr
in
ds
incl
fcmovnbe
inc
sbb
and
cli
or
test
frstor
ror
adc
lea
clc
cmp
movsb
sbb
popf
cwtl
or
jmp
push
cli
gs
scas
mov
xor
xchg
enter
in
js
jg
mov
icebp
adc
out
out
dec
outsb
adc
mov
sbb
mov
mov
in
push
lods
cltd
pop
sub
jne
cmp
xlat
jb
subb
add
mov
lock
das
shrb
adc
into
cmc
notl
cmp
mov
or
jns
mov
icebp
aam
jae
adc
frstor
cltd
clc
mov
sub
fsubrl
mov
mov
cmpsl
std
ret
mov
lods
xchg
dec
push
pop
pushf
cmp
jae
xor
decl
lods
jae
inc
in
pop
mov
iret
pop
lods
ret
inc
clc
lods
adc
push
inc
or
sbb
pop
ljmp
add
jo
xchg
xor
dec
add
xchg
push
dec
push
xchg
js
xor
add
pop
pop
xchg
pop
mov
push
push
add
outsl
sbbb
js
nop
mov
ljmp
push
sub
insb
xor
push
adc
dec
dec
xchg
rolb
sbb
call
mov
sbb
and
xor
hlt
decl
dec
sbb
mov
test
stos
mull
lcall
movsb
pop
push
flds
ret
xchg
movsb
jge
xor
loope
dec
xor
scas
pop
add
insb
daa
es
mov
cmpsb
jns
push
xchg
test
dec
sahf
and
sahf
pop
or
inc
lcall
mov
incl
adc
cltd
aam
xchg
add
xchg
jmp
or
jle
adc
jmp
mov
out
sbb
dec
push
push
jns
andl
add
into
je
or
dec
add
or
jmp
cmp
lods
xchg
cmp
popa
loopne
xor
jle
test
mov
mov
imul
insl
mov
idivl
inc
shrb
std
test
incl
xchg
shr
and
sbb
fdivr
cli
push
hlt
fstl
dec
add
cmp
dec
and
test
lock
xchg
clc
pushl
das
and
nop
loopne
pop
inc
mov
stos
rcrb
jb
repnz
add
xor
test
sti
pop
icebp
insl
dec
bound
ret
mov
mov
jg
ljmp
inc
daa
inc
jg
test
dec
inc
mov
fbld
inc
mov
pop
icebp
push
sbb
std
mov
pmaxub
inc
jo
mov
or
ljmp
rolb
sub
xorb
inc
aam
in
rclb
and
mov
or
decl
sbb
rorl
push
xor
inc
in
xlat
jg
push
ss
aas
rolb
pusha
add
adc
mov
inc
push
rcll
mov
shrl
sub
arpl
lcall
fistpll
xor
cmp
xor
adc
nop
shl
pop
sub
push
rorl
out
cli
mov
les
xor
and
andb
mov
sbb
loopne
inc
pushf
mov
clc
and
adc
test
cmpb
lret
jmp
pminsw
bound
lcall
jno
adc
rolb
lcall
pusha
jnp
mov
inc
data16
adc
sub
dec
mov
pusha
sub
roll
ror
shrl
add
test
loopne
sbb
icebp
push
xchg
lcall
gs
std
jg
xor
push
xchg
add
std
inc
xor
adc
mov
or
pop
mov
sbb
xlat
dec
jmp
jg
outsl
lret
mov
das
cmp
outsl
xor
dec
arpl
xlat
popf
fs
int
xchg
dec
add
or
add
decl
fs
cmpsb
cmp
aad
inc
cwtl
sub
sub
inc
ljmp
or
push
mov
das
test
test
lcall
addr16
popf
repnz
inc
xor
orl
add
movsl
int
pop
loope
mov
stc
sbb
out
sbb
loopne
fdivp
pop
jg
mov
mov
xlat
pushl
imul
cli
add
cli
nop
jo
or
loopne
pop
push
jne
lret
sub
jge
and
out
dec
or
xor
inc
out
sbb
sub
xchg
mov
adc
orb
ret
jg
cmp
inc
xor
push
inc
popa
adc
pop
sub
mov
sbb
cmc
outsb
rorl
xchg
mov
test
xchg
pushl
and
xchg
lods
cld
les
testb
lock
jmp
popa
les
and
sub
lret
out
sub
outsb
into
lahf
sbb
add
jle
cmp
mov
cmp
add
testb
inc
inc
and
call
dec
pop
lds
cli
fcompl
mov
mov
shll
sub
shrl
cmc
movsl
add
xchg
adc
and
mov
outsl
mov
aas
push
cltd
fildll
mov
movsb
iret
pop
ljmp
sahf
or
sbbl
adc
cli
cli
jg
mov
lcall
mov
push
mov
outsl
sarl
mov
pop
xorb
sbb
adc
fs
push
fcmovnu
push
pushf
orb
mov
add
outsl
hlt
add
inc
repz
es
add
fcomip
pop
add
inc
cmc
jle
ret
loop
movsl
int3
xchg
push
push
mov
xchg
jb
sub
add
mov
lock
jns
outsb
or
pop
mov
rcll
mov
cs
or
add
es
imul
enter
cmp
xchg
hlt
mov
inc
int3
xchg
fbstp
adc
je
fcoms
push
daa
fldl
lock
pop
adc
add
shl
dec
add
inc
and
sbb
das
rolb
mov
push
push
or
cmp
loopne
icebp
dec
sub
out
out
mov
adc
lods
push
xchg
clc
adc
dec
ja
jg
cmp
or
push
sub
mov
push
movsb
jmp
clc
jge
cmp
sbb
xchg
mov
outsl
xchg
dec
stos
int3
ffree
add
loopne
fistpll
ret
mov
xchg
xchg
mov
add
fwait
cmp
jg
js
in
mov
sti
call
jbe
push
pop
adc
xor
out
pop
popf
pushl
jl
pop
pop
xchg
xor
addr16
cmpsl
cld
lret
decl
fmull
jmp
out
mov
pop
add
and
pop
pop
push
in
lcall
dec
xor
xchg
xchg
cmpsl
dec
push
and
inc
add
mov
xor
cmp
nop
jmp
cmp
cwtl
pop
push
jo
pop
hlt
jg
xchg
shlb
dec
push
mov
mov
sbb
xchg
jo
dec
loopne
adc
cltd
push
sub
sbb
xchg
pushf
fbld
loop
add
frstor
xor
stos
xchg
call
sbb
int
or
lock
adc
jne
leave
mov
cli
jmp
outsl
mov
mov
enter
mov
loop
lret
js
xchg
test
inc
fwait
jo
inc
add
sub
fcoms
jo
cld
push
pop
jg
ja
add
jns
dec
cmp
hlt
ret
sbb
push
xor
outsl
mov
lock
or
je
call
mov
in
pop
pop
sbbb
dec
or
xor
ret
std
fildll
mov
fxch
inc
push
imul
inc
pop
pop
loope
pop
enter
sar
test
bound
add
sar
loopne
out
jbe
sbb
xorb
or
xchg
ss
clc
outsl
inc
and
decl
frstor
insb
loop
mov
lea
pop
call
xor
loopne
incl
aas
scas
pop
call
stos
jmp
sub
cmpsl
ja
iret
or
aad
lret
fwait
movsb
mov
sub
dec
sub
mov
jne
xor
aad
push
sub
cwtl
bound
jge
test
and
movsb
cs
sbb
mov
insl
push
dec
adc
outsl
inc
mov
jecxz
adc
in
mov
adc
incl
test
push
pop
and
popf
lret
jg
call
je
add
and
push
rolb
call
jl
jecxz
mov
jne
call
jbe
shr
jo
and
jb
add
stos
ret
daa
push
bnd
push
repnz
mov
lock
adc
mov
mov
add
pop
bound
inc
xchg
xor
je
mov
inc
jp
push
mov
jg
or
inc
sbb
sbb
fildl
inc
or
call
xor
mov
mov
mov
jmp
mov
bound
je
ljmp
js
hlt
jb
in
adc
cmc
clc
xor
decb
push
movsl
arpl
test
add
fwait
das
mov
mov
inc
adc
imul
sub
cltd
ret
adc
add
in
push
push
pop
jne
dec
call
dec
js
xchg
popf
movsb
movsb
adc
fs
and
adc
push
jle
hlt
add
inc
ljmp
sbb
mov
and
pop
and
mov
mov
push
sbb
inc
cld
adc
adc
mov
enter
xor
icebp
dec
push
loopne
sahf
pusha
and
out
ds
fadds
ficoms
mov
push
xor
dec
mov
ljmp
loope
loopne
arpl
loope
in
sbb
movsb
push
pop
sub
jbe
pushf
jp
test
sub
scas
inc
push
int3
lods
ret
cmp
pop
popa
das
clc
or
jmp
xchg
adc
jmp
loopne
or
jmp
or
add
mov
mov
and
std
in
scas
push
testb
stos
popa
add
push
in
out
jg
add
push
mov
lcall
clc
or
ss
jle
push
sub
jg
fcmovbe
mov
repz
xor
mov
mov
push
out
decl
imul
repz
inc
push
push
dec
fadds
mov
sub
push
jae
cld
mov
fwait
cld
incl
sub
rorl
daa
fisubs
in
int
adc
rol
jmp
sub
push
jge
mov
fadd
loopne
imul
or
ss
mov
or
outsb
test
jnp
je
xchg
cld
inc
jge
sub
inc
sbb
and
rorb
mov
add
jge
add
cmp
clc
int3
bound
sbb
pop
or
test
add
dec
rorl
jp
call
std
mov
xchg
inc
sbb
mov
push
hlt
aas
ljmp
mov
and
push
mov
lcall
in
mov
mov
push
and
push
mov
imul
fcomi
add
push
std
scas
sahf
shlb
xchg
sarb
adc
sub
sub
fadds
cmp
push
outsl
inc
adc
loope
rclb
addb
arpl
or
mov
jnp
and
orb
test
adc
aam
mov
std
loope
mov
add
or
push
add
lret
sub
cld
iret
add
push
inc
mov
call
cmp
popf
mov
lods
mov
mov
fimull
clc
test
sarl
fdivs
outsb
sub
cmp
data16
xchg
loop
mov
inc
bnd
cmp
sbb
mov
stc
and
movsl
mov
sub
sub
cmpsl
mov
xor
xacquire
adc
bound
test
aam
add
stos
dec
pusha
add
cld
stos
movsl
pop
lret
or
imul
iret
push
and
lock
xor
inc
out
cmpsb
call
nop
stc
add
lea
xchg
leave
dec
pop
mov
setb
pop
pop
pop
or
ljmp
test
fdiv
mov
mov
add
lds
adc
fimull
aad
push
in
pop
cmp
loopne
mov
decl
jnp
fiadds
mov
inc
mov
add
movb
dec
push
or
dec
aam
or
test
or
das
loopne
fs
sbb
or
lcall
mov
dec
movsb
add
cmp
fs
dec
and
jnp
int
mov
insl
test
stos
jmp
fisubs
cli
cld
idiv
mov
sbb
xor
cmpsl
push
in
and
fcompl
lret
mov
or
rol
sti
movsb
fs
push
cwtl
jne
mov
mov
mov
negb
inc
and
cmp
stos
rorl
dec
push
mov
add
jl
mov
rcrw
pop
and
and
cld
pushl
add
fwait
iret
out
addb
cmc
mov
sbb
xchg
push
cmp
mov
scas
xchg
push
add
cmp
sbb
xor
add
add
xchg
cmpsl
lea
pop
inc
xchg
cmp
mulb
icebp
pop
cltd
sbb
push
xor
pushl
fists
rclb
loope
adc
push
sbb
add
mov
or
enter
stos
outsb
mov
inc
in
sbb
hlt
cmpsb
dec
or
jmp
fs
push
mov
xorl
mov
test
sub
inc
cwtl
jl
jg
jbe
and
iret
sahf
mov
nop
jbe
inc
repnz
movsb
pop
inc
sbb
cltd
pop
add
fildl
movsl
imul
xchg
insl
jp
mov
mov
loop
push
cld
fisttpl
popf
sub
mov
mov
mov
push
loopne
daa
pop
push
mov
push
inc
pop
loopne
test
jo,pt
inc
sub
or
inc
sar
xchg
sbb
call
mov
xchg
or
and
add
adc
jbe
lret
mov
mov
sbb
in
fadd
daa
lcall
test
jmp
ja
clc
or
push
cmp
int3
es
aas
stos
clc
addb
inc
pop
mov
adc
cli
test
xor
mov
movsb
test
jbe
cs
stos
loopne
jg
add
std
repz
push
clc
sub
sub
cmp
std
inc
mov
mov
sub
lcall
insl
add
ljmp
je
aaa
dec
xlat
int3
repnz
jl
test
adc
mov
xchg
loopne
sub
mov
imul
push
mov
xchg
int
sbb
dec
and
pushf
inc
cmc
lahf
mov
push
lret
rcll
jmp
adc
and
jp
and
je
lret
outsl
adc
ljmp
xchg
cmp
push
ljmp
pop
push
js
jbe
add
inc
outsb
add
inc
fcompl
mov
jbe
test
clc
or
mov
dec
inc
in
xchg
inc
cli
mov
ret
clc
pop
adcl
decb
sbb
test
pop
push
jmp
xchg
pop
or
push
std
jmp
inc
jl
adc
ds
mov
cld
xor
mov
mov
loope
mov
sbb
test
insb
lods
popf
pop
out
dec
push
cmp
sub
mov
in
mov
out
cmp
and
push
sbb
pop
or
hlt
add
inc
adc
add
loope
pop
les
mov
sub
int3
xchg
gs
jg
adc
mov
dec
test
call
and
scas
lock
inc
or
inc
loopne
xchg
into
in
push
lock
jge
sbb
insb
xchg
sar
cld
setle
ret
call
fs
loopne
sub
filds
xor
pushl
lahf
loopne
ret
bound
jmp
test
cmp
xor
ret
push
jae
add
pop
or
jmp
fsubl
cld
mov
mov
or
test
jne
add
test
jle
jmp
push
pusha
popa
jp,pn
add
pop
xorl
int
mov
dec
push
sub
aad
mov
fwait
cli
lcall
clc
loopne
xlat
sub
push
push
sahf
into
xor
jne
rorl
dec
xor
pushf
push
out
mov
and
xchg
insb
loopne
ret
test
pop
loope
push
adc
xchg
inc
mov
inc
test
out
jmp
jno
pop
add
sarl
or
popf
ljmp
push
rorb
stos
out
push
xlat
sbb
pop
jg
loopne
xchg
inc
mov
xor
dec
shrb
inc
or
arpl
repz
nop
test
lcall
pop
and
idiv
rcll
inc
les
mov
sar
mov
enter
and
decl
add
out
xchg
in
mov
add
sbb
inc
cmpsb
cwtl
jb
xchg
das
and
bound
dec
sahf
xor
or
and
jl
mov
jbe
sbb
iret
into
xor
sub
inc
cwtl
addr16
adc
cmpsb
push
and
mov
cmpl
mov
roll
cld
addr16
xchg
sub
fsubrl
dec
add
pop
push
ret
sub
cmp
or
lcall
clc
jg
jge
sbb
mov
or
and
jg
mov
sub
and
mov
cmp
jo
ds
push
push
popf
or
adc
and
inc
shrl
pop
sub
ja
call
idivb
xchg
xor
inc
lahf
fwait
mov
dec
inc
add
inc
mov
fbstp
sub
scas
test
loopne
cmpb
and
ficomps
inc
sti
and
push
das
aaa
xor
mov
dec
mov
sbb
cli
sbb
notl
and
cmp
cld
xor
mov
adc
and
and
sub
iret
xchg
in
adc
xchg
std
or
inc
sbb
lock
scas
sarb
push
cmp
adc
push
clc
aam
clc
jg
pop
add
insb
pop
xchg
mov
mov
xchg
fcomps
ljmp
in
arpl
in
daa
xchg
xlat
pop
jl
pop
cmp
stc
mov
cwtl
add
lcall
dec
out
insl
sub
scas
movsb
icebp
adc
js
jp
adc
adc
push
sbb
sbb
loop
adc
sub
cmpsb
lea
cmp
mov
jmp
push
nop
dec
lret
icebp
cmp
nop
mov
sbb
sub
pushl
lahf
dec
xchg
adc
mov
mov
jg
aam
ss
movsb
ja
jo
lcall
pop
mov
mov
outsb
stc
int3
cmpsb
lret
lcall
inc
jmp
cs
sub
data16
in
cli
pushf
push
jecxz
push
xchg
add
xchg
mov
inc
xchg
fldcw
and
adc
lea
fdivrp
fists
jne
call
mov
push
sub
dec
or
shlb
mov
data16
push
fstp
mov
or
fwait
mov
out
test
subb
lcall
push
aad
pushf
aam
test
push
pop
icebp
add
or
inc
jo
aaa
adc
fdivrl
jmp
cmc
ljmp
add
loope
push
add
add
add
cwtl
test
ds
dec
xchg
push
and
mov
jne
mov
addr16
add
nop
lock
pop
dec
push
adc
sub
jge
movsb
push
cld
pop
jb
pop
addr16
aaa
cmpsl
mov
pop
repnz
shrb
sbb
hlt
call
mov
cmp
cs
pop
sahf
inc
mov
rclb
insl
push
mov
clc
sbb
sub
add
fildl
add
stos
bound
pop
lret
scas
clc
cmp
iret
shlb
push
ds
clc
add
cld
dec
jecxz
lds
cli
sub
inc
and
mov
inc
out
ljmp
aad
or
pop
decl
je
cmp
ret
rcl
pop
cmc
xchg
jae
jnp
imul
into
pop
icebp
jg
jb
bound
inc
pop
jbe
mov
xchg
jl
and
sub
mov
insl
push
xchg
and
pop
hlt
test
mov
mov
dec
loopne
lahf
sbb
insb
inc
icebp
ret
sbb
dec
nop
jmp
add
xchg
repnz
xchg
and
cmp
ja
sub
aas
jp
fcmovbe
int
or
jecxz
or
ja
lods
mov
or
sbbb
pop
nop
rol
dec
insb
decl
xor
and
adc
adcb
call
inc
fstpt
xchg
sbb
or
dec
dec
inc
adc
in
aas
aad
jmp
sub
or
mov
push
sub
xchg
add
jo
movsb
pop
jmp
jmp
mov
push
inc
arpl
enter
pop
ds
pop
cli
fucomip
mov
ja
xchg
and
cld
in
stos
add
push
std
adc
nop
cmp
add
loope
test
cmp
arpl
out
add
dec
dec
hlt
je
jle
das
jmp
fists
jecxz
mov
adc
in
ljmp
imul
or
xor
adc
add
incl
mov
cld
sar
push
and
pop
xchg
push
mov
sbb
add
mov
dec
jp
mov
decl
mov
aas
sbb
lock
in
cs
sub
rclb
jg
xchg
sbb
nop
ret
or
pop
sti
iret
rcr
xchg
bound
movsb
in
mov
in
ljmp
xchg
push
mov
add
mov
nop
out
incl
fwait
bound
in
movsb
pop
sbbl
clc
push
sbb
add
dec
dec
pop
mov
inc
hlt
sbb
inc
fcomip
mov
xchg
lahf
adc
sbb
pop
pop
inc
xlat
out
jno
stos
sbb
stos
and
cmp
adc
xchg
fsubl
pushf
add
jb
test
and
popf
aam
lock
inc
dec
lock
add
xor
pop
push
mov
and
xor
cmpsl
mov
call
dec
jae
iret
jns
fwait
inc
add
jle
mov
ret
std
push
call
cmp
xchg
mov
xor
mov
fwait
adc
pop
mov
cwtl
aas
push
bound
inc
xor
out
mov
aaa
repz
out
stc
jb
mov
into
mov
jbe
test
sub
sub
inc
imul
in
and
cmp
inc
cwtl
ljmp
and
xchg
mov
adc
sub
and
aad
pop
xchg
addr16
add
mov
pop
rorb
jb
incl
dec
jb
rolb
mov
loop
dec
mov
adcb
ljmp
loope
mov
outsl
jbe
clc
mov
imul
pop
pop
add
dec
loopne
and
aam
cmp
incl
sub
cmp
std
and
bound
inc
rclb
shll
or
popa
insb
inc
xlat
fiaddl
ljmp
shl
imul
dec
mov
dec
xchg
jno
imul
subb
sub
add
add
bound
dec
notl
scas
xor
mov
sarl
loope
sti
pop
add
pop
subb
jmp
popa
adc
insb
mov
inc
pop
sbbb
dec
push
ljmp
jmp
mov
push
call
or
pop
shrl
sbb
leave
incl
fsubs
hlt
mov
adc
lock
pop
jae
lods
pop
clc
push
adc
data16
in
mov
loopne
push
cwtl
aad
outsb
push
xchg
or
add
sub
out
push
lock
inc
add
cmpsb
sub
cmp
and
call
cli
test
and
mov
roll
je
daa
std
push
loopne
aaa
std
dec
test
or
push
into
repz
pop
add
testb
mov
call
imul
jl
int3
sbb
dec
sub
pop
rolb
dec
sub
cmpsl
sahf
dec
scas
xor
pop
imul
mov
cmp
adc
xchg
or
push
jb
movsb
add
hlt
mov
loopne
popa
xchg
cmp
xchg
fdivl
rorb
sbb
pop
sbb
mov
das
cmp
enter
cmp
or
push
cld
push
std
cmpsb
dec
pushf
adc
mov
cld
or
sbb
and
pop
hlt
mov
push
pop
mov
push
and
lea
jle
add
mov
sbb
es
add
dec
out
xor
loope
xor
mov
push
je
pop
and
xor
mov
stc
pop
or
outsl
pop
push
push
inc
add
cld
not
and
hlt
lods
push
maskmovq
add
push
les
in
mov
sbb
push
outsl
push
sarb
pop
popa
dec
loopne
loop
dec
loope
fdiv
push
add
jmp
pop
sub
data16
push
ficomps
xchg
nop
mov
lods
cmc
xchg
jb
nop
add
loopne
inc
push
addb
mov
lcall
insl
jno
inc
push
fbld
jbe
jg
loope
outsb
sbb
inc
push
inc
mov
sbb
inc
or
jo
cmc
loop
push
sbb
inc
mov
mov
mov
addr16
inc
int
scas
test
lock
mov
adc
inc
in
pushf
sarl
rol
jbe
sbbl
ja
pop
icebp
je
movsb
lahf
xchg
push
scas
jns,pt
imul
xchg
scas
ss
sbb
cs
xchg
jmp
outsl
jecxz
or
in
shlb
sbb
mov
js
xchg
push
mov
sub
stos
xchg
lock
adc
adc
and
out
pop
inc
jae
mov
fdivrs
mov
cmp
cmp
negb
jle
fildll
ss
scas
stos
lret
and
push
mov
push
cmp
inc
shrb
xor
adc
pop
ret
test
roll
incl
xchg
inc
jo
mov
loopne
mov
sbb
mov
push
lahf
fsubs
fadd
add
cmp
push
cs
and
testb
ljmp
jle
out
and
icebp
cmp
js
fbstp
inc
outsl
mov
lock
adc
sub
mov
pop
lods
in
ffreep
in
and
pop
popf
in
data16
fwait
inc
jo
cli
sub
ljmp
insl
enter
or
add
cmp
es
es
decl
xchg
cmp
xor
pop
pushf
idivb
mov
adcb
xchg
pop
repnz
les
or
insb
pop
sub
jle
hlt
push
cltd
xchg
sti
adc
sbb
mov
cmpsb
add
bound
jle
inc
pushl
fs
cmp
cwtl
jp
nop
fdivrs
iret
fwait
setle
or
scas
ds
out
mov
into
pop
inc
and
mov
dec
or
dec
fs
incl
cs
mov
test
test
fiaddl
pusha
sbb
pop
lret
and
sbb
insb
push
and
mov
mov
add
mov
gs
fwait
add
shll
pop
leave
sbb
arpl
jo
aaa
mov
push
cmp
out
xorb
pop
negb
ret
mov
in
add
inc
fcmovnbe
mov
pop
andb
mov
inc
mov
out
sub
xchg
push
jb
mov
add
std
ljmp
and
cmp
fwait
mov
push
bound
daa
shl
lcall
cmp
orl
popa
or
push
test
xlat
or
jg
cwtl
sbb
adc
ljmp
in
inc
cltd
pop
xor
jge
adc
jmp
cmp
mov
lcall
enter
xchg
sub
jb
jle
xchg
pop
or
ljmp
mov
xorb
add
scas
mov
mov
push
inc
aam
push
aaa
mov
cmp
pop
hlt
pop
icebp
mull
and
and
js
add
jg
mov
or
cmp
outsl
mov
add
sbb
outsb
or
aas
addb
pop
movsb
mov
jno
mov
decl
cmp
push
sbb
pushf
xor
and
fnstsw
outsb
cmpsb
ds
call
and
addl
adc
decb
push
jp
pop
dec
lahf
xor
jl
add
add
cmp
add
push
pop
dec
dec
add
stos
in
mov
jmp
test
out
cli
inc
add
lds
adc
cmp
mov
jae
repz
movsl
andb
mov
lods
cwtl
add
push
in
dec
mov
movsb
push
mov
aam
inc
enter
xorb
or
inc
rol
jecxz
cmp
and
stos
aaa
lar
call
mov
add
mov
cmp
lea
add
xor
movb
or
add
xchg
inc
icebp
lea
pop
cld
or
mov
loop
pushf
or
mov
add
jp,pt
js
lcall
mov
into
mov
mov
cmp
int3
sub
mov
lock
inc
sub
insb
pop
add
cmp
adc
jmp
movsb
dec
decb
sub
andb
xor
das
adcb
cmpsw
mov
add
dec
or
iret
xchg
stos
lahf
pop
xchg
push
dec
xor
rcll
dec
mov
bound
pop
insb
adcb
mov
enter
dec
cmp
lret
cmp
add
aad
or
cmp
jecxz
cmpsl
fadds
cmp
clc
inc
mov
pop
sub
pop
add
add
int3
sub
or
out
xor
mov
jne
push
sbb
imul
add
ljmp
push
bound
push
mov
push
rcl
push
inc
fcoml
cmc
ljmp
cld
sub
xchg
subl
pop
xor
or
rcll
pop
xor
in
xchg
push
pop
adc
push
push
and
mov
stos
insb
push
dec
cmp
addl
in
outsl
fcmovu
pop
sbb
jecxz
cli
ja
ficomps
adc
ret
xchg
inc
xchg
sar
mov
jnp
mov
inc
ljmp
pusha
incb
into
ljmp
xor
subl
ljmp
fs
rolb
outsl
and
and
mov
lods
dec
push
mov
push
xor
and
jle
rclb
cld
push
inc
fbld
mov
ret
icebp
rorb
mov
mov
xchg
out
xchg
sub
js
push
imul
inc
jo
xchg
mov
lods
cmp
xlat
cwtl
and
adc
scas
xor
scas
fucomi
out
adc
add
test
inc
push
into
and
adc
dec
das
insb
std
mov
sbb
sbb
inc
cmpsb
and
filds
add
jae
push
mov
divb
pushaw
add
sub
jp
push
and
mov
jnp
sub
ret
fwait
mov
mov
dec
xchg
pop
pusha
inc
hlt
and
add
pop
mov
js
add
jns
fstps
insl
jg
sub
lcall
jg
jno
jle
mov
mov
push
pop
add
jle
lock
test
xchg
add
rorl
shlb
push
rcrl
push
scas
or
mov
add
push
cmp
subl
xor
jmp
jg
or
mov
leave
push
scas
flds
push
xlat
ficoml
push
dec
push
and
std
lret
adc
in
call
xor
and
inc
sahf
fs
aam
jnp
popa
sti
out
iret
push
push
push
clc
push
and
push
aad
pop
icebp
sub
add
sub
or
mov
ret
inc
and
mov
mov
add
movsl
fcmovnu
add
pop
test
cmp
andb
shlb
or
or
jb,pt
sbb
sbb
outsl
or
loope
fstps
loopne
push
inc
sub
movsl
pop
jge
and
nop
mov
into
adcb
ljmp
testb
ss
pop
cmpb
aas
xor
inc
mov
in
sbb
cmp
das
sbbl
les
ret
inc
cwtl
mov
rorb
sub
sub
xor
call
xor
sahf
jbe
pushf
cmpsb
push
mov
cmp
scas
inc
adc
sbb
sbb
adcb
push
aam
xor
clc
scas
xchg
and
mov
sub
arpl
imul
ds
dec
jne
jecxz
insl
sub
js
xchg
leave
outsb
inc
mov
int3
shll
inc
stos
insb
test
push
sub
rsqrtps
aas
orb
dec
pushf
pop
dec
dec
dec
jecxz
notl
mov
stos
leave
repnz
push
cwtl
add
xor
test
ljmp
hlt
negb
insb
fsubrl
ljmp
mov
mul
cmp
out
or
pop
add
mov
icebp
pushf
stc
ds
pop
ret
incb
lock
jb
movl
lcall
mov
f2xm1
pop
mov
mov
inc
lds
inc
call
cltd
lods
adc
test
leave
jl
dec
or
or
adc
inc
enter
arpl
and
push
sbb
pop
orl
ljmp
and
pop
stc
in
mov
out
dec
sahf
xchg
sub
inc
stos
xor
cmp
dec
dec
or
scas
push
decl
std
daa
xlat
sub
mov
cmp
fistpl
push
sub
jb
lcall
xchg
xchg
sub
repnz
jmp
jecxz
lds
jl
inc
rclb
faddl
test
pop
or
inc
stos
mov
clc
mov
mov
cmp
test
add
aaa
mov
test
inc
jecxz
sbb
faddl
adc
pop
or
pop
ljmp
je
or
adc
shll
and
pusha
cltd
mov
in
das
rcr
adc
aad
adc
push
jmp
lods
pop
xchg
sti
cmpsl
adc
push
js
adc
mov
cltd
movsl
scas
and
jecxz
in
ds
sahf
inc
enter
rcll
ss
mov
or
sub
dec
mov
sub
loop
decl
or
mov
mov
xchg
xchg
and
xor
mov
out
add
mov
xchg
adc
lret
push
mov
inc
pop
js
lcall
inc
sbb
or
sub
pop
mov
push
ljmp
add
push
test
dec
mov
or
push
rol
sbb
add
mov
rorb
subl
jb
adc
mov
bound
or
xor
xor
sub
cmp
mov
sub
mov
xor
jo
call
clc
cmp
jge
in
push
cmp
lock
mov
lds
clc
data16
mov
xor
seto
pop
dec
inc
lods
or
mov
aad
shrb
inc
dec
adc
xchg
arpl
and
jg
out
js
or
mov
jbe
es
and
xlat
aas
push
fiaddl
call
std
aas
jo
clc
fildll
adc
loop
test
inc
gs
pop
jo
fidivrs
rorb
adc
add
repz
sub
ficompl
mov
mov
das
shrb
inc
xor
lcall
cld
jl
mov
cli
rol
int
inc
aad
ss
ljmp
mov
sub
mov
es
stc
fimull
rcr
add
cmp
dec
adc
cmp
xchg
incl
scas
rclb
lcall
int
ret
in
jne
jb
movsl
int
les
mov
movsb
inc
mov
sub
fdivs
test
aad
xchg
jge
test
test
xchg
clc
rorl
out
pop
sbb
in
inc
push
mov
les
adc
xor
add
add
push
rcl
or
mov
int
dec
pop
dec
cli
mov
xor
inc
addr16
and
mov
xchg
or
cmp
fisttps
movsl
jmp
aad
jp
setb
push
xchg
cmp
subb
cmp
mov
sbb
cmp
push
push
xchg
dec
clc
cmc
fildl
movsb
outsb
test
jnp
rorl
push
imul
adc
xchg
inc
jl
xor
xchg
jp
sti
pop
bound
js
xchg
add
ficomps
adc
movsl
mov
fiadds
jno
sbb
inc
mov
in
arpl
push
mov
loope,pt
cmp
faddl
sbb
sub
mov
cmp
and
xor
cmp
adc
not
jb
bound
add
lahf
pcmpeqd
push
push
push
push
mov
gs
in
mov
daa
std
adc
int
mov
js
movsl
je
pop
mov
adc
js
push
mov
mov
jmp
clc
mov
rorb
loope
pop
xchg
test
xor
hlt
jb
jl
pop
test
mov
add
rorl
add
cld
push
fildll
pusha
cmp
fmuls
mov
fcomi
fists
aam
adc
mov
data16
clc
ja
pushf
mov
adc
dec
and
mov
incl
inc
add
add
leave
jo
out
adc
addl
data16
je
and
outsl
cmpsb
and
nop
cmpsl
loop
inc
mov
push
aad
out
and
push
repnz
fbstp
repnz
mov
stc
data16
add
pop
lock
and
ja
inc
fsubr
ficoms
sahf
or
push
push
ds
jne
test
stos
ret
jnp
mov
gs
inc
sarl
inc
jle
hlt
dec
push
mov
stos
in
pop
add
pop
cmp
mov
lods
insl
cs
sub
movsb
mov
movsl
push
jp
add
add
std
data16
fidivl
ja
outsb
mov
pop
lock
arpl
push
and
test
jle
xor
xchg
out
add
mov
idivl
or
cld
mov
and
adc
cld
movsl
stc
mov
and
and
mov
sbb
mov
es
sub
cmpsb
lret
mov
lds
xchg
dec
mov
pop
jp
dec
scas
decl
xor
ja
test
test
adc
cmp
mov
jmp
outsl
inc
repz
icebp
loope
inc
xchg
cli
inc
sahf
jnp
lods
mov
adc
pop
mov
inc
and
fs
pusha
sub
sub
sub
push
subb
dec
call
xlat
fwait
ds
fistpll
and
ret
cld
adc
dec
xchg
pop
psubb
rolb
loop
add
out
push
loop
inc
push
cmp
imul
sub
push
push
jmp
sbb
and
daa
add
dec
push
or
mov
mov
lock
bound
mov
and
sarb
cmpl
push
ds
jg
lock
cmpsb
aam
push
add
outsl
dec
xlat
push
pinsrw
cmpl
xor
adcb
lcall
adc
adc
test
clc
pop
cmpsb
ret
out
xor
inc
rclb
mov
stos
adc
hlt
shrl
test
jg
or
xchg
arpl
xor
mov
outsl
pop
icebp
sub
xchg
inc
mov
hlt
mov
add
popf
out
ret
push
test
sbb
cli
mov
add
into
inc
popf
sub
jo
sbb
push
sub
fucom
xchg
add
shlb
mov
fs
xor
xlat
bound
negl
add
daa
and
ss
pop
scas
or
fwait
push
sub
cli
ret
mov
cmpsb
mov
sub
jno
pop
mov
jmp
push
mov
add
adc
jg
dec
cmp
push
hlt
dec
ljmp
ret
or
jp
xor
sbb
stos
in
fs
loope
stc
dec
call
lods
add
std
or
cli
sbb
and
push
repnz
andb
stos
or
xlat
pop
sbb
cli
cmpl
pop
cmp
jg
mov
cs
add
aas
clc
mov
lea
xchg
inc
jb
dec
in
and
pop
stos
data16
and
adc
lods
add
nop
mov
jb
add
dec
jnp
cli
push
mov
inc
adc
ljmp
dec
jecxz
dec
push
jl
lods
jl
popa
scas
add
push
push
incl
repz
fwait
dec
loop
push
hlt
and
adc
out
jmp
adc
sub
daa
add
stos
dec
mov
add
inc
dec
push
jecxz
mov
jmp
cmpsb
pop
xchg
js
mov
nop
sub
loop
dec
mov
mov
fs
add
mov
out
add
jno
hlt
idivl
scas
andb
ret
aas
cmp
and
stos
inc
cmp
xor
xor
leave
xchg
pop
ljmp
pop
add
js
mov
aad
loopne
outsl
mov
pushf
jmp
mov
cmp
enter
xchg
and
or
pushf
rolb
sub
mov
or
or
lret
push
in
adc
jg
sub
push
jg
push
ret
test
shr
cmc
aas
and
movsl
dec
cld
hlt
ljmp
mov
dec
pop
outsl
add
or
testb
aad
clc
or
mov
adc
dec
leave
iret
mov
es
inc
xchg
cs
pop
subb
mov
loop
fsqrt
cwtl
dec
sahf
clc
and
jne
xchg
mov
mov
mov
add
daa
jnp
lods
pusha
xor
call
or
jg
jmp
adcl
data16
rolb
iret
inc
out
orl
icebp
and
dec
lods
outsl
inc
hlt
data16
inc
jg
sub
or
sbb
xor
clc
arpl
push
push
adc
hlt
jp
fsubs
mov
shlb
jmp
test
or
lods
push
outsb
sbb
aad
cld
pushf
int
stos
adc
nop
lcall
sub
ljmp
popa
jb
fcmovbe
scas
push
push
out
sbb
add
jo
mov
cmp
pop
aam
pop
or
addr16
dec
mov
test
mov
and
fnstenv
mov
push
cmp
jbe
sub
aam
mov
cld
adc
cmc
xor
shrb
jmp
int3
icebp
sbb
stos
pop
pop
das
jne
mov
push
cwtl
andb
into
xchg
mov
mov
jmp
aaa
aaa
fidivl
in
add
xlat
cmp
cmp
dec
push
fildll
clc
mov
adc
les
aas
or
adc
adc
and
aad
lods
lock
cmp
xchg
jbe
adc
es
or
add
cwtl
aas
cmp
xor
fldt
loop
outsl
inc
or
icebp
ljmp
out
jg
imull
jnp
mov
imul
sti
xlat
lcall
mov
sbb
pop
xor
pop
push
pushl
gs
push
rorb
ret
les
ljmp
mov
jo
adc
lock
ffreep
dec
movsl
lods
jb
cmp
xchg
clc
jle
loopne
aaa
test
xchg
pop
cmp
push
iret
cmpsb
adc
orb
das
sar
mov
mov
pop
and
add
iret
decb
pop
or
loopne
mov
adc
mov
adc
push
rcrl
movl
push
flds
imul
imulb
dec
xchg
lea
pop
jo
shlb
aad
test
xor
aam
push
fmull
pop
add
mov
dec
fcoms
xor
ret
sbb
or
mov
mov
cmpsb
lret
adc
outsb
mov
dec
dec
cmp
sbb
push
push
and
out
sti
sbb
repz
add
mov
imul
enter
movsb
push
js
mov
ljmp
pushf
dec
or
pusha
lods
jl
push
scas
ds
pop
sbb
jp
push
jp
mov
mov
adc
adc
scas
jp
mov
pop
mov
dec
idiv
pop
inc
mov
add
jmp
adc
aaa
and
cmp
int3
enter
inc
cmc
lds
jo
rcrl
mov
insb
adc
inc
add
mov
inc
pop
lret
push
mov
fidivl
repnz
inc
xchg
inc
arpl
loopne
push
call
cli
scas
ss
int3
pop
jo
fdivr
cmc
xor
into
dec
jnp
sbb
loopne
xchg
jo
imul
push
test
je
push
add
aaa
rcr
mov
or
lods
mov
gs
ret
lea
leave
cmp
push
call
add
aam
xlat
fadds
sbb
mov
jmp
adc
add
shl
mov
add
in
rolb
out
fnstsw
dec
xor
in
or
adc
cmp
or
inc
or
xor
mov
outsl
in
sub
push
mov
inc
and
mov
icebp
rol
scas
fisttps
cmc
jmp
cli
jb
in
push
add
mov
pop
adc
jg
fimuls
jg
nop
jb
jbe
hlt
adc
enter
push
dec
cmp
cmpsl
sbb
movsl
mov
jg
xchg
sbb
ja
lahf
pop
mov
iret
or
out
rolb
rorl
mov
jp
outsl
js
popa
sub
lcall
push
push
xchg
test
stos
lcall
jo
out
jnp
xchg
push
dec
mov
inc
lods
jge
xchg
mov
repnz
or
xchg
andl
sbbb
int3
into
push
loopne
lea
inc
int
andl
cld
aas
xor
mov
subw
xchg
movsb
out
cmc
js
or
jp
add
ds
mov
lret
mov
fwait
mov
dec
stos
mov
inc
push
dec
repnz
or
adcl
cld
incl
pop
xor
jge
je
in
cmp
rcr
adc
jp
cmp
aad
test
xchg
js
lret
mov
enter
data16
jae
lds
xchg
pop
and
inc
jecxz
mov
and
mov
inc
dec
jb
jl
fs
mov
xchg
sahf
mov
jb
js
push
and
jg
cmc
mov
mov
stos
std
sub
mov
xor
add
add
popf
mov
shll
pop
or
and
push
pop
add
push
test
or
loope
fcoml
aam
xchg
mov
push
mov
mov
js
push
sub
or
imul
hlt
les
or
sub
inc
shlb
mov
adc
ds
jne
push
jmp
push
pop
les
xchg
ljmp
nop
pop
sahf
lock
fs
enter
cmpsl
sub
shll
sbb
in
sub
fadd
cld
test
sub
lock
and
xor
mov
faddl
sbb
subb
fadds
or
pop
sbb
push
sub
inc
or
push
in
stos
sub
mov
pop
int
popf
test
push
jl
adc
add
jl
push
lods
push
cwtl
popa
lahf
mov
lods
and
adc
bound
mov
push
addl
push
lods
xlat
xchg
inc
jl
sub
sbb
sub
mov
hlt
rolb
clc
int3
loopne
cltd
pop
push
cli
mov
sub
pop
inc
dec
subl
stos
adcb
adc
adc
xchg
imul
loopne
push
lds
mov
cs
dec
outsb
mov
push
dec
and
ret
cmp
repnz
loope
inc
or
nop
jo
adc
mov
jge
push
push
or
lods
jg
dec
push
and
imul
test
xchg
lahf
lods
pop
es
in
push
fwait
leave
xchg
adc
sar
mov
inc
inc
int3
lock
pop
jecxz
mov
inc
mov
loop
mov
dec
jmp
rcrb
jbe
add
mov
pop
call
mov
mov
clc
stos
sub
adc
sbb
sub
aam
dec
je
xchg
mov
mov
inc
enter
push
cmp
ljmp
ljmp
push
inc
mov
pop
mov
ljmp
mov
cmp
test
push
dec
xchg
or
dec
and
push
xchg
ret
sbb
xchg
cli
inc
push
addb
lret
sti
shrb
cmc
inc
inc
mov
sbb
push
sub
loope
and
and
xchg
mov
loopne
lock
ljmp
jnp
sub
dec
leave
hlt
sti
outsl
loope
repz
sbb
xor
cli
inc
cmpsb
push
cmpsb
lods
in
pop
xor
adc
sbb
dec
hlt
leave
std
data16
lods
in
or
sarb
or
cli
pusha
push
and
mov
mov
jge
mov
mov
out
rorb
hlt
fidivs
adc
push
outsl
adc
add
stos
hlt
fists
sbb
push
mov
push
sub
loope
loop
jo
jno
loopne
xor
incb
stos
push
add
pusha
hlt
cmp
ljmpw
xchg
bound
mov
decl
xchg
js
mov
jg
lcall
push
inc
or
xchg
mov
inc
xchg
jmp
pop
lret
and
insb
xchg
sbbb
sbb
push
adc
rcr
je
cmp
add
mov
cs
adc
repnz
and
mov
sub
push
icebp
loopne
sub
push
dec
xor
push
sub
call
push
or
xlat
data16
pushf
std
bound
dec
inc
out
fnsave
ret
dec
loope
push
mov
movsb
add
iret
or
or
adc
mov
sahf
lahf
add
push
lods
jo
xor
adc
incl
movsl
xor
andb
cld
lock
pop
jle
xchg
dec
sti
jle
test
orb
sbb
mov
cmp
mov
std
daa
sti
xchg
aam
dec
les
inc
jg
sar
add
fmulp
mov
jmp
nop
decl
je
aas
lock
je
push
xor
rolb
pop
lahf
movl
inc
clc
push
dec
sbb
fisubs
cltd
fcoms
movsb
add
rcrl
js
inc
aaa
inc
cmc
mov
popa
test
fdivrs
mov
jne
xchg
adc
repnz
test
test
sub
cld
lahf
fiaddl
adc
lret
ret
cwtl
mov
imul
inc
rclb
inc
enter
jno
cmc
sbb
rcr
cs
into
mov
pop
fmull
mov
push
jo
out
inc
or
cwtl
mov
and
scas
lret
xor
cli
mov
test
push
outsb
sbb
stc
repnz
add
xchg
aam
call
ror
mov
stc
add
or
test
pop
dec
loop
inc
frstor
addr16
push
nop
or
adc
pop
jge
mov
push
adc
pushf
std
mov
ret
test
fdivrp
and
pop
or
cld
sub
sahf
adcb
pusha
sub
sahf
idivb
stos
cmp
adc
outsl
jb
mov
or
xor
repnz
loopne
in
loop
push
xchg
sbb
fisubrs
std
mov
and
inc
push
test
out
dec
mov
imul
pop
icebp
ret
pop
lods
xchg
xlat
mov
daa
push
mov
xchg
cld
jle
pusha
cmp
stos
push
test
xor
jle
pushf
inc
jne
js
push
or
pusha
or
ret
scas
sbb
in
sahf
cmpsb
fisttps
iret
push
movsl
xchg
inc
cli
ljmp
rolb
push
cmp
jmp
aam
xchg
mov
mov
push
jp
add
mov
inc
les
inc
pop
pop
popa
rcrl
or
sahf
adc
inc
mov
aad
mov
jmp
cli
pop
sbb
xor
adc
fcoms
sub
stc
js
pop
outsl
in
sbb
mov
mov
mov
scas
add
xchg
roll
stos
mov
je
dec
push
movsb
aaa
dec
cmp
imul
inc
mov
stos
mov
jge
adcb
fisttps
lahf
inc
push
sbb
into
xchg
add
ljmp
push
cmp
mov
lret
add
mov
push
add
sub
jl
ret
fwait
inc
inc
jp
outsb
mov
or
jbe
ret
dec
mov
sub
and
repnz
xchg
push
mov
xchg
js
sbb
aaa
mov
dec
mov
mov
inc
rcl
cmp
icebp
push
sar
ss
js
mov
mov
negl
jo
cmpb
jg
call
mov
je
mov
mov
popl
andb
lahf
xchg
mov
mov
scas
arpl
jp
movsb
test
jp
xor
lcall
push
icebp
jno
jmp
add
push
dec
jmp
scas
outsl
sub
cmp
sub
fisttpll
inc
adc
xor
adc
into
push
sub
cmp
mov
pusha
and
std
pop
loopne
int3
jo
scas
pusha
mov
sub
jl
fs
cmpsl
stos
xchg
add
fwait
push
ds
dec
sti
pop
xor
in
xchg
into
fimuls
fidivs
xchg
inc
in
insb
call
mov
ja
movsl
pop
xchg
aaa
push
jae,pn
add
movsb
jno
dec
cmp
jle
int3
pop
rolb
das
shrb
lea
dec
adc
inc
inc
mov
pushf
or
pop
icebp
cmp
ret
mov
cli
je,pt
loop
test
pop
pcmpeqb
rcl
jnp
mov
push
lcall
sar
lret
mov
adc
mov
jo
loopne
or
into
dec
mov
aas
ss
add
sbb
jg
roll
mov
sbb
add
leave
mov
arpl
clc
aam
sarl
cwtl
mov
insl
enter
xor
push
je
dec
inc
inc
lea
jle
sbb
dec
loop
fdivs
push
jg
push
pop
mov
ja
sub
adc
add
or
das
test
cwtl
add
add
add
loope
adc
and
dec
int
inc
incl
cmpsb
lahf
lahf
mov
icebp
dec
sub
push
enter
adc
push
scas
jmp
pop
xor
add
mov
adc
adc
mov
pop
jae
or
incl
ljmp
or
mov
orb
mov
inc
filds
outsl
add
js
mov
cld
sub
mov
lock
cld
mov
push
push
test
addl
cli
pop
inc
ret
mov
pop
sub
popf
mov
cld
cmp
dec
cmp
add
sbb
fisttpl
ficoml
jl
imul
scas
mov
in
add
les
test
sbb
fdivs
cmpsl
into
or
lcall
jbe
stos
loope
mov
popf
movsb
push
adcb
mov
inc
sahf
push
cs
mov
pop
adc
lret
pop
out
add
fs
adc
adc
shrl
into
adc
adc
iret
mov
push
jg
stos
xchg
das
es
or
jmp
xor
and
arpl
js
lds
push
divb
push
dec
repnz
call
enter
pop
je
and
xor
dec
lret
clc
out
addb
loope,pn
xchg
cltd
lahf
xchg
clc
ficoms
jmp
mov
sbb
aas
mov
inc
dec
jo
sub
or
wbinvd
fsin
push
out
stos
dec
roll
mov
loop
loopne
mov
loop
sub
stos
sbb
sbb
cmc
lcall
sbb
mov
aad
mov
stc
dec
outsl
sbb
test
jg
dec
xor
je
push
ss
mov
jae
adc
fcoms
push
cmp
fisttps
push
fmuls
repnz
lret
pcmpgtd
testl
test
push
jl
xlat
mov
fwait
testb
stos
mov
sub
xorl
sub
movb
sbb
les
mov
cwtl
dec
pop
js
sarb
es
je
xchg
pop
rcrl
jmp
mov
icebp
inc
jne
rcrl
dec
jmp
js
sub
sub
pop
and
fbld
lea
stc
push
std
pop
in
lods
stc
aam
cld
mov
xor
test
incl
int
out
xor
add
mov
mov
loop
jl
inc
sbb
in
fdivs
mov
or
call
jb,pn
mov
mov
loopne
mov
and
or
push
push
insb
fwait
sahf
cld
push
jne
mov
les
xchg
push
dec
lods
mov
and
push
ljmp
xorl
les
jl
mov
add
jg
adc
loope
bound
shr
inc
arpl
adc
add
or
in
mov
bound
or
mov
sub
testl
pushf
test
mov
jne
fldt
lods
cltd
ds
out
test
cmc
inc
fisubrs
adc
push
mov
lret
push
inc
scas
sarb
stos
dec
les
xchg
outsb
fs
cmp
sbb
sub
push
aad
pop
push
nop
insb
inc
mov
out
out
dec
test
push
out
outsl
jns
out
mov
inc
cld
test
pusha
mov
mov
add
mov
mov
mov
cmpl
ljmp
mov
mov
cmpl
and
add
mov
es
nop
push
sub
jno
std
mov
mov
ret
push
or
out
fisttpll
scas
pop
jl
roll
gs
inc
mov
push
jge
in
inc
cmpsl
imul
pop
imul
incl
das
ret
push
rcll
mov
iret
xchg
jmp
pop
mov
mov
sbb
dec
shll
sub
insl
ljmp
mulb
clc
mov
jo
cld
xlat
mov
or
movsl
dec
sbb
xor
aam
rcr
cmpsb
mov
push
ljmp
xor
dec
int
ret
mov
adc
clc
and
roll
jg
lods
jb
inc
bound
push
nop
push
mov
dec
push
lcall
sbb
jmp
xchg
dec
inc
andb
sub
movsb
daa
mov
mov
or
xor
in
int
mov
out
push
adc
pop
cs
nop
sbb
mov
je
cmc
dec
sub
sbb
or
push
mov
sub
icebp
jecxz
mov
xchg
lock
dec
test
in
pop
lahf
cmp
movsb
inc
das
or
mov
xchg
lods
add
add
add
push
hlt
aad
adc
add
xlat
mov
sarb
pop
sub
inc
fdivl
pop
test
movsb
ret
test
or
inc
cmpsl
jo
mov
aas
pushf
icebp
xor
push
in
dec
sub
idiv
mov
es
lcall
outsl
add
insl
push
aam
aam
jge
addr16
gs
js
mov
inc
sub
cmpsl
and
pop
inc
xlat
fsubl
insb
insl
ret
jg
es
add
cmp
dec
sub
mov
lods
add
cld
pushl
adc
pop
sbb
mov
ret
xchg
ja
jb
xor
js
xor
inc
ret
clc
lcall
inc
stos
cs
mov
das
or
push
les
mov
pusha
ljmp
les
add
push
fsubrl
and
mov
scas
loopne
add
or
in
adc
test
jl
fmuls
mov
pushl
movsl
mov
test
sub
pop
dec
out
out
outsb
insl
mov
mov
cli
int3
bound
scas
jbe
arpl
mov
test
mov
lcall
lods
adc
jb
int3
adc
cmpsl
xchg
sahf
fistl
and
sbb
les
jg
mul
lods
mov
loopne
scas
mov
outsb
loopne
gs
stc
cmc
lcall
loope
data16
jl
mov
xchg
xchg
rcrb
adc
inc
popf
iret
fldcw
or
or
and
inc
ljmp
or
lret
jl
adc
in
inc
aad
push
xchg
enter
push
xchg
add
pop
xor
and
inc
aam
ljmp
ja
and
mov
xchg
jp
aam
lods
loope
loopne
pop
cmp
mov
push
mov
pop
sbb
ficompl
movsl
arpl
jns
cld
cmp
ds
rolb
arpl
cmc
popa
insl
add
inc
cmpsl
mov
sbb
add
cmp
aam
ja
enter
jmp
cmp
aad
mov
or
xor
add
pop
and
cmpsl
mov
mov
lcall
xor
push
clc
outsl
jmp
aam
or
loopne
dec
loopne
mov
mov
adc
xchg
sbb
mov
xor
test
and
sub
rcll
in
pop
pop
imul
insl
pop
filds
mov
lock
js
jp
sbb
ljmp
out
fadds
das
movsl
sbbl
sub
and
xchg
ja
or
test
dec
push
mov
pop
mov
push
and
push
shrb
add
mov
fidivl
lods
add
js
mov
jns
sub
mov
mov
mov
aam
push
sarb
cld
shlb
ret
cmp
or
or
sti
pop
add
fisubrl
daa
push
inc
scas
jge
mov
cltd
mov
loope
stc
aad
in
push
fdivl
in
push
gs
daa
lahf
jg
fmull
js
in
xor
stos
test
pop
shl
test
dec
adcl
mov
outsb
xor
or
mov
push
mov
ljmp
sub
push
push
dec
xchg
mov
fisubs
xor
inc
push
xchg
ss
cmp
in
arpl
incl
roll
jb
inc
repnz
push
fst
jmp
out
mov
jbe
out
push
xor
push
or
mov
cmc
sbb
sbbb
push
imul
inc
scas
fmuls
mov
and
cmp
adc
outsl
or
pusha
or
js
ret
xchg
hlt
mov
out
movsb
mov
adc
cmp
xlat
cmp
ja
cmpsb
sbb
test
popa
fdivrs
inc
cld
aaa
mulb
sbb
jle
arpl
adc
mov
adc
aas
xor
rorb
pop
imul
fisubrs
add
mov
jge
outsl
js
andl
dec
mov
clc
and
dec
adc
lock
add
sbb
xor
mov
aaa
ret
lock
or
push
sbb
pusha
movsb
jp
sbb
leave
inc
mov
stc
mov
jo
push
dec
xlat
mov
xor
popf
bnd
and
fs
or
pop
mov
xchg
inc
xor
loope
and
adc
cmp
pop
int3
mov
jae
sbb
stos
add
pushf
adc
fsubl
ret
data16
ljmp
cs
push
sarb
inc
mov
push
je
add
ss
test
add
push
mov
inc
xor
je
mov
inc
sbb
sub
ss
shrb
data16
push
ret
movsb
push
neg
pushf
or
popf
cmp
jo
add
test
xchg
mov
jmp
xor
scas
add
scas
sbb
test
sbb
or
insb
cmp
xchg
js
jmp
ss
mov
lock
fs
mov
mov
ljmp
push
push
add
mov
fwait
xor
gs
cmp
out
xor
sysret
xor
movsb
jno
sahf
jle
rclb
cmpsb
xor
jns
mov
push
and
push
loopne,pn
sub
push
test
shl
or
lods
or
inc
mov
leave
adc
sbb
clc
or
loopne
xor
mov
cmp
push
or
icebp
inc
mov
aam
add
add
pusha
ljmp
mov
sub
lock
mov
stos
mov
aad
sbb
loopne
mov
mov
out
sbbb
xor
nop
lock
xor
xor
fdivs
mov
test
orb
aas
dec
sbb
mov
rorl
mov
mov
dec
lret
push
jbe
int3
popf
jle
jecxz
or
or
mov
or
push
jle
aam
sbb
cli
push
mov
fisubrs
dec
mov
pop
cli
ljmp
xchg
and
add
mov
add
or
xchg
stos
jmp
negl
pushf
and
sub
loope
shlb
test
dec
je
cli
mov
add
dec
mov
sahf
fsts
rcrb
cmpsl
push
add
jecxz
sbb
sub
ficomps
jnp
adc
inc
mov
xor
out
push
or
pop
or
fcomps
sbb
mov
imul
mov
aam
rcrb
movsl
and
jg
leave
enter
out
stc
dec
or
movsb
dec
push
aam
cmp
stos
addl
clc
mov
bnd
leave
inc
stos
mov
popa
xchg
js
sahf
mov
dec
addr16
shll
insl
inc
sub
or
outsb
or
push
sub
push
js
xor
add
add
negl
and
pminsw
das
fnop
lret
imul
pop
leave
sarb
dec
in
shlb
loop
inc
pop
jle
mov
aam
test
jmp
cmpsb
mov
es
stc
dec
mov
or
ret
sub
stos
dec
push
mov
adc
xchg
dec
or
mov
adc
fisttpll
pop
cli
inc
sbb
test
rorb
mov
sub
inc
xchg
mov
and
cmp
mov
xchg
xchg
xlat
insl
adc
or
daa
push
add
add
popl
out
sub
mov
pushf
addl
fwait
sbb
sub
mov
into
dec
loop
dec
aas
mov
popf
ret
stos
sub
inc
and
pop
xor
dec
push
push
jno
sarb
loope
fstpl
lcall
xor
pop
or
shrl
inc
inc
mov
sbb
mov
hlt
addb
pushl
inc
repnz
xor
sub
testl
add
mov
dec
xchg
movb
push
sub
sub
fisttps
mov
adc
xchg
adc
aad
push
push
sbb
mov
inc
xchg
std
out
lret
add
in
mov
es
subb
sub
lret
das
push
in
push
cmpsb
icebp
cmp
mov
mov
cli
xchg
adc
mov
imul
dec
aas
mov
cmp
adc
mov
out
sbb
jmp
shll
subb
bound
jno
cmc
adc
hlt
mov
cmp
mov
out
out
add
out
cmpsl
clc
jo
inc
test
sub
adcb
je
mov
cmp
loop
and
xor
scas
div
jecxz
aaa
lock
mov
sub
call
xor
aaa
insb
mov
test
jmp
adc
loop
out
mov
mov
add
mov
xchg
adc
shlb
lea
mov
adc
inc
aaa
lock
inc
out
push
mov
clc
or
shrb
sub
xchg
push
cmc
mov
les
movsb
or
sbb
or
lods
xchg
dec
test
sub
popf
bound
mov
and
out
hlt
lods
add
or
clc
in
and
jecxz
mov
dec
push
lods
add
push
mov
into
popf
js
loop
and
add
or
stos
lret
cmovbe
inc
cmp
mov
add
out
add
daa
push
xor
pop
mov
mov
lret
pop
sub
fmuls
test
sub
lahf
aaa
and
jns
pushf
xor
aaa
sbb
nop
inc
aam
jb
pop
mov
bound
and
push
sti
cltd
sub
mov
mov
dec
xlat
sub
ds
pop
mov
stc
rcr
test
andb
push
lock
jmp
or
lds
add
inc
dec
shrl
mov
fdivrs
icebp
mov
and
pop
sub
add
mov
xor
jecxz
adc
je
or
cmpsb
mov
dec
mov
in
mov
je
jb
add
jb
jo
cmp
inc
and
mov
sub
inc
inc
inc
inc
pop
popa
jne
mov
dec
and
push
jns
incb
add
push
and
inc
cmp
mov
test
sub
sbb
cmp
or
jl
adc
mov
push
cmp
sar
adc
lods
push
test
in
xor
pop
cmp
decb
mov
sub
and
pop
ds
movsb
pop
shrl
adc
mov
mov
xor
push
call
xchg
push
mov
cmp
mov
out
cmp
xchg
lahf
inc
mov
mov
dec
cmc
in
or
mov
pop
mov
pop
ja
jp
mov
loope
dec
sti
sub
call
mov
rolb
jno
nop
clc
jg
jo
test
sbb
cli
adc
pusha
sbb
add
mov
lods
test
xor
pop
shlb
ret
mov
les
inc
xchg
std
jg
mov
lahf
xor
dec
jmp
mov
xchg
add
loop
andl
xor
lahf
jns
push
xchg
push
cmp
inc
and
sub
outsl
mov
xorl
insb
hlt
dec
lods
cmp
dec
lds
mov
jne
xor
lahf
adc
add
push
pop
fbld
pop
jns
stc
adc
add
ja
ret
in
jg
icebp
jg
sbb
push
loope
adc
lock
es
testl
add
test
mov
lock
pop
jne
icebp
lcall
xor
orl
push
je
cmp
adc
fsubl
mov
sub
js
ds
cld
sbb
icebp
out
push
and
mov
out
movsl
cmp
or
pusha
dec
sti
jg
and
insb
cwtl
and
call
jbe
mov
cmc
inc
cmp
mov
and
cmc
ds
mov
xor
ficoml
add
adc
jmp
sub
pop
dec
lods
jo
mov
insb
inc
sbb
loopne
cmpsl
dec
or
rorl
add
xor
xchg
iret
dec
push
mov
xchg
sbb
inc
popl
pop
inc
push
adc
mov
lods
roll
cmp
sbb
sbb
pop
insb
sbb
ja
scas
bound
dec
mov
adc
pop
mov
push
sub
mov
nop
lea
jo
mov
sub
out
subl
pop
jl
lahf
sti
adc
mov
imul
or
mov
dec
adc
rolb
test
adc
mov
cwtl
jb
push
data16
test
int3
pushf
xchg
int3
jae
push
add
dec
cmp
outsb
cli
xlat
out
ljmp
je
pop
mov
xchg
inc
mov
aas
ret
fsubl
pop
xchg
jmp
jp
cmc
pusha
inc
inc
or
add
cwtl
push
jmp
mov
add
mov
sbb
inc
sbb
inc
dec
fmuls
leave
cld
mov
shll
mov
lcall
add
xchg
clc
dec
or
jecxz
add
dec
das
int3
jle
push
push
rolb
mov
cli
lods
movb
popf
jbe
xor
sbb
mov
inc
mov
xor
xchg
xchg
pop
push
xchg
push
xor
jo
dec
shll
mov
rorl
dec
xchg
adc
xchg
xor
dec
adc
fisubrs
int3
xchg
clc
xor
fwait
dec
daa
lds
xchg
add
test
xor
lock
mov
jno
lds
jg
pop
or
shrl
mov
mov
mov
lea
and
pop
push
sub
shufps
push
shlb
nop
imulb
sub
icebp
adc
mov
bound
dec
lret
cli
or
mov
mov
aam
repz
pop
out
jnp
shrb
mov
scas
sbb
mov
and
dec
jae
mov
adc
inc
xlat
lods
jae
sahf
rolb
les
pop
sti
test
fdivp
imul
mov
lahf
mov
inc
cmc
stos
sbb
sbb
imul
jns
inc
mov
rol
mov
pusha
ficoms
cmp
sbb
shl
inc
cld
sub
orl
sub
ffreep
loopne
add
push
clc
sub
or
incb
xchg
cmp
mov
inc
dec
data16
inc
push
mov
inc
in
aad
out
stc
adcl
scas
or
dec
stos
push
addb
lods
xchg
lock
aam
push
xchg
sbb
mov
cmp
insb
mov
les
or
pop
push
stos
dec
mov
dec
inc
mov
adc
mov
test
jbe
sbb
aas
lret
cmp
jno
xor
cld
in
pushf
gs
cmovl
mov
mov
in
pop
sub
mov
fcoms
jp
cmpsl
push
or
outsl
xor
xlat
cmp
xor
mov
push
pop
fdivr
mov
ficompl
pop
push
push
mov
andl
adc
add
push
pusha
pop
pop
push
out
mov
add
fldl
stos
mov
loop
pop
push
inc
inc
in
add
or
imul
xor
mov
lods
decb
into
mov
movl
mov
int3
adc
xor
out
aad
or
dec
xor
xchg
add
stos
dec
xor
add
jo
fs
aas
mov
sub
mov
adc
into
icebp
into
shr
test
shll
movsb
mov
xchg
jb
lea
pop
push
rorb
xchg
das
int
incl
cli
cmp
les
adc
les
int3
int
mov
test
cmp
sbb
push
pushw
movsl
fcomps
mov
jbe
mov
ret
xchg
adc
cli
push
push
add
pop
jne
call
adc
and
cmpsb
ret
andl
mov
xchg
into
sbb
repz
aam
bound
and
mov
les
sub
mov
fwait
loope
mov
mov
push
pop
stc
cli
mov
push
xchg
jp
and
cmc
inc
pop
jbe
sbbl
fiaddl
jecxz
add
push
or
cmp
mov
int3
hlt
gs
xor
ret
ja
loopne
lods
mov
mov
vmovaps
test
cli
inc
or
aam
sahf
xlat
test
inc
leave
or
xor
in
jmp
push
std
xor
scas
cmpsl
scas
dec
mov
incl
aas
push
pop
sbb
aas
aaa
test
xor
fimuls
jp
and
fcom
orb
adc
fisttps
loopne
pusha
addr16
ret
daa
xor
mov
rcr
andl
data16
inc
js
mov
mov
aas
pop
clc
mov
cmp
xchg
xor
and
jmp
mov
lahf
adc
inc
orl
les
loopne
add
repnz
push
xor
aam
push
fs
push
mov
aaa
lock
sub
pushf
lcall
stc
mov
addb
lcall
bound
test
pop
jno
cmp
lods
out
pop
test
adc
pushf
mov
pusha
jmp
es
add
subb
out
pop
jmp
dec
int3
cmp
xchg
gs
rcrb
test
mov
jnp
add
add
jle
jl
inc
adc
fisubrs
xchg
sbbb
pop
mov
xchg
in
jb
cmp
xor
sti
push
adc
or
add
cmc
lret
xchg
cli
loopne
sub
mov
mov
and
adc
jae
or
in
movsb
stos
dec
je
cmp
sbb
jp
adc
mov
inc
fisttpl
jbe
xlat
jp
js
ja
inc
sub
cs
mov
lret
push
sbb
ljmp
xchg
iret
sub
dec
add
jl
jno
cmp
mov
call
or
push
test
or
test
mov
arpl
int3
pop
pop
imul
mov
cs
fcomp
lret
sub
je
popf
xor
push
mov
js
add
mov
stc
mov
mov
nop
test
or
push
jne
inc
xor
push
fidivs
cmp
mov
or
mov
imul
aam
pop
mov
or
ret
xor
lods
cmp
xchg
pop
int3
mov
imul
sbb
sub
and
ds
cmp
mov
fwait
in
sub
mov
inc
dec
mov
dec
jecxz
stos
xor
clc
push
dec
mov
sub
xchg
lock
inc
ret
fmuls
bound
stos
push
adc
add
ljmp
lods
mov
dec
dec
repnz
das
fbld
ror
adc
fdivs
test
pusha
mov
shll
jae
push
push
ds
mov
mov
stos
and
or
lret
or
lock
inc
andb
lcall
inc
decb
dec
fbld
sbb
lds
jecxz
dec
sub
push
hlt
cs
out
stos
and
xchg
stc
cmp
mov
cld
fs
clc
mov
inc
in
roll
add
xor
add
lcall
lcall
adc
lock
cmp
iret
cmp
push
mov
sbb
jbe
or
mov
rclb
pusha
fcom
cmp
sub
mov
jnp
mov
mov
pop
ret
and
bound
or
shlb
adc
subl
adcb
xchg
add
das
inc
movsl
jbe
cs
pop
jb
fcomip
or
repnz
mulb
fnstsw
mov
scas
lock
call
and
out
pop
and
ljmp
dec
loope
pushf
mov
ljmp
adc
jae
out
lock
stc
jns
add
loop
or
cmp
dec
test
pusha
clc
inc
fdivrl
jbe
add
loope
cli
pop
jle
fmull
mov
inc
test
fdivp
pop
and
inc
and
rorb
fwait
mov
rolb
inc
je
inc
mov
jnp
pop
dec
imul
xchg
mov
shlb
cmpsl
adc
adc
loope
into
sbbb
daa
sub
jns
inc
fwait
sbb
add
jbe
pop
jmp
loope
xchg
scas
xchg
imul
les
aam
scas
cmp
jmp
sub
cld
xchg
jg
lods
mov
mov
stos
fisttpll
pushl
mov
add
test
and
add
inc
or
cmpsl
lds
arpl
xchg
adc
xchg
xchg
add
std
and
pop
adc
aas
adc
sub
out
shll
or
push
jo
add
inc
cmpsl
test
or
orl
gs
jg
test
movsb
jno
jb
lahf
test
movd
bound
cli
xchg
push
dec
pop
jae
xchg
es
rorl
xchg
lret
mov
cmp
popa
hlt
lds
loop
fistl
aam
imul
mov
nop
cli
xchg
ss
push
and
imul
out
adc
jl
push
decb
cwtl
call
stos
add
in
jg
pop
cmovl
xor
ljmp
inc
cmp
push
lret
xchg
xchg
data16
das
shrb
dec
out
or
mov
rolb
cld
sub
jecxz
or
dec
cmp
push
shlb
pop
aad
pop
or
add
aas
insb
jb
inc
rcrl
outsl
fcoml
mov
push
lcall
pop
lcall
into
mov
add
dec
cmc
mov
xor
push
decb
add
jp
les
xor
les
add
xchg
aam
decl
mov
outsb
mov
fildl
jmp
add
and
lret
out
pushl
iret
andb
adc
or
jl
cmp
rep
cmp
mov
mov
sahf
pop
or
mov
and
bound
mov
mov
mov
jmp
ja
sbb
leave
in
call
adc
aaa
inc
xchg
push
sbb
lods
lret
dec
cmp
sub
dec
push
dec
fimuls
loop
jp
sub
push
fcmove
mov
cwtl
lahf
sub
or
and
fildll
cld
mov
dec
or
push
outsb
into
mov
mov
xor
dec
push
push
clc
push
aad
pop
or
nop
loopne
scas
xor
jl
pop
hlt
lds
ficoml
cmp
adc
mov
ficoms
adc
and
lods
push
push
daa
jmp
stos
test
add
pop
das
add
push
ljmp
adc
enter
addr16
push
mov
add
sbb
mov
cld
loopne
sub
fiaddl
mov
lock
sub
stos
mov
add
inc
sbb
fcomps
imul
test
in
cltd
mov
shll
es
mov
and
sti
push
pop
sub
cltd
mov
je
movsb
das
sub
xchg
into
aas
daa
push
xchg
xchg
mov
andl
xor
xchg
push
mov
in
or
cmpb
or
jp
push
das
mov
xor
mov
das
mov
int
xlat
lock
aad
and
cmp
adc
aaa
ficompl
or
sbb
rcl
mov
adc
sub
jecxz
insb
jb
inc
or
push
mov
cld
jp
hlt
daa
popf
in
cmp
out
push
dec
mov
dec
sbbb
out
stos
pop
push
sbb
imull
mov
enter
orb
mov
xor
add
decl
fcomps
lahf
xchg
xor
into
sub
add
ret
mov
ss
in
std
lods
jno
inc
lock
aam
aaa
pop
jle
into
xor
mov
pop
popf
lds
and
int
mov
cmp
jp
movsl
stos
xor
cmp
dec
inc
pushf
xor
or
mov
pushf
inc
xor
ret
jg
mov
xor
mov
in
add
sub
inc
jo
das
mov
and
outsb
mov
and
je
xor
mov
mov
stos
fwait
jmp
sahf
movsb
cs
xor
adc
push
out
inc
popl
fmul
pop
xor
xor
jmp
add
mov
fcompl
adc
aam
add
shlw
test
pop
in
js
pop
rolb
add
push
adc
xchg
xchg
or
xlat
push
jo
scas
enter
xchg
pusha
popa
or
call
dec
cmp
outsb
add
push
movl
sub
dec
movsl
dec
inc
shrb
mov
xlat
cltd
xchg
hlt
or
popa
test
add
jg
loope
jge
pushf
ds
icebp
test
popa
test
bound
push
negb
or
push
testb
xor
es
into
cmpsb
or
xchg
inc
andb
call
lret
movd
mov
xor
push
lcall
add
pusha
mov
jmp
jo
test
ljmp
mov
lds
and
cmp
fwait
mov
dec
jmp
adc
sbb
cwtl
cmpsl
xchg
push
adc
adc
cltd
xor
cmp
xchg
gs
sub
test
jl
dec
loope
sbb
fsubr
test
sbb
inc
popa
aad
cmp
enter
sub
popf
sbb
frstor
sub
push
jge
mov
dec
mov
pop
nop
and
mov
pop
std
xchg
mov
or
sbb
cmc
adc
pop
daa
nop
or
add
loopne
hlt
in
jle
and
xchg
mov
loope
rorb
arpl
cmpsb
mov
testl
out
pop
mov
cwtl
push
push
cmc
imul
or
mov
sbb
jle
test
out
cmp
in
inc
fs
lods
cmpsb
inc
pop
aad
fnstcw
testb
sbb
cmp
mov
inc
mov
insl
lahf
inc
in
mov
dec
inc
loopne
mov
outsb
lock
add
and
cmpl
pop
sub
inc
test
data16
push
add
scas
dec
test
sbb
cs
mov
and
sub
hlt
inc
ret
fsubs
mov
test
clc
add
mov
mov
sbb
les
movsb
or
and
ljmp
test
cmc
dec
hlt
jns
int3
fdivl
inc
mov
dec
aam
push
sub
gs
mov
rcrl
jle
sbb
aam
jg
xchg
xor
dec
sbb
out
imul
xchg
lds
adc
mov
stos
jmp
sti
jge
inc
aas
xor
fwait
sbb
cld
lcall
sub
xchg
or
ret
aad
xchg
std
or
lret
jb
pop
call
cli
add
sti
sub
push
push
fsts
out
jmp
testb
rorb
add
cmc
loopne
mov
cltd
daa
ret
in
in
sub
xchg
out
xchg
push
jl
push
dec
sbb
rorb
sub
mov
loop
add
pusha
lret
lock
jg
jae
leave
scas
subb
scas
push
inc
fldt
mov
sub
add
imul
sub
scas
out
jno
adc
push
sbb
jnp
into
enter
adc
dec
icebp
jmp
nop
jge
in
clc
mov
scas
push
pop
adc
jmp
mov
ds
cmp
xchg
insb
sub
pop
jge
adc
xchg
pop
aam
mov
adc
or
fisubl
fcomip
or
lock
xor
mov
outsl
ljmp
pop
mull
pop
rolb
mov
xchg
cmp
mov
bound
test
jnp
add
das
mov
sub
out
scas
lret
dec
jge
jecxz
inc
fistpll
loopne
in
mov
mov
or
inc
fs
or
sub
sub
sub
sub
test
ret
mov
cli
pop
mov
dec
mov
test
sbb
imul
out
pop
or
push
inc
xchg
clc
sbb
inc
in
mov
icebp
pop
add
popa
mov
movsb
lods
push
push
jb
adc
fdivrp
iret
icebp
add
rcrb
jno
xor
sub
xchg
jno
in
cmp
add
aaa
push
arpl
xchg
or
rcll
cmc
popa
mov
xchg
adc
xchg
mov
enter
mov
mov
jle
aaa
jo
xchg
or
adc
dec
rolb
mov
in
nop
and
jmp
insb
nop
imul
sbb
fisubrl
clc
push
push
push
repz
fdivr
rolb
and
fcmovbe
movsl
jmp
fnstenv
stos
mov
mov
and
push
movsb
shll
test
add
xchg
fidivrs
repz
stos
mov
push
jg
inc
mov
je
data16
stos
pushf
lods
movsb
dec
jecxz
xchg
jmp
out
or
and
fisubs
and
test
xchg
sbb
push
fsubrl
xchg
cltd
and
or
arpl
sbb
divl
in
xchg
mov
aas
enter
fadds
mov
es
shlb
fwait
pop
cli
imul
xchg
push
ret
sbb
cmp
loopne
addb
imul
test
mov
pop
clc
shr
stc
adc
add
pop
mov
cltd
loopne
cmp
jmp
negb
les
lea
imul
ds
fistl
mov
ret
bound
lahf
mov
jmp
std
inc
mov
mov
clc
cmpsl
je
cmpsb
sub
cmc
mov
mov
loop
mov
mov
xor
mov
pop
jp
dec
lods
ret
imul
sub
call
loop
lahf
cmp
or
dec
js
sar
xor
subl
loope
cmp
pusha
mov
dec
call
pop
aam
pop
out
rolb
pop
int3
lock
inc
roll
cwtl
out
dec
push
dec
cld
int3
out
shlb
out
mov
pop
fs
and
mov
push
inc
out
repnz
mov
mov
jg
push
loope
fldlg2
mov
cs
jns
outsb
imul
imul
push
lock
test
mov
jns
into
test
clc
or
pop
mov
dec
pop
popa
pop
push
aas
mov
cmp
inc
pop
sbb
add
jp
sub
sbb
adc
jecxz
out
push
dec
jno
pop
lret
cld
dec
xlat
mov
xchg
dec
test
xor
fdivs
enter
cmpsl
ficomps
cmp
bnd
cmpsb
mov
mov
lea
std
push
adc
xchg
pop
fdivrp
sbb
mov
push
imulb
mov
add
jecxz
sarl
push
mov
cmp
inc
sub
test
shll
cmpsb
push
insl
orb
pop
in
adc
mov
cmpb
xor
mov
pop
or
es
xlat
pop
jg
jg
mov
xorb
out
inc
jmp
mov
mov
jnp
cmp
mov
mov
push
fdivr
not
inc
sub
cli
in
decl
dec
mov
xor
adcb
pop
cmpsl
mov
test
clc
push
lcall
popa
fwait
in
aad
mov
cmp
add
cmp
inc
fcoml
add
test
add
lcall
popf
loopne
clc
movsl
push
test
sbb
mov
cwtl
jg
int3
sub
add
int3
cmp
js
sbb
insl
cwtl
jnp
and
fwait
pop
push
or
shlb
xchg
testb
mov
dec
add
fs
cmp
insl
mov
mov
xorb
mov
in
cltd
adc
pop
mov
inc
mov
in
sub
jle
loop
jne
inc
and
pop
jb
int3
and
pop
js
add
xor
lods
int3
cmp
mov
adc
lahf
cmp
mov
mov
jge
test
jmp
xchg
pop
xchg
rcrb
cmpb
call
jmp
xchg
pusha
xor
push
stos
and
cmp
add
ljmp
mov
cmp
xor
pop
adc
stos
faddp
dec
ljmp
push
xor
dec
insb
add
cmp
sub
pop
mov
and
daa
sbb
jle
inc
pusha
rorl
and
mov
mov
int3
dec
loopne
out
icebp
mov
jne
test
mov
inc
icebp
decl
mov
xor
push
mov
scas
sbb
loopne
dec
lret
test
in
aaa
rcrl
loopne
es
sbb
hlt
pop
push
add
stos
push
sub
movsl
push
pop
enter
clc
adc
adc
sbb
mulb
push
adc
mov
stc
mov
push
pop
mov
xchg
decl
add
adc
xor
call
push
pushf
pop
inc
cld
in
mov
data16
push
outsl
adc
push
insb
add
fisubrl
mov
in
adc
dec
in
and
cmp
or
ret
aam
int3
jg
xchg
mov
mov
and
cmp
lcall
aaa
add
andl
adc
jb
pop
mov
stos
test
pmulhuw
inc
aas
fmul
clc
mov
js
jmp
add
push
dec
push
pop
sarl
pop
push
mov
jns
or
pop
cmc
jns
xor
add
and
aam
sbb
mov
add
dec
adc
mov
sbb
mov
mov
xchg
cmpsl
or
dec
ret
ret
shll
repz
dec
push
fistpll
jb
sbb
or
sub
arpl
adc
mov
or
add
dec
push
jl
ja
or
jnp
add
pop
aam
test
jg
xchg
mov
fistpl
mov
push
sbb
or
das
jle
hlt
cmp
jg
or
in
cmp
inc
icebp
push
xor
notb
ficoms
js
xor
cmp
cmp
fcmovnbe
push
inc
pop
ds
cli
das
js
mov
mov
js
cmpsb
jmp
and
pop
cmp
cmp
ss
shrb
scas
mov
push
sti
test
call
out
pop
int3
pop
addb
add
bound
add
enter
pop
xor
jge
in
or
sub
sub
cmp
js
cmc
leave
push
stos
mul
iret
xchg
pushf
jecxz
lcall
dec
sbb
mov
aam
and
xchg
dec
add
xchg
lret
sub
add
loop
cmovg
sti
or
dec
pop
mov
pop
push
out
mov
fsubrs
fwait
lahf
lock
push
roll
mov
out
lods
inc
sub
mov
mov
inc
imul
ss
jne
out
adc
inc
mov
inc
mov
or
fst
leave
loopne
pop
xor
pop
sbb
mov
push
adc
lods
into
xchg
mov
in
or
fistpll
icebp
gs
mov
nop
test
rorb
cmp
pushf
loopne
setg
inc
mov
js
je
inc
aad
mov
rcrl
outsl
repz
clc
mov
sub
inc
inc
or
add
jg
lcall
xor
sbb
aaa
cmpsl
adc
test
xchg
and
rorb
lcall
cli
sub
cmc
fimull
mov
outsl
aad
or
mov
xchg
adc
rep
jno
push
jl
sub
mov
mov
out
gs
adc
les
adcb
test
mov
incl
sub
push
cwtl
add
lret
pop
ss
shll
mov
push
stos
xchg
sbb
mov
xchg
sbb
imull
mov
push
pop
icebp
popf
in
pop
mov
dec
int3
mov
fisttps
add
mov
inc
sbb
test
ret
jl
sbbl
xchg
jp
ds
out
push
push
push
dec
insl
mov
jns
dec
stos
in
xchg
subb
dec
lods
mov
cld
ret
mov
xor
das
call
push
pop
jae
add
sub
adc
das
push
xor
js
call
arpl
adc
sbb
mov
sub
mov
sarb
roll
das
dec
sub
inc
iret
mov
lods
inc
cmc
or
mov
rcrl
adcb
mov
ds
cld
inc
rcrl
pop
fwait
pop
shl
nop
pop
and
or
pusha
inc
xor
inc
sub
cmp
sbb
loopne
pop
adc
cmp
icebp
xor
pusha
sti
adc
imul
adc
cmp
insl
pop
inc
fildl
pop
jne
loop
push
cltd
rclb
and
push
mov
insb
or
in
pushf
into
jbe
outsb
jge
std
jg
push
xor
dec
xor
cld
fwait
inc
cmpsb
push
sbb
xchg
fs
cmp
decl
cmp
pop
or
mov
or
aas
pusha
or
jno
sub
test
fidivl
repz
stos
test
out
mov
ljmp
push
lcall
jo
hlt
test
adc
xorl
cmp
push
pop
fidivs
movsl
pop
lock
mov
xor
adc
data16
in
sbb
jns
or
gs
rorl
les
or
shlb
rclb
test
pop
aas
add
jmp
lea
or
xor
add
fisttps
pop
mov
aam
mov
and
xchg
les
sbb
sub
fdivr
cmp
xor
adc
mov
push
add
repnz
add
rclb
aaa
push
aad
ficoml
inc
pushf
xor
sbb
ljmp
movsb
icebp
clc
xor
xlat
imul
cld
out
mov
movsb
mov
outsl
or
cmp
loop
loopne
push
lret
pop
add
mov
pop
xchg
mov
inc
and
xor
xchg
push
out
test
fadds
scas
stc
hlt
mov
xchg
clc
push
jecxz
fmulp
das
xlat
mov
add
lds
mov
les
jnp
pop
dec
jg
push
push
inc
ret
push
inc
je
add
mov
in
cmp
cmc
daa
fdivrp
sub
pop
pop
mov
aaa
xchg
inc
loop
sbb
ficompl
mov
cli
cltd
inc
mov
test
je
fsubr
in
or
arpl
int3
in
mov
adcl
mov
icebp
add
lea
div
xor
shlb
les
addl
xlat
jmp
push
xor
add
ja
add
cs
hlt
out
pop
mov
pop
inc
push
js
inc
xlat
filds
ret
out
cli
nop
or
shrl
mov
or
mov
jg
cld
dec
ror
or
push
jp
mov
jo
out
cmp
stos
ss
mov
sub
sbb
push
cmpsb
inc
push
sbb
imul
pop
xchg
push
inc
sarb
jo
mov
adc
mov
cmp
mov
xchg
mov
lock
hlt
cli
faddl
sub
adc
cmp
dec
lock
pop
pop
andl
popf
lcall
add
jne
je
enter
aam
scas
fisttpl
dec
call
outsb
dec
sub
lock
adc
adc
insl
bound
mov
push
mov
data16
out
lea
mov
mov
sbb
pusha
lods
push
sbb
pop
jb
sbb
xor
subb
xor
pop
mov
fcomps
mov
mov
fsubl
adc
adc
pop
roll
push
sub
sbb
xchg
insb
xor
xchg
ret
sub
xchg
adc
lock
shl
cwtl
add
push
add
add
sub
sahf
outsb
mov
mov
jp
push
push
ret
push
outsl
mov
das
mov
sbb
add
pop
mov
cmc
test
lcall
mov
frstor
xor
mov
cli
push
pop
aam
insl
pop
fdivrs
and
dec
mov
dec
shl
fcompl
jb
stos
mov
jecxz
aam
aas
fdivrs
xchg
jbe
adc
fiadds
enter
push
loope
dec
testl
call
push
sarl
jmp
shlb
xor
add
push
mov
and
loop
in
icebp
dec
add
sub
lds
add
jge
sub
jb
mov
aam
mov
aam
push
push
jo
ss
test
mov
sbb
arpl
fwait
xor
outsb
cmp
sbb
mov
adc
lcall
xchg
sub
cli
popf
dec
pushf
pop
fmuls
pop
stos
push
and
imul
out
fsubrl
ret
push
inc
mov
inc
rcl
mov
or
push
jg
lds
scas
dec
sbb
icebp
ljmp
or
sub
repnz
lods
aam
fbld
jp
add
test
pop
enter
sbb
mov
add
les
test
jl
mov
out
sub
push
fcomip
or
jle
mov
cs
jp
incl
jno
daa
icebp
push
popa
sub
pop
call
mulb
mov
cmp
pop
mov
jl
in
insb
fsubr
lahf
or
push
xchg
sub
lods
fdivs
mov
and
jp
pop
sub
adc
add
mov
xchg
dec
xchg
nop
jno
lret
in
adc
cmp
jbe
lret
test
sub
loop
mov
test
rorl
mov
loop
jmp
test
mov
or
decl
les
xchg
and
stos
out
in
lcall
cmc
inc
inc
shr
stos
mov
aas
into
jle
lds
rclb
fs
push
xor
aas
push
aas
clc
xor
aas
cmpsb
scas
xorl
call
bound
lcall
int
cmp
pop
jb
nop
add
and
dec
aaa
push
lea
test
sub
popa
inc
cmp
popa
pop
mov
clc
stc
loope
loop
orb
inc
bound
xor
mov
push
pushf
push
fwait
cltd
sar
add
pop
fidivl
jle
pop
mov
aam
jne
cli
aad
sahf
adc
test
icebp
add
cmp
outsb
mov
mov
mov
cmp
xor
pop
rorb
lods
cmc
dec
and
stos
adc
sti
rclb
or
cltd
orb
lods
mov
cwtl
aaa
iret
xchg
push
cld
ret
sbbb
push
push
adc
push
pusha
scas
icebp
inc
int3
push
cmp
rcll
inc
or
xor
mov
inc
rorl
pop
ja
jb
aaa
daa
out
adc
add
jle
cmc
leave
jp
push
in
stc
push
aam
popa
cltd
cltd
lock
lcall
std
sbb
cmp
dec
scas
nop
loopne
adc
and
jl
adc
xor
test
es
adc
cmp
jl
rorb
push
inc
sub
rol
ss
in
push
push
hlt
repnz
scas
out
subb
jnp
mov
ja
add
inc
or
pop
and
ljmp
nop
sbb
xor
sub
or
mov
or
jbe
push
dec
jno
or
insb
pop
and
add
push
sbb
scas
lea
bound
scas
int3
or
filds
sbb
movsb
and
nop
mov
cmp
xchg
jo
lea
mov
lret
daa
das
cmpsl
aad
lds
add
dec
out
mov
sub
lock
out
xchg
add
ja
dec
sbb
into
inc
adc
lock
or
cmp
in
dec
mov
sub
jae
adc
and
fwait
jg,pt
push
push
jno
mov
pop
test
aaa
sbb
test
pop
inc
jae
add
or
lcall
stos
addl
shll
mov
xor
test
dec
test
add
and
sbb
aaa
je
and
movsl
outsb
mov
adc
or
xchg
mov
xor
dec
imul
enter
fs
adc
ret
and
push
sub
or
loopne
add
dec
mov
pop
cld
aam
shll
xor
push
cwtl
mov
push
or
inc
push
aad
outsb
sbb
jbe
push
pop
xlat
jne
jg
fisubrs
adc
in
or
lods
mov
es
inc
fildl
or
pop
ja
dec
and
inc
inc
in
iret
xlat
and
add
icebp
pop
mov
stc
test
dec
hlt
adc
jnp
add
sarb
pop
outsb
loop
sbb
aaa
jne
andb
mov
mov
nop
mov
inc
js
push
lret
mov
mov
nop
mov
sub
mov
ljmp
inc
push
ljmp
xor
fmul
pop
rclb
pop
mov
fdiv
sahf
and
in
fsubs
scas
lock
rolb
adc
ss
dec
popa
pop
push
lret
les
mov
into
or
mov
lcall
push
jo
outsl
dec
inc
fistl
int3
and
inc
sbb
dec
mov
push
mov
and
call
sbb
lods
std
adc
push
pop
cmp
jb
mov
popa
inc
mov
xchg
roll
cmp
cmc
lds
mov
or
pop
jge
or
xchg
ja
and
inc
mov
iret
xor
test
fisttpll
rclb
xor
loope
mov
fsubp
scas
outsl
gs
and
lods
xor
or
cs
data16
sbb
add
push
mov
fs
call
dec
push
cltd
shl
sahf
in
mov
and
xor
add
hlt
fbstp
daa
cmp
and
mov
loopne
popa
movsb
sbb
js
clc
sbb
mov
lret
mov
loope
arpl
cmpsb
testb
fisubl
sarb
sbb
sub
jg
push
movhps
push
int3
sbb
cmp
pop
je
cwtl
ljmp
push
inc
and
nop
cwtl
popa
ja
dec
cmpsb
add
loop
xor
jle
mov
dec
adc
out
xchg
dec
adc
mov
lock
ror
lahf
and
inc
push
std
mov
imul
dec
les
inc
insb
das
xor
push
push
xor
sbb
inc
add
loopne
pop
lret
mov
mov
dec
inc
jns
rol
push
xchg
imul
insl
movb
push
or
hlt
jle
sbb
pusha
mov
loope
in
push
js
ljmp
push
cmp
push
mov
push
sub
loop
aaa
jg
add
in
xor
dec
dec
xchg
pop
adc
or
outsl
mov
mov
leave
hlt
or
aam
outsb
jbe
or
mov
js
mov
cld
lahf
fucomp
or
cmp
jno
sub
adc
sub
mov
jbe
mov
das
or
add
push
pop
push
out
aad
sahf
sbb
pop
icebp
jp
jle
add
stos
xlat
les
mov
inc
and
mov
das
inc
xor
push
jae
mov
xor
into
sahf
and
push
out
sub
rcll
pusha
sub
and
aaa
xchg
jge
jge
cli
xchg
adc
es
lds
outsb
frstor
loopne
jp
outsb
rclb
pop
scas
or
xor
inc
mov
sar
mov
add
cmc
cmp
and
xor
mov
imul
jae
pusha
daa
out
jb
sarb
sbb
ljmp
lcall
or
movsb
push
pop
inc
cmp
jp
push
pop
jae
cld
sub
add
dec
pop
push
es
clc
das
clc
mov
aas
lock
cmp
or
aad
popf
sub
fwait
adc
inc
lcall
cli
or
repnz
add
jmp
imul
sbb
and
popa
mov
outsl
push
hlt
sahf
lock
xchg
roll
xchg
jmp
fcomps
cmp
mov
sbb
push
mov
mov
mov
lds
or
lock
dec
outsb
inc
cmp
lock
gs
adc
stos
aad
daa
adc
mov
jb
inc
adc
pop
sub
xchg
test
icebp
add
push
adc
dec
shrl
lret
mov
out
fwait
outsb
adc
push
and
xchg
faddl
or
inc
add
xor
pop
movb
pop
mov
add
add
test
jno
push
or
lcall
adc
into
icebp
adc
pop
dec
push
jecxz
mov
movb
xchg
mov
and
inc
sti
jle
sbb
xorb
ljmp
mov
sar
sti
test
bound
cld
xchg
jbe
mov
jmp
scas
mov
add
mov
clc
sub
add
inc
push
pop
push
add
test
sbb
shrb
sahf
lcall
fisubrs
and
cmp
mov
pop
and
mov
pop
sub
sbb
bound
or
adc
test
pop
dec
xchg
std
movl
xor
fisubl
dec
cmp
inc
ret
sbbl
adc
push
aam
xor
xchg
mov
sub
or
test
aad
movsl
pop
fmuls
or
scas
mov
ret
cmpsb
xor
push
mov
dec
push
orl
cld
lock
jge
or
ret
jbe
xor
leave
or
loopne
into
sub
pusha
dec
xor
shl
ret
jbe
inc
pop
sub
sub
int3
pop
or
push
movsb
dec
ljmp
sbb
incl
add
pop
je
sbb
mov
sbb
add
aaa
dec
and
inc
shlb
sbb
lds
or
aaa
test
xchg
sub
inc
mov
bound
cmp
outsl
jle
xor
xchg
subb
push
inc
pop
movsb
mov
shrl
test
dec
sbb
push
mov
je
adc
jno
sub
mov
fiaddl
cmpsb
ds
lahf
xlat
jb
lods
cli
jp
clc
xchg
js
subl
pop
dec
filds
jne
sbb
out
jge
clc
mov
aam
adc
js
sub
frstor
hlt
loope
stos
fidivl
hlt
adc
pop
rcrb
je
or
add
cs
std
lcall
fs
test
add
sub
jbe
xor
fistps
cmp
bound
dec
insl
sahf
aad
mov
lock
push
cmp
cmp
jae
xchg
or
in
cmpsb
mov
push
aam
das
fsubrs
jmp
jo
lret
sub
out
nop
cwtl
and
aaa
andl
jbe
ljmp
mov
fldt
cltd
push
inc
jnp
int
mov
jl
adc
mov
jle
cmpsl
cmpsb
xor
mov
xchg
inc
adc
int3
sbb
repz
fidivrl
jmp
lock
push
incl
jp
push
in
mov
mov
and
fmull
sbb
lock
mov
outsl
out
and
in
mov
cmpsl
lea
add
pusha
mov
je
mov
sarb
mov
orb
xorb
pop
icebp
iret
pop
adc
sbb
cwtl
mov
push
pop
mov
daa
andb
data16
sub
sbb
shlb
or
sti
pop
xchg
mov
test
sub
jmp
mov
sub
xor
mov
pop
sti
xchg
and
jp
dec
loopne
push
fdivrs
add
fbstp
lcall
sti
mov
xchg
or
mov
test
shlb
adc
pop
jmp
shr
aad
fwait
pop
in
mov
addl
xor
push
iret
adc
and
mov
and
es
movsb
icebp
xchg
inc
push
cmp
or
mov
sti
push
cmp
jbe
sahf
add
push
out
xor
cmp
adc
pop
pop
pop
fdivs
repnz
sub
jp
or
jo
jnp
fidivrs
and
out
lahf
das
pop
loopne
mov
loop
gs
xchg
je
fnstsw
sbb
call
cmp
sub
es
lcall
bound
lret
inc
xchg
adc
inc
fstps
push
pop
push
and
xor
push
mov
out
and
lock
push
cld
push
test
or
add
sub
mov
out
stos
pusha
std
push
or
cmp
cmp
xchg
adc
dec
jg
mov
jno
adc
sbb
pop
or
pop
das
adc
pop
jb
lods
pusha
add
xchg
jnp
les
cmp
mov
add
or
cmpl
cli
clc
in
pop
or
pop
sar
inc
or
setnp
mov
add
lret
jp
and
adc
testl
add
cmc
dec
ljmp
and
dec
pop
sub
inc
pop
push
push
out
inc
push
ja
cmp
outsl
xor
test
stos
pop
lds
or
loopne
imul
inc
push
lcall
rorb
ljmp
jne
orl
mov
jg
bound
inc
sbb
mov
push
sub
and
ror
dec
loope
add
cmpsb
loop
loopne
cmc
cmp
push
xchg
test
mov
outsl
add
js
push
jne
lret
mov
push
js
les
push
stos
fiadds
sub
and
mov
adc
incl
sbb
cmpsb
movsb
mov
xchg
sbb
stos
dec
das
scas
in
xchg
mov
mov
sbb
fxch
and
les
scas
cmc
aad
pop
fistpll
jo
fsubs
movsb
fstpt
pop
push
mulb
cmp
data16
in
mov
cmp
cs
add
adc
push
loope
mov
inc
inc
inc
and
cmp
and
jnp
iret
adc
mov
arpl
sbb
push
pop
cmpsb
int
sti
fsubl
scas
fnstenv
lret
cld
loope
cmpb
and
xchg
insb
or
cmp
cmpb
std
mov
aaa
add
dec
sarl
jnp
xor
data16
push
data16
sbb
cmpsb
mov
and
xchg
inc
test
cmpsb
int
sbb
test
enter
inc
adc
jmp
sub
xor
fdiv
cmp
mov
pop
cmp
in
push
test
jmp
xchg
pushf
adc
cld
fwait
dec
push
and
daa
rclb
mov
push
fimuls
outsl
xchg
inc
xchg
push
in
aad
stos
sub
xor
stos
fnstcw
out
mov
xchg
sub
hlt
add
xchg
aad
adc
js
orb
in
fists
sbb
cmp
pop
cltd
mov
or
outsl
pop
xchg
inc
cmpsb
and
jbe
push
or
inc
and
cmp
ret
sub
in
scas
xchg
mov
jnp
fadds
cmp
cmp
fstpt
shrb
sbb
arpl
lret
hlt
insl
fisttpl
and
add
test
fidivs
call
cld
cmp
add
xorl
je
pop
sbb
or
mov
add
repnz
xor
jb
mov
xchg
out
nop
ss
sub
jle
test
ljmp
ja
pop
inc
push
mov
nop
mov
in
icebp
mov
shll
int3
fisubrs
cli
dec
add
pop
std
adc
dec
sbb
mov
adc
ja
push
or
push
orb
outsb
jp
adc
mov
das
roll
cmp
mov
sbb
pop
ret
jb
arpl
subl
push
jne
ss
and
add
mov
add
mov
in
jle
pop
clc
leave
pop
fs
iret
ljmp
add
sti
aas
add
mov
je
adc
pop
dec
push
push
dec
jnp
cmp
stos
jle
in
mov
sub
pop
add
popa
arpl
stos
fcoml
inc
je
jne
mov
shl
mov
dec
mov
mov
pop
std
popa
push
pop
call
test
orb
jne
call
inc
mov
push
scas
mov
lock
sbb
mov
stos
mov
mov
dec
push
mov
jle
fimuls
dec
vxorps
mov
sub
sbb
call
int3
add
mov
lock
xor
scas
js
je
jp
jl
xor
jg
add
and
pop
popf
mov
movsl
fs
nop
add
mov
std
je
mov
rclb
pushf
imul
imul
dec
test
rcrb
xchg
imul
out
cmp
push
sbb
jg
mov
push
mul
dec
pop
sbb
mov
daa
and
in
fimuls
js
and
inc
shll
insb
cld
pop
mov
push
fcmovbe
out
sarl
xchg
mov
bound
out
lock
push
or
xor
pop
jno
clc
lea
shr
push
lcall
outsb
inc
iret
xchg
push
fwait
loopne
scas
iret
and
aam
mov
scas
out
add
rorl
ljmp
gs
or
popf
lret
nop
xchg
je
jp
xchg
pop
insb
pop
ljmp
and
add
cld
jmp
popf
fsts
lds
movsb
dec
adc
push
cmp
repnz
adc
or
jecxz
xor
add
fsts
jnp
add
or
cmc
insl
push
cmp
sbb
sbbl
and
mov
loope
repnz
jne
rorb
out
pushf
sarb
cmp
lock
test
in
mov
or
push
movsb
ror
xrelease
cmc
popf
stos
jmp
mov
jmp
jg
push
mov
mov
leave
adc
mov
fidivrs
out
call
add
popa
jg
divps
mov
add
mov
mov
je
test
xor
je
cmp
mov
add
jns
push
mov
or
imul
cmp
push
jg
cmp
or
add
fiadds
push
loope
inc
push
dec
mov
je
pop
aas
mov
sahf
push
mov
fisttps
stos
sub
pop
rolb
loope
mov
call
stc
jo
repz
and
int3
push
inc
ret
sahf
sub
mov
ss
pminsw
cmc
dec
add
sub
lahf
mov
push
xor
loopne
dec
add
int3
lds
and
int3
add
mov
jge
mov
insl
test
sbb
sti
add
adc
add
jae
adc
daa
mov
xchg
and
iret
mov
clc
jb
mov
nop
sahf
push
cltd
clc
shrb
ljmp
cmp
cwtl
mov
dec
or
out
add
call
xchg
and
cld
cmp
fsubs
cmp
mov
push
adc
loopne
adc
xchg
into
cmp
cli
pop
mov
or
inc
orb
jnp
inc
aad
add
sub
sbbl
fildl
xor
mov
xor
cmpsl
mov
add
test
xchg
rcrb
repnz
add
add
inc
je
movl
inc
cmp
and
clc
push
mov
pop
pop
dec
addb
aad
lods
xchg
xor
movsb
mov
mov
imul
inc
jns
cmc
inc
cmpsb
xchg
hlt
out
adc
icebp
xchg
mov
push
xchg
cmp
mov
adc
mov
sub
sub
in
push
sbb
insl
imull
pusha
add
pop
loopne
shll
not
xor
insl
pop
inc
cmp
and
dec
ficompl
xor
push
sarb
lods
adcl
push
mov
call
sbb
orb
mov
into
shll
jl
jle
push
mov
les
pop
push
ss
call
add
aam
xor
mov
stc
push
xorb
lahf
pop
xor
ja
pop
xlat
rolb
aam
ljmp
pop
lret
scas
into
test
jp
pop
adc
adc
insb
call
mov
jo
scas
sub
test
dec
cs
xchg
or
scas
ljmp
and
scas
jo
nop
fs
dec
loopne
js
mov
pop
or
sub
add
sub
jo
scas
clc
lcall
mov
cli
ljmp
jg
rcrl
add
aas
or
pop
rcrb
sbb
add
sar
xchg
inc
loopne
fildll
jns
xchg
aas
sarb
sahf
or
dec
cld
test
sub
out
mov
sarl
pop
dec
pop
rcr
mov
push
jg
cmp
xor
and
scas
cmp
aam
and
jle
and
adc
jge
sbb
xor
push
xor
ljmp
jb
stos
in
ljmp
push
lcall
decl
xor
ret
xor
push
push
in
subb
mov
fisubl
mov
out
adc
xor
hlt
xchg
insl
fldl
stc
push
cmp
nop
dec
rcl
rclb
insb
or
sbb
imulb
cmp
mov
aad
addb
xor
fwait
fwait
stc
icebp
mov
mov
pop
leave
add
clc
cmp
sbb
ret
ja
insl
add
fsubl
fsubrs
add
cmp
je
xor
jmp
shrb
add
aam
sbb
cmc
inc
add
out
pop
sub
xchg
outsl
sub
or
add
cs
pop
cmp
cmp
xchg
xor
mov
stos
insb
inc
int
cmp
and
or
pop
scas
jo
out
scas
or
hlt
jo
pop
adc
xchg
mov
inc
cmp
and
lcall
cmp
push
stos
lods
and
lcall
in
cmpb
mov
and
cltd
mov
mov
fimuls
xchg
adc
in
fimuls
sbb
outsl
add
outsb
je
leave
and
xchg
cmpl
push
fcompl
shlb
loope
clc
aas
mov
jmp
xor
lock
fwait
mov
es
mov
add
cld
sbb
inc
jne
xchg
pusha
repnz
cmp
test
stos
adc
inc
adc
test
aaa
adc
ret
stos
sbb
xor
inc
add
mov
outsl
inc
xor
mov
loope
call
dec
stos
sub
add
sbb
stos
cmp
into
adc
xor
push
jo
mov
jl
iret
ret
xchg
mov
shrb
loop
imul
add
mov
call
subb
ja
and
adc
or
cmp
cmp
in
xor
clc
or
cltd
jmp
movb
or
push
add
pusha
enter
xchg
out
cmpsl
insb
sahf
cvtps2pd
mov
xchg
pop
pop
xchg
sahf
es
jl
ret
negb
stos
pop
push
mov
xor
inc
adc
imul
pop
in
mov
lea
sub
add
xchg
stos
fidivl
mov
test
and
das
cli
decl
mov
aaa
in
xor
popf
dec
imul
push
push
pop
and
insb
aam
ljmp
xlat
movsb
fsubrl
stos
mov
rcrb
push
leave
add
cmpsl
imul
sbb
cmp
mov
lea
jl
adc
or
push
mov
lcall
addb
pop
movsb
sbb
mov
jle
stc
or
or
mov
or
sub
bound
add
xor
filds
clc
mov
mov
xchg
call
rcrb
add
pop
jg
and
push
pusha
pop
inc
in
test
addb
cmp
sub
fsubrs
test
xorl
ret
mov
jmp
neg
jno
pop
lea
push
sbb
adc
insb
dec
inc
and
mov
flds
std
outsl
pop
mov
add
push
shll
adc
icebp
dec
jle
inc
pusha
testb
push
or
fisubs
jecxz
test
clc
and
and
jle
sahf
jns
dec
push
outsb
cmp
int
shlb
push
stos
push
negl
enter
mov
xlat
sbb
lods
pushf
pop
arpl
cmp
mov
push
xor
mov
inc
aaa
cmp
fiadds
nop
insl
sub
jb
repz
sbb
pushl
xor
sub
aaa
pusha
pop
mov
push
sbb
outsl
popf
mov
bound
movsl
arpl
out
and
push
jmp
movsb
sub
outsl
ljmp
sub
shl
mov
push
mov
fmuls
movsb
cmp
and
mov
inc
popa
fdivrs
ret
les
xor
bound
sub
jb
fcoms
pop
jno,pt
xchg
add
cwtl
hlt
lcall
jge
ljmp
inc
mov
nop
jp
jle
adc
inc
daa
call
mov
stos
xchg
aaa
stc
enter
dec
inc
xlat
and
adc
test
repz
es
aaa
pop
mov
jecxz
jno
mov
cli
sub
push
adc
dec
lds
mov
add
adc
test
xchg
shlb
nop
pop
in
pop
in
cld
sub
or
cmp
mov
mov
inc
leave
gs
jb
push
sub
mov
and
pusha
sub
inc
pusha
and
fisubrs
imul
sub
movsl
test
mov
insb
mov
aam
pop
add
stos
loopne
std
add
dec
in
sub
push
sbbb
cmp
jp
cmp
jb
lock
stos
cmpsl
pop
dec
cmpsb
mov
dec
push
xchg
or
lods
push
in
jne
ficoml
icebp
push
sbbb
popa
andb
lret
fsubrs
in
cmpsb
and
pop
xor
mov
or
fcmovnb
cs
jb,pn
ss
ss
cmpsb
push
ffreep
cli
mov
mov
or
mov
push
push
cwtl
and
push
mov
ret
fcomps
sbb
pop
mov
sbb
out
mov
xor
lahf
mov
lock
fistpll
add
repnz
outsb
data16
frstor
icebp
xor
mov
jo
cmp
mov
cltd
cmp
pop
outsl
mov
add
inc
loop
sub
stos
dec
mov
pop
push
or
mov
cld
xchg
fistps
mov
sbb
cs
xor
and
inc
loope
push
popf
pusha
int
lret
out
idiv
inc
jno
or
iret
mov
xor
mov
xchg
shlb
sarb
leave
dec
test
add
std
cli
pop
pop
movsl
data16
in
add
mov
cli
dec
pop
add
cmc
or
xor
mov
arpl
test
pop
fldenv
mov
lock
pop
bound
sbb
sub
sbb
pushl
mov
sbb
adc
push
shlb
mov
fmul
mov
push
nop
hlt
pop
imul
jmp
add
pop
mov
insb
mov
add
pop
sub
pop
out
ds
int3
mov
faddl
sub
mov
mov
push
imul
addr16
pushf
pop
dec
pop
dec
cmp
or
jbe
xchg
xchg
cmpsl
lea
clc
xchg
add
jno
incb
sub
push
mov
aaa
mov
aaa
xchg
mov
je
mov
jne
fists
sahf
inc
jb
imul
in
inc
pop
int3
into
pusha
push
jne
orl
leave
cmp
ret
icebp
scas
clc
je
xchg
ss
dec
das
push
add
inc
add
add
stc
shl
add
xor
sbb
add
push
or
call
sahf
mov
adc
dec
or
orl
stc
jle
and
lods
push
xor
sbb
pop
aam
sbb
ret
ret
push
add
and
add
incl
mov
xorl
xor
pop
pusha
xor
testb
idiv
lcall
in
jo,pt
fwait
outsb
es
dec
repnz
subb
mov
into
cwtl
cmc
cmc
sub
fdivrl
jl
or
push
mov
pop
or
stos
pushf
repz
pop
inc
test
jo
push
xchg
stos
or
push
adc
shrb
cltd
outsb
cmp
mov
cmp
cmpsb
xor
add
adc
inc
test
andb
in
popf
mov
call
pop
or
popf
adcl
pop
shll
inc
mov
test
repz
xchg
movsb
inc
aaa
cs
xorb
cmp
lds
pusha
inc
push
jecxz
iret
pop
repz
scas
sahf
icebp
mov
xchg
push
std
pop
inc
rorl
ds
jmp
inc
adc
sub
test
aad
sbb
cli
repnz
insb
push
jl
das
mov
in
cmp
inc
daa
inc
add
xor
ljmp
iret
jno
xor
xor
mov
sbb
add
sbb
or
and
add
cmp
xor
outsl
xor
dec
ret
lea
enter
fidivs
xchg
inc
inc
adc
xor
data16
das
into
popf
js
cs
mov
push
out
push
rclb
cmp
xor
mov
pop
jb
cmp
jle
mov
lcall
dec
mov
test
mov
pop
xor
cmp
cmpl
movb
sbbb
clc
hlt
mov
ret
mov
xchg
call
cli
or
xchg
cmp
sub
fidivrs
xchg
aaa
jmp
icebp
dec
call
pop
cmp
subb
test
and
add
mov
cmpsl
mov
jne
push
aaa
imul
push
and
push
fsubrs
jmp
push
scas
dec
add
shrb
cltd
lahf
cmpsl
repnz
or
out
fstpl
push
test
add
cmpsb
lret
ret
cld
call
jp
push
sbb
cmp
js
shll
int
pop
in
mov
push
mov
lret
mov
mov
cld
iret
mov
cmp
js
jecxz
push
add
lods
das
dec
adc
arpl
in
rcl
outsb
ficompl
pop
push
movsb
jae
fwait
or
ret
sbb
dec
xchg
push
xor
xor
or
ljmp
or
jecxz
push
jl
ss
dec
xor
fbstp
xor
jecxz
adc
sbb
into
fisubl
add
js
clc
inc
icebp
aas
cmp
adc
fisubrs
icebp
lock
sub
in
dec
sbb
stc
sti
hlt
decl
adc
iret
adc
mov
mov
dec
lock
test
test
sahf
push
es
and
push
out
inc
rcll
mov
mov
pop
pop
and
mov
test
add
nop
pushf
lret
mov
je
les
inc
hlt
push
addr16
add
or
and
add
repz
iret
out
pop
inc
mov
adc
fdivs
ljmp
je
jl
inc
ljmp
stc
jl
orb
ljmp
and
xchg
jle
sub
scas
cmp
incl
add
and
push
cld
or
sbb
idivb
inc
or
mov
imul
int3
lea
fsubs
lret
cmpsl
xor
sub
push
addb
push
es
or
sub
test
and
sbb
test
jno
loope
pusha
fwait
xchg
mov
add
stc
jle
mov
notl
ss
fcomps
and
and
cmp
daa
adc
xor
sahf
scas
xchg
xor
pop
sub
roll
jmp
ret
mov
not
inc
sbb
push
les
ds
ds
jl
pop
int
inc
mov
icebp
dec
sub
cmp
enter
or
add
adc
inc
mov
mov
mov
outsb
mov
adc
hlt
cwtl
xchg
jae
fs
in
incb
lret
ja
insb
xchg
inc
cli
mov
mulb
mov
mov
push
lcall
movsb
js
shll
fimull
and
push
test
add
and
mov
les
loopne
scas
movsb
add
in
mov
xor
dec
in
andb
incl
pop
icebp
jmp
or
inc
dec
loope
mov
cli
push
ja
push
push
mov
jl
sbb
inc
lock
out
push
div
mov
push
aad
arpl
inc
fadd
jno
divb
cmp
push
jo
das
pop
inc
ljmp
shll
pusha
cmp
cmpsb
mov
fildl
in
lcall
aam
dec
mov
adc
jne
xchg
pop
push
shl
mov
sub
inc
cli
daa
movsb
sub
stos
mov
adc
pusha
mov
cwtl
dec
xchg
js
adc
cmp
push
xor
push
add
mov
scas
mov
or
jo
aas
mov
sub
movsb
outsb
lahf
sub
push
push
loope
and
in
jne
inc
testb
cmp
aad
outsb
push
mov
jg
sub
xchg
js
je
mov
jle,pn
xor
rclb
jmp
mov
cmp
dec
fcom
push
jp
dec
dec
ret
mov
jb
aaa
loopne
mov
inc
xchg
push
movsl
sbb
loopne
cli
addr16
pop
sahf
loop
cmp
test
push
add
push
adc
pop
wbinvd
fst
adcb
inc
and
movsb
mov
mov
daa
fmull
in
enter
sbb
das
xchg
mul
aaa
movsb
adc
test
sahf
cwtl
jno
sub
mov
and
popa
lea
call
add
and
mov
es
inc
sub
mov
fistps
nop
rclb
sbb
or
pop
push
mov
pop
xor
out
ss
or
mov
mul
fwait
ss
jecxz
inc
pop
sub
aad
add
jle
leave
xlat
mov
stc
push
xchg
xor
adc
dec
nop
pop
jge
mov
dec
stos
adc
or
xor
ret
mov
shlb
dec
xchg
xchg
stos
clc
cmpsb
mov
lret
adc
inc
and
jnp
sbb
mov
sbb
push
adc
rclb
hlt
mov
icebp
or
notb
mov
stos
stos
adc
stos
mov
ss
dec
out
jo
int
test
fcomps
shrb
xor
adc
outsb
and
pop
mov
jecxz
std
outsl
or
push
jo
push
xchg
add
sbbb
outsl
fdivrs
add
les
jnp
cmc
aas
push
das
fldcw
cmp
inc
adcl
mov
dec
pop
lret
jl
adc
push
sbb
enter
xorb
jp
push
dec
mov
add
es
cmp
inc
sbb
jno
shll
inc
mov
test
int3
lock
lods
and
adc
ss
pop
inc
cmp
adc
add
xor
push
pushf
pop
cld
ds
mov
sbb
fsubl
xchg
add
jmp
int3
lock
pop
lretw
leave
inc
pop
cmp
test
je
mov
mov
dec
pop
addl
mov
rcl
mov
inc
mov
mov
ljmp
mov
jno
pop
iret
mov
and
pusha
add
push
push
popa
out
push
add
dec
les
jge
mov
clc
popl
in
outsb
mov
xchg
mov
xchg
lcall
cmp
loope
xor
popf
push
js
jg
sarb
sti
pop
mov
mov
pop
mov
ss
stos
lods
lods
pop
mov
stos
or
cmc
xchg
cmp
xor
cli
pop
rcrl
dec
aam
out
jecxz
push
lcall
xor
add
push
dec
or
and
test
adc
xchg
mov
and
sbb
or
movb
xlat
adc
and
xor
add
test
cli
or
jp
repnz
inc
pushf
fcomps
lock
cmp
loop
idiv
pop
lds
fsubrl
sbb
lods
sbb
out
jge
inc
adcl
cmpsl
nop
test
jae
mov
movsl
pop
add
cli
insb
decl
imul
cmp
push
movsl
push
loop
filds
rorb
xor
pop
imul
push
jle
pop
fwait
adc
sti
mov
jmp
mov
and
cmp
push
and
mov
imul
jb
clc
out
pop
cmpsb
nop
arpl
neg
rclb
nop
inc
les
jno
push
jg
xor
mov
addb
scas
lds
nop
mov
mov
push
xor
pop
insl
add
add
imul
mov
gs
sti
push
out
clc
pop
dec
rclb
and
jb
cli
sbbb
arpl
cwtl
fmuls
and
or
cs
icebp
or
xchg
fwait
inc
dec
pop
test
sbbb
push
or
ljmp
pop
jg
cmpsl
jbe
incl
sbb
or
adc
cmp
add
ret
in
push
lcall
mov
mov
cmp
sbbl
xchg
or
mov
in
data16
les
sbb
or
jle
mov
push
lods
insl
into
xchg
popa
or
fidivs
sbb
xor
ljmp
arpl
mov
les
mov
cmc
sbb
icebp
jne
push
mov
ficompl
sahf
out
mov
stos
cli
rol
jecxz
cmp
mov
cmp
test
daa
jge
lods
inc
pop
fidivl
push
dec
adc
jp
adc
or
mov
xchg
sbb
ret
sub
out
jp
repnz
loope
jmp
rolb
add
dec
paddw
das
repnz
add
ror
notb
inc
and
lcall
fdivrl
outsl
shlb
cmpsb
jge
or
leave
sbb
lret
scas
es
push
mov
push
es
mov
adc
mov
cmp
adc
popf
dec
ret
push
mov
sar
das
mov
pop
push
shl
xchg
mov
jo
shrb
popf
push
popf
in
pop
ss
inc
decl
push
call
and
pop
sarl
mov
and
and
test
std
or
inc
pusha
push
push
mov
ds
sub
nop
mov
jg
fscale
sub
push
enter
lcall
xchg
sahf
aam
add
clc
out
rorb
scas
mov
inc
cli
jecxz
jg
mov
lret
insl
outsl
mov
jno
lock
inc
push
fmuls
jmp
pushf
sub
and
lods
xchg
pop
mov
iret
adc
push
out
mov
pusha
cli
sub
fbstp
mov
xchg
xchg
dec
sbb
or
xor
inc
filds
xchg
push
inc
lret
js
movsb
xlat
mov
fmull
cmp
jne
movsl
inc
aam
js
jno
or
inc
cld
mov
movsl
fs
fwait
mov
sub
stos
jo
repz
orb
push
test
shlb
mov
idiv
pushf
jge
das
and
jbe
std
js
addr16
mov
hlt
jge
cmpsl
and
sub
jno
mov
lds
loope
pop
pushf
sub
enter
adc
bound
js
lcall
loope
lods
insb
and
sbb
jae
mov
sbb
or
pop
shl
out
int3
ret
mov
push
ds
out
xor
pop
sub
mov
add
rolb
add
repz
sbb
shlb
cmp
add
cltd
push
push
sahf
sub
ljmp
cmp
sbb
shll
aaa
push
inc
int3
add
rcll
xor
pop
ret
xor
sarb
roll
lock
ljmp
push
push
test
hlt
fdivl
push
in
rorb
cltd
push
jbe
mov
test
inc
andb
jmp
mov
fldl
cmpsb
mov
clc
pop
sbb
aam
jo
cmpsl
popl
or
push
push
add
loopne
leave
add
mov
ss
js
test
fs
sbb
inc
xor
iret
inc
mov
xchg
pusha
rclb
test
jmp
push
sub
adc
test
test
sti
roll
pop
ret
xchg
jle
jg
inc
or
shlb
xor
or
mov
and
sahf
mov
lods
pop
push
pop
push
jb
call
arpl
lcall
shll
fstp
fistps
aas
adc
add
cmp
jo
lds
mov
jbe
lcall
aas
cmp
mov
xchg
dec
inc
inc
imul
rcrb
xchg
sbbb
inc
lahf
into
stos
lea
mov
shrl
xchg
mov
scas
xor
subb
dec
stc
cmpsb
test
decl
mov
push
add
andl
and
or
das
test
add
cmp
push
or
add
insb
mov
sahf
iret
adc
mov
pop
inc
insl
dec
pop
inc
fldlg2
aad
pop
hlt
sub
jp
adc
inc
mov
xlat
fbld
mov
or
jns
ret
mov
adc
shlb
push
and
mov
movsb
icebp
push
or
xor
ljmp
les
cmp
or
push
sub
sbb
or
aas
fisubrs
dec
push
pop
gs
roll
or
jno
sbb
pop
lea
popa
xchg
stos
cmpb
aas
mov
cwtl
outsl
inc
sbb
ficompl
sbb
dec
mov
jp
sub
mov
push
repz
cmc
imul
xor
jb
jmp
addl
movsb
rcrb
push
pop
rcl
inc
adc
xor
mov
fsubs
and
jo
adc
xor
pop
cwtl
pop
mov
sub
and
test
mov
push
dec
and
imul
shlb
cmpsb
jg
or
movsb
or
loop
or
dec
pop
scas
lds
mov
fsubs
push
pop
cmp
push
pop
jno
mov
sbb
dec
or
test
mov
mov
test
daa
movsl
shr
mov
mov
mov
loopne
sbb
pop
jge
inc
cmp
mov
xchg
test
cmpsl
xchg
pop
or
in
aas
and
fs
enter
out
push
xchg
xchg
ljmp
mov
repnz
add
stos
mov
mov
mov
cmc
sahf
pop
adcb
dec
bound
pop
adc
mov
data16
dec
mov
ljmp
decl
inc
xor
out
mov
in
enter
add
add
and
rcr
shll
push
sarb
add
loopne
pushf
js
adc
inc
aad
cmpsl
iret
divb
test
pop
cld
xchg
pop
test
mov
lock
mov
popa
add
add
ja
out
rcl
push
lcall
mov
hlt
pushl
mov
loopne
sbbl
dec
mov
lock
in
in
jmp
dec
cmp
daa
stos
testb
in
int
mov
adc
fchs
mov
push
jmp
inc
cmp
bnd
mov
ret
in
pushf
xor
add
mov
pop
dec
popf
scas
sbb
loopne
pop
mov
mov
fcom
jle
loop
jmp
shrl
call
dec
outsb
xor
inc
xchg
pushf
add
in
dec
jno
pop
jo
out
test
fiaddl
ss
mov
in
jno
clc
mov
add
fwait
sub
lret
popf
jno
popa
fadd
rcl
rol
outsl
dec
fiaddl
mov
push
mov
imul
data16
outsl
aam
jns
push
cmpsb
add
adc
mov
test
dec
xlat
fsubrp
jle
mov
mov
and
inc
lahf
subl
dec
shlb
movsb
in
test
adc
hlt
in
push
dec
pop
add
es
shl
sbb
mov
lahf
es
mov
sub
inc
addb
mov
ret
sub
clc
cli
dec
dec
add
fwait
or
loope
jg
jge
loop
scas
test
pop
inc
mov
xor
ss
fwait
lods
pusha
push
test
push
and
pushw
mov
rclb
insl
jle
xor
adc
es
and
ds
or
jecxz
dec
xchg
sub
push
mov
mov
cwtl
add
pushf
loopne
and
aas
dec
cmp
pop
lret
push
imul
pushf
xchg
mov
push
imul
mov
arpl
mov
test
adcb
and
and
mov
adc
sub
dec
int3
pop
jg
lcall
addb
and
xchg
xchg
js
mov
push
and
pusha
mov
push
test
xchg
jo
jge
aaa
mov
lods
jo
xchg
mov
inc
cli
cmpsl
lret
jl
cmpb
movl
mov
pop
pop
pop
mov
mov
test
xchg
stos
test
and
mov
jo
pop
call
lods
sub
ljmp
lcall
ds
mov
scas
pop
bound
shlb
and
negb
popa
xor
mov
jl
insb
cmp
cmpsb
xchg
xor
or
hlt
mov
mov
repnz
lds
adc
or
cli
dec
cltd
cs
add
cmp
jbe
imul
call
mov
sbb
into
mov
pushf
lret
xchg
pop
cmp
adc
es
sbb
sbb
xchg
mov
or
push
cmp
xor
ror
std
inc
inc
or
add
pop
or
loope
js
jecxz
or
test
mov
inc
call
dec
fs
mov
shll
rcrb
repz
dec
jp
mov
addb
push
add
add
dec
shll
popf
sub
bound
cmpsb
push
ret
adc
lcall
loope
sbb
repnz
mov
adc
adcb
test
xor
cltd
xlat
nop
loop
xchg
ret
jo
test
loop
mov
jmp
cmc
mov
pop
lock
jnp
xor
dec
test
hlt
rolb
pusha
adc
cmc
int3
push
int3
and
xor
pusha
push
int3
sub
mov
clc
xchg
mov
and
or
push
lock
pop
sbb
dec
sar
pop
stos
int
jge
cmp
mov
pop
lcall
pop
sbb
imul
sarl
jp
out
sbb
in
mov
pop
add
es
sbb
jle
sub
mov
pop
mov
test
addr16
or
arpl
dec
push
jnp
and
lret
scas
sbb
orb
inc
popa
clc
out
xchg
xorb
add
popl
fcoml
push
das
mov
push
fs
or
mov
shlb
push
jb
add
xchg
push
mov
pusha
sub
mov
daa
and
xor
out
dec
loopne
cs
inc
or
int
fistpll
je
fisttpll
pop
iret
loop
mov
jge
jmp
fs
mov
add
aam
mov
cld
divl
loope
jp
xorl
xchg
add
repnz
sub
std
cmpsb
sarl
das
mov
sub
scas
sbb
jnp
inc
inc
test
mov
hlt
int3
push
fcoms
in
sbb
mov
pop
mov
push
add
arpl
or
push
test
push
lss
ss
mov
aad
and
adc
mov
push
pusha
shl
addb
in
adc
fstl
pop
loopne
cs
and
push
pop
pop
movl
cmp
loopne
and
mov
dec
mov
inc
add
sahf
mov
or
inc
or
loopne
jle
aam
rcrb
adc
cmpl
mov
sarl
dec
es
mov
pop
or
pop
and
sbb
inc
jbe
stos
fs
lret
and
ret
stos
mov
or
jo
xchg
dec
jb
pop
aaa
fwait
push
lock
pop
ret
pop
fcoms
sahf
jmp
pop
out
dec
mov
or
ds
shlb
or
push
sub
inc
movsb
addb
out
push
fcmovne
shlb
fsubrs
iret
adc
sbb
in
mov
les
addl
cli
ljmp
cmpb
push
int
mov
add
or
inc
mov
sti
in
out
icebp
or
jge
mov
test
and
dec
mov
aad
sub
and
imul
dec
or
mov
fiadds
std
pop
xchg
sbb
iret
test
fs
inc
out
addr16
loopne
les
popa
mov
mov
mov
enter
shlb
ss
push
or
mov
and
mov
pop
lahf
fwait
mov
data16
cmp
in
dec
movb
lea
xchg
repz
loope
stos
or
add
pop
push
movsl
pop
mov
jmp
dec
jnp
movswl
xor
lock
jo
jle
cmpsl
xchg
pop
push
daa
test
adc
int3
push
inc
and
mov
popa
mov
pushf
aam
xor
mov
sbb
insl
sbb
pop
push
scas
mov
out
mov
sbb
dec
adc
scas
push
jmp
and
out
aam
sub
and
add
dec
jle
xchg
enter
ss
outsb
sbb
xchg
jecxz
scas
ror
nop
and
leave
mov
outsb
popf
mov
addr16
jnp
sbb
call
mov
shl
add
mov
add
pop
add
push
aam
fisubrl
arpl
es
out
dec
js
cmp
or
add
mov
movl
mov
sbb
sbb
xor
cmp
clc
mov
clc
add
push
push
mov
cmp
pushf
mov
aad
pop
push
xor
js
push
enter
cld
lahf
mov
test
in
inc
sbb
xchg
daa
mov
insb
cmp
lahf
fsubs
sub
dec
aam
ret
shl
xor
mov
xchg
mov
hlt
push
add
mov
jl
fcompl
imul
mov
stos
rorb
or
or
jg
and
and
lahf
fs
cmp
lods
add
cmp
popa
add
pop
xor
dec
inc
cli
adc
rep
cmp
mov
popf
repz
sub
lcall
popf
pop
mov
rolb
and
test
sub
mov
ret
mov
shl
test
fidivl
es
icebp
sbb
pop
fsubl
sub
adc
sub
xor
push
mov
jne
mov
add
cli
call
add
out
xchg
mov
cld
sbb
sbbb
add
scas
pop
mov
lock
inc
in
mov
icebp
or
hlt
mov
stc
and
pop
push
inc
sti
dec
sub
scas
ss
mov
xchg
mov
xchg
mov
push
js
jb
mov
push
int
scas
sub
adc
test
push
push
gs
mov
add
sub
cmp
cmpl
gs
mov
mov
loop
loope
test
lret
push
adc
dec
rcl
dec
dec
xchg
add
inc
fwait
xlat
subb
jo
mov
or
cmpl
or
adc
xchg
aaa
inc
dec
cmc
xor
cltd
add
cwtl
shll
jmp
popf
lahf
adc
dec
sbb
pushf
mov
push
cltd
je
and
cmp
es
mov
dec
rol
or
loop
or
inc
or
xor
jne
adc
rcrl
mov
std
cmp
mov
mov
fmull
ja
enter
jl
jne
das
and
jb
into
out
sub
push
xor
hlt
dec
sbb
out
cmpsb
shll
mov
jb
iret
inc
data16
arpl
test
js
lret
or
dec
addr16
enter
aaa
cwtl
inc
push
cmp
ret
inc
cli
addr16
aad
mov
inc
cmp
push
xorl
jbe
je
test
call
pushf
pop
imul
cmc
mov
dec
lcall
fcoml
mov
lods
sub
jo
xor
bnd
je
lret
add
cmpsb
out
pop
outsb
mov
ss
add
inc
and
mov
sbb
adc
push
test
add
pop
cmpb
nop
sub
sub
dec
cld
repz
shlb
loop
cs
rclb
push
addr16
sahf
js
mov
sub
loopne
pusha
cmp
dec
aas
push
pop
sbb
add
lods
test
cld
filds
repnz
jmpw
icebp
xchg
clc
sbb
loope
pushf
mov
xor
scas
sub
mov
pusha
sub
icebp
imul
test
push
cli
xchg
mov
int3
pop
popa
and
xchg
lcall
loop
mov
mov
rol
mov
mov
pop
push
push
mov
push
cmpsb
adc
xchg
add
or
or
lcall
inc
push
js
mov
test
mov
es
out
sub
outsb
scas
cmpsl
js
pop
ja
cltd
dec
popa
mov
rolb
add
sub
pop
push
pop
xor
mov
rol
mov
ret
loopne
jbe
jmp
cmp
dec
pop
lcall
ja
popf
rcr
dec
xor
in
pop
or
push
lock
cmpsb
lods
cmp
mov
inc
js
mov
xor
mov
sbb
push
push
ds
aas
push
ss
dec
sbb
aas
rcll
sbb
or
sub
jg
loopne
xor
lret
add
in
test
mov
arpl
loop
or
pop
inc
int
hlt
dec
jle
xor
cltd
adc
cmpb
shlb
push
mov
fwait
ds
repz
sahf
rclb
push
ss
jl
test
lahf
rclb
mov
push
and
in
out
inc
or
adc
xchg
test
cld
cmp
jle
repnz
cmp
aad
in
lods
loop
out
push
mov
xchg
mov
sbbl
outsb
adc
fwait
xchg
push
sbb
icebp
in
cli
fists
lods
push
xor
cmp
pushf
xchg
add
mov
mov
adc
inc
xor
and
out
mov
clc
xchg
ljmp
lock
add
out
xor
popa
xchg
add
jbe
xchg
jmp
and
dec
pop
mov
or
bnd
mov
out
push
nop
or
lods
add
int3
js
mov
xadd
pop
xor
lahf
pop
adc
enter
mov
stos
cld
adc
adc
xor
sbb
cld
fcomps
add
jg
lcall
rcrl
in
add
ja
lcall
cmp
movsl
orb
repnz
inc
mov
pop
sub
movb
ds
push
mov
mov
aam
xchg
adc
cli
push
jb
les
pop
pop
orb
in
xchg
rcl
sbbb
ret
pop
or
and
push
mov
sbb
pusha
mov
insl
int
jnp
sbbl
cmp
inc
inc
clc
sti
jo
xor
jb
scas
add
sbb
fistpll
push
sbb
les
enter
mov
test
rcl
adc
push
fiadds
cmc
add
inc
test
mov
loopne
xor
into
or
cld
mov
add
pop
icebp
mov
jge
jle
mov
aam
fistps
adcb
xorb
mov
jl
dec
inc
push
mov
and
inc
fwait
cmpsb
cmp
jecxz
in
and
or
jge
fisttpl
jmp
sbb
inc
push
mov
pop
sbb
fidivl
mov
aaa
cmp
xlat
popa
nop
xchg
mov
arpl
mov
sbb
fdivrs
fwait
xor
ret
push
jae
icebp
fwait
testl
xlat
or
js
adc
dec
inc
scas
clc
adc
imul
andb
pushf
das
push
push
ja
fwait
pop
push
push
lock
push
stos
loop
xor
jmp
mov
mov
adc
je
push
jmp
sub
jge
mov
ljmp
add
les
sbb
push
pop
mov
mov
ficomps
push
jo
dec
sub
in
sbb
cmp
into
repz
lahf
adc
aas
into
sbb
xor
test
outsl
push
cmpsb
push
sbbl
or
insb
mov
test
loopne
mov
jge
or
addr16
fwait
hlt
dec
imulb
mov
sahf
fists
push
ja
icebp
adc
mov
add
or
icebp
push
add
shrb
dec
fwait
mov
test
popl
inc
arpl
or
mov
jo
icebp
lods
jbe
je
enter
or
mov
add
movsb
sub
cmp
push
pop
out
out
sbb
cwtl
rorb
mov
cwtl
mov
outsb
jo
push
adc
xor
push
inc
mov
lahf
mov
push
sub
int
js
in
js
ficoml
pusha
dec
and
movsb
mov
out
dec
push
lcall
mov
shlb
std
je
lock
adc
repz
mov
sbbb
ficomps
dec
mov
dec
and
fidivrs
or
enter
cmp
scas
bound
cmp
jle
fiaddl
mov
mov
xchg
xchg
add
mov
jne
ret
mov
dec
sub
sarb
mov
sti
xor
adc
sbb
scas
push
sbb
push
lcall
mov
testl
mov
movsb
aas
fbstp
xchg
mov
jno
sti
sbb
cli
cmp
pop
or
int3
cmp
mov
mov
adc
jno
les
jbe
mov
pushf
ds
dec
ret
out
mov
mov
push
sub
sub
outsl
movsb
insl
pusha
call
push
inc
xabort
imul
cmp
arpl
push
or
mov
lcallw
fs
jae
daa
iret
adc
pop
jle
jl
mov
aam
add
pcmpeqd
and
sbb
inc
sahf
add
push
pop
sbb
jbe
icebp
stc
cmp
ljmp
stos
jbe
push
xor
ret
mov
outsl
inc
ljmp
add
sub
clts
dec
mov
lea
sub
xlat
jp
add
rolw
sbb
adc
jbe
inc
dec
mov
pop
fimuls
ret
jae
loop
lret
test
lcall
sub
mov
cmpb
mov
fistl
lret
arpl
sti
add
inc
and
add
push
sub
std
or
xlat
jg
call
mov
dec
mov
mov
add
pushf
out
dec
mov
shlb
cmpsb
mov
pop
arpl
cmp
loope
add
mov
push
aas
sub
or
fsts
xchg
test
sub
sbb
sbb
add
jg
lds
push
or
push
les
stc
inc
add
cmc
mov
push
ret
imul
bound
pop
push
popf
outsl
lea
cwtl
mov
daa
xor
sbb
lods
jg
test
rcl
js
or
mov
mov
pop
decl
lock
fnstenv
fadd
aas
out
hlt
out
lods
adc
sti
ds
adc
sar
xlat
jp
inc
and
jmp
movsl
mov
cmp
cvtps2pd
pop
push
loop
xchg
nop
lret
call
sub
fwait
mov
insb
cmp
add
stos
push
es
andb
ret
jb
cwtl
or
sbb
sub
jbe
and
sub
and
mov
sahf
jns
push
data16
inc
lds
shrb
cwtl
dec
mov
imul
lods
dec
fmull
clc
mov
movsb
jp
dec
jp
mov
inc
add
ja
stos
out
xor
and
sarb
sbb
pop
pop
rcrl
jmp
ljmp
mov
jae
sbb
add
test
repnz
cmc
aad
push
lock
cmp
jle
jo
out
shl
jp
pop
or
sarl
jle
sub
cmp
data16
and
sub
cmc
pop
xchg
shl
subl
jl
fbld
jg
add
pop
test
xchg
sbb
adc
ljmp
mov
add
insl
ss
dec
pop
ret
pop
lock
test
cs
sbb
outsl
subb
dec
jae
xor
psrad
imul
mov
call
mov
lock
inc
aad
bound
mov
test
je
cmp
test
lods
mov
push
add
push
push
add
shlb
or
and
jl
mov
pop
xchg
mov
cmp
mov
sbb
mov
add
repz
inc
cmc
mov
push
cs
mov
inc
mov
mov
mov
push
fsubrs
mov
je
lahf
mov
shll
adc
dec
dec
rorb
sbb
mov
loopne
sub
or
xor
cli
pop
add
pop
inc
add
cmpsl
enter
add
ret
jmp
ret
aad
mov
sahf
adc
stos
cwtl
nop
in
pusha
outsb
pop
push
mov
cmp
adc
test
xchg
imul
fldenv
dec
xor
insb
in
sub
fdivrp
pop
or
add
xchg
mov
dec
mov
xorl
push
rol
loope
cmp
aas
fwait
test
fwait
mov
in
or
call
cmp
lock
inc
xor
repnz
xchg
hlt
fincstp
shlb
add
int3
inc
rcrb
mov
repz
loop
adc
movsb
loopne
rorl
hlt
cmp
jo
pop
andl
xchg
xchg
lcall
cli
daa
ret
mov
inc
fsubrp
push
imul
lods
fistl
iret
jmp
dec
mov
nop
inc
movsl
nop
inc
movsb
jns
adc
adc
jp
iret
stc
int3
mov
mov
mov
fisubrs
clc
pop
xchg
enter
fildl
mov
xor
ja
xor
arpl
sahf
and
mov
ret
mov
inc
fdivrp
or
and
jle
and
dec
lret
mov
nop
sub
stos
pushf
les
or
and
pop
cwtl
pop
aaa
sbb
rclb
xchg
push
cld
mov
or
sarl
and
mov
aaa
push
xor
sub
jo
mov
mov
inc
decb
mov
ljmp
adc
lahf
push
xchg
pusha
cs
ror
mov
mov
sti
or
scas
sbb
ret
dec
sar
or
push
mov
jecxz
shr
jns
ljmp
push
dec
shl
inc
gs
pop
pusha
cli
mov
dec
jl
cmp
addr16
jl
or
lods
imul
bound
popa
sub
jne
add
je
push
inc
ja
lahf
inc
pop
iret
mov
inc
clc
inc
pop
sbb
int3
mov
dec
or
outsb
xor
cmpsb
jecxz
mov
mov
xchg
xchg
lcall
mov
xor
addr16
pop
push
outsl
es
jg
jno
enter
push
rorb
sbb
inc
gs
pop
cmp
adcl
jmp
mov
sub
mov
push
mov
bound
cld
loopne
push
and
pop
jmp
push
inc
dec
add
std
mov
or
clc
jmp
stos
mov
stos
push
enter
push
pop
sbb
sbb
aad
adc
call
xchg
sbb
pusha
aas
fwait
or
stos
inc
arpl
pop
xor
aaa
je
xlat
sahf
cmp
push
cmpsl
push
dec
mov
ficompl
pop
imul
add
jecxz
pop
jl
mov
sbb
pushf
data16
jno
sbb
cmc
mov
enter
pop
and
sbb
pop
xchg
setns
xchg
jl
imul
dec
shl
sbb
imull
and
out
test
pop
rcl
aaa
in
sub
sahf
sbb
hlt
jb
lods
pop
pushw
daa
ss
sbb
sub
inc
mov
sbb
mov
mov
adc
in
jg
fchs
mov
mov
push
fld
pop
adc
xor
push
and
jmp
inc
fcoms
add
cmp
into
sub
dec
pushf
pusha
pop
adc
push
dec
sarl
jg
mov
lock
lods
or
sbb
mov
lods
dec
daa
jo
pop
mov
lds
jle
add
cmp
es
add
pop
push
repz
decl
mov
fdivr
test
mov
test
inc
mov
adc
push
mov
adcb
iret
mov
pop
shr
popa
dec
sbb
das
out
pusha
sub
arpl
mov
fnstcw
cmp
xor
xchg
sub
das
rcl
cld
jle
call
movsb
push
or
sbb
or
adc
add
ja
orb
sahf
test
inc
cmp
and
cmp
std
sub
out
add
ds
mov
leave
mov
in
repnz
icebp
je
fstps
xchg
mov
clc
push
mov
or
mov
push
cmp
push
push
mov
add
mov
dec
mov
rclb
jns
xchg
into
fistl
stos
mov
lock
inc
inc
mov
jmp
xor
adc
insb
jge
leave
xor
pop
out
mov
push
sbb
std
stos
sbb
xor
inc
in
pop
cmp
je
sub
ret
pop
cs
in
in
adc
sbb
lcall
cmp
cmpb
jl
test
pop
jp
mov
or
int
jne
ret
imul
sub
jl
mov
mov
lret
movsl
fnstenv
test
clc
ret
cwtl
and
or
xlat
aaa
sub
or
mov
cmp
adc
jne
mov
sub
fsubr
ficompl
cmpsl
cmpb
dec
nop
push
pop
mov
or
jno
aaa
cli
aaa
mov
cwtl
not
jmp
mov
add
imul
shr
loop
add
loope
fidivs
jne
pop
cmpsb
je
sub
push
lahf
ret
idivb
push
sub
push
test
inc
repnz
push
push
dec
lret
xchg
fs
mov
cmp
test
xchg
cmp
jle
std
popa
arpl
into
lods
mov
mov
clc
dec
jp
jo
mov
and
mov
mov
adc
add
jg
push
pop
jb
xchg
test
cli
in
sarl
cld
sub
test
dec
insb
sbb
ds
lock
mov
mov
call
mov
jne
pop
fisubs
xchg
or
sub
jo
scas
mov
aad
inc
and
enter
or
stos
add
xor
pop
ss
push
cmp
js
mov
loopne
cmc
mov
notb
ret
pop
cmp
jo
pop
pop
fwait
sbb
jbe
into
rclb
mov
cmpsb
jecxz
les
push
adc
add
xchg
movl
add
movsl
test
add
pop
jmp
sub
lret
nop
or
xor
inc
out
mov
jmp
sar
mov
push
or
inc
outsl
and
insb
jnp
incl
out
mov
jmp
and
mov
lahf
dec
and
movsb
fs
or
jecxz
pop
cltd
sahf
jo
xchg
jmp
out
into
mov
aad
cmp
sahf
adc
mov
push
xchg
jo
xchg
add
sbb
cld
mov
in
scas
loope
rcll
mov
and
cmp
lods
jecxz
cmp
repz
aad
and
subb
jno
xchg
clc
daa
mov
bound
or
pop
shlb
cmp
and
daa
in
sub
inc
lcall
test
add
cmc
push
push
jbe
mov
mov
jae
add
repnz
push
lret
jb
in
xchg
sub
fwait
add
fbstp
ret
pop
mov
pusha
xchg
xchg
fists
imul
inc
sbb
jecxz
in
inc
fidivrs
sub
jl
stos
cli
push
movsb
cmpsl
sbb
jb
rsm
test
mov
rcrb
inc
aaa
fisubrs
xchg
dec
cltd
mov
and
pop
hlt
push
and
xor
rorb
popf
shlb
inc
jo
lds
aam
mov
mov
inc
pop
sub
lods
xor
or
mov
inc
inc
pop
and
push
add
hlt
popa
mov
imul
adc
jge
fisubl
cmp
out
repnz
cmp
sarb
ss
push
in
add
xchg
and
in
xchg
or
pop
lea
arpl
dec
add
gs
push
adc
cmovl
adc
aam
in
mov
mov
push
pop
mov
pusha
push
stos
ds
add
pop
icebp
jle
add
inc
stos
nop
loop,pt
int3
in
fsubs
xor
lahf
orb
arpl
lcall
cmc
xor
int
sbb
inc
test
dec
or
mov
les
xchg
cmp
loop
mull
pop
mov
push
repnz
orl
sub
std
addb
movsb
mov
js
loop
test
push
mov
mov
fists
xlat
mov
or
xor
loopne
nop
dec
and
jae
imul
and
and
or
fdecstp
pop
ret
loop
out
dec
ds
or
aam
cmpsb
mov
pcmpeqw
push
adc
popf
mov
pop
mov
aad
call
stos
popa
pop
jl
lahf
dec
mov
std
xchg
fwait
mov
hlt
adc
cld
mov
js
mov
push
add
repz
lock
add
insl
sbb
and
inc
fdivl
pop
shlb
and
mov
xchg
sbb
xor
ss
lods
mov
push
adc
mov
push
ss
call
addr16
adc
cld
fists
nop
mov
shll
sbb
imul
fdivrs
test
inc
scas
jecxz
in
xor
repnz
outsb
sbb
fistpll
mov
sub
clc
add
push
or
dec
xchg
fs
xchg
inc
or
lcall
mov
adc
mov
test
adc
cmc
lods
push
push
mov
loope
lock
push
and
popa
cmp
push
inc
inc
shl
icebp
imul
pop
add
add
fs
cmc
stos
mov
out
les
cmpl
stos
adc
cmpsl
and
data16
xor
ds
pop
pop
pop
mov
fs
sbb
sbb
shrb
stc
aaa
arpl
push
sbb
cmp
push
mov
mov
sti
addl
jnp
js
mov
xchg
imul
insl
mov
shlb
decb
xchg
dec
sub
outsl
sbb
into
push
push
push
ds
inc
adc
push
mov
shrb
sbb
add
fisttps
sub
cmp
xor
dec
sbb
ss
or
lods
and
inc
shll
xchg
push
mov
lock
in
push
and
jge
lock
mull
clc
outsb
mov
adc
fscale
mov
push
xchg
jle
xorb
les
sub
adc
clc
xchg
sbb
xor
add
dec
imul
insb
cmc
shlb
cld
sahf
mov
push
adc
push
mov
cmc
fisttpl
int3
or
sub
push
je
movsb
dec
add
xchg
cli
hlt
add
xor
hlt
iret
xchg
pop
lret
out
jbe
loopne
mov
cld
lret
bound
inc
lock
std
xlat
cmpsb
sbb
pop
sti
outsl
je
sbb
scas
mov
out
sub
in
lods
decb
mov
sti
cmpsl
ja
push
mov
mov
jg
addb
cli
xchg
arpl
enter
shrl
mov
inc
stc
xor
call
js
cs
or
subl
outsb
loopne
movsl
mulb
test
cmp
std
inc
lret
shrl
mov
hlt
int3
lahf
and
pop
and
iret
push
fidivrs
jle
dec
xor
lret
notb
xlat
mov
sub
stos
es
hlt
into
and
iret
fsub
xor
dec
sub
stc
fs
pusha
add
std
or
sbb
rcrb
cmp
jg
and
add
mov
call
ljmp
push
out
adc
sahf
inc
add
call
mov
aaa
stc
xchg
adc
sbb
test
mov
add
sub
out
sub
pop
outsl
addr16
xchg
call
repz
mov
push
add
pop
cmp
stc
movsl
pusha
cli
sbb
mov
lock
hlt
adc
mov
ss
rorb
push
xor
and
mov
shrb
xor
cs
cmp
ljmp
mov
mov
loop
mov
sbb
icebp
call
mov
cli
shl
mov
rorb
rcl
inc
loop
out
pop
mov
and
adc
pop
inc
pop
push
les
rcrb
pop
pop
pop
mov
aad
mov
mov
dec
sub
mov
or
adc
mov
fcomps
mov
jbe
add
aad
cmpsb
popa
and
ss
loop
mov
icebp
lahf
jb
lock
std
cli
cmpsb
out
scas
sti
or
xor
loopne
push
xor
or
inc
mov
filds
cmp
and
mov
lahf
or
and
inc
loope
xor
mov
out
out
or
jmp
dec
lret
scas
jnp
xlat
dec
push
add
adc
aas
stc
push
jp
jo
cmpsb
scas
sbb
xor
mov
insb
movl
fildl
xchg
mov
shl
push
sbb
lds
repnz
add
mov
mov
mov
mov
adc
lcall
lods
sbb
insb
inc
pop
ljmp
inc
aaa
xchg
sbb
inc
cli
cmp
xchg
mov
push
push
push
data16
fsubl
hlt
cmpsb
cs
pop
mov
xor
push
push
or
ret
jb
pop
adc
or
sbb
sub
ret
dec
jl
clc
push
mov
lea
push
pusha
inc
movsl
ja
repnz
out
clc
shrl
test
mov
scas
jg
icebp
dec
pop
loopne
mov
or
out
sar
push
jne
mov
or
jo
or
sub
xor
sbb
inc
dec
mov
lock
push
pop
dec
loope
or
clc
into
push
pop
add
mov
sbb
jo
push
testb
inc
or
mov
stos
dec
aaa
loop
call
or
test
push
xchg
dec
mov
sub
push
decb
or
sahf
sbb
sub
adc
push
loopne
push
sbb
cmc
mov
scas
mov
clc
add
push
add
mov
jmp
add
dec
cmp
lods
jno
adc
data16
mov
jge
pushf
je
mov
inc
out
test
push
fisttps
fistl
mov
lahf
add
stos
call
inc
cmp
into
cmp
ficoml
xor
xchg
stos
fcmovbe
movsl
icebp
push
pop
pusha
enter
push
sbb
popf
cmp
andb
push
mov
or
and
mov
add
sub
mov
notl
lds
sbb
rcrb
inc
fiaddl
pop
sbb
fmuls
rcrb
inc
inc
repz
and
jp
mov
mov
lahf
cmpsb
mov
imul
loopne
aad
inc
ja
cli
cmp
testl
mov
repnz
adc
inc
mov
rclb
ljmp
xchg
inc
inc
pop
lds
sub
aaa
ja
mov
jg
loop
testb
rolb
adc
insl
mov
mov
or
xor
cwtl
pop
cmc
pop
mov
mov
repz
out
imul
mov
clc
ret
pop
je
call
aad
out
cli
cmp
push
out
inc
xchg
loope
stos
and
jl
adc
and
jle
pop
inc
cmc
jg
add
jae
mov
rcrl
push
pop
mov
adc
sbb
jmp
icebp
cmpb
adcl
and
jb
ds
xor
sbb
xchg
icebp
fbld
jne
sub
jne
push
lock
idivl
cmpsl
fldlg2
aas
jb
xlat
inc
xchg
jl
pop
push
insl
je
ret
in
aam
cmp
jmp
std
decl
inc
mov
pop
je
push
jle
push
cs
dec
mov
fadds
and
xlat
mov
pop
adc
icebp
lahf
lcall
popf
test
outsb
dec
push
mov
inc
scas
sub
lret
mov
rcrb
xchg
adc
into
test
jge
or
pop
dec
pop
cmp
loope
aas
xchg
mov
fdivrl
fistpl
addb
jno
aad
sub
rclb
lahf
ljmp
inc
stos
shlb
sti
fs
mov
aad
incb
add
std
mov
mov
add
sub
mov
pop
and
in
lea
popa
lcall
int3
mov
popl
xchg
es
lcall
arpl
sbb
pop
jne
mov
fsub
adc
push
or
cld
cmpsl
push
pusha
add
lret
dec
repnz
lock
pcmpeqb
cltd
push
aaa
or
cmp
xchg
rol
add
lods
sub
add
sbb
fbld
cli
pushl
int3
fidivrl
or
out
mov
rolb
stos
insb
popf
xchg
xor
rorb
jns
add
mov
dec
xor
push
inc
pop
sarl
add
scas
icebp
adc
jo
sbbl
lods
mov
les
mov
shrl
dec
mov
clc
mov
sub
mov
cmp
sbb
ja
movsl
sahf
pop
in
lret
xchg
sahf
mov
data16
push
icebp
jb
int3
pusha
nop
mov
mov
ficompl
out
inc
fadds
mov
cld
mov
cld
loopne
xor
shl
movsl
int
mov
xchg
mov
ret
daa
aam
push
xor
xchg
cmp
shrl
lds
mov
sub
scas
cld
mov
mov
stos
or
cmp
jle
data16
jo
hlt
cmp
xlat
les
fs
shr
gs
jo
push
punpcklbw
xchg
sub
lods
repz
xor
xor
mov
add
pop
pop
sbb
call
cmpsl
pop
jb
das
fadds
sbb
add
insb
mov
mov
hlt
mov
mov
xchg
pop
or
jecxz
scas
lods
xor
inc
ret
pusha
mov
call
jle
aam
xor
or
xchg
iret
mov
adc
icebp
push
pop
jae
mov
fs
clc
data16
stos
xor
pop
out
push
push
jge
push
and
ret
rolb
mov
jle
xor
mov
stos
imul
and
popf
add
xor
out
pop
in
movsl
mov
pop
addr16
mov
cwtl
inc
add
pop
and
xchg
jle
loope
adc
jge
push
pop
dec
xchg
jge
push
lcall
sarl
repnz
push
insb
pop
cmp
pop
test
sub
je
and
cmpsb
jmp
orl
pop
and
adc
pop
xchg
lahf
test
rep
xchg
dec
popf
cmpsb
push
lods
push
sub
decl
inc
mov
dec
inc
or
or
dec
xchg
mov
rclb
mov
or
je
push
sub
push
push
mov
ret
xor
push
cli
push
xchg
popf
insb
loop
int3
iret
add
pop
sar
mov
jl
es
rol
xchg
loopne
mov
jno
dec
and
add
test
cmp
and
rorb
jno
mov
push
icebp
in
gs
pop
in
mov
jb
dec
dec
push
notl
dec
das
sub
stos
dec
sbb
lods
out
addr16
pop
das
xchg
jo
jno
and
add
movsl
pop
ss
pop
sbb
lahf
xor
mov
loopne
pop
mov
mov
mov
cwtl
mov
cmp
inc
mov
ficoms
mov
stos
cmp
icebp
repnz
xor
imul
sbb
or
adc
in
add
mov
test
lds
mov
add
and
push
test
sbb
dec
stos
push
push
xor
cmp
insl
sbb
sar
gs
pusha
std
add
ror
or
test
mov
pop
jp
insl
testb
icebp
in
nop
push
add
sbb
dec
into
es
cli
ljmp
mov
mov
pop
push
inc
stc
xor
push
mov
shrl
sysenter
in
imul
lea
sbb
mov
cwtl
lock
xchg
jns
push
bound
data16
arpl
fwait
adc
xor
cmpsb
in
call
add
or
adc
popl
icebp
xor
cli
inc
jmp
cmpsl
fcomp
adc
sbb
dec
ds
fsubrs
fidivrs
and
cmp
push
cwtl
test
push
adc
dec
xchg
sub
arpl
loopne
mov
lret
mov
dec
push
aaa
fildll
pop
pop
rcl
or
push
inc
and
cs
jp
scas
dec
mov
xor
pusha
add
push
mov
rol
dec
movsb
flds
xlat
ljmp
int
out
jb
hlt
int3
add
add
lock
dec
sbb
pop
test
mov
out
out
dec
repnz
pop
adc
outsl
daa
pop
mov
movb
fldt
sbb
out
and
scas
sub
adc
sbb
arpl
fwait
icebp
jg
adc
cmpsb
negb
or
mov
xchg
decb
jp
adc
incl
cs
fidivl
fwait
iret
cli
lods
scas
xchg
bound
or
add
scas
inc
icebp
mov
in
dec
ja
mov
scas
jb
enter
and
inc
adc
xchg
gs
stos
jle
jmp
sti
xor
mov
mov
add
add
mov
enter
andb
mov
xchg
or
jno
mov
sbbb
cmpsb
in
mov
pop
push
pop
jno
pop
stc
adc
jl
jecxz
jle
lock
dec
fucomip
inc
popw
jno
jp
push
dec
push
or
pushf
push
clc
loopne
mov
test
dec
push
add
icebp
scas
push
jno
pop
cmpb
xchg
sub
or
and
leave
cmpb
mov
je
dec
mov
or
push
xor
jnp
scas
sbb
or
subb
sub
xor
test
es
fbstp
jl
jnp
sbb
mov
push
push
mov
xchg
lcall
and
sub
pop
adc
push
jne
inc
mov
sub
push
fidivs
jl
and
sub
dec
and
pop
jo
int3
pop
add
pop
adc
push
dec
cmc
pushf
jge
inc
push
inc
xchg
pop
fcompl
add
sbb
arpl
xor
sub
shlb
cmp
dec
paddd
push
sub
mov
aad
pop
loopne
pusha
inc
mov
adc
movsb
mov
jmpw
xlat
xor
lahf
bound
repnz
cs
xchg
sbb
scas
push
adc
inc
add
inc
pusha
inc
jns
xchg
nop
lea
push
out
fidivrs
in
rcl
out
adc
fnsave
aam
lods
test
aaa
inc
or
jp
xor
mov
adc
pop
add
sbb
sarb
mov
adc
pop
divl
dec
adc
dec
pop
sarl
ret
mov
pop
or
cmp
fisttpll
jae
push
test
jmp
mov
cs
cmp
mov
jnp
dec
push
push
arpl
adc
inc
aas
repnz
aad
pop
loopne
add
dec
mov
xor
dec
adc
repnz
dec
stc
push
pop
pop
mov
pop
pop
and
ds
loope
repnz
jge
pop
cli
pop
outsb
fwait
mov
ret
test
mov
cld
cmpb
ja
push
test
cld
mov
inc
das
dec
paddq
out
nop
inc
js
outsb
adc
out
mull
mov
add
divl
xchg
mov
fstps
sub
std
push
mov
cwtl
ds
mov
and
pop
shlb
push
xchg
aaa
scas
mov
mov
jo
jp
add
add
lds
push
inc
xchg
shrl
mov
fwait
sub
xor
dec
push
pop
inc
lret
addr16
imul
cwtl
ret
sti
cmp
imul
add
sbb
shrb
rclb
sub
mov
mov
dec
adc
pushf
int
sub
or
inc
push
mov
lret
out
pop
adc
push
push
or
add
fildll
int3
in
adc
dec
adc
sbb
lret
or
dec
sub
mov
pushf
arpl
sahf
jge
mov
cmp
iret
insb
fcomps
cmpsl
jl
testl
jbe
lock
cmp
mov
les
ret
mov
cwtl
mov
out
into
cmpsb
clc
js
popf
add
loop
sub
xor
lcall
pop
cltd
call
sbb
cmpsl
iret
dec
sahf
jnp
repz
adcl
stos
adc
jge
bound
test
bound
mov
push
cs
rcl
bnd
fstp
xchg
mov
push
rorb
ret
dec
outsb
xor
push
sub
adc
mov
in
inc
bound
mov
pop
aaa
popa
shl
rcl
jmp
xchg
call
mov
iret
jnp
mov
cmp
mov
fsts
out
movl
rorl
mov
stos
mov
xsha256
cmpsb
push
ret
push
pop
xchg
out
out
and
mov
jecxz
sarl
jp
lcall
jns
arpl
pop
js
or
lock
jb
ds
jo
clc
icebp
jg
add
jno
xchg
adc
mov
mov
pop
mov
int
ljmp
test
cmp
insl
repnz
test
add
outsb
mov
nop
imul
push
and
pop
inc
jecxz
push
mov
iret
mov
lahf
cs
lahf
push
push
or
movq
sahf
inc
cmp
or
rcrb
lret
pop
hlt
cmp
test
lea
mov
xchg
push
jbe
cs
jle
mov
xor
mov
ds
add
mov
mov
sahf
xchg
bnd
xchg
scas
mov
lcall
mov
ud0
lahf
fmull
or
mov
cld
nop
sub
ds
dec
mov
mov
lldt
aas
sbb
fldcw
sub
imul
dec
repz
push
fidivrs
push
xchg
shlb
pushf
lret
jge
push
pushl
add
xor
ret
ljmp
fmuls
loopne
rcll
bound
ficoml
scas
sbb
push
sbb
mov
sub
sub
sbb
gs
jo
into
fdivr
imul
adc
and
add
mov
test
or
insb
xor
cmpsb
in
clc
cmc
mov
pop
lretw
leave
sub
popf
mov
mov
icebp
mov
and
pop
lret
pop
mov
pop
in
and
faddl
cs
adc
stos
inc
cltd
cmp
cmpsb
test
shrl
sub
mov
cwtl
mov
pop
sbb
mov
mov
inc
lds
and
ret
rcrw
sbb
aam
sub
loopne
sub
fiaddl
cmp
pop
ss
dec
or
xchg
lcall
xor
and
icebp
in
fs
arpl
fistl
das
lcall
cmpb
cmpsb
push
inc
mov
mov
sahf
pop
cmp
jge
rorb
les
aaa
cltd
mov
in
jb
fistpll
sub
add
sbb
jno
push
push
push
repz
push
addr16
mov
add
inc
cltd
push
push
lock
sub
mov
sub
in
or
pop
lret
fs
popa
and
or
xchg
in
lods
inc
dec
push
or
pop
in
push
mov
jo
std
pop
ret
inc
dec
jg
add
mov
repz
testb
adcb
jecxz
mov
repnz
dec
push
sub
ss
and
and
xlat
lahf
loop
pop
adc
inc
sub
test
mov
mov
movl
aaa
sub
pop
in
int
adc
dec
sar
mov
or
xor
jmp
push
push
jmp
jb
in
aad
cld
pop
mov
inc
sbb
cmp
mov
mov
lahf
cmpsb
rol
ret
xchg
mov
ret
popf
dec
push
sti
das
or
pop
lods
jb
or
inc
nop
rorl
clc
ljmp
dec
leave
pop
push
in
sub
mov
rcrb
jnp
cld
cmp
jg
enter
in
std
popa
add
or
in
add
ficoms
testb
sub
ret
cmp
stos
movsb
test
xchg
cmpsb
xor
jo
mov
nop
test
hlt
adc
pshufw
cmp
in
ret
inc
loope
addr16
mov
in
mov
mov
push
aas
imul
push
into
jge
xchg
and
int3
and
pusha
adc
sarl
inc
push
adc
mov
pop
sbb
lea
cmpsl
iret
push
xchg
ljmp
movsb
rclb
jae
jg
lods
jle
push
mov
and
xchg
or
or
and
or
pop
nop
dec
cli
jg
pop
imul
and
mov
jp
push
cmp
mov
mov
inc
lahf
adc
call
or
fmuls
pop
jb
imulb
pushf
or
inc
sub
rcr
hlt
gs
js
ret
std
xor
call
push
push
xor
pop
call
clc
sbb
mov
arpl
sti
ljmp
xchg
std
in
int3
jbe
stc
add
inc
imul
icebp
push
mov
jnp
mov
jmp
pop
pop
sar
mov
nop
sub
mov
call
pop
push
outsl
rolb
lods
add
outsl
inc
mov
int
movlps
adc
xchg
inc
xor
call
or
pop
or
push
xchg
movsl
movsb
inc
and
add
fnstcw
xchg
push
repz
sbb
pop
das
push
mov
data16
cmp
ret
dec
mov
mov
sbb
push
js
sbb
dec
mov
stos
jbe
xchg
mov
adc
inc
jecxz
je
dec
add
xchg
add
push
mov
mov
push
xorb
adc
das
and
push
add
push
xlat
mov
jns
sbb
enter
std
nop
xchg
xor
xor
jnp
mov
pop
rorl
pushf
mov
mov
push
inc
aaa
sti
sub
inc
jle
push
dec
out
aad
cmp
repz
pop
insl
push
mov
call
outsl
fiaddl
loopne
out
roll
daa
lds
xchg
gs
and
pop
add
adc
push
add
xchg
xchg
in
aaa
call
out
int
xor
cmp
aam
jb
sbb
mov
add
xor
ret
test
shll
inc
pop
xchg
or
jmp
push
clc
leave
js
inc
je
mov
sub
xchg
pop
pop
or
es
mov
sbb
test
ret
leave
rolb
lods
xchg
push
push
sbb
jb
outsl
ja
ret
mov
dec
cmova
add
adc
cmp
xchg
not
or
add
popf
dec
push
cld
out
jbe
xchg
dec
xchg
clc
push
cld
adc
cwtl
xor
push
aam
mov
jl
jne
fiadds
pop
dec
cmpsb
jecxz
roll
pop
dec
add
out
cwtl
loope
or
addr16
cli
outsl
loopne
jle
xchg
mov
mov
adc
fiaddl
mov
lea
sti
cmp
cmp
cmp
mov
jb
jo
cmp
pop
sbb
mov
cs
and
stos
sar
sar
incl
or
xorb
inc
cmc
push
jnp
adc
xchg
movsb
and
mov
into
pushf
sarb
lds
mov
jl
stos
jb
jno
das
add
and
add
popf
sbbl
icebp
pop
push
mov
add
loope
out
sti
mov
mov
jae
inc
mov
mov
push
lock
sbb
cmp
sbb
jb
loope
jo
sub
sub
sti
fsubs
clc
daa
mov
lret
dec
mov
mov
daa
pop
call
mov
xchg
cmc
and
and
dec
movsb
cld
stc
add
aam
roll
jl
push
mov
in
or
sarb
pop
jle
xchg
or
sbb
dec
stos
stos
xor
test
loopne
in
push
push
mov
dec
imul
jp
mov
int3
pop
xchg
test
inc
dec
daa
stos
xor
aam
mov
ret
mov
jecxz
cmp
mov
ds
jb
test
mov
jne
xor
shll
inc
mov
pop
or
outsb
and
cmc
mov
filds
lahf
hlt
add
xlat
pop
xchg
dec
aad
or
dec
or
sbb
or
iret
aas
cmc
jecxz
or
test
sbb
shll
pop
add
testb
out
addr16
aad
lock
push
push
pushf
lcall
inc
push
or
and
adcb
sahf
outsb
sub
xchg
test
and
or
testb
xchg
sbb
int3
xor
movsb
ss
clc
mov
sbb
add
push
subb
dec
mov
sub
dec
push
sbb
inc
add
lcall
pusha
xor
mov
js
inc
sbb
ret
in
inc
jge
sub
fiadds
cmp
js
test
aaa
orb
addl
inc
in
mov
shrb
mov
sbb
mov
sbbl
test
ret
jmp
bound
adc
sahf
scas
push
mov
daa
insb
and
push
pop
or
hlt
and
and
mov
jb
lock
movb
addb
mov
mov
cmp
push
push
and
cli
iret
into
inc
pusha
les
test
decl
adc
xor
push
pop
sti
jo
push
mov
adc
imul
addb
pop
imul
loop
pop
jnp
add
dec
scas
iret
js
cmp
shlb
or
cmp
cmp
and
imul
icebp
dec
xchg
or
push
adc
lcall
cmp
int
pop
gs
lret
inc
sbb
add
cmpsl
sbb
jnp
cmpsb
pop
addb
call
push
fwait
ret
dec
in
popa
fidivrl
cld
push
call
mov
mov
cmp
icebp
in
xorb
push
in
outsl
pop
fstpt
sub
stc
adcl
add
std
xchg
xor
clc
sub
cltd
and
imul
adc
fwait
dec
cli
pop
xor
je
pop
scas
nop
fidivrs
and
loopne
sub
sahf
loop
lds
inc
xchg
mov
adc
loopne
cmp
scas
scas
jl
mov
inc
loope
leave
and
push
lcall
mov
cmp
daa
data16
xchg
pusha
stos
mov
mov
stos
test
loop
push
jl
repnz
ljmp
stos
loop
loopne
cld
inc
xor
cmp
lods
bound
cmp
cltd
pop
pop
push
lods
mov
stos
mov
shrl
pop
adc
add
jg
jl
sub
inc
add
adc
pop
adc
scas
add
aaa
mov
dec
sbb
gs
hlt
sarl
jg
add
pop
add
mov
mov
scas
jno
and
out
jge
loope
shrb
loopne
push
inc
incb
pop
jns
cmpsb
cmc
decl
hlt
inc
sbb
sub
mov
das
outsb
in
ljmp
sbb
mov
xor
rclb
ret
mov
clc
and
pop
xchg
or
loope
jge
jg
xchg
xor
mov
icebp
mov
imul
or
xchg
cwtl
inc
mov
sub
test
add
outsb
nop
jle
mov
hlt
add
out
mov
pusha
inc
repnz
shl
scas
mov
loop
and
fsubl
sub
xchg
push
xor
jg
adc
cmp
cmpl
loop
shr
jo
mov
push
jno
jge
push
inc
xchg
in
not
xchg
pop
mov
mull
hlt
gs
mov
adc
jmp
and
and
cmpsb
lret
pop
push
add
pop
add
dec
jae
test
inc
shll
dec
pop
jle
fadds
push
pop
fsubrl
jbe
jg
icebp
adc
cltd
es
fadd
das
sub
add
xlat
clc
sbb
pop
sub
ljmp
fs
sbb
jne
pop
add
pushf
xor
popf
mov
and
sarl
test
push
les
mov
and
adc
es
pop
es
dec
lock
fists
in
or
rcrb
cmp
outsl
cmp
sahf
in
mov
dec
cmp
sarb
scas
inc
sbb
dec
mov
test
add
ret
pop
iret
sub
call
lea
pop
xchg
pop
lock
mov
call
mov
mov
ficompl
jb
ja
inc
dec
push
cmp
jge
call
dec
lcall
inc
cmpsb
bnd
dec
xchg
test
xlat
ds
push
orb
call
and
insb
out
jl
push
pop
loope
xchg
call
cmp
in
fsubs
hlt
add
jo
adc
cld
mov
xchg
fnstsw
pop
rorb
das
ljmp
sbb
das
and
pop
cmp
adc
push
mov
and
xchg
mov
addr16
jno
outsb
push
add
inc
mov
jae
add
mov
leave
add
int3
mov
cld
adc
fidivrl
in
sahf
aam
ja
int3
sbb
jl
jb
xor
test
int
sbb
adc
and
push
loopne
clc
icebp
adcl
xchg
inc
loopne
push
frstor
xor
fdivp
sbb
loopne
jle
sbb
sti
adc
jno
cmpsb
into
testb
sub
data16
lock
in
push
test
add
ljmp
inc
incl
push
rcrb
mov
movsb
sbb
scas
push
push
or
jmp
sahf
sti
dec
ljmp
loope
pop
push
int
jo
loope
or
push
pop
jbe
jmp
ficompl
jmp
fcomps
xlat
cmp
out
out
sarl
inc
and
outsb
or
pop
sub
aam
fs
subl
ds
mov
ss
lcall
jecxz
jmp
pop
ret
decl
jae
pop
cmpsb
js
sub
pop
call
pop
ljmp
cmp
cmp
pop
xlat
repz
test
and
into
pushf
fldenv
pop
ss
inc
mov
lea
add
ss
out
mov
pushf
rolb
out
fimuls
or
jns
orb
push
pusha
stc
mov
rclb
sbb
movsb
adc
and
push
in
divl
test
ss
rcr
popa
sbb
mov
push
mov
pop
pop
and
jmp
out
fdiv
lcall
lds
sub
push
clc
imul
call
aam
or
rcl
lcall
xchg
push
nop
mov
inc
mov
xchg
mov
jb
inc
jo
popf
movsb
xor
push
out
cld
mov
push
adc
pop
lods
jno
insl
aaa
sub
mov
lcall
aaa
outsl
push
cmpl
inc
jb
cli
xlat
adc
mov
gs
add
jo
push
scas
test
dec
add
dec
fimuls
add
enter
push
sub
sub
cmp
xabort
mov
jmp
and
enter
inc
js
cmp
ficomps
sub
inc
jo
outsl
inc
inc
jo
adc
push
lock
cli
or
sbbl
in
sub
xor
addb
das
jne
aad
mov
pop
mov
add
push
cmp
jge
ss
sahf
dec
mul
sbb
mov
cltd
rorb
jo
jle
mov
add
sbb
mov
bound
xor
pop
dec
pop
xor
lea
rorl
jne
repz
pusha
mov
mov
aas
ss
mov
lods
pop
ret
add
mov
test
adc
add
xchg
pop
ret
adc
lret
out
push
push
imul
or
cmpsb
add
cwtl
push
into
jg
stc
pop
or
cmp
aas
out
outsl
add
std
je
jecxz
outsb
mov
es
sbb
stos
lds
add
lods
cld
inc
jl
inc
loope
and
cmp
out
repnz
mov
sbbb
loopne
fisttps
mov
or
sub
jns
mov
les
push
xchg
aaa
ja
lods
mov
xor
sub
inc
adcl
or
loope
scas
aad
cld
cmp
add
mov
dec
sbb
test
jl
out
lods
int3
into
add
push
mov
or
cmpsb
inc
xor
adc
or
out
mov
mov
xchg
inc
and
adc
fadds
inc
inc
sahf
push
cmp
jmp
or
sbb
xchg
push
icebp
nop
ljmp
ljmp
adc
lcall
add
movsl
rorb
pop
ja
lret
pushl
aam
sub
iret
and
adc
xchg
and
clc
data16
adc
int
cmp
mov
stos
cmp
pop
pushf
shrl
xor
dec
jno
sbb
jge
inc
adc
fdivr
orb
mov
mov
movsb
pushf
mov
lock
sub
sti
add
inc
sbbb
add
jne
icebp
push
inc
iret
clc
jl
inc
movsb
jg
outsl
test
xor
ljmp
inc
or
mov
add
rorl
mov
pusha
mov
cmp
add
cmpsl
subl
roll
lock
out
dec
mov
cmp
or
sahf
push
mov
es
loopne
rorl
inc
repz
mov
pop
stos
call
imul
repz
jl
mov
out
push
adc
clc
test
in
rcrb
xchg
in
adc
dec
adcl
sub
xchg
and
pop
clc
insl
adc
dec
or
push
stos
push
xchg
and
sbb
sahf
mov
and
add
xor
cwtl
add
push
cwtl
out
sbbl
test
push
mov
sbb
sub
icebp
mov
xor
enter
fsts
dec
and
jae
jmp
out
int
mov
daa
inc
sub
add
sbb
mov
inc
mov
into
insl
lods
pusha
inc
lahf
or
pop
clc
lar
fsubr
dec
push
xlat
lds
xor
mov
push
xor
les
lds
xlat
lret
addl
aas
aas
loopne
in
jp
shl
leave
movsb
call
mov
adc
xor
mov
mov
enter
js
xchg
or
clc
dec
dec
jl
adc
inc
adc
dec
jae
inc
pop
enter
inc
jg
mov
ja
pop
roll
cld
jmp
jg
jnp
daa
clc
arpl
mov
mov
adc
andl
subb
bound
test
and
clc
lods
dec
mov
add
inc
push
mov
ret
or
sbb
loope
push
pop
insb
fldl
loopne
adc
int
add
andb
cmpsb
mov
fdivrs
dec
add
bound
in
lret
stos
movsl
mov
cmp
lods
xchg
cmp
lcall
mov
incl
lods
add
sbb
outsb
repz
in
lcall
shl
paddusw
sbbb
and
lock
cltd
int
mov
adc
pop
xchg
mov
arpl
cmp
ss
xor
sub
inc
xchg
std
add
sub
jecxz
pop
xor
cmp
shrb
out
sbb
push
sbb
push
into
pop
in
jno
jne
xor
stos
into
sub
in
stos
sub
xor
fcomp
in
cmc
ret
push
lcall
xchg
push
sub
pop
lock
call
push
pop
fmul
mov
sbb
lret
andl
mov
sub
add
mov
push
pop
inc
call
out
jnp
fprem
mov
aas
cmp
xchg
cmpl
cmp
pop
jno
aas
mov
fcmovnb
mov
adc
in
repz
fdivrs
mov
xor
cs
movsb
ja
lcall
push
xchg
aas
jmp
or
jmp
xchg
jle
sub
adc
push
xchg
ljmp
adc
adc
addr16
jmp
outsb
nop
fstl
cmp
out
lret
fisubl
or
into
clc
out
cmp
bound
jmp
pop
sub
loop
aad
and
and
and
mov
roll
fadd
mov
jle
stos
add
xchg
jo
mov
daa
push
mov
pusha
incl
sbb
pop
jae
mov
mov
insb
dec
xor
cmp
fildl
js
mov
lock
inc
cmp
add
sbb
push
popa
lds
ds
out
imul
popa
dec
cmp
dec
xor
dec
pushf
jmp
test
dec
add
pop
jbe
adc
sbb
mov
lcall
mov
push
cmpsl
cmovns
js
push
mov
push
inc
mov
push
sub
in
mov
jnp
xchg
mov
cs
mov
cld
push
xchg
out
mov
pop
outsb
dec
movsb
dec
pushf
je
orb
int
sub
or
mov
dec
pop
ret
jge
scas
mov
lcall
aas
nop
xchg
gs
push
fimull
sbb
push
inc
inc
push
push
pop
adc
call
mov
sub
dec
aad
icebp
adc
adc
mov
fwait
mov
bound
adc
pop
divb
jo
xchg
inc
scas
das
out
decl
js
mov
mov
mov
and
shlb
test
hlt
jmp
sbb
stc
cwtl
inc
int3
inc
dec
pop
scas
pop
imul
mov
pushf
mov
mov
fucomi
adcb
ret
outsb
push
cltd
and
andb
add
jecxz
adc
push
loope
call
shr
nop
test
mov
or
outsl
push
adc
sbbl
xchg
es
dec
mov
testl
sahf
in
push
add
xchg
add
hlt
test
or
push
push
mov
jo
loop
scas
and
ds
lock
invd
addr16
xchg
sbb
nopl
in
xlat
xor
mov
dec
lock
push
daa
or
add
aas
aam
inc
push
cmc
cld
push
xor
movl
inc
add
pusha
mov
das
lods
fstps
scas
mov
scas
or
or
fwait
cmpsb
movsl
xor
xchg
icebp
adc
mov
cs
lret
push
xchg
mov
pushf
mov
inc
and
cmp
jo
pop
enter
push
push
jns
icebp
mov
inc
inc
and
jecxz
mov
orb
mov
subb
pop
push
mov
ror
lcall
add
and
int3
add
in
jmp
inc
in
inc
mov
mov
adc
ds
xchg
lds
sbb
clc
jecxz
or
fiadds
ljmp
push
and
push
push
adc
nop
rcl
dec
xor
mov
pop
movsb
js
mov
inc
mov
test
sbb
bound
xchg
mov
fcompl
push
mov
lock
or
add
aas
xchg
pushf
test
xchg
mov
push
data16
nop
mov
sub
clc
pop
incl
fcom
sbb
adc
je
aam
pop
sbb
out
cmp
ss
dec
mov
push
jp
ljmp
es
or
lea
test
sti
gs
jge
pop
mov
dec
pop
cmp
dec
or
cli
mov
mov
adc
push
xor
sub
push
mov
ljmp
jg
push
add
pushf
shrb
or
mov
test
jecxz
jge
ret
lret
pop
or
cmc
mov
into
cmpsb
out
loope
bound
add
adc
pop
stos
fwait
mov
push
mov
mov
inc
aaa
test
pop
push
adc
es
cmpsb
cmp
sub
jg
jmp
mov
xor
mov
ja
lretw
pushf
dec
cmp
repz
sub
jnp
sub
scas
clc
adc
pop
outsl
jne
imul
mov
inc
adcl
cmp
add
xor
outsb
pusha
adc
fsubs
xor
shll
dec
and
and
inc
or
mov
imul
mov
xchg
enter
pushf
call
outsb
popf
test
arpl
mov
jg
xorl
xchg
or
or
mov
push
adc
loopne
jg
jecxz
test
sub
test
inc
lahf
xchg
bound
int3
pop
jg
lock
xchg
add
enter
and
add
lock
mov
push
cmp
subl
jp
fistl
pop
ss
inc
sbb
popl
mov
mov
pushf
xor
aam
push
iret
js
cmc
add
ficompl
popa
jo
test
dec
enter
aad
pop
and
adc
mov
xchg
xor
repnz
sbb
add
mov
xor
fcompl
stos
ret
sub
nop
je
jge
push
jecxz
imul
in
iret
mov
int3
clc
in
stos
outsl
add
fiadds
cwtl
hlt
add
daa
push
stos
and
jle
mov
bnd
fwait
dec
and
add
into
setne
push
mov
jbe
sbb
mov
je
sbb
jle
inc
xorb
lods
lds
mov
mov
and
add
xchg
and
clc
cmp
fstpt
lods
js
pop
int
shl
mov
xor
clc
xlat
cmp
clc
test
mov
loopne
int
push
clc
push
add
xor
dec
cmp
cs
sub
mov
xchg
xlat
and
jle
jb
leave
sub
loopne
scas
jge
cmp
dec
adc
jae
ja
xor
orb
das
inc
xor
jmp
and
jl
jo
daa
movsb
stos
in
repnz
jae
inc
sbb
mov
arpl
jl
lods
inc
sbb
es
mov
inc
jp
enter
aas
test
icebp
sahf
inc
pop
test
arpl
mov
push
in
mov
pushf
bound
sub
mov
mov
ljmp
add
sub
sbb
and
ret
jno
or
outsl
jb
or
jbe
lret
out
test
jl
lock
je
lahf
mov
xchg
mov
mov
dec
hlt
or
xchg
sarb
ds
mov
add
sub
add
enter
nop
cmpsb
push
sti
xchg
cmpsb
dec
addr16
cmpsb
inc
sbb
sub
cmpsl
into
mov
xchg
jmp
inc
aam
ret
xchg
lret
test
xchg
mov
pop
xchg
sahf
cmp
mov
ss
sar
fdivs
in
xor
adc
imul
arpl
mov
cli
add
push
cltd
or
imul
cwtl
divb
jmp
xor
and
ja
sbbb
lds
push
and
add
sbb
push
xchg
or
mov
nop
into
rclb
cmp
mov
mov
jno
push
mov
push
push
add
xor
cli
sub
jl
push
arpl
out
lock
sbb
add
or
orl
and
ret
pop
push
or
out
push
jecxz
add
fcoml
mov
data16
push
adc
adc
sbb
dec
insb
add
mov
jle
pop
imul
pop
pop
sbbl
scas
out
pop
jecxz
sub
push
int
dec
das
stos
adc
sub
mov
or
bound
or
test
fistpl
dec
sub
imul
or
sbb
mov
jecxz
test
insb
addb
jl
pusha
adc
pushaw
push
std
icebp
dec
in
push
cld
push
sti
pop
enter
call
pusha
pop
or
xor
ret
inc
sar
fildl
cwtl
cltd
or
adc
sub
pop
add
add
and
loopne
test
test
pop
and
mov
ror
repz
adc
push
push
dec
or
loope
pop
xor
push
dec
js
jmp
bound
test
insb
rorl
mov
cmp
add
dec
test
jmp
push
xchg
adc
xor
mov
idivb
sbb
xchg
mov
or
push
sub
add
xlat
add
movsb
sub
or
mov
nop
adc
xadd
lea
push
fsub
add
adc
jo
into
outsl
out
xorl
lods
in
adc
cwtl
sysenter
lcall
shll
mov
dec
popa
insb
ss
repnz
inc
les
push
lock
sbb
add
inc
pushf
mov
sahf
adc
push
fidivrs
inc
clc
ljmp
lods
fwait
lret
fsubl
into
cli
mov
inc
pop
icebp
and
cmp
loope
add
ja
pop
xor
pop
dec
mov
pop
ljmp
add
xor
push
cld
pop
call
jge
sub
lcall
cs
cld
pop
cltd
add
pushf
pop
mov
adc
or
in
jl
std
aad
ja
jp
sub
or
cwtl
inc
mov
mov
call
test
and
mov
adc
fdivrl
rcll
test
jle
ljmp
das
test
xor
pop
xchg
imul
mov
xchg
dec
loope
cmp
popf
push
shlb
jg
stc
and
sub
jbe
sbbb
xchg
jbe
sub
add
outsb
enter
fdivrs
in
push
xor
scas
jl
xor
lahf
mov
loope
adc
sub
ljmp
shrl
sar
mov
cs
push
add
je
jg
rol
dec
jge
lea
mov
push
sub
add
loop
mov
mov
xchg
xor
insb
add
mov
jecxz
jge
pop
mov
js
inc
inc
xor
dec
mov
inc
or
shrl
lret
sbb
mov
test
pop
sti
push
cli
add
add
subl
fs
rorl
mov
lock
or
jo
add
or
shll
lea
cltd
mov
scas
and
push
and
pop
mov
dec
push
aas
cmp
ret
cmp
gs
push
lahf
adc
xlat
mov
shlb
shll
sub
xor
sbb
pop
or
inc
mov
xor
in
mov
jg
add
addr16
cld
addr16
mov
lret
sarl
pop
lret
mov
and
nop
scas
js
mov
xchg
test
xchg
xor
mov
sbb
or
sbb
fstps
mov
lods
fmul
dec
fmuls
pusha
xchg
outsl
inc
sub
sbb
adc
jnp
orb
xor
in
push
push
inc
pusha
insb
orl
or
dec
or
add
dec
pop
testb
xor
repz
arpl
ds
clc
cmpsb
paddusb
mov
and
cli
ja
mov
pop
xchg
add
in
mov
aam
adc
sub
ljmp
mov
call
int
jg
sahf
movsl
mov
jle
mov
dec
push
mul
pop
das
psubw
aad
add
push
daa
mov
sub
mov
adcb
lods
addb
cli
push
push
dec
mov
jnp
jmp
inc
cmpsb
mov
mov
mov
or
jmp
pop
pushf
push
shlb
outsl
imul
xor
test
arpl
or
loopne
cli
jecxz
mov
sub
xor
sbb
mov
sbb
push
pop
lods
aam
shll
fiadds
testl
lret
mov
sbb
int3
pusha
lcall
out
in
enter
addb
ffreep
out
mov
loopne
push
rcrb
or
test
notl
jp
insl
repz
mov
fstl
pop
xor
mov
push
xchg
sbb
xchg
adc
and
adc
mov
cmpsb
ficomps
enter
into
out
and
mov
test
aam
and
pop
loop
push
orb
cmp
or
push
xor
mov
dec
add
cli
add
lock
clc
adc
lods
xchg
xchg
push
repz
add
mov
jmp
pop
bound
testb
pavgb
add
adc
fsubs
pop
nop
and
and
adc
fsubr
push
subl
pop
push
xchg
cmp
or
sar
push
pop
mov
mov
xchg
mov
adc
rcrb
roll
inc
aaa
es
imul
int
adc
or
shrl
ret
mov
int3
enter
jbe
xor
push
xchg
or
inc
sbb
testb
push
xchg
in
and
sbb
or
data16
arpl
push
jg
add
jb
jo
cmpsb
add
call
sbbb
xchg
push
cmp
jbe
jl
xor
call
dec
and
repz
rcll
daa
cmp
sbb
inc
roll
jle,pt
xchg
loop
cltd
cmp
or
inc
fwait
or
pop
nop
or
cmp
icebp
cmp
push
push
xchg
dec
and
push
rclb
add
adc
aam
xchg
fisubl
adcb
xchg
ret
add
inc
rol
or
addr16
in
call
ds
leave
xor
test
dec
fsubr
add
ss
mov
into
cmp
pop
stos
pop
ret
pop
push
jp
sub
sbb
roll
pop
in
mov
jbe
flds
pop
cmp
add
loop
aad
inc
mov
nop
mov
sbb
loopne
cmc
mov
dec
pop
dec
pop
pop
pop
pop
jl
or
dec
push
out
cmp
ficoms
rolb
pop
fmull
movl
push
test
dec
fisubrs
scas
test
jne
call
fldcw
and
jo
les
mov
sbb
and
inc
fwait
es
mov
inc
add
stos
loop
jl
mov
into
test
in
sahf
or
jne
jnp
enter
pop
jb
jl
pop
ljmp
jge
sbb
add
adc
inc
sbb
aad
sbb
seto
sarl
inc
call
das
mov
stos
ds
jecxz
decl
fcoms
mov
outsb
or
pop
add
mov
aas
lahf
mov
mov
sbbb
mov
test
mov
sub
mov
gs
inc
push
daa
add
pop
nop
mov
ret
xor
mov
pop
pop
sub
data16
lahf
sbb
mov
pop
push
mov
in
and
sti
leave
add
and
push
push
add
lea
and
dec
or
inc
and
sahf
and
rolb
gs
push
jne
sbb
into
loopne
mov
fdivrl
sub
cmpb
daa
push
in
inc
insb
jecxz
sahf
inc
ret
jmp
jno
jnp
adc
fs
push
lock
pop
pop
movsb
scas
dec
andl
push
decb
pop
or
push
inc
xchg
jb
and
push
mov
clc
in
sar
push
js
lcall
dec
jge
loope
scas
subl
and
mov
andb
roll
dec
add
imul
add
daa
sbb
adc
mov
xor
das
jo
jae
lock
sbb
inc
mov
mov
and
inc
xchg
rcll
pusha
fst
jbe
cmpsb
nop
adc
in
cld
or
push
push
cli
pop
or
dec
or
hlt
dec
test
pop
cltd
mov
inc
test
pop
add
jae
jge
scas
push
adc
add
aaa
pop
mov
jle
mov
cmp
push
nop
mov
popa
inc
or
imul
mov
cli
loop
aam
out
push
cmp
add
out
dec
test
sub
inc
clc
outsb
xchg
ret
xchg
fld
jo
pop
pop
xchg
mov
das
jbe
std
add
in
out
mov
jp
imul
cmp
xchg
int
fiaddl
int3
mov
sbb
hlt
leave
loopne
into
nop
dec
push
cmpsl
mov
push
sub
xor
push
arpl
call
jno
inc
sbb
sub
inc
add
jo
les
jmp
arpl
je
push
xor
push
mov
addr16
sub
adc
inc
push
in
sub
mov
jae
mov
jle
lock
pop
xchg
pusha
adc
mov
sbb
and
sub
and
xchg
leave
std
push
inc
jnp
loopne
lea
test
push
sub
cmp
or
movsb
mov
add
imul
push
nop
inc
daa
adc
jne
sub
add
add
inc
inc
outsb
cltd
fistps
test
push
jne
cmp
dec
cwtl
or
or
aas
push
or
push
mov
test
sbb
ret
out
or
repz
std
and
stos
pop
add
mulb
addl
sti
jecxz
xor
xorl
into
bound
ficompl
sbb
fsqrt
sbb
ret
aas
sbb
dec
pop
call
clc
ja
cmp
loope
mov
and
dec
aas
inc
stos
scas
jle
rclb
loopne
mov
sub
mov
mov
xor
mov
xchg
rorl
mov
pop
adc
sahf
imul
clc
orl
loop
mov
xor
add
clc
xlat
roll
leave
sub
addr16
cmp
push
aas
scas
mov
outsb
pop
jle
mov
sub
std
pusha
dec
xchg
je
add
ret
loopne
dec
mov
ja
pop
scas
pop
cmp
sbb
test
add
hlt
cld
sbbl
push
loopne
sub
in
add
cmc
ds
add
and
daa
test
cltd
outsl
xchg
inc
mov
push
or
dec
pop
add
add
xor
dec
mov
stos
or
adc
int3
or
pop
mov
cmpsb
inc
or
insb
push
insb
test
out
sub
jns
xorl
mov
rcl
inc
cld
sub
clc
xchg
push
xor
call
arpl
push
inc
inc
hlt
add
jns
and
cmp
mov
lcall
fbstp
jge
mov
les
jns
out
jg
jnp
repnz
in
test
sbb
mov
clc
jb
adc
sbb
or
push
sbbb
mov
insb
push
and
lahf
ja
cli
adc
add
loopne
in
std
sub
sub
mov
rorl
imul
cmpsl
lret
jnp
mov
pop
or
jno
push
sbb
jmp
jp
aad
sub
and
aad
sbb
pop
pusha
cld
jle
sub
insb
lods
pusha
adc
inc
lahf
orl
test
adc
jno
or
xchg
cld
pop
std
outsl
cmp
push
mov
out
fucomip
pushf
add
jecxz
je
pop
or
cmp
daa
add
icebp
rcrb
mov
fs
clc
xchg
roll
fisubs
cmc
mov
mov
or
inc
shll
or
mov
push
mov
lds
cmp
jno
jbe
pcmpeqb
sbb
sub
push
outsl
cs
mov
xchg
mov
mov
sbb
or
pop
out
ret
inc
adc
jle
sarb
fisttpl
sbb
lret
int
in
in
test
out
sbb
xchg
xor
push
rolb
inc
ficomps
loopne
mov
push
ret
inc
ret
jl
mov
xor
or
fadd
push
lods
call
adc
test
js
adcl
sysexit
lret
cs
ljmp
mov
xlat
jnp
cmp
lahf
fdivr
cmp
jge
mov
ljmp
addl
and
enter
push
push
adc
std
xchg
sub
mov
enter
aam
outsl
push
adc
push
mov
push
in
add
xchg
mov
and
push
jge
imul
push
sub
dec
fwait
sbb
jno
fisubrl
dec
sbbb
xor
xorl
pop
in
pop
add
mov
roll
dec
push
sub
push
sbbb
dec
adc
shr
out
cmpsl
cmpb
cmp
jo
adc
and
enter
mov
stc
push
cmp
push
dec
jle
mov
mov
inc
aam
outsl
sub
xlat
mov
loopne
jns
pop
movsb
mov
or
inc
push
pop
es
xor
mov
inc
jecxz
arpl
add
test
std
loopne,pt
pop
push
jb
fsts
adc
adc
mov
add
cmp
pushf
jae
or
cmp
imul
out
inc
mov
sti
int3
or
inc
popa
shr
pop
or
loop
test
pushf
sub
pop
add
or
or
sbb
fxch
mov
aad
movsb
filds
test
add
cmp
cmp
movsb
or
mov
xchg
loopne
push
mov
pop
inc
iret
out
xchg
das
out
dec
inc
repnz
rcrb
jno
nop
lock
out
mov
call
xchg
lods
or
in
rcll
xchg
in
in
lret
das
mov
mov
lods
in
subb
out
movsb
ss
sbb
adc
xor
mov
pop
dec
push
pop
mov
adcl
pop
in
dec
push
das
or
mov
xchg
movsl
inc
cmp
push
mov
mov
shl
xor
ss
aam
enter
div
mov
push
fsubrp
jb
and
push
out
mov
add
pop
dec
adc
in
xor
outsb
cld
jne
cmp
mov
fimuls
mov
dec
pop
js
jp
or
jne
enter
test
inc
add
mov
add
sbb
push
push
ds
je
xlat
loopne
jmp
jmp
ja
push
les
leave
inc
push
dec
cmp
pop
mov
das
pop
sbb
pop
aam
cmp
or
arpl
cmp
mov
aad
ret
dec
pop
xchg
adc
les
leave
jo
dec
into
jl
and
sbb
pop
dec
daa
mov
jp
push
rcl
bound
xor
mov
jecxz
cli
push
arpl
pop
mov
inc
adcb
filds
add
jp
or
mov
dec
inc
xchg
ret
ret
int3
imul
inc
cmpsl
mov
cmp
adc
call
pop
add
in
test
jo
mov
jmp
scas
into
jbe
and
mov
cmpsl
stos
pop
lock
sbbb
xchg
movsb
insl
adc
movsl
ja
pop
stos
cmp
scas
sbb
pop
loop
repnz
fisubs
arpl
sbb
mov
lea
loope
xor
mov
out
inc
xlat
pop
lret
shlb
sti
ljmp
call
clc
mov
lea
subb
testb
int3
sbb
push
ds
jle
dec
shlb
pushf
fnstenv
mov
jmp
icebp
and
sbb
inc
test
pop
add
sub
cli
repnz
ljmp
cmp
stos
lcall
or
push
and
xchg
cmp
sbb
cli
int
gs
outsb
mov
lock
imul
ficomps
cmp
sarb
add
sbb
mov
jg
or
add
insl
pop
scas
push
cmp
sub
stos
cli
in
popa
jb
pop
aad
fisttps
mov
xchg
adc
inc
pop
push
movb
push
test
mov
ja
jo
mov
jo
or
adcl
sahf
jb
pop
stc
push
mov
push
clc
mov
inc
xor
pop
jg
xchg
lret
shll
push
adc
test
pop
mov
es
xor
inc
add
mov
sbb
and
mov
js
push
or
cld
sbb
fwait
cmpb
xchg
sub
in
shl
push
jecxz
rcrl
rcll
ss
pop
xor
or
inc
loopne
mov
dec
sar
push
push
incl
mov
jbe
pop
scas
mov
sbb
mov
dec
insl
mov
loopne
outsb
or
fbstp
xor
xchg
stos
push
jg
push
aas
or
insl
mov
jmp
bnd
sbb
mov
mov
mov
fldl
out
pusha
mulb
adc
call
test
add
sbb
popf
ja
rclb
inc
adc
outsb
loopne
lea
sahf
aaa
add
pop
mov
adc
adc
push
fwait
sarl
adcb
push
lcall
aas
pop
hlt
and
sub
enter
mov
push
hlt
jge
fwait
sub
int
incl
icebp
jo
cltd
sahf
dec
sbb
pop
xor
repz
inc
imul
mov
out
setge
imul
jl
inc
dec
mov
pusha
sbb
add
lcall
jmp
je
repz
or
and
xor
sbb
push
gs
loop
push
in
push
inc
push
cmpsl
sub
and
mov
dec
or
jae
and
daa
xchg
ja
xor
xor
aas
popa
add
cmp
sub
dec
or
jecxz
rcrb
inc
aas
dec
mov
push
ret
push
movsb
and
shlb
push
cmp
rclb
pop
das
cmp
hlt
mov
imul
and
push
hlt
cmp
adc
mov
and
je
call
fdivrl
mov
add
dec
insl
sbb
bt
insb
ret
pusha
rolb
mov
xchg
mov
add
je
in
mov
stos
push
shrb
and
sub
int
loope
cmp
mov
mov
mov
pop
and
inc
adc
or
cs
dec
inc
fmul
xor
pop
lea
inc
cwtl
std
cmpsl
arpl
pop
pop
sbb
mov
cwtd
xchg
dec
or
cmp
dec
jg
push
data16
pop
mov
lock
lds
cmp
inc
xchg
mov
mov
cmpsl
inc
test
adc
out
rclb
mov
push
test
add
rcll
sbb
dec
jecxz
cltd
popa
in
cmp
outsl
lock
push
push
add
xor
je
pop
sbb
push
cmp
dec
push
js
add
loop
or
test
add
cld
cmpsb
stos
and
jbe
mov
dec
inc
add
mov
rclb
sti
inc
mov
test
in
shlb
sub
pop
pop
mov
jg
clc
jg
cmp
mov
mov
mov
out
sahf
andl
push
add
add
pop
inc
xor
movsb
mov
jl
mov
pop
jl
lret
and
pushf
scas
cltd
jle
xchg
mov
cmp
rcl
mov
ja
sub
ds
mov
pop
icebp
mov
push
nop
mov
mov
or
jle
and
loop
lock
into
or
mov
fsubr
fiaddl
dec
outsb
jg
aas
mov
test
fdivs
pop
xor
xchg
and
rcl
xor
jae
xor
lret
cmp
mov
test
fwait
loopne
ffreep
mov
test
loope
cmp
jo
fwait
rcl
add
cltd
mov
repz
cld
pop
int3
shlb
and
das
outsb
or
lahf
lahf
pop
cld
sub
sbb
fbld
adc
stos
fs
out
inc
inc
popf
add
mov
jl
sub
inc
mov
loop
cwtl
jecxz
ret
imul
push
pop
clc
push
jbe
jecxz
push
rorl
dec
mov
cmp
popf
dec
cmp
aam
jb
sahf
cmp
test
sarl
xchg
push
lods
sbb
jo
lcall
mov
js
push
xor
stos
pusha
mov
mov
mov
ds
pop
loopne
and
cmp
adc
push
push
out
jecxz
sub
mov
pop
adc
pop
xor
inc
icebp
outsl
cli
mov
fcomi
stos
cmp
xor
add
xor
sahf
mov
mov
les
divb
cwtl
dec
dec
sub
push
pop
lea
add
rcll
js
or
shll
adc
cmpsb
roll
dec
pop
adc
adc
inc
orl
mov
pop
lock
jo
sbb
adc
lock
mov
iret
sub
nop
jge
jnp
ljmp
hlt
fildl
subb
or
mov
and
inc
outsb
leave
icebp
das
cmp
nop
xabort
mov
push
inc
clc
mov
add
cmp
fisttpll
inc
jnp
push
inc
xor
in
ljmp
movq
add
or
dec
les
fs
xchg
jle
ss
add
xchg
jg
aaa
jl
scas
mov
dec
push
and
and
dec
xor
xchg
mov
jno
jle
hlt
hlt
mov
mov
movl
and
into
out
mov
lcall
xchg
roll
sbb
enter
sbb
je
pop
dec
or
xor
and
mov
dec
dec
lcall
mov
push
fmuls
scas
cmp
aaa
cwtl
clc
or
inc
jmp
push
pop
mov
jns
dec
sbb
mov
inc
pop
int3
pop
cmp
mov
loopne
pushl
xchg
shl
push
xchg
adc
fstl
lret
jnp
inc
clc
fdivrs
arpl
pop
out
popf
movsl
xchg
test
and
leave
cmpsb
xchg
sarb
mov
sub
call
inc
jae
data16
fadds
add
mov
and
mov
pusha
lods
test
loop
aaa
add
inc
or
inc
or
push
movsb
cmp
fs
sbb
add
and
mov
or
cwtl
pop
add
push
cmpsl
xchg
mov
ljmp
add
cld
daa
adc
ja
xor
dec
movsl
pushl
cli
mov
pushl
loope
clc
xor
lea
adc
push
jnp
and
jnp
test
push
int
jge
xor
call
sti
dec
push
outsb
mov
outsb
clc
aaa
cmp
lods
mov
pop
outsb
xchg
vprotb
imul
cmpsl
sub
cmp
std
scas
js
inc
test
test
fmul
push
mov
push
cwtl
and
idiv
and
mov
pop
xchg
outsb
test
je
jae
inc
mov
add
mov
jns
mov
data16
push
in
test
ja
seto
add
mov
fsubrp
or
xorl
jle
mov
xchg
xchg
cwtl
test
lock
sbb
cmp
jo
jle
xor
mov
jnp
dec
cld
outsl
and
dec
insl
inc
stos
movsb
les
push
mov
ret
cmp
test
mov
or
subb
jbe
rcrl
popf
mov
pop
xchg
outsl
push
gs
lcall
push
push
ljmp
ss
mov
push
or
imulb
xor
repnz
mov
dec
sub
shlw
divb
push
jb
icebp
sar
dec
mov
inc
clc
inc
mov
adc
xchg
add
sub
sub
sub
pop
sahf
or
mov
lahf
sbb
fs
arpl
xchg
fsubrs
sbb
xchg
adc
gs
cmp
aam
inc
in
inc
mov
aad
adc
inc
std
ljmp
aas
sub
mov
aam
push
popa
jb
or
jl
lahf
filds
or
dec
sub
adc
xchg
dec
and
adc
clc
add
ja
imul
call
xchg
cmpsl
testb
mov
inc
pop
dec
bound
sbb
jb
dec
pop
cli
and
add
stc
adc
adc
xchg
pop
push
xor
sbb
test
les
mov
in
jle
cld
jge
add
mov
mov
pop
fsubs
xor
mov
xchg
sbb
sbb
icebp
andb
jb
enter
pop
or
sarb
stos
mov
ds
aad
mov
scas
pop
pop
inc
xchg
mov
addr16
mov
in
aas
jbe
xor
cmp
push
fstpl
mov
test
test
in
sbb
or
orps
pop
cmp
sbb
enter
push
mov
and
jmp
adc
cli
mov
and
jg
xorl
xchg
daa
or
sub
mov
mov
sarb
ret
icebp
loope
inc
push
push
xor
inc
jb
xor
orb
xlat
call
cmp
add
mov
pmuludq
pop
int
xchg
imul
pop
dec
ljmp
or
cmp
outsb
dec
pop
pop
push
mov
es
and
xchg
dec
pushf
xchg
movsb
aaa
dec
ret
push
or
fs
jp,pt
mov
sahf
and
sub
std
xchg
pop
faddl
pop
andl
xchg
andb
adc
sbb
loope
loopne
dec
fcoml
popf
testb
mov
andb
decb
or
int
and
ror
rcrb
aam
cmpb
cmp
imul
imul
stos
mov
neg
scas
mov
idivb
add
imul
inc
bound
rcll
pop
mov
mov
sbb
cli
inc
push
loop
scas
lea
arpl
ret
scas
insb
xchg
pop
fldenv
inc
add
cs
cld
ds
nop
aam
mov
dec
pop
insl
jle
add
jmp
nop
dec
push
adc
inc
mov
push
in
sbb
cs
mov
rorb
mov
inc
pop
cmpb
lock
push
jbe
cmp
ficoms
test
insb
pop
insl
mov
cmp
jl
jmp
pop
nop
push
inc
add
leave
push
sbb
je
cmpsl
cmp
mov
fnstenv
fsubrl
lsl
xor
clc
js
fildll
fsubrp
gs
push
lods
sbb
pushf
jge
jmp
enter
jp
inc
je
dec
dec
adc
adc
cmp
ljmp
lea
movsb
sub
sub
subb
sbb
mov
ret
cmp
fmull
sbb
cmpl
loop
push
push
xchg
addr16
mov
repnz
sbb
sub
and
and
mov
fs
mov
mov
xchg
ffreep
jmp
inc
dec
adc
sbb
push
ja
or
dec
mov
mov
push
fs
dec
mov
clc
outsl
aam
add
xchg
inc
push
ja
inc
outsb
dec
mov
jmp
inc
inc
gs
fs
mov
xchg
mov
cmc
les
add
xchg
jo
push
push
and
sbb
xor
adc
pop
pop
arpl
imul
movsl
int
adcb
pop
cmp
push
lock
or
mov
xor
jmp
mov
push
enter
movsb
out
cmp
cmp
jmp
mov
jbe
imul
cmp
or
movsl
xlat
movsl
dec
loop
ret
out
adc
insb
push
cmpsb
adc
fsubrs
mov
hlt
gs
mov
mov
loopne
adcb
lret
test
add
fadds
jbe
mov
push
jmp
popa
sahf
aad
clc
sub
mov
and
es
pop
xchg
xchg
push
cmp
inc
loopne
shll
cwtl
in
xor
ljmp
cmp
mov
mov
mov
sub
test
dec
push
sbb
jecxz
mov
cmpsb
shlb
cmp
or
push
pop
repz
or
sbb
pop
push
sbb
jo
pop
ds
xorb
xchg
mov
adc
jmp
and
lds
adc
mov
mov
push
and
mov
movsl
mov
jmp
sub
cmp
mov
insl
sub
push
mov
mov
adc
push
shl
push
daa
lods
push
pop
mov
sbb
add
orl
movsb
lock
fldcw
and
les
push
adc
mov
adc
mov
insb
movsl
loopne
sar
xlat
pop
xchg
mov
daa
ds
decb
mov
fiadds
fidivrl
inc
lahf
call
testb
fdivs
add
std
lea
mov
pushf
cmc
cmp
addr16
cmp
push
mov
and
dec
dec
test
xor
mov
pop
add
jo
mov
jle
lcall
push
cwtl
xchg
pop
pop
sbb
cmp
and
sub
ljmp
xchg
ja
lods
mov
out
jb
jle
mov
roll
fmull
ret
or
mov
call
arpl
jbe
add
iret
mov
fcomi
rol
mov
mov
fcmovbe
fdivrs
push
dec
loop
loope
clc
sub
mov
sub
fwait
push
xor
data16
repz
pushf
dec
push
imul
std
fldcw
cmp
jp
or
mov
in
clc
mov
inc
mov
nop
jnp
ss
ljmp
and
aas
and
imul
pop
xchg
test
mov
iret
pusha
popa
push
dec
enter
dec
push
test
clc
lods
mov
test
xchg
inc
ss
pop
mov
push
push
out
add
inc
mov
es
clc
xor
jle
sub
das
test
ljmp
and
icebp
test
push
loop
fcmovnb
js
cmc
adc
cld
sub
or
pop
jmp
cli
dec
sti
jg
mov
jb
dec
pop
popf
int
sub
rcl
addr16
and
in
call
imul
and
es
sbb
loop
cwtl
cmc
add
push
pop
push
cmpsb
ljmp
pusha
and
pop
out
adc
inc
inc
lea
jle
les
xchg
xor
jb
shll
push
inc
ljmp
mov
xchg
inc
inc
mov
js
jl
dec
fdivs
stc
mov
jp
pushl
adc
call
loope
call
stos
repnz
mov
popa
push
repnz
jmp
sub
aaa
mov
sub
loopne
adc
xor
push
mov
adcb
jmp
sbb
stos
inc
mov
and
mov
loopne
stc
inc
leave
js
xor
xchg
test
jae
mov
daa
sbb
in
mov
hlt
imul
push
fiaddl
lahf
push
nop
cmp
push
mov
mov
test
dec
sbb
ja
repz
mov
enter
mul
sbb
xchg
loopne
ljmp
add
or
ss
or
scas
fiadds
incl
outsl
jno
xor
out
and
fnstsw
inc
xchg
filds
outsb
add
mov
fbld
or
aaa
data16
pop
push
mov
loop
pop
add
mov
ficoms
shrb
andl
fists
loop
nop
add
ss
cmc
das
in
push
roll
inc
aaa
or
adc
xor
xchg
lret
xchg
and
or
sub
push
das
clc
pop
inc
xchg
call
pop
dec
je
lea
mov
stos
faddl
adc
test
ja
das
inc
std
dec
sbb
pop
xchg
shrb
hlt
jno
mov
pop
adc
inc
lods
dec
push
lds
lods
lods
inc
les
icebp
pop
faddl
dec
jne
fsubrs
popa
mov
or
pop
sar
ljmp
lret
nop
shr
jo
pop
xor
push
jecxz
dec
cli
pop
icebp
jecxz
jl
test
push
jle
inc
push
icebp
push
push
jb
repz
ja
dec
sub
insb
adc
dec
add
mov
fisubs
sub
or
icebp
lods
jmp
loopne
scas
xor
pop
popf
ja
std
pop
subb
push
ljmp
lcall
jnp
test
mov
push
push
or
incl
mov
outsb
fcomps
sbb
jmp
push
dec
jmp
stos
test
lret
punpckldq
addl
mov
pop
sbb
add
or
push
mov
sbb
cli
lock
aas
mov
xchg
jnp
push
in
add
stos
pop
and
push
jmp
pop
add
out
into
adc
xchg
sbb
lds
aam
jbe
cmp
ljmp
mov
testl
inc
fdivrs
push
sub
push
ja
mov
cmp
xchg
arpl
pop
xlat
sub
dec
push
jne
sub
inc
cld
lods
inc
shlb
imul
xchg
out
clc
andb
faddl
and
lahf
mov
mov
in
mov
sub
call
mov
xor
mov
dec
jo
or
cmc
sub
aaa
push
test
pop
jno
push
daa
fisubrl
mov
push
push
mov
mov
push
dec
lahf
push
adc
scas
incb
ficoms
subb
in
test
jp
jl
xor
xchg
dec
adc
push
pushl
pop
lret
xor
cmp
or
aad
inc
ret
gs
adc
or
sbb
test
ret
lcall
js
jge
sarl
les
xchg
fmuls
mov
imul
xor
das
push
or
cld
pusha
sub
cmpsl
push
in
add
jecxz
sbb
or
or
ret
out
push
es
stos
lock
mov
rcl
aaa
inc
je
and
in
loop
dec
sahf
sbb
or
mov
cmp
loop
jmp
and
mov
rclb
adc
mov
shl
push
sub
mov
push
addr16
cli
in
lock
gs
mov
jmp
loop
icebp
cmp
int
gs
test
out
je
jae
xchg
ret
push
pop
rcl
out
je
pop
jecxz
and
xchg
les
or
popf
loope
push
or
hlt
ljmp
push
pop
push
js
out
pop
mov
mov
cmp
ja
int
adc
xchg
cmpb
call
lcall
or
push
add
ret
mov
pop
jl
inc
mov
fidivl
fsubl
and
andb
sbb
mov
mov
cs
cmp
mov
push
jno
xor
ret
add
scas
out
jmp
lcall
pop
dec
fwait
sub
xchg
incb
pop
or
adc
lcall
xor
cmp
inc
insb
inc
pop
hlt
pusha
mov
mov
loope
stc
out
cmp
test
sbb
repz
js
push
mov
rorl
loope
pop
leave
andb
fistl
arpl
pop
pop
mov
rol
sahf
jmp
xorb
js
movsb
or
add
mov
push
mov
add
inc
orps
movsb
stos
pop
and
mov
adc
fcompl
data16
jne
lock
mov
aas
add
mov
or
fwait
dec
push
incb
sbb
pop
cmpb
mov
push
mov
add
ss
lret
jle
pop
mov
add
sub
ljmp
push
dec
sbb
dec
dec
xchg
sbb
in
xlat
adc
fistps
dec
mov
mov
push
pop
sahf
pop
push
ret
js
xchg
movsb
cs
fcomp
ret
adc
mov
mov
cmpsb
mov
adc
rcll
xchg
loope
push
cmp
and
aad
bound
or
mov
pop
lea
loope
mov
sub
ret
xchg
inc
outsl
popa
nop
add
in
mov
and
nop
adc
push
arpl
mov
add
push
jno
inc
mov
cmp
rorl
fwait
push
adc
cmp
lret
rcl
ja
shrl
pusha
cmp
fs
pushf
sbb
sub
incb
insb
icebp
arpl
lcall
mov
add
mov
cmp
mov
pop
jmp
jmp
sbbb
push
push
xlat
jb
or
pop
sbbl
adc
or
cli
scas
dec
bound
push
ljmp
mov
sbb
inc
unpcklps
and
mov
xchg
mov
subb
icebp
arpl
pop
cwtl
imul
add
cmp
daa
sahf
daa
dec
xchg
push
push
add
mov
mov
paddb
daa
js
enter
mov
and
cmp
and
ljmp
push
shlb
ljmp
add
push
fcomi
scas
jg
test
bound
iret
cmc
or
jg
aam
jle
pusha
dec
push
loop
popf
imul
pop
push
xorb
push
jnp
cmp
dec
stos
les
add
leave
je
push
orl
outsl
fidivs
daa
fisttps
pop
pop
mov
fcmovnb
cwtl
pop
test
inc
pop
cmc
mov
js
cmpsl
stos
inc
add
pop
shl
adc
sub
loopne
cmpl
and
pop
nop
dec
mov
outsb
push
cmp
sub
pusha
adc
dec
push
es
loopw
inc
bound
subl
aam
pop
mov
mov
jo
sti
aaa
jno
or
fwait
or
push
inc
sbb
sub
xchg
jecxz
jge
xor
jge
jo
cmp
dec
inc
aam
cmpb
pushf
enter
std
xor
jp
jbe
call
adc
xlat
jne
inc
inc
mov
loope
pushl
mov
sub
mov
ljmp
rcrb
pop
cmp
mov
add
and
jne
add
inc
push
and
adc
out
mov
mov
fcmovnu
jle
sahf
stc
mov
sbb
dec
sbb
loopne
scas
scas
std
adc
push
xor
sbb
and
mov
push
enter
filds
pushf
sbb
mov
pop
jo
movq
cli
out
cmpsl
call
mov
push
iret
mov
adc
mov
ffree
jmp
andb
sahf
dec
ljmp
aas
pop
push
sbbb
mov
mov
cmpsb
mov
jp
add
ljmp
add
inc
or
mov
fwait
stc
adc
stos
imul
je
hlt
pusha
fidivrl
int
roll
dec
int3
movsb
jge
das
inc
or
addl
fmuls
and
mov
pop
repnz
repnz
hlt
icebp
sub
lret
dec
and
popf
insb
pop
neg
mov
outsl
inc
enter
cmpsl
andb
clc
jnp
push
xchg
je
xor
sub
mov
pop
pop
bound
jg
add
adc
add
sbbb
adc
pop
ds
sub
mov
sbb
lret
cld
push
adc
orb
add
inc
ljmp
mov
pop
lea
lods
xor
data16
cmp
notl
xchg
outsl
jle
jl
ret
or
mov
xchg
in
or
aas
cmp
std
pop
insl
mov
jb
insl
pop
mov
sbbb
push
inc
cld
or
lcall
std
push
pop
pop
mov
push
xchg
clc
inc
loop
jle
and
push
into
andl
adc
movsb
mov
and
ss
std
xchg
std
adc
push
jne
mov
jb
xorb
lds
aad
mov
mov
mov
cmpsl
sub
jge
les
mov
fsubl
push
addb
pushf
add
or
push
add
jbe
sub
adc
sbb
frstor
xlat
adc
xchg
push
push
push
lods
lock
mov
pop
std
das
test
popa
pop
mov
add
mov
xor
mov
sub
mov
cwtl
rolb
dec
sub
and
xchg
mov
sub
sbb
ja
xor
cmc
mov
jp
js
int3
lods
outsb
les
pop
lods
call
push
leave
jbe
dec
int3
stc
xchg
sbb
nop
mov
data16
sar
push
mov
in
cltd
adc
in
das
sbb
fs
dec
aas
fwait
add
idivb
xchg
push
ds
adc
mov
dec
mov
dec
imul
dec
nop
push
push
or
adc
sbbl
adc
add
cmp
cmpsl
add
adc
mov
roll
jge
xchg
fucom
xchg
mov
js
lea
inc
loopne
mov
or
inc
clc
mov
mov
lret
icebp
roll
lmsw
pop
cmp
jecxz
pop
pushf
mov
mov
mov
lcall
dec
cmp
mov
cmp
mov
mov
dec
or
fldpi
movsb
decl
and
gs
xlat
push
fildll
cmp
outsl
cmpsl
lock
cld
inc
pop
mov
or
out
inc
in
lret
sbb
outsb
enter
push
scas
pusha
cld
xor
push
jl
sub
lret
or
aam
add
xchg
cld
movsl
idivl
or
faddl
enter
arpl
lock
sbb
jecxz
dec
mov
dec
dec
cmpsb
js
aaa
adc
cmp
in
mov
and
std
push
fimull
jae
cltd
arpl
das
xor
push
ret
pop
into
stc
mov
ljmp
mov
add
daa
bound
imul
jg
pop
dec
jecxz
cs
push
movsb
lahf
pop
incb
in
in
js
lods
add
inc
xlat
stos
sbb
adc
and
dec
ret
rorl
aaa
inc
popa
sahf
stc
jns
mov
in
ja
cmc
fistps
mov
je
and
dec
pop
les
xor
loopne
dec
mov
mov
or
insl
adcb
stos
sbb
sarl
mov
mov
push
cmp
mov
or
aaa
fdivp
jmp
xchg
inc
xchg
into
sbb
mov
dec
pop
jns
jmp
aaa
push
sub
and
push
mov
push
and
orb
test
call
push
mov
push
pushl
mov
popa
imul
stos
jle
enter
jne
pop
test
pop
js
fmul
add
ret
movl
push
aam
les
xor
shrb
cwtl
jecxz
fisubrl
hlt
xchg
jo
push
popa
orb
or
orb
ficomps
vgatherdps
ret
xchg
pop
push
cmp
xchg
adc
pop
inc
mov
mov
rorb
xorb
jo
gs
push
fs
lret
push
cmp
lods
push
mov
js
clc
out
mov
mov
test
repz
js
inc
pcmpeqd
cld
pop
movsb
popf
or
in
cmpsl
jne
bound
jecxz
jae
push
test
adc
cmpsl
xor
sahf
mov
xchg
ljmp
add
lret
xchg
cli
jge
imul
clc
jbe
xchg
and
roll
jb
lret
subb
adc
cltd
sbbb
or
clc
sbb
adc
push
mov
jle
push
adc
cwtl
push
jbe
mov
sub
ret
cmpsl
push
dec
xor
out
movsl
jmp
enter
push
gs
stos
std
insb
es
mov
dec
shlb
push
je
ficompl
pop
rcrb
xchg
and
inc
mov
add
insb
mov
cmpsl
pop
negl
fidivrl
stos
push
fiadds
or
jae
int3
sbb
out
sub
test
pushf
daa
cmp
pop
loope
add
sarl
in
cmp
sbb
imul
mov
pop
test
dec
adc
sub
dec
in
jbe
int3
xlat
movsb
push
mov
sub
shrb
add
mov
add
mov
test
add
lahf
push
aam
daa
loope
sbb
jne
out
or
xchg
jne
adc
paddw
mov
sbb
dec
push
jle
sub
clc
mov
dec
xor
add
pop
shlb
cmp
cli
adc
fcmovnu
data16
pushf
int3
xchg
ffree
mov
dec
das
mov
mov
cmc
jmp
lahf
sahf
or
add
aad
mov
test
mov
ljmp
jb
push
sub
aad
imul
jne
inc
and
push
adc
xchg
idivb
std
outsl
cli
push
pop
in
or
jecxz
push
mov
mov
scas
imul
adc
push
cmp
lret
in
jge
jge
mov
je
sub
xchg
and
fs
enter
or
inc
dec
hlt
mov
pop
ficoml
shl
jbe
xor
test
in
orl
add
loop
ja
inc
push
adc
nop
movsb
jp
push
jl
in
in
gs
clc
mov
dec
lds
movsl
add
jns
pop
mov
jg
sub
push
loop
fadd
jbe
fiadds
xchg
xor
dec
sbb
addb
loop
lods
js,pn
xchg
jo
and
xor
fs
js
jg
and
mov
adcl
mov
loop
out
sub
clc
outsl
cmp
pop
cli
orb
pop
mov
addr16
pcmpgtb
and
fcomps
fdivr
rorb
sbb
lods
sub
mov
loopne
ja
xorl
mov
adc
inc
outsl
jmp
cli
hlt
fisubl
inc
outsl
rorb
mov
push
aad
adc
mov
aas
lahf
lret
xor
outsl
mov
jmp
test
pop
aad
push
cmpsb
repnz
sub
pop
dec
cmp
pop
jnp
imul
mov
pop
lea
cmp
jg
ret
dec
in
pop
cmp
and
mov
cmpsb
jbe
sbb
arpl
cld
ss
adc
les
jecxz
aam
xor
unpcklps
sarl
sbb
xor
push
movsl
adc
fwait
adc
or
mov
push
mov
mov
outsb
xor
loope
or
add
mov
test
pop
cld
fildll
insl
xchg
inc
fists
int
sbb
jg
cld
outsl
xor
fdivs
scas
pop
push
mov
rorl
inc
inc
mov
pop
jo
push
movsb
ret
pop
mov
push
cwtl
rorb
mov
inc
jle
jl
add
cmp
xor
fidivrs
mov
fsts
stos
or
pop
mov
loope
or
sbb
dec
aaa
jnp
call
mov
xchg
call
xchg
ljmp
push
push
stc
sub
sbbl
push
adc
pop
adc
add
data16
sbb
jnp
popa
enter
stos
fnstcw
mov
or
jge
dec
dec
jp
cli
cmp
in
xor
das
cld
adc
in
movsb
xlat
jne
lock
pop
xor
xor
jg
or
pop
mov
dec
and
jnp
pushf
push
stos
adc
sub
push
and
int3
aaa
test
mov
xor
mov
inc
mov
inc
or
ljmp
adc
sub
push
test
dec
mov
inc
adc
inc
aaa
inc
inc
test
xchg
push
sub
mov
mov
fists
rol
mov
testb
mov
cli
sub
out
test
xor
fsubs
loopne
aaa
jbe
and
and
mov
pusha
mov
cld
out
jmp
inc
and
xchg
push
call
jl
lahf
or
jo
sub
mov
enter
mov
pusha
into
and
movsl
cmc
push
cld
xchg
stos
xsha1
cmpsb
mov
pop
mov
adc
or
pop
mov
xchg
test
decl
test
mov
rorb
xchg
pop
movsl
es
pop
lods
mov
cmc
push
ljmp
mov
jge
ss
jnp
dec
test
adc
aad
sub
nop
jo
test
adcb
repnz
xchg
xchg
inc
sbb
test
sbb
mov
outsb
push
and
insb
jl
idivl
mov
pop
aas
add
stos
dec
adc
inc
out
jae
jno
and
dec
cld
xor
imul
fmuls
xor
mov
cmp
mov
sbb
mov
adc
inc
ficomps
or
push
lahf
and
cmc
or
leave
data16
loopne
push
aaa
rclb
repz
xor
test
adc
xchg
cmp
aam
jns
and
or
mov
push
cwtl
push
cmp
xor
mov
fs
xor
or
adc
cs
ret
inc
cltd
lcall
sub
and
lock
stc
fistpll
jb
loope
repnz
mov
pop
test
xchg
jge
lcall
xchg
inc
inc
pop
xchg
int
imul
inc
out
jnp
jo
adc
test
sbb
int3
dec
call
popa
sbb
cmp
and
in
pop
icebp
xchg
mov
subl
cmp
es
insb
cmpl
sbb
test
loopne
add
inc
push
add
in
iret
add
insb
icebp
pushf
dec
add
dec
push
xor
jbe
call
adc
cmpsb
cli
dec
sub
sbb
or
mov
lret
sub
jl
pop
push
adc
decl
cmpsb
adc
xor
jns
mov
nop
aaa
nop
inc
sbb
cld
lret
adc
mov
aaa
jo
sahf
sub
push
add
cmp
push
push
add
inc
mov
aam
jno
loopne
stos
mov
xchg
or
pushf
pop
in
rcrl
or
xor
lret
lods
fsubrs
rolb
push
inc
mov
dec
hlt
add
ljmp
jle
pop
sbb
push
fs
push
test
adc
ja
popf
mov
test
pinsrw
cmpsl
insb
scas
mov
adc
and
out
mov
mov
or
and
lds
push
inc
sbb
or
in
out
xchg
subb
jbe
out
filds
xor
fwait
dec
jecxz
test
push
adc
pop
dec
fidivrs
bswap
dec
or
mov
mov
fs
cwtl
xchg
cld
int3
jae
pop
sahf
xchg
and
xchg
inc
fwait
popf
adc
sub
sarl
aam
insb
inc
jmp
or
add
pop
jge
aam
pop
pop
in
lea
popa
xor
sahf
jl
inc
adc
pop
sbb
add
ljmp
outsb
sub
lods
into
repz
push
roll
sbbb
sub
subb
jnp
adc
ret
jle
mov
sbbb
push
aaa
cld
mov
jae
xor
mov
adc
inc
xchg
add
or
sbb
loop
out
jne
pop
inc
pop
shr
lea
lcall
test
or
mov
mov
jle
cld
mov
mov
xchg
into
mov
mov
dec
jle
jne
or
sbb
mov
cmp
or
loopne
push
in
dec
and
push
or
mov
hlt
pop
pop
adc
or
pop
pop
inc
cmp
or
jecxz
mull
push
xchg
sub
push
addb
push
sub
cmp
stc
adc
movsl
mov
mov
pop
ljmp
jge
aas
cmp
pop
das
fcoml
ljmp
add
pop
jecxz
rcll
js
sbb
mov
ret
test
outsl
mov
lock
cmp
mov
xchg
iret
add
pop
sbbb
testl
mov
push
push
and
push
jnp
jg
jnp
dec
pop
outsb
mov
jp
push
sub
jb
scas
lods
pushf
in
inc
iret
mov
mov
sbb
inc
and
andl
mov
xlat
cmpsb
pop
les
js
cld
xor
sub
mov
fisubrl
ret
lahf
test
mov
sbbb
xchg
add
jp
cmp
push
xchg
pop
fwait
clc
div
lock
adcl
je
pushf
push
xor
out
icebp
dec
mov
js
popf
cmc
cmpl
pop
cld
jbe
dec
out
je
mov
push
or
push
inc
adc
push
loopne
cmpsl
aas
pusha
subb
mov
das
push
mov
data16
nop
push
in
xchg
andb
movsl
sahf
adc
sub
mov
ret
mov
cmp
xchg
dec
inc
xor
ja
mov
xchg
cmp
jnp
mov
loopne
pop
and
jmp
and
sbb
and
nop
lock
loopne
mov
sub
les
or
and
mov
add
push
mov
or
clc
and
push
or
ficoml
ret
adc
jg
clc
pop
cmp
xchg
into
mov
add
fwait
inc
mov
sti
call
adc
popa
jnp
test
sub
dec
les
dec
pop
pop
jo
xor
rol
lea
adc
mov
pop
pop
or
cld
in
add
das
adc
sbb
das
push
mov
pusha
sti
xlat
into
jge
adcl
mov
cmp
xchg
xchg
in
popa
adc
rorb
add
push
sub
push
jl
add
sub
fs
ss
cmpl
addl
jmp
dec
add
inc
mov
mov
xchg
outsb
jl
dec
pop
sub
idivb
xor
ror
cltd
cld
ds
sbb
xchg
push
or
negb
pusha
lock
xor
jge
shll
push
lcall
push
shl
mov
cmp
and
movl
mov
repz
and
hlt
mov
xchg
stc
test
mov
or
adcb
enter
call
pop
mov
test
mov
lods
cmc
inc
pop
mov
inc
stos
and
loope
bound
add
cmp
dec
xchg
adc
cmp
dec
out
push
adc
mov
std
aas
push
xor
xchg
jg
fdivr
out
rorb
outsl
scas
fldl
shlb
mov
scas
addb
daa
movsb
dec
jle
and
rcrl
jecxz,pn
repnz
adc
sub
mov
and
lods
out
mov
icebp
ficomps
rcrl
data16
pop
xor
jmp
mov
dec
xchg
inc
das
icebp
out
scas
cmp
push
and
std
inc
xchg
inc
mov
out
mov
and
mov
enter
mov
push
pop
outsl
and
shrb
mov
sar
mov
mov
scas
repnz
or
stos
pop
clc
mov
fimull
addb
insl
inc
outsl
out
or
in
mov
adc
hlt
arpl
jns
dec
push
ficoml
pop
mov
ret
mov
sbb
cmp
xor
mov
cmp
aas
or
fs
sub
hlt
mov
or
iret
out
mov
adc
pop
sub
outsb
call
mov
push
jbe
mov
mov
mov
sub
xor
adc
lock
jbe
mov
sbb
or
jne
mov
shl
mov
pusha
cmp
mov
dec
jge
aad
arpl
xor
or
or
dec
ret
mov
scas
scas
mov
sub
stos
lahf
jbe
sub
and
mov
outsl
jbe
adc
loop
push
pop
sub
or
arpl
outsl
std
sbb
add
jle
mov
jg
cmp
je
repnz
xlat
pusha
in
jg
xlat
mov
imulb
and
sbb
divb
pop
sahf
mov
clc
mov
rclb
ror
add
jmp
adc
nop
mov
test
data16
aas
mov
arpl
iret
mov
or
push
subb
inc
aas
mov
mov
mov
insb
push
jl
jbe
push
outsb
scas
fisttpl
clc
dec
xorb
test
mov
out
mov
xor
mov
cmp
sbb
ss
es
out
stos
sbb
sbb
lcall
pop
push
out
sbb
add
scas
jb
test
pop
jp
fisttps
xor
mov
lds
mov
and
fldcw
in
mov
jp
fmuls
xchg
add
mov
jmp
sbb
outsl
fcomps
push
jmp
int3
sbb
shrl
mov
pop
cltd
mov
mov
int
sub
aaa
push
jle
xor
repz
orl
popf
nop
mov
pop
cmpsb
orl
cmc
mov
and
lods
push
xor
outsb
dec
ds
cli
jg
stc
aad
cwtl
jno
xlat
cmp
data16
jo
ljmp
mov
mov
jbe
inc
cmp
aad
mov
imul
and
lods
test
push
adc
fmul
int
je
push
mov
mov
xor
ljmp
data16
addb
rorl
xchg
lods
pushl
test
push
jmp
dec
cmp
ret
ud2
sub
out
inc
lock
sti
sbb
xor
cmpsl
dec
cmp
repz
xor
lock
fdivp
xchg
in
add
out
int
sub
inc
sub
cs
incl
cwtl
gs
aam
xchg
add
pop
inc
xchg
loop
sbb
xor
or
xor
jecxz
in
leave
repnz
mov
pop
adc
jl
mov
rorb
hlt
xchg
pop
mov
lret
adc
jecxz
shll
mov
xchg
mov
sbb
mov
lret
icebp
and
mov
sub
xchg
xchg
or
test
rcr
adcb
xorb
lock
es
dec
and
push
jp
int
scas
push
inc
loopne
negb
shl
push
xchg
cs
cmp
dec
cld
lea
fldt
push
out
divl
or
push
hlt
aaa
je
xor
movsl
loope
loop
jmp
pop
adc
mov
add
decl
aaa
push
fcom
mov
jo
orl
dec
xlat
imul
sbb
adc
scas
and
adc
scas
lods
push
stos
pop
aad
stc
cmpsl
mov
pusha
fyl2x
jg
xchg
pop
repnz
xchg
xor
pusha
xlat
cltd
shrb
lods
hlt
mov
repz
xor
pop
xchg
outsl
and
cmp
jns
xchg
push
out
int
fwait
and
push
adc
mov
loope
pop
jns
insb
aaa
loope
mov
les
add
push
jno
lcall
out
scas
mov
xlat
lods
push
mov
scas
je
and
add
mov
mov
outsb
inc
in
xor
addr16
test
ret
sub
fcomp
dec
fisttpll
out
add
outsb
mov
sbb
mov
pop
ss
pushf
aam
mov
fsubp
add
fs
jl
xlat
dec
sbb
adc
sahf
push
fmul
dec
cmc
push
jo
sub
mov
jno
jmp
scas
push
xor
inc
and
dec
or
test
inc
adc
jmp
in
hlt
repz
js
add
add
cmp
aad
mov
and
scas
dec
and
xor
inc
add
arpl
insl
leave
cwtl
push
adc
int
rorb
popf
das
ljmp
in
lahf
push
rorb
pop
pop
ret
xor
mov
push
xor
adcl
fistpl
mov
jae
cli
mov
cmp
lock
loope
and
std
ret
mov
cld
mov
ds
les
jne
mov
adc
jmp
sbb
das
xchg
mov
xor
imul
jg
inc
imull
inc
stos
insl
lock
std
fdivp
xor
mov
push
sub
ret
out
rol
out
nop
shrl
or
cmp
test
punpcklwd
cmp
test
sub
add
xor
imul
fdivs
inc
mov
shufps
add
notl
stos
test
jl
fmull
mov
mov
xchg
pop
xchg
rcr
pop
push
xchg
cmp
into
sbb
out
clc
fildll
ja
dec
loope
add
add
sbb
outsb
test
fstl
jmp
nop
dec
mov
or
es
ss
mov
sub
aam
cli
jp
fwait
mov
lcall
pop
pop
mov
scas
pop
lahf
stos
sub
cmpsb
stos
pop
ret
ret
pop
sti
cs
dec
inc
pop
ljmp
enter
lret
or
mov
mov
loope
fsub
jp
jle
sarb
gs
in
roll
inc
aas
push
xchg
imul
mov
cmp
push
repnz
gs
imul
test
fdiv
push
xor
lea
xchg
adc
fwait
and
ret
xor
mov
popa
ret
sbb
dec
into
rcl
lods
shll
cli
mov
iret
repz
push
mov
test
inc
pop
pop
pop
jecxz
mov
lcall
jmp
pop
mov
nop
add
fcom
mov
or
cmp
add
aam
adc
pop
std
mov
mov
xchg
pushf
jae
aad
xchg
add
push
or
mov
xor
mov
lret
call
jno
hlt
ret
test
sbb
incl
sbb
mov
jecxz
lret
add
test
in
mov
add
loop
out
or
mov
lcall
popa
outsb
imul
inc
lret
add
out
mov
dec
mov
in
in
push
rep
fdiv
ja
jl
subb
rclb
mov
dec
icebp
shll
push
std
rcr
xor
cwtl
push
add
vrcpss
dec
and
mov
add
gs
fcmovnbe
mov
rolb
sub
fisubs
xchg
in
fs
test
mov
pop
ss
push
mov
mov
push
cmp
js
jno
movsl
mov
das
xor
mov
je
sub
negb
fisubs
adc
fwait
lds
inc
pop
ss
add
push
cmp
test
and
cli
in
stc
mov
add
jg
mov
fisttpl
mov
test
dec
scas
mov
adc
push
lods
mov
mov
xorl
sub
imul
insb
cmp
xor
les
adc
ss
pop
loop
es
pushf
ret
add
inc
js
fsubp
shll
sbb
mov
sub
aad
and
ja,pt
mov
xchg
test
mov
push
hlt
ret
cmp
iret
or
adc
fdivr
add
push
fnstcw
frndint
testl
adc
sbb
or
dec
or
mov
sbb
pop
js
add
loopne
push
lods
xchg
or
adc
out
loopne
lret
nop
ret
incl
jge
xor
and
cwtl
jbe
push
or
out
or
outsl
mov
insb
fs
mov
cmp
mov
fisubl
pop
push
mov
cmp
call
lock
sbb
loop
ss
push
in
xorl
sar
sub
cmp
xchg
mov
in
rorb
fdivs
dec
mov
popa
je
je
pushf
ret
sub
mov
push
add
call
sbb
jo
or
xor
test
add
cmp
loopne
lcall
push
mov
sub
ljmp
fcmovb
xchg
xor
mov
popf
dec
inc
xor
push
inc
xor
mov
sarl
xchg
scas
inc
pushf
lahf
pop
adc
mov
jno
fidivl
out
adc
and
and
pop
mov
fwait
add
jg
sub
pop
sahf
jno
xor
call
cmpsb
dec
outsb
add
cmpsl
test
enter
setb
pop
stos
mov
mov
or
push
rol
out
inc
orb
in
test
add
push
loope
loope
mov
fs
insl
outsb
xor
ljmp
sub
mov
mov
xchg
es
mov
js
cld
cmpsl
dec
mov
add
sbb
cmpsb
into
nop
outsl
outsb
loop
push
adc
int3
push
xlat
fistpll
icebp
xlat
push
sarl
add
inc
jo
jl
xor
inc
not
sbb
cmpsb
clc
lcall
xchg
or
jmp
jmp
push
fidivrl
je
xchg
fidivrl
pop
push
jnp
push
cmp
movsl
dec
call
testl
call
dec
add
sarb
xor
bound
cmp
into
or
xor
mov
inc
cmpsb
sahf
sbb
mov
dec
cmc
pop
mov
add
test
arpl
add
sbb
dec
cmc
adc
bound
das
ds
movsl
or
sub
push
repnz
jl
xchg
adc
xchg
cld
xchg
jb
test
daa
mov
push
lret
ja
lock
icebp
call
mov
add
mov
pop
cmp
jg
dec
jb
sti
sub
aas
jb
push
inc
out
scas
sub
pop
add
xor
xchg
pop
shrb
sub
les
push
add
icebp
cmovns
dec
out
mov
ss
sbb
jns
lods
add
lock
push
xchg
sbb
cwtl
sub
lahf
clc
iret
fiaddl
add
xchg
mov
mov
mov
subl
test
mov
xchg
rolb
adc
les
mov
jb
pop
cmp
mov
into
fbstp
jg
shlb
mov
std
inc
sarb
push
jl
fldenv
cld
ss
dec
fidivs
push
xchg
test
add
cmp
fcoms
clc
popa
testl
jmp
ja
ljmp
bound
fldln2
cmpsb
flds
insb
shl
mull
rorb
pop
xchg
add
push
nop
or
push
or
push
into
inc
mov
fildll
mov
mov
push
dec
jbe
xchg
in
pop
in
mov
loope
mov
dec
adc
fcmovu
sub
or
cmpsl
inc
outsb
pop
jne
and
and
jbe
mov
loope
inc
xor
mov
fs
or
jecxz
sbb
push
cli
fiadds
push
jle
push
negb
add
or
adc
cli
or
dec
cwtl
adcl
cli
xchg
pop
repnz
outsb
cmp
movb
fmul
lea
aaa
in
pushf
or
inc
stos
inc
sub
repnz
enter
cmp
cld
hlt
call
add
jp
sbb
or
outsl
mov
mov
pop
cld
push
pop
and
repz
add
divb
mov
fcmovnu
inc
pop
mov
pop
lock
in
les
xchg
push
movsl
adc
or
sbb
and
jle
ljmpw
mov
lcall
fwait
pop
jns
shl
cmp
dec
sub
push
add
test
xor
sub
pop
out
cmp
jbe
jg
jno
adc
aam
push
mov
hlt
and
jmp
xchg
xchg
mov
fnsave
xchg
lret
dec
mov
sub
int3
inc
mov
jmp
push
add
imul
rcrl
jbe
fnstcw
cwtl
xor
jb
stos
movsl
mov
bound
adc
jg
repnz
inc
inc
cld
sbb
negl
das
xor
test
lods
mov
lods
sbb
sbb
in
cwtl
ret
push
sbb
push
sub
inc
push
js
inc
push
cld
aaa
inc
dec
pop
imul
push
outsb
xor
adc
pop
jge
shr
and
xor
loop
dec
imul
push
dec
stc
mov
insb
dec
xacquire
in
ljmp
cmp
push
fwait
pusha
cs
mov
call
gs
mov
and
loop
movsb
mov
loopne
js
jnp
js
insb
or
add
cmpsb
cli
decl
call
xchg
adc
mov
pop
std
cld
cmp
in
cld
or
js
or
loopne
sbb
lock
loopne
sbb
mov
data16
scas
pop
les
inc
js
out
nop
leave
xchg
mull
pop
daa
scas
jne
aam
lret
mull
xlat
or
rclb
dec
inc
pop
adc
adc
and
push
loop
mov
sub
dec
mov
pop
mov
push
push
out
jmp
hlt
decl
lds
aad
test
jg
stos
push
rolb
pushf
mov
add
add
add
pop
insb
out
inc
push
pop
add
fsubrl
int3
int3
out
sbb
aas
pop
sbb
push
adc
mulb
popl
xchg
loopne
adc
pop
push
shl
loopne
mov
fbld
pop
add
cmp
insb
insl
pop
inc
or
pop
xor
arpl
sarl
pop
pushf
sbb
int3
jnp
jl
lock
xor
pusha
imul
js
inc
popa
das
popa
mov
xchg
int
cwtl
jno
mov
mov
sbbl
adc
test
pop
incl
or
dec
jmp
push
mov
sarl
add
add
add
pop
mov
push
ffreep
ja
leave
add
adc
sub
loopne
jno
dec
jge
pusha
dec
push
and
add
shlb
pop
shlb
xchg
cmp
xchg
js
btr
pop
add
pop
add
xorb
dec
push
jnp
idivb
add
movsb
out
shll
mov
xor
fs
and
inc
aad
insb
or
std
inc
lods
ret
mov
push
pop
cmpsb
shl
xor
cmc
sub
add
pop
pop
mov
not
xor
subb
jne
js
inc
insl
push
pop
in
shll
pop
call
push
fisubrs
xchg
pop
ja
js
add
mov
sbb
ret
mov
rclb
adc
sub
inc
lea
push
in
xchg
and
push
sub
pop
lock
mov
orl
mov
or
pushl
pop
pop
jge
cmp
out
mov
les
mov
mov
xchg
jp
push
add
mov
add
adc
pop
fcmove
xchg
cld
mov
rcrb
dec
int3
subb
fadd
into
bnd
pop
sub
xor
sub
rclb
scas
movsl
subb
inc
shr
cwtl
sahf
xchg
fcoml
push
fnstcw
inc
mov
sbb
insb
jl
mov
and
nop
sbb
pop
jbe
sbb
xchg
nop
repz
push
pushl
dec
adc
pop
xchg
adc
loop
cwtl
push
shll
adc
iret
mov
sahf
mov
add
jl
loop
jecxz
xchg
push
pop
cmp
push
sbb
jmp
pop
mov
sub
dec
pop
jmpw
in
dec
add
test
nop
test
mov
out
test
mov
adc
xlat
mov
loope
mov
xor
nop
mov
jmp
fidivs
lcall
cli
fsubr
sbb
cmp
rcl
jp
cld
jge
in
rclb
adc
popa
jno
ret
out
adc
adc
xor
hlt
fildl
mov
fdivrs
xor
xchg
mov
sub
js
sub
xor
jg
lods
js
sub
pop
xchg
add
ljmp
or
xor
push
aam
cwtl
xchg
scas
jo
sbb
adc
mov
jbe
or
lea
and
lcall
cmpb
add
ret
aad
xchg
sbb
sahf
stos
or
or
je
push
cmc
add
out
or
mov
out
adc
xchg
mov
ficoml
sub
insb
fsubs
stos
loop
adc
outsb
imul
cmpsb
pop
stos
mov
jecxz
addr16
or
sbb
sub
jbe
pop
stos
jg
or
sbb
shll
into
add
dec
and
stos
mov
pop
out
inc
pop
sbb
mov
sbb
aad
out
js
xchg
sbb
xchg
mov
and
ret
insb
loopne
gs
aas
jl
mov
and
loope
je
lock
push
xchg
xorl
add
dec
std
sub
dec
lcall
add
and
push
jo
andb
out
xor
arpl
jnp
sub
adc
push
pop
or
jne
mov
push
push
dec
hlt
dec
inc
cmp
sub
aas
jp
jno
jl
xchg
iret
cli
in
fists
and
dec
push
int
ljmp
mov
lcall
or
xchg
dec
cmp
sbb
jl
and
and
and
inc
incl
cmp
mov
faddl
mov
pushf
mov
inc
cmp
xor
sub
shl
sbb
bound
ss
bnd
xor
add
js
dec
pop
mov
add
jge
push
mov
ret
in
jo
cli
roll
aam
decl
pop
insb
scas
push
enter
pop
mov
xchg
inc
mov
cmp
jns
subb
cmp
test
xor
repnz
cltd
or
mov
imul
adcb
sbb
shll
out
test
pusha
cld
mov
mov
test
dec
mov
lods
mov
xchg
je
mov
pop
ljmp
cmp
sahf
jecxz
jle
jmp
add
notl
mov
shrl
cli
or
roll
push
pop
dec
dec
push
call
sub
or
sbbb
sub
add
mov
push
shlb
adc
scas
rcr
cmp
mov
add
mov
push
or
xchg
mov
adc
pop
mov
xor
dec
jo
int
call
fildl
inc
popw
out
shlb
mov
push
cli
mov
push
mov
pop
fisttpll
lret
pop
shl
mov
add
xor
icebp
add
test
fadds
or
push
push
jg
mov
test
arpl
or
mov
or
les
xchg
or
stc
mulb
and
jl
addb
mov
pop
cmp
notl
mov
std
insl
fdiv
cmp
push
add
call
and
gs
insb
insb
push
lahf
xor
adc
out
out
addr16
add
or
sub
xchg
xor
lea
outsl
add
hlt
mov
rsqrtps
inc
scas
dec
popa
push
leave
jp
jg
arpl
in
cmp
push
aam
iret
xor
mov
hlt
mov
mov
dec
cmp
arpl
stos
mov
push
pushf
jle
insl
dec
dec
stc
test
ljmp
adc
mov
loop
std
movsl
test
fisttpl
das
sub
ret
pushf
xchg
jbe
fnstsw
jns
mov
push
jne
xchg
fs
dec
lods
loop
xor
aas
mov
pop
and
mov
lea
ret
jg
xlat
sahf
pop
pusha
dec
push
push
mov
or
push
or
popf
mov
daa
aaa
adc
loope
jne
mov
cmp
add
sar
scas
pop
ret
rorl
lods
in
pop
adc
mulb
lret
jmp
pop
push
ret
popa
jno
aam
mov
jp
jp
clc
cmpsl
cmp
mov
shrb
test
lods
movsb
dec
out
fcmovu
loopne
pop
lock
mov
pusha
push
adc
and
rorb
jmp
aaa
shrb
cmpsb
mov
push
pop
lcall
in
pusha
mov
mov
fs
pushf
ss
dec
cli
add
mov
mov
dec
mov
pop
dec
or
pusha
and
cmovnp
and
addl
sahf
test
ror
in
loop
aam
jge
push
dec
stos
not
or
movsb
dec
push
in
fidivl
pusha
or
and
clc
cmc
cmc
lret
mov
stos
fistpl
cmp
out
sahf
rcrb
orb
inc
mov
and
pop
clc
pop
jb
cmp
in
pop
or
mov
mov
aam
negb
jge
and
movsb
scas
push
nop
adc
clc
mov
ret
sbb
sub
cmpb
repnz
test
sub
pop
adc
xor
inc
rcll
int
imul
jno
pusha
scas
push
stos
into
inc
ss
movsl
sbb
aad
sbb
clc
jg
cmp
mov
imul
dec
in
test
bound
enter
push
hlt
cmp
xlat
movsb
cmpsb
in
and
mov
xchg
cli
push
sbb
std
das
mov
in
ret
mov
cmp
arpl
push
pop
and
dec
pop
std
push
popa
ret
mov
test
add
pop
orl
mov
or
pusha
rorb
xor
inc
mov
pushf
push
sub
push
and
out
sub
pop
movsl
div
orb
je
or
movsl
pop
or
sbb
call
fldt
loopne
xor
xchg
je
stos
aad
das
rclb
push
stos
and
mov
fbstp
or
cmpsb
mov
in
add
ss
push
subb
add
cli
dec
shrb
mov
push
dec
fdivrs
mov
ret
sbb
jae
sbb
sbb
jecxz
lret
mov
call
lods
inc
pusha
mov
jmp
test
jg
pushf
rclb
mov
or
fwait
cmp
lret
popa
dec
mov
jmp
add
cmpsb
dec
xchg
repnz
jmp
add
in
dec
xchg
or
mov
mov
xchg
ret
stc
inc
pop
add
in
scas
cmpsb
and
xchg
mov
movsl
stos
imul
aas
cs
sti
pop
enter
sbb
mov
inc
mov
js
aad
loopne
out
cmp
mov
jns
and
dec
cltd
push
mov
test
clc
pop
cwtl
cld
in
cmpsb
adc
xchg
fdivr
xor
sub
pop
es
push
scas
adc
xor
rorb
add
and
mov
mov
mov
xchg
inc
fildll
and
or
jb
pop
int3
fisttpll
push
jno
adc
fbld
xor
cmpsl
test
stos
and
xlat
insb
aam
jg
xor
dec
imul
addb
or
add
call
push
sbb
adc
iret
mov
stos
sub
fwait
mov
xor
repnz
jmp
arpl
test
divl
pushf
filds
testl
or
xor
xor
add
jle
adc
es
mov
dec
pusha
incl
xorb
shrb
add
iret
cmp
fcoms
out
cmp
negl
hlt
dec
rcrl
into
loopne
lock
dec
mov
pusha
js
mov
inc
lcall
nop
mov
shll
dec
add
fnstenv
sub
stc
sub
outsl
test
jae
data16
vpshuflw
add
stos
jmp
fcmovne
inc
fsub
pop
sbb
testl
movsb
and
mov
popf
mov
jbe
jbe
and
mov
iret
mov
xor
add
lea
std
je
ror
int
mov
cmp
cld
adc
dec
dec
mov
push
or
mov
ret
cmpsl
mov
testb
in
rorb
cli
mov
stos
push
ffree
pop
pusha
push
pop
cmp
clc
inc
and
mov
lcall
mov
jno
dec
mov
mov
rclb
shrb
movsl
xchg
push
test
icebp
mov
push
dec
add
or
adc
in
add
mov
ss
pop
imul
mov
cld
mov
pushf
dec
xor
decl
subb
test
pusha
imul
push
loope
cmpsl
and
xor
ret
fadds
insb
cmpsl
dec
in
xor
lods
mov
mov
pushf
mov
push
mov
add
push
pop
add
inc
sbb
pop
lock
xor
movsl
aas
mov
bound
lods
addb
outsb
add
and
lock
sbbl
mov
aas
ljmp
adc
test
cmp
rcr
orb
cld
jns
and
sub
stos
add
shufps
adc
dec
enter
sbb
in
outsl
ret
call
ret
les
sahf
push
inc
push
push
fadds
jnp
loopne
movsl
xchg
xchg
pop
or
push
pop
aaa
jmp
jmp
sub
scas
push
mov
js
pop
jbe
sub
aaa
test
inc
xor
aas
jnp
mov
out
mov
and
and
or
sbb
adc
pushw
jecxz
jmp
cltd
mov
out
jbe
addb
lock
sub
loope
loopne
arpl
adc
je
fwait
or
jbe
push
add
push
mov
outsl
lret
mov
pop
push
xchg
lods
inc
ljmp
jp
jns
mov
dec
adc
xchg
push
in
xor
icebp
fdiv
pop
or
mov
cld
cld
repnz
jnp
movsl
add
xchg
xor
jecxz
decl
icebp
sbb
adc
call
fsubrl
mov
xchg
ret
sbbl
adc
mov
adc
popf
mov
shl
loopne
mov
and
jp
iret
sub
and
inc
sarb
push
in
push
insb
mov
xchg
cmpb
leave
or
inc
sbb
pusha
xchg
imulb
pop
xor
insb
jo
push
shl
jno
movsl
adc
adc
and
ret
pushf
xchg
loop
cmp
popa
je
cli
adc
fs
mov
mov
push
ds
repnz
push
mov
add
js
js
mov
dec
loop
sahf
push
push
and
test
inc
fmull
mov
call
pop
mov
jmp
cmp
cmc
div
push
fdivs
xchg
xor
lods
lcall
xchg
arpl
pop
sub
inc
jl
push
js
inc
mov
cmp
pop
lock
fists
inc
scas
mov
sbbl
or
shlb
and
jae
jmp
mov
orb
inc
push
xlat
insl
push
push
push
das
or
sti
mov
mov
or
inc
xchg
mov
sub
iret
iret
cmp
sub
fiaddl
mov
pushf
push
mov
ds
lods
xor
push
data16
loope
pop
cmp
adc
xchg
pop
lret
mov
xor
mov
sbbl
insl
shl
ret
adc
pop
cli
adc
dec
xor
repz
clc
pop
mov
stc
sub
mov
xchg
pusha
dec
sbb
inc
fistpll
push
xor
aam
std
test
rcl
std
std
mov
push
imul
xor
xchg
cli
cmp
push
fmull
push
jle
dec
mov
mov
ja
std
movsb
andb
adc
fdiv
mov
ja
loope
cmp
js
mov
insl
dec
dec
lcall
lock
xchg
push
mov
inc
mov
test
and
rcrb
stos
jo
mov
popa
cltd
sbb
xchg
fcmovnb
mov
je
clc
decl
outsl
clc
jo
jne
movsb
lcall
daa
cmp
lods
and
ss
xor
lock
adc
add
sbb
loop
xchg
in
mov
pusha
inc
pop
and
aaa
sub
cli
out
daa
int
stos
push
cmc
push
ljmp
xchg
shlb
mov
mov
and
or
sub
mov
push
jo
test
cs
jmp
into
scas
test
outsl
adc
xor
fistl
or
mov
xchg
add
adc
mov
cld
loope
adc
cmpsl
iret
rcr
enter
inc
xchg
jne
cmpl
notl
imul
icebp
test
jns
lcall
xchg
ret
in
xchg
fadds
mov
decb
adc
pushl
fwait
rcll
and
push
lock
hlt
mov
jecxz
ds
mov
mov
outsl
mov
lahf
popf
cld
mov
sbb
cld
sub
cltd
xor
pop
lea
call
cld
xor
fildl
aad
sbb
push
or
mov
sub
negl
jno
add
or
insb
int3
ds
mov
xchg
or
divb
jo
and
in
mov
outsl
mov
sbb
insb
out
xlat
push
mov
loopne
push
icebp
mov
push
add
das
rcrb
ss
js
jle
cmc
sarb
push
push
insb
dec
test
sbb
mov
jl
es
push
out
sbb
inc
cmp
clc
stos
sub
mov
scas
test
mov
fbld
pop
inc
cmp
inc
call
pop
fnsave
mov
mov
sbb
mov
add
sbb
inc
push
cld
jnp
cli
pop
cli
mov
scas
rcrb
lock
and
outsl
hlt
pop
stos
popa
int
pop
pop
mul
or
sub
mov
je
loopne
shrb
lock
stos
aam
cmc
sbb
in
repnz
jmp
hlt
frstor
mov
cmp
cli
push
bound
cmc
mov
add
lea
rorb
add
mov
lock
dec
sbb
cli
mov
jb
xor
and
in
and
addr16
sbbb
cmp
mov
push
xor
ficoml
adc
cs
xchg
dec
and
mov
or
cld
and
mov
in
xchg
cmp
mov
pop
inc
sub
add
enter
ficompl
lods
int3
pop
scas
push
dec
fldt
aaa
or
fadd
sbb
sub
mov
sub
adc
cmpsb
mov
push
or
leave
sub
pushl
sbb
pop
rorb
jge
sub
inc
mov
push
icebp
jg
inc
add
inc
xchg
iret
insb
xor
into
rcll
sbb
out
push
mov
incb
and
pop
add
or
bound
push
jle
cmp
and
or
xchg
lret
jno
pop
push
mov
mov
ret
divb
push
pop
push
lcall
inc
cli
pop
into
cmp
in
jle
insb
push
cmc
adc
add
inc
mov
aam
sbb
or
iret
push
push
jp
cmp
inc
cmpsb
pop
pop
cmp
addl
add
mov
adc
mov
sub
je
or
push
sbb
sub
into
mov
jl
test
sti
xchg
mov
cmp
xor
or
addr16
aam
fwait
jb
pop
cli
mov
and
test
test
add
fists
pop
push
sub
mov
mov
adc
mul
and
gs
sti
inc
stos
bound
lahf
lock
fldt
xacquire
cmp
arpl
mov
test
movsb
cmpsb
call
imul
mov
mov
jl
addr16
leave
pop
add
and
cmp
mov
inc
mulb
andb
decl
inc
mov
out
dec
inc
shlb
xchg
sbb
inc
pop
mov
cld
push
fwait
incl
mov
mov
push
mov
data16
scas
inc
dec
movb
pop
dec
mov
mov
pop
mov
sub
imul
sbb
add
mov
sbb
out
add
call
aad
inc
jle,pn
add
rorb
movsb
mov
pushf
fdivl
daa
lods
nop
inc
js
fyl2x
adc
push
xchg
mov
cmc
shlb
mov
adc
mov
jl
shlb
mov
add
fiaddl
pop
loop
sbb
fldlg2
incb
mov
ret
dec
add
mov
lds
cmp
xchg
outsl
lahf
pusha
cld
inc
jg
lods
wbinvd
cs
xor
notl
in
mov
cmpb
int
mov
xchg
add
push
enter
nop
hlt
mov
test
adc
pop
je
shr
mov
pop
push
jnp
xor
mov
mov
sub
add
push
lods
add
push
repz
push
xchg
xchg
lmsw
mov
test
cli
pushf
inc
push
pop
mov
mov
ja
shlb
sbb
push
xor
jbe
shll
dec
lahf
xlat
dec
mov
sub
in
inc
xchg
mov
mov
or
in
push
and
pop
jns
mov
fsubr
jle
dec
xchg
mov
adc
arpl
inc
xlat
or
cmp
dec
into
fnsave
inc
pushf
or
sub
mov
sbb
ret
fs
jp
pusha
jbe
add
loopne
jecxz
adc
data16
cwtl
sub
jo
xchg
popa
add
imul
mov
std
push
insb
mov
lea
stc
andb
orb
inc
addl
or
or
cmp
ret
pop
mov
inc
add
push
popf
je
ret
je
call
cmpsl
mov
inc
lret
sbb
aad
inc
stc
and
jp
divb
movhlps
inc
add
lret
jl
lds
cmc
int3
ljmp
loop
pop
scas
xchg
das
incl
pop
icebp
adc
loop
cmp
or
addl
aam
mov
out
add
cs
bound
loop
fsubs
xorl
mov
lock
cmp
popf
push
adc
cwtl
rclb
xchg
shl
lahf
fiadds
cmp
mov
incb
push
and
push
mov
fadds
mov
movsb
mov
mov
paddusw
test
push
enter
stos
popf
je
mov
or
mov
inc
xlat
test
sbb
pop
sub
orl
clc
pop
aaa
adc
xchg
mov
dec
push
sub
mov
add
pop
mov
and
sbb
and
sbb
insb
dec
jnp
xlat
mov
pop
mov
inc
pop
js
mov
loope,pn
cld
call
or
in
mov
sub
pop
std
inc
subb
movsb
jg
test
fdivl
pop
gs
jae
scas
inc
popf
clc
xchg
push
shlb
out
clc
mov
xchg
mov
mov
fidivs
aam
inc
adc
cli
add
test
pop
xchg
jl
outsl
mov
outsb
mov
dec
dec
mov
insl
push
push
clc
mov
imul
and
stos
mov
mov
cmc
sahf
repnz
int
dec
xlat
std
jns
or
pop
hlt
push
mov
sub
cmpsb
in
into
mov
push
ljmp
ret
sbb
xlat
and
adc
mov
mov
insl
cli
nop
add
inc
push
add
callw
adc
pop
jbe
push
adc
mov
cld
movsb
mov
leave
xor
aaa
cmpsb
in
xchg
adc
daa
cmpsl
ja
aam
sub
push
lcall
fbstp
stos
cld
jmp
pushf
test
mov
mov
sbb
or
mov
sub
xchg
aas
loopne
imul
mov
enter
jb
jo
aas
dec
roll
push
stos
aam
mov
stos
mul
cld
ja
sbb
jle
xlat
test
and
sub
ja
es
test
push
xor
and
rcll
cmc
mov
mov
in
mov
stos
inc
int
lcall
jnp
lea
sub
add
xchg
sbb
mov
adc
stos
jbe
adc
pushf
ret
ficoml
test
xor
imul
or
mov
and
ljmp
in
insl
lods
in
lcall
xchg
jo
repz
dec
lock
fcomp
ja
mov
xchg
xor
in
cmpsb
jg
jle
mov
push
push
sub
cmp
nopl
mov
dec
pusha
mov
fcompl
stos
inc
push
jmp
mov
jbe
addb
xor
push
es
and
std
insl
bound
sub
and
test
std
incb
mov
shlb
sub
cld
mov
sub
pop
mov
adc
lock
cmp
xor
js
incl
cmp
lahf
nop
xchg
mov
cmp
ljmp
lret
notb
lea
push
inc
ret
pop
pop
mov
lcallw
cmpsl
lret
movsb
inc
cmc
pop
inc
lods
or
jp
mov
mov
outsb
xchg
and
icebp
cli
add
jecxz
into
xor
lret
push
daa
cs
or
pop
and
mov
out
and
fldl
mov
outsl
add
stos
sti
aas
sbb
push
std
and
pop
adc
dec
pop
mov
push
and
adc
adc
adc
imul
dec
pushf
and
pop
inc
shlb
xor
in
pop
mov
mov
push
sbb
mov
cld
pop
push
pusha
insl
lods
data16
adc
jl
fisubrs
imul
mov
or
adc
nop
sub
shlb
jp
push
pop
lods
add
ds
and
jmp
mov
fisttpl
jmp
or
icebp
je
arpl
fldt
enter
movl
ret
lods
sub
scas
mov
inc
jp
aam
push
mov
data16
popa
push
cmp
fwait
daa
add
pusha
ja
call
lock
or
das
sbb
xchg
call
adc
pusha
call
out
rcrl
mov
inc
pop
aam
je
mov
cli
sub
das
fs
push
icebp
stos
dec
sbb
call
popa
rcll
mov
xor
shll
test
sbb
adc
stos
hlt
das
cld
data16
xchg
xchg
clc
inc
inc
or
and
test
push
or
mov
sub
aas
lock
lcall
push
mov
mov
cwtl
cmpsb
mov
das
addl
add
xor
pop
sbbl
adc
inc
lock
xchg
ljmp
add
dec
adc
pop
adc
dec
fwait
and
adc
xchg
je
jo
iret
push
lods
pop
cmpb
ljmp
mov
lret
ja
mov
js
cmpsb
mov
nop
push
xlat
stos
addr16
lods
lcall
mov
shrl
cwtl
cmp
or
xor
push
ljmp
push
xchg
out
loop
fistpl
jmp
out
fdivrs
jnp
dec
adc
loopne
adc
adcb
hlt
and
popf
test
cmc
mov
jno
pop
mov
jne
test
jo
inc
repnz
xchg
test
mov
fwait
ss
add
divl
jge
sbb
lea
outsl
loope
stos
jp
push
jmp
push
add
ret
sub
sbb
femms
sarb
imul
aam
subb
call
push
jge
divb
int3
stos
push
xchg
rcll
adc
adc
incb
subb
rolb
sbb
or
pop
icebp
fwait
stos
pop
lods
push
imul
push
lods
dec
xlat
add
sub
or
cmp
fwait
shll
test
js
aad
xor
dec
lcall
scas
mov
clc
xor
sar
cmp
scas
mov
push
xor
xor
and
imul
mov
jno
loope
sbb
mov
lret
or
lret
or
cmc
cmpsb
cltd
jbe
xchg
scas
mov
movnti
cld
push
xchg
mov
fwait
ljmp
outsb
lret
nop
push
sbb
mov
pop
mov
xchg
pushf
cmp
cs
jnp
xchg
sbb
push
or
mov
or
adcb
push
mov
inc
sbb
repz
add
push
mov
bnd
subl
cld
addr16
loope
fs
insl
push
pusha
movsb
mov
push
jle
les
sub
loopne
pushf
jo
incl
adc
call
and
xchg
addl
daa
or
arpl
adc
mov
test
cmpsl
cwtl
imul
pop
std
pop
std
xor
cmpsb
jp
xor
sub
nop
lret
ljmp
push
push
mov
or
adc
fsqrt
sbb
je
push
mov
mov
xor
stos
subb
xchg
lret
shll
cwtl
insb
popa
or
stos
sbb
bound
or
popa
inc
aad
pop
insb
ret
sbb
lods
jl
mov
fcmovnb
mov
loop
or
rol
sbb
rorl
inc
adc
test
movsb
dec
mov
subl
push
mov
push
enter
fwait
in
test
fildl
jne
pop
cmp
jb
sub
xor
hlt
fwait
lock
jns
gs
mov
jg
pop
ljmp
fsubrl
or
inc
arpl
lcall
add
pop
sti
sti
add
dec
jp
cmpl
jb
loop
and
xor
insb
mov
das
xchg
loopne
jp
push
lret
mov
push
mov
clc
jmp
daa
xchg
push
bound
in
bound
mov
mov
mov
push
imul
fsubrl
das
mov
lret
xlat
adc
sbb
lock
loopne
cltd
incl
sbb
scas
xlat
les
loop
jecxz
lret
les
xlat
test
repnz
push
pop
add
push
add
sti
call
sbb
add
and
mulb
fwait
rorb
mov
loop
xchg
jge
lcall
pushf
xor
insb
jl
ljmp
xchg
push
dec
inc
jno
aas
in
shl
mov
inc
mov
adc
mov
xchg
scas
cmp
xor
dec
sub
jge
ljmp
testb
lods
xor
fucomp
inc
or
gs
dec
ficomps
inc
or
and
cmp
cmc
hlt
mov
decb
jbe
xchg
push
jmp
push
bound
sahf
lcall
rcrb
out
fldl
cltd
and
dec
sbb
inc
or
in
cmp
test
jp
inc
mov
cmp
es
or
push
scas
insb
enter
adc
dec
cmc
lods
shr
sarl
lret
jo
adc
fidivs
mov
js
out
add
in
jne
xor
cs
ret
or
call
aad
jo
sbb
push
mov
push
ror
cmp
push
mov
mov
or
cli
inc
jmp
fwait
orb
in
pop
xchg
mov
je
lret
cmp
mov
sbb
push
cmc
and
les
popa
jb
dec
outsb
and
jl
mov
add
dec
dec
rcl
stos
aam
lock
les
cmp
push
push
push
mov
add
call
scas
and
daa
pop
or
ja
jmp
lods
stos
ret
incb
xor
mov
mov
aam
out
enter
test
xor
inc
shr
lods
pop
inc
mov
fxtract
mov
sub
js
movsb
jno
movsl
call
adc
inc
add
fwait
or
cs
lock
repnz
std
js
xor
cs
das
inc
mov
pop
mov
adc
or
sbb
inc
mov
test
popf
loopne
jno
hlt
lret
scas
mov
stos
mov
nop
cmp
xchg
cmp
daa
notl
mov
hlt
call
out
lea
pop
and
sahf
nop
lods
ret
outsb
cli
xorl
jbe
inc
and
xchg
adcl
and
push
and
and
mov
subl
pushf
jmp
aam
aaa
push
mov
aas
xchg
mov
or
mov
stc
inc
dec
inc
lods
lret
push
dec
and
scas
push
fidivrs
aad
add
mov
pop
jb
xchg
call
lea
xor
or
dec
stos
xor
incl
jbe
add
iret
inc
adc
jmp
daa
xorl
repz
mov
je
cwtl
mov
xor
fnstenv
pop
icebp
outsl
in
outsl
or
sub
dec
fs
js
sbb
jl
aam
call
mov
call
addl
lods
push
push
pop
push
adc
jp
and
pop
pusha
mov
mov
je
popa
popa
and
add
jne
in
dec
addr16
xchg
xchg
mov
inc
pop
std
scas
cmp
not
bound
mov
xchg
aam
outsb
out
lcall
xorb
xor
cltd
mov
dec
jmp
out
xor
clc
and
setb
loopne
lcall
push
testl
jmp
ret
jp
add
icebp
shll
mov
rorl
fmuls
mov
dec
cmpsb
jmp
aam
hlt
ss
fildl
test
jnp
or
pop
mov
iret
or
fdivp
jge
jnp
xor
xor
push
sarb
inc
call
mov
or
mov
mov
pop
sub
scas
je
pop
pop
jl
test
inc
mov
xor
out
cmp
xor
std
add
jns,pt
testb
jmp
or
push
inc
mov
cli
sahf
jg
jne
inc
ss
mov
ret
pop
and
scas
mov
mov
js
andl
fdiv
pop
jo
jg
push
test
xchg
pop
out
loop
out
cltd
mov
add
xchg
jo
mov
call
dec
cmpsl
and
in
or
jge
or
inc
es
inc
mov
mov
mov
mov
jmp
adc
leave
mov
pop
lods
aas
adc
dec
aaa
xchg
clc
xor
leave
push
pop
cli
out
sbb
push
not
int3
fsubrl
push
and
sub
push
or
dec
adc
lock
add
in
icebp
shll
je
mov
pop
push
mov
pop
outsb
sbbb
loop
test
fcoml
mov
test
adc
test
jbe
mov
pushf
repz
mov
decl
cs
mov
xor
mov
jb
cli
mov
pop
mov
adc
and
aas
push
xor
in
sub
and
clc
popl
mov
mov
pusha
cmp
in
cmpsb
incl
or
push
shlb
fcompl
cmp
jno
je
add
jge
pop
sahf
jae
or
iret
xor
stos
push
mov
inc
cmp
mov
cmp
int
cld
push
mov
jle
push
sub
int
push
movsb
and
add
mov
sbb
test
nop
into
out
clc
outsl
jg
insl
addl
jne
data16
rdtsc
pusha
aam
pop
sbb
jne
push
mov
imul
sbb
faddl
ficoml
mov
imul
cmp
jg
aas
call
lahf
ljmp
push
push
pop
pop
clc
push
adc
sbb
jo
hlt
fidivs
xor
sbb
insb
lock
clc
imul
sub
loope
mov
xlat
and
int
lahf
clc
roll
jg
dec
hlt
gs
inc
test
fnstcw
movsb
xor
sti
imul
fistl
dec
mov
and
arpl
fiaddl
test
adcb
clc
stos
enter
cmp
lret
iret
mov
movsb
cwtl
xchg
add
aam
int3
and
adcb
push
pusha
arpl
mov
aam
lcall
jo
cs
fisubrs
stos
jecxz
mov
sbb
sub
pop
aam
div
test
and
adc
mov
jo
jo
shl
sysenter
dec
push
test
stc
test
insl
in
add
call
or
ficoml
ja
pushf
ljmp
ret
inc
xchg
sti
aas
or
stos
test
cltd
jl
sbb
jmp
movb
add
cmpb
push
shl
xchg
sbb
inc
gs
js
lods
xchg
xor
aas
pop
mov
int
es
jecxz
call
test
jb
nop
daa
into
inc
imul
adc
cmpb
jae
cmc
adc
inc
test
cmpl
sbb
push
xchg
mov
outsl
mov
movsl
subl
sbb
negl
adc
mulb
scas
inc
push
stos
adc
rcrb
xor
sbb
jne
pop
sbb
iret
stc
adc
ret
jnp
in
aam
insb
dec
add
push
test
outsb
lods
adc
ljmpw
jle
sub
inc
mov
movsb
add
cmp
adc
mov
mov
ja
inc
cli
jp
cmpsl
lea
and
dec
out
jo
mov
lods
ret
fimuls
sub
sbb
mov
pop
scas
xchg
inc
add
cmpsb
pop
pop
xchg
inc
add
sub
xchg
fadds
add
iret
ljmp
adc
cli
popa
cmp
xchg
int3
sbb
rclb
das
pop
sahf
addr16
imul
outsb
pusha
mov
pusha
movsl
sub
fs
leave
ja
clc
mov
insl
les
mov
add
sti
push
imul
loopne
inc
adcb
jle
xor
or
or
jle,pt
sub
loope
mov
cld
and
popa
xchg
mov
xlat
addr16
imul
je
cmp
xor
out
sbb
aas
fdivs
cmp
js
jmp
inc
sbb
pushf
fisubrl
jae
jnp
and
jle
cmpsb
pop
inc
lock
xchg
sub
test
lods
cmc
inc
fadd
bound
insl
adc
sbb
cmp
inc
mov
mov
lcall
sub
sbb
pop
inc
cmp
mov
inc
jl
lock
adc
out
dec
popa
insl
enter
cli
outsb
test
je
loopne
cmp
mov
rorl
cmp
dec
test
jae
sub
xchg
sub
pushf
popf
cmp
mov
lock
push
lds
or
in
inc
mov
xor
adcl
orb
add
sahf
mov
xchg
add
cmp
pop
les
es
inc
or
xchg
test
shrl
mov
or
mov
fldl
add
jmp
xor
gs
js
rorl
les
xchg
add
into
test
aad
jl
cmp
and
pushf
mov
mov
cmp
bound
xchg
xor
out
test
xchg
sbb
mov
and
mov
push
adc
xor
ja
pop
push
pop
push
shrb
gs
popf
rorb
push
das
and
sub
mov
cmp
cwtl
hlt
das
xor
push
or
scas
or
adc
add
je
hlt
xchg
add
jp
xchg
cld
ds
negb
popa
push
or
jl
dec
pop
mov
ss
test
pusha
addb
mov
mov
xchg
pop
outsl
mov
or
jbe
mov
mov
push
aaa
xlat
lcall
push
or
pop
xor
push
fimuls
stos
pop
testl
fdivrs
mov
jmp
ljmp
loopne
and
inc
jle
push
scas
ljmp
in
push
add
inc
into
xchg
fcoms
jg
icebp
xor
mov
or
shl
push
xor
mov
and
or
and
jecxz
in
or
push
xchg
mov
adc
loopne
pop
lret
mov
jg
xor
add
mov
lock
or
dec
pop
aas
ds
xchg
mov
cmp
aam
adc
mov
or
mov
push
adc
int3
adc
mov
je
mov
mov
cltd
orb
lods
imul
stc
repnz
clc
fists
addr16
and
stos
pop
loopne
movsl
or
push
or
int3
les
subl
add
loopne
shl
call
jle
inc
sbb
cmc
mov
pop
jg
mov
pusha
movsl
jl
stc
mov
aaa
hlt
sub
movl
jg
inc
in
mov
xchg
notb
ljmp
lods
incl
push
xchg
push
decl
and
jmp
cmp
gs
clc
aas
jnp
xor
shl
adc
mov
imul
inc
ret
pop
dec
inc
fnstcw
ret
push
lds
and
cmp
gs
rclb
cmpsb
mov
fidivrs
aas
test
pop
pusha
add
call
dec
loop
inc
addl
dec
aas
arpl
sar
aam
pop
roll
insb
subl
mov
add
inc
cmp
lea
mov
sbb
or
mov
lea
dec
mov
inc
and
pop
sbb
sar
xchg
dec
and
cwtl
sub
rolb
jno
mov
mov
inc
outsl
cmp
jo
lcall
lock
xor
subb
sti
fwait
enter
test
sbb
or
inc
cmpsb
addl
daa
or
fidivrl
aaa
pop
or
xor
dec
pop
push
push
push
outsl
mov
cmp
orb
cmpsb
imulb
addb
repz
aas
arpl
fdivl
lea
xor
inc
sub
push
mov
jg
test
dec
ljmp
cmp
fs
xchg
sub
push
enter
push
pop
icebp
sub
dec
sbb
aas
jecxz
jne
fs
or
popa
out
and
scas
shlb
jns
push
push
sbb
fdivrp
add
pusha
cmp
gs
cmpsb
js
pop
adc
pop
add
vxorps
nop
sub
push
mov
inc
mov
or
jae
adc
adc
clc
std
enter
sbb
loopne
subb
dec
aam
add
fcom
or
jnp
and
enter
mov
popf
or
ljmp
dec
insb
xchg
mov
add
movsl
not
andl
xor
adc
rolb
fiaddl
dec
xor
xchg
adc
aas
dec
fcompl
push
and
pop
and
and
push
adc
adc
mov
mov
or
jg
jmp
aaa
mov
sbb
push
pop
in
and
in
cmp
push
push
fninit
adcb
ss
out
pop
pop
adc
andb
jmp
pop
pop
pop
fwait
sub
cmpl
loopne
hlt
sub
out
pop
ss
data16
inc
mov
or
stos
lock
pop
jo
jbe
sub
cmc
jb
mov
push
pop
add
jo
mov
out
call
or
sub
sarb
iret
mov
push
cld
pop
add
scas
push
fdivrl
leave
sub
add
cmpl
xchg
fucomp
fdivrp
shr
or
ljmp
dec
shrb
push
cmpsb
inc
inc
cmp
pusha
out
jne
inc
push
fidivrl
mov
and
cmpsb
stos
jo
js
push
mov
imul
mov
fsubs
das
jecxz
or
add
ja
in
push
add
push
jge
repz
mov
inc
xorl
out
sub
pop
dec
sub
cmp
mov
inc
in
inc
mov
scas
or
or
cmpsb
push
pop
pop
inc
in
pushf
cmc
push
addb
in
push
loop
js
idivl
adc
rolb
dec
ss
loopne
ljmp
push
loop
xchg
inc
inc
nop
sbb
or
arpl
jmp
sub
lods
jle
cmp
sbb
pop
addb
adc
bnd
in
xorb
in
cli
jg
mov
aam
shl
mov
rol
fdivrl
lods
add
in
add
pop
inc
jge
cmp
lods
mov
pop
hlt
add
fldenv
jecxz
jb
inc
outsb
faddl
push
sbb
dec
jl
and
cmp
test
test
sub
xchg
in
mov
mov
das
lods
and
leave
loope
out
mov
cmpsb
cld
add
mov
xchg
jle
mov
mov
gs
inc
mov
rcrb
dec
loope
sbb
add
add
push
cmpb
fdivr
xchg
pop
mov
data16
sti
sub
les
dec
xchg
jg
outsl
clc
ret
or
pop
sub
sbb
out
or
xchg
mov
jecxz
imul
adc
push
rcrb
sbb
inc
mov
mov
loop
test
jg
out
add
sub
aas
xor
icebp
icebp
mov
sub
jnp
xor
add
pop
adc
cmpsl
arpl
int
jne
inc
sahf
xor
mov
or
mov
ljmp
adc
aaa
rorl
fwait
jge
adc
inc
insb
cs
mov
mov
inc
mov
and
xor
loopne
ljmp
cmpsb
scas
inc
adcb
mov
jo
inc
in
and
rclb
pop
je
fsubp
cmp
mov
adc
jecxz
loopne
xchg
sub
or
clc
dec
sub
test
dec
cmp
mov
cmp
mov
incl
mov
cmp
imul
adc
fbld
xchg
add
jns
mov
mov
fisubrl
and
inc
and
bound
push
call
aaa
cmpb
idivb
mov
insb
lret
pop
int3
enter
loope
pop
fimuls
adc
and
sbb
adcl
nop
and
outsl
push
xchg
fwait
adc
stos
cmp
mov
cmp
and
mov
sbbl
mov
jo
rorb
ljmp
push
sub
xchg
inc
fs
lcall
fwait
daa
mov
jno
dec
xchg
jne
or
ds
push
mov
mov
dec
lods
int
pop
hlt
fwait
inc
push
sahf
int3
adc
pop
popa
aas
dec
mov
cmpsb
jb
push
jno
jno
and
mov
movsb
ja
fisubrl
fbld
push
dec
xchg
cmpsl
clc
outsb
das
and
add
add
jno
mov
jecxz
inc
aaa
pop
ficompl
out
jle
push
std
mov
pop
push
lods
into
sbb
sbb
inc
mov
pop
fsubrl
or
push
ja
cli
loop
stos
mov
pushf
rcrb
add
push
add
lret
push
mov
jg
test
lcall
clc
pushl
pop
and
scas
je
fcmovnbe
adc
fadds
ss
mov
and
adc
pusha
loopne
fs
pop
ret
sbb
ljmp
mov
cmpsl
std
cwtl
or
sahf
lock
ja
inc
fbstp
mov
cmpsl
ficoml
push
sbb
or
mov
add
xchg
test
add
loope
push
test
jo
add
jmp
push
mov
cwtl
outsb
push
sbb
cmp
mov
jp
fiaddl
sub
addb
mov
mov
lcall
add
push
dec
xchg
insb
and
inc
add
jg
fstpt
push
or
mov
sbb
adc
lret
adc
aas
push
jp
jg
add
popf
cmp
xchg
add
or
in
fwait
inc
and
inc
sub
mov
and
jmp
inc
insl
jae
and
pop
inc
sub
pop
cwtl
or
jbe
mov
lock
mov
dec
repz
aas
pusha
xchg
mov
push
inc
jg
lods
xchg
pop
pop
dec
xlat
insb
aam
push
ljmp
mov
mov
mov
gs
addb
shrb
adc
mov
pop
adc
cmp
and
sbb
fcoml
mov
push
push
sbb
fnstsw
shlb
popa
inc
push
fwait
mov
and
ljmp
sahf
and
and
shll
mov
and
add
jo
cmc
or
or
es
lds
mov
push
add
mov
mov
cli
push
jmp
inc
jl
jmp
out
adc
fisttpl
xor
rclb
fidivl
sub
fidivs
subl
add
insb
xor
test
push
rcll
xchg
adc
outsb
adc
inc
les
mov
lock
mov
push
jmp
cmpsl
jmp
ja
sbb
dec
ds
inc
ss
add
test
fimuls
sarb
inc
xor
test
jg
decb
or
adc
or
pop
sub
ficoms
add
or
mov
jmp
dec
cld
xor
das
push
aaa
loopne
jmp
inc
pushf
adc
cmpsb
jno
popa
cmp
lds
xorb
movsb
cmpl
repnz
lahf
cmpsl
add
ss
mov
loope
mov
add
enter
loope
xor
cmp
cmpsl
pop
cmp
push
mov
je
mov
lcall
or
push
push
dec
lods
pop
and
xor
sbb
mov
xchg
push
pop
push
xchg
pop
mov
insl
imul
inc
nop
mov
push
mov
imul
imul
or
pop
inc
lahf
xchg
jo
lahf
sub
fadds
mov
rorl
jle
data16
push
test
sbb
sub
ret
ljmp
mov
repnz
pop
test
das
push
and
pop
sbb
cld
pushl
adc
mov
dec
or
or
xor
ret
add
test
xchg
js
movsl
xlat
push
fbstp
fidivl
push
pop
or
gs
orl
jae
dec
cmc
fbstp
lahf
adc
dec
jno
dec
arpl
add
add
mov
mov
aaa
lock
test
fldt
movsl
lock
sub
mov
test
push
cld
pushf
fidivrs
popa
adc
insb
pop
icebp
or
imul
outsl
inc
push
test
push
test
je
js
repz
pusha
add
mov
push
push
stos
pusha
jmp
pop
loopne
push
je
mov
pop
jo
loop
or
rol
mov
mov
fistpl
mov
popa
popa
push
decl
cs
add
mov
lret
or
lea
test
push
enter
jb
pop
xor
bound
loopne
push
inc
pop
les
sub
xchg
push
gs
mov
clc
scas
xor
adcl
jb
imul
cmp
jo
push
sti
in
xchg
hlt
add
xchg
je
in
xchg
rcrb
or
and
jno
push
mov
lock
fs
pushf
xor
mov
ja
mov
lret
pusha
stos
inc
call
inc
add
add
mov
or
sub
add
daa
sub
mov
jne
fsubrp
mov
repnz
xchg
outsl
mov
aam
jno
mov
xchg
pushf
mov
push
pusha
dec
mov
push
into
movsb
xchg
ror
jnp
xor
jns
add
dec
rcrl
xchg
clc
dec
sub
push
xchg
jp
dec
push
sbb
cli
inc
sub
enter
pop
xor
outsb
notb
icebp
add
cmp
sti
addl
sahf
jmp
pusha
mov
pop
push
pop
sub
sbb
scas
push
ret
lock
cmp
inc
sbb
leave
jns
ret
aaa
mov
cmc
dec
lret
adc
loop
lock
mov
add
push
add
cmp
mov
and
test
sub
fdivrs
mov
adc
stc
sbb
push
clc
lahf
mov
aam
aad
cmp
add
movsl
pop
ljmpw
divb
insl
xchg
push
jmp
test
push
hlt
sub
mov
mov
mov
aam
pusha
lds
loopne
fisubs
adc
cwtl
cltd
mov
gs
mov
adc
rorl
nop
xchg
sbb
std
arpl
es
sub
push
das
push
pop
and
fs
movsb
mov
cwtl
sub
adc
sahf
fisubs
mov
pop
insl
add
mov
data16
pop
jp
mov
mov
lret
push
insb
adc
out
sbb
mov
cmp
adc
fstpt
pop
mov
pop
lcall
mov
sub
sahf
pop
mov
in
xor
loop
sbb
jl
loope
xor
inc
sahf
push
dec
dec
cs
or
aaa
xchg
arpl
xchg
rcr
aam
cltd
loope
sbb
jp
hlt
mov
dec
rorb
or
jbe
into
xchg
cmp
in
or
inc
inc
leave
xchg
andb
or
in
stos
pop
or
push
mov
xchg
gs
popa
rcll
or
sahf
shlb
and
jle
adc
and
pop
rcr
adc
fwait
mov
inc
xor
mov
jecxz
decl
sbb
sub
pusha
push
jnp
xchg
mov
mov
clc
mov
or
push
pop
xor
movsl
mov
insb
cmp
testb
and
xor
push
inc
sub
fldenv
fsubrp
add
pushf
pop
das
icebp
inc
push
fwait
xchg
sub
mov
mov
sbb
call
jg
push
icebp
ret
jns
out
clc
add
mov
add
cwtl
aam
dec
stos
push
xorb
adcb
push
mov
iret
in
in
fisubl
sbb
lret
pushf
jecxz
add
add
pop
mov
cmp
push
xchg
loop
xchg
xchg
xchg
inc
push
pop
flds
cmp
hlt
add
enter
add
aaa
push
cld
int
js
fcomp
loopne
ret
push
mov
stos
stc
sbb
sbb
add
add
inc
pushf
dec
xchg
outsl
xor
scas
inc
pop
xor
mov
push
in
out
pop
or
fwait
push
adc
pop
sbb
aad
xchg
cmp
cmp
test
mov
jo
or
dec
pop
jae
jp
enter
es
xlat
mov
push
aaa
xchg
in
test
add
js
inc
mov
lcall
add
js
inc
cld
call
nop
nop
jo
mov
cmp
jno
cmc
ja
sbb
adc
push
lea
lahf
int3
add
popa
and
xor
cmpsb
lock
push
loopne
dec
pop
roll
push
inc
xchg
icebp
hlt
ljmp
loopne
add
cmpsb
call
fldenv
hlt
mov
stos
push
adc
push
mov
icebp
push
lods
add
xchg
mov
push
and
arpl
cmpsl
shlb
sub
or
sbb
stc
mov
inc
aam
cld
sahf
mov
andb
arpl
test
lds
aad
mov
xlat
ds
and
cmp
and
sbb
mov
out
jne
test
mov
inc
xor
js
stos
inc
rolb
insb
dec
addb
sub
sub
cmp
sbb
mov
loopne
lahf
xchg
pushf
shlb
xor
push
test
dec
dec
sbb
scas
sub
cmp
orl
cmc
add
stos
push
pop
shlb
scas
dec
enter
add
adc
pop
inc
ss
jle
jmp
sahf
or
sub
test
lock
out
inc
roll
shr
xor
ret
stos
xchg
test
xchg
mov
insb
add
xlat
enter
add
les
pop
mov
je
cmp
and
pop
andb
dec
mov
ss
pop
icebp
mov
ret
repz
punpcklbw
and
scas
filds
outsb
mov
repnz
enter
outsb
push
jbe
sahf
cli
push
and
mov
pop
jbe
pop
mov
fiadds
aam
movsb
and
xor
inc
call
and
pop
shll
int3
add
mov
repnz
inc
popf
loop
ret
pop
inc
or
jnp
out
mov
pop
test
fiadds
scas
add
add
mov
push
pushf
ss
xchg
lret
add
pusha
lds
lret
sbb
repz
iret
jne,pn
inc
and
test
push
adc
aas
mov
repnz
add
inc
pop
mov
fs
cmp
pop
adc
test
enter
push
test
aas
cs
or
xchg
lods
sub
xorb
fs
or
sbb
lret
stos
cmc
and
loope
dec
lret
into
mov
fucomip
ret
and
add
add
push
sbb
inc
mov
push
push
pop
shrb
inc
mov
cmp
ds
insb
dec
or
repnz
jl
xor
dec
pop
sbb
and
cmp
out
mov
inc
aas
add
incl
add
jo
stos
or
inc
push
xor
das
shlb
pop
addr16
inc
xchg
mov
jns
rorb
adc
fucomp
push
and
hlt
inc
sbb
es
roll
aam
adc
mov
mov
push
xchg
mov
shrb
ljmp
push
inc
test
sub
es
dec
pusha
out
push
in
xor
inc
cmpsl
and
cmc
in
test
mov
clc
out
in
cmpb
xchg
push
cmp
stos
out
mov
xchg
ds
mov
pop
scas
incl
popa
mov
mov
enter
incl
dec
adc
push
mov
cmc
push
inc
cli
pop
mov
inc
sbb
insb
rcrb
push
xor
cmp
sub
rcll
les
push
jge
xchg
sub
add
mov
fstpt
add
inc
jp
adc
gs
push
dec
sub
jl
loop
pop
cmp
insb
into
fwait
jg
into
adc
lret
or
xor
loopne
daa
lods
add
pusha
push
add
push
loopne
adc
jb
push
sbb
jge
mov
adc
imul
push
lock
icebp
lcall
sub
stos
mov
and
push
xlat
enter
jecxz
repnz
stos
pop
cltd
je
sub
xor
mov
dec
dec
dec
std
inc
jnp
mov
pop
testb
push
aad
or
out
loopne
repnz
ret
dec
inc
imul
inc
out
cli
push
dec
adc
cmp
adc
adc
xor
or
and
ljmp
sub
jg
jbe
mov
jecxz
mov
mov
and
pusha
lea
les
push
movsl
test
pushf
sbb
repz
lods
sbb
cmp
jl
mov
mov
out
or
das
jge
pop
cmc
aad
push
mov
mov
inc
and
stc
ret
repnz
pop
sbb
hlt
pop
dec
stos
or
pushf
call
pop
imul
xor
aam
push
push
rcrl
dec
push
dec
movsb
int
lods
add
insb
lock
jns
scas
mov
xor
ret
jmp
int3
imul
adc
dec
xor
mov
jmp
hlt
mov
int
js
rorl
mov
shll
inc
mov
sub
aaa
int3
jmp
or
jle
push
mov
cmpsb
icebp
stos
and
aas
add
fs
inc
jmp
test
push
sbb
add
lcall
push
mov
add
pop
pop
pushf
mov
dec
test
or
lock
repz
mov
bsr
jp
ret
push
mov
push
lret
subb
into
and
lahf
or
adc
mov
adc
es
or
or
jle
and
push
clc
fistpl
sbb
and
add
push
test
or
dec
push
mov
cs
push
inc
popf
cltd
cmp
sbb
je
or
les
mov
insl
je
ds
rol
pop
js
std
push
rorb
push
or
movsl
xchg
inc
xchg
clc
out
jg
push
fsubl
push
cmp
mov
pop
ljmp
inc
mov
jle
jecxz
stos
inc
jp
jle
add
xchg
mov
in
cmp
and
sub
loopne
push
or
mov
add
jb
ja
mov
jge
test
out
sbb
fcomip
pop
or
aaa
push
inc
aas
test
cld
push
cld
dec
fcom
mov
push
sbb
out
or
add
rclb
push
sbb
add
jl
gs
lret
ljmp
and
daa
mov
xor
sub
xchg
test
inc
mov
inc
and
leave
adc
jb
loopne
sub
cltd
movsb
jp
ret
or
xor
dec
inc
or
cmpsl
lds
mov
jp
sbb
or
aas
dec
push
jle
out
adc
jnp
sub
xchg
or
xor
imul
cld
subl
sbb
fisttps
adc
pop
xchg
das
fldenv
enter
rorl
scas
out
stos
call
jle
movsl
mov
jo
lahf
ss
hlt
mov
sbb
push
and
in
dec
rcrb
sar
push
pop
push
jbe
insb
pop
lahf
jae
dec
adc
mov
dec
orb
ficomps
sub
inc
call
xlat
mov
push
insb
loopne
imul
push
shl
fnstcw
mov
andl
jmp
push
cmpb
dec
jbe
sub
clc
stos
sbb
repnz
pop
mov
nop
mov
call
and
outsb
mov
cmovne
sbbl
mov
jae
cmp
sbb
nopl
or
lahf
add
stos
mov
iret
mov
jo
cs
lock
mov
add
xor
push
les
aas
jle
fs
mov
jl
iret
sbb
std
sub
sub
dec
into
dec
xor
scas
or
sub
mov
sbb
jbe
fcmovu
decb
cmc
clc
jg
dec
mov
leave
loope
add
mov
xor
stos
inc
or
scas
aas
rcl
sarb
mov
lcall
xchg
test
mov
in
lret
movsb
cld
pusha
add
xor
sub
stos
enter
insl
movsb
lods
push
lret
jmp
pop
repz
movsl
mov
pushf
fcmovnbe
ja
pop
pop
push
out
iret
lods
aad
mov
les
shll
popf
popf
cmpl
jge
and
push
and
js
xchg
data16
xchg
xor
inc
ljmp
jae
inc
dec
mul
shrl
mov
lods
ja
xchg
ret
std
bound
xchg
inc
xor
add
xor
in
in
mov
adc
mov
jbe
lods
fsubrs
cmp
cmpsl
push
into
cmpsl
out
push
rorl
mov
dec
gs
jbe
mov
adc
or
jl
jg
and
dec
fucomip
xlat
adc
push
add
lcall
pushl
fsubr
push
test
inc
daa
sbb
inc
cli
add
test
clc
cmp
dec
subl
xchg
subb
xchg
inc
pop
or
sahf
cmp
inc
or
dec
ret
inc
xchg
jg
imul
outsb
cltd
xchg
out
cmp
add
sbb
or
inc
pop
std
sub
pusha
xchg
xchg
int3
mov
and
test
or
aaa
adc
insl
cmp
push
inc
les
or
push
pop
push
lds
mov
int
or
pop
push
adc
mov
bound
out
ds
repnz
adc
test
add
movups
aas
push
cmp
and
aas
add
inc
add
mov
xor
testl
cmp
jo
roll
push
mov
mov
push
add
pop
aas
or
push
lock
hlt
pop
hlt
adc
inc
mov
scas
adc
mov
insb
mov
pushl
dec
cmp
out
xor
lods
pop
push
pop
fildll
out
jae
jbe
daa
push
ds
mov
push
dec
hlt
fildl
stos
cmp
mov
mull
adc
loop
xchg
ret
mov
mov
ret
sarb
adc
mov
in
mov
mov
pushf
cmp
lods
add
pop
or
xorb
leave
ljmp
push
rcrb
test
or
inc
or
cmp
adc
js
cmpl
imul
jl
dec
insb
lcall
outsl
ss
dec
stc
lret
dec
scas
mov
mov
pop
cs
jae
xchg
or
mov
sbbb
xchg
orl
incb
dec
mov
rcrb
popf
dec
push
ret
rorb
xchg
jl
and
nop
push
sub
and
es
mov
mov
mov
or
inc
nop
dec
test
outsl
push
mov
idivl
inc
push
push
data16
xchg
pop
pop
loopne
loopne
and
scas
pop
adc
mov
mov
jg
push
cmpsb
inc
xchg
arpl
movsl
aaa
mov
xor
sar
xor
mov
xchg
mov
int
pop
mov
imul
fdiv
repnz
mov
lahf
sbbb
and
inc
pushf
jge
int
jl
rorb
decl
test
lret
ljmp
ficompl
nop
pop
out
lods
out
xchg
mov
dec
pop
sbb
push
gs
push
add
jp
cmp
ret
addb
xor
popf
jge
test
or
xchg
inc
push
icebp
add
scas
dec
lods
stos
dec
jmp
cs
insb
cmpsb
scas
nop
xchg
sbb
aam
inc
in
scas
js
mov
in
rcrb
dec
adc
jae
xor
std
mov
adc
cwtl
push
mov
mov
fstl
fstpt
pop
iret
fs
adc
fsubrp
xor
pop
sub
repnz
and
ss
or
mov
fwait
je
gs
outsl
je
add
addb
jmp
insb
cmp
sub
push
test
shlb
popf
cmpb
loopne
fdivrs
aas
and
hlt
mov
insl
mov
jp
fcoml
xchg
xor
and
sub
sahf
loopne
decb
mov
xor
insb
xor
pop
or
sahf
sub
sbb
jge
loop
pop
es
and
pop
fmulp
or
bound
mov
aas
pop
push
pop
mov
cmp
filds
adc
push
xchg
xchg
cmpsb
jbe
jne
ss
sbb
or
mov
sub
cltd
jp
xor
cltd
push
dec
in
sbb
xchg
in
jnp
jnp
sub
loopne
lea
pop
add
jo
push
rol
pop
mov
aad
xchg
ret
jmp
je
test
push
movsb
and
mov
jo
js
push
std
pop
pop
dec
xor
inc
scas
add
inc
ret
sbb
or
or
cmc
mov
data16
in
push
ret
push
test
divb
scas
ret
arpl
pop
repnz
adc
std
xchg
pushf
jne
jp
mov
inc
cld
leave
jb
cld
push
iret
sbb
lret
aaa
push
into
lcall
lods
mov
ds
ffree
out
stc
ret
or
fs
sbb
dec
movsl
out
popf
pop
orl
mov
cli
adc
xchg
rcl
dec
pop
lock
xchg
inc
in
push
push
push
and
das
cmc
add
fwait
cmp
ja
cmpsl
push
repz
jecxz
xor
mov
jbe
push
push
adc
fcom
rolb
mov
loop
lahf
insl
sbb
xchg
push
data16
cmp
loopne
cs
ret
push
or
fwait
push
inc
xor
notl
and
add
out
inc
dec
sti
jp
xchg
sub
cs
mov
adc
stc
call
jp
movsl
roll
cmp
pushf
adcb
xchg
add
repz
jmp
cmp
in
mov
sub
sbb
lock
xchg
insb
or
in
mov
mov
loopne
fisubl
je
movsb
cmp
xchg
cmp
sbb
mov
cmpsl
test
shl
push
out
ret
outsb
inc
jp
sbb
clc
decl
lret
add
dec
lcall
shlb
ja
lcall
xchg
hlt
outsl
sub
popa
mov
popf
lods
lods
mov
dec
mov
popf
pop
in
mov
test
or
xchg
rclb
lock
rcll
mov
loop
mov
sbb
aam
nop
andb
add
dec
or
into
lock
jbe
pavgb
mov
out
out
sub
xchg
test
xchg
xor
int3
pop
lret
cmpsl
aas
jmp
movsl
xor
mov
jo
movsb
pop
sub
dec
sub
inc
loop
sbb
subb
subb
sub
scas
xor
jg
and
inc
fs
sub
test
cld
ficompl
inc
in
add
pop
xchg
cmpsl
fmull
or
lcall
sbb
fld
add
shr
scas
mov
or
jne
lods
lcall
outsl
loopne
dec
or
out
jle
ret
lret
pop
pop
xchg
ja
std
decl
dec
inc
or
addl
fst
pop
fwait
push
rol
subl
mov
inc
xchg
xchg
inc
xchg
lret
cli
ss
add
dec
push
sti
pop
ljmp
stos
outsb
and
jle
xchg
dec
sbb
jg
lods
test
int3
inc
pop
push
pushf
stos
adc
xchg
or
mov
inc
aas
ss
xchg
arpl
fdivs
insb
imul
mov
cld
sti
prefetch
jb
por
out
ficoml
into
mov
out
scas
cmp
sbb
xorl
aad
mov
mov
dec
lds
push
mov
and
lods
mov
push
jge
rclb
js
js
daa
mov
pusha
inc
sub
add
pop
lods
dec
sbb
aam
js
add
mov
sbb
insl
inc
jno
imul
lods
inc
sbb
nop
aam
cmpsl
jo
stos
inc
push
adc
lret
mov
inc
xchg
pop
push
ss
sbb
insl
mov
xorb
out
mov
xchg
dec
sbb
stos
mov
mov
pop
hlt
nop
mov
adc
mov
and
movsb
enter
out
mov
push
push
inc
lcall
lea
fcmovnu
jg
cmpsb
ret
mov
adc
jo
ja
or
loopne
xor
popl
insl
push
repnz
push
add
insb
push
jb
pop
pop
mov
shr
add
adc
cmpsb
mov
pop
dec
iret
sub
notb
outsb
push
push
cmp
xchg
enter
je
xchg
fidivrs
mov
mov
js
push
sahf
pushf
or
mov
jno
jbe
add
dec
xor
sub
subl
jmp
fiadds
cmpsb
cmp
xor
loopne
rcrb
repnz
or
pop
outsl
insb
pop
and
addr16
mov
addr16
mov
adc
imul
shlb
push
mov
ds
mov
mov
adc
cmp
jl
movsb
sbb
dec
xor
cli
enter
cmpsb
mov
repnz
inc
fsubr
mov
mov
ficomps
in
hlt
lret
call
or
or
bound
mov
sub
ret
rorl
mov
xor
pop
mov
pushl
rcrb
int3
in
xor
aaa
movsl
pop
ret
sub
call
or
pushf
inc
les
clc
add
jecxz
mov
sbb
ja
repz
push
stos
cmp
imul
cmpsl
outsb
push
add
adc
in
cli
adc
and
cmpsl
adc
adc
rcrb
xchg
cwtl
xor
fs
enter
lret
xchg
scas
add
push
mov
pop
push
sbb
jno
bound
fsubl
mov
jo
xchg
push
mov
roll
adc
jp
cmp
mov
cmp
xor
lret
pop
xchg
insb
das
and
pop
and
add
push
dec
cs
push
scas
mov
xor
and
push
add
fsts
out
sub
ret
push
sub
pop
adc
mov
pop
mov
mov
mov
lcall
fnsave
fdivrs
inc
adc
jl
fstpt
push
orb
cmp
pop
mov
jo
mov
rcrl
lock
jbe
or
push
repnz
in
test
push
or
add
pop
ret
xchg
or
lds
lahf
push
pop
pop
dec
adc
xor
cwtl
inc
jle
mov
inc
mov
fldenv
mov
pushl
jbe
ss
jae
out
aam
rcrl
loop
repnz
fs
scas
das
dec
fdivs
lds
mov
cmpsb
mov
dec
sbb
mov
push
lock
adc
xor
pusha
dec
mov
jno
sbb
mov
pop
lock
adcb
inc
imul
ja
inc
pop
sub
adcb
adc
lahf
sahf
sbb
pop
shrl
push
push
lret
test
mov
sbb
push
rol
loope
xchg
sbb
or
mov
and
dec
test
in
cmp
adc
pop
lret
pusha
imul
fsub
mov
sub
imul
daa
inc
mov
rclb
or
test
call
mov
stos
nop
into
or
or
daa
bound
mov
cmp
gs
push
cmp
shrl
adc
fs
sbb
mov
jg
push
lea
cmp
mov
incl
insb
ret
fwait
cmp
pop
push
mov
repz
out
add
mov
and
icebp
loopne
adc
ret
and
rcrl
push
aad
mov
mov
pop
fimull
jmp
out
dec
pop
je
es
aam
xchg
pop
pop
repnz
xlat
xchg
scas
sub
hlt
daa
or
leave
xor
and
jp
add
adc
adc
lahf
sbb
in
loope
xchg
mov
inc
pop
pop
dec
add
stos
pushf
adc
out
xlat
push
andl
lret
dec
pop
dec
sbb
or
call
push
std
insb
fwait
lcall
sbb
and
cmp
pop
push
push
cli
fstl
bound
or
fists
stos
repz
ret
pop
xchg
jge
mov
xchg
sar
adc
lds
aad
mov
clc
mov
aas
mov
repz
shrb
lock
xor
push
aam
nop
fwait
pusha
mov
mov
mov
cld
push
or
sub
addl
stos
jecxz
pop
pop
aas
stos
negl
popl
push
jb
pop
js
mov
lods
pop
stos
mov
popf
lcall
roll
pop
push
add
in
aas
cli
pushf
sarb
inc
jne
sbb
loopne
pop
inc
movsb
addr16
mov
fwait
or
xor
mov
subb
push
out
les
mov
xchg
sub
aad
sub
add
rolb
fidivl
fdivrs
dec
outsb
lret
popf
movsb
ljmp
pop
cs
mov
add
mov
xchg
and
fdivs
out
mov
in
scas
icebp
lea
lcall
add
hlt
xorb
clc
inc
and
cmpb
cld
nop
je
movsb
mov
shl
loop
es
push
sbb
push
loopne
pop
fcoml
lret
adc
push
xchg
outsb
cmc
adc
movsl
stos
push
mov
inc
pusha
loopne
sub
sub
mov
nop
aas
mov
or
out
cwtl
mov
mov
data16
inc
pop
sahf
lds
push
les
adc
aas
mov
decb
push
and
dec
inc
je
mov
lea
add
or
or
inc
int3
adc
jp
dec
cmp
inc
bound
icebp
mov
xchg
mov
xor
notb
insl
sbb
in
int3
add
lds
xorb
fistpll
push
mov
dec
cmp
xchg
mov
mov
adc
add
lahf
es
aas
lock
jmp
sbb
xchg
rclb
push
outsb
adc
movsb
adc
cmp
adc
fadds
pop
xchg
add
xchg
enter
pusha
ficomps
mulb
mov
inc
or
pop
test
sbb
cmp
addb
out
dec
mov
andl
scas
mov
cmp
mov
cmpsl
add
aam
movsl
sbb
in
pop
mov
test
cmp
or
jbe
jo
lret
mov
leave
add
sbb
mov
mov
lret
fsubrl
jnp
insl
or
call
jp
jb
adc
inc
pop
test
cmp
test
scas
or
loopne
cmpsb
ljmp
adc
out
dec
dec
sti
mov
mov
fildl
js
fiadds
sti
mov
in
and
aad
mov
pusha
daa
or
cmp
push
push
mov
ljmp
ds
inc
movsb
mov
mov
jg
mov
lock
sub
cld
mov
push
daa
xchg
mov
clc
shr
mov
add
outsb
fisttps
sub
mov
ss
and
sbbl
call
leave
and
push
shrb
mov
jbe
je
sub
stos
sub
and
mov
jp
cmp
lea
aas
add
bound
or
je
jl
idiv
dec
pop
outsb
jp
rclb
xor
rol
repz
sub
sbb
fadds
xlat
xchg
shr
push
dec
sbb
jb
movsb
das
fiaddl
sbb
fdecstp
cmp
xor
fnstenv
cmpsb
int3
or
insb
mov
adc
jp,pt
mov
in
aam
js
add
or
insl
scas
cli
fisttpl
loope
clc
fwait
dec
adc
add
xor
inc
and
dec
int3
adc
loopne
mov
sahf
inc
push
jle
jl
adc
test
push
push
or
mov
jns
unpcklps
mov
cld
xor
repnz
and
int3
add
pop
int3
mov
and
and
sub
jl
test
adcb
xchg
imul
mov
les
movsb
in
pop
push
cli
lahf
cli
mov
clc
cli
inc
orb
enter
mov
pop
adc
mov
inc
sbb
loop
pop
icebp
bswap
cmp
mov
and
xchg
adc
hlt
mov
aas
test
push
sbb
push
rorb
insl
adc
jo
rclb
clc
loop
add
insb
hlt
out
bound
shr
js
out
push
lds
mov
pop
aaa
push
or
jns
lea
mov
fldt
scas
jg
ficoms
movl
fmuls
in
cwtl
sub
mov
clc
fsubrs
lods
dec
test
jnp
and
or
and
daa
arpl
lea
cld
jle
adc
pop
lods
inc
cmpb
sub
push
out
mov
sahf
outsb
test
subb
mov
lock
cwtl
es
xor
add
stos
jle
xchg
inc
inc
je
bnd
pushf
push
ss
jmp
or
push
mov
pop
repz
sub
rep
in
sbb
inc
jnp
inc
cmpsb
inc
jg
cmpl
adc
xchg
and
outsl
js
out
add
pop
out
mov
xchg
mov
xor
mov
or
popf
sahf
adc
sbb
stos
icebp
mov
mov
sahf
adc
mov
lock
dec
xchg
test
imul
jbe
lcall
outsb
mov
inc
xchg
mov
std
mov
stc
stos
ss
repnz
push
sbb
cmc
mov
fisttpl
mov
mov
push
push
ret
sbb
cld
push
adc
or
and
cmpb
or
mov
cld
sbb
dec
push
aaa
ret
adc
jmp
xor
push
inc
scas
mov
xor
lock
adc
pop
call
mov
cmpsb
push
add
ss
mov
in
inc
cmp
sub
repnz
call
add
loop
ds
int3
out
or
outsl
pop
fsubs
pop
cld
ljmp
repnz
jo
mov
ds
jae
aaa
inc
sahf
mov
movsl
mov
add
xchg
shll
adc
ljmp
mov
cwtl
or
mov
pmaxub
call
pop
cli
movb
cmp
jnp
add
and
sbb
pop
push
fidivl
sahf
cmpsb
addr16
and
stos
jecxz
adc
jne
mov
dec
cmp
stos
jp
lcall
cli
pop
das
fidivl
or
jo
ret
das
std
aam
inc
inc
cmpsb
mov
icebp
loop
insl
popa
xor
cmp
or
loopne
testb
or
sub
ret
jl
jle
test
in
lret
in
decl
inc
push
mov
ret
sub
jmp
xchg
add
insb
aas
dec
pop
inc
add
push
add
sti
add
sbb
adc
test
and
push
repz
xchg
cld
ds
loop
nop
xchg
and
js
es
mov
fstpt
out
lcall
cli
mov
sbb
ds
pop
cmp
xchg
cmp
sbb
lcall
mov
arpl
sub
jp
popf
fsubs
sbb
pop
enter
pop
dec
ja
adc
xor
push
xchg
push
popa
int
push
cmp
and
gs
or
mov
mov
fisttps
mov
mov
and
ss
adc
add
or
bts
imul
add
pop
mov
push
dec
aas
sbb
sub
fists
add
mov
cmpsl
push
sbb
ret
push
inc
and
xchg
push
ret
push
xchg
add
or
lcall
sbbl
xchg
jl
inc
inc
jmp
aad
sbb
ret
scas
add
mov
clc
cli
aam
xchg
fnstenv
lret
jae
lock
xlat
add
xchg
sub
xchg
cmc
aas
add
clc
and
and
or
mov
lahf
cltd
gs
push
sbb
nop
sar
aaa
mov
popf
dec
jl
push
cli
pop
popf
shl
adc
shl
jmp
mov
lret
mov
push
or
gs
sub
sub
xchg
dec
or
mov
pop
jle
jmp
movsb
adc
sbb
xchg
mov
shrl
adc
xchg
scas
or
inc
jle
push
mov
cmpsl
imul
scas
leave
je
xor
mov
lock
push
insb
push
sub
sub
jae
sahf
insb
jbe
lods
fcom
js
mov
mov
sbb
mov
out
subl
adc
lcall
mov
pop
test
mov
call
add
jbe
arpl
into
lret
add
push
cmp
adc
mov
xor
push
sbb
xor
mov
or
mov
xchg
subl
jg
inc
inc
xchg
jno
insl
xchg
push
and
pop
lock
rcrb
mov
hlt
cmp
mov
jb
jg
pusha
sub
jae
push
ja
inc
repnz
pop
imull
mov
jmp
lcall
lods
fcmovnb
inc
fdivs
xchg
cld
leave
jg
test
pop
push
or
mull
call
xor
fildll
mov
daa
rcrl
leave
cs
dec
fdivrs
jp
cmp
and
in
jg
push
mov
cs
mov
inc
movsb
stc
sbb
jo
pop
mov
repnz
ficoml
dec
imul
popf
arpl
or
xchg
enter
jp
ret
xchg
xchg
aaa
jne
xchg
mov
popa
add
in
lret
rcrl
fldt
ss
je
xchg
cmpsb
lods
dec
push
xor
xchg
jp
nop
sub
sub
push
out
lcall
or
xor
cltd
int3
loop
inc
adc
or
aam
clc
scas
cmp
icebp
pop
sbb
mov
je
mov
pop
loopne
daa
lock
push
scas
stos
pop
and
add
dec
js
cmp
test
push
cmp
mov
push
xor
jne
ja
mov
mov
incl
pop
hlt
jae
add
dec
and
das
mov
aam
cmp
lret
jmp
es
subb
dec
push
xchg
push
sbb
inc
in
and
mov
negb
pop
je
pop
loopne
test
push
stc
pushf
push
ljmp
pop
push
mov
sbb
test
rcrb
inc
stc
inc
inc
in
dec
clc
movl
cmp
inc
pop
js
stos
sub
cwtl
les
mov
lahf
pop
mov
loop
sbb
cmpsl
rcll
les
mov
mov
sahf
mov
data16
and
jbe
int3
icebp
mov
into
in
and
mov
fdivl
outsb
int
or
iret
sub
repz
fistps
stos
xor
sbb
clc
lock
push
add
jp
push
cmp
cmc
xchg
lret
adcl
cmp
mov
mov
cmpsl
cmovns
inc
pusha
dec
xchg
mov
je
add
mov
add
dec
xchg
sahf
out
loop
iret
imul
test
jge
pop
sub
jmp
rol
inc
sub
pop
push
push
ret
add
lcall
jb
clc
roll
mov
jnp
pushf
int
or
rolb
lods
dec
adc
xor
rolb
fsubl
jmp
mov
out
lret
push
mov
pop
gs
jg
into
dec
lock
lods
dec
push
dec
or
mov
cltd
jmp
inc
fsubrl
ds
loopne
adc
sub
xor
clc
fisttpl
test
data16
fstpl
sahf
mov
movsl
mov
pop
fwait
xor
fdivl
mov
ret
and
stos
dec
scas
gs
je
sbb
lea
inc
arpl
aas
ja
shlb
or
outsb
fdivl
in
lods
push
popa
mov
out
in
gs
scas
jle
adc
lods
lods
in
or
push
jecxz
push
dec
frstor
mov
jmp
fnstenv
jmp
fsub
and
push
cld
repnz
cmp
pusha
lret
and
roll
sarb
push
popa
fbstp
inc
movsb
fldt
insb
outsb
sub
or
dec
lahf
loopne
cwtl
scas
jl
loop
jle
inc
push
add
sbb
mov
jb
subb
lods
sbb
pushf
xchg
xchg
jo
xlat
adcb
es
stos
cmp
jmp
fisttpl
int3
test
mov
sub
mov
scas
mov
mov
xchg
mov
cs
loop
mov
pop
mov
adc
add
out
sbb
add
lcall
push
stos
or
icebp
lcall
inc
inc
out
rcl
std
mov
lds
mov
xor
aam
out
dec
cmc
sbb
stos
stos
and
sbb
int3
adc
popf
push
fiaddl
xor
mov
fcmovb
mov
je
pushf
aas
insl
and
fmull
mov
lret
jge
cld
imul
orb
ljmp
in
or
shl
jl
loop
je
pop
lods
pop
mov
nop
arpl
mov
jne
pusha
sbb
jg
adc
shll
adc
addr16
push
lds
leave
jp
mov
xor
mov
inc
add
jno
or
and
dec
lcall
movsb
pop
or
pop
push
setnp
mov
mov
push
mov
into
or
push
sub
adc
jae
cs
add
loop
sub
and
or
aaa
bound
ret
sub
adc
lds
mov
mov
outsb
push
or
sub
lods
xchg
pop
out
inc
add
divl
shlb
dec
fldl
cs
sub
pop
loopne
push
pusha
cs
xor
xor
xchg
jg
pusha
jle
cmp
jno
mov
stc
ljmp
xorb
rclb
mov
call
mov
push
bound
divb
ret
subb
pop
pop
es
jge
sub
add
add
in
cmpsb
jno
aaa
jl
subb
cmpsb
in
inc
sbbl
ret
cli
fs
dec
push
xchg
adcl
inc
xchg
ljmp
xor
add
sub
inc
sub
in
inc
jg
mov
adc
add
mov
roll
xchg
sub
iret
cmp
inc
cld
jno
lcall
dec
js
xor
sti
inc
rolb
sub
sub
roll
push
ret
bound
dec
xchg
cld
push
lcall
mov
fcmovnb
pop
push
lahf
loopne
mov
in
sub
dec
sahf
push
mov
lret
outsb
mov
cmp
scas
cmp
loopne
and
es
mov
clc
aas
cli
ds
loopne
and
loop
clc
mov
fldenv
cmp
lcall
call
xor
push
add
cmp
push
in
rorb
pop
add
jnp
into
jp
add
fiaddl
add
xchg
adc
cs
scas
adc
ss
sub
loop
lds
jp
jb
aam
xor
jl
fcos
add
lock
pop
mov
scas
inc
iret
or
mov
clc
iret
imul
or
jbe
ljmp
fistl
andl
ffree
xchg
push
push
xor
int
inc
add
inc
lock
push
add
pusha
es
lcall
cmp
jg
roll
call
std
dec
inc
mov
jl
fbstp
mov
xchg
mov
es
xor
data16
lcall
jle
cld
xor
arpl
lds
cmc
test
cmpsb
push
and
icebp
test
shlb
aas
leave
mov
rcrb
or
push
test
pop
sub
or
sub
add
aam
aad
adc
sti
mov
scas
mov
lret
xchg
sbb
mov
adc
mov
xor
lcall
sbbl
rcrl
ja
sbb
divb
add
mov
xor
dec
sub
inc
sar
push
jmp
jg
pushf
dec
xchg
push
sub
fsts
test
jno,pn
sbb
lahf
add
cli
xchg
jg
adc
shr
and
ljmp
sahf
jbe
add
cmp
inc
cmp
mov
inc
mov
leave
iret
pop
adc
sub
mov
lret
pushf
ss
lcall
imul
or
and
mov
cmp
pop
popl
lock
or
lret
add
cmp
insl
scas
ror
out
cmpsl
icebp
fs
cmp
mov
dec
filds
dec
addl
xor
stos
rolb
jg
pop
loop
pusha
mov
cltd
push
iret
pusha
add
sbb
jno
or
xchg
xchg
test
popf
mov
cltd
ret
cmp
std
xchg
hlt
imul
in
xchg
scas
push
jl
inc
test
cmp
scas
or
mov
mov
or
or
jp
fmul
mov
pop
icebp
negb
adc
mov
cmp
ret
andb
sbb
cmpsl
cmc
les
mov
add
flds
pop
out
ljmp
jecxz
ljmp
sbb
int
inc
call
xchg
jge,pt
js
adc
pop
fidivrl
in
add
rol
mov
and
cmp
mov
jae
mov
mov
shll
push
inc
ret
xor
xchg
or
jecxz
adc
or
lods
fadds
loopne
fs
pop
sti
lods
dec
pop
pop
push
test
lret
add
push
sub
hlt
repz
iret
push
aam
sbb
insb
nop
sahf
pop
sahf
jmp
clc
stos
pop
and
cmpl
aam
dec
mov
inc
sarb
mov
and
mov
mov
movsl
aas
pop
pop
sbb
sub
pusha
pushl
jle
es
sbb
xor
pop
jecxz
push
clc
mov
cmp
ljmp
inc
xor
push
outsb
mov
cmpsl
stos
scas
clc
jmp
insl
ljmp
jne
xchg
arpl
gs
test
aad
adc
orb
xchg
mov
jg
cmp
iret
jne
cmpb
jo
shlb
mov
mov
cmpsb
dec
or
notb
scas
clc
test
cwtl
outsl
sbb
ret
mov
adcl
icebp
push
push
imul
aas
jl
rcl
adc
out
cld
mov
push
xchg
out
rclb
mov
mov
jmp
sti
in
fs
mov
cmp
sub
rcrl
sarb
adc
sar
add
jo
inc
or
push
jecxz
pop
aas
jle
push
push
sub
out
ds
jnp
fdivrl
add
add
mov
push
enter
adc
inc
sbb
ljmp
pusha
sti
cmp
addl
movsb
xchg
push
fstp
and
inc
pop
fs
pop
mov
loop
stos
push
incb
xorb
or
test
addr16
subb
xor
rcr
or
add
shl
dec
cmp
loopne
add
mov
sbb
pop
pop
aaa
std
aad
into
das
add
mov
icebp
and
or
test
insb
outsl
js
mov
and
sete
mov
movsb
and
cmpsb
filds
outsb
gs
jl
jae
loop
ds
or
stos
scas
ljmpw
lcall
adc
cmpsb
out
xor
stos
test
or
jg
aaa
lods
sbb
push
aam
cmp
arpl
outsb
xchg
cmp
mov
test
adc
std
cmpsb
add
mov
loop
scas
fdivs
in
shll
pop
cld
jle
adc
mov
movsl
andb
lret
lcall
dec
call
push
adc
sbb
mov
hlt
jmp
mov
lahf
and
int3
mov
adcl
test
inc
push
sbb
fbld
mov
je
pusha
out
adc
hlt
testb
mov
adc
cmpsl
push
pop
shlb
push
and
mov
cld
mov
mov
ss
or
outsl
add
cmpsb
cmpsb
xchg
mov
pop
jp
aad
int3
push
sbb
jge
clc
push
add
xchg
xor
cltd
lea
push
and
in
shl
xor
jp
movsl
imul
scas
loop
leave
dec
mov
mov
xchg
adc
dec
rclb
outsb
cwtl
or
cmp
add
cmp
pushf
push
dec
inc
test
outsb
push
and
rorb
mov
inc
cmpsl
jle
je
dec
cmp
aad
aas
cli
sub
or
mov
out
push
pop
jmp
push
dec
faddl
bound
inc
ficompl
push
jecxz
pop
lds
fs
pop
rcl
fs
sub
pusha
test
inc
test
push
fsubrl
pop
xor
decl
jl
aas
arpl
jb
test
xor
jmp
adc
xor
sbb
lcall
test
dec
pusha
sub
sbb
xchg
and
ret
lock
cmp
mov
lods
mov
std
inc
jbe
fs
sub
in
xor
xor
test
sub
add
sub
and
mov
jecxz
lcall
shll
push
sarb
sub
test
jae
pushf
paddw
jg
jbe
fcmovnu
mov
bound
fnstenv
jno
inc
lret
xor
shl
or
icebp
dec
jl
pop
xchg
mov
pop
notl
and
clc
scas
in
add
xchg
and
loop
rcr
jg
sub
fistpll
roll
aas
or
add
cs
ficoml
aas
cmp
out
mov
out
and
jne
lret
dec
pop
jo
mov
mov
mov
stc
mov
jmp
add
incb
xchg
mov
lods
out
cmp
negb
pop
leave
addb
lock
cld
jg
push
aad
and
jbe
mov
jo
pop
jg
orb
sub
ja
adc
dec
mov
inc
flds
cld
adc
jns
sbb
mov
inc
sbb
jns
les
scas
jg
or
sub
test
rol
scas
es
sub
loope
and
mov
mov
sbb
pop
mov
shl
loop
icebp
ss
inc
loopne
cmpb
xchg
in
icebp
add
jecxz
fists
orl
cmpsb
jns
mov
or
int
xchg
scas
mov
mov
mov
cmp
hlt
mov
jmp
xchg
mov
or
mov
and
mov
push
sbb
in
inc
sarb
stos
das
jle
rclb
outsb
cmp
xchg
pop
sbb
or
mov
pop
dec
or
lds
imul
inc
inc
loope
jg
loope
xchg
ja
sbb
out
mov
or
jmp
jno
ljmp
stos
ds
filds
sbb
shlb
add
scas
mov
jge
sbb
push
rorb
pop
push
or
outsl
addr16
inc
lods
ss
test
push
xchg
fcmovu
roll
cld
jp
icebp
push
les
mov
das
mov
jnp
roll
pop
repz
mov
push
shll
mov
notl
adc
adc
xor
push
add
cmpsl
mov
cmp
lret
aam
lret
loope
fwait
mov
sub
mov
cmp
cs
lahf
nop
sbb
lcall
dec
adc
es
or
pushf
nop
jl
push
fdivl
aam
sbbl
mov
fidivs
sbb
mov
cwtl
push
fcompl
loopne
lcall
pop
adc
popa
movsl
lret
pushl
mov
inc
or
cmp
add
dec
scas
ds
sbb
ret
push
xchg
movsb
out
imul
stos
lds
sti
lock
xchg
xacquire
daa
rolb
adc
push
cs
dec
pop
cld
fwait
clc
push
inc
aaa
push
mov
or
sbb
or
stc
hlt
jbe
into
in
inc
fdivr
xchg
inc
adc
push
and
jl
and
push
outsb
ds
cmpsb
ds
stc
jns
fadds
and
es
inc
call
push
mov
cmp
sbb
movsl
mov
jp
enter
test
or
fcoml
js
mov
mov
es
or
push
je
push
xor
inc
sbb
xchg
inc
pop
pop
xor
mov
cwtl
mov
clc
mov
leave
jg
adc
mov
push
mov
pop
cs
data16
fisubl
cs
les
mov
ljmp
pop
fsubr
mov
aad
adc
add
rclb
mov
cli
mov
mov
arpl
push
xchg
sahf
shll
or
pop
or
pop
and
jmp
sub
subb
sbb
pop
out
mov
xchg
icebp
or
xchg
in
pop
enter
loopne
popf
not
inc
loope
mov
add
mov
stos
dec
loope
mov
inc
add
call
dec
add
imul
and
mov
sbb
dec
inc
adc
sub
pop
push
jns
and
cmpl
mov
stc
mov
adc
mov
sti
push
cmp
loope
adc
das
jnp
fsubrs
sbb
or
popf
xchg
sbb
sar
ffreep
push
pop
cmpsb
xchg
cwtl
in
movsb
mov
jmp
enter
and
xchg
gs
repnz
aaa
sbb
dec
mov
or
cli
jo
xchg
xor
dec
xchg
inc
mov
lock
test
and
lock
jno
or
adc
loope
out
js
ficompl
mov
jle
jle
add
ja
lea
or
test
aas
orb
andl
or
add
inc
std
xchg
icebp
orl
add
mov
pop
addl
das
push
push
andl
mov
daa
and
out
pextrw
push
ss
mov
stos
add
stos
in
or
repnz
loop
mov
mov
clc
dec
push
mov
pusha
mov
jg
cmpsb
mov
lods
jecxz
mov
adc
je
mov
fisttps
jp
sahf
fs
ljmp
fimuls
js
pop
and
push
bound
mov
aam
pop
lods
fildll
in
cmp
fsubs
xchg
jo
into
or
insb
int3
addr16
fidivrl
mov
mov
rcll
dec
sub
outsb
lods
loop
mov
dec
dec
lods
test
pop
push
inc
sub
or
add
inc
inc
sarb
iret
jl
sub
loope
add
jg
inc
pop
sahf
push
movsb
sub
adc
push
fdivl
call
jle
lds
xor
sbb
push
fisttps
pop
jnp
sti
sub
cmp
lcall
push
aas
addb
enter
pop
repz
out
cmpsb
outsl
out
std
xchg
pop
fdivs
adcl
iret
and
les
inc
imul
mov
adc
call
clc
mov
push
and
inc
js
cmp
push
dec
ret
mov
es
stos
ljmp
popa
mov
rclb
lahf
cli
inc
pop
and
aas
sbb
mov
add
fildll
imul
mov
adcb
mov
lds
and
xchg
fwait
je
dec
pusha
cld
adc
bound
ret
cmc
jno
imul
mov
pop
test
jecxz
inc
inc
lock
fsubrl
push
mov
cld
insl
bound
push
popf
mov
loopne
sub
xchg
and
cli
mov
cwtl
js
fistl
xlat
push
pop
and
push
sbb
or
testl
or
add
jp
sti
hlt
xchg
jle
mov
inc
js
fs
out
dec
addl
rclb
call
loopne
push
lods
lods
mov
adc
test
aaa
pop
ljmp
xchg
cmp
faddp
xchg
pop
pop
adc
inc
into
adc
hlt
stc
loope
fldl
add
fsubrs
lds
adc
jg
fcmovnb
pop
pushf
xor
mov
add
mov
jl
ss
lcall
adc
mov
and
in
leave
addb
mov
jmp
aad
imul
cli
aaa
sub
or
mov
movl
adc
pusha
pop
insb
outsb
aam
lock
rorb
push
cmp
mov
loopne
cmpsl
dec
out
inc
xchg
mov
pop
stos
cmpb
mov
pop
addr16
adc
push
push
cmp
cli
add
inc
aaa
in
add
arpl
leave
jbe
adc
clc
imul
call
cli
outsl
mov
and
and
cmpsb
push
or
jl
pop
or
dec
and
xchg
mov
mov
mov
mov
fisubrs
popf
test
or
mov
add
cmp
jae
push
mov
inc
aas
lods
push
add
shlb
push
imul
push
dec
in
inc
nop
or
cmp
test
push
mov
xor
mov
idivl
loope
add
pop
enter
cmp
stc
ds
inc
add
push
or
add
adc
xchg
ret
ss
addr16
sar
lea
std
int3
loopne
clc
add
and
shll
sub
jo
xchg
push
mov
js
pop
push
loop
dec
push
xchg
inc
pop
data16
pop
mov
test
std
or
inc
imul
jle
cmp
xlat
sub
out
push
push
push
out
fistps
dec
and
loopne
mov
add
add
and
lods
add
decl
or
jge
enter
sbb
in
and
pop
insl
sbb
fbld
les
fbld
dec
insl
and
sub
mov
imul
aaa
fcom
mov
int3
mov
jp
cmpsl
sub
testb
inc
addr16
les
jle
dec
and
cld
mov
sbb
mov
adc
push
ss
xchg
lret
insl
push
pop
adc
sbb
movsl
movsb
push
iret
movsb
lods
inc
outsl
pop
adc
sub
xchg
inc
bound
fsubrs
outsb
sbb
dec
jp
shlb
sbb
add
orb
cmpb
aad
clc
sub
sahf
imul
add
push
xor
cs
mov
data16
cmp
cmpb
inc
dec
push
pop
cmp
inc
mov
ljmp
xchg
mov
decl
out
rcrb
sahf
out
cmpl
rorl
test
jp
xchg
mov
or
pop
out
mov
mov
mov
lcall
clc
fwait
cmc
pop
cmp
insl
jns
dec
jae
pop
sbb
fsubl
sub
iret
sub
adc
int3
jae
mov
ljmp
jmp
lea
call
jb
jecxz
or
in
pop
fisubl
call
jne
lods
cli
inc
mov
push
dec
and
cs
cmc
addb
rorb
fs
sub
mov
or
fxch
mov
rcrl
incb
push
inc
adc
mov
inc
fimull
cmc
add
fs
mov
add
das
and
insl
dec
xchg
inc
mulb
cmp
in
dec
inc
or
push
cs
jns
push
dec
jecxz
ret
sbbl
adc
inc
insb
loope
fadds
add
repnz
les
outsb
pushf
mov
push
enter
bound
or
je
jo
jl
sub
cli
sbb
sarl
iret
loopne
lods
push
sub
push
ret
adc
or
jge
enter
push
mov
mov
mov
and
stos
out
jl
in
xlat
and
int3
cmpsb
adc
jbe
mov
xor
xor
push
or
pusha
mov
imulb
test
mov
stos
stos
aaa
ror
mov
ja
lods
adc
out
ljmp
jne
adc
sub
fistpl
mov
add
jge
sub
xchg
fdivrp
xchg
mov
in
mov
dec
jle
jl
cs
push
push
xor
addr16
mov
inc
out
and
pushl
lock
jnp
and
mov
aaa
adc
pop
adc
cmc
xor
mov
les
lret
popa
jmp
enter
icebp
adc
push
ss
xorl
mov
pop
cltd
ret
xor
sar
lock
push
movsb
push
sub
mov
je
jbe
scas
aam
mov
or
xchg
cli
xor
push
pop
mov
adc
or
xor
es
and
lods
add
mov
mov
jns
and
jbe
pop
adcb
lock
or
sub
inc
sub
fmull
and
adc
pop
inc
mov
or
pusha
add
pop
jne
sbb
shlb
dec
and
xchg
add
das
mov
jmp
stos
push
sbb
pop
js
orb
xchg
popa
faddl
popf
shlb
pop
in
xor
mov
loop
mov
pop
mov
test
ds
lret
iret
jae
pop
popf
outsb
pop
jns
mov
stos
xchg
cmp
loope
inc
mov
cmp
loopne
add
push
push
dec
push
cld
fcompl
or
je
inc
mov
push
shrl
cmc
pop
nop
sarb
inc
fs
sbb
fimull
in
push
or
out
lods
mov
push
or
dec
jne
std
or
pop
int
stos
or
lcall
push
jmp
out
xchg
mov
in
cmp
out
cmp
cli
sbb
arpl
popw
push
xchg
fiaddl
pop
pop
jle
xchg
call
int3
test
test
insb
xchg
push
xchg
cli
xor
cmp
shrl
arpl
ds
mov
shrb
mov
rcrb
andb
gs
fs
add
pusha
dec
mov
pop
ret
jb
cmp
ret
clc
push
fwait
mov
and
out
adc
bound
ljmp
xor
enter
dec
fisttps
inc
and
adc
xor
jne
clc
mov
jne
xchg
cmp
xchg
call
cmp
bound
push
rcr
sahf
sub
loope
mov
pusha
aad
movsb
mov
dec
fs
or
mov
std
adc
push
sbb
jp
xor
adc
mov
add
inc
dec
inc
popa
push
or
push
cmpsb
and
jae
fcomp
mov
rcll
or
dec
pop
icebp
fisubrs
insb
mov
mov
test
xor
repnz
push
mov
mov
mov
mov
adc
mov
pop
jp
cmp
jge
ret
mov
cmp
jbe
sub
frstor
adc
push
pop
loopne
mov
mov
jge
sahf
cmp
les
xchg
pushl
test
pop
mov
push
adc
sub
div
push
mov
sahf
loopne
push
ret
ret
xor
mov
call
jmp
fucomp
repz
sub
xchg
sbb
ljmp
ret
dec
in
stos
push
nop
lret
or
add
dec
xorb
mov
xchg
orb
int3
add
test
cmp
xchg
sub
mov
es
mov
jmp
clc
int
leave
sub
mov
ret
jo
mov
and
add
or
adc
and
sub
sub
jle
jbe
or
push
addb
mov
sub
insl
mov
jnp
lahf
cs
shl
shlb
das
das
or
hlt
xchg
call
aas
xor
xor
lret
xor
cwtl
cmc
dec
ljmp
mov
rcrb
subl
xorb
lret
lock
mov
dec
adcl
rol
mov
jl
xchg
push
and
cmp
xor
rcll
movsl
xor
xchg
fdivl
inc
je
inc
mov
mov
bound
cmp
cmp
int
dec
out
jbe
adc
inc
scas
lcall
push
cli
pop
cs
inc
outsl
data16
jns
adc
clc
or
iret
inc
dec
fcoms
incl
ret
pop
aas
push
mov
ffree
pop
insl
das
notb
nop
clc
xlat
jae
push
mov
pop
nop
sbb
add
push
pop
dec
pop
and
loope,pt
sub
cmc
sbb
mov
rclb
lcall
mov
stos
and
mov
mov
xor
fwait
loop
cmp
push
dec
or
xor
sbb
mov
push
pop
repnz
jo
lret
shr
popa
mov
pop
pop
cmp
loop
add
movsb
pextrw
sahf
mov
ret
mov
add
sub
lds
ljmp
jg
mov
add
sub
movsl
stos
into
xchg
jge
inc
adc
lds
adc
or
jo
xchg
xchg
or
mov
lods
push
sub
sub
ret
es
testb
xchg
adc
aad
cmc
fildl
inc
stos
mov
insl
hlt
mov
flds
xchg
push
cmpsb
sbb
mov
mov
rcl
xchg
test
mov
mov
cmpb
clc
and
mov
je
out
or
pop
arpl
loopne
inc
fisubs
cmc
xchg
jbe
out
in
ret
das
and
sub
jb
and
insb
addb
mov
or
aad
add
std
lock
xor
or
rol
mov
push
adc
pop
jecxz
push
sub
rclb
out
mov
mov
jmp
pusha
dec
fstpt
das
mov
add
fisubrs
cmp
mov
push
call
popa
insb
xchg
popf
jns
fbstp
or
pop
adc
cli
pop
xor
rolb
inc
pop
xor
data16
test
popf
addb
insl
outsl
fadds
sbb
sbb
inc
in
sbb
dec
ljmp
xor
nop
shll
inc
and
mov
cwtl
inc
imul
js
js
loope
addb
fcmovb
add
dec
lea
mov
sahf
test
push
sbb
mov
inc
pop
pop
mov
mov
notl
lcall
std
jg
inc
sbb
fldt
mov
adc
xchg
sbb
insl
push
jbe
rorb
les
pop
int3
or
dec
lcall
outsb
xor
sbbb
adcb
aas
xor
pop
pusha
sub
fnsave
or
push
mov
mov
repnz
into
iret
call
mov
std
inc
push
jmp
inc
ljmp
adc
xlat
fdivp
xchg
sahf
sbb
or
call
fs
xchg
push
or
daa
add
pop
jp
dec
inc
pusha
push
jo
push
mov
dec
fwait
je
xorb
sbb
loopne
pop
clc
iret
xor
cli
xor
enter
dec
leave
jbe
je
xor
loopne
fidivrl
lea
js
dec
dec
punpckhbw
cmc
incl
arpl
and
sub
push
mov
lret
push
mov
adc
loop
xor
adc
xor
push
clc
xchg
mov
push
add
mov
inc
fildl
fs
and
dec
mov
out
rclb
insl
lret
inc
mov
sub
cmpl
sub
pop
pusha
stos
jmp
sbb
sbb
jp
lock
pop
sub
sbb
mov
push
stos
dec
mov
pop
je
or
xorb
add
clc
and
loopne
mov
dec
cmp
mov
adc
sub
roll
adc
clc
and
loope
sub
mov
inc
mov
xor
inc
xorb
jl
movsb
and
xor
push
mov
std
xchg
mov
jb
lock
cmp
mov
aaa
lcall
and
sbb
sbb
icebp
adc
inc
inc
add
pusha
cmpsb
xor
jbe
loopne
outsb
adc
xor
pushl
mov
add
inc
xorb
mov
pusha
push
in
nop
jle
and
cmp
pop
push
fdiv
notb
shrb
popa
int
xchg
add
testb
test
and
cmp
sbb
into
iret
push
xor
sbb
ss
mov
push
mov
push
add
mov
rcrl
dec
push
mov
inc
je
mov
mov
aam
jne
cmpl
popa
outsl
xchg
nop
sarb
mov
or
sub
xor
icebp
pop
push
das
insl
and
push
cmp
fildll
ljmp
mov
in
mov
add
dec
mov
dec
shr
add
fs
mov
and
pop
cmpsl
addb
or
arpl
addb
mov
scas
inc
lods
loopne
lea
xorb
and
insb
adc
mov
add
pop
adc
pop
dec
std
lcall
fst
testl
cmp
fwait
int
jl
or
fsubs
jbe
nop
and
out
mov
add
fbld
and
es
jg
sti
sub
cmp
inc
mov
push
sbb
push
fistl
movlps
stos
dec
mov
fdivr
mov
inc
dec
call
xchg
in
clc
pop
ds
sbb
aam
sub
xchg
or
and
dec
repz
inc
push
jbe
ljmp
jg
in
imulb
sahf
popf
pusha
nop
push
mov
adc
pop
popl
out
mov
xor
out
mov
jl
sahf
or
jo
mov
data16
rcl
cmp
xchg
pushf
out
dec
mov
incl
xchg
add
push
or
mov
lods
cltd
aaa
push
fimuls
sbb
sar
popf
push
fwait
cmp
jp
add
es
xchg
loopne
les
inc
inc
in
jge
jnp
popf
mov
xchg
cmc
add
std
inc
mov
mov
jo
stos
pop
movsl
lock
xor
mov
rcll
or
xor
adc
pop
ds
pop
fdivrl
mov
pop
inc
jecxz
push
loop
imul
or
decl
pop
outsb
shl
mov
mov
leave
pop
cmpsl
lock
sub
lods
sbb
xor
jp
enter
inc
ljmp
into
jl
outsb
push
fsubr
shlb
xor
mov
ret
lods
push
add
add
in
mov
add
test
or
decl
mov
fisttpll
inc
dec
pop
push
adc
push
mov
enter
pop
cmp
jb
dec
jb
call
cmp
in
int
mov
sbb
dec
add
or
mov
cmp
cli
popa
jecxz
cmp
mov
inc
scas
mov
and
mov
mov
ljmp
mov
dec
stos
scas
in
ret
movsb
fmull
sub
pop
psraw
std
test
xor
cmp
push
ret
sarl
push
dec
adc
subl
sub
les
mov
dec
sub
je
sbb
sub
outsl
jne
test
mov
rclb
inc
idiv
outsb
jmp
push
js
sbb
in
mov
jmp
xorl
push
pusha
push
cmpsl
adc
ret
lret
add
ljmp
sbb
mov
sbb
mov
and
aas
dec
rorb
stos
add
scas
sbb
xchg
scas
add
addr16
jo
fadds
dec
add
lahf
test
mov
cs
inc
mov
test
jbe
jo
xor
push
mov
ficoms
fimull
movsb
jb
mov
sbb
repnz
andl
fmull
push
nop
incl
inc
lods
aam
xor
jmp
das
jecxz
xor
pop
mov
cmpsl
cs
ret
adc
pop
fbstp
mov
add
int
gs
leave
pop
icebp
ja
scas
inc
inc
test
or
test
and
mov
and
add
cmp
sbbl
push
fdivs
inc
xchg
rol
add
jge
arpl
xor
cld
sbb
ficoml
cmp
lds
shll
jl
adc
push
ja
jg
cmove
cld
ud0
dec
test
adc
adc
call
mov
sbb
xlat
push
aam
sahf
xlat
pop
adc
mov
dec
pushl
mov
movsl
repz
call
sbb
addr16
cwtl
xchg
adc
or
xchg
and
or
clc
insl
inc
inc
cmpl
add
popf
push
pop
jmp
mov
in
push
mov
insl
in
addr16
and
push
loopne
ljmp
xchg
pop
add
iret
movsb
ss
out
mov
pop
jge
adc
add
mov
cmp
rcl
push
fbld
clc
xor
add
adc
xor
and
out
lcall
rcrl
push
sbb
std
inc
mov
or
add
incl
imul
rol
mov
mov
inc
sub
loope
inc
stos
clc
adc
add
dec
incw
or
xchg
lcall
rcrl
rclb
imul
adc
fmull
stos
sub
stos
clc
xor
inc
adc
dec
sub
dec
les
bound
adc
insl
js
xchg
aad
jmp
sbb
xchg
xor
sbb
test
pop
scas
lret
hlt
in
xchg
push
mov
mov
stos
or
pop
imul
mov
mov
cmpsl
icebp
sbb
cmpxchg
jbe
adc
bound
mov
cmpsb
dec
les
push
clc
push
dec
iret
xchg
add
cmp
lods
test
push
pusha
lcall
mov
popa
xor
mov
insb
mov
mov
inc
sub
mov
imul
stos
mov
mov
or
push
cmc
push
scas
pusha
ljmp
hlt
mov
push
sbb
lahf
lock
test
add
push
mov
or
dec
sub
jecxz
clc
insl
push
cltd
call
adc
and
push
adcl
loop
and
das
add
les
in
jge
sub
and
pop
sbb
mov
or
xchg
add
fs
sahf
sarb
icebp
ss
mov
mov
mov
cli
or
idivl
call
push
orl
xchg
sbb
test
push
and
inc
dec
pop
jl
mov
pusha
add
icebp
lret
dec
pop
cs
mov
ret
xchg
sahf
adcb
arpl
int
sub
mov
and
addb
call
call
hlt
jno
add
lret
movnti
jl
test
les
mov
cli
sbb
adc
addr16
sarl
imul
ret
sbb
jecxz
cmp
cmp
inc
imul
push
mov
mov
mov
aad
or
adc
stos
dec
mov
je
cwtl
or
loopne
ret
loope
lahf
shll
cmp
and
sub
fnstenv
movsb
mov
outsl
push
js
sub
bound
add
scas
jl
inc
outsb
jnp
out
lods
clc
xor
pop
sbb
je
dec
stos
add
mov
mov
push
dec
arpl
bound
shll
inc
inc
pop
mov
divb
stos
lds
pop
iret
inc
inc
mov
andb
push
lods
mov
inc
movsb
addr16
cli
aam
and
mov
push
and
int3
jo
or
jae
outsl
and
jbe
cmp
test
and
shr
add
clc
sbb
ret
es
nop
icebp
mov
fadds
add
push
jno
push
movb
inc
dec
adc
data16
pop
mov
out
cmp
xchg
fsubl
xchg
imul
in
inc
inc
fdivr
mov
or
nop
and
fimuls
and
popa
inc
in
frstor
sbb
ret
mov
cmp
clc
inc
cmp
in
ret
sbb
dec
fcomps
shlb
push
fisubrs
xor
add
cmp
loopne
add
in
or
test
or
and
push
repz
lahf
jmp
or
aaa
cld
add
fidivrs
enter
dec
mov
add
jle
test
mov
dec
push
loop
push
dec
add
cmpsb
ljmp
in
inc
push
les
imul
mov
pusha
fs
add
mov
inc
lods
test
jg
incl
dec
mov
in
test
jb
inc
adc
mov
xor
xchg
je
rcrl
subb
cmp
push
stos
mov
xchg
sbb
cs
addb
rolb
cli
jae
adc
pop
inc
pop
mov
test
lds
pushf
lds
lea
or
mov
xlat
sbb
mov
enter
dec
ds
cli
popf
mov
mov
leave
push
lahf
rclb
ljmp
cmp
mov
pushf
movsb
aas
mov
push
out
out
stc
nop
push
imul
test
or
and
int3
sub
je
adc
bound
testl
rol
add
in
hlt
cpuid
test
mov
rolb
sbb
mov
pusha
push
and
dec
add
sbb
or
xlat
mov
xchg
or
jo
leave
sub
cmp
push
subl
enter
push
les
rolb
push
imul
ljmp
cli
gs
cmp
push
fiadds
cmp
in
mov
xchg
jle
mov
dec
stos
cmp
pop
inc
sub
xchg
xchg
sahf
movsb
rorl
aad
andl
ret
xor
jae
and
fcmovnu
scas
int3
dec
dec
sbb
sti
in
mov
movl
sbb
mov
sub
imul
xor
push
pop
test
loope
aaa
push
ficompl
scas
adc
fstl
adc
sbb
aaa
outsb
add
cmpsb
lcall
lret
or
ljmp
xor
xchg
inc
push
test
fdivrs
test
repnz
out
xor
stos
mov
daa
cwtl
jmp
fidivl
dec
pushf
xchg
dec
pop
jp
jnp
lock
test
add
out
scas
add
hlt
adcb
adc
dec
add
xor
and
hlt
pop
pop
ds
outsl
sub
and
cmp
adc
mov
enter
mov
gs
add
mov
jns
lahf
ds
int
and
mov
dec
cld
out
mov
and
incl
cmp
int
ss
aad
add
js,pn
sub
repnz
dec
push
push
sub
ret
cli
push
lds
sub
bound
stos
pop
cmpsb
mov
mov
lret
ret
stos
inc
out
xchg
lret
aad
mov
mov
das
sub
scas
out
pop
clc
jge
jnp
fcmovnu
clc
icebp
and
mov
inc
dec
cwtl
mov
xchg
push
jb
pushf
pop
mov
rolb
jp
loopne
nop
add
movsb
add
xchg
push
icebp
scas
rcll
mov
or
ds
cld
cwtl
cld
adc
hlt
mov
xor
test
jmp
ss
xor
in
mov
cmp
pop
inc
pushw
sub
loopne
loop
out
cmc
nopl
cld
fiadds
dec
sbb
push
push
mov
cmp
add
mov
xchg
stos
popf
xchg
and
sub
or
and
scas
shlb
adc
mov
mov
xor
dec
pop
xor
arpl
lods
mov
and
sub
ljmp
add
jl
mov
sbb
jmp
pop
out
cmpsb
sbb
xor
insb
and
subl
clc
aam
push
ljmp
cmp
cmp
lods
jmp
and
nop
push
or
pop
call
iret
mov
dec
enter
jbe
adcb
pop
pop
xchg
xchg
or
adc
fsubp
mov
jecxz
adc
cmp
orb
scas
aam
mov
testb
push
rcll
std
in
pop
push
ret
cmp
shrl
outsb
lcall
das
mov
jne
mov
mov
dec
pop
adc
cmp
xchg
sub
movsb
loopne
pusha
ja
lret
ja
cs
pop
hlt
and
inc
sahf
pop
imul
sub
test
in
xor
aad
loopne
sbb
imul
sbb
and
jle
sbb
pusha
mov
clc
test
ret
cmpsb
out
jne
and
rcrl
xchg
nop
add
cmp
std
sub
adc
imul
mov
fildl
pop
fdivl
out
xchg
mov
movsb
push
sub
push
aaa
mov
cmp
mov
cmpl
mov
pop
or
add
mov
xor
popa
arpl
mov
out
mov
or
and
nop
pushf
out
mov
clc
lcall
inc
lea
add
shr
or
test
rcl
mov
or
sbb
cld
adc
dec
mov
cmc
push
ss
out
cmpsb
rolb
popf
int3
mov
sbb
test
sbb
dec
loope
lock
and
decl
repnz
int
repnz
dec
sbb
push
add
je
scas
test
test
sbb
out
jp
movsb
add
and
push
lock
xor
jbe
add
sbb
jmp
and
mov
pop
pop
inc
mov
mov
push
cmc
push
ret
lret
aad
jg
sbb
xchg
cmp
pop
and
fwait
mov
or
jge
xchg
add
iret
loopne
imul
arpl
rorb
xchg
inc
ficompl
xor
adc
sbb
mov
adc
and
cli
std
add
ss
lcall
adc
popf
test
xorb
insl
pusha
xchg
add
mov
gs
clc
mov
push
sub
pop
push
pop
cmp
cmp
ds
xor
shll
adc
mov
rcrb
fsubl
std
add
adcb
hlt
sub
aaa
cs
mov
push
insb
pop
adc
sarb
push
scas
out
ds
sbb
outsb
iret
mov
xchg
decl
cmp
mov
jge
mov
adc
jae
scas
adc
clc
inc
or
and
cmpsb
pop
and
lahf
jnp
xor
call
call
mov
mov
or
mov
dec
sub
sbb
and
pop
cmp
xchg
cmp
cmp
xor
es
ljmp
outsl
hlt
add
pushf
xchg
or
inc
cmpsb
jne
loopne
mov
fs
xchg
inc
dec
mov
dec
fdivl
clc
in
test
xchg
or
jo
int
adc
xchg
and
add
cmp
and
sub
repnz
shll
add
stos
and
adc
jg
frstor
stos
stos
outsl
cwtl
sbb
push
mov
jmp
and
or
mov
xchg
jns
pushf
mov
scas
jbe
push
mov
aam
mov
aas
jmp
hlt
or
scas
cmpsl
sub
dec
das
in
xchg
hlt
jno
push
sbb
loop
je
test
bound
push
and
xlat
add
and
leave
mov
lds
cli
subb
mov
in
pop
popa
arpl
daa
movb
jg
sbb
inc
xor
fisubs
add
fcoms
push
xor
syscall
test
inc
dec
sahf
inc
ret
add
aas
add
add
jnp
rclb
clc
jmp
sub
mov
mov
fs
and
and
jmp
movl
xchg
dec
lods
mov
inc
xchg
sbb
mov
fwait
dec
pop
loop
orb
clc
aad
les
sub
push
cmc
push
or
add
and
pop
call
aas
jl
sbb
outsb
fdivl
enter
xchg
fwait
sub
or
mov
hlt
scas
mov
shrb
fstpt
xchg
sar
xor
xorl
and
adc
movsl
ljmp
into
idiv
push
pop
in
add
aas
jnp
loopne
jo
cmpsl
add
push
mov
push
dec
sub
mov
fadd
iret
jbe
lock
mov
jge
test
lea
mov
lods
fisttps
inc
jle
push
mov
test
push
and
outsb
add
jbe
push
enter
out
fidivrs
pop
cld
push
aad
mov
pop
in
outsl
jo
lea
out
pop
or
call
lret
in
mov
and
push
dec
nop
cmp
adc
fcom
or
xor
cmp
xor
sub
or
hlt
or
mov
mov
add
cmp
cltd
add
xor
movb
or
adc
pop
jl
test
xchg
add
ficoms
inc
je
adcb
mov
mov
nop
mov
lret
pop
push
add
mov
cmp
pusha
je
sub
add
jae
lods
rcll
sub
movsb
push
mov
divb
aam
sub
push
and
sub
stos
cmp
xchg
je
mov
push
cmp
jno
cmp
inc
loopne
or
test
pmuludq
jns
inc
xchg
mov
sti
mov
push
xchg
jle
and
sbbl
sub
cmp
subb
ds
mov
loope
xchg
sbb
inc
in
fldl
stos
lock
test
test
inc
test
icebp
xorb
adc
imul
mov
subb
cmp
call
adc
xor
xor
jp
fbld
and
pop
jge
aam
ljmp
movsl
sub
mov
push
or
xchg
and
in
hlt
es
jne
mov
push
sbb
push
cwtl
popa
bound
or
ret
adc
outsl
lock
or
sarb
cwtl
inc
jp
sar
jae
fbld
dec
add
jb
xchg
std
mov
fwait
and
cmpsb
mov
lahf
sub
mov
movb
and
leave
or
xor
or
dec
or
sub
pushf
jmp
xor
in
fdiv
int3
cmpsb
aas
je
insb
sub
js
iret
repz
pop
sub
filds
cmpsl
jg
ja
orl
shrb
sub
push
fdivrl
sbb
pushl
pop
or
and
aam
and
adc
pop
mov
mov
ud0
xchg
cli
pop
call
pop
dec
ss
sub
inc
xchg
ds
mov
lods
inc
or
inc
enter
add
inc
fiaddl
inc
cmp
sbb
xchg
jp
outsb
or
jl
add
mov
sub
out
sub
enter
loopne
test
cwtl
shl
cs
mov
lock
mov
push
ds
dec
popa
lock
lods
shlb
adc
pop
out
sub
push
xchg
int3
xchg
call
xchg
test
sbbl
xor
in
enter
dec
outsb
push
jl
mov
or
movsb
mov
push
cld
popa
cmp
dec
int3
xor
js
movsl
les
or
loope
cmpsb
pop
sub
and
in
mov
out
imul
mov
inc
fcomps
push
lods
je
pop
outsl
push
and
out
mov
ja
pop
and
inc
lods
add
push
xor
add
add
or
stos
push
add
fstps
xchg
mov
sbb
pusha
insl
push
lock
push
jg
incb
cmp
arpl
out
pushf
xor
loopne
push
aaa
cld
pop
mov
pop
call
fcomps
adc
xchg
fwait
movzbl
add
inc
jo
add
jmp
rcr
mov
dec
inc
leave
icebp
into
cmp
push
add
lock
sbb
aas
sub
ja
mov
cmpsl
xor
mov
lea
lret
mov
pop
mov
lcall
mov
cs
xchg
loopne
sub
jbe
mov
mov
xchg
add
aas
sub
in
mov
shr
pushw
or
mov
scas
mov
xchg
or
xor
push
rclb
les
xchg
jb
and
jg
and
adc
ret
jle,pt
aaa
stos
sbb
enter
lods
jb
jne
mov
inc
cmc
inc
push
mov
push
std
aad
inc
jl
and
xchg
adc
sub
incl
jl
aad
gs
add
jo
xor
ds
fs
faddl
pusha
loopne
lret
sbb
lods
mov
movl
inc
arpl
insl
xchg
xchg
loopne
faddl
sub
sub
dec
outsb
mov
lcall
push
sahf
stc
ss
and
test
xchg
and
cmpsb
xchg
adc
fnstsw
mov
pop
push
pop
lcall
mov
aad
into
sub
push
mov
jnp
add
push
js
out
mov
xchg
rcl
out
les
js
push
sahf
cmp
mov
rorb
xor
sbb
ret
aam
subl
mov
mov
xor
jge,pn
adc
shrb
pop
cld
insl
xor
xchg
aas
push
lret
inc
jno
sub
push
adc
and
mov
or
sbb
mov
jns
mov
imul
and
xor
mov
sub
inc
ret
mov
mov
outsl
jg
mov
and
cmp
outsl
and
mov
push
iret
jno
inc
adc
xchg
cmp
js
test
add
cs
bound
xchg
and
inc
jo
hlt
dec
and
mov
inc
xor
mov
aas
insb
sub
rcrl
in
cmp
ds
pop
arpl
xchg
pop
scas
xor
loop
cltd
mov
insb
mov
push
test
xor
call
ljmp
sub
and
mov
jbe
ja
push
repnz
mov
push
fs
divb
shlb
insl
rorb
inc
or
in
cli
inc
loopne
fsubl
pusha
pop
es
add
scas
push
dec
shll
dec
push
cmp
jmp
jle
dec
xchg
sbb
cmp
mov
mov
out
and
shl
mov
mov
mov
mov
mov
push
ds
outsb
pop
jns
and
mov
adc
jbe
cmc
cmc
lods
xlat
and
jg
and
sub
scas
inc
sar
ljmp
mov
mov
xchg
sub
rorl
ds
nop
inc
adc
cld
loope
pop
loope
push
pop
fsub
xchg
add
add
cs
push
or
or
xor
lcall
xor
je
push
push
imul
cltd
push
mov
mov
and
push
jg
lret
sub
mov
pusha
push
lock
or
adc
push
push
sbb
mov
jbe
popa
mov
cmc
cmpsb
leave
xchg
loop
andb
lock
stos
mov
mov
dec
testb
pop
add
cld
mov
cmpsb
xorb
adc
test
popa
shr
not
cli
xchg
push
xorl
in
ss
inc
mov
add
outsb
pushf
dec
cld
mov
fdivrs
ficomps
imul
out
arpl
mov
cmp
insb
add
adc
push
or
sub
cmpsb
test
add
test
das
fistps
jl
fldl2e
ss
adc
lahf
ret
popf
xchg
inc
and
sub
hlt
fisttpll
lock
pop
fs
loop
mov
imul
les
lods
stos
adc
jo
addb
adc
mov
xchg
xlat
dec
scas
xor
pop
gs
jmp
mov
bound
cmp
dec
loopne
jnp
sub
out
jb
dec
loop
jnp
cli
or
jne
pop
fnstcw
cmp
lds
aas
sahf
pop
and
fidivs
cmpsb
push
fsubl
xchg
les
or
lock
mov
inc
xchg
aam
js
into
dec
xorb
jle
mov
movsl
flds
aaa
sub
popf
mov
fs
cmovbe
or
jl
mov
hlt
add
ljmp
sbb
aad
decb
sbbl
movsb
movsb
aam
push
sar
cmc
sbb
push
jb
or
mov
sub
jno
lea
mov
lcall
adc
mov
xchg
xchg
xchg
rorl
push
or
mov
imul
sub
lret
aam
jl
aad
ret
pop
push
mov
cld
and
dec
cltd
xchg
mov
mov
sbb
clc
cld
sub
int
push
sbb
mov
test
loop
jp
pop
test
inc
push
shlb
mov
push
repz
iret
pop
xchg
and
shll
cmpsb
sbb
or
jb
or
push
xor
adc
rolb
cli
xor
dec
outsl
push
clc
rolb
cmpb
xchg
mov
icebp
fnsave
jecxz
loop
lret
sti
fsub
xlat
xor
inc
fdivrl
and
shrb
sti
fcmovnu
pop
scas
pusha
mov
inc
push
dec
sarb
dec
add
roll
decl
pop
push
int3
sbb
cmp
dec
xchg
jb
mov
sub
cli
inc
adc
cli
mov
add
ja
push
cwtl
adc
xor
aam
pop
mov
xchg
lock
mov
cld
add
loop
dec
stos
or
mov
std
ja
cli
lock
push
xor
pop
mov
shl
stos
push
icebp
mov
imulb
js
inc
or
fistpl
inc
push
sbb
stc
push
mov
cmp
push
test
jbe
dec
imul
daa
sbb
aam
stos
sub
lahf
inc
jbe
repz
clc
lock
or
push
cs
push
sub
mov
xchg
fisubl
and
xchg
or
adc
adc
xor
test
inc
cmp
call
adc
or
mulb
inc
jb
fs
jp
fiaddl
or
popf
clc
push
scas
pop
lods
inc
lods
cli
in
mov
add
mov
dec
jno
jae
popa
hlt
decl
mov
pop
xchg
xchg
mov
and
sbb
add
push
sbb
xchg
and
or
xchg
jb
fadd
adc
xchg
icebp
dec
mov
and
xchg
insb
xchg
fdivrs
mov
insb
cld
inc
ja
popf
mov
stc
decl
aam
out
aam
hlt
dec
aad
movsb
movsb
ss
pop
test
stos
and
nop
and
pop
mov
inc
mov
dec
cltd
lret
or
jo
iret
push
cmp
inc
pop
pusha
add
imul
pop
xor
js
xchg
fs
ret
jbe
outsb
jae
adc
rcr
jle
and
testb
inc
dec
test
push
hlt
push
das
adcb
mov
ds
aas
xchg
and
push
xchg
arpl
or
das
mov
push
sbb
push
pushf
or
mov
inc
rcll
mov
nop
sub
mov
and
pop
mov
clc
ret
dec
ret
scas
clc
mov
sub
in
xchg
push
and
std
xchg
clc
arpl
jmp
test
jg
mov
fs
mov
cmpsl
mov
ss
jp
or
inc
or
ljmp
or
mov
leave
lcall
jae
jo
push
jge
pusha
adc
or
jns
push
add
shrb
cld
jge
lock
push
filds
lret
mov
cmp
sbb
stos
jb
orb
shll
jbe
pop
jnp
dec
sub
xchg
xor
movsl
push
push
adc
sarl
icebp
add
add
outsl
push
pop
mov
cmpsb
pop
push
aad
xor
xor
aaa
mov
in
outsb
jno
test
inc
xchg
adc
jne
dec
vucomiss
push
mov
add
imul
test
leave
push
ret
out
jle
dec
lcall
imul
xchg
inc
jle
add
test
or
pop
stos
repz
cmp
dec
pop
iret
loope
cmpsl
add
jg
cs
shll
add
mov
std
pop
daa
pop
rcrb
scas
incl
push
incb
mov
pop
jno
pusha
das
andl
pop
xor
inc
sbb
shrl
enter
lods
or
sahf
add
add
or
adc
add
adc
loop
repnz
sub
fisttps
pop
mov
lret
or
mov
mov
jl
call
xor
dec
loope
ret
out
add
repnz
pop
sbb
jle
mov
int3
xor
and
or
divl
mov
int3
ret
ret
into
loop
and
pusha
sub
or
je
mulb
cmp
push
push
push
add
call
lcall
jge
stos
sbb
adc
cld
jae
inc
imul
pop
jle
std
lcall
jbe
aam
and
imul
mov
mov
or
mov
xchg
xlat
mov
imul
je
sbb
add
mov
adc
out
fcoms
aam
nop
lods
mov
std
fldt
cmp
pop
jp
sub
outsl
fwait
xchg
adc
test
adc
add
cmp
ljmp
dec
dec
incl
and
sub
pop
shl
add
or
dec
int3
mov
pop
fcomp
insb
into
xlat
and
mov
clc
pop
or
movsb
mov
push
jecxz
xchg
scas
add
ficompl
mov
pop
scas
inc
xor
lahf
ror
mov
xor
xor
dec
mov
sbb
cld
fadds
andl
push
fldenv
inc
add
push
mov
in
xchg
add
mov
pop
mov
pop
push
xlat
shlb
lea
add
mov
mov
mov
push
push
mov
insb
bound
clc
dec
ds
mov
or
stos
mov
add
call
rcr
inc
test
ja
and
push
jge
and
inc
xor
xorl
les
test
dec
cmp
jne
xor
pop
aas
lahf
mov
mov
adc
xchg
pop
les
cmp
xorl
sbb
jno
shr
jnp
jge
adc
jl
pop
dec
test
mulb
sub
stc
add
dec
pop
push
mov
dec
in
adc
stos
and
mov
dec
mov
fadds
je
mov
movsl
push
mov
shr
xchg
cs
push
cs
loope
scas
hlt
daa
add
lds
jge
add
inc
fdiv
and
stos
xchg
into
fisttpl
movsb
inc
imul
and
mov
mov
sub
cld
inc
or
int3
aam
and
das
xor
or
push
add
mov
int
lret
cmp
inc
and
mov
add
mov
into
nop
dec
xor
aam
cli
int3
cli
subl
or
xchg
leave
push
call
arpl
mov
pop
lods
std
out
push
dec
daa
insl
fsubrl
clc
out
adc
pushf
jge
push
push
sbb
or
roll
pushl
or
push
pop
ret
adc
cmpsb
das
jno
aam
and
push
and
mov
incl
mov
xchg
movhps
scas
mov
idiv
dec
stos
jle
enter
rcl
fs
cmc
pop
aaa
loopne
test
or
rcrl
ret
push
cmpb
fwait
cmp
pop
sbb
imul
call
or
add
sub
mov
and
xor
data16
andl
jns
adc
ljmp
movb
das
and
dec
dec
ljmp
clc
adc
xlat
dec
mov
cltd
std
mov
push
push
movsb
js
ret
fwait
inc
cmp
scas
xor
inc
fucomi
mov
test
inc
jl
jecxz
mov
scas
gs
in
adcl
clc
mov
sbb
movsl
ret
xchg
mov
nop
loope
sarl
lahf
adc
and
mov
out
int3
stos
xchg
add
andl
mov
mov
mov
mov
int
loopne,pt
pop
cmp
daa
ds
ss
xchg
adc
push
or
mov
aaa
inc
or
push
inc
dec
mov
xor
mov
test
aad
cmp
jbe
dec
mov
sbb
mov
push
sete
sar
pushf
popf
cld
movsl
loopne
sub
test
push
dec
mov
mov
je
lret
das
ds
stos
push
xor
ljmp
mov
push
push
mov
decb
adc
adc
cld
divl
loope
pusha
test
mov
mov
push
sbb
out
pushf
rcrb
push
int3
fs
adc
sbb
stos
inc
fsubs
pop
bsf
sub
bound
cli
mov
pop
inc
les
test
mov
and
ja
aam
pop
mov
fcmovbe
pop
pop
push
jl
mov
test
fistpl
jo
lcall
pop
xchg
pop
jle
pop
and
pop
dec
frstor
mov
lods
add
push
dec
push
mov
sbb
dec
in
lret
dec
aaa
inc
dec
test
push
inc
out
pcmpgtd
add
scas
and
inc
in
pop
xchg
enter
stos
mov
ja
and
pushf
es
fsub
out
lock
shlb
and
frstor
push
or
mov
mov
shl
fsubrs
jp
loope
cmp
jno,pt
mov
dec
das
adc
in
sub
cli
test
es
mov
aas
mov
jbe
imul
lea
xor
test
push
xor
test
lods
pop
lock
and
inc
or
xor
dec
mov
xchg
cli
imull
xor
enter
call
hlt
pusha
lahf
dec
pusha
notl
lods
push
sahf
ljmp
xor
add
inc
inc
or
or
filds
cli
push
loopne
ret
ret
jle
and
enter
addr16
dec
in
imul
mov
cmp
xor
xor
clc
cwtl
movb
mov
lahf
inc
xchg
aaa
icebp
and
adc
pop
mov
xlat
mov
add
pop
or
push
mov
mov
xchg
add
xchg
mov
adc
loop
call
or
sbb
movsb
mov
jle
std
cltd
rclb
cmc
xchg
mov
add
lea
not
shr
xchg
fisttps
daa
cmp
inc
or
inc
and
test
xchg
rorl
cmp
and
out
sbbb
int
es
rep
push
xor
movsb
dec
call
std
testb
xchg
sub
adc
or
fs
adc
xchg
js
and
jp
push
xor
jb
sub
rcll
mov
ds
and
adc
lods
push
loopne
gs
dec
pop
or
push
icebp
hlt
test
dec
ss
into
push
jbe
and
mov
shrb
in
mov
pop
cld
das
bound
pop
ret
imul
sbb
fimuls
push
lea
mov
adc
shl
adc
dec
aad
loope
lret
push
scas
push
int3
aam
add
pop
sbb
sti
jns
in
enter
and
push
insb
push
fistl
pop
cmpl
mov
lcall
mov
or
inc
or
fistl
or
pop
push
fnstsw
dec
ret
lret
mov
insb
or
push
insl
loopne
add
mov
push
mov
out
es
sbb
aad
dec
sub
daa
aaa
cmc
inc
or
mov
mul
xor
or
adc
test
add
fimull
faddl
out
fs
and
movsb
in
scas
stos
mov
into
sbb
xor
in
sbb
jl
pop
pusha
lds
cmp
popf
add
jo
sbb
push
fmull
sbb
push
lea
xchg
je
mov
or
ret
mov
mov
pop
insl
push
xor
inc
decl
aam
icebp
push
dec
or
adc
mov
jne
inc
mov
mov
faddl
add
xchg
mov
mov
call
mov
ficomps
je
xchg
adc
repnz
outsb
jp
inc
jbe
loope
cli
nop
adc
sahf
fnstsw
xchg
sar
stc
das
jne
push
mov
push
xchg
insl
or
mov
pop
shrb
push
clc
sbbb
mov
sub
inc
fcomip
add
sub
cmp
push
dec
insb
jo
andb
cmp
jmp
scas
fsts
push
xchg
call
pushf
cwtl
inc
dec
sbb
or
fsubrl
lea
data16
cli
pop
cmp
and
or
add
mov
fcomp
sbb
xchg
mov
aad
lret
dec
dec
cmp
test
lock
mov
loop
test
aam
pusha
stc
inc
add
outsb
outsl
cmp
pushl
fcoml
mov
jmp
and
sbb
dec
or
add
cwtl
movsl
icebp
decl
mov
ficomps
inc
loopne
pop
jge
addb
rolb
jo
aas
decb
lods
xor
add
jmp
add
mov
mov
stos
pushf
mov
push
xor
insl
ret
mov
mov
or
sbb
mov
in
sti
xor
stos
add
mov
test
push
pop
inc
data16
xchg
fnsave
jg
mov
les
add
call
jbe
ret
jl
sbb
jnp
bound
push
mov
test
xor
mov
push
push
sub
stos
hlt
or
dec
sbb
loopne
mov
cmp
lret
loopne
outsb
push
ds
pop
and
lock
sbb
test
push
je
jg
cld
testb
shlb
jp
jbe
jno
xor
push
into
xchg
sbb
mov
orb
xorb
mov
jo
mov
or
xor
in
sbb
jae
pop
iret
jo
into
mov
mov
xchg
push
loope
jg
sbbb
pop
cmp
arpl
nop
mov
lret
push
push
jne
nop
andb
mov
test
add
lcall
inc
xlat
sub
ret
jle
repz
mov
in
je
stos
add
mov
xor
cmp
pop
sub
out
sbb
insl
adc
xor
sbb
and
pop
cmpsb
mov
fcom
xchg
clc
std
dec
test
sbb
push
pop
fs
sbb
rolb
cwtl
test
cmp
pop
jp
in
int
sti
lcall
aaa
or
mov
pop
ss
rolb
pop
add
or
sbb
imul
push
inc
xchg
sub
and
shll
mov
mov
mov
push
jecxz
or
adc
cmp
hlt
dec
xchg
xchg
mov
and
inc
xchg
cmp
data16
mov
lods
clc
push
xor
lods
outsb
hlt
sar
lahf
mov
inc
out
jmp
shr
cmp
pop
sbb
in
int
inc
sbb
push
jnp
sbb
andl
inc
mov
dec
jno
mov
mov
les
dec
and
lods
dec
cmpsl
inc
cmp
ljmp
cmp
aam
sarb
aam
push
stc
jo
sbb
out
dec
xorb
lea
xchg
sub
mov
cmpsb
jo
xlat
popa
je
mov
into
mov
inc
and
adc
js
ret
loop
or
or
insb
push
je
xchg
iret
mov
scas
cmp
cmp
or
or
cmp
hlt
into
cmp
pushf
mov
incl
xchg
int
pop
adc
mov
sarb
xlat
mov
or
out
bound
jbe
sbb
dec
pop
dec
out
ret
dec
jp
xchg
inc
inc
into
das
push
je
mov
push
fucomi
and
fbld
xor
cmp
xchg
int
or
sbb
adc
outsb
push
arpl
and
cmp
cli
xor
and
and
insl
jecxz
jl
pop
sub
or
loope
or
sbb
and
adc
in
daa
mov
push
int
gs
mov
rorb
inc
je
push
jmp
lock
mov
fwait
and
test
push
subl
out
lea
clc
add
fiaddl
filds
sbb
sarb
in
hlt
shrb
dec
pushf
repnz
call
add
dec
test
xor
mov
push
dec
fidivrs
repnz
enter
sub
insl
call
push
sub
inc
xchg
sbbl
imul
addr16
add
jle
fmulp
xchg
out
inc
mov
pushl
std
xchg
and
add
pop
sahf
aas
stos
sub
cld
ljmp
xchg
jb
xor
xchg
cmp
adc
add
fdivr
fs
inc
push
xor
std
adc
adc
fdivr
std
ficompl
cs
dec
inc
sar
lcall
inc
push
xor
or
mov
loop
gs
imul
mov
out
adc
dec
test
or
sbb
sbb
xchg
xor
xchg
push
jp
jge
xchg
mov
es
lcall
sub
mov
and
adc
movsl
jg
lea
movlps
mov
insb
push
inc
je
sbb
cld
inc
pop
aas
mov
dec
test
jmp
push
jb
or
dec
mov
pop
ret
fisttpll
andl
inc
jecxz
call
orl
mov
or
call
and
scas
inc
aaa
xlat
rcrl
andb
insb
cld
and
rol
sbb
out
test
dec
mov
mov
clc
mov
xor
and
leave
dec
or
or
push
dec
leave
clc
pop
add
cmp
fcomp
or
clc
jg
ss
out
xchg
and
adc
xchg
adc
inc
sbb
push
xor
and
sarl
adc
xlat
pop
xlat
dec
dec
call
cmp
adc
shl
sahf
jo
int3
adc
inc
adc
into
and
in
fnstcw
lods
adc
mov
fadds
add
jl
jmp
pop
out
lea
sbb
or
or
ret
mov
test
lret
mov
sar
mov
add
aas
mov
hlt
jno
lods
mov
sbb
jp
in
imul
fsubl
shl
xor
sub
repnz
ss
pop
out
pop
or
lock
push
mov
sub
push
inc
sub
loop
js
ds
adc
sar
aam
cmp
mov
xor
decb
sub
hlt
loopne
rcrb
repz
lock
cli
adc
outsl
xchg
or
ret
je
sbb
mov
inc
add
negl
test
add
xlat
sbb
in
jnp
sub
and
add
adc
mov
and
pop
ljmp
mov
adc
pop
adc
inc
pop
fcoml
shr
sbb
movsl
pop
fwait
hlt
sbb
fmuls
subl
mov
add
add
mov
add
dec
fcomp
call
movsl
cmp
cwtl
push
lret
xchg
sahf
pushf
cltd
fs
enter
and
dec
jnp
into
jo
pop
xor
jmp
test
lahf
fdivl
cmp
add
int
adcb
out
pop
stos
sub
mov
push
and
or
cld
mov
incl
cwtl
hlt
shrl
cmpsb
iret
jb
ja
subb
loope
jae
xchg
adc
repnz
xchg
or
jle
sbb
in
push
inc
call
xlat
cmpsl
incb
inc
pop
xor
mov
roll
jo
adc
push
test
dec
je
shlb
mov
push
push
xor
mov
lods
sbb
enter
cli
or
mov
loopne
jno
dec
mov
ret
push
or
mov
cmp
lods
mov
jge
frstor
or
sbb
mov
push
fmull
fs
xorb
div
subl
decb
ret
std
sub
sub
in
leave
pop
shr
pop
adc
daa
push
mov
fdivrs
loop
dec
psubsw
adc
out
dec
psubb
dec
xchg
dec
mov
push
push
and
jb
mov
xchg
or
jg
inc
mov
adc
and
push
es
outsl
sbb
push
jno
add
inc
cld
call
push
mov
mov
popl
lcall
inc
add
sbb
lcall
dec
jmp
jle
mov
add
insb
int3
jecxz
dec
rcl
dec
xchg
out
adc
sub
xor
mov
outsb
sbb
push
cmp
jecxz
or
mov
xor
and
inc
int
ja
jmp
pop
mov
lret
fidivl
insl
std
mov
sub
mov
and
mov
cmpsl
std
enter
sbb
mov
mov
cld
ljmp
or
pop
adc
mov
jp
or
and
clc
iret
sbbb
push
cmp
shrl
flds
cmp
push
add
cmpsb
lods
gs
cmp
int3
sub
jbe
mov
mov
repnz
lods
popa
push
mov
mov
xor
or
test
dec
pop
ret
jns
push
lcall
pop
mov
adc
ud0
lret
stos
push
sub
jnp
sbb
ret
mov
jmp
movaps
dec
xor
and
mov
push
sub
push
scas
pop
in
in
scas
pop
lcall
add
and
xor
incb
test
mov
orb
inc
test
mov
add
fstpl
cli
aam
divb
mov
jle
push
subb
push
or
mov
andb
lret
sbb
aad
lea
js
incb
inc
divb
push
mov
into
push
jg
mov
jnp
in
or
xorb
popf
inc
call
inc
push
fiaddl
sbb
test
mov
mov
push
fcmovnbe
dec
arpl
dec
mov
mov
and
fcompl
es
pushl
or
add
bound
out
xor
push
dec
sahf
sub
xor
or
out
or
enter
cld
and
push
mov
mov
sub
add
push
inc
in
fs
jbe
dec
jecxz
xchg
int3
in
or
les
adcl
adc
lods
arpl
add
add
lock
aaa
add
ja
lret
das
clc
std
sbb
in
in
aaa
lcall
sbb
outsb
pop
fs
fildl
sbb
jle
popa
lcall
cmp
test
mov
push
repnz
fwait
add
xchg
add
xor
jg
adc
mov
xchg
out
movd
ret
cld
pop
mov
mov
dec
xor
dec
shll
mov
repz
leave
mov
xor
push
sbb
rorb
movl
sbb
pushf
add
and
cmp
mov
jmp
das
add
and
cmp
stos
hlt
scas
fbstp
pop
fmull
jbe
fs
insl
mov
lret
out
insl
add
ljmp
cmp
sub
loopne
addr16
clc
ret
or
btc
add
jg
xchg
xchg
fsubr
xor
mov
sub
aad
pop
shlb
pop
and
es
fdiv
mov
inc
inc
stos
inc
js
add
stos
xchg
mov
data16
rclb
call
stos
mov
call
pushf
orb
repnz
add
push
xchg
sahf
aam
and
cld
jns
mov
out
cmp
push
ljmp
lods
mov
xor
jbe
add
lcall
sarl
add
mov
loope
aad
clc
pushl
std
xchg
adc
movsb
sub
xor
out
movsb
sahf
outsb
dec
fldt
lds
adc
push
or
push
push
mov
es
jo
cld
das
inc
call
es
sub
call
inc
xchg
lret
movsb
cld
pusha
add
push
cwtl
inc
js
filds
stos
pop
sub
loop
ret
mov
mov
jle
mov
scas
push
sub
sub
in
cmp
push
subl
sub
mov
push
sbb
mov
popf
add
rorl
mov
and
mov
jle
sbb
mov
jecxz
push
or
inc
fiaddl
pusha
xor
mov
xchg
inc
push
add
mov
mov
add
fidivl
iret
call
imul
xchg
lock
mov
xor
mov
sbb
leave
push
push
ret
dec
ja
pop
mov
iret
cmp
xchg
mov
jge
test
sbb
rclb
adc
je
mov
xchg
aam
mov
repnz
or
ret
outsb
inc
cmp
rep
jge
add
lods
in
in
mov
xlat
jecxz
mov
dec
xchg
adc
xor
out
sahf
dec
imul
pop
sahf
stc
mov
cmp
adc
aas
fdivs
dec
dec
sbb
pop
dec
push
leave
into
add
decb
ss
pushf
aam
mov
mov
or
and
cwtl
sbb
dec
adc
clc
sub
mov
jl
inc
outsl
push
sar
adc
push
push
call
mov
push
sbb
push
fcoms
call
jge
mov
jp
jle
or
mov
or
mov
call
add
jae
loop
xchg
pop
and
add
out
dec
addps
inc
cmp
cld
mov
xchg
xchg
fiadds
out
out
and
subb
sub
add
ret
rorb
add
ss
movsb
push
subb
fadd
cs
pusha
das
cmp
pop
lock
mov
xor
inc
enter
xchg
and
and
loop
cmp
fstpt
jge
fwait
adc
cli
shlb
cmc
sahf
jne
scas
pop
cs
xchg
mov
mov
je
pop
xchg
sub
dec
jmp
loope
xchg
insb
pop
daa
shll
push
jnp
outsl
insb
xor
sbb
or
inc
xor
test
fistpll
pop
into
and
and
test
rep
jmp
jl
clc
add
sbb
mov
cmpsl
adc
loop
cli
pusha
cmp
mov
xor
adc
pusha
ljmp
idiv
psllw
mov
push
mov
add
mov
xchg
sbb
pop
mov
inc
les
jb
std
outsl
icebp
lods
shrb
sti
sub
aas
xor
lea
int3
es
sarl
ret
cld
stos
nop
shll
push
prefetch
or
xor
lea
orb
add
add
push
dec
xor
rclb
out
js
mov
leave
mov
adc
jo
pop
mov
adc
in
push
xchg
ret
pop
clc
xchg
mov
xorb
movsl
stos
loop
int
andl
sub
repnz
sbb
cmp
add
xchg
and
jns
mov
outsl
add
imul
lds
insb
mov
or
or
mov
icebp
aas
das
push
jnp
push
sbb
pusha
neg
shrb
test
cmp
mov
mov
xor
add
adc
and
xchg
jg
test
or
pusha
and
cmc
or
fbld
orb
xchg
mov
in
cmp
das
sub
inc
jae
popl
out
lods
and
fidivrl
pop
sub
dec
and
xor
dec
or
shl
scas
jns
pop
out
inc
stos
mov
or
mov
rcrb
mov
and
mov
inc
movsl
pop
in
mov
pop
out
fimull
inc
mov
or
jne
imul
iret
shrb
sub
adc
mov
inc
mov
sahf
add
xor
mov
call
testl
lret
sar
pop
jge
int
sub
decb
add
jns
sub
sub
sub
sub
add
cmp
mov
shl
movsb
mov
lods
mov
inc
inc
or
in
call
adc
xchg
xchg
lock
or
data16
dec
mov
mov
or
rcrb
or
lods
xor
xor
decl
mov
or
add
orl
xor
pop
loope
sahf
push
mov
mov
dec
cvtps2pd
out
movsb
push
push
adc
dec
sub
ljmp
lret
mov
nop
fsubrl
ss
in
pop
and
xor
jg
je
pop
aaa
pop
dec
mov
cwtl
xor
dec
fildll
jl
gs
lock
aas
mul
std
dec
imul
mov
xor
or
push
sbb
jbe
xor
push
push
sub
or
stc
pop
inc
adc
pop
mov
mov
sub
sub
jno
pop
add
rorb
cmp
mov
inc
loope
std
out
sub
cwtl
cmpsl
rcl
daa
rorl
fbld
mov
and
loopne
test
fcomip
lahf
ds
xor
adc
mov
popa
xchg
xlat
sbb
jge
adc
subb
dec
push
ja
and
sub
in
bound
lahf
out
add
nop
or
gs
cmp
insb
jl
xchg
fcomps
insl
rcrl
push
pop
scas
outsl
mov
pop
or
call
xor
adc
fisubs
sub
inc
mov
push
mov
aaa
adc
inc
xor
aaa
hlt
frstor
adc
popa
pop
xchg
icebp
in
xchg
or
mov
fisubs
mov
cmp
pop
rolb
faddp
test
or
mov
out
aad
mov
xchg
in
fs
xor
mov
mov
fstpl
push
add
pop
pop
fildl
mov
inc
cltd
push
pop
dec
mov
in
mov
adc
shl
sub
in
movl
insb
xchg
jmp
lds
mov
ret
pop
push
shrb
jno
pop
imull
data16
mov
mov
or
sub
aas
sub
mov
das
fdivrp
lret
in
outsl
shrb
fimull
inc
pop
jbe
mov
pop
ds
xchg
jl
inc
sahf
inc
sbb
jecxz
mov
mov
or
sbb
ret
xor
push
mov
pop
loopne
xor
subb
jp
push
jmp
shrb
orl
dec
pop
dec
les
cs
and
roll
aaa
dec
out
sub
push
xchg
add
sbb
add
shlb
mov
mov
cmp
mov
jb
add
xchg
mov
add
out
aaa
test
cltd
into
adc
addl
sbb
jmp
dec
cmpsl
and
icebp
xchg
mov
mov
cmp
lahf
cmpsb
rorb
aaa
or
xor
pop
xchg
divb
xchg
push
push
sub
sbb
jecxz
loopne
inc
dec
fs
rorb
inc
mov
xchg
mov
roll
mov
mov
es
and
inc
into
adc
jg
mov
mov
dec
xchg
mov
dec
mov
pushf
or
xchg
jb
hlt
cmpb
push
test
xchg
jb
push
mov
shlb
loop
test
fisubrl
inc
shlb
cld
xchg
loopne
adc
insl
sbb
add
push
cwtl
jnp
push
incl
dec
jp
mov
addb
hlt
loopne
aam
in
pop
jp
bound
cmpsb
dec
std
add
cli
cmp
cmp
fisubl
and
aas
adc
sub
jae
cmp
mov
mov
nop
fidivrl
push
xchg
adc
leave
inc
xchg
rcl
ficoms
mov
out
fs
dec
sbb
sub
outsb
add
add
add
es
sbb
adc
jmp
and
jns
add
lock
and
iret
xor
scas
mov
or
adc
push
test
lret
jle
inc
xchg
cmpsl
iret
test
push
mov
ljmp
adc
in
ljmp
push
loop
mov
in
jle
cmpsl
lock
push
dec
arpl
out
popl
loope
dec
cmpsb
push
adc
shr
lds
ret
xchg
movsl
sub
push
mov
or
and
jecxz
jo
inc
std
xor
dec
mov
out
mov
outsb
stos
ss
fwait
out
int3
leave
cmovle
scas
in
sub
xor
insl
rcr
xchg
jle
cmp
push
das
pop
push
arpl
fsubl
hlt
scas
adc
int3
push
push
lcall
push
out
lret
and
les
adc
push
sbb
mov
and
sub
jmp
sub
fs
adc
ljmp
popa
les
adc
rcll
out
leave
pop
cmp
lods
ljmp
lods
in
jne
inc
inc
loopne
arpl
jo
cmp
ds
xchg
adc
nopl
lea
adc
push
out
or
mov
adc
andb
stos
fimull
push
mov
xchg
lods
popa
xchg
test
cld
or
mov
mulb
push
xor
insb
arpl
xor
mov
ret
or
add
mov
fcmovu
mov
shr
dec
push
out
shrb
and
outsl
pop
lcall
negb
push
mov
clc
add
lds
xor
mov
loopne
andb
aam
fidivl
mov
test
out
sbb
pmulhw
lock
insb
in
xchg
sbbb
cmp
pushf
aaa
and
aad
cmp
and
ret
adc
repnz
fimull
mov
fwait
pop
int
inc
pop
fcoms
out
xor
sarb
shrb
out
add
push
sub
sbb
mov
loopne
das
mov
movsl
mov
dec
aam
stos
decb
pusha
or
into
push
out
outsl
hlt
jmp
lcall
shll
enter
pop
dec
in
inc
hlt
sbb
push
push
bnd
imul
lea
mov
lods
leave
push
imul
stos
pop
ss
jno
xor
sub
add
sbb
fwait
pop
testb
adc
negb
push
gs
xor
mov
sub
or
dec
adc
xchg
outsl
cmp
ljmp
cs
dec
lock
inc
in
fs
movsb
scas
mov
jbe
int3
jmp
nop
inc
mov
cmp
hlt
stos
aad
in
icebp
mov
mov
xchg
hlt
pop
repnz
xor
push
mov
dec
stos
sub
push
mov
lea
sbb
mov
lea
std
push
leave
pop
fsubrp
mov
push
mov
in
nop
sub
xchg
mov
or
push
gs
pop
scas
pusha
push
push
loope
ljmp
mov
mov
xor
push
mov
mov
cmp
scas
insl
ret
jne
mov
mov
loope
add
and
inc
or
pop
xor
cmp
mov
daa
pop
repz
pop
and
dec
fistpll
aaa
lcall
enter
pop
cli
inc
stos
jecxz
cmp
out
mov
jle
scas
jp
or
call
dec
outsl
daa
jle
ljmp
dec
push
or
dec
into
lock
aad
fisubrs
xchg
in
enter
sub
hlt
stos
push
cmpsb
bound
mov
hlt
aam
lcall
fldl
jne
mov
pop
xlat
decl
push
inc
rclb
sub
mov
ret
push
inc
push
dec
inc
data16
or
jl
fsubrl
mov
dec
cld
shr
daa
cmp
sub
cld
pop
ret
push
outsl
jb
pop
cmp
mov
les
adc
or
mov
stos
enter
lret
lcall
cmp
mov
std
mov
test
sbb
test
mov
pop
insl
xor
jmp
pop
push
icebp
push
pop
fidivrl
icebp
stos
add
adc
push
or
xchg
push
loopne
mov
out
outsl
imul
add
jne
cli
pushf
mov
mov
push
pop
movsb
jns
sub
push
push
mov
cmp
rclb
inc
jns
mov
mov
fidivs
aad
movsb
xchg
popf
mov
mov
scas
mov
push
ret
lock
inc
data16
les
push
int
mov
xchg
jle
push
push
in
cmc
dec
sbb
pushf
rol
xchg
fisttpll
rol
sbb
sub
cs
data16
iret
fidivs
ror
add
loopne
mov
jb
sbb
cli
orb
xchg
fiaddl
ljmp
aas
dec
sub
lahf
push
cmpsb
out
lods
sbb
vshufps
dec
iret
dec
lcall
cmp
push
decl
addr16
xor
lret
sub
in
sar
pop
sahf
xor
or
jle
out
inc
push
sbb
insb
mov
xorb
mull
movsb
inc
adc
mov
mov
lret
movsl
pop
icebp
notb
loop
rcrb
jg
or
in
in
les
cmp
jb
push
mov
adc
out
fucom
lods
pop
call
rol
mov
inc
packsswb
aas
sbb
jnp
inc
dec
push
lods
and
inc
or
pop
fisttpll
shrb
hlt
add
cmp
fildll
add
jecxz
dec
xchg
shlb
jb
imul
jmp
push
inc
cld
jmp
loope
lods
mov
jb
aam
push
sub
loop
inc
mov
ret
and
clc
loopne
test
lds
outsl
ss
add
loop
jl
jmp
test
sbb
add
inc
mov
dec
inc
loopne
xor
pop
stc
jmp
rcr
into
jo
repnz
jecxz
xchg
cmpsb
aaa
sub
push
fdiv
sbb
enter
or
les
sbb
outsl
push
jnp
inc
add
gs
cmp
mov
add
hlt
jnp
mov
or
aaa
add
jge
shlb
mov
popa
or
add
jmp
jecxz
mov
lcall
es
movsl
out
test
movsl
fldt
test
add
pop
es
xor
js
scas
push
pop
mov
push
aad
call
ljmp
mov
add
adcl
ret
dec
mov
and
xchg
outsl
sub
mov
lock
arpl
mov
xorb
adc
jge
mov
push
mov
into
aam
pop
int3
pop
or
imul
dec
mov
mov
push
xchg
push
clc
mov
fdiv
xchg
xchg
add
dec
push
xchg
or
or
pop
inc
jecxz
outsl
pop
mov
adc
subb
fidivrs
aaa
adc
mov
mov
sahf
ds
mov
call
push
xchg
pop
mov
lds
pop
icebp
pop
cmpsb
or
jg
outsb
dec
dec
and
inc
mov
cli
lret
fldl
dec
xchg
cltd
inc
lods
shrl
mov
clc
mov
cltd
pop
cld
js
or
mov
pop
aas
ret
push
test
call
push
xor
fmull
and
je
or
xor
lods
fsubr
retw
inc
push
and
lcall
mov
inc
xor
xor
sarb
fsubl
add
sub
push
xor
into
inc
cmp
fsubr
cltd
inc
lret
mov
mov
scas
add
mov
outsl
sbb
je
lock
cmp
test
rolb
js
call
shrb
sub
dec
pop
hlt
push
xor
inc
xchg
in
xchg
fcmovnbe
mov
fsubrl
add
imul
mov
xlat
adcb
dec
inc
pop
jne
movsl
rcl
add
add
mov
hlt
sub
loopne
clc
mov
mov
cmp
test
fldenv
mov
fs
lods
xchg
lahf
pop
outsb
push
xor
js
or
ret
fdivl
sub
stos
ret
pop
aad
jge
lods
loopne
mov
loope
cmp
adc
cwtl
clc
stos
stc
daa
and
cmp
pop
jp
dec
insl
inc
lahf
fisubs
cld
mov
mov
out
jo
je
rorb
ds
adc
push
call
lcall
rol
fistl
mov
out
add
inc
lcall
imul
jge
and
pop
lret
xor
stos
and
push
mov
es
fistl
ds
and
xor
aas
mov
xchg
xchg
pop
inc
add
jbe
les
inc
sbb
dec
jne
sti
jo
enter
cmpsl
jno
data16
stos
mov
decl
and
xor
pop
jg
mov
jae
add
fwait
repnz
mov
or
call
sub
stos
sbbb
mov
push
dec
aaa
xor
popa
xchg
add
or
lods
cwtl
clc
in
shrl
mov
mov
popa
and
pop
daa
test
pop
mov
sub
inc
pushf
dec
adc
fisubl
icebp
push
fildl
fsubr
call
or
push
push
shlb
ret
call
imul
daa
dec
and
jmp
xor
xlat
aam
pop
icebp
push
pop
shll
cmp
jbe
pop
inc
nop
inc
sti
push
add
sub
xchg
fdiv
adc
mov
mov
aam
jno
fstl
loop
mov
push
mov
mov
test
xor
into
icebp
push
shlb
xchg
and
pop
xor
fwait
xor
fs
push
jl
adcb
lahf
add
pusha
or
das
fcmovnbe
gs
mov
pop
pusha
jle
push
test
mov
lcall
push
or
xor
mov
cmpl
cltd
adc
dec
rcll
pop
data16
mov
sub
and
js
adc
push
jnp
sbb
lcall
call
jmp
out
pop
or
cwtl
popf
lcall
pop
js
jmp
sub
loopne,pn
and
je
lock
inc
cmp
dec
inc
rolb
cmp
inc
leave
sbb
jo
xor
data16
in
ss
pop
xchg
jp
repz
add
add
xchg
sub
test
xor
xor
outsl
popf
js
sbb
xor
call
pop
dec
jbe
lret
shlb
clc
movsl
ret
cmpsb
mov
sahf
test
int3
into
gs
data16
sar
cmp
xor
data16
adc
loop
sbb
fsts
lock
insb
pushf
je
mov
or
sbb
push
lahf
cltd
lahf
test
ja
lret
test
xor
mov
mov
adc
push
cmp
scas
push
icebp
jmp
mov
rorb
cmpsl
jge
mov
xchg
jne
stos
cmp
push
mov
mov
mov
mov
pushf
jno
pop
jne
sub
jmp
jg
cmp
jp
xchg
push
je
dec
fcmove
incl
sub
sub
cmpsb
int3
push
adc
sub
push
lock
lea
jmp
or
call
jl
lds
push
mov
mov
xor
incb
popf
loop
lcall
pop
push
fcomps
xchg
mov
inc
and
out
push
inc
aad
push
pop
cmpsb
insb
dec
mov
repz
and
xor
ljmp
lods
mov
sbb
lret
fcmovnu
fs
pop
loop
mov
pop
notl
shrb
hlt
aaa
subb
arpl
mov
mov
and
dec
lret
mov
js
lret
lcall
fildl
push
sub
xchg
sub
push
and
popf
inc
adc
and
jecxz
fcoms
sub
and
dec
mov
xor
and
mov
mov
jp
sbb
cmp
jns
je
repz
sbb
incl
lret
ret
movsl
pop
and
rolb
lock
ffree
inc
ds
ljmp
inc
or
leave
enter
insl
popf
fisttpll
dec
rol
out
xorb
dec
or
push
icebp
outsl
xchg
xor
and
adc
fcomip
gs
add
or
cs
aaa
test
push
dec
test
orl
sti
xor
pushf
std
pop
sub
sbb
adc
fstpt
fucomip
and
fdivrs
and
out
xchg
rorb
or
adc
movups
in
mov
push
loope
inc
cmpsb
lods
ficompl
pusha
push
jae
jnp
sbb
dec
jl
dec
sahf
dec
inc
xchg
outsb
mov
ret
cwtl
jnp
sub
lea
mov
dec
stc
jl
int3
add
jecxz
jbe
adc
sub
ud0
pusha
or
popa
and
mov
out
clc
popl
loop
cltd
pop
dec
subb
js
and
ficompl
push
int3
xchg
js
scas
data16
mov
jo
mov
adc
mov
xor
mov
sbb
sub
add
xchg
outsb
xorl
adc
push
daa
push
cmpsb
ss
incl
mov
dec
outsb
mov
adc
add
cwtl
loopne
inc
push
push
sbb
decl
fs
push
and
pop
sub
js
ret
lahf
dec
lret
ret
pusha
lock
addr16
xor
adc
mov
jno
adc
mov
dec
xor
fbstp
stos
mov
xor
jb
lcall
push
xchg
fwait
mov
dec
push
dec
dec
xor
xlat
and
das
jb
push
xchg
adc
pop
sub
repnz
cmp
cmp
sbb
xchg
and
push
insl
testb
sub
pop
dec
push
add
pop
mov
pop
insb
in
mov
insl
scas
add
hlt
insl
les
sbb
pop
fucomip
ljmp
fcoml
dec
push
add
add
insl
lea
dec
ss
jne
in
or
ret
adc
dec
fmuls
cmp
push
fs
test
xor
lods
hlt
mov
cmp
js
xor
mov
xchg
imul
ja
xchg
rcrb
setno
std
in
add
daa
inc
andb
ret
jle
push
adc
sbb
add
and
mov
pop
inc
mov
shrb
mov
mov
mov
subb
xchg
ss
dec
xchg
test
mov
in
push
mov
pop
imul
rcl
xor
ds
orb
pop
sub
add
insb
and
mov
rcrb
sbb
js
into
xor
cmpsb
xor
sub
jbe
or
sub
mov
inc
adc
inc
decl
push
aam
js
pop
pusha
inc
fistps
cmpl
pop
loope
mov
out
and
mov
mov
sbb
push
jno
xchg
incl
or
ret
xchg
and
cmp
add
rol
test
sti
cmc
lods
or
mov
mov
mov
shll
push
adc
out
and
push
dec
loopne
pusha
push
mov
sbbl
testl
hlt
mov
outsl
pop
xor
push
mov
cld
ds
add
daa
sbb
repnz
sbb
iret
cmpsb
lcall
pop
and
push
cld
xchg
loopne
mov
data16
or
adcb
out
int
sbb
sar
addb
inc
in
push
push
fdivrp
cmpsb
cmpb
adc
or
sbb
push
dec
lret
aas
psadbw
lds
fcos
movl
pusha
mov
push
mov
dec
lcall
cmpsb
pop
mov
icebp
popa
flds
cmp
ljmp
dec
rolb
mov
add
hlt
js
jae
cwtl
push
call
pop
outsb
cmp
popf
push
int3
sbb
adc
add
xchg
cmp
shll
rcrb
or
jne
dec
pop
test
or
jp
sub
lcall
pusha
wrmsr
mov
push
out
dec
cmpsb
test
cmp
jo
xchg
movsl
push
sbb
pop
leave
dec
cwtl
cmpsl
adc
cmpsl
sbb
xor
or
jle
rolb
xor
push
ret
test
push
add
dec
hlt
jb
jns
arpl
xchg
dec
xchg
add
pushf
add
popf
lock
cld
push
mov
xor
xor
sahf
push
sub
push
pop
pushf
mov
push
pop
sbb
sbb
sub
fsubs
aas
fmuls
xor
fdivrp
push
xchg
and
dec
push
movsb
adc
test
call
clc
or
sti
addr16
mov
pop
mov
or
int
pop
lret
mov
pop
sub
mov
jmp
les
inc
jnp
mov
test
sarb
int
js
sarl
fmuls
mov
and
or
sub
daa
loopne
loopne
testl
stos
mov
js
roll
mov
pop
dec
lods
xlat
and
out
mov
ret
mov
aaa
stos
sahf
rcr
pop
or
loope
push
add
lret
inc
loopne
nop
movsl
push
dec
pushf
insb
mov
lods
out
mov
xchg
sbb
adc
sub
lods
xchg
sub
dec
invlpg
test
inc
stos
add
cmc
add
mov
pop
or
or
push
nop
bnd
imul
addb
stos
mov
xor
testb
push
mov
mov
movq
push
dec
or
fstpl
les
aam
aaa
sub
movsb
ss
ja
xchg
jge
lahf
sub
rorb
cli
es
xchg
insb
sbb
push
nop
ljmp
subb
adc
or
sahf
hlt
mov
add
cmp
test
and
mov
lcall
cmpsb
adc
stos
push
push
pop
mov
test
jae
fsubs
movsb
xchg
sbb
push
mov
sbb
push
cmp
insb
cmpsb
xlat
xchg
cli
xchg
mov
loop
xchg
and
ss
and
je
negb
aam
scas
adc
inc
into
inc
pop
in
pusha
ljmp
or
pushf
inc
movq
test
push
cmp
xor
sbb
xchg
lea
push
inc
cli
test
sbb
add
dec
aaa
add
mov
lock
loop
xchg
xor
cmp
cmpsl
inc
mov
sbb
cmpsb
pop
xorb
ljmp
sub
imul
popa
mov
repnz
daa
scas
mov
dec
cli
xorb
jp
or
aad
add
and
or
notb
push
mov
cmp
jg
inc
xor
adc
jno
xchg
add
or
shrl
loop
or
andl
mov
ss
ret
pusha
pop
nop
fnstcw
add
cmp
pop
mov
inc
mov
mov
cmp
fisttpll
sub
mov
jp
data16
mov
js
movsb
lds
mov
jle
fildll
scas
pushl
fs
or
ss
or
std
and
lea
clc
xlat
sub
test
into
cld
in
jmp
sti
test
fnsave
inc
lcall
dec
mov
add
and
and
je
aas
cli
lahf
xor
nop
and
xchg
pop
pop
hlt
lods
mov
adc
push
inc
cmp
popf
out
imul
lret
or
mov
xor
add
sbb
loope
clc
repnz
xor
cmp
repnz
adcb
add
adc
inc
in
cmp
adc
shl
iret
gs
loopne
popa
arpl
xor
cltd
xor
rclb
mov
add
ds
rcr
dec
lcall
push
das
sub
jbe
callw
inc
scas
test
and
mov
sti
pop
lock
xchg
dec
lds
clc
and
loop
push
push
dec
push
lds
fsubrs
or
scas
xor
fs
inc
test
test
ret
add
mov
mov
or
mov
pop
push
mov
pop
loope
scas
fistpll
stos
dec
jne
inc
out
sbb
cmp
jmp
push
shll
pusha
stos
rcrl
fists
ret
cmp
push
addl
inc
mov
or
push
outsl
int
idiv
jge
enter
lcall
mov
pop
rcl
subl
xchg
mov
fistl
cld
sub
xor
in
pop
cmp
cmpsl
mov
das
push
mov
arpl
add
dec
cmp
inc
ss
shrl
inc
pop
in
cmpsl
add
fcoms
jecxz
ret
iret
jb
lcall
or
push
insl
hlt
dec
mov
mov
jo
aam
inc
repnz
inc
mov
dec
and
icebp
scas
icebp
enter
pop
inc
lods
adc
push
inc
jl
and
std
jg
jle
push
and
push
adc
jge
dec
add
sub
hlt
test
js
pusha
adc
mov
mov
scas
add
xchg
and
test
or
out
or
add
or
ja
mov
sbb
dec
pop
mov
add
xchg
sub
insl
push
mov
pop
aam
aaa
test
rcrb
out
test
cli
jnp
pop
pop
scas
lahf
mov
std
sub
mov
push
inc
negl
xor
std
xchg
mov
popa
bound
mov
lock
cmp
lods
loope
jo
cli
push
insb
cmp
sub
cld
repnz
popa
aaa
adcb
pop
addb
sbb
cmpsl
faddl
insb
jle
mov
aam
mov
mov
jl
adc
adc
test
mov
push
aam
mov
push
add
inc
es
icebp
popa
jmp
je
dec
cmp
inc
sbb
xor
fs
loopne
call
xor
testb
cmp
loop
ficoml
orl
shlb
and
add
repnz
or
inc
push
cwtl
push
cmpsb
xor
sbb
lret
inc
cmp
pusha
or
sub
scas
shrb
es
adc
ss
enter
adc
nop
cmp
je
int3
insl
sahf
mov
jle
xchg
scas
iret
test
jge
and
stos
push
movsl
cmp
roll
js
je
pop
xor
jl
mov
ljmp
fwait
mov
jle
jge
lcall
xchg
adc
and
push
add
cs
movsbl
cs
sti
mov
stc
popa
cli
push
aas
gs
sbb
sub
aam
pop
dec
lret
inc
cmp
cmp
sub
data16
jno
push
pop
scas
and
je
sarl
adc
add
sbb
pop
shrb
shlb
inc
sbb
inc
aaa
and
popf
fnsave
lods
cli
shlb
or
jg
mov
incl
inc
arpl
adc
es
mov
incl
idivl
movsl
popa
or
imul
inc
ret
or
pop
fimuls
cmpsb
stos
lods
nop
mov
jg
mov
lcall
adc
push
bound
icebp
cmc
insl
mov
stos
or
mov
jae
aad
dec
sub
fmuls
lret
adc
sub
jns
dec
in
or
mov
mov
and
xchg
jmp
cli
mov
lds
dec
xchg
subl
xchg
icebp
ret
roll
jmp
push
out
bnd
sbb
out
xchg
xor
dec
dec
xchg
mov
inc
sbb
jb
andb
cmp
std
hlt
orl
lds
sarl
mov
std
insb
jo
imul
mov
ret
cmpb
mov
test
lods
push
sahf
movsb
clc
fimull
dec
dec
push
sbb
loop
adc
mov
call
mov
in
dec
mov
sub
xor
xor
mov
adc
or
imul
pop
and
mov
mov
addb
push
sbb
xchg
enter
int3
fcom
test
fwait
popa
mov
scas
jp
jnp
jg
subb
add
ficompl
mov
push
sub
cwtl
ss
push
stc
scas
sub
mov
ljmp
test
mov
sbb
orl
sahf
and
pop
subl
sbb
push
mov
icebp
call
lcall
push
fistpll
sahf
lods
pop
jge
movsbl
std
loop
adc
sbb
fwait
dec
push
call
inc
mov
xchg
and
adc
into
cld
inc
jl
pop
xchg
inc
or
sbb
dec
xchg
mov
adc
dec
call
in
mov
lea
jle
sub
loopne
mov
xor
cmp
imul
js
jnp
scas
push
sbb
ja
push
mov
and
sbb
lock
loopne
push
rcl
jo
mov
and
xchg
inc
orl
mov
enter
mov
inc
clc
mov
incl
sub
inc
fwait
xchg
aaa
push
ret
cmpl
adc
fsub
fnclex
jle
ret
add
hlt
bnd
xchg
rcrl
add
sahf
rorb
sbb
cmpsl
pop
mov
dec
xchg
fcoms
int
lods
subl
cmc
movsb
lret
cmc
jne
adc
xor
leave
sbb
ds
mov
sub
test
cmp
or
nop
and
mov
call
cwtl
inc
int
pusha
ljmp
arpl
or
sbb
sbb
cld
stos
mov
jo
push
sub
adc
lock
xchg
mov
or
mov
ljmp
aaa
sahf
mov
inc
xchg
add
in
dec
xchg
or
xor
jge
ljmp
xchg
incl
mov
test
mov
xchg
and
cmc
dec
outsb
or
or
jle
sbb
mov
shrl
sub
mov
repnz
ja
xor
aaa
imul
iret
dec
testl
nop
add
pop
lds
add
xchg
cmpsb
pop
add
and
xor
lods
add
int
test
xor
mov
mov
inc
jmp
fsubr
lock
jno
push
xchg
sahf
pop
push
fldt
daa
test
dec
sub
and
and
jo
pushf
ljmp
fmul
add
movb
call
ljmp
aad
jge
ja
sub
jle
fidivrl
notl
imul
fisubl
xor
mov
test
cmp
std
loopne
lret
sub
cmp
movsl
cmp
lret
adc
inc
cmp
sbb
sub
pop
mov
and
stos
mov
push
cmpsl
jbe
dec
fmul
cmc
and
ret
enter
add
sub
stc
jp
icebp
outsb
adc
push
movsl
cmpsl
lods
jp
loopne
call
push
jbe
or
xor
icebp
ja
cmc
lahf
cmp
jbe
sbb
jbe
sub
add
in
jno
insl
fcomip
lods
fadds
imul
inc
cmpsb
ja
mov
mov
pop
adc
and
add
mov
in
push
jbe
test
call
arpl
lods
sbb
scas
mov
pop
mov
and
and
lea
filds
decb
int
ficomps
mov
add
sbb
mov
or
push
in
add
call
mov
jecxz
lods
imulb
mov
repnz
loope
ss
jno
nop
nop
mov
sub
jbe
pop
mov
inc
andl
push
mov
cmp
and
mov
aam
inc
push
cmpl
sarb
ret
fbstp
push
repnz
decl
inc
hlt
cld
fdivrl
loope
outsl
and
inc
mov
cmpsl
movsb
rolb
outsl
pop
lock
push
cld
sub
int3
push
jb
test
lcall
lds
aam
fstpt
fs
lea
add
ret
ljmp
inc
movsl
cld
inc
jnp
repz
add
call
sub
sbbw
pop
hlt
pop
clc
mov
add
jl
hlt
inc
sbb
push
paddd
std
lret
or
sbbl
js
aas
add
sub
xor
inc
jo
inc
pop
ret
pop
xchg
lcall
cli
push
mov
fstpt
mov
xchg
xchg
sub
es
movsb
xlat
scas
xchg
popf
add
push
adc
mov
push
mov
outsl
adc
mov
sub
js
xchg
mov
inc
xchg
nop
jl
out
movsl
pcmpeqw
push
mov
in
daa
cld
sub
inc
out
leave
cwtl
or
into
push
add
lret
adc
sub
xor
scas
jae
add
ss
sahf
or
addb
lea
js
jg
inc
sbb
std
mov
add
data16
or
ds
and
or
cli
sbb
sbb
inc
cmp
ret
sbb
lods
js
js
dec
and
ss
mov
xchg
stos
sbb
sub
scas
jbe
sub
inc
jae
jp
out
pop
adc
dec
loope
fcomp
push
enter
push
inc
inc
dec
inc
dec
test
std
sbb
pop
mov
cmp
das
xor
sahf
and
mov
inc
jns
sub
in
je
lock
pusha
jle
add
gs
pusha
movsl
ret
mov
ds
aam
mov
ss
adc
mov
sbb
std
adc
push
jbe
inc
mov
pop
push
push
inc
lcall
sub
pop
movl
inc
jo
cli
inc
and
adc
inc
adc
and
cmp
push
sbbb
mov
out
addl
mov
xor
icebp
test
test
lock
scas
lret
sbb
and
or
cwtl
inc
test
daa
outsb
inc
inc
test
push
jbe
call
mov
aam
lods
loopne
adc
add
mov
daa
int3
pop
lods
xchg
adcb
sbb
xchg
std
add
pop
ret
push
cmp
inc
fcoms
loope
or
push
push
test
push
out
xchg
xchg
ret
mov
add
push
out
ja
jg
xchg
mov
sub
ds
dec
sub
shll
or
or
and
movsb
mov
mov
sbb
add
cmpsl
aam
jo
sub
mov
xchg
jnp
push
add
pop
or
jecxz
add
es
fmuls
xor
xor
imul
icebp
cmpsl
pop
and
xor
dec
fcom
into
inc
jo
sub
pop
mov
notl
mov
xor
pop
rcr
out
xchg
je
jle
fbld
pop
pop
clc
leave
sbb
push
ljmp
adc
fs
out
or
into
sbbl
or
dec
and
fsubrl
add
ret
arpl
fidivs
lret
aas
mov
add
push
leave
sbb
mov
cmp
or
xchg
ds
mov
push
jmp
in
mov
repnz
dec
pushf
aaa
pushf
dec
stc
cmpsl
mov
adc
inc
push
or
add
stc
mov
and
test
test
daa
pop
push
push
xor
shrl
adc
and
lds
movsb
or
pop
and
jge
cmp
mov
cmp
aas
push
push
or
xchg
jg
pop
jne
test
adc
adc
sbb
adc
cmp
outsb
lds
pop
add
adc
add
les
bound
push
mov
and
xchg
mov
pusha
outsb
inc
xchg
cmp
adc
aas
out
hlt
add
and
mov
dec
or
sub
xor
test
fs
xchg
or
adcb
xchg
cmp
mov
inc
insb
ds
adc
scas
aas
cmp
mov
cwtl
jnp
mov
clc
clc
jmp
sub
xchg
jae
pop
or
roll
or
lcall
dec
add
cli
testb
pop
movsb
add
lods
mov
jns
test
adc
sbb
gs
or
push
ds
adc
push
jg
or
lcall
push
adc
ret
dec
jg
and
lret
add
push
outsl
lcall
dec
dec
test
xor
clc
ss
aaa
or
gs
inc
mov
lock
mov
repz
jge
ljmp
addr16
and
aas
xchg
inc
lret
in
adc
sub
adc
test
shlb
mov
fsubr
shlb
pushf
dec
ljmp
sbb
call
insl
enter
shlb
jg
push
jb
or
dec
add
scas
cmp
rcl
pop
cmp
inc
or
pusha
mov
sbb
leave
mov
std
mov
mov
pop
mov
std
push
lcall
movsl
sbb
mov
imul
sbb
push
cmp
inc
mov
popf
imul
ds
rolb
out
or
xchg
fisubrl
push
cmpsb
sbb
push
lret
pop
adc
sbb
loop
icebp
js
call
sub
je
negl
cld
shl
pop
push
incl
sub
aaa
push
jb
pop
adc
push
cwtl
pop
inc
add
rcr
sub
xchg
cmpsl
pop
xorb
mov
enter
ljmp
cmpsb
rclb
rcll
fwait
clc
adc
stos
push
ljmp
add
loopne
mov
insb
pop
xchg
shll
push
cmpsb
sbb
jne
jecxz
aaa
cmc
test
enter
scas
push
or
mov
sub
mov
pop
sbb
sbb
das
sbb
xor
js
or
pop
mov
inc
xchg
cmpsl
incl
stos
add
or
jne
aam
push
push
sarb
sbb
push
adc
cmp
arpl
cltd
pop
push
test
loopne
xor
shl
push
pop
popa
cs
in
mov
xchg
fcoml
loop
sbb
adc
mov
xchg
jne
jp
push
pop
adc
ds
test
mov
pop
pop
or
lock
imul
imul
mov
lcall
aaa
cmpsb
add
ficoml
pop
push
je
outsl
jg
inc
aas
das
outsb
dec
das
add
roll
add
outsl
mov
push
js
mov
les
fisttps
adc
stos
inc
push
repz
sbb
sbb
int
imul
testb
negb
jle
inc
mov
fbld
imul
sbbb
sub
cmpsl
and
push
inc
cld
push
fsub
or
jb
lahf
sarl
mov
mov
and
jbe
call
bound
jbe
lcall
pop
mov
or
add
mull
rorl
daa
and
out
out
outsb
cs
pop
loope
xor
das
pop
in
push
mov
clc
decl
mov
adc
inc
pop
sarl
sub
mov
lds
test
dec
and
adc
lock
es
adc
cli
adc
andnps
arpl
leave
add
push
inc
cmp
xor
xchg
add
outsb
push
aaa
hlt
xchg
insb
cli
std
mov
out
cmp
iret
mov
mov
mov
push
bound
loop
cmpsl
dec
lret
mov
int
push
cld
push
inc
xor
jp
sbb
cmp
rcrb
or
xchg
xchg
xchg
subb
cltd
mov
inc
or
stc
xchg
fs
jnp
mov
adc
pop
mov
daa
in
faddp
dec
dec
int3
addr16
outsl
adc
adc
mov
push
dec
pop
fs
cmp
xchg
add
mov
lods
imul
xchg
xchg
lahf
push
adc
sti
dec
aam
decl
add
xor
jnp
pop
mov
jo
jmp
call
cmp
or
jl
hlt
das
bound
cli
or
and
cwtl
mov
loopne
dec
mov
and
js
push
mov
xchg
loop
mov
lea
ljmp
mov
into
filds
or
movsb
outsl
add
mov
pop
repnz
xor
shlb
xchg
movsl
sbb
inc
and
add
fwait
cs
push
sbb
std
pop
lock
leave
scas
dec
cltd
or
mov
clc
fldenv
cld
test
fnsave
ss
push
lock
aas
sbb
cltd
insb
add
mov
adcb
add
pop
sbb
popf
lahf
int
je
pop
push
outsb
add
sar
inc
movsb
dec
enterw
add
xlat
call
pop
test
push
mov
pop
hlt
popfw
xor
add
shll
cmpsb
pushf
dec
ljmp
mov
inc
sub
push
and
int3
push
sub
bound
inc
mov
pop
mov
pop
or
jmp
insl
negl
rolb
ljmp
loope
xchg
fmull
mov
cmp
push
mov
push
scas
mov
jne
popf
pop
faddl
mov
test
ja
dec
stos
dec
pop
test
std
adc
lcall
test
mov
xor
loopne
rorl
dec
jae
adcb
out
mov
dec
mov
jo
lcall
xorb
mov
pop
in
das
fistps
cmp
xchg
mov
push
or
inc
pop
inc
jb
mov
add
mov
lds
popa
fdivrs
push
sub
or
pop
aad
arpl
nop
pop
in
mov
fstl
jbe
dec
add
sub
movb
adc
fs
and
add
jle
sbb
insb
cs
xor
cmp
xor
js
push
jl
mov
inc
scas
imul
sahf
pop
add
sbb
pop
mov
test
fwait
mov
pop
and
testb
add
add
loop
rclb
cltd
mov
subl
loope
icebp
jge
adc
sbbb
adc
mov
outsl
lcall
cmp
data16
xchg
adc
sbb
es
mov
dec
in
push
sbb
sahf
mov
push
xchg
xchg
add
cmc
push
mov
ret
adc
mov
mov
call
cmp
pop
enter
pop
inc
divb
clc
call
imul
xchg
or
add
arpl
loopne
scas
xchg
mov
test
fisubrl
push
or
and
sub
xchg
mov
loopne
jg
int3
scas
dec
cmp
imul
ror
ret
mov
fisubrl
mov
les
inc
sbb
add
mov
stos
popa
xlat
jg
fisttpll
dec
push
ret
dec
in
ret
fistpll
inc
push
sbb
push
js
test
dec
jmp
mov
push
adc
into
mov
xchg
insb
ss
cmp
xchg
add
mov
repnz
stos
outsb
jmp
loop
mov
cmpsb
push
push
or
xor
cld
lcall
je
dec
inc
scas
xchg
cmp
mov
int3
mov
loopne
inc
xchg
rorb
jb
add
mov
mov
fsubl
mov
sub
mov
rcrl
gs
adc
inc
ror
jle
insb
push
push
rclb
pop
outsb
fstpl
add
inc
outsb
sub
jnp
iret
insb
daa
shll
loope
movsb
jl
mov
aam
adcb
cmp
call
dec
push
xchg
lods
inc
cld
push
xchg
pop
leave
out
rcr
mov
cld
mov
loop
add
push
fbstp
jg
js
mov
sbb
mov
repz
pop
jmp
mov
jle
aas
dec
scas
jg
iret
and
push
test
jge
mov
sub
dec
mov
inc
mov
shlb
xor
in
jmp
bound
out
add
fcom
xchg
sbb
outsb
fbld
pusha
sub
mov
sar
fidivs
xor
inc
cmp
pop
xchg
jge
adc
sbb
xlat
or
adc
adc
push
sub
cmp
clc
mov
bound
mov
negb
mov
mov
sub
add
xor
push
adc
sbb
pushf
insl
xchg
mov
xor
lret
add
call
out
push
cwtl
cmp
inc
sbb
in
xchg
push
mov
fadds
adc
popf
push
push
pop
mov
adc
xchg
into
fcompl
mov
cltd
mov
ljmp
jae
decb
push
pop
mov
ljmp
cmp
fisttpl
mov
xchg
and
insl
sti
push
jl
pop
loopne
nop
xor
stos
mov
add
movsb
push
imul
insl
cld
inc
jl
mov
push
mov
adc
shrb
adc
mov
inc
inc
lock
rclb
inc
fs
xchg
outsb
lock
and
push
sbbb
and
mov
pop
inc
or
je
arpl
or
and
call
out
js
add
in
push
pop
and
add
addl
pop
ja
or
jo
repnz
dec
or
cmc
mov
jg
out
inc
adc
cmp
pop
inc
ret
or
frstor
mov
insb
dec
push
adc
ds
fcompl
popf
loope
jno
enter
ss
push
or
push
pop
in
inc
inc
icebp
das
insl
jl
je
mov
and
lcall
jmp
mov
je
lret
loope
jnp
inc
lcall
pop
ficoml
mov
inc
loop
mov
stos
push
aam
adc
pop
jl
jecxz
jle
fmuls
jmp
cmp
add
push
out
es
aam
leave
sub
stos
lock
pop
cmpsb
inc
leave
stos
pop
rcrl
cli
loop
aaa
aaa
mov
lcall
mov
int3
enter
push
repz
aaa
xchg
adc
sub
mov
clc
xor
or
cmp
push
or
nop
leave
icebp
out
push
adc
push
sub
jno
cmc
add
push
pop
mov
adc
or
mov
lret
cmc
lods
decl
dec
dec
pop
cld
inc
cli
loop
fcoms
pop
xor
push
or
xlat
repz
mov
fisubrl
dec
test
adc
push
rcr
mov
sbb
test
or
lea
mov
jae
xchg
pop
xchg
mov
mov
cli
mov
dec
pop
data16
push
inc
sbb
fdivrl
jp
outsb
call
cmp
mov
sbbb
push
mov
jmp
jp
insb
jbe
jb
ljmp
mov
jmp
push
orb
lea
pop
je
mov
insb
xorl
mov
xchg
push
mov
insb
fiaddl
xchg
sub
rclb
mov
call
outsb
bound
cmp
dec
dec
xor
shrl
dec
repz
mov
adc
pop
rclb
pop
add
icebp
pop
mov
push
loope
cmp
adc
stos
pop
lahf
push
xchg
cwtl
push
lcall
push
add
ja
cmp
jb
cs
xor
inc
sbb
jge
jg
mov
jne
adc
scas
cmp
loopne
add
sbb
daa
test
pop
insb
add
add
in
inc
std
clc
popa
loopne
rol
or
stc
inc
mov
xor
mov
mov
cmp
cmpsl
in
in
shl
push
pushf
push
movsl
jmp
std
xor
mov
dec
xchg
in
fmul
rcl
cmp
push
xchg
push
or
shlb
je
lods
insb
mov
aaa
scas
out
cmpsb
pop
lret
push
jne
into
mov
mov
mov
lods
ret
imul
push
push
in
jne
sub
cmpsb
pop
sub
loopne
xor
jmp
dec
test
xchg
dec
sbb
lods
fcmovne
adc
mov
mov
hlt
jmp
push
fwait
or
test
inc
push
mov
mov
push
stos
fists
bound
out
stos
loopne
pushf
or
sbb
std
call
in
dec
lahf
jne,pt
pusha
inc
xorl
add
pop
dec
jae
sbb
scas
add
leave
nop
sbb
jge
mov
outsb
jle
cmp
popa
dec
adc
push
pop
ljmp
jecxz
enter
repz
scas
mov
or
push
ret
lea
rolb
and
mov
xlat
ja
jbe
push
add
and
loope
jb
fisttps
adc
fsubl
fimull
out
lret
lods
decl
mov
sbb
xchg
lods
lds
push
or
mov
jecxz
sub
loopne
mov
dec
in
scas
fwait
mov
or
andb
or
stos
lret
cltd
mov
inc
mov
cmc
loopne
inc
inc
outsb
cs
mov
dec
push
cmp
movsb
push
push
std
das
movsb
mov
decb
adc
mov
and
and
and
inc
dec
adc
arpl
push
cmp
adc
add
sub
or
mov
je
sarb
ljmp
pop
adc
roll
xchg
clc
clc
mov
jb
add
inc
sbb
xchg
in
lock
mov
fldl
sarl
mov
lret
in
sarl
mov
adcl
xor
outsb
cmp
jl
adc
cli
mov
ret
ret
fmull
sbbb
dec
push
sub
jmp
jns
push
sbb
cmp
fbld
cmp
sub
push
mov
adc
cmpsb
cmp
adc
lods
add
xor
and
lods
aaa
xchg
dec
int3
mov
jp
rolb
add
add
dec
rcrb
cld
in
mov
inc
js
out
addr16
rclb
fisubl
pop
dec
out
xchg
cli
and
rolb
aam
push
movsb
test
push
mov
cmovp
cmp
insb
das
mov
imul
jmp
inc
test
in
mov
jle
ss
and
icebp
sub
and
ss
stos
xor
lock
addb
lahf
and
cmp
pop
mov
sub
inc
movsb
dec
sbb
xchg
icebp
pushl
and
cmp
add
insl
es
sub
push
cld
cmovge
dec
call
je
in
or
pop
add
inc
shrl
test
adc
push
outsb
mov
jae
sub
scas
cmpb
sbb
xor
sbb
into
pop
mov
and
xor
cmp
test
int3
jecxz
movsl
or
pop
imul
push
adcl
int3
jo
or
dec
bound
push
xchg
mov
mov
ljmp
push
push
sbb
xor
push
out
enter
mov
xchg
into
pop
aas
clc
mov
xchg
pop
inc
fwait
inc
scas
mov
stos
mov
sbb
inc
out
enter
mov
mov
xchg
jecxz
dec
inc
ja
decl
or
loop
inc
jno
and
push
mov
mov
rclb
fsin
cld
imul
cld
test
bound
mov
sub
add
fwait
jo
ret
cli
mov
int3
mov
inc
addl
clc
das
sub
push
or
outsb
and
aaa
mov
fnstenv
fcmovbe
and
out
gs
jecxz
inc
loop
stos
push
sarb
mov
fisttps
lea
pop
add
loopne
pop
daa
mov
movsb
push
pop
and
popf
sahf
in
lock
shr
movsl
push
nop
lods
xor
adc
call
je
test
ss
jae
ret
jbe
sbb
sahf
mov
lds
cld
call
xchg
test
push
and
jp
cld
inc
adc
in
arpl
hlt
dec
daa
dec
mov
sub
adc
fimull
mov
stos
and
and
xchg
add
or
jns
nop
dec
decl
lock
jmp
jecxz
rcrb
pop
xchg
imul
dec
loopne
push
add
jns
stos
jo
mov
mov
orb
jmp
fdivrs
push
stos
ret
rclb
das
push
dec
adc
sbb
mov
mov
jno
mov
adc
in
lock
pop
test
fdivrl
add
stc
and
adc
dec
pushf
inc
dec
push
or
jnp
roll
push
mov
adc
cmpsb
jle
jno
out
mov
in
add
push
jecxz
xchg
mov
cli
outsb
xchg
pushl
add
test
sub
mov
daa
inc
jg
inc
fs
sub
sbb
mov
jns
cmp
out
mov
stos
inc
jb
add
xor
xchg
mov
ds
cmc
push
mov
or
call
ss
jnp
jnp
in
mov
pop
mov
add
jg
or
aam
test
jle
adc
sub
js
rclb
adc
mov
pop
pusha
sti
add
jno
sbb
push
or
mov
incl
jb
sbb
testl
pop
adc
jp
jne
inc
sbb
sbb
fisubs
fldt
divb
loop
movsb
scas
mov
inc
sub
fildl
mov
ds
lods
xor
lret
rorl
andb
xchg
loop
mov
dec
sar
lret
lock
andb
js
or
dec
inc
or
adc
mov
push
pushf
mov
js
mov
into
inc
sub
jmp
jl
dec
rol
pushf
test
negb
mov
ss
xchg
sub
jecxz
rcr
mov
jp
xor
lods
jle
dec
lds
adc
js
fucomi
in
fdivl
ret
push
mov
cs
jne
movsl
mov
jnp
repz
add
push
push
loop
ss
or
add
and
fmul
add
outsl
aas
mov
xchg
movntps
push
incl
jp
sbb
inc
push
push
hlt
mov
outsb
jl
push
pop
scas
cmpb
outsb
sub
aaa
mov
push
test
fiaddl
or
lret
xchg
jnp
pushf
out
pop
mov
addb
adc
sbb
mov
jl
mov
sbb
xchg
mov
outsl
add
clc
pop
sbb
cmp
test
lret
or
mov
and
xor
into
outsb
adc
cmc
pop
xor
mov
enter
mov
pop
and
cmp
sbb
rclb
add
xor
jle
scas
push
adc
rolb
push
cmp
inc
test
sub
test
xor
mov
lods
fldl
push
and
jg
cmp
jb
mov
rorb
pop
add
inc
jmp
scas
jp
lcall
rolb
mov
jb
shlb
movl
ret
inc
arpl
and
dec
mov
popa
jg
cld
jg
and
sbb
and
push
sbb
es
xor
nop
adc
sub
adc
notb
push
lock
inc
mov
jecxz
and
and
inc
pop
and
dec
shll
inc
cli
dec
sub
fildl
cmc
mov
xchg
and
sbb
cmp
ja
test
lcall
loopne
cli
stos
in
sbbl
pop
mov
lret
or
jecxz
dec
popa
fbld
or
ret
sbb
cmp
loope
xor
xchg
dec
dec
lret
hlt
fdivl
ret
repnz
cmp
scas
ret
mov
jnp
sbb
outsb
xor
out
dec
addb
loopne
mov
insl
pop
cmp
inc
adc
mov
loope
into
and
in
loopne
jecxz
aam
add
mov
and
push
add
clc
add
adc
fldl
pop
repnz
push
adc
add
mov
mov
outsl
decl
jle
nop
xchg
xor
xor
inc
sub
fidivl
and
jle
in
int
and
stos
push
or
inc
popa
pop
or
imul
in
fwait
xlat
ljmp
dec
or
mov
mov
adc
sbb
test
hlt
mov
bound
dec
aaa
out
pusha
outsb
cmpsb
dec
fistl
jle
andl
stos
or
subl
jb
iret
aas
sbb
cli
arpl
pop
icebp
das
xor
adc
addr16
push
sbb
clc
fcom
cmc
fisttps
inc
or
dec
xchg
and
data16
stc
mov
or
aam
mov
std
fwait
xchg
or
out
mov
mov
cld
adc
out
add
push
arpl
in
loop
ja
cli
dec
jbe
imul
sub
punpckldq
lahf
cmpb
dec
fcmovnu
out
arpl
lock
or
adc
dec
jecxz
dec
dec
cmp
sbb
dec
mov
lock
repnz
lock
imul
xor
jmp
inc
dec
loopne
mov
mov
js
pop
mov
sbb
mov
adc
bound
fwait
cmp
push
filds
cmp
mov
lret
scas
pushf
inc
loopne
mov
addb
jbe
lock
outsl
lock
mov
add
or
idiv
cmpsb
push
dec
pop
add
addr16
inc
aam
mov
pop
outsl
bound
add
mov
or
movb
nop
sub
js
insb
out
dec
xor
in
and
out
fdivs
mov
data16
decl
movsl
or
or
cld
popf
js
fcompl
push
ss
movsb
rcrl
cmpsb
pop
sub
xchg
lcall
adc
scas
mov
add
inc
cwtl
or
clc
inc
mov
mov
xor
adc
imull
xchg
ficomps
call
pop
ljmp
rclb
outsb
loop
lock
sbb
outsb
dec
mov
mov
cmpsl
pop
cli
lcall
jae
mov
ss
call
pop
cs
sbb
mov
imul
dec
adc
andb
mov
fnstcw
mov
in
jno
shrb
mov
clc
icebp
in
sbb
xchg
sbb
sub
int
mov
nop
lock
enter
jp
daa
mov
and
adc
std
and
sbb
xchg
mov
or
cmp
mov
mov
adc
cmp
jmp
and
loop
mov
mov
fisttps
loop
out
in
setge
dec
out
sbb
inc
shrl
loope
jne
in
pop
xchg
and
sub
daa
mov
xlat
pop
push
add
xor
adc
jb
cmp
sbb
and
iret
cmp
bound
aad
pop
xchg
call
mov
push
rcrb
mov
pop
push
ljmp
dec
jge
sbb
scas
dec
fists
pop
lahf
insl
adc
adc
inc
add
push
adc
dec
inc
loopne
sbbb
mov
pop
cmc
jmp
mov
xchg
loope
mov
jb
lret
insb
or
lahf
lret
push
lds
in
pop
out
in
sbb
push
sbb
out
or
inc
loope
fxam
out
gs
push
or
push
loope
je
push
std
negb
jo
fsubr
jo
mov
mov
cmpsb
aaa
pop
add
adc
cmc
mov
mov
cmp
dec
inc
ljmp
mov
xor
pop
sti
fildl
and
sub
mov
xor
js
adc
mov
call
mov
lds
jo
jp
mov
lods
jle
jne
jne
dec
jg
mov
mov
les
sbb
pop
rcrb
stos
insl
rorb
scas
mov
push
inc
pop
test
rcl
jge
es
pop
mov
jl
mov
add
push
xor
mov
mov
inc
loopne,pt
sbb
push
jmp
push
mov
aaa
out
sbb
and
dec
in
cmpsb
mov
mov
cli
inc
mov
adcl
rcll
inc
add
in
or
in
icebp
into
add
insb
movsb
pop
mov
iret
cmp
pop
xchg
xchg
out
mov
sbb
cld
jle
adc
pushf
hlt
or
loopne
mov
adc
jg
inc
iret
dec
xor
pop
sub
lea
pop
aad
push
pop
divb
ss
add
stos
or
hlt
cwtl
roll
and
sti
or
popf
mov
mov
dec
push
xor
lea
shlb
mov
fadd
inc
cli
inc
sbb
push
jb
aam
das
adc
clc
lret
jg
pushf
cmp
mov
cmpsb
sbb
int
lock
shlb
push
adc
movsb
mov
add
adc
jl
sbb
inc
push
into
movsb
xchg
jle
jge
subb
add
frstor
sub
mov
push
pop
sahf
xor
hlt
mov
xchg
ljmp
andl
and
push
mov
fcoml
push
mov
add
stc
add
outsl
mov
pop
outsl
cs
gs
ljmp
fsubrs
adc
adc
aaa
mov
mov
xor
xorl
push
les
roll
xor
push
clc
lahf
fcoml
xchg
arpl
int
add
out
mov
rorb
xchg
xor
inc
aam
push
mov
xchg
mov
iret
out
je
mov
pushf
mov
cmp
or
push
dec
ljmp
das
mov
in
int3
cli
mov
cld
inc
das
fcomp
stc
loope
cld
sub
fadds
test
mov
cmp
pop
fxch
rcrb
or
fisttpll
jl
lods
add
xchg
xor
inc
repnz
push
push
repnz
mov
std
cmpsb
inc
and
test
jp
pop
mov
sub
or
dec
bound
repnz
add
lock
loop
cmc
xchg
xor
std
stos
stos
lret
sub
testb
push
and
pusha
dec
outsl
test
outsl
ljmp
pop
loop
sub
enter
xchg
rcr
inc
mov
mov
jno
jnp
jns
lods
addb
jnp
mov
push
and
lock
sub
rcrl
add
and
loopne
loop
jbe
jecxz
je
cs
sub
icebp
xor
cmp
in
out
fdivr
add
inc
xorb
lret
rorb
sbb
lahf
and
push
aad
sahf
and
data16
jns
and
js
inc
add
add
cs
dec
pop
sbb
push
dec
rcll
add
cs
rclb
xor
mov
lea
adc
ret
jl
push
xor
addr16
fstpt
push
push
cwtl
adc
nop
lds
adcb
test
adc
mov
xchg
push
dec
adc
or
push
incl
cld
add
lods
bound
in
jno
int3
pop
mov
mov
dec
shrb
shl
nop
sub
insb
adc
xchg
ss
xchg
pop
sub
jge
cmpsl
and
aam
push
or
jg
and
ljmp
scas
decl
push
scas
scas
hlt
mov
push
add
das
cmp
hlt
rclb
bound
pop
inc
movsb
cmp
lret
lcall
push
es
test
bound
rcrb
pop
or
cmp
and
jg
push
out
dec
loope
inc
call
inc
cmp
mov
scas
add
lods
mov
push
add
sbb
in
inc
jp
or
mov
mov
fidivl
push
iret
xor
fisubrs
pop
and
mov
fs
push
clc
shl
leave
adc
jbe
cmp
jo
inc
jle
sub
inc
rcr
mov
adc
xchg
sbb
and
mov
mov
shr
adc
add
in
pop
icebp
jb
repnz
sbb
dec
pop
cmp
nop
pop
pop
cmpsb
mov
mov
add
or
lcall
and
stos
xchg
inc
sbb
push
inc
nop
ljmp
pop
push
gs
jno
or
xchg
inc
push
std
fimuls
pushf
cmp
mov
push
adc
pop
enter
inc
mov
mov
aas
and
push
insl
mov
leave
push
imul
pushf
inc
jbe
or
clc
sub
loopne
jg
pop
xchg
jb
cmp
jmp
push
cld
push
lock
mov
adc
and
jbe
dec
hlt
or
push
ret
iret
movsl
scas
xchg
rcrb
ret
cld
sbb
aad
cmp
and
test
inc
adcb
insb
jne
push
fs
push
pop
cmp
xor
dec
cs
filds
cmc
rolb
adc
add
sbb
lods
out
call
and
rolb
sti
or
mov
mov
add
loope
sub
xchg
scas
add
mov
and
ret
and
aaa
sbb
out
lods
stc
push
pusha
mov
mov
aaa
loop
or
das
mov
inc
jne
bound
addb
insb
das
or
aas
and
jno
push
xor
push
jecxz
js
leave
pop
fstps
xor
add
sub
pop
fdiv
or
push
cli
push
add
dec
mov
dec
or
mov
push
mov
sbb
sub
stos
push
push
cmp
or
movsb
pop
jp
fs
filds
mov
mov
mov
scas
and
push
clc
sub
loop
aam
sbb
jne
subb
pusha
add
es
in
mov
mov
call
divb
push
shll
hlt
sti
mov
pop
sub
xor
rorb
inc
cld
ljmp
sbb
mov
outsb
xchg
lods
inc
push
mov
pop
imul
das
push
sub
xor
sub
dec
xchg
cs
pushl
mov
shr
ficoms
sbb
filds
dec
sub
fsubl
and
push
sbb
cld
popa
adc
ja
pop
inc
clc
scas
js
stos
and
xchg
cmp
bound
xchg
jmp
jbe
push
insl
mov
lds
scas
mov
sbb
sbb
negw
adc
insb
push
mov
pop
xchg
cmpsb
sub
push
push
hlt
sub
pop
adc
mov
push
inc
fmull
rorl
fiaddl
call
fnstenv
cmp
cmc
push
push
les
les
xchg
inc
cmp
addr16
mov
mov
pop
out
push
dec
mov
das
js
and
ret
test
nop
movsb
ds
mov
bswap
cmp
sbb
or
pop
mov
cmpsl
add
mov
leave
mov
pushf
adc
mov
jb
and
daa
fdivr
sahf
push
jnp
add
sbb
cs
push
test
xchg
cs
jecxz
inc
inc
insb
adc
mov
add
ljmp
mov
inc
imul
xor
jb
push
adc
xchg
sbb
in
sti
mov
mov
ds
or
cwtl
mov
jo
or
mov
mov
jne
push
clc
dec
sub
push
ds
aaa
lock
cmpb
pusha
push
insl
push
inc
and
mov
arpl
aas
or
xchg
xchg
pop
and
cmp
sbb
test
mov
mov
daa
sub
adc
dec
jle
inc
mov
popa
push
outsb
das
mov
lock
inc
repz
mov
inc
gs
pushl
push
jns
jns,pt
add
add
xor
subl
pop
ss
pop
shr
sbb
test
insl
jmp
push
jno
test
sahf
in
incl
addr16
inc
outsl
les
sbb
scas
mov
call
cwtl
cmp
xor
lods
or
xor
or
pusha
mov
dec
pusha
push
push
leave
stos
ljmp
mov
fcompl
icebp
pop
int3
push
aaa
push
loopne
rcrb
shlb
add
sbb
lock
mov
dec
nop
add
sub
xlat
es
loopne
add
push
push
and
in
sbb
sub
pop
cmp
js
outsl
int3
and
mov
or
out
mov
or
pop
pop
dec
loopne
clc
les
and
mov
mov
sub
pop
fcomps
test
inc
clc
fistl
sub
mov
xor
pop
pop
roll
aam
add
loop
mov
lret
push
mov
sbb
shl
notl
call
jns
lds
or
adc
ret
data16
mov
or
iret
cmp
cmp
testl
outsl
mov
mov
cmp
mov
out
sahf
add
pop
lock
movsl
mov
inc
arpl
jmp
push
push
inc
adc
adc
or
int
dec
fbld
bound
inc
mov
inc
mov
mov
cmpsb
cld
mov
mov
loopne
jmp
xchg
mov
push
loope
ficomps
incl
inc
sbb
mov
cmp
mov
les
push
test
xchg
or
mov
insb
add
lcall
sahf
xchg
xchg
nop
jle
mov
fwait
orb
sbb
nop
ret
nop
adcb
mov
adc
loopne
pop
ds
std
sbb
push
call
into
shl
in
repnz
incl
push
mov
mov
mov
sub
sub
enter
xlat
cmp
inc
xor
pop
sub
std
jecxz,pn
xchg
loop
mov
nop
adc
and
pop
add
or
clc
and
aad
idivb
cli
xor
inc
and
rorb
mov
jle
shlb
mov
or
leave
lock
jl
stos
lock
or
pop
repz
inc
and
sbb
xchg
mov
ret
jnp
dec
lcall
jno
mov
push
idivl
or
das
aad
dec
and
test
sbb
and
hlt
decl
rol
aam
and
pop
dec
inc
dec
inc
leave
scas
push
or
mov
fidivrs
sub
add
inc
rcl
xor
cwtl
nop
imulb
repnz
push
push
filds
push
lds
in
ffreep
ret
mov
pop
mov
fcmove
sbb
adc
sbb
jmp
bound
cmpsl
add
dec
mov
aam
adc
inc
add
jl
dec
in
add
lock
inc
pushf
pop
or
shrb
dec
mov
das
pop
jne
add
jp
add
jo
and
mov
sti
incl
jl
mov
push
add
sbb
je
sub
sbb
pop
fistpll
pop
add
andb
movsb
fidivrs
test
cli
xor
mov
inc
sub
xchg
xchg
hlt
jbe
dec
jle
add
ds
aad
jge
jle
faddl
add
dec
cmp
mov
push
cmp
shr
adc
sbb
jle
inc
dec
add
loopne
or
push
and
ljmp
or
icebp
fs
cld
in
sub
mov
sub
lea
mov
cmp
or
xchg
xor
inc
add
sbb
aas
xor
mov
dec
mov
xor
or
aaa
sbb
sbb
ljmp
cmp
lahf
out
inc
aaa
sub
sti
cmpsb
mov
in
aad
pushl
lock
mov
loop
pop
pusha
jle
and
fwait
mov
popf
cs
and
loope
jle
pop
int
xor
inc
mov
push
mov
jecxz
rclb
mov
cmp
les
orb
xorb
or
xor
mov
jp
add
js
adc
mov
sbb
lods
inc
and
or
nop
mov
ss
mov
push
add
jmp
sub
pushf
cs
or
in
cld
push
pop
jnp
rcrl
or
and
push
outsl
or
mov
add
outsb
lcall
clc
aas
cmp
mov
sub
enter
test
xor
xchg
sarl
jno
mov
mov
test
and
stos
shlb
xchg
dec
ljmp
push
cld
hlt
xchg
clc
add
pop
push
fnsave
ss
cld
enter
aam
test
sub
aaa
sbb
pop
or
rcl
mov
ljmp
lret
xchg
ljmp
xor
mov
cmp
xorb
rorl
sub
xor
xchg
inc
pop
xlat
pop
add
sbb
test
in
cmpsl
jp
xor
jmp
mov
aam
int3
cld
pop
inc
adc
imulb
js
in
push
and
mov
in
addb
push
call
mov
push
fiaddl
hlt
icebp
sahf
push
add
popf
xor
pop
test
cmpb
neg
sub
mov
test
or
add
push
ret
mov
loopne
xchg
inc
inc
sub
into
jbe
mov
mov
sub
xchg
imul
sub
cmpsl
mov
lods
loope
ret
in
or
test
mov
adc
or
pop
add
sbb
mov
lds
sbb
pop
push
pop
sbb
mov
sub
mov
mov
testb
mov
test
mov
jb
rcr
mov
aas
ss
adc
push
add
pop
out
push
mov
push
cmc
push
outsl
lock
jb
dec
and
test
sbb
and
std
dec
inc
negb
and
or
fisubrl
inc
mov
cmp
insl
pushl
sahf
loop
test
test
clc
adc
dec
push
mov
scas
jbe
call
cmp
jmp
mov
xchg
or
aam
xchg
pushf
cmpsl
lahf
jp
mov
jb
in
repnz
fcoml
clc
call
dec
repz
movsb
adc
mov
mov
scas
pop
scas
sub
loop
stc
je
lret
pop
aaa
cmp
int3
adc
inc
inc
in
sub
pop
fst
cld
call
cmc
jl
out
sti
or
dec
push
jbe
dec
push
clc
and
sbbb
data16
bound
loop
cmpb
ds
adc
ljmp
adc
test
cmpsb
stos
aam
push
mov
inc
cld
pop
mov
adc
stos
ret
jle
inc
pop
xchg
test
push
icebp
lret
adc
or
inc
sbb
push
adc
stos
xor
sar
adc
xchg
push
xor
sbb
testb
inc
pop
and
sub
aaa
and
xor
repz
add
orb
stos
adc
arpl
sbb
mov
sbb
pusha
mov
mov
aad
push
jbe
dec
arpl
push
pop
add
mov
lods
cmpsl
ljmp
rorb
loop
in
decl
xchg
cmp
dec
fstl
lret
cmp
mov
dec
mov
ret
andb
cmpsb
mov
adcb
es
jge
and
movsl
mov
fldenv
insb
cmp
sub
jo
sti
bound
sub
sbb
in
sub
adc
stc
cmpsb
sahf
arpl
mov
cmpsb
divb
mov
mov
cvttps2pi
nop
in
jl
cmpsb
pusha
dec
add
push
pop
adc
inc
mov
xchg
mov
adc
aas
addb
or
push
js
adc
push
lods
xor
push
cmpsl
sub
xor
sbb
cld
dec
lahf
add
push
sbb
orb
dec
inc
mov
sbb
fs
push
or
je
cmp
repz
or
inc
xlat
and
mov
movsl
scas
push
mov
data16
loop
mov
sbb
adc
mov
insb
lods
out
cli
mov
mov
test
int
js
mov
test
xchg
dec
and
sbb
dec
mov
adc
mov
pusha
test
push
stos
hlt
pop
cli
in
enter
push
mov
inc
std
dec
dec
mov
push
jbe
lods
lock
sub
adc
xchg
sub
mov
mov
sub
adc
fdivrs
nop
mov
lsl
rcrb
in
fiaddl
scas
add
test
clc
out
test
decl
int
imul
fisttps
jmp
fcmovbe
lds
fisttpl
mov
imulb
inc
push
adcb
or
sahf
rol
xor
pop
js
adc
push
sbb
cmp
mov
xchg
int
xor
pop
pop
ss
push
shlb
jbe
mov
xchg
xchg
pop
add
fnstcw
pushf
popf
test
icebp
jmp
insl
cmp
pop
inc
out
inc
pop
sub
cmp
dec
les
outsb
int3
loopne
movsl
es
call
enter
mov
fmuls
push
fidivs
test
insb
xor
sbb
enter
scas
mov
inc
into
movsl
inc
popa
cmpsb
jmp
push
loopne
mov
xchg
mov
push
rol
xchg
mov
int
cmp
xor
mov
mov
enter
mov
in
add
sub
mov
sbbl
cwtl
shrb
jge
movsl
lahf
xchg
and
test
mov
adc
lcall
loope
dec
jge
xor
mulb
fistl
push
jb
or
dec
cld
or
sub
mov
cltd
mov
shrl
cs
leave
ret
clc
les
sub
mov
sbb
inc
add
or
pop
dec
mov
mov
cwtl
mov
pusha
ret
lods
shrl
sbb
and
scas
jg
push
xor
mov
xor
in
test
or
cld
jmp
rol
test
rcrb
fstpl
pop
dec
out
sbb
loop
jle
lock
mov
push
pop
mov
pop
push
or
mov
pop
jle
pop
test
fwait
pop
add
hlt
ret
lock
fdivs
sbb
stos
outsb
gs
push
mov
pop
push
adc
sbb
test
out
sar
test
aas
decl
and
pop
mull
dec
cltd
cmpl
jg
stos
jle
shlb
dec
dec
mov
cmpsb
jp
xlat
mov
push
mov
cmc
mov
bound
in
inc
add
push
pop
in
or
dec
jle
adc
decl
and
cmpsb
stc
js
mov
lock
ljmp
dec
arpl
mov
test
mov
lock
sbb
jbe
xor
jmp
dec
add
push
adc
fsts
aas
test
inc
add
fisttps
std
movsb
cmp
aaa
push
fbld
cld
lcall
mov
fldenv
push
push
pop
mov
cmp
aad
mov
pop
sub
jno
cmc
sbb
or
test
and
and
push
xchg
outsb
fisubl
and
ffreep
movsl
jmp
bound
fldl2t
call
mov
jne
mov
push
inc
xchg
loop
dec
xor
pop
xchg
jge
sub
sbb
loop
mov
inc
pusha
adc
call
cmp
iret
mov
push
rclb
push
loop
xor
stos
fistps
cld
push
inc
push
in
sub
inc
mov
dec
or
call
jbe
dec
sbb
nop
pop
mov
test
pop
push
insb
pushf
sub
jns
mov
shld
test
or
int
xchg
push
fsubrl
and
je
movsb
or
adc
std
ds
cs
adc
fnsave
add
mov
in
rcl
push
inc
hlt
addb
repz
sub
or
xchg
shlb
adc
fiaddl
jge
mov
or
inc
imul
or
mov
jmp
pop
xchg
or
fisttpl
mov
insb
dec
inc
ja
cmp
aam
adc
pop
orb
cmp
add
pop
or
add
pop
movsl
inc
push
mov
add
push
sbb
fistl
xchg
repnz
cli
shr
sarl
dec
or
add
push
mov
push
add
sbb
mov
sub
movsb
inc
cwtl
xor
xchg
sub
jge
inc
or
jno
addr16
adc
pop
fs
push
mov
lods
sub
xor
dec
outsb
xor
xor
adc
enter
cmp
cld
loope
sub
cmp
movsb
push
inc
dec
inc
fcomps
xor
adcb
adc
enter
das
push
insb
ss
or
mov
push
ret
or
xchg
shl
jae
jp
out
fs
jno
js
sbb
push
es
pushf
icebp
lahf
aas
stc
jo
push
lret
xor
adc
in
mov
push
sti
es
add
jno
sub
dec
test
xchg
add
in
jmp
cmp
movsb
push
and
les
loop
outsl
or
and
clc
add
testb
xor
fstl
mov
xchg
negb
jmp
sbb
dec
cmp
ret
in
dec
push
jl
mov
lret
test
scas
and
sti
mov
xor
add
push
xchg
jp
push
cmp
fwait
inc
fsubl
xchg
loopne
and
ljmp
xchg
and
pop
mov
mov
incl
mov
push
test
push
dec
add
and
inc
cmpsb
scas
clc
mov
mov
pusha
pop
jl
push
add
daa
push
and
fildll
push
add
push
cwtl
cmpsb
push
pop
stc
hlt
out
outsl
sbb
pop
aad
or
push
sub
xlat
xchg
and
add
mov
xchg
adc
inc
popa
push
jp
mov
decb
icebp
and
sub
lods
or
loope
stos
cmpsl
add
fidivl
mov
push
lret
data16
clc
inc
xchg
cmp
xchg
movb
or
mov
or
out
xorl
dec
mov
mov
mov
es
mov
shll
inc
push
mov
add
add
xor
add
es
out
jb
pop
sbb
dec
orb
xchg
xor
rolb
adc
icebp
fisttps
fldcw
xchg
ficoms
push
fwait
daa
mov
sahf
pop
sbb
and
mov
or
stos
ss
mov
cli
jbe
jns
ss
or
movsl
pop
icebp
inc
stos
and
add
mov
adc
mov
negb
les
push
jo
cltd
cs
mov
inc
repnz
adc
pop
dec
mov
and
add
xor
cli
ficoms
or
mov
mov
enter
bswap
stc
xchg
mov
loope
mov
dec
loop
js
add
scas
xor
outsb
stos
mov
and
mov
pop
xchg
cmp
and
cmp
and
xor
add
clc
jg
push
jl
into
leave
stos
ret
mov
adc
pop
pop
jg
lahf
aam
clc
push
push
sbb
lcall
fisttps
adc
mov
ss
inc
in
jmp
iret
test
inc
clc
inc
inc
mov
mov
and
int3
hlt
mov
pop
mov
jbe
or
add
jg
sbb
adc
add
cmc
jo
jmp
push
cmpsb
xor
ret
dec
and
aas
lahf
xlat
ret
or
or
sbb
adc
scas
and
adc
mov
pop
pop
mov
inc
stos
ds
and
lcall
insl
xchg
xor
or
inc
arpl
fimull
sub
xchg
or
and
and
jae
and
es
fsubs
sbb
adc
and
call
mov
aas
xor
xor
out
mov
scas
leave
push
scas
icebp
loop
pop
inc
pusha
popf
mov
xor
push
sarb
adc
pop
cmp
aad
jo
or
imul
cltd
push
jge
out
mov
mov
scas
daa
xor
or
sub
out
push
sbb
subl
or
sub
mov
testl
cli
movsl
lret
pop
push
mov
pop
cmp
mov
lret
rorl
cmp
inc
or
mov
pop
decb
jmp
pop
std
sahf
lods
lret
add
imul
inc
cli
mov
mov
je
mov
jb
push
push
cwtl
dec
das
into
test
dec
or
outsl
ss
jmp
xor
xchg
push
and
jecxz
cmp
mov
mov
xor
cli
test
cli
push
push
mov
ss
aad
lea
sbb
jbe
ljmp
icebp
sahf
test
dec
and
mov
pushl
mov
frstor
sub
ror
loope
xchg
add
les
imul
push
mov
test
push
aam
inc
and
lock
add
add
sbb
gs
inc
pusha
ret
pop
sbb
cld
dec
insb
mov
pop
fiaddl
daa
js
sar
add
add
adc
cmp
loop
xchg
nop
push
push
add
cmp
mov
push
loopne
insl
sub
add
test
inc
mov
ss
clc
dec
inc
add
ljmp
or
push
dec
mov
jle
inc
insl
xor
push
cli
inc
push
mov
push
and
or
sub
pop
addr16
mov
jno
push
push
adc
pop
mov
arpl
inc
imul
es
add
cmc
jg
cmc
movsb
jns
mov
inc
pop
sbb
cli
icebp
inc
cmp
and
sub
outsb
ds
push
in
push
rcl
insb
sarb
cmp
pushf
cmpsl
inc
loope
scas
shlb
ret
lock
dec
out
out
xor
or
in
xchg
push
fnstcw
push
sbb
cmp
mov
das
mov
int
mov
inc
add
mov
je
movsb
shlb
dec
movb
cli
and
and
mov
cmp
xchg
add
push
dec
icebp
push
jmp
xorl
lods
xchg
je
inc
movsb
lcall
and
cmpsb
and
sbb
aad
sub
mov
mov
sub
aam
or
xchg
sbbb
ret
push
adc
add
std
cmp
push
ret
lcall
vcvtps2ph
inc
into
xor
sub
jg
out
test
mov
xchg
cmp
mov
pop
ret
movsl
mov
push
xchg
sbb
inc
lret
out
mov
mov
push
ss
adc
xor
aaa
add
mov
cmp
adc
insb
movsb
shrl
add
arpl
sub
xorl
push
outsl
ja
orb
and
inc
adc
xor
add
push
enter
mov
std
aaa
xchg
scas
inc
xor
es
fisubrl
cmp
inc
or
nop
mov
cmp
add
aas
in
cli
or
stos
movb
push
ljmp
cli
dec
mov
pop
xchg
cltd
jo
add
sarl
mov
push
or
imul
out
mov
sbb
adc
aaa
cld
bound
mov
jmp
out
push
sub
mov
pop
in
mov
testl
inc
les
or
call
xor
test
hlt
aam
add
mov
aad
repnz
mov
push
pop
repnz
nop
mov
dec
orb
lods
shl
sub
push
xor
lods
adc
outsb
fimuls
push
inc
outsl
inc
sbb
pushl
adc
mov
inc
loop
gs
cld
mov
push
add
scas
push
cmpsb
push
lret
sbb
ficompl
and
call
jb
clc
and
clc
and
aaa
mov
push
mov
aaa
cmpsl
loop
and
sbb
dec
xor
jae
mov
mov
insl
outsl
andl
jge
lcall
inc
cmp
push
cmp
das
ds
das
mov
pop
ss
dec
int
and
or
push
sub
call
into
and
and
mov
fcoml
hlt
sbb
cwtl
lahf
ret
jl
int3
cmp
fimull
js
xor
insb
pop
hlt
imulb
xchg
fsubrs
ror
xor
mov
inc
inc
data16
xor
jp
xchg
les
hlt
pushf
jbe
adc
sar
repz
mov
xor
mov
sbb
mov
mov
add
dec
loope
xchg
xchg
hlt
es
mov
outsl
dec
cltd
aas
dec
or
xchg
sti
rorl
fdivr
dec
cltd
push
pusha
out
sbb
int
daa
and
rorb
mov
pop
sub
in
mov
inc
les
dec
iret
ja
add
mov
into
hlt
jo
addb
clc
or
sahf
fs
xor
mov
mov
fcomi
mov
push
or
mov
int3
enter
in
mov
sbb
xchg
jge
sbb
lahf
fmull
test
stos
mov
test
dec
loopne
mov
cmpsb
sub
cwtl
cli
adc
lods
scas
and
sbbl
icebp
lock
add
das
and
out
fildl
cli
jp
mov
dec
icebp
xlat
pop
ljmp
cld
mov
sbbb
mov
dec
ljmp
lock
inc
xchg
stc
add
aaa
lea
fsubp
jge
mov
xchg
outsb
adc
or
ss
pusha
jl
sbb
add
push
aad
mov
addl
sti
movsb
push
stos
call
test
or
das
lcall
push
pop
cmpsl
xor
lock
imul
inc
cmpl
mov
and
jle
leave
sbb
add
jmp
rcrb
mov
mov
and
mov
jb
inc
push
sbbl
jg
hlt
cs
dec
add
js
jle
cwtl
dec
inc
std
out
add
andl
and
mov
inc
mov
pop
push
imul
pop
pop
data16
xor
inc
mov
jno
jb
mov
pop
xor
sbb
orb
sarb
pop
popa
mov
std
cmp
mov
mov
and
sub
scas
mov
rolb
dec
pop
btc
movsb
shlb
push
adc
mov
repnz
test
rclb
popa
mov
test
cwtl
dec
add
loope
int
aam
jo
dec
int3
lret
push
lock
mov
sbb
test
cmp
ds
and
push
stos
fdivl
push
and
adc
lods
xchg
pop
movb
lods
mov
xor
insb
pop
les
sub
adc
xorl
mov
test
ja
lret
inc
add
and
push
test
or
inc
aaa
lock
or
mov
dec
js
sub
and
scas
js
aad
xchg
jnp
jb
dec
push
and
xchg
mov
loop
or
inc
test
aam
push
test
out
mov
dec
xor
rcrb
xor
roll
mov
mov
dec
sbb
xlat
cwtl
lea
add
ss
daa
cmpsl
sarb
loop
pop
push
add
test
xchg
xor
cmp
push
in
pop
flds
in
aas
rcl
pop
cmovle
mov
push
mov
sub
rolb
xchg
pop
sub
inc
in
sbb
outsb
push
aas
insb
ss
outsl
push
addr16
sub
daa
jne
test
xlat
or
mov
sub
clc
and
cmp
or
jne
push
scas
outsl
or
dec
lock
add
dec
push
pusha
sub
push
scas
xlat
das
jp
mov
rol
or
mov
jg
movsb
dec
in
push
xchg
ljmp
xchg
mov
dec
adc
test
xchg
decb
lock
sbb
call
inc
imul
in
sbb
femms
cmpsb
sbb
int
add
or
xchg
and
mov
mov
xchg
or
das
push
test
jp
mov
in
sbb
push
aas
mov
ljmp
ds
mov
js
mov
adc
xchg
test
out
aaa
dec
addr16
and
cltd
rep
cmp
shrw
shrb
mov
clc
in
jmp
dec
mov
shrb
rcll
cmpsb
and
f2xm1
adc
push
cmp
or
mov
or
and
xchg
sbb
test
in
mov
call
mov
outsl
cmp
pop
mov
loope
stc
and
mov
pop
mov
dec
inc
ljmp
shll
xor
push
adc
shll
adc
jecxz
push
push
daa
dec
sahf
cmp
sub
stc
xchg
and
and
insb
dec
cmp
inc
pop
jp
daa
insl
adc
pusha
nop
sub
in
inc
inc
sbb
loope
out
dec
mov
sarb
or
sbb
aam
inc
pop
sub
adc
lods
outsl
ds
std
push
pop
mov
and
out
pop
in
jno
ds
mov
int
imul
xor
dec
mov
es
xchg
add
push
call
adc
out
xlat
add
pop
das
mov
outsb
repnz
or
xchg
cmp
and
add
fwait
test
mov
sub
sub
dec
clc
push
or
adc
or
ret
rclb
aaa
js,pt
sub
mov
aas
test
mov
adc
xchg
ret
mov
or
lock
add
xchg
rcl
xor
test
xchg
int3
cmpsb
adc
xchg
xchg
lods
mov
add
notb
jne
je
cmp
cld
sbb
cmp
sub
lds
movsb
jo
sbb
stc
fsts
add
pop
push
inc
mov
mov
mov
in
pop
sub
mov
push
and
lahf
xchg
out
into
and
sahf
xor
mov
bound
jg
pushf
xor
pop
data16
in
ljmp
sub
frstor
in
xchg
loopne
test
push
dec
lock
pop
mov
fiadds
push
jecxz
iret
xchg
mov
or
mov
ret
mov
or
pop
jmp
jle
xchg
fstps
hlt
inc
jle
ficoms
push
mov
mov
clc
sub
and
test
lock
fucompp
call
or
mov
cs
cmpsb
imul
mov
push
mov
add
push
xchg
ss
jl
faddl
cvtpi2ps
ds
and
les
daa
in
sub
pop
push
mov
and
stos
inc
js
mov
xor
xchg
shlb
inc
out
cmp
data16
lds
lret
nop
pop
dec
cmp
je
movsl
cmpl
add
sub
add
adc
push
or
cli
mov
xchg
mov
and
pop
in
jecxz
daa
xor
scas
push
mov
loope
outsb
mov
pop
add
add
jb
jecxz
mov
add
js
dec
adc
and
fsubrl
sbb
adc
adc
mov
or
jo
fsubp
gs
loopne
mov
or
mov
mov
fcoml
mov
mov
je
bound
xchg
or
mov
je
adc
sbb
nop
push
mov
inc
lcall
push
dec
imul
pop
scas
add
cld
call
fimull
pop
mov
cmpsl
stc
clc
shl
lcall
lret
xchg
sub
test
das
faddl
sub
cmp
mov
loopne
cli
scas
imul
add
xchg
push
jo
cmp
imul
sahf
std
jecxz
xchg
mov
mull
jno
jbe
mov
and
rcr
xchg
fldenv
cld
mov
icebp
xorl
fisttpl
push
mov
adc
or
sbb
add
cmpsl
inc
cmp
nop
mov
aas
mov
inc
xchg
and
mov
lods
lods
mov
pusha
jne
add
sub
dec
in
aad
outsl
push
adc
add
fwait
and
lock
inc
sbb
leave
push
sbb
in
push
pop
cld
pushf
xchg
cmp
xor
sti
cs
xlat
xorb
nop
js
mov
pop
jb
jmp
jge
xor
mov
jo
cli
add
mov
ret
or
mov
push
pop
sbb
add
xchg
xchg
sbb
sub
xor
mov
sub
les
andb
pusha
ljmp
cmc
jle
or
es
mov
add
je
push
sub
enter
and
addb
push
lds
adc
movsb
and
or
test
into
sub
cld
aas
out
adc
adcb
push
rclb
data16
aam
inc
add
xchg
mov
dec
scas
sahf
sub
push
in
mov
pop
or
xor
inc
jg
inc
lahf
popa
loopne
dec
lds
pop
xorl
xchg
call
and
out
ss
push
clc
je
nop
dec
lahf
mov
mov
lock
adc
nop
test
dec
je
mov
lcall
or
inc
lret
sbb
loope
and
mov
mov
sub
and
xor
xchg
std
fbstp
jl
pop
sbb
mov
mov
pop
or
mov
fs
mov
push
jns
shlb
add
inc
jle
dec
xlat
test
sub
loop
or
cmp
sbb
mov
clc
add
push
and
xchg
inc
or
mov
or
ds
xchg
cwtl
pop
data16
sub
loop
push
xlat
jmp
xor
clc
mov
push
mov
mov
mov
or
sahf
xchg
shlb
sub
out
lods
andl
call
incl
push
cmc
push
fsts
sub
cmpsb
pop
notl
lds
xlat
sub
jle
and
or
inc
cld
jbe
jno
mov
inc
jl
das
insl
dec
inc
adc
mov
jp
xor
xor
xchg
dec
pop
scas
clc
xor
sbb
xchg
cmpsb
cs
in
add
icebp
or
add
add
inc
hlt
xchg
imul
xlat
inc
xchg
movsl
aas
jbe
pusha
fstpl
jne
call
mov
jle
out
loopne
sub
test
sbb
sub
decl
mov
inc
data16
xchg
pushf
push
sbb
or
out
xchg
ljmp
ret
je
push
jecxz
stc
fmuls
pop
adc
adcl
out
fbld
jo
cltd
adc
jg
es
sbb
pusha
testb
and
sbb
insb
imul
inc
add
shll
inc
flds
mov
js
sub
xor
sbb
push
jle
ja
pop
add
sub
add
popf
mov
cmp
push
inc
sahf
fbld
pusha
fisubrs
hlt
jge
inc
adc
cld
aad
sub
pop
xchg
pop
lock
lahf
or
mov
ds
mov
and
rclb
push
aas
sub
mov
mov
inc
adc
ljmp
enter
or
mov
mov
mov
mov
mov
imul
fyl2x
sbb
mov
test
inc
xchg
incb
ret
nop
test
or
dec
fmuls
das
clc
dec
sbb
mov
ds
cltd
jbe
push
push
xor
addr16
call
repz
sbb
sbb
subb
xchg
add
dec
std
rclb
mov
cmp
mov
leave
fidivrs
adc
push
cwtl
mov
or
push
fcoml
dec
mov
out
js
ret
mov
cmp
sahf
fstps
adc
pusha
movsb
es
es
inc
clc
fst
jbe
and
ss
jmp
rol
mov
stos
mov
fbld
mov
add
and
adc
jo
test
mov
mov
out
sub
pop
stos
dec
js
cmp
lcall
pusha
into
lcall
js
sbbb
clc
mov
fmuls
pop
adc
lahf
scas
cmpsb
nop
std
pop
nop
scas
jno
dec
cmp
dec
mov
orb
mov
mov
mov
ret
xlat
add
and
inc
mov
add
adc
stc
incb
loopne
dec
pop
mov
jmp
lods
adc
mov
dec
xor
cmp
call
in
test
fstpl
push
incl
jmp
xchg
aaa
push
ljmp
add
fs
addr16
out
cmp
repz
popa
fldt
jb
push
cmp
pop
xchg
je
ror
popa
adc
adc
loop
hlt
popa
icebp
mov
inc
add
das
add
push
cmp
outsb
pop
pusha
ljmp
mov
adc
push
cmp
loop
scas
aam
and
push
add
test
popa
jne
sti
icebp
jge
test
leave
sarb
scas
bound
popa
mov
xchg
in
lods
hlt
lods
ja
mov
stos
mov
rol
mov
hlt
mov
mov
repz
in
negb
mov
pushf
sbb
cmp
shll
lock
sbb
stos
xchg
imul
xchg
add
popf
push
mov
push
fcmovb
rorl
out
xor
cmpsl
xor
cmpl
mov
rolb
aam
adc
les
cmp
cld
adc
xor
fxch
push
fwait
lods
jno
scas
popf
icebp
out
data16
and
add
scas
fisubl
xor
and
add
neg
sub
sub
dec
or
pushf
add
scas
out
mov
sub
aas
sar
push
push
pop
ljmp
cld
and
jl
sub
push
or
ds
jbe
lret
roll
adc
cmc
dec
push
push
add
pop
push
cld
ret
cmp
mov
inc
dec
xor
rcll
cmpsb
cmp
or
stos
mov
test
cs
out
dec
pop
pop
sbb
lret
inc
out
pop
jmp
aas
dec
adc
mov
xchg
mov
push
cli
mov
push
pusha
lcall
xchg
lods
repnz
and
je
or
push
clc
dec
dec
andb
cmp
icebp
fucomi
fcmove
test
loope
fcoml
insl
and
inc
in
mov
jg
cmp
or
cmp
clc
dec
lea
popa
mov
add
adc
ficompl
arpl
mov
or
sar
mov
pop
inc
outsb
xchg
xorl
inc
add
pop
jecxz
sub
jg
jl
rcrl
popa
daa
loope
inc
xchg
fimuls
fistps
add
or
testb
daa
fiaddl
xor
adc
call
pop
sbb
add
hlt
dec
fnstsw
mov
lods
daa
push
mov
sbb
jbe
mov
jmp
mov
lea
mov
movsb
mov
std
aam
int3
addr16
sbb
xor
out
xchg
lods
outsl
ljmp
mov
mov
jle
add
cmp
fcmovb
lcall
inc
dec
adc
xchg
nop
in
push
test
test
insl
xchg
adc
aam
fisubs
xchg
mov
bound
sahf
data16
jbe
mov
adc
call
mov
popf
cli
rcrl
cmpb
pushf
movsl
rorl
push
in
or
js
les
hlt
mov
inc
mov
sar
out
and
xor
push
and
clc
testb
jnp
fmul
or
add
pop
add
add
dec
sub
xchg
jne
xchg
ret
ja
into
mov
fcomip
pop
das
mov
shlb
loopne
jno
fimuls
js
lahf
inc
insb
mov
inc
popa
sub
mov
stc
insb
inc
adc
cmp
cs
das
adc
jle
mov
or
push
jge
fimuls
ret
add
xor
test
sub
or
cmpsl
jae
push
push
mov
pop
sarb
pusha
dec
ret
movsb
testl
xor
cld
leave
outsb
test
dec
popa
addr16
data16
js
fists
push
iret
push
clc
jb
mov
pop
mov
cmp
xchg
sbb
lret
loopne
mov
push
jmp
add
jge
adc
movb
stos
cli
rorb
cwtl
and
push
cmp
xchg
repz
in
data16
and
mov
cltd
xchg
adc
adc
out
add
pop
ret
stc
loope
mov
es
mov
jno
loopne
sbb
pop
insb
jle
inc
out
add
pop
out
sub
test
outsb
and
lret
xchg
push
sahf
or
xor
scas
scas
inc
test
lock
push
pop
int3
insb
mov
inc
adc
test
insb
mov
jmp
in
cmp
fwait
sub
test
sub
sub
bound
enter
outsb
cs
push
mov
stos
add
fisttpl
fisubl
jns
jl
inc
xor
je
mov
fbld
sbb
sub
dec
int
adcl
mov
jns
scas
pop
cmp
mov
mov
mov
adc
mov
mov
or
popf
das
mov
out
xchg
sbb
mov
mov
dec
adc
hlt
or
aad
push
mov
adc
or
jg
xchg
test
inc
cwtl
out
mov
inc
sarl
cmp
lods
cltd
xchg
push
sbb
cld
adc
push
mov
cs
lods
jbe
js
dec
pop
inc
mov
nop
call
addl
add
xchg
adc
fcmovnb
aaa
xorb
shr
pop
sub
or
jmp
mov
sbb
inc
mov
push
and
and
enter
ja
lea
outsb
or
in
mov
addb
shl
fs
shlb
mov
push
nop
out
fldcw
nop
fldl
mov
pop
int
ss
test
inc
sub
icebp
xor
sbb
adc
in
xor
cmp
inc
aaa
push
bnd
decl
jns
das
jl
sbb
and
mov
bound
push
andl
cld
aaa
adc
pop
mov
lds
leave
cli
lret
insl
ljmp
das
fs
lds
dec
loop
adc
push
inc
call
push
push
je
insb
insb
push
data16
out
jl
imul
adc
jo
and
dec
jl
decl
sbb
sbb
clc
jbe
jnp
leave
mov
rorb
or
push
xor
stos
mov
pop
mov
shll
adc
sbb
sub
mov
lcall
popa
aas
pushf
addr16
sub
sbb
mov
ret
shlb
push
cmp
and
pusha
push
ret
cli
les
ret
int3
or
mov
lods
popa
sbb
sbb
out
cmp
loopne
faddl
and
lods
ja
ljmp
imul
add
sbb
loopne
lcall
pusha
pop
inc
popf
inc
aam
test
repz
mov
test
push
loopne
outsb
jg
cmp
outsb
pop
icebp
decl
xor
aas
dec
cmp
jns
test
lods
rol
or
outsb
stos
stos
or
mov
dec
cltd
sbb
or
mov
cmpsb
and
bound
push
mov
jecxz
adc
ljmp
insl
xor
test
ss
push
mov
mov
aad
or
subl
or
jo
or
ljmp
in
xchg
push
pop
lret
mov
fsubr
fistpll
and
sub
str
and
push
mov
lcall
push
sub
lcall
dec
dec
fistpl
inc
add
and
std
lock
sarl
repnz
cmpsl
imul
mov
and
mov
cli
js
mov
mov
mov
dec
int3
and
sub
pop
inc
cmp
ret
push
cli
and
push
push
fimull
push
xchg
mov
sbb
inc
movsl
dec
jmp
mov
clc
in
adc
enter
dec
dec
test
pushf
dec
push
lret
pop
stos
jge
shl
icebp
aam
cmp
cli
jbe
push
mov
loope
cmpsb
xor
xchg
mov
xchg
ljmp
jge
mov
jl
and
sub
push
ja
clc
sub
cmp
mov
sub
xchg
pop
shrl
jmp
hlt
sahf
pop
bound
frstor
sub
or
ds
xor
stos
mov
shrl
in
fimuls
pop
shlb
movsl
adc
mov
stc
sbb
pop
shll
rcll
inc
pop
or
popa
cld
mov
lods
jmp
adcl
stos
inc
aam
mov
inc
daa
stos
mov
fistps
xchg
jle
push
adc
xchg
mov
fisubrs
ljmp
xchg
xchg
xor
pop
loopne
push
push
cmpsb
and
repnz
add
jg
push
rcrl
xor
and
xor
push
push
rcl
mov
pop
pusha
or
cwtl
insb
jp
or
sub
sbb
cltd
xchg
ret
push
mov
push
sbb
lahf
and
sub
cmc
mov
repz
ret
mov
fcmovb
mov
cmpsl
jbe
adc
lock
add
cwtl
sub
jg
cmpsb
inc
xorl
inc
rcrl
pushf
inc
jbe
pusha
mov
xor
xor
js
data16
stos
lret
aad
call
add
and
mov
jg
filds
mov
popf
or
or
pop
mov
lret
cmp
insb
push
cmp
sti
pop
lock
cmp
test
pop
mov
dec
inc
inc
pop
push
add
jp
inc
add
scas
aad
pushf
mov
xor
test
rolb
jl
mov
in
lcall
ja
or
and
adc
int3
jnp
or
fisttpl
pushf
lods
pop
cld
shrb
cmp
dec
test
cmp
adc
test
clc
push
inc
mov
jo
fsubs
cmpb
insb
leave
jmp
imul
inc
sarl
adc
sbb
jl
mov
dec
nop
push
mov
pop
rcll
jbe
push
ljmp
jns
leave
push
imul
loopne
cli
xchg
hlt
cmp
clc
xor
cld
addr16
sub
adc
xchg
cmp
lea
lods
orl
adc
jg
rolb
movsb
xor
adc
adc
sbb
dec
loopne
xor
push
cmp
insb
xchg
es
repz
jo
cmp
fiaddl
inc
jb,pn
or
rcr
dec
xchg
mov
mov
ljmp
push
mov
add
mov
hlt
sbb
adc
je
ja
out
and
das
call
jo
sub
outsb
jae
inc
rcr
data16
adc
dec
inc
mov
fwait
mov
jo
sub
shll
fsubs
or
sub
add
add
aad
jae
inc
xchg
adc
jl
sbb
jnp
push
stc
out
push
inc
cmp
mov
sbb
inc
inc
mov
sbbb
stos
mov
mov
pop
orl
in
test
test
inc
outsl
pop
inc
imul
testl
arpl
lock
adc
sbb
test
sub
rclb
mov
jle
pop
xchg
lea
loope
and
push
xchg
inc
mov
push
xor
mov
push
sti
and
mov
or
cli
stos
mov
cmpsb
and
adc
sub
dec
mov
or
pop
mov
dec
repz
scas
mov
clc
and
test
push
jecxz
or
mov
jp
mov
cltd
lahf
push
jle
mov
xchg
cld
lret
sub
or
dec
adc
minps
pop
adc
push
adc
call
int3
scas
jge
pusha
dec
lcall
pop
incl
and
pop
lret
test
dec
inc
in
movsb
in
and
push
orl
fsubs
ret
das
or
enter
dec
arpl
daa
xchg
mov
pop
cmp
call
xchg
stos
adc
push
je
imul
stos
sub
xchg
inc
adc
jo
daa
xor
xchg
cmpsl
mov
jae
inc
adc
cmp
push
aas
push
aam
sub
mov
or
mov
fdivs
lods
inc
addb
dec
xor
stos
mov
push
shlb
dec
and
dec
xor
mov
flds
lods
sbb
mov
leave
pusha
or
fadds
dec
add
lret
rclb
ret
dec
jbe
mov
test
cli
fldt
lret
jp
jmp
push
or
and
aas
mov
push
ljmp
nop
or
dec
cmp
push
jbe
test
push
aad
xchg
push
mov
outsl
xorb
push
pop
ds
mov
inc
add
mov
adc
lcall
push
xor
adc
mov
sub
stc
roll
xor
fwait
push
sbb
adc
add
sub
enter
lods
mov
cmp
pushf
fs
adc
mov
loopne
test
dec
cmp
jmp
js
push
pop
sti
xchg
inc
int
sub
insl
xchg
loop
js
jo
or
jnp
stos
add
add
and
and
mov
lret
fisubrs
add
inc
cmp
jp
mov
aad
imul
inc
jbe
rol
jge
xchg
mov
ret
xchg
cld
inc
daa
pop
or
loope
fisubrs
sub
mov
popa
pop
push
jb
push
ja
loop
popf
xor
hlt
push
xlat
adc
enter
icebp
movsb
fnstsw
mov
loope
sbb
or
imul
sbb
bound
push
cld
pop
pop
inc
pop
fisttpl
rorb
jmp
xor
aam
test
cmp
cs
jl
icebp
test
adc
cmc
outsb
add
push
test
loope
lods
mov
lea
loopne
movb
pop
fwait
xor
aam
clc
aaa
inc
push
fldenv
stos
jecxz
pop
push
fcoml
nop
mov
lock
fstl
aaa
sbb
call
push
call
mov
pusha
add
inc
push
push
mov
push
loop
mov
mov
dec
mov
lods
cmp
add
pop
pop
dec
xchg
sub
repnz
pop
mov
or
stos
mov
mov
inc
push
aaa
aam
add
jl
or
loope
fildl
push
and
sbb
jb
sub
into
sub
inc
incl
xchg
sbb
aaa
stos
cmpsl
jo
arpl
mov
or
mov
inc
popf
xor
es
jnp
iret
icebp
or
dec
rclb
data16
dec
and
nop
jge
xor
jle
xchg
and
insl
stos
adc
mov
sub
loop
scas
push
mov
div
adc
bound
jl
mov
push
xchg
push
sub
jae
sbb
mov
aam
out
xor
imul
and
cmpsl
and
fistpll
jg
or
aad
insl
xor
adc
or
push
into
push
aam
push
movsl
filds
mov
mov
popl
movsb
jp
mov
sar
push
fs
dec
push
dec
pop
jle
mov
shll
dec
xorb
sbb
popl
into
std
stos
shr
outsl
mov
jle
xchg
lcall
mov
sub
jle
inc
call
mov
mov
shrb
cwtl
xchg
scas
dec
aam
stos
sbb
popa
je
push
icebp
xchg
jle
sub
xor
idivb
ss
aaa
stos
pusha
pop
outsl
cwtl
pop
nop
mov
sbb
xchg
lods
sbb
mov
call
mov
test
lock
adc
jo
xchg
xchg
cltd
mov
mov
outsl
insl
and
xlat
pusha
je
out
daa
jle
loop
andl
insb
cld
cmp
testl
sub
cmp
shl
outsl
mov
inc
inc
rcr
or
and
sub
pop
push
mov
inc
and
sub
lret
aas
push
mov
mov
fidivs
lds
loope
test
pop
mov
pop
xor
jbe
inc
mov
add
pop
into
xlat
loope
shrb
push
and
js
pusha
jl
insl
test
push
xor
jge
es
testb
bnd
aam
test
cmp
push
add
sbb
xchg
mov
ljmp
pop
mov
and
and
cs
add
xchg
push
insl
jne
pop
pop
sahf
jo
insl
mov
jg
call
loopne
cmp
cmp
ljmp
push
imul
adc
idivb
out
es
int3
mov
ret
std
popa
mov
insb
daa
decb
sti
es
lret
in
sbb
fiaddl
cwtl
add
movl
addps
pusha
cmp
push
sbb
shrl
mov
ja
rorb
cmp
pop
sbb
lods
push
and
mov
in
add
mov
outsb
mov
xor
lock
clc
fidivrl
mov
rcl
aam
jo
and
mov
bnd
xor
xchg
mov
jg
xchg
inc
addl
xchg
shrl
int3
sbb
popa
pop
rorl
loopne
adc
cmp
adc
jb
xchg
arpl
je
jl
xchg
add
fwait
lods
cmpsb
sahf
push
xlat
inc
xor
xorl
xchg
mov
mov
cmp
jno
sti
jmp
shlb
and
dec
pop
or
sub
je
pop
test
fcoms
xchg
xchg
cmpsl
ds
xor
ja
adc
jae
push
mov
std
in
gs
dec
add
mov
and
or
push
stos
ficomps
lahf
xchg
add
cld
push
or
add
mov
orb
subl
cli
xchg
ss
mov
subb
adc
pop
xchg
incb
out
mov
aas
sbb
jmp
and
ljmp
mov
andl
jne
fmull
pushf
popa
and
or
fsubrp
pop
pop
mov
inc
dec
ret
iret
sbb
lahf
imul
stos
push
pop
imul
jo
cli
sti
cmp
xor
test
inc
jle
nop
mov
add
cmp
and
jnp
gs
daa
pop
pop
ret
or
mov
inc
jns
and
es
sbb
outsb
in
inc
lods
jg
xchg
mov
in
sarb
inc
jno
imul
outsl
and
sub
dec
xchg
push
mov
inc
into
push
movsb
mov
shrl
scas
adc
mov
lret
sbb
mov
ficoms
jo
je
pop
cwtl
and
xor
and
xorb
mov
jbe
test
inc
cmp
clc
imulb
and
lcall
fiaddl
push
and
scas
les
repnz
sub
mov
call
inc
aad
sbb
push
jo
mov
add
xor
lods
pusha
jecxz
jmp
add
jecxz
push
outsb
mov
cwtl
int3
sahf
mov
sbb
push
popa
es
repnz
mov
pusha
add
loopne
xchg
adcb
je
lock
test
rclb
cmpsb
ret
cs
pop
mov
sub
test
ds
sub
test
fwait
xchg
test
rorb
push
ret
orb
pop
mov
decb
enter
pop
jne
mov
int3
cvtdq2ps
push
insb
repnz
or
sub
sbb
dec
js
xchg
enter
ja
cli
dec
jmp
xor
xor
shrb
adc
add
dec
insb
frstor
add
cmp
mov
dec
es
mov
pop
js
mov
imul
xor
xbegin
data16
adc
ja
imul
inc
jmp
pop
dec
outsl
inc
inc
stos
dec
xor
adc
inc
add
xchg
adc
aas
jb
movsl
mov
aaa
pop
xchg
sti
incb
xchg
movsb
data16
pusha
push
cld
xchg
pushl
inc
cmp
xchg
popf
rcll
xchg
std
popa
sti
movsb
fxch
xchg
or
hlt
mov
sbb
inc
inc
incl
sub
sub
pop
mov
mov
lock
jl
call
xchg
mov
iret
add
cmp
aad
movsl
cltd
cmp
and
push
dec
loope
pushf
divl
outsl
xor
sarb
inc
daa
push
shrb
sbb
sub
test
shr
dec
xor
pop
or
add
gs
lods
adc
shll
cmp
push
scas
rorl
cmp
mov
cmp
cmp
shl
pop
mov
test
jmp
pop
mov
jb
pushf
adc
jbe
ljmp
adc
mov
test
mov
adc
je,pt
jae
subl
add
decl
cld
push
nop
loop
sti
or
add
pop
xchg
aam
dec
cli
dec
mov
or
lods
or
sub
adc
cmp
pop
mov
cmpsb
insb
mov
cmp
mov
test
mov
fcoms
inc
fdiv
sub
dec
sbb
fsubs
rol
mov
dec
push
lock
mov
sub
stos
inc
lds
ss
incl
shlb
int3
das
xchg
pop
movsl
xchg
xchg
sbbl
and
popa
loopne
xor
cmpsb
subl
cld
pushl
push
addr16
jmp
pop
sbbb
adc
jle
ljmp
mov
cmpsl
adc
aas
imul
je
add
inc
loopne
lock
jmp
pushl
shrb
cmp
stos
ljmp
or
dec
push
std
fnsave
add
dec
sbb
xchg
hlt
ja
mov
psubusw
push
xor
fisttpl
sub
in
dec
std
inc
inc
or
dec
xchg
xor
pop
mov
mov
cmp
pop
pop
and
pop
fisttpl
cmp
sub
andl
dec
xor
mov
add
mov
and
test
sbb
fcompl
outsb
xlat
push
into
pop
shl
and
fiaddl
cli
push
inc
sbb
xchg
hlt
scas
jmp
fisubrl
or
xchg
jbe
inc
pop
jge
fldl
icebp
add
lcall
je
roll
jg
or
adc
loop
or
cmpsl
push
or
and
cmp
jns
and
push
mov
pop
cld
push
and
pop
mov
cld
ljmp
js
or
inc
loopne
xchg
push
sahf
mov
js
push
adc
pop
mov
sub
xor
insb
pop
inc
cwtl
orl
negb
sbb
rcll
lahf
repnz
and
adc
xor
ja
add
add
movsb
add
lods
push
push
push
icebp
mov
addb
lock
adc
js
jp
add
in
call
mov
xchg
jmp
mov
fsubrl
aam
add
iret
shl
jbe
loope
pushf
add
enter
adc
mov
or
xor
or
sub
inc
xor
aad
test
inc
pop
pop
mov
sbb
hlt
and
lahf
orb
outsb
in
outsb
mov
dec
jmp
shlb
jl
hlt
into
inc
or
dec
push
and
mov
inc
js
xor
xorb
and
popa
insb
cmpsb
das
adc
rorb
dec
xchg
addb
mov
pushl
fldenv
sbb
xchg
jbe
pop
fdiv
mov
pusha
std
enter
mov
cmp
ret
in
add
cmpsl
mull
popl
cmp
sbb
jo
mov
les
push
fs
pop
sub
gs
or
pop
js
repnz
xchg
lahf
sahf
sub
adc
inc
push
jp
inc
in
inc
aas
cmp
jbe
xor
mov
and
mov
inc
inc
shrl
mov
fdivs
out
ror
and
int3
xchg
dec
test
js
or
xchg
adc
mov
push
andl
xchg
bound
shll
cmp
mov
out
fistpll
mov
sti
aad
dec
mov
sbb
pop
aam
cmp
aaa
jg
dec
dec
dec
pop
call
rorb
jp
add
sub
push
mov
bound
decl
nop
adc
dec
sub
jmp
add
sbb
add
jbe
add
scas
enter
add
subb
dec
lods
stc
pop
out
jle
cmpsl
call
and
inc
push
push
in
notb
cmp
push
faddp
jmp
and
jbe
xor
xor
pushl
xchg
iret
mov
in
scas
sbb
pop
cmp
and
add
popa
in
stos
push
arpl
cmp
incb
jmp
mov
repz
ljmp
sbb
pop
lret
add
or
add
sbb
sbb
jecxz
sub
sub
xchg
cmpsb
clc
rcll
sbb
ficompl
loop
fcompl
shlb
sub
scas
scas
popa
jmp
pop
mov
pop
xchg
test
jb
fcomps
sbb
mov
mov
push
xorl
cmp
mov
xor
in
dec
mov
xchg
inc
and
sbb
add
and
es
lcall
mov
scas
repnz
loop
sbb
mov
sahf
inc
aad
fstps
ss
mov
pop
lods
stos
and
push
add
add
test
outsb
jo
mov
popf
mov
mov
jmp
adc
or
fisttpl
jle
loope
pop
int3
dec
push
sub
mov
icebp
mov
sbb
js
jmp
je
test
sub
jp
pop
add
adc
jbe
ret
fldt
gs
aam
mov
cmp
aam
dec
test
data16
je
hlt
mov
inc
inc
mov
repnz
add
out
mov
sub
insl
repz
add
sub
call
outsl
add
lret
shl
push
sar
inc
sub
push
dec
shr
xor
xlat
aas
inc
cmpsl
adc
push
popa
and
in
add
decl
popa
add
cmpsb
int3
push
imul
in
pop
dec
mov
mov
add
aad
pop
inc
inc
sbb
int
pop
add
add
cmp
fwait
mov
lea
push
pop
repz
sbb
ljmp
sub
push
and
jmp
ss
rcrb
mov
push
int
jno
mov
push
loopne
push
shll
fildll
pop
insl
ljmp
mov
ret
xchg
add
out
pop
adc
push
int3
add
or
xor
sub
aas
xor
mov
push
mov
out
pop
shlb
inc
sbb
ss
mov
inc
push
dec
enter
cs
mov
pop
fistl
enter
sbbl
jg
or
mov
enter
bound
adc
push
inc
mov
clc
call
mov
push
ljmp
cmp
imul
fdivl
or
mov
sarl
jle
out
stc
sbb
ss
or
jg
add
insb
inc
inc
loop
adc
add
inc
xor
mov
cmp
adc
cli
add
inc
in
negb
call
pushf
mov
ret
pushf
mov
xchg
fsubs
sbb
pop
mov
dec
ret
cmp
fs
pop
into
call
jl
push
out
sub
inc
loop
enter
enter
inc
pop
mov
ja
pop
test
pop
shlb
aad
mov
xlat
xchg
clc
adc
shl
aas
lcall
decl
adc
jge
test
mov
push
in
jge
or
arpl
pop
mov
push
cli
xchg
ficoml
and
and
sub
fisubl
sar
or
cmp
pop
hlt
repnz
push
sbb
loopne
rorb
rorb
mov
cld
lret
mov
lods
push
in
loop
in
pusha
or
sbb
pop
adcl
jg
dec
je
and
and
push
cltd
xor
aas
dec
or
ss
cmp
pop
add
add
jo
scas
fcmovnb
aam
mov
jl
push
pusha
sbb
nop
add
push
xor
fnstsw
add
int
or
js
or
hlt
push
pop
sti
popa
dec
push
je
xchg
dec
pop
xchg
sbb
cmp
add
inc
movsl
mov
call
loop
mov
add
cli
andl
mov
cwtl
and
test
rclb
stos
negb
mov
enter
pop
je
dec
inc
aam
sbb
or
mov
xor
in
xor
mov
jo
lret
jno
incl
inc
push
or
and
add
mov
jbe
test
add
mov
xor
into
mov
inc
daa
inc
push
and
stos
push
loop
add
insl
sbb
subb
imul
push
les
pusha
jp
push
adc
sti
ds
and
ret
or
enter
sbb
and
sahf
pop
jle
and
stos
mov
insb
fildl
sbb
sbb
add
add
in
out
shrb
jb,pt
jo
call
adc
cltd
xorl
cmpsb
jge
dec
call
xchg
test
mov
sbb
and
jle
and
push
fists
dec
mov
in
push
into
cmc
fnstsw
add
or
mov
or
inc
mov
inc
cs
add
hlt
mov
push
addr16
roll
fildll
sahf
lods
mov
mov
add
int
jg
cmp
and
popa
xchg
loop
nop
xor
dec
sbb
mov
es
or
push
pop
add
xchg
jl
xor
loope
icebp
testl
add
mov
fdivrl
shll
lea
fisubs
addr16
push
lret
pop
mov
xor
flds
unpckhps
mov
ss
decb
and
nop
push
ljmp
adc
aam
loopne
sarb
sub
outsb
add
xchg
mov
dec
sub
in
push
sbb
dec
mov
cmp
cmp
jge
cmpb
mov
xor
pusha
sub
pop
cli
pop
sub
pushf
neg
lds
loopne
push
inc
mov
mov
xchg
out
aas
cli
daa
arpl
in
roll
call
fwait
or
add
lea
cmp
je
ss
xor
cmovge
push
mov
jecxz
add
fwait
or
call
or
sub
iret
sbb
jae
clc
push
jne
ljmp
int
popa
jmp
clc
leave
out
aaa
scas
mov
fisubrl
push
testl
mov
ljmp
inc
movsl
pop
or
cmpsb
cmp
cwtl
stc
cld
add
stos
aad
cmp
pop
mov
inc
loopne
cli
or
iret
or
and
ret
jge
aas
cld
js
fwait
mov
jl
or
ljmp
mov
xchg
adc
stos
xchg
ljmp
lods
jne
jge
fadd
incl
pop
out
dec
enter
cli
pusha
mov
hlt
add
lret
int
push
pop
cmc
mov
in
sub
pop
fidivs
sbb
imul
pushl
sub
xchg
out
mov
rclb
mov
inc
or
lods
xchg
stos
popf
push
inc
add
xor
or
cs
xchg
data16
cmp
inc
or
inc
cmpsb
lret
test
push
in
faddl
loope
test
dec
lcall
and
les
push
les
dec
cmpsb
aas
fwait
mov
mov
sub
incl
push
adc
push
pushf
xlat
mov
mov
insl
sub
rol
push
les
iret
mov
adc
dec
xor
sub
lods
or
or
mov
xor
push
into
xlat
incl
jbe
cli
mov
clc
mul
xchg
js
iret
lods
cmp
cli
ss
inc
aas
loop
shll
in
orl
std
dec
push
sahf
hlt
dec
and
mov
pop
sbb
in
sub
add
enter
rorl
add
mov
daa
mov
jp
call
decl
cld
sub
nop
std
mov
mov
pop
add
cmp
mov
dec
cld
xor
testl
xchg
and
jmp
cmp
and
dec
jl
mov
or
sbb
roll
mov
imul
xchg
push
cmp
test
fcomip
jb
cmp
rorb
mov
jp
rorb
in
and
test
pop
ret
add
pop
mov
push
ds
fsubl
mov
mov
sbb
idivb
movb
mov
pop
leave
stos
repnz
popa
popa
nop
outsb
movsl
lea
sbb
pop
shlb
fidivrs
mov
adc
ror
dec
dec
pop
adc
dec
pop
add
outsb
sbb
inc
and
sbb
push
add
js
subb
jecxz
nop
insb
mov
pop
dec
ror
inc
bound
pop
test
test
add
ffreep
mov
push
std
movsl
inc
sub
dec
outsb
pop
jle
ret
sbb
je
mov
dec
inc
mov
inc
jle
cld
es
inc
mov
mov
into
fucom
enter
ret
jg
ss
iret
adc
test
mov
xchg
push
mov
je
mov
mov
fwait
push
dec
push
cmp
dec
pop
out
adc
sbb
lret
test
add
or
fs
out
es
movsb
cmpl
sub
scas
ss
in
adc
xchg
sub
pushf
xchg
cs
xchg
icebp
fistps
dec
add
sbb
dec
mov
cmp
cli
xchg
data16
adc
testl
test
lods
jo
movsb
ljmp
push
clc
inc
xchg
pop
addb
xchg
stos
or
pushl
test
pushf
sbb
pop
sub
aam
daa
mov
nop
daa
fs
and
sub
clc
clc
cli
sub
and
cwtl
mov
je
xchg
inc
mov
sub
or
dec
dec
push
jbe
mov
popa
daa
shlb
sub
incb
xchg
mov
test
ds
jp
fdivs
pushf
inc
inc
inc
or
or
out
lahf
pop
mov
sub
and
cmp
fwait
push
or
repnz
imull
inc
testb
aam
repnz
inc
lcall
mov
imul
ret
nop
lods
negl
push
push
xchg
into
adc
add
jns
sbb
mov
add
sub
push
xchg
xchg
lock
jle
sub
adcb
sub
xchg
mov
loop
inc
lcall
push
adc
test
lcall
or
mov
mov
cmc
mov
js
inc
ret
in
sub
jno
movsb
jbe
inc
jle
or
les
add
xchg
loopne
xchg
jo
test
and
mov
and
mov
adc
lahf
mov
jns
lret
fimull
ja
adc
cs
iret
mov
pop
add
jno
mov
pop
mov
filds
cs
test
mov
in
and
dec
test
inc
ss
fldl
fdiv
add
sahf
addr16
xor
fstl
orb
js
jne
push
sahf
xchg
cmp
jle
mov
mov
sahf
test
test
inc
je
push
fwait
icebp
sbb
stos
cmp
sbb
shlb
stos
rorb
and
mov
xor
pop
push
xor
cmc
push
das
push
add
dec
repz
es
rol
fnstsw
sub
cmp
sbb
jle
pushf
pop
mov
sub
decl
sarb
shlb
inc
xchg
outsl
or
ljmp
sub
sti
sub
orps
cmpsl
adc
loop
push
inc
nop
mov
push
or
hlt
outsl
cli
inc
fnstsw
aas
add
pop
fistl
les
adc
sub
ret
xchg
shlb
outsl
push
mulb
fdivrs
xchg
sbb
jno
jg
pop
xchg
jb
and
add
mov
push
out
call
test
cwtl
ljmp
ds
xor
sub
push
or
lcall
ss
push
dec
por
rorl
scas
into
ljmp
mov
pop
push
loopne
pusha
lds
test
push
jle
adc
dec
cli
add
or
pop
mov
cld
adc
sub
outsb
sub
test
pusha
sub
jle
rol
jg
push
or
or
ljmp
sbb
int
jno
sahf
fistps
cmp
pop
push
lods
jbe
bound
or
mov
and
xchg
or
jg
test
push
push
hlt
les
or
fsubrl
mov
sar
pusha
testb
push
mov
in
xchg
repz
or
mov
aas
sbb
cmp
pop
xor
jnp
test
xor
mov
and
pop
or
xor
rol
lret
mov
push
push
jne
and
jp
add
outsb
push
push
sub
gs
insb
adc
pop
and
fiaddl
clc
pop
inc
push
andl
leave
add
jp
push
cld
in
mov
aas
ror
push
dec
jmp
push
aam
jne
push
mov
push
mov
push
xor
andb
pop
sbb
adc
add
sbb
mov
addr16
inc
loopne
mov
clc
adc
xlat
adc
bound
dec
or
je
stos
shlb
cmp
sbb
adc
sub
dec
mov
insb
pop
pop
push
xor
jle
sub
dec
sbb
cmp
sub
fs
sbb
add
push
andl
arpl
cli
inc
inc
sbb
adc
sbb
ret
lret
jp
rorb
inc
add
frstor
dec
inc
sbb
adc
addr16
adc
outsl
jg
mov
fmuls
adc
inc
sub
add
sub
aas
xor
sub
jb
add
jmp
xchg
sub
movsb
cli
lret
push
mov
dec
sbb
jmp
lcall
in
sbb
jg
add
add
sub
inc
mov
and
fadd
sub
jb
lods
enter
xor
xchg
push
cld
aaa
cltd
inc
sbb
mov
add
bound
push
data16
movsb
out
xor
dec
rorl
ja
xor
mov
add
sub
dec
adc
inc
mov
lock
notl
adc
mov
aam
pop
mov
fadds
sub
add
pop
pop
sbb
push
pop
clc
adc
jbe
mov
mov
dec
fs
imul
rorl
jo
inc
ja
mov
cmp
bound
aam
lock
sub
adc
cwtl
xor
data16
adc
xchg
jp
and
inc
out
rcr
out
sbb
push
mov
les
cmpsb
roll
or
jns
cmpsb
sub
lcall
rolb
int3
mov
ror
push
lock
aam
mov
decb
sub
mov
insl
mov
sbb
mov
adc
push
push
imulb
incb
mov
inc
sub
mov
xchg
cmc
push
sub
nop
fdivrs
sub
loope
xlat
fadd
mov
aam
je
insl
out
insl
sbb
jbe
inc
xor
loop
push
icebp
dec
mov
outsl
cmp
into
sbb
xchg
jnp
mov
or
cmpsb
sbb
mov
cmp
sub
adc
push
or
xchg
inc
lret
mov
repnz
mov
mov
aaa
data16
inc
insl
push
scas
jge
fisttpll
pop
aaa
bound
dec
mov
scas
nop
push
cld
xorb
insb
pop
fs
push
and
pop
movsb
cmc
sub
pop
push
test
push
push
fwait
push
cmp
add
fdivrs
dec
xor
push
jnp
fwait
push
popf
push
jmp
imul
jns
and
adc
push
and
jmp
ja
sar
jl
into
add
push
lods
xchg
repnz
dec
ss
xchg
inc
cmp
aaa
cmp
add
pop
adc
xchg
ss
int3
arpl
lret
cwtl
mov
nop
mov
pop
mov
inc
subb
out
adc
pop
xchg
call
scas
mov
fs
cmp
popa
push
push
shlb
lock
push
movsb
mov
cmp
inc
jle
pop
gs
jne
add
or
fisubs
imul
lods
pop
aaa
jo
pop
push
test
outsl
daa
and
gs
adc
outsl
cmp
xorl
adc
push
push
xchg
pop
add
push
inc
pushf
test
fidivl
xor
loopne
lock
push
lods
in
lret
aas
xor
push
js
sarb
repz
lods
imul
add
shrb
outsb
add
dec
and
sub
mov
xchg
mov
je
adc
cmp
add
subl
lods
inc
inc
repnz
mov
in
mov
add
jne
in
push
and
imul
bound
je
add
incl
xlat
inc
mov
adc
mov
out
js
or
sbb
adc
arpl
push
sub
and
jo
ret
xor
icebp
clc
sar
dec
mov
jno
mov
cmpb
jo
imul
pop
mov
push
sub
gs
mov
shlb
arpl
stos
hlt
in
mov
repz
dec
push
add
add
inc
repnz
adc
pop
pop
cld
inc
or
dec
mov
insl
roll
pop
mov
sub
out
scas
addb
add
inc
add
insl
xor
out
icebp
xchg
nop
sbb
sub
aas
and
stc
pop
sbb
add
mov
imul
rcl
mov
push
ja
xchg
fs
dec
addb
sbb
or
push
jbe
inc
jae
popa
test
add
fadds
inc
jo
sub
inc
dec
adc
add
pop
sbbl
mov
push
push
push
xor
sub
cmpsb
stos
fmuls
dec
add
scas
fstpt
pop
stos
jecxz
stos
sub
rcr
sub
sub
into
and
push
test
inc
add
stos
inc
xor
incb
ret
xor
loope
inc
lods
lret
sub
jmp
add
insl
ja
push
sub
dec
dec
jno
pop
add
add
rcrl
fldcw
inc
and
fmuls
rcrb
inc
int3
call
or
test
mov
sbb
mov
out
ss
push
jo
shrl
test
arpl
xor
xor
mov
jo
pop
loope
push
repnz
or
sub
jns
wrmsr
incl
inc
imul
sbb
sub
sub
outsl
push
dec
je
ficoml
mov
push
pop
loopne
dec
sarb
xchg
imul
clc
sub
mov
inc
pop
pop
dec
push
and
cmpsl
je
cmc
clc
inc
subb
push
inc
and
adc
jg
pop
mov
inc
mov
jbe
dec
pop
pop
dec
dec
clc
jmp
dec
nop
test
push
mov
xor
jg
fs
add
dec
add
inc
add
cmc
mov
fistps
or
add
mov
loope
stos
cli
dec
pop
bts
mov
inc
push
sub
shrl
pop
dec
mov
add
mov
test
adc
jne
xchg
xor
js
push
aaa
or
scas
ja
mov
adc
mov
mov
push
in
das
scas
out
add
push
add
push
mov
push
jmp
loopne
inc
out
push
push
push
jae
add
pop
cmpsl
jno
shlb
mov
or
pop
ds
aas
test
or
push
inc
mov
dec
xor
adc
das
mov
inc
dec
inc
jp
mov
push
rcrb
fs
adcb
and
push
hlt
adc
fisubrs
outsl
cbtw
dec
rcrl
add
and
icebp
inc
mov
push
add
les
fidivs
push
enter
or
shll
add
jg
or
push
pop
popa
xchg
pop
je
push
movsb
pcmpeqd
inc
xorl
movsl
pop
data16
xor
mov
mov
outsb
jae
sbb
push
inc
outsl
int
pop
outsb
xor
gs
cmp
jbe
push
fcomps
jp
gs
pop
push
cmpb
sub
das
or
in
push
pop
notb
dec
loopne
pushf
push
flds
dec
push
addr16
push
add
dec
pop
loop
out
jecxz
outsb
xchg
ss
std
jae
ret
add
push
dec
push
jnp
pop
inc
stos
sbb
adc
adc
hlt
cmp
xor
sub
push
out
push
push
pop
lods
pop
jmp
push
or
sub
movsl
adc
inc
add
adc
inc
jae
ret
cwtl
std
popf
cmp
add
insl
imul
cld
es
pop
sti
pop
xor
jge
xchg
xor
cmp
add
pop
ja
pop
mov
mov
push
fiadds
pop
loope
test
inc
loop
jne
mov
push
lods
push
mov
mov
xchg
arpl
dec
hlt
push
int
sahf
mov
leave
jp
inc
xor
mov
xor
std
and
mov
loope
push
jbe
insl
push
jae
mov
mov
dec
mov
out
jle
sti
lcall
fstl
movsl
out
fistl
div
xchg
fsubl
sbb
cmp
cmp
add
push
lds
fnstsw
ljmp
in
rclb
ret
jae
fdivrp
fndisi(8087
mov
sbb
add
jg
adc
cmp
incl
out
jns
loop
rolb
dec
lock
push
add
add
outsl
jbe
jo
push
xor
add
push
pushf
lds
cld
aas
mov
cs
sbb
lods
mov
ss
add
push
int
mov
cs
add
nop
insl
adc
push
in
jle
xchg
push
loope
lret
repnz
fwait
test
imul
dec
lods
pop
repnz
xchg
fbld
inc
outsb
xor
jnp
cmpsb
jle
dec
jb
or
push
lret
sub
ficomps
push
idivl
add
enter
fcomps
ffreep
loopne
das
sub
je
std
mov
or
filds
xor
scas
adc
out
cmp
int
push
add
push
fldcw
add
sahf
push
stos
pushf
mov
push
lock
inc
cwtl
pusha
xor
or
push
cmpsl
mov
addr16
fistpll
and
sbb
aas
or
loope
out
stos
loopne
or
fcomps
push
jmp
das
pushf
aam
xchg
jae
pop
repnz
mov
and
jae
and
sub
test
cmc
repnz
shll
mov
mov
in
push
xchg
jno
sub
dec
sbb
mov
or
cld
nop
addr16
mov
ds
add
sbb
xchg
stos
add
loop
jp
cld
iret
loope
adc
jns
pushf
lret
bound
je
mov
jns
sbb
inc
inc
xor
or
mov
push
jg
pushl
in
or
rclb
pop
add
shl
jb
push
orl
and
lahf
xlat
daa
cmp
xor
shrl
mov
pop
sbb
clc
mov
sbb
icebp
xchg
mov
fcompl
sub
mov
pushf
push
push
dec
xor
lahf
jmp
inc
sbb
out
push
mov
fstps
outsb
shlb
dec
add
sub
inc
enter
add
clc
push
xchg
popf
push
pop
shl
in
pop
call
decl
test
cld
sub
add
xor
mov
push
daa
dec
pop
cmp
das
push
add
pop
cmp
jg
mov
mov
outsb
xchg
js
inc
sarl
inc
push
xor
fadd
hlt
clc
mov
jg
dec
repz
cwtl
fldl
shll
lea
push
xchg
cli
imul
hlt
xchg
xor
mov
mov
mov
push
push
sub
pop
sbb
add
jo
jo
pusha
add
inc
add
jle
push
fisubrl
icebp
pop
mov
mov
and
pop
pop
mov
xchg
pop
je
shl
repnz
sti
mov
jae
jns
sbb
das
in
add
xor
mov
out
lock
pmullw
cs
popa
dec
and
out
cmp
and
xchg
mov
lods
push
push
mov
lret
add
loope
mov
pop
push
add
and
outsl
test
push
lods
fisubrs
jecxz
xchg
cmp
jnp
cmp
das
ret
push
pop
mov
adc
into
fstl
push
int
sbb
push
mov
lock
jge
jns
and
frstor
lods
push
js
add
pushf
push
pop
idivb
jae
sbb
and
insb
xlat
pop
jl
ja
mov
mov
mov
xchg
fldl
adc
fpatan
call
xchg
out
scas
test
mov
lret
jle
pushf
jnp
or
add
loopne
sub
dec
jbe
dec
jmp
inc
inc
ss
out
pop
jnp
add
push
std
in
jnp
std
jp
sbb
adc
ljmp
js
mov
dec
setns
hlt
pop
mov
add
or
je
xor
pop
in
fdivr
push
push
mov
pop
js
js
mov
pop
and
clc
int3
cltd
inc
fmuls
lcall
mov
xchg
fwait
mov
cmc
pop
divl
mov
sbb
out
pop
ljmp
out
lahf
cmpb
jmp
cld
mov
ja
xchg
mov
aad
out
in
lahf
push
adc
sub
cli
mov
dec
mov
sbb
cmp
add
fneni(8087
fildll
sub
push
mov
and
jge
dec
dec
call
mov
pop
das
out
repnz
rclb
cmp
lea
add
push
sub
add
inc
add
lret
and
push
inc
js
pop
mov
sub
out
jecxz
and
add
pop
stos
xchg
pop
in
mov
mov
mov
mov
ljmp
mov
cwtl
mov
pop
rcrb
out
cmp
idivb
jg
xchg
test
add
cmpsl
mov
je
xor
xor
sbb
add
dec
mov
sub
mov
cmp
xlat
enter
ret
aas
xchg
mov
add
mov
insl
add
jecxz
addb
out
cmp
div
jb
jno
mov
outsb
hlt
scas
push
push
js
ds
cs
fldl
xchg
xchg
loope
arpl
jge
pop
sbb
test
aad
movq
push
bnd
loop
lret
push
and
or
bound
fisttpll
ljmp
out
mov
arpl
mov
pop
mov
xlat
cli
mull
xchg
sbb
jne
out
push
cmp
mov
mov
pop
add
push
or
add
and
test
inc
mov
adc
mov
and
sbb
xor
pop
pop
or
add
inc
int
mov
pop
pushl
lcall
cld
mov
int
jb
pop
add
sbb
cmp
rorb
lcall
pusha
rcll
jo
in
je
xchg
sub
pusha
out
aaa
mov
and
rcr
push
ljmp
leave
test
movsl
xor
outsl
mov
sbb
add
pop
sbb
fst
test
sub
push
clc
sbb
inc
cld
pop
dec
and
pop
lret
push
mov
out
daa
iret
ljmp
or
sbb
dec
jbe
lea
fldenv
cld
mov
das
xorl
loopne
push
loop
repz
or
scas
cwtl
icebp
inc
pop
pop
mull
mov
or
lea
xor
cmpsl
icebp
jo
lods
out
fnstsw
repnz
arpl
out
mov
jmp
outsb
mov
in
fistpl
or
add
fdivrl
cmpsb
cmp
nop
mov
aas
ret
pop
les
push
xor
ja
add
sbb
subb
add
fdivrl
lahf
sub
mov
mov
push
or
jno
jp
popf
or
jp
shl
push
or
sub
repnz
sbb
std
stos
inc
es
inc
dec
andb
push
xchg
cmp
jg
xchg
fs
mov
js
imul
fisubl
subb
lock
movsl
and
push
mov
loopne
xor
and
lock
outsl
pop
cmp
jb
push
push
xchg
scas
cld
outsl
jno
fildl
xchg
mov
sbb
popa
adc
inc
pop
in
ficoms
pop
cld
dec
in
addl
mov
jbe
push
push
and
jo
and
fmul
loope
fnstcw
push
cld
xchg
pop
fs
dec
mov
cli
add
pop
cwtl
fisubrl
inc
cmpsb
pusha
fnstenv
lock
pop
pop
imul
mov
scas
int3
inc
dec
lahf
outsb
mov
dec
and
mov
std
in
adc
sbb
adc
out
fidivl
lret
jg
cwtl
enter
je,pt
das
cld
out
pop
mov
into
fwait
int
ja
hlt
inc
xchg
sahf
aad
movsl
xor
cmpsl
xor
out
incl
adc
dec
or
pop
push
jae
jge
jg
jo
mov
cmp
cmc
pop
inc
inc
adc
ljmp
xor
xchg
mov
xchg
decl
cmp
xor
jns
sti
inc
out
or
or
dec
pop
pop
bound
mov
xor
xlat
leave
pop
sbb
sbb
iret
fstpt
out
sbb
shll
iret
cltd
shlb
mov
mov
dec
inc
mov
sbb
ret
pop
in
mov
testl
ja
jae
fwait
cmp
stos
scas
outsl
lret
enter
dec
add
out
pusha
cmc
decl
sub
mov
int
loope
daa
push
inc
outsl
out
stc
shlb
sbb
sbb
cmpsb
sbb
or
add
lahf
call
pop
mov
jl
mov
lcall
fcoml
inc
jl
push
jne
rol
cmp
pusha
lock
cmpsl
xchg
push
push
icebp
pop
add
jo
mov
dec
cld
or
xor
and
scas
rolb
lods
mov
lds
and
sbb
inc
out
dec
mov
popf
push
sbb
mov
adc
lock
scas
push
cmp
rcrl
shll
dec
mov
push
jg
mov
add
insl
cld
pop
adc
clc
jg
pop
fucom
aad
hlt
lods
loop
sub
dec
aaa
jb
pop
setae
test
out
aam
insl
mov
iret
fldcw
sbb
scas
mov
inc
sahf
push
adc
shl
fimuls
stos
add
cli
imul
movb
ret
sar
fdivl
jns
gs
addr16
decl
fildl
mov
xchg
inc
xchg
xor
sub
test
std
lahf
les
xchg
mov
fnstcw
insl
cli
push
out
dec
fs
iret
insl
cmp
jg
out
jg
add
pusha
xlat
xor
add
sti
in
andl
mov
fnsave
iret
sbb
or
xchg
pop
rep
das
cld
xchg
push
ficoml
fidivs
aad
fistpl
jg
cs
sbb
es
cmp
inc
out
jnp
jo
out
pop
fadd
pop
clc
xor
adc
mov
jecxz
add
jg
xor
ljmp
xor
jecxz
jae
add
std
call
mov
lock
mov
std
xchg
pusha
push
xor
sti
out
or
and
popa
sbb
adc
aad
fdivrl
fisubs
pop
jne
adc
das
mov
shl
push
jg
pop
fiaddl
lret
mov
test
or
test
aad
push
ljmp
stc
jle
mov
push
lock
out
jae
mov
mov
lods
scas
jns
bound
mov
bound
idivb
movsl
inc
jne
addr16
push
sub
stc
push
dec
xor
outsl
cld
rcl
rolb
and
jnp
push
fimuls
std
cmp
maskmovq
divl
in
pop
test
and
mov
jmp
repz
popa
dec
stos
daa
sti
cmp
adc
dec
jo
lahf
fiadds
ja
mov
add
std
mov
mov
cld
fxch
subl
cwtl
mov
std
addr16
sahf
xor
loop
lods
jnp
loope
sti
test
or
cmp
xor
jle
mov
dec
inc
dec
fsubs
rclb
sbb
fsts
lret
out
push
sbb
test
imul
add
jecxz
lock
daa
sub
jns
adc
mov
loopne
sbb
aam
in
icebp
into
aaa
clc
push
pop
inc
stc
xchg
jle
pushf
out
popa
ljmp
pop
outsb
icebp
add
jne
push
fnstcw
jne
add
mov
push
push
fists
xchg
xor
mov
gs
sahf
fnstenv
orb
subl
cmp
dec
int3
mov
inc
sbb
frstor
sbb
push
gs
cmp
mov
cmc
fldt
xor
inc
dec
out
xchg
ds
cld
out
loope
jecxz
and
pushf
mov
and
mov
ds
stc
mov
mov
and
sbb
nop
xchg
dec
mov
or
sbb
mov
pop
fsubr
subb
ret
cmp
xchg
imul
cmp
mov
xor
repnz
or
dec
cmp
cmpsb
or
pop
shll
xchg
out
lods
movsb
add
decl
cmpsb
cmp
ret
cmc
cltd
sub
loop
stos
mov
mov
mov
pushf
loop
lret
dec
stos
push
pop
lcall
decl
mov
aam
xlat
jle
mov
icebp
inc
cmp
outsl
mov
scas
push
adc
pusha
adc
pop
pop
or
xchg
movl
push
dec
or
imulb
fildll
mul
nop
stos
add
sub
and
xchg
sbb
rorl
mov
jbe
shlb
inc
mov
jae
lret
mov
mov
lret
or
fcmovbe
inc
dec
inc
cmp
xchg
push
aas
insb
add
hlt
sub
rcrb
lret
rorl
sarl
jg
scas
add
push
inc
stc
in
fsubrs
mov
ffreep
and
popf
ficoms
cmp
ffreep
jne
adc
cmp
ret
jp
sbb
push
inc
ds
mov
movsl
and
cltd
mov
filds
mov
push
cmpsl
adc
add
aaa
jle
aas
in
popf
xchg
inc
pop
ret
adc
cld
push
clc
or
lahf
dec
cmp
jb
les
dec
movsl
xchg
and
int
xor
inc
aad
fdivrl
js
fbstp
mov
xchg
cmp
add
xor
in
mov
in
cmc
out
inc
pushl
mov
insl
lret
mov
hlt
pop
pushl
cmp
xor
iret
and
push
test
mov
and
outsb
add
adc
mov
dec
and
push
inc
jmp
les
xor
mov
sbb
mov
push
sub
xchg
and
outsb
or
pop
inc
js
popa
push
and
jg,pt
das
cld
into
push
inc
mov
in
inc
decl
xor
ja
xor
shr
mov
mov
add
inc
addl
xchg
dec
insb
cmc
scas
push
push
ficoms
cld
xchg
test
test
std
sub
sahf
or
inc
jbe
sbb
sub
aas
daa
or
mov
push
int
clc
fistl
out
add
cmpl
mov
adc
dec
jg
sbb
cmp
inc
mov
push
nop
cmp
rol
dec
dec
jne
mov
and
mov
clc
pop
push
dec
push
imul
icebp
mov
inc
adc
dec
cld
ds
mov
jl
lods
cltd
dec
inc
sbb
fwait
sti
aas
add
sub
or
inc
pop
out
mov
pop
push
jle
cli
dec
xchg
lahf
fsubrl
mov
sbb
xchg
cmpsl
stc
jle
xor
sub
addr16
aaa
enter
and
push
sbb
dec
mov
fstp
lahf
or
xor
sbb
xchg
ljmp
mov
mov
push
mov
addl
cmpsb
pop
jnp
pop
add
fwait
bnd
addl
pop
stos
adc
lahf
sti
xchg
loop
push
sarl
jp
adc
xor
and
mov
pop
fildll
cmc
xchg
fs
push
jo
rolb
orl
mov
sbb
cltd
lock
dec
nop
rcrb
or
ja
cli
xchg
cmp
jg
sub
mov
mov
sbb
dec
dec
mov
leave
cld
or
add
fbld
pop
repnz
mov
mov
pop
movsb
shll
cmp
push
mov
xchg
ja
fbstp
and
lds
xchg
int
fwait
xor
push
dec
gs
pop
incb
lret
gs
out
xor
sub
aas
add
iret
pop
sbb
cld
ja
out
dec
cmp
ljmp
cltd
js
lock
fyl2x
into
or
jge
xchg
and
cmp
js
push
jecxz
mov
jl
pop
lock
mov
aas
cmpsb
mov
dec
mov
out
cmpsb
cmp
mov
push
inc
mov
lahf
inc
mov
mov
push
pop
mov
sbb
rcl
push
mov
cmp
scas
clc
dec
add
add
nop
and
aas
add
pop
mulb
mov
sti
aam
xchg
popa
das
dec
sub
out
push
and
sbb
icebp
rcl
push
mov
mov
sbb
push
sbb
sbb
je
outsl
incl
das
cld
cwtl
push
mov
out
mov
push
loopne
jg
jae
dec
cwtl
jl
fwait
nop
add
pop
loopne
addb
stos
cmp
in
jg
pop
scas
and
ret
rcr
xlat
xor
js
dec
jg
cmpsl
out
jns
roll
mov
add
fdivrp
addr16
cmpsl
pop
add
lcall
sarl
pop
or
pop
dec
arpl
mov
cmp
popf
std
or
jge
inc
push
adc
push
frndint
pushl
jbe
mov
enter
mov
or
or
mov
rolb
ljmp
stos
popf
push
xchg
mov
fimuls
push
cs
mov
arpl
dec
pop
jns
ja
gs
adc
xchg
xor
pusha
pop
outsl
pusha
sbb
jl
mov
pushf
dec
jl
or
rclb
sub
sub
jnp
popf
aam
push
lcall
xlat
xchg
adc
sbb
js
push
jg
rcrl
xchg
cmc
pop
fdivrs
add
aaa
aam
push
push
cmp
adc
sub
mov
sbb
sub
andl
lods
mov
loop
push
ja
mov
inc
mov
dec
mov
idivb
mov
mov
pop
data16
iret
jne
and
pop
mov
xchg
popa
mov
pop
icebp
jg
mov
gs
jge
mov
jno
mov
hlt
cmc
sub
scas
insl
mov
cli
add
addb
push
jp
mov
add
push
outsl
pop
jmp
adc
aad
out
lods
mov
hlt
inc
jge
cmp
out
and
pop
insl
sub
aad
lods
iret
adc
mov
xchg
clc
decl
mov
adc
xchg
lods
fwait
xchg
dec
loopne
and
xor
pop
push
push
push
stos
adc
adc
in
xchg
sbb
hlt
lods
jg
inc
inc
repnz
jg
outsl
mov
mov
stos
ret
out
mov
in
or
in
mov
mov
lea
mov
inc
std
sarl
xlat
movsb
mov
inc
arpl
and
incl
xor
xor
ret
jo
xchg
in
sub
adc
scas
inc
arpl
fisttpll
lods
push
jecxz
add
jmp
sbb
das
jg
loopne
adc
packssdw
sbb
cmp
incl
push
or
pusha
pop
outsb
xchg
orb
jp
add
dec
shrl
push
mov
or
popf
mov
cmovo
push
aas
adc
jl
rorb
push
outsl
xor
scas
mov
fidivrs
jmp
dec
mov
inc
mov
es
sbb
sub
out
mov
pushf
sbb
cmp
pop
pop
fisubl
loope
clc
int
add
adc
and
in
xchg
mov
fistps
mov
mov
testb
xchg
call
dec
addr16
movsb
frstor
push
adc
xchg
dec
lods
push
ljmp
ss
sbb
push
sub
repnz
inc
dec
pop
aas
add
sbb
mov
stc
fists
rcrb
mov
insl
sbbl
fstl
mull
sti
xchg
sahf
test
in
dec
cwtl
or
icebp
cli
fcoml
mov
or
jg
test
cmpsb
ds
xchg
jns
clc
mov
clc
lock
and
jecxz
add
lret
mov
out
xchg
loopne
stos
fnsave
in
xchg
add
inc
mov
xor
mov
cmp
dec
clc
mov
lock
xor
sub
add
outsb
gs
ljmp
mov
cli
ljmp
popa
xchg
psubq
popl
sub
push
xor
adc
push
add
mov
sub
test
jnp
cmp
push
incl
jecxz
sar
popf
out
mov
jns
adc
or
rol
and
jae
addl
mov
sbb
push
mov
xchg
decl
mov
fsts
mov
mov
mov
mov
pop
sbb
dec
fnstenv
lcall
sub
shll
bound
int
loop
andps
pushl
in
ret
test
or
dec
mov
cli
movsl
xchg
or
lcall
pop
or
cli
bound
lret
pusha
dec
push
in
pop
push
sbb
rcrb
push
call
pop
inc
sar
push
dec
pop
sub
dec
je
dec
outsl
cmp
std
inc
insl
outsl
jne
notl
mov
pop
testl
adc
loop
fnstcw
cld
lahf
mov
jmp
and
imul
xchg
ret
lahf
call
or
or
xchg
sub
xchg
mov
inc
adc
mov
cmp
lcall
mov
inc
push
or
popa
pop
cmp
inc
out
sbb
mov
or
rcrl
outsb
cmc
jge
cld
aas
push
mov
and
push
test
dec
pop
add
cmp
dec
fnstsw
add
dec
in
movsb
jecxz
lds
adc
jno
aas
mov
adc
mov
pop
outsl
sub
add
mul
aad
les
cmc
in
cs
mov
sbb
std
mov
lahf
sbb
adc
negl
xor
aas
outsb
fsts
xor
mov
mov
ja
mov
fwait
iret
jecxz
pop
mov
sahf
mov
int
jo
push
aas
push
sarl
fcos
andb
xor
shll
imul
out
or
jle
ds
dec
loope
imul
ret
pusha
aaa
fs
mov
in
dec
out
filds
mov
sub
sbb
mov
xchg
testb
fmuls
lds
cld
push
sahf
cmp
inc
shr
mov
sub
clc
add
jbe
push
arpl
xlat
fcomip
ljmp
or
cs
pop
jge
clc
incl
inc
sarb
mov
jne
xchg
stos
fnstsw
jmp
jg
roll
dec
jmp
xchg
or
arpl
mov
repz
xchg
xchg
out
mov
out
dec
jo
clc
mov
mov
rol
ljmp
stc
aam
aam
mov
sub
add
aam
xorb
daa
inc
in
ret
pushf
js
orl
cmp
insl
cmc
mov
sahf
and
jle
xchg
std
push
fnstenv
in
sbb
popl
adc
lret
adc
inc
roll
pusha
or
cmp
jo
push
jns
mov
adc
xor
loopne
xchg
daa
push
inc
adc
inc
outsl
ja
jbe
shrl
int3
mov
in
lret
sti
lock
out
lods
fs
dec
add
sub
testl
sbb
dec
or
and
mov
sub
pushl
in
xchg
faddl
out
loope
lcall
xlat
popf
cmpsb
xchg
dec
fldcw
mov
int3
mov
daa
xchg
rclb
push
push
inc
jb
iret
xchg
adc
leave
add
or
int
mov
loope
mov
rcrb
xor
xchg
jmp
add
addr16
in
repnz
mov
les
enter
jbe
std
fbld
loope
rclb
mov
movsl
incb
add
cmp
in
and
icebp
inc
aad
sbb
outsb
roll
jbe
jge
sbb
arpl
imul
ret
fucomip
fnsave
or
std
insl
dec
inc
test
scas
stc
cmpb
cmc
out
dec
dec
das
jl
scas
or
out
hlt
mov
add
daa
incl
addr16
arpl
push
and
hlt
jns
out
sbb
mov
xor
popa
aas
pop
cld
sub
sti
sbb
pop
dec
or
lods
sti
testl
frstor
mov
incl
xlat
lods
clc
push
inc
push
mov
push
loope
xchg
inc
stos
mov
movsl
ret
inc
jg
pop
sub
xchg
xchg
fwait
add
mov
adc
sbb
push
loopne
pop
daa
xlat
scas
movb
aam
popa
jg
mov
aas
loop
andb
inc
adc
dec
pop
data16
jns
sbb
int
pop
adc
jg
xor
inc
aas
pop
arpl
mov
xor
into
or
outsl
cmp
fisttps
jbe
pop
jge
cmp
sbb
mov
aas
mov
fcoms
inc
clc
outsl
aam
aaa
mov
adc
lods
inc
std
out
add
aam
or
push
jbe
out
jae
xchg
xor
into
std
out
dec
mov
cmc
inc
shrl
roll
and
or
jno
xchg
popf
push
mov
aaa
rol
fcomps
fiadds
push
xor
xor
xchg
loope
push
bnd
inc
push
lret
stc
es
aas
ret
sahf
pop
loop
jmp
andb
add
rcl
mov
dec
in
in
push
sub
dec
fs
sub
dec
inc
jp
bnd
dec
or
jae
mov
dec
adc
ret
lahf
pop
xchg
lds
insl
mov
mov
stos
repz
xor
mov
fbld
mov
sahf
cmp
loopne
sub
sti
in
inc
out
outsb
sbb
mov
inc
adc
loopne
xor
cmp
cld
or
out
and
and
cmp
fildl
lcall
mov
or
cmp
jle
fst
adc
jp
mov
add
icebp
jg
cld
lods
nop
dec
mov
jp
arpl
inc
cmpsl
xchg
push
lret
scas
ljmp
arpl
jo
das
ret
fisttps
sbb
cmp
dec
out
outsl
jg
dec
je
and
lea
push
aad
popa
mov
inc
add
mov
xchg
jg
mov
inc
daa
test
push
and
dec
inc
fbld
xorl
pop
fdivp
and
outsl
sub
les
std
icebp
jg
xor
stos
dec
fnstsw
inc
incl
cld
dec
xlat
mov
inc
sub
insb
cmp
popf
cmpsb
mov
in
add
ret
and
std
subl
lea
or
xchg
out
rol
jmp
xor
adcl
repz
pop
std
shr
mov
xchg
sbb
and
dec
movsb
cmp
std
jae
jg
sub
dec
inc
repnz
dec
idivl
push
adc
sbb
jecxz
aad
sub
push
icebp
inc
loopne
pop
rcr
xor
fstps
negb
aas
lods
push
gs
xchg
lock
inc
incl
mov
nop
xchg
cld
sbb
jmp
fwait
out
inc
dec
xchg
pop
dec
xlat
dec
jbe
fisubrl
and
lock
mov
cmpsb
push
shll
sbb
call
test
mov
jle
inc
outsl
jp
cli
mov
jno
xchg
faddl
push
roll
mov
testl
pop
lcall
in
add
lock
mov
inc
aas
ja
add
ja
jg
out
pop
dec
sub
mov
outsl
cmp
iret
in
neg
lret
and
sbb
iret
jle
pop
cmp
pushl
dec
in
mov
inc
lcall
mov
shrl
into
inc
repnz
pop
adc
inc
inc
and
dec
js
add
aam
arpl
movsl
sub
cli
and
lods
sahf
xchg
ret
int
sbbl
repnz
add
jbe
inc
in
ljmp
mov
lcall
sarl
fwait
cld
sbb
dec
movsl
push
dec
pop
testl
call
sub
add
jnp
jecxz
je
push
mov
sub
out
fmull
dec
test
mov
inc
clc
decl
test
cwtl
jg
cld
mov
pop
sub
cltd
jbe
mov
clc
and
add
mov
loopne
jo
fld
ret
out
sbb
arpl
cmp
jg
cmpsb
mov
pop
xchg
sub
stc
outsl
dec
inc
scas
popa
or
xlat
xor
das
pop
push
cmp
sub
xchg
daa
push
mull
in
ljmp
sar
aas
in
xchg
xchg
dec
pop
popa
push
addr16
aam
cltd
out
inc
clc
xchg
adc
lahf
test
testl
xchg
push
insb
jae
xchg
push
std
jae
add
add
inc
push
scas
xchg
test
iret
jmp
jge
stos
ja
push
inc
dec
pop
outsl
adc
ficoml
fwait
out
enter
lret
stos
or
xchg
or
cmpsb
lods
jo
dec
test
sub
clc
clc
push
fildl
imul
jo
pop
or
rclb
mov
decb
test
add
mov
lods
fnstsw
cmp
cmp
sub
ja
inc
cli
add
fists
fmuls
mov
push
or
gs
pop
insl
out
pop
or
into
adc
jae
dec
adc
xchg
jmp
sahf
pop
clc
pop
fcoml
cmpsb
push
inc
dec
fstp
stos
insb
fs
out
pushf
cmpl
adc
lahf
adc
cld
jg
inc
push
hlt
pop
cmp
cmp
adc
and
lea
jge
mov
cmpsl
sarb
test
jl
stos
bound
and
cmp
inc
frstor
mov
ret
xchg
mov
push
mov
mov
and
iret
sti
insb
in
pop
outsl
pop
mov
fwait
mov
ja
movups
cmp
inc
jg
iret
or
jno
outsl
push
sbb
inc
lret
pop
pop
loop
stos
sub
mov
xchg
sub
push
out
jae
js
lds
das
ret
xchg
sub
lock
xchg
cs
cmpsb
popa
pop
add
loop
pop
adc
aam
or
pop
fcompl
dec
mov
sub
imul
insb
xchg
nop
adc
lahf
mov
test
and
inc
add
aad
sti
ja
das
mov
lret
mov
cmp
jno
notb
pop
pop
mov
out
add
and
out
push
cmc
push
dec
fs
jb
fnsave
xor
pop
leave
pop
jecxz
inc
outsl
jns
push
jae
ja
mov
mov
jl
out
pop
fistpl
xchg
mov
fdivrp
lcall
and
lcall
add
inc
dec
imul
xchg
or
sarb
insl
jno
jae
pop
add
xor
cs
testl
movsl
lock
es
or
jbe
fstl
dec
mov
add
iret
movsl
cmp
and
aas
pop
sub
jg
lock
ret
pushf
push
je
pop
xor
rcr
lea
cmp
outsb
hlt
jne
mov
addr16
mov
pop
loopne
repz
mov
movsl
sahf
ss
leave
jns
sarb
cmp
popf
mov
pop
lcall
jns
adc
jmp
mov
xchg
pop
inc
lcall
jne
movsl
pushl
add
and
xchg
pop
lcall
lahf
outsl
sbb
sbb
sbb
ffreep
call
add
sbb
xchg
aas
sar
or
loope,pn
xor
mov
in
add
ss
push
cmc
push
aas
adc
push
jno
dec
pusha
xchg
icebp
scas
cmpsl
movsb
cmc
sahf
jbe
and
xor
clc
pop
mov
das
fs
jg
ds
adc
aas
mov
popf
pushf
jecxz
hlt
xchg
ret
lahf
adc
mov
cli
push
dec
jo
ror
fwait
cmpsl
mov
das
fs
mov
test
test
addr16
mov
repz
cmp
inc
fs
ds
in
clc
ror
adc
and
sub
xor
fwait
jo
pop
pop
out
inc
cmp
sbb
inc
fnsave
daa
shll
sbb
fwait
jo
xchg
cmp
fwait
test
fcompl
cs
jg
fidivs
outsb
xchg
mov
mov
pop
fisubs
clc
dec
push
mov
cs
sbb
pop
jp
push
test
icebp
or
insl
and
fisubs
lock
out
or
popa
jge
jb
mov
add
jecxz
loopne
sarb
xor
idiv
loop
inc
movsb
les
ss
loopne
sub
sub
mov
dec
add
lret
jg
imul
enter
jge
cli
mov
test
cmp
stos
mov
cli
es
hlt
push
test
mov
in
and
pusha
jg
or
mov
inc
iret
jle
xchg
mov
pop
mov
xchg
sahf
jo
dec
pushl
dec
orl
or
faddl
or
cmp
imul
adc
jnp
inc
push
and
gs
popf
es
mov
mov
mov
pusha
loopne
jge
out
sub
gs
sbb
out
mov
inc
push
popa
jg
add
sub
xchg
movsb
lcall
cld
jae
jo
or
adcb
xchg
sub
fsubr
jmp
cmp
mov
jmp
xchg
std
dec
icebp
out
mov
pop
out
adc
xor
lock
jo
cmp
lret
mov
pop
int
adc
mov
sar
aas
jmp
push
shrb
and
mov
div
push
sahf
scas
inc
cmp
xchg
outsl
imul
sbb
or
sub
icebp
sarl
jno
outsb
js
stos
les
xchg
jne
aam
and
and
cmp
mov
sti
popa
pop
pop
out
test
mov
pop
pushl
jge
adc
push
ja
lods
fwait
mov
cmpb
fcoml
ffreep
je
clc
out
dec
lods
mov
mov
mov
inc
insb
imul
xor
mov
ljmp
roll
cmc
dec
rorb
sub
pop
jmp
add
dec
movsl
and
add
jge
sbb
fcmove
sarl
cmp
xchg
scas
iret
jmp
bound
cmpsb
lock
lock
mov
stos
dec
pop
in
je
out
dec
cmc
jo
mov
cmp
sub
aad
lahf
shrl
add
loopne
mov
xor
sub
mov
mov
int3
ljmp
mov
fsubrs
add
pop
clc
cmp
movsl
pushf
mov
cmp
andl
ljmp
jbe
imul
adc
arpl
mov
arpl
push
fwait
mov
add
jo
bound
xor
fwait
mov
std
subl
scas
add
out
push
cmovb
int3
pop
mov
cli
in
dec
pop
jg
incl
jb
pop
out
test
push
imul
cmp
pop
pop
mov
dec
mov
call
ja
hlt
aas
jo
xor
push
dec
sbb
sti
pop
divl
mov
aaa
xor
sub
sub
nop
and
popf
add
jg
inc
sbb
mov
dec
cld
xor
pushl
push
fucomi
push
push
std
lock
js
fldcw
push
and
mov
xor
test
cmp
sbb
sub
iret
cmc
sbbb
subl
mov
pop
sti
into
data16
incl
mov
aas
and
movsb
mov
mov
ja
pop
mov
or
cmp
lcall
xchg
and
and
loop
fstpt
pop
mov
fbstp
ret
push
or
loope
adc
inc
imul
mov
cmpsl
aad
mov
into
shl
jl
cmp
out
adc
fidivrs
jno
repnz
lret
dec
cld
mov
stos
adc
mov
mov
adc
cmpsb
hlt
flds
mov
js
mov
xchg
sarl
out
sar
cld
aaa
stc
pop
add
test
dec
or
xchg
and
add
test
movsb
jb
mov
sbb
lret
mov
out
scas
mov
sbb
loopne
es
adc
test
int3
out
cld
pop
divl
repnz
jg
adc
lods
push
mov
insb
lahf
inc
addb
sub
fnstcw
clc
push
cmpsl
shrl
xor
aaa
jle
jg
test
xor
loopne
aas
std
iret
lods
jo
mov
or
or
or
lds
lea
cmpsl
lcall
fnstsw
ss
addr16
inc
ret
xchg
adc
sti
pop
lea
sbb
mov
movsb
jmp
mov
pop
stc
test
jl
adc
fisubl
sarb
ja
push
inc
adc
test
cmpsb
pushf
sub
jmp
les
andb
mov
dec
loope
add
sbb
add
pop
call
pop
mov
lds
lret
mov
outsb
mov
mov
lods
andb
mov
and
mov
shlb
scas
sub
add
cmpsl
mov
fistps
testb
pusha
mov
loopne
sbb
xchg
cmc
lahf
jmp
cmpsb
movsl
subl
call
or
jp
inc
popf
fnstsw
pop
call
inc
imul
sbb
call
pop
std
add
cmpsb
xchg
mov
into
xor
xchg
add
sti
fcmovnu
sub
jle
push
ret
arpl
lods
lcall
inc
xor
adcb
jge
sti
imulb
movsl
or
mov
rolb
in
cmp
jae
jg
jmp
mov
cmp
mov
jge
ja
shl
push
insl
cmp
mov
adc
pop
push
pop
add
lods
pop
dec
mov
push
push
sub
pusha
icebp
daa
insb
mov
xchg
dec
push
and
jg
repz
leave
pop
in
je
pop
aas
xchg
icebp
xchg
stos
scas
inc
leave
xor
ds
ss
cmp
adc
push
xchg
dec
lods
sar
clc
cli
scas
push
xchg
aam
lods
aam
das
or
push
lds
mov
mov
in
out
std
xor
rcrb
pop
add
mov
popf
mov
out
adc
sbb
fists
jne
shrb
icebp
sbb
icebp
xor
pop
popl
jg
decl
rcl
inc
fstp
lahf
jnp
test
sbb
xchg
sub
ja
sbb
xor
mov
add
stos
push
jne
pop
loope
lret
inc
arpl
mov
movsb
ret
stos
out
lcall
inc
and
sbb
or
xor
xor
add
aas
mov
lret
mov
mov
mov
or
xchg
jbe
stos
mov
adc
lret
dec
ja
cli
ja
shrb
and
cwtl
pop
add
in
pop
cs
sbb
aad
pop
sub
pop
call
inc
cmp
cmc
cmp
add
ja
sbb
jmp
jg
sbb
xchg
push
mov
sbb
lods
aas
mov
filds
inc
repz
cmp
inc
and
test
aad
cmp
cmpsl
inc
int3
hlt
adc
jne
adc
mov
sahf
jl
mov
mov
fs
mov
mov
lahf
lock
cmp
push
pop
mov
rcl
inc
rorl
pushl
mov
je
jecxz
incl
std
repnz
lods
insb
fdivrl
mov
test
roll
imul
sti
jno
add
adc
lods
pop
push
mov
xchg
icebp
or
adc
dec
je
sub
pop
or
call
mov
enter
add
in
dec
jecxz
daa
hlt
pop
jecxz
ss
test
sbb
test
mov
cmp
rcr
pop
cmp
and
fwait
jne
cltd
xchg
dec
fdiv
hlt
inc
add
loopne
icebp
push
popf
std
out
and
aas
or
sub
pop
rclb
orb
mov
xchg
dec
pop
cmpsb
mov
dec
push
pusha
jo
pop
cmp
or
inc
pushl
inc
test
repnz
insl
adcl
jle
sub
lret
fsubr
jecxz
js
dec
iret
push
outsl
add
icebp
xchg
out
int3
fldcw
adc
fbstp
mov
mov
int
add
loop
das
aad
mov
xor
out
mov
scas
or
and
lods
pop
mov
add
fcoml
xchg
out
adc
cli
out
mov
int
test
inc
inc
jns
sarb
push
leave
pop
sub
in
sbb
loopne
pop
adc
sbb
incl
cld
ret
add
sbb
mov
or
sub
jbe
add
lods
call
pop
iret
aas
imul
inc
les
fldt
inc
and
pop
ret
pop
sbb
push
loopne
cli
pop
jae
data16
inc
or
out
xchg
mov
lcall
push
mov
imulb
ds
jge
jle
add
repz
loop
add
cltd
fistl
cmp
aas
dec
inc
ret
loop
add
pop
fsubl
xchg
fisubs
stos
xor
add
adc
mov
roll
add
adc
xor
pop
js
jg
jg
push
xchg
jnp
cmp
jg
clc
jne
jl
in
xorl
sub
imul
and
and
inc
xor
in
sti
data16
ret
out
push
out
mov
dec
sub
adc
rorl
mov
fists
ja
faddl
movsl
sbb
sub
add
pop
js
and
adcb
jns
jg
jl
push
jns
pop
mov
out
mov
push
add
lret
jecxz
fidivrl
paddb
cmp
test
dec
iret
test
pinsrw
out
push
or
and
and
mov
lcall
xchg
enter
dec
add
mov
dec
mov
adc
pop
mov
shlb
adc
das
push
cmp
roll
imul
sahf
jmp
mov
addr16
shll
ljmp
add
repnz
push
xor
xlat
mov
sub
inc
jno
in
loopne
loop
out
sbb
fsubl
mov
out
mov
data16
jns
out
in
fwait
push
xchg
rorl
jae
lods
mov
xchg
iret
cmpsl
sbb
or
outsl
push
mov
gs
sarl
xchg
mov
dec
idivl
clc
pop
xchg
xchg
mov
cmp
out
ljmp
xchg
inc
push
add
stos
push
std
ss
je
mov
test
movsb
mov
inc
stc
jbe
jg
sbb
adc
push
aad
jl
fdivs
sub
test
xchg
cmc
int
aas
mov
cmp
insb
enter
and
ret
outsb
xchg
ret
int
rcrl
inc
fstpt
into
hlt
out
loop
das
pop
push
sbb
jp
dec
mov
mov
cli
fs
cld
push
in
adc
mov
repz
cs
pusha
pop
dec
popa
inc
cwtl
les
push
pop
xchg
decl
sahf
pop
jg
lds
std
stc
popa
rdpmc
xchg
inc
repnz
loope
out
xchg
mov
pop
sub
in
sub
adc
loope
fcompl
stc
aaa
push
mov
jmp
add
or
outsl
icebp
negl
jne
xchg
or
add
pop
push
jmp
push
xchg
jge
ret
inc
add
mov
cli
int3
icebp
int
add
test
jmp
icebp
cmp
pop
and
in
push
outsl
or
push
mov
and
aam
add
lods
pop
xor
fcos
mov
js
mov
mov
or
add
fpatan
xor
pop
xchg
add
jp
lea
sub
das
sti
lcall
adc
scas
push
or
ret
ljmp
fsts
push
shlb
add
pop
pop
loope
and
out
idivl
sti
mov
xorl
pop
inc
ljmp
jg
mov
scas
aaa
mov
subl
sub
fs
mov
js
mov
push
out
or
cmpsb
loopne
sar
xchg
lods
or
int3
mov
adc
stos
sbb
mov
xchg
sbb
cmc
iret
jecxz
mov
stc
fcoml
inc
and
dec
leave
lret
dec
xchg
js
pop
jmp
add
sbb
push
push
and
add
mov
dec
movsb
jg
add
push
clc
pop
inc
call
aam
fildll
pop
repnz
mov
cmp
int3
add
add
orl
pop
ss
inc
shlb
jne
movsl
cli
scas
sti
jb
gs
pop
ret
push
repnz
call
inc
add
mov
mull
dec
cli
inc
clc
in
jg
or
incb
sbb
sub
outsl
lahf
xchg
xchg
xchg
into
cmp
cltd
pop
stos
mov
cmp
add
repz
out
mov
test
mov
push
sarb
push
jle
sub
aas
push
sti
mov
push
scas
sbb
aam
adc
cmpsb
imul
lock
lcall
fbld
push
in
sbb
mov
cmc
fnstsw
sti
leave
fistpl
jno
mov
lods
ds
insb
xor
jg
std
mov
xchg
mov
hlt
cmp
out
and
or
dec
mov
outsb
loop
jl
xchg
or
es
jo
lcall
cmp
enter
mov
loopne
rorl
sbb
sub
pop
push
mov
jp
insl
push
test
xor
iret
sarl
sbb
mov
pop
sub
ret
rol
inc
in
or
dec
lret
xchg
shll
out
pop
cld
test
add
sarb
cmp
leave
cli
inc
xor
daa
push
pop
push
jge
push
add
cmp
pop
mov
into
call
cmp
jg
add
dec
lea
xor
mov
popf
scas
sbb
xchg
dec
std
or
enter
test
fcoml
jg
cld
ss
out
mov
in
bound
popa
stos
in
xor
addr16
cld
shll
aas
cmpsl
hlt
mov
push
sbb
fldl
hlt
loopne
leave
push
in
pop
cmpsl
cmpsb
popf
xor
sbb
rol
lahf
xor
div
stc
pop
mov
mov
pop
mov
jne
sub
hlt
mov
and
push
lret
push
lret
ljmp
sub
mov
and
ljmp
iret
ljmp
ficomps
push
dec
jg
cmp
rcll
mov
jmp
bound
lea
mov
outsl
xchg
mov
clc
mov
decl
dec
or
or
out
push
mov
sti
push
out
xchg
xchg
xchg
jno
incl
nop
inc
mov
outsb
aam
xor
sub
add
dec
clc
cmpsl
push
mov
jecxz
jmp
sbb
out
shrb
cmp
clc
lahf
in
clc
stc
sarb
in
and
inc
jge
call
add
add
iret
popa
mov
xor
sbb
fsubrl
and
sbb
lock
or
jmp
faddl
jg
jg
shrb
loop
lea
mov
test
pop
pop
popf
sar
and
dec
adc
cld
int
out
out
jmp
xchg
ljmp
arpl
sub
push
push
sub
ljmp
in
or
fdivr
jns
outsl
std
fidivl
sbb
loope
push
push
pop
ret
sbb
pushf
ss
hlt
sti
sub
and
pop
ljmp
sbb
subb
and
call
cltd
dec
in
jbe
dec
cmp
fwait
inc
clc
test
or
mov
std
outsl
xor
add
cmp
pop
xor
jg
push
in
dec
dec
push
cltd
add
cmc
inc
out
adc
daa
shrl
clc
sub
mov
cmpsl
test
sbb
frstor
lea
fnsave
mov
jo
stos
outsb
movsl
int
stos
add
xor
push
enter
icebp
jge
sbb
sbbb
jae
repz
movsl
push
int3
arpl
or
insl
ds
cmp
das
int3
ss
in
mov
cmp
js
pop
adc
mov
adc
cmpsl
mov
or
mov
outsl
jmp
fs
ret
mov
or
pop
or
jbe
mov
adc
xchg
hlt
aas
lock
outsl
mov
jae
imul
loopne
xor
mov
addb
fists
xor
jge
jge
sub
jne
and
mov
cmc
addr16
pop
add
aas
cmp
mov
arpl
test
lret
adc
pop
sbb
ja
sarb
dec
cmpsl
jns
cmp
cmp
aas
push
jno
fildl
pushf
sbb
lea
cwtl
cmp
int3
cs
adc
gs
cmp
and
test
mov
repnz
int3
fistps
pop
xor
pop
xor
aaa
in
es
cmp
cmc
pop
jecxz
outsl
jmp
shrl
push
dec
sbb
push
scas
dec
pop
fmuls
inc
cld
das
enter
sub
lcall
or
pop
repz
pop
dec
shl
shrb
cmc
out
push
aas
add
dec
mov
add
loop
cld
imul
cmp
cmp
icebp
das
cli
jno
mov
pop
pop
jmp
stc
xchg
mov
imul
stos
xor
loope
shlb
sti
xchg
mov
rorb
movsl
xchg
aaa
mov
dec
loope
mov
xor
sti
std
lret
jmp
inc
jne
inc
imul
stos
adcl
adc
xchg
pop
adc
dec
repnz
push
ljmp
mov
mov
rcll
shll
int3
in
shrl
enter
pop
sbb
test
pushf
and
xchg
xor
incl
out
fbstp
out
mov
loopne
push
ficoml
pop
push
add
mov
push
add
add
outsl
movsl
cmp
clc
out
adc
xchg
pop
das
mov
inc
movsl
inc
pop
addr16
xchg
scas
or
push
aad
cmp
lock
push
push
nop
das
dec
jne
and
ret
cmp
or
sar
paddw
pop
adc
or
xchg
aam
subb
test
xor
cld
pop
push
or
loop
pusha
lock
or
iret
shrl
sub
vmwrite
lret
jmp
fdivrl
jnp
ret
pop
cmovo
fsts
jbe
cwtl
std
out
out
jg
xchg
inc
clc
push
and
push
lahf
dec
cmpb
imulb
sahf
mov
repnz
das
call
pop
sarb
mov
xor
or
pushl
mov
inc
push
popa
arpl
and
out
cmc
jg
inc
aaa
push
jle
pop
sar
pop
fwait
xchg
fists
pop
sbb
sbb
and
inc
ja
mov
subl
ret
or
scas
cmp
jg
or
inc
xor
mov
loope
out
lods
orl
loope
cmp
pop
cli
xor
jle
fcmovne
adc
popf
enter
lds
cs
test
dec
sub
out
mov
mov
das
mov
mov
adc
daa
cli
xor
jmp
mov
lret
add
push
sbbl
pop
and
ds
je
xchg
lahf
sbb
ret
and
insb
ds
incl
imull
adc
jae
mov
rcl
sub
inc
jmp
inc
mov
inc
clc
out
dec
cld
adc
dec
scas
in
out
ret
xorl
sbb
outsl
loop
ret
jns
arpl
out
mov
add
dec
sub
filds
clc
sub
add
mov
paddb
mov
mov
pop
loopne
dec
inc
sbb
fildl
jg
ret
inc
push
or
stos
icebp
xchg
jne
cmc
push
xor
out
adc
xchg
mov
aas
adc
lock
lcall
cs
mov
sarl
and
and
aad
sbb
aas
xchg
stos
jbe
push
xchg
imul
testl
mov
les
push
pop
stc
push
mov
mov
cmp
iret
sar
les
sbb
out
sub
fcompl
mov
outsb
push
mov
sub
scas
iret
icebp
mov
add
jmp
add
pop
jno
cmp
mov
pusha
jp
pop
cmp
outsl
mov
xchg
sti
aas
out
sub
and
mov
dec
fistpl
inc
clc
andl
out
mov
add
out
repz
out
jg
or
scas
push
xorl
loop
into
stos
push
push
fldl
incb
cmpsb
mov
lods
rorb
jg
rol
arpl
nop
xchg
push
pop
fcompl
cmpb
pop
les
add
mov
sbb
sti
sbb
mov
xlat
dec
cltd
outsl
icebp
incl
mov
hlt
das
mov
pop
icebp
sahf
aas
or
std
sbb
push
popa
adc
xchg
jg
pop
in
and
out
call
jmp
sar
pop
pushl
out
xchg
int3
xor
jns
and
jg
and
movsl
icebp
ss
mov
sbb
je
sahf
inc
loop
mov
mov
movsl
mov
jge
dec
adc
or
addr16
les
dec
inc
lret
scas
cmpb
stos
xchg
cmpsl
mov
push
adc
xorl
fnstcw
inc
mov
aas
loopne
add
dec
and
int
ficoml
rcrb
popa
mov
fldl
dec
cmc
ss
xchg
push
loopne
push
mov
push
sbb
inc
or
mov
xor
cwtl
ljmp
je
push
inc
jg
and
cmp
aas
adc
xchg
sbb
loop
pusha
jno
jg
pop
mov
adc
jl
rorb
add
movsb
sbb
add
lahf
add
sbb
add
add
jb
jle
pop
out
out
sub
push
cli
mov
mov
inc
xlat
sarl
iret
stc
jge
test
pop
jle
testb
mov
sub
xchg
jo
sub
sub
std
out
sbb
pop
add
fadds
icebp
outsb
into
push
jmp
cli
dec
push
popa
push
icebp
mov
cltd
cmp
mov
in
aad
aas
inc
out
ret
push
push
repz
into
and
or
mov
jmp
add
call
and
jecxz
or
fwait
and
jle
imul
imul
icebp
jo
loop
fdivl
add
std
sarb
adc
push
xchg
pop
pop
sbb
cli
imul
add
ret
add
lcall
inc
clc
xchg
bound
jge
mov
add
jnp
ret
sub
add
inc
clc
dec
rcr
xchg
cs
jg
cld
push
mov
jnp
aaa
or
incl
out
adc
les
xrelease
sar
pop
test
adc
int
inc
push
popf
sti
stos
pop
pushf
imul
cmc
mov
or
or
les
shlb
shlb
inc
aas
aas
or
popa
scas
and
mov
rcr
mov
jg
push
xor
stos
test
mov
or
shlb
dec
es
add
xor
popf
inc
mov
fwait
out
mov
sarb
fmuls
pushf
and
dec
mov
pushl
and
or
pop
dec
shr
es
lahf
lods
or
insl
mov
jg
jg
ljmp
scas
add
sub
cmpsb
in
or
movnti
inc
jb
sbb
jno
and
dec
sbb
xchg
mov
mov
in
hlt
add
orb
cmp
mov
ja
jae
sbb
bound
adc
icebp
aas
mov
push
test
adc
fildl
mov
mov
xlat
mov
adc
jb
jae
cmp
sar
push
lahf
repz
lods
mov
dec
mov
mov
loopne
inc
push
xor
clc
divl
ljmp
pop
ror
hlt
sub
mov
inc
sbb
pushf
xchg
aas
std
pop
mov
ret
adc
std
jg
test
or
lcall
cmc
je
mov
mov
out
popa
dec
cli
xchg
mov
mov
ja
in
movsbl
dec
test
add
fwait
lock
pop
data16
or
int3
shr
loope
jg
aaa
adc
psrlw
sub
and
sbb
mov
pop
jae,pt
jg
xchg
or
icebp
pavgb
in
imul
inc
inc
fs
sahf
sub
pop
out
lods
stos
jg
cmp
fwait
daa
mov
daa
xor
push
rcll
cmp
adc
jmp
ficompl
adc
loope
arpl
pop
jmp
push
aam
jecxz
xor
jmp
pop
add
ljmp
xchg
movsl
ss
aaa
mov
fildl
xchg
lcall
pop
test
data16
jp
mov
aad
sbb
mov
adc
mov
cmp
ret
or
aas
mov
push
add
pop
and
inc
shrb
pusha
stc
outsl
pop
sub
pop
in
jne
mov
fbstp
lea
gs
push
jle
cli
adc
fistps
movsb
aas
repnz
fs
mov
out
int
je
inc
or
out
insb
cmp
jle
xlat
sub
lock
mov
jo
xchg
add
arpl
out
add
ja
es
std
adc
ret
jmp
es
add
sbb
sub
ja
out
popa
inc
hlt
adc
outsl
fdivrl
cmp
dec
leave
sub
mov
aad
ds
sbb
fiadds
test
or
xchg
rcrl
cmp
into
clc
inc
push
jle
jo
adc
and
jnp
inc
loopne
pop
xlat
add
stos
or
cld
mov
add
loope
lcall
jb
push
outsl
jno
push
or
ret
daa
xchg
push
or
mov
mov
test
xor
dec
xor
aas
ret
test
out
test
push
dec
push
out
jnp
lock
fdivs
xchg
scas
into
pop
imul
sub
mov
int3
push
ljmp
call
stc
idiv
inc
das
js
jbe
bts
aaa
loopnew
xor
fwait
cli
les
pop
es
arpl
in
inc
xor
outsb
out
adc
sub
ret
xor
sbb
call
add
jle
test
sub
lods
call
sbb
jl
test
mov
roll
test
inc
xor
std
cmp
icebp
sbbl
mov
orb
inc
inc
js
fs
mov
pop
adc
ret
jbe
pusha
lock
rorl
decb
je
jl
popl
or
and
mov
aas
mov
lods
insb
int3
fisttps
mov
inc
movsl
mov
pop
sbb
cmpl
stc
sti
cwtl
cmp
mov
lock
mov
repnz
cli
popf
add
pop
mov
sbb
cmp
mov
iret
loopne
jmp
jle
jns
inc
pop
sarb
adc
mov
push
inc
imul
lock
xchg
inc
ret
sahf
in
in
ret
dec
hlt
pop
shl
jp
add
ljmp
lds
or
ljmp
push
enter
movsb
out
ss
inc
add
call
es
test
jnp
push
lods
push
lock
jle
adc
outsb
outsl
jge
sti
pop
in
clc
aas
lock
adcb
sub
ds
lcall
jmp
fdivs
pushl
jg
std
add
sbb
imul
dec
cld
and
lret
push
out
sub
notl
jno
jno
jl
hlt
iret
jmp
push
je
mov
cmp
add
sub
mov
in
and
add
scas
xchg
dec
ja
and
inc
xchg
lcall
jnp
dec
in
jecxz
cmp
sub
pop
mov
aas
das
stos
pop
push
xorl
xlat
ret
or
jae
lret
dec
aad
rclb
leave
clc
in
dec
ljmp
mov
jg
xchg
adc
or
jno
out
inc
sbb
pop
popa
test
lret
xchg
add
push
or
cmpsl
cmp
mov
fmull
mov
arpl
ds
divps
adc
out
icebp
mov
pushf
sbb
test
scas
cltd
icebp
cmc
aas
and
das
cmp
pop
loop
mov
xchg
les
lock
aad
ljmp
mov
dec
imul
pop
divb
sbb
cltd
adc
and
daa
xor
inc
jb
xor
cltd
jp
sub
je
add
mov
xor
dec
ficoms
subl
fistps
lods
pusha
fimull
test
sub
add
fsubrp
xor
cmp
iret
ret
arpl
sub
subps
addb
add
fcomp
cli
xor
ficomps
rep
add
jo
arpl
mov
daa
mov
inc
or
or
repnz
mov
inc
sbb
sahf
notl
mov
std
lahf
fwait
sbb
loopne
in
or
xor
sbb
pop
lock
fmull
incl
ja
and
ja
add
xchg
int3
ret
jg
or
jg
push
out
test
jno
dec
aas
sub
adc
daa
pop
add
jne
loope
mov
pushf
pop
xchg
fisttps
decl
dec
lret
add
shlb
je
test
xor
std
mov
sbb
adc
add
push
mov
cli
test
jge
mov
inc
in
rcrb
jae
mov
jns
cmp
xchg
mov
imul
mov
jb
std
outsb
push
and
sar
sarb
cmc
push
mov
sub
dec
and
les
mov
shll
lock
mov
sbb
or
push
div
je
ret
xchg
sbb
push
sub
stos
sbb
ds
rorb
inc
mov
xor
lret
test
jg
lock
jmp
jno
mov
cmp
pop
ss
rcrl
orl
enter
in
lahf
ret
mov
adc
xor
mov
add
xchg
stos
ss
dec
mov
daa
pop
pop
fdivrp
cld
into
mov
push
imul
mov
cmp
sbb
not
rol
outsl
scas
sbb
popa
xor
mov
and
push
cmpb
push
sbb
lret
push
jle
movsb
mov
add
cltd
cld
inc
mov
jg
and
push
mov
lea
xchg
pop
pop
xor
lea
pop
dec
ja
dec
fistpll
add
dec
pop
mov
popl
sub
mov
and
xchg
cmp
incl
js
je
sarb
movl
dec
xchg
xchg
xlat
std
pop
sbb
outsl
push
inc
inc
add
movsb
js
inc
xchg
pop
cld
inc
lret
mov
iret
insb
rol
jne
inc
and
addr16
cmp
std
or
mov
mov
negl
jo
out
mov
or
xchg
sti
jg
jg
scas
adc
outsl
cwtl
out
push
cwtl
mov
ss
jg
pop
xor
add
cmc
cwtl
mov
loopne
pop
adc
sbb
adc
call
cld
or
sub
dec
popa
lahf
and
xchg
sub
and
sar
into
loope
fcmovne
push
loop
int3
dec
repz
xor
xchg
in
and
sti
fists
stos
out
lods
xor
mov
aas
jo
andl
scas
mov
inc
inc
add
fisubs
xor
test
dec
lea
push
gs
xchg
pop
mov
push
xor
or
mov
jae
adcb
push
shr
std
xchg
mov
add
fmull
add
add
fwait
loope
sub
cmp
jg
or
int
xor
pop
test
pop
fdivr
movsl
xchg
std
mov
bound
cmp
rcr
fildll
dec
cmpsb
mov
jp
xor
nop
mov
gs
sbb
in
loop
dec
push
jg
lret
bound
pop
push
jg
sub
je
sarl
iret
rol
dec
push
icebp
enter
jge
mov
add
clc
mov
cmp
cs
rorb
jle
jnp
cltd
jl
sbb
mov
jg
fistpll
cmpsl
sbb
inc
cmp
push
iret
inc
es
mov
sti
ja
xchg
lea
jb
sbb
cmp
out
or
mov
pop
mov
orl
loop
pop
fidivs
mov
test
hlt
sub
arpl
xchg
scas
jne
jo
cli
xchg
hlt
hlt
mov
stos
dec
int
push
add
mov
out
sbb
loopne
mov
nop
std
imul
aas
inc
pop
and
cmp
pushw
gs
xor
inc
rolb
stos
push
fs
inc
js
shll
insl
daa
pop
jae
mov
mov
filds
sbb
cld
outsl
cld
ret
mov
pop
xor
pusha
testl
or
mov
sub
push
rcrb
mov
jmp
inc
gs
fadds
add
add
mov
mov
aaa
sbb
nop
call
decl
fnstcw
cmp
mov
pop
movhps
push
xchg
es
xor
adc
stos
pop
push
sar
scas
or
jp
pushl
out
jecxz
in
ja
mov
pop
imul
push
scas
jp
int3
add
cs
xor
pop
add
or
das
push
pushl
sub
mov
popf
xchg
jns
adcl
mov
sbb
rcll
pushf
xchg
mov
sbb
gs
jle
fistps
popf
je
pushf
addb
shll
test
jecxz
imul
clc
out
enter
mov
loop
pop
dec
push
enter
push
imul
xchg
adcl
push
pop
or
xor
inc
ds
or
push
in
repz
in
inc
aaa
pusha
int
call
std
imul
push
pusha
xchg
repz
cmc
decl
les
xor
into
aaa
mov
cld
cli
mov
jb
and
mov
incb
and
pop
dec
mov
pop
dec
mov
pop
pop
mov
dec
push
lods
sti
js
negb
lret
imul
movsb
mov
sbb
je
jne
pop
sub
jno
ss
and
lods
movsb
adc
cld
scas
imul
pop
int
xor
mov
call
pusha
push
adc
sarb
int
in
mov
mov
pop
xchg
sarl
cld
out
out
push
mov
or
jo
inc
cmpsl
add
lret
test
imul
mov
push
xchg
adc
add
mov
push
fadd
inc
iret
shl
fsub
mov
ja
and
pusha
or
loop
sbb
push
jg
fucom
or
nop
aaa
sub
shll
jb
outsb
inc
and
dec
decl
clc
push
sbb
mov
stc
sub
std
orl
mov
push
aad
and
jg
loope
adc
loopne
sbb
scas
notl
hlt
aas
repnz
roll
jbe
lahf
adc
cmp
and
pop
mov
dec
ficompl
push
lret
xorl
dec
dec
jmp
lods
call
fs
pop
jb
dec
out
lds
fmul
mov
hlt
aas
aam
jno
push
mov
dec
push
ja
sub
push
insl
fadd
sbb
iret
jle
jo
jae
cld
mov
test
add
aad
pop
sub
add
xchg
cwtl
stos
ficomps
idiv
dec
add
and
push
sub
push
jns
test
sti
xlat
mov
inc
popf
mov
push
pop
push
mov
jg
sti
lret
cltd
xor
mov
sbb
sbb
addr16
inc
pop
jae
shll
cmp
je
pop
insb
or
sub
pusha
popf
fdivrl
mov
leave
test
or
push
inc
pop
cmc
jbe
adc
lods
sti
mov
jge
or
xchg
or
push
mov
loope
mov
fwait
notl
mov
dec
fadd
outsl
repz
mov
movsl
dec
sar
add
xorps
sub
mov
call
sbb
xlat
mov
jg
or
mov
xor
inc
dec
mov
outsl
and
addr16
insb
add
std
sbb
jp
pop
sti
scas
sahf
das
incl
addr16
fidivrl
inc
xor
jecxz
cmp
mov
aam
mov
sub
cmpl
jge
cmp
cli
xchg
shll
nop
mov
xor
repz
hlt
cmc
in
mov
ret
js
xchg
dec
loopne
aaa
xchg
shlb
mov
add
popf
je
roll
cli
sub
xchg
ret
outsl
mov
jns
bound
mov
rol
mov
fdivrs
dec
xor
xchg
mov
jmp
xchg
repnz
dec
inc
lahf
pop
xchg
ds
sub
pop
pop
sbb
mov
jne
jae
add
rorb
sub
mov
fbstp
test
movsl
mov
and
push
lods
or
mov
aas
pop
add
dec
mov
out
push
jb
mov
incl
decl
jne
movsl
outsl
pop
pop
mov
jmp
divb
rorb
mov
dec
and
pop
mov
inc
dec
pop
mov
popa
add
cmp
mov
or
inc
sub
inc
jns
sub
push
fcoml
arpl
fwait
dec
and
dec
push
data16
mov
add
push
insl
push
rcrb
lcall
adc
and
and
mov
decl
dec
push
jmp
fwait
pop
lock
scas
lret
lds
or
or
int3
cmpb
pop
or
insl
icebp
sbb
iret
dec
stc
insb
fisubrl
cld
dec
pop
js
ficomps
xor
sub
inc
cld
xchg
or
add
add
ret
dec
pushl
incl
fidivrl
add
jae
stos
add
aad
dec
movsl
mov
out
pushf
push
push
push
pop
xor
sbb
mov
lcall
sub
dec
ds
adc
or
ret
roll
jo
in
cwtl
or
ljmp
adc
cmp
mov
pop
test
dec
push
xor
lcall
jno
push
xor
xor
xchg
dec
ja
outsb
movsb
inc
dec
or
clc
add
adc
push
and
push
and
add
repz
jb
xor
jno
adc
mov
call
sbb
xlat
pop
push
jns
push
gs
push
outsb
ljmp
or
ret
or
andl
xchg
iret
pop
mov
xchg
add
xor
insb
enter
fidivrl
idiv
push
push
mov
shl
push
test
into
inc
or
push
das
add
inc
rolb
out
and
xor
push
clc
add
call
mov
adc
popa
sarl
pop
inc
je
push
fs
and
push
movsl
dec
add
mov
jg
add
bound
pop
adc
aam
dec
daa
xor
aad
or
ret
rorl
add
mov
call
das
ret
loope
jb
insb
xor
arpl
jmp
dec
push
fwait
push
dec
lea
mov
dec
and
imul
sub
jno
aad
inc
push
add
push
adcl
pop
scas
cmpsl
int3
xor
frstor
cmpb
inc
je
sub
add
xor
fwait
aad
jp,pt
mov
inc
xor
pop
je
test
hlt
call
and
aas
sbb
addb
mov
or
bound
imul
nop
sub
cmp
mov
push
sbb
add
inc
dec
mov
and
jae
xor
mull
inc
add
add
add
adc
or
xor
ja
fbstp
xchg
icebp
inc
data16
mov
and
mov
leave
imull
dec
xor
push
xor
xchg
ja
fisttpll
jecxz
adc
or
sbb
adc
rclb
push
cmpl
xchg
push
ja
ja
cmpsb
out
sub
das
dec
fimuls
mov
jb
inc
or
mov
imul
ljmp
popa
not
test
incl
addb
sarb
dec
sbb
mov
push
lods
and
push
popa
test
dec
add
popa
hlt
or
cmp
xchg
add
lods
call
xlat
adc
add
dec
add
outsl
nop
in
or
push
inc
lods
outsb
outsl
inc
loope
inc
adc
sbb
add
gs
out
shl
cs
out
lcall
icebp
gs
bound
mov
test
jne
push
dec
data16
add
mov
insl
jns
push
push
insb
sarb
lcall
adcl
sub
mov
ja
hlt
add
add
jecxz
push
aam
xor
mov
iret
lea
dec
sub
jo
mov
movsb
sub
daa
cmpl
psrlw
scas
in
das
movsb
or
push
dec
outsl
push
add
cli
xchg
hlt
dec
sub
dec
repnz
js
test
mov
cmpl
jle
mov
call
inc
push
das
dec
push
push
add
or
nop
fs
dec
loopne
push
push
add
push
mov
mov
push
dec
adc
xchg
testl
rolb
inc
or
or
roll
mov
sub
xchg
push
inc
inc
xchg
pusha
mov
inc
xorb
adc
adc
push
xchg
movsb
pop
clc
and
jecxz
rcrl
stos
dec
testb
inc
sbb
int3
int3
jp
add
adc
xchg
rolb
add
subl
inc
addb
nop
or
xlat
lcall
or
cmp
aas
out
mov
sub
sbb
and
addl
mov
pop
push
bound
int3
push
mov
mov
data16
or
ss
int3
push
into
inc
add
inc
add
scas
insb
insw
cmp
xchg
dec
shrb
sub
add
mov
shrb
stos
cmpl
xor
and
sahf
dec
dec
cld
add
in
and
pop
adc
sahf
mov
or
cwtl
add
push
mov
inc
les
fdivrl
adc
js
or
iret
lods
sbb
inc
hlt
inc
daa
xchg
push
daa
mov
jbe
cmp
xorl
mov
xorl
jbe
or
xor
push
xor
call
int
xor
cmpsl
inc
push
les
or
adc
test
inc
inc
cs
or
and
shrb
mov
adc
es
cltd
sbb
inc
enter
mov
or
add
outsb
mov
hlt
adc
xor
cmp
lods
or
adcb
inc
lret
add
cmp
inc
pusha
inc
push
jp
mov
jbe
ss
xchg
insb
in
pushf
ret
mov
and
arpl
ret
cmp
jo
sbb
xor
stos
fnstenv
int3
subb
ret
pop
pop
sahf
ret
and
sub
or
pushf
push
or
sub
cwtl
jle
cmp
fidivs
loopne
pop
addr16
and
fnstenv
adc
pop
mov
into
in
sbb
pop
cld
add
cmp
nop
jo
outsb
xor
mov
push
add
inc
add
xchg
cs
stc
or
adc
out
in
lds
pushf
add
outsb
dec
enter
fisubrs
addb
data16
clc
call
jnp
js
incb
out
mov
mov
data16
in
pop
cli
xchg
add
cmp
push
adc
mov
inc
sub
xor
int3
popf
sub
add
loopne
popa
sub
cmp
cmp
pop
mov
inc
mov
cmp
jo
lcall
test
jb
gs
xor
cs
insb
pop
adc
ss
push
or
in
testb
pop
or
lret
add
mov
movups
sub
outsb
lock
cmp
sbb
into
and
mov
push
xor
insb
lret
or
clc
or
stos
cs
push
mov
xor
aaa
je
or
shll
cmpsb
pusha
add
adc
call
mov
pop
jnp
sbb
pusha
mov
addr16
les
push
mov
clc
ret
cmp
ud2
sbb
push
inc
test
sbb
cmp
popf
inc
adc
mov
lods
cmp
mov
lcall
arpl
xor
call
or
out
inc
jno
shrl
inc
jl
xchg
mov
sbb
xor
in
dec
ss
mov
scas
or
inc
sahf
cmp
push
lret
push
lods
and
out
into
add
lods
and
movsb
shrb
jp
int3
les
xchg
test
pop
xchg
push
xchg
fcomp
sbbl
sahf
pop
add
rorl
insl
arpl
mov
adc
icebp
xor
test
pusha
mov
divb
and
nop
mov
pop
cmp
out
dec
fsubs
push
mov
xor
jecxz
mov
add
dec
jb,pt
mov
xchg
push
adc
add
adc
enter
nop
inc
add
add
subl
pop
dec
imul
std
dec
inc
sbb
imul
fcmovnu
outsb
jg
imul
outsb
addr16
aaa
inc
outsl
outsb
jae
sub
xor
jo
je
inc
push
jb
mov
in
fs
or
jns
imul
outsl
in
sti
fists
insb
jo
xor
popa
fs
jae
gs
outsl
jb
cmp
sti
gs
push
and
cmp
push
outsl
or
jae
dec
inc
dec
sahf
fldenv
and
jb
ds
imul
mov
lock
cmp
and
or
sbb
jno
xacquire
gs
dec
imul
fisubrs
jns
scas
into
sub
inc
push
push
hlt
mov
push
inc
js
aaa
jb
add
jne
mov
insl
lahf
insl
insl
adc
jo
jno
bound
imul
dec
jne
je
inc
jns
pop
push
imul
sub
mov
sahf
sbb
arpl
dec
push
imul
popa
insb
fadds
insb
adc
inc
dec
popa
jo
push
jge
add
or
call
push
bound
jb
addl
shrb
jns
xor
xor
inc
gs
inc
lds
int
mov
inc
das
and
sub
popa
jno
pop
sbb
mov
inc
xor
imul
cmp
mov
lcall
xorl
ds
jo
adc
sbb
jbe
shll
jecxz
in
mov
mov
sub
dec
out
orl
mov
shlb
mov
rdmsr
mov
ret
or
jne
push
jne
insl
jae
negb
aaa
and
loopne
sub
jo
int3
add
adc
movl
xchg
cs
push
mov
lds
xor
push
mov
cmp
mov
jp
scas
cltd
xor
mov
roll
lret
sub
jne
inc
pop
lock
ret
stos
mov
out
lcall
jb
das
inc
jbe
insl
jae
arpl
dec
ret
arpl
mov
dec
inc
gs
inc
mov
roll
outsb
pop
push
and
jl
lods
outsb
sub
insb
ja
cmp
and
pop
jnp
std
dec
jae
inc
cmpsb
add
je
add
loope
jnp
cld
ret
jb
mov
cmc
cmp
and
jo
sub
lea
dec
inc
inc
in
cmpsb
fidivl
mov
out
push
jp
enter
add
sbb
lock
psrad
or
imul
loopne
out
loop
lock
jl
jns
je
jae
je
jb
dec
addb
aaa
inc
inc
add
push
pop
push
fs
inc
cmp
movsl
aaa
push
mov
scas
imul
movsl
mov
add
sub
scas
and
call
push
jno
scas
sbb
jne
lret
cmc
adc
dec
in
out
std
dec
jae
push
jo
fwait
push
lcall
sahf
pushf
sub
cmp
call
xor
fs
sub
push
sub
aaa
aad
or
lea
jge
push
mov
cmp
push
sar
call
xlat
ret
clc
inc
add
adc
mov
imul
stos
xchg
push
int3
addl
pop
adc
leave
or
push
aaa
imul
add
and
test
cmp
jne
jo,pn
or
fsubl
aaa
xchg
stos
lcall
aas
stos
pop
fldt
movl
and
adc
dec
addr16
push
xor
insb
mov
add
xor
gs
popw
dec
rclb
ds
ja
add
inc
subb
mov
call
int
push
jbe
mov
or
add
arpl
jo
dec
test
inc
inc
lret
pusha
mov
jae
and
xor
mov
xchg
adc
cwtl
mov
push
imul
or
xchg
dec
push
and
inc
hlt
gs
ds
enter
pusha
addl
cmp
movsb
adc
push
or
popa
in
sub
in
xor
dec
movapd
test
dec
cwtl
imul
jo
mov
call
dec
bnd
fistl
push
stos
sbb
jns
jb
lods
cmp
push
in
xor
mov
mov
jb
add
je
inc
int3
repnz
imul
jnp
je
push
ja
imul
cmp
xor
bound
pusha
iret
inc
jns
divb
mov
push
nop
pop
inc
inc
arpl
xor
push
jbe
push
mov
or
fnstcw
mov
gs
sahf
add
xchg
ds
sbbb
jno
clc
push
fs
push
jp
int3
shlb
add
push
jo
cmp
out
sub
sti
sub
sbb
sub
arpl
and
sti
push
imul
inc
dec
scas
fbld
aad
inc
enter
xchg
imul
push
adc
mov
ja
xchg
dec
fs
push
aaa
push
jl
xor
cmp
inc
insb
lock
jae
push
xchg
shl
les
les
scas
dec
out
sarl
sahf
lods
adcb
xchg
imul
mov
cbtw
aad
push
pushf
sub
sbb
inc
dec
cmp
adc
in
xor
add
fs
fidivs
jmp
inc
xchg
js
push
mov
lock
in
inc
sbb
sarl
push
imul
popf
push
sub
jne
pop
jae
cmp
subb
ret
xchg
cmp
inc
inc
pop
sbb
jbe
inc
mull
imul
rolb
mov
xchg
and
add
in
push
dec
in
pop
dec
sbb
jle
sub
dec
push
inc
push
addb
xchg
mov
dec
fxch
jno
or
data16
jp
je
pushf
cmp
sbb
xor
lret
in
cmp
fiadds
and
xor
mov
stos
add
pop
xor
cmpsb
adcb
bound
rcrl
inc
lret
das
movsb
sbb
andl
mov
call
and
fs
insl
jg
inc
sbb
call
jns
je
lret
push
jl
int3
push
jo
dec
insl
pusha
jp
sbb
insb
mov
xor
push
sub
xor
add
lock
push
mov
call
aam
popf
push
mov
xlat
dec
outsl
push
popa
sbb
inc
adc
jmp
mov
adc
xor
and
jp
pop
xchg
xor
insl
dec
insb
aaa
negb
insl
pop
jge
jb
jb
jb
push
pop
mov
movsl
jecxz
in
testb
dec
dec
mov
lds
mov
mov
je
sbb
push
pop
xor
popa
jns
jl
xchg
jo
adc
push
and
test
jb
push
insl
out
adc
lret
loope
fildl
lds
jle
loope
stos
sub
jae
mov
xor
jge
insb
mov
add
sbbb
data16
sti
bound
dec
sub
dec
mov
lods
sub
xor
xchg
out
jno
mov
pop
push
arpl
or
push
mov
cmp
jmp
fsubrs
xor
dec
cmp
imul
outsl
cmpsb
jmp
loopne
mov
inc
hlt
sahf
xchg
out
jo
loope
push
push
inc
jae
xor
push
push
insl
call
cmpsl
aam
and
lock
inc
andb
add
dec
or
or
cli
movsl
inc
and
mov
add
js
idivb
push
adc
rorb
add
mov
jb
add
sbb
mov
adc
adc
sbb
jbe
rcrl
dec
add
dec
pusha
lahf
pusha
mov
jecxz
arpl
dec
rcl
cmp
repnz
sbb
sbb
add
inc
add
dec
dec
aas
ss
fisttpll
rcrb
rol
xlat
out
ficompl
aaa
adc
das
lods
mov
incl
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
