xor
mov
lea
mov
movzbl
inc
add
add
add
inc
and
and
lea
movzbl
mov
add
xor
inc
dec
inc
dec
xor
lea
mov
inc
dec
inc
sub
and
lea
dec
jne
mov
mov
inc
dec
pop
inc
add
pop
xor
lea
pop
mov
add
dec
add
inc
xor
lea
mov
inc
dec
dec
add
ret
push
dec
and
lea
mov
dec
inc
sub
inc
push
push
push
push
add
lea
mov
push
inc
dec
inc
sub
xor
lea
mov
add
dec
mov
dec
push
inc
xor
xor
lea
movzbl
push
dec
inc
push
sub
inc
pushl
xor
call
lea
add
mov
add
dec
dec
dec
or
lea
pop
ret
in
xchg
loopne
push
xor
cmpsb
ja
jno
stc
push
inc
mov
push
int
imul
pop
mov
das
int
test
not
pop
mov
loop
xor
sbb
andl
fstl
icebp
add
cli
sbb
pop
push
lret
adc
xchg
loope
pop
cltd
loop
fdivr
and
arpl
mov
call
cmp
push
sub
push
inc
addr16
ficompl
ja
pop
movsb
xor
mov
in
lahf
addl
add
test
inc
addr16
lods
imul
inc
sub
mov
xor
add
xor
movsl
fmull
ja
dec
movsl
and
test
and
stos
jle
lret
sbb
sarl
push
sub
lea
adc
popa
rorb
inc
arpl
popa
dec
or
jae
push
pop
hlt
ss
insl
outsl
outsb
sbb
jmp
lock
pushf
dec
cmp
mov
stos
sbb
pop
addl
jo
rcrb
mov
scas
loopne
lret
mov
ds
mov
add
sub
outsb
icebp
in
ret
je
stc
fwait
jmp
movsb
inc
int
push
pusha
cmp
add
push
aad
out
ds
loopne
add
add
negl
pop
femms
mov
push
jecxz
push
outsl
aaa
inc
jp
jo
pop
and
in
xchg
inc
fsts
jae
rolb
mov
mov
enter
push
clc
hlt
xchg
pop
add
in
mov
clc
inc
inc
jmp
push
mov
psubsw
mov
mov
popf
test
cmp
out
sub
or
cmpl
daa
sub
rclb
and
data16
jmp
movsl
mov
mov
dec
mov
add
xchg
ret
mov
or
cwtl
jns
cmp
sbb
sbb
loopne
test
cmp
jb
or
push
fwait
ret
mov
inc
dec
and
in
leave
pop
dec
or
out
in
cmp
push
jp
andb
and
lock
push
mov
shr
orb
sahf
cmp
and
sbb
inc
lcall
xor
out
call
call
addb
bswap
sub
xlat
in
cmp
mov
scas
inc
in
in
and
cwtl
std
testl
cmp
fadds
adcb
out
adc
cmp
mov
in
mov
and
mov
inc
xorb
notb
mov
jmp
push
dec
push
fdivl
push
fstpt
sahf
mov
shlb
arpl
sbb
lret
push
jg
sub
xor
leave
cwtl
push
jp
test
fildl
loope
mov
ja
inc
js
in
jno
jle
fsts
mov
sub
dec
shl
test
shlb
add
mov
out
cmpsl
add
pop
les
mov
sbbl
mov
sbb
adc
mov
mov
add
pop
das
aas
outsb
jmp
leave
ja
loope
filds
pop
or
adc
jo
push
and
das
or
test
pop
js
cs
push
jb
cmp
andl
clc
ret
insl
push
jl
inc
in
add
xchg
int
int
push
ljmp
scas
imul
pusha
js
lods
jge
cwtl
jno
gs
mov
mov
into
fadd
mov
movsb
js
aad
test
jbe
int
das
fdivl
outsl
pop
jmp
divb
mov
movsb
adc
add
or
fwait
cs
dec
sub
inc
push
mov
stos
mov
inc
mov
out
js
adc
or
sbb
cmp
xchg
int
adc
fisttps
cmp
cmp
sbb
mov
jg
xchg
xor
cmp
jne
mov
mov
add
insb
aad
iret
js
icebp
loope
dec
clc
xchg
mov
cld
mov
lret
push
bound
add
dec
adc
xor
cmp
mov
cmpsb
movsl
nop
aaa
xchg
out
pop
imul
shrb
mov
lds
push
cmp
push
and
xchg
stos
xchg
xchg
mov
xchg
push
cli
inc
in
dec
gs
dec
loope
jmp
ret
add
pop
mov
cmp
shll
xlat
xor
adc
sarl
xor
pop
inc
das
and
and
cltd
ficompl
jge
inc
repz
adc
shrb
test
mov
fstpt
mov
adc
sbb
shrl
fs
jns
lea
aam
jbe
fisttpll
lds
mov
sbb
xor
jecxz
push
dec
popa
and
jp
mov
mov
repz
cmp
mov
into
jle
cmpsb
ss
jo
aaa
jecxz
jmp
push
cmc
hlt
sti
jae
icebp
sub
push
xor
push
fcoms
lret
cmc
ret
insl
aam
or
mov
test
dec
or
and
in
or
testb
push
and
mov
test
add
repnz
adc
mov
cmp
mov
push
mov
xlat
pop
inc
out
aas
cmp
lock
mov
cmp
std
fnsave
std
fcom
inc
leave
out
addr16
hlt
addr16
xchg
fwait
cmp
js
nop
xchg
jge
or
testl
cmp
sub
movsl
mov
xlat
insb
cmp
fcmove
aaa
sbb
xor
arpl
pop
call
inc
xlat
add
jle
mov
adcb
jb
sub
jmp
mov
std
out
sbb
shll
cmp
in
inc
or
sbb
je
inc
mov
test
push
dec
mov
test
jge
xor
test
mov
out
test
mov
pop
inc
push
aam
jne
in
imul
jbe
sarl
adcb
shlb
in
sub
ret
inc
sbb
add
ret
jno
rorl
mov
push
loop
cmp
pop
adc
mov
jbe
icebp
sbb
mov
pop
lret
inc
xchg
neg
gs
sti
adc
shll
jno
adc
jae
cmpsb
dec
stc
jno
dec
jp
insb
mov
xor
inc
daa
in
jo
pusha
push
lret
sbb
xor
lods
jnp
test
xor
fucomip
test
jb
mov
dec
loop
cmp
out
sbbb
fnstcw
and
xchg
sahf
arpl
sub
pop
dec
or
dec
les
andl
sub
lods
xchg
xor
inc
hlt
fwait
cmc
sub
add
pop
push
xor
adc
dec
xchg
insl
stos
gs
xchg
fidivrs
push
mov
jg
jmp
mov
dec
loop
or
ret
and
mov
leave
in
gs
fiaddl
enter
push
addr16
push
dec
mov
sub
shrb
xlat
sti
or
adc
xor
sbb
jbe
call
add
mov
mov
ret
imul
adc
daa
dec
push
and
lahf
stos
xor
xor
dec
xchg
mov
pop
repnz
inc
mov
mov
mov
sti
mov
add
scas
pop
inc
out
push
scas
mov
bound
imulb
or
mov
mov
hlt
je
push
fwait
cmpsl
push
shrl
sarb
push
fistps
into
push
xchg
sub
pop
sbb
inc
popa
and
mov
or
lock
test
rclb
xor
xchg
ss
xor
dec
pop
sbbl
xor
shr
in
push
imul
mov
and
jns
movsb
xor
pushaw
fistpll
jnp
sahf
loope
insb
or
movsb
fs
xor
iret
fcoml
mov
add
dec
push
cmp
xchg
mov
and
cmp
hlt
mov
adc
push
pop
adc
jae
in
cmp
mov
dec
aas
mov
jne
out
popf
leave
inc
ljmp
negb
mov
mov
jb
dec
std
popf
lods
sub
std
cwtl
ror
jns
mov
dec
mov
mov
mov
iret
inc
in
jne
clc
sti
pop
sub
mov
xor
inc
push
pop
cmc
sbb
cmpl
mov
cwtl
cltd
dec
sahf
jl
les
in
pop
xor
daa
loope
iret
iret
cld
jp
dec
stc
bound
andl
arpl
adc
out
add
fisttps
mov
cmpb
dec
loop,pt
dec
iret
and
into
fs
lret
loop
jg
mov
jmp
xchg
push
cltd
mov
loope
mov
xor
icebp
fldt
xlat
pop
and
mov
inc
inc
test
mov
andb
xor
stos
sti
xor
in
sbb
lcall
aaa
sbb
aas
out
into
jo
add
adc
addr16
push
cmp
lds
clc
out
fstpt
mov
sub
popa
ss
jbe
lret
xchg
jmp
or
jbe
dec
loop
cmp
daa
fs
mov
cli
or
loop
pop
out
imul
int
std
adc
fcomip
out
cmp
adc
lahf
push
sbb
pop
push
adc
cmc
adc
add
mov
icebp
ret
and
sub
sbb
dec
sarb
adc
aad
inc
jp
shrl
pop
pop
xlat
arpl
mov
data16
test
sub
aam
call
sahf
outsb
testl
or
mov
inc
mov
ret
mov
push
and
rcrb
std
inc
dec
pop
add
push
sbb
addr16
sub
push
roll
cmp
sub
add
in
outsb
and
inc
cs
lret
mov
enter
jp
push
sahf
cli
sahf
insl
xor
lock
filds
pop
nop
hlt
jae
shrl
pop
mov
adc
das
mov
repz
push
sbb
adc
ljmp
imul
aam
lods
mov
cli
arpl
adc
or
xchg
push
mov
pop
daa
outsb
mov
jmp
rcr
dec
ficoml
sbb
loop
out
insb
clc
xchg
sbb
lahf
insl
pop
test
add
add
mov
lahf
add
jno
push
xchg
adc
cmpl
outsb
mov
insb
ljmp
or
mov
pop
push
pop
test
cwtl
in
inc
adc
jl
or
hlt
xor
xchg
les
add
int
push
dec
mov
jne
lahf
jmp
nop
mov
sub
lret
es
xlat
cltd
sub
pop
stos
jl
adc
aam
nop
std
movsl
push
bound
les
pop
inc
mov
sub
dec
dec
icebp
push
clc
sub
aad
push
into
popa
gs
sti
cmp
sub
mov
jnp
xchg
xchg
sahf
out
jae
bound
cwtl
xor
xchg
xchg
ret
jb
mov
js
call
ja
rcl
movsl
or
outsl
push
je
pop
leave
add
rcrl
mov
cld
mov
shll
movb
orb
lahf
xchg
lret
pop
pop
inc
pop
pop
into
mov
adcl
or
mov
adc
xor
xchg
mov
orl
popf
mov
adc
orb
jecxz
xchg
push
push
push
cli
decb
in
cltd
imulb
sti
rcrb
loope
xor
push
fwait
ljmp
lds
scas
cmp
iret
push
loopne
xchg
sbb
and
seto
aas
push
lret
js
mov
inc
stos
mov
add
stos
fs
aas
repnz
adc
push
fdivrs
lods
stc
sbb
imull
in
or
add
fnsave
push
cmp
imul
orl
int3
push
push
mov
lahf
fisttpll
lret
or
inc
sbb
insl
jb
movsb
dec
mov
mov
pop
jmp
mov
cmp
push
incl
mov
and
mov
sub
es
push
and
xchg
fcomps
push
rcll
push
outsl
inc
stos
repnz
ret
in
stos
dec
icebp
dec
or
ja
mov
xor
addr16
and
jg
test
push
insb
or
fimull
test
sbb
cmpsl
pop
insl
cmpsb
lret
jo
imul
xchg
cmp
add
dec
gs
sub
fcmovu
push
or
data16
cmp
addr16
popa
mov
xor
push
add
jle
xchg
xchg
in
lahf
gs
pop
scas
mov
decb
ret
sub
mov
dec
adc
or
jae
shll
xchg
in
sub
addr16
popl
stc
inc
xchg
leave
sub
xlat
data16
fidivrl
ret
jns
add
in
mov
cltd
pushf
arpl
sbb
xchg
jnp
rcll
pop
mov
xchg
sub
xchg
push
dec
xor
fldt
cmp
dec
cld
insl
inc
pushf
lds
pop
arpl
in
xchg
push
hlt
arpl
inc
or
testb
dec
mov
loope
arpl
and
ficomps
test
fwait
pop
fwait
sub
es
scas
xor
sti
adc
jge
mov
loopne
inc
ret
lahf
mov
inc
fisttps
cmpsl
xor
stc
mov
std
aam
test
xor
or
rcrb
push
orl
int3
repnz
dec
cmpsb
out
push
or
pop
or
jns
jp
sbb
or
jle
leave
out
sbb
and
out
icebp
push
mov
out
mov
mov
mov
fstpl
push
lret
or
rorb
stos
lret
out
xchg
xor
pop
fidivrs
cli
adc
pop
mov
xor
sbb
outsb
addb
ret
bound
jp
mov
fisttps
mov
sbb
jg
dec
fs
in
aas
and
push
jg
nop
inc
fs
xor
imul
jg
xor
dec
jno
dec
sub
inc
call
and
dec
fsub
lea
popa
jecxz
rcrb
cltd
mov
clc
push
xchg
dec
sbb
rcrl
out
cli
or
stc
loope
push
shrd
insl
dec
cmc
inc
push
jmp
stos
xorl
ficompl
ficoml
clc
in
push
xor
cmpsb
sub
test
loop
push
dec
pop
add
jb
aaa
mov
aaa
shrl
push
lds
xchg
mov
dec
pop
push
mov
jae
addr16
pop
hlt
leave
mov
push
dec
inc
and
gs
mov
aad
loopne
cli
jns
pop
or
insb
xor
sti
lret
inc
sbb
jne
bnd
adc
jmp
push
loope
test
addr16
shll
ljmp
loop
sbb
enter
scas
jecxz
xchg
mov
xor
xchg
and
xor
inc
insb
fstpt
mov
dec
cmc
fsubl
in
jmp
stos
lock
and
xchg
and
pop
rcll
lea
movsb
pushf
fadd
cld
or
mov
sar
dec
mov
sbb
repz
push
dec
inc
mov
mov
sti
fst
jae
ss
add
rolb
jmp
cmp
addb
lret
call
push
fxch
mov
ret
js
mov
fadds
adc
movsl
cld
jnp
xchg
nop
sub
cltd
dec
icebp
adc
int
adc
mov
jle
ljmp
mov
and
pop
clc
push
and
cli
mov
test
movsl
pushf
jle
in
in
or
mov
rolb
mov
loope
mov
jmp
adc
std
clc
dec
pusha
imul
jne
bound
popf
fcmovu
dec
cmpsl
sub
push
push
dec
and
mov
dec
idivl
scas
or
pop
sub
inc
in
xorl
jmp
xchg
je
xlat
les
xor
in
pop
imul
and
or
add
dec
push
xchg
push
aam
popa
push
push
xor
outsl
mov
jnp
stc
jnp
push
jmp
ja
pop
jg
stos
dec
bswap
add
push
xor
out
in
ret
fcomps
push
int3
cmpsl
add
push
adc
jmp
adc
out
sub
inc
fstpl
into
call
mov
sbb
dec
in
rorb
scas
xchg
out
or
mov
xchg
or
lahf
or
lret
pusha
push
xchg
cs
ret
xor
stos
movsl
push
or
push
mov
dec
js
bound
sub
je
pop
movsl
push
mov
push
dec
pushf
mov
or
pop
ret
xchg
fs
cmp
in
sbb
jl
aaa
cmp
adc
out
inc
pop
imul
jbe
pop
mov
out
sbb
rcll
jo
and
mov
inc
cs
push
and
int3
bound
cmpsl
pop
fstpt
call
mov
push
dec
lods
out
ljmp
out
adc
ficoms
pop
and
push
dec
push
push
dec
mov
cwtl
inc
aad
jge
out
jmp
aaa
gs
call
lea
ds
inc
loope
mov
mov
mov
in
dec
cmp
cmp
sbb
sti
stos
cmpsl
movsb
cmp
das
movsl
arpl
pop
js
in
iret
rolb
mov
ljmp
fisubs
jge
cmp
jmp
test
dec
insl
inc
jns
lret
movsl
xor
push
in
arpl
mov
sarl
enter
push
imul
gs
sti
adc
or
push
jns
dec
outsl
cmc
or
imul
jb
push
sbb
add
sub
jp
cmp
mov
pushf
sub
lods
push
icebp
jmp
shlb
gs
mov
and
out
pushf
cs
fdivrp
xchg
mov
jmp
add
leave
xchg
aaa
sbb
push
sub
inc
jp
cmp
push
aad
stc
int
imul
rcrb
out
filds
push
pop
lea
jbe
or
cwtl
lods
dec
pop
pop
xchg
in
sub
out
call
inc
push
cmc
and
imul
dec
out
ret
pusha
or
xchg
pop
cmc
and
sbb
out
je
dec
popf
sarl
icebp
dec
ret
lret
push
sbb
leave
bound
and
daa
adc
js
cmp
inc
cltd
dec
rcrb
cmpsl
mov
dec
jae
add
aad
push
pusha
clc
mov
adc
jge
xchg
push
hlt
sbb
xchg
cld
fwait
sbbl
cmp
leave
in
lret
and
jne
inc
mov
jo
push
add
aas
das
hlt
add
dec
xchg
jne
outsb
lret
pop
mov
adc
fcoms
push
mov
sbb
movsl
pop
lcall
adc
nop
sti
cmpsl
outsl
mov
dec
cmp
pusha
cmp
popa
movsl
dec
jp
fists
repnz
sbb
dec
or
iret
push
push
std
aam
push
loop
or
sti
scas
jmp
mov
in
jbe
movsl
ljmp
and
jge
mov
addr16
int3
push
dec
mov
jmp
movsb
addl
mov
mov
dec
inc
pop
push
jl
aad
push
jle
inc
ficomps
mov
inc
push
or
insl
pop
or
inc
dec
cwtl
xchg
dec
cmp
idiv
xor
mov
pop
jle
pop
xchg
ficompl
jb
pusha
and
inc
xor
pop
test
in
inc
mov
sbb
mov
jns
in
daa
pop
or
cmp
js
push
inc
repnz
cltd
inc
je
stc
movsl
pop
sub
cs
test
sbb
mov
cli
fadds
sbb
jp
add
mov
mov
je
das
pop
pushl
lret
mov
jo
mov
jg
ljmp
push
mov
mov
pop
inc
inc
push
dec
dec
mov
add
lea
mov
add
add
dec
inc
sub
lea
imul
inc
call
inc
dec
dec
sub
lea
mov
dec
inc
sub
dec
sub
lea
mov
add
sub
inc
dec
or
lea
movzwl
dec
inc
dec
add
call
xor
lea
mov
sub
add
inc
dec
xor
call
call
lea
push
mov
call
sub
add
call
dec
dec
add
lea
mov
dec
inc
dec
dec
pop
add
lea
mov
add
inc
pop
sub
inc
pop
add
xor
lea
mov
pop
dec
add
add
add
or
lea
mov
inc
pop
dec
inc
pop
inc
and
mov
lea
mov
call
add
add
inc
inc
ret
and
lea
push
mov
add
push
add
inc
push
inc
and
push
lea
mov
push
dec
inc
mov
inc
add
push
or
ret
push
lea
mov
sub
add
inc
push
dec
xor
push
lea
call
dec
dec
inc
inc
xor
lea
mov
inc
dec
jmp
lea
mov
dec
inc
inc
inc
dec
sub
mov
lea
mov
dec
sub
dec
add
cmp
jb
sub
xor
lea
imul
mov
dec
dec
mov
sub
inc
inc
add
lea
imul
dec
inc
sub
mov
sub
sub
cmp
jb
lea
mov
mov
dec
xor
dec
inc
xor
inc
or
pop
lea
mov
test
jbe
inc
add
inc
inc
or
lea
imul
add
dec
dec
inc
add
lea
mov
dec
dec
dec
inc
inc
sub
lea
mov
dec
add
and
dec
dec
mov
add
lea
movzbl
imul
sub
add
dec
dec
and
dec
add
mov
lea
mov
mov
dec
inc
mov
dec
add
mov
and
lea
sub
dec
inc
dec
jne
sub
mov
and
lea
mov
sub
inc
dec
inc
or
lea
mov
mov
dec
inc
inc
sub
add
lea
imul
inc
mov
inc
inc
test
jbe
inc
xor
lea
movswl
sub
inc
add
dec
and
lea
movzbl
inc
dec
inc
dec
inc
add
lea
movzbl
inc
dec
add
and
dec
xor
mov
lea
movzbl
movzbl
inc
inc
add
dec
dec
and
add
lea
mov
movzbl
sub
movzbl
sub
dec
mov
sub
jmp
inc
inc
add
lea
movzbl
dec
inc
sub
dec
or
pop
ret
push
lea
imul
add
inc
inc
add
xor
lea
sub
movsbl
dec
dec
dec
sub
add
lea
imul
inc
inc
inc
dec
or
lea
mov
inc
add
inc
dec
xor
lea
imul
dec
add
inc
push
add
or
push
lea
call
imul
push
sub
add
pop
inc
inc
mov
xor
lea
push
mov
dec
pop
add
sub
movzbl
inc
add
cmp
je
lea
imul
add
dec
add
dec
and
push
lea
movswl
dec
inc
push
sub
dec
push
or
lea
push
mov
call
inc
inc
sub
add
or
lea
mov
sub
inc
dec
inc
sub
lea
mov
dec
iret
inc
inc
pop
inc
ret
push
xor
push
lea
mov
mov
dec
sub
push
dec
add
add
push
lea
push
imul
call
sub
push
inc
dec
xor
inc
sub
lea
add
mov
mov
inc
inc
mov
inc
dec
test
je
add
lea
mov
inc
inc
add
inc
or
jmp
lea
mov
movswl
inc
dec
dec
dec
sub
lea
mov
repnz
inc
inc
add
dec
jmp
dec
xor
lea
movswl
dec
inc
inc
dec
add
lea
mov
add
pop
pop
ret
push
dec
add
dec
and
lea
movsbl
inc
inc
dec
inc
add
lea
dec
dec
add
add
and
lea
mov
add
dec
inc
dec
xor
lea
dec
pop
ret
sub
inc
mov
inc
add
mov
xor
lea
mov
mov
inc
mov
sub
add
xor
add
or
mov
lea
imul
inc
dec
dec
inc
dec
add
lea
cmp
jb
mov
push
inc
dec
push
inc
dec
push
and
lea
mov
mov
dec
xor
add
dec
xor
inc
add
xor
lea
push
add
inc
xor
add
dec
mov
and
lea
mov
imul
sub
movzbl
inc
add
add
xor
add
lea
mov
add
inc
dec
movzbl
dec
sub
add
jmp
and
mov
mov
mov
mov
es
xor
imul
imul
mov
mov
mov
out
jl
jecxz
sub
jmp
popf
ror
clc
scas
mov
data16
hlt
sbb
in
mov
sub
jnp
xor
jl
sbbb
int3
inc
jno
enter
scas
inc
pop
xchg
push
scas
clc
loopne
fucomi
in
dec
add
orl
sbb
mov
mov
andb
pop
mov
push
test
movsl
daa
das
lods
stos
in
xchg
lahf
push
dec
cli
mov
push
inc
sbb
inc
jnp
js
inc
push
pop
leave
mov
pop
and
jmp
cmpb
jnp
fwait
sub
xchg
or
xor
mov
imul
sub
dec
and
fdivl
lret
out
jbe
push
test
subl
dec
and
std
rclb
or
faddl
mov
inc
movsb
cwtl
fwait
add
loopne
inc
pop
mov
in
cmp
imul
jg
push
imul
gs
ljmp
mov
add
cltd
pop
in
jne
xor
mov
fwait
pop
stos
leave
pop
xor
fsubrs
int
mov
xor
mov
dec
sbbl
cmpsb
xor
xor
out
push
or
aas
lahf
rcrb
xor
dec
or
cwtl
scas
mov
pop
add
cld
mov
test
popa
inc
cmp
xchg
into
test
jo
adc
push
inc
or
mov
mov
or
xor
sbb
rclb
outsb
repnz
arpl
xor
loop
xchg
pop
and
inc
cld
insb
mov
iret
mov
mov
cli
pop
stos
rclb
call
xor
cltd
dec
xchg
sbbb
leave
mov
js
mov
loop
xchg
in
repnz
pop
aad
js
inc
fldl2e
cmp
mov
adcb
dec
test
jns
pop
cmp
gs
or
sbb
cmc
sbb
addb
or
xchg
in
mov
add
xchg
jne
xchg
addr16
sub
push
mov
ficomps
mov
icebp
add
inc
test
in
mov
mov
mov
sub
int3
orb
mov
sbb
mov
or
dec
push
testb
mov
test
xchg
cmpsl
fwait
insl
and
mov
mov
rcrb
inc
insl
es
or
repz
xor
leave
and
repnz
dec
jo
or
pop
call
inc
imul
fildl
insl
xchg
sbb
dec
mov
inc
jecxz
push
adc
inc
and
lret
xchg
fld1
lahf
mov
imul
je
mov
scas
fsubrl
cmpsb
sbb
cld
cld
xchg
pop
lret
lods
xchg
dec
lds
adc
stc
lcall
and
adc
sub
outsl
and
mov
cs
lret
mov
stos
imul
fstps
loopne
mov
pusha
arpl
fdivl
arpl
jge
xor
ds
lods
jbe
je
xor
and
sahf
cmc
pop
imulb
or
loopne
test
adc
sub
aad
imul
sbb
xchg
adc
mov
xor
notb
mov
add
stos
mov
imul
add
nop
cli
movsb
pop
jbe
or
dec
jnp
push
nop
out
enter
push
pop
pop
inc
stc
push
cs
xor
sbb
jo
jge
test
adc
lock
sbb
cmp
aaa
pop
loope
iret
mov
mov
das
mov
insl
lret
lahf
jg
andb
call
xchg
pop
call
pushf
fdivr
push
das
sub
adc
dec
xor
stos
lods
mov
add
call
aad
cwtl
sub
adc
jecxz
imul
in
add
mov
pop
out
lea
xchg
cmp
xchg
adc
cmp
lods
ret
jl
in
mov
or
loop
adc
imul
pop
inc
scas
sahf
lret
shll
mov
mov
fistpll
mov
fwait
or
sbb
popf
stos
out
sub
sbb
cmp
outsl
adc
loopne
adc
mov
inc
mov
in
sbb
push
mov
std
pop
pop
cmp
mov
and
cmp
mov
jle
ljmp
loope
xor
in
push
sbb
fmull
mov
setb
mov
mov
test
roll
cli
clc
nop
loope
and
pop
mov
xor
jnp
fldcw
lcall
dec
sub
cmc
clc
pop
lea
cld
movsl
ret
xlat
call
jge
lret
mov
jnp
add
cmp
cmp
icebp
lods
mov
mov
test
cmp
xlat
testl
mov
jge
cmpsb
sbb
sub
daa
mov
add
jns
xor
lahf
jno
mov
inc
add
enter
ja
xchg
cmp
clc
les
inc
xor
ror
xchg
ficoml
fisubl
pop
enter
lea
fwait
xchg
or
or
je
lahf
inc
xchg
mov
imul
rol
lahf
sbb
lret
xchg
pop
jmp
sarl
jle
imul
out
shrl
cld
mov
data16
roll
adc
add
into
fnstsw
push
inc
adc
mov
jl
pop
icebp
jne
popa
mov
xchg
mov
jbe
adc
loop
out
popa
ljmp
lock
mov
push
xchg
push
mov
in
mov
mov
xorb
or
sub
pop
add
and
insl
xor
xor
pop
sti
pop
add
rol
jb
add
incl
out
jb
aam
aad
cwtl
sub
testb
lcall
std
xor
mov
addr16
adc
scas
out
mov
shll
cmc
push
lods
sub
divl
jnp
or
outsl
add
clc
nop
sub
xchg
popa
add
test
jae
ljmp
fnstcw
lds
lock
cld
shlb
enter
push
scas
add
push
cmpsl
mov
les
incl
jl
jecxz
sahf
aad
into
sub
pop
push
popf
sub
cmp
or
push
sub
cmp
and
sbb
jle
pop
sbb
addr16
rcl
out
and
dec
fs
cmpsl
push
and
and
nop
xchg
adc
repnz
adc
aam
adc
dec
push
jmp
movb
dec
inc
cmp
cmp
cmp
mov
aam
addr16
mov
inc
push
ds
xchg
lock
out
lea
push
dec
dec
mov
popf
pop
sbb
aam
sub
gs
les
jg
fildll
out
add
lods
mov
imul
mov
mov
jl
ret
mov
mov
cmp
stos
clc
add
mov
hlt
mov
add
aam
mov
es
roll
call
mov
rolb
andl
adc
push
fidivs
push
xorb
fdivrl
cmpsb
test
lahf
es
iret
js
jo
inc
xchg
mov
test
les
pop
push
cld
cmp
lret
dec
xor
js
dec
mov
js
xchg
fwait
dec
data16
repz
pop
out
mov
aad
insl
lcall
add
sarb
outsl
cwtl
js
icebp
add
repz
stos
jp
mov
ljmp
and
test
lret
push
movsb
leave
outsb
push
test
int
push
stos
popf
jbe
lret
and
xor
sarl
xor
sub
test
cmc
jecxz
in
loopne
mov
xchg
xor
jl
je
push
push
ja
icebp
sbb
xchg
data16
aaa
pop
std
inc
add
xor
pop
cmc
xor
shrl
ret
dec
dec
jge
adc
xchg
jmp
popf
sbb
jno
inc
loope
cs
jp
pop
ljmp
cmp
lahf
pop
push
fistps
sbb
notb
mov
arpl
imul
dec
sub
add
sbb
dec
jne
dec
imul
idiv
sbb
jae
and
test
adc
mov
jmp
pop
push
push
enter
enter
sbb
pushf
jle
xchg
aaa
pop
add
cmp
mov
js
lcall
std
mov
and
or
dec
ret
fwait
sbb
pop
cmp
es
xchg
inc
and
and
pop
mov
scas
dec
addr16
pop
hlt
gs
cmc
fildll
es
lret
dec
xor
out
jno
nop
jmp
movb
pop
xor
cmp
add
or
testb
call
and
cltd
or
insb
rcll
jo
stc
popa
popf
adc
push
lahf
inc
nop
iret
cli
pop
sub
in
out
mov
in
ret
inc
out
sbb
xor
inc
orb
clc
pop
int
jle
push
dec
addl
and
cmp
push
dec
push
sbb
add
adc
cli
adc
and
xor
pop
jmp
test
inc
in
mov
dec
movsl
clc
pushf
sbb
std
cmc
pusha
jg
cmp
push
or
loopne
ret
pop
pop
xor
icebp
jmp
jae
insl
xchg
lcall
xlat
mov
and
mov
xor
mov
pusha
in
cwtl
mov
shl
xchg
xchg
jno
sahf
notl
sub
mov
gs
push
xor
ret
mov
ljmp
not
and
outsl
test
data16
adc
insb
xchg
push
mov
ret
ret
jecxz
je
pop
fisubrs
cmp
stc
mov
xchg
frstor
sub
je
cmpsl
ror
jo
rcr
push
add
mov
xchg
test
mov
mov
pop
lret
cwtl
dec
es
xchg
faddl
out
dec
outsb
or
and
lret
mov
lods
add
inc
das
clc
add
jl
mov
lret
mov
sub
and
insl
mov
adc
and
popa
sbb
in
aaa
lcall
add
mov
xchg
sbb
cld
inc
add
data16
mov
jne
mov
jge
and
add
test
xchg
lret
cmp
mov
fldenv
inc
cmp
xchg
out
sbb
cs
fucomip
f2xm1
test
add
pop
je
sar
imul
inc
mov
or
jb
fwait
and
jne
nop
les
jne
cwtl
adc
in
jmp
jae
sbb
mov
cmp
adc
mov
enter
push
and
dec
cmp
xor
aam
cld
mov
in
stos
pop
cmpsb
mov
les
pop
sub
pop
inc
fnsave
cmp
les
bound
adc
jno
paddd
pop
add
rcrb
mov
or
xor
sub
cltd
xchg
mov
jle
out
popa
lret
cmc
outsl
jmp
and
fwait
test
imul
jb
leave
pop
jg
mov
in
in
add
jb
popf
mov
mov
push
fdivrl
xchg
lods
add
movsb
iret
testb
adc
fsubrs
ss
xchg
push
imul
fstps
mov
mov
daa
into
cmp
outsl
arpl
xchg
xor
inc
shr
fstpt
mov
pusha
mov
outsb
mov
jno
xchg
shl
sbb
leave
inc
inc
aaa
and
mov
js
stos
jg
push
out
mov
dec
push
mov
scas
or
xchg
cmp
pusha
mov
cli
test
pop
dec
outsb
and
shrb
mov
pop
mov
ret
mov
inc
cs
bound
dec
sbb
out
add
xor
aad
sub
sub
test
pop
pop
xchg
mov
loop
ret
mov
hlt
xor
movsl
scas
mov
mov
ja
lret
add
enter
leave
aad
xchg
push
adc
imul
sub
aam
sub
adc
push
pop
mov
mov
pop
push
xlat
fcmovne
pop
push
dec
mov
jmp
jecxz
and
in
or
lret
stos
inc
shrb
mov
loopne
and
add
jmp
pusha
and
aam
dec
pop
imul
out
dec
aaa
stc
dec
xor
xor
mov
stc
pop
pop
bound
jmp
mov
neg
xchg
es
je
int3
jae
sbb
pop
and
adc
mov
inc
pop
mov
jecxz
mov
xlat
int
and
std
pop
xchg
mov
iret
jnp
mov
scas
mov
inc
push
fldl
mov
sbb
shll
xchg
test
mov
dec
pop
out
dec
sbb
popf
cmpl
popa
pop
xor
fs
cmc
lret
pop
mov
pop
sub
repz
dec
hlt
cmp
insl
dec
push
jae
shlb
jge
adc
mov
inc
notb
inc
and
fiaddl
mov
subl
test
out
pop
xchg
sub
pop
in
stos
ret
mov
les
fcomip
scas
pusha
mov
sub
mov
pop
and
adc
fldt
xor
into
mov
inc
adc
imull
cmp
mov
stos
xchg
sahf
push
cmc
aam
push
lahf
xchg
insl
adc
mov
test
jb
xchg
xor
xchg
punpcklwd
mov
stos
cmc
push
idivl
rcrl
sub
pop
pushf
and
pop
daa
sbb
mov
adc
push
inc
sbb
ret
dec
sti
push
cmpsl
add
pop
sub
test
pop
jnp
jge
mov
neg
and
dec
movups
andb
out
pop
dec
popf
movsb
lret
and
aad
shll
jge
mov
adc
pop
mov
push
out
pop
push
fnsetpm(287
rol
mov
ss
mov
call
aas
push
xor
adc
dec
and
dec
std
sbb
insl
mov
shll
inc
in
xor
andb
push
adc
jg
jmp
mov
fldt
clc
addr16
lock
mov
pop
lds
add
and
xchg
insl
roll
fisttpll
mov
pop
fbstp
and
push
push
out
rcl
clc
jne
and
pmulhuw
addr16
mov
and
mov
cmpsl
xchg
lret
sub
inc
daa
insl
lds
js
mov
lret
push
mov
ss
fcoms
ret
push
pop
aad
sbb
ss
cmp
shl
push
xorb
or
mov
or
push
out
mov
xor
cmc
jge
adc
pop
lods
ja
test
push
cld
icebp
dec
mov
gs
loopne
add
push
mov
in
mov
daa
outsl
inc
insb
or
fwait
add
jnp
jp
xor
ret
jae
jle
or
cmc
adc
mov
mov
cltd
push
js
mov
pusha
lahf
idiv
pop
pop
lahf
out
lods
sbb
call
lret
loop
mov
in
mov
jmp
xchg
xchg
lcall
inc
repnz
mov
jo
mov
sub
inc
insl
je
mov
cmp
xchg
es
lahf
mov
fstp
xor
daa
out
pop
imulb
shll
cmp
das
aad
inc
scas
sti
lcall
scas
xchg
sbb
dec
jl
dec
lock
pop
xchg
mov
addl
xchg
aad
in
xor
cmp
pop
xchg
cmp
mov
repnz
cltd
mov
xorl
adc
scas
popa
push
mov
in
sbb
ret
lcall
pop
mov
push
loop
rcll
sbb
add
lods
repz
jbe
push
out
stos
int
inc
mov
test
cmc
cmpsl
or
cs
xor
xchg
mov
in
fidivrl
in
pop
fdivrl
fldl
xor
rcr
add
sub
mov
stos
dec
lret
pop
rorl
ret
mov
push
inc
out
shl
push
and
mov
pop
sarl
pop
mov
aad
mov
daa
insb
cmc
repnz
outsl
orl
xor
js
es
pusha
mov
xchg
xchg
fs
addr16
lods
loop,pn
and
mov
mov
mov
int3
out
mov
mov
sub
bound
mov
push
outsb
lret
shl
or
dec
lods
or
add
or
xchg
xlat
lcall
jbe
dec
cltd
enter
sbb
addr16
jo
pop
scas
movsl
pmaddwd
les
cmp
int3
mov
pop
or
scas
ficoms
out
pop
jmp
sub
cmpsl
xor
inc
xor
les
mov
inc
loop
stos
push
jle
pop
je
bound
in
sub
lret
sbb
cmp
sbb
pusha
xor
cmc
pushf
stos
and
int3
cmp
or
mov
insl
fwait
and
cld
lahf
enter
lea
sahf
test
sbb
and
adc
dec
xchg
nop
xchg
mov
mov
lds
outsl
std
imul
pop
dec
pusha
aam
jg
faddl
pop
test
pop
dec
test
stos
je
add
mov
pop
movsb
outsl
sbb
in
mov
xor
and
lahf
dec
pop
and
je
cmpsb
jae
push
dec
fstpl
js
add
lret
mov
adc
push
in
cmp
add
xchg
push
adc
adc
jle
rcrb
sbb
add
jle
imul
and
adc
scas
insb
sbb
popa
test
inc
icebp
in
shlb
shrb
outsl
xchg
mov
fnstsw
data16
xchg
mov
fiaddl
lds
repnz
mov
inc
leave
cmp
mov
pop
inc
jo
into
and
decl
popf
ds
loopne
or
dec
loopne
pushf
add
inc
adc
mov
fsts
push
fsubrl
cwtl
subl
outsb
iret
mov
jne
pop
stos
or
cwtl
fld
aas
and
sub
shll
inc
cmpsb
mov
xchg
fwait
mov
addl
cld
xchg
jmp
xorb
sub
lods
xor
and
push
and
hlt
inc
sub
sub
mov
xchg
xchg
or
cmpsb
mov
fnstenv
push
adc
xor
sub
scas
shll
jbe
outsb
add
lods
lds
xlat
jg
fcomps
clc
mov
xor
stos
ds
loope
inc
call
out
dec
mov
popa
jb
lods
mov
repz
ret
jo
gs
adc
jmp
add
or
jmp
mov
pop
jecxz
inc
fimull
xlat
mov
and
xchg
mov
fwait
lahf
mov
mov
insb
outsl
test
cmp
xor
gs
mov
xchg
imul
popl
int3
or
or
inc
pushf
sbb
out
mov
outsb
xchg
sbb
pop
loope
insl
push
lahf
mov
rolb
jno
or
ret
dec
fdivrl
sbb
mov
stos
or
cwtl
aam
push
icebp
pop
test
scas
add
mov
test
int
jg
shll
movsl
test
ror
test
sahf
rcll
mov
pop
out
lcall
mov
push
cmc
adc
jp
mov
sti
stos
jb
out
push
sbb
mull
scas
mov
jne
jae
or
nop
lds
test
add
ljmp
mov
pop
mov
cltd
mov
push
sar
ficompl
out
dec
sub
mov
cmp
ret
outsl
sub
dec
sbb
xchg
pop
push
sub
les
adc
insl
aaa
dec
dec
cmp
and
fs
jge
lods
or
add
and
incb
in
mov
push
cmp
test
push
or
rcll
xchg
push
inc
movb
loope
mov
adc
loop
nop
iret
or
aam
mov
rcrl
stos
shrl
cmpb
inc
int3
cmp
leave
jp
adc
lods
loopne
imul
cs
xchg
mov
ja
insb
fwait
mov
lret
inc
jae
jg
into
lods
out
lcall
mov
int3
lock
pop
test
fdivrs
inc
adc
rcrb
dec
into
jg
push
stc
or
sahf
insb
dec
mov
mov
lods
and
leave
fistps
and
mov
imul
push
push
jp
xchg
push
dec
push
insb
idiv
popa
pop
mov
std
imulb
inc
pop
xor
movsb
mov
rcll
popa
mov
mov
inc
sahf
leave
xor
cmp
mov
xchg
gs
fldl
fildl
sub
dec
jnp
mov
add
insb
loopne
test
mov
inc
cmp
fsts
add
fwait
lahf
cmp
jl
dec
pop
in
repnz
sbb
pop
insb
xchg
jae
mov
or
aas
fld
in
test
inc
outsl
mov
pop
add
and
and
jbe
mov
mulps
in
ret
and
pop
xchg
push
mov
hlt
into
cld
mov
pop
incb
addr16
scas
cwtl
popa
call
pop
add
mov
out
xchg
nop
cli
jge
dec
cmp
jno
mov
mov
icebp
dec
xchg
imul
faddl
adc
and
pop
sbb
push
xor
mov
loop
addr16
adc
pop
aaa
rcr
addb
push
pop
nop
push
xor
xchg
test
xlat
lods
and
mov
jno
add
das
jne
mov
inc
pop
sub
insb
popl
popa
sarb
repz
push
lea
lods
and
jmp
stos
aam
stc
stc
ss
ss
les
pop
jbe
cs
adc
pop
cmp
fcoml
xchg
mov
push
xchg
dec
xlat
jae
icebp
inc
mov
je
sahf
add
xor
dec
mov
dec
and
or
daa
imul
and
in
mov
rcrl
test
fstps
je
mov
pusha
ljmp
pop
mov
lds
add
pushw
dec
test
push
add
ljmp
jecxz
pop
scas
ljmp
adc
jle
idivl
jbe
test
enter
jmp
lcall
push
enter
inc
jns
mov
add
dec
subl
jge
sbb
bound
push
mov
jmp
rorl
or
jecxz
lea
fmulp
pushf
jl
sub
aad
pusha
mov
movsl
dec
pusha
pop
repz
cmp
subl
arpl
mov
inc
ds
xor
inc
xchg
js
lret
mov
mov
dec
inc
cmp
push
mov
xor
xorl
dec
mov
pop
adc
gs
jnp
outsb
mov
sahf
pusha
or
clc
lcall
mov
inc
pop
in
dec
sbb
les
xchg
inc
loope
push
faddl
and
xor
and
lea
lret
inc
adc
or
inc
lock
fisubrl
std
imul
clc
into
ss
outsb
pop
movl
repz
das
xlat
xchg
add
imul
mov
dec
or
test
xchg
pusha
cs
orps
mov
mov
in
fiaddl
ds
ss
icebp
out
jnp
stc
ret
in
int3
push
pop
pop
ljmp
fmuls
ret
das
push
xor
mov
mov
and
mov
mov
jp
xchg
sbb
loope
imul
sub
pusha
lods
leave
push
idivb
test
push
das
inc
dec
push
mov
xor
xchg
dec
xor
inc
daa
inc
mov
inc
cmp
not
pop
fcomip
imul
cld
imul
je
adc
push
mov
lahf
je
jbe
mov
jno
arpl
push
stc
out
mov
scas
shlb
in
or
jl
mov
add
ja
pushf
mov
xor
dec
or
ret
xchg
mov
int3
lret
add
lahf
fldt
pop
push
push
mov
inc
aaa
mov
jne
shrb
fst
xorl
lock
fadds
lods
pop
jne
iret
sub
fdivl
mov
lock
sbb
popf
mov
push
dec
jnp
insb
popa
stos
inc
sbb
xlat
popa
inc
clc
add
push
sbb
subl
xor
stos
ds
sub
or
daa
or
xchg
push
pop
out
in
push
pop
dec
xor
fisttpl
inc
int3
xchg
in
fildl
xchg
clc
roll
pop
ja
out
sub
xchg
pop
imul
push
dec
jns
adc
mov
push
call
inc
repnz
or
divl
push
dec
outsb
and
push
test
push
fidivl
lods
or
hlt
sbb
push
pop
fcmovnu
sbb
cld
adc
scas
and
adc
xor
loopne
sub
mov
pusha
mov
sub
movsb
xor
rcrb
cmp
dec
out
ds
pop
sti
cltd
test
pop
jo
popa
mov
jnp
mov
adc
inc
dec
mov
das
ljmp
outsl
jb
jne
cmp
in
cmp
out
mov
or
hlt
sbb
mov
cmc
dec
sbb
aas
push
adc
jb
jg
sbb
adc
push
ss
popl
imul
mov
ficoml
cmc
or
sbb
rol
mov
mov
insb
gs
inc
in
std
mov
fdivrp
push
sbb
or
aam
loop
imul
lea
jp
stos
and
and
add
sbb
test
ss
pop
jbe
push
mov
lahf
and
inc
xor
push
pop
imul
sub
cld
xor
mov
in
je
cwtl
inc
imul
iret
stos
fiaddl
lahf
or
ret
lret
pushf
sub
dec
pop
filds
add
jns
dec
dec
orl
orb
jmp
and
jge
xor
insl
cmp
xlat
cmpsl
xchg
pusha
outsb
pusha
mov
xor
dec
lret
imul
xchg
out
push
shll
or
pop
push
mov
jns
ret
jb
and
mov
cwtl
mov
das
sbb
dec
cmp
xchg
es
sub
insl
xor
sahf
xchg
xchg
push
pop
stos
ret
in
pop
fdivrl
mov
mov
out
in
dec
shlb
out
insb
lods
rclb
and
imul
insl
xor
or
inc
xor
xchg
out
clc
notb
push
lock
inc
cltd
dec
sub
sbb
xlat
jo
pop
sub
aas
pop
int
xor
je
lock
dec
lds
dec
jecxz
mov
adc
mov
les
cmpsb
in
adcl
in
icebp
ja
pop
cli
push
pop
subb
and
test
fwait
mov
and
xchg
adcb
bound
aad
icebp
sub
aaa
dec
aas
or
xor
notb
iret
xor
xor
lret
and
clc
fstpt
xchg
xor
add
adc
and
movsb
pop
rcr
insl
xchg
cmpb
fcmovb
add
mov
xor
xor
mov
mov
mov
push
icebp
sbb
lahf
inc
jle
test
fcomip
jecxz
mov
mov
sub
inc
dec
push
fld
jnp
xchg
scas
or
adc
js
test
or
dec
dec
outsl
jle
sub
mov
std
test
pop
out
xchg
rcrl
push
mov
aad
mov
sbb
cmp
out
cmp
movsl
stc
xchg
push
ret
push
mov
inc
mov
sbb
pop
xchg
dec
movsb
sbb
xchg
jbe
cmpl
inc
pop
das
inc
nop
mov
imul
mov
outsb
std
jae
rolb
fdivr
cmc
pop
jp
cmc
xchg
icebp
clc
mov
push
add
mov
xchg
out
and
in
mull
pop
mov
cmpsl
sahf
ss
leave
mov
ds
xor
jae
jp
push
mov
jg
cmp
inc
xchg
jns
cli
or
hlt
fdivp
aad
arpl
scas
ret
mov
mull
sbb
roll
mov
push
cwtl
mov
mov
sbb
xor
dec
sbb
sbb
mov
or
mov
pop
dec
arpl
mov
std
mov
pop
in
iret
mov
ds
sub
pop
xor
add
inc
dec
shll
cltd
hlt
push
push
pusha
sbb
shrl
xor
cmpb
push
push
push
fsubl
sub
ret
imul
lds
popf
or
pop
es
iret
or
loopne
les
fcomip
fs
insl
pop
adc
or
arpl
jg
aam
out
fildl
mov
push
xchg
pop
shlb
std
dec
mov
mov
mov
mov
psrlq
stc
das
push
mov
inc
mov
sub
loop
jnp
sub
mov
xchg
stos
rorl
xlat
add
dec
or
pushf
dec
lcall
gs
loopne
lea
notl
pop
sbb
push
ja
out
sub
addb
inc
or
or
cmp
imul
push
into
jg
fdivs
sbb
out
jle
mov
loope
lret
push
int3
mov
bound
add
and
push
stos
jne
sbb
fstpt
scas
shll
nop
arpl
inc
daa
pop
hlt
push
and
lea
mov
jb
cmp
sub
out
aas
push
aas
pop
mov
ret
loop
jno
mov
jbe
fwait
add
xor
adc
add
mov
pop
stc
push
xor
outsb
or
mov
out
movsl
lods
lock
jb
add
jb
out
stos
inc
cld
pushf
add
enter
hlt
pcmpgtd
sub
loopne
test
dec
xor
fldt
imulb
aas
and
and
and
mov
insb
adc
and
cmpb
pop
mov
ret
loop,pn
bound
sub
icebp
pushf
int3
mov
jbe
mov
mov
dec
pop
dec
pop
or
mov
scas
adc
popf
add
cld
mov
mov
movsb
imul
daa
or
mov
in
hlt
movl
jo,pn
jecxz
sub
mov
in
stos
mov
or
popf
jno
ljmp
loop
fs
dec
xchg
gs
inc
js
aaa
sub
mov
fnstenv
jecxz
out
inc
stc
pop
loop
mov
pop
pop
sbb
dec
mov
cmp
xor
sub
out
aaa
mov
ds
ss
sbb
es
lds
je
insl
xor
out
adc
pop
pushf
jp
std
dec
stos
out
mov
rcr
sbb
or
mov
shll
adc
jne
mov
lock
sbb
hlt
leave
ds
push
lcall
sub
test
xor
test
mov
jle
clc
mov
fadds
ret
cmp
das
and
nop
and
insb
sub
xor
sti
shr
mov
jg
mov
pop
std
push
and
sbb
out
mov
and
pop
xor
mov
dec
cmp
inc
and
adc
mov
xchg
insb
pop
add
jne
push
fucomi
add
ret
lds
push
xor
icebp
xor
lods
xchg
inc
cmp
mov
stos
aaa
cli
jbe
sbb
sbb
cmp
push
sti
mov
adc
jecxz
mov
inc
mov
and
in
cmp
cmp
mov
jmp
cmp
and
cmpsb
pop
push
or
ss
xlat
lods
xchg
mov
xchg
cmpsb
lret
push
mov
popf
pop
xchg
pop
mov
jb
jmp
mov
leave
sbb
xchg
sbb
mov
push
jno
vpcmpeqd
jnp
jne
dec
aas
jnp
jl
cmpsl
xchg
adc
jp
repz
push
ret
imull
and
mov
pop
sahf
sub
and
xchg
mov
in
pop
bound
pusha
mov
and
popf
int3
add
fwait
jo
inc
xchg
ds
xchg
nop
fstpt
mov
dec
enter
cli
mov
mov
mov
in
cmp
aas
jl
xlat
cmp
and
out
incl
or
xorl
stc
jno
hlt
arpl
call
icebp
xchg
add
pop
fnstsw
sahf
shrb
rcr
add
adcb
push
insb
inc
popa
dec
xchg
arpl
xchg
push
mov
or
hlt
lea
rclb
mov
test
mov
lahf
cmp
out
pop
xchg
inc
pusha
jbe
mov
mov
add
loop
mov
inc
add
pop
adc
dec
push
pushf
arpl
repnz
xchg
fmuls
adc
mov
test
cmp
xchg
push
add
shrl
shrl
out
xor
xchg
xchg
jg
std
into
cmp
cmp
mov
mov
jae
sub
jae
aaa
out
dec
gs
iret
cmp
enter
pusha
and
insb
sbb
les
cwtl
or
inc
push
xchg
xor
xchg
inc
sbb
popf
sbb
int3
sahf
xor
inc
repz
movsb
jnp
shll
mov
cmc
fiaddl
pop
leave
jno
divb
test
jp
add
pop
mov
cmc
into
gs
push
inc
ret
adc
mov
mov
xchg
jbe
inc
rcl
mov
insl
lret
fnstenv
stos
add
arpl
xchg
sti
add
sbb
push
cltd
jnp
xchg
sub
in
aaa
and
push
dec
mov
push
dec
mov
mov
inc
sbb
mov
pop
subl
or
xor
test
ficomps
ret
repz
das
pop
inc
ljmp
in
movsb
jb
imul
enter
mov
inc
lods
cwtl
scas
cld
aad
test
push
orb
or
inc
sti
pop
xchg
and
out
shl
sbb
shr
imul
xchg
cmp
pop
into
cmc
pop
push
in
pop
xor
mov
push
jmp
pop
jmp
movsl
cmp
es
pop
push
mov
add
mov
add
mov
fdivl
push
add
les
es
cs
inc
mov
stc
jne
leave
sbb
les
clc
push
mov
insb
jecxz
nop
lds
mov
jmp
test
or
adc
int
notl
es
repnz
pop
sti
mov
sbb
gs
mov
pop
stc
loopne
pop
rclb
lret
jae
cmp
shrb
inc
shlb
arpl
or
lods
sahf
cmp
pop
imul
dec
inc
lahf
std
xchg
lock
mov
jbe
ljmp
stos
xor
push
xchg
stc
popf
arpl
je
cmp
jg
imulb
adc
ljmp
out
pop
bound
sbb
add
ret
lock
add
xchg
mov
push
fidivl
pusha
dec
push
addb
xor
jl
bound
jmp
std
or
lods
adc
dec
xchg
push
lret
sar
in
aas
aad
dec
mov
push
iret
jb
xor
cmpsb
jmp
lcall
popf
pop
pop
xchg
dec
or
ss
or
jne
sub
cmp
inc
sub
jno
jno
dec
sar
push
fldl
jmp
cli
add
imull
fsubrs
in
inc
stc
pop
mov
push
test
cmp
test
pop
aam
mov
xchg
int
push
pusha
shl
mov
jae
clc
lods
adc
mov
adc
xor
ror
pop
sub
imul
push
lcall
movsb
sub
sub
in
sub
out
loop
pop
lock
inc
ss
xchg
cmpsb
cmp
sub
sub
cli
inc
jle
in
mov
jo
test
or
sub
gs
clc
lcall
sbb
mov
rcll
iret
pop
sub
sbb
cli
or
xor
fnstsw
jg
ss
xlat
outsl
loopne
cmp
pusha
cmp
mov
and
dec
sarb
dec
mov
add
imul
adc
cmp
xchg
stc
repz
loop
jb
and
clc
xchg
cmp
push
add
lahf
mov
cmp
lds
lahf
xor
lods
aad
mov
les
imul
fwait
stos
fsubp
inc
inc
outsb
pop
pop
sarb
out
cmc
push
fcompl
mov
mov
jno
mov
jbe
dec
loope
int
in
test
icebp
and
cmp
sbb
enter
inc
lds
and
sub
aam
mov
mov
outsl
adc
lcall
js
xchg
xchg
sub
out
outsl
adc
pushf
or
mov
cmpsl
or
testb
mov
push
lret
mov
data16
xchg
jbe
and
sahf
jge
dec
addr16
mov
push
fiadds
test
popa
xchg
and
cwtl
sbb
mov
enter
adc
push
loop
sahf
cmpsb
push
pop
xlat
out
mov
shr
int
insb
mov
and
sti
out
testb
jmp
pop
scas
sbb
fwait
cld
fs
mov
jecxz
and
mov
cmp
cmc
xor
call
and
aaa
dec
fldt
cld
jns
leave
mov
mov
in
or
sub
ret
imull
pop
mov
std
mov
and
aaa
nop
lahf
scas
pusha
cli
dec
mov
fcoml
mov
push
cmc
inc
dec
mov
dec
mov
mov
cld
adc
dec
mov
jmp
or
sbb
test
outsl
xor
xchg
pop
or
fnstenv
mov
leave
push
movsl
in
xor
lds
movl
pop
sbb
adc
cmpsl
addb
ja
pop
int3
xchg
andb
pushf
cmc
loop
rcrl
das
inc
mov
loopne
dec
sub
cmp
cmp
jp
aaa
fidivs
das
push
dec
movsl
fisubrl
dec
cmp
lcall
imul
inc
add
push
cmp
mov
shrl
std
movsl
loop
pop
adc
jmp
loope
outsl
inc
sbb
addb
cmpsl
mov
push
mov
mov
jp
cmp
sbb
je
xchg
fdivp
sti
jns
daa
bound
in
and
test
and
popa
dec
xor
inc
or
jecxz
mov
xchg
dec
sub
pop
imul
dec
sbb
int
sbbl
xchg
das
sub
mov
xchg
cmp
adc
pop
arpl
orb
adc
enter
fldpi
loope
push
adc
or
cwtl
lods
dec
pop
sbb
andb
aaa
nop
lods
lock
cmp
cmp
fdivs
mov
movsb
and
xor
push
movsb
or
mov
push
push
fyl2xp1
cmp
rcrl
arpl
dec
sbb
das
jl
push
outsl
jb
mov
inc
mov
push
adc
movsb
push
addr16
outsl
js
lret
xor
repnz
cltd
mov
pop
dec
leave
and
mov
int
cmp
and
aas
jo
or
cld
cmp
xor
or
jecxz
sub
movsb
icebp
sbb
xchg
rorl
movsb
adc
add
adc
pop
enter
in
shr
in
jo
dec
outsl
inc
and
roll
or
mov
jle
sbb
inc
inc
out
test
xor
pop
inc
fisubl
fnsave
scas
jo
or
in
inc
gs
pop
cmp
sbb
lcall
call
jne
call
inc
xchg
lock
sub
cmp
loop
lock
mov
out
lret
mov
push
push
push
rclb
add
pop
out
push
mov
inc
scas
lods
out
pop
mov
jb
sbb
xchg
push
ficoms
mov
sbb
cmpsl
jl
jno
dec
add
and
sbb
ret
pcmpeqw
adc
sbb
add
xlat
cmp
xlat
mov
scas
dec
xchg
std
clc
jb
outsl
inc
mov
cmp
out
mov
xor
mov
dec
loop
or
mov
ljmp
mov
fstpt
cmp
push
jecxz
outsb
sbb
jg
stos
testb
jecxz
mov
fwait
addr16
fstp
push
roll
jbe
pop
dec
mov
xor
lea
cmp
push
mov
pop
dec
pop
inc
dec
jmp
imul
mov
mov
push
pop
push
daa
addl
rcr
xor
ljmp
xor
sub
lods
insl
cmpsb
cs
repz
sub
lret
pop
push
or
jg
jg
jne
add
push
mov
adc
test
xchg
jle
or
lock
popa
sbb
in
mov
xchg
push
movl
pop
xchg
dec
inc
andb
push
add
push
hlt
pusha
inc
xlat
push
gs
xor
mov
push
mov
lret
loope
mov
mov
xor
jg
xlat
mov
pop
and
mov
outsb
add
mov
lret
mov
pop
cli
adcb
push
add
inc
in
outsl
je
or
fidivrs
das
xor
mov
mov
sbb
dec
in
mov
and
xor
aaa
pop
jae
sub
jp
inc
rclb
loope
add
xchg
fdivl
ja
xchg
aam
dec
imul
or
iret
cmpsl
ss
cld
dec
sub
mov
ret
nop
icebp
add
xor
into
pop
cmp
in
repz
test
add
paddw
je
sub
lods
adc
lret
rolb
outsl
dec
jno
jl
mov
data16
test
add
scas
add
rep
lahf
scas
adcl
test
or
inc
or
sub
lret
test
mov
mov
pusha
and
jnp
xchg
lcall
cwtl
add
dec
xchg
cmp
pushf
push
jb
int
out
jge
fsubs
jge
subb
jnp
push
sbb
int
movsb
mov
dec
sbb
xor
xor
sub
xchg
sahf
lods
add
xchg
enter
adc
push
xchg
sbb
test
mov
psadbw
adc
or
hlt
movsl
add
loope
incl
inc
add
cmp
or
scas
push
bound
mov
loopne
sbb
mov
push
or
into
or
or
rcrb
dec
xchg
fistl
cmc
imul
shlb
xchg
das
rorl
xchg
and
cld
es
nop
inc
or
adc
sahf
adc
lods
sbb
pushl
int
pusha
inc
bound
pop
or
scas
or
xchg
lret
pop
andb
jo
xor
add
call
mov
pop
mov
mov
push
mov
xchg
rcr
cmp
cmp
ljmp
ficompl
cmp
mov
test
in
fcomi
fimull
insl
icebp
scas
push
fstps
jp
incb
hlt
les
push
sub
lock
and
movsb
js
inc
push
loop
fucomi
sti
test
int3
mov
jns
xchg
dec
xchg
in
push
test
fidivrs
enter
out
dec
sub
push
jmp
pop
inc
ljmp
pushf
lods
mov
dec
test
insb
xor
mov
cltd
pcmpgtb
adc
pop
push
cld
pop
push
andl
mov
or
rcpps
sbbl
xor
adc
cwtl
out
cmpsl
cmp
cmp
jnp
xlat
xchg
ja
mov
jnp
cmpsl
imul
xchg
enter
xchg
aas
rolb
out
jno
cmpsl
or
hlt
xchg
outsb
and
jbe
testb
push
sti
mov
test
out
int3
cmp
dec
dec
or
add
xchg
out
lretw
push
into
push
lods
jne
add
sub
mov
cmp
sbb
sub
jnp
jnp
xor
dec
inc
jnp
in
inc
ja
fdivrs
pop
mov
xchg
mov
inc
scas
adcl
or
push
fldl
xor
xor
jmp
sbb
cmp
jbe
cmc
sti
pop
xor
shll
mov
inc
bound
roll
jp
jnp
lds
mov
popf
jo
add
cmp
daa
stos
xor
test
or
sbb
ss
dec
cli
lods
fimuls
fcomps
out
sbbl
shr
repnz
mov
std
rorb
xchg
jns
fxtract
cmpsb
xchg
and
or
cs
lods
je
adc
xchg
dec
sub
mov
arpl
lret
jp
lret
sub
jmp
movb
icebp
add
scas
nop
xlat
cli
mov
jp
rorb
or
movsb
jl
out
pop
jno
scas
outsl
pop
mov
aad
push
sbb
sbb
xchg
cltd
test
pushf
pop
mov
movb
dec
das
fstps
add
xor
lods
popf
cmpb
mov
mov
push
push
rol
movsl
mov
mov
fnstcw
ja
sahf
sub
icebp
inc
pusha
cld
test
imul
daa
fdivs
mov
in
pushf
popa
add
add
mov
rcrb
xchg
lods
jle
out
ret
mov
int
enter
jae
out
nop
sbb
cs
mov
test
out
lret
jle
ds
push
std
and
mov
std
ret
pop
dec
fidivrl
jne
movsl
cmp
cmpl
gs
popf
mov
loope
pushf
push
cmpsb
loop
sbb
leave
leave
dec
sti
popa
sbb
lcall
pop
mov
bound
in
push
adc
inc
imul
and
enter
aam
popa
mov
pop
mov
pop
xor
inc
mov
negl
les
sahf
rclb
dec
or
pop
std
sub
mov
imul
inc
fadd
mov
push
subb
push
jns
or
dec
inc
scas
pop
sbb
jmp
iret
sbbl
movsb
aaa
or
in
cli
add
sbb
imull
xchg
mov
mov
sbb
mov
dec
mov
ljmp
add
mov
sub
mov
or
jbe
in
test
mov
sub
lock
sbb
xor
test
mov
cmpb
js
je
addb
ljmp
adc
clc
pop
sub
push
jo
lret
sahf
cmp
aaa
and
ljmp
cli
popf
arpl
stos
je
jne
adc
and
inc
mov
push
test
jmp
mov
jmp
sbb
nop
sbb
sbb
jbe
xchg
stos
cmp
push
cmpsb
popa
mov
xchg
and
adc
out
dec
mov
cld
dec
fs
lea
imul
adcl
pop
loopne
sub
or
sub
or
iret
lods
pop
stos
sub
cld
lods
sbb
sti
sub
aad
cltd
cmc
and
fwait
sbb
mov
mov
push
and
ljmp
xchg
push
flds
mov
push
cmpsb
aam
inc
jle
mov
arpl
fdivrl
into
cmpsl
lret
mov
add
jle
aad
stos
std
sbb
xchg
jns
push
pop
dec
outsb
shll
mov
mov
xor
pop
dec
mov
mov
cld
leave
mov
sub
cmp
mov
mov
ficomps
xchg
inc
pop
add
addr16
adc
sti
push
push
shl
push
dec
fldenv
sub
mov
imul
pushf
jl
pop
mov
add
mov
adc
adc
xor
or
cmpsb
les
in
imul
adc
shl
cmc
cmc
lock
mov
rorb
xlat
rcrl
xor
xor
add
add
das
repnz
lds
sbb
mov
mov
cmp
sbb
pop
ljmp
movsl
repnz
or
cmpsb
add
xor
cli
push
mov
mov
fnstsw
sbb
add
push
movsb
mov
sbb
in
cwtl
int
mov
movsb
jg
clc
cld
pop
xchg
in
lcall
pusha
lea
sub
fmul
add
cwtl
cmp
and
imulb
xchg
sbb
lea
mov
sbb
out
jp
push
ja
shrb
movsl
jnp
or
inc
inc
pop
jns
ret
in
and
adc
dec
adc
bound
call
lahf
or
lret
out
push
insb
mov
fs
out
sbb
mov
cwtl
lret
pop
push
cmovne
sbb
jmp
test
or
mov
jnp
mov
jne
and
or
movsb
lea
sub
mov
xor
das
inc
mov
push
scas
insb
shrl
xor
push
and
nop
push
pop
dec
ljmp
mov
push
mov
mov
jns
dec
cmp
test
cmpsb
sbb
testl
jmp
adc
aas
scas
cmpsl
inc
push
sbb
adc
and
fisttpll
and
mov
mov
jbe
jle
mov
add
lock
ss
or
ljmp
jo
jae
lret
push
ret
subb
loop
xchg
stos
pop
inc
mov
mov
jns
xchg
arpl
inc
jns
jle
mov
or
insl
sbb
mov
and
mov
sbb
jecxz,pt
push
pop
enter
rcr
fsub
imul
fidivrl
push
add
cmc
jnp
hlt
xchg
push
push
rcl
push
sub
sub
mov
push
imul
add
mov
stos
jae
cli
cmpsl
movsl
cwtl
call
mov
rcl
mov
cwtl
jge
sub
or
cld
cmp
push
clc
lods
push
cmp
dec
gs
add
inc
inc
pop
fs
cmpb
jne
sbbl
add
push
aam
xor
adc
les
sub
mov
aaa
enter
stos
loop
lds
adc
or
dec
jne
pop
dec
mov
or
movsb
sbb
pop
insb
push
lret
rcrb
mov
xor
mov
xor
mov
xlat
aaa
pop
pop
mov
outsb
mov
jbe
and
jecxz
cltd
je
scas
les
repnz
icebp
add
andl
fisttpll
push
lret
jb
xorl
mov
mov
jl
sbb
pop
push
out
mov
aas
ret
push
push
xchg
lds
adc
into
jnp
adc
sbb
pop
cwtl
or
jns
shr
xchg
scas
loope
mov
adc
scas
mov
loope
sbb
mov
pop
mov
fidivs
lods
into
push
scas
je
dec
pop
mov
outsl
add
mov
mov
mov
push
pop
inc
sbb
pop
clc
xor
fldcw
and
adc
fistps
jge
or
push
xor
aas
outsl
jno,pn
inc
and
loopne
in
cmpl
int3
repnz
or
mov
test
adc
movsl
cmc
push
stos
and
int3
imul
lock
jb
inc
push
adc
push
mov
cmp
mov
dec
sub
out
in
xchg
imulb
aad
insl
xor
out
or
sbbl
fwait
xchg
adc
lahf
in
lock
shrl
in
mov
outsb
sbb
loope
xchg
data16
ja
inc
inc
adc
ds
mov
sbb
and
or
mov
cmpsb
repz
pop
push
dec
sub
lds
and
sub
add
rcll
cmpl
mov
push
or
movsb
adc
or
mov
mov
inc
xorl
sbb
push
cmc
jmp
jnp
fmul
pop
mov
insl
scas
gs
jbe
pop
cltd
sub
push
fstpt
mov
add
mov
xchg
out
cmpsb
addr16
inc
push
mov
ret
xchg
mov
jns
push
adcl
push
mov
xlat
enter
add
fsubr
pop
clc
movl
adc
push
mov
add
pop
fwait
inc
int
push
daa
sub
pop
test
pushf
cmp
mov
shll
imul
out
xor
jne
aaa
aas
test
sub
test
jns
rol
imul
lret
mov
mov
ss
jae
repnz
dec
lret
out
fs
mov
jmp
adc
push
lahf
mov
das
dec
cld
push
jns
in
inc
scas
insb
test
dec
dec
mov
inc
sbb
and
loop
jmp
mov
loop
or
xor
out
cmpsb
sahf
and
and
in
shrb
insl
cltd
or
out
mov
testl
pop
mov
cs
mov
repnz
mov
or
adcl
or
or
and
cmpl
or
out
ja
mov
adc
je,pn
or
fstpt
fdiv
jecxz
sub
cmp
and
gs
repz
and
push
out
testl
jmp
xchg
xlat
xchg
shlb
ret
call
xor
cmpsb
mov
movsl
nop
dec
lock
xor
add
pop
outsl
xchg
rclb
adc
push
addr16
mov
sub
stos
jns
repnz
push
mul
mov
in
or
sar
insl
mov
scas
pusha
int
data16
testb
fdivr
and
push
xchg
jae
xchg
roll
adc
jno
int
jb
cld
sub
data16
dec
pushf
scas
sahf
cli
cmp
inc
lock
lea
lock
es
pop
fcomi
int3
int3
in
pop
clc
push
ljmp
cmp
pop
xor
or
adc
adc
sti
out
pop
lea
push
adcl
imul
sbb
lahf
clc
test
mov
dec
dec
cmp
loope
shrl
push
mull
adc
scas
mov
pop
rcrb
adc
mov
mov
inc
jp
in
xchg
push
das
dec
shrl
and
inc
les
sbb
push
outsb
popa
jle
push
sbb
idivb
mov
push
push
xor
mov
cli
sbb
scas
mov
pusha
xor
xor
lcall
aad
mov
mov
subl
cmc
mov
mov
std
jp
jl
test
cmp
les
pop
aaa
and
rorb
enter
vphadduwq
mov
mov
cmp
jnp
xchg
int
mov
fs
xor
inc
sbb
leave
or
pushf
or
jne
mov
rcrb
xchg
mov
dec
fstl
lret
or
push
lods
xor
das
iret
lea
jge
xlat
cmp
push
lea
push
lock
lahf
push
ljmp
sahf
adc
push
mov
cmp
adc
mov
mov
push
adc
push
adc
dec
fbld
lea
idiv
push
dec
xchg
xchg
adc
inc
in
fistl
mov
pop
or
adcb
add
or
pop
ljmp
inc
ffreep
sub
in
mov
jne
sti
imul
push
in
in
into
jo,pn
imul
jnp
loop
jp
les
xor
call
int
xor
fwait
ss
pop
xchg
mov
arpl
std
popa
pop
jge
sub
lcall
scas
jp
dec
roll
jp
jns
sbb
adc
push
push
jp
cmpb
sub
pop
mov
jge
sbbb
insl
sbb
les
divl
aas
xchg
ficoms
mov
push
mov
push
test
fdivrp
or
fwait
out
test
in
jb
add
into
pop
pop
test
popa
sbb
stos
dec
sahf
in
mov
enter
out
fcomi
sub
aad
mov
mov
in
notl
test
pop
jne
dec
jecxz
pop
in
jge
fs
das
jl
cmp
inc
loope
je
fs
push
or
and
and
ss
fdivr
int3
test
adc
add
stos
es
adc
or
xchg
push
mov
push
mov
dec
cmpsb
imul
inc
dec
aas
stos
jo
neg
cmp
xor
mov
adc
adc
push
cmp
push
sbb
lods
aam
dec
aaa
mov
mov
insl
lahf
stos
outsl
call
or
les
das
sub
ret
cwtl
and
xchg
sub
cmp
lret
jecxz
adc
push
ss
push
mov
mov
mov
jecxz
or
lods
jge
mov
lock
in
jo
jp
test
push
fcmovnbe
xchg
outsl
lret
or
ja
inc
jecxz
addb
into
mull
and
push
push
cltd
xlat
aam
xchg
xor
jmp
scas
pop
sbb
sti
sbb
mov
int3
pop
gs
icebp
adc
add
xor
xchg
cmp
mov
loope
or
add
mov
cld
movsb
jne
mov
mov
or
das
scas
imul
ja
cld
xchg
add
pop
scas
push
pop
imul
push
xchg
out
and
stos
push
push
lret
pop
int
and
xchg
mov
xor
adc
xchg
bound
repz
jns
fcmove
call
shr
push
nopl
push
pop
insl
mov
push
sbb
add
scas
push
add
push
inc
mov
dec
imul
pop
shrl
imul
in
aad
into
out
cmp
and
push
or
outsb
fucomip
pop
inc
push
pop
iret
inc
jle
aaa
or
add
dec
inc
test
repnz
xor
stos
pop
pop
jnp
movsb
cwtl
jl
stos
inc
ret
stos
add
rcrb
mov
inc
lock
lahf
dec
push
cmp
and
inc
xchg
pop
out
mov
xor
inc
jns
pushf
adc
push
fidivrs
andb
rorl
ret
shrb
mov
push
jle
adc
or
jnp
stc
dec
or
cld
cmpsb
push
mov
xlat
mov
cmp
cmpsl
inc
mov
movsl
inc
xchg
mov
inc
push
jg
mov
cmpsb
std
sbb
dec
add
xlat
out
mov
mov
ds
and
mov
in
add
adc
loop
aaa
lods
test
shr
fcoml
leave
inc
xchg
shr
mov
ss
sbb
push
xchg
add
sbb
rcrb
cltd
mov
sarb
in
xor
movsb
js
inc
or
repz
pop
test
lcall
cmpsl
sub
mov
icebp
aad
ss
ljmp
sub
lds
xor
jecxz
jle
idiv
std
jae
jg
sbb
iret
jae
cmp
fmuls
hlt
insl
divb
add
and
out
leave
sbb
push
orl
or
mov
je
nop
xchg
lock
sbbb
sub
dec
aad
inc
push
dec
inc
sbb
mov
jb
stos
add
imul
or
popf
pushf
or
cld
and
inc
push
mov
jns
add
pop
imul
and
sahf
mov
lret
shlb
and
mov
xor
cmp
sbb
std
push
or
loopne
pop
ds
test
xchg
jle
addr16
repz
int3
ror
js
dec
jp
jo
fsubrp
shr
fsubrs
ja
pusha
aaa
push
mov
add
mov
test
jno
pop
mov
or
xchg
leave
and
sbb
bound
out
ss
into
lock
fxch
sbb
mov
push
sub
loopne
adc
in
ljmp
test
cmpsb
xchg
sbb
std
je
test
add
adc
or
sbb
jno
adc
mov
jecxz
push
mov
int3
loopne
or
stos
pop
jbe
es
jg
testl
mov
out
testl
dec
push
xchg
cmp
or
sub
jmp
xor
int3
jp
les
push
jne
sbb
xor
push
lret
mov
into
dec
fildll
or
xchg
addb
mov
pushf
ss
call
dec
scas
and
push
pusha
xor
lret
iret
pop
and
jnp
test
aaa
push
divl
xor
xor
add
xlat
dec
jnp
lahf
aam
adc
mov
mov
and
cmpsb
mov
jl
scas
arpl
xor
dec
adc
cwtl
xor
cmpsl
xorb
adc
mov
xchg
add
ds
outsl
popw
mov
nop
mov
or
jg
mov
mov
or
ja
or
scas
push
mov
test
sbb
pop
faddp
xchg
inc
cld
xorl
movsb
pop
push
lahf
arpl
fiaddl
sahf
notl
test
sahf
dec
sti
cmp
repz
pop
out
in
sti
or
or
xchg
cmpsl
jmp
push
sbb
mov
cmp
push
xchg
push
pop
repnz
leave
fbld
test
aad
mov
fcoml
or
mov
insl
shlb
sub
mov
in
pop
jae
shll
mov
mulb
xchg
jg
lods
cmp
mov
int
leave
sbb
filds
mov
adc
fimull
jno
into
mov
sbbb
ja
aad
ja
sbb
pop
js
add
and
dec
mov
push
jmp
sbb
lods
jne
jb
addr16
in
clc
cmpsb
insl
and
mov
mov
je
push
jo
push
and
xchg
sub
dec
sub
adc
dec
je
inc
test
sbb
out
xor
add
xchg
inc
add
sarl
fiadds
mov
nop
ret
mov
sbb
popa
and
mov
cmpsl
mov
mov
push
decb
in
cmc
clc
sbb
test
mov
lcall
xor
dec
mov
push
rolb
sub
ret
bound
lret
daa
sti
repz
outsl
cli
fstpt
clc
jmp
test
stos
push
je
pop
icebp
push
and
fcompl
adc
outsb
sti
out
pop
push
aad
sbb
popa
outsl
cmc
push
pop
pop
pop
fsubr
out
lret
aaa
insb
sbb
aad
lcall
sti
sbb
pop
jns
pop
hlt
mov
mulb
mov
pop
push
jbe
cmp
cltd
pop
jns
js
add
mov
bound
sub
pop
data16
inc
psubusw
pop
xor
arpl
sub
sbb
icebp
mov
xchg
mov
and
sub
jp
push
test
into
stos
sbb
sbb
cmp
lahf
sub
pop
insl
jae
in
pusha
out
addr16
imul
imulb
iret
movsl
add
movsl
mov
enter
mov
jnp
mov
cltd
loop
pop
fidivrl
in
nop
push
fs
add
pandn
fstpt
stc
add
pop
aas
lret
mov
test
testb
xchg
leave
jg
and
pop
rol
dec
inc
push
push
add
adcl
push
imul
xor
pop
into
add
inc
clc
jnp
cmp
scas
sbb
stc
dec
call
enter
inc
xchg
mov
fwait
je
xchg
cli
int3
orl
adc
push
sbb
xchg
xchg
cmpsl
mov
cmp
or
neg
xor
push
cmc
loopne
stos
cmp
daa
or
out
scas
lods
mov
lret
cmpsl
mov
and
push
mov
mov
and
xlat
test
jnp
push
dec
cmp
dec
xchg
js
lock
and
cmpb
push
aam
or
cmpsl
sbb
and
test
xchg
std
js
in
insb
data16
aam
ljmp
fidivs
stc
ds
stos
repz
pop
repz
outsb
pop
test
or
repnz
daa
es
push
adc
or
pop
pop
test
add
dec
pop
sub
paddsw
mov
cmp
jl
dec
cld
das
inc
jae
xchg
jbe
cmp
dec
std
insb
call
popl
jns
push
data16
test
int
dec
in
pop
and
jb
adc
bound
xor
add
hlt
aas
loop
lods
lret
clc
mov
rolb
sub
and
in
lods
shlb
or
dec
xchg
jo
roll
xchg
inc
out
adc
ljmp
xor
into
xlat
jno
cwtl
ljmp
xor
in
fcoml
xor
adc
xor
inc
inc
cmp
fdivs
in
and
sbb
lret
xor
add
mov
imull
and
pop
ds
hlt
gs
ss
data16
mov
lods
enter
imul
frstor
xor
outsb
mov
lahf
insl
cmp
adc
dec
dec
jge
push
cmp
out
aam
jmp
pop
jae
sub
out
push
