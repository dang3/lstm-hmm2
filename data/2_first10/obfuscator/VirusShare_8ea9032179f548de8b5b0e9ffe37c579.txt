add
add
add
add
addb
add
mov
add
add
add
sbbb
add
cmp
add
add
add
add
add
push
add
addb
add
or
add
add
adc
test
add
jmp
add
addb
add
or
add
aam
add
add
add
add
add
add
addb
add
or
add
add
add
insb
or
add
add
push
add
add
add
addb
add
or
add
add
add
or
adc
add
add
add
push
add
addb
add
or
add
add
mov
add
add
add
add
and
add
add
add
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
and
jae
insl
bound
or
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
insl
popa
outsb
imul
jb
imul
xor
ds
jae
insl
bound
fs
je
je
and
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
or
and
jb
imul
xor
xor
xor
or
and
gs
xor
and
and
insl
gs
outsb
cs
and
ds
and
gs
jb
jo
imul
pop
push
and
outsl
addr16
insl
cmp
fs
jb
jo
imul
and
and
gs
outsb
fs
arpl
or
and
gs
outsb
fs
je
jae
gs
bound
or
and
jae
gs
bound
fs
je
je
or
and
and
and
je
jo
cmp
xor
and
and
and
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
or
and
and
and
jbe
jb
imul
xor
xor
xor
or
and
and
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
or
and
and
and
insb
popa
outsb
addr16
addr16
or
and
and
and
and
jo
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
ds
and
fs
outsb
fs
je
jae
gs
bound
or
and
fs
outsb
fs
arpl
or
jae
gs
bound
or
add
add
add
add
add
add
and
add
add
adcb
add
inc
mov
mov
dec
mov
xchg
dec
mov
call
dec
mov
xchg
push
mov
xchg
push
mov
pushf
push
mov
sahf
pop
mov
mov
popa
mov
ljmp
arpl
ljmp
imul
scas
bound
or
add
add
inc
mov
decl
dec
mov
call
ret
push
mov
call
mov
xchg
push
mov
pushf
push
mov
sahf
pop
mov
mov
popa
mov
ljmp
arpl
ljmp
mov
ljmp
pop
mov
xchg
push
shlb
mov
decl
dec
mov
decl
dec
mov
call
dec
mov
xchg
dec
mov
xchg
dec
mov
xchg
dec
mov
xchg
push
mov
popf
push
mov
lahf
pop
mov
mov
pusha
mov
ljmp
pusha
mov
ljmp
pusha
mov
ljmp
pop
mov
mov
pop
push
mov
call
dec
mov
decl
dec
mov
decl
dec
mov
nop
dec
mov
xchg
dec
mov
xchg
dec
mov
xchg
push
mov
xchg
push
mov
pushf
push
mov
lahf
pop
mov
mov
pop
mov
cmpsb
pop
mov
cmpsl
pop
mov
cmpsl
pop
mov
test
pop
mov
lods
pop
mov
lods
pop
mov
stos
pop
mov
stos
pop
mov
add
add
fwait
pop
or
pop
enter
sar
push
mov
call
dec
mov
decl
dec
mov
call
dec
mov
nop
dec
mov
xchg
dec
mov
xchg
push
mov
xchg
push
mov
xchg
push
mov
lcall
jmp
pop
mov
mov
pop
mov
test
mov
test
pop
mov
stos
pop
mov
stos
pop
mov
stos
pop
mov
lods
pop
mov
lcall
lcall
push
sar
push
mov
call
dec
mov
decl
dec
mov
decl
dec
mov
nop
dec
mov
nop
dec
mov
xchg
dec
mov
xchg
push
mov
xchg
push
mov
cwtl
push
mov
lcall
lcall
pop
mov
movsb
pop
mov
movsl
pop
mov
movsl
pop
mov
cmpsb
pop
mov
stos
pop
mov
stos
pop
mov
stos
pop
mov
lods
pop
mov
cwtl
pop
lds
push
ret
call
push
mov
decl
dec
mov
decl
mov
decl
dec
mov
call
dec
mov
xchg
push
mov
xchg
push
mov
xchg
push
mov
cwtl
push
mov
xchg
push
mov
cwtl
push
mov
lcall
jmp
push
mov
movsl
pop
mov
cmpsl
pop
mov
test
pop
mov
lods
pop
mov
lcall
call
push
ret
push
sar
dec
mov
call
dec
mov
decl
inc
mov
decl
inc
mov
nop
dec
mov
xchg
dec
mov
xchg
dec
mov
xchg
push
mov
xchg
push
mov
xchg
dec
mov
xchg
dec
mov
xchg
dec
scas
call
mov
fwait
push
mov
lahf
push
mov
mov
pop
mov
test
mov
stos
pop
mov
scas
pop
mov
cltd
popa
lret
lcall
pop
push
ret
call
push
sar
dec
mov
decl
mov
decl
inc
mov
decl
inc
mov
nop
dec
mov
nop
dec
mov
xchg
dec
mov
xchg
dec
mov
xchg
dec
mov
xchg
dec
mov
nop
dec
scas
call
dec
mov
xchg
dec
mov
xchg
dec
mov
fwait
push
mov
mov
pop
mov
stos
pop
mov
lods
pop
mov
xchg
popa
int
cltd
popa
lret
lcall
pop
ret
call
push
ret
dec
sar
dec
sar
dec
mov
incl
inc
mov
incl
inc
mov
decl
inc
mov
mov
decl
dec
mov
nop
dec
mov
xchg
dec
mov
xchg
dec
mov
xchg
dec
mov
xchg
dec
scas
lcall
mov
test
pop
mov
cwtl
popa
int
xchg
popa
int3
lcall
pop
call
push
ret
call
pop
lret
call
mov
incl
inc
mov
decl
inc
mov
decl
inc
mov
lea
decl
dec
mov
nop
dec
mov
nop
dec
mov
xchg
dec
mov
popl
call
dec
mov
lahf
push
mov
movsl
pop
mov
stos
pop
mov
cwtl
popa
int
cltd
popa
int3
lcall
pop
enter
ret
call
push
ret
mov
pushl
js
fmulp
in
stc
cmc
sti
stc
cmc
sti
in
ljmp
xchg
pushl
dec
mov
lea
decl
xchg
inc
xchg
into
jmp
popa
int
cltd
popa
int3
lcall
pop
enter
lcall
pop
call
shr
ret
inc
mov
out
call
inc
mov
lahf
fs
dec
stos
fcos
lahf
push
mov
movsb
pop
mov
cwtl
popa
int
lcall
lcall
pop
call
mov
inc
mov
inc
mov
mov
inc
mov
fadd
out
call
push
mov
mov
popa
into
lcall
pop
lret
call
pop
jmp
call
mov
fmulp
in
in
call
pop
ret
jmp
int
jmp
int
dec
mov
call
mov
jmp
dec
scas
lcall
push
mov
cltd
pusha
into
call
pop
lret
lcall
pop
dec
scas
jecxz
jmp
cmc
cld
lcall
dec
mov
lcall
stc
cmc
sti
jmp
pushl
dec
scas
lcall
push
mov
mov
pop
into
lcall
pop
int3
lcall
adc
dec
lods
loope
xchg
push
ret
stc
cmc
cld
lcall
mov
lcall
stc
cmc
sti
decl
jmp
inc
mov
nop
dec
mov
xchg
dec
mov
lcall
jmp
pop
into
call
pop
int
pushf
int
fcmovb
in
jmp
pop
ret
jmp
shr
jmp
shr
lcall
arpl
jmp
shr
jmp
iret
jmp
dec
mov
call
mov
call
push
mov
cwtl
push
mov
lcall
lcall
pop
into
call
pop
into
pushl
inc
mov
ret
lcall
mov
pushl
push
mov
fwait
push
mov
pushf
push
mov
sahf
push
mov
sahf
push
mov
xchg
pop
sar
xchg
pop
into
call
leave
in
mov
mov
lods
loopne
ffree
out
pushf
pop
mov
pushf
pop
mov
pushf
push
mov
lcall
call
pop
sar
mov
mov
outsl
sar
hlt
out
stc
cli
idiv
ljmp
pop
ret
pushl
shr
cli
idiv
cli
idiv
jmp
shr
mov
pop
mov
pushf
pop
mov
fwait
push
mov
popf
push
mov
xchg
pop
iret
call
pop
iret
lcall
pop
into
call
pop
int3
lcall
pop
lret
pop
leave
lcall
pop
lcall
pop
ret
lcall
pop
ret
lcall
push
mov
call
push
mov
call
push
mov
lcall
pop
mov
cltd
pop
mov
popf
pop
mov
pushf
pop
mov
sahf
pop
mov
sahf
pop
mov
xchg
pop
sar
xchg
pop
sar
xchg
pop
sar
xchg
pop
iret
lcall
pop
into
lcall
pop
int3
lcall
pop
leave
lcall
pop
lcall
pop
ret
lcall
pop
ret
lcall
pop
ret
pop
ret
pop
ret
lcall
push
mov
lcall
pop
mov
lcall
pop
mov
lcall
lcall
mov
xchg
pop
sar
xchg
pop
sar
xchg
pop
sar
xchg
pop
into
call
pop
iret
lcall
pop
lret
lcall
pop
lret
pop
leave
lcall
pop
pop
ret
lcall
pop
ret
lcall
pop
ret
jmp
insb
int3
lcall
pop
mov
lcall
pusha
sar
pusha
sar
pusha
mov
lcall
pop
mov
fwait
pop
mov
pushf
pop
mov
xchg
pop
shl
xchg
pop
sar
xchg
pop
sar
xchg
pop
into
call
pop
into
lcall
pop
lret
call
pop
leave
call
pop
leave
lcall
pop
lcall
pop
ret
lcall
pop
ret
lcall
popa
ret
lcall
sar
popa
ret
lcall
lret
lcall
leave
lcall
sar
pop
mov
lcall
sarb
pop
sar
xchg
pop
iret
call
into
call
pop
lret
pop
lret
pop
leave
call
pop
leave
lcall
pop
pop
lcall
pop
ret
lcall
pop
ret
lcall
pop
ret
pop
ret
lcall
push
lcall
imul
pushf
imul
lcall
ret
popa
mov
mov
xchg
pop
sar
xchg
pop
sar
xchg
pop
sar
xchg
pop
iret
call
into
call
pop
int3
call
pop
leave
call
pop
leave
call
pop
pop
lcall
popa
enter
lcall
pop
ret
lcall
addr16
jmp
jno
lcall
imul
pushf
addr16
pushf
addr16
lcall
arpl
lcall
rorl
xchg
pop
shr
xchg
pop
sar
xchg
pop
sar
xchg
pop
sar
xchg
pop
into
call
int3
call
pop
lret
pop
leave
call
pop
leave
call
pop
call
pop
lcall
pop
lcall
pusha
lcall
gs
sahf
imul
popf
insl
sar
sahf
imul
popf
push
lcall
lret
addr16
lcall
retw
or
add
add
pop
sar
xchg
pop
sar
xchg
pop
sar
xchg
pop
sar
xchg
pop
into
call
pop
into
call
pop
lret
pop
leave
call
pop
lret
pop
lcall
pop
enter
enter
pusha
popa
lcall
data16
popf
push
lcall
sar
fwait
push
lcall
data16
lcall
lds
add
add
pop
sar
xchg
pop
sar
xchg
pop
iret
call
pop
sar
mov
pop
iret
call
pop
leave
call
pusha
int3
lcall
pop
lret
pop
enter
enter
enter
enter
leave
lcall
push
sar
pushf
push
lcall
sar
fwait
push
lcall
push
add
xchg
pop
rclb
pop
shr
xchg
pop
sar
xchg
pop
sar
cltd
pop
sar
mov
pop
iret
call
pop
lret
pusha
into
lcall
int
lcall
call
pop
enter
enter
lret
arpl
lcall
imul
lcall
sar
fwait
push
call
xchg
pop
rorb
xchg
pop
shrl
pop
sarl
popa
sar
fwait
pusha
sar
cwtl
pop
into
call
popa
sar
lods
jno
lcall
pusha
int3
lcall
pop
enter
enter
enter
lret
arpl
lcall
imul
in
imul
popf
imul
fwait
push
or
add
add
add
pavgb
add
rolb
add
add
add
add
add
add
pop
lock
clts
or
add
add
add
rolb
add
add
fbld
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
dec
orl
add
add
add
add
mov
add
mov
add
add
or
cmp
add
or
pop
or
imul
jns
or
add
add
xchg
add
add
add
add
add
add
add
or
fs
or
add
add
add
or
mov
add
or
nop
or
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
dec
inc
push
dec
xor
cs
dec
dec
add
dec
dec
dec
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
gs
outsl
arpl
add
add
imul
inc
outsl
outsb
je
outsl
insb
jae
add
ja
jbe
dec
jne
inc
gs
outsl
jae
je
outsl
outsb
add
add
and
add
add
add
add
add
add
add
jl
add
add
add
lcall
pushf
pusha
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
lahf
testl
add
je
cmp
push
cmp
cmp
push
add
ds
jmp
loop
adc
pushf
stos
sbb
fwait
setnp
popa
mulb
imul
xchg
dec
cld
sarb
dec
incb
iret
in
sub
jp
es
lcall
sbb
adc
out
ljmp
cmc
mov
sub
hlt
mov
in
ja
push
inc
inc
pop
or
xor
inc
lods
xor
stos
test
and
mov
movsl
ljmp
fs
jl
push
xor
setge
and
popa
fisttps
ror
lods
mov
mov
add
xor
mov
add
inc
movsb
push
stos
gs
push
and
es
lcall
test
pop
cltd
roll
add
jb
inc
lock
adc
les
push
rcrl
cmp
xlat
je
js
dec
push
dec
into
inc
mov
shlb
fnstcw
je
jg
mov
bound
adc
xor
popa
cmp
jle
loope
mov
and
xor
cmp
push
push
sahf
imul
in
iret
movsb
lock
inc
ds
inc
mov
or
sbb
jge
pop
inc
das
mov
repz
out
clc
lock
pop
ja
ja
pop
mov
ret
ret
cmp
scas
cmpsb
sahf
sti
jns
cld
loop
push
fistl
xor
cmpsl
out
dec
das
sar
push
dec
xchg
fldenv
and
cmp
js
mov
xchg
scas
shlb
and
sbb
js
sub
out
int
inc
mov
faddl
xor
cwtl
test
test
mov
cmpsb
mov
jbe
inc
cmpsb
or
cmp
adc
push
pop
movsb
jns
inc
sbb
and
das
xor
mov
xchg
and
dec
icebp
jl
cmpsb
jmp
das
inc
mov
mov
xor
add
jae
movsl
inc
push
lds
divb
jb
imul
sbb
iret
mov
add
lret
in
pop
out
or
push
mov
popf
or
arpl
stos
or
mov
rcrl
pusha
int3
push
in
dec
push
out
and
add
pusha
push
mov
pop
lds
ret
dec
push
shll
or
mov
sub
fs
sub
add
imul
mov
add
lock
push
mov
clc
test
mov
dec
add
cmp
and
mov
lock
mov
movsl
inc
mov
or
outsb
or
loope
insl
lret
or
mov
fcomps
rolb
cmp
push
dec
ja
out
test
push
mov
sub
adc
cmp
daa
rcll
stos
insb
mov
repz
scas
sub
icebp
int3
push
lret
mov
dec
popa
lods
xchg
ja
add
imul
mov
xor
fisubl
lret
pop
mov
addr16
mov
xlat
mov
mov
push
fwait
mov
scas
add
inc
inc
mov
pop
mov
fistpl
ror
dec
mov
jmp
cs
pusha
fadd
sarl
sub
cmp
sbb
inc
pushf
stc
jbe
popf
mov
dec
mov
and
std
mov
addr16
cmpsb
clc
call
mov
sub
jge
inc
fildll
pop
std
ja
test
mov
ret
or
ds
mov
mov
dec
clc
sub
inc
jnp
lret
jge
out
cmovae
ret
repz
xor
ret
xchg
or
pushf
ja
loop
orb
mov
jns
jecxz
daa
mov
movsb
push
mov
aas
test
out
lahf
mull
inc
cld
jae
pop
mov
add
pop
sbb
outsl
xchg
cmp
mov
jo
outsl
in
cmp
pop
jg
pop
jo
push
in
dec
popf
and
cmp
pushf
mov
xor
pusha
push
in
xchg
lods
std
in
std
add
pop
pop
sbb
repz
xchg
and
fucom
mov
pop
xor
cld
inc
ss
jle
movl
dec
jmp
bound
mov
dec
sti
std
mov
fisubrs
lds
ficomps
inc
jb
daa
xchg
dec
jmp
sub
jbe
or
in
push
imul
add
push
cwtl
push
fs
xchg
fwait
add
or
xor
mov
dec
outsb
dec
aaa
push
orl
imul
or
mov
mov
push
je
xor
jnp
loopne
orps
mov
mov
icebp
adc
add
ror
pop
add
mov
je
ficoms
adc
cltd
call
mul
mov
cmp
pop
or
mull
inc
pusha
std
mov
jge
push
dec
cltd
ljmp
ror
bound
mov
ljmp
cwtl
sub
mov
aaa
jg
repz
xor
aam
push
jbe
jg
mov
dec
outsb
lcall
jmp
dec
into
popa
push
add
call
sbb
mov
xor
repnz
iret
lds
stc
aad
mov
adc
pop
jl
jmp
and
nop
sahf
mov
sub
cmpsl
aad
jp
pop
jo
mov
cmpsb
int3
push
xor
inc
or
xchg
push
cmp
roll
rolb
cmpsl
shlb
dec
clc
dec
mov
jb
sub
fadds
aad
dec
push
cmc
xchg
jp
xchg
inc
scas
dec
xchg
sub
and
in
ds
ljmp
mov
rcr
or
popf
pop
cmc
cld
cmp
mov
jle
movsl
icebp
xchg
sub
mov
std
inc
mov
dec
sub
sbb
ljmp
mov
push
mov
mov
jmp
push
addl
aas
jne
lods
jbe
cmp
dec
int3
xchg
rcr
xchg
clc
cmpsl
lea
lea
addr16
mov
ljmp
mov
pop
or
mov
iret
call
cmpsl
jns
loop
dec
movsb
mov
insb
adc
scas
daa
sbb
mov
mov
cmp
pop
subl
jmp
sarl
imul
movsl
shl
loop
inc
imul
dec
add
xchg
test
out
jbe
cmp
push
and
sbb
arpl
scas
ss
shll
cmp
fisttpll
movsb
mov
cltd
xchg
int
mov
aam
dec
cmp
mov
mov
stc
call
ja
push
cli
stos
cmp
shl
fldz
ljmp
sub
cmp
add
pop
lahf
mov
cmpb
rclb
push
sub
cmp
mov
mov
mov
jb
fmull
fildll
inc
push
out
sbbb
loopne
push
in
pop
jl
xor
mov
cltd
lcall
cmp
sub
jp
push
ret
cmc
std
xchg
in
pop
cmp
add
xchg
pop
or
mov
or
rcl
ljmp
pop
cld
xor
inc
add
outsb
ljmp
mov
data16
push
sub
push
iret
pop
sti
sahf
push
or
int
mov
sbb
shlb
rolb
cmp
movsb
hlt
scas
push
push
scas
push
lcall
fiadds
cmpsl
cli
arpl
popa
ret
rcrl
sbb
sub
xlat
xchg
int
xchg
mov
jg
cmp
sbb
mov
mov
mov
inc
dec
inc
push
int3
sarb
insb
push
call
scas
mov
xor
icebp
sub
sbb
js
test
outsl
loop
dec
test
xchg
icebp
movsb
pop
int3
pop
cs
test
pop
add
cmp
scas
cmovo
jnp
ss
cld
add
je
in
and
adc
or
add
inc
jp
dec
fdivr
pop
push
hlt
clc
and
add
addr16
jnp
dec
push
hlt
pop
pop
int
nop
repz
int
cmpsb
stos
loopne
jae
sub
lret
inc
pop
sbbl
cmc
cmp
mov
and
loopne
test
mov
inc
adc
nop
sub
aam
fs
andb
repz
int3
pop
imul
loop
jmp
pop
xor
or
je
xchg
cld
jl
fidivs
pop
dec
pop
pop
pop
mov
je
scas
mov
cmpsb
out
inc
sahf
xchg
pusha
fdivl
stos
clc
jnp
jno
outsl
loop
lret
push
int
add
jns
int3
push
xchg
mov
inc
test
mov
sbb
lret
or
fwait
fs
and
je
push
dec
jecxz
xor
ljmp
in
lea
lods
in
pop
pop
int3
mov
daa
cmc
or
jns
inc
test
ja,pt
push
sbb
incl
ljmp
js
dec
xchg
xchg
lret
fs
popa
jecxz
cmp
dec
lods
lock
popf
jns
outsl
lea
push
iret
sahf
sbb
push
cltd
imul
mov
jnp
mov
mov
lret
mov
or
xchg
add
pop
and
cmp
dec
push
hlt
push
add
push
ss
cmp
in
mov
dec
and
dec
std
jecxz
mov
inc
popa
cmpsb
decl
cli
sub
push
orl
jge
into
push
push
sbb
mov
mov
rcll
pop
mov
mov
iret
mov
push
lret
cmp
int
int
sub
inc
orl
aaa
les
icebp
add
push
mov
push
shl
ljmp
loopne
mov
sub
sub
scas
or
xorb
pusha
ds
cld
xchg
mov
adc
cmp
jp
pop
test
jecxz
js
cmp
ret
cmpsl
pop
mov
inc
sbb
cmc
sub
fdivl
cmp
mov
aaa
out
cld
dec
insl
push
inc
jae
cmpsl
fistps
ret
xchg
loop
aas
pop
sar
stos
test
into
mov
jecxz
sub
mov
outsl
mov
dec
mov
adc
jnp
rclb
imul
in
dec
lea
or
aaa
adc
hlt
insb
jge
xchg
pop
addr16
ficoml
cmpsb
mov
dec
add
pusha
stos
imul
ds
jnp
xor
int
mov
mov
in
inc
adc
dec
jnp
jne
dec
dec
cs
sbb
lock
xlat
aad
fists
shl
sbb
xlat
jno
enter
mov
mov
cs
fists
loopne
xor
aaa
stc
test
mov
inc
and
adc
jno
mov
or
inc
mov
rorb
movsb
push
or
sbb
and
loope
loope
push
mov
stos
cmp
and
jbe
imul
mov
mov
cmc
inc
hlt
test
mov
test
sbb
cmp
pusha
mov
pop
out
add
outsl
int3
sbb
push
out
stc
aas
pop
cwtl
or
push
int3
adc
xchg
ds
roll
sbb
inc
or
pop
pop
icebp
add
lods
stos
jmp
into
fwait
xlat
pop
cmpl
in
inc
out
xlat
sub
dec
cli
add
sub
adc
jnp
xlat
popf
loop
aas
rep
and
sub
gs
jl
repnz
pusha
sbb
push
arpl
shlb
imul
xchg
mov
xor
js
sub
in
flds
lock
daa
jo
leave
pusha
inc
xchg
xor
cmp
out
arpl
sbbl
jo
icebp
push
dec
mov
sarl
idivl
inc
sub
js
jb
add
xchg
into
leave
in
je
mov
shrb
xlat
or
icebp
push
adcb
aas
pop
out
push
cmp
popf
int3
jno
addr16
jbe
arpl
mov
mov
mov
pop
stos
orl
xor
cmp
xchg
lcall
test
cld
sbb
stos
sbb
mov
addr16
pop
popa
push
mov
xor
dec
mov
std
es
fwait
jo
sbb
rolb
cmp
insl
adc
rorb
in
cs
loope
out
dec
sub
cmp
jns
mov
aaa
pop
sub
leave
jo
push
mov
stos
add
or
decb
mov
adc
insl
sbb
jb
jno
mov
loop
xor
xor
mov
push
adc
cmp
mov
data16
cmp
enter
lahf
out
cmp
jno
dec
jns
int3
sbb
addb
push
leave
ja
pop
xchg
lock
ljmp
sbb
mov
pushf
jns
rclb
push
jl
je
sbb
pop
jne
sahf
xlat
xor
mov
jge
pop
fwait
sub
cmp
mov
and
pop
or
adc
imul
dec
xchg
push
ja
add
outsl
mov
cmp
mov
lret
pop
dec
add
xor
and
stc
xchg
adc
leave
movsl
pop
push
cli
xchg
js
movsb
mov
jecxz
pushf
mov
out
xchg
dec
dec
les
adc
or
sti
test
pop
dec
and
sub
popf
in
sbb
dec
ljmp
and
imul
fs
mov
test
jge
test
mov
and
or
pop
xlat
js
cmp
jno
testl
pop
and
sbb
inc
pop
lods
test
cltd
inc
xor
mov
test
fistpl
ja
jle
scas
sub
int
mov
mov
xor
out
push
lret
movsl
dec
mov
enter
movsl
jl
cld
push
adc
add
mov
out
jno
push
or
jno
xchg
push
ret
dec
mov
data16
pop
jae
sub
ds
mov
fstpl
int
and
jnp
xchg
lret
mov
rclb
iret
mov
std
jb
test
add
adc
sarl
and
shl
je
cmp
xchg
ds
std
jno
xor
push
cmp
loop
dec
mov
lcall
cltd
das
inc
repnz
xor
test
jne
ret
sub
sti
ljmp
loopne
adc
mov
and
enter
xchg
jl
sub
in
imul
jle
push
push
sub
sub
cmpsb
xor
fistpll
push
dec
pop
add
xor
fimull
fwait
gs
imul
mov
shrl
add
insb
and
lret
adc
jnp
inc
add
lods
pop
mov
jnp
mov
xchg
lret
xchg
and
cmp
lret
popf
insb
cmc
insb
loope
and
sub
int3
pop
jae
repz
jb
push
repnz
mov
jp
jecxz
aas
in
cmp
addb
pushf
aas
jmp
lret
sbb
rcll
push
leave
mov
rcrb
dec
sbb
clc
inc
lcall
pop
sub
mov
xchg
outsb
int3
dec
into
enter
outsb
and
inc
xchg
sbb
addb
jl
cli
sti
ja
cli
pop
dec
insb
filds
loopne
jg
jne
movsw
push
inc
hlt
fisubrl
inc
mov
push
sub
iret
pop
mov
daa
and
add
add
bound
mov
stc
call
cmpsb
movsb
cld
dec
mov
dec
mov
push
in
xor
andb
std
je
jmp
add
dec
mov
dec
idivl
gs
add
sbb
or
push
hlt
sbb
test
mov
push
hlt
push
nop
push
pop
inc
and
xorb
stos
nop
xchg
mov
and
mov
cmp
push
xchg
sahf
pop
leave
inc
mov
lret
insl
or
dec
push
dec
pop
pop
add
daa
pop
adc
pop
out
negl
icebp
sbb
sub
icebp
es
repnz
stc
cmp
les
and
fstp
pop
push
mov
mov
dec
outsb
test
and
in
test
clc
mov
and
movsl
add
xchg
xchg
push
std
mov
inc
imul
xor
dec
xor
mov
mov
cwtl
mov
imul
xchg
pop
or
jne
aaa
adc
sub
dec
xchg
pop
negb
push
sub
ds
outsl
imul
sbb
xchg
or
call
push
jge
rclb
fstl
cs
add
lods
cmp
push
testl
bound
cmp
jne
and
lahf
shrb
lods
clc
sub
pop
dec
sti
or
rolb
test
lret
mov
ret
ljmp
sub
hlt
mov
mov
inc
test
lea
sub
or
rcl
xor
jge
mov
cwtl
xor
mov
repz
jle
das
xchg
add
jo
subl
insl
fildl
ret
mov
add
pop
fnstenv
test
sbb
xor
xchg
shrb
xchg
out
xchg
inc
mov
or
xlat
imul
lock
repnz
pusha
fwait
inc
and
enter
fwait
mov
add
push
mov
loop
vphaddudq
enter
cwtl
ss
xor
jge
xchg
push
xor
icebp
mov
ret
in
and
leave
push
sub
scas
aad
in
inc
outsb
adc
xor
or
mov
imul
mov
mov
rorb
jle
mov
cld
xor
ja
lods
xor
movsb
in
test
add
out
mov
outsl
lahf
sub
pop
nop
jo
xchg
scas
pushw
push
scas
ja
push
sahf
jp
push
loopne
inc
int3
mov
pop
idivl
push
aad
adc
and
loop
subl
dec
pop
inc
insl
mov
std
mov
sbb
sub
sahf
xchg
jge
outsl
xchg
xor
mov
in
out
sbb
adc
ftst
add
sahf
mov
cs
data16
or
and
jp,pt
mov
das
push
cmp
sbb
dec
mov
lea
loope
loope
and
mov
inc
add
xor
loope
in
movsb
mov
xor
push
rcrl
push
test
push
or
sub
mov
lahf
dec
add
or
and
test
sbbb
push
xor
mov
jno
xchg
repz
xchg
stos
mov
jl
dec
sbb
mov
sysexit
push
push
cmp
mov
xchg
jo
test
or
adc
jae
jmp
std
icebp
and
sbb
dec
clc
lret
push
push
lods
or
jb
cmp
lods
pop
les
mov
cmp
jno
xchg
scas
cmp
clc
sahf
mov
call
pop
pop
mov
rcll
jecxz
cli
shlb
out
jbe
lods
addr16
push
adc
outsl
xchg
outsb
dec
cli
add
jnp
inc
outsl
and
mov
cmp
int
stos
outsb
mov
notl
nop
loop
jbe
lock
jle
mov
xlat
adc
fdivl
cmpsb
sub
add
sub
add
cli
imul
shll
call
sahf
popa
test
loope
mov
mov
mov
xchg
pop
fsub
daa
test
pop
jecxz
and
test
mov
in
mov
dec
sarb
mov
rorb
jl
push
push
sbb
adc
push
jge
dec
push
dec
jno
pushf
leave
pop
pop
xor
fwait
mov
hlt
mov
aad
xchg
psubsw
test
fstps
aad
cld
test
add
cmovo
inc
inc
xchg
sbb
loop
push
enter
or
ds
in
mov
mov
cmp
iret
notb
daa
xor
lcall
stos
dec
dec
les
xchg
shrl
push
nop
sub
lods
pop
stos
mov
push
cli
sbb
cmpl
negl
int3
xor
notl
test
push
mov
hlt
mov
fisttps
movsl
mov
jbe
sub
xor
mov
out
push
daa
rorl
hlt
out
jbe
jge
push
xor
adc
enter
add
dec
or
fsubrl
pop
mov
movsl
enter
iret
iret
int3
jo
xchg
cli
mov
out
cmpsb
dec
shr
mov
xchg
rcrb
in
xor
mov
fwait
test
mov
mov
push
push
test
scas
cmp
add
push
mov
adc
fcompl
in
xor
or
sbbl
jle
sbb
pop
jns
int3
loopne
test
incl
mov
adc
loopne
loop
cld
jecxz
dec
out
imul
push
pop
out
stc
call
mov
mov
xchg
iret
fsts
repz
sahf
test
jae
or
mov
mov
mov
pusha
cmpsb
rcll
xor
xchg
in
inc
or
push
lret
cmp
in
out
sbbl
cmp
and
jmp
push
sub
mov
push
not
fs
mov
je
add
mov
jae
fcompl
push
adc
testb
shll
fnstenv
iret
mov
popf
sub
mov
add
fmuls
sahf
call
std
or
sbb
lea
test
test
pop
mov
fsubrp
lret
mov
sub
mov
jg
data16
and
pop
adc
inc
bound
fsubrp
pop
sub
sub
mov
ds
jo
ret
test
mov
fstpt
scas
or
sahf
inc
mov
enter
xor
outsl
dec
pop
add
xor
mov
popa
movsb
jae
movsl
cmp
cmp
sahf
xor
xor
daa
sbb
test
aaa
psubusb
jae
adc
add
dec
xor
sub
jbe
dec
clc
sbb
sbb
iret
sbb
mov
daa
in
mov
and
adc
data16
mov
sbb
jl
sub
daa
fimuls
mov
adc
enter
inc
les
xchg
into
push
cld
sbb
xchg
arpl
cmp
sub
loopne
push
push
loope
repz
mov
and
mov
push
shll
xchg
push
jecxz
sbb
sbb
xchg
sub
cmpsb
or
adc
push
lcall
add
cmp
fwait
sarb
pop
loop
jnp
sub
dec
popf
sub
dec
mov
leave
out
cmp
lea
sbb
cwtl
fcomip
lret
in
iret
add
cmp
stos
pop
ficompl
sti
mov
ljmp
dec
add
mov
mov
mov
jecxz
adc
push
cmp
xchg
add
pusha
roll
mov
mov
push
gs
pop
pop
bnd
push
xor
push
bound
cmp
mov
cmp
push
adc
mov
jns
pop
outsb
pop
mov
mov
std
mov
popa
sbb
lahf
jp
xchg
pushf
loopne
pusha
sahf
in
je
dec
fimuls
or
xchg
sub
repnz
inc
xchg
scas
insb
subl
jecxz
mov
das
push
sub
ds
cwtl
mov
jns
lret
xchg
xor
mov
je
stc
icebp
mov
mov
repnz
mov
dec
mov
cmpsl
stc
sbb
sub
mov
sbb
jge
mov
in
aad
fdivr
out
mov
mov
push
cld
or
xchg
pop
inc
mov
sbb
rol
and
xchg
dec
out
xor
add
loop
clc
cmp
mov
dec
and
xor
push
mov
sbb
repz
jecxz
inc
imulb
adc
inc
out
dec
mov
mov
popa
ret
cmp
push
lods
add
sbb
jo
sub
sbb
inc
cvtps2pi
mov
rcrb
out
xchg
lods
pop
sbbl
sti
fwait
js
ljmp
push
xor
sub
add
lds
loop
clc
jae
loopne
fcomps
push
inc
xchg
inc
jecxz
sub
xchg
pshufw
sarl
insl
sbb
sbb
aad
pop
dec
mov
mov
xor
jae
test
push
pop
loop
clc
dec
push
lcall
int
add
push
dec
dec
push
loop
mov
adc
dec
add
mov
jp
mov
cmp
dec
test
cltd
pop
sub
rorl
pop
leave
pop
aam
fstps
ja
cmpsl
out
jle
mov
fcomip
popa
cmpsb
ljmp
and
les
mov
pop
test
je
xchg
loopne
stos
jo
adc
mov
xchg
adc
add
lahf
call
sbb
in
sbb
push
pop
test
xor
outsl
lods
jb
dec
movl
repz
int
push
jmp
pop
movsb
jmp
add
loope
or
pop
pop
fbstp
stc
dec
fdiv
cmp
add
mov
bound
gs
xchg
push
xor
aad
scas
scas
jge
cmp
dec
sbb
cld
push
cmpsl
jnp
fiaddl
push
das
add
out
jl
mov
xchg
xchg
ljmp
mov
jecxz
movsl
and
scas
lret
movsl
arpl
outsb
add
in
ss
punpcklwd
js
stc
mov
push
inc
pop
mov
out
clc
cmc
lret
es
mov
call
bnd
testl
or
push
push
shrl
roll
adc
mov
call
mov
cmp
rcrl
jae
push
xchg
in
fwait
sbb
cmp
outsl
nop
sub
out
lds
fdivrl
ss
mov
stos
lods
mov
rclb
stc
pushf
stc
fldcw
mov
outsl
sbb
adc
inc
push
or
pop
cmpsl
push
clc
inc
lret
or
cltd
arpl
shrb
lahf
or
cmp
test
push
stos
or
and
or
adc
div
and
sahf
lret
adc
sbb
subb
mov
cmp
pushaw
addr16
int
xor
in
push
adc
cmp
sub
fidivrs
and
cmc
adc
inc
push
fwait
push
insb
sub
test
jnp
dec
test
push
adcb
fisubrl
imul
idiv
jl
pop
fmul
jecxz
stos
lahf
sbb
clc
popa
mov
pop
jnp
inc
out
adc
es
lret
mov
xor
mov
movsl
out
aas
push
cmc
shlb
dec
add
cwtl
push
xchg
xor
into
sub
dec
lret
xor
adc
jnp
sub
mov
jecxz
dec
sbb
mov
dec
and
and
scas
outsl
gs
xlat
pop
icebp
or
mov
mov
mov
pop
mov
ret
mov
jno
ljmp
mov
lods
fwait
cmpsl
iret
ja
arpl
shlb
sbb
adc
sub
xor
jecxz
jns
or
es
fsubs
cwtl
sub
add
iretw
mov
inc
or
pop
add
or
xor
popa
loopne
ret
add
sbb
insb
sbb
ljmp
push
insl
xchg
dec
scas
or
lods
aam
shlb
sub
fnstcw
push
xor
test
dec
cld
daa
cltd
cs
lret
rorb
test
outsl
les
cmp
mov
fcoms
cmc
mov
aaa
daa
enter
inc
pop
movsl
and
scas
andl
pop
push
xor
jne
aas
sbb
in
cli
lcall
out
movsb
dec
or
clc
xchg
arpl
jo
fstps
mov
sbb
mov
scas
loope
clc
cmc
mov
das
call
stos
cmp
iret
lcall
push
pusha
ljmp
jbe
stos
pop
jns
int3
mov
pop
sbb
dec
inc
cmp
aam
dec
cmp
xchg
outsb
xor
sti
xchg
inc
test
adc
or
cmc
shll
adc
mov
pop
fdivrs
imul
lahf
lods
mov
or
xchg
lret
inc
aad
sahf
xchg
xchg
in
mov
stc
and
test
inc
loopne
mov
add
cmp
mulb
mov
stc
ss
mov
xchg
xor
pop
jbe
iret
pop
sbb
push
lret
push
xchg
mov
xchg
or
sbb
adc
mov
enter
xchg
add
add
aas
es
movsb
stos
out
pop
iret
insb
mov
jns
sbb
inc
ss
mov
mov
lock
pop
jecxz
aas
mov
pop
arpl
dec
aaa
xchg
stos
push
jg
nopl
xor
add
mov
out
xor
mov
movsl
ficoml
sub
imul
cltd
jb
sbbl
outsb
pop
imul
add
cmp
shrl
lock
push
sti
neg
pop
aas
test
or
mov
sub
outsb
add
mov
xor
xchg
jmp
cmp
ret
and
adc
pop
sub
test
lds
aaa
in
repnz
out
imul
sti
hlt
std
adc
aad
mov
insb
mov
cmp
jb
orl
and
jae
fdivrp
ss
and
cmpsb
das
add
push
push
test
scas
add
das
pop
stos
push
lods
rorl
push
jmp
adc
xchg
shrl
xor
fstpt
mov
adc
adc
mov
pusha
inc
and
pop
dec
and
pop
stc
xchg
stos
gs
cltd
mov
cmpsb
jne
adc
mov
adc
or
and
mov
xchg
pop
push
sub
add
mov
pushf
push
xchg
mov
sti
add
xchg
mov
xlat
lret
and
or
inc
mov
mov
fisttpl
cli
mov
jge
mov
stos
ljmp
push
imul
sbb
lods
mov
gs
mov
les
aad
bnd
test
jno
push
jbe
lret
pcmpgtb
scas
push
cmc
imul
push
movsl
lret
popa
vmread
xlat
lock
pop
adc
cltd
inc
out
adc
mov
insb
fistpll
ret
adc
xor
test
popf
pop
xchg
mov
lds
aaa
iret
scas
test
ficoml
jmp
xor
jecxz
repnz
adc
cmp
and
add
aad
in
adc
xchg
aam
nop
pop
or
and
movhps
popf
mov
je
push
dec
xor
int3
pop
add
push
movsb
or
jb
inc
testb
mov
push
sub
mov
push
pop
push
icebp
jae
lea
out
loop
iret
pop
jns
jo
lea
lcall
ret
es
xchg
lock
cmp
xor
adc
push
sub
std
lret
cmp
cli
inc
hlt
push
adc
push
jmp
aad
dec
xlat
sbb
imul
mov
cmpsb
pop
mov
je,pt
push
ljmp
add
imul
outsl
xor
and
fidivrl
ficompl
les
mov
sub
sub
ljmp
es
push
push
inc
add
sub
sbb
pop
and
out
cmc
andb
scas
rol
movsb
insl
sbb
aam
adc
sbb
rclb
or
rclb
cmp
add
dec
or
sub
cmpsl
xchg
mov
or
jp
aas
lea
popa
adcl
ss
and
push
push
orb
test
jecxz
mov
mov
lcall
fadds
mov
add
rcrb
mov
in
fimuls
repnz
inc
sub
cmpsb
fldl
jl
aaa
ljmp
or
push
stos
dec
adc
or
mov
inc
cltd
movsb
aam
lea
mov
sub
mov
insb
jbe
adc
inc
cld
sub
movsl
xor
xor
add
pop
pop
lods
and
jmp
dec
mov
jb
sti
mov
sub
jmp
jb
sub
xchg
lcall
cld
and
sub
sbbb
mov
call
inc
jb
pop
inc
xorb
movsl
jns
vpmulhw
add
icebp
pop
out
imul
fdivrl
adc
jecxz
pop
in
push
rcrl
push
cmp
in
repz
test
ds
testb
scas
cltd
push
adc
adcl
popf
xchg
and
div
sbb
cmp
stc
mov
rolb
sbb
cli
imul
mov
inc
iret
add
imul
jmp
pop
push
imul
test
js
ljmp
push
movsb
mov
and
mov
mov
repnz
out
int3
mov
popa
outsl
cmpsb
std
popf
addr16
add
adc
lea
push
add
pop
xor
sbb
out
dec
add
negl
lods
mov
out
lock
fcomps
inc
or
mov
mov
stos
insb
and
mov
or
mov
fnstsw
xchg
daa
mov
fidivrs
inc
or
movsb
pop
pop
nop
mov
add
jno
test
iret
push
fs
add
inc
xchg
cmpsb
sub
stc
adc
addr16
ja
sbb
jmp
lods
pop
mov
loope
jb
adc
int
push
mov
add
and
sahf
mov
imulb
mov
inc
lcall
mov
std
fcmovnb
xchg
jae
mov
mov
dec
in
stos
sbb
inc
arpl
aaa
pop
add
jb
inc
cltd
outsl
cmc
ljmp
xor
in
add
or
push
pop
push
lret
je
add
pushl
or
and
das
xchg
popa
out
mov
in
rcrb
ds
gs
add
test
cmp
xchg
dec
pop
mov
mov
inc
dec
adc
int
xchg
pop
insb
cs
lds
push
iret
pop
les
mov
loopne
sub
dec
lock
or
push
into
addr16
push
inc
fisttps
cld
pusha
addr16
out
adc
lret
insb
pop
mov
adc
loop
sub
inc
ror
jg
xchg
push
cmp
arpl
popa
ja
mov
sti
inc
popw
or
xchg
fsubs
or
sbb
lods
or
shrb
mov
add
stos
pop
and
cmp
daa
mov
xchg
imul
mov
aam
bnd
jmp
mov
sbb
fldt
aam
shl
sbb
notl
push
ds
enter
sub
jmp
pop
mov
cmp
xchg
mov
dec
pop
jo
mov
mov
mov
mov
in
inc
adc
pusha
fistpll
xor
sub
cmp
mov
mov
in
pop
jnp
cwtl
cltd
int3
sub
and
mov
shl
pop
mov
out
sub
pop
inc
push
leave
out
xchg
dec
imul
pop
movsl
div
cltd
pop
int3
std
shl
and
push
enter
pushf
out
jno
sbb
insl
add
ret
mov
rcll
dec
test
rol
pop
jmp
shlb
dec
push
jo
dec
hlt
lods
mov
mov
dec
sub
mov
jae
rorb
pop
cltd
push
pop
aad
dec
gs
ja
in
leave
mov
sarl
sbb
and
push
or
lds
or
ljmp
sub
insl
divl
outsl
aaa
out
sbb
add
jecxz
scas
push
xor
repnz
vmwrite
cltd
pusha
enter
xchg
push
sbb
repz
push
cmp
stos
rclb
and
test
pop
in
aam
cmp
xchg
push
std
rolb
dec
and
pop
lcall
cmp
cmpsl
adc
sbb
adc
ret
flds
adc
and
push
iret
xor
loop
shlb
clc
xchg
mov
ljmp
push
stos
movsb
push
cmpsl
hlt
popl
xchg
fstl
mov
sbbl
mov
xor
leave
cmpsb
lock
flds
xchg
leave
adc
push
lock
shrw
sbbl
inc
push
test
aam
adc
shlb
shll
je
stos
pop
out
stos
mov
lcall
cltd
mul
push
push
or
in
stc
or
int3
or
xchg
fstps
mov
enter
cld
pop
and
popa
aaa
dec
test
mov
es
inc
fcompl
mov
mov
sub
cmpsl
push
fistpll
mov
insl
lcall
aas
rorl
add
mov
lret
jae
adc
and
idivl
cmp
and
mov
negb
push
mov
pushf
dec
push
pop
add
push
pop
imul
jg
mov
sub
inc
pop
std
or
notl
mov
add
adc
push
xchg
fwait
stos
aaa
cs
sahf
sbb
pop
push
ret
orb
mov
ret
movsl
or
enter
inc
xchg
pushf
cmpsl
add
int
cmpsl
xchg
fdivrs
dec
cmp
pusha
in
insb
pop
pop
jbe
inc
scas
cmp
shlb
sub
loope
jp
xor
jnp
addl
mov
jmp
xchg
cmp
pop
aad
xor
lock
cmpl
rol
mov
arpl
lahf
and
hlt
pusha
pop
subb
push
xorb
shlb
enter
pusha
into
lret
clc
shr
les
inc
divl
dec
cmp
ja
lds
std
inc
push
shl
xchg
cmp
sbb
inc
out
xchg
pop
or
call
cmp
fwait
xchg
repz
inc
cli
xor
addr16
test
dec
nop
ficoml
add
cmp
push
fcmovbe
mov
push
and
or
out
shrb
shll
repnz
lods
jl
repnz
add
stc
dec
inc
cmp
fsubrl
jne
xchg
out
inc
jmp
dec
insb
lret
mov
add
mov
fmul
xchg
shll
adc
xor
sub
mov
ret
loope
sbb
lods
and
repnz
test
or
cmp
push
movl
mov
jo
adc
push
lods
inc
mov
cmp
mov
inc
sti
sbb
xchg
movsb
add
dec
mov
fstpt
and
push
xchg
sbb
ljmp
lds
addr16
mov
jg
cmp
push
inc
mov
into
fistps
inc
push
and
mov
jnp
notb
sub
mov
stc
es
sahf
int
arpl
adc
sbb
jl
cltd
push
or
pop
pop
sarb
cld
or
dec
outsl
sub
pop
mov
xchg
int3
movsl
pop
clc
lcall
pop
ljmp
lock
decl
xor
xor
xchg
outsl
xchg
jbe
mov
push
pop
lds
and
sbb
jmp
wrmsr
push
adcb
out
in
movsb
lret
add
lea
ret
lret
inc
and
add
push
stc
test
test
fdivrl
sahf
movsb
xor
fsubrs
sti
mov
mov
cmpsb
imul
test
nop
in
xchg
mov
or
ljmp
lret
aam
pop
pop
push
jno
repz
int3
xlat
push
sti
daa
jle
xchg
cmpsl
adcl
rcrb
xlat
popf
out
cmp
xorl
inc
xchg
xlat
mov
xchg
fs
push
adc
dec
pop
je
mov
incb
mov
and
adc
cltd
dec
pop
aam
mov
or
dec
xchg
cmp
and
aam
fisttps
icebp
hlt
cmp
fidivs
rorl
inc
xorb
addr16
mov
sub
mov
push
lods
cmp
pusha
dec
inc
fsubrl
insl
int
dec
mov
cmp
cwtl
sbb
dec
gs
xlat
jno
add
imul
pop
and
adc
cmp
xchg
dec
aaa
push
stos
data16
pop
std
inc
ret
std
insb
jno
andb
push
loop
sbb
mov
rcrl
dec
or
in
inc
fnstcw
push
adc
negb
addb
mov
xchg
scas
lods
insb
adc
add
adc
in
dec
mov
shll
jne
mov
sbb
push
jl
mov
ficoml
dec
insl
xchg
xchg
idivb
mov
xchg
cmp
cmovs
ds
mov
mov
testb
cmpsb
push
sbb
push
test
out
sbb
mov
xchg
sub
push
mov
lds
shr
dec
add
insl
rol
cmp
test
imul
dec
cmp
icebp
out
xchg
mov
xchg
lods
pop
pop
scas
mov
sbb
mov
push
nop
addr16
lds
mov
cwtl
add
and
cmp
cli
loopne
mov
dec
adc
pop
iret
pop
or
xor
xchg
sahf
or
xchg
inc
clc
pop
lods
loop
call
add
mov
pop
xchg
mov
cmp
jmp
ljmp
xchg
jbe
xor
and
push
xor
mov
jae
jb
pop
mov
int
push
fstp
mov
inc
aam
or
xor
iret
popa
mov
mov
ror
xor
adc
add
sbb
or
int
in
cmp
bound
into
jge
cmp
pushf
sub
dec
jno
dec
dec
jnp
cwtl
subps
push
cmp
leave
xchg
std
ja
js
mov
mov
rolb
jb
adc
enter
and
loope
lret
mov
fdiv
adc
icebp
ja
scas
mov
aas
xchg
mov
jbe
jle
jge
and
out
in
jmp
inc
nop
loopne
lret
xlat
orl
fnstcw
push
add
dec
mov
xor
dec
and
dec
sbb
jb
jne
decl
jmp
js
aas
stc
add
and
rcrb
jns
add
inc
insb
mov
das
inc
addr16
iret
xchg
rcrb
iret
out
or
rcrb
movb
and
xorb
push
jg
mov
or
cld
shr
xchg
ljmp
and
adc
sbb
ss
nop
mov
es
inc
sub
dec
sarb
inc
inc
cld
jb
sahf
mov
xor
mov
cmp
mov
fsubl
lods
into
pop
mov
hlt
sub
je
mov
mov
adc
ss
pop
stos
xor
adc
stos
jbe
sbb
sub
je
mov
sub
sbb
xor
lods
stos
faddl
adc
arpl
push
cmc
aam
cmp
cmp
push
scas
mov
out
xor
mov
call
dec
stos
sbb
xor
jne
pop
aas
adc
std
jae
cs
push
cmpsb
popa
aaa
jp
rclb
mov
int
xor
lods
std
xchg
jae
mov
jle
fidivrl
sbb
hlt
mov
faddp
pop
or
rcrb
mov
fnstsw
js,pn
repnz
lret
data16
adc
repnz
and
sti
pop
pop
shrb
imul
dec
sub
mov
addl
dec
inc
lret
add
popf
imul
or
aad
or
stc
cmp
repz
push
test
test
pop
fucomp
adc
inc
mov
and
fnstcw
je
sahf
jg
cltd
and
mov
mov
iret
subl
test
dec
xor
iret
inc
ret
mov
fdivrl
jb
jno
jno
mov
jecxz
xor
sub
jbe
movsb
scas
clc
sbb
pushf
ret
das
mov
es
orb
movsb
jne
push
addb
ds
shl
cs
mov
cmp
cmp
sbb
add
stc
xor
repnz
insb
jge
stos
fnstenv
pop
mov
stc
loop
nop
inc
or
das
fwait
popf
bound
repnz
stc
pop
in
mov
xchg
mov
and
inc
cmp
pushf
fidivrl
into
nop
test
jmp
mov
sarl
scas
movsb
and
out
adc
push
shll
shrb
sub
dec
scas
xchg
cld
inc
push
push
out
into
inc
idivb
mov
cmp
stos
push
aaa
cmc
jns
push
mov
int3
add
fs
jge
sub
inc
jmp
lcall
jmp
dec
cmp
and
sti
or
aas
adc
idivb
jno
pop
mov
pusha
xchg
mov
clc
jle
pusha
xor
adc
jae
mov
imul
fistl
jg
push
data16
or
mov
mov
jne
xor
adc
jmp
popa
jno
lods
cmc
aad
nop
jmp
push
jno
xor
xchg
cmp
fidivrs
lcall
faddl
pop
pop
imul
dec
xlat
out
das
ds
imull
mov
pusha
mul
sbbb
stc
popa
int
or
cltd
das
lahf
pop
inc
or
frstor
xor
ret
cmp
push
ret
outsl
jnp
mov
xchg
sbbl
ds
pop
out
add
jae
movsl
icebp
adc
jg
mov
stos
loop
lret
jge
or
in
adc
fldt
sti
mov
pop
repz
mov
rcrl
sarl
fildl
push
dec
xor
fldl
jg
pop
xchg
push
and
pop
adc
repz
sbb
les
daa
shl
ljmp
movsb
aas
sbb
lds
stos
and
or
jle
mov
jp
pop
xor
sub
add
mov
push
jge
push
add
pop
cltd
popf
sub
icebp
hlt
adc
test
jo
stc
jg
arpl
nop
push
orl
inc
je
call
or
jb
jo
dec
stc
lds
mov
jno
fiadds
test
xchg
inc
mov
xor
lods
mov
jo
xchg
mov
imulb
fiadds
pusha
sbb
aam
int
shl
cmp
stos
push
push
popa
inc
hlt
in
call
cmp
shlb
rorb
adc
test
aas
add
push
add
fs
mov
sbb
jp
adc
and
gs
xorl
cmp
daa
ljmp
dec
enter
push
cmp
stos
es
cld
cmp
pushf
iret
push
ja
or
push
pop
pushf
jb
aaa
gs
mov
std
cmp
sbb
pop
mov
jb
movsl
sbb
ficompl
fmull
outsb
int
imul
mov
or
hlt
xchg
push
repz
mov
std
testl
mov
sub
rolb
movb
aaa
and
dec
test
mov
jno
notb
add
mov
fisttpll
in
mov
fadds
movsb
int
mov
push
xchg
into
mov
pop
repnz
mov
ror
push
lcall
pop
outsb
outsb
cs
and
and
and
or
xor
xor
xor
jmp
shrb
xor
icebp
jp
push
sahf
mov
jg
jge
adc
jg
movsb
mov
arpl
add
and
mov
add
ss
enter
lds
inc
sbb
mov
arpl
and
jbe
push
cmp
mov
xor
cmpsb
lcall
mov
jb
xchg
and
in
xor
mov
inc
lods
fs
or
dec
out
push
fldlg2
call
or
sha1msg1
mov
stos
es
loop
fsubrp
adc
sub
pop
push
test
ljmp
icebp
jae
push
pop
xorb
add
mov
popl
rcrb
pop
jno
pop
stos
lea
inc
xchg
addl
and
aam
fld1
jne
mov
shl
or
frstor
leave
pop
mov
data16
xchg
inc
add
sub
jno
cmc
test
shrb
xlat
mov
inc
inc
xchg
fnstcw
cmpsb
jbe
xor
pop
cli
fnstsw
negb
jno
cli
loope
fnstsw
cli
and
lea
and
testb
cmp
inc
add
imul
xor
adc
sbb
cmp
lcall
xchg
lret
xchg
push
push
jl
imul
sub
sti
mulb
mov
in
scas
fsubl
leave
push
inc
inc
dec
and
jp
insl
mov
xchg
or
cwtl
or
loope
push
pushw
xchg
shrl
call
sbb
pusha
and
inc
xchg
popf
adc
out
push
xchg
cmp
push
psllw
jg,pn
fisttps
mov
push
jae
cmp
arpl
out
test
jmp
loop
scas
stos
mov
or
into
mov
mov
enter
xor
fmull
jp
dec
push
in
sub
or
das
sub
sahf
ret
loopne
movb
cmp
inc
scas
cltd
lahf
imul
inc
inc
imul
lods
or
out
push
cmp
mov
addr16
nop
jb
les
cmp
pop
sarb
sbbl
shlb
movsl
stc
imul
mov
nop
and
mov
xchg
popf
or
pop
jns
mov
js
jb
inc
adc
xlat
cmpl
in
xchg
sbb
xor
scas
add
leave
js
jne
adc
cmp
dec
fwait
test
inc
inc
mov
add
test
mov
pop
movsb
rep
es
mov
xor
stos
and
cld
negl
decb
lock
pop
xchg
fs
xchg
jbe
xchg
sti
rclb
je
mov
insl
push
xchg
addb
jecxz
scas
xchg
lock
cmovb
mov
out
sub
subb
into
lret
fdivl
jbe
or
stos
push
adc
inc
pop
hlt
imul
mov
iret
cmp
stos
pop
push
aaa
aas
pop
out
or
xchg
sbb
push
out
insb
sub
mov
jmp
add
cld
mov
shl
jmp
into
js
inc
xor
subb
xchg
sbbl
mov
pop
leave
cmpb
push
fcomps
cmp
insb
icebp
stos
bound
shl
testb
ud2
and
inc
mov
mov
or
inc
fnstsw
out
inc
lods
je
mov
pop
jg
xor
lock
decb
push
repnz
decb
xlat
mov
sub
push
jg
call
dec
lods
lock
or
adc
lock
jmp
test
xchg
pushl
or
test
push
inc
out
or
push
test
loope
outsl
mov
push
es
and
sbb
repz
mov
lret
sbb
movsl
push
mov
mov
jo
cld
enter
dec
jmp
mov
sti
mov
or
das
or
pop
sub
add
push
nop
test
cmpl
out
push
ret
arpl
out
pop
sbb
or
je
pop
push
mov
pop
push
push
cmp
stos
pop
xor
jp
jecxz
imull
cmc
mov
loop
mov
xor
push
sbb
sub
lods
idivl
cli
xchg
or
ret
mov
call
adc
jbe
ret
adc
dec
jb
mov
mov
adc
mov
jle
sub
leave
pop
aas
out
ja
cmc
fadds
jl
loopne
imul
mov
push
gs
fimull
lahf
movsb
pushf
mov
sub
int3
xchg
shlb
sub
pop
dec
je
negl
mov
xchg
imul
insl
pop
shl
jecxz
or
add
arpl
movsb
or
sbb
cmp
xchg
jmp
pop
add
fadds
sbb
out
and
repnz
hlt
mov
xchg
clc
aam
addr16
mov
mov
mov
pop
push
stos
movb
mov
lods
jae
dec
or
mov
xor
orl
xchg
scas
jne
pop
dec
lea
jo
enter
adc
pusha
cs
fldenv
sub
adc
notb
cmp
mov
lods
xor
jmp
push
fwait
or
pop
pop
push
fldt
popf
cmp
sub
pushf
xorb
in
das
fldt
out
hlt
repnz
testb
push
pop
jg
into
je
iret
daa
sub
pop
inc
sbb
arpl
mov
loop
mov
dec
sub
aad
daa
add
and
aaa
lret
or
adc
sub
js
orl
addr16
sbbl
push
dec
inc
xchg
or
mov
jge
inc
hlt
sub
dec
mov
test
add
enter
xor
mov
int
mov
bound
mov
in
inc
fyl2xp1
xchg
rol
mov
addr16
pop
pop
and
imulb
or
inc
sbb
imul
stos
in
inc
js
push
adc
test
push
cltd
fdivp
ljmp
arpl
mov
std
mov
jns
push
int
movswl
stos
xchg
scas
adc
leave
mov
adc
roll
add
inc
and
daa
adc
sub
lahf
sbb
dec
ss
xchg
mov
sbb
mov
inc
adc
in
push
insl
xchg
lcall
cmp
pop
int3
fdivl
push
cwtl
adc
or
add
pop
pop
mov
inc
repz
dec
adc
jno
roll
xchg
leave
dec
mov
cld
loope
mov
icebp
add
pop
sub
xchg
addb
dec
mov
movsl
pop
inc
dec
lock
xchg
scas
push
xchg
pop
add
cli
repz
adc
adc
pop
add
add
fldl
adc
outsl
arpl
adc
sbb
ljmp
shl
into
or
xchg
sub
sub
in
sbb
adc
fdivrs
mov
adc
fisubl
mov
add
mov
andb
pop
pushf
dec
adc
hlt
loope
nop
dec
mov
lods
jae
fwait
stos
fildl
mov
sub
xor
ss
xlat
sub
xchg
pop
arpl
into
loope
addr16
xor
movsb
add
insl
pusha
addr16
xchg
mov
sub
clc
xor
sahf
xchg
cmpsb
push
pop
lcall
or
shrb
pop
xchg
or
xchg
mov
inc
in
call
jno
stos
fists
cwtl
addb
push
pop
loop
pop
sbb
cli
cmp
in
mov
xor
outsb
sub
ss
dec
cltd
and
or
add
subl
jle
aas
xor
fwait
popl
sbb
pop
adc
shrl
stos
in
shrl
xchg
jge
test
aam
nop
xor
cli
mov
insb
push
and
and
mov
jp
clc
xchg
push
subl
clc
lret
jns
and
or
ret
dec
mov
pop
sub
push
addr16
cs
inc
push
fdivl
xor
push
lret
jg
push
mov
xchg
loope
test
orb
xchg
popa
dec
xchg
xchg
orl
push
pop
js
pop
fst
call
mulps
test
mov
adc
scas
sub
mov
mov
pop
push
enter
ds
dec
jmp
or
sbbl
mov
xchg
jnp
fcom
adc
movsl
inc
xor
push
mov
jne
cmpb
bsr
ljmp
sbb
inc
cld
fstl
addr16
lods
cmp
and
xchg
mov
test
or
pop
xor
bnd
mov
dec
ss
mov
pop
add
inc
loope
fs
jns
jo
scas
arpl
lret
push
cld
lds
pop
das
insb
sti
mov
insb
or
dec
rcrl
lret
xchg
shr
stc
fwait
jo
icebp
loopne
addb
out
repnz
xor
xchg
or
push
mov
es
lcall
xchg
dec
cmp
pop
loop
andb
test
iret
jne
movsb
mov
jge
repz
cli
leave
cmp
sarb
cltd
lret
sbb
dec
dec
and
jecxz
inc
dec
lret
inc
sub
mov
stc
and
popa
mov
adc
test
lret
inc
mov
mov
dec
mov
pop
push
push
cwtl
in
xor
mov
xor
jg
sbb
test
dec
push
sarb
stos
mov
cld
je
fidivrs
fisubs
add
aam
adc
jmp
out
in
pop
add
jg
and
jecxz
mov
push
pop
pop
daa
cmp
push
xchg
in
setg
mov
inc
lea
fisubl
mov
pushf
icebp
mov
test
xlat
mov
sub
outsl
pushf
jmp
faddl
xor
or
add
outsl
pop
push
sub
mov
pop
lcall
inc
sbb
jne
mov
dec
fisubrs
cmp
ja
ret
ljmp
push
cmp
popa
sub
jnp
xor
cld
lods
int3
stc
mov
subb
ficompl
shr
shll
adc
cmp
jno,pn
fmul
xchg
jg
aaa
in
sbb
out
shrb
repnz
movsl
loopne
in
cmpsb
dec
adc
mull
push
fsubs
or
cmpsb
add
jbe
stc
ss
ss
push
clc
iret
or
add
pop
sbb
andb
in
push
test
popa
mov
dec
jp
push
cmp
mov
int3
mov
jo
out
push
adc
mov
xchg
pop
mov
xor
rcrb
lock
jb
and
and
push
mov
sub
mov
test
and
add
pop
fs
aaa
fwait
stc
and
mov
scas
push
pushl
movsb
imul
hlt
ds
and
xchg
mov
cltd
and
xorl
gs
xor
lret
and
push
in
sti
std
xchg
push
jno
push
test
push
rcrb
mov
std
cmp
pop
add
jecxz
ljmp
xor
jge
xor
in
push
fcmovnbe
mov
adc
push
mov
pushl
jne
sub
repz
fiadds
push
pop
movsb
mov
push
out
add
cltd
jbe
fwait
pop
bnd
mov
test
xor
xchg
mov
pop
movsl
icebp
popf
mov
adcl
out
orl
aaa
mov
sbbb
pop
int
cli
mov
cmpsl
call
mov
and
add
pop
jae
mov
sbb
pop
sbb
call
push
fbld
adc
jecxz
mov
sub
cld
scas
adc
out
sub
xor
pusha
lcall
mov
cmp
insb
xchg
std
pop
nop
pushf
cmp
dec
xor
sub
sbb
mov
adc
push
lea
clc
mov
les
pop
data16
mov
lods
adc
fwait
leave
fildll
pop
pop
inc
xchg
loopne
push
cmp
ret
pushf
test
sbb
in
hlt
cmp
inc
add
or
fisubrl
mov
sahf
ds
mov
pop
push
push
sbb
mov
call
int3
aam
xchg
cmp
mov
dec
cmp
ja
and
scas
cmp
in
push
push
sbbl
sbb
push
and
jl
xchg
je
iret
in
test
mov
add
out
sub
es
xlat
or
callw
jg
lea
insb
into
add
jne
ds
cmp
push
add
ret
sbb
fsubrl
into
les
mov
rolb
jns
fists
mov
and
sbb
mov
popf
insb
out
dec
mov
mov
dec
push
ret
cwtl
out
scas
and
dec
rcl
fisubrl
jp
and
aad
or
mov
aas
dec
int
out
repnz
faddp
testl
inc
out
mov
sbb
in
pop
jle
pop
or
add
mov
dec
jle
fs
or
enter
outsl
es
in
jge
jnp
call
dec
out
cltd
sub
and
lods
jge
les
test
in
and
cmp
mov
aaa
out
clc
push
iret
cs
insl
rcll
stc
xor
inc
jge
push
cmp
push
jb
das
lcall
fists
sbb
and
daa
inc
ljmp
test
jp
out
push
loope
xchg
add
cmpsb
jl
mov
sub
pop
repnz
aaa
dec
inc
and
sbbb
pusha
mov
sbb
push
aad
test
scas
lea
jp
mov
es
dec
out
and
lcall
stc
sbbl
mov
je
xchg
sbb
outsl
pop
dec
lods
rcrb
mov
xchg
jb
pop
push
and
push
adc
xor
jp
jp
mov
fcoms
push
in
inc
push
ja
scas
push
rolb
in
imul
cmpsl
xchg
ja
arpl
es
push
movsl
and
mov
and
inc
xchg
inc
mov
jl
xlat
adc
jecxz
mov
push
jl
loopne
call
xor
sbb
and
xchg
leave
xor
test
in
or
mov
rcrl
or
sub
stos
inc
adcl
inc
cmpsb
inc
cmpsb
es
or
cli
pusha
pop
push
sti
scas
rcrl
stc
cmp
cmp
adc
pushf
out
dec
ljmp
mov
mov
mov
lock
cli
test
loope
add
add
mov
xchg
xlat
sub
dec
mov
ljmp
mov
jbe
mov
mov
fwait
jecxz
xor
push
int
push
les
xchg
cmpsb
lcall
push
pop
xlat
and
lret
mov
inc
push
xchg
push
mov
mov
mov
cs
mov
shl
xor
sub
mov
shll
sbb
xchg
push
push
pushf
fidivs
inc
mov
add
arpl
into
push
and
arpl
pushf
and
adc
sub
jg
fistl
cli
divl
mov
das
fs
mov
data16
div
lds
repz
sub
fcomps
pop
inc
insl
sti
pop
add
adc
jle
jge
fadd
sbb
fisubl
mov
fsubrp
mov
shll
adc
pop
pop
rclb
sbbl
fwait
adc
xor
test
fwait
inc
js
movsl
cmp
push
scas
fs
mov
adc
call
cmpl
je
pusha
dec
push
push
sub
or
mov
sti
sbb
dec
jno
repnz
in
mov
cmp
sbb
int
jmp
push
inc
into
push
and
arpl
xchg
jbe
pop
mov
fadds
pop
and
hlt
adc
les
sub
add
mov
adc
mov
sti
das
mov
sbb
xor
add
repz
and
pop
pop
sbb
mov
mov
das
mov
push
mov
nop
lock
leave
sti
adc
or
int
test
rcrb
xlat
cs
xor
mov
mov
or
xchg
push
inc
add
pop
rclb
leave
imul
aaa
jg
or
jle
xlat
jl
ja
mov
pop
ret
leave
mov
mov
dec
in
aaa
sub
push
xchg
sahf
and
jbe
loopne
fs
nop
fsubrs
jo
mov
xchg
push
pop
inc
xlat
lods
shl
lret
aas
mov
repnz
in
cmp
add
fbld
notl
jge
mov
xorb
push
pop
or
mov
ja
jl
loop
clc
mov
mov
insl
adc
enter
je
imull
out
or
aaa
ljmp
xchg
clc
pop
jp
jno
push
out
in
and
mov
bound
push
mov
hlt
call
cmc
fs
jmp
aas
inc
xchg
adc
inc
outsb
sbb
mov
push
push
xor
into
add
jne
sti
and
mov
or
mov
cmp
add
mov
inc
mov
iret
add
sbb
movsb
cmc
xchg
bound
mov
xor
push
div
xorb
sub
mov
rcl
mov
inc
loopne
lods
sub
mov
jmp
dec
cli
push
out
pop
jb
xchg
out
cmpsl
pop
jae
loop
shl
inc
sub
pop
and
lds
inc
xor
mov
ret
call
fs
aaa
iret
push
mov
adc
rclb
cs
lock
mulb
lcall
xchg
pop
std
mov
xor
rcrb
adc
add
push
mov
cmp
and
dec
ja
and
push
loope
fwait
mov
push
push
add
in
mov
stos
xchg
cmp
popf
outsl
imul
fcmovnu
aam
sub
cwtl
pop
in
add
adc
mov
test
outsb
cmpsb
xchg
in
xor
jp
in
sub
cmp
ss
inc
cmp
int
and
ret
push
cs
cli
std
in
repnz
inc
clc
jp
add
pop
orb
push
mov
dec
orl
repz
mov
test
in
fadds
inc
fisttpll
push
imul
cwtl
mov
ljmp
inc
cld
bound
lods
imul
mov
lcall
imul
imul
xchg
aaa
sbb
xchg
jo
adc
ss
out
loope
adcb
sub
fcmovne
hlt
lods
dec
roll
ss
xchg
fwait
mov
or
inc
or
cmp
out
call
jl
outsl
test
pop
mov
outsb
fistpl
leave
icebp
jmp
inc
mov
dec
in
test
hlt
and
popf
jnp
mov
aaa
pusha
imul
jle
cwtl
dec
add
rcr
sub
roll
inc
int3
jecxz
lret
pushf
call
inc
cs
xchg
imul
jmp
out
cmpsl
movsb
adc
out
sbbb
loope
dec
dec
inc
adc
mov
js
and
mov
lock
cmpsl
jbe
rcl
sub
push
sbb
mov
int3
or
inc
xchg
cli
hlt
pop
int3
dec
test
out
addl
icebp
xor
aad
imul
nop
es
xor
and
xchg
in
dec
sbb
into
adcb
jbe
mov
movsb
adc
xor
and
inc
mov
dec
cmpsb
pop
or
int
fimuls
and
xor
lret
and
fistpl
jmp
and
and
pop
ss
cwtl
add
and
xchg
sbb
mov
inc
fwait
adc
inc
mov
add
int
mov
and
lock
gs
cmp
fdivr
lods
jmp
sbb
leave
xor
xor
or
out
cltd
push
ret
sub
xor
pusha
ror
cmp
mov
rcr
aad
notl
or
push
sbb
push
stos
pop
xlat
ror
in
fsubl
repnz
les
shrl
mov
das
inc
dec
sub
cwtl
push
inc
pop
repnz
ja
aad
hlt
das
ljmp
ret
sub
push
rorb
or
jmp
std
stc
cmc
test
js
jbe
dec
call
iret
pusha
movsl
sbb
mov
mov
testb
cltd
xchg
hlt
mov
mov
cmp
aad
inc
push
mov
es
ja
scas
adc
push
jge
mov
adc
jb
jo
divb
sub
and
mov
add
inc
and
or
jmp
xor
adc
movsl
mov
mov
mov
lcall
mov
bound
inc
pop
daa
mov
or
xchg
sbb
leave
jg
and
icebp
xlat
xchg
clc
bnd
inc
iret
shrb
mov
push
scas
xor
xchg
mov
cmp
movsb
and
push
testl
jae
jp
out
cmp
pusha
cmpsl
roll
mov
cwtl
ljmp
push
movsl
push
pop
sub
loopne
fsubs
out
pop
pop
ja
ret
mov
stc
ljmp
mov
sbb
sbb
add
mov
xor
sub
cwtl
push
xchg
test
ficoms
push
push
pop
jp
subb
outsb
out
pop
sub
cmp
jmp
mov
push
fildl
xacquire
sahf
xchg
in
cmc
xor
aaa
xchg
push
pusha
cmp
push
push
mov
push
push
fwait
gs
data16
movsl
pushf
mov
push
lods
lock
inc
sti
push
mov
loope
cmc
push
mov
clc
call
ret
push
movsb
stos
push
dec
inc
inc
ret
repnz
lahf
lock
in
mov
cmpsl
bound
adc
add
dec
ds
jecxz
rorl
daa
aas
xor
mov
jmp
mov
pop
push
mov
pop
and
mul
outsb
push
add
repz
pop
bound
fistpl
sbb
mov
or
xor
sarl
ljmp
adc
dec
and
and
repz
xchg
rcrl
push
inc
fnstsw
shrb
sub
aaa
add
push
add
lds
data16
adc
int
jmp
dec
mov
sub
mov
pop
jmp
and
lds
enter
into
pop
fbld
lcall
sub
xchg
xchg
xor
std
mov
add
dec
push
test
jno
sbb
or
sbbl
aad
jmp
lret
mov
pop
cmc
adc
add
adc
movsb
ljmp
fs
out
ljmp
add
sub
pop
mov
aam
lds
lcall
pop
mov
dec
rcl
gs
stos
sarb
mov
mov
aam
inc
rcll
cmp
ucomiss
jg
add
cs
in
mov
gs
and
xchg
jb
jns
imul
push
neg
xchg
stos
push
shlb
ret
sub
lea
cmp
add
addr16
cmc
adc
lods
repz
imul
xchg
cmp
shrl
arpl
fcoml
sbb
jns
push
push
out
insl
inc
xor
sub
mov
or
aad
scas
imul
cmp
jb
jno
ss
or
xor
lds
inc
fs
sbb
fistl
dec
sbb
xor
aas
sub
cmpsl
xchg
or
ret
jns
repnz
dec
mov
xchg
aaa
ret
bound
xchg
incb
ficoms
push
or
aas
add
pop
loop
add
add
sub
adc
jge
sub
inc
mov
ljmp
adcl
sub
push
push
add
cmp
cli
and
movsb
decb
xchg
fists
pusha
mov
xchg
add
into
jle
lock
enter
icebp
lds
mov
pop
and
sbb
adcl
xchg
cmp
mov
push
xchg
add
test
xor
sub
mov
sbb
scas
jl
scas
insb
stc
mov
mov
mov
and
sbb
movsb
xchg
adc
cmp
cwtl
cmpsb
ss
aad
pop
or
sub
xor
pcmpgtd
call
mov
mov
mov
push
insb
cs
inc
xor
push
pop
xchg
and
pop
fidivrl
fisttpl
add
fstpt
cmp
fwait
push
test
add
popf
pop
sub
sarb
arpl
loopne
pop
test
push
dec
ret
imul
inc
into
add
aas
xor
mov
out
cmp
outsl
or
sbb
int3
test
inc
adc
movsb
test
or
jbe
jno,pt
rolb
push
das
mov
lret
movb
push
jae
nop
cltd
dec
fcmovu
add
addb
scas
pop
pop
pop
xchg
lock
jmp
int3
ja
xchg
jb
dec
addr16
and
call
lcall
fisttpl
sub
adc
sbbb
adc
jb
xchg
xor
out
adc
sbb
enter
mov
aaa
push
adc
adc
pushf
std
lods
mov
orb
es
cmpsl
fnstsw
mov
lret
jns
in
inc
mov
rol
mov
in
or
sbb
add
cmp
jo
shl
pop
fsubrl
cmpl
cmp
adc
mov
repnz
dec
pop
dec
int
pusha
les
push
pusha
pop
add
xor
insl
cmp
mov
pop
shrb
and
jns
jns
pop
add
movsl
pop
inc
nop
pushf
add
and
mov
xchg
fwait
push
fiaddl
loop
sbb
out
add
test
sub
imul
sbb
mov
imul
es
push
pop
test
loop
ret
pop
cltd
cmp
pop
add
xchg
add
lret
sub
lds
adc
dec
adc
cli
popf
iret
ds
sqrtps
jb,pn
jmp
loopne
fldt
out
xchg
ljmp
lret
xchg
in
pop
adcl
mov
pop
adc
stos
xchg
aad
repnz
and
in
adc
dec
xor
enter
push
add
testb
pop
adc
es
mov
test
fiaddl
idivl
dec
dec
or
push
sub
imulb
pop
repz
or
stos
xchg
mov
pop
test
jae
mov
push
mov
imul
div
inc
aam
xchg
out
or
sub
xor
stos
mov
and
ds
mov
add
inc
test
js
and
movsl
jo
sub
inc
addl
dec
call
fs
movsb
test
ja
out
inc
mov
xor
sarb
cmp
xor
push
mov
xchg
jg
lds
inc
xchg
movsl
cli
adc
mov
insb
scas
out
jae
sub
imul
xchg
sbb
pusha
test
leave
xchg
and
stc
enter
into
sti
push
xchg
nop
jle
aas
inc
jnp
movsl
in
lock
lret
push
fisubrl
shlb
inc
lods
cmpsb
push
sub
insb
fwait
and
jle
mov
outsl
mov
jns
mov
xchg
mov
fcoml
out
jbe
jbe
xchg
jno
mov
loopne
icebp
std
adc
ljmp
xor
xor
inc
std
dec
xor
pop
mov
push
movsl
clc
or
ds
sahf
les
call
jmp
sub
jno
or
icebp
add
lds
shrl
pop
out
lds
ret
adc
pop
jle
mov
mov
mov
sbb
add
jo
jmp
dec
and
stos
dec
mov
outsl
push
or
imul
in
pop
lret
jmp
pop
pop
outsl
pop
dec
das
add
xchg
mov
hlt
xchg
popf
xor
lods
jo
mov
push
test
loopnew
fdivr
movsb
push
xor
fstpl
gs
mov
sbb
stos
xor
adc
cmpsb
jp
jae
pop
sbb
jmp
adc
sub
adc
mov
pusha
or
pop
push
push
scas
sub
push
negb
push
xchg
or
and
dec
push
outsl
movsl
out
cwtl
movl
mov
rcrl
rolb
lret
inc
mov
mov
ds
mov
std
mov
scas
ds
repnz
jb
mov
inc
loopne
fwait
js
inc
js
xor
adc
sbb
cmp
daa
pushf
lret
add
ret
jp
outsb
in
rolb
or
std
adc
cmc
repnz
adc
mov
sub
das
cmp
aaa
mov
adc
cmp
mov
fs
mull
fcomps
ljmp
scas
and
hlt
sbb
sbb
cs
pop
xor
hlt
push
adc
imul
aad
adc
jb
roll
push
popf
mov
jne
sarl
push
imul
or
shr
xchg
or
mov
lret
add
sub
mov
mov
or
imul
mov
sub
movsb
imul
push
mov
mov
sub
mov
aaa
xchg
arpl
mov
jp
mov
loope
rcrb
mov
jns
jge
inc
mov
xor
lcall
shr
lods
pop
pop
pmullw
int3
adc
add
sub
stos
mov
dec
and
dec
rcll
std
and
xor
xor
ljmp
cmpsl
nop
cmc
sbb
in
push
or
cltd
inc
cmc
jns
cmpl
xchg
popa
into
cmp
jne
call
pop
mov
xorl
xorl
xor
imul
je
leave
je
aam
in
cmp
xchg
cmp
mov
enter
add
push
mov
ds
dec
jle
add
mov
push
sbb
adc
xor
cmp
add
aaa
cmp
out
fnstcw
testl
popf
jns
popf
add
jne
jae
cltd
mov
inc
jb
adc
cmp
js
das
pop
pop
je
ss
mov
fucomp
sbbb
mov
lods
pop
int3
inc
inc
pusha
mov
mov
insl
push
test
pop
out
cli
and
xor
xor
pop
ficomps
aas
mov
sbb
into
loope
push
insb
mov
inc
stc
jnp
fimuls
les
push
ss
outsb
mov
daa
fsts
out
loope
lahf
push
and
out
xor
xchg
cmpsl
test
repz
pop
mov
out
jge
push
cmp
cmp
lods
daa
push
movsb
rolb
je
sub
pop
inc
les
scas
sub
mov
add
sub
or
test
pop
ret
aaa
or
fxch
in
push
enter
and
ja
movsl
mov
jp
aad
mov
xchg
fbld
adc
cli
rclb
stos
dec
adc
push
add
fs
jle
push
xor
cmp
loop
pop
xchg
addr16
test
das
shl
incb
xchg
out
xchg
add
mov
xchg
test
adc
fs
push
push
jbe
lret
mov
or
in
outsb
lahf
pusha
mov
or
pop
dec
xchg
and
les
call
movsl
jge
out
aad
enter
or
insl
fwait
mov
lods
jae
jle
xor
push
push
mov
ret
push
mov
jbe
addr16
inc
mov
imul
xor
mov
lods
mov
push
stos
mov
repnz
fmull
decb
cmpsb
mov
add
lods
aam
jns
js
stc
pop
xorb
or
iret
push
aam
loopne
add
cld
lea
dec
pop
xchg
cmp
imul
xor
rorl
insb
fwait
repnz
add
mov
mov
xor
mov
add
movsb
mov
cmpsb
mov
inc
test
movsb
mov
ljmp
push
adc
js
mov
jle
jne
jnp
sarb
ds
call
adc
dec
mov
xchg
insb
scas
gs
movsl
mov
xchg
in
mov
mov
inc
mov
test
inc
daa
jecxz
add
adc
jmp
inc
mov
pop
xchg
jns
lcall
cwtl
nop
dec
aas
mov
ret
pop
cwtl
cmp
fildl
xor
pop
dec
out
sub
or
sub
inc
pop
aam
and
sarb
arpl
jb
xchg
cli
push
es
xchg
pop
lods
cltd
xor
test
inc
call
cwtl
addr16
imul
imul
xor
push
sbb
and
add
pushf
test
push
subb
mov
outsl
mov
pop
add
sbb
enter
fcmovne
inc
repz
test
mov
loop
out
mov
cli
mov
sahf
shlb
sbb
sti
sbbl
movsb
bound
fisubs
mov
pop
stc
push
pop
mov
pop
arpl
jl
lret
sub
mov
insl
dec
cmpsb
inc
inc
mov
mov
ret
mov
idiv
ret
cmp
inc
ja
jp
add
jo
inc
stos
xor
sub
hlt
xchg
cmp
sub
jl
cltd
fistpl
xchg
and
shrb
daa
jno
daa
mov
jg
mov
fisttpl
dec
fadds
das
mov
nop
and
insb
cmp
mulb
daa
mov
inc
flds
ret
pop
fldenv
out
test
mov
mov
imul
xlat
inc
aad
push
sbbl
push
pop
jp
fbld
and
psllw
inc
fcmove
add
or
es
xor
ja
shll
rcrl
mov
fcmovbe
or
add
imul
pop
push
xchg
sbb
cli
call
stos
xchg
sarl
stc
cli
into
in
mov
in
push
outsb
mull
push
dec
lea
addl
ljmp
adc
cld
negb
fsts
popa
xchg
insb
sbb
aas
sub
orb
incl
cltd
dec
adc
add
jo
fs
mov
dec
jmp
pop
pop
cmpsb
pop
jno
clc
mov
ja
inc
repz
inc
jne
mov
jo
lahf
cmp
dec
jl
xchg
xor
pop
fiaddl
dec
enter
xor
mov
jnp
imul
notb
xor
inc
pop
push
cmp
lahf
push
fcmovu
dec
adc
or
mov
in
stos
jb
cltd
lea
stos
cs
aad
sub
pop
add
sbb
sar
inc
pop
mov
adc
lods
mull
aam
xor
jb
dec
das
sub
out
addr16
push
mov
or
or
xchg
mov
adc
push
jp
jecxz
xor
cmp
inc
sahf
mov
dec
ja
add
push
cmpsb
xchg
mov
mov
in
stos
mov
popl
test
int
fnstcw
arpl
push
mov
pop
mov
sbb
mov
mov
or
pushf
outsb
cwtl
push
rolb
enter
ret
mov
xor
out
inc
out
mov
sti
mov
lods
sub
shll
sbb
stc
dec
hlt
inc
or
jae
sbb
and
and
ss
cmp
test
mov
mov
fcoms
mov
sub
mov
push
in
jno
fdivs
testb
cwtl
nop
stc
loop
lds
xor
cmc
or
aas
inc
shll
push
add
dec
mov
pusha
loop
ficoml
xor
cli
ljmp
ja
jge
repz
push
push
fs
les
arpl
cmc
add
mov
fimuls
jp
mov
push
mov
pop
or
fidivl
push
pop
push
push
mov
gs
movsl
scas
ret
mov
daa
cmpsl
cmpsb
mov
cmpl
push
push
jb
mov
in
test
dec
das
jecxz
mov
xor
jne
sub
divb
testl
jbe
js
aam
mov
fwait
add
inc
mov
push
inc
mov
insl
jns
jg
lds
sbb
xlat
dec
add
pop
push
inc
adc
push
mov
adc
jg
sbb
push
dec
lret
mov
in
popf
addr16
in
mov
movsb
mov
fdivrs
xchg
insb
and
clc
xchg
inc
into
mov
lret
jbe
xor
pusha
scas
stc
pop
loope
xor
cld
mov
push
lods
fs
std
cmp
das
loop
sahf
iret
outsl
push
aaa
cld
xchg
outsl
dec
jns
xchg
cltd
mov
fdivrs
inc
jle
inc
cli
dec
dec
inc
in
push
sub
or
into
dec
xchg
pop
pop
push
push
and
addr16
lods
pop
pop
sti
int3
mov
icebp
fidivs
out
push
lcall
movsl
sub
daa
xlat
add
push
mov
pushl
shrb
xchg
fists
jmp
pop
in
cmp
mov
jl
jnp
xchg
xor
add
mov
inc
push
mov
or
ret
loope
je
enter
and
data16
inc
push
test
dec
outsl
call
movsb
icebp
movsl
jp
xor
stos
fidivrs
in
hlt
out
es
mov
ret
fwait
into
adc
int
dec
mov
mov
mov
pop
cmp
mov
mul
push
mov
dec
in
ljmp
pop
xor
mov
nop
dec
xchg
and
cmp
xor
loop
movsl
and
lretw
mov
dec
bound
rorl
mov
sbb
adc
adc
rcr
xchg
xorb
sbb
push
pop
push
lds
push
xor
mov
xor
cmpl
sub
gs
inc
fs
mov
push
pusha
je
xchg
mov
pop
xchg
mov
pop
loop,pn
in
inc
add
pop
mov
sti
dec
jge
loopne
ljmpw
or
push
push
testl
xchg
int3
mov
mov
lock
and
xlat
add
cmp
aas
dec
or
mov
push
mov
lods
xor
lahf
xor
xchg
stos
ret
dec
dec
mov
fucomip
cmp
sub
sub
pushl
jl
push
enter
into
mov
test
lods
xchg
dec
cwtl
push
cmp
add
das
jae
xor
pop
cmpsw
fld
add
repz
aad
xlat
jne
dec
pushf
leave
xchg
push
push
fisubl
outsl
js
mov
mov
out
push
cmp
and
scas
inc
dec
outsl
aaa
insl
mov
pop
iret
add
dec
mov
sbb
xchg
mov
stc
or
insb
cmp
hlt
cmp
lahf
call
lahf
dec
in
mov
and
sub
dec
add
lea
or
push
jp
xchg
push
xor
mov
adcl
enter
mov
sti
inc
es
stos
and
ljmp
repz
xchg
mov
cltd
jge
jns
jno
scas
popa
aas
sti
adc
push
loop
lods
or
adc
add
mov
push
fadds
jge
stos
xchg
rolb
into
fwait
adcb
add
mov
adc
xor
inc
outsl
out
xor
std
mov
xor
xchg
add
cmp
mov
push
add
mov
sbb
mov
sbb
loop
lock
pop
sbb
scas
xchg
aad
mov
dec
in
stos
sarl
sbb
jo
iret
mov
push
push
mov
std
sarb
mov
fmuls
decl
or
or
mov
andb
mov
dec
shr
xchg
xor
test
dec
outsb
jbe
xor
xor
call
enter
mov
adc
mov
jb
lret
xor
negb
pop
push
negl
pop
xchg
push
fld
fdivs
adcb
jae
adc
jmp
test
dec
mov
jne
shlb
sub
pop
mov
fisubrl
fstpl
js
push
in
and
push
jp
je
adc
bound
cmp
enter
jge
in
insl
sbb
xchg
mov
loope
ss
nop
mov
push
mov
popa
out
push
push
pop
test
cmp
mov
cmp
cld
daa
and
cmc
test
mov
mov
or
test
clc
int
inc
cld
les
roll
and
mov
dec
int
xchg
arpl
insb
pop
cmp
mov
mov
xchg
pop
pop
pushf
pop
mov
fnstenv
pop
fnstsw
popf
imul
adc
or
iret
push
out
rcll
mov
int3
sbb
insb
dec
jge
mov
add
lcall
pusha
repz
jmp
insb
scas
lds
pop
mov
hlt
pop
xchg
dec
cmpb
sahf
add
sub
lock
rol
insb
mov
movsb
sbb
add
mov
or
jns
jge
loop
jno
scas
out
call
jecxz
mov
jno
or
xchg
pusha
in
lock
outsl
cli
lahf
fstpt
jbe
inc
sti
outsl
jbe
push
loopne
rcrb
dec
xchg
xchg
dec
ds
adc
jns
sub
pop
or
in
and
sub
hlt
loop
pop
lret
mov
mov
roll
jecxz
mov
imul
xor
rolw
fwait
enter
les
or
ret
cmp
das
adc
cmp
mov
cmp
push
dec
iret
shll
lret
mov
std
jbe
enter
cmp
fsqrt
push
xor
cmc
pop
popa
cli
pop
das
imul
mov
dec
mov
repnz
paddsb
adc
push
sub
xlat
pusha
add
mov
dec
fdivs
mov
ror
xor
or
popa
in
jle
cmpsb
and
sub
xchg
lods
lret
mov
jno
stc
jo
xor
iret
arpl
cmc
in
xlat
imul
inc
inc
jg
movsb
adc
imul
xor
push
jb
loop
arpl
insb
inc
adc
pop
or
mov
jb
jbe
sbb
fsubrl
inc
xlat
aad
push
lock
push
or
leave
mov
fs
insl
int
dec
enter
pop
add
cmpsl
aas
inc
jo
mov
xchg
mov
xlat
mov
insb
gs
test
inc
loope
in
pusha
lods
dec
aaa
or
je
and
add
sarl
dec
ss
lcall
dec
xchg
stos
ja
dec
jle
sbb
mov
jge
call
out
push
push
jle
mov
mov
sub
ficoml
ret
xchg
das
sbb
pushf
adc
xchg
adc
jmp
dec
adc
in
dec
notl
mov
imul
dec
ss
ja
cwtl
mov
insb
add
xor
inc
fs
inc
shr
cmp
cs
mov
mov
jae
xchg
lcall
bound
aad
mov
out
ljmp
repz
sahf
push
scas
sbb
jle
stos
test
bswap
andb
lret
iret
jo
ficomps
int
jmp
push
nop
add
movsb
icebp
mov
cmp
adcb
iret
aas
pop
xchg
pop
sarl
push
pop
in
sbb
and
adc
call
mov
push
pop
mov
loope
mov
ds
pop
xchg
pushf
dec
stc
add
out
imul
mov
jbe
mov
cwtl
mov
rorl
js
jecxz
and
or
pop
mov
cmpsb
je
mov
jnp
iret
sbb
sti
int3
outsl
ficoms
mov
test
sbb
movsl
int
mov
pop
mov
gs
jge
pop
and
inc
rcrb
and
fcomp
test
outsl
add
stc
xchg
or
fstp
jmp
popa
aaa
and
je
mov
jae
jo
iret
push
mov
ss
out
xchg
stos
outsl
inc
daa
mov
and
sar
cmp
adc
test
xchg
cmp
mov
fldenv
and
adc
pop
rcrl
inc
xchg
int
push
push
inc
dec
jp
imul
mov
sub
jb
mov
pop
pop
shll
push
mov
mov
pop
jmp
adc
mov
xor
pop
lcall
push
push
sub
insb
scas
dec
xor
repz
cltd
js
sbb
bound
negl
fadds
cmp
mov
insl
addr16
xchg
test
gs
sarl
jb
out
and
dec
sub
inc
cmp
adc
xorl
cwtl
dec
sub
addr16
or
push
aad
jg
stos
or
add
dec
test
mov
adc
addb
xchg
cld
push
gs
sub
mov
dec
rcll
push
cld
je
push
fs
jl
or
jbe
pop
dec
jg
lret
inc
cs
hlt
mov
rclb
sbb
xor
or
fldl
dec
rclb
aam
xor
add
xor
mov
jge
popa
in
pop
sbb
ret
jecxz
fcmovne
xor
dec
xor
sbb
jmp
lods
ret
jg
inc
cwtl
sbb
add
ja
mov
xor
je
sbb
aad
das
adc
jae
inc
aam
in
dec
stos
cli
scas
pop
jno
ja
xabort
inc
mov
insl
sbb
cmpsb
into
jmp
repnz
pop
xchg
in
ljmp
pop
xor
jmp
dec
fldt
sahf
stos
jne
icebp
mov
repz
inc
repz
aas
add
and
bnd
mov
adc
ret
inc
jb
xchg
pop
mov
mov
mov
xchg
mov
mov
mov
mov
jb
out
call
mov
scas
xchg
mov
out
mov
jp
xchg
loop
cltd
jns
decb
jbe
loopne
add
mov
daa
inc
stos
popa
clc
fsubs
das
movsl
dec
mov
push
or
aad
push
xor
pusha
pop
icebp
test
sub
loop
arpl
xchg
test
mov
xchg
fadd
sbb
xchg
test
xor
jge
add
push
pop
lret
cmpsl
dec
loope
out
data16
cmp
or
inc
xor
jnp
jne
add
inc
imul
outsb
rcll
cs
mov
ljmp
popa
int3
je
cmc
scas
ficompl
data16
sarl
mov
xchg
or
and
inc
jge
mov
mov
or
enter
mov
xchg
je
je
mov
sbb
mov
cmp
sti
subb
std
mov
jecxz
outsb
arpl
jae
fstps
mov
mov
js
ret
xchg
and
cmpsl
fwait
and
rcll
dec
mov
loope
xorw
and
add
mov
add
aaa
call
fsubr
xchg
xor
mov
lods
mov
test
sti
cltd
insb
add
adc
push
fidivs
jne
fnstcw
or
rcrb
das
inc
imul
bnd
pop
push
push
mov
js
xchg
cmp
pop
inc
inc
pop
shll
js
inc
xlat
add
out
pushf
fsubrl
mov
js
fs
jle
sti
fcoms
mov
mov
les
mov
mov
adc
nop
and
aas
pushl
incb
loop
cltd
sbb
xchg
ss
add
fs
add
mov
pop
add
cld
sub
icebp
ret
jne
inc
or
testl
popf
mov
loope
mov
shl
stc
adc
pop
sbb
inc
pop
inc
mov
or
stos
dec
adc
rorl
add
add
in
adc
xchg
cmp
sub
cmp
mov
dec
nop
mov
and
push
and
mov
fstpt
cmpsb
push
imul
push
dec
xchg
int
aas
je
pop
xchg
mov
push
or
stos
mov
ljmp
mov
imul
aam
xchg
sub
pop
ret
mov
test
mov
xor
pop
adc
xchg
adc
loop
mov
cmp
push
shlb
push
dec
loope
icebp
jnp
gs
mov
jg
repnz
rclb
and
pusha
cld
xor
imul
test
hlt
dec
fstpl
push
push
bound
sub
mov
or
popf
push
xchg
repnz
rolb
sub
repnz
mov
jo
or
sbb
inc
pop
sub
mov
jp
mov
add
ficomps
add
aam
repnz
sbb
dec
je
lds
arpl
jmp
into
nop
xchg
cld
stc
std
xor
dec
lret
arpl
dec
stos
iret
add
add
or
jmp
dec
ficomps
adc
mov
push
shlb
add
push
pop
sbb
rorb
test
adc
dec
add
pop
sahf
lds
rorb
ret
aaa
mov
pop
rorl
lods
mov
xor
xchg
scas
jae
fistl
dec
xor
mov
in
xor
pop
adc
popf
jl
lret
mov
jmp
orb
and
std
nop
jge
or
push
repz
pop
mov
in
push
xorl
mov
adc
outsb
out
ret
jl
mov
out
fucompp
fstpl
fiaddl
xor
pop
dec
mov
fdivr
mov
iret
int3
je
enter
pop
scas
pushl
mov
icebp
in
int
cmpsl
lret
fcmovnbe
leave
in
outsb
sbb
inc
sti
cmp
jns
cmp
movsb
lods
bound
rolb
in
push
cmp
adc
mov
and
repnz
xor
scas
adc
cli
loop
dec
xor
insb
enter
push
push
xlat
sbb
mov
sarl
andl
cmp
adc
sbb
data16
pop
psrad
jae
pusha
sti
loope
nop
out
mov
inc
outsb
pop
adc
cmc
sbb
jb
fsts
subl
mov
ret
adc
mov
inc
adc
xchg
and
fcom
sub
mov
push
popf
push
mov
xchg
scas
stos
stos
inc
jmp
jmp
aam
rol
jg
scas
jle
lret
ss
xlat
push
mov
outsb
fdivrs
inc
dec
add
xor
into
xor
es
popa
inc
mov
in
in
stc
adc
shr
sub
and
inc
popf
int
sbb
adc
aad
mov
and
mov
sbb
test
xor
dec
jge
std
jns
stos
enter
xor
pop
pop
test
lea
daa
shlb
mov
and
inc
fs
in
sub
cmp
or
or
sub
cmc
mov
jbe
jle
fisubl
mov
push
in
clc
loop
inc
sbb
dec
stos
pushf
fcompl
sub
mov
or
dec
dec
jmp
mov
stos
xor
test
pop
ds
out
test
arpl
scas
aaa
imul
div
movsb
in
mov
and
in
xchg
jl
adc
stos
daa
lcall
or
movsl
mov
xlat
in
addr16
shr
aaa
cwtl
mov
dec
sahf
cmp
lret
sub
add
insb
xor
int3
pusha
mov
aas
mov
ljmp
sbbl
scas
jno
mov
mov
or
add
dec
rcrb
orl
rorl
das
mov
cmp
add
pop
out
out
test
or
push
or
sub
mov
and
cmp
cwtl
je
push
or
sti
xchg
fdivs
xor
hlt
and
movsl
mov
in
je
xorl
push
ljmp
lods
inc
mov
fs
dec
mov
sahf
insl
ret
fwait
mov
push
xor
pop
imul
pop
loopne
out
cmc
popf
push
lods
pop
lahf
jmp
add
mov
mov
sbb
xchg
jne
lods
xor
or
cmp
cld
push
daa
stos
cld
rorb
divb
in
and
pop
mov
dec
aad
mov
cmc
sahf
pop
dec
sarl
outsl
push
loop
push
lock
hlt
pop
dec
in
out
add
hlt
ja
out
enter
mov
jp
mov
jnp
arpl
push
loop
or
inc
pop
shll
std
adc
int
call
push
inc
cmp
stc
sbb
fimuls
sbb
aas
sbb
xchg
lret
insl
cs
cmp
lods
push
mov
iret
pop
dec
mov
fisubs
in
arpl
cmp
mov
or
jmp
fadds
scas
dec
pop
mov
loope
push
and
ret
out
or
in
les
sub
jmp
jns
xchg
push
rorl
ds
xchg
inc
or
iret
std
jo
push
js
mov
enter
cmc
adc
mov
sbb
movsl
pop
faddp
mov
lret
pop
dec
movsl
push
loopne
aas
fisubrs
jbe
in
or
ja
xor
ret
fisttpl
push
cmp
jbe
mov
lock
notl
dec
out
faddl
loope
fsubp
or
pop
divb
imul
add
testb
jmp
push
add
lods
lods
push
push
fisttps
jno
dec
mov
mov
jae
inc
xchg
xor
pop
cmp
push
icebp
inc
push
push
sub
negb
imul
cmp
shlb
mov
pop
fdiv
mov
insb
int3
push
dec
cli
inc
pop
adc
daa
sub
rclb
pusha
arpl
cld
ret
iret
mov
push
pop
clc
push
cli
jge
mov
rorl
jmp
mov
ljmp
cs
fs
mov
loop
mov
xchg
add
adc
sub
data16
inc
dec
ret
cmpsl
in
in
ret
ret
pop
xchg
sarb
test
xor
mov
push
pop
outsl
shll
popa
mov
mov
pop
je
push
xlat
and
in
sub
pop
pop
xor
mov
enter
mov
jbe
jno
popa
sbb
cmp
dec
jno
leave
cs
mov
pop
mov
jmp
les
test
imul
mov
fmuls
pop
xor
in
arpl
int
scas
shr
ret
mov
aaa
or
xor
mov
imul
dec
push
sub
das
pop
in
addb
adcb
xor
mov
add
or
mov
addr16
xor
lahf
inc
outsb
data16
int3
dec
imul
pop
jmp
ds
cmpsb
imul
jb
lock
aas
xor
repnz
push
cwtl
insb
or
cmp
push
xchg
cmp
adc
sbb
iret
insb
adc
cmp
ror
sub
xchg
pop
xor
pop
mov
sub
in
loopne
rcrl
ret
dec
pusha
mov
xor
es
push
test
jmp
pop
cmpsb
fucomp
flds
mov
cmp
fcompl
or
fstp
push
adc
sub
jo
in
cwtl
test
test
in
pop
pop
lahf
cmp
pop
xchg
xorl
jmp
out
or
imull
or
push
jmp
call
stos
movsb
adc
aad
fmuls
stc
ffree
adc
xchg
mov
lock
mov
icebp
sub
lock
jp
pushl
fnstenv
sub
decb
call
adc
mov
jge
mov
call
xchg
jbe
or
pop
sbb
sub
jns
pop
loop
subb
aas
sub
cmp
dec
dec
inc
mov
repnz
cwtl
and
cmp
sub
popf
cltd
mov
decl
sahf
cmp
jecxz
or
in
xor
jne
dec
ljmp
popf
xor
pop
stc
ljmp
mov
sti
inc
int
xchg
mov
xchg
cmp
ljmp
mov
sbb
arpl
lock
test
or
fucomip
arpl
xchg
inc
pop
push
jecxz
nop
sbb
cmp
cmpsb
push
inc
btc
push
cmp
sbb
pushf
dec
aad
mov
rolb
js
pop
jne
pop
pavgw
mov
sbb
pop
cmp
sbbl
test
xchg
movsl
sub
rolb
fiaddl
clc
sub
out
inc
xor
jecxz
lret
xchg
int
cli
std
mov
sbb
adc
adc
es
das
scas
fwait
mov
gs
push
pop
stos
sbb
cli
cltd
lahf
cmpsl
xor
loop
pop
scas
ja
inc
mov
mov
jno
andl
ds
sub
adc
ds
out
add
add
push
out
pushf
iret
sub
out
inc
fldenv
dec
data16
sbb
incb
cmp
push
or
and
pop
push
loop
sahf
xor
and
xor
jo
ljmp
cmp
scas
popf
cmp
mov
mov
call
xor
push
mov
cmp
sarb
fistps
pop
les
rol
arpl
xchg
or
repnz
icebp
popa
ss
sub
adc
fistps
clc
xor
pop
mov
repz
movsb
aaa
inc
std
call
and
mov
cmp
and
repz
mov
bound
repz
sub
jmp
sub
jnp
and
inc
setne
inc
pop
mov
jl
aas
jne
arpl
lahf
mov
scas
xchg
loope
and
cmp
cmpsb
adc
imul
insb
push
jae
push
in
movsb
es
add
mov
or
hlt
xchg
jle
lret
inc
pop
imul
icebp
mov
inc
cmp
push
cli
sbb
mov
push
popa
scas
gs
xchg
jl
pop
stos
sub
jnp
push
jmp
push
jnp
movl
ja
dec
mov
fwait
mov
incl
sbb
imul
pop
into
lret
pop
into
mov
imul
cmp
dec
pop
aaa
mov
cmpsl
add
sbb
into
xchg
sub
xchg
cmp
fwait
push
push
arpl
push
mov
mov
push
cmpsb
xchg
imul
imul
jge
mov
outsb
fists
mov
movsb
mov
cltd
movsl
cld
pop
pop
ret
inc
mov
das
aas
cmp
movsb
cmp
mov
stos
adc
xor
int
mov
fucom
adc
xor
xchg
cmpsb
arpl
pop
mov
or
jecxz
sbb
sub
movsb
mov
xor
push
cmp
imul
push
ja
stc
add
add
mov
mov
xor
bound
aaa
lods
loop
lret
sbb
pop
repnz
mov
push
int
mov
fwait
and
sbb
xchg
test
call
or
dec
pop
fisubs
loope
in
sub
aaa
hlt
loop
mov
scas
xchg
mov
sub
cmp
sbb
jp
and
add
outsb
rcrb
pop
fidivl
aam
mov
adc
mov
mov
xchg
add
ss
push
fstl
add
orl
mov
or
ret
lock
scas
mov
hlt
push
sub
addl
and
jg
movsb
and
aaa
daa
pop
add
mov
lret
and
hlt
mov
call
pop
lea
sbb
jae
and
repz
xor
je
rep
aas
lods
pop
scas
and
addr16
jge
lods
cmp
shlb
sbb
out
shlb
inc
sti
jbe
sbb
mov
mov
cmpps
mov
adc
pop
shl
jbe
repz
cmc
mov
jge
jb
pop
pop
pusha
mov
add
pop
jb
jo
ret
vmwrite
sbb
pop
mov
fnsave
push
lahf
ret
cld
xchg
adc
mov
inc
mov
mov
lds
adc
cld
outsb
and
aad
mov
jecxz
sbb
out
bound
leave
cmp
stos
push
int
cmpb
sbb
jo
jae
outsb
rol
outsb
xchg
sub
shrb
dec
inc
mov
or
push
cld
adc
inc
aas
pop
adc
xchg
enter
push
adc
add
enter
ret
das
xchg
sar
fnstenv
cli
xor
dec
push
adc
shll
cmp
xor
cmpsl
rclb
fdivrl
sbb
popf
and
shrb
xor
loopne
gs
rclb
jae
bound
repz
mov
test
sahf
cmp
clc
xor
pop
inc
mov
cmp
or
aam
add
or
in
push
cmp
mov
xchg
lcall
mov
popl
adc
in
mov
xorb
push
mov
and
in
daa
loop
and
shl
mov
push
or
push
fisttpl
xchg
cmp
or
jp
das
sub
adcb
xlat
or
sti
inc
xchg
gs
stos
and
jecxz
daa
insl
xor
movsl
imul
mov
iret
int3
fimull
popa
fdivl
push
cwtl
pop
lret
daa
jmp
xchg
addr16
inc
mov
sbb
sbb
lods
cld
or
xor
push
stos
lret
test
addr16
repnz
cwtl
cmpsl
push
mov
in
mov
jmp
ret
mov
cmp
xor
lret
movntps
pop
lahf
dec
ret
push
lahf
dec
out
jbe
add
inc
lahf
addr16
aas
dec
jl
sub
aad
mov
pop
fdiv
je
test
es
sbb
outsl
gs
fistpl
int
add
pop
sbb
mov
inc
adc
scas
iret
es
dec
repz
stc
into
in
dec
movsb
jecxz
aam
fstpt
es
into
push
inc
xor
xchg
das
icebp
mov
or
xchg
cltd
cmp
sub
xor
in
stos
mov
mov
dec
ljmp
cmp
pop
add
inc
mov
mov
iret
shrb
cmpsb
and
aaa
push
pop
mov
fdivr
sete
and
mov
cmp
fcompl
mov
addr16
xchg
push
lods
lea
and
inc
push
lock
cld
xor
sbb
inc
addr16
xchg
xor
cmpsl
sbb
xchg
outsb
in
pop
test
cmp
sbb
push
insb
or
sub
mov
adc
roll
js
jle
subb
fsubrs
stc
or
mov
je
cmpsl
mov
jae
inc
sbb
pop
je
inc
adc
addb
jmp
pop
and
mov
sub
adc
jmp
negl
and
mov
sbb
mov
mov
mov
mov
leave
mov
hlt
icebp
or
pop
cld
mov
shll
mulb
popa
cmp
hlt
test
mov
mov
popf
in
mov
dec
mov
xchg
inc
fdivrs
mov
movsb
adc
scas
dec
hlt
getsec
imul
jno
shll
test
cli
mov
jmp
xlat
sbb
adc
and
push
aad
shrb
mov
cmpl
mov
nop
mov
stos
mov
dec
movsl
stc
movsb
sbb
dec
or
push
jp
clc
in
push
inc
inc
inc
test
fisttpll
iret
ljmp
movsb
jns
lock
fimull
ja
or
inc
and
push
pop
subl
mov
lret
pop
jmp
mov
icebp
popf
imul
sbb
xchg
stc
aas
cmp
out
adc
xchg
adc
das
jb
pop
xor
adc
xor
jbe
out
addb
push
cmp
rcll
cmpb
addr16
sbb
pop
fdivl
adc
add
add
xor
test
jb
aaa
add
insl
xchg
jmp
jbe
mov
fiadds
cmpl
mov
repz
imull
jns
dec
je
pop
dec
dec
hlt
adc
mov
lock
xchg
xor
repnz
data16
cmp
adc
dec
cmpl
popa
stos
sub
stos
insb
movsb
decl
test
xor
stos
jecxz
bound
jmp
cli
cmp
or
pop
fimuls
sub
nop
sbb
cltd
xchg
pop
add
pop
call
in
mov
push
mov
dec
ret
xlat
xor
out
mov
loop
pushf
fcompl
mov
repnz
loopne
sti
sbb
cld
scas
xchg
push
ret
mov
cli
mov
out
and
adc
fdivs
ficoms
gs
adc
jbe
dec
loopne
push
movsl
push
mov
fsubr
add
cmp
mov
xchg
and
sbb
ret
jae
jg
mov
mov
popaw
stos
pop
sbb
stos
xor
loop
lret
rol
andb
loopne
test
fdiv
or
subl
test
rcl
and
mov
mov
mov
dec
jmp
test
orl
test
or
jbe
sti
mov
sub
es
jno
mov
or
mov
xchg
fld
test
sbb
ds
ds
into
mov
aaa
mov
inc
bound
jne
arpl
enter
dec
outsl
jg
icebp
cld
fsubs
inc
stos
and
jns
cmp
ss
data16
push
outsb
xchg
in
inc
mov
sbb
iret
xor
cmpl
dec
pop
dec
pop
jo
ds
loopne
adc
fstpt
aaa
fists
xchg
stos
in
and
fldt
in
in
dec
push
cmp
jp
lea
js
pop
loop
and
mov
and
lods
je
cbtw
jge
fnsave
pop
push
ret
mov
ljmp
loope
stos
mov
push
pop
mov
fnstcw
push
push
cmp
inc
cmpsl
mov
scas
adc
xchg
out
adc
in
movsl
mov
scas
dec
gs
dec
inc
and
xchg
mov
lock
outsl
es
loop
and
nop
mov
xor
or
call
add
out
pop
dec
inc
sbb
push
cmp
inc
or
daa
push
mov
xchg
xchg
and
xchg
inc
add
adc
add
imul
adc
xchg
or
sbb
push
cmp
mov
pop
jbe
es
sub
mov
jno
ret
xor
out
mov
xchg
fistpll
or
inc
pop
repnz
jle
jmp
sub
adc
sbb
iret
xchg
mov
mov
dec
jecxz
inc
mov
repnz
and
scas
inc
jae
jecxz
push
xchg
inc
inc
sbb
aas
jecxz
jl
sahf
xchg
dec
pop
scas
mov
addr16
sti
xlat
and
push
or
pop
xor
insb
jns
incb
stos
push
xor
mov
jle
mov
cltd
fldenv
push
adc
jg
adc
xchg
std
int3
or
xor
outsl
jmp
out
jmp
push
xlat
dec
dec
js
fs
mov
lret
popa
sub
jg
fistpl
in
dec
aad
std
in
repz
hlt
mov
icebp
outsb
jmp
jae
and
aas
jb
mov
and
arpl
cmp
enter
and
pop
in
lret
xchg
es
and
pop
adc
in
lcall
shl
mov
icebp
adc
pop
faddl
xor
push
jbe
adc
and
bound
adc
xchg
xchg
imul
loop
jne
mov
mov
popf
daa
mov
adc
adc
mov
mov
and
push
cltd
dec
sbb
push
outsl
pusha
lods
std
cmp
pop
mov
pop
xchg
push
dec
pop
rcll
mov
out
cld
push
cld
push
push
jnp
adc
repz
fwait
dec
sub
sahf
loopne
add
adc
sbb
jge
push
xchg
mov
dec
cmp
cmpsb
test
or
fucom
aas
mov
xor
mov
mov
dec
js
cmpsb
fcoml
fmull
adc
mov
mov
add
repz
sahf
sbb
sbbb
std
outsl
cmp
aaa
leave
xlat
sbbb
ljmp
or
hlt
outsb
shlb
pushf
lods
std
pop
sbb
jbe
jmp
insb
push
fimull
loope
aam
sbb
xchg
mov
inc
jnp
cltd
aaa
lahf
je
xor
and
cmp
jns
pop
cmp
pop
adcl
pop
flds
mov
xlat
out
push
jmp
mov
xor
mov
pop
xchg
inc
add
rorl
repz
add
xchg
test
jbe
ret
mov
cmp
fidivrs
fnstcw
lea
lea
ja
pop
adc
jno
fs
testb
mov
mov
movsl
popf
xchg
rcrb
or
imul
cmpsl
lahf
mov
pop
test
das
xchg
fs
leave
daa
loop
sub
jmp
and
jne
and
movsb
mov
pusha
cmp
pop
mov
test
inc
adc
xchg
xlat
dec
push
sbb
mov
mov
mov
push
and
cld
mov
stos
sbb
push
in
movsl
jno
push
jne
mov
shrl
mov
jbe
mov
scas
pop
inc
ss
mov
xchg
cmpsl
push
aas
add
mov
dec
pop
mov
lds
scas
cmpsl
add
ret
adc
cmp
insb
adc
xchg
push
dec
push
pop
iret
test
sbb
rcrb
sbb
fimull
into
jp
scas
fwait
movsl
aas
pop
insl
lods
and
jmp
leave
mov
pop
mov
test
imul
mov
push
mov
int3
clc
cs
push
lea
add
cmpsb
push
mov
and
in
stc
arpl
js
in
jne
ficoml
jns
imul
movsl
and
jbe
cld
lods
cmp
les
in
popf
sbb
cwtl
dec
mov
xchg
xor
pop
ds
mov
stc
sahf
adc
pop
jp
ja
loopne
call
mov
sahf
je
or
dec
dec
mov
mov
adc
scas
std
aaa
aam
das
jo
cmp
into
mov
xchg
xor
lds
mov
xchg
outsb
xchg
adc
xchg
push
daa
orl
insb
cmp
xchg
decb
and
mov
data16
int3
dec
fmull
pushf
mov
mov
xor
sbb
mov
test
das
cmc
push
scas
loope
and
push
adc
or
sbb
sti
stos
roll
mov
loope
fxch
outsb
jg
cmp
icebp
call
inc
lahf
cmp
stc
adc
and
rcl
cmpsl
push
jmp
cmp
mov
mov
das
pushf
mov
jae
push
mov
adc
cld
stos
dec
lret
loop
sub
popf
and
or
jae
insl
ds
call
or
sbb
mov
icebp
nop
inc
cmp
pushf
pop
push
ret
inc
push
sahf
xchg
cld
inc
pushf
dec
adc
ja
xchg
dec
pop
inc
xor
aaa
in
cmp
pop
repz
sahf
mov
pop
movb
pop
insl
arpl
add
pop
and
push
pop
xor
sub
enter
aas
xchg
jbe
add
popf
leave
mov
dec
out
dec
shll
and
in
and
repz
fistps
xor
xchg
loopne
stos
adc
jb
test
out
stos
mov
inc
iret
mov
jns
clc
in
cmc
adc
pop
mov
movsb
in
ret
lret
sub
push
push
push
or
mov
sub
pop
xlat
adc
xchg
cmpsb
cmpsb
aaa
add
xchg
xchg
dec
fst
fsts
repz
mov
mov
sbb
fdivp
xchg
imul
pusha
mov
sti
lcall
pop
inc
ja
sbb
push
fs
cmp
or
pop
mov
inc
fidivs
out
jne
cmp
xchg
in
inc
popf
xchg
fnop
sbb
adc
xchg
popa
cmpsl
sub
pop
iret
mov
pop
xchg
pop
dec
push
add
jp
sub
lcall
nop
adc
scas
js
shrl
xor
cmp
and
pop
pop
fmuls
pop
jmp
sbb
and
lret
adc
sub
mov
pop
lock
cli
mov
mov
das
cmp
lods
cmp
jg
rcrl
callw
mov
mov
sahf
ds
js
sbbl
or
mov
jle
leave
gs
push
lret
ja
mov
jne
and
ret
lahf
xor
and
cmp
adc
mov
iret
mov
sahf
mov
or
outsl
lret
nop
cld
out
sahf
fisubrs
xchg
shl
rol
lahf
jae
mov
cmp
test
test
sub
jo
cmp
push
push
gs
lret
lds
das
jp
cmpsb
pushf
pop
mov
out
arpl
push
popa
sbb
sub
jne
popf
idivl
leave
incb
test
jecxz
fstpl
and
dec
aaa
insl
jp
int3
push
xor
mov
dec
mov
mov
adc
pop
dec
and
dec
outsl
cmp
movsl
mov
pop
dec
and
jmp
or
mov
popa
jne
xchg
sub
inc
stos
jns
mov
cltd
sub
cwtl
js
sti
test
rolb
push
or
loope
pop
mov
mov
fstl
aas
pop
mov
test
mov
rclb
mov
ss
cmp
ljmp
aam
push
xor
out
and
inc
sub
inc
sbb
mov
aad
jae
jmp
xor
lahf
imul
imul
fwait
xchg
xchg
sbbl
pop
lock
push
pushf
ds
loop
js
add
out
hlt
test
out
xchg
mov
arpl
movl
outsb
xchg
sub
daa
repnz
cmpsl
lods
mov
mov
adc
mov
and
std
call
add
lock
aam
sub
lcallw
dec
loop
cwtl
mov
mov
out
add
cmp
loopne
lcall
pop
cmpsl
inc
sbb
dec
pop
ret
xchg
fst
mov
mov
pop
or
insb
and
jns
enter
push
repz
push
data16
jne
cmp
loopne
mov
sbb
nop
out
stos
aas
adc
lret
addr16
fmuls
test
mov
es
les
and
mov
imul
test
inc
gs
jo
jo
mov
mov
mov
push
mov
fcmovnu
movsl
sti
jne
mov
iret
adc
add
addb
adc
xchg
pop
sbb
push
ficoml
stc
jne
mov
xchg
cmpsl
inc
mov
loope
in
or
ds
aas
mov
pushf
pop
mov
jge
repnz
pop
mov
jp
xor
mov
out
xchg
sbb
sarb
mov
xor
imul
lret
jmp
addr16
clc
xchg
and
mov
push
clc
xor
aad
test
mov
sbb
jmp
jl
mov
mov
jge
inc
out
sbb
jno
gs
dec
dec
and
repnz
lret
add
cltd
int
pop
jle
push
push
jl
testb
or
adc
jo
push
pushf
push
out
sub
xor
pop
lods
cmc
push
pop
push
ljmp
mov
pushf
sar
mov
xchg
arpl
dec
negl
cs
cmp
scas
iret
xchg
and
fs
insl
sbb
shll
xor
rcr
outsl
add
cmp
sar
jg
adc
cmp
ljmp
insl
insl
jle
shlb
pop
inc
mov
push
xor
mov
push
lods
stos
incb
pusha
pushf
xor
popa
inc
jge
adc
outsl
jo
shr
sub
lea
out
mov
out
outsl
adc
cmp
xchg
pop
call
mov
out
shl
adc
mov
mov
xchg
add
int
mov
les
adc
cmpl
icebp
xchg
clc
aaa
or
sti
xor
scas
testl
loope
test
dec
mov
aas
inc
aas
mov
bound
lock
dec
cmp
cmp
pop
sbb
hlt
adc
cs
fbstp
out
mov
cmpl
mov
test
dec
mov
fs
ljmp
ljmp
fwait
xchg
cmp
adc
jmp
xchg
sbb
xor
pop
aam
adc
sti
pop
insb
jno
cli
adc
in
ja
xchg
xor
shrl
pop
mov
and
dec
mov
repz
sbb
cs
fs
lcall
inc
mov
push
nop
jo
mov
shrb
xchg
mov
addr16
and
mov
xchg
mov
lock
ret
fcomi
clc
mov
and
in
pop
jecxz
pushf
push
out
mov
sbb
mov
dec
push
push
inc
add
mov
pop
loop
fadds
lds
jle
adc
stos
mov
add
sbb
repz
lock
test
lahf
pop
test
fldl
push
mov
xchg
cmpsl
outsb
jmp
negl
mov
int
test
cmp
aam
or
pop
sub
mov
lret
xchg
pop
mov
mov
adc
sbb
sbb
push
int
ss
loopne
and
rolb
xchg
jp
cmc
lock
fs
rorb
sbb
cmp
aaa
push
add
sbb
mov
test
xchg
jge
add
jmp
push
ja
outsl
cmc
jmp
push
enter
adc
mulb
outsl
dec
clc
fs
cld
std
ret
mov
scas
jle
into
add
lods
mov
mov
cs
fidivrs
int
dec
and
xor
ja
int3
sub
lods
jge
outsb
iret
lret
dec
ftst
out
scas
inc
push
sub
stos
cmp
xchg
and
in
xchg
adc
das
cmpsb
dec
mov
push
sbb
cld
xor
mov
sub
sub
mov
rorl
mov
mov
in
cmp
int
mov
sahf
in
jo
sbb
enter
popf
insb
imul
inc
int
repz
inc
jp
stos
sub
test
pop
adc
shrb
mov
dec
pop
loop
dec
mov
mov
in
rol
jge
adc
cmp
lods
xchg
ss
pop
pop
jge
sub
sub
xchg
clc
call
mov
dec
or
xchg
shr
jae
pop
sub
daa
xor
rcrb
mov
or
inc
and
cltd
imul
lods
daa
mov
and
or
ret
xlat
fldenv
notb
mov
scas
imul
outsl
cmp
push
cmp
ds
push
inc
dec
or
test
pop
ret
and
push
shrb
cltd
test
ljmp
cwtl
or
mov
cmp
push
lahf
fstpl
sub
jne
stc
push
dec
mov
or
mov
xchg
pop
leave
push
out
faddl
or
test
push
testb
sub
xor
fbstp
icebp
pop
push
insb
inc
xchg
mov
cmc
xchg
shl
and
ret
vmovapd
pop
xor
push
cli
mov
aaa
sysret
into
push
rcr
pop
xchg
scas
addl
sahf
cmp
js
je
adc
mov
mov
sbb
stc
or
jne
inc
push
mov
clc
sti
dec
iret
or
fstpl
loope
xchg
cmp
mov
cltd
mov
and
subl
popa
xchg
mov
lods
xchg
cmp
js
jne
mov
sbb
ret
jo
adc
and
push
outsl
xor
inc
insb
mov
or
jne
shr
es
ja
insl
repnz
mov
cmp
add
insl
les
or
cmp
cli
push
sbbb
add
mov
push
in
push
and
sbb
jb,pt
push
lea
clc
cmp
pushl
mov
or
mov
adc
xchg
cld
jle
shrl
adc
aad
ja
or
pop
xchg
and
ret
sub
insb
inc
xor
mov
cs
pop
xor
jp
std
lods
sahf
fcomip
inc
pusha
mov
xor
lods
lret
dec
pop
insl
int
inc
bnd
roll
inc
jp
shll
fisttps
das
xchg
test
add
jne
cmc
shlb
pop
jb
rorl
xchg
dec
pushf
movsb
mov
pusha
ret
ret
adc
das
jmp
or
add
fwait
pop
mov
leave
ljmp
inc
fs
dec
cld
ljmp
addr16
push
jecxz
into
sbb
ss
in
add
add
push
pop
sbb
mov
push
rcrb
mov
popf
loopne
sub
adc
jb
out
std
cmpsb
movsb
and
fndisi(8087
insb
cltd
fnstcw
popa
mov
mov
and
cmp
pop
push
jmp
xlat
pop
dec
cli
aaa
adc
jge
mov
add
ljmp
scas
lret
adc
lcall
and
pusha
xchg
or
je
adc
jno
pop
mov
gs
add
mov
mov
loope
cmp
jmp
cli
pop
xchg
xchg
pop
int
stos
out
xchg
popa
cmp
jbe
jl
jae
das
add
or
scas
mov
pop
pop
lock
pop
jge
popa
dec
insb
xorl
scas
xchg
cmp
aas
sbb
call
insl
fcmove
shrl
xchg
insb
insb
mov
xchg
cmc
add
adc
xchg
sub
fs
pop
dec
lock
pop
mov
pop
and
dec
mov
aas
jne
mov
pop
jns
dec
stos
add
movsl
je
inc
les
jl
jl
fistpll
cwtl
cmpl
test
xchg
pop
dec
and
add
sub
cmp
subl
cld
insl
cmpsb
shr
pop
movsl
add
push
jecxz
mov
iret
loopne
in
or
mov
sbb
xor
cmp
mov
jbe
je
jbe
push
lret
sub
dec
xor
ror
inc
push
popa
pop
mov
xchg
sub
subb
jg
xor
mov
jp
pusha
jg
cmp
cmpsb
dec
mov
test
pop
ja
fadds
stos
negb
pop
pop
loopne
jnp
jmp
mov
test
xor
enter
xchg
lahf
add
jg
sbb
sahf
inc
sahf
mov
and
js
sbb
cs
dec
push
stos
adc
data16
pop
xor
push
inc
adc
sbb
inc
lcall
scas
sub
jb
ret
arpl
mov
jmp
orb
test
imul
xor
jb
jns
cmpsb
inc
sbb
in
cmp
pop
pop
out
dec
mov
pop
adcb
push
adc
adc
jle
les
je
sbb
add
test
mov
movsl
mov
mov
lods
repnz
outsb
xchg
ret
popa
cwtl
sbb
inc
dec
dec
rcl
sbb
push
push
add
push
mov
fisubrl
mov
inc
and
or
mov
cli
push
inc
mov
xchg
mov
out
and
mov
stos
and
mov
gs
es
aaa
in
fwait
cmpsl
loope
ja
jp
and
push
andb
dec
push
push
rorl
cs
jl
push
scas
jne
jl
push
andl
mov
inc
das
push
xorl
std
insb
mov
aas
aam
cli
jb
mov
jnp
les
push
mov
ret
jb
gs
popf
jl
shrl
pop
push
pop
repz
mov
scas
rcl
push
sbb
int
insb
iret
std
in
dec
int3
pop
and
xchg
xor
popa
hlt
sbb
mov
push
cmp
pop
jb,pn
pop
enter
xchg
push
leave
in
popf
add
pop
cwtl
andb
outsb
cmp
lret
es
dec
testb
outsl
ret
push
imul
mov
lret
jg
les
fisubl
aam
push
mov
xchg
mov
andl
loop
add
es
addl
imul
push
pop
shrb
inc
and
cld
add
ds
push
inc
push
pop
jo
and
sbb
xlat
inc
loop
jecxz
into
mulb
sub
aam
orl
mov
mov
cmp
mov
mov
repnz
push
mov
xchg
ret
ss
jae
jl
cmpsl
lds
iret
lods
fwait
mov
ja
dec
dec
inc
in
clc
push
cwtl
cmp
mulb
aas
mov
out
cld
xor
add
mov
faddp
cs
pushf
out
loopne
xor
aas
jl
cmp
push
imul
loopne
hlt
sub
mov
dec
out
mov
and
rcrb
bound
aad
adc
add
lcall
push
repnz
xor
jno
xorl
sarb
nop
sub
mov
inc
mov
fistps
loopne
jg
cmpsb
lcall
dec
popf
and
ds
je
jp
lahf
lret
ret
xor
inc
mov
sti
mov
jbe
out
jb
jp
mov
and
movsl
mov
mov
into
push
dec
daa
roll
lock
lret
jb
js
xchg
ds
jo
xor
fimull
imul
jecxz
scas
lds
and
insl
sub
push
pusha
pusha
cmp
outsl
xchg
sbb
inc
int
lcall
stos
push
repz
ss
ficoml
loopne
xor
sahf
fcmove
insb
jae
xchg
jmp
es
mov
sti
cmp
push
xor
mov
push
cmp
dec
cs
and
sub
cmp
mov
xor
cmp
clc
pusha
movsl
nop
test
pop
fdivs
clc
popa
sbb
js
pop
test
rol
scas
pop
jae
out
jo
je
ret
data16
mov
xchg
movsb
and
push
mov
sub
mov
les
add
fadds
pushf
lret
lds
jle
in
imul
sub
in
push
jg
or
loopne
cmp
xchg
mov
inc
nop
mov
fsts
lods
xchg
push
call
data16
repnz
jge
ja
push
push
jbe
xchg
mov
in
fisubs
inc
sahf
push
adc
lcall
rorb
pop
lcall
add
movl
mov
in
xor
cmp
pop
out
out
roll
mov
loop
stos
fwait
sbb
mov
pop
rcrl
mov
inc
mov
rcpps
or
push
xor
ljmp
jle
mov
lods
in
into
dec
mov
jle
xor
insl
shl
add
pusha
aaa
push
cmp
push
xchg
push
mov
jne
xor
fs
mov
push
mov
mov
jge
sbb
inc
mov
cmp
mov
push
dec
daa
push
adc
in
mov
sub
jne
shlb
dec
xor
pop
sbb
icebp
pop
inc
push
pop
pop
test
and
pop
add
out
inc
call
add
cs
shrb
pop
jbe
pop
xchg
movsb
stc
inc
push
push
aaa
stos
and
push
int
popa
rolb
aas
jmp
or
jno
pop
pop
add
jg
lock
cmp
mov
sti
lret
mov
xor
sbb
lods
test
popa
xor
test
pop
enter
iret
push
xor
into
fistpll
out
gs
fwait
std
mov
shll
xor
jmp
cmc
cmp
jae
ljmp
mov
fsubl
mov
fidivrs
add
ret
bound
adc
aam
push
das
jae
jno
data16
mov
pop
pop
dec
rcl
cmc
aam
testb
aam
pop
insl
repz
inc
pop
mov
insb
sahf
aaa
icebp
mov
sub
jb
lds
in
xor
xchg
inc
mov
add
sub
in
ja
cmpsb
mov
es
mov
fstpt
loopne
push
das
xlat
pop
call
rcll
iret
sti
push
xchg
pop
js
mov
pop
and
push
fsts
call
lcall
xchg
mov
mov
add
xchg
ret
mov
cmp
shlb
xorl
jmp
or
sbb
dec
test
jae
out
rdtsc
imul
sti
adc
test
xor
stos
leave
int3
fdivr
out
pop
ss
addr16
ret
jne
push
sarb
xor
inc
and
lret
xor
pop
insl
lret
xchg
mov
inc
inc
sti
add
sbb
jmp
mov
sahf
inc
arpl
faddl
loopne
jns
and
cmpsl
imul
lret
and
outsl
push
push
test
pusha
repz
test
pop
pop
testb
pop
push
add
nop
pop
imul
jge
out
xor
mov
sub
pop
sbb
popf
int3
add
aad
cmp
aad
adc
mov
jg
mov
test
mov
add
fdivr
punpcklbw
mov
adc
out
aaa
test
mov
push
cmp
enter
add
into
or
aas
aaa
imul
pusha
or
aad
jg
aam
mov
lds
jp
ljmp
gs
test
mov
loop
not
pop
test
cs
loop
mov
dec
outsl
mov
popf
add
out
cmpsb
and
js
xor
popf
push
pop
std
fwait
shr
push
jmp
pop
inc
js
fs
into
andl
jno
dec
out
mov
aaa
xchg
mov
les
mov
fsubs
mov
scas
or
cmp
ret
and
cwtl
add
inc
pop
jmp
imul
and
mov
sbb
jecxz
mov
add
in
ljmp
fldcw
pushf
in
lock
cmp
bound
cmpsb
gs
or
loop
jno
mov
sbb
adc
aam
xchg
jg
inc
sbb
xchg
mov
add
popf
cmp
pop
out
stc
sahf
rorb
mov
bound
and
out
cmpl
push
fidivrl
pop
or
adc
cmp
cmp
pusha
mov
stos
popa
add
pushf
js
adc
or
enter
stc
xchg
inc
movsb
adcb
cmp
sti
stos
mov
int3
xor
pop
and
xchg
inc
test
and
aas
or
cld
aas
call
sub
jle
js
sbb
js
nop
or
ret
insb
adc
ficompl
dec
aam
xchg
mov
mov
ffreep
xchg
mov
mov
iret
rcrl
out
adc
sub
rorl
addr16
imul
loopne
mov
cmp
mov
fdivrl
std
into
xor
mov
or
cld
cmp
sub
adc
mov
inc
in
cmp
xchg
adc
cs
lret
andl
cmp
jmp
filds
jbe
xchg
lret
int3
in
pop
jb
mov
adc
cld
sbb
lods
andb
sarl
lcall
pop
les
repz
sub
xlat
lret
sbb
jno
fs
push
jle
mov
shll
add
add
and
and
push
mov
pop
out
sbb
or
fwait
cmc
fdivl
mov
rol
sahf
lahf
mov
push
pushf
inc
adc
arpl
lods
cli
dec
push
stos
dec
addr16
js
and
scas
push
ds
jbe
dec
push
std
stos
ret
int3
pop
mov
shlb
lock
pop
add
jb
insb
lcall
outsl
cmp
imul
dec
cld
int
mov
nop
and
ret
out
sbb
mov
or
xlat
add
push
sub
rcl
push
adc
mov
imul
je
push
pop
mov
stc
mov
pusha
fistpl
daa
cmp
mov
shll
lret
out
add
test
mov
adc
cmp
ja
aas
push
xchg
sbb
mov
xor
mov
aam
pop
jg
xor
push
pushf
cmpsl
jg
add
xorb
xchg
mov
aad
and
sbb
add
stos
int3
std
scas
mov
jne
fs
dec
in
mov
and
loope
cmpsl
sarl
adc
notb
cmp
out
cmp
pop
incb
mov
sub
cs
adc
clc
fcmovne
inc
mov
negb
test
imul
push
repz
enter
mov
jl
dec
ret
adcb
and
mov
insl
and
jmp
xchg
mov
ja
dec
push
pop
inc
xchg
pop
addl
in
ljmp
push
out
inc
test
inc
adc
outsb
mov
dec
cmp
inc
inc
out
push
out
movsb
adc
mov
test
pop
mov
jle
rcl
mov
in
or
testb
ficoms
mov
push
push
or
mov
std
mov
addr16
push
add
sets
lahf
sbb
cmp
xchg
adc
mov
dec
loopne
repz
xor
push
jl
out
icebp
xchg
insl
mov
test
pushf
lods
jg
js
arpl
jae
pop
faddp
ljmp
pop
add
jmp
mov
cltd
jge
cmp
adc
xor
inc
movsb
inc
enter
lret
lock
adc
mov
mov
dec
cmp
jl
mov
gs
push
movsl
xchg
xchg
aaa
push
mov
dec
fwait
dec
fists
shlb
sub
subb
xchg
push
mov
cltd
aas
xchg
adc
mov
ljmp
loopne
mov
aad
push
in
test
sub
neg
mov
mov
repz
sub
add
jae
popf
mov
imul
sbb
test
cmc
lods
rol
xchg
call
fdiv
fidivs
and
adc
fsubl
adc
cmp
nop
dec
mov
sub
inc
cmp
daa
and
push
dec
inc
bound
cmpsl
push
scas
mov
shll
mov
jae
aaa
push
out
cli
push
lret
jbe
int3
pop
inc
popa
mov
mov
and
push
int3
int3
out
mov
fidivl
test
into
jno
xor
dec
cmp
push
fldl
push
adc
sub
in
ret
rol
es
jnp
sahf
mov
scas
jo
stc
aam
jnp
sub
cmp
add
pop
cmpsb
cli
pop
add
test
frstor
dec
push
sbb
push
mov
in
aad
pop
mov
leave
push
nop
cmp
push
stos
aad
out
out
sbb
imul
shl
pop
add
sbb
and
jp
mov
push
sbb
pusha
and
or
jmp
xchg
hlt
cmp
adc
adc
loopne
or
adc
test
adc
cltd
out
add
add
lahf
push
jno
mov
mov
hlt
les
lock
aam
add
jmp
mov
out
ss
or
scas
enter
push
fbld
xlat
into
stos
outsl
push
mov
repnz
mov
dec
imul
xchg
test
jb
add
insb
lock
out
faddl
jg
dec
or
mov
imul
imul
mov
out
fistpl
pop
mov
sub
mov
pop
jg
pusha
cmp
imul
je
inc
loope
mov
pop
icebp
jns
cmp
pop
push
push
jle
lock
mov
add
fidivrs
sub
sub
decb
pop
ffreep
jae
lods
add
jecxz
dec
xchg
mov
inc
fistpll
test
int
push
lret
fdivrs
add
lods
jbe
gs
mov
push
out
stos
mov
and
into
and
sbb
pmulhuw
pop
dec
repz
xchg
addr16
mov
loopne
mov
imul
and
stos
sbb
pop
cmp
cwtl
stos
jg
and
add
push
daa
fsubrs
mov
jle
loopnew
addl
jae
fs
add
fidivrl
cltd
xchg
hlt
lahf
rorl
pop
jge
fcomi
imul
xchg
adc
lods
add
fstpl
and
mov
bound
repnz
cwtl
enter
lods
mov
add
iret
push
or
call
int3
or
insb
lods
roll
dec
mov
mov
stos
pop
rcrl
jbe
out
jne
sbb
xlat
mov
jns
xchg
xchg
xchg
xchg
jge
xor
jbe
push
mov
xlat
jmp
call
jle
xlat
int3
test
xchg
enter
movsl
call
push
or
xorb
js
jae
mov
add
inc
dec
dec
dec
adc
adc
je
and
test
adc
sbb
sub
jae
jbe
fcmovnb
inc
rcr
xchg
xor
stc
cmp
andb
inc
leave
push
xor
mov
nop
cmp
add
ffreep
jge
clc
ljmp
sub
stos
mov
pop
test
xor
jmp
lods
sti
dec
mov
fstpt
addr16
or
mov
sbb
push
cmp
stos
outsl
insb
add
push
inc
and
mov
dec
nop
fistl
out
lahf
outsl
adc
cmp
jp
dec
imul
repz
xlat
xchg
xor
aad
pop
ljmp
push
mov
test
out
int3
hlt
add
fdivrl
ret
imul
dec
out
push
xor
dec
ror
pop
lods
push
fwait
fs
xor
jle
imul
sbb
mov
rol
pop
sub
push
push
and
movsb
ficoms
test
repnz
sub
gs
mov
and
lods
cmp
shll
cmpsl
jne
test
cmp
push
xchg
and
je
push
push
sbb
ret
mov
push
sahf
push
mov
enter
or
repz
adcl
inc
ljmp
mov
cmp
jecxz
xor
mov
rclb
cmp
mov
punpckhdq
aas
or
ss
loope
cmp
cmp
sbb
xor
dec
pop
mov
push
jg
mov
lods
push
cmp
sub
push
out
jp
sbb
into
sahf
mov
cld
sar
leave
dec
in
add
cmpsb
pop
lock
cs
mov
lds
jge
addr16
add
aam
cmc
sti
nop
jge
test
js
into
add
rorb
idiv
mov
pop
inc
adc
xor
stc
xchg
inc
fcomps
inc
push
adc
pop
pusha
repnz
data16
dec
inc
outsl
je
fimuls
shl
repz
cltd
or
call
stos
repz
cmpsb
fs
cmp
inc
pop
inc
jns
aas
mov
arpl
jae
fcoml
lahf
mov
push
mov
xlat
enter
xor
pop
push
mov
inc
mov
push
pusha
adc
inc
lods
cli
push
shll
lret
push
aam
lods
dec
lods
or
mov
xlat
insb
and
rcrb
hlt
and
or
insl
jae
xchg
subb
out
dec
adc
das
repnz
je
cmpsb
ret
sbb
aas
adc
data16
shl
jnp
mov
adc
test
pop
scas
fdivp
inc
jmp
push
adc
inc
jmp
rcrl
xchg
cmp
xor
or
test
dec
sub
xchg
adc
dec
xchg
jle
das
rcrb
cmpsl
mov
and
cli
aas
mov
cmp
push
sub
movsb
xchg
mov
mov
push
sub
cmp
lret
push
xor
cld
push
inc
fs
sbb
cmp
mov
inc
or
mov
pop
outsb
push
push
sahf
mov
ja
int3
sub
adc
pusha
rolb
hlt
xchg
xor
add
rcrb
and
pop
and
stos
lcall
repnz
stos
cltd
xchg
jp
jbe
adc
test
adc
mov
cld
in
into
sti
out
inc
scas
and
in
cmc
je
sbb
scas
movsb
xlat
clc
inc
stc
insl
lret
mov
lods
adc
stos
insl
sub
std
mov
loopne
aaa
test
loope
aas
ficompl
scas
xor
push
inc
stos
gs
call
in
aad
bound
mov
popa
push
and
push
inc
mov
and
int
pop
ja
cmp
ja
iret
inc
imul
dec
jge
lret
dec
mov
mov
mov
pop
mov
jp
xchg
pop
mov
aas
cmpsl
insb
pop
inc
and
fistl
icebp
and
and
xchg
rcll
mov
dec
movb
mov
add
cmpsb
and
mov
in
add
xchg
push
adc
pop
fwait
sbb
xchg
and
repnz
xor
pop
adc
xor
dec
sar
arpl
addr16
mov
call
sbb
aaa
cmpsb
mov
aam
les
push
call
add
jle
push
and
cs
mov
fmull
das
jns
repz
and
xchg
imull
lret
dec
movsb
js
ljmp
rcrl
or
or
dec
adc
sti
lret
jle
pop
sbb
mov
in
dec
popa
bound
and
fwait
repnz
mov
jl
insl
sbb
mov
dec
mov
mov
mov
dec
cli
xchg
int
push
dec
int
je
sub
pop
jmp
pop
xor
es
and
inc
fwait
adc
std
stos
or
fsubrl
repnz
mov
cmp
or
xor
scas
pop
ds
cmc
push
shrb
xchg
mov
outsb
add
add
nop
add
push
add
dec
sub
ja
adc
mov
inc
dec
cmp
fsubl
cmpsb
inc
out
push
sub
fwait
loopne
hlt
scas
std
hlt
cmp
mulb
popa
in
mov
orl
mov
mov
dec
in
test
cli
add
pop
aas
cmp
push
mov
add
xchg
and
out
inc
pop
out
dec
push
out
int3
in
jns,pn
xchg
fsubrl
lret
jge
scas
cltd
and
cwtl
xchg
out
test
repnz
adc
rcll
mov
popf
lds
subb
sarl
pop
ds
mov
movsl
jns
dec
cwtl
pusha
ja
mov
add
mov
movsb
push
xor
cmp
dec
and
mov
sbb
clc
shrb
add
jle
in
cwtl
js
dec
mov
push
mov
xchg
test
ljmp
imull
les
iret
icebp
sub
fisttpll
sub
cwtl
aad
es
push
mov
cwtl
xor
inc
mov
jmp
mov
test
push
inc
shrb
push
cmpsb
imul
cld
jge
and
sub
mov
xchg
call
jo
daa
lea
dec
fadds
adc
daa
lret
loop
or
add
cmp
icebp
or
outsb
enter
out
sub
mov
push
push
sbb
sbb
fildll
les
aas
rcl
mov
cs
push
les
jle
mov
cmp
mov
lock
push
loopne
jle
mov
cltd
cmc
iret
movd
sub
pop
xchg
loop
out
xor
inc
inc
mov
lahf
mov
push
sti
repnz
nop
jbe
pop
dec
inc
ret
insb
xbegin
enter
outsb
test
mov
clc
pop
repnz
shll
mov
popf
pop
inc
xor
jns
inc
xchg
and
lock
jb
jg
scas
sbb
add
ja
mov
xor
cmpsl
and
pop
lret
popf
cmp
stos
aas
icebp
clc
sub
mov
fwait
ljmp
cltd
inc
jo
xlat
dec
xlat
jnp
es
and
fcoms
push
out
inc
add
push
xor
dec
imul
iret
mov
data16
scas
cmp
push
dec
leave
jg
aas
adc
push
mov
jno
lcall
hlt
cwtl
les
rcr
mov
mov
stos
jno
jo
out
push
fistps
xlat
test
in
sbbl
mov
es
dec
test
add
fcomps
mov
repnz
xchg
mov
in
pop
daa
or
lret
fildl
jecxz
mov
adc
outsl
repz
int
cmp
pop
pmaxub
or
ret
mov
xchg
in
jnp
call
cmp
int3
stos
push
arpl
fldl
lods
mov
push
scas
mov
addb
adc
clc
sbb
inc
popfw
adc
xchg
jge
js
sub
sub
jmp
stc
xchg
pop
mov
lds
push
sub
ss
mov
imul
lods
pushf
jbe
pop
jo
lods
and
add
inc
out
orb
mov
enter
sti
add
and
lods
or
rcrl
adc
push
ss
daa
cmc
adc
push
rcrb
dec
inc
adc
aas
mov
mov
push
dec
iret
stos
dec
adc
outsl
and
jmp
pop
push
fimuls
pop
mov
std
xchg
xor
dec
jne
or
inc
iret
add
loope
outsl
repnz
mov
mov
push
fs
test
adc
inc
mov
jecxz
add
jb
mov
pop
in
repz
xor
outsb
cmp
pop
scas
in
fwait
mov
fwait
mov
dec
fstpt
sbbb
mov
jb
sbb
adc
jns
pop
in
lahf
decl
jp
lcall
subl
ror
jb
sti
loope
cmpsl
adc
push
jg
sub
mov
shlb
pop
adc
pushf
or
and
stos
push
jb
je
cmp
rclb
fisubrl
roll
xor
xchg
nop
ja
cmp
cmpsb
out
pushf
ja
fcoms
mov
int
pusha
dec
cmpl
in
xchg
jl
and
rcr
xor
push
xchg
stos
sahf
lea
fstpt
and
or
mov
pushf
adc
adc
jecxz
pushf
cwtl
imul
dec
test
mov
sub
jae
shlb
andl
test
pushf
mov
dec
push
stc
adc
arpl
mov
lret
pop
mov
leave
sahf
cmp
or
mov
adc
dec
outsl
inc
bound
repz
aam
jne
mov
movsb
add
jp
aam
xor
add
repz
add
les
push
aas
ret
cmp
int
lahf
iret
jno
movsl
add
xchg
push
mov
add
pop
ret
lods
outsb
push
mull
inc
lods
shl
mov
out
mov
pop
and
lea
jns
mov
es
pop
cmp
cltd
mov
movsb
inc
sbb
fsubr
sbb
cli
dec
imul
repnz
sub
jo
js
mov
addr16
push
cltd
sbb
sbb
cmp
test
enter
bound
dec
cmc
inc
sub
sbb
in
ljmp
mov
fstl
cmc
mov
call
adc
dec
out
sbb
test
ja
notb
mov
frstor
dec
cmpsb
pop
push
lcall
out
iret
mov
pop
mov
xchg
xor
sti
inc
push
in
iret
pop
cmpsl
sub
dec
xlat
push
clc
insb
mov
je
test
push
leave
js
leave
aaa
mov
jge
xor
inc
add
xchg
repz
mov
ljmp
mov
xchg
shlb
dec
jo
lds
or
add
pop
jo
jne
cli
xorl
popa
cld
test
lods
mov
sbb
stos
mov
fsubl
ljmp
mov
cs
lret
mov
fstps
xchg
mov
or
leave
test
mov
std
roll
mov
mov
pop
inc
xchg
mov
push
add
xchg
sbbl
imul
jno
mov
xchg
xor
pop
sbb
fnstcw
cmp
jb
in
dec
fcomp
out
scas
mov
or
push
mov
popa
lds
inc
mov
daa
gs
jns
jecxz
push
aaa
mov
in
mov
cwtl
xor
sbb
push
mov
xorl
pop
lcall
adc
in
fmull
cmp
dec
pop
jle,pt
push
cmpsl
fs
mov
xchg
or
pop
dec
lds
nop
or
sbb
scas
fcoms
jmp
sub
lods
mov
dec
xchg
xor
mov
mov
inc
jmp
pop
add
lock
mov
cmp
ljmp
cmc
ljmp
sub
jb
add
jns
add
popf
xor
mov
pop
add
imul
out
cmp
cld
pop
clc
rdtsc
out
cld
jbe
pop
or
cmp
push
and
lret
bound
xor
repnz
pusha
pop
mov
insb
mov
pop
paddusb
dec
mov
mov
mov
mov
inc
cmc
xor
std
imul
mov
or
pop
adc
jae
cs
bound
sub
movl
xchg
and
jno
mov
pop
xchg
mov
arpl
push
pop
xor
div
fbld
xor
addl
cmpl
mov
xchg
enter
jae
aam
dec
adc
loope
je
imul
jmp
out
pop
dec
jmp
jbe
inc
leave
js
mov
sbb
movsb
lods
or
xchg
and
sub
fisubrs
mov
pop
pop
sub
cmp
lret
scas
sbb
pushf
ret
mov
fwait
pop
fidivs
sub
mov
add
test
mov
dec
dec
mov
cwtl
fidivl
xchg
mov
jns
incb
cmpsl
xchg
mov
lods
mov
inc
lock
insb
sub
or
add
pop
shlb
jp
mov
jne
cltd
imul
lods
pop
mov
js
outsl
inc
iret
fs
push
xor
xchg
add
add
imul
ret
pop
stos
repz
adc
ss
xchg
bnd
aad
aad
mov
stos
int
in
pop
hlt
enter
cld
lods
mov
outsl
into
push
jge
nop
aad
sbb
leave
pop
push
sbb
mov
adc
jbe
fsts
lods
inc
sub
xor
mov
push
adc
sbb
and
xchg
pop
inc
sti
cs
popa
imul
daa
mov
mov
pop
lcall
lds
cmp
jecxz
lods
pushf
dec
int3
add
sub
aam
cmp
repnz
ret
test
xchg
les
cli
notl
inc
or
addl
gs
push
inc
dec
imul
inc
mov
fs
sbb
inc
cltd
loope
outsl
sti
adc
dec
cld
or
iret
sub
add
cmpsl
cmp
aaa
mov
sub
ds
lahf
inc
lahf
imull
loop
pop
das
push
or
mov
cmp
test
mov
xorl
push
push
fwait
and
push
xchg
std
shl
lea
inc
dec
xchg
jge
push
sarb
outsl
dec
and
rcrl
jbe
mov
fwait
mov
hlt
jb
push
sbb
cmp
cmp
adc
sbb
nop
dec
ret
push
sti
sbb
rcrb
sbb
aad
add
push
pop
ja
out
sub
lock
xchg
inc
insb
cmp
insl
xor
cld
mov
daa
adc
test
andb
cld
sub
lds
sbb
push
push
shl
xor
mov
js
test
nop
data16
test
aam
cmp
inc
out
test
daa
mov
adc
ret
pop
adc
cmc
dec
andl
inc
mov
arpl
cs
ret
push
inc
adc
sti
push
shrb
mov
and
stc
push
insl
int3
out
adc
loopne
jp
or
dec
mov
pop
jb
add
insl
inc
mov
mov
push
cltd
shrb
je
mov
mov
es
jle
out
ljmp
into
dec
lcall
jp
or
fwait
scas
and
inc
mov
pop
jbe
imul
fcoms
and
enter
aas
adc
icebp
cmp
testb
loopne
add
jno
jmp
je
mov
iret
data16
outsb
cmp
cltd
mov
or
sahf
jbe
jg
jo
mov
enter
out
pusha
xchg
inc
inc
popf
daa
inc
inc
inc
int3
dec
inc
adc
fldl
lcall
cmp
imul
hlt
inc
jns
cli
aas
data16
mov
push
or
lds
mov
nop
sarb
cld
call
shlb
adc
shll
fimuls
in
lahf
ds
xchg
std
push
fs
leave
clc
sub
dec
mov
jbe
add
test
push
aam
jnp
insl
push
mov
mov
add
test
daa
jne
pop
int
loop
fildll
or
es
dec
cmpsl
cmp
dec
mov
sbb
mov
mov
inc
lock
mov
cmp
fs
dec
sub
and
std
push
and
fistps
lea
lods
mov
outsb
and
icebp
pop
ds
ss
lcall
out
push
jae
incl
inc
out
and
pop
add
mov
xor
xlat
and
lods
inc
cmpsl
dec
push
jns
sub
lods
nop
jle
loopne
push
sub
sarl
cmp
xor
jns
mov
mov
cmpsb
sahf
cmp
shrl
orb
stos
fnsave
jmp
jae
dec
int3
jnp
jmp
jo
push
enter
test
shll
pop
add
cltd
sub
cmp
and
jle
ss
frstor
add
lahf
sbb
jmp
mov
or
jns
out
mov
push
andb
ljmp
jp
fiaddl
cmpsb
movsl
repz
push
imul
aaa
jne
xchg
dec
stos
pop
mov
add
xchg
jmp
jno
cmpsl
xchg
cmpsb
stos
fsubrs
daa
pop
dec
xor
adc
hlt
test
ret
add
ljmp
inc
call
insl
lcall
sti
popf
dec
dec
lods
jno
ret
arpl
inc
push
mov
fcomps
jmp
inc
lret
adc
movsb
jge
int3
icebp
lret
fs
repz
add
outsl
hlt
flds
cld
pop
cmp
mov
neg
lods
sahf
dec
movsl
inc
inc
cmpb
clc
inc
dec
sbb
dec
add
xchg
xor
add
jne
out
dec
push
mov
aaa
lahf
push
cmpl
out
jecxz
negb
jecxz
xlat
fistpll
adc
mov
jmp
sub
ss
sarl
mov
repnz
fmul
mov
dec
cmc
mov
sub
outsb
incl
insl
jns
push
mov
test
imul
andl
inc
adc
sub
dec
jge
call
cmp
push
fcmovne
xchg
mov
or
ljmp
mov
lret
jmp
push
enter
nop
sub
cwtl
sar
mov
flds
jbe
out
fmuls
int
fwait
ficoml
dec
adcb
or
rcl
xor
cmp
and
or
mov
cmpsl
fstl
loop
mov
int3
in
aaa
and
push
shlb
fsubrs
jns
xchg
test
push
cmp
call
inc
in
mov
ret
dec
mov
push
mov
mov
aad
sbbl
mov
adc
pop
lods
in
fwait
icebp
aad
pop
add
sahf
sarb
xor
negl
outsb
xor
cmp
and
js,pn
jecxz
push
pop
mov
mov
int3
popa
lret
xchg
adc
sbbl
jno
mov
mov
mov
mov
pop
jmp
aas
stc
dec
push
dec
je
xchg
mov
add
cmpsl
bnd
add
sbb
lret
xchg
mov
pop
jnp,pn
imul
adc
stos
xchg
mov
es
push
add
sbb
pop
pop
sub
inc
jae
out
mov
or
add
inc
lds
fdivp
cmpsl
popf
sarl
mov
dec
lret
fisttps
pop
jns
addr16
xlat
or
je
cmc
mull
jo
movsl
outsb
sbb
sbb
sbb
and
mov
add
dec
push
sub
imul
xchg
push
adc
push
popw
or
out
es
in
mov
pop
sbb
outsb
cmc
aad
add
pop
jnp
fmull
aad
loop
std
iret
popa
xor
cmp
rcll
lcall
cmp
sub
addl
and
dec
scas
stc
shlb
int3
loopne
loope
mov
cmp
lret
pop
or
jmp
mov
adc
lock
lock
fs
repnz
lock
loope
or
test
jecxz
mov
repz
sbb
gs
in
mov
jnp
jbe
fdivrs
mov
mov
pop
push
stos
fldl
pop
shlb
wrmsr
or
shr
mov
jmp
leave
lret
leave
hlt
adc
dec
pop
fistl
fdivrs
xor
jo
lahf
loope
cltd
cmpsl
mov
mov
dec
shr
xchg
dec
sti
jg
and
scas
mov
add
jle
pop
stos
ja
fsubs
or
pop
lcall
sub
sbb
fidivrl
out
fsubrp
jg
cmpl
mov
sub
jae
dec
xchg
imul
popf
dec
data16
inc
pop
add
inc
add
arpl
xor
in
mov
cmp
mov
iret
outsl
fwait
bound
testl
pop
dec
jns
mov
and
inc
shrl
or
fsts
fbstp
adc
adc
xchg
xor
aaa
rcll
xchg
mov
pop
mov
pop
push
in
and
out
test
mov
cmp
loope
mov
shlb
fs
ljmp
or
or
pop
jns
xchg
mov
rclb
popf
movsl
xlat
ds
cwtl
xor
pop
xchg
pop
lea
cs
sub
xor
lock
mov
lds
cmpl
into
pop
add
inc
jl
xchg
mov
faddl
push
pushf
sub
mov
xchg
bnd
sbb
leave
es
pop
mov
xchg
addb
mov
xlat
jne
leave
and
cmpsl
lahf
popa
jl
repz
jecxz
fnstsw
std
in
in
arpl
stc
out
xor
jecxz
das
fimuls
mov
lods
jo
lods
jbe
gs
sti
arpl
sbb
btrl
push
outsl
ds
cld
cs
gs
fucom
mov
decl
xlat
pop
and
dec
mov
cmc
ja
sbb
jns
lcall
cmp
xor
add
loopne
dec
pushf
rcr
pushf
sub
dec
and
stos
stos
aad
inc
mov
test
xor
imul
fstpl
jecxz
mov
or
adc
into
rcrb
mov
cwtl
subb
dec
call
cmc
xor
push
push
test
lods
cmp
and
jno
data16
cmp
or
movsl
pop
and
mov
xchg
clc
std
fsubrs
jmp
mov
ja
into
and
mov
ljmp
adc
cmpsb
mov
cmp
inc
add
jmp
pop
fisubs
cs
xchg
cmpsb
xlat
jae
push
mov
iret
outsl
loop
xchg
out
mov
insb
sbb
ja
out
popf
sbb
push
lods
and
lds
enter
or
mov
nop
xor
mov
xchg
sub
daa
cmp
push
into
xchg
and
pop
inc
faddl
sbb
adc
dec
xor
jnp
out
adc
and
xchg
xchg
and
mov
sub
jle
cmp
mov
fstpl
mov
jge
lretw
aam
jmp
cmp
sbb
scas
out
adc
mov
loopne
xorl
lock
sti
xchg
pop
ret
cmp
xchg
pop
inc
ret
iret
jae
jl
out
aas
cltd
loope
jecxz
aaa
adcb
push
cli
mov
scas
inc
and
or
jl
xor
pop
imul
jne
inc
cltd
outsl
ljmp
test
inc
out
loop
and
std
and
sub
popa
scas
sub
pop
push
and
mov
add
mov
shll
sub
or
in
cmpsb
inc
aam
push
out
inc
jae
xor
xor
mov
sbb
js
push
hlt
ficomps
add
hlt
add
jne
cmp
add
cli
jge
addr16
fsubs
pop
mov
mov
scas
enter
fisubrl
mov
push
in
lret
inc
call
test
mov
pop
jb
addb
push
lahf
test
nop
movsb
push
inc
xchg
sti
push
mov
gs
aad
jns
push
popf
pushf
adc
push
outsl
test
pop
rolb
pushf
xor
cltd
and
daa
xchg
sub
in
loope
scas
cmp
andb
adc
push
lock
mov
adc
stc
imul
sub
cmpsb
sub
icebp
mov
les
out
mov
daa
incl
and
into
das
and
cltd
dec
add
gs
stc
and
loop
jno
cmpsl
cmpsb
pop
xor
je
add
pop
mov
sbb
cltd
dec
mov
scas
jl
iret
push
and
rcrb
and
mov
push
adc
lcall
inc
mov
pop
cmpsb
lahf
enter
out
lahf
lcall
mov
sub
testl
xor
xor
pop
loope
pop
lods
mov
sarb
or
jnp
and
scas
add
pusha
lahf
jecxz
dec
inc
fstpl
ds
jnp
mov
xor
sub
mov
inc
dec
sbb
aas
push
aaa
pop
push
shlb
push
push
ljmp
roll
mov
adc
out
push
push
enter
mov
dec
or
inc
nopl
pop
mov
adc
hlt
in
jbe
cld
fsubl
and
push
jmp
std
or
enter
mov
outsl
mov
mov
test
mov
xor
insb
lock
insb
call
sti
ljmp
xchg
mov
jl
jmp
dec
sub
push
push
stos
clc
lock
inc
or
es
sub
dec
mov
daa
mov
or
cmp
mov
adc
cmp
fcoml
add
jbe
push
fs
iret
popl
mov
mov
mov
aas
pop
out
mov
push
sub
lods
cmp
mov
add
push
sub
daa
scas
inc
lods
fdivs
adc
loop
incl
vmovaps
mov
fisubs
ffreep
clc
or
add
jmp
mov
sbb
dec
out
jl
rcll
push
adc
add
loop
ret
jge
push
adc
sbb
icebp
mov
das
std
int3
fidivl
jb
dec
pop
sub
ret
out
test
mov
fcmove
iret
ja
cmp
push
insb
add
jle
or
jnp
fsubrl
test
imul
scas
inc
xchg
es
mov
clc
clc
add
shrb
and
loopne
adc
mov
movsb
leave
insb
das
or
adc
rcrb
fisubs
popa
and
add
and
push
mov
inc
inc
inc
sub
or
jbe
testb
movsb
sbbl
add
dec
lds
push
push
aaa
nop
sub
fmuls
cld
cmp
fidivrl
pop
scas
je
cmpsb
xchg
mov
inc
cwtl
dec
hlt
xor
bound
adc
xchg
xor
mov
int
inc
xor
or
ljmp
fiaddl
lahf
and
cmp
dec
mov
aam
rcrb
inc
xacquire
ficoml
loope
pop
icebp
sub
jecxz
or
ds
mov
mov
cmp
aas
push
push
sbb
and
rclb
roll
mov
add
xor
sub
aam
popa
jl
lret
or
push
in
jnp
pop
lods
mov
das
jecxz
jae
pop
xchg
mov
pop
mov
jge
movd
scas
int
push
lock
push
and
sbbb
xchg
scas
push
sub
xchg
les
out
add
cmp
rcll
out
sub
repnz
mov
dec
mov
test
or
xchg
adc
push
sti
push
fcoms
int
dec
mov
adc
outsb
ret
sub
rolb
mov
cmp
push
lcall
push
outsl
pushf
inc
mov
insl
std
js
add
shrl
or
pusha
sti
inc
std
xchg
dec
xchg
mov
xchg
mov
out
clc
add
adc
jb
mov
inc
mov
loope
aaa
xchg
or
sub
xchg
jle
lods
in
fidivrs
lret
sbb
test
lret
mov
jne
sar
mov
cmp
movsb
test
xor
movsl
std
lea
push
fwait
adc
mov
jae
loopne
mov
cltd
pop
mov
sti
jp
icebp
adc
mov
inc
mov
sub
aaa
mov
and
cmp
cmp
fwait
movsb
lods
add
inc
jp
lahf
icebp
xchg
pop
ja
xchg
jp
mov
push
pop
js
inc
xchg
mov
pop
cmp
notl
loope
nop
sbb
into
xchg
in
sub
sub
enter
mov
dec
movsb
repnz
fs
inc
cmp
fs
les
cmc
jbe
arpl
inc
or
jl
int
shlb
loopne
sbb
xor
stos
pop
mov
jne
or
xchg
xor
std
xchg
dec
in
out
xchg
mov
out
insb
stos
lahf
inc
incb
pop
fistps
jmp
rorb
test
test
inc
insb
sbb
loope
inc
rcrb
xor
popa
movsl
jecxz
lds
push
lret
inc
test
hlt
lret
aaa
pop
pop
dec
mov
sub
xchg
aaa
les
ljmp
out
rorl
and
mov
adc
dec
out
test
dec
sbb
inc
scas
pop
std
insl
shlb
sub
mov
sub
das
cmc
mov
adc
out
xchg
in
and
pop
je
test
outsb
orb
js
in
addr16
pop
insl
xchg
xchg
and
dec
mov
lea
test
cmp
lods
lock
inc
cwtl
cmp
mov
and
mov
lahf
stos
mov
push
sarb
je
rcrb
cmp
dec
xchg
jbe
btr
jno
shr
adc
inc
stos
fcmove
dec
inc
xor
sub
dec
aad
inc
and
lods
add
dec
data16
loopne
dec
sub
mov
jle
sarb
insl
stos
jle
das
cli
pop
es
mov
add
xor
out
sub
or
jecxz
jmp
adc
fdivrp
xor
ja
lods
push
sti
cmp
lret
shll
iret
cwtl
nop
mov
popf
out
iret
enter
xchg
xchg
inc
sub
fwait
jbe
fldt
jmp
shlb
ds
cmp
push
xchg
lret
out
call
int
movsb
adc
insb
push
jmp
xchg
add
shr
ljmp
lret
pop
movsl
cmp
mov
push
ss
cmp
pop
adc
loopne
and
fistpll
or
mov
push
push
mov
stos
icebp
imulb
mov
dec
jne
dec
xchg
ret
movsb
rcr
jnp
pop
adc
fstps
shlb
push
jno
push
sub
mov
faddp
xchg
mov
fisttps
xchg
loope
lods
and
sahf
arpl
push
pop
iret
sti
xchg
inc
mov
xlat
aas
mov
lea
add
lret
jae
and
pop
push
mov
addr16
sub
push
add
testb
and
pop
mov
sbb
dec
and
lea
mov
sbb
ljmp
add
in
les
mov
jge
jbe
pop
ss
mov
jg
sub
in
inc
push
call
mov
mov
jecxz
cwtl
push
incb
pushf
mov
scas
cmp
sub
mov
push
ds
mov
jne
int
pop
fsts
mov
cmp
lret
sti
jbe
call
fdivrl
or
out
add
data16
mov
pop
aad
cltd
imul
repnz
mov
cmp
inc
repnz
imul
leave
adc
cmpb
add
repz
dec
add
adc
xor
push
xchg
dec
add
mov
bound
or
lret
xchg
popa
out
pop
mov
aaa
pop
cwtl
cmp
repz
lahf
fs
pop
ds
and
jne
pop
or
pop
add
fsts
jl
in
insb
int3
jno
push
outsb
in
movsl
imul
out
shr
pop
push
lret
outsb
jp
push
decl
add
fwait
pop
inc
rcrl
jb
outsb
jbe
inc
mov
xchg
or
jle
shrb
lahf
aam
add
and
sub
jns
aas
sub
push
adc
mov
mov
and
jno
mov
dec
add
or
stc
lret
push
sbb
lcall
push
xchg
dec
add
cld
push
inc
adc
aas
mov
add
in
or
dec
push
inc
movsl
jae
cli
ss
movl
js
aam
or
rorl
cwtl
pop
in
pop
fisubrs
ja
aaa
fnsave
add
pop
cmpl
pop
dec
pop
xchg
xchg
sub
loope
in
sbbb
pop
jmp
fisubs
xor
or
jne
push
cmp
cmc
leave
lods
insb
mov
pop
push
dec
in
xchg
jns
sahf
nop
xchg
add
enter
lock
dec
mov
jle
je
mov
lods
ror
lods
repnz
data16
push
movsl
icebp
cmp
sahf
and
scas
add
jge
lret
outsb
divl
test
sub
je
jl
test
xor
outsl
mov
jnp
dec
xchg
ret
xchg
dec
jns
inc
add
test
cltd
lea
xchg
faddl
mov
fs
lods
jb
pop
test
call
or
mov
pop
in
mov
mov
loopne
shll
repz
or
daa
mov
mov
imul
into
mov
bound
inc
popa
pop
andb
movsl
xchg
int3
mov
ja
dec
pop
or
or
arpl
and
sub
out
xchg
dec
jg
sub
push
cltd
mov
inc
xchg
cmpsb
add
shlb
push
push
nop
daa
les
gs
push
sub
and
mov
loop
push
aas
jns
pop
cwtl
repz
call
dec
dec
pop
mov
cmpsl
in
jno
jmp
jp
adc
pop
inc
push
movsl
mov
dec
outsb
adc
jmp
lock
aam
fxch
pop
mov
mov
pop
inc
push
sub
push
mov
cli
test
dec
inc
out
cs
negl
loopne
sub
popa
imul
rolb
scas
aaa
mov
mov
lcall
call
xchg
add
aaa
pop
scas
adc
mov
in
rcrl
dec
mov
add
data16
mov
and
adc
push
mov
adc
stos
das
inc
gs
and
jmp
or
fisubs
pop
jmp
imul
sbbl
mov
ljmp
inc
mov
cmp
pop
insb
ja
hlt
pop
dec
cwtl
sti
stos
push
or
hlt
das
dec
imul
ds
dec
out
mov
pop
cli
inc
adc
xlat
xchg
movsl
inc
or
mov
xchg
adc
sbb
dec
daa
popa
fsubr
and
leave
jae
scas
add
adc
or
mov
aas
push
or
gs
and
idivb
mov
pop
nop
push
push
shrb
ret
mov
ljmp
call
mov
mov
push
push
xor
or
jne
push
cli
mov
idivl
lods
dec
adc
mov
jno
jle
add
sbb
rol
mov
adc
jp
fwait
icebp
push
adc
mov
cltd
int3
fsubl
lea
push
xor
inc
pop
sbbb
xor
push
xor
lock
jnp
jns
fsubrs
gs
xsaves
lretw
out
add
mov
push
sbb
push
sub
add
mov
sbb
pop
repnz
sti
pop
dec
adc
pusha
in
dec
mov
cmp
pop
sbb
stc
and
and
cmp
push
test
enter
jne
pslld
and
adc
inc
hlt
gs
fistpl
leave
cmp
dec
push
pop
ret
emms
push
sub
idiv
into
movsl
jg
jmp
sahf
jb
aad
divb
xor
scas
popa
cmc
arpl
ret
xor
jecxz
aas
lds
addr16
andl
pop
loop
lea
inc
cmp
cmp
rcl
mov
add
test
dec
fdivr
imul
stos
shlb
adc
mov
daa
and
or
push
xchg
sub
fiaddl
sbb
fwait
cltd
aam
inc
dec
add
insb
adc
scas
and
lea
jp
xchg
inc
or
push
and
mov
sahf
dec
aas
sahf
fwait
das
sbb
xor
mov
adc
sub
aaa
xchg
sub
incb
mov
jl
loopne
xchg
push
mov
fcomps
cmpsl
add
sbb
mov
sub
and
testb
xchg
sbb
gs
xor
dec
mov
cmp
iret
inc
out
pop
xor
ds
push
stos
cltd
add
call
mov
insl
and
jecxz
jb
add
mov
dec
sbb
scas
sbb
enter
fldt
insb
insb
pop
push
mov
jnp
dec
in
xor
lds
movsl
dec
setg
push
jne
cli
leave
mov
or
outsl
je
xor
xor
push
push
cmpsb
and
fidivrl
outsb
mov
std
int3
stc
pop
ss
jg
ljmp
cli
sub
and
dec
inc
push
pop
push
outsl
cwtl
mov
xchg
mov
pop
gs
jbe
jg
ret
or
add
icebp
lock
lods
stc
push
lret
loop
cmp
or
testb
or
fs
xchg
push
ret
sbb
lcall
or
lret
pop
loope
or
and
sbb
icebp
in
cmp
jmp
mov
inc
lock
mov
fisttpll
jo
jnp
or
enter
and
cs
mov
pop
scas
lahf
outsl
add
loope
inc
push
fisubl
sbb
xor
dec
pop
dec
in
push
ljmp
pop
pop
dec
lahf
mov
out
push
sahf
adc
out
int
xchg
inc
adc
cmc
scas
cltd
sbb
test
mov
dec
pop
insl
mov
orb
bnd
adc
cld
pop
cltd
inc
push
insl
mov
nop
sub
jecxz
push
mov
xor
xor
mov
out
push
cwtl
loop
xor
xor
movsl
jnp,pn
faddl
add
push
push
xor
inc
inc
mov
push
mov
cmp
lds
jb
pop
cmpsl
fsub
stos
adc
jo
mov
inc
inc
pop
push
outsb
jmp
aad
loop
mov
xchg
fidivl
push
nop
add
in
sbb
insb
cmp
scas
icebp
pop
movsl
or
je
lock
out
pop
jl
push
repz
mov
pop
sbb
into
mov
cmp
sub
mov
jo
jge
repnz
icebp
inc
push
jo
sti
lods
adc
push
cmp
ja
mov
add
adc
push
pop
push
movsb
and
xor
xchg
xchg
jae
stc
rorb
sub
stos
dec
stc
pusha
fnop
jno
xlat
std
ret
mov
test
cld
imul
jp
push
imul
cmp
push
outsl
push
or
test
mov
outsl
and
xchg
or
sub
push
out
xchg
cld
fcoml
inc
insb
lcall
lods
xlat
dec
cmc
pop
push
cmp
mov
lret
inc
jns
cwtl
sbb
mov
cmp
rorl
jne
mov
or
sub
lea
adc
mov
fwait
fs
jb
stc
jb
add
sbb
mov
mov
or
cmpsl
mov
inc
movsb
cmp
mov
or
xor
pop
or
pop
pop
dec
cmpl
and
icebp
xor
push
xor
scas
ja
jmp
mov
scas
ret
inc
or
xchg
gs
push
push
fucomip
sub
sbb
addr16
out
adc
movsl
adc
xchg
repz
xor
mov
mov
scas
sbb
mov
jg
int3
aam
insl
ret
sub
push
add
xchg
call
pop
jo
in
ja
lods
adc
sbb
fwait
sbb
cmp
ret
xchg
jae
daa
jg
ret
jb
loop
mov
xor
dec
cli
add
dec
lock
jae
dec
cwtl
add
fwait
xchg
out
outsl
jecxz
and
lock
mov
pop
ja
gs
dec
enter
sahf
mov
xchg
mov
jg
fildll
cld
pop
push
jmp
pop
xchg
sbb
sbb
shl
jecxz
jecxz
jg
push
cwtl
xchg
or
mov
push
aaa
mov
add
xchg
dec
xchg
lea
sub
lahf
mov
int3
jbe
jmp
or
jb
dec
enter
sbb
pop
jnp
icebp
pop
sub
push
inc
nop
sub
es
jmp
push
push
sbb
push
pop
mov
push
xchg
xchg
sbb
inc
pop
jecxz
lods
mov
mov
stc
int3
ror
or
fistl
fiaddl
pop
push
inc
int
mov
divb
leave
xor
pop
fmul
data16
inc
dec
mov
add
xor
sub
int
fsubrl
stc
pop
out
inc
push
hlt
lret
push
push
cmp
imul
cmp
in
mov
xchg
daa
addb
fisttps
rcrb
ljmp
mov
insb
sbb
cmp
cli
movsl
push
jmp
cwtl
ja
or
mov
cmc
xlat
xor
ljmp
push
or
aas
dec
das
test
mov
xchg
std
lock
xchg
xchg
jp
lock
and
in
arpl
add
pop
and
rolb
jg
push
push
push
mov
bnd
into
pop
cmpsl
inc
xor
shr
sub
shr
cmp
stc
movd
iret
add
into
xor
adc
cli
aad
push
test
jo
into
and
inc
test
lahf
mov
mov
clc
cmp
push
dec
sub
aad
fistps
ficoml
sbb
pop
fidivrl
ret
ret
in
cmp
out
test
mov
call
mov
xchg
jmp
lret
cmc
cmp
lahf
shrl
das
xor
stos
sbb
repnz
test
pop
cwtl
test
sbb
jbe
test
xchg
pop
sahf
daa
out
shrl
sub
or
js
push
xorl
ret
mov
pop
dec
imul
jmp
in
sar
iret
hlt
push
jle
cmp
cmp
imul
rcll
popl
cmpsl
adc
push
fmul
push
xchg
ficoms
mov
ja
xor
and
fnstenv
add
popl
shll
loopne
cmp
daa
sti
cli
ss
jecxz
xchg
stos
dec
repz
mov
adc
pop
ds
ror
cltd
and
out
xor
es
mov
push
inc
pusha
xchg
or
pop
xorb
push
or
out
or
pop
and
je
mov
adc
sub
mov
pop
xor
jmp
scas
mov
xor
lcall
mov
fstl
sub
adc
cwtl
pop
mov
hlt
push
or
mov
psubusw
cmp
xchg
xor
sub
or
mov
xorl
movsb
hlt
inc
jnp
insl
jne
testb
iret
decb
fnsave
push
lds
cltd
mov
fwait
push
xchg
fs
loop
mov
fbstp
in
mov
inc
je
lret
jae
push
mov
xlat
sbb
das
pop
cmp
inc
mov
sub
adc
flds
in
mov
sub
pop
xor
lods
dec
xchg
sahf
pop
sub
call
ds
adc
sub
xchg
ja
and
js
mov
lret
loope
movb
repz
fs
sub
pushf
xchg
je
adc
xchg
bound
popa
mov
push
mov
data16
xor
mov
pop
pop
les
jbe
in
call
aad
insl
mov
lcall
lds
roll
xlat
mov
out
mov
shll
lods
sub
adc
push
fwait
rcr
scas
pop
dec
add
test
xor
add
scas
and
xor
sbb
mov
lret
fcomps
mov
jp
push
cld
clc
adc
adc
rorl
adc
enter
imul
sarb
cmpsl
adc
fsubs
or
push
cwtl
push
notb
in
sub
sbb
rol
movsl
mov
sbb
dec
sub
jmp
sub
aam
je
addr16
xor
jb
inc
cmc
insl
pop
aad
fucomi
adc
xchg
xor
iret
mov
std
adc
enter
mov
jecxz
ds
pop
fmul
sub
loop
mov
mov
inc
dec
jbe
xor
insb
mov
out
jne
lds
adc
fidivrs
jmp
cmpsl
idiv
pop
pop
sub
mov
dec
hlt
into
pop
cmpsl
inc
outsl
xchg
ret
inc
and
or
aaa
adc
jno
std
outsb
nop
cli
in
lahf
mov
dec
xlat
cld
ds
mov
cmp
ret
dec
xchg
imul
outsl
jp
pop
adc
sahf
and
nop
iret
fstpt
jne
xchg
mov
scas
repz
fs
outsl
push
xchg
aad
es
cmpsb
aas
cmp
sbb
mov
xchg
movsl
cmp
sbb
push
cmp
dec
add
stos
fnsave
in
mov
idivl
mov
jne
mov
cmp
insb
and
lods
ficompl
iret
push
pop
sbb
pop
decb
lcall
popf
pusha
mov
pop
sti
lods
aam
push
mov
jo
jl
xor
gs
pop
dec
lods
mov
mov
addr16
out
push
or
ja
adc
mov
pushf
sub
leave
call
repz
and
sbbb
popl
shrd
arpl
jo
cltd
loop
mov
ss
inc
jbe
ret
and
icebp
dec
cmc
movsl
push
mov
xlat
sar
pop
pop
movsl
or
mov
std
cld
hlt
add
ljmp
fs
adc
in
mov
push
mov
xor
mov
pop
push
xor
ds
dec
push
leave
data16
lcall
scas
xchg
sub
imul
shlb
mov
aam
sub
shll
push
mov
xor
or
sar
jo
jae
pop
fldt
jne
negb
and
inc
sbb
sbb
sub
jo
aas
ss
cs
in
mov
aam
add
outsl
repnz
out
sbb
mov
push
jne
out
or
lahf
cs
pop
pushw
fsts
ds
ret
sbb
cmp
cmpsl
lock
adc
adc
je
dec
out
cld
sahf
add
lahf
sub
mov
daa
lods
jecxz
sub
enter
es
fldenv
mov
pop
xchg
jge
adc
stos
jbe
sbb
inc
out
pop
arpl
insb
mov
aas
and
dec
mov
leave
insb
jecxz
in
push
push
fdivrs
insl
or
and
int
cwtl
lcall
and
frstor
aaa
push
xor
fisubs
push
add
sub
aam
jo
mov
cmpsl
jo
in
cltd
iret
jns
pop
fyl2x
repnz
jge
sub
pop
lcall
cmp
fsubr
pop
insl
lahf
xlat
cmp
add
aad
lcall
cwtl
mov
sbb
outsb
sbb
in
aaa
imul
dec
jecxz
xor
fsubrs
push
popa
test
add
add
add
mov
xchg
push
jnp
mov
inc
sbb
jl
and
idiv
aas
pop
add
outsl
dec
xchg
xchg
insb
lds
sub
push
mov
iret
loop
xor
lds
loopne
repnz
mov
fnstsw
and
out
xchg
ds
cmp
jae
lcall
gs
xor
leave
xchg
mov
icebp
mov
and
pushf
test
lea
repz
aas
xor
mov
push
pop
pop
cld
std
stos
test
pop
iret
jle
popa
std
pop
mov
lea
lret
je
scas
js
shr
add
push
mov
xchg
imul
sub
inc
mov
push
pop
cli
insb
shrb
movsl
in
hlt
mov
add
or
mov
hlt
lcall
jb
test
and
leave
hlt
and
inc
sbb
popf
movsb
mov
in
xchg
mov
pop
mov
and
dec
inc
mov
cli
xchg
jg
aad
jne
dec
cmp
add
data16
cmp
outsl
pop
movsl
aad
rclb
lods
fcompl
push
ret
lods
imul
stos
mov
test
or
cwtl
push
or
sbb
test
push
mov
jb
das
out
xchg
in
add
adc
mull
inc
popf
inc
addr16
mov
lret
out
aas
xor
sbb
mov
dec
ret
inc
jns
inc
int
fadds
mov
aad
es
push
movsl
lahf
hlt
add
lds
jbe
call
mov
daa
mulb
inc
xor
cmp
jle
mov
mov
sub
les
push
sub
inc
push
std
std
inc
cmpsb
cmp
sub
jmp
and
pop
xchg
fimull
mov
fists
jne
pop
inc
lret
inc
xor
lods
xchg
push
mov
cld
jb
test
dec
int
popl
xlat
add
mov
dec
loopne
daa
lea
incb
sub
sbb
push
mov
loope
and
pop
push
mov
aaa
lahf
push
sbb
push
push
daa
aad
cwtl
pop
test
clc
mov
mov
inc
push
ret
aam
pop
aaa
stos
xchg
sub
popa
adc
jns
das
xorl
xor
xchg
loopne
push
mov
out
shl
jo
fistl
xor
lcall
pusha
movsl
xchg
and
xor
xchg
push
jnp
inc
pop
gs
mov
xor
cmp
test
loope
mov
clc
das
dec
lcall
mov
pop
arpl
jns
cmp
clc
inc
xchg
pop
in
sub
cmc
lcall
mov
lret
mov
es
call
push
mov
add
sbb
outsl
jp
int
div
jmp
mov
gs
insb
and
aam
popa
insb
jg
aad
mov
push
mov
les
aam
cmp
je
mov
lcall
mov
jle
cmp
mov
call
adc
aad
bound
mov
fcmovne
lcall
aad
jae
dec
and
mov
mov
pusha
mov
mov
sbb
sbb
mov
sti
pop
icebp
stos
pop
lcall
mov
popa
fcoms
ss
cltd
sarl
iret
outsl
ret
inc
xlat
cli
jne
shlb
push
mov
data16
and
sub
or
addb
scas
sbb
ret
and
outsl
sub
or
inc
iret
add
jp
and
sbb
fiaddl
jle
push
jp
repz
ss
insl
lahf
ficoml
shr
sbb
iret
enter
sbb
je
imul
pop
testb
pop
jmp
iret
push
adc
call
push
insb
test
xchg
fwait
dec
iret
bound
jnp
xchg
ret
sub
lds
lea
bound
sub
lcall
adc
je
xchg
cmp
sub
push
xor
dec
dec
add
mov
xchg
inc
lea
jp
dec
into
sbb
or
call
pop
shll
mov
js
test
mov
cli
fistl
lret
arpl
fisubs
adc
lods
jmp
push
xor
add
xor
sub
adc
shlb
out
push
sub
add
aas
enter
je
std
sbb
add
stos
xchg
adc
or
cmpsb
push
dec
std
fadds
push
daa
aam
in
xchg
jge
xchg
popa
lret
jmp
fisubl
jns
jno
js
in
out
inc
loopne
mov
popf
insb
push
les
fcoml
adcl
stc
out
movsb
cmpsb
jns
fst
stos
push
rclb
js
test
fadd
insb
int
ds
mov
sub
cmp
scas
addr16
sbb
dec
jae
pop
add
inc
jb
sub
cmc
lcall
loop
jle
das
pop
sub
testb
js
mov
fistpll
push
add
add
pop
cwtl
jmp
sahf
push
add
imul
and
jo
adc
pop
cmpsb
imul
sub
mov
mov
rolb
loopne
add
imulb
pop
out
mov
cmp
jne
test
mov
xor
push
loope
lret
and
into
fs
inc
repnz
and
lds
outsb
fistpl
dec
repnz
pop
mov
adc
mov
jb
mov
fwait
imul
pop
mulb
and
in
nop
inc
xchg
jmp
rol
out
cmpsb
ret
push
xor
and
inc
repnz
repz
pop
mov
jns
mov
adc
aam
je
jecxz
mov
inc
inc
scas
stc
insb
gs
mov
or
scas
aad
adc
dec
fcomip
jno
push
rolb
std
in
xchg
xchg
sarl
jle
repz
pop
out
xchg
push
adc
lret
pop
hlt
in
daa
aam
jno
jecxz
mov
mov
add
jno
mov
mov
push
mov
inc
nop
in
shlb
xchg
lahf
jno
xor
fcoms
stos
sbb
push
sub
xchg
pop
outsl
ja
jecxz
jnp
inc
dec
dec
jmp
or
push
pop
inc
cmp
cmpsl
ret
call
int3
jbe
inc
arpl
je
adc
test
sbb
out
inc
pop
mov
lds
jle
iret
mov
jmp
xor
repz
or
lods
push
push
xchg
shrb
imul
push
loopne
dec
or
out
leave
push
and
push
fmuls
addb
xchg
stc
dec
inc
xchg
ljmp
ret
aas
inc
xchg
pop
sahf
out
mov
in
bound
mov
mov
add
xor
pop
addr16
cmpsb
lcall
insb
push
repnz
outsb
mov
inc
push
mov
fildl
add
adc
nop
push
jne
aam
add
mov
out
es
aad
int3
mov
sbb
and
pop
adc
lcall
xor
add
fdivs
mov
and
mov
cltd
insb
cmp
xchg
lds
out
cmpsb
jbe
fisttpl
jle
ljmp
or
xor
mov
xchg
mov
hlt
adc
adc
dec
xchg
shl
inc
cmp
xor
mov
and
shrb
cmp
jle
mov
cmp
sub
xchg
stos
mov
ret
and
xor
in
add
fnstsw
cmp
jns
ljmp
sub
mov
xchg
xor
pop
jbe
sub
xchg
mov
dec
xor
int3
fwait
lods
push
lcall
mov
inc
cmp
dec
push
add
es
jecxz
jnp
sahf
rorl
jae
sbbl
xchg
aas
test
lcall
add
push
mov
insl
xor
jp
pop
bound
mov
int
repz
jl
es
pop
push
sub
fldenv
daa
call
dec
cmpsb
pop
mov
mov
negb
or
mov
cmp
incb
push
arpl
pop
mov
cmp
in
scas
xchg
adc
iret
popa
pop
xor
out
push
into
mov
pop
ss
jns
jecxz
imul
int3
lds
flds
inc
sub
ja
popa
sub
jb
mov
scas
test
fs
jne
ds
adc
jmp
out
xchg
out
fmuls
pop
xor
rcll
call
xchg
cmp
pop
imul
shr
push
ljmp
das
push
cmpsl
mov
gs
movl
lock
xchg
push
in
push
pop
dec
adcb
push
xor
orl
cmp
cs
in
aaa
in
or
enter
loop
into
cmp
jno
aam
lods
xor
cmp
clc
pop
pop
add
fists
sahf
inc
sbb
cmpsb
lods
hlt
sub
xchg
into
mov
mov
adc
fcomp
jno
inc
jb
cmp
inc
lds
sbb
cmp
in
mov
mov
scas
cmp
fisttpll
push
cli
jl
or
cld
ret
subl
sarl
mov
bound
fs
repz
mov
or
pop
cmp
iret
jecxz
add
pushf
pop
les
sbbb
aaa
push
into
loope
xchg
out
sbb
dec
jb
xor
mov
fidivrs
and
cmp
pop
sti
pop
es
cld
xchg
inc
inc
jns
cmpsl
adc
push
int3
fstpl
loopne
mov
xor
div
push
rcrl
aas
xor
enter
lods
xor
lret
pop
fwait
call
fwait
dec
pop
pop
adc
loope
push
js
aam
pop
mov
or
xchg
cltd
cmp
aam
mov
mov
or
rcr
enter
sti
enter
aaa
add
mov
inc
aaa
mov
adc
xor
xchg
dec
outsb
movsl
mov
dec
mov
xchg
popf
data16
sub
ret
call
into
mov
fdivrl
sbb
jmp
imul
xchg
or
mov
ret
fmuls
mov
pushf
dec
dec
dec
fbstp
lret
scas
sbb
adc
inc
pushl
sbb
xlat
test
xor
mov
ret
fstps
sarl
sub
data16
cmpsb
adc
and
int3
insl
and
sahf
sahf
adc
mov
sbb
push
enter
cmp
stos
ds
mov
cmpb
movsl
cmp
xor
xchg
pop
hlt
sbb
push
sbb
nop
mov
incl
xor
sub
das
mov
inc
jb
add
jbe
or
jecxz
sub
jb
or
sbb
sbb
scas
lods
lea
jb
dec
aad
lcall
nop
je
xchg
test
pop
or
ret
fmull
inc
repz
add
test
clc
xchg
shlb
push
add
mov
adc
dec
cmp
iret
je
lret
pop
jno
iret
fldln2
cmp
dec
out
and
call
add
cmpsl
sbb
pop
jmp
mov
and
sub
fs
hlt
adc
enter
mov
das
xor
repz
xchg
arpl
dec
push
ret
jnp
sub
out
jmp
mov
mov
push
scas
das
mov
stc
mov
adc
push
sub
sbbb
and
push
fs
popa
mov
mov
cmc
out
sbb
mov
mov
or
jmp
mov
jo
jo
sub
dec
pop
mov
jecxz
andl
into
psllq
add
pop
add
cltd
insl
fadd
lods
adc
daa
xchg
xchg
out
add
fsubp
cs
cmpb
sahf
aad
cltd
xchg
mov
test
xchg
dec
jecxz
popf
loop
jl
push
inc
adc
pop
xor
daa
pop
jl
ja
mov
outsl
cmpsl
mov
imul
sahf
mov
pop
mov
jns
aam
sub
inc
and
mov
ror
sub
out
fstl
pusha
ljmp
add
out
ja
or
in
mov
pop
pop
cmp
xor
test
or
xorb
sbb
pushl
dec
aaa
loopne
xchg
insb
lea
inc
adcb
sub
test
lock
cli
jae
push
pusha
vmread
sbb
fs
pop
das
adc
les
adc
mov
cvttps2pi
mov
push
xor
in
or
mov
imull
or
xor
xor
mov
xchg
in
sbb
lret
inc
push
xchg
fisttpll
stc
pushl
inc
sarl
test
or
test
pop
sub
and
cmp
insb
mov
arpl
ja
jge
jnp
pusha
outsl
push
in
xchg
jns
or
xchg
aad
faddp
std
test
dec
inc
bound
test
and
cmp
push
sub
sti
inc
repz
ljmp
pop
pop
cmc
mov
cmc
jb
bound
nop
xor
adc
hlt
sbb
pop
das
cmp
fistpl
test
xchg
imul
jbe
loopne
pop
inc
jmp
sub
jge
imul
mov
sbb
push
inc
adc
in
mov
mov
js
sbb
enter
adc
inc
pusha
pushf
popf
out
mov
mov
outsl
sub
mov
pop
adc
sbb
jne
std
mov
mov
dec
and
and
fwait
pop
movsl
fistpll
dec
or
xchg
lods
push
push
popa
xor
xchg
cwtl
cmp
mov
push
cwtl
sbb
dec
push
and
jae
test
imul
inc
or
jecxz
mov
xor
jne
rclb
lcall
mov
pop
stos
repz
call
cmp
inc
pop
pop
and
fwait
cmp
fnstenv
fistpl
filds
push
fwait
add
imul
mov
pop
cmpb
int
loope
mov
or
iret
loop
pop
popf
pop
xlat
pop
inc
push
adc
push
or
mov
pop
mov
popa
push
fcoms
push
divb
cltd
in
stos
mov
popf
leave
repnz
out
fnsave
insb
addl
jnp
xor
mov
mov
jl
cmp
pusha
fidivrs
xchg
pushf
adc
pop
pop
push
inc
fnstsw
aam
ja
fimull
push
fdivp
cs
inc
jo
mov
mov
outsl
loop
cmc
rclb
cmp
je
lods
jl
push
dec
cmp
pop
and
clc
pop
test
sbb
lcall
mov
cmp
adcl
xchg
je
push
imul
pop
out
imul
cltd
mov
cltd
dec
push
adc
divb
gs
cmp
sub
pop
cmp
in
pop
xor
ret
mov
cs
xor
sub
test
add
cmpsl
mov
aas
push
sbb
out
pushaw
adc
fstl
out
inc
sub
sub
pop
mov
or
test
cmc
aam
fstl
movsb
outsl
sti
rolb
in
pop
jmp
inc
pop
xchg
adc
stos
and
push
and
mov
cmp
repnz
xor
ucomiss
stc
xchg
sub
iret
add
ficomps
rolb
xchg
jb
xor
and
cs
push
fists
bound
repz
lret
stos
fbld
cmp
add
xchg
and
imul
xchg
daa
iret
lea
lock
insl
repnz
push
pusha
add
xlat
cmpsl
shl
sarl
adc
xorl
jae
fists
and
sbb
jbe
jle
dec
dec
dec
inc
pushf
and
xchg
lcall
in
cwtl
mov
sbb
add
push
push
shlb
xchg
inc
and
mov
ret
xor
jl
sbbb
sub
inc
cltd
push
lahf
add
mov
test
push
andb
addb
out
and
outsl
jno
add
nop
clc
lahf
not
mov
sti
and
push
lret
pop
push
inc
mov
addr16
test
aad
or
shrl
pop
cmp
add
mov
in
lcall
sbb
or
and
arpl
cmp
iret
in
inc
cmp
dec
lret
lods
adc
mov
push
mov
sbb
or
int3
mov
test
inc
popa
push
addr16
dec
rclb
in
mov
pop
mov
push
rcll
scas
mov
lret
in
rcl
out
lea
or
arpl
aad
or
fwait
pop
dec
add
push
gs
in
nop
jge
ja
nop
cmp
stc
lds
sbb
add
inc
jo
shr
sbbl
xor
xor
inc
jge
cmp
and
test
idiv
int
das
daa
xor
xchg
bound
xchg
rolb
jecxz
pop
push
int3
arpl
dec
mov
es
sub
and
cmpsb
xchg
add
leave
adc
sti
outsl
hlt
arpl
test
lcall
es
popa
and
clc
fs
int
or
jnp
xchg
pop
sahf
sahf
adc
arpl
sub
jnp
aaa
mov
fadds
pop
sub
out
aad
rolb
in
lahf
imulb
sbb
dec
popa
in
in
out
scas
mov
inc
js
clc
mov
push
jecxz
jo
test
aaa
and
loop
in
rorl
lock
btc
jae
fs
cmp
dec
outsl
pop
daa
inc
pop
pushf
mov
jmp
jle
stc
sbb
mov
and
or
int3
or
aad
fsubs
sub
iret
mov
fsubrp
adc
sbb
repz
mov
push
ficoms
sub
xor
mov
mov
leave
movsl
pop
fwait
stos
lahf
ret
subb
enter
test
sbb
outsb
shlb
add
mov
cli
mov
dec
ljmp
jnp
cmp
js
push
sub
rorl
xchg
push
btc
in
xor
movsb
aas
xchg
int3
push
cltd
cmpl
push
mov
lods
out
sbb
or
imul
mov
mov
mov
ret
xchg
xchg
mov
int3
aam
sahf
or
mov
pushf
test
xchg
mov
nop
mov
loop
sub
mov
pushf
and
pop
out
mov
scas
add
xchg
push
and
jecxz
ja
shlb
repnz
sbb
jge
lahf
cmpsb
mov
mov
fidivrl
push
or
out
push
cmp
xchg
cs
pop
push
in
dec
cmp
imul
push
mov
stos
dec
push
jne
adc
into
mov
data16
push
adc
xchg
mov
mov
mov
nop
lods
sbb
or
jle
aaa
jecxz
clc
incb
jp
aam
into
cwtl
adc
xor
or
mov
cmc
orb
leave
lret
jle
adc
push
push
xor
outsb
xor
mov
pushf
arpl
loopne
mov
fdivs
divb
adc
mov
in
push
push
in
add
jae
scas
aaa
mov
jbe
adc
fcoms
pop
les
fisubrl
xor
xchg
into
push
lock
cli
push
xchg
mov
mov
insb
lds
xchg
sub
pop
jne
pop
inc
ret
sub
xchg
or
fdivl
shl
je
test
jne
ja
jp
xor
fs
cli
xor
inc
pcmpgtd
scas
xor
push
push
cmp
pop
sub
xchg
mov
test
push
push
lret
push
adc
pop
pop
mov
jo
insb
mov
pop
dec
mov
or
nop
aam
fstpl
jno
and
xor
sti
arpl
paddd
clc
mov
add
jp
out
push
fcmovb
lret
daa
sbb
dec
xor
xchg
cmpsb
jnp
sbb
aam
and
fadds
mov
loopne
pop
call
stos
nop
mov
sbb
or
jb
xchg
mov
cs
and
aam
inc
rolb
push
dec
lahf
movb
popa
outsb
shrl
mov
ds
mov
jb
ljmp
icebp
adc
cmc
xchg
sub
sbb
cmpsb
inc
hlt
adc
inc
mov
inc
mul
mov
dec
insl
xchg
mov
int
mov
rorl
push
xchg
and
outsb
insl
push
movsl
xor
test
insb
xchg
imul
cmpsl
int3
or
repnz
sub
jmp
xor
rcrb
mov
call
frstor
mov
icebp
sti
push
in
xor
push
mov
adc
mov
jmp
xor
sbb
popa
mov
xchg
outsl
push
xor
int3
cmp
jbe
mov
rorb
jle
into
mov
imul
cmp
aas
imul
jno
and
in
sbb
xchg
scas
je
arpl
cmp
pop
scas
out
fs
mov
pop
cmpsb
mov
mov
fiadds
out
cld
xor
dec
xorb
jae
ja
inc
dec
adc
cmpsb
lahf
xor
or
scas
fcmovnb
mov
movsb
sbbb
out
jne,pt
xchg
mov
fldenv
inc
inc
inc
addr16
push
mov
fs
adcb
jns
push
insb
xchg
lahf
pushl
into
mov
push
xchg
and
mov
ljmp
pop
push
push
pop
xchg
cli
test
ja
outsb
fildll
jmp
cmpsl
daa
xor
push
xlat
hlt
ret
movsl
or
mull
inc
xbegin
sub
lcall
call
inc
testb
addr16
gs
and
loop
scas
enter
lock
jb
mov
movb
dec
cmp
loop
adc
or
xor
enter
push
imul
mov
inc
ret
xor
pop
loope
pop
loope
mov
dec
arpl
cmpsb
jmp
fsub
inc
add
lods
xor
arpl
mov
dec
xor
lahf
pop
xor
push
mov
mov
add
jno
xor
xor
fs
sti
adc
movsl
andb
sub
es
dec
aas
ret
mov
mov
jo
xor
in
fsubl
repz
int3
mov
mov
cmp
rep
jl
das
mov
xor
pop
icebp
mov
push
lahf
out
push
xor
aaa
mov
rcll
aad
mov
mov
repz
push
inc
jg
lds
ljmp
push
push
push
cmpb
and
sbb
test
xorb
adc
or
adc
cwtl
jb
inc
scas
pop
int
xchg
rcl
fsubrl
gs
cmp
ret
fwait
mov
dec
ss
adc
dec
pop
je
cli
ret
xorl
dec
add
dec
pop
icebp
arpl
push
pop
jns
filds
out
je
call
rcrl
mov
hlt
pop
mov
push
adc
mov
cmpsl
jo
aad
out
repz
les
adc
outsl
shrb
pop
pop
xchg
cmpsb
jle
mov
pushl
por
out
repnz
add
imul
rorl
lods
cld
jg
sbb
daa
nop
push
test
decb
rclb
push
sbb
cmp
add
mov
ljmp
loope
repnz
fcom
mov
lods
inc
jp
fucomip
lret
mov
in
push
sub
loopne
sub
loop
push
sbb
loope
xchg
push
outsl
enter
adc
outsl
fs
cmp
sbb
and
xchg
mov
insl
lea
fwait
ret
pop
add
ret
inc
and
ss
mov
adc
xchg
cmp
pop
shlb
fsubs
outsl
push
and
int3
insb
fidivrl
lock
sbb
sarb
nop
gs
cltd
ds
testb
lock
andb
add
sarl
and
push
cld
sub
jle
fsubrl
jp
mov
popa
stos
sub
inc
repz
lods
push
dec
mov
stos
pushf
xor
in
mov
jb
xor
lret
and
inc
push
addr16
mov
jge
mov
inc
cmp
popa
dec
adc
outsl
jno
cld
mov
shlb
rorb
xor
out
clc
fwait
pop
inc
adc
test
lods
sbb
pop
lret
mov
mov
cli
call
add
jmp
rorl
lret
das
inc
mov
adc
pop
sbb
movsbl
fwait
rcrl
xchg
scas
aam
ljmp
pop
jno
cmpsl
jne
jb
pusha
movsb
loopne
xchg
adc
mov
movsl
cli
aas
xchg
adc
jg
out
xchg
js
repz
or
out
in
ror
loop
cmp
or
jb
inc
pusha
mov
mov
push
sbb
ret
aad
enter
outsl
push
scas
stos
test
mov
or
clc
adc
cmc
or
pop
js
clc
dec
stc
push
adc
jbe
stc
dec
ljmp
push
pop
mov
pop
shr
rorl
lea
sbb
and
cwtl
lds
lcall
inc
lods
test
sbb
loope
jb
mov
mov
enter
mov
mov
jo
pop
jmp
inc
dec
push
jle
xchg
mov
sti
adc
push
out
inc
jecxz
mov
aam
and
push
xor
imul
sub
dec
std
insb
xor
inc
ljmp
fsubl
imul
punpckhwd
loope
insl
les
xchg
movsb
dec
aad
push
ss
insb
aaa
int3
dec
cmp
sysexit
ss
sub
lahf
and
mov
fwait
xchg
sub
jecxz
insl
fwait
jge
jl
push
xor
movsb
push
ds
jbe
fwait
sub
and
push
lods
cpuid
xchg
daa
or
les
popa
ficoms
fcmovnbe
push
cltd
adc
mov
add
mov
inc
stos
cltd
mov
xor
fucomi
fdivrs
and
mov
shr
pop
fs
outsl
aad
push
pop
cmpsb
rcr
test
in
mov
enter
dec
fcoml
rclb
mov
jno
sbb
push
cmpsl
cmp
push
adc
std
dec
mov
clc
les
mov
out
jo
je
scas
sub
arpl
lock
lcall
stos
sbb
dec
mov
mov
pop
addr16
rclb
pushf
popa
sbb
js
and
fmulp
sub
cwtl
lods
xor
inc
popa
xor
cmpsl
or
cmpsb
jne
pop
mov
push
fstl
push
fs
cltd
adc
jae
push
sahf
inc
scas
and
lahf
call
jb
lcall
aam
jp
stc
push
xchg
xor
xchg
pop
push
or
lods
sti
push
lahf
xchg
out
push
gs
adc
xor
outsb
sbb
mov
pop
push
pop
inc
xor
ljmp
inc
or
std
pop
cmc
int3
cmp
inc
add
repnz
lods
movsl
test
jae
push
xor
nop
orb
loopne
push
push
pmaxsw
jle
adc
xchg
adc
notl
stos
cltd
cmpsl
sub
das
push
fsub
or
inc
pop
mov
sub
pusha
add
or
stos
sbb
out
cltd
jge
aaa
icebp
fldt
jge
cmp
add
pop
fidivrl
cmp
out
mov
arpl
add
jbe
je
dec
hlt
adc
cmp
mov
imull
in
push
dec
out
cmp
add
idivb
mov
jnp
cmpsb
jmp
nop
pushf
stos
cld
std
je
in
fiadds
cmpsl
xchg
xchg
cmp
icebp
mov
xchg
not
mov
dec
loop
insl
js
sbb
push
or
inc
orb
xor
movsb
jae
lcall
in
jg
cmp
add
inc
xorb
push
push
lods
adc
mov
xor
mov
ffreep
jp
adc
mov
push
add
shll
push
pop
cli
and
xlat
divb
cmc
ret
and
call
divl
popf
cmp
xchg
and
mov
sbb
fidivl
imul
icebp
mov
pushf
sbb
mov
pop
leave
xchg
inc
out
mov
cmp
test
push
and
mov
mov
outsb
sbb
lret
test
add
enter
in
movsb
dec
xor
sbb
pushf
pop
mov
inc
mov
arpl
in
popl
outsl
cmp
loopne
mov
sbb
adc
ret
pop
push
xchg
std
pop
pop
pop
adc
in
xchg
jl
clc
jns
inc
int3
or
cmpsl
adc
mov
mov
dec
adc
cmpsb
rcrl
mov
mov
cli
repz
cmp
ja
or
hlt
out
pop
ror
xor
mov
cs
rcrb
mov
pop
or
pop
vrcpss
xor
inc
mov
fsubl
mov
test
les
cmpsl
dec
mov
icebp
aas
gs
lea
xor
enter
dec
jb
push
mov
cwtl
mov
cli
pushf
cs
xor
dec
negb
je
imul
sub
leave
cli
leave
fdivrl
test
ljmp
push
inc
jle
and
es
xor
mov
dec
inc
cmp
loope
in
jno
aas
js
mov
mov
cmp
dec
cli
lret
test
mov
adc
lcall
and
icebp
adcl
or
in
lea
fs
xor
daa
pop
data16
inc
push
push
repnz
inc
cmp
orl
pop
xor
test
cmp
dec
sbb
mov
xchg
shl
ja
fcoms
cmp
add
adc
dec
and
mov
mov
les
fidivrl
mov
inc
insb
inc
mov
imul
cltd
or
nop
sub
lds
iret
xchg
add
movsl
shl
push
jg
mov
mov
into
es
shlb
ss
jne
push
sbb
mov
test
lahf
mov
repnz
stc
xchg
xchg
mov
xor
outsb
jmp
mov
xchg
movsb
mov
xchg
xchg
roll
aam
stc
sub
pop
inc
xor
into
out
mov
mov
out
popa
pop
add
dec
dec
scas
insl
or
call
add
dec
pushl
push
cltd
pop
adc
sub
test
pop
lds
icebp
push
pop
jmp
sub
add
sub
mov
cmp
sbb
xor
enter
subb
mov
clc
xlat
js
inc
mov
sub
and
fidivrs
fcom
cwtl
pop
inc
jecxz
insb
dec
adcb
imulb
xor
dec
or
mov
jnp
movsb
cld
stc
inc
rclb
into
mov
rolb
mov
aam
push
push
test
rolb
push
lahf
jne
mov
test
jp
icebp
das
mov
dec
xchg
push
std
push
pop
mov
lret
movsb
popa
jae
gs
aas
sbb
lcall
adc
push
outsb
jns
jg
popf
fcoms
adc
mov
fwait
scas
cmpsb
adc
sar
and
scas
stos
das
enter
ds
sbb
pop
dec
xor
cmp
lret
aam
sub
pop
lahf
inc
test
bsr
cld
fmulp
in
xchg
cld
sub
mov
and
push
cwtl
and
mov
stos
or
nop
dec
cmpsb
mov
daa
cmp
aas
negl
je
mov
imul
repz
nop
lret
jbe
sqrtps
xor
out
mov
sub
call
and
test
imul
int3
and
xor
sarb
pop
test
imul
xchg
scas
dec
add
jp
outsl
dec
data16
lcall
test
aam
push
mov
mov
dec
pop
xor
mov
test
pop
mov
xor
mov
repnz
int3
xchg
push
out
test
mov
pop
int3
scas
ljmp
push
mov
sbb
mov
std
subl
lea
xchg
xchg
bound
out
ret
test
inc
sbb
stos
data16
or
scas
lahf
fistpl
or
mov
insb
xchg
insl
into
add
mov
sbb
xor
aam
fisubrl
test
xor
sbb
sub
data16
ret
inc
pop
sbb
jmp
jmp
xchg
sbb
out
or
xchg
sbb
or
pushf
out
xchg
add
mov
mov
inc
mov
jb
jecxz
out
mov
mov
gs
int3
cld
les
mov
and
enter
dec
ds
rcrb
cmpb
shll
jns
pop
mov
movsl
cs
pop
dec
mov
add
cs
dec
mov
mov
icebp
pop
dec
ud2
sub
dec
inc
call
sbbb
mov
jns
mov
xchg
mov
push
roll
imulb
pop
xchg
sub
movsb
jmp
dec
mov
mov
adcb
push
xchg
in
inc
add
sub
mov
rcrl
je
leave
pusha
call
aad
fwait
and
xchg
lret
lea
mov
jmp
sbb
inc
mov
stc
mov
sbb
sub
nop
push
inc
xor
sti
lea
lods
mov
adc
outsb
lret
fistps
bound
mov
add
std
mov
push
inc
pushf
pop
orl
pop
dec
popf
ljmp
push
pop
in
dec
push
xchg
es
ret
fcompl
adc
in
cmp
pop
into
ss
xchg
rorl
push
mov
jg
sub
lods
sub
outsl
das
inc
fwait
dec
push
mov
xchg
ret
mov
pop
ret
stos
sbb
adc
and
or
mov
push
jae
inc
cmp
shrl
test
call
xlat
shll
ljmp
cld
mov
mov
nop
imul
fs
mov
pop
outsl
imulb
ss
xchg
aaa
das
push
mov
sbb
jns
rolb
addr16
pop
jl
fidivl
les
in
enter
mov
rol
rep
and
or
rcll
mov
add
pop
test
lods
and
out
je
stc
in
fwait
inc
lret
fnstenv
jne
mov
loop
sbb
in
pop
test
mov
inc
dec
fiaddl
pop
mov
insb
test
imul
mov
inc
cwtl
stc
add
xchg
clc
sarl
in
movsb
push
xor
jnp
hlt
lahf
mov
sbb
clc
and
cmc
mov
mov
xchg
jns
cmpsb
xchg
cli
in
fildl
dec
mov
dec
xchg
or
fs
xchg
lcall
insb
xor
sub
mov
push
fimull
in
cli
rcrb
mov
adc
lea
jmp
in
add
lods
imul
aas
mov
fistpl
loopne
shlb
scas
sbb
scas
in
lods
inc
mov
call
hlt
xor
jnp
inc
jns
pop
mov
and
mov
xchg
sti
fsubrl
and
lret
dec
mov
mov
pop
push
xor
stos
xchg
xchg
dec
sahf
mov
or
mov
jbe
loopne
push
pop
punpckhwd
ss
data16
insb
inc
shlb
orl
jo
add
outsl
pop
or
out
jge
imul
sahf
fidivs
pop
call
sub
lahf
hlt
lock
xlat
dec
push
rcll
orb
xlat
xor
add
call
js
mov
popf
sub
mov
dec
movsl
das
cmpsl
mov
and
es
push
mov
xchg
sub
rol
sub
cmp
pop
lods
and
jp
stc
inc
xchg
sub
xor
retw
cmc
stc
popf
xlat
jno
cmp
cmpl
jo
mov
sub
imul
pushf
aam
pop
and
js
mov
pusha
xor
push
add
ror
repnz
jbe
mov
shll
mov
and
cmp
fs
cs
ret
scas
adc
cmp
adc
frstor
push
fmulp
push
push
dec
mov
xchg
std
lcall
repnz
jmp
jnp
mov
push
cld
push
out
mov
scas
addr16
and
and
mov
adc
mov
hlt
std
les
pop
into
lret
pop
sub
xchg
mov
jmp
mov
mov
data16
add
lret
stc
sub
mov
hlt
sarl
ss
adc
xchg
pop
jnp
mov
mov
pop
add
minps
mov
xor
fisubl
jo
pushf
cwtl
mov
loopne
or
sub
shrl
xchg
aad
or
sub
test
repnz
and
jp
inc
xchg
sbb
gs
xchg
xorb
xchg
movsb
pop
push
xorb
int3
cmp
outsl
inc
das
mov
fsts
add
pop
dec
call
loope
in
cs
mov
mov
inc
or
das
sub
sub
dec
cld
loope
push
lret
inc
push
fsubrl
aaa
or
test
dec
xor
push
rolb
shld
cmpsl
in
pushf
dec
push
cmp
mov
xor
in
aaa
sub
popf
nop
mov
lahf
in
test
push
jmp
jecxz
js
dec
nop
or
js
in
scas
mov
das
dec
xchg
jmp
xchg
add
daa
jl
adc
leave
test
sbb
mov
mov
insl
mov
sub
hlt
inc
mov
fstl
daa
push
and
js
add
mov
fldenv
pop
in
cmp
out
cmp
mov
rorb
mov
xlat
cmp
lret
jmp
icebp
loopne
xchg
test
jge
lahf
and
inc
ret
jl
xor
push
stos
push
xchg
mov
ljmp
pop
jmp
jp
es
jb
cmp
gs
aaa
mov
std
cmpb
or
outsb
popl
dec
xchg
xchg
test
xor
pushf
jnp
mov
mov
call
or
imul
in
pop
loope
cli
and
rol
mov
cmp
gs
js
fst
mov
scas
add
and
in
lcall
ret
push
call
push
outsb
xchg
push
fst
andl
data16
rorl
fimull
dec
pusha
xchg
mov
imul
cmp
add
lock
popf
pop
andl
xor
aad
cltd
cmp
neg
enter
mov
mov
xor
mov
es
icebp
ffree
mov
addb
jns
pop
je
jbe
lods
aas
sub
mov
sub
inc
or
dec
fs
mov
xchg
inc
es
or
pop
fsts
inc
cltd
inc
cmp
dec
ss
clc
inc
in
shlb
jle
mov
arpl
and
out
pop
lret
adc
add
outsl
push
outsb
xchg
dec
adc
inc
push
sahf
jecxz
mov
jmp
mov
lret
ds
fprem
cli
mov
rcrb
nop
push
sub
dec
std
xchg
in
push
sub
jle
inc
push
out
or
dec
and
mov
popf
andb
and
pop
enter
outsb
xor
sub
int
outsl
inc
push
inc
dec
mov
shll
and
sub
jle
lahf
cmpsl
mov
jb
aam
mov
clc
mov
mov
and
pop
xor
shrl
xlat
bound
pop
idivl
push
fdivl
cmp
adc
push
stos
inc
data16
repz
enter
repz
push
ljmp
xchg
in
shlb
cmp
mov
or
shlb
push
sbb
arpl
mov
mov
rcll
push
push
jne
adc
mov
into
pop
dec
lret
insl
push
ljmp
push
pusha
shrb
jge,pt
mov
pop
sahf
movsl
test
mov
dec
add
pop
lret
push
mov
push
out
cltd
pop
mov
repnz
decb
lret
mov
pop
jbe
mov
xchg
pop
fwait
or
in
adc
data16
in
pop
clc
js
push
not
cmp
pop
mov
xor
lock
mov
out
daa
into
dec
outsl
inc
iret
push
dec
mov
test
js
jno
dec
movb
data16
xchg
fistpll
shll
test
stos
ret
cmpb
mov
out
jno
jae
cmp
ret
mov
or
andw
push
push
push
or
adc
mov
sbb
lret
cmpsb
test
or
je,pn
in
push
jae
add
test
cmpsl
je
imul
dec
xchg
loop
rcr
lea
jl
mov
fildl
jle
in
repnz
fisubrl
xor
repnz
cltd
add
push
fisubrl
cmc
dec
lods
repz
dec
test
jnp
ljmp
mov
add
lock
mov
inc
sahf
ja
inc
mov
mov
pushl
punpcklbw
push
sarb
into
clc
cmp
in
imul
daa
mov
insl
xor
sbb
dec
mov
and
sahf
mov
fidivs
cmp
out
push
jl
cmp
pop
out
out
inc
jo
mov
shlb
push
xor
icebp
lods
adc
mov
pop
mov
lock
inc
sbb
fcompl
xor
add
inc
dec
dec
push
mov
adc
mov
lock
and
subb
mov
mov
and
fimull
jb
jne
inc
aam
icebp
lods
je
stc
mov
cmp
jecxz
push
lds
sub
pop
jne
mov
stc
ficompl
sbb
cmp
stc
test
jnp
and
xor
mov
xchg
lods
clc
mov
pop
icebp
inc
jb
int3
dec
sbb
into
ret
dec
cmpsl
sbb
mov
sub
inc
adc
cs
push
mov
inc
add
fsin
jno
loope
pop
mov
loop
nop
mov
add
add
inc
hlt
mov
pop
repnz
mov
mov
xor
test
cmpsb
into
dec
or
iret
xlat
into
ret
xchg
pop
jno
jge
sbb
xchg
jecxz
mov
pop
out
out
adc
or
mov
pop
int
in
shll
rorb
lret
or
ljmp
pop
dec
or
push
out
shlb
fildll
xor
pop
mov
mov
arpl
push
icebp
jp
xchg
cmp
dec
sbb
outsl
pusha
xchg
jl
jmp
stos
mov
aaa
dec
mov
mov
cwtl
lds
imul
lcall
adc
push
mov
or
mov
daa
aaa
fimuls
add
cwtl
adc
cwtl
sub
xor
sub
pop
dec
je
out
data16
icebp
gs
adc
cwtd
xlat
add
icebp
jne
je
sti
repz
xchg
add
and
cld
mov
out
pop
outsb
push
xchg
insb
and
add
cmpsl
mov
stos
aaa
mov
pop
outsl
aaa
xchg
shlb
xchg
sub
dec
mulb
stos
ljmp
ljmp
loope
andl
gs
in
jno
out
mov
xchg
add
xchg
cli
inc
jl
mov
sahf
lahf
mov
dec
das
outsb
adcb
inc
int
dec
pop
dec
pop
imul
xor
jmp
cwtl
xorb
jno
mov
mov
sbb
hlt
sub
dec
xchg
adc
adc
movsb
rorb
sahf
cwtl
ds
imul
repnz
daa
lea
repz
cs
shrb
mov
test
pop
cs
pop
adc
jge
ds
sub
xor
gs
decl
iret
scas
or
xchg
mov
jp
xchg
push
test
imul
inc
push
stos
inc
mov
cmp
xchg
lods
aad
dec
and
pop
mov
xchg
jne
les
xor
inc
dec
repnz
push
pop
cs
fdivrl
sbb
pop
rcll
inc
shl
ret
fimuls
dec
xor
into
or
imul
xchg
dec
jne
xchg
push
icebp
sahf
lods
clc
inc
inc
flds
sbb
mov
mov
sbb
cmp
mov
inc
jg
rcrl
pop
lods
adc
icebp
xor
int
jl
int
or
ljmp
cld
dec
mov
dec
dec
stos
push
scas
into
notl
mov
gs
push
lea
push
inc
cli
imul
xchg
js
pop
mov
int
xor
push
xor
add
cli
and
aam
fisttps
sub
cmpsl
sub
and
push
fdivrl
rolb
loop
or
cltd
xorb
jne
ss
in
shl
jmp
fimuls
add
pop
daa
dec
push
mov
shll
sub
rcrb
sub
jmp
pop
faddl
inc
clc
mov
std
dec
bound
xchg
xchg
inc
pop
lret
mov
jae
sbb
fcom
fisubrl
cli
xchg
add
mov
pop
dec
sub
dec
bound
sub
xor
xor
stc
mov
fidivl
negb
outsb
addr16
jl
xor
mov
enter
and
pop
arpl
and
xor
outsl
lds
es
push
xor
jno
jae
test
lock
pop
data16
cmpsl
outsb
mov
lods
or
push
test
cmpsb
jp
clc
inc
and
xor
jp
aam
pop
aaa
stos
inc
push
jmp
int3
or
inc
mov
fstps
sbb
mov
test
add
ret
inc
inc
cmp
call
into
stos
repz
jbe
fdivs
or
out
adc
je
adc
lock
int
jo
cmp
and
jmp
shlb
push
dec
lods
sbb
outsb
sub
xchg
push
js
cmp
fisttpl
jmp
enter
push
shl
mov
fcomip
mov
jmp
sarl
sub
into
inc
sub
mov
inc
stos
dec
ljmp
pop
cmp
outsb
add
push
scas
hlt
movsl
les
mov
jg
pop
cmp
mov
push
cld
lea
cmp
fmulp
inc
unpcklps
or
loope
push
dec
pop
or
aad
xchg
in
icebp
and
xchg
call
cmc
ljmp
es
mov
daa
or
inc
idiv
mov
sub
sbb
popf
into
push
jnp
mov
fs
pushf
cs
ret
pop
push
push
add
add
add
or
inc
jp
inc
mov
sbb
hlt
adc
push
subl
enter
movsb
xchg
lcall
sub
test
jb
pop
cmp
stos
addr16
std
repnz
nop
xor
and
pushf
mov
je
test
js
dec
pop
fnsave
push
xchg
inc
push
fcoml
adc
inc
push
sub
adc
sub
xchg
test
aas
sub
loopne
xchg
pop
shr
test
xchg
cmc
fidivl
jmp
mov
pop
xor
push
mov
mov
mov
pop
jmp
adc
mov
fmul
push
popf
push
lret
push
mov
lods
pop
imul
mov
pop
or
mov
push
xchg
mov
adc
or
das
shlb
sub
add
xchg
adc
leave
cltd
mov
enter
loope
rcrb
inc
push
sbb
mov
cmpsl
bound
pop
insl
rorl
cmp
mov
cmpxchg
scas
jno
and
add
in
xchg
push
mull
les
cld
jnp
mov
sbb
fsts
and
inc
jns
fucomip
stc
jne
cmp
sub
push
enter
lods
pop
push
data16
mov
sbb
xor
jecxz
cmpsb
nop
mov
sub
xchg
push
push
out
jecxz
addr16
push
push
inc
adc
ds
adc
pop
cmp
jmp
inc
push
lret
loopne
imul
rol
ja
out
in
in
add
sbb
adc
cmp
dec
mov
bnd
btr
lds
mov
stos
lea
push
mov
int
shr
repz
dec
aaa
fstpl
andb
jbe
stos
cmc
insb
call
pop
dec
pop
adc
stc
cltd
arpl
or
cmc
cmp
icebp
xchg
mov
in
jnp
push
fisubrs
loopne
dec
xorl
jnp
xor
js
fbld
ret
cmp
jnp
out
cli
lea
fiaddl
lea
iret
xchg
xchg
fs
jnp
test
mov
push
pop
cmc
inc
or
pop
push
fidivl
push
or
repz
adc
aaa
test
out
rcrl
cld
int3
movzwl
movsb
sub
ja
pop
int
es
adc
jmp
je
add
lock
mov
dec
sub
cli
je
push
je
jecxz
aam
cli
fistpl
jge
jae
inc
mov
dec
jo
mov
icebp
inc
std
sti
imul
cwtd
lcall
jbe
fdivs
cli
mov
inc
sbb
adc
in
cli
push
cltd
movsb
shll
das
xchg
adc
pop
stos
and
mov
jle
js
js
sub
out
xor
adc
dec
mov
inc
mov
fcomps
jbe
sub
leave
out
mov
bound
ret
fwait
push
aad
loopne
jmp
insb
sbb
std
mov
fisttpll
enter
imul
daa
mov
mov
adc
rcr
mov
and
das
int
sarl
hlt
fstl
mov
mov
sub
lret
outsb
ret
and
mov
xchg
lret
xor
pcmpgtw
bound
insb
mov
dec
int
mov
cmp
xor
and
lahf
ret
movsb
cmp
jl
pop
cli
adcl
adc
ret
xor
xchg
fcomps
sahf
stos
mov
dec
out
jl
jg
popl
into
push
fwait
mov
fstp
jmp
clc
sbb
out
dec
test
push
fisttps
mov
sub
imul
sub
fxch
xchg
imul
inc
mov
xchg
cltd
sub
cmp
ds
and
arpl
add
sbb
imul
aad
or
xchg
iret
cmp
push
add
sub
xlat
dec
sub
xchg
mov
mov
iret
icebp
adc
je
cltd
sub
jge
xend
lret
lods
jp
mov
lret
in
mov
push
scas
jmp
mov
shll
xor
adc
push
add
xlat
data16
imul
stos
sar
jp
push
pop
jg
xchg
aas
jae
jno
js
and
lds
cmp
xor
out
pusha
and
and
and
dec
sub
lock
pop
movsb
dec
in
es
iret
cmp
out
dec
adc
or
adc
ss
cli
sbb
repz
pop
cld
xlat
or
mov
push
aam
jo
icebp
insb
xor
xchg
xchg
xchg
pop
ja
jns
das
xorl
lods
stc
arpl
cmc
pop
pusha
repz
inc
cmp
jmp
gs
std
xor
mov
and
xchg
jnp
inc
hlt
inc
jle
test
rcl
dec
xor
or
out
dec
pop
std
inc
jge
mov
sti
ret
adc
mov
cld
hlt
lahf
fwait
xchg
adc
pop
ja
sub
ret
inc
pop
fistpll
ret
enter
and
test
and
adc
insb
cwtl
adc
testb
dec
incb
lds
call
xchg
jmp
aad
mov
mov
std
fistps
xchg
inc
adc
in
xlat
sbb
fsubs
in
movsl
stos
pop
pop
mov
frstor
jle
xchg
or
dec
mov
dec
dec
lret
xchg
cli
test
bound
mov
pop
cli
cmpsl
cltd
pop
lahf
sbb
outsb
push
sbb
jg
adc
enter
inc
push
and
ss
mov
push
fwait
cmp
mov
in
lret
shl
pop
pop
mov
xor
mov
rcrb
mov
popa
lods
jbe
jnp
push
jge
movsl
adcb
fcmovnu
and
les
xor
xchg
push
fmull
sbb
adc
pop
dec
xor
add
jns
or
decl
es
xor
lret
push
xchg
sti
xchg
mov
stos
sbb
add
mov
pop
push
sbb
repz
adc
cmp
stos
and
pushf
loope
jb
cmp
sub
int3
movsl
jg
jne
push
in
pusha
adc
pop
cwtl
stos
sbb
or
xchg
fs
ds
in
les
push
cmp
lcall
js
add
lretw
jbe
pusha
mov
outsb
int3
rcrb
movl
div
out
adc
cltd
cli
lock
adc
icebp
cltd
push
jle
inc
lods
lea
sbbl
lods
in
mov
testl
mov
sarl
arpl
aam
jg
loope
leave
mov
outsl
mov
inc
cmp
push
arpl
xor
aam
mov
sub
in
lods
cmp
ss
xor
mov
xor
pop
lods
sarb
rcrl
stos
cli
adc
and
mov
rcrb
cmp
rclb
xlat
mov
daa
repnz
ds
inc
mov
cmpsl
cmp
loopew
setge
mov
cmc
jle
add
push
pop
flds
fldl
scas
push
pop
sbb
gs
and
mov
nop
cltd
xchg
repz
pop
jnp
cltd
add
stos
or
flds
rcl
cmp
pushl
xor
mov
daa
add
push
lret
adc
sbb
movsb
xchg
and
nop
jge
ljmp
shrl
aad
sub
sub
js
lods
add
hlt
sbb
jns
fs
adc
sbb
cld
dec
filds
dec
in
push
lock
jmp
pusha
arpl
outsl
fs
inc
xchg
jae
in
je
inc
leave
sbb
jns
pop
or
sbb
mov
mov
pop
jo
sbb
scas
aad
leave
mov
sahf
add
test
js
pop
push
pop
push
lock
push
sti
hlt
dec
aad
or
hlt
cmp
dec
stos
sbb
mov
jnp
gs
mov
stos
jge
xchg
sub
roll
movsb
ljmp
jnp
and
das
xchg
nop
ret
or
test
lock
dec
popf
fsubrs
cltd
addr16
adcl
dec
cmp
dec
xchg
scas
loope
movsl
je
lods
push
sarl
or
mov
mov
cmp
or
sbb
addl
and
stos
cmp
xchg
sub
lcall
xor
rol
cmp
movsb
movsb
push
or
push
mov
idivb
mov
test
sub
xchg
aam
push
sub
mov
lret
cmpsl
inc
cli
push
fisttpll
adc
addr16
fmull
or
sub
aam
imul
idivb
sub
xor
pushf
mov
in
mov
scas
and
incl
and
shrl
hlt
xchg
sub
repnz
outsb
adc
adc
push
outsl
or
add
repnz
xchg
loopne
adc
jnp
cmpsb
xchg
jecxz
popf
and
or
stos
sub
adc
repnz
dec
lahf
sbb
repnz
jae
mov
xchg
dec
popf
andl
aas
aad
int
cltd
cmpsl
xor
pop
das
shl
adc
fmuls
push
cli
dec
dec
cli
aas
inc
andl
mov
cmp
dec
sbb
lods
imul
xor
jns
inc
repz
lods
adc
push
mov
dec
ficoms
sti
shll
xor
in
pop
fidivrl
in
je
imul
js
daa
outsb
jg
daa
loope
push
fisubrl
pop
scas
push
js
add
gs
dec
sti
jnp
sti
iret
jle
daa
xor
mov
sub
sbb
sbb
jno
xor
add
mov
dec
xchg
pop
lret
cmp
jecxz
push
cli
cmp
std
scas
bound
cmp
pop
xchg
pop
mov
fsubrs
adc
clc
aad
or
inc
gs
mov
movsl
ficompl
out
cmpsb
andl
lret
mov
jp
in
jmp
cld
jno
pop
inc
cmp
xor
sahf
cwtl
push
in
inc
lods
aaa
and
out
test
lahf
adc
cmc
or
cmpl
sbb
js
test
popa
clc
leave
dec
test
fbld
sbb
je
xor
lock
cli
insl
push
mov
sub
pop
popa
je
mov
adc
popf
sbb
pushl
jbe
rcrb
stos
outsl
jo
sbb
fucom
enter
xor
pop
mov
data16
sub
inc
nop
and
or
fcoms
mov
jnp
mov
sub
push
or
insl
adc
loop
orl
shrb
mov
in
cmp
dec
push
enter
out
jo
fmuls
adc
push
test
dec
ror
arpl
rcrb
or
addb
repnz
jo
sarb
dec
sub
jp
js
rcrb
push
repnz
push
leave
btc
xchg
scas
std
cmp
or
divb
out
dec
mov
adc
call
jl
xlat
les
enter
jno
insl
jp
mov
mov
cmpsb
imul
cltd
pop
std
push
and
push
sti
stos
sub
push
pop
adc
mov
add
addr16
sub
cmp
inc
lea
pusha
jp
xor
mov
inc
hlt
jbe
sbb
xchg
xor
ljmp
jmp
pop
xchg
enter
or
insb
sarb
push
les
inc
inc
imul
sarl
xchg
arpl
mov
aas
jno
cmpsl
sbb
xor
sbb
test
adc
aam
sbb
add
scas
daa
dec
lret
mov
dec
xchg
xchg
xchg
add
dec
xor
iret
or
nop
pop
aas
dec
jno
fs
cmp
lods
push
cmc
ret
shll
in
loop
jmp
or
test
and
cmp
add
xchg
mov
mov
imul
pop
gs
test
mov
stc
pop
mov
ljmp
and
popa
cmp
nop
cmpsb
xchg
aas
notb
mov
xor
cli
rorl
test
outsb
pop
cmpsb
aad
xchg
jmp
push
les
lock
mov
sbb
add
mov
sub
pop
cmpsb
dec
and
sbb
stos
ds
jg
add
es
out
mov
outsb
pop
pop
jns
push
cmp
cli
adc
push
cli
aad
sub
popf
daa
and
lds
sbb
mov
ljmp
dec
push
xchg
icebp
mov
cmp
icebp
sbb
dec
lds
std
clc
mov
andl
mov
adc
mov
shr
loopne
mov
lea
in
movsb
insb
faddl
add
pop
cmpsb
mov
cli
mov
add
cmp
fidivs
inc
bound
mov
fldcw
imul
lods
dec
cmp
cmp
pop
lret
push
or
pop
mov
imul
fcmovne
fdivl
insb
mov
xchg
pop
icebp
lds
add
xchg
push
xlat
adc
lods
xchg
cwtl
pop
cmp
addr16
jg
mov
cmpsl
add
dec
dec
xor
dec
push
stc
push
cltd
mov
or
fbstp
cltd
push
testl
test
add
iret
xchg
xor
sub
cmp
sub
int3
pop
lea
xchg
mov
pop
cld
mov
cmc
xorb
pop
cmp
dec
dec
cmp
dec
inc
jp
inc
scas
pop
ret
cmp
int
insb
fwait
cli
xor
or
sbb
fwait
lock
cmova
scas
mov
fsubs
jae
mov
cmp
mov
imul
scas
and
mov
xorps
lods
fists
adc
push
push
aam
inc
dec
testl
test
inc
add
in
jmp
les
rcll
pop
outsl
xor
mov
out
mov
pop
gs
lds
repz
xchg
aaa
dec
xchg
aad
lods
mov
jo
push
insl
or
inc
outsb
xor
inc
shrb
sub
push
lahf
stos
hlt
jecxz
dec
mov
jp
nop
xchg
cmp
mov
and
lret
in
sbb
lds
adc
popf
lret
testl
or
movsb
dec
mov
gs
or
jmp
cmp
jp
sti
xlat
mov
sub
rcrb
jmp
stos
lock
push
pop
sub
cmpsl
xchg
inc
xchg
and
repnz
stos
mov
inc
push
mov
fisttpl
negb
ss
test
dec
push
mov
ja
cs
sti
in
adc
inc
rcr
daa
loope
f2xm1
push
xchg
xchg
imul
int
inc
sti
push
ficomps
pop
call
dec
pushf
inc
daa
sahf
push
fiadds
mov
and
jmp
loope
lods
xor
xchg
mov
xor
fistl
movsl
gs
xchg
nop
fisttps
lods
push
mov
cmp
mov
adc
es
pop
jns
jge
jle
aad
sbb
sbb
dec
mov
mov
jle
inc
mov
bound
or
pop
ficoml
xchg
and
jl
mov
pop
cmp
daa
adc
nop
mov
xlat
mov
outsl
shrl
adc
cmp
pop
add
aam
lahf
insb
mov
add
adc
jne
mov
push
sbb
inc
sub
pop
daa
hlt
inc
sub
loop
cltd
pop
loope,pt
cmp
sti
dec
cmp
ret
es
mov
in
icebp
into
adc
pop
add
pop
push
loop
cmpsl
sbb
add
push
lret
clc
int3
imul
adc
push
push
mov
xchg
sub
push
insb
das
scas
jne
and
ja
add
pop
in
in
loope
out
shll
das
test
enter
clc
test
mov
std
jae
gs
pop
adc
cmp
and
cmp
cld
iret
icebp
jmp
jne
xlat
push
sub
imul
clc
sbbb
sarb
sbb
mov
sub
aas
out
movsb
push
rolb
aad
add
mov
xchg
andl
fcmovu
xchg
xchg
push
xor
lret
cli
fisubrl
mov
jp
addr16
inc
fidivl
and
add
xchg
push
aam
lds
or
andl
ret
jb
mov
cmp
mov
aas
mov
xor
stos
dec
dec
inc
jp
popf
test
hlt
fsubs
xlat
imulb
pop
adc
lret
shlb
aad
mov
sbb
xchg
cmp
test
and
in
xor
adc
xchg
push
fs
sub
mov
push
xchg
iret
testb
popf
pop
dec
jmp
pop
imul
jo
add
cmc
jp
mov
or
or
call
mov
iret
mov
cmp
popl
mov
cmc
and
or
adc
inc
push
fsubl
sbb
iret
loop
sbb
sub
int
subb
fdivr
mull
sarb
push
push
in
in
vshufps
arpl
in
out
and
das
sub
add
shlb
incb
push
rclb
push
ja
repz
in
cli
xor
or
sbb
inc
addr16
outsl
lds
mov
cli
mov
aas
adc
add
loopne
test
xlat
jecxz
ja
inc
adc
jbe
lods
cmp
pop
out
pop
inc
jmp
cmp
xchg
call
jmp
cmp
out
nop
jno
int
in
loopne
add
push
idiv
and
add
push
mov
xor
into
shll
repz
enter
popf
xchg
mov
push
xor
mov
ss
mov
add
add
push
adc
mov
push
icebp
mov
es
adc
cs
jno
or
icebp
hlt
mov
mov
pop
sbb
mov
cmp
out
mov
jbe
popa
leave
sub
mov
push
xlat
xor
test
into
xor
push
lock
xor
mov
cmp
nop
cmp
adc
sub
test
push
enter
and
and
push
pop
push
out
lret
and
xor
mov
lret
or
or
add
mov
jp
cmc
repz
movsb
aad
sub
cmpsb
pop
outsb
ljmp
fbstp
xor
pop
enter
pop
pop
mov
mov
xor
push
leave
cmc
ficoml
stos
mov
popf
adc
push
and
loop
mov
movsb
ret
fcom
xor
mov
cltd
mov
stc
adc
push
add
clc
insl
std
pop
in
outsl
fcmovbe
jmp
andl
push
xor
arpl
sub
loopne
cmp
repz
pop
test
mov
loopne
and
mov
adc
adc
mov
ret
sub
imul
test
int
xor
enter
int
out
add
shr
push
pop
adc
ss
subb
cmp
repnz
mov
add
orl
add
push
and
or
or
fwait
add
and
mov
scas
push
ret
in
sub
pop
nop
aaa
pop
movsl
inc
lret
jge
mov
int
into
pop
pop
mov
mov
lods
mov
sub
pop
sub
xchg
es
ss
adc
mov
insb
outsl
jge
mov
mov
pop
xchg
test
out
outsb
xor
xor
push
mov
popa
hlt
mov
mov
cwtl
inc
xor
dec
adc
or
mov
xor
hlt
pop
mov
or
lock
insb
inc
push
or
scas
stos
push
pop
lret
xchg
repz
and
jno
cli
pop
popa
jnp
outsb
mov
cmp
xchg
or
inc
mov
in
xchg
jno
addr16
test
mov
jmp
inc
inc
mov
mov
pop
push
arpl
loopne
push
mov
inc
imul
xor
mov
loop
pop
pop
lods
ret
and
and
insl
mov
cmp
pop
pop
push
clc
sub
jg
loopne
add
fidivl
adc
popa
stc
sbb
jg
ja
xor
pop
gs
insl
aad
andl
xchg
mov
loopne
adc
fisubrs
addr16
and
mov
adc
or
mov
mov
mov
lcall
xor
xor
leave
or
jl
sub
add
jno
xchg
mov
aas
push
lods
cmpsl
xchg
add
insl
pop
out
icebp
decb
fildl
inc
movsb
mov
loopne
pushf
inc
mov
jecxz
mov
dec
mov
mov
xorb
mov
movsb
adc
es
lea
dec
xchg
cmp
stos
jns
and
in
push
rclb
test
addr16
jmp
adc
out
mov
test
out
push
and
cmpsl
jg
sbb
push
cmp
inc
mov
dec
mov
jmp
out
jbe
sub
js
pop
je
loope
pop
daa
sub
into
mov
icebp
es
test
pop
sub
popf
jne
sbb
loop
outsb
clc
mov
fildl
clc
aad
or
js
mov
mov
push
aam
inc
and
or
push
mov
stos
cs
outsb
shll
shll
testl
lahf
ret
push
lods
lret
scas
fbld
mov
stc
rcl
sub
sbb
and
mov
mov
lahf
cmp
sub
loopne
adc
test
into
cs
cltd
adc
or
lcall
aam
sar
add
ret
mov
inc
pop
and
jo
cmp
jb
dec
out
pop
mov
or
clc
scas
push
shrb
call
int
or
ja
lcall
bound
xchg
inc
pop
sbb
or
int
jge
dec
push
adc
dec
dec
sub
stos
sub
sbb
xor
add
shr
imul
ss
mov
pop
idivb
shll
iret
sub
outsb
cwtl
jle
xchg
xchg
imul
dec
push
mov
insb
and
ror
cmp
mov
cltd
adc
test
cmp
xor
mov
pushf
dec
gs
and
xor
push
inc
pop
and
scas
fnstenv
cmp
int
in
inc
repnz
lea
cmp
inc
loope
pop
pop
cmp
repnz
std
push
addr16
cmc
stos
pushf
lret
out
mov
add
ffreep
cmpsb
popa
cmp
lods
mov
outsl
xchg
lea
sub
adc
popf
cmp
hlt
push
sahf
jnp
inc
and
inc
push
pop
push
lods
popf
ja
std
popa
cli
outsl
rcl
mov
jmp
sub
add
jge
jp
cmc
stos
ss
aam
orb
jle
cmc
mov
ljmp
bnd
pop
into
and
mov
mov
jno
push
xchg
loope
arpl
jae
enter
daa
add
mov
mov
xchg
mov
add
adc
jo
and
test
cmp
push
fldl
or
sbbl
push
jo
int3
push
rcll
pop
sbb
push
stos
mov
inc
sbb
icebp
sbb
jno
cltd
cld
arpl
add
push
dec
rcrb
ss
test
mov
xchg
in
rol
jo
cmp
xor
xchg
inc
and
test
std
pop
loop
out
rol
aad
dec
lods
sub
mov
loope
sarl
jg
jnp
xor
ds
xchg
cli
pop
pop
mov
movsb
bnd
popa
pop
and
mov
stos
jno
adc
scas
adc
aas
adc
jp
cs
fnsave
sub
mov
cs
nop
dec
out
arpl
lods
lcall
xchg
xor
sub
int3
pop
inc
mov
insb
push
xchg
loop
out
adc
mov
pop
inc
push
or
ja
outsl
aam
mov
add
jo
jb
movsb
dec
push
insb
jmp
hlt
fdivs
push
cmp
add
or
call
jp
aam
test
std
dec
push
push
pop
xchg
stos
icebp
push
daa
cmpsl
mov
jle
insb
xchg
pop
movsb
xorb
xor
jno
mov
jg
pop
js
repz
pushf
mov
xchg
dec
mov
and
fdivr
ret
pop
jne
lahf
lods
dec
cmpb
enter
out
test
adc
stc
sub
cmc
fimuls
and
sbbb
addl
imull
sarl
push
xor
sub
sarb
ret
scas
cmpsb
jbe
inc
inc
out
std
stc
int3
jbe
inc
ret
outsl
cltd
jmp
jl
popa
stos
mov
jl
aam
mov
je
push
cmp
adc
add
fcompl
and
sbb
adc
add
mov
jmp
cmp
scas
lret
push
cli
test
add
inc
ficompl
mov
lock
sbb
aad
xchg
xor
aaa
enter
imul
bound
add
adc
inc
cmp
xor
pop
dec
int3
lahf
testl
and
jmp
sti
and
adcb
dec
aad
shr
mov
cs
scas
sub
mov
push
sbb
fstpt
mov
imul
jno
test
xchg
cmp
scas
mov
sahf
add
std
xchg
or
addr16
dec
js
xchg
push
sbb
out
xchg
in
cwtl
mov
rcll
cli
mov
fldt
xor
out
lds
hlt
aas
rolb
mov
pop
cwtl
sbbl
movsb
xor
adcb
daa
clc
dec
sub
sub
xor
movsl
pop
lock
mov
sub
and
cmp
jnp
push
inc
mov
and
ds
out
ds
jle
dec
shll
mov
pop
in
dec
insb
das
xchg
cmc
mov
and
add
inc
test
push
inc
js
inc
hlt
mov
dec
push
mov
sub
push
cld
push
pop
addb
inc
std
fwait
daa
cs
sub
inc
negb
mov
cmpsl
inc
mov
leave
popf
xchg
dec
mov
push
dec
xchg
jmp
mov
jae
popa
mov
cmc
sbb
enter
or
int
dec
outsl
xor
xchg
mov
xor
outsl
shrb
lret
fistps
sbb
call
jo
andb
cli
and
lea
xchg
pop
mov
in
xor
dec
les
imul
xchg
cli
hlt
mov
mov
stos
stos
sbb
adc
gs
addb
mov
mov
dec
test
or
ret
leave
icebp
dec
xchg
mov
sbb
bound
hlt
stos
dec
pop
sahf
add
xchg
cltd
fcom
pop
jl
xor
pusha
pop
jns
add
rolb
aas
rcr
pop
lods
sbb
mov
cli
scas
outsl
dec
cmp
test
xor
in
jg
adc
stos
es
mov
and
push
push
jnp
push
lret
pop
push
push
popa
add
bound
fcmovnbe
xchg
mov
push
mov
cmp
xchg
fstpt
test
clc
movsb
pop
dec
cmp
push
push
mov
test
xor
call
js
add
ret
xorl
gs
fcmove
loope
push
dec
pop
add
mov
adc
imul
fsubl
add
popf
cli
jmp
xor
cmp
mov
sti
add
xchg
es
cmova
incb
and
aaa
aad
xchg
dec
xchg
xor
iret
mov
or
hlt
cmp
xor
dec
push
mov
mov
push
sbb
pop
insl
cwtl
into
mov
mov
mov
xchg
shrb
int
lret
leave
ret
fwait
adc
loopne
negl
cld
or
lahf
and
cmc
xchg
pop
pop
testl
xchg
jns
outsb
cld
cmp
pusha
xchg
sarl
pop
stos
lods
and
out
lret
or
pop
add
aad
test
fistpll
dec
test
lret
movsl
out
xchg
xchg
or
lods
adc
out
mov
clc
divb
jecxz
pop
cmp
out
test
pop
jbe
jnp
mov
jmp
xchg
sbb
sub
xchg
inc
jno
push
mov
push
dec
das
and
sub
dec
jmp
mov
in
sbb
lret
es
adc
in
push
test
push
dec
lea
ja
lret
pshufw
jbe
mov
adc
mov
jb
leave
mov
dec
lock
xchg
inc
add
pushf
pop
out
or
clc
pop
mov
fxch
push
xorb
jecxz
dec
xchg
push
mov
mov
push
dec
das
sbb
clc
cmpl
rcl
arpl
jp
popf
cmp
into
cmp
popf
iret
mov
push
cmp
and
xchg
jns
mov
cmpsl
sub
push
loop
nop
adc
aas
out
cmc
mov
sub
or
ljmp
jge
dec
push
fcmovnu
test
mov
xlat
sbb
mov
and
dec
pop
mov
fdivs
jecxz
lcall
fsubr
xchg
dec
jecxz
mov
in
movsl
iret
dec
shr
push
sub
mov
mov
push
pop
subb
jecxz
mov
arpl
sub
mov
push
jnp
inc
dec
fwait
xor
leave
adc
mov
bound
aam
jp
aam
push
aaa
mov
sbbb
mov
sbb
sbb
mov
pushl
and
out
dec
cmpsb
repnz
mov
xchg
addr16
mov
sub
sbb
xchg
adcl
cltd
or
sbb
in
cmp
and
mov
xchg
sbb
lea
lods
subb
push
inc
cmp
loope
cwtl
nop
sub
mov
paddusb
add
pop
push
popa
xchg
pop
sub
inc
mov
or
fsubl
jbe
das
fnsave
or
clc
fucomi
pop
cmp
subl
sbb
stc
and
shll
push
psrlw
push
or
pop
sbb
das
cwtl
jmp
or
mov
ljmp
or
mov
sub
mov
ljmp
sbb
mov
imulb
idivb
push
lock
test
adc
mov
fcoms
xor
ret
mov
lret
xchg
mov
mov
jne
or
leave
add
mov
sub
shr
sub
popa
or
adc
loopne
xor
push
add
loop
push
movsl
xor
inc
cmp
shll
in
cs
lret
dec
xor
adc
aas
and
daa
das
xchg
repnz
and
push
arpl
jecxz
sbb
mov
es
sbb
lret
insl
and
jns
mov
dec
adc
sbb
movsl
aam
movsb
loope
ret
icebp
and
mov
inc
stc
imul
push
pop
repnz
xchg
add
jns,pn
cmp
jge
push
xchg
addr16
test
lea
cltd
push
jnp
sub
insl
sbb
xchg
sti
pop
scas
jmp
push
sbb
sbbb
fdivs
pop
arpl
mov
in
iret
pushf
mov
sti
sub
das
int3
sarb
arpl
std
pop
add
shll
mov
jnp
xor
mov
sub
aas
psubw
loope
xchg
fistpl
add
int
and
cmpsl
jb
sub
mov
mov
xor
rorl
inc
pop
sub
jo
pushl
jo
mov
xchg
insb
je
test
dec
pop
push
aam
sbb
sti
imul
out
mov
xchg
lock
stc
or
pop
jb
jp
add
cwtl
loopne
pop
xorl
stos
subl
lock
sbb
pusha
jbe
sbb
mov
repz
stos
mov
in
add
daa
andl
test
push
xchg
push
push
dec
cld
mov
jle
test
pop
pop
ret
scas
mov
lret
pop
lahf
jle
stos
jp
inc
xchg
mov
es
pcmpeqb
cmp
adc
stos
mov
loopne
imul
test
fwait
nop
cmp
je
in
cmp
insl
incl
add
mov
movsl
and
lret
out
mov
les
mov
pop
sub
daa
cmp
in
xchg
cs
mov
xor
jns
push
pop
adc
jae
mov
mov
daa
mov
mov
mov
imul
out
mov
cmp
dec
ret
ljmp
sbb
clc
test
adc
int
aad
sub
call
mov
jge
pop
cld
mov
lcall
pop
or
add
stc
mov
ds
popf
mov
sub
mov
push
repz
sbb
or
mov
sub
pop
inc
fxch
xor
push
popa
lock
mov
sub
pop
data16
xchg
cmpsl
jo
aam
xor
push
xchg
push
fwait
inc
adc
rcr
or
xor
sbb
scas
cmp
sbb
jmp
jmp
xor
add
sub
mov
loope
leave
lahf
inc
jmp
mov
addr16
mov
cli
or
xor
sbb
sub
and
aaa
addl
cmp
sub
adc
mov
neg
aaa
ljmp
adc
daa
fisubrl
adc
pop
dec
fisubrl
mov
lods
gs
sbb
bound
sub
xlat
cmpl
sub
in
repnz
sbb
imul
cmp
mov
ret
or
in
decl
push
call
scas
add
jl
fsubrs
dec
and
inc
fwait
pushf
stos
mov
lea
jge
jmp
mov
jb
jb
shlb
push
imul
rol
cmpsl
hlt
push
pop
xchg
outsb
push
adc
fnstsw
xor
xchg
dec
hlt
cltd
dec
push
add
repnz
dec
stc
loopne
test
push
sbb
jnp
adc
push
adc
mov
dec
mov
mov
xor
outsl
mov
iret
mov
mov
popa
jmp
cmp
mov
add
out
add
push
cmp
sbb
jns
andb
out
negl
loop
adc
insl
mov
insb
or
out
daa
and
cltd
mov
shrl
inc
fildl
call
out
movsl
pop
das
jecxz
dec
adc
fidivrl
fnstenv
inc
fstl
jno
adc
cmp
les
fisubs
insb
dec
ja
mov
test
sub
js
fidivl
xor
jmp
add
inc
aam
sbb
jg
pop
bound
loopne
cld
stc
movsb
push
aad
inc
add
mov
xlat
fcmovnu
jb
addr16
test
icebp
leave
sub
fcmovnu
jecxz
sub
pop
push
cmp
push
aaa
mov
xor
inc
or
sub
cld
push
cltd
cs
and
add
jmp
dec
clc
repnz
add
sub
roll
mov
fidivs
clc
xor
gs
pop
or
mov
sbb
in
js
jmp
mov
sbb
fildll
test
popf
stos
jae
insb
cmp
cmp
push
sar
sarl
cmpl
roll
sahf
xor
pop
sbb
push
int3
add
pop
adc
mov
jno
xchg
and
adc
xor
push
clc
xchg
or
stos
add
xchg
lods
test
cwtl
mov
mov
dec
cwtl
push
stc
cmp
adc
hlt
xchg
int
or
xchg
inc
out
xor
jle
call
ret
mov
inc
jp
mov
cmp
cmpsl
cli
cltd
scas
cli
mov
sub
imul
or
enter
dec
sbb
cld
rcr
pop
lods
push
xor
call
add
fstps
pop
dec
imul
inc
repz
inc
orb
pop
or
sbb
int
push
leave
adc
and
push
jl
andb
and
add
std
insl
xor
bound
cltd
and
fcompl
dec
jmp
arpl
fimuls
mulb
push
inc
popf
and
mov
stos
push
adc
cmp
sbb
jl
pop
jno
cli
adcb
pop
pop
dec
sbb
xor
inc
fidivl
jne
sub
scas
test
addr16
xchg
addb
icebp
lods
arpl
mov
gs
repz
add
arpl
push
mov
inc
add
test
dec
xor
xchg
sti
mov
sbb
pusha
clc
mov
leave
adc
xlat
adc
adc
popf
sub
pop
aad
test
dec
call
popa
data16
or
push
add
push
push
add
adc
fcmove
test
add
std
int
mov
sbb
push
das
pushf
adc
sbb
les
inc
test
out
test
dec
movsb
data16
or
mov
pop
jl
pop
xorb
imul
lea
xlat
pushf
adc
push
test
jmp
pusha
fidivrs
xchg
ss
mov
hlt
xor
mov
das
jnp
sub
mov
ror
ret
testb
repnz
mov
cmp
clc
push
pop
and
sarl
lock
push
std
movsb
mov
inc
push
test
outsl
ds
cld
dec
fldt
mov
cmp
repnz
jnp
js
sub
test
jns
filds
popa
dec
out
push
push
xor
jo
shlb
cld
outsl
js
lret
enter
imul
leave
scas
incb
adc
sbb
popa
fsubrp
ljmp
cmp
cmovb
les
ljmp
enter
mov
out
add
fwait
jns
je
loope
insl
mov
jg
sbb
setb
test
xchg
repnz
fnclex
cld
rorl
jp
rcr
stos
cmp
adc
lcall
add
in
in
adc
ds
jbe
dec
push
lret
lea
sbb
pop
sbb
stc
xchg
lds
mov
push
push
mov
lahf
shl
pop
fwait
inc
int3
xchg
pusha
and
rorb
inc
pushf
out
gs
mov
fbstp
pusha
cld
sbb
std
push
dec
or
outsb
jecxz
je
les
test
sub
jge
mov
in
pop
lods
ds
pop
int
pushf
cwtl
push
push
mov
mov
sti
sbb
mov
or
bswap
xchg
clc
sbb
add
enter
mov
shrb
sub
mov
dec
push
fwait
xor
pop
sti
loopne
pop
inc
out
cltd
popf
pop
add
inc
stos
lret
les
mov
add
sti
mov
shlb
push
fwait
in
add
push
xchg
mov
mov
fistps
ficoms
push
insl
pop
rorb
mov
adc
clc
sbb
dec
mov
xor
inc
cmpsb
mov
lcall
xor
add
dec
in
mov
mov
xchg
xor
ds
or
xor
cld
sahf
rcrb
jb
sub
push
inc
push
clc
stc
popa
pop
jnp
xlat
xor
inc
pushf
ds
shr
mov
sbb
add
mov
and
or
popa
addr16
mov
mov
mov
jge
lods
mov
inc
adc
pop
imul
sub
imul
push
mov
in
dec
test
cmpsl
lcall
add
popf
xchg
inc
add
cli
data16
arpl
push
pop
sbb
fdivl
add
jnp
mov
mov
gs
out
sbb
xor
popf
pop
jae
int3
outsb
and
insl
dec
xchg
movsl
mov
ja
repz
imul
shlb
mov
shll
xchg
pop
mov
jmp
jbe
js
jmp
mov
or
test
test
mov
mov
data16
mov
pop
sub
inc
push
jnp
dec
nop
pop
mov
call
adc
push
push
or
add
test
pop
cmc
scas
mov
sub
and
iret
daa
mov
inc
dec
and
mov
mov
inc
pusha
mov
mov
cld
shl
push
sub
sbb
iret
aas
loope
push
xorb
add
aaa
in
mov
test
mov
pop
sbb
cmp
pop
les
movsl
scas
add
adc
fs
xchg
das
sahf
lahf
test
out
shrl
mov
es
mov
js
sbb
sahf
mov
inc
xchg
insb
xor
and
aaa
ds
cmp
pop
in
push
push
std
cli
inc
fidivrl
lock
cmc
xchg
jp
outsl
mov
jge
aas
movsb
xlat
or
shll
jg
sbb
push
inc
add
pop
nop
and
cli
jo
pop
xchg
push
ja
or
dec
int
mov
lahf
das
fdivrl
mov
inc
cmpsl
xor
bound
pop
andb
sbb
jb
hlt
inc
mov
or
push
inc
and
int
xchg
mov
sbb
jp
insb
aad
xchg
inc
inc
lahf
jg
das
je
orb
inc
mov
rclb
pop
pop
adcl
movb
lea
jne
push
data16
movsl
repz
ja
in
out
push
rcll
mov
inc
sbb
ss
call
pop
ret
add
fadds
or
wbinvd
ffreep
idivb
mov
push
pop
pop
mov
in
cmp
mov
jne
push
adc
pusha
mov
and
cs
ss
test
ja
nop
sub
cld
mov
xchg
mov
mov
fdivr
int
sub
mov
pop
nop
adc
mov
pop
jecxz
int3
pusha
in
xor
cmp
decb
out
mov
inc
mov
cld
push
push
inc
dec
lahf
fisubs
add
pop
adc
mov
test
cmp
xchg
or
enter
ds
dec
jo
pop
insl
lods
mov
mov
add
adc
xchg
andl
lea
xor
fwait
adc
shr
inc
push
movsb
ds
fcomps
lock
insb
dec
loopne
ss
xchg
xor
push
xor
dec
pop
lahf
pushf
and
lea
test
leave
xchg
sbb
mov
inc
std
fwait
arpl
fildll
jecxz
mov
lahf
or
cs
dec
aad
add
int
clc
test
imul
mov
insb
push
and
in
mov
adc
inc
ffreep
nop
cli
iret
cwtl
aad
cmp
jmp
cs
lods
jno
sub
sub
lret
loop
jmp
cli
adc
xchg
fs
pop
mov
ljmp
mov
sbb
dec
loopne
mov
push
jae
sbb
nop
imul
mov
aad
cmp
test
cmpsl
inc
pop
daa
mov
loope
std
xchg
mov
add
hlt
push
cli
add
movsl
fcomps
mov
adc
in
dec
mov
test
adc
stc
jp
mov
rorb
and
lods
add
clc
jns
aad
jmp
or
adc
cmp
adc
iret
fcomp
and
sbb
jg
jne
lods
fldenv
and
adc
and
or
pushl
sub
jo
sbb
arpl
and
fdivrl
frstor
mov
mov
loop
cmc
jmp
cltd
out
pop
andl
out
sbb
xchg
test
add
mov
mov
mov
test
roll
push
inc
add
clc
add
xchg
das
das
xchg
jb
mov
out
pop
test
inc
aam
or
jecxz
mov
pop
data16
in
xchg
jl
adc
test
dec
inc
cmp
sub
inc
add
or
in
roll
xchg
pushf
jmp
idivb
dec
mov
aaa
push
fwait
pop
or
lock
push
fst
push
sbb
inc
dec
in
fcompl
cmp
sbb
push
outsl
sahf
jmp
fs
adc
mov
sub
mov
loop
or
shrl
mov
pop
lods
mov
test
adc
scas
mov
je
ja
jbe
mov
xchg
scas
mov
fwait
inc
test
cmp
pop
outsb
out
push
cs
jo
add
or
jmp
jmp
dec
inc
movsl
loopne
inc
decb
sub
flds
sbb
cmc
and
inc
sbb
or
or
pop
inc
adc
xor
aad
out
mov
dec
mov
or
mov
out
lock
dec
push
arpl
jp
insl
push
and
es
lret
pop
fidivrs
mov
jbe
das
add
js
and
pop
xchg
adc
pop
push
jne
inc
test
or
popf
push
and
ret
sub
add
jno
es
unpcklps
nop
or
ficomps
jo
popf
cli
push
mov
xchg
mov
insl
loop
and
addr16
inc
insb
sbb
inc
pop
fadds
xor
stc
cmp
adc
jle
mov
pop
dec
popf
daa
popa
mov
xchg
jecxz
rcrb
pop
daa
lret
fadds
and
fisttps
pop
mov
mov
jmp
adc
cmp
sub
push
mov
test
mov
fmull
add
lahf
movl
and
push
inc
jo
shr
pop
xchg
jne
cld
mov
nop
ja
orl
mov
fdivrl
cli
int3
push
sub
sbb
mull
out
or
fiadds
mov
and
xchg
pop
sbb
sub
cmp
mov
jbe
inc
push
mov
xchg
stos
into
fsub
popf
shll
repnz
cmp
push
cmpsb
push
imul
sbb
mov
fildll
pop
ret
push
out
or
into
je
adc
scas
sub
aaa
jecxz
add
lock
fsubrl
nop
repz
mov
jne
mov
cmp
test
cld
mov
inc
rorl
hlt
pusha
adc
add
push
gs
mov
imul
mov
cmp
fisttps
out
xlat
aas
push
test
outsl
hlt
and
lods
jge
ret
popf
std
and
mov
pop
stc
repnz
mov
test
mov
jmp
mov
push
ss
fistpl
dec
mov
je
lcall
je
xchg
mov
and
or
and
dec
xchg
adc
rorl
pop
sub
les
lret
loopne
dec
inc
and
pop
push
cwtl
fidivrl
add
xor
sub
and
push
or
je
jnp
cmpsl
std
push
loope
in
lods
dec
icebp
test
add
shlb
aam
bound
pop
mov
lock
push
js
add
or
cmp
lahf
adc
xor
xchg
lret
jmp
out
mov
mov
stos
popa
daa
sarl
insb
mov
sbb
mov
xlat
nop
popa
pushf
lds
xchg
cltd
adc
pusha
xchg
aad
loopne
stos
jae
xor
jg
and
scas
adc
pop
ret
adc
xchg
inc
subb
and
xchg
mov
dec
inc
mov
and
sbb
aam
hlt
rclb
fbld
nop
mov
ret
shlb
add
insb
push
mov
movsl
in
xchg
clc
out
sbb
push
adc
cwtl
sbb
cld
pop
pop
testl
inc
test
test
and
pushf
movsl
jne
test
les
in
aaa
insl
cmp
gs
mov
cs
loope
cli
pop
push
fldcw
jge
pop
inc
scas
popa
sarb
pop
pop
lret
or
scas
mov
push
xor
or
pop
lock
cs
sbb
xor
mov
stos
cmp
sbb
sub
dec
sub
jbe
js
pushf
sbb
orl
in
mov
cmp
add
test
pop
rorb
stos
or
sarb
push
ficoml
and
cmp
sub
sub
xchg
add
fs
scas
js
or
jmp
mov
in
addr16
mov
mov
lea
xchg
loope
icebp
aad
jl
arpl
xor
pop
test
cmp
push
idiv
mov
enter
xchg
cmp
xor
cmp
xor
mov
shr
and
push
test
xor
mov
xor
push
repnz
push
or
add
fnsave
pop
sbb
pushf
cli
push
in
ficoml
std
sbb
testl
stos
jmp
lahf
push
xor
out
mov
imul
addr16
jmp
push
fs
out
sub
sbb
or
lods
in
ljmp
sbb
addl
into
lret
rol
inc
iret
lahf
test
mov
and
xchg
jbe
sbb
iret
enter
add
sahf
fisubrl
jge
sbb
mov
arpl
shlb
mov
fistps
js
dec
das
insb
dec
pop
ss
lods
or
scas
into
cmpsb
out
pop
repz
mov
clc
sub
jle
pop
jnp
movsb
aad
test
add
mov
mov
cwtl
xchg
jl
icebp
xchg
aam
arpl
fmuls
aas
insl
pop
stos
test
test
xorb
in
mov
jo
test
mov
mov
iret
scas
lret
outsb
mov
mov
pop
xchg
insb
popl
sub
jmp
fadd
dec
pop
inc
sbb
xor
ljmp
sub
and
test
jns
sub
sbb
mov
xchg
hlt
add
cld
cmpsb
mov
add
adc
fstpt
mov
movsb
ja
test
and
xchg
loopne
adc
add
nop
mov
lahf
jnp
in
ljmp
in
jp
push
dec
insl
jg
sbb
mov
and
xorw
sbb
inc
pop
mov
inc
scas
mov
mov
or
lods
test
punpckldq
gs
or
rep
andb
mov
pop
aaa
sbb
imul
fdiv
jnp
addr16
loop
xchg
dec
leave
loopne
das
mov
sbb
pusha
or
fildll
call
jl
data16
pop
fdivrl
jg
xchg
shrb
adc
sub
stc
hlt
les
push
ret
adc
push
xor
adcl
jo
jb
ret
jae
push
loopne
testl
data16
cmp
mov
out
mov
int3
sbb
test
push
negl
int3
movsl
jno
xchg
dec
sahf
push
nop
dec
out
std
ljmp
testb
and
cmp
in
lods
xor
xchg
or
aad
or
fdecstp
subl
sub
fnsave
adc
sub
xor
cwtl
mov
roll
xchg
ds
xchg
adc
leave
sbb
push
xchg
pop
xor
jge
int
fst
jbe
pushf
add
xchg
pop
xchg
dec
xchg
lret
cltd
ja
test
aas
nop
mov
fxch
cltd
icebp
shrl
xlat
jae
lock
in
xchg
pusha
out
and
adc
xor
into
mov
or
fildl
pop
and
or
and
popf
cmc
xchg
pushf
push
xchg
fstps
in
fwait
jl
pop
cmp
daa
mov
jecxz
xchg
push
es
int3
enter
jle
lods
inc
fxch
push
push
rolb
cltd
test
test
ficomps
sbb
or
adc
out
aam
dec
scas
inc
cmp
in
stos
andl
repz
pop
leave
mov
pusha
gs
add
xchg
pusha
push
out
fidivs
cmp
mov
cmpsb
pop
in
in
arpl
icebp
movsb
flds
push
inc
jns
push
shlb
in
push
pop
int
mov
sbb
in
dec
aas
pop
xchg
pushf
orb
xor
sub
xor
jb
jmp
dec
loope
data16
jmp
lcall
popa
lahf
pop
daa
outsl
xor
mov
and
mov
outsl
test
cmp
lret
dec
pop
cmpsl
mov
aas
aad
call
cmp
icebp
inc
xor
adc
std
out
cmc
test
jecxz
movl
mov
leave
sub
add
adc
lret
ret
jb
or
call
mov
mov
and
in
hlt
push
ja
movsb
add
xchg
or
inc
fcom
lds
adc
cmc
xor
push
aas
cmp
sbb
fwait
ret
mov
fisubrl
insb
cmp
cwtl
xchg
sbb
push
or
imul
sbb
mov
xchg
bnd
mov
xchg
mov
push
dec
lret
push
and
bound
cmpsl
sub
push
out
enter
xorl
insb
int3
mov
and
cmp
fdivrp
fcmovb
jns
dec
mov
out
mov
adc
ljmp
shll
hlt
iret
aad
hlt
mov
cmp
cmpsl
mov
andl
xor
ret
dec
push
or
je
ret
test
cmp
out
sbb
or
movsl
ret
aaa
pop
in
mov
xchg
mov
mov
sahf
movsb
push
pop
add
jne
sbb
jbe
or
js
ljmp
add
add
mov
mov
imul
das
sub
xor
jo
in
jmp
sti
loop
pop
inc
adc
fcoms
add
cld
adc
mov
mov
xchg
cltd
lock
ret
jno,pn
mov
fs
orl
pop
or
fs
or
add
jno
sbb
or
xchg
cmp
or
cld
adc
add
incl
and
sub
xor
scas
jl
ret
and
lods
adc
stos
mov
ret
jbe
cs
pop
scas
adc
ret
push
inc
popf
jnp
and
xchg
lret
mov
adc
add
adc
xchg
jl
scas
nop
lret
xor
rcr
out
aas
or
sbb
dec
outsb
dec
add
arpl
leave
daa
scas
xor
mov
adc
push
mov
lret
xchg
nop
out
xchg
ror
movsb
shl
test
adc
daa
addr16
mov
jno
rclb
sbb
loop
std
ror
incl
sbb
cld
arpl
fildll
outsl
pop
movsl
and
pop
mov
pop
xorb
push
cmp
cmpsb
filds
cmpsl
ret
inc
jp
test
lods
xchg
sub
std
jb
mov
js
sub
or
shlb
sbb
cmp
fwait
cmc
or
ss
pop
mov
push
mov
rclb
mov
sub
xchg
sub
push
ss
inc
in
call
pop
cmp
mov
cmp
cmp
lods
and
repnz
mov
repz
int
rorb
add
dec
lea
insb
ret
in
sbb
xlat
jmp
inc
outsb
les
clc
roll
pcmpgtd
data16
xchg
mov
or
je
js
ret
pop
push
xchg
mov
inc
jnp
dec
jne
push
jmp
ljmp
xchg
sbb
sub
jp
mov
gs
cmpsb
ljmp
pushf
jno
and
adc
bound
ljmp
push
mov
add
fldt
jecxz
out
lahf
push
xchg
js
push
xchg
mov
leave
ljmp
cmp
xchg
sub
jecxz
pop
mov
test
xor
cmp
xchg
cmp
jg
add
add
dec
pop
jg
mov
in
cmp
cmp
or
lea
dec
inc
insl
dec
pop
and
mov
xor
push
fcmovnu
pop
dec
adc
leave
mov
fcoml
sub
pop
pop
mov
jne
jecxz
cmpsb
add
out
and
inc
xor
push
lock
cs
sub
and
jo
push
mov
outsl
mov
pushf
imul
bound
pop
mov
ds
testb
std
shrl
fistps
add
mov
pushf
dec
add
cmpsl
pusha
subl
inc
pop
nop
cwtl
data16
aam
out
and
mov
add
iret
fisubs
inc
pop
mov
jae
xor
adc
adc
sbb
clc
mov
or
or
cmc
movsb
mov
cmc
sub
rcll
out
and
scas
fsubrl
or
daa
adc
pop
enter
add
clc
jbe
inc
dec
fdivrl
movsb
adc
insb
inc
xor
pop
cwtl
pushf
fsubs
enter
pop
rcl
inc
inc
ret
adc
jo
repnz
dec
aas
aas
sub
mov
push
and
dec
sbb
jmp
outsb
out
in
add
adc
xchg
arpl
shlb
mov
pop
shll
sub
in
add
jl
insb
fistpll
mov
fcoml
push
popa
xchg
or
cmp
out
leave
xchg
sub
shr
or
jg
adc
add
mov
xchg
xchg
arpl
leave
xor
mov
arpl
xor
xchg
inc
or
mov
arpl
inc
push
dec
sarl
addps
mov
push
aad
cmpsl
sti
ds
lret
lret
lcall
shll
add
adc
inc
int3
xor
sub
daa
mov
add
icebp
icebp
cmc
xchg
jb
inc
ja
sbb
outsb
adc
or
fistpll
outsb
pop
je
mov
sbb
or
sub
jle
adc
rclb
xchg
rdmsr
xor
lcall
adc
mov
xor
pop
stos
shrl
mov
xor
jo
shl
inc
out
scas
mov
mov
fs
push
test
lret
addb
repnz
adc
sbb
or
ss
inc
adc
sti
mov
test
and
adcl
xchg
xchg
int
xchg
data16
mov
cmpsl
imul
fisttpl
xchg
push
out
loopne
mov
dec
addr16
xchg
xchg
push
repnz
push
lods
aam
adc
mov
push
in
into
aaa
or
inc
add
cltd
inc
dec
or
xor
xchg
cmp
xchg
lret
in
int
cltd
sti
adc
mov
adc
sbb
addr16
xor
icebp
lds
dec
shlb
dec
mov
fisttpll
dec
adc
jmp
jp
cmp
and
mov
dec
sub
push
cmp
mov
dec
pop
adc
inc
jbe
push
mov
adc
dec
or
inc
mov
or
cmp
fcmovbe
cmp
fistl
bound
stos
mov
xlat
pop
xor
pop
mov
xorl
scas
sub
xchg
and
gs
jmp
lds
adc
xchg
lcall
and
jg
jne
dec
lods
mov
or
cmp
loope
sbb
imul
mov
push
data16
add
int
sahf
insb
mull
adc
pusha
sahf
fidivrl
or
in
aam
bound
movsb
mov
out
or
dec
push
and
adc
mov
loop
dec
insb
mov
push
xchg
fisubrs
leave
jno
enter
popa
or
inc
lds
mov
mov
push
add
out
lods
aam
xchg
mov
adc
out
loop
cmp
scas
push
in
inc
repnz
xor
loopne
sub
test
rcrb
fistps
sub
test
jge
mov
push
push
or
call
lea
add
push
pop
adc
je
cwtl
xchg
or
jo
pop
roll
fs
out
jnp
jb
icebp
mov
je
xor
cmp
push
das
pusha
loopne
fs
testb
repz
xor
sti
jmp
add
gs
push
lods
jns
sbb
mov
lret
mov
adc
cmp
leave
jo
mov
aas
inc
pop
mov
sub
dec
insb
shrl
sub
movsl
adc
pushf
mov
movsb
pop
loopne
cmp
mov
pop
popf
or
cmp
movsb
mov
pop
xchg
daa
mov
xchg
out
movsb
mov
int
inc
mov
push
mov
loope
add
dec
inc
dec
ja
push
sub
mov
jae
frstor
fisubrl
mov
xchg
ret
imul
add
sbb
xchg
adc
mov
dec
inc
les
sub
pop
cs
jg
ret
sbb
or
cmp
pop
inc
dec
lcall
lcall
jmp
push
repnz
push
repz
adc
cmp
iret
fsubrs
fidivl
adc
stos
les
repnz
out
je
or
mov
jmp
dec
lahf
adc
fmuls
push
cmp
subl
sub
lock
rcl
scas
rcll
cpuid
push
inc
add
dec
xor
mov
pop
cmc
mov
lret
ficoms
shll
inc
iret
xlat
adc
cmp
repz
xor
xchg
adc
rcrb
rclb
rcrl
pop
out
jle
pop
lcall
and
jge
js
jns
push
cmc
repz
sub
mov
sti
lods
cmc
dec
aad
out
jle
gs
cld
test
cmc
popf
pop
push
mov
sbb
push
outsl
push
jno
jp
stos
lea
enter
pop
dec
sub
addr16
xor
call
fdivl
arpl
clc
lock
xor
push
mov
in
mov
mov
xchg
jb
push
gs
dec
mov
mov
scas
sbb
in
leave
into
push
add
xor
mov
inc
imul
pop
cmp
jmp
outsl
sub
pushf
iret
cld
sti
sti
sbb
cmp
or
scas
sbbl
sub
sbb
fisttpll
cmp
jne
push
sbb
fld1
jl
sbb
jl
pop
sub
xchg
xor
inc
stos
rorb
outsb
out
mov
pop
xor
sbb
and
mov
add
xor
out
push
scas
mov
pop
xor
mov
lea
jmp
or
test
push
inc
jnp
mov
xor
dec
pop
rolb
mov
and
mov
andl
inc
popf
sbb
jge
sahf
insl
or
dec
insl
xchg
mov
mov
fisttpl
je
test
jp
push
clc
mov
mov
cmpsb
mov
mov
or
xor
sbbb
test
inc
loop
mov
mov
mov
push
test
and
aas
xor
out
fs
lods
enter
push
mov
sbb
and
inc
and
sbb
add
hlt
mov
mov
mov
enter
loop
mov
aas
fdivrl
in
test
sub
xchg
pop
pop
test
cmovb
dec
sub
pop
adc
jnp
aas
cmc
inc
nop
movsl
ja
add
push
adc
mov
out
add
hlt
dec
fidivrl
ds
sbb
add
cwtl
mov
xor
loop
sti
xlat
lock
lods
or
mov
add
pop
in
test
nop
fucom
into
lock
push
es
shrl
enter
or
and
or
xchg
loope
fildl
cmpsb
mov
arpl
fs
sbb
jge
insb
les
cmp
xchg
pushf
mov
lods
icebp
cmp
enter
push
dec
xor
mov
js
inc
mov
push
sar
mov
cmp
divb
iret
flds
popf
imul
scas
jp
push
adc
sbb
pop
pop
xor
cld
and
push
scas
pop
mov
pop
mov
jno
mov
mov
adc
push
movsb
dec
aad
push
push
lea
mov
insl
mov
mov
imul
dec
addl
jo
pop
jmp
mov
jns
lods
out
adc
in
rclb
shr
cld
stos
imul
iret
and
cltd
aaa
inc
sbb
test
cmp
jmp
cwtl
roll
inc
mov
hlt
das
jnp
mov
pop
jb
test
dec
mov
test
xchg
paddw
xor
mov
inc
mov
add
popf
fbld
les
mov
pushf
les
orb
scas
aam
lods
mov
nop
xorl
scas
scas
sub
insl
das
cmpsl
in
rolb
or
das
js
push
xor
sbb
lret
lods
xchg
cwtl
pop
mov
call
cmp
insl
dec
das
xchg
fldt
fldcw
daa
data16
adc
fidivrs
push
xchg
add
push
mov
cmp
mov
jne
xor
mov
cmpsl
adc
xchg
sub
testb
adc
sbb
das
sbb
push
inc
cmp
enter
push
add
mov
test
mov
adc
int3
inc
add
inc
jnp
movsb
outsl
adc
test
jl
xor
inc
and
add
mov
hlt
pusha
xor
push
movd
push
dec
andl
mov
mov
ret
jle
das
pop
push
xchg
out
imul
ss
stc
fstpl
sub
andl
das
xor
aad
xchg
jmp
popa
lret
stc
pop
je
adc
pop
jl
cli
jbe
lret
movsb
dec
sbb
inc
sahf
push
hlt
mov
loope
push
loop
pop
aam
fs
sub
int3
dec
inc
outsb
pcmpeqd
fwait
bound
cmpsl
inc
test
jmp
mov
xor
ds
arpl
insl
mov
out
sub
mov
xchg
outsl
pop
shlb
jns
jmp
popa
mov
cmpsl
sub
scas
sub
fs
add
lret
inc
fsub
cmp
sbb
in
inc
adc
ss
scas
pop
popf
shr
or
mov
mov
pushf
imul
jne
sbb
xchg
xlat
xchg
mov
insl
fcomp
test
dec
sbb
jno
sahf
cmp
mov
arpl
lret
lret
fwait
cmp
xchg
mov
cmp
and
jmp
pop
lds
icebp
arpl
fisubrs
add
in
push
aad
jnp
xorl
data16
jle
or
push
popf
das
cmp
fildl
and
test
inc
inc
ret
dec
xor
repnz
jle
js
mov
pop
mov
out
rcrl
pop
inc
gs
mov
or
lret
sahf
mov
mov
jno
test
dec
and
push
mov
mov
jg
fists
mov
mov
loopne
icebp
or
loope
fsub
or
and
sub
inc
or
fbld
push
repnz
jnp
sbb
push
inc
outsl
fimuls
or
xchg
xor
inc
icebp
inc
in
xor
inc
mov
xchg
jg
push
lcall
jp
mov
adc
or
nop
mov
ficoml
jmp
jne
and
aaa
jge
das
les
ret
mov
fmuls
add
mov
pop
dec
inc
call
aad
adc
daa
sbb
rcl
pop
lret
or
lahf
loope
data16
xchg
or
xor
sar
aam
dec
jge
iret
cld
xchg
js
mov
iret
sub
pop
mov
xor
jecxz
sti
mov
out
roll
dec
arpl
mov
sbb
mov
enter
inc
arpl
fists
pop
fldt
xor
or
cmpsl
rcr
sbb
xor
mov
mov
test
out
popf
sahf
sub
arpl
in
or
xor
push
aad
adc
decb
out
xchg
aad
repnz
sub
sbb
jb
mov
jo
mov
push
jb
mov
call
mov
fmul
add
mov
pop
xchg
sahf
push
ds
jmp
fists
sbb
or
adc
repnz
sbb
or
pop
adc
fs
test
fdiv
leave
mov
outsb
mov
adc
outsl
enter
add
shll
clc
jp
adc
pavgw
scas
popf
mov
aas
test
pop
xchg
jge
push
jmp
pop
or
out
popa
in
stos
sub
xor
pushf
push
ret
stos
pop
mov
ret
lret
iret
test
jno
mov
sbb
sarb
inc
leave
stc
gs
in
fldcw
adc
lods
sbb
pusha
je
jbe
in
push
in
sbb
sbb
out
das
push
outsl
mov
popa
mulb
xor
lods
daa
adc
inc
nop
adc
or
lret
shll
mov
stos
cmp
inc
aam
daa
cmp
sub
loopne
jge
mov
xchg
sub
adc
packsswb
mov
adc
sub
insl
pop
shrl
test
gs
pop
jb
aad
sub
test
pop
xchg
cmp
ret
je
or
hlt
out
jg
inc
mov
and
aaa
sub
push
into
mov
and
ss
into
pop
test
mov
jl
jmp
incl
aad
xor
mov
into
repnz
inc
aaa
fprem
jmp
sbb
push
sbb
icebp
mov
add
mov
inc
fisttps
aaa
mov
repnz
and
sub
lret
adc
or
adc
and
negb
iret
repnz
jns
push
mov
inc
aad
xchg
stos
dec
cmp
ds
jne
mov
int3
cmpsb
shrb
cs
push
imul
pop
idivl
xchg
cmp
add
js
pop
sbb
sbb
ljmp
pop
mov
pop
jg
outsb
or
ds
iret
jo
subl
pushf
sbb
rorb
xor
clc
sarl
in
and
fsubr
roll
sbb
int3
inc
cmp
dec
xor
xchg
add
jp
mov
icebp
jecxz
xor
dec
xchg
rcr
out
and
dec
xor
mov
cmp
es
sarb
and
mov
jg
lods
subl
inc
insb
gs
js
imul
jns
stc
fxch
and
aad
out
rolb
and
push
xor
sbb
sub
or
jecxz
mov
push
daa
std
test
cwtl
or
xor
and
jb
test
dec
jne
outsl
push
mov
lock
ret
fs
xchg
cld
fxrstor
test
ja
fisubrs
mov
cmp
addb
push
xchg
leave
add
sahf
push
mov
pop
push
pop
mov
push
mov
aas
in
je
add
mov
push
xlat
insl
lds
inc
add
adc
enter
movl
and
ds
push
mov
cmp
adc
sbb
mov
xchg
dec
insl
addr16
or
push
xor
cmp
ret
mov
lret
fsubrs
jge
pop
sub
mov
pop
test
pusha
je
fstps
pop
insl
sar
fwait
in
addr16
mov
pushf
sahf
inc
and
sub
ja
test
clc
stc
or
mov
pop
sarl
add
xor
scas
xchg
int3
inc
xchg
out
sbb
dec
dec
sub
clc
sub
inc
xchg
sub
push
in
ret
sbb
sub
mov
or
cmp
mov
scas
ds
dec
mov
cmp
sbb
lock
dec
xchg
jb
xor
jmp
loop
fwait
dec
xor
mov
and
das
pusha
leave
xor
dec
mov
iret
fstl
iret
lret
lds
sbb
and
mov
jecxz
lock
lea
test
frstor
or
jge
jne
mov
sub
jl
push
mov
daa
xchg
into
push
scas
inc
fwait
out
jne
div
sub
xor
or
cwtl
inc
popf
mov
cltd
inc
fidivrl
arpl
mov
inc
mov
sbb
lods
cs
test
call
repz
maskmovq
imull
cmp
cmp
jae
adc
xchg
cmp
push
jnp
rorl
subl
mov
xchg
fcmovnb
mov
mov
shrl
fisttpll
mov
or
lret
jbe
mov
fcoml
jbe
cmp
test
xor
jl
push
push
je
stc
sbb
pop
mov
cs
inc
cmp
arpl
dec
outsb
pop
outsb
fcmovne
into
ja
sub
aaa
push
mov
rcll
orb
call
loopne
es
repnz
hlt
sbbb
push
mov
lret
xchg
sub
cwtl
sbb
push
fcmovu
stc
xchg
mov
push
pop
dec
jns
inc
jno
xchg
sbb
or
jle
pop
mul
fcmove
pop
repnz
jnp
mov
mov
mov
je
push
popf
leave
and
cli
jno
or
movsb
cmp
test
in
gs
addl
sbb
jb
push
mov
lahf
dec
cmp
bnd
jne
xor
add
adc
xor
insl
lods
cmpsb
jo
out
mov
push
xor
push
ds
xor
mov
pusha
test
inc
xor
sbbl
push
jmp
xor
subl
test
aas
jb
pop
outsb
fcmovb
sahf
ljmp
addl
cmp
pop
dec
das
cwtl
jl
shl
rorl
mov
push
lahf
mov
jle
mov
dec
jns
and
push
ret
mov
cltd
lods
test
mov
xlat
add
dec
data16
fistpl
xchg
mov
repnz
push
scas
push
andb
jb
inc
pop
jl
loop
xor
sub
rclb
or
pop
cwtl
inc
jle
push
icebp
cmp
mov
sub
jb
adc
cmp
lcall
pop
push
push
push
cmp
cmp
push
popa
sti
and
fiaddl
xchg
clc
call
jle
bound
inc
in
inc
mov
mov
jnp
loop
movsb
push
fimull
lods
add
into
sbb
lods
lahf
imul
outsb
ljmp
pop
xor
int
fdiv
pusha
add
push
cmp
into
sub
pop
rolb
mov
xchg
sbb
ja
ret
ds
pushf
enter
mov
outsb
cmp
xorl
fidivrs
or
add
mov
mov
test
push
mov
test
js
and
mov
push
mov
cmp
or
popa
loope
dec
jmp
dec
les
and
jp
cmpsl
cmp
xor
or
movb
das
aaa
add
push
dec
dec
in
cmp
fsubrl
rol
xor
orl
rcll
pop
mov
mov
cmpsl
imul
cmc
mov
mov
push
ficoml
xor
xchg
xchg
xor
add
push
fstpl
inc
out
jl
jno
push
adc
cltd
les
shlb
adc
mov
pop
repz
xchg
scas
jae
mov
cmpsl
ret
push
or
or
xor
inc
andb
lds
sbb
sbb
lea
lahf
or
jecxz
mov
insb
fs
adc
fldln2
xor
mov
or
adc
test
mov
lods
nop
shrl
pop
loopne
and
mov
adc
pop
mov
jbe
hlt
movq
mov
inc
dec
ret
call
data16
cmp
and
xchg
inc
add
insb
pop
or
mov
in
orb
jle
out
sbb
insl
cmpb
push
add
shlb
stos
test
nop
ret
sbb
xchg
pop
inc
jg
add
mull
aas
push
pusha
pop
push
or
out
adc
mov
sbb
mov
dec
rclb
sub
orl
pop
scas
push
xlat
dec
test
daa
cli
sbb
test
daa
cs
imul
outsb
jmp
loopne
inc
mov
push
call
pop
pusha
lods
outsl
pop
or
mov
cs
jp
mov
fs
push
mov
pushf
adc
dec
flds
jbe
pop
dec
in
aas
lea
decb
stos
arpl
mov
dec
ret
xchg
loop
cmpsl
inc
jne
xor
sahf
mov
ret
xchg
jp
push
mov
sub
pop
fucomip
sarl
dec
or
fstpl
clc
or
fdivr
movsb
cmpsw
and
ljmp
pop
jbe
cmpl
mov
popf
hlt
cmp
inc
inc
outsl
mov
sahf
test
push
inc
inc
xchg
push
adc
repnz
cwtl
dec
js
dec
push
inc
xchg
ror
shll
pop
arpl
xor
hlt
test
movsb
inc
sub
push
es
lods
insb
out
icebp
mov
xchg
adc
mov
jnp
daa
lea
lret
dec
repz
adc
fadd
iret
inc
imul
test
add
loopne
and
xchg
add
sub
push
cli
inc
mov
jg
push
clc
sub
aaa
mov
lcall
aad
jb
and
push
cmp
cmc
imul
inc
xchg
push
or
cli
decl
mov
pop
dec
xchg
rorb
mov
mov
xor
mov
pop
mov
pop
out
jmp
loopne
xor
test
les
out
in
in
mov
les
lds
xchg
fdivrs
mov
js
push
inc
or
ss
clc
hlt
push
push
iret
fwait
shll
and
or
loope,pn
push
pop
add
cmc
fisubrs
test
or
aaa
xchg
movsb
cmc
cld
mov
nop
add
out
pop
pop
dec
sbb
out
insl
iret
enter
push
int
xchg
mov
lea
jmp
mov
fldl
xor
adc
pushf
out
outsb
pop
leave
ret
or
sbb
mov
cmp
inc
dec
mov
xchg
cmp
push
stos
xor
stc
xchg
pop
mov
add
nop
mov
or
mov
add
mov
int3
sarb
xchg
insl
imul
dec
aaa
mov
arpl
lds
das
jmp
mov
xchg
gs
fmull
or
fildll
lret
test
add
or
ja
mov
ljmp
lods
hlt
mov
in
stc
xchg
cmp
pop
push
sub
icebp
cwtl
div
movsb
lahf
ret
xchg
je
adc
in
xlat
xchg
push
mov
lods
roll
jp
inc
xchg
push
jb
jmp
out
mov
mov
lea
mov
pop
jecxz
call
insb
cltd
jecxz
ret
lcall
mov
pop
mov
roll
test
lea
ljmp
xor
xchg
xchg
mov
test
dec
mov
popf
aaa
or
jnp
sbb
popa
push
subl
into
push
in
arpl
cli
gs
push
imul
in
inc
lds
push
test
xchg
test
add
cmp
lea
and
fwait
mov
and
repnz
cmc
hlt
mov
mov
rcll
mov
xchg
inc
mov
inc
xchg
imul
xor
and
cli
jae
hlt
mov
outsl
cwtl
jle
mov
jge
into
add
mov
cmp
cmpl
movsl
aaa
xchg
jg
xchg
stos
inc
cltd
dec
mov
pusha
jge
das
loop
aas
push
inc
pusha
sub
push
inc
hlt
lods
xchg
jecxz
test
jae
xchg
or
das
dec
inc
pop
push
jg
inc
adc
or
pop
scas
cld
cmpsb
fistps
and
and
cmp
jno
and
mov
in
xchg
into
cmc
in
rcll
stos
lods
or
cmp
rcll
in
push
push
rclb
xchg
shl
popf
call
scas
outsl
je
out
add
test
push
inc
add
stos
mov
scas
ljmp
pop
xor
je
pop
mov
aas
or
aad
and
add
cwtl
sbb
repz
addr16
movsl
xchg
and
jne
and
ret
adc
scas
out
mov
xchg
call
pop
gs
xor
cmp
push
std
js
imul
mov
push
clc
mov
jns
icebp
inc
cmp
cmp
adc
xchg
sbb
xchg
pop
shl
mov
sub
inc
ret
sarb
jmp
imul
insb
shlb
add
cmp
and
mov
shlb
aam
jbe
cmp
mov
cmp
xor
inc
jp
mov
pushf
aaa
test
rol
xorl
bound
in
sbb
mov
sub
xchg
xchg
add
sub
xchg
add
cmpsb
pushf
cs
roll
cmp
mov
test
in
scas
imul
jecxz
add
lds
in
ret
lock
cmp
aam
xlat
gs
cmpsl
les
lcall
adc
and
sbb
push
pop
inc
dec
pop
sub
mov
push
mov
shlb
lock
jae
lahf
jmp
jns
lea
outsb
sub
jne
push
inc
sub
cmp
mov
xchg
sub
sar
pop
popf
sbb
roll
jge
insb
mov
fsubl
xchg
inc
js
dec
loopne
dec
in
add
pop
repz
inc
push
cmp
imul
loop
fdivs
add
jb
xor
sbb
rorl
rolb
sbb
mov
frstor
or
sarl
in
inc
out
inc
mov
cwtl
push
xchg
adc
mov
mov
or
mov
pushf
add
data16
negl
sbb
mov
or
and
pop
cmp
adc
add
sbbb
mov
cmp
xor
adc
mov
pop
js
add
mul
leave
filds
xor
lahf
adc
mov
inc
and
sub
outsl
movsb
add
outsb
stos
negb
and
or
cltd
popf
pop
test
popa
cli
ds
mov
cmp
ss
pop
ffree
mov
cs
push
shr
pushf
fistps
test
insl
and
mov
or
out
inc
ret
out
mov
jne
int3
ds
sahf
pop
insb
pmaxsw
dec
shlb
ss
jp
scas
hlt
sbb
cltd
dec
pop
into
mov
pop
pop
cs
cmp
jge
addr16
pop
mov
xchg
outsb
out
cmp
mov
xchg
test
fadds
add
push
in
inc
sub
xchg
sbb
pop
xor
inc
pop
jge,pn
inc
pop
adc
test
and
rcl
ds
stos
jge
mov
adc
andb
push
call
add
add
mov
sub
ret
negb
loop
xor
lods
gs
add
xchg
push
int
ffree
popa
cmp
dec
mov
fistps
or
pop
int
inc
jle
fcomps
rcr
mov
dec
lret
shll
push
and
sub
sub
sub
mov
loop
test
push
out
or
in
xchg
orl
adc
in
sbb
lahf
lret
sbb
inc
loop
in
push
je
inc
add
inc
dec
ja
jns
dec
mov
insl
out
mov
cli
xchg
xlat
incb
in
jnp
sahf
in
cmpsl
ret
lods
lahf
sbb
rcll
cwtl
dec
mov
cmp
aas
push
add
daa
lods
arpl
dec
jno
insl
xor
mov
andb
xchg
cltd
adc
iret
stc
mov
mov
xchg
dec
movsb
push
sbb
cwtl
popf
sbb
arpl
add
bound
push
shrl
scas
popa
adc
pop
jecxz
adc
xchg
pop
cld
inc
mov
movsb
and
pop
jge
or
dec
cmp
stos
pusha
repnz
sarb
int
lods
cmpl
jne
jno
and
loopne
nop
jmp
daa
and
push
iret
lret
mov
inc
fstpt
cmp
mov
mov
sahf
pop
cld
pop
pop
xlat
repz
in
push
lock
xor
hlt
cmp
push
dec
lea
int
lret
jns
in
rorb
inc
cmp
mov
pop
inc
mov
or
icebp
xor
lret
push
pop
pop
loop
lods
paddusb
aam
int3
sub
and
mov
xchg
pop
push
mov
inc
adc
and
dec
push
mov
lahf
lods
adc
loope
mov
add
lods
mov
ss
ds
sbb
and
cmpsb
cld
xor
dec
mov
cmp
aas
popa
lds
jge
cli
lcall
scas
mov
inc
mov
loop
xchg
das
mov
rcll
cs
push
test
ret
mov
ljmp
rcl
push
cwtl
repz
mov
outsl
lahf
sub
mov
sub
inc
pop
lds
inc
add
mov
scas
sahf
mov
fbld
fisubs
push
iret
lods
leave
mov
and
inc
mov
pop
je
mov
sbb
mov
cmp
cmc
xlat
mov
xchg
mov
jecxz
or
cmp
pusha
lock
push
sti
cmp
nop
sbb
adc
xor
xchg
sub
js
xchg
pop
xor
dec
stos
scas
loopne
sbb
filds
jb
bound
lea
fs
outsb
pop
jns
aam
outsl
subb
sub
ret
jb
inc
mov
xchg
je
add
push
out
inc
ds
ror
jo
sbb
lods
inc
jb
fbld
pushf
push
xchg
cmp
lock
cmp
dec
shrb
inc
xchg
iret
mov
sti
stos
mov
shll
call
add
push
push
inc
xchg
adc
mov
mov
pop
mov
or
add
in
mov
outsl
shlb
jecxz
mov
enter
js
pop
push
pusha
inc
lock
pop
push
mov
mov
jnp
test
flds
dec
jae
push
and
mov
mov
jmp
mov
adc
daa
mov
sbb
movsl
cmp
or
test
fdivl
add
or
sub
push
aas
incl
rclb
pop
fisubrl
dec
cs
jbe
pop
iret
in
minps
aam
les
xlat
movsl
or
ret
mov
out
cs
jl
stc
pushf
adc
xor
cmp
dec
xchg
sub
clc
push
mov
push
imul
insl
add
xor
xchg
js
sub
lea
scas
mov
ds
mov
inc
mov
adc
lret
fisubrl
pop
jnp
pusha
cmp
dec
cwtl
sahf
int
mov
js
not
inc
pop
dec
jns
imul
add
push
outsl
jle
mov
iret
dec
cmpsl
xor
aam
jo
mov
dec
lock
push
and
jo
mov
mov
in
ret
mov
add
mov
or
les
jle
iret
movsl
insb
imul
fs
repz
stos
or
sbb
lock
sbb
cwtl
movsb
jp
outsb
sbb
and
imul
icebp
enter
mov
movb
hlt
xchg
add
mov
xor
fs
mov
add
jno
clc
outsb
iret
cs
fldcw
mov
in
pop
or
out
test
jl
cmpsb
xchg
shrl
lock
stos
pop
jnp
dec
xchg
push
icebp
jae
inc
call
or
lock
and
adc
mov
or
out
jbe
inc
mov
bound
sub
les
int
icebp
push
mov
mov
mov
sub
out
pop
and
push
arpl
or
mov
stos
lret
xchg
imul
scas
mov
test
test
mov
mov
xchg
cmp
adc
test
cmp
mov
jns
mov
cmc
add
data16
sbb
pop
pop
adc
fsubrp
xor
std
or
xor
push
ret
repnz
and
fisttpll
and
pop
fs
sub
adc
push
fdiv
inc
push
ss
je
inc
push
inc
push
add
add
das
mov
add
movsl
imul
pop
xchg
jbe
jle
jo
cltd
xor
lahf
fcompl
popf
test
lret
iret
jbe
mov
scas
test
test
push
xchg
dec
and
jae
push
mov
clc
jns
dec
test
xchg
mov
xchg
mov
xor
push
shll
mov
stos
movsl
rcrl
in
jae
aad
cmp
jle
icebp
mov
lods
mov
push
and
cmp
dec
fs
mov
jo
cmp
sub
cld
push
mov
lcall
jg
int
mov
and
or
sahf
push
je
test
xor
sub
push
int3
push
fisttpll
inc
inc
jae
sub
cmp
scas
test
xlat
jge
rorb
roll
adc
xor
lahf
gs
cmp
ret
iret
inc
xor
stos
sbb
rol
cmp
add
arpl
pusha
cmp
mov
subl
and
outsl
push
dec
loop
mov
cmp
pop
imul
push
in
addl
movl
icebp
insb
lods
mov
sub
xor
cmp
lahf
repnz
push
xor
inc
sti
cmp
jle
or
imul
mov
push
sub
pop
bound
pop
sbbl
scas
addl
icebp
sbb
call
popl
mov
adc
dec
pop
out
lds
ljmp
push
push
lahf
mov
movsl
cmc
add
mov
lock
mull
insl
sbb
dec
cs
mov
negb
fisubs
mov
aam
cmp
sbb
mov
xchg
aas
fcmove
mov
mov
js
cmpsb
xchg
xor
es
hlt
xchg
cmp
add
arpl
and
and
popf
icebp
jle
iret
leave
icebp
test
test
mov
inc
mov
hlt
lret
in
or
push
fcmovnbe
je
jne
repnz
shlb
adc
cmpsb
pop
cmpsl
outsl
mov
push
aad
loope
pop
or
push
lock
push
sub
xorl
sub
push
lock
mov
sub
fcomp
clc
sbb
daa
cmpsb
inc
jge
dec
xor
pop
sarl
clc
call
lcall
leave
addr16
xchg
sub
cli
test
shl
cmc
cmp
jp
lea
ret
popa
mov
xchg
pop
mov
std
aam
pop
jb
ljmp
repz
pop
aas
pop
xchg
mov
sbb
pop
imul
ljmp
inc
jb
ret
ret
cs
pop
aam
dec
fcompl
xlat
lcall
mov
dec
add
aam
mov
fildll
adc
scas
mov
lock
mov
mov
and
xchg
gs
ficoms
xchg
repnz
cwtl
aas
fcomi
fcoms
testl
xor
sbbb
rcll
lcall
pop
or
sbbl
push
imul
mov
mov
push
inc
pop
stos
ret
in
and
mull
leave
and
or
fs
sbbl
scas
daa
ljmp
idivb
test
mov
jns
and
fstpt
scas
iret
mov
jne
push
lds
shll
mov
call
ds
push
fmull
add
js
test
cmp
cmp
mov
pop
out
scas
sbb
insb
sub
adc
mov
fwait
out
mov
das
in
adc
in
fs
insl
xchg
or
shlb
adc
sahf
and
movsb
or
es
cmp
inc
lea
mov
dec
xchg
rorb
xchg
cmp
or
push
add
or
ret
notl
adc
sbb
xchg
andl
jnp
or
mov
sahf
mov
notl
fisttpll
jb
xchg
fistpll
push
xchg
sub
mov
adc
xorb
jns
sub
dec
xor
pop
test
les
fs
leave
inc
adc
lret
insl
js
test
cmp
cli
ljmp
js
into
add
jp
cmp
shrl
out
cwtl
add
cmp
loope
xchg
outsb
shrb
xor
imul
in
sarl
popf
testl
enter
sets
scas
mov
aam
fs
scas
ss
dec
stos
cmpsb
pop
lock
nop
lds
imul
andl
fsts
bound
mov
js
xchg
mov
es
loop
xor
add
fwait
pop
inc
in
and
leave
data16
iret
pushf
out
in
sub
add
ss
lods
lea
cmp
test
lock
cmp
mov
pop
adc
out
ror
add
scas
jne
jmp
jle
out
mov
inc
dec
jo
cld
mov
fnstsw
xchg
ss
outsl
movl
lret
test
push
mov
fsubrl
mov
push
outsl
mov
cmp
out
in
mov
lahf
ds
shl
mov
clts
ficoml
mov
push
push
push
xchg
loopne
mov
add
es
and
add
loope
xchg
sub
add
jle
push
xlat
xor
jmp
incb
xchg
push
adc
push
insl
mov
ljmp
jb
xchg
ret
add
jmp
xor
out
cli
mov
es
mov
push
fcoml
pop
push
jnp
frstor
stos
flds
fs
sub
mov
push
sub
out
scas
xchg
cmp
mov
clc
push
sub
xor
sub
inc
je
pop
sub
bound
imul
jno
xor
sub
add
les
cmpsl
mov
repz
stc
das
sbb
cli
inc
cmp
shlb
dec
dec
data16
aas
out
sbb
mov
jno
sbbb
sub
add
adc
popf
lods
dec
cltd
and
aam
fcmovu
mov
and
mov
pop
lahf
cmpsb
int3
push
xchg
cld
cmc
aaa
dec
loop
push
flds
mov
push
jp
pop
jg
out
jmp
sub
jns
lds
and
je
add
bound
rolb
jne
mov
mov
data16
inc
sbb
xchg
inc
mov
xchg
imulb
movsl
divb
sub
sbb
imul
lret
sbbl
sbb
les
dec
mov
xor
pusha
fwait
mov
in
je
mov
movsl
lret
jbe
sbb
and
lds
lret
xchg
loopne
loop
out
sub
mov
scas
aam
xor
in
nop
stos
inc
sub
push
std
or
dec
fdivs
out
cs
inc
pop
adc
push
lret
or
mov
loop
push
sahf
ret
icebp
hlt
stos
add
mov
xor
mov
lcall
xchg
in
dec
es
jle
imul
push
jo
mov
and
dec
xchg
sahf
mov
cltd
inc
xchg
fcoml
lcall
sub
iret
adc
in
cld
push
lock
popf
ret
loope
lret
cs
andb
in
sbb
fmull
outsb
sub
fcompl
mov
jg
xor
pop
jo
pop
insb
adc
add
cwtl
jne
cltd
loop
outsb
jo
ror
lods
add
fucomi
xor
dec
and
add
test
inc
std
aas
xchg
insl
out
aam
lds
test
cltd
mov
cmc
mov
cli
out
and
jge
xchg
push
mov
add
lods
xchg
add
pop
aaa
fiadds
cwtl
punpckldq
mov
inc
add
xchg
cli
inc
shl
iret
adc
adc
mov
iret
pushf
sbb
add
rolb
mov
pop
int3
enter
push
ds
loop
add
jp
mov
mov
cmp
jnp
ja
stc
popf
and
sub
in
fidivl
mov
xchg
mov
sbb
jnp
xchg
mov
in
xor
outsl
int3
shll
dec
enter
or
and
mov
fsubs
outsl
into
push
add
fstp
pushf
push
mov
sub
dec
mov
push
popa
int
or
cvtps2pi
cmp
bound
mov
add
push
mov
or
fwait
das
out
outsb
test
and
pop
pop
in
les
xor
es
push
imul
inc
mov
xchg
mov
sarb
push
insl
lea
sub
repnz
loopne
jg
cmp
shl
mov
xor
leave
pop
pushf
cmc
nop
or
shrl
and
mov
xor
scas
jns
jle
leave
ljmp
in
add
mov
out
mov
adc
mov
js
sbb
xchg
cmp
xor
sub
jno
push
repnz
sub
jg
mov
pop
bound
pop
cli
push
mov
call
mov
sbb
sbb
test
cmp
push
mov
or
inc
jmp
cmpsl
xlat
dec
rol
jnp
pop
mov
bound
lds
jns
int3
call
mov
add
out
add
scas
dec
dec
sti
push
stos
inc
jae
push
mov
cmp
cli
fcomps
or
mov
shrl
inc
mov
mov
inc
loope
lret
jbe
out
pop
xor
pop
pop
incl
cli
xor
insl
stc
xchg
dec
sarl
xor
mov
ret
pop
xchg
jmp
or
test
popf
dec
jle
dec
sbb
inc
xchg
std
aad
testb
cli
lock
mov
pop
scas
out
or
shll
sbb
sub
lahf
jp
xchg
pop
mov
push
insb
jo
pushf
cwtl
lret
inc
imull
or
jns
jne
loope
xorl
mov
mov
mov
orl
add
sbb
shlb
insb
push
pop
cmp
incl
jbe
ret
push
and
out
or
mov
jno
xchg
jns
pop
xor
mov
fcomps
fisttpl
sbb
aam
sbb
pop
imul
sub
add
sub
ljmp
add
arpl
or
xchg
stos
xor
push
jmp
push
pop
jno
dec
cmp
adc
fcomps
inc
fdiv
icebp
lds
pop
mov
jecxz
lods
enter
testl
sbb
xor
sub
in
jbe
sysret
hlt
aad
and
and
inc
pop
xlat
pushf
shr
or
rorl
inc
sub
fs
pop
xchg
pop
add
std
add
es
in
sub
bound
in
inc
test
lds
ret
outsl
adc
jmp
aaa
pop
xor
inc
mov
lds
std
shrl
fsts
inc
sbb
mov
js
adc
aam
push
push
pusha
adc
pop
jns
sbb
push
lods
add
dec
adc
aaa
test
fsubrp
mov
cmovnp
mov
call
mov
outsl
sti
pop
jge
jecxz
pushf
mov
andl
mov
les
or
mov
xchg
out
sub
mov
pop
xlat
bound
fnstenv
adc
xor
test
mov
call
xchg
adc
mov
jns
fstps
adc
xchg
cmp
mov
loop
cmc
adc
inc
es
mov
lahf
out
mov
pop
sub
adc
sbb
fcmovnu
and
push
inc
andl
or
mov
sub
mov
mov
rcll
fisubs
mov
dec
jno
mov
pop
jmp
dec
data16
out
cmp
xor
pop
mov
test
push
stos
popf
mov
lcall
ss
test
nop
pandn
jne
inc
aaa
sahf
sbb
movsl
jne
stos
jb
adc
lods
ja
mov
mov
jnp
mov
jge
sub
sbb
mov
push
cmp
xorl
mov
push
mov
lcall
mov
ret
adc
sbb
test
ja
cld
repnz
or
inc
mov
je
call
das
leave
lock
inc
jle
jle
mov
xchg
in
mov
shlb
inc
sti
imul
sub
test
test
sub
leave
mov
ret
lock
dec
call
or
lock
out
adc
mov
mov
test
ljmp
rol
sbbb
scas
push
sbb
xchg
jg
or
pop
dec
pusha
int3
shlb
jg
jno
jl
xor
repnz
mov
xchg
test
loop
and
lds
sub
test
cs
cmpsl
fsubp
lods
push
add
lea
dec
xchg
add
or
dec
sbb
iret
shrl
jecxz
mov
shlb
ret
cmpl
std
cmp
xchg
inc
popa
es
mov
inc
lahf
mov
in
gs
jmp
test
pop
sarb
fidivrl
out
push
int
clc
flds
mov
lea
out
lret
lcall
gs
or
sarb
mov
stc
or
dec
icebp
pop
fwait
pop
sub
adc
add
cmp
add
or
xchg
sub
lock
cmp
push
ret
jmp
pop
sar
pop
fdivl
mov
enter
add
sbb
ret
std
dec
or
xchg
sub
lcall
lcall
pop
rolb
mov
shll
mov
cmpsl
xchg
or
rorl
jmp
dec
shrl
dec
repnz
fdiv
hlt
ds
adcl
pushf
mov
inc
stos
subl
sbb
addr16
test
cmp
outsl
jae
lcall
fcom
mov
push
fbstp
sub
cmc
pop
in
jmp
cmpb
test
mov
jae
cmp
ficomps
push
jmp
mov
sub
lcall
add
or
pop
jle
xor
mov
ret
cmc
dec
fstl
mov
int
cmp
mov
add
fdivl
repz
adc
cmpsb
xor
mov
xlat
aad
popa
and
pop
pop
inc
jb
js
vmwrite
pop
sub
jmp
nop
jo
mov
stos
or
in
mov
or
or
stc
pop
pop
dec
adc
ret
loopne
mov
jecxz
dec
fs
lahf
into
ss
call
stos
ret
sbb
adc
push
pop
jns
mov
lahf
hlt
outsb
je
enter
push
test
mov
mov
lret
add
and
scas
jecxz
pop
adc
add
jg
pushf
push
jbe
movsl
add
pop
ljmp
aad
cmc
test
and
xlat
cmpl
mov
mov
pop
fdivp
push
dec
aam
pop
adc
stos
sbb
aam
adc
sahf
push
xor
fwait
cmp
iret
pop
xor
pop
fwait
mov
dec
out
adc
in
jmp
andl
pop
test
mov
addr16
outsb
jmp
jge
jle
push
xchg
arpl
adc
dec
pop
stos
add
push
or
scas
sahf
fstl
negl
loop
fisubs
pusha
iret
popa
shrb
insb
cmp
pushf
leave
inc
mov
pop
testl
fnsave
dec
mov
test
pushf
sub
test
sub
inc
pop
jl
stc
int3
pop
sub
out
inc
fcom
adc
sbb
push
mov
xor
and
aaa
pop
jns
ss
shl
xor
imul
add
shrl
mov
stc
mov
fmuls
pushf
fidivrs
aad
data16
dec
sahf
mov
mov
mov
jo
push
mov
enter
push
xchg
jb
xchg
adc
adc
clc
and
push
jecxz
dec
insb
pop
dec
mov
sub
in
cld
fs
sub
dec
sub
mov
movsb
fs
sbb
aas
lods
sub
and
dec
insl
cmp
andb
iret
test
add
lock
cmp
ss
fsubl
fprem1
cmp
shll
mov
iret
in
push
std
sub
pusha
jno
push
jne
std
jle
push
inc
dec
mov
js
mov
mov
stos
inc
and
insb
movsl
inc
cmp
mov
lds
sub
outsb
loope
das
clc
fildll
imul
or
movsb
mov
pop
loop
cmpsb
clc
rclb
les
jmp
int
cmpsl
rcrl
ds
js
movsl
xlat
inc
pop
rol
xchg
std
ljmp
sti
ds
aam
push
mov
jbe
mov
ret
pop
mov
pop
mov
cmp
ljmp
pop
lea
xchg
add
pop
in
iret
jg
cs
sti
addb
and
das
stos
jecxz
aam
rcll
dec
mov
fcoml
ficoml
sub
jecxz
hlt
cld
jns
mov
jnp
cmpsb
jge
mov
bound
xor
push
add
push
enter
inc
and
in
mov
popf
ror
loopne
pushf
cli
xor
and
je
ds
jle
sbb
stos
es
jl
fs
pop
js
dec
mov
pushf
pxor
cmpsl
mov
mov
xchg
or
add
sub
xor
sbb
aam
adc
xor
sbb
aas
jmp
jae
aam
and
xlat
push
insb
mov
xor
xlat
lret
pop
mov
inc
lock
cmpb
add
cli
mov
add
test
sub
jp
cmp
adc
jge
pop
adc
mov
mov
inc
pop
push
lret
imul
and
lds
xor
lods
push
out
sarl
lods
ret
sub
cmp
pop
int3
cmp
stc
mov
xchg
inc
mov
xor
in
dec
ffree
dec
dec
movsb
cmp
mov
dec
movsb
insl
jge
lcall
movsb
jl
testl
jle
inc
inc
pop
ds
cmp
xor
push
gs
adc
cmp
sbb
jp
inc
fcomip
and
dec
jp
cmpb
daa
sbb
mov
fnstcw
movsb
mov
lods
add
jp
jge
sti
sbb
push
mov
outsl
xor
stos
iret
adc
adc
inc
or
fsubrs
add
xchg
add
add
add
push
daa
notb
sbb
mov
pusha
jmp
jecxz
lds
mov
fwait
push
xchg
call
inc
shll
out
pop
lods
mov
ror
or
cwtl
stos
cltd
mov
adc
out
loope
fisttpll
jbe
sbb
sub
pop
decb
cmc
push
cltd
fcoml
add
xchg
mov
fs
and
outsb
rorb
test
jno
mov
push
inc
ret
or
xor
pop
scas
int
cmc
jl
pop
fsubrs
fadd
aam
sbb
imul
inc
jle
xchg
mov
ret
pop
fwait
mov
cli
cmpsl
insb
test
ljmp
sbb
lods
adc
sbb
mov
xchg
in
scas
repnz
dec
pop
inc
jae
push
pop
clc
mov
jne
testb
inc
mov
cmp
out
mov
rorl
xchg
dec
test
inc
stos
mov
xchg
inc
push
repnz
repnz
test
push
lock
pop
sbb
imul
iret
mov
xchg
mov
jns
inc
lds
xchg
jge
mov
jmp
lock
enter
incl
push
mov
xor
xor
das
mov
stos
pop
add
repnz
xchg
mov
mov
add
dec
mov
je
fldt
lcall
fstps
inc
stos
mov
cmp
clc
pop
scas
fs
cli
sahf
xchg
mov
sbb
cmp
roll
lret
fbld
loop
notb
xchg
out
push
xor
aam
lret
mov
out
dec
jl
inc
lods
sbb
xchg
sbb
push
lret
xchg
lds
jae
scas
into
sub
push
inc
xor
cmpsb
aad
stos
mov
mov
cltd
pop
mov
pop
sarl
addr16
into
mov
and
add
dec
aam
sub
ss
sub
dec
fwait
sub
mov
jne
je
and
dec
pmaddwd
fucomi
or
mov
sub
dec
pop
xor
cmp
pop
mov
lahf
call
subl
mov
movsl
dec
sub
arpl
inc
stos
pop
xor
fs
ret
inc
push
fst
xchg
xchg
cmpsb
movsb
mov
fisubrs
adc
test
xchg
xor
pop
add
xchg
sub
data16
cmpsb
out
ljmp
imul
lods
sbb
mov
stc
scas
push
jae
jmp
add
and
xor
xchg
stos
fwait
ljmp
or
imul
xor
push
idivb
mov
adc
enter
adc
sbb
xchg
or
dec
sbb
jb
add
mov
push
pop
sbb
ss
mov
fists
pop
or
aad
mov
jg
xor
mov
aad
stos
inc
xor
outsl
arpl
scas
gs
pop
sub
rolb
push
mov
jb
sbb
sbb
lea
insb
add
out
mov
jnp
dec
loop
pop
inc
pushf
push
sbb
stc
cmpsl
les
push
lret
pop
into
orl
jae
sub
fwait
jb
test
and
adc
jne
adc
mov
xchg
push
xchg
daa
pushf
jno
cmp
addl
push
aam
ljmp
xor
stos
gs
adc
sti
insl
fisubl
mov
ret
cmp
add
in
stc
dec
test
imul
and
pop
push
fstpl
mov
mov
icebp
les
inc
pop
add
dec
mov
cmp
inc
xor
sbb
mov
sbb
xchg
out
mov
scas
xchg
test
add
fwait
add
out
push
cli
jl
add
pusha
mov
push
jno
daa
pop
je
stc
inc
repnz
paddusw
mov
or
mov
outsl
or
movsl
and
add
das
push
stos
fcmove
stos
or
mov
add
dec
pop
dec
push
sub
and
mov
cltd
es
sub
xchg
xorb
insb
insb
push
push
fistpll
mov
mov
jl
sti
push
inc
std
inc
adc
add
pop
fcompl
sub
insb
insb
cmpsb
pusha
lcall
dec
pop
lea
pop
mov
fcoms
push
adc
xor
out
jl
clc
cs
xor
mov
push
push
fcoml
hlt
cld
pop
and
sub
outsb
test
and
out
hlt
repnz
shlb
in
jns
xor
test
repz
sub
pop
mov
imul
or
loop
sbb
and
leave
mov
stc
inc
pop
sarl
jl
sbb
test
ljmp
jb
or
jb
xchg
mov
mov
mov
inc
flds
mov
scas
mov
add
mulb
pushf
ret
jo
cmc
stc
xor
fisubs
mov
pushf
sti
mov
clc
gs
sub
sub
mov
xlat
out
add
popa
mov
int3
fsubrl
lret
loop
aas
push
test
or
xchg
iret
inc
popf
cmpsl
push
cmp
xor
jg
pop
cmpsb
adc
adc
imul
mov
loop
popf
pusha
ret
add
int3
pop
push
dec
and
add
jge
add
stos
iret
cmp
in
cld
dec
mov
pop
cvttps2pi
cmp
imul
mov
std
repz
pop
pop
cmp
cld
xor
pop
rorb
ret
sbb
push
scas
lock
or
pop
push
xchg
std
adc
mov
lret
in
orl
int3
dec
mov
sbb
and
scas
test
into
insl
mov
cmpsb
sbb
push
test
dec
scas
arpl
sahf
sbb
fidivrl
fs
shl
dec
mov
or
jae
xchg
push
hlt
loope
ret
dec
gs
arpl
add
mov
icebp
inc
mov
mov
outsl
lods
jl
and
jo
sbb
add
movsb
test
and
leave
sbb
imul
and
dec
add
adc
push
loope
sbb
lock
sbb
cmp
loop
sub
lcall
push
sub
dec
aad
rcrb
sub
cmp
sub
mov
aas
into
push
xchg
in
sbb
sbb
lods
cmp
or
xchg
cmp
inc
movsb
jl
leave
mov
pop
and
sbbl
popa
jnp
push
xchg
inc
mov
addr16
adc
sbb
stc
imul
sbb
nop
fldt
cmpsb
add
bnd
lcall
push
sbb
int3
pop
pop
shlb
in
ljmp
notl
xchg
adc
shr
pop
or
int3
cld
iret
jne
sbb
inc
lret
lock
push
jecxz
mov
scas
iret
ror
je
pop
leave
sbb
int
addl
imul
cmp
call
add
jnp
dec
loope
into
and
dec
mov
sbb
insl
xorl
mov
and
repz
add
aas
pushf
pop
push
imul
pop
ds
sub
sahf
xchg
aaa
pop
cmp
sub
jo
lds
dec
cmpsl
je
or
or
enter
mov
stc
cmp
pop
cmp
mov
or
push
xor
into
jo
sub
jmp
inc
mov
mov
ret
cmp
js
test
imul
xchg
and
and
sbb
aas
and
out
mov
lret
pop
jbe
inc
adc
es
stos
fnsave
movsb
mov
mov
and
lods
cmp
push
sub
add
pop
and
sahf
push
sbb
in
jns
in
out
in
jle
shlb
dec
scas
sti
xchg
xor
lock
add
ficoml
xor
cmp
push
pop
jo
mov
jecxz
iret
sub
adc
clc
lret
dec
iret
mov
lds
mov
lods
js
sub
movsl
nop
sbb
mov
pop
in
dec
jns
add
sbbl
test
add
jl
dec
inc
xchg
push
xor
inc
xor
pop
push
popa
in
cld
rorl
add
cmp
stc
aad
pop
inc
int3
mov
cmp
adc
jo
mov
pop
lods
xchg
fdivr
cmc
ja
fsts
inc
push
pop
push
and
jle
lret
rcrb
stos
sbb
loope
mov
jne
scas
shll
bound
push
jmp
or
imul
adc
jp
orl
sbb
sar
incl
or
mov
fimull
sub
outsl
inc
xor
sbb
add
adc
adc
push
xchg
loope
out
stos
lds
mov
in
or
sahf
and
pusha
dec
xor
insb
idivb
or
push
xchg
in
std
dec
xchg
pusha
arpl
xchg
repz
push
add
pop
std
pusha
cmp
adcb
daa
cmp
push
or
mov
jb
and
out
outsl
imul
pop
lea
fstpl
frstor
mov
daa
movsb
adc
mov
das
push
jae
mov
ret
int
jne
mov
jp
jo
sahf
out
popf
pushf
lea
scas
int3
dec
xchg
repnz
xor
jmp
cmpsl
frstor
and
popa
mov
push
mov
jg
push
pop
push
fsubl
pop
adc
shll
xchg
inc
jmp
jg
pop
sub
or
out
ljmp
cmpb
fnsave
rcll
sbb
test
mov
inc
xor
and
dec
xchg
push
das
outsb
out
add
xchg
sar
rclb
dec
aad
out
or
f2xm1
lret
cli
mov
and
gs
and
scas
ret
adc
mov
xor
xor
pop
adc
dec
cmpsb
popa
dec
xchg
je
dec
fwait
mov
jge
pop
jbe
mov
pop
xchg
jae
inc
inc
push
mov
mov
pop
sbb
sub
or
xchg
movb
js
mov
stos
cmp
mov
test
push
test
nopl
popf
mov
sub
jg
jb
xor
rep
mov
cwtl
add
icebp
in
jnp
aas
call
ss
int3
xor
add
push
adc
mov
pop
mov
testb
pop
or
mov
pop
ret
jns
sub
pop
inc
push
std
adc
push
jo
je
test
mov
sub
daa
jne
jbe
icebp
out
mov
je
call
sub
jge
dec
fsts
in
adc
sub
sub
push
push
push
lds
les
jb
mov
mov
jnp
mov
mov
fdecstp
addr16
adc
clc
mov
bound
push
jge
cld
out
push
out
sbb
stc
imul
cmp
mov
xor
adc
pop
jg
loope
and
jb
and
sbb
and
xchg
fwait
push
push
cltd
mov
loop
dec
call
mov
repnz
imul
sbb
out
arpl
js
add
scas
repnz
and
sub
mov
sub
push
popw
nop
sbb
inc
add
cs
clc
inc
xchg
sub
xchg
mov
mov
xchg
xlat
cli
pushf
mov
cmpsb
adc
ss
sub
xchg
adc
scas
out
in
xchg
pop
scas
lea
fimuls
roll
cmp
stc
inc
stc
push
rcll
test
cmp
sbb
test
or
cmp
mov
sub
sub
push
stos
push
imul
pop
pop
rcll
mov
ret
stos
lea
lock
xchg
cmp
mov
aad
sub
jmp
pop
roll
cmp
sub
sub
xchg
mov
sub
stc
push
xor
mov
iret
xlat
xor
lcall
xchg
ja
adc
clc
xor
push
imul
push
pusha
insl
sbb
scas
nop
shll
je
std
fcompl
gs
stos
mov
dec
mov
sbb
cmp
pop
cmpsl
jns
pop
movsl
lret
daa
out
in
sub
test
sar
lea
ret
dec
lods
adc
mov
js
ja
or
cli
movsb
push
shrl
fcoml
inc
aas
fs
cltd
mov
loop
lret
ljmp
lods
xlat
mov
inc
push
mov
push
dec
dec
pop
mov
imul
out
dec
xor
ja
sbb
push
fwait
in
xchg
mov
xchg
add
nop
mov
orb
dec
add
cmp
pop
add
outsb
add
push
lahf
push
mov
rcl
add
pop
jns
dec
pushf
flds
int
push
out
and
fstl
mov
cmp
ss
icebp
test
push
les
push
test
lods
mov
push
fbstp
push
in
jbe
outsb
push
dec
repnz
sahf
dec
clc
inc
jle
outsl
aad
loop
stos
dec
loop
mov
inc
in
fcomi
jne
pusha
mov
jg
out
xchg
jp
sub
in
stos
sbb
adcb
inc
repnz
pop
push
jp
xor
cltd
cmc
loope
or
inc
jae
sbb
inc
sub
mov
sbbb
xor
iret
sub
add
sti
mov
jp
sahf
xor
sbb
cmp
iret
lahf
daa
popa
xchg
lds
int3
sbb
out
sbb
dec
daa
sub
sub
mov
lods
push
mov
aam
daa
test
cmp
mov
xchg
pop
sbb
push
add
fsubs
pusha
data16
enter
cmp
stos
cmp
sub
lcall
push
test
jno
inc
cmpsl
fbld
fcomp
loope
scas
jmp
sub
sbb
push
jmp
jae
mov
mov
cmpsl
aaa
cmp
pop
dec
out
adc
sub
push
dec
mov
xor
jecxz
lcall
and
out
lret
movsl
add
sbb
jb
insb
inc
jo
add
and
data16
mov
shrb
movsb
pop
xor
scas
push
shlb
in
cltd
les
test
sub
mov
stos
xchg
es
dec
mov
push
jnp
addr16
mov
repnz
mov
das
movsl
jae
popa
pop
and
mov
push
dec
push
sbb
add
add
hlt
out
cs
cmp
cmp
mov
movsl
jno
orb
ja
mov
sub
and
dec
lods
and
mov
cld
divb
push
sub
sub
mov
adc
and
cmp
dec
lret
adc
push
sub
dec
aas
pop
sub
pop
in
into
arpl
jle
xor
push
pop
cmpsl
mov
sbb
or
push
cltd
xchg
es
push
sub
mov
cmp
lcall
sbb
imul
pop
arpl
pop
xor
insb
fstl
cs
jl
insb
insb
cmp
or
rorb
sub
enter
push
jno
pop
sub
add
lahf
fldt
xchg
jo
outsb
loop
xlat
xchg
pop
jmp
fmul
jl
notl
lds
fwait
pop
lret
stos
sbb
je
jno
roll
pop
lahf
mov
bound
imul
xorb
push
lahf
jb
jns
scas
push
pop
adc
and
ss
and
sbb
sbb
data16
cmc
loopne
icebp
xlat
ret
mov
xchg
int
out
pop
es
mov
cmp
push
arpl
testl
xor
and
mov
dec
jge
cli
into
cli
jmp
sahf
cmp
inc
rcrb
cmp
lods
add
jns
in
add
adc
mov
shll
and
jns
jbe
mov
mov
out
sbb
pop
dec
cmp
mov
scas
outsb
subb
mov
jbe
xchg
dec
or
lahf
jp
rclb
or
mulb
nop
mov
in
pushf
call
push
jns
add
fdivrl
push
cltd
push
dec
cmp
je
repnz
fistpl
stc
jns
loop
pop
mov
stos
stc
andb
enter
inc
pushf
je
pop
movhps
xchg
movsl
mull
ret
add
jg
out
sub
lods
movsb
in
adc
pop
mov
fidivrs
inc
mov
out
inc
ret
out
xchg
je
push
pop
pop
mov
add
jle
repz
cli
push
add
inc
or
test
xor
lods
pop
mov
jnp
mov
sub
ljmp
xor
sbb
scas
push
jns
mov
inc
insl
imul
xlat
push
and
inc
jmp
cmova
sti
mov
sub
adc
in
xchg
call
mov
sbb
mov
mov
push
and
push
in
push
mov
jp
test
test
mov
cmp
and
out
lea
and
push
into
fs
test
sbb
xchg
adc
cs
pop
sub
add
push
push
bound
aam
into
cmp
fwait
in
fwait
pop
sub
xchg
std
into
push
mov
add
sub
int3
mov
jge
popa
stos
add
jnp
pop
jo
lcall
sub
cli
mov
cltd
push
xor
sbb
lahf
xchg
pop
add
dec
lahf
mov
fmuls
xchg
aam
fdivr
add
movsl
jge
xor
dec
sub
jbe
call
fiaddl
add
pop
jle
mov
cmp
inc
cmpb
mov
add
xchg
dec
mov
daa
and
jp
xor
pop
mov
cs
clc
mov
push
lods
in
dec
jae
sti
fsubrs
jbe
push
enter
popa
cmp
pop
xchg
mov
pop
insb
adc
fldl
out
pop
mov
test
xor
lock
rcrb
sbb
jg
and
rorl
sbb
lret
mov
in
in
lahf
adc
cs
cli
cmp
aaa
pop
push
add
fwait
out
aam
outsb
orl
pop
dec
add
mov
sti
or
int3
add
inc
mov
out
iret
adc
push
cmp
push
call
popa
lret
cmp
insl
sub
or
inc
pop
rorb
out
cmp
jns
pop
in
lds
mov
mov
push
adcb
les
jge
pop
push
sub
loop
fbld
je
cmp
jl
ficompl
pop
out
inc
arpl
mov
mov
jnp
pop
sub
int3
dec
adc
dec
ja
xor
lods
mov
loopne
insl
jo
mov
mov
sub
scas
mov
cmp
xchg
xchg
mov
loop
dec
xchg
ficompl
mov
dec
addr16
fstpl
aas
inc
dec
xchg
call
adc
xchg
jne
jno
mov
mov
mov
js
cli
rep
lods
loopne
add
call
cmpsl
loopne
aam
out
mov
lods
loopne
push
cmp
push
or
cmc
cmp
nop
clc
dec
cwtl
dec
iret
xchg
inc
je
jb
mov
in
inc
xchg
dec
mov
ja
outsb
outsl
faddp
cs
inc
xchg
divb
cmpsl
and
cmp
jns
add
mov
cvtps2pi
jnp
inc
jae
flds
rcr
shlb
and
popa
les
daa
lods
inc
pop
dec
mov
in
lds
jmp
loop
leave
mov
adc
popa
aad
test
dec
cli
fs
je
xor
xchg
sbb
mov
cwtl
fnsave
pusha
insb
call
xchg
cmp
rorb
push
xor
fimuls
push
xchg
cmp
lods
xor
push
jmp
mov
add
ds
mov
jecxz
mov
clc
xlat
inc
pop
xor
push
mov
push
pop
out
jp
dec
mov
push
rolb
mov
jmp
dec
mov
mov
inc
cld
push
int
dec
pop
pop
fdivs
sbb
jbe
jbe
gs
orl
jno
xchg
leave
adc
xchg
cltd
test
jl
out
xchg
outsb
sub
inc
mov
mov
jp
cli
pop
pop
add
ret
mov
sbb
rolb
cwtl
ja
rcl
xchg
and
cmp
inc
into
fwait
inc
and
arpl
push
std
scas
faddl
fwait
mov
xchg
pop
lahf
adc
xor
shrb
push
mov
push
pop
add
fildll
push
dec
sbb
je
and
jg
xchg
mov
sbb
lcall
loop
cli
push
pop
or
out
ret
cmpl
call
push
inc
or
mov
stc
mov
les
push
dec
mov
dec
aaa
mov
and
rclb
pop
xchg
jge
addr16
das
pop
xchg
xchg
popf
or
xorl
push
pop
stc
outsb
jp
cmc
andb
xor
andl
fisttpll
mov
pusha
pop
push
adc
pusha
pop
cltd
data16
adc
cmp
frstor
xchg
push
xchg
xchg
xchg
inc
cwtl
jecxz
mov
js
adc
daa
sub
pusha
and
or
movsl
xchg
ffreep
cli
nop
adc
or
and
stos
sub
xchg
cmc
push
dec
dec
xchg
enter
dec
inc
stc
scas
scas
pop
and
int3
and
popf
ljmp
and
cmp
jns
sub
mov
inc
and
dec
fstps
mov
lods
push
test
test
es
mov
in
lods
mov
dec
sub
popf
mov
mov
pushf
mov
outsb
js
inc
or
test
repnz
xor
jo
push
inc
insb
mov
repz
dec
in
mov
in
push
in
or
push
inc
sti
xorl
shll
out
lret
call
add
xor
fwait
mov
in
subl
mov
iret
ljmp
lock
int3
mov
xor
lods
sahf
dec
movsb
movsb
push
xchg
jp
inc
in
ret
pop
add
sbb
and
popa
rcr
in
push
cmp
jb
jmp
packsswb
mov
pop
jle
xor
imul
mov
xor
sysexit
jp
dec
bound
dec
sub
xor
inc
xor
movsb
sub
stc
insb
jl
add
jb
test
les
icebp
and
orl
dec
cmp
clc
cmp
add
push
sbb
inc
repnz
mov
fdivr
mov
fwait
out
xor
jae
data16
mov
pop
sbb
pop
sarl
scas
sbb
out
dec
shll
repz
xchg
add
xchg
sub
cltd
xchg
jecxz
fs
fwait
test
cmp
cmpsb
addr16
es
inc
fisubrl
repz
or
sbb
jo
xchg
ja
push
pop
push
and
or
dec
std
inc
push
popf
mov
xchg
aam
out
mov
add
andl
xchg
push
mov
fucomp
mov
mov
cwtl
imul
or
cmc
fidivs
rorb
jb
xchg
dec
sbb
stc
cmp
repz
inc
stc
movsb
cwtl
test
and
and
push
pushf
popa
push
fisttpl
outsb
jae
dec
mov
lahf
orb
mov
xchg
lock
js
or
adc
xor
loopne
lret
ja
les
xchg
fsubl
xorb
aad
aad
jo
ret
inc
fwait
adc
out
test
psllw
fs
pop
adc
mov
xor
iret
fsubrl
stos
out
leave
xchg
sbb
mov
into
mov
jle
push
sub
lock
pusha
sub
ss
mov
inc
add
int
daa
jae
cmpsl
dec
leave
push
mov
adc
ret
xchg
cld
dec
mov
test
inc
pop
and
nop
and
sbb
jae
mov
iret
pop
dec
cli
inc
inc
sbbl
pop
lds
or
pop
mov
outsb
scas
fdivl
and
rcrb
add
sub
imul
mov
jne
cltd
pusha
sti
inc
call
rcrl
jae
fsubrs
clc
sub
inc
and
push
test
test
test
fcoml
rcr
push
push
movsb
sub
jg
insb
cli
xchg
mov
push
stos
imul
sbb
mov
push
call
mov
ret
iret
outsb
pop
hlt
and
inc
xor
inc
mov
xor
jl
popa
jp
lock
and
mov
fiadds
movsl
mov
insb
push
sbb
or
cltd
sub
outsl
mov
inc
push
dec
push
mov
addr16
xlat
rorl
cmp
cmpsl
dec
xor
pop
cmp
cli
test
subl
jnp
fmuls
push
rcr
cmp
sti
mov
rcrl
dec
sub
lahf
fmull
and
sti
add
jae
ret
push
pop
mov
aam
arpl
sub
push
shlb
mov
out
inc
sbbb
pop
dec
enter
fwait
lea
les
and
sub
nop
adc
pusha
adc
int3
fcompl
call
lahf
in
xchg
repz
and
lea
sub
mov
jg
lock
bt
mov
lret
adc
es
cmp
sub
das
cmp
adc
shl
in
pop
testb
das
dec
lods
cmovne
push
es
std
es
gs
movsl
fs
add
flds
cmc
ja
lcall
cwtl
stos
ja
jle
cltd
xor
cs
dec
pop
ret
orb
movl
or
mov
cld
jmp
ds
mov
xchg
sub
push
inc
out
inc
shlb
mov
cmp
outsl
bound
lahf
pop
fldt
jl
and
lahf
or
mov
dec
push
or
jle
mov
in
repnz
xor
mov
repz
pop
lcall
mov
ret
push
sub
mov
out
aaa
pop
xor
popf
cmp
jle
in
hlt
or
xor
mov
subb
push
lea
mov
je
ljmp
mov
rorb
and
scas
fisubs
dec
sbb
mov
and
ljmp
xchg
popf
dec
std
cmpl
mov
sub
jbe
jno
ret
add
clc
xchg
adc
jne
dec
xchg
pop
scas
test
jo
in
inc
inc
scas
jmp
and
gs
pop
mov
fldcw
fwait
mov
push
mov
adc
pushl
xchg
inc
mov
repnz
adc
scas
mov
adc
jg
inc
stc
lcall
loopne
and
jge
push
lret
inc
and
shlb
inc
sar
xchg
inc
or
jne
xchg
jns
inc
xlat
inc
cmc
jae
sarb
mov
jg
sbbb
clc
jno
sub
hlt
test
add
lea
add
gs
mov
orb
cld
data16
ds
shr
scas
dec
shl
notb
insl
jl
fwait
lds
icebp
test
dec
mov
ds
scas
rolb
pusha
sub
pop
and
insl
and
adc
cmp
outsb
cli
repnz
jo
or
adc
pop
iret
ficompl
mov
pop
sub
int3
bound
aad
inc
clc
hlt
insb
test
pusha
add
mov
loopne
push
daa
test
push
lahf
xchg
ret
xchg
push
inc
ret
insl
jle
sub
push
mov
push
std
pop
aas
push
leave
mov
xchg
out
ds
xor
rcrb
add
pop
xor
xchg
jno
in
xchg
mov
mov
sbb
mov
test
aam
negb
mov
rol
pusha
push
jno
pusha
jmp
cli
test
imul
add
lds
xor
or
and
aad
pushf
les
sbb
mov
and
pop
or
jns
xchg
cs
xchg
mov
bound
clc
jne
push
sbb
mov
or
dec
stos
add
mov
je
into
inc
out
cmpsb
jae
lds
sub
cmp
mov
lock
dec
push
fwait
adc
mov
dec
mov
mov
insb
and
mov
ljmp
out
jno
lret
mov
cs
sub
sbb
mov
in
jb
mov
cli
or
mov
push
imul
cltd
pop
cmp
repz
rcl
jo
xor
lods
and
pop
pusha
pop
cli
and
cmp
aaa
frstor
aam
adc
pop
mov
cmpsb
or
sub
sub
or
int3
jno
aad
hlt
in
jge
fcoms
movsb
inc
push
push
jbe
bound
cmp
mov
add
pop
push
gs
out
sbb
jmp
adc
pop
and
lds
mov
nop
scas
and
inc
pushf
rcr
and
or
addr16
fmul
inc
hlt
cs
xor
mov
clc
inc
rcrb
fs
and
aaa
mov
xchg
js
frstor
push
mov
xor
fsubl
fwait
inc
mov
iret
out
mov
out
or
push
xor
and
aad
dec
push
sbb
jbe
pop
xor
cmpsl
lods
push
inc
movsb
or
sbb
push
cmpsb
in
sub
roll
sub
pop
ds
jge
vmovhps
dec
push
sub
dec
pop
sub
sbb
test
les
test
dec
stos
or
loope
adc
pop
outsl
sbb
divb
mov
movsl
adc
insl
stos
int3
int3
gs
push
mov
mov
stos
mov
sbb
cmc
scas
jge
lret
xor
mov
cmp
fwait
iret
pusha
inc
or
xchg
mov
xchg
fwait
ljmp
test
adc
jp
add
xor
or
cmp
inc
fsts
jle
sbb
lock
ja
in
repnz
xchg
dec
xchg
daa
imul
dec
sub
ja
push
mov
jecxz
push
xchg
push
loope
decl
sbb
inc
inc
mov
scas
sub
lods
lahf
jmp
xor
mov
in
rolb
icebp
sub
pop
jnp
ret
cmc
lock
popf
int3
sbb
icebp
sbb
add
sbb
pop
mov
cltd
adc
sti
enter
xrelease
adc
xchg
nop
rclb
pop
mov
or
add
push
pop
xor
xchg
das
add
and
lcall
add
mov
sbb
cmc
pusha
int
ljmp
shl
pusha
mov
push
ficomps
push
mov
outsl
xchg
mov
push
shrl
jp
in
cld
mov
pop
hlt
leave
xor
mov
lret
cmp
popa
jmp
repz
pop
lahf
add
push
insb
push
jg
in
add
orb
xor
sbb
jb
sub
mov
pop
xchg
mov
outsl
mov
jg
xor
ljmp
and
mov
mov
sub
lcall
jno
cmp
mov
mov
adc
ljmp
xor
sbbl
cli
or
fsts
scas
push
or
cmpsb
inc
sbb
push
rcll
adc
and
lods
movhps
sub
lret
push
mov
pop
es
and
sbb
fisubl
in
subb
push
xchg
xor
ficompl
push
add
xchg
push
sbb
xchg
outsl
cmc
idivb
pop
jl
imul
sbb
add
pop
les
add
insb
xor
enter
sbb
pusha
xor
nop
and
xchg
xor
or
in
pop
xchg
ret
xchg
mov
repnz
or
mov
out
popa
jns
cmp
in
aaa
negb
daa
in
dec
jmp
jno
jmp
lods
daa
xlat
scas
outsb
call
fdivs
jecxz
push
mov
cmpsb
add
movsl
clc
sub
lock
mov
xchg
sub
xchg
sahf
and
mov
pop
scas
cmpsb
cmpsb
je
and
dec
mov
mov
fisttpl
xor
jge
adc
add
cs
jbe
push
lods
movntq
movsb
pop
add
add
pop
mov
jmp
mov
ljmp
push
adc
jg
mov
mov
orl
in
adc
adc
imul
cmp
lcall
dec
xor
test
outsb
int3
xchg
jecxz
popa
icebp
fisubrs
ja,pn
in
imul
mov
push
cmpl
fwait
mov
xlat
rcrb
mov
ret
call
jnp
test
mov
pop
mov
jne
fwait
mov
dec
pop
jae,pn
dec
test
in
mov
mov
test
jl
pop
mov
and
push
aas
xchg
icebp
mov
rorb
aam
aaa
or
mov
push
fwait
movsl
mov
sub
mov
lcall
cmp
aas
inc
mov
xchg
pushf
mov
dec
imul
jl,pn
or
arpl
gs
inc
dec
mov
mov
jae
cltd
fidivl
and
lret
sahf
mov
cmpsl
sub
or
xor
aas
movsl
push
jne
fidivs
dec
out
pop
arpl
cmp
mov
sub
and
pop
push
sbb
scas
cmp
scas
xor
mov
aam
mov
je
jle
push
jl
dec
fidivs
lods
fs
dec
pop
lods
clc
mov
cmp
adcl
faddp
repz
shrl
sub
test
cmp
or
lea
sbbb
xchg
loop
cli
cmpsb
movsb
stos
adc
fldt
jecxz
inc
fmuls
dec
mov
cmpsl
in
add
xchg
adc
lret
or
in
sub
xor
jae
int
adc
and
pop
clc
sbb
shll
aas
xor
pushf
jmp
dec
add
inc
jbe
and
cmpsl
frstor
adc
mov
inc
in
js
std
bound
es
enter
scas
pop
xchg
jbe
xchg
xor
cmp
in
adc
ljmp
aas
stos
movsl
mov
clc
pop
xor
sahf
sbb
scas
bound
popf
das
lahf
lock
sbb
pop
pushf
popf
xor
inc
fmul
sbb
hlt
int
jecxz
dec
mov
xchg
das
inc
cld
fisubl
cs
loope
mov
cmp
dec
xor
into
and
cli
xchg
cmp
js
imul
mov
pop
jecxz
addr16
add
loope
rcll
cmp
shl
repnz
xchg
push
outsl
lret
loop
pop
aam
fldl
sets
and
xor
repz
cwtl
dec
mov
int3
cmp
mov
jne
outsb
aad
leave
mov
lahf
sbb
mov
jecxz
jno
mov
push
ja
in
std
mov
mov
popf
psrlw
cmp
enter
sbb
jp
and
daa
imul
call
mov
sub
lea
xchg
popf
lahf
inc
mov
cmp
jno
aas
neg
ljmp
mov
addl
cwtl
push
into
and
loop
sarb
hlt
ja
roll
mov
pop
or
mov
dec
loope
shll
fisubrs
mov
pop
adc
loop
jmp
loope
push
push
jg
xlat
pusha
loope
pop
out
or
lods
mov
pop
xchg
fists
test
jo
mov
push
jmp
ljmp
pusha
data16
mov
leave
cs
inc
lods
adc
fistpll
leave
sub
xchg
add
xor
sahf
adc
jecxz
ja
jns
call
shll
sbb
lock
sti
nop
pop
cmp
orb
mov
xchg
sub
sbb
pushf
xchg
sbb
add
fs
call
push
test
nop
xor
mov
xchg
jnp
dec
xor
mov
cld
push
add
jno
inc
test
lods
ret
out
dec
mov
mov
cmp
mov
std
jg
mov
cmp
stos
das
dec
mov
iret
mov
addr16
xor
inc
mov
fnstsw
sbb
test
aas
aas
lea
je
sbb
je
outsb
adc
fsubp
in
inc
add
jnp
test
and
lods
inc
sub
sub
lods
imul
pop
adc
lret
jmp
scas
call
jno
cmp
fcomip
daa
add
jnp
in
orl
push
mov
jg
stos
cmc
mov
and
pop
xor
sub
sarb
mov
add
lret
out
push
fdivrl
and
dec
push
xor
jle
nop
icebp
xchg
push
push
lcall
pop
into
push
stc
pop
cmp
mov
sbb
stos
xor
xor
dec
jp
inc
shl
push
outsb
cmp
push
mov
jo
lock
fwait
pop
and
push
lret
cmp
loopne
or
sub
dec
aad
nop
xor
in
sti
mov
mov
leave
jbe
pop
jle
xchg
sbb
adc
sub
mov
and
xchg
mov
cmovs
fidivrs
das
scas
roll
mov
lahf
mov
jp
das
jbe
sahf
adc
ror
mov
fists
loop
dec
sub
push
jmp
pop
popf
xor
xor
lret
movb
pop
cmp
out
stc
jb
push
mov
loopne
jp
adc
push
inc
or
shr
mov
add
in
in
jno
mov
mov
jb,pt
pop
shlb
fcoms
jmp
imul
push
dec
aad
rolb
mov
rcrl
popa
fcoms
sbb
inc
or
dec
and
gs
xchg
cmpsl
iret
test
mov
fsubrs
idiv
mov
push
add
xchg
repnz
inc
push
lret
cmpsb
push
daa
push
or
xor
mov
dec
push
ds
or
jmp
or
jmp
sub
push
xchg
push
je
cmp
ret
xchg
adc
push
aad
xchg
test
inc
in
pop
mov
add
gs
dec
and
insl
or
inc
sub
pushf
jl
mov
jns
inc
dec
leave
movsl
out
mov
xchg
and
lock
xchg
cmp
mov
in
test
int
add
cmc
pushf
ret
push
jo
lahf
or
and
push
imul
mov
inc
mov
call
xor
bound
jle
jecxz
inc
or
push
push
lcall
dec
or
jmp
imul
lahf
stos
loop
scas
bound
fs
test
rcrl
or
mov
jb
jg
cmp
push
mov
pop
int
dec
and
enter
call
cmp
stos
arpl
jo
imulb
push
pop
dec
ret
and
daa
add
fisubrl
test
push
gs
sbb
xor
push
pop
mov
sbb
push
aam
aad
mov
jecxz
nop
mov
push
and
leave
inc
sbb
or
rcrl
xchg
mov
dec
cmp
gs
sbbl
adc
arpl
hlt
fsts
loop
cli
in
dec
add
dec
mov
data16
dec
out
test
push
push
sti
mul
test
xchg
test
push
push
jns
pushf
cmpb
negl
icebp
loopne
lock
and
in
clc
leave
pop
repz
popa
je
stos
adc
sbb
loopne
in
mov
icebp
pop
xchg
xchg
fildll
sbb
jle
cmp
idiv
fdivrs
in
cmp
cmpsl
cld
rcll
daa
lret
mov
sbb
push
pop
adc
lods
lret
iret
div
jno
fildl
pushf
icebp
out
xlat
js
cltd
mov
fidivl
push
in
xor
int3
bound
aad
imul
setns
push
pop
push
jb
int3
xrelease
das
jmp
hlt
in
popa
jbe
das
cltd
das
pop
aas
sti
and
outsl
fisubrl
pop
push
mov
xchg
xchg
stos
mov
mov
and
lret
xchg
out
bound
mov
stc
lahf
lret
jns
xchg
dec
fbld
test
idivl
sahf
and
imul
in
cli
dec
jge
js
mov
cltd
aam
sub
sti
inc
jbe
call
imul
rol
jge
mov
rorb
rclb
dec
test
inc
andl
loop
fistps
mov
pop
jge
sahf
inc
int
fs
sbb
adc
xor
xor
add
mov
shll
idivl
sbb
lret
stos
push
dec
jae
push
add
scas
push
cmp
shr
int
jmp
push
out
ds
push
imul
pop
lahf
dec
sbb
dec
lcall
jns
and
test
jle
pushf
call
and
pop
pop
mov
ss
sbbb
xchg
mov
stos
ffree
cmp
push
daa
or
dec
xor
xchg
xchg
dec
jmp
fisubs
add
adc
ret
loopne
dec
xlat
loop
mov
xchg
inc
xor
inc
sbb
outsl
sahf
and
dec
in
mov
adc
sub
ss
out
mov
mov
jmp
int
sbb
mov
and
subl
pushf
xchg
mov
dec
fsts
ja
shll
in
mov
aad
in
out
mov
push
notb
dec
sbb
push
out
arpl
jne
clc
ljmp
icebp
dec
pop
pop
pusha
notb
xchg
push
xor
adc
pop
mov
mov
ret
mov
orb
sti
mov
ja
dec
push
mov
jb
push
push
pop
mov
jp
test
in
jb
js
mov
sub
out
pop
das
cmp
lret
adc
lahf
dec
and
jmp
js
inc
arpl
cmp
hlt
insl
movsb
lcall
ljmp
test
shrb
in
adc
frstor
dec
repz
das
icebp
mov
inc
xor
cmc
xlat
mov
notl
shll
cmp
aam
pop
cmp
inc
push
xor
in
dec
shr
leave
js
cmc
add
cmpsl
aaa
adc
mov
mov
add
mov
es
test
mov
loopew
lahf
inc
sbb
push
aas
pop
test
add
stos
pop
sub
dec
xor
lcall
push
push
adc
push
jb
stc
shll
cs
icebp
mov
fs
cmp
jmp
pusha
dec
sarb
mov
divb
xor
cmc
inc
idiv
ss
push
lcall
or
or
pushl
insb
jns
inc
and
xchg
add
rcrl
test
scas
data16
fldl
push
push
push
mov
in
sbb
sub
sahf
inc
xor
pop
push
add
lea
dec
addl
push
das
add
cmp
jle
push
icebp
mov
and
and
lods
add
stos
mov
adc
cmc
xor
faddl
repnz
jle
out
inc
mov
mov
inc
mov
jo
lret
incl
push
inc
lods
sti
mov
int3
pop
adc
outsl
mov
cmp
jge
jae
xor
lret
push
xor
xchg
fistl
pop
cmp
pushf
xor
add
jb
ret
outsb
pop
xlat
xchg
lcall
popa
loope
insl
fld
out
jmp
stos
mov
test
sub
nop
push
cmp
xchg
cmp
xor
mov
cmp
fsubl
fistpll
outsl
call
add
stc
or
sbb
add
inc
aad
pop
adc
fs
outsb
xchg
addr16
sti
push
fisubl
leave
icebp
insb
shl
dec
adc
lods
inc
pushf
inc
adc
mov
adc
push
lret
fisttps
daa
rol
push
cmpsl
mov
jmp
popa
and
mov
mov
mov
dec
stc
icebp
adc
pop
push
ficoms
cmp
lcall
test
movsl
inc
in
mov
jns
cmp
jns
test
divb
loop
test
mov
xchg
scas
lret
dec
insl
xor
jb
addr16
aaa
inc
dec
push
xchg
push
jno,pt
add
xchg
xchg
lods
adc
lds
add
test
gs
dec
and
push
out
popa
test
push
mov
lds
pop
call
test
jae
mov
cmp
in
add
adc
sbb
dec
rcrb
stc
dec
or
dec
push
xor
loope
and
aad
xchg
jl
or
mov
xchg
adc
int3
cld
loop
xor
mov
cmpsb
aad
mov
clc
inc
push
dec
fnstenv
or
xchg
subl
and
jl
add
xlat
ret
cs
push
push
in
test
mov
add
push
popa
cmp
inc
subb
mov
out
sti
xor
mov
push
in
stos
jmp
push
in
popf
xor
pop
dec
shl
inc
inc
in
pop
cld
sub
push
add
cli
cmp
es
jo
xchg
xchg
shlb
pop
adc
faddl
jmp
test
adc
out
test
xor
mov
mov
cmc
inc
push
jb
or
mov
int3
mov
imul
sbb
pop
adc
push
jns
subb
ja
xor
mov
mov
aaa
dec
out
xor
bound
fstpt
pop
mov
push
inc
xchg
lods
push
push
jnp
in
push
push
test
or
incb
xchg
ljmp
subl
mov
mov
mov
leave
push
add
inc
shlb
ret
dec
and
leave
sahf
sbb
adc
fmuls
cli
add
sub
cmp
inc
js
int3
jge
into
rcrl
xlat
or
lds
add
fldt
sbb
dec
xchg
dec
decb
clc
insl
sbb
scas
mov
sub
push
pop
lcall
mov
ja
lcall
xlat
aad
icebp
cmp
repnz
ficoml
add
call
ficomps
mov
shlb
adc
mov
mov
jb
cmp
sbb
mov
sub
cmp
dec
les
mov
xchg
mov
cld
xchg
mov
cmp
int
and
jb
es
jp
dec
push
xchg
mov
mov
or
lahf
mov
jbe
sbb
xor
dec
cmp
enter
adc
push
and
cmp
pop
inc
push
neg
xor
adc
call
mov
push
inc
inc
test
js
inc
pop
es
lret
inc
lret
inc
std
sub
ret
pop
lret
sub
mov
add
sbb
std
pop
pushf
cmp
je
subb
pop
cmpb
jno
adc
sub
pop
lret
adc
lea
jg
mov
mov
pop
cli
push
xor
lods
push
or
test
xchg
lock
adc
movsb
and
ficomps
cld
jnp
cmp
xchg
and
pusha
cli
mov
jno
into
nop
or
sbb
inc
bound
in
jmp
or
add
xor
xchg
cs
inc
aad
cmp
sarb
add
lahf
mov
xor
std
notl
add
in
xor
and
jbe
lcall
inc
iret
adc
popa
scas
leave
jno
cwtl
cmp
and
jge
adc
mov
outsb
cmpsb
shl
push
push
xor
addr16
xchg
adc
pop
dec
fistps
das
mov
movl
cwtl
fdivl
dec
xor
fwait
ss
test
data16
push
dec
jb
rcrb
sahf
jecxz
lock
inc
cs
cmp
xor
mov
xor
ljmp
and
push
in
iret
cmc
roll
test
inc
add
push
mov
cmp
ljmp
pop
je
addr16
pop
and
adc
inc
mov
sbb
fwait
ss
imul
inc
add
cmpsl
mov
ds
imul
pop
lea
mov
out
rcrb
or
pop
adc
loope
sub
pop
push
pop
mov
icebp
jle
push
jge
mov
jecxz
lahf
repnz
fmuls
mov
lret
negl
sub
push
xchg
das
lock
mov
addr16
jl
add
test
sbb
sub
xor
jmp
mov
pop
faddl
fwait
cmp
or
fsts
jle
incl
jo
sahf
fistl
je
int3
iret
jbe
add
leave
aam
mov
xor
and
mov
and
or
jl
inc
aad
inc
push
dec
cltd
sub
repnz
out
pop
scas
test
add
cmp
fistpll
enter
adc
xchg
mov
stos
inc
jo
ret
outsl
aas
lods
js
sbb
mov
sbb
outsb
adc
sbb
aas
aas
test
int3
cltd
pusha
aaa
ret
mov
ds
mov
daa
or
loopew
xchg
mov
sbb
jecxz
or
es
sbbl
in
push
fildll
fwait
stc
pop
or
jge
stc
notb
adc
out
rcrb
cmpsl
sahf
daa
rcr
addl
mov
adc
out
shr
repz
pop
addr16
push
mov
js
push
inc
pop
out
inc
jmp
pop
out
in
push
mov
imul
sbb
cmc
xchg
ds
push
push
out
icebp
ds
popa
and
hlt
push
orb
and
cmp
pop
xor
das
inc
aad
fwait
lock
xor
add
adc
daa
mov
xor
push
mov
cmp
movsb
push
xor
imul
xchg
adc
lahf
cltd
lcall
or
push
or
xchg
rcl
cmpsl
fs
clc
push
arpl
adc
es
mov
pusha
cld
sub
dec
add
outsb
sbb
icebp
adc
dec
adc
je
sub
dec
sub
xor
jl
jnp
in
jno
or
mov
out
mov
push
daa
inc
aaa
sub
lock
aam
sahf
in
pop
outsb
fdivr
pop
jb
cmp
into
push
lret
in
insb
xchg
mov
adc
jmp
mov
shl
stos
rcrl
insl
pusha
or
das
and
xor
mov
lods
sbb
jb
stos
pushf
pop
mov
int
dec
call
push
xorl
fbld
cmp
test
xchg
dec
jnp
repz
push
and
and
ja
mov
cmpl
dec
sub
lea
cmpsb
jae
mov
xchg
mov
outsb
into
jnp
xor
stos
cmp
test
or
out
xchg
xchg
fisttps
or
das
pop
insl
mov
xor
mov
push
cld
jae
outsb
out
pop
add
in
sub
push
scas
rorb
insb
shlb
lods
jb
int3
in
push
push
jg
push
mov
push
test
test
and
aaa
sub
jg
popa
fmuls
xorb
inc
psubusw
lret
cmp
ljmp
mov
add
lods
icebp
mov
cmp
mov
jg
add
add
in
rcr
subb
sbb
ret
mov
xor
flds
aad
enter
mov
aam
lahf
movb
rclb
out
cld
rclb
sarl
test
int
fucom
and
sbb
mov
mov
push
push
adc
insb
notb
mov
push
ds
mov
mov
or
in
inc
and
cwtl
add
adc
xor
push
test
lea
movsl
jge
pop
mov
inc
dec
es
das
adc
sbb
fwait
sbb
cmp
lods
das
cmp
pop
adc
inc
xor
subl
std
inc
and
stc
adc
fbld
shrd
adc
cmp
js
and
xlat
clc
popf
or
or
das
mov
rclb
xchg
imul
or
std
sub
lods
imul
dec
inc
nop
mov
mov
pusha
sbb
jp
mov
test
ss
push
outsl
xchg
stc
add
int3
jo
push
leave
dec
scas
mov
pop
jle
push
pop
or
mov
or
xchg
fimuls
adc
inc
push
loop
fwait
pop
mov
fsts
addr16
pop
outsl
mov
and
test
add
inc
dec
pop
scas
cs
flds
sti
out
sbb
jle
cmp
imul
shlb
pop
sbb
mov
and
xor
cs
cmp
stos
popa
in
loopne
lds
jne
je,pt
and
js
out
sub
push
fwait
xor
repnz
aam
data16
rclb
add
mov
adc
aas
in
mov
lock
xchg
cmp
sahf
and
cs
lea
jno
mov
inc
je
data16
and
or
cmpsl
movsb
fwait
pop
es
aad
pop
adc
andl
sahf
pop
jne
lods
add
lcall
jno
or
sbb
ds
dec
jecxz
sbb
add
pop
add
lods
dec
xchg
jp
push
out
sub
push
outsb
fbld
jmp
mov
shlb
and
push
jb
int3
in
xchg
mov
out
lock
xchg
push
push
xchg
cmpsb
or
rol
dec
and
addb
add
xor
lcall
or
cmpsb
pop
push
mov
pop
jmp
or
adc
pop
orl
mov
data16
pop
mov
out
int3
not
ljmp
lock
dec
ret
fdivrl
int
xlat
pusha
push
adc
dec
cmc
jbe
ret
sti
lods
or
aas
adc
mov
lret
std
cmp
lcall
mov
pop
in
push
mov
fdivl
loope
cs
sbb
out
xchg
cmpb
xor
test
fidivrs
mov
stc
inc
push
dec
pop
mov
cs
xchg
fdiv
testl
xrelease
mov
add
dec
testb
andb
or
inc
testb
rcl
cs
je
jge
mov
test
inc
adc
pushf
rclb
mov
ret
pop
sbb
mov
loop
movsb
pop
cmp
xchg
sub
xchg
or
cmp
mov
imul
mov
mov
xchg
pop
mov
lahf
psubusb
in
or
clc
pop
bound
mov
into
pop
dec
hlt
xchg
cmp
cmp
xchg
fidivl
movsb
out
or
sbb
movsl
mov
mov
sbb
sub
xchg
dec
sbb
push
fxch
cli
jnp
loopne
stos
pop
xchg
add
push
dec
or
pop
mov
imul
add
inc
jns,pn
cli
xchg
ss
movsl
outsl
lcall
cwtl
push
mov
pop
outsb
mov
nop
lods
inc
cmp
aas
orb
pop
adc
mov
sub
sbb
dec
mov
fstl
push
loopne
in
fidivs
out
outsl
repnz
loop
ficompl
ljmp
sahf
adcl
add
sbb
mov
or
xor
mov
and
int3
cltd
pop
sub
jg
sahf
dec
mov
or
lock
xchg
push
rorb
movsl
aaa
sub
inc
jg
jmp
jl
and
or
push
mov
pop
and
pop
lea
call
in
dec
mov
jle
add
cmp
dec
adc
mov
xchg
insb
lahf
and
cmc
xchg
jmp
aaa
ret
mov
jge
les
push
cmp
ja
mov
sbb
mov
xchg
inc
pop
mov
mov
xor
mov
mov
pop
push
sbbl
push
enter
xor
fwait
xor
mov
dec
mov
cmpsb
adc
cmp
jmp
sub
dec
lcall
or
xchg
mov
xlat
pop
cmpsl
xchg
sub
mov
sub
xchg
cmovne
movsb
loopne
inc
pop
aam
divl
cld
testb
sub
aas
and
mov
fstps
sbb
out
inc
mov
popf
xchg
dec
sub
xor
pop
loope
scas
mov
bound
lea
fstpl
pop
lahf
in
outsl
jno
daa
mov
lock
mov
rolb
xchg
lds
cmpsb
lea
movsb
mov
xchg
add
push
or
mov
dec
push
fistpll
lods
and
mov
into
push
cmpsb
aaa
daa
fsubl
int3
push
fucomp
ja
lea
mov
jge
insl
and
xor
bound
iret
lock
sub
mov
adc
mov
mov
dec
pop
push
mov
jo
cmp
or
repnz
push
lcall
fmul
and
add
xor
inc
xchg
enter
movsl
lret
jo
je
jb
lret
pop
test
insb
lds
outsb
hlt
and
ja
sbb
aas
cmc
adc
lods
push
daa
out
pop
fdivrs
sbbb
add
ret
pop
fdivl
insl
je
out
and
mov
add
or
cmp
pop
pushf
or
aam
cs
xor
ds
sbb
inc
in
cmpsl
push
pcmpeqw
jecxz
sub
adc
jle
call
imul
rclb
test
aaa
mov
sub
ret
inc
xlat
fildll
mov
push
xor
ds
icebp
out
in
inc
ret
cli
push
inc
sti
out
xorl
mov
mov
or
das
outsb
outsb
into
movsl
xchg
andl
hlt
movsb
scas
sub
out
jmp
adc
xor
mov
cmpsb
or
mov
xor
push
inc
gs
add
gs
fwait
mov
cli
mov
mov
movsl
pop
daa
xor
adc
cmc
enter
mov
jmp
adc
inc
pop
mov
jge
dec
notb
xor
pop
jae
cs
xor
insl
out
cs
mov
fs
push
pop
rorl
popa
mov
test
shr
sbb
fnstenv
sub
loop
mov
test
ljmp
push
adc
popa
outsl
push
pop
mov
pop
xor
sbb
mov
dec
dec
add
pop
push
dec
cmp
or
inc
mov
cmp
mov
mov
xchg
mov
test
pop
ret
pop
outsb
push
fsubl
xchg
xchg
adc
in
mov
daa
mov
mov
cmpsl
mov
xchg
adc
fcomps
or
adcl
xchg
aam
jl
or
out
lret
das
stc
adc
inc
insl
sti
lods
es
ja
arpl
jnp
test
out
fimull
std
scas
ficomps
xlat
leave
movsb
and
or
call
loopne
cld
outsl
cmpsb
fistps
aad
and
jl
pop
aas
pop
push
std
cwtl
add
es
xor
stos
mov
xor
xchg
pusha
mov
cmp
dec
cmp
push
push
sbb
loope
outsl
fisttps
adc
mov
mov
or
flds
adc
sbb
and
sbb
movsl
push
sub
mov
jns
jmp
je
dec
sbb
shrb
jno
mov
push
add
repnz
xchg
cs
fldcw
add
sbb
icebp
popa
rclb
xchg
jecxz
pop
adc
shl
fdivr
aam
or
push
push
pop
imul
mov
push
fbstp
inc
pmulhw
ret
jbe
mov
jns
test
xor
maskmovq
negl
cmpsl
or
jbe
push
lock
sub
ss
jg
jns
jb
dec
dec
pusha
loopne
mov
in
add
push
rcrb
int3
pop
aas
cli
push
lods
push
outsb
movsb
xchg
insb
in
outsl
fisttpl
movsl
mov
stc
iret
or
mov
test
mov
xchg
add
sub
sbb
cmpsl
pop
jp
out
movsb
jecxz
dec
jb
mov
or
inc
pusha
jecxz
inc
ja
shrl
loop
pop
dec
leave
cmc
dec
loop
mov
iret
cld
jmp
sbb
lea
push
andl
in
inc
dec
test
and
xor
je
xor
lahf
sbb
lds
dec
fwait
push
jo
inc
mov
jb
xlat
cltd
and
lds
xchg
outsb
addr16
and
add
popa
sub
dec
add
mov
lea
dec
sbb
adc
in
idivb
xor
loope
cmp
in
loope
xor
jae
push
cmc
pop
xor
mov
add
xor
add
stc
inc
dec
rorl
fs
push
jp
mov
push
inc
mov
inc
xorl
jmp
in
out
inc
daa
push
mov
adc
mov
sbb
movsl
cs
dec
in
mov
outsl
popa
and
mov
hlt
out
das
je,pn
cmpsl
push
js
mov
inc
jecxz
xor
xchg
jno
mov
sub
add
push
adc
jl
leave
push
push
popa
insb
ficompl
lds
lock
loope
iret
lock
mov
cmp
iret
aaa
xchg
mov
cltd
jo
fldenv
xor
ja
and
hlt
les
and
es
sub
addr16
daa
cmpsl
mov
aam
test
cmp
mov
cs
push
pop
sub
sub
pop
nop
xchg
cld
inc
cmp
nop
pop
xor
jl
movsb
pop
mov
xchg
fwait
inc
ret
into
out
out
arpl
lea
lret
or
push
lahf
jmp
add
rcrl
mov
push
or
popl
cmp
cwtl
mov
aaa
leave
flds
add
ret
jne
leave
push
insb
add
pusha
cli
movsb
js,pt
mov
lods
movsl
cs
push
and
cltd
es
cmp
mov
out
mov
es
leave
dec
cld
xchg
aam
push
and
popf
pop
stc
dec
int3
int
jge
es
and
out
cmp
sbb
pop
sbb
dec
div
call
xchg
ret
mov
or
call
mov
fsubrs
jmp
shlb
lcall
cld
or
or
out
sahf
ret
dec
dec
mov
dec
lret
inc
in
test
sti
xor
arpl
push
cmpsl
test
lahf
xchg
fsubs
adc
stos
aaa
or
lcall
cld
out
jecxz
inc
mov
test
push
aad
in
lret
fmulp
jl
mov
push
sbb
inc
adc
push
in
call
repnz
pop
jne
inc
ret
inc
pop
pop
inc
or
push
mov
sbb
fisttps
and
sub
xchg
pushf
pop
sub
mov
push
popf
fwait
mov
xor
adc
inc
adc
neg
and
popa
adc
fildll
cmp
movl
adc
push
xchg
sbb
je
ljmp
jp
out
cmc
fldcw
or
xchg
adc
sub
and
pop
shl
inc
nop
bound
pop
test
cld
push
add
fdivrl
pop
rcrb
pop
icebp
aas
cmp
adc
or
mov
adc
out
mov
pop
pop
clc
lea
pop
cmp
xchg
pop
rcrl
subb
xchg
xchg
and
xchg
repz
test
sbb
into
sub
pop
dec
repz
sahf
outsl
mov
dec
js
fimull
call
mov
mov
mov
adcl
std
and
dec
pop
loopne
jp
insl
popf
mov
pushf
lock
jmp
pop
arpl
aas
es
cmp
add
shrb
in
cld
adc
mov
clc
aam
call
xor
mov
push
fcmove
pop
push
adc
pop
jecxz
and
xchg
outsb
inc
adc
shrb
mov
insl
xor
jno
mov
iret
jmp
aad
hlt
in
xor
pop
jecxz
stos
lock
jns
jns
or
mov
cld
enter
mov
add
mov
jp
xor
sbb
push
aad
add
sbbl
mov
jecxz
push
cmp
in
sub
sub
sbb
push
rorb
test
dec
push
rorl
je
das
pop
data16
adcw
leave
mov
cmpsl
cmp
hlt
pop
icebp
sub
sbb
in
clc
push
sub
stos
pop
sub
out
inc
mov
sub
xor
fnsave
and
lcall
sarl
inc
fisttpl
jl
nop
inc
pop
fs
xor
xchg
add
xor
and
lret
scas
inc
mov
ret
cmp
dec
mov
sbb
cmc
and
decb
je
mov
dec
xor
jne
or
fcoml
dec
gs
add
je
aad
aam
mov
xchg
std
mov
mov
je
xor
out
xchg
sbb
or
dec
mov
cmp
sub
lret
add
popf
ja
test
test
push
sti
orb
xchg
sub
lcall
push
xchg
mulb
out
or
stos
dec
arpl
adc
mov
lock
inc
cmpsl
or
out
rcpps
pusha
sub
adcl
cmp
mov
inc
and
sti
dec
je
arpl
cmp
es
mov
test
lods
inc
subl
mov
mov
lods
cld
sarb
aam
xchg
push
loopne
adc
xor
sti
add
sub
das
cmove
lret
outsb
dec
jbe
xchg
jns
push
aaa
rcr
stos
inc
test
sbb
sub
jmp
mov
popf
hlt
and
xorw
mov
aas
out
jle
popa
mov
cs
inc
cltd
lods
data16
fadd
jnp
jle
mov
mov
dec
in
lret
outsb
ret
mov
fdivrs
xor
and
push
mov
xchg
pop
lods
mov
mov
int
insb
hlt
mov
inc
add
lea
inc
lret
cld
sub
jmp
jecxz
mov
fiadds
xor
imul
push
inc
dec
xchg
push
leave
xchg
ljmp
mov
lea
mov
rcrl
push
xchg
cmpb
pop
jp
or
cmp
jae
rcll
cmpsl
lods
aaa
jnp
fimull
add
cld
mov
jns
test
xchg
ja
imul
mov
push
mov
cwtl
sub
push
fimuls
out
loope
fisubrs
adc
xchg
jg
repnz
out
jge
outsl
in
daa
sbb
pop
adc
inc
movsb
jns
addl
fwait
cwtl
stc
xchg
outsb
bound
icebp
sti
jmp
int3
mov
ljmp
mov
insl
sub
in
imul
scas
jbe
testl
sbb
mov
xorb
movsb
lock
mov
or
mov
rol
lods
inc
mov
sub
lahf
stos
mov
and
push
test
rcrb
jo
sbb
jns
xchg
cltd
jmp
pop
imul
fwait
or
ror
iret
xlat
push
mov
inc
test
aam
adc
dec
stos
mov
xor
inc
das
das
jcxz
cltd
das
test
lcall
call
jge
xor
xchg
pop
sbb
and
xor
aad
in
mov
cmp
inc
lahf
addb
xchg
pop
mov
add
rol
imul
mull
mov
xor
mov
cld
mov
imul
mov
test
out
sbb
mov
dec
mov
add
xor
push
push
jne
shlb
pop
repz
fptan
add
and
addr16
bound
les
hlt
in
push
mov
cwtl
pop
lahf
push
mov
cmc
imull
adc
push
ret
subl
dec
dec
imul
xor
dec
lds
xor
aam
jbe
mov
pop
repnz
pushf
mov
fistpll
lret
mov
jno
roll
push
cmp
andb
lret
or
xor
lock
or
cmp
dec
cld
lods
cli
mov
dec
stos
jae
test
mov
or
jge
dec
inc
daa
sbb
fdivl
pop
xchg
shrb
xor
mov
or
mov
out
ficoml
lock
bound
hlt
jb
jp
pop
cmpsb
adc
outsl
test
mov
push
sbb
pop
dec
cmp
insl
adc
je
stc
mov
mov
jnp
adc
xor
aad
cltd
outsb
fimuls
mov
stos
ror
add
scas
mov
mov
adcb
fistl
in
lret
loope
aad
inc
sbb
sbb
rolb
sbb
xchg
cmp
adc
scas
lret
adc
xchg
js
add
sbb
inc
clc
addl
jmp
ljmp
and
pop
test
fstpl
fwait
shrl
in
sub
and
add
popa
dec
leave
push
insl
mov
lods
adc
ja
adc
cld
mov
pop
add
lock
mov
nop
loop
iret
lods
sub
push
xor
das
sub
lods
sbb
push
rorl
mov
movb
cmp
dec
or
test
test
test
push
loope
popa
and
inc
dec
push
loop
idiv
adc
pop
cmpl
push
cltd
loop
xchg
outsl
int
push
js
stos
inc
push
and
push
je
or
cwtl
sub
test
ret
pop
insb
icebp
insl
jo
lods
clc
icebp
push
xor
aam
jge
pop
call
sahf
cmpsl
inc
lea
xchg
std
sar
push
sub
arpl
inc
jns
scas
cmpsb
mov
lods
aad
dec
imul
incb
subb
mov
or
mov
sub
sbb
push
inc
push
adc
sub
addr16
nop
and
fs
jns
loop
mov
nop
pop
in
pop
push
fdiv
push
cmc
iret
test
mov
cltd
mov
lret
outsl
jo
cmp
das
sbb
xchg
xor
nop
fmuls
xor
inc
andb
jb
mov
and
popa
adc
and
mov
mov
je
push
int3
pop
inc
xchg
ja
xor
mov
inc
out
in
aas
push
icebp
fwait
jne
cmp
mov
mov
cmpsb
xor
in
cmp
mov
stos
loopne
sbb
and
nop
rcpps
mov
inc
add
fld
adc
or
mov
js
push
sub
mov
repz
mov
jb
insl
int
lods
call
sub
pop
rcll
inc
lods
insl
rcll
jge
rorl
sub
shll
repnz
mov
ret
iret
mov
sub
mov
loopne
and
test
fbstp
jge
sahf
insb
or
jbe
sarl
ss
test
add
sbb
bound
ds
test
fwait
int3
add
bound
xor
repnz
push
int
dec
pop
lret
fildl
mov
jmp
popa
push
fiadds
and
iret
jno
xor
mov
sbbl
dec
ja
jo
fidivrl
inc
sti
inc
cs
das
insl
push
ret
roll
xchg
mov
inc
jl
adc
jl
cmp
fs
adc
mov
push
shr
fnstcw
sahf
cwtl
pop
xorl
adc
dec
push
jo
push
loopne
add
stos
sub
xchg
data16
and
and
lods
pop
test
shlb
dec
adc
xlat
jecxz
test
idivb
testl
push
mov
fistpll
sti
push
inc
ss
push
je
mov
test
and
push
data16
pusha
lret
inc
sbb
jb
fnstcw
sbb
inc
cmp
imul
bound
sub
push
movsl
sbb
inc
lds
fwait
xchg
mov
loope
jno
xchg
sbb
cmp
leave
jno
mov
jmp
test
sbb
adc
loope
inc
jne
fwait
push
into
dec
popa
pop
cli
pop
cmpb
int3
loop
ficomps
cmp
fld
mov
shlb
pop
in
lods
lahf
mov
inc
lds
jns
in
lods
sub
push
push
and
insb
fstpl
dec
in
shrb
or
jmp
mov
mov
push
call
out
stos
sbb
scas
adc
or
push
mov
rcrl
dec
cmp
std
pop
cmp
sahf
outsl
daa
sbb
xchg
hlt
test
fistpl
or
push
das
cmp
jecxz
sub
clc
sub
cmp
pop
imul
jbe
add
mov
addl
push
cmpb
dec
push
jns
fsubl
test
dec
ret
addr16
or
cmp
sub
inc
into
int3
addr16
push
jbe
xchg
lods
dec
pop
pop
insl
pop
or
inc
pop
ds
xor
inc
inc
test
cmp
cmc
inc
into
xchg
mov
xor
or
xor
mov
test
adc
sbb
dec
lods
stos
inc
and
dec
jne
ljmp
adc
lods
pop
repz
hlt
mov
loopne
scas
push
xor
mov
cmp
mov
out
test
mov
sbb
push
xchg
push
sbb
lods
mov
push
iret
stos
push
leave
xchg
inc
mov
inc
push
outsb
popa
in
inc
mov
js
test
imul
iret
pop
imul
ret
lcall
jecxz
push
and
adc
ljmp
imul
imulb
cwtl
or
mov
jnp
or
xor
mov
loop
inc
es
mov
mov
in
out
nop
enter
gs
in
std
add
dec
and
scas
mov
je
outsl
jno
fs
js
test
inc
fdivs
dec
push
ret
sbb
mov
xor
xorw
ljmp
lods
add
jne
cmpsl
cmp
movsl
in
mov
int3
rcrl
inc
out
and
mov
imulb
inc
pop
sbb
xor
dec
enter
aas
scas
idivl
xchg
sub
mov
popf
fcomps
scas
mov
push
mov
es
js
inc
js
push
sti
fisubs
cmpsl
loopne
ljmp
call
sbb
mov
pop
jle
fcoml
mov
mov
jg
jmp
test
rol
orl
fiaddl
xchg
and
aas
cmpsl
lcall
sbb
jns
cmpsb
add
jmp
icebp
leave
sbb
sti
fstl
push
fstl
rorb
adc
xchg
mov
push
bound
fs
mov
mov
inc
mov
into
out
sbb
sbb
in
movd
pop
add
dec
imul
and
test
pop
je
inc
xchg
lods
popa
clc
ret
mov
jmp
push
rclb
dec
push
imul
jg
or
aam
jge
jecxz
int
lret
arpl
push
push
fcomps
xchg
mov
pop
mov
xchg
push
in
sbb
movsl
iret
roll
jnp
cmpsb
mov
pop
mov
adcb
mov
xchg
push
leave
cmpsb
pop
mov
adc
outsl
push
aaa
in
add
pmovmskb
jle
sbb
or
mulb
in
out
ds
and
loopne
pop
arpl
cli
pushf
lret
push
mov
and
das
mov
sbb
mov
adc
inc
push
jecxz
cld
sbb
ja
fimuls
int3
dec
mov
movsb
ljmp
jg
mov
pop
dec
popa
mov
dec
cwtl
inc
mov
and
stos
mov
jo
and
sahf
out
adc
sub
mov
subl
jecxz
adc
mov
add
or
clc
sub
out
pop
mov
cltd
adc
cwtl
fwait
mov
lods
or
rcrb
jp
mov
test
add
or
inc
mov
xor
pop
cmp
jecxz
xchg
popa
stos
aas
cwtl
or
xor
sti
push
sbb
mov
cmp
test
int
mov
adcl
add
mov
out
push
xchg
dec
repz
enter
cmp
lock
inc
xchg
xchg
mov
popa
cmp
xor
dec
loop
aas
cmp
cmp
xchg
sbb
fmull
pop
test
cmp
or
mov
sub
sub
sub
insb
repz
mov
dec
ss
sub
xchg
mov
fnstsw
roll
imul
stos
jp
sub
cmp
mov
mov
sub
cmpsl
xor
inc
jecxz
fsubrs
loope
dec
jbe
adc
sar
sbb
fdivp
sbb
mov
mov
int3
test
xchg
or
pop
inc
add
cmp
push
sub
lds
mov
je
lret
fmull
popa
sub
into
sbb
mov
out
cltd
cltd
out
or
inc
mov
add
pop
dec
repnz
adc
push
shl
iret
xchg
movsl
mov
push
and
je
pushf
cmp
loop
scas
mov
jg
fsubs
xchg
mov
ja
adc
jnp
mov
iret
mov
inc
int3
pop
pop
lods
add
add
stc
mov
lea
xor
adc
mov
leave
sub
lea
mov
in
or
cmp
inc
push
sbb
sub
jno
divb
sub
nop
aad
cmp
shrl
xchg
mov
add
dec
pop
jl
lret
icebp
inc
cwtl
out
mov
push
into
ds
out
push
xor
adc
insb
inc
fwait
jle
adc
dec
repz
pop
push
cmp
rcl
fmuls
jle
lcall
jae
pop
cltd
and
or
lods
pop
xchg
push
roll
iret
mov
andb
rclb
xchg
std
stos
cmp
dec
test
pop
dec
sbb
scas
and
icebp
pop
lods
aaa
movsb
push
mov
aaa
call
test
sbb
loopne
xchg
in
add
mov
xchg
push
pop
or
in
push
pop
cmp
push
nop
pop
jbe
insl
push
pop
hlt
mov
test
or
sbb
repnz
test
xor
push
fdivrs
dec
sbb
xor
lds
aas
lret
xor
lahf
cmp
lds
push
jnp
adcl
jg
loope
xchg
cmp
ja
clc
adc
mov
push
std
rcrl
jae
mov
mov
fisttps
mov
sbb
or
stc
sub
cmpsb
add
bound
pop
dec
outsl
and
hlt
inc
add
rcll
dec
imul
mov
pushf
ret
lcall
adc
ss
dec
xor
sub
sub
fidivrs
mulb
pop
test
jg
stos
cmpsb
dec
mov
aaa
test
or
push
pop
mov
and
mov
or
xchg
scas
xor
shrb
lods
xchg
mov
and
xor
aas
sti
adc
fcmovbe
jl
sub
or
mov
out
mov
arpl
jp
adc
push
call
cmpsb
xchg
fidivrl
or
test
xor
push
add
mov
lret
into
jnp
push
aas
jnp
push
xchg
pop
lahf
jg
jns
testl
scas
andb
dec
lea
xchg
daa
sub
push
mov
imul
out
cld
jg
xchg
dec
mov
incl
jmp
lahf
and
pop
lret
inc
mov
lods
icebp
xchg
decl
ljmp
mov
pop
sbb
subl
xorb
and
jne
ljmp
add
in
ret
insl
jae
xchg
and
inc
mov
ja
lret
adc
cwtl
ja
in
cmp
movsb
fcomps
dec
mov
leavew
mov
bound
mov
dec
mov
lock
int
mov
xor
inc
mov
dec
jae
js
sub
sbb
jbe
jge
faddl
mov
cs
xchg
ds
pop
xchg
jle
pop
stos
out
rclb
dec
lret
dec
sbb
into
rorb
dec
jnp
lcall
dec
pop
jge
pushf
pop
inc
in
sahf
push
js
mov
std
mov
cmp
sarb
push
fstpl
clc
sbb
inc
jnp
cmp
mov
cld
lcall
inc
jecxz
push
iret
pop
add
shll
dec
inc
dec
nop
jecxz
fdivs
add
shr
mov
xor
loope
cmpsl
arpl
addr16
pop
adc
cwtl
adc
jne
adc
mov
cmpsb
cld
adc
iret
cmpsl
or
int
hlt
push
ljmp
mov
mov
inc
test
xor
stos
cmc
ss
lods
push
dec
sub
mov
sbb
movsb
jbe
sub
loopne
cmp
mov
shlb
or
push
mov
xchg
or
inc
fs
mov
inc
push
xchg
icebp
fiadds
xor
pop
test
popa
lods
pop
push
push
xchg
cmp
pusha
movsl
repz
sub
push
je
icebp
mov
jo
out
das
fsubl
rclb
xor
jb
pop
xchg
sahf
cmc
add
fsub
mov
js
clc
movsb
mov
push
cmp
lds
lock
enter
pop
cmpsb
mov
pop
or
mov
adc
push
inc
mov
cltd
lods
xchg
inc
outsb
jg
fmuls
cld
sahf
pushw
mov
mov
mov
cmc
out
or
lea
add
adc
lea
das
xlat
mov
xacquire
cmp
mov
pop
or
and
movsb
sbb
in
dec
push
ficoml
cmpsl
jb
test
outsb
rcrb
mov
sahf
or
inc
jg
adcb
dec
sbb
xchg
mov
cmpsl
outsl
movsb
mov
int3
xchg
push
dec
mov
sub
das
orl
mov
xchg
insb
jle
hlt
repz
dec
cmp
mov
add
mov
fldcw
repz
push
loop
adc
sub
or
cmp
es
les
or
flds
jno
lea
dec
jbe
xor
cmp
test
dec
fcmovnbe
sahf
mov
xchg
mov
movsb
push
mov
and
inc
addl
mov
pop
cld
xchg
imul
add
add
push
ljmp
or
pusha
fists
cmp
rcl
inc
xchg
sti
mov
mov
mov
mov
push
jne
and
mov
lods
orb
sbb
jg
mov
cmp
mov
xor
mov
aas
rorb
lcall
ficomps
ljmp
es
xor
adc
sub
add
inc
pop
inc
cmp
mov
mov
pop
repz
jl
xchg
fcoms
xchg
mov
xchg
aad
insl
cmpsl
shrl
and
sbb
mov
xorl
xor
stos
cmc
push
adc
jp
jnp
in
cwtl
jns
into
fidivl
xor
sub
jmp
jae
stc
mov
neg
xchg
dec
and
popf
loope
xlat
mov
ljmp
fisubrs
shll
pop
movsl
hlt
cmp
leave
push
or
or
lcall
cmp
subl
jne
mov
and
loop
int3
int3
add
push
dec
push
xorl
mov
push
add
pushf
std
mov
adc
and
test
fiaddl
sbb
icebp
out
sbb
loop,pn
mov
popa
ss
out
inc
rorb
lret
or
xorl
cmp
mov
stos
movsl
xchg
inc
js
addb
mov
sbb
test
dec
je,pn
push
pop
ret
jp
and
mov
mov
or
dec
push
push
lods
add
movsl
cmp
and
adc
lret
and
out
sar
ret
icebp
orb
pop
cmp
cmp
pop
pop
pop
sbb
stc
mov
loope
or
sahf
add
mov
inc
iret
mov
jp
loopne
sbb
das
lods
cmp
push
add
and
or
or
pop
xchg
out
cmp
addr16
jecxz
mov
push
inc
and
sbb
ret
adc
add
arpl
lods
lcallw
xchg
inc
add
sbb
sub
inc
mov
stc
or
adc
push
cmpsb
pop
cld
add
mov
popa
push
xor
add
mov
scas
xchg
sbb
mov
out
sar
xor
jns
jae
jae
out
jle
jns
inc
test
xor
outsl
dec
jb
mov
aas
icebp
mov
xchg
das
jp
push
fdivs
and
mov
es
mov
gs
cld
ljmp
add
das
popa
fwait
out
push
subl
mov
adc
aas
test
push
mov
dec
mov
lahf
mov
mov
xchg
mov
mov
push
mov
std
js
dec
xchg
hlt
inc
sub
rcrb
mov
xchg
xchg
sar
movsb
add
adc
push
or
cmpsb
jle
gs
push
call
pop
cmp
or
xchg
js
lcall
xor
mov
add
sbb
mov
frndint
inc
insl
stos
test
xchg
shrl
or
mov
pop
in
dec
test
mov
jp
mov
jl
popf
ljmp
push
or
aas
sbb
jl
cli
mov
aam
rcr
lods
test
and
stos
mov
call
lahf
add
cmp
cmc
std
ds
ja
mov
loope
jno
xor
sarl
xchg
pop
cmc
mov
daa
add
lret
inc
rorb
orb
int3
lcall
mov
dec
xchg
inc
stos
jle
mov
lods
jecxz
push
into
daa
push
lds
lcall
mov
push
mov
fchs
or
cmpsb
mov
repnz
int
mov
cld
push
popl
cmpsb
pop
sbb
push
cmp
lods
push
inc
aam
add
das
or
xchg
xchg
push
cmp
inc
push
pop
xlat
inc
jae
xchg
rol
push
push
in
inc
leave
je
imul
cwtl
pop
push
mov
nop
into
inc
mov
cmp
cmp
xchg
push
popf
push
or
sbb
mov
std
add
sub
lea
sbb
lcall
xchg
arpl
ss
inc
pop
test
gs
mov
add
fcompl
into
aaa
subb
sbb
add
or
repnz
xor
sub
dec
int3
insl
pop
jl
cmpsb
aas
loope
pop
mov
outsl
cmp
in
add
lret
shlb
xchg
inc
inc
jb
mov
dec
cli
push
jno
mov
lret
imul
fcmovnb
stos
cmpsb
lods
mov
or
push
cmp
cwtl
and
dec
aad
mov
jl
jge
pop
or
inc
aas
dec
cmpsl
xchg
stc
add
lods
repnz
jl
lcall
mov
mov
inc
ficompl
sub
test
ret
mov
push
cwtl
sbb
outsl
jb
jbe
mov
mov
mov
aad
jg
add
ljmp
fsubrs
mov
lods
int
divl
dec
xor
adc
ret
leave
pushf
lods
adc
popa
shlb
inc
jnp
xor
inc
xor
xor
hlt
mov
ficomps
and
xchg
and
adc
popf
dec
aaa
test
mov
fs
test
fxam
fs
add
stc
sarl
loop
out
fnsave
test
test
loopne
jb
shlb
inc
pop
push
adc
int3
out
jno
dec
dec
jmp
stos
add
test
leave
add
scas
inc
jo
in
mov
mov
lea
mov
mov
pop
jle
fcomip
mov
fstps
xchg
cmp
sbb
mov
mov
inc
mov
push
cltd
jl
pop
fwait
push
jae
sti
aaa
test
decl
lds
push
or
mov
mov
loopne
es
cmp
or
pop
mov
data16
adc
adc
xchg
insl
das
sub
outsb
jbe
inc
inc
icebp
ljmp
mov
scas
cmpsl
iret
pushf
outsb
add
dec
bound
adc
pop
cmp
xchg
pop
lret
or
push
dec
popl
or
lea
mov
fbld
insl
inc
mov
push
jb
mov
cmc
mov
cli
mov
sub
pop
std
sub
push
imul
and
mov
dec
aas
test
inc
or
mov
push
lcall
into
xchg
pop
mov
mov
xchg
sahf
lahf
gs
iret
jb
and
inc
inc
test
pop
cmp
fimuls
or
bound
and
xchg
jbe
inc
mov
lahf
xor
fcomps
call
sbb
sti
sub
sbb
imul
cmp
popa
pop
repnz
mov
or
and
mov
or
idivl
cmp
fmuls
mov
xor
inc
ret
enter
sub
lods
lcall
and
xchg
pushf
inc
jmp
pop
push
sub
pop
fwait
pop
lret
inc
les
mov
ret
push
out
mov
mov
icebp
mov
mov
fsubl
add
das
bound
dec
pop
lret
stos
neg
xor
mov
out
push
incb
jbe
jl
mov
shll
jmp
pop
dec
stos
push
out
push
pusha
push
ficoml
lock
jp
addr16
jl
rcrb
cmp
jg
dec
movsb
fcomip
lret
adc
adc
xor
arpl
pmuludq
adc
mov
pop
incb
aas
mov
xor
loope
add
add
lret
pop
fimull
xlat
lahf
sahf
xor
jl
js
inc
adc
and
lock
jmp
test
mov
outsb
lret
and
lea
or
inc
test
add
sub
out
push
dec
je
push
call
mov
cmp
adc
daa
lret
andb
pop
int3
add
dec
ss
jge
jge
mov
imul
or
cli
shll
ret
das
bt
dec
jb
lahf
inc
int3
popa
inc
stos
push
or
pop
aaa
jecxz
cmp
lret
mov
sbb
sub
inc
enter
test
aaa
or
xchg
mov
outsb
jo
add
out
mov
imul
cld
inc
loop
xchg
xor
adc
imul
dec
pop
fucomp
les
fisubrs
mov
jbe
xchg
pop
pop
xor
sub
xor
subb
add
call
in
fsub
pushf
dec
bound
lret
pop
adc
mov
fs
jg
dec
notl
add
aas
jo
jge
ret
in
test
std
xlat
outsl
ja
insl
sub
or
jns
jge
and
and
ljmp
scas
or
cld
push
hlt
pop
mov
inc
ss
int
in
cltd
cld
mov
pop
dec
adc
cmpsl
rorl
push
lea
inc
push
emms
xchg
cmp
sbbl
mov
push
cmp
popf
xchg
mov
push
jle
mov
out
daa
push
test
imul
mov
dec
sbb
sbb
bound
ds
pop
fistpll
mov
sub
xchg
pop
xorb
xchg
mov
stos
mov
mov
dec
mov
orl
test
sbbl
movsb
mov
cmp
xchg
push
xchg
data16
aaa
push
sbb
sub
xchg
fmuls
jp
enter
jmp
push
push
hlt
fs
mov
jbe
push
jecxz
in
pop
xlat
stos
sbbb
mov
fidivrl
mov
pop
rcrb
mov
cs
xchg
aas
cmp
loop
dec
sub
or
int3
cmp
test
mov
jmp
push
scas
mov
jb
push
loope
mov
mov
sahf
fsubs
clc
fmull
or
fwait
ss
jecxz
scas
outsl
cli
adc
jae
push
fsts
mov
sub
out
loop
incb
jmp
mov
mov
int
loopne
dec
mov
dec
in
lret
and
xchg
sbb
and
and
inc
xchg
lret
sub
dec
nop
ljmp
sbb
mov
jp
ljmp
mov
push
xor
mov
push
mov
sub
cmp
jge
out
packsswb
les
pop
mov
in
dec
mov
test
push
sub
sub
jp
ja
pop
clc
and
push
push
lahf
test
sub
shl
or
or
packssdw
popf
sub
arpl
push
jge
mov
in
lods
fiadds
int
notb
adc
jo
imul
ret
les
or
hlt
sbb
inc
jbe
jg
mov
aas
and
cwtl
inc
fs
adc
loope
push
aad
movsl
sbb
movsb
mov
negl
clc
imul
sbb
lret
adc
dec
dec
stos
jbe
or
mov
pop
pop
rorb
mov
stc
int3
lahf
or
and
or
dec
lock
push
push
jnp
lahf
rolb
pop
scas
addb
xchg
adc
mov
push
shll
cmp
test
dec
jle
cwtl
pop
push
ret
push
cmpsl
das
inc
cmpsl
cs
push
push
mov
out
xor
sub
es
mov
sti
mov
cltd
mov
push
aad
and
push
movsl
test
mov
scas
cli
sub
ja
push
or
int
xor
push
push
add
sarb
mov
mov
imul
jnp
inc
xor
fsubr
popf
cmp
push
push
fdivs
mov
sub
in
or
dec
inc
inc
push
push
notl
pop
incb
int
outsl
mov
mov
sbb
sub
leave
jae
clc
add
jmp
or
sub
fnsave
sub
outsb
es
cli
leave
push
inc
adc
imul
fldl
pop
aad
sbb
xchg
je
pop
outsb
push
mov
mov
sub
jae
aam
fcomp
lahf
arpl
fidivrl
pop
cmp
lods
cmpsl
outsl
adc
movsl
outsb
xchg
ds
push
cmc
or
mov
adc
jae
mov
mov
add
mov
pop
sbb
adcl
sub
pop
pop
jnp
shlb
mov
mov
mov
lahf
and
xchg
xchg
orb
inc
xor
mov
scas
mov
shr
jnp
xor
push
xchg
cmp
dec
jbe
push
test
loopne
out
mull
aaa
xor
xor
and
call
push
stos
mov
stos
push
scas
int3
adc
cmp
xchg
push
pop
int3
mov
cmp
mov
xchg
fnsave
jb
add
jmp
or
cmpb
and
push
dec
xchg
iret
xorl
add
adc
daa
add
aam
and
fistps
cmpsl
xlat
scas
adc
or
orb
pop
lods
inc
cmp
es
stos
and
sub
filds
add
mov
shll
push
and
mov
or
dec
or
or
cltd
cld
bound
nop
mov
gs
dec
xor
jge
and
lcall
push
shll
or
test
ds
out
xchg
inc
or
mov
cmpsl
adc
pop
arpl
roll
xor
xlat
adc
mov
xchg
add
shl
sti
jecxz
dec
adc
xchg
add
mov
push
add
add
xchg
mov
push
fisubl
int3
daa
das
xchg
xor
scas
or
out
dec
insb
push
jne
xor
inc
cmp
arpl
jp
cmp
dec
inc
adc
xchg
stc
jno
lock
add
dec
lcall
jae
inc
scas
mov
mov
jb
test
les
imul
outsb
mov
mov
ficoms
sub
fstpl
lods
shl
movsb
mov
pop
adc
hlt
dec
xchg
push
jo
mov
jle
test
arpl
mov
dec
sub
pushf
cwtl
dec
xchg
stos
outsl
or
jl
sub
or
int
in
sub
int
int
fs
and
mov
ret
mov
jp
jae
stos
cwtl
in
cmpsl
enter
in
out
jo
imul
add
popf
jnp
fiaddl
push
xchg
hlt
mov
rclb
cld
into
push
lret
xchg
mov
call
cmp
push
mov
mov
shlb
jo
mov
out
sbb
imul
inc
orb
xorb
pop
enter
inc
xor
mov
std
cmp
sub
cmpsb
push
xchg
sbb
mov
pop
and
pusha
dec
subl
in
cmp
sbb
mov
push
push
mov
xor
and
add
shll
adc
sub
push
and
stos
pop
mov
cmp
lret
mov
dec
pop
jo
jbe
adc
ds
mov
scas
sbb
or
cmp
test
add
fsubl
insl
adc
xor
push
ss
cmp
stc
inc
or
out
ret
mov
mov
and
pop
mov
push
mov
jecxz
xchg
movsb
test
fildll
imulb
lret
fstp
das
mov
addl
iret
int3
pop
inc
in
push
or
push
jns
lods
pop
mov
sub
imulb
sbb
xor
sbbb
or
insb
lcall
push
pop
jb
jmp
pop
call
pop
adc
stos
jmp
into
mov
xchg
pop
popa
test
shll
lds
add
pop
push
add
xchg
out
mov
xchg
dec
pop
xchg
jmp
bound
dec
iret
icebp
xchg
packsswb
adc
adc
pop
mov
fists
stc
mov
cmp
fsubrp
push
mov
lea
jmp
nop
xchg
imul
or
jno
or
stc
or
pop
nop
sbb
cmp
aam
stos
sarl
scas
stos
or
movsb
test
xchg
shrl
rcrb
sbb
clc
mov
push
icebp
mov
push
or
sbb
jecxz
mov
aad
neg
jmp
adc
sub
push
jbe
lock
lret
sub
sub
or
and
out
add
leave
sub
shrd
aam
aam
jnp
pop
sahf
mov
cs
xchg
jp,pn
cltd
sbb
jo
cwtl
shl
insl
in
clc
pusha
jmp
jg
xchg
lret
icebp
fdivr
push
je
or
aas
mov
push
je
push
aas
push
ljmp
xchg
ror
and
inc
pushf
sub
and
outsb
decl
stos
out
gs
jne
fadds
inc
jl
lret
testb
dec
pusha
pop
mov
sbb
sbb
fildl
cmp
jb
into
fldenv
les
jnp
fwait
xchg
lret
aad
fwait
mov
and
movsb
outsb
sub
or
push
rorb
adc
arpl
sbb
movups
pop
out
lods
or
stos
cli
sbbl
mov
jnp
sbb
lret
mov
repnz
sbb
mov
xchg
dec
mov
inc
dec
push
lods
add
jle
xchg
sarl
or
fs
xchg
push
scas
in
cmpsl
test
xchg
push
popa
or
pusha
das
mov
jp
adc
sbb
and
daa
or
movsl
fmull
adc
push
mov
fidivs
mov
mov
push
push
iret
test
out
mov
fistps
mov
cmp
or
add
push
or
mov
rorb
fs
sub
mov
cmp
sub
inc
out
movsb
mov
xor
test
fcmovbe
inc
nop
mov
ret
push
data16
sub
xchg
inc
scas
xor
test
flds
xchg
adc
int
xlat
in
push
pop
xchg
jae
aad
mov
pop
test
mov
test
aam
mov
cmp
incl
loopne
or
int3
loope
arpl
mov
xor
lds
jno
dec
mov
mov
jnp
bnd
jnp
test
nop
dec
cld
mov
adc
test
icebp
sbb
and
pop
mov
pushf
lret
aas
cld
shlb
sub
test
pop
fldt
int3
les
xor
outsl
mov
jo
fsts
enter
int3
mov
jp
push
fidivrl
and
cmpsb
leave
inc
ret
jecxz
push
lea
push
es
out
ljmp
push
ss
push
int3
inc
iret
iret
mov
pushf
xor
call
enter
adc
mov
shll
pusha
movsl
fistpl
xchg
sahf
xor
lret
in
adc
jo
pop
cld
inc
es
faddp
enter
adc
imul
lahf
rsm
mov
inc
adc
mov
aam
xlat
cmp
inc
popa
sub
or
out
sub
sbb
dec
push
je
push
xchg
mov
jp
add
test
and
cmpsl
pop
sbb
int
add
dec
cld
pop
shll
pop
iret
mov
pop
adc
inc
mov
cmp
and
cmp
push
cmp
loopne
sub
push
lret
pop
xchg
mov
enter
sub
clc
pop
push
mov
sbb
loopne
mov
int
push
adc
xchg
adc
xor
jns
mov
scas
xchg
dec
inc
leave
push
mov
mov
outsl
inc
jne
es
fwait
sub
sub
sbb
test
sbb
mov
push
jmp
pop
data16
sbb
mov
sub
nop
movl
arpl
push
inc
cmc
fists
pusha
or
push
jb
rclb
push
mov
inc
mov
int3
je
sub
sbb
rclb
push
icebp
sysenter
cmp
cs
out
push
adc
adc
sub
data16
mov
adc
pop
out
mov
subl
test
int3
and
leave
cmp
jb
xlat
and
dec
add
inc
out
or
add
popf
inc
cli
repz
lods
jae
pop
cmp
sub
repnz
das
movsb
in
rolb
cs
push
pop
or
jo
inc
dec
leave
rol
inc
dec
je
xchg
bound
push
outsl
push
push
add
movb
jl
inc
mov
outsl
aas
pop
dec
mov
mov
loope
nop
push
pop
sub
out
lock
fs
iret
cmc
call
notb
mov
std
pop
add
cmp
sti
in
cmp
mov
inc
imul
mov
cld
jnp
iret
in
push
xchg
push
or
sbb
scas
adc
jge
test
lods
lods
or
xor
xchg
mov
test
ljmp
fiadds
adc
mov
xor
xor
push
cmp
or
das
test
xlat
stos
ss
ret
into
mov
xchg
sub
orb
insl
mov
mov
sub
incl
mov
jmp
cwtl
pop
inc
mov
jno
mov
pop
xchg
ljmp
sub
add
mov
ret
cmp
dec
sbb
out
flds
mov
in
push
or
imul
or
sbb
lret
je
dec
pop
imul
inc
dec
mov
leave
mov
sub
inc
push
imul
sahf
jg
sub
pop
xchg
jnp
int3
cmpb
mov
jbe
xor
lods
in
pop
stos
pop
into
push
mov
adc
lock
jle
push
and
cmp
sub
mov
cli
and
sub
cwtl
repz
aas
test
es
lahf
outsb
lahf
dec
pop
roll
ror
pop
int
add
shr
outsb
rclb
cmp
lods
mov
inc
andb
adc
inc
pop
lock
test
lcall
jl
xchg
cs
push
test
or
xchg
mov
xor
es
mov
std
pop
mov
int3
jae
push
sub
rcrb
bound
cwtl
or
imul
sbb
pop
jne
call
fisubrl
data16
pop
xchg
fnstsw
ret
push
sub
pop
mov
push
and
or
xchg
shll
rol
sub
out
addr16
cltd
movsb
imul
psllq
sub
ds
pop
or
daa
pop
cmp
mov
sub
arpl
adc
aam
sub
pop
sbb
scas
fsqrt
inc
addl
and
inc
pop
sub
jp
dec
es
add
scas
mov
sarb
jne
frstor
std
jns
jecxz
xorb
mov
dec
mov
jb
xchg
push
xlat
mov
hlt
xchg
out
aad
pop
mov
jnp
push
cmp
jo
inc
sbb
imul
cmpsb
je
adc
bound
mov
ja
mov
fcmovnu
dec
dec
ds
mov
sarb
pop
andb
aaa
jle
inc
pop
jbe
xchg
cmpsl
sub
imul
stc
lods
mov
and
xchg
xchg
adc
sub
xchg
jp
add
push
adc
insl
int
adc
push
divb
lock
ss
or
and
or
lods
mov
ret
out
aad
and
hlt
cmp
dec
or
rcll
loop
pop
addl
cmp
pop
xchg
pushf
scas
cltd
jo
cmp
pop
mulb
in
stos
jmp
dec
and
and
fs
into
cs
jns
or
mov
sub
pop
repz
mov
mov
ljmp
sub
mov
cltd
jg
push
xchg
push
mov
testb
dec
out
xchg
or
mov
scas
dec
pop
xor
sub
lods
mull
lock
mov
sbb
or
faddl
push
mov
je
in
xor
ds
or
fstl
and
icebp
or
pop
xchg
jns
mov
jno
movsl
inc
pop
push
ret
stos
in
pushl
and
or
cwtl
xchg
xchg
mov
sahf
inc
push
and
test
xchg
aas
mov
out
ds
sti
clc
outsb
jl
stos
scas
push
test
jbe
mov
mov
add
lret
mov
mov
int3
mov
hlt
data16
xchg
push
out
sbb
adc
repz
adc
jge
repz
sti
xchg
shll
xchg
stos
jmp
out
sub
repnz
pop
loope
addl
aas
mov
fimuls
shlb
xchg
mov
cmp
ljmp
or
push
subl
sti
xor
add
pop
pusha
cmpsb
repnz
dec
dec
sub
popf
adcb
orl
mov
scas
mov
mov
xor
leave
jns
pop
aam
fistpl
or
cmpsl
jmp
inc
imul
outsl
popf
inc
dec
lods
or
imull
mov
sub
and
adc
adc
xchg
stc
or
sbb
inc
pop
xor
fiaddl
mov
xchg
rorl
sarb
jle
into
add
jmp
dec
popf
into
cmp
xchg
jno
jno
jne
mov
roll
or
mov
mov
shld
test
iret
sbb
es
adcb
xor
xlat
jle
mov
mov
pop
mov
push
icebp
jg
jbe
mov
out
push
addr16
sbb
rorb
and
dec
jnp
arpl
add
xor
add
mov
xchg
arpl
pop
cmp
fwait
xor
inc
xchg
adc
or
add
lea
xlat
lods
iret
repnz
adc
mov
repnz
cmp
mov
lea
pop
in
xor
dec
sarb
adc
mov
leave
inc
imulb
cmp
add
imul
cld
loopne
stc
or
scas
mov
je
or
push
js
test
add
inc
or
outsl
shll
add
adc
scas
rcll
in
cmp
out
or
flds
inc
mov
pop
mov
and
dec
cwtl
push
pop
xchg
rolb
dec
stos
add
pop
jp
inc
add
cmpl
in
jge
in
imul
data16
cmp
cmpsl
xor
and
mov
data16
or
mov
in
push
filds
mov
lcall
inc
jecxz
inc
cmc
pop
pop
mul
sbb
movsb
imul
and
sti
movsb
popa
sub
push
xor
mov
xor
cltd
and
xchg
orb
adc
inc
adc
push
xor
aam
aam
repz
scas
jae
enter
inc
cmpsl
inc
push
jecxz
sub
xchg
lret
or
push
mov
xor
arpl
pusha
cmp
aaa
idivl
mov
fmuls
add
inc
push
adc
xchg
sbbb
loope
jbe
xor
dec
movsb
fs
sbb
xor
xor
loop
shrb
lea
nop
pop
les
repz
out
xor
lahf
lock
into
test
cmpl
adcb
shrl
subl
add
mov
mov
push
cmp
popa
das
or
jno
lea
mov
addr16
sub
cs
fadds
xchg
repnz
fwait
cmp
sub
sbb
popf
test
pop
clc
jns
rorl
dec
sub
std
xor
and
sub
mov
cwtl
in
jo
jmp
mov
or
lods
and
push
stos
dec
mov
push
mov
std
outsb
add
fcompl
mov
inc
test
sarb
fmull
lock
mov
aam
cld
or
push
lock
jmp
xchg
test
adc
fistps
cmc
cmp
push
inc
and
fs
out
jae
les
push
xchg
mov
sbb
iret
mov
test
xchg
cmpsb
xlat
cmp
shlb
int
mov
or
pushl
cmp
cwtl
push
mov
sarb
xchg
add
sar
inc
and
sbb
test
and
mov
sub
loopne
mov
mov
pop
in
dec
int3
push
xor
mov
xor
mov
cmp
mov
push
and
sahf
jns
jns
popf
and
or
sbb
mov
test
cmp
fsubrp
and
repz
sub
mov
popa
filds
aad
subb
pop
xor
mov
jg
into
les
adc
and
nop
sub
mov
xchg
mov
xchg
xchg
or
sub
in
testl
adc
push
mov
or
std
pop
sub
shll
into
movsb
dec
cmpsb
lods
pop
data16
mov
lret
in
sub
cmc
insb
cmp
fcoml
xor
ja
lock
jp
das
rcll
or
xor
lods
jge
sub
int
mov
aam
fcomps
sub
call
cld
cmp
ret
iret
shrl
rorl
adc
pushf
sub
movb
aas
mov
dec
addb
adc
and
pusha
nop
xor
ja
cmpsl
adc
aaa
inc
and
add
stos
pusha
aaa
push
mov
or
cmpsl
addr16
xor
lods
adc
adc
out
push
pushf
ret
jae
or
outsl
nop
mov
sbb
sti
adc
push
jne
jns
sub
and
add
movsb
xor
pop
adc
cmpsl
inc
lcall
pushf
movsb
aad
dec
mov
sub
mov
cmp
jno
push
jecxz
xchg
sub
rol
mov
ljmp
pop
sahf
pushf
negl
cmpsl
sbb
and
iret
push
xchg
push
pushf
mov
pop
sarb
cmp
pop
cwtl
movsl
inc
cmc
mov
mov
arpl
pop
cmp
adc
repz
inc
js
idivl
xchg
mov
rcr
inc
fnstenv
jnp,pt
dec
scas
mov
lds
lahf
dec
jae
mov
lret
mov
cmp
ds
daa
jmp
ljmp
subb
aaa
insl
js
sarb
aas
inc
mov
imul
subl
cmp
lcall
mul
cmp
mov
mov
xor
xchg
xorb
nop
ja
mov
shl
jnp
sbb
lea
push
into
add
sub
push
xchg
int
mov
outsl
or
and
lret
xor
cmp
jg
popf
pop
mov
cmp
hlt
pop
or
movb
xchg
dec
pop
and
repz
xor
and
in
in
xchg
ja
jbe
mov
shll
ret
sbb
cmpsl
xorl
and
pop
clc
adcb
into
fisttpll
out
lods
and
push
aas
mov
sub
loopne
ret
loop
jmp
mov
rclb
add
adcb
fmul
mov
adc
imul
lock
lret
popa
push
mov
iret
jnp
test
mov
sbb
ficomps
cmpsb
push
fwait
arpl
jnp
lods
outsl
cmp
sbb
movsl
cwtl
imul
bound
mov
jp
xchg
movsb
sub
sti
dec
mov
pushf
and
int3
jge
popl
lock
imul
in
test
push
and
cld
add
jne
sbb
std
xor
add
movl
cmpl
pop
mov
jle
pop
aam
enter
out
lret
lret
cs
pusha
dec
push
mov
mov
mov
push
jmp
fldln2
cld
adc
out
stos
inc
lods
mov
mov
out
push
cmp
add
sub
jbe
cmpsb
sysret
pop
loop
into
scas
push
mov
mov
xor
int
xchg
nop
pop
jo
pop
insl
movsb
jbe
gs
mov
jl
mov
test
mov
dec
mov
les
sbb
testb
cs
xchg
mov
adc
pusha
push
sbb
dec
adc
pop
imul
lea
test
mov
fidivrl
jno
add
inc
sub
mov
sub
movsl
mov
pop
shll
mov
xor
lock
pop
add
int
and
inc
adcb
out
repz
test
int
cmp
push
jbe
mov
gs
hlt
iret
fnsave
ficomps
popf
mov
cmpsl
mov
ret
rcrb
or
adc
mov
scas
test
stc
pop
push
pavgw
in
adc
lcall
jno
sbb
xchg
xchg
push
xchg
mov
push
fs
pop
jecxz
and
sub
add
cmp
lahf
xor
arpl
cmp
push
inc
sti
sub
mov
divl
jo
call
add
add
mov
lock
insl
rcll
dec
inc
out
dec
mov
es
imul
cwtl
cld
iret
pop
call
fcomip
mov
xor
jecxz
push
out
xor
push
vunpcklps
lock
sbbl
cli
cmp
ja
push
data16
mov
jo
push
ljmp
and
push
mov
push
stos
sbb
pop
bound
mov
imul
cmp
add
mov
adc
jp
popa
insb
pushf
pop
xchg
gs
out
orl
jl
or
mov
xor
mov
pop
mov
scas
shll
and
loop
test
bound
sbbl
pop
cmpsl
mov
sub
inc
adc
xor
cltd
lock
test
mov
fisttpl
into
sbbl
xchg
sbb
out
outsl
in
es
and
sub
pop
scas
ret
jge
and
fsubp
shlb
push
sbb
adc
or
sbb
fmul
addl
sbb
into
xor
ss
or
loopne
sar
pop
int
jo
xor
mov
inc
in
push
pop
sub
jne
push
xlat
and
pop
jbe
mov
loop
pop
dec
sti
fdivs
test
daa
push
push
cmp
fldl
iret
jo
mov
call
mov
push
push
or
push
js
jns
jmp
and
test
cmc
sbb
cmc
in
lret
mov
jnp
loopne
mov
aaa
cld
dec
jg
insl
leave
push
fstpl
in
fisubrl
cmp
je
cmpsl
inc
aas
out
icebp
aad
out
lds
bound
repnz
inc
mov
mov
and
pusha
inc
ret
es
popw
pushf
popa
dec
testl
jnp
mov
and
aam
cmp
sub
jo
xor
mov
mov
pop
dec
cmp
call
push
mov
push
fbstp
nop
adc
sub
mov
jge
adc
mov
and
fildl
inc
loopne
sahf
jmp
push
clc
xchg
movsb
jp
stos
dec
cmpsb
push
and
imul
sub
rcrl
ss
push
xchg
push
lea
popa
add
movsb
fbstp
pushf
mov
xchg
fucomip
xchg
out
mov
loopne
repnz
inc
cmpsl
fidivrl
lods
fnstenv
sub
test
jg
mov
fidivrs
push
gs
lds
push
xchg
popa
xor
push
leave
das
mov
xlat
cmp
outsl
int3
clc
loope
cmp
sub
icebp
orb
sar
in
call
cli
insl
lahf
mov
out
cli
add
mov
lahf
je
mov
pop
mov
ret
xchg
scas
jmp
cmp
pushf
mov
jmp
inc
xchg
or
jmp
push
push
dec
insb
dec
push
xchg
jb
scas
jb
sub
movsl
dec
push
mov
and
lods
xchg
mov
rcrl
lock
cld
add
mov
cld
dec
jmp
jo
es
inc
into
dec
adc
std
cmpsb
iret
mov
pusha
mov
mov
mov
add
mov
das
int3
bound
aad
jecxz
ret
fmul
int
sbb
filds
pop
ret
cmp
xchg
and
xor
cmp
lahf
xor
dec
pop
jb
xor
pushf
jb
fisubl
push
sbb
out
pop
adc
lahf
mov
sahf
clc
and
js
or
lret
cmp
dec
mov
adc
mov
popa
addr16
or
push
push
mov
pop
mov
jbe
cld
pop
inc
pop
xor
shll
mov
mov
mov
les
mov
xor
das
pop
mul
loop
test
je
insb
xchg
inc
loope
add
ficoms
mov
inc
scas
or
lcall
xchg
shlb
jl
pop
adcb
in
call
std
push
test
call
or
dec
inc
sarl
cmp
test
hlt
test
jbe
cli
add
xchg
insl
out
call
jmp
in
arpl
cld
push
or
jecxz
xor
jge
jo
xchg
push
jae
fidivs
jmp
outsb
and
push
jno
mov
jge
cltd
push
sub
add
jmp
je
xchg
cmp
outsl
push
shlb
hlt
mov
xor
or
daa
fcompl
adc
loop
jg
shr
in
push
sub
pop
in
mov
out
push
repnz
in
ds
xchg
pop
xchg
xchg
sub
dec
addr16
cs
sbb
add
sub
push
mov
insl
jno
xor
push
insb
push
test
mov
dec
dec
lods
mov
ret
xchg
add
outsl
pushf
cmp
pop
lret
xchg
daa
dec
cmp
jle
xor
loope,pn
sbb
int
fdivs
jbe
mov
jae,pt
xchg
xchg
push
loope
fbstp
les
mov
test
in
jne
in
rcll
scas
inc
mov
addb
std
pop
mov
cwtl
lcall
or
pop
fistl
adc
sub
into
pop
push
repz
addr16
xchg
sbb
mov
lcall
push
adc
pminub
xor
popf
dec
sbb
loopew
mov
scas
insb
fstpt
outsl
dec
packuswb
ds
mov
mov
push
mov
push
and
in
jnp
insb
push
adc
and
shll
sub
or
xchg
adc
sbb
push
aas
int3
cwtl
leave
fdivrl
adc
popa
inc
sbb
out
sbb
xorl
daa
icebp
jb
or
or
lahf
ss
hlt
ljmp
mov
mov
jl
test
mov
in
insb
xchg
int
sbb
icebp
int3
jge
xchg
fdiv
mov
lcall
scas
add
mov
cmpsb
mov
mov
cmp
mov
imul
rorl
into
out
pop
pop
pop
loopne
sarl
hlt
and
movsb
in
insb
inc
and
and
or
push
outsb
xchg
leave
xchg
lods
dec
in
cld
mov
ja
loope
stc
or
lods
cld
test
orl
sbb
push
mov
cmpb
out
mov
pop
and
cli
test
mov
jle
jp
mov
push
xlat
jmp
xchg
lods
dec
orl
jecxz
push
stos
lods
pop
lock
mov
shl
cmp
mov
and
push
loop
or
mov
das
das
ds
pop
popf
jg
mov
mov
pop
inc
scas
mov
outsb
out
xor
push
push
pop
pop
subl
imul
xor
xchg
ljmp
or
push
stos
rcrb
int3
hlt
push
push
or
adc
sbb
jecxz
jne
movsl
cmp
lcall
testl
or
xor
psubw
push
mov
xor
mov
jo
dec
inc
and
pushf
ljmp
adcb
add
cmpsl
sti
decb
and
movsl
push
rorb
push
test
mov
sbb
out
adc
ret
pop
push
inc
pop
xor
fwait
push
rol
fisubl
or
scas
dec
outsb
imul
jecxz
std
subl
ja
fists
shlb
lods
les
lods
in
push
into
sti
mov
jno
pop
lods
in
xor
push
pop
inc
inc
jl
or
xor
cmp
outsb
sarl
mov
dec
dec
sbb
aas
in
fsubrl
jb
jns
fidivrs
es
cmp
test
pop
or
push
adc
ret
stc
mov
mov
mov
cmp
add
xchg
mov
mov
mov
jle
mov
pop
outsl
stos
push
in
imul
adc
cmc
push
lods
jno
jle
cmp
mov
mov
xor
arpl
jecxz
pop
mov
fldl
cmp
repnz
mov
dec
pop
in
mov
roll
push
jle
pop
loop
call
xor
out
cmp
aas
inc
fcmovb
inc
mov
inc
or
xchg
sub
dec
cwtl
mov
sarl
xor
push
arpl
cwtl
mov
dec
sbb
cmp
sub
cmp
jne
jmp
mov
adc
jb
pop
rol
mov
mov
cmc
mov
call
insl
inc
mov
dec
add
lret
cmc
iret
mov
lcall
mov
sar
push
fstp
loop
rcr
rcrb
push
mov
inc
mov
push
pop
and
ret
ret
xchg
out
push
and
jg
jecxz
xlat
pop
lea
lahf
daa
or
aas
xlat
mov
rcrb
jo
lahf
sub
fldl
outsl
jnp
fildl
lds
xchg
cmp
or
dec
test
jg
cmpsl
jne
push
sbb
and
mov
repnz
aad
out
add
cld
adc
outsb
out
mov
dec
and
int
jae
sarb
pop
shll
sub
fstpl
jge
jmp
push
cs
ss
cld
inc
call
ret
push
pop
adcl
xor
idivb
jmp
cmp
stc
lea
cmpsl
out
xor
sub
pop
and
lock
ds
pop
inc
inc
cltd
xchg
adc
pop
mov
cmpsb
lods
mov
push
mov
inc
jmp
cltd
icebp
das
push
sbbb
xor
and
pop
adc
lods
mov
lea
into
fcoml
mov
imul
jno
les
mov
loopne
out
outsb
fdiv
pusha
xor
sbb
je
bound
loop
es
sub
and
xchg
xor
out
add
xor
add
jno
cmpsl
push
xchg
inc
mov
sbb
and
or
and
mov
adc
push
ss
dec
xchg
inc
test
push
jmp
insl
mov
inc
mov
mov
shlb
adc
lods
or
les
mov
sub
es
icebp
cmp
xor
pop
jmp
or
push
insl
icebp
lds
push
lret
subl
pop
pushf
mov
adc
sbb
out
or
insl
les
cmpsb
fbld
pop
mov
addr16
inc
xor
sbb
dec
adc
daa
into
std
es
test
adc
movsb
pop
cmpsl
insl
ja
add
dec
push
mov
jne
pop
jge
mov
pop
pop
pop
add
js
push
cs
pop
cmp
fs
jo
jmp
mov
inc
nop
cmp
mov
fistps
push
inc
push
mov
lret
lock
xchg
or
jge
test
loope
aam
sub
mov
scas
xchg
aas
adc
out
sti
in
inc
inc
sbb
rcrl
and
fdiv
test
aaa
aaa
sub
addr16
loope
loop
or
das
sbb
cmp
out
jo
rcr
adc
cmpl
pop
fidivs
inc
jo
push
inc
mov
sub
or
fisttps
nop
push
std
loope
cmpsl
sbb
jge
cmp
lock
fnsave
push
push
ja
lcall
dec
ljmp
xchg
into
push
rcll
jecxz
push
daa
dec
lods
xor
cmpsl
push
add
push
aam
negl
xchg
push
jmp
push
sbb
ljmp
stos
fmull
fldenv
aaa
sub
cmp
xchg
pop
adc
jo
or
cmpsl
inc
aad
cltd
js
inc
lds
popa
add
push
xor
pusha
stos
add
lea
dec
mov
loope
cld
push
int3
mov
leave
jno
pushf
out
sbb
inc
inc
mov
cmp
jns
add
enter
mov
stos
dec
cwtl
pop
inc
jle
out
pop
test
cltd
cld
mov
and
jle
push
mov
loope
inc
dec
push
pop
mov
xor
mov
lret
inc
sub
lahf
in
leave
pop
fistpl
xchg
jp
fadds
or
mov
cmp
pop
repz
lret
loopne
lcall
dec
pop
xchg
stos
sahf
push
lock
inc
das
mov
sbb
repz
dec
sahf
mov
fmul
pop
aad
cmpsb
and
jl
ret
pop
mov
mov
inc
xchg
icebp
fsubrl
xor
imul
and
inc
ret
sub
mov
imul
jg
movsl
les
or
mov
adc
shrl
jmp
fsubs
vpsrlq
push
push
test
sbb
nop
jbe
inc
movsl
icebp
lods
lods
jae
or
mov
jg
xchg
pushf
xor
rcll
mov
inc
sub
jg
call
aas
add
movsb
xlat
jbe
fisttpll
pusha
or
cmp
mov
cmp
xchg
ret
das
push
in
jp
dec
xor
arpl
cmp
fistpll
shr
inc
inc
iret
sub
repz
into
rol
clc
push
add
dec
lock
mov
xor
inc
pop
sub
xor
mov
inc
pop
repnz
or
shrb
lret
xor
stos
xchg
pop
lock
addr16
cmc
add
adc
inc
iret
jl
mov
mov
inc
xchg
lahf
lea
or
jl
lea
je
dec
cmc
shll
clc
imul
xchg
ljmp
jb
add
in
pop
lods
pushf
mov
cmp
std
outsb
adc
imull
fcoml
shlb
push
push
in
lcall
xchg
imul
pushf
xchg
pop
xchg
sbb
xchg
sbb
lret
aas
and
mov
mov
mov
and
out
cld
mov
sbb
xlat
pop
lods
sbb
shrb
dec
dec
lahf
sbb
or
movups
inc
int3
lea
dec
or
loopne
jnp
es
xchg
add
mov
out
jmp
fimull
mov
lret
sub
jno
xor
push
pop
pusha
sarl
mov
icebp
sub
mov
push
sti
push
mov
test
cmp
add
lahf
xchg
shlb
mov
mov
ja
lds
decb
loope
xchg
cmpsl
imul
add
pop
adc
xchg
loope
jmp
cltd
push
xchg
sub
pushf
adc
xchg
jmp
loope
mov
lret
adc
cmpsb
aad
adc
fisubrs
jo
test
int3
shl
aad
adc
xchg
jecxz
and
lret
int
jns
jno
call
xchg
gs
mov
out
lret
cmp
xchg
lea
pop
pop
or
out
push
ljmp
push
call
xchg
pop
out
addr16
sarl
dec
jmp
pop
fucom
mov
fs
idiv
in
mov
mov
mov
in
in
mov
inc
pop
aad
add
ljmp
jbe
dec
push
jle
sbb
jg
sub
dec
insl
ljmp
scas
mov
adc
inc
cmpsb
inc
or
rcrb
sub
loopne
aam
adc
leave
mov
mov
lahf
cmp
add
push
imul
add
popa
mov
mov
mov
or
and
sub
push
xor
cmpsl
or
cmpsb
jle
pop
mov
cld
mov
or
jmp
and
dec
or
pop
loop
push
cmpb
cmc
mov
lahf
inc
mov
mov
jnp
test
lock
mov
pop
jbe
cmp
inc
rcrl
or
or
push
adc
xor
inc
shrb
jo
into
imul
int
inc
fldcw
xor
int
pop
fnstsw
icebp
xor
pop
ret
mov
je
adc
imul
push
lret
data16
jae
inc
add
repz
mov
shlb
push
mov
shlb
int
push
cmpsb
dec
jg
or
loopne
sub
enter
lret
sbb
movsb
insl
mov
movsb
sbb
mov
mov
jns
xor
push
push
scas
jl
adc
cmp
ds
stos
call
je
sub
or
xor
orb
mov
push
push
xor
pop
cmc
cmpsb
xchg
adc
fsubl
push
stos
push
lods
scas
shrb
in
mov
aas
xchg
decb
push
mov
lds
mov
inc
jp
jle
out
popa
mov
xchg
jbe
push
dec
pop
jb
cmpsl
inc
outsl
and
pop
adc
xchg
and
popa
cld
std
pminsw
imul
mov
add
in
xchg
in
inc
orb
adc
fistl
cmpsb
cli
cwtl
fisubl
loop
sub
cmpsl
das
insl
cmpsl
sarl
mov
xchg
ss
sub
mov
inc
ja
mov
mov
pop
scas
pop
inc
pop
adc
ret
outsl
ja
push
pop
and
pop
cwtl
ret
jp
imul
cwtl
mov
lds
lret
pop
fmulp
punpcklwd
mov
lock
icebp
leave
cltd
xlat
sbb
mov
jbe
cmp
lock
pop
adc
ret
xor
xor
cwtl
mov
loope
dec
and
inc
scas
into
sahf
aad
sbb
jne
mov
jle
and
and
les
mov
add
sbb
inc
repnz
lods
out
xlat
sub
sahf
xor
xchg
mov
jbe
andl
imul
pop
xchg
mov
gs
jns
outsb
test
dec
shll
pop
push
shll
std
cmp
lret
push
jl
inc
das
push
pop
out
mov
push
mov
jns
inc
push
pusha
push
bound
pop
mov
xor
or
stos
sbb
jno
addb
sbb
sub
scas
lds
pop
in
shr
jg
mov
and
or
sahf
or
xchg
add
adc
push
push
push
cwtl
test
int3
in
and
mov
xchg
in
fs
sbb
addb
jle
xchg
pop
ja,pt
pop
aad
sub
loop
inc
push
cmc
notb
test
mov
pop
dec
es
push
jbe
jb
adc
jbe
jne
xchg
insb
adc
outsb
jl
mov
sub
fs
out
cmp
jo
sub
imul
rsqrtps
mov
ret
icebp
loop
sub
sbb
fwait
push
jle
daa
dec
stc
or
out
push
sti
stos
sbb
xchg
add
sub
pop
mov
loop
mov
fadds
sbb
adc
or
adc
sub
dec
shll
out
repz
insb
mov
or
or
fcmovnbe
xchg
loopne
push
repnz
mov
int
mov
loopne
mov
mov
les
popa
lea
icebp
hlt
pop
cmpsl
xchg
repnz
ljmp
dec
out
add
out
cli
xchg
add
add
incb
inc
pop
sarl
cmp
xchg
or
xchg
sti
inc
or
push
icebp
ret
push
mov
hlt
xor
out
sub
imul
es
xchg
lcall
imul
cwtl
pop
je
or
mov
addl
aaa
push
jnp
fdivs
dec
lea
mov
pop
popf
mov
pop
pusha
mov
pop
gs
imul
mov
inc
loope
sahf
cmpxchg
test
mov
sarb
cmc
and
andl
lret
lret
or
arpl
push
ficomps
ret
sbb
aas
cmpb
adc
scas
and
aas
mov
dec
sbbl
push
cmp
outsl
push
add
mov
mov
ret
xchg
sbb
jl
stos
les
int
sbb
sbb
mov
sahf
mov
inc
push
imull
ret
pop
cmc
imul
arpl
jbe
in
pop
cmp
arpl
jae
aam
adc
mov
cmp
rolb
loop
stos
sbb
pop
fistl
loope
cld
jno
add
pop
imul
pop
push
push
jae
pop
and
cmp
mov
cs
push
adc
aad
imul
movl
cmp
dec
inc
push
jnp
pusha
ds
mov
test
stos
ja
testl
sbb
arpl
addr16
clc
ljmp
cs
das
js
xchg
mov
aam
inc
add
test
xchg
loope
jecxz
pop
push
into
push
inc
popa
xchg
negl
mov
push
xchg
sahf
jae
and
jg
xchg
mov
decl
ja
mov
xor
mov
outsl
mov
shrl
xor
sbb
add
mov
mov
insb
jns
insl
test
gs
hlt
cmc
or
daa
enter
and
sbbl
cmp
pop
push
push
dec
sub
aaa
push
dec
xchg
inc
fcomps
gs
xlat
jbe
cmp
pop
shrl
push
inc
dec
test
jbe
jg
push
sbbb
xchg
mov
pop
lock
pop
movsl
cltd
cmp
inc
adc
loopne
lea
adc
aam
mov
push
push
inc
leave
ja
lea
xchg
in
lods
loope
push
nop
push
mov
aas
dec
lock
or
inc
jae
clc
rclb
das
imul
jle
sbb
and
xchg
adc
lock
loopne
jle
cld
shrb
cmpl
in
push
adc
aad
aam
fdivrp
in
mov
das
in
in
inc
push
mov
cli
jns
and
js
adcl
mov
adc
jne
fstp
fiadds
push
pop
push
in
fildl
rcrb
jl
dec
fdivrl
mov
pop
shlb
mov
mov
mov
mov
loopne
cmp
lods
mov
dec
fwait
dec
push
dec
mov
imul
mov
shl
sub
fs
xchg
xchg
jle
mov
mov
push
loope
inc
stos
jmp
dec
popf
aas
addb
jae
push
mov
repz
push
bound
std
inc
in
add
inc
cmp
xor
dec
or
mull
xchg
fwait
jg
and
mov
xchg
sub
out
or
roll
mov
loop
dec
into
push
imul
ljmp
cwtl
popa
fst
jno
dec
out
push
cli
das
test
enter
mov
push
inc
mov
loopne
in
pop
mov
cmp
add
pop
sub
inc
stos
adc
jmp
mov
and
jnp
sub
mov
add
lods
mov
xor
shlb
mov
and
inc
lods
pop
in
fldcw
cmpsb
js
movsb
js
adc
fs
ficompl
inc
clc
fwait
mov
es
xor
xchg
inc
aam
or
test
loopne
sub
lock
jae
xor
outsl
stos
lcall
push
mov
stc
lods
sbb
aaa
inc
aaa
jne
and
jle
out
movsb
push
fcmovnbe
insl
int
inc
jne
jb
adc
or
push
and
lret
out
loop
jne
sbb
push
repz
mov
stc
ret
imul
icebp
out
cmp
outsb
mov
ss
lods
jmp
push
hlt
cmp
icebp
pushf
hlt
lds
lods
or
mov
mov
in
leave
movsb
cmp
mov
aaa
ficompl
fstps
fldt
xchg
subb
inc
loopne
mov
xchg
push
mov
push
loop
adc
pushf
popa
mov
shrb
cmp
fcomps
jmp
and
pop
aam
aas
cltd
lods
sti
pusha
js
mov
lret
mov
push
mov
xor
adc
cmpsl
pop
into
fisttpll
xchg
inc
jmp
push
js
orb
fists
lcall
cmovs
nop
rcrl
std
andb
es
pop
add
mov
out
push
in
aas
dec
inc
rcrl
shll
lret
mov
add
sub
sub
ss
clc
xchg
push
out
xchg
push
nop
and
out
inc
lods
addr16
clc
xor
pusha
iret
sub
aad
and
testb
mov
ret
scas
dec
sub
or
test
mov
and
xchg
inc
inc
data16
pop
jb
push
cmc
push
add
push
ljmp
xchg
pop
dec
jo
shl
cmp
ljmp
fwait
push
xchg
popf
popa
and
push
mov
xor
xchg
mov
rorb
testl
fs
sbb
jle
cmp
outsl
clc
and
dec
inc
push
sub
xor
mov
test
es
cmp
mov
stos
mov
leave
subl
sub
jo
fcomi
sbb
and
stos
mov
mov
add
faddl
mov
sbb
stos
xchg
notl
mov
test
cli
add
jp
js
fwait
or
xchg
stc
jns
dec
iret
ja
pop
gs
cltd
pop
cmpsl
repnz
lods
xchg
nop
pusha
aad
adc
jmp
inc
fwait
cmp
sub
ret
xchg
dec
mov
imul
in
dec
repz
adc
jne
rclb
cmp
cli
push
dec
xlat
push
lret
pop
stos
repnz
cli
mov
or
and
fisttpll
arpl
adc
mov
mov
mov
mov
dec
mov
addr16
dec
movsl
sbb
mov
cmpsb
inc
sub
mov
dec
cmpsb
cmp
jbe
out
xchg
sub
mov
pop
xchg
pop
xchg
push
dec
pop
cmc
inc
cmp
push
nop
dec
or
push
hlt
scas
mov
fadds
add
inc
mov
movsl
nop
cmp
gs
aas
repz
fnstsw
inc
sbb
ss
idivb
sbb
dec
fmuls
sub
cmp
mov
push
das
or
rorb
or
xor
sbb
push
adc
cs
hlt
out
fstl
mov
adc
and
pop
push
ljmp
pop
lea
mov
iret
jle
pop
jo
add
mov
or
flds
andb
xor
adc
lahf
imull
pusha
in
xor
xor
cli
mov
xor
stos
gs
imul
test
aas
jp
mov
xorb
add
cmp
testb
push
and
sbb
add
mov
mov
mov
enter
lea
in
fisubs
add
sub
cmpl
mov
push
dec
loope
aaa
movsb
xchg
sbb
fwait
into
mov
dec
nop
pop
push
inc
mov
sbb
xchg
sub
sub
sub
in
lock
jg
scas
testb
cmp
aas
and
and
pushf
xor
pop
in
mov
push
add
mov
loop
dec
push
fs
mov
cltd
aad
out
jmp
xor
imul
movsb
icebp
ljmp
push
popa
pop
lahf
out
js
inc
in
inc
jecxz
push
and
or
lods
fxch
or
jmp
gs
mov
lahf
jns
in
mov
sub
lds
cmc
push
lcall
xchg
lods
mov
push
pushf
sbb
inc
lret
mov
shl
rcl
ljmp
out
adc
dec
pop
pop
xchg
sub
scas
das
sbb
pop
add
pop
pop
scas
jnp
xchg
in
js
push
push
inc
movsl
iret
jne
mov
orl
not
shlb
jge
popf
call
pusha
jecxz
test
ljmp
pushf
xchg
inc
push
mov
push
mov
cmp
dec
negb
xor
and
out
je
xchg
sbb
xchg
or
arpl
leave
mov
jmp
xor
pop
lds
test
inc
arpl
loopne
ret
pop
jno
dec
fwait
xchg
lods
add
leave
mov
pop
xchg
and
sti
out
js
jno
icebp
or
cwtl
loope
jmp
push
push
cmp
push
arpl
or
push
xor
into
mov
add
movl
int3
mov
xchg
xchg
loop
inc
cmp
pop
lock
jle
push
mov
add
fs
popf
adc
adc
pushf
jns
pushf
aaa
call
fcompl
call
xlat
jp
or
aad
test
jno
fcmovu
mov
inc
stos
pop
stos
mov
cmp
sahf
pop
xor
pop
rorb
add
inc
fistps
dec
jle
cmpb
stos
aaa
inc
push
xchg
scas
ficoms
stc
push
push
mov
fs
lds
jae
push
adc
std
icebp
sti
sbb
pop
add
notb
gs
mov
jne
and
inc
and
dec
xorb
fdivs
lods
insl
enter
stc
lcall
inc
inc
pop
push
and
push
inc
jb
jg
das
ret
cld
dec
mov
outsb
mov
imul
addr16
scas
mov
scas
dec
cmpsb
hlt
pop
aaa
popf
push
xchg
cmp
add
inc
pop
xchg
xor
aas
xor
jae,pt
inc
xor
int3
aaa
and
xchg
push
cmp
mov
fsubr
jno
sub
popf
dec
and
cmpsb
ljmp
pushf
add
ret
xchg
je
cmp
dec
pop
lret
shlb
notl
jg
push
sub
movsl
cmpsl
cltd
rorb
incl
or
ror
test
mov
sti
fistpl
or
clc
roll
pop
xor
lock
aad
push
ljmp
mov
out
arpl
lahf
test
mov
lods
mov
into
loop
or
jnp
cwtl
or
jl
cmp
jge
mov
jmp
add
scas
mov
push
mov
mov
xchg
cmp
cwtl
mov
jno
popf
test
movsb
push
fwait
xchg
insl
mov
jbe
mov
clc
cli
test
fdivl
push
jno
imul
xchg
xor
in
sbb
std
inc
ljmp
imul
inc
pop
arpl
jp
sti
pop
subl
push
ret
add
js
nopl
dec
into
icebp
jae
or
xchg
push
ss
push
or
repz
or
push
cmp
sub
shll
adc
jae
cli
sbb
adc
jnp
inc
std
lea
lahf
imul
orl
mov
push
and
adc
xlat
xchg
pushf
pop
subb
mov
test
xchg
xchg
cmp
nop
cmp
call
xlat
or
test
rcrl
imul
adc
mov
mov
gs
xchg
mov
incl
add
xchg
inc
fidivs
add
adc
dec
push
pop
mov
out
es
jl
ret
xor
jno,pn
orb
rorl
ficoms
mov
insl
cwtl
pushf
mov
stos
cmp
mov
std
adc
dec
xor
idiv
cmp
insb
and
push
push
pop
jmp
dec
jbe
popa
out
push
lea
add
mov
fmuls
enter
lahf
cmp
cs
xchg
mov
cmp
mov
adcl
inc
add
adc
movsb
push
pop
sbb
test
loop
roll
mov
inc
int3
mov
jae
xlat
cmpsb
sar
icebp
inc
shl
inc
push
jae
inc
inc
addr16
mov
out
lret
or
enter
insl
fwait
jns
push
mov
insb
pop
call
add
xor
ret
xor
fldt
pmaddwd
cmpsl
adc
movsl
xchg
es
scas
fidivrs
cs
jns
and
xlat
sub
mov
add
mov
mov
sub
mov
xchg
je
xchg
adc
fistl
mov
pop
sub
arpl
imul
push
add
xor
lods
stos
in
rclb
inc
add
inc
loopne
sbb
add
xchg
jp
inc
negl
lahf
push
pop
push
int3
jecxz
and
inc
das
cwtl
lock
and
sbb
mov
scas
mov
mov
lods
xor
dec
fucom
mov
push
in
fisttpl
jno
pop
cmp
idivb
ljmp
cld
scas
xchg
mov
add
sbb
xchg
dec
jg
xchg
dec
mov
push
or
dec
or
dec
es
sbb
xchg
jo
enter
dec
stc
mov
aam
out
sub
clc
rcll
inc
loop
inc
movsl
xlat
fcomip
out
ret
push
mov
dec
les
data16
pop
add
insb
sti
lret
inc
mov
push
sub
into
dec
popf
imul
mov
xchg
fsubrs
aaa
mov
jno
xorl
je
test
dec
jns
jae
xor
dec
xor
mov
adc
xor
addr16
mov
mov
and
js
inc
mov
jl
mov
aas
fcoml
roll
insb
pusha
es
aas
sub
inc
data16
pusha
movsb
mov
cmpsb
icebp
or
test
lea
mov
pop
mov
std
loop
pop
gs
mov
xchg
jl
sbb
mov
testb
testl
sbb
lods
sbb
shll
dec
and
gs
jno
int3
roll
xchg
loope
mul
push
push
add
or
pop
popa
lds
mov
cld
lds
scas
sbb
mov
inc
and
mov
push
cli
insl
idivb
out
and
sbb
in
add
dec
xor
inc
pop
movsb
inc
mov
out
inc
xchg
sbb
add
mov
push
push
shll
jecxz
xor
sub
cltd
mov
loope
sbb
dec
flds
cmp
movsl
xchg
scas
pop
jg
mov
hlt
push
dec
inc
ret
addr16
out
jae
jle
cltd
add
arpl
or
cmp
lret
dec
popa
pop
add
cmp
enter
into
mov
lret
mov
cld
push
ret
pushf
mov
jbe
xor
jno
imul
pop
jp
push
mov
hlt
std
mov
scas
in
sti
or
pop
or
hlt
pop
insl
psubusb
out
decb
or
xchg
jge
hlt
jge
fidivs
mov
es
pop
icebp
pop
ss
shll
aam
dec
lcall
mov
jb
jno
js
cmp
pop
in
jle
mov
fistl
sbb
aas
sbb
push
sarb
or
dec
into
xor
sbb
ja
out
or
leave
inc
mov
and
mov
enter
pop
es
add
mov
xor
ret
pop
cmc
or
in
call
mov
imul
lret
xor
jp
adc
mov
lds
fwait
cli
mov
lea
pop
inc
addr16
mov
divl
movsb
sub
shlb
imul
iret
in
or
jl
mov
mov
jns
nop
insl
dec
aaa
outsb
mov
sti
bound
mov
sub
and
aad
sbbb
imull
mov
mov
lret
lcall
ss
cmp
scas
cmpsb
mov
mov
ss
test
or
mov
mov
inc
out
mov
pop
mov
push
loop
iret
js
loope
fcmovbe
lds
mov
push
pop
mov
jnp
mov
inc
jge
jb
adc
out
imul
mov
iret
addl
cwtl
ljmp
stc
nop
ret
arpl
notl
notl
or
cld
mov
lods
mov
xor
insb
movsl
stos
inc
mov
cmp
xchg
stc
cmp
andl
cmp
pusha
mov
lods
sbb
imul
rclb
or
punpckhbw
and
adc
mov
sub
mov
insb
jecxz
pop
cwtl
bound
std
subb
movb
outsb
fs
push
rcll
sbb
dec
shlb
push
pusha
test
fwait
adc
arpl
into
addb
scas
push
loop
cmp
stc
xlat
iret
dec
mov
jle
loop
stos
mov
test
push
int
mov
leave
xor
lahf
pushf
sub
push
fldl2e
jle
es
pop
sub
lret
pop
lods
mov
int
cmc
or
mov
sti
leave
cmc
movsb
les
ds
aam
ds
jno
sti
cmp
cwtl
repnz
adc
fcomi
loop
and
in
add
lds
sub
mov
vmovd
mov
or
sub
mov
add
jnp
insb
mov
inc
xorl
jle
imul
adc
jo
and
adc
add
mov
inc
inc
mov
rolb
add
addr16
addr16
loope
adc
add
sbb
sub
pmullw
mov
pushf
dec
or
adc
xlat
xchg
lret
mov
dec
pop
shll
jl
push
movsb
sbbb
and
pop
mov
aad
das
ja
push
push
test
ud2
aam
iret
mov
pop
call
and
sbb
mov
out
or
xchg
pusha
inc
lcall
in
sahf
jecxz
lret
jg
add
in
sub
mull
sbb
add
cmp
inc
push
inc
in
mov
mov
lret
js
scas
and
cmpsl
aaa
out
outsl
push
clc
mov
inc
icebp
mov
lret
sub
arpl
stos
xor
int
sarb
or
add
push
sub
repnz
push
idivb
scas
call
mov
fists
adc
loop
mov
fs
jl
ds
aad
inc
fsubr
in
mov
mov
cmp
push
inc
rorb
xchg
dec
pushf
cmp
call
or
inc
and
subl
inc
arpl
clc
mov
jns
adc
cltd
pusha
jns
sbb
nop
ljmp
cmp
inc
cmp
lods
fcomi
addb
pop
aad
into
dec
inc
aaa
mov
add
push
in
pop
into
dec
cmp
push
fidivs
repz
xchg
mov
sbb
jecxz
push
dec
xor
lock
jmp
mov
rcl
hlt
mov
sbb
pop
jecxz
in
mov
nop
into
rcr
call
ja
out
or
mov
mov
aas
ss
mov
add
adc
mov
mulb
and
push
sub
pop
popa
xorl
sub
jne
push
rcll
movsb
dec
sbb
stc
out
push
out
fbstp
pop
and
idiv
pop
jle
lret
popa
pop
inc
dec
and
adc
es
mov
push
shlb
test
fists
pop
xchg
sbb
push
das
pop
and
mov
add
add
xlat
dec
aam
aad
push
sub
mov
mov
iret
mov
mov
mov
xchg
pop
mov
dec
sub
cli
mov
daa
movsl
fnsave
ficoml
sbb
add
add
adc
add
repz
aas
out
or
js
push
cmp
cmp
mov
dec
inc
push
call
mov
or
add
dec
cmp
adc
outsl
add
xor
clc
xor
pop
push
cli
pushw
jo
pop
jns
cltd
jge
je
mov
pop
inc
int
repnz
mov
int
cmp
aad
inc
sub
cld
dec
adc
add
or
jg
in
jge
call
inc
insl
mov
cmp
shl
loop
enter
jmp
mov
arpl
hlt
inc
outsb
pusha
std
je
stos
aaa
push
cld
push
cwtl
adc
pushf
jle
xor
loope
sub
sub
cmp
mov
lahf
cli
jmp
out
pop
insb
add
mov
mov
dec
stos
mov
xorb
mov
out
xor
jb
sti
lea
xchg
lock
push
xchg
xor
cld
imul
loope
xchg
cmpl
jp
jae
icebp
dec
pop
xchg
cmp
int
jns
sarl
xor
cmp
jno
dec
cmc
ret
mov
mov
cmp
pop
pop
addr16
dec
negl
xor
mov
stos
out
xchg
jne
in
push
cs
fldt
fisubrs
xor
push
shl
pop
mov
xchg
cmpb
jne
out
mov
repnz
cmp
cwtl
push
movsl
push
stos
push
mov
out
mov
movsl
push
dec
hlt
push
fisubrl
sub
inc
xchg
and
cmp
inc
loopne
inc
sbb
arpl
xchg
sub
ds
sarl
es
loop
mov
cmp
ljmp
xchg
xchg
shl
cs
sti
scas
adc
cltd
mov
stc
add
or
jecxz
shll
pushf
loopne
arpl
call
sarb
mov
ljmp
dec
addb
movsl
add
lods
jne
sbb
jns
fs
adc
push
pop
dec
repz
push
mov
mov
cs
jge
out
insl
icebp
jp
adc
xchg
movsl
xor
push
pop
adc
xlat
pop
adc
adcb
cwtl
cmpsb
jnp
pop
or
ds
cmpsl
int3
and
cmpsb
push
popf
icebp
mov
movsb
jno
mov
xchg
fists
pop
adc
xor
in
add
or
push
int
popl
dec
push
adc
ss
leave
test
push
data16
sbb
fwait
aad
adc
mov
jne
popf
insb
jo
lea
idiv
loope
push
mov
inc
outsb
loopne
jbe
and
into
orl
sbb
inc
stos
lods
lds
fisttpl
dec
and
imull
mov
pop
inc
test
data16
sub
adc
mov
cmpsl
jl
in
fcmove
push
shr
test
js
and
popf
push
stc
lods
push
mov
shll
loopne
fdiv
sbb
mov
int3
call
ss
pop
jno
adc
aad
xchg
mov
mov
hlt
mov
enter
sbbl
mov
fisubrl
js
adc
aaa
xchg
out
out
dec
test
vsqrtss
xchg
cmpsb
mov
inc
sbb
pop
push
lahf
and
lods
jecxz
add
loop
xor
jg
std
jge
nop
insb
dec
adc
jmp
push
pop
or
sarl
fmuls
and
adc
push
pop
jp
fildll
scas
xor
loop
int
xchg
or
outsb
gs
out
subb
cwtl
pop
jno
scas
push
push
jg
sti
push
hlt
push
add
adc
jmp
mov
in
mov
fcompl
jle
jns
sbb
shlb
mov
mov
iret
sti
sbb
inc
mov
or
repnz
xchg
or
xchg
mov
cs
mov
mov
andl
lea
subl
loope
xchg
dec
mov
into
dec
ss
in
movsb
jl
ret
sub
fcomps
sub
test
mov
or
lahf
das
inc
xchg
cmpsb
mov
call
xchg
xchg
test
out
test
sub
push
test
and
add
pop
sbb
scas
or
push
outsl
test
ja
int
je
les
dec
jnp
jmp
cs
movsl
inc
fimuls
push
add
jnp
jb
lock
outsl
pop
insl
mov
mulb
and
call
insl
pop
mov
or
sti
jmp
push
and
repnz
int3
mov
lea
adc
lods
lea
mov
mov
cbtw
pop
pusha
bound
aas
hlt
add
push
out
pop
sbb
adc
movb
xchg
clc
add
movl
mov
push
lret
and
xlat
push
mov
xor
aas
xor
aas
adc
push
inc
scas
add
lds
pop
movb
mov
mov
testl
out
inc
out
dec
jns
std
ret
dec
aam
les
lods
mov
pop
stc
fildl
int
push
inc
into
repz
cmp
mov
inc
xchg
xchg
aaa
enter
stc
pop
inc
jge
and
lods
add
sub
gs
sub
mov
dec
jg
test
mull
and
mov
xchg
iret
rcll
jns
sub
les
xlat
inc
out
imul
aas
sbb
iret
dec
adc
jg
bound
inc
shl
popl
inc
adc
imul
icebp
sar
jp
fcomps
ss
inc
jg
push
cmpsb
clc
or
sub
movsl
bound
pop
sub
fbld
and
mov
pop
stos
imul
or
inc
int
gs
add
push
pushf
test
pushf
push
and
sti
orl
cmpsl
jb
dec
cmpsb
addl
sub
fs
push
mov
insb
cs
das
pop
ss
add
jb
daa
pop
lds
clc
mov
popa
adc
inc
shrl
jmp
subl
adcl
jbe
push
cmp
outsl
xchg
ficoml
lret
fistpl
cmpl
and
lret
clc
pop
iret
add
test
sub
popa
mov
push
sahf
cltd
or
jb
insb
popa
je
cmc
clc
filds
enter
xchg
ds
jnp
test
mov
gs
lahf
sahf
bound
shlb
in
int3
jns
push
or
jbe
sbb
jo
mov
cld
pop
daa
lret
cmp
xor
dec
jb
in
pop
je
dec
adc
or
lcall
iret
frstor
out
iret
mov
xchg
fmulp
and
push
mov
sub
push
jg
adc
popa
pop
test
stos
adc
out
xchg
repnz
pop
mov
out
cmp
rorl
dec
dec
movsb
dec
mov
lds
pop
or
inc
fwait
dec
mov
inc
clc
enter
sahf
add
sbb
repz
mov
pop
and
jnp
not
mov
fldcw
or
scas
cmpl
push
pop
and
or
xchg
jl
cmp
or
inc
and
movsl
sbb
jl
xor
pop
cmpsl
sti
sbb
imul
dec
loope
push
jecxz
pop
jns
pop
icebp
hlt
mov
mov
dec
popa
pop
loope
mov
jo
jle
mov
mov
sbb
sbb
ljmp
lods
xor
addr16
add
js
test
ror
push
int3
jae
fs
mov
sti
or
into
add
xchg
push
sbb
adc
bound
add
insl
mov
cs
dec
mov
out
dec
cmp
push
icebp
push
jg
mov
or
xchg
das
dec
push
cmp
xlat
jg
andl
add
sti
sbbl
lret
mov
pushf
or
jmp
sub
vpcmpeqw
dec
fcmovnbe
or
dec
inc
aas
sti
pop
pop
test
ror
xor
repz
test
cmp
add
xchg
call
jne
or
xor
dec
aas
stc
lahf
cmc
hlt
insb
call
jmp
push
inc
fldl
int3
cmp
xchg
mov
rorb
sbb
push
test
adc
std
add
enter
repnz
dec
scas
xchg
mov
ja
test
pop
fwait
pop
push
cmp
rcrb
int
mov
pop
mov
cs
es
fistps
pop
xor
sbb
push
sbb
or
out
movlps
mov
xchg
dec
push
and
jl
ret
out
rorb
mov
leave
fisttps
adc
inc
mov
sub
mov
jb
sub
lcall
or
idivb
jnp
sti
pop
cmp
xchg
adc
cmp
mov
shrb
mov
leave
ljmp
sub
mov
dec
add
popa
fdivp
adc
outsb
fadd
icebp
cmp
dec
repnz
andl
mov
jmp
repnz
sub
sub
adc
mov
lods
in
jge
test
test
push
push
stos
or
inc
dec
push
out
xor
xchg
jnp
xlat
inc
fs
call
pop
mov
cmpsb
mov
inc
pop
dec
mov
pop
pop
pusha
imul
xchg
in
inc
imul
dec
cmpsb
push
push
test
clc
cld
testl
jnp
icebp
mov
or
jae
out
das
mov
sbb
jno
ret
mov
mov
insl
inc
adc
jecxz
sbb
enter
mov
in
xchg
cli
rcll
push
sbb
dec
add
mov
rclb
pop
mov
and
pop
or
or
imul
in
outsl
xchg
dec
ja
mov
aam
imul
stc
sbb
int
ds
push
cwtl
pop
and
xor
mov
addb
push
jae
aaa
stos
and
mov
sarb
mull
mov
test
lret
shr
sub
out
insl
stos
mov
xchg
sub
xchg
add
sbb
sbb
or
mov
daa
xor
jns
rorl
sbb
fwait
enter
pop
std
or
loopne
and
enter
xchg
mov
sbb
and
mov
push
fdivrs
lret
sbb
roll
adc
loopne
outsl
lcall
and
mov
xorb
ss
aas
pop
andl
icebp
in
outsb
pop
adc
inc
cmp
and
loop
cmp
jo
jmp
sbb
or
xchg
push
inc
loopne
jnp
pop
not
push
cmp
push
int
mov
xchg
jle
jno
out
es
xchg
pop
ljmp
fsubrs
ret
jno
mov
std
aam
hlt
lock
fcmovnbe
lods
and
shlb
pop
jle
cld
and
arpl
jo
xor
xlat
js
sbb
xchg
adc
and
adc
inc
inc
or
pusha
ret
sbb
push
sarl
cmpsb
ret
out
sub
mov
ljmp
mov
jae
leave
scas
pushf
push
xor
add
sbb
arpl
cmpsl
sbb
mov
jae
scas
int3
jg
jg
inc
ja
push
mov
leave
aam
mov
cmc
pushf
jp
mov
pop
sub
and
into
mov
inc
pop
add
cmp
scas
jns
jp
lret
pop
stc
lock
es
lea
push
cs
std
pop
mov
push
repnz
adc
mov
jle
int
outsl
jp
ja
loope
dec
and
add
rcrl
ret
adcb
mov
ret
jae
push
js
arpl
test
lods
ds
mov
inc
mov
ret
bound
cmp
cmp
mov
sbbb
inc
insl
mov
cli
bound
mov
js
cmp
adc
and
es
adc
adc
mov
adc
xor
cmp
inc
cmp
mov
push
jnp
pop
jle
inc
jg
fists
fstpt
imul
mov
out
mov
cmp
test
add
dec
xor
dec
aaa
imul
stc
daa
divb
jecxz
cmpsb
add
xor
mov
out
jmp
xorl
decl
je
imulb
add
push
jns
je
cli
push
fcompl
adc
xor
cli
movsb
push
pop
xchg
adc
sbb
filds
mov
xlat
std
mov
fwait
js
ss
dec
add
inc
jp
dec
sahf
mov
jns
aas
test
dec
addr16
cli
jmp
sbb
sbb
std
xlat
pop
fwait
into
mov
imul
cli
in
call
mov
jecxz
push
lods
repnz
psubusw
mov
inc
xor
push
jne
int
fbld
or
push
mov
insb
jge
xchg
adc
fs
loope
inc
sbb
sub
sbb
push
popa
cltd
mov
push
icebp
inc
loopne
out
leave
mov
jnp
lcall
ljmp
dec
rclb
cmp
int
inc
fisubl
inc
pop
mov
mov
adc
jb
cmc
adc
dec
sub
xchg
lods
mov
cmp
sbb
fisttpll
and
out
xor
jb
cmp
loopne
imul
xchg
and
cmpsl
push
pop
mov
xor
arpl
insl
jmp
arpl
int
in
int
xchg
dec
lcall
decl
repnz
jmp
mov
dec
sbb
adcl
xchg
push
aas
mov
adc
push
ja
out
sub
idivl
jmp
cli
loopne
dec
movups
popf
fwait
and
jp
ljmp
cmpsl
cmp
stc
lea
es
test
mov
mov
xchg
pushf
pop
dec
sbb
fisubrs
jp
pop
outsb
jecxz
iret
out
fimuls
adc
iret
mov
cmp
mov
push
jb
xor
fists
das
cmp
gs
fmuls
sub
aaa
mov
and
je
mov
or
dec
dec
jnp
icebp
cmpsl
add
sub
push
adc
pop
test
or
adc
insl
fwait
adc
data16
cmp
ds
inc
inc
lret
add
mov
int3
outsb
inc
leave
ds
mov
xchg
movsb
into
push
push
or
movsl
mov
add
sub
jo
xor
insl
xor
out
fcmovu
into
scas
shrb
inc
sbb
les
test
sub
jae
pop
pushf
dec
cmp
in
push
and
xor
es
xor
push
lock
loopne
out
icebp
pop
iret
mov
cmp
ss
icebp
push
pop
enter
in
push
sub
sti
pop
bnd
push
lods
pushf
lock
adc
sub
and
adc
cmp
mov
inc
in
or
in
stos
out
dec
jb
jb
fcomp
je
popf
cmc
xchg
insb
cmp
cli
push
lock
jmp
pop
xchg
mov
sarl
xor
out
or
ja
inc
mov
pushl
js
push
mov
inc
push
movsb
push
cli
push
inc
jmp
dec
xchg
ss
mov
add
fcmove
pusha
fnsave
adc
out
adc
adc
insl
cmp
xor
loop
jg
or
xor
daa
das
cmp
daa
cmp
dec
movsl
cltd
sti
jo
cmpsb
js
sbb
insl
sub
inc
push
out
xchg
jmp
lcall
xlat
int3
dec
mov
aam
cmp
cwtl
and
cmp
ret
sbb
pmulhuw
aaa
rorb
cmp
cmpsb
inc
leave
inc
pop
xchg
data16
sbb
cmpsb
repz
pop
cmp
stos
mov
in
ljmp
sub
js
ja
mov
fildll
mov
inc
test
cmp
repz
sahf
aaa
rol
addr16
jae
push
adc
in
inc
jae
cmpsb
sbb
xor
adc
or
add
xchg
sub
mov
ss
xchg
dec
jmp
test
adc
mov
dec
or
in
mov
mov
sub
test
fisubrs
and
mov
mov
sub
das
daa
arpl
xchg
les
xor
test
jg
inc
sahf
pop
int3
cmpsb
inc
pop
xchg
xor
arpl
add
cmc
jg
iret
test
mov
sahf
xor
mov
xor
cltd
dec
inc
sub
cmp
sbb
cld
mov
std
sbb
inc
push
pop
ds
inc
push
sahf
add
mov
inc
rcr
mov
imul
lcall
shll
jl
push
xchg
jmp
rolb
add
xchg
cmp
out
push
test
cmp
adc
cmp
int
outsb
lock
insl
inc
add
loopne
sbb
pop
cmp
out
cs
cmp
or
addr16
mov
arpl
andl
popf
mull
inc
inc
xorl
arpl
sub
out
jns
dec
insl
sarl
test
add
leave
out
mov
leave
adc
jg
aas
pop
push
cwtl
shrl
mov
sbb
jg
or
ljmp
mov
push
cld
mov
cli
cmp
icebp
aam
int
inc
mov
jle
push
mov
stos
in
mov
aad
pop
mov
inc
pop
mov
addr16
hlt
add
mov
jo
inc
roll
orb
fs
sub
and
mov
xchg
test
push
dec
jmp
les
andb
and
xchg
mov
and
cmp
mov
ss
jl
movsb
outsl
nop
push
loop
or
sub
clc
lret
adc
and
int
xor
pop
and
inc
xor
imul
jae
fmull
addl
dec
leave
cwtl
test
or
pop
lahf
enter
das
std
xchg
push
mov
fldenv
or
pop
jmp
mov
je
cmpsl
faddl
imulb
dec
shl
adc
mov
test
insb
or
cmp
pause
mov
jg
call
in
sub
dec
and
push
pop
js
out
and
adc
popf
mov
fstpt
pop
push
hlt
or
xor
or
in
xchg
fists
test
into
mov
cs
jb
popf
or
jmp
inc
hlt
mov
mov
sbb
daa
or
and
mov
cld
fstps
add
jne
mov
hlt
aam
bound
xor
scas
stc
push
mov
sbb
lret
dec
adc
sti
pop
mov
ds
aad
dec
fs
hlt
inc
in
cmp
mov
add
in
push
inc
sbb
mov
mov
dec
dec
loope
jg
clc
jmp
dec
dec
loope
mov
mov
push
add
into
mov
subb
lods
fsub
sub
addr16
or
xchg
roll
adc
push
aad
out
lds
sbb
and
and
repz
rcpps
test
ja
pop
leave
insb
xor
push
in
sub
idivl
in
inc
dec
inc
mov
jecxz
cvtdq2ps
int
dec
or
pop
xlat
ss
out
cmp
lret
mov
js
outsb
mov
test
stc
sahf
sub
jmp
sbb
jl
leave
enter
aas
inc
or
xchg
add
cmpsb
mov
inc
push
inc
popa
cmpsl
xchg
aaa
and
cwtl
sub
int
pop
dec
decl
dec
js
popa
testb
mov
jle
loopne
sahf
cmp
out
inc
pop
sub
xchg
mov
pop
call
daa
mov
lea
fwait
pop
out
add
stc
sbb
and
rcrl
ss
mov
push
mov
fs
xchg
lock
sub
test
jne
jo
xchg
or
inc
fmull
or
xchg
addr16
mov
cmp
push
dec
push
mov
int
push
adc
popa
pop
arpl
cmp
stos
cmc
stos
dec
jo
test
shrl
sbb
cltd
les
inc
sbbb
testb
mov
sarl
das
fs
popa
xchg
inc
jbe
pop
lods
mov
push
fsts
repnz
and
jno,pt
lock
fwait
imul
shl
xchg
js
push
jne
outsb
rorl
les
xchg
sub
push
xor
mov
rcl
xorl
mov
jle
out
movsl
shrd
loope
lds
cmpsl
mov
dec
mov
jmp
cmpsb
fidivs
push
mov
enter
sar
pushf
negl
mov
jl
mov
push
sub
popa
jp
clc
push
mov
outsl
mov
filds
call
daa
jae
jge
or
test
mov
lret
xlat
jge
push
mov
dec
and
scas
inc
mov
movsl
adc
fstl
fdiv
dec
mov
orb
mov
push
xlat
cmp
xchg
stos
or
daa
leave
pusha
out
sub
jne
add
cmpsb
roll
scas
inc
push
jns
xor
jnp
sarl
dec
int
push
fstp
mov
rcr
push
stos
lds
aad
push
das
jns
aaa
int3
adc
xchg
cs
inc
jmp
mov
fisttpll
adc
shlb
jecxz
imul
dec
adc
loopne
push
adc
dec
dec
mov
xorb
and
sub
push
popf
outsl
ljmp
mov
arpl
leave
decl
pop
imul
sub
lock
aaa
xor
sub
cmp
lods
pop
xchg
test
mov
hlt
jne
outsb
dec
mov
ret
div
and
pop
inc
mov
pushf
xchg
je
out
addl
loope
or
xchg
adc
inc
pop
mov
or
xchg
cli
xor
mov
cmp
out
shlb
sub
jnp
daa
test
call
jl
dec
nop
std
pop
xchg
repz
popf
icebp
repz
mov
ss
movsl
and
call
mov
pop
mov
lahf
adc
popf
add
insb
decl
std
push
shrb
les
js
fisttpll
mov
pop
jge
jmp
je
imul
les
incb
mov
lea
push
in
cmpsb
xchg
push
aad
ss
mov
shrb
cltd
hlt
pop
add
mov
mov
push
call
mov
lret
psrlq
ret
bound
popf
cmp
lock
in
pusha
notl
mov
mull
jae
imul
adc
ja
push
mov
jbe
jle
or
mov
repnz
cmp
sbb
add
leave
cmc
jbe
popf
mov
int3
inc
mov
push
push
adc
push
cmp
sbb
sub
add
repnz
dec
lret
test
movsb
data16
adc
push
xchg
outsl
dec
push
push
push
ret
mov
es
cmp
fdivs
mov
dec
stos
mov
pop
iret
mov
mov
gs
dec
jo
test
loopew
out
loopne
add
adc
sub
sub
lahf
mov
fnsave
mov
sbb
dec
dec
xlat
pop
leave
pusha
cmp
fnstsw
shl
popa
sqrtps
dec
mov
xchg
sub
cltd
cmp
xchg
jmp
mov
pop
arpl
imull
and
repnz
outsb
sbb
inc
push
xor
add
pusha
push
cmc
sti
mov
int3
or
imul
in
ret
xchg
sub
dec
sub
dec
xchg
push
sub
xchg
fistps
imul
enter
mov
push
imul
mov
lock
roll
pop
push
dec
orb
js
sbb
xchg
ds
jns
xchg
jge
jne
sarb
sbb
sbb
jp
cltd
sub
lcall
loop
addr16
xor
add
mov
outsl
shll
mov
outsb
std
insb
and
pop
xor
call
lcall
mov
ljmp
adc
xchg
mulb
push
outsl
cmp
stc
cli
adc
sub
movsb
push
outsl
es
push
sbb
sbb
js
add
or
test
add
les
ret
cmp
mov
popf
mov
imul
sub
aad
scas
and
pop
mov
jge
int
jno
imul
enter
mov
jge
clc
outsb
mov
fucom
push
xorb
inc
pop
repz
outsl
or
cmpsl
jb
div
ret
pop
arpl
pop
test
int
mov
add
sub
push
aaa
test
push
xchg
popa
pop
int3
pop
sub
pop
fdivrp
mov
ret
out
pop
add
inc
adc
add
pop
pop
sbb
lret
mov
inc
mov
adc
cli
scas
jge
test
jbe
adc
and
imul
pop
sub
xchg
scas
sbb
es
inc
push
mov
cwtl
rorb
ds
xor
cmp
lds
outsb
jecxz
aad
add
jg
rcrb
add
iret
mov
lcall
daa
out
mov
loopne
ss
mov
loopne
push
fildll
lods
inc
cmp
cli
aas
mov
out
lret
in
jge
pop
ret
stc
add
xchg
mov
rolb
lods
mov
out
mov
or
mov
in
sub
std
mov
mov
sarl
mov
sahf
notb
stos
int3
into
fildll
pop
push
pop
mov
lock
scas
in
pop
and
ss
int3
mov
enter
out
mov
xor
mov
mov
sarl
rcll
adc
cmc
inc
nop
mov
faddl
mov
and
jmp
pop
pop
sbbl
cltd
cmp
lcall
stos
mov
mov
shlb
loope
inc
mov
ret
mov
mov
out
push
dec
push
mov
or
fldcw
push
and
mov
jle
sub
mov
dec
cmpsl
mov
jnp
push
xor
or
dec
cmp
sub
loope
and
xor
push
add
push
dec
push
mov
cmp
out
jp
sbb
hlt
sub
aaa
imul
adc
out
loopne
cmp
shrb
dec
adc
daa
xchg
in
add
pop
xchg
and
sub
xchg
iret
inc
jnp
or
mov
pop
pop
jg,pn
popf
add
test
mov
jl
stos
cmp
scas
and
cmp
nop
rolb
in
pop
inc
subl
cmp
jle
gs
shl
mov
mov
lret
lock
notb
pmulhw
lds
sub
aas
daa
mov
les
enter
mov
hlt
lcall
fld
imul
inc
call
inc
inc
cs
sub
dec
into
stos
es
pushl
dec
xchg
mov
out
aaa
pop
jne
rcl
jecxz
mov
cmpsb
dec
stos
aaa
sbb
mov
jle
pop
popa
scas
jne
sub
testl
mov
xor
jbe
sahf
pushl
paddw
mov
or
sub
out
and
test
loop
idiv
mov
fdivr
idivl
push
repz
xchg
sub
out
clc
pop
push
mov
xor
or
psllw
mov
cmpsl
cltd
jecxz
push
xchg
or
ja
lea
insl
mov
lcall
lcall
lds
jecxz
pop
lds
lds
xchg
pop
sbb
je
adc
pop
scas
xchg
push
fcoml
cmp
cmc
cmp
adc
aam
push
pop
add
mov
mov
xchg
and
in
scas
mov
adc
jmp
jnp
adc
aam
adc
addr16
sahf
rorb
push
imul
push
clc
lods
cmp
lret
out
push
aaa
dec
idivl
adc
stos
fdivl
and
lahf
out
mov
mov
sbb
cmp
insb
and
mov
push
jo
add
jmp
cmp
mov
popf
pop
pop
dec
stc
das
pop
bound
fisubrl
mov
in
ljmp
jbe
jl
movsb
sahf
leave
sbb
into
jno
outsl
gs
mov
lock
mov
adc
adc
inc
push
pop
xchg
push
and
and
xlat
sub
ret
jmp
dec
repz
icebp
or
js
les
test
pop
inc
xor
test
int3
sbb
mov
pop
mov
jmp
in
jnp
xor
imul
pop
imul
sbb
jg
push
test
inc
cmp
rolb
push
mov
mov
out
push
jecxz
shlb
sbb
popf
pop
cmpsb
xchg
test
xchg
add
in
jle
jmp
sub
adc
int
jge
push
int3
cltd
dec
mov
mov
cmc
lea
fs
jae
test
adc
test
lcall
sub
test
out
jle
in
sarl
mov
movzbl
xor
das
or
out
push
int
daa
int
pop
pushf
jbe
and
pop
xchg
scas
inc
adc
xchg
mov
and
mov
sub
adcl
leave
jb
mov
cmc
mov
and
lods
pop
rclb
add
outsl
and
xlat
jae
xorl
iret
mov
push
fs
int3
call
mov
jle
out
xor
outsb
std
fwait
data16
mov
mov
js
into
jns
ds
out
lcall
jno
sbb
sub
movsb
jae
mov
popf
cld
sub
cmp
iret
mov
popl
and
gs
fsubs
dec
rorb
or
inc
scas
lods
out
or
andb
pop
mov
inc
movsb
ds
mov
mov
int
sub
stc
mov
fistpll
push
insl
lock
push
shll
mov
or
int3
daa
cmpl
jae
shr
ficompl
pop
fwait
sub
mov
jnp
loope
out
jb
push
or
xor
xor
cltd
out
mov
cmp
repz
mov
mov
cmp
cmp
mov
add
jnp
pop
dec
inc
aas
popf
ds
lret
fucomip
subb
int
mov
leave
dec
aam
pop
pop
aad
daa
inc
xchg
clc
xorl
adc
orl
add
xchg
mov
adc
sbb
fsubr
fwait
iret
xchg
aam
jge
sbb
fnstsw
js
add
push
xchg
sub
push
sbb
xchg
bound
mov
inc
mov
mov
xchg
xorb
fmull
test
cmp
xchg
mov
scas
xchg
cmpb
pop
mov
pop
lret
fnstenv
jp
fisubrs
jnp
cmp
cmpsl
xchg
popf
jge
arpl
xor
or
cmp
shlb
jl
addr16
xchg
adc
mov
xor
push
mov
mov
mov
mov
sahf
adc
ret
cmp
push
jo
cltd
iret
fs
mov
nop
popf
aad
and
hlt
je
jmp
dec
xchg
cmp
or
inc
push
aad
lock
es
fstpl
add
jmp
lods
cmp
jnp
bt
scas
pop
mov
lods
pop
arpl
dec
sub
fs
insl
sbb
push
testb
jne
outsl
pminsw
je
jp
sbb
cmp
sub
push
push
dec
xor
sti
call
or
cltd
ss
add
sub
push
or
pusha
leave
insb
out
sub
cmp
lods
mov
icebp
xor
outsb
adc
cltd
rcrb
or
push
sti
loopne
imul
mov
push
int3
cmpsl
mov
push
cwtl
das
jbe
fdiv
or
mov
jmp
cmp
xchg
ja
add
cli
push
clc
adc
lods
fistl
sbb
das
test
out
fidivl
testb
inc
enter
jp
inc
add
or
or
js
rcrl
imul
psubw
pushf
dec
ljmp
sbb
push
mov
mov
add
ljmp
shrl
push
imul
inc
js
ret
dec
jo
mov
sbb
xorl
popa
cli
push
xor
inc
and
ficoml
out
test
fldcw
into
sub
mull
jge
sti
repnz
mov
pop
mov
jmp
cld
popa
addr16
jge
in
mov
inc
inc
dec
js
cmp
xchg
gs
pop
es
imul
mov
adc
in
push
jl
pusha
pop
jmp
dec
js
push
dec
scas
and
mov
push
or
in
in
lret
or
lds
and
mov
pop
xchg
cld
nop
mov
lret
mov
adc
and
xchg
fists
enter
bound
call
imul
ss
jne
icebp
in
mov
stc
xchg
popf
add
push
or
mov
cli
sbb
push
sti
or
sub
aad
push
hlt
mov
lret
pop
sbb
jb
pop
sub
push
aad
jne
adc
out
outsb
mov
pushf
jge
mov
or
test
inc
pop
jb
xchg
mov
jns
push
ja
testb
orb
mov
int
mov
adc
jp
incl
pop
mov
inc
fwait
or
jno
fcomps
das
dec
jmp
pop
imul
cld
in
mov
mov
push
in
xchg
cmp
test
gs
fadds
adcl
push
bound
push
jge
fs
cmp
loopne
lret
in
mov
mov
pop
ret
pushf
and
mov
jns
or
aaa
pop
mov
sbb
movsl
pop
push
stos
xor
pop
repnz
fildl
jns
ror
enter
das
inc
nop
rorb
add
gs
jp
pop
out
mov
mov
inc
mov
push
sub
jne
iret
daa
push
sbb
out
sti
jg
dec
xor
scas
add
jno
xor
lcall
and
or
ss
add
or
lea
setl
jb
ja
and
in
orl
out
and
fstpl
fsts
pop
cltd
adc
in
mov
xor
mov
cmpsl
dec
mov
and
out
jmp
repz
ret
jle
movb
xchg
jge
xchg
push
fsubr
xchg
add
ret
out
mov
pop
dec
rcll
mov
jl
jo
out
jns
jnp
out
fcomi
fs
call
cmpsb
ret
cmp
sub
push
xor
lret
je
xchg
xchg
lods
pop
cmp
js
pop
imul
fwait
cld
jmp
ret
pop
xchg
test
mov
shr
shl
mov
mov
jmp
jno
dec
mov
movsb
scas
xchg
mov
pop
jns
pushf
cld
aaa
fnstenv
icebp
into
into
add
call
leave
cmp
adc
out
xchg
jl
ja
movsl
sbb
addl
xchg
mov
xchg
bound
mov
pop
mov
les
cli
loope
jg,pt
sub
xor
cmpl
addb
mov
xchg
sbb
and
adc
add
and
dec
test
jns
adc
inc
xor
ljmp
sbbl
and
adc
call
add
sarb
enter
jne
das
aaa
in
jmp
jb
fs
sbb
lods
inc
jge
clc
mov
bnd
push
ljmp
xor
repnz
pop
and
sbb
sub
repnz
dec
cmp
or
fisttpll
pop
xchg
sub
out
jno
push
jae
sti
xor
lods
push
fbld
push
mov
and
sub
shlb
in
ret
and
lea
hlt
les
into
and
das
xchg
addr16
jle
dec
stc
and
test
repz
into
cmp
in
mov
xor
adc
add
mov
mov
push
add
aas
xlat
sahf
cs
mov
xchg
test
inc
mov
repz
rolb
and
dec
pop
mov
xor
addr16
mov
push
dec
mov
lods
test
js
mov
ss
mov
sti
mov
and
nop
insb
mov
popa
stc
shlb
stc
dec
xchg
ss
hlt
fs
mov
leave
and
pusha
jbe
sbb
loopne
dec
insl
inc
jge
fisttpll
sbb
gs
subl
loope
data16
mov
xchg
aaa
mov
lds
push
xlat
mov
sub
cmp
and
insb
test
pushf
mov
dec
stos
sbb
fwait
test
lea
scas
or
lahf
lahf
stos
cmpb
lcall
or
sub
dec
or
xor
dec
xor
movsl
push
stc
lea
jecxz
lds
dec
cli
in
push
leave
pusha
out
mov
dec
fs
mov
mov
stos
aas
xchg
and
flds
sbb
cs
pop
xor
xchg
test
cmpsb
fmuls
inc
mov
sbb
adc
fcoms
jmp
movsl
popa
stos
int3
xchg
std
ss
outsb
mov
mov
sub
scas
adc
movsb
mov
jg
push
inc
pop
add
push
cli
fwait
inc
imull
sti
scas
inc
es
pop
cmpb
sub
das
jle
icebp
xor
test
pop
lcall
pop
rcll
jge
push
mov
cld
data16
sbb
mov
loope
xchg
ret
jbe
adc
sarl
fldenv
xor
lret
xchg
cmc
dec
push
jne
cwtl
sub
nop
int
inc
jo
or
cli
sbb
fimuls
and
push
push
out
out
and
cmpsb
jmp
lea
xchg
sub
in
xchg
test
push
inc
es
les
push
inc
mov
mov
mov
ror
xchg
inc
adc
loope
popa
add
ljmp
ror
push
cld
sbb
fwait
push
in
pop
mov
mov
cli
mov
leave
into
loope
cmp
adc
fsubl
jae
pop
in
daa
dec
xor
xchg
jns
out
mov
inc
mov
in
fwait
adc
gs
jno
dec
std
push
sahf
pop
imul
loop
jecxz
add
ret
pop
ljmp
pop
add
cmpsl
fcompl
push
jnp
push
sbb
push
shlb
jnp
or
fsubrl
int3
pop
adc
daa
jecxz
std
imul
and
cwtl
dec
or
inc
outsl
xor
sbb
clc
iret
dec
fiadds
mov
mov
stc
je
sub
pop
xorl
inc
push
push
mov
hlt
stos
mov
mov
or
dec
cmp
sbb
or
mov
and
mov
dec
mov
sbb
nop
xchg
pop
arpl
adc
lret
mov
jg
mov
mov
xor
bound
push
push
and
insl
movsl
fnstsw
shll
inc
test
or
mov
sbb
addr16
sbb
fdiv
and
jb
xchg
aad
repnz
ret
in
into
std
out
loopne
pop
push
inc
addl
add
imul
mov
dec
jmp
push
mov
mov
iret
dec
xchg
ljmp
add
insl
fsubrs
mov
mov
cmc
xchg
int3
mov
seto
xor
cmp
dec
pop
rorl
mov
shll
das
iret
or
mov
xchg
cs
pop
cmp
lret
inc
jp
std
gs
mov
int3
je
mov
loop
fsts
cli
mov
mov
pop
mov
jo
inc
insl
cli
inc
into
dec
sub
mov
inc
aam
and
sbb
sub
xor
loop
fnstcw
xchg
rcl
cmp
adc
push
xchg
jb,pn
xchg
xchg
fwait
add
jmp
enter
dec
mov
jmp
sub
test
or
jp
icebp
hlt
mov
int
adc
sti
pop
fmull
ds
jns
mov
add
mov
jecxz
mov
inc
addr16
xor
cmpl
pusha
mov
out
mov
into
sub
repnz
jae
in
cwtl
dec
push
sbb
add
push
sar
fwait
push
cli
icebp
sub
inc
adc
lds
mov
clc
push
sub
pop
sbb
jle
push
push
fs
imul
lods
mov
mov
and
mov
shrb
pusha
es
inc
jbe
mov
ja
xor
popa
mov
push
mov
ljmp
push
inc
mov
dec
xchg
inc
mov
pop
dec
jle
cli
cmp
ljmp
xor
sub
out
pop
inc
xor
mov
pop
mov
jmp
push
cltd
mov
loope
fs
sub
jecxz
adc
ret
jns
fs
cmp
mov
mov
jge
add
ss
and
lods
jbe
xchg
fstl
jecxz
push
enter
adc
sbb
xor
loopne
mov
jno
add
aam
mov
jmp
cmp
add
shll
adc
negb
mov
sti
mov
test
push
in
scas
fnsave
or
clc
int3
rol
mov
xor
xchg
and
clc
js
iret
jle
or
jge
in
jl
das
adc
pop
mov
adc
inc
andb
lahf
and
ret
clc
sub
in
loope
jne
outsb
les
insb
dec
mov
or
push
push
lods
dec
fistps
cmpsl
pop
mov
jle
push
xchg
pop
mov
mov
xchg
in
nop
sub
or
xor
insb
mov
jnp
and
cmpsb
xor
and
inc
gs
push
pop
add
xchg
je
push
adcb
inc
popf
lret
enter
rclb
sbbl
push
stos
inc
adc
fisttps
lock
data16
das
stos
jae
lcall
testb
or
cs
cmp
push
in
enter
jg
xchg
jnp
dec
adc
xchg
test
pop
jecxz
bound
icebp
lea
xchg
xor
nop
lock
les
test
sbb
out
mov
dec
pop
sbb
adc
clc
ja
mov
inc
cmpb
cmp
cwtl
or
inc
dec
ret
aam
inc
or
adc
mov
mov
movsb
sub
sbb
adc
pop
cs
repnz
cmp
fwait
in
mov
adc
add
stc
and
in
and
cmc
pop
ja
pop
icebp
nop
pop
cltd
adc
lret
or
andb
out
shrl
jno
push
adcb
cmp
jecxz
movsl
sub
jge
xor
or
stc
es
sub
fs
ret
push
sti
add
bnd
adc
cmpsb
mov
testb
pop
jno
std
loop
dec
outsb
dec
out
push
pop
mov
pop
sub
xchg
decb
movsb
pop
push
aas
mov
aam
aas
pop
subl
imul
fisubrl
insl
in
ret
xchg
add
enter
rcrb
scas
insb
or
dec
hlt
jge
mov
push
xor
jb
jb
inc
ret
out
mov
jl
pop
pushf
imul
int3
mov
adc
push
mov
ja
lret
sahf
xor
pop
testb
inc
inc
inc
mov
sub
aad
xchg
cmp
scas
mov
mov
and
clc
cmc
in
jl
cmpsl
fidivrs
xor
std
call
mov
dec
xchg
out
jmp
fadd
mov
shlb
push
arpl
shll
mov
inc
aas
je
scas
mov
out
push
xchg
add
push
in
sbb
pusha
lret
jnp
test
cwtl
xor
adc
fimuls
mov
insb
xchg
sbb
lret
pop
lock
scas
daa
xor
pop
sarl
mov
sbb
and
or
in
and
out
int3
test
add
jecxz
jle
push
pop
xor
fildll
and
jbe
pushf
imul
pushf
sbb
cli
pushf
mov
xor
pop
xor
movsb
or
add
idivl
cmp
sti
test
inc
loop
outsb
pop
cwtl
in
ss
shl
jnp
and
shl
jno
and
cmp
push
cmp
cmpl
pandn
ret
pop
add
aas
inc
subb
jb
js
add
fdivs
sahf
dec
push
stos
adc
mov
in
cltd
xor
push
xor
aaa
fisubrs
ds
and
std
je
and
mov
or
inc
insl
push
add
fisttps
jp
insb
push
pop
lods
rcrb
lock
jne
jge,pt
push
loop
aad
outsl
inc
mov
jmp
loope
push
mov
out
cmp
scas
mov
cwtl
dec
sub
jmp
xor
xchg
jnp
adcl
push
mov
rorb
sbb
into
pop
pop
cmp
xor
jmp
add
cmp
push
js
xor
xor
cmc
out
push
stos
inc
inc
stos
mov
xchg
sub
pop
xchg
jecxz
movsb
add
fs
ret
lea
sub
loope
dec
sub
cli
or
xchg
loopne
fwait
pop
stos
rcl
adc
test
iret
aad
in
jb
xchg
nop
and
lods
sub
stos
aaa
mov
mov
dec
xor
fldcw
ja
push
adc
aam
pop
jg
outsb
mov
lea
lahf
mov
cltd
das
pushf
cmp
mov
push
pop
pop
pop
mov
popa
js
insl
dec
push
cli
fwait
mov
mov
aas
jns
dec
out
leave
push
lcall
dec
pushf
lret
stos
out
dec
jne
imul
cmpsb
inc
add
ret
xchg
cmpsb
cltd
jecxz
ret
ds
clc
ljmp
es
jl
lods
loopne
or
mov
outsb
dec
add
jns
cli
cmp
jmp
pop
and
inc
fxch
pusha
les
adc
inc
int
fs
test
and
into
inc
jge,pt
imul
sbb
mov
push
or
sbb
inc
cmpb
stc
mov
or
mov
push
xchg
and
adc
xor
cmc
cmp
pop
sbb
mov
js
data16
nopl
inc
xchg
cld
ret
icebp
loope
jl
pop
push
test
xor
loope
cs
dec
mov
sbb
shrb
mov
mov
call
dec
sbb
in
shlb
arpl
or
fbstp
adc
cwtl
adc
dec
add
cli
mov
cmpsb
jno
je
jp
mov
xchg
fistps
cs
out
pop
and
repnz
jge
mov
add
dec
repz
xor
adc
ret
enter
testl
pop
add
scas
pop
or
jmp
jge
adc
jp
sub
es
jb
jns
loopne
adc
fcomps
fbld
fs
rclb
bound
push
data16
jg
fsts
call
lcall
mov
gs
imull
scas
fildl
xchg
pop
mov
push
aam
cmp
js
jno
jle
mov
jno
shl
movb
ljmp
cmp
jns
lea
jmp
inc
ror
xchg
dec
push
js
xor
mov
add
mov
mov
popa
sub
pop
adc
or
mulb
pop
jae
xchg
into
fs
movsl
mov
xlat
insl
imulb
xchg
fldl
adc
and
mov
movsl
adc
pop
rorb
loope
pop
jge
mov
popf
xlat
mov
and
mov
sbb
movsb
es
cwtl
mov
mov
xorl
stc
and
pop
and
sahf
int
xchg
inc
xchg
test
and
scas
mov
add
push
pop
mov
movsl
jb
scas
test
mov
into
push
or
pop
adc
les
pop
rol
daa
sbb
mov
jmp
inc
ficoml
push
enter
and
cmp
call
into
lods
and
inc
gs
in
xor
aam
test
dec
iret
sub
fmuls
cmp
sbb
mov
dec
cmp
ret
jl
push
movsb
movsl
push
cmp
add
pushl
cmpsb
push
jge
jg
leave
ljmp
cmp
clc
lcall
fucomi
les
adc
or
mov
sub
xchg
int
shrb
inc
aad
jns
inc
testl
inc
aas
add
ds
pop
pop
je
movsl
push
xor
push
adc
repnz
daa
popa
js
jae
or
dec
leave
les
cli
imulb
gs
dec
pop
dec
and
and
loopne
jg
mov
jo
sub
fisttpll
rol
mov
out
pop
int3
imul
rol
sub
mov
dec
out
hlt
xchg
or
pop
pusha
mov
dec
or
test
out
mov
imul
push
js
mov
stos
loopne
cwtl
xor
cltd
pop
ficomps
popf
adc
fistl
divl
je
xchg
xchg
imul
jne
sahf
jae
push
sbb
jle
inc
imulb
cwtl
cmp
pusha
outsl
bnd
sarl
mov
push
mov
sub
xchg
ret
movsb
jno
pop
fsubp
or
int3
lds
rorb
push
jne
lea
lods
sbb
lods
push
xor
sub
aaa
xchg
mov
in
xchg
test
sbb
adc
inc
xorl
outsb
mov
xchg
sub
into
sub
decb
jae
sbb
in
shlb
aaa
mov
add
jno
pop
ret
jge
inc
xchg
in
lock
mov
iret
push
iret
jns
push
lret
loop
lods
pusha
in
jns
clc
mov
and
xchg
push
sti
jmp
dec
repz
shrl
inc
je
pop
push
mov
mov
cmp
inc
cmpsb
out
mov
xchg
movsl
pusha
adc
pop
adc
loopne
mov
xchg
pop
and
loop
adc
inc
xor
jne
mov
jmp
push
loope
les
cs
jno
mov
dec
scas
fwait
jne
xor
mov
inc
movsl
cwtl
mov
adc
pop
dec
inc
xchg
cmpsb
mov
push
sbb
xor
add
imul
pop
cmp
lret
test
adc
or
pop
xchg
cli
add
inc
mov
sbb
or
aam
xchg
add
adc
pop
xor
repnz
movsb
fmul
aaa
cmpsl
mov
mov
arpl
mov
stos
cmp
sub
out
mov
aad
sar
fidivrs
decb
or
repz
rcll
dec
mov
sbb
mov
rcrl
repnz
scas
mov
add
and
inc
pushf
and
push
stos
dec
fildl
fwait
fwait
mov
xor
pushf
cmp
js
js
loop
jae
xchg
inc
and
cmp
pop
std
in
decl
in
test
enter
xor
cmp
out
ret
push
pop
dec
ss
adc
sub
sbb
sbb
xlat
enter
pop
std
imul
inc
insl
add
fsts
cmp
or
ret
loopne
add
sbb
mov
adc
mov
adc
xchg
das
mov
jb
xorl
ret
or
pop
push
xchg
jns
or
fs
sahf
lret
outsb
cmc
push
dec
sbb
lock
mov
inc
outsl
ss
sbb
xchg
or
lahf
or
fisttps
push
mov
push
cmc
mov
dec
imul
inc
out
mov
repz
test
pop
xor
js
ljmp
fwait
sbbb
ss
cmpsl
scas
shl
pop
test
or
mov
ljmp
mov
stos
mov
sbb
sub
push
push
fcom
lcall
shr
out
scas
imul
test
mov
mov
cwtl
mov
mov
ret
jae
sahf
cmp
int
dec
arpl
inc
comiss
popa
adc
add
out
into
sbb
leave
cmp
and
ret
mov
push
jl
xchg
xchg
into
sbb
cmp
arpl
mov
jb
inc
mov
idivl
lret
stos
jle
jg
ret
imul
mov
mov
cmp
leave
loope
push
adc
inc
es
pop
lock
pushf
nop
mov
xchg
xor
xor
mov
test
xchg
fwait
adc
dec
imul
cmp
insb
pop
lea
push
push
mov
jle
ja
and
fisttps
and
or
adc
bound
add
popf
sub
xchg
mov
sub
loopne
inc
dec
push
cmp
cli
mov
cmp
mov
lods
cmp
push
jbe
mov
inc
dec
adc
imul
lcall
insb
xchg
mov
in
insb
jmp
push
inc
adc
cmpsl
sbb
daa
cmp
setb
xchg
fs
xchg
sbb
data16
movsb
cmp
mov
mov
jbe
dec
sub
movl
lcall
cmpsb
pop
sti
test
mov
and
xor
call
pop
jl
shll
aaa
mov
jp
pop
es
cmpsb
outsl
pop
pop
lret
or
dec
movsl
enter
sti
les
cmp
mov
sbb
mov
jo
movsl
add
sbb
cmp
xchg
and
dec
jb
fdiv
std
mov
fldt
ficomps
jae
xor
push
aas
cmpl
stos
mov
mov
adc
pop
jbe
inc
cmp
xor
jecxz
inc
test
test
pushf
jnp
std
mov
loope
mov
shrb
jae
cmp
jo
dec
lea
nopl
mov
adc
test
icebp
test
jge
lods
adc
and
mov
xchg
cs
popa
sar
mov
out
fadds
fsubrs
xchg
fisttpl
adc
mov
adc
out
add
mov
and
dec
in
xlat
mov
add
outsl
aam
pop
lcall
cs
xlat
lods
ret
cltd
hlt
loop
jns
mov
es
mov
jg
testb
mov
xchg
mov
pusha
stos
add
adc
push
mov
out
adc
jo
std
xor
or
mov
lret
leave
and
push
or
or
movsl
pop
mov
and
push
sti
xchg
or
mov
pop
shlb
orb
fadds
fs
pusha
popa
imul
adc
mov
int3
stos
mov
or
add
fstps
inc
add
call
subb
cltd
push
sbb
or
push
in
jecxz
and
pop
push
ljmp
add
mov
and
add
cmp
js
jb
pop
lret
dec
sbb
jecxz
cmp
mov
mov
pop
adc
push
xor
xchg
je
ret
sahf
add
lret
dec
adc
jo
divb
std
jnp
mov
fsubp
les
mov
push
int3
add
jp
xchg
iret
jo
aam
dec
mov
loopne
mov
add
pop
ss
shlb
jmp
inc
jmp
and
leave
pop
repz
adc
sub
int
rcrb
fcoml
mov
xor
adc
lock
add
mov
sub
cmp
mov
jb
dec
popf
cs
int3
test
mov
sbb
mov
cli
xor
mov
pop
inc
jb
jmp
adc
arpl
push
pop
sti
mov
subl
out
enter
mov
dec
lahf
testb
dec
jnp
test
xchg
sub
stos
xor
pop
call
sbb
cmpsb
mov
xor
in
lock
call
mov
push
pushf
add
cmp
adc
dec
aaa
call
ret
dec
mov
lea
insb
xchg
jmp
pop
or
cmpb
scas
and
ljmp
pop
enter
dec
dec
mov
cmpb
loope
adc
rcl
cmpsl
xor
fistps
sahf
enter
iret
ret
and
push
dec
adc
pop
push
lret
aad
into
pop
mov
loope
mov
jmp
jbe
test
mov
scas
aas
ret
or
xchg
mov
sbb
addr16
rcr
ds
adc
test
jmp
scas
xchg
xor
sbb
cmp
es
int3
sbb
or
into
das
dec
inc
mov
dec
ja
jnp
adc
jbe
fsubs
in
or
sbb
sub
mov
lea
xor
inc
cmp
xlat
fnsave
sbb
mov
sbb
lods
cld
inc
inc
cmpsb
notl
and
mov
inc
aad
cmp
mov
sti
cmp
cmp
bnd
jbe
nop
cltd
sbb
mov
or
xor
jle
mov
ljmp
mov
push
insb
jmp
andl
mov
pop
cli
sub
pop
ja
xor
test
insb
fistps
lods
hlt
push
inc
leave
fmul
sti
sti
int3
and
xor
jnp
out
out
jecxz
sbb
dec
sub
aam
scas
push
xchg
inc
fs
int
cmc
lret
es
lods
cmpsl
test
stc
push
shlb
xchg
sub
aas
jno
into
jmp
pop
and
imulb
fldcw
pop
icebp
add
pushf
pop
int3
loope
mov
jbe
sub
and
push
jae
cmpsl
mov
dec
imul
das
stos
js
scas
and
inc
sbb
mov
adc
mov
push
fmul
dec
lahf
mov
fs
jmp
popa
loop
inc
push
stos
lea
push
mov
lret
int3
hlt
jp
ljmp
and
ss
lcall
jl
fcmovu
mov
es
test
sar
mov
mov
mov
jl
call
or
std
inc
hlt
scas
gs
aaa
sub
or
sahf
iret
adc
push
jl
popa
sti
mov
popf
xchg
fs
orl
out
test
cld
mov
xor
push
addr16
mov
cli
jge
inc
bound
and
out
sub
add
jecxz
inc
pop
aaa
ror
bound
das
fsts
icebp
ljmp
mov
jge
insl
dec
cs
scas
hlt
je
js
jmp
in
pop
lods
negl
sub
xlat
addl
lret
movsl
cmp
push
std
sbb
sti
xchg
xchg
imul
xchg
lcall
movsb
xchg
mov
std
movsl
cmp
xorl
cs
xor
lahf
or
aad
sub
sahf
xchg
repz
cltd
shll
call
or
les
fsubrl
push
filds
cmp
dec
cmp
testb
xor
push
pop
adc
or
je
lret
cmp
inc
or
mov
aad
inc
push
jg
insl
loopne
sbb
sub
gs
in
sub
mov
sub
aam
xlat
add
xchg
inc
sub
aas
lock
jb
xchg
dec
fdivl
into
lcall
jns
test
add
out
dec
sbb
mov
aad
jl
jno
les
sub
adcl
call
in
movsl
cld
inc
xor
hlt
movsb
pop
mov
movhps
out
xlat
dec
fdiv
pop
movsb
jae
mov
and
int
pop
loop
rolb
mov
rolb
in
fdivrs
push
pop
pop
adcb
scas
cmpl
mov
adc
push
sub
fcompl
xchg
push
fsub
push
push
cs
int3
mov
js
imull
rolb
mov
push
leave
xor
cmp
dec
jmp
pushf
repz
sbb
bound
pop
int3
test
mov
and
dec
std
iret
pop
sbb
test
adc
push
adc
fsubrl
pop
in
out
add
cmc
jno
ljmp
popa
int3
sar
pop
inc
and
xchg
add
xchg
ljmp
outsl
test
daa
out
leave
inc
movsb
or
dec
fidivrl
divl
shll
or
test
cld
test
test
and
testb
cwtl
xchg
jl
inc
outsb
dec
lret
cmpsb
cmpsb
dec
and
mov
movsb
testl
je
mov
leave
mov
iret
jp
popa
sbb
pop
movsb
adc
aaa
icebp
fisubrs
push
mov
decl
movsb
sbb
lods
jne,pn
js
dec
add
mov
flds
mov
cwtl
loopne
test
jno
fisttps
in
mov
cmp
cltd
mov
xchg
push
adc
pop
cmp
lock
add
adc
and
or
add
test
xchg
pop
fs
std
mov
dec
cmc
mov
popf
jae
mov
in
xlat
add
and
cmp
sub
jb
ficompl
popa
ret
into
jno
mov
loopne
and
loopne
pushf
int3
movsb
jbe
and
mov
test
jmp
mov
mov
pop
xchg
jg
xor
orb
dec
push
push
dec
insl
push
lods
xchg
mov
cmp
test
movsb
addb
cmp
insl
sub
sbb
and
pushf
test
popa
addl
and
lahf
adcl
inc
in
gs
lods
push
xchg
inc
out
lret
rclb
xchg
pop
jae
bound
js
out
sub
call
cmpsb
or
test
push
and
out
loope
push
ficoms
xchg
popa
test
xchg
pop
test
mov
rcrb
cld
or
cltd
das
xchg
test
ja
iret
jno
adc
cmp
in
sbb
loope
fistpl
mov
aaa
inc
add
popa
in
jge
pop
xchg
jmp
push
cmp
dec
sub
or
das
shll
xchg
jl
je
in
movsb
xlat
js
ja
sbb
fdivr
lock
mov
nop
test
shll
loop
dec
cmp
sbb
sub
les
mov
inc
jmp
outsb
int3
dec
push
pop
jbe
adc
xlat
leave
jb
shlb
jb
cmp
jae
pop
fildll
ret
repz
xchg
mov
lea
push
das
stos
imul
and
out
dec
repz
fnstsw
lret
dec
jmp
or
and
sbb
and
mov
xor
sub
enter
xchg
cli
adc
lock
lahf
mov
aas
js
mov
dec
hlt
test
inc
xchg
inc
rol
insb
and
arpl
frstor
mov
inc
push
orb
mov
fidivl
mov
outsb
mov
pop
adc
dec
mov
aad
xchg
mov
push
insl
repnz
imul
adc
hlt
andl
scas
mov
adc
xlat
cmp
out
mov
sub
fs
test
dec
imul
in
sti
in
shrb
and
lret
mov
cmp
lret
in
into
lds
out
mov
xor
cmp
repz
data16
lds
fbstp
dec
mov
leave
mov
sti
daa
lods
sbb
jno,pn
push
lret
inc
xchg
mov
pop
mov
cmpsl
adc
loop
push
loopne
and
outsb
add
popl
sbb
call
push
xchg
bswap
jnp
iret
inc
dec
addr16
xor
cld
outsl
ret
sbbb
xchg
out
fisubs
xor
cmpb
stc
push
pop
jp
aam
pop
scas
test
pop
bnd
mov
loop
mov
xorl
aam
inc
adc
adc
xchg
cmpsb
aaa
rorl
add
out
xor
fstpl
push
dec
lods
test
push
je
xor
adc
test
jns
add
jmp
mov
push
daa
scas
jmp
and
push
jmp
in
out
cmp
cmp
xor
sahf
andl
and
xchg
pusha
outsb
imul
pushf
push
mov
pop
inc
jmp
pop
mov
loope
pop
lock
int
loope
or
mov
mov
cs
pop
pop
out
jnp
popf
xchg
mov
clc
test
shll
jbe
repz
iret
lea
push
repnz
push
cmp
xchg
dec
push
fsubr
adcl
sub
push
retw
push
lds
fimuls
sub
std
pop
fdiv
cld
jno
out
scas
fadds
mov
mov
cmp
mov
ret
push
out
lock
jge
scas
xor
jg
loope
daa
je
cs
mov
mov
or
lahf
rep
cmp
in
mov
daa
or
scas
lret
popf
mov
fsub
out
push
cmpl
rcrb
inc
jnp
push
mov
adc
xchg
add
push
pop
pushf
mov
jnp
lods
imul
jl
inc
into
inc
lods
mov
inc
adc
cs
mov
jae
push
sub
xchg
mov
jae
jno
repnz
inc
cmp
cmp
dec
inc
aas
cmp
notl
scas
rclb
push
js
or
mov
call
lods
call
mov
jbe
push
out
imull
xchg
mov
xchg
cmp
pop
int
dec
ds
ret
xchg
jae
lods
add
repnz
cld
imul
ljmp
loopne
clc
adcb
hlt
loopne
lret
adc
cmpsb
or
out
popf
mov
cwtl
mov
lret
scas
mov
fisttpll
outsl
or
call
push
sar
in
adc
pop
mov
fidivs
cltd
jb
fs
and
adc
mov
push
fstps
sti
cmc
jle
cli
mov
sub
mov
cmp
sbb
ja
jnp
mov
pop
xor
and
enter
clc
sti
rolb
and
imul
mov
add
lret
pop
push
xorb
push
addr16
pop
push
test
and
loopne
adc
enter
sbb
test
and
popf
test
in
and
mov
out
xor
add
cmp
mov
inc
sti
inc
mov
ss
xchg
shlb
rcll
popa
enter
and
pushf
bound
cmpsl
sub
inc
rcl
mov
in
cs
xor
add
pop
xchg
shrl
test
sbb
imul
je
push
lcall
inc
or
pop
loope
mov
cmp
adc
popf
adc
loop
repz
ljmp
lods
jno
mov
adc
aam
data16
dec
outsl
mov
cmp
xchg
daa
sti
and
sub
adc
loopne
dec
int
or
sti
add
pusha
sahf
adc
cmp
flds
inc
fidivl
out
mov
loop
jbe
sbb
push
stos
or
pop
inc
mov
mov
sbb
mov
push
int3
pop
pop
or
dec
jno,pt
std
mov
test
aas
mov
data16
push
lahf
xor
xchg
lret
pop
push
ss
test
cltd
sub
add
mov
lahf
lods
test
mov
jns
adc
xchg
xor
pop
jns
in
sub
std
out
mov
mov
sbb
mov
jmp
xor
hlt
dec
pop
mov
cmpsb
popf
ja
and
cwtl
mov
gs
sbbb
call
lock
jp
js
mov
call
mov
fisttps
sbb
fld
adc
mov
fisubs
dec
insb
test
aaa
lahf
fwait
pop
fistps
pop
sbb
leave
or
decb
ja
notl
lahf
add
dec
das
mov
lods
std
sub
inc
or
pop
xchg
ret
hlt
ja,pn
rcr
sbb
jnp
xchg
cltd
ret
fistpll
testb
scas
or
into
movsb
in
ljmp
xor
js
push
je
sub
adc
icebp
mov
adc
pop
sbb
add
sub
sarl
out
sbb
dec
das
and
xchg
pop
inc
mulb
push
int3
push
inc
push
push
push
or
push
cmp
jbe
enter
sub
rcll
jnp
xchg
out
bound
pusha
scas
in
mov
or
imul
cmp
aaa
inc
and
fsubrl
push
dec
push
xor
sbb
stos
jmp
and
mov
divb
cmp
xchg
out
outsb
aas
in
and
xchg
ret
rorb
lcall
pusha
aad
cmp
loopne
lock
inc
push
dec
and
sbb
or
or
pop
or
adc
inc
ret
pop
cli
bound
mov
add
ljmp
inc
rcll
fdivl
dec
popf
jp
xchg
jmp
adc
stos
mov
inc
lods
into
mov
fsubs
xor
test
mov
push
pop
mov
std
dec
int
stos
jl
push
push
fwait
jl
fcomps
sbb
or
outsb
loop
adc
pop
or
xchg
or
icebp
fbstp
xor
jecxz
push
mov
in
nop
jp
jmp
daa
jno
insl
ss
cmpsl
xor
jge
dec
pop
and
shlb
mov
cmpsb
xor
cltd
subl
leave
dec
outsl
shlb
or
mov
es
xor
js
lahf
cmpsw
sbb
in
xor
mov
jge
jp
cmp
rol
icebp
pop
shlb
cmp
rorb
or
xor
shll
pushf
mov
lcall
inc
dec
add
imul
roll
cmc
lret
pop
add
jge
sbb
std
rorl
movb
aam
adc
scas
or
xchg
dec
sub
and
pop
mov
jg
sahf
rcll
lods
push
lret
pop
sub
and
inc
sub
xchg
dec
and
js
push
xchg
jns
add
and
sub
dec
sub
mov
jp
fsubs
inc
add
ja
cmp
inc
inc
jmp
or
test
dec
mov
push
in
addl
pop
mov
sbb
push
mov
sti
std
das
mov
cs
cltd
popa
mov
inc
sub
test
in
aad
jl
and
sarl
fisubl
ret
mov
insb
lret
xlat
sub
inc
les
aad
sbb
lds
sbb
and
mov
xor
sbb
dec
sub
xchg
jl
jmp
lahf
pop
jnp
mov
ret
fs
push
and
xor
xchg
push
pop
mov
sbb
dec
or
sbb
popa
xor
add
ret
mov
push
sbb
fsincos
xchg
lea
fisttpll
xor
mov
jl
or
out
out
mov
rcrb
pop
cld
cmpsl
jge
je
or
loope
xor
lods
in
lea
jl
cli
xchg
ljmp
cmp
cmp
cmp
test
enter
call
inc
jg
mov
fimuls
jne
andl
aad
push
les
outsb
adc
jnp
xor
cli
aad
in
repnz
pop
and
dec
or
sahf
sub
xchg
das
sub
xchg
xchg
testb
das
push
icebp
mov
orl
sarl
mull
cmpsb
jne
pop
lds
scas
push
push
sub
ret
in
cltd
pop
cltd
cmpl
sbb
sub
pop
test
or
mov
add
movsb
int3
je
sarl
lods
jecxz
jge
loop
scas
cld
sub
dec
test
daa
jg
mov
je
nop
jecxz
in
lahf
jbe
mov
es
sub
pop
nop
call
add
js
scas
scas
mov
rcll
jno
fistl
mov
je
xlat
pop
sub
xchg
ja
push
pushf
lds
sub
sarl
sbb
in
push
pop
pop
loopne
dec
xlat
clc
or
shrb
add
jo
inc
fimuls
shl
test
into
xchg
sar
mov
repz
leave
mov
test
jp
adc
imul
mov
cmc
adc
fs
rol
lret
and
push
lret
pop
lret
or
mov
pop
popf
sbb
shll
aam
sbb
cmc
loope
lcall
or
xor
and
jge
aam
loop
inc
or
jnp
lods
mov
xchg
add
or
inc
adc
mov
fcompl
arpl
pop
arpl
inc
adc
sti
xchg
insb
jle
dec
mov
test
rcrl
cwtl
fdivl
jb
fmulp
dec
mov
decl
in
inc
and
mov
fstps
negb
lcall
add
ss
mov
mov
out
jnp
pop
sahf
dec
adc
mov
fnsave
jnp
push
sub
in
xchg
inc
jl
lcall
shr
xor
fldl2e
cmp
xlat
dec
enter
add
push
mov
loop
loop
js
data16
in
pop
sub
sbb
or
fcompl
nop
or
gs
inc
insl
cmp
xor
xor
pushf
arpl
mov
insl
dec
cmp
fdivrs
xchg
iret
add
adc
pusha
cmp
inc
push
out
adc
sub
int3
sbb
fcompp
dec
xor
jle
dec
mov
and
jne
repnz
mov
stos
fs
jl
outsb
sahf
inc
jbe
and
leave
in
xor
insb
jecxz
inc
movsb
cmp
ret
mov
add
enter
adc
shr
xchg
js
mov
test
mov
and
out
fldl
popa
xchg
xchg
push
xchg
xchg
test
lds
or
lods
mov
mov
pop
xor
jmp
sub
mov
imul
je
divl
ret
ljmp
jae
adc
aaa
sbb
sbb
adc
int3
push
dec
push
mov
sub
test
cmp
pop
mov
lds
xor
cmp
mov
pop
insl
movsl
inc
jmp
int
int3
sbb
xchg
jg
out
jbe
out
arpl
int3
push
xor
cmp
xor
mov
cwtl
repz
jle
call
insl
push
scas
cmp
mov
mov
xor
sub
push
pop
mov
mov
cmp
jge
stc
idivb
insb
es
add
inc
ret
mov
jg
mov
psubusw
imul
pop
push
lds
fdivrs
sahf
mov
std
sbb
sub
mov
lods
iret
shrb
iret
add
pop
or
push
movsl
and
stos
test
pop
fdivl
movsl
aam
xchg
aas
cmp
sbb
js
cmp
mov
int3
cmp
in
fbstp
jge
adc
or
xlat
nop
mov
ret
mov
and
data16
icebp
dec
mov
push
sub
or
adc
pop
or
lahf
sub
lea
xchg
int3
pusha
addr16
xor
add
xchg
in
test
add
inc
loopne
mov
xchg
fistl
xchg
lcall
stos
insl
fdivrp
push
cwtl
fs
inc
push
enter
test
ret
in
movl
leave
rolb
dec
mov
dec
hlt
jo
dec
or
stos
call
das
leave
out
aam
pop
rolb
jle
pop
pop
or
jle
or
imul
pop
lea
in
test
sub
in
pusha
pop
sub
int3
add
inc
sahf
xor
shlb
stos
dec
inc
in
lds
jmp
hlt
int3
pop
popf
call
je
mov
mov
mov
add
cmp
inc
mov
dec
dec
adc
es
push
xor
movsb
sahf
push
push
jno
xchg
mov
cld
fsubs
xor
in
movsl
mov
leave
fwait
dec
dec
xchg
testb
mull
stos
div
sbb
mov
xor
sarb
jae
mov
cmp
mov
lret
xor
push
dec
adc
add
icebp
inc
outsb
js
aaa
lea
shr
pop
xchg
push
scas
and
movsl
rcl
cmpsb
mov
dec
out
iret
jnp
movsb
stc
mov
out
popa
cmp
mov
les
push
leave
bound
inc
jle
xor
dec
sub
pop
jne
cltd
out
rorb
or
mov
or
test
ds
add
sub
test
mov
jmp
inc
mov
imul
fs
fadd
and
lret
lds
xchg
test
or
xor
jmp
xchg
addr16
fwait
mov
mov
dec
gs
call
xlat
in
filds
push
shrb
rclb
jecxz
sbb
push
fcompl
frstor
jbe
bnd
mov
or
cmpsl
ret
xchg
push
rcrl
jp
in
call
mov
jo
and
movsb
mov
rol
jb
sub
fstpt
gs
mov
pusha
sub
sub
pop
hlt
jge
out
test
mov
sbb
aam
and
ret
push
int3
jo
sahf
pop
outsl
dec
dec
jge
adc
into
dec
dec
mov
jno
sbb
jb
mov
call
and
lods
jge
pusha
mov
lahf
hlt
xchg
add
gs
mov
adc
lds
jae
push
faddl
mov
out
pop
add
or
push
lods
stos
stc
or
je,pt
dec
movsb
pop
fstpt
repnz
xchg
mov
lds
outsb
push
sub
push
les
movb
cltd
inc
or
dec
hlt
out
loop
fidivrs
jge
jl
and
push
icebp
mov
aaa
cld
xchg
xchg
ljmp
sar
mov
sub
in
xchg
sub
cltd
cmpb
mov
push
add
data16
and
stc
ret
push
mov
fidivl
stos
in
push
ret
mov
aaa
push
js
imul
mov
in
mov
pushf
fnsave
and
cmp
xor
hlt
push
mov
mov
adc
loope
cmp
sub
jmp
adc
jae
sub
cmp
jle
repnz
int
mov
mov
push
xchg
out
fistps
loopne
inc
stc
pop
sbb
jl
fisttpll
scas
cld
shl
orb
and
mov
stos
daa
push
out
sub
lds
gs
cld
jp
fbstp
out
inc
loopne
es
std
pop
or
incl
and
imull
jp
or
pop
mov
xchg
pop
jno
or
fsubrl
inc
pop
pop
or
inc
pop
inc
test
lcall
inc
jne
add
inc
in
cmp
lea
cltd
test
das
xchg
out
mov
cltd
lea
std
xchg
sub
add
push
jno
cmp
cmp
test
push
aas
sbb
dec
sbb
out
or
mull
cmpsl
icebp
mov
xchg
rorb
pop
xchg
pop
inc
pop
jmp
popf
inc
fisubrs
xor
dec
lret
jns
lret
jecxz
je
jg
fs
scas
sub
xchg
mov
lahf
xchg
dec
mov
pop
gs
nop
xchg
daa
pop
pop
cmp
rclb
lcall
fisubrs
and
xlat
push
cmp
sldt
push
push
xor
xor
clc
inc
call
sub
xor
loop
rcll
movb
repz
push
inc
and
and
mov
testb
xchg
dec
dec
out
xchg
dec
ja
lret
xchg
fldenv
rcrl
mov
aas
insb
dec
dec
xor
or
out
dec
gs
leave
popa
and
pop
pusha
xchg
addr16
pop
es
mov
test
aam
loopne
stos
and
adc
xor
aaa
adc
ljmp
stos
fimull
lods
fists
xchg
out
sbb
xor
mov
ja
inc
cs
cmp
aaa
imul
ja
or
xchg
pop
and
test
adc
out
test
pop
mov
xchg
mov
or
cmp
pop
andb
pop
fs
ds
xor
outsb
dec
push
and
mov
sub
mov
mov
or
negb
fs
pop
mov
inc
les
das
imull
mov
cmp
xor
bnd
cmp
inc
imul
adc
mov
pop
and
cmp
mov
jg
mov
mov
xchg
xchg
pop
inc
mov
fnstcw
imul
outsl
cmc
push
add
mov
xchg
inc
out
xor
in
arpl
pushf
push
mov
cmp
cmpsl
icebp
dec
out
dec
sbb
dec
pop
fdivrs
fcomip
adc
aas
fldcw
leave
dec
add
insl
out
sub
xchg
loopne
adc
fidivrs
mov
xchg
mulps
les
ret
cmc
cmp
push
lods
sub
push
add
les
adc
mov
mov
jmp
mov
jae
shlb
out
mov
cli
sbb
jno
aam
add
adc
pop
xor
adc
mov
into
cmpsl
cmp
push
mov
inc
push
add
aas
dec
scas
mov
std
push
ljmp
cmp
popa
mov
gs
andb
and
xchg
mov
les
xor
scas
or
sbbl
mov
movl
shl
mov
xor
loope
out
ljmp
testb
daa
add
dec
outsb
adc
mov
add
cmp
push
xchg
mov
hlt
inc
stos
xor
pop
mov
insl
jp
icebp
fwait
adc
data16
adc
sub
pop
int3
mov
out
dec
xlat
sti
gs
outsl
repz
rcll
xor
inc
dec
inc
mov
add
test
or
cld
dec
cltd
nop
mov
push
xorl
idivb
mov
mov
sub
or
aad
data16
int3
leave
jg
nop
andb
cmpsl
out
lret
test
andb
fildll
ja
int3
in
add
inc
faddl
cmpsl
imul
data16
into
jbe
pop
push
push
fsubl
mov
enter
pop
rcll
jnp
add
cmp
in
das
in
sub
unpckhps
inc
push
inc
mov
xor
lret
dec
pop
and
das
addr16
shr
int
in
scas
cwtl
ds
sahf
sahf
add
pop
lods
push
jno
xchg
in
stos
js
enter
xchg
or
fcomip
mov
adc
bound
sub
mov
cli
mov
jb
pop
sahf
mov
push
jo
aaa
mov
mov
pop
push
mov
addr16
or
lcall
in
mov
adc
stc
cmp
and
mov
stos
adc
xor
scas
cmp
cmpb
pop
inc
testl
mov
add
in
daa
inc
inc
or
sbb
lock
into
nop
sub
adc
push
fucom
adc
lret
test
mov
les
push
lea
xchg
mov
shlb
cmpsl
out
imul
dec
push
adc
sbb
hlt
sarb
mov
jns
imul
add
lock
idivb
mov
fnstenv
sbb
repz
stos
sub
cmp
aad
aam
xlat
cmpsb
sub
cmc
jnp
sbb
jg
lcall
stos
stos
in
push
lods
pop
out
int3
inc
mov
fdivrs
ret
and
test
xchg
inc
movsb
jnp
adc
add
leave
and
inc
les
nop
push
outsl
mov
cmpl
std
fildl
ficoms
fxch
pusha
test
or
jl
cmp
into
and
cmp
in
in
aad
cmp
outsb
jg
dec
pop
dec
test
fisubrl
lret
arpl
or
ds
fwait
and
dec
lods
xchg
stos
xlat
out
lds
mov
or
dec
jo
fcoml
insl
pop
sbb
mov
sub
pop
mov
insb
test
xchg
xor
push
pushf
push
fcom
dec
lret
imul
shll
push
adc
rorl
scas
int3
int3
mov
clc
lods
insb
int
pop
xchg
js
gs
push
repz
imul
inc
cmp
orl
std
lahf
mov
mov
cld
out
pop
lret
test
mov
iret
cmp
and
ret
xchg
scas
iret
aam
pop
mov
adc
clc
dec
sub
xlat
lret
sbb
addr16
push
xor
dec
loop
xor
loope
sbb
outsb
pop
jb
jmp
or
lret
adc
dec
pop
add
dec
xor
movsl
mov
insl
test
inc
jns
jbe
icebp
inc
sub
pusha
insl
cmp
test
mov
inc
inc
mov
mov
test
and
cmpsb
mov
dec
mov
push
es
jl
xchg
and
push
sbb
jo
xor
adc
call
push
push
addr16
mov
inc
sbb
pop
ja
sub
pop
mov
jb
xlat
out
mov
mov
mov
mov
or
mov
sbb
adc
jle
addr16
orl
pop
adc
mov
daa
js
xchg
and
lods
mov
pop
movaps
insl
inc
sti
bound
xchg
popa
shll
push
xchg
dec
int3
jg
inc
data16
pop
fwait
call
pop
fnstcw
push
push
popf
in
mov
outsl
or
push
jae
imul
jge
push
xchg
imul
mul
mov
int3
cmova
add
fbld
cld
mov
subb
fidivrl
int
cmp
mov
add
cmp
add
push
and
mov
push
and
stos
or
fdivrl
mov
sbb
cli
jge
arpl
aad
dec
xchg
es
dec
xchg
jmp
xor
adcb
jns
fdivr
push
mov
adc
push
jb
xchg
adc
xchg
dec
scas
aas
les
push
mov
enter
jb
xor
call
pusha
jl
rol
jg
add
cmpsl
scas
dec
in
cwtl
roll
lret
pop
loopne
gs
xchg
fisttpll
mov
mov
xor
adc
test
sbb
pop
push
out
and
mov
std
push
push
adc
mov
cld
adc
pop
mov
jmp
xor
xor
sbb
or
int
cltd
sub
fmuls
insb
int3
clc
push
jns
les
push
push
lret
sub
out
jmp
aas
aam
movsb
xchg
xchg
mov
jb
cmp
imul
sbb
aad
mov
mov
mov
ja
mov
mov
lret
cmp
lock
or
cmp
cmp
out
ja
jmp
dec
pop
add
hlt
mov
pop
jo
insl
bound
pop
inc
dec
pop
add
loopne
pop
pop
insb
shlb
cs
sbb
push
and
sbb
jecxz
loopne
ficomps
hlt
aad
mov
fstps
daa
dec
test
enter
sub
cmp
mov
mov
out
inc
add
jnp
out
add
or
xor
pop
scas
jne
stc
ss
movsb
mov
dec
sub
test
adc
movq
xlat
dec
adc
add
xor
das
mov
sbb
ror
sub
inc
sbb
sbb
push
mov
jmp
aaa
gs
pushf
insl
sbb
or
lock
ret
stc
inc
lds
in
inc
sbb
xchg
je
adc
pop
add
xchg
or
mov
stc
sub
xchg
or
mov
fsubl
mov
outsb
mov
das
and
imul
int
enter
adc
ja
jecxz
repz
push
or
stos
pop
inc
ja
sbb
inc
mov
ret
mov
loope
lods
xchg
xor
rcr
pop
out
pop
jns
adc
popa
ficoms
je
push
in
pop
in
loopne
adc
sarl
push
mov
out
outsb
push
enter
pop
jge
and
fsubp
fmull
arpl
push
sub
pop
dec
icebp
ret
pop
sub
pusha
push
pop
dec
scas
mov
aas
lcall
or
mov
jb
popf
push
or
je
jg
ds
push
popa
lock
ja
cmp
into
daa
jo
sbbb
stos
movsl
mov
cmc
stos
mov
add
push
test
int3
iret
xchg
cmp
push
mov
imul
cmp
daa
pop
imul
xor
out
mov
sub
cmc
test
gs
mov
or
xchg
jmp
xorb
xor
mov
xchg
outsb
loope
pop
add
adc
sub
or
je
xor
repnz
cmp
mov
dec
mov
repz
fnsave
sbb
add
sub
push
fnstcw
testb
xchg
notl
shlb
imulb
cmp
out
inc
test
push
fmuls
inc
mov
sbb
xchg
push
insl
xor
daa
sbb
jecxz
sub
dec
sarl
fmul
xor
jecxz
cmp
adc
aad
push
cltd
push
xchg
das
add
andl
fiaddl
sahf
pop
jmp
or
ljmp
test
push
loope
adc
ljmp
mov
push
xchg
ds
test
mov
popf
je
inc
shrl
cli
fisttps
cwtl
subl
aaa
push
adc
or
and
int
xchg
insl
and
pop
dec
lret
add
test
das
add
dec
clc
jno
dec
jno
cmpsb
jnp
ret
jmp
push
xor
or
mov
adc
dec
decb
mov
dec
sbb
pop
cli
push
inc
add
push
xchg
or
icebp
dec
pushf
mov
loope
lods
incl
mov
pop
fcmovnu
jno
fwait
inc
fwait
mov
pop
mov
imul
das
mov
cmp
adc
pop
dec
je
addb
pop
cmp
leave
cmp
xchg
cmc
jae
rorl
ss
fsubs
pop
lea
jnp
mov
cs
call
aam
pop
jge
jle
jmp
sbb
jecxz
mov
fcmove
subb
fs
daa
inc
cmpl
cmpsl
stc
xrelease
pusha
mov
ds
shrl
stos
push
fsubr
filds
insb
repnz
or
ds
fst
lcall
xchg
sub
jne
stos
test
imul
pop
gs
jnp
xor
sbbb
iret
xor
ljmp
push
mov
or
clc
repz
and
jg
test
mov
das
sub
mov
enter
shll
orl
dec
fsubs
je
aam
dec
fldl
mov
push
pop
repz
mov
fs
aaa
test
cmp
sub
int
lods
push
jmp
add
loop
pushl
xor
sbb
xor
push
cmp
mov
jmp
push
push
mov
pop
cmp
xchg
cltd
mov
mov
aam
fs
jle
loope
xchg
mov
mov
pushl
mov
lods
insb
push
pusha
sbb
lahf
push
sub
or
adc
mov
cld
lods
mov
das
lock
adc
out
fsubs
ficomps
sbb
ja
idiv
insb
mov
dec
jo
arpl
je
dec
lock
gs
mov
repnz
test
or
fsubrp
std
fistps
scas
dec
in
call
sbb
jl
int3
mov
push
and
cmp
cmp
or
and
inc
loope
xor
out
xchg
sub
popf
xlat
dec
les
outsb
xchg
xor
push
lods
mov
cwtl
ret
adc
addr16
in
xchg
sbb
and
movsl
cs
sbb
mov
js
add
inc
mov
fs
out
dec
or
imul
cmp
jne
gs
lret
out
adc
inc
mov
in
ror
std
sbb
inc
pop
pop
lods
adc
fstps
cmp
movsl
test
jnp
out
xor
in
clc
sahf
dec
xchg
fisubs
rolb
scas
mov
adc
cld
fadds
xor
ss
clc
imul
lret
pushf
lcall
dec
xchg
aas
push
in
jbe
addr16
popa
cmc
push
cmp
test
aad
xor
insb
leave
pop
fwait
je
mov
lock
cmpsl
cmp
icebp
aaa
jecxz
fcoml
inc
mov
sub
xchg
mov
or
jg
mov
cmp
pushf
adc
ss
int3
add
inc
or
js
pop
out
jne
push
sub
loopne
add
adc
xor
loope
in
arpl
test
mov
shrl
pop
inc
nop
enter
jg
mov
mov
loope
xchg
xor
iret
cmp
jge
inc
loope
xchg
dec
fisttps
ja
in
arpl
xchg
js
jnp
mov
pop
popf
es
mov
sbb
cltd
negb
in
call
fmul
call
sub
pop
jle
aas
into
or
inc
sub
jbe
mov
jecxz
mov
aam
aaa
outsl
push
dec
cld
lods
outsb
clc
sub
inc
lret
call
mov
outsb
mov
sub
movsl
out
loope
cmp
std
das
mov
dec
pop
xlat
sub
clc
movsb
sub
or
dec
push
lds
sbb
adc
add
dec
push
or
bound
push
aaa
xchg
jl
rcr
hlt
pop
inc
add
flds
out
cmp
cmp
lea
rcll
inc
cld
inc
fidivs
jbe
out
filds
out
cmp
lods
cmp
sbb
loopne
pop
jle
int
mov
push
pop
mov
fbstp
ret
push
int
sub
xchg
lods
sti
rorb
add
mov
outsb
cmp
aas
jp
mov
mov
in
fcomps
sahf
cmp
mov
cmc
sbb
mov
mov
mov
clc
ss
pop
push
dec
xchg
out
stos
and
or
mov
rcrl
jnp
jg
fisubrs
ret
arpl
les
sar
fimull
daa
fldt
shlb
test
adc
cltd
push
pop
data16
shll
mov
int
out
aaa
rclb
pushf
dec
sbb
int
leave
bound
cmpsl
jg
inc
fmuls
loope
shlb
xor
insb
movsb
jg
mov
sub
jge
add
cli
push
cmpsl
scas
inc
cltd
ds
in
push
dec
push
sbb
mov
xchg
jno
xorb
mov
xor
push
dec
inc
lods
add
roll
das
popf
data16
dec
dec
push
push
movsl
sahf
fidivrl
fs
fcoml
mov
dec
mov
xchg
adc
sub
nop
inc
or
sbb
fcmove
push
push
or
loope
dec
inc
pop
fs
pushfw
mov
mov
cmc
sbb
daa
sbb
enter
std
and
in
push
jb
push
dec
movsl
outsl
xchg
fistl
ljmp
test
dec
mov
lock
add
lahf
shl
adc
xchg
movsb
xchg
inc
fwait
clc
clc
clc
jecxz
lods
jns
jge
test
pushl
xchg
fisubrs
call
enter
cmp
or
xchg
sbb
dec
dec
push
jne
jae
jmp
repz
call
aam
cmp
shll
jbe
in
push
pop
rorb
cmp
jo
jns
or
jae
jne
dec
arpl
jp
clc
cmc
cmp
xlat
xor
or
cmp
imul
adc
jmp
cmp
push
sbbb
cmpsl
hlt
call
mov
inc
mov
jb
xchg
dec
dec
inc
fisubs
movsb
lcall
je
stc
jg
outsb
mov
jne
ffree
sbb
pop
push
jne
ficomps
outsb
rorl
pushf
mov
mov
insl
fwait
jecxz
movsl
jl
mov
out
sub
xlat
or
popf
push
pushl
in
in
sub
xchg
arpl
mov
test
mov
cmpsb
inc
loopne
jl
in
mov
push
out
cmpb
mov
ds
jecxz
shll
lcall
dec
mov
shll
cmc
outsl
imul
mov
sub
aam
add
pop
int3
aad
xchg
fnsave
xor
cmp
mov
push
sbb
mov
out
pop
in
aaa
pop
cmp
in
push
lcall
sbb
xchg
cmp
and
pop
xchg
mov
test
push
sub
lcall
push
ljmp
inc
fistps
dec
ret
mov
fdiv
or
mov
cwtl
mov
cwtl
jmp
mov
repz
or
adc
lea
scas
hlt
inc
sub
fs
jnp
ret
ret
fwait
sbb
nop
in
push
mov
adc
movsb
fsts
mov
adc
or
in
dec
stc
jg
jbe
push
hlt
scas
sahf
and
push
mov
sub
test
cld
imul
and
pop
mov
or
and
mov
mov
xor
push
or
push
cld
inc
lods
pop
xchg
addr16
sti
sbb
mov
negl
scas
lea
sbb
mov
mov
inc
icebp
push
cld
cmp
cmc
xor
push
test
inc
cwtl
lods
pop
xor
xchg
sbb
xchg
lods
mov
or
cmp
xchg
and
ret
mov
mov
dec
mov
mov
mov
inc
xor
and
xchg
jo
adc
mov
rol
dec
stc
js
ljmp
add
insl
lret
stos
mov
dec
jle
mov
push
dec
xor
jbe
cwtl
mov
lock
mov
jl
ret
movsl
lahf
jne
aad
pop
test
sub
aam
inc
dec
xchg
cmc
cmp
cmp
adc
xor
xchg
lock
fs
dec
les
cld
adc
sbb
adc
ss
inc
shlw
mov
fsts
or
xor
mov
sub
cmp
ja
or
notl
jge
mov
xchg
jbe
mov
xorl
and
xor
mov
dec
inc
je
cwtl
ret
jne
das
lods
lods
push
dec
push
loope
out
cli
sub
in
test
mov
hlt
fbstp
insl
imul
jp
scas
into
das
mov
mov
arpl
lret
lahf
nop
pop
xchg
push
lods
push
cld
out
sub
fistpll
pop
dec
xchg
loop
adc
cs
fs
xchg
mov
pop
lods
add
subb
mov
inc
mov
std
or
xor
inc
jne
das
std
cwtl
cld
call
ret
add
cwtl
inc
sub
xor
or
lcall
loop
adc
fisubs
dec
lds
dec
sub
jmp
cmp
aam
call
shrb
cld
cmp
sbb
mov
icebp
mov
orb
mov
fwait
push
fcmovnb
cmp
and
and
fmul
pop
cmp
pop
es
and
loope
rclb
in
gs
out
sbb
mov
mov
cmpsl
movsb
or
jmp
push
push
stos
push
lods
dec
insb
pop
out
dec
mov
jg
jbe
add
shlb
call
inc
ret
inc
pop
push
test
cmp
adc
mov
jp
and
in
cmc
push
and
jns
jge
mov
clc
lret
adc
and
or
add
in
lods
jbe
mov
mov
jle
push
hlt
pop
mov
mov
xorb
jp
lcall
push
js
pop
cwtl
sbb
ficompl
or
addr16
jo
adc
mov
mov
leave
test
cwtl
lret
dec
jns
push
xor
lods
mov
fs
jl
fbld
inc
pop
inc
cmpsl
sub
sbb
add
lcall
push
mov
jne
and
scas
leave
mov
call
mov
jnp
arpl
aad
in
stos
mov
and
push
mov
add
mov
inc
sbb
inc
or
arpl
dec
rol
in
ss
lds
mov
mov
data16
xor
inc
push
or
xor
leave
mov
jge
shl
lods
fst
jbe
mov
push
in
aaa
rolb
mov
mov
dec
rorl
cli
jg
stos
rclb
lret
jmp
adc
call
xchg
sbbl
adc
add
arpl
push
in
dec
xchg
aam
or
cltd
cmp
pusha
lds
cld
aaa
dec
push
decb
mov
imul
add
jmp
or
not
imul
jg
fwait
and
fisttps
mov
jne
icebp
dec
mov
xlat
popf
add
pop
loop
lret
insl
cwtl
mov
pop
mov
loope
cltd
sub
fadds
stos
xchg
fdiv
leave
jnp
dec
scas
lahf
out
sbbl
mov
jmp
jnp
pop
test
sub
inc
into
divb
or
adc
xchg
mov
lret
add
lret
sub
push
shlb
in
dec
sub
scas
mov
jmp
scas
xor
pop
adc
addl
cmp
adc
loop
out
pop
ja
sbb
push
jecxz
sti
push
enter
adc
leave
jg
push
aad
call
dec
iret
inc
stos
and
pop
stos
in
jo
sbb
lock
je
jecxz
fwait
jno
ficomps
in
shll
sub
pop
mov
imul
in
int
cmp
cwtl
rorl
push
rcrl
icebp
push
cwtl
push
ljmp
jl
xor
fisubrl
js
cmc
shr
and
mov
das
cld
lock
das
rcl
and
cld
sbb
push
das
adc
xchg
xor
mov
lods
out
and
movsl
dec
and
cmpsb
push
mov
mov
fnstcw
movsb
test
xchg
imul
or
lret
push
or
imull
xor
push
repnz
out
xor
je
mov
and
adc
loopne
nop
lods
clc
lcall
sbb
dec
mov
push
mov
cs
aaa
dec
shl
jo
xor
lret
xchg
pop
icebp
xor
stos
mov
mov
mov
sbb
and
sbbb
out
jge
mov
jp
out
cld
psubusw
or
jl
clc
adc
inc
in
mov
push
xor
scas
dec
nop
and
rol
push
enter
nop
aad
mov
xor
lea
sub
pop
mov
pop
in
push
ret
push
mov
jge
ss
mov
test
cmp
pop
fadd
fwait
daa
iret
mov
incb
push
sbb
movsl
je
pop
aam
outsb
jbe
test
inc
dec
mov
adc
daa
mov
inc
push
test
outsl
hlt
int
cwtl
or
jbe
scas
add
cmp
pop
js
pushf
mov
pop
mov
sub
fsub
push
pop
ret
test
dec
jp
and
hlt
rcl
test
popa
je
lret
sbb
test
push
jo
sbb
sub
jno
jge
mov
mov
inc
and
jge
xor
outsl
nop
xor
jp,pn
lea
inc
cmc
fnstsw
sbbb
mov
adc
jb
push
adc
mov
push
sub
pop
jge
dec
sub
dec
ret
test
cli
xor
pushf
ja
nop
sbb
out
mov
inc
fisttps
movsl
ficoml
and
shrl
adc
or
pop
pop
sbb
xchg
dec
jg
mov
add
mov
dec
inc
cmp
jb
imull
jb
test
lods
loope
and
xchg
xchg
adc
fstpl
ds
ljmp
pop
cmp
ja
xchg
rorb
test
jle
xchg
fstps
jle
loope
imul
lret
fld
cmc
sti
push
hlt
dec
cmp
imul
ud0
xorl
notb
inc
out
sbbl
jg
push
aaa
jmp
sub
dec
data16
in
add
popf
fisubs
push
mov
mov
notl
out
popa
xor
sbb
mov
insl
mov
insl
ljmp
ja
and
pop
in
and
popa
and
insb
push
fistps
cmp
add
jmp
cli
rcl
mov
push
daa
adc
pop
add
cld
mul
loop
mov
mov
inc
fnsave
rcll
xchg
inc
lret
shr
jmp
addl
jl
jno
fs
xchg
xchg
or
sub
fcompl
stc
rep
or
dec
out
ficoml
inc
inc
lods
jb
xor
xor
scas
jl
cmp
fdivrp
int
jnp
clc
scas
test
pop
adc
adc
int3
cwtl
daa
sub
es
icebp
adc
fisttpll
insb
or
ret
or
loope
dec
mov
sub
mov
divb
aas
sub
add
sbb
lods
sub
push
mov
add
or
push
and
dec
cwtl
xchg
mov
pop
mov
inc
inc
insb
cltd
movsl
sbb
jnp
xchg
push
pop
inc
cmp
scas
jo
imul
jp
push
xchg
mov
out
icebp
leave
push
sub
lods
sbb
cwtl
xor
dec
jne
jnp
idivb
hlt
mov
leave
sub
dec
inc
jnp
ljmp
fwait
inc
push
outsl
sub
sbb
arpl
lahf
jge
cwtl
fiaddl
gs
adc
xchg
lahf
lahf
cwtl
orb
xor
lret
jp
push
test
mov
out
push
cmp
pop
jno
popf
mov
cmp
test
cmpsl
mov
popf
push
xchg
dec
adc
inc
enter
repnz
pop
xchg
and
rorb
cmpsl
mov
js
mov
lret
cmp
mov
test
xchg
mov
jecxz
sti
test
decb
repnz
rolb
xor
xchg
test
mov
pop
xchg
imull
inc
inc
aad
inc
mov
pop
test
fisttpl
cmc
xchg
leave
daa
or
jne
data16
into
xchg
repz
cmp
aaa
and
cltd
cmpsb
xor
xchg
iret
int
cli
in
mov
das
mov
or
cmp
add
shlb
orl
jo
jne
pusha
cmpb
jmp
fs
out
xor
and
ljmp
mov
movsl
inc
add
sti
xor
add
inc
push
or
mov
mov
repz
cmp
sub
or
js
push
adc
sahf
lds
pop
aad
and
push
and
pop
sbb
in
in
jle
icebp
fmuls
aaa
scas
sti
nop
sub
pop
iret
or
mov
fwait
add
push
pop
ds
test
mov
xchg
push
sbb
repz
mov
adc
pop
stc
jbe
mov
incl
sbb
dec
clc
mov
pusha
push
in
adc
popa
add
cld
inc
aad
sub
into
xchg
dec
add
pushf
es
lahf
pop
lods
add
inc
popa
sbb
cwtl
and
dec
call
lret
out
mull
and
and
test
ljmp
jb
movsl
les
mov
hlt
sub
mov
inc
pmullw
add
pop
pop
jmp
pop
mov
fstpl
push
mov
pop
dec
fisubrl
cwtl
fidivl
cli
jo
pop
sub
mov
je
aam
loopne
xchg
cltd
fcoms
bound
in
pop
jmp
popa
pop
xchg
es
pop
cli
dec
xchg
jbe
test
cmp
inc
bound
addr16
cli
sbb
xor
inc
cmpsl
mov
sub
add
mov
nop
jb
mov
adc
xor
sub
in
int3
inc
xchg
pushf
or
jmp
popa
mull
insb
mov
cltd
hlt
sbb
jnp
enter
insl
jg
xlat
lds
push
xlat
pop
je
pop
insb
jg
leave
push
jmp
out
enter
sbb
insb
sbbb
jl
faddl
pop
mov
jbe
xchg
xchg
push
pop
and
xor
dec
mov
adc
es
dec
cmp
sub
mov
ret
ror
adc
or
leave
ret
push
test
andl
sub
mov
add
jns
xchg
pop
push
add
repnz
inc
test
movsl
dec
daa
push
shlb
loope
shrb
outsb
lret
mov
sub
cmp
jmp
jno
push
ret
cld
inc
fwait
shr
cmp
mov
mov
lds
jnp
adc
dec
sbb
adc
cmovb
xor
mov
arpl
push
cmc
insl
xchg
popf
insb
das
push
int3
xorps
pop
lods
push
icebp
out
stc
dec
bound
mov
and
add
push
cmpsb
jne
xlat
stos
fldenv
scas
xchg
or
stos
sti
fbstp
stos
rcr
xchg
jl
or
js
cmp
jecxz
push
out
push
ret
adc
xchg
dec
sti
das
jb
jecxz
lods
pop
cmp
xchg
pop
lcall
add
add
and
mov
jns
sub
inc
inc
int3
out
push
xor
fists
jg
inc
adc
les
push
xor
push
ret
mov
push
dec
cli
outsl
cmp
adc
adc
sub
cmp
push
mov
ret
jo
add
fistpll
imul
xor
in
ret
jge
mov
bnd
mov
outsb
sarl
mov
inc
jae
sbb
add
mov
mov
shll
adc
adc
gs
out
insl
pop
jg
mulb
cmp
notl
cmpsl
cmpb
push
idivl
xlat
fldl
and
adc
and
stos
vmwrite
pop
dec
ret
addr16
xchg
pop
pushf
test
mov
les
sub
push
mov
pop
lcall
test
push
jo
xor
push
jmp
mov
in
and
mov
fdiv
mov
mov
and
dec
stos
mov
cli
push
roll
adc
adc
dec
sahf
xor
jge
inc
jl
mov
mov
addr16
cmp
pop
fildll
push
adc
sub
pop
xchg
inc
jno
sbbb
jbe
sbb
jnp
sub
mov
scas
in
push
cmp
shlb
sbb
xor
push
aam
adc
dec
idivl
jle
negl
test
jo
adc
inc
repnz
xchg
or
xchg
dec
faddl
movsb
imul
clc
dec
test
inc
mov
and
cmp
adc
das
inc
lock
imull
pop
xchg
or
cli
sbb
loop
cmpsl
in
and
in
sbb
and
adc
into
sbb
mov
in
push
lods
pop
fs
mov
inc
and
dec
push
pop
icebp
in
cltd
inc
test
mov
filds
adc
loope
push
pop
insl
sub
sub
adc
cmp
pop
dec
int3
mov
or
inc
mov
inc
daa
xchg
jmp
jecxz
es
or
sahf
insb
mov
scas
movsl
pop
inc
jns
mov
dec
inc
stc
sti
fldt
lcall
int3
jl
push
cmp
in
dec
and
stos
pop
fmuls
scas
xchg
repz
push
fmuls
lock
lods
push
add
mov
push
cmp
mov
mov
and
sbb
pushl
test
xchg
iret
pop
fldl
pop
push
mov
adc
lds
cltd
std
ss
or
out
xor
mov
ds
jge
aaa
loope
pop
and
fchs
shlb
xor
mov
pushf
mov
sbb
pusha
ljmp
mov
int3
cmp
jecxz
gs
and
sti
mov
je
xor
mov
repz
ja
adc
inc
insb
xor
icebp
lds
push
push
out
fisubrs
jecxz
push
iret
in
cmpl
mov
adc
xlat
out
lods
in
push
test
mov
inc
icebp
xchg
mov
fcmovne
addr16
adc
aas
dec
loop
repz
cmp
pop
pushf
adc
inc
das
stos
out
mov
cwtl
cmpsb
xchg
mov
cmp
jo
stos
bound
mov
or
test
cmp
stc
or
xchg
dec
or
mov
into
ret
dec
pop
lahf
loopne
int
mov
rorl
pusha
jp
in
mov
jo
fsubl
and
pop
stos
dec
clc
pop
jmp
imul
fsubr
scas
or
sub
fistl
xchg
repnz
xchg
mov
push
inc
mov
aad
sub
scas
lcall
sbb
js
sti
pop
mov
aas
mov
mov
jg
imulb
or
mov
xchg
dec
xchg
mov
dec
fisubs
sbb
repz
sbb
scas
insl
xor
sti
push
add
jae
ret
dec
sub
sbb
fisubrl
adc
xor
jae
loopne
sub
pushf
sar
mov
and
jp
xor
inc
xor
lcall
sbb
and
inc
hlt
mov
je
stos
or
sub
mov
jmp
int3
pop
incb
jl
loope
aaa
xchg
std
test
jg
cmp
mov
outsl
sti
jo
into
pop
and
pop
mov
push
je
push
sub
aas
addb
sbb
mov
adc
aas
test
sbb
movb
aas
leave
cmp
adc
lahf
push
iret
call
in
cmc
cmpsb
aad
jns
push
iret
sub
mov
mov
scas
enter
mov
fcomps
sbb
sub
movsl
cmpsb
push
add
in
lds
scas
mov
mov
fs
shr
jmp
rcr
int
jge
mov
lcall
or
cmc
adc
call
aam
push
sub
pop
daa
mov
sbb
nop
aam
outsl
push
xor
js
ljmp
jecxz
xchg
cmp
aam
adc
repnz
mov
fstp
call
cmp
mov
mov
sbbb
pushf
data16
movl
dec
cld
clc
add
cmp
push
pop
out
jae
sub
cmp
fidivl
xor
inc
fildl
das
movsl
and
es
insl
cmp
add
in
and
cmp
aas
mov
xchg
jp
adc
cmp
push
ja
jo
or
popa
addl
adc
or
rcr
sub
mov
adc
sbb
xor
jle
lock
push
inc
outsl
into
inc
fs
dec
pop
call
lds
sub
jb
push
add
mov
inc
imul
xchg
fdivrs
xchg
and
out
pop
mov
je
mov
jle
imul
outsl
fdivs
cmpsl
mov
add
sar
mov
mov
xchg
or
fldt
pop
xchg
js
add
or
mov
cwtl
cmpsl
mov
addr16
adc
mov
push
filds
pop
scas
mov
mov
stos
adc
and
call
jno
lcall
jp
ret
mov
push
leave
popf
dec
sub
lret
or
negl
mov
mov
and
mov
cmp
adc
mov
lea
outsb
jno
or
iret
fwait
sbb
aas
lret
incb
mov
cmp
or
data16
ror
sub
cmpsl
inc
mov
pop
icebp
add
mov
cwtl
sbb
mov
xor
xchg
ljmp
movsb
dec
jo
lods
out
andb
xor
cmp
lcall
adc
xorb
and
call
mov
inc
jb
jbe
outsb
fwait
cmp
sub
out
jg
mov
repz
pop
cmp
lea
std
dec
push
fimull
mov
mov
icebp
adc
or
push
imull
jns
push
jg
mov
lea
xchg
cltd
std
loop
sub
mov
xchg
xor
pusha
push
xor
cli
arpl
add
xor
rep
mov
lcall
or
dec
and
mov
adc
adcb
inc
push
cli
push
lret
stos
mov
push
fxch
sub
sbb
push
mov
fadds
jp
arpl
dec
sub
ljmp
push
inc
leave
jecxz
xchg
mov
int3
mov
jo
repnz
das
xchg
call
fldpi
out
in
adc
jb
js
in
sbb
or
push
hlt
ds
pop
cwtl
rorl
int3
je
shll
jns
aaa
or
fldcw
mov
xchg
ds
pop
fcompl
push
xor
lret
jne
dec
sbb
stc
divb
fcomps
push
pop
ret
pop
ds
jae
xor
fnsave
out
popa
lock
jnp
cld
jb
mov
sbb
sarb
sub
fwait
adc
lock
popl
push
lds
pop
xchg
cmp
lahf
lea
test
add
cli
movsb
or
jno
mov
dec
aaa
push
jp
adc
rorb
stc
cld
outsb
bound
in
pop
sbb
call
pop
addr16
lods
scas
in
or
push
mov
outsl
xor
sbb
add
fsubrl
inc
or
jns
nop
pop
pop
rorb
jecxz
cmp
lds
adc
cmp
adc
pop
xor
test
arpl
repz
xchg
out
xchg
inc
test
jle
sti
sbb
xchg
mov
mov
cli
fldcw
and
sub
int3
ljmp
dec
enter
sub
mov
xchg
mov
mov
adc
pop
or
dec
ja
cmp
outsl
mov
outsl
faddl
jecxz
sbb
sbb
mov
movsb
inc
les
or
mov
sub
adc
insl
je
pop
cmp
jl
dec
jg
clc
mov
push
aas
mov
rdmsr
icebp
sub
stos
in
add
js
or
xlat
jecxz
cmp
mov
cli
mov
and
movsb
fsubrl
mov
inc
in
loopne
mov
fisubrl
lods
shll
test
mov
push
jmp
cmp
std
lds
mov
dec
or
xchg
inc
mov
fists
fstpl
and
pop
xchg
push
and
rcrl
push
mov
cmpsb
pop
fnstsw
dec
jb
cmpsb
jnp
in
imul
test
sbb
lcall
sbb
rorb
cmc
decl
das
adc
jmp
repz
icebp
fmulp
pushf
jne
cltd
sti
inc
pop
add
out
mov
loopne
loop
or
adc
ljmp
rcll
out
and
sub
xorb
add
mov
pop
cmp
sbb
inc
mov
call
jb
add
adc
repnz
adc
xlat
mov
popf
add
adc
outsb
jmp
xor
mov
jo
or
mov
fnstenv
cltd
mov
mov
jle
lcall
push
sbb
shll
add
rolb
mov
push
rorb
sbb
aad
repz
jb
xor
jnp
mov
mov
lcall
scas
lret
adc
mov
call
lea
mov
inc
lods
and
mov
pop
or
stos
popa
mov
movsl
scas
subb
fbstp
out
mov
divb
fldenv
mov
sbb
mov
pop
xor
push
orps
add
rorb
mov
dec
inc
adc
test
xlat
add
out
or
jno
cmpsb
pop
jne
in
sbbl
inc
push
scas
pop
push
test
adc
cmp
jmp
push
dec
pop
push
xchg
inc
xor
fs
repnz
jb
xor
jo
hlt
cli
ret
sub
std
cmp
cmp
push
or
scas
mov
repz
insl
xor
into
pusha
and
rclb
pop
jecxz
mul
push
jno
addr16
mov
pop
or
mov
mov
and
notb
sbb
push
shll
ja
sbb
xor
mov
xor
repz
les
push
or
and
aas
xchg
pop
aaa
jno
mov
stos
pop
jno
mov
xchg
fnstenv
or
mov
rclb
in
and
iret
int3
pop
cmp
movsb
es
dec
and
ja
dec
mov
imul
xor
sar
fisubrl
rcl
lcall
repnz
push
test
pop
enter
push
fcmovbe
inc
ficoms
stc
sub
popa
iret
sub
sarb
push
ficomps
mov
sti
and
dec
pop
cld
iret
idivl
in
mov
nop
ja
jmp
dec
inc
cmp
push
adc
ljmp
fs
add
pop
adc
stos
mov
mov
les
enter
mov
sbb
push
fxrstor
int
push
cs
mov
cmp
fs
aad
je
cmp
pop
pop
push
xchg
lret
push
sub
dec
out
out
pop
inc
call
add
repz
adc
icebp
jge
mov
stos
pushf
sub
pop
mov
pushf
add
pop
lods
sti
xchg
movsl
adc
add
insb
fcmovne
mov
aam
dec
test
fsubr
bound
jne
rcrl
insl
xchg
xchg
pop
push
lods
jns
mov
test
out
add
ret
int
xor
sbb
pop
lock
xor
icebp
in
push
paddsw
or
sbb
pop
fildll
jne
dec
or
mov
scas
cld
je
sub
mov
addr16
mov
pop
push
dec
jmp
bound
inc
or
ds
in
inc
jge
or
in
dec
es
push
shll
inc
and
pushf
push
inc
xchg
mov
sbb
lret
incb
mov
cli
jl
ret
sbb
push
sbb
repz
leave
and
pop
lahf
adc
mov
pop
ret
cld
xchg
pop
sub
iret
mov
std
aad
call
les
int3
sbb
xlat
lret
jecxz
mov
sbb
or
and
je
push
lds
outsl
bnd
and
xlat
push
mov
xor
dec
fiaddl
stos
mov
xchg
cmpsl
dec
leave
jb
and
aam
loopne
fwait
imul
cmc
pop
mov
popa
mov
mov
add
rorb
lcall
test
test
mov
rorl
lds
mov
ret
adc
jg
cmp
fdivs
gs
int3
ja
fidivrl
in
adcb
dec
mov
test
int
insb
pop
xlat
aad
ficoml
test
cmpsb
xchg
add
mov
push
loopne
stc
xlat
pop
mov
js
sahf
mov
xor
pop
scas
pop
add
cmp
adc
and
aad
sub
adc
sbb
add
xchg
cltd
jnp
outsl
ljmp
std
andb
xchg
insl
mov
icebp
fs
out
mov
aad
add
pop
bound
lret
int
jmp
mov
sti
pop
lock
icebp
xor
xchg
fisttpll
sub
mov
push
push
lea
dec
aad
jno
in
dec
cld
arpl
and
xor
in
shr
dec
xor
pusha
jmp
push
and
pop
jecxz
je
daa
push
test
ss
jb
or
cmp
sub
jecxz
mov
mov
and
cwtl
movsb
pop
emms
das
sub
cmp
fmul
mov
sub
bound
or
imul
add
mov
shld
cmp
aaa
xchg
adc
dec
jl
out
jbe
pop
test
sub
jmp
xchg
scas
mov
pop
scas
in
fucomp
inc
outsl
mov
jp
cld
sahf
pop
xor
jle
pop
push
movsl
outsl
mov
adc
adc
imul
dec
and
xlat
mov
nop
lea
repz
loope
test
xor
std
nop
cltd
pop
daa
aad
push
jb
lahf
ljmp
rcll
aaa
repnz
push
addb
daa
and
and
mov
jno
out
push
xchg
sub
ljmp
sti
and
pop
push
pop
jo
or
cli
mov
push
enter
cli
sbb
mov
mov
pop
cmp
int3
mov
push
jmp
nop
dec
jae
xchg
sti
fstl
add
cwtl
inc
push
ret
pop
mov
aas
adc
push
sbb
out
aaa
and
ret
cmp
rcrl
sbbb
or
mov
loopne
stos
cmp
fdivl
int3
ret
pop
in
cmp
jo
sbb
push
pop
mov
rcll
fwait
xor
jecxz
arpl
jle
jbe
sahf
imul
sbb
dec
mov
xor
pop
push
cld
flds
and
cwtl
roll
mov
cli
xor
xor
inc
xchg
jge
outsl
in
mov
leave
mov
outsl
or
and
mov
mov
fildl
sub
cmc
jbe
rolb
ret
cmp
fnstcw
mov
adc
lcall
out
inc
lret
bound
adc
xor
mov
jg
in
imulb
push
sub
sbb
mov
mov
dec
mov
xor
sahf
aam
in
mov
cltd
fistps
mov
xchg
add
xor
cmpsl
sbb
int3
xor
fistl
jns
stos
out
shrb
shll
cmc
adc
sbb
lods
arpl
fwait
mov
arpl
lods
cmp
bound
test
insb
dec
mov
aam
pop
insl
mov
repz
bound
add
mov
mov
imul
mov
cmp
outsb
idivl
push
repnz
sbb
mov
xor
adc
lret
push
push
les
inc
comiss
jns
adc
popf
jle
test
dec
scas
aaa
push
mov
imul
inc
push
xlat
sub
push
mov
pushf
leave
insb
xchg
or
jbe
test
iret
arpl
lret
int
mov
fcomps
bound
sub
fbstp
mov
inc
popa
ljmp
aas
in
in
inc
jb
pop
push
popf
lcall
cmp
push
sbb
pop
lcall
mov
jbe
pop
pop
aad
mov
ss
stc
ss
add
jp
push
lahf
iret
cmp
sub
push
fidivrl
outsb
dec
flds
fnstenv
repnz
fs
xor
or
jecxz
mov
pop
dec
frstor
sbb
sahf
push
movsb
rcrb
jg
lahf
push
xor
hlt
and
imulb
movsl
dec
pusha
push
push
xor
dec
push
arpl
sub
mov
jb
mov
add
adc
push
jle
test
lcall
lahf
fsubrp
push
pop
or
fisttps
dec
nop
sbb
test
and
lcall
fidivl
mov
adc
movsl
push
jb
sub
pop
out
dec
jbe
or
dec
cs
or
cmpl
jne
sbb
lods
data16
lods
pushl
add
mov
int3
jp
jg
mov
test
sbb
gs
bound
addb
int
adc
shlb
push
jns
add
data16
insl
sti
inc
mov
enter
push
in
mov
push
push
sub
sti
std
mov
mov
pop
mov
push
push
cmp
or
jge
gs
stc
sbb
jg
fildll
inc
push
lock
jne
adcb
xchg
bound
int3
mov
jbe
mov
lcall
lods
sbb
cmpsl
pop
dec
fisttpl
lds
cmp
sahf
mov
mov
mov
xor
orl
mov
cmp
xchg
sbb
xor
sbb
mov
dec
in
adc
dec
imul
lods
jo
mov
xor
cmp
pop
lret
pop
jns
es
xor
mov
jge
push
xchg
int
pop
lret
inc
bound
clc
iret
xor
pusha
repz
lea
dec
jno
mov
fcoml
jmp
iret
jg
cmpsb
fisubrl
std
pop
sub
ss
rol
jg
sub
and
je
mov
mov
loope
mov
dec
xorl
ror
mov
popa
jecxz
xchg
push
mov
cli
xor
add
test
loop
arpl
pop
mov
rol
ficomps
std
cwtl
xor
sub
pop
lahf
push
mov
iret
popf
xor
mov
mov
fwait
sub
movsb
sbb
ss
push
out
pushf
roll
lahf
jge
dec
in
arpl
pusha
aas
movsl
repz
mov
sbb
jno
mov
pop
mov
inc
xor
mov
es
xlat
mov
adc
repz
mov
push
push
lret
jle
xchg
in
test
mov
mov
dec
xchg
dec
xor
dec
in
jo
jne
mov
xor
test
out
repz
into
push
xchg
pop
and
test
inc
out
cli
sub
and
sbb
subb
or
iret
add
and
pop
jecxz
inc
pop
cmp
es
and
sarl
rcr
sub
ret
scas
jecxz
xor
mov
pop
push
inc
mov
in
sbb
arpl
add
pushl
das
and
mov
push
lret
sti
mov
into
cmpsb
movsl
fwait
lods
lcallw
bound
sub
ja
out
pop
lds
add
insl
xor
mov
cmpsl
jne
in
aam
jmp
loop
in
in
ja
cwtl
negl
dec
jb
int
xor
sbb
add
repnz
sarb
je
aam
inc
add
pushf
xchg
out
jb
dec
jle
or
adc
lret
pop
daa
or
enter
push
mov
cmpsb
out
dec
pcmpgtw
xchg
pop
repz
out
xor
fs
add
dec
fdivp
fnstcw
xchg
mov
inc
push
test
mov
repnz
jno
insl
xchg
and
cmpsb
mov
jno
push
imul
frstor
ljmp
fdivrl
xchg
in
leave
cmp
loope
and
mov
mov
stc
inc
mov
sahf
xchg
dec
sbb
add
loop
out
push
dec
pop
stc
test
cld
pusha
sub
mov
cmpsl
insl
insl
fwait
lahf
stc
add
push
bnd
insl
ljmp
push
xor
insl
inc
jnp
fxch
jmp
cltd
stos
in
ret
insb
pop
xchg
cmp
lea
push
out
or
mov
insl
es
jp
xor
jp
js
mov
shlb
loopne
icebp
fwait
inc
and
mov
jnp
pushf
sbb
in
or
iret
scas
adc
in
mov
sub
je
negl
push
dec
cmp
add
je
cli
call
bound
sbb
jo
daa
dec
and
push
enter
dec
cmp
ja
pop
fdivs
mov
mov
out
mov
outsb
and
xor
pop
shlb
adc
mov
xchg
jae
sarl
out
cmpsl
in
mov
sarl
jmp
aam
and
push
jb
dec
xchg
jge
in
mov
adc
pop
dec
mov
aad
xlat
xor
push
add
add
lds
cmp
jecxz
aas
xor
ss
movsl
cmc
jns
pop
jg
call
test
lahf
movsl
mov
xor
or
movsb
in
or
in
xchg
imul
dec
loopne
movsl
or
add
dec
pop
cmp
std
lods
jmp
jecxz
leave
test
mov
jne
lds
aas
popa
sbb
lea
mov
test
int3
iret
fdivrp
ret
in
mov
aad
mov
jae
mov
mov
mov
sbb
mov
jle
repnz
rorb
dec
xchg
arpl
pop
push
xchg
sub
ret
dec
mov
add
test
sub
xchg
mov
inc
loop
xchg
mov
ror
or
cmp
mov
and
cmp
imul
pop
data16
xchg
cwtl
cld
iret
jge
xchg
xchg
xor
sbb
dec
pop
pop
mov
in
inc
mov
icebp
fldenv
aam
mov
leave
inc
mov
mov
jg
adc
insb
sub
fsts
in
icebp
stos
std
iret
xchg
lock
sub
icebp
xlat
push
std
fwait
sub
mov
fldcw
mov
arpl
aad
in
orl
jp
add
inc
cwtl
lcall
inc
notb
imul
into
adc
insl
jl
ret
sub
testb
sbb
lds
ret
fs
insb
iret
push
cmpsl
out
jno
sbb
sbb
mov
jno
adc
out
jnp
vdivss
jb
outsl
insb
xchg
loopne
push
pop
pusha
pop
fbld
push
stos
test
popl
push
loopne
lods
shrb
insb
mov
outsb
scas
test
inc
sub
sbb
mov
ficoms
popa
sbb
aam
test
iret
mov
stc
push
cmp
inc
sbb
nop
mov
repnz
arpl
dec
gs
mov
jae
mov
pushf
fiaddl
test
mov
add
sarb
mov
mov
cmc
xor
mov
mov
dec
sub
aam
sub
dec
mov
aad
inc
gs
or
test
xchg
push
ds
xor
mov
data16
outsl
push
xchg
pop
jb
bound
dec
mov
xor
pop
out
jb
mov
dec
test
js
cmpsb
push
and
mov
push
daa
pop
test
jp
add
stos
ljmp
hlt
lcall
hlt
out
lahf
adc
xchg
mov
fisttps
in
mov
xchg
sub
gs
js
or
cmp
lret
in
xor
mov
arpl
mov
mov
or
test
dec
test
aas
push
test
scas
mov
sbb
mov
arpl
pushf
out
insl
or
mulb
pop
ret
or
fisubs
pusha
and
cmpsl
lods
inc
hlt
loop
adc
into
test
inc
out
fsts
leave
repnz
push
ljmp
cli
into
addr16
out
aad
adc
push
clc
rep
insb
and
add
add
jp
repnz
stos
sub
rol
cld
push
jne
and
cld
mov
insb
inc
mov
cwtl
ljmp
and
xchg
mov
pop
imul
jp
mov
cmp
xlat
daa
ja
mov
push
add
xchg
pop
insb
aam
push
cmp
adc
cwtl
aaa
mov
mov
mov
pop
fstpt
mov
test
cmp
lret
jle
in
outsl
and
adc
lds
cmp
mov
or
cmp
mov
add
mov
xchg
lahf
ret
jp
jmp
mov
jno
xchg
and
outsl
pop
mov
xor
lret
loop
je
xor
ret
in
push
jle
loop
outsl
jns
dec
cmp
sti
dec
xor
test
xor
mov
adc
dec
pop
pop
icebp
divl
cltd
cmp
into
stos
std
roll
cld
adc
push
sub
sahf
sbb
cmp
push
mov
int
notl
and
mov
mov
testl
jp
sbb
iret
out
fmulp
shll
ljmp
pop
pop
out
roll
int3
out
popf
mov
cwtl
scas
std
cwtl
mov
movsl
dec
fdivr
dec
out
xchg
mov
and
jns
cmp
filds
mov
pop
xor
movsl
sarb
mov
pop
testl
cmp
sub
sti
cmc
imul
push
sub
jmp
mov
hlt
sub
or
xchg
xchg
addr16
ficoms
jg
jl
push
lcall
adc
mov
push
ficoml
out
mov
cmpsl
jmp
add
mov
add
push
xchg
or
movsl
movsl
xor
mov
cs
lahf
add
and
xor
outsl
movl
bound
or
jbe
mov
and
xchg
movsl
fs
jmp
mov
inc
mov
inc
push
daa
jle
add
stos
incb
icebp
sbb
jge
xchg
aam
adc
inc
inc
ss
cmc
testl
lds
in
sub
push
push
mov
bound
or
dec
jnp
dec
mov
push
or
mov
pushf
jle
sub
and
inc
movsb
push
pop
xorw
xlat
lret
cmp
outsb
add
std
and
mov
out
add
dec
call
pop
lods
movsb
dec
je
add
repz
push
test
cmp
inc
jnp
ret
insl
out
sub
or
mov
jbe
rcrb
dec
fstpl
out
sbb
push
jb
inc
push
data16
xchg
in
xor
arpl
and
and
xlat
hlt
mov
or
into
jmp
lcall
clc
iret
dec
fnsave
xchg
sub
out
push
cs
adc
sbb
pop
les
or
cmp
aaa
call
jmp
mov
push
mov
sahf
xchg
jp
mov
or
and
jo
mov
ret
push
inc
sti
sub
mov
les
jbe
fsts
fwait
ja
mov
mov
xlat
add
pop
js
jb
in
xchg
pusha
mov
mov
sbb
and
jl
pop
les
inc
jecxz
xchg
sti
jge
sbb
push
dec
add
xor
jne
xor
adc
xchg
mov
sub
sub
xor
imulb
loop
fwait
int
dec
dec
icebp
roll
xlat
fwait
xchg
dec
stos
cmc
push
mov
int
sub
orl
dec
pop
in
xor
in
jecxz
ds
xor
mov
inc
xchg
repz
test
mov
xchg
mov
xor
cmpsl
adc
js
dec
cltd
or
or
cmc
cmp
xchg
and
mov
into
adc
dec
std
mov
dec
test
negl
jle
pop
xor
dec
xchg
push
push
mov
and
lahf
mov
out
das
into
aad
push
filds
jnp
lret
fiadds
pop
fstpt
test
adc
jecxz
fisubl
jne
fadd
adc
add
dec
ljmp
mov
je
xlat
dec
mov
adc
jb
cmp
aam
cwtl
sub
loop
adc
les
movb
mov
and
xorl
adc
mov
bound
jge
in
mov
xchg
loop
lea
mov
adc
mov
and
daa
inc
leave
sub
cmpsb
jae
add
inc
jbe
mov
pop
mov
xor
jg
mov
fnstsw
je
addr16
rcrl
out
aaa
lcall
jl
sbbb
push
dec
loope
ja
repnz
cwtl
push
sub
inc
mov
imul
xor
insl
mov
jns
imul
mov
test
in
adc
lods
xchg
in
sbb
mov
xor
cmp
mov
into
mov
or
insl
imul
xor
jns
or
add
lds
xchg
pop
sahf
mov
in
rcr
pop
clc
mov
scas
enter
ja
pusha
aas
loopne
lret
add
cmc
sub
repz
lea
adc
mov
mov
je
add
dec
cmpsl
int3
dec
mov
imul
cli
jle
sub
xor
xchg
lock
lock
arpl
gs
adc
sahf
inc
loopne
mov
mov
mov
lods
ret
outsl
mov
jne
adc
jno
inc
dec
sbb
loop
bound
xchg
xchg
lcall
inc
repnz
push
sub
fildll
mov
push
flds
dec
xchg
dec
mov
mov
ss
inc
fdivrs
mov
xor
movsb
inc
std
repz
data16
mov
mov
adc
mov
push
mov
push
or
int3
mov
xchg
sub
add
mov
xor
dec
adc
call
jae
stos
arpl
sbb
xchg
mov
mov
pushf
push
pop
imulb
scas
jle
adc
xor
test
xor
cmp
pop
push
mov
or
adc
cmpsb
fldcw
mov
sub
pop
or
lret
jo
popa
pop
jg
movsb
sub
lods
and
push
push
cmc
lock
add
lret
rclb
add
sub
xor
int3
xchg
jbe
orb
pop
andl
je
sub
xchg
jmp
adc
pop
and
scas
cmp
pop
dec
cmp
lahf
test
cwtl
cld
cld
dec
pop
or
das
add
mov
test
xchg
pop
stc
xchg
dec
test
fdivr
jb
ret
inc
fcmovb
add
mov
das
jne
dec
lock
or
cmp
dec
ss
pop
mov
adc
push
and
mov
hlt
fdivs
or
mov
and
sub
push
hlt
scas
mov
std
cwtl
inc
sub
sbb
or
pop
add
loopne
lret
movsl
add
xchg
pop
cmpsb
mov
std
inc
mov
hlt
sub
or
aad
stos
jle
imul
in
in
jmp
dec
xchg
sub
testl
jb
shrl
jo
adc
push
push
aad
fisttps
dec
dec
pop
outsl
adc
cmpsb
push
daa
mov
push
adc
mov
in
add
dec
adc
cmp
mov
aad
fdivr
and
outsl
repnz
mov
in
sahf
xchg
popa
jae
cmp
xor
clc
shll
bound
pop
mov
mov
in
stos
jnp
xchg
dec
pusha
push
fists
fnstsw
xchg
dec
in
add
popf
xor
addr16
jp
int3
sahf
shll
lcall
dec
add
sbb
cltd
add
cwtl
jp
andb
aam
fnsave
sub
rcr
cmpsb
ja
xchg
mov
inc
sub
mov
xchg
jge
int3
sub
xor
cmp
test
pop
xchg
jnp
pop
xchg
popf
xor
ret
outsl
lahf
dec
sub
add
and
loopne
stos
nop
ret
data16
xor
mov
cwtl
dec
mov
subl
or
dec
cmp
dec
push
aam
mov
int3
fldenv
sbb
cmp
xchg
loopne
add
scas
pop
out
scas
xor
pop
pop
sbb
inc
lods
fadds
out
lock
jp
cmc
repz
jnp
sbb
je
loopne
aaa
xor
jns
mov
aas
push
imul
xchg
push
test
lock
lods
outsb
fisubl
cmp
mov
mov
cmpsb
push
cld
jmp
popf
movsl
jb
push
pop
dec
or
add
xor
loopne
lcall
mov
out
push
fcomp
shll
cld
pop
das
mov
out
jbe
mov
sbb
in
or
cli
lods
jae
sbb
stc
sbb
push
sub
inc
push
das
or
push
mov
rcrl
dec
sbb
inc
cmc
push
adc
mov
insb
push
sub
jle
push
outsl
cmp
mov
dec
test
jmp
sub
dec
arpl
add
lds
movsl
imul
pop
ja
mov
pop
fildl
fcom
in
mov
pop
jge
iret
lock
pop
push
push
adc
gs
mov
test
add
call
mov
pop
daa
dec
das
push
xchg
test
push
mov
pop
and
pop
jmp
dec
cmp
jnp
push
pop
andb
jne
test
mov
sub
mov
add
push
xchg
fidivrl
pmaxsw
mov
lods
jbe
fildl
outsb
out
outsl
in
out
dec
out
out
int3
mov
imul
ss
mov
jecxz
mov
add
push
std
in
test
pop
mov
sub
push
add
mov
dec
mov
imul
leave
push
dec
in
leave
sub
dec
xchg
repnz
dec
pop
xor
xor
xlat
jle
leave
adc
mov
pop
xor
and
inc
mov
mov
test
or
mov
repz
std
cmp
lock
pop
inc
movsl
lods
push
js
dec
push
and
orb
popa
lret
adc
lahf
mov
pop
adc
or
popa
dec
decl
bound
mov
ja
arpl
in
mov
mov
aaa
mov
xor
pop
cmc
dec
fs
sbb
or
jle
les
mov
mov
mov
xor
mov
xchg
cmp
mov
decb
and
lods
mov
xor
pop
add
push
push
mov
dec
push
sbb
sbb
andb
xchg
mov
jl
sub
mov
sub
sahf
movsl
adc
incl
daa
mov
xorb
das
cltd
jae
adc
in
xor
fsts
aad
icebp
in
outsl
jae
pop
dec
insl
lods
insb
mov
fimuls
xchg
xchg
call
inc
fistl
mov
popa
sbb
mov
out
inc
xchg
push
add
xchg
ret
imul
out
push
jne,pn
das
in
add
cwtl
cltd
or
jae
mov
inc
jno
das
out
scas
add
jb
push
stos
ds
inc
pop
js
jbe
mov
lcall
and
dec
lret
std
jb
sti
pop
inc
mov
xlat
scas
inc
ds
pop
pusha
loope
pop
push
dec
pop
add
repnz
repnz
sbb
jmp
lds
aaa
test
ret
out
mov
loop
jmp
fidivrs
negb
mov
clc
mov
hlt
andl
fldt
mov
cmpb
outsl
test
jle
sbb
icebp
adc
stos
jne
jl
leave
or
push
out
test
mov
pop
mov
xchg
into
xor
inc
xlat
mov
mov
add
sti
sub
mov
mov
sbb
jge
test
arpl
push
cmp
adc
stc
outsl
fcoms
ljmp
data16
push
jle
ss
mov
sbb
dec
in
rorl
cmp
jecxz
cmpsl
rorb
sbb
insl
add
push
sbb
push
jb
shrb
xchg
andl
out
inc
scas
orb
das
mov
mov
cmc
aad
pop
adc
push
pop
mov
rcll
fldenvs
js
mov
mov
aad
jp
push
fcoml
sbb
xchg
jecxz
mov
mov
lret
fcomps
adcb
push
xor
jl
push
sarb
xchg
test
xchg
push
jne
add
mov
test
cmpsl
inc
push
incb
mov
pop
in
mull
or
iret
testl
or
add
cli
sbb
adc
mov
mov
sub
adcb
jl
pusha
push
inc
js
sub
shll
ds
fistpl
test
sbb
std
loope
lret
loope
cs
in
nop
testb
sbb
sub
push
leave
jle
sub
loopne
test
push
mov
jecxz
inc
cmc
dec
into
sub
pop
imulb
mov
mov
pop
rcrb
aad
xor
xlat
insb
test
push
adc
adc
pop
sub
jae
mov
adc
and
lods
test
sub
xchg
jp
mov
pop
pop
insl
xor
loope
adc
adc
hlt
js
lcall
iret
sub
dec
movsl
jg
imul
mov
insl
cmp
xchg
or
loop
xor
sub
icebp
inc
lock
inc
loopne
outsl
push
mov
cmpsb
test
ds
hlt
pushf
incl
xchg
inc
bound
jns
or
and
std
jne
sarl
iret
outsb
mov
lods
or
dec
mov
add
stos
ljmp
push
les
out
cmp
sub
push
cs
stc
iret
les
les
inc
jae
jno
xchg
add
insb
inc
mov
adc
and
ret
leave
sti
dec
dec
stc
inc
adc
jbe
xchg
cmp
std
jmp
inc
push
push
cmp
jae
add
fwait
sbb
lahf
hlt
test
loope
adc
bound
mov
fcoml
and
inc
scas
xchg
cs
xchg
inc
cld
mov
sbb
cmp
lret
ficomps
gs
adc
fadds
insb
jle
sub
jp
xchg
cmpb
divl
hlt
push
xor
test
lea
and
dec
mov
les
inc
xor
mov
dec
nop
push
jp
jno
or
into
sub
js
scas
stos
cmpsb
sub
mov
icebp
add
fistpll
insl
shlb
pop
mov
out
inc
pop
add
sbb
mov
push
mov
ljmp
add
xchg
aam
mov
xor
mov
mov
aam
mov
mov
cmpsl
cld
hlt
add
dec
sahf
mov
in
movb
mov
es
mov
and
and
or
or
in
icebp
movsl
ja
das
inc
imul
push
mov
xor
mov
imul
test
jb
inc
adc
and
stos
mov
out
inc
push
xchg
dec
dec
sub
push
add
mov
jno
flds
mov
int3
cltd
movsl
mov
cld
imul
into
imull
movsb
add
scas
xor
clc
push
test
cmp
int3
daa
fisttpll
sbb
pop
cli
out
xchg
xor
pop
dec
les
mov
jmp
pushf
sub
in
pop
test
mov
ja
mov
es
jne
jg
pop
dec
sarb
aad
or
mov
jge
sbb
push
mov
test
jo
xchg
or
stc
pop
mov
pop
dec
mov
dec
mov
cmp
lea
jns
xchg
test
aam
cmp
sub
nop
ja
stos
pop
or
jnp
loope
fistpll
fldenv
aad
call
inc
test
fimull
xchg
jne
mov
mov
xor
mov
int
xchg
add
fs
mov
dec
jno
push
pushf
pop
jl
pop
mov
fsub
ja
ret
add
mov
xchg
cwtl
push
jl
hlt
out
sti
sbb
xor
pop
cltd
cmpb
mov
jns
jnp
pop
push
mov
arpl
lods
or
pop
add
aaa
icebp
mov
outsl
cli
mov
fsub
icebp
nop
pop
lcall
mov
out
dec
and
push
leave
dec
push
xor
mov
fbstp
jecxz
mov
mov
jecxz
push
decb
pop
test
cmp
mov
lea
mov
lret
pop
scas
jnp
and
mov
cmpsl
mov
rcr
faddl
cmp
push
pop
inc
fnsave
adc
movb
lret
popa
cmc
or
and
aas
or
fdivl
mov
dec
xor
mov
test
or
push
inc
imul
aaa
push
icebp
ds
idivl
or
adc
jg
adc
cs
pop
jno
mov
xor
fcmovne
mov
jle
fcom
insl
cmpsb
and
sub
jns
jb
iret
inc
inc
ss
andl
or
xchg
fwait
jmp
mov
or
pop
xor
leave
push
rcll
mov
mov
stos
dec
mov
fisubrs
jle
sbb
bound
dec
inc
adc
pop
xchg
sarl
loop
xlat
mov
inc
jecxz
sub
cld
js
lea
incb
and
sti
pop
arpl
add
xchg
dec
addr16
push
icebp
in
out
or
ficoms
and
incl
sub
push
ret
dec
sti
mov
out
xor
xchg
pop
push
push
aas
aam
cltd
sub
fdivp
sub
push
mov
shll
mov
and
xchg
and
pop
inc
loopne
mov
adc
enter
fdivrl
paddsb
ja
mov
into
cmp
jecxz
push
mov
xchg
sub
movsw
pop
lods
into
adc
mov
lcall
pop
lret
mov
inc
test
jle
les
sbb
test
das
inc
inc
arpl
inc
mov
sub
cmc
xchg
mov
lret
sub
jle
inc
cmpsb
cmp
loope
dec
shlb
or
pop
jg
cld
in
push
mov
aas
mov
aaa
cmp
jl
mov
lds
inc
and
repz
pop
nop
mov
test
jo
push
jle
mov
jo
in
xor
mov
popa
cltd
imul
mulb
repz
mov
cs
mov
dec
jge
cmc
sti
cmp
in
das
ss
out
jo
imul
push
jnp
sub
ja
sti
loope
popf
leave
ficompl
mov
in
rolb
enter
rol
iret
jp
cltd
fwait
aas
mov
mov
jbe
push
xchg
aam
push
outsb
mov
ja
popf
push
add
cmpsl
and
xor
push
xor
mov
push
out
lock
bound
mov
jg
mov
cmpb
stos
inc
mov
mov
out
or
and
push
sbb
push
dec
push
and
hlt
or
mov
cmpsb
jle
ljmp
sub
sub
ds
loope
icebp
movsl
outsb
rolb
adc
pop
pushf
mov
dec
pushf
ss
pop
out
stos
jb
sbb
mov
in
push
test
sbb
cli
xor
push
pop
inc
mov
bound
stos
and
cwtl
fdivs
dec
cmp
es
je
fistpl
adc
mov
outsl
arpl
xchg
lods
movsb
ss
xlat
lret
add
mov
add
pop
fwait
pop
push
mov
imul
fnsave
push
adc
aaa
mov
cmp
ja
mov
pop
or
mov
jno
int3
sahf
xchg
add
push
les
fistpll
push
sbb
enter
bound
sub
repnz
and
jns
fwait
inc
jno
jo
xor
push
xorl
sahf
out
int
push
fdivrp
jmp
xorb
jae
repnz
cmp
mov
lods
mov
dec
fsubr
pop
faddl
mov
ss
cmpsl
sbb
sub
xchg
ja
adc
xchg
jle
add
in
pop
call
cltd
addr16
icebp
xchg
pop
sbb
cmpsl
hlt
divb
sub
pop
lods
xchg
out
jle
sub
inc
rcrb
outsl
scas
iret
stos
movsb
mov
sti
sbb
test
pop
inc
das
adc
xlat
sub
in
mov
jbe
or
and
pop
add
inc
daa
pop
idivb
adc
sbbb
mov
mov
sub
jbe
scas
cs
push
and
push
in
bound
test
inc
sahf
cwtl
cs
mov
sub
divb
loop
rcrl
pop
and
add
inc
in
mov
jb
add
add
scas
inc
jl
sarb
stos
jbe
mov
push
jmp
enter
cmpsl
mov
std
scas
pop
cs
cmpl
pop
mov
push
into
push
fcmovnu
stos
loope
jbe
call
orb
jo
les
pusha
push
test
dec
add
ja
xchg
dec
push
mov
sbb
pop
jbe
xor
mov
call
mov
lret
xor
jns
mov
adc
sub
pop
jae
aaa
nop
lret
jne
dec
mov
outsb
xor
sbb
jg
mov
mov
ret
faddl
or
push
imul
loope
cld
in
lea
mov
sti
push
mov
mov
leave
orb
pop
js,pt
imul
inc
pop
fdivrp
add
lret
nop
xchg
pop
shlb
xchg
frstor
adc
inc
arpl
fimuls
push
mov
add
adc
add
jne
ja
mov
mov
or
outsl
shlb
out
aad
fsub
add
cmpsl
mov
jmp
pop
mov
jns
xor
sbb
mov
outsl
xchg
pop
or
or
lahf
cli
cli
jmp
jle
sbb
lcall
push
loopne
loopne
mov
fnsave
mov
and
dec
loopne
pop
pop
xchg
sub
outsl
loop
pop
fcmovnu
sbb
push
xlat
shll
inc
push
das
sub
adc
inc
cltd
dec
movsb
rolb
xchg
int3
xchg
mov
movsb
mov
jl
lahf
mov
jmp
xor
lods
push
ljmp
adc
dec
push
fwait
xchg
jno
pop
lret
jge
setg
mov
lds
loop
cwtl
xor
inc
or
aam
bound
shll
xchg
fistl
cld
movmskps
cmp
call
jns
mov
lds
sbb
and
add
gs
xchg
cltd
pop
pop
mov
lock
mov
cmp
dec
pop
jnp
mov
xor
mov
pop
adc
testl
dec
cmp
lds
cmp
rclb
cmp
cmpsb
loop
in
rol
xchg
test
cld
and
inc
call
mov
or
sub
mov
repz
xchg
jl
mov
scas
mov
clc
mov
fstpl
cmc
fcoml
mov
into
movsl
pop
mov
xor
jns
int
popa
testl
ret
inc
decl
cmovl
adc
push
dec
pop
push
sahf
push
mov
sub
cld
mov
ljmp
push
push
idivl
loope
fdivrl
je
gs
jmp
and
push
add
aad
jl
add
cmp
and
or
mov
stc
pop
sub
stos
mov
lock
push
push
mov
or
fcomip
pusha
push
outsl
insl
shll
push
rcrl
mov
movsl
add
pop
ds
rorl
add
dec
jg
xchg
sti
std
fistl
out
cs
cmp
loop
lcall
cmpsl
pop
inc
cmp
dec
xchg
pop
mov
ds
dec
push
imul
cmp
mov
jno
mov
mov
or
xor
gs
cmpb
pop
ss
xchg
xlat
fimuls
pop
and
fxtract
into
cmpsb
fbld
adc
les
pop
xchg
aas
push
div
push
sub
mov
jecxz
or
aam
rcr
rcrl
std
loopne
mov
xchg
and
xchg
mov
xorb
sbb
xchg
shll
or
inc
mov
sbb
test
mov
jno
xor
adc
fldl
scas
mov
popa
out
dec
push
xchg
insl
lea
dec
xchg
sbb
fs
xchg
pop
sbb
push
cmpsl
mov
xchg
lock
popa
es
out
or
out
les
sbb
jl
js
xchg
inc
jmp
fstl
mov
jg
in
jp
dec
sbb
imul
enter
mov
in
inc
icebp
or
and
push
sbb
ja
repnz
jmp
loope
mov
cmpsb
mov
fiadds
int
negl
xchg
jae
cmp
sub
nop
hlt
adc
pop
and
xchg
repnz
mov
stos
jp
push
mov
lods
aad
or
lcall
dec
adc
stos
push
test
aas
lcall
repz
push
cmpsl
into
xlat
xchg
lcall
dec
pop
sbb
cld
push
jo
aas
cmp
movsl
les
test
jecxz
inc
push
xchg
test
xor
add
rorb
pop
sub
mov
orl
adc
test
leave
xor
xlat
lret
imul
jnp
xor
daa
sahf
jo
xchg
inc
push
mov
jmp
sbb
sbb
in
divl
scas
adc
mov
push
pop
jnp
jnp
fsts
pop
fistpll
fs
jg
pop
mov
mov
fs
sbbl
cmpps
inc
inc
adc
lods
hlt
into
cmc
test
cwtl
and
dec
or
icebp
xchg
mov
test
repnz
aam
andb
mov
push
in
pop
arpl
sub
rorl
mov
in
sbb
jbe
xlat
or
out
sarb
fcoml
imul
pop
add
mov
int
mov
inc
jne
adc
mov
dec
je
jo
jb
and
lcall
sub
icebp
inc
and
in
mov
in
in
jecxz
dec
daa
push
mov
jnp
mov
cmp
inc
lods
loopne
stc
dec
lods
icebp
loopne
xor
push
outsl
mov
rol
imul
aaa
cli
daa
out
xchg
movsl
icebp
sbb
scas
and
lahf
mov
ss
add
stos
gs
xchg
or
add
xchg
ljmp
push
fldt
call
mov
lret
cwtl
inc
sub
rcrl
push
shll
pusha
jmp
insl
xchg
scas
xor
pop
outsb
sbb
in
lret
or
or
mov
ja
pop
mov
lcall
sbb
pop
movsl
pushf
push
imul
add
sub
add
xchg
cltd
pusha
inc
insb
sahf
push
inc
test
mov
fdivrp
jg
mov
mov
push
add
sub
repz
and
xchg
lret
pop
cmp
pop
ds
and
add
stos
add
and
shlb
fwait
popl
mov
js
adc
test
inc
jno
in
mov
inc
or
and
into
push
cmp
stos
out
filds
cmp
mov
popa
push
lock
pop
mov
jb
sub
pop
stos
fucomi
cmp
loope
std
adc
pop
inc
std
stos
or
scas
mov
adc
cmp
or
les
inc
ficompl
sti
mov
imul
jb
call
std
dec
leave
pop
aaa
outsb
sbb
fistps
sub
rorl
push
jp
lock
bound
mov
test
cmp
sub
fnstenv
sub
adc
pop
inc
inc
add
in
fmulp
imul
je
gs
ljmp
testb
xorb
inc
lods
scas
mov
sar
sub
scas
popf
andl
xchg
sbb
and
mov
and
loop
out
xchg
xchg
pop
adc
jns
jns
push
push
fs
cmp
movsb
stc
push
sbb
xor
mov
ss
mov
jp
xor
or
clc
movsl
clc
sub
inc
pop
adc
dec
xchg
mov
jle
cmpsl
jno
jno
mov
sbb
das
cld
aam
cli
les
jnp
mov
mov
xchg
jns
pop
call
xchg
xchg
js
in
ss
and
fs
xchg
xchg
and
outsl
cmp
mov
push
dec
jbe
in
mov
fiaddl
pop
add
test
stc
in
rolb
icebp
in
repz
iret
jle
dec
mov
dec
dec
fmulp
sub
idivb
jl
arpl
or
mov
xchg
jae
out
int
scas
lock
dec
mov
mov
pop
pushf
cwtl
cmpb
add
aas
in
repz
or
mov
pop
xchg
out
lds
imul
adc
aas
mov
and
mov
lods
lahf
sub
inc
pop
in
aad
push
pusha
mov
mov
mov
insb
mov
push
mov
xor
lahf
sub
shll
lcall
ficomps
cmp
mov
rcr
and
sbb
xor
ss
sub
leave
out
gs
xchg
sahf
out
pop
daa
clc
lds
mov
ljmp
addl
cmp
or
xchg
push
mov
mov
push
xchg
adc
push
cmp
jl
in
cmp
sarb
dec
sbb
mov
mov
pop
loope
push
add
ret
mov
mov
jge
push
lahf
out
js
pop
addr16
in
xlat
pop
adc
enter
pop
iret
mov
enter
in
add
dec
loope
cmpsb
mov
or
sbb
pop
sbb
js
mov
out
adc
sub
loope
lahf
and
popa
sahf
in
in
jns
cs
mov
mov
mov
xchg
or
popa
jle
xor
mov
imul
pop
cmc
hlt
lods
adc
pushf
adc
loope
xchg
lcall
pusha
cmpb
rol
addr16
pop
pushf
inc
pop
ret
addr16
call
push
js
cmp
xchg
outsl
es
push
mov
cli
add
pop
mov
cmc
pop
movsl
loopne
jno
mov
xchg
mov
inc
testb
lds
add
pushf
mov
shll
lahf
lods
mov
popf
mov
movsb
mov
lahf
psubsw
add
aad
lret
call
insl
jl
sub
fisubs
cs
addr16
addb
mov
lods
out
gs
repz
mov
scas
iret
fsubs
dec
pop
push
jle
mov
jne
js
daa
movsl
in
mov
mov
jne
lds
es
mov
jb
pop
add
xchg
mov
xchg
adc
aaa
loopne
mov
adc
popf
mov
cmp
mov
cmp
xor
xchg
mov
mov
sub
pop
cmpb
jl
loop
add
mov
and
outsb
jge
jle
out
loopne
mov
mov
sub
pop
scas
xchg
adc
and
add
mov
pusha
test
call
push
loop
xchg
cld
cmpsb
ss
cmpsb
sbb
leave
movsb
xchg
iret
mov
lods
push
add
inc
jmp
add
xchg
fidivrs
test
test
mov
into
addr16
cmp
mov
push
jl
ficoml
into
push
ljmp
adc
lret
xchg
push
ret
or
push
and
and
or
shrb
mov
mov
jge
movsl
or
adc
add
sbb
inc
and
imul
ds
adc
scas
test
cmp
pop
int
add
and
lret
aas
adc
mov
or
dec
jmp
lock
out
pop
idivb
lret
sbb
addl
cmpsl
adc
and
dec
sbb
imul
mov
jge
aam
mov
and
pop
add
arpl
aad
ficoml
lea
and
mov
clc
adc
inc
rclb
mov
ljmp
dec
nop
dec
fwait
push
adc
shlb
sub
cmp
lea
jb
out
arpl
loopne
or
xchg
xchg
lea
xlat
int3
add
inc
mov
mov
cmpsl
mov
gs
dec
lock
pop
push
jge
pop
lods
shll
xchg
pop
mov
das
cmpb
xor
cmp
mov
test
fwait
jg
jl
outsl
bound
into
icebp
in
addr16
loop
icebp
push
pop
lods
adc
iret
js
push
insb
fcmovne
push
das
mov
ret
fnstcw
jecxz
xor
add
cmc
scas
pop
or
adc
mov
mov
int3
into
xchg
inc
xor
mov
add
jno
or
loope
mov
cmp
test
mov
or
test
cmc
cmp
xchg
int
add
lea
cltd
arpl
push
xor
gs
or
cmp
maxps
lods
fcomp
lods
jo
scas
sbb
jle
pop
lock
xchg
mov
pop
ret
daa
iret
loope
outsb
sbb
xchg
or
dec
push
ret
push
xchg
into
mov
sub
push
test
xlat
add
lcall
xor
add
fwait
xor
shl
jae
das
jae
pop
sahf
in
outsl
jmp
out
ret
jnp
adc
jae
je
iret
popf
faddl
mov
lds
and
iret
push
push
das
daa
push
subb
or
mov
int
insl
push
arpl
loop
mov
xchg
add
cmp
adc
fbld
cmp
push
push
or
mov
push
and
movsl
jmp
sub
iret
testb
push
jp
mov
jge
lret
mov
cmp
pop
vdivss
add
mov
mov
mov
mov
pusha
enter
sub
shrb
popf
dec
xchg
adc
int
aaa
mov
aaa
sbb
mov
inc
cmp
push
push
movsb
mov
mov
jae
jl
test
mov
xchg
imul
inc
push
cmp
idiv
mov
iret
mov
sahf
outsb
mov
push
insl
cmp
sti
mov
data16
add
aas
out
clc
daa
or
or
movsb
out
inc
push
les
xchg
cmp
imul
sahf
add
mov
xchg
add
lea
push
cmp
xor
fcmovnbe
fsubp
jge
mov
mov
dec
inc
ret
daa
rcll
loopne
cld
out
sahf
sub
mov
cltd
mov
cmp
mov
repnz
out
pop
adc
int
push
xlat
fs
jecxz
xchg
lds
mov
inc
les
xchg
jl
add
loop
push
mov
sub
in
sbb
or
lret
loopne
shrl
xor
and
mov
jg
ss
jmp
push
mov
imul
paddd
jg
push
frstor
and
or
fadd
in
cmpsl
imul
aam
add
or
addr16
popf
loop
pop
sbb
adc
aad
and
jb
imul
jns
rcl
lock
outsb
push
leave
call
or
ljmp
das
xlat
pop
shll
mov
cmc
arpl
mov
das
dec
cwtl
test
insb
xor
inc
xchg
out
repnz
jo
push
pop
inc
sbb
push
int
data16
popf
push
cmp
lea
or
out
cmp
xchg
jmp
mov
imul
fnstenv
dec
cs
xor
xor
leave
addb
mov
add
push
pop
jbe
shrl
sbb
cmp
les
mov
out
lret
sbb
sbb
dec
insl
mov
stc
jge
outsl
adc
push
xor
lock
ret
add
je
xor
pop
sbb
daa
das
adcb
adc
xor
mov
aam
add
sbb
pop
sub
push
jmp
lock
inc
loop
pusha
dec
push
xchg
dec
outsb
dec
adc
mov
jle
add
adc
mov
xchg
repz
fcompl
mov
mov
adc
fdivs
mov
stos
jae
mov
sub
popf
xor
add
fildl
add
dec
out
xor
test
or
inc
mov
je
decl
ret
repnz
mov
mov
jecxz
stc
cmp
mov
cld
cmpl
jne
push
daa
mov
rorb
inc
jmp
cmpsb
pushf
add
push
mov
leave
mov
cwtl
cli
movsl
inc
adc
shr
jp
aaa
cmp
cmp
into
push
pop
mov
out
pop
stos
inc
or
mov
or
shlb
mov
loope
in
push
dec
test
fistpll
cwtl
or
and
cmp
scas
mov
movups
jp
pop
adc
ficompl
mov
pop
gs
sbb
jl
cwtl
in
xor
sbb
jmp
ret
jg
mov
je,pt
clc
xchg
fistpl
mov
sbb
mov
jb
lret
inc
mov
jno
inc
xor
sti
fbld
or
lock
jo
push
rcll
xchg
xchg
lock
cmpsb
and
add
xchg
and
mull
jp
cmp
cltd
fnstsw
hlt
mov
popa
scas
mov
jmp
add
jae
or
pop
push
push
mov
inc
aas
add
mov
out
xchg
mov
cmp
rorb
mov
mov
push
arpl
lock
cmp
or
cmpsb
sub
xor
testb
jo
enter
shl
mov
bound
cmp
mov
int3
xorb
je
pop
sbb
and
and
sbb
dec
lret
adc
popl
fwait
sar
pop
iret
out
mov
inc
out
jecxz
sub
pusha
mov
outsl
pop
or
iret
fldl
orl
data16
aaa
out
mov
call
in
add
sbb
cwtl
dec
in
andb
ljmp
insb
pop
cmp
xchg
add
jae
repnz
mov
push
add
sti
inc
lods
cmp
cmp
inc
cwtl
lret
lock
and
fimull
pop
fnstcw
pushf
mov
xlat
mov
mov
or
mov
fistl
xchg
sub
push
cmp
cltd
or
pop
test
in
in
in
jmp
xchg
mov
inc
aaa
dec
sub
cli
pop
sub
adc
push
mov
dec
cmp
push
mov
sub
cltd
adc
pop
add
fists
add
xchg
sub
imul
imul
push
je
pop
out
fnstenv
test
ret
mov
pop
les
rcpps
idivb
mov
mov
push
and
mov
icebp
or
and
rol
or
sub
or
imul
imul
lock
movsb
cmp
cwtl
jae
int3
mov
sarl
mov
js
inc
sub
xor
psubusb
push
and
icebp
adc
out
fs
jecxz
xchg
dec
dec
es
jb
cmp
test
push
and
fwait
sub
dec
pop
inc
push
repnz
cmpb
add
imul
test
jl
mov
jnp
daa
xchg
pop
xor
je
or
sub
test
rcl
jno
addr16
cld
sub
shlb
ret
test
shrl
jmp
test
pop
mov
mov
movsb
mov
mov
rcll
push
inc
xor
dec
test
cmp
cmp
jnp
mov
and
out
aam
add
push
imul
dec
push
cmpsl
inc
mov
xor
mov
dec
mov
mov
xchg
jge
sbb
push
enter
dec
inc
mov
push
jmp
adc
and
push
test
mov
pop
inc
in
mov
mov
adc
inc
xchg
push
add
pop
sub
fwait
divb
sbb
sbb
jp
pop
cmp
mov
ja
jno
ret
jb
mov
mov
push
fisttpl
add
stc
jmp
sbb
out
push
sbb
push
xlat
sbb
jnp
xor
push
inc
rcrl
cltd
popa
sarb
sti
pop
scas
je
fsubrp
das
sub
mulb
mov
or
mov
movsl
fmuls
fisubs
fstpl
rcrl
dec
jno
lret
nop
rcll
xchg
dec
rolb
mov
test
sbb
cmp
scas
ljmp
pop
or
scas
and
adcb
lcall
out
sarl
mov
lahf
xchg
ret
pop
fimuls
sub
popa
sub
jp
mull
add
movsl
aaa
and
pop
dec
rorl
rolb
dec
lret
and
dec
jmp
mov
jp
mov
mov
in
in
sahf
pop
mov
test
push
imul
push
lock
mov
into
cltd
mov
mov
cmp
mov
inc
mov
rolb
sbb
scas
pushw
mov
call
int
out
and
fmull
aaa
sti
es
fildl
cltd
jg
imul
insl
ds
ja
mov
ret
pop
and
pushf
shlb
inc
outsl
test
fcompl
or
and
lahf
xorb
or
fstpt
inc
dec
fmull
cmp
out
sbb
fisubl
jp
test
cmpsb
in
in
pop
mov
inc
xorl
xchg
das
dec
or
add
and
leave
leave
lcall
imul
lcall
enter
aam
xchg
cmc
das
or
dec
pop
cli
out
cld
lds
pushf
mov
push
rolb
sbb
pop
je
cwtl
sub
das
xor
fs
aam
mov
xchg
mov
lock
fistpll
popl
mov
pop
adc
jge
and
pusha
daa
inc
or
in
mov
pushf
cmp
jg
push
out
fmull
icebp
out
repnz
out
out
xor
inc
popa
push
in
push
sub
lahf
loop
cmpsl
or
popa
push
xchg
sbb
loopne
cmp
loop
ljmp
cmp
lock
xor
adc
mov
lock
shlb
incl
dec
fcmovb
xchg
nop
idivl
sbb
pop
xor
sbb
std
lret
mov
mov
lret
pop
pop
popf
mov
or
out
pop
test
pop
cmc
add
mov
push
mov
ss
shl
shrl
push
aaa
popf
dec
add
dec
xor
jg
xchg
jle
iret
mov
sar
jmp
movsl
sub
ja
sbb
test
jecxz
xchg
movsb
push
or
leave
mov
int
test
xchg
pop
les
pop
mulb
xor
pop
iret
pusha
call
mov
test
psubusb
pop
mov
inc
mov
add
into
xchg
dec
sub
je
lea
push
fsubl
xlat
repnz
cmp
or
inc
mov
jae
mov
fistps
data16
mov
or
loope
movsl
cld
or
ret
add
xchg
fsubrs
push
pusha
aaa
insb
mov
pop
lahf
add
pop
sub
outsl
addb
adc
jnp
sub
pop
sbb
adc
xchg
mov
cmpb
mov
test
pop
aaa
inc
lods
xor
adc
rorl
testb
cmp
jle
cld
push
mov
and
out
ja
inc
mov
pop
aas
sahf
xchg
ljmp
xchg
mov
add
mov
xchg
or
xorl
inc
insb
jecxz
cmp
push
mov
dec
and
lds
push
movsl
mov
mov
add
and
jbe
jns
mov
jecxz
xchg
push
xchg
push
jno
or
rclb
xchg
adc
sub
pop
lock
mov
mov
nopl
lahf
aas
push
dec
mov
into
mov
gs
pushf
mov
sbb
mov
stc
mov
adc
lods
in
mov
scas
dec
negb
ret
push
js
pop
mov
jle
pop
xchg
or
cmc
cs
outsl
pop
jnp
dec
mov
cmpsl
cs
je
jo
add
rcr
fstpl
in
xchg
sub
cmpsl
inc
nop
daa
testb
mov
test
inc
aad
push
out
pop
mulb
pop
add
push
xor
dec
std
mov
or
cli
clc
or
das
mov
jg
adc
xchg
add
adcw
or
cld
and
mov
mov
push
das
push
movsb
push
mov
sub
daa
ret
clc
mov
loope
lcall
sub
fs
add
into
xchg
je
cmpsl
jnp
or
xchg
imul
fs
jb
lahf
xchg
inc
push
jle
dec
repz
test
pop
dec
imul
dec
insl
mov
adcb
lret
loop
and
repnz
or
insl
lahf
in
cmp
addl
ret
inc
and
or
or
mov
shlb
aam
mov
jge
scas
lret
jle
mov
mov
sub
std
popf
lahf
add
sub
pop
js
mull
adcl
das
mov
ds
and
fldcw
popa
xchg
int3
jle
dec
sbb
cmp
lahf
xchg
pop
fmul
test
movsl
les
jp
pop
jp
sbb
jg
push
push
pop
int3
mov
cmp
jge
ljmp
sub
pop
jmp
data16
mov
sti
gs
fidivl
jmp
inc
aaa
push
lds
sub
daa
cli
push
jbe
popa
hlt
and
inc
in
mov
iret
xor
mov
xchg
cltd
dec
outsb
mov
test
scas
push
inc
loope
sub
sbb
cmpsb
xor
lcall
mov
rcrl
pop
iret
add
xchg
out
js
sub
sahf
cmpsl
lds
lret
data16
rcrb
mov
lret
sbb
stc
cli
into
fistl
mov
cmp
roll
fisubl
sbb
mov
aas
add
aaa
mov
jl
inc
or
sub
pop
add
cli
test
jle
mov
push
je
fisttps
dec
sti
out
fwait
dec
xchg
into
push
out
int3
add
mov
inc
mov
pop
mov
cmp
push
arpl
sahf
cwtl
sahf
loopne
je
or
cltd
into
push
jno
or
pop
jno
dec
xor
jno
xchg
aas
shrb
xchg
pushf
fmuls
mov
shr
testb
nop
shlb
jae
test
daa
mov
ret
movsl
lods
mov
data16
sub
jmp
mov
leave
sahf
loope
xchg
xor
mov
mov
push
and
sahf
jl
jmp
call
test
lret
repnz
adc
pushf
in
mov
mov
cwtl
stos
sub
iret
pop
test
in
push
or
xor
repz
jmp
mov
lea
adc
or
or
push
stos
sub
clc
xchg
sti
adc
movsb
testl
sti
ds
pop
add
loopne
ret
xor
fidivrl
jns
inc
sbb
outsl
dec
jmp
cmp
inc
leave
or
jmp
push
pop
in
aam
mov
adc
cmp
adc
fcompp
imul
scas
mov
outsl
repnz
add
or
stc
mov
sbb
aas
rcrl
std
push
add
and
xor
popf
rorb
adc
xchg
mov
test
mov
bound
icebp
pop
sbb
loop
test
pop
lahf
push
das
enter
hlt
cs
push
push
mov
add
mov
sti
mov
repz
mov
push
mov
mov
adc
fwait
adc
sub
mov
dec
test
or
adc
in
xor
adc
sbb
mov
clc
push
sub
frstor
xor
insb
mov
cmp
loop
xchg
jne
ss
ds
sbb
sbb
dec
adc
and
mov
jl
and
lret
sti
out
movsl
sti
cmp
ffree
in
cltd
jno
xchg
push
lds
aaa
adc
dec
inc
jecxz
aaa
mov
cmp
and
sub
test
push
fnsave
xor
pushf
arpl
lcall
mov
inc
pusha
xchg
cli
lahf
inc
ja
pushl
jle
pop
fwait
add
or
push
xor
mov
sub
mov
decl
inc
add
dec
cmovb
cmp
daa
cmp
dec
insl
xchg
pop
add
add
notl
push
jbe
pop
sbb
pop
jle
repz
pushf
leave
imul
inc
mov
hlt
pop
ja
adc
sarb
sbb
sub
jo
sbb
push
dec
mov
inc
iret
rcl
test
sub
or
aaa
scas
jbe
fsubrs
sub
xor
jmp
xor
jnp
fs
fdivs
arpl
in
jg
dec
stos
fmull
dec
xadd
add
call
inc
inc
stos
mov
mov
adc
ja
cmovbe
sbb
dec
push
mov
shll
sub
call
push
syscall
xor
sahf
stc
add
inc
pop
xchg
or
daa
iret
jp
mov
xor
iret
js
cmp
inc
outsb
fwait
mov
or
imul
in
imul
pop
cmpsl
mov
std
xchg
xor
outsl
lcall
in
pop
out
pop
lods
xlat
rorl
dec
insb
insl
lcall
lods
cld
popa
int
int3
sub
push
and
in
ror
push
in
ret
pop
divb
mov
sub
xchg
jle
jp
and
xor
or
mov
or
test
std
add
std
cmp
jb
sti
xchg
sub
mov
cmp
mov
push
pushf
dec
lret
push
loop
pop
adc
add
scas
pop
inc
push
push
pop
rcr
push
push
xchg
push
fnsave
mov
shlb
xor
mov
cmp
cmp
mov
cmp
sub
push
sbbb
loopne
fisttpll
mov
fsubs
cltd
mov
in
popa
ja
sbb
jns
es
dec
lock
jp
jne
cmpsl
xor
adc
sbb
nop
out
jne
repnz
sbb
lods
dec
adc
cwtl
add
pop
ja
add
mov
lret
sbb
push
cmp
mov
fidivrs
sbb
loopne
insb
mov
cld
xor
pusha
and
imul
jno
push
push
aaa
pop
xor
out
cwtl
fsubs
xor
shll
lahf
dec
dec
outsb
push
mov
fldt
xchg
mov
push
push
aad
or
das
mov
inc
push
js
inc
cmp
aas
mov
insl
cli
mov
sub
mov
stos
nop
push
dec
out
add
popa
call
in
pop
xor
jo
push
mov
fwait
shr
aaa
sbb
and
jle
in
fisubs
adc
add
test
decb
test
fistps
mov
pop
jae
mov
pop
inc
sbb
and
pop
js
sub
sbb
dec
add
movsb
and
cmpl
xchg
into
pop
lods
lea
fsubl
fisttpll
mov
les
out
push
fwait
jne
mov
loope
and
outsb
mov
in
pop
xlat
push
add
lcall
pop
dec
and
dec
mov
out
mov
mov
mov
pop
test
pop
jle
and
je
pop
mul
sbb
lea
mov
push
mov
int3
aaa
ficompl
lock
or
xchg
push
test
cmp
leave
push
pop
loop
adc
out
xchg
xlat
imul
adcb
rorl
sub
mov
mov
fidivl
pop
mov
icebp
cmc
daa
test
out
jl
movsb
adc
sbbl
jo
out
outsl
adc
jne
fcmovnu
testb
sub
inc
popa
movb
iret
sti
cmp
jp
xchg
jle
js
enter
push
imul
add
out
movsl
dec
xchg
cmpsl
es
sub
cli
fcomps
mov
sbb
push
pop
imul
jmp
or
mov
sti
loop
mov
insb
out
xlat
pusha
xor
mov
push
mov
xor
inc
call
push
orb
jl
aad
shl
sbb
ljmp
xor
or
fsubs
pop
loopne
pop
sbb
dec
xor
sbb
pusha
sbb
xchg
or
jne
test
cmp
in
jmp
aad
pusha
cmpsl
xor
push
shrb
add
dec
xchg
aam
mov
mov
jle
js
jbe
jb
cmp
xchg
mov
xor
enter
cmp
repz
and
scas
mov
fs
in
sub
rol
dec
push
and
inc
packssdw
in
shl
and
outsl
rolb
xor
mov
fwait
push
fcmovne
roll
pop
add
ss
add
sub
int
loopne
frstor
pop
pop
fldenv
sub
fcoml
fsubrs
mov
movsl
sub
scas
std
mov
xlat
outsl
decb
push
pop
std
sbb
rcrl
int3
and
mov
mov
jo
cli
mov
into
ficomps
adc
adc
cltd
add
mov
enter
int
mov
mov
push
and
xor
mov
mov
mov
mov
or
pop
cs
push
jns
pop
pop
sub
std
or
insb
mov
aaa
lret
push
dec
mov
nop
fs
dec
adc
es
and
loope
bound
xchg
mov
into
mov
iret
xchg
ss
sahf
jl
fists
mov
and
or
in
mov
mov
pop
xor
cmp
mov
out
mov
sub
xorl
iret
shlb
inc
incl
push
xchg
or
pushf
pop
das
and
mov
repz
in
rol
into
lods
loop
in
into
enter
lods
xor
lock
mov
pop
mov
std
adc
mov
test
adc
push
insl
imul
xchg
xor
add
xchg
xor
addr16
lods
push
popf
es
inc
sbb
pop
xlat
sbb
dec
aad
push
filds
sbb
push
lea
pop
jp
lock
jbe
mov
hlt
jns
jmp
lea
mov
inc
fwait
lahf
inc
sar
and
cltd
cld
jl
cmp
xchg
push
sub
mov
pop
insl
pop
test
ror
cmc
push
mov
cmp
in
xchg
cmp
sub
and
mov
mov
mov
mov
xor
out
sub
add
sbb
sub
sbb
inc
sbbb
jmp
fs
mov
shll
xor
inc
test
repz
cmp
les
adc
xchg
jle
mov
testb
add
xor
scas
jae
and
push
pushf
insb
xchg
mov
stos
push
in
push
sub
xchg
sub
jo
fsubrp
das
loop
or
cli
jb
sbb
js
fucomp
mov
lret
dec
cmc
pop
ljmp
xor
scas
mov
sbb
cmpsl
xor
mov
jmp
outsb
int3
xchg
repz
mov
sbb
lahf
ja
dec
inc
sti
mov
xor
inc
les
dec
pushl
scas
mov
hlt
mov
or
inc
sbb
cmp
dec
sar
ja
pop
push
les
push
jmp
cmpl
or
mov
adc
push
xchg
in
mov
jae
adc
fstpl
test
push
pop
push
js
lea
add
pop
ss
inc
stos
int3
push
clc
aam
fildll
mov
jo
push
jmp
cmp
ret
nop
or
daa
or
sbb
shll
jp
jae
pop
int3
push
fnstcw
call
daa
cmp
inc
adc
cltd
and
xor
and
sti
mov
imul
xchg
mov
inc
push
je
mov
rorl
clc
fidivrs
mov
mov
add
and
sub
cmp
mov
repz
inc
std
mov
mov
push
add
push
inc
dec
add
inc
insl
sub
mov
xor
imul
pop
gs
fs
push
aad
lock
pop
jge
xor
clc
orl
or
aas
jns
mulps
shr
push
sbb
mov
sub
call
sub
popf
jg
imul
int
dec
cmpsb
loopne
rcrb
xchg
mov
add
or
in
call
cmp
out
popf
repnz
scas
xchg
and
add
mov
adc
lret
push
lea
bound
sub
leave
push
add
cltd
and
lods
dec
mov
adc
fnstenv
loope
std
inc
jmp
inc
inc
cli
dec
stc
sbb
xchg
mov
test
lods
sub
add
push
inc
xchg
sbb
pop
mov
pop
aaa
sub
pop
xorl
pop
imul
daa
fidivs
lcall
jmp
jno
sbb
sbb
scas
adc
ljmp
xchg
sbb
bound
in
sub
cmpsl
lret
mov
pop
xor
mov
and
and
int
ljmp
adc
arpl
clc
icebp
addr16
sub
sub
and
inc
jnp
and
movsb
inc
repnz
sub
or
cmp
pop
pop
aas
scas
inc
in
test
add
jb
fisubl
mov
repz
xor
enter
loop
push
push
sbb
dec
jns
pop
shl
insl
arpl
in
cmp
sbb
mov
add
xorl
and
cmpsl
adc
dec
cmp
fcmovu
add
sub
mov
std
add
repz
lcall
push
push
addr16
stos
iret
cmpsl
mov
pop
inc
scas
sbb
sbb
sti
xor
das
clc
lods
pushf
cs
cmp
mov
and
jmp
push
jecxz
jnp
jmp
jns
movsb
arpl
scas
nop
sbb
xchg
jmp
mov
sbb
into
cwtl
jl
and
sub
lock
popl
cmp
sbb
gs
xchg
fidivrs
and
dec
sbb
cmp
and
fsqrt
pop
jecxz
ret
aaa
mov
lcall
test
movsl
aas
dec
xchg
aad
and
sbb
aad
adc
test
loop
fwait
std
in
stos
xchg
mov
adc
mov
ds
ret
test
repnz
cmp
mov
pop
stc
out
pop
xor
inc
js
fcom
mov
movsl
and
scas
adc
push
xchg
dec
movsl
jge
mov
pminsw
mov
pop
je
in
loopne
jl
jecxz
insb
fcmovu
fdivl
fcoms
sbb
dec
stc
sbb
jmp
fisttps
mov
push
inc
push
adcl
jp
cmpb
adc
cld
xchg
movsl
adc
jno
dec
mov
out
cmp
out
outsl
xchg
cmp
in
mov
sbb
pushf
or
xchg
sti
aas
xlat
sbb
xor
int3
mov
adc
mov
cmpsl
hlt
sbb
add
dec
jmp
jg
xor
rclb
cmp
xor
mov
cwtl
fstl
mov
adc
test
sbb
mov
cmp
js
stos
pop
push
cltd
daa
cld
dec
pop
add
dec
jb
testb
call
movsb
mov
leave
xchg
mov
fs
mov
mov
pop
adc
add
sbb
mov
in
das
pushf
popa
repnz
mov
push
out
jmp
cld
pop
xchg
fisubrl
out
jns
lods
es
rcrb
xchg
lods
push
cmpsb
adc
jo
addr16
xor
je
push
xchg
add
jmp
orl
xlat
xchg
pop
out
sbb
repz
mov
jbe
jp
and
mov
test
mov
fsubr
stc
mov
pop
adc
out
enter
push
jmp
aam
mov
shll
add
inc
cmpsl
push
push
jp
fisubrl
das
in
dec
imul
fildl
adc
mov
mov
test
mov
jne
in
jnp
es
and
lahf
gs
stc
push
xchg
in
std
fdivl
mov
xchg
cmp
out
pop
scas
iret
adcb
stos
fs
fstps
mov
push
sbbl
or
adc
cmpsb
xchg
adc
mov
xchg
jge
insl
jo
mov
xchg
add
mov
xor
ja
int
jge
or
or
out
das
push
in
cmp
mov
jg
call
clc
push
xchg
lret
mov
sbb
in
leave
fdivrp
fimuls
mov
arpl
fadds
sbb
aam
test
adc
sarl
or
ds
jg
loope
into
cmp
or
mov
sbbl
cli
push
adc
sub
stos
cmpsl
pop
dec
data16
fldz
and
pop
sbb
cmpsb
testl
iret
or
inc
and
adc
and
rorl
mov
fstl
pop
cmp
push
push
xor
jle
bound
fnstcw
aaa
cmp
xor
insl
adc
mov
bound
add
jp
iret
imull
jae
adc
jg
cmc
leave
inc
or
ret
arpl
lcall
cmp
in
xchg
inc
into
pop
movsb
push
xlat
fsubl
jg
mov
adc
xor
aam
imul
stos
xchg
out
and
sbb
enter
es
sub
jb
mov
or
or
jb
and
push
mov
pop
mov
lock
inc
clc
sub
pop
xor
push
inc
sarb
pop
cmpsb
sti
add
or
insl
jns
out
ja
js
sysret
pop
out
repz
stc
fst
lcall
sub
jecxz
sahf
jns
aas
stos
mov
hlt
arpl
es
pop
mov
mov
fists
mov
imul
pop
jne
xchg
push
push
sbb
daa
sysenter
jb
sub
mov
ja
mov
push
test
nop
pusha
std
mov
mov
dec
inc
sbb
and
jl
jmp
add
push
cmc
dec
pop
sbb
inc
jo
sbb
add
xchg
outsl
inc
aas
and
jecxz
test
fs
js
aad
insb
rep
pop
pusha
cmp
add
sbb
add
hlt
pop
xchg
mov
fimuls
cs
mov
aad
call
sub
fildl
lods
insl
or
cs
aaa
jp
xchg
leavew
jl
data16
add
push
in
aad
mov
int
icebp
ds
fsubrs
lahf
push
dec
xchg
sbb
test
mov
cmp
and
ds
xor
or
jmp
fadds
sarb
xchg
dec
bound
pop
fstl
stc
out
adc
or
ret
dec
subl
push
mov
addr16
pop
pop
mov
insb
int3
ds
cmp
enter
fsin
shlb
cmp
jmp
and
and
jo
neg
test
and
popf
out
inc
call
jge
adc
lcall
lahf
add
xchg
scas
int3
mov
lret
jl
int3
sbb
mov
addr16
sar
imul
mov
add
popa
mov
push
cmp
negl
out
jae
xchg
das
dec
mov
pop
cmp
addr16
fs
scas
adc
js
insb
mov
mov
xor
out
lret
out
sbb
gs
mov
and
jne
in
xchg
cmp
lods
xor
pusha
aad
adcl
mov
adc
pop
inc
and
xchg
hlt
jge
add
addr16
xchg
arpl
or
dec
addb
movsl
cmpsl
sbb
inc
repnz
dec
and
xchg
pop
insl
leave
jae
test
test
xchg
sub
imul
andl
rclb
push
pop
pop
push
and
fsubs
stos
xchg
xchg
mov
and
jns
jb
mov
addr16
rolb
xchg
push
xchg
inc
dec
pop
cmp
cmc
mov
jge
xchg
aam
push
andb
cli
lcall
cltd
jmp
insl
aam
dec
adc
leave
add
mov
test
leave
dec
add
push
mov
jbe
mov
out
push
mov
mov
xchg
push
push
rcll
jecxz
push
lret
dec
pop
dec
cli
inc
rcrb
sub
and
loopne
or
push
inc
xchg
js
cmp
mov
cld
push
ja
out
pop
push
std
fstps
lcall
repz
sub
push
mov
lret
jno
xor
lret
xor
aaa
mov
push
lret
sub
mov
jl
pop
shrd
cwtl
nop
push
inc
out
mov
push
repnz
test
test
dec
inc
cmp
fs
mov
aam
fwait
mov
shll
shll
pop
push
push
xchg
inc
daa
pop
xlat
xor
mov
xchg
mov
push
sbb
dec
push
xchg
mov
xchg
les
push
sbb
out
in
dec
int3
popf
push
cmpsb
call
int3
stos
sbb
ljmp
movsl
jne
push
mov
loop
sub
cmp
add
xchg
push
dec
lds
push
mov
cmp
pop
mov
aas
push
pushf
sub
or
in
add
cmp
das
insb
stos
cltd
in
cmp
mov
sub
mov
jmp
xor
adc
cmc
mov
out
iret
lcall
cwtl
hlt
mov
sub
push
sbb
xchg
scas
inc
or
cltd
jo
repz
adc
and
sbb
and
popa
mov
andb
shll
push
pop
ret
test
stos
and
add
test
mov
nop
js
xchg
lock
push
fcom
pop
adc
xchg
cmp
outsl
aad
cwtl
sub
or
out
stc
dec
xchg
sub
sarl
inc
push
clc
ficomps
sti
or
dec
sbb
adc
cmp
sub
pop
cld
jl
inc
addb
scas
or
push
xor
ret
and
jne
loopne
int3
xor
sbb
lcall
je
xchg
jecxz
adc
je
mov
sub
adc
cli
std
jne
leave
xchg
adc
mov
add
mov
iret
test
inc
imul
cmp
incb
das
lahf
ss
mov
sbb
and
neg
sbb
jl
xor
xor
jbe
daa
gs
loope
lds
stos
test
nop
xchg
lcall
xchg
or
mov
dec
xor
and
ljmp
mov
popf
pop
push
pop
pop
add
add
repnz
mov
inc
js
cmp
pop
jne
mov
mov
push
cmpsl
cwtl
xchg
scas
jb
ljmp
inc
mov
fisubrs
pop
insb
sub
pop
fistl
test
or
faddl
adc
sbb
xor
pop
mull
push
pop
or
jae
push
mov
mov
sbbl
lods
iret
cli
outsl
mull
rclb
addr16
mov
movsb
repz
or
sahf
mov
dec
push
divb
js
and
gs
sbb
mov
clc
xor
out
testb
shrl
or
popa
into
cmc
aad
add
test
cmp
int
mov
or
jo
subl
stos
mov
fmulp
pop
jmp
cmp
xchg
cmp
add
xchg
shrl
jo
addl
adc
imul
xchg
mov
loope
xor
test
enter
push
push
adc
mov
data16
xchg
dec
or
lock
add
outsb
in
aas
arpl
clc
ss
cmpsl
mov
and
push
dec
cmp
cmp
jo
xchg
repz
sub
cmpsl
jge
int
xchg
inc
or
fwait
adc
or
mov
push
adc
mov
clc
adc
imulb
fnstcw
xchg
mov
push
jmp
jbe
stos
bound
fwait
cmpsl
subb
sbbb
or
aam
in
std
outsl
mov
dec
fwait
dec
stos
in
jnp
int
das
stos
push
daa
pop
fistps
push
imul
cmp
std
test
out
out
cmpsl
push
ret
fs
outsb
or
orb
sbb
shll
xchg
push
dec
into
bound
mov
lods
sub
adc
daa
fildll
popa
jae
dec
mov
dec
dec
or
mov
cmpb
xor
dec
xor
xchg
pop
in
cmp
inc
sub
popa
jne
bnd
aad
divb
lcall
mov
into
xchg
or
mov
mov
fists
lods
fstpt
xor
cmp
int
xchg
sbb
sub
in
hlt
into
out
cmc
mov
and
insl
jle
jmp
mov
call
pushf
daa
mov
sub
pop
aaa
sbb
adc
xchg
xor
mov
and
ss
mov
xor
jnp
push
mov
jne
imul
xlat
fwait
cwtl
pop
mov
add
mov
jae
or
sub
sbbb
sub
jmp
bound
cmp
adcl
push
test
and
mov
add
js
dec
adc
je
add
aam
sub
pop
mov
lret
cltd
xchg
popa
mov
push
lea
repnz
mov
stos
jnp
cwtl
pop
das
movsb
mov
js
and
push
inc
push
fcmovb
or
scas
int
push
out
cmp
mov
sub
scas
into
push
xchg
movsl
dec
ljmp
xchg
xchg
inc
arpl
and
jg
in
mov
mov
jb
or
dec
mov
loopne
int3
addr16
sub
mov
in
mov
cmp
cmp
dec
popa
and
push
push
xchg
mov
or
cli
fnstcw
int3
sub
mov
out
mov
enter
fs
das
dec
and
test
pop
pop
xor
lret
push
testl
pop
inc
pop
cmpsb
mov
sbb
mov
ret
jne
xchg
sbb
inc
mov
push
insw
sbb
and
popa
mov
shl
ljmp
mov
jbe
and
jb
bound
pop
mov
xchg
subb
mov
dec
xchg
scas
aam
inc
mov
dec
nop
aam
mov
jge
xchg
mov
stos
out
mov
pusha
cmp
jno
aas
mov
push
add
into
lods
cmpsb
mov
and
mov
mov
jae
jmp
fcoms
mov
xorb
or
adcb
push
iret
inc
pop
xchg
cmp
cmp
sbb
ds
enter
add
stos
aam
mov
scas
addl
or
sbb
mov
inc
xlat
pop
and
lds
push
shr
aad
dec
xchg
rcrl
mov
dec
jns
mov
cmp
or
mov
ficoml
pushf
jle
js
fmul
mov
xchg
insl
cmp
and
mov
fcoms
xchg
push
and
jle
sarb
sub
pusha
das
int3
pop
loope
ja
cmp
push
cli
xor
int
fdivrp
push
repz
or
insl
dec
jmp
popa
sub
fwait
fs
jge
int3
push
scas
and
push
in
push
push
inc
xchg
negb
xchg
mov
sbb
push
push
mov
in
push
daa
js
hlt
add
out
pop
mov
aad
pop
cmpsb
arpl
fwait
sbb
aam
adc
shlb
inc
leave
in
cmp
or
sub
push
add
aaa
jge
stos
fidivrl
adc
loop
lea
pop
xor
pop
jns
pop
insl
xlat
mov
out
mov
loope
test
cmp
in
aam
clc
mov
xchg
jmp
in
lcall
mov
fsubrs
outsl
fistl
rcrb
mov
out
in
repnz
or
cltd
sub
in
xchg
fcoml
mov
loop
pop
cmp
or
hlt
sub
xchg
push
fwait
sti
dec
jp
aaa
ret
xor
das
jl
add
mov
or
dec
hlt
fwait
push
mov
popl
out
fsubrl
pop
repnz
cli
jo
mov
aad
sbb
sti
cltd
xor
mov
das
xchg
movsl
or
xor
pusha
jbe
stc
out
xor
loop
lock
std
or
cltd
insb
loop
cwtl
sub
sti
push
cmp
sub
mov
call
int
into
ficoml
jae
or
ljmp
test
fldcw
test
sub
fstpt
stos
adc
popf
stos
xor
mov
mov
pop
sub
aam
jecxz
into
shlb
mov
sbb
int
sbb
cmp
sub
sub
test
int
ljmp
sub
xchg
sbb
mov
es
sub
in
in
insb
add
pop
insb
lret
inc
loope
dec
outsb
ljmp
mov
cmp
sub
adc
jo
pop
xchg
cmp
orl
mov
iret
adc
add
pop
jecxz
sub
xchg
mov
jge
aad
popa
mov
dec
fs
sarl
and
add
pop
inc
mov
jl
xor
adc
repnz
clc
jmp
push
sub
ret
sbb
loopne
loop
xor
dec
sbb
xor
aam
inc
in
insb
fdivrl
sub
or
dec
in
mov
es
cmp
popf
jns
outsl
mov
inc
adc
cmp
and
mov
push
sub
cmp
repz
aaa
xor
fildll
cmp
adc
and
cmpsb
sub
adc
xchg
lret
pop
sarb
rolb
lret
jle
sbb
cmp
stc
pop
sub
or
inc
out
push
in
xor
rcrb
pop
jno
ret
popf
loopne
lods
push
mov
fdiv
out
in
loopne
outsb
dec
inc
and
movsb
ljmp
adc
lret
fcoml
mov
gs
adc
jns
je
add
loop
mov
sub
nop
sub
push
or
mov
push
lcall
xor
inc
mov
arpl
cs
mov
lock
mov
jns
scas
push
inc
cmpsl
dec
sub
pop
and
loopne
xchg
popf
mov
inc
fwait
int
mov
imul
sbb
pop
dec
mov
cmp
loopne
pop
cmp
jnp
arpl
mov
int
pushf
jb
xchg
lahf
mov
xlat
in
inc
adc
mov
mov
or
cmc
mov
pop
jnp
sbb
es
scas
mov
jbe
jg
loope
mov
xchg
addr16
ss
push
jne
inc
pop
lcall
sbb
pushf
insl
jnp
mov
inc
push
sbb
dec
mov
fcmovnbe
mov
dec
mov
jl
pop
pop
xor
fs
cmp
test
cwtl
loop
xchg
lret
jg
xlat
adc
cmp
dec
inc
test
in
test
insb
shll
je
int
testl
rol
jbe
stos
fldlg2
insb
dec
jae
jno
sub
sub
mov
cmp
fmull
mov
or
loopne
push
jae
fsubs
mov
cmp
jae
jno
sbb
mov
jl
out
lcall
loopne
shrl
pop
adc
jge
xchg
hlt
push
cmp
in
stc
sub
mov
jg
xor
or
pop
adc
mov
pusha
inc
or
push
test
lcall
pop
inc
je
addr16
arpl
mov
cltd
mov
pop
add
es
pop
pop
aam
pop
inc
xchg
int3
iret
push
test
adc
stos
jo
mov
sub
sti
jno
jb
shl
sbb
out
loop
fstps
fildll
nop
test
adc
mov
repz
in
push
inc
push
jbe
lret
cmp
clc
pop
mov
add
mov
push
push
add
cmp
stc
mov
lret
adc
push
stos
imul
cmp
fs
int
fisttpl
inc
adc
nop
sbb
xchg
cmpsb
scas
mov
push
int3
in
sbb
loop
and
mov
and
push
xor
jo
pop
mov
and
aad
in
ret
imul
push
and
fs
sub
insl
pop
leave
test
mov
pusha
inc
inc
jb
adc
loope
adc
fiaddl
cmp
jbe
sub
xlat
loope
lcall
or
jo
jae
sbb
xor
or
jg
test
test
sbb
mov
cmp
jl
pop
mov
sbb
pop
mov
icebp
js
sahf
or
or
mov
test
popa
into
ret
cmp
or
dec
outsl
lea
imul
or
mov
pop
or
movsl
mov
das
fnstcw
outsb
mov
add
add
push
dec
ja
decl
mov
xchg
in
imul
or
addb
aas
fsub
jo
add
dec
pop
scas
aas
fsubs
lahf
fadd
negb
sahf
in
push
fwait
lret
inc
outsb
cwtl
pop
pop
pushf
mov
fisubrl
frstor
dec
out
jne
aad
bound
cmp
rcll
enter
lcall
dec
sarl
out
xor
jle
cmc
enter
lods
cmc
leave
jnp
jne
test
cmp
or
test
jp
sbb
add
icebp
cmpsb
bswap
iret
xor
adc
mov
leave
add
in
cli
ljmp
and
mov
adc
mov
sub
and
fwait
adc
mov
nop
adc
fsubs
and
outsl
mov
aam
adc
shlb
push
arpl
jge
ss
add
andl
ds
and
int
ljmp
ja
cmp
ret
mov
jg
insl
jl
xchg
scas
mov
shlb
push
iret
add
cli
add
cmc
lods
out
fisubs
popf
lret
pop
xor
xor
out
daa
nop
mov
jno
ret
arpl
insl
jl
in
pop
cmpsl
xchg
dec
jmp
cs
pop
test
mov
out
lahf
adc
xchg
enter
adc
or
pusha
cmc
mov
xor
adc
scas
pop
fwait
hlt
and
inc
pop
add
add
mov
mov
subl
mov
int
scas
sbb
shll
ljmp
fwait
in
lcall
fldz
mov
push
jo
lcall
and
in
push
xchg
ljmp
pop
push
fcomps
enter
cs
sub
imulb
dec
dec
outsb
pop
fsubrs
xor
cmc
push
sub
jne
xor
lock
mov
mov
cmc
dec
ret
testb
rorb
xchg
cmpsb
cmp
fldcw
mov
test
sub
xchg
or
mov
je
adc
les
test
jp
pop
or
cwtl
mov
jge
sbb
add
outsb
inc
push
gs
pushf
dec
cli
mov
loope
jne
add
imul
mov
add
xor
rcr
fs
add
dec
xchg
neg
cmc
dec
dec
push
jle
dec
sbb
jecxz
mov
xchg
and
push
sbb
stc
fadd
sbb
lods
push
popf
cwtl
stos
push
shl
int3
lahf
push
loop
cld
lods
insb
addr16
push
adc
je
add
sub
ficoml
push
ds
test
push
sbb
add
test
je,pn
lods
mov
xchg
mov
jp
sub
stos
repnz
xor
imul
imul
mov
aad
andb
call
fiadds
int
mov
jmp
fdivrs
sbb
sarl
xchg
rcr
adc
jo
push
push
mov
in
test
jae
mov
jbe
and
jo
imul
jmp
out
mov
and
in
cmc
mov
aam
cmp
sbbb
sub
js
idivl
sbb
cmp
lods
sbbb
cli
loope
xor
cs
xchg
call
hlt
popf
dec
cmp
dec
les
jecxz
push
fnstenv
cmp
cmp
mov
add
or
iret
inc
pop
mov
lods
inc
xchg
cmpsl
repz
loop
stc
roll
rcrb
insb
or
in
mov
call
pop
mov
dec
and
xlat
xor
neg
test
decb
or
mov
fldenv
movsb
push
jge
imul
pop
pop
aas
fsubrl
xor
sbb
int3
cmp
add
incl
pop
mov
adc
push
push
jbe
sbb
pop
test
jb
jo
xchg
cmp
idivb
dec
mov
mov
popf
les
int3
repnz
das
add
push
mov
jns
adc
popa
push
imul
cmp
orl
orl
mov
fisttpll
push
lods
insl
xorl
shll
mov
clc
mov
cwtl
and
aaa
insb
xchg
add
xorb
sub
data16
insb
popf
push
inc
pop
nop
or
adc
call
ret
jecxz
and
bound
imul
clc
shll
add
and
add
pushf
inc
mov
cs
lds
xchg
stos
clc
movsl
sbb
ret
xchg
adc
pushf
mov
mov
bound
std
xchg
sub
xor
stos
js
mov
filds
bound
xor
pop
cmp
add
es
adc
fldenv
movsl
fcomps
xchg
mov
fdivrs
fucomp
insl
xchg
jb
sbb
inc
fstpl
adc
jmp
pop
and
test
xor
mov
push
xor
adc
gs
jge
and
xchg
aaa
mov
stc
imul
ret
mov
repnz
mov
sbb
jl
jbe
icebp
data16
xchg
add
xchg
inc
orb
pop
cmpsl
lods
aad
sbb
xor
popf
ds
outsb
scas
ret
pop
aam
icebp
jecxz
or
loop
jl
or
repnz
pop
std
xor
push
rcrl
dec
dec
les
xchg
sub
fwait
hlt
lods
sub
arpl
lock
repnz
aaa
cmp
pusha
rclb
ret
jo
sbb
mov
inc
outsl
lret
data16
ss
sbb
fistps
inc
jae
jge
scas
xchg
ret
xchg
jns
rcrb
xchg
js
jb
movsb
test
out
xchg
mov
cmp
jne
rcr
sbb
je
fwait
mov
sbb
daa
andl
sub
push
jg
add
xor
xchg
cmpb
cs
adc
test
push
dec
repz
xchg
add
stos
pop
movsl
jnp
mov
popa
nop
das
fs
mov
dec
hlt
xor
ret
mov
cmp
daa
dec
jmp
pop
mov
cs
sub
push
adc
mov
xchg
mov
xchg
add
mov
rcrb
mov
add
add
push
xor
inc
and
subl
gs
and
adc
insl
adc
adc
sbb
cmp
decb
addb
push
repz
cli
jbe
pop
dec
in
jae
or
std
cmp
dec
jge
mov
cli
rcl
push
out
xchg
aad
jbe
je
aam
das
pop
in
sub
jmp
adcl
ficoms
add
cmp
inc
addr16
or
icebp
jmp
or
insl
sub
imul
fdivp
arpl
xchg
iret
std
iret
repz
mov
fstp
repz
arpl
lods
jg
jmp
test
dec
sbb
sub
pop
shlb
push
sti
jns
xchg
pusha
ja
rcll
mov
pop
cmpsl
jge
movsb
sbb
sbb
cmp
insb
add
rol
jg
out
test
lea
fldenv
dec
rcrl
xchg
iret
dec
jp
and
lods
mov
mov
add
out
fimull
pop
fistl
xor
mov
stos
push
ljmp
sbb
cwtl
jge
xlat
in
outsl
push
in
xlat
sbb
cmpsb
cmpsl
pushf
cwtl
ja
test
adc
adc
push
cmp
sub
adc
loop
xchg
inc
loope
shlb
mov
mov
push
jg
xchg
jmp
pop
sbb
xlat
jmp
xchg
pusha
mov
jnp
dec
out
aaa
cld
je
test
imul
outsb
sti
pop
jmp
adc
fnstcw
rcr
jl
hlt
mov
mov
shrl
push
sbb
push
sbb
cwtl
or
push
pop
xorb
jno
mov
adc
pop
jl
jns
arpl
aaa
ds
popa
xchg
rcr
add
push
push
nop
xor
push
cmp
push
dec
mov
inc
lods
loope
or
push
cwtl
hlt
in
mov
dec
pop
jle
xchg
fmul
mov
popf
rcrl
mov
in
xchg
pop
inc
pop
lret
adc
jnp
xorb
inc
xchg
sub
adc
shrb
icebp
push
idivb
stos
mov
fnstcw
ljmp
out
test
dec
sub
jg
data16
ja
jnp
xchg
ret
push
roll
aad
dec
icebp
push
aas
sbb
and
cmp
pop
ret
dec
scas
inc
rcrb
das
dec
out
pop
out
loopne
lock
push
mov
sub
cwtl
cwtl
call
out
push
sbb
push
jo
mov
jmp
dec
cmp
shll
mulb
sbb
mov
movsl
aad
or
and
lods
mov
in
out
imul
repz
stc
test
jae
xorb
xchg
arpl
je
loope
lods
outsl
jae
mov
popf
fwait
or
bound
xor
or
dec
adc
daa
or
in
cmp
add
xchg
pop
mov
dec
and
into
out
xchg
mov
add
fcompl
cmp
or
adc
sub
xchg
pop
loope
add
push
sar
dec
adc
add
test
insb
and
mov
out
mov
ret
jb
add
lret
je
jg
cmpsb
adc
xchg
adc
jo
mov
push
fldt
js
xchg
cmp
and
pop
xchg
mov
push
test
cmp
adc
xor
insl
test
stos
lods
xchg
stc
mov
add
lds
cli
outsb
imul
int
mov
cmp
pop
mov
in
cmp
pop
pusha
mov
in
out
inc
test
lods
xor
mov
lcall
inc
add
sahf
adc
ljmp
push
mov
push
lret
add
incl
xor
pop
or
push
stos
inc
xchg
out
dec
inc
lock
inc
aas
lock
xchg
hlt
sahf
mov
mov
or
inc
mov
rolb
leave
cmp
addl
fadds
insb
dec
lods
and
fstpt
outsl
lock
pop
jb
packssdw
test
sbb
stos
imul
mov
push
orl
and
xchg
out
sbb
sub
xor
mov
add
pushf
inc
bound
xchg
push
xor
or
imul
fisttps
add
mov
mov
xchg
mov
scas
rclb
mov
sbb
adc
xchg
inc
clc
lahf
pop
orl
fcoml
rorb
xor
jge
inc
outsl
dec
jecxz
sbb
dec
loopne
arpl
cmp
pop
mov
xor
mov
mov
sub
mov
ret
push
dec
stc
jmp
cltd
sbb
fdecstp
pop
xchg
push
ss
jecxz
adc
in
cmp
mov
mov
fbld
frstor
call
and
out
ret
scas
mov
nop
xor
mov
je
shlb
std
push
cmp
or
xlat
mov
mov
sub
xchg
cmp
xchg
mov
frstor
jns
mov
imul
stc
les
pop
test
cmc
pop
mov
lods
adc
dec
sbb
jbe
sbb
test
dec
ret
sti
in
mov
sti
adc
xchg
out
jecxz
xchg
xchg
xor
cs
popf
jne
inc
in
cld
nop
adc
es
inc
psubw
cmp
shr
sub
mov
push
xchg
mov
insb
sbb
sub
shlb
xchg
daa
stos
test
imul
cmp
xchg
add
test
pop
mov
push
outsl
movb
das
test
dec
frstor
mov
mov
xchg
dec
sub
outsl
popf
dec
fldcw
insb
outsb
adc
adc
bound
or
jl
ljmp
addl
inc
fprem1
xlat
pop
or
out
aad
test
jae
or
or
call
sbb
push
jo
inc
push
outsb
push
popf
test
xchg
pop
ret
movsb
bound
mov
mov
fdivs
xor
arpl
jmp
mov
in
pop
jns
pusha
roll
mov
iret
sub
push
cmp
ds
pop
outsb
pop
pop
out
mov
int
sub
pushf
and
jl
fucom
pop
out
iret
pop
aam
insb
sar
mov
mov
add
push
int
div
push
cs
sbb
mov
cmc
loope
aad
cltd
decb
lods
lds
imul
shrb
or
mov
js
lods
cwtl
hlt
jle
xlat
jns
jg
pop
stc
push
subl
xchg
adc
xlat
call
jg
jg
mov
lods
mov
inc
dec
sub
xchg
add
or
aad
rcrl
mov
xor
push
out
xor
lea
enter
popl
std
test
decl
ja
cmpsl
sub
or
out
mov
roll
in
out
fwait
aas
jecxz
mov
adc
sti
adc
sub
xchg
stc
sbb
fs
or
enter
pusha
xchg
pop
cs
imul
scas
adcl
push
movsb
cmpsb
jg
pop
pop
add
sbb
mov
sbb
add
lahf
lcall
adc
fldl
sbb
xlat
cmp
loope
pop
xorb
dec
adc
mov
xor
testb
inc
or
sub
pop
out
xchg
mov
adc
sbb
sbb
mov
pushf
mov
mov
cmp
pop
es
pusha
test
iret
out
aas
cmp
ret
cmc
imul
outsl
orb
stos
fidivs
incb
or
cltd
and
xchg
and
outsb
mov
jbe
out
inc
insl
loop
xchg
xchg
loope,pt
cltd
out
fiaddl
mov
pusha
rclb
sbb
repnz
out
cmpsb
xor
sbb
ret
cwtl
lahf
fmul
rcll
stc
stc
sbbb
add
jmp
pop
add
jge
in
mov
pop
shll
fsubrl
sti
hlt
call
sub
ss
testb
popa
mov
je
dec
nop
out
clc
dec
mov
repnz
inc
aad
sbb
sub
mov
or
jne
nop
fistpl
fisubrl
or
pop
mov
sub
pop
roll
xor
shll
shll
idivl
push
inc
or
pop
or
int3
xor
leave
mov
jno
std
out
xchg
inc
dec
scas
adc
mov
dec
add
cmp
mov
jecxz
popa
out
icebp
insl
xchg
loop
flds
arpl
mov
xadd
dec
mov
jp
mov
shl
pop
int3
pop
mov
or
adc
mov
and
inc
jecxz
push
push
cmp
test
or
shl
mov
dec
cltd
inc
loopne
or
adc
test
mov
in
cltd
adc
ja
imul
xchg
les
and
mov
sbb
inc
jge
sub
inc
shr
push
cltd
divl
inc
xchg
dec
lret
dec
pcmpeqw
int3
adc
xchg
or
pop
imul
xlat
jae
dec
ss
sbb
sahf
add
xchg
ficoml
jle
mov
jmp
hlt
inc
pop
inc
mov
int
adc
jbe
push
mov
daa
fisubrs
mov
adc
stc
mov
adc
dec
test
push
shufps
push
jno
leave
mov
jmp
push
cli
xchg
or
ljmp
sub
xor
sbb
aam
out
std
adc
in
push
inc
xchg
popa
xor
pop
pop
mov
cmpsl
cmp
repz
dec
mov
mov
in
cltd
rorl
sbb
push
jge
mov
negl
and
mov
popl
jns
lcall
ljmp
mov
stos
jb
loop
inc
pop
icebp
fsubl
fimuls
lods
cwtl
and
jmp
into
and
jmp
mov
loope
and
lds
out
gs
add
push
nop
xchg
cmc
cmp
clc
lahf
ss
pop
gs
mov
mov
inc
pop
inc
testl
lahf
jae
cmp
jae
pop
das
aad
test
jmp
call
loopne
inc
jb
cmp
mov
mov
mov
sbb
fimull
xor
test
cmp
and
mov
sub
iret
mov
inc
ljmp
mov
xchg
repz
xchg
or
loop
popf
and
addl
faddl
scas
inc
sbb
xor
hlt
fimull
xor
int
or
addr16
rorl
inc
pop
mov
xchg
inc
jmp
add
sbb
in
shll
dec
imul
andl
int3
sbb
mov
push
cmp
cwtl
sbbb
ficomps
jle
xor
sbb
and
sub
adc
fists
xchg
loopne
jnp
push
aaa
lcall
es
mov
xchg
mov
daa
imul
xor
inc
dec
and
pop
mov
fnsave
add
xchg
loop
sub
imulb
sub
add
test
mov
cli
jbe
dec
push
mov
pop
cmp
sub
neg
icebp
int3
loop
mov
dec
xchg
cmp
and
pop
xchg
lahf
mov
or
sbb
cmpl
mov
jecxz
xchg
test
push
out
scas
sbb
jge
ljmp
je
add
int3
pushf
mov
push
loopne
cmpsl
sub
xor
dec
sarb
in
bound
icebp
popa
outsb
dec
rorl
das
jp
sarb
push
cmp
loop
xor
cwtl
cmpsb
lods
rcr
cmp
popf
mov
pop
outsl
push
cmp
xor
test
inc
dec
or
xchg
mov
sarl
shlb
in
gs
insb
push
in
xchg
stos
lret
outsl
repz
xchg
out
pop
mov
ja
mov
cmc
repz
push
inc
or
xor
sbb
fstpl
lds
mov
test
nop
xchg
mov
sbb
mov
push
xchg
lahf
dec
jns
or
js
jl
jle
sbb
addl
adc
sbb
out
inc
dec
push
push
cmp
lea
mov
repnz
mov
cld
subb
cmc
jns
sub
sub
ret
fistl
stos
mov
bound
out
xchg
pop
jg
in
inc
inc
pop
daa
sbb
daa
movsb
clc
aas
cmpsl
leave
mov
sub
jns
cld
aas
fsubrs
leave
lcall
pop
aaa
push
xor
push
mov
mov
add
and
jmp
add
push
and
push
sahf
leave
mov
cmp
jno
das
popf
stc
dec
fadd
lds
pop
fisubs
mov
mov
inc
xchg
mov
xor
mov
popa
push
lret
mov
stos
mov
mov
fwait
mov
imul
test
pop
cmp
aas
fidivrl
clc
xchg
push
std
sbb
test
dec
and
push
lret
ficoms
out
jae
add
push
sub
call
scas
stos
jne
hlt
push
sub
adc
sbb
mov
pop
xor
mov
sahf
push
cmp
jmp
inc
popf
push
and
add
inc
xchg
jne
cmc
ret
mov
sub
cld
pop
sti
jle
into
jnp
mov
inc
mov
push
imul
int3
je
fwait
cmpsb
arpl
clc
or
mov
sbb
sahf
into
shrb
jne
add
cld
out
fldl
xor
mov
jge
sub
push
subl
nop
jmp
aaa
adc
shrb
lea
jmp
jbe
int3
push
jbe
mov
int3
and
call
inc
bound
mov
jg
pop
add
jnp
push
in
xchg
sbb
das
xchg
push
sbb
sbb
dec
inc
sub
dec
rcrl
jae
and
dec
cmpsb
mov
xor
imul
lahf
out
pusha
stos
rclb
and
lret
push
pop
cmp
ljmp
movl
popf
pop
outsb
ret
std
cmp
vmovss
adc
pop
sub
int
repz
stos
or
add
cld
jl
mov
scas
mov
xchg
in
ja
add
rcrb
cld
jbe
fisubl
push
ljmp
mov
nop
daa
mov
shrb
adc
push
dec
jge
pop
int3
cmpsl
pop
or
aam
mov
adc
pop
dec
cmpsl
andl
xor
xorl
xchg
push
fsubp
test
jmp
push
xchg
iret
pop
fsubrs
shll
je
cmp
mov
xchg
cmp
ret
cmp
shrb
jg
mov
pop
fiaddl
inc
imul
cmpsl
pop
push
add
push
leave
test
mov
mov
jns
jb
adcl
mov
mov
int
inc
dec
and
push
pop
sub
nop
sub
mov
mov
sahf
cmpsb
hlt
cmpsb
inc
sahf
jnp
jo
pushf
adc
imul
insl
ret
cltd
mov
out
loop
sbb
mov
adc
sub
stc
sar
sbb
scas
jo
push
adc
or
icebp
outsl
rcrb
nop
sub
push
call
and
outsl
jmp
inc
jle
lcall
inc
sub
call
pop
nop
cmp
jle
push
lahf
adc
in
sbb
push
andl
mov
mov
bswap
mov
cld
loope
cmp
imul
lcall
or
mov
xorl
xchg
push
gs
fiadds
push
stc
scas
int
cmp
mov
sub
loope
bound
dec
push
cmp
jb
in
lds
jno
inc
cltd
push
cs
pop
scas
cmp
pop
cmp
mov
mov
ja
dec
sub
inc
fsubs
mov
or
jge
or
insl
ss
add
mov
fcomi
loopne
cld
mov
xchg
loop
stc
xor
sbb
in
in
dec
mov
cwtl
loop
loop
cmp
jbe
jge
lods
or
xchg
pop
mov
mov
rcrl
in
leave
daa
jle
pusha
mov
fistl
dec
daa
es
pop
fwait
push
int3
xor
aad
cmp
pop
sub
and
push
sti
cli
sub
sahf
cmp
les
nop
adc
push
push
mov
pusha
cmp
jmp
jne
sub
push
pop
dec
xchg
xchg
andl
daa
jb
es
push
add
or
sbb
mov
out
push
mov
mov
jne
mov
mov
jno
inc
sbb
push
pop
shl
adc
test
insl
out
and
dec
or
int
mov
outsb
movsl
lods
inc
fldenv
clc
push
push
mov
adc
jne
sub
dec
xchg
mov
stos
mov
fsub
gs
jmp
repz
test
adc
insl
sub
xor
add
lcall
xor
popf
xor
push
or
sub
sub
orl
les
sub
adc
cmpsb
jo
adc
jg
push
push
adc
jp
shlb
pop
xchg
negb
push
lods
leave
call
pushf
pop
ss
movsl
loop
sub
or
sti
popf
lock
cmp
push
std
daa
pop
jl
inc
addl
push
cmp
sub
movsb
push
ret
ljmp
mov
push
test
mov
dec
mov
mov
pusha
ret
sbb
pop
dec
fwait
mov
jnp
aam
xchg
popa
xor
ljmp
fldt
ds
rorb
lds
in
sti
in
in
decb
adc
mov
fcmovu
mov
mov
in
call
mov
outsl
fst
adc
mov
sbb
out
push
outsb
dec
cli
xchg
in
cli
mov
push
iret
imul
jb
adcb
pop
pop
in
cmpsb
jge
cli
or
push
jnp
sub
mov
inc
add
mov
mov
pusha
add
pushf
xor
enter
mov
push
or
dec
cli
mov
fwait
rolb
test
xor
outsb
fsubrs
loope
adc
pop
adc
sarb
inc
xadd
lock
arpl
xor
or
fdivrs
jg
mov
lea
jmp
mov
sbb
test
es
jg
outsl
and
fisttps
adc
sbb
adc
cmc
dec
test
jmp
dec
mov
push
dec
add
repnz
aam
jg
mov
or
add
ja
gs
cmp
dec
and
push
mov
aaa
test
push
adc
fildl
stos
xor
ja
sbb
cmp
cmc
cmp
adc
cmp
ret
gs
sbb
mov
inc
aam
jmp
bnd
jbe
push
jno
sub
sbb
push
mov
jnp
add
push
sub
sub
cld
sti
lods
add
jo
inc
std
loop
sub
add
cli
pop
dec
roll
dec
repz
mov
lret
pop
shrl
xor
out
fisttps
push
or
or
fadd
gs
push
dec
jg
dec
movsb
test
inc
fs
stos
inc
shll
add
pop
lret
sahf
test
cld
add
lret
insb
sbb
mov
cmp
rorl
jae
bswap
pop
or
adc
rclb
and
cmp
lea
test
enter
sarl
jge
icebp
lcall
fistps
outsl
adc
sub
and
mov
mov
xchg
out
into
nop
movsb
movsl
scas
aas
inc
xor
sbb
adc
shlb
or
inc
js
out
or
fwait
out
jne
dec
mov
icebp
cmp
push
cmp
cmp
andl
or
js
pop
push
data16
loope
dec
xchg
cs
rol
sbb
test
lret
xor
cs
pushf
xchg
add
rorb
cmc
shr
sbb
lret
int3
pop
sbb
cli
data16
dec
or
pusha
lods
lahf
lods
outsl
bound
push
dec
frstor
sbb
lods
call
in
lock
outsl
mov
xchg
cli
mov
cs
and
daa
stos
int3
mov
mov
add
rolb
pop
inc
cmpsb
push
movsb
inc
ja
push
mov
stos
outsl
add
pop
pop
add
stos
cmpsl
std
xchg
fstps
rorb
mov
cli
push
loopne
rol
mov
sarb
nop
inc
mov
pop
fcomi
fmull
aam
push
popf
mov
loopne
mov
mov
sub
mov
pop
bound
jns
insl
fadds
sbb
outsl
push
jecxz
fstps
pop
xor
pop
movl
jp
mov
xlat
push
fcompl
push
adc
sbb
fs
in
data16
mov
jbe
int3
adc
fstp
dec
adc
lock
out
xlat
fsubrl
fcomps
mov
test
loope
fildll
push
imul
or
lcall
adc
fistpl
mov
mov
ss
push
mov
clc
sbb
xchg
and
push
ja
shll
adc
dec
cmpl
std
hlt
fisubs
pop
add
cli
test
inc
xor
adc
xor
sub
gs
cmp
out
pushf
sub
arpl
cmp
leave
jecxz
enter
and
out
addr16
xchg
mov
dec
xchg
fwait
scas
aas
outsb
mov
data16
test
add
out
cltd
cmp
or
mov
mov
stos
cmp
pop
mov
insl
xchg
pop
mov
subb
arpl
bound
ja
fs
pop
ja
adc
loop
mov
inc
aas
adc
inc
inc
mov
mov
fdivr
lock
out
movsl
dec
js
test
rorb
movsb
mov
jno
in
jmp
repz
mov
push
out
pop
jbe
push
mov
fisttpl
addl
inc
popa
out
xchg
loopne
xlat
inc
dec
aad
dec
jp
mov
mov
aaa
test
rorb
ja
and
loope
icebp
scas
mov
jmp
out
jo
mul
leave
scas
adc
imul
sbb
fsubl
and
sub
addr16
mov
mov
fisubl
sarl
cs
fwait
negl
jge
dec
mov
fs
sub
mov
xor
push
pop
mov
xchg
lds
sbbb
dec
jne
outsl
cld
mov
inc
inc
pop
lcall
jg
xchg
stos
xor
fidivrl
fistps
out
mov
mov
sbb
sub
daa
movsb
cmp
fiaddl
lret
es
leave
cmp
leave
jge
fldt
popa
mov
jmp
mov
jge
inc
sub
and
std
lea
pop
push
adc
jae
mov
xchg
mov
fstpt
mov
push
cli
or
aad
push
scas
mov
out
test
cmp
nop
jnp
fbstp
add
nop
push
js
push
xchg
xor
pop
hlt
aam
push
pop
or
jp
clc
in
fisubrl
int3
adc
sub
cmp
or
int
adc
fwait
mov
iret
loope,pn
fistps
daa
mov
mov
in
pop
rcrb
jae
xor
pushf
aaa
inc
ja
add
add
outsb
ja
popf
notl
fldenv
ljmp
es
jbe
adc
rep
xor
arpl
mov
cmp
mov
sub
sti
hlt
mov
add
or
or
xor
mov
daa
adc
adc
jmp
popa
cli
add
push
xchg
dec
dec
fimuls
sarb
shlb
cmc
mov
lods
stos
cltd
sub
push
nop
pop
sbb
jno
loope
dec
mov
es
in
mov
sbb
mov
cmp
test
out
push
sub
xchg
mov
push
sub
adc
jge
sti
push
call
je
or
gs
jge
xchg
testb
xchg
stos
push
push
scas
push
xchg
and
inc
fistpl
in
sbb
adc
lods
xor
ficomps
mov
cwtl
nop
mov
push
jbe
leave
sub
lret
cwtl
out
repnz
fsubrs
mov
xchg
xor
cmc
pop
add
test
aas
outsl
and
insl
sbb
or
lea
ljmp
jnp
rorb
std
in
ljmp
and
push
andl
lods
xchg
gs
jle
sub
ss
add
je
jo
call
cmp
aas
lods
shlb
add
aas
and
ss
arpl
jb
and
arpl
cltd
mov
inc
lds
and
push
jo
and
inc
scas
js
jp
sub
jno
stos
mov
or
push
fisttpll
dec
inc
sub
sahf
jns
int3
es
aas
gs
jns
and
mov
inc
sahf
loop
mov
stos
add
arpl
push
mov
lahf
into
popa
insl
pop
outsb
xlat
xor
cmp
push
inc
mov
scas
jbe
xchg
ja
movsb
insb
rcl
pop
dec
cmp
inc
and
dec
ss
mov
xor
cmp
pusha
pop
cmp
and
call
mov
pop
je
pop
jl
inc
gs
hlt
mov
loope
pop
fadd
jno
xchg
gs
aam
mov
push
dec
push
out
repnz
jge
inc
insb
push
ret
xchg
arpl
shll
inc
push
shll
dec
test
fldenv
inc
inc
dec
jmp
dec
jo
xor
into
mov
or
imul
jp
sbb
jnp
and
pusha
cmpsb
jno
cmp
sbb
cmp
scas
loop
or
cmp
pushf
daa
mov
loop
inc
push
call
int
dec
je
adcl
dec
lcall
int3
inc
cmp
jge
loopne
call
xorb
js
pop
lds
dec
mov
insb
mov
adc
mov
pop
cmp
and
shll
divl
es
mov
sub
mov
shll
push
sub
xor
pop
xchg
mov
cmpsl
shr
mov
jbe
pop
adc
imul
mov
adc
mov
add
or
inc
jge
sbb
sahf
push
pusha
test
jg
scas
shrl
mov
lret
or
mov
cmp
mov
pop
and
jge
sarb
arpl
imull
inc
adc
mov
push
mov
out
add
aas
mov
repnz
lcall
cmp
stos
xor
sub
sbb
mov
ror
fstpt
stos
jmp
jbe
sub
xchg
lcall
pop
fbstp
addr16
mov
add
mov
in
int
inc
xchg
mov
movsl
dec
loope
out
or
mov
das
jno
faddp
sbb
sub
out
loopne
mov
addr16
cld
mov
adc
mov
adc
mov
in
inc
and
pop
sub
repnz
pop
sbb
in
leave
iret
jle
inc
rcrl
loopne
inc
adc
lahf
rorl
mov
dec
imul
test
sub
pop
mov
sbbl
aas
xchg
test
call
rcrb
xor
inc
pop
sbb
mov
inc
cmp
push
bound
clc
pop
popa
outsb
cld
mov
dec
mov
int3
in
inc
and
mov
fldl
lods
das
push
inc
inc
mov
loope
mov
xchg
push
xor
sbb
adc
es
pop
stc
daa
andl
sbb
or
cmpsb
das
add
fnstenv
lret
mov
jnp
sub
repz
pusha
pop
int3
xchg
pop
mov
pop
pop
mov
inc
arpl
adc
hlt
mov
sub
mov
or
mov
insl
sbb
test
dec
jle
add
movsl
xor
into
sahf
mov
stos
mov
les
lods
int3
or
push
bound
test
add
inc
pop
pop
sub
cld
mov
sahf
popf
int
sub
outsl
jno
xchg
test
or
adcb
pushf
mov
cld
fwait
jl
adc
fs
jbe
push
test
loop
jmp
test
mov
add
in
leave
xlat
sar
lea
and
mov
fs
jge
dec
lahf
push
adc
out
mov
gs
xchg
push
hlt
addr16
flds
ja
fs
mov
mov
add
or
or
pop
mov
jne
adc
sbb
int3
ret
inc
cli
xchg
pop
mov
movsl
xchg
jmp
cwtl
jp
fistl
cmpsb
insl
mov
inc
sub
ret
scas
pop
inc
out
pop
popf
pop
in
aam
cmc
dec
pop
adc
enter
inc
jge
into
jecxz
ret
mov
xor
add
sahf
fmull
std
popf
dec
inc
dec
pop
imul
subl
ret
movsl
call
dec
mov
xchg
cli
mov
push
xchg
insb
ret
cmp
push
cli
jnp
jns
ret
jmp
cmp
mov
xchg
and
and
es
add
jmp
and
sub
sub
ds
xlat
mov
cmc
mov
mov
push
add
in
inc
aaa
rol
int
sbb
in
enter
xor
repz
mov
adc
sbb
scas
inc
lret
pop
iret
cld
cmpsl
pop
or
jmp
pop
fistpll
push
es
movsl
ljmp
xchg
and
jns
lea
loopne
cwtl
mov
mov
filds
adc
test
or
mov
aam
sub
pop
scas
push
xchg
sub
pop
mov
cmpsb
mov
pop
inc
in
leave
popf
sarl
mov
std
or
fcompl
xchg
xchg
sub
sbb
sbb
dec
lahf
inc
ljmp
ret
mov
xchg
xchg
jge
mov
shrl
sbb
scas
popf
sbb
int3
pop
in
pusha
fs
sti
push
bound
es
xchg
jl
pop
ds
fisubs
mov
aad
pop
push
inc
lahf
xor
or
popa
ljmp
sbb
je
push
fcompl
push
mov
cmp
dec
jmp
pop
in
loop
loope
out
into
jne
inc
je
popa
ret
dec
add
movsb
jbe
addr16
cmp
outsb
stc
lock
lret
pop
and
and
pushf
xchg
pop
xor
pop
pop
mov
cmp
xor
aaa
ret
xchg
arpl
rcrb
jecxz
gs
ret
call
sub
xchg
inc
insb
cltd
out
in
and
cmp
addl
es
dec
jne,pn
icebp
cmp
ja
shll
mov
pop
xchg
mov
mov
stc
adc
fadd
sub
movsl
dec
jae
dec
lahf
xchg
outsl
pushl
mov
jge
mull
icebp
sbb
scas
inc
mov
sbbl
in
or
in
pop
addb
cli
sub
int3
mov
mov
sub
loopne
in
and
xchg
push
mov
cmp
jb
shr
gs
push
fldl
cmpsb
loopne
shlb
and
shl
cmp
movsb
add
mov
or
cmp
decb
xor
enter
cld
jne
mov
aam
inc
add
push
ret
mov
pop
jbe
lea
aas
fiadds
jno
test
mov
dec
insb
inc
and
lret
push
or
aaa
sti
mov
jl
cmp
mov
dec
or
cmp
rclb
inc
test
jecxz
lcall
test
xor
mov
scas
mov
pop
or
insb
pushf
mov
dec
shll
mov
add
xor
outsl
jb
mov
ss
jmp
int3
or
nop
cmp
loopne
outsb
das
pop
test
mov
cmp
pop
lret
imul
mov
call
jnp
sub
repz
jp
lcall
mov
je
cmp
xor
lea
pop
mov
mov
int
inc
data16
and
in
xor
ret
stos
jo
sub
push
in
add
push
in
cmp
or
and
into
mov
sbb
xor
movl
push
pop
xor
rcrb
fcmove
mov
and
sbb
mov
imul
dec
lock
inc
mov
adc
dec
sub
xchg
shlb
inc
xorl
cmp
xchg
mov
or
xchg
dec
dec
test
xor
mov
pop
movsl
mov
ret
add
fildl
mov
popf
call
xor
or
call
add
sub
inc
xor
jb
cmp
mov
fldenv
cli
inc
inc
xchg
sbb
jle
rcrl
data16
xor
in
stos
stc
insl
in
sahf
aam
add
sbb
test
push
out
insl
and
not
dec
sti
push
es
jbe
std
cmp
dec
fistpl
pop
out
iret
add
sbb
je
cli
ret
mov
inc
inc
lock
pop
clc
insb
dec
mov
sub
mov
mov
adc
dec
and
stos
adc
pushf
jns
pop
cld
xor
roll
mov
mov
ret
sti
je
and
jb
roll
ss
lods
imul
gs
cld
cmc
test
xchg
fisubs
ficomps
imull
push
popf
inc
mov
jecxz
pop
mov
iret
sti
and
test
sub
cli
sub
iret
emms
lcall
das
push
js
mov
inc
sub
push
outsb
aad
in
negl
outsl
cmpsb
cmc
mov
jb
and
lret
xchg
mov
push
jns
sarb
inc
mov
es
add
and
sarb
arpl
ds
adc
jge
dec
mov
and
and
sub
ss
das
pop
mulb
jno
cmpsb
sbb
mov
cmp
xor
and
cmp
xor
sub
int
data16
imull
lcall
jne
out
inc
mov
jne
sbb
jbe
cmpsb
xor
inc
push
jle
test
subb
imul
wrmsr
pop
adc
xor
mov
insb
sub
fildl
test
sahf
push
jp
mov
xchg
pop
mov
push
jmp
and
es
inc
ss
inc
inc
add
xor
and
and
or
rol
xor
jnp
fwait
adc
xchg
adc
cwtl
adc
adc
ret
rcrb
xchg
mov
sbb
and
nop
les
cmp
adc
out
jp
test
fsubs
xor
repnz
ret
in
dec
rclb
sbb
loope
push
sbb
adc
test
mov
dec
dec
mov
repz
icebp
arpl
arpl
into
xorb
subl
jne
jmp
shrb
rcrb
add
loopne
ja
mov
and
cmpsb
mov
ret
sbb
test
adcb
mov
jbe
mov
lcall
and
ljmp
pop
and
popf
xchg
mov
mov
pusha
and
pop
mov
xchg
add
cmpsl
in
std
push
js
mulb
je,pt
pushf
add
mov
cmpsl
jb
push
sub
cld
jbe
sub
jmp
rcr
leave
jg
jae
divl
dec
popa
in
cli
adc
into
push
pop
inc
shlb
jb
jp
lea
loop
popa
inc
sub
pop
notl
loopne
jl
sbb
stc
pusha
ss
xchg
lods
mov
jge
push
stc
push
es
dec
testb
movsb
mov
xchg
inc
scas
mov
stc
ret
ds
in
xchg
icebp
push
ss
nop
popa
iret
mov
jae
xor
hlt
push
sbb
jmp
xor
mov
adc
jp
xchg
sub
dec
push
in
cmp
sub
adc
std
int
sahf
lahf
mov
imul
rclb
xchg
and
shlb
repnz
in
int3
sub
pop
inc
arpl
mov
je
pop
lcall
pushf
movsl
xor
mov
mov
in
pop
repz
mov
cmp
testb
cmp
cmp
xchg
inc
int
cwtl
test
test
outsl
roll
xchg
xor
rcl
mov
cmpsb
xchg
jg
aas
cmpsb
out
addb
ds
sbb
shl
sub
repz
outsl
push
loope
imul
jbe
cmp
bound
mov
push
jns
sbb
jno
vpunpckhbw
pop
clc
xor
jmp
aam
jo
aad
out
shll
inc
nop
sbb
out
xchg
fbstp
aaa
sbb
or
movsl
loopne
inc
insl
sbb
mov
and
je
mov
pushf
cmp
pop
or
or
lods
lret
repnz
rorb
in
pop
jae
jns
cltd
and
add
pusha
into
add
cwtl
add
fs
pop
scas
cmp
cld
sub
int3
mov
les
lods
inc
dec
xchg
aam
daa
mov
inc
fwait
push
je
push
stos
push
jge
pop
push
shll
fistpl
and
xchg
mov
bound
jo
repnz
clc
mov
mov
cltd
dec
je
imul
setnp
lss
adc
in
js
cltd
dec
sub
pop
mov
ret
cwtl
cmp
ret
sar
mov
cmp
sarb
out
ds
addr16
or
adc
and
daa
xor
xor
lcall
popa
or
aaa
sub
lret
sub
push
xchg
aas
fdivrs
jg
push
popa
mov
jge
sbb
and
mov
mov
mov
push
aaa
mov
rol
xchg
inc
inc
xchg
adc
adc
arpl
push
pop
icebp
std
jl
testl
in
in
sbb
imul
test
add
loopne
shrb
or
sbb
clc
das
hlt
mov
test
scas
sar
lcall
jo
insl
leave
js
sub
xchg
cmp
sub
addr16
lods
push
imul
xor
sub
cmpsl
cmc
jl
imul
dec
movsb
mov
sub
sbb
mov
gs
push
leave
mov
xchg
roll
ret
loop
mov
fnsave
pop
push
pop
xchg
outsl
mov
xor
stos
sti
jno
push
dec
leave
arpl
incl
mov
jle
mov
sub
repz
jb
fistl
adc
push
in
ljmp
dec
ret
add
or
mov
repz
adc
addb
in
int
or
push
inc
and
cmp
mov
inc
in
in
int3
jp
loopne
push
cmp
lea
adcl
and
movsb
mov
xor
mov
aaa
cmpsb
jne
in
fstl
sub
jne
mov
push
negb
mov
and
sub
jl
inc
movsb
or
sbb
dec
fcompl
ds
jns
pop
add
and
ret
scas
insb
out
and
fists
xor
sub
aad
mov
rorl
sbb
mov
pop
sti
loop
sbb
lcall
mov
add
fisubrl
dec
jl
dec
cmp
test
mov
inc
ds
addr16
bnd
mov
in
mov
roll
mov
es
sub
jae
push
call
sbb
insl
sub
dec
jp
lret
dec
dec
xchg
mov
jne
les
stos
sub
jmp
test
mov
rcl
push
lcall
orb
js
push
xorl
mov
push
push
decl
int
dec
andb
push
in
jns
pop
xor
push
lahf
mov
ss
mov
enter
push
sub
movsb
push
popa
sub
stos
mov
cli
add
mov
xchg
dec
jbe
scas
sbbl
mov
push
xor
sti
mov
clc
andb
jmp
fwait
outsl
iret
mov
push
stos
mov
adc
jbe,pn
repnz
xchg
repnz
cmp
dec
push
xchg
hlt
daa
sahf
das
inc
xorb
insl
mov
jmp
bound
js
cmp
sub
pop
cmp
add
add
movsl
inc
lret
loop
or
fiadds
fsubp
outsl
sub
mov
adc
sub
repz
jecxz
add
pop
pop
sub
pop
jo
mov
enter
dec
mov
adc
test
insb
test
mov
test
pushl
mov
dec
push
pop
push
pop
std
xchg
xor
sub
dec
negb
push
lret
test
sub
pop
fsubrp
stos
mov
aad
pop
fdivrs
loop
mov
jg
mov
pop
shlb
out
aam
pop
imull
sti
pop
mov
mov
into
add
xor
cmpsl
mov
nop
stos
xor
ret
xchg
popa
dec
inc
popl
jg
test
bound
jbe
dec
jbe
adc
pop
jle
jae
dec
out
nop
mov
and
leave
jb
daa
dec
fdivl
testb
or
mov
pushf
sbb
pop
add
rolb
mov
sti
enter
push
xlat
jne
jmp
mov
js
adc
loope
lret
push
pop
enter
adc
ficoml
test
inc
pop
lret
std
ret
imul
jne
mov
filds
inc
test
outsb
push
dec
orl
lock
test
jns
add
pop
mov
mov
ja
adc
imul
int
add
int
and
cmp
mov
rcrb
rcr
or
test
sbb
int3
scas
jl
cld
int
fcmovne
mov
stos
test
subb
jae
fsubl
push
jne
es
pop
shlb
jge
iret
and
xchg
mov
ret
sarb
and
je
js
lret
jp
test
loop
or
or
in
sbb
sub
mov
push
sti
xor
hlt
push
adc
sub
ja
imull
sbb
lahf
pop
cmp
mov
and
and
adc
and
in
push
cmp
jg
pop
mov
pop
fcmove
ret
push
jl
int
les
mov
imul
mov
lret
mov
scas
jmp
add
jne
dec
shrb
jb
mov
xor
adc
faddp
push
or
add
adc
in
mov
jb
into
xor
test
out
jbe
lret
push
sub
jb
outsl
cld
sbb
test
gs
sub
fucom
decb
sbb
jns
xchg
jmp
mov
sbbb
ficomps
negl
mov
orb
mov
mov
rol
lret
xlat
lahf
jl
aas
scas
cmp
notb
jne
sbb
jle
or
lods
dec
mov
test
push
in
mov
and
mov
xchg
push
test
add
fldenv
fwait
mov
ds
test
xchg
in
outsb
dec
pop
aaa
add
fsub
out
scas
fimull
ror
mov
aam
jg
pop
outsl
sbb
push
xor
sub
jle
mov
sub
in
int
adc
sti
dec
rcr
les
mov
pop
loopne
xchg
jae
aad
sti
mov
lahf
or
shl
mov
xchg
out
xor
pop
daa
inc
pusha
cwtl
in
push
jge
in
in
sbb
add
into
and
test
adc
loopne
mov
ret
push
popf
scas
mov
add
movsb
sbb
add
and
lcall
jnp
xchg
sarl
pop
lahf
cmc
and
mov
sub
mov
cmp
xor
lods
or
nop
mov
pop
jl
jb
negl
inc
push
xchg
adc
cmp
and
mov
mov
mov
jle
pop
movsl
push
inc
movsb
aad
and
pop
mov
mov
inc
lcall
aam
or
ds
push
add
fbstp
cs
xchg
nop
jo
jl
sbb
std
sub
xorb
mov
lret
nop
rorl
scas
ss
cmp
xor
in
and
lods
xor
jns
add
movsl
sarl
jns
jmp
sub
and
jg
test
jge
fimull
mull
push
xlat
mov
cmp
cmc
lcall
xorl
pop
add
aad
mov
add
nop
pop
xchg
xor
jmp
xor
or
lea
sbbb
mov
add
or
cld
adc
and
dec
jmp
ds
adc
into
repz
andb
ss
sbb
fisttpl
or
adc
cs
inc
popa
scas
popa
cld
gs
push
jg
jg
shlb
sbb
jmp
or
sbb
jo
jnp
out
xlat
jo
movsb
mov
cmp
cmp
loope
lcall
dec
pop
sub
imul
xchg
cmp
repz
test
stos
pop
js
sub
out
and
xchg
pop
jb
pop
aaa
hlt
lret
cmpl
out
cs
clc
ficoml
faddl
xchg
into
mov
xchg
mov
mov
std
ljmp
mov
loopne
cmp
fisttpll
jb
sub
shlb
aaa
std
popa
in
cmp
dec
in
push
sub
mov
xchg
jle
aaa
push
mov
mov
sar
fsubr
out
cmp
fiadds
jecxz
add
mov
jns
addr16
sub
and
popf
adcb
push
in
fstl
fcompl
jge
icebp
pop
dec
xlat
or
ret
or
xchg
test
dec
jecxz
rorb
lock
test
xchg
jae
aas
imul
mov
outsl
icebp
pop
insl
repz
scas
dec
fst
call
stos
mov
addl
xchg
jp
jge
aaa
aam
mov
aaa
jmp
inc
sub
test
mov
ljmp
orb
ret
cmp
outsb
das
mov
movsb
inc
test
fwait
adc
fwait
into
push
test
and
sarl
hlt
ret
inc
dec
test
movsb
jg
ljmp
in
scas
mov
adc
dec
mov
in
pushf
pop
in
imul
cmp
pop
mov
dec
loope
pop
leave
test
mov
mov
sbb
cmp
jo
mov
pop
push
lcall
ljmp
int3
mov
jns
xchg
ja
sahf
xor
ror
dec
xchg
ror
push
addl
or
sbb
xchg
xor
dec
mov
xlat
sbb
in
sbb
mov
aaa
out
cmc
enter
or
dec
les
add
addr16
sub
mov
fsubs
fstp
movsb
popw
iret
adc
ret
ljmp
jne
jns
mov
and
xor
mov
arpl
pushf
cld
dec
sahf
push
sub
lods
cmp
jnp
pop
clc
push
aas
cmp
adc
sub
jmp
push
sti
jae
sbb
cmc
jbe
fstpl
or
cmc
jl
fwait
xlat
leave
insb
cmpl
fcom
popf
sahf
mov
push
sti
pop
pop
xchg
inc
mov
or
sbb
cmp
pushf
movsl
stos
jg
add
inc
cmpsb
ljmp
lcall
add
iret
out
out
ficoms
push
nop
and
dec
jl
pop
jp
adcl
clc
pop
mov
jg
call
pusha
lods
fdivl
or
imul
test
pop
push
mov
or
or
cs
stos
adc
adc
int3
mov
add
mov
pop
mov
mov
int3
orb
test
into
or
cmc
mov
test
jmp
mov
push
je
mov
inc
stos
xchg
and
lods
cltd
pop
and
push
add
mov
dec
xchg
mov
inc
push
test
adc
scas
iret
addr16
and
jmp
xchg
adc
fcompl
mov
or
sbb
enter
dec
arpl
inc
push
cwtl
cmpsl
jns
iret
fwait
test
add
inc
jno
jbe
call
pop
ret
pop
add
xchg
lahf
pop
in
cmp
pushl
inc
xchg
fcmovu
ljmp
or
cmp
out
dec
pop
sbb
mov
fcoml
fsubrl
hlt
test
shll
mov
and
mov
mov
pop
mov
lods
jle
mov
popa
xlat
adc
out
mov
cmp
aam
sahf
pop
push
mov
sbb
sub
pop
sti
cmpsb
sbb
shrl
clc
sbb
mov
adc
inc
mov
gs
mov
xor
sub
call
lret
xchg
add
push
cmp
sbb
lds
loope
bound
pop
sbb
mov
mov
out
inc
hlt
mov
fs
sbb
bound
addr16
push
cs
test
test
cs
pop
dec
mov
ljmp
jo
scas
sahf
rcrl
int3
dec
cmpsl
stc
lcall
fcoml
dec
xor
sub
jb
je
mov
mov
xchg
inc
jmp
in
ret
mov
rorb
aam
loopne
out
incl
movsb
aad
fadd
xor
jnp
mov
push
xorl
das
add
dec
sbb
js
jp
or
sbb
mov
test
cmpsb
shrl
pop
cmpsb
and
adc
out
popa
pop
mov
enter
imul
xchg
sbb
or
push
ret
insl
and
ficompl
icebp
sarl
stc
jl
inc
inc
cld
xlat
bound
or
arpl
lods
or
les
repz
or
cld
adc
jle
push
lret
clc
jbe
in
inc
jmp
push
into
dec
mov
xchg
lds
or
out
dec
push
fcoms
ret
jg
dec
or
rep
clc
test
mov
and
addr16
inc
pop
shlb
pop
fsubrs
scas
sahf
mov
into
xlat
lea
jb
ss
mov
stos
jecxz
push
pop
outsl
or
jge
test
push
int3
fs
loop
arpl
imul
movsb
dec
xor
push
pop
xor
ror
jnp
cmpl
loopne
faddl
mov
loopne
mov
xor
push
lahf
js
push
xchg
pop
in
out
mov
cld
sbb
sub
pop
xchg
es
ficoml
popf
out
pop
pop
lods
and
hlt
xchg
mov
call
jge
fdivrl
adc
psubd
jns
mov
add
xchg
mov
shr
push
loopne
sysret
lret
jmp
scas
cwtl
push
push
mov
ss
xor
adc
fcoml
call
addr16
xor
xorb
sbb
sbb
adc
cmpsl
data16
fistl
sub
push
jno
mov
xor
js
pusha
mov
pop
cltd
inc
cmpsb
pop
adc
aam
scas
xchg
jae
mov
mov
push
popa
out
mov
jo
pop
xlat
lcall
pop
cmpsb
pop
lock
icebp
xchg
int
push
mov
inc
ret
jge
xor
add
or
jae
inc
jg
cltd
mov
shrb
arpl
xchg
sub
repnz
cmc
imul
or
jb
pop
idivb
dec
cmpsb
mov
push
outsb
pop
and
hlt
dec
dec
popf
outsb
cmpxchg
xor
add
stc
lret
add
dec
pop
lock
ds
stc
mov
outsl
mov
lret
fldt
cmp
test
cmpsb
jecxz
mov
mov
cmp
addr16
mov
fimull
inc
cmp
inc
aaa
fwait
mov
lcall
imul
cmpsl
movsb
rcr
mov
mov
in
jp
arpl
dec
push
mov
sti
scas
jge
push
cld
ja
cmpsl
dec
aam
cmp
aas
xchg
cwtl
push
xchg
cmc
cmp
call
inc
cmc
mov
jbe
lods
aaa
cli
stos
xchg
and
mov
and
mov
mov
jle
pop
insb
mov
xchg
lds
jmp
mov
dec
sub
mov
mov
xor
jmp
jge
fisttps
jl
jmp
add
or
sub
jno
arpl
test
das
fdivrs
jnp
test
push
js
mov
jb
outsl
cmp
xchg
insb
xchg
shll
dec
cli
das
divb
inc
cltd
in
roll
lea
dec
loopne
dec
mov
mov
int3
sbb
push
sbb
dec
xchg
sub
mov
mov
std
and
xchg
mov
pushf
loope
or
mov
bound
and
ja,pn
inc
dec
arpl
fimull
xchg
inc
insb
pop
fnsave
outsb
cmpsl
xchg
inc
inc
mov
sub
cli
sbb
outsl
leave
push
sub
adc
cmpsb
xchg
pop
cmp
imul
inc
test
stos
dec
cmp
out
and
and
mov
sar
cmp
sbb
inc
mov
cmc
popf
pop
out
pop
dec
jne
outsl
jecxz
push
popf
jo
shlb
fistpl
dec
and
out
or
mov
pop
repnz
mov
add
negl
ss
dec
stc
dec
icebp
loope
cs
adc
mov
nop
jmp
mov
fcoms
lds
ja
jne
icebp
rcll
mov
fstps
jne
pop
push
sub
cwtl
sbb
mov
mov
je
test
sbb
int
pop
scas
idivl
lods
sub
cmc
cltd
test
xor
add
push
daa
in
data16
pop
shlb
sub
arpl
negb
ret
fisttps
push
int
into
or
add
in
mov
or
test
outsb
bound
push
sbb
inc
inc
scas
add
jmp
pop
cmp
mov
mov
xlat
repnz
xchg
or
test
sbb
pop
add
es
sbb
push
insl
ds
lods
addb
clc
cmp
paddusb
fdiv
mov
push
ret
sub
lea
int3
inc
xchg
out
and
xor
xlat
jle
out
xchg
jmp
addr16
inc
and
leave
bound
push
pusha
ja
or
fidivrs
push
and
mov
fld
push
aaa
mov
add
arpl
fsubrp
and
jae
inc
mov
call
mov
dec
jno
push
mov
xor
aam
hlt
adc
stc
out
mov
xor
je
dec
cmpsl
add
jno
orl
jmp
add
mov
out
movsl
pop
into
xchg
fst
ja
enter
mov
out
sahf
mov
lock
sbb
ss
shlb
ss
pop
or
out
xor
inc
xor
sub
aaa
in
fisubs
xchg
push
decb
and
push
push
repz
rclb
out
jbe
rcll
insl
inc
push
push
lds
mov
adc
andb
xor
nop
filds
push
mov
xor
dec
mov
mulb
pop
or
outsb
daa
stos
icebp
out
out
loope
rorb
push
mov
mov
sbb
call
shrb
sub
stc
pop
gs
bound
xchg
push
or
lret
xchg
iret
mov
add
in
pop
and
mull
inc
xchg
ljmp
scas
fidivrs
imul
movsl
or
pop
dec
inc
xor
and
push
fldt
gs
out
xchg
add
jns
fadds
daa
shll
ljmp
xchg
in
sahf
push
rorl
jmp
dec
insl
mov
popa
shll
push
cli
inc
xchg
repnz
rolb
push
imul
xor
les
fidivrs
stos
and
xchg
and
mov
dec
sbb
xor
xor
mov
fists
test
jbe
jge
pop
dec
add
test
cmp
add
ljmp
aam
mov
loope
and
xchg
xchg
cmpb
push
loopne
or
cmpsb
push
inc
sub
sub
pusha
in
cmp
sub
lods
movsb
pop
call
rorl
push
cmp
pop
test
push
popf
mov
push
mov
add
cmp
push
pop
push
cmpsb
sbb
lcall
cmpsb
arpl
clc
test
or
fnsave
scas
ds
mov
adc
ss
push
inc
mov
cli
mov
pusha
int3
in
fcmovnu
adc
mov
out
jmp
mov
xor
pop
pop
loopne
push
imul
out
xchg
add
cmp
xchg
rol
scas
mov
pushf
lds
pop
in
jo
mov
cmp
scas
cli
jg
mov
and
pop
pop
cmp
jle
cmp
lds
jl
out
daa
sub
push
rolb
popf
cmp
mov
jg
dec
icebp
push
xor
lahf
xor
push
subb
jb
arpl
and
ja
mov
mov
lods
in
mov
jae
mov
or
ficoms
fiaddl
or
or
data16
xchg
dec
mov
xchg
lods
xchg
mov
mov
or
jb
dec
jb
push
jbe
negl
mov
mov
jo
lock
sub
adc
popf
add
mov
dec
sub
ret
jl
jne
sub
cmp
ret
rolb
inc
mov
pop
jmp
add
pusha
mov
xor
fnstsw
pop
fistps
pusha
pop
stc
in
lcall
sbb
int3
jns
xor
mov
or
push
jns
xor
add
mov
div
mov
dec
cmp
jmp
push
imul
lds
in
mov
push
scas
pusha
xlat
xor
mov
inc
lods
mov
es
shlb
and
cmp
sbb
mov
mov
loope
lods
adc
int3
adcl
hlt
push
push
fstps
insb
cmp
mov
leave
dec
adc
or
mov
frstpm(287
decb
out
pop
sub
and
or
ret
or
fisttpl
clc
stos
ficomps
pop
loopne
xchg
ret
ja
scas
adcl
dec
es
push
data16
loope
out
pop
cmp
push
cmpsl
jl
sbb
in
and
pop
in
mov
pushf
aas
stc
sbb
insl
mov
insb
push
outsb
in
sti
dec
mov
ret
movsl
pushf
jmp
add
ss
imul
push
xchg
jnp
push
pop
imul
dec
inc
repz
sbb
sub
in
aas
cmc
out
bound
insb
int3
sub
adc
inc
js
mov
pop
jne
jns
cs
lret
loop
hlt
adc
fs
mov
add
jmp
mov
cmp
fldl
int
jbe
test
outsb
les
leave
je
xchg
push
fs
push
aas
mov
stos
mov
out
imul
gs
fsubr
fwait
test
push
bound
jb
add
int
xchg
or
aad
add
std
dec
cmp
jnp
test
into
sub
les
test
imul
and
clc
adc
stos
psubw
in
pushf
inc
add
inc
mov
pop
aaa
jmp
xor
imul
push
ret
mov
cmp
sub
push
sbb
lock
rorl
xchg
fwait
mov
adc
movsb
sub
insb
mov
mov
mov
sub
mov
daa
lahf
push
inc
inc
pop
addl
addr16
push
insl
in
dec
fcompl
stos
adc
aad
sbb
xchg
jg
adc
push
mov
in
aas
add
dec
sti
mov
cmp
clc
mov
ljmp
add
rorl
jle
dec
and
bnd
cmp
daa
inc
push
inc
jge
call
xor
sahf
data16
cmpsl
or
pop
test
stos
jb
mov
in
cltd
jnp
sub
das
addr16
fldl
or
xor
cmpsl
mov
dec
test
hlt
or
pop
or
dec
and
call
and
pop
xchg
fstpt
mov
int
dec
cs
aad
es
icebp
addr16
dec
inc
cmp
in
mov
sti
out
movsb
sbb
fcompl
mov
inc
sub
rolb
cli
fiadds
pop
sti
dec
aaa
cmpsb
push
shrb
bound
xlat
pop
xchg
xor
dec
xchg
push
std
popa
dec
push
loop,pn
pushf
push
xchg
mov
mov
lahf
fucomi
cmp
inc
push
mov
mov
adc
pop
pop
sbb
icebp
xchg
pop
stos
pop
mov
jnp
jb
cmp
sti
jl
inc
cmp
sub
mov
sbb
add
in
outsb
aad
rcrl
sub
lods
std
pushf
adc
mov
mov
xor
sbb
push
mov
mov
sub
fnstenv
outsb
xor
adc
or
jl
lret
in
mov
test
jg
inc
in
xchg
loopne
rcrb
repz
das
jae
stc
fsts
jl
xchg
mov
jmp
mov
cmp
pop
or
cltd
xchg
pop
xchg
icebp
mov
inc
fdivrl
rolb
jp
ret
pop
add
scas
hlt
idivb
in
imul
outsl
sbb
daa
mov
fwait
adc
outsl
jmp
sub
movsb
inc
das
in
push
sub
xchg
imul
ja
call
push
repz
out
sbb
and
sub
jmp
fadds
mov
js
hlt
and
add
push
movsb
cmpsb
test
adc
cli
pop
outsl
or
add
mov
pop
mov
into
aam
xchg
test
es
inc
push
xchg
ret
pop
push
in
xchg
pop
push
mov
adc
fdivl
and
or
das
and
jnp
jmp
fistpll
adc
jg
inc
adcl
xor
mov
clc
add
push
test
dec
outsb
lahf
jg
icebp
ret
xchg
xchg
iret
loope
xor
push
jl
mov
add
adc
push
enter
popf
test
and
sbb
adc
ret
stos
xchg
dec
sub
add
insb
loop
out
pop
icebp
xchg
ret
je
and
ss
mov
out
dec
dec
fistpl
pop
mov
inc
lcall
daa
outsl
stos
scas
daa
call
jno
pop
mov
lods
add
cs
repz
lret
jb
popa
inc
test
js
enter
push
fninit
rolb
inc
or
pusha
mov
in
sbb
adc
int
mov
mov
mov
push
fcoml
sub
adc
xorl
repnz
test
insl
iret
add
xor
inc
pop
sbb
sub
notl
inc
push
push
mov
xor
movq
sbb
stc
sbb
fcom
xor
jo
inc
ljmp
mov
pop
or
jno
in
sahf
xchg
cmp
mov
setg
mov
bound
jb
jle
xor
mov
in
popf
xchg
mov
sti
mov
movd
push
insb
es
xor
mov
xchg
hlt
xchg
lret
loope
jmp
xchg
jmp
dec
mov
xorb
shrb
xchg
push
xor
mov
push
js
ret
testl
push
mov
inc
dec
mov
cld
mov
xchg
lock
sahf
mov
fcom
adc
ror
jp
add
or
movsb
roll
adc
rclb
test
pop
cmp
fwait
push
adc
pop
and
inc
mov
call
cmp
jbe
fdivs
jae
dec
cmp
push
lods
and
lret
out
lret
mov
dec
push
mov
sbb
dec
mov
rolb
ss
je
push
inc
cmp
sbb
sub
in
data16
cmp
jle
pop
shll
pop
pop
in
add
sbb
repz
das
std
mov
xchg
pop
mov
sbb
xchg
testb
int3
mov
sbb
sbb
and
fcom
sbb
sub
ds
mov
cld
iret
jge
ret
insl
cmp
adc
pop
test
push
jecxz
inc
pop
ret
movsl
xor
sbb
or
scas
inc
jl
lret
das
aam
lret
jne
icebp
les
push
shrl
mov
nop
mulb
testb
xchg
inc
or
xorb
bsr
push
jge
push
testl
sub
ja
mov
and
cmpsb
dec
out
dec
add
lret
jecxz
nop
xor
adc
hlt
cmp
fbstp
xor
mov
in
sbb
test
les
push
inc
in
or
jecxz
or
and
aad
out
cmpsb
and
cmpsl
mov
pop
xor
das
mov
push
or
rolb
sarb
outsb
dec
or
dec
jae
jne
push
fnstenv
mov
fstl
aad
movsl
sbb
into
pop
fistl
clc
outsb
orl
mov
ljmp
inc
in
scas
fistpl
jb
in
xor
cmp
sbb
addb
stos
dec
push
jmp
and
mov
xor
pop
mov
cltd
mov
in
add
test
inc
js
test
test
cmc
pop
xchg
gs
ret
mov
and
lea
lock
imul
push
adc
xor
xchg
cs
bound
sub
pushf
nop
xchg
adcl
or
pop
cld
and
sub
pop
aaa
pop
dec
lret
iret
jmp
pop
mov
jae
xor
fcomi
shl
sahf
jae
test
cmp
sbb
or
cs
in
lcall
xchg
in
ja
and
cmp
ljmp
in
ja
popf
movsl
icebp
fdiv
fs
in
popf
push
loope
hlt
repz
mov
mov
xchg
inc
fmull
daa
xchg
adc
shl
testl
mov
add
lahf
cmpsl
mov
out
loopne
or
xor
repz
pop
push
stos
fildl
push
mov
sbb
sbb
adc
mov
int3
std
outsl
shlb
call
sub
inc
fisubrs
aam
xor
adc
cmc
jmp
ss
mov
adc
sti
add
add
iret
outsb
inc
sub
adc
orl
mov
movsb
xor
pop
insb
xchg
jmp
cmp
stc
enter
out
push
daa
sub
xor
jge
fwait
outsl
dec
repnz
insb
push
lock
mov
cmpsl
lea
cmp
mov
add
mulps
stos
xchg
outsb
mov
jmp
mov
aas
xchg
clc
mov
outsl
movsl
add
dec
fistpl
xor
adc
mov
dec
pop
dec
cld
mov
or
pop
push
or
adc
fxch
sub
orl
inc
outsb
pusha
jge
adc
in
cmp
mov
adcl
pop
aas
outsl
push
aaa
mov
mov
std
insl
fdivrs
push
movsb
fs
inc
cmp
xchg
stc
or
out
fldcw
dec
xchg
inc
aam
bnd
adcb
dec
repz
mov
mov
insb
sbb
cmp
out
xor
ds
push
fwait
rorb
js
xor
aad
or
fwait
clc
cltd
cmp
mov
enter
add
inc
push
add
aaa
cmp
pop
inc
jne
pop
cld
dec
roll
xor
outsb
ficoml
out
fldl
and
into
jae
fdivrl
stc
lahf
inc
adc
jb
sub
fs
add
and
adc
xchg
aaa
pop
pushf
mov
cs
cmp
nop
adcl
mov
add
int
xchg
aaa
ss
jle
or
mov
test
cmpsb
xor
xchg
sbb
mov
aam
arpl
inc
aad
jb
push
mov
fnsetpm(287
xchg
or
test
clc
jg
movsl
stc
mov
sahf
xor
popf
pop
cmpsl
jae
fwait
sub
dec
add
push
into
cmp
cmpsb
andl
imul
in
rol
loop
mov
in
mov
sbb
popf
sub
aas
and
in
ret
sub
repnz
and
jmp
cs
pop
mov
xor
push
dec
mov
pop
ljmp
push
adc
mov
push
out
or
fistps
mov
xor
icebp
adcl
jbe
mov
dec
loop
add
push
sbb
jmp
in
cmpsl
mov
inc
jnp
loopne
jl
inc
push
leave
ror
daa
push
imul
leave
andb
les
mov
cmpsb
push
xor
fmuls
test
stos
jmp
pop
xchg
outsl
cwtl
stos
rorl
ljmp
cmp
xchg
adc
fbld
out
hlt
addr16
leave
inc
dec
lods
dec
xor
push
dec
adc
jmp
sti
lock
inc
cmp
dec
test
sub
and
roll
enter
scas
adc
jnp
pop
aam
pop
mov
dec
fidivs
aas
pop
and
mov
shll
push
xchg
loopne
cmpsb
xlat
das
pushw
out
sub
scas
out
push
xchg
push
sahf
idivb
and
jb
jnp
pop
ret
pop
roll
mov
dec
addr16
sub
scas
pushf
pop
ds
sbb
clc
pop
ss
nop
jmp
mov
cmpsl
or
rcrb
int3
std
test
sarl
in
jns
add
jl
fmuls
fprem1
std
push
rolb
jp
adc
mov
mov
imul
loopne
pop
adc
into
pushf
jge
pop
inc
push
pop
cs
add
sar
stos
je
out
repz
xchg
xor
testl
adc
pushf
lock
add
xchg
and
pusha
and
xor
in
lret
insb
cmp
mov
dec
mov
imul
dec
mov
cmpsb
pop
or
cmp
inc
test
inc
xchg
cmp
push
jne
pop
clc
cmp
sbb
test
cmpsl
shrb
mov
pop
cli
mov
sbb
fnstenv
sbb
das
loopnew
add
adc
pop
xor
push
roll
push
push
and
mov
mov
int
push
mov
cmp
cmp
push
adc
cmp
rcll
push
js
cmpsl
lods
cmpsb
popa
fdivrs
adc
dec
mov
movsb
cmpsl
add
iret
pusha
mov
mov
in
or
jne
aaa
fdivl
cmp
mov
out
stc
test
hlt
or
sub
das
mov
cmp
outsb
jbe
movsb
inc
or
aaa
cs
jmp
divps
lods
jno
lea
and
lods
mov
dec
mov
test
lods
push
mov
imul
std
enter
push
xchg
push
and
imul
cwtl
out
cmp
lahf
xor
jle
or
gs
loope
sbb
stos
xchg
mov
mov
dec
lds
pushf
mov
pushf
mov
add
fs
mov
fisubrl
mov
cli
jl
pop
pop
repnz
xchg
pop
test
es
pushf
xchg
add
sbb
pop
adcb
aas
jle
inc
fstps
dec
and
push
cld
mov
clc
mov
jecxz
adc
lahf
push
insb
mov
or
dec
repz
jnp
inc
cmp
pusha
xchg
lahf
negb
pop
mov
loop
push
movsb
imul
adcb
int3
adc
pop
sub
out
out
xor
pop
addr16
xchg
mov
mov
pop
dec
adc
dec
push
add
movb
xchg
repnz
sbb
jne
cmp
jo
loope
iret
imul
pop
fs
mov
add
mov
test
test
sbb
icebp
xor
cli
fisubl
sub
roll
jl
xchg
out
jmp
push
sti
and
ds
and
mov
aad
mov
cmp
bnd
pop
movb
sbb
shlb
subl
out
sbb
sbb
pusha
cs
jg
es
test
arpl
jbe
fsub
leave
adc
mov
in
movl
push
test
xchg
or
movsl
inc
mov
adc
xchg
jecxz
mov
ss
pop
xchg
mov
xchg
push
adc
mov
dec
sub
xlat
and
jg
mov
jb
vmwrite
shlb
les
pop
loope
das
push
bswap
loope
jno
popf
clc
lcall
jmp
xlat
scas
mov
repnz
cmp
sub
mov
movsb
mov
sahf
mov
inc
gs
jecxz
and
mov
scas
stos
test
iret
sub
or
dec
js
xor
testb
push
push
pop
lock
mov
mov
sub
fcmovbe
les
sub
ficoms
arpl
or
stos
clc
iret
popa
sbb
jp
lods
push
adc
and
mov
pop
popf
jmp
xlat
jge
adc
arpl
es
sar
repz
and
js
pop
test
mov
inc
arpl
sbb
mov
arpl
test
test
repz
inc
loopne
nop
add
jae
stc
xchg
push
pop
pop
loop
movsl
je
cmp
and
mov
shlb
aam
insl
dec
mov
stos
push
and
jle
aaa
in
dec
loopne
iret
cmp
xchg
cmpsb
sub
jb
xchg
mov
fnstsw
cmp
mov
pop
lds
popa
mov
subb
inc
push
xchg
sbb
ljmp
daa
test
jnp
push
fstl
fmuls
cmp
mov
movl
add
mov
orl
mov
cmpb
mov
add
fcom
cmpb
cwtl
in
and
mov
and
lret
imul
lock
and
xor
iret
scas
dec
jg
xchg
mov
push
popf
js
sub
mov
jne
jno
lea
outsb
sbbl
sahf
sbb
mov
popf
test
lcall
pop
push
mov
add
mov
xchg
jo
test
mov
xlat
mov
ss
lea
and
push
xor
insb
sbb
jb
jo
sub
jl
adc
jle
xor
out
popa
repnz
fnsave
rclb
push
jns
push
or
sbb
mov
aad
push
jne
pushf
daa
and
sar
scas
xchg
ljmp
cmp
add
mov
mov
sub
inc
xor
icebp
not
imul
imul
adc
andb
arpl
arpl
or
dec
pop
je
pushf
mov
rcrb
pop
loop
out
push
xor
sbb
ja
adc
mov
mov
adc
jle
cmpsb
mov
jne
xor
pop
gs
and
xor
int
mov
clc
mov
add
xchg
sbb
addb
add
jecxz
mov
push
lcall
cltd
xchg
jno
xor
pop
lock
movsb
jg
scas
jno
out
in
dec
rcrb
xlat
sti
mov
sar
mov
or
sub
or
mov
xchg
dec
xchg
sub
ds
sbb
xchg
and
push
test
out
cmp
out
adc
or
pop
sarb
lahf
dec
fldcw
hlt
push
leave
lea
jbe
lods
mov
inc
mov
lea
jp
xor
inc
xor
jg
xlat
lock
mov
loope
push
andb
sbb
jmp
ds
pop
mov
push
mov
sbb
add
push
xchg
fisttps
jbe
and
and
mov
add
jbe
adc
roll
out
lcall
insb
addl
xchg
pop
push
out
test
outsb
mov
ja
add
rcll
mov
std
ss
rcrl
ds
cmc
xchg
push
popf
push
mov
in
stos
movsb
or
stc
jl
mov
push
out
add
arpl
insb
pop
mov
xlat
inc
add
push
fcmovnbe
jge
mov
pop
pop
pushf
ficompl
cmp
test
dec
iret
fimuls
mov
mov
mov
push
add
es
mov
mov
mov
mov
push
dec
sub
cmc
inc
in
and
lds
sub
pop
jo
push
jne
or
imul
pushf
mov
out
inc
scas
lret
lock
out
in
inc
push
xor
insb
arpl
inc
leave
repnz
scas
mov
fcoms
lods
mov
loopne
ljmp
mov
push
or
jno
mov
jne
icebp
jb
ja
into
sub
pop
inc
ja
mov
adc
loopew
js
adc
mov
xchg
xchg
in
adc
cmpsb
std
loope
mov
mov
jp
push
dec
aam
xchg
and
or
mov
xor
arpl
mov
jg
add
std
mov
cld
cwtl
test
mov
test
xchg
push
xchg
xor
outsl
mov
or
jns
mov
cmp
xchg
addw
jmp
popf
xor
addr16
cmpb
cmpsb
addb
ds
pop
mov
cld
mov
addr16
jg
jge
js
mov
push
push
fmull
fidivs
mov
jo
pop
or
imul
daa
jmp
xchg
es
push
movsb
xor
testb
cmp
push
jns
paddq
lods
lahf
xchg
fidivl
inc
pop
push
and
call
xor
mov
arpl
and
mov
test
imul
mov
jg
jmp
mov
cmp
cmpsl
mov
xorl
jmp
mov
jbe
sbbb
cmp
dec
mov
scas
outsl
data16
pop
or
fs
pop
inc
add
mov
mov
mov
sub
xor
clc
mov
cltd
push
inc
gs
cmp
push
call
fdivs
mov
push
push
push
xchg
enter
in
loope
xchg
xchg
push
mov
std
jns
and
pop
pop
pushf
lock
ret
hlt
sbbl
cmp
jmp
xor
xor
pop
xchg
sbb
or
mov
rcrl
cmpsb
xor
mov
dec
inc
aad
bswap
pusha
fstpl
jb
cmpsl
clc
les
stc
test
aam
icebp
pop
stos
sahf
ret
jl
mov
pop
xor
pop
mov
popf
lods
ret
lods
in
iret
sub
push
ss
or
mov
out
jnp
add
xlat
pushf
int
gs
mov
movsb
fistl
jns
xchg
test
xor
xchg
loopne
insb
fldcw
enter
sub
arpl
ficoms
adc
jno
lret
pop
pop
ds
cmpb
fwait
or
add
jbe
dec
ja
lahf
pop
inc
xchg
es
and
test
out
pusha
int
movsb
test
js
ret
dec
mov
inc
scas
pop
incl
in
shlb
aaa
or
repz
enter
xchg
gs
es
div
xor
outsl
leave
mov
mov
cmp
sti
push
adc
mov
lds
add
xlat
movsb
not
popfw
xchg
push
mov
aas
xor
mov
ret
test
sub
fimull
inc
pusha
adc
lret
pop
or
adc
push
clc
jg
cli
xor
ret
xchg
push
mov
icebp
mov
pop
cmc
pushf
jns
jbe
ljmp
mov
imul
cmpb
and
or
or
stos
fadds
div
adc
xchg
mov
test
nop
sub
fdivs
mov
cmp
fstpl
movsl
loop
jae
mov
sub
mov
lret
jnp
ss
mov
outsb
lods
enter
add
pop
inc
mov
mov
adc
xlat
stos
addl
aaa
add
and
push
sti
dec
into
je
xchg
dec
mov
mov
daa
int
sub
stos
scas
test
mov
jb
adc
ja
inc
fcompl
enter
push
adc
inc
aam
test
push
out
jl
sbb
mov
xchg
out
out
mov
sbb
push
xchg
pushl
cwtl
stos
cmpsb
xorb
cmpb
dec
cmpsb
data16
fldt
xchg
cs
aam
out
or
mov
mov
mov
testb
lahf
test
push
insl
jmp
push
arpl
push
ret
pop
jl
cmp
or
dec
loop
repnz
lret
xchg
push
aas
dec
sub
pop
lds
xor
cld
jnp
pop
dec
cmpsl
add
arpl
mov
add
lcall
cwtl
imul
loopne
mov
sbb
dec
inc
pop
cmp
out
gs
inc
es
mov
popa
sbb
lahf
sub
pop
aas
imul
mov
movsl
add
mov
fs
or
enter
pushf
xor
cmp
clc
xchg
in
adc
sub
jbe
shl
insb
sbb
inc
xchg
add
daa
push
jbe
inc
repz
add
out
fwait
dec
jg
cld
bound
int
daa
loope
dec
imul
hlt
fmuls
pusha
sub
sbb
sti
pop
inc
movsb
es
cs
fwait
jp
inc
mov
dec
pop
xor
lahf
shrl
jbe
add
cli
mov
jmp
cs
dec
and
push
lock
mov
lret
or
in
push
xchg
inc
movsb
sbb
mov
mov
pop
or
mov
into
xchg
dec
push
sub
sub
mov
repz
fldenv
pushf
mov
push
scas
mov
test
jns
sub
mov
and
sbb
lret
scas
jbe
cmpsb
jp
addr16
movsb
addr16
xchg
movsb
or
in
push
mov
xchg
mov
cwtl
mov
dec
dec
sbb
ret
xchg
and
sbb
adc
js
fmul
popf
cmp
pushf
pop
and
cs
sbb
pop
imul
addb
out
xchg
arpl
movsb
or
aad
jo
jo
dec
pop
sub
rorl
mov
push
push
dec
or
xor
gs
lret
xor
das
mov
into
nop
rcrl
sub
jge
into
xchg
push
xor
enter
mov
xor
mov
int
adc
pop
dec
mov
insb
imul
xchg
mov
jae
push
ljmp
sbb
leave
add
out
in
ds
loop
mov
jo
das
hlt
push
sti
mov
stos
mov
and
adc
call
sbb
pop
sti
add
push
imul
cmp
sbb
lret
cmpsl
sub
test
pop
sbb
sbb
test
jns
ds
in
out
mov
mov
push
adc
out
mov
in
mov
lahf
xlat
push
sub
inc
jb
inc
enter
push
fcomip
pop
jp
into
pop
cmp
xchg
mov
out
dec
clc
orl
and
scas
pop
mov
imul
in
pop
mov
shl
imul
sbb
lods
shr
dec
push
shll
sbbl
xchg
sbb
stos
adc
imul
arpl
add
xchg
sbb
lods
xchg
jl
pusha
cld
pop
inc
push
or
inc
mov
sbb
xchg
inc
movsl
movzbl
sbb
lock
ds
xchg
fadd
mov
mov
inc
dec
lods
pop
dec
mov
fistps
or
inc
or
test
mov
jmp
inc
xor
mov
repz
ja
shll
cwtl
imul
adc
jge
imul
and
mov
cmc
pushf
inc
adc
or
lock
xor
dec
gs
xchg
cli
xor
ljmp
xchg
pop
repz
int3
mov
lcall
shll
adc
inc
dec
xchg
adcb
clc
inc
sub
mov
or
mov
mov
mov
cltd
add
cmp
inc
aas
movsl
dec
inc
fistpl
inc
arpl
xchg
aam
mov
call
jo
notl
jo
jmp
adc
aad
sub
clc
loope
mov
pop
add
das
jne
pop
jle
in
sub
outsb
mov
xor
daa
repnz
aas
cmp
imulb
jno
xchg
fimuls
adc
jle
pop
add
mov
pop
add
fisttpll
jmp
es
cmp
pop
out
js
adc
out
sbb
mov
add
push
push
fsubs
mov
shll
inc
shr
xor
lds
cmc
loopne
jb
pop
and
fisttps
mov
mov
repnz
mov
inc
sbb
jbe
dec
popa
ss
int
adc
xchg
xor
fdivs
mov
cltd
xchg
and
pusha
xchg
pop
xor
or
mov
push
movzbl
test
mov
and
mov
call
mov
sahf
inc
and
iret
shll
shrl
int
mov
ficoml
cmp
sar
shr
leave
inc
push
xor
pop
or
cmc
cmpsl
addr16
orl
add
push
and
lcall
xchg
subb
loopne
shll
pop
mov
dec
fadds
mov
loopne
push
dec
add
xchg
inc
pushl
and
mov
mov
sub
push
mov
addl
stos
inc
loope
icebp
lds
leave
xchg
and
inc
sarb
and
call
imul
cmp
jo
sub
loopne
push
scas
gs
dec
shlb
sti
cmc
dec
add
ljmp
or
cmpsb
cmp
dec
jns
or
insb
scas
jmp
in
or
stos
push
push
mull
pop
add
mov
sbb
imul
jg
mov
pop
ss
push
lret
addr16
rcrb
sub
mov
jmp
xorl
sbb
cltd
decl
cmc
cs
rolb
inc
jle
lahf
push
je
call
cltd
ja
mov
popf
lds
neg
jno
or
inc
dec
xor
push
outsb
adc
subl
pop
jbe
repz
jno
mov
subb
pop
lds
or
mov
sti
fs
jecxz
aam
xchg
stos
jnp
sub
lds
outsl
in
aas
rcrb
out
aas
inc
mov
repnz
adc
out
loop
sbb
pop
push
dec
mov
sub
icebp
mov
xchg
js
mov
dec
xor
imul
cmp
xchg
cmpb
dec
xlat
es
xchg
or
bound
orb
shlb
es
hlt
xor
ss
jnp
jmp
fdivrl
int3
test
push
aaa
jo
icebp
outsb
adc
xchg
iret
inc
sub
and
mov
insb
nop
sbb
ds
and
and
inc
icebp
inc
cltd
mov
push
js
xchg
push
jle
mov
jp
jmp
repnz
jae
push
mov
mov
adc
add
and
xor
mov
hlt
ret
pop
xor
out
stos
jnp
xor
push
or
and
rcll
or
arpl
xchg
notl
dec
cmpsl
into
cmc
out
lods
mul
repz
lods
push
jae
fwait
loope
pop
inc
insl
fsubrl
jmp
push
fdivp
pop
or
in
xchg
lret
insb
addb
in
mov
add
gs
mov
jmp
je
xor
out
jae
int
fwait
mov
dec
xor
push
iret
mov
jb
cmp
dec
sbb
xlat
mov
jno
xor
lea
jnp
fcmovnbe
inc
push
sahf
roll
js
mov
inc
dec
mov
stos
xor
clc
push
xor
push
int3
stos
and
lods
jns
xchg
testl
add
xchg
push
xor
add
dec
adcl
sbb
jns
aaa
pusha
es
xor
test
and
mov
pop
data16
jnp
jne
add
shrl
in
mov
clc
mov
test
imul
cmp
xchg
dec
jge
sub
and
dec
stos
fs
fiadds
out
jg
mov
mov
xor
sub
mov
xchg
test
stos
divl
add
ja
pop
sbb
cmp
aaa
test
xor
push
rcr
mov
adc
sahf
lods
andps
test
push
add
cmc
iret
mov
pop
mov
enter
fadds
mov
addr16
outsl
xchg
push
mov
cli
test
enter
rol
pop
loopne
es
cmp
or
out
push
test
jge
test
cli
push
or
pop
push
pop
movsb
andl
dec
pop
add
cmp
pop
push
test
add
jecxz
fsts
mov
test
rolb
xor
cli
sub
loop
sub
sub
xchg
test
mov
push
fsubrl
adc
push
mov
jg
inc
mov
and
cltd
dec
cmp
lcall
pop
sub
ret
push
dec
into
inc
inc
clc
ljmp
push
fistpl
push
out
pop
cmp
pop
mov
repnz
out
mov
pushf
stc
jno
movsl
mov
fdivrp
rcll
out
scas
sbb
xchg
dec
push
adc
push
adc
pop
cs
inc
inc
mov
cltd
jne
inc
xchg
xor
lds
sahf
loopne
push
cwtl
cmp
repz
icebp
outsl
out
dec
test
sbb
stos
cmp
cmp
sahf
stc
pusha
dec
jno
and
lcall
pop
cmp
xor
call
mov
sbb
cltd
lds
mov
sub
add
int3
add
stos
lcall
lods
aad
mov
push
or
imul
add
dec
add
movsl
sbb
cmpsl
movsl
pop
ficoms
cmp
mov
movsl
scas
shl
cmp
fnsave
or
pop
mov
xchg
test
mov
lock
mov
fcompl
leave
adc
incb
imul
popa
mov
or
daa
pop
cld
jae
dec
test
mov
mov
subb
pop
mov
inc
bound
ds
arpl
jmp
and
jmp
xor
jecxz
test
stc
pop
clc
insl
xchg
das
dec
negb
rcll
rol
int3
xchg
int3
arpl
xor
dec
push
dec
and
es
in
test
outsl
arpl
ja
adc
add
aam
jae
cmp
jmp
dec
repz
inc
or
jb
inc
imul
movsb
jbe
adc
add
test
mov
lahf
in
xchg
sub
add
out
popf
or
mov
xlat
das
sub
mov
xor
movsb
inc
xor
mov
ljmp
loop
and
fldt
xor
rcl
jo
movsl
adc
aam
and
cmp
pop
mov
push
outsl
stos
je
out
mov
clc
jno
push
xor
sub
dec
jnp
mov
loope
mov
and
outsl
xor
sahf
sbb
xlat
cmpsb
jno
dec
dec
mov
cs
shl
jno
jo
lret
push
push
add
loopne
int
pop
cmp
adc
add
std
popf
out
pushf
xlat
lret
dec
lret
jmp
out
ljmp
mov
sub
shl
or
sbb
mov
pusha
scas
loopne
out
or
add
repz
fnop
mov
xor
sbb
push
push
mov
out
leave
push
adc
out
xchg
stos
jne
jno
sbb
pop
xlat
xchg
outsb
insb
jb
inc
adc
inc
push
mov
add
inc
cmpsb
je
dec
cwtl
arpl
roll
cmpsl
xchg
lcall
shrl
sub
xor
inc
adc
sar
lds
add
lret
ds
lcall
lret
fcmovbe
cmpsb
jo
lods
pop
push
mov
adcl
into
ss
jg
dec
insl
add
lds
xor
movsl
inc
lret
movsl
rcrl
jge
stos
std
ror
mov
inc
sub
ret
and
adc
pop
lock
bound
jp
xchg
xchg
jb
inc
imul
test
or
fbstp
or
xchg
xchg
xor
pop
jnp
jae
jg
test
stc
addr16
lods
add
outsb
out
push
shl
mov
call
jnp
lret
lods
lret
daa
or
mov
lret
divl
insb
inc
and
adc
lods
mov
jecxz,pn
popf
push
xor
in
push
stos
dec
dec
aaa
pop
sub
rcl
dec
sti
xchg
test
push
cltd
out
loop
xor
lcall
push
popa
andl
test
arpl
and
mov
popf
mov
mov
stos
cmc
or
xor
fisttpll
xlat
bound
and
jae
cwtl
sbb
push
push
adc
or
in
call
mov
aas
insl
lea
xchg
out
inc
sbb
sub
ss
out
outsl
imul
jmp
cmp
jae
test
data16
sbb
fld
imull
sar
enter
pavgb
jmp
insl
mov
cmp
iret
dec
push
push
mov
int3
outsl
sub
xchg
mov
dec
pop
cmp
dec
mov
out
lea
mov
mov
pop
mov
loop
mov
imull
cmp
aaa
mov
jl
enter
test
xlat
ds
bound
cmpsb
cltd
or
dec
cmpsl
and
and
test
mov
adc
mov
leave
or
adc
insb
and
sbb
movsl
test
repnz
es
pushf
or
int
sub
jns
jnp
and
js
stos
pop
test
push
pop
lods
iret
fwait
out
cmp
pusha
jecxz
lcall
inc
sub
jne
cltd
in
les
out
cmp
jnp
repnz
imul
clc
ficompl
inc
pop
cwtl
push
mov
in
mov
add
cmpsb
mov
frstor
xor
xchg
xchg
into
idivb
ror
idivl
iret
add
pop
dec
push
sub
xchg
xchg
popf
and
in
test
push
addl
ja
sub
push
inc
jnp
lret
push
xchg
movsl
or
cmp
lcall
dec
inc
addr16
pop
mov
and
cmp
pop
fstpl
inc
cmp
jbe
sub
repz
in
int3
mov
lods
adc
or
push
pop
rcll
sbbb
lods
sub
in
jno
std
lret
ja
cmp
adc
out
inc
dec
js
hlt
les
ja
xor
mov
sbb
add
pushf
mull
dec
das
mov
fiaddl
jbe
sub
mov
idiv
dec
insl
sbb
aas
mov
dec
mov
push
cmpsl
mov
js
or
mov
cmp
push
sbb
loopne
mov
push
mov
cmp
pop
out
pop
mov
add
ret
pop
xchg
into
xchg
push
mov
daa
xor
push
xchg
test
inc
mov
add
cmp
mov
pusha
or
js
jno
or
les
mul
jae
mov
ja
mov
push
or
int3
icebp
rorl
ljmp
mov
shll
clc
dec
mov
or
inc
pop
sbb
jne
mov
loopne
adc
adc
lea
push
decl
fistpl
ja
jbe
inc
cld
pop
add
jmp
fists
or
xchg
fwait
and
mov
and
pop
popa
add
in
stc
ds
push
adc
gs
add
negl
xor
dec
lret
mov
add
aad
pop
mov
leave
or
cmp
lret
sub
xchg
fsts
add
sub
mov
sub
cmpl
mov
or
rorl
push
cld
ss
xor
mov
inc
out
mov
int3
es
sub
pop
into
mov
cmp
xor
in
pop
shll
cmp
and
jns
lret
mov
scas
sub
pushf
xor
imul
mov
xchg
mov
inc
xchg
mov
jns
cld
mov
mov
push
into
stos
jp
stc
es
in
ljmp
or
dec
pop
pop
jmp
sarb
ret
icebp
pop
mov
cmc
cli
mov
pop
jmp
xor
incb
pop
cmp
in
xor
sbb
mov
push
push
aad
mov
sub
popf
jg
inc
dec
pmaxsw
pop
cld
jae
mov
test
das
mov
jnp
mov
mov
sub
test
pop
sarl
jae
xchg
test
pop
jo
cld
fisttpl
and
loop
out
inc
push
shrl
pop
ffreep
sbbb
insb
addr16
insl
push
jp
scas
and
xchg
imulb
inc
jnp
js
cmc
sti
jns
pop
call
mov
popa
or
adc
push
test
mov
push
jne
gs
lds
jmp
shrl
jge
mov
jecxz
xchg
js
dec
jmp
xchg
ds
sbb
pusha
rcrl
cmp
sub
cmp
mov
cmp
fs
jae
imul
jle
scas
sub
jns
or
test
mov
aam
jo
or
dec
add
mov
push
in
iret
fs
sub
daa
xchg
xor
or
cmpsl
and
ljmp
rol
sbb
in
mov
adc
dec
call
and
iret
aam
fiadds
dec
jle
xchg
loope
mov
mov
fdivs
fidivs
cmp
push
inc
sub
lods
xchg
sub
frstor
ds
adc
insl
mov
inc
cmp
xchg
push
push
push
jecxz
mov
in
jg
cltd
pop
lahf
push
sbb
iret
adc
cmp
pop
fsubrp
cwtl
mov
mov
jnp
into
lret
jbe
push
scas
es
lods
aas
lcall
or
out
clc
xlat
lods
add
mov
dec
ja
xchg
das
loope
xchg
imul
add
mov
xor
out
inc
mov
test
cld
lahf
loopne
add
cmpsl
add
dec
fldcw
ret
test
pop
je
jno
arpl
sub
adc
sub
add
std
xor
aam
mov
pop
xchg
loopne
or
addl
push
cmpb
mov
and
ret
dec
in
xor
out
sbb
sbb
roll
xlat
stc
ret
dec
adc
icebp
push
je
nop
jp
testb
mulb
jnp
cmpsl
sub
cmp
mov
rcl
mov
adc
jbe
shlb
inc
test
fisttpl
test
nop
mov
enter
ror
stos
jecxz
cs
dec
in
jne
inc
fbstp
jge
jecxz
in
fimuls
orl
xchg
aad
add
callw
pandn
ret
xchg
push
outsl
enter
jb
cltd
insl
cmpsb
sti
imul
mov
shrl
mov
hlt
in
pop
adc
test
and
scas
movsb
clc
jmp
test
test
push
or
fincstp
stos
push
mov
dec
incb
xor
adc
clc
push
xchg
mov
ja
out
cmp
xlat
nop
lret
inc
sahf
adc
mov
lods
fidivrs
xchg
icebp
loop
cmp
adc
or
jg
cs
mov
jge
fistl
or
leave
test
fists
dec
aad
and
ja
push
mov
and
jecxz
sbb
inc
inc
hlt
mov
xlat
popf
popf
ds
push
mov
sbb
xor
xor
shll
inc
xchg
push
imul
fs
push
mov
mov
adc
mov
les
test
xchg
sub
icebp
mov
pop
xor
sub
loope
sub
insb
popf
cwtl
imul
imul
pop
sbb
add
push
adc
dec
jbe
jae
shlb
mov
hlt
mov
adc
aam
cmpsl
and
outsl
adc
ror
cmpsl
add
mov
push
sbb
mov
aas
repnz
inc
or
adc
lahf
pop
fcmovbe
mov
leave
push
lea
mov
dec
aas
pop
jle
mov
fs
pop
mov
stos
addr16
pop
jnp
xor
fsts
mov
sarb
popf
and
xor
hlt
sub
scas
lock
mov
sbb
cwtl
fld1
mov
nop
rorb
ret
xchg
jle
ret
mov
js
mov
test
xor
ret
cld
xchg
ret
cmp
mov
aas
nop
movb
mov
inc
mov
in
test
jmp
and
and
out
xlat
dec
test
pushl
mov
push
jb
push
or
xor
jnp
outsl
movsl
jp
mov
dec
enter
xchg
cwtl
mov
pop
cli
inc
test
test
xor
jle
in
aas
lods
xchg
pop
and
sbb
outsb
out
test
dec
ficoms
and
sub
popa
enter
out
in
jnp
push
and
mov
push
fidivrs
stos
pop
ja
adc
jo
movsl
inc
adc
sbb
xchg
inc
dec
pop
loop
fcmovb
xor
int3
mov
jmp
dec
xchg
jmp
roll
ljmp
ljmp
push
sbb
jle
pop
pop
or
xor
mov
inc
aas
mov
call
js
pop
sub
and
into
imul
mov
jne
cmpsl
cmp
pop
cmpb
add
mov
mov
xchg
or
mov
sbb
pop
inc
mov
lret
int3
testl
mov
movsl
int3
inc
jbe
adc
pop
movsb
lahf
nop
ret
test
gs
push
loopne
pop
jns
imul
pop
adc
outsl
sub
push
push
sti
mov
bound
mov
aad
jns
mov
add
push
fistpl
or
cmp
add
movsl
mov
xchg
vpdpbusds
adc
dec
push
pop
je
aam
pop
rclb
or
andl
lahf
push
cld
fs
pop
push
or
push
push
mov
lock
push
aas
cwtl
push
in
bound
je
jp
mov
jg
push
mov
out
ljmp
stos
xor
int
xor
jbe
ret
fsub
add
mov
out
stos
aad
fsubrl
enter
lret
mov
jle
sub
mov
jno
jae
int
out
sbb
lcall
int
lods
cmp
fcomps
inc
mov
fwait
xchg
inc
test
je
add
shll
gs
not
push
xchg
dec
stos
jg
jns
pushf
sbb
or
lcall
mov
mov
push
pop
out
push
cmp
lahf
dec
orb
movsl
mov
int
inc
scas
mov
mov
arpl
lret
adc
mov
dec
sbb
cmp
sub
mov
lcall
jecxz
repnz
nop
mov
pop
cmpsb
call
jo
xor
mov
ret
pop
repnz
xchg
cmpsb
lret
jne
and
dec
int
fcmovnu
pop
movsl
pusha
pop
ljmp
mov
adc
scas
aam
or
mov
aaa
jg
fcmovnu
ret
fidivrs
ret
mov
jae
iret
out
out
aad
stos
push
lods
in
movsl
adcl
adc
mov
cld
lcall
cmp
fmull
sbb
ret
pop
add
adc
fcoms
add
ja
pushf
addb
je
jo
and
mov
stc
aam
ror
mov
push
jge
push
or
call
rcll
sarb
subl
loopne
mov
adcl
lods
nop
std
bound
daa
pop
stos
sbb
test
int3
push
adc
pop
call
xchg
pop
in
push
inc
and
mov
nop
mov
lods
push
add
and
sbb
or
xor
fs
jne
xchg
rclb
out
rcrl
push
inc
test
push
xchg
inc
jae
inc
ficoms
adc
testl
icebp
test
xor
push
loop
cmp
jg
out
push
ds
push
loopne
xchg
or
push
cld
cmp
pop
pusha
and
and
push
xor
fsubs
aaa
push
xchg
clc
xchg
fdivl
mov
dec
inc
clc
sbbl
sub
aam
dec
pop
jnp
lcall
jle
pop
ja
xchg
mov
in
lahf
addl
scas
xor
cld
add
and
and
daa
icebp
dec
adc
sahf
bound
lds
pop
add
lahf
enter
aam
mov
adc
jmp
jle
and
int3
cld
add
imul
ficoml
test
xchg
loop
aas
mov
imul
jge
aad
add
inc
jmp
add
jg
std
rcr
and
out
repz
pop
sti
and
pop
out
lock
jp
push
mov
add
pop
mov
mov
jmp
xchg
cmp
push
pop
clc
imul
inc
out
jmp
out
ja
fisubl
repz
into
lods
cmpsl
outsl
outsl
cmp
sti
cmp
nop
shll
pusha
cs
cmpsl
jmp
fldcw
xchg
push
pop
in
mov
fwait
sub
outsl
xchg
imul
sti
add
cld
cmc
jnp
pushf
in
lds
add
adc
mov
mov
push
loope
les
mov
push
int
xchg
pop
cmpsb
pop
add
pop
sar
dec
add
push
bound
cmpsb
pop
or
and
popf
subl
xor
add
cmp
mov
mov
xchg
xchg
je
adc
fdiv
test
or
inc
mov
fisttpll
sbb
inc
sbb
jmp
stc
ror
inc
outsl
and
popf
incb
inc
aad
push
and
popf
jnp
sbb
jl
out
nop
cmc
cli
iret
lds
and
popa
xor
sbbb
cmp
or
xchg
xchg
lcall
and
iret
add
sub
xchg
push
stos
xor
push
addb
push
xor
push
inc
xor
movl
xchg
push
adc
push
push
or
sbb
sub
mov
shlb
and
and
xchg
jmp
xchg
cld
sbb
stos
das
in
mov
dec
fstps
or
call
mov
idivl
rorl
cmp
dec
sub
mov
xchg
cmp
enter
fistl
or
mov
dec
pop
cmp
aaa
pusha
ffree
cmp
mov
cmp
inc
scas
fstpl
lods
int3
pop
arpl
rcl
mov
fcmovbe
add
and
loope
xchg
fsts
push
dec
jne
ss
lret
mov
dec
pop
pop
jnp
xor
pushf
sbb
clc
adc
lahf
les
pop
rcrb
data16
mov
pop
addr16
cmc
sahf
rol
les
jp
inc
lahf
cmc
xor
mov
mov
lods
int3
push
outsl
add
sbb
jg
dec
push
test
push
xchg
mov
js
add
jo
addr16
shrb
inc
pop
idivl
je
pop
or
add
push
sbb
sub
cmp
and
shlb
popf
dec
loope
mov
jnp
test
bound
sbb
aad
dec
repz
rcr
push
inc
pusha
mov
call
pop
jecxz
stos
xchg
inc
rcll
mov
adc
je
cli
push
in
inc
sub
mov
mov
jmp
lods
inc
pop
xchg
loopne
adc
sub
sub
mov
push
mov
in
fnstenv
nop
or
shlb
push
mov
mov
add
add
dec
aas
xchg
cli
add
inc
or
dec
mov
inc
outsb
stos
test
aas
jns
lods
sub
xor
in
clc
lret
jb
aas
adc
xchg
mov
insb
stos
sbb
hlt
leave
in
mov
adcl
popf
and
sbb
aaa
das
mov
mov
xchg
loopne
pop
and
add
mov
jb
add
lahf
xchg
scas
jecxz
les
sahf
sbb
xchg
popf
sbb
aad
dec
push
push
ljmp
pop
xlat
add
inc
lds
rol
dec
xchg
test
jmp
dec
in
xchg
push
fwait
jg
and
mov
aam
jmp
lods
pop
stos
je
dec
jnp
in
jb
jbe
shrl
fwait
imul
mov
icebp
xor
add
mov
test
loop
mov
popa
cwtl
js
repz
in
xchg
xor
xchg
jae
test
outsl
test
xchg
add
or
pop
popf
loope
mov
mov
add
cwtl
fwait
int3
sbb
xor
push
cltd
int
mov
cmpl
inc
faddl
imul
mov
xchg
outsb
mov
js
xchg
xchg
repnz
idivl
and
cmp
loopne
aas
cmpsb
or
out
mov
adc
xor
inc
cltd
mov
adc
into
cmc
jnp
insl
enter
mov
cmp
mov
pop
inc
ret
jbe
ja
xchg
xor
stos
cltd
loop
and
mov
int
adcb
inc
es
pop
xchg
scas
fldl
pop
nop
jl
sbb
outsb
mov
sub
cmp
outsl
hlt
inc
cmpsb
fwait
inc
enter
sti
in
add
xor
or
fucomi
push
push
pop
stc
sahf
adc
jnp
out
xor
mov
cmpsb
inc
outsl
push
stc
stos
sahf
mov
jg
inc
aad
mov
outsl
xor
stos
arpl
pop
pop
daa
movsl
cmp
loopne
in
test
xor
rcl
jg
mov
pop
ret
jns
bound
xchg
mov
fwait
cli
movsl
sbb
mov
je
dec
mov
divb
sub
cmp
into
inc
in
shll
mov
fwait
aaa
mov
lcall
mov
pop
ds
mov
test
push
mov
xchg
lret
xchg
out
pop
cmp
dec
inc
adc
mov
jnp
pop
pushf
sub
add
out
imul
clc
add
inc
xor
in
jb
cmp
ljmp
aas
pusha
and
iret
jo
in
js
jmp
daa
pop
loope
andb
data16
mov
cltd
mov
mov
dec
push
jp
pusha
aaa
fyl2x
je
fcmove
ds
xor
movsl
movb
in
test
xor
subb
sub
shrb
jge
xor
inc
xchg
out
mov
jl
int3
or
fcoms
add
cmp
sbb
out
shrl
fs
rclb
mov
pop
push
ret
std
daa
cmp
inc
loope
jne
adc
imul
adc
xor
in
out
ss
push
adc
add
mov
std
cmc
adcl
jo
sahf
std
push
movsb
or
leave
insl
sahf
jmp
jge
imul
test
xor
movsb
pop
aad
ljmp
sub
test
std
pop
add
psubq
sarb
jle
mov
lds
icebp
jecxz
lcall
das
mov
int3
inc
imul
xchg
popa
cmp
dec
aad
xor
or
mov
data16
mov
xor
fdivl
fdivl
sbb
pop
inc
xor
lods
lea
in
mov
popa
imull
cmpsl
popf
es
cmp
out
push
sbb
movsl
jb
mov
mov
sub
icebp
pop
jecxz
std
stos
or
or
lea
xor
call
movsb
stc
cmpsl
cltd
jns
lods
xor
loope
mov
aam
mov
jmp
xchg
push
nop
mov
add
clc
testl
jnp
mov
ret
stos
xor
shlb
mov
cld
out
shlb
push
or
outsl
lods
jne
push
dec
mov
cmp
rclb
pop
xor
cmpb
xchg
lret
adc
mov
aaa
dec
leave
je
and
into
xchg
jge
pop
jae
std
or
mov
imul
push
sbbl
sbb
insertq
pop
push
movsl
pop
push
pop
in
sub
xor
adc
push
mov
adc
xor
sbb
pop
cmp
jns
stc
lahf
scas
inc
xchg
or
cmp
loop
jne
adc
aad
sbb
sub
roll
sbb
in
nop
xor
mov
pop
dec
pop
shlb
mov
xchg
faddl
dec
test
je
rcl
stos
xor
xor
dec
xchg
jecxz
cmp
or
add
mov
adc
adcb
inc
push
cmpsl
pop
add
lret
inc
lock
pop
enter
fsubrl
push
shlb
clc
adc
jl
lea
xor
push
sub
insb
xchg
push
repnz
movsb
and
loopne
cwtl
lret
and
arpl
cmp
stos
ja
aad
imul
ss
mov
pop
in
pop
dec
sub
mov
pop
movsl
jge
outsl
enter
test
sahf
adc
sub
pushf
pushf
xor
xor
ja
xor
dec
jae
mov
stc
and
mov
rcrl
mov
inc
mov
xchg
divb
aas
bound
push
mov
pop
mov
xor
mov
mov
and
cmpb
pusha
jp
clc
das
idivb
xor
push
xor
cld
out
jecxz
cmp
push
inc
xchg
sti
jp
or
pusha
test
mov
dec
test
push
lds
fisubl
pop
lret
sub
je
push
fwait
mov
outsb
pop
xchg
xchg
scas
dec
lcall
adc
sarl
and
xor
pop
fimuls
sahf
into
adc
aam
lods
xor
push
cmpsl
outsb
testl
aad
int
lock
lea
dec
ret
xchg
mov
xor
cmp
rol
add
and
jmp
outsb
push
divl
sub
jbe
hlt
pop
and
stc
iret
inc
lods
add
add
sub
sbb
in
push
sub
mov
inc
insb
sub
add
jb
ss
xor
movsb
dec
repnz
das
sahf
scas
xor
jge
ja
cs
dec
ja
inc
sub
inc
test
xchg
lock
push
add
push
and
rcrb
cmp
mov
sub
icebp
push
fcmovu
dec
mov
nop
mov
sbb
dec
cltd
cmp
mov
jl
push
or
sbb
jl
sub
lahf
sub
in
or
in
ljmp
pop
pop
jbe
mov
int
mov
fstpl
outsb
inc
lret
inc
push
loope
and
push
inc
or
addr16
xchg
mov
mov
out
pop
push
xor
jmp
sbb
loop
int3
lahf
or
push
cmp
sahf
inc
fcomps
push
stos
int
cmp
jbe
popa
lret
xor
insb
cmp
add
mov
out
and
lods
popf
sar
push
int
aas
xchg
hlt
hlt
daa
idivb
test
test
lahf
aaa
jbe
jnp
pop
jno
loop
xor
and
nop
xor
xchg
and
mov
push
imul
sahf
enter
push
dec
ret
push
cmpsl
ss
add
mov
mov
mov
js
push
popa
xchg
jns
adc
ficoml
cmpsl
or
das
mov
inc
lods
cmp
push
adc
in
cmp
or
adc
jg
lcall
std
inc
loopne
movsb
aam
dec
negb
lcall
scas
jae
bound
jp
xchg
pop
cs
xchg
movsl
or
repz
cli
icebp
into
int
xchg
pusha
mov
int
shr
lods
stos
pop
pop
aad
mov
ja
ljmp
mov
das
xor
xchg
mov
aas
mov
xor
mov
mov
sahf
mov
adc
inc
xchg
xchg
out
inc
inc
rclb
mov
out
and
sub
fistps
and
or
dec
ja
push
daa
loope
sbb
sbb
inc
ja
pop
or
add
ljmp
pop
mov
sub
mov
aaa
addr16
inc
adc
and
fnstenv
cmp
pop
pop
cli
cmp
cld
cmp
adc
mov
push
enter
sub
inc
dec
fistpl
testl
cli
mov
or
repz
xchg
nop
sub
test
sbbb
cmp
test
adc
xor
push
aas
popf
or
fcoms
lahf
dec
test
clc
xchg
pop
pop
es
mov
mov
repnz
inc
pop
insl
rolb
pop
add
jl
xchg
xor
mov
mov
scas
inc
sub
lret
movsl
ljmp
out
ja
ret
repnz
ja
insb
cmp
add
push
adc
sub
jne
fwait
xor
notl
pop
xchg
xchg
sbb
ja
sub
mov
aam
xchg
push
ja
pop
out
jl
subl
orl
loope
jns
ja
xchg
or
scas
in
in
sub
cltd
ljmpw
jne
sub
pop
test
loope
inc
inc
adc
and
xlat
mov
mov
shl
out
mov
mov
jmp
imul
fadds
xor
sbb
and
adc
insb
mov
pop
mov
addr16
mov
enter
xlat
pop
xchg
cs
sub
pop
adc
shll
cld
xchg
int
daa
sbb
cli
addr16
sbb
pop
xchg
push
sub
popa
aam
adc
fs
cmpsb
out
loop
lret
cmpsl
jno
lret
mov
xor
daa
push
lret
roll
insl
testl
movsb
bound
ret
gs
movsb
arpl
and
xor
leave
inc
cmpb
mov
stc
sub
aam
sbb
out
mov
insb
inc
mov
and
mov
mov
pop
fwait
mov
pop
enter
daa
imul
fwait
shll
xchg
push
pop
add
xchg
or
xchg
jbe
dec
dec
repz
adc
rcll
jl
xor
clc
or
rcl
inc
push
ret
addr16
push
dec
sbb
mov
sbb
rcll
test
and
mov
cmp
cmp
sti
jb
inc
sub
scas
xchg
xchg
jge
sbb
jg
xor
daa
cmp
inc
jecxz
mov
xchg
fsubrs
mov
dec
pop
and
out
insb
or
pop
aas
aaa
push
add
mov
mov
out
addr16
test
mov
and
out
insl
sbb
ret
pop
and
mov
push
xchg
adc
daa
fwait
leave
adc
iret
sbb
push
mov
xchg
inc
jnp
dec
test
add
cld
add
imul
sbb
mov
and
rcrb
xor
cmpsb
push
jle
mov
inc
add
out
mov
mov
inc
ret
inc
in
mov
loop
add
jmp
or
lods
imul
je
popa
sub
add
push
push
test
ret
push
fnstsw
mov
push
outsl
rorb
push
cmp
mov
loopne
in
je
adc
rorb
ret
add
add
ljmp
add
inc
cmc
dec
dec
imulb
pop
lea
iret
stc
push
lret
xchg
mov
pop
xchg
inc
xchg
daa
dec
mov
or
xor
enter
sub
mov
sbb
fdivr
jle
dec
sub
fisubs
cmp
daa
sbb
data16
push
mov
or
push
test
mov
add
fstpt
pop
sub
rcr
ss
mov
or
test
popa
sbb
mov
incl
hlt
push
lds
xor
movsb
add
jo
add
inc
pop
aam
into
and
add
pop
mov
xchg
aad
loop
inc
data16
push
jmp
add
sub
shr
inc
dec
or
pop
loope
daa
inc
or
popf
xor
dec
pop
xchg
jg
sub
jnp
add
and
and
xor
testl
jne
out
fwait
movsl
cltd
shr
adc
sub
js
pop
pop
cld
outsl
sub
and
xor
mov
imul
xchg
loop
sbb
push
lcall
sbb
es
adc
in
inc
call
hlt
mov
in
push
sub
xchg
cmp
and
xchg
mov
mov
and
cmp
push
fnstcw
pop
xor
cli
mov
and
cwtl
ss
imul
lods
lret
loop
mov
push
pop
mov
inc
test
lock
fisubs
pop
cltd
ror
sub
out
addr16
fsts
mov
inc
sbb
in
aad
mov
repnz
jmp
mov
mov
mov
jge
movsl
mov
test
or
mov
ret
push
into
rol
cmp
push
cmp
push
mov
mov
sbb
fdivrs
mov
outsl
mov
scas
mov
add
cmp
pop
ret
jne
push
rcr
mov
mov
rep
and
cmpsb
sub
cmp
and
pop
pop
ss
mov
or
ds
sbb
sub
movsl
test
in
and
stos
into
stc
lret
adc
insb
dec
xlat
mov
xchg
dec
pop
add
push
or
push
int
mov
pop
adc
shll
xor
add
sub
imul
in
or
lock
mov
push
sar
gs
sub
test
mov
jbe
xchg
adc
mov
sub
dec
roll
mov
adc
inc
call
mov
fwait
or
push
popa
cwtl
dec
xlat
jns
xor
mov
dec
aam
push
push
xlat
sbb
sub
ljmp
lret
inc
mov
cld
sub
ficoml
jnp
mov
dec
enter
les
roll
test
cmp
lcall
mov
pushf
movsl
idiv
jmp
mov
faddl
jbe
sti
notb
nop
int
mov
or
leave
cwtl
mov
das
mov
les
cmp
leave
pop
mov
mov
add
clc
push
add
xor
addb
popa
and
cli
jb
repnz
dec
fiaddl
lea
mov
mov
mov
dec
mov
fwait
mov
cwtl
mov
jo
addr16
adc
adc
or
mov
adc
das
pop
es
xchg
and
or
sub
mov
repz
fwait
mov
orl
enter
pop
into
ficomps
jns
pop
dec
fxch
aad
vcmpss
rclb
loop
mov
cmp
stos
lock
ficompl
or
jg
and
mov
loopne
adc
xchg
outsb
incb
xlat
or
test
jno
or
add
je
mov
push
in
icebp
dec
repz
mov
js
sbb
xor
js
mov
xchg
adc
out
sbb
insb
mov
pop
lcall
repnz
mov
lret
fstps
idiv
aas
jae
jmp
mov
jb
es
xor
jmp
sarl
and
mov
fadds
xchg
testl
inc
ficompl
cmp
clc
xchg
push
pcmpeqb
mov
cmpb
mov
mov
sbb
xchg
pop
jge
xchg
mov
test
movb
mov
ror
in
leave
aam
or
out
adc
loopne
out
sarb
aaa
inc
cmp
loopne
or
pushf
cmp
in
call
out
call
mov
push
test
clc
sub
mov
xchg
adc
dec
add
xchg
cs
insb
les
ds
mov
in
and
sbb
dec
loopne
hlt
mov
in
hlt
andl
inc
cmp
inc
pop
in
xor
mov
aad
jg
xor
insl
lea
pop
repz
test
orb
outsl
push
jne
in
mov
adc
pop
push
shrb
push
inc
jecxz
shlb
jmp
dec
das
sbb
test
mov
dec
jae
into
add
int
mov
leave
test
gs
cwtl
dec
or
mov
ljmp
push
pop
out
mov
in
loopne
push
cld
jecxz
nop
and
out
enter
jmp
add
cmp
sub
cmp
jb
inc
add
mov
xor
dec
aad
movsl
jne
pop
aas
shr
aaa
es
inc
add
pop
mov
fstpt
sub
jmp
dec
cmpsb
dec
pop
in
int
je
fidivs
popf
fists
addr16
adc
mov
or
pop
xor
scas
fiadds
adc
xchg
int3
ficoml
nop
inc
std
inc
add
scas
jecxz
fisubs
scas
lea
push
lods
imul
push
lods
into
fwait
mov
repz
addr16
pop
pop
jcxz
cmp
or
ficomps
and
mov
lahf
cmp
or
and
sbb
sbb
mov
mov
mov
andl
loop
mov
jns
sub
sub
sahf
fcmovnb
xchg
xor
dec
je
mov
sbb
add
repz
cmp
sbb
sub
mov
jb
dec
mov
or
jmp
sbb
dec
and
shl
inc
push
inc
mov
jae
inc
push
cli
push
cmp
and
xor
pusha
mov
rcll
stc
and
dec
xor
mov
movb
sub
inc
icebp
mov
call
cmc
nop
ret
loope
in
and
movsb
ljmp
mov
ret
jne
imul
stos
test
fistps
jp
add
pop
xchg
in
push
out
add
or
push
fdivrl
pop
mov
pop
mov
dec
sub
pushf
mov
mov
pushf
lret
fsts
mov
cmp
lcall
jl
mov
mov
movsl
lcall
jg
fistpll
mov
divb
push
mov
dec
mov
outsb
dec
and
mov
shrb
add
into
inc
adc
in
iret
std
loope
js
dec
mov
adc
out
sbb
ljmp
aas
sub
cmpsl
cmp
push
lock
and
jg
int
lahf
mov
lea
out
je
xchg
add
sub
and
sbb
push
ss
pop
ds
inc
lret
add
adc
inc
je
sbb
lods
mov
adc
loope
inc
sbb
push
jbe
add
xor
das
movsl
cs
cmp
add
in
dec
push
push
and
jg
cmpsb
push
stos
dec
mov
js
pop
or
jp
daa
xor
js
rorb
sbb
mov
in
sbb
mov
jecxz
les
mov
cmc
cmp
mov
cs
popf
push
out
test
xchg
stos
es
mov
jp
mov
sarb
pop
cmpsb
jne
lds
es
adc
mov
push
jne
mov
sti
pop
std
mov
mul
adc
lret
scas
sbb
and
popf
bound
and
fisttpl
jno
pushl
sub
fstpl
mov
adc
cmc
push
mov
cmpsl
xor
cwtl
orb
addr16
adc
repz
mov
xor
aas
sbb
out
push
xchg
jmp
pop
fnstcw
lods
or
push
mov
std
negl
cmp
sbb
jne
pop
cltd
pop
mov
cwtl
jmp
sbbb
ret
sbb
into
cmp
cltd
icebp
nop
aad
mov
add
jl
shlb
and
and
jge
mov
and
mov
push
xchg
fiaddl
int
jl
mov
fwait
imul
push
scas
jno
ss
test
cmp
sbb
xchg
test
test
rolb
sub
xchg
mov
push
dec
dec
and
ss
adc
jne
and
and
or
subb
add
xlat
rcrb
loope
inc
push
pop
das
sahf
inc
into
lret
push
inc
lock
mov
js
push
mov
pop
mov
mull
sahf
insb
jns
jae
int
ret
fmull
mov
in
rclb
repz
adc
sti
xchg
mov
sub
mov
pop
mov
call
gs
and
les
mov
mov
lods
aaa
mov
ficomps
sub
lret
pop
and
int
icebp
and
pop
movsb
sbb
pop
xchg
ljmp
xor
shll
dec
loopne
in
test
sbb
and
inc
lret
jp
jmp
lods
jmp
dec
xchg
rclb
negl
xlat
dec
sub
ret
popf
pop
mov
inc
jno
imul
mov
nop
push
arpl
nop
stc
sub
mov
in
into
je
jg
mov
sub
mov
xchg
pop
xor
insl
lcall
outsl
jle
orb
enter
addr16
mov
sbb
mov
or
rcrb
inc
out
and
mov
aam
or
jo
push
das
mov
mov
push
pop
lds
inc
data16
call
mov
sub
filds
das
mov
xor
bound
sub
xor
test
lahf
notb
jne
sbb
lret
jge
jle
inc
pop
movsb
push
roll
fmulp
pop
mov
ds
inc
push
in
bound
nop
inc
jmp
push
pop
push
pushl
push
xchg
icebp
or
rcr
cld
cmp
xchg
cltd
loopne
in
xor
jb
jnp
fstpl
and
xor
xchg
push
pop
out
adc
out
stc
repnz
and
sub
enter
mov
dec
add
imul
push
out
std
shl
lea
sbb
add
or
lret
mov
outsb
lret
xchg
pop
xor
ljmp
mov
sbb
es
add
cmc
mov
push
enter
xchg
dec
pop
nop
ret
pushf
icebp
or
ficomps
out
pop
ja
cld
mov
cli
push
iret
fnsave
fcomps
mov
jae
rorl
push
jne
jne
push
nop
pop
pop
shlb
mov
jb
jo
pop
jmp
cli
ss
push
mov
jp
jmp
xor
mov
mov
iret
jae
int3
mov
test
enter
repnz
xchg
mov
mov
jns
jb
iret
push
dec
aaa
push
mov
fldl
imul
sahf
int
movsb
fs
jl
pushf
hlt
outsb
fdivrl
mov
aad
jle
rcrl
pop
mov
adc
mov
xchg
popl
sub
mov
mov
lret
push
fidivl
pop
fimull
and
add
test
adc
mov
sbb
mov
xor
mov
xor
cmp
and
pop
fsubp
mov
cmpsb
jmp
xor
das
xor
into
adc
inc
and
jl
dec
add
xchg
add
adc
sub
xchg
cmpb
cmp
dec
data16
stc
aaa
pop
sub
lret
in
gs
bound
out
mov
inc
outsl
mov
inc
push
push
int
sahf
mov
out
add
jae
dec
cmp
cmp
scas
sbbl
outsl
addr16
xchg
out
sarb
xchg
fimuls
pop
push
out
or
dec
cmc
pop
dec
mov
jb
std
adc
icebp
add
xchg
mov
sub
sub
xchg
imul
lods
mov
add
ljmp
push
shrb
and
mov
sbb
in
pop
ds
pusha
add
loope
in
xchg
pop
outsl
cmp
push
inc
pusha
insb
fsubl
xchg
add
stos
cmp
repz
hlt
in
jnp
jmp
roll
add
add
imul
pop
and
push
test
xchg
pop
cmpsb
cmp
fmuls
xchg
mov
adc
xor
iret
mov
call
xchg
sahf
cwtl
test
ljmp
bound
scas
pop
and
aas
into
sbb
loop
cltd
mov
aad
mov
mov
stos
jno
outsb
js
cmc
pop
mov
loop
adc
xor
sbb
sti
pop
movsl
sbb
sbb
imull
stos
js
pop
jae
lret
fidivs
pop
mov
push
sbb
and
sbb
cli
popf
mov
test
divb
jmp
cmp
mov
cltd
cwtl
cltd
scas
data16
mov
mov
mov
stos
push
shll
inc
dec
lods
jge
sub
mov
in
dec
mov
xor
mov
mov
jmp
ss
clc
adc
mov
xor
fldt
push
mov
and
dec
scas
mov
push
dec
es
xor
dec
sub
jno
lds
mov
dec
outsl
addb
and
sbb
push
pop
push
ret
sub
mov
sbb
fsubrl
cs
lds
push
and
jecxz
loope
xchg
jb
ds
lahf
pop
mov
mov
inc
fwait
in
shll
dec
push
out
jo
out
aas
es
mov
stc
test
aad
mov
xchg
jp
outsl
sub
xor
into
ljmp
pop
adcb
lahf
sub
mov
repnz
int
xor
adc
pop
jns
cmpl
test
clc
adcl
rcrb
int3
stc
test
loopne
aad
fists
fsub
bound
xor
xchg
outsb
ja
mov
dec
rolb
mov
insb
add
xor
adc
test
jbe
ds
push
adc
xchg
test
lods
lods
jmp
cltd
jge
fisubrs
repnz
fsts
sbb
iret
jns
pop
dec
daa
xchg
and
cltd
mov
mov
jp
lcall
mov
push
sbb
inc
cmp
mov
jecxz
popa
mov
sti
rorl
repz
test
sti
hlt
xchg
ds
es
push
mov
ja
testl
and
xlat
mov
pop
mov
dec
sbb
lret
lcall
jns
inc
ja
sbb
jae
xchg
sub
xor
lods
filds
std
mov
push
pop
ja
jmp
jecxz
gs
mov
nop
ficoms
cld
call
insl
pop
negb
pop
cmp
sub
in
and
repnz
sub
call
adc
adc
mov
mov
sub
sbb
les
out
xchg
xor
add
pop
ds
outsb
repnz
fistl
sub
ret
add
mov
insb
push
mov
icebp
jns
cmc
sbbb
push
jo
xchg
xor
scas
cltd
test
popa
or
rol
nop
repnz
pop
add
js
rcll
adc
xlat
inc
loop,pn
out
pop
movsl
arpl
jl
negl
pop
jmp
jmp
into
xor
faddl
mov
xchg
in
pop
push
iret
ret
adc
lret
xorb
imul
pop
arpl
adc
imul
dec
push
pop
sub
fdiv
mov
dec
ror
inc
sub
out
aam
xchg
mov
or
push
stc
insl
loop
jecxz
lret
out
and
call
xor
mov
sub
pop
int3
and
jbe
les
data16
mov
add
dec
insb
dec
xor
dec
xorl
xor
and
lahf
imul
scas
lcall
mov
and
push
ja
sahf
mov
mov
xor
mov
xchg
test
js
jne
cmpsb
xchg
test
lret
add
mov
jbe
dec
adc
scas
outsb
loop
inc
push
cltd
fs
mov
inc
push
fs
mov
fidivl
add
adc
pop
fsubrl
mov
sub
or
push
rcl
dec
push
fnstcw
les
or
dec
cs
in
and
mov
sub
mov
mov
nop
or
addb
dec
clc
xchg
aam
dec
mov
sbb
lds
mov
and
mov
jno
sbb
mov
cmp
fcmovbe
pop
push
xorb
cmc
inc
lock
or
decb
fnstcw
sbb
cmp
in
mov
xchg
sub
add
ss
aas
popa
pushf
adc
pop
into
subl
mov
in
or
mov
icebp
jl
insl
scas
cmpsb
pop
shll
rcrb
xchg
inc
stos
loope
and
jl
cmpsb
adc
cmp
jl
addl
cmp
lock
in
popa
mov
fisttpl
mov
push
lret
add
sti
sub
aam
push
mov
mov
ljmp
fs
push
test
mov
or
xchg
xchg
mov
movsb
out
sbb
je
clc
movsl
rcrl
js
std
pop
sub
cltd
cmpb
lods
dec
fbld
popa
xchg
andb
flds
movsb
shl
mov
mov
xor
int
xchg
pusha
inc
mov
mov
jl
sub
cmpsl
pop
inc
pop
mov
add
fucomip
mov
imul
negl
or
lahf
pop
dec
mov
mov
push
les
add
xchg
mov
jl
and
enter
fisubs
cltd
and
dec
cs
in
cli
xlat
cmc
imulb
pushf
mov
mov
ret
loop
cmpsb
mov
movsb
pop
jne
ficomps
adc
ret
imul
or
iret
loop
daa
cmpsb
fmull
repnz
sbb
test
dec
pop
sahf
ds
insb
jb
lcall
mov
sbb
rcll
mov
push
fstps
insl
aas
push
imul
sbb
scas
sbb
xchg
push
mov
fidivs
ljmp
daa
inc
lods
iret
inc
xlat
inc
jae
xor
push
call
pop
sbb
pop
xchg
sti
enter
andl
cli
outsl
out
loopne
pop
cmp
cmp
loope
adc
cmpsl
ljmp
cmp
cmp
or
pop
push
jne
pop
push
pop
jg
out
mov
mov
push
pmaxub
es
sbb
movsl
mov
ret
xchg
xor
mov
pop
pop
arpl
orb
sub
imul
pop
pop
and
insb
xchg
gs
push
push
es
jmp
nop
xchg
push
mov
mov
lea
stc
xor
filds
lcall
das
inc
push
push
pop
jnp
cs
mov
lahf
mov
cwtl
jns
or
cs
xor
call
pop
rcrb
mov
test
inc
xchg
or
adc
sub
jmp
sub
lods
popa
mov
ret
dec
pop
pop
ljmp
fistps
mov
std
mov
cs
lods
vmovlps
pop
xchg
push
test
es
push
dec
aas
or
fisubrl
clc
jns
mov
sub
mov
idivl
fimull
pop
das
mov
adc
shl
fdivs
iret
or
test
mov
popf
cmp
mov
pop
cmp
lahf
or
jno
push
mov
adc
movsb
sbb
fs
pop
test
inc
mov
xorb
adc
rolb
mov
jle
es
loope
jbe
ud1
sub
les
mov
rcrb
xchg
lea
cltd
inc
loope
mov
and
adc
xchg
sbb
enter
lcall
mov
xor
jne
cmpl
inc
pop
outsb
mov
out
jb
xchg
sub
dec
stos
scas
sbb
stc
cmc
insb
mov
jns
pop
pop
inc
add
pusha
mov
out
std
bound
cmp
ss
int3
movsb
leave
or
dec
lret
test
push
js
jecxz
jbe
mov
out
jle
mov
mov
xchg
or
add
pop
pop
lods
xchg
nop
sbb
aam
sbb
sub
dec
xchg
fwait
and
pop
mov
pop
roll
cmc
test
dec
jl
mov
daa
sub
mov
dec
lret
popf
pop
mov
stos
dec
dec
cmp
cwtl
loope
fisttps
cmc
push
adc
fs
insl
dec
arpl
xor
sub
xor
add
mov
xlat
daa
fistps
sbb
xchg
imul
inc
out
lods
inc
inc
sbb
das
mov
jecxz
sbb
ret
cmovne
xlat
adc
mov
push
out
push
fsts
lds
pop
fdivrl
inc
jmp
dec
jb
jge
movsl
dec
sub
and
cmc
imul
jno
cmp
mov
out
and
and
add
lcall
push
push
xchg
cmp
inc
jbe
dec
popl
cmp
aad
inc
mov
cwtl
insl
jnp
fstpt
pop
mov
cld
mull
scas
stos
fs
push
jbe
inc
jle
bound
mov
xchg
push
and
enter
das
sub
imul
push
and
jbe
mov
ret
gs
data16
jno
sbb
sub
jmp
jp
nop
mov
sarb
and
outsb
enter
pop
push
sahf
shll
sub
fcompl
jne
enter
xchg
maskmovq
notl
mov
xor
movsl
fdiv
mov
mov
lods
jl
in
fcoms
cmpb
lcall
pop
hlt
pop
push
pop
aad
mov
dec
mov
mov
inc
add
mov
mov
dec
mov
jno
sub
lret
mov
adc
test
push
jp
mov
push
cmp
adc
int3
adc
xchg
jb
dec
sub
mov
cmp
movsl
daa
or
lret
xchg
notl
inc
cmc
insl
add
fwait
mov
out
scas
inc
adc
jge
or
call
jmp
jle
stos
or
lock
dec
xor
xor
adc
mov
inc
fldl
repz
in
in
dec
lock
rclb
stos
add
outsl
ret
cld
clc
inc
mov
add
lret
push
dec
sbb
mov
inc
xchg
sbb
mov
imul
dec
call
pop
roll
pop
jg
ffree
pusha
xchg
pop
addl
or
sub
and
out
pop
push
dec
push
adcl
or
mov
loope
mov
enter
push
mov
in
hlt
push
stos
out
push
mov
cmp
ret
out
dec
in
in
lods
in
pop
int3
pop
imul
ficompl
xchg
pushf
pop
xchg
sub
je
sub
jne
mov
dec
cmp
adc
nop
addr16
sbb
jno
dec
aam
xchg
cltd
add
inc
popf
push
lods
xor
rorb
mov
mov
stos
cmp
inc
daa
pop
adc
ljmp
test
mov
ret
stos
lcall
push
xchg
mov
mov
lahf
in
fwait
lds
mov
nop
mov
int3
push
ret
sbb
jnp
stos
adc
stos
pop
mov
repnz
mov
pusha
push
pop
push
sbb
sub
push
std
mov
inc
xlat
pop
in
xchg
int3
loopne
dec
push
or
add
in
dec
dec
xchg
fdiv
mov
xchg
int
sub
int
inc
int
stos
vprotb
xor
clc
aas
sar
popa
aaa
fcmovne
gs
push
out
adc
pop
jb
mov
in
movsb
rclb
iret
sahf
and
scas
jmp
pop
dec
push
mov
call
imul
add
scas
scas
mov
cli
call
mov
loop
outsb
mov
les
fildll
loop
rcll
pushf
or
and
mov
sahf
mov
sbb
pop
add
mov
fsubl
fcmovnbe
movhps
inc
mov
xor
fisubrl
stos
jecxz
sbb
adc
dec
push
mov
test
jmp
jns
mov
sbb
das
iret
mov
sub
aaa
hlt
cli
xor
out
fstpl
pop
add
adc
mov
hlt
or
mull
mov
mov
popf
stos
add
xchg
mov
pop
shr
fwait
clc
push
sti
daa
clc
push
push
or
xchg
jnp
pop
insb
push
xor
lret
popa
sub
push
xchg
inc
xor
push
out
incb
nop
ficoml
add
xor
add
or
push
lock
inc
inc
cli
divb
scas
sub
movsbl
in
jge
shll
sbb
mov
lcall
jo
dec
das
pop
or
mov
inc
pop
dec
cld
aam
lock
fstps
out
out
push
cmp
shlb
xorl
jle
mov
cmpsb
pop
pop
into
jnp
movsl
jmp
lea
lods
pop
jecxz
xchg
sbb
sub
sti
dec
decb
ja
add
push
xchg
dec
xor
sbb
xchg
sbb
mov
mov
scas
stc
lock
rcll
jae
pop
es
cmp
cmp
movsb
xor
xchg
mov
mov
inc
add
mov
rcl
sub
out
jno
and
cmp
filds
lcall
or
add
call
mov
adcl
push
adc
pop
mov
xchg
xorl
add
and
mov
arpl
paddsw
sbb
cmp
daa
movsb
lock
xchg
mov
popa
fs
outsl
sahf
sti
test
mov
xor
jge
cmp
jmp
jp
add
cli
cltd
or
add
mov
enter
push
and
outsl
mov
fcoml
cmpsl
pop
insb
test
or
repnz
mov
rorb
xor
mov
push
jo
jae
hlt
call
or
ficoms
and
scas
arpl
enter
adc
out
jne
mov
lcall
scas
loope
shr
leave
xor
mov
fsubrp
sub
or
shufps
jmp
dec
int
inc
mov
adc
mov
inc
icebp
call
les
pop
adc
bound
leave
lds
push
fsubl
nop
mov
or
in
lahf
push
int3
stc
add
cli
rcrb
adc
aam
sbb
dec
scas
test
jnp
cli
jnp
jo
inc
jne
or
xor
sahf
dec
sub
inc
jp
jno
out
jle
sub
push
jp
sub
in
sub
mov
fs
stos
test
notb
int
in
es
aas
movsb
mov
int3
sub
in
shlb
push
mov
inc
push
or
pushf
lea
roll
sbb
lahf
ss
cmp
jno
repz
aad
add
aad
adc
test
std
push
pop
mov
test
jo
out
hlt
add
adc
mov
pop
imul
sub
mov
xchg
adc
movsl
mov
fisubrs
fsubs
push
js
fstpt
and
mov
adc
add
aaa
jne
aaa
dec
mov
mov
test
inc
sbb
dec
push
pop
jmp
pusha
popa
stos
repz
repz
add
and
jo
and
je
aad
push
mov
stos
rcll
push
pop
mov
push
es
xchg
jmp
in
lea
xchg
rcrb
push
xorl
dec
sub
add
aam
and
stc
add
daa
fldl
mov
std
mov
pop
mov
cs
mov
aas
fcomp
shrl
mov
rcl
cli
insl
and
jmp
lret
pop
sub
jecxz
adc
xchg
lea
hlt
loope
mov
std
fsub
mov
adc
lahf
cltd
cwtl
mov
pusha
xor
mov
sarl
mov
imul
dec
aam
ja
mov
daa
xchg
pop
push
add
notl
test
jae
xor
je
mov
or
lret
add
mov
and
aaa
clc
jmp
cmp
idivb
and
js
push
xorb
xchg
test
lds
and
add
shlb
fdivrs
les
stos
inc
insl
rcr
imul
mov
idivb
fsubrs
ss
mov
push
mov
jle
les
sub
test
xlat
push
shl
enter
cmpsl
std
push
push
inc
mov
push
mov
ds
xlat
sub
xchg
pusha
or
dec
ds
popa
js
add
aas
movsl
repz
and
push
dec
cmp
lods
cmp
mov
push
pusha
lret
jmp
push
bound
in
pop
cwtl
fbstp
sbb
mov
lret
sbbl
ljmp
push
mov
sbb
call
push
pop
xor
iret
in
inc
shlb
outsb
xchg
jmp
pop
frstor
outsl
ds
imul
mov
sbb
testl
sub
fsubrs
sub
es
adc
lock
mov
int3
into
incl
jae
inc
cwtl
mov
fdivr
cmpsb
cli
into
pop
xor
ss
sub
mov
and
xchg
pop
mov
arpl
std
aaa
fucomi
or
rclb
in
jg
dec
dec
iret
gs
mov
push
mov
xchg
mov
or
push
hlt
or
jnp
pop
lds
mov
fcomps
iret
push
mov
jl
sbb
fsub
shl
pushf
cmpsb
shll
push
movsb
jb
pushf
lcall
ss
loopne
push
mov
pop
sub
and
sbb
pop
stc
adc
pusha
inc
sub
push
int3
xchg
pop
push
ss
sahf
repnz
pop
inc
movsb
arpl
inc
inc
xchg
jl
jb
pop
xor
pop
add
cmpsb
cmp
lods
cmp
xchg
hlt
sahf
xchg
movsb
enter
sbb
arpl
popa
jne
inc
dec
pop
insb
out
roll
insl
adc
stos
shlb
or
scas
adc
lock
cs
pop
fcoms
orl
mov
movsl
fsubs
jne
push
cmp
cmp
ds
aad
fistl
sbb
out
clc
das
out
push
mov
mov
sub
cmp
iret
addr16
inc
xor
inc
out
sub
dec
xchg
test
iret
scas
add
sbbb
aaa
lea
push
dec
adc
add
fwait
daa
sbb
mov
or
ds
or
jo
test
or
shll
xchg
sahf
xlat
aad
dec
fidivrs
pop
sahf
cld
hlt
loope
test
sub
movsb
jecxz
movsb
mov
dec
into
lods
xor
lret
push
inc
fcmovne
inc
arpl
loop
push
or
inc
adc
sbb
test
add
jp
stos
divb
sub
xor
ljmp
shll
xchg
aas
jnp
lretw
xor
in
xchg
in
push
sub
arpl
js
dec
add
sbb
pop
push
pop
fxch
enter
xchg
jge
pushf
add
and
lea
xchg
push
fcmovne
xor
and
push
inc
xor
jns
push
pushf
add
cmp
imul
adc
xor
je
dec
cli
mov
cmp
dec
clc
loopne
inc
sub
inc
in
adc
out
lret
or
or
push
out
push
divl
dec
outsb
xor
mov
pop
es
pop
adc
cmp
jmp
ss
jg
pop
and
pop
pop
sbb
mov
or
pop
sub
and
imul
jg
and
popa
ret
inc
mov
or
ret
loop
xor
xorl
pusha
lcall
push
cmp
das
call
data16
inc
fwait
sbb
push
sub
call
fwait
insl
setnp
lret
jl
or
in
lods
shlb
xchg
push
mov
lcall
test
out
sbb
mov
mov
insl
loope
ret
xchg
pop
stc
out
or
push
mov
insb
shl
pop
lock
xlat
cld
push
cmp
bound
push
daa
jns
test
flds
cmp
aad
or
or
xchg
lds
dec
imul
enter
shll
mov
push
jae
jp
cmp
fldcw
out
dec
aad
cmp
cmovge
add
stos
dec
negb
push
lret
outsb
icebp
cli
xlat
add
jg
xchg
out
repnz
jno
les
push
fwait
mov
cmp
adc
xlat
sarb
cltd
test
leave
test
scas
mov
or
push
xchg
xchg
fldt
insl
std
subb
mov
and
in
xor
fnstenv
fs
shr
clc
pop
cmp
xchg
dec
push
in
in
daa
test
push
push
and
jmp
ja
dec
imul
lods
push
mov
mov
rorb
dec
mov
subb
std
push
push
or
cld
xor
icebp
xchg
xor
and
lock
mov
lock
jo
sti
jo
cmpsl
sub
roll
fs
push
add
xor
aaa
imul
jecxz
xchg
imul
int
push
adc
nop
hlt
mov
xor
mov
sub
jmp
sti
aas
sbb
push
std
lea
push
mov
lret
test
fsts
xor
movsb
stos
or
outsb
es
xor
and
je
push
ror
cwtl
pop
inc
or
enter
sbb
cmp
sbbl
rorb
sub
ds
lret
push
int3
fldenv
xor
aas
mov
ja
xor
jecxz
mov
mov
or
push
xorb
sbb
std
mov
insb
out
inc
xor
cmp
inc
insb
cmpsb
stos
add
mov
and
aaa
hlt
push
imul
xchg
pusha
push
and
jne
popa
mov
xor
push
inc
shll
mov
bound
mov
je
jns
or
jmp
xchg
pusha
sub
inc
jge
mov
jge
push
cmp
popf
out
in
and
out
inc
jae
mov
xor
loopne
push
xchg
es
lret
xchg
sbb
leave
fiadds
fcomi
in
sahf
xchg
cmp
faddl
sub
cltd
addr16
xchg
dec
dec
jnp
push
push
mov
inc
lahf
mov
lcall
mov
xchg
xchg
cltd
lret
dec
jg
call
dec
lock
.byte
jmp
rol
mov
cmc
sub
push
call
pusha
jmp
jmp
push
mov
movb
jmp
pushl
popl
push
mov
mov
lea
jmp
call
setge
shld
mov
jmp
call
cmc
xchg
stc
test
sub
test
call
mov
push
pusha
lea
jmp
bsr
dec
shr
rcl
mov
rcl
add
jmp
jmp
pushl
pushf
call
sub
jmp
cmp
add
pusha
call
call
inc
movl
call
mov
jmp
btr
cwtl
mov
pusha
cmc
jmp
stc
sub
jmp
bsr
rol
bts
sub
sets
bswap
movzbw
inc
or
xor
dec
add
pushf
call
jmp
clc
pusha
shr
jmp
jmp
adc
movzww
cmc
sub
call
bswap
jmp
mov
call
jmp
push
lea
jnp
pushf
lea
jne
sar
call
lea
jns
ror
btr
sbb
not
add
btr
bswap
xor
rcl
call
call
call
sub
pushf
shl
pushl
jmp
mov
pushf
push
pushf
lea
jmp
shl
call
inc
movb
push
pushl
decl
call
mov
shr
movw
add
mov
pushf
mov
bt
pusha
add
pushf
pushl
mov
push
lea
jmp
stc
lea
rol
xadd
neg
shld
sar
call
sub
call
movb
mov
pusha
push
push
pushf
lea
jmp
movb
pushf
popl
movl
jmp
mov
pushf
movw
lea
jmp
lea
jne
rol
mov
clc
push
bt
jmp
cmc
rol
push
cmp
xor
bt
sub
stc
call
push
pushf
popl
movw
push
pushl
popl
pushf
mov
movl
lea
jmp
btc
mov
cmp
test
jne
sbb
mov
push
test
sub
clc
stc
shl
push
jmp
pop
lea
pop
pushf
pushf
pushl
lea
jmp
cmc
cmc
add
test
neg
pushf
pushf
cmp
add
pushf
pushl
jmp
mov
push
lea
jmp
mov
push
push
lea
jmp
jmp
pushf
mov
movsbw
pushf
popl
movzbl
movsbl
std
mov
pusha
mov
bswap
std
lea
std
std
movw
xchg
pusha
movsbw
call
jmp
pushf
mov
movb
mov
movw
mov
jmp
pushl
popl
pushf
lea
jmp
sub
push
call
jmp
mov
pusha
push
lea
jmp
mov
pushf
call
add
movw
mov
pushl
pusha
push
pushf
mov
pushf
movb
movb
lea
jmp
dec
mov
clc
cmc
add
pushf
lea
jmp
sub
jmp
mov
pushl
push
pushl
mov
lea
jmp
mov
movw
push
pushl
lea
jmp
pushf
call
pushl
popl
pushf
pushl
movl
mov
lea
jmp
call
btc
cld
aad
mov
not
aas
pop
and
shld
aas
clc
pop
rcl
popf
bswap
pop
bswap
lea
pop
push
movzbw
not
mov
pusha
movzbw
jmp
mov
movb
lea
jmp
jmp
pushf
cmp
pushl
popf
pushf
push
movl
pushf
lea
jmp
push
call
sbb
cld
pop
ror
inc
std
inc
pop
jmp
pushl
lea
je
mov
push
pushf
lea
jmp
cmp
stc
sub
pusha
pushf
mov
mov
pushf
lea
jmp
bt
sub
bt
pushf
pusha
cwtl
cmc
sub
call
aas
rol
xor
aaa
mov
rol
rcr
mov
push
cmc
clc
sub
jnp
add
push
pushf
mov
pusha
lea
jmp
lea
jne
call
pushf
pushf
mov
pushf
push
lea
jmp
mov
pushf
pusha
lea
jmp
pushf
popl
jmp
pushf
popl
pushf
pushf
call
lea
jle
mov
pushf
jmp
mov
movb
pushf
lea
jmp
jmp
mov
push
push
pushf
popl
pusha
push
pushl
popl
push
pushl
push
lea
jmp
clc
cmp
sub
stc
cmc
jmp
pusha
stc
pushf
pushl
popl
bt
pushf
pushf
cmc
add
cmp
pushl
popf
push
pushf
pushf
pushf
lea
jmp
sete
mov
bts
movsbw
mov
push
clc
sub
jae
cmc
add
push
call
mov
pushf
push
lea
jmp
pushl
popl
movl
movb
movw
lea
jmp
pushf
popl
push
pushf
movb
pushl
popl
pushl
lea
jmp
mov
xchg
cmp
sub
pushl
sub
push
mov
call
pushf
xchg
rcr
and
mov
shl
mov
pushf
add
call
pusha
pushf
mov
mov
mov
lea
jmp
test
sub
bt
shr
mov
pusha
movb
mov
mov
jmp
mov
call
and
shrd
rcl
mov
pusha
cmp
test
sub
movl
lea
js
pusha
mov
pushf
movb
movw
pushf
lea
jmp
push
pushf
popl
pushf
jmp
movb
call
pushf
bswap
xchg
mov
jmp
call
sar
adc
or
movzbl
jae
shl
sub
inc
sub
bswap
pushf
movb
inc
sbb
bts
xor
shrd
inc
btr
shrd
sub
movzbw
mov
movb
pusha
ror
shl
add
rol
bswap
sub
shl
shl
call
add
add
adc
setge
mov
shrd
rcl
xor
bsf
xor
not
inc
not
ror
add
mov
jmp
mov
call
shl
movl
mov
pusha
call
lea
jmp
bt
jmp
push
mov
pushl
pusha
pushf
movb
lea
jmp
mov
call
pushf
movzbw
mov
jmp
movzbw
mov
pushf
jmp
pushf
movb
stc
sub
test
push
call
pushl
popl
pushf
mov
lea
jmp
push
mov
mov
pusha
mov
pusha
lea
jmp
cmc
pushf
and
push
mov
push
pushf
popl
movb
pushl
jmp
pushf
jmp
mov
pushf
popl
mov
pushl
popl
mov
lea
jmp
not
stc
cmp
pushf
jmp
pusha
mov
and
mov
push
not
call
call
mov
pushf
popl
push
pushl
popl
pusha
pushl
movb
push
lea
jmp
jmp
bts
not
mov
rcr
inc
sets
shl
mov
cmc
stc
stc
push
sub
jmp
lea
jne
push
mov
pushf
pushl
lea
jmp
lea
jo
mov
jmp
mov
pushl
popl
pusha
lea
jmp
pusha
pushl
mov
pushf
movw
pushf
lea
jmp
lahf
movsbw
mov
push
mov
call
movb
lea
je
push
xor
stc
pushf
xchg
pusha
cmc
mov
pushl
sub
pushf
call
bswap
mov
jmp
call
movb
mov
push
mov
push
mov
pushf
pushf
push
lea
jmp
pusha
call
mov
jmp
pushl
cmc
and
dec
movsbw
setno
stc
mov
push
add
push
jmp
rcl
clc
rcr
ror
dec
rcr
clc
add
sar
xor
pushf
jmp
mov
jmp
sbb
dec
movzbl
stc
pusha
movb
stc
sub
jmp
push
pusha
jmp
call
cmc
stc
not
cmc
bt
movl
test
add
bt
call
bts
shl
mov
bts
add
bsf
call
jmp
sub
pushf
stc
cmc
neg
pushf
call
mov
movw
pushf
push
lea
jmp
call
mov
pushf
rcr
shld
mov
setp
and
mov
test
test
sub
bt
movb
shr
jmp
jmp
rcr
shl
cmp
dec
lea
push
cmp
pushf
mov
pushl
pusha
lea
ja
rcr
xor
mov
push
aad
neg
ror
lea
das
sub
jmp
push
push
mov
mov
mov
jmp
pushf
jmp
pushf
push
mov
call
shld
jmp
pusha
jmp
jmp
pushf
cwtl
not
mov
pushf
bswap
lea
mov
jmp
call
pushf
inc
movzbl
clc
xor
mov
cmp
clc
xor
pusha
call
jmp
add
call
movsbw
stc
stc
mov
cmc
rcl
add
not
mov
mov
jmp
push
pushf
popl
push
jmp
stc
cmc
pusha
stc
add
movb
jmp
pushf
pushl
popl
movb
movb
mov
lea
jmp
add
jmp
jmp
push
jmp
fmul
int3
int3
int3
int3
int3
int3
bound
inc
cmp
jb
jae
dec
je
bound
add
add
xchg
add
add
add
add
add
cld
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jecxz
add
or
mov
into
and
push
imul
jae
insb
fs
outsb
and
insl
insl
insb
ja
popa
and
insl
and
and
push
and
addr16
or
add
add
add
add
pop
sub
je
inc
xchg
je
inc
xchg
je
inc
xchg
jge
rclb
jge
ret
xchg
inc
ds
xchg
jge
les
je
inc
xchg
push
ds
xchg
jge
aam
jge
inc
xchg
jge
int
jo
inc
xchg
jge
xchg
jne
inc
xchg
push
push
imul
add
add
add
add
add
add
add
add
push
inc
add
dec
add
add
in
dec
add
add
add
add
jecxz
add
or
or
add
add
jge
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
roll
add
ja
add
add
add
adc
add
add
add
adc
add
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
out
daa
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
insl
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
jno
bound
add
addl
add
add
add
add
add
add
add
add
add
add
inc
add
inc
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
ret
sub
add
add
adc
add
add
add
pop
add
add
add
add
add
add
add
inc
add
inc
jns
jp
push
insw
push
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
add
jnp
jbe
je
insl
inc
jns
add
inc
add
add
add
add
add
add
add
add
add
add
add
and
add
jns
jp
push
insw
pop
hlt
add
add
add
add
add
add
add
add
add
add
add
arpl
add
sub
pusha
add
ret
add
add
ret
add
add
std
add
add
add
add
add
add
add
inc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
addl
add
add
add
pop
add
add
add
add
add
add
add
addl
add
add
add
pop
add
add
add
add
pop
add
dec
add
add
add
pop
add
add
pop
add
add
add
aas
bound
data16
popa
outsl
jp
jnp
outsl
insl
jo
and
insl
cmp
imul
jo
outsb
push
jno
jo
gs
pusha
insb
outsb
cmp
outsb
sub
outsb
bound
gs
push
data16
push
insl
and
sub
or
and
ja
jbe
ja
insl
gs
and
outsl
insl
jo
and
insl
cmp
imul
jo
outsb
push
jno
jo
gs
pusha
insb
outsb
cmp
outsb
sub
push
or
and
and
jo
pusha
jbe
push
jp
push
or
and
and
and
jno
jb
data16
addr16
jno
jne
outsl
data16
push
or
and
and
and
and
jno
jb
data16
addr16
jnp
pusha
jbe
push
insl
dec
data16
outsl
and
jne
outsl
and
dec
insl
jne
push
jbe
inc
pusha
pusha
data16
and
outsl
jo
and
jb
data16
addr16
jnp
pusha
jbe
push
insl
dec
data16
outsl
cmp
and
and
aas
sub
data16
data16
addr16
jno
jne
outsl
data16
push
or
and
and
sub
pushaw
jbe
push
jp
push
or
and
sub
jno
jo
dec
insl
gs
cmp
bound
data16
popa
outsl
jp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sarb
rcr
imul
imul
mov
jmp
sbb
push
into
or
sub
ljmp
or
mov
pop
push
sti
sahf
cmp
push
arpl
mov
lds
mov
inc
cmp
in
cmpl
loope
fisubs
or
cmp
sbb
aas
nop
movsb
jp
adc
aaa
dec
mov
inc
fstpl
sbbb
imul
repz
push
repz
ret
into
std
add
fistps
aaa
add
adc
sbb
cs
clc
sahf
addr16
int
ja
hlt
push
cmp
push
cmp
or
ret
sbb
fs
movsb
add
out
rorl
xor
imul
test
les
testb
fistl
jmp
test
inc
add
ljmp
mov
push
sub
pop
test
cld
ja
jnp
lds
daa
push
les
nop
push
add
mov
dec
cld
aaa
daa
mov
pop
mov
push
ljmp
cmp
cli
cld
cld
add
mov
mov
arpl
jb
add
mov
fiadds
add
aam
add
cli
xchg
cmp
je
inc
in
test
pop
call
inc
test
xchg
fsubs
fisttpll
inc
cmc
jne
fwait
insb
push
fistpll
daa
fdivrl
jge
fldcw
sbb
jecxz
lea
popf
or
push
out
scas
aas
push
xchg
pop
sti
jo
cmp
out
xchg
iret
cmp
dec
loop
ret
mov
mov
or
fcompl
enter
lahf
mov
pop
add
ljmp
daa
arpl
xchg
movb
negb
or
arpl
mov
and
lea
push
push
push
jno
inc
mov
mov
add
sbb
ss
test
or
push
sbb
sbb
js
sbb
inc
sub
fnstsw
popf
in
xchg
rolb
cld
jl
mov
push
adc
xor
lahf
outsb
jae
lahf
add
test
adc
xchg
xor
rolb
sahf
cmp
cmp
out
xor
jo
repnz
scas
mov
add
mov
pop
cltd
test
std
ret
mov
daa
cmp
jmp
mov
add
mov
or
pop
daa
cld
ja
rcpps
ja
xor
aaa
add
loope
movsb
jmp
inc
mov
jecxz
mov
adc
clc
fstl
jl
xor
pop
mov
pop
jnp
sbb
xorb
mov
lods
xchg
adc
inc
or
popa
sbbb
testb
xchg
mov
mov
jnp
call
pusha
jae
xchg
and
fiadds
lds
scas
je
in
xorb
jns
push
cli
aas
sti
test
js
cli
pop
jne
push
adc
pop
xchg
js
je
sbb
add
adc
fcompl
sbb
daa
or
push
adc
inc
daa
pop
mov
ljmp
inc
add
sar
fpatan
add
out
ds
std
add
ja
out
cmpl
loop
fcomi
jns
out
call
mov
repz
fsub
jb
nop
mov
rorb
repz
out
lret
lcall
out
in
pop
fwait
sti
ss
inc
jb
rorl
bnd
repz
out
add
aam
loop
out
lcall
repz
fsub
jb
add
mov
fcomi
and
out
jnp
jl
or
fdivp
or
out
fld
dec
mov
jl
out
add
out
mov
fcomi
cmp
out
mov
test
repz
jb
fstpt
repz
out
lcall
repz
out
test
popf
rorb
fsub
jb
add
fcomi
inc
jb
xchg
jp
pushf
test
repz
out
xchg
push
insl
or
out
outsl
fdivl
repz
out
je
dec
ret
aam
aam
cmp
out
xor
jo
cmp
fcomi
add
out
xchg
sub
fdivp
stc
jb
or
aam
int3
aam
jb
aas
js
jle
fdivp
or
out
or
sbb
iret
aam
cmp
out
dec
ret
sbb
fsub
jb
ret
hlt
ds
sub
out
sub
mov
out
mov
pop
fcomi
neg
out
dec
js
in
or
repz
fucom
jb
pop
mov
repz
fsub
jb
cmp
lock
fcomi
or
out
lcall
fdivp
aaa
fsub
jb
sub
lods
or
repz
out
jb
mov
repz
es
cs
or
repz
out
cmp
xchg
aad
or
repz
out
or
sub
jb
cltd
fistpl
cmp
repz
jb
mov
js
xchg
fcomi
sbb
out
sbb
aam
popa
fsub
jb
testb
or
fcomi
out
fsub
jb
ds
faddl
fcomi
out
out
cmp
gs
add
inc
testb
inc
pop
add
lds
mov
mov
lahf
mov
and
mov
or
push
push
push
adc
aaa
daa
lahf
les
dec
inc
cmp
adc
popf
pop
add
lods
scas
ja
ss
mov
lods
movsb
xlat
idivl
insb
lret
lods
jg
push
ret
xchg
dec
insl
add
imul
int
mov
test
adc
mov
xchg
test
pusha
leave
xchg
and
push
das
mov
inc
add
push
imul
es
clc
mov
or
in
and
test
sbb
leave
adcb
mov
filds
pushf
insb
xor
xor
pop
pop
sbb
inc
imul
sub
pop
jno
popf
sbb
scas
pop
imul
jle
mov
fbstp
imul
out
pop
repnz
jb
xor
das
cltd
lock
scas
pop
lea
push
orb
into
mov
push
sub
add
enter
cmp
mov
loope
mov
xchg
popf
jne
jle
out
scas
mov
xor
imul
stc
push
call
pop
js
sbb
repz
sti
mov
or
in
jecxz
or
cs
ja
test
mov
jnp
adc
mov
push
aas
repz
mov
sub
push
adc
int
sbb
insl
dec
add
lds
daa
decb
test
add
sub
sti
cli
lahf
jmp
lods
add
les
daa
clc
icebp
mov
xor
sbb
push
or
add
jmp
add
add
and
jle
ja
pop
fsts
add
jp
scas
sub
fmull
adc
or
adcb
jle
out
sbb
push
insb
fwait
and
mov
leave
push
andb
cltd
dec
mov
xchg
pop
mov
negb
jle
into
mov
mov
mov
sahf
pop
ljmp
scas
add
cs
pop
hlt
and
pusha
pop
push
ldmxcsr
imull
shll
insl
test
ds
popa
dec
scas
pop
data16
dec
xor
adc
movsl
call
pop
xchg
fbstp
xor
sub
mov
jmp
jno
add
xchg
les
daa
iret
cli
cmp
cld
ja
pop
lahf
jmp
pop
add
ljmp
add
mov
setg
xor
pop
daa
loop
addr16
aaa
or
push
inc
add
gs
ret
lds
mov
data16
mov
or
ret
mov
push
push
adc
sub
add
add
add
sti
lds
daa
loop
mov
dec
gs
testb
or
cmp
add
mov
jmp
cmp
add
sti
mov
div
gs
jecxz
lods
ljmp
daa
sub
in
js
add
inc
daa
pop
mov
daa
adc
lds
pop
push
or
hlt
inc
add
lahf
mov
pop
or
push
xor
lahf
mov
or
notl
pop
daa
add
aaa
ljmp
sub
lods
mov
aas
out
clc
adc
aad
test
mov
movb
cmp
lcall
popa
outsl
insb
jns
pusha
pop
in
mov
rcll
cld
mov
insl
lock
sub
aam
flds
dec
mull
mov
enter
ret
in
int
xchg
or
push
test
sub
mov
test
fucomi
xor
adc
adc
stc
int
xor
repnz
sbb
movsb
push
sti
pop
or
rep
lahf
repnz
jmp
pop
adc
pop
xchg
add
mov
paddw
div
fucomi
insb
inc
add
sti
xchg
cld
aaa
daa
ljmp
cmp
add
ljmp
shr
mov
add
adc
scas
cmp
add
popf
mov
movsl
mov
or
xlat
dec
mov
movsl
idivb
sti
cmpb
cli
iret
pushf
pushf
ret
repz
xchg
push
mov
pop
or
jp
adc
aas
xor
rorb
out
mov
mov
mov
mov
jns
shl
xor
cmp
lcall
jne
shll
xchg
dec
and
fisubl
mov
data16
xor
lock
sub
insl
cmc
stos
lds
jne,pn
fcompl
pand
pop
loop
add
xchg
add
arpl
push
push
das
xor
pop
daa
dec
xchg
imul
or
addr16
xor
lods
rolb
movsb
inc
lds
lods
mov
insb
xor
xchg
inc
cmovl
ret
lods
mov
sub
mov
dec
xchg
lret
jg
mov
inc
add
in
push
fldcw
xchg
lcall
xchg
fs
jecxz
icebp
pop
xor
fldcw
mov
jmp
scas
lret
sub
inc
rorl
push
test
add
mov
add
fcompl
sbb
add
ljmp
daa
or
gs
ret
push
push
adc
sbb
int
mov
mov
add
cmp
pop
mov
in
sti
dec
stos
cmpsb
out
fidivs
gs
adc
mov
icebp
and
les
ret
dec
fisubs
lds
cmp
or
aas
mov
loop
in
push
int
subb
es
sub
fidivrs
outsb
and
pop
insb
jae
lods
rcll
mov
or
fsubs
into
out
imul
push
aas
scas
jg
mov
das
fcompl
sub
jmp
dec
add
jmp
mov
add
jmp
mov
add
lahf
les
daa
push
stos
lahf
mov
sub
cld
jbe
add
jg
add
gs
shlb
rorb
inc
cld
add
add
addr16
adc
icebp
lods
jmp
mov
add
push
ret
hlt
inc
out
xlat
sbb
outsb
xchg
loopne
mov
adc
or
xchg
fnstsw
pop
int3
je
fwait
sbb
mov
inc
xlat
test
das
xor
dec
out
les
mov
shlb
test
xor
mov
hlt
jmp
pop
xchg
aaa
mov
xchg
scas
cwtl
test
test
push
jle
inc
jne
cmp
lret
xlat
cs
ss
icebp
xor
xchg
add
fists
pop
stos
mov
dec
or
mov
in
cmp
jo
adcl
push
cwtl
mov
xchg
push
mov
dec
adc
ja
cmp
pop
xchg
mov
mov
adcl
dec
addr16
mov
aas
mov
es
mov
inc
cwtl
and
inc
jge
adc
nop
loop
and
dec
cld
insb
pop
push
sub
les
ret
sub
cmp
clc
cmp
adc
clc
mov
sub
aam
fidivrs
xor
xor
aaa
jae
sbb
pop
popa
in
push
cmp
mov
mov
imulb
scas
pop
xor
test
mov
mov
add
add
cmp
mov
add
notb
ret
adcb
imul
or
and
sbbl
jecxz
mov
inc
lahf
lds
push
movsb
outsl
shll
mov
dec
je
pop
fmulp
jg
mov
and
int3
dec
les
bound
mov
cs
cmp
mov
out
sbb
mov
pop
push
and
mov
movsb
dec
cmp
lahf
sub
fsubrl
xchg
jno
popa
cli
adc
call
daa
fmuls
add
lods
add
fs
dec
cmp
scas
inc
adc
mov
mov
or
mov
xchg
inc
xor
inc
das
sbb
out
orb
int
insl
dec
mov
mov
sub
cmpsl
mov
inc
lds
mov
mov
mov
subb
mov
xchg
adc
test
repz
jns
mov
add
push
jg
lock
pop
mov
inc
test
out
das
shlb
mov
or
lahf
jae
mov
adc
jno
fsubrl
cli
jno
or
into
data16
popf
push
jg
add
pop
pop
test
ret
pop
add
lea
and
sbb
jns
insb
data16
add
into
gs
mov
pop
aaa
insl
aad
inc
sbb
data16
les
mov
lock
shll
jge
iret
cmpsb
and
jo
mov
test
or
xor
sub
push
in
insb
cs
mov
cwtl
jp
imul
dec
jae
imul
mov
out
iret
mov
ror
rorl
xlat
push
inc
cmp
pop
shlb
fists
notl
mov
jbe
popa
jbe
loopne
adc
dec
adc
scas
or
sub
mov
pop
mov
daa
sub
mov
mov
lahf
lds
daa
daa
pop
ljmp
mov
mov
push
pop
ds
xchg
leave
jecxz
ret
aaa
xchg
in
cmpsl
pop
insl
test
xchg
xchg
jb
out
adc
xor
pushf
clc
gs
sbb
mov
ret
jbe
sahf
lea
xchg
data16
add
out
dec
jo
js
xor
dec
add
sub
flds
loop
mov
cmp
mov
add
add
add
cmc
fisttpl
test
add
shrl
hlt
adc
fsts
gs
xchg
rcl
push
mov
pop
sti
or
add
dec
fdivrl
ret
roll
xchg
scas
and
push
insl
sahf
inc
jae
scas
out
pop
jae
stos
xchg
jno
pushf
arpl
in
adc
div
fimuls
out
adc
lret
dec
cmp
ljmp
adc
test
pop
adc
out
mov
cli
popa
hlt
cld
dec
push
loop
fcompl
rcll
ljmp
add
out
sub
int
push
cltd
faddp
xchg
call
xchg
xor
sbb
xor
mov
mov
ss
cmp
stos
and
jle
pop
adc
int
push
mov
lds
sub
xlat
sub
pop
adc
or
sarb
xor
xchg
call
xchg
pop
mov
and
shrl
pop
jne
lret
jne
imul
cmp
xchg
cmp
sub
sbb
ds
loop
repz
sub
mov
mov
cltd
int
ds
sub
int
mov
and
jne
mov
fmull
shll
mov
push
test
in
sub
fidivrs
jecxz
int3
adc
das
push
scas
les
cmp
sti
or
gs
mov
clc
inc
inc
cmp
sub
and
inc
mov
adc
cs
fcompl
push
push
imul
lods
adc
fs
pop
xorl
adc
sub
cld
addr16
dec
mov
lahf
aad
cmc
shl
sub
xor
sub
mov
pop
aas
jge
shll
sub
sub
dec
pop
mov
pmuludq
jb
imul
pop
adc
ljmp
jns
add
push
sbb
mov
pop
daa
icebp
dec
push
adc
pop
daa
mov
or
inc
daa
and
outsb
xchg
push
lahf
imul
outsb
xchg
ljmp
test
pop
gs
arpl
gs
aad
ja
sub
adc
cld
ja
aaa
roll
inc
cld
add
mov
mov
and
or
mov
push
push
adc
push
lcall
outsb
sub
add
or
or
or
add
subl
out
in
icebp
xor
adcb
push
or
stos
les
sbb
aaa
nop
push
add
insl
xchg
lret
sbb
or
out
jmp
pop
mov
aas
out
or
mov
cmp
test
stc
aam
outsl
add
jne
cmp
icebp
inc
xor
mov
fistps
push
stc
aad
mov
push
sbbl
xchg
testl
out
aam
cmpsl
idiv
dec
cmc
in
sub
insb
out
and
mov
out
loope
out
add
mov
imulb
xchg
dec
out
mov
mov
lods
mov
xchg
push
test
stc
pop
or
push
fstp
xor
test
pop
testl
es
jecxz
adc
shr
into
das
dec
or
es
out
ljmp
jmp
mov
int3
aam
xorb
hlt
pop
insb
mov
or
enter
fistpl
or
notl
out
or
sbb
test
pop
and
cmp
mov
pop
clc
cmp
sbb
add
or
daa
insl
mov
inc
jp
dec
pop
int
sbb
adc
jle
mov
and
adc
or
sbb
out
lahf
dec
nop
and
add
pop
int
out
fcmove
push
pop
lock
cltd
mov
sbb
orl
jl
out
add
mov
ret
cmc
cmp
aam
clc
adc
pop
jecxz
negb
repnz
cld
cmpsb
outsb
loope
pop
sbb
xlat
cmovle
mov
adc
mov
addb
out
sbb
test
cmp
push
dec
ficoms
int3
out
inc
or
in
add
scas
and
pusha
sti
xor
lret
mov
add
add
clc
inc
fs
mov
lret
or
aam
sbb
mov
in
lret
xchg
mov
insb
sub
fwait
adc
sbb
jge
scas
lcall
and
mull
or
pop
nop
cmc
adc
sub
insb
jmp
orl
push
and
std
aas
pop
inc
sub
xchg
and
or
pop
xlat
pop
add
cmovg
inc
nop
dec
sub
insb
dec
jbe
fwait
jno
cli
pop
lods
inc
xor
sub
roll
inc
or
add
pop
in
fpatan
cmp
adc
push
cmpb
pusha
ss
adc
out
jnp
cmp
imul
add
mov
insb
lret
shll
jbe
fs
imul
dec
xor
fcomp
stc
adc
pop
test
fnsave
cmpsl
fwait
pop
sub
or
in
into
cwtl
push
or
or
mov
and
xchg
jge
dec
out
test
ret
lret
pop
or
mov
les
into
adc
cwtl
orb
jg
adc
in
lret
mov
mov
sub
fucom
xor
jo
or
lahf
aas
mov
xlat
add
sub
inc
daa
decb
or
mov
fimuls
push
int3
jmp
fucomp
popa
nop
andl
inc
xor
sub
loop
iret
iret
pop
or
rcrb
loope
dec
in
dec
orl
movsb
jecxz
in
cld
push
dec
push
jbe
mov
mov
imul
xchg
int
cltd
leave
push
call
aam
pop
inc
shrl
stos
sbb
in
insb
push
insl
jl
jno
lods
scas
adc
jge
xor
add
je
imul
push
jle
pop
out
add
sub
sub
data16
dec
sub
jl
or
les
nop
sbb
xlat
loope
aam
sbb
enter
les
pop
inc
nop
rorb
jbe
inc
in
add
inc
dec
sub
test
adc
push
jp
pop
or
int
jmp
ljmp
lods
mov
jb
sbb
xchg
test
insb
and
cmp
xchg
cmpsb
fistps
xchg
ret
sarw
out
sbb
sub
cmp
cmp
push
dec
jp
and
loop
inc
hlt
adc
add
push
aaa
ffreep
std
shlb
mov
pop
repnz
sahf
or
and
mov
dec
or
inc
outsl
inc
fwait
nop
fldl
jbe
push
mov
mov
pusha
xchg
fs
inc
push
stos
sarb
test
in
jae
cvtps2pd
ds
out
xchg
out
addr16
sub
jo
pmaxsw
cmc
or
aam
movsl
jb
cmp
repz
pop
les
rorb
pop
sbbb
mov
xchg
sub
inc
test
sarb
fucomip
push
fstl
data16
and
in
outsl
loop
insb
mov
cmp
std
mov
sub
cs
pop
jmp
inc
out
dec
adc
out
dec
mov
sub
pushf
ds
add
adc
aam
sbb
in
push
rcrb
roll
test
addr16
je
mov
mov
sub
iret
dec
jbe
scas
cmpsb
dec
push
ljmp
call
inc
in
push
fmulp
adc
push
test
inc
mov
mov
add
cmc
xchg
pushf
push
arpl
pop
hlt
hlt
fists
adc
fsubr
adc
push
xchg
fcoms
xchg
xor
test
pop
xchg
lock
cmp
frstor
testl
and
push
cmp
sbb
fs
inc
roll
cltd
fadd
dec
cmpsl
push
xchg
sub
test
or
in
pop
and
data16
and
or
cmpsl
shr
dec
out
aad
int3
je
movsb
test
decl
mov
mov
lret
out
popf
ret
mov
mov
mov
sbb
nopl
fs
fs
sbb
and
pop
filds
mov
mov
or
imulb
cmp
popl
cmp
aaa
int
jle
sbb
and
or
xchg
lods
dec
and
push
negb
jle
inc
lret
lcall
xor
adc
std
call
stos
inc
bound
add
or
mov
pop
rorl
sti
inc
pop
dec
add
cmc
out
xor
repnz
test
push
mov
shrl
cmp
xchg
pop
jge
stc
fists
fisttpll
mov
xchg
bound
mov
test
repz
notb
shrl
dec
mov
lock
lahf
test
movl
dec
sbb
or
popf
scas
xchg
das
clc
shl
int
pop
fs
repnz
hlt
add
cmp
inc
fisttpll
mul
push
cmc
pop
ja
sbb
jbe
mov
and
je
fidivs
pop
push
test
xchg
xor
ljmp
pop
xlat
leave
les
jg
pop
fs
dec
jne
int
xor
xor
out
sbb
xchg
cmp
mov
push
or
adc
mov
add
xchg
cli
pop
cmp
cmp
pusha
popf
inc
mov
sbb
loopne
xor
cmpl
sub
inc
mov
xor
out
inc
sub
or
sbb
mov
or
jae
jo
or
lds
outsb
aaa
add
add
iret
or
mov
sub
mov
pop
cwtl
mov
addb
insb
jmp
mov
insb
sub
lcall
jl
dec
push
cmp
inc
pop
inc
jle
or
test
ljmp
or
imul
lds
dec
mov
xor
adc
push
dec
inc
divl
sbb
lret
out
jg
mov
mov
jmp
icebp
stc
int
adc
pop
xor
mov
out
dec
popf
xchg
loop
mov
daa
frstor
test
push
sub
cmp
mov
push
test
in
or
je
cmpl
or
popf
sub
js
test
cld
cmpsl
fstps
mov
xchg
pushf
or
push
pop
sbb
inc
test
xor
mov
cmp
mov
and
aas
mov
jle
mov
repz
fs
push
mov
adc
add
pushf
xor
insl
iret
ds
test
sbb
cmp
push
lret
iret
dec
mov
pop
out
jno
push
or
and
mov
test
dec
in
fidivrs
lea
test
push
pop
inc
ds
test
dec
jb
mov
and
scas
xchg
adc
dec
pop
xchg
cld
pop
in
cs
sub
test
lahf
mov
cmp
pop
fstp
sbb
jmp
mov
dec
dec
lcall
test
push
test
int3
xchg
fwait
lret
fidivl
in
sub
lea
fwait
or
imul
lret
pushf
xor
sub
test
xchg
dec
pushf
cmpl
mov
mov
and
and
pop
mov
push
dec
add
mov
pop
mov
mov
test
dec
test
push
add
sqrtps
dec
mov
dec
xlat
shlb
ficompl
push
add
mov
shlb
sub
lret
lods
xchg
xchg
lret
inc
inc
inc
cs
and
mov
push
add
lahf
xor
insb
mov
nop
and
or
iret
sti
lahf
imul
or
push
in
out
addr16
add
in
ljmp
sub
adc
mov
add
pop
dec
push
push
or
adc
leave
jp
inc
xchg
fisubrl
and
lcall
ds
sti
loope
xlat
pop
sahf
jmp
mov
pop
dec
movntq
cmp
into
dec
cmp
out
lock
sbb
and
mov
xor
cmp
adcb
inc
lcall
fisttpll
sbb
cmovne
fwait
enter
fs
lret
mov
inc
xor
push
inc
cmp
xchg
push
jmp
add
add
adc
iret
sub
repnz
insb
xchg
xchg
and
push
inc
dec
pop
out
cmp
inc
sti
dec
out
addr16
mov
sub
or
dec
and
xchg
insl
xor
xchg
mov
lret
inc
push
mov
pop
xchg
sub
bound
push
test
sar
inc
ja
scas
push
mov
pop
test
xor
repz
cmp
ret
sbb
lret
scas
xor
ret
inc
outsl
in
sbb
pop
push
insb
push
xchg
add
xchg
int3
ja
or
sar
int3
pop
dec
dec
or
pop
out
cmc
lahf
mull
sub
mov
or
int3
cmc
xchg
into
and
pusha
in
mov
mov
xchg
inc
out
sarb
pop
mov
mov
xor
push
pop
frstor
lea
sbb
iret
or
cmp
and
and
ret
sub
pop
cmpsb
popf
imul
int3
std
mov
xchg
lcall
stc
xlat
mov
add
dec
inc
into
mov
lock
and
in
pop
pop
popf
adc
xor
iret
jp
add
adc
int3
xchg
inc
inc
imul
rorb
inc
adc
into
out
sub
cmp
add
lods
sub
cmp
imul
cmp
adc
sub
es
xorb
pop
in
cmpsl
les
cli
xchg
test
add
sbb
cmpsl
pop
outsl
or
mov
adc
sub
mov
mov
pop
shrl
out
lret
icebp
sub
add
add
dec
in
and
stos
mov
sub
test
jns
rcll
push
adc
xchg
insl
sub
fistpll
aas
enter
or
jge
push
call
pop
aam
mov
jae
jb
lret
xchg
push
lret
aas
sbb
pop
sub
rorl
xchg
sub
in
fs
add
in
or
lcall
out
xor
rcll
addl
inc
pushf
cmpsb
mov
in
push
scas
and
mov
fs
js
mov
pop
pushf
dec
sub
stos
das
outsb
out
setno
in
adc
testl
enter
inc
and
jae
das
fs
cmpsl
xchg
sbb
add
push
inc
clc
lcall
loop
lret
pop
dec
lcall
loop
jecxz
dec
xchg
push
mov
or
cltd
lret
add
xor
insb
mov
in
aas
pop
int3
subb
mov
lahf
out
ds
add
mov
add
out
cmp
test
jmp
jae
jo
cwtl
cmp
lret
cmc
xchg
pop
fdivrl
or
lcall
icebp
ljmp
push
cli
shrl
add
mov
mov
jbe
inc
or
push
lret
or
xchg
cs
push
fsubs
sub
push
add
jge
push
mov
icebp
mov
pop
movsb
inc
in
sti
hlt
mov
insb
mov
sbb
mov
lret
cmp
adc
pop
adc
pop
and
aas
fldl
and
repz
movsb
push
mov
push
fcomps
std
call
sbb
dec
fists
cmc
xchg
fists
int
movsb
repz
and
add
lret
and
test
sbbl
in
daa
adc
and
nop
mov
and
das
push
out
push
lret
cmp
pop
in
call
pushf
adc
inc
dec
insb
cmp
das
cmpsl
mov
pop
enter
sbb
dec
cli
add
mov
inc
lahf
inc
insl
sub
push
test
sbb
insl
or
and
div
cmp
jne
popf
inc
dec
inc
cmp
push
xchg
mov
sti
xchg
pop
sbb
and
sbb
inc
cmp
in
and
fildl
mov
jp
or
test
jno
pushf
insl
sbb
insb
stos
sub
push
notb
and
jg
inc
push
mov
xor
sbb
xorl
aad
mov
sbb
loopne
xchg
rolb
or
sti
fisttpll
mov
sbb
ret
cwtl
sbb
and
mov
mov
nop
or
out
push
pop
sbb
sbb
xorb
push
lock
outsl
cmp
mov
mov
and
test
int3
mov
dec
sbb
out
iret
cs
fisubl
inc
push
dec
inc
adc
mov
iret
mov
test
test
decl
mov
insb
cltd
mov
push
push
dec
js
in
test
mov
rclb
mov
jbe
fdivrs
push
or
test
and
jge
cmp
int
and
dec
pop
and
push
inc
adc
fcmovnu
lea
in
mov
sbb
xchg
sbb
nop
cwtl
lea
mov
pop
pushf
pop
sbb
sbb
mov
add
lods
push
inc
dec
pop
add
inc
pop
lcall
sbb
inc
dec
sub
jp
adc
test
inc
sbb
or
xor
pushf
or
mov
add
xchg
push
sbb
test
or
in
sbb
das
xchg
es
and
mov
cmp
pop
or
shll
push
nop
mov
inc
cmp
mov
adc
out
push
sub
int
push
lea
dec
push
or
sub
repnz
xchg
mov
out
dec
dec
adcb
addr16
xchg
or
xchg
jb
fdiv
ret
xor
mov
fistpll
pop
push
leave
in
bound
pusha
in
pushl
sti
add
imul
dec
dec
inc
lods
add
mov
outsb
dec
mov
pop
pop
push
in
test
mov
stc
mov
push
xor
mov
or
aam
mov
mov
cmc
sbb
push
mov
loopne
out
repz
fcoml
cwtl
ds
out
xchg
loop
nop
mov
inc
lret
mov
inc
and
pop
xchg
sbb
adc
sub
mov
dec
xor
lahf
xor
arpl
sub
pop
lret
aam
shrl
sbb
cld
insb
mov
xchg
mov
in
lods
pushf
mov
dec
leave
mov
xor
sahf
pop
mov
test
jo
xlat
fiaddl
mov
fldcw
movsl
into
sub
xchg
out
hlt
or
pop
sbb
mov
and
cmc
inc
adc
out
adc
or
lods
or
test
pop
aaa
add
sub
push
mov
sbb
nop
insb
jmp
cld
push
out
sbb
popf
ret
add
shrb
cmc
ljmp
cli
fcoms
sub
push
js
lea
iret
inc
enter
gs
cmpsl
popf
cld
sub
pop
in
adc
sbb
out
adc
pushf
out
push
xor
movsl
mov
fs
push
mov
xchg
push
mov
or
bound
cmp
mov
test
aas
pusha
mov
inc
data16
bound
jb
xchg
lahf
clc
test
pop
and
pop
insb
das
shll
xchg
pushf
xchg
nop
hlt
or
cmpb
sub
mov
in
inc
in
and
pop
dec
pushf
cs
lea
xchg
mov
adc
or
stc
cmp
mov
mov
pushf
or
sub
fldt
mov
push
in
dec
or
mov
cmp
imul
add
sub
pop
lcall
pushf
xchg
leave
test
insb
into
pop
mov
enter
xor
xor
int3
aam
mov
sbb
or
mov
pusha
dec
mov
mov
rolb
rcrb
outsb
mov
inc
fsts
push
xchg
out
inc
push
or
push
add
pop
in
shll
add
popa
sbb
or
out
inc
dec
js
enter
inc
cmc
sbb
aaa
mov
inc
mov
test
xchg
inc
hlt
sub
or
adc
movsl
das
orl
add
std
lcall
and
jl
mov
sbb
call
cld
push
or
add
mov
add
jmp
out
mov
movsl
xor
or
sbb
xor
test
xchg
in
fsubs
mov
in
ss
mov
ss
out
hlt
lret
inc
lock
jmp
add
dec
fs
or
stc
loop
sub
mov
sub
lods
in
sti
fs
xor
aas
in
cmp
js
pushf
lcall
stos
les
mov
lock
loopne
xor
ja
popl
loopne
test
addr16
xorl
add
bswap
aaa
xchg
inc
mov
pop
arpl
pushf
mov
push
dec
sub
in
xchg
xchg
test
cmp
mov
sbb
cld
or
call
leave
add
jecxz
cltd
pop
xchg
push
test
fsubrp
ret
cmpsb
mov
xchg
into
lds
cld
inc
cld
xor
sbb
in
inc
xor
dec
jl
mov
jp
mov
lcall
or
mov
or
mov
sub
sub
bswap
arpl
jae
iret
out
andl
mov
push
lret
repnz
test
aam
jge
add
sub
cld
mov
push
insl
inc
cmc
mov
lods
loopne
push
push
movl
dec
xchg
mov
cmp
sti
insb
outsl
leave
push
cmp
xacquire
mov
ljmp
sbb
or
pop
icebp
sbb
or
rcll
sbb
mov
inc
ss
test
xchg
dec
or
mov
pushf
nop
push
into
sbb
or
mov
insb
pushf
jbe
shll
sar
faddl
in
inc
les
pop
push
pushf
fdivrl
sarl
add
mov
pop
popf
in
fsub
sub
jb
pop
xchg
sub
pop
sti
mov
xchg
insb
fsts
fsts
push
push
xorl
in
bound
dec
test
xchg
xlat
mov
add
add
inc
sti
in
push
xchg
arpl
add
out
push
sub
push
loopne
lahf
addr16
pop
sub
pushfw
sub
in
fistl
xchg
scas
into
push
xchg
jae
lock
inc
ret
in
adc
cld
mov
adc
push
int
pop
int3
cltd
adc
fidivrl
lret
ficomps
out
xor
pop
idiv
aaa
stc
or
in
pop
dec
xor
ret
jne
shlb
sub
les
sbb
fsubrl
scas
int3
lcall
stc
lret
mov
mov
fadds
loopne
or
jge
cld
pop
hlt
hlt
nop
xor
out
and
fs
fwait
xlat
mov
xchg
push
ret
mov
sahf
add
fmull
fdivrl
out
xor
sub
int3
adc
mov
imul
jns
cmpsl
xchg
mov
push
fsubl
adc
lcall
imul
push
ret
ss
add
or
loop
repz
jge
insl
mov
fs
sub
arpl
jo
shl
sub
sahf
cs
roll
jnp
roll
sbb
aam
cmp
insl
xor
add
ja
mov
in
outsl
add
xchg
add
xchg
or
add
add
or
mul
js
mov
pop
mov
or
mov
jecxz
push
and
mov
inc
dec
mov
or
out
mov
mov
aas
dec
cmp
xor
inc
mov
jb
lods
cwtl
loope
add
popa
mov
pop
mov
jge
or
out
jg
cmp
and
call
cld
xchg
push
nop
adc
cli
loope
add
lcall
popf
sub
sbb
in
xchg
mov
or
lret
or
lcall
fbstp
and
jge
cmp
loope
xchg
lahf
mov
aam
lcall
test
lock
ja
adc
hlt
dec
push
push
jne
xchg
and
in
or
lret
mov
iret
arpl
nop
cmp
mov
push
lods
xlat
jne
negl
orb
iret
push
push
sahf
rcrb
adc
and
iret
mov
pop
adc
push
adc
inc
cltd
int
sub
das
fidivrs
in
gs
pop
xchg
cmp
je
sbb
pop
cld
ret
std
test
out
or
cmp
or
outsb
test
mov
push
pushf
xchg
and
mov
cmp
nop
inc
cwtl
mov
out
push
jl
mov
mov
push
push
dec
pop
lret
add
sub
insb
xchg
fs
cmpsb
cmp
push
mov
sti
mov
mov
pop
mov
sbb
mov
sbb
outsl
fsubr
sbb
add
push
mov
or
cmpsb
or
pop
inc
ficomps
pushf
out
dec
cwtl
or
mov
dec
mov
shrb
fs
mov
lret
xchg
add
cmp
out
repnz
or
xchg
sub
cmp
insb
inc
sbb
lret
mov
add
inc
std
push
int3
fwait
xchg
loope
and
lcall
sub
mov
idivb
out
js
and
adc
mov
movsb
and
fidivrs
out
outsb
and
adc
insl
xor
mov
add
lcall
pop
lahf
popa
and
sbb
sub
div
push
cltd
dec
idiv
mov
jg
sub
add
out
int3
fucompp
call
sub
in
inc
pop
cld
inc
fs
mov
adc
inc
push
stos
add
pop
mov
popa
sub
fs
dec
sub
inc
or
sub
nop
push
ss
add
cmp
and
or
sbb
ss
xchg
call
stos
or
aad
ds
inc
hlt
xor
xlat
and
and
jge
in
repz
lea
mov
dec
in
add
into
push
mov
push
and
ja
xchg
jg
out
int3
test
lahf
pop
inc
jl
in
inc
into
push
loopne
es
cltd
lock
popl
jp
out
add
push
xchg
sti
dec
or
cwtl
sbb
jg
add
or
mov
stos
loope
fcoml
loopne
into
add
push
mov
loopne
jp
inc
sub
mov
outsl
mov
leave
dec
inc
lcall
adc
dec
mov
out
negl
add
mov
repz
pop
mov
mov
cwtl
lret
js
add
dec
pusha
sub
add
lods
mov
stos
pop
ja
add
test
and
adc
out
sti
test
in
ljmp
mov
inc
in
xor
push
xchg
adc
pop
test
out
ss
jb
in
aad
jae
mov
xchg
xor
xorb
movsl
test
in
mov
clc
push
in
ds
nop
out
div
ret
mov
pusha
adc
in
stc
sbb
jb
cmp
enter
std
lahf
dec
mov
pop
jae
xor
or
in
cwtl
dec
lcall
in
fdivrs
in
mov
or
jne
pmulhw
lcall
push
inc
mov
jmp
or
pcmpgtb
add
icebp
stc
inc
pop
xchg
imul
leave
pop
into
or
or
inc
push
mov
test
arpl
add
jle
add
mov
pop
pop
imul
sub
or
dec
add
rcll
bound
inc
movsb
je
sbb
mov
pop
gs
and
mov
rorb
xor
out
push
and
loop
inc
mov
les
repz
cmp
jmp
insl
push
loop
pop
les
setno
xchg
int3
in
jecxz
popa
adc
popa
pop
pop
cmp
insb
push
sbb
pop
cmp
ret
dec
dec
out
dec
int3
add
dec
decb
sub
dec
sbb
inc
jmp
out
std
fcoml
cmp
sbb
sarb
movl
jge
enter
pop
fldl
push
pop
add
sub
fidivl
xchg
mov
dec
arpl
iret
inc
or
inc
jo
je
cs
pop
pop
xchg
sub
insb
and
inc
std
sti
fucomp
xor
test
out
xchg
sbb
in
out
pop
mov
mov
inc
sbb
add
add
dec
mov
cmp
cmpsl
test
pop
fwait
insl
sbb
out
sbb
push
mov
hlt
test
jmp
mov
mov
sub
push
mov
je
xor
orl
sahf
xchg
sub
mov
push
lods
jmp
cli
sbb
loop
pop
das
shlb
repnz
adcb
and
aad
stos
sub
mov
ljmp
sbb
ret
add
jne
daa
ss
addl
mov
stos
aas
repz
lods
mov
xor
in
or
inc
hlt
mov
xor
or
add
lret
out
in
ds
and
add
loop
pop
into
pushf
sbbb
nop
lret
fadd
int3
or
sub
out
pop
mov
mov
fmull
aas
cmp
sti
idivb
dec
adc
cmpsl
pop
xchg
orl
jnp
and
push
bound
shlb
adc
iret
sub
mov
testl
sbb
bnd
xchg
sbb
xor
mov
mov
movsl
mov
adc
imul
les
in
sti
push
sahf
pop
ljmp
inc
into
cwtl
xor
jns
mov
xchg
movl
or
mov
pop
pop
pop
push
out
gs
xchg
in
and
lcall
setp
push
inc
adc
sbb
inc
das
and
pop
xor
inc
xlat
sub
xchg
enter
jno
jno
popa
push
sbb
xor
nop
xor
hlt
addr16
or
adcb
adc
dec
jbe
je
inc
inc
lret
pop
mov
pop
xchg
cwtl
sbb
scas
sub
nop
cli
ja
insb
lods
or
ja
xchg
fs
sub
xor
repnz
dec
dec
shl
mov
mov
lods
test
test
xchg
dec
mov
enter
add
mov
adc
adc
mov
stos
xchg
je
push
adc
pop
in
and
pop
sub
shlb
ficomps
jp
punpckldq
mov
xor
adcb
mov
inc
lods
in
mov
or
dec
testl
xchg
cmp
add
pop
scas
sub
push
nop
ret
aas
dec
and
out
mov
xor
in
mov
push
setp
sbb
pop
xchg
push
xchg
push
sbb
lahf
lret
les
in
inc
pop
pop
add
test
pushf
sub
xchg
out
hlt
lahf
cli
push
les
mov
jmp
cs
pop
add
lods
mov
add
lea
xchg
or
xchg
lods
cltd
inc
xchg
push
out
mov
or
fs
loope
jl
push
sub
xlat
mov
int3
mov
pop
aad
les
aaa
xchg
loopne
pop
dec
push
xchg
jmp
outsb
aad
sub
jl
sbb
mov
inc
pop
lcall
lds
push
xchg
enter
std
out
stos
mov
mov
pop
push
jbe
nop
push
iret
scas
pop
cmpsb
cltd
sub
test
imul
aas
loop
push
mov
pop
xor
adc
fs
into
sbb
push
shr
sub
je
call
leave
out
stc
call
iret
cmp
ja
and
cmp
xchg
xor
and
ljmp
les
inc
into
scas
sbb
or
sbbl
mov
in
mov
add
mov
aas
nop
xor
rcr
fisubl
pop
pop
sub
xor
call
clc
pop
negl
mov
lods
call
notl
push
sub
adc
add
shlb
add
inc
lcall
fstpl
add
xchg
push
mov
mov
in
jle
mov
test
and
cwtl
add
jle
add
jl
testb
pop
f2xm1
notl
shll
ja
or
clc
sti
xchg
mov
push
mov
mov
dec
xor
test
mov
pop
inc
addb
xrstors
fldenv
insl
push
hlt
aam
icebp
add
mov
adc
inc
mov
dec
adc
jns
sbb
into
repnz
ficoms
mov
or
sti
or
jp
mov
add
push
sub
lds
xor
and
xchg
inc
push
out
scas
dec
repnz
addr16
add
mov
sbb
sub
mov
sbb
add
or
stos
stc
mov
jnp
fldcw
push
icebp
add
xchg
ljmp
mov
sub
movl
mov
lret
loopne
xchg
xor
inc
mov
or
mull
push
cmpsl
sbb
sbb
lcall
push
stc
cli
mov
cmc
inc
sbb
das
mov
jmp
push
les
mov
lret
in
icebp
xor
cmpsl
add
xor
popa
sub
enter
hlt
pop
enter
sbb
stos
add
leave
push
pand
xchg
push
or
or
cwtl
dec
js
out
daa
in
push
sub
sbb
and
mov
sbb
aad
imul
nop
sub
add
insb
add
imul
lock
add
mov
add
cltd
testl
jg
cwtl
mov
cltd
sub
cmpsb
out
idiv
int3
sbb
or
pop
in
mov
fiaddl
ret
pop
mov
icebp
and
and
ss
push
inc
js
or
pop
jae
lds
mov
cs
addr16
push
cld
leave
or
mov
xchg
sub
add
stos
sub
out
add
repz
push
mov
fsubl
sbb
test
nop
loope
sub
jb
in
das
jbe
jb
popa
inc
or
jmp
movsb
fwait
mov
and
pop
notl
in
rolb
xchg
inc
fildl
pusha
xchg
mov
cmp
dec
sti
cmpsl
push
mov
lahf
aaa
stc
and
sbb
push
ss
and
mov
sub
rorb
dec
jne
add
repz
push
push
pop
xor
sahf
xor
and
sbb
cmp
cmp
daa
push
inc
push
cmp
rclb
or
and
data16
das
mov
cmp
xlat
pop
fisubrl
mull
cmpsl
lds
int
les
fs
add
adc
cs
mov
and
pushf
inc
or
pop
mov
cmpsl
rolb
adc
cwtl
out
outsb
jmp
xchg
int3
in
ftst
mov
fisubl
shll
sbbl
pop
ret
cmp
and
inc
std
fwait
lcall
mov
xchg
or
push
push
add
ss
pop
into
or
sub
stos
rorl
imul
call
pop
push
mov
fcmove
sbb
add
scas
hlt
push
and
pop
test
mov
xorb
xchg
cwtl
movsl
inc
sbb
andl
adc
push
leave
enter
jnp
cwtl
and
movsb
add
jo
fldln2
cmp
mov
and
sbbl
or
push
push
xchg
dec
and
dec
cmp
jle
mov
sbb
notb
ja
addl
shrb
pop
xor
xchg
xlat
cmp
aad
or
nop
cli
cmp
cmp
fdivrl
subb
sbb
mov
mov
icebp
aam
icebp
jecxz
sub
dec
inc
ljmp
pop
mov
std
addl
insb
fsubs
fs
bound
das
test
xchg
sub
dec
nop
dec
mov
push
sub
mov
fnstenv
xchg
cmpsb
mov
dec
mov
popa
jbe
call
lods
jge
xchg
mov
test
and
mov
sub
dec
mov
jp
shrb
shl
or
mov
insb
add
mov
sbb
jmp
xor
or
stos
xchg
ds
cmc
lock
clc
add
sub
leave
adc
xlat
sbb
stc
xchg
sbbb
mov
sbb
sbb
fs
inc
out
out
sub
addb
stos
mov
ret
or
insl
dec
mov
sub
pop
pusha
push
sbb
push
fs
repnz
testb
sahf
mov
cmpsl
and
scas
testb
sub
mov
pusha
sub
ror
or
mov
outsb
mov
push
loopne
test
push
inc
ret
dec
dec
xchg
mov
test
mov
inc
mov
out
ret
mov
sub
and
xor
xchg
xor
mov
xlat
or
dec
xor
stos
push
mov
dec
testl
iret
mul
xor
mov
lret
sub
icebp
push
xchg
push
test
test
cmp
inc
sub
dec
mov
insb
rcll
push
inc
and
sub
test
aam
xchg
mov
jle
imul
sub
pop
sbb
mov
cmpsb
inc
jge,pt
enter
xor
rorl
add
jbe
lods
jno
add
imull
push
inc
and
xor
test
dec
xchg
sub
imull
lcall
dec
pushf
sarb
adc
xor
mov
sarb
mov
movsb
jae
les
lods
imul
mov
movlps
cmp
out
mov
xor
push
pushf
bound
rclb
out
and
pop
sar
loop
push
sub
xor
or
jp
mov
enter
xchg
daa
shrb
lret
or
test
idivl
sub
fs
and
test
sbb
lock
ds
test
jge
mov
stos
xor
pop
les
or
std
dec
sti
pop
call
mov
icebp
pop
call
fiaddl
lcall
test
jnp
je
xor
jno
push
les
adc
je
sbb
pop
enter
hlt
pop
lods
mov
push
pop
mov
pop
cmovs
sub
lahf
insb
inc
popf
out
pop
pop
scas
pop
pop
nop
loop
and
in
sbb
ret
jnp
ljmp
sbb
cmp
and
xor
mov
and
loope
or
mov
pushf
mov
push
add
add
xlat
sbb
push
mov
rorl
mov
shl
xchg
arpl
xchg
out
pop
push
shl
and
add
push
repnz
inc
mov
pop
pop
adc
mov
push
movsl
pop
mov
inc
sbb
pop
rcrb
dec
sbb
mov
mov
add
sbb
jo
fsubp
or
mov
seta
xor
push
cmp
out
sub
cmpsl
push
xor
xchg
bound
cmpsb
mov
flds
shrl
cmp
in
and
xor
and
cmp
or
ljmp
xlat
cmp
mov
inc
sub
add
jae
sbb
jle
cmp
clc
in
lret
pushf
lods
sub
xlat
and
ds
sarl
sub
sbb
cmpl
pushf
sbb
and
test
pop
lret
std
sub
aad
jp
cmp
lcall
xor
invd
add
mov
into
jo
lock
mov
arpl
sti
mov
xchg
sub
adc
aas
repz
test
xor
xchg
push
sub
clc
and
stos
outsl
mov
push
nop
test
pop
out
add
xor
iret
ficoms
stos
loop
xchg
or
lods
js
test
dec
add
in
and
dec
or
in
mov
or
pop
out
shll
in
add
orl
inc
mov
js
cmpsb
and
fisttpll
out
inc
das
pop
sbb
pusha
int3
addl
inc
insb
outsb
xchg
fdivrp
xchg
ret
mov
xchg
scas
dec
fsubrs
fists
push
add
push
xchg
inc
xorb
insb
sub
xchg
jle
mov
fdiv
inc
into
mov
ljmp
cld
sbb
inc
into
dec
xchg
mov
mov
inc
cmp
jmp
iret
rcl
sub
enter
in
out
push
mov
jno
add
out
add
or
mov
sbb
xlat
into
insb
aam
push
mov
fldl
les
or
nop
jg
ss
in
loope
cmp
in
mov
mov
into
hlt
pop
cmpsb
fld
mov
aas
mov
in
sub
inc
or
mov
xor
push
adcb
mov
xchg
sbb
test
fidivrs
mov
ja
inc
pushf
inc
dec
out
int3
mov
xor
repz
xor
in
jne
add
and
mov
out
std
sbb
fcoml
arpl
lock
xchg
ret
jmp
pop
xor
or
push
aas
add
mov
dec
out
pop
lods
push
jmp
dec
jmp
sbb
in
mov
test
test
orb
mov
outsb
sub
iret
mov
or
xchg
xchg
add
fwait
outsl
ds
adc
cmp
iret
aam
add
fndisi(8087
shrb
mov
mov
add
sti
psadbw
out
inc
push
mov
hlt
sub
test
push
jo
add
test
push
sub
and
movsl
in
jae
cmp
dec
or
xlat
xorb
ret
lea
test
adc
inc
dec
jl
or
loope
leave
int
sub
fs
mov
push
dec
sub
mov
or
loop
in
lock
sub
or
lahf
in
nop
fldcw
xorb
int
mov
and
mov
shrl
hlt
mov
or
mov
fdivr
loope
sbb
loopne
cs
sub
enter
nop
cmp
adc
add
mov
aam
sub
xlat
loop
push
sar
or
roll
test
mov
js
cmp
jae
inc
cmc
cmpsb
pop
pop
faddl
out
in
adc
add
or
add
ja
add
pop
mov
cmc
sti
imul
push
xchg
scas
cltd
mov
addr16
xor
xchg
dec
sub
sbb
mov
pop
mov
sbb
mov
mov
in
xor
pop
lods
scas
stc
and
or
jbe
std
int
pop
push
and
leave
pop
adc
add
mov
xacquire
in
daa
in
or
cmp
lret
ljmp
clc
xor
cmc
dec
sahf
out
outsl
loopne
xchg
mov
mov
add
test
lea
nop
and
lcall
sbb
and
or
in
xorl
inc
or
out
mov
movsl
fsubr
jge
lea
lret
adc
jbe
and
pop
insb
out
xor
pushf
out
sbb
dec
cs
cmp
dec
cmpsl
fs
or
dec
add
or
sbb
xchg
push
test
mov
iret
out
into
or
pushf
cs
and
xchg
inc
fsubl
add
fwait
mov
push
mov
add
out
push
mov
xchg
dec
dec
test
pop
lcall
sahf
mov
or
sbb
icebp
adc
lea
cmp
std
dec
xchg
shll
cmp
ret
shlb
xlat
insb
inc
std
lcall
stos
mov
mov
jo
stos
pop
aad
mul
adc
or
or
out
and
mov
shll
fcomi
movups
push
out
call
inc
xchg
rorb
xchg
xchg
sbb
imul
ret
insl
sub
into
sub
out
or
fcomps
pop
jmp
call
pop
loop
fchs
lret
out
or
pop
sbb
xchg
ds
dec
cld
scas
inc
and
rcr
jg
xor
xor
or
sub
sbb
push
mov
jb
gs
into
mov
out
sub
mov
std
sub
sbb
test
out
inc
jne
sbb
mov
lret
les
repz
icebp
rcrb
dec
push
in
xor
lea
les
nop
fs
inc
sub
add
call
pop
mov
xchg
out
pop
nop
jle
adc
push
out
push
mov
cmp
fisttpll
out
push
test
jns
mov
test
xchg
mov
push
or
xchg
dec
mov
je
in
mov
jecxz
fimull
movsl
aam
mov
lea
out
shll
jmp
push
sub
test
ss
or
or
jp
inc
xchg
insb
call
add
test
lock
cmp
inc
inc
repnz
loope
push
cmp
dec
push
jg
test
push
cmp
push
lods
or
in
scas
data16
dec
sbb
das
repz
sub
gs
iret
outsb
cwtl
pushf
mov
lock
and
or
fs
dec
sub
pop
out
icebp
std
add
xor
test
inc
or
aam
sbb
in
clc
cmp
cmp
test
pushf
add
dec
mov
xor
mov
das
pop
js
sub
sti
xor
dec
mov
sub
xor
fs
inc
out
mov
inc
pop
clc
xchg
cmp
ja
and
insb
or
mov
sub
pmulhuw
jmp
cmp
mov
mov
insb
pop
out
bound
in
sub
push
adc
lret
sub
cwtl
dec
sbb
add
gs
aad
sbb
push
dec
loop
sbb
sbb
call
out
stos
dec
pushf
and
fisttpll
fbstp
insb
mov
jbe
push
addr16
sbb
in
mov
out
or
popf
pop
cli
scas
pcmpgtb
push
sarb
and
hlt
sbb
mov
mov
enter
push
xor
fs
test
imul
xor
sbb
jg
mov
inc
int
mov
mov
xchg
adc
aad
mov
cltd
insl
cwtl
xor
sbb
adc
dec
lret
fs
cmpsb
mov
xlat
pop
test
ret
les
in
inc
cmp
adc
or
mov
xchg
in
out
nop
movsb
lcall
add
andl
lret
mov
out
insb
jno
ficomps
dec
std
fs
ja
pop
mov
mov
cld
mov
mov
loopne
jg
mov
cmp
or
idivl
lods
test
dec
push
stos
jle
mov
jb
aam
and
divl
fdivrs
stos
xchg
adc
jmp
xor
dec
and
push
xor
and
sbb
or
rorl
lds
mov
push
sub
mov
pop
call
cmp
pop
daa
cmc
push
mov
mov
pop
xchg
nop
cwtl
loope
imul
mov
outsl
or
jae
add
cli
pop
sub
jle
bound
hlt
stc
leave
xchg
and
xlat
into
maskmovq
cli
mov
popa
fists
pop
xlat
xor
adc
or
in
testb
iret
mov
pop
negl
insl
push
xlat
div
sbb
lcall
dec
pop
shll
cmpsb
adc
pop
xchg
dec
cmp
add
out
loop
shrb
xor
pop
in
add
pop
nop
push
pop
dec
stos
fists
xchg
sub
sbb
inc
fs
push
sbb
lret
fistpl
push
push
or
mov
dec
rcr
fnsave
and
test
cld
insb
repnz
jnp
jae
test
mov
mull
or
mov
mov
add
movsl
jle
mov
mov
ja
aas
adc
pop
out
enter
ljmp
cmpsl
push
dec
imul
mov
push
mov
jo
dec
dec
and
sbb
enter
push
inc
mov
inc
sbb
adcl
imul
loope
test
clc
into
mov
jne
xor
pushf
lcall
fwait
mov
or
into
or
or
test
cmp
rcrl
aad
insb
adc
in
testb
adc
fsubs
mov
add
jmp
test
mov
sbb
sub
fs
push
fidivs
call
andl
cmpxchg
push
pusha
jns
in
stos
and
out
inc
cmp
cld
sub
stos
out
pop
sub
enter
popa
fstpl
outsl
imul
fcmovne
push
pop
xor
popf
mov
adc
mov
xchg
xchg
dec
mov
rol
add
xor
int
lcall
sub
ljmp
lret
or
and
ds
loop
nop
ljmp
insb
clc
fadd
mov
mov
sub
sarb
pushf
lret
clc
jg
sahf
pop
test
sbb
mov
ret
push
pop
cmpsl
xor
repz
cmp
inc
mov
or
mov
or
lret
in
or
dec
adc
add
pop
les
inc
imul
lret
test
insb
in
dec
and
and
into
fisttps
adc
out
mov
pop
pop
clc
lods
in
stc
in
push
rcr
sti
mov
add
or
ficomps
or
jp
or
mov
or
aam
mov
cmp
in
adc
ret
xor
ljmp
cmpsb
aas
call
lea
jmp
dec
or
out
or
jmp
insl
dec
push
sub
dec
mov
pop
fldt
loop
fcmove
adc
hlt
sbb
stos
int3
jnp
add
and
mov
sub
in
jge
add
add
xchg
pop
leave
mov
aaa
fimull
aad
jle
sbb
sbb
fldl
push
faddl
sbb
lds
rol
mov
xor
adc
add
fstpt
mov
xchg
mov
add
iret
sbb
mov
loopne
sbb
cmp
icebp
push
scas
insb
in
xchg
popa
hlt
int3
lock
cwtl
in
dec
aas
repnz
dec
adc
fcmovb
vpaddusb
sbb
push
push
into
xor
sub
jae
or
jp
mov
nop
mov
out
sbb
xchg
inc
add
sbb
mov
das
adc
add
out
movb
add
cmp
lods
call
xchg
push
dec
add
lock
dec
or
js
push
ss
sarl
int
or
push
out
push
push
scas
dec
and
pop
sub
insb
cmpl
imul
push
mov
xchg
sub
in
mov
mov
pop
fstpl
pop
mov
stc
loopne
mov
out
jle
xchg
jle
sbb
test
in
xor
mov
notl
fs
sbb
hlt
xor
fwait
pushf
xchg
cmpb
insl
xor
in
test
mov
sub
xchg
push
out
fnstsw
ret
cld
cmp
movsb
aad
add
jnp
cmp
cmp
cli
out
adc
xchg
cmpsb
and
int3
and
xor
sbb
pop
fstl
push
pop
sub
xchg
cli
or
test
rorb
mov
in
or
push
daa
or
ret
sti
xchg
xchg
sbb
int3
xchg
lret
xchg
cmp
out
insb
jecxz
add
mov
pop
xor
xchg
jne
xor
jmp
sub
insb
and
pop
fmull
enter
insb
push
pushf
add
pop
xor
daa
sub
mov
int
mov
fcmove
dec
jecxz
ja
pop
les
push
sub
das
arpl
pop
push
jp
sbb
dec
andl
jmp
std
cmp
aam
add
sub
insl
pop
sub
int3
insb
out
dec
int
imul
fs
push
mov
inc
insb
mov
add
sbb
pushf
pop
ljmp
cs
xchg
push
lods
sub
sbb
repz
test
test
push
iret
pop
leave
and
fs
xor
adc
mov
pop
repz
sub
in
sub
subb
ss
addl
adc
mov
inc
ret
jg
xor
loope
stos
dec
setne
enter
add
xchg
ficoml
cmpsb
xchg
cltd
mov
cs
push
sbb
cltd
add
add
push
iret
lods
xchg
loopne
push
xor
in
or
in
cmp
sbb
enter
movsl
idivb
add
sub
inc
inc
mov
inc
sbbl
dec
push
in
mov
inc
inc
mov
mov
cmp
sub
add
mov
xchg
out
dec
xchg
xchg
adc
test
fs
mov
dec
sti
cs
test
xor
or
jp
push
shlb
xchg
lahf
or
xor
jb
adc
aas
ret
dec
loop
in
push
adc
cmp
cs
xchg
ret
mov
out
and
insb
popf
and
rcrl
imul
cs
cmp
insb
mov
test
jae
jg
xchg
sti
sarl
les
jne
adc
fdiv
addr16
mov
and
in
inc
aas
xorb
dec
ss
sbb
daa
int3
stos
jmp
xchg
shll
mov
fwait
add
leave
dec
jmp
test
sub
mov
pop
je
lret
adc
xchg
push
xchg
cmpl
fstpl
out
rolb
imul
sbb
imul
sti
pusha
jecxz
in
in
xchg
pop
out
add
lret
pop
push
test
enter
shlb
movsb
and
ja
imul
or
popf
sub
lret
fs
call
push
out
dec
stos
inc
and
pop
push
stos
call
loopne
mov
mov
pop
pop
xor
in
inc
out
ljmp
sub
out
mov
and
mov
adc
notb
sub
mov
inc
pop
jmp
mov
or
aas
testb
jnp
cmp
out
test
dec
repnz
lea
iret
mov
lds
xchg
jmp
xchg
ficompl
lds
xchg
xor
out
jbe
pop
dec
and
push
lret
mov
outsl
int
add
gs
int
xchg
std
stos
push
rcll
add
test
mov
sbb
pop
lea
xchg
adc
mov
shlb
fs
loope
sbb
add
xchg
mov
nop
xor
test
sbb
fs
add
sbb
inc
mov
pop
fisubrs
sbbl
das
ljmp
pushf
xlat
es
and
or
outsl
jecxz
pop
mov
sub
arpl
sub
adcl
inc
iret
mov
jne
sub
nop
mov
xchg
inc
mulb
mov
mov
je
or
sbb
xchg
pop
scas
jl
or
mov
jno
pop
mull
xchg
jg
fwait
mov
fimull
xchg
insb
xchg
fwait
shll
pop
jp
cmp
test
pop
dec
loope
push
out
sbb
dec
cmp
fcompl
jl
xchg
xchg
mov
gs
add
mov
mov
and
fcmovb
mov
inc
or
xchg
pop
in
rcr
add
mov
add
fcoml
test
jle
movsb
mov
mov
add
in
sti
pop
mov
dec
sbb
and
lods
xchg
imul
cmp
outsl
pushf
jno
das
lret
fstps
mov
clc
lods
sub
mov
test
cmpsb
and
push
mov
xchg
scas
or
stos
subb
or
sub
insb
mov
or
fwait
insb
xor
inc
mov
and
mov
shlb
fadds
and
xchg
dec
out
movsl
adc
cmc
or
inc
inc
cmp
or
inc
sbb
dec
push
and
das
fisttpll
call
sbb
sub
fs
mov
ds
push
faddl
pop
mov
outsb
jge
fsubp
adc
jl
lret
testb
add
fwait
cli
lret
add
cli
div
xchg
fadds
in
fildll
cmc
inc
jmp
cmp
filds
lret
pop
push
jns
addl
outsl
in
mov
lcall
imul
mov
les
pushf
nop
xchg
into
and
hlt
aam
pop
stc
leave
fimuls
outsb
repnz
sub
pop
xchg
fstpl
push
add
sbb
lcall
pop
inc
dec
jge
pop
xchg
cs
dec
xchg
pop
ja
fwait
std
jne
in
fnsetpm(287
xlat
cltd
mov
and
out
loop
push
mov
pop
sti
stos
aam
pop
mov
fwait
lahf
push
shll
pop
out
orl
pop
ja
call
sub
je
mov
loopne
lods
cmp
cwtl
cmp
out
push
loopne
rorl
inc
mov
aas
into
sub
aas
xlat
out
xor
leave
add
dec
mov
mov
pop
pusha
lcall
pop
fstps
sbb
push
call
adcl
rcrl
addr16
fs
jns
sahf
fldpi
das
cmp
inc
lock
ljmp
lahf
or
stos
cltd
sbb
xchg
adc
in
in
mov
sub
adc
jns
mov
or
xchg
fidivrl
pop
out
pop
pop
dec
xor
stc
jp
mov
popf
xchg
cmp
push
in
add
scas
pop
in
repz
mov
into
dec
cmpsb
xor
movsb
aaa
lock
xchg
mov
cwtl
fimull
cmpl
in
cmp
shrl
test
ffreep
inc
jo
pusha
sub
cmp
jae
ficompl
and
push
add
test
sbb
stos
negl
popf
push
div
xlat
push
insb
outsb
add
sti
sub
out
sbb
aam
push
jl
pop
inc
mov
push
lret
ret
inc
clc
call
addl
jae
jbe
ret
test
repnz
shrl
popa
dec
jge
mov
push
sbb
loop
push
push
xlat
lret
cmovnp
add
push
and
dec
fidivs
xor
push
orb
test
outsl
arpl
orb
jns
loop
inc
jmp
jg
push
add
movsl
jbe
dec
iret
out
fsubrs
push
lahf
mov
fwait
iret
pop
pop
scas
add
enter
mov
or
out
es
pop
xchg
cmpsl
movsl
fisubl
inc
push
or
pop
sbb
aad
and
push
int
xchg
ss
out
in
mov
inc
pop
sub
jmp
push
stos
mov
int
jle
shl
xchg
jg
imul
lahf
sub
add
sbb
mov
xchg
insb
out
pop
or
and
dec
lock
addb
incl
cmpsb
push
mov
mov
mov
jmp
pop
sbb
push
dec
pop
pop
stos
jbe
add
outsl
fwait
pusha
mulb
arpl
inc
adc
sbb
out
test
ss
test
mov
data16
cld
or
xor
out
data16
cmp
leave
or
dec
call
daa
xchg
xchg
cmp
inc
stos
aam
or
int3
hlt
or
icebp
cmp
xchg
shrl
or
sub
in
mov
sub
mov
lahf
add
gs
jbe
push
mov
or
dec
mov
xchg
in
leave
dec
fimull
hlt
icebp
jbe
insb
add
sub
decl
fmuls
push
movsb
stos
lds
push
out
lret
sub
push
out
mov
add
and
aam
cmp
clc
add
in
mov
insb
jo
sub
clc
dec
enter
rorl
mov
shll
mov
cwtl
pop
hlt
cmp
jns
xchg
inc
enter
arpl
insb
jmp
xor
lret
inc
ljmp
ret
and
adc
out
xchg
xchg
and
fistl
out
int3
lret
cmp
fcoms
jecxz
push
test
add
xor
sub
cmpsl
clc
push
mov
sub
mov
jo
push
jb,pt
insb
pop
jle
dec
push
out
or
jno
gs
cmpsb
fadds
in
aad
mov
sbb
sbb
push
push
pop
lods
pushf
div
aaa
in
imul
mov
in
scas
cld
and
push
and
jl
rcrb
pop
adc
outsb
dec
add
pop
rcll
jg
sbb
jecxz
push
sbb
push
test
mov
sbb
ret
mov
hlt
fmuls
in
xchg
idivl
or
lret
int3
sbb
xorl
lcall
adc
xchg
out
mov
xor
andl
jnp
push
das
call
repz
push
jo
mov
mov
lret
xor
fs
fdivrl
mov
mov
ja
adc
mull
testl
and
add
xchg
push
mov
cmp
insb
pop
enter
inc
nop
xor
in
movsb
xlat
mov
or
push
cmp
fs
xchg
xor
in
cmp
std
and
cmp
jne
les
sahf
jno
jb
push
add
mov
int3
sbb
xor
aas
mull
or
je
les
mov
sbb
sbb
pop
hlt
hlt
in
test
cmpb
pop
bound
movsl
add
data16
loopne
jecxz
leave
pop
push
mov
test
pop
iret
mov
xor
xchg
mov
mov
cmp
dec
in
sub
xor
stos
pop
cli
shrb
jmp
sahf
mov
push
out
fldcw
sti
imul
mov
cmovle
mov
das
insb
hlt
inc
cmpsb
in
test
pop
push
insb
cmp
fs
arpl
insl
lock
xchg
and
xchg
in
call
mov
mov
imul
add
iret
inc
imul
jle
fsub
ficompl
add
shlb
data16
iret
iret
and
push
add
cwtl
iret
push
ret
or
int
jle
inc
cld
sbb
loop
sbb
add
or
add
in
mov
ret
inc
mov
xlat
jo
imul
int3
mov
inc
dec
nop
push
test
sub
dec
test
dec
jne
in
add
pop
enter
test
enter
movsl
sub
sbb
cmpsb
loopne
mov
pop
test
or
cld
mov
cmpsl
mov
pop
sbb
xchg
lahf
sbb
jg
inc
fistpl
push
clc
sbb
inc
fnstsw
mov
adcl
mov
popf
in
mov
fimuls
adc
imul
jbe
sbb
test
mov
pop
push
adc
fdivr
inc
out
popf
or
mov
push
add
addl
xchg
mov
mov
popa
cmp
dec
push
pop
mov
inc
pop
pop
mov
lock
push
imul
jp
sbb
xchg
xchg
or
xchg
stos
or
mov
adc
jns
mov
popf
cli
insb
push
adcl
adc
movaps
cmp
in
mov
dec
pop
jno
fisubs
fimull
sub
in
dec
mov
and
pushf
jb
mov
loop
dec
mov
ror
in
mov
jl
pop
stos
mov
and
into
pop
jae
daa
xchg
jo
adc
inc
dec
fsubl
stc
mov
mov
in
xchg
inc
rclb
jne
add
add
mov
inc
in
dec
xchg
int3
loopne
cltd
fwait
je
shlb
lret
xchg
xchg
or
aas
cmp
dec
sbb
or
jnp
test
testl
or
fcomps
xchg
out
inc
cld
and
std
adc
in
pop
fdivs
imul
ret
scas
xor
sub
shlb
cmp
push
and
inc
sub
test
pop
mov
dec
xchg
shrb
cmpb
fs
stos
xchg
and
sub
cltd
std
xor
jae
sub
mov
sub
jge
sbb
mov
pop
out
les
stos
xchg
cmc
dec
mov
inc
sub
inc
jbe
add
das
dec
add
nop
int
add
ret
ret
in
lds
ja
mov
shrl
mov
cld
rcrb
xchg
and
mov
xlat
clc
mov
scas
inc
adc
popf
push
pushf
nop
inc
sbb
dec
test
xchg
cld
jns
es
pop
movsb
daa
sub
mov
jne
in
xor
add
mov
push
and
movhps
mov
sbb
jmp
mov
insb
sub
cli
test
add
push
mov
test
cmp
sar
sub
pop
cmpsl
repz
ret
in
mov
fwait
test
adc
jb
xchg
cltd
lret
xchg
jns
pop
notl
enter
sbb
xchg
mov
jo
and
pusha
adcl
ret
mov
out
jb
adc
mov
mov
lcall
mov
and
mov
das
stc
in
daa
jge
add
pop
push
test
pop
int
xchg
faddl
loop
mov
lcall
std
in
fdiv
inc
jne
fdiv
sbb
bound
push
mov
test
les
jg
das
xor
fisttpl
fstpl
aaa
lret
mov
add
sbb
sub
add
iret
add
push
in
mov
fildl
or
pop
fistpll
xor
pushf
roll
fstp
inc
subl
push
inc
sub
loopne
mov
dec
add
call
mov
vcvttps2dq
cmp
test
xchg
dec
rorl
dec
sub
pop
push
push
aam
sbb
int
dec
sahf
xchg
or
pop
cmc
push
pop
or
popf
out
lcall
pushl
jo
jb
sti
mov
jne
sahf
movsl
in
stos
clc
daa
lcall
mov
std
xor
dec
fiadds
std
sbb
int
test
lcall
push
stos
out
mov
pop
add
sub
add
addr16
mov
lcall
xchg
mov
push
inc
xor
clc
lods
insl
xchg
add
add
inc
fmuls
add
icebp
xchg
inc
xchg
and
out
cltd
xchg
cli
das
in
bound
test
out
test
mov
pop
inc
in
jg
nop
aaa
fcmovnb
les
mov
inc
and
push
hlt
lods
jmp
test
pop
pop
mov
mov
pop
lcall
popf
jnp
sbb
or
fs
push
lret
mov
add
dec
test
rdtsc
push
or
mov
cmp
sub
pop
call
sub
dec
add
cli
out
insl
fstp
stc
lcall
xor
cltd
iret
jmp
sbb
add
lcall
dec
mov
cltd
add
jmp
test
out
mov
fwait
cmpb
fdivs
xchg
xor
or
cmp
shrb
mov
mov
imul
sub
out
sbb
inc
fdivs
sub
mov
inc
les
mov
xor
fiaddl
fsubrs
dec
mov
mov
rcrb
jo
mov
dec
inc
imul
out
rorb
andb
adc
mov
loope
or
outsl
add
aad
adc
leave
mov
out
and
bound
lods
jp
out
sub
in
aad
mov
mov
or
pop
and
test
scas
out
out
mov
lods
sahf
loop
fldl
fists
in
pushf
fidivs
cwtl
sahf
fmulp
xchg
push
mov
sub
nop
loopne
xchg
out
ljmp
pop
xor
testb
outsl
jmp
sub
sub
cmpsb
push
sbb
cmp
sbb
je
xchg
cmp
ljmp
shlb
inc
push
mov
ret
xor
and
pop
sbb
fwait
add
cmc
sbb
hlt
lods
aas
test
push
sub
rcll
fstl
or
mov
andb
mov
movsl
sti
dec
dec
push
stos
pushf
mov
and
pop
sbb
dec
jo
test
fstpl
xchg
xchg
mov
inc
pop
fwait
rcrl
das
pop
mov
gs
dec
and
push
pop
mov
pop
add
test
lock
sbbb
jbe
int3
out
or
enter
pop
aas
and
xbegin
movswl
jecxz
notl
iret
adc
rorl
in
or
repnz
out
stc
fwait
sub
or
aaa
xchg
push
inc
inc
test
nop
push
cmp
adc
mov
sbb
fcomps
popa
lea
in
test
call
jb
mov
add
lret
out
cmp
dec
sbb
pop
xorb
int
andl
inc
ds
sub
and
inc
fs
fs
jecxz
mov
and
mov
outsb
mov
adc
mov
frndint
repz
out
jg
push
xorl
xchg
arpl
imul
ret
sbb
inc
cmp
jg
test
xchg
push
cwtl
inc
pushf
ret
aam
in
pusha
je
add
cmp
in
addb
nop
push
aam
icebp
cmpsl
inc
xchg
je
xlat
pop
dec
lea
aaa
es
call
pop
and
movl
sub
add
mov
xor
add
push
pop
pop
and
mov
cli
clc
mov
add
shlb
scas
fisttpll
dec
lock
push
sti
jmp
dec
fwait
fs
rorb
leave
dec
loopne
xchg
jg
adc
inc
mov
out
push
push
in
fistpll
inc
cld
pop
fdivr
icebp
xchg
shrb
and
mov
in
pop
mov
call
cld
lods
cmp
fnstsw
mov
sbb
dec
ficompl
mov
test
shlb
xchg
mov
test
negb
adc
dec
push
out
add
push
mov
mov
inc
push
repz
jmp
inc
xchg
ss
mov
inc
mov
jne
in
fstpt
mov
orl
ss
pop
pop
mov
jbe
jae
in
lods
pop
mov
sub
shlb
test
push
or
rcr
fs
dec
ret
js
mov
cmpsb
inc
and
sub
xchg
mov
pushf
hlt
dec
mov
insb
mov
outsl
or
test
out
scas
leave
xor
mov
mov
push
pushl
lcall
leave
xor
lahf
in
mov
ljmp
sbb
aas
lods
stos
popf
pop
mov
les
and
aad
popf
jo
or
lds
out
push
int
ret
lret
pop
rclb
fcmovb
sub
pusha
stc
sahf
lret
mov
popa
mov
mov
xchg
add
aas
imull
test
imul
cmp
pop
sub
lret
dec
lea
and
mov
inc
xlat
add
gs
pop
dec
or
pop
mov
jo
sub
insb
sbb
push
idiv
dec
add
rclb
mulb
in
cli
adc
pop
aam
clc
cwtl
in
test
xor
mov
rorb
lods
pop
add
cmp
or
adc
data16
jne
sub
inc
rcr
in
shlb
aam
xor
and
out
frstor
negl
and
sub
cmpsb
xlat
insb
in
unpckhps
sahf
mov
jno
mov
mov
and
mov
cmpsl
or
pop
adc
out
sbb
add
sub
xchg
leave
add
in
pushf
lock
xor
sbb
jno
inc
ds
in
cwtl
enter
jl
jnp
mov
out
fcoml
adc
mov
xchg
aas
mov
mov
out
outsl
hlt
inc
and
or
sub
ljmp
in
icebp
stc
mov
jl
test
mov
cs
pop
out
xor
cmc
add
into
aas
mull
mov
popf
fs
sub
ds
imul
mov
out
out
fwait
pop
cs
lcall
mov
push
jno
mov
faddp
not
fdivl
fildll
sbb
or
and
dec
or
add
pop
push
addl
fmull
fsubs
push
xchg
mov
lahf
adc
enter
mov
dec
in
xchg
push
xor
lahf
xchg
ss
call
cmc
sti
loopne
sub
sbbl
mov
lret
out
xchg
movsl
ret
pusha
xor
sbb
fwait
cmp
call
sub
and
xchg
fsubs
mov
repnz
mov
hlt
stos
js
mov
popf
xchg
mov
ds
mov
popf
cmc
repnz
ljmp
mov
mov
insb
daa
inc
xchg
mov
mov
add
pop
cmp
xchg
xchg
test
pop
xor
and
rcl
fdivrl
lret
push
je
pop
in
mov
push
dec
xor
ret
shl
aaa
nop
mov
push
in
test
cmpsb
lods
push
pusha
sbb
dec
dec
in
cmp
dec
out
add
lods
push
nop
mov
sbb
or
inc
dec
push
es
rcr
mov
dec
hlt
lock
ret
nop
or
xrelease
xchg
inc
test
mov
lods
pop
inc
out
test
jno
hlt
sub
inc
hlt
cmp
push
out
lcall
lods
je
in
test
push
pop
rorl
sub
fsubs
out
mov
inc
ss
fdiv
jg
cmc
dec
and
aad
xchg
mov
fs
pop
mov
pop
aam
adc
test
push
cwtl
and
mov
out
mov
outsl
iret
dec
fs
test
cwtl
or
stc
lret
dec
adc
dec
aam
fistpl
add
dec
cld
out
mov
out
and
dec
xlat
addl
pop
in
test
mov
flds
inc
inc
mov
in
insl
sub
aas
sub
mov
cmp
push
rorb
inc
popf
loopne
jb
pop
push
cmpsb
insb
and
loopne
movsb
fisttpl
fstpl
mov
aad
pop
pop
fstps
clc
sbb
or
mov
mov
das
pop
fimuls
cmp
pop
in
push
call
addr16
pop
xchg
mov
cs
pushf
mov
sub
shrl
mov
jge
mov
out
cmpsl
pusha
neg
sub
pushf
orl
lock
mov
mov
push
dec
and
jle
pop
js
jmp
lods
jne
les
push
pop
xchg
push
xchg
int3
xor
loopne
daa
test
sub
xchg
jbe
imul
insl
in
sbb
neg
lods
mov
dec
mov
mov
mov
and
add
orb
sub
mov
rcrb
aas
push
or
sti
mov
xchg
leave
insb
mov
jge
cld
dec
test
jns
test
cmpsb
mov
xlat
nop
nop
and
pop
int
repz
xchg
push
mov
cmp
and
add
adc
movsl
outsb
sbb
test
push
addr16
pop
mov
sbb
ja
lret
mov
int3
test
nop
sub
sbb
push
lock
and
rcr
mov
cmp
sub
outsl
insb
hlt
fisttpl
mov
das
stos
addl
fsubrs
dec
mov
mov
mov
in
adc
out
iret
xchg
shll
and
nop
loopne
lds
add
mov
fstpl
mov
mov
in
or
or
data16
sbb
outsl
ret
pop
int3
sub
enter
mov
cmp
or
add
cmpsl
adc
pop
insb
pushf
das
mov
mov
fadds
movsb
ror
popa
jo
sbb
adc
pop
xlat
fildl
inc
stos
or
sbb
cmp
push
sub
xor
lret
or
cmpxchg8b
lock
in
sbb
out
stc
cmp
pushl
roll
sbb
fs
push
jmp
insb
loop
test
push
test
pushf
inc
push
gs
push
mov
or
loope
inc
xchg
in
faddp
lcall
xor
sub
cmp
out
ror
add
in
scas
pop
pop
sub
pop
out
jp
inc
rcr
add
cltd
int
push
xchg
fwait
dec
pusha
out
xchg
xor
jge
inc
negb
cmpsb
and
mov
adc
mov
data16
sbb
jge
shlb
xor
shlb
incl
rcll
add
jle
xchg
add
pusha
sub
fwait
loope
xchg
test
inc
push
or
das
out
sub
sbb
out
imul
nop
sbb
mov
clc
aam
out
dec
fwait
into
fwait
enter
iret
push
insb
xchg
dec
and
inc
mov
jecxz
bound
out
cli
push
adc
out
int3
jmp
rclb
aaa
sbb
or
jno
jae
inc
test
xchg
dec
aam
dec
jno
jg
mov
xor
int
and
add
pushw
test
and
sbb
repz
inc
pop
dec
xor
jle
in
dec
xchg
leave
adc
pop
mov
inc
inc
shlb
mov
push
orl
aaa
xchg
or
mov
adc
lods
pushf
xchg
xchg
in
mov
test
mov
adc
mov
fistpll
or
jns
popa
lea
xor
insb
in
mov
fisubrs
lds
mov
add
sub
xchg
push
xchg
out
ficoms
sub
cwtl
inc
mov
and
or
inc
cmp
dec
test
jno
cli
mov
in
pop
mov
int3
cld
fwait
clc
cmp
out
stc
movb
outsl
cs
fs
fidivrs
mov
push
and
in
subb
dec
jo
inc
pop
inc
pfmax
mov
xchg
sbb
and
pushf
dec
dec
cmp
in
mov
loope
jb
mov
cmp
out
mov
ficompl
jp
in
jnp
sbb
shlb
push
xor
push
repnz
push
rcrb
cltd
mov
loop
lret
pop
das
mov
and
sub
cltd
cli
ja
or
hlt
out
sub
cmpsb
sbb
pop
cmc
mov
sub
ret
imul
adc
cli
dec
mov
xchg
sar
stc
xorb
inc
pushf
es
adc
insb
jnp
stos
std
cmp
xor
out
lock
and
popl
mov
add
repz
aas
je
mov
lahf
adc
cmpsb
jp
icebp
mov
popa
jo
push
or
adc
out
ljmp
popa
mov
fsubs
lahf
cmp
movntq
sbb
rcrl
test
mov
cmp
xchg
rclb
or
rcrl
sbb
repnz
sub
or
sahf
sbb
mov
adc
jl
addr16
pop
sbb
test
lds
js
dec
es
insb
addr16
add
ss
xorb
sbbb
xchg
mov
pop
wbinvd
mov
dec
aam
sub
dec
mov
lcall
cltd
mov
adc
mov
dec
incb
bswap
je
push
pop
lahf
cmp
and
nop
fimuls
fidivl
frstor
mov
fwait
lcall
sub
pop
repnz
test
inc
int3
mov
scas
rorb
jmp
call
insb
pop
ja
xor
or
pop
mov
adc
push
adc
lods
jne
in
bound
out
scas
fsubl
inc
pop
add
xor
repnz
ror
mov
popa
ja
ja
jbe
or
pop
jmp
jae
sbb
ret
xchg
cld
cmp
lock
xchg
adc
jmp
add
dec
lret
outsl
cmp
mov
inc
or
xchg
mov
movsb
lret
outsl
sbb
mov
mov
ret
ret
cld
mov
int
inc
stos
scas
mov
jno
push
mov
insb
mov
stc
pop
sub
or
mov
pop
pop
pop
aam
adcl
push
jecxz
push
aam
fwait
cwtl
dec
ret
movsb
loope
mov
sub
adcb
inc
adc
mov
or
lahf
pop
dec
repz
call
movsb
mov
mov
jnp
dec
mov
scas
add
jb
je
mov
push
int
pop
or
xor
jbe
lahf
mov
outsb
out
movsl
adc
pop
sub
pop
lret
nop
fcomps
or
lea
mov
addl
jp
or
xor
push
jo
push
jnp
adc
addb
scas
test
mov
test
insb
pop
popf
adc
cmp
dec
mov
int3
add
jle
cmp
or
orl
cmp
sbb
pushf
xor
push
dec
xor
or
push
mov
insb
cli
js
xchg
nop
cmp
push
jae
inc
movsb
jmp
imul
inc
cmc
sbb
imul
or
add
jns
or
insb
xchg
mov
inc
pop
pop
dec
sub
cmp
dec
adc
cmp
out
bound
pop
mov
push
je
xchg
cld
jle
xor
imul
or
aas
mov
test
push
xchg
cmp
icebp
pop
fs
jl
lahf
jecxz
mov
mov
lcall
or
mov
pop
or
push
xor
int3
cmp
repnz
mov
jne
jmp
lahf
push
jecxz
int3
xorl
adc
jb
mov
sub
pop
nop
call
push
mov
aam
or
mov
jle
dec
loopne
jns
insb
jno
cmp
xor
fsubl
dec
call
dec
add
out
lock
sbb
insl
mov
imul
lret
clc
rclb
in
ss
aaa
into
je
es
cmp
mov
rcrb
mov
sbb
test
sbb
in
pop
movsb
push
sbb
cltd
adc
aam
jne
iret
in
push
add
in
lds
imulb
ror
mov
and
jbe
gs
sub
stos
adc
pushf
pop
and
xchg
outsb
push
sub
mov
shlb
imul
test
insb
icebp
inc
xchg
mov
pop
inc
lret
or
xchg
add
jns
negl
dec
fadd
fidivs
add
cltd
mov
ret
ja
mov
int3
pop
xchg
sti
cs
imull
test
aas
add
call
or
mov
lret
add
xchg
or
pop
xlat
rclb
clc
dec
in
lock
or
scas
es
call
dec
inc
scas
in
test
icebp
dec
xchg
pop
mov
loop
outsl
lahf
bound
imul
int3
sbb
test
mov
pop
clts
and
adc
lret
rcrl
dec
mov
lock
jno
mov
pop
sbb
or
cltd
mov
jo
add
jne
jge
loopne
sbb
or
mov
jecxz
add
jb
jmp
adc
dec
sti
hlt
pop
ret
inc
add
cmc
insb
push
je
cmpl
mov
je
push
lcall
mov
or
hlt
jns
pop
enter
dec
and
mov
in
mov
shll
ret
cwtl
adc
popl
mov
out
inc
jb
inc
imul
fmul
data16
divl
aaa
and
imul
push
add
ds
xchg
mov
pusha
pushf
pop
add
mov
push
dec
cmpsl
jl
fiaddl
fdivrs
lea
jecxz
insb
sbb
call
cmp
and
push
sbb
pusha
dec
xchg
adc
inc
loope
aaa
stos
mov
cld
test
jb
mov
lock
cld
mov
mov
ds
adc
call
nop
jecxz
movsb
jle,pt
pop
fldenv
dec
lret
xorb
jb
mov
xchg
daa
in
cmp
push
inc
sbb
push
pop
imul
mov
or
add
sahf
jle
add
data16
pusha
or
xchg
mov
leave
adc
jp
xchg
pop
cmp
das
push
into
pop
lods
dec
and
inc
insw
cmp
xchg
and
add
loop
adc
jo
test
ret
and
adc
sub
cwtl
dec
pop
inc
pop
mov
sahf
stos
xor
loopne
cmp
jo
loop
push
sbb
inc
es
mov
cmpsb
fwait
adc
jne
add
test
insb
mov
xchg
insb
loop
or
sub
and
cltd
cmpsl
lcall
add
sub
dec
int3
or
add
cmp
sub
and
pushf
ror
in
jmp
rcrb
add
in
jge
gs
xchg
adc
xchg
in
pop
mov
je
decl
repnz
push
insb
mov
in
dec
out
sub
adc
sbb
dec
or
add
rclb
mov
mov
in
mov
ja
lcall
movsb
pop
pop
jle
std
or
jge
push
pop
cld
sub
add
pop
sbb
or
sarb
dec
cmp
pop
push
mov
adc
pop
lods
ja
dec
test
dec
or
insb
repnz
stos
cld
mov
or
dec
pushf
test
ljmp
dec
sbb
push
out
push
cmp
fstl
aas
jecxz
xchg
insb
mov
cmp
js
pop
les
int3
in
inc
lock
pop
scas
xchg
mov
and
lahf
insl
or
jp
stos
or
enter
jbe
xor
test
mov
test
in
ljmp
pushf
sub
int3
push
orb
mov
call
orb
and
int
dec
sub
push
dec
pop
enter
mov
stos
lock
cwtl
mov
stc
jne
inc
cmpsb
mov
sub
loopne
or
popa
mov
clc
loopne
jo
test
and
mov
unpcklps
adc
nop
fnstsw
jne
cld
hlt
push
in
xchg
ds
cmp
push
inc
mov
dec
inc
cmp
pop
insb
jb
dec
and
insb
add
movsb
test
movsb
pop
mov
mov
pop
push
lock
hlt
sbb
int3
jge
inc
int3
daa
sahf
inc
sub
xor
fidivs
pop
adc
and
stos
repnz
in
or
stos
and
mov
mov
je
adc
cmp
lret
cmp
flds
icebp
adc
rcll
inc
xor
stc
sub
jle
inc
loopne
cld
ret
arpl
enter
les
sub
and
sbb
sahf
jo
inc
insb
pushf
lahf
and
sbb
out
nop
int3
fcoml
cmp
mov
aas
or
inc
and
dec
loopne
or
dec
pop
jmp
mov
cld
notb
dec
daa
mov
loope
push
std
jg
mov
adc
loop
movsb
mov
pop
scas
mov
ss
sbb
mov
mov
call
daa
dec
in
test
cmp
sub
bound
aaa
int3
es
mov
ljmp
xor
push
cwtl
cmp
fldl
push
imul
lret
xchg
sub
jb
pushf
dec
dec
flds
loop
nop
int3
sahf
mov
in
inc
testb
cltd
jb
jge
rcrb
and
int
sub
jb
cmp
out
push
loope
adc
xchg
push
sarb
fsubrs
insb
xor
push
jb
xchg
xchg
sti
ss
and
out
sbb
ljmp
movsb
jl
cwtl
push
popa
in
mov
jmp
lock
pop
xchg
xchg
fdivl
xor
nop
fwait
sti
loopne
push
div
add
or
mov
pop
cmp
cwtl
push
adcl
mov
inc
cmp
mov
ret
jb
xor
inc
inc
sub
mov
inc
mov
or
or
loop
adc
inc
mov
int3
stos
xchg
loopne
cmp
rol
and
sbb
cmp
in
insl
add
adc
cmp
sti
je
jl
or
pop
xlat
cwtl
ja
mov
les
lock
pusha
dec
iret
mov
push
insb
jge
daa
add
sub
cltd
xchg
push
icebp
pop
add
pop
dec
pop
sbb
int3
js
xchg
or
sbb
out
negb
xchg
loop
out
lahf
mov
add
movb
insb
pop
push
or
adc
ror
or
cmp
adc
dec
paddsb
and
loope
jbe
fimull
inc
and
out
rolb
pushf
sub
pop
cmc
or
out
pop
dec
mov
lea
jo
add
stos
punpckldq
loopne
adc
outsl
mov
or
shrb
pop
enter
test
and
ret
push
or
insb
adc
fs
sbb
add
int
cmp
xchg
mov
sbb
adc
pop
ss
mov
push
std
mov
shrl
mov
mov
sub
pop
incb
push
pusha
jne
jmp
adc
ds
js
stos
push
in
and
xor
mov
or
adc
data16
out
xchg
nop
xchg
insb
or
push
xchg
mov
ds
sub
dec
jo
pop
push
cmp
std
stos
hlt
jo
nop
xor
cs
cmc
and
adc
pop
iret
jge
cwtl
js
in
rclb
mov
lea
shlb
stos
into
dec
rcrb
int
lods
call
gs
or
cmp
mov
int3
in
andps
jbe
inc
jl
stos
xor
sub
add
and
mov
sub
pushf
rolb
inc
out
add
gs
adc
mov
insl
nop
enter
orb
enter
pop
adc
jb
pop
test
inc
jmp
or
sbb
nop
sbb
mov
add
jmp
fidivrs
mov
js
dec
push
in
out
loopne
inc
or
sahf
clc
push
nop
xor
or
adc
dec
ljmp
pop
add
xchg
std
popf
mov
push
clc
xlat
dec
or
insl
in
movsb
fs
jge
xor
lret
or
or
dec
mov
sub
jae
or
pop
add
mov
adc
ljmp
sbb
xchg
sub
ljmp
inc
test
aam
dec
pusha
out
or
int3
xchg
adc
aam
aam
addr16
adc
shrl
or
jne
push
movsb
pushf
sub
xchg
sbb
nop
push
sub
dec
stos
inc
mov
fcoms
cmp
cmpsl
bswap
or
jb
out
xor
mov
mov
lret
lods
mov
sti
int3
fistpll
mov
mov
or
push
cmp
mov
jp
and
sbb
shr
rorb
sub
inc
popf
cmp
into
in
xor
shlb
or
inc
add
int3
cmp
fnstcw
stos
mov
lock
test
add
push
mov
hlt
mov
sbb
cmp
cmp
aas
aaa
hlt
int
xchg
shrl
fdivrl
aas
adc
or
push
sub
cs
sub
inc
adc
shrl
iret
arpl
push
sbb
sbb
sub
or
dec
and
jecxz
jo
inc
add
pop
ficompl
mov
xchg
and
je
negb
push
sbb
mov
mov
pushf
aaa
dec
xchg
lcall
cmp
scas
aam
xor
stos
mov
or
pop
or
call
adc
sbb
xchg
push
xor
inc
adc
fisubrs
or
sub
clc
xor
call
mov
lods
int
pop
ja,pt
pop
cmp
rclb
mov
int3
js
cmpsl
add
and
out
aad
loopne
loop
es
and
or
nop
sbb
dec
das
lds
add
call
insl
cmpsl
rol
enter
and
and
push
xchg
aaa
lods
in
clc
xchg
pusha
aam
repnz
or
lds
dec
jg
cmp
push
iret
jge
repnz
mov
js
test
add
pushf
jg
fimull
jns
jle
add
leave
test
adc
int3
iret
int
icebp
test
pushf
jl
sbb
cwtl
ficoms
fdivrs
jecxz
loope
xchg
movsb
mov
lds
pop
cld
xor
jb
fidivrl
push
es
nop
mov
int3
rcl
js
stos
insb
lds
jp
in
mov
bound
out
xor
outsl
pushf
mov
jnp
or
out
ljmp
jmp
scas
sub
rcl
lcall
aas
test
xchg
test
jg
dec
movswl
push
loope
loopne
lods
push
pop
xor
rolb
aas
and
lock
and
outsl
cmp
popa
cmp
popf
mov
jne
sbb
dec
and
imul
mov
xchg
mov
dec
lret
dec
jecxz
insb
mov
fs
in
sub
stc
dec
jmp
sbbb
and
jo
cmp
hlt
dec
movb
adc
js
mov
pop
insl
push
pop
faddp
mov
inc
xor
movsb
cwtl
or
shrb
movb
hlt
bswap
pop
out
out
or
dec
aam
aad
dec
fiaddl
loope
adc
jmp
in
or
pop
outsb
dec
in
lret
push
lret
add
gs
ljmp
xchg
int3
movsl
fstps
sbb
stos
xor
cmc
push
dec
xor
lahf
and
sbb
in
insb
psllq
and
jl
pop
int3
orl
mov
sub
mov
lret
test
add
pop
testb
loop
js
popa
lods
adc
cmpsb
dec
mov
or
mov
adc
xchg
sbb
sbb
cmpsl
inc
and
jb
cld
inc
dec
test
add
bound
xor
stos
ret
adc
aas
jb
test
scas
jp
xor
mov
insb
mov
and
sub
mov
push
mov
pop
sbb
inc
jle
cmp
ds
add
shrl
int3
inc
test
or
pop
or
iret
mov
test
arpl
jecxz
mov
jo
insb
xor
ss
mov
gs
mov
cmp
pop
pop
popa
pop
cmp
es
xchg
push
sub
in
ret
ror
loopne
in
or
jg
pop
enter
sbb
mov
xorl
jae
push
mov
xor
movsb
mov
imul
adc
ret
or
xor
aam
sbb
loopne
cmp
pop
and
lods
push
subb
inc
jmp
fcomps
lcall
mov
adc
cmp
sti
mov
sbb
dec
push
in
or
push
push
inc
icebp
rcll
or
popf
stos
ret
into
scas
dec
out
test
daa
pop
jae
dec
ret
add
cwtl
pop
dec
pshufw
mov
mov
mov
mov
push
dec
sub
push
inc
repz
dec
mov
push
imulb
xorb
xor
push
int
in
xor
int3
ja
clc
enter
xchg
js
stos
sub
test
sbb
mov
pop
xchg
push
mov
add
adc
sub
sahf
inc
iret
or
outsb
rolb
or
sub
push
mov
iret
xor
jne
pop
nop
mov
cld
sbb
xor
mov
jmp
xor
int3
push
sbb
es
and
mov
movsb
outsb
rep
cmp
or
in
mov
pop
push
loop
rcrb
lods
xor
mov
push
xchg
push
mov
or
hlt
xchg
mov
jo
fcomps
sub
or
call
mov
mov
movb
in
fidivs
pop
push
and
int3
pop
fldenv
mov
loop
imul
lods
sarb
or
repnz
in
push
ss
sub
testb
cmpsb
or
test
mov
int3
xlat
shl
call
call
dec
sbb
in
enter
imul
inc
lret
les
push
add
cld
mov
movsb
cmp
les
clc
sub
jns
pop
fdivs
fcos
or
mov
ljmp
aad
cmpb
int3
push
sub
xor
mov
inc
jl
sbb
lea
js
add
pushf
push
stos
call
pop
aaa
in
sub
jne
or
push
sub
aas
jo
dec
cmc
insb
outsl
das
sbb
push
ds
andl
xor
xchg
xchg
cmp
or
shrb
sbb
test
popa
xor
cltd
adc
dec
mov
les
nop
dec
dec
push
pop
das
loope
mov
addl
scas
xchg
pop
inc
ficompl
dec
std
in
repz
xor
bound
sub
and
lock
loop
lahf
mov
push
mov
push
and
rolb
nop
xor
enter
pop
push
inc
or
into
ja
lea
push
repnz
jg
outsb
out
ja
mov
iret
jo
jo
dec
push
scas
adc
aaa
addb
adc
mov
stos
outsb
fbld
mov
das
repz
or
dec
xchg
inc
bound
orb
sbb
imul
inc
into
lods
pop
and
cmp
dec
outsb
dec
pop
and
push
repz
int3
movsb
mov
pop
sbb
xchg
cld
mov
call
nop
cmpsb
js
int3
ficoml
loope
and
xor
inc
ss
and
lret
frstor
inc
cmc
mov
dec
adc
lds
or
cmp
or
addl
mov
mov
xor
sub
test
icebp
and
cltd
pushf
imulb
jecxz
in
mov
pop
in
insb
or
push
inc
cli
pop
jge
out
pop
in
pop
in
pop
test
xchg
mov
mov
push
sbb
mov
scas
and
iret
call
and
add
cld
shll
nop
mov
and
mov
std
testb
cmp
jl
pop
sbb
fs
mov
loopne
xchg
or
fistl
xchg
sub
pushf
pusha
addr16
add
cmp
movb
sub
pop
pop
mov
inc
or
jle
lret
lock
sbb
lock
or
xchg
out
je
idivl
fiaddl
and
push
rolb
fcmovbe
mov
push
into
lods
sbb
rcr
xchg
adc
mov
and
push
outsl
push
stos
or
lret
mov
jp
test
shr
sbb
stos
or
cmp
in
je
add
cmp
insb
add
push
cmc
sbb
ja
mov
out
mov
sbb
call
flds
xlat
ret
popf
dec
mov
xchg
push
hlt
or
xor
aam
in
dec
lock
add
mov
mov
iret
or
push
xor
mov
adc
dec
add
nop
sbb
xchg
add
in
insb
shr
mov
aaa
test
add
mov
call
sub
mov
xchg
iret
and
jbe
or
cmp
cmpsl
out
mov
xor
cmp
and
cmp
pop
push
divl
loop
dec
insl
mov
hlt
sub
xlat
push
or
shlb
push
sub
mov
push
jecxz
movsb
inc
mov
jns
xchg
clc
push
xchg
xor
and
push
add
jb
mov
pop
xor
test
mov
lods
pop
int3
xchg
mov
dec
repz
icebp
cmp
shlb
sub
loop
and
jmp
jo
repnz
inc
sub
mov
push
add
imul
test
push
fiaddl
cmp
pop
jg
sbb
mov
pop
jb
or
out
in
enter
sbb
xchg
movsb
int3
mov
dec
fisubs
cltd
subl
xchg
in
lret
insb
xchg
test
inc
out
ljmp
lcall
sub
cmp
jl
enter
roll
push
icebp
fadd
rcrl
out
ds
inc
les
jne
sbb
cmp
pop
push
mov
mov
pop
mov
jg
pop
hlt
fnsave
xchg
mov
insb
push
icebp
and
ret
or
inc
adc
mov
push
adc
mov
jno
sub
inc
loopne
inc
repnz
jge
push
or
imul
or
popf
jne
repnz
fdivp
push
pop
lea
push
je
dec
addb
adc
lret
fcmovnu
es
lods
mov
loopne
pushf
sbb
ret
pop
nop
jg
sub
outsb
cli
mov
stos
push
hlt
push
pop
aaa
sub
cmp
movsl
sbb
cmp
inc
adc
fcompl
nop
push
mov
notl
shrb
add
mov
inc
clc
sbb
pop
dec
lods
fadds
push
or
pushf
insb
lahf
cmp
sub
cmc
push
adc
ljmp
je
xor
lret
loopne
orb
sub
je
and
or
xor
and
jmp
test
mov
or
test
nop
lock
push
add
push
pop
popf
dec
loope
lods
sub
ror
push
adc
aam
or
js
popa
lods
in
rcrl
inc
cltd
sub
mov
pop
pop
mov
push
in
fs
in
test
jl
jbe
out
pop
or
jns
adc
ss
jnp
mov
ret
push
rorb
outsb
sub
sub
add
jecxz
sub
xchg
jl
add
nop
sbb
mov
cmpsb
loopne
das
nop
sbb
rolb
mov
fdivs
xor
jg
movl
cld
and
xchg
fdiv
mov
push
roll
sarl
mov
xor
jl
clc
cltd
loopne
hlt
inc
push
and
enter
shlb
shld
enter
addr16
cmp
jmp
adc
inc
or
inc
dec
bound
sbb
and
js
in
negl
inc
ds
adc
into
push
sub
mov
sbb
test
jne
inc
sahf
mov
adc
dec
cmp
or
mov
inc
xchg
nop
shll
les
or
add
sub
aam
rcll
and
xchg
adcb
or
jl
fsubl
enter
or
mov
sub
lahf
jecxz
aam
outsb
pop
push
test
dec
jo
insb
dec
scas
daa
lret
pop
adc
mov
in
mov
dec
lahf
into
inc
push
rorb
stos
mov
cmp
cltd
leave
ja
mov
sbb
aam
mov
sbb
lret
jg
clc
xor
push
lods
pop
nop
xor
mov
adc
or
add
lahf
sbb
lcall
push
test
stos
cwtl
mov
mov
call
mov
sub
fimull
lcall
inc
sbb
lock
add
xchg
sub
sbb
cwtl
mov
clc
and
mov
divl
sub
sub
mov
decb
mov
push
fdivrl
fsubs
psraw
insb
push
push
fwait
mov
and
je
adc
int
inc
push
fidivl
insb
jnp
lods
sub
stc
sub
call
int3
hlt
push
xchg
push
inc
push
xor
ljmp
push
in
pop
add
lahf
pop
insb
bound
lock
movsb
xlat
add
push
test
ljmp
pop
enter
jl
scas
dec
or
in
push
pop
or
ja
sbb
lods
jecxz
sub
mov
test
ljmp
cmp
stos
insb
add
and
pop
cmp
ficoms
inc
out
dec
mov
and
aam
or
sar
popf
in
pushf
cmp
sub
aaa
into
sub
pop
addr16
in
iret
das
adc
xor
xchg
mov
inc
fists
jle
cmpsb
pop
ljmp
mov
lahf
ds
inc
out
fildll
in
out
insb
jo,pn
dec
or
push
inc
imul
lcall
dec
dec
jmp
push
mov
mov
xchg
mov
pushf
sub
sbb
stos
ds
mov
or
inc
inc
or
jns
mov
lret
sbb
add
je
dec
pop
insb
or
mov
cmp
push
nop
add
pop
fcomip
push
dec
dec
dec
or
in
add
gs
inc
jne
ljmp
rorl
lcall
dec
sub
sbb
mov
sub
adc
mov
add
repz
mov
mov
mov
aaa
loop
sub
repnz
sbb
in
cld
fs
xor
bound
pop
cwtl
cltd
sbb
mov
dec
imul
rorb
xchg
jg
adc
sbb
add
test
sbb
cwtl
clc
movsb
push
enter
jb
aad
cmp
xor
sub
xchg
ja
lret
loopne
or
and
inc
sub
mov
dec
inc
cli
xor
inc
cmp
movsl
push
orl
add
dec
xchg
mov
sahf
dec
sbb
sahf
out
mov
nop
mov
and
and
adc
test
clc
into
cmp
add
repnz
jl
mov
xlat
xchg
add
leave
hlt
cwtl
mov
xchg
cwtl
inc
loope
jne
dec
call
and
fmuls
jno
mov
cld
or
in
cmp
cltd
div
popa
outsl
or
push
push
adc
leave
inc
jge
sbb
pop
mov
sub
sub
push
mov
ret
jns
add
out
fmulp
dec
xchg
hlt
dec
push
jg
push
jecxz
mov
fadds
pusha
push
or
ja
les
lock
pop
mov
dec
lret
testl
shl
in
mov
clc
movsb
in
in
xchg
mov
dec
mov
jo
push
mov
inc
je
sub
inc
test
mov
push
xchg
sub
enter
das
sub
ret
leave
shlb
js
push
je
int3
pop
push
dec
push
lea
add
cld
sti
xchg
pop
jne
adc
and
mov
les
mov
jp
jecxz
cmp
xor
add
loop
xor
adcb
loopne
insb
les
mov
jo
sbb
push
repz
or
test
dec
sahf
in
cld
adc
push
iret
and
push
dec
clc
test
test
pop
sbb
in
adc
push
and
cs
gs
daa
loop
lock
mov
mov
ss
adc
nop
int3
pushf
outsl
imul
je
dec
pop
sbb
subl
int
inc
jle
out
dec
nop
add
rclb
addb
push
add
test
ljmp
pop
int
cmp
lock
mov
ja
cmp
scas
xchg
inc
or
inc
dec
das
add
repz
add
sub
sbb
and
mov
xor
push
test
dec
das
lcall
sub
loop,pt
test
sbb
ds
cmp
xlat
in
pusha
sbb
xor
push
fdivrl
enter
cmp
addb
xchg
aad
lahf
inc
je
dec
sbbb
je
adc
movsl
out
mov
sbbb
pushf
jne
push
jl
mov
pop
int3
cmp
fmull
add
mov
stos
mov
pop
enter
push
pusha
or
insb
fnstsw
test
movsb
dec
test
pop
fldcw
out
and
inc
jecxz
pusha
add
pop
cmp
int3
cmpsl
pop
adc
inc
and
out
enter
sti
lahf
lods
add
aam
int3
cmpsl
daa
test
fs
cmpsb
shlb
dec
popa
test
pop
rorb
jo
fmull
adc
fcomps
push
sub
sbb
outsb
test
sbb
je
sbb
xchg
int3
jle
pop
xchg
push
repnz
jl
mov
in
or
push
in
mov
movsb
inc
je
jo
in
xor
xchg
push
mov
stos
mov
mov
fcoml
jo
sub
clc
loope
js
incl
xor
lds
insb
inc
push
inc
mov
call
sbb
or
pop
cmp
jecxz
sbb
dec
ljmp
mov
sub
or
rcrl
loope
fmuls
jo
fldl
adc
mov
dec
out
xchg
adc
test
pop
jl
fnsave
or
and
lahf
mov
xor
addl
clc
dec
inc
aam
and
pusha
fmull
push
inc
lret
pop
jbe
or
mov
or
xor
rolb
pop
es
loopne
int3
stos
jnp
and
cmp
pop
leave
jb
fdivl
push
dec
mov
in
pop
sbb
mov
adc
jg
mov
addr16
sub
loope
adc
ljmp
dec
in
jecxz
sub
movsb
js
mov
out
sub
mov
sub
pop
test
gs
add
out
mov
xchg
in
push
test
jo
pop
clc
dec
pop
xchg
dec
fmull
lods
lret
cwtl
mov
and
and
ss
imul
negb
adc
mov
mov
lods
jmp
adc
jp
insb
push
stos
jge
push
out
mov
loopne
movsb
sbb
lods
mov
sbb
inc
push
adc
mov
pop
and
sbb
je
test
or
ret
shrb
mov
or
push
out
push
inc
insb
cmp
dec
mov
push
fsubr
push
add
inc
inc
loopne
xor
mov
pop
push
repz
mov
outsb
push
lcall
in
jge
jl
jmp
pop
jge
and
or
std
pop
int3
jno
cli
pop
fmuls
push
add
push
scas
insb
mov
mov
ja
cld
lret
lret
sub
test
sub
cli
lods
jge
push
cmp
add
insb
movsb
in
sbb
aam
or
pushf
cmp
jl
add
xchg
orb
in
je
push
in
scas
sub
or
test
and
inc
or
clc
add
jmp
rcrl
sahf
ljmp
add
adc
add
js
in
cmc
dec
inc
push
xchg
push
test
mov
push
into
add
push
xchg
outsb
std
loopne
mov
mov
test
ss
cld
mov
adc
mov
cmpsl
outsl
out
sub
adc
xchg
or
fimull
aam
ja
hlt
test
inc
sbb
dec
adc
pop
repz
and
pushf
pop
dec
in
xchg
push
inc
adc
btc
stc
inc
cmp
shlb
jnp
and
iret
pushf
lods
pop
push
dec
mov
sub
add
or
push
and
mov
enter
mov
pop
psubw
add
mov
ss
mov
aad
sub
call
je
xor
dec
xchg
xchg
pop
push
out
cmp
mov
inc
jmp
xchg
das
mov
xchg
mov
pandn
lods
lret
in
xchg
ljmp
in
sub
xor
or
mov
xor
in
sub
stos
push
mov
lods
or
jb
pop
cmp
repz
insb
add
mov
mov
jl
mov
adcb
or
inc
or
rcrl
add
dec
int3
or
jp
test
lods
push
pop
scas
sub
dec
test
mov
mov
dec
test
sbb
sar
or
sbb
sbb
ja
mov
xchg
jo
loope
das
les
js
ds
mov
cmp
hlt
add
fmul
and
jle
subb
xor
arpl
inc
and
in
int3
insb
ret
int
addr16
and
pop
mov
clc
push
faddl
jne
inc
aad
xchg
cmp
push
pop
xor
jb
imul
enter
fcoms
or
cwtl
push
xor
cmp
je
sarl
mov
xchg
out
jbe
sahf
leave
and
jg
push
push
add
fs
pop
and
mov
out
int3
or
mov
or
add
jo
push
hlt
push
mov
jb
rorb
pushf
push
nop
mov
sbb
mov
xorb
cld
cmp
jg
or
leave
dec
int3
xchg
mov
sti
xchg
mov
mov
loop
sbb
mov
adc
test
cmp
xchg
movsb
rorb
aam
xor
mov
sbb
idivb
pop
int3
sub
and
in
inc
push
jle
loop
inc
sbb
xchg
int
fdiv
push
movsb
lret
cwtl
add
mov
cs
daa
andb
lahf
xchg
cmp
cmpsl
in
iret
ljmp
sbb
sbb
sbb
adc
outsb
and
jnp
lahf
xor
and
mov
xchg
sub
sub
jecxz
gs
xchg
pop
or
mov
jmp
push
push
in
sub
icebp
rclb
cs
cmpsb
les
ja
enter
faddp
jmp
iret
mov
leave
push
mov
xor
sub
cmc
cmpsl
add
mov
dec
out
js
dec
and
mov
and
mov
cmpsb
ds
adc
outsl
insb
fildl
push
inc
stos
es
shrb
repnz
int3
mov
idivl
int3
iret
inc
imul
sbb
mov
push
movsb
ljmp
pop
jle
cs
dec
add
pminub
or
jae
into
and
xor
add
dec
cld
mov
or
sub
stos
sub
jbe
and
lahf
clc
ljmp
pop
call
pop
ret
add
pusha
or
into
adc
or
or
mov
inc
psrad
ljmp
test
sahf
mov
loopne
mov
dec
cmp
inc
push
sbb
cli
or
adc
in
out
scas
mov
and
xchg
int3
or
inc
shrb
int3
loopne
push
imul
dec
cltd
mov
movd
in
dec
dec
test
and
ljmp
xor
push
push
pop
inc
repz
pusha
add
push
imul
pushf
iret
push
into
dec
and
add
dec
mov
pop
jns
and
xchg
sub
js
pop
outsl
sbb
push
int3
sbb
jle
jecxz
mov
mov
mov
dec
adc
or
repz
enter
loopne
inc
xor
pushf
sub
push
stos
jle
int3
iret
insb
mov
int
sbb
cwtl
xchg
or
bound
mov
rolb
xchg
sub
popf
loopne
les
push
loopne
icebp
insb
and
pop
pop
sub
xchg
add
xchg
add
jae
mov
sbb
mull
or
lea
leave
push
out
sub
cmp
dec
sub
fcomps
jg
mov
jno
cmpb
std
mov
dec
sub
or
mov
xor
sbb
push
nop
cmp
xchg
xlat
sbb
mull
shr
mov
pushf
and
test
or
out
sub
and
inc
push
pop
test
mov
adc
xchg
mov
xor
sub
mov
mov
sub
in
xor
jl
es
outsl
cmp
inc
xchg
sbb
pop
int3
aam
sbb
mov
xor
in
out
lret
pop
mov
cmp
sbb
rclb
insb
ljmp
jno
cltd
out
movsb
test
pop
inc
outsb
adc
inc
dec
sbb
mov
xchg
adc
aas
clc
lds
sub
sbb
dec
es
pop
repz
add
sbb
stos
scas
jno
cmp
or
out
cmp
stos
loopne
mov
call
ja
shrb
incb
rcrl
push
xor
loopne
or
jnp
enter
mov
mov
mov
mov
fsubl
pusha
jo
add
sbb
xor
sub
mov
ljmpw
fmuls
sbb
mov
or
shrl
push
sbb
rcrb
fnstcw
shr
add
jecxz
mov
mov
jl
inc
loopne
inc
out
das
enter
hlt
lcall
repnz
adc
push
ret
insb
nopl
push
in
mov
and
in
fs
jo
xor
sti
dec
movsb
mov
iret
xor
xor
shrb
cwtl
sbb
das
fisubrs
adc
push
jbe
sub
je
dec
sbb
lods
out
repz
push
mov
pop
mov
jae
push
xchg
ret
ljmp
sbb
xor
les
adc
mov
push
mov
test
pushf
push
pop
add
jl
ss
scas
shrb
int3
insb
aas
mov
lret
sub
dec
ret
es
mov
or
or
xchg
push
push
mov
mov
push
mov
push
and
or
imul
lcall
lods
fildl
sti
xchg
fwait
sbbb
stos
mov
aas
aam
test
xchg
repz
aam
inc
push
les
pop
fldl
out
push
jp
pop
mov
int3
int
gs
ljmp
inc
pop
popl
imul
push
sub
out
mov
in
hlt
test
enter
push
pop
mov
movsl
cs
movsb
jp
movsb
insb
test
add
inc
lcall
sub
sahf
cmp
and
mov
pusha
jmp
push
adc
ljmp
inc
lods
add
xchg
inc
mov
mov
jo
lret
rorb
push
mov
std
es
gs
mov
loope
mov
xlat
cli
pop
sbb
std
mov
cs
neg
cwtl
adc
or
pushf
lret
inc
pop
jnp
pop
fcoms
pop
cmp
loopne
je
jmp
cmp
mov
add
lods
inc
sub
popf
mov
or
lret
adc
ja
add
enter
or
icebp
pop
mov
mov
push
test
or
aam
pop
pusha
jmp
scas
or
mov
sbb
pushf
inc
jnp
pop
aam
movsb
dec
pop
dec
push
add
iret
dec
aad
or
lret
jg
dec
aas
in
loopew,pt
scas
pop
lret
aam
repnz
insb
pop
jge
sub
enter
push
add
push
push
imul
outsl
inc
ds
and
sbb
xchg
xor
mov
outsl
sbb
arpl
inc
inc
lods
insb
mov
mul
inc
mov
rclb
nop
cmp
cmp
sub
subl
leave
jnp
mov
enter
mov
mov
mull
int3
jno
sbb
xchg
stos
lock
xchg
push
add
xor
push
sbb
aam
es
sahf
inc
sbb
lods
int
pop
mov
mov
sbb
inc
js
in
pop
pop
xchg
testl
add
cmp
mov
mov
add
mov
sti
push
enter
fadds
call
cmp
mov
cmp
sub
aaa
ljmp
or
pop
jg
aas
lahf
or
adc
mov
jecxz
int3
sbb
inc
movsl
jge
repnz
nop
sub
mov
pushf
test
add
push
sahf
push
adc
push
sbb
xorb
adc
fldt
leave
call
jmp
push
cli
testl
in
add
mov
pushf
mov
adc
cmp
sbb
pop
add
js
out
pop
insb
lahf
dec
icebp
fisubrl
mov
xchg
or
aas
adc
add
lds
or
sarl
addr16
loopne
pushf
movsb
xchg
mov
xlat
shlb
out
mov
push
hlt
int
cmp
adc
outsl
xchg
xlat
or
jle
ljmp
mov
xchg
push
lea
and
stc
and
repz
jp
xchg
lods
sub
ljmp
int
inc
dec
inc
out
in
inc
movaps
push
data16
adc
sbb
pop
loopne
pop
rorb
inc
in
jb
jmp
test
insb
push
bound
xchg
sub
inc
lods
jle
and
test
sbb
adc
xchg
and
sbb
fs
mov
and
in
push
jns
jl
pop
add
insl
das
xor
pusha
pop
cmp
movsb
dec
outsl
fsts
mov
jecxz
mov
mov
jne
inc
pop
lods
and
icebp
lds
jp
add
int3
outsb
fimull
nop
sub
and
add
int3
push
mov
or
rcll
push
push
cs
les
pop
pusha
cmp
adc
xlat
adc
js
or
xor
or
pop
push
rclb
lods
mov
imul
imul
mov
xorb
popa
jns
movsb
or
fucomi
mov
adc
inc
mov
mov
xchg
push
inc
movd
cwtl
pop
mov
in
xor
mov
loopne
cmp
jae
adc
xchg
xchg
arpl
mov
fs
stc
or
das
cmp
mov
hlt
sbbb
add
js
insb
insl
dec
jno
xor
dec
popf
push
mov
add
sub
mov
fs
filds
sub
iret
fldt
mov
loopne
xchg
mov
lret
notl
dec
cmp
mov
mov
jecxz
cmp
push
pop
lds
or
sub
jmp
in
ror
add
push
xor
and
ret
push
jle
hlt
pushf
add
mov
and
clc
fwait
shll
mov
cltd
jmp
push
mov
js
jecxz
cmp
jle
mov
jmp
adc
lret
data16
fbstp
out
lds
fstp
cmp
dec
mov
cmc
dec
adc
call
push
fidivrl
sub
inc
push
dec
dec
gs
pop
push
mov
movsb
int3
and
cmc
push
cld
xor
iret
jecxz
pop
xchg
xor
jae
int3
adc
or
mov
cmp
in
sub
arpl
int3
popa
mov
ret
into
dec
xchg
movsl
mov
cmp
fs
cltd
adc
hlt
pop
mov
movsl
int
pop
sub
jp
mov
les
and
lock
mov
cs
repnz
push
push
or
dec
shr
push
enter
cmp
cmp
mov
and
inc
psrlw
and
in
and
sbbb
sarb
xchg
outsl
jo
sbb
lods
mov
mov
in
lock
movsb
loopne
fimull
add
les
jbe
insb
add
call
mov
lcall
mov
add
inc
push
lret
or
dec
imul
cmp
out
test
adcb
test
xchg
rclb
sub
ret
pop
mov
int3
adc
ljmp
jb
movsl
and
and
shll
call
cwtl
loop
dec
mov
xchg
sbb
in
addb
cmc
out
push
dec
adc
xor
xor
pop
test
and
or
and
xor
mov
mov
mov
mov
movsb
out
in
mov
mov
push
nop
xor
inc
dec
or
add
je
adc
movsb
cld
dec
xlat
add
ss
or
pop
mov
out
add
js
insb
and
jae
lret
sub
mov
in
pop
hlt
add
xchg
call
cmpsl
add
std
pop
adc
or
sbb
test
mov
inc
sub
lods
inc
mov
je
jle
cs
repz
stc
int
sub
inc
jg
and
pop
nop
sbb
pop
add
sub
adc
les
aad
sbb
xor
or
and
mov
pop
push
jge
adcl
mov
or
pop
sub
loopne
dec
inc
mov
test
or
into
mov
in
xchg
lods
lea
pop
jle
enter
or
add
pop
or
pop
dec
jno
fsubrl
pop
sbb
mov
testb
push
dec
pushf
jl
loope
and
xchg
mov
mov
loop
cld
sub
xchg
adc
push
sub
mov
sub
movsb
add
ficoml
mov
pop
out
mov
push
xor
iret
and
and
xchg
call
mov
mov
or
adc
xchg
lahf
dec
ret
pop
inc
fsts
sub
add
test
dec
inc
out
mov
dec
cmp
rcl
ljmp
cmp
andl
sub
push
rcll
sbb
rol
sbb
nop
int3
cwtl
insl
out
pop
mov
shrb
movsl
shrl
dec
and
xor
and
inc
fnsetpm(287
lea
add
test
loopne
xchg
sbb
adc
repnz
fidivrl
and
mov
cmp
insb
adc
pop
xchg
lds
push
sar
jne
out
mov
xor
lock
dec
fsubr
mov
or
popf
pop
dec
push
loop
cwtl
mov
neg
xor
xchg
icebp
mov
sbb
mov
adc
addl
imul
ljmp
orb
and
shrl
leave
into
bound
call
mov
pusha
sti
pop
std
pushw
sbb
fadds
adc
push
dec
and
mov
xchg
xchg
or
aaa
pop
mov
push
in
lahf
mov
jmp
and
insb
and
add
adc
push
stos
push
or
push
sub
loopne
lds
movsb
test
repz
mov
jg
movsb
cmc
dec
inc
outsb
push
add
imul
mov
iret
pop
rcl
js
cltd
sub
push
rcrl
test
jmp
mov
ss
or
loopne
in
aam
push
aas
jnp
pop
ffree
fidivrl
inc
rclb
fmul
inc
mov
add
dec
adc
fisubs
cmp
mov
xchg
mov
gs
cmp
mov
jo
lcall
lcall
jae
pop
rcr
mov
into
sub
pusha
and
lock
xor
incb
rolb
shr
xor
or
lock
adc
les
add
add
sub
sub
test
lock
hlt
or
jb
xor
mov
test
adc
je
dec
clc
fs
push
mov
xor
pop
adc
mov
sbb
inc
out
lock
xor
pop
and
jge
div
inc
repz
in
sbb
icebp
mov
inc
jmp
dec
in
insb
mov
jp
sub
incb
cltd
jl
popf
mov
repnz
xchg
into
push
out
adc
fdiv
data16
or
movsb
xchg
mov
aam
mov
fistl
test
stos
imul
or
or
jbe
jb
or
pop
jmp
test
cwtl
push
pop
sub
shlb
mov
add
cmp
fldl
dec
xchg
push
js
or
sbb
outsl
mov
jmp
and
xchg
daa
in
sbb
push
clc
mov
lret
and
inc
sub
push
ror
imul
outsl
or
xor
cmp
pop
and
out
ljmp
pop
inc
inc
repz
scas
fcmovnbe
xchg
cmp
faddl
int3
add
aas
cmp
inc
add
adc
inc
pop
xchg
and
ljmp
xchg
inc
sub
bound
mov
jg
or
cmc
pop
pop
mov
inc
out
les
jb
andb
arpl
add
movsb
les
hlt
or
lcall
adc
mov
mov
sbb
push
in
and
sub
insl
mov
sub
scas
pop
add
js
mov
in
sbb
dec
cs
push
adc
jg
xor
ret
xchg
push
leave
or
stos
xor
and
inc
xchg
les
pop
pop
inc
repz
push
bound
imul
sbb
insb
sbb
cmpl
pushf
pop
loopne
lock
std
in
mov
dec
mov
or
ss
mov
aas
jnp
sub
cmp
mov
push
or
out
rorb
dec
int3
sbb
pop
scas
imul
pop
dec
sahf
call
cmp
addr16
test
adc
sub
inc
xchg
cs
repnz
enter
out
mov
dec
icebp
sbb
push
fwait
jae
pop
das
add
ror
add
test
bound
hlt
adc
xchg
xlat
inc
orl
loopne
sysenter
stc
sbb
les
stos
or
mov
in
orb
scas
fmull
nop
inc
xor
cmc
dec
jle
sbb
xor
xchg
sub
aas
xor
pcmpeqd
and
out
fistpl
nop
hlt
jae
xor
pushf
and
jge
lock
sti
jp
lods
std
pop
sbb
and
push
loop
into
push
cmp
pop
stc
addl
sbb
mov
push
xor
cmp
je
pusha
sub
cmc
jl
out
jecxz
adc
outsb
cmp
pop
sub
mov
mov
dec
sbb
xlat
inc
in
ljmp
lock
aaa
cld
ds
cld
inc
out
sub
add
jns
sub
sbb
out
enter
mov
add
data16
cmc
or
inc
lods
pop
sbb
jge
or
out
out
xchg
mov
or
aad
push
sti
xlat
fs
push
xor
mov
jle
push
pop
loopne
add
jae
inc
and
test
scas
lcall
adc
mov
clc
or
outsl
or
pushf
xor
lock
orl
loop
sbb
pop
orps
push
mov
adc
sahf
mov
push
std
jl
into
inc
sbb
xchg
mov
push
fcomp
daa
lcall
add
xchg
dec
or
adc
lock
xchg
adc
aam
pop
xchg
rcr
repnz
xor
dec
mov
je
lahf
lds
loop
sub
jmp
andb
mov
lret
incb
inc
ret
xor
rcr
jnp
sbb
lret
test
push
xchg
test
push
scas
and
dec
in
divl
fidivrs
out
push
adc
dec
in
add
or
out
loopne
pextrw
stos
dec
fisttps
ljmp
jmp
std
or
xchg
push
je
cmp
ss
cmp
pop
fcompl
push
loopne
cld
xchg
in
aam
insb
inc
jecxz
and
outsb
cmp
js
or
std
lds
lods
rorb
push
ljmp
pop
or
jmp
xchg
adc
add
xlat
shlb
fs
out
mov
or
cmp
imul
in
fdivs
inc
push
pop
adc
pushf
adc
pop
mov
and
imul
xor
add
add
or
lret
lock
pop
dec
std
int3
xor
xor
cmc
pushf
dec
and
inc
xor
mov
in
pop
ds
dec
lock
test
out
shll
rcrb
mov
std
in
or
iret
ss
sbb
lahf
xchg
mov
push
out
xchg
shlb
xchg
mov
jbe
mov
orb
loop
aas
data16
popa
test
test
subb
adc
dec
push
addb
add
add
and
pop
mov
inc
je
stc
jno
xor
xor
xor
dec
cmc
cli
lock
dec
enter
and
divl
int
aas
lods
mov
xor
mov
rorb
out
and
xor
mov
mov
push
shl
sub
in
in
push
dec
fs
cmp
scas
loope
fcomps
xor
dec
mov
out
sub
shlb
ja
pop
hlt
scas
adc
fs
stos
sub
mov
ss
and
in
xor
pop
push
mov
rclb
cmp
push
arpl
mov
shll
xchg
dec
mov
xor
rcr
or
lods
outsb
movsl
and
push
xor
out
test
jno
mov
test
pop
sbb
out
adc
mov
jmp
stos
jle
iret
inc
out
inc
insl
inc
mov
fmull
push
test
and
int3
mov
ret
mov
movsb
xor
shrb
cmpsb
pop
xchg
pushf
adc
pop
lods
subl
out
adc
in
xor
test
mov
xorb
sar
sub
mov
pop
rorb
outsl
adc
xor
lods
out
or
bound
jmp
xor
rorl
push
ds
movsl
xor
out
dec
add
dec
data16
lock
xor
cmp
dec
cmpsb
cmpb
cmp
adc
ja
push
shrb
push
js
loopne
int3
scas
in
pop
stos
clc
ror
pop
ret
sbb
dec
sub
lret
ss
cmp
pop
mov
pop
lret
push
sbbb
lcall
fldl
pop
mov
xlat
test
scas
cmp
mov
stos
or
adc
jne
and
cmp
xchg
inc
out
jl
adc
and
or
iret
cwtl
out
les
loope
popf
test
pop
lahf
sbb
pop
mov
sti
outsl
mov
mov
jmp
mov
xchg
fistpll
sub
repz
aam
cmp
pop
add
mov
add
lods
aam
pop
daa
imulb
hlt
pop
or
rorl
cwtl
outsb
inc
xchg
ljmp
mov
or
xchg
jecxz
sbb
or
jmp
pop
xor
xorl
adc
leave
jno
push
xchg
or
fucomip
lahf
ljmp
popf
mov
movsb
psubw
inc
and
xorb
or
lods
or
sub
test
cmp
xor
ja
enter
push
loopne
aam
xchg
jmp
ljmp
mov
mov
mov
cmp
mov
cmpb
mov
jecxz
call
ja
iret
lods
push
mov
mov
mov
jnp
rorb
les
shlb
or
cmp
testl
fiadds
lock
jae
push
dec
cld
cmp
cwtl
or
mov
mov
in
shll
push
or
jmp
imul
cld
pusha
pushf
sub
mov
pop
arpl
insb
mov
cs
xchg
or
pushf
jge
inc
adc
dec
into
dec
push
xchg
or
lret
leave
xchg
sub
push
sbb
push
dec
pop
mov
scas
sbb
orb
xlat
test
push
xor
rorb
jecxz
or
sbb
rcrl
ss
xchg
or
in
sar
cmp
mov
or
in
mov
push
push
icebp
pop
lret
mov
fidivrs
mov
xor
or
xchg
addb
xchg
jle
or
out
sbb
push
jae
clc
push
ds
push
pop
dec
jmp
addl
sbb
mov
ljmp
mov
inc
inc
daa
jb
jo
or
push
pusha
push
repz
hlt
cmpsb
or
in
hlt
les
inc
mov
jecxz
or
xchg
pop
cmp
divb
cmpsl
sbb
mov
fcmovnu
xchg
insl
push
push
adc
xchg
fildll
dec
or
lcall
or
and
scas
jno
sbb
or
int3
push
adc
cld
jbe
cmp
cmp
in
xchg
or
sbb
stos
cmp
xor
outsl
incb
arpl
lods
mov
in
gs
and
add
scas
xchg
cwtl
lea
outsb
and
dec
in
ret
push
adc
or
sbb
sub
aad
scas
or
sahf
adc
mov
jno
xlat
sbb
adc
mov
in
adc
sub
int3
iret
push
inc
fld
ja
mov
stc
add
or
test
scas
lret
sbb
shl
adc
negl
or
xchg
xor
mov
push
sti
dec
or
aaa
add
xor
or
fdivrl
dec
lock
repnz
mov
test
cwtl
mov
fwait
or
and
aas
addr16
cmp
notl
je
popf
mov
ja
sbb
rcrl
loopne
clc
fs
or
int3
and
flds
or
mov
push
adc
xchg
cmp
std
or
fmul
fldl
bound
cmpsb
xchg
jnp
repnz
or
popa
xchg
cmp
ljmp
or
nop
es
sbb
or
push
push
outsl
imul
mov
in
add
or
in
jp
sarb
or
out
shll
xchg
xor
jl
dec
shlb
stos
or
rorb
testb
adc
adcb
nop
mov
sub
xchg
popa
test
or
out
and
jmp
out
mov
mov
stos
call
int
jne
add
into
cmp
lds
cmc
lock
jno
lcall
mov
movsl
test
inc
cmp
ds
sub
and
mov
cmp
fdivs
loop
or
mov
aam
mov
lcall
push
call
movsb
mov
cmp
jnp
nop
and
mov
mov
psrlq
push
imul
or
push
xchg
sub
lret
or
push
add
in
out
or
or
mov
jle
add
push
dec
mov
fbstp
inc
std
or
mov
les
or
jle
popf
dec
jl
adc
sub
cmp
loope
or
push
cli
pop
cmp
je
mov
or
mov
inc
mov
or
addl
push
repz
push
xchg
or
std
arpl
or
push
insl
mov
ret
and
dec
dec
popf
cmpsl
outsb
bound
call
mov
pop
loope
push
push
push
jnp
iret
push
dec
popf
cli
cmp
ja
movsb
test
and
jg
aad
call
or
in
mov
lea
jmp
out
mov
mov
sub
or
push
add
insb
or
jle
fcompl
call
mov
inc
and
mov
pop
mov
lea
xchg
adc
cmp
std
mov
jge
mov
loopne
or
or
lea
rorl
fwait
sbb
les
push
imul
xor
lcall
ljmp
mov
adc
push
fisubl
mov
pushl
ja
pand
xlat
clc
jge
rol
or
sti
gs
push
insb
shlb
sub
lret
xor
lcall
mov
cld
push
push
sub
sbb
pushf
orb
mov
ret
scas
das
jae
jmp
xor
jge
in
pop
xchg
negl
aaa
cvtpi2ps
out
adc
arpl
jl
leave
mov
or
adc
push
and
orb
xchg
dec
jg
test
xor
add
ffreep
cmp
or
xchg
out
jge
dec
mov
pop
push
pop
stos
jle
push
push
outsl
xchg
pop
dec
or
xchg
mov
inc
sub
mov
xlat
stos
dec
imul
dec
inc
mov
out
push
dec
jge
dec
adc
push
dec
or
je
lcall
or
pop
cmp
or
inc
jge
int3
mov
and
push
xor
jl
or
xchg
loope
mov
scas
addsubpd
mov
pop
adc
rorl
inc
or
and
or
xor
sub
mov
sbb
and
cs
pop
mov
lods
fimuls
push
push
daa
sahf
insb
dec
decl
lds
iret
mov
jne
jo
or
or
aad
pushf
xor
or
es
inc
push
or
imul
testl
cmp
popa
add
fsub
sti
add
or
or
add
aam
ds
pop
and
repnz
insb
js
jmp
imul
jne
mov
sub
movsl
sub
hlt
int3
sub
lods
adc
sbb
mov
loop
icebp
pmaxsw
cmc
nop
xor
push
mov
sbb
or
movsb
sti
jb
ffree
push
push
flds
push
mov
mov
mov
fdiv
out
or
inc
or
fimuls
stos
or
add
inc
into
sub
cwtl
iret
pop
vmread
or
in
xor
nop
int3
sbb
and
push
or
jb
pop
movsb
rorl
mov
out
int3
sub
mov
jno
in
imulb
js
xor
inc
fucom
mov
push
dec
cmp
sub
pop
cmpsl
cmp
js
cmp
xor
cmc
xor
repz
int3
out
or
daa
fisttpll
push
sub
cmp
stos
mov
or
insl
cld
loop
pop
mov
mov
jnp
lds
clc
or
mov
in
or
mov
shll
cmp
cld
arpl
lods
adc
xor
adcb
daa
or
hlt
loop
adc
fildll
add
int3
mov
into
movq
lock
cmp
cltd
jne
xchg
pop
inc
inc
sub
mov
mov
xchg
push
xchg
push
cmp
jge
or
in
jbe
sti
pop
fimuls
out
out
or
dec
movsl
stos
pop
xchg
or
imul
sub
mov
fisubl
or
aaa
jbe
mov
std
sbb
inc
inc
or
fists
cmp
or
and
jae
push
or
jle
or
or
cltd
push
cmp
xchg
out
in
mov
dec
jo
xchg
notl
or
jnp
jns
push
push
mov
mov
pop
or
mov
lret
and
cmc
ja
inc
int3
or
cmpsb
loope
inc
aas
mov
loopne
add
mov
cmpxchg
bound
push
or
mov
inc
out
add
movsb
jne
and
pop
fcmovbe
insl
push
int3
jo
or
mov
out
or
xchg
lcall
mov
insb
out
mov
fcomi
jle
lods
mov
pop
cmpsb
or
push
inc
ret
das
cmp
cmp
pop
in
jns
hlt
or
sbb
cmpsb
push
mov
dec
call
pop
inc
cmp
xchg
shll
sbb
push
rcrb
gs
or
out
in
out
xchg
icebp
loop
add
or
outsl
fs
add
xchg
jo
ljmp
outsl
imul
mov
lods
push
mov
or
mov
jnp
or
mov
repnz
sahf
rcl
imul
add
sub
push
xchg
jae
or
data16
mov
inc
cmp
test
mov
jl
dec
in
cmp
orl
or
fdivrs
sub
js
out
mov
and
sub
xchg
push
in
lret
jl
cltd
mov
pop
enter
xchg
data16
sub
and
xor
sbb
add
and
clc
lods
or
inc
lahf
xchg
sbb
imul
aad
jbe
stos
gs
dec
shrb
stc
or
sahf
mov
or
and
lds
sbb
sbb
sbb
sub
pop
mov
push
dec
or
sbb
and
or
inc
ret
and
notb
push
mov
jg
iret
or
and
mov
jno
fcoms
or
fwait
pusha
ficomps
push
fdivp
or
cmpsb
jo
iret
dec
hlt
and
push
push
adc
addb
pop
xor
xchg
sahf
or
sub
sbb
push
lret
push
xor
sub
jle
cmp
inc
push
sti
roll
into
or
push
fwait
add
jno
or
aas
cld
jne
bnd
or
jmp
dec
xchg
sbb
or
stos
inc
inc
or
sbb
inc
int3
lods
mov
pop
movsl
push
pop
or
in
or
hlt
sub
add
adc
xor
adc
mov
ss
xchg
flds
push
lret
std
adc
fcom
xchg
cltd
xor
enter
lcall
repz
inc
and
or
fstpt
sbbb
in
pop
mov
pop
mov
leave
add
int3
fmul
in
decl
mov
xchg
add
pushf
cmp
fidivl
ja
or
jp
popa
mov
pop
jecxz
xchg
dec
mov
leave
or
pop
inc
sbb
ja
jns
or
mov
pop
loope
orb
sahf
mov
or
outsb
repz
pop
add
or
pop
xor
popf
cwtl
in
sub
inc
push
stos
or
push
or
or
rolb
in
decb
lret
lds
pop
mov
mov
jmp
or
inc
and
jo
pop
push
test
mov
inc
daa
xor
fisubl
push
rcll
mov
sti
scas
or
fadd
mov
movsb
test
pusha
mov
int
mov
imul
cltd
mov
test
or
subl
or
sub
xchg
mov
push
push
or
mov
jmp
pop
or
push
xchg
out
dec
jb
mov
cwtl
push
fs
ror
jmp
in
inc
push
lea
adc
sbb
adc
in
outsl
mov
sub
adc
mov
cltd
sti
pop
pop
inc
gs
setl
fcmove
lahf
mov
loopne
push
dec
push
fistpl
xchg
sub
or
pop
dec
ficoml
cmp
aas
or
jns
push
xchg
push
js
or
mov
rep
cmpsb
les
cmc
popf
dec
xor
mov
scas
cltd
int3
push
pop
out
or
cmp
mov
or
mov
dec
push
fimuls
or
aas
mov
mov
loopne
popf
ljmp
add
push
and
int3
xor
mov
add
mov
or
daa
lcall
test
insb
jo
repz
jg
push
nop
std
jne
popa
or
pop
or
das
inc
jmp
mov
or
cwtl
dec
mov
jb
xchg
or
popa
push
ja
out
jge
sbb
les
std
dec
or
clc
lret
imul
adc
pushf
sbb
sbb
cmp
or
mov
adc
xor
addr16
shrb
test
mov
call
add
add
mov
jno
adc
gs
pop
jle
or
mov
enter
mov
loope
int3
int3
jno
lret
adc
mov
xchg
insl
mov
ret
fs
or
out
fnstcw
jb
test
adc
repz
xor
loop
test
ret
aaa
popa
pop
call
push
mov
std
flds
or
cli
mov
inc
data16
adc
jno
sbb
dec
xor
or
aaa
sub
sbb
push
mov
popa
add
xchg
add
or
imul
lock
or
cmp
int3
out
lahf
sub
or
dec
stos
pop
inc
add
xor
fsub
xor
in
and
jl
sbb
mov
and
rcrb
je
fidivl
movb
cmp
or
ret
pop
cs
or
dec
mov
sbb
and
fcoml
push
inc
outsb
data16
and
pusha
imul
pop
sbb
mov
wbinvd
pop
push
xchg
dec
int3
ret
cwtl
or
iret
imulb
cmpsb
sub
mov
or
or
ret
jno
push
fisttps
adc
pop
sahf
xchg
clc
nop
or
xor
subb
lea
std
stos
or
inc
stos
aam
fimull
or
jae
cld
es
notl
jmp
clc
jo
cmp
push
popa
in
les
cmp
or
movsl
sti
xchg
lods
into
ret
syscall
mov
jge
aas
leave
add
jmp
movsl
repz
jmp
mov
and
inc
cs
push
and
dec
or
cmpsb
stos
sbb
xchg
or
sbb
inc
pushf
xor
inc
mov
imul
int3
ljmp
js
jbe
popf
scas
or
add
fld
or
lret
xor
fsubs
adc
or
roll
lods
daa
mov
clc
arpl
xlat
push
cmc
cmovp
xor
or
jb
mov
or
dec
in
xor
das
rcrl
or
push
jb
imul
or
outsl
aas
mov
cmp
inc
js
mov
xlat
loop
out
xor
xor
mov
add
dec
pop
fnstsw
loope
outsl
aad
ud2
test
add
or
mov
lods
or
mov
out
pop
mov
fucomp
or
sub
daa
xchg
mov
or
fisubrs
insb
pcmpgtd
lods
sub
mov
jb
lds
cmp
adc
sbb
int3
call
enter
or
repnz
push
adc
insl
arpl
jl
int
notl
fsubrs
jnp
je
js
ja
mov
adc
mov
sub
or
mov
data16
stos
mov
jo
cmp
xchg
cltd
mull
stos
shrl
jg
bsr
inc
sub
les
or
push
jecxz
add
jnp
pop
cwtl
sub
cmpsl
mov
sub
test
xor
outsb
test
xor
adc
sbb
decb
les
jbe
sub
aas
cmpsl
cmp
out
or
mov
int3
cmp
imul
mov
sbb
xchg
sub
or
je
push
xchg
pop
cli
addr16
sbb
orb
rorl
shrb
push
and
mov
fsub
pop
cmpsb
add
xchg
push
or
push
jo
push
shlb
pop
loope
sub
stos
or
dec
xor
sbb
out
and
lea
das
pushf
lret
push
rorl
adc
add
test
or
mov
loope
insl
cmpsb
ja
or
push
cwtl
std
pusha
js
fwait
adc
lcall
es
sbb
jmp
frstor
push
jne
pop
cmp
xor
add
jp
and
int3
dec
or
xchg
orl
jge
mov
push
jns
call
jnp
xor
gs
pop
aad
or
scas
lods
xchg
ljmp
or
lods
lahf
mov
jl
adc
sub
fs
iret
outsl
add
sti
inc
mov
insl
sub
fdivr
pop
cwtl
ffree
lock
jecxz
sbb
mov
or
xchg
int3
fmul
scas
setle
push
fsub
cmp
mov
push
pop
or
out
mov
or
incb
or
xor
add
cli
inc
test
or
aaa
push
push
sub
inc
cs
jl
or
ja
sarb
fildl
into
or
push
sub
push
mov
stos
xor
fdivrl
out
or
jecxz,pn
pop
sti
xchg
in
mov
lret
aaa
cmpsl
std
enter
rclb
add
sub
push
pop
stos
cmp
js
push
or
pop
xor
jns
pop
mov
mov
bound
or
lock
sub
je
or
lods
push
mov
cmp
clc
mov
test
mov
testb
sub
or
outsb
xlat
xchg
mov
mov
pop
gs
and
or
sub
and
cmc
iret
push
imulb
enter
or
xchg
mov
jno
in
insl
pushf
aaa
dec
fisttpl
sahf
inc
adcl
orb
ret
xor
add
dec
aam
or
or
mov
ret
push
cmp
in
sbb
push
or
cmp
xchg
sub
push
xor
into
mov
mov
cli
aas
or
test
jmp
test
js
out
push
movsl
into
jbe
jnp
adc
sbb
fs
lret
or
sbb
push
dec
popf
jg
or
mov
addb
cmc
xchg
or
int3
scas
jecxz
bswap
and
fcmovu
add
int3
xor
jns
cld
adc
mov
xor
mov
icebp
in
stc
xlat
lcall
imul
aam
pop
cmc
jl
cmpb
lock
in
or
nop
ljmp
fcoms
jo
leave
into
test
push
xor
pusha
mov
xor
scas
inc
or
js
daa
inc
xor
jp
dec
xor
dec
in
pop
or
dec
jmp
ret
cmpsb
or
aad
xstore-rng
cmpsl
inc
test
hlt
mov
sub
or
mov
push
jbe
scas
repz
fadds
lods
fnstsw
pop
int
inc
jmp
or
stos
jl
jnp
xor
cmp
cmc
adc
mov
and
js
lock
addr16
push
or
test
das
std
or
arpl
mov
and
or
int
rcll
fsub
enter
popa
adc
jb
loope
das
lods
and
out
inc
test
add
fdivl
test
outsl
or
cld
ret
loop
iret
mov
jg
or
hlt
jb
mov
in
outsb
cmp
mov
mov
or
xchg
mov
mov
iret
pop
popa
je
fwait
or
dec
nop
out
add
push
movsl
aaa
jp
mov
xchg
aad
xchg
adc
insb
shll
and
jbe
test
lods
pop
cmpsb
pop
cmp
inc
or
dec
cmp
lret
jl
pushf
add
jbe
push
adc
lea
in
dec
or
mov
inc
mov
int3
jns
mov
mov
cmpsb
or
push
mov
or
test
ja
or
push
cmp
sbb
loop
dec
dec
mov
inc
test
mov
jl
or
pop
push
xor
inc
xchg
or
jae
add
or
and
loopne
cmp
cwtl
mov
imul
rol
adc
insb
mov
repnz
sbb
add
out
inc
pusha
mov
das
ja
aam
jmp
test
or
int3
insb
xchg
mov
mov
notb
or
rclb
lret
jecxz
xchg
or
adc
mov
adc
or
out
sbb
xor
arpl
jbe
xchg
mov
fs
cmpsl
inc
pop
mov
and
or
jge
jmp
bound
mov
and
or
in
out
push
popa
inc
les
nop
mov
bswap
and
shrb
int3
or
mov
cmp
mov
sbb
loop
or
mov
aaa
rcrl
sbb
or
cmpsl
xor
cmp
mov
rolb
jle
or
dec
insb
jg
jbe
xor
or
sub
pop
sbb
push
ss
jecxz
jbe
xchg
pop
repz
das
pop
xchg
pop
xor
push
sub
or
jbe
outsl
lret
jmp
mov
ds
ljmp
or
stos
movsl
xor
push
jg
or
adc
iret
push
ficomps
or
rorl
in
or
fs
jnp
nop
xorb
js
test
or
push
daa
and
cwtl
cmp
xchg
and
pop
adc
sub
add
repz
ja
and
rolb
ret
push
xor
push
jbe
sub
mov
decl
xchg
mov
mov
pop
or
mov
bsf
adc
popa
and
ret
push
nop
aam
lods
xchg
lds
outsl
mov
push
loop
mov
aaa
popa
jbe
pop
cmp
push
lock
sub
jmp
into
pushf
xor
add
xor
aaa
aas
jnp
jge
pop
or
push
jmp
jae
mov
mov
cs
dec
or
sub
mov
mov
sbb
pop
push
xchg
in
jno
aaa
lea
mov
and
stos
cmc
cs
fisttpll
push
repz
xchg
out
flds
dec
repnz
or
scas
fcoml
inc
in
cmp
std
ds
enter
ja
repz
push
or
inc
inc
push
mov
test
dec
pop
enter
or
pop
xor
pop
or
aad
push
in
int
leave
inc
out
mov
push
pop
cmp
add
dec
rcrl
loop
dec
jg
test
fs
das
push
sub
adc
insb
pushf
mov
adc
push
cmc
les
in
pop
loop
sub
inc
test
xor
cs
int
mov
or
jle
loop
xchg
clc
ret
adc
or
lahf
bound
jno
jne
jbe
and
jno
push
and
inc
add
inc
mov
dec
stos
insb
fs
xor
cmp
pop
insb
ds
sub
dec
push
push
push
xchg
push
sar
mov
dec
mov
mov
xchg
push
cmp
adc
mov
inc
pop
push
movsl
mov
scas
cmpl
subb
out
mov
mov
dec
mov
in
scas
mov
nop
pop
and
mov
negl
int3
inc
xchg
outsl
jle
out
shlb
jnp
mov
cmpl
mov
cmc
push
xchg
sub
cmc
das
push
aaa
add
xchg
lods
movsl
push
pop
incb
cmp
xor
adcl
dec
pop
popf
add
lea
incl
stos
push
or
into
fs
enter
push
rcrl
out
aaa
mov
into
mov
sub
jge
sub
out
outsl
js
in
xor
inc
outsb
notl
out
adc
in
scas
jp
lret
inc
lea
shll
push
inc
or
sarl
inc
xor
ss
or
sub
dec
mov
into
mov
or
or
scas
pop
test
mov
xchg
lret
xor
mov
incb
pop
out
inc
lcall
jae
cmp
xchg
sbb
xchg
lret
mov
pushf
ret
inc
pop
cmc
das
adc
in
arpl
push
mov
pop
mov
add
inc
inc
mov
mov
stc
pop
je
xchg
pop
xlat
or
push
orl
fwait
push
jbe
xlat
mov
ret
in
mov
rolb
lret
std
jo
xchg
cmc
sub
inc
jae
lcall
nop
dec
cwtl
in
insl
int
pop
testb
mov
add
add
pop
sub
cmp
xlat
test
cmpsb
sahf
sub
dec
xor
pop
inc
test
adc
out
pusha
push
jl
clc
rcrl
cwtl
idiv
push
movsl
xor
lcall
xchg
lods
out
mov
inc
lea
out
cmp
lods
lretw
sbb
testb
pushf
mov
pop
gs
sbb
scas
in
mov
inc
or
fwait
std
mov
inc
fisubs
jnp
pop
jo
cld
jbe
dec
ret
mov
mov
in
cmp
notb
int3
in
lret
dec
lahf
dec
out
inc
xchg
ds
test
sti
lahf
push
xchg
sub
xor
lret
mov
popf
repz
call
scas
bound
mov
fcomps
sbb
mov
pop
out
lcall
mov
mulb
xchg
adcl
mov
mov
dec
push
and
xchg
repz
in
pusha
mov
lahf
ss
pop
les
add
ljmp
add
mov
add
mov
outsb
push
das
xchg
in
aaa
jp
pop
aad
adc
popf
push
popa
mov
je
adc
sbb
jns
fimull
lcall
nop
pop
xchg
inc
jne
xor
out
adc
push
cmp
cmc
fcomps
xchg
jl
fwait
and
fbstp
or
mov
into
ret
inc
dec
insb
xchg
mov
push
xor
out
mov
int3
sbb
fcomps
scas
mov
jecxz
iret
cmp
hlt
cs
mov
jmp
int3
and
add
outsl
notl
or
insl
dec
es
fs
push
adc
xor
call
add
punpcklwd
pop
out
pushf
push
or
loopne
lds
out
jle
aad
or
daa
lds
out
mov
sub
mov
sub
and
aaa
dec
cmp
lcall
jo
inc
jb
movsl
xchg
inc
sbb
sub
push
push
dec
sbb
pop
jno
inc
sub
fdivrl
or
out
pop
test
jbe
test
sbb
cmp
je
lret
mov
xchg
dec
mov
adc
push
pop
out
outsl
fwait
js
cwtl
sbb
sbb
faddl
add
sbb
out
cmp
ror
fsubl
or
dec
or
out
jb
pop
push
push
repnz
pop
ret
add
xchg
mov
inc
enter
sarl
adc
cmp
repnz
divl
or
pushf
nop
xchg
xchg
dec
inc
aam
scas
add
js
mov
pop
xor
sub
fxtract
adc
xor
out
imul
int3
fs
xchg
adc
in
push
and
fcompl
mov
nop
divl
push
jl
xlat
mov
add
addl
jns
pop
jae
or
out
inc
fsts
cmp
incb
cli
inc
js
push
fcoms
aaa
lcall
dec
add
push
pop
lahf
inc
sub
in
cli
jp
mov
dec
movsb
sti
and
aas
jecxz
stos
fsts
inc
xchg
or
and
std
or
shlb
push
or
insb
fs
imul
dec
xchg
out
in
hlt
ss
push
test
movsl
ljmp
dec
inc
cli
fdiv
or
mov
clc
mov
rorb
push
in
mov
cmp
sbb
or
lret
lods
adc
lods
sub
jecxz
dec
out
lret
sbb
inc
out
inc
jne
outsb
mov
fisubs
dec
xor
cld
loope
sbb
cmp
mov
lods
add
push
sub
xchg
ret
or
push
pop
and
aam
leave
orl
sti
fcmovne
arpl
call
push
jno
jp
nop
push
stos
sub
sub
pop
cmc
adc
and
jnp
mov
jbe
aaa
ss
xor
test
push
sub
ret
sbb
xchg
fisttps
sbbl
xor
inc
sub
sbb
pop
inc
loope
and
sbb
jmp
sub
push
jge
add
addb
gs
loopne
repz
adc
fstps
or
adc
ljmp
test
repz
lock
push
in
add
test
test
dec
pop
sub
jo
xchg
mov
das
push
ss
insl
sbb
aas
popl
pop
push
push
mov
fldcw
nop
lods
jb
and
in
jecxz
icebp
lret
dec
pop
int3
or
jp
pop
jns
mov
fs
adc
insb
das
or
ja
aas
push
pop
test
cli
loope
cmpsb
mov
in
dec
sub
mov
stos
cmp
ret
in
add
stc
and
in
cmp
cli
or
xchg
xor
xchg
mov
sbb
loope
mov
dec
mov
xlat
and
mov
leave
jae
pop
adc
sub
add
add
mov
xchg
or
xor
out
in
push
pop
or
stos
mov
pop
subb
sub
inc
arpl
mov
adc
mov
in
inc
xchg
and
jle
dec
mov
jl
test
xchg
bt
in
sbb
mov
and
lret
sbb
pop
gs
ja
add
andl
mov
push
and
pop
and
lds
lods
push
push
cmpsb
in
in
je
icebp
out
stos
clc
cmp
xor
xchg
jo
pop
dec
sub
lcall
cltd
cwtl
lret
and
ret
lea
bound
mov
mov
dec
cwtl
pushf
push
hlt
pop
sti
inc
xor
sbb
stos
jl
cld
xchg
aaa
outsl
jmp
int
push
lock
add
mov
pop
pop
call
cmp
push
in
jecxz
pcmpgtb
std
cld
push
out
and
add
call
pop
push
sti
inc
xor
mul
mov
loope
jb
aam
pop
mov
push
lret
out
push
adc
sbb
std
test
sahf
and
push
in
inc
mov
fnstcw
imul
cmp
lods
add
jns
fisttps
mov
push
pop
mov
or
popf
enter
popa
push
push
mov
in
add
sbbl
mov
pusha
push
push
dec
mov
cmp
pop
or
scas
sub
lods
mov
add
in
pop
inc
sahf
sbb
inc
or
cmp
call
push
and
lock
dec
mov
jbe
add
test
inc
add
push
mov
cltd
iret
and
lds
int3
ret
inc
pop
mov
addr16
jp
call
sahf
add
mov
sub
fiaddl
in
rorb
jne
enter
pop
and
ljmp
iret
nop
or
pop
jmp
scas
jno
inc
pop
lahf
out
daa
rcrb
lds
cmc
push
ss
cs
fmuls
int
dec
push
stos
ficomps
stos
fdivrl
nop
std
add
xor
arpl
mov
adc
cmp
add
inc
inc
pushf
xchg
adcl
dec
pop
mov
popa
and
insb
adc
cmp
dec
int
push
xchg
test
and
dec
pushf
push
add
mov
or
mov
fbld
data16
into
stos
in
fdivl
test
hlt
rep
fiaddl
hlt
dec
das
repnz
inc
mov
loop
outsb
push
loope
xadd
repz
mov
add
movsb
and
xchg
lock
out
and
inc
pop
xchg
push
xlat
push
and
xchg
mov
push
out
push
xchg
cmp
decl
stos
xchg
pop
push
psrad
inc
xor
inc
sbb
mov
dec
pop
push
jmp
test
sub
inc
ret
or
inc
in
sub
pop
jmp
repnz
pop
repnz
xchg
popf
cld
pop
vmovntps
dec
mov
sbb
test
out
xorb
mov
sbb
seto
in
and
adc
sbb
clc
dec
lock
enter
sub
rorb
test
jmp
adc
aam
xchg
aad
imul
inc
aas
xlat
adc
pop
cwtl
ret
mov
pop
adc
ficoms
in
pushf
iret
and
scas
xchg
lret
repz
or
aad
xlat
sbb
add
xchg
jae
inc
xchg
out
pusha
pop
fcoml
inc
inc
mov
mov
pop
ret
leave
and
shl
or
in
lret
out
jae
sub
adc
les
push
or
xor
clc
dec
inc
fcompl
aam
stos
cmp
arpl
mov
xor
add
lret
xchg
in
cmp
cltd
inc
mov
xlat
rol
jno
and
push
addl
fcomi
mov
jo
js
sbb
idivl
iret
sbb
xchg
or
call
aas
jns
stc
and
xchg
sbb
mov
fs
aaa
bound
inc
lret
mov
scas
stc
bound
push
sub
sub
shll
fdivl
adc
sbbb
sub
out
mov
push
push
sbb
push
xor
xor
and
insb
test
out
pop
orb
hlt
xchg
mov
mov
lea
aaa
loop
inc
mov
add
sbb
xchg
or
iret
hlt
or
and
fldt
or
mov
cmpsl
mov
xor
xlat
sub
xchg
pop
aas
dec
push
out
adc
add
cmp
jne
inc
xor
arpl
cld
pop
xchg
out
in
push
scas
aas
into
inc
test
test
sub
cli
sbb
or
aaa
lret
decb
push
das
decl
into
push
fistpl
out
inc
or
arpl
fsubrs
out
lods
or
xchg
sbb
xchg
ja
out
jge
push
push
in
adc
aaa
cmpsl
scas
sub
sbb
imul
das
pushf
jae
mov
bound
dec
xor
orl
and
push
push
leave
dec
cld
mov
sarb
fsub
adcl
loop
nop
orl
ficompl
cmpsb
lret
or
dec
mov
fstpl
sbbb
test
sub
out
sub
pop
sbb
or
out
sbb
cld
call
or
cltd
push
push
jne
adc
pop
icebp
pop
test
and
xor
insb
push
in
bound
loopne
pop
lock
out
mov
pop
std
push
pop
bound
ret
mov
shl
inc
and
fs
decl
nop
jge
in
xor
push
or
clc
int3
mov
imul
rcll
mov
mov
cmp
mov
add
xchg
testl
stos
pushf
cmp
fs
es
push
push
inc
lahf
cmp
jge
mov
ss
push
sti
ret
ja
sbb
pop
pushf
push
lret
mov
icebp
jecxz
push
push
dec
xchg
test
inc
sbb
loop
aas
pop
daa
out
int3
xor
add
ret
aas
xchg
and
adc
dec
fisttpl
cltd
cld
pop
push
sbb
xor
mov
frstor
jmp
aam
mov
in
test
add
pop
add
fbstp
mov
subb
lock
mov
inc
popa
adc
das
mov
stc
sti
iret
cwtl
outsl
sub
cmp
scas
inc
cmpsb
add
and
inc
in
push
mov
pop
pop
mov
xor
nop
inc
mov
sahf
sti
out
pop
and
add
sub
push
mov
insl
movsl
rol
js
out
cmpsb
pop
fcmovnb
fnstsw
repz
push
cmpsl
sub
inc
push
pop
repnz
orl
pop
cmpb
out
loopne
icebp
jb
xchg
data16
xchg
nop
adc
arpl
sub
rolb
pop
push
push
dec
mov
lcall
inc
cltd
push
push
push
add
pop
xchg
xor
push
jp
nopl
inc
dec
fistpl
setae
lret
lods
jbe
out
add
stos
stos
dec
bound
out
inc
jo
mov
push
fs
mov
test
in
push
inc
inc
xlat
mov
sub
pop
pop
push
mov
cli
lds
out
sbb
or
inc
imul
mov
push
negb
lret
test
popf
cld
dec
and
cmp
popf
push
pop
ret
adc
xor
dec
bound
sti
and
sarb
push
add
mov
dec
and
sub
xlat
nop
and
test
pop
pushf
cmp
sub
outsl
xor
pop
ror
mov
jno
pop
out
inc
dec
loop
pop
aam
jnp
notl
ja
daa
lcall
lock
fistl
sub
adc
imul
mov
push
mov
dec
lahf
cmp
out
out
mov
mov
lret
mov
add
jle
dec
sbb
nop
out
lcall
jnp
dec
out
mov
lods
ss
mov
call
jae
push
or
into
and
jmp
insb
outsb
insl
cmp
push
cwtl
inc
mov
lds
out
jl
sbb
pop
inc
push
sbb
testb
or
mov
stos
sbb
cs
dec
and
les
sub
call
ror
push
xchg
add
lods
push
jg
scas
subl
add
push
pop
jmp
add
and
mov
rcrl
sbb
out
or
sbb
lret
lcall
jl
pop
scas
adc
fwait
iret
clc
inc
sarl
fisttpl
mov
out
popf
dec
push
aas
ja
and
jnp
mov
dec
popa
push
loope
xor
or
ljmp
out
inc
pop
lcall
pop
cld
decl
fs
decl
dec
mov
cmpsb
xchg
xchg
int
sub
sbb
ficompl
cltd
cmpsl
in
pushf
aaa
lcall
pop
int
aaa
das
xchg
cmp
cmp
fildll
jg
xor
add
inc
add
jo
cmp
fs
sbb
das
push
inc
mov
lock
call
or
sbb
pop
and
push
jp
xlat
sub
push
xor
inc
pop
sub
loope
jbe
sbb
test
loopne
mov
mov
push
pusha
into
hlt
roll
and
xchg
mov
sahf
mov
sbb
mov
inc
or
fsubl
xchg
dec
xchg
or
lods
inc
in
jl
mov
aaa
scas
repz
dec
jo
xor
rcrl
dec
out
scas
out
fcoms
push
hlt
mov
test
add
test
add
add
sub
pop
in
mov
ljmp
pop
add
enter
fs
adc
mov
jo
or
leave
jno
or
js
ret
test
icebp
lret
pusha
pop
out
jl
sub
xchg
mov
sub
sar
test
mov
ljmp
or
les
inc
push
cmp
stos
sub
jecxz
or
mov
insb
jmp
sub
jnp
xchg
and
bound
adc
xlat
and
pushf
hlt
mov
dec
mov
pushf
or
and
jnp
pushf
lods
pop
push
adc
in
inc
pop
adc
hlt
sbb
xchg
xchg
iret
sub
shll
std
xchg
mov
lahf
mov
jmp
out
pop
push
pop
adc
ljmp
insl
pop
dec
pop
insb
jg
test
sub
mov
jmp
in
dec
push
sub
fs
cld
in
cmp
mov
inc
test
adc
in
add
je
cld
mov
loope
pop
fs
cmp
sti
lea
cmp
fbld
cmp
cltd
jle
pop
icebp
pop
mov
dec
push
jb
mov
hlt
adc
mov
and
mov
pop
xor
inc
repnz
ds
mov
fldl
repnz
dec
push
fs
and
pop
in
inc
sbb
mov
or
movsb
test
addl
sahf
movsl
call
adcl
or
bswap
push
cwtl
pop
or
xchg
repz
mov
les
lds
push
jecxz
cwtl
iret
nop
aad
stos
repz
popa
cmp
data16
mov
push
or
addl
je
ss
or
jnp
mov
sbb
xor
push
xor
in
call
cmp
out
jb
int
xor
repz
push
iret
lock
mov
out
push
push
inc
xor
cmp
pushf
int3
icebp
jae
std
stos
sub
popf
xchg
lret
ja
sbb
inc
sbb
push
cwtl
pop
push
xchg
mov
outsl
add
out
push
les
insb
xor
fcompl
int
or
or
cmp
inc
jno
stos
sbb
in
sbb
cmpsl
sub
test
jbe
mov
pop
push
in
add
pop
push
pushf
repnz
inc
pop
push
sti
les
mov
dec
pop
cltd
and
add
push
xor
xor
sbb
and
data16
and
lock
ret
xchg
aas
arpl
mov
sarl
xchg
sub
iret
icebp
inc
push
mov
xchg
iret
imul
jle
lods
cld
fwait
inc
in
aam
or
pop
loope
push
out
sbb
stos
imul
sbb
mov
pop
or
jbe
ss
inc
stc
mov
jp
imul
ret
fdivrs
in
flds
repnz
ljmp
out
dec
jp
lret
test
icebp
mov
cwtl
pop
push
fistpl
pop
lret
xorb
xchg
pop
jbe
nop
cmpsl
push
sub
test
cltd
iret
pop
cs
mov
sbb
in
push
and
pop
loope
add
push
jp
xchg
iret
mov
cs
sub
ror
or
out
add
pop
js
and
out
pop
sub
call
inc
cmp
cmp
ss
das
cmp
outsb
and
fidivl
pop
xchg
inc
jb
push
cld
mov
cmpsl
pop
bound
divl
jb
cmpsl
mov
out
adc
test
fistpll
xlat
xor
adc
inc
xchg
test
xchg
dec
sbb
fwait
sub
xchg
xor
adc
add
outsb
add
push
je
push
mov
daa
out
pop
mov
rorb
orl
sbb
mov
xchg
sub
cltd
clc
outsl
or
push
aad
mov
into
fidivrs
cmp
loope
sahf
outsl
cmp
add
push
stc
pop
data16
push
xor
ret
pop
pop
sarl
mov
mov
push
enter
mov
js
repnz
fsubr
mov
ret
dec
push
outsl
fadds
inc
popl
int3
nop
jle
fmul
dec
add
sub
push
mov
ret
dec
jo
movzbl
cmp
aad
dec
scas
clc
clc
add
push
pusha
and
ja
add
and
cmpl
mov
pop
xchg
in
fsubrl
orl
add
sarb
or
push
das
stos
in
outsb
pop
or
mov
ja
call
and
dec
insb
in
out
mov
mov
in
mov
pop
in
mov
dec
dec
sub
test
mov
mov
aaa
and
xor
ret
fwait
shl
sub
test
cmc
in
fildl
out
and
in
sbb
pop
or
das
repz
iret
and
mov
sti
push
mov
lret
loope
repnz
fnsave
sub
iret
and
xor
bound
in
stos
cmp
mov
pop
bound
xchg
push
je
test
ja
push
imul
or
sbb
lods
pop
dec
jecxz
testb
sub
sti
pushf
fdivs
push
ljmp
loop
gs
enter
mov
xchg
inc
mov
ljmp
out
lock
or
sbb
add
bound
sbb
dec
cmpsl
mov
fs
jmp
icebp
imul
push
das
sub
fdivs
mov
inc
or
fnsetpm(287
push
xchg
dec
push
cmp
inc
adc
lcall
add
out
xchg
lods
mov
add
lahf
mov
lods
pop
mov
lods
out
push
cmp
and
cmc
insb
push
sbb
test
push
mov
in
jno
add
mov
sbb
mov
iret
hlt
pop
mov
mov
dec
insb
mov
sub
cmp
imull
aam
and
sbb
mov
jns
std
push
stc
pop
scas
pop
loop
or
loopne
sbb
sbb
fistps
and
int3
cmpsb
adc
inc
out
int3
push
pushf
in
std
xchg
jmp
enter
dec
xor
xchg
andl
pop
int3
push
xchg
mov
sbb
add
lock
xor
mov
or
sub
ja
push
cmp
jecxz
sub
mov
gs
fcompl
sub
mov
pop
enter
push
add
dec
mov
jnp
loope
mov
or
lods
jecxz
mov
or
fistpl
in
push
dec
push
and
inc
push
sbb
out
test
mov
mov
icebp
inc
scas
xor
dec
pop
movsb
popa
dec
add
icebp
pop
xchg
rorb
out
mov
cld
call
je
push
dec
pop
push
movsl
les
add
fxch
scas
lods
cmp
pop
mov
mov
mull
adc
std
or
or
jns
gs
pop
push
push
push
int3
ret
out
dec
divb
fiadds
add
mov
incl
mov
iret
push
out
lcall
inc
inc
pop
cwtl
mov
add
incl
inc
sub
cmp
jecxz
roll
iret
lret
jb
or
rorb
sbb
add
in
or
ljmp
lock
stos
xchg
add
incl
mov
fwait
lea
add
cmc
xchg
fistps
out
inc
xlat
add
cmc
test
test
call
and
mov
and
jecxz
sub
dec
mov
sbbl
sub
jg
scas
adc
icebp
imul
and
bound
mov
pop
sbbl
add
adc
outsl
pop
das
out
out
std
mov
cmc
daa
stc
push
js
adc
iret
or
jle
push
daa
jmp
loopne
dec
mov
fidivl
mov
mov
cld
pxor
or
inc
cmpsb
sub
out
pop
pushl
jmp
push
and
sbb
std
movsb
lock
dec
cmp
mov
jnp
push
insl
sbb
ds
inc
adc
cltd
scas
lods
cmp
and
test
xor
mov
adc
cwtl
and
test
inc
in
cmp
subb
and
stos
orl
jp
mov
xchg
clc
push
nop
push
sbb
imul
out
in
incl
lret
in
pop
mov
pusha
int3
cli
sbb
adcb
mov
movsl
add
cmp
rcrl
push
cmp
lods
or
out
or
sbbb
and
sub
cltd
lret
shrb
mov
and
fsqrt
inc
sbb
add
je
mov
roll
aam
add
stos
in
pop
or
stc
cmc
mov
add
lods
imul
scas
lret
stos
mov
and
addr16
in
xchg
mov
mov
jle
loop
and
test
mov
mov
inc
je
out
stos
adc
loope
in
outsl
pop
xor
fs
sbb
sub
fcmovnbe
inc
add
or
add
fs
cltd
push
inc
add
and
lds
dec
leave
out
mov
repz
test
out
push
lahf
mov
sahf
scas
mov
mov
and
in
repz
add
cli
xchg
sub
shlb
adc
fimull
mov
xor
pop
xor
pop
sbb
rclb
fisubs
out
fsubrl
push
or
ret
enter
lret
sub
push
enter
xchg
cmc
testl
insl
imul
inc
lock
jmp
mov
fistl
dec
jb
ss
nop
push
outsb
jg
sub
xchg
xor
rorb
xchg
dec
mov
lahf
mov
mov
or
xchg
push
jnp
sbb
mov
in
cmpsl
or
jg
insb
out
pop
mov
test
loope
xchg
pop
out
loope
lock
add
pop
int3
push
mov
sbb
mov
fs
mov
insb
loopne
xchg
lock
dec
subl
push
jo
xchg
dec
push
lcall
xchg
bound
in
sub
sbb
stos
or
shll
mov
in
movsl
xchg
pop
or
push
push
pop
push
icebp
mov
fs
aaa
rcr
sbb
int3
jnp
inc
pop
inc
cmp
test
pop
push
out
pop
lret
xor
xor
sub
nop
cmp
cmp
psraw
or
inc
and
lret
mov
mov
and
sub
out
cmc
push
mov
jmp
mov
xchg
daa
pop
sub
pushf
in
sub
aas
mov
pop
popf
mov
lret
icebp
add
in
shlb
rcll
dec
xchg
mov
pop
adc
dec
inc
pop
sub
push
test
add
push
mov
xchg
inc
add
loope
out
stos
jl
mov
iret
nop
aad
lea
ds
add
inc
iret
fimuls
loopne
dec
jmp
iret
cmp
call
fstp
insb
jbe
repnz
inc
out
imul
fidivl
popa
mov
jns
inc
rcrl
stc
jge
mov
iret
or
lock
outsb
movsl
dec
out
out
and
in
mov
inc
push
inc
or
adc
inc
in
push
xchg
cmc
faddl
add
cltd
or
aaa
pop
dec
cmp
test
mov
dec
aam
pop
adc
lea
inc
or
and
jnp
call
rcrl
call
popf
or
shrb
or
jb
rcrl
lock
dec
mov
sbb
in
adc
jns,pn
mov
adc
jae
sub
out
ds
sub
fs
mov
xchg
xor
loop
pop
orl
pusha
or
in
add
inc
pusha
jg
inc
sti
push
jnp
arpl
mov
aad
jo
in
mov
inc
pop
mov
popl
in
sub
or
mov
lret
insb
or
out
out
push
out
enter
shl
push
cltd
sub
sub
pop
pushf
ds
frstor
pop
repnz
xor
mul
lds
jecxz
ret
inc
sbb
jp
scas
insl
cmp
pop
xor
mov
leave
in
dec
cli
imulb
enter
push
cmp
sbb
mov
test
dec
mov
xchg
add
in
adc
pusha
mov
in
sbb
fcomi
mov
add
cwtl
data16
dec
push
dec
lods
sub
mov
out
dec
lcall
add
scas
push
pop
addr16
xor
sahf
stc
mov
and
push
jg
pusha
adc
xchg
iret
in
outsl
cmpsb
pop
sub
add
out
mov
mov
call
xlat
add
xor
pop
lds
adc
add
out
mov
add
push
shlb
in
xchg
sub
sbb
cmpsb
cmp
out
push
fisubs
ret
sahf
ror
sahf
xchg
xchg
xor
sti
xor
push
insb
leave
shll
pop
xchg
xor
adc
inc
lret
or
inc
in
xchg
dec
addr16
jbe
push
add
push
ret
fistl
loope
jae
in
push
add
fiaddl
or
andb
inc
sbb
xchg
pop
test
jg
out
inc
jmp
lods
ucomiss
pusha
cs
mov
push
pop
insb
rcr
lcall
fs
aad
adc
daa
icebp
or
cli
mov
adc
cmp
aam
call
insl
add
cltd
add
mov
pop
cmp
xchg
sarl
stc
rcr
xor
inc
push
out
ja
and
pop
insb
lods
lcall
lcall
int
arpl
lods
nop
and
enter
inc
pop
fimull
sbb
fwait
or
pushf
mov
cmp
insb
daa
and
cmp
xchg
out
loopne
add
add
add
adc
mov
fucomp
mov
mov
jno
ss
and
or
inc
hlt
repz
scas
out
inc
js
dec
inc
sbbb
out
inc
ds
fcomp
cmp
test
fs
inc
imul
nop
sub
mov
push
cmp
pop
out
pop
ds
shrl
pusha
and
add
insl
xchg
stc
fildll
or
pop
movsl
jo
mov
enter
icebp
mov
and
jo
jge
psrad
push
mov
cmc
sub
push
pop
fldl
test
add
push
test
pop
xchg
push
mov
cli
add
mov
in
dec
lahf
test
fsts
mov
out
adc
hlt
fwait
sbb
or
jmp
inc
leave
sub
cmp
fs
xor
inc
int
call
sbbb
mov
psubusw
jne
mov
cwtl
int
int
call
and
xor
add
leave
or
test
xchg
add
push
adc
fs
xor
ftst
out
push
fwait
or
popa
push
out
adc
adcl
push
pop
inc
dec
jp
in
and
insl
pop
es
sbb
pop
xchg
cmp
add
and
loope
or
inc
out
aas
loop
mov
cld
enter
cmp
and
pop
popf
add
jno
adc
xchg
add
nop
lock
popf
push
inc
arpl
add
or
stos
push
pop
inc
fscale
jp
add
out
and
ja
scas
add
mov
and
test
xor
test
sbb
pop
stos
in
hlt
inc
insl
fs
hlt
ljmp
pusha
and
in
lret
xchg
neg
decl
aam
scas
mov
out
rcl
or
call
movsb
fld
test
aam
test
or
fmul
scas
cmp
mov
pop
nop
addl
and
sub
sbb
lea
sbb
ret
push
aas
pop
loopne
pop
sbb
add
sub
aad
test
pop
push
adc
pop
in
out
xor
insb
data16
in
cmp
mull
mov
arpl
std
jl
mov
push
out
dec
or
dec
bound
pop
pop
sub
pop
in
adc
andb
mov
push
xor
scas
cmp
shll
add
sbb
mov
iret
pop
bound
mov
push
sbb
pop
push
jnp
repnz
mov
sub
loopne
dec
xor
addl
xchg
sbb
mov
push
pushf
cs
int
fisubrs
dec
sbb
and
mov
test
pop
rcl
stos
xchg
ficoms
cltd
in
cmpsb
in
nop
mov
mov
gs
add
jl
sahf
movsb
inc
mov
fwait
jecxz
sbb
lds
cmp
in
sbb
das
addl
or
stc
cs
and
cmp
pushf
xor
xchg
dec
icebp
sub
lret
pop
sbb
mov
pop
divl
adc
inc
movsb
mov
sbb
enter
fildll
repnz
outsl
xor
mov
in
aaa
push
into
ljmp
sub
pop
sahf
dec
test
add
jle
enterw
std
or
cli
mov
outsl
xor
jmp
test
ficompl
cmc
dec
push
dec
cmc
sub
add
jbe
push
or
add
adc
hlt
and
mov
mov
scas
nopl
out
and
mov
xor
sahf
lods
push
cld
incl
jnp
jge
aad
cmpsb
idivb
mov
hlt
int3
aas
lret
push
sbb
pop
mov
stc
push
lahf
mov
xor
sbb
ret
dec
stc
or
lcall
xchg
jmp
inc
sub
push
and
mov
js
fldenv
pop
mov
test
sub
adc
dec
push
pop
or
orl
pop
and
mov
hlt
push
mov
mov
ror
add
out
in
ja
fiadds
std
cmp
subb
xchg
dec
inc
inc
and
add
test
lods
push
rol
insb
out
or
push
movntq
out
xchg
pop
out
inc
adc
movsl
imul
out
dec
jb
add
cmp
mov
mov
or
add
xlat
dec
stos
sahf
pop
daa
adc
pcmpgtb
mov
out
imul
cltd
lret
pop
inc
adc
es
push
or
addr16
cmp
addr16
iret
jae
in
jnp
fstpt
sbb
mov
stos
xor
adc
in
pop
inc
call
mov
cmp
lret
jae
lahf
outsb
or
in
out
bound
pop
cmp
lock
jae
and
out
push
mov
sub
hlt
sub
mov
xor
xchg
xchg
or
xlat
int3
fisttps
les
fiaddl
mov
and
sub
aas
jp
lea
inc
dec
out
xchg
mov
push
xchg
fwait
in
lods
xlat
jl
xor
loope
sbb
fwait
enter
orl
xor
jo
mov
dec
mov
or
aaa
mov
cmpsb
jae
mov
pop
out
int3
into
add
movsl
sbb
popl
lret
add
cmp
repz
pushf
ror
lcall
fistl
orl
dec
push
test
fimull
fbstp
pop
or
test
fiadds
icebp
fbld
fs
mov
cld
cmp
leave
and
sbb
sub
lcall
and
outsb
ljmp
add
in
inc
jne
popa
xchg
jnp
pushf
cld
clc
jns
mulb
fiaddl
jb
dec
dec
rcll
cmpsl
dec
or
or
sub
pop
cmp
bound
ret
jne
and
mov
sbb
hlt
xor
repnz
clc
daa
loopne
movsl
push
test
dec
test
nop
jg
ret
xchg
mov
xor
and
xor
adc
inc
mov
dec
jmp
jle
and
jnp
nop
into
sbb
mov
insb
pop
testl
in
xor
xchg
push
loop
cmp
sbb
sbb
mov
movsl
inc
mov
test
push
dec
js
outsl
into
inc
xor
lcall
out
out
cmp
mov
inc
std
cli
push
pop
push
test
adc
imul
or
mov
mov
xchg
out
shlb
xchg
jne
stos
testl
push
nop
and
sub
in
mov
insb
test
sbb
icebp
lahf
sbb
inc
xchg
mov
xor
repz
cs
sub
jns
mov
int3
stos
cwtl
addr16
or
out
jl
fisubs
out
or
add
pushf
mull
push
add
inc
mov
fisubrl
push
or
out
cmp
inc
fucom
push
push
mov
add
cmp
jmp
daa
mov
cmpsl
add
mov
xchg
std
ja
jno
addr16
lcall
dec
push
mov
cmc
test
shrl
lock
xchg
xor
inc
inc
pop
fsubl
js
and
cmp
and
dec
movsb
fildll
cmp
dec
shlb
aaa
adc
mov
jno
push
inc
push
cli
js
lret
inc
scas
jmp
or
flds
outsb
int
in
pop
adcl
jp
push
in
or
test
xchg
out
pop
insb
shl
sub
sub
ret
push
cmp
or
sbb
cmp
out
add
mov
dec
or
push
mov
add
dec
push
and
jne
mov
pop
push
dec
mov
test
into
dec
mov
add
mov
sub
ret
dec
pop
cmc
std
pop
jae
sbb
test
mov
iret
out
cld
gs
adc
jge
mov
adc
dec
fisubrl
mov
pop
cmp
into
adcb
fmul
mov
xor
stos
fcmovnb
push
or
fcoml
lahf
int3
insb
icebp
xor
adc
inc
lret
nop
loopne
xchg
loop
addr16
test
jmp
insl
mov
dec
jo
push
setbe
dec
pop
sub
push
xor
std
jl
cmp
push
in
mov
in
sub
cmp
xchg
ja
sti
xlat
mov
or
xchg
add
pop
test
xchg
dec
insb
ret
jbe
les
loopne
xchg
pop
mov
hlt
mov
lret
sbb
icebp
or
push
pop
fs
or
cmp
sbb
inc
fisubrs
test
and
mov
pop
dec
push
mov
dec
mov
mov
lock
add
dec
push
or
les
cli
cli
aas
rolb
aas
sbb
in
pusha
dec
sahf
sbb
mov
pushf
add
test
xchg
das
mov
jl
pop
into
mov
pop
imul
fimuls
sbb
icebp
les
mov
mov
pushf
ror
and
in
clc
xchg
sub
xor
stos
stos
popa
adc
sbb
divb
call
mov
in
ja
mov
adc
pop
jmp
xlat
sub
icebp
leave
cmc
mov
inc
data16
mov
xchg
push
mov
in
jmp
aad
out
into
push
lds
stos
sub
mov
add
orl
xchg
mov
popa
loop
fldenv
inc
fmuls
dec
mov
adc
gs
pop
mov
inc
fs
xor
inc
lea
inc
mov
mov
dec
mov
hlt
mov
mov
clc
xchg
in
cmp
or
outsb
dec
mov
pop
pcmpgtw
mov
cmpsl
insl
inc
out
fmuls
pop
sbb
xor
push
addl
mov
cmp
sbb
or
add
jg
push
xor
cwtl
mulb
push
outsb
fistpl
out
mov
mov
add
icebp
push
jmp
repz
jmp
mov
ret
addl
push
push
jae
cwtl
stos
sbb
cmpsl
inc
adc
into
into
ss
cmp
add
mov
push
jns
repnz
pop
inc
test
push
movl
stos
lods
push
inc
add
add
pop
dec
xchg
in
mov
vdivpd
aaa
mov
in
push
and
inc
movsb
mov
clc
push
inc
imull
popl
mov
andl
lret
lods
in
iret
mov
mov
xchg
in
in
push
adc
sub
xor
popf
inc
pop
sti
in
negl
dec
jbe
negl
mov
add
in
xlat
in
inc
daa
movsb
mov
inc
pop
sti
dec
outsb
jg
cmp
pop
movsl
xor
push
adc
mov
or
shlb
call
pop
stos
popf
mov
repz
pop
sahf
or
aam
das
jge
movsb
ret
sbb
mov
gs
sub
nopl
imul
and
sbb
xchg
sub
aad
out
sub
lock
cli
in
adc
sarb
rol
mov
fadds
fstps
arpl
fiaddl
imul
rcrb
in
testl
sub
and
shll
xchg
lock
lods
add
push
das
cli
cltd
or
mov
xchg
mov
out
adc
push
ds
in
mov
or
stos
push
or
jae
daa
into
lds
pop
in
mov
fcmovu
pop
inc
loop
rorl
inc
lods
mov
cltd
lret
iret
pop
sub
rorb
in
cld
mov
dec
mov
mov
shlb
fs
lods
dec
xor
and
std
push
sub
adc
lock
sahf
sbb
lcall
ret
xor
push
stos
in
pop
ffreep
sbb
mov
sbb
xchg
sbbb
and
insb
or
fnstcw
js
dec
loopne
ret
and
sub
in
fistl
and
mov
pop
scas
into
fnstcw
xor
sbb
nop
fbld
in
test
push
insb
mov
sahf
adc
xor
pop
lods
xor
ret
add
inc
nop
fs
sbb
mov
or
fs
mov
call
mov
les
or
ret
enter
int
add
dec
movsl
sahf
mov
stos
test
in
add
sti
mov
and
jae
xchg
inc
insb
pop
pop
mov
mov
pop
jno
addb
fistpl
pop
or
loope
mov
inc
test
inc
in
mov
push
dec
pop
xchg
xchg
add
and
jl
mov
pop
cmpsl
pusha
and
mov
or
jmp
sbb
pop
adc
mov
cltd
stos
into
xor
iret
imul
push
or
in
inc
cmp
push
loopne
sbb
es
inc
xchg
push
sub
das
mov
add
push
sbb
dec
outsb
adc
pushf
fcomps
sbb
xchg
dec
mov
cbtw
xor
mov
hlt
pop
xchg
sub
xchg
enter
or
add
sbb
stos
inc
dec
mov
in
nop
push
addb
out
fldl
mov
mov
sub
lcall
jae
daa
test
adc
push
xor
mov
xchg
or
leave
sub
push
mov
inc
fsubs
loope
dec
outsl
addb
or
jb
jle
jae
enter
in
and
lcall
jnp
cmpl
mov
adc
test
adc
sub
adc
mov
enter
add
inc
repnz
out
in
sti
inc
pop
dec
xor
adc
daa
add
clc
test
pop
int3
repnz
add
xchg
lret
push
lret
les
aam
mov
inc
inc
jle
test
test
out
add
push
jmp
sub
popf
inc
lea
mov
or
fs
data16
jo
lret
mov
jg
sbb
pop
mov
sub
push
aam
pop
std
stos
mov
xchg
jb
pop
push
add
jle
out
in
sahf
xchg
mov
and
jnp
inc
xchg
mov
fisubrl
enter
sub
rolb
sbb
stos
test
std
cmp
sbb
sbb
hlt
mov
insb
ret
xor
out
push
repnz
mov
jae
insb
mov
xor
pop
mov
loop
pop
sbb
cmpsb
cld
inc
call
movsb
outsl
mov
rcrl
mov
push
iret
nop
cmpb
sbb
xor
ljmp
xlat
in
pop
hlt
cmp
xlat
mov
xchg
pop
fisubrs
jp
or
fs
shlb
pop
mov
mov
jo
pusha
mov
mov
out
je
mov
jb
pop
xchg
nop
pop
pop
cmp
xchg
pop
test
mov
mov
inc
dec
mov
aas
dec
imul
or
pop
sub
not
and
xchg
lahf
jno
and
add
lcall
and
inc
cld
popa
or
pop
addl
push
mov
xor
push
out
adc
arpl
aas
push
pop
mov
jae
scas
adc
or
fucomp
or
mov
xchg
gs
dec
or
and
ljmp
xchg
push
lock
mov
dec
or
insb
lea
mov
test
sbb
jecxz
stos
mov
mov
push
in
ficoms
std
add
and
jnp
sbb
into
in
cmovb
push
popa
xor
xchg
dec
loope
decb
out
jno
or
adc
xchg
ret
mov
cs
jge
adc
jnp
fimull
leave
lock
fwait
stos
je
mov
jns
je
mov
pop
sub
mov
lret
nop
loope
rcrb
imul
int3
mov
ds
movsb
test
mov
cmc
out
adc
cmc
add
add
rcr
push
call
jge
scas
dec
sarl
and
lcall
xor
cmp
push
int
jl
pusha
aaa
mov
in
pop
test
xchg
and
push
ja
in
and
pop
or
adc
pop
imul
iret
and
movsb
test
add
pop
stos
subl
mov
xchg
test
pop
jno
inc
cs
or
adcb
push
iret
movb
into
pop
mov
das
ja
inc
shl
or
fistl
push
int3
jecxz
or
into
jo
movsb
pop
fiadds
jmp
gs
das
int3
decl
insb
repz
push
cld
push
enter
lea
cld
lcall
inc
inc
or
in
nop
mov
in
in
and
mov
sbb
inc
inc
mov
test
sbb
pop
sbb
insb
or
fwait
pop
out
or
cltd
imul
xchg
add
out
cwtl
int3
lock
pop
jnp
scas
std
stos
orb
fcomps
lea
jge
mov
out
mov
insb
icebp
mov
rcll
xor
push
or
fnstsw
repz
cwtl
mov
cld
mov
fwait
gs
rorl
sub
shrb
sub
mov
dec
pop
adc
enter
mov
iret
push
push
push
lods
hlt
cmpsl
mov
add
pop
adc
lret
push
mov
jnp
inc
aas
jbe
call
lret
or
push
icebp
cmp
mov
xor
add
inc
inc
or
xchg
mov
fwait
sub
sub
inc
mov
fcmovne
orb
and
sbbb
add
cltd
jo
test
pop
add
jbe
xchg
mov
sbb
inc
test
addr16
popf
in
cwtl
mov
sbb
pop
test
adc
push
sub
push
mov
sub
and
js,pt
pushf
add
inc
mov
gs
xchg
pop
gs
scas
pop
mov
popf
xor
sub
cmp
lock
mov
adc
mov
ds
pop
subb
aam
cmp
lock
sbb
in
aad
inc
mov
outsl
test
jp
stos
movsb
xlat
fwait
xchg
ds
mov
mov
pop
push
inc
inc
dec
cmp
fildl
mov
cmp
out
sti
cmpb
sar
push
fldcw
dec
inc
cmp
stos
push
loope
cs
pop
and
ss
sub
int3
cmp
or
mov
roll
mov
out
addb
inc
out
xchg
push
lods
sbb
roll
loop
dec
cmp
fwait
repnz
outsb
push
call
xchg
sub
adc
aam
mov
sbb
mov
inc
out
sub
push
xchg
inc
xor
test
call
mov
dec
add
out
add
mov
aas
loope
inc
mov
nop
les
cmc
stos
test
jl
sub
dec
inc
stos
iret
dec
xorl
dec
lds
fwait
mov
push
xchg
sub
pushf
mov
pop
rcrl
lods
cs
add
movsb
sub
sbb
inc
cwtl
addr16
pop
into
xchg
scas
mov
inc
xchg
push
jo
push
out
std
daa
and
lret
test
adc
push
test
iret
lcall
or
insl
or
enter
rcl
pusha
outsb
and
sbb
out
loopne
push
mov
adc
pop
pop
push
push
lock
inc
mov
xor
cmp
fnstcw
in
mov
or
inc
mov
pop
pop
pop
push
pop
test
add
es
sub
sub
adc
jo
add
cwtl
mov
mov
mov
aam
jle
jl
ljmp
cmp
cmp
icebp
mov
sub
stc
xchg
xor
push
in
imul
nop
push
sub
pop
mov
jmp
sub
roll
jle
and
addr16
nop
and
and
fnsave
jnp
lods
shl
or
sbb
pop
sarb
push
jecxz
push
cmp
test
xchg
and
pop
pop
push
pop
cmp
xor
sbb
pop
add
in
popf
pop
dec
or
in
push
inc
mov
mov
push
mov
jb
mov
pusha
and
add
ret
inc
mov
bound
mov
inc
data16
lcall
mov
sub
jns
inc
pop
mov
stos
xor
mov
or
sub
mov
rcrl
shr
nop
cmp
jo
mov
or
cwtl
lret
pop
cmp
scas
mov
or
int
cmp
or
out
pop
add
fcompl
cmp
out
stos
sub
rcrb
mov
loop
addb
ss
mov
xchg
lcall
mov
sub
push
jnp
pop
in
push
fcmovbe
sbb
cmp
out
negl
lds
xchg
pop
or
fstpt
fs
jne
fimuls
add
sbb
test
insb
hlt
or
add
leave
xor
xchg
pop
cmp
push
mov
xchg
sbb
pushf
push
xor
mov
cmp
in
sti
and
lock
fs
movsb
xchg
add
in
mov
mov
fsubp
daa
sub
mov
movsb
pop
pop
mov
sub
das
mov
xlat
inc
mov
aam
cmpl
int3
mov
inc
aaa
movsl
xchg
xchg
mov
sub
add
ret
fsubrp
lret
addr16
cld
test
lds
mov
inc
pop
pop
mov
and
inc
add
loopne
loop
mov
ret
dec
mov
cmp
and
std
enter
inc
pop
out
push
inc
div
pop
add
nop
push
and
or
mov
addr16
xchg
ret
fmuls
pop
repz
loopne
nop
mov
or
fisttps
pop
jmp
mov
insb
inc
in
lods
mov
sub
bnd
aam
and
add
dec
push
mov
xchg
and
fildll
es
mov
mov
pop
cwtl
lods
lret
movntq
dec
loopne
or
add
xchg
mov
nop
dec
inc
ror
mov
sar
mov
jmp
loopne
das
xchg
add
enter
clc
add
and
fstpt
mov
xchg
mov
and
xchg
push
and
mov
into
inc
push
dec
fiaddl
inc
repz
sub
xor
repnz
test
dec
rcr
sub
ljmp
test
adc
insb
in
add
push
pop
mov
jo
and
ljmp
stos
loopne
outsl
out
std
inc
add
xor
rcrl
nop
or
lods
outsl
mov
mov
shlb
cmp
xchg
and
loopne
setb
dec
gs
cltd
repz
sbb
xchg
cs
lret
sbb
jecxz
and
movsl
and
sti
push
in
fidivl
mov
arpl
sbb
cmp
push
adc
sbb
add
insb
dec
loope
add
aas
and
frstor
out
sbb
fwait
push
pushf
arpl
jge
call
and
and
adc
sub
mov
loop
sub
packssdw
pop
or
fwait
sub
jb
push
sbb
iret
pop
jg
and
imul
mulb
xchg
iret
push
insb
das
and
or
pop
sub
xchg
xor
push
sub
popf
stos
out
and
int
testl
cltd
fistpl
xchg
lret
cmpsb
mov
repz
insb
and
mov
hlt
inc
xchg
out
shrb
shl
push
cmp
mov
lret
cmpsl
or
pop
xlat
ljmp
lcall
outsb
ret
cmc
dec
stc
pop
jmp
or
pushf
xor
jnp
decl
adc
inc
mov
mov
in
movsb
push
sub
in
repnz
jbe
lret
cmp
push
add
test
cltd
xchg
stos
pop
inc
movsl
xchg
mov
push
push
sbbb
fs
fildl
aas
cmp
lahf
and
cmp
pop
in
and
lock
lods
sub
lods
loop
mov
test
add
add
mov
cmp
out
jmp
mov
fs
outsl
aas
jmp
nop
xchg
xchg
cltd
push
sbb
mov
or
loope
cmp
ja
add
dec
xor
inc
movsl
mov
lcall
stos
sbb
cld
mov
adc
dec
and
push
adc
or
pop
sbb
pop
jne
les
enter
pop
xchg
loopne
mov
xchg
sub
and
inc
mov
mov
cmp
inc
in
pop
incb
pop
nop
push
adc
xor
xchg
mov
cmp
push
notb
push
fwait
divl
sbb
add
adc
pop
pop
test
in
out
xchg
pop
inc
xchg
inc
dec
fs
jl
dec
push
repnz
inc
xchg
pop
in
inc
mov
xor
add
pop
in
jno
setbe
xchg
mov
out
mov
lds
inc
mov
inc
inc
adc
sti
and
push
xlat
fnstcw
fmul
out
mov
hlt
jno
insl
rol
mov
out
test
icebp
gs
aas
or
sbb
push
stc
mov
repnz
pop
loope
inc
or
push
arpl
insb
in
call
enter
jl
add
movsl
pop
dec
jge
push
xor
rorl
loopne
cs
and
sbb
lret
or
pop
xor
in
push
inc
shll
in
xchg
lahf
jnp
cli
in
inc
fcoml
ja
adc
or
mov
sbb
push
sub
add
sahf
mov
lods
jmp
int
imul
mov
push
in
xchg
pop
add
arpl
addr16
ja
cmpsl
add
mov
sbb
and
pop
dec
jbe
pushf
cli
int3
insb
cmc
fs
sbb
inc
xchg
cli
pop
fiaddl
inc
insl
es
mov
fiadds
dec
insl
and
and
js
dec
lahf
pop
repnz
xor
mov
fistpll
adc
and
hlt
pcmpgtb
imul
sbb
jbe
inc
les
arpl
mov
sbb
mov
jb
push
addb
pop
popa
dec
outsl
idivl
icebp
movsl
mov
in
mov
clc
pop
lds
xor
outsb
mov
inc
add
rorl
cmp
or
xlat
in
lcall
std
add
sbb
or
jbe
out
fwait
pusha
and
inc
cmp
loop
jmp
sub
inc
push
inc
push
mov
sbb
fcomip
mov
jbe
jecxz
ja
in
ljmp
iret
mov
outsb
hlt
cmp
cmp
mov
push
push
hlt
push
push
xor
lds
sub
cli
or
mov
or
xchg
lret
sti
cwtl
push
mov
ficompl
out
and
add
pop
adc
sub
in
cld
aad
add
inc
nop
test
lock
mov
sub
jo
stos
pop
jmp
sbb
and
in
cwtl
into
outsb
xchg
leave
mov
pop
rclb
cld
in
fwait
int3
scas
ficoml
fildll
or
mov
mov
dec
enter
dec
fisttps
or
stc
out
out
addr16
icebp
nop
jno
das
lret
lds
nop
mov
and
pop
ss
inc
fisttps
push
sub
jecxz
jno
lahf
test
addr16
dec
xlat
jnp
xor
mov
or
jns
pcmpgtb
nop
je
out
lret
iret
mov
xor
stos
xor
inc
out
adc
dec
lcall
dec
xor
adc
cmc
jb
mov
push
out
mov
mov
idivb
lahf
jo
and
lcall
cs
loop
ret
mov
lock
jmp
pmaxsw
lock
xchg
push
call
sti
push
mov
inc
not
fisubrl
aam
xlat
sbb
pop
vpavgb
dec
mov
xchg
lret
es
push
mov
cs
repnz
adc
cmpsl
ds
test
outsl
lds
mov
xchg
out
sbb
pop
xchg
out
std
in
mov
dec
rorb
mov
in
mov
test
pushf
mov
sub
xchg
mov
fs
clc
sub
aas
shl
pop
xchg
lods
push
or
pushf
pop
mov
mov
cmp
and
fisubrl
and
pop
lods
dec
xor
adc
or
mov
cmp
iret
ljmp
adc
mov
or
in
repnz
mov
fstl
sub
push
sub
or
push
adcl
cmp
sbb
shll
clc
mov
data16
mov
adc
sbb
adc
adc
add
add
hlt
or
push
aam
loopne
fcmovu
inc
icebp
fsubrl
orl
or
xor
fsub
rolb
sbb
sbb
cmp
test
pop
mov
jmp
mov
leave
mov
in
cmp
leave
push
pop
dec
lea
mov
adc
xchg
mov
adc
je
xchg
aad
lahf
adc
into
xor
pop
xor
xchg
jnp
inc
adc
xchg
out
dec
pusha
inc
mov
push
ss
out
pop
xchg
out
pushf
cmp
lods
idivl
sub
in
ds
mov
out
fimuls
inc
mov
jb
in
outsb
dec
push
lods
out
xchg
pop
bound
pop
in
xor
inc
dec
popl
sti
xlat
or
xchg
pop
pop
cs
mov
fcmovu
divl
xchg
and
pcmpgtb
jmp
decb
xor
adc
ljmp
test
cld
mov
ret
scas
loopne
lcall
xlat
xchg
mov
pushf
sti
cmp
cltd
out
sub
inc
or
dec
movsb
insb
pop
jecxz
sbb
jg
in
scas
repz
add
pop
push
lret
cld
jmp
xchg
or
shll
iret
mov
xchg
push
mov
movsb
inc
call
fnstcw
ret
pop
mov
or
sbb
xchg
mov
pop
addr16
dec
nop
xchg
sbb
loop
or
push
ljmp
inc
imul
std
cmpsl
cmovb
fdivr
xor
mov
roll
out
push
mov
mov
cmpsl
repnz
sbb
sbb
and
mov
hlt
fadd
sbb
mov
test
mov
jbe,pt
fs
cmp
sub
inc
sahf
mov
fsubl
dec
adc
in
lods
in
fists
cmc
mov
jne
in
sbb
stos
push
add
jp
mov
mov
enter
leave
sahf
test
fwait
sbb
ficoml
mov
ret
dec
pop
scas
pushf
push
pop
cs
inc
ret
mov
mov
dec
cli
dec
xchg
pop
cmpsb
dec
lea
mov
dec
adc
mov
dec
insb
lret
lcall
es
pop
mov
pop
xor
lds
insl
inc
jg
test
sbb
sahf
sub
in
ja
movsb
fisubrl
xor
loope
xchg
pop
cmp
cmpsl
cmp
xor
in
jo
pop
mov
dec
scas
inc
out
add
dec
jge
sbb
shll
xor
lahf
lea
fwait
lods
jecxz
xchg
add
hlt
and
and
mov
clc
push
adc
sub
mov
push
inc
adc
std
in
setae
mov
adc
and
in
mov
push
dec
pusha
inc
mov
sub
lea
xchg
pop
sarb
inc
push
out
into
xor
or
out
sbb
ja
add
or
fs
cltd
push
jle
loopne
push
pop
push
dec
add
and
rorl
jo
fdivrl
jo
mov
imulb
lcall
sub
add
out
adc
lcall
push
jns
inc
and
pusha
sub
outsl
cmp
inc
int3
add
xchg
enter
mov
ret
popa
sub
in
lds
clc
cmp
lock
inc
push
pop
xchg
dec
call
out
push
sbb
inc
push
pushf
cmp
test
pop
and
sub
mov
lcall
or
sbb
cmpsl
rcrl
or
dec
mov
cltd
mov
lcall
sub
fstps
xor
fs
and
rolb
movsb
cmc
sbb
add
in
sti
das
insl
xor
push
add
mov
ljmp
aaa
dec
cli
adc
pop
and
pop
mov
mov
sti
sti
xor
repz
inc
pop
enter
sti
scas
sub
xchg
aam
cmp
mov
testb
pop
in
push
mov
inc
jns
pushf
test
ficomps
and
out
in
xor
sub
add
sbb
sbb
nop
fwait
xlat
fimuls
dec
xchg
fs
cmp
out
pop
mov
push
push
dec
or
je
js
xchg
inc
push
repnz
incb
adc
imul
inc
fidivrs
mov
sub
mov
pop
xor
into
dec
addr16
mov
sbb
sbb
pop
cmp
fcmovnu
and
sbb
insb
mov
pop
iret
mov
xor
mov
cmp
ja
jmp
adc
lods
repz
into
rolb
pop
jp
rolb
popl
ja
lods
scas
and
inc
insb
cmp
xchg
or
popf
sub
fcmovu
mov
sahf
fxch
mov
insb
mov
pop
fldl
and
ret
xor
sub
iret
cmc
xchg
xor
mov
repnz
fistpll
mov
rcll
mov
sub
pop
mov
or
mov
rcrb
int3
ljmp
out
cmpsl
mov
loope
sbb
mov
push
mov
mov
loop
lods
xchg
flds
xor
cwtl
les
out
adc
mov
sub
repz
cmpsb
push
inc
cmpsl
push
push
xchg
dec
in
sub
sahf
cmp
and
jp
pop
in
movsl
pushf
fwait
mov
sbb
mov
push
in
hlt
mov
mov
or
mov
out
push
cmp
adc
shlb
and
in
insl
divl
out
aad
xchg
ss
sub
into
sbb
pop
jbe
sbb
jg
gs
mov
add
es
lds
mov
lahf
and
scas
sub
xchg
pop
nop
push
scas
mov
fnstcw
out
in
mov
lret
jno
cli
movsb
enter
sub
pop
jle
jo
and
cmpb
test
xor
dec
cld
push
mov
test
in
lret
add
dec
pop
push
iret
add
sbb
xchg
lret
push
stos
les
and
mov
fists
in
into
int3
fsubs
mov
cmp
sbb
mov
iret
inc
out
in
xor
cmp
xchg
push
shl
scas
loopne
repz
add
push
nop
or
sub
mov
dec
lods
pop
pop
ljmp
mov
add
dec
neg
ss
adc
cltd
mov
xchg
int
leave
sub
jp
cmp
sbb
mov
inc
loop
push
in
iret
xchg
popa
movl
pop
fwait
pushf
fucomi
ror
xor
fbld
mov
jecxz
xchg
movsl
dec
into
xor
inc
mov
mov
inc
pushf
sbb
adc
xor
mov
xlat
push
repz
jcxz
sbb
push
or
out
nop
dec
inc
mov
jae
pop
in
fsubrs
mov
push
sub
repnz
hlt
inc
mov
lahf
aas
pushf
pop
gs
icebp
pushf
mov
in
dec
cli
pop
pop
pushf
out
neg
mov
jae
ja
pcmpgtb
mull
jle
mov
add
xchg
or
add
dec
out
pop
lcall
xchg
mov
mov
sarb
shlb
jbe
cmp
aad
imul
cltd
pop
inc
jnp
out
cltd
pop
mov
lds
mov
push
sti
pop
xor
add
pop
xor
inc
cld
test
add
cli
inc
inc
sub
add
mov
std
out
lcall
xorb
fwait
mov
ljmp
scas
rolb
pop
xchg
or
fs
xchg
and
in
xlat
int3
mov
mov
xor
xchg
lret
test
sbb
jmp
fistps
gs
sub
adc
xchg
cld
out
add
mov
or
psllw
hlt
insb
int3
push
fisttps
daa
fisubl
out
or
addl
addr16
loop
xlat
or
sub
xor
or
add
add
js
or
mov
sub
hlt
sub
int3
or
lds
sbb
sbb
dec
inc
popl
shl
mov
xchg
aas
jl
bound
jno
mov
loope
cltd
fistpl
mov
clc
shrb
ret
pushf
bound
fdivr
mov
push
sbb
mov
loope
and
jo
jae
xchg
loop
dec
or
lods
pop
xor
ja
mov
or
dec
pushf
test
pop
jne
xchg
hlt
xorl
pop
fcoml
hlt
mov
jae
and
pop
cmp
sbb
cmp
cmpsl
cmp
or
adc
lcall
pop
into
out
les
lahf
adc
mov
pusha
stos
adc
inc
les
pop
cmpsl
das
jno
jp
pop
pushf
jmp
dec
cmpsb
push
jae
add
pop
push
fsubl
adc
xor
or
jecxz
and
mov
jno
out
sti
popf
data16
sbb
mulps
fs
nop
test
and
test
decl
or
push
push
xchg
dec
clc
int
mov
mulb
mov
cmpsb
imull
xchg
xlat
lret
lods
in
push
inc
sbb
in
and
inc
adc
mov
lcall
mov
test
ret
sub
pop
push
sbb
test
inc
fwait
pop
mov
int3
scas
shrd
loope
inc
ja
mov
add
push
out
mov
sub
clc
mov
jbe
outsb
xlat
mov
and
ret
ret
xchg
lds
dec
out
loope
xchg
in
push
testl
scas
pusha
cmpsb
out
push
xchg
fisubs
or
shr
out
cmp
inc
outsl
dec
pushf
iret
push
ret
loopne
xchg
sub
inc
adc
adc
test
jae
loop
xlat
stos
dec
call
and
sti
xlat
xor
jl
out
fnstsw
in
sub
and
sbb
call
mov
in
fldcw
adc
mov
dec
dec
jae
test
in
int
xchg
int3
outsb
stc
fstl
dec
jecxz
jmp
add
pop
cmp
mov
mov
cwtl
cmp
xor
sbb
push
sti
out
push
jle
in
mov
ljmp
sub
add
shr
add
in
in
add
dec
or
pop
sbb
dec
push
xor
out
adc
aas
cmc
fmuls
nop
lods
pop
in
cld
or
dec
in
jns
mov
hlt
sbb
paddd
add
jmp
repnz
adcl
aam
pop
out
fwait
adc
push
push
ret
lcall
aam
mov
loop
xchg
in
fdivr
subb
sbb
adc
mov
outsl
int3
push
out
test
add
xchg
fnstenv
ljmp
and
sbb
mov
pop
nop
mov
enter
or
mov
push
aas
mov
cltd
test
jmp
mov
mov
sbb
dec
or
push
add
sbb
push
test
lret
xchg
bound
mov
mov
xchg
fnstenv
and
or
xchg
xor
aaa
or
fcoms
sub
push
or
push
cmpb
mov
repz
mov
sbb
iret
mov
daa
adc
outsb
xchg
pop
push
lret
mov
stos
jle
lret
rcrl
mull
les
out
push
out
push
jg
and
addl
stos
pop
out
cmp
scas
jbe
dec
inc
or
sbb
jp
mov
ret
and
mov
pop
xchg
inc
mov
or
push
std
rcrb
fwait
pop
adc
mov
xor
ds
in
loop
std
insb
xchg
adc
pop
daa
in
mov
cmpsl
mov
add
jmp
sti
cmpsl
or
jno
pushf
inc
pop
outsl
cltd
inc
sub
clc
sub
rol
jp
repnz
in
jmp
in
mov
orl
scas
push
mov
and
enter
inc
pop
or
and
add
jbe
xor
fsubp
or
add
pusha
dec
addl
pop
mov
in
hlt
lret
mov
jge
mov
and
or
or
xor
xchg
sub
push
add
dec
lcall
dec
sbb
aas
sbb
in
inc
cmp
or
out
mov
push
push
inc
mov
movsl
sbb
int
mov
fcoml
stos
cmp
cwtl
pushf
in
out
call
pop
mov
lea
ljmp
inc
pop
cmp
out
out
cmpb
or
xchg
jno,pn
adc
pop
mov
xor
cmc
stos
dec
popa
test
sbb
daa
mov
mov
iret
popf
lret
sbb
std
enter
rorb
push
cmc
dec
xorl
add
aaa
fmuls
icebp
adc
test
pop
mov
aaa
out
enter
push
hlt
js
sub
dec
jne
and
in
dec
pop
out
mov
outsl
mov
out
pop
sub
mov
and
and
je
lret
fsub
and
repz
loopne
jp
mov
adc
enter
lcall
int3
jae
or
cmp
lret
rcll
sub
jg
mov
xchg
sbb
cmp
subb
sub
jae
jmp
aaa
inc
dec
push
mov
pop
int3
or
sbb
or
inc
jmp
fwait
pop
aas
into
or
or
dec
dec
lods
loopne
cwtl
push
out
js
ja
pop
lcall
mov
in
sbb
fimuls
mov
insl
mov
lret
xor
mov
iret
inc
mov
arpl
jmp
leave
mov
add
xchg
jae
or
jmp
add
inc
sub
or
push
pop
lret
aad
sbb
add
jecxz
das
out
xsaveopt
add
clc
ss
xchg
test
fcomps
mov
les
xor
cli
and
adc
movaps
lret
jo
dec
mov
push
jecxz
sub
cmovl
je
mov
in
or
jecxz
je
jmp
out
shlb
lods
add
push
push
lds
aad
sbb
or
adc
sbb
pop
mov
dec
or
xchg
clc
sbb
jno
hlt
push
ret
dec
movsb
mov
pusha
adc
inc
pop
test
lret
sbb
dec
inc
dec
mov
shll
sub
inc
call
or
mov
jae
daa
jmp
or
dec
inc
nop
sub
fadds
push
ret
or
xlat
daa
sbb
mov
lcall
push
bound
out
insl
sbb
test
std
add
sbb
aam
sub
jmp
or
lret
jns
out
cld
or
lret
inc
ret
daa
push
or
sbb
in
jle
or
shll
mov
mov
dec
dec
lock
int3
fcomps
rorl
das
sbb
or
push
cltd
mov
sub
lahf
pxor
and
dec
cmp
dec
pop
movsb
sub
or
inc
cmp
pop
fimuls
sub
inc
or
mov
jl
jno
cmp
loop
ss
jg
dec
in
rclb
jmp
xchg
push
or
push
sub
fcoms
mov
out
inc
cs
or
out
mov
cmpsl
xchg
or
scas
fisttps
or
mov
pop
fisttpll
mov
sbb
enter
test
or
fidivl
adc
inc
int3
jbe
lcall
lds
jg
cmp
insb
enter
sub
cmove
inc
test
cltd
mov
adcl
imul
das
hlt
dec
inc
loope
mov
push
push
dec
leave
loopne
rolb
hlt
lcall
iret
test
jg
pop
sub
dec
jnp
int3
fildl
pop
inc
mov
xchg
outsb
leave
lcall
jp
pop
les
jecxz
sub
inc
outsl
cltd
sbb
pop
shrb
push
shll
mov
loope
insb
sub
rcrl
xlat
sub
mov
jbe
or
aas
sahf
add
pop
cmpsb
pop
or
movsl
enter
jo
pop
add
add
shl
aad
or
cld
shlb
or
out
lods
lea
jns
lret
or
enter
aam
xor
scas
mov
xchg
or
push
js
bound
paddw
mov
or
out
sub
or
repnz
or
cwtl
mov
push
addb
decl
fisttps
out
xor
and
pop
mov
test
mov
add
mov
fsts
sbb
repnz
stos
dec
outsb
loopne
or
imul
dec
dec
adc
or
lea
out
add
icebp
bound
dec
ljmp
das
cmp
push
adc
rorl
jmp
icebp
push
cmovg
xor
int3
cmpsb
dec
hlt
mov
or
andb
mov
mov
dec
lods
leave
hlt
test
mov
inc
add
mov
mov
out
daa
or
ret
into
lods
pop
in
or
int3
cltd
pop
jne
jecxz
or
inc
subl
bound
pop
insl
mov
jge
inc
loope
mov
daa
jnp
jle
xor
call
aam
fs
into
int
sarb
sub
mov
addr16
add
push
jg
popf
or
mov
push
mov
or
add
scas
je
cwtl
mov
fsubrp
push
and
or
sub
jns
in
inc
lods
mov
and
jae
sahf
xchg
je
pminub
mov
andb
hlt
dec
mov
loopne
cmp
xchg
mov
inc
fistpl
imul
pop
aad
fidivs
jae
or
mul
pop
cli
out
jle
fists
sub
imul
sbb
pop
pushf
into
or
inc
popa
mov
rolb
dec
add
orb
xor
leave
std
in
repz
sbb
inc
movsb
add
and
sub
sub
push
sub
xchg
or
insb
and
sahf
mov
adc
sub
sub
push
insl
leave
int3
adc
add
adc
outsl
mov
cmp
in
mov
jbe
and
jge
mov
sahf
pop
bound
cmpsl
add
dec
xchg
add
into
movsb
sub
test
outsb
outsl
leave
bts
sbb
jae
xchg
sub
in
mov
or
jo
outsl
or
fdiv
invd
pop
jmp
cmp
ja
or
arpl
aad
rcrl
sub
jmp
sbb
lods
sub
dec
mov
xor
xchg
ret
fistl
or
push
xor
imul
inc
cli
stc
or
mov
call
add
pop
dec
push
adc
and
adc
mov
mov
ffree
xchg
push
ret
sub
mov
mov
xor
dec
dec
or
call
inc
or
dec
mov
dec
sub
inc
popa
sbb
imul
das
insb
repz
inc
xchg
or
pusha
movsl
or
dec
out
pop
aas
inc
repz
and
mov
out
insl
push
lret
or
mov
mov
inc
dec
cmpsl
int3
push
dec
xor
je
fwait
sbb
sub
and
int
iret
pop
or
xchg
xchg
xlat
add
xchg
pop
dec
dec
sub
cmpsl
pushf
sbb
imul
inc
push
mulps
dec
pusha
push
or
mov
adc
inc
mov
inc
popf
aaa
enter
ja
ljmp
pop
aad
aam
cld
mov
ret
jmp
sbb
cli
dec
stos
js
loopne
es
push
fistpl
sti
push
or
sub
shrl
test
fistps
icebp
jno
rorb
loope
test
cmp
jg
sbb
cld
test
dec
or
divl
scas
nop
lret
jecxz
pop
or
mov
xor
or
xchg
or
sbb
fwait
and
hlt
int
in
or
fldcw
int3
dec
xchg
cli
insb
sub
enter
inc
add
add
sbb
daa
out
sbb
mov
add
je
dec
in
dec
int3
dec
movsbl
or
in
sbb
sub
dec
popf
xchg
les
push
cwtl
fwait
notl
inc
sub
insb
ja
bswap
stos
adc
mov
pop
loope
in
pop
fnstcw
pop
repz
jno
mov
push
xor
sbb
ficomps
jle
xor
out
ljmp
or
mov
xchg
or
sub
ds
mov
add
std
inc
cmpsl
xchg
cs
push
xor
into
inc
dec
mov
push
insl
es
jp
and
rorb
push
xor
jecxz
mov
sub
faddl
mov
pop
or
sbb
outsl
mov
fisubl
lret
inc
out
inc
or
lea
addl
dec
pop
leave
inc
xchg
cmp
push
lahf
cs
and
mov
jns
out
mov
sub
xchg
xor
mov
dec
in
xchg
xchg
or
sbb
add
sub
filds
or
ljmp
insb
outsb
jmp
or
jns
fwait
clc
cmp
or
aam
fs
std
fsubp
aaa
sbb
pop
jnp
inc
inc
bswap
push
or
ljmp
add
or
jmp
daa
jp
fisttpll
mov
out
in
cwtl
mov
sbb
mov
or
pop
shr
push
popf
push
cltd
int3
and
sahf
or
adc
aad
filds
sarl
sbb
lock
mov
pop
ds
enter
push
test
popf
or
xchg
push
fdiv
or
mov
mov
and
pop
jge
paddsb
scas
rolb
inc
cld
dec
test
or
ljmp
push
jb
or
lcall
jno
ud2
inc
arpl
in
iret
leave
cld
pop
test
dec
pop
sbb
sub
xor
imul
inc
nopl
pushf
jo
dec
mov
sub
cltd
pop
or
pop
inc
xchg
adc
sub
and
insl
sub
sbb
ja
loop
cwtl
dec
sbb
int3
jge
ja
lret
jmp
dec
aam
or
dec
and
stos
mov
xchg
dec
enter
mov
stos
mov
lahf
loope
aaa
or
push
insb
lods
jo
or
pusha
add
cwtl
inc
mov
push
mov
push
sbb
jns
or
push
stos
nop
xchg
inc
jbe
xor
mov
lds
jns
sbb
or
clc
ss
or
imul
imul
outsb
rcr
ljmp
mov
xor
adc
call
sub
pop
pop
adc
cld
pop
xchg
sub
jmp
cli
push
inc
fmuls
pushf
lds
inc
ljmp
orl
or
insl
leave
repnz
push
mov
cmp
add
pop
arpl
loope
mov
mov
out
or
rcpps
xchg
or
cmp
pop
xchg
and
sub
jbe
and
dec
jmp
hlt
dec
mov
pop
into
ljmp
in
dec
aas
cwtl
push
or
and
or
adc
xor
or
cmp
punpckhbw
jae
mov
lea
mov
je
repnz
mov
movsl
push
scas
jne
sbb
mov
fnstenv
sbb
push
out
add
and
xor
dec
lahf
xor
xlat
lods
add
mov
jg
inc
scas
dec
cmc
testl
inc
int3
inc
pop
push
stos
xor
mov
fiadds
or
lcall
push
les
sti
mov
sub
icebp
in
pop
sbb
pop
sbb
push
push
enter
push
pop
xor
std
push
loope
or
ud0
push
jecxz
or
dec
push
and
xor
or
and
jg
insb
pop
push
or
enter
lea
in
inc
shrl
jns
in
or
mov
adc
daa
rcpps
sbb
mov
xor
insb
cmp
push
aaa
lea
push
xchg
cmpsl
fdivrl
xor
js
shlb
cmp
fwait
push
mov
cmpsb
cmp
and
xchg
popf
mov
call
outsb
loop
out
out
cli
stc
out
aaa
cmp
or
movsb
popf
shrb
in
xor
inc
dec
cmp
xchg
js
cwtl
inc
idiv
in
sbb
jp
adc
pusha
mov
cmp
jp
in
xor
inc
data16
mov
cs
jbe
fwait
xlat
mov
rdtsc
jp
js
pop
xchg
dec
dec
xchg
sub
xor
xchg
xor
dec
inc
aaa
xor
cmp
data16
mov
mov
cmp
jmp
cmp
js
add
aaa
or
or
xor
pop
cmpsb
xor
test
xchg
push
test
mov
xor
xor
testl
cmp
popf
imul
data16
call
out
insb
mov
hlt
loopne
aaa
xor
pop
popf
insb
lods
arpl
movsl
in
cld
inc
xor
jp
jle
jbe
cmp
hlt
test
adc
sub
dec
loopne
cld
outsb
clc
xchg
hlt
mov
shl
lock
lock
xor
xor
xor
lret
scas
test
das
or
les
jp
js
pushfw
je
jb
adc
cmp
js
xchg
outsl
je
shll
jle
adc
cmp
test
sbb
cs
jle
adcl
sti
mov
es
sub
lea
cmp
adc
and
cs
aaa
out
incl
insb
xor
mov
je
mov
push
xchg
or
dec
xchg
imul
inc
popf
stos
lods
mov
fcmove
loope
lock
lods
test
mov
and
loopne
cld
cs
xor
xor
pop
sub
je
mov
movsb
push
jp
js
or
cmp
cmp
mov
test
mov
cmp
aas
xor
fsubrl
aaa
jp
js
pushf
pushf
je
jb
jo
inc
sub
xor
xor
imul
iret
fnstenv
ljmp
repz
add
sub
add
mov
sub
ret
cmp
jmp
cmpb
fnstenv
or
sbb
adc
and
cmp
dec
xchg
inc
adc
mov
xor
fbstp
test
in
out
das
lods
or
xor
xor
xor
mov
jb,pt
ljmp
pop
ret
sub
mov
leave
sub
dec
imul
in
scas
movsl
cmp
aam
cmp
data16
insb
xchg
idivb
jp
js
data16
sti
in
jg
jp
js
adc
xor
xchg
adc
push
pusha
xchg
js
mov
loope
add
add
sbb
imul
jge
lahf
jmp
lods
popf
clc
movsb
std
mov
std
cld
or
add
call
int
fstl
std
mov
std
cmc
cld
and
cmp
xor
xor
dec
cld
dec
clc
inc
hlt
inc
xchg
push
jle
jle
jle
jle
inc
mov
jl
add
mov
inc
cmpsl
data16
push
aas
mov
int3
fwait
cmp
sbb
mov
aaa
xor
jnp
push
je,pt
jle
mov
addb
inc
cltd
sbbl
xchg
out
xlat
xchg
jmp
out
xchg
std
xchg
testl
xor
fwait
in
sahf
add
popa
adc
cmp
xchg
cmc
or
aas
push
sub
xlat
jb
adc
cmp
xchg
push
adc
xchg
rcll
xchg
out
adc
sahf
mov
cmp
xor
dec
loopne
cld
push
clc
hlt
mov
lock
lock
cmp
xor
xor
xchg
insl
adc
jns
lea
lods
xchg
mov
into
xchg
ljmp
mov
cmp
mov
pop
call
gs
jne
hlt
xchg
test
jl
jle
jle
inc
in
xor
xor
push
divb
add
mov
shrl
or
testl
lock
xchg
mov
xchg
lock
lock
lock
lock
lock
lock
xor
js
mov
lret
mov
outsl
mov
out
call
cmp
je
jb
jo
jle
jle
jle
jle
jle
jle
jle
jle
jle
adc
ds
xchg
push
adc
fs
pusha
xchg
jl
lahf
xchg
mov
jecxz
clc
inc
int3
lock
xor
inc
add
inc
sbb
push
stos
insb
popf
ret
pusha
std
sar
jmp
dec
fdivl
call
xor
dec
clc
pop
hlt
insb
lock
mov
lock
lock
aas
sbb
and
inc
xor
push
add
sbb
cmp
mov
stos
inc
inc
mov
inc
cmp
loop
cmpb
cmc
adc
cmp
test
adc
xchg
push
popf
xchg
dec
adc
inc
lcall
rcrl
mov
loope
cld
inc
cld
and
fmul
test
ret
xlat
loop
dec
aas
xchg
imul
pop
mov
cmp
cmp
cld
addr16
jnp
mov
xor
lock
cwtl
loopne
hlt
mov
in
adc
add
sbb
data16
lods
aas
cmpsb
nop
aaa
dec
xor
jo
sahf
aad
adc
dec
test
stos
call
test
jl
call
push
sbb
popf
jns
int3
cld
pop
push
mov
in
xchg
aas
idivl
cmp
or
es
xchg
mov
cld
mov
xor
sub
dec
clc
outsl
jo
mov
stos
loopne
cld
mov
lock
repz
xor
sahf
pop
push
pushf
xchg
xchg
sbb
int
fscale
sar
repnz
jbe
popf
call
ljmp
cwtl
mov
push
sub
xchg
aaa
adc
inc
push
cmpsb
xchg
mov
fimull
add
sbb
dec
test
cmp
popf
and
call
aas
pop
call
pop
aaa
cmp
addr16
sbb
das
sarl
insb
dec
jo
divl
cmp
js
sbb
loop
jo
jle
inc
push
js
jnp
sahf
movsl
cmpxchg
push
fistps
mov
ds
xchg
bound
jo
mov
lods
xchg
mov
sbb
cld
js
out
cmp
aas
and
mov
push
cmp
and
xlat
data16
cmpsb
hlt
shl
pop
aaa
cmp
xor
push
cs
dec
mov
xor
push
popf
jb
mov
add
not
js
std
lock
xor
cs
in
mov
pusha
sub
mov
cld
xlat
clc
icebp
hlt
arpl
daa
xchg
ja
sahf
xchg
cld
dec
xor
cmp
sbb
sub
into
aas
and
outsl
es
dec
cltd
cmp
xlat
test
mov
mov
aam
leave
xchg
lds
fsts
jmp
xchg
clc
adcb
xchg
icebp
cltd
or
adc
sahf
sbb
dec
cmpb
outsb
insl
sahf
adc
ss
jp
mov
jg
loopne
int3
test
push
cmp
or
or
iret
dec
aas
pop
mov
sub
scas
bnd
stos
xlat
lock
push
cmp
cmp
mov
adc
xor
mov
mov
lret
jle
jle
adc
and
push
aam
and
fcoml
outsl
add
orl
cmpsb
jmp
push
fisttpll
inc
lods
mov
clc
jle
sbb
or
sbb
pop
inc
mov
iret
insb
popa
filds
loop
lcall
mov
loopne
add
add
cmp
in
jge
mov
xor
dec
fmuls
aas
cmp
aaa
xor
xor
mov
xorb
ds
xor
xor
pop
mov
jmp
movsw
call
inc
push
xor
push
push
out
or
xor
int3
sub
data16
outsb
xor
xor
insb
and
push
aas
iret
push
cmp
xchg
push
dec
xor
dec
xchg
add
scas
clc
loopne
xor
pop
xor
xorl
into
or
mov
inc
mov
es
jp
push
vmovshdup
or
ficompl
push
sbb
xor
pop
push
outsl
or
pop
xchg
xor
out
mov
call
jl
dec
dec
push
jp
mov
mov
ret
jle
inc
in
push
jo
popf
sub
dec
jns
js
je
jo
icebp
mov
jmp
adc
lock
fdiv
aam
sub
in
xchg
call
push
and
cmp
dec
add
add
sbb
xchg
adc
fsubr
aam
shr
in
fwait
es
mov
xor
mov
mov
cwtl
lock
lock
lock
lock
movsb
lock
push
and
push
or
push
movsl
sub
xor
lods
je
jb
inc
mov
inc
repnz
xor
xor
xor
and
push
pop
or
add
sbb
adc
cld
push
cmp
xor
dec
lcall
insb
jle
jle
jle
jle
push
test
xchg
and
jmp
fsubr
aam
in
jmp
hlt
out
or
adc
sub
js
in
xor
dec
std
inc
std
pop
std
push
std
insb
std
fs
jl
je
mov
pushf
jle
jle
jle
inc
mov
in
aam
xor
push
and
hlt
in
xor
js
push
adc
je
and
cmp
and
mov
lods
mov
dec
or
inc
xor
xor
ds
xor
fs
jl
js
je
sub
xor
lock
lock
lock
lock
lock
movsb
lock
lock
mov
int3
lock
rcrb
loopne
cld
lock
lock
popf
pop
xchg
add
add
adc
lcall
and
jmp
dec
jmp
pop
call
push
pusha
inc
mov
jbe
mov
mov
int3
lock
add
sbb
sbb
mov
test
and
and
cmp
cmp
xor
xor
dec
fsubr
int
movsb
std
mov
cli
mov
loop
int3
std
enter
sar
cmp
not
imul
imul
mul
mul
idiv
div
cmc
es
add
add
sbb
adc
xchg
sub
sub
stos
adc
xor
pop
xchg
pop
xchg
push
xchg
push
xchg
insb
xchg
push
js
je
jo
or
testl
lock
lock
movsb
lock
xchg
mov
mov
int3
xchg
enter
shrb
xor
inc
jl
js
mov
test
xor
mull
xor
xor
xor
xor
and
jb
xor
sub
sub
out
and
cmp
inc
notl
insb
idivl
divl
cwtl
xor
movsb
xor
fdivl
fsubrs
rorb
adc
adc
sub
dec
hlt
pop
lock
lock
xchg
js
sbbb
mov
lcall
xorb
sub
inc
mov
jl
test
xchg
or
mov
lock
push
sbb
xchg
sub
cmp
dec
xor
pusha
jo
jb
mov
jo
addr16
rolb
xchg
jl
or
insb
fs
xchg
or
pop
cmp
fs
push
jl
jl
xor
shrl
mov
int3
out
lret
cld
idiv
mov
add
add
jbe
pushl
pop
negl
lret
push
mov
enter
std
clc
std
hlt
std
lock
add
cmp
cmp
inc
hlt
inc
mov
push
pusha
and
mov
cltd
lods
inc
les
shr
call
aaa
xor
adc
sahf
xor
push
mov
sbb
adc
cwtl
adc
xchg
test
mov
xchg
in
xchg
loopne
add
sbb
sbb
popa
sbb
std
push
std
push
out
test
movsb
test
and
inc
mov
ds
sbb
rcrb
cmp
xchg
fcompl
popf
adc
inc
mov
pusha
in
jl
sbbb
xchg
xchg
lods
xchg
movsb
xchg
mov
xchg
in
add
mov
xor
je
cwtl
push
xchg
scas
test
sbb
jb
test
xchg
fnsave
fsubr
aam
pop
inc
hlt
nop
inc
dec
xor
push
xor
push
mov
imul
xor
or
push
xchg
adc
sbb
dec
jp
aaa
sbb
and
push
std
push
cli
push
cwtl
adc
test
mov
inc
rcrb
xchg
sub
rcrb
and
xor
repnz
mov
pop
out
xor
sub
loop
sbb
call
js
movb
fsubrl
lock
dec
sarb
dec
out
inc
sbb
mov
sbb
push
sbb
adc
pop
jo
loop
out
dec
les
mov
subb
mov
pop
cmp
xor
push
push
in
jo
nop
cli
lods
inc
mov
mov
mov
int3
lock
rcrb
int3
push
dec
aas
inc
dec
insb
xchg
sbb
js
xor
cs
fs
pusha
inc
push
ficoml
out
mov
pop
scas
mov
call
dec
push
pop
mov
data16
mov
les
aam
in
sub
loopne
cld
popf
jo
cli
lock
bound
inc
add
sbb
sbb
je
daa
jb
cwtl
dec
jmp
xchg
inc
mov
lcall
lds
subl
mov
and
in
pushf
pop
push
pop
pop
sbb
dec
and
jbe
or
pop
sbb
cmp
in
mov
inc
pushf
xchg
sub
rorb
lods
fs
xchg
test
dec
jl
loopne
fs
fbld
ljmp
int
out
popf
xchg
daa
les
push
push
rcll
dec
pop
sub
lcall
xchg
mov
xor
mov
and
sahf
mov
test
js
or
sub
ss
aaa
cmp
push
xchg
es
cmp
pushf
bound
push
aaa
fbstp
icebp
inc
adc
insb
insb
add
test
sub
lds
aaa
lahf
xor
cmp
cmp
cmovo
sbb
ss
jle
les
cmp
sub
es
xor
pop
or
js
dec
bound
pop
xor
popl
dec
call
lret
adc
ss
xor
cmp
or
inc
stos
or
fcoml
aaa
mov
loopne
xorl
les
ds
or
push
adc
xchg
gs
es
pop
lea
jns
imul
call
out
xor
sub
insb
lods
pop
inc
adc
and
dec
push
adc
jbe
cmpl
testl
mov
sub
pop
mov
xor
dec
scas
dec
dec
xor
xlat
out
fsubrs
mov
mov
ret
mov
scas
sahf
sub
or
inc
dec
jl
push
and
push
xchg
aaa
xlat
cld
adc
pop
or
mov
ret
sub
cmp
or
xchg
sarb
insl
xor
lcall
cmp
xchg
adc
aas
lods
ret
adc
dec
sub
sbb
xchg
inc
ficomps
mov
pop
xor
mov
xor
insb
cmp
push
cmp
dec
mov
ja
cltd
pop
lcall
les
jp
or
lods
push
sub
mov
push
cmp
cmp
push
cmp
add
cmp
fdivr
es
adc
fcomps
xchg
aaa
dec
int3
push
es
or
cmp
pop
sub
add
rorb
mov
cmp
mov
aaa
cmp
orl
popf
loopne
or
and
popf
in
mov
sub
in
adc
mov
sub
into
aas
add
loopne
cs
cmp
ljmp
xor
call
xor
adc
aaa
sub
dec
xchg
ficoms
popa
mov
and
sub
iret
fdiv
fdivrl
jp
jne
inc
dec
add
repz
or
rcl
gs
std
rcll
ret
cli
push
gs
sbb
gs
std
leave
push
mov
dec
loop
test
ret
gs
gs
cmc
push
gs
cld
add
ja
pop
gs
mov
sbb
rcl
jmp
sub
mov
add
bound
pop
inc
je
mov
loop
inc
sub
inc
aam
out
or
imul
sub
inc
ljmp
pop
pop
aad
movsb
push
lret
jge
loope
sbb
pop
pop
addr16
push
nop
sti
sahf
popa
int
push
jne
popa
and
pop
scas
pusha
add
and
ja
test
imul
xchg
aaa
movb
pop
addr16
out
pop
daa
ljmp
addr16
pop
or
leave
mov
add
fmuls
add
ljmp
daa
pop
mov
test
rolb
rolb
sbb
sar
jmp
add
cmp
sbb
push
pusha
repnz
jno
pop
xchg
insl
outsb
mov
movl
es
aam
sbb
cmpsl
xor
inc
icebp
clc
push
inc
mov
int3
jae,pt
pop
popl
aam
cli
push
clc
inc
jbe
mul
adc
sahf
push
push
push
adc
outsl
sbb
pop
or
andl
push
imul
popf
jecxz
add
sub
aad
jle
pop
popw
hlt
inc
idiv
xchg
les
daa
lea
or
popa
sbb
add
sti
testb
add
mov
testb
gs
int
jl
add
and
jg
loopne
jno
or
pop
fwait
pop
add
lahf
pop
dec
pop
daa
cmp
popa
test
xchg
pop
inc
ja,pn
xchg
sbb
daa
add
fistpl
and
add
ret
loopne
push
sbb
dec
jg
in
loope
cmp
jl
leave
cmp
pop
fcmovnu
pop
pusha
je
jae
loopne
test
ret
cmp
cmp
lahf
mov
or
in
add
lahf
cmp
jmp
adc
daa
sub
sbb
mov
pop
ljmp
ret
test
push
loopne
shl
add
dec
fists
popf
mov
jns
pop
mov
lods
or
leave
call
jne
outsb
push
xchg
push
push
xor
lods
pop
sub
popa
sub
inc
xchg
call
sbb
out
jl
mov
movsb
std
out
shll
adc
stos
pop
lret
inc
add
les
mov
in
test
sbb
stos
xor
dec
fcompl
dec
stos
or
push
mov
jmp
sub
add
add
addb
inc
jmp
adc
add
add
push
insb
push
gs
jno
bound
insb
insl
add
data16
xor
sti
mov
mov
cmc
ret
cld
ja
or
pop
mov
pop
or
rcrb
add
arpl
aad
add
ljmp
push
ljmp
lret
mov
cmp
and
shl
stos
faddl
xchg
pop
es
jo
or
loope
nop
inc
or
in
or
mov
mov
cwtl
mov
out
xlat
or
shr
rcrl
mov
pop
inc
pop
xchg
addr16
arpl
inc
lmsw
lahf
jbe
xchg
nop
scas
jb
and
mov
pop
loopne
jb
sti
cmpl
sbb
add
std
int3
std
cld
jns
mov
lods
push
test
icebp
dec
sub
cmp
gs
popa
aas
inc
dec
add
leave
adc
std
or
or
ljmp
bswap
xlat
push
cmc
mov
cli
int3
cmp
sub
jns
call
nop
fcompl
rcll
aam
mov
cmp
add
negb
or
add
jmp
cmp
inc
daa
pop
push
imul
daa
or
ja
pop
mov
adc
into
sar
cld
add
mov
ljmp
inc
jnp
ja
jno
pusha
data16
add
jl
add
ljmp
lods
mov
iret
or
cmc
add
cmp
jl
xorb
notl
orb
xor
les
dec
and
jo
add
pop
lea
imul
push
outsl
mov
cs
rcr
dec
push
and
rcr
lahf
xchg
std
mov
loopne
inc
and
cs
and
ror
pop
arpl
ret
sub
add
arpl
in
xor
add
inc
ds
sbb
adc
out
cmp
jno
jne
sub
push
lcall
inc
orl
mov
mov
sahf
imul
xorl
outsl
push
fsubrs
aam
xchg
pop
jmp
sbb
add
loopne
add
push
xchg
dec
movsl
cwtl
xchg
mov
outsl
shlb
mov
mov
mov
aaa
push
push
cmp
dec
or
test
out
xor
pop
fwait
nop
loope
scas
nop
pop
and
xor
cmp
cmp
push
xlat
mov
fcomip
inc
inc
shrl
filds
push
cmp
icebp
xor
hlt
sti
cmp
hlt
dec
stos
sahf
sub
outsb
xor
arpl
in
and
adc
shrb
lahf
adc
push
adc
and
mov
jne
fstl
loop
push
pop
dec
mov
aad
ja
pop
arpl
adc
add
jmp
vpmacsdqh
cld
ja
xor
aas
add
add
push
jno
ja
push
jno
jne
addr16
jno
data16
test
addr16
pop
ljmp
daa
scas
cld
aaa
daa
lahf
les
or
sub
pop
daa
pop
mov
daa
arpl
sbbl
hlt
cmp
icebp
lods
lahf
les
daa
mov
addr16
pop
or
push
adc
int
cli
xchg
cli
sub
imul
scas
mov
or
lock
pop
lahf
mov
or
cltd
sar
gs
enter
sbb
jmp
repz
jmp
adc
add
adcb
cld
cld
idiv
ljmp
out
shrb
daa
sub
push
dec
xchg
out
imul
or
jecxz
jle
sub
push
mov
push
outsb
ja
jo
sbb
fmuls
iret
pop
stos
cmp
in
push
sub
loopne
mov
sbb
cmpsb
pushl
data16
out
dec
out
mov
xchg
push
mov
movsb
xor
in
push
push
fs
cs
sbbb
inc
mov
mov
imul
sub
xchg
out
les
imul
jecxz
xor
add
daa
sub
dec
mov
add
pop
mov
sub
mov
roll
gs
add
gs
les
hlt
mov
arpl
jecxz
mov
idiv
jmp
inc
add
jmp
test
add
sbb
xor
ret
filds
mov
arpl
lds
rcr
mov
ljmp
daa
pop
or
mov
fildl
fisttpl
ret
gs
rorl
add
fcmovnb
jecxz
mov
std
xchg
jnp
inc
sti
arpl
lock
lahf
jmp
addb
test
ja
insl
fwait
cmp
cmp
xor
js
push
clc
jbe
push
daa
jle
sbb
loope
xor
fbld
test
xchg
push
xchg
addr16
mov
lea
pop
out
jo
xchg
xchg
into
pop
pop
loop
sub
test
and
jg
pop
adc
xchg
cmpsl
xchg
cltd
loopne
imul
inc
cli
lahf
adc
inc
fldln2
subl
fcompl
sub
and
adc
add
or
pop
pop
addr16
pusha
cmpsl
adc
test
and
insb
test
test
cmpsb
cmpsb
dec
cmpsl
jmp
and
add
push
movb
mov
inc
and
test
add
xor
add
test
in
push
das
pop
test
push
lods
mov
imul
es
or
mov
or
push
push
adc
sub
jnp
cwtl
mov
xor
sbb
popa
mov
inc
pop
fidivs
sub
clc
stos
lods
movsb
mov
sub
xor
mov
push
addr16
pop
sub
stc
dec
movsl
lahf
inc
add
sbb
loopne
stos
mov
ja
mov
int3
jg
pop
pop
sbb
or
aas
mov
add
lret
std
cld
test
cld
arpl
ficoms
add
inc
jmp
push
add
or
jp
mov
push
pop
dec
aaa
push
in
jle
or
pop
lds
sbb
addl
and
mov
xor
mov
and
aam
adc
xchg
sbb
sub
and
dec
or
ljmp
cmp
cmp
add
sub
daa
in
ss
push
inc
pop
jge
in
repnz
pop
negb
cmp
add
les
pop
mov
inc
gs
ja
sub
mov
add
arpl
ja
pop
mov
or
ja
sub
aas
add
test
lds
adc
adc
jnp
push
adc
jmp
pop
test
jno
xchg
dec
and
dec
int
sub
ret
in
push
std
inc
inc
popa
sub
jp
daa
mov
jg
stos
addb
idivb
sub
cmpl
fucomp
and
xor
ljmp
out
test
adc
mov
aam
pop
pop
push
pushf
xor
subb
add
lahf
lahf
mov
or
les
add
testb
ljmp
rorb
daa
lahf
imul
mov
lahf
mov
nop
ret
daa
popf
push
mov
pop
jmp
dec
add
gs
fldenv
mov
sbb
int3
jmp
jp
add
aas
inc
add
sti
cmp
ljmp
daa
xor
pop
add
add
int3
stos
out
gs
mov
dec
mov
jmp
imul
das
or
mov
mov
add
add
loop
sar
daa
pop
lahf
mov
adc
addr16
std
cld
add
add
push
sub
pop
pop
inc
test
shlb
mov
out
xchg
cmp
ds
bound
test
aas
test
aaa
sahf
roll
sbb
test
ficoml
popa
in
dec
fwait
sub
movsb
inc
mov
add
and
inc
xchg
ret
cmpsb
ret
and
mov
fimull
push
xchg
mov
push
popa
outsl
pop
sbb
ret
sbb
pop
ror
sar
add
arpl
mov
or
les
daa
jmp
mov
mov
or
lds
movups
ja
pop
mov
dec
or
jns
add
lahf
or
arpl
mov
mov
sub
gs
sub
gs
stc
gs
int3
xchg
push
mov
add
arpl
aad
dec
decl
std
adc
hlt
fsubl
std
shr
testb
cmpsl
in
mov
mov
mov
xor
js
les
jbe
mov
aas
jmp
idiv
cld
mov
pop
or
test
mov
add
cli
ljmp
addb
sti
xor
lds
daa
jo
bnd
add
das
idiv
cld
ljmp
aaa
jp
jmp
add
arpl
dec
adc
cli
ljmp
daa
pop
or
adc
add
cmp
cmp
ljmp
stc
add
test
fmul
call
std
aaa
and
mov
imul
xor
ret
push
pop
add
repz
dec
repz
mov
adc
lret
rdtsc
inc
test
pop
negl
jmp
mov
pop
rolb
sbb
mov
sub
outsl
add
inc
mov
jo
push
mov
leave
mov
aaa
movsb
ljmp
xchg
jnp
movb
rcl
fcompl
add
daa
shr
and
add
pop
cmpsl
inc
sbb
sub
ret
mov
push
fimuls
or
cmp
dec
add
inc
and
sub
cmp
pop
cmp
clc
jp
arpl
sbb
fs
aam
stc
gs
and
lea
xchg
stos
push
or
inc
and
cs
bound
mov
adc
aaa
jp
cwtl
insl
jb
fidivs
adc
fcompl
call
inc
add
cld
ja
pop
cmp
xchg
icebp
lods
ljmp
daa
scas
lds
movaps
imul
push
lahf
cld
ja
inc
roll
or
lock
lods
add
cmc
shrl
inc
dec
pminsw
clc
cld
cld
mov
daa
or
es
cld
cld
or
sti
ljmp
lahf
add
lds
ljmp
daa
pop
or
enter
or
push
mov
add
lret
sub
arpl
out
or
hlt
gs
cld
add
add
das
sub
sub
or
loopne
icebp
lods
jmp
sbb
add
sar
mov
xor
and
leave
test
lahf
or
rorb
cld
leave
testb
or
icebp
gs
icebp
push
ret
roll
or
jnp
xor
dec
out
mov
dec
dec
enter
out
dec
inc
out
movb
shr
dec
out
dec
inc
inc
enter
shr
dec
out
les
dec
rorb
dec
lret
enter
inc
dec
dec
out
les
dec
out
les
dec
movl
inc
daa
pop
arpl
ja
or
ja
dec
rorl
les
pop
inc
jb
adc
div
cld
cld
arpl
jns
add
int
es
mov
xor
jmp
dec
mov
inc
sbb
pushf
mov
mov
sbb
pop
rcrb
cmpsb
out
ret
mov
les
cmp
out
lods
scas
mov
das
test
in
adc
cltd
mov
es
add
rolb
push
fld
mov
push
scas
out
fs
sub
cmp
and
mov
push
add
pop
push
nop
push
imul
lret
addr16
push
loope
ds
pop
fs
lods
pop
lods
mov
scas
test
stos
cmpb
push
imul
and
bound
pop
dec
lds
and
add
fcoml
push
jae
xor
adc
push
mov
adc
movsl
inc
fcompl
pop
cld
mov
cld
cld
sub
and
push
xchg
mov
adc
sub
or
gs
pop
les
daa
adc
ja
jl
int3
sub
repz
jno
fcmovbe
add
test
cmc
push
jmp
push
mov
je
andb
mov
in
out
gs
mov
stc
push
push
ficoml
insl
testl
xchg
insl
mov
adc
mov
xor
mov
pop
stos
adc
fcompl
nop
mov
push
ljmp
mov
inc
xchg
fadds
ja
pop
cld
aaa
daa
mov
or
dec
mov
cwtl
addb
fdivrp
fstl
pop
aaa
mov
test
aam
ss
and
repnz
pop
popa
cmpl
aas
push
pop
mov
mov
in
mov
mov
sub
sub
gs
xchg
xor
jecxz
xchg
divb
sub
mov
pop
or
mov
mov
insl
jp
jne
mov
imul
repz
loope
or
sub
push
out
mov
lods
daa
cmpsb
popa
jg
inc
fcompl
push
and
test
cmpsl
cmp
add
jbe
in
xor
inc
lock
jl
jo
outsl
out
into
push
into
stos
insb
jge
sbb
mov
in
movsl
jae
sbb
dec
outsb
and
mov
xchg
in
movsb
jmp
xchg
cmpsb
idivl
jno
fistpl
mov
shll
in
jmp
insl
dec
addb
out
jle
lock
subl
or
jg
in
orb
pop
push
les
sub
push
js
inc
js
inc
jns
xlat
adc
pop
imul
out
push
fldz
jle
push
and
mov
and
push
inc
ss
mov
inc
push
out
jle
rorl
popf
xor
out
rcl
xchg
orl
or
mov
gs
cli
or
mov
cli
mov
jmp
cld
cld
add
dec
insl
ja
jno
insb
pusha
push
pusha
jno
outsb
insw
ja
scas
inc
dec
jg
mov
adc
jecxz
into
shlb
and
add
xor
push
adc
lods
enter
mov
enter
sub
dec
out
pop
jp
or
jmp
pop
aaa
fcompl
mov
jmp
pop
inc
jae
add
loope
shrl
jecxz
jecxz
mov
dec
call
jl
jl
mov
sbbb
and
lret
mov
loopne
lahf
lock
xchg
mov
std
add
jle
and
icebp
add
push
insb
ds
out
cmp
pop
cmpsb
gs
add
rcrl
sub
insb
cli
fwait
js
dec
bound
xor
push
sahf
cld
kmovw
ret
call
sahf
neg
mov
clc
adc
or
adc
mov
test
pusha
repnz
sahf
test
ret
mov
dec
ret
mov
mov
dec
std
out
lea
iret
fwait
xor
push
outsl
adc
into
push
jmp
pop
mov
lods
push
add
push
xor
icebp
frstor
insb
push
loopne
or
shrl
inc
add
fwait
call
movsb
lsl
int3
lcall
pop
xlat
pop
jo
pop
das
xchg
scas
pop
cmp
call
pop
cs
xchg
pop
or
inc
pop
adc
sbb
mov
ljmp
fs
int3
aam
dec
pop
xchg
pop
jl
lock
cmc
pop
pusha
cmp
lahf
outsb
xor
lcall
pop
push
xchg
sbb
das
cwtl
jp
mov
mov
inc
inc
stos
addr16
hlt
jg
pop
sub
test
pop
sbb
daa
ljmp
cmp
push
filds
lds
sar
outsb
pop
xor
jbe
xor
stos
fcompl
scas
out
inc
ljmp
cmc
jmp
cmpsl
mov
push
aaa
xor
cltd
sahf
js
mov
test
test
dec
mov
aam
xchg
orb
pop
outsl
add
mov
pop
nop
sub
inc
push
sbb
jne
sbb
in
sti
ljmp
dec
pusha
mov
sub
lret
pop
out
call
fisttpll
sub
mov
lret
jbe
sbb
cmpsl
gs
sub
pop
cld
fs
fisttpll
add
xchg
loope
mov
je
pop
push
and
lret
xor
mov
xor
ret
mov
lret
mov
xchg
arpl
addr16
jns
jg
inc
mov
jno
mov
mov
mov
pop
mov
icebp
add
popf
dec
rolb
cld
jecxz
repz
or
mov
insl
call
aam
or
loop
test
inc
jmp
mov
aad
xor
add
lret
stos
add
pop
inc
jo
mov
std
mov
pop
dec
mov
mov
sub
stos
jp
add
roll
sub
gs
rcr
fwait
and
pop
lcall
gs
lret
decl
mov
add
or
lret
jmp
sub
mov
jmp
mov
lahf
mov
pminsw
add
pusha
bound
outsl
outsl
insb
pusha
add
add
add
sbbb
ret
enter
sarb
or
loop
mov
cli
gs
fnstcw
xchg
jmp
mov
daa
xor
or
cld
cld
xchg
cmc
fcomip
fldt
shl
fisttps
les
mov
rcr
cmc
rorl
arpl
sub
fdivr
cld
cld
sti
idiv
cli
das
xor
lds
daa
and
ljmp
shll
daa
mov
daa
ljmp
daa
or
imul
les
pop
xchg
mov
or
movsb
ja
add
les
daa
and
cmp
cli
sub
lahf
lahf
mov
sub
cmp
cld
aaa
daa
arpl
xorb
cld
or
das
cli
cld
cld
xchg
sub
arpl
inc
daa
pop
pop
dec
mov
and
adc
addr16
and
push
movsl
add
test
or
ret
std
ret
lahf
mov
or
ret
arpl
lret
inc
mov
sub
add
test
lahf
mov
mov
sub
addr16
pop
jmp
add
jmp
xor
add
xchg
mov
pop
xchg
and
stc
enter
add
add
out
mov
addr16
sub
stos
jns
test
sti
cli
push
test
in
arpl
xchg
add
fiaddl
fnsave
push
aaa
enter
mov
mov
call
pop
aas
pop
jo
sbb
push
pop
loope
mov
jl
test
fcmovnbe
jo,pn
pop
dec
dec
add
loope
mov
shll
xor
dec
lods
jns
pop
loopne
mov
outsb
arpl
shll
jp
rcll
aaa
addr16
shr
xchg
aas
or
mov
mov
movb
fs
cmpsl
imul
dec
clc
lods
jbe
incl
imul
rcrl
pop
in
lds
push
mov
ret
shl
leave
pusha
mov
xor
dec
scas
outsb
hlt
or
pop
dec
or
xchg
cld
cld
gs
ret
gs
rol
cld
add
mov
mov
push
push
adc
jg
add
ljmp
add
sti
cmp
lret
ljmp
cld
or
add
sti
cmp
cld
aaa
daa
add
cmp
addr16
aas
ljmp
daa
or
pop
sar
push
lds
daa
push
cmp
cmp
les
daa
dec
xchg
addr16
or
repnz
cld
push
arpl
addr16
sub
mov
lds
pop
xor
adc
add
gs
in
ficoml
rclb
jmp
sub
add
add
bound
push
jno
jno
inc
add
xchg
mov
cld
aaa
negb
stos
fnstenv
ret
out
out
outsl
out
sbb
outsl
shr
mov
and
cmp
jnp
loopne
rcll
cmpsl
icebp
jmp
call
nop
adc
xchg
rol
in
mov
push
in
addb
sub
insb
int3
sahf
jo
int3
adc
lret
jmp
call
fcompl
test
mov
push
cmc
ret
aas
mov
dec
mov
cld
or
ljmp
add
rorl
dec
inc
push
dec
inc
dec
xor
sub
ljmp
mov
pushf
push
mov
push
push
adc
mov
cld
arpl
inc
daa
cmovb
outsb
mov
mov
cld
imul
addr16
das
or
int3
add
add
cmp
cli
imul
sbb
add
sti
sti
lahf
cmp
lahf
push
mov
adc
mov
cmp
ljmp
cld
ret
xchg
inc
mov
fldcw
push
and
pusha
add
imull
lock
add
sahf
out
inc
int3
callw
jp
jnp
lock
test
sbb
out
shlb
jecxz
loopne
js
test
push
cmp
je
pop
test
scas
mov
or
xor
add
fnsave
sbb
xor
sub
xchg
push
movsl
fwait
cmp
push
mov
fcompl
iret
iret
sub
sahf
mov
dec
or
and
pop
dec
inc
inc
pusha
adc
xchg
outsb
inc
ret
scas
dec
jne
imul
ss
rep
xchg
and
daa
sub
mov
cld
cld
xor
or
ret
gs
shrl
push
jp
xchg
das
mov
arpl
rcll
jecxz
les
hlt
mov
mov
ljmp
mov
dec
jbe
add
inc
daa
pop
sbb
push
adc
push
cld
ja
or
lsl
xchg
hlt
cld
cld
xlat
pushf
gs
out
idiv
xor
and
shll
fildl
mov
testb
lahf
mov
xchg
hlt
cld
cld
lahf
gs
dec
das
xor
aaa
daa
mov
or
inc
js
add
fcompl
cld
lahf
mov
daa
or
sub
cld
cld
lahf
mov
pop
or
add
lahf
push
test
mov
pop
push
mov
adc
pmulhuw
cld
mov
sbb
sbb
add
imul
mov
addr16
pop
ljmp
dec
or
inc
dec
dec
push
in
inc
pop
push
sbb
or
pop
push
cmp
mov
es
push
cmp
and
xchg
dec
fists
fs
sbb
or
jns
or
iret
ds
leave
cld
jl
push
out
outsb
movsb
insl
mov
dec
mov
and
xor
pop
scas
sbb
inc
popa
dec
loope
inc
ror
sarb
sbb
lret
inc
fyl2xp1
sub
push
inc
in
pop
or
cmp
mov
fsub
and
mov
lcall
std
imul
iret
pop
push
cmpsb
vmovapd
mov
sahf
jb
mov
xor
or
js
inc
mov
in
mov
sti
or
les
daa
sbb
mov
sub
fdivl
add
dec
jmp
faddl
in
gs
cld
gs
mov
ljmp
cmp
fsubr
icebp
and
add
shrb
ret
jmp
aaa
add
arpl
inc
daa
pop
mov
push
adc
inc
daa
pop
mov
les
pop
ja
sbb
daa
lahf
mov
inc
ljmp
daa
aaa
jmp
xor
add
jae
add
push
arpl
lahf
jmp
mov
daa
sub
xchg
mov
imul
sbb
or
lret
les
add
sub
add
lahf
mov
pop
cld
aaa
daa
push
cld
ja
adc
pop
add
imul
stos
out
cld
cld
arpl
jbe
push
mov
daa
imul
addr16
paddb
das
roll
push
call
in
pop
out
mov
bswap
fadds
repnz
in
adc
jmp
pop
mov
clc
ret
lcall
mov
in
out
inc
setg
pop
mov
xor
insb
push
pop
mov
inc
lahf
cmp
out
out
push
std
lds
adc
inc
sub
insb
filds
enter
push
mov
test
clc
popa
test
insb
test
lock
mov
mov
aas
lods
ljmp
in
pop
adc
adc
or
pop
inc
dec
inc
stc
or
icebp
cld
cld
lahf
ljmp
push
roll
pusha
shrl
jle
sub
fstps
fwait
xor
stc
gs
pop
mov
sbb
xchg
cmpsl
stc
or
fidivs
subl
test
inc
sti
into
pop
adc
cmp
push
stc
mov
scas
mov
jae
inc
rcrl
addr16
cld
dec
testb
in
pop
add
dec
pcmpgtb
xchg
or
dec
rcll
dec
ljmp
inc
rolb
xchg
clc
jge
mov
stc
test
fimull
cmp
fwait
sbb
push
pop
pushl
fildl
add
mov
jo
cmp
inc
mov
fdivrl
push
fcompl
insb
sub
ret
arpl
addb
push
mov
pop
or
cmpsb
jmp
cld
jmp
xor
add
out
and
mov
gs
cmc
or
std
jp
sub
gs
gs
mov
pop
jmp
sub
add
addr16
daa
or
cld
cld
sti
gs
gs
gs
in
mov
gs
lds
mov
gs
cmc
sub
ljmp
sti
sti
cmp
jmp
add
add
call
jmp
je
add
int3
loop
inc
pop
ja
ljmp
mov
and
xchg
repz
or
scas
rcrl
test
mov
sbb
and
mov
ret
cmc
and
dec
sub
inc
inc
dec
jl
adc
rclb
cmp
addl
sbb
xchg
subl
stos
jl
fisubrl
and
test
divb
add
and
and
testb
cli
repnz
in
xor
and
xor
mov
or
ja
insb
lret
aaa
cmp
daa
fisubrl
sub
jmp
add
cmp
lcall
mov
test
ds
iret
mov
inc
mov
fwait
adc
mov
xchg
adc
lock
in
les
stos
pop
shl
js
test
mov
cmp
jmp
loope
cld
adc
std
ret
fiaddl
hlt
clc
cld
cld
cmp
ljmp
out
lcall
xchg
mov
aas
jb
icebp
cmp
mov
mov
inc
push
lahf
cmp
mov
xchg
sar
outsb
iret
inc
mov
loop
inc
dec
sbb
push
cmpsl
in
adc
adc
xchg
movl
mov
dec
xor
mov
insb
stc
pusha
dec
push
shr
popa
add
pop
pushf
xchg
rolb
int
fcompl
mov
les
pop
les
adc
cld
out
cld
cld
mov
test
mov
int3
gs
clc
sub
ret
mov
gs
ljmp
mov
gs
int3
xchg
gs
mov
gs
cmpsb
shr
gs
cli
mov
mov
mov
imul
das
push
lahf
arpl
daa
pop
pop
mov
daa
cmc
rcrl
loopne
test
add
lahf
mov
daa
std
ret
sti
cli
imul
lahf
lahf
imul
and
xor
std
cld
arpl
addr16
inc
jmp
sub
add
into
push
add
arpl
or
into
out
cld
cld
arpl
push
add
aaa
jbe
repnz
scas
mov
fistpl
daa
pextrw
inc
daa
pop
inc
cmc
shr
in
std
cld
ljmp
daa
xchg
cld
cld
testb
fisttpl
xchg
testb
ljmp
addr16
das
or
scas
stc
cld
cld
ljmp
inc
daa
pop
lret
mov
inc
arpl
xor
cld
cld
ljmp
mov
imul
das
fstpt
jne
push
mov
movsl
test
mov
push
dec
jg
push
jge
mov
jg
sbb
push
enter
xchg
mov
push
daa
push
add
lret
and
into
mov
fwait
mov
xchg
lcall
mov
mov
cmp
outsb
push
stos
scas
add
jecxz
sbb
stc
xchg
or
das
in
decl
and
outsb
or
cwtl
idivb
cltd
fcompl
mov
inc
data16
insb
addr16
dec
bound
outsl
inc
add
jns
mov
sub
das
arpl
repz
mov
shll
and
repz
cmp
sub
rolb
pop
pusha
pusha
fwait
lret
int3
jmp
inc
xor
andb
jbe
in
cmc
inc
inc
scas
test
jbe
xchg
lock
inc
ret
lods
add
outsb
in
int
dec
push
jmp
lods
pop
mov
adc
cld
mov
pop
arpl
adc
sarl
insl
mov
xor
jnp
push
data16
jae
adc
or
out
fdivr
sbb
negb
lods
pop
mov
shrb
inc
push
leave
jae
int
sub
pop
test
pop
jne
popa
pop
mov
inc
mov
push
jmp
jae
sbb
inc
pusha
dec
scas
ss
adc
daa
pop
xchg
sbb
xor
push
repnz
or
xor
in
movsl
or
popa
out
sbb
and
jg
cmp
lds
daa
stos
mov
or
mov
cld
cld
jmp
add
lahf
mov
dec
or
or
add
arpl
sbbl
pop
daa
std
cmpl
jmp
cld
cld
jp
mov
xor
aad
mov
js
sbb
je
mov
pusha
xor
insb
sar
js
sbb
push
cmpsb
int3
into
add
inc
jl
push
dec
aaa
pop
lcall
xor
or
xchg
dec
and
adc
icebp
rol
sbb
cmp
rcrb
repz
das
mov
negb
and
pop
inc
jb
inc
arpl
xchg
mov
cld
jmp
push
add
imul
movsl
decl
test
in
cld
gs
fsubl
in
gs
gs
cli
mov
std
gs
sub
add
gs
fisubrl
rorb
or
loop
gs
out
gs
lret
sti
stos
je
inc
sti
add
add
gs
or
ljmp
in
cmp
push
mov
pop
or
lahf
hlt
cld
cld
gs
lock
gs
jge
cld
lds
cld
mov
gs
lret
int
dec
sti
mov
hlt
or
cld
add
gs
cli
shr
gs
mov
mov
mov
int
les
fidivl
arpl
mov
imul
daa
sub
xchg
ret
ljmp
and
fistl
xchg
sub
jne
mov
pop
and
es
outsb
dec
sub
inc
mov
xchg
inc
mov
add
lods
jnp
sbb
jne
sti
mov
movsl
loop
flds
aad
fnstsw
mov
dec
push
cmp
jbe
shl
jmp
fstps
xor
into
idiv
je
lds
les
bound
sub
fcompl
incb
les
aas
inc
stc
pop
adc
ja
pop
mov
aas
push
lahf
cld
ja
inc
rorl
xchg
push
add
testb
jmp
cld
cld
jmp
stc
cld
cld
gs
imul
test
std
cld
mov
or
outsl
test
in
cld
lds
daa
cltd
arpl
subb
cld
and
cmc
fimull
or
clc
mov
sub
mov
cli
arpl
aaa
daa
sub
cmp
lds
daa
mov
pop
daa
mov
daa
or
xor
cld
cld
gs
cli
or
mov
sub
inc
gs
lds
in
ret
mov
imul
jg
in
pop
lahf
cli
cld
xor
inc
daa
pop
sti
mov
daa
or
out
cmp
lds
daa
jg
testb
lahf
mov
out
mov
mov
mov
daa
add
sar
xchg
jmp
sbb
test
lcall
es
xchg
hlt
jno
push
and
sbb
xor
dec
out
sti
cmpsl
push
adc
bound
xchg
ja
pusha
push
ja
push
xor
push
jmp
aam
sbb
mov
add
sub
xchg
jmp
mov
jne
pop
cmp
add
mov
add
add
add
add
add
lret
add
out
daa
push
add
mov
add
add
add
add
add
add
daa
push
add
mov
add
add
add
add
add
push
add
mov
add
add
add
add
add
cmp
push
add
mov
add
add
add
add
add
pop
add
es
add
mov
add
add
add
add
add
add
es
add
add
add
add
add
add
add
add
add
add
add
mov
sub
cmc
jmp
cld
push
jmp
push
add
mov
or
gs
add
mov
sbb
lcall
xchg
xlat
jb
imulb
or
push
das
jnp
add
mov
mov
or
clc
jb
shrb
popa
push
add
je
push
sub
subb
mov
mov
ja
jecxz
mov
push
jge
in
popa
mulb
dec
arpl
or
adc
cmp
or
cmp
jecxz
push
and
shll
add
dec
andl
aas
xor
dec
add
push
imul
inc
jnp
pusha
jbe
inc
jnp
add
mov
daa
mov
pop
or
in
add
hlt
jb
mov
arpl
or
sbb
push
adc
imul
push
push
adc
iret
mov
inc
daa
or
push
adc
pop
daa
jl
add
and
iret
push
add
lods
insb
add
jns
lock
aas
adcl
addr16
test
in
mov
xchg
mov
adc
dec
or
fs
int3
insb
or
cmpsb
sub
mov
nop
cs
jp
sahf
pop
test
test
out
loop
inc
frstor
dec
xor
cltd
mov
mov
jmp
scas
popf
or
pop
jo
cmp
outsl
in
sgdtl
fs
fwait
xlat
mov
call
imul
in
insl
loope
xor
xchg
jmp
out
outsb
fwait
stos
sub
xorb
arpl
xchg
mov
std
das
mov
add
int
in
loope
scas
les
popa
loop
sar
aas
out
and
clc
inc
push
mov
jp
dec
ljmp
popf
mov
fistl
cmp
pop
push
mov
lock
cld
rcrb
jecxz
leave
push
sbb
in
mov
stos
xchg
jne
add
sbb
stos
lcall
test
dec
aas
mov
fcompl
sub
lds
or
addr16
dec
or
xchg
icebp
cld
cld
sti
cli
add
push
cli
push
gs
in
cmp
arpl
xor
jle
cld
cld
gs
sarb
repz
mov
daa
lahf
mov
pop
mov
or
pusha
icebp
cld
cld
inc
cli
or
fcmovb
mov
shlb
mov
mov
mov
gs
pop
mov
ret
or
in
push
cmp
icebp
lods
mov
daa
arpl
xchg
cld
cld
sbb
ljmp
daa
mov
inc
or
adc
cld
cld
push
cli
add
arpl
rcll
mov
das
or
or
cld
cld
ljmp
sbb
add
fisubl
addr16
daa
or
xlat
sbb
add
jns
cld
cld
insl
mov
ss
paddw
scas
clc
jp
mov
movsl
btr
fnclex
fdivrp
sbb
adc
xchg
mov
movzwl
lods
pop
adc
sub
dec
xchg
clc
int
pop
jbe
jne
out
popf
jb
xchg
cltd
pop
and
test
movsl
inc
push
mov
popf
fwait
jb
mov
cmc
mov
mov
test
clc
cmpsl
inc
test
xchg
insl
dec
bound
add
addr16
dec
and
mov
dec
dec
test
fdivs
and
fcompl
sbb
sbb
add
pop
lds
dec
dec
les
dec
rorb
out
dec
mov
inc
in
jmp
out
cld
cld
mov
daa
or
daa
repnz
cld
dec
mov
or
lds
in
adc
mov
or
repz
and
fldl
add
lahf
ljmp
mov
andb
add
and
scas
fstpl
mov
cmpsb
xchg
mov
mov
inc
shlb
inc
addb
in
in
pusha
sbbb
push
pop
xor
pop
mov
ja
jge
dec
dec
mov
int
iret
notl
adc
out
cmp
add
xor
xor
iret
xchg
pushf
jmp
xchg
mov
mov
cmp
jo
movsb
outsl
xchg
roll
and
in
cld
or
mov
inc
xchg
loop
stos
jae
push
nop
decb
xor
mov
dec
and
imul
adc
mov
loope
mov
add
test
pop
cmp
pop
cmc
lock
cld
xor
inc
daa
and
cmp
fsubr
sub
add
les
daa
push
add
cld
cld
mov
das
or
adc
cld
cld
push
lahf
imul
xor
mov
pminsw
stos
std
cld
add
mov
ljmp
push
mov
aaa
or
cmp
rol
cmp
sub
gs
in
or
loopne
or
cld
or
les
shll
cmc
mov
lods
imul
mov
daa
pop
les
daa
push
daa
mov
mov
or
scas
loopne
cld
arpl
shr
mov
std
cld
add
add
add
add
or
add
add
add
pop
add
add
add
and
add
add
add
push
add
add
add
push
add
push
push
add
lods
push
add
push
add
clc
pop
add
add
add
sbb
cld
cld
pop
pop
lds
jmp
cld
cld
push
jmp
jmp
out
cld
cld
cltd
inc
add
push
inc
icebp
das
and
push
loope
adc
aad
stos
int
adc
pop
sub
bound
or
pop
icebp
nop
xchg
sbb
rorl
je
mov
shrb
inc
aaa
es
jb
ja
jle
push
repnz
push
or
in
xchg
les
mov
aad
push
test
cli
fcompl
lret
shl
shlb
inc
fstpl
mov
inc
test
ljmp
sub
int
push
xor
inc
add
cmp
aam
stos
repnz
loope
sbb
mov
ljmp
sbb
outsl
sub
lcall
sub
scas
sahf
insb
mov
movsb
dec
add
fyl2x
mov
shrb
push
scas
stos
xor
stos
push
dec
fcompl
push
cmp
les
daa
push
xor
sub
jmp
fdivr
cld
arpl
or
dec
daa
pop
lahf
mov
sub
sti
sar
cld
mov
pop
jmp
sbb
dec
add
arpl
xchg
and
add
in
add
mov
sub
add
lds
daa
popf
mov
pop
ljmp
mov
push
scas
inc
adc
mov
push
mov
lods
arpl
icebp
adcl
cmpsb
push
ss
jne
pop
xor
cmp
jp
push
ficomps
dec
and
pop
inc
fimuls
xchg
test
int
cmc
mov
mov
lret
fdivrl
pop
sub
or
mov
mov
outsl
lods
sbb
ss
insl
orb
jb
add
shlb
cmp
dec
stos
and
je
cmp
lret
pop
and
lret
gs
gs
or
lahf
test
sti
add
add
gs
enter
hlt
mov
sub
arpl
dec
sti
ljmp
dec
data16
bound
insb
jnp
add
hlt
and
add
cmp
mov
movsl
push
jns
test
das
notl
movsl
xorb
mov
fwait
mov
dec
mov
mov
stos
jae
sbb
mov
lods
loopne
jns
stos
push
or
jl
lahf
negb
popf
mov
jns
hlt
xlat
jmp
mov
mov
jae
fisttpl
push
xchg
lea
jecxz
sbb
pop
cmp
dec
xchg
sbb
int
add
clc
filds
push
pop
and
sub
adc
push
leave
out
dec
call
mov
stos
pushf
iret
hlt
test
loopne
push
mov
dec
push
cli
cmc
and
pop
mov
jnp
pop
mov
push
xlat
dec
inc
in
popa
repnz
and
add
push
pop
jmp
and
jnp
psllw
adc
aaa
and
imul
cmc
xchg
data16
pop
aaa
jne
jmp
jnp
jl
fmuls
inc
decl
cmp
mov
sbb
mov
movsb
enter
push
push
sub
popf
clts
mov
in
jg
xchg
sbb
cmp
subl
push
fiaddl
cmp
ljmp
xchg
mov
out
mov
mov
in
push
les
dec
or
xlat
xchg
xor
mov
sub
fcmovbe
cwtl
lock
mov
pop
dec
xchg
fcompl
pop
push
xchg
lahf
lahf
xchg
lds
daa
lret
jmp
adc
add
aaa
daa
mov
das
or
jp
cld
cld
rcr
gs
test
or
in
mov
sti
gs
aad
fisubl
mov
and
testb
or
xor
inc
daa
pop
hlt
shlb
pop
arpl
cli
mov
fsubr
pop
adc
out
xor
iret
aam
stos
push
xchg
jge
cmp
and
jno
lock
test
loop
mov
mov
gs
int3
fs
repz
mov
xlat
sbb
xchg
fstpl
or
jnp
lds
loopne
xchg
or
mov
imul
cmp
lods
mov
cwtl
or
js
xchg
mov
jb
push
fstpl
push
scas
fcompl
jle
call
bnd
addl
jl
adc
ror
sub
inc
cmp
shll
pushf
idivb
stc
pmaddwd
div
jmp
setle
push
psrlw
lcall
push
sub
dec
mov
jp
fcompl
add
pop
add
gs
call
mov
jmp
sar
cld
cmpl
inc
cld
cld
ljmp
arpl
pop
sub
add
sbb
and
int
sbb
js
mov
jle
loopne
dec
or
inc
xor
sub
add
sbb
repz
pop
pop
sub
je
outsb
stos
test
movsl
sbb
cmp
xchg
mov
es
pop
popf
daa
dec
jl
jo
fwait
sub
push
cmp
cmc
push
jnp
pop
gs
jecxz
sbb
dec
and
aaa
je
mov
push
jne
mov
or
cmp
cld
cld
arpl
insl
jmp
cld
scas
repz
subl
xor
loope
lds
in
loopne
shlb
inc
fstpl
jne
and
jno
push
int
sbb
jle
xchg
movsb
jge
insb
fdivl
outsl
push
test
jns
xchg
mov
sub
xlat
gs
sub
scas
fwait
lcall
xor
sub
adc
les
test
xor
inc
pop
lret
inc
xor
rcr
xchg
out
add
mov
mov
in
test
xor
mov
pop
and
jno
dec
push
xchg
aam
sahf
movb
xchg
cmp
jmp
addb
adc
sbb
insb
mov
rolb
and
pop
rcrl
or
cwtl
lods
js
add
clc
dec
push
test
outsb
cmp
es
jb
loope
sbb
insb
add
push
add
mov
push
cmpsb
cld
xor
push
cmpsb
sub
adc
mov
test
scas
push
sub
mov
pushw
or
test
into
loope
ljmp
mov
mov
mov
sbb
call
repz
sbbb
pop
jmp
loopne
ja
pushf
mov
aas
mov
xchg
xchg
dec
and
pusha
xor
cmp
fdivrp
jl
ret
push
cmp
das
mov
out
sbb
pop
sub
test
pop
xor
rdmsr
mov
jmp
pop
mov
or
ret
in
nop
add
mov
cmp
inc
push
decb
sbb
or
cli
inc
fldl
outsl
mov
shrl
mov
jns
jg
mov
mov
pop
clc
jmp
xor
push
jnp
in
pushf
mov
jl
mov
movsl
inc
mov
jmp
dec
popf
dec
sub
fcompl
cs
mov
mov
gs
ret
gs
lock
gs
in
push
gs
mov
pop
mov
daa
lahf
sub
or
out
aaa
daa
ljmp
and
add
pusha
fwait
std
cld
ljmp
xchg
jbe
sti
cwtl
pop
daa
cmc
sbb
scas
and
pushfw
mov
adc
ret
push
sbb
and
inc
jo
sbb
jbe
adc
fs
call
jecxz
aaa
lahf
pop
aad
mov
rcrb
cmp
loopne
clc
pop
push
add
push
aas
sbb
insb
sub
fldenv
jo
pop
pop
jle
inc
je
test
and
nop
push
dec
subl
mov
frstor
sub
loopne
fwait
rcl
mov
ljmp
push
jl
jle
sti
mov
pop
pop
aam
ds
mov
cmp
nop
or
pop
rol
in
adcl
sbb
or
or
daa
mov
cwtl
add
fidivl
sbbb
mov
jl
jo
jbe
cmc
xchg
mov
or
xchg
fincstp
xchg
fwait
ss
mov
mov
adc
lds
pushf
inc
jle
fildll
mov
mov
int
aam
pushf
push
or
in
xchg
loop
add
imul
stos
std
or
imull
add
cmpsb
add
adc
addr16
mov
cmp
rolb
mov
leave
push
push
jl
mov
pop
fcompl
outsl
inc
sbb
les
pop
dec
andb
daa
sub
pop
frndint
cld
sti
gs
loop
push
or
add
imul
mov
les
cmp
mov
sub
in
cld
cld
cmc
rcrl
ja
pop
xchg
ljmp
daa
xchg
cld
cld
cli
das
xor
mov
daa
lds
daa
mov
ljmp
mov
or
rorb
rcr
ret
out
pop
gs
into
add
or
leave
les
add
add
add
gs
gs
int
dec
sbb
stos
xchg
add
mov
ljmp
mov
sar
cld
pop
push
mov
pop
or
enter
lahf
cld
aaa
daa
mov
adc
ja
packsswb
jg
adc
ljmp
ja
and
aaa
add
pop
ljmp
or
or
cld
cld
inc
ret
ret
shr
and
add
inc
or
loop
scas
pop
pop
add
jmp
and
jbe
xlat
or
jne
lret
test
jns
in
jle
and
mov
std
mov
ja
xchg
je
or
jmp
xchg
cmp
test
roll
in
mov
stos
cs
mov
popa
add
in
cld
leave
fsubl
jno
mov
or
scas
ss
call
fcompl
in
or
addr16
cmpsl
sti
sub
cmpsl
jg
imul
jmp
in
xor
test
mov
outsb
repnz
dec
into
push
and
sbb
std
es
scas
dec
adc
fisttpl
pop
xor
adc
fucom
mov
lret
mov
call
or
notb
test
test
xchg
clc
fcompl
push
stos
pop
add
sub
ret
push
aaa
push
xchg
jl
out
mov
repz
sub
jb
push
push
jle
add
out
frstor
add
jg
mov
lahf
shll
mov
sbb
lock
popa
outsl
add
jbe
pop
mov
pop
and
sub
gs
outsb
fildll
push
scas
stos
sbb
int3
and
iret
andl
daa
or
ror
imul
pop
sub
add
add
add
jl
inc
sub
mov
pop
push
sysexit
sbb
and
and
add
into
rcll
lcall
aad
and
inc
imul
shrl
outsl
pop
inc
mov
iret
fs
jno
pop
sbb
sub
aad
rcll
outsl
notl
fs
shll
jp
lahf
jl
sub
mov
inc
shrl
in
and
mov
inc
ret
xchg
push
jmp
pop
sub
inc
aaa
sub
loope
pop
orl
insb
stc
dec
sbb
cltd
jnp
call
inc
shll
add
dec
idivl
xchg
adc
add
out
shl
out
test
pop
in
repnz
dec
loopne
loope
jae
push
popf
adc
sahf
in
paddusb
divl
sub
jl
cld
cld
gs
shlb
cld
add
pop
gs
rorl
lahf
lahf
ljmp
addr16
das
or
rcl
cld
cld
sti
lahf
sti
lahf
das
xor
or
aaa
daa
lahf
mov
pop
or
cmp
cld
cld
gs
repz
arpl
push
or
add
jmp
fdivr
cld
pop
call
lret
and
test
dec
dec
daa
aad
add
es
clc
jae
out
push
add
rolb
jg
cld
in
mov
xchg
xlat
sbb
mov
lret
bound
cmpsb
mov
pop
shll
rcrb
clc
and
dec
dec
lods
mov
push
rcll
out
dec
and
and
push
fbld
incb
push
mov
popa
sub
cmp
xor
adc
daa
mov
dec
lea
dec
fldt
lcall
data16
movsl
mov
mov
xor
and
sub
aas
int3
shll
scas
xor
xor
hlt
setno
nop
cmp
imul
push
or
lahf
or
pop
jmp
push
pop
insl
sti
popa
pop
gs
jbe
cmp
pop
outsb
clc
fwait
hlt
add
sbb
xlat
push
cmp
mulb
loopne
call
out
mov
jmp
or
mov
fdivrl
xor
arpl
push
push
out
and
xchg
std
jne
mov
pop
lret
sbb
je
cs
inc
cwtl
xor
sbb
xchg
or
stos
mov
and
mov
dec
mov
out
bound
jg
dec
push
clc
mov
pop
xchg
inc
pop
fstpl
or
cmp
mov
outsl
insb
jb
data16
add
dec
ja
jg
orb
imul
sub
jo
dec
fwait
ret
xchg
imul
add
pusha
out
push
mov
and
pusha
fidivrs
cmp
xchg
shll
into
or
fadds
aam
pop
lret
cmpsb
sub
xor
lods
pop
jns
jns
sbb
cmp
push
xchg
enter
jb
push
leave
dec
adc
pop
push
je
cmp
sbb
mov
call
movsb
fmull
or
stc
cwtl
jmp
mov
pushf
pop
sbb
and
loop
test
repz
fyl2x
loope
or
mov
fcompl
addb
jmp
int3
cld
cld
shlb
popf
jmp
movb
push
in
fnstenv
ljmp
push
lret
sub
repnz
sub
in
cmpsl
cltd
jae
jmp
aam
js
or
push
xor
cmc
ds
loop
fld
jo
call
push
fcmovb
mov
outsl
jecxz
bound
hlt
or
outsb
lret
or
dec
mov
ret
or
pushf
loope
mov
mov
fs
sbb
test
fcompl
mov
cli
shlb
addr16
por
add
ljmp
push
fs
sub
xor
adc
lods
dec
sbb
pop
iret
popf
push
cmp
pop
clc
inc
add
arpl
adc
add
movsl
bsr
into
cmpsl
les
imul
cwtl
sarb
mov
xchg
mov
add
in
push
aaa
push
adc
mov
mov
rcl
mov
and
or
cld
cld
or
outsl
jmp
pop
daa
cltd
mov
pop
or
push
repnz
cld
ljmp
enter
nop
insb
call
arpl
lods
mov
mov
or
test
xor
popf
push
push
and
dec
repnz
sarl
push
xor
mov
xchg
es
jns
xlat
lahf
dec
dec
add
dec
pop
mov
xchg
fisubs
sbb
push
sub
cs
mov
or
je
mov
sub
and
js
out
clc
stc
fsubrp
addr16
sbb
icebp
or
mov
xor
lock
jno
xlat
xor
jl
fsubrs
sbb
cmpsl
push
cmpsl
ret
dec
jecxz
ret
bound
sbb
gs
jb
xor
mov
icebp
cmpsb
push
mov
mov
test
insb
push
cmc
pop
jp
mov
adc
js
gs
pop
push
pop
xor
je
rcll
pop
ss
and
repz
cltd
out
insl
les
stc
adc
leave
add
xchg
adc
push
sub
enter
mov
mov
lret
add
divl
int3
lea
test
sbb
sbb
mov
xchg
out
loope
mov
nop
mov
dec
scas
in
adc
pop
mov
pushf
idivb
cs
pop
es
gs
pop
add
sbb
add
gs
fldenv
mov
jmp
cmp
add
imul
mov
or
ja
push
rcll
inc
mov
pop
pop
pop
mov
push
mov
ret
popa
or
aam
dec
aad
popf
loop
cli
add
repnz
pop
push
outsb
adc
xor
and
mov
cmpsl
dec
dec
mov
add
fildll
leave
jbe
sbb
mov
pop
shl
cli
push
xor
sbb
data16
or
in
inc
ret
mov
jbe
shlb
ljmp
loopne
test
jge
jmp
dec
cmp
push
add
and
push
mov
popa
data16
and
repnz
adc
fdivp
mov
in
repz
dec
or
adc
sahf
sarb
sbb
dec
xchg
lock
add
scas
test
cmpsl
mov
sub
add
into
lods
jnp
std
dec
mov
mov
mov
fsubrs
loopne
pop
mov
imul
cmp
shlb
pop
outsb
fcompl
nop
push
pop
dec
xchg
jne
fistpl
lcall
clc
dec
cmpsb
mov
fdiv
stos
and
jb
push
pop
fwait
mov
jns
mov
outsb
add
stc
or
sbb
icebp
sub
adc
dec
je
sub
push
pop
loopne
jg
sbb
ret
dec
lods
mull
push
mov
adc
mov
xchg
jge
stos
mov
ja
std
xor
cmp
dec
or
pop
mov
or
outsl
inc
cmp
incl
je
inc
mov
je
loop
pusha
scas
sub
and
pushf
popf
or
lock
add
sub
mov
and
sbb
fbld
jp
lahf
pop
cmp
or
adc
add
mov
aaa
clc
loop
xchg
or
outsl
adc
pusha
inc
enter
scas
fadds
lcall
jecxz
clc
push
push
mov
xor
addr16
loope
test
popa
das
and
std
xchg
adc
push
js
cld
push
fdivr
popf
and
pop
and
jbe
or
int
xor
ja
pop
push
icebp
sub
sbb
push
sti
add
jmp
jno
ret
mov
and
addb
jne
imul
ds
shll
mov
add
in
mov
lret
ret
add
js
sbb
out
insb
insl
in
ficompl
fld
test
pop
jmp
xchg
xchg
push
adc
mov
test
icebp
inc
pop
jne
push
push
icebp
push
sbb
add
dec
push
sub
pop
and
mov
les
pop
xor
or
test
cmp
cld
cld
mov
and
mov
cld
cld
gs
les
insl
testb
arpl
cmc
ret
or
cmovl
faddl
xchg
gs
cld
add
or
mov
sti
add
gs
jmp
dec
add
mov
pop
lahf
lds
daa
inc
arpl
sarl
mov
or
jno
cld
cld
gs
out
imul
jp
cmpl
aaa
daa
arpl
mov
add
lahf
mov
pop
or
sbb
cld
cld
or
clc
arpl
cmpsb
in
mov
lahf
add
cmc
ret
aas
daa
gs
sti
or
cmovl
ret
mov
xchg
gs
testb
push
gs
loop
sti
ljmp
daa
imul
in
les
clts
sub
adc
mov
xchg
cld
push
arpl
inc
daa
inc
jmp
les
pop
inc
and
addr16
inc
ljmp
jmp
xchg
std
cld
mov
mov
jmp
xchg
std
cld
gs
rol
push
sti
pop
clc
shl
mov
or
sarb
adc
gs
ret
xlat
xor
ja
pop
gs
repz
pop
mov
sbb
xchg
xor
ss
mov
pop
daa
pop
or
pop
ret
sti
push
mov
jle
xor
std
mov
pop
mov
sti
imul
xchg
fdivrp
cld
adc
dec
inc
fcomp
push
cmp
loope
xlat
in
aam
das
popa
clc
outsl
aas
insb
loop
add
xchg
popa
inc
sub
cmc
popf
lea
push
lock
int3
jle
insb
pop
sub
jle
pop
and
or
aas
add
xchg
or
mov
mov
mov
mov
gs
fisttpl
inc
push
xchg
fisttpl
stos
inc
adc
pop
rorl
pop
fs
sub
call
test
push
dec
xorb
jnp
fcompl
movsb
loop
test
inc
jnp
pop
hlt
decl
push
jge
add
cmp
fsubrs
jbe
lods
jle
sub
mov
cltd
mov
stc
outsl
aas
cmc
mov
push
mov
das
gs
cmp
mov
inc
push
dec
xor
pop
aam
dec
mov
inc
push
dec
push
and
fistpll
sub
imul
int
jae
cmp
rcrb
dec
sbb
test
add
xchg
subb
lods
mov
ret
stos
pop
mov
fdivr
mov
out
dec
out
mov
hlt
xor
cmpsl
les
rcrb
aas
xchg
or
sub
and
or
sub
jmp
rcrb
loope
or
pushf
jbe
mov
loop
and
jmp
push
sbb
mov
pop
sbb
in
shll
xlat
stc
fcompl
fstp
sub
adc
cmpb
pop
ret
and
sbb
and
adc
movsb
insl
inc
or
sub
ljmp
xor
sbbl
les
in
and
pop
leave
ljmp
loop
daa
in
and
enter
push
cmp
or
popa
mov
popf
out
mov
jge
mov
pop
sbb
jl
mov
daa
jmp
add
fdivr
cld
arpl
ljmp
daa
pop
cmp
jmp
cld
cld
mov
arpl
jb
cld
cld
nop
loopne
add
in
or
jg
mov
pop
adc
bound
mov
loope
aad
dec
adc
or
imul
jno
pop
sub
push
in
mov
pusha
inc
enter
cmp
mov
sub
out
xchg
xchg
lds
adc
in
add
out
dec
and
shlb
fcompl
aam
jmp
mov
cld
ljmp
movsl
cli
clc
int3
dec
mov
cmp
hlt
mov
call
mov
out
xor
add
ja
pushf
and
rorb
push
sub
lahf
shll
movsb
or
inc
cwtl
cmp
lods
sti
popa
mov
mov
ljmp
dec
or
mov
dec
fcmovnu
push
cld
lods
xor
adc
lea
lock
dec
push
int
ja
ja
call
push
sbb
sub
ret
repz
fcompl
shrb
push
dec
inc
dec
dec
xor
sub
mov
sub
inc
test
hlt
xor
scas
dec
sbb
je
es
sahf
mov
pop
inc
and
mov
xchg
lcall
je
fcompl
mov
sub
les
pop
pusha
sbb
addr16
aas
or
jbe
std
cld
adc
sbb
pop
and
clc
imul
ret
jmp
gs
stc
sub
add
gs
cmc
fmull
sar
lret
mov
or
out
cmp
int
popf
gs
dec
jae
or
in
icebp
lods
lahf
arpl
pop
icebp
cld
cld
cmp
xor
jne
outsb
cli
sub
or
push
js
jnp
cmp
adc
dec
push
lret
ret
pop
add
mov
dec
lret
mov
ja
loop
xchg
ret
sbb
rcrl
insb
or
sbb
std
xchg
dec
fcompl
or
ljmp
jmp
push
add
mov
ds
dec
mov
outsb
test
sub
add
cmp
xchg
push
mov
dec
add
inc
xor
ds
repz
jns
cmpsb
or
cwtl
add
lods
scas
sbb
dec
and
xchg
fnstenv
and
pop
pop
jne
xchg
gs
out
push
div
cmp
ljmp
mov
lahf
ljmp
xchg
sti
aad
push
mov
adc
cwtl
scas
loop
jo
add
ja
adc
adcb
jnp
or
fimuls
iret
mov
stos
cmp
mov
stc
stos
push
jge
sbb
push
lods
or
sbb
pop
mov
sub
insl
arpl
jecxz
add
mov
adc
adc
jb
fs
xchg
aaa
or
imul
js
add
lret
aad
inc
sbb
test
pop
add
lds
cmp
in
dec
call
pop
sbb
mov
sub
cld
lahf
jmp
cld
cld
mov
daa
imul
shll
jmp
stc
cld
cld
lahf
les
daa
mov
aaa
daa
mov
lahf
mov
pop
ljmp
in
pop
cmp
ljmp
ljmp
jle
dec
jns
jo
popl
and
roll
sub
add
imul
adc
mov
into
shl
or
insl
icebp
in
ljmp
jg
negl
in
fidivrs
pop
mov
out
fcomip
scas
loopne
jnp
jae
stos
leave
insl
mov
lret
sub
adc
lahf
or
enter
add
aam
call
push
inc
outsb
jge
xor
mov
add
ret
imul
aas
xor
fcompl
in
pop
ljmp
addr16
pop
or
jnp
cld
cld
imul
addb
xchg
std
cld
lahf
jmp
mov
daa
or
jmp
inc
add
inc
out
inc
lods
aad
inc
jb
data16
movsl
sbb
xor
jno
xchg
shll
jbe
sbb
add
xchg
ds
test
jmp
ds
roll
clc
lret
add
ss
je
pushf
push
jns
pop
add
sub
les
mov
xorl
roll
sbb
aaa
std
xor
loope
inc
xor
icebp
stos
jo
popf
fnstcw
std
fwait
add
pop
sbb
pusha
or
dec
into
lods
mov
sub
lods
sar
cld
xor
pop
clc
pop
sbb
ret
lock
mov
cmc
rorb
and
mov
sbb
mov
sti
mov
cli
jmp
mov
cld
sti
idiv
cmpl
pop
daa
lahf
les
pop
or
lahf
mov
xchg
cmc
filds
jecxz
ret
sub
gs
ret
jmp
cmp
inc
sarl
cmpsb
cmp
cwtl
data16
cvttps2pi
iret
sub
mov
inc
jmp
bound
daa
pop
and
nop
fildll
or
push
jmp
out
sub
sarl
sub
dec
fs
movsb
pop
mov
mov
aas
dec
mov
cmpsl
adc
mov
dec
mov
sbb
fistpll
xchg
or
adc
push
call
jge
lods
pop
push
mov
pop
outsb
jecxz
mov
xor
imull
icebp
cwtl
jle
cmc
or
xor
lock
cmp
and
sbb
lods
popa
lcall
cmp
jle
cmp
outsb
stc
enter
pop
adc
mov
icebp
in
gs
out
lods
mov
div
outsb
xor
fcompl
dec
dec
inc
lret
fists
pusha
xchg
mov
fs
subl
loope
outsb
mov
add
aad
ds
out
xor
mov
mov
bound
lcall
loopne
inc
lods
notl
sbb
mov
sub
xor
fdivrs
mov
popa
int3
mov
sarb
es
ss
push
mov
mov
add
out
and
aas
dec
cmp
movsl
or
out
idivl
mov
bound
push
sbb
fsubs
push
dec
xor
fistpll
dec
lahf
xchg
dec
lods
aas
fildl
aam
sub
icebp
cmp
mov
fiaddl
adc
fcompl
mov
bound
sbb
rcrl
or
add
cld
cld
lahf
cmc
shll
mov
add
shll
mov
daa
ret
flds
mov
cmc
ljmp
lods
mov
daa
jmp
frndint
cld
arpl
or
ret
cld
cmp
cli
sub
sub
gs
in
add
loopne
or
in
push
or
les
arpl
mov
ljmp
pop
daa
lock
pop
or
int3
cld
cld
lahf
mov
daa
lahf
ljmp
pop
sarl
and
sub
popa
pop
pop
loopne
cmpsl
push
sarb
scas
sarl
sub
sub
mov
inc
addl
testl
movsl
mov
fwait
sub
das
or
and
adc
out
hlt
and
out
shrl
shl
insl
mov
push
mov
jge
call
add
xor
aam
add
out
push
sub
call
push
push
out
mov
adc
jecxz
fcompl
cmp
test
sub
xlat
xchg
pop
iret
test
lret
inc
push
out
insl
mov
popa
push
push
movsb
into
ds
sub
or
add
pop
inc
les
inc
adc
ss
push
mov
movsb
pop
rorl
and
cmc
sub
pop
adc
lret
cld
mov
push
sti
rcr
mov
cli
cld
aaa
daa
icebp
lods
lahf
mov
or
pop
daa
mov
xchg
cld
cld
or
gs
rol
cld
add
push
cmp
dec
mov
negl
and
cmp
mov
jae
add
cmp
or
mov
jae
jmp
sub
ret
hlt
cmp
dec
mov
loopne
jns
xor
push
aad
xor
dec
or
into
add
lods
aam
lret
pop
adc
or
cmovl
aam
mov
pop
push
ljmp
addr16
sub
add
cld
cld
gs
loope
std
ret
gs
lret
sub
pushf
gs
mov
rcr
or
add
pop
insb
and
mov
arpl
std
cld
mov
jge
push
das
call
pop
adc
cld
outsb
cli
cmp
mov
test
es
mov
xchg
ret
pushf
jns
push
out
jle
movl
mov
mov
inc
pop
jle
mov
in
test
push
xchg
add
insl
inc
nop
or
rorl
sub
loop
aas
fdivrp
idiv
loop
inc
jle
mov
mov
bound
or
inc
lahf
or
pop
push
dec
dec
mov
jmp
lret
inc
jmp
arpl
or
sub
xchg
stc
in
mov
inc
mov
xchg
mov
and
enter
adc
xor
add
adc
xor
pop
xor
mov
cmp
cmp
jg
xor
fmulp
cmp
xlat
lea
sbb
fcmovnu
pop
fildl
xchg
pop
push
lods
mov
xchg
ljmp
incb
outsl
inc
cli
mov
dec
lahf
mov
pop
pop
push
scas
mov
imul
sub
into
push
je
mov
push
push
adc
xchg
adc
add
sbb
decb
mov
shll
ret
push
and
lahf
mov
adc
xor
xor
cmp
outsb
jle
mov
xor
dec
dec
insl
daa
mov
pop
mov
cmp
lcall
popa
xchg
inc
gs
out
xchg
sbb
dec
fs
mov
jnp
adc
roll
addr16
and
je
cld
cld
arpl
sti
xchg
imulb
lods
aas
adc
cmp
jmp
cmp
add
xchg
cld
cld
cmc
shll
fisttpll
inc
or
and
imul
fcmovb
in
gs
gs
xchg
gs
mov
push
sub
cmp
idiv
xor
pop
daa
ljmp
ljmp
repz
daa
mov
pop
gs
mov
or
mov
cmc
rorb
ja
and
mov
push
cmp
std
add
arpl
and
stos
cld
iret
imul
dec
mov
in
sub
mov
insl
sbb
clc
rcrl
repnz
test
scas
sbb
idivl
cli
fildll
jp
fcmovne
lods
xchg
movsb
outsb
mov
mov
jl
andl
jecxz
fdivl
roll
das
or
mov
xor
add
fcompl
lock
jl,pt
add
push
lahf
ljmp
daa
push
mov
pop
or
insl
mov
xor
add
ljmp
and
test
jge
pusha
stos
xchg
mov
fstp
or
fsubs
scas
arpl
test
mov
sbb
out
mov
stos
ljmp
mov
dec
mov
sub
in
jecxz
xchg
xor
and
cmp
fidivrs
and
outsl
es
adc
jne
push
or
pop
fcompl
sti
pop
jmp
sub
arpl
inc
daa
sbb
cli
idiv
xor
inc
daa
pop
gs
or
out
cmp
arpl
rorb
inc
daa
pop
ljmp
daa
or
cs
shll
lret
xor
or
out
sbb
das
push
mov
adc
arpl
jecxz
add
ljmp
jmp
or
push
imul
jecxz
adc
imul
mov
jge
ret
dec
push
and
ret
in
imul
pop
mov
cld
jge
imul
push
loop
mov
and
test
push
out
call
mov
push
stos
loope
shlb
pop
xchg
faddl
shl
adc
pop
movsl
outsb
inc
cmp
mov
movsl
adc
ljmp
xlat
and
fcompl
xchg
adc
daa
pop
add
jmp
cld
cld
mov
xchg
add
sar
add
gs
gs
gs
fcmovnb
aam
sub
sub
gs
fsubs
hlt
shr
ret
call
arpl
aam
add
cli
ret
fadds
add
ret
cld
add
gs
or
sbb
ret
ds
cmp
ljmp
inc
cmp
add
orl
add
cmp
sti
xor
cmp
icebp
lods
arpl
mov
cld
cld
jmp
cld
cld
xor
gs
loopne
cld
aaa
daa
icebp
lods
imul
cld
cld
cld
les
and
clc
pop
adc
push
cli
mov
adc
cld
aaa
daa
les
daa
pop
adc
ja
dec
rcll
add
dec
insb
addr16
inc
push
dec
bound
inc
add
gs
mulb
ret
pcmpgtw
cld
aaa
daa
arpl
call
or
push
xorb
mov
scas
in
imul
lcall
fs
jo
leave
loope
js
mov
or
jmp
adc
cmpsb
mov
shlb
pop
cmpsb
popl
cmp
fildl
call
into
cmp
or
fisubrl
xchg
mov
call
in
mov
inc
sub
or
push
cmpsb
lret
enter
sbb
aam
testb
mov
in
inc
arpl
add
ror
gs
cmc
rorb
rolb
add
jg
xor
pop
inc
push
in
sub
push
enter
xor
mov
imul
aad
icebp
std
fistpll
xchg
adc
mov
shrl
sahf
mov
cmpsl
jle
adc
scas
adc
bound
jg
dec
push
adc
sbb
pop
lcall
loope
inc
clc
dec
stos
movsl
jge
jbe
dec
fs
stos
fstpl
push
nop
lods
mov
pop
and
pop
or
dec
or
insb
sar
ret
lret
add
ja
or
arpl
ret
add
cld
cld
push
push
into
mov
cs
mov
rcr
push
arpl
push
fistps
int
sub
jl
das
pop
repz
aaa
lds
and
scas
cmp
push
and
dec
mov
adc
loop
dec
fs
inc
push
xor
sbb
andl
cmp
or
pop
fsubrl
xor
push
lods
mov
dec
cmp
mov
je
fcompl
fbstp
or
fldt
scas
cld
cld
inc
jmp
add
js
jbe
js
or
cmovle
insb
mov
xchg
and
inc
cmp
adc
and
inc
pop
iret
and
sub
mov
lock
xlat
inc
adc
jnp
xor
pop
loop
push
xchg
std
dec
mov
cmp
mov
xor
mov
in
fwait
cwtl
mov
or
into
imul
pop
push
dec
sub
adc
push
gs
gs
call
mov
push
mov
pop
shr
ror
gs
cmc
fisttpll
or
aam
sarl
iret
jb
gs
rclb
mov
lahf
sbb
mov
daa
std
lds
sub
fisubl
mov
lret
mov
sbb
gs
icebp
push
gs
adc
mulb
mov
mov
or
cmc
cld
cld
mov
gs
repnz
ret
fiadds
or
rcrl
cld
aas
or
jmp
mov
cld
scas
cli
ret
ret
add
lahf
std
ret
lahf
or
in
rol
jmp
jp
cld
gs
mov
pop
imul
cld
ja
xor
inc
add
lret
inc
enter
out
push
inc
enter
shr
dec
out
les
dec
rorb
dec
lret
enter
inc
dec
dec
out
les
dec
out
les
dec
movl
clc
cwtl
cmp
push
mov
pop
or
cmp
cld
cld
gs
call
gs
into
mov
gs
mov
gs
sti
mov
arpl
ret
cmp
lahf
icebp
lods
ljmp
jmp
sub
add
in
or
pop
ljmp
pop
stos
mov
movsl
adc
jb
xor
cmp
pop
mov
loope
pop
cli
adc
ljmp
or
lret
mov
outsl
fcompl
sbb
mov
sub
cli
fists
adcb
push
xchg
mov
in
aas
rclb
xchg
mul
mov
fld
sub
cli
mov
jle
mov
scas
jno
cmp
adc
or
jno
clc
xor
test
addl
pop
cmp
lods
sbbb
mov
aas
and
fcomps
dec
xchg
sbb
push
inc
mov
xor
test
es
ret
mov
dec
xchg
pop
js
loope
bound
es
ja
pop
outsb
inc
loope
test
cmp
mov
dec
icebp
lods
push
push
sub
stos
jmp
test
dec
fsubs
jge
add
xchg
stc
test
jne
aam
pop
pop
jns
ljmp
push
cmp
cmp
lahf
lahf
mov
pop
or
arpl
sub
gs
cmc
shll
mov
lret
mov
ror
or
ret
add
sub
cmc
rorl
sti
arpl
add
jb
cwtl
sbb
insl
dec
mov
stos
bnd
push
push
out
adc
cs
inc
rolb
jns
inc
adc
jl
sub
jae
add
insb
push
dec
cmp
mov
mov
in
mov
mov
mov
nop
iret
cmpsb
jbe
mov
aas
push
inc
mov
subb
test
or
xlat
outsl
mov
incl
mov
in
std
and
js
icebp
mov
cmpsb
push
inc
push
and
in
das
aam
imul
jmp
jnp
lods
cltd
fs
loopne
lods
fstpl
pop
inc
cmp
inc
mov
fcomi
and
rcll
pop
ret
je
adc
mov
jp
jmp
mov
add
mov
aaa
out
mov
mov
cmc
dec
push
es
pop
or
out
inc
ret
enter
pop
or
sar
imul
bound
sub
dec
inc
adc
clc
jmp
sar
cld
pop
jge
sbb
cmpsb
das
test
popf
pop
xor
and
insl
and
inc
pop
mov
clc
je
sub
mov
xchg
push
cld
sarb
nop
aad
xchg
pop
dec
cmp
mov
or
ljmp
adc
aam
sub
inc
and
mov
jo
test
jbe
and
dec
aad
pusha
lret
lcall
enter
fcompl
int3
lret
mov
inc
mov
daa
jmp
pop
add
sub
pop
xchg
sbb
outsl
jo
push
hlt
push
mov
outsb
movsb
scas
adc
aam
cmp
icebp
outsl
push
jae
test
mov
push
scas
shll
repnz
push
jnp
fnstenv
jne
xchg
andl
push
xor
jae
pop
sub
jl
pop
cmc
adc
xor
dec
cmc
jmp
sbb
js
mov
cmpsb
or
std
std
roll
cmp
arpl
pop
or
mov
xor
aas
stos
mov
pop
lcall
insl
popa
and
aas
add
push
pop
pop
cmpsl
dec
jbe
xchg
test
jp
cmpsb
jge
push
pop
in
imul
mov
cs
push
pop
pushf
push
enter
mov
pop
xor
adc
lret
mov
inc
xchg
leave
arpl
xor
ds
push
xor
sbb
test
les
inc
jecxz
outsl
lods
clc
lock
ss
fs
dec
sub
inc
enter
bound
pop
or
mov
adc
sarb
pop
and
push
sub
pop
push
imul
and
add
cli
enter
sub
icebp
mov
ret
or
push
add
dec
mov
sahf
push
cs
add
pop
leave
xchg
fcompl
add
jmp
mov
cld
ljmp
sub
cld
lahf
mov
pushf
mov
or
add
xchg
jecxz
cld
push
lret
pushf
lret
push
imul
fstpl
in
lret
dec
or
cwtl
movsb
int
mov
in
clc
add
jnp
xchg
pushf
pop
loop
jno
cmp
push
mov
xor
jl
test
popa
push
sti
push
rorb
xor
cmp
stos
mov
mov
stos
fbstp
adc
subl
in
loop
jg
xchg
cmp
ljmp
jb
pop
mov
jge
incb
pop
add
pop
lcall
cmc
xlat
mov
mov
gs
ret
cld
cld
mov
out
in
pushf
fs
jp
xor
ljmp
stc
loopne
divb
lahf
mov
and
adc
inc
lcall
sub
shrb
lds
or
leave
fimuls
insl
test
shll
shl
das
fwait
sbb
inc
je
test
loopne
xchg
mov
nop
mov
add
pop
daa
mov
or
push
fs
imul
adc
pop
add
jne
stos
xor
sbb
add
pop
jle
push
adc
sub
repnz
lods
ljmp
xchg
imul
stc
lcall
out
xchg
lcall
xchg
movsb
lahf
fsts
mov
dec
sbb
imul
cmc
sti
inc
add
stos
cmp
fmul
jmp
push
and
fisttps
mov
fimuls
imul
mov
pop
add
or
out
cmp
cmc
fsqrt
testb
add
icebp
jp
imul
daa
pop
std
lret
cli
cli
sti
sti
ror
mov
inc
or
or
les
daa
or
mov
daa
std
lret
jmp
jmp
cld
mov
or
xor
sti
add
arpl
std
mov
daa
mov
push
mov
das
ljmp
daa
dec
or
jns
cld
cld
push
mov
pop
or
ror
cld
cld
idivb
out
ljmp
cwtl
subb
je
js
mov
movsl
mov
lds
lret
mov
popa
push
sub
jae
dec
inc
lret
in
cmp
push
lods
stos
sub
orl
clc
lock
push
fwait
jbe
loop
fsubrl
es
pop
lods
xlat
push
dec
xchg
jmp
test
or
aaa
jo
mulb
sub
aam
sub
push
add
xchg
cmp
imul
mov
fisubs
xchg
in
cmp
rcrl
ljmp
cmp
xor
out
pop
pop
rep
fdivr
xchg
cmp
in
mov
or
dec
sub
push
jnp
movsb
lods
jecxz
pop
xchg
test
jo
mov
in
bound
jl
out
jg
xchg
aam
daa
mov
sbb
inc
aad
fidivs
push
dec
xchg
ja
mov
test
shr
into
daa
jecxz
adcl
sub
sbb
mov
jg
mov
andb
xor
adc
mov
mov
fcompl
incb
push
xor
sub
and
outsl
cmp
insl
gs
and
mov
sbb
jne
test
jl
out
add
out
push
mov
sbb
adc
sbb
dec
mov
aaa
enter
dec
fimuls
dec
xchg
aaa
iret
fcompl
aaa
ja
sbb
gs
and
mov
imul
push
add
inc
insl
mov
mov
rorl
iret
pop
dec
subb
dec
xor
mov
icebp
pop
push
pop
call
test
xor
lock
mov
jg
xchg
mov
pop
jecxz
scas
js
incb
pop
jb
pop
fwait
aad
out
and
jae
jb
sbb
mov
lea
jo
repz
jg
or
in
iret
addb
inc
dec
sbb
sahf
lret
int
dec
aaa
sbb
push
testb
xchg
jne
jge
pop
pop
out
out
iret
jnp
push
mov
pop
popf
ret
pop
movsb
xchg
outsb
mov
pop
clc
jns
xchg
adc
int3
movsl
ret
or
sbb
cmp
cmp
jbe
int3
adc
xor
cmc
dec
stos
repnz
rolb
xchg
imul
insb
dec
dec
ja
add
adc
in
addb
in
add
imul
sbb
xchg
gs
outsb
loop
divb
lret
xor
pushf
das
inc
xlat
mov
test
xlat
outsl
ss
lock
insl
mov
je
mov
xor
xlat
lea
clc
lods
mov
push
mov
mov
mov
mov
mov
xchg
and
out
in
and
jae
stos
pop
push
inc
jg
int3
pop
push
stos
aam
cwtl
sbb
fdivs
xchg
divl
sbb
jbe
and
sbb
mov
or
stos
fcompl
test
out
mov
or
cmp
add
gs
fdiv
fsubrl
clc
gs
fldl
daa
psrlq
rol
rcl
mov
cld
cld
mov
adc
sub
cld
cld
imul
mov
daa
arpl
push
add
lahf
jmp
adc
add
subb
cld
sub
or
ret
mov
rcl
adc
gs
lahf
mov
shr
adc
gs
into
mov
jmp
in
cld
push
loope
rol
sub
clc
lea
ror
dec
fdivrl
or
sbb
stc
pushl
pop
pop
gs
xor
sub
mov
push
mov
pop
add
shrl
jmp
jno
cld
inc
inc
scas
sub
jb
sti
mov
aam
mov
xchg
jo
pop
xchg
imulb
sub
loop
stc
sbb
inc
lahf
fistl
xorl
push
mov
test
lahf
sbb
pop
mov
jae
adcb
xor
je
sbb
lret
fwait
inc
enter
test
add
jne
xchg
mov
roll
insl
sbb
cmp
test
xor
jns
mov
rcl
scas
fcompl
jge
cmp
aaa
daa
arpl
inc
daa
daa
or
push
adc
inc
daa
inc
lds
pop
push
push
push
cld
ja
dec
rorl
lods
mov
ss
mov
jbe
xchg
inc
arpl
sbb
andl
sbb
mov
jns
pop
push
pop
testb
nop
fnstsw
adc
push
lods
cmc
lahf
sbb
lret
shll
add
inc
push
mov
cmp
jmp
gs
pop
cmp
or
mov
outsl
or
sahf
sti
cmc
faddl
add
xor
cmp
pop
or
mov
mov
adc
add
pop
fsubs
aas
fmull
jno
bound
jge
dec
mov
pop
adc
xchg
fsts
jae
jbe
inc
addr16
fsubs
xchg
lods
addr16
xchg
lcall
xor
dec
push
jae
nop
out
adc
scas
dec
movsb
inc
pop
ss
pop
test
test
xor
lret
mov
sub
mov
cmp
fdivr
mov
xchg
mov
pop
jmp
mov
sub
mov
iret
xchg
inc
test
pop
inc
pop
ss
or
scas
lods
sbb
or
stc
inc
push
rcrl
lods
inc
push
enter
pop
popa
inc
fisubs
dec
fstpt
cld
ret
lcall
adc
imul
xor
loop
cmp
aam
sub
push
ss
fwait
data16
pushf
in
test
sbb
mov
ret
ffree
movsb
pushf
inc
sbb
aas
add
cmpsb
adc
cmp
out
mov
mov
pop
dec
and
addr16
cmc
xchg
push
shrb
push
mov
xor
sub
clc
shlb
fcoml
cmp
jmp
outsl
std
cld
fcoml
fiaddl
dec
int3
cltd
idivb
imull
lret
mov
dec
sub
cltd
xor
int
in
fadds
sub
adc
inc
or
icebp
in
sbb
mov
int
pop
nop
cmp
push
leave
inc
xor
or
orl
push
insl
fbld
icebp
cmp
mov
sub
inc
and
mov
es
mov
adc
mov
sbb
pop
xchg
xor
dec
insb
mov
pop
xor
lods
loop
ds
push
and
push
add
test
xorb
insb
testb
hlt
inc
push
decb
mov
mov
sub
addb
in
test
sbb
add
divl
push
sbb
scas
sarb
ret
add
cmpsb
or
out
push
repz
in
add
sbb
iret
test
nop
insb
jae
test
sub
popa
xchg
sub
lret
out
not
jg
nop
fistl
add
sbb
and
js
adc
xchg
add
push
leave
pop
sbb
add
insb
loopne
shll
mov
push
jge
sub
insl
insb
and
push
adc
jno
rcrl
add
pop
xor
xchg
mov
cld
mov
dec
cld
dec
add
add
sti
mov
fsubrs
add
leave
arpl
adc
fwait
inc
jge
addl
mov
lahf
push
xor
jbe
clc
push
push
mov
dec
int3
fildl
loope
mov
dec
push
iret
testl
adcb
cmpsb
or
test
out
test
lods
xorb
pusha
jl
movsb
cmc
push
jp
inc
in
test
and
stos
xor
mov
sub
ret
add
mov
adc
pop
pop
int
or
jbe
pop
je
rcrl
jmp
repz
or
pop
lock
sub
jp
push
dec
lret
sti
mov
out
inc
mov
hlt
or
and
and
in
or
add
jnp
int
sbb
mov
push
pushf
daa
sti
pop
iret
sbb
or
mov
in
popf
or
insb
dec
dec
nop
fucompp
and
int
lods
bswap
cmc
loopne
xchg
xchg
stc
neg
mov
xchg
push
push
cmpsb
fiaddl
pusha
rcrb
jle
sbb
cmp
movsl
in
add
call
cmp
ss
jns
rorl
fucom
mov
or
mov
mov
cmp
in
pop
aaa
lret
out
jmp
inc
and
adc
lcall
cmc
lock
shrl
addb
test
sti
push
lods
roll
pop
std
inc
mov
xchg
ret
data16
scas
xor
mov
ret
dec
inc
push
das
outsl
sbb
sub
cmp
into
sbb
add
and
cltd
push
mov
and
sahf
xchg
or
sub
dec
mov
sti
call
mov
in
xchg
sti
enter
clc
out
or
insl
sub
inc
aam
iret
sub
int
inc
out
inc
ja
dec
test
ret
jge
mov
pop
out
out
cmp
dec
bound
int3
sbb
xor
or
cmp
dec
mov
sbb
cmp
adc
mov
push
and
add
and
inc
push
sub
jl
cmpsl
cmp
adcb
adc
xor
cmp
jae
test
daa
mov
add
pop
inc
sub
bound
test
mov
mov
dec
shlb
cmp
jo
mov
inc
push
lahf
je
inc
push
inc
add
pusha
dec
push
dec
aas
sbb
pop
xor
inc
cmp
and
pop
sbb
dec
push
mov
sub
add
and
push
pop
add
hlt
pop
add
xchg
pop
sbb
dec
sbb
jl
add
push
adc
sbb
sub
les
add
mov
sbb
xor
lods
cmp
aad
or
sbb
sbb
mov
dec
dec
mov
sub
cld
and
add
cwtl
dec
mov
adc
cmp
aad
mov
test
xchg
pushf
mov
cmp
dec
xchg
jo
out
mov
and
sbb
mov
xorb
movsb
or
dec
aas
add
sbb
mov
subb
insb
add
dec
lret
data16
cmp
sbb
sbb
js
pop
cld
in
aam
sbb
add
js
cmp
add
pop
and
iret
cmp
sbb
fdivrs
sbb
sbb
push
ret
fs
mov
adc
sub
sbb
mov
push
aam
popf
fs
popf
push
sbb
pop
addr16
mov
lret
fdivrs
sbb
jl
add
cwtl
sub
inc
sub
sub
jl
dec
sub
sbb
and
and
and
rolb
sbb
fsubl
lret
or
out
mov
or
call
aam
orl
insb
repnz
int
cwtl
call
inc
inc
testb
push
pop
pop
movnti
ret
lds
iret
loope
stc
sbb
pop
or
jecxz
mov
into
jnp
nop
pop
or
pop
adc
out
adc
xchg
push
arpl
sub
push
nop
lods
jne
repz
cli
in
add
mov
jno
hlt
jo
cmc
in
sbb
sub
mov
mov
sbb
lods
fmuls
out
jno
jg
pop
test
cli
ss
inc
scas
cmp
movsl
mov
std
insb
rcrb
add
icebp
xchg
dec
add
sub
smsw
cmpsl
fistps
aam
insb
fs
in
nop
stos
dec
jbe
idivb
daa
and
pop
pop
in
pop
adc
inc
nop
sti
int3
sbb
and
adc
sub
pop
cmp
pop
popa
add
jbe
sub
add
cwtl
loop
or
cmp
lret
testb
mov
pop
sub
cmpsb
fmul
lret
int
push
in
adc
cli
mov
sbbl
sbb
mov
xor
pop
stc
nop
insb
cmovp
lods
fucom
scas
add
stos
add
and
pop
or
fsub
out
adc
lret
fimull
xor
pop
invd
hlt
fs
les
fs
nop
mov
add
add
neg
jle
rcll
jp
mov
xchg
loop
stos
mov
or
push
popf
cld
or
adc
add
dec
mov
shl
das
jae
cmp
add
shl
jge
in
or
mov
or
test
jl
xor
aas
icebp
cmp
pusha
jp
mov
out
and
sbb
pop
loop
fildl
dec
out
adc
cmp
fs
loopne
cmpsb
nop
mov
aam
leave
out
add
inc
mov
inc
addb
or
inc
jmp
sub
fdivp
adcl
int3
dec
in
add
mov
add
movsl
xchg
fldenv
fcompl
jne
dec
xor
test
lahf
xor
jae
cmpl
mov
lcall
hlt
sbb
insb
sub
pop
jmp
loop
xor
mov
sbbl
sti
outsb
pop
and
lahf
push
out
inc
mov
sub
sbb
aas
inc
lahf
dec
or
aad
or
pop
test
cli
jnp
pop
das
sar
sub
dec
cmpsl
sub
dec
hlt
pushf
jecxz
pop
pop
test
mov
loope
or
mov
stos
hlt
add
test
lock
cld
hlt
insb
xor
paddq
sub
sbb
out
dec
cltd
push
inc
cmp
insb
lock
jl
lods
leave
add
out
jno
sbb
int3
insb
das
push
dec
and
inc
test
xor
xorb
push
rclb
inc
hlt
or
out
test
fbstp
jp
xor
rcll
xchg
sub
aas
and
mov
incl
dec
sbb
fimuls
or
inc
pop
pop
ret
or
stos
mov
scas
inc
sbb
addr16
int
sub
mov
xor
cmc
test
add
pop
pop
in
dec
or
xchg
roll
movsb
xor
fimuls
sub
xor
dec
or
idiv
cltd
imul
bnd
push
call
dec
inc
xchg
pop
enter
in
pop
inc
add
mov
insb
pop
in
repnz
sbb
lcall
sbb
loopne
xor
mov
loopne
ret
lahf
imul
add
dec
loopne
ret
fnsetpm(287
pop
and
sbb
xor
pushf
push
pop
mov
hlt
iret
mov
push
les
out
sysret
les
adcl
inc
sbb
pop
mov
rol
inc
popf
jle
aad
in
mov
push
test
adc
sub
bound
sbb
inc
sbb
or
dec
imul
test
mov
sub
mov
test
push
popa
hlt
popf
cwtl
or
in
xchg
mov
or
ljmp
dec
fs
add
lods
test
and
add
in
cmove
loop
inc
inc
sbb
or
push
cmp
out
sbb
repnz
add
loopne
test
jbe
or
scas
mov
call
cmp
call
pop
int
lcall
lahf
fs
and
adc
cmpsl
out
ljmp
mov
scas
add
pusha
sbb
add
add
loopne
and
add
sub
mov
lods
inc
and
and
pop
out
fwait
sub
fistps
movsb
movsl
xor
dec
sub
cmpsb
and
adc
lret
pop
mov
sbb
mov
fs
call
lods
clc
sub
roll
xchg
add
dec
div
and
cmp
loope
inc
lock
movl
hlt
push
xchg
or
shll
inc
daa
iret
inc
dec
sbb
inc
les
stc
cmp
mov
sbb
mov
add
mov
jno
adc
cmp
loop
and
push
iret
aad
inc
repnz
mov
fistps
out
subb
lcall
nop
mov
dec
and
xchg
pop
add
pop
dec
xchg
outsb
outsb
xchg
sub
outsl
xor
fs
ror
xchg
inc
test
in
push
and
push
sub
js
les
pushf
xchg
testb
pop
and
jge
pop
dec
hlt
cs
mov
jno
add
sbb
loopne
inc
sub
or
and
ds
inc
jp
aas
sbb
sbb
mov
imul
push
call
cmp
cmp
ret
mov
push
in
push
pop
cli
fldenv
xchg
ss
sbb
outsb
cmp
lret
dec
add
ss
stos
jae
dec
push
test
insb
in
mov
roll
testl
dec
pop
iret
roll
push
pop
repnz
ja
jo
stos
fyl2xp1
clc
hlt
xor
outsl
or
sbbl
mulb
test
or
inc
and
cmp
fdivr
ficoml
test
fs
adc
pushf
inc
sbb
out
mov
pop
dec
fdivp
cmp
or
dec
fs
repnz
cld
sbb
mov
pop
xchg
fstp
mov
sbb
nop
dec
fcoml
lds
mov
outsl
les
in
jnp
fdiv
sbb
fstps
sub
hlt
mov
sub
js
push
pushf
inc
mov
dec
scas
test
and
mov
aam
roll
mov
bound
ret
fcmovbe
push
ffree
and
data16
jae
push
ss
pop
jl
or
test
ljmp
add
out
and
sbb
xor
pop
sbb
pop
imul
repz
pop
in
dec
xchg
testl
pusha
jmp
add
inc
scas
cltd
add
sub
jbe
mov
adc
sarb
push
lret
pop
pop
fwait
pop
stos
in
lock
sub
aam
sbb
rclb
iret
int3
mov
sbb
xor
hlt
add
test
shll
and
enter
nop
inc
mov
popf
inc
int3
test
fs
sbb
popa
cmp
lods
stc
mov
inc
out
inc
sti
push
cmp
mov
sub
fcmove
cmp
pushf
mov
sbb
cmp
sahf
mov
mov
ja
add
mov
dec
sti
out
pop
sub
cmpsl
adc
cmp
jae
mov
mov
xchg
push
add
cmp
or
out
out
fists
mov
mov
aaa
mov
outsl
cmpsb
xor
xchg
mulps
int3
or
xchg
mov
cld
lahf
arpl
daa
daa
jmp
cld
lahf
adc
mov
pop
or
sbb
cld
push
arpl
cmp
cld
jne
dec
cld
ja
pop
rorl
ljmp
mov
or
ret
cmc
shr
cld
cld
xchg
dec
sbb
fstps
jle
shll
push
add
stos
lock
sub
test
addr16
faddp
cmc
inc
loop
or
lret
mov
mov
mov
out
sbbb
in
sahf
subb
adc
cli
dec
jle
pushf
mov
xor
hlt
cmp
pop
sbb
jge
lods
xchg
add
push
repnz
mov
sti
add
gs
arpl
loopne
mov
gs
fmull
clc
outsb
testb
lds
daa
add
mov
daa
xchg
xchg
xchg
lahf
les
or
pop
add
or
cmp
cld
cld
sti
jmp
mov
cld
jmp
or
add
stos
inc
loop
testb
sbb
jge
insl
insb
add
mov
jmp
xchg
lret
mov
loope
xchg
mov
cmp
mov
cld
lret
cmp
or
push
sub
bound
leave
xchg
cmp
outsl
mov
int3
pop
mov
cmp
xchg
or
mov
mov
push
lcall
popf
stc
loop
xor
mov
cmpb
fsts
mov
insb
or
xchg
repz
cld
ret
clc
add
cmp
sti
cmpl
cmp
add
arpl
add
inc
daa
sbb
imul
push
sbb
add
insb
mov
mov
lods
inc
push
leave
pop
inc
mov
xor
cwtl
jno
sarl
sub
sub
std
mov
and
flds
repz
fmulp
in
mov
rcrb
aam
leave
pop
push
mov
mov
sbb
arpl
xchg
bound
loop
dec
add
push
mov
clc
cltd
and
and
clc
and
test
pop
aaa
leave
dec
out
lret
fisttpl
mov
outsl
sbb
mov
mov
adc
insb
enter
jmp
cmp
dec
or
dec
push
sahf
loope
gs
or
and
test
mov
xchg
jo
add
xchg
repz
lret
test
mov
dec
mov
fdivr
push
loope
lds
repz
stos
mov
push
mov
pop
es
dec
pop
add
mov
push
gs
sub
lahf
in
dec
fmuls
int3
sahf
imul
and
sti
lahf
lahf
ret
imul
mov
test
push
cld
aaa
daa
push
les
or
addr16
push
ljmp
imul
mov
cltd
push
mov
mov
push
in
or
jns
into
mov
insl
lret
jl
mov
subl
mov
mov
movsl
mov
xor
cmp
lcall
ds
xchg
jae
mov
push
leave
lret
push
xchg
lahf
out
jecxz
stc
xchg
mov
pop
popf
loop
into
int
jp
and
sti
std
aad
jns
loope
fcoml
sbb
or
mov
sti
gs
out
sti
jmp
sbb
add
pusha
adc
std
pmuludq
sub
cmpsl
push
jno
pop
jb
xor
inc
mov
jecxz
push
test
jmp
adc
mov
xchg
lods
mov
inc
adc
gs
fildl
adc
mov
lret
cmp
addr16
and
mov
pop
cmpsl
mov
push
les
test
cmp
test
mov
sbb
arpl
mov
inc
into
dec
push
fcoml
mov
add
ja
pop
mov
pop
mov
sub
add
cld
cld
or
rol
jmp
mov
rorl
mov
push
rorb
unpckhps
int
and
ret
loope
jbe
testb
pusha
movsl
loope
mov
mov
and
adc
lea
ljmp
mov
lods
mov
pop
insb
adc
fs
mov
inc
call
inc
and
mov
dec
inc
mov
dec
fcmovnb
adc
sbb
inc
cmc
std
pop
inc
fcoml
dec
or
cld
sub
inc
xlat
add
les
out
les
push
jbe
out
cmpsb
scas
testb
lret
ja
fsubrp
sbb
test
idivl
inc
or
or
js
mov
sbb
cmpsl
pop
and
sbb
div
outsb
dec
inc
jbe
or
jecxz
and
call
aam
dec
movsb
cmp
mov
dec
pop
int3
leave
pop
fstl
push
or
testb
clc
adc
mov
adc
sar
lahf
shrl
into
nop
loope
sbb
faddl
cmp
cmpsl
arpl
repz
fidivrs
mov
daa
xchg
mov
or
mov
dec
sbb
ja
imul
fdiv
das
outsl
mov
frstor
push
or
test
xchg
test
enter
out
das
inc
jno
addl
sahf
dec
ljmp
push
cs
daa
push
mov
jge
push
hlt
lcall
cmp
inc
insb
jae
fstpl
mov
outsb
and
jo
mov
mov
sarb
lods
ret
push
push
adc
adc
mov
popf
add
in
shrb
clc
data16
shll
mov
lahf
lods
push
and
mov
push
dec
rolb
and
xchg
mov
push
test
sbb
dec
aam
or
adc
adc
mov
sub
cmc
mov
cmpl
xor
jecxz
inc
loope
adc
pop
add
decb
push
out
movsb
mov
mov
pop
jge
loope
mov
test
fwait
cmpsb
cmp
cld
adc
jns
sbb
cmp
cmp
ret
out
iret
mov
fxtract
idivl
ds
push
cmc
pop
out
push
lret
jb
ret
mov
pop
mov
insb
mov
mov
xchg
decb
mov
mov
icebp
fcoml
movsl
arpl
add
sbb
incb
mov
rcrl
int3
mov
lahf
mov
adc
xor
push
jecxz
push
jle
pop
out
jnp
dec
fbld
clc
xlat
push
push
les
mov
dec
lcall
cwtl
shlb
jmp
inc
lds
out
xchg
sbb
fwait
push
cwtl
mov
sarl
push
rorl
pop
daa
or
lahf
lahf
imul
push
mov
das
or
xchg
adc
add
rolb
jmp
clc
lahf
gs
sub
or
les
fsubr
cld
in
cld
xchg
ljmp
rcrb
cld
mov
xorb
pushf
sub
ljmp
imul
dec
test
fstps
ja
cld
push
scas
test
scas
adc
or
pop
push
mov
adc
in
test
mov
loope
out
inc
daa
mov
roll
fwait
imul
mov
xchg
add
sahf
mov
mov
clc
mov
sbb
fnsave
sbb
lret
repz
scas
sbb
cs
or
jae
add
stos
incl
lcall
mov
pop
fcoml
inc
or
adc
fcompl
lahf
sbb
and
stos
decl
fldz
es
in
cmpsb
mov
mov
push
dec
call
pop
cmp
mov
add
stos
jb
out
xor
fildll
cltd
push
mov
sbb
mov
jecxz
movsl
das
dec
iret
cmp
subb
xor
xor
mov
cmp
push
lock
fs
sbb
out
inc
daa
push
imul
jg
sub
pop
imul
aaa
popa
push
adcl
mov
or
bound
fiaddl
sub
or
out
xlat
mov
ljmp
xor
test
or
xchg
in
or
test
shr
pop
or
jns
lahf
imul
je
or
movsb
add
push
cmp
mov
imul
mov
adc
in
xchg
cmp
lret
test
xchg
adc
sub
mov
push
cmp
clc
adcl
pop
pop
lret
adc
jp
fmull
adc
inc
lret
popa
stc
shl
dec
out
mov
mov
outsl
fldenv
aas
sub
inc
mov
and
push
cmp
xor
shll
add
imul
adc
inc
rcrb
lret
xchg
and
lcall
loop
popl
dec
push
scas
pop
mov
push
fcoml
sub
lahf
mov
sbbl
lds
daa
push
cld
ja
and
daa
add
lods
push
lahf
mov
daa
mov
adc
and
mov
gs
repz
ljmp
inc
daa
pop
das
imul
lahf
lds
daa
xchg
cld
aaa
daa
mov
or
push
cmp
shr
fdiv
cld
cld
or
or
xchg
mov
inc
arpl
mov
push
xchg
into
outsb
or
dec
pushf
and
pop
das
xchg
add
jnp
or
xchg
les
and
xchg
aam
dec
daa
je
mov
fnsave
clc
cmc
stos
mov
test
andb
subl
add
repz
aaa
adc
into
pop
in
ret
lahf
push
fcoml
inc
and
and
imul
es
push
xlat
sub
hlt
sahf
or
or
xor
and
ficoms
or
dec
jmp
in
test
sub
cmp
addl
mov
test
in
in
test
fcmovu
insl
inc
shr
lock
sub
jle
aad
js
in
hlt
shlb
mov
loop
pop
mov
das
mov
data16
lods
mov
xlat
jo
xchg
xor
push
out
xchg
test
testl
in
and
mov
cmp
rcrl
cmp
sarl
mov
inc
repnz
xchg
dec
mov
ret
xor
mov
xchg
xor
cmp
inc
ljmp
xor
inc
and
paddusw
inc
inc
jb
inc
arpl
jle
fwait
cmpsl
scas
dec
pop
int
movhlps
mov
pusha
je
not
add
cmpl
sbb
pop
sarb
inc
cmpsl
shll
leave
popa
mov
dec
roll
push
pop
cmpsb
mov
loope
lock
js
pop
xchg
xchg
rclb
iret
jns
sub
xchg
fcoml
cmc
mov
mov
adc
enter
jge
push
hlt
push
lock
fdivrl
sbb
into
cmp
and
mov
or
loopne
add
push
jbe
stos
and
xor
jle
jae
lods
test
cmp
push
out
addr16
pop
out
sub
mov
mov
stos
es
and
pop
aas
xor
jle
mov
xchg
or
pop
iret
dec
xchg
lds
push
pushf
clc
push
ja
cmp
sub
lods
xchg
out
and
je
xchg
sub
incb
mov
push
filds
fstps
movsl
es
fcoml
loopne
inc
daa
or
xchg
inc
daa
pop
sub
shlb
add
xchg
cmpsb
sbbl
xor
pop
add
int
cmpsb
or
clc
xor
pop
sbb
outsl
js
cmpsb
ja
push
mov
jl
ret
push
mov
leave
nop
xchg
or
jge
sub
pop
mov
lret
imul
jmp
inc
stos
fcoml
test
sbb
shlb
test
pop
aaa
pop
jecxz
mov
pop
out
mov
inc
fldl
adc
mov
xchg
das
xor
adc
or
js
js
jle
cltd
xchg
mov
xchg
sbb
cmpsl
out
or
sbb
lods
out
jns
hlt
push
jg
mov
add
dec
stc
out
mov
cmc
out
testb
and
jnp
push
loopne
xchg
sub
insb
daa
mov
lods
push
adc
cmc
adc
cld
cld
mov
sub
xchg
leave
cld
cld
arpl
sub
cmp
add
jp
add
arpl
daa
add
fsubr
arpl
xchg
ret
ret
iret
add
clc
gs
jecxz
rol
jmp
add
add
sti
mov
idiv
xchg
lahf
imul
daa
lahf
mov
xchg
cld
cld
arpl
cld
cld
xchg
add
push
daa
sbbb
lock
bound
clc
pop
adc
test
pop
loope
jns
in
mov
xchg
pop
xor
add
xchg
std
jae
shr
dec
mov
sub
jl
and
repnz
and
int
and
fs
mov
jnp
data16
sahf
popa
sbb
mov
dec
cmp
ja
xchg
xlat
mov
adc
fcoml
in
and
sti
push
je
out
in
sbb
leave
mov
jmp
or
inc
pushf
subb
fs
sti
jg
inc
push
loopne
jmp
stos
pop
in
les
push
cmp
jbe
sbb
dec
push
repz
scas
push
les
add
loopne,pt
paddd
and
push
pop
dec
push
pop
andb
cli
adc
inc
jecxz
jmp
cmp
inc
push
pop
nop
test
inc
dec
loopne
dec
dec
sbb
and
mov
test
or
icebp
pop
aad
shrb
aas
aaa
je
push
pop
andb
cli
mov
ja
sbb
jl
sti
mov
iret
out
stos
and
test
jno
mov
inc
sbb
fdivr
lods
loope
icebp
inc
push
xchg
jmp
pop
mov
aad
sub
jmp
js
push
mov
getsec
dec
push
fistl
mov
pop
fwait
cmc
inc
or
out
jb
pop
mov
xor
and
fcos
cmp
sbb
sub
movsb
addr16
sub
cs
inc
push
pop
ret
push
jecxz
mov
daa
ljmp
or
add
mulb
mov
mov
and
cmc
dec
std
cld
and
or
add
and
cld
cli
cli
ret
lret
add
mov
add
cmp
cmc
sar
ljmp
imul
push
in
cmp
add
push
mov
mov
shlb
aam
imul
call
xchg
fmull
push
iret
or
lret
cmc
lods
sti
das
jg
out
and
add
stos
add
lods
hlt
mov
add
jecxz
xor
mov
jp
fldt
mov
cmc
inc
fnsave
out
fcoml
jne
or
clc
mov
das
or
repnz
xor
js
cld
cld
pop
or
sbb
mov
jmp
sahf
cld
cld
fildl
cs
add
mov
out
lds
xor
sub
add
pop
out
xchg
pop
in
mov
dec
in
cmp
mov
xor
xchg
jnp
cmpsl
xlat
adc
jecxz
mov
jbe
push
dec
test
dec
bound
mov
pop
jne
repz
xor
mov
pusha
mov
fidivl
mov
out
fcoml
sub
fdiv
out
iret
cmpsb
and
int
lea
ss
shlb
int3
lea
or
push
aam
jo
bound
adc
pop
adc
xor
sbb
shll
adcl
mov
nop
adc
rcr
dec
and
sub
ja
xchg
xor
sbb
rcl
jnp
dec
jp
mov
and
insb
cmp
adc
pop
in
add
sarb
jp
mov
jno
xchg
shlb
aam
cmp
test
mov
inc
test
fildl
fwait
mov
mov
movl
or
jnp
jns
xor
gs
arpl
stos
test
loope,pn
testb
imul
sub
dec
or
rorl
mov
test
std
mov
push
fisttpl
push
xchg
xchg
or
clc
jle
mov
rcrb
xor
decl
and
in
dec
add
jne
divl
mov
mov
negb
fwait
xlat
mov
das
push
sar
cmp
pop
inc
pop
jbe
in
sub
dec
or
mov
and
push
je
xchg
push
fs
inc
xor
or
mov
cmp
in
pcmpgtb
push
sbb
xor
cmpsb
out
jmp
mov
cmpsb
aam
adc
dec
jno
mov
sbb
and
push
ds
sahf
and
push
jno,pt
out
jecxz
jecxz
push
in
lds
ret
cli
add
xor
xchg
jecxz
sub
lods
scas
std
cwtl
push
mov
and
push
push
push
or
out
jle
pushf
add
imul
sub
jnp
int
lret
fs
lret
mov
je
outsb
xor
xchg
push
jl
push
cmp
pop
cmc
mov
push
nop
mov
gs
mov
push
das
roll
fstpt
xchg
cmp
xor
cmp
cmpb
xor
hlt
adc
sub
pop
jecxz
or
int
sub
sub
pop
or
repz
sub
jl
sahf
push
jle
loopne
mov
push
lcall
add
jmp
xor
jp
inc
lods
loop
jnp
in
xor
fwait
jmp
jle
pushf
adc
xchg
sub
add
push
and
out
imul
mov
jns
std
push
enter
xor
sub
cltd
mov
mov
out
stos
mov
in
int3
cs
stc
xchg
int3
xor
dec
ss
dec
or
in
mov
add
fistl
shll
mov
je
jl
sub
sub
arpl
out
add
cmp
pop
cltd
xlat
fistpll
lods
xor
jge
mov
push
dec
and
fcoml
addr16
sub
pop
pop
sub
push
je
pop
jne
xchg
and
testb
gs
in
add
scas
imul
je
xchg
add
cmc
fsubr
pop
int3
jne
cmp
gs
push
sub
xor
fs
jns
or
shl
push
mov
inc
ret
mov
imul
into
or
into
push
sbb
iret
or
nop
adc
pop
adc
jo
mov
popf
in
or
adc
sbb
addr16
rorl
fidivl
test
cmpsl
push
pop
mov
cld
ss
lods
dec
mov
popa
stc
xchg
sbbl
sbb
xor
dec
dec
lahf
outsb
sub
xchg
repnz
jns
clc
test
mov
inc
testb
sub
imul
idiv
cmpsl
and
pop
sub
xor
lock
sub
sbb
xchg
pop
xorb
je
cmp
jg
or
fsubrl
or
loope
xor
insl
mov
loopne
add
addr16
xchg
inc
int
in
das
arpl
pop
dec
jmp
shrb
hlt
adcl
iret
je
xor
push
ja
cmpsl
push
push
mov
sub
xor
mov
mov
inc
daa
ror
mov
rol
lcall
mov
cmp
je
and
xor
cmp
rorb
js
add
loopne,pt
wrmsr
lahf
out
hlt
mov
pop
or
jns
sbb
popa
loope
lcall
jge
pop
cmp
lcall
and
or
pop
fbstp
scas
adc
push
or
fsubs
cmp
int3
cs
outsb
shll
or
ljmp
jp
mov
test
lock
jmp
xchg
cltd
and
call
jmp
xlat
mov
pop
dec
mov
or
push
cs
mov
std
lcall
adc
mov
cmp
adc
subl
mov
sbb
pop
decb
aaa
jmp
stos
mov
int
adc
in
pop
dec
inc
or
in
pop
and
push
mov
dec
dec
cli
dec
jg
adc
inc
mov
lock
dec
loopne
sahf
push
outsl
daa
pushw
dec
mov
in
enter
push
pop
outsb
rcrb
ss
xor
cmpsb
psubsw
jnp
mov
sbb
dec
int
mov
dec
xor
aaa
data16
xchg
test
mov
cmp
xor
fcmovnu
xlat
rdtsc
fnstsw
pop
push
lahf
ss
xchg
push
mov
leave
test
mov
jmp
and
push
cmpsb
mov
cmovge
push
mov
cmp
test
mov
int
testb
fdiv
aas
cmpsl
fbld
in
push
mov
adc
sub
loop
mov
jne
sahf
das
jg
xchg
xchg
and
int3
and
bound
pop
sub
sub
insl
fwait
stc
shr
inc
lret
jno
dec
xor
push
loopne
mov
int3
cmp
lods
add
push
pop
cmpsb
test
sub
pop
add
rep
into
push
aam
or
or
jne
je
es
push
pushl
mov
stos
ret
or
or
mov
int3
fbld
rclb
push
int
ror
out
test
int3
inc
cld
or
cmp
push
imul
shr
fcomps
fcoml
cmp
push
std
mov
mov
sub
in
add
mov
das
dec
scas
pop
loopne
in
repnz
rcll
mov
lret
mov
jmp
push
gs
push
jnp
shrb
xor
in
aaa
fcomps
inc
fistpll
and
cli
rol
js
mov
lods
push
xchg
sub
mov
orb
dec
mov
hlt
aaa
es
lds
sbb
in
push
jbe
or
aam
or
mov
mov
roll
fists
cmp
push
insl
and
fcom
inc
or
jnp
loope
sbb
fcoms
in
daa
push
js
dec
and
sbb
testb
and
fld
dec
sub
fnstsw
dec
arpl
dec
or
push
sahf
in
mov
out
push
xchg
ret
inc
xor
sub
or
adc
cmp
sbb
inc
adc
xchg
int3
test
stos
add
mov
das
mov
sbb
mov
mov
or
mov
aaa
add
jmp
ja
stos
adc
leave
mov
dec
cmp
mov
mov
ja
hlt
insl
add
xor
push
xchg
dec
sub
cmp
dec
mov
xchg
scas
jmp
ss
stos
les
adcb
aad
xor
in
ret
xor
or
enter
ret
xchg
adc
out
cmp
decl
jl
lret
sub
xor
lock
ja
mov
repnz
mov
lods
pop
sbb
fpatan
and
lock
and
sub
lret
loop
push
outsl
hlt
sbb
dec
xor
adcb
mov
jno
jl
sbbb
les
daa
scas
lcall
fs
mov
and
jg
or
and
and
mov
push
cwtl
add
mov
lods
mov
es
ror
add
jbe
je
cmp
jg,pn
lock
cmc
cmp
add
and
xchg
push
aad
jns
fs
jno
xchg
push
je
mov
inc
pop
jo
jo
mov
cmp
jmp
dec
rclb
mov
jnp
mov
cmpb
imul
pop
lods
test
and
sbb
fstpt
aad
icebp
pop
aam
lret
pop
xchg
loope
aad
idivl
xchg
pop
xchg
dec
pop
data16
fsubrs
pusha
push
inc
inc
cmpsl
dec
test
pop
push
rcrb
and
cmp
cmp
in
aaa
mov
nop
adc
mov
pushf
xlat
movsl
push
les
insb
or
mov
fcoml
mov
mov
sbb
xor
cld
jmp
jnp
cld
jmp
jge
cld
aas
mov
outsb
sbb
out
call
fwait
dec
xor
loop
or
push
cld
jo
sub
loop
enter
mov
ret
sub
mov
sub
pop
aaa
scas
sbb
dec
mov
fstpt
call
xchg
or
or
adc
pop
paddd
mov
or
sub
sahf
xchg
dec
and
mov
or
dec
adc
push
aad
in
dec
mov
daa
jmp
mov
cld
lahf
lds
daa
out
mov
push
les
daa
mov
pop
daa
mov
pop
ljmp
fldt
lods
pop
mov
inc
cwtl
add
daa
cwtl
jg
int3
fxtract
ss
loopne
xchg
out
stos
mov
fisubs
cmpsl
mov
es
aam
sub
cld
into
test
xchg
stos
int3
xchg
cld
mov
test
push
xlat
scas
in
lods
push
mov
pop
or
ja
std
cld
std
lret
rol
sub
imulb
jecxz
loopne
int3
cli
ljmp
cmp
idiv
sbb
mov
in
xchg
pop
sbb
xor
fisubs
sti
loopne
mov
test
sahf
shlb
inc
popf
fadds
or
call
inc
adc
nop
gs
xchg
aam
adc
xchg
mov
jb
jmp
cmp
cmp
fs
lea
xor
lods
aad
ret
xchg
aas
xlat
cmp
lret
xor
inc
fldenv
dec
dec
das
add
cmp
lahf
mov
daa
mov
push
ljmp
and
mov
ja
inc
sub
xchg
push
xor
push
and
jno
cmpsb
and
dec
scas
insb
insl
or
mov
push
or
add
push
leave
mov
push
mov
mov
loope
xor
aaa
inc
std
xchg
jecxz
outsl
fnsave
inc
sbb
ret
cmp
jmp
dec
loop
test
out
dec
xchg
ja
jmp
xchg
out
xsave
and
shrb
mov
sub
hlt
pop
dec
stc
fiadds
cvtps2pi
adc
addb
lcall
ljmp
jge
adc
jl
repnz
xor
sub
adcb
ret
or
xlat
fstps
stos
int3
mov
fnstsw
jo
mov
gs
rolb
pop
mov
jg
xchg
out
push
or
aam
bound
xchg
or
add
cmpsb
aaa
pop
lock
movsb
in
aaa
daa
arpl
xor
inc
daa
daa
jmp
ja
cld
mov
pop
mov
lahf
mov
pop
ljmp
xchg
das
xor
pop
daa
cmc
add
leave
cli
aas
or
sbb
mov
jb
outsb
fwait
inc
outsl
mov
cwtl
push
cmp
mov
push
dec
cmp
pop
js
pop
inc
popa
sub
imul
jle
push
cmpsb
cld
cmp
inc
xchg
push
rclb
jnp
mov
pop
mov
ds
add
jmp
outsl
andl
stos
ret
cmp
push
mov
push
push
mov
repz
sti
je
mov
ret
lds
daa
mov
rol
cld
mov
or
mov
cld
push
mov
pop
or
jo
cld
cld
lahf
cmp
jmp
cltd
cld
cld
gs
mov
testb
sti
or
cmovl
gs
sti
mov
imul
test
cld
cld
mov
add
add
or
add
add
add
pop
add
add
add
and
add
add
add
push
add
add
add
push
add
push
push
add
lods
push
add
push
add
clc
pop
add
add
add
int3
push
or
sub
out
or
loopne
mov
adc
or
es
or
shll
call
or
cltd
in
and
xchg
push
push
lods
xor
cmpsl
or
rorb
xchg
inc
or
mov
cmpsb
push
pop
push
nop
int3
lret
jbe
mov
andb
sti
xor
outsl
mov
cmc
fimuls
mov
or
shll
sbb
out
sub
rsqrtps
loopne
mov
rclb
xor
movsl
daa
mov
mov
scas
orb
xchg
in
addr16
or
cmp
jge
daa
bound
jbe
sbb
stos
ret
or
and
bound
jp
stc
push
lock
or
cmpsb
aaa
jmp
jnp
jl
or
pop
inc
jg
int3
fsubrs
and
ficoms
ds
out
add
inc
xchg
push
test
hlt
inc
sbb
jae
in
roll
and
or
or
cmp
test
jl
aam
shlb
in
or
mov
pop
xor
xor
pop
and
decl
stos
mov
dec
mov
cmp
ljmp
psubd
dec
les
xchg
sub
out
lods
add
stc
or
imul
lret
outsb
pop
prefetch
nopl
mov
sbb
andps
cmp
add
adc
cmp
dec
adc
ret
adc
cmp
and
push
push
popa
insl
iret
js
fsts
int3
scas
inc
fsubrl
mov
movsl
adc
lods
daa
aas
adc
sbb
popa
or
pop
icebp
aas
or
or
pop
xchg
xor
jge
int3
jp
outsb
xor
xor
clc
aad
sbb
outsb
data16
mov
adc
jl
std
out
jnp
cmpsl
setg
or
sbb
das
xchg
sbb
and
pop
or
sub
enter
outsl
test
pushf
push
scas
add
outsl
ret
imul
outsl
aaa
jp
push
adc
js
add
enter
adc
pop
or
add
pop
outsb
gs
imul
jl
nop
pop
mov
pop
insl
jge
sub
jb
mov
pop
sbb
inc
dec
push
pop
inc
inc
pop
dec
add
dec
pop
pop
imul
mov
add
ret
xor
pop
cmc
inc
and
inc
fnstcw
add
push
sbb
push
test
sbb
mov
cld
flds
add
or
insl
lret
add
add
mov
or
adc
add
push
add
or
sbb
adc
or
adc
sub
or
sub
and
or
and
cmp
or
cmp
xor
or
xor
dec
dec
or
dec
dec
dec
ss
inc
inc
or
inc
inc
inc
dec
inc
pop
pop
or
pop
pop
pop
inc
pop
push
push
or
push
push
push
pop
push
insb
outsl
or
insl
push
addr16
bound
arpl
xor
sub
jnp
data16
ja
jne
jae
jle
push
push
and
loop
lcall
cmp
jno
lock
or
inc
pop
sbb
mov
inc
or
movd
mov
int3
sub
pop
js
mov
sqrtps
or
repz
or
or
mov
sbb
xchg
das
jmp
xor
or
sbb
dec
dec
mov
mov
test
orl
or
fwait
xchg
or
xchg
sahf
xchg
lods
scas
stos
lods
or
stos
xchg
test
or
mov
mov
cmpsb
mov
or
mov
mov
iret
lret
enter
mov
into
rcr
fcmovu
or
fcmovnb
xlat
rcl
or
rcr
shr
out
ljmp
in
loop
or
jecxz
loope
cli
std
or
sti
out
hlt
div
cmc
push
lock
icebp
sbb
das
clc
xchg
stos
das
out
or
inc
mov
sub
inc
mov
test
or
cmp
movsb
sahf
jo
cld
mov
add
jnp
sub
imul
popa
sub
pop
inc
inc
pop
in
inc
sbb
add
stos
inc
dec
dec
push
in
dec
adc
dec
push
adc
lret
es
dec
or
outsl
jl
pusha
addr16
rcll
fs
jge
arpl
jno
into
aas
js
ds
jae
movsb
into
mov
sti
daa
mov
pop
ja
jno
insl
mov
pusha
iret
add
mov
xor
je
fildll
cmp
ret
sub
cmp
pop
arpl
add
xchg
cmpsl
sub
push
lods
jg
and
mov
scas
roll
int
pop
push
into
arpl
leave
addr16
cmp
push
sbbb
pusha
js
add
push
addb
cmp
and
lahf
popf
imul
das
call
mov
fs
pop
lods
xor
loopne
imul
rcr
dec
int
adc
ja
lods
arpl
sbb
sub
and
xor
stc
and
daa
xchg
lods
daa
enter
movsb
outsl
test
dec
cmp
push
repz
adc
cwtl
inc
outsl
addr16
sbb
sub
pop
xchg
or
jl
dec
mov
and
mov
push
aas
fstpt
aas
ds
lcall
jl
adc
cs
dec
nop
nop
scas
cmp
push
xor
cmc
mov
lea
mov
call
mov
xor
mov
add
xor
dec
cmp
jl
sbb
cmp
scas
inc
ret
and
cmp
fldl
lahf
mov
lods
mov
in
xor
aas
aaa
mov
mov
loopne
das
das
mov
xor
mov
adc
cmp
xchg
jns
loopne
int3
adc
testb
cmp
adc
cmp
movsb
mov
mov
std
popf
and
insl
ss
xchg
jae
es
mov
jae
inc
sbb
xchg
xor
lahf
dec
jns
lret
std
fiadds
mov
add
ss
mov
jnp
and
test
lret
js
mov
add
and
push
ss
scas
cmpsb
push
sahf
and
mov
cmp
sbb
mov
sub
push
add
or
xor
pop
imul
dec
jnp
es
ds
cmpb
push
pop
test
pop
xor
dec
outsb
les
jp
das
inc
sub
push
in
cmp
movntq
and
ss
jge
xor
add
sarb
scas
scas
jnp
add
inc
dec
fcom
add
dec
clc
dec
xchg
movsl
fdivr
adc
arpl
add
out
sarb
or
push
test
xchg
add
sbb
aaa
xchg
sub
call
pushf
lahf
cli
lcall
xor
outsb
jge
subb
sub
in
pop
ja
or
cmc
lahf
js
pop
insb
js
lahf
sbb
es
inc
mov
add
sbb
adc
scas
cmc
and
dec
sub
sbb
pop
add
dec
mov
lock
fsubrl
sub
imul
sub
push
inc
jmp
add
push
or
inc
inc
dec
dec
cwtl
jg
dec
dec
dec
or
adc
inc
dec
outsl
iret
outsl
push
mov
daa
push
jge
popf
pop
adc
adc
pop
jnp
add
dec
pop
pop
pop
jnp
test
sub
mov
and
sub
out
xchg
addr16
stos
and
mov
gs
mov
inc
imul
sahf
push
imul
cwtl
ss
js
cmp
jbe
dec
jae
out
push
adc
mov
les
jl
cmp
and
fs
mov
jb
pop
imul
pushf
jp
cmc
dec
mov
jmp
pusha
pop
sbb
lds
push
pushf
jno
sahf
fdivl
insl
bound
sub
adc
dec
sbb
daa
fcompl
fs
adc
daa
dec
mov
data16
and
add
xchg
punpckldq
in
enter
sbb
jl
stos
cmp
cmp
clc
mov
pop
daa
add
das
sub
popf
mov
divl
fstps
adc
stos
jo
dec
push
mov
mov
lret
sub
sbb
pop
call
ret
sbb
mov
sub
jg
pop
pop
aad
sub
in
pusha
xor
jae
jo
js
pusha
imul
inc
out
data16
sbb
sbb
inc
xchg
cltd
pop
and
je
fmull
es
pop
inc
outsb
lock
mov
scas
sbb
pop
jge
sbb
test
rorb
ljmp
jp
ljmp
jp
arpl
fistps
add
iret
xchg
imul
js
dec
mov
rcrb
into
pop
jmp
ret
sarb
sbb
mov
mov
cmp
xchg
repz
add
gs
les
fwait
insb
sub
add
push
mov
sti
push
add
outsb
repz
xchg
xor
mov
stos
pop
or
test
inc
inc
mov
rcll
je
fisttpl
add
movsl
pusha
sbb
div
inc
and
and
out
fidivrs
jb
push
popf
js
push
loopne
push
xchg
or
jmp
dec
dec
nop
cwtl
icebp
clc
jp
sub
test
xchg
nopl
pop
dec
fdivrl
add
aaa
dec
add
xor
cmp
sbb
mov
sub
and
add
add
xchg
dec
rcrb
add
hlt
xchg
sub
sub
test
pop
inc
xor
and
imul
push
add
push
add
inc
das
inc
cwtl
push
test
fwait
int3
sbb
mov
or
cltd
sub
add
pop
ss
fwait
pushf
faddl
mov
mov
nop
pop
dec
dec
mov
inc
add
pop
push
and
sarl
xor
jmp
cmp
popa
pop
cld
sub
sbb
pop
dec
arpl
outsb
fwait
pop
fadds
sub
lods
pop
mov
add
fmull
add
ss
push
jb
in
and
les
cmp
add
inc
in
add
fsubl
fwait
test
sbb
add
sbb
mov
pop
add
and
sub
es
push
rcr
sbb
xorl
jl
add
sbb
mov
les
pop
add
push
lods
dec
adc
xor
lahf
cmp
mov
pop
inc
inc
lods
adc
sbb
cld
daa
sbb
add
lret
lock
sub
sub
int3
in
pushf
inc
iret
aam
pop
push
dec
xchg
adc
pop
mov
sbb
adc
or
sbbb
movsb
js
mov
or
es
xor
cmp
adc
pop
iret
dec
lcall
push
pop
insl
mov
sub
and
es
cmp
dec
mov
add
mov
dec
test
lcall
push
leave
inc
jnp
jecxz
imul
xor
inc
mov
push
mov
dec
icebp
loope
cli
jl
adc
dec
dec
add
sub
jp
inc
ja
sbb
xchg
mov
loop
cmpsb
dec
inc
insb
les
int
xor
xor
shll
mov
xchg
dec
jnp
jl
ja
sub
in
movsl
mov
fldt
ss
push
mov
ja
hlt
arpl
bound
in
inc
dec
lahf
sub
stos
ret
shrl
popf
loop
and
popf
sti
and
in
fdivs
push
pop
fdiv
push
sbb
sbb
lahf
or
push
push
push
dec
pushf
jge
add
pushf
cs
push
insb
test
sti
sub
jns
imul
fdivr
fcomps
sarb
sbb
mov
inc
adc
imul
mov
inc
lea
inc
adc
push
inc
adc
inc
insb
push
mov
jmp
aam
pop
xor
fmuls
mov
mov
mov
pop
cld
mov
mov
icebp
popf
jge
adc
imul
sbb
dec
dec
mov
insb
fwait
push
cmpsl
fisttpll
inc
mov
in
daa
popa
push
dec
mov
push
rorb
sbb
add
add
jo
push
xchg
leave
xor
ds
add
pop
push
and
out
inc
xor
add
pop
jle
and
and
pop
xor
and
and
sbb
sbb
std
jecxz
adc
dec
dec
mov
test
jge
out
subb
test
or
mov
fidivrs
pop
jp
inc
mov
sbb
cmp
xchg
test
loope
and
adc
lea
mov
jl
pop
out
add
arpl
jle
inc
js
and
sbb
stos
and
adc
mov
scas
dec
cld
call
cvttps2pi
nop
or
sub
sbb
inc
mov
pop
mov
mov
xchg
loopne
nop
rcrb
pop
cwtl
xchg
mov
je
xchg
sub
lahf
insb
sub
push
pop
xchg
sub
lahf
dec
sub
dec
xor
xchg
and
sub
sbb
lods
rcrb
les
movsb
inc
test
and
test
xchg
sub
insb
lahf
pop
sub
dec
cmp
lock
pop
loopne
fmull
test
add
xchg
add
lahf
movsb
sub
pop
cmp
xchg
aaa
adc
xor
icebp
inc
jns
cli
loopne
xlat
aas
pop
sub
jp
daa
push
dec
mov
adc
inc
pop
idiv
cmp
ret
push
adc
sbb
inc
fldcw
je
pop
or
dec
pop
cmp
in
cs
mov
mov
mov
mov
xor
sbb
out
inc
xchg
add
dec
testb
addr16
inc
mov
jle
dec
into
add
jmp
cs
push
pop
data16
ficompl
pop
ret
xor
jmp
xchg
movhps
outsl
xor
pushf
fmull
dec
xor
imul
js
cmpsl
shrl
fiadds
sub
add
pop
test
insl
pushf
daa
mov
sbb
adc
ret
jl
xchg
mov
push
cwtl
push
insb
sbb
test
adc
jb
cmp
icebp
or
fwait
pop
jg
sub
mov
mov
sbbb
pop
jl
inc
or
pushf
xchg
pop
lods
pop
ret
mov
sub
dec
les
insb
lods
sub
gs
call
loopne
fnstsw
in
xchg
lods
dec
dec
out
dec
adc
dec
dec
int3
out
sbb
inc
pop
mov
mov
dec
ja
lods
inc
dec
pop
clc
dec
movsl
jl
sub
insb
pop
fbld
mov
sbb
mov
and
mov
sub
or
push
cld
lahf
in
cmp
outsl
sub
push
nop
call
cmp
push
push
sbb
in
or
loope
hlt
mov
cltd
je
or
int3
jle
pop
mov
pop
lcall
incb
stos
add
loop
in
pop
cli
ja
or
mov
movsb
aam
adc
stc
in
test
scas
pop
insb
cld
or
fnsave
outsl
daa
punpckhdq
fsub
or
xor
xor
das
inc
pop
aam
aam
rcr
fadd
pushf
add
dec
pop
aaa
xor
sbb
push
cld
scas
enter
je
push
inc
enter
fsubrs
call
or
jo
sbb
inc
pop
fbstp
enter
inc
dec
fildll
mov
js
jo
daa
sub
pop
inc
mov
jmp
add
int3
movsb
sahf
inc
cmp
aaa
movsb
cmpsl
inc
inc
dec
push
insb
pop
sbb
cmpsl
inc
adc
js
stos
inc
add
fbstp
add
push
jo
xchg
add
adc
dec
out
ljmp
lahf
mov
xor
or
xor
cmp
xor
mov
pop
xor
mov
push
inc
das
push
pop
and
sub
xor
push
sbb
jmp
test
inc
movsb
xchg
mov
pop
in
adcl
hlt
dec
test
aam
xchg
inc
pop
and
popf
mov
xor
mov
sbb
js
dec
mov
sbbl
mov
int3
addl
inc
jo
add
inc
ss
pop
adc
inc
or
jl
push
adc
mov
call
les
mov
ss
fs
inc
mov
lods
sbb
call
push
scas
mul
aaa
cmpb
xor
xchg
adc
pop
fs
mov
and
pop
sub
test
in
pop
lods
mov
xchg
sbb
hlt
das
pop
add
test
pop
pop
lods
and
sbb
inc
in
loopne
call
inc
mov
pop
xor
fdivrl
mov
test
in
shrb
adcl
sub
dec
fs
add
cmp
orl
rolb
aam
mov
orl
cwtl
xchg
data16
mov
aad
jb
jns
or
fiaddl
mov
xchg
mov
mov
int3
fsubrp
jle
stos
out
xchg
in
dec
or
test
pop
sbb
int
or
cmp
jo
jecxz
pop
std
das
mov
cltd
or
xor
repz
fimuls
and
je
or
mov
pusha
adc
or
xchg
xor
pop
aam
test
cwtl
mov
testl
je
movsb
sub
les
sbb
mov
lea
or
scas
cmp
fcoms
rorb
ja
cwtl
sub
xchg
js
aam
mov
xor
sub
inc
adc
cmp
pop
in
mov
xor
clc
stos
and
mov
mov
xorb
push
mov
push
jl
jo
call
sbb
scas
pop
sbb
jbe
mov
add
jle
sub
popl
add
mov
sub
jo
push
mov
aam
push
pop
add
mov
sbb
imul
sub
lcall
stos
adc
add
and
push
jo
pushf
mov
ss
call
cmc
aas
cmp
mov
xchg
sti
das
dec
fs
or
fdivrs
loopne,pn
clc
pop
xchg
insb
fidivrl
je
push
lods
pop
and
xchg
lcall
adc
mov
or
mov
out
dec
sbb
test
xchg
xchg
mov
sbb
add
insl
mov
mov
jle
ds
hlt
push
mov
cmpl
sub
adc
pop
rcr
sbbb
inc
call
sbb
lcall
hlt
push
pop
sti
cld
out
pop
dec
mov
jo
ljmp
fdiv
or
pinsrw
xlat
or
inc
mov
xor
fmuls
addl
loopne
inc
adc
scas
test
xchg
xor
and
sbbl
pop
sub
ss
outsb
pop
jle
xor
fiaddl
lret
or
inc
insb
clc
and
outsl
inc
popf
sub
repnz
inc
or
movsl
push
xor
lret
jg
into
mov
mov
add
stos
mov
ds
push
sub
xor
pop
dec
cmp
je
fsubl
cmp
mov
insb
push
xor
or
repnz
lret
pop
mov
pop
fbstp
in
addr16
mov
and
jl
adc
je
subb
mov
loopne
jg
movsb
mov
pop
xchg
shlb
sub
ljmp
adc
mov
adcl
sbb
std
inc
call
ud1
push
and
or
enter
sbb
sub
jp
or
test
or
and
inc
mov
hlt
pop
stos
and
lahf
test
mov
in
mov
push
pop
add
xor
jl
lahf
push
pushf
lock
cmp
or
and
subl
add
fs
jge
jl
and
movsl
lods
sbb
add
iret
sahf
shlb
jl
mov
cld
or
enter
mov
lret
imul
jae
test
add
aaa
add
pop
mov
mov
enter
sub
sub
fs
sbb
aas
adc
dec
and
inc
sub
or
pop
scas
push
lret
jmp
add
fildll
or
rcrl
fwait
or
push
mov
jle
scas
dec
or
mov
sbb
cmp
outsl
or
cld
inc
nop
sub
mov
xchg
jle
jne
subl
push
aad
jo
ss
sub
iret
xchg
fcomp
pop
inc
push
add
leave
sbb
rclb
pop
addb
enter
adc
sbb
and
dec
sub
fs
mov
xchg
dec
mov
in
sub
dec
adc
add
lahf
dec
sub
push
xchg
inc
int3
lahf
shrb
dec
call
out
pop
cmp
ds
pop
mov
push
pop
jp
mov
mov
sub
inc
loopne
lock
lret
sub
and
sbb
inc
xchg
lahf
mov
clc
test
mov
adc
sub
cmp
dec
lahf
push
sub
mov
enter
adc
pop
cmp
or
mov
insl
out
cmp
push
sub
pop
adc
dec
or
mov
and
mov
aaa
cld
cmp
out
movsl
fxtract
js
xor
jne
movsb
xor
inc
popa
dec
mov
jno
or
xchg
add
aad
out
lret
adc
jo
movsl
aas
jne
pop
inc
or
arpl
push
add
fimull
mov
rcrl
das
inc
addr16
pop
mov
add
or
adc
in
and
lods
ret
or
lahf
pushf
aas
ss
sarb
pop
xchg
adc
dec
fs
sbb
add
out
jp
mov
shll
insl
cld
daa
pushf
cmp
xor
and
inc
flds
aaa
xor
or
sub
add
lea
lret
nop
into
mov
or
rorb
imul
fsub
jle
or
cmp
xor
leave
das
cmp
hlt
loopne
loopne
cltd
or
stos
inc
pop
test
cmc
adc
xchg
fwait
pushf
or
or
mov
in
sbb
in
and
iret
orb
mov
lret
or
fisubrs
jmp
dec
mov
cmp
bound
or
dec
add
mov
or
cmc
sar
pop
sub
flds
hlt
adc
mov
in
fistpll
stos
and
xor
mov
les
mov
sbb
adc
cmp
neg
jo
outsl
xchg
lock
or
sbb
xchg
or
mov
cwtl
or
sbb
cltd
cmpsl
hlt
jp
pop
test
push
aam
fmulp
mov
hlt
scas
or
or
shrl
xor
jmp
addl
cmp
fdivrl
popa
into
andb
fsubrl
int3
xchg
lret
out
cmp
sub
ret
test
add
icebp
or
je
jno
fwait
or
sbb
sub
rorb
nop
inc
clc
iret
or
mov
shl
movd
ljmp
or
mov
jno
sub
jle
or
and
in
out
or
insb
fistl
enter
pop
cmp
inc
mov
xor
mov
inc
jnp
mov
and
int3
or
test
sbb
leave
out
or
pop
divl
jge
orb
std
jno
or
test
or
dec
mov
mov
je
sub
fcoml
aaa
jg
pop
cmovl
les
or
int3
mov
mov
sahf
loope
and
aam
sbb
scas
xchg
sti
mov
push
gs
adc
xor
or
and
mov
roll
loopne
pop
push
sub
jns
jp
jg
and
scas
fmul
std
add
popa
dec
and
pop
add
xchg
in
js
cwtl
inc
ds
xlat
sbb
or
push
scas
std
out
in
lahf
or
and
jno
jbe
push
or
orl
adc
pop
or
movsl
ror
sub
je
xchg
or
xor
inc
and
loop
xchg
push
mov
sbb
popa
mov
aaa
jo
int3
mov
aaa
incl
sub
cmp
adc
mov
add
adc
aaa
negl
fistps
xchg
ljmp
js
add
or
xor
gs
cmpsl
stc
das
or
incb
leave
sbb
ret
rorb
mov
cltd
jmp
mov
cmp
mov
push
cmpl
push
sbb
push
or
ud1
clc
sar
or
cwtl
scas
dec
gs
jno
hlt
xchg
pop
inc
mov
cs
mov
mov
jle
popa
or
fnstenv
clc
sub
shlb
dec
in
mov
add
int3
cld
xor
fidivl
or
lret
popl
jb
inc
in
and
loope
sbb
fisttps
fstps
add
rol
in
cmp
push
ficomps
or
jnp
rorl
or
jge
insb
sbb
sub
or
stos
jecxz
sbb
jmp
dec
into
dec
mov
mov
or
cmp
arpl
mov
adc
dec
adc
xor
imul
fistpl
pop
ljmp
inc
ret
scas
jne
or
test
or
call
cmp
stc
xor
mov
fs
fsubrs
pop
out
cld
shrl
push
mov
fxsave
icebp
cmp
sar
or
pop
and
in
ds
fmuls
stos
mov
push
loopne
and
lods
xchg
mov
in
adc
scas
cmp
out
popf
adc
dec
flds
aad
or
mov
xchg
push
ds
lea
in
in
push
or
push
sub
loope
or
enter
pop
mov
sub
ljmp
int3
es
or
std
icebp
or
test
or
or
lret
jb
mov
push
sub
call
adc
pop
cmpsl
pop
push
popf
jae
jl
or
sbb
mov
ja
lcall
rolb
std
daa
adc
or
push
inc
push
sbb
push
jbe
inc
inc
sti
or
cmpsb
lcall
fimull
je
or
mov
jp
clc
push
and
add
or
inc
adc
ds
stc
or
stos
cmp
out
dec
jnp
or
int3
lret
pop
or
xchg
shl
mov
xlat
addr16
or
scas
es
daa
add
xor
and
sub
push
mov
out
fwait
shll
out
sub
cmpsb
imulb
dec
dec
sub
outsb
or
add
pop
in
push
sbb
or
pop
shlb
push
or
mov
lahf
pop
or
les
or
push
mov
test
ret
xchg
cmp
mov
adc
or
rclb
shrl
or
insl
xchg
mov
divl
in
daa
or
movlps
in
int3
xchg
xchg
jb
pop
push
pop
call
test
jecxz
lret
sbb
inc
add
out
ss
ret
cmc
adc
test
xchg
ret
ja
xor
test
push
ljmp
jno
push
mov
flds
sbb
cld
lods
mov
mov
xor
movsb
imul
pop
xchg
aaa
sbb
xchg
or
add
ret
mov
daa
inc
lds
daa
xchg
or
ret
cmc
shll
daa
pop
mov
sub
in
cld
cld
lahf
adc
lahf
arpl
or
sti
pusha
cld
cld
arpl
pop
daa
xchg
xchg
cld
cld
imul
popa
cld
cld
enter
xchg
leave
xchg
push
and
test
ja
mov
icebp
jl
aad
sub
mov
daa
dec
sub
mov
int3
inc
shl
scas
push
dec
cmp
in
mov
jb
jp
sahf
shl
enter
sbb
std
sub
pop
xor
or
ret
mov
sbb
cmpsl
dec
arpl
pushf
lock
add
loopne
cwtl
fcoml
cmp
mov
push
jmp
jno
cld
gs
lahf
gs
jecxz
sti
add
add
cld
fildl
xor
mov
dec
adc
xchg
xchg
dec
cmp
lods
mov
mov
aas
out
mov
aaa
mov
orl
stc
icebp
sahf
xchg
mov
cmp
call
jb
jmp
hlt
lahf
fistps
sub
cmp
stos
jle
jecxz
mov
std
inc
out
sbb
fmuls
cltd
scas
mov
mov
and
add
and
cmp
lods
push
xchg
cld
jb
jb
mov
mov
les
inc
add
int3
dec
loopne
es
aam
sbb
sti
xchg
lahf
lock
stc
aad
outsl
fwait
xchg
jl
test
sbb
cltd
and
cli
je
push
lcall
fwait
es
xchg
mov
pop
std
sub
ss
xchg
jb,pn
stc
adc
leave
enter
rcrb
lcall
addr16
sti
xor
rcr
push
mov
cmp
ds
aad
jle
xor
out
sbb
cld
pop
lock
aam
jl
and
scas
aas
into
lret
and
sti
lock
les
sbb
mov
or
cmpsb
in
adc
jge
jl
xor
dec
stc
je
std
mov
sbb
fisubs
jae
xor
pop
add
sub
stc
fstpl
andb
mov
sarl
dec
jg
pop
jno
lock
aaa
scas
mov
cmp
lcall
fwait
in
push
repz
xchg
filds
pushf
mov
scas
fcompl
mov
xchg
mov
test
stos
daa
adc
mov
cltd
testb
pop
add
lret
lods
pusha
out
fdivrs
out
push
mov
mov
mov
adc
daa
jle
push
orl
addr16
and
aam
cld
push
std
in
push
leave
lahf
pop
pop
lret
lret
or
shlb
xchg
xlat
adc
sbb
pop
lret
inc
cli
xchg
mov
pop
fs
adc
iret
aas
mov
adc
iret
lret
jns
inc
aam
cs
test
and
fdivrs
xchg
fcoml
rorb
jge
and
xor
cwtl
mov
outsl
ss
stc
iret
aas
dec
dec
mov
bnd
outsb
push
lcall
pop
imull
scas
adc
inc
xchg
xchg
or
test
sti
adc
fwait
pop
out
mov
shll
lcall
mov
orb
int
pop
mov
enter
mov
mov
mov
mov
add
fsubl
adc
cmc
pop
lret
xchg
mov
dec
xstore-rng
cmpsl
add
xor
aaa
enter
push
cmp
jge
aam
fisubrs
out
into
loop
and
dec
inc
cmp
push
addr16
jg
jbe
mov
pop
pop
lea
push
lods
das
outsl
cs
cmc
les
or
lahf
ljmp
dec
insb
pusha
bound
jno
add
lret
daa
mov
arpl
addr16
inc
ljmp
ss
rol
popl
xor
sbb
sbb
mov
mov
lea
int3
cwtl
dec
mov
les
bound
popa
stos
jg
jne
cld
aad
pop
lahf
xchg
dec
mov
out
ds
loope
push
scas
mov
test
arpl
mov
mov
das
or
insl
adc
cld
or
ret
sar
sub
gs
gs
rcr
add
gs
sti
mov
lahf
icebp
lods
lds
daa
sub
mov
daa
mov
or
repnz
cld
cld
gs
rorb
mov
lds
gs
jmp
pop
cld
cld
mov
arpl
adc
jns
cld
cld
or
cltd
fldt
aas
push
lret
mov
insb
mov
sbb
cmp
ficoml
xor
mov
iret
mov
mov
sbb
sub
xchg
sub
enter
inc
int3
xchg
push
mov
mov
mov
ret
xchg
sbb
fstpl
push
jle
mov
xor
mov
test
mov
sbb
loopne
lahf
daa
sbb
sbb
jb
dec
add
call
adc
faddl
call
stc
push
dec
or
ss
xchg
push
and
mov
movsl
in
mov
icebp
mov
xor
pop
cmp
cmc
sbb
mov
lods
xor
pop
cltd
dec
mov
mov
test
sub
nop
mov
lret
repz
xor
ret
xor
test
push
inc
and
dec
out
dec
xlat
sub
mov
jo
adc
pop
xchg
and
imul
out
gs
add
movsb
sub
mov
fwait
adc
jns
mov
in
ret
ds
cli
pop
scas
inc
lcall
jge
out
cmp
xchg
pop
inc
add
ret
aam
lods
push
dec
fcoml
sub
cmp
mov
or
mov
mov
daa
arpl
xchg
jmp
roll
add
jg
cld
cld
push
inc
sub
lock
xorb
lea
fwait
insb
dec
iret
xor
pop
jmp
cmc
fldl
adc
inc
sub
inc
mulb
test
push
int3
dec
cwtl
addr16
iret
mov
rcrl
ficoms
mov
fnstenv
outsb
dec
test
push
pop
cmc
out
sub
push
dec
lahf
test
cmp
mov
inc
mov
je
cmpsl
ds
shrl
push
test
pop
js
sub
or
add
xchg
ljmp
daa
pop
or
icebp
push
push
nop
shr
cmp
add
cli
cmp
mov
daa
lahf
lds
or
addr16
dec
or
imul
mov
repz
lahf
les
daa
cmp
mov
cld
mov
jns
leave
pop
pusha
cmpsl
jnp
aad
test
out
divb
pop
add
dec
add
lods
and
xor
pop
sbb
sbb
ljmp
sbb
leave
mov
lret
mov
arpl
movsl
adc
imul
rcl
push
adc
mov
lea
jno
or
mov
nop
fisubs
cltd
out
sub
test
xchg
fcoml
cmp
mov
daa
or
push
gs
leave
xor
gs
mov
mov
or
or
repnz
lret
add
hlt
ret
mov
gs
lret
gs
repnz
jmp
arpl
mov
pop
ljmp
out
sub
push
sbb
push
mov
mov
pop
push
sti
fwait
sbb
sti
test
test
jae
jns
loope
mov
cmp
ret
movsl
ds
pop
in
cmp
cmc
sbb
sub
pop
or
sbb
repnz
mov
jl
fwait
cmp
pushf
mov
pop
movsb
jmp
mov
lods
jecxz
xchg
mov
push
loope
ds
mov
sarl
test
mov
inc
and
push
stos
jno
or
mov
pop
daa
data16
inc
cld
cld
inc
insb
inc
icebp
sub
add
xor
sub
lcall
mov
push
sub
fmuls
mov
testl
lds
cli
xor
cmpsb
mov
xchg
dec
sbb
adc
cs
sub
pop
repz
fwait
nop
test
dec
add
out
insl
into
sbb
push
sbb
mov
lods
mov
cmpsb
dec
scas
mov
add
cltd
clc
mov
xchg
mov
sub
dec
cmpsl
xchg
dec
daa
mov
cs
fcoml
mov
pop
mov
cld
ja
pop
jmp
sar
cld
sub
or
sub
or
and
xchg
aam
dec
outsb
and
insl
push
and
in
xchg
dec
adc
inc
dec
and
iret
jo
out
mov
mov
fwait
pop
cmp
xor
push
mov
jo
cld
xor
adc
push
adc
test
add
dec
jp
and
loopne
insb
test
fs
cmp
push
outsb
fsub
lret
push
pop
mov
and
cmc
adc
stos
clts
gs
ljmp
dec
sti
ljmp
xchg
ret
scas
arpl
jbe
cmc
xchg
aaa
jp
cli
cmc
shl
cmp
gs
shr
mov
inc
or
fisubs
mov
or
xchg
std
cld
jmp
jnp
cld
ljmp
daa
inc
or
rorl
cld
ror
ret
jecxz
sar
sub
or
hlt
or
cld
add
add
lahf
ret
jmp
imul
mov
cld
mov
test
jmp
rolb
add
das
in
mov
pop
or
mov
cld
cld
gs
fmull
imul
pop
or
inc
lock
add
adc
dec
or
cmp
xchg
pop
sbb
dec
add
xor
jmp
int
stos
cmp
pop
fisttps
sub
lea
dec
clc
lea
rcll
lea
idivb
bound
test
negb
fidivl
add
in
leave
add
lods
int3
or
cld
sbb
iret
add
test
sub
icebp
lods
push
inc
jnp
sbb
pop
or
pop
dec
cmp
add
add
jle
push
enter
mov
icebp
or
jl
in
js
das
pop
in
popa
imul
cli
xor
call
in
dec
jnp
dec
sub
es
pop
mov
dec
icebp
adc
hlt
mov
hlt
scas
xor
sbb
xor
ss
xchg
sub
dec
lea
adc
jmp
sbb
popa
lock
dec
das
cwtl
push
add
sbb
and
xchg
or
mov
fwait
push
or
cmpsb
int
arpl
push
clc
lods
or
out
out
lret
or
cmp
cmp
insb
push
xchg
sbb
leave
or
lock
push
mov
add
call
pop
out
cmp
add
je
adc
cmc
pop
mov
int3
and
stc
fstl
iret
xor
out
sbb
into
jle
xor
or
adc
push
sub
pop
inc
outsb
test
nop
out
sub
mov
xchg
in
add
xchg
cmp
add
pop
cwtl
and
out
fildl
push
pop
les
sub
and
fadd
in
mov
out
dec
addb
xchg
sbb
outsb
jne
cli
cld
movsl
maskmovq
testl
gs
leave
pop
dec
mov
sub
adc
inc
jmp
nop
adc
sbb
ljmp
inc
dec
or
hlt
fisttpl
fcmovbe
daa
fbld
mov
or
xorb
push
sub
add
neg
mov
das
add
jmp
les
repnz
notl
loopne
or
inc
out
inc
stc
fstps
pop
nop
sbbl
cmc
xrelease
out
lahf
dec
test
cld
insb
cmpl
dec
out
mov
pop
lock
test
in
add
sub
or
dec
arpl
aam
out
mov
or
lods
mov
mov
mov
xchg
and
icebp
xchg
mov
out
pop
fidivl
add
push
xor
ds
xchg
or
or
out
push
mov
aas
and
mov
ja
pop
int
fcomip
xchg
cmc
dec
or
gs
insl
jl
in
or
mov
add
cmp
test
pop
nop
pop
out
and
fistl
add
hlt
aas
push
and
add
das
fsub
je
dec
xchg
orb
add
out
cmp
sbb
mov
mov
imul
rcrb
jb
test
int3
out
adc
into
jl
iret
add
pop
call
repnz
pop
aas
les
out
popa
or
cli
roll
sbb
xchg
and
rcrl
out
maskmovq
testl
inc
mov
cmp
cs
or
sub
shl
popf
inc
lret
ret
inc
fmuls
jae
test
out
icebp
dec
lods
and
mov
ret
fldt
xchg
test
pushf
mov
pop
pop
out
adc
int3
inc
mov
add
add
arpl
fidivs
mov
pop
decb
pop
xor
add
or
dec
insb
inc
popl
mov
or
scas
sub
insb
mov
aas
xor
jo
ror
push
scas
mov
mov
out
orb
insb
outsb
mov
repz
inc
inc
pop
je
mov
out
sbb
push
mov
sbbb
divb
aam
adc
hlt
testl
adc
add
mov
adc
lods
hlt
shlb
xchg
hlt
das
add
add
mov
or
les
stos
pop
das
test
and
mov
test
cmp
xchg
rorb
mov
push
ljmp
sbb
jmp
lea
mov
leave
outsl
mov
fucomp
inc
loopne
test
add
cld
adc
mov
jb
mov
sub
push
pop
pushf
inc
pop
clc
ucomiss
sub
pop
rcrb
loop
or
fs
cwtl
mov
dec
adcl
outsb
sub
lahf
and
in
add
repnz
adc
gs
jg
fsubrs
add
mov
sub
dec
sbb
in
sti
jbe
testl
out
mov
je
ljmp
fcmove
int3
add
cmpsl
pop
idivl
test
imul
add
dec
cmp
and
lcall
cmp
incl
and
fisubs
xchg
testb
int
adc
jle
sbb
clc
add
jg
pop
cli
sbbb
and
inc
pop
stos
push
push
addb
popa
sarl
movsl
sahf
inc
mov
xor
popf
out
into
test
lret
lds
shrl
nop
fisubrl
xor
test
shlb
daa
inc
out
arpl
adc
push
and
and
fs
std
aas
sub
das
xor
sub
lds
pop
or
inc
sub
add
and
jno
cmp
enter
test
rclb
mov
outsb
rorb
mov
sub
bound
add
loopne
leave
xchg
int3
shlb
idiv
sti
out
cs
test
dec
add
and
mov
adc
push
nop
pop
dec
pop
push
xchg
sub
popf
xchg
add
xor
aam
call
mov
testl
pop
lock
setl
add
push
xchg
pushf
jmp
cmpsl
hlt
mov
xchg
in
icebp
xchg
pop
add
jo
mov
or
or
and
add
int3
jnp
cmp
in
mov
and
dec
add
notl
nop
dec
pop
enter
lahf
pop
xor
xchg
pop
sbb
push
insb
out
cmp
fisubs
fwait
aam
cmp
mov
das
pop
hlt
jl
popf
in
sbb
in
ret
mov
les
out
add
out
pop
fisttps
cli
or
pop
int3
fsubr
xchg
inc
add
out
sbb
imul
cmp
sbb
add
dec
push
dec
and
hlt
push
and
and
mov
negl
inc
dec
and
add
cmpsb
add
imul
popa
xchg
or
pop
xor
sub
xor
incl
sub
int3
mov
insb
fs
out
call
and
in
mov
push
inc
out
dec
xchg
sbb
mov
pop
paddb
push
dec
add
out
sub
adc
out
dec
pop
in
lahf
rcrl
lods
push
repnz
es
dec
pop
mov
ror
les
repnz
enter
pushf
inc
mov
setl
inc
outsl
adc
in
sub
xlat
mov
pop
or
pop
orb
out
sub
fldt
test
std
push
jle
push
and
pop
test
xchg
ljmp
sbb
dec
adc
nop
xor
sub
loop
inc
and
test
mov
pop
mov
and
mov
hlt
enter
out
cmp
add
jb
popa
sub
ret
and
mov
cmp
jle
sbb
out
pop
adc
push
lahf
jg
in
inc
test
cmp
dec
push
xchg
outsl
adc
cmc
mulb
bound
mov
mov
outsl
cmp
inc
shrb
mov
ret
into
xchg
or
sti
fiaddl
push
outsb
and
sbb
fwait
bound
decb
fistpl
mov
xchg
scas
ficoms
cmp
daa
add
push
xor
push
xor
ficompl
dec
cmp
daa
in
hlt
adc
hlt
pop
into
push
outsb
imul
sbb
scas
ret
add
jg
js
jae
mov
ds
cmp
aas
mov
xchg
imul
popa
data16
cmpsl
mov
je
pop
push
push
in
dec
cwtl
hlt
cld
ret
jp
jne
cmc
add
sbb
stc
or
add
int3
js
aam
adc
bts
scas
lods
jo
xchg
mov
mov
testb
orl
push
push
dec
sub
sahf
pushf
sbb
cwtl
iret
jp
mov
js
mov
inc
push
xor
xchg
sub
adc
clc
fs
or
sbb
scas
les
pop
pop
rcrl
pop
inc
pop
inc
mov
push
cmp
sbb
push
imul
call
or
bound
in
iret
push
lcall
ss
jae
or
dec
dec
pop
add
jbe
mov
test
mov
pop
pop
loopne
mov
ja
or
sub
bound
sub
xorb
fimuls
jae
js
outsl
icebp
or
ror
xchg
add
icebp
push
add
add
or
pop
push
lahf
mov
lret
sub
dec
int3
mov
dec
push
mov
lret
jge
add
adc
pop
loope
into
dec
sbb
pop
roll
add
mov
mov
push
jl
pop
inc
pop
lods
lret
sbb
sbb
cltd
rolb
adc
fs
pop
ljmp
mov
inc
add
lcall
sub
lahf
cmp
sub
mov
outsl
inc
jl
arpl
idiv
adc
dec
inc
lods
fdivrl
add
dec
push
loope
push
dec
lods
aaa
xchg
inc
pushf
lcall
jae
jnp
push
int3
pop
mov
push
std
test
push
fsubl
mov
cmpsl
jmp
insb
dec
sub
stc
aam
int3
rcrl
lds
push
jge
or
psubusb
and
dec
sub
inc
mov
pop
inc
xor
pop
test
shrl
cmpsl
incl
mov
xchg
js
adc
dec
push
mov
outsb
jp
popa
sbb
dec
mov
fadd
sub
int3
imul
mov
pop
jnp
cmp
pop
into
sahf
ss
cmp
fistl
mov
pop
scas
pop
sub
add
and
mov
in
movsb
pop
adc
push
fmul
pop
sbbb
test
mov
pop
sbb
test
sub
xor
xchg
mov
bound
ljmp
or
in
orl
or
ret
push
cli
mov
cwtl
sub
fwait
cs
sub
mov
jmp
adc
inc
inc
dec
mov
inc
stos
push
fwait
imul
xchg
inc
dec
cmp
dec
sbb
mov
int3
repz
dec
cli
cmpl
push
and
int3
data16
dec
ds
into
fcoml
scas
mov
pop
test
hlt
out
inc
cli
lret
dec
dec
pushf
jmp
or
out
sbb
mov
cmovno
sub
ror
or
xor
pushf
pop
add
aas
or
push
ret
add
inc
inc
mov
negl
scas
incb
xchg
hlt
cltd
and
call
pop
add
sub
mov
ss
je
int
pushf
jg
dec
shlb
in
hlt
das
pop
inc
test
and
push
clc
movb
add
xchg
cld
insl
mov
fnsave
clc
mov
les
lock
shll
mov
rcrl
fcmove
movb
jp
dec
add
mull
test
shlb
lods
push
fisttps
scas
cmp
cmp
cmpl
mov
dec
jp
sub
jnp
negb
sbb
out
fucom
pop
jbe
outsb
pop
bound
pop
cmp
sub
or
inc
jp
int3
mov
add
lods
push
pop
popfw
sub
sub
or
mov
add
enter
mov
data16
sbb
inc
je
dec
lcall
test
mov
sub
adc
icebp
lcall
data16
outsb
xor
cmp
outsb
in
add
call
pminub
frstor
jp
mov
mov
push
and
cmpl
jg
mov
pop
jmp
outsl
or
fsubl
xor
xchg
cmc
test
jl
iret
adc
clc
gs
push
add
fpatan
ret
sub
das
sbb
pop
add
jge
add
jae
cmp
mov
jo
pop
fwait
stos
lret
jnp
dec
push
add
ficompl
mov
cs
dec
bound
xchg
add
outsb
push
dec
stc
adc
loopne
in
cmpsl
push
sub
jg
dec
icebp
andb
dec
call
addr16
push
inc
test
je
out
cmp
dec
xchg
sbb
xchg
mov
mov
mov
setle
into
lret
mov
repz
pusha
inc
lods
pusha
adc
icebp
add
into
sbb
and
pop
add
sbb
cmp
pop
icebp
lds
rcrb
sub
xchg
testl
repz
adc
dec
dec
leave
mov
add
repz
sub
pop
bound
movsl
inc
loopne
inc
loopne
aad
js
addl
jnp
cld
sbb
in
dec
pop
xchg
dec
test
pop
stos
sbb
push
pop
loop
pop
pop
pop
data16
in
hlt
scas
cmp
pop
sub
or
cmpsl
pop
push
and
cmc
mov
in
decb
add
scas
sub
cmp
mov
imul
sbb
stos
scas
add
sbbb
outsb
add
movaps
insb
shl
add
and
mov
or
js
push
push
and
cmp
jecxz
cld
mov
and
mov
imul
add
and
insl
sub
add
dec
nop
sarl
fs
jl
sub
pushf
push
sbb
sbb
ljmp
adc
sbb
scas
enter
push
xchg
faddl
jns
dec
and
dec
mov
fldcw
xorl
stos
mov
bswap
inc
mov
js
sub
xlat
into
cmp
test
in
mov
mov
stos
jl
sahf
dec
sbb
orl
in
and
cmp
add
xorb
aaa
loopne
add
lods
stc
cmp
jge
rolb
xor
fistpl
xlat
add
mov
mov
pop
push
adc
and
jbe
cld
repnz
pushf
adc
insl
adc
adc
sbb
and
sub
stos
sbb
repz
std
das
test
dec
test
xor
mov
add
xchg
sub
and
sbb
add
jo
fwait
cmpsl
sbb
sub
or
adc
mov
dec
lock
and
push
or
daa
fs
ss
pop
and
rorb
or
fs
and
addl
mov
daa
push
mov
ljmp
fs
mov
out
das
push
outsl
daa
adc
cmp
sub
test
xchg
fs
lods
push
test
and
sub
cmovnp
test
in
push
orl
push
pop
outsb
sbb
inc
fs
js
and
das
shl
pushf
or
dec
sbb
ret
and
pop
adc
lahf
xor
sub
and
lock
out
sub
adcl
arpl
and
jecxz
in
clc
cmpsl
jl
stos
pop
mov
mulb
sub
insb
sbb
loopne
inc
push
sub
dec
adc
cmp
inc
jl
stos
movsb
mov
sub
sub
sbb
cmp
dec
pop
leave
dec
sub
and
pop
mov
mov
sub
negb
add
sub
bound
pop
in
and
or
rorl
and
dec
add
sub
stos
insl
clc
stos
jno
xchg
arpl
mov
jo
in
push
mov
enter
xlat
push
mov
dec
add
inc
sahf
fisttpll
icebp
jnp
cmp
in
movl
int
test
push
pushf
cltd
mov
inc
jbe
cmp
add
int3
jb
enter
movsb
pop
inc
sub
stos
lret
pop
dec
out
clc
aaa
pop
push
pop
pop
jmp
js
and
xchg
lret
pop
sbb
cmpsl
push
int
jp
nop
call
dec
inc
das
jnp
cmc
dec
in
mov
sbb
les
add
or
cmp
out
in
mov
insb
push
out
push
add
mov
rcrl
push
dec
pop
out
std
jp
pop
mov
gs
sub
iret
jae
adc
seto
das
and
push
push
jecxz
push
lret
das
dec
out
mov
mov
dec
mov
mov
das
jmp
or
adc
sbb
ds
into
nop
in
hlt
xchg
pop
xor
pop
sti
mov
testl
mov
fwait
dec
inc
fdivrs
xor
nop
ret
mov
lret
pop
insb
mov
xchg
or
jne
les
fsubp
push
jne
cli
mov
mov
stc
leave
inc
push
orb
push
cmovnp
out
sub
jne
bound
out
aaa
lds
xor
or
cld
repnz
pop
mov
out
dec
cli
movsb
dec
xchg
inc
stos
inc
push
iret
mov
in
mov
testl
sarb
pop
jae
cmc
out
in
sub
jge
cmp
pop
test
aaa
dec
mov
inc
pop
movsb
daa
mov
loope
sbb
push
cmpsb
in
cmp
and
jmp
stc
push
fnstsw
and
fsubrs
das
add
repz
enter
mov
pushf
out
pop
outsl
add
pop
mov
and
fs
out
mov
rol
dec
jecxz
push
add
das
cmp
sbb
sbb
fucomp
adc
lock
xchg
rcll
out
test
fstp
pop
mov
mov
insb
push
and
out
pop
xlat
pop
push
sbb
iret
outsl
imul
jbe
notl
pusha
cmp
fs
clc
mov
into
js
mov
repnz
xchg
jnp
loopne
mov
pushf
std
adc
mov
andb
inc
inc
ret
hlt
notl
test
pop
in
or
out
bswap
sti
lock
popl
roll
mov
add
ss
out
lods
pop
xor
pop
testl
xchg
testl
jp
pop
ss
out
push
xor
jbe
fs
pop
xor
xlat
sti
jle
mov
aam
and
fwait
gs
inc
dec
lds
cltd
push
dec
add
dec
pop
out
inc
call
and
repz
xchg
sub
imul
push
sub
adc
iret
pop
in
and
add
testl
pop
sbb
pop
bound
jne
cltd
mov
inc
les
ja
add
push
addl
cld
ljmp
pop
cld
add
add
pop
sub
rcr
sbb
lcall
pop
fdivrs
in
scas
mov
les
clc
mov
sbbb
push
dec
sbb
mov
cmpb
and
sbb
jns
in
dec
test
lods
call
lret
aad
popa
cmp
call
cli
cmpsb
adc
subl
jnp
add
or
inc
add
lods
and
pushf
dec
sarb
or
pandn
rclb
jns
mov
cwtl
aaa
inc
sub
cmp
arpl
add
out
jne
mov
sub
arpl
ret
push
sbb
and
in
fistpll
lods
add
sbb
in
cmpsb
in
clc
mov
out
inc
mov
jle
lcall
hlt
adc
sbb
pushf
ret
sbb
fs
sti
mov
push
lds
subl
pop
ja
xor
je
push
cld
pop
fwait
lods
cmp
inc
out
test
outsb
lods
fs
enter
push
and
fsubrl
mov
xor
or
es
xchg
xchg
addr16
repnz
lods
dec
in
jmp
in
sub
jo
clc
jecxz
push
and
pop
cmp
dec
das
mov
add
pop
movsb
adc
inc
bound
insb
or
jmp
lcallw
aam
or
mov
mov
stos
sbb
int
rcll
nop
ret
hlt
and
jle
sub
inc
sbb
data16
negb
pop
or
mov
pop
sbb
mov
or
lock
mov
sbb
bound
sub
xchg
add
sub
add
push
pop
jecxz
loopne
xor
fimuls
es
push
adc
in
cwtl
and
adc
pop
test
pop
fadd
fists
std
pop
out
xor
jle
sub
dec
lds
sbb
pop
push
pop
mov
sub
or
add
inc
push
dec
and
push
jmp
rcrl
mov
add
jmp
push
push
js
les
bound
mov
mov
dec
sub
lock
add
out
leave
add
xchg
scas
clc
push
pop
cmp
cmc
out
fs
outsb
adc
sub
fisubrl
int3
into
mov
das
cli
lds
loopne
pop
pop
push
sbb
sbbb
sahf
imul
neg
pop
fisubl
jbe
add
sub
jae
add
aad
adcb
inc
inc
mov
addb
xor
mull
add
sbb
in
rcrl
mov
cli
leave
sbb
testl
dec
xchg
testb
mull
jno
test
mov
popf
out
cmp
fcompl
adc
push
data16
cltd
ss
and
sub
jle
xchg
scas
stos
mov
aas
ret
jp
das
je
mov
sarl
inc
adc
add
in
pop
push
ror
push
xchg
repnz
test
jl
jb
sub
jo
dec
mov
or
cmc
dec
mov
test
push
lods
sbb
inc
movsb
sbb
adc
mov
sbb
add
mov
add
int3
sahf
xor
test
dec
out
sbb
sbb
adc
gs
pop
mov
jnp
in
pop
out
push
adc
mov
dec
xor
jg
sbb
mov
inc
inc
insl
lock
jae
bswap
mov
insb
inc
popf
aad
sbb
and
add
or
or
pop
pushf
cmp
in
mov
jg
sahf
push
push
pop
call
or
mov
sub
sub
or
or
mov
sub
or
jl
dec
in
das
dec
imul
inc
xor
sub
adc
mov
dec
pop
mov
insb
sti
subb
mov
cli
jle
sbb
testb
out
cmp
lods
mov
fdivl
inc
inc
jo
pop
pop
bound
call
aas
ja
pop
sub
sbb
dec
rcll
jbe
test
xchg
sahf
xchg
pop
jp
xchg
push
cld
cmp
mov
out
int3
cwtl
in
fdivrl
mov
and
xchg
cwtl
cs
dec
imul
xor
hlt
sub
jge
dec
pop
arpl
in
in
push
les
out
stos
jp
adc
jo
xchg
cld
lahf
iret
call
shlb
sub
shrl
add
fwait
xorb
xorb
cmp
test
adc
sbb
inc
aas
enter
rorb
in
cmp
jl
bound
int3
push
mov
inc
push
mov
push
add
inc
stos
push
es
sub
fimuls
loopne
sbb
addb
jmp
inc
xor
dec
xor
mov
add
mov
int3
fidivs
sbb
cs
in
dec
mov
js
sub
ret
dec
out
jnp
inc
cmpsl
popl
lea
cmp
sbb
fiadds
push
cli
inc
jns
ss
xor
mov
je
sarl
pop
cmp
cmp
popf
mov
loope
xor
in
sbb
cmp
das
sarl
push
dec
cld
cmp
lods
call
sbb
or
push
jo
add
push
lahf
testb
jge
and
add
inc
inc
mov
lret
pop
inc
sbb
xchg
and
sbb
jb
push
mov
dec
push
sbb
clc
dec
cmpsb
lock
pushf
mov
rclb
into
test
mov
and
mov
and
inc
mov
out
sub
les
insl
in
pop
not
das
push
sbb
xchg
push
xorb
mov
std
or
jecxz
sbb
xchg
pop
popf
pop
push
dec
popf
dec
adc
testb
insb
mov
in
fisubrl
xorb
mov
inc
mov
cmp
or
mov
adc
mov
out
gs
popf
pop
xor
sbb
push
inc
les
and
lods
lcall
add
js
or
adc
incl
pop
add
sub
jmp
mov
pop
test
sub
cld
sub
rclb
inc
cmp
sbb
movsl
add
sahf
ja
int3
xchg
test
iret
js
lock
lods
sub
pop
and
and
fadd
jmp
loopne
sbb
fsubl
sub
or
iret
or
mov
leave
or
aad
mov
cld
sbb
out
mov
fistpl
sbb
je
jb
sub
jnp
in
mulb
popa
hlt
jno
inc
insl
dec
sbb
mov
rcrb
push
fwait
inc
jo
aas
cwtl
stos
inc
lods
mov
test
adc
test
int
shlb
mov
push
call
and
cwtl
mov
jmp
out
jl
pop
insl
in
add
sbb
jnp
cld
xchg
pavgb
mov
dec
imul
inc
data16
sub
je
insl
lods
sub
popf
test
jnp
dec
es
mov
fisttpl
jl
inc
out
mov
in
fisubrs
sbb
jmp
add
or
pop
and
outsl
add
lret
push
int3
dec
pop
xchg
stos
mov
lahf
adc
dec
sub
add
hlt
sub
pop
pop
dec
das
dec
ret
pop
ja
test
pushf
mov
inc
xchg
sub
in
mov
inc
cld
dec
mov
test
mov
add
dec
cld
das
orl
push
inc
pop
fxch
adcb
jae
mov
in
std
lods
jmp
push
lahf
xchg
dec
enter
add
imul
cwtl
jnp
cli
imul
sbb
cmp
sbb
add
dec
cmp
test
cmp
ret
xchg
jmp
test
pop
int
mov
insb
mov
les
idivb
cmp
mov
scas
arpl
jl
out
inc
fldl2e
or
pop
stos
leave
sub
cld
mov
adc
jae
xor
inc
mov
and
push
xchg
int3
xchg
pop
push
xchg
adc
fsubs
testb
xor
sub
and
out
inc
icebp
std
repz
mov
dec
out
enter
jb
and
and
idivl
pop
in
loop
sbb
pop
sbb
and
dec
std
loope
jl
xor
push
add
loope
ljmp
adc
shl
jb
sbb
dec
xor
push
out
and
and
and
sbb
in
enter
das
cmp
or
cmpsb
popf
cs
pop
mov
sub
dec
and
jbe
jp
mov
int3
jecxz
jae
mov
push
sbb
xchg
dec
and
cmp
and
lret
sub
add
inc
mov
leave
adc
inc
lds
sbb
incl
js
es
mov
lahf
xchg
sbb
push
pop
xor
out
stos
pop
sub
add
mov
dec
mov
fsubr
jp
decl
rclb
push
lock
bound
push
and
push
jmp
mov
push
sbb
inc
cmp
lea
xchg
xchg
daa
mov
mov
xor
test
lea
inc
jns
insl
pop
pop
sub
lahf
lahf
bnd
in
mov
sti
stos
xchg
sbb
fcomps
dec
fadd
jne
addl
jge
push
xor
in
xchg
aam
sbb
aad
out
push
lret
fistps
add
jmp
cmp
sub
sub
loopne
push
pop
xchg
cmp
pop
inc
dec
loopne
inc
subb
mov
jl
sti
push
adc
cmp
dec
jmp
ja
sbb
ds
jp
cwtl
mov
sbb
call
sbb
adc
mov
push
pop
cmc
lret
outsb
mov
pop
push
xchg
dec
xlat
jecxz
and
pop
mov
scas
mov
mov
fnsave
cld
daa
and
pusha
mov
push
sbb
pop
clc
stos
push
sbbb
into
je
pop
inc
or
leave
fildl
icebp
push
push
sbb
adc
push
scas
dec
xchg
mov
sub
in
jnp
dec
dec
or
xchg
and
iret
ljmp
mov
jne
cmp
lret
movsb
push
mov
jns
jl
cmp
rcrl
mov
imul
ljmp
mov
dec
jle
fcomip
pop
push
or
or
sub
cmp
mov
and
dec
jmp
imul
mov
iret
imul
int3
dec
cmp
lods
pop
fwait
push
push
lods
lea
push
or
rolb
adc
loop
cwtl
xor
iret
adc
pop
inc
add
add
pop
inc
popf
pop
push
cmp
xor
das
sub
jg
add
les
sbb
stc
push
jne
ljmp
push
sub
aas
add
mov
push
cmc
pop
xchg
sub
je
outsb
ret
outsl
insb
inc
jne
das
sbb
mov
fdivl
jnp
adc
inc
mov
adc
lret
push
ja
or
pop
mov
daa
fdiv
push
push
loopne
mov
sub
push
mov
pop
in
sbb
enter
loop
int3
loopne
sbb
ficompl
xchg
out
jnp
in
xor
jecxz
xchg
adc
pop
xchg
insl
aas
in
sub
jmp
jnp
idivl
insb
lret
pop
aas
push
js
adc
sahf
test
dec
lcall
fwait
loop
roll
inc
adc
and
adc
js
xchg
call
inc
sbb
es
nop
xor
les
movsl
adc
sbb
cmp
clc
pop
ror
daa
add
xchg
dec
inc
sub
gs
mov
daa
jmp
lock
cli
test
adc
insb
mov
in
in
in
ss
mov
gs
mov
popa
dec
or
add
fldt
in
push
lds
push
in
mov
in
lds
int3
add
mov
ret
dec
data16
out
cmovno
and
sbb
lods
cltd
stos
push
sbb
stc
sub
sub
fcompl
dec
sub
cltd
inc
pop
mull
cmp
dec
enter
cwtl
dec
fs
add
add
loopne
sbbb
xchg
test
dec
shll
inc
andb
jb
sub
and
sub
pop
leave
push
adc
pop
xchg
into
xchg
push
jg
testb
jge
dec
sahf
psubd
sahf
in
push
nop
les
cmp
or
push
ss
test
outsl
xchg
in
nop
cmp
das
call
stc
pop
lret
sub
fsubp
stc
lahf
in
lods
adc
xor
or
push
ljmp
in
cmpsb
dec
push
icebp
mov
or
jae
test
mov
inc
pushl
fnstenv
and
out
in
or
cmp
jae
sub
or
cmp
roll
dec
mov
aad
mov
inc
adc
add
or
bound
or
xor
stos
sahf
sbb
orb
popa
sbbl
andb
ljmp
xchg
pop
mov
push
stos
push
sahf
push
dec
arpl
subl
add
mov
xchg
sbb
sub
out
adc
and
nop
sbb
adc
sbb
sbb
or
mov
pop
ret
sbb
insb
sub
push
adc
or
sbb
sbb
idivl
shl
fwait
lds
bound
pusha
fmull
cltd
jecxz
rorb
popa
pop
xchg
adc
sbb
pop
jecxz
jge
cltd
sub
xchg
adcl
std
andl
mov
cld
mov
dec
jl
mov
sbb
fs
and
movsb
sbb
add
stos
cmp
les
mov
push
sbb
sub
popa
dec
lds
js
jo
xchg
xor
leave
sbb
jecxz
inc
push
jnp
add
lock
inc
test
int
cmp
adc
adc
enter
notl
jl
fucomp
or
loopne
ljmp
push
loop
insb
sub
jmp
fisttpll
xor
das
push
push
int3
inc
inc
adc
cmp
jnp
push
cwtl
or
pop
in
fstpt
add
cli
xor
pop
sub
fimull
pop
mov
or
ljmp
mov
xchg
lahf
popf
add
es
xor
jecxz
xlat
and
push
stc
sub
fistpl
stos
adc
daa
or
pop
int3
outsb
sbb
pop
jle
push
loopne
adc
pop
jns
adc
dec
fisubrl
or
xor
cmpsl
mov
sbb
insb
clc
mov
sti
int
insb
push
and
pushf
ret
das
frstor
sbb
daa
and
sub
lock
test
mov
lea
in
dec
and
adc
pop
pop
jne
inc
push
insl
push
sbb
sbb
in
pop
dec
and
das
mov
or
add
pop
out
dec
sbb
out
mov
add
sbb
push
xchg
lahf
in
leave
pop
ficomps
pop
adc
or
dec
mov
hlt
inc
xor
sbb
shlb
pop
int3
test
shrb
int3
and
mov
mov
sub
pop
sbb
adc
mov
inc
sub
push
cmp
and
cmp
mov
pushl
std
mov
arpl
call
fwait
sub
sub
dec
sub
dec
cmp
adc
fdivs
dec
jle
inc
mov
sub
or
in
aam
hlt
loop
adc
dec
pop
mov
es
aas
xor
sbb
adcb
pop
cmp
mov
stos
out
daa
pop
jmp
popf
cmc
int3
dec
xor
jbe
adc
cltd
adc
cmp
and
dec
clc
sub
orb
mov
decl
cld
mov
aas
sbb
pop
cld
data16
flds
pop
test
jns
sbb
rcrb
js
inc
fcmovbe
xchg
enter
push
mov
xor
les
cli
pop
stos
mov
gs
jmp
into
pop
mov
dec
mov
sub
fbld
inc
mov
gs
out
xor
sbb
and
cmp
and
or
pop
add
dec
sub
arpl
pop
in
call
xchg
jg
or
je
loopne
pop
push
addl
add
das
and
inc
sub
xor
cs
mov
outsb
pop
push
inc
lcall
push
pop
sbb
xor
xchg
pop
imul
pop
bound
mov
sub
or
sub
pop
dec
loopne
stos
cs
ret
enter
testl
pushf
in
divl
xorl
add
outsb
pop
mov
adc
jns
inc
enter
mov
mov
cmpsb
mov
sub
in
dec
push
mov
pop
in
cmpps
into
lcall
jecxz
bswap
adc
mov
int3
popf
sbb
gs
imulb
ss
jle
mov
in
jae
and
lahf
push
inc
mov
arpl
sbb
pop
push
dec
aaa
mov
add
lds
add
and
inc
mov
lcall
sahf
or
loop
imul
mov
stos
dec
popa
nop
adc
mov
jl
sub
test
or
in
scas
jl
pop
dec
cltd
mov
sbb
sbb
inc
mov
dec
scas
cwtl
inc
sub
push
jl
or
imul
call
sub
cltd
popa
popf
mov
icebp
dec
cmp
fs
stc
sbb
fsub
sub
sbb
adc
xchg
or
sub
dec
cld
les
add
push
jmp
add
mov
dec
inc
fcoml
mov
mov
int3
and
pop
int
dec
lahf
cmp
jp
sbb
and
cld
stos
cs
enter
js
sub
push
int3
sbb
jns
sbb
daa
ds
out
mov
ja
add
push
imul
jae
pushf
cmp
push
ljmp
jp
add
stc
jnp
sbb
jge
sub
clc
in
push
cld
fs
lcall
dec
dec
inc
decl
cs
int3
mov
pop
mov
insb
mov
dec
xchg
fs
and
adc
subb
movsl
mov
push
iret
fwait
pop
lods
repnz
enter
cmp
adc
cmpsb
sahf
or
dec
xor
inc
adc
adcb
out
in
cmpsb
jp
inc
mov
dec
sub
pop
ljmp
out
loopne
bswap
add
test
or
out
add
lret
or
lods
leave
mul
les
icebp
dec
dec
mov
inc
mov
push
push
orl
jo
or
leave
push
int
cs
out
xlat
pushf
push
jae
das
ss
int
imul
incl
int3
and
or
xchg
and
push
push
sub
cmovnp
adc
adc
and
cmp
adc
mov
rcrl
or
test
in
push
mov
and
aam
push
sbb
xchg
in
push
shl
scas
rorl
dec
fwait
daa
add
jno
cs
lea
add
dec
xlat
push
inc
dec
pop
cltd
pop
cli
xchg
dec
test
jmp
sub
dec
test
int
scas
pop
add
mov
and
or
fs
arpl
or
and
pop
jb
shrb
or
fs
xor
cwtl
adc
cld
add
incb
test
jnp
imul
adc
dec
hlt
dec
push
orl
dec
jne
sbb
mov
xchg
or
jns
outsb
jb
js
cwtl
lea
lret
pop
ss
in
sbb
push
fmuls
lods
pop
or
cmp
sub
jmp
cmp
lea
or
outsb
or
push
stc
xchg
cmp
sub
xchg
ds
je
and
shr
je
cs
push
lea
pop
sbb
or
dec
xchg
or
enter
mov
dec
sub
mov
jno
popf
icebp
ret
mov
sbb
lcall
dec
adc
mul
mov
sub
inc
sub
iret
les
sbb
lcall
xchg
sub
pop
dec
in
sbb
enter
dec
pop
pushf
clc
sbb
fisubrs
test
xchg
sbb
cmp
mov
sbb
jnp
pop
sbb
mov
xchg
les
popf
pop
add
stos
sbb
dec
cmpsl
sub
std
dec
and
ficompl
or
cld
inc
lahf
push
mov
cmp
shrl
lar
sub
in
ficoms
sub
and
adc
inc
pop
imul
cmp
std
cmp
push
fcomps
mov
pop
or
inc
xor
movsl
fimuls
push
loopne
add
push
in
xchg
aaa
lret
lds
cmp
insb
enter
inc
push
dec
add
xor
xchg
out
xor
idivb
pushf
mov
sbb
jnp
das
std
addl
pop
sbb
mov
faddl
int3
sub
jmp
push
add
mov
sub
adc
inc
es
aam
out
out
sbb
loopne
or
jae
xor
iret
jmp
dec
dec
mov
mov
mov
add
push
jns
inc
sub
mov
dec
iret
data16
pop
test
lcall
test
sbb
push
add
in
xchg
inc
rcll
icebp
iret
dec
das
rep
cmp
xchg
ljmp
add
or
pop
sub
in
int
pop
in
js
pop
sti
repz
in
add
add
jge
inc
sub
xor
jne
mov
stos
jae
sub
mov
sub
cmpsb
dec
xchg
les
or
in
mov
and
lds
xor
jge
pmulhw
in
push
push
rep
jge
inc
mov
in
dec
xor
js
mov
jbe
ret
sub
dec
lret
sbb
cmc
mov
xchg
gs
cmp
out
push
or
sub
cmp
fcomps
fstpt
push
cmp
jp
pop
loope
das
jns
in
sub
or
inc
andb
loop
or
es
cmp
push
sbb
adc
pop
lds
pop
xchg
icebp
cmp
and
jg
lret
and
imul
pop
pop
fistpll
push
dec
testl
add
rolb
pop
les
js
add
jmp
jne
jbe
adc
decb
pop
enter
lea
mov
incb
mov
sbb
aaa
mov
sub
mov
fisubrl
mov
fwait
or
outsb
xchg
sub
cmp
es
aam
add
pop
jne
jne
pop
jecxz
or
clc
adc
push
pop
ja
ljmp
imul
das
xor
dec
enter
inc
push
sub
lea
and
jp
jnp
cmp
addl
ret
aaa
adc
adc
pop
out
scas
gs
test
je
or
mov
test
mov
cmp
rcrl
adc
xchg
aas
cmp
sub
mov
push
jbe
sbb
sbb
add
aas
in
bound
and
adc
add
sbb
rorl
ljmp
gs
lcall
sti
adc
dec
mov
lahf
rcrl
add
ljmp
imul
adc
cmpsb
sub
adc
sub
inc
inc
shrb
push
jmp
lret
or
add
or
cmp
icebp
mov
inc
xchg
test
xchg
jp
iret
or
in
cmp
js
jp
movsl
sub
loop
fs
aas
test
in
pop
dec
out
adc
add
pop
notb
fisttpll
test
sub
xchg
ror
js
js
inc
sbb
mov
popf
clc
add
repnz
lret
mov
sbb
ja
inc
and
lahf
push
aad
push
jno
test
adc
xor
push
in
and
pop
lods
xor
prefetcht2
shll
mov
pop
or
lods
add
mov
sub
test
icebp
sbb
sub
add
fmulp
xor
jnp
std
xchg
pop
add
pop
inc
arpl
jae
dec
out
sarl
sbb
push
lret
inc
sarl
adc
idivb
in
inc
push
or
pop
xchg
orl
sbb
sbbl
js
add
push
add
rclb
pop
out
xor
mov
clc
roll
in
lea
roll
add
cmp
rcrl
mov
and
add
in
test
adc
faddl
nop
daa
jmp
pusha
xor
push
out
inc
fwait
sbb
adc
pop
cmp
adc
push
out
aas
dec
in
dec
ljmp
push
out
daa
pop
dec
xor
rcpps
fwait
push
loop
and
pop
aam
in
outsl
push
fs
mov
lock
pop
pop
dec
int3
fstl
rorl
stc
aam
adc
inc
psubb
fs
sub
imul
fidivl
das
add
in
icebp
dec
dec
inc
xlat
lea
inc
xchg
out
les
adc
mov
jnp
and
pop
lods
add
mov
inc
call
mov
cmp
lret
inc
jl
sub
jbe
pop
testl
dec
add
jnp
mov
popa
sbb
repz
imul
ss
dec
dec
sbb
push
loop
push
add
pop
add
cmp
cmp
in
iret
adc
pop
and
cmpsb
add
in
inc
xorb
mov
lret
jae
js
inc
ja
ss
enter
daa
mov
pop
dec
inc
nop
mov
daa
sub
mov
fs
test
push
xor
movsb
lea
sub
or
sbb
movsl
dec
faddl
mov
push
scas
cwtl
shlb
add
clc
mov
mov
cmp
lcall
adc
lret
in
enter
inc
int
data16
push
xchg
sbb
in
mov
and
cli
ror
mov
push
negl
arpl
sbb
lea
add
dec
push
xchg
jns
xor
or
mov
jp
pop
mov
push
xchg
repnz
setb
sbb
push
sub
jnp
push
nop
leave
dec
rcll
jnp
sub
adc
inc
mov
ficoml
mov
dec
adc
negb
pop
js
leave
insl
sub
fstps
scas
hlt
dec
or
dec
mov
es
jge
xor
cmp
mov
aaa
push
test
jb
lea
aam
sub
pop
jg
sub
in
cmp
mov
inc
inc
mov
fmull
outsb
xchg
repnz
fcoml
cmpsb
mov
nop
sbb
xchg
xchg
sub
add
in
insl
sub
das
pop
pop
mov
shrb
or
mov
stos
aam
mov
inc
adc
leave
pop
or
dec
inc
add
or
repnz
cmp
xor
ja
and
mov
in
push
add
sarb
sbb
fmuls
rcrb
fwait
pop
hlt
or
enter
stos
int3
add
orl
pop
bound
cld
sbb
ret
clc
dec
test
sub
call
sbb
jb
xchg
mov
call
mov
aam
or
addl
jae
and
add
cmpsl
lods
add
aad
jns
jno
clc
outsl
lcall
sbb
sub
push
push
stc
cmp
mov
add
stc
sub
sbb
sbb
push
icebp
push
mov
lahf
and
rdpmc
in
les
mov
cmp
xchg
or
fwait
test
out
sub
fmull
cmp
pop
push
mov
xor
int3
inc
out
fsubl
mov
jl
out
add
enter
pop
cld
sub
imul
fmul
xor
or
aaa
mov
or
jne
in
mov
jnp
scas
and
inc
iret
testl
mov
dec
sub
test
add
adc
dec
or
or
dec
xchg
push
xor
and
sbb
xchg
je
popf
xchg
sti
sub
enter
pop
or
dec
add
dec
inc
mov
add
cld
xchg
imul
or
or
das
sub
pop
jl
push
test
cld
int3
ljmp
xor
pop
dec
push
jno
scas
insb
nop
push
jge
sub
xor
into
push
push
fimull
icebp
pop
or
das
mov
or
cmp
rol
lret
adc
jnp
lahf
popa
das
les
repz
inc
cltd
add
lods
xchg
xor
xor
aas
cs
lahf
faddp
imul
push
push
or
sbb
daa
icebp
push
mov
xor
adc
add
xchg
test
xorl
adc
int
gs
out
repz
cld
add
push
nop
int3
popf
out
sbb
in
dec
addb
in
lock
in
push
xchg
jmp
cmpsl
pop
push
lods
push
sbb
inc
inc
lret
push
push
pop
sbb
js
nop
xor
jmp
sbb
jecxz
subb
inc
loopne
cltd
inc
sarl
xchg
shlb
sbbb
insl
test
movb
mov
jno
clc
test
hlt
mov
ss
and
mov
icebp
add
add
js
jp
dec
and
add
xor
hlt
je
lret
in
out
sbb
notb
repnz
and
in
xor
pusha
mov
pop
pop
in
or
mov
xchg
jnp
pop
stos
addl
xchg
push
or
gs
xchg
sub
dec
outsl
test
insb
dec
jns
int3
jno
scas
and
pop
mov
in
or
sarb
inc
xchg
es
rorl
inc
movsl
mov
enter
cvtpi2ps
mov
pop
sbb
lcall
iret
leave
and
out
sbb
fcomps
test
push
sbbb
pop
sub
dec
push
sbb
fiadds
sbb
xor
inc
repnz
rcrl
and
enter
cmpl
in
or
imul
lea
out
xor
test
sub
mov
iret
outsl
imul
adc
add
pop
lock
in
movsb
mov
adc
cmpsl
and
in
mov
loop
fwait
sbb
outsl
cmp
sub
iret
inc
jge
mov
sub
push
imul
add
clc
mov
or
add
fdivrp
or
mov
cmc
adc
push
sbb
pop
add
xlat
sbb
mov
push
mov
add
add
jo
inc
ljmp
and
xchg
inc
pop
adc
adc
adc
lock
int
sub
inc
or
fcoms
pop
pop
push
loopne
pop
inc
in
popf
push
pop
in
faddl
fdiv
and
in
mov
xor
inc
xchg
jl
cwtl
cmp
sub
mov
add
dec
pop
aad
xchg
pop
std
add
test
nop
jae
inc
dec
and
and
sbb
push
adc
sbb
rorl
inc
add
sbb
in
data16
in
adc
mov
jae,pt
pop
add
jl
mov
test
movsb
test
add
ss
fistl
and
in
jg
pop
sbb
lcall
sub
push
lea
jl
xchg
lods
outsb
xchg
imul
pushl
negb
pop
inc
pop
enter
pop
xchg
iret
movsb
push
sbb
testl
aaa
aaa
int
scas
ds
jle
movsb
pop
movsl
push
cmpsl
pop
mov
imul
mov
repz
or
gs
jge
lods
or
push
insl
and
mov
cmp
adc
and
jo
fisttpll
lcall
sarb
loope
cmp
mov
mov
pop
cmpsl
scas
or
fs
xor
int
not
xor
in
xchg
inc
add
gs
subl
scas
clc
push
mov
lea
cmp
je
sbb
pop
dec
out
pop
imul
ja
iret
and
stc
jbe
pop
out
and
or
std
pop
push
or
add
dec
and
rclb
in
in
mov
inc
push
cmp
mov
jno
decb
inc
jbe
or
int3
pop
sub
xor
imul
add
and
add
in
das
mov
xchg
adc
stos
lods
sbb
rol
push
mov
mov
dec
push
inc
nop
pop
sahf
cmp
pop
in
cmp
test
add
mov
pop
cmp
fimuls
sahf
pusha
aam
sbb
pushf
test
repz
aas
jae
fwait
in
bound
das
lods
cmp
lret
cmp
sub
xchg
call
add
addr16
imul
jne
jg
mov
and
sti
mov
js
inc
test
fwait
pop
sub
pop
push
jmp
pop
jns
mov
fldt
and
cmp
repz
jnp
adc
in
adc
push
xchg
shrb
in
test
dec
ja
shrb
xchg
fdivl
lods
sub
sarb
pop
fmuls
sbb
and
pop
xor
sbb
jo
sbb
pop
sub
int3
fcompl
test
push
add
out
sub
and
cs
push
jnp
aaa
xor
jle
sti
add
add
sub
out
incl
sub
nop
sbb
xor
rcll
pushl
in
xchg
sub
pop
ret
mov
test
cld
lret
pop
inc
dec
mov
jbe
rcrl
xorb
xchg
mov
fsubrl
sbb
and
push
xchg
mov
dec
mov
xchg
xchg
in
and
sub
out
repnz
shl
or
imul
mov
cmp
les
aam
out
pop
aaa
and
add
out
lea
inc
mov
clc
lret
sub
push
xor
mov
jo
jns
out
pop
mov
push
mov
push
sub
jp
rorl
int3
push
lea
cmpsl
jbe
jo
push
and
mov
fildll
xor
sub
pop
out
or
dec
shll
das
mov
and
fisubl
pop
pop
add
adc
cmp
or
pop
pop
shl
xor
inc
inc
fisttpl
mov
fcompl
mul
lcall
inc
inc
pop
pusha
mov
std
xchg
popa
aaa
inc
pusha
mov
test
setae
test
hlt
fimuls
and
mov
imul
popa
sub
dec
adc
mov
and
or
es
add
orl
dec
jbe
sbb
aas
iret
cmc
or
cmp
lods
mov
cmp
or
mov
mov
andl
in
arpl
testb
cmp
jo
sub
pop
mov
dec
cs
aad
bound
push
pop
int
push
pushl
enter
sbb
pop
jnp
cs
les
hlt
xor
negl
addr16
negl
mov
add
inc
fsubrs
jb
lods
stc
cmp
movl
das
pop
jnp
push
jl
subl
mov
icebp
decb
iret
mov
lret
or
js
jl
lock
jnp
adc
sahf
xchg
nop
sbb
ffreep
xor
push
iret
lret
mov
repz
popa
dec
out
jl
sbb
add
fnstsw
pop
add
inc
sub
out
stc
sbb
sub
cltd
adc
jnp
dec
sahf
cmpsb
dec
clc
cs
mov
lock
call
pop
sbb
ds
pop
sar
sbb
xor
gs
cmpsl
imul
pop
in
aam
loope
push
mov
bound
sarb
mov
scas
sub
jge
sub
les
ljmp
push
and
shrb
sub
loop
jp
xor
sub
pop
insl
fsubrp
aas
xor
push
push
mov
sub
adc
popf
push
dec
push
dec
cmp
ret
iret
std
imul
xor
gs
sbb
add
insb
xor
test
jae
cld
mov
cs
icebp
std
mov
ret
add
sub
hlt
imul
and
test
into
in
pop
sub
jge
ja
mov
inc
data16
lcall
sbb
adc
jnp
mov
addl
sub
fdivrl
lahf
pop
mov
xchg
push
lock
push
loopne
lahf
push
cld
insb
clc
addr16
hlt
outsl
sar
adc
arpl
aam
pop
stc
jle
rorl
and
cmpsl
dec
ja
fsub
bound
sub
fmuls
add
pop
lcall
jae
js
test
xchg
push
rolb
push
ret
stos
lock
jg
inc
add
push
push
jl
jno
push
js
cmp
nop
in
leave
sub
icebp
jl
imulb
sbb
es
pop
and
mov
add
lock
mov
sub
dec
in
pop
fs
adc
insl
sbb
sub
rcll
data16
dec
mov
popf
jg
fsubp
and
mov
xchg
dec
fdivl
or
aaa
inc
or
xor
sub
pop
in
shll
mov
ret
ss
cmp
cmpl
or
data16
sbbb
test
inc
mov
dec
mov
ficoms
sbb
lcall
sub
mov
es
push
dec
popf
jns
cmpsb
ss
dec
jg
in
and
mov
pop
repnz
push
dec
loop
test
xchg
orb
mov
js
mov
in
ds
jge
inc
cmp
inc
ficompl
out
repnz
or
push
lahf
bound
xor
mov
test
adcb
jmp
pop
sub
les
or
insl
test
orl
and
xchg
test
jge
xchg
push
test
in
lods
cmp
es
xchg
jmp
xchg
arpl
dec
gs
xchg
bound
or
jae
std
stos
fbld
and
pop
pop
clc
out
add
ljmp
push
cltd
insb
call
ret
push
mov
cltd
mov
sub
lret
cmp
stos
popa
xor
and
test
jnp
sub
or
add
cmpsb
push
es
cmp
aas
dec
jbe
sahf
das
dec
adc
dec
mov
repnz
rol
aaa
pop
int3
test
dec
adc
pop
and
mov
dec
sub
dec
mov
ss
daa
fmull
lahf
mov
xchg
int3
sub
mov
or
in
aam
lret
sbbb
xchg
clc
mov
js
jle
pop
mov
jno
hlt
cld
fstps
stos
push
lea
in
and
outsl
sub
push
push
lock
add
sbb
add
push
leave
movl
stos
add
ret
mov
loope
in
movsl
mov
lahf
fdiv
loopne
push
mov
pop
add
ljmp
jne
mov
or
mov
jno
and
int
xlat
fcomps
or
dec
mov
mov
cmp
in
test
cltd
mov
push
push
ja
mov
inc
sbb
jnp
outsl
lret
or
xchg
mov
lea
xchg
dec
cmpsb
js
xchg
dec
cmp
stc
push
and
add
xchg
adc
adc
dec
jl
adc
hlt
sub
repz
popw
pop
in
adc
test
dec
test
mov
lods
fisttps
sub
adc
dec
adc
repz
jl
jle
sub
push
iret
or
imul
xor
jb
xorl
test
xor
aam
addr16
or
push
pop
or
call
mov
lods
add
cld
mov
add
and
test
loopne
adc
aam
fmul
xchg
xlat
sub
jbe
je
sub
ljmp
aad
cmc
jle
inc
xorl
sarb
popf
add
int3
inc
jnp
pop
push
xchg
fwait
rorb
pusha
xchg
in
sub
add
pop
call
cmp
aas
and
and
sbb
pop
mov
jmp
jge
test
and
mov
or
out
popl
xchg
jae
jnp
or
dec
add
cwtl
daa
sbb
test
dec
cmpsl
cltd
xor
dec
jge
xor
mov
inc
push
aaa
or
insb
nopl
mov
js
xchg
dec
and
in
cltd
leave
dec
popl
shr
arpl
fdivr
jnp
jl
dec
adc
dec
add
cmpl
jbe
inc
jg
bound
into
cmpsb
addr16
push
das
jecxz
movsb
cmp
cwtl
sub
dec
adc
pop
ljmp
pop
pop
adc
jbe
inc
dec
lods
mov
and
jmp
xor
pop
mov
fs
shrl
repnz
stos
loopne
add
pop
jg
or
jecxz
jl
dec
adc
icebp
cmp
clc
fs
test
mov
jne
and
enter
mov
dec
lcall
pop
sub
fdivs
push
pop
and
pop
jge
outsl
jge
in
sub
push
or
cld
iret
icebp
and
sti
mov
adcl
cmp
imul
imul
lock
mov
ss
push
xchg
sub
dec
icebp
and
add
stos
dec
ss
sahf
sbb
in
sti
in
sub
lea
cmpsl
filds
inc
aaa
pop
xchg
or
in
mov
insl
fsubs
lods
aam
sti
test
sub
or
fldcw
mov
pop
add
push
xchg
testb
sbb
vpcomuq
hlt
dec
add
mov
adc
es
sbb
push
sbb
mov
addl
pop
sub
sub
repz
sub
and
fs
pop
lea
movsl
mov
mov
dec
jnp
fstpt
push
fs
mov
mov
dec
xchg
jg
out
lods
xchg
ljmp
scas
or
or
cwtl
push
xor
mov
dec
mov
push
lcall
mov
out
popl
pop
dec
sub
pushf
int3
fs
jge
sub
mov
les
push
dec
mov
xchg
test
add
or
push
jge
jmp
sbb
cmp
mov
les
mov
mov
sbb
pushw
data16
inc
pop
sub
cmp
jno
and
pop
mov
clc
jae
fisttpll
mov
outsl
or
out
add
ffreep
aaa
mov
negb
lods
add
jbe
dec
insb
add
bound
cmp
test
dec
sbb
sbb
lahf
test
and
test
insl
test
add
int3
cld
cmp
pop
data16
test
add
pminub
cwtl
xlat
in
and
lods
sub
outsb
pop
push
jl
sbb
jge
jbe
sub
mov
outsl
mov
in
and
sbbl
dec
adc
jmp
fwait
jbe
js
incb
adc
mov
pop
aam
push
das
orl
add
into
or
test
sbb
sbb
or
pushf
cmp
lea
scas
xor
inc
push
or
imul
inc
push
and
pushf
lock
imul
mov
xor
rorl
lea
dec
gs
push
xchg
inc
or
push
loope
mov
add
bswap
jae
or
stc
sbb
data16
cld
xor
ret
lods
movl
clc
cmc
inc
sti
xchg
pop
xor
fwait
dec
adc
pop
and
sub
stos
jns
mov
sub
jo
in
sub
ss
cwtl
sbb
sbb
xor
dec
fs
insb
jnp
bound
fwait
add
cmpsb
adc
xor
pop
xchg
mov
push
push
cs
nop
ss
pop
aaa
stc
mov
in
push
das
and
dec
and
dec
hlt
jno
jecxz
arpl
insb
sbb
sbb
rolb
or
push
dec
inc
jbe
push
ljmp
pushf
pushf
testb
int3
add
sbbl
sub
andb
test
and
xchg
test
or
inc
mov
aas
inc
sub
and
xor
cmp
rcr
outsl
dec
mov
js
ret
pop
lahf
lahf
sub
pop
cld
xchg
pop
lea
cli
scas
pushf
es
loop
push
out
dec
and
and
or
aam
xchg
pop
cmp
aad
cli
pop
cmpsb
cmp
jno
lods
lds
enterw
xchg
sbb
test
jo
outsb
leave
pop
xchg
icebp
cs
std
xchg
pop
js
lds
aaa
inc
cmp
cmp
pop
ja
dec
pushf
sbb
enter
adc
push
jl
pop
in
xchg
adc
aad
mov
dec
xchg
adc
pop
mov
mov
push
es
push
xchg
test
loopne
shrl
pop
cmp
mov
enter
in
ja
hlt
mov
enter
mov
pop
or
pusha
icebp
dec
jno
pop
pop
push
stos
inc
std
fdiv
push
cmp
push
mov
sbb
cmp
test
mov
xor
sub
sahf
pop
cmc
sub
repz
dec
push
jno
sub
rol
and
pop
aaa
pop
or
mov
and
push
lcall
idivl
push
jle
ds
cmp
pop
fstl
shr
pop
pop
popl
in
ja
or
scas
push
dec
adc
int
or
inc
cli
push
fs
into
or
dec
stc
icebp
lock
adc
jl
xor
sbb
xor
in
mov
adc
scas
push
mov
push
das
imul
rdtsc
cltd
leave
sub
pop
outsl
clc
cmp
data16
cmp
insl
in
push
fwait
lcall
cmc
add
loopne
mov
cmp
push
xor
dec
pusha
jmp
cld
movsl
fisubs
xchg
and
jge
jae
and
jbe
in
imulb
test
aaa
push
loope
push
fs
push
testb
or
and
inc
push
adc
pop
int
in
pushf
pop
mov
jl
or
cltd
or
dec
and
daa
test
push
dec
bound
sub
loopne
adc
cld
and
lods
int
std
std
xchg
ja
or
lret
ret
subb
dec
cs
adc
movl
dec
push
add
jle
aad
gs
outsl
sbb
loopne
mov
lea
loope
lret
jecxz
int
sbb
rcll
inc
xchg
mov
sub
push
stos
in
insl
push
mov
mov
push
add
push
dec
fwait
je
xor
mov
inc
jl
in
movsb
mov
xor
push
ret
sub
xlat
in
jbe
or
sub
dec
sbb
aad
lds
inc
fistl
mov
xor
into
aas
push
and
fwait
sbb
xor
xchg
xchg
sbb
fs
inc
aad
fcomps
mov
movb
xor
adc
mov
je
mov
roll
jle
pop
loop
push
incb
mov
jnp
mov
iret
inc
out
add
cmovl
pop
jbe
mov
pop
call
sbb
sub
cwtl
mulb
cmp
inc
movsb
int3
and
scas
xchg
icebp
xchg
lret
stos
push
dec
mov
sub
add
or
jle
in
cmp
or
dec
xor
fwait
in
jns
sbb
push
xchg
inc
mov
cmc
shlb
aas
adc
cmpsl
push
movsl
sub
mov
or
stos
ds
adc
cwtl
xchg
bound
in
sti
pop
in
adc
dec
sbb
das
test
sbb
push
in
out
cwtl
xor
add
imul
adc
sbb
jmp
adc
xor
pop
pushf
sub
and
incl
in
xchg
sbb
xor
leave
testb
in
adc
popa
dec
adc
push
mov
mov
enter
lcall
pop
xchg
daa
in
sub
das
xchg
inc
scas
test
mov
lahf
mov
jmp
repnz
push
clc
idiv
jo
add
test
xor
mov
movsb
and
sub
xor
xchg
jl
aas
adc
in
pop
mov
icebp
cmp
bnd
in
inc
pop
sbb
and
outsl
xor
jmp
push
inc
dec
cltd
lock
repz
js
leave
or
adc
icebp
pop
mov
push
int3
sub
mov
clc
push
jp
or
in
adc
adc
inc
sub
jecxz
sub
dec
cmpsb
stc
ficoms
in
jmp
cmpsl
loopne
inc
push
mov
mov
lock
lcall
movsl
fstpl
sbb
xchg
inc
lcall
aas
das
push
mov
sub
loop
jns
and
xchg
fdivl
jns
lds
iret
cmc
cmp
and
add
mov
test
mov
imul
jl
xchg
and
adc
push
cmp
movsb
sbb
sbb
test
mov
add
pop
movsb
sbb
adc
adcl
or
int
sbb
imul
loop
sub
or
jb
pop
mov
call
cwtl
sbb
int3
pop
mov
shll
jno
fdiv
sbb
das
or
dec
or
aam
dec
or
div
test
xchg
das
testl
mov
fdiv
call
or
int
mov
pop
sbb
xorl
xchg
xchg
andl
mov
jb
orl
or
dec
das
sub
leave
dec
or
add
mov
movhps
or
mov
call
in
out
jbe
xlat
inc
push
aam
clc
push
mov
popf
push
rolb
iret
fsubr
jo
cltd
sbb
or
stos
mov
sbb
sub
dec
push
or
pop
mov
rolb
xor
jo
iret
mov
cmp
mov
fisttpll
or
lea
or
iret
scas
dec
icebp
cmp
fdivrl
divb
out
js
insb
or
addb
mov
cltd
je
jbe
in
scas
xor
add
xor
dec
sub
lea
cs
cmp
mov
mov
pushf
pop
int3
leave
pop
sbb
fiadds
jecxz
mov
rcl
push
mov
test
iret
cmpsb
and
mov
sbb
mov
ret
sbb
cwtl
testb
daa
pop
pop
stos
jae
dec
or
push
enter
xchg
jae
subl
and
fcmovbe
sbb
pop
pop
mov
inc
enter
jns
test
pusha
push
notb
lret
addl
mov
sub
dec
outsl
je
push
call
decl
jmp
scas
sti
fidivl
jno
addl
or
xchg
adc
dec
shlb
push
call
dec
cmp
sbb
sbb
mov
sub
mov
jno
bound
mov
or
test
jge
mov
xchg
inc
mov
cli
xlat
je
inc
aad
je
loop
into
mov
dec
sarl
mov
outsl
push
jecxz
sbb
enter
mov
shrb
fsubl
mov
jns
push
push
lods
adc
adc
mov
push
and
xchg
push
add
mov
adc
insl
cmp
lds
and
xor
push
xchg
inc
sahf
gs
jb
pop
nopl
jp
nop
dec
sbb
test
js
mov
cmpsb
inc
pop
sbb
mov
mov
pop
and
inc
mov
nop
stos
mov
xlat
pop
xor
mov
call
mov
data16
mov
add
testl
js
jne
xor
add
ljmp
add
out
lahf
dec
sub
leave
ja
add
iret
int
ljmp
paddw
scas
int3
sbb
sbb
mov
sbb
push
jne
cmp
cmp
push
sbbl
imul
add
cvtps2pi
xor
or
psrad
xchg
add
mov
add
pop
pushf
sarb
cs
fsubl
shrb
push
pop
pushf
sub
cmp
fs
clc
dec
in
cmc
cmp
in
in
sub
inc
fcompl
mov
push
dec
mov
xchg
sbb
js
cld
sbb
js
hlt
sbb
js
orl
leave
or
cmp
sti
adc
pop
and
xor
dec
inc
add
pushf
stos
inc
add
adc
and
and
cmpl
fdivl
lcall
repz
mov
bound
xchg
cld
stos
cwtl
pop
testl
xchg
pop
aam
jbe
rorb
test
cmp
loope
mov
sub
mov
dec
jae
cwtl
pushf
and
inc
test
loope
mov
inc
adcl
add
pop
push
jo
mov
cltd
and
adc
pop
adc
dec
sbb
dec
add
dec
or
sub
pop
les
inc
pushf
dec
mov
cmpsb
xor
push
sbb
fpatan
xor
dec
mov
adc
push
insb
mov
aaa
or
nop
sahf
pop
adc
cwtl
adc
mov
xor
daa
xor
ja
cld
arpl
and
pop
adc
mov
xchg
cwtl
roll
inc
in
in
cmpsb
or
lods
mov
int
add
dec
pushf
daa
push
fwait
sbb
mov
push
cmpsb
mov
iret
and
jl
loopne
and
inc
rcpps
xchg
push
pop
ds
shlb
in
pop
jae,pn
inc
sub
cmp
adc
cmp
cwtl
clc
or
xchg
out
lahf
adc
in
int3
lock
inc
cmp
pop
mov
mov
loope
adc
pop
add
xchg
mov
jmp
popa
aad
sbb
mov
stc
fisttpl
add
xlat
icebp
sahf
into
sub
mov
leave
insl
aad
enter
ja
hlt
mov
jne
xor
xor
ljmp
sbb
or
pop
pop
in
push
mov
push
lods
sbb
out
or
or
or
inc
cli
leave
lret
movsb
movhps
add
mov
ljmp
fimull
in
js
in
insl
jge
mov
and
adc
test
jb
mov
xor
cmp
or
das
push
bound
out
mov
add
mov
aam
add
mov
add
fwait
cmp
fnsave
mov
or
jle
scas
jns
jo
in
repnz
in
pop
inc
add
clc
aas
ficoms
inc
subb
ja
idivb
xchg
pop
xor
notl
or
stos
push
inc
cmpsb
loopne
and
dec
jmp
lods
sub
in
xchg
aam
and
iret
int
and
xchg
xchg
add
xor
adc
lea
cmp
xor
or
dec
das
sub
dec
sub
sbb
mov
pop
inc
jae
or
dec
xchg
push
sub
jns
daa
inc
cltd
push
xchg
sbb
aaa
inc
xor
popf
dec
adc
pop
sbb
inc
jne
jg
in
sarb
inc
cmpsl
xchg
xorb
cmp
xor
and
bound
scas
cmc
pop
aad
inc
mov
cmp
cmpsl
add
or
xchg
in
sbb
pop
test
push
movsb
lea
mov
xchg
dec
mov
sbb
sti
or
mov
test
adc
jl
not
jle
sub
mov
and
mov
negb
or
mov
fucom
inc
rolb
push
jno
shl
imul
or
pop
cmp
sub
pop
out
dec
add
pop
rcrl
cwtl
dec
je
xchg
mov
xor
dec
push
sbb
es
cli
mov
in
xor
mulb
fs
popf
mov
push
test
push
decl
add
ror
dec
lock
sti
icebp
pop
data16
enter
aad
sarb
clc
mov
xchg
ss
scas
cmpsl
push
addb
lock
test
mov
jg
sbb
xor
lahf
ds
jbe
mul
inc
mov
pop
in
aad
xchg
adc
xchg
popa
test
into
dec
repz
stos
std
inc
mov
pop
add
dec
cltd
sbb
push
pop
push
mov
xor
jnp
or
sbb
dec
xor
lahf
adc
outsl
call
das
cwtl
lock
xchg
lahf
daa
in
push
cmp
sbb
add
loop
mov
movsb
in
xchg
sbb
push
inc
insl
out
mov
fists
rcr
add
imul
ds
popf
sbb
out
sbb
in
push
std
cmp
sub
push
sbb
push
je
push
add
sbb
inc
data16
dec
sbb
dec
fiaddl
and
add
pop
add
sbb
and
mov
cmp
sub
je
lcall
and
popf
inc
dec
testb
lahf
outsb
enter
and
lahf
out
pop
repnz
mov
stos
adc
shl
lahf
repnz
out
or
mov
js
inc
in
cmp
mov
xchg
test
and
fldenv
sbb
das
mov
mul
sub
cmpsl
pop
in
nop
aaa
cs
add
inc
xor
outsl
sub
pop
test
inc
lcall
jbe
pop
in
xchg
icebp
andb
adc
adc
cld
or
mov
call
lock
push
bound
inc
daa
stc
or
inc
dec
jl
mov
jb
push
aas
outsl
jecxz
lcall
add
inc
sbb
pop
mov
sti
adc
inc
js
adc
jnp
jle
sub
popf
cmc
cmp
dec
fistl
in
adc
les
sub
xchg
dec
push
mov
push
sbb
cltd
mov
xchg
add
xor
sub
adc
inc
mov
jecxz
cmp
mov
loopne
fnstenv
mov
adc
xchg
add
inc
jmp
add
lcall
fcomp
adc
sub
imul
or
or
or
ljmp
xor
lods
pushf
adc
add
adc
js
pop
push
push
sbb
test
mov
test
or
mov
loop
negb
lahf
gs
ds
push
inc
cltd
sub
mov
mov
lock
lds
cmp
pop
lret
dec
push
loope
jno
fmull
adc
int3
push
testb
push
cld
push
out
dec
pop
sub
test
adc
daa
mov
in
mov
mov
leave
das
jp
jle
jne
popa
stos
and
out
fcoms
mov
xor
and
inc
push
add
inc
lret
sti
pop
les
sbb
add
mov
mov
ds
mov
sbb
repnz
adc
pushf
ss
int
sbb
or
or
add
sti
test
pop
imul
mov
pop
mov
mov
test
ficoml
cwtl
inc
or
sub
addl
push
retw
inc
xor
add
jnp
loopne
cmp
neg
pushf
adc
movsl
sub
mov
aaa
push
mov
enter
aaa
adc
xchg
dec
inc
inc
or
jmp
cmp
ss
inc
xchg
push
hlt
mov
mov
js
popa
out
xchg
cwtl
mov
pop
sub
mov
ret
sbb
inc
and
packssdw
mov
lcall
mov
and
cltd
fcomps
loopne
cmpsl
pop
imul
sub
mov
xorl
add
mov
mov
enter
jle
mov
fadds
jo
dec
jle
mov
movsl
clc
jo
xchg
adc
or
inc
jno
roll
jb
gs
add
push
jno
adcb
xchg
in
gs
inc
fimull
in
pusha
cld
xchg
addr16
jg
adc
leave
in
stc
lahf
and
sub
test
scas
dec
test
sub
dec
adc
mov
mov
loope
adc
ljmp
add
push
je
sbb
or
inc
pop
out
jb
sbb
in
xor
lahf
add
addb
stos
sbb
mov
movsb
mov
clc
call
push
push
stos
rclb
inc
lret
scas
hlt
pop
insl
mov
in
cmc
sub
jne
flds
lock
movsl
aam
rcrb
les
nop
cld
in
push
xor
ror
dec
adc
inc
aam
mov
ret
mov
xor
repnz
daa
jb
sbb
sub
add
out
sub
sub
or
imul
fisubs
ficomps
dec
clc
adc
bound
ret
dec
xchg
inc
push
jp
push
dec
fs
aaa
xchg
out
cmp
jp
and
push
sbb
test
or
add
jl
mov
inc
outsb
cmp
xchg
jle
pop
in
adc
xchg
iret
cmp
mov
add
xchg
clc
negb
cld
mov
loopne
cmp
add
dec
call
jle
or
or
adc
sbb
or
or
sub
test
fmuls
pop
dec
aas
lahf
scas
lock
cmp
add
adc
or
stos
jp
pop
adc
mulb
cld
add
scas
cltd
xlat
test
and
push
xchg
add
inc
rcrl
popa
iret
mov
mov
cmp
and
je
orb
jp
adcb
add
ret
sub
sarl
push
cwtl
jae
mov
xor
or
mov
dec
mull
jp
adc
inc
jecxz
pop
jns
push
bound
push
and
xor
test
sbb
shlb
bound
push
xor
sub
push
in
xor
fnsave
icebp
mov
adc
add
lcall
xchg
mov
sbb
cld
add
aas
sub
adc
mov
lds
pop
add
adc
adc
add
pop
aaa
add
and
dec
and
fcoml
out
scas
fdivs
scas
sbb
dec
lret
in
test
fsubl
lret
mov
and
test
pop
sub
mov
lret
dec
xor
or
paddq
add
int3
push
add
cmp
call
cmpsb
jo
dec
or
pop
and
or
xor
flds
sub
fisttps
std
mov
dec
js
adc
or
out
outsb
jmp
pushf
cmp
lea
xchg
cwtl
and
mov
or
test
paddb
pop
call
loope
push
and
out
adc
and
xor
stos
sub
fcoms
add
fmull
mov
xor
pop
jecxz
adc
mov
fidivl
addl
mov
sub
hlt
and
nop
addr16
xlat
adc
faddl
cmp
xor
nopl
lea
jg
insb
flds
dec
dec
into
pop
pop
aaa
or
mov
loop
lahf
sbb
jne
mov
repz
shll
or
cmpsb
sub
mov
add
imul
mov
adc
or
and
fmull
or
std
pop
pop
jae
cli
out
pushf
ret
adc
repz
jbe
pop
dec
adc
jp
add
dec
jne
in
mov
pop
cmp
das
fisubrs
loop
add
cmp
lock
adc
pop
fs
lcall
mov
sub
pop
sbb
adc
test
push
mov
mov
or
in
push
pop
in
scas
out
and
lahf
sub
or
fwait
sbb
xchg
xor
xor
inc
dec
test
xor
adc
loopne
xor
pop
mov
jecxz
add
sbb
pop
mov
push
jns
imulb
movzwl
add
pop
leave
pop
or
movsl
rorl
inc
push
pushw
cmp
inc
test
pop
divl
mov
in
lahf
das
clc
inc
mov
in
cmp
pop
xchg
cmp
xor
sub
push
jecxz
cmp
and
pop
xor
pop
pop
pop
xlat
pop
leave
and
push
dec
push
pop
sbb
popf
je
sbb
in
cld
popf
cmpsl
pop
adc
push
cmp
lcall
lods
mov
pop
mov
sub
pop
push
adc
mov
cmpsb
mov
jle
sbb
mov
pop
mov
ffree
mov
cmp
adc
dec
test
aad
imul
cmp
scas
xchg
mov
mov
lock
ds
jecxz
jne
pushf
cmp
outsl
jle
out
inc
jne
cmp
andb
push
adc
repnz
movl
ss
mov
dec
movsb
inc
hlt
orl
and
xor
dec
adc
scas
loopne
sub
bndstx
dec
out
add
pop
mov
insb
push
out
mov
or
fistpll
xlat
pushf
and
aam
xor
insb
push
jle
dec
sub
loopne
push
icebp
fldl
mov
sub
pop
lock
jl
clc
std
ss
push
sub
lret
in
or
xchg
lret
add
pushw
sbb
sti
sub
mull
test
inc
rclb
ss
pusha
pushf
add
call
hlt
in
ret
jecxz
push
add
sbb
mov
pop
xchg
mov
and
orl
sar
sar
jle
pop
lahf
xor
dec
mov
mov
and
xor
jno,pt
adc
push
lret
stos
outsb
in
jge
inc
call
add
mov
add
cmp
std
das
ds
xchg
push
scas
aas
jns
clc
fwait
sub
xor
sub
mov
loope
sub
insl
or
mov
push
aas
cmp
fistpl
dec
test
enter
aas
inc
adc
subb
xor
inc
pop
sbb
fwait
and
cmp
pushf
cwtl
jle
mov
cltd
mov
hlt
xlat
lods
and
push
arpl
xchg
hlt
pop
xchg
imul
sahf
rol
xor
sbb
notb
ret
pop
sub
sbb
jl
mov
ret
outsl
sub
shll
xor
jns
sti
sub
ljmp
fs
pop
out
push
lock
into
adc
pop
pop
pop
rolb
cmp
jg
dec
rorb
rolb
lret
xor
js
in
movsb
push
lods
ret
inc
pop
aam
cwtl
dec
add
pop
scas
les
mov
xor
or
sbb
jmp
lods
mov
xor
push
sbbl
or
out
sub
mov
mov
pop
lret
stc
add
les
mov
int
movsb
popa
push
pop
jnp
daa
mov
in
aas
stos
push
add
stos
js
das
das
das
mov
dec
xor
xor
mov
dec
dec
xor
jnp
enter
push
sub
js
fs
leave
jle
pop
dec
rcrl
jmp
push
inc
and
inc
dec
les
cld
nop
repnz
mov
rolb
and
in
sub
sbb
pop
jp
cwtl
jno
outsl
mov
jo
xchg
clc
jbe
fucom
inc
addl
pushf
jns
add
rorl
ja
je
ret
loopne
hlt
out
xor
xor
adc
div
mov
jp
mov
aaa
jl
dec
pop
in
xchg
sub
mov
xchg
ljmp
mov
fldl
push
jl
jno
daa
pop
ds
and
js
push
fbstp
pop
xor
jnp
das
aaa
xchg
xchg
push
add
jae
dec
das
sbb
pop
pop
jmp
pusha
lret
adc
dec
sub
scas
mov
or
jnp
pop
bound
sub
mov
shlb
and
aas
int
bound
movl
and
dec
mov
test
jo
and
mov
shll
and
pop
mov
dec
incl
pusha
xor
repnz
test
pop
or
inc
int
dec
mov
or
repnz
stc
xlat
out
out
push
or
test
movsl
dec
test
push
into
in
add
out
or
ret
lods
add
mov
loop
int
int
add
ret
loop
clc
jg
enter
aam
add
ss
and
add
in
sbb
int3
cld
enter
enter
dec
push
mov
push
xchg
lahf
pushf
sub
fwait
int3
aam
ret
mov
in
lock
push
int3
pop
test
leave
mov
das
push
xchg
js
xchg
lahf
pop
int3
inc
mov
push
scas
insb
rcll
cmp
adc
sub
and
xor
dec
dec
pop
and
int3
jecxz
sub
je
test
int3
mov
lret
mov
xchg
iret
xchg
scas
lods
mov
or
jle
fwait
mov
stos
sub
dec
adc
adc
pop
xchg
pop
pop
and
mov
mov
rolb
data16
or
es
push
push
add
sbb
aaa
mov
pop
repnz
pushf
add
sub
cmpsb
or
sbb
cmp
adc
lock
xchg
hlt
sbb
xchg
lods
jl
and
cmp
or
fnstenv
stos
int
ss
sub
fidivl
mov
in
xchg
in
popl
das
inc
mov
ds
fcomps
mov
mov
clc
cmpsl
pop
js
push
subb
fildl
cltd
push
stos
push
and
and
or
pop
push
inc
loop
hlt
jle
and
bound
scas
sbb
insb
mov
dec
push
jae
xchg
pop
fcomps
add
mov
mov
push
cmpl
mov
enter
bound
shlb
jbe
add
dec
out
and
mov
push
sbb
jnp
add
into
jne
lret
adc
movsb
shll
add
aam
call
xchg
adc
ss
and
pop
rolb
push
aad
mov
lcall
es
int
push
pop
aad
dec
mov
stc
stos
add
inc
scas
rorl
mov
inc
pop
add
pop
add
mov
inc
or
mov
xchg
clc
adc
stos
popf
dec
movsb
in
cwtl
cltd
add
lock
iret
loope
add
pop
movsb
pop
jp
mov
pop
orb
add
sub
iret
out
mov
adcl
test
inc
mov
ljmp
or
repnz
dec
xor
in
test
xor
inc
cmp
test
fisttpll
or
mov
push
mov
dec
incb
jnp
pop
int3
pop
in
addl
adc
das
xor
aad
ret
test
push
ja
test
add
fs
mov
fbld
push
hlt
xlat
in
cmovp
xor
cmc
or
inc
pop
xor
xchg
pushf
pop
hlt
es
jno
js
loopne
sub
jp
pop
jg
into
add
mov
test
fucomp
add
das
js
mov
pushf
fwait
aas
in
adc
mov
mov
mov
dec
add
mov
push
jae
jle
aas
in
add
cld
addl
jecxz
jmp
add
add
sbb
insb
subb
inc
add
jnp
fcomps
jae
mov
pop
pop
pop
es
pop
add
jno
adc
daa
sub
pop
mov
cmpsb
les
dec
mov
loop
mov
cs
push
cmp
icebp
cld
icebp
add
cmp
scas
movsb
out
jbe
scas
sbb
mov
adc
pop
in
je
add
jg
inc
push
mov
out
add
jl
pop
pop
icebp
movb
cmp
add
add
lea
test
rclb
and
incb
sahf
xor
mov
movsb
pushf
xchg
sbb
sbb
push
les
imul
jl
cmpsb
push
sbb
inc
ficompl
jg
push
jmp
and
mov
sub
fistpll
stc
mov
rclb
xor
add
arpl
sbb
push
lods
shll
dec
sbb
xchg
lods
cltd
mov
sbb
pop
add
fdivrl
jnp
mov
cmp
inc
pop
mov
push
dec
lds
or
adc
insl
push
lods
cmp
add
mov
mov
inc
and
test
jp
and
int3
sub
push
sbb
pop
pop
and
fdivrl
sbb
out
in
lea
mov
aaa
adc
cwtl
or
test
mov
leave
pop
addl
cmpsb
inc
aad
jg
int3
dec
mov
jae
jmp
mov
cmp
xchg
or
dec
hlt
push
add
or
clc
dec
mov
iret
jmp
stos
dec
inc
lea
imul
sbbl
or
bnd
insb
push
out
decb
dec
lea
in
inc
loopne
add
pushf
lock
dec
cli
cld
lea
pop
or
mov
lods
sbb
inc
and
pop
or
out
aad
addl
adc
mov
xchg
mov
cltd
push
xchg
ss
ret
les
mov
movsl
adc
je
xchg
insl
fs
loop
push
fisubrl
imul
mov
stos
notb
push
sbb
and
iret
loop
ret
mov
push
lock
and
loop
sbb
mov
xor
int
jmp
xlat
loopne
xor
iret
testl
jns
imul
mov
in
testl
xchg
adcb
les
iret
sbbb
cs
pushf
call
xchg
xchg
shl
sahf
push
ja
setg
jae
cltd
cmp
inc
iret
icebp
or
cmpb
test
notl
cmc
or
dec
sbb
pop
aad
add
push
jnp
out
or
sbb
sbb
jle
roll
subb
ret
push
inc
xor
mov
stos
mov
fadds
jg
lods
in
sti
jnp
mov
mov
pusha
dec
sub
hlt
inc
out
mov
lret
das
add
pop
daa
mov
outsb
push
cmp
xor
or
pop
ds
pop
out
xchg
pop
aaa
mov
ret
xor
sub
sub
jl
push
and
dec
pop
imulb
jl
jns
arpl
mov
push
cmpsb
scas
add
addl
xlat
ja
inc
jge
jne
fidivrs
daa
rcrb
xchg
rcrb
sub
cmp
into
mov
dec
loope
aaa
pop
push
add
adc
sub
dec
jb
or
mov
push
iret
dec
dec
es
xchg
mov
lds
iret
sbb
out
cld
lret
sahf
pop
inc
xchg
mov
inc
pop
jae
out
into
icebp
fucomp
cli
push
icebp
dec
adc
cmp
test
je
pop
pop
xor
incb
int
pop
popl
jbe
in
lock
test
push
mov
push
push
in
pop
jne
daa
xor
inc
aas
jmp
xor
xlat
test
data16
dec
dec
inc
pop
dec
dec
in
mov
pop
dec
or
mov
xor
js
ficoml
xchg
stos
jge
and
and
sbbb
add
jnp
sub
aaa
inc
dec
push
aaa
inc
movsb
sub
fiaddl
lahf
mov
in
sbb
jmp
cmp
mov
into
jnp
sbb
movsl
bound
and
push
dec
mov
dec
pop
mov
add
add
inc
loope
lcall
lahf
test
or
inc
test
imul
ror
mov
js
or
dec
mov
jnp
cmp
jl
add
and
sub
test
mov
add
pop
dec
insl
daa
hlt
push
jge
sub
rcrl
sub
dec
mov
inc
lea
dec
pop
cmp
ret
pop
aam
add
xchg
and
sub
enter
es
xor
cwtl
jo
sbb
daa
sub
pop
aas
std
add
mov
les
mov
jnp
xor
sti
das
pop
cmp
int
cld
mov
enter
cmp
push
xchg
ja
ds
xchg
xor
popa
xchg
out
ja
sub
add
mov
or
jmp
xor
shrl
sbb
mov
cmp
subl
in
repz
incl
inc
in
test
add
test
mov
inc
cld
loopne
test
insb
xchg
inc
add
inc
cmc
or
pop
divb
mov
jne
bound
or
sarl
xchg
fdivp
inc
jno
sbb
lret
aam
or
add
sets
push
hlt
push
and
hlt
inc
push
stos
pushf
jmp
mov
adc
pop
or
or
pop
rorl
mov
pminub
in
mul
mov
dec
jno
sahf
or
jnp
out
sbb
lahf
dec
lea
in
jbe
clc
ljmp
mov
xchg
inc
dec
xchg
das
sbb
stos
sub
fs
sub
add
or
pop
icebp
sbb
leave
in
bound
push
enter
xchg
sbb
mov
je
sbb
push
inc
cmpsl
popf
pop
xchg
addl
pop
dec
ficomps
sub
aaa
pop
add
pop
fcompl
xlat
push
cmp
adc
cmpsl
adc
pop
push
ret
cmpsl
mov
cmc
rolb
fucomi
xor
loopne
rcrb
push
cmp
stos
xchg
pop
push
or
pop
mov
or
dec
ss
js
inc
es
jp
mov
in
jns
cmc
or
mov
jl
mov
mov
adc
pop
addr16
mov
faddl
divb
dec
lods
pop
adc
adc
fdivl
test
push
inc
xchg
dec
adc
les
pop
or
rorl
xchg
cmp
in
scas
sbb
sub
insb
loope
idivl
loop
pop
dec
dec
and
lock
jnp
pushf
lea
movsl
xor
adc
imul
or
bound
or
jb
dec
fcmovne
dec
push
repz
in
test
aam
ljmp
sub
stos
cmp
in
insb
xor
je
jns
mov
xchg
and
movsb
and
xchg
sbb
or
in
lea
loope
roll
mov
sbb
push
jbe
jne
movsb
hlt
popl
aad
adc
sub
jnp
push
lret
jbe
fwait
or
xor
add
jb
xchg
and
sbb
cld
fs
cmp
loop
sbb
insl
xor
shl
sbb
jbe
pop
daa
and
fsubrp
mov
test
push
in
fisubs
pop
mov
jle
jbe
out
dec
loop
hlt
clc
fwait
push
iret
mov
dec
xchg
sbb
add
or
in
push
out
fistl
pop
pop
mov
in
in
mov
xlat
rclb
int
data16
mov
sub
enter
mov
sahf
cmp
xchg
je
cmpsl
mov
pop
mov
pop
and
andb
cs
adcb
or
xorl
imul
adcl
mov
or
sub
jle
sub
sti
outsl
inc
add
jg
sbb
test
push
test
mov
es
sbb
push
push
je
inc
in
lcall
sub
mov
iret
subl
nop
inc
mov
mov
bound
pop
cmpsl
out
cmp
dec
fsts
push
lods
lcall
addl
adc
or
add
roll
cmp
adc
cmp
jo
and
add
iret
cmp
aaa
jae
stos
pop
add
xchg
push
cltd
mov
push
jo
xor
lret
lods
daa
jo
test
dec
mov
imul
sub
in
ret
cltd
jg
lcall
add
xchg
adcl
lcall
mov
sub
xor
cwtl
or
or
aas
lret
dec
dec
jo
insb
roll
push
icebp
mov
arpl
pop
fnsave
dec
mov
dec
sbb
jl
jne
add
pop
sbbl
push
jge
mov
jge
mov
push
test
inc
cli
sbbl
shrb
mov
inc
inc
or
je
jo
xlat
add
dec
je
and
test
mov
aas
in
mov
cwtl
mov
mov
dec
push
test
inc
inc
aam
cltd
sti
mov
add
xchg
movups
and
mov
or
xor
nop
addr16
or
xchg
cmp
add
push
add
sbb
xchg
lcall
xchg
cmc
or
sbb
adc
in
cltd
or
stos
mov
stc
nop
sbbb
fcomi
cmpsb
fdivrl
sub
lea
push
xor
aas
dec
xlat
xlat
inc
dec
xchg
inc
test
leave
mov
ljmp
aaa
fisttpll
paddsb
sbb
push
cmp
ds
inc
movsl
subl
or
pop
jae
mov
xchg
and
xor
sbb
scas
jae
jp
mov
out
push
testl
test
sub
in
mov
js
xor
mov
test
add
inc
ss
and
dec
or
pop
or
in
mull
outsl
pop
add
lret
dec
or
jns
sbbb
scas
xchg
out
shlb
xchg
cmp
and
fcoml
cmc
mov
pop
pop
xor
mov
inc
loopne
mov
dec
ja
mov
cwtl
adc
jnp
xor
mov
mov
xor
pop
dec
pop
in
jl
sub
sub
leave
jecxz
inc
cmp
in
add
popa
test
push
sub
in
sub
push
in
pop
push
fwait
nop
inc
xchg
and
inc
scas
cmpsb
leave
out
mov
push
sbb
pop
sbb
lea
inc
mov
call
jge
out
jmp
std
dec
mov
jmp
fisubl
xor
dec
cmp
out
adc
pop
testb
sub
out
aam
outsb
cmp
std
je
xchg
dec
xchg
mov
mulb
leave
stos
xchg
dec
mov
or
aad
cmc
mov
sub
add
cmp
test
enter
fs
lcall
adc
dec
fists
sbb
jno
and
pop
mov
xchg
or
out
or
in
stc
sub
dec
pusha
rorl
push
inc
mov
mov
cwtl
iret
pop
fiadds
or
pop
in
mov
lods
add
insb
mov
add
fnstsw
pop
js
mov
pop
push
test
fisttps
sub
aaa
dec
or
jbe
or
push
dec
xchg
stos
dec
imul
es
adc
dec
imul
je
push
or
sbbb
jge
sub
and
fldt
jle
mov
inc
add
insb
inc
ret
js
xor
lds
xor
punpckhwd
shlb
mov
mov
xchg
in
movsl
sbb
sub
sbbl
inc
cmp
pop
inc
outsb
clc
sub
nop
pop
mov
ss
addb
js
xchg
push
insl
push
test
out
push
inc
lahf
test
cli
popf
fstpt
in
addl
daa
inc
test
dec
or
lahf
and
sbb
mov
test
jl
stos
pop
lods
mov
add
xchg
mov
dec
aaa
add
jo
dec
insb
lods
push
out
cs
xor
or
jnp
add
push
decb
iret
dec
adc
add
ss
daa
imul
scas
xor
xor
fs
sub
jg
js
ds
xor
sub
lcall
and
mov
sbb
jl
add
sub
lods
jne
test
add
dec
aad
out
cmp
pushf
lds
mov
inc
jp
mov
push
in
testb
dec
sbb
and
inc
xchg
test
testb
add
into
lods
mov
aad
pop
sbb
sbb
sbb
aam
ss
lahf
xchg
sbbb
mov
cld
insl
inc
jecxz
orb
sub
pmullw
xor
movsb
sbb
and
sbb
sub
sbb
xchg
std
xlat
fistps
cmp
inc
mov
push
test
sub
mov
fstpt
pop
out
fnstenv
push
int
add
add
xchg
leave
repz
jno
or
sub
pop
in
das
mov
mov
mov
in
push
push
aad
push
in
dec
xor
dec
pandn
jo
add
inc
testl
pop
pop
lret
btc
or
mov
and
scas
imulb
lret
lret
testb
or
mov
cld
in
cwtl
mov
push
and
fcomip
lods
lret
leave
xor
out
repz
outsl
xchg
lret
and
lds
jp
mov
lea
lret
xchg
mov
negl
pop
mov
pop
in
test
cs
repnz
popf
pop
fisttps
stos
add
mov
mov
cmp
lret
fbstp
add
dec
inc
xor
pop
sbb
pushl
sbb
pusha
fistps
sub
js
or
popa
lods
dec
push
inc
fidivrl
cmpsb
push
in
sarb
aas
mov
call
add
xor
mov
pop
adc
loopne
out
sbb
outsb
add
dec
lcall
addb
rorl
or
mov
or
xor
and
mov
add
das
adc
jg
test
stos
and
pop
invd
in
xor
push
sbb
shll
aas
or
out
jl
mov
outsl
out
xor
fnstsw
push
push
jns
loop
cs
out
in
in
loop
mov
rolb
jnp
and
mov
cld
and
xor
pop
dec
mov
stc
pusha
pop
and
loope
fcompl
pop
daa
push
pop
mov
mov
xlat
out
mov
pop
adc
cs
fcompl
adc
fs
orl
sub
pop
pusha
xor
dec
jecxz
cltd
fsubrl
enter
fmul
pop
out
adc
adc
loopne
xor
dec
rol
jg
and
sbb
pusha
movsl
addr16
xor
mov
pop
mov
cli
sub
int3
popa
andl
invd
or
push
or
or
jmp
pop
test
and
jo
test
stc
lret
mov
aas
out
sbb
mov
cld
and
out
or
inc
mov
sbb
fwait
aaa
jo
jmp
dec
jo
sbb
jge
jne
push
xor
or
dec
clc
or
dec
xor
aaa
push
hlt
rclb
push
out
les
fiaddl
je
in
push
jne
mov
out
add
mov
sub
pop
or
lahf
push
stos
jno
dec
outsb
jp
lret
and
js
xchg
sub
rcrl
jns
xchg
xchg
aas
icebp
dec
in
push
rorl
mov
imul
and
pop
xchg
sub
decl
clc
dec
mov
dec
jg
adc
cmp
fimull
push
mov
test
sbb
aaa
pop
jns
rolb
mov
stc
push
call
dec
sbb
data16
pop
sub
mov
leave
clc
mov
pop
pushf
pop
xchg
jg
dec
mov
cli
dec
sub
fdivs
mov
icebp
cli
rorb
stos
je
inc
xorl
xlat
lcall
cli
sub
lret
xlat
push
sub
testb
insb
cld
add
jo
jno
jge
scas
add
fsub
movb
icebp
cs
adc
pop
call
loopne
or
sub
fdiv
mov
cmc
lcall
mov
or
dec
xrelease
push
out
mov
mull
loop
clc
pop
jmp
mov
push
xor
lea
int3
adc
cmp
cmp
sbb
pop
in
test
inc
sub
jnp
sbb
out
lods
pop
lock
and
and
mov
push
xchg
dec
nop
add
repnz
xor
clc
je
les
sub
mov
lock
arpl
fwait
or
mov
adc
outsl
cli
insl
jns
mov
sub
add
xor
mov
pop
test
imul
aas
mov
daa
orl
cmp
cwtl
add
xor
addb
cld
jnp
subl
iret
call
inc
aaa
add
test
lods
int
xchg
rorl
jbe
dec
outsb
and
pushf
and
or
inc
daa
loop
pop
jp
dec
inc
pop
stc
xor
or
fistpll
stc
fwait
loopne
add
adc
out
adc
or
out
mov
or
add
das
fwait
cmp
lret
sub
ret
cmpsl
ss
dec
std
andl
xor
ljmp
addl
in
mov
pushf
sti
stc
ss
data16
test
aas
xchg
hlt
jns
and
addl
sbb
inc
or
daa
mov
lea
neg
mov
negb
add
imul
sbb
in
mov
and
xchg
out
inc
push
outsb
stc
stc
xor
mov
in
shll
lock
mov
out
movsb
lea
jno
clc
lret
pop
in
push
sub
inc
jbe
lods
push
add
dec
out
push
pop
pop
outsl
mov
xchg
adc
push
stc
dec
pop
xlat
pop
jne
inc
pop
mov
pop
outsl
jg
enter
push
mov
inc
stc
test
mov
cmpsb
dec
or
jg
xor
pop
in
arpl
mov
push
stos
add
icebp
data16
dec
mov
cmc
or
jb
xor
enter
mov
and
xor
xor
xor
das
mov
jbe
in
pop
adc
push
sub
dec
push
sub
das
imul
or
aas
test
and
push
mov
ljmp
jp
outsb
or
js
pop
in
les
push
mov
xchg
fcmovb
cmp
pop
jmp
sahf
imul
cltd
adc
push
scas
xchg
and
mov
daa
cmp
add
iret
imul
in
pop
mov
test
ret
cmp
and
js
mov
sbb
add
dec
add
adc
enter
sbb
mov
aas
mov
sub
push
movsb
mov
or
xor
ss
xor
test
jns
addl
insl
decl
addr16
vcvtss2sd
in
xlat
pop
leave
sub
xchg
adc
popf
or
sub
fildll
lret
int
insb
loop
add
jno
jne
and
cld
push
mov
pop
pop
cmp
fldcw
push
fadd
jns
xchg
rorl
daa
fs
lcall
sbb
mov
ds
mov
stos
xor
les
jbe
dec
shlb
mov
sbb
je
in
add
xlat
mov
xor
pop
fidivrs
mov
xor
mov
mov
jp
and
and
enter
pop
fs
in
pop
in
ret
dec
sbb
sbb
adc
mov
mov
icebp
out
jnp
fs
out
test
push
lcall
or
subb
insl
les
adc
gs
push
sub
bound
cs
insb
cmpsb
ss
bound
xor
or
adc
out
sti
out
pop
jo
insl
rclb
orb
out
test
mov
adc
popa
jae
repnz
test
test
sub
xchg
cld
sbb
cmp
add
in
out
or
xor
adc
cmp
idivb
js
adc
sub
addr16
sbb
inc
pop
push
mov
pop
movsl
pushf
sti
call
inc
in
addr16
pop
mov
fs
push
in
push
in
fs
fadds
cli
dec
sbb
pop
inc
pop
sub
adc
ss
sbb
xchg
fcomip
sbb
fstpt
mov
adc
js
cmp
loopne
ror
xchg
mov
xor
and
clc
sub
arpl
les
inc
test
mov
adc
pop
mov
lods
add
lods
mulb
lods
neg
or
fs
cmc
and
and
les
lods
movl
sbb
psubb
cmpsl
adc
movsl
mov
enter
adc
fldt
lods
sub
xor
es
pop
pushf
mov
xorb
or
fs
mov
xchg
lds
pop
in
push
test
aam
mov
xor
sbb
cmp
popf
push
or
dec
inc
in
shrl
sbb
and
std
dec
jp
mov
pop
pop
in
jae
aas
sub
pop
leave
or
sub
sbb
dec
in
mov
enter
cltd
inc
int
pop
cmp
stc
cli
in
pop
add
rsm
xor
dec
sub
jb
ficompl
sbb
mov
lock
sub
xor
scas
movsl
fisubrl
xchg
jno
iret
xchg
push
test
ss
loopne
inc
cmpsl
popf
lea
inc
xor
xor
test
ss
sarl
push
cmp
pushf
mov
sub
movb
xchg
pop
fwait
or
daa
rorb
stc
out
outsb
xor
mov
in
dec
in
cmpsl
pop
fsubrl
loopne
fildll
icebp
psubusw
cmp
in
outsl
dec
ss
js
inc
scas
push
mov
imul
push
or
stos
push
leave
xchg
mov
out
sbb
inc
jae
or
fbstp
fwait
enter
test
add
dec
inc
testl
mov
pushf
mov
outsl
jmp
add
rcl
xchg
jo
loop
fcompl
sub
cmp
divb
aam
sub
dec
aas
sbb
out
lds
xor
dec
and
and
pop
int3
dec
std
sub
ret
pop
jecxz
sbb
test
sub
loope
andl
push
ljmp
cmp
fdivrl
shlb
jnp
rcll
test
jae
in
lods
pusha
clc
fldl
pop
jecxz
jge
data16
and
mov
iret
jmp
add
xor
xchg
in
xchg
daa
xchg
xor
or
add
repz
inc
lods
pusha
mov
ljmp
jmp
scas
cld
xchg
mov
mov
jns
les
int
cs
cmp
sbb
push
dec
inc
int
stc
aaa
movb
or
push
lods
or
in
sub
xorl
fdivs
add
clc
leave
push
cs
adc
out
or
in
sub
sbb
lods
fcomip
dec
pop
pop
fcomps
add
clc
clc
xor
js
mov
mov
das
popa
fadd
pop
rolb
mov
mov
jb
sub
rcrl
iret
mov
lret
lock
insl
mov
push
ds
push
std
sbbb
dec
dec
xor
lret
inc
gs
dec
or
and
in
push
mov
add
mov
mov
dec
rclb
stc
mov
mov
fisubl
les
mov
pop
mov
pop
pop
loop
jge
loopne
xchg
enter
jp
dec
pop
push
aam
in
lcall
push
or
mov
in
test
je
adc
pop
aaa
push
gs
push
cmc
insb
or
jo
imul
jge
xchg
and
iret
sbb
pop
repz
test
sbb
xlat
repnz
dec
out
movsl
pop
iret
repz
dec
insb
mov
sbb
movsb
fldcw
adc
shlb
and
in
testb
or
sub
jl
jle
push
es
adc
add
and
fnsave
jb
lret
push
sahf
pop
leave
jb
mov
xor
dec
xor
das
xor
xor
push
xor
push
xor
mov
data16
hlt
jecxz
fisttpll
aas
cli
in
inc
jmp
ficoml
push
std
sub
cli
call
mov
sub
lret
mov
dec
cwtl
jmp
test
repnz
movsl
xor
or
pop
mov
xor
mov
lret
dec
or
xor
stc
fsubrl
insb
inc
imul
mov
cmp
push
dec
mov
lea
add
cmp
loope
dec
inc
xchg
xor
cld
mov
mov
dec
mov
inc
lea
dec
push
mov
cld
xchg
sub
cmp
sbb
outsl
ljmp
push
shl
dec
mov
mov
cmp
sub
jb
pop
mov
in
push
push
shrl
jae
dec
pushf
inc
stos
add
lods
rolb
out
pop
scas
inc
xchg
or
dec
sub
int3
dec
jnp
pop
mov
loope
mov
sub
mov
xchg
movsb
lret
mov
cmp
hlt
dec
or
sbb
mov
dec
inc
aaa
pop
or
mov
gs
mov
mov
add
gs
in
loop
pop
add
or
sub
mov
or
in
iret
cmpsb
dec
dec
sub
lods
sub
adc
adc
shl
aam
out
add
add
or
and
add
push
xor
icebp
shrb
out
cwtl
pop
outsl
daa
mov
pop
mov
test
push
mov
inc
cld
lea
idivb
in
cwtl
pushf
in
js
roll
xor
pop
leave
mov
insb
xchg
ljmp
mov
hlt
push
testl
add
scas
pop
call
jb
add
push
test
mov
sahf
andl
shl
out
call
ret
sbb
mov
push
sub
inc
push
jecxz
aas
cmp
or
addb
test
in
jno
sbb
or
jae
stc
inc
add
dec
pop
cltd
dec
das
in
aad
and
mov
cmp
outsb
adc
push
xchg
in
pop
rcrl
add
stos
add
pop
into
adc
cltd
mov
pop
xchg
pop
push
sbb
mov
cmp
or
push
push
push
fmull
in
jae
ret
aaa
xor
aas
adc
mov
pop
push
sbb
daa
lret
pop
add
or
dec
mov
insl
fiadds
sbb
mov
clc
in
inc
push
imull
rcll
lds
clc
jp
jnp
mov
pushf
arpl
and
dec
push
push
mov
and
add
pop
dec
push
mov
inc
bound
repz
into
insl
xor
mull
fisubs
pop
ljmp
ljmp
cmp
lock
sbb
xchg
and
mov
mov
scas
adc
or
push
pop
movsb
and
dec
les
das
fsubl
sbb
add
push
pusha
inc
pop
sub
dec
and
add
push
xor
and
pushf
cmp
imul
pop
cmp
lret
sbb
mov
add
push
fstl
xor
jbe
dec
dec
fiaddl
dec
xchg
sub
dec
dec
les
push
inc
and
ds
inc
mov
inc
mov
inc
push
dec
sub
dec
inc
les
insb
or
sub
das
inc
imul
sbb
and
mov
mov
jl
xor
scas
call
adcb
xor
das
xor
and
aam
es
cmp
jbe
adc
xor
and
test
dec
sub
loopne
sbb
add
cmp
and
insl
call
sub
les
rolb
jbe
and
mov
push
pop
nop
insl
test
pop
test
sub
adc
aaa
movsb
add
cmp
dec
aaa
mov
add
call
in
and
add
adc
push
nop
fiadds
add
jmp
iret
jl
negl
sbb
popa
add
add
cld
mov
sbb
in
jbe
adc
aam
mov
pop
sbb
cld
iret
cmpsl
adc
negl
pop
cmp
cmpsl
add
pushf
testl
xchg
out
xchg
add
jle
sbb
xor
sahf
inc
sbb
fadd
and
je
dec
inc
and
testl
jbe
push
das
cs
pusha
sbb
sarl
js
push
cmp
jo
notb
cmpsb
xchg
pop
and
dec
outsb
jecxz
dec
add
ljmp
pushf
test
push
xchg
pop
rclb
nop
add
jbe
lods
jnp
dec
test
fwait
pushf
movsb
test
jle
adc
mov
call
mov
pop
in
shll
mov
jnp
dec
cltd
in
mov
in
repnz
inc
sub
pop
and
ds
dec
in
in
leave
jbe
pop
cmp
std
jno
push
fdivs
or
pop
pop
add
sti
cmp
gs
mov
loopne
jae
or
xor
shlb
mov
test
pushf
rcr
or
xor
in
stos
sbb
jnp
int3
push
add
adc
aaa
jge
inc
sbb
jb
push
sbb
lock
mov
dec
push
out
xor
fwait
inc
lods
xlat
or
mov
fiaddl
stc
jns
aaa
test
push
rorb
pop
stos
fisubs
pusha
sbb
pop
dec
in
xchg
int
xchg
jge
pop
in
lods
inc
rolb
ss
and
sbb
and
sub
mov
mov
mov
add
bound
rolb
faddl
mov
fisubrs
push
sbb
dec
mov
mov
nop
and
pop
mov
js
add
rorl
scas
rcll
fstps
mov
int
aaa
jno
fucom
fldl
jnp
in
xchg
sub
jle
jb
stc
out
add
in
daa
add
push
dec
call
inc
and
and
xchg
fcoml
fdivl
sbb
in
pop
jl
repnz
enter
adc
push
xor
xchg
mov
pusha
push
call
jp
or
mov
xchg
sub
add
adc
js
ljmp
gs
negl
enter
call
mov
movsb
aas
adc
mov
xchg
int3
adc
push
dec
enter
mov
and
sub
cld
add
aaa
inc
jle
cmp
add
push
es
or
xor
roll
in
sbb
lods
cmp
xchg
pop
pop
cli
add
xor
xchg
dec
sbb
bswap
mov
ss
pop
loop
bound
ljmp
aaa
int3
mov
dec
mov
inc
insl
bswap
mov
aas
mov
add
sbb
mov
add
dec
xchg
jp
or
and
sbbb
dec
lret
mov
sub
loopne
imul
and
adc
sub
xor
daa
add
inc
and
loope
and
push
sbb
and
mov
mov
loopne
pop
call
enter
sub
dec
pop
test
call
mov
leave
js
pop
xchg
repz
popf
addr16
lret
test
lock
mov
rolb
arpl
sub
mov
aas
sti
ret
or
icebp
jbe
pop
xchg
jb
ret
sub
push
outsb
mov
inc
inc
hlt
or
pop
inc
leave
cmp
outsb
in
and
mov
pop
in
pop
stos
aam
adc
xchg
push
fsubs
pop
xor
jbe
mov
pop
mov
fsubp
and
out
and
add
xor
xchg
and
rcrl
sbbl
or
mov
xchg
or
dec
mov
push
iret
scas
pop
testb
repz
add
movsl
orb
in
stos
in
icebp
add
into
mov
push
sbbb
mov
cmovno
xorl
adc
dec
mov
jmp
pop
jl
mov
push
push
out
push
mov
pop
pop
mov
and
arpl
xchg
filds
dec
adc
jp
orb
pop
inc
sub
shrb
adcl
les
jns
and
out
pop
or
bound
mov
add
or
aam
pushf
lods
mov
outsb
clc
sbb
rcrl
aad
aas
les
repz
fidivrs
popf
dec
inc
dec
xchg
das
andb
mov
sub
and
dec
imul
adc
orb
pop
in
add
or
dec
sub
popf
jns
imull
and
in
mov
push
pop
daa
in
mov
mov
xchg
mov
add
test
push
adc
or
cmc
pop
cmp
xor
jbe
add
cli
sub
push
jp
push
dec
xor
stc
aad
xchg
insl
cltd
clc
sti
mov
xchg
aas
mov
sub
dec
movlps
jns
movsl
cmp
fdiv
imul
push
sarl
in
mov
jmp
dec
pop
cmp
pop
cmp
mov
push
adc
in
in
mov
push
incb
outsl
pop
scas
sub
cs
mov
or
and
imul
int
movsb
pop
notl
popf
mov
sub
mov
xchg
cmp
pop
cmp
jnp
push
leave
or
insl
pushf
push
fidivl
add
and
xor
ss
jnp
jp
lods
cwtl
and
inc
in
lock
adc
or
fs
je
and
loop
sub
mov
add
sub
ljmp
int
mov
out
xchg
mov
mov
call
icebp
scas
jns
mov
jp
popl
repz
adc
cmp
or
leave
cwtl
repz
pop
sub
aam
das
dec
sbb
ljmp
in
fimull
stos
leave
jno
add
aaa
add
jbe
leave
mov
or
orb
stc
ss
loopne
push
and
out
pop
dec
les
stos
pop
andl
cmpl
and
ret
bound
imul
lock
cmp
sbb
ficoms
data16
dec
in
test
fistps
xor
or
lea
test
pop
xchg
dec
dec
add
scas
and
xchg
xor
sbb
rcll
lahf
push
push
test
dec
fst
cmp
dec
addb
jmp
enter
icebp
pop
inc
or
lea
data16
mov
clc
lret
lcall
pop
out
xor
mov
div
enter
imul
mov
jae
or
mov
sub
movsb
aaa
inc
cmp
xchg
mov
out
je
insb
icebp
sbb
iret
lret
sub
pop
add
mov
and
shlb
fs
loope
repz
shl
call
cmp
push
icebp
xchg
pop
push
sti
and
mov
mov
add
push
pop
inc
sbb
iret
mov
lock
jnp
stos
and
sbb
sub
pop
test
push
xor
test
inc
dec
movsl
fsincos
and
loop
stc
loopne
les
rcll
sbb
popf
lods
dec
movsl
in
xor
das
dec
sahf
add
inc
dec
or
fmuls
add
add
cmpsl
adc
cmp
or
add
ljmp
out
pop
push
cmp
shrl
icebp
insl
mov
and
push
sbb
aas
pop
adc
pop
out
pop
imul
shll
data16
cmc
es
call
test
test
or
lret
hlt
mov
cmp
inc
lods
push
int3
mov
mov
xchg
mov
test
xor
xor
js
dec
inc
sti
out
and
sub
sbb
ljmp
mov
mov
or
shld
or
cs
push
lret
or
xchg
jl
and
lods
mov
mov
sub
roll
jno
pop
jle
ljmp
cmpsl
sbb
sub
shll
ss
les
push
fisttpl
add
push
and
xchg
mov
test
scas
jns
xor
add
pop
in
push
sub
pop
mov
mov
pop
out
xor
stos
sti
sub
test
cmp
sbb
bound
mul
push
out
push
jae
xchg
in
stos
dec
sbb
mov
imul
jo
mov
mov
push
test
int
xchg
and
mov
icebp
imul
in
dec
cltd
jne
and
dec
sbb
or
xchg
in
jae
testb
jbe
sbbl
test
jle
fwait
xchg
dec
sub
xlat
test
stos
jo
mov
push
and
stos
jge
or
fs
inc
pop
out
icebp
mov
xchg
add
sbb
jnp
or
cmpl
clc
inc
or
lahf
push
jbe
and
call
testl
mov
call
adc
and
notb
xchg
add
xor
push
add
lcall
aaa
ret
and
in
or
or
xor
jns
mov
dec
pushf
adc
mov
or
fmull
f2xm1
xor
adc
add
push
jle
add
out
sbb
inc
push
mov
sbb
dec
sbb
pop
jns
sub
jbe
sahf
bound
mov
cmp
cld
and
fwait
jo
mov
das
ss
cmp
mov
xor
pop
enter
jae
add
std
sbb
loope
mov
jb
push
iret
fistpl
stc
fdivl
dec
dec
pop
push
sbb
mov
and
or
iret
or
sbbl
aam
rcrl
xchg
into
fldl
in
and
popa
pop
test
lcall
jecxz
add
pop
add
push
mov
pop
adc
sbb
add
push
sbb
scas
mov
add
aaa
ret
das
sbb
or
cmp
in
dec
cmp
cwtl
ds
icebp
ds
in
out
dec
or
xchg
je
pop
and
jns
fwait
pop
xchg
enter
sub
sbb
ljmp
xchg
pop
jnp
scas
aaa
adc
mov
mov
fprem
repz
xchg
jo
xlat
and
nop
push
mov
lret
sub
mov
jno
fmull
jo
test
enter
inc
fwait
ret
aaa
pop
iret
les
add
in
push
add
xor
pop
cs
shl
inc
cli
cmp
push
mov
sbb
imul
ret
sub
push
xchg
fistps
lock
sbb
sub
call
scas
mov
dec
adc
cmp
lret
idivb
rcrb
add
and
cwtl
mov
pop
cmpsl
leave
sbb
test
or
adc
call
lea
popa
aam
sub
outsl
adc
dec
lods
jns
mov
push
and
push
in
mov
jl
fs
mov
test
add
push
or
int
rol
pop
rorb
add
cmc
push
push
adc
xor
jb
jb
xor
sbb
xor
les
mov
mov
mov
orl
fwait
or
push
mov
sbb
mov
bound
fs
xchg
lret
repz
fists
negb
xor
dec
repz
add
in
lahf
js
or
jp
out
stos
inc
dec
gs
dec
test
push
push
test
jo
gs
sbb
pushf
lock
gs
inc
pop
cmp
and
jp
push
test
sarb
rcrl
dec
sub
or
in
sbb
pop
in
pop
push
rorb
adc
ds
or
mov
xlat
adc
in
xchg
notl
in
stos
andl
mov
or
xchg
or
popf
inc
sbb
rorl
add
inc
or
add
jae
mulb
adc
xor
xchg
push
push
or
mov
mov
sub
pop
pop
test
push
mov
dec
inc
fistl
dec
and
dec
xchg
pop
or
bound
jmp
movsl
xlat
dec
popa
idivl
movsl
pop
clc
cmp
push
or
ljmp
jmp
add
xorb
sub
lds
mov
push
out
or
adc
add
std
aas
add
xchg
int
push
adc
sbb
addr16
xor
jl
add
stos
and
sub
mov
push
cs
sub
fildll
fisubs
jl
add
idivb
push
repz
dec
pop
das
xlat
or
das
call
pushf
loopne
orb
mov
dec
add
out
mov
out
lahf
inc
test
mov
mov
inc
or
add
sbb
add
int
test
xor
add
das
push
sbb
jns
test
gs
das
pop
pushf
sbb
mov
shrl
dec
ja
adc
test
pop
sbb
push
movhps
das
lret
sbb
aad
push
jecxz
dec
sub
stos
das
call
pushf
loopne
orb
mov
adc
int
test
xor
js
imul
das
xlat
leave
inc
das
cs
pushf
mov
lea
mov
jnp
les
insb
sub
push
das
fisttps
adc
cwtl
mov
jnp
sub
repnz
xchg
sar
push
jnp
mov
cmp
sbb
out
pop
call
jg
nop
cli
notb
ficompl
subl
icebp
xchg
xchg
fcmovnbe
jmp
xor
push
das
fists
mov
sub
mov
les
dec
lahf
xchg
out
stos
das
call
pushf
loopne
orb
mov
dec
loopne
out
inc
pushf
loopne
dec
sub
out
ret
dec
out
push
das
xlat
jae
loope
stos
subl
mov
dec
mov
inc
data16
pop
or
data16
out
repz
std
js
subl
xor
insl
mov
dec
sti
ficompl
stos
repz
les
stc
push
and
hlt
lea
imul
inc
imull
cwtl
das
mov
dec
lock
out
push
and
mov
or
pop
scas
in
pop
pop
es
dec
adc
sbb
out
dec
pop
mov
test
xchg
call
xchg
dec
xchg
insb
jnp
push
out
add
sub
fidivrl
mov
rclb
cmp
pushf
das
movsb
mov
xchg
repz
cwtl
sbb
xchg
sbb
jge
cmpl
in
movswl
adc
and
arpl
addl
repnz
mov
push
mov
repnz
loope
xor
call
cld
nopl
repnz
repnz
sub
jmp
iret
notl
clc
sbb
pop
idivl
pushf
stc
jge
popa
mov
out
cwtl
aas
dec
test
mov
sub
jo
ret
cmc
jge
adc
loopne
test
push
lock
movsb
popl
pop
ss
push
add
sub
pop
dec
fstps
sti
push
sbb
out
shr
lea
stc
imul
and
fdivr
jno
mov
cmp
aaa
lret
xlat
push
jmp
stc
sub
or
adc
inc
pushf
loopne
icebp
xor
test
das
sub
jno
subl
lea
dec
test
mov
testl
lret
sbb
pushf
loopne
inc
sti
addr16
add
test
jge
rclb
sbbl
add
loopne
sbb
sti
xchg
daa
or
pop
hlt
js
push
clc
pop
negl
inc
pushf
das
mov
lahf
adc
loopne
inc
clc
addr16
add
test
cmp
xor
dec
and
pushf
fimull
pop
stc
lret
repz
cmc
nop
pop
push
in
or
mov
jge
pop
mov
out
test
std
dec
jl
jecxz
push
std
xor
adc
or
call
shlb
or
std
mov
cmc
mov
rclb
sbbl
jge
ds
mov
in
lahf
mov
fistpll
pushf
jecxz
mov
dec
mov
push
or
loope
ljmp
mov
sbb
popa
fbstp
push
push
jo
jp
mov
cmc
push
mov
mov
pushf
sti
jge
adc
loopne
push
jle
pop
in
cld
mov
nop
popa
in
jo
xchg
cld
sbb
jge
ds
mov
imul
cld
jns
cmp
out
push
cld
data16
ret
cld
out
std
lds
inc
push
mov
addb
lret
int3
daa
icebp
jle
dec
jecxz
add
into
dec
inc
cwtl
das
mov
orb
adc
dec
sub
mov
xchg
lret
jnp
xor
adc
in
inc
lock
dec
sbb
jl
jno
push
push
mov
out
push
sub
and
nopl
or
daa
or
or
cmp
and
add
sub
or
add
mov
adc
sub
test
rol
inc
lock
pusha
das
dec
sbb
lahf
pop
cmpsb
leave
push
cmp
sbb
add
cmp
cmpsl
pop
js
pop
scas
cmp
dec
add
pop
cmp
in
cmp
loope
push
inc
dec
cld
jns
pop
dec
daa
mov
in
les
mov
add
jmp
adc
jbe
push
das
sub
dec
das
add
adc
movsl
out
pop
xor
jns
cmp
jp,pn
test
leave
lcall
xor
mov
rcrb
jge
out
bound
bound
sbb
das
push
or
push
adc
mov
add
aaa
and
sbb
ret
adc
mov
cltd
clc
dec
dec
push
and
push
cld
repnz
sbb
test
in
btr
push
mov
mov
dec
mov
jmp
jle
xor
dec
repnz
sbb
sub
xor
xchg
fs
jbe
data16
hlt
push
decb
cmpsl
and
xor
ljmp
pop
sti
or
in
xorl
push
icebp
data16
std
jg
add
int3
or
insb
mov
js
xor
pop
repz
dec
xor
ljmp
lock
das
icebp
xchg
cld
push
add
aaa
in
sbb
in
stc
fs
ss
push
xor
xor
fstp
cmp
lock
xor
and
xor
in
sbbl
pop
pop
int3
dec
cmp
mov
imul
hlt
xlat
dec
cmp
in
cli
xchg
cld
mov
std
mov
pop
incl
jp
cmp
sub
ja
pusha
js
hlt
repnz
jno
mov
stos
add
add
sbb
pop
push
mov
faddp
out
xor
lock
orb
sbb
add
pop
push
fdiv
iret
inc
popa
mov
adc
add
in
sbb
adc
adc
dec
les
mov
adc
lea
jae
lcall
add
xchg
inc
cmpsl
sbb
leave
fcmovnu
test
out
sbb
jg
mov
xor
insl
and
in
leave
js
mov
pop
jl
jns
or
fcoml
int
push
fistps
or
or
stos
jle
push
aam
adc
in
xorl
jno
push
xor
adc
sub
loopne
imul
in
ljmp
inc
fsubr
inc
lods
or
pusha
adc
sahf
in
dec
jge
mov
dec
pop
sub
sub
in
in
xor
dec
pop
push
in
xor
mov
fcmovu
faddl
dec
push
imul
data16
int3
push
and
mov
mov
mov
mov
add
adc
sub
hlt
mov
push
cmpsl
mov
das
mov
dec
psrad
lods
jns
lcall
mov
dec
roll
iret
jae
dec
mov
pop
loope
sbb
addb
push
push
insb
insl
add
cmp
cld
bound
dec
cmpb
lret
pop
pop
pop
mull
es
mov
scas
sub
sbbl
adc
sbb
jnp
mov
pop
outsl
cld
clc
add
mov
gs
xor
hlt
jmp
and
out
in
loop
and
sti
addb
sbb
inc
dec
sub
dec
cmp
push
or
inc
sub
pop
test
push
sub
dec
add
data16
cmp
jnp
stc
sbb
daa
icebp
loopne
cmpl
testb
lods
test
clc
fwait
push
aaa
in
dec
mov
daa
pop
lcall
les
ret
lcall
xor
jp
jmp
fbld
jbe
cmp
dec
jno
cmp
xor
and
sub
cmp
gs
jns
inc
icebp
or
xchg
xlat
cmp
cld
js
repnz
dec
std
test
in
or
xlat
push
inc
mov
jle
cld
or
out
dec
jns
jno
pop
pop
pop
in
push
push
inc
adc
mov
or
mov
mov
jae
mov
das
pop
xchg
xor
iret
imull
in
push
inc
loopne
inc
xor
adc
push
or
insb
inc
call
pop
mov
ss
clc
fs
nop
push
pushf
cmp
jb
int
xchg
rclb
out
js
pop
in
sbb
push
sbb
lock
sar
pop
mov
mov
push
stc
popa
cmpsl
xchg
or
push
push
mov
fxch
in
sbb
mov
std
nop
test
popf
nop
stos
mov
test
cs
in
push
sub
stc
jmp
cmpsl
adc
in
jno
sarb
push
dec
xor
jnp
lods
ret
ljmp
dec
icebp
bound
inc
cmpsl
in
inc
pop
push
lea
jns
bound
mov
lahf
mov
xchg
fisubs
test
xchg
call
mov
test
pop
pop
in
sti
adcb
mov
aam
and
les
cmp
cltd
ficoml
inc
jp
lds
test
pop
pop
call
lret
mov
adcl
and
pop
imulb
inc
out
dec
call
mov
stc
cs
je
pop
rolb
arpl
inc
rolb
fnstenv
xor
xor
lock
imul
dec
push
cmpb
jge
push
fsubs
and
movl
out
addb
sbb
cmp
sbb
xchg
push
test
inc
fwait
push
xchg
je
out
mov
xor
xchg
bound
add
xor
dec
pop
adc
clc
jnp
pop
cwtl
dec
negb
and
test
pop
sub
sbb
cltd
inc
push
cwtl
cltd
dec
xor
pop
ja
fs
sbb
js
or
inc
hlt
in
enter
sub
imul
je
mov
mov
and
popa
jno
fcmovbe
mov
loope
add
iret
mov
pusha
test
std
repnz
dec
cmp
sub
mulb
in
ret
js
outsl
mov
push
push
fdivs
jnp
scas
orl
daa
mulb
xor
ret
sub
jle
outsb
movsl
jo
push
lret
fisubrl
idivl
pop
popl
add
lret
mov
mov
ljmp
sbb
decl
pop
inc
pop
loopne
call
hlt
xchg
cld
push
outsb
ss
lea
sub
repnz
mov
imul
jns
sub
push
jo
mov
pop
mov
or
add
out
pop
icebp
cwtl
pop
xchg
push
mov
dec
movsb
popf
xchg
push
sub
mov
jo
mov
cmp
shll
pop
pop
and
in
sbb
jbe
add
dec
sbb
cld
aas
roll
movsb
das
sbb
mov
inc
lods
ja
ret
inc
pop
shl
lds
enter
cwtl
into
mov
int
fwait
mov
movsb
and
xchg
or
lock
in
inc
in
mov
lds
add
xor
adc
jae
jnp
scas
push
adc
in
cli
pop
js
push
add
pop
dec
add
push
icebp
stc
int
int3
mov
dec
add
jl
sub
imul
mov
xchg
in
sbb
sbb
sub
ljmp
pop
mov
add
js
jns
mov
xchg
and
push
mov
jo
push
pop
stos
pop
xchg
mov
inc
fs
nop
out
sbb
inc
ret
insb
xchg
sub
xlat
notb
jae
shl
push
push
pop
iret
bound
mov
sub
movsl
mov
xchg
fs
pop
adc
or
sub
fs
push
divb
dec
push
daa
imul
rcl
sub
mov
mov
dec
add
mov
and
inc
mov
fs
mov
adc
mov
std
push
xor
add
notb
sub
loopne
xchg
lods
dec
xchg
xchg
add
sub
push
mov
adc
push
pop
ss
jl
mov
xchg
lret
ss
iret
scas
sbb
mov
movsl
and
mov
scas
imul
push
xchg
sbb
in
xor
iret
or
xor
add
add
or
xlat
int
mov
pusha
jle
idivb
inc
adc
rcrb
in
leave
jns
push
adc
and
stos
imul
outsb
test
push
pop
mov
js
int3
adc
notb
adc
add
lea
mov
test
mov
adc
movsl
xchg
cmp
lods
sbb
inc
int3
adc
pop
xor
pop
mov
movsbl
nop
je
mov
xchg
push
leave
cmp
push
loopne
and
cmp
jg
cmp
sbb
or
cmpw
add
jne
add
inc
push
dec
mul
push
adc
mov
xchg
pop
add
mov
pop
mov
cmpsl
mov
loopne
push
testl
rolb
in
and
lods
nop
fs
loop
negb
sbb
mov
push
jae
int
subl
adc
adc
and
pop
sbb
and
mov
pop
sub
xor
xchg
mov
mov
call
adc
sbb
lret
dec
xor
fmulp
addr16
ds
and
or
pop
adc
js
subb
sbb
leave
push
scas
mov
enter
push
dec
rcll
fwait
sbb
mov
loop
push
popf
mov
mov
jg
lret
sbb
in
jne
xchg
mov
xor
mov
iret
adc
adc
mov
push
and
mov
sub
pop
fwait
push
aad
sbb
cwtl
pop
sbb
mov
add
adc
lods
dec
pusha
xor
mov
das
lock
pop
cwtl
les
aaa
fwait
sbb
adc
stc
inc
push
cmp
jae
nop
pop
scas
or
or
inc
aaa
adc
aad
dec
pop
pop
push
outsl
push
into
dec
and
cmpsl
mov
js
adc
sbb
orl
pop
bound
psubusw
and
or
popl
shlb
add
aaa
scas
cwtl
push
ss
dec
test
or
sub
fiadds
sbb
dec
sbb
cltd
pop
lock
clc
pushf
sbb
inc
adc
stos
jmp
stos
xor
fs
push
repz
into
jo
testl
or
rcl
jle
and
or
in
push
jnp
push
mov
lret
inc
push
inc
xchg
jmp
ljmp
or
sbb
push
in
not
mov
dec
pop
outsl
adc
fwait
lcall
in
in
mov
into
sub
mov
stos
dec
popa
sub
add
jb
cmc
movsl
stos
pop
popf
fnsave
sbb
fcom
fcoms
fildll
xor
fdivs
push
fst
mov
mov
addr16
mov
ds
or
in
push
adc
adc
andb
inc
jo
push
in
js
sbb
xor
in
call
and
sub
xor
mov
cmpsb
push
xor
sub
mov
loope
in
mov
pusha
pop
dec
dec
jnp
sti
push
add
das
pop
sbb
xchg
lcall
and
fwait
es
stos
pushf
add
mov
js
js
pop
pop
xchg
jge
icebp
cmp
xor
cs
mov
dec
or
push
in
cs
rcll
jp
cld
scas
cs
fcom
mov
or
pop
lcall
repnz
movsb
dec
cld
bound
insl
sbbl
lods
loop
xchg
clc
and
inc
adc
sbb
xor
testl
lods
sbb
push
bound
or
scas
sbb
mov
pop
out
lods
cmp
mov
push
test
jo
and
insb
dec
xor
pop
dec
and
inc
loope
add
inc
adc
lret
pop
push
mov
cmpsl
add
inc
iret
push
and
insl
add
push
fs
addl
adc
shlb
stos
sti
or
cmc
lcall
out
in
test
cmp
fs
mov
mov
jmp
dec
hlt
jb
jp
xchg
out
andb
and
fwait
pop
xchg
and
sbb
adc
dec
add
mov
cltd
and
daa
sbb
and
es
nop
mov
mov
fwait
mov
orl
cwtl
mov
mov
or
xor
sbb
xchg
je
dec
push
adcb
or
ficoms
or
jo
loopne
nop
gs
adc
xor
shl
scas
and
pushf
mov
sahf
jae
sub
pop
lcall
adc
loop
jne
push
push
aaa
xor
call
adc
pop
cmc
xlat
ljmp
pushl
cmp
sub
ret
adc
jns
jg
dec
pop
das
and
push
pop
sti
pusha
mov
or
addb
ficomps
in
mov
and
ret
mov
jno
pop
in
or
add
adcl
or
orb
int3
fdiv
sbb
or
inc
bound
push
js
adc
jnp
cltd
and
xchg
aam
push
pop
cmpsl
sub
push
sbb
das
loopne
scas
stos
pop
or
in
lahf
pusha
outsb
enter
lods
mov
and
in
cltd
pop
fistpll
inc
or
sub
push
enter
int
push
out
outsb
and
mov
aaa
push
fs
xchg
add
sbb
mov
xchg
and
ficoms
insb
and
or
addb
push
add
pusha
leave
ds
imul
mov
or
xor
adc
js
addb
scas
daa
dec
add
mov
sub
add
test
push
sub
pop
sbb
sub
pop
cmpsl
jecxz
ret
pop
pushf
jle
and
cmp
mov
jb
addr16
fdivrl
cmpb
cli
mov
popf
dec
nop
pop
cmpsb
testb
jae
sahf
inc
xchg
lcall
sbb
js
inc
shlb
add
push
xor
sub
repnz
cli
ror
dec
mov
aam
add
adcb
xor
outsb
scas
mov
inc
mov
or
out
cmp
mov
stos
sbb
adc
mov
adc
lods
je
arpl
lcall
fldcw
shlb
out
cli
daa
dec
pop
rol
sbb
cli
popf
inc
xor
mov
push
and
test
mov
or
shl
int3
arpl
in
pop
xor
pop
lods
jp
loope
or
lcall
pushf
outsl
aaa
in
mov
fnstsw
ss
daa
dec
call
les
outsb
scas
inc
dec
fsubrl
pop
call
dec
xchg
or
out
movsl
ljmp
div
or
cmc
and
int3
fldl
push
enter
in
sbb
fisttpll
mov
pusha
les
test
jb
dec
sbb
jnp
or
aas
adc
dec
lcall
pop
jp
std
cmp
sub
sub
push
std
and
sbb
rorb
clc
and
ret
lcall
sbb
pop
jae
sub
cmp
push
push
xchg
cld
int3
addr16
pusha
mov
dec
lret
jae
dec
ficoml
icebp
mov
push
mov
mov
lcall
cmp
fwait
iret
or
inc
push
cmp
mov
push
push
pop
push
lea
sbb
icebp
sbb
pop
notl
mov
adc
aam
add
lcall
cld
iret
mov
addl
add
adc
xor
icebp
sub
lea
test
hlt
sbbl
daa
xchg
shlb
lock
add
daa
les
and
xchg
jae
or
mov
inc
or
pop
dec
imull
mov
pop
xor
in
popf
xor
sub
mov
dec
xor
dec
adc
test
inc
dec
dec
mov
ret
sbb
ljmp
mov
lahf
xchg
lods
je
out
and
or
xor
sbb
scas
arpl
loopne
push
sbb
test
pop
enter
mov
pop
mov
jl
bound
mov
std
mov
fwait
stc
addr16
les
in
mov
pop
mov
sub
icebp
inc
mov
jno
and
iret
int
test
cmpsl
cmp
sub
mov
dec
cmp
xor
push
jle
jle
push
das
jge
imul
icebp
and
pop
mov
and
cmpsl
xchg
pop
mov
lock
pop
or
and
fs
jnp
repnz
push
jno
call
mov
addl
sbb
or
sub
adc
insl
sbb
sbb
js
sarb
push
and
rcl
lret
lock
dec
mov
fs
mov
mov
into
divb
in
test
adc
mov
add
dec
out
fcmovne
dec
push
fs
fidivs
sub
divl
dec
dec
test
dec
and
cld
sub
cmp
mov
push
rolb
push
movsl
pusha
imul
cmpsl
xor
pop
in
in
jns
inc
imul
sub
scas
xchg
out
shlb
sub
or
sub
in
jnp
test
inc
xchg
xchg
pop
jnp
pop
xchg
inc
pusha
fwait
xor
lea
xor
add
dec
clc
dec
enter
pop
sti
mov
mov
and
cmpsb
in
adc
sbb
outsl
sbb
or
mov
mov
and
mov
nop
jl
hlt
js
jp
loopne
jecxz
in
push
lahf
dec
add
imul
rclb
pop
jl
roll
and
sbbb
add
sub
sbb
push
int3
pop
test
mov
stos
iret
scas
pop
cld
pop
pop
dec
daa
pop
in
push
pop
in
out
jno
cmpsb
sub
sbb
or
test
cltd
xlat
jl
add
push
int
xor
sti
loop
inc
sub
pop
lcall
mov
inc
enter
jle
daa
jnp
sub
or
inc
hlt
iret
sti
mov
pop
ret
pop
lcall
cmc
insl
leave
jae
jnp
test
jle
sti
dec
int
sub
cmp
fwait
sub
pop
lret
in
pop
ljmp
xchg
lcall
xor
xor
vmread
aad
inc
mov
out
push
pop
in
imul
filds
mov
inc
bound
pop
outsb
xchg
sub
lcall
pop
repnz
and
enter
inc
jno
xor
xchg
push
cwtl
pop
pop
add
pop
cltd
and
inc
out
test
lahf
movsb
jo
es
jge
cmp
pop
gs
mov
mov
pusha
cmp
pushl
push
xchg
add
and
in
add
loop
mov
in
cli
int3
jmp
test
mov
and
shrb
pop
jnp
ror
frstor
lock
dec
xor
push
mov
int3
iret
fs
ljmp
or
icebp
add
test
jnp
and
or
in
int
jns
testb
sbb
das
xor
daa
test
jb
xchg
sbb
add
nop
and
jge
jbe
or
sub
rcr
push
stc
mov
pop
das
jg
in
das
test
push
pop
insb
mov
test
ficomps
stc
loope
fidivrl
mov
push
aaa
pop
add
es
bound
in
fisubrl
mov
dec
push
cld
pusha
cmp
xor
repz
aaa
sub
pop
push
icebp
xchg
fcompl
jp
in
adc
push
inc
add
mov
dec
js
fistpll
in
xchg
into
outsb
fwait
push
push
mov
mov
test
dec
shlb
lret
dec
push
inc
stos
sub
pinsrw
inc
fistpl
aam
clc
dec
inc
add
outsl
and
out
fimull
mov
lret
sbb
sbb
mov
push
sub
ss
cltd
push
repz
jo
mov
sbb
dec
add
loope
or
rolb
sub
lret
sbbl
pop
pop
adc
adc
in
xor
or
jbe
in
int
dec
jge
int
popa
mov
pop
add
and
imulb
dec
in
or
fmull
add
out
icebp
cmp
in
inc
pop
mov
andl
mov
and
sbb
ja
jecxz
jmp
sbb
mov
shll
fwait
mov
lea
inc
pop
divl
sbb
scas
dec
jle
lea
iret
dec
fdivrl
mov
dec
mov
sbb
mov
icebp
dec
jecxz
lods
mov
cli
add
sbb
or
sbbb
pop
xorps
std
push
jecxz
and
arpl
or
inc
or
push
fisttps
gs
sub
xor
xchg
sarl
mov
cmp
pcmpgtd
in
pop
movsb
push
cltd
mov
pop
idivl
sbb
or
dec
cld
sbb
mov
pop
and
into
add
mov
sbb
pop
popa
lret
sub
pop
pop
in
push
xor
stc
sub
pop
xorl
push
and
ret
push
xor
jo
and
push
and
adc
mov
ficoms
inc
dec
in
adc
dec
pop
mov
push
test
mov
sti
jg
ret
push
ja
sub
pop
jge
data16
mov
dec
test
stos
daa
in
pop
cwtl
test
inc
add
dec
or
gs
pop
pop
push
push
xchg
aam
push
cld
icebp
fmull
out
in
jl
or
addl
cltd
pop
add
add
push
add
ja
dec
pushf
rorl
popf
jae
jnp
rclb
sub
jb
lcall
sub
add
mov
push
in
lods
sbb
adc
andl
mov
data16
and
filds
xchg
push
add
js
enter
iret
mov
data16
cmpsb
negl
test
popf
dec
mov
push
mov
mov
and
test
pop
push
jnp
cwtl
jno
rcrl
cmp
inc
int3
cld
das
cmp
aad
sbb
adc
inc
add
pop
pop
mov
sarb
shll
sbb
sub
outsb
cmp
and
push
cmp
xor
push
lahf
mov
fistpl
jne
xchg
dec
inc
inc
xor
adc
dec
sbb
mov
sub
or
push
mov
aaa
dec
adc
movl
or
dec
dec
adc
in
push
fsubrl
add
pop
pop
pop
js
aaa
push
add
dec
mov
lea
rcll
add
adc
add
jns
lcall
mov
push
and
out
ljmp
mov
and
daa
inc
push
sub
cmp
cmpsl
shll
add
inc
dec
insb
test
push
mov
cmp
inc
push
lea
lds
push
pop
in
dec
sub
mov
inc
sub
repnz
insb
into
inc
js
mov
mov
icebp
adc
stc
aam
test
push
sub
repnz
popw
or
cmp
test
fimull
xchg
int
mov
jno
jp
adc
adc
fsub
xchg
in
sbb
nop
hlt
or
or
cli
out
jae
add
jnp
int
push
sub
mov
xchg
cmc
daa
add
out
dec
sbb
inc
mov
test
xchg
add
add
add
mov
icebp
lret
jns
outsb
jae
xchg
pop
test
xchg
xchg
push
push
fistps
dec
cld
sbb
call
jnp
mov
add
mov
inc
icebp
ret
mov
and
int3
mov
mov
jge
insb
notb
in
push
mov
dec
repnz
xchg
push
sbb
adc
out
or
mov
je
push
pusha
xchg
stos
dec
arpl
bound
out
sub
dec
and
int3
pop
sbb
in
jnp
scas
clc
cwtl
xchg
sub
in
jo
shll
std
mov
jmp
xchg
adc
mov
jb
xchg
sbb
jno
js
je
sub
cld
adc
xor
mov
push
push
or
push
pop
pop
loopne
and
sbb
cmp
inc
pop
mov
push
xor
dec
jae
mov
add
sbb
mov
mov
js
sbb
dec
push
loope
and
push
dec
fldenv
pop
add
movsb
sub
iret
add
sbb
xchg
movsb
push
sbb
push
sahf
dec
in
out
pop
movsb
frstor
out
scas
push
sub
lahf
sbb
hlt
in
mov
mov
fsubr
ficompl
insb
sbb
out
lods
xchg
jne
sbb
call
or
jmp
loope
rcrl
js
imul
xor
ja
aaa
lret
es
int
inc
pop
sbb
adc
xor
push
add
xchg
and
mov
movsb
push
lcall
negb
adc
inc
mov
jne
popa
cli
movsl
inc
lret
out
cs
movb
in
push
sbb
adc
push
imulb
idivb
mov
xchg
movd
or
push
das
lcall
inc
repz
imul
xchg
icebp
loope
push
mov
or
jp
cmpsl
fmull
push
rorl
js
rcrl
pop
stos
mov
lea
js
test
imul
pop
sub
jno
xchg
adc
adc
xchg
pop
xor
lcall
xchg
jnp
jecxz
mov
dec
cmp
mov
das
pop
mov
fldt
out
pop
sbb
lcall
xor
insb
jns
daa
push
dec
inc
sub
or
or
push
jnp,pn
sbb
decb
in
enter
cmpsb
in
jnp
daa
or
lods
push
repz
int
in
sbb
hlt
mov
xor
pusha
xchg
cwtl
dec
mov
dec
jns
popl
loopne
jbe
pop
sbb
or
add
xor
mov
icebp
inc
js
aam
push
mov
dec
stc
in
jl
out
imul
fs
sbb
add
pop
sub
aad
mov
or
in
jae
repz
jmp
mov
les
in
mov
dec
jnp
inc
repnz
shrb
mov
cmp
ret
les
mov
mov
fstpl
sub
mov
enter
or
inc
fisubrl
fiaddl
jo
fiaddl
cmpl
mov
push
icebp
adc
mov
mov
cmp
sub
cmp
and
xchg
sti
das
nop
lea
push
aaa
jae
pop
aad
les
addr16
sub
mov
xor
pop
sub
mov
inc
out
push
fmul
out
wbinvd
mov
jno
ret
or
repz
lds
testb
mov
mov
xor
roll
rolb
inc
in
jb
out
jns
pop
mov
jmp
pushf
cmpl
push
lods
add
aas
sbb
sub
pop
scas
xor
repnz
mov
adc
loope
into
xor
insl
inc
inc
out
jg
hlt
es
inc
movsb
mov
jg
clc
fs
jae
xor
in
fisttpl
bound
movsb
sbb
add
add
push
mov
fmul
js
xor
adc
js
sbb
jno
loop
push
and
jns
mov
inc
call
hlt
mov
pop
cmc
out
mov
andb
call
lcall
adc
add
add
in
inc
inc
push
pand
fists
repnz
adc
lods
push
shlb
sti
and
adc
fsts
sub
push
mov
mov
push
js
aam
testb
sbb
mov
add
mov
dec
jp
and
push
xchg
and
sbb
dec
lret
dec
arpl
popa
cmp
dec
push
push
mov
xor
push
int
inc
xchg
jbe
sub
inc
std
jecxz
sbb
or
pop
dec
xor
add
or
rcrb
divb
sbb
cmp
pop
push
jno
loope
push
mov
mov
sbb
insb
fwait
or
xor
int
jnp
or
mov
lods
mov
lods
aam
push
fdiv
iret
and
nop
stos
ss
adcb
call
js
aas
cmpl
dec
je
stos
mov
leave
dec
adc
testb
jecxz
cmp
inc
jo
push
push
icebp
inc
dec
div
in
stos
mov
fisttpll
add
mov
or
flds
inc
dec
test
cmp
push
ljmp
daa
dec
jo
xor
enter
fistps
lock
hlt
inc
and
mov
sub
push
inc
inc
popf
cmp
inc
jg
push
add
sbb
push
cld
bound
push
or
pop
push
sub
pop
sub
xor
xor
or
insb
inc
sbb
dec
not
jbe
jp
xor
xor
insb
push
popw
dec
and
sbb
cmp
add
shrb
out
xlat
ret
in
scas
fs
movsl
addr16
add
jnp
das
pop
or
out
inc
pop
lods
add
add
in
fstl
cmp
fs
mov
je
add
in
cmp
gs
mov
lret
das
or
cltd
cltd
push
mov
add
cmp
pop
mov
inc
or
repz
out
outsb
fistps
cmp
xor
mov
pop
cmp
lea
jle
pop
pop
mov
stos
mov
mov
adc
add
icebp
call
rorb
inc
imul
xchg
fdivs
nop
cmp
fnstcw
push
aas
loopne
in
je
std
adc
incb
outsb
push
mov
repz
pushf
cmp
in
pop
pop
pop
pop
cwtl
rclb
mov
mov
xor
and
in
mull
cmp
inc
pop
xchg
lcall
push
sbb
xchg
loop
loop
xchg
insb
fsubs
in
enter
push
add
inc
xchg
stos
hlt
lcall
sbb
lods
adc
aas
jo
add
jno
les
push
push
pop
jle
sbb
sbb
mov
aam
es
inc
mov
push
cmp
add
or
leave
mov
and
mov
push
push
and
fistps
lret
mov
pop
sub
xorl
pop
cmp
lock
xchg
inc
add
or
je
add
subb
sbb
add
in
cmp
push
inc
push
or
clc
pop
dec
insl
mov
and
sub
add
lds
add
iret
or
insl
mov
cmp
adc
js
aas
add
mov
aad
xchg
mov
jge
mov
lock
xchg
xor
adc
ret
jns
mov
dec
sub
push
mov
push
mov
out
sbb
xchg
cmc
dec
test
xchg
pop
lds
xor
scas
js
iret
mov
lods
and
push
in
push
inc
inc
out
inc
cpuid
sub
inc
and
add
or
mov
aas
gs
pop
shll
adc
cs
push
pop
std
push
push
lods
and
jae
jb
xor
pop
sahf
and
aaa
inc
or
cltd
push
in
mov
repz
cli
push
loop
pushf
pop
sahf
mov
popa
jb
mov
mov
cmpsb
sub
inc
mov
add
jg
sub
pop
ljmp
cmp
jmp
xor
or
int
mov
in
movsb
fsubl
lock
fisttps
fs
repz
stc
mov
or
push
pop
push
movl
jbe
negb
clc
in
cmc
mov
and
mov
adc
push
pop
push
aaa
int3
mov
test
dec
mov
or
adc
inc
dec
jno
mov
sub
push
add
push
in
sbb
pop
js
call
mov
inc
mov
sbb
repz
dec
push
sbb
out
pop
mov
mov
or
and
das
mov
movsb
xchg
out
js
xchg
dec
jle
divb
fisttpll
pop
rol
arpl
test
movsb
jnp
roll
test
lea
out
and
xor
das
sub
push
loop
mov
notl
xor
jo
jge
pop
nop
notb
mov
ja
out
or
xchg
incb
out
ljmp
test
pop
jnp
in
inc
mov
sbb
xor
xchg
mov
xor
cmp
mul
mov
xor
xor
loope
hlt
hlt
out
stos
jge
sbbl
fimull
cmpsb
jnp
add
dec
mov
out
cld
or
or
out
and
out
cmc
jle
sbb
pop
pop
mov
dec
pop
ficompl
mov
add
inc
in
dec
xor
add
pop
cld
ljmp
in
mov
pop
in
outsl
xor
adc
das
test
xor
lds
push
push
sub
inc
push
mov
dec
test
or
pop
add
loop
jb
ret
dec
xor
out
xor
mov
mov
mov
pop
pushf
popf
loopne
sub
rcrb
frstor
call
cwtl
vmread
bound
jae
lods
aaa
pop
jge
daa
push
inc
loop
outsl
inc
stc
xlat
int
mov
js
inc
sub
stos
femms
in
icebp
jg
mov
stos
inc
pop
or
push
and
fdiv
cmp
add
lock
hlt
addr16
jne
shrl
cmp
and
aaa
rcrb
pop
in
mov
inc
ds
inc
sbb
fdivl
rcrl
faddl
aas
aaa
pop
pop
dec
movsl
pop
and
push
mov
icebp
test
sub
lret
insb
lea
loope
sub
mov
mov
mov
mov
addb
sti
jl
push
mov
in
aam
insb
or
sbb
push
icebp
stc
pushf
stc
cmp
sbb
jmp
jns
inc
divl
out
loope
push
or
fstpl
xorl
mov
push
out
or
dec
lock
mov
dec
loope
int
fisttpl
in
les
sbb
fsub
xchg
mov
or
orb
out
sbb
fcoml
cld
pop
es
xchg
cmp
test
loopne
das
and
mov
sub
out
push
repnz
xlat
mov
loop
sbb
sub
cli
outsl
jne
and
jle
inc
pop
mov
or
std
sbb
lock
pop
xor
in
pop
test
cmpl
mov
movsb
sbb
rcl
pop
jge
mov
add
sbbb
sub
repz
mov
sahf
pcmpeqd
pop
std
ret
cwtl
repz
cli
pop
xor
jmp
shrb
popf
add
mov
fistps
lods
adc
and
pushf
mov
dec
pop
das
mov
loopne
mov
mov
jnp
inc
mov
sbb
cs
xorb
fsub
and
mov
jae
rcrb
fisubl
xor
hlt
mov
je
mov
add
mov
in
sbb
jb
pop
jno
mov
mov
popf
jg
int3
in
out
call
cmp
test
fs
xchg
inc
adc
dec
sbb
cltd
stc
mov
push
loope
sbb
and
add
movsb
sub
add
pusha
dec
repz
or
mov
cmp
pop
ret
pop
push
push
pusha
lock
gs
cmp
push
mov
xor
lds
sbb
mov
sub
test
sub
dec
fadds
add
imul
insb
outsb
out
aas
int
push
sub
repnz
mov
cmp
xchg
mov
outsl
inc
test
add
scas
cmpsb
mov
clc
pop
adc
sbb
cltd
xor
aam
dec
ret
sbb
enter
mov
cmpsl
sbb
cwtl
repnz
or
pushf
sub
cmp
xchg
dec
jnp
lret
or
mov
add
and
mov
dec
or
out
rcrl
dec
fcom
push
adc
and
shrl
xchg
jl
sbb
xchg
scas
dec
lods
add
jmp
pop
dec
cmp
rcrl
daa
mov
adc
enter
inc
cli
dec
pop
rolb
insb
or
lahf
push
cmc
sbb
xor
dec
cmc
sbb
testl
cwtl
inc
insb
and
dec
popf
fnsave
sti
sbb
aas
movsb
lods
sbb
not
pop
sub
jecxz
fs
fwait
mov
sbb
lret
mov
add
sahf
dec
sub
add
sub
out
sbb
cmpsl
inc
mov
xchg
push
sbb
add
hlt
test
mov
cmp
popl
mov
out
lds
and
repnz
or
inc
mov
cld
imul
mov
imul
mov
addr16
das
or
test
std
cld
cmp
lahf
cli
cmp
mov
daa
jmp
dec
cld
mov
or
adc
cld
pop
gs
hlt
gs
cli
shr
mov
sti
lahf
add
lahf
testb
dec
gs
gs
mov
les
daa
popf
lret
mov
ljmp
aaa
daa
std
lret
lahf
sti
test
add
mov
std
cld
test
push
ljmp
pop
daa
ror
dec
js
ret
jmp
add
push
les
or
ja
pop
arpl
or
mov
daa
les
das
pushf
sbb
sub
mov
xor
repnz
add
nop
lret
out
mov
rorl
mov
adcb
mov
shl
jp
shrb
lret
xchg
les
push
mov
js
dec
pop
jo
xlat
aaa
bound
or
xor
iret
mov
lods
push
jmp
push
sbb
in
repz
mov
jmp
lcall
push
pop
pop
jns
and
xor
scas
dec
inc
or
pusha
adc
jb
cmpl
add
cld
lahf
lds
lahf
mov
or
push
adc
aaa
daa
imul
mov
ja
or
inc
daa
aaa
negl
adc
cld
mov
xor
es
std
cld
push
ljmp
lahf
lahf
jmp
push
cld
adc
mov
jae
loop
sub
repz
sbb
aas
xor
pop
mov
jno
cmpsl
push
push
test
push
pop
leave
cli
mov
outsl
pop
addb
notl
mov
push
adc
pop
lahf
jge
xchg
shll
gs
mov
inc
mov
push
jmp
sbb
mov
sbb
fwait
cli
ljmp
dec
movsb
or
pop
mov
enter
sbb
in
pusha
xchg
fs
cltd
and
dec
aas
add
repz
out
out
and
adc
aam
pop
jne
cmp
mov
lret
cmpl
push
mov
sahf
lods
sti
mov
inc
and
mov
pop
push
lock
rcr
mov
sub
mov
sub
sub
pop
fs
and
loop
sbb
cmc
arpl
adc
sti
mov
std
pop
insl
repz
sub
fsubs
mov
xchg
je
add
cmp
rorb
aam
jg
in
sbb
xchg
cs
sbb
cmp
fcompl
inc
dec
scas
stc
sub
push
or
push
fimuls
mov
dec
and
sub
scas
and
aas
mov
fistpll
incl
adc
mov
stc
rcll
and
sarl
cmc
fisubrs
inc
xchg
mov
mov
sub
je
mov
sbbl
mov
fcomip
stos
pop
test
jmp
std
cld
cld
cmp
xchg
roll
add
inc
daa
inc
lahf
ljmp
daa
pop
loop
mov
or
addr16
and
iret
call
std
cld
lahf
adc
ljmp
push
ljmp
xor
and
push
imul
sti
and
dec
add
sbb
push
shl
movzwl
test
mov
mov
jns
jbe
sti
dec
xor
test
nop
xchg
sub
clc
dec
clc
lahf
jle
imul
lahf
fstpt
fstpt
insb
in
mov
stos
jecxz
adc
mov
loopne
jl
jecxz
sbb
sub
aad
sub
push
fildll
insb
mov
les
pop
xchg
ljmp
imul
mov
jmp
cld
cld
mov
sub
add
and
lds
pop
fisubrs
xor
cmp
ljmp
hlt
rorl
or
cld
cld
cmc
shlb
mov
gs
hlt
aam
nop
imul
jg
daa
pop
mov
daa
ljmp
add
les
daa
jmp
clc
test
mov
cld
cld
ss
shlb
ret
sub
ret
std
xchg
jecxz
dec
es
fcoml
in
sub
xor
fdivl
movsl
xor
pop
movsl
lret
mov
cmpsl
jecxz
jnp
out
orb
and
subb
mov
fidivl
mov
or
inc
stos
sub
fcoml
sub
mov
aaa
jg
ret
add
sar
mov
hlt
xchg
lahf
mov
or
jnp
out
std
cld
aas
je
add
idiv
lds
daa
ljmp
cld
lds
daa
adc
xchg
std
cld
cmc
shl
jae
std
cld
arpl
xchg
mov
or
lret
sub
jmp
dec
pusha
mov
inc
fdivr
add
mov
fildll
mov
and
push
in
push
int3
inc
mov
sbb
lcall
ljmp
inc
sbb
mov
sub
mov
pop
aaa
push
adc
dec
pop
les
iret
jl
cmp
lock
or
dec
repnz
dec
push
cmp
pushf
inc
push
lods
and
mov
test
insb
and
inc
push
lods
out
das
dec
out
push
mov
fcmovne
push
dec
mov
mov
adc
cmpsb
and
mov
inc
stos
int3
jno
jecxz
jg
cmp
or
loopne
sbb
mov
mov
rep
into
sub
mov
pop
test
scas
std
enter
add
shr
sti
adc
cmc
lahf
mov
pop
or
or
std
cld
sti
aaa
jp
dec
jge
cld
mov
sub
cs
std
cld
arpl
aaa
daa
push
cmp
lahf
push
lahf
jmp
aam
cld
les
daa
neg
lahf
cmp
lds
pop
std
mov
or
pop
jl
cld
push
arpl
ja
adc
adc
cld
mov
pop
ljmp
ret
gs
out
imul
add
ja
pop
ljmp
mov
gs
lret
adc
gs
lret
xor
insb
mov
sti
cmp
jmp
ds
cld
lea
insb
dec
jmp
mov
rorb
pop
enter
movsb
sbb
pop
xchg
adc
cwtl
cltd
adc
and
add
inc
sbb
or
and
bound
ret
or
inc
mov
cld
and
dec
mov
sub
push
inc
pop
mov
stos
testl
pop
inc
sbb
loop
insb
push
dec
inc
mov
out
and
push
jo
sub
xchg
scas
fcoml
movsb
loop
icebp
push
push
or
xor
mov
pushf
mov
iret
sbb
repz
jg
dec
sub
fsts
add
push
out
inc
daa
cs
pusha
mov
add
out
lock
lahf
mov
stc
push
into
mov
pop
pop
testl
cld
push
inc
aam
sub
jns
jp
outsb
cmp
pinsrw
aad
gs
mov
add
fcoml
inc
fcoml
push
out
mov
daa
or
loope
cld
imul
andb
sti
xor
ljmp
lahf
mov
adc
pop
jo
cld
arpl
add
add
lods
push
cmp
push
imul
cmp
cmp
cmp
mov
subl
mov
outsl
lods
and
mov
mov
jl
adc
pop
cmpsl
stc
inc
popf
dec
pop
pop
imul
sbb
daa
leave
inc
mov
cmc
dec
fistl
popf
test
ds
add
imul
ret
mov
adc
xchg
cmp
jle
lahf
test
sbb
call
dec
pop
sahf
dec
fcoml
push
fs
fisttpl
add
ja
std
cld
inc
inc
push
inc
push
dec
xor
sub
lds
pop
add
inc
daa
pop
jmp
cld
aaa
daa
lahf
mov
adc
pop
sub
add
cmpsl
imul
daa
cmp
daa
mov
aas
ljmp
mov
pop
or
mov
std
cld
gs
rorl
clc
cld
cld
ljmp
mov
cld
cld
xor
inc
daa
or
inc
daa
pop
mov
cmp
ljmp
sbb
rclb
pop
push
outsb
inc
jmp
fnstcw
pop
arpl
insb
or
lods
pop
call
daa
cmovle
ja
loopne
xchg
std
insb
sbb
pop
repz
dec
add
dec
jg
fstl
add
andl
cmp
aam
hlt
pop
push
jbe
bound
sub
stos
inc
jge
scas
std
clc
lods
mov
loop
dec
ret
imul
cmp
mov
nop
movsl
pop
push
push
fcoml
inc
inc
orl
jmp
cltd
std
cld
lahf
mov
pop
mov
das
lahf
lahf
push
lds
daa
addr16
ja
cmp
aas
add
ja
or
daa
or
mov
das
or
int3
sar
cld
cmc
sbb
jno
lea
lret
mov
sti
push
cmp
push
mov
or
shrb
cld
or
repnz
std
cld
hlt
aad
mov
fisubs
mov
pop
cld
ja
pop
test
mov
paddb
daa
or
or
lret
daa
pop
pop
pop
arpl
pop
daa
ljmp
xlat
std
cld
imul
movsb
std
cld
mov
xor
cmpsl
cli
push
sbb
in
adc
add
push
inc
sub
scas
cmpsl
pop
inc
pop
dec
xchg
lret
dec
loop
gs
sbb
jnp
jecxz
jmp
scas
cmp
cli
gs
pop
lcall
ja
jp
pusha
cmpsl
inc
and
dec
mov
jno
mov
jmp
stos
mov
jae
popf
cmpl
outsb
inc
mov
sbb
pop
cmp
cmp
test
mov
jmp
neg
iret
or
bound
fcoml
jmp
push
mov
das
or
std
cmp
ljmp
addr16
daa
or
lock
or
rcl
or
xor
mov
idivb
in
and
add
ret
pop
sub
imul
ret
jmp
movsl
std
cld
ljmp
sub
movsl
mov
daa
jmp
cld
std
cld
hlt
imul
daa
iret
icebp
lods
push
ljmp
nop
or
mov
insb
or
or
inc
popa
insl
arpl
imul
jge
push
and
fistps
cmp
pop
or
imul
jnp
fsubrl
imul
js
das
inc
sub
popa
jnp
js
aaa
push
xchg
jp
dec
xor
push
push
cwtl
les
dec
mov
shlb
testb
pop
or
popa
jl
jp
imul
dec
aas
aaa
xchg
and
cmp
cmp
push
repnz
aaa
cs
outsl
add
jnp
clc
jp
fisubs
movsl
jge
push
lods
gs
jns
outsl
jp
cmp
pop
cwtl
inc
dec
aad
pushf
pop
inc
dec
inc
cmp
test
dec
test
mov
jl
push
lret
push
popa
sbb
mov
pop
aas
pop
mov
mov
or
pop
mov
mov
sbb
push
js
popa
outsb
sub
ss
pop
dec
or
or
adc
or
xchg
sbb
sub
inc
add
add
adc
dec
add
xchg
push
pop
sbb
sub
pop
sbb
dec
adc
mov
sbb
dec
lahf
dec
ret
imul
pop
xchg
add
inc
insb
push
xchg
jo
pusha
adc
arpl
jl
adc
jp
mov
scas
mov
mov
ret
push
sahf
sbb
scas
pushf
jmp
cmp
mov
sub
fldcw
adc
lcall
xchg
and
mov
mov
pop
xchg
sub
pushf
add
sub
pop
sbb
dec
dec
sbb
rolb
inc
adc
dec
adc
lock
adc
xchg
dec
sub
xchg
pop
orl
sub
orb
inc
mov
dec
jb
xchg
sbb
pcmpgtb
fisttps
push
add
adc
add
cmp
dec
sub
jle
cli
sti
dec
hlt
cmp
repnz
or
lfence
sub
xor
add
push
inc
cmc
mov
enter
push
dec
pusha
icebp
lret
cld
loop
pop
daa
lods
xlat
sub
inc
aam
mov
add
cmp
hlt
fld
lods
or
je
add
sbb
inc
fs
push
pop
xchg
sub
and
adc
adc
sbb
sub
inc
add
or
popf
xlat
filds
clc
sbb
sub
inc
call
dec
les
mov
mov
lahf
pushf
sub
jl
push
sub
or
loopne
shrb
pop
nop
enter
or
jno
fcoms
xchg
movsb
xor
xchg
pop
movsb
sbb
pmaxsw
sub
out
adc
push
bound
arpl
or
jg
jge
jnp
jns
je
jb
mov
dec
dec
dec
ss
inc
inc
inc
inc
inc
inc
dec
or
pop
pop
pop
pop
pop
pop
inc
push
pop
push
push
push
pop
scas
mov
bound
or
sub
xor
das
inc
adc
pop
roll
scas
stos
xchg
in
lock
das
jle
xchg
movsb
outsl
iret
lods
jp
popf
ret
pop
incb
mov
sub
nop
adc
jmp
in
push
mov
add
adc
rcrb
int3
push
mov
paddusw
fsubrp
testl
jno
fisttps
pop
pinsrw
or
cmpsb
pusha
test
or
sub
popf
pop
xor
mov
outsl
cld
push
mov
pop
aas
adc
mov
scas
fs
dec
test
test
add
shrl
lcall
xchg
mov
dec
cltd
sub
and
out
push
arpl
push
dec
jns
xchg
inc
sbb
and
inc
dec
pusha
mov
mov
pop
dec
hlt
stos
xor
sbb
mov
jge
push
insl
popa
jnp
outsb
js
push
cmc
icebp
int3
dec
pop
dec
cmp
pop
cmp
imul
leave
and
push
outsb
ja
ds
loope
imul
popa
orl
sub
outsl
addr16
add
push
push
adc
pop
pop
mov
pop
inc
pop
sub
inc
iret
inc
dec
ss
scas
pushaw
repnz
scas
mov
jle
push
mov
and
cmp
cli
sbb
inc
xchg
sub
lods
outsb
inc
andb
ljmp
cltd
mov
sbbb
aad
jmp
das
xor
push
sub
sub
push
outsl
insl
nop
dec
fidivs
jo
jnp
outsb
add
xor
imul
add
or
inc
fistpll
fwait
ss
push
xchg
mov
jnp
push
xor
jns
and
dec
xor
xor
ficoml
push
push
lahf
int3
fldl
mov
sbb
addr16
dec
rcll
jnp
inc
dec
insb
call
xor
cmp
mov
adc
jge
or
fidivrl
xlat
add
pop
enter
push
fwait
pop
inc
hlt
lods
sbb
xchg
mov
mov
vrcpss
andl
xor
and
or
pop
fwait
jno
stos
xchg
inc
bound
xchg
in
andb
xchg
test
mov
loopne
je
or
jge
mov
data16
aam
xchg
push
cwtl
push
leave
mov
xchg
or
outsb
aam
mov
or
mov
inc
sub
push
imul
mov
cld
ja
pop
jmp
inc
cld
lahf
ljmp
addr16
addl
cmpl
imul
roll
lahf
jmp
ja
cld
mov
dec
or
mov
std
cld
cli
das
xor
mov
sub
std
lret
or
cld
add
loopne
lahf
ret
shl
mov
ljmp
addl
lret
std
cld
sti
jmp
sar
cltd
dec
jns
xchg
adc
pop
and
xor
ror
xchg
mov
sahf
fs
insl
jbe
add
fiadds
push
adc
dec
sti
mov
inc
jp
cld
pop
adcb
mov
pop
inc
out
cmpsl
xor
mov
xor
mov
outsb
ljmp
aaa
aam
iret
loope
adc
jl
xor
jle
lcall
leave
dec
mov
into
bound
outsl
lahf
mov
sub
mov
mov
pop
mov
xor
stos
pop
add
push
cld
ja
cmp
daa
pinsrw
test
mov
mov
inc
ljmp
aaa
daa
ljmp
or
loope
add
cmc
shll
mov
pop
gs
rorl
add
lods
and
add
pop
daa
daa
lock
mov
and
imul
idiv
cs
mov
inc
mov
sbb
mov
loop
shl
sub
ljmp
lsl
ljmp
add
add
inc
pop
lahf
jmp
and
daa
pop
mov
lds
pop
or
ljmp
daa
or
pop
daa
sub
iret
push
imul
inc
push
cld
ja
pop
rcrl
les
daa
push
mov
mov
or
sub
aas
mov
or
daa
das
les
daa
sub
lahf
lahf
mov
aaa
jmp
add
add
daa
mov
pop
or
sub
add
cmp
div
sub
ljmp
and
add
aaa
daa
cld
ja
or
cmp
movsb
lahf
arpl
ja
add
jmp
add
add
mov
jmp
add
add
xchg
add
inc
jmp
and
add
fwait
lsl
ljmp
mov
lahf
mov
cmp
outsl
and
add
mov
jmp
cld
cld
cld
std
lret
or
daa
aas
or
shll
mov
ljmp
mov
daa
mov
sub
and
add
lahf
cld
ja
pminsw
add
imul
daa
das
push
mov
xor
rcrl
add
mov
adc
and
add
xor
add
cld
aaa
daa
and
jmp
add
add
cld
cld
cld
jmp
or
add
cld
lahf
lock
mov
das
jmp
sbb
add
cld
lahf
sub
jmp
sbb
add
mov
pop
cld
ja
push
rcll
push
mov
daa
imul
cmpsl
lods
mov
lahf
lds
pop
sub
ljmp
out
add
decb
sub
or
mov
add
cli
testb
pop
imul
mov
cmc
add
add
test
adc
mov
and
add
aaa
daa
imul
add
or
shrb
shr
push
add
arpl
inc
daa
pop
out
lock
imul
push
adc
mov
push
mov
ljmp
ret
lret
add
aam
cld
cld
mov
dec
lahf
mov
dec
jmp
cld
cld
cld
jmp
push
add
lahf
mov
and
pop
cld
ja
sub
lahf
cld
ja
pop
lahf
mov
cmp
int
add
gs
jmp
or
shlb
mov
cld
gs
sub
rol
std
shrl
or
lds
rol
roll
ret
ret
add
push
sti
add
gs
das
sub
scas
roll
int
sub
gs
rorb
shll
shlb
push
add
and
add
ljmp
ret
ret
jecxz
std
ret
lahf
mov
ljmp
inc
daa
pop
ljmp
gs
out
push
xchg
ret
sti
gs
loop
or
mov
daa
sti
xor
arpl
lahf
cld
dec
add
add
ret
flds
mov
gs
imul
aam
add
xor
pop
xor
xchg
and
ljmp
dec
daa
cmp
pop
daa
popa
mov
cmp
loopne
add
gs
shll
sti
add
fisttpl
inc
std
lahf
xchg
test
les
pop
sub
jmp
sbb
add
push
add
arpl
lods
sbb
add
push
add
cmpsl
jge
lahf
lahf
ljmp
hlt
sar
lret
lahf
cmp
or
icebp
or
insl
sti
xor
ljmp
push
add
arpl
jg
or
ja
inc
mov
push
push
cld
ja
or
inc
daa
pop
mov
push
ljmp
add
daa
daa
mov
pop
ljmp
pop
add
les
pop
shrb
add
cld
aaa
daa
cs
mov
inc
xchg
ljmp
mov
cmp
pop
daa
jle
addr16
das
ljmp
push
add
add
ljmp
lret
gs
xlat
stc
mov
sub
gs
mov
push
arpl
push
add
ljmp
clc
cld
cld
cmc
fisttpl
jmp
adc
add
or
in
or
cld
mov
negb
aaa
daa
lahf
arpl
call
das
daa
arpl
sbb
mov
mov
lahf
cld
aaa
daa
lahf
mov
jle
out
add
gs
fsubrp
inc
or
add
nop
repz
mov
pop
or
js
add
lahf
mov
daa
mov
daa
ljmp
pop
les
daa
mov
aas
daa
lahf
mov
xor
fisttps
add
or
int3
das
mov
shlb
mov
mov
gs
lret
and
lds
or
lret
jmp
sbb
pop
jl
mov
mov
daa
lahf
mov
das
ljmp
daa
mov
and
and
add
lahf
mov
xor
push
xchg
sub
ljmp
mov
add
std
rol
add
pop
cli
arpl
les
sete
shr
clc
cld
cld
and
lahf
arpl
inc
pop
lahf
imul
insb
push
add
add
add
jmp
and
add
ret
adc
jmp
cld
cld
cld
lahf
mov
pop
mov
pop
or
sbb
add
arpl
fwait
adc
sbb
add
lahf
jmp
or
add
pop
daa
push
sub
jmp
stc
cld
cld
mov
or
shr
sbb
add
xor
inc
add
daa
pop
cld
ja
pop
mov
dec
ljmp
pop
daa
rclb
or
rcrl
aas
daa
lahf
lahf
lahf
mov
pop
cld
aaa
daa
cld
ja
sbb
imul
daa
or
popa
sbb
daa
pop
cld
ja
pop
lahf
arpl
lahf
mov
inc
jmp
or
add
or
add
ret
xor
sbb
add
pop
daa
lds
daa
jo
cld
aaa
daa
mov
dec
ljmp
ret
and
mov
cmp
push
sub
hlt
les
xor
ljmp
lret
and
hlt
rorl
inc
mov
sti
sti
sub
push
shr
lahf
arpl
or
add
inc
daa
pop
mov
inc
daa
xor
mov
aaa
imul
idivl
test
ljmp
outsl
daa
pop
and
lds
pop
sub
add
ret
adc
gs
inc
std
cmc
lds
cli
cmc
movsl
test
imul
aaa
daa
gs
cmp
arpl
ret
cmp
jmp
sbb
add
mov
jp
xchg
mov
pop
daa
inc
les
daa
fs
jmp
sbb
add
pop
daa
mov
mov
das
lahf
mov
das
ljmp
or
add
jne
add
mov
aaa
cld
aaa
daa
mov
aaa
lahf
lds
daa
or
orb
add
imul
in
cmp
cld
cld
cmc
leave
or
int
mov
cli
mulb
movb
imul
jg
xor
pop
daa
lds
pop
popf
mov
pop
push
mov
sub
jecxz
add
cli
sub
sub
inc
add
daa
gs
cli
sti
mov
gs
imul
in
mov
int3
gs
rolb
aaa
daa
lds
pop
mov
daa
mov
lahf
lds
psubusw
addr16
pop
ljmp
daa
packsswb
inc
daa
or
cld
aaa
daa
mov
das
mov
pop
jmp
std
cld
cld
mov
aaa
jmp
cld
cld
cld
cmc
rorl
or
fidivl
mov
arpl
mov
cli
xchg
lahf
shl
lahf
lahf
mov
mov
daa
mov
daa
ljmp
lret
mov
xor
sbb
mov
mov
arpl
testb
shl
imul
stos
pop
mov
pop
mov
push
mov
daa
lahf
mov
daa
mov
daa
lahf
cld
ja
sub
daa
pop
lds
or
mov
xor
sar
cld
jmp
pop
add
add
add
add
cld
ja
or
sarl
lahf
arpl
fstl
add
ljmp
daa
and
ja
or
aaa
daa
ljmp
daa
sub
imul
shlb
mov
lahf
cld
ja
pop
lahf
mov
pop
ljmp
daa
pop
jmp
adc
sbb
add
pusha
and
cld
ljmp
daa
daa
shll
daa
sub
pop
daa
and
daa
inc
cs
mov
daa
cld
ja
sub
das
add
fisttpl
testl
add
stc
sti
jmp
sti
cld
cld
or
jmp
add
insl
push
sub
mov
ljmp
pop
lahf
ljmp
jno
sub
jmp
cld
cld
cld
ja
or
shrl
out
loope
lahf
mov
jmp
hlt
cld
cld
lahf
gs
mov
cld
ja
pop
lahf
mov
xor
fstps
add
mov
dec
or
pop
sbb
add
inc
add
imul
push
mov
dec
ljmp
and
daa
mov
pop
lahf
lahf
mov
or
aaa
daa
lock
mov
or
ja
pop
lds
or
arpl
aaa
daa
lahf
lahf
les
or
adc
mov
xor
pop
add
adc
add
sub
mov
lret
mov
ret
ret
mov
arpl
ja
or
sub
cmp
gs
push
mov
jmp
cld
cld
mov
daa
lahf
lahf
mov
das
ljmp
pop
daa
mov
daa
arpl
clc
cld
cld
gs
out
mov
inc
or
xchg
sti
cld
cld
ret
gs
in
cmc
adc
lret
jmp
sbb
add
arpl
mov
lahf
lds
daa
out
cld
aaa
daa
mov
pop
mov
mov
daa
ljmp
repz
add
sti
cmp
or
add
addr16
das
or
inc
sbb
add
fcoml
enter
sub
xorl
cmc
shlb
enter
pop
daa
inc
mov
or
ljmp
hlt
testb
add
gs
sub
or
clc
hlt
mov
xor
rol
ret
or
aaa
daa
ljmp
inc
daa
pop
arpl
mov
lahf
mov
daa
lahf
mov
dec
ljmp
pop
daa
mov
mov
daa
ljmp
push
or
pop
add
jmp
adc
les
daa
daa
add
add
add
cld
sti
daa
aas
cmc
shll
mov
gs
mov
cmp
sti
sub
lahf
arpl
daa
mov
dec
ljmp
daa
or
gs
ret
or
dec
adc
add
sub
push
cld
aaa
daa
lahf
arpl
mov
jg
inc
mov
adc
mov
inc
lahf
lahf
les
or
mov
inc
ljmp
daa
lds
daa
push
mov
das
or
orl
ret
xchg
test
add
in
cmp
cmc
rcll
ljmp
daa
setg
out
add
add
inc
add
pop
daa
lock
ljmp
ljmp
ja
pop
mov
push
mov
pop
mov
daa
mov
push
ljmp
pop
imul
ljmp
gs
gs
jmp
insl
add
nop
push
sub
mov
ret
fldl
xor
pop
lahf
gs
pop
or
ret
or
lds
fmuls
add
push
hlt
lahf
arpl
mov
cld
cld
lahf
mov
daa
jmp
add
daa
dec
mov
pop
lahf
mov
dec
mov
pop
mov
dec
ljmp
daa
dec
mov
or
mov
pop
mov
dec
ljmp
cli
cld
cld
les
adc
add
pop
mov
imul
daa
inc
ljmp
std
lahf
cli
xchg
sub
mov
cmp
in
adc
add
insb
mov
inc
add
pop
daa
sahf
arpl
cmp
cld
cld
gs
stc
add
xor
shll
or
fld
lret
add
hlt
rcrl
lret
ljmp
daa
push
or
mov
lahf
mov
lahf
les
rorl
sub
add
daa
gs
out
sbb
or
inc
push
ret
gs
sub
gs
aam
fdivr
cmp
mov
mov
gs
rolb
gs
icebp
push
mov
std
ret
ljmp
sbb
add
pop
daa
into
dec
push
les
adc
and
cwtl
cmc
cld
cld
lahf
cld
ja
cmp
daa
cld
aaa
daa
mov
inc
ljmp
cld
imul
push
repz
daa
stc
push
imul
mov
ljmp
cli
cld
cld
arpl
inc
add
inc
daa
or
les
daa
gs
daa
das
ljmp
or
add
mov
icebp
or
inc
cld
gs
aam
mov
gs
sar
ret
gs
lock
loop
cli
ret
ret
add
lahf
gs
std
ret
ret
int
mulb
shrl
gs
mov
sti
sti
gs
add
les
daa
fimull
aam
outsb
icebp
cld
cld
gs
roll
jbe
adc
mov
gs
mov
gs
gs
divl
fucomi
push
push
add
lahf
lds
daa
clc
cld
aaa
daa
mov
pop
or
gs
ret
jmp
adc
add
inc
daa
or
lahf
jmp
adc
add
fdivp
cld
cld
arpl
daa
lahf
mov
jmp
adc
daa
mov
cmp
jl
add
dec
push
arpl
insb
idiv
cld
gs
fldenv
mov
ret
adc
sbb
sbb
mov
shl
std
lret
or
jnp
cld
cld
arpl
xchg
cld
cld
arpl
xor
lahf
lahf
ljmp
arpl
cmp
cmp
ljmp
jno
test
cld
cld
cld
mov
daa
ljmp
shr
gs
mov
flds
mov
cmc
rorl
and
add
ljmp
daa
mov
add
mov
daa
push
lds
daa
add
lahf
mov
daa
arpl
call
daa
push
mov
dec
ljmp
daa
lds
daa
fisttpl
daa
lahf
mov
pminsw
pop
add
ljmp
fsubrp
jecxz
cld
cld
jmp
or
add
rorb
mov
gs
jmp
mov
xor
rol
dec
rcr
sub
gs
or
jmp
mov
gs
mov
arpl
les
add
jmp
in
ljmp
gs
cli
gs
arpl
dec
in
dec
hlt
aam
lahf
mov
daa
gs
cli
arpl
daa
pop
lahf
hlt
aam
bound
add
cmc
shl
cmc
sar
aaa
daa
sub
ljmp
daa
jmp
cld
cld
cld
mov
sub
imul
mov
das
ljmp
daa
inc
push
mov
daa
cld
ja
pop
jmp
adc
add
mov
pop
ljmp
arpl
add
je
cld
cld
lahf
mov
sub
pop
daa
das
imul
out
cmp
daa
das
mov
lahf
mov
aaa
ljmp
out
add
inc
daa
mov
mov
jmp
cld
cld
mov
daa
push
mov
daa
cld
aaa
daa
mov
pop
push
mov
pop
imul
xchg
adc
pop
or
add
les
pop
inc
mov
mov
dec
ljmp
lahf
mov
or
aaa
daa
ret
mov
pop
gs
cs
mov
inc
lahf
sti
ljmp
shlb
add
jmp
imul
xor
add
mov
sub
xor
aaa
add
sub
cld
cld
mov
push
jmp
or
jne
push
cld
ja
or
stc
icebp
cld
cld
push
arpl
mov
inc
ljmp
jg
and
aaa
daa
ljmp
daa
pop
lahf
lahf
mov
jmp
cld
cld
mov
inc
lahf
cld
ja
dec
rorl
aad
mov
ret
ljmp
or
loope
cld
jbe
mov
daa
arpl
or
ret
daa
daa
sahf
imul
dec
daa
jle
mov
push
add
rcrl
add
or
ret
mov
arpl
or
add
out
rol
gs
repz
mov
stc
mov
cmp
arpl
lsl
push
gs
imul
leave
sahf
lahf
lock
mov
pop
push
gs
in
ret
mov
pop
sub
mov
or
add
pop
daa
adc
aaa
daa
lahf
arpl
daa
mov
sub
out
sti
cld
cld
mov
push
mov
pop
ljmp
mov
jmp
icebp
cld
cld
mov
lahf
lahf
imul
push
std
lahf
mov
cmp
or
xchg
adc
add
mov
ljmp
push
imul
daa
das
or
push
cld
cld
mov
cmc
aad
lret
divb
insl
gs
aad
in
rol
xor
or
shll
xchg
push
add
gs
rorl
hlt
rorl
add
and
push
out
cld
cld
imul
imul
pop
push
add
lahf
mov
cmp
mov
lds
daa
or
rorb
repnz
cld
cld
aaa
daa
arpl
ja
sub
imul
pop
daa
fisttpl
sub
cld
cld
xchg
ret
fildl
xrelease
sti
arpl
out
sub
imul
or
ret
ret
add
add
mov
jmp
in
cld
cld
ljmp
dec
mov
pop
mov
daa
arpl
daa
sub
out
cld
cld
test
add
clc
lods
xchg
stos
out
jmp
lsl
gs
cmp
fwait
mov
daa
lahf
sub
lahf
push
ljmp
lahf
mov
adc
and
cmp
daa
pop
mov
push
lahf
mov
and
mov
mov
add
sub
jmp
stc
cld
cld
mov
pop
mov
arpl
xor
cld
testb
shr
repz
cld
mov
aaa
jmp
in
cld
cld
mov
cmp
dec
clc
cld
cld
mov
adc
lahf
ljmp
adc
add
ja
adc
lahf
clc
daa
lahf
mov
lahf
mov
dec
ljmp
add
adc
add
adc
scas
add
adc
add
adc
xchg
add
adc
xchg
add
adc
xchg
add
adc
mov
adc
mov
adc
scas
add
adc
scas
add
adc
add
adc
xchg
add
adc
fwait
add
adc
lods
add
adc
lods
add
adc
popf
add
adc
add
adc
xchg
add
adc
mov
adc
add
adc
add
adc
scas
add
adc
test
add
adc
mov
adc
lcall
mov
add
adc
add
adc
add
adc
fwait
add
adc
add
adc
sahf
add
adc
add
adc
add
adc
mov
adc
xchg
add
adc
xchg
add
adc
xchg
add
adc
lods
add
adc
xchg
add
adc
mov
add
adc
lcall
xor
add
adc
xchg
add
adc
add
adc
mov
adc
xchg
add
adc
test
add
adc
xchg
add
adc
mov
add
adc
mov
adc
add
adc
add
adc
add
adc
add
adc
add
adc
mov
adc
lahf
add
adc
fwait
add
adc
mov
add
adc
popf
add
adc
adc
xchg
add
adc
lahf
add
adc
test
add
adc
xchg
add
adc
xchg
add
adc
mov
adc
test
add
adc
xchg
add
adc
test
add
adc
xchg
add
adc
lods
add
adc
scas
add
adc
mov
add
adc
mov
adc
xchg
add
adc
add
adc
fwait
add
adc
lods
add
adc
add
adc
add
adc
test
adc
xchg
add
adc
add
adc
mov
adc
add
adc
xchg
add
adc
mov
add
adc
adc
adc
xchg
add
adc
scas
add
adc
mov
adc
mov
add
adc
xchg
add
adc
scas
add
adc
mov
adc
popf
add
adc
mov
adc
mov
adc
xchg
add
adc
adc
xchg
add
adc
nop
add
adc
add
adc
add
adc
xchg
add
mov
cmc
mov
lahf
lahf
lahf
mov
add
clc
pop
jno
mov
mov
pop
lahf
push
mov
cmp
inc
lsl
arpl
inc
add
leave
icebp
cld
cld
ljmp
pop
add
lds
pop
or
inc
daa
push
mov
inc
push
lahf
push
mov
push
or
cltd
idiv
cld
push
jmp
repz
cld
jmp
push
add
mov
or
mov
mov
add
or
cld
cld
mov
pinsrw
lea
inc
daa
inc
mov
daa
cld
ja
inc
roll
fbld
mov
pop
gs
cli
mov
pop
hlt
fcmovnb
inc
daa
cmovb
xor
cld
cld
jmp
or
add
les
daa
or
daa
lahf
mov
daa
push
mov
daa
jmp
sti
cld
cld
mov
cmp
add
add
gs
fadds
push
xor
sub
loopne
or
add
mov
testb
or
add
rorl
add
adc
jmp
ja
movb
addr16
pop
or
sub
mov
lahf
arpl
sbb
cld
cld
lahf
mov
inc
ljmp
daa
adc
jge
cld
cld
gs
div
sarl
xor
arpl
pop
daa
mov
ljmp
cmpsb
lret
adc
mov
gs
cmc
ljmp
call
pop
imul
daa
mov
pminsw
ja
daa
cld
ja
or
rolb
out
mov
das
gs
sar
cld
ja
xor
pop
mov
mov
aaa
gs
jmp
les
daa
mov
mov
aaa
push
imul
adc
ja
dec
rorl
ret
fwait
mov
arpl
lahf
add
sti
jmp
push
add
les
daa
cmp
das
daa
push
gs
jmp
daa
xor
mov
and
mov
lock
mov
pop
arpl
in
or
call
daa
cmp
mov
hlt
fsubl
pop
daa
aas
mov
aaa
gs
gs
fsubl
ret
hlt
sbb
or
cmc
add
mov
das
shl
mov
sub
ja
pop
mov
sub
lret
gs
out
or
gs
int3
cld
ss
add
daa
gs
mov
daa
and
add
add
in
mov
dec
gs
gs
gs
fiadds
hlt
frstor
mov
daa
lahf
hlt
aad
xchg
icebp
cld
cld
shl
mov
sti
add
push
lahf
lahf
mov
pop
push
arpl
mov
lahf
mov
daa
push
lahf
mov
aas
ljmp
out
cld
cld
mov
cmc
shll
lret
repnz
or
lret
mov
cli
shl
sub
or
or
lret
cli
sti
idiv
mov
sti
cld
aaa
daa
sti
or
arpl
or
daa
std
cld
cld
gs
rcr
testb
ret
jmp
sti
cld
cld
std
ret
testb
roll
cmp
imulb
mov
push
or
add
xchg
inc
decl
xchg
arpl
arpl
and
cld
cld
mov
inc
push
ljmp
ljmp
addr16
cld
add
sti
sub
jmp
jmp
add
mov
inc
ljmp
or
cmc
or
clc
mov
gs
gs
jmp
cmc
rcrb
rol
shl
gs
lret
mov
pop
pushf
xlat
pop
pop
fwait
pop
inc
or
lds
mov
lcall
shlb
or
cli
mov
and
mov
cld
cld
mov
daa
jmp
in
cld
cld
arpl
out
add
test
pop
gs
not
shl
mov
daa
imul
ljmp
gs
push
gs
clc
or
test
cld
ss
add
add
add
shlb
or
hlt
mov
xor
aam
ret
hlt
fstpl
jmp
add
add
xchg
or
gs
add
gs
enter
gs
mov
cld
cld
rcr
mov
mov
or
stos
icebp
cld
cld
sbb
rcr
gs
sub
mov
std
ret
jmp
add
add
jmp
ret
jmp
shr
or
mov
idiv
cli
sub
imul
pop
mov
pop
or
mul
cld
cld
std
ret
arpl
iret
das
mov
sti
sub
gs
aad
sub
mov
daa
or
testb
add
lahf
mov
les
daa
cmpsb
push
cld
ja
or
fwait
repz
cld
les
daa
jo
cld
aaa
daa
mov
pop
arpl
jne
enter
daa
das
shll
testb
sti
sub
lahf
dec
push
gs
or
loope
fwait
cld
ja
jo
cmc
cld
cld
arpl
mov
add
mov
push
lds
daa
jb
pop
daa
cmpsb
les
or
insb
mov
push
ljmp
jmp
cld
sti
add
lahf
arpl
mov
aaa
ljmp
stc
and
lahf
mov
daa
lahf
mov
pop
arpl
imul
daa
dec
mov
mov
daa
lds
daa
rorl
in
cld
cli
push
add
jmp
add
add
ljmp
mov
xchg
cli
gs
out
test
sti
gs
lds
fcomi
rcrl
xchg
mov
stos
sti
mov
idiv
cld
mov
lds
daa
lods
lds
daa
jb
addr16
dec
ljmp
jmp
pop
add
mov
or
in
add
gs
rolb
gs
testb
xorl
gs
or
fstps
arpl
ljmp
pop
cli
lahf
ljmp
inc
add
pop
daa
jp
imul
ljmp
aas
daa
mov
pop
push
mov
and
int
cld
cld
push
arpl
pop
daa
cmp
mov
and
jmp
mov
pop
and
mov
or
in
push
add
cld
ja
pop
mov
sub
cld
xor
ret
iret
gs
mov
mov
or
loope
ror
mov
or
loope
sub
or
in
gs
movb
or
scas
lock
cld
gs
jecxz
mov
arpl
ljmp
call
cli
cld
cld
jmp
lock
cld
imul
lods
mov
imul
addr16
pminsw
cld
cld
cli
sti
ret
fildl
pop
rorb
loope
sub
arpl
fdiv
cld
cld
lahf
gs
shr
mov
push
mov
ljmp
stc
cld
cld
jmp
out
cld
mov
and
inc
daa
or
inc
arpl
imul
cld
cld
or
lret
push
mov
cld
aaa
daa
ljmp
filds
mov
add
pop
daa
xchg
aaa
daa
arpl
xlat
out
cld
arpl
inc
daa
pop
movsl
xlat
insb
and
gs
cld
cld
mov
pop
testb
jmp
push
add
ljmp
out
cld
cld
ljmp
daa
pop
or
inc
clc
cld
cld
gs
cmc
rorl
mov
or
enter
add
jne
das
mov
mov
mov
gs
jbe
lret
mov
cmp
mov
mov
daa
or
jmp
call
loope
cld
test
lahf
les
daa
daa
mov
je
cld
cld
mov
daa
mov
pop
lahf
cld
ja
aaa
mov
mov
or
ljmp
mov
lahf
mov
mov
pop
ljmp
add
add
jmp
add
add
add
cld
ljmp
or
shll
gs
rorl
mov
sti
imul
imul
or
adc
pop
adc
testl
jg
daa
decb
push
les
daa
jne
inc
cld
aaa
daa
add
add
add
daa
or
lahf
jmp
jecxz
cld
cld
ja
pop
imul
mov
dec
mov
or
pop
daa
push
push
daa
inc
jmp
add
add
dec
and
push
jmp
lahf
mov
daa
ljmp
scas
test
ljmp
daa
dec
jmp
call
icebp
and
jmp
sti
cld
cld
and
bound
rcl
mov
gs
xchg
add
cld
aaa
daa
imul
mov
addr16
pminsw
add
add
lret
lahf
test
add
imulb
sub
into
jecxz
cld
std
ret
arpl
inc
daa
pop
cmp
or
jmp
cmc
shl
shll
cld
cld
lock
mov
inc
lahf
lahf
mov
inc
lds
daa
js
ja
inc
mov
pop
mov
aas
mov
aas
or
outsl
cld
cld
cld
push
imul
cld
cld
mov
push
mov
das
ljmp
inc
daa
psrlq
ljmp
push
leave
in
add
or
outsb
cld
arpl
add
inc
daa
pop
add
movsl
fdivr
cld
arpl
add
cli
cld
cld
mov
dec
or
sbb
add
and
mov
lahf
mov
daa
sti
and
or
add
cmp
or
add
pop
daa
sub
stos
ljmp
cld
mov
jmp
cmc
cld
cld
lock
gs
icebp
mulb
int3
hlt
fisttpll
mov
inc
sti
cld
ja
dec
sahf
push
mov
pop
lds
or
addr16
push
ljmp
pop
mov
daa
push
lahf
imul
add
ljmp
daa
sbb
icebp
cmc
cld
cld
sti
gs
sub
ljmp
add
lahf
lahf
mov
daa
ljmp
das
daa
push
cld
dec
add
addr16
sub
cmp
add
lahf
mov
lds
daa
call
daa
ljmp
les
daa
pop
gs
fistl
pop
repnz
cld
jmp
cmc
cld
cld
hlt
rol
nop
jo
sar
mov
cmp
sub
lahf
ljmp
hlt
rol
inc
daa
pop
insb
sti
gs
out
lahf
hlt
sar
jmp
cld
arpl
mov
cld
cld
jmp
cld
cld
cld
aaa
daa
lahf
mov
or
ja
pop
mov
or
xor
cld
cld
mov
dec
push
ljmp
gs
out
mov
push
or
ljmp
fdivrp
cld
gs
gs
ret
shr
ret
std
pop
or
ljmp
addr16
inc
or
aaa
add
add
ret
or
push
cld
cld
sbb
mov
hlt
push
add
mov
cli
or
sar
cld
cld
sub
gs
loopne
or
push
out
cld
and
imul
jnp
ljmp
adc
mov
aaa
ljmp
ret
push
or
lds
jmp
cld
or
out
stos
out
rorl
gs
les
or
int3
xor
mov
pop
shl
gs
lret
mov
xchg
ret
arpl
je
cld
cld
jmp
cld
les
daa
push
or
pop
out
cld
ljmp
or
lock
ret
movb
cld
cld
mov
cmc
jmp
pop
sub
lods
jmp
out
cld
cld
mov
add
pop
daa
mov
cld
aaa
daa
lahf
mov
xor
dec
add
add
cli
mov
pop
arpl
mov
daa
sub
ljmp
arpl
shl
rol
mov
sub
clc
sub
add
add
aam
mov
gs
rorl
std
rcr
gs
fisttps
or
shll
mov
or
out
lahf
gs
arpl
leave
or
shll
jmp
jne
gs
ret
jmp
xor
jmp
out
cld
cld
cld
ja
aas
mov
lahf
lahf
mov
dec
ljmp
pop
daa
arpl
xchg
inc
add
pop
daa
mov
arpl
insb
fdivr
cld
mov
lods
adc
jmp
arpl
xor
sbb
daa
lahf
mov
mov
adc
or
jb
cld
cld
pop
sbb
sti
gs
rorl
gs
sar
jmp
fdivr
cld
lahf
jmp
loope
cld
lahf
mov
xchg
stc
push
sub
ljmp
gs
in
test
add
push
gs
out
xchg
push
ljmp
sti
cld
cld
arpl
aaa
daa
gs
mov
jmp
std
cld
cld
lds
daa
fcoml
mov
cld
ja
or
addr16
sbb
cmc
std
cld
cld
cld
ja
pop
mov
arpl
ljmp
cmp
daa
or
arpl
int
cld
cld
lahf
mov
das
jmp
stc
cld
cld
testb
cld
cld
push
push
lahf
mov
pop
push
lahf
lahf
lock
mov
setg
pop
in
cld
mov
and
or
fmuls
lock
clc
sbb
enter
push
mov
pop
ljmp
xchg
out
sbb
cld
cld
jmp
in
cld
sub
mov
daa
cli
sti
ljmp
daa
aaa
lahf
les
pop
cld
sub
ss
cld
arpl
imul
in
cld
ljmp
add
sub
cld
cld
std
ret
or
ret
ret
lret
rorl
dec
add
sti
or
std
sub
gs
mov
or
xchg
out
cld
cli
cli
shr
arpl
inc
pop
jmp
fdivr
cld
lahf
mov
packssdw
les
or
cld
ja
adc
lods
jmp
lahf
lahf
mov
inc
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
add
add
lea
add
mov
add
fiadds
add
inc
add
cmp
imul
mov
add
jnp
add
jp
add
jp
add
add
jp
add
jp
add
jns
add
jns
add
add
mov
add
jns
add
js
add
add
jnp
add
test
add
js
add
add
jge
add
aam
add
add
add
jle
add
add
lahf
jle
add
jle
add
jge
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
pop
add
add
mov
ret
cmp
add
add
add
lsl
add
adc
add
add
add
xor
mov
add
add
push
add
add
add
js
mov
add
add
push
add
add
add
xor
add
inc
push
add
add
add
xor
aas
add
add
add
add
add
aas
add
add
add
add
add
cmp
add
add
add
xchg
add
add
cmp
cmp
cmp
add
mov
add
aas
xor
cmp
cmp
cmp
mov
add
add
add
xor
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
inc
cmp
jb
jae
dec
je
bound
mov
push
mov
les
cmp
les
les
les
lret
lret
int
in
lds
lods
mov
mov
stos
mov
cmpsl
movsl
stos
stos
stos
mov
cmpsb
mov
in
stos
in
mov
mov
loopne
call
sub
lods
sub
lods
sub
movsl
push
call
in
mov
stc
in
movsl
sub
movsl
push
stc
in
lahf
sub
movsl
push
in
imulb
jge
movsl
push
out
in
movsl
sub
lods
sub
sub
movsl
push
imul
mov
jge
movsl
push
out
in
lods
sub
movsl
push
in
in
lods
sub
xchg
lods
cmpsl
lods
lods
sub
les
ret
lods
sub
les
in
les
lock
les
rol
aam
les
aam
aam
mov
rol
hlt
int
rol
stos
sbb
test
aam
aam
aam
aam
aam
les
loopne
ret
les
inc
int3
les
les
pop
mov
int3
int
fadd
les
ret
les
les
loopne
ljmp
movb
aam
les
rol
in
les
movsl
les
fs
mov
les
les
movsl
mov
les
les
les
ret
les
test
mov
les
out
les
mov
cmpsl
les
les
mov
loopne
les
mov
ficoml
les
les
les
les
lret
dec
xor
les
ret
ret
add
or
or
add
add
aam
push
adc
les
or
or
xchg
dec
xor
ret
inc
adc
les
and
lds
adc
les
rorb
push
rol
or
or
or
or
or
or
ret
gs
les
ret
aam
add
addr16
les
dec
mov
int3
sub
adc
testl
sub
ret
cmp
rolb
test
lret
les
loopne
xchg
sub
clc
les
dec
mov
enter
les
push
rol
or
or
xchg
dec
xor
ret
mov
dec
adc
sub
adc
les
shl
add
les
in
or
sub
adc
les
and
lds
adc
les
rorb
push
rol
or
or
or
or
dec
and
xchg
xchg
dec
xor
cmp
ret
ret
add
or
or
or
dec
and
xchg
xchg
dec
xor
cmp
ret
ret
add
or
or
or
xchg
dec
xor
ret
mov
dec
adc
sub
adc
les
shl
add
les
in
adc
or
les
or
or
or
or
or
or
or
ret
gs
les
ret
aam
add
addr16
les
dec
mov
int3
sub
adc
testl
loopne
ret
cmp
rolb
test
lret
les
loopne
xchg
sub
inc
les
dec
mov
enter
les
push
rol
or
or
xchg
dec
xor
ret
mov
dec
adc
sub
adc
les
shl
add
les
in
adc
or
les
or
or
or
or
or
or
or
loopne
mov
dec
test
pop
dec
test
pop
or
xchg
dec
xor
ret
mov
dec
adc
sub
adc
les
shl
add
les
in
or
sub
adc
les
and
lds
adc
les
rorb
push
rol
or
or
or
or
add
test
aam
or
or
or
or
or
and
lds
test
aam
int
sub
pop
rol
add
dec
add
scas
cmp
gs
les
gs
testl
fsubl
idivl
negl
dec
mov
loopne
dec
test
call
cmpxchg
dec
lds
rorb
loopne
xchg
cmp
and
lds
dec
cmp
decl
mov
dec
aad
xchg
cmp
cwtl
loopne
dec
mov
call
dec
aad
xchg
cmp
add
rorb
call
mov
in
dec
mov
dec
xchg
aam
xchg
aam
or
mov
decl
mov
dec
aad
xchg
cmp
add
dec
lcall
mov
dec
rorl
enter
adc
and
cmp
cmp
aas
mov
dec
rorl
aam
or
adc
mov
fsubl
les
inc
add
pop
or
mov
dec
lds
scas
lds
push
pop
or
or
mov
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
or
or
or
or
or
or
scas
cmp
gs
les
ret
aam
add
addr16
les
loopne
negl
xchg
dec
or
call
loopne
jl
les
fmuls
fmull
dec
cmp
lcall
nop
dec
lcall
mov
lcall
loopne
xchg
xchg
add
xchg
jmp
les
int3
dec
add
loopne
mov
les
enter
or
or
or
or
or
scas
cmp
gs
les
enter
testl
shlb
les
loopne
xchg
add
les
jmp
les
sar
mov
enter
xchg
sub
adc
shl
jnp
les
mov
lcall
nop
mov
dec
addb
inc
add
dec
mov
dec
lcall
dec
and
sub
adc
rorb
dec
lcall
fdivs
xchg
sub
adc
rorb
dec
lcall
add
cmp
sub
out
mov
mov
les
inc
add
push
rol
or
or
or
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
in
sub
adc
dec
nop
loopne
scas
cmp
enter
insb
ret
or
add
les
rclb
repz
les
dec
mov
aam
dec
leave
les
aam
rol
or
or
or
or
or
or
or
xchg
xchg
dec
xor
loopne
sub
out
mov
cmp
mov
test
rorb
shrb
mov
or
or
or
or
xchg
xchg
xchg
dec
cmp
loopne
sub
out
mov
add
int
cmp
mov
mov
rorb
xor
fbstp
xor
dec
mov
int3
out
sub
out
mov
popf
pop
or
or
or
add
adc
ret
or
or
or
or
or
cmp
mov
int3
sub
in
mov
add
int
cmp
mov
mov
rclb
fbstp
xor
dec
mov
int3
out
sub
in
mov
dec
ret
scas
lds
cmp
lcall
or
or
scas
cmp
rclb
sbb
les
loopne
dec
mov
xchg
dec
or
repnz
les
popf
pop
or
or
or
or
xor
dec
xor
ret
int
sub
or
les
rorb
push
rol
dec
and
xchg
xchg
dec
xor
les
ret
ret
add
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
in
sub
or
notl
dec
nop
loopne
scas
cmp
enter
enter
fmul
les
rclb
icebp
les
dec
mov
aam
dec
leave
les
aam
rol
or
or
or
or
or
or
or
xchg
dec
sub
cmp
cmp
gs
les
cmp
aam
add
addr16
les
int3
xchg
sub
pop
rol
add
inc
add
test
ret
mov
aam
and
lret
les
loopne
dec
and
sub
test
les
loopne
xchg
dec
mov
in
add
les
add
sbbb
xchg
mov
les
or
or
or
scas
cmp
gs
les
enter
testl
loopne
addr16
les
scas
in
lods
js
ret
mov
aam
and
lret
les
and
les
and
les
test
les
loopne
xchg
dec
or
and
les
mov
ret
ret
leave
dec
mov
enter
or
les
rorb
ret
ret
mov
loopne
dec
leave
les
pop
or
or
or
or
or
or
or
scas
cmp
gs
les
enter
testl
loopne
addr16
les
scas
jecxz
sub
ret
mov
aam
and
lret
les
and
les
and
les
test
les
loopne
xchg
dec
or
and
les
mov
ret
ret
leave
dec
mov
enter
or
les
rorb
ret
ret
mov
loopne
dec
leave
les
pop
or
or
or
or
or
or
or
scas
cmp
gs
les
enter
testl
loopne
addr16
les
scas
out
aam
ret
mov
aam
and
lret
les
and
les
and
les
test
les
loopne
xchg
dec
or
and
les
mov
ret
ret
leave
dec
mov
enter
or
les
rorb
ret
ret
mov
loopne
dec
leave
les
pop
or
or
or
or
or
or
or
xchg
dec
sub
cmp
cmp
gs
les
gs
testl
movsb
mov
les
mov
dec
mov
mov
nop
loopne
xchg
mov
mov
mov
sub
xchg
les
int3
dec
ret
enter
cmp
enter
mov
scas
out
lock
mov
in
and
lret
les
and
les
and
les
sti
les
loopne
xchg
dec
mov
cld
add
les
xor
cmp
and
adc
ret
and
xchg
add
rcrl
loopne
mov
les
cltd
push
enter
or
or
or
or
or
or
or
cmp
sub
xchg
xchg
dec
mov
enter
xor
les
inc
add
dec
lret
mov
xchg
dec
add
les
mov
add
mov
push
dec
add
loopne
sub
cmp
cmp
dec
rorb
fwait
lcall
inc
cmp
mov
xchg
dec
add
les
les
jle
les
add
jecxz
les
loopne
mov
cmp
cmp
dec
ret
add
rol
dec
sub
cmp
sub
xchg
dec
and
scas
les
les
int3
dec
mov
int3
xchg
dec
nop
loopne
xchg
dec
or
and
cmp
cmp
sub
xchg
les
lcall
or
or
cmp
sub
xchg
dec
mov
inc
cli
cmp
cmp
cmp
cmp
dec
and
lods
add
aam
sub
repnz
les
loopne
xchg
xchg
sub
lock
les
aam
add
ret
testl
dec
nop
loopne
xchg
dec
and
xchg
xchg
sub
icebp
les
loopne
dec
nop
loopne
inc
add
scas
les
xchg
sub
into
rol
lcall
or
or
jl
cs
or
or
or
or
or
xchg
dec
xor
ret
cmc
xadd
xor
int
sub
push
rol
add
dec
add
or
or
or
or
or
or
lds
xadd
or
or
or
ret
or
or
or
or
or
xchg
dec
sub
cmp
cmp
gs
les
cmp
aam
add
addr16
les
enter
scas
les
jo
ret
add
out
dec
mov
shrb
loopne
les
and
cwtl
arpl
aam
nop
loopne
xchg
add
les
xchg
les
loopne
mov
les
or
or
or
dec
lds
mov
inc
cmp
mov
xchg
cmp
clc
fs
or
or
or
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
loopne
xchg
scas
les
rcl
fs
cmp
movsb
fs
add
out
scas
lds
mov
aam
dec
or
loopne
add
aam
mov
int3
xchg
add
les
xchg
les
loopne
mov
les
or
or
or
or
or
or
loopne
xchg
scas
les
rcl
fs
cmp
fsubl
pop
or
or
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
ret
ret
mov
cmp
cmp
xchg
scas
lds
loopne
sub
cmp
cmp
enter
dec
mov
add
fmuls
dec
mov
aam
dec
leave
les
aam
or
xchg
dec
cwtl
loopne
xchg
xchg
xchg
dec
pop
xor
jle
fcmovne
inc
pop
les
inc
xor
das
ret
dec
add
les
dec
pop
dec
add
jne
incl
mov
dec
xor
sbb
mov
dec
mov
jecxz
xchg
sub
cmp
cmp
inc
add
dec
adc
jne
dec
cmp
cmp
clc
fs
ret
das
dec
cmp
jmp
scas
cmp
cmp
cmp
inc
or
les
add
int3
dec
cmpb
les
cmp
jnp
or
pop
dec
add
jne
incl
mov
dec
xor
sbb
fwait
lcall
or
or
or
xchg
jge
les
xor
add
les
les
dec
or
lret
jle
fidivl
les
aam
pop
or
or
or
or
or
or
or
rolb
inc
add
jecxz
xchg
sub
cmp
cmp
inc
add
dec
adc
jne
dec
xor
xor
clc
fs
add
pop
or
or
or
or
or
testl
inc
add
ret
xchg
cmp
clc
fs
or
or
or
or
or
or
or
loopne
xchg
dec
stc
push
les
int3
scas
les
dec
and
dec
or
sub
ret
les
les
les
xor
movl
push
rol
or
ret
gs
les
gs
testl
hlt
mov
les
je
ret
pop
xchg
lods
cmp
cmp
incl
mov
dec
mov
aam
test
cwtl
loopne
add
ret
and
xchg
dec
cwtl
loopne
sub
xchg
les
mov
sarb
incl
mov
dec
mov
aam
std
add
les
loopne
add
ret
mov
aam
add
les
xchg
les
mov
int3
cmp
incl
mov
dec
mov
in
lds
rol
cwtl
loopne
add
ret
nop
loopne
xchg
add
les
xchg
les
enter
add
loopne
mov
les
hlt
pop
or
or
or
or
or
enter
clc
fs
cmp
dec
mov
xchg
cmp
dec
xchg
int3
xchg
cmp
fwait
pop
or
or
or
ret
gs
les
xchg
gs
testl
lock
les
loopne
dec
repz
les
loope
ret
testl
les
aam
popl
rol
and
les
and
subb
aam
mov
aam
and
les
add
les
cmp
int3
testl
testl
les
adc
xor
jne
incl
mov
dec
xor
dec
dec
add
insl
les
xor
rolb
xchg
xchg
cmp
stc
mov
lret
inc
cmpsb
cmp
cmp
dec
add
add
les
loope
ret
testl
les
mov
lock
les
add
push
rol
mov
in
push
add
testl
sub
aam
mov
in
and
sub
xchg
les
mov
lock
les
add
push
rol
or
cmp
les
add
loope
cmp
testl
dec
add
jne
incl
mov
dec
xor
movsb
cmp
cmp
add
add
xor
lds
loopne
mov
les
add
push
rol
or
or
or
or
or
xchg
dec
xor
lret
das
ret
dec
pusha
loopne
les
cmp
add
testl
inc
pop
mov
insl
les
enter
mov
test
das
add
mov
es
cmp
cmp
iret
push
loope
ret
add
dec
adc
cmp
xor
jne
incl
das
bound
fidivl
add
mov
dec
or
les
push
pop
xchg
sub
cmp
cmp
sbb
ret
gs
les
xchg
gs
testl
loopne
addr16
les
loopne
dec
flds
dec
add
add
ret
test
mov
leave
les
les
rol
loope
les
les
les
dec
adc
xor
jne
incl
mov
dec
xor
jp
add
ret
test
mov
xchg
sub
xor
cmp
rclb
scas
cmp
stc
mov
les
pusha
loopne
les
xor
cmp
test
mov
leave
les
loopne
sub
push
rol
add
and
add
ret
mov
aam
and
sub
mov
les
mov
loopne
dec
leave
les
add
push
rol
or
mov
cmp
loope
les
les
cmp
mov
dec
add
jne
incl
mov
dec
xor
mov
add
ret
test
mov
testb
loopne
mov
les
add
push
rol
or
or
or
or
or
xchg
xchg
dec
test
enter
les
les
loope
cmp
dec
or
sub
mov
lea
mov
cmp
cmp
iret
add
cmp
dec
or
xor
jne
incl
mov
dec
xor
push
dec
fldcw
ret
cmp
mov
int3
scas
les
add
cmp
les
dec
mov
testl
scas
movl
fwait
lcall
or
or
or
or
ret
gs
les
ret
aam
add
addr16
les
loopne
xchg
sub
in
les
fadds
and
les
cmp
dec
add
loopne
mov
les
enter
or
or
or
or
or
or
or
scas
cmp
gs
les
gs
testl
fsubl
les
loopne
add
les
rorb
dec
fimull
loopne
dec
mov
mov
lcall
mov
sub
add
ljmp
mov
inc
pop
mov
sub
add
testl
sub
add
les
int3
inc
cmp
or
mov
rol
add
inc
pop
mov
sub
add
testl
sub
add
les
les
loopne
das
popa
dec
das
jns
das
and
in
dec
stc
clc
fs
cmp
dec
mov
xchg
cmp
dec
xchg
loopne
cmp
dec
mov
dec
lds
dec
mov
dec
shl
dec
lcall
dec
cld
xchg
sub
add
les
rorb
mov
adc
sub
add
les
xchg
dec
lcall
inc
add
dec
mov
fsubl
les
inc
add
push
rol
or
or
or
or
or
or
or
scas
cmp
gs
les
xchg
gs
testl
fsubl
les
fmuls
loopne
dec
and
add
push
jmp
loopne
les
rorb
dec
repz
pop
les
mov
pushl
mov
sub
add
ljmp
mov
inc
xor
rol
add
lods
shlb
rol
mov
sub
hlt
mov
sub
add
testl
sub
add
les
les
jl
ret
dec
ret
inc
mov
int
and
sub
aas
cmp
dec
mov
fsubl
les
add
pop
or
or
or
or
or
or
or
inc
add
pop
or
or
or
xchg
sub
jnp
les
or
or
or
and
lds
add
aam
int
sub
jp
les
rorb
push
rol
xchg
dec
xor
les
ja
les
rorb
pop
or
or
or
or
or
or
les
dec
xchg
int3
xchg
xchg
add
les
push
dec
add
or
dec
and
dec
nop
loopne
dec
aam
mov
push
int3
les
loopne
dec
lds
enter
xchg
dec
nop
loopne
xchg
cmp
xchg
rorb
aam
xchg
shlb
mov
jl
les
int3
push
int3
testl
les
or
or
or
dec
and
decl
incl
jl
les
int3
testl
scas
cmp
gs
les
gs
testl
in
mov
negl
dec
push
add
les
loopne
dec
cwtl
loopne
dec
mov
les
test
cmpxchg
dec
mov
shrb
hlt
les
loopne
xchg
dec
or
loopne
sub
sub
cmp
loopne
aam
leave
dec
mov
aam
sub
jns
les
rorb
clc
dec
nop
loopne
dec
sub
ret
ret
xchg
in
add
les
orb
add
loopne
mov
les
in
push
int3
les
xchg
xchg
dec
xor
ret
mov
dec
xor
sub
jns
les
shl
add
les
orb
ret
ret
mov
dec
mov
xchg
sub
jns
les
rorb
add
les
dec
or
rol
or
or
or
xchg
dec
xor
cmp
and
lds
jns
les
rorb
push
rol
or
lods
cld
clc
ret
gs
les
xchg
gs
testl
mov
les
xor
cmp
mov
add
les
loopne
mov
dec
xchg
aam
dec
xchg
aam
push
dec
mov
dec
int3
test
mov
out
add
cvttps2pi
les
add
lret
lods
pop
cs
cvttps2pi
les
in
dec
mov
sub
cmp
cmp
dec
lar
jmp
sub
mov
dec
adcl
rol
add
inc
mov
dec
xor
mov
mov
les
and
inc
mov
dec
mov
dec
mov
das
ret
aam
subl
aam
dec
subl
dec
leave
les
and
dec
mov
mov
les
and
or
or
or
cmp
cmp
gs
les
cmp
aam
add
loopne
xchg
gs
testl
lods
mov
les
int3
dec
mov
dec
les
shrb
cmp
cmp
xchg
add
les
les
or
or
or
or
ret
or
or
or
or
or
xchg
dec
and
testl
mov
dec
mov
enter
add
les
lods
insb
cs
or
ljmp
push
int3
les
mov
dec
mov
enter
add
les
lods
jl
ret
or
ljmp
push
int3
les
mov
dec
mov
enter
ret
or
add
inc
cmp
mov
dec
mov
enter
ret
or
faddp
les
lcall
loopne
lods
shrb
ret
or
faddp
les
lcall
or
or
or
or
or
or
or
ret
or
or
or
or
or
xchg
xchg
dec
mov
enter
lret
fmul
les
shrb
or
loopne
dec
add
insl
jmp
lcall
inc
sub
les
cmp
aam
add
loopne
lods
push
mov
aam
rcr
fs
cmp
mov
dec
shl
scas
cmp
fsubs
aam
lods
pop
mov
aam
shl
fs
dec
loopne
testl
les
pop
pop
or
or
or
or
or
or
or
or
aam
or
or
or
or
xchg
dec
sub
ret
aam
fs
rcl
gs
les
xchg
gs
cmc
cmpl
xor
addr16
les
sub
cmpl
lods
les
int3
xchg
cmp
cld
fs
cmpl
testl
leave
les
and
mov
dec
aad
testl
dec
add
add
cmp
les
xor
dec
leave
les
and
or
inc
sub
xchg
xchg
sub
cmp
cmp
dec
mov
int3
sub
imul
xor
loopne
xor
add
aam
lret
dec
and
xchg
jle
das
ret
mov
cmp
dec
mov
rorb
faddl
sbb
les
lcall
or
or
or
ret
gs
les
ret
aam
add
addr16
les
loopne
add
les
fadds
mov
dec
ret
rorb
push
dec
mov
inc
xor
les
les
fmuls
aam
or
dec
aam
lds
push
dec
mov
inc
xor
call
mov
enter
les
enter
or
or
or
or
or
or
scas
cmp
gs
les
xchg
gs
testl
fsubl
les
loopne
xchg
dec
mov
hlt
fs
and
lds
and
les
fadds
mov
dec
pusha
loopne
les
int3
inc
or
rolb
int3
decl
inc
or
mov
inc
or
inc
add
lret
fnstcw
les
lret
inc
push
les
aam
xor
lock
sbb
add
nop
loopne
dec
sub
add
dec
test
in
add
iret
dec
mov
dec
xchg
rclb
hlt
fs
mov
add
xor
inc
or
rolb
sar
mov
dec
mov
inc
or
inc
add
into
xchg
sub
js
les
mov
dec
mov
inc
xor
dec
adc
cmp
lock
add
loopne
mov
les
add
push
int3
les
and
les
les
scas
lds
cmp
xchg
cmp
lock
add
loopne
mov
les
add
push
int3
les
or
xchg
dec
sub
cmp
xchg
idivl
sub
outsl
rol
xchg
dec
sbb
xchg
xchg
cmp
add
fwait
dec
and
or
or
or
or
or
or
add
push
or
or
or
or
or
and
lds
push
int
sub
jb
les
rorb
push
rol
xor
dec
xor
ret
int
sub
jb
les
rorb
push
rol
inc
sub
dec
or
mov
scas
cmp
int3
xchg
scas
dec
and
dec
mov
sarb
roll
int3
xchg
cmp
clc
fs
les
shr
fs
les
mov
dec
mov
xchg
cmp
andb
add
pop
dec
xchg
rclb
cmp
mov
dec
add
cmp
aam
add
pop
or
or
xchg
dec
sub
cmp
sub
xchg
xchg
xchg
scas
les
les
cmp
xchg
fs
sbb
lcall
rcll
cmp
ret
scas
lds
cmp
dec
mov
outsb
rol
sbb
cmp
loopne
xor
add
aam
lret
dec
and
xchg
jle
das
ret
lds
cmp
scas
les
les
rcll
int3
dec
or
or
mov
cmp
nop
fs
rorb
dec
scas
lds
cmp
sub
sbb
cmp
loopne
xor
add
aam
lret
dec
mov
aam
jle
das
ret
outsb
cmp
int3
dec
or
xchg
scas
les
aam
scas
les
and
les
jp
les
fmull
rolb
popf
cmp
nop
fs
rorb
loopne
dec
scas
lds
cmp
pop
mov
xchg
cmp
clc
fs
mov
ret
xchg
cmp
clc
fs
mov
aam
mov
aam
cmpsl
insl
rol
sbb
xor
loopne
xor
add
aam
lret
dec
mov
aam
jle
das
ret
loopne
cmp
inc
pop
mov
scas
cmp
ret
cmp
clc
fs
lcall
les
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
loopne
dec
mov
in
and
les
rorb
fs
cmp
dec
rorb
rorb
adc
rorb
dec
lcall
adc
cmp
scas
lds
fs
add
mov
aam
dec
leave
les
add
push
rol
or
or
or
dec
les
mov
xchg
cmp
clc
fs
or
xchg
dec
sub
cmp
sub
xchg
xchg
cmp
jl
ret
cmp
cmp
mov
cmp
nop
fs
xor
mov
int3
sub
insb
rol
sbb
xor
loopne
xor
add
aam
lret
dec
and
xchg
jle
das
ret
in
cmp
cmp
fwait
lcall
shl
add
or
or
or
xchg
inc
shl
pop
or
or
or
or
or
xchg
dec
hlt
dec
mov
xchg
cmp
loopne
ret
add
int3
dec
add
les
or
dec
ret
jmp
scas
les
in
cmp
inc
add
mov
ret
dec
stc
in
ret
lret
in
scas
cmp
ret
add
fmull
scas
lds
call
lret
shrb
les
scas
les
in
cmp
inc
add
or
lahf
cltd
pop
or
ret
gs
les
xchg
gs
testl
fsubl
les
loopne
dec
and
idivl
dec
mov
dec
or
mov
in
ret
ret
mov
dec
mov
dec
mov
dec
mov
add
dec
mov
cmp
dec
sbb
cwtl
loopne
sub
arpl
les
pop
fistps
dec
and
xor
add
aam
lret
dec
nop
loopne
xchg
jle
das
ret
sub
cmp
dec
mov
dec
mov
mov
fsubl
les
add
push
int3
les
or
or
or
or
or
or
xchg
dec
xor
les
and
lds
jbe
les
rorb
push
rol
scas
cmp
gs
les
cmp
aam
add
addr16
les
loopne
dec
mov
fadd
les
xor
cmp
call
sub
fprem
fs
add
xchg
cmp
dec
mov
lret
dec
mov
xchg
cmp
xchg
sub
jbe
les
rorb
inc
add
xchg
cmp
add
fs
aam
mov
aam
dec
leave
les
add
push
rol
or
or
cmp
sub
inc
or
loopne
dec
and
std
mov
mov
dec
or
les
lods
fs
mov
dec
test
inc
add
hlt
cmp
nop
fs
xor
mov
int3
sub
popa
rol
sbb
xor
loopne
xor
add
aam
lret
dec
nop
loopne
xchg
jle
das
ret
outsl
xor
cmp
int3
les
or
or
cmp
cmp
gs
les
xchg
xchg
gs
testl
hlt
mov
les
scas
lds
in
cmp
in
ret
cmp
mov
xchg
in
xchg
xchg
xchg
scas
lds
loopne
xchg
xchg
add
les
loopne
cmp
test
ret
dec
cltd
fcoml
ret
add
dec
hlt
testl
loopne
nop
loopne
dec
mov
mov
xor
les
dec
xchg
rorb
loopne
xchg
dec
or
push
dec
mov
pushl
mov
dec
nop
loopne
dec
and
dec
mov
call
mov
dec
mov
dec
and
das
ret
dec
and
dec
mov
mov
incl
mov
dec
xor
mov
inc
add
dec
mov
loopne
or
in
xchg
dec
cld
cmp
loopne
ret
add
les
fcoml
cmp
dec
and
inc
add
dec
xor
add
xor
les
loopne
xchg
dec
adc
xchg
dec
nop
loopne
xchg
xchg
dec
mov
loopne
dec
mov
mov
ret
mov
xchg
cmp
loopne
ret
mov
fsubrl
pusha
rol
mov
xchg
xchg
xchg
xchg
xchg
cmp
and
add
cmp
dec
xor
add
inc
add
dec
mov
loopne
or
in
dec
cld
sub
cmp
cmp
loopne
dec
xor
add
shr
fs
add
dec
adc
cmp
dec
mov
pushl
mov
sub
cmp
loopne
mov
les
dec
and
or
or
or
or
scas
cmp
gs
les
xchg
gs
testl
fsubl
les
negl
xchg
dec
sbb
cmp
in
fs
add
in
dec
add
divl
sub
addr16
add
repz
dec
leave
les
add
pop
dec
leave
fsubl
mov
sarb
roll
ret
jmp
dec
nop
loopne
dec
and
fsubl
cmp
xchg
dec
or
loopne
sub
inc
add
fisttpll
loopne
les
cmp
or
inc
add
sub
loopne
dec
rcr
movsl
int3
aam
xchg
cmp
dec
pop
dec
mov
fsubl
les
add
pop
or
or
or
or
or
or
cmp
sub
xchg
dec
xor
lds
fcoms
aam
add
test
rclb
mov
add
hlt
cmp
nop
fs
xor
mov
int3
sub
data16
sbb
xor
loopne
xor
add
aam
lret
dec
nop
loopne
xchg
jle
das
ret
push
cmp
lcall
or
or
or
or
or
or
xchg
xchg
xchg
scas
dec
xor
sbb
les
shrb
mov
add
repnz
lcall
ret
adc
les
xchg
inc
add
rorl
das
dec
mov
scas
lds
call
fs
cmp
lock
lahf
pop
or
or
or
or
or
xchg
xchg
dec
div
sub
xor
inc
dec
les
decl
mov
dec
test
dec
incl
mov
dec
scas
rorb
xchg
scas
movb
fadd
les
rclb
fs
add
xchg
dec
stos
hlt
xchg
cmp
hlt
fs
push
dec
xchg
rorb
xchg
incl
mov
dec
mov
das
dec
mov
dec
mov
dec
incl
mov
dec
or
push
mov
dec
test
das
dec
orl
xchg
dec
xlat
dec
xchg
shrb
cmp
in
ret
cmp
lock
sub
pushl
lret
inc
mov
cmp
lcall
or
or
or
or
or
ret
gs
les
xchg
xchg
gs
testl
clc
mov
les
negl
das
dec
les
call
fs
cmp
lret
inc
push
les
hlt
xchg
dec
test
lock
hlt
fs
and
lds
loopne
dec
cwtl
loopne
dec
cwtl
loopne
add
orl
and
dec
adcl
mov
xchg
dec
mov
pushl
mov
dec
pusha
loopne
les
dec
xchg
aam
and
xchg
dec
or
push
dec
mov
pushl
mov
dec
and
xchg
sub
cmp
cmp
mov
orb
in
xor
pop
mov
dec
mov
inc
add
dec
mov
in
cmpxchg
dec
cwtl
loopne
dec
fsubrl
xor
cmp
loopne
dec
xor
pop
mov
xchg
add
cmp
cmp
lock
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
cmp
mov
xor
les
loopne
xchg
dec
mov
dec
nop
loopne
xchg
dec
and
xchg
xchg
cmp
mov
ret
xor
rcll
sub
and
incl
lret
inc
pop
les
sub
fs
mov
and
mov
dec
ret
enter
dec
and
dec
nop
loopne
das
enter
stos
int3
dec
and
dec
or
scas
lds
fcoms
ret
cmp
lret
inc
imul
cmp
loopne
add
les
loopne
dec
mov
call
xchg
xchg
xchg
xchg
cmp
inc
add
sub
pop
rol
mov
mov
rorb
xchg
dec
fldl
and
cmp
cmp
cmp
loopne
ret
add
ret
dec
add
cmp
cmp
les
mov
aaa
mov
inc
cmp
lret
inc
mov
cmp
sub
pop
rol
mov
mov
das
mov
loopne
lock
cmp
cmp
in
fs
add
inc
in
cmp
dec
mov
xchg
xchg
xchg
xchg
cmp
mov
add
sarl
rcll
xor
cmpsl
pop
rol
mov
mov
das
iret
sub
pop
rol
mov
mov
dec
test
testl
dec
leave
les
inc
add
push
rol
or
or
xchg
dec
sub
cmp
cmp
gs
les
gs
testl
in
addr16
les
dec
fwait
hlt
xchg
dec
cwtl
loopne
cmp
hlt
fs
and
lds
and
les
mov
rorb
inc
mov
scas
les
sarl
sub
add
hlt
cmp
nop
fs
xor
jge
rol
mov
enter
xor
loopne
xor
add
aam
lret
dec
mov
enter
das
ret
mov
cmp
inc
mov
scas
enter
rol
add
dec
and
add
add
into
xchg
dec
xor
movsl
cld
les
testl
loopne
xor
xchg
cmp
clc
fs
sub
outsb
rol
add
xchg
cmp
lock
mov
in
dec
leave
les
cltd
pop
or
or
or
or
cmp
hlt
fs
orl
pushl
dec
add
orl
lock
pop
std
xchg
shlb
decl
mov
dec
add
ss
cmp
lock
pop
dec
mov
dec
mov
dec
xchg
rclb
aam
pop
or
or
or
or
aam
mov
xchg
dec
mov
jl
addr16
orb
dec
xchg
dec
or
adc
mov
inc
xor
and
xor
sub
sub
les
push
rol
mov
fmull
loopne
dec
xchg
in
xchg
xchg
dec
and
cmp
test
ret
inc
add
pop
or
ret
gs
les
ret
aam
add
addr16
les
into
les
fadd
les
push
les
rorb
int3
add
add
into
xchg
dec
cmp
mov
testl
dec
cmp
add
mov
les
loopne
xchg
xchg
dec
or
or
cmp
dec
add
loopne
mov
les
push
rol
or
or
or
or
scas
cmp
gs
les
aam
add
addr16
les
loopne
add
les
rolb
lret
xchg
sub
sub
cmp
les
shrb
loopne
ret
add
ret
fsubl
aam
mov
int3
mov
les
push
rol
or
or
xor
dec
xor
ret
int
sub
insb
rol
add
dec
add
xchg
dec
sub
cmp
sub
xchg
xchg
dec
xor
les
enter
dec
mov
cmp
cmp
pop
or
or
or
or
or
cmp
cmp
gs
les
xchg
gs
testl
in
mov
les
sub
pop
rol
mov
std
test
mov
inc
std
daa
mov
idivl
negl
dec
cwtl
loopne
dec
mov
mov
sbb
cmp
enter
decb
loopne
add
imull
nop
loopne
xchg
xchg
sub
inc
mov
loopne
lds
xor
les
loopne
dec
cwtl
loopne
sub
jae
les
loopne
dec
cwtl
loopne
jl
les
xor
add
les
les
dec
adc
jle
fidivl
sub
cmp
pushf
fs
pop
mov
inc
sub
dec
mov
call
loopne
jg
les
loopne
sub
icebp
les
fadds
and
dec
or
loopne
scas
add
les
test
les
test
les
ffree
les
inc
add
dec
les
add
adc
and
cmp
cmp
inc
cmp
inc
push
cmp
add
ret
dec
xchg
rorb
push
dec
or
or
int3
mov
dec
rorl
int3
dec
or
adc
mov
in
mov
les
and
or
or
or
or
or
or
scas
cmp
gs
les
ret
aam
add
addr16
les
and
nop
fwait
int3
aam
and
rol
les
and
dec
icebp
mov
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
add
icebp
mov
int3
aam
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
add
icebp
test
int3
aam
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
add
icebp
mov
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
testl
mov
xchg
cmp
clc
fs
mov
enter
les
pop
xchg
dec
sub
cmp
cmp
gs
les
les
cmp
aam
add
loopne
mov
xchg
xchg
xchg
gs
testl
mov
addr16
les
loopne
dec
sbb
lods
xchg
add
les
ror
fs
add
inc
insl
mov
divl
notl
dec
and
mov
add
les
loopne
dec
xchg
dec
cmp
mov
out
push
adc
loopne
xchg
dec
mov
xchg
sub
faddp
les
loopne
mov
dec
and
jnp
les
loopne
sub
cmpsb
les
mov
inc
mov
inc
add
loopne
xchg
sub
pusha
rol
add
sub
lods
add
ret
lds
ret
cmp
mov
mov
inc
mov
inc
aam
les
loopne
xchg
sub
pusha
rol
add
sub
dec
icebp
nop
fs
adc
jae
lret
inc
pop
cmp
inc
cmp
lret
inc
adc
les
cmp
mov
dec
pop
sub
sbb
cmp
scas
enter
rol
cmp
add
dec
mov
loopne
mov
lds
mov
sub
mov
sub
cmp
das
testl
add
inc
mov
les
test
inc
cli
lret
inc
rol
les
rol
cmp
add
inc
cmp
ret
dec
test
inc
add
xchg
cmp
fsubs
dec
add
testl
test
inc
sti
lret
inc
sbb
les
rol
cmp
add
dec
mov
loopne
mov
movb
leave
dec
repnz
xchg
sub
aad
les
das
testl
loopne
mov
les
sti
lret
inc
pop
les
dec
insb
rol
add
dec
and
add
inc
mov
movl
add
testl
dec
add
inc
loopne
mov
les
test
mov
dec
and
xchg
sub
and
int3
add
inc
mov
rolb
sarb
cli
aam
xchg
dec
mov
loopne
sub
test
mov
jle
les
mov
in
pop
cmp
dec
mov
cmp
dec
add
les
and
mov
xchg
sub
push
cmp
testl
push
int3
les
fsubrs
int3
les
shrb
int3
les
enter
les
sub
push
cmp
dec
nop
loopne
xchg
cmp
clc
fs
mov
fisttpl
loopne
xchg
sub
data16
add
das
aam
cmp
clc
fs
mov
mov
dec
dec
loopne
mov
mov
les
dec
loopne
mov
testl
les
cltd
push
rol
or
or
or
or
or
or
or
lods
nop
fwait
int3
aam
bound
stc
cwtl
fwait
int3
aam
mov
movsb
fwait
int3
aam
test
sub
cmp
jl
les
fwait
int3
aam
lret
add
les
les
dec
adc
fidivl
cmpsl
push
cmp
xchg
cmp
pushf
fs
or
or
or
or
or
or
cmp
sub
xchg
lods
nop
fwait
int3
aam
clc
sbb
mov
int3
aam
mov
add
les
push
rol
mov
int3
aam
aam
mov
xchg
inc
push
rclb
dec
and
add
pop
les
and
les
ffreep
les
loopne
les
int3
aam
jl
cli
aam
gs
int3
aam
mov
add
xchg
sub
cmpsb
les
les
fwait
int3
aam
lret
add
les
les
dec
adc
fidivl
insb
sbb
rcrl
and
or
or
or
or
or
loopne
xchg
dec
xor
sbb
les
adc
les
add
dec
mov
test
mov
out
add
xlat
les
rol
or
or
or
xchg
dec
xor
mov
dec
lds
aam
push
inc
add
ret
les
or
fmul
mov
dec
add
sub
fs
add
add
les
adc
testl
or
or
loopne
inc
cmp
mov
cmp
inc
or
aam
and
add
les
dec
and
add
cmp
cmp
pop
dec
and
add
cmp
cmp
pop
dec
and
add
les
dec
and
add
cmp
cmp
pop
push
js
aam
add
pop
add
jne
aam
add
or
or
xchg
dec
sub
cmp
or
les
xchg
sub
sbb
les
lret
les
rol
push
mov
add
lret
inc
push
les
push
xor
push
les
push
dec
ret
rorb
and
or
xchg
dec
cmc
inc
xor
inc
or
int3
mov
dec
rorb
scas
les
cmp
scas
les
rcl
fs
cmp
fsubl
lcall
add
mov
les
aam
add
addr16
les
loopne
scas
shrb
rolb
rorb
testl
les
enter
adc
sbb
les
dec
mov
int3
mov
les
push
rol
or
or
or
or
xchg
dec
xor
mov
ret
das
pop
rol
add
lcall
or
or
or
dec
int3
xchg
sub
sbb
cmp
or
or
or
or
les
pop
push
cmp
pop
or
xchg
dec
sub
cmp
sub
sub
and
cmp
les
pop
mov
aam
shr
fs
add
out
shl
ja
rol
and
jl
ljmp
dec
enter
test
ret
mov
or
int3
les
or
or
or
or
or
or
or
lods
push
mov
aam
shl
fs
add
ret
fsubl
aam
or
or
or
or
or
inc
mov
dec
les
aam
dec
int3
inc
or
dec
scas
lds
adc
or
mov
dec
mov
xchg
cmp
clc
fs
sub
pop
rol
add
lcall
mov
dec
rcr
movsl
int3
aam
xchg
cmp
dec
fs
or
or
or
or
or
or
or
testl
or
or
or
cmp
sub
xchg
xchg
dec
xor
sbb
insl
xor
cmp
mov
dec
or
and
mov
aam
add
aam
sub
int
les
fsubr
xchg
faddl
int3
add
mov
sub
pusha
rol
mov
dec
and
xchg
xchg
dec
nop
loopne
xchg
sub
int3
les
loopne
dec
cwtl
loopne
inc
add
dec
and
dec
or
test
dec
xor
xchg
dec
cwtl
loopne
sub
sbb
les
les
rol
push
mov
add
lret
inc
push
les
push
xor
push
les
push
dec
and
dec
mov
aam
and
dec
nop
loopne
sub
fcmovnb
les
cmp
mov
in
pop
leave
les
rorb
mov
shl
xor
xor
dec
mov
aam
and
dec
mov
fmull
loopne
sub
fcmovnb
les
cmp
out
mov
fmull
loopne
add
les
loopne
sub
fcmovnb
les
cmp
les
loopne
dec
nop
loopne
xchg
lods
sub
les
rol
lcall
les
cmp
sub
xchg
xchg
dec
xor
sbb
insl
xor
cmp
mov
dec
or
and
mov
aam
add
aam
sub
int3
les
fsubr
xchg
faddl
int3
add
mov
sub
addr16
mov
dec
and
xchg
xchg
dec
nop
loopne
xchg
sub
ret
dec
and
dec
cwtl
loopne
inc
add
dec
and
dec
or
test
dec
xor
xchg
dec
cwtl
loopne
sub
push
rol
les
xchg
sub
pop
rol
push
mov
add
lret
inc
push
les
push
xor
push
les
push
dec
and
dec
mov
aam
and
dec
nop
loopne
sub
fcmovb
les
cmp
mov
in
or
cmp
dec
mov
dec
fmull
loopne
dec
pop
fwait
lcall
divl
dec
mov
aam
and
dec
mov
fmull
loopne
sub
fcmovb
les
cmp
mov
rorb
fwait
lcall
les
loopne
dec
and
add
les
loopne
sub
fcmovb
les
cmp
les
loopne
fwait
lcall
push
rol
or
or
or
or
or
xchg
dec
sub
cmp
sub
xchg
xchg
dec
and
lods
add
aam
dec
xor
les
fsubr
mov
inc
add
xor
mov
dec
mov
out
xchg
faddl
mov
sub
data16
sbb
dec
mov
enter
rol
inc
add
inc
add
xchg
dec
xchg
fsubr
xchg
faddl
mov
sub
gs
sbb
test
dec
int3
inc
or
rolb
rorl
das
dec
lret
dec
mov
dec
mov
add
les
test
les
les
fsubr
xchg
fdivl
push
xor
cmp
mov
fwait
lcall
or
or
or
or
or
or
xchg
dec
sub
cmp
sub
xchg
negl
xchg
xchg
std
popf
int3
mov
dec
mov
dec
xchg
enter
dec
aam
pop
mov
dec
mov
pushl
mov
dec
xchg
shrb
dec
rorl
rorb
dec
fmull
rorb
dec
pushf
aam
popf
int3
mov
dec
popf
fdivr
popf
fmull
enter
andb
dec
mov
and
mov
mull
les
loopne
dec
ret
xchg
xchg
dec
nop
loopne
xchg
xchg
sub
rol
les
cltd
push
rol
or
or
or
aam
mov
rclb
les
rolb
rol
les
mov
dec
xchg
rolb
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
es
or
or
or
or
or
or
xchg
dec
test
aam
xchg
dec
xor
shrl
mov
mov
fsubr
cmp
add
aaa
mov
scas
cmp
cmp
leave
les
sub
leave
les
lahf
push
enter
cmp
mov
sbb
add
xchg
xchg
dec
or
cmp
aam
jmp
xchg
shrb
inc
cmp
inc
cmp
mov
dec
add
add
les
lcall
add
add
les
lcall
xchg
rorb
dec
lcall
dec
das
dec
pop
xchg
adc
push
rol
add
inc
mov
shlb
sar
fwait
dec
add
les
or
or
or
dec
add
dec
les
test
mov
out
add
les
or
or
or
or
or
or
rol
xchg
dec
mov
mov
inc
mov
dec
add
dec
faddl
mov
xchg
xchg
scas
aam
sub
push
rol
add
xchg
sub
pop
rol
add
lahf
dec
mov
lret
les
cmp
les
or
or
or
dec
mov
rolb
inc
or
xchg
sub
pop
rol
add
inc
add
push
rol
or
notl
xor
and
loopne
xchg
dec
mov
rolb
loopne
les
pop
rol
mov
loopne
xchg
add
ret
gs
les
or
or
or
or
or
xchg
dec
sub
cmp
or
xchg
cmp
inc
mov
or
les
test
les
cltd
pop
dec
or
cmp
add
dec
and
add
cmp
cmp
add
dec
and
add
les
test
les
cltd
pop
dec
or
cmp
add
dec
and
mov
mov
aam
mov
aam
mov
aam
mov
aam
dec
sub
cmp
dec
or
dec
cltd
enter
fcoml
add
movsl
inc
pop
mov
lahf
inc
xor
cmp
scas
clc
xchg
xchg
sub
adc
les
dec
push
dec
and
dec
pop
pop
or
and
scas
les
xchg
sub
adc
les
dec
adc
or
test
xchg
xchg
sub
adc
movl
lahf
dec
and
pop
mov
or
dec
mov
inc
xor
cmp
adc
xor
scas
les
clc
xchg
xchg
sub
adc
les
dec
push
dec
and
dec
pop
pop
or
and
scas
les
xchg
sub
adc
les
dec
adc
or
test
xchg
xchg
sub
adc
les
sbb
les
sbb
cmp
ss
add
dec
and
or
or
cmp
dec
or
enter
incl
mov
adc
les
testl
or
or
or
or
or
or
or
or
cmp
int3
dec
xchg
rolb
xchg
dec
cltd
int3
xchg
dec
mov
int3
inc
ds
les
inc
cmp
cmp
cmp
cmp
cmp
mov
mov
inc
cmp
les
inc
aas
cmp
cmp
mov
cmp
cmp
mov
dec
push
xlat
add
rorb
add
pop
dec
and
dec
mov
int3
xchg
dec
mov
enter
aam
dec
nop
loopne
dec
cwtl
loopne
dec
mov
jecxz
les
dec
test
fwait
dec
add
rorb
lahf
dec
and
or
or
cmp
or
aam
sub
xchg
dec
mov
inc
or
les
inc
cmp
cmp
cmp
mov
cmp
cmp
mov
dec
mov
inc
or
les
inc
cmp
cmp
cmp
mov
cmp
cmp
mov
dec
testb
dec
xchg
shr
filds
mov
or
inc
adc
xor
sbb
sbb
xchg
int3
dec
xchg
dec
into
dec
push
lcall
dec
xchg
rorb
int3
dec
int3
dec
nop
loopne
dec
xchg
rorb
aam
and
xchg
dec
mov
fcoms
dec
nop
loopne
sub
jecxz
les
dec
test
inc
cmp
cmp
cmp
int3
testl
cmp
inc
add
dec
add
inc
or
les
dec
mov
jl
les
cmp
int3
dec
add
inc
cmp
cmp
cmp
sarl
les
int3
xchg
xchg
sub
cmp
cmp
int3
dec
add
or
or
or
or
cmp
sub
and
xchg
cmp
push
and
dec
mov
shrb
add
adc
xchg
xchg
sub
push
rol
les
xchg
sub
adc
les
dec
mov
call
xchg
dec
nop
loopne
xchg
dec
cwtl
loopne
dec
and
cmp
jae
enter
jle
les
mov
adc
inc
ds
mov
scas
lds
into
les
into
scas
lds
les
adc
test
les
mov
adc
inc
ds
mov
scas
lds
iret
les
into
scas
lds
les
ret
les
lret
jae
jle
rol
dec
or
adc
inc
ds
leave
scas
les
sub
into
les
jecxz
les
scas
lds
sub
into
les
loopne
sub
add
cmp
dec
mov
dec
xchg
int3
scas
les
pop
aas
cmp
dec
mov
inc
add
dec
mov
in
nop
loopne
xchg
dec
and
dec
and
dec
nop
loopne
xchg
dec
or
loopne
sub
iret
les
dec
and
or
or
or
scas
enter
rol
add
inc
add
dec
les
rolb
dec
lds
or
or
or
dec
mov
dec
lds
dec
mov
dec
rolb
fadd
incl
dec
pop
les
xchg
sub
push
rol
add
dec
add
mov
dec
adc
sub
push
rol
add
add
les
or
or
or
or
or
ret
gs
les
enter
testl
in
mov
les
rolb
out
dec
mov
shrb
push
rol
and
les
and
subb
aam
mov
rolb
and
les
fcmovnb
les
dec
and
scas
xchg
sub
cmp
int3
dec
mov
enter
dec
mov
aam
add
cmp
into
les
loopne
xchg
sub
or
cmp
add
dec
mov
in
mov
les
pop
or
ret
gs
les
xchg
xchg
gs
testl
in
mov
les
loopne
dec
and
dec
mov
aam
mov
fdiv
pop
xchg
add
int3
aam
cwtl
loopne
sub
sbb
cmp
int3
dec
or
les
add
cmp
enter
dec
lcall
loopne
dec
cwtl
loopne
sub
add
cmp
dec
rorb
rorb
dec
lcall
in
mov
les
inc
add
push
int3
les
or
or
or
ret
gs
les
enter
testl
shlb
les
loopne
add
les
dec
mov
dec
mov
les
rolb
and
cmp
cmp
sub
into
les
loopne
mov
les
add
push
rol
or
or
or
or
or
or
or
enter
xchg
dec
xor
sbb
sbb
insl
xor
cmp
lret
inc
add
les
fsubr
mov
add
lret
inc
imul
les
fsubr
xchg
faddl
push
mov
dec
sbb
or
mov
xor
lret
inc
dec
les
xor
sbb
inc
les
fsubr
xchg
faddl
xchg
sub
enter
sbb
or
mov
xor
mov
inc
add
dec
sbb
mov
pop
mov
dec
xchg
fsubr
xchg
faddl
mov
sub
push
rol
sbb
sbb
and
mov
lcall
shrl
add
fcoml
cmp
inc
add
inc
add
into
xchg
dec
add
into
les
int3
xchg
dec
add
into
std
stos
int3
mov
dec
xchg
enter
dec
adc
mov
dec
xchg
enter
dec
or
dec
xchg
aam
xchg
aam
lcall
cltd
lahf
push
rol
or
or
or
or
or
or
or
cmp
or
les
xchg
sub
or
les
les
rol
push
mov
add
lret
inc
push
les
push
xor
push
les
push
dec
ret
rorb
and
or
xchg
dec
cmp
add
sub
int
les
xchg
xchg
dec
test
enter
mov
std
mov
pop
sub
les
rorb
loopne
out
add
pop
mov
dec
sbb
adc
or
ret
dec
rcr
call
shrl
mov
pop
lret
inc
outsl
les
rol
aas
inc
cmp
mov
sub
sub
les
fdivr
add
xchg
xchg
dec
or
lret
inc
cmp
inc
inc
les
mov
dec
test
cmp
inc
cmp
mov
dec
add
add
les
lcall
add
add
les
lcall
add
dec
sbb
cmp
mov
dec
xchg
shrb
dec
xchg
rorb
xchg
dec
cwtl
loopne
das
out
add
xchg
sub
dec
rol
add
inc
mov
shlb
add
cld
les
lahf
push
enter
rolb
cld
les
lahf
push
enter
or
or
loopne
xchg
xchg
xchg
dec
xor
dec
mov
inc
cmp
mov
dec
int3
das
dec
or
adc
aam
rorb
dec
or
lcall
flds
aam
dec
les
loopne
xchg
out
adc
xchg
dec
or
cmp
cmp
les
rolb
cmp
out
adc
adc
decl
shrl
mov
sub
inc
inc
les
rol
cmp
cmp
mov
sbb
add
xchg
xchg
dec
or
leave
les
mov
dec
sbb
lcall
dec
xlat
das
call
dec
mov
mov
dec
add
fwait
add
les
lcall
rcrb
add
dec
pop
dec
mov
xchg
dec
test
fsubr
add
xchg
sub
dec
rol
add
inc
mov
shlb
sar
cltd
fwait
dec
add
or
or
or
or
xchg
dec
test
int3
xchg
xchg
dec
xor
dec
xchg
fmull
rolb
mov
dec
int3
das
dec
or
sub
aam
rorb
dec
or
mov
cmp
mov
dec
les
loopne
xchg
out
sub
xchg
dec
or
aaa
cmp
fwait
lcall
loopne
inc
cmp
mov
sub
cs
sbb
add
xchg
xchg
dec
or
enter
cmp
xchg
dec
lcall
dec
das
out
inc
cmp
inc
cmp
mov
dec
add
add
les
lcall
rcrb
lcall
xchg
xchg
xchg
xchg
sub
dec
rol
add
inc
mov
shlb
sar
lahf
fwait
dec
add
or
or
or
or
or
xchg
dec
cwtl
loopne
xchg
dec
xor
mov
sub
sub
rorb
loopne
out
pop
incl
mov
dec
cmp
cmp
xchg
dec
stos
rolb
mov
dec
xchg
les
loopne
das
rorb
rolb
aam
rorl
das
dec
adc
add
pop
movl
pop
xchg
sub
dec
rol
adc
add
aam
mov
shlb
add
in
les
lahf
push
int3
les
or
or
or
or
or
or
xchg
xchg
xchg
xchg
dec
cmp
add
cmp
mov
dec
int3
das
dec
or
xchg
rorb
loopne
dec
lock
add
les
mov
inc
cmp
mov
dec
int3
das
dec
or
or
mov
dec
adc
ss
sub
push
rol
lcall
cltd
dec
pop
lahf
push
rol
or
or
or
loopne
inc
cmp
mov
inc
mov
dec
rorb
enter
rorb
enter
loopne
dec
nop
loopne
inc
add
push
enter
mov
dec
shrb
inc
add
rclb
push
xchg
sub
xadd
inc
add
push
enter
or
or
or
xchg
dec
cwtl
loopne
xchg
dec
xor
shrl
fdivr
pop
mov
dec
adc
xchg
dec
or
into
testl
push
int3
les
aam
mov
inc
aas
aam
mov
sbb
cmp
mov
dec
add
dec
in
inc
cmp
aam
sub
dec
rol
add
xchg
sub
dec
rol
add
cltd
dec
mov
lret
testl
filds
xor
push
int3
les
mov
dec
lcall
dec
mov
testl
sbb
push
int3
les
rolb
testl
push
int3
les
or
or
mov
enter
mov
dec
mov
inc
cmp
mov
dec
aam
dec
adc
push
mov
inc
cmp
mov
dec
aam
dec
adc
lcall
mov
inc
cmp
mov
dec
les
loopne
out
or
adc
or
iret
les
les
loopne
inc
cmp
cmp
mov
and
les
fdivr
add
xchg
xchg
dec
or
les
mov
dec
mov
xchg
dec
stos
rolb
mov
dec
add
mov
dec
mov
mov
dec
add
or
dec
add
dec
add
or
dec
add
dec
add
loopne
dec
fdivr
xchg
xchg
or
dec
rol
add
inc
mov
shlb
notl
mov
fwait
dec
add
or
or
cmp
mov
inc
mov
mov
les
cltd
pop
testl
or
or
or
or
or
or
cmp
cmp
gs
les
cmp
aam
add
addr16
les
loopne
sub
jle
cmp
les
rol
les
or
or
or
or
or
or
or
or
cmp
cmp
gs
les
cmp
aam
add
addr16
les
loopne
sub
jle
cmp
les
fcmovb
les
or
or
or
or
or
or
or
or
cmp
cmp
gs
les
cmp
aam
add
addr16
les
loopne
sub
jle
cmp
les
fcmovb
les
or
or
or
or
or
or
or
or
cmp
lds
rolb
int3
inc
cmp
mov
inc
cmp
mov
inc
cmp
mov
inc
cmp
mov
inc
cmp
mov
testl
les
cltd
pop
xchg
dec
sub
cmp
or
xchg
dec
xor
les
add
les
xchg
dec
mov
xchg
cmp
mov
dec
or
cmp
cmp
mov
dec
lret
dec
mov
les
dec
mov
in
clc
add
movl
dec
xchg
rcrb
push
int3
les
dec
add
mov
enter
aam
dec
nop
loopne
xchg
dec
mov
fmull
loopne
dec
and
sub
fcmovb
les
dec
lret
rcrb
lcall
les
or
or
or
or
or
or
xchg
dec
sub
cmp
lds
rorb
and
or
or
or
or
or
or
scas
enter
rol
add
inc
add
ret
loopne
dec
int3
dec
mov
inc
or
loopne
dec
aad
mov
inc
or
loopne
dec
dec
aad
enter
or
or
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
fdivrl
cmp
sti
out
adc
lds
fsubrl
ret
mov
enter
loopne
les
and
les
and
les
and
xchg
dec
mov
loopne
and
les
imul
lods
les
loopne
xchg
add
ret
es
rol
dec
test
dec
mov
mov
les
or
or
or
or
xchg
xchg
xchg
dec
repz
pushl
mov
das
dec
les
decl
mov
dec
test
dec
ret
incl
mov
dec
fwait
rorb
sub
or
cmp
pushl
mov
lcall
or
or
or
or
or
fcoml
xchg
dec
test
loopne
dec
xor
and
lods
add
aam
sub
xor
dec
add
dec
xchg
rorb
dec
and
dec
mov
in
dec
sub
cmp
dec
xchg
rolb
inc
mov
loopne
dec
nop
loopne
mov
divl
sub
mov
das
loopne
xchg
xchg
xchg
xchg
sub
fld
les
add
sub
mov
dec
nop
loopne
dec
add
and
dec
xlat
dec
xchg
negl
sub
mov
rorb
cltd
dec
fistpl
int3
les
or
xchg
dec
cwtl
loopne
xchg
xchg
xchg
dec
mov
xor
pop
mov
dec
sbb
sbb
cmp
cmp
shrl
rol
mov
out
mov
dec
sub
faddl
mov
sub
dec
rol
pop
add
fcoml
cmp
inc
add
inc
add
aam
xchg
sub
dec
sbb
mov
fwait
lcall
or
or
dec
sbb
sbb
dec
mov
sti
lds
lret
inc
jg
les
fsubr
mov
dec
stos
lds
mov
dec
xchg
fsubr
xchg
faddl
mov
sub
dec
rol
sbb
sbb
sbb
faddl
mov
sub
dec
rol
or
fcoml
cmp
inc
add
inc
add
dec
cmp
fsubr
xchg
faddl
mov
sub
dec
rol
sbb
sbb
test
rorb
add
faddl
mov
sub
dec
rol
or
fcoml
cmp
inc
add
inc
add
in
xchg
sub
les
fsubr
xchg
fmull
loopne
dec
mov
sar
lret
inc
cmpb
cmp
rol
or
or
or
or
or
or
or
dec
sbb
sbb
sub
xchg
xchg
xchg
dec
mov
sar
mov
sub
dec
rol
sbb
test
loopne
and
dec
enter
cld
rol
dec
mov
enter
dec
nop
loopne
dec
xchg
enter
out
sbb
mov
rolb
loopne
ljmp
shrl
rol
mov
out
mov
dec
lcall
rol
std
mov
in
shrl
rol
sbb
xlat
dec
sar
dec
pop
movl
xchg
int3
dec
xchg
int3
dec
loopne
dec
mov
dec
xchg
fsubr
xchg
faddl
mov
sub
dec
rol
sbb
mov
enter
aam
add
dec
mov
rorb
rorb
fmull
int3
dec
xchg
enter
out
sbb
cmp
std
and
mov
sub
dec
rol
mov
dec
nop
std
int3
dec
and
dec
xchg
dec
mov
out
mov
add
mov
sub
dec
rol
xchg
fmull
out
int3
fwait
cltd
dec
pushf
int3
lahf
inc
add
push
int3
les
or
or
xchg
dec
test
aam
xchg
add
les
mov
dec
and
std
xchg
mov
incl
popa
dec
rol
and
dec
mov
in
dec
iret
dec
mov
dec
add
sar
aam
int
inc
dec
rol
mov
in
dec
add
mov
incl
dec
rol
mov
decl
mov
dec
mov
adc
rol
dec
add
xor
les
dec
lock
rorb
rorb
dec
mov
int3
dec
mov
dec
mov
enter
incl
mov
dec
xchg
aam
lcall
les
or
dec
test
pop
or
or
or
or
or
or
dec
test
pop
or
or
or
or
or
or
xchg
dec
int3
xchg
dec
mov
enter
add
les
adc
les
and
les
add
dec
mov
les
test
mov
out
add
xor
cmp
push
rol
or
or
or
dec
mov
enter
add
les
adc
les
and
les
add
dec
mov
les
test
mov
out
add
xor
cmp
push
rol
or
or
or
dec
mov
enter
add
les
adc
les
and
les
add
dec
mov
les
test
mov
out
add
xor
cmp
push
rol
or
or
or
loopne
xchg
xchg
dec
xor
cmp
ret
ret
add
or
or
or
xchg
dec
xor
add
cmp
ret
add
dec
mov
xchg
sub
inc
rol
xchg
rclb
les
enter
int3
lds
ret
ret
int
sub
inc
rol
add
dec
add
or
or
or
or
or
or
xchg
dec
cwtl
loopne
xchg
inc
or
dec
xor
pop
mov
sub
sbb
les
lret
inc
inc
les
aas
inc
cmp
mov
sub
sbb
les
fdivr
add
xchg
xchg
dec
or
les
mov
dec
nop
loopne
dec
adc
xchg
xchg
dec
or
mov
shlb
add
cld
les
push
int3
les
mov
dec
mov
mov
dec
add
add
les
lcall
rcrb
lcall
rolb
cld
les
push
int3
les
or
or
or
or
or
lods
in
ret
gs
les
xchg
gs
testl
mov
les
xor
cmp
or
lret
inc
cmp
mov
dec
xor
out
fdivrl
outsb
outsb
xor
dec
unpckhps
mov
jl
cmp
cmp
add
dec
lock
lds
cmp
les
and
cmp
int3
das
loop
or
subl
add
and
cmp
int3
jl
mov
mov
dec
cltd
enter
in
mov
dec
add
dec
add
xchg
dec
or
xchg
sub
mov
aam
mov
dec
mov
xchg
sub
mov
rorb
dec
add
les
dec
mov
dec
fwait
rolb
aam
dec
add
dec
mov
mov
les
and
mov
inc
mov
dec
xchg
rclb
inc
add
scas
les
sbb
les
adc
les
les
pop
rol
or
or
or
xchg
dec
cwtl
loopne
xchg
dec
test
enter
xor
shrl
mov
mov
fsubr
aas
incl
mov
dec
cmp
xor
aas
xchg
dec
or
scas
les
sub
ret
fwait
dec
add
les
cmp
cmp
pop
mov
sbb
add
xchg
xchg
dec
or
ret
inc
cmp
int3
mov
dec
mov
das
cmc
inc
cmp
inc
cmp
mov
dec
add
or
dec
add
les
shl
fwait
mov
lcall
mov
inc
mov
shlb
dec
add
loopne
dec
enter
sti
xchg
xchg
dec
mov
dec
ror
xchg
xchg
sub
mov
aam
mov
shlb
testl
dec
add
les
or
or
or
or
or
or
or
xchg
dec
sub
cmp
mov
inc
mov
inc
mov
jl
les
cltd
pop
testl
or
or
or
or
or
or
cmp
sub
xchg
dec
fmull
rclb
inc
pop
mov
stc
les
inc
aas
cmp
cmp
cmp
cmp
les
dec
mov
int3
inc
cmp
les
inc
cmp
mov
inc
cmp
cmp
mov
cmp
inc
push
cmp
cmp
mov
les
cmp
cmp
les
dec
mov
mov
inc
cmp
cmp
mov
les
mov
stc
les
inc
xor
filds
cmp
cmp
mov
sub
aaa
cmp
inc
add
inc
add
into
inc
or
fwait
lcall
and
inc
aas
cmp
cmp
sub
aaa
cmp
inc
add
inc
add
cld
xchg
xchg
sub
cmp
cmp
int3
inc
add
dec
and
xchg
xchg
sub
cmp
cmp
int3
inc
add
fmull
loopne
incl
mov
sbb
in
sar
mov
jl
les
cltd
pop
inc
std
cmp
cmp
cmp
fwait
lcall
lcall
dec
and
or
or
or
or
or
or
cmp
shll
les
dec
or
xchg
xchg
sub
rol
les
or
sub
stos
rol
and
or
enter
loopne
les
push
dec
add
or
or
or
or
dec
or
sub
mov
aam
sub
mov
rclb
les
enter
xchg
dec
cwtl
loopne
xchg
xchg
dec
mov
rorb
xchg
dec
mov
shlb
mov
sub
sbb
rorb
loopne
dec
add
mov
dec
adc
nop
loopne
dec
xchg
out
add
loopne
incl
mov
dec
cmp
or
out
push
out
add
add
sbb
les
rorb
loopne
dec
sbb
or
push
out
or
sbb
push
dec
mov
fmull
loopne
incl
mov
inc
aas
cmp
mov
nop
loopne
dec
sbb
dec
mov
xchg
xchg
dec
or
aas
cmp
dec
nop
loopne
das
roll
mov
dec
cltd
rolb
aam
rorl
das
dec
add
cltd
sar
loopne
mov
dec
sbb
int3
dec
xlat
dec
nop
loopne
das
rorb
in
inc
cmp
mov
dec
iret
das
dec
cmovg
nop
loopne
adc
nop
loopne
out
add
xchg
or
les
loopne
inc
add
inc
mov
dec
or
xchg
shrb
dec
adc
push
rorb
inc
cmp
mov
dec
iret
das
dec
setae
loopne
adc
or
les
ds
dec
sbb
rorb
dec
cmova
mov
dec
xlat
dec
nop
loopne
das
rorb
in
nop
loopne
xchg
push
out
add
call
jg
rol
sbb
cmp
mov
dec
iret
dec
mov
loopne
rorb
loopne
cmp
mov
dec
iret
das
dec
cmovg
nop
loopne
adc
nop
loopne
out
add
xchg
or
les
loopne
incl
mov
dec
sbb
int3
dec
iret
dec
mov
in
rorb
in
cmp
mov
dec
iret
das
dec
cmovg
nop
loopne
adc
nop
loopne
out
add
xchg
or
les
faddl
aam
cmp
mov
dec
xlat
das
dec
pop
inc
cmp
mov
dec
iret
xchg
dec
mov
xchg
out
add
xchg
dec
mov
xchg
out
add
xchg
or
les
sar
or
sbb
aam
int3
dec
xlat
dec
nop
loopne
das
rorb
in
cmp
mov
dec
iret
das
dec
cmovg
nop
loopne
adc
nop
loopne
out
add
xchg
or
les
faddl
aam
cmp
mov
dec
iret
das
dec
cmova
mov
out
mov
fmuls
mov
loopne
or
add
out
mov
fmuls
mov
loopne
or
add
les
aam
rorb
dec
cmova
mov
dec
xlat
dec
nop
loopne
das
rorb
in
nop
loopne
xchg
dec
nop
loopne
push
out
add
call
lock
faddl
aam
cmp
mov
dec
iret
dec
mov
in
rorb
in
cmp
mov
dec
iret
das
dec
cmovg
nop
loopne
adc
nop
loopne
out
add
xchg
or
les
faddl
aam
cmp
mov
dec
iret
dec
mov
in
rorb
in
cmp
mov
dec
xlat
dec
nop
loopne
das
rorb
fmull
loopne
dec
or
mov
fsubr
add
push
dec
nop
loopne
or
adc
add
sub
mov
les
loopne
inc
add
inc
mov
shlb
add
mov
lahf
popf
push
rol
or
xchg
dec
cwtl
loopne
xchg
dec
xor
mov
sub
adc
les
rorb
loopne
out
pop
incl
mov
dec
cmp
cmp
xchg
dec
stos
rolb
mov
dec
xchg
les
loopne
das
rorb
rolb
int3
mov
dec
xchg
les
loopne
das
rorb
fmull
loopne
out
add
add
dec
sar
rolb
xchg
dec
mov
loopne
rcrb
rol
adc
add
aam
mov
shlb
testl
add
or
or
or
or
or
lods
fs
aam
gs
les
xchg
gs
testl
mov
les
xor
cmp
or
ret
inc
cmp
cmp
mov
das
out
fdivrl
outsb
outsb
xor
dec
unpckhps
mov
jl
cmp
mov
mov
dec
lock
lds
cmp
les
lret
les
int3
dec
sbb
out
dec
or
or
add
lret
les
sub
add
jl
mov
aam
dec
mov
dec
cltd
sub
mov
inc
or
fmul
mov
dec
add
dec
add
ror
xchg
xchg
dec
xor
xchg
xchg
sub
mov
les
enter
inc
mov
dec
mov
xchg
sub
mov
les
enter
dec
add
push
dec
fmull
fmull
rolb
int3
mov
dec
pop
notl
mov
mov
mov
les
and
mov
inc
mov
dec
add
sub
mov
les
shl
xchg
add
les
adc
les
sub
dec
rol
or
or
or
or
cmp
lds
rolb
int3
inc
cmp
mov
inc
cmp
mov
inc
cmp
mov
testl
les
cltd
pop
or
or
or
or
or
or
or
xchg
dec
mov
aam
dec
cmp
les
mov
inc
pop
mov
dec
xchg
fmull
rolb
mov
dec
int3
das
dec
or
btr
inc
ds
dec
les
rol
or
sbb
mov
dec
fwait
rorb
lcall
or
or
or
or
or
or
xchg
dec
sub
cmp
cmp
gs
les
les
cmp
aam
add
les
les
int3
xchg
dec
mov
enter
in
les
add
fs
les
in
les
aam
enter
dec
and
xchg
sub
dec
rol
or
or
or
or
or
xchg
xchg
dec
mov
enter
mov
jge
out
or
outsl
outsb
outsb
out
xor
add
mov
add
add
les
push
dec
rolb
jae
lods
push
pop
les
jl
mov
adc
sub
jl,pt
inc
das
xchg
xor
ds
push
jl
inc
das
xchg
xor
das
fisttpl
add
movl
out
sbb
add
push
fwait
sbb
sub
iret
pop
inc
cmp
lahf
pop
lret
jae
loopne
inc
add
inc
cmp
mov
lret
jb
and
aam
loopne
adc
loopne
xchg
sub
in
les
rolb
ret
les
jl
les
jl
les
jl
les
outsl
mov
aam
mov
aam
mov
aam
mov
vshufps
lds
or
or
or
cmp
cmp
gs
les
les
cmp
aam
add
les
les
int3
xchg
dec
mov
enter
in
les
add
fs
les
in
les
aam
push
mov
loopne
xchg
sub
dec
rol
or
or
or
or
or
xchg
dec
sub
cmp
cmp
gs
les
cmp
aam
add
addr16
les
int3
xchg
dec
mov
enter
in
les
add
les
in
les
aam
test
ret
aam
and
xchg
sub
dec
rol
or
or
ret
gs
les
cmp
aam
add
addr16
les
loopne
xchg
dec
mov
int3
xchg
sub
in
les
add
les
in
les
aam
sub
loopne
xchg
sub
dec
rol
or
or
or
or
scas
cmp
gs
les
gs
testl
pushf
mov
les
dec
mov
enter
les
dec
mov
hlt
add
les
in
les
add
or
or
or
or
or
or
or
or
scas
cmp
gs
les
les
ret
aam
add
les
les
loopne
les
loopne
sub
in
les
dec
mov
enter
sbb
les
in
les
add
or
scas
aam
add
les
or
les
mov
les
rolb
flds
les
aam
mov
shrb
mov
sub
jg
cmp
push
rol
add
sub
jg
cmp
push
rol
or
or
xchg
dec
sub
cmp
sub
lods
and
aam
and
xchg
add
int3
aam
and
les
jl
cmp
cltd
pop
or
or
inc
sub
gs
testl
xchg
xchg
dec
std
dec
and
dec
ss
add
les
in
les
loopne
inc
add
fwait
dec
add
mov
les
loopne
or
or
inc
sub
xchg
dec
xor
dec
mov
aam
mov
enter
les
xchg
xchg
sub
jge
les
loopne
inc
add
decl
mov
dec
and
dec
rorl
loopne
dec
ret
dec
mov
dec
and
dec
add
mov
enter
out
dec
mov
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
inc
add
pop
or
or
or
or
inc
sub
xchg
dec
xor
dec
mov
aam
mov
enter
les
xchg
xchg
sub
jl
les
loopne
inc
add
decl
mov
dec
and
dec
rorl
loopne
dec
ret
dec
mov
dec
and
dec
add
mov
enter
out
dec
mov
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
inc
add
pop
or
or
or
or
inc
sub
xchg
dec
xor
dec
mov
aam
mov
enter
les
xchg
xchg
sub
jl
les
loopne
inc
add
decl
mov
dec
and
dec
rorl
loopne
dec
ret
dec
mov
dec
and
dec
add
mov
enter
out
dec
mov
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
inc
add
pop
or
or
or
or
inc
sub
xchg
dec
xor
and
xchg
sub
jecxz
incl
mov
dec
rorb
dec
aam
lret
rorb
dec
xchg
rorb
dec
mov
enter
out
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
lcall
cmp
gs
les
xchg
xchg
gs
testl
lock
les
loopne
dec
and
scas
dec
mov
loopne
sub
adc
cmp
int3
dec
mov
fcoms
loopne
sub
cmp
xchg
dec
mov
call
cmp
loopne
xchg
sub
outsl
cmp
idivl
scas
rorb
test
mov
les
rorb
addb
loopne
mov
dec
mov
mov
loopne
xchg
xchg
xchg
sub
jecxz
les
dec
mov
loopne
dec
mov
dec
mov
dec
and
xchg
xchg
xchg
dec
mov
and
cmp
dec
sbb
xor
cmp
dec
nop
loopne
dec
lcall
fsubrl
push
dec
mov
lock
les
inc
add
push
enter
or
or
or
or
xchg
inc
cmp
mov
dec
mov
xchg
cmp
loopne
ret
add
ret
dec
add
sub
stos
rol
add
lcall
or
cmp
sub
dec
mov
dec
lds
rclb
dec
and
dec
mov
rolb
mov
inc
cmp
mov
inc
cmp
mov
inc
cmp
mov
inc
cmp
mov
inc
cmp
lret
inc
in
les
dec
mov
int3
inc
cmp
les
inc
cmp
mov
inc
cmp
cmp
mov
cmp
inc
and
les
cmp
cmp
les
cmp
cmp
mov
les
dec
mov
mov
inc
cmp
cmp
mov
les
cmp
cmp
mov
mov
inc
cmp
les
outsb
les
mov
inc
cmp
mov
xchg
xchg
sub
and
cmp
int3
inc
add
inc
dec
les
int3
sub
xor
cmp
mov
dec
or
rorb
xchg
rorb
lcall
les
cmp
inc
add
inc
add
faddl
cmp
cmp
add
mov
lahf
dec
and
xchg
sub
sub
cmp
int3
inc
add
faddl
mov
xchg
les
fwait
lcall
les
loopne
dec
and
xor
cmp
rorb
lcall
les
cmp
cmp
xchg
cmp
cmp
and
or
or
or
or
or
or
or
cmp
sub
dec
xchg
rorb
xchg
dec
fstl
enter
rolb
mov
inc
ds
les
inc
aas
cmp
cmp
mov
cmp
cmp
mov
les
dec
mov
int3
inc
cmp
les
inc
cmp
mov
inc
cmp
cmp
mov
cmp
inc
daa
les
cmp
cmp
les
cmp
cmp
mov
les
dec
mov
mov
inc
cmp
cmp
mov
les
cmp
cmp
mov
mov
ds
inc
push
pop
mov
inc
ds
les
xchg
xchg
sub
sub
cmp
int3
inc
add
inc
dec
les
loopne
sub
xor
cmp
mov
dec
mov
enter
or
aam
mov
fwait
lcall
les
cmp
inc
add
inc
add
fisttpll
int3
add
les
test
les
lahf
dec
and
xchg
sub
sub
cmp
int3
inc
add
fisttpll
int3
add
cmp
cmp
add
fwait
lcall
les
loopne
dec
or
dec
fmull
rcrb
push
int3
les
int3
fwait
lcall
add
lahf
dec
and
or
ret
gs
les
gs
testl
in
mov
les
fsubrs
add
les
and
les
shlb
je
int3
aam
cwtl
loopne
mov
scas
les
loopne
sub
add
les
shlb
gs
test
aam
addr16
test
aam
shlb
shrb
add
les
shlb
mov
mov
dec
mov
dec
enter
mov
inc
mov
sub
add
pushl
int3
dec
lock
ret
das
and
inc
xor
rorb
cmpsl
dec
and
xchg
xchg
sub
aam
les
int3
inc
cmp
mov
lods
dec
cs
mov
in
pushf
scas
rol
mov
ret
aam
mov
in
sub
inc
rol
mov
aam
les
loopne
dec
icebp
je
int3
aam
sbb
mov
add
cmp
mov
test
rorb
shrb
sub
add
les
rorb
faddl
and
cmp
cmp
sub
pop
mov
add
loopne
mov
les
in
pop
or
or
or
or
or
or
or
or
cmp
cmp
gs
les
les
cmp
aam
add
les
les
int3
xchg
dec
mov
enter
out
les
add
fs
les
out
les
aam
adc
ret
aam
and
xchg
sub
inc
rol
or
or
or
or
or
xchg
dec
sub
cmp
cmp
gs
les
les
cmp
aam
add
les
les
int3
xchg
dec
mov
enter
out
les
add
fs
les
out
les
aam
pushf
mov
loopne
xchg
sub
inc
rol
or
or
or
or
or
xchg
dec
sub
cmp
sub
xchg
dec
sbb
mov
xchg
xchg
dec
decl
loopne
inc
cmp
les
inc
cmp
mov
stc
cmp
cmp
cmp
cmp
les
inc
xor
mov
inc
cmp
lret
inc
push
les
cmp
cmp
les
inc
cmp
lret
inc
dec
les
cmp
cmp
mov
inc
cmp
les
inc
cmp
mov
dec
cvttps2pi
add
rorb
int3
dec
xchg
rorb
int3
dec
xchg
rcrb
push
int3
les
cmp
dec
hlt
add
fwait
lcall
les
mov
dec
or
rol
les
lahf
dec
and
and
testl
hlt
dec
mov
fwait
lcall
les
int3
fwait
lcall
add
lahf
dec
and
or
or
or
or
ret
gs
les
xchg
xchg
gs
testl
call
les
loopne
idivl
xchg
dec
and
fs
add
shl
das
cwtl
dec
mov
xchg
dec
mov
loopne
shl
fs
lds
loopne
mov
loopne
dec
mov
loopne
dec
mov
loopne
xchg
xchg
dec
and
sub
leave
les
dec
and
xchg
dec
cmp
jge
cmp
loopne
add
stc
and
shl
fs
pop
dec
mov
call
les
inc
add
push
enter
or
or
or
or
or
or
dec
mov
rolb
inc
or
dec
ror
xchg
sub
test
les
rolb
pop
inc
or
notl
xor
and
loopne
xchg
dec
mov
rolb
loopne
les
mov
mov
loopne
xchg
add
ret
inc
inc
rol
or
or
or
or
or
mov
push
mov
dec
mov
inc
or
dec
xchg
enter
or
or
mov
dec
mov
dec
xchg
aam
dec
xchg
aam
add
or
or
or
or
add
test
aam
rol
or
or
dec
and
xchg
xchg
dec
xor
les
cmp
arpl
aam
ret
ret
sub
insb
ret
cmp
insb
ret
add
or
ret
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
in
sub
push
cmp
add
les
mov
inc
add
das
idivl
add
aam
mov
dec
mov
inc
or
dec
xchg
enter
or
xor
mov
dec
mov
dec
xchg
aam
xchg
cld
add
cld
insb
ret
sub
insb
ret
add
loopne
mov
les
aam
rol
or
or
or
or
or
or
dec
and
xchg
xchg
dec
xor
les
cmp
arpl
aam
ret
ret
sub
insb
ret
cmp
insl
ret
add
or
ret
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
in
sub
push
cmp
add
adc
ret
and
les
mov
inc
add
das
idivl
add
aam
mov
dec
mov
inc
or
dec
xchg
enter
or
xor
mov
dec
mov
dec
xchg
aam
xchg
cld
add
movsb
insb
ret
sub
insb
ret
add
loopne
mov
les
aam
rol
or
or
or
dec
and
xchg
xchg
dec
xor
cmp
ret
ret
add
or
or
or
dec
and
xchg
xchg
dec
xor
les
and
arpl
aam
ret
ret
adc
arpl
aam
and
arpl
aam
add
or
ret
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
in
sub
mov
xchg
arpl
aam
or
or
ret
ret
and
les
adc
arpl
aam
mov
dec
mov
inc
or
dec
xchg
cmp
mov
dec
mov
dec
xchg
fmuls
fmuls
in
and
ret
ret
adc
arpl
aam
add
loopne
mov
les
aam
rol
or
or
or
enter
sub
mov
xchg
arpl
aam
or
or
add
cwtl
arpl
aam
add
or
or
or
or
xchg
xchg
dec
mov
xor
les
ret
ret
or
or
dec
add
or
or
or
or
or
or
or
dec
and
xchg
xchg
dec
xor
les
and
arpl
aam
ret
ret
or
insb
ret
and
insb
ret
add
or
ret
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
in
sub
cmpsl
rol
ret
ret
and
les
mov
inc
add
das
idivl
add
aam
mov
dec
mov
inc
or
dec
xchg
enter
or
adc
mov
dec
mov
dec
xchg
aam
xchg
fadds
ret
ret
or
arpl
aam
add
loopne
mov
les
aam
rol
or
or
or
dec
and
xchg
xchg
dec
xor
les
ret
ret
add
or
or
or
dec
and
xchg
xchg
dec
xor
les
and
arpl
aam
ret
ret
adc
sub
aam
and
sub
aam
add
or
ret
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
in
sub
cmpsb
rol
ret
ret
or
or
ret
ret
and
les
adc
arpl
aam
mov
dec
mov
inc
or
dec
xchg
cmp
mov
dec
mov
dec
xchg
fmuls
fmuls
in
and
ret
ret
adc
sub
aam
add
loopne
mov
les
aam
rol
or
or
or
enter
sub
cmpsb
rol
ret
ret
or
or
add
subb
aam
add
or
or
or
or
dec
and
xchg
xchg
dec
xor
les
andb
mov
orb
andb
lcall
cmp
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
in
sub
les
and
les
mov
inc
add
add
aam
mov
dec
mov
lds
enter
or
adcb
pushf
dec
xchg
aam
xchg
cwtl
add
xchg
sub
aam
orb
add
loopne
mov
les
aam
rol
or
or
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
in
sub
dec
cmp
notl
dec
nop
loopne
add
cwtl
sub
aam
sub
sub
mov
dec
mov
scas
cmp
hlt
dec
xor
add
les
rclb
add
cmp
dec
mov
aam
dec
leave
les
aam
rol
or
dec
and
xchg
xchg
dec
xor
les
cmp
arpl
aam
ret
ret
sub
insb
ret
cmp
insl
ret
add
or
ret
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
in
sub
push
cmp
add
sub
add
les
mov
inc
add
das
idivl
add
aam
mov
dec
mov
inc
or
dec
xchg
enter
or
xor
mov
dec
mov
dec
xchg
aam
xchg
cld
add
dec
insb
ret
sub
insb
ret
add
loopne
mov
les
aam
rol
or
or
or
dec
and
xchg
xchg
dec
xor
cmp
ret
ret
add
or
or
or
dec
and
xchg
xchg
dec
xor
les
cmp
arpl
aam
ret
ret
sub
insb
ret
cmp
insl
ret
add
or
ret
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
in
sub
dec
cmp
add
cmp
ret
and
les
mov
inc
add
das
idivl
add
aam
mov
dec
mov
inc
or
dec
xchg
enter
or
xor
mov
dec
mov
dec
xchg
aam
xchg
cld
add
je
ret
sub
insb
ret
add
loopne
mov
les
aam
rol
or
or
or
dec
and
xchg
xchg
dec
xor
cmp
ret
ret
add
or
or
or
xchg
dec
xor
ret
sub
insb
ret
cmp
arpl
aam
and
les
and
lds
lcall
add
or
or
or
or
or
or
or
rol
xor
int
sub
cltd
rol
add
dec
add
or
mov
ret
sub
insb
ret
cmp
arpl
aam
adc
les
and
lds
cltd
rol
add
dec
add
or
or
or
or
or
or
or
ret
xor
int
sub
cltd
rol
add
dec
add
or
loopne
arpl
aam
ret
ret
adc
arpl
aam
adc
arpl
aam
mov
inc
or
dec
xchg
aam
push
inc
add
ret
add
les
add
xchg
arpl
aam
lcall
loopne
lds
cltd
rol
add
dec
add
or
or
or
js
ret
adc
arpl
aam
adc
arpl
aam
mov
inc
or
dec
xchg
aam
push
inc
add
ret
add
les
add
xchg
arpl
aam
es
rol
and
lds
cwtl
rol
add
dec
add
or
or
or
or
or
or
xchg
dec
xor
arpl
aam
ret
ret
or
arpl
aam
or
arpl
aam
mov
inc
or
dec
xchg
aam
push
inc
add
ret
add
les
add
add
aam
mov
and
lds
cwtl
rol
add
dec
add
or
or
or
adc
ret
or
arpl
aam
or
arpl
aam
mov
inc
or
dec
xchg
aam
push
inc
add
ret
add
les
add
add
aam
out
rol
and
lds
cwtl
rol
add
dec
add
or
or
or
or
or
or
xchg
dec
xor
arpl
aam
ret
ret
adc
sub
aam
adc
arpl
aam
mov
inc
or
dec
xchg
aam
push
inc
add
ret
add
les
add
xchg
arpl
aam
jg
rol
and
lds
lahf
rol
add
dec
add
or
or
or
fsubrl
ret
adc
sub
aam
adc
arpl
aam
mov
inc
or
dec
xchg
aam
push
inc
add
ret
add
les
add
xchg
arpl
aam
cmpsb
cwtl
rol
and
lds
lahf
rol
add
dec
add
or
or
or
or
or
or
xchg
dec
xor
arpl
aam
ret
ret
orb
orb
mov
lds
aam
push
inc
add
ret
add
les
sub
pop
cmp
xor
int
sub
lahf
rol
add
dec
add
or
or
or
or
or
or
xchg
sub
aam
orb
orb
mov
lds
aam
push
inc
add
ret
add
les
sub
pop
cmp
xor
int
sub
sahf
rol
add
dec
add
or
xchg
dec
xor
ret
sub
insb
ret
cmp
arpl
aam
lock
les
and
lds
sahf
rol
add
dec
add
or
or
or
or
or
or
or
into
les
and
lds
sahf
rol
add
dec
add
or
add
add
aam
cmp
arpl
aam
loopne
les
and
lds
sahf
rol
add
dec
add
or
or
or
or
or
or
or
into
les
and
lds
popf
rol
add
dec
add
or
aam
pop
testl
std
fwait
aam
int
mov
aam
mov
repz
mov
sub
mov
les
mov
dec
and
ret
incl
mov
dec
mov
dec
lret
decl
mov
dec
fwait
rorb
dec
lcall
mov
dec
mov
das
dec
mov
cmp
rorb
aaa
mov
dec
and
xchg
sub
or
cmp
loopne
lcall
or
or
scas
cmp
gs
les
les
enter
testl
je
les
les
loopne
negl
dec
cwtl
loopne
ljmp
lret
inc
outsb
std
cltd
lret
inc
gs
les
rol
cmp
add
dec
mov
loopne
aas
mov
dec
inc
loopne
les
loopne
sub
dec
cmp
xchg
dec
and
add
js
lds
les
inc
cmp
add
jl
mov
les
les
sub
iret
les
testl
mov
mov
dec
mov
clc
inc
daa
cmp
sub
inc
cmp
xor
lds
cld
aam
leave
dec
nop
loopne
xchg
sub
pushf
rol
add
jl
les
loopne
les
les
inc
add
les
or
or
or
cld
insb
ret
sub
insb
ret
sub
arpl
aam
mov
inc
or
dec
xchg
aam
push
inc
add
ret
add
les
ret
ret
mov
dec
adc
sub
pushf
rol
add
add
les
and
les
adc
dec
or
les
or
or
or
or
or
or
or
lds
test
subb
test
test
aam
mov
cmp
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
scas
test
xor
add
dec
mov
enter
and
pushl
jecxz
addl
dec
or
xor
clc
add
test
aam
ret
ret
sub
insb
ret
les
insb
ret
mov
aam
dec
leave
les
aam
or
or
or
or
xchg
dec
sub
cmp
sub
mov
shrb
cmp
lods
enter
dec
and
xchg
add
ret
and
subb
and
sbb
sub
mov
les
or
xchg
dec
xor
ret
sub
insb
ret
sub
arpl
aam
mov
inc
or
dec
xchg
aam
push
inc
add
ret
add
les
ret
ret
mov
dec
adc
sub
xchg
rol
add
add
les
and
les
adc
dec
or
les
or
or
or
or
or
or
or
lds
test
test
ret
test
test
aam
mov
cmp
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
scas
test
xor
add
dec
mov
enter
and
pushl
jecxz
addl
dec
or
xor
cmp
clc
add
test
aam
ret
ret
sub
insb
ret
shrb
dec
mov
aam
dec
leave
les
aam
or
or
or
or
xchg
dec
sub
cmp
sub
mov
shrb
cmp
lods
push
mov
loopne
xchg
add
ret
and
test
ret
and
shrb
sub
stos
rol
or
xchg
dec
xor
ret
adc
arpl
aam
adc
arpl
aam
mov
inc
or
dec
xchg
aam
push
inc
add
ret
add
les
ret
ret
or
les
or
loopne
arpl
aam
ret
ret
adc
arpl
aam
adc
arpl
aam
mov
inc
or
dec
xchg
aam
push
inc
add
ret
add
les
ret
ret
or
les
or
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
scas
in
sub
sahf
rol
xor
add
dec
mov
enter
and
pushl
jecxz
sbbl
dec
or
xor
cmp
loopne
les
xor
aam
adc
arpl
aam
les
arpl
aam
mov
aam
dec
leave
les
aam
or
or
or
or
xchg
dec
sub
cmp
sub
dec
test
xchg
dec
mov
shrb
cmp
lods
test
ret
aam
and
xchg
add
ret
and
sub
aam
and
sbb
aam
in
stos
rol
or
xchg
dec
xor
ret
or
arpl
aam
or
arpl
aam
mov
inc
or
dec
xchg
aam
push
inc
add
ret
add
les
ret
ret
or
les
or
in
arpl
aam
ret
ret
or
arpl
aam
or
arpl
aam
mov
inc
or
dec
xchg
aam
push
inc
add
ret
add
les
ret
ret
or
les
or
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
scas
loopne
lds
inc
add
dec
mov
enter
and
pushl
jecxz
andl
or
xor
cmp
in
les
fsubrl
add
aam
les
dec
mov
aam
dec
leave
les
aam
or
or
or
or
inc
sub
dec
test
dec
mov
shrb
cmp
lods
sub
loopne
xchg
add
ret
and
aam
ret
and
les
sub
test
les
or
or
or
or
add
fsubrl
ret
adc
sub
aam
adc
arpl
aam
mov
inc
or
dec
xchg
aam
push
inc
add
ret
add
les
ret
ret
or
or
or
or
xchg
dec
xor
arpl
aam
ret
ret
adc
sub
aam
adc
arpl
aam
mov
inc
or
dec
xchg
aam
push
inc
add
ret
add
les
ret
ret
or
les
or
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
scas
in
sub
xchg
rol
xor
add
dec
mov
enter
and
pushl
jecxz
sbbl
dec
or
sub
cmp
loopne
les
call
adc
sub
aam
les
loopne
mov
les
aam
or
or
or
or
xchg
dec
sub
cmp
sub
dec
test
xchg
dec
mov
shrb
cmp
lods
mov
ret
aam
and
xchg
add
ret
and
cld
sub
aam
and
test
ret
dec
scas
rol
or
add
xchg
sub
aam
orb
orb
mov
lds
aam
push
inc
add
ret
add
les
sub
or
or
or
or
or
or
xchg
dec
xor
arpl
aam
ret
ret
orb
orb
mov
lds
aam
push
inc
add
ret
add
les
lcall
scas
cmp
gs
les
cmp
aam
add
addr16
les
scas
mov
les
inc
add
dec
mov
enter
and
pushl
jecxz
andl
sub
sub
cmp
movsb
add
test
aam
ret
ret
orb
les
loopne
mov
les
aam
or
or
or
or
inc
sub
dec
mov
shrb
cmp
lods
call
and
xchg
add
ret
and
mov
ret
and
mov
mov
or
or
or
or
push
pop
cmp
lcall
xchg
dec
hlt
inc
xor
inc
jae
les
les
rcrb
or
or
dec
insb
ret
sub
insb
ret
sub
arpl
aam
mov
inc
or
dec
xchg
aam
push
inc
add
ret
add
les
ret
ret
mov
dec
adc
sub
xchg
rol
add
add
les
and
les
adc
dec
or
les
or
or
or
or
or
or
or
lds
ret
test
push
insb
ret
test
test
aam
mov
cmp
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
scas
test
xor
add
dec
mov
enter
and
pushl
jecxz
addl
dec
or
sub
cmp
clc
add
test
aam
ret
ret
sub
insb
ret
shrb
aam
mov
aam
dec
leave
les
aam
or
or
or
or
xchg
dec
sub
cmp
sub
mov
shrb
cmp
lods
adc
ret
aam
and
xchg
add
ret
and
push
insb
ret
and
shrb
aam
or
or
xchg
dec
xor
ret
sub
insb
ret
sub
arpl
aam
mov
inc
or
dec
xchg
aam
push
inc
add
ret
add
les
ret
ret
mov
dec
adc
sub
mov
les
rolb
loopne
les
and
les
adc
dec
or
les
or
or
or
or
or
or
or
lds
insb
ret
test
js
ret
test
test
aam
mov
cmp
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
scas
test
xor
add
dec
mov
enter
and
pushl
jecxz
addl
dec
or
sub
cmp
clc
add
test
aam
ret
ret
sub
insb
ret
loopne
ret
mov
aam
dec
leave
les
aam
or
or
or
or
xchg
dec
sub
cmp
sub
mov
shrb
cmp
lods
pushf
mov
loopne
xchg
add
ret
and
js
ret
and
loopne
ret
mov
or
scas
cmp
gs
les
ret
aam
add
addr16
les
loopne
testl
ret
ret
rol
les
dec
mov
enter
les
push
rol
dec
sub
ret
gs
les
xchg
gs
testl
mov
les
xor
cltd
int3
sub
xchg
rol
xor
add
mov
dec
xchg
dec
xchg
dec
xchg
dec
cmpl
les
int3
dec
add
lds
test
mov
out
push
dec
mov
xchg
sub
outsb
mov
add
dec
or
pop
les
mov
dec
rorl
test
int3
sub
outsb
mov
inc
sub
dec
xchg
lds
test
mov
out
push
dec
mov
xchg
sub
outsb
mov
add
dec
or
xor
aad
test
aam
shrb
jnp
sub
dec
xchg
lds
test
mov
out
push
dec
mov
xchg
sub
insl
mov
add
dec
or
les
mov
dec
rorl
test
rolb
cmpl
sub
insl
mov
mov
dec
ret
dec
insl
mov
xchg
rorb
xchg
je
inc
add
mov
insl
mov
push
cs
add
lds
test
mov
out
push
dec
mov
xchg
sub
insl
mov
add
dec
or
xor
aad
test
dec
xchg
sub
insl
mov
xchg
ljmp
xchg
call
dec
leave
les
and
mov
sub
adc
cmp
pop
mov
or
or
or
xchg
dec
and
xchg
dec
mov
enter
xchg
dec
or
loopne
sub
mov
in
push
mov
dec
mov
cmp
cmp
fwait
add
cld
insb
ret
sub
insb
ret
add
or
or
or
or
or
or
xchg
dec
mov
enter
add
les
rol
dec
add
jae
loopne
dec
add
inc
mov
cmp
pop
jp
les
cmp
dec
add
les
cmp
jl
les
testl
xchg
dec
and
xchg
dec
mov
enter
xchg
dec
or
loopne
sub
mov
in
push
mov
dec
mov
cmp
cmp
fwait
add
movsb
insb
ret
sub
insb
ret
add
or
or
or
or
or
or
xchg
dec
mov
enter
add
les
rol
dec
add
xchg
xchg
dec
mov
aam
dec
mov
xchg
dec
or
loopne
sub
pop
les
ret
ret
or
or
adc
arpl
aam
lcall
fadds
and
cmp
cmp
ret
adc
arpl
aam
add
or
or
or
or
or
or
or
xchg
dec
and
xchg
dec
mov
enter
add
les
rol
dec
add
dec
and
xchg
dec
mov
enter
xchg
dec
or
loopne
sub
mov
les
or
arpl
aam
mov
dec
mov
cmp
cmp
fwait
add
adc
ret
or
arpl
aam
add
or
or
or
or
or
or
xchg
dec
mov
enter
add
les
rol
dec
add
xchg
negl
xchg
dec
or
loopne
sub
mov
les
ret
ret
or
or
adc
arpl
aam
lcall
fadds
and
cmp
cmp
ret
ret
adc
sub
aam
add
or
or
or
or
or
rol
les
add
or
or
or
or
or
xchg
xchg
idivl
xchg
dec
or
loopne
sub
sub
cmp
orb
mov
dec
mov
cmp
cmp
add
xchg
sub
aam
orb
add
or
or
or
rol
les
add
or
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
rol
add
dec
and
add
les
mov
dec
mov
fcoms
cmp
dec
mov
enter
les
testl
dec
leave
les
or
or
or
scas
cmp
gs
les
gs
testl
shlb
les
loopne
negl
dec
cwtl
loopne
add
les
rorb
loopne
dec
lods
rorb
aas
dec
cwtl
loopne
add
les
mov
xchg
sub
lret
inc
add
aas
mov
jmp
xchg
xchg
xchg
dec
add
add
loopne
mov
les
rolb
or
or
or
ret
gs
les
ret
aam
add
addr16
les
dec
mov
fcoms
cli
sub
ret
les
and
les
mov
xchg
dec
or
add
loopne
mov
les
enter
or
or
ret
gs
les
ret
aam
add
addr16
les
loopne
dec
and
dec
mov
in
xchg
sub
int3
les
int3
dec
or
and
les
add
loopne
mov
les
push
enter
or
xchg
dec
and
xchg
dec
mov
enter
xchg
dec
or
loopne
sub
mov
cmp
sub
arpl
aam
mov
dec
mov
cmp
cmp
fwait
add
dec
insb
ret
sub
insb
ret
add
or
or
or
or
or
or
xchg
dec
mov
enter
add
les
mov
popf
pop
or
xchg
dec
mov
enter
xchg
dec
or
loopne
sub
mov
cmp
sub
arpl
aam
mov
dec
mov
cmp
cmp
fwait
add
je
ret
sub
insb
ret
add
or
or
or
or
or
or
xchg
dec
mov
enter
add
les
mov
popf
pop
or
ret
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
in
sub
sbb
cmp
or
add
aam
and
lds
in
add
mov
add
subb
cmp
insb
ret
cmp
in
xchg
xchg
sub
mov
cmp
int3
dec
add
loopne
mov
les
aam
rol
or
or
or
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
in
sub
and
cmp
or
add
aam
and
lds
in
add
mov
ret
les
cmp
insl
ret
cmp
in
xchg
xchg
sub
mov
cmp
int3
dec
add
loopne
mov
les
aam
rol
or
or
or
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
in
sub
and
cmp
or
add
aam
and
lds
aam
ret
ret
les
arpl
aam
and
arpl
aam
cmp
aam
xchg
sub
mov
cmp
int3
dec
add
loopne
mov
les
aam
rol
or
or
or
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
in
sub
and
dec
mov
faddl
and
arpl
aam
and
lds
enter
insb
ret
aam
ret
and
insb
ret
cmp
enter
xorl
add
loopne
mov
les
aam
rol
or
or
or
or
or
or
or
ret
gs
les
aam
add
addr16
les
loopne
xchg
dec
or
and
dec
mov
aam
and
arpl
aam
and
lds
aam
ret
ret
cld
sub
aam
and
sub
aam
cmp
aam
xchg
sub
stos
cmp
inc
add
dec
add
loopne
mov
les
push
rol
or
or
scas
cmp
gs
les
aam
add
addr16
les
loopne
xchg
dec
or
cmp
testl
arpl
aam
and
lds
mov
ret
ret
les
movsb
mov
cmp
mov
cmp
inc
add
dec
add
loopne
mov
les
push
rol
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
in
sub
cmp
testl
arpl
aam
and
lds
in
add
pop
insb
ret
les
ret
cmp
insl
ret
cmp
in
xchg
xchg
sub
stos
cmp
inc
add
dec
add
loopne
mov
les
aam
rol
or
or
or
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
in
sub
daa
cmp
testl
arpl
aam
and
lds
in
add
add
add
js
ret
cmp
insl
ret
cmp
in
xchg
xchg
sub
stos
cmp
inc
add
dec
add
loopne
mov
les
aam
rol
or
or
or
or
or
or
or
test
incl
mov
dec
xor
adc
xor
mov
dec
test
das
dec
test
jge
das
ret
push
mov
dec
mov
fsubl
inc
add
inc
add
mov
das
aam
jae
mov
inc
and
inc
add
mov
pushl
mov
lcall
add
xor
push
add
lahf
pop
or
or
or
or
lods
fs
aam
gs
les
enter
testl
mov
les
xor
xor
les
cmpl
sub
add
inc
add
inc
add
fnstsw
les
rorb
dec
mov
add
push
sub
aam
mov
das
testl
leave
les
and
mov
inc
xor
pop
cmp
xchg
sub
test
les
shrb
sahf
rol
or
or
or
or
lods
je
ret
gs
les
xchg
gs
testl
mov
les
xor
xor
les
cmpl
sub
add
inc
add
fnstsw
les
rorb
dec
mov
add
insb
sub
aam
mov
das
testl
leave
les
and
mov
cmp
scas
les
rol
or
or
lods
inc
mov
aam
gs
les
xchg
gs
testl
mov
les
xor
xor
les
cmpl
sub
add
inc
add
fnstsw
les
rorb
dec
mov
add
js
ret
mov
das
testl
leave
les
and
mov
sub
int3
les
dec
popf
rol
or
or
lods
aam
ret
gs
les
xchg
gs
testl
mov
les
xor
xor
les
cmpl
sub
add
inc
add
inc
add
fnstsw
les
rorb
dec
mov
add
adc
ret
mov
das
testl
leave
les
and
mov
sub
int3
les
ds
rol
or
or
xchg
add
les
lret
les
rorb
add
enter
jge
les
add
pop
or
or
scas
cmp
gs
les
xchg
gs
testl
call
les
loopne
dec
or
and
xchg
jl
les
mov
negl
inc
add
dec
mov
loopne
cwtl
loopne
dec
cwtl
loopne
dec
mov
rolb
and
mov
dec
nop
loopne
dec
test
test
rolb
sbb
outsl
aam
fimull
rorb
dec
lcall
fmuls
loopne
dec
lcall
dec
and
and
dec
stos
in
dec
sub
or
testl
xchg
add
loopne
dec
mov
xchg
dec
mov
lock
ret
les
loopne
mov
les
add
push
enter
lods
iret
mov
aam
gs
les
cmp
aam
add
addr16
les
rol
add
dec
and
add
les
mov
dec
mov
fcoms
les
loopne
mov
les
testl
dec
leave
les
or
or
or
scas
cmp
gs
les
aam
add
addr16
les
loopne
dec
mov
fdiv
or
mov
dec
or
mov
xchg
dec
adc
mov
rclb
aam
add
dec
mov
int3
mov
les
push
int3
les
xor
push
cmp
xchg
sub
stc
rol
add
lcall
or
xchg
dec
mov
inc
xor
dec
mov
xchg
cmp
loopne
ret
add
ret
dec
add
dec
cmp
xchg
sub
stc
rol
add
fwait
lcall
inc
xor
push
xor
rol
add
lcall
or
xchg
dec
mov
inc
xor
fadd
les
les
rcrb
or
or
dec
mov
dec
test
cmp
or
or
or
int3
les
les
rolb
dec
lret
inc
mov
rolb
rol
les
or
or
or
or
or
mov
xchg
dec
mov
cmp
dec
sbb
cmp
add
clc
rol
add
dec
or
dec
mov
dec
mov
rol
add
xor
ret
ret
fs
aam
int
sub
clc
rol
add
fwait
lcall
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
loopne
xchg
sub
dec
and
add
les
shrb
cmp
dec
or
dec
and
pop
push
cmp
dec
add
loopne
mov
les
aam
int3
les
or
or
or
or
or
or
xchg
dec
sub
cmp
cmp
gs
les
cmp
aam
add
addr16
les
enter
hlt
les
in
dec
xchg
call
dec
mov
dec
nop
loopne
dec
xchg
loopne
mov
fmuls
loopne
dec
nop
loopne
dec
adc
enter
rol
les
mov
rolb
les
and
les
ret
sub
inc
cmp
add
mov
rorb
loopne
dec
and
xchg
inc
sub
dec
add
dec
mov
hlt
dec
xchg
rorb
lock
mov
dec
xchg
enter
les
rorb
loopne
sub
inc
cmp
dec
mov
in
mov
les
or
or
faddl
mov
xchg
sub
inc
les
rorb
xchg
add
les
sbb
les
and
les
inc
les
rolb
push
or
or
or
or
scas
cmp
gs
les
ret
aam
add
addr16
les
loopne
testl
int3
dec
or
add
and
ret
stos
les
dec
mov
enter
les
push
rol
or
or
or
or
or
faddl
mov
xchg
sub
inc
les
rorb
xchg
add
les
sbb
les
and
les
inc
les
shlb
loopne
lds
ret
ret
int
sub
inc
les
rorb
push
rol
cmp
gs
les
ret
aam
add
addr16
les
loopne
scas
shrb
rol
or
add
das
testl
mov
dec
add
loopne
mov
les
push
rol
or
or
aam
or
add
das
cli
rol
add
inc
add
pop
inc
or
notl
xor
and
loopne
dec
mov
int3
add
les
std
rol
mov
loopne
xchg
add
ret
rcll
or
or
or
or
or
or
or
ret
gs
les
cmp
aam
add
loopne
xchg
xchg
xchg
xchg
gs
testl
mov
les
loopne
dec
cwtl
loopne
sub
push
mov
and
sub
push
mov
les
loopne
dec
xor
arpl
les
rolb
mov
test
rorb
in
jle
mov
mov
loopne
les
or
cmp
dec
mov
in
dec
or
js
cmp
and
lds
loopne
dec
and
inc
add
lret
dec
ret
dec
xchg
int3
dec
or
push
dec
and
das
roll
loopne
les
loopne
dec
and
idivl
inc
cmp
mov
dec
and
inc
cld
les
fidivrs
loopne
inc
cmp
mov
dec
and
dec
les
fimuls
loopne
inc
or
mov
mov
sub
sti
rol
mov
test
loopne
inc
cmp
mov
dec
and
dec
sar
and
mov
dec
and
dec
nop
loopne
dec
mov
fimuls
or
or
and
push
movl
fsubr
add
cmp
mov
inc
cmp
mov
dec
mov
call
rol
add
add
cmp
dec
mov
loopne
lret
les
and
les
and
les
mov
scas
les
loopne
sub
push
mov
add
add
int
cmp
mov
mov
rorb
xor
fbstp
xor
dec
mov
fsub
xor
push
mov
xor
scas
lds
cmp
pop
dec
mov
mov
les
dec
mov
hlt
testl
les
test
or
or
or
or
or
or
or
xchg
sub
bound
cmp
les
rcrb
or
or
or
xchg
inc
xor
sub
repz
add
popf
pop
or
or
or
or
or
scas
cmp
gs
les
xchg
gs
testl
fsubs
les
dec
test
call
in
cmp
in
fs
add
loop
mov
xchg
cmp
fsubs
dec
add
dec
cmp
dec
mov
fsubs
les
add
push
enter
hlt
xchg
dec
cwtl
loopne
cmp
hlt
fs
and
lds
loopne
dec
and
xchg
xchg
xchg
add
les
les
fcoml
cmp
fsubs
inc
mov
ret
dec
cmp
dec
cmp
xchg
cmp
lock
mov
fsubs
les
add
push
enter
or
or
or
or
or
cmp
popf
pop
or
or
or
or
rclb
dec
xchg
out
xchg
xchg
dec
test
in
xchg
dec
mov
test
testl
mov
dec
lods
shrb
dec
ljmp
mov
dec
xchg
pushl
mov
or
mov
dec
xchg
incl
aam
test
in
xchg
dec
mov
sub
les
rolb
add
cmp
add
cltd
lahf
inc
add
push
enter
aam
mov
dec
mov
faddl
int3
dec
xchg
les
rorb
aam
dec
nop
loopne
dec
and
sub
dec
xchg
aam
xchg
enter
rorb
cmp
aam
or
cmp
inc
add
shrl
rol
mov
testl
inc
add
push
enter
or
or
fcoml
aam
xchg
sub
pop
cmp
inc
add
dec
mov
aam
scas
dec
mov
shrb
lods
cmp
xchg
dec
mov
in
mov
cmp
dec
mov
loopne
cmp
loopne
dec
xor
ds
push
cmp
xor
lret
ds
jl
les
pop
fwait
testl
or
lods
movsb
mov
aam
gs
les
xchg
gs
testl
mov
les
xor
cmp
cmp
mov
sub
dec
xchg
enter
shl
das
int3
dec
adc
push
add
mov
sub
cmp
add
les
aam
sbb
cltd
sub
mov
mov
sub
inc
les
enter
incl
dec
inc
les
sub
int3
add
sub
dec
adc
int3
les
enter
out
xor
add
add
mov
xchg
sub
lock
add
dec
or
pop
add
dec
adc
mov
dec
fwait
enter
mov
les
and
subl
les
shrb
mov
les
or
or
or
or
or
dec
mov
inc
sub
xchg
dec
cwtl
loopne
xchg
inc
or
das
int3
dec
adc
add
mov
dec
adc
adc
adc
jmp
les
loopne
dec
mov
rclb
les
rol
inc
add
inc
add
dec
mov
lcall
decl
mov
sub
inc
les
xchg
xchg
xchg
dec
nop
loopne
xchg
dec
add
les
push
rol
or
or
or
inc
sub
xchg
xchg
xchg
dec
xor
adc
lcall
xor
mov
idivl
das
loope
sbb
shrl
rol
mov
in
dec
ret
mov
decl
shrl
rol
mov
add
loopne
dec
and
dec
mov
loopne
xchg
xchg
dec
or
les
enter
mov
sub
inc
les
dec
sub
loopne
inc
xor
rol
add
and
aas
mov
xor
ret
das
divl
mov
aaa
std
rol
and
dec
mov
in
cltd
lahf
inc
add
push
aam
or
lods
test
les
xchg
gs
testl
mov
les
xor
xor
or
das
int3
dec
lcall
dec
mov
add
cmp
cmp
out
or
cmp
inc
dec
mov
lcall
les
adc
cmp
out
adc
pop
mov
negl
das
mov
lcall
dec
cvttps2pi
cmp
aam
mov
cmp
add
les
int3
dec
add
dec
mov
andl
xchg
xchg
dec
xchg
int3
xchg
jge
les
mov
inc
add
add
int3
dec
xchg
int3
xchg
xchg
dec
xchg
aam
dec
subl
dec
xchg
aam
add
add
int3
xchg
dec
mov
dec
add
dec
mov
add
sub
sub
rol
dec
or
mov
cmp
inc
add
addl
int
sub
cmc
rol
add
dec
subl
cmp
lcall
enter
mov
les
and
xchg
sub
sub
cmc
rol
add
scas
les
rol
xchg
aam
add
push
add
lds
int3
dec
int3
dec
mov
mov
dec
mov
dec
mov
mov
dec
test
dec
mov
dec
mov
xchg
xchg
dec
andl
add
les
aam
adc
xchg
aam
les
add
int3
xchg
dec
xchg
int3
xchg
xchg
dec
xchg
adc
mov
dec
adc
adc
dec
mov
dec
xchg
xor
testl
dec
xchg
sbb
xchg
enter
and
fwait
xor
dec
pop
dec
mov
sub
dec
adc
mov
dec
adc
sub
dec
adc
dec
mov
sub
inc
add
dec
mov
mov
les
and
or
or
or
or
or
or
or
inc
sub
xchg
xchg
xchg
dec
xor
dec
and
xchg
dec
or
pusha
cmp
dec
mov
dec
fmull
rorb
inc
cmp
cld
das
dec
cmp
cmp
mov
dec
aam
dec
adc
adc
mov
dec
les
rol
or
cmp
repz
nop
loopne
dec
and
xchg
xchg
xchg
xchg
xchg
dec
nop
loopne
xchg
sub
fwait
lcall
enter
or
or
or
or
or
xchg
dec
sub
ret
gs
les
xchg
gs
testl
mov
les
xor
cltd
int3
scas
in
sub
mov
add
les
rorb
dec
mov
add
mov
dec
decl
rorb
xor
and
ret
mov
dec
add
xor
les
and
xchg
sub
mov
shrb
rol
add
mov
mov
les
and
or
or
or
or
or
loopne
dec
and
xchg
cmp
or
add
loopne
dec
shl
dec
and
xchg
xchg
dec
nop
loopne
sub
mov
push
int3
les
or
or
or
or
or
or
or
loopne
incl
mov
xchg
dec
pusha
loopne
les
dec
hlt
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
add
incl
mov
lcall
add
rclb
add
xor
dec
mov
dec
clc
into
dec
mov
rorb
dec
mov
enter
enter
sbb
or
dec
and
inc
or
pusha
loopne
les
mov
dec
testb
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
lea
aam
or
or
or
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
loopne
gs
testl
in
mov
les
loopne
dec
and
xchg
xchg
xchg
dec
and
xchg
add
les
and
les
and
les
add
les
loopne
dec
nop
loopne
dec
and
xchg
dec
mov
adcb
fcoml
les
loopne
aam
leave
dec
and
xchg
sub
jmp
rorb
mov
in
mov
les
testl
les
hlt
push
fadd
or
or
or
or
or
or
or
inc
sub
xchg
xchg
dec
test
rorb
fcoml
inc
ds
int3
dec
hlt
dec
mov
fsubrs
ret
loopne
dec
xor
xor
mov
dec
int3
das
dec
or
or
mov
dec
les
rol
or
xor
lock
and
dec
mov
loopne
mov
loopne
dec
mov
aam
sbb
loopne
dec
xor
add
fadds
cmp
sar
mov
sub
lock
mov
loopne
out
aaa
dec
mov
aam
cmp
faddl
cmp
sar
mov
sub
lock
mov
dec
nop
loopne
scas
cmp
dec
or
jne
cmp
add
push
fadd
or
or
or
or
xchg
dec
sub
ret
gs
les
enter
testl
mov
les
xor
cltd
enter
dec
adc
pop
cmp
in
std
sbb
out
lds
cmp
inc
add
roll
dec
mov
add
dec
add
sar
add
les
lcall
jb
xchg
scas
lds
sub
outsl
cmp
xchg
das
dec
mov
inc
mov
dec
mov
xchg
sub
call
shl
xchg
add
les
rclb
add
mov
les
and
or
or
or
or
or
or
loopne
decl
mov
xchg
dec
pusha
loopne
les
mov
dec
cmc
dec
hlt
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
add
decl
mov
lcall
or
or
or
movsb
sub
or
or
or
or
inc
sub
cmp
or
or
or
or
inc
sub
cmp
or
or
or
or
inc
sub
cmp
or
or
or
or
inc
sub
cmp
or
or
or
or
inc
sub
cmp
or
or
or
or
inc
sub
cmp
or
or
or
or
inc
sub
cmp
or
or
or
or
inc
sub
cmp
or
or
or
or
inc
sub
cmp
or
or
or
or
inc
sub
cmp
or
or
or
or
inc
sub
cmp
or
or
or
or
inc
sub
cmp
or
or
or
or
inc
sub
cmp
or
or
or
or
inc
sub
cmp
or
or
or
or
inc
sub
cmp
or
or
or
or
inc
sub
cmp
or
or
or
or
inc
sub
cmp
or
or
or
or
inc
sub
cmp
or
or
or
or
inc
sub
cmp
or
or
or
or
inc
sub
cmp
or
or
or
or
inc
sub
cmp
or
or
or
or
inc
sub
cmp
or
or
or
or
inc
sub
cmp
or
or
or
or
jl
sub
aam
or
or
or
or
or
dec
mov
inc
push
rclb
dec
mov
lds
dec
ds
add
incl
inc
or
add
pop
fwait
je
lcall
or
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
loopne
dec
aam
rolb
mov
sub
cmp
cmp
mov
dec
add
loopne
mov
les
rol
mov
int3
sub
in
rol
and
or
ret
mov
int3
xchg
add
les
sub
or
or
or
or
or
or
out
rol
and
lds
in
rol
add
dec
add
or
ret
gs
les
cmp
aam
add
addr16
les
loopne
xchg
sub
repnz
add
inc
add
test
ret
mov
enter
loopne
les
loopne
dec
and
sub
pop
cmp
dec
mov
rclb
and
les
xchg
cmp
xchg
add
pop
ja
cmp
loopne
mov
les
or
or
or
or
or
or
ret
gs
les
enter
testl
loopne
addr16
negl
xchg
lods
push
cs
mov
aam
and
lret
les
loopne
dec
cwtl
loopne
sub
pop
cmp
dec
and
xchg
dec
or
loopne
sub
xchg
cmp
inc
mov
leave
dec
mov
enter
in
rol
add
dec
and
dec
nop
loopne
dec
sub
ret
ret
xchg
in
add
les
orb
add
loopne
mov
les
push
int3
les
scas
cmp
gs
les
cmp
aam
add
loopne
xchg
gs
testl
cwtl
mov
les
loopne
dec
mov
dec
aam
xchg
dec
mov
aam
fnstcw
cmp
dec
add
les
jno
cmp
or
or
or
or
or
or
xchg
xchg
scas
les
scas
lds
fcoms
aam
cmp
mov
dec
mov
xchg
scas
scas
les
ret
add
repnz
lcall
ret
adc
les
xchg
inc
add
rorl
das
dec
mov
scas
lds
call
fs
cmp
lock
lahf
pop
or
or
or
or
or
or
or
sbb
les
ffreep
les
loopne
xchg
dec
ret
loopne
scas
dec
or
mov
dec
xchg
shrb
mov
add
repnz
fwait
hlt
xchg
cmp
hlt
fs
adc
les
xchg
inc
add
rorl
das
dec
mov
dec
mov
scas
lds
call
fs
cmp
lock
lahf
push
int3
les
or
ret
gs
les
enter
testl
aam
addr16
les
dec
cmp
scas
in
and
les
call
rorb
enter
fadd
inc
add
into
xchg
dec
cmp
fldcw
testl
dec
cmp
add
jo,pn
cmp
int3
sub
mov
cmp
dec
mov
aam
dec
leave
les
pop
or
or
or
or
or
or
xchg
xchg
xchg
dec
cmp
cmp
mov
jnp
jecxz
les
faddp
les
dec
add
or
fwait
lahf
popf
pop
scas
les
ror
retw
les
loopne
les
rcll
sub
faddp
les
cmp
and
aam
ret
rolb
mov
negl
sub
faddp
les
rorb
dec
ficompl
or
or
or
or
xchg
xchg
xchg
dec
cmp
cmp
mov
jnp
jecxz
les
ffree
les
rorb
or
fwait
lahf
popf
pop
scas
les
ror
retw
and
dec
mov
aam
xchg
xchg
cmp
or
aam
sbb
adc
rol
cmp
shll
gs
ret
rolb
enter
jl
rol
cli
dec
add
dec
pop
lahf
popf
pop
or
or
or
or
or
or
or
dec
cmp
cmp
inc
imul
les
insb
mov
insb
int3
mov
dec
and
xchg
lods
mov
add
les
rol
retw
loop
inc
mov
fxch
retw
jmp
mov
xor
int3
mov
testl
dec
nop
loopne
sub
ffree
les
scas
les
pop
scas
rorb
rclb
lods
cmp
les
ret
xor
rcr
rol
adc
mov
sub
ffree
les
cmp
les
aam
xor
ds
les
cmp
dec
cwtl
loopne
dec
dec
mov
into
sub
fadd
les
dec
xchg
fwait
lcall
or
or
or
or
loopne
xchg
dec
cmp
cmp
mov
jnp
jecxz
les
fadd
les
dec
add
add
cltd
lahf
popf
pop
scas
les
ror
retw
and
xchg
lods
mov
add
les
rol
retw
cmp
inc
fadd
les
cmp
and
aam
ret
rolb
add
cmp
fadd
les
dec
add
mov
fwait
cltd
je
lahf
popf
pop
or
or
or
or
or
or
inc
cmp
mov
jnp
jecxz
les
fadd
les
rorb
or
fwait
lahf
popf
pop
scas
les
ror
retw
and
dec
mov
aam
xchg
xchg
cmp
or
ret
sbb
aam
rol
cmp
shll
gs
ret
rolb
enter
cmp
rol
cli
dec
add
dec
pop
lahf
popf
pop
or
or
or
or
or
or
or
cmp
sub
xchg
dec
xor
dec
and
xchg
idivl
xchg
dec
and
dec
mov
loopne
rol
les
mov
inc
add
loop
mov
sub
rol
les
loopne
dec
add
lret
fwait
lcall
rol
les
dec
add
je
lcall
xchg
xchg
dec
cmp
cmp
mov
jnp
jecxz
les
rol
les
rorb
or
fwait
lahf
popf
pop
scas
les
ror
retw
cmp
cmp
gs
sbb
adc
cmp
and
aam
ret
rolb
enter
jmp
cli
dec
add
dec
pop
lahf
popf
pop
or
inc
sub
xchg
xchg
scas
les
ror
retw
nop
loopne
scas
les
fcoml
mov
fcoml
add
les
and
les
sarl
sub
rol
les
cmp
and
aam
ret
rolb
mov
jnp
jecxz
les
enter
les
les
rol
les
rorb
pop
mov
inc
or
fwait
lahf
inc
add
pop
idivl
sub
rol
les
fwait
dec
add
and
lahf
inc
add
pop
or
or
or
or
or
xchg
xchg
dec
xor
ret
cmp
mov
dec
and
dec
test
inc
add
ret
rol
xlat
jnp
mov
rol
cli
dec
add
lcall
les
rol
les
dec
add
lcall
les
les
rol
les
dec
add
lcall
std
and
mov
xor
leave
cld
and
mov
scas
sub
mov
les
xchg
xchg
xchg
scas
les
ror
retw
mov
rorb
loopne
scas
les
and
xchg
scas
lds
loopne
les
shll
gs
sbb
or
cmp
shll
gs
ret
rolb
mov
jnp
jecxz
les
enter
les
les
rol
les
rorb
pop
mov
inc
or
fwait
lahf
popf
pop
idivl
sub
rol
les
fwait
dec
add
and
lahf
popf
pop
or
or
or
or
or
or
cmp
mov
dec
and
dec
test
inc
add
ret
rol
jnp
mov
rol
cli
dec
add
popf
pop
jnp
jecxz
les
rol
les
dec
add
popf
pop
stc
push
rol
mov
jnp
jecxz
les
cli
dec
add
popf
pop
or
or
or
or
or
loopne
xchg
scas
les
ror
retw
and
dec
mov
fsubrl
les
gs
cmp
es
les
cmp
and
aam
ret
rolb
mov
iret
add
inc
cmp
mov
scas
rorb
aam
scas
fildll
loopne
les
shrl
gs
pop
sub
rol
les
rorb
cltd
dec
ficompl
or
or
or
enter
inc
aas
cmp
les
rol
les
rorb
pop
fwait
lahf
popf
pop
scas
les
ror
retw
nop
loopne
dec
ret
dec
mov
aam
xchg
lods
ret
aam
les
dec
and
cmp
add
aam
sbb
and
dec
ret
sub
rol
les
cmp
and
aam
ret
rolb
enter
fcmovnbe
rol
cli
dec
add
dec
pop
lahf
popf
pop
or
or
xchg
xchg
dec
cwtl
loopne
xchg
dec
cmp
aas
cmp
les
xlat
rol
add
cli
iret
pop
fwait
lahf
popf
pop
scas
les
ror
retw
nop
loopne
dec
ret
dec
mov
aam
xchg
xchg
dec
and
cmp
add
ret
sbb
and
dec
ret
sub
xlat
rol
cmp
shll
gs
ret
rolb
enter
insl
xlat
rol
cli
dec
add
dec
pop
lahf
popf
pop
or
or
or
or
or
or
or
xchg
dec
cwtl
loopne
xchg
xchg
dec
cmp
cmp
mov
jnp
jecxz
les
xlat
rol
add
cli
inc
or
fwait
cltd
lahf
pop
scas
les
ror
retw
lods
mov
cmp
shlb
dec
sub
xchg
xlat
rol
cmp
shll
gs
ret
rolb
in
cmp
xlat
rol
add
and
dec
cli
std
pushl
dec
add
in
fwait
dec
add
or
or
or
or
xchg
dec
test
fcoml
cmp
int3
retw
pop
mov
std
cwtl
loopne
mov
inc
sub
cwtl
dec
mov
jl
mov
lret
lods
or
add
add
movl
cmp
push
fs
cmp
rol
add
cli
testl
cmp
mov
dec
add
add
lret
mov
add
mov
fmull
loopne
xchg
xchg
xchg
xchg
xchg
cmp
sub
ret
sbb
mov
rol
cmp
shll
gs
ret
rolb
enter
lahf
rol
cli
dec
add
cltd
dec
pop
lahf
pop
stc
sti
jecxz
les
stc
loop
les
add
fiadds
int3
lret
inc
imul
ret
rol
add
cli
dec
add
int3
fwait
cmp
dec
add
les
rol
add
cli
dec
add
les
aaa
aad
les
rorb
add
les
aad
les
rorb
add
les
mov
sar
cmp
stc
dec
cmp
jge
rol
add
cli
dec
add
les
aad
les
rorb
add
les
aad
les
rorb
add
les
rol
cmp
shll
gs
ret
rorb
pop
jnp
out
les
aad
les
rorb
add
or
or
or
or
enter
loopne
xchg
dec
xor
xor
mov
divl
scas
les
ror
retw
and
dec
mov
fmuls
loopne
xchg
xchg
xchg
xchg
cmp
shlb
aam
mov
int3
sub
cmp
cmp
dec
iret
dec
xchg
rorb
dec
int3
dec
xchg
rcrb
dec
add
or
or
or
or
rolb
xchg
dec
cwtl
loopne
xchg
inc
add
ret
rol
in
daa
mov
rol
adc
or
rorb
iret
dec
xchg
rorb
lahf
inc
add
pop
dec
mov
loopne
nop
loopne
dec
and
xchg
xchg
xchg
xchg
dec
and
dec
mov
cmp
cmp
dec
xchg
rolb
fwait
dec
iret
dec
xchg
rorb
inc
add
pop
or
or
or
or
dec
mov
rorb
dec
hlt
sub
or
rolb
cmp
rol
lret
loopne
xchg
scas
lds
loopne
add
push
add
inc
add
pop
or
or
or
cmp
cmp
gs
les
cmp
aam
add
loopne
xchg
xchg
xchg
gs
testl
xchg
mov
les
int3
dec
and
sub
lret
rol
les
ror
retw
lds
ret
scas
cmp
xor
ret
xor
sbb
rol
cmp
shll
gs
and
dec
mov
cmp
cwtl
loopne
das
cmp
lret
rol
or
add
loopne
dec
mov
fmull
loopne
dec
sbb
loopne
add
les
cmp
add
add
aam
lret
dec
mov
rclb
aam
lahf
fwait
cmp
add
les
cmp
rol
fucom
les
loopne
das
test
retw
rorb
loopne
scas
shrb
shrl
gs
xor
dec
rol
cmp
shll
gs
and
dec
mov
mov
sub
lret
rol
mov
rorb
loopne
dec
stc
sbb
ret
add
and
dec
and
dec
and
dec
and
jl
les
and
aam
les
cmp
dec
nop
loopne
dec
and
testl
pop
mov
sub
xor
cmp
int3
inc
cmp
mov
dec
and
xor
add
add
aam
leave
dec
or
aam
inc
lcall
xchg
xchg
dec
mov
fmuls
loopne
sub
cmp
inc
add
inc
cmp
mov
dec
and
xor
add
add
aam
leave
dec
or
aam
xchg
lcall
aam
adc
loopne
dec
mov
rorb
sub
xor
cmp
cmp
shlb
push
fists
xor
add
aam
leave
dec
add
sub
lcall
int3
retw
lds
ret
scas
cmp
xor
ret
xor
ror
rol
cmp
shll
gs
or
mov
rorb
loopne
inc
cmp
mov
iret
cmp
xlat
idivl
sub
leave
rol
or
loopne
dec
and
dec
cmp
loopne
add
cmp
mov
xor
add
aam
lret
dec
mov
rclb
aam
fs
cmp
dec
nop
loopne
xchg
dec
and
xchg
dec
mov
fmuls
sub
xor
cmp
int3
inc
cmp
mov
dec
mov
shlb
sbb
add
aam
leave
dec
adc
aam
mov
mov
rorb
sub
cmp
dec
sbb
cwtl
loopne
add
aas
cmp
shlb
sbb
add
add
aam
leave
dec
or
aam
jmp
cmp
dec
nop
loopne
xchg
dec
and
xchg
dec
mov
fmuls
add
les
and
les
cmp
int3
inc
add
loopne
xor
add
aam
leave
dec
adc
aam
sub
and
les
cmp
rol
fucom
les
loopne
dec
and
das
subb
ret
rorb
loopne
scas
lds
sub
aam
xor
add
rol
sbb
shll
gs
and
dec
cwtl
loopne
inc
xor
rol
mov
rorb
loopne
dec
cwtl
loopne
dec
mov
in
xchg
dec
nop
loopne
xchg
dec
mov
fmuls
add
les
and
les
cmp
cmp
int3
inc
add
fmuls
loopne
xor
add
add
aam
leave
dec
or
aam
stc
cwtl
cmp
add
les
cmp
ror
retw
rorb
loopne
scas
lds
sub
aam
xor
jmp
rol
shll
gs
xor
rol
mov
call
mov
add
cmp
inc
cmp
mov
sub
enter
and
xchg
scas
lds
loopne
dec
or
and
les
cmp
inc
add
dec
add
loopne
mov
les
mov
cld
testl
les
cltd
push
rol
or
or
xchg
dec
sub
cmp
sub
sub
iret
rol
lret
loopne
movb
mov
dec
and
xchg
scas
lds
loopne
sub
xor
int3
dec
mov
inc
cmp
nop
loopne
xchg
scas
lds
loopne
sub
xor
int3
dec
and
or
shl
add
mov
xchg
dec
and
dec
mov
enter
int3
les
loopne
sub
iret
rol
and
dec
and
dec
mov
dec
nop
loopne
xchg
xchg
dec
mov
fsubrl
xor
cmp
int3
lcall
or
or
or
or
or
fadd
les
cmp
aam
add
loopne
rol
xchg
dec
and
xchg
dec
and
add
les
and
les
into
rol
rorl
loopne
xchg
xchg
dec
mov
aam
and
sub
aaa
cmp
inc
add
inc
add
pop
pop
stc
rol
mov
dec
lret
dec
and
xchg
xchg
dec
mov
aam
pop
aaa
cmp
inc
add
stc
rol
mov
dec
dec
loopne
rol
lcall
dec
rol
les
fadd
les
or
or
or
ret
gs
les
xchg
xchg
gs
testl
in
addr16
les
loopne
dec
test
hlt
negl
dec
cltd
rorb
dec
or
cwtl
loopne
add
aam
mov
cmp
dec
adc
sub
lahf
cmp
dec
xor
jmp
mov
fdivl
sbb
xor
loopne
xor
add
aam
lret
dec
and
xchg
jle
das
ret
cs
cmp
dec
mov
xchg
add
js
cmp
lods
fs
rol
aam
shrb
add
cld
out
les
and
dec
pop
mov
les
dec
pop
xchg
dec
pop
nop
sub
faddp
les
rorb
lock
pop
mov
jge
sbb
aam
xchg
dec
xor
mov
add
inc
xchg
dec
add
loopne
mov
les
inc
add
push
int3
les
or
or
or
or
or
or
jecxz
les
and
lds
rol
les
rorb
push
rol
xchg
xchg
sub
add
or
or
or
scas
cmp
gs
les
ret
aam
add
addr16
les
loopne
add
adc
ret
or
and
mov
les
shrb
add
int
rol
mov
add
in
cmp
dec
mov
xchg
cmp
call
ret
fs
aam
mov
enter
les
enter
or
or
or
or
or
or
or
cmp
cmp
gs
les
xchg
xchg
gs
testl
test
les
dec
mov
xchg
dec
mov
cld
cmp
hlt
fs
pop
dec
cwtl
loopne
xchg
add
lds
inc
mov
lds
shl
fs
cwtl
loopne
std
pop
xchg
mov
dec
and
dec
cwtl
loopne
dec
and
add
les
loopne
sub
int3
rol
xchg
lock
mov
loopne
xchg
dec
mov
lock
and
sub
cmp
dec
jae
inc
add
sub
cltd
cmp
dec
jae
pushl
mov
dec
add
cmp
clc
fs
sub
xlat
rol
add
dec
pop
xchg
dec
cwtl
loopne
dec
cwtl
loopne
add
mov
jns
les
les
loopne
xchg
xchg
sub
xchg
les
addb
mov
dec
jnp
aas
mov
dec
les
dec
xchg
rorb
loopne
xchg
dec
or
push
dec
mov
das
dec
cwtl
loopne
dec
and
dec
xor
pop
mov
dec
mov
inc
add
dec
mov
fdivr
cmpxchg
dec
cwtl
loopne
dec
fsubrl
cwtl
cmp
dec
and
dec
xor
pop
mov
dec
mov
test
les
dec
and
or
or
ret
gs
les
xchg
xchg
gs
testl
fsubs
les
dec
ss
stos
fcoml
cmp
hlt
fs
and
lds
and
les
les
dec
sbb
cmp
fsubs
dec
add
mov
dec
mov
call
rol
les
les
dec
adc
add
xchg
cmp
fsubs
inc
pop
mov
inc
add
xchg
sub
aas
cmp
xchg
cmp
lock
mov
fsubs
les
inc
add
push
rol
cmp
gs
les
gs
testl
loopne
addr16
les
fcoml
cmp
hlt
fs
and
lds
and
les
mov
rol
mov
lock
and
dec
and
xchg
xchg
xchg
dec
cwtl
loopne
sub
rol
xchg
cmp
lock
mov
loopne
dec
leave
les
loopne
rol
or
scas
cmp
gs
les
sub
test
xchg
gs
testl
xchg
hlt
les
les
loopne
hlt
les
fcoml
cmp
hlt
fs
and
dec
pop
loopne
hlt
cld
pop
mov
les
mov
dec
jno
inc
or
dec
inc
loopne
aam
les
loopne
in
les
loopne
hlt
les
hlt
dec
pop
loopne
aam
les
loopne
in
les
loopne
add
pushl
mov
dec
rorb
rorb
adc
add
out
mov
pushl
mov
je
inc
add
push
add
jo
cld
aam
les
cld
add
les
int3
testb
dec
and
inc
add
into
inc
mov
loopne
mov
add
dec
loopne
hlt
les
cmp
xchg
sub
mov
incl
mov
dec
sbb
add
les
loopne
lds
mov
push
les
les
aam
les
cmpsl
les
loopne
in
incl
mov
dec
sbb
inc
loopne
hlt
les
in
les
cmpsl
les
loopne
hlt
incl
mov
dec
sbb
add
and
dec
and
dec
mov
sub
mov
dec
mov
fcoms
lock
and
les
rol
dec
push
loopne
in
les
aam
les
xchg
dec
add
xor
inc
add
inc
xor
dec
nop
loopne
dec
mov
hlt
lret
rol
add
shrl
cmp
dec
and
xchg
cmp
hlt
fs
and
lds
mov
mov
dec
dec
loopne
in
les
les
les
aam
les
les
les
loopne
in
les
add
les
les
loopne
hlt
les
les
les
addb
daa
dec
push
les
mov
les
mov
dec
cmp
dec
inc
loopne
hlt
les
aam
dec
or
push
dec
mov
inc
xor
fcoms
aam
dec
loopne
hlt
les
les
inc
add
les
xchg
dec
sub
cmp
cmp
gs
les
xchg
gs
testl
in
mov
les
int3
dec
mov
xchg
dec
mov
in
shl
fs
and
dec
cwtl
loopne
cld
pop
mov
lret
inc
pop
les
dec
ds
cwtl
loopne
mov
xchg
cmp
lock
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
dec
and
xchg
xchg
add
sbb
cmp
dec
mov
rclb
cmp
cwtl
loopne
mov
xchg
cmp
hlt
fs
and
lds
hlt
dec
and
dec
adc
pop
mov
dec
mov
inc
add
dec
mov
sar
cmpxchg
dec
cwtl
loopne
dec
ss
fsubrl
xchg
cmp
dec
and
dec
adc
pop
mov
dec
mov
fmuls
int3
cld
pop
mov
lret
inc
mov
cmp
cld
cwtl
loopne
mov
xchg
cmp
lock
mov
in
mov
les
and
or
or
or
or
loopne
xchg
sub
cmp
cmp
or
or
or
les
addr16
xlat
dec
rorb
enter
cmp
mov
dec
or
xor
filds
dec
push
add
dec
ret
lods
add
xchg
out
or
mov
dec
add
or
or
or
or
scas
cmp
gs
les
xchg
xchg
gs
testl
lock
imull
negb
dec
test
fmull
loopne
dec
test
clc
dec
mov
addb
dec
mov
mov
loopne
xchg
dec
mov
fcoms
clc
les
mov
inc
pop
mov
ja
inc
add
sbb
dec
mov
fcoml
inc
pop
mov
dec
mov
addb
loopne
les
loopne
add
les
loopne
sub
dec
nop
loopne
dec
and
dec
xor
xchg
dec
mov
hlt
sub
das
cmp
inc
add
add
cmp
dec
mov
cmp
dec
cld
dec
in
sub
xchg
cmp
dec
xor
cmp
lock
les
inc
add
push
enter
inc
sub
xchg
dec
cwtl
loopne
xchg
xchg
dec
dec
mov
cmp
dec
xchg
dec
xchg
idivl
xchg
dec
mov
cmp
dec
xor
mov
aam
xor
rol
sbb
xor
loopne
xor
add
aam
lret
dec
mov
aam
jle
das
ret
jne
cmp
dec
mov
pop
lahf
inc
add
push
rol
or
xchg
dec
sub
cmp
cmp
gs
les
gs
testl
in
addr16
les
int3
dec
or
dec
and
cmp
hlt
fs
and
lds
and
les
loopne
xor
inc
addr16
les
dec
mov
rol
cli
cmp
les
int3
xchg
cmp
mov
ret
add
into
dec
lret
cmp
gs
rol
lret
loopne
xchg
dec
mov
add
or
mov
fadds
int3
add
cmp
cmp
add
decl
ret
les
rolb
rol
les
mov
dec
xchg
rolb
xor
add
rorl
rorb
adc
mov
inc
push
cmp
add
ret
dec
xchg
int3
dec
or
push
dec
mov
inc
xor
inc
fwait
cmp
cmp
loopne
xchg
cmp
lock
mov
in
dec
leave
les
cltd
push
rol
or
or
or
or
or
cmp
xchg
dec
xor
add
rol
dec
fwait
enter
hlt
fs
mov
mov
dec
adc
and
sbb
or
dec
xchg
rorb
rorb
sar
add
fmull
fcoml
mov
cmp
lock
lahf
dec
and
or
or
or
or
inc
cli
cmp
aam
mov
scas
les
xchg
cmp
mov
ret
add
into
dec
lret
cmp
mov
cli
inc
cmp
mov
dec
add
mov
insb
int3
mov
dec
nop
loopne
xchg
lods
mov
add
les
rol
retw
mov
cmp
int3
retw
cmp
les
aam
cmp
pop
cmp
les
cmp
and
aam
add
cmp
mov
add
ret
cmp
add
mov
cmp
les
rorb
aam
cltd
dec
int3
dec
xchg
rcrb
or
or
or
or
or
or
or
ret
gs
les
xchg
xchg
gs
testl
in
addr16
les
dec
cwtl
loopne
dec
test
lock
cmp
mov
aam
mov
inc
leave
inc
mov
aam
lods
movsb
dec
ret
rorl
lods
sub
aam
cwtl
rol
add
jl
les
mov
aam
ret
rorb
dec
mov
sub
dec
and
dec
mov
test
loopne
xchg
xchg
xchg
sub
sub
cmp
inc
add
dec
mov
loopne
les
cmp
mov
dec
add
or
les
loopne
dec
xchg
dec
test
scas
les
shrl
mov
cmp
nop
fs
and
sub
cmp
les
loopne
das
ret
sub
cmp
testl
xor
add
lret
loopne
insl
add
aam
testl
les
rolb
loopne
cmp
cmp
sub
cmp
les
loopne
xchg
scas
lds
loopne
dec
or
and
les
daa
cmp
inc
add
das
mov
loopne
inc
sub
add
cmp
dec
pushl
mov
add
add
add
loopne
les
loopne
xchg
dec
mov
idivl
sub
cmp
les
dec
add
mov
dec
add
loopne
mov
les
inc
add
push
fadd
or
or
or
or
or
xchg
dec
xor
xchg
xchg
inc
add
xchg
cmp
fsubs
inc
mov
les
scas
les
and
lahf
push
fadd
dec
mov
fmull
inc
cmp
mov
dec
xchg
lods
fucom
les
lcall
loopne
xchg
xchg
dec
nop
loopne
dec
mov
hlt
xchg
dec
mov
in
xchg
xchg
xchg
add
les
shll
gs
cmp
shll
gs
push
rol
mov
jl
jecxz
les
mov
stc
and
les
loopne
xchg
dec
xchg
sub
and
cmp
les
rorb
xchg
cmp
les
or
or
or
or
or
or
cmp
sub
xchg
dec
cltd
int3
xchg
dec
xor
xchg
xchg
inc
add
xchg
cmp
fsubs
inc
mov
dec
xchg
scas
les
cmp
fwait
lcall
les
enter
cmp
mov
dec
xchg
scas
les
mov
cmp
cltd
push
rol
testl
loopne
dec
nop
loopne
xchg
dec
xchg
rorb
loopne
xchg
dec
mov
xchg
xchg
xchg
cmp
cmp
ret
cmp
shll
gs
cmp
mov
jl
jecxz
les
enter
les
les
mov
stc
and
les
aam
xchg
dec
xchg
sub
sbb
cmp
cltd
push
rol
dec
xchg
dec
cmp
sbb
cmp
cltd
push
rol
or
or
or
or
or
or
or
or
or
or
or
or
or
or
cmp
sub
xchg
dec
cltd
int3
xchg
xchg
scas
les
xchg
cmp
mov
ret
cmp
cmp
mov
mov
rclb
or
int3
aam
and
les
cmp
xchg
cmp
in
ret
cltd
enter
dec
xchg
mov
dec
mov
xchg
dec
movl
cmp
inc
add
inc
add
mov
adc
xchg
dec
movl
cmp
inc
add
inc
add
lea
ds
int3
inc
cli
lock
les
mov
jmp
les
mov
mov
fimull
rorb
mov
xchg
dec
adc
aaa
cmp
fwait
lcall
les
rorb
fcoml
aam
mov
xchg
cmp
fwait
lcall
les
or
or
or
or
inc
sub
inc
cli
cmp
scas
les
int3
xchg
cmp
mov
ret
add
into
dec
lret
cmp
scas
aaa
cmp
sub
ds
loopne
xchg
dec
mov
add
and
cmp
int3
add
cmp
cmp
add
les
int3
fwait
inc
add
sub
or
or
or
or
or
or
ret
gs
les
xchg
gs
testl
fsubl
les
loopne
dec
and
dec
mov
cmp
dec
dec
xchg
xchg
sub
cmp
dec
xor
dec
cmp
loopne
xor
fbstp
dec
and
xor
add
aam
lret
dec
mov
aam
jle
das
ret
orl
les
into
rol
add
dec
and
add
add
int
xor
jmp
cmp
das
testl
mov
cmp
scas
rorb
sub
into
rol
xor
add
inc
xor
dec
ret
int3
inc
push
fcoml
ret
divl
dec
mov
add
les
dec
mov
fsubl
les
add
push
int3
les
scas
cmp
gs
les
enter
testl
shlb
les
loopne
add
les
les
in
inc
xor
xchg
cmp
clc
fs
sub
rol
inc
add
add
mov
inc
xor
popf
int3
dec
xchg
fcoml
ret
add
ret
dec
pop
sub
xchg
cmp
xchg
sub
rol
inc
add
add
mov
inc
xor
lahf
cmp
xchg
sub
rol
inc
add
inc
add
xchg
cmp
call
mov
shlb
les
add
push
rol
or
or
or
or
loopne
and
les
mov
dec
ret
int3
dec
fcoml
ret
add
ret
dec
pop
sub
nop
cmp
xchg
sub
mov
dec
sbb
add
xchg
dec
test
sub
nop
cmp
dec
mov
inc
xor
cmp
dec
mov
add
les
mov
dec
xchg
rclb
aam
sub
mov
dec
mov
add
les
mov
xchg
sub
sahf
cmp
xchg
sub
mov
lcall
or
or
or
or
or
or
xchg
dec
sub
cmp
cmp
gs
les
enter
testl
fsubl
les
rclb
hlt
fs
and
lds
and
les
in
les
scas
int3
rol
add
dec
and
add
add
leave
dec
mov
xchg
dec
xor
xlat
popf
les
testl
in
inc
xor
xchg
cmp
clc
fs
sub
mov
inc
add
dec
mov
enter
lock
mov
fsubl
les
pop
or
or
or
inc
sub
xchg
negl
xchg
dec
and
dec
lcall
aam
fimull
rorb
dec
lcall
fsubrs
mov
cmp
dec
mov
xor
les
sbb
cmp
loopne
xor
add
aam
lret
dec
mov
int3
xchg
jle
das
ret
lahf
cmpb
dec
lcall
lcall
enter
or
or
or
or
xchg
xchg
dec
xor
add
add
xchg
cmp
hlt
fs
add
mov
dec
mov
inc
mov
lret
push
pop
inc
push
in
cmp
lock
pop
mov
xchg
dec
mov
sbb
cmp
fsubs
dec
add
xchg
cmp
fwait
lcall
scas
cmp
gs
les
xchg
gs
testl
fsubl
les
loopne
dec
mov
in
negl
dec
lcall
enter
dec
cwtl
loopne
add
cmp
ret
mov
cmp
dec
adc
sbb
sub
cmpl
dec
cmp
imul
les
loopne
xor
fistpll
dec
and
xor
add
aam
lret
dec
and
xchg
jle
das
ret
test
cmp
lods
in
add
aam
add
rorb
xchg
add
add
rol
pop
lock
mov
fsubl
les
add
push
int3
les
jecxz
les
and
lds
inc
add
dec
add
add
les
or
or
or
or
or
ret
gs
les
aam
add
addr16
les
loopne
lods
in
add
rorb
xchg
add
les
mov
xchg
cmp
call
ret
ret
mov
int3
mov
les
push
rol
or
or
or
or
or
xchg
dec
sub
cmp
xchg
xchg
dec
xor
xchg
idivl
negl
cmp
hlt
fs
xchg
hlt
jp
les
inc
add
clc
inc
or
mov
dec
shrb
dec
cmp
or
mov
lds
lock
xor
mov
dec
adc
cld
add
les
mov
cmp
inc
cmp
lahf
dec
and
or
or
or
ret
gs
les
xchg
xchg
gs
testl
in
addr16
les
loopne
dec
test
hlt
dec
inc
lock
dec
aas
add
dec
adc
dec
dec
lock
sub
jge
repz
idivl
jl
int
shll
and
sti
cmp
cmp
fcoml
fdivrs
shl
fs
and
lds
and
les
jns
les
sbb
rol
add
dec
and
add
add
int
xor
jo
cmp
das
testl
dec
mov
hlt
dec
cmpb
xor
cmpsl
les
les
rorb
fmull
jns
xchg
dec
cmp
lock
mov
in
dec
leave
les
inc
add
push
int3
les
or
or
or
or
xchg
dec
sub
cmp
cmp
gs
les
xchg
gs
testl
in
mov
les
int3
lret
inc
pop
les
enter
xchg
cmp
hlt
fs
mov
push
incl
mov
dec
mov
dec
mov
decl
mov
dec
xchg
test
rclb
ret
shlb
mov
fdivrl
roll
ret
rcl
movsl
int3
aam
aam
mov
rclb
in
pop
dec
or
les
loopne
dec
mov
in
and
sub
ss
xchg
fcoml
cmp
inc
add
dec
and
sub
cmp
cmp
loopne
dec
leave
shlb
cmp
dec
mov
in
mov
les
and
or
or
or
or
test
les
or
or
or
or
scas
cmp
gs
les
aam
add
addr16
les
loopne
dec
or
cmp
les
loopne
dec
nop
loopne
testl
dec
mov
add
shlb
xchg
add
les
rclb
loopne
cmp
dec
add
loopne
mov
les
push
enter
or
or
or
or
or
or
or
in
aam
rorb
pop
dec
test
pop
or
dec
and
xchg
xchg
dec
xor
les
ret
ret
add
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
in
sub
cmp
notl
dec
nop
loopne
add
shlb
dec
or
or
cmp
aam
adc
add
les
rclb
cmpsl
cmp
dec
add
loopne
mov
les
aam
rol
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
ret
mov
enter
loopne
les
and
les
and
les
stos
cmp
dec
and
xchg
scas
les
loopne
xchg
add
les
cmp
cmp
nop
loopne
xchg
add
ret
ljmp
or
or
or
loopne
xchg
xchg
dec
xor
cmp
ret
ret
add
or
or
or
xchg
xchg
dec
mov
enter
ret
add
les
shrb
or
loopne
dec
add
in
stos
cmp
dec
add
or
dec
lds
aam
dec
mov
int3
xchg
cmp
testl
push
rol
or
or
or
dec
xchg
in
or
or
or
or
or
ret
gs
les
gs
testl
mov
addr16
les
dec
xchg
lock
dec
aam
xchg
int3
dec
mov
enter
cmp
xchg
jnp
sub
aam
mov
call
les
xchg
les
rclb
xchg
add
inc
lds
cmp
cmp
mov
mov
fdivs
aam
loop
rol
or
or
or
or
or
or
or
or
dec
xchg
enter
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
ret
mov
enter
loopne
les
and
les
and
les
stos
cmp
dec
and
xchg
scas
les
loopne
xchg
add
les
cmp
cmp
nop
loopne
xchg
add
ret
dec
rol
les
or
or
or
or
mov
dec
test
pop
testl
or
dec
xchg
shrb
les
sbb
add
sbb
or
or
or
or
or
dec
lds
sarb
and
or
or
or
or
testb
les
or
or
or
or
or
dec
lds
cwtl
cmp
or
or
or
or
or
add
or
or
or
or
or
or
or
dec
push
pusha
les
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
ret
mov
enter
loopne
les
and
les
and
les
test
loopne
xchg
scas
les
loopne
xchg
add
les
aas
cmp
lods
int3
inc
ret
aam
nop
loopne
xchg
add
ret
dec
xlat
rol
or
or
or
or
loopne
add
les
test
testl
or
or
or
or
testl
or
or
or
or
or
enter
int3
dec
aad
scas
lds
adc
dec
xchg
hlt
dec
mov
xchg
dec
testb
outsb
sub
enter
mov
inc
add
fwait
inc
or
dec
aam
lds
push
pop
or
or
or
or
or
ret
gs
les
testl
shlb
dec
and
dec
mov
testl
shlb
aam
xchg
aam
mov
dec
mov
dec
mov
shlb
les
rol
or
or
or
or
or
or
or
je
pop
or
or
or
or
or
or
or
ret
gs
les
aam
add
addr16
les
loopne
xchg
sub
or
les
and
les
ret
xchg
adc
dec
mov
int3
mov
les
push
rol
or
or
or
or
or
or
ret
gs
les
ret
aam
add
addr16
les
loopne
add
les
pushf
inc
or
dec
aam
lds
push
dec
mov
cmp
aad
dec
fdiv
add
outsb
dec
mov
cmp
in
dec
in
testb
dec
mov
enter
les
enter
or
or
or
pop
or
or
or
or
or
cmp
in
dec
in
testb
fwait
pop
or
or
or
or
or
or
cmp
aad
dec
fdiv
add
outsb
fwait
pop
or
or
or
or
or
or
int3
dec
lds
sarb
or
or
or
dec
int3
dec
lds
int3
cmp
or
or
or
dec
int3
dec
lds
enter
or
or
or
int3
dec
lds
aam
and
or
or
or
int3
dec
lds
sarb
and
or
or
or
rorb
dec
xchg
rolb
sarb
or
dec
test
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
loopne
inc
add
sahf
incl
subb
loopne
add
les
and
les
and
les
lods
cmp
dec
and
xchg
scas
lds
loopne
xchg
add
les
cmp
cmp
nop
loopne
xchg
add
ret
mov
rol
mov
mov
les
rol
or
or
or
or
dec
xchg
aam
dec
mov
xchg
testb
dec
push
aaa
outsb
xchg
inc
ds
iret
sub
ret
rol
add
fwait
lcall
inc
add
fwait
lcall
add
or
or
or
or
or
or
or
rorb
dec
xchg
fadds
sarb
or
dec
and
xchg
dec
mov
xchg
dec
mov
dec
mov
enter
xchg
sub
xor
les
aam
lcall
or
or
or
xchg
dec
xor
mov
dec
lds
aam
cmp
dec
mov
dec
cmp
adc
xchg
xchg
sub
xchg
les
rorb
faddl
enter
xchg
dec
xor
jecxz
les
or
or
or
jl
les
or
or
or
or
or
dec
test
pop
or
or
or
or
or
or
dec
test
pop
or
or
or
or
or
or
scas
cmp
gs
les
gs
testl
cwtl
mov
les
loopne
dec
add
add
push
xor
jg
cmp
pop
testl
cwtl
loopne
testl
aam
and
sub
sub
dec
xor
jno
mov
add
dec
cwtl
loopne
dec
nop
loopne
xchg
xchg
dec
mov
dec
xor
xchg
xchg
les
and
lds
clc
dec
lcall
scas
shrl
loopne
add
les
loopne
dec
cwtl
loopne
sub
lods
cmp
dec
and
xchg
dec
mov
lock
jo
cmp
lods
mov
ret
aam
mov
lock
sub
lret
jle
les
add
loopne
mov
les
cwtl
push
rol
or
or
or
int3
inc
and
add
xchg
dec
scas
rorb
rorb
cmp
gs
les
mov
gs
testl
xchg
xchg
dec
xorl
les
xor
cmp
cmp
testl
int3
mov
scas
shrl
and
cmp
add
cmp
cmp
les
cmp
cmp
dec
inc
sub
cmp
sub
mov
and
cmp
xchg
dec
dec
push
cmp
cmp
cmpl
cmp
lods
mov
ret
aam
dec
push
cmp
cmp
les
in
cmp
xchg
sub
aas
cmp
scas
aam
mov
xchg
dec
dec
in
cmp
add
dec
inc
mov
cmp
xchg
sub
loop
les
cmpl
cmp
cmp
in
dec
mov
cmp
cmp
scas
in
push
lret
dec
or
jno
cmp
cmp
inc
in
sarl
dec
inc
fdivrl
cmp
testl
dec
mov
dec
xchg
clc
xchg
sub
cmp
dec
adc
push
fdivrl
cmp
testl
dec
adc
call
dec
dec
cmp
cmp
dec
dec
sub
cmp
lods
mov
dec
and
cmp
add
cmp
cmp
les
mov
and
cmp
xchg
dec
dec
js
cmp
add
fnstcw
cmp
push
js
cmp
xchg
sub
enter
inc
mov
cmp
xchg
dec
mov
push
cmpl
dec
aad
xchg
cmp
xor
mov
mov
sub
ds
enter
dec
mov
cmp
cmp
mov
xor
dec
jno
cmp
cmp
sarb
cmp
pop
les
lret
inc
pusha
les
int3
cmp
cmp
inc
xor
cmp
cmp
hlt
mov
sub
cmp
rorb
cmp
cmp
mov
inc
fstpt
cmp
les
mov
sub
cmp
aam
shrl
mov
rolb
cmp
les
dec
xchg
scas
lds
mov
add
cmp
cmp
das
sbb
das
push
dec
jno
cmp
cmp
inc
add
loope
xchg
cmp
dec
mov
mov
sub
cmp
fstpt
cmp
inc
add
dec
mov
cmp
dec
les
sbb
inc
dec
xchg
scas
lds
les
inc
cmp
dec
fdivrl
cmp
dec
test
dec
fmuls
enter
dec
dec
sarb
cmp
dec
test
mov
dec
test
dec
mov
dec
adc
add
aaa
outsb
sub
rol
dec
mov
dec
adc
shl
xchg
aaa
outsb
sub
rol
dec
mov
add
inc
or
dec
scas
lds
adc
jno
cmp
cmp
dec
dec
in
cmp
xchg
add
cmp
dec
cltd
sub
sarb
cmp
testl
xor
aam
dec
cltd
sub
cmpl
dec
mov
inc
xor
inc
or
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
mov
mov
les
and
or
xor
les
cltd
dec
daa
lahf
push
int3
les
or
or
cmp
sub
xchg
xchg
xchg
dec
xor
stos
aam
dec
mov
aam
mov
ret
dec
and
lcall
cmp
mov
dec
ret
xchg
xchg
xchg
xchg
dec
nop
loopne
xchg
sub
cmc
les
test
mov
dec
mov
inc
add
std
lds
aam
dec
mov
rolb
and
rol
les
out
les
loopne
dec
and
dec
and
add
les
out
les
lock
mov
dec
nop
loopne
xchg
dec
and
dec
mov
fsubrl
out
les
fwait
lcall
or
or
or
or
dec
adc
add
int
sub
xor
les
rorb
xchg
add
les
adc
les
sbb
les
xor
les
rolb
out
dec
mov
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
or
or
or
or
or
or
in
mov
xchg
xchg
dec
testb
outsb
sub
mov
dec
xchg
aam
lcall
dec
aas
dec
push
aaa
outsb
xchg
inc
ds
ret
sub
das
shrl
rol
jp
dec
dec
test
les
test
xor
inc
es
adc
add
ds
add
testl
or
or
or
or
or
or
dec
xchg
xchg
dec
mov
add
aaa
outsb
sub
mov
dec
xchg
hlt
dec
mov
dec
testb
outsb
sub
mov
dec
mov
inc
add
fwait
inc
or
dec
aam
lds
push
pop
or
or
or
or
fadd
les
fmull
xor
inc
es
xchg
dec
jl
adc
ds
add
testl
or
or
or
int3
dec
rclb
aaa
outsb
sub
inc
add
fwait
pop
or
or
or
or
xchg
dec
xor
xchg
in
mov
xchg
dec
testb
outsb
sub
dec
xchg
aam
mov
inc
add
testb
dec
push
aaa
outsb
xchg
inc
ds
iret
sub
rol
add
fwait
lcall
inc
add
fwait
lcall
or
or
or
or
xchg
dec
add
add
push
xor
jo
cmp
les
ret
ret
and
les
sbb
les
add
or
or
or
or
or
or
xchg
dec
sub
cmp
sub
xchg
xchg
xchg
dec
xor
stos
aam
dec
mov
movsb
xor
les
enter
and
lcall
mov
mov
dec
ret
xchg
xchg
xchg
xchg
dec
nop
loopne
xchg
sub
ljmp
and
dec
and
xchg
add
les
mov
aam
and
dec
and
add
les
in
les
fwait
lcall
or
or
or
or
or
or
or
xchg
dec
sub
cmp
cmp
gs
les
xchg
gs
testl
hlt
mov
les
dec
or
int3
dec
mov
inc
cmp
incl
mov
dec
dec
mov
les
dec
ja
mov
lret
inc
daa
les
dec
sarb
inc
mov
les
ja
mov
dec
and
std
ja
mov
lret
jae
aam
cmp
mov
out
or
cmp
les
test
rorl
mov
les
mov
incl
mov
dec
and
mov
jae
sarb
cli
mov
add
jg
mov
loopne
sub
out
les
and
les
loopne
inc
push
lret
inc
jno
les
or
mov
mov
rorl
or
xchg
dec
and
xchg
xchg
sub
or
loopne
lds
loopne
inc
add
icebp
dec
and
dec
and
sub
cmp
cmp
loopne
add
cmp
sub
cmp
cmp
add
mov
hlt
mov
les
and
jl
mov
sub
icebp
mov
nop
loopne
inc
add
les
sbb
les
les
popa
dec
mov
fsubs
les
loopne
dec
lds
fdivrl
push
dec
and
add
aas
aas
cmp
dec
and
add
cmp
sub
aas
cmp
jl
les
loopne
mov
les
and
push
mov
les
les
decl
mov
call
les
les
mov
les
dec
aad
inc
mov
les
mov
les
les
mov
mov
les
scas
cmp
gs
les
les
enter
testl
je
les
les
dec
inc
loopne
les
inc
loopne
les
xor
add
aam
cmc
xchg
dec
cmp
inc
loopne
les
cmp
cmp
loopne
les
lret
inc
pop
dec
xchg
rolb
xor
add
les
loopne
xchg
dec
jo
or
les
out
les
dec
mov
dec
mov
out
mov
jl
xchg
jbe
sub
ret
dec
push
add
pushl
ss
lods
xor
mov
jge
les
loopne
aaa
popa
dec
pop
sbb
les
les
loopne
dec
aas
aaa
popa
inc
add
call
rolb
xor
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
dec
loopne
les
in
dec
mov
loopne
inc
sub
dec
mov
loopne
inc
sub
dec
add
dec
push
loopne
dec
xchg
rorb
fadd
les
add
aam
mov
mov
inc
add
les
add
in
les
int3
add
enter
lds
or
int3
aam
jb
xchg
inc
sub
dec
mov
dec
cmp
loopne
les
les
loopne
testl
loopne
sub
inc
les
loopne
les
loopne
dec
mov
sub
clc
imul
xchg
sub
stc
inc
loopne
les
cmp
cmp
loopne
les
mov
dec
xor
add
inc
or
int3
mov
dec
rorb
rorb
adc
push
cmp
int3
xor
add
ret
int3
dec
or
push
dec
dec
loopne
les
les
inc
add
les
aam
or
or
or
or
or
or
int3
xchg
sub
les
or
or
or
scas
cmp
gs
les
ret
aam
add
addr16
les
loopne
add
les
enter
out
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
add
cmp
dec
mov
inc
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
mov
enter
les
enter
or
or
scas
cmp
gs
les
les
enter
testl
je
les
les
testl
les
loopne
les
xor
add
aam
divl
dec
add
jo
add
les
ret
loopne
negb
insb
lds
out
dec
xchg
rolb
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
inc
pop
lret
inc
push
dec
and
xchg
dec
jo
or
les
fcmovnb
les
dec
mov
dec
mov
out
mov
jl
xchg
jbe
sub
ret
dec
push
add
pushl
sub
les
loopne
lods
xor
mov
jge
les
loopne
aaa
popa
dec
pop
sbb
les
les
loopne
dec
aas
aaa
popa
inc
add
call
rolb
xor
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
dec
loopne
les
in
dec
mov
loopne
inc
sub
dec
mov
loopne
inc
sub
dec
add
dec
push
loopne
dec
xchg
rorb
fadd
les
add
aam
mov
mov
inc
add
les
add
in
les
int3
add
enter
lds
or
int3
aam
jb
xchg
inc
sub
dec
mov
dec
cmp
loopne
xchg
sub
ffreep
les
loopne
testl
loopne
sub
repz
inc
loopne
les
loopne
dec
mov
sub
cld
imul
xchg
sub
std
inc
loopne
les
cmp
cmp
loopne
les
lret
inc
sbb
les
inc
add
inc
or
int3
lret
inc
add
les
dec
xchg
dec
or
adc
mov
inc
push
cmp
add
dec
ret
int3
dec
or
push
sub
dec
ret
xor
add
add
aam
xchg
jge
les
loopne
mov
xor
les
dec
push
dec
mov
rorb
mov
loopne
dec
inc
dec
mov
fld
les
inc
loopne
dec
cwtl
loopne
inc
pop
mov
dec
add
jl
les
js
add
les
xor
add
add
aam
inc
daa
les
rol
sub
inc
sub
dec
mov
dec
cmp
loopne
xchg
sub
ffree
les
sub
add
les
fmull
dec
mov
aam
or
loopne
inc
sub
dec
cmp
loopne
xchg
jg
mov
dec
and
dec
mov
mov
ffree
les
adc
int3
aam
jb
testl
aam
jb
dec
and
xchg
xchg
xchg
xchg
sub
clc
les
loopne
inc
add
xchg
dec
mov
sub
stc
les
mov
imul
in
les
loopne
dec
mov
cld
xchg
dec
or
loopne
sub
cli
les
inc
loopne
les
loopne
inc
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
das
ret
dec
xor
ret
les
inc
loopne
les
cmp
cmp
loopne
les
mov
dec
mov
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
dec
loopne
les
les
inc
add
les
aam
or
or
or
or
or
or
cmp
or
xchg
dec
xor
fisttps
ljmp
cmp
lcall
les
enter
dec
mov
mov
dec
xorb
cmp
cmp
les
cltd
push
int3
les
dec
xchg
rorb
push
dec
add
cmp
cmp
lds
loopne
lret
inc
push
les
fmull
loopne
dec
sbb
aam
add
loopne
inc
sub
dec
mov
int3
dec
cmp
les
loopne
sub
fadd
les
loopne
xchg
dec
rorl
lret
jl
mov
xchg
gs
int3
aam
jb
lret
jb
xchg
xchg
dec
and
xchg
sub
inc
les
fcoms
jecxz
les
loopne
stc
in
les
les
mov
jb
mov
loopne
dec
mov
in
xchg
dec
or
loopne
sub
stc
les
cltd
push
int3
les
xchg
dec
sub
cmp
cmp
gs
les
xchg
gs
testl
in
mov
les
dec
or
fisttps
aam
fsts
les
loopne
mov
les
and
lcall
sub
fidivrs
cmp
insb
mov
dec
dec
push
mov
push
mov
dec
nop
loopne
xchg
xchg
sub
loop
les
push
add
inc
xlat
dec
adc
sti
dec
faddl
mov
sub
cs
shrl
mov
xchg
dec
and
dec
mov
mov
dec
mov
jle
les
add
hlt
les
mov
sub
rol
sub
dec
sti
das
jg
sub
dec
sbb
loopne
inc
sub
dec
add
loopne
inc
sub
dec
mov
int3
dec
cmp
sub
rol
les
adc
int3
aam
leave
or
int3
aam
add
jl
mov
lret
jb
xchg
dec
and
xchg
xchg
sub
std
les
fcoms
insb
inc
les
and
lds
loopne
dec
lds
rorb
mov
xchg
xchg
add
xchg
clc
les
loopne
inc
add
add
cmp
inc
cmp
inc
or
int3
mov
dec
rorl
rorb
adc
mov
inc
push
cmp
add
ret
dec
xchg
int3
dec
or
push
dec
cwtl
loopne
jl
les
xor
add
les
les
dec
pop
xor
jle
fidivl
dec
fidivrs
cmp
aam
mov
in
mov
les
and
dec
sub
cmp
cmp
gs
les
xchg
gs
testl
in
addr16
les
sub
adc
les
int3
std
test
mov
inc
std
daa
mov
les
pushf
mov
loopne
sub
fadd
les
and
les
loopne
inc
xor
dec
xchg
dec
cmp
loopne
xchg
sub
rol
les
sub
add
rclb
cmp
or
les
sbb
les
les
xor
add
les
les
dec
add
jle
fidivl
cmp
xchg
cmp
pushf
fs
and
cmp
cmp
dec
mov
faddl
mov
dec
mov
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
mov
in
dec
leave
les
and
or
or
or
scas
cmp
gs
les
cmp
aam
add
loopne
xchg
gs
testl
in
mov
les
loopne
dec
mov
int3
sub
in
cmp
add
les
mov
inc
mov
leave
dec
and
xchg
sub
and
les
rorb
in
mov
les
fdiv
or
sbb
les
call
or
scas
cmp
gs
les
xchg
xchg
gs
testl
movsb
mov
les
loopne
dec
mov
mov
pop
dec
lcall
loopne
testl
aam
dec
adc
lcall
fmuls
in
lcall
loopne
testl
fsubl
mov
loopne
in
int3
aam
cwtl
loopne
sub
loop
cmp
lock
xchg
dec
xor
inc
sbb
cmp
cld
xchg
xchg
add
out
les
mov
mov
sub
mov
cmp
xchg
mov
xchg
add
dec
in
les
enter
les
mov
les
rol
add
dec
inc
mov
dec
jp
mov
mov
les
xlat
les
push
mov
and
ret
sub
xlat
les
je
les
and
int3
sub
xlat
les
and
int
cwtl
and
les
inc
add
dec
mov
loopne
into
aas
mov
xchg
xchg
sub
call
das
imull
dec
jp
mov
loopne
int
dec
mov
dec
jmp
dec
pop
les
loop
les
enter
les
sbb
les
rol
mov
testl
dec
add
pop
pushf
mov
enter
mov
loopne
enter
dec
dec
movsb
mov
lods
mov
mov
les
mov
jns
les
fmull
shrb
popf
shrb
cmp
add
inc
dec
mov
inc
mov
rol
std
mov
mov
loopne
test
clc
dec
cwtl
loopne
dec
cwtl
loopne
sub
xchg
cmp
dec
and
xchg
dec
mov
clc
add
adc
cmp
lods
mov
ret
aam
mov
clc
xchg
sub
xor
les
dec
mov
movsb
mov
les
inc
add
mov
inc
xor
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
or
or
or
or
or
or
rolb
xlat
dec
xchg
int3
inc
or
xor
add
aad
xchg
cmp
or
or
or
cmp
sub
xchg
xchg
dec
lcall
sub
sarl
cmp
lret
inc
imul
idivl
mov
mov
adc
mov
mov
int3
xchg
inc
push
rorb
loopne
dec
and
xchg
dec
mov
loopne
add
lret
les
xchg
cmp
inc
mov
mov
mov
inc
sub
dec
add
loopne
inc
sub
dec
mov
int3
dec
cmp
les
loopne
sub
aam
les
loopne
xchg
jl
add
aam
gs
int3
aam
jb
dec
and
xchg
xchg
sub
repz
les
fcoml
cmp
les
loopne
sub
cld
les
loopne
jl
les
xor
add
les
les
dec
pop
xor
jle
fidivl
cmp
xchg
cmp
pushf
fs
lahf
dec
and
or
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
add
les
loopne
les
xchg
sub
xlat
cmp
inc
add
mov
loopne
pop
aam
les
les
xor
add
les
les
dec
adc
jle
fidivl
outsb
sarb
cmp
aam
and
cmp
cmp
dec
mov
loopne
xor
dec
add
lret
add
rorb
rorb
adc
push
cmp
int3
xor
add
ret
int3
dec
or
push
dec
mov
aam
dec
leave
les
aam
int3
les
or
or
xchg
dec
sub
ret
gs
les
xchg
gs
testl
mov
les
xor
mov
idivl
dec
mov
mov
add
cmp
sar
xor
inc
mov
add
or
int3
sub
dec
and
sub
cmp
dec
dec
push
mov
std
mov
les
aam
inc
mov
adc
les
and
sub
addb
cmp
sub
and
les
inc
add
dec
cltd
enter
lcall
mov
dec
mov
dec
lds
cmp
dec
mov
and
cmp
testl
cmp
sub
repz
les
cmpl
das
aam
cmpl
jl
enter
dec
mov
dec
mov
mov
sub
dec
add
dec
xchg
rorb
rorb
dec
mov
enter
jge
les
add
sbb
cmp
dec
subl
enter
jle
les
add
mov
mov
add
lret
les
sbb
cmpl
cmp
dec
andl
sub
cmp
das
lret
dec
dec
push
mov
mov
sub
lret
inc
mov
and
les
push
lret
inc
sbb
inc
insb
mov
dec
inc
push
mov
mov
sub
and
mov
fisubl
int3
dec
mov
dec
mov
enter
jle
les
add
ret
mov
sub
cmp
cmp
mov
inc
sub
dec
sbb
enter
dec
add
int3
inc
sub
dec
mov
dec
cmp
insl
leave
les
adc
int3
aam
leave
or
int3
aam
add
jl
mov
lret
jb
xchg
dec
or
hlt
les
fcoms
jae
les
cmpl
dec
lds
rorb
mov
xchg
xchg
add
test
dec
sbbl
sub
sub
loopne
les
xor
add
les
les
dec
or
jle
fidivl
cmp
xchg
cmp
pushf
fs
cmpl
dec
mov
inc
xor
inc
or
xor
add
rorb
rorb
adc
push
cmp
int3
xor
add
ret
int3
dec
or
push
dec
mov
mov
les
and
or
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
dec
mov
xchg
add
les
aam
cmp
je
les
sub
leave
les
les
xor
add
les
les
dec
adc
jle
fidivl
cmp
aam
and
cmp
cmp
dec
mov
loopne
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
mov
aam
dec
leave
les
aam
int3
les
or
or
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
dec
mov
xchg
add
les
lret
cmp
dec
and
xchg
inc
add
les
les
les
xor
add
les
les
dec
adc
jle
fidivl
hlt
aam
cmp
aam
and
cmp
cmp
dec
mov
loopne
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
mov
aam
dec
leave
les
aam
int3
les
or
or
or
or
or
scas
cmp
gs
les
xchg
xchg
gs
testl
hlt
mov
les
testl
dec
int3
dec
mov
dec
stos
rorb
loopne
xchg
add
les
loopne
sub
lret
dec
jp
mov
je
les
dec
mov
loopne
dec
xor
dec
les
mov
pushl
sbb
lcall
lret
inc
and
les
and
les
lret
inc
push
les
sbb
testl
sub
sbb
les
enter
dec
and
dec
test
call
dec
mov
jle
les
add
cld
les
loopne
dec
and
sub
fcmovnb
les
dec
mov
cmp
mov
enter
jno
les
and
lds
and
les
mov
dec
xchg
rolb
xor
add
xchg
les
rorb
adc
mov
inc
push
cmp
add
add
or
push
inc
mov
testl
sbb
testl
sub
sbb
les
dec
mov
loopne
dec
mov
loopne
fdivrs
cmp
dec
ret
cmp
cmp
das
sbb
test
fsubrl
rorb
test
les
xor
add
les
les
dec
adc
jle
fidivl
dec
mov
inc
add
jecxz
xchg
sub
iret
cmp
dec
or
add
dec
adc
jne
dec
xor
xor
clc
fs
add
dec
add
fs
add
loopne
mov
les
inc
add
push
int3
les
or
or
scas
cmp
gs
les
cmp
aam
add
loopne
xchg
xchg
xchg
xchg
gs
testl
mov
addr16
les
dec
js
fs
les
loopne
les
loopne
add
les
leave
les
faddl
inc
loopne
dec
leave
adc
int3
aam
mov
inc
sub
jl
les
jb
dec
leave
or
int3
aam
add
loopne
xchg
lret
jb
xchg
inc
sub
dec
mov
int3
dec
cmp
aam
and
sub
int3
testl
xchg
xchg
sub
cmc
les
fcoms
and
nop
loopne
xchg
dec
mov
sub
test
std
mov
test
leave
dec
and
xchg
sub
adc
les
shl
jnp
les
loopne
dec
cwtl
loopne
dec
cwtl
loopne
std
mov
xchg
mov
dec
mov
clc
xchg
sub
adc
les
rorb
xchg
dec
cwtl
loopne
dec
cwtl
loopne
std
jo
pop
les
dec
les
les
rorb
pop
les
loopne
les
dec
std
jo
jl
les
pusha
les
inc
add
dec
mov
mov
dec
leave
les
dec
mov
cwtl
testl
les
test
cld
les
or
nop
aam
enter
xchg
sub
pop
mov
negl
add
les
xchg
dec
lcall
enter
xchg
sub
pop
mov
lcall
les
lahf
pop
or
or
or
or
or
or
or
xor
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
or
or
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
loopne
negl
dec
cwtl
loopne
dec
mov
pushl
mov
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
fwait
rorb
aam
dec
leave
les
add
push
rol
or
or
or
or
or
cmp
sub
xchg
xchg
xchg
dec
sbb
xchg
jl
les
sub
sbb
les
rorb
loopne
dec
and
xchg
sub
insl
cmp
dec
xor
mov
rol
les
loopne
dec
nop
loopne
inc
sub
dec
mov
inc
sub
dec
add
loopne
inc
sub
dec
dec
dec
mov
loopne
dec
int3
dec
cmp
les
mov
dec
and
sub
ret
dec
rcll
int3
aam
leave
or
int3
aam
add
lret
jb
lret
jb
xchg
xchg
dec
and
xchg
xchg
sub
in
les
fcoms
xchg
les
mov
pop
or
les
loopne
dec
and
dec
mov
call
test
les
and
or
or
or
mov
les
lcall
lods
add
ret
gs
les
xchg
xchg
gs
testl
clc
mov
les
loopne
negl
dec
cwtl
loopne
dec
cwtl
loopne
dec
and
dec
cwtl
loopne
dec
and
dec
cwtl
loopne
dec
cwtl
loopne
dec
and
dec
mov
in
dec
nop
loopne
xchg
add
pop
leave
les
loopne
dec
cwtl
loopne
sub
cmp
dec
mov
loopne
cmp
cmp
sub
cmp
dec
and
incl
mov
sub
sbb
testl
mov
mov
sub
sbb
les
rorb
aam
pop
mov
dec
lods
shrb
ret
dec
les
sbb
enter
lock
stos
aam
mov
clc
mov
les
inc
add
push
enter
sub
xchg
xchg
xchg
xchg
dec
mov
loopne
xchg
dec
mov
rclb
les
loopne
dec
mov
dec
add
sub
sbb
shrl
mov
cmp
inc
push
lcall
mov
sub
adc
testl
sub
adc
les
enter
movsb
dec
and
dec
aam
xchg
in
test
dec
and
sbb
mov
shlb
mov
or
dec
or
add
dec
lods
rorb
loopne
dec
stos
rorb
sar
mov
dec
mov
dec
mov
das
push
dec
das
pop
dec
das
add
cmc
das
inc
dec
and
xchg
xchg
sub
lret
je
fwait
lcall
aam
fwait
lcall
enter
or
loopne
dec
sbb
dec
mov
dec
add
cmp
shrl
mov
dec
aaa
inc
cmp
mov
shlb
mov
mov
sub
adc
testl
sub
adc
les
enter
in
dec
nop
loopne
dec
mov
inc
or
shrb
into
dec
ret
das
add
das
adc
dec
mov
testl
xchg
xchg
dec
add
leave
les
inc
fwait
lcall
or
or
or
or
scas
cmp
gs
les
ret
aam
add
addr16
les
loopne
add
les
clc
xchg
sub
or
les
rorb
xchg
sub
lret
inc
add
xchg
add
cmp
sub
lret
dec
mov
enter
les
push
rol
or
or
or
or
xchg
dec
hlt
inc
xor
loop
cmp
les
rcrb
or
or
xchg
xchg
dec
hlt
xchg
inc
xor
mov
xchg
cmp
loopne
ret
add
ret
dec
add
fstpt
cmp
les
rcrb
cmc
inc
xor
test
xchg
sub
or
les
rcrb
or
or
dec
mov
dec
rcl
movsl
int3
aam
xchg
cmp
dec
fs
or
or
or
or
or
or
or
xchg
dec
cwtl
loopne
dec
pop
dec
xchg
int3
decl
mov
dec
xchg
int3
dec
mov
lahf
push
rol
dec
testb
outsb
sub
and
rolb
mov
sub
rol
les
mov
testl
mov
lahf
push
rol
cmp
push
xchg
dec
mov
lahf
push
rol
or
or
or
or
or
enter
movl
les
shrb
or
loopne
dec
add
cmp
add
or
jl
les
or
or
or
or
or
jl
les
or
or
or
or
or
dec
and
inc
cmp
mov
jl
les
rol
cmp
mov
jl
les
rol
add
dec
or
and
rol
or
or
jl
les
or
or
or
or
or
dec
mov
inc
sub
xchg
dec
cwtl
loopne
xchg
inc
or
das
int3
dec
adc
add
mov
dec
adc
adc
adc
jmp
les
loopne
dec
mov
rclb
les
clc
les
enter
dec
mov
lcall
decl
mov
sub
adc
les
xchg
xchg
xchg
dec
nop
loopne
xchg
dec
add
enter
lahf
inc
add
push
rol
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
loopne
dec
mov
xchg
sub
lret
testl
rorb
fmull
rorb
add
mov
add
adc
rcr
ret
mov
dec
lds
aam
push
dec
mov
dec
xor
adc
xchg
xchg
sub
jmp
enter
rorb
aam
leave
cmp
cmp
dec
mov
aam
dec
leave
les
add
push
rol
or
or
or
les
sub
adc
inc
add
inc
xor
sub
ret
dec
add
add
xor
aam
lock
fwait
testl
or
or
or
or
enter
loopne
les
leave
les
rorb
popf
push
rol
or
xchg
dec
xchg
xchg
dec
mov
add
les
cmp
dec
iret
lcall
rol
or
or
or
or
or
xchg
dec
mov
cmp
fwait
pop
or
or
or
ret
gs
les
aam
add
addr16
les
loopne
scas
shrb
rolb
rorb
testl
les
lret
les
rolb
sbb
les
dec
mov
int3
mov
les
push
rol
or
or
or
or
xchg
dec
sub
cmp
xchg
dec
cltd
int3
xchg
xchg
dec
mov
xchg
xchg
dec
xor
les
dec
xor
psrlq
les
rorb
fwait
dec
cmc
lcall
les
or
or
or
or
or
ret
gs
les
ret
aam
add
addr16
les
dec
mov
int3
scas
shrb
mov
add
rorb
testl
les
lret
dec
adc
sbb
les
dec
mov
enter
les
pop
or
or
or
or
scas
cmp
gs
les
ret
aam
add
addr16
les
dec
mov
int3
xchg
add
les
jnp
les
rclb
dec
lret
adc
les
push
mov
mov
enter
les
pop
or
or
or
or
or
or
or
scas
cmp
gs
les
xchg
xchg
gs
testl
in
mov
les
loopne
dec
cwtl
loopne
dec
lods
rorb
mov
fmull
loopne
inc
sub
jl
les
add
hlt
les
rorb
dec
cld
dec
and
dec
mov
clc
inc
xor
clc
mov
sub
adc
mov
inc
xor
mov
shlb
mov
std
mov
mov
xchg
xchg
dec
nop
loopne
xchg
xchg
sub
enter
hlt
dec
mov
ret
inc
xor
mov
shlb
mov
dec
ret
add
cmp
inc
sub
inc
or
int3
mov
dec
xchg
les
rorb
adc
mov
inc
push
cmp
add
add
or
push
dec
mov
in
mov
les
inc
add
push
int3
les
or
or
or
add
les
rorb
inc
push
mov
sub
pop
cmp
inc
add
ret
add
les
rol
rorb
ret
pop
or
or
fcoml
les
js
les
loopne
dec
and
xchg
dec
ret
dec
mov
rorb
int3
xchg
inc
add
sub
jns
cmp
loopne
xor
fists
xor
add
aam
into
dec
and
xchg
sub
cmp
lcall
or
or
rclb
cmp
or
or
or
dec
mov
cmp
sub
decl
ret
les
test
les
mov
dec
xchg
rolb
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
es
or
or
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
loopne
add
les
dec
ret
dec
add
add
les
mov
inc
add
dec
adc
dec
or
or
and
lds
lcall
mov
out
mov
jl
xchg
jbe
sub
ret
dec
push
add
lcall
sub
cmp
cmp
or
les
dec
mov
aam
dec
leave
les
aam
rol
or
or
or
or
or
cmp
sub
xchg
xchg
dec
cmp
and
xchg
sub
adc
les
rorb
rclb
xchg
sub
pop
cmp
inc
add
dec
xor
test
add
pop
or
or
or
ret
gs
les
cmp
aam
add
loopne
xchg
gs
testl
aam
addr16
testl
or
adc
adc
pop
dec
sbb
cmp
in
sbb
add
les
rclb
dec
popf
shrb
dec
mov
dec
cwtl
loopne
xchg
add
les
rclb
fsubr
cmp
add
rol
dec
lcall
les
or
les
aam
lcall
fmuls
dec
mov
aam
dec
leave
les
shl
sub
add
les
rolb
or
or
or
or
or
or
cmp
or
or
or
shrb
cmp
fwait
pop
or
or
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
or
or
or
or
or
or
xchg
sub
add
les
or
or
adc
cmp
and
lds
add
les
rorb
push
rol
or
mov
dec
test
das
testl
int3
inc
or
enter
add
aam
xchg
enter
dec
adc
sbb
inc
cmp
dec
push
fadd
les
inc
ds
mov
dec
adc
push
inc
es
add
vunpcklps
notl
dec
push
rol
les
dec
dec
fadd
movl
xchg
sub
add
les
aam
add
or
or
or
ret
gs
les
aam
add
addr16
les
loopne
dec
add
add
les
lret
dec
mov
xchg
add
les
lret
add
les
addb
dec
mov
int3
mov
les
push
rol
or
or
or
or
int3
xchg
dec
cwtl
loopne
dec
popl
lret
inc
and
les
loopne
dec
notl
xor
fmull
loopne
add
dec
clc
ret
ret
xchg
inc
cmp
shrl
loopne
mov
dec
and
dec
xchg
fmull
rorb
dec
int3
fwait
lcall
enter
clc
dec
mov
int3
dec
mov
enter
aam
or
testl
sub
les
das
dec
les
mov
mov
sub
ljmp
mov
inc
cmp
mov
shlb
mov
and
call
mov
inc
cmp
mov
shlb
mov
ja
lds
pop
dec
ret
das
or
dec
and
dec
cld
dec
lods
rcrb
int3
push
enter
fmull
loopne
dec
xchg
rcrb
dec
aam
inc
add
push
enter
or
or
or
or
or
rclb
in
dec
xor
ret
lds
loop
add
pusha
loopne
dec
inc
mov
int3
aam
inc
imul
cmp
mov
gs
int3
aam
daa
int3
les
loopne
dec
notl
xor
add
dec
fdivr
dec
mov
rorb
dec
add
mov
rorb
loopne
inc
pop
mov
lcall
shrl
mov
std
and
mov
dec
sbb
mov
xchg
xchg
dec
mov
lock
dec
nop
loopne
xchg
dec
add
into
les
dec
mov
dec
nop
std
int3
dec
test
dec
cmp
dec
mov
dec
nop
std
int3
dec
sar
aam
mov
dec
mov
cmp
dec
mov
dec
cmp
dec
nop
cli
int3
dec
add
or
lcall
int3
les
inc
mov
int3
aam
xchg
cmp
cmp
clc
dec
mov
int3
dec
nop
cld
enter
fmull
loopne
inc
or
les
add
mov
fdivr
mov
mov
sub
or
loopne
dec
dec
and
inc
pop
mov
lcall
sub
or
loopne
std
and
mov
inc
pop
mov
sub
or
dec
mov
sar
mov
mov
sub
or
loopne
dec
xchg
int3
dec
mov
call
inc
pop
mov
sub
or
dec
nop
loopne
call
or
loopne
dec
int3
dec
mov
shrb
pop
dec
lds
dec
das
ja
das
adc
rorb
add
fwait
lcall
int3
les
loopne
xchg
dec
and
xchg
xchg
dec
mov
loopne
dec
add
int
les
dec
mov
dec
nop
std
int3
dec
test
dec
cmp
cmp
dec
mov
dec
mov
int3
dec
nop
cli
enter
mov
dec
xchg
rolb
int3
lds
cltd
lahf
inc
add
push
int3
les
or
or
or
or
or
xchg
xchg
xchg
xchg
dec
xor
and
xchg
inc
add
leave
sub
or
les
loopne
inc
add
rorb
testl
mov
mov
sub
or
les
loopne
dec
xchg
notl
xor
dec
and
add
sbb
mov
inc
mov
sub
or
les
loopne
incl
fmull
clc
lret
push
pop
dec
test
int3
inc
add
sar
les
mov
call
inc
pop
mov
inc
add
loopne
xchg
rorb
dec
mov
dec
nop
cld
int3
dec
mov
enter
dec
mov
int3
movl
enter
das
scas
dec
lcall
inc
add
iret
sub
or
les
inc
add
rorb
testl
shlb
mov
dec
xchg
das
repnz
add
testb
inc
mov
mov
sub
add
les
rorb
dec
add
sti
inc
cmp
idivl
incl
add
mov
dec
mov
fcoml
les
lret
cltd
lahf
popf
push
int3
les
or
or
or
or
or
or
scas
cmp
gs
les
ret
aam
add
addr16
les
loopne
xchg
add
les
lret
les
rclb
dec
lret
rclb
les
add
les
rorb
enter
les
push
rol
or
or
or
or
or
inc
sub
xchg
xchg
xchg
dec
xor
adc
dec
mov
or
add
mov
negl
das
loope
cmp
shrl
mov
dec
ret
mov
decl
shrl
mov
out
sbb
loopne
dec
and
dec
mov
loopne
xchg
xchg
dec
or
int
les
enter
mov
sub
add
les
dec
sub
loopne
inc
xor
mov
sbb
mov
xor
ret
das
sub
xor
mov
push
add
les
loopne
dec
mov
in
cltd
lahf
inc
add
push
aam
or
or
xchg
xchg
add
les
mov
dec
and
std
or
sar
aam
int
lahf
add
les
loopne
dec
mov
in
lret
dec
iret
dec
xchg
std
mov
mov
pushl
stc
add
les
loopne
dec
dec
lret
inc
add
sar
mov
sub
add
les
sar
mov
dec
mov
dec
add
dec
call
xor
dec
hlt
dec
lock
dec
mov
dec
mov
rolb
incl
aam
cltd
dec
pop
lahf
push
rol
or
or
or
or
or
or
or
or
enter
int
sub
jp
les
rolb
enter
les
adc
les
adc
les
or
or
or
or
or
scas
cmp
gs
les
xchg
xchg
gs
testl
mov
les
loopne
negl
dec
mov
hlt
dec
cwtl
loopne
sub
int3
les
dec
mov
fmull
loopne
sub
rol
les
dec
xor
and
lds
aam
les
int3
std
mov
call
loopne
xchg
sub
jp
les
rolb
loopne
lret
les
loopne
dec
cwtl
loopne
std
mov
mov
lock
sub
jns
les
rorb
mov
mov
les
inc
add
or
or
or
or
or
scas
cmp
gs
les
testl
shlb
dec
and
dec
mov
dec
adc
lret
adc
clc
les
inc
cmp
dec
push
rol
les
les
xor
aam
test
lock
loopne
mov
les
rol
or
or
or
or
or
ret
gs
les
xchg
gs
testl
fsubl
les
loopne
dec
and
dec
mov
mov
shl
pop
xchg
add
int3
aam
cwtl
loopne
sub
sarb
dec
mov
fisttpl
rorb
in
cwtl
loopne
dec
nop
loopne
xchg
sub
les
dec
mov
fsubl
les
add
push
int3
les
or
or
or
or
or
or
or
inc
sub
dec
and
xchg
dec
cwtl
loopne
xchg
dec
test
fcoml
xchg
dec
and
inc
add
leave
sub
pop
mov
inc
add
rorb
testl
mov
mov
sub
pop
mov
dec
dec
and
pushl
mov
dec
rorb
dec
ret
rorb
dec
mov
out
dec
xchg
rolb
xor
add
rorl
rorb
adc
mov
inc
push
cmp
add
ret
dec
xchg
int3
dec
or
push
xchg
sub
js
les
sarb
fmull
loopne
dec
iret
fwait
dec
add
dec
add
push
aam
or
or
or
or
or
or
or
mov
add
dec
les
rolb
dec
lds
or
or
or
xchg
sub
jne
les
rclb
inc
add
add
les
or
or
or
xchg
dec
sub
cmp
jae
enter
xchg
jle
les
mov
adc
inc
ds
mov
scas
lds
idivb
cmp
into
scas
lds
cmp
mov
adc
test
les
mov
adc
inc
ds
mov
scas
lds
idivl
cmp
into
scas
lds
cmp
mov
ret
les
lret
jae
jle
rol
dec
or
adc
inc
ds
leave
scas
les
sub
idivb
cmp
jecxz
les
scas
lds
sub
idivb
cmp
loopne
sub
sub
cmp
dec
mov
dec
xchg
int3
scas
les
sub
out
cmp
rorb
loopne
dec
nop
loopne
xchg
dec
and
dec
and
dec
nop
loopne
xchg
dec
or
loopne
sub
idivl
cmp
dec
and
or
or
dec
ret
inc
add
sar
mov
sub
add
shl
incl
dec
add
inc
sub
xchg
xchg
xchg
dec
cmp
mov
mov
testl
push
add
stos
fmull
rorb
aam
cwtl
loopne
xor
sbb
mov
add
inc
add
out
dec
xchg
cmp
mov
dec
pusha
loopne
idivl
dec
mov
mov
inc
add
mov
idivl
dec
cmp
sub
jle
notl
inc
add
dec
mov
mov
testl
test
enter
dec
mov
dec
cld
dec
mov
rolb
call
mov
dec
xchg
rorb
nop
loopne
dec
mov
mov
mov
sub
add
lcall
inc
inc
cmp
inc
inc
les
add
pushf
shlb
mov
push
xor
add
dec
test
int3
dec
add
incl
sub
add
les
loopne
std
mov
mov
dec
and
dec
sub
cwtl
loopne
inc
add
sti
sub
add
testl
sub
add
les
clc
dec
fisttps
loopne
dec
test
int3
dec
nop
ret
enter
dec
mov
int3
movl
enter
sub
dec
ret
sub
dec
les
add
clc
dec
test
int3
dec
add
sub
add
les
les
mov
dec
les
testl
shlb
mov
mov
dec
dec
add
dec
and
decl
int
enter
dec
and
std
cltd
shlb
sub
jnp
testl
sub
jnp
les
sub
dec
les
das
dec
sub
cwtl
loopne
inc
add
xchg
sub
jnp
testl
sub
jnp
les
loopne
dec
cmp
nop
ret
enter
int3
dec
fists
add
sub
int3
les
clc
inc
mov
mov
sub
jnp
les
rorb
dec
add
sti
inc
cmp
ret
das
push
cmp
adc
inc
scas
cmp
cmp
jnp
les
fwait
cltd
lahf
inc
add
pop
or
or
or
loopne
xchg
xchg
dec
cmp
mov
dec
and
dec
mov
in
mov
fcoml
xchg
dec
or
ret
les
fwait
lcall
dec
and
xchg
lock
fimuls
in
add
popf
sub
jnp
testl
sub
jnp
les
les
int3
dec
mov
dec
lds
dec
nop
loopne
xchg
dec
and
xchg
xchg
xchg
inc
add
xchg
dec
add
ret
les
loopne
inc
add
int
sbb
and
dec
mov
loopne
rorb
loopne
add
int3
dec
aam
ret
das
outsb
notl
decl
jbe
mov
dec
and
dec
nop
loopne
fwait
lcall
dec
push
lahf
popf
push
aam
or
or
or
or
inc
sub
dec
and
xchg
idivl
dec
mov
loopne
dec
mov
mov
sub
jp
les
loopne
incl
mov
dec
les
testl
mov
mov
sub
jp
les
loopne
dec
mov
enter
cmp
dec
mov
lock
les
in
dec
mov
in
xchg
xchg
dec
add
sub
ret
fwait
inc
add
push
int3
les
or
or
or
or
or
or
or
ret
gs
les
aam
add
addr16
les
loopne
scas
shrb
rolb
rorb
testl
les
ret
les
rolb
sbb
les
dec
mov
int3
mov
les
push
rol
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
ret
mov
enter
loopne
les
and
les
and
les
in
cmp
dec
and
xchg
scas
lds
loopne
xchg
add
les
jl
cmp
nop
loopne
xchg
add
ret
or
mov
or
or
xchg
testl
lret
les
shrb
or
loopne
dec
add
sub
cmp
dec
add
or
or
or
or
lods
aam
ret
gs
les
xchg
gs
testl
mov
les
xor
xor
push
mov
testl
cmp
dec
or
mov
push
add
cmp
fucomi
adc
lds
decl
inc
aaa
les
adc
cmp
out
ds
cmp
sub
les
sub
rol
dec
mov
or
rorl
dec
or
mov
mov
add
les
int3
add
and
xchg
dec
xchg
int3
dec
sarb
jge
les
and
mov
les
enter
add
int3
dec
xchg
int3
xchg
xchg
dec
xchg
aam
dec
pop
sub
xchg
les
aam
add
add
int3
xchg
dec
mov
xchg
dec
mov
dec
cmpb
xchg
sub
xchg
les
enter
out
cmp
cmp
inc
add
addl
int
sub
jo
les
rorb
dec
rclb
enter
rorb
aam
lcall
leave
les
and
xchg
and
sub
jo
les
shrb
or
les
aam
add
push
add
lds
int3
dec
int3
dec
mov
mov
dec
test
dec
mov
xchg
xchg
dec
andl
add
les
aam
adc
xchg
aam
les
add
int3
xchg
dec
xchg
int3
xchg
xchg
dec
xchg
sbb
out
les
aam
add
inc
adc
dec
mov
dec
xchg
cmp
jecxz
xchg
rclb
cmp
dec
pop
sub
rol
les
aam
mov
dec
adc
sub
rol
les
aam
xchg
int3
xchg
dec
mov
sub
rol
les
rorb
mov
les
and
or
or
or
or
inc
sub
inc
or
dec
rorb
les
les
rolb
pop
inc
or
notl
xor
and
shl
dec
mov
int3
add
les
ja
les
mov
int3
xchg
add
ret
cmc
or
les
or
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
fdivrl
cmp
fucomi
adc
lds
fsubrl
ret
mov
enter
loopne
les
and
les
and
les
and
xchg
dec
mov
loopne
and
les
sbb
cmp
mov
loopne
add
ret
data16
les
loopne
mov
les
or
or
or
or
scas
cmp
gs
les
xchg
xchg
gs
testl
in
addr16
les
loopne
dec
and
dec
mov
mov
fdiv
pop
xchg
add
int3
aam
cwtl
loopne
sub
cmp
int3
dec
add
inc
les
enter
xchg
add
les
mov
mov
testl
shll
fwait
rorb
in
dec
mov
inc
add
add
cmp
cmp
dec
lcall
dec
or
dec
and
cmp
hlt
fs
mov
dec
mov
dec
lcall
mov
dec
mov
dec
nop
loopne
xchg
dec
mov
cmp
lock
add
loopne
mov
les
inc
add
push
int3
les
or
or
or
ret
gs
les
ret
aam
add
addr16
les
loopne
add
les
dec
or
mov
cmp
add
cmp
dec
mov
inc
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
mov
enter
les
enter
or
or
or
or
dec
ret
mov
sub
jl
les
inc
add
rorb
testl
shlb
mov
dec
add
add
or
dec
xchg
rclb
dec
test
rclb
xchg
xchg
xchg
sub
mov
dec
cmovg
mov
repz
add
hlt
dec
and
inc
add
int
aaa
jae
les
loopne
dec
mov
loopne
rorb
loopne
add
rorb
testl
sub
jae
les
loopne
add
les
rolb
shrl
fwait
lcall
lahf
popf
push
aam
or
or
or
or
or
or
enter
xchg
xchg
dec
cld
dec
les
rorb
shl
dec
cltd
fdivr
mov
dec
mov
dec
ret
dec
and
pushl
mov
dec
les
enter
aam
test
dec
or
pop
mov
dec
fwait
aam
popf
shrb
cmp
cmp
enter
sbb
les
loopne
inc
add
mov
lcall
or
or
enter
dec
and
dec
lret
mov
sar
mov
sub
jae
les
loopne
dec
mov
loopne
or
cmp
sub
jb
les
loopne
testl
mov
dec
sti
dec
mov
fdivr
sub
sar
mov
sub
jb
les
loopne
dec
mov
fmull
loopne
std
nop
loopne
mov
inc
or
mov
sub
jb
les
loopne
dec
mov
fdivr
mov
dec
nop
loopne
xchg
xchg
xchg
xchg
dec
and
xchg
xchg
dec
or
les
rol
dec
int3
das
dec
or
or
or
or
or
or
or
or
mov
add
dec
les
rolb
dec
lds
or
or
or
dec
ret
inc
add
sar
mov
sub
jb
les
shl
incl
dec
add
xchg
decl
mov
sub
les
mov
dec
and
dec
mov
dec
nop
loopne
dec
aad
and
dec
mov
dec
nop
loopne
dec
aad
and
dec
mov
dec
nop
loopne
dec
aad
and
dec
nop
loopne
dec
xchg
rorb
dec
xchg
rorb
rorb
rorb
fmuls
rorb
rorb
rcrb
scas
shrb
jo
notl
inc
add
incl
mov
dec
mov
rorb
mov
xchg
decl
mov
dec
mov
enter
mov
decl
mov
dec
mov
aam
repnz
cmc
dec
xchg
rorb
lcall
scas
cmp
gs
les
cmp
aam
add
addr16
les
fdivrl
xchg
xchg
shr
adc
lds
fsubrl
ret
mov
enter
loopne
les
and
les
and
les
and
xchg
dec
mov
loopne
and
les
adc
cmp
mov
loopne
add
ret
jbe
mov
dec
mov
mov
les
or
or
or
or
scas
cmp
gs
les
gs
testl
nop
mov
les
loopne
dec
mov
enter
les
dec
mov
call
les
fadd
les
add
or
or
or
or
or
or
or
jl
les
inc
mov
aam
fxch
roll
aam
movsb
dec
ret
rorl
lods
sub
aam
pop
jno
les
rorb
sarb
aam
add
lret
push
rol
or
scas
rolb
add
les
or
les
jbe
les
rolb
in
les
aam
mov
rorb
dec
nop
loopne
scas
les
pop
xor
cmp
push
int3
testl
cmp
dec
add
int3
les
or
or
inc
sub
xchg
xchg
dec
test
loopne
sbb
fcoml
dec
mov
aam
mov
dec
add
decl
shrl
mov
jno
les
loopne
inc
add
xchg
sub
ja
testl
sub
ja
les
loopne
dec
mov
inc
add
cli
sub
ja
testl
sub
ja
les
dec
fcomip
add
push
mov
dec
mov
std
cmc
mov
test
sar
mov
inc
ds
rol
mov
dec
mov
sarb
das
inc
dec
les
imul
inc
mov
aam
mov
inc
leave
inc
mov
aam
lods
movsb
dec
ret
rorl
lods
sub
aam
mov
mov
rol
les
loopne
xchg
dec
and
dec
and
xchg
xchg
jge
mov
aam
dec
mov
call
cmp
lcall
int3
les
or
or
or
or
or
or
inc
sub
dec
and
dec
mov
dec
aad
dec
pushf
rclb
rorb
loopne
imull
das
int
dec
cwtl
loopne
dec
and
dec
mov
dec
test
lcall
mov
lcall
shrl
mov
cmp
inc
rol
les
loopne
incl
lret
inc
jl
les
jbe
testl
mov
mov
sub
jbe
les
dec
and
lcall
lret
inc
pop
les
jbe
testl
sub
jbe
les
loopne
dec
or
xchg
sub
outsb
mov
dec
pusha
loopne
lcall
mov
sub
jbe
testl
sub
jbe
les
enter
stos
dec
xchg
call
add
inc
add
cmpsb
lcall
mov
sub
jbe
testl
sub
jbe
les
enter
aam
test
dec
or
add
dec
lods
rorb
loopne
dec
stos
rorb
sar
mov
dec
mov
dec
mov
das
push
dec
les
dec
sub
dec
das
dec
dec
das
ja
mov
dec
cmc
sub
lcall
mov
sub
jne
testl
sub
jne
std
stos
enter
cmp
cmp
loopne
xchg
xchg
sub
sub
cmp
dec
das
sbb
inc
add
push
enter
or
or
or
or
enter
aam
xchg
dec
mov
aam
and
les
out
les
enter
sub
ss
les
loopne
inc
add
call
mov
dec
and
dec
lret
dec
mov
int3
dec
ret
dec
mov
dec
nop
loopne
dec
xchg
rorb
enter
out
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
lcall
or
or
or
or
or
or
or
scas
aam
add
les
or
les
imul
inc
add
inc
add
fiadds
les
ret
mov
shrb
sub
aaa
cmp
dec
add
rol
add
xchg
sub
aaa
cmp
dec
add
rol
or
or
or
or
or
or
ret
gs
les
gs
testl
call
les
loopne
negl
scas
cmp
fmuls
loopne
add
les
loopne
dec
cwtl
loopne
sub
lret
cmp
dec
add
loopne
dec
lods
lds
test
cmpxchg
dec
mov
fsubrl
fistpll
cmp
fmul
les
rclb
sub
lret
cmp
inc
mov
leave
dec
mov
rclb
les
rorb
mov
call
les
call
or
or
scas
cmp
gs
les
gs
testl
fsubs
les
loopne
add
les
int3
jp
les
loopne
dec
mov
mov
dec
mov
dec
nop
loopne
dec
xchg
rorb
mov
mov
inc
add
dec
or
add
clc
dec
and
xchg
xchg
dec
mov
in
mov
les
loopne
dec
nop
loopne
dec
lret
dec
xchg
rorb
mov
dec
test
dec
or
add
int
add
dec
adc
add
enter
rolb
mov
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
add
mov
addb
out
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
add
loopne
mov
les
fadds
or
or
or
scas
cmp
gs
les
gs
testl
lock
les
loopne
add
les
and
les
loopne
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
movsb
dec
xchg
int3
dec
nop
loopne
dec
xchg
enter
mov
inc
add
enter
jle
les
add
dec
int
xchg
dec
mov
call
les
dec
rorl
rorb
dec
xchg
int3
dec
xchg
int3
dec
mov
dec
mov
dec
xchg
aam
xchg
aam
test
dec
adc
add
enter
jge
les
add
rclb
les
pop
cmp
add
mov
nop
inc
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
add
loopne
mov
les
lock
rol
or
or
or
or
or
or
or
scas
cmp
gs
les
ret
aam
add
addr16
les
and
les
loopne
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
test
int3
dec
nop
loopne
dec
xchg
enter
mov
aam
nop
loopne
dec
xchg
rorb
loopne
dec
mov
mov
inc
add
jle
les
add
lock
mov
xchg
sub
aad
les
loopne
xchg
add
cmp
sub
push
cmp
dec
mov
enter
les
push
fadd
or
or
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
testl
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
mov
int3
dec
nop
loopne
dec
xchg
enter
xchg
dec
xchg
aam
nop
loopne
dec
xchg
rorb
loopne
dec
mov
in
mov
mov
inc
add
jge
les
add
in
and
dec
mov
cld
xchg
xchg
xchg
sub
aad
les
loopne
nop
loopne
xchg
add
cmp
sub
push
cmp
dec
mov
aam
dec
leave
les
or
or
scas
cmp
gs
les
xchg
gs
testl
in
addr16
les
loopne
add
les
int3
jp
les
loopne
dec
mov
mov
dec
mov
dec
nop
loopne
dec
xchg
rorb
mov
mov
inc
add
dec
or
add
clc
xchg
dec
mov
into
les
loopne
dec
nop
loopne
dec
mov
dec
xchg
rorb
mov
dec
test
dec
or
inc
add
dec
adc
add
rorb
loopne
inc
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
add
mov
addb
out
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
add
loopne
mov
les
add
pop
or
or
or
or
scas
cmp
gs
les
enter
testl
aam
addr16
les
and
les
loopne
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
test
int3
dec
nop
loopne
dec
xchg
enter
mov
aam
nop
loopne
dec
xchg
rorb
loopne
dec
mov
mov
inc
add
jle
les
add
mov
aam
les
loopne
xchg
add
cmp
sub
adc
cmp
loopne
mov
les
push
fadd
or
or
or
or
or
or
or
inc
sub
xchg
dec
xor
dec
mov
aam
mov
enter
les
xchg
xchg
sub
das
les
loopne
inc
add
decl
mov
dec
and
dec
rorl
loopne
dec
ret
dec
mov
dec
and
dec
add
mov
enter
out
dec
mov
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
inc
add
pop
or
or
or
or
dec
ret
mov
sub
outsb
mov
mov
dec
les
testl
shlb
mov
add
pop
or
or
or
ret
gs
les
gs
testl
fsubl
les
loopne
add
les
int3
jp
les
loopne
dec
mov
clc
dec
add
loopne
dec
int3
dec
nop
loopne
dec
xchg
rorb
test
mov
inc
add
dec
or
add
mov
loopne
xchg
xchg
dec
mov
in
call
mov
call
dec
lret
dec
xchg
rorb
mov
dec
test
dec
or
add
int
add
dec
adc
add
enter
rolb
mov
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
add
mov
cld
inc
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
add
loopne
mov
les
faddl
or
or
or
scas
cmp
gs
les
gs
testl
call
les
loopne
add
les
and
les
loopne
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
pushf
dec
xchg
int3
dec
nop
loopne
dec
xchg
enter
cwtl
dec
mov
mov
inc
add
jle
les
add
dec
int
xchg
dec
mov
call
les
dec
rorl
rorb
dec
xchg
int3
dec
xchg
int3
dec
mov
dec
mov
dec
xchg
aam
xchg
aam
test
dec
adc
add
enter
jge
les
add
rclb
les
or
cmp
and
les
loopne
inc
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
add
loopne
mov
les
call
or
or
or
or
or
or
or
ret
gs
les
aam
add
addr16
les
and
les
loopne
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
clc
dec
xchg
int3
dec
nop
loopne
dec
xchg
enter
orb
dec
nop
loopne
dec
xchg
rorb
loopne
dec
mov
mov
inc
add
jle
les
add
hlt
xchg
dec
lds
rclb
les
loopne
xchg
add
cmp
sub
or
cmp
loopne
mov
les
fadd
or
or
or
or
or
or
xchg
dec
sub
ret
gs
les
enter
testl
mov
les
xor
xor
les
cmpl
sub
pusha
mov
add
fnstsw
les
rorb
dec
mov
add
insb
ss
mov
das
testl
leave
les
and
xchg
int3
xchg
sub
pop
mov
les
mov
loopne
xchg
dec
cwtl
loopne
xchg
dec
mov
sar
adc
lahf
pop
xchg
testb
dec
push
aaa
outsb
xchg
inc
ds
ret
sub
je
les
shrl
rolb
mov
sub
sub
cmp
mov
fwait
lcall
inc
cmp
mov
sub
mov
lahf
pop
sub
mov
lahf
pop
or
or
or
or
or
or
or
xchg
dec
mov
enter
les
loopne
dec
and
xchg
xchg
dec
nop
loopne
sub
sti
les
aam
int3
les
or
or
or
or
or
or
or
loopne
incl
mov
xchg
dec
pusha
loopne
les
dec
hlt
dec
mov
dec
mov
inc
add
incl
mov
lcall
or
or
or
or
dec
add
mov
add
dec
cmp
push
out
add
xor
dec
pop
les
cmp
sub
dec
mov
sar
mov
fwait
pop
or
or
or
or
or
dec
and
xchg
xchg
dec
xor
les
and
arpl
aam
ret
ret
or
ss
and
ss
add
or
ret
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
in
sub
pop
mov
ret
and
les
mov
inc
add
das
idivl
add
aam
mov
dec
mov
inc
or
dec
xchg
enter
or
adc
mov
dec
mov
dec
xchg
aam
xchg
fadds
ret
ret
or
ss
add
loopne
mov
les
aam
rol
or
or
or
dec
and
xchg
xchg
dec
xor
les
ret
ret
add
or
or
or
dec
aad
aam
xchg
rorb
dec
xchg
int3
dec
xchg
int3
dec
xchg
enter
dec
xchg
aam
xchg
aam
xchg
rclb
push
mov
inc
push
sarb
les
add
dec
xchg
fmull
fmuls
fadds
mov
inc
push
sarb
les
add
dec
mov
lcall
or
or
xchg
dec
xor
arpl
aam
ret
ret
or
ss
or
arpl
aam
mov
inc
or
dec
xchg
aam
push
inc
add
ret
add
les
sub
pop
mov
lds
pop
mov
add
or
or
or
or
or
or
pushf
ss
or
ss
or
arpl
aam
mov
inc
or
dec
xchg
aam
push
inc
add
ret
add
les
sub
pop
mov
lds
pop
mov
add
or
scas
cmp
gs
les
ret
aam
add
addr16
les
loopne
dec
mov
rol
les
sarl
cmp
in
cmp
call
mov
enter
les
enter
or
or
or
or
or
or
xchg
dec
sub
cmp
sub
xchg
xchg
dec
or
xchg
dec
mov
inc
add
les
rorb
add
rorl
dec
and
and
dec
mov
int3
dec
nop
loopne
dec
ret
loopne
dec
mov
dec
mov
rorb
enter
fmull
int3
dec
mov
dec
adc
add
enter
jle
les
add
fmuls
fmull
loopne
dec
sbb
add
enter
jge
les
add
loopne
and
xchg
dec
xchg
in
and
les
jne
cmp
push
in
les
or
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
add
les
loopne
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
lock
mov
mov
inc
add
jge
les
add
call
xchg
xchg
sub
rol
add
cmp
dec
mov
call
dec
mov
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
add
loopne
mov
les
aam
aam
or
or
or
or
or
scas
cmp
gs
les
ret
aam
add
addr16
les
and
les
loopne
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
call
inc
add
enter
jge
les
add
loopne
dec
or
ss
les
and
cmp
cmp
dec
mov
loopne
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
add
loopne
mov
les
push
enter
and
dec
mov
int3
dec
nop
loopne
dec
ret
loopne
dec
mov
dec
mov
rorb
enter
fmull
int3
dec
mov
dec
adc
add
aam
add
jle
les
add
faddl
and
les
mov
xchg
dec
cmp
add
inc
or
int3
mov
dec
rorl
rorb
adc
mov
inc
push
cmp
add
ret
dec
xchg
int3
dec
or
push
dec
add
add
fadd
or
or
or
or
or
or
or
or
ret
ret
or
ss
or
arpl
aam
mov
inc
or
dec
xchg
aam
push
inc
add
ret
add
les
sub
or
or
or
or
or
or
xchg
dec
xor
arpl
aam
ret
ret
or
ss
or
arpl
aam
mov
inc
or
dec
xchg
aam
push
inc
add
ret
add
les
lcall
scas
cmp
gs
les
cmp
aam
add
addr16
les
scas
loopne
adc
xor
add
dec
mov
enter
and
pushl
jecxz
andl
or
cmp
dec
and
les
test
ret
or
ss
les
aam
mov
aam
dec
leave
les
aam
or
or
or
or
inc
sub
dec
test
dec
mov
shrb
cmp
lods
dec
inc
ret
aam
and
xchg
add
ret
and
mov
and
inc
ss
imul
or
or
or
or
or
aam
enter
popf
pop
or
or
or
cmp
sub
xchg
dec
mov
xchg
add
les
dec
mov
mov
loopne
sub
and
cmp
loopne
xor
add
add
aam
int3
dec
or
cmp
pop
or
or
or
or
xchg
dec
xor
lods
pop
out
int3
aam
mov
add
ret
dec
adc
push
rol
add
push
rol
or
or
or
or
or
or
or
inc
add
iret
sub
pop
mov
mov
dec
les
testl
aam
int
pop
mov
dec
add
or
inc
sub
les
les
les
les
dec
ret
scas
lds
xchg
xchg
dec
or
dec
cmp
inc
cld
les
inc
les
loopne
scas
les
in
sub
adc
les
les
enter
loopne
notl
dec
mov
les
loopne
mov
dec
nop
loopne
aaa
popa
dec
add
lcall
dec
pop
lahf
inc
add
les
enter
or
or
or
or
or
ret
gs
les
enter
testl
aam
addr16
les
and
les
loopne
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
lock
mov
mov
inc
add
jge
les
add
in
xchg
dec
or
sub
les
and
cmp
cmp
dec
mov
call
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
add
loopne
mov
les
push
aam
or
or
or
or
or
or
or
or
loopne
dec
ret
dec
and
dec
add
add
adcl
xor
add
enter
out
dec
xchg
rolb
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
add
add
int3
les
or
or
xchg
xchg
idivl
xchg
dec
or
loopne
sub
push
mov
arpl
aam
mov
dec
mov
cmp
cmp
add
pushf
ss
or
ss
add
or
or
or
rol
les
add
or
or
or
or
or
scas
cmp
gs
les
aam
add
addr16
les
and
les
loopne
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
test
int3
dec
nop
loopne
dec
xchg
enter
mov
aam
nop
loopne
dec
xchg
rorb
loopne
dec
mov
mov
inc
add
jge
les
add
lock
and
xchg
inc
add
xchg
sub
leave
les
loopne
xchg
add
cmp
sub
add
loopne
mov
les
in
or
or
or
or
or
or
ret
gs
les
enter
testl
test
addr16
les
mov
scas
les
and
les
dec
mov
les
loopne
dec
and
xchg
inc
sub
dec
add
dec
push
loopne
les
rorb
jo
les
int3
dec
push
loopne
les
enter
js
les
aam
push
loopne
les
rorb
loopne
les
loopne
inc
add
enter
jge
les
add
insb
les
loopne
les
loopne
les
loopne
sub
rol
dec
or
inc
loopne
lds
rol
dec
adc
les
mov
dec
inc
loopne
les
cmp
cmp
add
cmp
loopne
mov
les
pop
or
or
or
or
or
or
xchg
dec
sub
ret
gs
les
xchg
gs
testl
mov
les
xor
xor
les
cmpl
sub
pop
mov
add
fnstsw
les
rorb
dec
mov
add
js
ret
mov
das
testl
leave
les
and
mov
sub
leave
les
mov
or
or
ret
gs
les
cmp
aam
add
addr16
les
and
les
loopne
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
test
int3
dec
nop
loopne
dec
xchg
enter
mov
aam
nop
loopne
dec
xchg
rorb
loopne
dec
mov
mov
inc
add
jge
les
add
lock
push
rclb
les
loopne
xchg
add
cmp
sub
jp
cmp
loopne
mov
les
fadd
or
or
or
or
or
or
or
xchg
dec
sub
ret
gs
les
enter
testl
mov
les
xor
xor
les
cmpl
sub
push
mov
add
fnstsw
les
rorb
dec
mov
add
adc
ret
mov
das
testl
leave
les
and
mov
sub
cmp
les
clc
outsl
mov
or
scas
cmp
gs
les
aam
add
addr16
les
and
les
loopne
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
orb
dec
nop
loopne
dec
xchg
enter
mov
aam
nop
loopne
dec
xchg
rorb
loopne
dec
mov
mov
inc
add
jge
les
add
cld
dec
mov
lock
dec
nop
loopne
inc
push
shrb
leave
les
loopne
xchg
add
cmp
sub
jns
cmp
loopne
mov
les
loopne
or
or
or
or
dec
and
inc
or
pusha
loopne
les
mov
dec
testb
mov
dec
mov
lea
int3
inc
or
or
or
or
or
scas
cmp
gs
les
ret
aam
add
addr16
les
loopne
dec
cmp
cmp
out
jns
cmp
aam
add
push
mov
mov
xchg
dec
mov
dec
mov
mov
mov
enter
les
enter
or
dec
or
add
int
sub
push
mov
ret
or
les
adc
les
adc
les
dec
mov
cmp
gs
les
aam
add
addr16
les
loopne
xchg
dec
or
xor
dec
mov
aam
and
arpl
aam
and
lds
enter
ss
les
in
ss
cmp
enter
pop
jg
cmp
int3
dec
add
loopne
mov
les
push
rol
or
or
scas
cmp
gs
les
aam
add
addr16
les
loopne
add
les
dec
and
dec
mov
sub
dec
mov
loopne
nop
loopne
dec
and
add
les
cld
dec
mov
hlt
dec
xchg
clc
dec
nop
loopne
dec
addl
orb
dec
orl
add
jge
les
add
loopne
add
cmp
sub
jg
cmp
dec
mov
int3
mov
les
push
loopne
or
or
or
or
or
or
or
cmp
adc
sub
xchg
xchg
xchg
dec
sbb
les
enter
dec
mov
xchg
dec
mov
mov
dec
xor
add
les
cmp
xchg
testl
dec
mov
lock
mov
aam
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
sub
mov
dec
mov
aam
xchg
sub
rol
inc
add
mov
int3
dec
mov
in
add
loopne
inc
pop
cld
xchg
dec
int3
xchg
sub
jecxz
les
int3
dec
cvttps2pi
les
cltd
push
enter
int3
dec
aad
push
fists
inc
es
les
cmp
xchg
hlt
inc
sub
cwtl
xchg
sub
les
dec
xchg
xchg
xchg
sub
enter
lcall
les
or
or
or
or
or
xchg
dec
mov
inc
xor
pop
cmp
xchg
sub
dec
mov
pop
or
or
or
or
dec
xchg
dec
ret
dec
xchg
dec
mov
sub
dec
lock
mov
dec
xchg
cld
dec
xchg
cld
dec
xchg
dec
cmp
popl
orb
dec
xchg
mov
mov
mov
inc
pop
sarb
les
add
lahf
push
rol
or
or
or
or
or
cmp
sub
xchg
xchg
xchg
xchg
sub
mov
std
lcall
mov
lret
loopne
mov
jmp
ret
mov
incl
sub
push
mov
push
testl
fmuls
in
mov
mov
sub
push
mov
dec
ret
loopne
mov
cmp
cmp
mov
dec
mov
mov
sub
push
mov
mov
sub
push
mov
aam
shrl
mov
fmuls
rorb
dec
and
add
enter
mov
add
int3
dec
les
ret
das
adc
add
xchg
in
call
push
mov
fwait
dec
add
or
or
or
xchg
xchg
xchg
dec
cmp
xchg
sub
mov
dec
sbb
lcall
fmuls
fmuls
in
xchg
in
lcall
mov
loopne
lcall
call
fwait
aam
shrl
loopne
lret
dec
mov
sar
mov
sub
push
mov
aas
add
mov
sub
push
mov
add
rorb
notl
dec
mov
cmp
cmp
cmp
or
mov
mov
inc
add
rorb
testl
sub
push
mov
dec
add
or
or
or
or
xchg
xchg
xchg
dec
stos
aam
stos
enter
jnp
mov
fildl
mov
dec
mov
das
jne
dec
xchg
in
lret
mov
dec
adc
mov
dec
mov
dec
mov
dec
xchg
int3
dec
xchg
in
dec
stos
fcompl
and
mov
dec
xchg
aam
sbb
les
lahf
popf
pop
or
or
or
or
or
xchg
dec
cwtl
loopne
xchg
xchg
inc
pop
lret
inc
jae
les
fadd
lret
inc
xchg
les
in
pop
lret
inc
dec
les
aam
sbb
mov
call
les
loopne
lret
mov
incl
push
mov
ret
fadd
das
mov
loopne
stos
in
dec
add
mov
sub
push
mov
add
rorb
testl
aam
shrl
mov
inc
cmp
mov
shrl
mov
xchg
fmuls
rorb
inc
pop
lret
inc
lods
cmp
cmp
das
sbb
lcall
testl
cmovge
inc
mov
dec
les
in
lret
inc
inc
les
aam
mov
dec
push
mov
lret
mov
incl
push
mov
ret
fadd
das
mov
loopne
stos
in
dec
add
mov
sub
push
mov
add
rorb
testl
aam
shrl
mov
inc
cmp
mov
shrl
les
fmuls
rorb
inc
mov
mov
cmp
fwait
cltd
lahf
push
rol
sti
das
adc
or
or
or
or
or
lods
cld
ret
gs
les
xchg
gs
testl
mov
les
xor
cltd
enter
scas
shrb
mov
sar
mov
dec
hlt
das
testl
mov
add
aam
mov
cmp
cmp
cmp
mov
sub
and
les
sub
adc
cmp
enter
dec
sarb
lds
aam
subl
shrl
enter
mov
sub
push
mov
or
or
xchg
xchg
dec
xchg
sub
les
enter
dec
add
xor
les
and
mov
sub
push
cmp
scas
les
mov
or
or
dec
ret
rorb
mov
inc
add
iret
sub
dec
mov
mov
dec
les
testl
aam
shrl
mov
dec
add
or
or
or
or
or
or
or
xchg
dec
test
enter
les
inc
mov
fwait
lcall
les
mov
dec
add
testb
decl
mov
dec
mov
cmp
inc
add
fisttps
rorb
shrb
add
enter
jl
les
lcall
les
or
or
or
or
lods
test
ret
gs
les
enter
testl
mov
les
xor
xor
les
cmpl
sub
dec
mov
add
fidivrs
les
rorb
add
and
ret
test
les
testl
leave
les
and
les
mov
or
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
and
mov
and
add
les
mov
dec
mov
fcoms
cmp
dec
mov
enter
les
testl
dec
leave
les
or
or
ret
gs
les
cmp
aam
add
addr16
les
mov
mov
and
add
les
mov
dec
mov
fcoms
cmp
dec
mov
enter
les
testl
dec
leave
les
or
or
ret
gs
les
gs
testl
in
mov
les
loopne
dec
and
add
les
loopne
dec
and
xchg
jl
les
add
cmp
rorb
rolb
and
les
loopne
add
add
mov
inc
sub
dec
or
dec
nop
loopne
dec
xchg
rorb
movsb
dec
xchg
int3
dec
nop
loopne
dec
xchg
enter
lods
dec
xchg
aam
nop
loopne
dec
xchg
rorb
loopne
dec
mov
mov
inc
add
les
add
inc
sub
dec
adc
dec
mov
dec
mov
rolb
enter
jle
les
add
rclb
rol
les
testl
xor
rorb
dec
and
dec
nop
loopne
dec
mov
fmuls
loopne
mov
inc
or
das
testb
scas
lds
loopne
xchg
xchg
xchg
sub
mov
loopne
xchg
add
cmp
sub
jbe
cmp
loopne
mov
les
in
push
in
or
or
or
or
or
or
xchg
inc
xor
pop
cmp
xchg
sub
inc
mov
pop
or
or
or
or
or
scas
cmp
gs
les
gs
testl
fsubs
les
loopne
divl
dec
and
dec
mov
loopne
mov
cld
dec
and
xchg
dec
addb
add
dec
and
dec
mov
fmull
loopne
add
add
hlt
inc
sub
dec
or
dec
nop
loopne
dec
xchg
rorb
xchg
dec
xchg
int3
dec
nop
loopne
dec
xchg
enter
pushf
dec
xchg
aam
nop
loopne
dec
xchg
rorb
loopne
dec
mov
mov
inc
add
les
add
ret
ret
das
testl
xchg
add
loopne
xchg
dec
mov
dec
or
and
sub
mov
cmp
loopne
xchg
add
cmp
sub
jne
cmp
loopne
mov
les
fadds
fadd
xchg
dec
sub
ret
gs
les
enter
testl
mov
les
xor
xor
les
cmpl
sub
dec
mov
add
fnstsw
les
rorb
dec
mov
add
cmp
ret
mov
das
testl
leave
les
and
mov
inc
xor
fcmovnb
les
les
shrb
pop
mov
or
or
scas
cmp
gs
les
xchg
xchg
gs
testl
in
mov
les
dec
negl
dec
and
dec
cwtl
loopne
dec
mov
orb
fcoms
les
add
cmp
rorb
in
cwtl
loopne
dec
and
add
pop
mov
dec
nop
loopne
inc
sub
dec
or
dec
nop
loopne
dec
xchg
rorb
cwtl
dec
xchg
int3
dec
nop
loopne
dec
xchg
enter
mov
nop
loopne
dec
xchg
rorb
loopne
dec
mov
mov
inc
add
les
add
dec
lret
int3
dec
adc
dec
mov
dec
mov
sar
mov
inc
add
les
add
cwtl
xchg
sub
rol
dec
sbb
and
lds
loopne
sub
mov
dec
jmp
inc
add
xchg
cmp
dec
mov
dec
sbb
cmp
dec
aas
dec
add
adc
cmp
loopne
xchg
add
cmp
sub
imul
dec
mov
in
mov
les
inc
add
push
fadd
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
mov
and
add
les
mov
dec
mov
fcoms
les
loopne
mov
les
testl
dec
leave
les
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
mov
and
add
les
mov
dec
mov
fcoms
les
loopne
mov
les
testl
dec
leave
les
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
loopne
inc
sub
les
loopne
dec
cmp
dec
mov
dec
and
dec
mov
xor
cmp
loopne
les
lock
push
loopne
les
cld
dec
inc
loopne
les
clc
dec
dec
loopne
les
test
loopne
les
orb
add
les
mov
loopne
les
mov
loopne
les
mov
inc
add
jle
les
add
mov
xlat
xchg
dec
int3
xchg
xchg
sub
ffree
les
loopne
xchg
add
cmp
sub
xor
cmp
loopne
mov
les
add
push
pushf
les
scas
cmp
gs
les
aam
add
addr16
les
loopne
dec
mov
fdiv
or
mov
dec
or
mov
xchg
dec
adc
mov
rclb
aam
and
dec
mov
int3
mov
les
push
int3
les
ret
gs
les
aam
add
addr16
les
loopne
dec
mov
fdiv
or
mov
dec
or
mov
dec
mov
aam
mov
xchg
add
and
ret
repnz
cmp
dec
mov
int3
mov
les
push
int3
les
xchg
dec
xor
lods
nop
call
inc
mov
dec
adc
push
rol
add
push
rol
or
or
or
or
or
or
or
ret
gs
les
aam
add
addr16
les
loopne
testl
and
dec
mov
add
aam
lret
rorb
dec
mov
dec
mov
dec
mov
dec
and
and
dec
sub
add
int3
jnp
les
add
in
decb
call
xchg
hlt
dec
nop
loopne
dec
xchg
cld
dec
nop
loopne
dec
xchg
clc
dec
nop
loopne
dec
xchg
test
loopne
dec
xchg
orb
lock
xchg
mov
loopne
dec
xchg
mov
adc
sarb
les
add
in
add
inc
add
inc
push
cmp
add
lds
int3
cmp
dec
and
xchg
add
cmp
sub
outsl
cmp
dec
add
loopne
mov
les
push
loopne
or
or
or
or
or
or
dec
or
add
leave
xchg
sub
into
les
or
les
rolb
rorl
inc
add
jnp
cmp
rolb
rol
les
or
or
or
or
or
or
or
or
ret
gs
les
aam
add
addr16
idivl
dec
mov
rolb
sbb
test
dec
mov
dec
mov
dec
mov
sub
mov
les
loopne
dec
nop
loopne
dec
and
and
dec
sub
and
dec
mov
dec
mov
in
dec
xor
and
dec
xchg
hlt
dec
mov
dec
cmp
add
jle
les
add
fcoml
cmp
cmp
outsb
cmp
dec
add
loopne
mov
les
push
fadd
or
dec
or
add
aam
add
xchg
sub
outsb
cmp
add
les
rolb
rorl
inc
add
jp
cmp
rolb
rol
les
or
or
or
or
or
or
xchg
dec
mov
inc
xor
ffree
les
les
rcrb
or
or
ret
gs
les
ret
aam
add
addr16
les
loopne
negl
dec
cwtl
loopne
dec
and
dec
lcall
fimull
rorb
dec
lcall
fmuls
in
and
dec
and
pop
mov
inc
add
jge
les
add
in
xchg
add
push
mov
in
dec
nop
loopne
dec
and
dec
dec
inc
les
loopne
dec
push
dec
les
loopne
dec
inc
dec
les
loopne
dec
dec
push
les
push
les
pop
les
loopne
dec
inc
pop
incl
mov
inc
add
jge
les
add
rol
dec
pop
fs
les
mov
les
pusha
les
rorb
loopne
dec
pop
insb
incl
mov
dec
or
add
inc
push
cmp
add
lds
int3
cmp
dec
and
xchg
add
cmp
sub
insl
cmp
dec
add
loopne
mov
les
enter
or
int3
inc
add
leave
xchg
sub
iret
les
or
les
rolb
rorl
inc
add
jns
cmp
rolb
rol
les
or
or
or
or
or
or
or
or
ret
gs
les
ret
aam
add
addr16
les
dec
mov
int3
dec
adc
add
les
mov
cmp
and
lds
ret
ret
int
sub
mov
rorb
mov
enter
les
push
rol
or
or
or
or
or
or
les
aam
or
or
or
or
or
in
cmp
call
and
lds
ret
ret
int
sub
mov
rorb
push
rol
or
or
or
scas
cmp
gs
les
enter
testl
shlb
les
loopne
dec
test
loopne
int3
les
dec
cmp
popa
scas
cmp
in
xor
in
jnp
les
fmull
rclb
pop
and
dec
mov
dec
mov
in
pop
clc
xchg
dec
mov
xchg
add
and
dec
mov
shlb
les
inc
add
push
int3
les
or
or
cmp
cmp
gs
les
xchg
gs
testl
xchg
mov
les
enter
dec
mov
fmull
loopne
dec
mov
faddl
and
les
hlt
inc
add
push
add
jb
lret
jb
in
xchg
dec
xchg
loopne
xchg
dec
adc
cmp
dec
xchg
rorb
dec
mov
lock
mov
dec
nop
loopne
dec
xchg
aam
mov
inc
add
dec
and
dec
mov
hlt
dec
nop
loopne
dec
mov
cld
inc
xor
jl
les
add
dec
xchg
rorb
loopne
dec
nop
loopne
dec
cwtl
loopne
dec
and
add
dec
and
sub
rol
dec
mov
call
add
loopne
sub
jle
cmp
rorb
fdivr
mov
mov
dec
mov
xlat
sub
add
cmp
cld
dec
nop
loopne
dec
add
loopne
xchg
dec
mov
movsb
add
push
sub
in
les
loopne
sub
jecxz
les
loopne
sub
add
cmp
loopne
xchg
add
push
bound
cmp
loopne
mov
les
and
or
or
or
or
or
or
cmp
cmp
gs
les
gs
testl
mov
les
enter
fmuls
loopne
dec
sub
pop
dec
cwtl
loopne
dec
int3
dec
xchg
rorb
loopne
mov
dec
mov
call
mov
lock
mov
dec
nop
loopne
dec
xchg
enter
hlt
dec
mov
cld
decl
mov
inc
add
les
add
dec
xchg
loopne
mov
clc
dec
nop
loopne
dec
mov
loopne
and
lds
adc
cmp
loopne
xchg
dec
add
loopne
sub
jge
cmp
rorb
fdivr
cltd
int3
mov
dec
mov
xlat
sub
add
cmp
hlt
dec
mov
cwtl
dec
add
loopne
xchg
dec
mov
pushf
add
inc
sub
in
les
loopne
sub
loop
les
loopne
sub
add
cmp
loopne
xchg
dec
cwtl
loopne
sub
popa
cmp
dec
mov
mov
les
cltd
pop
or
cmp
cmp
gs
les
les
cmp
aam
add
les
les
enter
les
loopne
dec
cwtl
loopne
dec
cwtl
loopne
dec
or
loopne
incl
lret
inc
and
incl
lret
inc
sbb
mov
mov
ret
les
loopne
dec
mov
hlt
dec
add
inc
loopne
lds
ret
les
inc
loopne
dec
mov
fdivrl
std
xchg
fdivl
das
movl
mov
dec
test
das
movl
les
mov
in
dec
ja
les
in
sub
sahf
cmp
jp
les
sar
mov
mov
lock
sub
mov
les
rolb
loopne
lret
les
and
les
and
std
jo
push
les
inc
les
inc
add
dec
inc
inc
les
sub
or
cmp
loopne
les
les
and
les
xchg
dec
nop
loopne
dec
mov
loopne
dec
mov
ret
les
inc
loopne
dec
mov
mov
loopne
std
jg
lret
inc
xor
mov
mov
ret
dec
and
dec
mov
hlt
dec
add
inc
loopne
shrb
les
inc
loopne
vxorps
les
dec
dec
loopne
les
mov
inc
add
dec
xor
mov
loopne
jnp
les
int3
dec
and
add
je
loopne
les
mov
dec
xor
add
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
jp
std
mov
mov
lock
sub
mov
les
rolb
loopne
movl
les
and
les
and
std
jo
push
les
inc
les
les
shl
xchg
sub
rol
dec
nop
loopne
xchg
dec
pop
dec
mov
jb
cmp
rorb
in
std
mov
mov
shrl
add
test
add
xor
vpermil2ps
les
dec
mov
fcmovb
les
loopne
les
hlt
dec
dec
loopne
les
lock
push
loopne
les
cld
dec
inc
loopne
les
clc
dec
inc
loopne
incl
mov
inc
add
jge
les
add
dec
les
out
les
loopne
sub
add
loopne
xchg
add
jo
les
les
loopne
les
les
and
or
or
or
or
or
pop
or
or
or
or
or
ret
gs
les
ret
aam
add
addr16
les
loopne
add
les
loopne
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
xchg
add
cmp
sub
cmp
dec
mov
enter
les
enter
or
or
or
or
or
or
or
or
ret
gs
les
ret
aam
add
addr16
les
inc
add
dec
mov
int3
dec
adc
add
les
dec
cmp
add
les
loopne
mov
les
pop
or
or
or
or
or
or
scas
cmp
gs
les
aam
add
addr16
les
loopne
dec
cmp
add
les
cmp
add
cmp
dec
mov
inc
or
int3
inc
or
xor
add
aad
xchg
cmp
mov
int3
mov
les
push
rol
or
or
scas
cmp
gs
les
les
cmp
aam
add
loopne
xchg
xchg
xchg
xchg
gs
testl
push
mov
les
loopne
dec
inc
loopne
negl
dec
cwtl
loopne
dec
mov
rorb
loopne
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
add
pop
pushl
mov
dec
fisttpll
rorb
dec
add
les
dec
loopne
les
inc
loopne
lret
les
loopne
dec
pop
loopne
sub
sbb
loopne
dec
mov
decl
mov
dec
add
cmp
test
pop
mov
out
add
les
fsubrl
mov
rorb
loopne
inc
loopne
incl
mov
xchg
sub
cld
cmp
das
testl
inc
loopne
sub
leave
les
loopne
jns
les
rolb
mov
inc
cmp
lret
inc
xor
les
inc
loopne
xchg
xchg
sub
ja
notl
inc
add
inc
mov
les
les
mov
dec
pop
loopne
mov
sub
mov
loopne
jl
ljmp
les
loopne
inc
add
inc
cmpsb
dec
mov
dec
xchg
fcoml
rol
les
dec
mov
clc
inc
add
xchg
dec
push
loopne
les
xchg
dec
push
loopne
sub
mov
inc
loopne
shrb
loopne
std
push
les
adc
les
les
rolb
loopne
lret
les
loopne
les
adc
std
push
les
jl
les
les
rorb
pushl
lret
inc
xor
cmp
dec
and
dec
mov
fmuls
dec
mov
pushl
mov
dec
mov
jle
les
add
in
mov
add
std
push
les
xor
les
les
rolb
loopne
lret
les
loopne
dec
pop
loopne
les
pop
pushl
mov
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
and
dec
dec
loopne
mov
les
dec
dec
loopne
testl
les
dec
pop
dec
and
xchg
sub
mov
cmp
or
dec
mov
xchg
inc
add
add
les
loopne
dec
mov
xchg
dec
or
adc
cmp
popf
pop
or
or
or
or
or
xchg
testl
clc
add
les
loopne
dec
mov
xchg
dec
or
adc
cmp
popf
pop
or
or
or
or
or
scas
cmp
gs
les
ret
aam
add
addr16
les
loopne
add
les
insb
negl
incl
mov
xchg
cmp
sbb
aam
inc
dec
les
inc
mov
dec
subb
inc
add
add
les
mov
mov
dec
orb
les
rolb
movsb
lret
les
cwtl
dec
lcall
cmp
cmp
loopne
cmpxchg
dec
xchg
int3
inc
or
xor
add
aad
xchg
cmp
mov
enter
les
enter
or
or
or
or
or
or
or
or
loopne
xchg
dec
mov
enter
dec
cld
dec
mov
dec
mov
dec
mov
dec
mov
dec
rorb
rolb
mov
inc
add
les
add
mov
dec
mov
dec
mov
dec
into
dec
mov
dec
mov
dec
mov
inc
or
sarb
les
add
fwait
dec
xchg
in
lcall
inc
jp
aam
lret
dec
inc
fs
les
inc
add
xchg
negl
add
lret
les
je
les
les
pop
aam
lret
dec
dec
inc
les
les
rorb
les
inc
pop
lret
les
les
or
or
or
or
or
or
scas
cmp
gs
les
enter
testl
shlb
les
loopne
dec
and
dec
negl
scas
cmp
les
aaa
popa
dec
dec
inc
les
les
fmull
rclb
adc
cmp
loopne
scas
cmp
pop
les
loopne
xchg
dec
mov
dec
popf
rclb
push
adc
cmp
dec
mov
shlb
les
inc
add
push
enter
inc
sub
xchg
dec
cwtl
loopne
xchg
dec
scas
enter
sub
fmull
shr
or
shlb
sub
ret
dec
ss
dec
mov
or
shlb
sub
ret
dec
push
add
incl
mov
dec
nop
loopne
dec
and
add
mov
in
xchg
xchg
xchg
jge
les
lret
inc
add
inc
add
les
aam
lcall
int3
ljmp
mov
sub
mov
les
dec
mov
loopne
xchg
xchg
dec
nop
loopne
xchg
dec
pop
sub
les
add
push
int3
les
or
or
or
inc
sub
xchg
xchg
xchg
xchg
dec
cmp
fwait
aam
mov
dec
pxor
jl
xchg
jbe
sub
ret
dec
push
add
mov
divl
das
icebp
pushl
mov
sub
mov
les
loopne
dec
ret
inc
or
mov
sub
mov
les
loopne
out
or
shlb
sub
ret
dec
ss
dec
mov
call
dec
and
xchg
xchg
xchg
xchg
sub
les
enter
mov
sub
mov
les
dec
sub
loopne
inc
cmp
mov
jl
aaa
pushl
mov
dec
sti
das
ret
das
and
cmp
mov
mov
sub
mov
les
loopne
fwait
dec
mov
lcall
enter
or
xchg
add
loopne
dec
shl
enter
xchg
xchg
dec
or
leave
les
lods
add
movl
or
or
or
or
or
or
xchg
dec
sub
ret
gs
les
les
cmp
aam
add
sub
xorl
les
xor
or
inc
test
cmp
dec
xchg
dec
pop
mov
cmp
inc
add
shl
das
fmull
shr
or
or
sub
ret
dec
ss
dec
mov
xchg
jbe
sub
ret
dec
push
add
jge
call
inc
cmp
ljmp
lret
inc
add
les
adc
mov
adc
mov
pushl
dec
xor
or
mov
out
mov
or
sub
adc
testl
inc
lods
cmp
cmp
lods
add
movl
mov
cmp
les
mov
cmp
dec
push
mov
cmp
xchg
dec
dec
test
cmp
xchg
xchg
xchg
jge
les
mov
inc
enter
aam
inc
mov
cmp
les
mov
cmp
dec
inc
mov
cmp
xchg
dec
push
mov
cmp
xchg
dec
adc
lods
cmp
cmp
les
in
les
aam
add
add
movl
add
add
cmp
cmp
dec
push
mov
cmp
xchg
dec
push
mov
cmp
xchg
xchg
xchg
dec
mov
add
cmp
cmp
les
in
les
enter
out
or
shlb
sub
ret
dec
push
add
aam
nop
mov
push
mov
cmp
inc
cmp
cmp
cmp
aam
xchg
dec
add
xchg
enter
scas
mov
cmp
inc
add
dec
inc
mov
cmp
lods
xor
les
xor
adc
mov
dec
xchg
aam
xchg
sub
dec
pop
lods
cmp
cmp
lds
mov
jns
cmp
cmp
or
or
les
mov
lods
xor
les
xor
or
les
les
shrb
inc
mov
or
sub
adc
add
inc
cmp
lret
inc
jl
les
test
cmp
xchg
dec
push
hlt
cmp
cmp
les
cmpl
dec
aam
adc
les
add
aam
or
mov
jl
xchg
jbe
sub
ret
dec
push
add
jp
out
xor
push
hlt
cmp
cmp
cmp
cmp
cmpl
inc
xchg
jl
les
aam
xchg
rorb
hlt
cmp
cmp
cmp
xchg
xchg
sub
iret
les
hlt
cmp
cmp
dec
inc
mov
cmp
dec
xchg
rorb
aam
push
jl
les
jl
les
les
lock
mov
cmp
xchg
dec
dec
mov
sub
les
cmpl
dec
mov
mov
cmp
xchg
dec
adc
rol
dec
xchg
rorb
aam
dec
add
rol
inc
add
dec
inc
mov
dec
adc
les
les
mov
add
sub
cmp
xor
les
mov
testl
les
cltd
push
aam
or
or
or
or
or
or
or
inc
sub
inc
or
lods
or
xchg
sub
stos
mov
add
pop
inc
or
notl
xor
les
xchg
dec
mov
int3
add
les
lods
mov
aam
mov
int3
xchg
add
ret
xchg
inc
mov
or
or
or
scas
cmp
gs
les
enter
testl
shlb
les
loopne
dec
test
loopne
in
les
dec
cmp
popa
scas
cmp
inc
divl
dec
inc
inc
les
les
fmull
rclb
push
or
cmp
les
loopne
inc
pop
pop
les
mov
xchg
add
or
cmp
dec
mov
shlb
les
inc
add
push
int3
les
or
or
or
or
loopne
xchg
dec
and
xchg
sub
int
les
int3
push
rol
or
or
or
or
or
scas
cmp
gs
les
gs
testl
shlb
les
xchg
add
les
loopne
les
dec
ret
dec
mov
dec
inc
loopne
les
loopne
sub
pop
cmp
dec
dec
loopne
les
lock
push
loopne
les
cld
dec
inc
loopne
les
clc
dec
dec
loopne
les
test
loopne
les
orb
or
les
mov
loopne
les
mov
loopne
les
mov
inc
add
jle
les
add
mov
dec
nop
loopne
scas
les
sub
mov
hlt
xchg
add
cmp
sub
adc
cmp
loopne
mov
les
rolb
cwtl
les
or
or
or
loopne
xchg
dec
cmc
dec
hlt
dec
mov
dec
mov
dec
mov
dec
mov
dec
enter
inc
or
sarb
les
add
mov
dec
xchg
rorb
enter
dec
aad
xchg
fcompl
or
or
or
or
or
or
scas
cmp
gs
les
enter
testl
aam
addr16
les
and
les
loopne
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
mov
int3
dec
nop
loopne
dec
xchg
enter
mov
loopne
inc
push
mov
inc
push
sarb
les
add
xchg
dec
xchg
aam
nop
loopne
dec
xchg
rorb
loopne
dec
xchg
fmull
rorb
xchg
sub
mov
fdivrl
cmp
cmp
loopne
inc
xor
inc
or
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
mov
aam
dec
leave
les
push
in
or
or
or
or
or
or
or
inc
sub
xchg
dec
xor
dec
mov
aam
mov
enter
les
xchg
xchg
sub
imul
rolb
enter
enter
int3
dec
rorl
loopne
dec
ret
dec
mov
dec
and
dec
add
mov
enter
out
dec
mov
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
inc
add
pop
or
or
or
or
xchg
dec
mov
enter
les
loopne
dec
and
xchg
dec
mov
aam
xchg
sub
out
les
rolb
int3
les
or
or
or
or
or
or
xchg
xchg
dec
cwtl
loopne
xchg
dec
xor
add
and
dec
nop
loopne
dec
and
dec
and
dec
mov
int3
xchg
xchg
xchg
xchg
xchg
xchg
sub
fld
out
aaa
jl
xchg
jbe
sub
adc
add
dec
or
or
inc
add
dec
add
pop
or
or
or
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
loopne
negl
dec
cwtl
loopne
dec
mov
pushl
mov
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
adc
pop
mov
xchg
sub
mov
rorb
xchg
dec
fwait
aam
fwait
rorb
fsubrl
mov
rorb
aam
dec
leave
les
add
push
rol
or
or
or
or
ret
gs
les
les
enter
testl
cld
mov
mov
les
loopne
mov
dec
push
idivl
dec
inc
loopne
mov
dec
js
test
les
loopne
mov
dec
and
xchg
jl
les
pusha
cmp
dec
xor
add
dec
mov
in
mov
loopne
add
test
pushl
mov
inc
sub
les
dec
mov
js
cmp
dec
or
or
dec
or
dec
test
inc
add
enter
jge
les
add
xchg
ret
les
add
test
lds
dec
mov
call
sub
int3
les
add
js
hlt
mov
les
testb
loopne
mov
xchg
dec
inc
loopne
mov
xchg
dec
push
loopne
mov
xchg
dec
mov
cld
xchg
xchg
xchg
dec
add
sahf
cmp
dec
inc
loopne
mov
xchg
add
add
les
cmp
cmp
push
cmp
dec
dec
loopne
mov
mov
les
inc
add
mov
push
movsb
les
or
or
or
or
ret
gs
les
xchg
xchg
gs
testl
hlt
mov
les
loopne
negl
dec
cwtl
loopne
shlb
inc
fs
mov
xchg
cmp
incl
mov
std
hlt
lret
inc
push
les
sar
mov
dec
and
dec
or
and
xchg
jl
les
cmp
inc
add
dec
and
dec
cwtl
loopne
dec
and
add
pop
lret
inc
in
les
loopne
inc
sub
dec
or
dec
nop
loopne
dec
xchg
rorb
mov
xchg
int3
dec
nop
loopne
dec
xchg
enter
mov
mov
mov
inc
push
sarb
les
add
mov
nop
loopne
dec
xchg
rorb
loopne
les
dec
xchg
fsubrl
int3
les
sub
dec
mov
test
imul
cld
lds
loopne
dec
mov
mov
add
dec
mov
mov
mov
dec
nop
loopne
dec
xchg
int3
dec
mov
mov
mov
mov
decl
mov
inc
add
les
add
mov
push
loopne
les
rorb
loopne
les
fsubrl
add
dec
mov
test
imul
cld
cmp
cmp
dec
mov
nop
pushl
lret
inc
and
les
rolb
xor
add
dec
rorb
rorb
adc
mov
inc
push
cmp
add
dec
ret
int3
dec
or
push
sub
divl
add
leave
fsubl
loopne
dec
pushf
rclb
cmp
idivl
incl
mov
std
fmul
inc
and
les
sar
mov
negb
dec
add
cmp
hlt
fs
add
lds
mov
lret
push
add
inc
pop
lret
inc
jl
les
lret
inc
je
les
in
cmp
lock
mov
ret
les
movsl
int3
aam
xchg
les
roll
ret
rcl
movsl
int3
aam
icebp
dec
fs
mov
rclb
in
adc
loopne
dec
mov
dec
xchg
les
loopne
dec
nop
loopne
dec
mov
test
push
loopne
dec
or
and
ret
leave
les
loopne
sub
push
loopne
sub
cltd
cmp
dec
and
dec
leave
shlb
cmp
add
dec
and
add
cmp
sub
dec
cmp
sub
ja
sub
dec
mov
decl
mov
dec
mov
das
dec
mov
dec
mov
dec
add
cmp
lock
mov
mov
loopne
mov
dec
nop
loopne
dec
mov
dec
test
xchg
cmp
fsubs
dec
cmp
sub
jne
cmp
loopne
add
inc
ret
add
cmp
dec
mov
nop
inc
xor
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
mov
hlt
mov
les
inc
add
push
in
les
or
or
or
dec
mov
sar
mov
xchg
dec
pusha
loopne
les
mov
dec
cmc
dec
hlt
dec
mov
dec
mov
inc
add
decl
mov
lcall
or
lods
push
sti
ret
gs
les
xchg
gs
testl
mov
les
xor
cmp
pop
dec
mov
dec
cltd
cmp
aas
mov
dec
mov
dec
mov
add
mov
dec
or
xor
cmp
les
dec
mov
das
adc
sub
int3
pushl
mov
dec
les
sub
cmp
jl
pushl
mov
negl
xchg
xchg
sub
mov
xor
les
and
or
or
xchg
dec
test
sar
cwtl
loopne
mov
xchg
xchg
scas
cmp
les
dec
aas
scas
les
inc
les
popa
xchg
dec
dec
inc
les
add
cmp
inc
pop
les
les
add
cmp
jl
lcall
fwait
lcall
or
or
xchg
dec
cmp
cmp
jae
negl
inc
cli
aam
enter
xchg
sub
cltd
mov
ret
les
cmp
inc
mov
dec
mov
les
rolb
and
les
and
lcall
les
jl
cmp
cltd
pop
or
or
or
or
or
ret
gs
les
ret
aam
add
addr16
les
loopne
add
les
lock
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
xchg
add
cmp
sub
dec
cmp
dec
mov
enter
les
enter
or
or
or
or
or
or
or
or
ret
gs
les
ret
aam
add
addr16
les
loopne
add
les
call
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
xchg
add
cmp
sub
dec
cmp
dec
mov
enter
les
enter
or
or
or
or
or
or
or
or
ret
gs
les
ret
aam
add
addr16
les
loopne
add
les
clc
inc
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
xchg
add
cmp
sub
and
cmp
loopne
mov
les
enter
or
or
or
or
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
loopne
negl
dec
cwtl
loopne
dec
and
dec
fwait
rolb
sbb
dec
fisttpl
rorb
dec
fwait
enter
dec
fmuls
in
and
dec
and
pop
mov
inc
add
jge
les
add
loopne
mov
add
int
cmp
add
nop
loopne
dec
mov
dec
and
dec
xchg
pushf
sub
or
cmp
loopne
dec
mov
lods
dec
nop
loopne
dec
inc
dec
les
loopne
dec
dec
push
les
loopne
dec
push
push
les
loopne
dec
inc
pop
les
loopne
dec
dec
pop
les
fs
les
pusha
incl
mov
inc
add
jge
les
add
fmull
loopne
incl
mov
dec
or
add
inc
push
cmp
add
lds
int3
cmp
dec
and
xchg
add
cmp
sub
push
cmp
dec
add
loopne
mov
les
add
push
movsb
les
dec
or
add
leave
xchg
sub
ret
add
les
rolb
rorl
inc
add
pop
cmp
inc
add
add
les
or
or
or
or
or
or
or
or
in
xchg
xchg
negl
xchg
dec
cmp
pop
mov
dec
pop
rol
les
aam
stos
enter
test
mov
sar
pop
mov
dec
mov
dec
mov
aam
roll
loopne
lds
in
or
dec
or
fmuls
loopne
dec
fwait
loopne
mov
in
mov
fmull
loopne
dec
nop
loopne
dec
test
in
add
les
loopne
jnp
les
aam
mov
dec
inc
mov
inc
cmp
mov
dec
nop
loopne
dec
nop
add
dec
enter
rol
les
loopne
xchg
sub
ret
lds
mov
dec
mov
fsubrl
add
inc
add
pop
or
or
or
or
or
loopne
dec
nop
loopne
testl
lret
rorb
dec
mov
dec
mov
dec
mov
dec
and
and
dec
xchg
loopne
sub
and
dec
sub
add
sarb
les
add
aam
nop
loopne
dec
xchg
hlt
dec
nop
loopne
dec
xchg
lock
nop
loopne
dec
xchg
cld
incl
cmp
add
inc
or
int3
mov
dec
rorl
rorb
adc
mov
inc
push
cmp
add
ret
dec
xchg
int3
dec
or
push
dec
add
add
in
or
sub
or
or
or
or
or
or
int3
inc
add
xchg
dec
mov
inc
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
add
les
add
dec
lret
xchg
sub
pop
cmp
inc
add
add
les
or
or
or
dec
aam
xchg
rorb
dec
xchg
int3
dec
xchg
int3
dec
xchg
enter
dec
xchg
aam
xchg
aam
xchg
rclb
dec
xchg
rolb
mov
xchg
inc
push
sarb
les
add
fmull
fmull
fmuls
fmuls
in
mov
dec
rorb
in
dec
mov
dec
mov
dec
xchg
int3
dec
xchg
hlt
dec
mov
dec
mov
inc
xor
jge
les
add
les
or
or
or
or
or
dec
aam
xchg
rorb
dec
xchg
int3
dec
xchg
int3
dec
xchg
enter
dec
xchg
aam
xchg
aam
xchg
rclb
dec
xchg
rolb
mov
xchg
inc
push
sarb
les
add
fmull
fmull
fmuls
fmuls
dec
xchg
in
mov
dec
mov
dec
xchg
int3
dec
xchg
in
dec
mov
dec
mov
inc
xor
jge
les
add
les
dec
aam
xchg
rorb
dec
xchg
int3
dec
xchg
int3
dec
xchg
enter
dec
xchg
aam
xchg
aam
xchg
rclb
push
mov
inc
push
sarb
les
add
dec
xchg
fmull
fmuls
fmuls
in
xchg
in
xchg
loopne
xchg
loopne
push
mov
inc
push
sarb
les
add
dec
mov
lcall
or
or
or
or
xchg
dec
sub
cmp
cmp
gs
les
xchg
gs
testl
dec
les
les
enter
dec
mov
loopne
dec
cwtl
loopne
dec
xchg
xchg
dec
mov
add
push
les
icebp
cmp
dec
lret
inc
add
dec
add
mov
in
dec
mov
loopne
mov
cmp
dec
xchg
lock
cmp
mov
dec
nop
loopne
dec
xchg
test
loopne
dec
addl
mov
loopne
dec
and
dec
mov
test
mov
mov
inc
add
jle
les
add
dec
mov
dec
xchg
fmull
loopne
dec
mov
mov
dec
and
add
push
lds
loopne
inc
pop
mov
xchg
sub
mov
dec
mov
mov
pop
dec
mov
push
cmp
inc
add
negl
dec
cwtl
loopne
das
rorb
in
mov
dec
mov
shrl
data16
dec
nop
loopne
xchg
dec
mov
movsb
add
push
sub
rol
les
rorb
shrl
and
xchg
add
push
les
add
cmp
inc
loopne
les
cmp
cmp
mov
xchg
sub
inc
pop
mov
dec
mov
mov
jle
cmp
inc
add
dec
dec
loopne
les
les
and
sub
cmp
cmp
gs
les
gs
testl
mov
les
enter
fmuls
loopne
add
les
in
xchg
loopne
mov
loopne
mov
dec
mov
call
nop
loopne
dec
mov
hlt
inc
or
sarb
les
add
dec
xchg
lock
test
dec
mov
lock
nop
loopne
dec
and
dec
mov
loopne
and
lds
loopne
dec
mov
fsubrl
cmp
cmp
int3
les
xlat
sub
cmp
add
mov
loopne
nop
loopne
xchg
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
xchg
dec
mov
dec
nop
loopne
dec
xchg
enter
nop
dec
mov
mov
inc
add
les
add
pushf
dec
mov
dec
nop
loopne
dec
xchg
rorb
loopne
dec
mov
sub
rol
les
loopne
mov
xlat
sub
cmp
add
mov
hlt
inc
xor
inc
or
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
mov
loopne
cmp
cmp
sub
aas
cmp
dec
mov
mov
les
cltd
pop
or
or
or
or
or
xchg
sub
pop
cmp
pop
or
or
or
or
or
ret
gs
les
aam
add
addr16
les
loopne
dec
sbbb
les
pop
cmp
dec
xor
add
int
sub
xchg
mov
sub
add
les
cmp
les
cmp
les
xchg
mov
cmp
cmp
dec
mov
inc
add
inc
or
int3
inc
or
xor
add
aad
xchg
cmp
mov
int3
mov
les
push
rol
or
or
int3
xchg
dec
cwtl
loopne
inc
inc
xchg
xchg
xchg
mov
dec
xchg
dec
mov
inc
add
sar
shlb
mov
xchg
mov
dec
int3
dec
xchg
fmuls
in
push
decl
imul
add
dec
fmuls
sub
push
cmp
dec
xor
cmp
cmp
sar
mov
dec
or
dec
xchg
dec
int3
fwait
lcall
rol
mov
inc
add
push
rol
or
or
or
inc
sub
dec
add
dec
xchg
rorb
dec
xchg
int3
dec
xchg
int3
dec
xchg
enter
in
dec
xchg
enter
enter
jp
les
add
dec
xchg
aam
xchg
rorb
rorb
fmull
fsubrl
les
loopne
popf
pop
or
ret
gs
les
aam
add
addr16
les
cld
dec
mov
xchg
dec
add
and
les
loopne
sub
dec
ret
rclb
mov
fcoml
cmp
cmp
sub
xor
cmp
loopne
mov
les
cld
les
or
or
or
ret
gs
les
aam
add
addr16
les
hlt
dec
mov
mov
add
les
loopne
sub
dec
ret
rclb
mov
fcoml
cmp
cmp
sub
xor
cmp
loopne
mov
les
hlt
les
or
or
or
ret
gs
les
enter
testl
aam
addr16
les
test
dec
mov
movsb
dec
add
and
les
loopne
sub
cmp
dec
inc
loopne
les
hlt
dec
dec
loopne
les
lock
push
loopne
les
cld
dec
inc
loopne
les
clc
dec
inc
loopne
les
mov
inc
add
jge
les
add
mov
xchg
sub
ret
les
loopne
xchg
add
cmp
sub
xor
cmp
loopne
mov
les
push
test
or
lods
movsb
sti
ret
gs
les
enter
testl
mov
les
xor
xor
les
cmpl
sub
xchg
mov
add
fnstsw
les
rorb
dec
mov
add
enter
dec
mov
das
testl
leave
les
and
mov
inc
xor
les
mov
or
dec
aam
xchg
rorb
dec
xchg
int3
dec
xchg
int3
dec
xchg
enter
dec
xchg
aam
xchg
aam
xchg
rorb
rolb
mov
xchg
inc
push
sarb
les
add
fmull
fmull
fmuls
fmuls
in
xchg
in
xchg
in
dec
xchg
in
dec
xchg
call
xchg
hlt
dec
xchg
hlt
dec
lock
mov
inc
or
sarb
les
add
aad
aam
xchg
rorb
dec
xchg
int3
dec
xchg
int3
dec
xchg
enter
dec
xchg
aam
xchg
aam
xchg
rorb
rolb
mov
xchg
inc
push
sarb
les
add
fmull
fmull
fmuls
fmuls
in
xchg
in
xchg
loopne
xchg
loopne
xchg
in
dec
xchg
in
dec
call
or
sarb
les
add
or
or
or
xor
les
push
rol
or
or
or
or
or
scas
cmp
gs
les
xchg
xchg
gs
testl
mov
les
imull
dec
push
les
movsl
int3
aam
repz
cmp
inc
fs
add
inc
dec
les
sar
mov
dec
inc
loopne
les
loopne
les
loopne
xchg
jl
les
push
cmp
dec
xor
add
dec
mov
lock
test
cld
dec
mov
fadds
inc
loopne
pushl
lret
inc
push
les
loopne
les
loopne
sub
cmp
cmp
in
mov
clc
dec
stos
rolb
sbb
gs
ljmp
dec
stos
enter
dec
stos
fsubrs
cmp
cmp
loopne
xchg
sub
xor
dec
dec
loopne
les
pop
cmp
dec
dec
loopne
les
inc
loopne
lds
loopne
les
dec
mov
cmp
cmp
aad
les
clc
dec
dec
loopne
les
pop
cmp
dec
push
loopne
les
divl
add
inc
dec
leave
fsubl
loopne
les
rclb
cmp
inc
fs
add
lret
inc
aas
les
sar
mov
negb
dec
ret
inc
add
xchg
cmp
hlt
fs
ret
jge
lds
cld
lret
push
add
inc
pop
lret
inc
or
les
lret
inc
add
les
in
cmp
lock
mov
hlt
sub
ret
les
movsl
int3
aam
rcll
roll
ret
rcl
movsl
int3
aam
icebp
dec
fs
mov
in
xchg
dec
and
cmp
dec
inc
loopne
les
rorb
dec
mov
in
dec
nop
loopne
dec
dec
loopne
les
pop
cmp
dec
inc
loopne
les
loopne
loopne
les
dec
mov
cmp
cmp
lret
les
clc
dec
dec
loopne
les
pop
cmp
dec
and
sub
cmp
dec
mov
loopne
rcl
movsl
int3
aam
xchg
cmp
dec
mov
hlt
add
inc
les
ret
das
mov
sub
dec
stos
rorb
test
or
das
dec
mov
dec
mov
dec
ret
inc
add
xchg
cmp
lock
mov
loopne
les
rorb
dec
xchg
fcoml
ret
add
inc
loopne
les
les
cmp
cmp
mov
mov
les
inc
add
or
scas
cmp
gs
les
xchg
xchg
gs
testl
mov
addr16
les
imull
dec
test
mov
aam
repz
cmp
inc
fs
add
inc
inc
les
sar
mov
dec
inc
loopne
les
loopne
les
loopne
xchg
jl
les
dec
cmp
dec
xor
add
dec
mov
lock
test
cld
dec
mov
fadds
and
pushl
lret
inc
push
les
loopne
les
loopne
sub
cmp
cmp
in
mov
clc
dec
stos
rolb
sbb
data16
ljmp
dec
stos
enter
dec
stos
fsubrs
aas
cmp
dec
nop
loopne
xchg
sub
sub
cmp
nop
dec
dec
loopne
les
push
cmp
dec
dec
loopne
les
inc
loopne
lds
loopne
les
dec
mov
aas
cmp
sub
lret
inc
add
dec
dec
loopne
les
push
cmp
dec
push
loopne
les
divl
add
leave
fsubl
loopne
les
rclb
cmp
inc
fs
add
inc
cmp
les
sar
mov
negb
dec
ret
inc
add
xchg
cmp
hlt
fs
ret
jge
lds
cld
lret
push
add
inc
pop
lret
inc
or
les
lret
inc
add
les
in
cmp
lock
mov
hlt
sub
rol
shlb
xchg
dec
nop
loopne
cmp
inc
fs
rcl
movsl
int3
aam
icebp
dec
fs
mov
in
xchg
dec
and
cmp
dec
inc
loopne
les
rorb
dec
mov
in
dec
nop
loopne
dec
dec
loopne
les
push
cmp
dec
inc
loopne
les
loopne
loopne
les
dec
mov
cmp
sub
leave
les
lock
dec
loopne
les
and
sub
mov
cmp
loopne
dec
rcl
movsl
int3
aam
xchg
cmp
dec
mov
hlt
add
cwtl
rol
das
mov
sub
dec
stos
rorb
test
or
das
dec
mov
dec
mov
dec
ret
inc
add
xchg
cmp
lock
mov
loopne
les
rorb
dec
xchg
fcoml
ret
add
pop
cmp
dec
inc
loopne
les
les
cmp
cmp
sub
cmp
loopne
mov
les
inc
add
cmp
gs
les
xchg
xchg
gs
testl
lock
les
negl
dec
cwtl
loopne
shlb
xchg
cmp
inc
fs
pop
mov
std
hlt
lret
inc
pop
les
sar
mov
dec
and
dec
mov
mov
xchg
jl
les
xor
add
dec
mov
in
dec
cwtl
loopne
dec
mov
rolb
and
pushl
lret
inc
sub
les
test
dec
dec
loopne
les
dec
mov
xor
loopne
les
hlt
dec
inc
loopne
les
lock
dec
loopne
les
cld
dec
push
loopne
les
clc
dec
inc
loopne
incl
mov
inc
add
jge
les
add
les
sub
dec
mov
subb
cmp
dec
mov
mov
dec
xor
inc
loopne
lds
loopne
les
dec
pusha
loopne
les
push
loopne
les
hlt
dec
inc
loopne
les
lock
dec
loopne
les
cld
dec
push
loopne
les
clc
dec
inc
loopne
incl
mov
inc
add
jge
les
add
les
orb
subb
loopne
xchg
sub
divl
add
rcr
movsl
int3
aam
test
orb
xchg
dec
mov
hlt
cmp
inc
fs
add
lret
std
fmul
inc
pop
les
rolb
xor
inc
add
xchg
cmp
hlt
fs
ret
jge
lds
cld
lret
push
add
inc
pop
lret
inc
arpl
les
lret
inc
pop
les
in
cmp
lock
mov
loopne
mov
dec
leave
shlb
xchg
dec
and
cmp
inc
fs
icebp
dec
fs
nop
loopne
dec
and
shlb
cmp
dec
mov
dec
rorl
loopne
dec
nop
loopne
dec
mov
subb
cmp
dec
and
dec
or
and
ret
ret
dec
mov
subb
cmp
dec
and
sub
cmpl
in
leave
shlb
cmp
dec
mov
loopne
and
les
mov
dec
nop
loopne
xchg
das
mov
sub
add
les
test
mov
dec
mov
das
dec
mov
dec
mov
dec
ret
inc
add
xchg
cmp
lock
mov
rorb
rorb
dec
sbb
cmp
fsubs
dec
add
pop
cmp
dec
mov
mov
cmp
cmp
sub
cmp
dec
mov
lock
les
inc
add
push
add
dec
cwtl
loopne
xchg
dec
test
sar
cwtl
loopne
mov
xchg
xchg
inc
das
jl
les
jl
les
les
dec
cmp
les
popa
xchg
dec
dec
inc
les
cmp
les
les
imul
shlb
add
or
or
or
or
or
or
xchg
dec
or
add
fisttpll
loopne
xchg
aam
xchg
sub
sub
cmp
enter
add
inc
add
dec
lret
or
les
adc
les
adc
les
add
xchg
sub
add
dec
add
enter
or
or
dec
or
add
aam
add
xchg
sub
sub
cmp
or
les
rolb
rorl
inc
add
inc
cmp
inc
add
add
les
or
or
or
or
or
or
dec
or
add
aam
add
xchg
sub
sub
int3
les
rolb
rorl
inc
add
inc
cmp
inc
add
add
les
or
or
or
or
or
or
xchg
negl
xchg
dec
mov
enter
lcall
fimull
rorb
dec
lcall
fsubrs
sub
cmp
loopne
dec
mov
test
loopne
dec
xor
and
dec
mov
dec
xchg
cld
dec
cmp
incl
lahf
mov
inc
add
jge
les
add
rclb
dec
add
test
or
or
or
dec
or
add
aam
add
xchg
sub
sub
int3
les
rolb
rorl
inc
add
inc
cmp
inc
add
add
les
or
or
or
or
or
or
xchg
dec
sub
cmp
cmp
gs
les
xchg
gs
testl
movsb
mov
les
enter
mov
fmuls
loopne
dec
mov
and
add
les
and
add
and
inc
xor
and
cmp
loopne
negl
xchg
dec
add
loopne
sub
inc
cmp
inc
add
divl
dec
mov
fsubrs
rorb
fadds
int3
les
xlat
sub
push
cmp
dec
nop
loopne
xchg
inc
sub
dec
mov
movsb
dec
add
inc
loopne
dec
mov
aaa
cmp
sub
ret
inc
add
dec
mov
xlat
sub
push
cmp
dec
and
xchg
add
das
and
cmp
and
cmp
cmp
inc
pop
mov
inc
pop
in
sub
and
cmp
mov
dec
mov
mov
inc
cmp
inc
add
dec
mov
movsb
mov
les
and
inc
and
cmp
gs
les
xchg
gs
testl
pushf
mov
les
enter
mov
fmuls
loopne
dec
mov
and
add
les
and
add
and
inc
xor
and
cmp
loopne
negl
xchg
dec
add
loopne
sub
inc
cmp
inc
add
divl
dec
mov
fsubrs
rorb
fadds
int3
les
xlat
sub
dec
cmp
dec
nop
loopne
xchg
inc
sub
dec
mov
pushf
dec
add
inc
loopne
dec
mov
aaa
cmp
sub
ret
inc
add
dec
mov
xlat
sub
dec
cmp
dec
and
xchg
add
scas
and
cmp
and
cmp
cmp
inc
pop
mov
inc
pop
in
sub
and
cmp
mov
dec
mov
adcb
cmp
inc
add
dec
mov
pushf
mov
les
and
inc
and
cmp
gs
les
xchg
gs
testl
lods
mov
les
enter
mov
loopne
dec
mov
dec
or
loopne
add
les
xor
mov
dec
xchg
cld
dec
and
dec
cmp
mov
pushf
dec
nop
loopne
dec
and
inc
add
enter
jge
les
add
loopne
and
lds
loopne
inc
cmp
and
cmp
loopne
xchg
negl
dec
add
loopne
sub
inc
cmp
inc
add
idivl
dec
mov
dec
mov
int3
les
xlat
sub
dec
cmp
dec
mov
nop
xchg
inc
sub
lods
dec
add
inc
loopne
dec
mov
cmp
dec
push
loopne
les
hlt
dec
inc
loopne
les
lock
dec
loopne
les
cld
dec
push
loopne
les
clc
dec
inc
loopne
les
mov
inc
add
jge
les
add
les
orb
xlat
sub
dec
cmp
dec
nop
loopne
xchg
add
mov
and
cmp
cmp
inc
pop
mov
inc
pop
in
sub
and
cmp
mov
dec
and
xchg
dec
add
add
dec
mov
lods
mov
les
and
xchg
xchg
xchg
inc
add
xchg
inc
sub
cmp
sub
sub
hlt
dec
xor
mov
dec
mov
dec
xchg
cld
dec
xchg
cld
dec
mov
inc
cmp
jl
les
add
les
sbbb
or
lods
adc
gs
les
xchg
gs
testl
mov
les
xor
mov
dec
cmp
sub
cmp
mov
mov
dec
mov
add
mov
xchg
xchg
sub
sbb
cmp
jl
les
dec
mov
inc
add
les
push
dec
mov
dec
mov
lret
sub
adc
jl
pushl
mov
negl
xchg
xchg
sub
sahf
mov
xor
les
and
or
ret
gs
les
aam
add
addr16
les
and
les
loopne
dec
nop
loopne
xchg
dec
and
dec
mov
call
cmp
loopne
cmp
cmp
dec
mov
loopne
xor
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
mov
int3
mov
les
pop
or
or
xchg
inc
sub
cmp
cmp
xchg
dec
adcl
dec
xchg
pushf
dec
xchg
pushf
dec
or
andl
dec
xchg
aam
xchg
lods
dec
adc
subl
add
jge
les
add
les
or
or
or
scas
cmp
gs
les
ret
aam
add
addr16
les
loopne
add
les
test
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
xchg
add
cmp
sub
push
cmp
loopne
mov
les
enter
or
or
or
or
or
or
or
or
ret
gs
les
enter
testl
shlb
les
loopne
inc
sub
les
loopne
les
dec
ret
dec
mov
dec
inc
loopne
les
loopne
les
dec
loopne
les
lock
push
loopne
les
cld
dec
inc
loopne
les
clc
dec
dec
loopne
les
test
loopne
les
orb
and
les
mov
loopne
les
mov
loopne
les
mov
inc
add
jle
les
add
sub
les
xchg
dec
dec
loopne
les
nop
dec
push
loopne
les
pushf
dec
inc
loopne
les
movsb
dec
dec
loopne
les
mov
dec
xchg
lods
dec
inc
loopne
dec
subl
les
mov
inc
add
jge
les
add
xchg
rclb
les
loopne
xchg
add
cmp
sub
cmp
cmp
loopne
mov
les
add
push
mov
or
or
or
or
or
or
xchg
xchg
xchg
dec
xor
cmp
cmp
dec
adcb
dec
mov
xchg
pushf
dec
andb
dec
mov
xchg
lods
dec
mov
dec
mov
inc
xor
jl
les
add
lcall
cmp
gs
les
aam
add
addr16
les
in
add
loopne
dec
mov
dec
nop
loopne
dec
mov
mov
and
les
adc
cmp
int3
dec
mov
cld
sub
adc
cmp
loopne
xchg
add
cmp
sub
sbb
cmp
loopne
mov
les
or
or
or
or
or
or
or
ret
gs
les
aam
add
addr16
les
fmull
dec
mov
nop
loopne
dec
mov
clc
add
les
ret
inc
add
dec
mov
hlt
sub
ret
les
loopne
xchg
add
cmp
sub
sbb
cmp
loopne
mov
les
or
scas
cmp
gs
les
ret
aam
add
addr16
les
in
dec
and
dec
xor
loopne
xchg
dec
nop
loopne
dec
and
add
les
ret
les
rorb
subb
les
xchg
add
cmp
sub
sbb
cmp
loopne
mov
les
pop
or
or
or
or
or
or
or
scas
cmp
gs
les
xchg
xchg
gs
testl
hlt
mov
les
loopne
divl
dec
mov
cld
shlb
les
aam
add
inc
cmpsb
dec
test
incl
mov
dec
inc
loopne
les
loopne
xchg
jl
les
loopne
sub
mov
inc
add
dec
mov
loopne
dec
mov
loopne
cmp
dec
inc
loopne
les
dec
pusha
loopne
les
js
les
dec
mov
loopne
dec
leave
fsubl
rclb
cmp
inc
fs
add
lret
std
fmul
inc
leave
dec
test
inc
add
xor
les
in
cmp
hlt
fs
add
lds
mov
lret
push
add
inc
pop
lret
inc
sbb
les
lret
inc
adc
les
in
cmp
lock
mov
loopne
movsb
mov
shlb
les
roll
ret
rcl
movsl
int3
aam
icebp
dec
fs
mov
rclb
in
adc
rorb
les
loopne
dec
mov
in
mov
subb
cmp
dec
inc
loopne
les
loopne
add
ffree
les
loopne
sub
inc
cmp
dec
and
sub
cld
cmp
dec
nop
loopne
shlb
cmp
dec
mov
loopne
and
les
dec
mov
mov
les
loopne
sub
inc
cmp
dec
inc
loopne
les
loopne
add
add
les
loopne
sub
inc
cmp
dec
mov
mov
sub
add
les
test
mov
dec
mov
das
dec
mov
dec
mov
dec
add
cmp
lock
mov
fisttpll
rorb
les
fcoml
ret
cmp
sub
dec
cmp
dec
and
xchg
add
cmp
sub
cmp
dec
mov
hlt
mov
les
inc
add
push
mov
or
or
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
negl
dec
cwtl
loopne
dec
and
dec
fwait
rolb
sbb
push
aam
fisttpl
rorb
dec
fwait
enter
dec
fmuls
in
mov
dec
and
sub
imul
nop
dec
nop
loopne
dec
and
dec
mov
dec
xchg
pushf
dec
nop
loopne
dec
sbbl
mov
lods
dec
and
dec
subl
add
jge
les
add
mov
nop
loopne
dec
mov
mov
inc
loopne
les
mov
push
loopne
les
mov
les
inc
les
loopne
les
inc
les
dec
les
dec
incl
mov
inc
add
jle
les
add
in
add
cmp
sub
cmp
cmp
dec
mov
aam
dec
leave
les
aam
mov
or
or
or
or
int3
inc
add
aam
add
xchg
sub
cmp
cmp
or
les
rolb
rorl
inc
add
mov
rolb
rol
les
or
or
or
or
or
or
xchg
dec
sub
cmp
cmp
gs
les
les
cmp
aam
add
les
les
enter
dec
mov
loopne
dec
cwtl
loopne
add
fs
les
dec
and
dec
add
mov
in
sub
outsl
cmp
dec
cmp
mov
dec
xchg
cld
dec
and
dec
orl
mov
loopne
dec
mov
xchg
orb
mov
dec
and
inc
add
enter
jge
les
add
dec
xchg
xchg
dec
mov
andl
les
test
nop
loopne
dec
xchg
movsb
dec
mov
mov
push
loopne
les
loopne
les
loopne
les
mov
inc
add
jle
les
add
loopne
inc
loopne
lds
loopne
inc
pop
mov
xchg
sub
xor
cmp
loopne
divl
xchg
dec
pop
dec
mov
loopne
idivb
negl
dec
cwtl
loopne
das
rorb
in
mov
dec
mov
shrl
inc
cmp
dec
inc
loopne
les
loopne
add
fs
sub
mov
shrl
inc
cmp
dec
nop
loopne
xchg
add
pusha
les
inc
loopne
les
cmp
cmp
mov
inc
add
xchg
sub
xor
cmp
mov
dec
inc
loopne
les
cmp
inc
add
dec
dec
loopne
les
les
and
or
or
or
or
or
scas
cmp
gs
les
ret
aam
add
addr16
les
loopne
add
les
fadds
mov
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
add
cmp
dec
mov
inc
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
mov
enter
les
enter
or
or
dec
and
xchg
dec
cmc
dec
hlt
dec
mov
dec
mov
dec
mov
dec
mov
dec
enter
inc
or
sarb
les
add
mov
dec
xchg
rorb
lcall
or
or
ret
gs
les
ret
aam
add
addr16
les
and
les
loopne
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
clc
dec
xchg
int3
dec
nop
loopne
dec
xchg
enter
test
loopne
inc
push
mov
inc
push
sarb
les
add
orb
dec
nop
loopne
dec
xchg
rorb
rorb
xchg
sub
mov
add
cmp
dec
mov
in
inc
xor
inc
or
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
mov
enter
les
push
fadd
or
or
or
or
loopne
xchg
xchg
sub
les
pop
or
scas
cmp
gs
les
aam
add
addr16
les
in
dec
mov
test
add
les
loopne
sub
les
dec
mov
xchg
sub
rol
dec
mov
fcoml
cmp
cmp
sub
cmp
cmp
loopne
mov
les
in
les
or
or
or
dec
aam
xchg
rorb
dec
xchg
int3
dec
xchg
int3
dec
xchg
enter
enter
enter
jp
les
add
dec
xchg
aam
xchg
rorb
rorb
fmull
fmull
fmuls
fadds
mov
inc
push
sarb
les
add
dec
mov
lcall
or
or
dec
and
xchg
dec
mov
enter
dec
cld
dec
mov
dec
mov
dec
enter
inc
or
sarb
les
add
mov
dec
mov
dec
mov
dec
into
dec
mov
dec
mov
dec
mov
inc
or
sarb
les
add
fwait
dec
xchg
in
push
int3
les
or
or
or
or
or
or
or
xchg
xchg
xchg
xchg
inc
sub
mov
das
popa
cmp
dec
mov
nop
dec
xchg
nop
dec
sbbb
dec
mov
mov
subl
inc
xor
jge
les
add
les
mov
lcall
or
ret
gs
les
xchg
xchg
gs
testl
hlt
mov
les
loopne
negl
dec
cwtl
loopne
shlb
inc
fs
mov
xchg
cmp
incl
mov
std
hlt
lret
inc
dec
les
sar
mov
dec
and
dec
or
and
xchg
jl
les
mov
cmp
rorb
in
dec
cwtl
loopne
dec
and
add
pop
lret
inc
int
les
loopne
inc
sub
dec
or
dec
nop
loopne
dec
xchg
rorb
lods
dec
xchg
int3
dec
nop
loopne
dec
xchg
enter
test
mov
mov
inc
push
sarb
les
add
mov
xchg
aam
nop
loopne
dec
xor
xchg
shrb
rol
dec
xor
jae
les
loopne
sub
mov
loopne
lds
loopne
dec
mov
mov
add
dec
mov
lods
dec
mov
dec
nop
loopne
dec
xchg
int3
dec
mov
mov
mov
dec
mov
mov
mov
mov
inc
add
les
add
mov
mov
dec
nop
loopne
dec
xchg
shrb
int
les
fmuls
loopne
sub
mov
loopne
cmp
cmp
dec
mov
nop
pushl
lret
inc
and
les
rolb
xor
add
dec
rorb
rorb
adc
mov
inc
push
cmp
add
dec
ret
int3
dec
or
push
sub
divl
add
leave
fsubl
loopne
dec
pushf
rclb
cmp
idivl
incl
mov
std
fmul
inc
and
les
sar
mov
negb
dec
add
cmp
hlt
fs
add
lds
mov
lret
push
add
inc
pop
lret
inc
jl
les
lret
inc
je
les
in
cmp
lock
mov
sbb
cmp
movsl
int3
aam
xchg
les
roll
ret
rcl
movsl
int3
aam
icebp
dec
fs
mov
rclb
in
adc
loopne
dec
mov
dec
xchg
les
loopne
dec
nop
loopne
dec
mov
test
and
dec
or
and
ret
ret
les
loopne
sub
mov
loopne
sub
ljmp
dec
leave
shlb
cmp
add
jae
cmp
dec
and
add
cmp
sub
cltd
cmp
sub
ja
sub
dec
mov
decl
mov
dec
mov
das
dec
mov
dec
mov
dec
add
cmp
lock
mov
mov
loopne
mov
dec
nop
loopne
dec
mov
dec
test
xchg
cmp
fsubs
dec
cmp
sub
inc
cmp
dec
mov
loopne
les
adc
cmp
and
cmp
cmp
dec
mov
nop
inc
xor
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
mov
hlt
mov
les
inc
add
push
in
or
or
or
or
or
or
or
scas
cmp
gs
les
xchg
xchg
gs
testl
movsb
mov
les
imull
dec
test
lods
shlb
xchg
cmp
inc
fs
add
mov
test
incl
mov
dec
and
dec
or
and
xchg
jl
les
mov
cmp
inc
add
dec
mov
hlt
dec
test
lock
mov
faddl
and
pushl
mov
dec
mov
mov
and
sub
cmp
dec
and
mov
cld
dec
stos
rolb
sbb
jg
aam
ljmp
dec
stos
enter
dec
stos
fsubrs
nop
loopne
xchg
sub
cmp
cmp
test
loopne
sub
mov
loopne
xchg
inc
sub
add
push
lds
dec
mov
cmp
sub
ret
inc
add
dec
mov
mov
and
cmp
dec
nop
loopne
xchg
sub
divl
add
leave
fsubl
loopne
dec
pushf
rclb
cmp
inc
fs
add
std
fmul
inc
and
les
sar
mov
negb
dec
ret
inc
add
xchg
cmp
hlt
fs
ret
jge
lds
cld
lret
push
add
inc
pop
lret
inc
jg
les
lret
inc
ja
les
in
cmp
lock
mov
call
les
movsl
int3
aam
rcll
roll
ret
rcl
movsl
int3
aam
icebp
dec
fs
mov
fcoms
in
cmp
dec
and
dec
mov
dec
rorl
loopne
dec
nop
loopne
dec
mov
mov
ret
cmp
loopne
xchg
inc
sub
dec
or
inc
loopne
dec
mov
cmp
rol
inc
add
dec
mov
mov
sub
cmp
dec
and
sub
out
cmp
dec
mov
in
rcl
movsl
int3
aam
xchg
cmp
dec
mov
call
les
das
lea
sub
dec
stos
rorb
test
or
das
dec
mov
dec
mov
dec
ret
inc
add
xchg
cmp
lock
mov
fimuls
loopne
dec
mov
dec
sti
dec
xchg
fcoml
ret
add
mov
loopne
xchg
add
cmp
sub
xor
cmp
loopne
mov
les
inc
add
loopne
dec
nop
loopne
testl
lret
rorb
dec
mov
dec
mov
dec
mov
dec
and
and
dec
xchg
loopne
sub
and
dec
sub
add
sarb
les
add
aam
nop
loopne
dec
xchg
hlt
dec
nop
loopne
dec
xchg
lock
cmp
add
inc
or
int3
mov
dec
rorl
rorb
adc
mov
inc
push
cmp
add
ret
dec
xchg
int3
dec
or
push
dec
add
add
fadd
or
or
or
or
or
int3
inc
add
aam
add
xchg
sub
xor
cmp
or
les
rolb
dec
lret
mov
add
add
les
or
or
or
or
or
or
or
or
cmp
cmp
gs
les
gs
testl
test
les
enter
fmuls
loopne
add
les
in
xchg
loopne
mov
loopne
mov
dec
mov
call
nop
loopne
dec
mov
hlt
inc
or
sarb
les
add
dec
xchg
lock
mov
lock
nop
loopne
dec
and
add
mov
loopne
sub
push
cmp
inc
mov
dec
mov
xlat
sub
mov
cmp
and
dec
nop
loopne
dec
mov
loopne
inc
sub
dec
add
dec
mov
orb
dec
nop
loopne
dec
xchg
int3
dec
mov
mov
enter
mov
loopne
inc
or
sarb
les
add
xchg
dec
mov
dec
nop
loopne
dec
xchg
shrb
mov
inc
add
dec
mov
xlat
sub
mov
cmp
and
les
loopne
inc
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
mov
loopne
cmp
cmp
sub
push
cmp
dec
mov
test
les
cltd
pop
or
or
or
or
xchg
dec
sub
cmp
cmp
gs
les
xchg
gs
testl
xchg
mov
les
enter
mov
fmuls
loopne
dec
mov
and
add
les
and
add
and
inc
xor
xor
cmp
loopne
negl
xchg
dec
add
loopne
sub
scas
cmp
inc
add
divl
dec
mov
fsubrs
rorb
fadds
int3
les
xlat
sub
mov
cmp
loopne
xchg
inc
sub
dec
push
dec
add
inc
loopne
dec
mov
xor
cmp
mov
inc
add
dec
mov
xlat
sub
mov
cmp
loopne
xchg
add
pop
aaa
cmp
add
cmp
inc
pop
mov
inc
pop
in
sub
aaa
cmp
inc
xor
loopne
dec
add
scas
cmp
inc
add
dec
mov
xchg
mov
les
and
cmp
gs
les
testl
shlb
add
les
loopne
scas
les
dec
mov
in
xlat
pop
cmp
dec
nop
loopne
xchg
add
cmp
sub
sub
loopne
mov
les
or
inc
sub
dec
add
dec
xchg
rorb
dec
xchg
int3
dec
xchg
int3
dec
xchg
enter
in
xchg
enter
enter
jp
les
add
dec
xchg
aam
rorb
shrb
les
fcomps
or
or
or
dec
aam
xchg
rorb
dec
xchg
int3
dec
xchg
int3
dec
xchg
enter
enter
enter
jp
les
add
dec
xchg
aam
xchg
rorb
rolb
mov
inc
push
sarb
les
add
dec
xchg
fmull
in
xchg
in
loopne
mov
lcall
or
or
dec
aad
aam
xchg
rorb
dec
xchg
int3
dec
xchg
int3
dec
xchg
enter
enter
enter
jnp
les
add
dec
xchg
aam
xchg
rorb
rolb
mov
inc
push
sarb
les
add
dec
mov
dec
rorb
in
mov
dec
mov
fwait
pop
or
or
or
or
or
scas
cmp
gs
les
aam
add
addr16
les
and
les
loopne
dec
nop
loopne
dec
and
xchg
push
cmp
loopne
cmp
cmp
dec
mov
loopne
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
mov
int3
mov
les
pop
or
or
or
or
or
ret
gs
les
aam
add
addr16
les
and
les
loopne
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
test
loopne
inc
or
sarb
les
add
orb
lock
mov
xchg
dec
and
xchg
dec
nop
loopne
sub
std
les
loopne
xchg
add
cmp
sub
xor
cmp
loopne
mov
les
or
ret
gs
les
aam
add
addr16
les
and
les
loopne
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
cld
dec
mov
mov
inc
add
les
add
clc
dec
nop
loopne
dec
mov
xchg
dec
and
xchg
dec
nop
loopne
sub
cld
les
loopne
xchg
add
cmp
sub
stc
cmp
dec
mov
int3
mov
les
or
enter
cmp
or
or
or
or
inc
sub
cmp
or
or
or
or
dec
lds
movsb
int3
or
or
or
or
or
or
shrb
or
or
or
or
enter
cmp
or
or
or
or
dec
lds
movsb
enter
or
or
or
or
dec
mov
int3
dec
nop
loopne
xchg
dec
mov
aam
inc
cmp
mov
dec
inc
mov
inc
sub
inc
add
inc
cmp
mov
inc
xor
lret
jb
out
add
mov
lret
jb
mov
in
cmp
mov
lret
jb
lret
jb
out
add
mov
lret
jb
lret
jb
out
add
inc
or
lcall
or
or
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
ret
mov
enter
loopne
les
and
les
and
les
pop
cmp
dec
and
xchg
dec
or
and
les
xchg
cmp
inc
mov
leave
dec
mov
int3
xchg
sub
loope
les
rorb
ret
ret
mov
in
dec
leave
les
or
or
or
or
add
loopne
ret
mov
dec
adc
sub
loope
les
shl
add
les
in
adc
or
or
scas
cmp
gs
les
xchg
xchg
gs
testl
lock
les
loopne
negl
dec
fimull
rorb
clc
dec
lcall
fadd
aam
add
scas
fmuls
aam
add
test
pop
aam
les
rcr
les
les
cld
fadd
les
dec
cwtl
loopne
dec
imul
les
mov
xchg
dec
and
xchg
sub
into
les
loopne
xchg
add
ss
les
loopne
dec
cwtl
loopne
sub
sahf
cmp
inc
add
das
adc
add
loopne
mov
les
inc
add
push
rol
or
or
or
or
scas
fcoms
pop
or
or
or
or
or
or
or
inc
add
fldt
roll
cmp
dec
mov
inc
add
int
xchg
xchg
cmp
add
add
les
or
or
or
or
or
scas
cmp
gs
les
aam
add
addr16
les
loopne
xchg
add
les
ret
add
inc
cld
fadd
les
mov
insb
lds
dec
les
test
les
mov
scas
xchg
xchg
cmp
add
add
fadd
les
and
dec
inc
les
mov
insb
lds
dec
les
in
les
mov
scas
xchg
xchg
cmp
add
add
fadd
les
dec
adc
fcoms
sub
cmc
mov
enter
add
ret
xchg
cmp
clc
fs
and
cmp
cmp
dec
mov
inc
or
int3
inc
or
xor
add
aad
xchg
cmp
mov
int3
mov
les
push
rol
or
lods
inc
mov
les
xchg
gs
testl
mov
les
xor
cmp
add
subl
or
les
sahf
cmp
dec
mov
lret
jae
aam
sub
lret
inc
push
jmp
mov
inc
sub
lret
inc
or
les
in
mov
rorb
add
mov
dec
add
out
les
dec
aas
add
into
les
cmpl
sub
testl
into
les
cmpl
sub
lods
aam
les
jecxz
les
rorb
add
mov
xchg
xchg
sub
lods
les
dec
aas
add
int
les
cmpl
das
fwait
testl
int
les
cmpl
das
lea
mov
mov
adc
inc
add
iret
xchg
xchg
sub
test
cmp
das
testl
int
les
cmpl
das
aam
cmpl
jl
add
aam
dec
cltd
enter
lret
inc
arpl
les
int3
xchg
dec
mov
cmp
add
les
dec
aam
push
pushf
mov
sar
cwtl
mov
inc
cmp
jge
les
add
mov
mov
dec
xchg
int3
inc
or
xor
add
aad
xchg
cmp
les
cmpl
inc
xor
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
mov
dec
dec
push
aam
les
mov
inc
aam
les
int3
inc
add
jge
les
xor
add
les
les
dec
or
lret
jle
fidivl
cmp
xchg
cmp
pushf
fs
pop
dec
mov
mov
les
and
or
or
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
add
les
loopne
lret
inc
gs
les
int3
xchg
sub
pushf
cmp
dec
and
lret
jae
movsb
mov
add
out
or
nop
dec
aam
dec
mov
loopne
fsts
les
les
sbb
add
add
aam
jmp
nop
loopne
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
call
inc
add
enter
jle
les
add
les
les
xor
add
les
les
dec
adc
jle
fidivl
push
cmp
xchg
cmp
pushf
fs
and
cmp
cmp
dec
mov
loopne
xor
dec
add
lret
add
rorb
rorb
adc
push
cmp
int3
xor
add
ret
int3
dec
or
push
dec
mov
aam
dec
leave
les
aam
int3
les
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
add
les
loopne
lret
inc
js
les
int3
xchg
sub
xchg
cmp
dec
mov
in
and
xchg
lret
jae
movsb
mov
add
out
adc
adcb
sub
xchg
cmp
dec
nop
loopne
inc
jle
mov
aad
inc
rcr
les
mov
mov
rcr
les
cld
fadd
les
cld
fadd
les
sbb
add
add
aam
out
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
call
inc
add
enter
jle
les
add
les
les
xor
add
les
les
dec
adc
jle
fidivl
cmpsl
xchg
cmp
xchg
cmp
pushf
fs
and
cmp
cmp
dec
mov
loopne
xor
dec
add
lret
add
rorb
rorb
adc
push
cmp
int3
xor
add
ret
int3
dec
or
push
dec
mov
aam
dec
leave
les
aam
int3
les
or
or
or
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
add
les
loopne
les
fdivrl
cmp
cmp
loopne
inc
xor
inc
adc
les
rolb
xor
add
les
dec
xchg
dec
or
adc
mov
inc
push
cmp
add
les
dec
xchg
int3
dec
or
push
dec
mov
aam
dec
leave
les
aam
int3
les
int3
xchg
sub
xchg
cmp
inc
jp
fadd
mov
dec
mov
in
les
inc
mov
rcr
les
les
xor
add
les
les
dec
add
jle
fidivl
cmp
xchg
cmp
pushf
fs
and
cmp
cmp
dec
mov
loopne
xor
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
mov
aam
dec
leave
les
aam
int3
les
or
or
or
or
or
or
or
xchg
dec
sub
cmp
cmp
gs
les
xchg
gs
testl
mov
addr16
les
int3
dec
or
dec
and
sub
nop
cmp
dec
mov
dec
inc
fadd
les
loopne
dec
mov
aam
mov
ror
inc
xor
les
xchg
sub
mov
add
les
loopne
dec
nop
loopne
dec
int3
dec
push
dec
cwtl
loopne
dec
mov
in
and
dec
nop
loopne
inc
pop
mov
lcall
sub
out
les
loopne
std
nop
loopne
lret
inc
push
les
loopne
sub
mov
rorb
mov
call
inc
cmp
jge
les
add
mov
cmp
add
cmp
inc
or
xor
add
rorl
rorb
adc
mov
inc
push
cmp
add
ret
dec
xchg
int3
dec
or
push
inc
pop
mov
sub
out
testl
mov
mov
sub
out
les
dec
mov
aam
and
sub
dec
das
sbb
loopne
add
cmp
sub
xchg
cmp
inc
add
sub
dec
mov
dec
pop
fadd
pushl
mov
xchg
dec
mov
nop
xchg
sub
dec
nop
loopne
xchg
add
les
aam
les
loopne
add
cmp
sub
xchg
cmp
inc
add
das
or
aam
les
incl
mov
insb
lds
dec
les
in
incl
mov
scas
xchg
xchg
cmp
add
dec
pop
les
cld
fadd
incl
mov
insb
lds
dec
les
test
incl
mov
scas
xchg
xchg
cmp
add
dec
pop
cld
fadd
les
loopne
jl
les
xor
add
les
les
dec
adc
jle
fidivl
inc
add
incl
mov
xchg
xchg
sub
xchg
cmp
dec
or
add
dec
adc
jne
dec
xor
aaa
mov
xchg
cmp
clc
fs
add
dec
add
fs
mov
mov
dec
leave
les
and
or
or
or
or
or
or
or
xchg
dec
sub
ret
gs
les
enter
testl
mov
les
xor
cltd
enter
scas
shrb
mov
add
rorb
testl
sub
lcall
dec
cli
dec
adc
sbb
les
dec
xchg
dec
iret
dec
fcoml
xchg
xchg
xchg
xchg
xchg
sub
rol
dec
add
xor
les
and
mov
sub
lcall
sub
test
or
or
or
or
or
or
xchg
xchg
dec
test
enter
cmp
shrl
adc
mov
fsubr
add
add
cwtl
loopne
dec
add
aaa
mov
dec
pop
inc
mov
dec
mov
add
xchg
dec
and
xchg
cmp
cmp
enter
sar
aaa
mov
fwait
lcall
aam
testl
fwait
lcall
or
ret
gs
les
enter
testl
cld
mov
les
and
les
les
aam
repnz
cmp
xchg
add
outsl
dec
nop
loopne
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
nop
dec
mov
mov
inc
add
jle
les
add
and
dec
test
inc
add
add
cmp
dec
mov
pushf
inc
add
inc
xor
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
mov
cld
mov
les
push
int3
les
or
inc
sub
xchg
dec
and
xchg
dec
xor
incl
mov
dec
rorl
dec
aam
lret
dec
xchg
rorb
dec
xchg
rorb
dec
mov
enter
out
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
lcall
sub
xchg
dec
and
xchg
dec
xor
incl
mov
dec
rorl
dec
aam
lret
dec
xchg
rorb
dec
xchg
rorb
dec
mov
enter
out
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
lcall
sub
xchg
dec
and
xchg
dec
xor
incl
mov
dec
rorl
dec
aam
lret
dec
xchg
rorb
dec
xchg
rorb
dec
mov
enter
out
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
lcall
dec
sub
cmp
cmp
gs
les
les
ret
aam
add
les
les
int3
dec
mov
aam
mov
les
dec
mov
mov
inc
loopne
les
rol
lods
enter
dec
add
or
or
or
or
or
or
or
or
scas
cmp
gs
les
ret
aam
add
addr16
les
loopne
xchg
dec
pop
dec
imull
rol
add
les
mov
dec
mov
int3
xchg
dec
or
int3
les
dec
mov
enter
les
enter
or
or
or
or
or
or
or
scas
cmp
gs
les
ret
aam
add
addr16
les
loopne
xchg
dec
pop
dec
imull
rol
add
les
mov
dec
mov
int3
xchg
dec
or
ret
les
dec
mov
enter
les
enter
or
or
or
or
or
or
or
scas
cmp
gs
les
ret
aam
add
addr16
les
loopne
xchg
dec
pop
dec
imull
rol
add
les
mov
dec
mov
int3
xchg
dec
or
ret
les
dec
mov
enter
les
enter
or
or
or
or
or
or
or
xchg
dec
sub
ret
gs
les
xchg
gs
testl
mov
les
xor
cltd
int3
dec
sbb
subl
les
mov
incl
fs
les
fmull
fdivr
xchg
loopne
inc
and
les
mov
sub
fadd
les
faddl
mov
dec
les
testl
shlb
mov
xchg
rorb
dec
mov
int3
xchg
sub
push
les
dec
xor
adc
cmp
dec
repz
add
hlt
dec
sbb
sub
fadd
les
faddl
mov
dec
int3
das
testl
sub
fadd
les
fmull
fmuls
dec
xchg
fsubrs
dec
mov
dec
mov
cmp
inc
add
mov
int3
push
dec
mov
dec
mov
shrl
mov
xor
testl
sub
ffreep
les
xchg
xchg
sub
xchg
cmp
dec
mov
sub
cmpsl
cmp
dec
mov
dec
mov
cmp
inc
add
jae
les
mov
dec
leave
les
and
or
or
or
or
or
loopne
xchg
xchg
dec
xor
les
cmp
arpl
aam
ret
ret
sub
aaa
ret
cmp
aaa
ret
add
or
ret
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
in
sub
xchg
cmp
ret
ret
and
les
mov
inc
add
das
idivl
add
aam
mov
dec
mov
inc
or
dec
xchg
enter
or
xor
mov
dec
mov
dec
xchg
aam
xchg
cld
add
mov
ret
sub
aaa
ret
add
loopne
mov
les
aam
rol
or
or
or
dec
and
xchg
xchg
dec
xor
cmp
ret
ret
add
or
or
or
xchg
dec
xor
ret
sub
aaa
ret
cmp
arpl
aam
add
les
and
lds
xlat
mov
add
or
or
or
or
or
or
or
les
and
lds
xlat
mov
add
or
ret
ret
sub
aaa
ret
sub
arpl
aam
mov
inc
or
dec
xchg
aam
push
inc
add
ret
add
les
ret
ret
mov
dec
adc
sub
mov
and
les
and
les
adc
dec
or
or
xchg
dec
xor
ret
test
test
ret
test
test
aam
inc
cmp
cmp
cmp
gs
les
cmp
aam
add
addr16
les
scas
test
xor
add
dec
mov
enter
and
pushl
jecxz
addl
dec
or
cmp
cmp
clc
add
test
aam
ret
ret
sub
aaa
ret
les
mov
aam
dec
leave
les
aam
or
or
or
or
xchg
dec
sub
cmp
sub
mov
shrb
cmp
lods
enter
dec
and
xchg
add
ret
and
test
ret
and
mov
ret
insl
out
mov
xchg
idivl
xchg
dec
or
loopne
sub
test
cmp
sub
arpl
aam
mov
dec
mov
cmp
cmp
add
mov
ret
sub
aaa
ret
add
or
or
or
rol
les
add
or
or
or
or
or
xchg
dec
sub
ret
gs
les
xchg
gs
testl
mov
les
xor
xor
les
cmpl
sub
rol
les
rolb
fnstsw
les
rorb
dec
mov
add
inc
aaa
ret
mov
das
testl
leave
les
and
mov
sub
mov
scas
les
mov
xchg
dec
sub
ret
gs
les
xchg
gs
testl
mov
les
xor
xor
les
cmpl
sub
rol
les
rolb
fnstsw
les
rorb
dec
mov
add
pop
aaa
ret
mov
das
testl
leave
les
and
mov
sub
scas
les
mov
xchg
dec
sub
ret
gs
les
xchg
gs
testl
mov
les
xor
xor
les
cmpl
sub
rol
les
rolb
fnstsw
les
rorb
dec
mov
add
push
mov
das
testl
leave
les
and
mov
sub
mov
scas
les
mov
scas
cmp
gs
les
aam
add
addr16
les
loopne
xchg
dec
or
aas
cmp
testl
arpl
aam
and
lds
in
add
movsb
aaa
ret
les
cmp
aaa
ret
cmp
in
xchg
xchg
sub
cmp
inc
add
dec
add
loopne
mov
les
push
rol
or
or
xchg
dec
mov
inc
xor
xchg
sub
lret
mov
pop
or
or
or
or
xor
mov
lret
mov
pop
or
or
or
or
xor
mov
lret
inc
add
lcall
or
xchg
inc
xor
xchg
sub
lret
inc
add
popf
pop
or
or
or
or
or
xchg
inc
xor
mov
xchg
sub
lret
inc
add
popf
pop
or
or
or
or
or
scas
cmp
gs
les
enter
testl
aam
addr16
les
rolb
into
inc
mov
push
les
loopne
dec
mov
dec
mov
int3
dec
mov
enter
enter
jl
les
add
fadd
les
pushl
xor
jle
les
add
inc
or
int3
inc
push
cmp
add
lds
int3
cmp
dec
mov
add
cmp
inc
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
mov
aam
dec
leave
les
push
rol
or
or
or
xchg
inc
xor
mov
xchg
sub
leave
mov
pop
or
or
or
or
or
scas
cmp
gs
les
ret
aam
add
addr16
les
loopne
add
les
inc
mov
lret
dec
inc
test
les
inc
add
add
mov
les
inc
mov
les
inc
test
les
cwtl
mov
mov
dec
test
inc
push
cmp
add
lds
int3
cmp
add
jp
mov
mov
dec
add
or
int3
mov
dec
rorl
rorb
adc
mov
inc
push
cmp
add
ret
dec
xchg
int3
dec
or
push
dec
dec
je
les
and
int3
sub
xchg
cmp
push
mov
and
ret
sub
dec
les
mov
add
push
dec
les
mov
sub
mov
loopne
rorb
inc
cmp
inc
or
xor
add
rorl
rorb
adc
mov
inc
push
cmp
add
ret
dec
xchg
int3
dec
or
push
add
testl
dec
stc
clc
fs
add
xchg
cmp
testl
inc
add
xchg
cmp
testl
inc
add
xchg
cmp
add
cmp
dec
mov
inc
or
int3
inc
or
xor
add
aad
xchg
cmp
mov
enter
les
enter
or
or
or
scas
cmp
gs
les
ret
aam
add
addr16
les
loopne
dec
inc
xor
les
les
dec
les
adc
and
sub
dec
les
and
lds
adc
les
mov
dec
xchg
rolb
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
inc
pop
mov
and
les
mov
and
cmp
cmp
sub
cmp
cmp
loopne
mov
les
enter
or
or
or
or
or
ret
gs
les
ret
aam
add
addr16
les
loopne
add
les
pop
mov
mov
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
xchg
add
cmp
sub
cmp
cmp
loopne
mov
les
enter
or
or
or
or
or
or
xchg
dec
cwtl
loopne
dec
xchg
xchg
dec
cld
dec
les
rorb
rolb
fadd
mov
xchg
dec
mov
dec
jmp
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
xchg
sub
into
mov
cmp
scas
shlb
lahf
push
rol
or
or
inc
sub
cmp
or
or
or
or
inc
sub
cmp
or
or
or
or
inc
sub
cmp
or
or
or
or
scas
cmp
gs
les
gs
testl
shlb
les
loopne
dec
add
add
push
xor
or
cmp
pop
testl
cwtl
loopne
dec
cwtl
loopne
dec
nop
loopne
xchg
add
add
ret
lcall
lcall
jl
les
lcall
dec
mov
shlb
les
rolb
rol
or
or
or
aam
dec
test
aam
dec
xor
inc
xor
dec
pop
out
add
in
les
mov
rorb
sub
les
inc
add
in
pushl
mov
dec
les
dec
int3
addb
dec
xor
sbb
les
push
int3
les
lahf
popf
push
int3
les
or
or
cmp
sub
xchg
xchg
xchg
dec
xor
stos
aam
dec
mov
in
mov
ret
dec
and
lcall
leave
aam
les
loopne
dec
ret
xchg
xchg
xchg
xchg
dec
nop
loopne
xchg
sub
lea
cmp
hlt
les
les
dec
and
dec
and
xchg
add
les
cmp
dec
mov
aam
and
dec
and
add
les
cmp
dec
sub
mov
dec
nop
loopne
xchg
dec
and
dec
mov
fsubrl
cmp
dec
add
and
or
or
or
or
ret
gs
les
ret
aam
add
addr16
les
loopne
dec
add
add
push
xor
or
cmp
pop
testl
cwtl
loopne
dec
mov
add
or
ret
lcall
lcall
out
dec
lcall
test
lret
les
shrb
popf
shrb
cmp
jl
notl
mov
dec
xchg
xchg
dec
lcall
enter
les
enter
or
or
or
or
or
or
dec
test
add
clc
lds
aam
les
fadds
clc
mov
dec
test
fmuls
fadds
or
or
or
xchg
dec
sub
cmp
sub
xchg
xchg
xchg
dec
xor
stos
aam
dec
mov
push
lret
dec
fwait
enter
and
lcall
mov
mov
aam
ret
xchg
xchg
xchg
xchg
dec
nop
loopne
xchg
sub
cmpl
inc
mov
dec
and
and
dec
and
xchg
add
les
std
cmp
dec
mov
aam
and
dec
and
add
les
std
cmp
dec
nop
loopne
dec
sub
les
dec
cwtl
loopne
sub
std
cmp
dec
sub
and
dec
and
xchg
dec
cwtl
loopne
sub
std
cmp
dec
mov
aam
sub
dec
and
dec
cwtl
loopne
sub
std
cmp
dec
nop
loopne
dec
stos
out
xchg
dec
test
rorb
loopne
sub
std
cmp
dec
add
dec
sub
and
rol
les
idiv
mov
dec
mov
loopne
xchg
dec
int3
dec
and
dec
cwtl
loopne
sub
std
cmp
inc
mov
mov
das
dec
cmp
mov
rorb
loopne
dec
and
xchg
sub
cld
cmp
dec
mov
aam
adcb
and
mov
les
cld
cmp
dec
add
and
sub
cmp
cmp
gs
les
xchg
gs
testl
in
addr16
les
dec
or
mov
les
enter
inc
mov
add
mov
dec
dec
mov
decl
lret
inc
mov
les
dec
fnstsw
inc
mov
les
inc
mov
incl
mov
rol
les
cmp
lret
inc
and
cld
sub
iret
mov
and
divl
dec
mov
in
incl
mov
xchg
sub
aas
cmp
dec
xor
cwtl
loopne
xchg
dec
mov
fmuls
loopne
sub
rol
les
xchg
xchg
sub
mov
les
enter
in
les
loopne
inc
add
inc
jl
les
mov
les
mov
aas
cmp
inc
add
inc
pop
les
loopne
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
in
mov
mov
inc
add
jge
les
add
pop
in
cmp
dec
push
mov
les
loopne
dec
mov
fmull
mov
les
mov
dec
add
sysenter
lret
add
rorb
rorb
adc
mov
dec
pop
xor
add
ret
int3
dec
or
push
dec
inc
mov
incl
mov
cmp
cmp
jl
jecxz
les
loopne
mov
les
and
and
dec
cwtl
loopne
sub
sarb
cmp
add
mov
in
dec
leave
les
and
or
or
or
or
or
or
or
xchg
dec
sub
cmp
cmp
gs
les
xchg
xchg
gs
testl
cld
mov
les
dec
test
fmuls
fcoms
sub
cmp
dec
inc
dec
mov
mov
add
loopne
dec
les
loopne
dec
sbb
mov
lcall
iret
mov
lret
inc
push
les
lret
inc
jnp
les
iret
mov
shlb
mov
mov
dec
mov
call
inc
xor
jle
les
add
test
les
mov
inc
sub
dec
add
dec
mov
rolb
enter
jge
les
add
loopne
pop
int
les
and
cmp
cmp
inc
xor
inc
or
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
inc
pop
mov
sub
into
mov
shlb
mov
loopne
dec
mov
loopne
out
cmp
dec
sub
dec
das
sbb
cmp
les
xor
add
les
les
dec
adc
jle
fidivl
inc
add
inc
add
jecxz
xchg
sub
cld
cmp
dec
or
add
dec
adc
jne
dec
xor
xor
clc
fs
add
dec
add
fs
mov
cld
mov
les
dec
and
scas
cmp
gs
les
les
enter
testl
or
les
les
testl
cld
dec
js
sbb
les
loopne
les
xor
add
aam
shl
xor
vpunpckhbw
and
les
shrl
int
mov
addb
loopne
les
ljmp
rolb
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
inc
mov
inc
mov
and
xchg
dec
jo
and
les
std
cmp
dec
cld
dec
mov
dec
mov
out
mov
jl
xchg
jbe
sub
ret
dec
push
add
pushl
int3
mov
lods
xor
mov
jge
les
loopne
aaa
popa
dec
outsl
sbb
les
les
loopne
dec
cmp
popa
inc
add
call
rolb
xor
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
dec
loopne
les
in
dec
mov
loopne
inc
sub
dec
mov
loopne
inc
sub
dec
add
dec
push
loopne
dec
xchg
rorb
cld
jp
add
aam
mov
mov
inc
add
les
add
clc
dec
mov
add
in
lds
xor
int3
aam
jb
xchg
dec
int3
xchg
dec
js
dec
les
lock
inc
sub
dec
or
inc
loopne
dec
add
loopne
sub
nop
les
loopne
testl
loopne
sub
into
les
loopne
les
loopne
dec
hlt
sub
xchg
les
or
add
loopne
les
loopne
inc
add
inc
dec
mov
add
sub
dec
test
hlt
dec
test
lock
test
in
test
loopne
inc
loopne
xor
add
add
aam
xchg
jge
les
loopne
mov
and
cmp
dec
aam
push
dec
mov
rorb
mov
loopne
dec
inc
dec
mov
repz
add
adc
loopne
les
inc
loopne
lret
cmp
dec
inc
loopne
les
xor
add
aam
inc
mov
les
cmp
sub
dec
inc
mov
xlat
dec
xchg
aam
dec
mov
fcoms
dec
cld
dec
test
dec
mov
mov
dec
mov
jle
les
add
loopne
inc
loopne
loopne
dec
mov
mov
dec
xor
add
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
inc
cmp
in
add
adc
lret
cmp
dec
test
loopne
mov
cmp
inc
jg
mov
ja
mov
scas
pushf
sub
rol
inc
add
dec
and
add
adc
int3
inc
add
int3
xchg
sub
xor
cmp
testl
inc
loopne
into
les
loopne
inc
sub
dec
xchg
dec
cmp
loopne
xchg
sub
idivb
cmp
loopne
sub
sbb
cmp
dec
test
dec
and
out
dec
mov
dec
ret
call
ret
hlt
dec
xor
scas
les
lock
mov
xchg
sub
mov
mov
nop
loopne
mov
adcl
add
les
rolb
rol
les
mov
dec
add
or
int3
mov
dec
rorl
rorb
adc
mov
inc
push
cmp
add
ret
dec
xchg
int3
dec
or
push
dec
mov
lock
sub
dec
add
dec
mov
rolb
enter
jl
les
add
test
out
cmp
fmull
loopne
dec
sub
aam
add
loopne
inc
sub
dec
and
dec
xchg
dec
cmp
loopne
xchg
jp
mov
add
les
nop
loopne
gs
int3
aam
jb
xchg
dec
shll
int3
aam
jb
xchg
xchg
xchg
dec
and
xchg
sub
xchg
cmp
inc
add
xchg
dec
hlt
sub
xchg
cmp
jge
jecxz
les
loopne
dec
xchg
les
loopne
xchg
dec
cmovge
xchg
cmp
add
adc
loopne
inc
xor
inc
or
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
test
loopne
inc
loopne
rolb
call
or
xor
add
xchg
les
rorb
adc
mov
inc
push
cmp
add
add
or
push
add
adc
les
loopne
inc
xor
inc
or
int3
mov
dec
rorb
rorb
adc
push
cmp
int3
xor
add
ret
int3
dec
or
push
add
adc
les
cmp
cmp
loopne
les
mov
inc
or
xor
add
rorb
rorb
adc
push
cmp
int3
xor
add
ret
int3
dec
or
push
dec
dec
loopne
les
les
inc
add
les
aam
dec
aaa
sub
fstpt
cmp
scas
cmp
gs
les
aam
add
addr16
les
loopne
dec
adc
add
les
cmp
add
les
loopne
mov
les
push
rol
dec
sub
cmp
cmp
gs
les
xchg
gs
testl
hlt
mov
les
sub
xor
les
int3
std
test
mov
inc
std
daa
mov
dec
jg
mov
loopne
sub
idivb
cmp
and
les
loopne
inc
xor
dec
xchg
dec
cmp
loopne
xchg
sub
jmp
cmp
sub
sbb
cmp
mov
xlat
dec
xchg
aam
dec
mov
in
dec
push
add
mov
inc
and
les
mov
and
add
add
iret
dec
xor
sub
cmp
dec
xor
divl
add
dec
mov
fmuls
loopne
sub
lods
cmp
xchg
dec
and
xchg
xchg
sub
xchg
les
enter
cld
dec
and
inc
add
sahf
dec
dec
mov
mov
dec
nop
loopne
inc
sub
dec
add
dec
mov
in
mov
dec
and
dec
mov
mov
inc
add
jle
les
add
loopne
lds
inc
sub
dec
int3
dec
cmp
loopne
xchg
sub
jmp
cmp
loopne
sub
out
cmp
and
lds
loopne
inc
xor
inc
or
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
mov
xchg
sub
idivb
cmp
or
les
pmaddwd
cmp
les
xor
add
les
les
dec
adc
jle
fidivl
div
cmp
xchg
cmp
pushf
fs
and
les
loopne
inc
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
add
cmp
dec
mov
in
inc
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
mov
hlt
mov
les
and
or
or
scas
cmp
gs
les
xchg
xchg
gs
testl
in
mov
les
dec
mov
cld
dec
and
add
les
mov
les
les
hlt
dec
test
faddl
lret
inc
dec
les
and
les
loopne
inc
cmp
inc
or
int3
mov
dec
rorl
rorb
adc
mov
inc
push
cmp
add
ret
dec
xchg
int3
dec
or
push
sub
fistpll
cmp
and
cmp
cmp
dec
mov
clc
inc
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
mov
in
mov
les
inc
add
push
int3
les
inc
mov
mov
ret
dec
dec
mov
ret
aam
dec
nop
loopne
xchg
dec
or
adc
and
movb
in
mov
dec
cwtl
loopne
dec
mov
mov
dec
mov
inc
push
cmp
add
ret
dec
xchg
rorb
push
dec
or
or
int3
mov
dec
rorl
int3
dec
or
adc
and
les
loopne
inc
cmp
inc
idivb
cmp
dec
mov
inc
push
cmp
add
cmp
cmp
dec
xchg
rorb
push
dec
or
or
int3
lret
inc
int
cmp
dec
rorl
int3
dec
or
adc
aas
cmp
cmp
mov
sub
dec
mov
dec
add
lock
in
dec
mov
rolb
int
xchg
rorb
lret
add
in
xchg
xchg
sub
fdivrs
cmp
hlt
dec
mov
loopne
xor
inc
or
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
add
cmp
inc
dec
cmp
cmp
rolb
xor
add
cmp
cmp
dec
xchg
dec
or
adc
mov
inc
push
cmp
add
cmp
cmp
dec
xchg
int3
dec
or
push
sub
or
or
or
sarl
cmp
or
sbb
ret
dec
dec
push
mov
push
mov
pop
mov
les
les
popf
pop
or
or
or
or
or
or
ret
gs
les
xchg
gs
testl
fsubs
les
add
les
loopne
add
les
add
les
rolb
and
les
les
ljmp
les
mov
je
les
dec
and
inc
xor
mov
mov
fdivr
mov
mov
sub
cmp
les
loopne
inc
add
sub
test
les
les
xor
add
les
les
dec
pop
xor
jle
fidivl
cmp
xchg
cmp
pushf
fs
add
loopne
mov
les
add
push
int3
les
das
pop
or
or
or
or
or
or
or
or
aam
add
mov
rclb
dec
and
sub
xchg
cmp
dec
nop
loopne
call
mov
dec
and
dec
ret
dec
mov
dec
mov
enter
inc
xor
inc
or
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
es
or
or
ret
gs
les
gs
testl
in
mov
les
loopne
add
les
and
mov
les
loopne
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
movsb
dec
mov
mov
inc
add
les
add
mov
nop
loopne
dec
mov
xchg
xchg
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
movsb
dec
mov
mov
inc
add
jge
les
add
call
les
loopne
dec
mov
test
dec
mov
dec
aam
xchg
int3
dec
mov
dec
mov
inc
or
sarb
les
add
dec
mov
dec
mov
dec
mov
inc
or
sarb
les
add
dec
sbb
mov
rclb
les
iret
cmp
add
and
inc
add
call
rolb
xor
add
ret
dec
xchg
rorb
push
dec
or
or
int3
mov
dec
rorl
int3
dec
or
adc
and
les
loopne
inc
cmp
inc
push
cmp
add
ret
dec
xchg
rorb
push
dec
or
or
int3
mov
dec
rorl
int3
dec
or
adc
add
loopne
mov
les
in
pop
or
or
or
or
or
or
or
inc
sub
xchg
dec
xor
dec
mov
enter
int3
sub
rol
xchg
dec
and
xchg
xchg
sub
clc
les
loopne
inc
add
decl
mov
dec
and
dec
rorl
loopne
dec
ret
dec
mov
dec
and
dec
add
mov
int3
inc
xor
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
inc
add
pop
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
add
les
loopne
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
clc
dec
mov
mov
inc
add
les
add
test
int3
dec
nop
loopne
dec
mov
call
dec
add
dec
nop
loopne
dec
xchg
rorb
clc
dec
mov
mov
inc
add
jge
les
add
les
and
les
loopne
inc
xor
inc
or
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
add
cmp
dec
mov
hlt
inc
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
add
loopne
mov
les
aam
fadd
or
or
or
or
ret
gs
les
ret
aam
add
addr16
les
and
les
loopne
dec
mov
fcoms
dec
int3
dec
nop
loopne
dec
xchg
rorb
call
inc
add
enter
jge
les
add
add
les
loopne
dec
nop
loopne
dec
xchg
int3
dec
or
add
aam
add
jge
les
add
call
add
mov
in
xchg
aam
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
and
add
cmp
inc
add
call
rolb
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
add
loopne
mov
les
push
fadd
or
or
or
or
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
add
les
loopne
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
call
inc
add
enter
jge
les
add
cmp
add
cmp
dec
mov
loopne
xor
inc
or
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
add
loopne
mov
les
aam
enter
or
xchg
dec
sub
ret
gs
les
enter
testl
mov
les
xor
xor
les
cmpl
sub
xor
les
rolb
fnstsw
les
rorb
dec
mov
add
cmp
ret
mov
das
testl
leave
les
and
mov
inc
xor
les
les
shrb
into
mov
or
or
xchg
dec
mov
inc
xor
les
les
rcrb
or
or
lods
xchg
test
mov
les
enter
testl
mov
les
xor
xor
les
cmpl
sub
xor
les
rolb
fnstsw
les
rorb
dec
mov
add
enter
dec
mov
das
testl
leave
les
and
mov
inc
xor
les
dec
int
les
or
ret
gs
les
cmp
aam
add
addr16
les
loopne
negl
dec
cwtl
loopne
dec
mov
pushl
mov
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
adc
pop
mov
xchg
sub
sub
les
rorb
xchg
dec
fwait
aam
fwait
rorb
fsubrl
sub
les
rorb
aam
dec
leave
les
add
push
rol
or
or
or
or
int3
inc
or
sahf
les
or
les
rolb
rorl
inc
add
jmp
cmp
rolb
rol
les
xchg
dec
mov
inc
xor
les
mov
mov
dec
cmp
sub
sub
les
rclb
lret
les
mov
dec
adc
pop
mov
xchg
sub
sub
les
rorb
xchg
dec
lcall
fsubrl
sub
les
les
int3
dec
add
or
or
or
or
or
or
dec
or
add
aam
add
xchg
sub
sarl
add
les
rolb
dec
lret
jmp
cmp
rolb
rol
les
or
or
or
or
or
or
or
or
ret
gs
les
ret
aam
add
addr16
les
and
les
loopne
inc
sub
dec
add
dec
mov
lock
mov
dec
mov
lock
mov
mov
inc
add
les
add
cld
dec
mov
dec
mov
call
dec
les
or
push
add
cmp
dec
and
inc
add
call
rolb
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
mov
enter
les
push
rol
or
xchg
xchg
dec
cmp
mov
dec
lds
aam
push
dec
mov
dec
xor
adc
xchg
xchg
sub
mov
cmp
rolb
enter
xchg
dec
mov
sub
fidivrl
cmp
aam
sub
mov
xchg
xchg
xchg
sub
mov
cmp
enter
dec
sub
lcall
lods
scas
ret
gs
les
les
cmp
aam
add
sub
xchg
xchg
xchg
dec
xorl
les
xor
or
dec
mov
mov
xchg
cmp
ds
inc
mov
incl
lret
inc
stos
out
add
test
lret
inc
mov
cmp
mov
lods
mov
dec
pushf
cmp
cmp
cmp
dec
inc
pushf
cmp
cmp
cmp
cmpl
cmp
lods
mov
ret
aam
dec
sub
cmp
xchg
sub
ret
dec
rorl
loopne
rorb
rorb
dec
mov
dec
mov
dec
xchg
enter
cmp
cmp
aam
pop
lock
les
cmpl
cmp
cmp
in
dec
mov
cmp
cmp
scas
in
push
lret
dec
or
jno
cmp
cmp
mov
sub
xor
rorb
cmp
cmp
cmpl
xlat
dec
xchg
inc
dec
mov
dec
xchg
clc
xchg
sub
cmp
dec
xor
divl
add
mov
lods
mov
dec
clc
cmp
cmp
cmp
dec
dec
clc
cmp
cmp
cmp
add
sarb
cmp
push
add
cmp
xchg
sub
rol
dec
inc
mov
dec
mov
dec
adc
imul
dec
inc
mov
lds
cmpl
xchg
dec
xchg
xchg
dec
mov
adc
mov
xor
cmp
dec
mov
dec
sbb
dec
mov
mov
inc
dec
test
cmp
sub
aas
cmp
dec
jno
cmp
cmp
les
les
cmpsb
scas
shrl
pushf
cmp
cmp
inc
mov
cmp
lret
les
test
cmp
dec
push
cwtl
cmp
cmp
lcall
cmp
xchg
dec
dec
sarb
cmp
add
sarl
cmp
inc
sarb
cmp
xchg
sub
rol
dec
addl
mov
jl
aas
testl
leave
les
mov
or
cs
and
or
or
or
or
or
or
xchg
dec
add
les
mov
les
mov
les
mov
xor
inc
es
adc
ds
add
testl
or
or
or
or
or
or
or
sub
or
or
or
or
or
or
xchg
in
dec
lcall
dec
push
aaa
outsb
xchg
inc
ds
ret
sub
aas
mov
shrl
mov
xchg
in
mov
inc
add
dec
testb
outsb
sub
cmp
les
aam
mov
inc
add
testb
dec
push
aaa
outsb
xchg
inc
ds
enter
mov
add
fwait
lcall
les
rcrb
or
or
or
ret
gs
les
ret
aam
add
addr16
les
loopne
dec
add
add
push
xor
imul
testl
mov
and
dec
mov
add
fs
aam
and
add
les
shrb
test
sub
cwtl
cmp
jle
les
add
loopne
mov
les
push
rol
or
or
or
or
or
clc
inc
add
dec
test
pop
or
or
or
xchg
dec
sub
cmp
sub
xchg
xchg
xchg
dec
xor
dec
lcall
dec
stos
aam
stos
enter
mov
lret
dec
mov
fmull
enter
aam
mov
mov
sub
xor
les
loopne
dec
nop
loopne
dec
ret
xchg
xchg
xchg
xchg
dec
and
xchg
sub
in
cmp
inc
inc
mov
dec
mov
aam
and
dec
and
add
les
fistpll
cmp
loopne
xchg
dec
cwtl
loopne
add
les
fistpll
cmp
test
dec
cmp
rorl
das
movl
rorb
loopne
xchg
dec
mov
shrb
fistpll
cmp
fwait
lcall
or
or
or
or
or
ret
gs
les
ret
aam
add
addr16
les
loopne
dec
add
add
push
xor
push
cmp
pop
testl
cwtl
loopne
dec
mov
add
push
lcall
sub
dec
lcall
lcall
test
lret
les
shrb
popf
shrb
cmp
add
mov
xchg
xchg
dec
lcall
les
shrb
popf
shrb
cmp
jl
les
lcall
enter
les
enter
or
or
or
or
dec
test
add
clc
lds
aam
les
leave
clc
mov
dec
test
fadds
inc
mov
dec
xchg
lods
xchg
xchg
fmuls
fadds
or
or
or
or
or
or
cmp
sub
xchg
xchg
xchg
dec
xor
stos
aam
dec
mov
je
mov
fwait
enter
and
lcall
pop
sub
les
loopne
dec
ret
xchg
xchg
xchg
xchg
dec
nop
loopne
xchg
sub
in
cmp
inc
mov
dec
and
and
dec
and
xchg
add
les
fnstsw
cmp
loopne
dec
and
dec
and
add
les
fnstsw
cmp
loopne
dec
sub
les
dec
cwtl
loopne
sub
fnstsw
cmp
in
dec
and
dec
and
xchg
dec
cwtl
loopne
sub
fnstsw
cmp
loopne
dec
sub
dec
and
dec
cwtl
loopne
sub
fnstsw
cmp
loopne
dec
stos
out
xchg
dec
test
rorb
loopne
sub
fnstsw
cmp
les
lret
incb
mov
dec
sub
and
rol
les
idiv
mov
dec
mov
loopne
xchg
dec
int3
dec
and
dec
cwtl
loopne
sub
fnstsw
cmp
mov
stos
mov
das
dec
cmp
mov
rorb
loopne
dec
and
xchg
sub
fnstsw
cmp
loopne
dec
adcb
and
mov
les
mov
dec
xchg
lods
dec
adcb
aam
and
xchg
dec
cwtl
loopne
sub
fdivrl
cmp
lods
std
stos
test
rorl
das
movl
aam
dec
mov
rorb
loopne
sub
fdivrl
cmp
fwait
lcall
or
or
or
or
or
or
or
ret
gs
les
ret
aam
add
addr16
les
loopne
dec
add
add
push
xor
outsl
cmp
testl
mov
and
mov
mov
add
jl
ret
push
mov
add
les
shrb
test
sub
pushf
cmp
jle
les
add
loopne
mov
les
push
rol
or
xchg
dec
sub
cmp
sub
xchg
xchg
xchg
dec
xor
xchg
dec
lcall
dec
stos
aam
stos
enter
mov
mov
lret
dec
mov
fmull
enter
aam
mov
mov
sub
sub
les
loopne
dec
nop
loopne
dec
ret
xchg
xchg
xchg
xchg
dec
and
xchg
sub
loope
cmp
mov
dec
and
mov
les
dec
test
fsubrl
sarl
cmp
loopne
dec
and
dec
and
dec
test
fsubrl
sarl
cmp
loopne
xchg
dec
cwtl
loopne
dec
test
fsubrl
mov
clc
mov
dec
mov
das
movl
aam
dec
mov
rorb
loopne
sub
sarl
cmp
fwait
lcall
or
or
xchg
dec
sub
cmp
sub
xchg
xchg
xchg
dec
sbb
scas
aam
dec
mov
je
mov
mov
dec
ret
dec
and
pushl
pop
das
mov
mov
aam
ret
xchg
xchg
xchg
xchg
dec
nop
loopne
xchg
sub
loope
cmp
in
and
dec
and
xchg
add
les
add
and
or
or
scas
cmp
gs
les
ret
aam
add
addr16
les
loopne
dec
add
add
push
xor
outsb
cmp
testl
mov
and
dec
and
dec
nop
loopne
xchg
add
adc
ret
and
sub
dec
mov
dec
sub
iret
cmpb
jl
les
add
loopne
mov
les
push
rol
or
or
or
or
or
or
xchg
xchg
dec
cwtl
loopne
xchg
dec
test
aam
dec
xor
inc
xor
dec
pop
out
add
in
les
test
les
rorb
sub
sub
cmp
inc
add
in
pushl
mov
dec
les
dec
int3
addb
dec
sub
sbb
les
push
int3
les
lahf
popf
push
int3
les
or
or
cmp
sub
xchg
xchg
xchg
dec
xor
stos
aam
dec
mov
test
mov
fwait
enter
and
lcall
jmp
mov
aam
ret
xchg
xchg
xchg
xchg
dec
nop
loopne
xchg
sub
out
cmp
in
and
dec
and
xchg
add
les
mov
aam
and
rol
les
dec
test
fsubrl
sarl
cmp
loopne
dec
lcall
dec
test
fsubrl
sarl
cmp
inc
pop
mov
dec
mov
dec
and
xchg
dec
mov
rorb
loopne
sub
sarl
cmp
fwait
lcall
or
or
or
or
or
or
or
cmp
cmp
gs
les
xchg
gs
testl
pushf
mov
les
inc
mov
mov
enter
cmp
and
xchg
sub
sub
les
rorb
hlt
xchg
dec
nop
loopne
xchg
sub
jl
cmp
int3
dec
xor
mov
loop
cmp
loopne
dec
mov
fmull
add
les
int3
dec
dec
add
mov
dec
dec
mov
les
mov
pushl
les
dec
sarb
inc
mov
les
inc
mov
incl
mov
xchg
inc
or
das
enter
les
dec
lret
jae
push
mov
lret
inc
daa
les
ffree
les
mov
les
mov
les
or
out
push
decl
inc
lret
dec
dec
or
xchg
sub
xor
cmp
lret
inc
in
les
or
lock
test
xchg
dec
mov
loopne
sub
add
les
loopne
inc
or
les
int3
dec
add
dec
nop
loopne
dec
xchg
rorb
in
dec
mov
mov
inc
add
jge
les
add
pop
sarb
dec
push
or
lds
mov
loopne
dec
mov
in
add
dec
inc
push
mov
mov
dec
mov
dec
adc
add
ret
rorb
push
dec
or
or
add
rorb
int3
dec
or
adc
sti
dec
inc
mov
les
mov
out
or
cmp
int3
dec
dec
or
les
in
les
inc
inc
or
les
jle
les
mov
les
les
mov
incl
mov
js
cmp
jl
in
les
loopne
mov
les
and
and
dec
mov
xor
cmp
add
mov
pushf
mov
les
and
or
or
or
or
or
or
or
ret
gs
les
xchg
xchg
gs
testl
mov
les
loopne
dec
test
mov
testl
fmull
loopne
add
les
loopne
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
or
or
and
int
cmp
dec
xchg
sub
lret
jae
lret
jae
inc
add
inc
add
inc
cmp
lret
inc
and
loopne
cld
lret
scas
subb
mov
add
dec
and
add
add
int3
xchg
sub
xor
cmp
testl
and
int
cmc
call
loopne
inc
add
inc
push
les
loopne
dec
pop
sub
test
hlt
add
les
and
int3
sub
sub
cmp
loopne
add
add
cmp
dec
and
add
jl
cmp
dec
and
add
outsb
sub
cmp
loopne
add
pop
sub
cmp
loopne
add
dec
sub
cmp
loopne
add
inc
sub
cmp
loopne
add
mov
cmp
dec
and
add
mov
sbb
les
out
adc
ror
cltd
cmp
cmp
les
shr
dec
mov
pushl
cmp
idivl
decl
mov
dec
mov
dec
pop
lret
jb
jmp
sub
loop
les
loopne
cmp
loopne
sub
loopne
dec
mov
jecxz
les
scas
cld
sub
daa
mov
add
dec
and
add
add
int3
xchg
sub
pop
cmp
das
testl
and
int
dec
out
les
loopne
inc
add
inc
push
cmp
cmp
out
or
ror
or
cmp
dec
xchg
les
add
xchg
dec
add
adc
cmp
dec
mov
jecxz
les
scas
in
sub
daa
mov
add
dec
and
add
add
leave
dec
xor
sub
cmp
loopne
das
testl
and
int
pop
out
les
loopne
inc
add
inc
scas
cmp
cmp
xor
ror
movsb
cmp
cmp
les
loopne
add
loopne
sub
loop
les
scas
mov
add
mov
add
dec
and
add
add
int3
xchg
sub
xor
cmp
testl
and
int
add
les
loopne
inc
cmp
inc
lret
cmp
cmp
out
adc
ror
cmp
cmp
les
rorb
or
loopne
cmp
cmp
cmp
les
dec
xchg
in
inc
cmp
lret
inc
sbb
cmp
dec
mov
orl
in
inc
ds
add
cmp
dec
add
or
inc
cmp
cmp
cmp
les
lds
add
ror
push
cmp
cmp
les
call
popf
dec
adc
adc
mov
add
out
xor
pushl
cmp
add
les
mov
dec
mov
dec
nop
loopne
lret
jb
out
xchg
sub
loopne
les
loopne
lret
jb
hlt
test
loopne
incl
xchg
hlt
dec
mov
mov
inc
cmp
lret
inc
in
cmp
cmp
dec
adcl
loopne
sub
loope
les
scas
subb
rorb
mov
lret
mov
xchg
sub
xor
cmp
testl
and
int
shr
les
loopne
inc
add
inc
pop
cmp
cmp
out
or
lret
inc
add
cmp
mov
add
dec
or
or
cmp
cmp
cmp
add
lret
jae
out
xor
xor
cmp
notl
idivl
mov
fimuls
in
lret
jb
jmp
sub
out
les
loopne
lret
jae
loop
ds
dec
and
dec
mov
loopne
les
scas
loopne
pop
and
les
inc
add
dec
mov
mov
lret
inc
xor
xchg
add
push
xor
cmp
jge
les
ret
ret
sbb
les
add
testl
and
int
ja
les
dec
mov
loopne
les
scas
lock
and
les
rorb
mov
aam
add
int3
xchg
sub
xor
cmp
testl
and
int
xor
les
loopne
inc
add
inc
pop
aas
cmp
dec
adc
adc
ror
jb
cmp
dec
mov
inc
add
dec
adc
adc
loopne
ds
fs
cmp
dec
mov
dec
mov
inc
cmp
lret
inc
dec
aas
cmp
inc
add
dec
adc
adc
adc
cmp
inc
or
dec
add
xor
cmp
loopne
dec
mov
out
les
loopne
dec
and
dec
dec
mov
enter
jle
les
add
test
dec
mov
lock
les
mov
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
add
mov
nop
inc
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
add
mov
loopne
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
add
mov
clc
inc
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
add
mov
addb
out
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
add
mov
mov
mov
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
add
mov
call
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
add
cmp
inc
or
int3
mov
dec
rorl
rorb
adc
mov
inc
push
cmp
add
ret
dec
xchg
int3
dec
or
push
dec
pop
dec
mov
mov
les
inc
add
mov
aam
int3
aam
int
aam
enter
enter
enter
enter
int
aam
enter
into
aam
iret
aam
iret
aam
or
or
or
or
cmp
cmp
gs
les
xchg
gs
testl
hlt
mov
les
dec
sbb
in
adc
cmp
dec
inc
dec
mov
mov
dec
mov
and
dec
les
loopne
dec
mov
aam
sbb
les
mov
pushl
mov
sub
sbb
lcall
add
les
mov
sub
sbb
testl
sub
sbb
les
enter
dec
and
dec
mov
in
inc
xor
jle
les
add
cld
lret
jae
in
add
lret
inc
fcmovb
les
loopne
call
ret
inc
sub
dec
or
dec
mov
rolb
enter
jge
les
add
int
les
inc
sub
dec
or
dec
mov
rolb
enter
jl
les
add
loope
les
inc
sub
dec
or
dec
mov
rolb
enter
jle
les
add
pop
enter
push
les
int3
dec
or
dec
mov
rolb
enter
jge
les
add
lret
das
mov
sub
dec
or
dec
mov
rolb
enter
jl
les
add
rol
les
mov
int3
dec
or
dec
mov
rolb
enter
jle
les
add
fadd
les
loopne
sub
dec
or
dec
mov
rolb
enter
jge
les
add
ffree
les
and
cmp
cmp
inc
xor
inc
or
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
and
inc
add
fsubrs
sbb
testl
sub
sbb
les
dec
mov
aam
loop
cmp
dec
les
and
loopne
xchg
sub
cmp
loopne
jl
les
xor
add
les
les
dec
adc
jle
fidivl
inc
add
inc
add
jecxz
xchg
sub
iret
cmp
dec
or
add
dec
adc
jne
dec
xor
xor
clc
fs
add
dec
add
fs
mov
hlt
mov
les
and
stc
lret
aam
lret
aam
lret
aam
aam
aam
aam
aam
aam
aam
aam
aam
lret
aam
aam
aam
lret
aam
aam
aam
aam
aam
or
or
ret
gs
les
les
enter
testl
add
les
les
testl
les
loopne
les
xor
add
aam
divl
dec
add
jo
adc
les
ret
loopne
negb
insb
lds
out
dec
xchg
rolb
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
inc
pop
lret
inc
pop
dec
and
xchg
dec
jo
sbb
les
enter
cld
dec
mov
dec
mov
out
mov
jl
xchg
jbe
sub
ret
dec
push
add
pushl
pop
mov
and
lods
xor
mov
jge
les
loopne
aaa
popa
dec
pop
sbb
les
les
loopne
dec
aas
aaa
popa
inc
add
call
rolb
xor
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
dec
loopne
les
in
dec
mov
loopne
inc
sub
dec
mov
loopne
inc
sub
dec
add
dec
push
loopne
dec
xchg
rorb
call
les
test
or
sarb
les
add
hlt
dec
mov
add
fadd
lds
cmp
int3
aam
jb
xchg
dec
mov
xchg
dec
js
push
les
ret
cmp
inc
sub
dec
or
inc
loopne
dec
add
loopne
sub
jecxz
les
loopne
testl
loopne
sub
loopne
les
loopne
les
loopne
dec
mov
sub
loope
les
or
dec
loop
les
inc
loopne
les
loopne
inc
add
call
rolb
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
add
or
les
cmp
cmp
loopne
les
lret
inc
jo
les
rolb
xor
add
les
xor
add
add
aam
inc
add
les
les
loopne
mov
mov
cmp
dec
aam
push
dec
mov
rorb
mov
loopne
dec
inc
dec
mov
int
cmp
inc
loopne
rorb
lock
pop
mov
scas
cld
add
int3
sbb
les
rorb
faddl
inc
loopne
mov
xchg
sub
or
cmp
das
divl
add
or
rclb
mov
call
cmp
xchg
xchg
sub
faddp
les
enter
or
loopne
inc
add
mov
loopne
add
or
shrb
cmp
dec
and
add
or
les
cmp
dec
inc
loopne
les
xor
add
aam
inc
mov
les
cmp
sub
dec
nop
loopne
xchg
xchg
dec
and
sub
or
cmp
mov
inc
sub
dec
mov
dec
cmp
loopne
xchg
sub
sarl
dec
cvttps2pi
jne
cmp
loopne
add
dec
mov
in
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
lock
mov
mov
inc
add
jge
les
add
sub
xor
cmp
fmull
dec
mov
aam
or
loopne
inc
sub
dec
cmp
loopne
xchg
jg
mov
dec
and
dec
mov
nop
sub
sarl
dec
rol
lret
int3
aam
leave
cmp
int3
aam
add
lret
jb
lret
jb
xchg
xchg
dec
and
xchg
xchg
sub
in
cmp
dec
and
inc
add
xchg
dec
mov
sub
in
cmp
dec
xorl
les
loopne
dec
and
dec
mov
lock
dec
or
out
cmp
add
or
rorb
call
dec
xor
add
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
add
or
les
loopne
inc
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
das
ret
dec
xor
aaa
cmp
add
or
les
cmp
cmp
loopne
les
mov
dec
xchg
rolb
xor
add
rorb
rorb
adc
push
cmp
int3
xor
add
ret
int3
dec
or
push
dec
dec
loopne
les
les
inc
add
les
aam
or
or
or
or
or
cmp
cmp
gs
les
xchg
gs
testl
test
les
dec
cwtl
loopne
sub
add
les
int3
std
test
mov
inc
std
daa
mov
mov
dec
jg
mov
loopne
sub
ret
add
les
loopne
inc
xor
dec
xchg
dec
cmp
loopne
xchg
sub
cmp
dec
or
je
cmp
rclb
sub
ret
cmp
dec
ja
mov
je
les
dec
or
mov
fmull
loopne
dec
mov
loopne
nop
loopne
inc
or
mov
sub
adc
std
mov
in
lret
inc
or
mov
loopne
inc
call
rorb
mov
lock
cwtl
loopne
inc
pop
mov
dec
pop
jle
les
add
mov
inc
jp
mov
shrl
cmp
dec
and
inc
sub
inc
add
dec
cmp
loopne
xchg
sub
cmp
dec
or
xor
cmp
and
les
mov
dec
pop
inc
push
cmp
add
dec
xchg
rorb
push
dec
xchg
inc
or
int3
mov
dec
xlat
dec
xchg
dec
adc
and
inc
add
lock
adc
testl
mov
mov
sub
adc
les
dec
cwtl
loopne
dec
mov
loopne
dec
and
dec
mov
in
dec
mov
loopne
loopne
cmp
dec
les
or
les
pop
or
loopne
les
push
mov
and
dec
dec
mov
loopne
dec
nop
loopne
dec
mov
xchg
inc
add
sub
pop
cmp
dec
and
xor
add
add
aam
into
dec
mov
loopne
sub
bound
cmp
les
xor
add
les
les
dec
add
jle
fidivl
cmp
xchg
cmp
pushf
fs
dec
call
loopne
cmp
cmp
dec
mov
hlt
inc
xor
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
mov
test
les
and
or
or
or
or
or
or
or
ret
gs
les
xchg
xchg
gs
testl
loopne
addr16
negl
dec
mov
cld
dec
and
dec
cwtl
loopne
sub
in
les
and
lds
loopne
pushl
lret
inc
dec
les
call
aas
mov
dec
add
or
int3
mov
dec
rorl
rorb
adc
mov
inc
push
cmp
add
ret
dec
xchg
int3
dec
or
push
dec
mov
lock
sub
cmp
and
cmp
cmp
dec
mov
clc
pushl
mov
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
mov
loopne
dec
leave
les
inc
add
push
enter
clc
dec
stos
in
dec
add
inc
cmp
mov
jge
les
mov
dec
add
rclb
xchg
sub
bound
cmp
enter
inc
cld
cmp
cmp
ror
jmp
cmp
testl
add
pop
lret
inc
fstpt
cmp
scas
shrb
sub
sti
cmp
dec
mov
int3
dec
add
dec
mov
sar
mov
dec
add
les
add
clc
scas
lds
cmp
call
sarb
cmp
dec
add
or
int3
lret
inc
ret
cmp
dec
xchg
dec
or
adc
mov
inc
push
cmp
add
cmp
cmp
dec
xchg
int3
dec
or
push
sub
or
or
or
ret
gs
les
gs
testl
in
addr16
les
dec
mov
hlt
dec
and
add
les
in
les
and
lds
loopne
inc
xor
in
les
loopne
inc
xor
inc
jmp
les
rolb
xor
add
dec
rorb
rorb
adc
mov
inc
push
cmp
add
dec
ret
int3
dec
or
push
sub
dec
mov
dec
ret
dec
test
xchg
dec
nop
loopne
xchg
dec
or
adc
and
movb
fadd
mov
add
mov
fadds
mov
dec
mov
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
and
les
loopne
das
scas
inc
sub
dec
add
dec
mov
fmuls
loopne
dec
mov
inc
xor
jle
les
add
in
les
add
mov
mov
dec
mov
inc
push
cmp
add
ret
dec
xchg
rorb
push
dec
or
or
int3
mov
dec
rorl
int3
dec
or
adc
and
les
mov
inc
push
cmp
shlb
aad
fimull
dec
xchg
rorb
push
inc
or
xor
add
rorb
int3
dec
or
adc
and
cmp
cmp
dec
mov
lock
xor
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
mov
in
dec
leave
les
in
int3
les
or
or
or
or
scas
cmp
gs
les
xchg
gs
testl
in
mov
les
dec
mov
cld
dec
and
add
les
fcmovb
les
les
hlt
dec
mov
faddl
mov
add
mov
fadds
lret
inc
lock
dec
add
or
int3
lret
inc
loopne
les
dec
xchg
dec
or
adc
mov
inc
push
cmp
add
dec
ret
int3
dec
or
push
sub
dec
mov
dec
ret
dec
test
xchg
dec
nop
loopne
xchg
dec
or
adc
and
dec
and
inc
add
test
hlt
dec
mov
loopne
xor
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
and
les
loopne
das
stos
inc
jl
mov
jb
sub
dec
add
dec
mov
loopne
mov
rolb
int
mov
dec
pop
xor
add
in
scas
les
dec
cwtl
loopne
dec
mov
mov
dec
mov
inc
push
cmp
add
ret
dec
xchg
rorb
push
dec
or
or
int3
mov
dec
rorl
int3
dec
or
adc
and
les
mov
dec
mov
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
and
cmp
cmp
dec
mov
clc
inc
xor
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
mov
in
mov
les
add
push
int3
les
or
or
or
or
or
or
or
ret
gs
les
les
cmp
aam
add
loopne
les
enter
testl
pusha
les
les
loopne
les
loopne
add
push
les
loopne
les
loopne
sub
fadd
les
dec
test
dec
and
inc
add
enter
jle
les
add
pushf
add
push
dec
and
dec
cwtl
loopne
inc
add
call
rolb
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
inc
pop
lret
inc
lret
les
rol
les
pushf
mov
loopne
sub
cmp
cmp
inc
loopne
dec
nop
loopne
inc
push
lret
inc
arpl
les
or
mov
lods
add
les
loopne
xchg
xchg
sub
pusha
cmp
dec
or
and
sub
ffreep
les
inc
loopne
rorb
test
mov
dec
xor
add
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
inc
mov
inc
pop
les
inc
loopne
dec
mov
hlt
inc
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
add
push
dec
mov
cld
inc
xor
dec
add
lret
add
rorb
rorb
adc
push
cmp
int3
xor
add
ret
int3
dec
or
push
scas
pushf
sub
shufps
add
dec
and
add
push
inc
add
inc
ret
les
dec
xor
aas
rol
add
les
and
les
and
les
inc
loopne
out
lds
xchg
cmp
and
ret
or
mov
dec
aad
inc
push
mov
out
or
test
cmp
das
aad
cmp
lock
les
lods
call
xchg
ret
jae
dec
mov
fmuls
loopne
dec
push
loopne
les
faddp
testl
mov
in
add
push
dec
jge
mov
dec
jne
mov
loopne
dec
mov
fmuls
inc
xor
shrl
mov
sub
inc
lods
add
xor
inc
addr16
les
or
testl
sub
or
les
enter
dec
and
dec
mov
test
mov
dec
xchg
sarb
les
add
xchg
dec
nop
loopne
xchg
add
jo
int3
sub
ffree
les
loopne
xchg
dec
mov
loopne
int
out
faddp
les
rolb
mov
inc
loopne
int3
dec
mov
mov
dec
mov
inc
push
cmp
add
ret
dec
xchg
rorb
push
dec
or
or
int3
mov
dec
rorl
int3
dec
or
adc
and
lds
mov
sub
dec
and
dec
mov
leave
les
inc
loopne
int3
dec
mov
mov
dec
mov
inc
push
cmp
add
ret
dec
xchg
rorb
push
dec
or
or
int3
mov
dec
rorl
int3
dec
or
adc
inc
loopne
mov
dec
mov
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
mov
jmp
inc
add
in
scas
shufps
add
lods
shlb
mov
test
loopne
mov
fsubrs
dec
les
es
and
dec
mov
hlt
inc
add
inc
in
lret
jae
loopne
inc
cmp
lret
inc
es
les
inc
loopne
loopne
inc
xor
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
aam
std
js
pop
les
inc
les
les
shl
jp
les
loopne
les
loopne
les
inc
loopne
std
mov
dec
nop
loopne
xchg
sub
pop
mov
add
dec
mov
mov
dec
mov
hlt
dec
test
mov
pushl
mov
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
add
push
dec
mov
cld
pushl
sub
mov
out
dec
mov
call
add
dec
mov
rolb
enter
jl
les
add
clc
sub
pusha
cmp
dec
mov
call
add
dec
mov
rolb
enter
jl
les
add
hlt
dec
or
cmp
dec
loopne
cwtl
loopne
dec
jg
mov
loopne
dec
dec
mov
and
sub
dec
cmp
loopne
inc
add
xchg
sub
xor
cmp
sub
sub
fmuls
dec
mov
idivl
xchg
dec
push
loopne
les
les
fmull
rclb
sub
in
cmp
inc
sub
dec
or
inc
loopne
into
dec
mov
xchg
dec
inc
loopne
les
fmull
rclb
ja
cmp
dec
dec
xchg
rolb
rorb
add
and
add
push
dec
mov
aas
mov
dec
add
or
int3
mov
dec
rorl
rorb
adc
mov
inc
push
cmp
add
ret
dec
xchg
int3
dec
or
push
jnp
std
js
pop
les
inc
les
inc
add
dec
push
les
loopne
les
inc
std
mov
dec
mov
lods
xchg
sub
add
rorb
mov
dec
cwtl
loopne
add
push
pushl
mov
dec
xchg
rolb
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
add
push
dec
mov
cld
pushl
sub
divl
add
push
xchg
dec
mov
loopne
mov
in
xor
cmp
xchg
dec
and
xchg
xchg
sub
int
les
enter
push
dec
and
inc
add
lret
loopne
sub
daa
cmp
sub
dec
loopne
mov
dec
nop
loopne
add
loopne
dec
xchg
dec
test
dec
xchg
call
dec
xchg
call
nop
loopne
scas
cmp
dec
mov
in
xchg
scas
les
lock
sub
jecxz
cmp
mov
fsubs
nop
loopne
add
les
loopne
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
in
dec
mov
mov
inc
add
jge
les
add
hlt
scas
lds
cmp
inc
loopne
lds
loopne
inc
xor
dec
add
lret
add
rorb
rorb
adc
push
cmp
int3
xor
add
ret
int3
dec
or
push
add
push
dec
mov
movsb
inc
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
add
push
cmp
cmp
loopne
les
mov
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
dec
loopne
les
les
dec
dec
loopne
testl
les
pop
les
enter
or
or
or
scas
cmp
gs
les
xchg
gs
testl
fsubs
les
loopne
dec
and
add
les
xlat
les
and
lds
loopne
les
loopne
dec
mov
rolb
lret
inc
push
les
rolb
xor
add
les
dec
xchg
dec
or
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
das
mov
dec
jns
mov
rolb
mov
dec
mov
fsubrl
test
les
dec
xor
push
iret
cmp
dec
mov
dec
add
hlt
add
mov
rolb
mov
dec
mov
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
and
cmp
cmp
dec
mov
lock
xor
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
mov
fsubs
les
add
push
enter
or
ret
gs
les
enter
testl
shlb
les
loopne
dec
and
add
les
les
and
lds
loopne
les
fadd
dec
mov
enter
mov
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
das
orb
loopne
adc
xlat
ja
cmp
and
les
loopne
inc
xor
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
and
cmp
cmp
dec
mov
call
dec
mov
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
mov
shlb
les
push
enter
or
or
or
or
or
or
or
ret
gs
les
xchg
xchg
gs
testl
andb
idivl
dec
mov
pushf
dec
and
dec
mov
aad
std
mov
add
mov
lock
lret
inc
sub
les
rolb
xor
add
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
mov
dec
ret
sub
divl
dec
mov
loopne
add
mov
nop
dec
insl
sarb
inc
add
dec
mov
loopne
int
test
fmuls
loopne
dec
sbb
mov
lcall
pop
mov
cmp
inc
into
add
pop
mov
sub
pop
mov
add
mov
mov
mov
dec
or
and
dec
mov
clc
inc
xor
jle
les
add
mov
dec
mov
mov
mov
add
xchg
dec
das
js
xor
jle
les
add
call
dec
mov
call
dec
add
lret
add
xchg
les
rorb
adc
mov
inc
push
cmp
add
add
or
push
add
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
inc
mov
call
sub
push
mov
add
mov
pusha
push
mov
sti
dec
mov
call
dec
test
fsubrs
dec
das
sbb
loopne
inc
mov
test
lock
inc
outsb
dec
and
inc
mov
and
les
mov
add
dec
and
add
add
into
xchg
sub
repnz
les
das
divl
add
dec
mov
loopne
mov
in
push
ffree
les
xchg
xchg
sub
mov
inc
add
add
and
inc
add
xchg
dec
mov
hlt
dec
xchg
loopne
sub
dec
xchg
movsb
dec
add
dec
mov
rolb
enter
jge
les
add
loopne
ds
les
loopne
dec
mov
xchg
xchg
dec
mov
loopne
xor
les
dec
xor
mov
cmp
dec
mov
dec
add
hlt
add
mov
in
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
mov
call
lds
mov
dec
xchg
rolb
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
add
sub
inc
or
int3
mov
dec
xchg
les
rorb
adc
mov
inc
push
cmp
add
add
int3
cmp
add
cmp
dec
mov
cwtl
inc
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
mov
andb
les
inc
add
push
enter
loopne
inc
mov
inc
sub
dec
add
dec
mov
rolb
enter
jge
les
add
hlt
sub
icebp
les
dec
mov
in
sub
repnz
les
or
or
or
or
or
or
or
lods
sarl
les
xchg
gs
testl
mov
les
xor
cltd
enter
xchg
xchg
sub
sbb
idivl
dec
mov
push
mov
pop
mov
add
sbb
ret
mov
cmp
dec
inc
add
les
cmpl
cmp
dec
pop
or
or
les
dec
mov
mov
cmpl
cmp
dec
push
xor
les
sub
sub
cmp
shrl
rorb
add
mov
xchg
jnp
in
les
pop
cmp
das
testl
shrl
cmp
add
les
aam
cmpl
jl
ljmp
inc
jp
mov
sti
scas
shrl
adc
subl
add
les
sbbl
cmp
adc
cmp
sub
daa
cmp
lods
mov
ret
aam
mov
sub
adc
les
les
dec
mov
mov
les
and
pop
or
or
or
or
or
or
or
or
aam
shl
dec
or
call
loopne
dec
xchg
rorb
xchg
xchg
dec
mov
rclb
mov
inc
add
push
rol
or
or
ret
gs
les
cmp
aam
add
addr16
les
loopne
dec
mov
xchg
sub
mov
testl
rorb
fmull
rorb
dec
sub
sub
and
int3
dec
mov
add
cmp
ret
add
xor
aam
mov
dec
lds
aam
push
dec
mov
dec
xor
adc
xchg
xchg
sub
fdivrl
cmp
enter
rorb
aam
adc
cmp
aam
sub
mov
xchg
xchg
xchg
sub
sarl
cmp
call
mov
dec
add
loopne
mov
les
add
push
rol
or
or
or
les
sub
js
les
inc
add
inc
xor
sub
xor
rcrb
aam
les
pop
fwait
testl
or
or
or
or
dec
test
inc
sub
xchg
inc
add
enter
jp
les
add
int3
call
mov
dec
lret
dec
mov
dec
add
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
add
or
xchg
dec
xor
adc
cmp
dec
jp
dec
dec
mov
les
mov
xor
inc
es
adc
ds
add
testl
enter
xchg
sub
jb
les
rcrb
les
or
or
or
xchg
dec
xor
les
fmull
xor
inc
es
xchg
dec
jl
adc
ds
add
testl
enter
xchg
sub
jno
les
rcrb
les
or
or
or
or
or
or
or
cmp
sub
xchg
dec
sbb
xchg
dec
mov
inc
ds
int3
dec
lret
loopne
das
ret
loopne
dec
or
mov
inc
ds
rorb
dec
add
add
aam
rorb
dec
add
rol
adc
push
mov
sub
js
les
aam
or
inc
cmp
enter
cmp
mov
inc
add
sar
mov
sub
js
out
mov
loopne
dec
adc
xchg
scas
lds
les
faddl
aam
rorb
dec
cmp
mov
inc
cmp
ret
dec
add
add
mov
dec
repnz
xchg
rol
adc
ds
sub
js
les
loopne
xchg
dec
mov
rorb
loopne
dec
mov
dec
or
dec
nop
loopne
fwait
lcall
dec
and
or
or
or
or
ret
gs
les
testl
shlb
dec
and
dec
mov
dec
adc
lret
adc
clc
les
inc
cmp
dec
push
rol
les
lock
aam
test
mov
ret
mov
shlb
les
rol
or
or
or
or
or
loopne
dec
xor
shrl
test
rolb
cmp
adc
add
sub
inc
add
les
sbb
cmp
sbb
pop
mov
dec
mov
xchg
xchg
dec
or
lock
inc
pop
lret
inc
pop
les
faddl
aam
testb
dec
nop
loopne
das
hlt
inc
pop
mov
dec
lcall
dec
add
fcompl
cltd
push
enter
rcrb
add
dec
mov
dec
mov
rolb
aam
rorl
das
dec
mov
dec
xchg
shr
adc
adc
add
xchg
or
les
loopne
inc
add
xchg
xchg
xchg
dec
or
in
cmp
inc
mov
shlb
add
fadd
lahf
fwait
dec
add
dec
add
rcr
lahf
fwait
dec
add
or
or
xchg
dec
mov
cmp
shrl
mov
ret
mov
dec
xchg
shrb
dec
xchg
rorb
xchg
dec
lods
rol
cs
or
or
mov
dec
test
das
movl
shrl
mov
mov
lcall
or
or
inc
sub
xchg
dec
xor
dec
mov
aam
mov
enter
les
xchg
xchg
sub
cmp
dec
mov
rolb
enter
enter
int3
dec
rorl
loopne
dec
ret
dec
mov
dec
and
dec
add
mov
enter
out
dec
mov
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
inc
add
pop
or
or
or
or
inc
sub
xchg
dec
xor
dec
mov
aam
mov
enter
cmp
xchg
dec
and
xchg
xchg
sub
cmp
dec
mov
rolb
enter
enter
int3
dec
rorl
loopne
dec
ret
dec
mov
dec
and
dec
add
mov
enter
out
dec
mov
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
inc
add
pop
or
or
or
or
inc
sub
xchg
dec
xor
dec
mov
aam
mov
enter
cmp
xchg
dec
and
xchg
xchg
sub
cmp
loopne
inc
add
decl
mov
dec
and
dec
rorl
loopne
dec
ret
dec
mov
dec
and
dec
add
mov
enter
out
dec
mov
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
inc
add
pop
or
or
or
or
inc
sub
xchg
dec
xor
dec
mov
aam
mov
enter
les
xchg
xchg
sub
cmp
loopne
inc
add
decl
mov
dec
and
dec
rorl
loopne
dec
ret
dec
mov
dec
and
dec
add
mov
enter
out
dec
mov
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
inc
add
pop
or
or
or
or
inc
sub
xchg
dec
xor
dec
mov
aam
mov
enter
les
xchg
xchg
sub
cmp
cmp
loopne
inc
add
decl
mov
dec
and
dec
rorl
loopne
dec
ret
dec
mov
dec
and
dec
add
mov
enter
out
dec
mov
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
inc
add
pop
or
or
or
or
inc
sub
xchg
dec
xor
dec
mov
aam
mov
enter
les
xchg
xchg
sub
cmp
cmp
loopne
inc
add
decl
mov
dec
and
dec
rorl
loopne
dec
ret
dec
mov
dec
and
dec
add
mov
enter
out
dec
mov
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
inc
add
pop
or
or
or
or
inc
sub
xchg
dec
xor
dec
mov
aam
mov
enter
les
xchg
xchg
sub
xor
cmp
loopne
inc
add
decl
mov
dec
and
dec
rorl
loopne
dec
ret
dec
mov
dec
and
dec
add
mov
enter
out
dec
mov
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
inc
add
pop
or
or
or
or
scas
cmp
gs
les
gs
testl
in
mov
les
loopne
add
les
and
mov
les
loopne
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
movsb
dec
mov
mov
inc
add
les
add
mov
nop
loopne
dec
mov
xchg
xchg
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
movsb
dec
mov
mov
inc
add
jge
les
add
call
les
loopne
dec
mov
test
dec
mov
dec
aam
xchg
int3
dec
mov
dec
mov
inc
or
sarb
les
add
dec
mov
dec
mov
dec
mov
inc
or
sarb
les
add
dec
sbb
mov
rclb
les
add
cmp
and
lds
loopne
inc
add
call
rolb
xor
add
ret
dec
xchg
rorb
push
dec
or
or
int3
mov
dec
rorl
int3
dec
or
adc
and
les
loopne
inc
cmp
inc
push
cmp
add
ret
dec
xchg
rorb
push
dec
or
or
int3
mov
dec
rorl
int3
dec
or
adc
add
loopne
mov
les
in
pop
or
or
or
or
or
or
or
scas
cmp
gs
les
gs
testl
clc
mov
les
loopne
add
les
and
les
loopne
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
mov
nop
loopne
dec
xchg
enter
mov
inc
push
mov
inc
push
sarb
les
add
inc
les
aam
push
loopne
les
rorb
loopne
les
mov
inc
push
sarb
les
add
dec
les
fmull
rorb
xchg
dec
mov
clc
sub
aad
cmp
dec
add
and
les
loopne
xchg
add
outsb
pop
cmp
dec
and
xchg
add
les
and
les
pop
cmp
dec
add
loopne
mov
les
clc
push
loopne
or
or
or
or
or
or
or
ret
gs
les
xchg
xchg
gs
testl
loopne
addr16
les
loopne
testl
loopne
inc
cmp
shrb
fs
mov
cld
dec
and
testl
nop
loopne
lret
push
add
dec
mov
fmull
loopne
mov
das
inc
add
dec
and
dec
add
pop
aam
cmp
xor
add
aam
lock
sub
dec
cmp
loopne
dec
xor
loopne
sub
int3
les
les
enter
int3
les
loopne
xchg
add
cmp
sub
imul
das
testb
dec
mov
mov
loopne
sub
lret
dec
mov
dec
mov
sub
int3
les
loopne
xchg
add
les
push
cmp
dec
mov
loopne
dec
leave
les
inc
add
push
hlt
les
dec
aam
rorb
inc
or
sarb
les
add
or
or
fsubl
cmp
aam
add
loopne
xchg
dec
ss
jae
dec
and
xchg
xchg
add
les
mov
in
add
dec
add
outsb
mov
add
pop
or
or
scas
cmp
gs
les
ret
aam
add
addr16
les
loopne
dec
mov
fadds
ret
les
add
les
and
les
fmull
rolb
mov
dec
std
das
dec
cmp
ds
dec
int
cmp
xchg
dec
or
add
loopne
mov
les
enter
or
or
ret
gs
les
xchg
gs
testl
mov
les
loopne
xchg
dec
mov
fsubrs
mov
negl
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
add
cwtl
loopne
dec
stos
fmull
rolb
mov
dec
ret
dec
add
rol
push
dec
and
incl
mov
inc
cmp
mov
dec
lret
dec
or
or
aad
cmp
mov
dec
lret
dec
or
adc
sub
jne
les
faddl
aam
rorb
dec
sub
das
mov
inc
cmp
ret
dec
add
add
mov
dec
repnz
mov
or
sub
jne
les
loopne
dec
and
xchg
xchg
xchg
xchg
xchg
dec
mov
call
les
ret
les
fmull
loopne
dec
sbb
and
cmp
cmp
sub
les
dec
mov
mov
les
add
or
or
or
xchg
xchg
dec
xor
testl
dec
and
sub
sub
xor
xor
cmp
cmp
addb
rol
or
or
or
scas
cmp
gs
les
enter
testl
shlb
les
dec
mov
dec
cwtl
loopne
dec
mov
pushl
mov
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
or
pop
mov
xchg
sub
insl
mov
add
dec
ret
xchg
dec
fwait
enter
dec
fwait
shrb
add
dec
mov
shlb
les
add
pop
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
add
les
loopne
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
clc
dec
mov
mov
inc
add
les
add
test
int3
dec
nop
loopne
dec
mov
call
dec
add
dec
nop
loopne
dec
xchg
rorb
clc
dec
mov
mov
inc
add
jge
les
add
les
and
les
loopne
inc
xor
inc
or
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
add
cmp
dec
mov
hlt
inc
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
add
loopne
mov
les
aam
fadd
or
or
or
or
ret
gs
les
ret
aam
add
addr16
les
scas
shrb
mov
or
add
das
testl
mov
dec
add
loopne
mov
les
push
rol
or
or
or
enter
int
sub
arpl
les
rorb
add
les
adc
les
adc
les
arpl
les
rcrb
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
add
les
loopne
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
hlt
dec
mov
mov
inc
add
jge
les
add
cmp
add
cmp
dec
mov
in
inc
xor
inc
or
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
add
loopne
mov
les
aam
enter
or
scas
cmp
gs
les
ret
aam
add
addr16
les
and
les
loopne
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
in
dec
mov
mov
inc
add
jge
les
add
call
xor
cmp
dec
and
dec
or
and
dec
or
add
aam
add
jge
les
add
call
add
mov
in
xchg
aam
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
and
add
cmp
inc
add
call
rolb
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
add
loopne
mov
les
push
fadd
or
or
or
or
or
or
or
or
mov
dec
or
adc
adc
cmp
ret
testb
push
rol
cmp
or
enter
xchg
les
les
jnp
add
dec
rorb
enter
fwait
dec
xchg
shlb
push
rol
or
or
xchg
dec
xor
add
int
sub
pusha
mov
add
add
les
adc
les
adc
les
or
or
cmp
cmp
gs
les
cmp
aam
add
addr16
les
ret
mov
aam
and
lret
les
and
les
and
les
sarl
cmp
loopne
xchg
dec
mov
in
add
les
or
cmp
mov
in
xchg
add
ret
out
jp
les
or
or
xchg
dec
sub
ret
gs
les
enter
testl
mov
les
xor
xor
les
cmpl
sub
insl
mov
add
inc
add
fnstsw
les
rorb
dec
mov
add
inc
xor
aam
mov
das
testl
leave
les
and
mov
inc
xor
les
pop
jns
les
or
sub
ret
dec
ret
dec
sub
mov
dec
mov
dec
add
or
or
or
or
or
or
ret
gs
les
ret
aam
add
addr16
les
hlt
dec
xor
loopne
dec
add
and
les
loopne
sub
ret
dec
and
dec
nop
loopne
dec
sub
mov
mov
xchg
xchg
sub
int3
les
loopne
xchg
add
les
jge
cmp
loopne
mov
les
push
lock
or
ret
gs
les
aam
add
addr16
les
in
dec
mov
mov
add
les
loopne
sub
sarl
dec
and
dec
mov
test
push
int3
les
loopne
xchg
add
les
mov
int3
mov
les
hlt
les
or
or
or
or
or
or
or
scas
cmp
gs
les
enter
testl
aam
addr16
les
loopne
testl
les
rorb
loopne
dec
mov
dec
and
xchg
dec
mov
fcoms
les
lret
dec
mov
rolb
int3
xchg
xchg
xchg
dec
add
mov
cmp
dec
mov
aam
dec
leave
les
pop
or
or
ret
gs
les
les
aam
add
les
les
loopne
les
loopne
les
sbb
les
les
les
les
loopne
sub
dec
mov
enter
add
les
mov
dec
and
xchg
add
add
les
cmp
cmp
dec
pop
dec
dec
loopne
les
les
les
or
or
or
xchg
dec
sub
ret
gs
les
enter
testl
mov
les
xor
xor
les
cmpl
sub
mov
add
inc
add
fnstsw
les
rorb
dec
mov
add
push
xor
aam
mov
das
testl
leave
les
and
mov
inc
xor
fadd
les
les
shrb
jle
les
or
or
or
or
loopne
inc
sub
inc
or
dec
rorb
push
push
xchg
sub
mov
add
inc
add
pop
inc
or
notl
xor
and
and
xchg
dec
mov
rolb
loopne
les
fs
mov
loopne
xchg
add
ret
mov
les
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
loopne
add
les
mov
dec
or
and
sub
mov
dec
sti
xchg
sub
fs
andb
rorl
dec
lds
and
cmp
cmp
dec
mov
inc
xor
inc
xor
cmp
les
rorb
aam
dec
leave
les
aam
rol
or
or
ret
gs
les
gs
testl
shlb
les
dec
mov
aam
and
testl
fmuls
loopne
dec
and
dec
nop
loopne
dec
mov
hlt
dec
or
xchg
aam
sbb
and
dec
xchg
in
nop
loopne
dec
mov
cld
dec
mov
dec
mov
dec
mov
dec
mov
dec
xchg
lock
cmp
mov
test
dec
addb
dec
sbbb
dec
mov
dec
aam
mov
add
dec
mov
dec
mov
lds
les
loopne
xchg
xchg
dec
or
and
sub
int3
mov
add
loopne
mov
les
rolb
loopne
or
or
or
mov
dec
or
xor
cmp
les
rcrb
or
or
rolb
rorb
lds
or
or
scas
cmp
gs
les
ret
aam
add
addr16
les
dec
mov
int3
add
les
les
xchg
sub
pop
mov
add
dec
mov
enter
les
pop
or
or
or
or
or
or
or
or
xor
les
mov
inc
xor
ffree
les
les
rcrb
or
or
ret
gs
les
enter
testl
aam
addr16
les
scas
shrb
mov
or
add
das
testl
mov
dec
add
loopne
mov
les
pop
or
or
or
xchg
dec
sbb
inc
xor
aam
xor
sub
xor
cmp
xchg
pushl
mov
dec
xchg
xchg
sub
pop
mov
add
fwait
lcall
les
xchg
les
xchg
les
or
or
or
xchg
dec
mov
int3
xchg
dec
mov
mov
dec
cmp
int3
sub
aaa
cmp
inc
add
lcall
or
or
or
or
or
lods
and
ret
gs
les
enter
testl
mov
les
xor
xor
les
cmpl
sub
data16
add
inc
add
fnstsw
les
rorb
dec
mov
add
insb
xor
aam
mov
das
testl
leave
les
and
or
les
push
or
or
or
lods
add
ret
gs
les
enter
testl
mov
les
xor
xor
les
cmpl
sub
gs
add
inc
add
fnstsw
les
rorb
dec
mov
add
js
ret
mov
das
testl
leave
les
and
mov
inc
xor
les
fdivl
les
or
lods
fs
ret
gs
les
enter
testl
mov
les
xor
xor
les
cmpl
sub
gs
add
inc
add
fnstsw
les
rorb
dec
mov
add
adc
ret
mov
das
testl
leave
les
and
mov
sub
ret
les
dec
jno
les
or
or
or
lods
and
ret
gs
les
enter
testl
mov
les
xor
xor
les
cmpl
sub
fs
add
inc
add
fnstsw
les
rorb
dec
mov
add
and
ret
mov
das
testl
leave
les
and
mov
inc
xor
int
les
les
shrb
jo
les
or
or
or
or
ret
gs
les
xchg
gs
testl
in
addr16
les
loopne
idivl
dec
and
dec
mov
loopne
dec
and
xchg
dec
adcl
xor
add
dec
mov
fmull
loopne
dec
mov
hlt
add
xor
dec
cmp
loopne
dec
add
loopne
sub
cmp
cmp
loopne
les
in
dec
inc
loopne
les
call
les
dec
fcoml
ret
pop
sub
sub
cmp
loopne
xchg
add
les
je
cmp
loopne
mov
les
add
push
lock
or
or
or
or
or
ret
gs
les
gs
testl
fsubs
les
loopne
dec
and
add
les
loopne
dec
and
xchg
jl
les
push
cmp
dec
xor
add
dec
mov
rolb
and
les
loopne
add
xor
dec
mov
cwtl
dec
add
loopne
sub
cmp
cmp
xchg
sub
mov
das
testl
loopne
mov
and
lret
push
add
inc
add
dec
and
xchg
xchg
sub
push
cmp
dec
mov
adcb
les
je
cmp
loopne
mov
les
fadds
hlt
les
or
or
or
or
or
or
or
dec
mov
rolb
inc
or
dec
rorb
rclb
inc
add
inc
add
pop
inc
or
notl
xor
and
xchg
dec
mov
rolb
loopne
les
pop
mov
mov
loopne
xchg
add
ret
sbb
les
or
or
or
inc
mov
dec
sub
sub
pop
mov
add
xchg
negl
add
les
clc
dec
lcall
mov
xchg
sub
pop
mov
add
dec
mov
xchg
dec
lcall
fsubrl
pop
mov
sub
pop
mov
add
dec
add
or
or
or
or
or
or
xchg
dec
mov
inc
xor
les
les
rcrb
or
or
xchg
dec
mov
inc
xor
inc
add
int
sub
pop
mov
add
dec
add
add
les
adc
les
sbb
les
pop
mov
sub
pop
mov
add
lcall
or
or
or
or
or
xchg
dec
mov
inc
xor
ret
xchg
sub
pop
mov
add
lcall
or
scas
cmp
gs
les
ret
aam
add
addr16
negl
dec
mov
fmuls
dec
lcall
aam
fimull
rorb
dec
lcall
fsubrs
cmp
dec
and
dec
mov
mov
in
dec
mov
dec
nop
loopne
xchg
dec
cwtl
loopne
sub
push
cmp
dec
mov
enter
les
enter
or
ret
gs
les
aam
add
addr16
idivl
dec
mov
rolb
sbb
xchg
aam
cli
dec
mov
dec
mov
dec
mov
sub
dec
mov
and
and
dec
xor
cmp
mov
fmuls
in
add
aam
xor
loopne
xchg
add
les
imul
mov
int3
mov
les
push
call
or
or
or
or
or
or
dec
mov
inc
or
out
cmp
or
les
rolb
rorl
inc
add
adc
cmp
rolb
rol
les
xchg
dec
sub
cmp
cmp
gs
les
xchg
gs
testl
pushf
mov
les
enter
mov
fmuls
loopne
dec
mov
and
add
les
sub
mov
dec
and
dec
mov
xchg
dec
nop
loopne
add
nop
loopne
inc
xor
outsl
dec
and
xchg
negl
dec
add
loopne
sub
adc
cmp
rorb
fadds
int3
les
xlat
sub
cmp
inc
sub
xor
loopne
xchg
dec
js
inc
les
inc
loopne
sub
rol
dec
nop
loopne
xchg
sub
ret
dec
mov
xlat
sub
and
loopne
xchg
add
mov
and
les
and
cmp
cmp
inc
pop
mov
dec
cvttps2pi
dec
and
inc
add
leave
dec
mov
call
cmp
inc
add
dec
mov
pushf
mov
les
and
or
or
or
or
or
cmp
cmp
gs
les
gs
testl
pushf
mov
les
enter
fmuls
loopne
idivl
dec
mov
dec
and
dec
mov
cmp
cmp
in
mov
dec
and
dec
mov
xchg
dec
nop
loopne
add
or
loopne
sub
in
cmp
loopne
xchg
dec
add
loopne
sub
adc
cmp
rorb
fdivr
mov
mov
xlat
sub
and
cmp
xchg
dec
mov
mov
xor
loopne
xchg
dec
js
inc
les
inc
loopne
sub
rol
dec
nop
loopne
xchg
sub
rol
dec
mov
xlat
sub
and
cmp
loopne
xchg
add
cltd
outsl
cmp
dec
mov
pushf
mov
les
cltd
pop
or
or
or
or
or
or
ret
gs
les
ret
aam
add
addr16
les
inc
add
dec
mov
int3
dec
adc
add
les
outsl
cmp
add
les
loopne
mov
les
pop
or
or
or
or
or
or
xchg
dec
xor
xor
les
les
rcrb
or
or
or
mov
dec
adc
add
int
sub
push
mov
add
dec
add
add
les
adc
les
sbb
les
sub
push
mov
add
pop
or
or
scas
cmp
gs
les
cmp
aam
add
loopne
xchg
xchg
xchg
xchg
gs
testl
mov
les
loopne
sub
xor
les
loopne
sub
sub
les
in
xor
lahf
sub
les
rolb
mov
test
rorb
fsubrs
sub
les
loopne
add
les
cmp
mov
in
dec
or
sarl
cmp
and
lds
loopne
dec
and
inc
add
lret
dec
ret
dec
xchg
int3
dec
or
push
dec
and
das
roll
loopne
les
loopne
dec
nop
loopne
idivl
dec
push
inc
cmp
and
inc
cld
les
fidivrs
inc
cmp
and
dec
les
fimuls
loopne
inc
pop
mov
cmp
loopne
mov
mov
sub
pop
mov
mov
and
mov
dec
and
dec
sar
and
mov
dec
and
dec
mov
fisttps
loopne
mov
lret
jae
loopne
notl
dec
add
les
xor
hlt
dec
add
mov
dec
push
add
lret
jae
dec
and
mov
inc
mov
leave
dec
mov
call
mov
add
add
cmp
dec
mov
loopne
lret
les
and
les
and
les
mov
scas
les
loopne
sub
sub
les
rolb
int
cmp
mov
mov
rorb
xor
fbstp
xor
dec
mov
loopne
xor
sub
les
mov
dec
rorb
scas
lds
cmp
add
loopne
mov
les
dec
mov
hlt
testl
les
test
or
or
test
mov
dec
sbbb
inc
add
xchg
negl
add
les
lods
dec
lcall
enter
xchg
sub
push
mov
add
add
les
mov
dec
adc
pop
mov
xchg
sub
push
mov
add
dec
xchg
rclb
rorb
fsubrl
push
mov
add
lahf
pop
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
loopne
negl
dec
cwtl
loopne
dec
mov
pushl
mov
dec
add
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
adc
pop
mov
xchg
sub
push
mov
add
dec
add
dec
fwait
aam
fwait
rorb
fsubrl
push
mov
add
dec
mov
aam
dec
leave
les
add
push
rol
or
or
or
or
int3
sub
or
or
or
or
scas
cmp
gs
les
aam
add
addr16
les
loopne
dec
cmp
add
les
arpl
cmp
aam
add
les
add
les
loopne
mov
les
push
rol
or
or
or
or
or
or
or
xchg
dec
cwtl
loopne
dec
cmovg
sub
aaa
cmp
dec
xchg
dec
sub
call
hlt
dec
add
xor
mov
dec
mov
dec
or
cmp
inc
add
enter
jle
les
add
dec
addb
inc
add
enter
jge
les
add
dec
xchg
mov
push
rol
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
loopne
inc
sub
xor
and
les
loopne
sub
les
dec
xchg
xchg
xchg
sub
les
xchg
add
cmp
sub
cmp
cmp
loopne
mov
les
add
push
nop
les
or
or
or
or
or
or
or
dec
add
cmp
dec
sub
sub
mov
dec
mov
dec
xchg
hlt
dec
xchg
hlt
dec
xor
xor
mov
dec
mov
dec
cmp
cmp
add
enter
jle
les
add
dec
addb
inc
add
enter
jge
les
add
dec
xchg
mov
pop
or
or
or
or
or
or
or
scas
cmp
gs
les
xchg
xchg
gs
testl
hlt
mov
les
loopne
divl
dec
mov
cld
shlb
les
aam
add
inc
mov
les
sar
mov
dec
and
dec
mov
mov
xchg
jl
les
or
cmp
inc
add
dec
cwtl
loopne
dec
mov
call
add
sbb
dec
js
pop
les
dec
mov
cmp
cmp
les
dec
mov
loopne
dec
rcr
movsl
int3
aam
fwait
rclb
cmp
inc
fs
add
lret
std
fmul
inc
repz
dec
test
inc
add
xor
les
in
cmp
hlt
fs
add
lds
mov
lret
push
add
inc
pop
lret
inc
int3
inc
or
les
in
cmp
lock
mov
loopne
popa
dec
leave
shlb
les
cmp
inc
fs
aam
nop
loopne
dec
and
shlb
cmp
dec
mov
dec
xchg
les
loopne
dec
nop
loopne
dec
mov
subb
cmp
dec
and
xchg
inc
sub
les
add
dec
loopne
les
cmp
cmp
add
sub
sbb
loopne
sub
dec
cmp
dec
mov
fmull
shlb
cmp
dec
mov
loopne
and
les
dec
add
dec
mov
subb
cmp
dec
mov
mov
dec
js
pop
les
add
dec
lds
loopne
les
cmp
cmp
mov
inc
add
sub
sbb
ja
sub
add
les
test
mov
dec
mov
das
dec
mov
dec
mov
dec
add
cmp
lock
mov
fisttpll
rorb
les
fcoml
ret
cmp
sub
sbb
cmp
loopne
xchg
add
cmp
sub
aas
cmp
dec
mov
hlt
mov
les
inc
add
push
pushf
les
or
or
or
or
or
testl
dec
mov
rolb
xchg
add
aam
dec
xchg
dec
xchg
dec
xchg
dec
xchg
dec
xchg
sub
cmp
cmp
xchg
sub
aas
cmp
fwait
lcall
dec
or
add
aam
add
xchg
sub
aas
cmp
add
les
rolb
rorl
inc
add
or
cmp
rolb
rol
les
or
or
or
or
or
or
xchg
dec
sub
cmp
cmp
gs
les
xchg
gs
testl
mov
les
enter
fmuls
loopne
dec
mov
loopne
inc
loopne
les
cmp
cmp
add
inc
lds
loopne
inc
pop
mov
xchg
sub
cmp
dec
mov
nop
xchg
dec
pop
add
les
or
cmp
shl
dec
cwtl
loopne
inc
mov
dec
mov
xlat
sub
adc
cmp
loopne
xchg
inc
sub
xor
inc
loopne
dec
mov
aas
cmp
sub
les
nop
dec
mov
xlat
sub
adc
cmp
loopne
xchg
add
inc
les
cmp
add
inc
les
cmp
cmp
loopne
inc
add
int
add
xchg
sub
cmp
inc
pop
mov
dec
mov
nop
xchg
dec
pop
sub
cmp
rorb
mov
les
and
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
in
dec
mov
mov
mov
xchg
dec
cmp
and
les
loopne
sub
les
loopne
sub
les
xchg
add
cmp
sub
cmp
loopne
mov
les
aam
or
or
dec
add
add
or
or
or
scas
cmp
gs
les
aam
add
addr16
les
in
dec
mov
test
add
les
loopne
sub
movsb
cmp
dec
ret
rclb
mov
in
add
cmp
sub
cmp
dec
mov
int3
mov
les
in
les
or
or
or
ret
gs
les
xchg
xchg
gs
testl
movsb
mov
les
imull
dec
test
lods
shlb
xchg
cmp
inc
fs
add
mov
test
incl
mov
dec
and
dec
or
and
xchg
jl
les
push
cmp
dec
xor
add
dec
mov
hlt
dec
test
lock
mov
faddl
and
pushl
mov
dec
mov
mov
and
sub
movsb
cmp
dec
and
mov
cld
dec
stos
rolb
sbb
fwait
aam
ljmp
dec
stos
enter
dec
stos
fsubrs
nop
loopne
xchg
sub
pop
cmp
das
test
loopne
sub
adc
cmp
loopne
xchg
inc
sub
add
push
lds
dec
mov
fwait
cmp
sub
movsl
cmp
inc
add
dec
mov
mov
les
cmp
dec
nop
loopne
xchg
sub
divl
add
leave
fsubl
loopne
dec
pushf
rclb
cmp
inc
fs
add
std
fmul
inc
and
les
sar
mov
negb
dec
ret
inc
add
xchg
cmp
hlt
fs
ret
jge
lds
cld
lret
push
add
inc
pop
lret
inc
jg
les
lret
inc
ja
les
in
cmp
lock
mov
call
cmp
movsl
int3
aam
rcll
roll
ret
rcl
movsl
int3
aam
icebp
dec
fs
mov
fcoms
in
cmp
dec
and
dec
mov
dec
rorl
loopne
dec
nop
loopne
dec
mov
mov
loop
cmp
dec
and
xchg
inc
sub
dec
or
inc
loopne
dec
mov
lcall
cmp
call
sub
adc
cmp
loopne
sub
inc
cmp
dec
mov
in
rcl
movsl
int3
aam
xchg
cmp
dec
mov
call
les
pop
cmp
das
lea
sub
dec
stos
rorb
test
or
das
dec
mov
dec
mov
dec
ret
inc
add
xchg
cmp
lock
mov
fimuls
loopne
dec
mov
dec
sti
dec
xchg
fcoml
ret
add
sbb
loopne
xchg
add
cmp
sub
pop
cmp
dec
mov
movsb
mov
les
inc
add
sub
cmp
cmp
gs
les
xchg
gs
testl
xchg
mov
les
enter
mov
fmuls
loopne
dec
mov
and
add
les
and
add
and
inc
xor
xchg
sub
pop
cmp
dec
mov
loopne
pop
xchg
dec
add
loopne
sub
add
cmp
shl
dec
mov
fsubrs
rorb
fadds
int3
les
xlat
sub
push
cmp
dec
nop
loopne
xchg
inc
sub
dec
push
dec
add
inc
loopne
dec
mov
cltd
cmp
sub
fwait
cmp
inc
add
dec
mov
xlat
sub
push
cmp
dec
and
xchg
add
pop
cmp
add
cmp
inc
pop
mov
inc
pop
in
xchg
sub
pop
cmp
inc
xor
loopne
dec
add
add
cmp
rorb
xchg
mov
les
and
or
or
or
or
or
or
inc
sub
cmp
or
or
or
or
inc
sub
cmp
or
or
or
or
inc
sub
xchg
xchg
xchg
dec
xor
sub
inc
add
lret
inc
les
pop
fs
orb
les
fs
sub
add
inc
adc
mov
dec
and
dec
ret
dec
mov
dec
sbb
sub
shrl
mov
sbb
inc
insb
les
lret
inc
push
les
dec
mov
add
pushf
shlb
mov
mov
dec
mov
enter
jle
les
add
dec
mov
dec
nop
loopne
xchg
xchg
xchg
sub
add
les
in
lds
enter
out
dec
mov
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
sub
mov
add
pushf
shlb
mov
fisttps
loopne
dec
xor
dec
add
cmp
les
sbb
add
pop
or
or
or
or
or
or
cwtl
inc
add
aam
nop
loopne
dec
hlt
lods
nop
fwait
int3
aam
xchg
cmp
rol
or
or
or
ret
gs
les
ret
aam
add
addr16
les
loopne
idivl
dec
cli
dec
mov
dec
mov
or
cmp
cmp
enter
cmp
dec
mov
dec
mov
dec
mov
dec
mov
cmp
cmp
dec
mov
dec
mov
dec
mov
dec
add
loopne
mov
les
enter
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
loopne
add
les
call
sbbb
mov
lods
nop
fwait
int3
aam
les
enter
fs
add
xchg
cmp
dec
or
cmp
mov
xchg
cmp
dec
mov
mov
and
les
rol
testl
inc
add
xchg
cmp
dec
mov
aam
dec
leave
les
add
push
rol
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
and
les
loopne
les
fdivrl
cmp
cmp
loopne
inc
xor
inc
xor
les
rolb
xor
add
les
dec
xchg
dec
or
adc
mov
inc
push
cmp
add
les
dec
xchg
int3
dec
or
push
dec
mov
aam
dec
leave
les
add
push
int3
les
cmp
loopne
dec
mov
decl
fwait
loopne
xchg
rorb
xchg
xchg
dec
mov
in
sub
rol
dec
or
sub
or
cmp
rorb
dec
hlt
dec
and
dec
mov
lds
les
xor
add
les
les
dec
add
jle
fidivl
cmp
xchg
cmp
pushf
fs
and
cmp
cmp
dec
mov
loopne
xor
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
mov
aam
dec
leave
les
add
push
int3
les
or
or
scas
cmp
gs
les
xchg
xchg
gs
testl
in
mov
les
imull
xchg
dec
test
in
test
fsubrs
jge
cmp
sub
cmp
cmp
call
add
decl
mov
or
mov
decl
mov
inc
add
dec
mov
inc
add
dec
lea
or
mov
lods
decl
mov
or
mov
xchg
dec
mov
dec
orl
cmp
xchg
xchg
dec
mov
nop
dec
xchg
xor
jae
rorb
clc
scas
test
xchg
lods
aam
les
ret
sbb
cwtl
loopne
lcall
lret
inc
cmp
les
clc
dec
xchg
clc
dec
sub
xchg
xchg
sub
pop
mov
mov
notl
inc
add
mov
out
inc
add
dec
lret
cmp
mov
dec
xchg
cmp
xchg
pop
xchg
sub
pop
mov
cmp
jae
movb
in
ljmp
hlt
dec
xchg
inc
add
nop
movl
mov
rorb
dec
xor
add
dec
cmp
test
pop
dec
addl
inc
add
rol
dec
addl
dec
xchg
cld
dec
mov
dec
mov
dec
adcl
xchg
nop
dec
mov
addl
inc
mov
dec
mov
xor
mov
mov
dec
ffree
sbb
xor
rol
dec
sbb
enter
cmp
fs
sub
sub
inc
rol
les
inc
add
in
mov
cmp
mov
or
add
rcll
ret
pop
rorb
movl
sbb
addl
mov
dec
cwtl
loopne
dec
mov
dec
push
dec
les
mov
dec
xor
push
dec
push
dec
les
loopne
dec
nop
loopne
dec
mov
fsubr
popf
fadds
mov
inc
pop
mov
inc
mov
and
les
les
rorb
mov
inc
sub
adc
mov
dec
sub
jae
insl
hlt
les
movl
mov
dec
add
mov
fadd
or
xor
mov
fdivr
mov
fdivl
dec
mov
mov
jl
les
inc
sub
dec
add
cwtl
jge
movsl
aam
int3
dec
mov
call
lcall
dec
or
and
les
and
les
add
cmp
sub
and
les
les
xor
add
les
les
dec
add
jle
fidivl
inc
add
inc
add
jecxz
xchg
sub
jno
cmp
inc
add
dec
adc
jne
dec
xor
xor
clc
fs
add
dec
add
fs
mov
in
mov
les
inc
add
pop
or
or
or
or
or
or
or
or
ret
gs
les
aam
add
addr16
les
loopne
xchg
add
les
mov
cmp
rclb
dec
lret
adc
les
mov
int3
dec
mov
int3
mov
les
push
rol
or
or
or
or
or
or
or
scas
aam
rolb
les
rolb
ret
loopne
dec
int3
dec
mov
inc
or
loopne
dec
aad
xchg
int3
inc
push
mov
dec
lret
dec
mov
dec
mov
inc
or
sarb
les
add
or
or
or
or
or
or
int3
dec
mov
enter
rol
les
les
inc
add
enter
jge
les
add
add
pop
or
or
xchg
dec
sub
ret
gs
les
xchg
gs
testl
mov
les
xor
cmp
jo
cmp
add
les
rorb
dec
mov
add
mov
dec
add
fisttpl
int3
dec
or
and
in
cmp
dec
mov
loopne
ret
ret
mov
mov
mov
les
and
xchg
sub
jo
cmp
shrb
push
mov
add
mov
mov
les
and
xor
ret
or
dec
stc
clc
fs
add
int3
inc
cmp
mov
xchg
cmp
dec
or
add
int3
inc
cmp
mov
xchg
cmp
xor
int
sub
mov
rcrb
les
or
or
or
or
or
jl
les
enter
or
or
or
scas
cmp
gs
les
xchg
xchg
gs
testl
hlt
mov
les
loopne
negl
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
dec
and
xchg
dec
mov
xchg
dec
or
sub
ret
dec
cwtl
loopne
dec
ret
dec
mov
fcoms
xchg
xchg
xchg
add
les
loopne
dec
cwtl
loopne
sub
mov
cmp
inc
or
les
loopne
and
lret
inc
jle
les
loopne
jl
arpl
lock
add
testl
push
add
xchg
sub
sbb
rorb
dec
mov
loopne
xchg
dec
mov
lock
and
sub
ret
dec
nop
loopne
call
mov
dec
and
dec
ret
dec
ljmp
ljmp
mov
dec
xchg
rolb
xor
add
xchg
les
rorb
adc
mov
inc
push
cmp
add
add
or
push
dec
ret
incl
mov
dec
mov
fcoms
xchg
xchg
xchg
sub
mov
cmp
jmp
fmull
loopne
add
das
leave
dec
mov
xor
dec
rol
dec
add
loopne
mov
les
inc
add
pop
or
or
or
or
or
xchg
dec
sub
cmp
cmp
gs
les
les
cmp
aam
add
loopne
mov
xchg
xchg
xchg
gs
testl
mov
les
les
dec
cltd
int3
add
and
idivl
xchg
xchg
dec
mov
in
cwtl
loopne
dec
mov
rol
dec
js
xchg
mov
dec
mov
loopne
rol
les
loopne
pushl
lret
inc
mov
sbb
inc
mov
les
in
mov
rolb
inc
loopne
mov
cmp
cmp
sub
dec
cmp
sub
dec
mov
fcoms
xchg
sub
cmp
cmp
int3
dec
mov
loopne
mov
lds
dec
and
add
xchg
mov
les
dec
cmp
inc
mov
push
inc
push
mov
call
testl
mov
rorb
inc
add
in
test
mov
incl
mov
rolb
push
inc
dec
pop
loopne
mov
dec
mov
faddl
sub
dec
mov
shrb
les
int3
dec
nop
loopne
xchg
dec
and
xchg
dec
mov
clc
xchg
dec
xchg
rclb
les
cmp
pop
mov
dec
pop
loopne
mov
dec
mov
faddl
lret
inc
add
les
rorb
lret
add
les
dec
xchg
dec
or
adc
mov
xor
add
les
mov
cld
xchg
dec
adc
fs
add
jbe
mov
les
popa
dec
mov
lock
cmp
insb
fs
pop
loopne
mov
dec
mov
fmull
inc
xor
dec
pop
xor
add
rorb
rorb
adc
mov
xor
add
rorb
int3
dec
or
adc
add
incb
cmp
loopne
mov
dec
mov
fdivr
xor
mov
xor
add
ret
rorb
push
dec
or
lret
add
rorb
int3
dec
or
adc
add
dec
loopne
mov
mov
les
dec
loopne
mov
testl
les
cltd
pop
or
or
or
or
dec
int3
dec
lret
xchg
dec
pushf
sar
shlb
dec
xchg
sarb
les
add
rolb
out
dec
mov
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
fwait
rcrb
or
or
or
or
xchg
dec
sub
cmp
cmp
gs
les
gs
testl
fsubl
les
push
fs
dec
xlat
les
adc
sbb
les
fwait
int3
aam
sub
dec
cmp
test
aam
add
aad
mov
dec
and
xchg
sub
lods
dec
xlat
les
and
les
adc
adc
cmp
loopne
add
cmp
sub
sbb
les
loopne
mov
les
cltd
pop
or
or
or
or
mov
enter
testl
mov
xchg
dec
pop
loopne
mov
xchg
dec
push
les
mov
xchg
lods
mov
les
loopne
scas
les
les
jge
les
loopne
xchg
dec
cvttps2pi
add
inc
add
ret
jl
jecxz
les
subl
rcll
ret
add
sub
mov
xchg
inc
sub
dec
cmp
les
loopne
mov
xchg
aaa
popa
cmp
xor
and
xchg
sub
dec
mov
aam
pop
sbb
les
dec
dec
loopne
mov
fwait
lcall
mov
les
mov
mov
or
or
or
or
or
or
or
inc
sub
xchg
add
mov
rclb
dec
and
sub
dec
nop
loopne
call
mov
dec
and
dec
ret
dec
mov
dec
mov
enter
inc
xor
inc
or
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
es
or
or
ret
gs
les
aam
add
addr16
les
loopne
dec
mov
fmuls
loopne
inc
sub
dec
add
dec
mov
hlt
dec
xchg
rorb
sub
inc
add
dec
or
and
les
sbb
les
dec
mov
int3
mov
les
push
aam
or
or
or
scas
cmp
gs
les
aam
add
addr16
les
loopne
sub
dec
or
and
les
sbb
les
dec
mov
int3
mov
les
push
rol
or
lods
in
ret
gs
les
enter
testl
mov
les
xor
xor
les
cmpl
sub
mov
rolb
fnstsw
les
rorb
dec
mov
add
aam
ret
mov
das
testl
leave
les
and
xchg
int3
xchg
sub
mov
les
shrb
dec
mov
or
enter
mov
les
or
xchg
dec
xor
lods
pushf
repnz
aam
popa
mov
mov
dec
adc
push
rol
add
push
rol
or
or
or
or
or
or
or
and
lds
cld
insl
ret
int
sub
mov
les
rorb
push
rol
inc
sub
dec
mov
enter
rol
les
les
inc
add
enter
jge
les
add
add
pop
or
or
inc
sub
dec
shl
add
les
and
adc
aam
xor
les
rorb
add
enter
jge
les
add
add
pop
or
or
or
or
or
dec
mov
dec
xchg
in
dec
mov
cmp
pop
or
in
and
or
or
or
or
or
xchg
dec
sub
ret
gs
les
xchg
gs
testl
mov
les
xor
cmp
outsl
cmp
dec
xor
cmpl
inc
add
dec
mov
dec
mov
add
mov
dec
add
fisttpl
int3
dec
or
and
add
cmp
dec
mov
loopne
ret
ret
mov
mov
mov
les
and
xchg
sub
outsl
cmp
inc
add
scas
les
mov
add
mov
mov
les
and
sub
ret
gs
les
xchg
gs
testl
mov
les
xor
loopne
pop
outsb
cmp
dec
xor
cmpl
inc
add
dec
mov
dec
mov
add
mov
dec
or
sub
outsl
cmp
add
hlt
xor
aam
mov
mov
mov
les
and
xchg
sub
outsb
cmp
inc
add
scas
les
mov
add
mov
mov
les
and
cmp
gs
les
xchg
xchg
gs
testl
lods
mov
les
loopne
scas
loopne
pop
lods
xorb
aam
mov
fadds
and
lret
les
loopne
dec
cwtl
loopne
sub
and
cmp
loopne
dec
and
xchg
dec
mov
xchg
dec
cwtl
loopne
sub
or
cld
xor
aam
mov
cld
add
dec
or
int3
xchg
scas
ret
and
sub
mov
cmp
std
mov
mov
lock
sub
mov
les
sarb
les
loopne
dec
cwtl
loopne
dec
cwtl
loopne
std
mov
mov
loopne
xchg
sub
mov
les
rorb
mov
dec
cwtl
loopne
std
mov
call
loopne
xchg
sub
mov
les
rorb
add
dec
mov
lods
mov
les
inc
add
or
or
or
or
or
or
scas
cmp
gs
les
ret
aam
add
addr16
les
loopne
add
mov
aam
add
add
mov
dec
mov
dec
xchg
int
add
xchg
int
or
and
dec
fwait
enter
dec
mov
decl
int3
dec
lds
scas
lds
push
dec
lcall
add
loopne
mov
les
enter
or
or
or
or
ret
gs
les
enter
testl
cld
mov
les
dec
mov
int3
add
mov
aam
and
les
adc
les
mov
cld
or
out
or
rclb
sarl
cmp
lods
mov
nop
loopne
xchg
sub
dec
mov
and
cmp
cmp
dec
mov
inc
or
dec
aam
lds
push
dec
mov
cld
mov
les
pop
xchg
dec
xor
ret
mov
dec
adc
sub
mov
les
shl
add
les
loopne
or
sub
mov
les
and
lds
mov
les
rorb
push
rol
or
or
or
or
dec
and
xchg
xchg
dec
xor
cmp
ret
ret
add
or
or
or
dec
xchg
rorb
aam
dec
testb
outsb
sub
inc
mov
add
fwait
pop
or
or
or
or
dec
mov
inc
or
dec
scas
lds
adc
testb
les
or
or
or
or
or
scas
cmp
gs
les
testl
shlb
jl
les
sub
shrl
int3
aam
push
push
ret
shll
aam
xor
aam
shll
int3
aam
cmp
aam
add
jl
movsb
int3
aam
mov
shlb
les
or
or
or
or
and
lds
xchg
sub
mov
les
rorb
push
rol
or
or
or
xchg
xchg
dec
mov
sub
les
loopne
dec
ret
loopne
dec
test
xchg
xchg
xchg
dec
or
adc
lcall
or
or
or
or
ret
gs
les
enter
testl
lock
les
and
les
and
les
loopne
dec
and
dec
mov
in
and
les
loopne
xchg
dec
and
xchg
jge
xor
aam
and
mov
les
fadd
les
int3
dec
mov
adcb
loopne
dec
rorb
fcoml
add
mov
aam
or
dec
aam
lds
push
dec
nop
loopne
dec
mov
in
dec
testb
outsb
sub
inc
mov
add
dec
mov
lock
les
push
enter
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
dec
xchg
rclb
inc
add
decb
dec
xchg
lock
or
push
dec
aam
xchg
int3
dec
mov
rclb
xchg
dec
and
xchg
add
les
out
les
mov
loopne
sub
dec
mov
mov
mov
les
or
or
or
loopne
xchg
xchg
dec
xor
cmp
ret
ret
add
or
or
or
scas
cmp
gs
les
gs
testl
mov
addr16
les
dec
ret
fdivrs
push
inc
cmp
mov
xchg
lock
or
push
dec
aam
xchg
int3
dec
mov
enter
cmp
xchg
jnp
xor
aam
mov
call
les
add
cmp
rclb
xchg
add
inc
lds
mov
cmp
mov
mov
aam
ret
adc
les
loopne
mov
les
mov
or
or
or
or
or
or
or
scas
cmp
gs
les
gs
testl
mov
addr16
les
dec
ret
fdivrs
push
inc
cmp
mov
dec
ret
lock
or
push
dec
aam
xchg
int3
dec
mov
enter
cmp
xchg
jnp
xor
aam
mov
call
les
pop
cmp
inc
add
xchg
scas
lds
loopne
xchg
add
inc
lds
stos
cmp
lods
or
loopne
xchg
add
ret
loop
mov
mov
mov
dec
leave
les
mov
or
or
or
or
or
or
or
scas
cmp
gs
les
les
enter
testl
xor
les
les
loopne
mov
dec
xor
mov
cmp
sub
dec
xchg
loopne
push
dec
or
sbb
inc
cs
les
dec
xchg
lock
dec
cmp
ret
loopne
or
push
xchg
dec
inc
loopne
xchg
sub
fcmovnb
les
dec
dec
loopne
xchg
xchg
add
enter
les
rol
les
aam
sbb
inc
loopne
lds
dec
xchg
int3
dec
inc
loopne
xchg
dec
or
push
xchg
jnp
xor
aam
jo
insb
les
inc
loopne
mov
sub
push
cmp
xchg
xchg
dec
inc
loopne
xchg
add
enter
sub
fld
les
dec
jo
xor
les
inc
loopne
mov
shrb
cmp
xchg
xchg
dec
dec
loopne
xchg
add
fadd
fld
les
in
scas
lds
loopne
xchg
add
int3
mov
ret
stos
cmp
lods
or
loopne
xchg
add
ret
add
les
dec
xchg
cmp
sbb
inc
sub
rorb
lock
or
adc
rorb
dec
xchg
dec
or
adc
dec
mov
mov
sub
fcmovb
les
dec
push
loopne
xchg
xchg
add
enter
ret
les
rol
les
aam
sbb
inc
loopne
int3
dec
ret
dec
xchg
int3
dec
dec
loopne
les
xchg
jnp
xor
aam
jo
add
les
inc
loopne
mov
int
xor
cmp
xchg
xchg
dec
inc
loopne
xchg
add
enter
into
sub
fadd
les
dec
jo
add
les
inc
loopne
mov
iret
sub
add
dec
dec
loopne
xchg
add
fadd
enter
les
in
scas
lds
loopne
xchg
add
int3
mov
leave
sub
test
mov
loopne
xchg
add
ret
or
les
dec
dec
loopne
mov
les
inc
add
push
rol
or
or
or
or
or
xchg
dec
sub
ret
gs
les
xchg
gs
testl
mov
les
xor
mov
negl
dec
cltd
and
sub
cltd
sbb
cltd
sbb
add
les
adc
dec
ret
dec
xchg
shrb
xor
aam
or
push
add
incb
mov
dec
subl
dec
sbbl
sub
cmp
cmp
and
cltd
adc
xchg
dec
or
cmp
cmp
sub
mov
dec
mov
dec
lds
and
testb
outsb
sub
mov
rorb
mov
mov
les
and
cmpl
jl
mov
mov
dec
mov
rorl
rorb
xchg
lods
xor
int3
aam
test
ret
or
push
inc
add
mov
cltd
sub
and
cmp
dec
ret
in
or
push
dec
mov
dec
mov
dec
lds
and
testb
outsb
sub
mov
rorb
mov
mov
les
and
or
cmp
dec
xchg
aam
mov
dec
fimuls
testb
outsb
sub
mov
shl
dec
mov
mov
les
and
or
dec
lds
in
dec
mov
int3
xchg
dec
cli
cmp
dec
xchg
in
dec
and
xchg
dec
or
push
fwait
lcall
or
or
or
or
or
or
inc
sub
dec
lds
aam
xchg
xchg
xchg
dec
mov
aam
push
dec
nop
loopne
dec
xor
and
dec
or
and
xor
fistpll
xor
out
dec
push
xor
fistps
dec
or
and
out
xor
fildll
xor
out
insb
int3
mov
dec
and
out
add
and
dec
and
dec
or
or
add
and
dec
and
adc
dec
nop
loopne
xor
dec
mov
in
decl
lret
inc
dec
les
inc
and
dec
mov
call
das
into
dec
cmp
loopne
dec
mov
call
xchg
xchg
dec
nop
loopne
xchg
dec
nop
loopne
sub
add
hlt
dec
mov
fmuls
inc
add
xchg
scas
les
cmp
loopne
dec
lds
enter
loopne
xchg
cmp
mov
int3
dec
and
cmp
loopne
lds
loopne
lds
dec
and
incl
mov
fwait
lcall
rol
fwait
lcall
int3
push
rol
or
or
or
or
or
scas
cmp
gs
les
gs
testl
mov
addr16
les
dec
ret
enter
dec
loopne
decl
ljmp
les
fcoms
les
adc
mov
mov
dec
leave
les
mov
enter
mov
dec
rorb
int3
dec
and
xchg
dec
or
push
xchg
jnp
xor
aam
mov
call
les
jns
cmp
rclb
xchg
add
inc
lds
lods
cmp
lods
int3
inc
ret
aam
mov
mov
fdivs
aam
roll
les
dec
lds
sarb
push
inc
and
pop
or
or
or
in
lds
loopne
xchg
cmp
and
popf
pop
or
or
or
or
or
or
enter
mov
dec
sbb
das
out
notl
jl
les
les
aam
sub
inc
xor
dec
add
inc
cmp
xor
cmp
dec
xchg
in
rorb
fcoms
cmp
mov
jl
les
pop
and
out
loopne
das
rorb
fmull
loopne
incl
mov
fwait
lcall
les
or
or
or
cmp
cmp
gs
les
cmp
aam
add
loopne
xchg
gs
testl
cld
mov
les
int3
dec
cmc
notl
xchg
dec
and
dec
or
call
lods
in
int3
aam
nop
loopne
dec
and
dec
sub
add
ret
and
and
ret
adc
mov
cld
mov
les
in
testl
les
cltd
push
int3
les
or
loopne
xchg
xchg
scas
les
in
int3
aam
std
xor
cmp
in
xchg
dec
or
push
fwait
lcall
or
or
or
or
or
cmp
cmp
gs
les
les
cmp
aam
add
loopne
xchg
xchg
xchg
gs
testl
test
les
les
enter
mov
dec
mov
rorb
loopne
jge
dec
nop
loopne
dec
and
dec
dec
loopne
add
loope
lds
loopne
dec
cltd
aam
mov
xor
inc
loopne
les
mov
loopne
dec
and
divl
cmp
sbb
das
dec
xor
dec
test
xchg
xchg
cmp
inc
loopne
dec
mov
rorb
dec
push
dec
les
xchg
dec
and
xchg
cmp
dec
push
loopne
out
sbb
les
iret
add
loopne
adc
loopne
dec
testb
dec
dec
loopne
mov
les
dec
loopne
testl
les
cltd
push
aam
or
or
or
or
or
or
cmp
les
int3
testb
fwait
pop
or
scas
cmp
gs
les
xchg
xchg
gs
testl
in
addr16
les
dec
test
lock
or
sub
les
loopne
inc
cmp
mov
sub
imul
shl
das
int
cmp
xchg
les
dec
mov
fadds
and
les
dec
xchg
cld
xchg
xchg
dec
push
dec
and
xchg
xchg
sub
test
les
testb
dec
or
mov
les
enter
mov
in
dec
leave
les
inc
add
push
int3
les
or
or
or
or
or
or
or
ret
gs
les
les
cmp
aam
add
les
les
dec
ss
ret
fmuls
cmp
cmp
inc
pop
les
loopne
les
les
int3
dec
sbb
inc
loopne
les
dec
xchg
dec
or
adc
dec
dec
loopne
les
les
dec
jo
inc
les
inc
loopne
lds
fadd
les
dec
mov
mov
inc
loopne
sub
jge
cmp
mov
add
int3
sub
rol
les
dec
jo
je
les
inc
loopne
shrb
cmp
inc
add
xchg
scas
lds
loopne
xchg
add
cmp
mov
mov
loopne
xchg
add
ret
mov
dec
dec
loopne
les
les
add
les
or
or
cmp
fs
les
cmp
push
inc
add
into
dec
mov
dec
lds
sarb
testl
dec
push
pusha
les
cmp
push
inc
add
into
dec
mov
dec
lds
int3
cmp
int3
les
dec
lds
loopne
dec
test
xchg
cmp
int3
les
dec
nop
loopne
dec
lds
in
dec
nop
loopne
xchg
cmp
enter
or
or
or
or
or
dec
lds
loopne
dec
test
xchg
cmp
int3
les
scas
cmp
gs
les
cmp
aam
add
addr16
les
loopne
inc
mov
dec
aad
and
dec
xchg
enter
dec
mov
mov
les
int3
les
dec
test
dec
nop
loopne
xchg
cmp
dec
mov
loopne
add
les
les
nop
loopne
xchg
sub
mov
or
or
or
loopne
xchg
xchg
dec
xor
cmp
ret
ret
add
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
loopne
inc
mov
dec
and
dec
aad
xchg
rclb
dec
and
xchg
dec
and
xchg
cmp
dec
mov
mov
les
rol
dec
lds
int3
dec
nop
loopne
xchg
cmp
dec
mov
loopne
add
les
aad
les
nop
loopne
xchg
sub
mov
or
or
or
dec
and
inc
mov
dec
nop
loopne
dec
lds
fcoml
xchg
dec
nop
loopne
xchg
dec
nop
loopne
xchg
cmp
rol
dec
aad
dec
mov
fcoml
xchg
dec
mov
fcoml
xchg
xchg
dec
inc
dec
les
adc
push
rol
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
loopne
inc
mov
dec
and
dec
aad
xchg
call
lods
xchg
dec
and
xchg
cmp
dec
mov
mov
les
aam
dec
lds
int3
dec
nop
loopne
xchg
cmp
dec
mov
loopne
add
les
aam
les
nop
loopne
xchg
sub
mov
or
or
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
loopne
inc
mov
dec
and
dec
aad
xchg
hlt
xchg
dec
and
xchg
cmp
dec
mov
mov
les
enter
dec
test
dec
nop
loopne
xchg
cmp
dec
mov
loopne
add
les
and
aam
nop
loopne
xchg
sub
mov
xchg
dec
sub
cmp
sub
xchg
dec
xor
fs
les
push
inc
add
fimuls
dec
push
fs
les
cmp
dec
aam
or
xchg
cmp
dec
and
cmp
dec
rorb
inc
les
int3
aam
or
loopne
dec
mov
fsubrl
fcoml
push
dec
and
dec
nop
loopne
lcall
or
ret
fs
les
push
dec
or
mov
dec
ret
fs
les
push
dec
aam
or
xchg
and
rorb
xchg
dec
and
xchg
cmp
xor
add
sbb
popf
pop
xchg
dec
xor
pusha
les
push
inc
add
ret
dec
push
pusha
les
cmp
dec
aam
dec
or
xchg
mov
es
mov
int3
dec
xchg
subb
push
lcall
or
or
xchg
dec
sub
cmp
cmp
gs
les
cmp
aam
add
loopne
xchg
xchg
gs
testl
test
les
int3
dec
xor
pusha
les
push
inc
add
fmuls
dec
push
pusha
les
cmp
dec
mov
dec
aam
xchg
adcb
das
dec
or
dec
mov
hlt
dec
mov
lock
mov
shrb
and
dec
and
dec
ret
mov
xchg
dec
nop
loopne
xchg
dec
or
and
call
and
and
ret
mov
dec
and
dec
mov
test
les
loopne
testl
les
cltd
push
int3
les
xchg
dec
xor
fs
les
push
inc
add
ret
dec
push
fs
les
cmp
dec
aam
dec
or
xchg
xchg
cmp
dec
mov
int3
dec
xchg
mov
cmp
lcall
or
or
xchg
dec
sub
cmp
cmp
gs
les
cmp
aam
add
loopne
xchg
xchg
gs
testl
test
les
int3
dec
xor
fs
les
push
inc
add
fmuls
dec
push
fs
les
cmp
dec
mov
dec
aam
xchg
mov
push
das
xchg
dec
or
inc
testl
xchg
dec
and
dec
mov
clc
dec
mov
test
loopne
dec
mov
in
and
xchg
dec
mov
in
xchg
dec
or
and
call
and
and
ret
mov
dec
and
dec
mov
test
les
loopne
testl
les
cltd
push
int3
les
or
or
or
or
or
or
cmp
sub
xchg
dec
xor
pusha
les
push
inc
add
loopne
ret
pusha
les
cmp
dec
mov
dec
aam
xchg
nop
xchg
dec
mov
xchg
dec
or
push
lcall
dec
or
and
dec
mov
enter
cmp
dec
rorb
mov
lret
int3
aam
mov
aam
xchg
dec
or
push
dec
and
dec
nop
loopne
lcall
or
or
or
or
or
xchg
dec
xor
fs
les
push
dec
or
mov
dec
ret
fs
les
push
dec
aam
or
xchg
dec
xchg
lcall
dec
ret
fs
les
push
inc
add
rorb
dec
push
fs
les
cmp
dec
aam
or
xchg
lock
cmp
dec
add
les
or
or
or
or
or
or
dec
push
fs
les
push
dec
or
mov
dec
ret
fs
les
push
dec
aam
or
xchg
dec
xchg
filds
sbb
pop
or
or
or
or
or
xchg
dec
xor
pusha
les
push
inc
add
rorb
dec
push
pusha
les
cmp
dec
aam
or
xchg
add
pop
or
or
or
dec
push
pusha
les
push
inc
add
rorb
dec
push
pusha
les
cmp
dec
aam
dec
or
xchg
lods
cmp
dec
and
xchg
dec
and
sub
cmp
scas
lds
mov
rorb
xchg
dec
add
les
loopne
fwait
lcall
or
or
or
or
or
xchg
dec
sub
cmp
sub
xchg
dec
cltd
aam
dec
xor
ret
pusha
les
cmp
inc
add
fimull
dec
push
pusha
les
cmp
dec
xor
ret
pusha
les
cmp
inc
add
es
mov
dec
lds
loopne
add
les
lret
inc
push
les
dec
xchg
movsb
dec
or
push
inc
add
inc
inc
les
dec
xchg
test
cmp
inc
add
hlt
dec
mov
inc
or
xchg
xchg
dec
and
dec
and
dec
ret
mov
xchg
xchg
dec
or
adc
add
xchg
dec
rorb
test
cmp
add
adc
rorb
cld
dec
or
adc
add
roll
das
lds
les
scas
les
cmp
inc
add
loopne
ret
mov
dec
or
cmp
std
int3
lret
inc
scas
cmp
cmp
add
lahf
dec
and
jl
les
enter
or
or
or
or
or
or
or
dec
push
fs
les
cmp
inc
add
fimull
dec
push
fs
les
cmp
dec
xor
ret
fs
les
cmp
inc
add
testl
or
or
or
or
xchg
dec
sub
cmp
xchg
dec
xor
pusha
les
push
inc
add
fimuls
dec
push
pusha
les
cmp
dec
aam
or
xchg
and
xchg
adc
add
xor
nop
scas
cmp
adc
push
mov
lcall
or
or
or
or
dec
push
pusha
les
push
inc
add
fisttpll
dec
push
pusha
les
cmp
dec
aam
dec
or
push
pop
les
es
dec
xor
pusha
les
push
inc
add
icebp
dec
ret
pusha
les
cmp
dec
aam
or
inc
pop
les
adc
add
fisttpll
dec
inc
pusha
les
cmp
aam
dec
or
push
push
es
mov
int3
dec
ret
insb
les
lcall
or
dec
and
xchg
xchg
dec
xor
cmp
ret
ret
add
or
or
or
inc
stc
sub
xchg
dec
test
rclb
dec
sbb
lret
int3
aam
add
int3
aam
inc
cltd
mov
add
xlat
dec
xchg
xchg
xchg
xchg
cmp
sub
enter
mov
lods
add
int3
aam
loope
les
aam
mov
dec
xchg
rorb
rorb
inc
pop
fmuls
enter
dec
or
dec
mov
xchg
sub
dec
cmp
dec
add
int3
dec
xchg
int3
xchg
xchg
xchg
xchg
sub
xchg
mov
add
lcall
or
ret
gs
les
aam
add
addr16
les
loopne
dec
and
add
les
mov
xchg
xchg
sub
les
loopne
mov
les
rol
or
ret
gs
les
cmp
aam
add
addr16
les
loopne
dec
mov
in
dec
aas
sub
and
cmp
and
les
ret
ret
xchg
dec
adc
rorb
rorb
fmull
fmull
in
mov
mov
sub
cmp
inc
cmp
shrl
les
in
dec
and
xchg
loopne
xchg
xchg
sub
xchg
mov
add
dec
add
loopne
mov
les
add
push
int3
les
or
or
loopne
mov
xchg
dec
testb
outsb
sub
lods
mov
add
dec
or
and
cmp
and
lds
xchg
mov
add
fwait
dec
add
or
or
or
or
scas
cmp
gs
les
gs
testl
fsubs
les
loopne
add
les
and
and
ret
aam
and
les
and
lds
loopne
xchg
xchg
dec
mov
loopne
les
xchg
xchg
sub
test
les
and
les
loopne
add
les
mov
dec
aad
scas
lds
adc
add
loopne
mov
les
fadds
or
or
or
or
or
or
ret
gs
les
cmp
aam
add
loopne
xchg
xchg
xchg
xchg
gs
testl
pushf
mov
les
loopne
dec
test
lods
negl
dec
cwtl
loopne
incl
mov
scas
lds
sbb
dec
cltd
shrb
or
sub
or
incl
dec
cwtl
loopne
mov
rol
xor
and
lret
les
loopne
dec
cwtl
loopne
incl
dec
cwtl
loopne
mov
notl
jge
les
xor
dec
cmp
adc
or
sbb
lret
jb
xchg
dec
mov
clc
sub
ret
les
shrb
loopne
add
ss
cmp
movsb
inc
mov
leave
dec
nop
loopne
xchg
sub
xchg
mov
add
dec
add
pop
mov
shll
cld
xchg
jnp
cmp
loopne
sub
into
les
shrb
loopne
add
bound
cmp
movsb
inc
mov
leave
dec
mov
in
sub
xchg
mov
add
scas
cmp
add
les
rclb
shrb
cmp
inc
mov
leave
dec
and
xchg
sub
nop
mov
add
dec
add
loopne
mov
les
dec
mov
test
or
xchg
mov
add
or
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
mov
add
dec
and
add
les
mov
dec
mov
loopne
nop
loopne
xchg
xchg
xchg
sub
les
das
divl
dec
mov
loopne
and
les
rolb
rol
les
enter
int3
dec
lds
scas
lds
push
dec
stos
enter
add
les
mov
dec
lds
scas
lds
push
dec
mov
add
dec
mov
aam
dec
leave
les
aam
int3
les
scas
cmp
gs
les
cmp
aam
add
addr16
les
loopne
dec
mov
in
and
dec
add
or
add
enter
les
and
les
ret
ret
mov
dec
mov
dec
xchg
rorb
dec
or
mov
inc
cmp
mov
sub
pop
cmp
inc
cmp
shrl
les
in
dec
and
xchg
rclb
xchg
mov
add
dec
add
loopne
mov
les
add
push
enter
or
or
inc
sub
cmp
or
or
or
or
testl
or
or
or
or
or
enter
int
sbb
les
shrb
or
loopne
dec
add
in
add
cmp
lcall
scas
cmp
gs
les
cmp
aam
add
addr16
les
ret
mov
enter
loopne
les
and
les
and
les
add
cmp
loopne
xchg
scas
les
loopne
xchg
add
les
nop
cmp
lods
int3
inc
ret
aam
nop
loopne
xchg
add
ret
lcall
or
or
or
ret
gs
les
les
enter
testl
js
les
les
loopne
les
loopne
les
dec
jo
pusha
les
ret
negl
xchg
jnp
cmp
aam
mov
mov
pop
loopne
les
insb
cmp
inc
add
dec
xor
dec
loopne
les
inc
loopne
lds
xchg
mov
dec
cmp
mov
lock
insb
cmp
xchg
jnp
cmp
aam
mov
fadds
inc
loopne
sub
insb
cmp
inc
add
dec
xor
dec
loopne
les
inc
loopne
sub
xchg
mov
dec
cmp
mov
xchg
sub
insb
cmp
xchg
jnp
cmp
aam
jo
dec
les
inc
loopne
shrb
cmp
inc
add
xchg
scas
lds
xchg
cmp
jp
les
add
std
jo
pop
les
dec
les
les
sarb
les
loopne
les
loopne
les
dec
std
mov
mov
loopne
xchg
sub
xchg
mov
add
dec
mov
loopne
dec
cwtl
loopne
std
mov
call
loopne
xchg
sub
xchg
mov
add
dec
mov
loopne
dec
cwtl
loopne
std
mov
mov
lock
sub
xchg
mov
add
dec
mov
loopne
dec
cwtl
loopne
std
jo
inc
les
test
sub
xchg
mov
add
dec
js
inc
les
loopne
dec
cwtl
loopne
std
jo
jl
les
pusha
les
inc
add
dec
dec
loopne
les
loopne
les
add
dec
mov
dec
xchg
hlt
dec
add
loopne
les
les
inc
add
les
aam
or
or
or
or
or
or
or
or
enter
sub
xchg
cmp
add
inc
cmp
call
mov
fwait
dec
mov
dec
add
or
or
or
or
scas
cmp
gs
les
enter
testl
pushf
mov
les
loopne
xchg
dec
or
xchg
mov
add
pushf
dec
add
and
lret
les
and
les
and
les
lds
dec
int3
test
mov
out
push
xchg
xchg
dec
mov
aam
sub
cmp
xchg
xchg
dec
and
xchg
dec
mov
hlt
xchg
add
les
cmp
cmp
nop
loopne
xchg
sub
lods
mov
mov
pushf
mov
les
pop
or
or
loopne
xchg
xchg
dec
xor
cmp
ret
ret
add
or
or
or
scas
cmp
gs
les
xchg
gs
testl
call
les
loopne
dec
and
xchg
jnp
cmp
loopne
sub
popa
cmp
inc
add
xchg
scas
les
les
xchg
cmp
inc
mov
fdivs
aam
leave
dec
mov
rclb
les
rorb
dec
cmp
loopne
mov
les
add
push
int3
les
or
or
or
or
ret
gs
les
gs
testl
call
les
loopne
negl
scas
cmp
fmuls
loopne
add
les
loopne
dec
cwtl
loopne
sub
jno
cmp
loopne
scas
cmp
fmuls
loopne
sub
jnp
cmp
loopne
scas
cmp
les
rclb
sub
jo
cmp
loopne
aam
leave
dec
nop
loopne
xchg
sub
mov
les
rorb
mov
call
les
call
or
or
or
or
xchg
xchg
dec
mov
inc
cmp
mov
sub
outsl
les
roll
mov
sub
outsl
les
fdivr
add
xchg
xchg
dec
or
or
cmp
mov
dec
mov
aam
xchg
scas
les
sub
push
cmp
inc
mov
shlb
add
cld
les
int3
les
mov
dec
mov
mov
dec
add
les
int3
les
rolb
les
int3
les
rolb
cld
les
int3
les
scas
cmp
gs
les
enter
testl
in
mov
les
loopne
negl
dec
cwtl
loopne
add
les
aam
and
les
aad
cmp
fmull
loopne
sub
jp
cmp
fmul
les
rclb
sub
ja
cmp
loopne
aam
leave
dec
nop
loopne
xchg
sub
mov
les
rorb
mov
in
mov
les
pop
or
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
loopne
xchg
xchg
xchg
xchg
gs
testl
nop
mov
les
loopne
dec
test
mov
loopne
incl
mov
scas
lds
sbb
dec
cltd
shrb
or
sub
jnp
cmp
add
les
loopne
dec
cwtl
loopne
dec
cwtl
loopne
incl
mov
dec
mov
jge
les
xor
dec
cmp
adc
rclb
xchg
dec
mov
cld
sub
cmp
cmp
shrb
loopne
add
add
cmp
cwtl
inc
mov
leave
dec
nop
loopne
xchg
sub
mov
les
rorb
pop
mov
scas
cmp
add
les
rclb
sub
jbe
cmp
loopne
aam
leave
dec
mov
cld
xchg
sub
mov
les
rorb
mov
nop
mov
les
dec
mov
clc
testl
les
mov
or
or
or
scas
cmp
gs
les
xchg
xchg
gs
testl
inc
les
les
loopne
les
loopne
les
sub
cmp
cmp
dec
push
loopne
les
aam
mov
pushf
add
pop
les
cmp
xchg
xchg
dec
and
xchg
add
pusha
lds
cmp
cmp
dec
mov
hlt
add
insb
sub
cmp
inc
add
xchg
scas
lds
sub
mov
cmp
les
aam
ret
mov
call
loopne
xchg
sub
pop
les
shl
jns
les
loopne
dec
mov
loopne
std
mov
mov
lock
sub
mov
les
rorb
mov
loopne
add
mov
mov
loopne
xchg
sub
mov
les
rorb
mov
add
jo
inc
les
test
sub
mov
les
rorb
pop
cmp
loopne
les
les
inc
add
or
ret
gs
les
gs
testl
call
negl
dec
add
loopne
add
les
loopne
dec
cwtl
loopne
dec
lods
lds
test
cmpxchg
dec
mov
fsubrl
jns
cmp
loopne
scas
cmp
fmuls
loopne
sub
jg
cmp
fmul
les
rclb
sub
je
cmp
loopne
aam
leave
dec
mov
rclb
les
rorb
mov
call
les
call
or
or
dec
and
add
testl
xchg
dec
xor
mov
sar
shlb
inc
les
loopne
xchg
lods
in
int3
aam
adc
mov
shlb
cmp
dec
or
popf
pop
or
or
or
or
or
or
or
mov
sar
shlb
inc
les
loopne
xchg
lods
in
int3
aam
adc
mov
shlb
xchg
sub
mov
int3
lcall
or
or
or
loopne
dec
nop
loopne
scas
les
dec
nop
loopne
xchg
xchg
xchg
sub
ret
push
aam
or
loopne
dec
nop
loopne
scas
lds
dec
nop
loopne
xchg
xchg
xchg
sub
ret
push
aam
or
rol
or
or
or
or
or
or
testl
or
or
or
or
or
loopne
xchg
xchg
dec
xor
cmp
ret
ret
add
or
or
or
xchg
dec
lea
int3
xchg
dec
mov
enter
loopne
les
push
dec
add
scas
cmp
gs
les
aam
add
addr16
les
mov
add
dec
and
add
les
mov
xchg
sub
movsl
les
loopne
mov
les
testl
dec
leave
les
or
or
or
or
or
or
or
enter
dec
ret
je
les
enter
or
dec
aam
lds
push
dec
mov
lcall
or
or
or
or
or
or
or
xchg
dec
xor
or
dec
aam
lds
push
dec
and
dec
or
push
rol
mov
int3
dec
mov
lcall
or
or
or
dec
push
fs
les
push
dec
mov
fmull
dec
push
inc
les
xchg
dec
mov
fcoml
xchg
dec
mov
fcoml
xchg
dec
or
push
push
fadd
or
or
or
or
or
dec
push
pusha
les
push
dec
aam
or
xchg
mov
or
or
or
or
or
or
ret
fcoms
xchg
add
les
push
dec
cwtl
loopne
inc
pop
mov
dec
ret
pusha
les
cmp
dec
aam
xchg
dec
or
xchg
xchg
cmp
lcall
xchg
dec
cwtl
loopne
xchg
dec
test
rclb
rolb
les
lds
faddl
mov
dec
ret
pusha
les
cmp
dec
aam
mov
inc
push
les
adc
add
loop
add
les
push
enter
dec
xchg
in
xchg
cmp
inc
add
jb
lcall
les
adc
les
lahf
push
enter
xchg
dec
xor
sub
xchg
dec
mov
inc
sub
mov
dec
ret
jl
les
cmp
inc
add
rorl
loopne
lods
in
int3
aam
scas
lds
les
mov
fwait
testb
int3
les
dec
xchg
loopne
cmp
inc
add
or
je
lcall
or
or
or
or
or
mov
dec
ret
pusha
les
cmp
dec
mov
enter
push
push
les
mov
push
inc
add
leave
dec
and
dec
adc
lds
adc
testb
enter
or
or
or
xchg
dec
test
enter
lret
imul
sub
mov
cmp
int3
lcall
aam
adc
les
fcompl
xchg
dec
mov
xchg
dec
mov
loopne
test
xchg
dec
popf
int3
xchg
dec
lods
rorb
das
dec
xchg
fdivr
adc
cltd
out
xor
lcall
or
or
or
or
or
or
test
dec
xchg
rol
test
std
dec
shl
push
mov
dec
shl
dec
hlt
push
mov
dec
add
dec
repz
test
xor
mov
dec
repz
negb
rol
int3
std
xchg
fdivl
dec
xchg
fcompl
or
or
or
enter
dec
adc
imul
xchg
dec
stos
rclb
loopne
dec
add
sbb
mov
aam
push
std
ret
dec
and
dec
add
enter
rorb
aam
fsubr
fisttpl
fmull
fmull
fdivl
or
dec
test
fcoms
inc
mov
lret
dec
xchg
fcoml
sub
inc
mov
and
inc
add
add
les
enter
or
or
or
or
or
xchg
fmull
rclb
xchg
dec
sub
dec
mov
sub
or
push
out
add
loopne
incl
dec
and
mov
dec
and
dec
cld
dec
test
rclb
inc
mov
add
aas
mov
dec
mov
dec
pop
out
add
loopne
mov
add
lds
popf
push
int3
les
or
or
or
scas
cmp
gs
les
xchg
xchg
gs
testl
cwtl
mov
les
dec
add
dec
inc
js
les
in
dec
mov
fcoml
adc
sti
lds
mov
mov
cmp
int3
negl
add
les
aam
fwait
rorb
fmull
dec
mov
cwtl
mov
les
inc
add
call
cmp
loopne
add
les
loopne
dec
cwtl
loopne
sub
jb
cmp
loopne
xchg
scas
lds
loopne
xchg
dec
cwtl
loopne
sub
cmpl
ret
aam
mov
lock
add
ret
negl
or
or
or
or
or
or
ret
gs
les
enter
testl
xchg
mov
les
inc
mov
scas
shrl
mov
aam
and
lret
les
and
les
and
les
jb
cmp
loopne
xchg
dec
mov
in
xchg
add
les
aad
les
nop
loopne
xchg
sub
cwtl
mov
mov
shrl
les
dec
push
sbb
les
cmp
testb
loopne
mov
les
push
int3
les
or
or
or
or
or
scas
cmp
gs
les
xchg
xchg
gs
testl
lods
mov
les
loopne
les
loopne
inc
js
dec
les
xor
mov
in
add
les
loopne
add
movsl
jno
cmp
loopne
xchg
dec
mov
test
sub
aad
les
nop
loopne
xchg
sub
lahf
mov
add
inc
mov
les
les
clc
dec
fadd
mov
dec
sbb
sbb
movsl
out
add
mov
les
in
xchg
sub
cmp
cmp
les
dec
inc
loopne
les
cmp
cmp
loopne
les
adc
mov
dec
xchg
in
orb
dec
cmp
cmp
loopne
lds
faddl
and
lret
inc
jns
les
fadds
jb
lcall
mov
dec
sub
mov
xchg
in
add
cmp
inc
loopne
les
loopne
dec
add
loopne
std
aam
rorb
mov
dec
xchg
test
testb
mov
dec
mov
or
add
test
les
les
cmp
out
sbb
cltd
in
push
dec
and
repnz
dec
mov
out
xor
js
dec
les
les
aad
push
adc
les
push
cmp
sbb
dec
push
or
les
push
cmp
sbb
dec
mov
or
sbb
clc
mov
dec
cmp
push
mov
dec
mov
call
push
cmp
test
or
out
push
dec
cmp
les
testl
les
adc
les
push
dec
sbb
sbb
or
sbb
fmuls
in
adc
push
mov
dec
mov
inc
or
dec
and
out
cmp
xchg
sub
aas
cmp
dec
mov
lds
les
adc
les
rcll
sbb
in
add
dec
pop
out
adc
inc
loopne
les
loopne
les
enter
js
dec
les
loopne
dec
xor
add
lret
inc
cmp
cmp
adc
les
push
cmp
sbb
rorb
mov
mov
xchg
xchg
sub
aas
cmp
inc
js
inc
lret
inc
and
les
les
les
dec
push
add
les
push
dec
mov
dec
les
loopne
inc
cmp
mov
sub
dec
cmp
inc
cmp
ret
sub
fld
les
dec
cwtl
loopne
dec
mov
add
les
dec
loopne
les
les
adc
les
push
dec
mov
xchg
add
mov
cmp
int3
dec
mov
dec
jo
inc
les
faddl
or
les
adc
les
les
pusha
les
mov
adc
dec
loopne
les
dec
push
dec
les
les
or
push
dec
dec
loopne
les
sbb
add
sbb
adc
xchg
aaa
outsb
sub
xchg
mov
add
testl
dec
leave
les
inc
add
or
or
or
or
or
or
int3
inc
mov
push
les
fcoms
lds
lret
inc
ja
les
clc
dec
xchg
lock
mov
dec
mov
dec
stos
call
das
dec
mov
lcall
das
idivl
dec
mov
dec
ret
adc
les
push
dec
cmp
sbb
js
cltd
lahf
inc
add
pop
dec
mov
dec
mov
enter
cltd
dec
mov
les
call
add
addb
loopne
dec
add
aam
int3
mov
dec
and
dec
in
ret
dec
xchg
test
dec
mov
or
dec
ficoml
les
cmp
dec
mov
dec
mov
enter
push
add
pop
or
or
or
xchg
dec
test
aam
dec
xor
mov
xchg
dec
clc
int3
aas
mov
dec
adc
xchg
fdiv
or
into
mov
incl
mov
out
push
das
testl
shlb
fmull
xchg
xchg
xchg
sub
mov
enter
fwait
inc
xchg
fadd
lcall
les
or
or
or
or
or
or
or
dec
xchg
aam
sub
xchg
dec
mov
testl
add
adc
add
notl
dec
and
dec
and
dec
aam
test
movl
les
or
or
or
ret
gs
les
gs
testl
cwtl
mov
les
dec
mov
test
lds
rorb
enter
dec
aam
pop
lods
jo
ret
cwtl
loopne
dec
cwtl
loopne
cmp
add
mov
ret
mov
fadds
and
lret
les
loopne
dec
cwtl
loopne
sub
imul
dec
mov
rclb
loopne
xchg
dec
cwtl
loopne
sub
cli
cmp
lods
or
loopne
xchg
add
ret
lahf
xchg
mov
mov
enter
aam
mov
dec
xchg
aam
lcall
loopne
mov
les
cwtl
push
rol
or
or
or
or
or
or
scas
cmp
gs
les
gs
testl
movsb
mov
les
loopne
dec
mov
mov
rol
negl
dec
xchg
enter
mov
lcall
hlt
dec
mov
lods
dec
lcall
insb
dec
aam
movsb
fxch
aam
and
ret
add
mov
ret
add
cmp
aam
adcb
inc
add
inc
add
xchg
lods
inc
les
mov
in
and
lret
les
loopne
dec
cwtl
loopne
sub
push
cmp
loopne
xchg
scas
lds
loopne
xchg
add
pop
stc
cmp
lods
or
loopne
xchg
add
ret
sahf
xchg
mov
and
xchg
dec
mov
aam
jge
cmp
int3
les
int3
xchg
dec
or
and
int3
sub
xor
cmp
and
ret
loopne
decl
mov
dec
aad
scas
lds
adc
add
loopne
mov
les
movsb
push
int3
les
or
or
xchg
dec
xor
mov
add
aaa
outsb
sub
mov
les
hlt
dec
mov
dec
testb
outsb
sub
mov
les
enter
inc
or
dec
aam
lds
push
xor
int
sub
inc
les
rcrb
les
or
or
or
or
or
or
or
scas
cmp
gs
les
gs
testl
mov
addr16
les
dec
dec
loopne
les
dec
test
dec
nop
loopne
xchg
lods
int3
dec
aam
fs
loopne
rol
les
adc
mov
enter
cmp
mov
dec
mov
loopne
adc
add
shlb
testb
loopne
inc
cmp
jb
xor
dec
mov
add
roll
mov
dec
mov
int3
dec
and
xchg
cmp
xchg
jnp
ds
mov
hlt
add
inc
les
sub
cmp
rclb
xchg
add
dec
lds
cmp
lods
or
loopne
xchg
add
ret
jge
mov
push
loopne
les
mov
les
nop
dec
lds
enter
dec
loopne
les
dec
mov
dec
rorb
loopne
or
adc
rorb
inc
add
ret
dec
xchg
cmp
jmp
adc
cmp
mov
dec
rorb
lock
or
adc
add
rolb
mov
inc
cmp
mov
dec
rorb
enter
adc
testl
les
dec
mov
mov
dec
leave
les
mov
aam
or
or
or
or
or
or
mov
aam
cmp
dec
cmp
sbbb
mov
inc
or
aam
les
out
add
jl
aam
les
xor
out
push
dec
and
cmp
lret
dec
and
dec
les
popf
push
rol
or
popf
push
rol
inc
mov
dec
xor
les
nop
dec
lds
enter
cmp
dec
sub
cmp
loopne
dec
rorb
cwtl
dec
and
dec
inc
pusha
les
cmp
dec
aam
push
inc
les
loopne
xchg
lods
in
int3
aam
or
push
dec
mov
mov
dec
sbb
test
mov
xchg
decl
mov
dec
testb
outsb
sub
pop
les
rolb
mov
sub
inc
cmp
inc
pop
mov
testl
adc
les
dec
xchg
xchg
dec
lcall
xchg
dec
and
cmp
call
enter
dec
lds
sarb
push
out
cmp
sub
inc
add
cmp
enter
push
xor
out
ds
dec
cmp
mov
dec
lds
fcoms
dec
rorb
pusha
les
cmp
aam
lds
dec
xchg
xchg
cmp
mov
cmp
cmp
push
int3
les
or
or
or
or
or
xchg
xchg
dec
mov
dec
mov
fcoms
dec
ret
pusha
les
cmp
dec
aam
lds
dec
xchg
xchg
cmp
lcall
or
or
ret
gs
les
les
enter
testl
inc
mov
les
dec
sbbb
cmp
inc
in
aam
push
les
lret
inc
pop
dec
mov
loopne
push
dec
mov
dec
xchg
lock
mov
inc
add
inc
dec
les
pushf
inc
les
mov
ljmp
mov
dec
mov
enter
and
cmp
and
mov
dec
and
dec
fmull
dec
push
pusha
les
cmp
dec
or
mov
shrl
cmp
dec
cmp
inc
loopne
xchg
xchg
xchg
sub
mov
out
or
les
les
nop
dec
lds
in
add
xchg
xchg
xchg
cmp
dec
ret
pusha
les
cmp
scas
lds
les
lret
inc
push
les
mov
lods
fdivrl
ret
mov
pushf
sub
push
cmp
dec
mov
nop
xchg
scas
rorb
je
les
sub
cld
cmp
lods
add
aam
inc
loopne
les
les
xchg
mov
dec
aas
ret
mov
mov
movsb
push
cmp
dec
mov
mov
scas
rorb
lock
xchg
add
pop
les
loopne
ret
aam
inc
loopne
xchg
add
lock
mov
ret
push
mov
les
cwtl
dec
rorb
pusha
les
dec
or
mov
pushf
sub
cmp
nop
dec
aad
xchg
in
cmp
inc
loopne
xchg
xchg
xchg
cmp
dec
ret
pusha
les
cmp
scas
lds
dec
or
xchg
xchg
cmp
dec
loopne
mov
les
inc
add
int3
les
nop
dec
aad
xchg
cmp
mov
dec
inc
pusha
les
dec
or
mov
daa
das
cmp
dec
mov
dec
xchg
cmp
add
sahf
dec
dec
loopne
dec
push
loopne
xchg
xchg
xchg
sub
mov
les
loopne
dec
cmova
enter
mov
dec
pop
out
adc
lret
jb
xchg
dec
rol
das
enter
rol
scas
les
ret
lds
les
nop
dec
lds
fadds
enter
cmp
dec
push
ljmp
mov
lods
dec
aas
ret
mov
clc
sub
push
cmp
dec
mov
cld
xchg
scas
rorb
sbb
les
mov
les
loopne
ret
aam
inc
loopne
les
les
mov
mov
dec
aad
xchg
fcoms
inc
mov
dec
nop
cmp
incl
mov
lret
jb
incl
mov
dec
das
out
sub
shr
add
cmp
cld
aam
roll
lret
inc
push
cmp
cmp
mov
in
mov
and
xchg
scas
rorb
int3
xchg
add
pop
mov
repnz
lods
loopne
ret
aam
push
loopne
xchg
add
int3
mov
ret
daa
mov
les
lds
cmp
mov
mov
lds
jmp
lret
inc
ljmp
ret
dec
loopne
les
push
cmp
dec
inc
loopne
les
movsb
xchg
add
pop
rol
les
icebp
cmp
lods
loopne
ret
aam
push
loopne
xchg
add
movsb
mov
ret
mov
mov
imul
mov
aam
jne
aam
jne
aam
int
or
cmp
mov
dec
les
out
out
add
dec
add
push
xor
push
pop
or
or
or
or
or
or
ret
gs
les
gs
testl
fsubs
les
loopne
add
les
and
and
ret
aam
and
les
and
lds
loopne
xchg
xchg
dec
mov
loopne
les
les
les
and
les
loopne
add
les
mov
dec
aad
scas
lds
adc
add
loopne
mov
les
fadds
or
or
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
mov
pop
inc
add
incl
mov
dec
mov
in
nop
loopne
dec
mov
add
dec
pushf
enter
cmp
aam
into
dec
mov
dec
xor
divl
dec
mov
in
cwtl
loopne
dec
stos
rorb
dec
mov
decl
mov
dec
aad
scas
lds
adc
stos
enter
dec
cwtl
loopne
decl
mov
dec
aad
scas
lds
adc
mov
add
dec
mov
aam
dec
leave
les
add
push
int3
les
or
or
or
sub
xchg
dec
test
rclb
dec
sbb
lret
int3
aam
int3
dec
aam
xor
add
xlat
dec
xchg
xchg
xchg
xchg
cmp
sub
enter
fstl
lods
int3
dec
aam
push
and
aam
add
dec
mov
lcall
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
dec
mov
in
mov
enter
fadd
les
mov
xchg
sub
jnp
cmp
ret
ret
adc
adc
mov
aam
dec
leave
les
aam
rol
xchg
dec
xor
cmp
and
lds
cmc
mov
add
dec
add
or
shrb
or
or
or
or
ret
gs
les
xchg
gs
testl
call
les
loopne
dec
and
xchg
jnp
cmp
aam
mov
shrb
inc
cmp
inc
add
xchg
scas
les
les
idivb
cmp
loopne
aam
fdivs
aam
leave
dec
mov
rclb
les
rorb
je
ret
mov
call
les
add
push
int3
les
or
or
or
or
ret
gs
les
ret
aam
add
addr16
les
loopne
dec
or
ret
ret
lds
test
in
les
dec
test
dec
cmp
and
mov
les
test
aam
les
dec
test
lods
in
les
and
sub
icebp
mov
add
dec
and
add
add
int3
xchg
sub
mov
cmp
testl
xchg
scas
les
sub
mov
les
xchg
dec
adcb
call
add
dec
add
loopne
mov
les
push
rol
or
or
xchg
repz
xor
int
sub
jmp
les
rorb
push
rol
xchg
dec
sub
cmp
cmp
gs
les
les
cmp
aam
add
les
les
dec
and
xchg
sub
mov
add
ret
inc
loopne
les
lock
in
dec
mov
fsubrs
inc
les
enter
xchg
xchg
dec
mov
fsubrs
inc
les
loopne
dec
xchg
fmuls
lock
mov
rorb
cld
cmp
xchg
dec
xchg
dec
mov
fdivrs
adc
js
or
les
loopne
xor
nop
enter
cwtl
ds
dec
dec
loopne
testl
mov
and
cmp
int3
dec
mov
test
add
outsl
dec
dec
loopne
les
les
and
or
or
or
or
or
or
or
dec
dec
je
les
xor
sbb
lret
xchg
dec
mov
cmp
testl
dec
mov
mov
add
outsl
fwait
lcall
xchg
xchg
dec
xor
les
movsb
dec
sbb
pop
inc
daa
lret
xchg
dec
mov
push
aas
mov
dec
xchg
testl
dec
mov
mov
dec
xchg
test
add
outsl
xor
int
sub
ljmp
dec
add
or
or
or
or
or
or
or
cmp
sub
xchg
dec
cltd
rclb
dec
xor
inc
cmp
inc
push
les
les
movsb
int3
aam
mov
xchg
dec
xchg
lock
in
cmp
mov
aam
push
inc
les
nop
aad
shrb
mov
mov
test
aad
enter
mov
dec
mov
add
dec
xchg
cmp
pop
mov
mov
inc
cmp
mov
jnp
les
nop
dec
mov
dec
aad
push
dec
les
xchg
dec
or
mov
inc
pop
mov
mov
inc
mov
fwait
lcall
les
les
or
or
or
or
or
jl
les
or
or
or
or
or
dec
test
or
or
or
or
or
ret
gs
les
ret
aam
add
addr16
les
loopne
testl
aam
lea
les
mov
dec
xchg
test
movsb
dec
xchg
lea
xor
inc
es
adc
xchg
nop
dec
jl
les
les
ret
ret
aam
popa
dec
mov
enter
les
enter
or
or
dec
inc
jo
les
loopne
xchg
sub
mov
rol
or
or
or
or
or
or
jl
les
les
ret
ret
aam
popa
fwait
lcall
or
dec
inc
jo
les
or
or
or
or
or
les
sub
cmc
mov
cmp
add
inc
cmp
les
ret
xor
ret
add
add
pop
or
or
xchg
xchg
dec
mov
enter
ret
add
les
shrb
or
loopne
dec
add
in
pop
cmp
dec
add
or
dec
add
add
mov
dec
mov
dec
adc
test
dec
mov
add
testl
cwtl
movl
xchg
sub
out
mov
andl
je
les
aam
mov
dec
or
sbb
test
testl
jo
movl
xchg
sub
out
mov
add
dec
add
or
or
or
or
or
dec
nop
loopne
xchg
dec
xor
dec
ret
enter
or
adc
and
dec
mov
int3
dec
rorb
test
lcall
dec
nop
loopne
xchg
dec
xor
dec
ret
enter
or
adc
and
dec
mov
int3
dec
rorb
cld
xchg
xchg
dec
or
push
lcall
dec
nop
loopne
xchg
dec
xor
dec
ret
enter
or
adc
rorb
loopne
dec
xchg
hlt
xchg
dec
or
push
lcall
or
or
or
cli
dec
sbb
adc
mov
enter
xchg
xchg
dec
or
push
fwait
lcall
dec
nop
loopne
xchg
dec
xor
dec
ret
enter
or
adc
rorb
loopne
dec
xchg
rclb
push
enter
or
or
or
xchg
dec
xor
sbb
adc
mov
enter
xchg
xchg
dec
or
push
fwait
lcall
scas
cmp
gs
les
les
enter
testl
fs
les
les
fs
dec
dec
loopne
les
mov
inc
loopne
negl
xchg
jnp
cmp
aam
mov
pushf
dec
pop
loopne
les
sbb
cmp
dec
mov
loopne
inc
loopne
lds
inc
cmp
xchg
jnp
cmp
aam
mov
mov
sub
inc
cmp
xchg
xchg
dec
mov
mov
sub
push
cmp
inc
add
dec
js
je
les
loopne
shrb
cmp
jp
std
mov
mov
lock
sub
in
mov
add
jns
les
loopne
dec
cwtl
loopne
dec
cwtl
loopne
std
jo
inc
les
test
sub
in
mov
add
dec
push
les
loopne
dec
cwtl
loopne
std
mov
call
loopne
xchg
sub
in
mov
add
dec
test
call
dec
cwtl
loopne
std
mov
mov
loopne
xchg
sub
in
mov
add
dec
test
mov
dec
cwtl
loopne
std
jo
pop
les
dec
les
inc
add
dec
add
ret
push
dec
loopne
les
les
inc
add
les
int3
les
or
or
or
xchg
dec
xor
ret
mov
dec
adc
sub
in
mov
add
testl
les
loopne
adc
or
les
or
or
or
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
ret
mov
enter
loopne
les
and
les
and
les
pop
cmp
dec
and
xchg
dec
mov
loopne
add
les
les
aam
nop
loopne
xchg
sub
xchg
les
or
loopne
xchg
xchg
dec
xor
cmp
ret
ret
add
or
or
or
xor
dec
xor
ret
int
sub
in
mov
add
dec
add
add
jl
ret
or
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
mov
dec
mov
cwtl
dec
nop
loopne
dec
les
les
inc
add
subb
aam
mov
enter
loopne
les
loopne
dec
and
sub
pop
cmp
dec
and
xchg
dec
mov
loopne
add
les
cmp
cmp
nop
loopne
xchg
sub
test
les
loopne
mov
les
int3
les
or
or
or
or
scas
cmp
gs
les
xchg
gs
testl
fsubs
les
loopne
jnp
les
loopne
sub
rol
dec
xor
mov
faddl
and
les
and
jl
ret
xchg
dec
mov
lock
cmp
cmp
and
les
les
enter
or
push
testb
jge
les
std
mov
add
dec
mov
fsubs
les
add
push
rol
or
or
or
or
ret
gs
les
cmp
aam
add
loopne
xchg
xchg
xchg
xchg
gs
testl
pushf
mov
les
loopne
dec
and
negl
dec
xor
dec
cwtl
loopne
incl
mov
scas
lds
sbb
les
shrb
lcall
sub
add
les
loopne
dec
cwtl
loopne
dec
cwtl
loopne
incl
mov
notl
xor
dec
mov
fmuls
inc
ds
fiadds
sbb
lret
jb
xchg
dec
mov
clc
sub
sbb
cmp
shrb
loopne
add
lods
dec
cmp
dec
cwtl
loopne
inc
mov
leave
dec
nop
loopne
xchg
sub
loope
les
rorb
pop
mov
dec
mov
shrb
loopne
add
les
rclb
sub
dec
cmp
inc
mov
leave
dec
mov
clc
xchg
sub
loope
les
rorb
mov
pushf
mov
les
dec
mov
test
or
loopne
les
xchg
pop
or
or
or
jl
les
sbb
rcrl
int3
aam
fs
ret
rcrl
aam
les
jmp
shlb
int3
aam
add
xchg
xchg
sub
les
sbb
int3
aam
xor
cmp
rorb
scas
les
aam
sub
loope
les
rorb
lcall
int3
aam
add
cmp
gs
les
ret
aam
add
addr16
les
mov
xor
add
dec
mov
int3
testl
les
lds
fs
add
shrb
cmp
cmp
loopne
mov
les
pop
dec
add
loopne
mov
les
pop
or
or
or
or
loopne
xchg
xchg
dec
mov
dec
mov
dec
lds
fcoml
rclb
dec
xchg
rorb
fmuls
cmp
cmp
mov
rclb
jge
cmp
loopne
dec
rorb
call
cmp
fwait
lcall
or
or
or
or
or
rorb
inc
sub
dec
xchg
aam
dec
mov
xchg
dec
mov
xchg
dec
mov
dec
lds
loopne
xchg
dec
nop
loopne
xchg
cmp
sub
dec
xchg
rorb
dec
mov
scas
rorb
add
and
xchg
movl
xchg
out
cmp
sub
mov
enter
lahf
push
enter
or
xchg
dec
xor
dec
mov
xchg
dec
test
rclb
add
add
sub
mov
enter
fimull
rorb
dec
xchg
loopne
mov
dec
and
scas
fsubr
sbb
cmp
rorb
rclb
mov
dec
lds
enter
adc
and
mov
decl
int3
dec
cld
dec
aad
std
dec
aam
sub
mov
fwait
cltd
decl
int3
dec
hlt
dec
aad
cmc
dec
aam
lahf
push
enter
or
enter
loopne
xchg
dec
mov
add
inc
or
out
ss
push
out
ds
mov
enter
ret
inc
add
inc
sub
cmp
in
mov
fmuls
loopne
cltd
movl
out
sbb
xor
adc
cmp
aaa
out
push
dec
push
out
ss
ror
not
test
lds
cmp
popf
pop
or
or
or
or
or
xchg
xchg
dec
test
aam
dec
mov
aam
dec
cmp
add
notl
inc
add
in
adc
xor
loopne
xchg
dec
fcom
neg
inc
push
ror
inc
sub
mov
dec
mov
fmull
loopne
lahf
dec
rclb
out
sub
enter
inc
or
cltd
popf
pop
xor
cmp
add
adc
push
dec
adc
push
into
add
dec
or
xor
dec
shl
not
test
push
inc
sub
mov
testl
add
or
or
or
or
or
or
or
inc
sub
xchg
scas
aam
sub
test
inc
add
jecxz
les
inc
les
inc
add
inc
xor
inc
les
adc
test
inc
add
sbb
pop
scas
lds
mov
enter
mov
mov
loopne
xchg
add
ret
mov
mov
or
or
or
or
or
enter
pop
test
inc
add
loope
les
mov
inc
add
inc
xor
mov
xchg
sub
test
inc
add
pop
lcall
lods
je
int3
aam
mov
enter
mov
mov
loopne
xchg
add
ret
sar
les
or
or
or
or
or
or
or
divl
das
ret
dec
pusha
loopne
lret
jb
aam
ret
push
add
lods
add
lods
or
dec
push
add
dec
push
add
add
dec
fcom
testl
notl
negl
iret
adc
xor
int3
aam
shlb
xchg
int3
aam
inc
cmp
mov
lcall
int3
aam
stc
adc
int3
aam
stc
adc
add
and
pop
or
or
or
or
inc
sub
xchg
xchg
testl
xchg
dec
lret
jb
aam
ret
aam
sub
sub
dec
test
fsubrs
fisttps
add
inc
and
aam
fadd
negl
enter
add
inc
and
dec
mov
rorb
add
dec
xor
lds
lods
sub
fcomip
or
dec
sub
fcomip
or
loopne
lods
sub
fcomip
or
loopne
lods
sub
fcomip
or
rorb
sub
fcomip
or
pop
imull
lods
pop
ffreep
imull
dec
sbb
imull
dec
cwtl
loopne
lods
pop
ffreep
imull
dec
cwtl
loopne
lods
pop
ffreep
imull
dec
push
lods
pop
ffreep
imull
iret
or
lods
cmp
lods
sub
ffreep
dec
fadds
negl
dec
sub
dec
lods
sub
ffreep
negl
iret
cmovg
ffreep
les
inc
imull
sub
das
imull
lods
xor
lods
push
ffreep
imull
imull
imull
add
iret
adc
and
testl
aam
call
aam
stc
dec
and
lret
dec
imul
cmp
and
inc
add
pop
xchg
dec
sub
xor
sub
dec
or
enter
dec
and
dec
mov
rolb
ret
aam
dec
fadd
les
fadd
les
inc
rol
les
fcoml
xchg
dec
pop
dec
mov
in
les
lcall
dec
and
dec
inc
dec
jnp
mov
sub
mov
les
lcall
rorb
loopne
xchg
lret
inc
pop
aaa
lret
stos
add
xchg
xchg
mov
call
les
call
or
mov
test
xor
dec
shlb
shl
dec
mov
dec
or
add
dec
mov
testl
les
dec
rolb
jae
jle
cmp
aam
or
inc
imul
les
loopne
inc
cmp
mov
dec
and
adc
mov
testl
cmp
mov
dec
sub
mov
mov
mov
les
testl
fdiv
add
mov
testl
mov
dec
clc
jae
lret
out
mov
les
test
ret
dec
shlb
shl
jae
xorb
mov
testl
dec
xorb
inc
rol
les
dec
enter
jae
incl
cmp
dec
mov
fmull
rorb
dec
mov
cmp
add
inc
inc
ret
les
aam
inc
fadd
les
incl
stos
les
lret
mov
lds
aam
rol
les
push
cmp
cmp
call
les
dec
mov
push
mov
mov
inc
add
decl
mov
mov
dec
mov
fwait
lcall
les
sub
fcmovnb
les
jae
dec
adc
jb
lret
jb
aam
ret
adc
xor
lret
jb
lret
jb
aam
ret
and
testl
jb
aam
ret
and
testl
jb
aam
ret
and
testl
dec
mov
testl
dec
xorb
xchg
enter
nop
jae
dec
inc
dec
dec
rol
les
inc
dec
xorb
and
rol
ret
aam
push
lret
inc
rol
les
loopne
inc
cmp
mov
dec
and
adc
mov
testl
cmp
mov
dec
mov
dec
adc
jb
aam
ret
adc
jb
lret
jb
aam
ret
and
testl
int3
lret
jb
lret
jb
aam
ret
and
lret
jb
testl
cmp
aam
mov
add
testl
fdiv
add
mov
testl
dec
xorb
adc
cs
jb
lret
jb
aam
ret
or
sub
lret
jb
aam
ret
es
notl
jb
aam
ret
es
notl
jb
aam
ret
es
notl
rorl
loopne
not
inc
add
dec
shlb
and
dec
add
push
dec
xorb
mov
testl
dec
nop
jae
dec
inc
dec
dec
rol
les
inc
dec
xorb
push
lret
inc
das
cmp
cmp
loopne
dec
xchg
rorb
dec
jae
dec
mov
cmp
add
orb
lcall
sub
cmp
testl
dec
rolb
inc
cmp
mov
dec
adc
and
movl
jle
les
dec
faddl
rolb
mov
sub
dec
leave
and
mov
sub
cmp
dec
adc
rol
les
inc
cmp
cmp
dec
nop
loopne
dec
and
incl
lret
inc
adc
les
inc
int3
dec
sbb
xchg
cmp
push
dec
ds
push
lret
jb
aam
ret
das
aam
jb
lret
jb
aam
ret
sub
lret
jb
aam
ret
clc
cmp
mov
aam
clc
sbb
clc
adc
mov
aam
jb
cmp
jb
aam
ret
clc
adc
mov
aam
xchg
cmp
push
add
push
lret
jb
aam
ret
das
fmul
jb
aam
ret
fcomps
adc
adc
xchg
cmp
cs
lret
jb
lret
jb
aam
ret
fcoms
push
mov
aam
jb
cmp
jb
aam
ret
fcoms
pop
mov
aam
pushf
cmp
mov
dec
push
dec
ds
int3
lret
jb
lret
jb
aam
ret
jb
lret
jb
aam
ret
sub
lret
jb
aam
ret
clc
cmp
mov
aam
clc
sbb
clc
adc
mov
aam
jb
cmp
jb
aam
ret
clc
adc
mov
aam
xchg
cmp
add
fmul
jb
aam
ret
fcomps
adc
push
lret
jb
aam
ret
fcoms
adc
xchg
cmp
push
lret
jb
aam
ret
fcoms
push
mov
aam
jb
cmp
jb
aam
ret
fcoms
pop
mov
aam
pushf
cmp
cmp
dec
ds
jnp
cmp
aam
clc
cmp
mov
aam
push
add
pop
lret
jb
aam
ret
clc
sbb
cs
lret
jb
lret
jb
aam
ret
clc
adc
mov
aam
jb
lret
jb
aam
ret
clc
adc
mov
aam
aad
push
add
push
lret
jb
aam
ret
das
fmul
jb
aam
ret
fcomps
adc
adc
aad
cs
lret
jb
lret
jb
aam
ret
fcoms
push
mov
aam
jb
lret
jb
aam
ret
fcoms
pop
mov
aam
add
dec
pushf
xor
std
dec
xchg
xor
dec
ds
aam
jb
lret
jb
aam
ret
sub
lret
jb
aam
ret
clc
cmp
mov
aam
jb
lret
jb
aam
ret
clc
sbb
sub
push
mov
aam
jb
xor
jb
aam
ret
clc
adc
mov
aam
xchg
rorb
add
push
lret
jb
aam
ret
das
fmul
jb
aam
ret
fcomps
adc
adc
xchg
rolb
push
lret
jb
aam
ret
fcoms
push
mov
aam
jb
ror
jb
aam
ret
fcoms
pop
mov
aam
nop
loopne
dec
pushf
xor
rorb
loopne
inc
push
rolb
dec
nop
loopne
dec
mov
lret
inc
repnz
cmp
loopne
dec
rclb
dec
or
sub
aam
ret
enter
int3
aam
sub
lret
jb
lret
jb
aam
ret
das
aam
jb
lret
jb
aam
ret
enter
int3
aam
enter
int3
aam
jb
push
lret
jb
aam
ret
enter
int3
aam
adcb
enter
dec
or
sub
aam
ret
enter
int3
aam
sub
lret
jb
lret
jb
aam
ret
das
aam
jb
lret
jb
aam
ret
enter
int3
aam
enter
int3
aam
jb
push
ror
inc
aam
ret
enter
int3
aam
adcb
mov
dec
sbb
or
sub
aam
ret
enter
int3
aam
sub
add
add
jb
aam
ret
jb
lret
jb
aam
ret
enter
int3
aam
enter
int3
aam
jb
push
int3
lret
jb
aam
ret
enter
int3
aam
adcb
mov
dec
sbb
or
sub
aam
ret
enter
int3
aam
sub
add
add
jb
aam
ret
jb
lret
jb
aam
ret
enter
int3
aam
enter
int3
aam
jb
push
enter
aam
ret
enter
int3
aam
mov
dec
mov
dec
ret
rorb
lret
push
dec
rorb
aam
or
and
dec
xchg
aam
add
rorb
ror
dec
mov
dec
xchg
aam
es
dec
xor
dec
mov
dec
or
and
int3
lret
push
dec
xchg
int3
dec
mov
add
dec
xor
dec
xchg
aam
or
rorb
enter
mov
dec
xchg
aam
or
rorb
enter
lcall
pop
test
aaa
lcall
mov
lea
movb
inc
or
dec
add
adc
les
lret
or
inc
add
inc
sub
lcall
les
or
or
or
or
cmp
sub
inc
stc
and
xchg
dec
xor
call
test
xor
int3
aam
mov
dec
adc
xchg
int3
scas
les
dec
or
rol
les
cltd
push
enter
fadd
les
int3
dec
xchg
rorb
dec
mov
dec
test
dec
mov
inc
add
rorb
enter
dec
mov
dec
mov
fmuls
rorb
loopne
dec
mov
inc
add
inc
stc
and
and
dec
nop
loopne
dec
mov
loopne
mov
sub
test
les
loopne
dec
nop
loopne
idivl
testl
les
loopne
out
adc
int3
aam
leave
movsb
lret
dec
mov
int3
les
leave
or
int3
aam
mov
ror
add
loopne
dec
mov
in
mov
loopne
jb
neg
cmp
xchg
int3
aam
sub
in
jb
dec
enter
int3
aam
mov
aam
jb
loopne
dec
enter
int3
aam
mov
aam
mov
rolb
lret
jb
loopne
add
loopne
lret
jb
dec
enter
int3
aam
enter
int3
aam
mov
add
lret
jb
idiv
or
xchg
int3
aam
cs
dec
mov
loopne
add
cmp
xchg
int3
aam
jb
idiv
or
jb
loopne
idiv
or
xchg
int3
aam
mov
fdiv
or
jb
test
aam
mov
int3
dec
mov
fmul
jb
add
cmp
xchg
int3
aam
clc
or
cs
lret
jb
idiv
or
xchg
int3
aam
sub
lret
jb
add
adc
xchg
int3
aam
rorb
push
xchg
int3
aam
mov
call
add
add
xchg
int3
aam
and
dec
test
adc
dec
and
lret
jb
dec
rclb
xchg
int3
aam
das
int3
lret
jb
dec
clc
or
xchg
int3
aam
jb
loopne
idivl
test
das
int3
dec
mov
call
xchg
int3
aam
cwtl
loopne
test
aam
cwtl
loopne
add
loopne
lret
jb
test
aam
cwtl
loopne
dec
rclb
adc
xchg
int3
add
enter
aam
jb
idiv
sbb
jb
loopne
dec
mov
loopne
add
cmp
xchg
int3
aam
clc
sbb
xchg
int3
aam
cwtl
loopne
notl
add
aas
test
aam
das
int3
lret
jb
test
aam
jb
loopne
add
sbb
xchg
int3
aam
fdivrs
pop
xchg
int3
aam
cwtl
loopne
dec
cwtl
loopne
add
aas
not
cmp
xchg
int3
aam
das
int3
lret
jb
test
aam
das
int3
test
aam
jb
dec
clc
cmp
xchg
int3
aam
mov
dec
mov
cmp
xchg
int3
aam
mov
dec
mov
push
dec
cmp
clc
cmp
xchg
int3
aam
clc
sbb
xchg
int3
aam
cs
idivl
ror
jb
dec
rclb
push
xchg
int3
aam
nop
loopne
dec
sbb
loopne
add
loopne
lret
jb
loopne
add
cmp
xchg
int3
aam
clc
adc
xchg
int3
aam
jb
idiv
or
mov
loopne
mov
lret
jb
neg
adc
xchg
int3
aam
sub
aam
jb
dec
adc
rclb
adc
cmp
xchg
int3
aam
jb
loopne
not
cmp
sub
cmc
nop
loopne
lret
jb
dec
rclb
push
xchg
int3
aam
nop
loopne
add
adc
fcoms
adc
sub
dec
rolb
adc
or
xchg
int3
aam
add
cmc
nop
loopne
inc
test
in
lret
inc
lds
cmp
dec
and
lret
jb
lret
jb
or
sub
lret
jb
add
loopne
lret
jb
or
jb
add
rolb
xchg
int3
aam
and
dec
and
dec
nop
loopne
lret
jb
or
jb
add
loopne
lret
jb
or
jb
add
loopne
lret
jb
or
jb
add
rolb
xchg
int3
aam
and
dec
and
dec
nop
loopne
lret
jb
or
jb
add
loopne
lret
jb
or
jb
add
loopne
lret
jb
or
jb
add
rolb
xchg
int3
aam
nop
loopne
lret
jb
or
jb
add
loopne
lret
jb
dec
nop
loopne
lret
jb
or
jb
add
das
int3
dec
nop
loopne
lret
jb
lret
jb
adc
mov
repnz
enter
int3
aam
mov
clc
dec
lret
loopne
dec
and
dec
or
dec
aam
notl
notl
aad
xchg
rolb
movl
idivl
mov
dec
int3
das
testl
add
movl
idivl
mov
dec
int3
das
testl
add
movl
divl
mov
dec
testl
lahf
dec
and
add
testl
dec
and
dec
sub
cmp
sub
inc
stc
and
xchg
dec
xor
call
mov
aaa
lcall
adc
xchg
int3
scas
les
dec
or
aad
les
cltd
push
enter
fadd
les
int3
dec
xchg
rorb
dec
mov
dec
test
inc
add
fmull
int3
not
inc
add
dec
nop
loopne
dec
xchg
sub
xchg
rolb
int3
aam
dec
mov
dec
nop
loopne
dec
xchg
cmp
mov
fmuls
cmp
loopne
dec
nop
loopne
dec
mov
in
leave
sub
mov
loopne
dec
mov
in
cmp
push
das
lret
das
int
pusha
loopne
les
dec
mov
adc
int3
aam
shll
loopne
inc
ds
int3
les
rorl
int3
aam
nop
loopne
int
loopne
iret
push
dec
nop
loopne
dec
nop
loopne
iret
nop
loopne
lret
jb
test
aam
cs
lret
jb
neg
cmp
jb
loopne
add
loopne
add
adc
mov
aam
sarb
adc
loopne
dec
nop
loopne
add
ds
aam
jb
loopne
add
loopne
add
adc
mov
aam
sarb
adc
mov
cmp
mov
aam
nop
loopne
dec
nop
loopne
add
loopne
dec
mov
push
dec
rclb
adc
nop
loopne
lret
jb
add
loopne
add
cmp
mov
aam
clc
adc
mov
aam
jb
loopne
idiv
adc
mov
aam
sub
lret
jb
dec
rclb
adc
nop
loopne
add
adc
rclb
push
mov
aam
nop
loopne
lret
jb
loopne
add
add
mov
aam
rclb
mov
aam
nop
loopne
testl
negl
mov
loopne
das
rorb
in
jb
dec
rolb
mov
aam
or
sub
dec
clc
adc
mov
aam
mov
loopne
idiv
adc
mov
aam
nop
loopne
add
loopne
lret
jb
add
loopne
lret
jb
add
loopne
lret
jb
dec
rolb
mov
aam
ret
int3
test
aam
enter
int3
aam
enter
int3
aam
nop
loopne
testl
mov
aam
cs
lret
jb
test
aam
cs
dec
nop
loopne
dec
nop
loopne
lret
jb
loopne
add
adc
mov
aam
sarb
adc
mov
lret
jb
test
aam
das
int3
lret
jb
idiv
adc
mov
aam
nop
loopne
dec
mov
int3
dec
rclb
adc
int3
lret
jb
not
cmp
das
int3
cmc
nop
loopne
test
aam
jb
dec
rclb
pop
mov
aam
xchg
faddl
loopne
lret
jb
dec
clc
adc
mov
aam
mov
ror
jb
idiv
sbb
mov
aam
cs
dec
mov
ds
clc
cmp
mov
aam
sub
idiv
sbb
cs
idivl
rorb
loopne
dec
sbb
jb
neg
cmp
mov
aam
sub
adc
int3
lret
jb
test
aam
jb
loopne
test
aam
jb
testl
mov
aam
mov
loopne
add
cmp
mov
aam
jb
idiv
or
mov
aam
cs
lret
jb
idiv
or
sub
cmc
mov
int3
dec
rclb
adc
or
rorb
adc
sub
cmc
nop
loopne
neg
add
mov
aam
add
inc
test
loopne
lret
inc
leave
cmp
cmp
loopne
lret
jb
lret
jb
or
int3
aam
sub
lret
jb
add
loopne
lret
jb
or
int3
aam
jb
add
rolb
mov
aam
and
dec
and
dec
nop
loopne
lret
jb
or
int3
aam
jb
add
loopne
lret
jb
or
int3
aam
jb
add
loopne
lret
jb
or
int3
aam
jb
add
rolb
mov
aam
nop
loopne
lret
jb
or
int3
aam
jb
dec
nop
loopne
lret
jb
or
int3
aam
and
add
pop
lret
jb
add
int3
aam
nop
loopne
add
pop
lret
jb
adc
int3
aam
mov
decb
icebp
dec
and
lret
jb
add
enter
int3
aam
mov
hlt
lret
jb
adc
int3
aam
sub
lret
jb
dec
mov
dec
jb
adc
int3
aam
sub
lret
jb
dec
mov
repnz
jb
adc
int3
aam
sub
lret
jb
add
int3
aam
or
dec
lret
loopne
dec
nop
loopne
inc
add
rorb
notl
notl
aad
xchg
rolb
movl
idivl
mov
dec
int3
das
testl
add
movl
idivl
mov
dec
int3
das
testl
add
movl
divl
mov
dec
testl
lahf
dec
and
add
testl
dec
and
or
or
or
or
or
or
or
jmp
dec
stc
movsb
lret
dec
gs
dec
les
cmp
dec
jo
int3
mov
out
mov
aam
lret
mov
les
in
add
mov
mov
inc
add
inc
cmp
les
loopne
mov
stos
mov
dec
sahf
rorb
fmull
fdiv
add
mov
movl
movl
movl
movl
les
xor
rol
lret
inc
pop
dec
jo
and
les
lret
stos
shlb
lret
mov
lret
mov
lret
stos
adc
lret
stos
sbb
lret
mov
push
shlb
mov
ror
xor
stos
mov
or
jb
notl
aam
jb
testl
dec
add
lret
mov
ror
xor
cwtl
xor
lret
jb
lret
stos
mov
or
xor
nop
xor
lret
jb
testl
lret
jb
testl
lds
xor
stos
mov
or
jb
notl
lret
jb
notl
xor
mov
lds
xor
cwtl
xor
mov
dec
inc
loopne
mov
dec
js
or
lret
stos
inc
loopne
mov
lret
jb
lret
stos
mov
add
jb
idivl
xor
stos
mov
add
aaa
testl
shl
loopne
mov
lret
jb
testl
testl
movb
idivl
xor
lret
jb
idivl
xor
stos
mov
add
mov
loopne
mov
dec
inc
loopne
mov
dec
pop
loopne
mov
dec
js
int3
mov
sub
lret
stos
dec
loopne
mov
dec
pop
loopne
mov
dec
dec
loopne
mov
dec
push
loopne
mov
dec
inc
loopne
mov
aaa
lret
stos
aam
jo
and
les
lret
stos
ljmp
sub
mov
lret
mov
shlb
mov
ror
xor
stos
mov
or
jb
notl
aam
jb
testl
dec
add
lret
mov
ror
xor
cwtl
xor
lret
jb
lret
stos
mov
or
xor
nop
xor
lret
jb
testl
lret
jb
testl
lds
xor
stos
mov
or
jb
notl
lret
jb
notl
xor
mov
lds
xor
cwtl
xor
lret
jb
lret
stos
mov
or
mov
int3
mov
das
fwait
lret
mov
dec
inc
loopne
mov
dec
pop
loopne
mov
testb
and
lret
cmp
notl
negl
xor
xor
add
loopne
mov
lret
jb
testl
vmovmskps
enter
pusha
loopne
mov
sub
lret
stos
inc
loopne
dec
js
or
lret
jb
lret
stos
mov
add
lret
jb
idivl
aam
jb
idivl
xor
stos
mov
add
xor
stos
mov
add
jb
dec
xorb
lret
jb
testl
ror
xor
xorb
lret
jb
negl
aam
jb
testl
movb
idivl
xor
lret
jb
idivl
xor
stos
mov
add
testl
negl
add
lret
mov
loopne
dec
js
sbb
lret
jb
lret
stos
mov
add
lret
jb
idivl
aam
jb
idivl
xor
stos
mov
add
xor
stos
mov
add
jb
dec
xorb
lret
jb
testl
ror
xor
xorb
lret
jb
negl
aam
jb
testl
movb
idivl
xor
lret
jb
idivl
xor
stos
mov
add
testl
negl
adc
lret
mov
xor
cmp
lret
inc
push
cmp
cmp
lret
jb
lret
jb
xor
lret
jb
idivl
js
push
mov
lret
jb
lret
jb
xor
lret
jb
idivl
js
adc
les
xor
jb
xor
lret
jb
idivl
js
push
mov
add
xor
jb
xor
lret
jb
idivl
js
sbb
les
xor
jb
xor
lret
jb
idivl
js
sbb
les
xor
jb
xor
lret
jb
idivl
js
adc
lret
jb
lret
jb
xor
lret
jb
idivl
js
adc
lret
jb
lret
jb
xor
lret
jb
idivl
js
sbb
les
loopne
mov
dec
pop
loopne
mov
dec
dec
loopne
mov
aaa
lret
stos
aam
lret
sub
mov
xor
les
and
les
and
les
adc
les
lret
mov
dec
loopne
mov
lret
inc
iret
cmp
cmp
lret
xchg
add
inc
loopne
mov
lret
in
test
test
test
test
in
test
in
test
in
test
in
lret
in
test
lret
in
test
lret
in
test
lret
in
test
in
test
lret
mov
lahf
fwait
lcall
or
or
xchg
dec
sub
xor
or
inc
sub
xchg
dec
mov
xchg
dec
mov
lret
dec
xchg
cmp
lret
mov
mov
inc
push
cmp
xchg
int
pusha
loopne
les
mov
lret
stos
les
mov
lret
stos
aam
add
mov
mov
sbb
add
stos
mov
xor
enter
cld
sbb
mov
mov
mov
dec
and
or
or
or
or
or
xchg
dec
sub
xor
dec
or
dec
mov
dec
xchg
aam
dec
cltd
fcoms
dec
mov
ret
mov
lret
mov
int
lret
sub
lret
mov
into
mov
lret
mov
lret
sub
lret
mov
mov
inc
add
les
lret
stos
int3
mov
mov
lret
stos
int
lret
cld
sbb
lret
mov
into
mov
mov
lret
stos
lret
aam
das
lds
mov
add
cltd
fmuls
fsubl
daa
shlb
lret
cld
sbb
lret
mov
int
lret
cld
sbb
lret
mov
into
mov
mov
lret
stos
lret
lret
cld
sbb
lret
mov
and
or
or
xchg
dec
sub
xor
or
inc
sub
xchg
dec
mov
xchg
dec
mov
lret
dec
xchg
cmp
lret
mov
mov
inc
push
cmp
xchg
int
pusha
loopne
les
mov
lret
stos
les
mov
lret
stos
aam
add
mov
mov
sbb
add
stos
mov
xor
enter
cld
sbb
mov
mov
mov
dec
and
or
or
or
or
or
xchg
dec
sub
xor
dec
or
dec
mov
dec
xchg
aam
dec
cltd
fcoms
dec
mov
ret
mov
lret
mov
int
lret
sub
lret
mov
into
mov
lret
mov
lret
sub
lret
mov
mov
inc
add
les
lret
stos
int3
mov
mov
lret
stos
int
lret
cld
sbb
lret
mov
into
mov
mov
lret
stos
lret
aam
das
lds
mov
add
cltd
fmuls
fsubl
daa
shlb
lret
cld
sbb
lret
mov
int
lret
cld
sbb
lret
mov
into
mov
mov
lret
stos
lret
lret
cld
sbb
lret
mov
and
or
or
xchg
dec
sub
enter
ret
aam
add
cmp
lcall
xor
mov
sub
pushf
les
lcall
sbb
push
fadd
les
mov
xchg
dec
or
xchg
xchg
lods
fs
aam
test
aam
nop
mov
sub
inc
stc
and
shrl
les
lcall
dec
cltd
rolb
aam
ret
dec
pop
sub
jp
xchg
int3
aam
and
int3
aam
and
lret
les
cmpl
and
lret
les
dec
les
les
faddp
les
dec
adc
cmp
push
dec
add
les
cmp
cmp
sar
mov
call
mov
call
mov
das
aam
add
jae
add
imul
dec
mov
fimull
int3
dec
mov
xor
xchg
enter
xor
xchg
enter
xor
cmpl
ret
int3
dec
xchg
enter
les
inc
and
mov
inc
push
mov
jle
lcall
les
mov
dec
xchg
enter
sarl
int3
aam
push
sub
les
inc
es
lret
jb
xor
fists
xor
out
cmp
jge
les
xor
les
mov
inc
mov
dec
mov
cmp
xor
les
mov
std
mov
mov
dec
mov
das
divl
dec
push
cmp
lret
jb
dec
jne
les
lds
out
push
dec
xchg
xor
lds
lret
inc
or
out
sbb
rol
out
xchg
inc
add
add
int3
dec
push
fadd
les
xor
cmp
das
fisttps
fmull
rorb
aam
dec
or
xchg
xchg
xchg
dec
or
push
cmp
dec
mov
dec
mov
testl
les
cltd
push
rol
or
inc
stc
and
dec
xor
xchg
les
lcall
and
dec
mov
rorb
fadd
les
dec
mov
rclb
dec
mov
xchg
xchg
lods
hlt
and
aam
adc
aam
add
les
fcomps
nop
loopne
dec
and
dec
mov
aam
dec
nop
loopne
xchg
dec
and
xchg
xchg
xchg
dec
or
push
cmp
lcall
or
or
or
dec
nop
loopne
dec
mov
int3
xchg
dec
cwtl
loopne
xchg
dec
xor
sbb
lret
xor
lcall
mov
inc
ds
mov
decl
mov
out
push
dec
clc
push
testl
pop
lahf
push
enter
clc
mov
inc
jl
les
lds
das
notl
lcall
mov
add
les
testl
push
lahf
push
enter
or
or
xchg
xchg
dec
cwtl
loopne
xchg
dec
xor
xor
fadd
les
cmp
out
aaa
xchg
dec
enter
xchg
sub
sti
mov
nop
loopne
xchg
dec
mov
in
sub
mov
inc
add
dec
or
add
lahf
inc
or
les
inc
lret
push
dec
rolb
incl
or
loopne
les
loopne
mov
add
mov
out
or
dec
lock
dec
hlt
inc
add
inc
lds
or
enter
xchg
sub
cmp
les
aam
or
or
or
or
or
xor
sub
aam
add
loopne
dec
or
dec
sbb
dec
and
dec
and
xchg
dec
adc
es
lret
jb
xor
fbstp
xchg
inc
and
add
dec
aas
xor
fistpll
dec
rolb
les
push
dec
mov
call
es
and
dec
mov
enter
fsubrs
call
mov
xor
mov
enter
aam
cwtl
xor
add
dec
mov
enter
sbb
push
dec
and
dec
and
insb
aam
inc
imul
fadds
les
inc
and
dec
and
dec
sbb
sub
dec
nop
loopne
dec
and
das
aad
iret
dec
pusha
loopne
les
loopne
dec
nop
loopne
aaa
lret
stos
in
lret
mov
push
mov
mov
rol
mov
lret
cmp
mov
lret
cmp
mov
lret
cmp
mov
lret
cmp
aaa
lret
mov
lret
stos
shl
or
lret
stos
enter
aaa
lret
stos
shl
or
or
loopne
inc
mov
lret
mov
lret
mov
lret
mov
test
lret
stos
ffreep
sbb
lret
stos
fbld
sbb
test
lret
stos
mov
or
lret
stos
mov
lret
mov
lret
mov
lret
mov
sbb
enter
loopne
xchg
dec
and
xchg
dec
mov
test
dec
nop
loopne
xchg
dec
and
xchg
cmp
faddl
mov
inc
mov
xorl
lret
stos
sar
mov
hlt
sbb
lret
stos
fdivr
sbb
lret
stos
loopne
mov
lret
stos
mov
test
lret
stos
nop
loopne
sbb
lret
stos
cwtl
loopne
mov
sbb
fsubl
hlt
mov
test
movsb
mov
xchg
dec
mov
fmuls
loopne
inc
test
mov
lret
mov
lret
mov
lret
mov
test
fadd
dec
mov
enter
aam
inc
dec
cmp
cmp
in
xchg
fadds
aam
inc
jle
les
inc
lds
loopne
dec
xchg
fadds
rolb
rorb
loopne
das
int3
dec
mov
enter
shlb
lret
stos
lds
hlt
inc
add
lret
stos
iret
mov
lret
mov
mov
cmp
dec
nop
loopne
xchg
xchg
dec
and
xchg
cmp
enter
roll
loopne
les
and
aaa
lret
stos
iret
mov
ret
stos
and
dec
and
lds
fcom
aaa
lret
mov
fadd
sbb
loopne
lds
loopne
lret
inc
mov
cmp
dec
sbb
mov
mov
or
cmp
cltd
pop
dec
mov
mov
or
sub
cmp
cltd
pop
or
or
or
or
or
or
scas
cmp
gs
les
enter
testl
xchg
mov
les
loopne
dec
les
dec
mov
cmp
or
xchg
scas
loope
adc
ret
aam
mov
aam
and
lret
les
and
les
and
les
test
cmp
loopne
xchg
scas
lds
loopne
xchg
add
les
aas
cmp
lods
or
loopne
xchg
add
ret
test
xor
inc
add
or
add
mov
les
pop
dec
add
out
push
dec
add
mov
les
pop
or
or
or
or
or
xchg
dec
sub
cmp
test
xchg
xchg
divl
idivl
inc
add
aad
xchg
shr
xchg
aam
ss
adc
inc
add
sub
in
push
movl
dec
and
or
or
or
or
or
dec
test
incl
xchg
shr
xchg
aam
sar
xchg
in
lret
jl
testl
testl
push
add
cmp
gs
les
testl
shlb
dec
leave
adc
rclb
adc
ret
aam
add
ret
dec
or
shll
ret
aam
add
loopne
mov
les
rol
or
or
or
or
xchg
dec
sub
cmp
dec
xchg
enter
xchg
xchg
xchg
divl
idivl
inc
add
aad
pushf
shr
pushf
aam
aaa
inc
adc
inc
add
sub
in
push
out
test
fists
adc
cltd
pop
or
ret
gs
les
enter
testl
shlb
les
loopne
negl
decl
lret
push
add
or
enter
add
aam
cltd
fmuls
in
mov
dec
add
aam
xchg
cmp
les
inc
add
dec
mov
loopne
and
mov
pushl
mov
dec
mov
inc
cmp
mov
sub
test
cmp
aas
mov
testl
dec
fisubrl
shrb
adc
cmp
enter
dec
lcall
xor
fmull
rorb
dec
mov
shlb
les
inc
add
push
rol
or
or
or
or
or
xchg
dec
xor
enter
add
aam
std
les
and
lds
xor
les
rorb
push
rol
or
add
enter
add
sub
or
or
or
or
or
or
or
xchg
dec
mov
inc
xor
pop
les
enter
dec
fimull
testb
outsb
sub
int
les
les
int3
dec
aaa
inc
pop
mov
fwait
lahf
lcall
or
or
xchg
xchg
dec
nop
loopne
dec
xor
dec
lds
rclb
lods
cmp
ret
aam
and
cmp
mov
rclb
les
or
or
or
or
xchg
dec
test
int3
dec
adc
or
xchg
xchg
dec
xchg
enter
dec
fimull
testb
outsb
sub
int
les
les
int3
dec
aaa
inc
pop
mov
fwait
testl
mov
dec
mov
dec
xchg
rorb
lcall
les
or
or
or
or
or
or
scas
cmp
gs
les
gs
testl
fsubl
les
dec
and
dec
mov
dec
xchg
les
dec
xchg
xchg
dec
or
and
cmp
cwtl
loopne
dec
mov
fmull
int3
dec
mov
out
add
incl
dec
cwtl
loopne
dec
and
mov
dec
and
dec
cld
dec
or
rol
call
dec
nop
loopne
xchg
xchg
or
sub
repz
add
lds
inc
lds
inc
mov
loopne
mov
inc
mov
les
movl
test
les
and
xor
add
dec
mov
rolb
and
les
mov
std
cltd
aam
adc
loopne
dec
cld
dec
mov
mov
sub
cli
cmp
inc
cmp
or
adc
adc
ret
sub
pop
cmp
dec
or
add
adc
adc
ret
divl
add
cmp
dec
sbb
fmull
dec
xchg
fsubrl
testl
dec
leave
les
inc
add
push
aam
or
or
or
or
or
dec
xchg
incl
xchg
push
dec
mov
dec
mov
decl
rorb
rolb
mov
dec
xchg
enter
dec
testb
outsb
sub
ret
mov
sub
xor
les
int3
dec
xchg
incl
lcall
out
aam
ret
rorb
aam
push
rol
or
rclb
dec
mov
shlb
leave
dec
xchg
enter
dec
sarl
lds
dec
test
dec
xchg
aam
xchg
int3
mov
xchg
sub
cmp
cmp
les
mov
dec
test
dec
aam
sarl
test
cmp
les
testl
or
or
or
or
rorb
aam
xchg
shlb
dec
enter
loopne
dec
into
jl
les
rol
mov
dec
test
dec
int3
dec
nop
loopne
dec
into
jl
les
rol
add
rol
or
xchg
dec
sub
cmp
sub
aam
add
loopne
inc
mov
int3
xchg
xchg
xchg
dec
cmp
and
dec
or
dec
and
dec
mov
fmul
inc
enter
dec
aam
pushf
rorb
dec
push
iret
pop
dec
nop
loopne
dec
cwtl
loopne
mov
das
rorb
aam
xor
dec
mov
cmp
sbb
call
mov
dec
ds
mov
enter
mov
dec
push
dec
les
or
and
xchg
xchg
dec
mov
fcoms
dec
and
dec
repnz
add
loopne
inc
pop
les
loopne
iret
pop
mov
dec
cwtl
loopne
xchg
sub
cmp
cmp
in
add
mov
in
and
incl
mov
mov
decl
dec
and
das
rorb
aam
hlt
inc
xor
les
loopne
scas
lds
dec
xchg
fmuls
dec
inc
dec
les
xchg
cmp
xlat
dec
sbb
aad
push
dec
les
cmp
lds
in
mov
aam
pop
les
loopne
dec
mov
aam
int3
fstpl
lahf
dec
mov
pushf
testl
les
cltd
push
aam
xchg
dec
mov
lock
cmp
loopne
dec
cwtl
loopne
dec
and
scas
les
sub
rol
dec
iret
dec
rorl
nop
dec
xor
xchg
xchg
xchg
dec
or
push
dec
mov
mov
lahf
testl
les
cltd
push
aam
or
or
or
or
or
or
or
xchg
dec
sub
cmp
sub
aam
add
loopne
dec
sbb
xchg
xchg
dec
mov
loopne
dec
and
sub
cmp
rorb
xchg
dec
or
push
cmp
dec
adc
rcr
mov
dec
xchg
fcoms
dec
and
dec
mov
fcoml
xchg
dec
or
mov
aam
rorl
loopne
aad
rorb
nop
fwait
lcall
and
or
or
or
or
or
ret
gs
les
enter
testl
shlb
les
dec
and
cmp
add
dec
shrb
xchg
xchg
dec
or
in
adc
sbb
mov
dec
test
loopne
mov
mov
scas
fsubrl
xor
les
inc
add
dec
cwtl
loopne
dec
mov
mov
dec
mov
dec
adc
mov
mov
dec
add
dec
mov
mov
sub
cmp
inc
cmp
xchg
dec
xchg
dec
xchg
dec
das
shrb
or
cmp
enter
xchg
dec
xchg
dec
das
negl
dec
xchg
fmull
dec
sbb
int3
dec
mov
dec
sbb
xchg
int3
out
xchg
rorb
les
fmull
rol
or
mov
shlb
les
inc
add
push
rol
or
or
or
or
dec
test
dec
xchg
rorb
aam
push
dec
xchg
fmull
fmuls
in
xchg
fmuls
loopne
test
dec
test
push
rol
or
or
or
or
or
or
xchg
dec
sub
cmp
cmp
gs
les
cmp
aam
add
loopne
gs
testl
cld
mov
les
int3
jle
les
testl
in
int3
aam
nop
loopne
dec
and
dec
and
dec
and
dec
lds
mov
fcoml
call
and
and
ret
adc
and
dec
mov
cld
mov
les
testl
les
cltd
push
rol
or
cmp
cmp
gs
les
cmp
aam
add
loopne
gs
testl
cld
mov
les
int3
dec
and
dec
or
dec
and
dec
and
lods
in
int3
aam
and
dec
nop
loopne
dec
nop
loopne
dec
nop
loopne
dec
aad
xchg
mov
fcoml
xor
aam
and
and
ret
push
dec
and
dec
mov
cld
mov
les
testl
les
cltd
push
int3
les
or
xchg
dec
sub
cmp
cmp
gs
les
cmp
aam
add
loopne
gs
testl
cld
mov
les
int3
dec
aad
push
inc
les
fdiv
add
in
int3
aam
dec
and
dec
and
dec
and
dec
and
scas
lds
loopne
xchg
dec
and
xchg
add
ret
and
and
ret
and
les
push
dec
and
dec
mov
cld
mov
les
testl
les
cltd
push
rol
or
or
or
or
or
or
cmp
cmp
gs
les
cmp
aam
add
loopne
xchg
gs
testl
test
les
int3
dec
cmc
notl
scas
lds
dec
and
dec
or
dec
nop
loopne
dec
nop
loopne
dec
nop
loopne
xchg
dec
nop
loopne
dec
and
xchg
dec
push
inc
les
loopne
xchg
add
ret
and
and
ret
push
dec
and
dec
mov
test
les
hlt
testl
les
cltd
push
int3
les
or
or
or
or
or
or
cmp
sub
dec
or
dec
cltd
int3
xchg
dec
xor
xchg
dec
mov
aam
nop
loopne
std
adc
inc
push
les
loopne
dec
adc
mov
dec
xchg
in
or
fisttps
dec
mov
loopne
decl
mov
mov
dec
mov
fsubrl
rorb
aam
std
dec
mov
cmp
dec
cltd
int3
movl
movl
les
inc
add
inc
pop
les
loopne
testl
loopne
fists
iret
push
dec
nop
loopne
mov
dec
xchg
aam
into
dec
mov
dec
and
or
cmp
dec
mov
loopne
dec
or
push
mov
dec
mov
inc
or
dec
mov
fmull
loopne
incl
mov
mov
decl
mov
dec
and
das
int
mov
and
dec
cld
dec
adc
xlat
dec
push
dec
les
xchg
xchg
xchg
dec
push
inc
add
lret
loopne
mov
aam
and
dec
nop
loopne
dec
mov
in
aad
nop
loopne
fstl
and
or
or
or
or
or
or
xchg
dec
sub
cmp
sub
aam
add
loopne
dec
test
dec
xchg
enter
rorb
aam
dec
cltd
fmull
loopne
dec
xchg
fmull
loopne
dec
test
xchg
dec
mov
dec
nop
loopne
dec
xchg
in
and
dec
test
dec
in
xchg
dec
mov
cld
dec
xchg
rorb
clc
dec
ret
mov
adcb
loopne
adc
ret
aam
and
dec
ret
sub
dec
cmp
dec
mov
out
lret
fmuls
rcr
xchg
rclb
mov
fcoml
in
dec
nop
loopne
sub
cmp
cmp
loopne
mov
rcrb
mov
mov
cmp
and
sub
cmp
or
or
or
or
inc
sub
xchg
dec
mov
shrb
les
add
lcall
cmp
gs
les
cmp
aam
add
addr16
les
ret
aam
mov
enter
loopne
les
and
les
and
les
lcall
xchg
scas
les
les
sub
cmp
loopne
aam
ret
ret
leave
dec
mov
int3
xchg
sub
das
add
dec
add
ret
ret
aam
mov
in
dec
leave
les
or
loopne
xchg
xchg
dec
xor
cmp
ret
ret
aam
add
or
or
or
xchg
xchg
dec
mov
enter
sub
ret
aam
add
aad
fiadds
mov
dec
xchg
lds
inc
add
and
add
rcr
inc
sbb
inc
add
mov
pusha
loopne
les
rorb
aam
aad
fiadds
mov
dec
xchg
lds
inc
add
and
add
rcr
inc
sbb
inc
add
inc
push
les
enter
inc
push
sub
sub
ret
aam
add
aad
fiadds
mov
dec
xchg
lds
inc
add
and
add
rcr
inc
sbb
inc
add
push
xchg
xchg
dec
mov
ror
aam
lds
cmp
enter
in
add
inc
or
xchg
sub
cmp
cmp
rorb
mov
dec
les
test
mov
out
add
cwtl
cmp
scas
lds
or
les
lcall
dec
mov
rorb
loopne
dec
add
xchg
xchg
dec
or
adc
add
cltd
push
enter
add
push
enter
xor
or
dec
aam
lds
push
xor
int
sub
sub
rorb
push
rol
or
or
or
or
ret
gs
les
ret
aam
add
addr16
les
loopne
dec
mov
fdiv
push
add
and
ret
aam
xchg
rorb
rorb
int3
dec
mov
dec
mov
dec
mov
decl
mov
dec
aad
scas
lds
adc
add
rorb
enter
les
enter
or
or
rolb
shrl
add
enter
or
or
or
or
or
or
or
cmp
sub
dec
xchg
int3
xchg
xchg
dec
cmp
test
dec
mov
xchg
cmp
mov
dec
and
add
les
and
les
int
les
pushf
dec
and
add
les
iret
les
push
rol
or
or
or
or
or
or
cmp
xchg
int3
inc
sub
xchg
dec
cltd
enter
lds
dec
adc
test
scas
les
aam
xchg
cmp
mov
dec
add
fdivrl
aad
sar
aam
fmuls
loopne
dec
mov
rorb
loopne
xchg
sub
rol
dec
sbbl
les
dec
and
or
or
or
or
or
testb
les
or
or
or
or
or
xchg
xchg
dec
and
xchg
dec
mov
add
les
add
popf
push
rol
or
int3
xchg
dec
xor
dec
mov
cmp
shrl
mov
dec
and
dec
mov
int3
dec
mov
ret
les
dec
lds
rcrb
or
or
or
or
int3
xchg
dec
xor
dec
mov
cmp
shrl
mov
dec
and
dec
mov
int3
dec
mov
ret
inc
mov
mov
inc
cld
les
les
int3
pop
testl
or
or
or
or
aam
xchg
clc
inc
add
or
or
dec
test
or
or
or
or
or
pushf
sub
rol
dec
les
or
or
or
mov
pop
or
or
or
or
or
or
ret
gs
les
enter
testl
aam
addr16
les
loopne
dec
adc
jge
add
cmp
ret
ret
aam
add
ret
ret
aam
bound
cmp
dec
mov
int3
xchg
dec
xchg
cld
add
les
les
and
les
mov
dec
and
xchg
dec
mov
xchg
add
les
mov
mov
aam
dec
leave
les
push
rol
xchg
dec
cmp
jo
les
xchg
sub
and
les
rorb
sub
int3
les
xchg
sub
and
les
aam
add
add
enter
add
sub
sub
cmp
and
lds
and
les
rorb
lcall
or
or
or
or
int3
xchg
dec
xor
clc
xchg
cmp
dec
mov
sar
mov
mov
dec
sar
adc
into
fwait
testl
fadd
dec
ret
clc
dec
or
push
dec
mov
in
and
dec
nop
loopne
decl
mov
mov
dec
nop
loopne
call
ret
loopne
das
rorb
int3
dec
xchg
aam
push
inc
les
aam
mov
in
xchg
dec
mov
in
xchg
dec
mov
dec
les
loopne
xchg
cmp
fwait
lcall
or
or
or
or
or
or
int3
xchg
xchg
xchg
xchg
dec
cmp
clc
cmp
dec
mov
in
mov
dec
and
dec
nop
loopne
decl
mov
mov
dec
sar
adc
rorb
rorb
aam
int3
dec
lret
rorb
dec
nop
loopne
dec
adc
test
in
xchg
dec
nop
loopne
dec
mov
xchg
xchg
cmp
fwait
xchg
dec
mov
lcall
sub
les
cld
dec
and
dec
nop
loopne
dec
cwtl
loopne
sub
rol
dec
lret
dec
xchg
rcrb
add
push
aam
or
or
or
or
or
or
dec
xchg
cwtl
cmp
inc
add
lahf
dec
ret
test
cmp
inc
add
mov
nop
inc
add
loope
adcb
push
call
xchg
les
cmp
nop
mov
add
les
add
mov
inc
cld
les
lds
call
je
lcall
or
dec
and
dec
test
push
rol
or
or
or
enter
or
or
or
or
or
scas
cmp
gs
les
aam
add
addr16
les
loopne
scas
shrb
inc
add
incl
das
testl
aam
xchg
dec
mov
dec
mov
dec
mov
dec
mov
sub
mov
mov
int3
mov
les
push
int3
les
or
xchg
dec
xor
in
ret
dec
ret
aas
daa
add
lcall
or
or
or
inc
sub
xchg
xchg
xchg
dec
cmp
sbb
mov
xor
add
sti
dec
sbb
loopne
inc
cmp
add
or
mov
mov
xor
mov
dec
sti
das
int3
dec
ret
dec
or
and
cmp
mov
mov
sub
cs
and
dec
cwtl
loopne
dec
mov
shrb
mov
fwait
lcall
or
or
dec
mov
inc
or
fmull
fcoml
cmp
ds
mov
add
inc
add
mov
add
pop
or
mov
xchg
dec
cwtl
loopne
or
xchg
xor
add
adc
mov
xchg
sub
mov
stos
fmuls
rorb
adc
out
cmp
xchg
aam
clc
jle
mov
scas
aam
mov
mov
inc
add
dec
sarb
aam
sarb
out
dec
shrb
mov
dec
xlat
dec
aam
xchg
rorb
lds
popf
push
rol
or
or
or
scas
cmp
gs
les
aam
add
addr16
les
loopne
scas
shrb
inc
add
incl
das
testl
aam
xchg
dec
mov
dec
mov
dec
mov
dec
mov
sub
rol
dec
add
loopne
mov
les
push
int3
les
or
inc
sub
xchg
xchg
dec
xor
sbb
dec
mov
cmp
shrl
repnz
sbb
loopne
inc
xor
add
or
mov
cmp
mov
dec
repnz
int3
dec
ret
das
sub
xor
mov
jmp
and
dec
cwtl
loopne
dec
mov
in
les
int3
pop
or
or
or
inc
sub
xchg
xchg
xchg
dec
cmp
sbb
mov
xor
add
sti
dec
sbb
loopne
inc
cmp
add
or
mov
mov
xor
mov
dec
sti
das
int3
dec
ret
dec
or
and
cmp
mov
mov
sub
sub
les
loopne
dec
cwtl
loopne
dec
mov
shrb
in
les
aam
or
or
or
fadds
mov
cmp
dec
mov
cmp
ds
mov
add
inc
add
mov
add
pop
or
or
or
or
or
or
or
or
fmuls
fadd
or
xchg
xor
add
add
shlb
rol
dec
lcall
rorb
add
mov
out
cmp
xchg
aam
clc
jle
mov
scas
aam
popf
and
les
aam
add
dec
sarb
aam
sarb
dec
rcrb
int3
dec
mov
enter
aam
sbb
lahf
push
rol
or
xchg
xchg
dec
xor
add
dec
cmp
and
dec
sbb
ret
inc
add
iret
sub
and
les
inc
add
rorb
testl
testl
fdivr
add
shrl
repnz
xor
testl
dec
ret
testl
mov
dec
repnz
mov
dec
sarb
lcall
xor
aam
sarb
lcall
or
or
or
or
or
or
or
lods
movsb
add
mov
les
enter
testl
mov
les
xor
mov
add
les
fmull
fadd
add
cmp
shrl
ret
enter
xchg
sub
ret
dec
mov
mov
les
and
mov
sub
scas
les
or
or
or
or
inc
sub
dec
int3
dec
xchg
rorb
xchg
xchg
xchg
dec
mov
mov
aam
nop
loopne
incl
mov
sub
and
les
fmull
fmuls
movl
sub
and
les
xchg
xchg
xchg
xchg
dec
mov
in
xchg
dec
add
rol
dec
mov
adc
ds
sub
and
les
xchg
xchg
dec
and
xchg
xchg
sub
ret
fwait
cltd
lahf
inc
add
pop
inc
sub
xchg
dec
cwtl
loopne
dec
xchg
xchg
jge
cmp
lret
out
or
xchg
add
les
lds
les
adc
mov
jge
les
roll
mov
jle
cmp
lret
out
adc
dec
mov
fmuls
fmull
loopne
or
sub
fadd
les
aam
and
dec
lock
clc
ret
rol
add
add
ror
out
push
movl
cmp
xchg
xchg
dec
nop
loopne
xchg
dec
rcl
sub
sbb
les
aam
and
ljmp
test
aam
cmp
dec
enter
les
std
dec
nop
loopne
inc
xor
xchg
sub
sbb
les
aam
mov
fsubr
or
shl
add
outsl
inc
sub
aam
or
xchg
dec
aam
call
les
add
mov
movl
xchg
sub
sbb
les
aam
xchg
dec
nop
loopne
dec
enter
xor
cmp
dec
shlb
les
aam
xor
xchg
sub
sbb
les
aam
mov
fadds
mov
testl
inc
add
int
sub
sbb
les
rorb
aam
mov
fadd
rcrb
aam
inc
add
push
rol
or
or
or
or
xchg
negl
std
lcall
incl
mov
mov
fdivr
pop
mov
dec
lcall
xchg
dec
mov
fisttps
aam
std
fdivrs
jl
iret
dec
int3
xchg
sub
sbb
les
sar
mov
dec
adc
incl
mov
xchg
sub
sbb
les
rorb
dec
lcall
or
xchg
dec
sub
ret
gs
les
enter
testl
mov
les
xor
mov
add
les
fmull
fadd
add
cmp
shrl
ret
enter
xchg
sub
leave
les
xor
les
and
mov
sub
cmp
cmp
or
or
or
or
or
inc
sub
dec
int3
dec
sbb
xchg
xchg
dec
mov
mov
enter
shrl
lcall
pop
lcall
mov
sub
daa
ret
xchg
xchg
dec
and
xchg
dec
add
iret
les
fmull
fadd
or
cmp
daa
ret
dec
nop
loopne
xchg
xchg
sub
leave
les
aam
or
or
or
or
int3
xchg
dec
cwtl
loopne
dec
xchg
xchg
jge
cmp
lret
out
or
xchg
add
les
lds
les
adc
mov
jge
les
roll
mov
jle
cmp
lret
out
adc
dec
mov
fmuls
fmull
loopne
or
sub
sub
rol
les
aam
and
dec
lock
clc
ret
rol
add
add
ror
out
push
movl
cmp
xchg
xchg
dec
nop
loopne
xchg
dec
rcl
sub
pop
add
dec
and
ljmp
test
aam
cmp
dec
enter
les
std
dec
nop
loopne
inc
xor
xchg
sub
pop
add
dec
mov
fsubr
or
shl
add
outsl
inc
sub
aam
or
xchg
dec
aam
call
les
add
mov
movl
xchg
sub
pop
add
dec
xchg
dec
nop
loopne
dec
enter
xor
cmp
dec
shlb
les
aam
xor
xchg
sub
push
add
dec
mov
fadds
mov
testl
inc
add
int
sub
pop
add
dec
and
dec
mov
fadd
rcrb
aam
inc
add
push
rol
or
or
or
or
fadds
mov
inc
add
dec
test
mov
add
les
or
or
or
or
or
fcoml
xchg
inc
xor
dec
test
lock
mov
dec
mov
or
sub
and
loopne
dec
sbb
cwtl
loopne
dec
rorb
loopne
incl
mov
dec
mov
or
sbb
and
loopne
dec
mov
dec
rol
add
loopne
cmp
shrl
mov
fmull
inc
or
mov
sub
and
out
add
loopne
dec
and
inc
add
ret
loopne
mov
sub
and
fmuls
out
add
loopne
dec
sbb
cmp
add
ret
mov
incl
sub
and
std
mov
dec
mov
or
cmp
and
loopne
dec
mov
fmull
xchg
xchg
xchg
xchg
xchg
xchg
dec
mov
rol
les
loopne
imull
inc
add
call
mov
dec
mov
dec
cmp
or
dec
mov
cmp
cmp
dec
stos
faddl
lds
inc
lds
das
mov
fmull
fadd
cmp
add
nop
loopne
dec
ret
xchg
xchg
dec
and
xchg
xchg
dec
mov
rol
les
loopne
inc
add
inc
or
fadds
mov
inc
sub
mov
dec
sbb
sub
sbb
sub
fmull
fadd
or
cmp
and
les
dec
sbb
loopne
pushl
mov
sub
and
testl
dec
nop
loopne
mov
ds
cmp
mov
dec
repnz
int3
dec
ret
das
divl
mov
popf
and
les
loopne
dec
mov
dec
fcompl
rol
or
or
or
or
lods
in
ret
gs
les
xchg
gs
testl
mov
les
xor
mov
dec
mov
movl
sub
and
les
aam
ret
mov
decl
shrl
adc
sub
sbb
mov
sbb
sbb
adcl
adc
les
les
cmpl
decl
lret
inc
push
out
cmp
dec
mov
xchg
sub
les
sub
das
sub
sub
les
sub
dec
xchg
fmul
inc
sbb
les
fadd
pop
lcall
mov
sub
sbb
les
dec
mov
inc
cmp
add
push
jge
les
iret
cmp
fadd
mov
lcall
mov
dec
sti
das
int3
dec
ret
dec
adc
sbb
cmp
fdivl
xchg
and
orl
cmp
xor
sbb
inc
add
adc
mov
xchg
sub
cmp
cmp
faddl
mov
dec
lcall
dec
aas
adc
les
negb
xchg
aam
add
dec
sarb
aam
sarb
out
dec
rorb
mov
dec
mov
dec
std
dec
cld
dec
rorb
lds
dec
lcall
dec
mov
ds
sub
sbb
les
dec
sbb
add
mov
sub
sbb
testl
cmp
mov
cmp
mov
dec
repnz
int3
dec
ret
das
and
fdivl
mov
in
movsl
sbb
testl
dec
xchg
sub
mov
dec
lock
xor
mov
dec
das
int3
dec
dec
or
testl
sub
sbb
les
dec
mov
rol
dec
mov
inc
mov
fmul
inc
dec
les
fadd
adc
ds
sub
sbb
les
dec
cltd
or
mov
loopne
aaa
sbb
testl
les
lret
cmp
fadd
mov
cmp
mov
dec
fildll
int3
dec
dec
adc
sbb
pop
mov
push
sbb
les
or
sbbl
cmp
xchg
sub
aam
les
mov
das
inc
dec
mov
dec
mov
mov
dec
add
cmp
mov
les
sbb
add
cmp
shrl
fimull
add
mov
sub
sbb
testl
cmp
mov
dec
mov
roll
mov
dec
das
int3
dec
dec
adc
sbb
add
mov
cld
sbb
les
enter
test
dec
xchg
sbb
sbbl
pop
mov
sub
sbb
testl
dec
xchg
sub
mov
adc
enter
roll
mov
dec
das
int3
dec
dec
or
and
add
xchg
fdivl
mov
loope
es
testl
xchg
fdivrl
or
int3
decl
mov
inc
pop
mov
dec
das
int3
dec
dec
adc
sbb
add
mov
mov
sub
sbb
les
enter
xchg
xchg
xchg
dec
pop
xchg
xchg
xchg
dec
mov
les
adc
fmull
or
xchg
or
mov
sub
sbb
testl
mov
dec
or
inc
pop
mov
dec
fildll
int3
dec
dec
or
and
pop
incl
sahf
sbb
les
fmull
fadd
pop
lcall
mov
sub
sbb
les
dec
cmp
add
mov
sub
sbb
testl
dec
xchg
sub
mov
push
lcall
mov
dec
repnz
int3
dec
ret
das
daa
divl
lcall
enter
dec
xchg
enter
xchg
xchg
xchg
xchg
dec
mov
les
cmpl
inc
aas
repnz
jnp
out
aas
dec
mov
mov
dec
mov
xchg
sub
xor
xor
subl
std
cltd
sub
dec
xchg
fadd
pop
lcall
mov
sub
pop
cli
dec
subl
dec
mov
dec
mov
inc
cmp
add
or
xchg
and
mov
push
lcall
mov
dec
sti
das
int3
dec
ret
dec
or
daa
idivl
lcall
lods
pop
xchg
or
addl
cmp
xchg
sub
xor
cmp
subl
inc
dec
mov
movl
sub
pop
repnz
sbb
add
mov
sub
pop
add
or
xchg
sub
mov
ds
cmp
mov
dec
repnz
int3
dec
ret
das
daa
divl
mov
cmp
mov
in
xor
add
or
xchg
sbb
mov
dec
lock
xor
mov
dec
das
int3
dec
dec
or
testl
sub
push
dec
pop
xchg
xchg
dec
mov
mov
add
les
std
subl
les
fmull
fadd
adc
andl
sub
push
mov
out
cmp
mov
mov
dec
addl
sub
push
add
or
xchg
and
mov
ds
cmp
mov
dec
fildll
int3
dec
dec
or
daa
negl
mov
push
xchg
add
orl
cmp
xchg
sub
sub
cmp
subl
cmp
int3
dec
mov
mov
push
dec
or
mov
les
mov
movl
sub
sbb
dec
mov
out
pop
sbb
testl
fadd
ds
mov
roll
mov
dec
ret
dec
ret
das
and
add
mov
outsl
sbb
enter
test
dec
xchg
or
orl
xor
add
or
mov
mov
dec
fcom
lcall
mov
dec
ret
dec
ret
das
sbb
add
pushf
fdivl
mov
fildll
sbb
testl
mov
inc
xor
int3
dec
ret
das
sub
add
pushf
fdivl
add
les
sbb
add
cltd
add
mov
sub
sbb
testl
cmp
inc
add
into
dec
les
int3
dec
les
das
and
add
mov
sub
xchg
add
dec
add
xchg
xchg
dec
mov
les
int3
inc
add
dec
mov
inc
xor
add
push
dec
xchg
fmuls
int3
xchg
fdivrl
les
iret
ds
inc
xor
int3
dec
ret
das
sbb
add
mov
dec
sbb
les
xchg
dec
mov
les
aam
mov
mov
les
and
or
or
or
or
inc
sub
xchg
xchg
xchg
dec
xor
inc
xor
dec
test
lock
mov
dec
mov
or
sub
sbb
les
loopne
dec
sbb
cwtl
loopne
dec
rorb
loopne
incl
mov
dec
mov
or
sbb
sbb
les
loopne
dec
mov
dec
rol
add
loopne
cmp
shrl
mov
fmull
inc
or
mov
sub
adc
les
out
add
loopne
dec
and
inc
add
ret
loopne
mov
sub
adc
les
fmuls
out
add
loopne
dec
sbb
cmp
add
ret
mov
incl
sub
adc
out
aas
std
mov
dec
mov
or
cmp
adc
les
loopne
dec
mov
fmull
xchg
xchg
xchg
xchg
xchg
xchg
dec
mov
enter
nop
loopne
imull
inc
add
call
mov
dec
mov
dec
cmp
or
cmp
cmp
cmp
cmp
dec
stos
faddl
lds
inc
lds
das
mov
fmull
fadd
cmp
add
nop
loopne
dec
ret
xchg
xchg
dec
and
xchg
xchg
dec
mov
enter
mov
in
inc
add
inc
or
fadds
mov
inc
sub
mov
dec
sbb
sub
sbb
sub
fmull
fadd
or
cmp
adc
les
dec
sbb
loopne
pushl
mov
sub
adc
testl
dec
nop
loopne
mov
ds
cmp
mov
dec
repnz
int3
dec
ret
das
divl
mov
push
adc
les
loopne
dec
mov
dec
fcompl
rol
or
or
or
lods
les
les
xchg
gs
testl
mov
les
xor
mov
dec
mov
movl
sub
adc
les
aam
ret
mov
decl
shrl
adc
sub
sbb
mov
sbb
sbb
adcl
or
les
les
cmpl
decl
lret
inc
push
out
cmp
dec
mov
xchg
sub
int
les
sub
das
sub
sub
les
sub
lret
inc
push
les
fmull
fadd
pop
lcall
mov
sub
adc
les
dec
mov
inc
cmp
add
push
jge
les
iret
cmp
fadd
mov
lcall
mov
dec
sti
das
int3
dec
ret
dec
adc
sbb
cmp
fdivl
xchg
and
orl
cltd
adc
xchg
les
sbb
dec
sbbl
fadds
rolb
mov
xchg
sub
xor
faddl
mov
dec
lcall
mov
dec
aas
add
jge
mov
scas
aam
stos
pop
xchg
aam
add
dec
sarb
aam
sarb
inc
and
inc
add
ret
dec
mov
dec
aad
aam
lds
dec
lcall
dec
mov
movl
sub
adc
les
dec
sbb
or
xor
add
push
jge
cmp
mov
cmp
mov
dec
repnz
int3
dec
ret
das
and
fdivl
mov
in
pop
adc
testl
dec
xchg
sub
mov
dec
lock
xor
mov
dec
das
int3
dec
dec
or
testl
sub
adc
les
dec
mov
ret
dec
mov
sub
dec
mov
les
fadd
adc
ds
sub
adc
les
dec
cltd
or
adc
pop
mov
sub
adc
testl
les
lret
cmp
fadd
mov
cmp
mov
dec
fildll
int3
dec
dec
adc
sbb
pop
mov
adc
les
or
sbb
xchg
sbb
mov
les
cmp
mov
dec
mov
mov
dec
add
das
cmp
mov
les
sbb
add
cmp
shrl
fimull
or
pop
mov
sub
pop
add
push
jge
cmp
mov
dec
mov
roll
mov
dec
das
int3
dec
dec
adc
sbb
add
mov
mov
xchg
enter
sbbl
pop
mov
sub
pop
add
or
xchg
sub
mov
adc
enter
roll
mov
dec
das
int3
dec
dec
or
and
add
xchg
fdivl
mov
loope
in
pop
add
push
dec
xchg
fadd
xchg
fdivrl
or
int3
decl
mov
inc
pop
mov
dec
das
int3
dec
dec
adc
sbb
add
mov
mov
sub
push
or
xchg
xchg
dec
pop
xchg
xchg
xchg
dec
mov
les
adc
fmull
or
adc
pop
mov
sub
push
add
or
mov
dec
or
inc
pop
mov
dec
fildll
int3
dec
dec
or
and
pop
incl
fs
lcall
lcall
mov
sub
push
repnz
cmp
or
xor
add
or
xchg
sub
mov
push
lcall
mov
dec
repnz
int3
dec
ret
das
daa
divl
lcall
xchg
push
xchg
enter
xchg
xchg
xchg
xchg
dec
mov
les
cmpl
inc
aas
addr16
jnp
out
aas
inc
cmp
xchg
sub
sub
xor
subl
dec
std
cltd
sub
inc
daa
les
fmull
fadd
pop
lcall
mov
sub
adc
dec
subl
dec
mov
dec
mov
inc
cmp
add
or
xchg
and
mov
push
lcall
mov
dec
sti
das
int3
dec
ret
dec
or
daa
idivl
lcall
push
xchg
or
add
add
or
test
les
fmull
and
fadd
or
add
add
add
shlb
sub
cmp
fadd
lcall
add
mov
out
cmp
xchg
aam
clc
jle
mov
scas
aam
push
or
les
aam
add
dec
sarb
aam
sarb
dec
fcomps
mov
dec
mov
dec
aad
xlat
dec
cltd
sbb
lds
sub
dec
mov
movl
sub
adc
dec
sbb
or
xor
add
or
xchg
sub
mov
ds
cmp
mov
dec
repnz
int3
dec
ret
das
daa
divl
mov
adc
inc
pop
mov
sub
adc
testl
dec
xchg
sbb
mov
dec
lock
xor
mov
dec
das
int3
dec
dec
or
testl
sub
adc
les
dec
mov
mov
add
les
loopne
les
std
subl
les
fmull
fadd
adc
andl
sub
adc
les
sub
jl
out
cmp
mov
mov
dec
orl
std
adc
testl
dec
xchg
and
mov
ds
cmp
mov
dec
fildll
int3
dec
dec
or
daa
negl
mov
enter
dec
xchg
add
or
or
adc
or
les
cmp
cmp
dec
mov
dec
mov
mov
dec
les
sub
sub
cmp
mov
les
mov
movl
sub
or
les
dec
mov
out
outsl
or
testl
dec
xchg
sub
mov
ds
mov
roll
mov
dec
ret
dec
ret
das
and
add
mov
mov
xchg
enter
or
xor
add
or
mov
mov
dec
fcom
lcall
mov
dec
ret
dec
ret
das
sbb
add
pushf
fdivl
mov
fildll
or
testl
xchg
fdivr
push
mov
inc
xor
int3
dec
ret
das
sub
add
pushf
fdivl
add
les
sbb
add
or
add
fldt
or
testl
mov
aas
cmp
inc
add
into
dec
les
int3
dec
les
das
and
add
mov
jp
xchg
add
or
dec
mov
les
int3
inc
add
dec
mov
xor
add
push
dec
xchg
fmuls
int3
xchg
fdivrl
les
iret
ds
inc
xor
int3
dec
ret
das
sbb
add
mov
cmpsl
or
les
xchg
dec
mov
les
aam
mov
mov
les
and
or
or
or
or
or
or
or
xchg
dec
sub
cmp
cmp
gs
les
cmp
aam
add
addr16
les
ret
mov
aam
and
lret
les
and
les
and
les
std
cmp
dec
and
xchg
dec
mov
in
add
les
xor
cmp
mov
in
xchg
add
ret
lahf
and
les
or
or
inc
sub
inc
or
dec
rorb
les
les
rolb
pop
inc
or
notl
xor
and
shl
dec
mov
int3
add
les
add
les
mov
int3
xchg
add
ret
lds
or
or
or
or
xor
mov
dec
sbb
add
adc
mov
xchg
sub
and
cmp
faddl
mov
dec
stos
rol
sub
aam
dec
cmp
les
xchg
pextrw
xchg
aam
add
dec
sarb
aam
sarb
inc
and
inc
add
lret
loopne
dec
aad
aam
rorb
cmp
fcompl
sbb
xchg
xchg
mov
dec
sbb
add
add
shlb
sub
faddl
mov
dec
lcall
mov
dec
aas
add
jge
mov
scas
aam
sbb
xchg
aam
add
dec
sarb
aam
sarb
inc
and
inc
add
int3
dec
mov
enter
aam
sbb
dec
lcall
or
cmp
sub
dec
adc
loopne
les
mov
dec
les
testl
dec
mov
inc
add
rorb
testl
enter
dec
cltd
fcoml
loopne
xchg
dec
mov
in
dec
and
xchg
xchg
xchg
xchg
sub
inc
add
lcall
pop
xchg
dec
sub
cmp
sub
dec
adc
loopne
les
mov
dec
les
testl
dec
mov
inc
add
rorb
testl
enter
dec
cltd
fcoml
loopne
xchg
dec
mov
in
dec
and
xchg
xchg
xchg
xchg
sub
mov
inc
add
lcall
pop
xchg
dec
sub
cmp
or
dec
cltd
rclb
dec
les
testl
dec
and
dec
mov
enter
rorb
loopne
sub
daa
cmp
dec
lret
dec
int3
dec
xchg
rorb
subb
lcall
or
or
or
or
cmp
sub
dec
adc
loopne
les
mov
dec
les
testl
dec
mov
inc
add
rorb
testl
enter
dec
cltd
fcoml
loopne
xchg
dec
mov
in
dec
and
xchg
xchg
xchg
xchg
sub
mov
inc
add
lcall
pop
xchg
dec
sub
cmp
sub
dec
adc
loopne
les
mov
dec
les
testl
dec
mov
inc
add
rorb
testl
enter
dec
cltd
fcoml
loopne
xchg
dec
mov
in
dec
and
xchg
xchg
xchg
xchg
sub
mov
inc
add
lcall
pop
xchg
dec
sub
cmp
or
dec
cltd
rclb
dec
les
testl
dec
and
dec
mov
enter
aam
and
sub
mov
int3
subb
lcall
or
or
or
or
or
or
or
loopne
inc
sub
xchg
dec
cwtl
loopne
xchg
dec
pop
out
add
xchg
dec
mov
mov
sbb
dec
sub
mov
sub
push
mov
mov
loopne
notl
testl
fadd
xor
xor
rolb
mov
dec
add
dec
push
das
and
add
mov
mov
sub
or
loopne
dec
cwtl
loopne
dec
and
dec
in
dec
mov
add
and
les
mov
dec
int
testl
loopne
xchg
dec
mov
call
nop
xchg
dec
mov
mov
xchg
dec
and
xchg
xchg
xchg
xchg
dec
mov
mov
dec
and
inc
add
fwait
lcall
or
or
or
or
or
or
or
or
loopne
dec
mov
loopne
sub
xchg
dec
cwtl
loopne
xchg
xchg
dec
aaa
out
xor
dec
mov
inc
or
or
loopne
dec
cwtl
loopne
notl
testl
fadd
xor
xor
rolb
mov
dec
add
dec
push
das
and
add
mov
mov
sub
or
loopne
dec
cwtl
loopne
dec
and
dec
in
dec
mov
add
and
les
mov
dec
int
testl
loopne
xchg
dec
mov
call
nop
xchg
dec
mov
mov
xchg
dec
and
xchg
xchg
xchg
xchg
dec
mov
mov
dec
and
inc
add
fwait
lcall
or
or
loopne
inc
sub
xchg
dec
cwtl
loopne
xchg
dec
pop
out
add
xchg
dec
mov
mov
sbb
dec
sub
mov
sub
or
les
loopne
dec
cwtl
loopne
notl
testl
fadd
xor
xor
rolb
mov
dec
add
dec
push
das
and
add
mov
mov
sub
or
les
loopne
dec
cwtl
loopne
dec
and
dec
in
dec
mov
add
and
les
mov
dec
int
testl
loopne
xchg
dec
mov
call
nop
xchg
dec
mov
mov
xchg
dec
and
xchg
xchg
xchg
xchg
dec
mov
mov
dec
and
inc
add
fwait
lcall
or
or
or
or
or
or
or
or
loopne
dec
mov
loopne
sub
xchg
dec
cwtl
loopne
xchg
xchg
dec
aaa
out
xor
dec
mov
inc
or
add
les
loopne
dec
cwtl
loopne
notl
testl
fadd
xor
xor
rolb
mov
dec
add
dec
push
das
and
add
mov
mov
sub
add
les
loopne
dec
cwtl
loopne
dec
and
dec
in
dec
mov
add
and
les
mov
dec
int
testl
loopne
xchg
dec
mov
call
nop
xchg
dec
mov
mov
xchg
dec
and
xchg
xchg
xchg
xchg
dec
mov
dec
and
inc
add
fwait
lcall
or
or
add
dec
cmp
and
dec
sbb
ret
movb
iret
sub
add
les
inc
add
rorb
testl
testl
fdivr
add
shrl
repnz
xor
testl
dec
ret
testl
mov
dec
repnz
mov
dec
sarb
lcall
xor
aam
sarb
lcall
or
or
or
or
or
or
xchg
xchg
jg
les
ret
dec
pusha
loopne
les
loopne
incl
in
cwtl
loopne
dec
and
sub
sbb
cmp
cwtl
loopne
dec
xor
and
sub
sbb
cmp
dec
int3
dec
xchg
rorb
das
or
loopne
dec
mov
in
dec
ret
dec
mov
dec
add
or
or
or
or
or
les
ret
dec
pusha
loopne
les
loopne
incl
dec
and
sub
sbb
cmp
dec
and
sub
sbb
cmp
dec
int3
dec
xchg
rorb
lds
loopne
das
or
loopne
dec
mov
in
dec
ret
dec
mov
dec
add
or
or
or
or
or
les
ret
dec
pusha
loopne
les
loopne
incl
in
cwtl
loopne
dec
and
sub
cmp
cmp
cwtl
loopne
dec
xor
and
sub
cmp
cmp
dec
int3
das
adc
loopne
dec
nop
loopne
lcall
add
xchg
jg
les
ret
dec
pusha
loopne
les
loopne
incl
dec
and
sub
cmp
cmp
dec
and
sub
cmp
cmp
dec
int3
lds
loopne
das
adc
loopne
dec
nop
loopne
lcall
add
sub
cmp
or
or
or
or
xchg
dec
sub
int3
dec
icebp
mov
xchg
dec
sbb
xor
sub
dec
nop
loopne
dec
rcl
and
dec
mov
mov
les
mov
mov
das
xlat
dec
xor
jge
les
popa
dec
mov
mov
mov
lret
mov
sub
les
lret
cmovge
ror
dec
cwtl
loopne
dec
sahf
int3
lret
cmovge
enter
cwtl
loopne
dec
sahf
aam
cmovge
ror
cmovge
fmul
cmovge
fmul
cmovge
in
cmovge
loopne
cmovge
in
lret
cmovge
call
loopne
dec
sahf
hlt
lret
cmovge
lock
cmovge
cld
lret
cmovge
clc
lret
cmovge
loopne
dec
and
testl
loopne
notl
notl
add
ffree
rol
nop
loopne
nop
loopne
imull
add
adc
testl
dec
das
add
nop
loopne
dec
nop
loopne
add
add
movl
dec
mov
loopne
out
idivl
add
ffree
mov
cwtl
mov
add
cmp
testl
dec
das
add
mov
loopne
add
add
or
loopne
dec
nop
loopne
notl
notl
add
ffree
xchg
int3
nop
loopne
nop
loopne
imull
add
adc
testl
dec
das
add
nop
loopne
dec
nop
loopne
add
add
movl
dec
mov
loopne
out
idivl
add
ffree
mov
nop
mov
add
cmp
testl
dec
das
add
mov
loopne
add
add
or
loopne
dec
nop
loopne
notl
notl
add
ffree
xchg
aam
nop
loopne
nop
loopne
imull
add
adc
testl
dec
das
add
nop
loopne
dec
nop
loopne
add
add
movl
dec
mov
loopne
out
idivl
add
ffree
mov
mov
mov
add
cmp
testl
dec
das
add
mov
loopne
add
add
or
loopne
dec
nop
loopne
notl
notl
add
ffree
xchg
fadd
nop
loopne
nop
loopne
imull
add
adc
testl
dec
das
add
nop
loopne
dec
nop
loopne
add
add
movl
dec
mov
loopne
out
idivl
add
ffree
mov
add
loopne
imull
add
cmp
testl
dec
das
add
mov
loopne
add
add
or
loopne
dec
nop
loopne
notl
notl
add
ffree
xchg
in
nop
loopne
nop
loopne
imull
add
adc
testl
dec
das
add
nop
loopne
dec
nop
loopne
add
add
movl
dec
mov
loopne
out
idivl
add
ffree
mov
clc
mov
add
cmp
testl
dec
das
add
mov
loopne
add
add
or
loopne
dec
nop
loopne
notl
notl
add
ffree
xchg
in
nop
loopne
nop
loopne
imull
add
adc
testl
dec
das
add
nop
loopne
dec
nop
loopne
add
add
movl
dec
mov
loopne
out
idivl
add
ffree
mov
lock
mov
add
cmp
testl
dec
das
add
mov
loopne
add
add
or
loopne
dec
nop
loopne
notl
notl
add
ffree
xchg
hlt
nop
loopne
nop
loopne
imull
add
adc
testl
dec
das
add
nop
loopne
dec
nop
loopne
add
add
movl
dec
mov
loopne
out
idivl
add
ffree
mov
call
imull
add
cmp
testl
dec
das
add
mov
loopne
add
add
or
loopne
dec
nop
loopne
notl
notl
add
ffree
xchg
cld
nop
loopne
nop
loopne
imull
add
adc
testl
dec
das
add
nop
loopne
dec
nop
loopne
add
add
movl
dec
mov
loopne
out
idivl
add
ffree
mov
loopne
mov
add
cmp
testl
dec
das
add
mov
loopne
add
add
or
loopne
inc
add
nop
loopne
out
notl
add
sub
adc
loopne
dec
mov
add
aad
das
add
cwtl
loopne
dec
sub
ret
cwtl
loopne
imull
rolb
loopne
imull
das
dec
test
movsb
adc
testl
dec
das
add
nop
loopne
dec
nop
loopne
add
add
movl
dec
mov
loopne
out
idivl
add
cs
cmp
loopne
dec
nop
loopne
dec
sbb
aad
das
add
cwtl
loopne
dec
cs
ret
cwtl
loopne
imull
mov
mov
das
dec
test
cwtl
cmp
testl
dec
das
add
mov
loopne
add
add
or
loopne
dec
nop
loopne
notl
notl
add
sub
adc
loopne
dec
mov
add
aad
das
add
cwtl
loopne
dec
sub
ret
cwtl
loopne
imull
xchg
int3
add
loopne
imull
das
dec
test
pushf
adc
testl
dec
das
add
nop
loopne
dec
nop
loopne
add
add
movl
dec
mov
loopne
out
idivl
add
cs
cmp
loopne
dec
nop
loopne
dec
sbb
aad
das
add
cwtl
loopne
dec
cs
ret
cwtl
loopne
imull
mov
mov
das
dec
test
nop
cmp
testl
dec
das
add
mov
loopne
add
add
or
loopne
dec
nop
loopne
notl
notl
add
sub
adc
loopne
dec
mov
add
aad
das
add
cwtl
loopne
dec
sub
ret
cwtl
loopne
imull
xchg
aam
or
nop
loopne
imull
das
dec
test
xchg
adc
testl
dec
das
add
nop
loopne
dec
nop
loopne
add
add
movl
dec
mov
loopne
out
idivl
add
cs
cmp
loopne
dec
nop
loopne
dec
sbb
aad
das
add
cwtl
loopne
dec
cs
ret
cwtl
loopne
imull
mov
mov
das
dec
test
mov
cmp
testl
dec
das
add
mov
loopne
add
add
or
loopne
dec
nop
loopne
notl
notl
add
sub
adc
loopne
dec
mov
add
aad
das
add
cwtl
loopne
dec
sub
ret
cwtl
loopne
imull
xchg
faddl
loopne
imull
das
dec
test
mov
adc
testl
dec
das
add
nop
loopne
dec
nop
loopne
add
add
movl
dec
mov
loopne
out
idivl
add
cs
cmp
loopne
dec
nop
loopne
dec
sbb
aad
das
add
cwtl
loopne
dec
cs
ret
cwtl
loopne
imull
mov
mov
das
dec
test
add
dec
sbb
and
out
testl
or
mov
loopne
add
add
or
loopne
dec
nop
loopne
notl
notl
add
sub
adc
loopne
dec
mov
add
aad
das
add
cwtl
loopne
dec
sub
ret
cwtl
loopne
imull
xchg
in
or
nop
loopne
imull
das
dec
test
test
adc
testl
dec
das
add
nop
loopne
dec
nop
loopne
add
add
movl
dec
mov
loopne
out
idivl
add
cs
cmp
loopne
dec
nop
loopne
dec
sbb
aad
das
add
cwtl
loopne
dec
cs
ret
cwtl
loopne
imull
mov
mov
das
dec
test
clc
cmp
testl
dec
das
add
mov
loopne
add
add
or
loopne
dec
nop
loopne
notl
notl
add
sub
adc
loopne
dec
mov
add
aad
das
add
cwtl
loopne
dec
sub
ret
cwtl
loopne
imull
xchg
in
add
loopne
imull
das
dec
test
cld
adc
testl
dec
das
add
nop
loopne
dec
nop
loopne
add
add
movl
dec
mov
loopne
out
idivl
add
cs
cmp
loopne
dec
nop
loopne
dec
sbb
aad
das
add
cwtl
loopne
dec
cs
ret
cwtl
loopne
imull
mov
mov
das
dec
test
lock
cmp
testl
dec
das
add
mov
loopne
add
add
or
loopne
dec
nop
loopne
notl
notl
add
sub
adc
loopne
dec
mov
add
aad
das
add
cwtl
loopne
dec
sub
ret
cwtl
loopne
imull
xchg
hlt
add
loopne
imull
das
dec
test
hlt
adc
testl
dec
das
add
nop
loopne
dec
nop
loopne
add
add
movl
dec
mov
loopne
out
idivl
add
cs
cmp
loopne
dec
nop
loopne
dec
sbb
aad
das
add
cwtl
loopne
dec
cs
ret
cwtl
loopne
imull
mov
mov
das
dec
test
call
testl
dec
das
add
mov
loopne
add
add
or
loopne
dec
nop
loopne
notl
notl
add
sub
adc
loopne
dec
mov
add
aad
das
add
cwtl
loopne
dec
sub
ret
cwtl
loopne
imull
xchg
cld
add
loopne
imull
das
dec
test
in
adc
testl
dec
das
add
nop
loopne
dec
nop
loopne
add
add
movl
dec
mov
loopne
out
idivl
add
cs
cmp
loopne
dec
nop
loopne
dec
sbb
aad
das
add
cwtl
loopne
dec
cs
ret
cwtl
loopne
imull
mov
mov
das
dec
test
loopne
cmp
testl
dec
das
add
mov
loopne
add
add
or
loopne
pushl
inc
xor
cmp
loopne
inc
push
test
loopne
dec
nop
loopne
xor
les
mov
mov
mov
shlb
shlb
lret
mov
loopne
lret
inc
test
lds
dec
and
dec
cwtl
loopne
dec
mov
aam
add
mov
dec
and
dec
cwtl
loopne
dec
mov
in
adc
mov
dec
or
nop
loopne
lret
inc
xor
cmp
cwtl
cltd
fwait
lcall
or
or
lcall
cmp
ret
dec
mov
aam
nop
loopne
testl
aam
or
push
add
and
dec
dec
jo
les
xor
cmp
fwait
inc
and
lcall
or
or
or
or
or
or
test
add
inc
cmp
mov
inc
stc
and
shrl
testl
aam
test
lret
push
add
shl
out
or
dec
mov
mov
xor
cmp
test
or
or
scas
cmp
gs
les
xchg
gs
testl
call
les
loopne
dec
and
xchg
jnp
ret
ret
aam
mov
shrb
cmpsl
cmp
inc
add
xchg
scas
rclb
les
imul
inc
mov
lods
cmp
dec
mov
rclb
les
rorb
call
mov
call
les
add
push
int3
les
or
or
or
or
in
or
adc
mov
int3
dec
xchg
nop
xchg
xchg
dec
or
push
fwait
push
rol
or
or
scas
cmp
gs
les
xchg
xchg
gs
testl
mov
les
dec
add
test
mov
enter
loopne
dec
mov
decl
ret
lds
int3
std
xchg
int3
dec
rorb
lret
inc
adc
les
in
adc
rorb
dec
xchg
loopne
dec
or
adc
and
inc
cmp
movl
dec
nop
loopne
dec
das
out
sub
sub
les
dec
and
dec
test
inc
add
dec
or
adc
mov
rorb
loopne
xchg
dec
xchg
adc
mov
mov
and
or
aas
lds
loopne
dec
mov
mov
in
dec
mov
mov
xchg
xchg
sub
sub
les
enter
mov
les
inc
add
mov
mov
das
mov
decl
int3
xchg
sub
cmp
cmp
adc
dec
xchg
cmp
sub
test
mov
mov
mov
and
dec
sub
and
inc
sub
imul
dec
and
xchg
cmp
xchg
dec
and
xchg
add
les
inc
inc
ret
aam
mov
clc
xchg
sub
add
les
or
or
or
or
or
dec
xchg
in
cmp
dec
mov
enter
out
shr
dec
lds
dec
xchg
add
or
or
or
or
add
test
dec
test
dec
lds
mov
or
dec
cmp
dec
adc
cmpl
dec
ret
dec
xchg
pushf
dec
or
push
dec
sub
ret
dec
xchg
cwtl
dec
or
push
dec
and
dec
ret
dec
xchg
in
or
push
dec
sbb
ret
dec
xchg
mov
cmp
dec
xor
xchg
sub
les
rol
movl
lret
or
or
pop
add
hlt
dec
mov
dec
xchg
rorb
add
push
inc
xor
add
inc
cmp
dec
xchg
dec
or
adc
xchg
nop
xchg
xchg
dec
or
push
dec
cwtl
loopne
xor
mov
dec
and
dec
mov
aam
xchg
dec
pop
sub
imul
xchg
faddl
int3
dec
or
push
fwait
lcall
dec
rorl
fmuls
cmp
xor
dec
or
add
or
loopne
dec
lock
lret
or
inc
test
add
loopne
dec
nop
loopne
xchg
xchg
xchg
sub
sub
les
dec
xchg
faddl
enter
push
fwait
lcall
or
or
or
dec
xchg
in
xchg
xchg
dec
or
push
dec
sub
ret
dec
xchg
pushf
dec
mov
out
rorb
push
dec
sbb
and
add
testl
add
sub
das
add
lcall
sub
les
dec
repz
xchg
in
add
dec
or
push
xchg
dec
adcb
dec
mov
aam
scas
les
les
enter
push
rol
or
or
dec
and
xchg
xchg
dec
xor
cmp
ret
ret
aam
add
or
or
or
scas
cmp
gs
les
gs
testl
mov
les
loopne
xchg
cmp
enter
inc
add
xchg
scas
into
cmp
nop
fs
dec
mov
fsubrs
inc
cmp
xchg
jnp
int3
ret
aam
mov
clc
add
dec
les
fwait
cmp
inc
add
xchg
scas
ret
loopne
xchg
add
dec
lds
outsl
cmp
lods
pop
inc
ret
aam
nop
loopne
xchg
sub
pop
and
dec
nop
loopne
dec
mov
mov
les
mov
or
or
or
or
or
or
xchg
dec
sub
ret
aam
fs
rcl
gs
les
xchg
gs
cmc
cmpl
xor
addr16
les
sub
cmpl
dec
or
enter
fwait
rorb
dec
xchg
enter
cmp
cmp
je
dec
mov
dec
leave
les
and
les
dec
mov
cmp
cmp
testb
xor
dec
leave
les
and
or
lods
je
ret
aam
fs
rcl
gs
les
xchg
gs
cmc
cmpl
xor
addr16
les
sub
cmpl
mov
cmpl
je
dec
mov
dec
leave
les
and
les
dec
mov
cmp
cmp
testb
xor
dec
leave
les
and
or
or
or
or
or
or
or
or
inc
sub
dec
shl
scas
les
cmp
cmp
int3
inc
add
inc
push
dec
mov
aam
scas
lds
cmp
cmp
int3
inc
add
inc
mov
nop
loopne
dec
push
add
ss
shlb
cmp
loopne
data16
int3
aam
shll
aam
mov
faddl
mov
add
xor
xor
mov
add
xor
inc
add
lret
add
aaa
lcall
mov
add
aaa
lcall
enter
lcall
mov
add
xor
push
mov
add
and
clc
dec
mov
in
lods
les
cmp
cmp
int3
inc
mov
les
dec
nop
loopne
xchg
lods
inc
sub
cmp
cmp
loopne
add
int3
loopne
and
loopne
dec
mov
enter
int3
dec
and
jl
testl
ret
aam
incl
rolb
inc
cmp
mov
dec
mov
aam
and
inc
and
inc
cmp
lret
push
push
add
add
add
add
add
shll
lcall
aam
xchg
testl
mov
in
inc
sub
inc
add
mov
dec
shl
lods
rol
inc
sub
cmp
cmp
jb
loopne
inc
add
movsb
lret
das
shll
int3
aam
add
into
add
movsb
lret
in
les
shll
int3
aam
inc
add
pop
dec
cmp
aam
cmp
ret
add
fstl
aam
sub
rol
inc
add
inc
cmp
test
aam
mov
fwait
pop
lods
les
aam
shl
fs
add
fstl
aam
sub
rol
inc
add
inc
cmp
test
aam
mov
cmp
int3
inc
cmp
xchg
dec
xor
scas
add
roll
aam
sub
rol
popf
dec
add
dec
lds
sarb
add
int3
aam
sub
rol
popf
pop
dec
cmp
int3
sub
push
les
cltd
sub
cltd
pop
dec
shrb
cmp
inc
add
int3
dec
aam
lds
cmp
pop
dec
cmp
xor
cmp
or
sub
popa
dec
add
dec
cmp
int3
dec
int3
inc
or
adc
cmp
mov
dec
aam
lds
cmp
cltd
pop
dec
cmp
les
cmp
cmp
cmp
add
cmp
inc
loope
test
aam
popf
dec
mov
sub
cmp
cmp
int3
aam
dec
cmp
mov
lods
clc
test
aam
rorl
lret
les
in
test
aam
pop
scas
sarb
aam
mov
les
xor
sbb
cmp
dec
mov
les
enter
or
dec
shlb
mov
dec
int3
sub
adc
cmp
mov
dec
aam
lds
cmp
inc
xor
sub
jae
les
cmp
popf
dec
mov
push
cmp
cmp
jp
les
dec
cmp
les
cmp
cmp
cmp
aam
or
les
int3
aam
and
cmp
gs
int3
aam
add
and
cmp
pop
dec
cmp
loopne
int3
aam
mov
lods
cmp
aam
inc
cmp
cmp
insl
inc
add
aam
leave
loopne
int3
aam
int3
dec
mov
dec
mov
das
testl
cltd
pop
dec
cmp
int3
inc
mov
inc
mov
dec
test
xchg
scas
les
or
les
sarb
aam
mov
xor
add
testl
dec
adc
or
aam
mov
add
sbb
ret
adc
fcmovb
cmp
dec
add
rol
sarb
aam
cmc
jns
les
dec
mov
add
sbb
ret
add
les
cmp
cmp
dec
mov
sub
iret
cmp
add
adc
ret
scas
jns
les
dec
cmp
xor
cmp
or
sub
addr16
dec
add
scas
int3
jl
rol
aam
pop
js
les
test
aam
xor
add
mov
sub
cmp
cmp
test
aam
mov
dec
xor
add
pushf
scas
lock
insb
dec
or
mov
add
mov
xchg
sub
cmp
cmp
das
divl
xchg
add
cmp
cmp
faddl
adc
les
shl
into
cmp
dec
or
call
mov
cmp
gs
addb
cmp
xor
sub
cmp
dec
add
js
les
dec
cmp
enter
aam
xchg
mov
dec
mov
das
dec
mov
scas
les
popf
inc
add
sarl
aam
mov
clc
sub
into
cmp
inc
xor
sub
pextrw
popf
inc
add
sarl
aam
dec
mov
fwait
lcall
mov
mov
sub
adc
dec
add
dec
sub
les
lds
or
cmp
xchg
dec
sub
xor
aam
xor
or
sub
data16
dec
add
scas
cmpb
aam
dec
jg
les
mov
nop
lds
cmp
cmp
dec
sbbl
mov
cmp
lods
les
je
sub
jg
les
scas
cmpb
aam
xchg
jg
les
mov
fadd
cmp
inc
mov
sbb
dec
mov
or
cmp
xorl
or
xchg
dec
sub
xor
cmp
ret
ret
add
sub
cmp
xchg
test
aam
add
pop
dec
cmp
scas
lds
cmp
aas
cmp
dec
or
int3
aam
xchg
test
aam
sbb
add
roll
cltd
sbb
les
lcall
or
dec
sub
mov
cmp
shlb
aam
pop
dec
cmp
int3
cmp
call
pop
dec
cmp
int3
cmp
hlt
fs
pop
dec
cmp
int3
cmp
lock
pop
dec
cmp
xor
aam
add
ret
mov
les
int3
mov
xor
aam
enter
int3
aam
pop
das
fmull
inc
mov
int3
aam
addr16
aam
or
inc
mov
int3
aam
mov
cmp
mov
pop
dec
cmp
test
aam
les
ret
xor
xor
dec
cli
sub
jp
les
les
cmp
inc
aas
pop
xchg
aam
or
and
insb
sbb
add
inc
and
pop
or
or
or
or
inc
add
faddl
cmp
clc
fs
and
dec
ret
lcall
int3
dec
lret
lcall
int3
dec
rorb
lcall
or
or
inc
mov
nop
loopne
dec
add
cmp
les
testl
cmp
cmp
rolb
les
rolb
les
or
or
or
or
or
or
or
and
cmp
sarl
aam
fs
aam
or
or
or
or
or
or
or
or
loopne
add
shl
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
shl
cmp
fsubs
aam
and
inc
add
pop
or
or
or
gs
aam
add
aad
cmp
dec
fs
shll
les
or
or
or
loopne
dec
mov
int3
dec
adc
es
inc
push
test
adc
rolb
push
test
dec
adc
ds
inc
es
inc
push
test
dec
adc
ds
inc
push
test
dec
adc
ds
es
inc
push
test
dec
adc
rolb
inc
push
test
dec
adc
faddl
lret
loopne
inc
push
test
test
dec
test
add
or
or
or
or
or
dec
and
dec
mov
int3
dec
adc
es
inc
push
test
adc
rolb
push
test
dec
adc
cs
inc
es
inc
push
test
dec
adc
cs
inc
push
test
dec
adc
cs
es
inc
push
test
dec
adc
rolb
inc
push
test
dec
adc
faddl
lret
loopne
inc
push
test
test
dec
test
add
or
or
or
or
or
xchg
dec
cwtl
loopne
inc
inc
mov
xchg
xchg
jge
les
arpl
aam
aas
aaa
popa
dec
mov
shlb
xchg
xchg
pusha
sub
cmp
cmp
int3
dec
xchg
cli
xchg
cmp
in
ret
sub
cmp
cmp
int3
fwait
lcall
aam
cmp
loopne
ret
pop
or
or
or
or
or
or
or
inc
inc
mov
xchg
xchg
jge
les
arpl
aam
aas
aaa
popa
dec
mov
shlb
xchg
xchg
pusha
sub
cmp
cmp
int3
dec
xchg
cli
xchg
cmp
in
ret
sub
cmp
cmp
int3
fwait
lcall
les
shll
ret
pop
or
or
or
or
or
or
or
xchg
dec
sub
ret
gs
les
cmp
aam
add
sub
xorl
les
xor
cltd
int3
dec
or
sbbl
pop
les
mov
add
les
andl
loopne
les
stc
es
xchg
add
les
loope
mov
xor
jne
inc
add
inc
xor
les
pop
add
mov
inc
mov
jge
les
arpl
aam
mov
popa
dec
sbbl
push
cmp
cmp
int3
cmp
in
ret
mov
xchg
xchg
sub
cmp
cmp
int3
dec
xchg
pusha
xchg
scas
les
shl
gs
xor
mov
inc
add
ret
xchg
cmp
in
gs
xchg
pop
inc
mov
dec
xchg
jge
les
add
xchg
add
inc
xor
inc
cmp
lret
dec
outsb
les
pusha
xchg
xchg
sub
cmp
cmp
int3
dec
xor
mov
inc
add
inc
push
les
ret
inc
les
push
notl
dec
add
pop
inc
add
fsts
sub
cmp
cmp
int3
xchg
dec
mov
and
cmp
dec
sbbl
cmp
pushf
fs
les
mov
dec
xchg
sarb
les
add
andl
add
pop
les
xchg
xchg
sub
cmp
cmp
int3
dec
sbbl
dec
xchg
pop
scas
cmp
cmp
cmp
pop
add
cmp
mov
inc
cmp
mov
xchg
cmp
clc
fs
mov
mov
les
mov
testl
les
cltd
pop
or
or
or
or
or
or
xchg
dec
int
and
add
loopne
les
inc
or
sarb
les
add
les
or
or
or
or
or
or
loopne
dec
int3
dec
xchg
rolb
int3
inc
ds
les
inc
cmp
cmp
cmp
cmp
cmp
mov
inc
cmp
cmp
cmp
das
loopne
or
les
dec
test
das
rolb
cmp
cmp
sarl
les
xchg
xchg
sub
cmp
inc
add
dec
add
les
xchg
sub
push
push
mov
add
lret
inc
push
les
push
xor
push
les
push
dec
mov
rorb
xchg
rorb
or
or
scas
cmp
gs
les
gs
testl
fsubl
les
xchg
aam
add
shl
das
int
cmp
inc
fs
xor
mov
rorb
fsubl
add
les
mov
inc
mov
inc
mov
lods
add
aam
pop
xchg
aam
jo
cmp
gs
aam
add
scas
les
aam
and
cmp
cmp
inc
xor
inc
push
cmp
add
ret
scas
les
cmp
xchg
scas
les
rcl
fs
cmp
dec
mov
fsubl
les
inc
add
pop
inc
mov
dec
lcall
aam
iret
inc
or
dec
xchg
cmp
decl
dec
scas
les
cmp
scas
les
rcl
fs
cmp
xchg
scas
les
rcl
fs
cmp
inc
mov
inc
mov
mov
cmp
dec
mov
dec
mov
dec
mov
inc
or
dec
or
xchg
rclb
pop
mov
dec
xchg
inc
or
int3
mov
dec
xlat
dec
xchg
dec
adc
int3
inc
push
cmp
add
dec
xchg
int3
dec
push
xchg
scas
les
rcl
fs
cmp
inc
mov
sub
or
or
or
or
or
or
or
xchg
dec
sub
ret
gs
les
enter
testl
mov
les
xor
add
aam
pop
xchg
aam
lods
aas
cmp
dec
mov
gs
aam
add
xchg
xchg
cmp
dec
fs
rorb
rorb
cmpl
cmp
cmpl
sub
cmp
cmp
add
mov
mov
les
and
cmpl
jl
mov
aam
or
or
or
scas
cmp
gs
les
gs
testl
fsubl
les
dec
mov
dec
fs
jmp
add
les
ret
les
mov
dec
add
or
int3
mov
dec
rorb
scas
les
cmp
scas
les
adc
and
cmp
cmp
inc
xor
inc
push
cmp
add
ret
scas
les
cmp
xchg
scas
les
adc
fsubl
les
inc
add
pop
or
or
or
or
or
or
or
or
or
or
ret
gs
les
xchg
gs
testl
in
addr16
les
dec
ret
dec
mov
xchg
scas
rclb
les
sbb
add
inc
pop
mov
dec
mov
aam
and
cwtl
loopne
add
ret
nop
loopne
xchg
dec
cwtl
loopne
sub
loopne
cmp
inc
add
jge
les
add
or
add
inc
add
enter
mov
xchg
cmp
clc
fs
fimull
dec
xchg
xchg
cmp
call
mov
in
dec
leave
les
add
pop
or
or
or
or
or
or
or
dec
mov
int3
inc
add
dec
rorb
les
scas
std
xor
xchg
xchg
xchg
dec
ss
scas
xor
mov
sub
out
or
rorb
les
test
push
add
lods
add
rol
add
xchg
dec
cmp
jl
inc
out
adc
and
ret
dec
adc
les
jl
or
or
es
jl
or
or
and
rclb
or
add
jae
dec
dec
fiaddl
or
xchg
mov
jae
mov
lods
mov
ror
cmp
jl
jecxz
les
scas
lds
les
leave
cmp
lret
jae
xchg
mov
scas
lds
leave
cmp
mov
into
scas
lds
leave
cmp
lret
jae
test
mov
scas
lds
lret
mov
into
scas
lds
lret
dec
and
mov
lcall
dec
int3
lahf
pop
or
or
int3
xchg
dec
mov
aam
or
dec
or
or
cmp
cmp
dec
and
dec
and
dec
and
xchg
dec
nop
loopne
dec
mov
xchg
add
les
adc
add
cmp
cmp
lcall
or
or
or
dec
xchg
rolb
inc
add
int3
inc
ds
les
inc
cmp
mov
inc
cmp
cmp
cmp
inc
inc
les
cmp
cmp
cmp
cmp
mov
mov
aam
add
dec
or
or
lcall
inc
add
out
ds
les
xchg
dec
mov
aam
les
cmp
dec
add
rol
cmp
mov
jl
les
cmp
cmp
les
xchg
dec
or
or
lcall
scas
shrb
push
xchg
xchg
sub
adc
les
sub
cmp
cmp
loopne
xchg
sub
in
cmp
loopne
dec
lds
enter
add
push
rol
or
or
or
or
or
or
or
xchg
dec
xor
ret
mov
enter
and
dec
xchg
fsubrl
dec
or
mov
add
les
cmp
int3
dec
add
or
or
or
or
or
or
aam
dec
xor
or
cmp
mov
dec
and
add
lds
test
cmp
cmp
lcall
inc
mov
xchg
cmp
hlt
gs
ret
int3
dec
cmp
or
push
call
fidivs
shr
or
push
inc
add
roll
mov
jle
les
int3
testl
loopne
dec
aam
inc
push
mov
jge
cmp
cmp
rcrb
les
loopne
lods
add
aam
sub
les
cmp
fmuls
fmull
fmull
loopne
inc
add
pushl
dec
mov
sar
mov
dec
and
add
les
test
les
rol
nop
loopne
xchg
xchg
dec
and
xchg
sub
cmp
cmp
loopne
dec
nop
loopne
inc
add
scas
les
xchg
sub
pop
mov
faddl
lds
les
cmpsl
aaa
cmp
dec
add
rol
or
or
or
or
or
in
dec
mov
in
inc
mov
loopne
les
and
les
gs
ret
int3
dec
mov
notl
out
or
ss
dec
arpl
les
inc
pop
scas
cmp
xchg
sub
push
xor
push
lcall
dec
mov
in
inc
add
xchg
dec
or
dec
and
dec
and
dec
and
mov
sub
cmp
cmp
loopne
xchg
dec
and
xchg
sub
aas
cmp
mov
inc
add
dec
nop
loopne
mov
xchg
dec
or
cmp
cmp
loopne
xchg
dec
mov
int3
xchg
sub
aas
cmp
mov
inc
add
dec
and
xchg
dec
or
sub
cmp
cmp
loopne
xchg
dec
nop
loopne
xchg
sub
aas
cmp
mov
dec
mov
enter
dec
and
sub
xor
cmp
loopne
dec
and
inc
add
scas
les
xchg
sub
push
mov
rclb
loopne
daa
xor
cmp
loopne
dec
and
inc
add
scas
les
xchg
sub
push
les
mov
mov
rclb
loop
imul
cmp
loopne
inc
add
scas
les
and
xchg
xchg
sub
push
les
adc
loopne
xchg
dec
nop
loopne
xchg
mov
cmp
lock
add
leave
divl
testl
pop
dec
and
xchg
xchg
sub
xor
cmp
loopne
dec
nop
loopne
inc
add
scas
les
xchg
sub
adc
scas
into
xchg
xchg
sub
adc
les
loopne
dec
mov
aam
xor
push
dec
add
lcall
loopne
dec
mov
aam
add
lcall
lods
int3
ffree
aam
gs
les
xchg
xchg
gs
testl
movsb
mov
testl
loopne
dec
and
dec
and
idivl
imull
dec
mov
loopne
dec
cwtl
loopne
dec
cwtl
loopne
incl
mov
dec
mov
loopne
dec
stos
lds
xchg
aam
add
fs
cmp
incl
mov
dec
leave
fs
aam
or
int
cmp
dec
leave
fs
aam
mov
dec
test
in
or
xchg
cmp
dec
test
dec
subb
dec
mov
loopne
out
loopne
les
loopne
incl
lret
inc
push
les
loopne
xchg
dec
mov
mov
cmp
loopne
inc
cmp
mov
xchg
xchg
xchg
cmp
cld
gs
xor
mov
rolb
mov
dec
nop
loopne
xchg
sub
cmp
cmp
shrb
dec
and
scas
les
loopne
xchg
xchg
dec
nop
loopne
cmp
test
ret
add
push
add
add
hlt
dec
test
fmull
push
inc
js
inc
les
mov
mov
aas
cmp
jge
les
dec
mov
inc
dec
mov
loopne
add
push
pop
divl
dec
cmp
mov
dec
mov
call
mov
cmp
dec
mov
dec
nop
loopne
inc
sub
roll
das
dec
add
clc
xchg
xchg
cmp
test
incl
mov
incl
incl
dec
incl
add
cmp
inc
cmp
mov
xchg
cmp
clc
fs
add
mov
movsb
mov
les
inc
add
fs
js
inc
les
mov
inc
les
inc
mov
inc
xchg
cmp
cmp
arpl
and
cmp
cmp
inc
cmp
mov
xchg
cmp
clc
fs
lds
loopne
mov
les
inc
add
aam
add
ret
xchg
cmp
inc
fs
mov
xchg
cmp
in
gs
je
ret
aam
nop
loopne
testb
and
sub
insl
or
or
or
scas
cmp
gs
les
xchg
xchg
gs
testl
clc
mov
les
dec
and
xchg
sub
aaa
cmp
dec
cwtl
loopne
add
les
mov
dec
int3
dec
nop
loopne
xchg
dec
mov
fsubrs
cmp
cmp
dec
and
inc
sub
dec
cmp
les
cmp
dec
mov
inc
add
add
les
mov
dec
mov
inc
push
cmp
add
ret
scas
les
cmp
xchg
scas
les
rcl
fs
cmp
fsubl
add
cmp
inc
pop
mov
dec
xchg
inc
or
int3
mov
dec
xlat
dec
scas
les
cmp
scas
les
rcl
fs
cmp
fsubl
dec
mov
clc
mov
les
inc
add
pop
or
or
or
or
aam
shl
add
pop
or
or
dec
push
add
sub
adc
cmp
add
or
or
or
or
or
or
sub
cmp
add
or
or
or
or
inc
mov
shrl
cmp
push
enter
and
inc
add
inc
cmp
mov
sub
xor
cmp
les
enter
sub
cmp
les
enter
or
or
or
or
loopne
dec
nop
loopne
xchg
dec
mov
int3
out
or
rorb
inc
mov
inc
sub
inc
add
inc
cmp
or
ret
out
add
mov
lret
jb
mov
in
cmp
jb
lret
jb
out
add
mov
lret
jb
lret
jb
out
add
or
notl
inc
add
push
push
fwait
dec
push
lcall
add
push
push
fwait
dec
push
lcall
or
or
rclb
pop
or
or
or
dec
int3
sub
stos
lret
les
or
or
or
or
aam
mov
jl
mov
add
add
mov
cmp
shrl
xchg
enter
fwait
dec
rorb
rol
or
or
or
or
or
xchg
dec
mov
cmp
sar
mov
sub
push
add
or
lret
push
add
rol
or
xchg
dec
mov
cmp
sar
mov
sub
push
add
or
lret
push
add
rol
or
inc
cmp
mov
inc
add
shrl
ret
mov
dec
mov
das
dec
mov
dec
test
movl
add
pop
or
or
or
or
or
inc
cmp
mov
inc
add
shrl
ret
mov
dec
mov
das
dec
mov
dec
test
movl
add
add
or
or
xchg
dec
xor
cmp
mov
inc
add
sar
shlb
and
sbb
shl
lcall
cmp
shrl
fadds
mov
dec
mov
das
dec
mov
dec
xchg
rol
adc
shrl
in
clc
into
mov
clc
leave
mov
clc
enter
mov
xchg
mov
fadds
cmp
shrl
sbb
mov
dec
mov
das
dec
mov
dec
test
movl
mov
inc
std
les
inc
lret
inc
test
cmp
dec
xchg
orb
dec
addb
cmp
shrl
sbb
mov
dec
mov
das
dec
mov
dec
xchg
rol
adc
shrl
lds
or
or
or
xchg
dec
xor
cmp
mov
inc
add
sar
lock
sub
push
and
cmp
xlat
xor
dec
mov
xchg
xorb
testb
or
or
or
or
xchg
dec
xor
cmp
mov
inc
add
sar
shlb
and
sbb
xlat
xor
dec
mov
xchg
xorb
testb
or
or
or
or
dec
test
xchg
xorb
or
or
fadds
cmp
sar
call
push
and
xor
leave
dec
mov
xchg
xorb
testb
or
or
or
or
or
or
or
dec
test
xchg
nop
dec
test
dec
test
or
or
or
or
or
or
or
test
testb
les
or
or
loopne
xchg
dec
cwtl
loopne
xchg
dec
xor
les
jb
lret
jae
mov
mov
out
xor
mov
lcall
insl
rol
mov
inc
aas
fwait
mov
insl
in
les
mov
inc
aas
leave
mov
inc
aas
enter
aas
iret
mov
insl
aam
les
dec
or
cmp
cmp
mov
lods
in
les
cmp
cmp
mov
lcall
or
or
or
or
or
or
inc
cmp
mov
inc
add
shrl
ret
mov
dec
test
das
movl
mov
sub
push
mov
dec
add
or
or
or
or
or
loopne
dec
add
dec
mov
dec
mov
rorb
dec
mov
int3
dec
xchg
rorb
dec
aad
xchg
rorb
mov
dec
xchg
int3
call
or
int3
mov
dec
rolb
xor
test
les
aam
dec
xchg
enter
dec
xchg
aam
xchg
aam
rorb
rolb
aam
or
dec
and
xchg
dec
mov
enter
jecxz
mov
aam
aad
aam
xchg
rorb
dec
xchg
int3
dec
xchg
int3
dec
xchg
enter
dec
xchg
aam
xchg
aam
add
incl
mov
lcall
or
or
or
loopne
inc
sub
inc
or
dec
rorb
les
les
rolb
pop
inc
or
notl
xor
and
and
xchg
dec
mov
rolb
loopne
les
dec
mov
loopne
xchg
add
ret
sub
les
or
or
or
loopne
dec
aad
xchg
add
cld
test
mov
dec
test
push
rol
or
or
or
dec
mov
rorb
enter
loopne
decl
mov
dec
aad
aam
xchg
rorb
dec
xchg
int3
dec
xchg
int3
dec
xchg
enter
dec
xchg
aam
xchg
aam
add
decl
mov
lcall
or
xchg
dec
xor
mov
mov
dec
or
push
inc
add
sub
or
or
loopne
inc
sub
inc
or
dec
rorb
les
les
rolb
pop
inc
or
notl
xor
and
and
xchg
dec
mov
rolb
loopne
les
inc
mov
loopne
xchg
add
ret
enter
or
or
or
xchg
xchg
dec
mov
mov
mov
les
mov
dec
mov
dec
sar
lcall
rcrb
or
or
loopne
dec
and
xchg
dec
mov
int3
pushl
sub
rolb
rorb
dec
xchg
rorb
dec
xchg
int3
dec
xchg
int3
dec
xchg
enter
dec
xchg
aam
xchg
aam
or
or
or
or
enter
dec
cmp
xchg
dec
cltd
lds
inc
add
inc
cmp
mov
lret
jb
dec
movsb
aam
loopne
mov
fwait
in
das
jecxz
mov
dec
dec
fadd
lds
les
enter
jno
add
dec
push
lds
incl
mov
movl
dec
stos
rorb
pushl
mov
lahf
fwait
lcall
nop
movsb
aam
movsb
aam
movsb
aam
movsb
aam
movsb
aam
rol
mov
rol
or
or
or
dec
and
inc
add
fmuls
inc
cmp
jb
shlb
sub
inc
add
and
add
rol
mov
les
rol
les
rol
mov
les
les
rol
les
aam
movsb
aam
movsb
aam
movsb
aam
movsb
aam
movsb
aam
rol
rol
mov
rol
rol
or
or
or
loopne
dec
aam
fnsave
inc
movsl
aam
loopne
mov
aam
xchg
int3
inc
push
mov
mov
inc
cmp
mov
dec
test
das
ret
rorb
dec
test
inc
add
pop
push
rol
mov
add
lds
rol
movsl
aam
movsl
aam
movsl
aam
movsl
aam
mov
mov
or
xchg
dec
xor
mov
mov
inc
mov
sub
dec
add
or
lret
push
add
rol
or
or
or
dec
and
dec
mov
inc
mov
dec
les
dec
mov
inc
mov
pop
or
or
dec
and
dec
int3
inc
mov
dec
mov
dec
int3
inc
mov
pop
or
or
or
les
add
mov
dec
test
dec
add
mov
lcall
int3
inc
mov
dec
test
inc
mov
dec
pusha
loopne
les
dec
test
inc
mov
dec
mov
lcall
ffree
mov
dec
pusha
loopne
les
sar
mov
dec
add
adc
xchg
inc
mov
dec
mov
inc
mov
lcall
add
pop
or
or
or
or
les
add
mov
lcall
mov
inc
mov
dec
lds
les
dec
or
lds
les
lcall
ffree
mov
dec
mov
decl
rorb
xchg
inc
mov
dec
add
pop
or
or
or
or
or
or
or
inc
xor
mov
lret
jb
loopne
lods
xchg
xchg
sub
add
les
enter
lcall
enter
int3
enter
mov
inc
lret
push
int3
les
or
or
or
or
or
or
or
loopne
dec
lds
mov
inc
cmp
mov
mov
inc
cmp
lds
notl
sub
add
out
in
xchg
loopne
push
mov
testb
rol
or
or
or
or
or
xchg
dec
xor
dec
lds
mov
inc
add
inc
cmp
mov
dec
dec
fadd
les
test
notl
sub
add
int
in
xchg
loopne
push
rol
or
or
or
or
dec
nop
loopne
dec
movb
mov
dec
mov
xchg
dec
mov
dec
mov
pushl
dec
aad
push
cmp
leave
mov
lret
jb
movsb
mov
push
mov
les
rol
rol
les
rol
fadd
les
rol
mov
jl
les
rol
out
mov
aam
mov
aam
mov
rol
rol
rol
rol
or
dec
and
dec
mov
inc
mov
dec
les
dec
mov
inc
mov
pop
or
or
dec
and
dec
int3
inc
mov
dec
mov
dec
int3
inc
mov
pop
or
or
or
loopne
dec
xchg
xchg
dec
hlt
dec
mov
dec
hlt
inc
mov
dec
xchg
rorb
dec
mov
dec
fcompl
iret
dec
test
dec
aam
xchg
push
rol
mov
call
mov
dec
lds
dec
xchg
push
rol
test
dec
aam
xchg
push
rol
or
loopne
dec
mov
inc
mov
dec
les
dec
mov
inc
mov
pop
or
or
dec
and
dec
int3
inc
mov
dec
mov
dec
int3
inc
mov
pop
or
or
or
loopne
dec
xchg
dec
mov
dec
testb
inc
mov
dec
xchg
rorb
dec
mov
dec
fcompl
enter
dec
xchg
int3
dec
xchg
push
rol
mov
call
test
dec
xchg
int3
dec
xchg
push
rol
lds
int3
dec
xchg
push
rol
or
or
or
or
or
or
or
les
add
mov
lcall
mov
inc
mov
dec
lds
les
dec
or
lds
les
lcall
add
sar
int3
mov
dec
add
adc
xchg
inc
mov
dec
add
pop
or
or
or
or
or
or
or
loopne
xchg
dec
cwtl
loopne
xchg
dec
mov
rclb
incl
mov
pushl
mov
dec
int3
dec
sar
adc
test
das
aam
lcall
testb
incl
mov
pushl
mov
fwait
lcall
pop
fwait
lcall
xchg
dec
xor
mov
jl
mov
add
add
xchg
inc
cmp
mov
sub
inc
or
mov
rorb
hlt
dec
nop
loopne
dec
xchg
lock
mov
out
mov
jl
mov
add
add
inc
cmp
mov
sub
inc
mov
add
aam
mov
jl
mov
add
add
mov
sub
inc
or
mov
rorb
dec
nop
loopne
dec
xchg
rorb
out
mov
jl
mov
add
add
mov
sub
inc
mov
out
or
mov
ds
dec
push
add
mov
sub
inc
stos
enter
inc
cmp
mov
inc
add
sar
int3
mov
sub
inc
xchg
sar
enter
lret
push
pop
out
mov
jl
mov
add
add
mov
sub
inc
mov
dec
popf
aam
and
dec
mov
fcompl
mov
dec
sub
mov
add
test
lcall
or
or
or
or
or
xchg
xchg
dec
ds
xor
dec
mov
out
mov
jl
mov
add
add
mov
cmp
shrl
or
mov
enter
jnp
sub
sub
in
int3
dec
nop
loopne
dec
nop
in
enter
out
mov
jl
mov
add
add
cmp
shrl
mov
dec
nop
loopne
dec
nop
in
aam
inc
cmp
lret
inc
push
les
fadd
lret
inc
or
les
aam
mov
jl
mov
add
add
mov
sub
inc
or
mov
enter
nop
loopne
dec
xchg
rorb
out
mov
jl
mov
add
add
mov
sub
inc
mov
out
or
mov
ds
dec
push
add
mov
sub
inc
dec
lcall
mov
inc
add
sar
int3
mov
sub
inc
xchg
sar
enter
lret
push
pop
out
mov
jl
mov
add
add
mov
sub
inc
mov
dec
popf
aam
and
dec
mov
rorb
in
mov
dec
sub
mov
add
test
lahf
fwait
lcall
dec
xor
mov
jl
mov
add
add
xchg
inc
cmp
mov
sub
inc
or
mov
aam
mov
dec
nop
loopne
dec
xchg
in
mov
out
mov
jl
mov
add
add
inc
cmp
mov
sub
inc
mov
inc
add
inc
cmp
mov
inc
add
ret
loopne
mov
sub
inc
mov
decl
aam
push
pop
out
mov
jl
mov
add
add
inc
cmp
mov
sub
inc
mov
dec
popf
loopne
mov
out
mov
jl
mov
add
add
inc
cmp
mov
sub
inc
or
mov
aam
mov
dec
nop
loopne
dec
xchg
call
mov
jl
mov
add
add
movl
js
les
std
xchg
lcall
shrl
stos
enter
out
or
mov
ds
dec
push
add
mov
sub
inc
or
mov
dec
mov
int3
dec
xchg
enter
enter
out
mov
jl
mov
add
add
lcall
shrl
or
mov
int3
dec
enter
jmp
dec
nop
ret
rorb
out
mov
jl
mov
add
add
lcall
shrl
mov
add
mov
out
mov
jl
mov
add
add
push
inc
add
lcall
inc
xchg
cmp
cmp
int3
les
or
xchg
dec
xor
inc
pop
mov
dec
and
dec
mov
enter
or
cmp
cmp
dec
mov
out
mov
xchg
dec
mov
mov
ds
dec
push
add
cmp
shrl
or
mov
aam
clc
jnp
enter
loopne
dec
nop
jl
inc
pop
lret
inc
push
les
aam
mov
jl
mov
add
add
inc
cmp
mov
sub
inc
or
mov
aam
mov
dec
nop
loopne
dec
xchg
in
mov
out
mov
jl
mov
add
add
inc
cmp
mov
sub
inc
mov
out
or
mov
ds
dec
push
add
inc
cmp
xchg
inc
lcall
rolb
cmp
sar
fdivs
xchg
sar
in
mov
lret
push
pop
out
mov
jl
mov
add
add
inc
cmp
mov
sub
inc
mov
dec
popf
loopne
lcall
xchg
xchg
dec
xor
scas
int3
xchg
idivl
inc
sub
inc
je
les
fadds
cmp
sar
shlb
and
sbb
inc
pop
les
fadds
cmp
shrl
sbb
mov
dec
mov
das
dec
mov
dec
xchg
rol
adc
shrl
mov
in
les
lret
jb
dec
lds
aam
incb
dec
sbb
inc
cmp
mov
inc
add
shrl
sbb
mov
dec
mov
das
dec
mov
dec
xchg
rol
adc
shrl
and
cmp
inc
xchg
cmp
cmp
orb
fwait
dec
mov
lahf
pop
fwait
lcall
or
inc
sub
xchg
dec
sub
dec
mov
mov
inc
add
sar
lock
sub
inc
add
cmp
mov
mov
insb
lds
dec
xchg
rcrb
cltd
inc
add
pop
fwait
testb
add
pop
xor
les
rclb
aam
cmp
mov
inc
xor
mov
dec
add
dec
add
sbb
shrl
ret
dec
cwtl
loopne
inc
cmp
mov
inc
add
sar
shlb
add
sbb
cmp
shrl
mov
dec
add
dec
add
mov
or
sbb
inc
xbegin
leave
mov
clc
enter
mov
aam
popa
sub
cmp
mov
dec
or
cld
into
mov
dec
xchg
orb
lcall
lds
inc
cmp
mov
inc
xor
mov
dec
add
dec
add
mov
or
sbb
mov
inc
aas
into
mov
inc
aas
leave
mov
inc
aas
enter
lahf
fwait
testb
add
pop
or
or
or
or
or
or
inc
sub
xchg
xchg
dec
cmp
mov
inc
cmp
mov
inc
add
sar
shlb
add
sbb
mov
aam
lret
inc
inc
les
sub
das
cmp
dec
clc
into
mov
clc
leave
mov
clc
enter
mov
xchg
dec
or
das
cmp
inc
add
int
orl
dec
rorb
rorb
int3
dec
nop
loopne
dec
and
sub
sub
cmp
loopne
sub
das
cmp
inc
cld
leave
mov
dec
or
das
cmp
inc
cld
into
mov
dec
mov
xchg
sbbb
int3
pop
xor
dec
addl
sbbb
int3
pop
fwait
testb
add
pop
or
or
or
or
or
or
or
xchg
dec
xor
cmp
mov
inc
add
sar
shlb
and
incl
sbb
cmp
mov
inc
add
shrl
sbb
mov
dec
mov
das
dec
mov
dec
xchg
rol
adc
shrl
mov
lret
jb
dec
xorb
sub
sub
cmp
das
int
lcall
lds
fadds
cmp
sar
lock
sub
mov
in
cmp
fimuls
mov
mov
insb
aam
inc
jne
les
sub
dec
sbb
cmp
mov
inc
add
shrl
sbb
mov
dec
test
das
movl
mov
sub
mov
in
sbb
cmp
mov
inc
add
shrl
sbb
mov
dec
mov
das
dec
mov
dec
xchg
rol
adc
shrl
mov
lret
jb
dec
xorb
sub
sub
cmp
sbb
sbb
cmp
mov
inc
add
shrl
sbb
mov
dec
mov
das
dec
mov
dec
test
movl
and
pop
lahf
mov
dec
mov
xchg
xorb
testb
or
or
or
xchg
xchg
dec
xor
cmp
mov
inc
add
sar
shlb
and
sbb
shl
lcall
jnp
les
cmp
shrl
fdivr
mov
mov
das
dec
mov
dec
xchg
rol
adc
shrl
mov
lret
jb
dec
xorb
sub
sub
cmp
iret
dec
sbb
cmp
mov
inc
add
sar
lock
sub
mov
in
cmp
leave
xor
lret
inc
add
les
fadds
cmp
shrl
sbb
mov
test
das
movl
mov
sub
mov
in
sbb
cmp
mov
inc
add
shrl
fdivr
mov
mov
das
dec
mov
dec
xchg
rol
adc
shrl
mov
lret
jb
dec
xorb
xchg
sub
das
cmp
dec
sbb
sbb
cmp
mov
inc
add
shrl
sbb
mov
mov
das
dec
mov
dec
test
movl
lds
lret
lahf
mov
dec
mov
dec
xchg
sbbb
lcall
or
or
or
or
int3
xchg
dec
xor
cmp
mov
inc
add
sar
shlb
and
sbb
mov
sbb
cmp
mov
inc
add
shrl
sbb
mov
dec
mov
das
dec
mov
dec
xchg
rol
adc
shrl
mov
lret
jb
dec
xorb
sub
cmp
inc
add
call
cmp
mov
inc
add
sar
lock
sub
mov
in
cmp
rorl
mov
mov
insb
aam
xchg
add
inc
add
pop
dec
mov
dec
xchg
in
mov
rorb
rorb
int3
sub
cmp
dec
mov
shrb
mov
jb
xchg
dec
mov
cmp
mov
testb
add
pop
dec
addb
xorb
add
pop
or
or
or
xchg
xchg
dec
cmp
fadds
cmp
sar
lock
sub
mov
sar
cld
mov
xor
lret
inc
push
les
sub
cmp
mov
inc
xor
mov
dec
add
dec
add
sub
shrl
inc
cmp
mov
inc
xor
mov
dec
add
dec
add
mov
or
sub
mov
mov
jb
les
test
cmp
lcall
movl
add
sar
shlb
pop
decl
orl
lahf
pop
dec
cvttps2pi
and
cmp
mov
jb
dec
mov
cmp
inc
add
rcrl
mov
xchg
sbbb
or
or
or
or
or
xchg
dec
xor
dec
mov
mov
inc
add
sar
shlb
add
sbb
lods
dec
ret
inc
cmp
mov
inc
add
shrl
ret
inc
mov
dec
mov
das
dec
mov
dec
xchg
rol
adc
shrl
mov
rorb
lret
dec
xchg
test
jb
dec
into
dec
dec
les
or
adc
les
dec
or
subb
cmp
fwait
je
lcall
or
or
or
or
or
or
or
xchg
xchg
dec
cmp
mov
inc
cmp
mov
inc
add
sar
shlb
add
sbb
rcrl
ret
cmp
shrl
ret
mov
dec
mov
das
dec
mov
dec
xchg
rol
adc
shrl
or
and
cmp
inc
cmp
mov
inc
add
sar
shlb
add
sbb
jmp
ret
cmp
shrl
ret
mov
dec
mov
das
dec
mov
dec
xchg
rol
adc
shrl
addl
sbbb
or
or
or
mov
mov
testb
xchg
dec
fwait
in
xchg
dec
mov
jns
les
dec
les
cmp
sar
shlb
fdivl
mov
inc
xor
stos
fdivl
das
dec
add
mov
or
sbb
mov
nop
les
mov
dec
xchg
test
lret
jb
dec
inc
clc
into
mov
clc
leave
mov
clc
enter
cmp
mov
inc
xor
stos
fdivl
das
dec
add
xchg
rol
adc
push
mov
sub
mov
test
cmp
mov
inc
xor
mov
sub
mov
lcall
lret
inc
repz
cmp
orb
dec
mov
or
rol
xchg
dec
cmp
les
inc
push
lret
push
add
jb
dec
or
dec
mov
xchg
xchg
dec
mov
sub
xor
cmp
rolb
push
add
jb
lret
jb
fcoml
dec
adc
dec
mov
xchg
sub
xor
fmuls
pop
les
rol
or
pop
rolb
add
testb
les
or
or
or
or
or
or
xchg
xchg
dec
jne
les
rorb
dec
xchg
int3
dec
xchg
fmuls
enter
enter
dec
adc
adc
push
pop
inc
add
ror
push
das
ret
testl
inc
add
dec
inc
pop
testl
lret
push
add
push
rol
or
or
or
or
or
or
or
dec
and
dec
push
pop
les
mov
xchg
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
lcall
les
rol
or
dec
push
pop
les
push
les
je
les
int3
dec
push
pop
les
xchg
lds
or
or
loopne
dec
push
pop
les
mov
xchg
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
cmp
aam
push
pop
les
rol
or
or
or
or
or
or
inc
add
iret
sub
mov
les
inc
add
rorb
testl
aam
into
sub
mov
les
rcrb
dec
lds
popf
pop
or
or
or
dec
mov
rorb
int3
testl
xchg
dec
xor
cmp
and
add
lret
jp
dec
jo
jge
repz
test
add
push
mov
fwait
lcall
and
xchg
dec
mov
enter
out
inc
add
fmuls
dec
aam
xchg
rorb
dec
xchg
int3
dec
xchg
int3
dec
xchg
enter
dec
xchg
aam
xchg
aam
add
decl
mov
lcall
int3
dec
nop
loopne
xchg
dec
cwtl
loopne
xchg
dec
mov
fcoml
testb
loopne
dec
mov
aam
and
dec
and
xchg
xchg
xchg
xchg
xchg
xchg
sub
and
cmp
aaa
jl
mov
add
add
dec
rolb
add
add
dec
or
add
inc
add
pop
or
or
loopne
dec
xchg
xchg
dec
hlt
dec
mov
dec
hlt
inc
mov
dec
xchg
rorb
dec
mov
dec
fcompl
iret
dec
test
dec
aam
xchg
push
rol
mov
call
mov
dec
lds
dec
xchg
push
rol
test
dec
aam
xchg
push
rol
or
loopne
dec
xchg
dec
mov
dec
testb
inc
mov
dec
xchg
rorb
dec
mov
dec
fcompl
enter
dec
xchg
int3
dec
xchg
push
rol
mov
call
test
dec
xchg
int3
dec
xchg
push
rol
lds
int3
dec
xchg
push
rol
or
or
or
or
or
or
or
ret
mov
les
mov
out
adc
es
adc
or
inc
add
rorl
dec
push
mov
out
push
push
mov
out
adc
xchg
rorb
mov
dec
cwtl
loopne
dec
nop
loopne
xchg
dec
dec
add
aas
sub
mov
les
loopne
dec
pushf
rorb
rorb
mov
or
lahf
push
enter
xchg
xchg
xchg
dec
mov
aam
pop
dec
sub
les
inc
cmp
lret
inc
push
lret
jb
sub
inc
or
aam
or
cmp
mov
inc
cmp
mov
inc
cmp
mov
dec
mov
dec
mov
das
scas
dec
xchg
rorb
dec
mov
das
movsb
dec
or
cmp
mov
inc
cmp
mov
lcall
lcall
sub
sub
inc
cmp
mov
inc
cmp
mov
inc
cmp
mov
inc
cmp
mov
dec
mov
inc
mov
dec
inc
aam
std
inc
rol
les
mov
das
into
inc
mov
xchg
rolb
inc
sahf
cmp
cmp
lahf
push
rol
xchg
rclb
cmp
cmp
dec
or
dec
or
cmp
cmp
mov
into
dec
rcr
lcall
lcall
rol
cmp
aam
mov
aam
mov
aam
mov
aam
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
rol
ret
ror
rol
rol
or
or
or
or
dec
nop
loopne
dec
xchg
dec
mov
dec
testb
inc
mov
dec
xchg
rorb
dec
mov
dec
fcompl
enter
dec
xchg
int3
dec
xchg
push
rol
mov
call
test
dec
xchg
int3
dec
xchg
push
rol
lds
int3
dec
xchg
push
rol
or
or
or
or
or
or
or
loopne
dec
xchg
xchg
dec
hlt
dec
mov
dec
hlt
inc
mov
dec
xchg
rorb
dec
mov
dec
fcompl
iret
dec
test
dec
aam
xchg
push
rol
mov
call
mov
dec
lds
dec
xchg
push
rol
test
dec
aam
xchg
push
rol
or
les
add
mov
dec
test
dec
add
mov
lcall
int3
inc
mov
dec
test
inc
mov
dec
pusha
loopne
les
dec
test
inc
mov
dec
mov
lcall
jmp
pusha
loopne
les
sar
mov
dec
add
adc
xchg
inc
mov
dec
mov
inc
mov
lcall
add
pop
or
or
or
or
les
add
mov
lcall
mov
inc
mov
dec
lds
les
dec
or
lds
les
lcall
jmp
mov
decl
rorb
xchg
inc
mov
dec
add
pop
or
or
or
or
or
or
or
loopne
dec
adc
pop
divl
inc
add
jmp
pushl
shrl
mov
dec
add
dec
mov
fdivr
enter
xchg
rolb
cltd
fwait
lcall
or
or
or
or
or
loopne
dec
nop
loopne
dec
and
decl
mov
xchg
inc
add
into
dec
cmc
dec
hlt
dec
mov
dec
mov
inc
add
decl
mov
lcall
dec
mov
rorb
enter
loopne
decl
mov
inc
add
enter
dec
aam
jb
lds
inc
add
decl
mov
lcall
aad
and
dec
aam
rolb
loopne
les
rolb
enter
jle
les
add
les
or
or
or
aam
xchg
enter
mov
ds
dec
push
add
inc
cmp
mov
testl
or
or
or
or
or
or
or
rol
xchg
dec
cmp
les
dec
pop
pop
les
rol
xchg
xchg
dec
scas
shr
aam
les
orl
loopne
mov
dec
sbb
cmp
mov
inc
add
sar
shlb
and
sbb
rolb
xchg
lds
enter
fmuls
dec
xchg
aam
xchg
rorb
les
inc
cmp
mov
inc
add
shrl
ret
mov
dec
test
das
movl
mov
sub
stos
mov
cmp
mov
dec
ret
cmp
shrl
ret
mov
dec
mov
das
dec
mov
dec
test
movl
mov
lret
jb
dec
and
xor
dec
dec
push
aam
adc
rorb
xchg
dec
mov
dec
aam
nop
loopne
dec
xchg
lcall
add
push
rol
inc
pop
rorb
sub
pop
cmp
lret
jb
dec
mov
shlb
or
mov
lcall
rol
or
or
or
or
or
or
inc
mov
xchg
dec
cmp
les
dec
pop
pop
les
rol
xchg
xchg
dec
scas
int3
dec
mov
dec
mov
dec
mov
dec
and
dec
rorb
aam
add
push
inc
cmp
mov
inc
add
sar
shlb
mov
decl
les
sub
pop
cmp
inc
add
inc
pop
les
loopne
cmp
test
orb
sar
inc
rol
les
cmp
mov
inc
add
sar
shlb
add
sbb
test
inc
cmp
mov
inc
add
shrl
ret
mov
dec
mov
das
dec
mov
dec
xchg
rol
adc
shrl
add
jb
xor
inc
mov
ret
cmp
sar
shlb
xchg
sar
fmull
shlb
shlb
orl
xchg
dec
or
sbb
mov
dec
sub
dec
or
add
rolb
xchg
lds
inc
enter
mov
les
je
lahf
push
rol
inc
pop
rcrb
lahf
push
rol
and
incl
mov
inc
inc
pop
rorb
sub
sbb
int3
xor
rcrl
lahf
push
rol
xchg
dec
rorb
enter
dec
xchg
dec
mov
lcall
add
push
rol
or
or
or
or
or
rol
xchg
dec
cmp
les
dec
imul
fwait
je
cltd
push
rol
add
dec
cltd
int3
xchg
dec
mov
dec
and
dec
lret
aam
add
cmp
mov
inc
add
sar
shlb
add
sbb
inc
imul
loopne
dec
ret
cmp
shrl
ret
mov
dec
mov
das
dec
mov
dec
xchg
rol
adc
shrl
mov
sarb
lds
or
mov
sar
dec
rol
les
cmp
mov
inc
add
sar
shlb
add
sbb
test
inc
cmp
mov
inc
add
shrl
ret
mov
dec
mov
das
dec
mov
dec
xchg
rol
adc
shrl
add
jb
xor
inc
xchg
cmp
cmp
inc
cmp
mov
inc
add
sar
shlb
xchg
sar
fmull
shlb
shlb
orl
xchg
dec
or
adc
cmp
mov
dec
sub
dec
or
sbb
cmp
mov
add
enter
mov
les
je
cltd
push
rol
and
incl
mov
inc
inc
pop
rorb
sub
sbb
cmp
jb
xor
rcrl
cltd
push
rol
add
enter
dec
adc
lahf
dec
mov
push
rol
or
or
or
or
xchg
inc
mov
xchg
dec
cmp
les
dec
pop
pop
les
push
rol
xchg
xchg
dec
scas
int3
dec
and
dec
add
mov
dec
xchg
enter
fmuls
dec
xchg
dec
add
push
dec
mov
faddl
cmp
sar
shlb
mov
decl
das
dec
les
inc
cmp
mov
inc
add
shrl
ret
mov
dec
mov
das
dec
mov
dec
xchg
rol
adc
shrl
mov
rorb
lret
dec
mov
dec
inc
aam
incb
test
les
cmp
cmp
shrl
ret
mov
dec
mov
das
dec
mov
dec
xchg
rol
adc
shrl
loopne
jl
lds
dec
add
dec
rol
les
cmp
mov
inc
add
sar
shlb
xchg
sar
fdivl
cmp
mov
inc
add
shrl
ret
mov
dec
mov
das
dec
mov
dec
test
movl
mov
lret
jb
xor
inc
les
cmp
inc
jns
les
aam
inc
rol
les
xchg
rorb
dec
xchg
in
dec
ret
cmp
sar
shlb
mov
decl
mov
inc
inc
pop
shlb
orl
xchg
dec
or
adc
cmp
mov
dec
xchg
call
sbb
add
rolb
xchg
lds
inc
enter
mov
les
je
lahf
popf
push
rol
inc
pop
rcrb
lahf
popf
push
rol
and
incl
mov
inc
inc
pop
rorb
sub
adc
cmp
jb
xor
fcompl
lahf
popf
push
rol
xchg
dec
lret
enter
dec
xchg
aam
or
sbbb
rol
or
or
or
or
or
or
or
les
pop
pop
les
dec
pop
pop
les
push
rol
xchg
xchg
dec
scas
int3
dec
mov
dec
and
dec
mov
xchg
enter
xchg
dec
mov
dec
and
dec
rorb
aam
add
push
inc
cmp
mov
inc
add
sar
shlb
mov
decl
dec
cmp
inc
cmp
mov
inc
add
shrl
ret
mov
dec
mov
das
dec
mov
dec
xchg
rol
adc
shrl
mov
rorb
lret
dec
mov
dec
inc
aam
dec
nop
loopne
lret
jb
inc
clc
aad
lret
inc
test
les
cmp
cmp
shrl
inc
mov
dec
mov
das
dec
mov
dec
test
movl
nop
loopne
jl
lds
dec
mov
dec
mov
les
cmp
mov
inc
add
sar
shlb
add
sbb
test
inc
cmp
mov
inc
add
shrl
ret
mov
dec
mov
das
dec
mov
dec
xchg
rol
adc
shrl
ror
int3
xor
inc
cmp
jns
les
fdivr
push
rol
les
mov
dec
and
mov
dec
ret
cmp
sar
shlb
xchg
sar
fmull
shlb
shlb
orl
xchg
dec
or
add
xlat
dec
sub
dec
or
pop
cmp
inc
add
rolb
xchg
lds
inc
enter
mov
les
je
lahf
popf
push
rol
inc
pop
rcrb
lahf
popf
push
rol
and
incl
mov
inc
inc
pop
rorb
sub
pop
cmp
lret
jb
xor
fcompl
lahf
popf
push
rol
xchg
dec
rorb
enter
dec
xchg
dec
mov
lcall
add
popf
push
rol
or
or
or
inc
sub
dec
and
dec
mov
enter
loopne
xchg
dec
mov
loopne
dec
mov
int3
inc
cmp
mov
inc
add
sar
mov
sub
mov
out
add
pop
or
or
or
or
int3
dec
nop
loopne
xchg
dec
cwtl
loopne
xchg
dec
mov
fcoml
testb
loopne
dec
mov
aam
and
dec
and
xchg
xchg
xchg
xchg
xchg
xchg
sub
adc
cmp
aaa
jl
mov
add
fmull
add
dec
rolb
fwait
lcall
or
or
or
or
or
loopne
dec
mov
rclb
dec
or
loope
les
and
adc
sub
dec
adc
push
sub
mov
inc
add
rcl
les
or
or
or
or
dec
mov
int3
inc
or
loopne
xchg
dec
mov
aam
add
fmuls
dec
aam
xchg
rorb
dec
xchg
int3
dec
xchg
int3
dec
xchg
enter
dec
xchg
aam
xchg
aam
inc
add
inc
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
testl
dec
and
dec
ret
dec
and
dec
add
add
sarb
les
add
in
dec
mov
faddl
and
incl
inc
add
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
add
loopne
mov
les
aam
or
xchg
xchg
dec
test
enter
cmp
rolb
rol
dec
ret
dec
dec
mov
les
mov
out
adc
es
adc
or
add
rorl
dec
push
mov
out
push
push
mov
out
adc
xchg
rorb
push
mov
les
add
les
loopne
inc
add
push
incl
mov
out
xchg
rorb
pop
sub
clc
or
enter
int3
dec
or
test
les
int3
dec
out
dec
or
lcall
or
or
cmp
test
xchg
insl
in
les
shl
sub
cmp
cmp
je
lahf
pop
loope
aam
les
sbb
add
sbb
enter
dec
sbb
jecxz
cmp
dec
pushf
int3
je
lahf
pop
xchg
dec
xor
add
mov
mov
lret
mov
les
mov
les
dec
sbb
ret
out
push
inc
cmp
mov
out
xchg
rorb
sub
clc
or
lret
mov
movl
fwait
dec
or
mov
dec
xchg
rorb
jb
loopne
dec
dec
into
rol
les
int3
dec
mov
enter
lcall
dec
mov
int3
dec
mov
enter
lcall
sub
cmp
cmp
test
les
les
lret
jb
loopne
dec
int
dec
aad
dec
mov
lcall
int3
dec
mov
lcall
scas
fsubrs
movsl
add
inc
add
lock
mov
rorb
int3
dec
int3
dec
mov
enter
dec
mov
aam
xchg
rorb
xchg
enter
dec
xchg
aam
int3
dec
nop
loopne
dec
mov
dec
xchg
faddl
test
les
rol
or
or
or
or
or
or
loopne
inc
mov
dec
xor
xchg
dec
cvttps2pi
cmp
cmp
xchg
sub
lahf
add
inc
mov
mov
fwait
lcall
or
or
or
or
or
add
inc
add
ret
les
rolb
ret
les
int3
inc
or
les
test
lds
test
les
or
or
or
or
or
enter
xchg
mov
cmp
das
jmp
movsl
mov
inc
sub
das
out
cmpb
lret
jp
inc
sub
das
xlat
clc
std
mov
int3
lret
jp
inc
sub
das
movl
fdivr
add
dec
cwtl
loopne
decl
mov
inc
add
cmpsb
incl
mov
rorb
inc
cmp
cmp
cmp
das
lock
cmp
jp
inc
sub
cmp
cmp
jp
inc
sub
cmp
cmp
jp
inc
sub
or
roll
mov
xchg
add
mov
fwait
lcall
lcall
or
or
or
or
loopne
dec
mov
int3
incl
loopne
xchg
dec
testb
add
incl
or
dec
and
dec
nop
loopne
out
push
add
mov
aam
enter
out
xor
xchg
xchg
xchg
xchg
sub
popf
add
dec
add
loopne
inc
sub
xchg
xchg
dec
cmp
rolb
enter
jp
les
add
int3
call
mov
dec
lret
dec
mov
dec
add
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
add
push
rol
or
or
or
or
add
inc
add
ret
les
rolb
ret
les
int3
inc
or
les
test
lds
test
les
or
or
or
or
or
add
inc
add
ret
les
rolb
ret
les
int3
inc
or
les
test
les
or
or
or
or
or
dec
and
inc
add
ret
loopne
mov
sub
movsb
and
incl
cmp
dec
mov
int3
sub
adc
cmp
adc
or
or
or
or
or
or
dec
and
dec
mov
int3
incl
loopne
xchg
mov
hlt
inc
add
incl
dec
and
dec
nop
loopne
incl
mov
dec
mov
enter
dec
hlt
dec
mov
dec
mov
inc
add
incl
mov
lcall
or
or
or
or
loopne
inc
or
loopne
dec
and
xchg
inc
add
into
dec
testb
mov
dec
mov
lea
int3
inc
or
or
or
or
or
loopne
inc
or
loopne
xchg
dec
mov
aam
add
enter
dec
aam
jb
lds
lea
movb
sub
pop
or
or
or
ret
gs
les
aam
add
addr16
les
loopne
xchg
inc
add
rol
les
cmp
cmp
loopne
add
cmp
inc
xor
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
mov
int3
mov
les
push
int3
les
or
or
or
or
or
or
xchg
xchg
dec
xor
mov
dec
lcall
cmp
mov
inc
add
sar
mov
sub
lcall
jnp
les
clc
dec
les
mov
dec
test
das
testl
sarl
les
cmp
xor
incl
adcb
push
rol
imul
cmp
mov
inc
add
xchg
mov
imul
fwait
mov
shll
stc
les
jl
and
mov
fwait
lcall
or
or
or
or
or
dec
sbb
lcall
cld
xchg
dec
mov
mov
inc
add
sar
mov
sub
lcall
test
out
sbb
sbb
ret
fwait
lcall
sbb
dec
or
cmp
dec
mov
dec
xchg
sbbb
or
or
or
or
or
or
dec
inc
pop
les
int3
inc
push
mov
xchg
dec
mov
dec
rcrb
inc
pop
les
rol
or
or
or
or
or
or
or
add
loopne
dec
shl
dec
and
xchg
dec
nop
loopne
inc
add
loopne
xchg
xchg
xchg
sub
and
cmp
fadds
enter
or
xchg
dec
mov
aam
nop
loopne
add
loopne
dec
shl
dec
and
xchg
dec
mov
rclb
xchg
xchg
xchg
sub
and
cmp
fadds
or
or
or
ret
gs
les
gs
testl
shlb
les
and
les
loopne
dec
and
xchg
inc
sub
dec
add
dec
nop
loopne
dec
xchg
rorb
cld
jp
les
loopne
dec
mov
mov
inc
add
dec
or
add
hlt
xchg
sub
xor
cmp
aam
mov
enter
call
les
mov
dec
xchg
rolb
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
add
loopne
mov
les
rolb
or
xchg
dec
and
dec
nop
loopne
xchg
dec
mov
enter
xchg
dec
aam
or
and
les
stc
add
or
or
or
xchg
dec
xor
loopne
and
inc
cmp
mov
dec
orb
hlt
xchg
xchg
dec
mov
sub
cmp
mov
dec
xchg
mov
jb
xchg
dec
or
cmp
cmp
lds
or
or
or
or
or
xchg
dec
and
dec
nop
loopne
xchg
dec
mov
enter
aad
or
and
les
stc
add
or
or
or
or
dec
and
dec
nop
loopne
xchg
dec
mov
enter
sub
cmp
aam
enter
or
or
loopne
inc
mov
shlb
das
movl
loopne
xchg
dec
test
xchg
scas
les
cmp
testl
int3
les
or
or
or
or
or
or
or
dec
mov
inc
mov
loopne
mov
dec
and
dec
mov
xchg
dec
pushf
rclb
fmull
rolb
mov
dec
xchg
les
dec
adc
in
add
add
aas
mov
dec
cmova
dec
adc
dec
adc
xchg
xchg
sub
jmp
enter
iret
aas
mov
aas
lret
push
add
add
rorl
das
ret
loopne
dec
repnz
mov
dec
and
fwait
cltd
lahf
lcall
or
dec
xchg
fmull
rolb
xchg
xchg
dec
test
aam
dec
push
mov
xchg
dec
mov
les
enter
rorl
das
aam
mov
cmp
sbb
les
les
ffree
mov
dec
test
dec
test
das
dec
movb
mov
dec
mov
dec
mov
enter
adc
les
dec
test
inc
mov
dec
and
dec
int
cltd
dec
pushf
rorb
mov
dec
xchg
enter
les
or
or
dec
mov
int3
dec
nop
loopne
xchg
dec
mov
int3
dec
add
mov
add
dec
cmp
push
out
add
xor
dec
mov
dec
clc
into
dec
mov
sar
mov
fwait
lcall
dec
int
dec
mov
int3
dec
ret
rclb
cmp
add
mov
enter
loopne
xchg
xchg
xchg
xchg
sub
add
cmp
rolb
mov
fwait
jl
les
testl
or
or
or
xchg
dec
xor
mov
dec
or
sub
xchg
add
testl
les
fmull
lcall
or
or
or
mov
dec
add
sub
xchg
add
testl
les
rorb
lcall
or
or
or
ret
gs
les
cmp
aam
add
loopne
xchg
xchg
xchg
xchg
gs
testl
mov
les
loopne
les
loopne
les
loopne
xchg
dec
mov
fcoml
xchg
dec
or
and
movsl
add
les
cmp
negl
dec
and
dec
pop
loopne
les
lds
test
mov
dec
mov
cld
out
push
xchg
dec
and
xchg
xchg
xchg
dec
mov
lock
repz
inc
add
fiaddl
loopne
aam
cltd
les
in
xchg
sub
xchg
add
testl
xchg
dec
mov
fcoms
xchg
dec
or
and
test
loope
push
cmp
cmp
loopne
xchg
dec
mov
in
dec
nop
loopne
xchg
dec
or
inc
loopne
lds
and
incl
and
les
mov
loopne
movb
mov
cwtl
loopne
mov
int
popf
pushf
mov
loopne
aam
mov
in
mov
dec
mov
in
lcall
sub
pushf
mov
loopne
aam
and
mov
dec
and
dec
enter
fdivl
mov
lret
dec
rol
lcall
mov
sub
pushf
mov
loopne
aam
and
mov
dec
and
dec
rcr
dec
nop
loopne
inc
pop
lret
inc
dec
les
loopne
dec
and
xchg
xchg
sub
and
cmp
loopne
xchg
xchg
dec
cmp
pop
and
cmp
aam
add
cwtl
xchg
xchg
sub
and
cmp
dec
and
xchg
xchg
sub
and
cmp
aam
add
in
mov
dec
mov
cwtl
add
inc
lds
cmp
cmp
loopne
add
inc
les
cmp
cmp
loopne
add
inc
les
cmp
cmp
mov
les
dec
mov
loopne
mov
mov
xchg
loopne
dec
cltd
les
inc
loopne
lds
cmp
cmp
loopne
add
inc
les
mov
loopne
inc
loopne
les
cmp
cmp
cmp
cmp
les
mov
aam
add
nop
loopne
xchg
sub
mov
les
shl
inc
mov
lret
les
and
les
loopne
dec
mov
mov
leave
dec
and
xchg
sub
mov
les
rolb
clc
aam
and
les
loopne
dec
mov
pushf
mov
dec
mov
in
xchg
sub
mov
les
sarb
les
loopne
mov
les
dec
mov
mov
mov
les
mov
or
or
or
or
or
loopne
inc
sub
inc
or
loopne
decl
int
mov
and
xchg
dec
mov
fdivr
mov
ror
inc
cmpsb
xchg
dec
cmp
add
shrl
xchg
add
mov
mov
mov
inc
cmp
ret
das
sub
add
mov
mov
sub
xchg
inc
sub
xchg
dec
cmp
mov
mov
sub
xchg
mov
in
inc
aad
les
mov
sub
xchg
add
mov
mov
sub
xchg
mov
rolb
mov
sub
xchg
add
mov
mov
mov
inc
cmp
into
dec
ret
das
pop
dec
ret
das
sub
add
mov
mov
sub
xchg
lcall
jbe
add
pushf
aam
shrl
xchg
incl
lret
inc
data16
les
mov
sub
xchg
add
mov
mov
sub
xchg
mov
rolb
mov
sub
xchg
add
mov
mov
mov
inc
cmp
lret
das
imul
or
das
and
add
mov
mov
sub
xchg
cmp
add
pushf
aam
shrl
sbb
dec
iret
dec
ret
sar
mov
dec
xchg
les
dec
aam
mov
inc
cmp
add
mov
mov
sub
xchg
aaa
sub
dec
ret
das
jge
ret
das
and
add
pop
or
or
or
or
or
or
or
dec
mov
int3
dec
nop
loopne
dec
add
movl
xchg
dec
cmp
add
add
adc
mov
sub
lret
mov
fwait
lcall
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
inc
mov
dec
and
sub
mov
les
shl
add
les
hlt
dec
lcall
enter
xchg
sub
mov
les
rolb
fmul
les
rorb
dec
mov
aam
dec
leave
les
aam
or
or
or
or
or
dec
mov
inc
mov
loopne
mov
dec
and
dec
mov
xchg
dec
pushf
rclb
fmull
rolb
mov
dec
xchg
les
dec
adc
in
add
add
aas
mov
dec
cmova
dec
adc
dec
adc
xchg
xchg
sub
loop
cmp
enter
iret
aas
mov
aas
lret
push
add
add
rorl
das
ret
loopne
dec
repnz
mov
dec
and
fwait
cltd
lahf
lcall
or
xchg
dec
cwtl
loopne
xchg
dec
mov
add
mov
rclb
les
dec
mov
fmull
pop
out
push
dec
xor
adc
rorb
xchg
xchg
xchg
sub
cmp
aam
add
leave
inc
or
cwtl
aaa
int3
cmp
inc
cmp
dec
pop
lahf
pop
inc
sub
xchg
xchg
dec
xor
dec
mov
or
mov
ds
dec
push
add
inc
cmp
mov
aas
mov
sub
xchg
repnz
sbb
loopne
inc
xor
add
add
mov
xor
ret
das
sub
xor
mov
setbe
les
loopne
dec
mov
aas
mov
sub
xchg
lret
loopne
dec
cwtl
loopne
dec
and
dec
mov
enter
rcrb
rcrb
les
or
or
xchg
dec
mov
aam
dec
mov
loopne
les
loopne
xchg
dec
and
xchg
inc
add
xchg
sub
sub
cmp
jb
add
dec
rorb
popf
push
enter
or
or
or
fs
ret
sub
insl
ret
sub
arpl
aam
mov
inc
or
dec
xchg
aam
push
inc
add
ret
add
les
ret
ret
mov
dec
adc
sub
mov
les
rolb
loopne
les
and
les
adc
dec
or
les
or
or
or
or
or
or
or
in
sub
or
or
or
or
add
jo
ret
test
push
test
test
aam
mov
or
or
or
inc
sub
les
or
or
or
or
or
ret
sub
insl
ret
sub
arpl
aam
mov
inc
or
dec
xchg
aam
push
inc
add
ret
add
les
ret
ret
mov
dec
adc
sub
mov
les
rolb
loopne
les
and
les
adc
dec
or
les
or
or
or
or
or
or
or
in
sub
or
or
or
or
add
sbb
aam
test
adc
aam
test
test
aam
mov
or
or
or
inc
sub
les
or
or
or
or
aam
dec
test
fcoms
fmull
rolb
xchg
dec
cmp
les
std
mov
mov
das
rorb
les
les
dec
lcall
and
inc
add
sar
mov
sub
xchg
aas
lahf
mov
dec
add
ret
loopne
das
aad
mov
dec
rorb
loopne
dec
nop
loopne
dec
mov
rorb
dec
and
dec
rcrb
rcrb
les
or
or
or
loopne
xchg
xchg
xchg
dec
xor
dec
mov
inc
cmp
mov
dec
int3
das
dec
or
adc
aam
rorb
dec
or
lcall
jecxz
cmp
mov
dec
les
loopne
xchg
out
adc
and
xchg
dec
nop
loopne
xchg
xchg
xchg
dec
or
lcall
loopne
std
mov
add
cmp
dec
adc
or
dec
test
fsubr
or
or
fmull
dec
cwtl
loopne
inc
or
ud0
shrl
cmp
dec
mov
out
or
or
loopne
lcall
mov
dec
sbb
cmp
mov
dec
xchg
shrb
dec
xchg
rorb
rolb
aam
rorl
das
dec
xchg
rclb
or
or
add
xchg
pop
xchg
sub
mov
les
aam
pop
mov
inc
sub
inc
and
les
shr
test
fadd
das
inc
cmp
mov
sub
popa
cmp
dec
sbb
add
xchg
xchg
dec
or
or
cmp
lret
inc
jbe
std
cwtl
loopne
mov
dec
sbb
mov
inc
cmp
mov
dec
aad
call
dec
stos
rolb
aam
lret
dec
add
fwait
add
les
lcall
rcrb
add
dec
adc
dec
int
adc
nop
loopne
dec
mov
rorb
loopne
xchg
xchg
dec
nop
loopne
out
add
pop
adc
add
inc
add
dec
sbb
cmp
mov
dec
mov
das
dec
mov
dec
nop
loopne
xchg
xchg
out
add
add
inc
add
inc
mov
shlb
add
in
les
lahf
push
aam
dec
add
shr
cltd
fwait
dec
add
or
or
or
or
or
xchg
dec
mov
mov
xchg
dec
mov
inc
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
xchg
sub
add
inc
add
lcall
or
or
or
xchg
dec
mov
aam
dec
mov
loopne
les
loopne
xchg
dec
and
xchg
inc
add
xchg
sub
sub
cmp
fmull
xor
les
or
or
or
or
or
rclb
dec
xchg
dec
test
add
mov
xchg
push
dec
mov
dec
jmp
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
xchg
sub
add
inc
add
dec
cmp
scas
shlb
lahf
pop
or
or
or
or
scas
shrb
pop
les
rolb
ret
loopne
dec
int3
dec
mov
inc
or
loopne
dec
aad
mov
inc
or
mov
aam
rorb
dec
xchg
rorb
inc
push
mov
xchg
inc
push
sarb
les
add
int3
dec
xchg
int3
lcall
or
or
or
or
or
dec
and
dec
nop
loopne
out
push
xchg
add
mov
inc
les
std
inc
add
enter
xchg
sub
add
fwait
dec
add
or
or
or
or
or
or
xchg
dec
mov
aam
dec
mov
loopne
les
loopne
xchg
dec
and
xchg
inc
add
xchg
sub
sub
cmp
fmull
mov
lcall
or
or
or
or
scas
cmp
gs
les
testl
shlb
jl
les
adc
int3
aam
jmp
int3
aam
add
hlt
push
ret
and
add
or
les
xchg
aam
jl
int3
aam
mov
add
jl
xchg
aam
mov
shlb
les
or
lods
je
ret
gs
les
xchg
gs
testl
mov
les
xor
sbb
mov
dec
or
mov
dec
andl
cmp
or
mov
sub
pop
les
int3
out
xor
sar
cmp
mov
scas
lds
jge
cmp
les
mov
dec
mov
mov
dec
xchg
add
cld
les
int3
das
aad
xchg
add
cld
les
int3
das
sarl
les
cmpl
inc
cmp
mov
inc
add
sar
aam
int3
sub
pop
les
int3
dec
mov
std
mov
lret
inc
insb
les
cmp
int3
sub
pop
les
int3
std
mov
mov
dec
mov
das
dec
mov
dec
xchg
rol
adc
shrl
or
scas
lds
sub
pop
cmp
dec
or
out
inc
add
int3
sub
pop
les
int3
std
mov
mov
dec
mov
das
dec
mov
dec
xchg
rol
adc
int3
sub
mov
les
int3
cmp
cmp
dec
mov
inc
mov
dec
add
sub
xchg
les
shrb
les
adc
les
les
cltd
mov
mov
les
and
or
or
or
or
or
or
or
loopne
dec
xor
les
mov
dec
and
std
or
sar
aam
int
mov
and
dec
cwtl
loopne
dec
lret
dec
add
lcall
mov
sub
mov
les
loopne
dec
ret
dec
lret
mov
incl
mov
les
sar
mov
dec
xchg
aam
xchg
xchg
sub
daa
cmp
inc
add
dec
adc
add
les
or
or
or
inc
sub
xchg
xchg
xchg
dec
xor
std
stos
enter
int
mov
mov
ds
ret
xchg
xchg
dec
and
xchg
dec
or
lcall
or
jo
ret
sub
insl
ret
cmp
arpl
aam
mov
cmp
xor
int
sub
xchg
les
rorb
push
rol
or
or
or
or
or
or
or
xor
cmp
and
lds
xchg
les
rorb
push
rol
or
int3
xchg
dec
xor
std
mov
scas
repnz
dec
sbb
loopne
inc
xor
add
mov
aam
xlat
inc
xor
ret
das
sub
xor
mov
mov
sub
mov
inc
pop
mov
sub
add
pushl
dec
add
dec
das
sub
dec
xor
add
int
sub
test
les
rorb
xchg
add
les
cmpb
mov
sub
test
les
rcrb
or
or
or
xchg
dec
xor
ret
sub
insl
ret
cmp
arpl
aam
shlb
cmp
xor
int
sub
test
les
rorb
push
rol
or
or
or
or
or
or
or
xor
cmp
and
lds
test
les
rorb
push
rol
or
lods
adc
ret
gs
les
enter
testl
mov
les
xor
xor
les
cmpl
sub
add
inc
add
inc
add
fnstsw
les
rorb
dec
mov
add
mov
ret
mov
das
testl
leave
les
and
xchg
int3
xchg
sub
cmp
shrb
sahf
or
int3
xchg
dec
xor
std
mov
jae
xchg
dec
sbb
loopne
inc
xor
add
mov
decl
mov
dec
repnz
ret
das
sub
xor
mov
mov
sub
add
dec
mov
inc
pop
mov
sub
add
testl
shrl
dec
add
dec
das
sub
dec
mov
clc
xchg
dec
mov
inc
xor
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
xchg
sub
test
les
rcrb
or
or
or
or
loopne
inc
sub
std
and
xchg
xchg
dec
sub
xchg
dec
add
les
aam
int3
dec
hlt
dec
mov
cld
das
ret
loopne
dec
xor
xor
mov
dec
int3
das
dec
or
or
mov
dec
les
rol
or
xor
add
dec
and
dec
mov
loopne
mov
loopne
dec
mov
aam
sbb
loopne
dec
xor
add
fadds
cmp
sar
mov
sub
add
dec
mov
loopne
out
aaa
dec
mov
aam
cmp
or
ja
cmp
lahf
inc
add
push
fadd
inc
cmp
or
mov
sub
add
out
mov
dec
or
ja
cmp
lahf
inc
add
push
fadd
inc
ds
int3
dec
hlt
dec
mov
aam
ret
loopne
dec
xor
xor
mov
dec
int3
das
dec
or
or
mov
dec
les
rol
adc
ss
sub
add
dec
and
dec
mov
loopne
mov
loopne
dec
mov
fmull
dec
nop
loopne
dec
xor
add
fadds
cmp
sar
mov
sub
add
in
dec
mov
loopne
aaa
dec
mov
faddl
mov
testl
mov
inc
or
mov
sub
add
aam
add
loopne
dec
mov
cld
out
push
xchg
xchg
xchg
xchg
dec
or
xor
cmp
lahf
inc
add
push
fadd
or
or
or
or
inc
sub
xchg
dec
test
fcoms
sub
sub
dec
mov
mov
sub
add
dec
lcall
add
sar
mov
sub
add
mov
inc
mov
in
rorl
das
movl
rclb
or
loopne
cmp
mov
enter
mov
dec
rorb
loopne
dec
nop
loopne
dec
mov
rorb
dec
and
dec
rcrb
rcrb
les
scas
cmp
gs
les
ret
aam
add
addr16
les
dec
mov
int3
scas
shrb
add
inc
add
rorb
testl
les
dec
cmp
dec
adc
sbb
les
dec
mov
enter
les
pop
or
or
or
inc
sub
dec
and
xchg
xchg
dec
mov
fmuls
dec
and
inc
add
leave
sub
add
dec
and
inc
add
rorb
testl
mov
mov
sub
add
dec
nop
loopne
dec
dec
and
pushl
mov
dec
rorb
dec
ret
rclb
enter
out
dec
xchg
rolb
xor
add
rorl
rorb
adc
mov
inc
push
cmp
add
ret
dec
xchg
int3
dec
or
push
xchg
sub
clc
add
cmp
loopne
dec
xlat
dec
mov
fcomps
aam
inc
add
push
enter
or
inc
sub
xchg
dec
test
fcoms
fmull
rolb
xchg
dec
cmp
les
std
mov
mov
dec
test
das
rorb
les
les
dec
lcall
and
inc
add
sar
mov
sub
xchg
aas
lahf
mov
dec
add
ret
loopne
das
aad
mov
dec
rorb
loopne
dec
nop
loopne
dec
mov
rorb
dec
and
dec
rcrb
rcrb
les
or
or
or
xchg
dec
mov
dec
or
mov
dec
nop
loopne
xchg
dec
fimuls
mov
rolb
xor
lcall
or
int3
dec
and
dec
mov
aam
xchg
dec
stc
movsb
xor
aam
les
loopne
xchg
dec
and
gs
xor
aam
xchg
dec
mov
fsubrs
sub
cmp
inc
add
pushl
mov
xchg
dec
mov
enter
cmp
inc
add
aam
add
sub
ret
add
add
pop
fwait
inc
or
lcall
xchg
dec
nop
loopne
add
loopne
dec
shl
dec
and
xchg
dec
nop
loopne
inc
add
loopne
xchg
xchg
xchg
sub
adc
fadds
enter
or
scas
cmp
gs
les
gs
testl
fsubs
les
loopne
scas
lods
je
int3
aam
mov
fmuls
loopne
dec
mov
fmull
loopne
sub
out
and
les
xor
cmp
fmul
les
rclb
sub
cmp
dec
mov
rolb
and
les
loopne
dec
out
add
loopne
mov
les
fadds
or
or
or
or
or
or
add
loopne
dec
shl
dec
and
xchg
dec
nop
loopne
inc
add
loopne
xchg
xchg
xchg
sub
adc
fadds
enter
or
inc
sub
xchg
dec
test
fcoms
sub
sub
cmp
dec
mov
mov
sub
test
les
xchg
dec
lcall
add
sar
mov
sub
test
aas
lahf
mov
inc
mov
in
rorl
das
movl
rclb
or
in
cmp
mov
enter
mov
dec
rorb
loopne
dec
nop
loopne
dec
mov
rorb
dec
and
dec
rcrb
rcrb
les
scas
cmp
gs
les
cmp
aam
add
addr16
les
ret
mov
enter
loopne
les
and
les
and
les
push
loopne
xchg
dec
mov
loopne
and
les
cmpsl
cmp
lods
mov
loopne
add
ret
xchg
xchg
or
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
in
sub
lods
cmp
add
les
mov
inc
add
das
idivl
add
aam
mov
dec
mov
inc
or
dec
xchg
enter
or
xor
mov
dec
mov
dec
xchg
aam
xchg
cld
add
fs
ret
sub
insl
ret
add
loopne
mov
les
aam
rol
or
or
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
in
sub
cmp
cmp
or
add
aam
sub
and
lds
ret
ret
les
ret
cmp
outsb
ret
cmp
in
xchg
xchg
sub
mov
int3
dec
add
loopne
mov
les
aam
rol
or
or
or
or
or
or
or
clc
sub
or
or
or
or
scas
cmp
gs
les
xchg
xchg
gs
testl
andb
negl
dec
cwtl
loopne
std
pop
in
lret
inc
sbb
les
loopne
dec
jne
rol
dec
and
xchg
dec
mov
fcoms
loopne
sub
sub
cmp
fmull
loopne
dec
repnz
nop
loopne
aas
mov
cmp
mov
fdivr
mov
loopne
xchg
sub
in
or
and
lret
les
loopne
dec
cwtl
loopne
dec
mov
dec
aad
pop
mov
out
or
hlt
sub
outsb
cmp
dec
and
dec
cwtl
loopne
add
les
fdivr
aas
mov
sub
cli
cmp
mov
mov
sub
cli
adc
mov
nop
scas
cmp
les
rclb
sub
pop
cmp
dec
and
inc
or
insb
lds
test
mov
dec
and
xchg
sub
repz
add
das
icebp
dec
sti
das
jbe
mov
pushf
sub
in
mov
nop
dec
or
sbb
les
rorb
dec
mov
pop
mov
out
or
int3
outsb
cmp
dec
add
loopne
mov
les
inc
add
push
int3
les
ret
gs
les
cmp
aam
add
addr16
les
ret
mov
enter
loopne
les
and
les
and
les
insl
cmp
dec
and
xchg
dec
mov
loopne
and
les
movsb
cmp
lods
les
loopne
xchg
add
ret
cmc
xchg
or
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
loopne
xchg
xchg
xchg
xchg
gs
testl
xchg
mov
les
loopne
dec
push
les
dec
ret
dec
nop
loopne
std
xchg
in
mov
dec
mov
movsb
dec
mov
dec
orb
fisttpll
xor
loopne
decl
dec
nop
loopne
dec
mov
fdivrl
rorb
out
addb
loopne
incl
dec
mov
sarb
faddl
loopne
aad
inc
cmp
ljmp
mov
lcall
int
ljmp
ret
scas
subb
loopne
sub
arpl
cmp
das
lret
inc
add
les
orb
movl
loopne
lret
les
loopne
add
add
xchg
xchg
dec
mov
loopne
mov
cmp
xchg
dec
mov
mov
and
lds
bound
cmp
loopne
aam
and
les
in
sub
icebp
add
scas
into
lods
enter
dec
mov
mov
jmp
cmp
dec
addb
add
les
loopne
add
add
xchg
xchg
dec
mov
loopne
shrl
scas
cmp
xchg
dec
mov
mov
and
sub
popa
cmp
inc
mov
and
les
in
sub
lock
add
scas
lods
int3
outsl
ret
mov
mov
add
cmp
xor
mov
dec
mov
movsb
xchg
xchg
dec
nop
loopne
xchg
dec
mov
in
sub
rol
les
loopne
add
ffreep
les
loopne
sub
fwait
cmp
inc
js
inc
aam
leave
dec
and
xchg
sub
lock
add
dec
mov
xchg
mov
les
dec
mov
cld
testl
les
mov
in
les
or
or
or
or
cmp
mov
inc
ds
rorb
dec
add
rorb
lds
mov
inc
ds
rorb
dec
add
add
mov
dec
ret
dec
add
or
sub
inc
les
faddl
aam
rorb
dec
sbb
mov
inc
cmp
ret
dec
add
pop
mov
inc
cmp
repnz
adc
add
sbb
shrl
mov
fmull
loopne
xchg
xchg
xchg
xchg
xchg
xchg
dec
or
aaa
cmp
fwait
lcall
or
or
or
or
ret
gs
les
les
cmp
aam
add
loopne
les
enter
testl
jo
les
les
loopne
negl
dec
cmp
ljmp
lret
inc
ret
les
les
inc
cld
inc
sub
lret
inc
and
les
int3
stc
aam
les
loopne
mov
aad
dec
cmp
cmp
fidivl
lret
inc
jno
les
sar
mov
dec
ret
std
pushf
in
mov
add
dec
ret
dec
pushf
call
hlt
dec
shll
xchg
rol
inc
push
scas
xchg
jp
les
mov
in
mov
cld
dec
cwtl
loopne
dec
cwtl
loopne
sub
popa
cmp
xchg
scas
dec
and
xchg
dec
mov
cwtl
add
or
mov
les
rol
les
loopne
add
js
sub
ffree
les
loopne
sub
cltd
cmp
inc
mov
inc
loopne
les
cmp
cmp
fcoms
les
rorb
hlt
dec
cwtl
loopne
dec
cwtl
loopne
sub
dec
mov
dec
mov
decl
lret
inc
cmp
les
mov
fdivl
je
aam
loopne
pusha
jno
aam
push
fadd
call
mov
dec
sar
mov
sub
std
test
lret
inc
or
les
sub
les
jae
les
int3
decl
lret
dec
push
or
out
add
lret
dec
pop
les
dec
aad
dec
cmp
pop
lret
dec
dec
les
std
pushf
in
mov
add
dec
lret
dec
popf
call
hlt
dec
ret
xor
mov
lods
outsl
ret
mov
cld
sub
push
cmp
xchg
scas
dec
mov
clc
xchg
dec
dec
loopne
les
loopne
les
xlat
dec
loopne
les
inc
loopne
lds
fadd
les
loopne
les
cwtl
cmp
inc
mov
inc
loopne
les
cmp
cmp
cld
xchg
sub
cmc
add
dec
test
inc
cmp
cmp
loopne
les
les
dec
dec
loopne
testl
les
push
rol
cmp
aam
jo
aam
jo
aam
mov
mov
mov
mov
mov
mov
mov
or
or
or
or
ret
gs
les
xchg
xchg
gs
testl
cld
mov
les
dec
inc
test
negl
incl
lret
inc
insl
les
loopne
dec
mov
mov
les
loopne
dec
cwtl
loopne
dec
cwtl
loopne
incl
xchg
xchg
dec
mov
loopne
imul
fcoms
add
rol
xchg
dec
or
loopne
sub
cmp
inc
mov
and
cmp
cmp
mov
dec
nop
loopne
xchg
sub
hlt
add
dec
stos
fmull
dec
mov
loopne
dec
cwtl
loopne
dec
cwtl
loopne
aas
mov
cmp
mov
fdivr
xor
shrb
repz
cmp
mov
mov
sub
repz
sub
jecxz
sti
das
sub
loopne
dec
mov
mov
cmp
shlb
mov
aam
testl
dec
leave
les
inc
add
push
int3
les
or
or
inc
sub
xchg
dec
cwtl
loopne
xchg
dec
xor
dec
mov
or
mov
sub
xor
cmp
cmp
shrl
repnz
dec
sub
loopne
inc
xor
add
clc
sbb
mov
xor
ret
das
sub
xor
mov
fs
sub
add
mov
dec
repnz
add
int3
push
rol
add
or
or
or
or
or
ret
gs
les
ret
aam
add
addr16
les
dec
mov
int3
add
les
sub
cmp
rclb
dec
lret
adc
les
ljmp
mov
enter
les
pop
or
or
or
or
or
or
or
or
ret
gs
les
ret
aam
add
addr16
les
dec
mov
int3
scas
shrb
add
inc
add
rorb
testl
les
push
cmp
dec
sbb
test
lds
fmull
rorb
dec
les
fmull
int3
add
les
dec
mov
enter
les
push
int3
les
or
or
or
or
or
or
or
scas
cmp
gs
les
xchg
xchg
gs
testl
pushf
mov
les
inc
mov
shll
xor
mov
fadds
and
lret
les
loopne
add
iret
cmp
dec
and
xchg
dec
mov
lock
mov
mov
cmp
mov
lock
add
ret
pop
add
dec
nop
loopne
dec
sbb
mov
mov
les
dec
adc
dec
sbb
lds
aam
lods
rorb
dec
in
dec
mov
dec
lods
int3
das
out
mov
leave
dec
ljmp
dec
in
das
lret
int3
dec
sbb
mov
mov
dec
lods
int3
dec
xchg
rolb
dec
add
sub
les
loopne
les
dec
xchg
sar
mov
dec
xchg
int3
inc
mov
dec
popf
fmull
dec
aam
mov
add
dec
mov
sub
pushl
xor
xor
cmp
rorb
mov
dec
xchg
rolb
fadd
dec
add
mov
xchg
dec
or
jnp
cmp
mov
fadd
mov
dec
popf
fmull
dec
aam
mov
add
dec
mov
das
cltd
push
mov
dec
xor
jp,pt
cmp
rorb
mov
dec
xchg
rolb
fadd
dec
add
test
dec
mov
dec
aad
xchg
int3
dec
aad
mov
dec
xchg
dec
xchg
rorb
dec
xchg
fdivr
xchg
mov
dec
mov
das
lret
sar
mov
dec
into
das
dec
mov
dec
lds
rorb
inc
mov
ror
fistpll
cmp
dec
xchg
fmull
rorb
and
dec
lret
dec
lods
rorb
mov
pushf
mov
les
inc
add
dec
sub
ret
gs
les
xchg
gs
testl
mov
les
xor
xor
push
mov
testl
cmp
dec
or
mov
inc
gs
dec
lcall
cmp
jle
cmp
sti
out
adc
adc
cmp
dec
sar
decl
lret
inc
push
les
adc
cmp
out
sbb
sbb
sub
les
sub
rol
dec
mov
decl
mov
dec
xchg
sub
scas
les
cmp
enter
dec
sbb
or
or
aam
cmpl
sub
and
cmp
rclb
sub
sub
cmp
enter
aam
xchg
dec
or
or
xchg
aam
adc
ds
inc
add
int
sub
out
add
dec
subl
sarb
mov
dec
xchg
aam
lcall
leave
les
and
adc
add
scas
les
or
add
mov
dec
xchg
rorb
dec
mov
dec
enter
les
rol
or
xchg
xchg
dec
or
and
cmp
aam
or
mov
dec
xchg
aam
cmp
xchg
xchg
dec
or
sub
cmp
rol
adc
mov
dec
xchg
aam
out
xor
or
adc
cmp
enter
mov
les
and
mov
dec
aad
sarb
les
xchg
xchg
dec
or
aam
adc
cmp
or
adc
cmp
enter
dec
mov
xchg
adc
xchg
sub
or
cmp
fmull
xor
les
and
or
or
or
or
or
or
or
ret
gs
les
enter
testl
mov
les
fmull
loopne
jp
xchg
xchg
shr
xor
ss
scas
aam
fsubrl
ret
mov
aam
and
lret
les
and
les
and
les
pop
cmp
dec
and
xchg
dec
mov
in
add
les
xchg
cmp
lods
les
loopne
xchg
add
ret
mov
push
dec
test
dec
mov
mov
les
push
rol
cmp
gs
les
xchg
xchg
gs
testl
cwtl
mov
les
dec
and
inc
mov
scas
fcomip
xor
mov
in
and
lret
les
loopne
add
sahf
pop
cmp
dec
and
xchg
dec
mov
cld
dec
mov
lods
sub
xchg
cmp
lods
mov
cld
xchg
add
ret
and
dec
mov
mov
cwtl
loopne
sub
pusha
cmp
dec
iret
inc
mov
dec
mov
xchg
int3
inc
mov
dec
cmp
loopne
dec
mov
incl
mov
inc
mov
shlb
sbb
rorl
das
iret
std
fidivl
dec
mov
dec
incl
inc
mov
dec
add
int
sub
cmp
inc
add
dec
dec
cltd
fmull
loopne
std
int3
mov
inc
mov
dec
add
int3
das
scas
xchg
sub
cmp
inc
add
dec
xchg
das
cwtl
dec
test
dec
iret
dec
int3
incl
xor
fldl
les
shlb
cli
dec
int3
dec
into
dec
xchg
int3
dec
xchg
dec
mov
std
popf
shlb
lret
sar
mov
dec
lds
dec
test
dec
pop
dec
mov
dec
faddl
fdivr
add
dec
aam
fmull
nop
loopne
ja
cld
sahf
fmul
inc
cmp
les
fdivr
mov
les
ret
cld
fmul
inc
sbb
les
cmp
mov
mov
dec
pushf
fcoml
fadd
sub
jge
cmp
int3
inc
mov
dec
int3
cld
popf
fdivl
cld
sahf
fdivl
cld
popf
fdivl
sahf
fcoml
les
jge
cmp
int3
dec
mov
dec
mov
dec
lcall
or
sub
jge
cmp
mov
mov
dec
pushf
fcoml
fadd
sub
jge
cmp
inc
mov
dec
mov
cld
popf
fdivl
sahf
fdivl
les
fmull
dec
mov
mov
cmp
cmp
cmc
dec
int3
cld
popf
fdivl
dec
sahf
fcoml
les
jge
cmp
dec
mov
dec
mov
dec
lcall
dec
sahf
fsubrl
jge
cmp
dec
and
xchg
sub
jecxz
les
fadds
rolb
rorb
test
mov
mov
xchg
les
dec
mov
dec
mov
cwtl
mov
les
inc
add
or
or
or
scas
cmp
gs
les
ret
aam
add
addr16
les
dec
mov
int3
scas
shrb
add
inc
add
rorb
testl
les
or
cmp
faddl
test
lds
fmull
rorb
dec
les
fmull
int3
add
les
dec
mov
enter
les
push
int3
les
or
or
or
or
or
or
or
scas
cmp
gs
les
ret
aam
add
addr16
les
dec
mov
int3
scas
shrb
add
inc
add
rorb
testl
les
or
cmp
faddl
test
dec
test
dec
sbb
les
fmull
int3
add
les
dec
mov
enter
les
push
int3
les
or
or
or
or
or
or
or
xchg
dec
sub
ret
gs
les
xchg
gs
testl
mov
les
xor
xor
push
mov
testl
cmp
or
cltd
aam
pop
lret
inc
add
les
aam
add
push
adc
cmp
mov
sub
sub
cmp
fdivr
push
lret
inc
sbb
les
adc
cmp
mov
add
les
sub
rol
dec
mov
decl
mov
dec
xchg
sub
scas
les
cmp
enter
les
sub
dec
xchg
rclb
xchg
dec
adc
xchg
add
les
jg
cmp
rolb
in
xchg
xchg
dec
or
sbb
cmp
aam
adc
xchg
dec
xchg
rclb
enter
call
or
mov
out
or
cmp
sbb
xchg
sub
loopne
les
rorb
dec
xchg
sub
xchg
dec
rcrb
aam
or
mov
mov
les
and
adc
add
scas
les
or
adc
mov
mov
dec
aad
lds
dec
enter
aam
or
xchg
xchg
dec
or
sub
sub
aam
or
mov
dec
xchg
rclb
xchg
xchg
dec
or
cmpl
sub
sbb
cmp
aam
adc
mov
dec
xchg
rclb
enter
sub
cmp
inc
add
dec
mov
mov
les
and
adc
lds
fists
xchg
dec
mov
xchg
dec
or
dec
adc
cmp
or
adc
cmp
enter
dec
mov
xchg
adc
xchg
sub
push
cmp
inc
add
dec
mov
mov
les
and
or
or
or
or
or
xchg
dec
sub
ret
gs
les
xchg
gs
testl
mov
les
xor
xor
push
mov
testl
cmp
dec
or
cltd
aam
pop
lret
inc
adc
mov
push
add
cmp
fucomi
adc
pop
mov
sub
sub
cmp
fdivr
push
lret
inc
sbb
les
adc
cmp
out
cmp
cmp
sub
les
sub
rol
dec
mov
decl
mov
dec
xchg
sub
scas
les
cmp
enter
les
sub
dec
xchg
rclb
xchg
dec
adc
xchg
add
les
jl
cmp
rolb
in
xchg
xchg
dec
or
pop
cmp
dec
mov
add
rclb
xchg
xchg
dec
or
jl
cmp
enter
out
or
cmp
sbb
xchg
sub
out
les
rorb
dec
xchg
sub
adc
rcrb
aam
or
mov
mov
les
and
adc
add
scas
les
or
add
mov
dec
mov
dec
aad
rorb
dec
enter
les
rol
or
xchg
xchg
dec
or
and
and
cmp
aam
or
mov
dec
xchg
and
sbb
add
les
push
cmp
dec
adc
mov
dec
xchg
and
enter
pop
or
cmp
enter
mov
les
and
adc
rorb
les
xchg
dec
mov
xchg
dec
or
sub
adc
cmp
or
or
cmp
enter
dec
mov
xchg
adc
xchg
sub
or
cmp
fmull
xor
les
and
or
or
or
or
or
or
or
loopne
dec
nop
loopne
xchg
dec
xor
dec
ret
loopne
dec
mov
dec
xchg
int3
dec
int3
dec
mov
scas
cmp
aam
add
scas
les
test
lret
les
test
les
stos
inc
cmp
dec
nop
loopne
dec
xchg
call
dec
add
or
or
or
or
or
or
dec
and
dec
nop
loopne
xchg
dec
test
rclb
mov
shrb
dec
mov
xchg
int3
scas
les
sbb
les
adc
les
rol
inc
cmp
dec
sbb
dec
sbb
dec
mov
add
lcall
or
or
or
or
ret
gs
les
cmp
aam
add
loopne
xchg
xchg
xchg
xchg
gs
testl
lods
mov
les
loopne
dec
mov
loopne
les
testl
les
loopne
incl
les
and
lret
les
loopne
dec
mov
loopne
aas
mov
dec
pop
out
add
sub
push
cmp
dec
mov
in
dec
nop
loopne
inc
add
dec
or
and
les
and
cmp
loopne
aam
and
les
loopne
sub
fcmovnb
les
rorb
dec
add
add
les
and
les
and
les
loopne
inc
sub
shrl
loopne
call
inc
sub
and
incl
pop
loop
les
loopne
scas
cmp
in
scas
les
sbb
les
adc
les
les
inc
cmp
sub
dec
test
or
lret
les
loopne
add
aas
mov
dec
pxor
xchg
xchg
dec
mov
xchg
sub
push
cmp
dec
nop
loopne
dec
mov
in
and
mov
les
aad
les
dec
mov
nop
add
test
cmp
inc
mov
and
mov
dec
nop
loopne
xchg
sub
fcmovb
les
rorb
cwtl
inc
sub
inc
imul
loopne
dec
mov
mov
inc
ds
rorb
mov
in
inc
pop
mov
dec
add
rorb
mov
pop
mov
dec
add
rorb
mov
add
sbb
leave
sub
loope
les
loopne
dec
mov
mov
loopne
inc
ds
xchg
dec
cmp
dec
add
rorb
mov
add
ds
rorb
mov
loopne
movl
les
loopne
xchg
xchg
xchg
dec
and
xchg
add
les
adc
les
les
sbb
dec
mov
out
sbb
lcall
mov
dec
fildl
sbb
les
rolb
rol
les
ret
std
stos
fdivl
xchg
xchg
dec
or
pop
cmp
jge
std
mov
mov
dec
ret
das
dec
add
stos
sar
mov
mov
dec
sti
add
loopne
mov
dec
nop
loopne
xchg
das
fiaddl
sbb
les
adc
les
add
inc
mov
leave
dec
and
xchg
sub
fld
les
rorb
mov
lods
mov
les
dec
mov
xchg
testl
les
movsb
push
enter
xchg
dec
sub
ret
gs
les
xchg
gs
testl
mov
les
xor
xor
or
sub
fisttpll
shr
adc
mov
dec
push
add
dec
subl
cmp
inc
repnz
dec
lcall
mov
cs
add
jge
or
enter
or
cmp
dec
mov
movl
aaa
les
adc
or
out
push
lcall
sub
les
sub
rol
dec
mov
decl
rorl
dec
or
les
cmp
enter
les
sub
dec
xchg
rclb
xchg
dec
adc
xchg
add
les
imul
inc
add
xchg
xchg
xchg
dec
or
adc
aam
adc
xchg
dec
xchg
rclb
enter
pop
imul
dec
mov
out
mov
sub
push
add
inc
add
cmp
xchg
sub
fadd
les
rorb
dec
rolb
aam
enter
jnp
mov
dec
enter
aam
or
mov
mov
les
and
xchg
aam
sub
fadd
les
shrb
icebp
mov
dec
pop
out
adc
mov
dec
push
add
incl
dec
adc
les
dec
xchg
adc
rorb
dec
xchg
int3
dec
xchg
sbb
enter
dec
andl
add
add
adc
xchg
dec
or
and
roll
cmp
dec
lcall
pxor
mov
ds
dec
push
add
out
cmp
xchg
dec
or
cmpl
sub
adc
cmp
rol
adc
mov
dec
xchg
enter
xchg
out
xor
xchg
sub
push
cmp
inc
add
dec
mov
mov
les
and
int3
dec
xchg
rorb
dec
mov
dec
xchg
sbb
xchg
enter
dec
clc
jnp
andl
cmp
out
add
dec
or
and
adc
cmp
rorb
enter
dec
adc
add
cmp
adc
xchg
xchg
sub
push
cmp
inc
add
dec
mov
mov
les
and
or
or
or
or
dec
and
xchg
xchg
dec
xor
cmp
cmp
arpl
aam
ret
ret
sub
insl
ret
cmp
outsb
ret
add
or
ret
gs
les
cmp
aam
add
addr16
les
scas
test
xor
add
dec
mov
enter
and
pushl
jecxz
addl
dec
or
and
cmp
clc
add
test
aam
ret
ret
sub
insl
ret
les
outsb
ret
mov
aam
dec
leave
les
aam
or
or
or
or
inc
sub
mov
shrb
cmp
lods
cld
movsb
ret
aam
and
xchg
add
ret
and
push
and
cmp
aam
imul
les
or
or
or
or
xchg
dec
xor
add
int
sub
ffree
les
rorb
xchg
add
les
adc
les
sbb
les
ffree
les
rcrb
or
or
or
xchg
dec
and
xchg
dec
mov
enter
xchg
dec
or
loopne
sub
lea
cmp
sub
arpl
aam
mov
dec
mov
cmp
cmp
fwait
add
fs
ret
sub
insl
ret
add
or
or
or
or
or
or
xchg
dec
mov
enter
add
les
and
cmp
lcall
or
ret
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
in
sub
lea
cmp
ret
ret
and
les
mov
inc
add
das
idivl
add
aam
mov
dec
mov
inc
or
dec
xchg
enter
or
xor
mov
dec
mov
dec
xchg
aam
xchg
cld
add
or
ret
sub
insl
ret
add
loopne
mov
les
aam
rol
or
or
or
xchg
dec
and
dec
int
dec
mov
enter
and
les
and
cmp
lcall
or
or
or
or
or
or
xchg
xchg
dec
mov
sub
testl
cmp
rolb
test
lret
les
loopne
xchg
sub
mov
loopne
xchg
xchg
dec
or
and
push
enter
and
xchg
dec
mov
enter
xchg
dec
or
loopne
sub
mov
cmp
sub
arpl
aam
mov
dec
mov
cmp
cmp
fwait
add
or
ret
sub
insl
ret
add
or
or
or
or
or
or
ret
gs
les
cmp
aam
add
loopne
xchg
xchg
xchg
gs
testl
lock
les
loopne
dec
xor
fcoms
xchg
sub
cmp
cmp
loopne
xchg
inc
sub
dec
or
add
mov
dec
test
add
les
test
dec
and
xchg
sub
mov
dec
or
and
cmp
loopne
aam
leave
dec
mov
fcoml
les
rorb
lock
les
mov
in
or
rol
les
hlt
push
int3
les
or
or
or
or
or
or
or
ret
gs
les
xchg
xchg
gs
testl
hlt
mov
les
dec
ret
dec
dec
mov
out
dec
mov
les
loopne
roll
movsb
mov
dec
xchg
mov
mov
cmp
cmp
std
fdivrl
test
insb
mov
insl
lds
ret
mov
fsubrl
mov
cmp
mov
xchg
orb
rclb
or
and
les
cmp
cmp
loopne
add
cmp
sub
pop
cmp
testb
cmpl
insl
cmp
cmp
mov
dec
or
adc
cmp
fdivrl
mov
aam
adc
or
mov
xor
mov
inc
add
dec
adc
ret
dec
dec
mov
les
mov
out
sub
and
sub
ret
dec
dec
mov
out
dec
mov
les
mov
out
push
dec
mov
int3
dec
mov
out
mov
xor
mov
je
dec
mov
hlt
mov
les
inc
add
push
rol
or
or
ret
gs
les
xchg
xchg
gs
testl
mov
les
loopne
les
loopne
idivl
dec
mov
dec
dec
loopne
les
rolb
fmul
les
rorb
loopne
dec
mov
clc
add
mov
js
inc
les
and
les
lret
inc
mov
loopne
nop
adc
aam
xchg
dec
or
and
cmp
rol
mov
mov
sbb
les
mov
dec
add
lret
jb
cld
dec
pop
fadd
mov
out
mov
dec
add
dec
fdivr
dec
cwtl
loopne
cmp
shlb
inc
cmp
mov
shrb
ret
loopne
dec
cmp
mov
inc
cmp
add
incl
mov
inc
cmp
add
dec
mov
or
cmp
ffreep
les
cmp
aam
rorl
das
dec
add
rol
adc
ds
sub
ffreep
les
fmull
rorb
loopne
inc
cmp
mov
cmp
mov
inc
cmp
add
incl
mov
inc
cmp
add
adc
ds
sub
ffreep
les
cmp
aam
dec
test
movl
sub
ffreep
les
loopne
dec
mov
rol
push
xchg
xchg
dec
and
xchg
dec
cvttps2pi
jnp
cmp
dec
or
inc
loopne
les
mov
loopne
aam
inc
loopne
lret
inc
mov
les
loopne
xchg
sub
xlat
add
sub
xchg
xchg
dec
nop
loopne
xchg
dec
cvttps2pi
jp
cmp
or
inc
loopne
mov
les
mov
loopne
aam
inc
loopne
les
loopne
sub
xlat
add
lret
jp
lods
rol
scas
cmp
loopne
lret
les
loopne
add
movsl
inc
cmp
sub
xchg
xchg
dec
nop
loopne
xchg
dec
cvttps2pi
cmp
inc
loopne
mov
mov
loopne
aam
inc
loopne
les
adcb
add
inc
mov
loopne
lret
les
loopne
add
in
mov
out
faddp
les
mov
dec
add
dec
enter
lods
rol
mov
cmp
shlb
dec
or
inc
cmp
idivl
std
mov
and
lret
les
and
les
and
les
and
les
loopne
xchg
dec
or
inc
loopne
rol
les
mov
loopne
aam
leave
dec
and
xchg
sub
add
dec
add
loopne
mov
les
inc
add
aam
push
aam
pop
aam
adc
or
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
in
sub
cmp
cmp
or
add
aam
sub
and
lds
ret
ret
les
insl
ret
cmp
imul
dec
mov
xchg
xchg
sub
cli
cmp
inc
add
dec
add
loopne
mov
les
aam
rol
or
or
or
or
or
or
or
clc
sub
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
loopne
xchg
xchg
xchg
xchg
gs
testl
cld
mov
les
loopne
dec
mov
sbb
fsubrs
add
inc
inc
jns
les
loopne
dec
and
dec
and
cmp
xchg
dec
mov
in
fwait
inc
cmp
dec
test
hlt
dec
and
divl
dec
mov
test
add
cwtl
loopne
pushl
leave
sub
fadd
les
loopne
dec
and
dec
mov
fadds
aam
rorb
fmul
jb
cmc
dec
pop
ffree
pushl
int
loopne
test
hlt
dec
and
inc
cmp
mov
dec
and
dec
fdiv
dec
and
dec
test
hlt
cmp
mov
dec
mov
fadds
aam
inc
ret
dec
sbb
dec
adc
rorb
fdivr
pop
mov
dec
adc
rorb
fadd
adc
push
mov
sub
rol
les
loopne
dec
and
dec
mov
fmuls
loopne
inc
cmp
cmp
mov
dec
nop
loopne
adc
push
mov
sub
rol
les
loopne
dec
and
dec
mov
fmuls
inc
cmp
lret
inc
addr16
les
inc
or
inc
cmp
mov
dec
nop
loopne
call
mov
dec
adc
rorb
fadd
adc
ss
sub
rol
les
loopne
dec
and
dec
mov
fmuls
loopne
inc
cmp
mov
dec
mov
fadd
or
xor
rol
les
loopne
sbb
cmp
inc
mov
xor
leave
dec
and
xchg
sub
lret
add
dec
add
loopne
mov
les
dec
mov
in
or
lret
inc
add
push
int3
les
loopne
sub
dec
mov
fsubrs
or
or
or
or
or
or
or
scas
cmp
gs
les
xchg
xchg
gs
testl
lock
les
dec
orb
add
orb
loopne
add
mov
inc
and
inc
cmp
mov
dec
mov
lret
jb
dec
aad
mov
int
add
orb
les
lret
jb
dec
int
mov
int
add
orb
aas
mov
scas
jns
les
mov
in
test
cld
dec
cwtl
loopne
dec
cwtl
loopne
sub
inc
cmp
dec
orb
loopne
dec
cmp
inc
sub
dec
or
loopne
scas
cmp
dec
lods
fmull
rclb
mov
cmp
sub
sbb
cmp
loopne
aam
leave
dec
mov
fcoms
les
shl
sub
dec
ret
inc
cmp
mov
dec
mov
cmp
mov
inc
mov
dec
or
cwtl
cld
iret
scas
leave
mov
or
insl
je
cmp
add
dec
rorb
int3
out
jle
negl
das
testb
mov
lret
jb
and
inc
sbb
mov
mov
or
xor
cmp
add
in
dec
shr
jle
lods
in
les
sub
cmp
dec
mov
orb
mov
aam
les
loopne
dec
dec
fld
les
rol
les
inc
fadd
les
out
inc
mov
les
or
sub
je
cmp
dec
push
mov
out
adc
adc
int3
dec
ret
mov
les
mov
out
adc
es
adc
ret
mov
out
dec
mov
les
mov
out
or
rol
dec
mov
int3
lret
inc
inc
les
or
cmp
jg
cmp
cmp
int3
dec
lret
loopne
enter
scas
aam
lds
aam
dec
or
sub
pop
cmp
dec
lret
mov
les
mov
les
add
out
ds
add
inc
and
ds
mov
push
mov
out
push
push
mov
les
lds
dec
xchg
int3
sub
imul
dec
pushf
int3
dec
lret
loopne
rolb
dec
xchg
enter
mov
lock
les
inc
add
push
int3
les
les
aam
sbb
aam
scas
cmp
gs
les
xchg
xchg
gs
testl
nop
mov
les
dec
orl
mov
dec
stos
hlt
dec
fcmove
jb
dec
mov
xchg
xchg
sub
inc
cmp
inc
add
into
xchg
dec
mov
std
lret
push
les
mov
sub
add
les
loopne
add
pushf
lds
les
test
mov
out
pop
xchg
xchg
dec
mov
loopne
mov
out
mov
dec
nop
loopne
xchg
inc
sub
dec
or
loopne
les
fmul
les
rclb
les
test
les
mov
cmp
sub
adc
cmp
loopne
aam
inc
push
mov
dec
and
xchg
sub
iret
add
sub
dec
add
scas
into
xchg
xchg
sub
je
cmp
dec
orl
sar
ret
dec
stos
hlt
push
dec
fcmove
jb
xchg
xchg
dec
mov
sub
inc
cmp
inc
add
into
xchg
dec
xchg
mov
rorb
inc
or
orb
scas
into
sub
aaa
cmp
sub
incl
leave
mov
dec
mov
in
push
scas
cmp
dec
ret
orb
fcoms
or
and
les
cmp
inc
mov
inc
out
mov
dec
mov
in
sub
iret
add
sub
dec
fwait
ror
aam
out
dec
mov
fmull
out
rolb
inc
push
les
lds
ljmp
pop
les
hlt
xchg
lret
jb
les
cmp
inc
add
into
orl
mov
std
ret
dec
shll
dec
mov
in
aas
lods
cmp
dec
lret
orb
fcoms
add
les
cmp
add
cmp
dec
mov
fsubrs
scas
into
xchg
xchg
dec
cvttps2pi
jno
cmp
cmp
mov
shrb
aad
cwtl
loopne
das
iret
dec
nop
loopne
dec
nop
loopne
inc
dec
orl
hlt
dec
ljmp
rclb
cmp
mov
orl
mov
dec
ret
mov
push
mov
dec
shll
dec
mov
in
movsl
lods
cmp
add
les
out
mov
xchg
xchg
scas
int
or
xor
loopne
sub
inc
mov
mov
ror
in
dec
int
mov
in
dec
ret
mov
dec
shll
dec
mov
in
lret
lods
cmp
add
les
push
ret
aam
dec
mov
in
xor
cwtl
rol
les
push
dec
ret
ror
in
dec
aad
mov
movsb
dec
nop
loopne
dec
test
rolb
orb
inc
add
dec
ret
les
cmp
inc
add
fldcw
dec
rorb
call
dec
mov
xchg
sub
mov
mov
cmp
dec
repnz
mov
dec
or
xor
xchg
xchg
dec
or
cmp
dec
leave
mov
dec
mov
clc
sub
lods
cmp
dec
ret
orb
cld
xchg
xchg
scas
int
or
and
ret
les
xor
cmp
loopne
dec
cwtl
loopne
sub
jb
cmp
add
mov
nop
mov
les
inc
add
or
or
or
or
xchg
dec
xor
idivl
incl
mov
xchg
sub
int3
add
dec
addb
xchg
dec
mov
and
add
incl
mov
xchg
sub
int3
add
dec
mov
xchg
dec
mov
dec
mov
or
add
incl
mov
xchg
sub
int3
add
dec
rclb
mov
sub
int3
add
fwait
lcall
or
or
inc
sub
xchg
dec
cwtl
loopne
xchg
xchg
xchg
dec
cmp
add
mov
dec
mov
aam
fisttpl
call
add
inc
or
das
dec
test
inc
mov
dec
rorl
dec
test
fmull
loopne
inc
or
fmull
inc
push
mov
call
mov
sub
lret
mov
sar
xor
lds
sbb
or
aad
and
dec
rcrb
test
lds
lahf
inc
add
push
int3
les
test
fmull
loopne
dec
or
dec
mov
aam
xchg
xchg
dec
nop
loopne
xchg
dec
or
sbb
or
aad
and
dec
rcrb
test
lds
lahf
inc
add
push
int3
les
loopne
fwait
lcall
int3
les
lahf
inc
add
push
int3
les
or
int3
xchg
xchg
xchg
dec
xor
dec
mov
or
add
mov
negl
das
loope
cmp
shrl
mov
in
ret
mov
decl
shrl
cwtl
loopne
out
sbb
loopne
dec
and
dec
mov
in
scas
lds
push
cmp
dec
mov
mov
sub
lret
dec
repnz
sub
loopne
inc
xor
add
clc
pop
mov
xor
ret
das
sub
xor
mov
xlat
lret
dec
and
dec
mov
in
cltd
lahf
inc
add
push
aam
or
int3
xchg
xchg
dec
xor
fmull
xchg
dec
mov
mov
cmp
int
sbb
mov
loopne
mov
dec
mov
loopne
lcall
sar
mov
sub
leave
mov
loopne
mov
dec
mov
dec
xchg
rclb
cmp
dec
sbb
test
dec
sbb
sbb
les
dec
sbb
test
dec
sbb
int3
dec
rorb
loopne
fwait
lcall
inc
add
push
rol
dec
pusha
loopne
les
mov
mov
sub
leave
mov
loopne
lcall
dec
mov
fsubrs
inc
cmp
xchg
xchg
dec
and
xchg
dec
or
sbb
cmp
loopne
das
add
dec
and
fwait
dec
hlt
lcall
int3
push
rol
or
scas
cmp
gs
les
xchg
xchg
gs
testl
lock
les
cmp
dec
mov
add
das
dec
lret
jb
dec
into
inc
mov
into
test
dec
orb
orb
dec
orb
xchg
ror
int3
dec
inc
mov
add
dec
orb
mov
push
lret
jb
les
insb
cmp
cmp
lds
loopne
mov
les
inc
add
pop
dec
cmp
adc
pop
jns
les
mov
in
test
cld
dec
cwtl
loopne
dec
cwtl
loopne
sub
mov
mov
mov
fcoml
or
loopne
scas
cmp
popf
rclb
popf
shrb
cmp
xchg
scas
rorl
pop
or
cmp
loopne
aam
leave
dec
mov
fcoms
les
shl
dec
mov
lock
les
inc
add
pop
or
or
xchg
dec
and
dec
nop
loopne
dec
int
dec
mov
enter
add
les
and
cmp
lcall
or
or
or
or
int3
xchg
xchg
xchg
dec
xor
dec
mov
or
add
mov
negl
das
loopne
cmp
shrl
mov
in
ret
mov
decl
shrl
cwtl
loopne
out
sbb
in
dec
and
dec
mov
in
scas
lds
sbb
cmp
enter
mov
sub
iret
repnz
sub
loopne
inc
xor
add
clc
fwait
mov
xor
ret
das
sub
xor
mov
loopne
and
dec
mov
in
cltd
lahf
inc
add
push
aam
or
inc
sub
xchg
xchg
xchg
dec
xor
dec
mov
or
add
mov
negl
das
loope
cmp
shrl
mov
in
ret
mov
decl
shrl
cwtl
loopne
out
sbb
loopne
dec
and
dec
mov
in
scas
lds
and
cmp
enter
mov
sub
into
repnz
sub
loopne
inc
xor
add
clc
sbb
mov
xor
ret
das
sub
xor
mov
mov
and
dec
mov
in
cltd
lahf
inc
add
push
aam
or
ret
gs
les
xchg
xchg
gs
testl
cwtl
mov
les
dec
cwtl
loopne
dec
and
inc
mov
scas
fcomip
xor
mov
in
and
lret
les
loopne
add
xor
loopne
xchg
dec
mov
cld
dec
mov
lods
sub
call
pushf
ret
aam
mov
cld
xchg
add
ret
inc
fadd
les
loopne
dec
sub
negb
dec
mov
inc
mov
dec
mov
xchg
int3
inc
mov
dec
cmp
loopne
dec
mov
incl
mov
inc
mov
shlb
xchg
std
lods
shlb
iret
std
ljmp
dec
mov
std
out
mov
inc
mov
dec
add
int
sub
inc
cmp
inc
add
dec
dec
and
dec
pushf
fdivr
scas
int3
mov
inc
mov
dec
add
int3
das
scas
xchg
sub
mov
rorb
das
cltd
dec
test
dec
mov
dec
int3
incl
xor
fldl
les
shlb
cli
dec
mov
dec
into
dec
xchg
int3
dec
xchg
dec
fdivr
lods
shlb
lret
sar
mov
dec
lds
dec
test
dec
mov
dec
mov
dec
mov
inc
add
incl
dec
aam
fmull
call
les
loopne
dec
xchg
fdivr
mov
cld
fwait
call
les
cmp
mov
mov
dec
pushf
call
les
push
cmp
dec
or
mov
rolb
les
sahf
call
int3
cld
sahf
call
int3
cld
sahf
call
dec
sahf
call
les
push
cmp
dec
or
mov
rorb
call
lcall
pushf
call
cmp
mov
mov
dec
pushf
call
les
ret
loopne
inc
mov
dec
xchg
int3
cld
sahf
call
cld
sahf
call
call
dec
cmp
sar
ror
cmpl
cmp
cmc
dec
aam
sahf
call
int3
dec
sahf
call
les
push
cmp
dec
ret
loopne
dec
xchg
call
lcall
call
cmp
inc
mov
dec
mov
xchg
sub
add
add
les
and
xchg
add
nop
loopne
dec
xchg
inc
add
inc
add
rorb
test
mov
mov
dec
aam
mov
dec
mov
cwtl
mov
les
inc
add
or
or
or
or
or
lods
inc
fcmovnb
aam
gs
les
xchg
gs
testl
mov
les
xor
hlt
sub
rol
dec
xor
add
dec
mov
add
les
sub
cmpl
fisttps
fmull
rorb
aam
dec
or
xchg
xchg
xchg
dec
or
add
xor
les
and
xchg
sub
les
shrb
ffree
les
or
or
or
or
or
or
or
ret
gs
les
xchg
xchg
gs
testl
cwtl
mov
les
dec
cwtl
loopne
dec
and
inc
mov
scas
fcomip
xor
mov
in
and
lret
les
loopne
add
mov
and
xchg
dec
mov
cld
dec
mov
lods
sub
in
cmp
lods
mov
cld
xchg
add
ret
aaa
fadd
les
loopne
dec
sub
push
cmp
dec
mov
inc
mov
dec
mov
xchg
int3
inc
mov
dec
cmp
loopne
dec
mov
incl
mov
inc
mov
shlb
xchg
std
lods
shlb
iret
std
ljmp
dec
mov
std
out
mov
inc
mov
dec
add
int
sub
mov
rorb
and
dec
pushf
fdivr
scas
int3
mov
inc
mov
dec
add
int3
das
scas
xchg
sub
mov
rorb
das
cltd
dec
test
dec
mov
dec
int3
incl
xor
fldl
les
shlb
cli
dec
mov
dec
into
dec
xchg
int3
dec
xchg
dec
fdivr
lods
shlb
lret
sar
mov
dec
lds
dec
test
dec
mov
dec
mov
dec
mov
inc
add
incl
dec
aam
fmull
call
les
loopne
dec
xchg
fdivr
mov
cld
fwait
call
les
cmp
mov
mov
dec
pushf
call
les
push
cmp
dec
or
mov
rolb
les
sahf
call
int3
cld
sahf
call
int3
cld
sahf
call
dec
sahf
call
les
push
cmp
dec
or
mov
rorb
call
lcall
pushf
call
cmp
mov
mov
dec
pushf
call
les
ret
loopne
inc
mov
dec
xchg
int3
cld
sahf
call
cld
sahf
call
call
dec
cmp
sar
ror
cmpl
cmp
cmc
dec
aam
sahf
call
int3
dec
sahf
call
les
push
cmp
dec
ret
loopne
dec
xchg
call
lcall
call
cmp
inc
mov
dec
mov
xchg
sub
cmp
les
rolb
loopne
les
and
xchg
add
cmp
les
loopne
dec
xchg
inc
add
inc
add
rorb
test
mov
mov
dec
aam
mov
dec
mov
cwtl
mov
les
inc
add
or
or
or
or
or
lods
jne
ret
gs
les
xchg
gs
testl
mov
les
xor
hlt
sub
dec
xor
add
dec
mov
add
les
sub
cmpl
fisttps
fmull
rorb
aam
dec
or
xchg
xchg
xchg
dec
or
add
xor
les
and
xchg
sub
les
shrb
rol
les
or
or
or
or
or
or
or
loopne
negl
xchg
dec
sub
jmp
int3
xchg
dec
or
cmp
cmp
in
aam
sti
mov
dec
mov
xchg
sub
aas
les
rolb
in
lret
les
loopne
dec
lcall
inc
add
dec
xor
fwait
jmp
cltd
lahf
push
rol
or
or
or
or
or
loopne
negl
xchg
dec
sub
jmp
int3
xchg
dec
or
cmp
cmp
loopne
dec
sti
mov
dec
mov
xchg
sub
aas
les
rolb
loopne
les
in
dec
lcall
inc
add
dec
xor
fwait
jmp
cltd
lahf
push
rol
or
or
or
or
or
dec
test
xchg
xchg
dec
mov
lret
jp
inc
push
push
inc
ds
lret
inc
mov
jb
shrb
aam
loopne
xor
aam
cmp
cmp
leave
aam
les
xlat
loope
aas
cmp
das
enter
aam
das
ror
int3
les
lds
mov
xchg
mov
dec
xchg
rorb
lret
jb
dec
jg
cld
cwtl
mov
fiadds
cmp
lds
lret
jb
dec
mov
dec
repnz
cwtl
test
sub
mov
test
cmp
cmp
lcall
inc
jmp
les
mov
adc
dec
xchg
rorb
lret
jb
dec
jg
cld
cwtl
mov
inc
pop
les
cmp
lds
lret
jb
dec
mov
dec
repnz
cwtl
test
sub
mov
test
pop
cmp
fwait
lcall
testb
inc
cmp
mov
lret
jb
in
sub
aam
loopne
shrb
aam
cmp
cmp
leave
in
les
xlat
leave
rol
das
enter
sub
das
shl
xor
cmp
pop
dec
xchg
mov
adc
dec
xchg
rorb
lret
jb
dec
cld
cwtl
mov
roll
cmp
test
jb
dec
mov
dec
repnz
cwtl
test
sub
mov
test
frstor
cmp
testl
les
aam
das
aam
das
aam
das
aam
sub
aam
rol
rol
mov
rol
push
sub
aam
sub
aam
sub
aam
sub
aam
sub
aam
rol
rol
mov
rol
or
or
or
or
xchg
dec
sub
ret
gs
les
xchg
gs
testl
mov
les
xor
xor
shrb
les
rolb
rorb
testl
vpperm
ds
dec
jl,pt
les
add
les
enter
dec
adc
scas
inc
cmp
or
enter
call
xchg
sub
pushf
cmp
dec
enter
dec
dec
or
adc
xchg
rorb
aam
add
add
sub
xchg
mov
sub
cmp
les
enter
mov
sub
cmp
les
enter
les
int3
dec
xchg
int3
xchg
xchg
dec
xchg
sub
int3
xchg
xchg
xchg
xchg
sub
dec
cmp
inc
add
dec
adc
add
xor
les
and
mov
inc
xchg
cmp
scas
les
or
or
or
xchg
xchg
dec
mov
pushl
lret
inc
in
les
enter
out
or
mov
sub
dec
cs
mov
dec
or
jno
cmp
push
rol
mov
xchg
dec
lcall
mov
ds
dec
push
add
ljmp
aam
xchg
dec
or
sub
pop
cmp
dec
mov
out
mov
jl
mov
dec
mov
add
enter
sub
movl
cltd
dec
rolb
dec
xchg
aam
add
pop
mov
testl
out
pop
jl
mov
add
add
ljmp
hlt
dec
or
enter
dec
xchg
xchg
xchg
sub
pop
cmp
dec
xchg
aam
adc
add
xchg
xchg
xchg
dec
or
cmp
lahf
cltd
dec
adc
dec
add
pop
mov
xchg
sub
xor
les
rorb
out
mov
jl
mov
add
add
xchg
dec
or
xchg
cmp
inc
add
rorb
enter
dec
or
xchg
xchg
dec
or
cmp
dec
adc
cltd
fwait
dec
add
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
les
les
loopne
les
sub
sbb
cmp
add
pop
les
sbb
cmp
aam
cld
movsb
ret
aam
and
xchg
sub
aam
les
or
or
or
or
or
or
or
or
ret
gs
les
enter
testl
shlb
les
dec
mov
aam
inc
movsb
negl
dec
cwtl
loopne
incl
mov
xchg
sub
xor
les
rorb
xchg
dec
pop
movsb
dec
pop
mov
pop
lods
sub
xor
les
mov
les
les
in
add
aas
mov
dec
xchg
rolb
xor
add
rorl
rorb
adc
mov
inc
push
cmp
add
ret
dec
xchg
int3
dec
or
push
dec
adc
pop
mov
xchg
sub
xor
les
rorb
xchg
dec
lcall
fsubrl
xor
les
rorb
shlb
les
add
pop
or
or
or
or
ret
gs
les
ret
aam
add
addr16
les
scas
shrb
testl
hlt
das
testl
mov
dec
add
loopne
mov
les
pop
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
loopne
xchg
gs
testl
xchg
mov
les
loopne
dec
mov
movsb
xchg
dec
nop
loopne
xchg
sub
sbb
cmp
pop
xchg
dec
mov
in
dec
cwtl
loopne
sub
in
cmp
loopne
aam
and
mov
dec
and
xchg
sub
xor
les
rorb
loopne
and
lret
les
loopne
dec
cwtl
loopne
sub
push
les
loopne
aam
and
cmp
cmp
add
ret
leave
dec
mov
lock
sub
xor
les
rorb
loopne
and
lret
les
loopne
dec
cwtl
loopne
sub
xor
les
loopne
mov
les
xor
sub
aaa
les
nop
pop
or
or
loopne
xchg
xchg
dec
xor
cmp
cmp
arpl
aam
ret
ret
sub
insl
ret
cmp
imul
push
rol
or
dec
nop
loopne
dec
int
dec
mov
enter
add
les
sbb
cmp
lcall
or
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
scas
test
xor
add
dec
mov
enter
and
pushl
jecxz
addl
dec
or
push
cmp
dec
cmp
les
sbb
aam
sub
insl
ret
fsubrl
aam
mov
aam
dec
leave
les
aam
or
or
or
or
inc
sub
mov
shrb
cmp
lods
sbb
loopne
xchg
add
ret
and
adc
aam
and
fsubrl
aam
fwait
leave
or
or
or
or
xchg
dec
and
xchg
dec
mov
enter
add
les
and
lcall
xchg
dec
xor
inc
or
das
int3
dec
adc
add
mov
adc
adc
rorb
loopne
dec
int3
dec
lret
inc
add
dec
mov
add
push
rol
or
les
loopne
dec
ret
xchg
dec
and
xchg
dec
or
das
cmp
fwait
lcall
or
or
or
or
or
or
scas
cmp
gs
les
enter
testl
shlb
les
dec
mov
int3
dec
sbb
lret
xchg
xchg
xchg
xchg
dec
and
xchg
dec
or
and
les
das
cmp
dec
mov
xchg
sub
ss
les
xchg
add
les
sbb
les
ss
les
int3
dec
mov
shlb
les
pop
or
or
inc
sub
dec
and
xchg
xchg
xchg
xchg
dec
xor
rclb
pop
cmp
dec
mov
loopne
dec
test
rorb
loopne
add
les
loopne
xchg
dec
and
xchg
xchg
xchg
xchg
xchg
sub
pop
cmp
dec
nop
loopne
inc
add
xchg
xchg
xchg
xchg
dec
and
xchg
dec
or
das
cmp
dec
and
fwait
lcall
rol
or
or
or
ret
gs
les
les
cmp
aam
add
loopne
xchg
xchg
xchg
xchg
gs
testl
in
les
les
dec
fwait
mov
mov
mov
sbb
negl
jns
les
mov
in
dec
test
test
loopne
dec
cwtl
loopne
sub
mov
out
mov
dec
and
xchg
inc
sub
dec
or
loopne
scas
cmp
popf
rclb
les
sub
xchg
cmp
xchg
scas
rorl
leave
jg
cmp
loopne
aam
leave
dec
mov
loopne
sub
xor
shl
sub
dec
xlat
dec
stos
rorb
dec
nop
loopne
lret
jb
lret
jb
mov
add
inc
cmp
lret
inc
repz
lret
jb
cld
cmp
aam
loopne
sarb
aam
ret
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
dec
xchg
dec
ret
mov
mov
lret
jb
dec
test
sar
mov
dec
cmp
lret
dec
add
jb
dec
les
ror
sub
mov
test
mov
cmp
out
addl
xchg
scas
rorl
inc
loopne
les
sbb
cmp
loopne
add
in
cmp
cmp
sub
pop
cmp
testb
jp
loope
les
mov
les
mov
xchg
dec
ret
mov
mov
lret
jb
dec
test
sar
mov
dec
les
lret
dec
add
jb
dec
les
ror
sub
mov
mov
cmp
out
addl
xchg
scas
rorl
inc
loopne
mov
les
adc
cmp
loopne
add
in
cmp
cmp
sub
pop
cmp
testb
jb
dec
xchg
les
ror
inc
in
les
mov
dec
ret
int3
dec
test
sar
mov
cmp
dec
rorb
ror
into
dec
les
ror
sub
dec
loopne
les
mov
cmp
out
addl
les
or
inc
loopne
mov
adc
cmp
loopne
les
inc
loopne
cmp
cmp
sub
pop
cmp
testb
aam
xchg
dec
or
pop
cmp
dec
lret
mov
mov
dec
xchg
ror
fisttpll
inc
mov
int3
test
sub
dec
test
dec
mov
dec
ret
aam
int
mov
rolb
fmull
loopne
mov
dec
mov
dec
int
adc
jb
inc
mov
sub
mov
cwtl
sub
mov
cmp
out
mov
xchg
xchg
scas
into
dec
or
inc
loopne
rol
les
adc
cmp
loopne
add
in
cmp
cmp
sub
pop
cmp
testb
or
mov
fadds
movb
loopne
mov
les
loopne
mov
rorb
scas
aam
add
sub
pop
cmp
inc
add
iret
insl
les
cmp
lret
inc
inc
mov
ret
ror
aam
int
mov
rolb
fimuls
les
dec
int
adc
jb
inc
mov
sub
dec
loopne
les
mov
cmp
out
mov
les
add
lock
rol
les
dec
loopne
les
inc
loopne
cmp
cmp
sub
pop
cmp
testb
cmova
rol
les
loopne
dec
and
mov
fmuls
xchg
dec
xchg
scas
int3
xchg
dec
and
xchg
dec
nop
loopne
dec
cwtl
loopne
sub
push
cmp
inc
add
inc
add
mov
ret
int3
dec
test
rolb
rorb
dec
int
adc
jb
inc
mov
sub
dec
loopne
les
mov
cmp
out
mov
les
add
lock
ret
les
adc
cmp
loopne
les
inc
loopne
cmp
cmp
sub
pop
cmp
testb
nop
loopne
scas
int3
push
xchg
xchg
dec
or
pop
cmp
inc
add
dec
repz
cmp
dec
ret
ror
aam
int
mov
rolb
fisttps
loopne
les
dec
int
adc
jb
inc
mov
sub
dec
loopne
les
mov
cmp
out
mov
les
add
lock
ret
les
dec
loopne
les
inc
loopne
cmp
cmp
sub
pop
cmp
testb
xchg
dec
ret
mov
mov
lret
jb
dec
add
enter
cmp
lret
lret
jb
dec
add
inc
mov
sub
out
xchg
orb
scas
shrl
cmp
testb
jb
dec
xchg
les
xlat
rolb
inc
in
les
loopne
push
lret
jb
dec
xchg
les
rcl
int
dec
adc
ret
mov
dec
ret
mov
mov
lret
jb
dec
xchg
les
ror
rorl
loopne
mov
dec
or
jb
dec
or
inc
mov
sub
addl
sub
adc
cmp
add
rol
les
loopne
xchg
test
lds
xchg
dec
or
sub
and
cmp
loopne
add
in
int3
les
mov
cmp
dec
ret
ror
aam
int
mov
rolb
rorl
les
dec
int
adc
jb
inc
mov
sub
addl
sub
pop
cmp
dec
dec
loopne
add
in
cmp
cmp
sub
pop
cmp
testb
dec
dec
loopne
inc
cmp
mov
scas
les
fmull
loopne
add
in
cmp
cmp
sub
pop
cmp
dec
pop
das
mov
inc
loopne
cmp
cmp
sub
pop
cmp
cmp
dec
ret
int3
dec
xchg
rorb
mov
rcll
ret
lret
jb
dec
mov
dec
int
mov
sub
addl
sub
pop
cmp
testb
dec
and
cmp
dec
dec
loopne
mov
les
dec
dec
loopne
testl
les
fadd
les
push
adc
aam
xor
aam
xor
aam
xor
aam
xor
aam
xor
aam
xor
aam
xor
aam
xor
aam
xor
aam
xor
aam
ds
aam
aas
aam
enter
enter
mov
int
enter
enter
enter
enter
enter
scas
cmp
gs
les
cmp
aam
add
loopne
xchg
xchg
xchg
xchg
gs
testl
test
addr16
les
loopne
dec
test
mov
les
dec
mov
loopne
dec
and
dec
mov
ds
inc
enter
dec
pushf
fmuls
int3
dec
push
loopne
les
loopne
add
les
loopne
inc
add
inc
push
les
inc
add
out
ret
inc
push
mov
dec
iret
lret
jb
dec
inc
int3
rol
les
lret
inc
sbb
les
ds
popf
mov
dec
lret
inc
push
mov
dec
out
lret
jb
dec
dec
in
rol
decb
in
dec
add
addl
pop
dec
nop
loopne
inc
mov
loopne
lret
inc
dec
mov
inc
mov
sub
inc
cli
les
les
fmuls
loopne
orb
rolb
and
lret
inc
test
cmp
dec
ret
inc
push
mov
dec
iret
lret
jb
dec
inc
int3
rol
les
dec
or
loopne
incl
aam
inc
sub
les
and
lret
les
loopne
add
mov
mov
add
les
loopne
xor
les
les
xchg
dec
test
movsb
add
mov
dec
add
inc
and
les
lds
dec
nop
loopne
dec
nop
loopne
xchg
dec
and
xchg
dec
mov
cld
xchg
dec
lar
xchg
push
cmp
scas
cmp
loopne
add
inc
lds
mov
cmp
loopne
aam
and
les
lock
sub
sub
les
rorb
movsb
dec
and
inc
mov
loopne
lret
inc
sub
les
loopne
dec
mov
les
pushf
inc
cmp
mov
inc
mov
pop
mov
dec
and
inc
cld
les
xchg
lds
test
mov
out
push
dec
cmp
or
sub
mov
pop
mov
dec
and
xchg
xchg
xchg
sub
add
enter
iret
ljmp
mov
ljmp
lret
push
add
add
fwait
addb
addb
out
sub
inc
rol
les
lds
mov
rorb
xchg
inc
cld
lret
inc
cmp
add
lds
test
mov
out
push
xchg
xchg
xchg
scas
les
loopne
sub
or
cmp
loopne
inc
add
dec
adc
test
movsb
das
int
cmp
addb
dec
and
dec
mov
faddl
incl
cmp
cmp
loopne
inc
mov
cmp
les
loopne
dec
nop
loopne
xchg
dec
mov
fmull
loopne
xchg
dec
mov
cld
xchg
dec
mov
lock
sbb
cmp
loopne
add
inc
sub
mov
cmp
loopne
aam
and
les
lock
sub
and
les
rorb
fmull
aam
pop
add
les
loopne
dec
cwtl
loopne
dec
and
incl
lret
inc
inc
les
loopne
push
inc
cli
les
inc
jmp
les
lds
mov
xchg
mov
dec
and
inc
cld
lret
inc
dec
add
lds
test
mov
out
push
dec
cmp
or
sub
mov
and
mov
dec
and
xchg
xchg
xchg
sub
add
cmp
enter
aad
sub
push
add
add
inc
push
les
xchg
mov
inc
mov
and
cmp
cmp
mov
dec
and
xchg
sub
and
les
rorb
in
dec
mov
loopne
add
les
and
les
and
les
rorb
loopne
xchg
xchg
dec
cvttps2pi
repz
cmp
faddl
mov
xchg
xchg
dec
cvttps2pi
cwtl
cmp
inc
add
inc
fstpt
cmp
inc
mov
lds
mov
test
dec
leave
les
dec
mov
nop
testl
les
mov
nop
loopne
inc
mov
loopne
mov
addb
mov
sub
and
les
rorb
js
mov
faddl
les
loopne
mov
addb
mov
nop
loopne
xchg
sub
and
les
rorb
push
or
or
or
or
or
or
or
int3
xchg
xchg
dec
xor
std
lcall
les
loopne
dec
ret
xchg
dec
and
xchg
dec
or
and
cmp
add
add
cmp
rolb
cmc
lds
int3
push
rol
or
or
or
or
or
or
or
inc
sub
xchg
xchg
xchg
dec
xor
lcall
shrl
les
loopne
dec
ret
xchg
xchg
xchg
dec
and
xchg
dec
or
and
cmp
aam
fwait
enter
loopne
les
loopne
dec
ret
xchg
xchg
xchg
dec
nop
loopne
xchg
dec
or
and
cmp
pop
cld
cltd
lds
add
enter
xor
les
xchg
xchg
xchg
dec
and
xchg
dec
or
and
cmp
cltd
lds
lds
dec
test
in
cltd
lds
add
enter
add
les
xchg
xchg
xchg
dec
mov
fcoms
sbb
cmp
cltd
lds
lds
cltd
lahf
inc
add
push
int3
les
or
or
or
or
or
int3
xchg
xchg
xchg
dec
xor
lcall
shrl
les
loopne
dec
ret
xchg
xchg
xchg
dec
and
xchg
dec
or
sbb
cmp
pop
cld
cltd
lds
add
enter
lea
les
xchg
xchg
xchg
dec
mov
fcoms
sbb
cmp
cltd
lds
lds
cltd
lahf
inc
add
push
rol
or
inc
sub
xchg
dec
xor
inc
or
das
int3
dec
adc
add
mov
adc
adc
cmc
dec
mov
rolb
and
les
loopne
xchg
dec
and
xchg
dec
xchg
int3
xchg
xchg
scas
lds
cmp
faddl
int3
dec
mov
add
push
rol
or
les
loopne
dec
ret
xchg
dec
nop
loopne
xchg
dec
or
lcall
or
ret
gs
les
xchg
xchg
gs
testl
pushf
mov
les
inc
mov
ret
mov
scas
xlat
divl
lods
fs
loopne
add
les
loopne
add
call
loopne
xchg
dec
mov
lock
mov
mov
cmp
mov
lock
add
ret
or
les
loopne
dec
sbb
mov
mov
les
pop
cmp
dec
sub
sbb
lds
aam
lods
rorb
dec
in
dec
mov
dec
lods
int3
das
out
mov
leave
dec
ljmp
dec
in
das
lret
int3
dec
sbb
mov
mov
dec
lods
int3
dec
xchg
rolb
dec
add
sub
les
loopne
les
dec
xchg
sar
mov
dec
xchg
int3
inc
mov
dec
popf
call
aam
mov
add
dec
mov
sub
pushl
xor
xor
rorb
mov
dec
xchg
rolb
call
dec
mov
xchg
dec
or
mov
cmp
mov
call
popf
call
aam
mov
add
dec
mov
das
cltd
push
mov
dec
xor
mov
rorb
mov
dec
xchg
rolb
call
dec
test
dec
mov
dec
aad
xchg
int3
dec
aad
mov
dec
xchg
dec
xchg
rorb
dec
xchg
fdivr
xchg
mov
dec
mov
das
lret
sar
mov
dec
into
das
dec
mov
dec
lds
rorb
inc
mov
ror
fistpll
cmp
dec
xchg
fmull
rorb
and
dec
lret
dec
lods
rorb
mov
pushf
mov
les
inc
add
cmp
gs
les
xchg
xchg
gs
testl
pushf
mov
les
inc
mov
ret
mov
scas
xlat
divl
lods
fs
loopne
add
les
loopne
add
call
loopne
xchg
dec
mov
lock
mov
mov
cmp
mov
lock
add
ret
or
les
loopne
dec
sbb
mov
mov
les
call
sub
sbb
lds
aam
lods
rorb
dec
in
dec
mov
dec
lods
int3
das
out
mov
leave
dec
ljmp
dec
in
das
lret
int3
dec
sbb
mov
mov
dec
lods
int3
dec
xchg
rolb
dec
add
sub
les
loopne
les
dec
xchg
sar
mov
dec
xchg
int3
inc
mov
dec
popf
call
aam
mov
add
dec
mov
sub
pushl
xor
xor
rorb
mov
dec
xchg
rolb
call
dec
mov
xchg
dec
or
mov
cmp
mov
call
popf
call
aam
mov
add
dec
mov
das
cltd
push
mov
dec
xor
mov
rorb
mov
dec
xchg
rolb
call
dec
test
dec
mov
dec
aad
xchg
int3
dec
aad
mov
dec
xchg
dec
xchg
rorb
dec
xchg
fdivr
xchg
mov
dec
mov
das
lret
sar
mov
dec
into
das
dec
mov
dec
lds
rorb
inc
mov
ror
fistpll
cmp
dec
xchg
fmull
rorb
and
dec
lret
dec
lods
rorb
mov
pushf
mov
les
inc
add
cmp
gs
les
xchg
xchg
gs
testl
cwtl
mov
les
dec
and
inc
mov
scas
fcomip
xor
mov
in
and
lret
les
loopne
add
xchg
cmp
dec
and
xchg
dec
mov
cld
dec
mov
lods
sub
int3
cmp
lods
mov
cld
xchg
add
ret
add
les
dec
mov
mov
cwtl
loopne
sub
cltd
cmp
dec
iret
inc
mov
dec
mov
xchg
int3
inc
mov
dec
cmp
loopne
dec
mov
incl
mov
inc
mov
shlb
sbb
rorl
das
iret
std
fidivl
dec
mov
dec
incl
inc
mov
dec
add
int
sub
cwtl
cmp
inc
add
dec
dec
cltd
fmull
loopne
std
int3
mov
inc
mov
dec
add
int3
das
scas
xchg
sub
cwtl
cmp
inc
add
dec
xchg
das
cwtl
dec
test
dec
iret
dec
int3
incl
xor
fldl
les
shlb
cli
dec
int3
dec
into
dec
xchg
int3
dec
xchg
dec
mov
std
popf
shlb
lret
sar
mov
dec
lds
dec
test
dec
pop
dec
mov
dec
popl
add
dec
aam
fmull
nop
loopne
ja
cld
sahf
or
cmp
les
fdivr
mov
les
ret
cld
fwait
or
sbb
les
cmp
mov
mov
dec
pushf
adcb
les
or
mov
dec
int3
cld
popf
xorb
sahf
xorb
popf
xorb
adcb
sub
lahf
cmp
dec
or
mov
lcall
or
sub
lahf
cmp
das
mov
mov
dec
pushf
adcb
les
lahf
cmp
dec
ret
add
int3
cld
popf
xorb
xorb
dec
sbb
sar
ror
cmp
cmp
cmc
dec
int3
cld
popf
xorb
sahf
adcb
sub
sahf
cmp
dec
ret
orb
lcall
dec
sahf
subb
cmp
dec
fwait
orb
rolb
enter
cmp
dec
and
xchg
sub
sbb
les
fadds
rolb
rorb
test
mov
mov
xchg
les
dec
mov
dec
mov
cwtl
mov
les
inc
add
or
or
or
or
or
xchg
xchg
xchg
dec
mov
add
mov
dec
or
dec
cvttps2pi
cmp
cmp
dec
mov
sub
dec
cmp
xchg
sub
sbb
les
rolb
dec
cmp
push
rol
or
scas
cmp
gs
les
cmp
aam
add
loopne
xchg
xchg
xchg
xchg
gs
testl
cld
mov
les
loopne
dec
xor
aam
mov
dec
jb
lret
jb
out
rolb
lret
inc
jnp
les
mov
inc
das
mov
test
mov
shrb
dec
nop
loopne
negl
cld
sahf
clc
mov
test
mov
orb
int
mov
rorb
mov
test
mov
push
out
addb
sub
pop
cmp
sub
dec
lret
test
orb
rolb
and
les
dec
push
mov
dec
nop
loopne
add
dec
xchg
lds
dec
or
sub
loopne
add
dec
and
mov
dec
nop
loopne
dec
or
cs
dec
lret
dec
xchg
lds
dec
xchg
mov
mov
out
addb
lret
jb
dec
in
dec
cwtl
out
rolb
rorl
test
mov
add
sub
dec
lods
lds
mov
adc
inc
or
les
lds
mov
adc
inc
jle
les
mov
jb
dec
aad
mov
int
dec
orb
dec
orb
loopne
call
inc
push
les
lret
inc
inc
lret
jb
dec
aad
mov
mov
test
dec
and
xchg
sub
adc
cmp
loopne
negl
dec
cwtl
loopne
incl
mov
inc
cmp
mov
xchg
dec
mov
fsubrs
xchg
cmp
inc
mov
int3
dec
mov
shlb
mov
fsubrs
xchg
cmp
dec
fmull
loopne
dec
rorl
loopne
dec
fwait
lds
and
cmp
cmp
sub
inc
cmp
das
loope
stos
orb
scas
sub
push
cmp
dec
fldt
sbb
scas
dec
or
push
cmp
negl
dec
fisttpl
dec
add
loopne
mov
les
dec
mov
in
or
sbb
hlt
push
int3
les
or
or
or
or
or
ret
gs
les
les
cmp
aam
add
loopne
les
enter
testl
jl
les
les
loopne
les
cmp
loopne
dec
test
cld
sub
mov
hlt
lods
dec
and
inc
add
scas
les
jns
mov
inc
add
pushl
pop
and
les
aam
cltd
les
loopne
dec
and
std
or
and
les
les
loopne
inc
pop
mov
lcall
sub
and
pushl
pop
les
loopne
negl
inc
mov
dec
add
lret
jb
dec
push
aam
dec
nop
loopne
das
rorb
inc
or
and
les
loopne
testl
sub
and
les
loopne
inc
mov
mov
dec
xchg
rorb
jb
dec
inc
mov
cld
and
mov
dec
and
inc
add
add
fadd
xchg
mov
inc
or
sbb
testl
sub
sbb
les
loopne
inc
add
sub
dec
lds
pop
dec
lds
es
mov
pushl
jg
les
fmull
loopne
dec
sub
dec
and
std
and
sbb
les
fmull
loopne
das
ret
dec
pusha
loopne
les
loopne
dec
test
call
inc
cmp
lock
sub
sbb
pushl
add
les
lret
inc
jge
les
sbb
testl
sub
sbb
les
les
dec
mov
mov
dec
int
jb
dec
inc
into
rol
les
rolb
lret
inc
dec
mov
sub
sbb
testl
sub
sbb
les
movb
inc
mov
les
sbb
testl
sub
sbb
les
les
dec
add
lret
jb
dec
pop
les
lret
inc
mov
les
sbb
testl
sub
sbb
les
les
loopne
inc
add
xor
les
loopne
lret
inc
in
mov
dec
mov
fstl
nop
loopne
dec
and
xchg
dec
inc
loopne
les
sub
inc
cmp
dec
mov
fstl
nop
loopne
xchg
dec
and
xchg
add
or
les
loopne
sbb
cmp
loopne
aam
push
loopne
les
inc
loopne
lds
pop
les
loopne
dec
js
push
or
xor
cwtl
loopne
dec
test
mov
aam
rorb
mov
mov
cmp
inc
add
inc
add
lret
pushl
lret
inc
insl
pushl
lret
push
add
add
dec
pop
add
les
loopne
dec
nop
loopne
xchg
dec
nop
loopne
dec
mov
fmuls
loopne
xchg
dec
mov
mov
lea
cmp
loopne
aam
push
loopne
les
pop
les
loopne
dec
jo
push
or
cmp
cwtl
loopne
dec
test
mov
inc
aas
aam
rorb
mov
imul
inc
add
inc
add
iret
cmp
push
add
add
xchg
dec
adc
aam
rorb
mov
loopne
dec
or
xor
mov
and
mov
dec
and
xchg
xchg
xchg
sub
imul
inc
add
inc
add
iret
pushl
mov
pushl
lret
push
add
add
lret
dec
and
dec
mov
rolb
int3
add
int3
lds
inc
loopne
lds
aam
int
sub
adc
les
rorb
rolb
lret
inc
int3
cmp
cmp
std
mov
mov
loopne
xchg
sub
adc
les
rolb
loopne
lret
les
and
les
and
les
inc
loopne
les
cmp
cmp
jo
je
lret
inc
jmp
cmp
dec
inc
loopne
les
inc
add
sub
dec
ret
sub
dec
ret
sub
dec
ret
sub
dec
ret
sub
sbb
fwait
dec
nop
loopne
lret
jb
lret
jb
out
or
xchg
dec
adc
scas
lds
inc
add
sub
inc
aas
aam
int
sub
adc
les
rolb
je
aam
and
lret
les
and
les
and
les
pop
les
les
shl
sub
dec
xchg
les
loopne
cwtl
loopne
dec
mov
aam
mov
dec
xor
decl
iret
dec
cmp
call
iret
mov
loope
xor
rclb
cmp
mov
dec
and
inc
add
add
hlt
lds
les
xor
dec
mov
xor
decl
iret
dec
cmp
call
iret
mov
loopne
xor
rclb
cmp
mov
dec
and
inc
add
add
hlt
lds
les
pushl
mov
les
xchg
dec
mov
fmuls
loopne
dec
test
hlt
std
scas
mov
les
test
loopne
inc
cmp
lock
sub
pop
pushl
lret
inc
fld
les
inc
loopne
lret
les
inc
loopne
les
inc
loopne
les
inc
loopne
mov
lret
inc
jge
les
pop
testl
sub
push
les
lret
inc
arpl
les
push
testl
sub
push
les
loopne
dec
mov
xchg
dec
mov
xchg
dec
nop
loopne
xchg
sub
sbb
cmp
dec
dec
loopne
les
inc
loopne
shrb
cmp
jp
les
inc
loopne
std
mov
cwtl
mov
dec
mov
mov
les
rolb
push
lret
inc
add
negl
dec
nop
loopne
xchg
dec
nop
loopne
dec
and
xchg
dec
mov
mov
cwtl
loopne
add
jge
cmp
dec
test
cwtl
dec
nop
loopne
inc
cmp
mov
dec
nop
loopne
dec
jo
push
les
loopne
dec
or
xor
js
push
aam
inc
loopne
les
inc
les
push
enter
fdivr
xor
push
add
add
iret
dec
and
inc
add
add
fadd
add
add
movl
and
xchg
sub
push
les
shl
xchg
les
loopne
dec
mov
pushf
add
aas
lret
inc
cli
cmp
cmp
loopne
incl
mov
sub
sbb
dec
mov
in
mov
mov
sub
sbb
loopne
movb
push
aam
inc
loopne
les
cmp
cmp
inc
les
les
rorb
hlt
dec
js
push
les
loopne
dec
jo
push
les
loopne
add
inc
les
dec
ret
sub
dec
ret
sub
dec
les
dec
std
jo
push
lret
inc
cmp
cmp
loopne
les
inc
add
testl
out
les
loopne
add
jge
dec
pusha
loopne
les
lret
push
push
dec
aam
inc
sub
and
dec
dec
loopne
les
les
dec
dec
loopne
testl
les
je
les
int3
les
or
or
ret
gs
les
les
cmp
aam
add
loopne
les
enter
testl
or
les
les
loopne
les
mov
in
cwtl
loopne
sub
mov
cmp
aam
xor
mov
cltd
sbb
les
enter
and
incl
mov
les
inc
sub
shrl
out
mov
dec
mov
std
mov
loope
les
loopne
scas
fmull
loopne
incl
aad
les
faddl
mov
ljmp
shrl
loopne
adc
mov
std
mov
sub
cmovg
lcall
adc
les
loopne
dec
test
sub
int
pop
adc
les
loopne
dec
nop
loopne
out
aas
adc
dec
test
dec
adc
cld
dec
mov
dec
xor
les
fmull
lock
sbb
push
lcall
mov
dec
xchg
cld
dec
sbb
push
lcall
mov
dec
xchg
clc
iret
adc
xchg
rorb
lock
adc
mov
dec
cmp
adc
mov
dec
cmp
add
mov
hlt
dec
nop
loopne
dec
sbb
mov
add
out
je
dec
mov
test
enter
mov
sub
adc
les
dec
sbb
aam
test
fmuls
loopne
std
mov
mov
sub
adc
les
dec
mov
call
ljmp
sub
adc
lcall
lret
inc
mov
les
lret
inc
cmp
les
add
pushf
aam
shrl
les
loopne
dec
hlt
dec
inc
mov
les
add
notl
cld
xchg
vsqrtsd
inc
add
or
push
dec
decl
mov
out
xchg
rorb
adc
adc
les
int3
dec
mov
fadd
cmp
int3
inc
or
les
adc
les
loopne
testl
sub
adc
les
loopne
dec
nop
loopne
inc
mov
mov
dec
xchg
rorb
jb
dec
inc
mov
les
inc
or
adc
les
loopne
testl
sub
adc
les
loopne
inc
mov
inc
or
adc
les
loopne
testl
sub
adc
les
loopne
dec
nop
loopne
inc
mov
lds
dec
lret
jb
dec
inc
mov
les
add
dec
add
cmp
sub
dec
lds
push
dec
lds
jb
add
loope
push
adc
testl
sub
adc
les
loopne
dec
mov
rorb
loopne
inc
pop
sub
dec
lds
sbb
loopne
mov
mov
sub
adc
les
fmull
loopne
dec
sub
mov
in
and
std
and
shrl
les
fmull
loopne
dec
mov
fadds
mov
pushl
sub
adc
les
loopne
mov
aas
ret
les
mov
sub
adc
testl
sub
adc
les
loopne
dec
or
lds
rolb
aam
test
or
dec
mov
fmuls
lock
add
dec
lret
jb
dec
inc
aam
das
ret
das
jge
pop
dec
and
inc
xor
testl
sub
adc
les
movb
subb
testl
sub
adc
les
enter
xchg
rolb
enter
jb
dec
dec
cmc
rol
les
call
lret
jb
lds
dec
inc
aam
das
iret
dec
ret
dec
ret
dec
add
and
dec
and
imull
incl
lret
inc
cld
mov
sub
adc
testl
sub
adc
les
jl
les
loopne
dec
inc
loopne
les
loopne
les
inc
loopne
les
loopne
les
loopne
les
loopne
les
and
les
loopne
dec
lret
loopne
in
jg
les
adc
lret
inc
pop
lret
jb
loopne
dec
and
dec
mov
call
lret
jb
loopne
dec
and
inc
add
and
les
loopne
nop
loopne
add
and
mov
dec
and
xchg
dec
and
xchg
dec
dec
loopne
les
xchg
xchg
xchg
dec
dec
loopne
les
inc
loopne
sub
idivl
cmp
les
adc
std
js
insb
les
push
les
les
rolb
les
loopne
mov
dec
and
xchg
dec
and
xchg
dec
dec
loopne
les
and
cmp
inc
les
inc
loopne
sub
idivb
cmp
adc
std
js
insb
les
push
les
les
sar
loopne
les
insb
lret
les
inc
loopne
les
loopne
les
inc
loopne
les
loopne
les
les
inc
loopne
shrb
cmp
dec
pop
loopne
std
js
insb
les
push
les
les
rorb
dec
cmp
inc
inc
mov
add
insb
lret
les
inc
loopne
les
loopne
les
inc
loopne
les
loopne
les
les
inc
loopne
cmc
cmp
inc
js
insb
aam
pop
loopne
lret
inc
loopne
les
loopne
les
inc
add
sub
dec
les
inc
mov
inc
push
les
loopne
xchg
dec
dec
loopne
les
les
dec
dec
loopne
les
sarl
cmp
loopne
les
loopne
les
inc
ds
ret
dec
jo
je
les
loopne
xor
xor
ds
ret
dec
dec
loopne
decl
mov
inc
ds
ret
dec
inc
loopne
movl
sub
adc
loopne
xchg
dec
inc
loopne
les
lods
xchg
dec
or
add
movsl
dec
inc
loopne
les
loopne
dec
inc
loopne
les
loopne
les
inc
loopne
les
loopne
les
les
inc
loopne
hlt
cmp
inc
js
insb
aam
pop
loopne
les
push
les
les
rolb
les
loopne
dec
js
dec
les
lret
inc
fs
les
aam
rorb
mov
pushl
mov
dec
or
cmp
mov
dec
mov
mov
inc
cmp
mov
dec
and
movl
sub
adc
les
loopne
xchg
dec
and
xchg
xchg
dec
nop
loopne
xchg
dec
or
xor
cmp
dec
push
loopne
les
loopne
dec
xor
ds
rorb
mov
xor
xor
ds
rorb
mov
inc
ds
rorb
mov
mov
sub
adc
les
loopne
dec
nop
loopne
das
test
aam
rorb
mov
pushl
mov
dec
or
cmp
mov
dec
mov
mov
inc
cmp
mov
dec
and
movl
sub
adc
les
loopne
dec
nop
loopne
xchg
xchg
dec
and
xchg
xchg
dec
or
xchg
xlat
cmp
dec
js
dec
les
loopne
aam
push
loopne
les
je
les
loopne
cmp
dec
jo
dec
les
loopne
dec
pop
inc
cmp
mov
dec
and
xchg
xchg
xchg
sub
cmp
inc
add
incl
mov
dec
inc
loopne
cmp
inc
stc
mov
testl
add
dec
call
and
dec
hlt
dec
push
loopne
les
mov
les
add
les
add
les
rol
out
or
or
xchg
rorb
adc
or
les
int3
aas
dec
mov
add
les
loopne
les
inc
cmp
inc
loopne
les
loopne
les
hlt
cmp
cmp
inc
loopne
incl
mov
dec
push
inc
cmp
inc
loopne
movl
sub
or
les
loopne
les
loopne
les
aam
inc
test
les
call
mov
dec
push
inc
cmp
inc
loopne
incl
mov
dec
push
inc
cmp
inc
loopne
les
loopne
movl
sub
or
out
cmp
incl
mov
xchg
sub
add
les
aam
inc
loopne
les
rol
dec
dec
loopne
les
loopne
dec
cwtl
iret
lds
loopne
les
inc
cmp
and
dec
jo
dec
les
hlt
cmp
cmp
and
incl
mov
dec
push
inc
cmp
and
movl
sub
or
les
loopne
les
loopne
inc
cmp
les
call
mov
dec
push
inc
cmp
and
incl
mov
dec
push
inc
cmp
and
dec
push
loopne
movl
sub
or
out
cmp
incl
mov
xchg
sub
add
les
aam
inc
loopne
les
rol
inc
js
dec
aam
leave
dec
mov
mov
les
rolb
add
aam
inc
loopne
lret
les
loopne
les
and
les
inc
loopne
les
cmp
cmp
inc
nop
cmp
cmp
loopne
les
les
shrb
jo
je
les
dec
mov
mov
cmp
aam
int
sub
add
les
rolb
add
aam
inc
loopne
lret
les
loopne
les
and
les
je
les
inc
add
testl
dec
mov
pushl
xchg
or
les
test
dec
mov
dec
cwtl
loopne
dec
mov
clc
std
mov
mov
sub
or
les
test
loopne
push
inc
pop
mov
lcall
sub
or
ljmp
lret
inc
daa
mov
add
insb
lret
les
inc
loopne
les
inc
loopne
les
inc
loopne
les
lret
inc
js
les
or
testl
sub
or
les
les
ja
les
lret
inc
pop
les
or
testl
sub
or
les
les
rolb
lret
inc
inc
les
or
testl
sub
or
les
dec
mov
fmull
loopne
xchg
dec
mov
dec
nop
loopne
dec
and
xchg
dec
inc
loopne
les
sub
adc
cmp
dec
dec
loopne
les
inc
loopne
int3
sub
out
cmp
inc
js
add
aam
inc
loopne
popa
les
loopne
les
les
sub
dec
sub
dec
sub
inc
pop
lret
inc
push
int
testl
sub
pinsrw
pop
lret
inc
pop
sub
pinsrw
add
lods
aam
shrl
les
dec
mov
xchg
dec
push
loopne
les
cmp
dec
dec
loopne
les
inc
loopne
int
ret
cmp
loopne
aam
inc
loopne
dec
inc
loopne
les
inc
add
dec
js
pusha
les
lret
inc
lock
dec
repnz
inc
mov
les
add
les
add
les
mov
dec
adc
xchg
rorb
adc
dec
addr16
les
int3
aas
dec
mov
insb
aam
inc
loopne
les
push
les
loopne
les
loopne
les
mov
lock
mov
cmp
loopne
les
std
jo
insb
les
push
les
loopne
les
clc
sub
mov
cmp
loopne
dec
mov
cld
out
add
xchg
xchg
xchg
xchg
sub
pop
les
aam
inc
loopne
les
rol
dec
and
inc
add
mov
add
testl
sub
push
les
movb
loopne
les
cmp
cmp
jo
insb
les
push
les
les
rorb
clc
dec
cwtl
loopne
add
insb
lret
les
inc
loopne
les
inc
loopne
les
dec
sub
dec
sub
dec
les
push
dec
dec
loopne
les
inc
loopne
les
cmp
cmp
mov
cmp
add
xlat
dec
mov
fmull
dec
inc
mov
movl
or
les
les
dec
dec
loopne
testl
les
add
les
int3
les
or
or
or
or
xchg
xchg
dec
mov
xor
cmp
add
sbb
sbb
and
and
sub
sub
xor
mov
dec
mov
dec
mov
dec
mov
decl
enter
jle
les
add
dec
mov
dec
mov
mov
dec
xchg
fmull
fmull
fmuls
fmuls
in
mov
dec
xchg
loopne
xchg
loopne
sub
sub
mov
dec
mov
dec
xchg
hlt
dec
xchg
hlt
fwait
dec
add
or
or
or
or
or
or
or
enter
sub
or
lock
dec
mov
sub
mov
clc
dec
mov
dec
addl
out
dec
xchg
fmull
fmull
fmuls
fmuls
in
mov
dec
xchg
loopne
xchg
loopne
sub
sub
mov
dec
mov
dec
xchg
hlt
dec
xchg
hlt
fwait
dec
add
or
or
inc
sub
dec
and
xchg
xchg
xchg
dec
xor
dec
lcall
mov
lock
mov
dec
and
dec
and
dec
cs
mov
enter
mov
sub
dec
ds
dec
add
cmp
inc
adc
lcall
sub
or
les
enter
and
mov
push
or
les
dec
pop
dec
and
dec
mov
mov
sub
or
testl
push
mov
pop
mov
dec
fildll
ret
das
sub
pop
mov
nop
or
les
loopne
dec
sbb
mov
mov
sub
or
les
loopne
testl
inc
add
int3
dec
les
ret
das
sub
add
mov
fisttps
les
loopne
dec
mov
fcoms
loopne
xchg
dec
or
mov
aam
mov
xor
les
enter
mov
sub
add
les
loopne
xchg
xchg
xchg
sub
repz
inc
add
das
xchg
lcall
sub
add
les
enter
mov
sub
add
les
loopne
dec
mov
call
adc
add
add
std
lcall
les
dec
mov
call
add
xchg
xchg
xchg
dec
or
cmp
dec
mov
out
mov
jl
mov
add
add
inc
cmp
mov
sub
add
les
enter
orb
dec
nop
loopne
fwait
dec
xchg
faddl
cmp
les
hlt
push
aam
or
ret
gs
les
cmp
aam
add
loopne
xchg
gs
testl
xchg
mov
les
sbb
ret
mov
aam
and
lret
les
loopne
dec
cwtl
loopne
sub
idivb
cmp
loopne
xchg
dec
mov
in
dec
cwtl
loopne
sub
sub
loopne
aam
and
mov
dec
mov
enter
jnp
les
rorb
loopne
add
les
loopne
dec
cwtl
loopne
sub
or
cmp
or
or
or
or
or
fs
les
mov
mov
fs
les
fs
les
xor
les
mov
dec
push
pop
les
les
rolb
ret
les
int3
fwait
dec
inc
push
les
pop
les
scas
xlat
xchg
sub
or
int3
lcall
xchg
dec
xor
les
fdivr
inc
push
les
cmp
dec
inc
pop
les
fadds
mov
dec
mov
int3
dec
mov
dec
mov
enter
les
dec
xchg
int3
dec
xchg
rorb
dec
xchg
int3
dec
xchg
aam
xchg
enter
dec
aam
mov
dec
inc
pop
les
or
pop
les
sar
inc
push
les
cmp
dec
inc
pop
les
rolb
mov
dec
mov
dec
xchg
in
dec
mov
int3
dec
mov
aam
mov
les
enter
fwait
dec
inc
pop
les
or
or
or
or
or
or
or
pop
les
aam
inc
push
les
cmp
dec
inc
pop
les
aam
add
fisttps
fmuls
in
dec
mov
rolb
rol
les
int3
dec
xchg
enter
pop
les
or
or
xchg
xchg
dec
cmp
les
fdivr
jae
les
cmp
dec
jae
les
fadds
mov
dec
mov
dec
sbb
dec
mov
aam
dec
and
xchg
xchg
dec
mov
add
rol
les
jae
les
or
or
or
or
or
or
or
xchg
dec
xor
les
sar
inc
push
les
cmp
dec
inc
pop
les
rolb
mov
dec
mov
fmull
loopne
dec
int3
dec
mov
enter
dec
mov
dec
nop
loopne
dec
xchg
enter
rorb
aam
inc
pop
les
or
or
or
or
or
or
or
pop
les
aam
inc
push
les
cmp
dec
inc
pop
les
aam
add
fisttps
fmuls
in
dec
mov
rolb
leave
les
int3
dec
xchg
enter
pop
les
or
or
dec
mov
int3
xchg
dec
mov
int3
out
or
mov
aam
dec
mov
les
pop
out
push
adc
shlb
adc
mov
int3
push
das
dec
or
or
add
or
or
or
or
inc
sub
dec
and
xchg
xchg
xchg
dec
xor
xchg
xchg
add
les
or
loope
les
and
add
movl
add
sbb
mov
aam
les
int3
dec
mov
aam
lcall
les
mov
test
les
shrb
xchg
xchg
xchg
dec
mov
cmp
cmp
rolb
aam
sbb
mov
addl
rolb
sar
mov
sub
pop
lcall
fwait
mov
inc
sub
testl
sub
pop
les
loopne
std
xchg
shlb
sub
pop
lcall
cmp
les
lcall
int3
les
les
push
dec
test
cltd
inc
or
lahf
inc
add
push
int3
les
or
or
or
or
or
or
or
inc
sub
dec
and
xchg
xchg
xchg
dec
xor
add
les
loopne
std
stos
aam
shrl
aam
mov
pop
push
les
shrb
xchg
xchg
xchg
dec
mov
cmp
cmp
rolb
aam
sub
mov
mov
les
rolb
sar
mov
sub
push
ljmp
mov
inc
pop
mov
sub
push
testl
sub
push
les
loopne
std
xchg
shlb
sub
push
ljmp
hlt
push
les
les
add
push
rol
das
or
fwait
lcall
add
push
rol
or
or
or
or
or
or
or
xchg
xchg
dec
mov
dec
xor
rorb
dec
mov
xchg
dec
mov
sub
xor
cmp
mov
mov
rol
or
or
scas
cmp
gs
les
cmp
aam
add
les
les
loopne
les
sub
cmp
xchg
dec
nop
loopne
xchg
add
pop
les
add
cmp
aam
sbb
loopne
xchg
sub
adc
les
or
or
or
or
or
or
or
or
ret
gs
les
cmp
aam
add
loopne
xchg
xchg
xchg
xchg
gs
testl
test
addr16
les
loopne
dec
inc
loopne
les
dec
sbb
dec
mov
fmull
loopne
dec
stos
in
cmp
mov
inc
cmp
inc
les
les
loopne
dec
inc
loopne
incl
dec
les
dec
decl
sub
inc
mov
loopne
dec
xchg
fmuls
loopne
add
lret
inc
inc
das
into
dec
pusha
loopne
les
les
les
loopne
les
dec
mov
in
dec
cwtl
loopne
mov
inc
cmp
mov
inc
cmp
les
loopne
inc
mov
dec
add
dec
add
mov
or
sbb
add
les
loopne
inc
js
push
les
mov
dec
nop
loopne
dec
into
lret
jb
dec
inc
int3
rol
les
incb
les
lret
inc
das
les
mov
sub
inc
cmp
mov
inc
xor
inc
les
lcall
dec
lret
inc
les
cmp
shrl
mov
dec
add
dec
add
mov
or
sbb
jnp
les
push
les
mov
dec
nop
loopne
dec
into
lret
jb
dec
inc
int3
rol
incb
inc
cmp
mov
inc
xor
les
mov
dec
add
dec
add
mov
or
sbb
jnp
les
dec
cwtl
loopne
lret
inc
xchg
cmp
cmp
loopne
inc
mov
inc
cmp
lret
inc
dec
les
lret
inc
inc
pushl
inc
mov
dec
add
dec
mov
lds
loopne
dec
nop
loopne
test
loopne
incl
cmp
cmp
cmp
inc
arpl
les
mov
sub
jnp
les
loopne
inc
mov
dec
add
mov
inc
mov
dec
mov
fmuls
loopne
dec
aam
aad
test
dec
test
dec
add
les
cmp
sar
mov
sub
jp
lcall
inc
les
mov
cmp
dec
mov
fmuls
dec
test
dec
test
dec
add
les
loopne
dec
and
dec
aam
aad
test
dec
test
dec
add
les
rorb
or
dec
loopne
les
les
loopne
inc
js
push
les
loopne
les
mov
dec
mov
in
int
jb
dec
inc
into
rol
les
loopne
dec
or
xchg
dec
mov
in
inc
add
int
xchg
lret
inc
xor
divl
add
les
loopne
add
mov
mov
add
inc
inc
dec
and
xor
mov
jg
les
xchg
dec
cwtl
loopne
add
xchg
dec
mov
rorb
loopne
xchg
dec
mov
loopne
nop
loopne
xchg
dec
and
xchg
add
popf
movsl
cmp
scas
cmp
pushf
add
inc
lds
fnstcw
cmp
loopne
aam
and
les
lock
sub
jb
les
rorb
movsb
dec
mov
loopne
inc
mov
loopne
lret
inc
xor
les
les
cmpsl
inc
aas
lds
mov
xchg
mov
dec
and
inc
cld
les
xchg
lds
dec
les
test
mov
out
push
dec
xor
ud0
mov
dec
or
loopne
aam
and
mov
dec
and
xchg
xchg
xchg
sub
dec
cmp
inc
add
inc
add
iret
lcall
mov
lcall
lret
push
add
add
cmpsb
dec
cmp
mov
addl
pop
lret
inc
das
inc
aas
lds
mov
xchg
mov
dec
and
inc
cld
lret
inc
or
les
dec
xchg
lds
test
mov
out
push
xchg
xchg
xchg
scas
les
loopne
sub
pop
cmp
inc
add
dec
outsb
dec
cwtl
loopne
das
iret
dec
les
mov
addl
loopne
dec
mov
faddl
incl
cmp
cmp
loopne
dec
mov
faddl
aam
lret
inc
mov
les
loopne
dec
and
xchg
dec
mov
fmull
fcoml
dec
nop
loopne
xchg
add
pop
add
cmp
dec
mov
pushf
add
inc
sub
fistpll
cmp
loopne
aam
and
les
lock
sub
jno
les
rorb
negl
add
les
loopne
dec
cwtl
loopne
dec
and
incl
lret
inc
dec
les
loopne
inc
mov
inc
cmp
inc
xchg
inc
cmp
mov
inc
mov
and
mov
dec
and
inc
cld
lret
inc
std
dec
add
lds
test
mov
out
push
dec
xor
or
cmp
mov
and
mov
dec
and
xchg
xchg
xchg
sub
dec
cmp
inc
add
inc
add
aad
cmp
push
add
add
inc
ss
les
mov
xchg
lret
inc
mov
mov
loopne
aam
and
cmp
cmp
mov
dec
nop
loopne
xchg
sub
jo
les
loopne
les
rorb
faddl
and
lret
les
and
les
and
les
rorb
loopne
dec
test
in
xchg
dec
or
out
cmp
clc
dec
les
lret
inc
es
les
dec
nop
loopne
inc
mov
loopne
mov
inc
cmp
mov
inc
add
int
jg
les
loopne
inc
mov
dec
mov
das
dec
mov
dec
xchg
rol
adc
les
les
loopne
cmp
inc
les
loopne
aam
mov
fmuls
dec
inc
loopne
les
shlb
xchg
sub
ja
les
rorb
mov
inc
mov
dec
xchg
inc
add
rclb
in
cmp
inc
add
ret
cld
xchg
mov
das
ret
fadd
mov
inc
cmp
mov
inc
cmp
les
loopne
inc
mov
dec
add
dec
add
mov
or
dec
loopne
les
les
loopne
cmp
inc
les
loopne
dec
push
loopne
les
dec
xchg
rorb
test
dec
leave
les
dec
mov
nop
testl
les
mov
dec
and
xchg
dec
xor
fmuls
shl
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
push
mov
les
mov
les
dec
mov
dec
mov
dec
int
ljmp
aam
imul
sub
cmp
dec
xchg
shrb
call
imul
sub
cmp
dec
xor
add
int3
lods
std
imul
lods
lock
sub
cmp
dec
mov
lods
cmc
imul
dec
xor
int
call
jb
cmp
dec
xchg
shrb
cld
dec
into
lods
loopne
ret
pop
cmp
dec
mov
dec
cmp
ret
xchg
dec
add
or
or
or
or
or
scas
cmp
gs
les
xchg
xchg
gs
testl
lock
les
dec
or
pop
incl
mov
std
fdivl
test
insb
lret
inc
adc
les
pinsrw
dec
adcb
sbbb
dec
adcb
aam
lds
dec
xchg
movsb
dec
insl
mov
les
aad
dec
or
sub
cmpb
dec
lret
mov
les
add
out
cmp
int3
out
cs
add
inc
and
cs
lods
int3
dec
lret
mov
out
push
push
mov
les
aam
out
adc
xchg
int3
dec
ret
mov
out
dec
mov
les
movsb
cld
lcall
fmuls
sub
xchg
cmp
dec
xchg
enter
dec
and
xchg
dec
mov
or
cmp
mov
lock
les
inc
add
pop
scas
sti
jns
les
mov
in
test
cld
dec
cwtl
loopne
dec
cwtl
loopne
sub
loopne
cmp
mov
mov
fcoml
or
loopne
scas
cmp
popf
rclb
dec
popf
shrb
cmp
xchg
scas
aad
or
mov
loopne
aam
leave
dec
and
xchg
sub
je
les
shl
dec
mov
lock
les
inc
add
pop
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
loopne
xchg
xchg
xchg
xchg
gs
testl
mov
les
loopne
les
loopne
les
dec
dec
loopne
les
enter
pop
dec
mov
faddl
and
les
loopne
dec
nop
loopne
dec
and
pushl
lret
inc
ja
les
inc
cmp
mov
lret
jb
js
rcl
loopne
mov
rcl
xchg
int3
dec
nop
loopne
dec
mov
cmp
pushl
mov
sub
lcall
lret
inc
add
lcall
lret
inc
pop
dec
add
sbb
int3
dec
and
std
shlb
dec
nop
loopne
das
or
mov
add
cmp
das
jg
xchg
int3
inc
push
lret
dec
jecxz
les
mov
dec
and
inc
add
aam
push
mov
dec
mov
loopne
mov
fdiv
pop
das
push
dec
add
les
xchg
cld
inc
add
incl
fnstenv
inc
std
les
mov
dec
test
inc
add
and
loopne
sub
dec
dec
loopne
les
loopne
dec
test
xchg
xchg
xchg
xchg
dec
or
cmp
cmp
loopne
sub
inc
mov
call
xchg
rorb
sub
ds
inc
je
les
dec
xchg
enter
mov
aad
mov
dec
int
jb
dec
dec
cmc
rol
les
dec
or
push
mov
dec
dec
loopne
int3
enter
mov
sub
dec
inc
loopne
ds
inc
lret
ror
into
int3
or
or
inc
inc
decl
lret
inc
mov
les
loopne
xchg
dec
add
scas
les
cmp
sub
dec
add
ret
add
dec
add
add
xchg
les
xchg
rol
cltd
lods
inc
imul
dec
mov
call
cmp
and
xchg
dec
mov
xchg
add
dec
les
mov
addb
loopne
lds
push
les
loopne
sub
sbb
loopne
add
inc
les
cmp
cmp
lahf
cmp
dec
mov
faddl
mov
lret
jb
loopne
int
dec
inc
loopne
les
out
cmp
sub
dec
pop
loopne
les
loopne
dec
add
xchg
xchg
xchg
dec
or
cmp
cmp
lret
inc
stos
mov
inc
lret
shl
dec
pop
les
call
xchg
sub
out
cmp
mov
dec
pop
xor
in
repz
mov
sub
dec
pop
loopne
les
loopne
dec
mov
xchg
xchg
xchg
xchg
dec
or
cmp
inc
fadd
les
divl
dec
mov
call
xchg
sub
out
cmp
mov
dec
pop
xor
shl
inc
cmp
mov
sub
decl
lret
inc
and
lret
jb
loopne
int
sub
ds
inc
or
les
les
negl
lret
jb
enter
xchg
xchg
xchg
dec
nop
loopne
dec
mov
out
cwtl
loopne
sub
push
cmp
dec
nop
loopne
call
into
dec
inc
loopne
int3
rcr
inc
aas
mov
sub
dec
dec
loopne
les
icebp
in
cmp
sub
ds
inc
scas
inc
lret
shl
inc
mov
aad
xchg
rorb
jb
dec
dec
into
rol
les
dec
or
jb
inc
mov
into
dec
push
loopne
int3
rol
test
mov
sub
xor
jbe
inc
cmp
testl
les
loopne
les
ret
int3
enter
ret
ror
ret
lds
ret
ror
ret
movb
lret
mov
int3
mov
movl
les
faddl
lret
inc
or
les
enter
lret
inc
pop
lret
jb
loopne
les
xchg
dec
or
in
cmp
dec
or
mov
dec
pop
loopne
les
cmp
dec
and
inc
add
inc
dec
lret
jb
int
sub
xchg
sub
in
cmp
dec
pop
loopne
les
loopne
dec
mov
xchg
xchg
xchg
xchg
dec
or
aas
cmp
inc
cli
aad
aam
jp
les
fadd
mov
dec
nop
loopne
dec
or
xchg
xchg
xchg
dec
or
aas
cmp
das
clc
dec
inc
loopne
ds
inc
lret
ror
into
int3
or
push
mov
lret
jb
int
das
loopne
les
push
jecxz
cmp
loopne
inc
add
ror
bswap
int3
dec
mov
mov
les
dec
mov
movsb
testl
les
mov
aam
inc
repz
repz
repz
repz
cld
rcl
inc
aam
cld
rcl
std
rcl
std
rcl
cld
rcl
std
rcl
std
rcl
repnz
inc
aam
inc
aam
repnz
repnz
repnz
mov
ret
aad
int
iret
enter
lret
leave
leave
leave
aad
lret
aam
or
or
or
ret
gs
les
cmp
aam
add
addr16
les
loopne
dec
mov
in
mov
enter
fadd
les
mov
dec
mov
dec
ret
rorb
dec
mov
xchg
dec
mov
sub
and
cmp
mov
mov
loopne
mov
les
aam
or
or
ret
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
cmp
negl
dec
mov
dec
cwtl
loopne
sub
jo
cmp
test
and
lds
jo
cmp
dec
lcall
cld
add
dec
mov
aam
dec
leave
les
aam
or
or
decl
mov
xchg
dec
mov
js
cmp
in
mov
loopne
dec
mov
dec
nop
loopne
dec
aad
and
dec
mov
dec
nop
loopne
dec
aad
and
dec
mov
dec
nop
loopne
dec
aad
and
dec
nop
loopne
dec
xchg
rorb
dec
xchg
rorb
fmull
rorb
in
xchg
rorb
fmull
rcrb
or
or
or
xor
stos
rclb
loopne
test
loopne
xchg
sub
mov
cmp
inc
add
inc
cmp
inc
dec
les
dec
test
insb
mov
insl
mov
inc
cmp
jle
les
es
xchg
fdivl
aam
aam
leave
dec
or
mov
cmp
dec
mov
xchg
loopne
add
lds
lds
cmp
mov
jb
dec
mov
mov
shlb
dec
adc
jb
dec
cmp
cld
mov
shlb
or
cmp
fwait
lcall
dec
or
jb
cmp
aam
and
xchg
dec
or
cmp
fwait
lcall
or
or
or
or
xchg
xchg
xchg
dec
mov
and
xchg
dec
xor
cmp
mov
mov
or
xlat
out
addb
sub
push
cmp
fwait
lcall
rclb
out
inc
mov
inc
push
les
mov
lret
jb
dec
ja
cld
cwtl
aad
mov
xchg
dec
and
xchg
dec
or
cmp
loopne
xchg
dec
nop
loopne
xchg
dec
or
pop
cmp
dec
orb
aam
std
inc
mov
sahf
test
mov
orb
or
cmp
cltd
lahf
fwait
lcall
aam
int
cwtl
into
shlb
dec
orb
out
addb
sub
push
cmp
cltd
lahf
fwait
lcall
orb
dec
or
push
cmp
cltd
lahf
fwait
lcall
or
ret
gs
les
les
cmp
aam
add
loopne
xchg
xchg
xchg
xchg
gs
testl
test
les
les
loopne
dec
xor
orb
loopne
cmp
inc
inc
les
fs
aam
pop
jns
les
dec
test
clc
dec
cwtl
loopne
dec
cwtl
loopne
dec
mov
decb
mov
out
add
sub
fidivrs
cmp
mov
mov
loopne
inc
sub
dec
or
loopne
scas
cmp
popf
rclb
les
sub
leave
cmp
xchg
scas
ret
dec
or
mov
cmp
loopne
aam
leave
dec
mov
in
xchg
sub
les
shl
sub
dec
mov
lret
jb
dec
aad
jb
out
rolb
lret
inc
adc
les
fcmovne
inc
xchg
mov
inc
cs
jp
les
lds
mov
cmp
xor
aam
dec
mov
subb
mov
mov
xchg
xchg
scas
ret
dec
or
inc
loopne
rol
les
mov
test
inc
loopne
cmp
cmp
sub
xchg
cmp
testb
add
cmp
nop
dec
shll
aam
dec
dec
loopne
les
mov
inc
loopne
les
add
nop
ret
les
dec
cmp
dec
dec
loopne
les
inc
loopne
cmp
cmp
sub
xchg
cmp
testb
orb
inc
mov
iret
test
dec
orb
dec
xchg
mov
ds
gs
aam
dec
dec
loopne
les
sarl
dec
xchg
mov
xchg
orb
or
les
or
inc
loopne
ret
les
dec
cmp
dec
dec
loopne
les
inc
loopne
cmp
cmp
sub
xchg
cmp
testb
xchg
dec
orb
lret
jb
dec
std
inc
mov
inc
jp
les
in
xchg
sub
cmp
dec
inc
loopne
negl
add
mov
int
incl
mov
inc
cmp
mov
xchg
dec
dec
loopne
sub
fidivrl
cmp
jnp
les
sar
js
lock
mov
xchg
dec
dec
loopne
sub
fnstcw
cmp
dec
mov
shrl
rorb
dec
mov
fmull
loopne
xchg
sub
add
cmp
mov
in
les
inc
loopne
cmp
cmp
sub
xchg
cmp
sub
out
stos
orb
scas
sub
dec
cmp
dec
dec
loopne
add
mov
les
cmp
cmp
xchg
cmp
testb
fs
aam
dec
mov
movsb
sub
cmp
dec
xchg
mov
xchg
orb
cwtl
xchg
xchg
scas
ret
dec
or
inc
loopne
int3
les
mov
cwtl
add
mov
les
cmp
cmp
xchg
cmp
testb
rorb
loopne
es
lret
inc
sahf
mov
test
mov
cmp
mov
xor
aam
dec
mov
mov
cmp
mov
xchg
orb
mov
dec
or
inc
loopne
les
dec
cmp
dec
mov
mov
cmp
cmp
sub
xchg
cmp
testb
sub
dec
and
dec
orb
fs
aam
dec
dec
loopne
les
cmp
dec
xchg
mov
xchg
orb
je
les
or
inc
loopne
mov
les
dec
cmp
dec
dec
loopne
les
inc
loopne
cmp
cmp
sub
xchg
cmp
testb
mov
mov
jb
dec
aad
mov
int
dec
orb
dec
xchg
mov
loopne
ds
dec
leave
fs
aam
dec
dec
loopne
sub
cmp
dec
orb
loopne
xchg
xchg
scas
ret
dec
or
inc
loopne
mov
dec
cmp
dec
dec
loopne
add
mov
les
cmp
cmp
xchg
cmp
testb
xchg
dec
orb
lret
jb
dec
std
dec
cmp
clc
into
lret
inc
jns
lret
jb
negl
dec
or
rol
cwtl
loopne
mov
dec
test
in
and
lds
cmp
dec
mov
fdivr
pop
mov
cld
popf
clc
mov
dec
and
out
add
lds
dec
orb
dec
xchg
rorb
jb
inc
mov
cli
lret
jb
les
into
rolb
shrb
dec
or
mov
add
addr16
les
mov
scas
int3
test
orb
testb
stos
orb
scas
shrb
cmp
testb
dec
popf
clc
cld
cwtl
loopne
mov
int
lock
test
cmp
fs
aam
dec
dec
loopne
les
lds
cmp
mov
xchg
orb
sub
les
or
inc
loopne
rol
les
dec
cmp
dec
dec
loopne
les
inc
loopne
cmp
cmp
sub
mov
cmp
add
lret
dec
or
mov
lds
loopne
mov
les
dec
dec
loopne
testl
les
cld
push
rol
or
or
dec
and
inc
mov
xchg
mov
sub
adc
cmp
rol
jb
cmp
push
rol
or
inc
sub
xchg
dec
test
sar
test
aam
inc
pop
les
loopne
dec
mov
inc
add
dec
mov
xchg
inc
sub
inc
sub
sub
mov
insb
cmp
dec
adc
mov
inc
add
enter
jg
les
add
dec
cwtl
loopne
lcall
mov
dec
mov
dec
fisttpl
inc
pop
mov
dec
xchg
inc
or
int3
mov
dec
xlat
dec
xchg
dec
adc
int3
inc
push
cmp
add
dec
xchg
int3
dec
push
dec
adc
add
sbb
or
add
in
dec
mov
xor
and
cmp
subl
cmp
sub
dec
xchg
xor
add
xorl
mov
dec
mov
xchg
fmuls
enter
fmul
inc
repnz
cmp
loopne
cltd
inc
add
pop
or
or
or
or
or
inc
sub
dec
nop
loopne
dec
and
xchg
xchg
xchg
dec
xor
xchg
xchg
xchg
dec
and
sub
cmc
cmp
dec
or
loope
les
and
adc
sub
lods
add
sbb
mov
aam
les
loopne
inc
add
dec
mov
aam
add
xchg
dec
or
js
cmp
aam
mov
scas
arpl
les
enter
lcall
les
xchg
xchg
xchg
xchg
sub
xchg
cmp
inc
add
fwait
lcall
enter
or
inc
sub
xchg
dec
cwtl
loopne
xchg
xchg
xchg
dec
cmp
add
mov
dec
mov
aam
fisttpl
call
add
inc
or
das
dec
test
inc
mov
dec
rorl
dec
test
fmull
loopne
inc
or
fmull
inc
push
mov
call
mov
sub
les
loopne
pushl
mov
xchg
xchg
scas
lds
js
cmp
dec
and
dec
rcrb
test
lds
lahf
inc
add
push
int3
les
test
fmull
loopne
dec
or
dec
mov
aam
xchg
xchg
dec
nop
loopne
xchg
dec
or
jg
cmp
dec
and
dec
rcrb
test
lds
lahf
inc
add
push
int3
les
loopne
fwait
lcall
int3
les
lahf
inc
add
push
int3
les
or
int3
xchg
xchg
dec
xor
fmull
xchg
dec
mov
mov
cmp
int
jmp
les
loopne
std
cwtl
loopne
mov
dec
mov
loopne
lcall
sar
mov
sub
les
loopne
std
cwtl
loopne
mov
dec
mov
dec
xchg
rclb
cmp
dec
sbb
test
dec
sbb
sbb
les
dec
sbb
test
dec
sbb
int3
dec
rorb
loopne
fwait
lcall
inc
add
push
rol
dec
pusha
loopne
les
mov
mov
sub
popa
les
loopne
dec
cwtl
loopne
lcall
dec
mov
fsubrs
idivl
cmp
rclb
cmp
dec
mov
dec
repnz
and
fwait
dec
hlt
lcall
int3
push
rol
or
inc
sub
xchg
dec
cwtl
loopne
xchg
dec
sub
dec
mov
inc
mov
je
xchg
dec
test
fmull
loopne
dec
and
mov
dec
pusha
loopne
les
loopne
dec
stos
in
mov
aam
rorl
das
dec
xchg
aam
mov
or
cmp
mov
dec
xchg
das
dec
xchg
xchg
xchg
xchg
sub
mov
cmp
enter
cmp
das
ret
testl
inc
add
pop
add
and
inc
add
rorb
dec
mov
inc
mov
dec
test
fmull
loopne
dec
mov
dec
ss
cmp
dec
mov
mov
dec
sbb
mov
cmp
pusha
les
loopne
dec
mov
fdivr
adc
lds
jg
cmp
dec
and
dec
rcrb
rolb
int3
lds
int3
les
idivb
cmp
loopne
dec
mov
dec
xchg
rorb
enter
xchg
das
dec
xchg
xchg
dec
xchg
rclb
inc
cmp
inc
add
dec
and
dec
mov
rclb
loopne
xchg
das
push
dec
and
dec
cld
fwait
dec
mov
lcall
inc
add
push
int3
les
or
or
or
or
inc
sub
xchg
xchg
dec
xor
fmull
xchg
dec
mov
mov
cmp
int
sub
les
loopne
std
cwtl
loopne
mov
dec
mov
loopne
lcall
sar
mov
sub
addr16
les
loopne
std
cwtl
loopne
mov
dec
mov
dec
xchg
rclb
cmp
dec
sbb
test
dec
sbb
sbb
les
dec
sbb
test
dec
sbb
int3
dec
rorb
loopne
fwait
lcall
inc
add
push
rol
dec
pusha
loopne
les
mov
mov
sub
addr16
les
loopne
dec
cwtl
loopne
lcall
dec
mov
fsubrs
cmc
cmp
xchg
xchg
dec
and
xchg
dec
or
pop
cmp
dec
mov
dec
repnz
and
fwait
dec
hlt
lcall
int3
push
rol
or
inc
mov
dec
xchg
aam
xchg
enter
mov
ds
dec
push
add
mov
sub
pop
cmp
dec
xchg
aam
xchg
enter
mov
ds
xchg
dec
mov
int3
dec
push
add
mov
pushl
lret
mov
lret
lcall
lcall
or
cmp
sub
xchg
xchg
xchg
dec
xor
inc
mov
cwtl
loopne
dec
mov
fdivs
sbb
cltd
lahf
dec
and
test
dec
int3
dec
mov
test
loopne
xchg
dec
cmovge
mov
cmp
les
dec
pushf
rorb
hlt
dec
cwtl
loopne
mov
sub
pop
cmp
scas
cmp
sub
cmp
cmp
int3
dec
test
dec
nop
loopne
dec
and
std
test
in
mov
sub
data16
testl
sub
data16
les
inc
cmp
mov
incl
mov
incl
sub
data16
les
loopne
std
xchg
shlb
mov
sub
push
cmp
dec
mov
in
dec
lds
add
dec
or
cmp
cmp
dec
xchg
rorb
test
dec
nop
loopne
dec
test
fmull
loopne
dec
test
rorb
loopne
sub
cmc
cmp
inc
add
inc
rol
les
loopne
dec
and
inc
add
inc
aaa
les
gs
testl
sub
gs
les
inc
cmp
mov
inc
add
ret
loopne
mov
sub
gs
les
loopne
std
add
inc
and
les
lret
inc
jp
les
gs
testl
sub
gs
les
inc
cmp
mov
inc
add
ret
loopne
mov
sub
gs
les
loopne
std
pop
lret
inc
dec
mov
dec
and
inc
add
inc
inc
les
gs
testl
sub
gs
les
les
mov
in
testl
sub
gs
les
nop
mov
dec
and
inc
add
xchg
sub
fs
testl
sub
fs
les
imul
mov
sub
fs
testl
sub
fs
les
les
dec
les
dec
ret
cmp
cmp
sub
dec
ret
dec
les
jne
ret
inc
xor
inc
pop
sub
fs
testl
sub
fs
les
inc
cmp
mov
inc
add
ret
loopne
mov
sub
fs
les
loopne
std
xchg
ror
xchg
mov
dec
and
inc
add
inc
dec
sub
fs
testl
sub
fs
les
dec
mov
inc
cmp
mov
inc
add
ret
loopne
mov
sub
fs
out
mov
orb
hlt
dec
cmp
loopne
inc
add
inc
xchg
sub
fs
testl
sub
fs
les
dec
mov
inc
cmp
mov
inc
add
ret
loopne
mov
sub
pop
out
mov
orb
sub
dec
adc
dec
call
mov
in
sub
in
cmp
dec
mov
dec
mov
in
sub
in
cmp
dec
mov
dec
aam
xchg
xchg
xchg
sub
std
cmp
inc
add
dec
mov
hlt
dec
and
sub
in
cmp
dec
mov
dec
mov
hlt
sub
in
cmp
dec
mov
dec
aam
xchg
xchg
xchg
sub
cld
cmp
inc
add
dec
and
std
and
lret
inc
or
les
loopne
sub
in
cmp
inc
mov
dec
mov
hlt
sub
in
cmp
inc
mov
les
loopne
sub
in
cmp
inc
mov
dec
mov
hlt
sub
in
cmp
inc
mov
out
les
loopne
cmp
mov
sub
pop
testl
mov
ficomps
les
loopne
inc
add
dec
mov
mov
sub
pop
testl
sub
pop
les
loopne
inc
pop
rorb
loopne
sub
ljmp
lret
inc
sarl
cmp
das
jecxz
ret
cmp
cmp
sub
dec
les
dec
les
pop
dec
ret
add
imull
dec
mov
aam
mov
jl
mov
add
add
inc
cmp
mov
testl
std
and
mov
ljmp
dec
and
xchg
dec
or
lcall
dec
mov
in
mov
fdivrl
in
inc
add
mov
add
mov
call
shrl
aam
mov
dec
and
inc
add
jmp
repnz
testl
sub
pop
les
lds
loopne
dec
or
lcall
dec
les
jno
les
adc
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
loopne
xchg
xchg
xchg
xchg
gs
testl
mov
les
loopne
dec
negl
dec
xor
dec
mov
testl
incb
mov
scas
in
lret
les
mov
in
mov
cld
dec
cwtl
loopne
dec
cwtl
loopne
sub
int
cmp
loopne
xchg
dec
mov
clc
dec
cwtl
loopne
sub
jnp
cmp
and
xor
aam
mov
and
mov
dec
nop
loopne
xchg
sub
push
les
rorb
cld
xchg
dec
mov
lock
cwtl
loopne
dec
cwtl
loopne
sub
pop
cmp
dec
test
mov
lcall
cli
cmp
dec
cmp
incl
mov
dec
test
das
testl
inc
and
mov
mov
in
insl
mov
inc
mov
fsub
aam
stc
les
vcomiss
int
mov
mov
rcrb
les
rorb
lock
incl
mov
dec
nop
loopne
xchg
dec
or
push
das
cmp
das
testl
loopne
cmp
cmp
dec
add
aas
mov
dec
or
das
cmp
xchg
sub
push
les
rorb
dec
or
rorl
mov
dec
xchg
clc
dec
pop
push
les
pop
les
dec
dec
xchg
dec
adc
inc
lds
dec
mov
mov
mov
les
dec
mov
mov
or
push
les
cwtl
push
int3
les
or
or
or
or
or
or
int3
xchg
xchg
xchg
dec
xor
mov
xchg
xchg
dec
mov
sub
cmp
cmp
orb
lods
rorb
dec
mov
xchg
sub
cmp
cmp
int3
dec
xchg
enter
aam
nop
loopne
dec
pop
les
cmp
ret
loopne
mov
sub
pop
ljmp
loope
les
fadds
cmp
sar
shlb
les
in
sbb
inc
cmp
sbb
cmp
mov
inc
add
shrl
les
fadds
mov
dec
mov
das
dec
mov
dec
xchg
rol
adc
shrl
les
les
in
les
lret
jb
dec
lds
aam
das
dec
sbb
cmp
mov
inc
cmp
les
mov
dec
add
dec
add
mov
or
sub
pop
les
les
les
dec
into
lret
jb
dec
inc
sbb
mov
loope
cmp
les
mov
dec
add
dec
add
xchg
rol
adc
cs
sub
pop
les
fadds
in
inc
add
shrl
les
fadds
mov
dec
mov
das
dec
mov
dec
test
movl
les
and
add
cmp
fwait
lcall
int3
pop
dec
mov
dec
xchg
sbbb
add
pop
or
or
or
or
or
inc
sub
xchg
dec
xor
cmp
mov
inc
add
sar
shlb
les
in
sbb
ret
testb
add
pop
lret
jb
nop
dec
xchg
clc
dec
dec
xchg
rclb
xchg
dec
and
dec
mov
xchg
dec
xchg
adcb
sbb
cmp
loopne
inc
cmp
mov
inc
cmp
mov
sub
pop
les
loopne
incl
xchg
orb
dec
mov
fwait
dec
mov
add
pop
fwait
testb
add
pop
or
or
or
or
or
or
or
xchg
dec
xor
dec
mov
mov
inc
add
sar
shlb
les
in
incl
pop
enter
dec
inc
enter
inc
daa
lds
sbb
cmp
mov
inc
add
shrl
les
fadds
mov
dec
mov
das
dec
mov
dec
xchg
rol
adc
shrl
les
in
jb
dec
cwtl
std
enter
inc
daa
lds
cmp
shrl
les
fadds
mov
dec
mov
das
dec
mov
dec
xchg
rol
adc
shrl
les
in
jb
dec
cmp
adc
loopne
inc
pop
lahf
mov
inc
add
iret
dec
xchg
int3
xchg
dec
or
pop
cmp
dec
addb
mov
inc
add
iret
dec
xchg
int3
fwait
dec
xchg
xorb
fwait
testb
or
or
inc
sub
xchg
xchg
dec
xor
dec
mov
mov
inc
add
sar
shlb
les
in
sbb
fimuls
enter
dec
pop
enter
inc
lds
lret
adc
les
fdivrs
les
cmp
shrl
les
fdivr
pushf
fdivl
das
dec
mov
dec
xchg
rol
adc
shrl
les
in
jb
dec
cmp
loopne
dec
and
dec
sbb
cmp
mov
inc
add
shrl
les
fdivr
pushf
fdivl
das
dec
mov
dec
xchg
rol
adc
shrl
les
in
jb
dec
cwtl
std
enter
lret
adc
dec
dec
pop
les
inc
std
shll
std
test
mov
dec
mov
dec
push
fadd
les
pushf
xchg
xchg
dec
or
push
cmp
dec
nop
loopne
dec
inc
rol
les
mov
loopne
mov
dec
sbb
cmp
mov
inc
add
sar
aam
int
adc
les
loopne
dec
mov
decl
inc
add
int
and
dec
or
fmuls
aam
and
adc
mov
cltd
decl
lret
inc
dec
les
les
rol
mov
inc
mov
decl
mov
inc
push
mov
inc
pop
mov
dec
xchg
int3
xchg
dec
or
adc
pushf
cmp
dec
addb
add
pop
inc
pop
mov
dec
mov
fwait
dec
mov
inc
add
pop
inc
pop
mov
decl
mov
inc
push
mov
dec
xchg
rclb
cmp
dec
or
dec
addb
add
pop
decl
mov
inc
push
mov
cmp
dec
mov
inc
add
pop
fwait
lcall
pop
or
inc
sub
xchg
xchg
xchg
xchg
dec
cmp
jl
les
rorb
in
dec
mov
loopne
in
orl
inc
mov
dec
push
rol
les
and
lds
loopne
das
lret
dec
inc
aam
les
and
les
loopne
dec
xchg
in
adc
mov
dec
stos
fmull
fmuls
loopne
dec
nop
loopne
dec
push
inc
cmp
mov
inc
add
sar
mov
sub
push
out
das
dec
test
fmuls
loopne
std
test
shlb
fmuls
xchg
dec
mov
hlt
sub
pop
cmp
dec
lret
rorb
hlt
dec
mov
fmuls
loopne
das
dec
les
inc
cmp
mov
inc
add
ret
loopne
mov
sub
push
std
lcall
nop
dec
cmp
les
fcoml
dec
adc
dec
rclb
clc
dec
mov
call
cmp
dec
ret
cmp
sar
les
les
sar
shlb
cmp
shrl
les
inc
mov
dec
mov
das
dec
mov
dec
xchg
rol
adc
shrl
les
add
lods
cmp
cmp
dec
stos
rolb
mov
inc
add
ret
loopne
mov
sub
push
out
test
in
cwtl
loopne
dec
add
inc
aam
les
testb
add
pop
inc
mov
mov
les
mov
dec
lret
rorb
dec
xchg
in
dec
or
dec
aam
les
dec
lret
xchg
xchg
xchg
xchg
dec
or
adc
cmp
int3
dec
xchg
sbbb
inc
add
pop
incl
mov
dec
mov
dec
shrb
xchg
dec
or
adc
cmp
int3
dec
addl
mov
inc
add
sar
shlb
les
sar
fdivl
fwait
inc
and
lcall
lahf
inc
add
pop
dec
or
lds
cmp
jb
lret
jb
fmulp
adc
lds
push
add
inc
add
pop
inc
sub
dec
test
inc
push
int3
inc
jl
les
rorb
loopne
dec
nop
loopne
mov
xor
les
les
add
iret
dec
pop
aam
les
and
les
fmuls
in
mov
dec
and
dec
test
dec
lret
cwtl
loopne
dec
nop
loopne
dec
cs
cmp
mov
inc
add
sar
mov
sub
push
out
cmp
loopne
dec
and
lcall
mov
dec
and
dec
les
push
sbb
dec
xchg
rorb
hlt
dec
mov
fmuls
loopne
jnp
les
inc
cmp
mov
inc
add
ret
loopne
mov
sub
push
std
stos
ror
dec
les
inc
cmp
mov
inc
add
shrl
les
std
mov
mov
das
dec
mov
dec
test
movl
les
loopne
inc
mov
rorb
lret
dec
xchg
test
lret
jb
dec
inc
lret
jb
dec
and
inc
clc
mov
decb
inc
cmp
mov
inc
add
shrl
les
std
mov
mov
das
dec
mov
dec
xchg
rol
adc
shrl
les
add
xchg
cmp
cmp
loopne
dec
ret
rcrb
inc
add
ret
loopne
mov
sub
push
out
mov
dec
mov
aam
les
add
inc
add
pop
inc
mov
addl
les
mov
dec
lret
rorb
dec
xchg
in
dec
or
dec
aam
les
dec
lret
xchg
xchg
xchg
xchg
dec
cvttps2pi
or
cmp
int3
fwait
lcall
inc
add
pop
incl
mov
dec
mov
dec
shrb
xchg
dec
cvttps2pi
cmp
dec
or
xchg
cmp
sar
shlb
les
sar
fdivl
inc
and
fwait
inc
add
lret
push
add
inc
add
pop
dec
or
jb
lret
jb
dec
adc
fwait
inc
add
lret
push
add
inc
add
pop
or
or
or
or
inc
sub
dec
test
les
rorb
xchg
xchg
xchg
dec
mov
rorb
loopne
dec
nop
loopne
mov
xor
les
les
add
iret
dec
pop
aam
les
and
les
fmuls
in
mov
dec
and
dec
test
dec
lret
cwtl
loopne
dec
nop
loopne
dec
cs
cmp
mov
inc
add
sar
mov
sub
push
out
cmp
loopne
dec
and
lcall
mov
dec
and
dec
les
icebp
adc
cmp
dec
xchg
rorb
call
dec
nop
loopne
jnp
les
inc
cmp
mov
inc
add
ret
loopne
mov
sub
push
std
stos
ror
dec
les
inc
cmp
mov
inc
add
shrl
les
std
mov
mov
das
dec
mov
dec
test
movl
les
loopne
inc
mov
rorb
lret
dec
xchg
test
lret
jb
dec
inc
incb
dec
ret
cmp
shrl
les
std
mov
mov
das
dec
mov
dec
xchg
rol
adc
shrl
les
add
popf
cmp
cmp
loopne
dec
ret
rcrb
inc
add
ret
loopne
mov
sub
push
out
mov
dec
mov
aam
les
add
inc
add
pop
inc
mov
addl
les
mov
dec
lret
rorb
dec
xchg
in
dec
or
dec
aam
les
dec
lret
xchg
xchg
xchg
xchg
dec
cvttps2pi
cmp
int3
fwait
lcall
inc
add
pop
incl
mov
dec
mov
dec
shrb
xchg
dec
cvttps2pi
cmp
dec
or
xchg
cmp
sar
shlb
les
sar
fdivl
inc
and
fwait
inc
add
lret
push
add
inc
add
pop
dec
or
cmp
cmp
jb
lret
jb
dec
adc
fwait
inc
add
lret
push
add
inc
add
pop
or
or
or
or
or
or
or
or
xchg
dec
mov
negl
std
pop
aam
les
stos
subb
cmp
inc
add
inc
inc
les
les
les
rol
mov
inc
mov
lcall
mov
dec
or
subb
cmp
inc
add
int
lcall
mov
inc
jnp
les
mov
dec
sbb
mov
dec
and
mov
dec
pop
out
push
aam
les
dec
mov
scas
ret
xchg
xchg
xchg
xchg
dec
or
push
cmp
dec
xchg
int3
fwait
dec
xchg
sbbb
fwait
lcall
pop
rol
les
dec
mov
scas
int3
xchg
xchg
xchg
xchg
dec
or
push
cmp
dec
xchg
int3
dec
lcall
inc
cmp
mov
inc
add
sar
shlb
les
sar
fdivl
inc
and
inc
cmp
add
pop
dec
cvttps2pi
jb
lret
jb
std
enter
and
inc
cmp
add
pop
or
or
or
or
xchg
xchg
dec
xor
pushf
int3
inc
aas
lret
jecxz
les
lahf
pop
inc
pop
mov
jecxz
les
dec
int
aad
xchg
cmp
sbb
mov
xchg
sub
das
cmp
dec
mov
test
dec
xchg
sbbb
cmp
aas
inc
cmp
jecxz
les
dec
int3
dec
aad
xchg
cmp
cmp
push
dec
out
push
dec
les
mov
mov
rorl
sub
movl
cmpb
std
cld
mov
inc
pop
mov
dec
mov
dec
xchg
sbbb
mov
dec
xchg
sbbb
or
or
or
or
or
or
or
rolb
fadd
xchg
xchg
dec
cmp
les
loopne
mov
inc
add
dec
imul
fwait
je
cltd
inc
add
push
rol
or
and
dec
test
xchg
dec
addl
mov
dec
and
dec
rorb
aam
add
push
dec
mov
aam
fwait
rolb
cmp
sar
mov
sub
dec
les
sar
ror
cmp
lret
jb
nop
dec
xchg
clc
dec
dec
xchg
rclb
xchg
dec
rclb
call
sub
or
cmp
dec
ret
cmp
sar
les
les
sar
ror
test
les
inc
cmp
mov
inc
add
shrl
les
inc
mov
dec
mov
das
dec
mov
dec
xchg
rol
adc
shrl
loopne
dec
test
in
jge
lds
movl
loopne
incl
mov
dec
ret
cmp
sar
mov
sub
dec
les
sar
shlb
cmp
shrl
les
inc
mov
dec
mov
das
dec
mov
dec
test
movl
les
ror
aad
sub
lret
inc
sarl
cmp
loopne
dec
and
inc
jl
les
aam
dec
rol
les
add
xchg
loopne
sub
ret
cmp
sar
mov
sub
dec
les
sar
shlb
shlb
orl
xchg
dec
or
cmp
cmp
mov
dec
xchg
call
mov
add
rolb
xchg
lds
loopne
xor
mov
les
je
cltd
inc
add
push
rol
inc
pop
rcrb
cltd
inc
add
push
rol
and
dec
mov
in
incl
mov
inc
inc
pop
rorb
sub
cmp
cmp
jb
dec
and
xor
ficomps
cltd
inc
add
push
rol
add
enter
dec
xchg
aam
and
dec
mov
lcall
add
inc
add
push
rol
scas
cmp
gs
les
gs
testl
shlb
les
dec
jae
les
xchg
dec
mov
enter
les
cmp
dec
jae
les
xchg
dec
mov
enter
aam
and
les
mov
dec
mov
in
dec
nop
loopne
dec
and
dec
mov
xchg
dec
mov
add
lret
les
shrb
pop
les
loopne
mov
les
rolb
enter
or
or
or
ret
gs
les
ret
aam
add
addr16
les
dec
mov
int3
dec
mov
add
fsubrs
aam
outsb
dec
cmp
dec
and
add
mov
dec
aam
xchg
fmuls
shl
dec
mov
rorb
in
add
sarb
les
add
dec
mov
dec
dec
mov
les
mov
les
add
les
nop
add
xchg
dec
cmp
dec
add
loopne
mov
les
push
rol
or
loopne
inc
sub
incl
push
les
fcoms
dec
mov
das
rorb
fmuls
les
dec
xchg
rclb
add
dec
cmp
dec
cmp
mov
inc
add
enter
jg
les
add
dec
cwtl
loopne
lcall
mov
dec
mov
dec
fimull
inc
pop
mov
dec
xchg
inc
or
int3
mov
dec
xlat
dec
xchg
dec
adc
int3
inc
push
cmp
add
dec
xchg
int3
dec
push
dec
cmp
add
addl
out
dec
mov
dec
mov
xchg
fmuls
and
in
subb
loopne
mov
dec
xchg
in
dec
xchg
xor
sub
xorb
mov
dec
mov
and
dec
xchg
mov
xchg
dec
xchg
enter
dec
and
incl
cmp
cmp
add
pop
or
inc
xor
movsb
dec
cmp
xchg
sub
inc
les
rcrb
or
ret
gs
les
les
enter
testl
cld
mov
les
cmp
dec
stos
ror
lret
dec
add
shl
inc
add
dec
cwtl
loopne
inc
cmp
lret
inc
fwait
ret
lret
jb
sub
rcl
loopne
push
scas
rcl
lds
dec
or
sbb
cmp
scas
int3
subl
mov
out
cmp
scas
int3
subl
mov
out
cmp
scas
int3
subl
mov
out
cmp
scas
int3
subl
mov
out
cmp
scas
int3
subl
mov
out
cmp
scas
int3
subl
mov
out
cmp
scas
int3
subl
mov
out
cmp
dec
or
mov
rol
dec
or
out
cmp
scas
int3
subl
mov
out
cmp
scas
int3
subl
mov
out
cmp
ja
dec
cwtl
loopne
dec
add
mov
incl
mov
lods
adc
dec
dec
loopne
sub
sbb
cmp
mov
mov
xchg
xchg
scas
rorl
inc
loopne
les
lods
cmp
dec
dec
loopne
add
test
les
cmp
cmp
ljmp
rol
lret
jb
dec
mov
inc
mov
inc
push
les
ret
les
mov
jb
dec
xchg
les
rcl
int
dec
mov
and
mov
adc
ret
dec
loopne
sub
sbb
cmp
mov
addb
les
or
inc
loopne
mov
les
mov
loopne
add
test
les
cmp
cmp
jmp
sub
dec
mov
dec
mov
xchg
xchg
dec
or
stos
cmp
dec
cwtl
loopne
das
lret
dec
xchg
lds
int
cmp
cmp
cmp
fsubrs
adc
cmp
inc
loopne
mov
mov
add
mov
loopne
xchg
dec
or
and
les
sbb
cmp
lret
inc
mov
les
mov
addb
les
mov
mov
cmp
mov
xchg
orb
mov
xchg
scas
rorb
inc
loopne
rol
les
mov
loopne
add
test
les
cmp
cmp
call
sub
dec
ret
loopne
mov
lret
inc
test
scas
les
sub
in
cmp
test
aas
cmp
cmp
dec
xchg
loopne
rolb
dec
xchg
enter
dec
mov
les
mov
out
adc
es
adc
orb
dec
ret
loopne
mov
lret
inc
sbb
les
orb
jl
insl
ret
orb
lds
loopne
les
test
mov
out
push
dec
dec
mov
aam
mov
cmp
orl
dec
lcall
mov
test
mov
dec
mov
dec
lcall
loopne
les
mov
pop
mov
dec
ror
xor
aam
dec
dec
loopne
les
sbb
cmp
mov
mov
les
add
mov
les
dec
loopne
les
inc
loopne
cmp
cmp
sub
out
cmp
testb
jb
dec
mov
inc
mov
movsb
test
mov
pop
mov
gs
xchg
dec
dec
loopne
les
sbb
cmp
mov
xchg
orb
push
les
or
inc
loopne
ret
les
dec
loopne
les
inc
loopne
cmp
cmp
sub
out
cmp
testb
and
lds
mov
lret
push
add
inc
or
orb
enter
xchg
dec
dec
loopne
les
sbb
cmp
mov
xchg
orb
push
xchg
scas
rorl
inc
loopne
ret
les
mov
loopne
les
inc
loopne
cmp
cmp
sub
out
cmp
testb
orb
loopne
xchg
xchg
dec
and
sub
in
cmp
inc
add
inc
cmp
dec
adc
pop
mov
dec
les
mov
jb
dec
mov
inc
mov
int
dec
orb
dec
mov
lds
cmp
dec
stos
mov
das
rorb
faddl
rol
mov
dec
adcb
cmp
dec
jbe
les
cmp
les
es
xchg
fmul
inc
pop
les
or
mov
fidivrl
cmp
int3
dec
lret
loopne
rolb
inc
mov
xchg
enter
lret
inc
jmp
stos
mov
lret
jb
les
inc
mov
int
dec
stos
mov
dec
ror
xor
aam
dec
dec
loopne
les
pop
aas
cmp
mov
mov
les
add
mov
int3
les
cmpsl
cmp
dec
dec
loopne
les
inc
loopne
cmp
cmp
sub
in
cmp
testb
xchg
mov
xchg
orb
scas
ret
mov
sub
dec
ret
loopne
mov
lret
inc
inc
les
les
lds
scas
cmp
dec
cmp
cmp
fsubrs
inc
loopne
les
mov
add
mov
loopne
xchg
dec
or
and
les
sbb
mov
dec
xchg
mov
xchg
adcb
add
loopne
sub
mov
cmp
add
jmp
orb
mov
fisttpl
sub
dec
cmp
lret
jb
xchg
das
iret
dec
or
dec
cmp
lret
jb
xchg
dec
or
fidivrl
cmp
dec
loopne
mov
les
inc
add
pop
dec
cmp
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
scas
rcl
rol
ret
int3
rcl
rcl
rcl
ror
rcl
rcl
rcl
rcl
rcl
rcl
rcl
into
iret
enter
lret
aam
aad
xlat
or
or
or
or
or
or
or
ret
gs
les
xchg
xchg
gs
testl
push
les
les
jnp
lds
incl
les
aam
ret
aam
pop
jns
les
dec
test
lock
cwtl
loopne
dec
cwtl
loopne
dec
mov
int3
test
cmpxchg
dec
mov
loopne
mov
aas
cmp
mov
mov
fcoms
or
loopne
scas
cmp
popf
rclb
les
sub
and
cmp
sub
xchg
cmp
loopne
aam
leave
dec
mov
in
sub
mov
shl
sub
dec
mov
cld
sub
or
cmp
mov
loopne
les
loopne
dec
and
incl
pop
das
ret
les
mov
ror
aam
in
lret
jb
out
rolb
inc
ds
mov
cmp
push
cwtl
stos
rcl
and
lret
inc
pinsrw
test
and
lds
mov
loopne
das
sar
and
lret
inc
js
les
loopne
xchg
dec
or
adc
cmp
mov
xchg
mov
incl
cld
lret
push
pop
sub
mov
cmp
dec
dec
loopne
les
les
inc
add
les
dec
nop
loopne
xchg
dec
or
adc
mov
dec
mov
cld
sub
mov
cmp
or
lret
jb
dec
int
nop
into
rolb
fisttps
lds
cmp
incl
mov
int
loopne
lds
mov
inc
inc
shll
xchg
xchg
sub
mov
mov
int
loopne
lds
mov
cltd
cmp
cmp
mov
xchg
sub
lds
loopne
mov
dec
and
xchg
dec
or
arpl
cmp
enter
clc
xchg
dec
or
pop
cmp
incl
lret
inc
scas
cmp
cmp
mov
xchg
orb
scas
shrb
cmp
dec
mov
cld
sub
stos
cmp
testb
cmp
test
rcl
test
rcl
test
rcl
test
rcl
test
lods
mov
ret
gs
les
cmp
aam
add
loopne
xchg
xchg
xchg
xchg
gs
testl
dec
les
les
loopne
les
dec
or
mov
fmull
shrl
inc
cmp
negl
dec
pop
loopne
aas
lret
inc
aas
les
aam
ret
inc
add
inc
cmp
lret
inc
sbb
lret
jb
lock
aam
loopne
loopne
rcl
xchg
int3
dec
xchg
enter
les
enter
hlt
xchg
dec
mov
fmuls
lock
mov
push
cmp
sub
dec
xchg
rclb
cmp
incl
dec
or
dec
push
les
std
pushf
in
mov
add
dec
ret
call
hlt
dec
shlb
xchg
rol
stos
scas
xchg
mov
test
and
lret
les
loopne
add
fwait
cs
cmp
loopne
xchg
dec
mov
movsb
add
pop
lds
popf
les
loopne
add
push
sub
cltd
les
loopne
sub
data16
cmp
inc
loopne
std
test
xchg
mov
dec
mov
clc
xchg
sub
mov
les
rorb
aas
lret
inc
int3
cmp
cmp
loopne
dec
mov
loopne
adc
adc
cmp
lret
inc
adc
les
decl
shrl
les
loopne
dec
cmp
sub
loopne
inc
add
shrl
mov
dec
cmp
mov
mov
inc
cmp
ret
das
sub
cmp
mov
mov
sub
mov
cmp
sub
inc
sbb
les
mov
mov
pop
mov
loopne
dec
ret
out
mov
loopne
or
mov
cmp
cmp
in
int3
scas
dec
imul
les
and
xchg
rorb
xchg
xchg
dec
or
add
cmp
dec
and
and
or
xchg
dec
or
add
cmp
aaa
cmp
dec
ret
dec
and
dec
mov
loopne
adc
adc
cmp
lret
inc
call
pop
dec
and
dec
or
cmpxchg
xchg
sub
mov
les
rorb
fcoml
dec
cwtl
loopne
dec
cwtl
loopne
sub
mov
les
rorb
dec
les
les
dec
mov
mov
or
mov
les
inc
les
rol
add
cmp
stos
rcl
stos
rcl
stos
rcl
stos
rcl
mov
vshufps
dec
nop
loopne
xchg
dec
cwtl
loopne
xchg
dec
mov
fcoml
testb
loopne
dec
mov
aam
and
dec
and
xchg
xchg
xchg
xchg
xchg
xchg
sub
pop
cmp
out
aaa
jl
mov
add
add
dec
rolb
inc
add
dec
or
add
inc
add
pop
or
or
scas
cmp
gs
les
enter
testl
aam
addr16
les
dec
mov
enter
cmp
dec
and
xchg
dec
mov
lret
xchg
dec
mov
add
les
cmpb
dec
add
loopne
mov
les
pop
or
or
scas
cmp
gs
les
ret
aam
add
addr16
les
dec
mov
int3
dec
mov
add
les
inc
cmp
dec
or
and
cmp
cmp
sub
cmpl
enter
les
pop
or
or
or
or
dec
and
xchg
xchg
xchg
dec
mov
rorb
dec
lret
inc
add
sar
mov
sub
mov
loopne
dec
mov
in
or
inc
inc
les
inc
add
mov
les
loopne
testl
les
loopne
dec
repnz
mov
sar
sub
sar
mov
sub
mov
loopne
dec
mov
rorb
loopne
std
nop
loopne
mov
inc
or
mov
sub
mov
loopne
dec
mov
sar
mov
fdivl
loopne
les
xchg
dec
and
xchg
xchg
xchg
dec
or
fwait
lcall
das
dec
or
or
or
scas
cmp
gs
les
les
enter
testl
adc
les
les
cmp
dec
lcall
mov
dec
mov
mov
lret
jb
dec
aad
mov
xlat
cmp
dec
ret
lret
jb
dec
xchg
rorb
mov
sub
out
mov
les
ror
int3
dec
out
dec
mov
rolb
fdivr
pop
mov
dec
int3
test
dec
test
or
mov
je
sub
negl
scas
aam
dec
or
loopne
sub
sarl
cmp
dec
sub
xchg
add
dec
or
mov
les
out
push
dec
mov
call
mov
cwtl
dec
push
dec
push
mov
out
adc
es
adc
les
dec
dec
mov
out
dec
mov
les
mov
mov
lock
mov
dec
mov
hlt
dec
mov
fisttpl
fimull
pushf
dec
mov
pushf
dec
mov
rolb
nop
cmp
cmp
dec
fisttps
loopne
dec
aad
cwtl
loopne
lret
jb
lret
jb
xlat
rorb
inc
ds
inc
mov
jb
int3
inc
rcl
loopne
adc
aam
adcb
cltd
int3
cmp
dec
cwtl
loopne
sub
dec
orb
fnstcw
cmp
inc
pop
mov
add
jb
dec
les
rol
inc
pop
iret
les
lret
dec
ret
dec
mov
lret
jb
dec
int
cld
nop
iret
shlb
dec
mov
dec
int
sbb
jb
cld
nop
iret
shlb
aam
dec
loopne
les
adc
cmp
out
mov
xchg
xchg
scas
rorb
add
and
les
popf
cmp
dec
mov
mov
les
cmp
cmp
fstpt
cmp
dec
ret
dec
xchg
mov
dec
ret
sub
fdivrs
cmp
inc
pop
mov
add
jb
dec
les
rol
int3
lcall
cmp
dec
ret
dec
mov
lret
jb
dec
int
cld
cwtl
into
shlb
dec
mov
dec
int
adc
jb
cld
cwtl
into
shlb
aam
mov
mov
cmp
out
mov
xchg
xchg
scas
rorb
dec
pop
loopne
les
pushf
cmp
dec
mov
movsb
add
sbb
les
cmp
cmp
fidivrl
cmp
dec
ret
dec
xchg
mov
dec
ret
sub
fdivrs
cmp
mov
or
mov
cmp
dec
ret
incl
into
les
rorb
fnstsw
cld
mov
ror
pop
lret
out
add
rorb
adc
jb
cld
mov
shlb
les
xchg
out
sbb
inc
pop
lret
dec
fcmovne
les
lret
dec
ret
dec
mov
lret
jb
dec
int
mov
fimuls
les
dec
int
adc
jb
inc
mov
sub
dec
loopne
les
or
cmp
out
mov
les
add
and
mov
les
dec
loopne
les
inc
loopne
les
cmp
cmp
fnstcw
cmp
inc
scas
enter
cmp
scas
aam
or
loopne
sub
cmp
dec
lret
mov
les
mov
les
loopne
dec
inc
mov
out
adc
push
movl
push
mov
les
dec
dec
mov
out
mov
dec
mov
jg
cmp
cmp
popa
dec
roll
mov
dec
ret
lret
jb
dec
int
into
shlb
lret
dec
ror
jb
dec
xchg
rorb
adc
mov
dec
ret
sub
lret
jb
dec
int
mov
rolb
ret
jg
cmp
cmp
int3
inc
cmp
scas
enter
cmp
scas
aam
or
loopne
sub
aad
cmp
out
inc
mov
les
or
loopne
sub
aad
cmp
dec
dec
mov
les
mov
out
adc
es
adc
clc
cmp
cmp
cli
dec
shrl
jg
cmp
cmp
jg
cmp
cmp
int3
cmp
dec
lret
dec
orb
mov
dec
test
dec
ret
lret
jb
dec
add
int3
inc
mov
xlat
cmp
dec
ror
jb
dec
mov
dec
aad
mov
sub
sub
dec
mov
scas
into
xchg
xchg
sub
fnstsw
cmp
dec
aad
sub
ds
lret
inc
xchg
dec
xchg
mov
mov
dec
xchg
rorb
dec
ret
lret
jb
dec
movb
lds
les
lret
dec
lret
lret
jb
dec
add
int3
inc
mov
sub
out
xchg
adcb
inc
std
loop
mov
dec
mov
loopne
lret
decl
mov
dec
cmp
rorb
ret
lret
jb
inc
mov
int3
test
incl
mov
loopne
ret
incl
mov
dec
xchg
rorb
inc
mov
inc
ss
les
loopne
les
jb
dec
mov
dec
int
mov
sub
xchg
xchg
sub
lret
cmp
inc
add
das
enter
scas
into
xchg
xchg
sub
fnstsw
cmp
fisttps
xor
sub
aam
cmp
mov
imull
dec
lods
int3
dec
ret
dec
mov
lret
jb
dec
aad
mov
call
jb
dec
int
mov
inc
mov
dec
ret
dec
adc
jb
dec
xchg
rorb
mov
sub
test
incl
ret
les
dec
int
mov
xlat
cmp
dec
ror
jb
dec
mov
dec
aad
mov
sub
sub
inc
jecxz,pt
inc
adc
ds
lret
inc
or
les
lret
inc
and
les
mov
ja
aam
ret
incl
mov
dec
aam
aad
int
test
inc
std
les
add
inc
dec
les
lret
inc
inc
les
or
lret
cmp
add
dec
ret
dec
mov
lret
jb
dec
aad
mov
jmp
jb
dec
int
mov
inc
push
mov
dec
adc
jb
dec
xchg
rorb
mov
sub
test
incl
ret
mov
lret
jb
dec
int
mov
xlat
cmp
dec
ror
jb
dec
mov
dec
aad
mov
sub
sub
dec
xchg
rorb
inc
mov
inc
or
les
jb
dec
mov
dec
int
mov
sub
inc
sub
dec
inc
les
or
lret
dec
lods
int3
dec
ret
dec
mov
lret
jb
dec
aad
mov
call
jb
dec
int
mov
inc
xor
les
jb
dec
xchg
rorb
mov
sub
test
incl
ret
mov
lret
jb
dec
int
mov
fsubrl
dec
les
lret
dec
ror
jb
dec
mov
dec
aad
mov
sub
sub
dec
add
in
lret
jb
inc
mov
call
jb
dec
les
rol
rorb
lret
jb
dec
xchg
rorb
mov
sub
mov
les
mov
lret
jb
dec
aam
mov
rorl
loopne
cmp
dec
ret
lret
jb
dec
xchg
rorb
mov
sub
out
mov
lret
jb
dec
in
inc
mov
inc
mov
dec
lret
decl
dec
lret
lret
jb
dec
les
rol
xlat
cmp
dec
lret
lret
jb
dec
add
int3
inc
mov
sub
out
xchg
adcb
lret
jb
dec
in
inc
mov
lock
mov
jmp
jb
dec
aam
mov
xlat
cmp
dec
ret
lret
jb
dec
xchg
rorb
mov
sub
out
mov
les
cmp
sub
inc
mov
incb
shl
testl
mov
fisttpll
les
lret
dec
lret
lret
jb
dec
add
int3
inc
mov
sub
out
xchg
adcb
inc
add
pop
rol
dec
xchg
mov
lds
dec
sbb
push
mov
dec
int3
inc
cmp
cmp
dec
or
ret
decl
ret
incl
mov
dec
mov
mov
lret
jb
dec
int
mov
inc
xlat
int3
les
jb
dec
xchg
rorb
mov
sub
xchg
xchg
sub
iret
cmp
inc
add
scas
aam
fisttps
dec
sub
cld
enter
lods
int3
dec
ret
dec
int3
inc
cmp
cmp
stos
mov
test
dec
mov
lret
jb
dec
int
mov
rorb
dec
int
adc
jb
inc
mov
sub
mov
clc
sub
or
cmp
inc
loopne
mov
out
mov
xchg
xchg
scas
rorb
sub
xchg
cmp
dec
mov
cld
add
sbb
les
cmp
cmp
sarl
cmp
dec
mov
lret
jb
dec
aad
mov
jmp
dec
ret
lret
jb
dec
lds
rol
rorl
cmp
dec
lret
lret
jb
dec
add
int3
inc
mov
sub
out
xchg
adcb
test
incl
lret
inc
xchg
mov
lret
jb
dec
int
mov
xlat
cmp
dec
ror
jb
dec
mov
dec
aad
mov
sub
sub
dec
ret
mov
lret
jb
dec
fnstsw
cld
mov
ror
adc
les
dec
out
add
rorb
adc
jb
cld
mov
shlb
les
loopne
dec
mov
shl
pop
xor
dec
cwtl
loopne
mov
dec
mov
test
les
sbb
mov
dec
lret
out
mov
inc
add
loopne
dec
dec
nop
add
les
inc
cmp
dec
cltd
int3
cmp
dec
ret
dec
mov
repnz
mov
mov
lret
jb
dec
aad
mov
rorl
loopne
cmp
dec
ret
lret
jb
dec
xchg
rorb
mov
sub
out
mov
les
dec
nop
loopne
cld
aam
into
test
dec
ret
call
ret
incl
rorb
inc
mov
inc
sub
les
mov
dec
or
jb
dec
mov
dec
int
mov
sub
dec
lret
xchg
sub
add
cmp
ret
sub
dec
and
clc
xchg
mov
dec
ret
test
dec
aad
and
lret
jb
negl
inc
mov
inc
dec
and
mov
lret
jb
dec
int
into
shlb
lret
jb
dec
xchg
rorb
adc
mov
dec
ret
sub
clc
loop
mov
ret
dec
and
incl
mov
fmull
inc
mov
into
test
dec
ret
call
ret
incl
dec
ret
lret
jb
dec
int
mov
inc
out
rol
mov
dec
adc
jb
dec
xchg
rorb
mov
sub
xchg
dec
and
xchg
sub
clc
xchg
lret
inc
repnz
cmp
dec
xchg
mov
in
mov
lret
jb
dec
int
into
shlb
lret
jb
dec
xchg
rorb
adc
mov
dec
ret
sub
inc
cld
cli
lret
inc
cmp
cmp
dec
pushf
lds
loopne
dec
push
mov
dec
ret
lret
jb
dec
aad
mov
into
test
dec
ret
call
cwtl
loopne
dec
ret
incl
dec
ret
lret
jb
dec
fnstsw
cld
mov
ror
mov
add
rorb
adc
jb
cld
mov
shlb
les
cmp
inc
add
testl
or
loopne
dec
or
cmp
int3
add
dec
ret
loopne
movsb
dec
ret
loopne
sub
dec
syscall
sub
and
testl
in
dec
and
lret
jb
inc
mov
rclb
sbb
cmp
mov
add
roll
shl
inc
jg
les
sbb
cmp
ret
inc
mov
scas
enter
scas
fmuls
inc
daa
lds
int3
cmp
dec
pushf
int3
dec
cwtl
loopne
dec
or
sbb
cmp
loopne
xchg
dec
or
mov
cmp
mov
cmp
dec
ret
dec
mov
lret
jb
dec
int
mov
rorl
les
dec
int
adc
jb
inc
mov
sub
mov
clc
sub
add
cmp
inc
loopne
rol
les
dec
ret
dec
mov
lcall
aam
filds
rol
rorl
les
dec
fisttps
lret
jb
inc
mov
sub
mov
out
les
dec
ret
mov
inc
mov
dec
cwtl
loopne
scas
enter
scas
fmuls
inc
daa
lds
ret
cmp
dec
pushf
int3
dec
cwtl
loopne
dec
and
xchg
dec
or
test
in
sub
inc
inc
les
dec
dec
mov
les
mov
out
adc
es
adc
ret
mov
les
out
dec
insb
mov
out
cs
sub
int3
std
mov
mov
cmp
dec
ret
dec
mov
lret
jb
dec
int
mov
rorb
dec
int
adc
jb
inc
mov
sub
mov
clc
sub
pop
aas
cmp
inc
loopne
les
inc
aas
cmp
inc
pop
dec
rorb
mov
les
loopne
movl
les
aad
dec
or
xor
cmp
dec
push
mov
les
mov
out
cs
sub
cs
lods
int3
dec
rorb
mov
les
loopne
movl
lret
inc
add
les
lret
inc
cli
cmp
dec
ret
dec
mov
lret
jb
dec
int
mov
rorb
dec
int
adc
jb
inc
mov
sub
dec
loopne
les
push
aas
cmp
out
mov
les
add
and
int3
les
cmp
dec
dec
loopne
les
inc
loopne
les
cmp
cmp
aad
cmp
dec
mov
inc
clc
int3
aad
xchg
cmp
dec
ret
dec
mov
lret
jb
dec
int
mov
rorb
dec
int
adc
jb
inc
mov
sub
mov
clc
sub
push
aas
cmp
out
mov
xchg
xchg
add
and
les
cmp
movl
cmp
int3
lret
jecxz
lret
inc
cmp
cmp
lret
dec
ret
dec
mov
lret
jb
dec
int
mov
rorb
mov
dec
mov
dec
int
adc
jb
inc
mov
sub
mov
clc
sub
push
aas
cmp
out
mov
xchg
xchg
add
and
les
cmp
scas
aam
lds
sub
sarb
dec
pushf
int3
dec
rorb
loopne
nop
loopne
add
lds
dec
and
dec
mov
fimull
movsb
dec
sbbb
incl
adcb
loopne
dec
xchg
nop
dec
sbbb
xor
mov
dec
sti
out
mov
xchg
dec
dec
nop
mov
idivb
cmp
rolb
mov
jle
les
es
fdivl
lock
xchg
dec
ret
lret
jb
dec
int
mov
rorb
jb
dec
xchg
rorb
mov
sub
addb
sub
mov
cmp
add
dec
loopne
les
les
inc
add
les
or
rcl
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
rcl
mov
aam
mov
aam
mov
enter
enter
enter
enter
ret
enter
enter
enter
enter
enter
enter
enter
enter
or
scas
cmp
gs
les
xchg
gs
testl
lods
mov
les
jnp
lds
incl
xchg
rorb
dec
je
cld
adc
mov
inc
or
mov
mov
jb
dec
mov
cmp
mov
dec
orb
xchg
scas
shrl
cmp
sub
dec
mov
aam
dec
jb
cmp
pop
dec
cwtl
loopne
cld
cwtl
loopne
mov
add
orb
and
cmp
mov
lret
jb
pop
dec
rcl
loopne
mov
rcl
xchg
hlt
int
loopne
dec
cwtl
loopne
sub
dec
sub
and
dec
cwtl
loopne
sub
dec
mov
mov
rolb
and
loopne
cwtl
loopne
sub
mov
loopne
xchg
dec
mov
rolb
and
loop
cwtl
loopne
sub
mov
loopne
xchg
dec
mov
rolb
and
out
dec
cwtl
loopne
sub
mov
loopne
xchg
dec
mov
rolb
and
out
dec
cwtl
loopne
sub
mov
loopne
xchg
dec
mov
rolb
and
jmp
sub
mov
loopne
xchg
dec
mov
rolb
and
fwait
dec
cwtl
loopne
sub
mov
loopne
xchg
dec
mov
rolb
and
clc
dec
cwtl
loopne
sub
mov
loopne
add
sub
dec
add
int3
lods
or
aam
or
ret
std
mov
cmp
and
dec
cwtl
loopne
sub
dec
mov
mov
rolb
and
in
dec
cwtl
loopne
sub
mov
loopne
xchg
dec
mov
rolb
and
lahf
dec
cwtl
loopne
sub
mov
loopne
mov
les
loopne
xchg
dec
mov
rolb
and
in
dec
cwtl
loopne
sub
mov
loopne
xchg
dec
mov
rolb
and
cltd
dec
cwtl
loopne
sub
mov
loopne
mov
les
loopne
xchg
dec
mov
rolb
and
out
cwtl
loopne
sub
mov
loopne
xchg
dec
mov
rolb
and
jecxz
cwtl
loopne
sub
mov
loopne
movsb
das
cltd
dec
mov
mov
rolb
and
jecxz
cwtl
loopne
sub
mov
loopne
xchg
dec
mov
rolb
and
call
sub
mov
loopne
out
in
dec
mov
mov
call
loopne
xchg
dec
mov
rolb
and
into
dec
cwtl
loopne
sub
mov
loopne
enter
mov
rorb
mov
cmp
mov
dec
mov
rclb
dec
cmp
das
enter
rclb
inc
cmp
incl
mov
dec
orb
xchg
scas
shrb
cmp
dec
mov
aam
pop
xchg
cmp
testb
loopne
mov
les
add
mov
aam
mov
cmp
je
dec
mov
lods
mov
les
add
inc
rcl
inc
rcl
inc
rcl
inc
rcl
inc
rcl
inc
rcl
inc
rcl
inc
rcl
inc
rcl
inc
rcl
dec
rcl
into
into
into
mov
into
into
into
into
ror
into
into
into
into
into
into
into
into
into
into
into
ret
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
int3
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
int
or
or
or
or
or
or
rclb
fadd
xchg
mov
dec
and
dec
mov
dec
mov
scas
lds
mov
fwait
lcall
dec
mov
loopne
xchg
fmull
dec
ret
mov
decl
int
insl
mov
loopne
dec
and
incl
mov
dec
mov
decl
les
xchg
scas
lds
mov
fwait
lcall
dec
mov
or
mov
sub
mov
loopne
dec
mov
loopne
add
loopne
mov
dec
xchg
fmull
int3
dec
mov
dec
lret
dec
aas
les
xchg
scas
les
mov
fwait
lcall
dec
sar
xchg
enter
mov
int3
dec
mov
int3
dec
and
sub
xor
dec
and
std
xchg
enter
xchg
int3
inc
mov
mov
mov
xchg
scas
les
cmp
fwait
lcall
dec
and
xchg
scas
lds
cmp
fwait
lcall
dec
and
dec
mov
loopne
xchg
enter
rorb
loopne
dec
mov
dec
mov
rorb
loopne
dec
and
dec
nop
loopne
sub
cmp
dec
and
xchg
dec
mov
enter
cmp
dec
mov
enter
ret
dec
sar
xchg
enter
and
dec
xchg
int3
inc
mov
mov
xchg
scas
les
mov
fwait
lcall
xchg
scas
lds
mov
fwait
lcall
xchg
dec
and
xchg
dec
or
jg
cmp
dec
mov
in
aad
test
fwait
dec
test
dec
add
push
aam
or
inc
sub
xchg
dec
xor
xchg
mov
dec
and
dec
mov
dec
mov
scas
lds
mov
fwait
lcall
dec
and
dec
xchg
fmull
dec
lret
mov
incl
cmpsb
les
loopne
dec
mov
in
xchg
xchg
decl
mov
dec
mov
enter
mov
sub
ret
inc
add
inc
pop
dec
and
xchg
dec
mov
lds
mov
dec
add
push
aam
dec
mov
add
sar
mov
sub
cmpsb
les
loopne
decl
dec
mov
dec
mov
dec
test
inc
add
xchg
xchg
dec
mov
sub
ret
inc
add
inc
xchg
les
fmull
int3
xchg
dec
mov
les
mov
dec
add
push
aam
inc
add
int3
xchg
dec
cvttps2pi
add
scas
dec
mov
call
dec
mov
aam
mov
aam
nop
loopne
sub
sub
cmp
loopne
xchg
dec
or
clc
ret
inc
add
cli
dec
mov
inc
mov
mov
mov
xchg
scas
les
cmp
lcall
dec
nop
loopne
xchg
scas
lds
cmp
lcall
dec
and
xchg
inc
add
xchg
dec
cvttps2pi
sarl
inc
add
inc
dec
les
loopne
dec
nop
loopne
dec
sbb
mov
aam
lret
loopne
dec
mov
aam
nop
loopne
dec
and
sub
sub
cmp
loopne
xchg
dec
mov
shrb
adc
cmp
loopne
inc
add
aam
or
sub
sarl
inc
add
cli
dec
and
dec
mov
inc
mov
mov
mov
xchg
scas
les
cmp
lcall
xchg
scas
lds
cmp
lcall
xchg
dec
nop
loopne
xchg
dec
or
jg
cmp
dec
mov
in
cltd
lahf
dec
aad
test
fwait
dec
test
dec
add
push
aam
or
int3
xchg
xchg
dec
xor
fmull
xchg
dec
mov
mov
cmp
int
or
fdivr
cwtl
loopne
mov
dec
mov
loopne
lcall
sar
mov
sub
movsb
les
loopne
std
cwtl
loopne
mov
dec
mov
dec
xchg
rclb
cmp
dec
sbb
test
dec
sbb
sbb
les
dec
sbb
test
dec
sbb
int3
dec
rorb
loopne
fwait
lcall
inc
add
push
rol
dec
pusha
loopne
les
mov
mov
sub
movsb
les
loopne
dec
cwtl
loopne
lcall
dec
mov
fsubrs
adc
cmp
rclb
cmp
dec
mov
dec
repnz
and
fwait
dec
hlt
lcall
int3
push
rol
or
xchg
dec
sub
ret
gs
les
xchg
gs
testl
mov
les
xor
mov
dec
mov
dec
mov
les
pushl
mov
xchg
xchg
sub
imul
inc
add
dec
mov
das
and
sub
aam
xor
sub
push
cmp
xchg
pushl
mov
scas
les
les
dec
mov
mov
les
and
enter
dec
xor
dec
mov
dec
adcb
ror
xchg
les
loopne
lods
push
rcl
mov
dec
xchg
sbbb
add
pop
dec
addb
int3
dec
xchg
rorb
inc
cmp
lret
push
add
xchg
or
adc
xchg
dec
or
lcall
enter
orb
add
rorb
dec
mov
dec
or
subb
les
sbbb
lahf
inc
add
pop
dec
addb
rorb
inc
cld
fisttps
loopne
mov
sub
adc
cmp
lret
inc
test
int3
fwait
dec
mov
lahf
inc
add
pop
inc
mov
rorb
dec
mov
dec
xchg
rorb
dec
stos
in
mov
aam
or
push
pop
dec
xchg
subb
les
fmuls
in
pop
mov
inc
add
push
add
add
aad
and
fwait
dec
addb
inc
add
pop
dec
mov
rorb
int3
fwait
dec
xchg
sbbb
add
pop
dec
mov
scas
les
jg
cmp
rcrb
and
mov
scas
lds
push
sub
pop
cmp
dec
xchg
orb
fwait
dec
addb
inc
add
pop
xor
les
xchg
sub
jle
cmp
push
cmp
dec
mov
dec
stos
fmuls
int3
dec
mov
faddl
mov
dec
adc
dec
cvttps2pi
sbb
cmp
orb
fwait
dec
mov
lahf
inc
add
pop
dec
aam
vpperm
ds
dec
push
add
mov
cmp
cltd
les
enter
fmull
jnp
call
rorb
dec
mov
dec
mov
lds
dec
cmp
aam
dec
rcl
dec
rcl
dec
rcl
dec
rcl
dec
rcl
sub
xchg
dec
sub
add
int
inc
add
sub
xchg
dec
mov
dec
xchg
int3
inc
xchg
mov
or
mov
cmp
inc
jnp
les
rol
mov
inc
mov
add
pop
rol
les
iret
add
pop
aam
les
fmull
rorb
rclb
dec
mov
dec
and
dec
add
xchg
xchg
sub
xor
cmp
aam
and
std
mov
dec
cwtl
loopne
dec
pop
aam
les
rorb
dec
test
dec
add
rcrb
cltd
inc
add
pop
xchg
dec
or
cmp
inc
mov
mov
les
mov
dec
lret
rorb
dec
xchg
in
dec
pop
out
inc
aam
les
dec
shrb
xchg
dec
or
push
cmp
dec
or
lahf
dec
addl
lcall
mov
dec
mov
dec
shrb
xchg
dec
or
push
cmp
dec
mov
rorb
int3
xchg
dec
or
subb
cmp
inc
add
rorb
enter
lcall
fwait
lret
push
add
inc
add
pop
dec
or
or
cmp
jb
lret
jb
dec
adc
lds
push
add
inc
add
pop
or
mov
vpperm
rorl
sub
movl
mov
pushl
mov
dec
mov
sub
outsl
cmp
inc
add
xchg
je
fwait
lahf
pop
or
xchg
dec
sub
ret
gs
les
enter
testl
mov
les
xor
xor
les
cmpl
sub
popf
les
rolb
fnstsw
les
rorb
dec
mov
add
cwtl
insl
ret
mov
das
testl
leave
les
and
xchg
int3
xchg
sub
adc
shrb
test
xchg
dec
xor
in
lret
inc
jecxz
les
scas
ret
xor
cmp
loopne
out
cwtl
loopne
dec
lret
hlt
dec
cli
dec
push
mov
les
add
les
add
les
decl
enter
dec
or
adc
lret
test
dec
nop
out
lds
int3
dec
ret
lcall
dec
lods
call
loopne
xchg
xchg
xchg
xchg
sub
xchg
les
aam
test
rorb
loopne
add
out
les
dec
mov
dec
mov
les
cld
dec
rorb
cld
xchg
dec
or
mov
dec
lret
test
lds
dec
xchg
xchg
dec
or
fstpt
cmp
std
mov
int
rolb
inc
test
les
dec
mov
xchg
dec
or
push
cmp
dec
shrb
push
test
les
dec
jl
dec
ret
enter
dec
test
les
mov
dec
test
xchg
xchg
dec
or
cmp
dec
cli
dec
mov
xchg
dec
or
or
cmp
clc
dec
rorb
cld
xchg
dec
or
or
cmp
int3
les
or
or
or
lods
adc
ret
gs
les
xchg
gs
testl
mov
les
xor
mov
dec
mov
dec
mov
les
inc
xor
push
arpl
cmp
int3
mov
xchg
dec
mov
mov
dec
mov
lret
dec
mov
sub
insb
cmp
inc
add
les
les
xor
les
and
or
xchg
dec
mov
inc
xor
movsl
lahf
cmp
xchg
sub
xchg
les
rcrb
or
inc
sub
xchg
xchg
dec
xor
lds
incl
addb
cmp
lcall
pop
dec
lret
loopne
xchg
xor
mov
dec
ds
and
aam
les
les
lret
jb
dec
sti
inc
mov
lret
dec
or
sub
idivl
xor
les
xchg
xor
les
xchg
mov
out
addb
out
pop
dec
and
dec
and
xchg
add
les
test
scas
les
sub
aaa
cmp
dec
mov
xchg
loopne
cs
pop
dec
xchg
enter
inc
mov
les
mov
les
dec
andb
mov
out
adc
push
movl
push
mov
les
dec
dec
mov
out
dec
mov
les
mov
lods
loopne
adcb
nop
loopne
add
loopne
add
cmp
loopne
les
mov
mov
dec
or
push
inc
add
sub
std
cmp
inc
add
popf
inc
mov
dec
sbb
scas
fmuls
inc
daa
lds
cmp
dec
pushf
int3
dec
cwtl
loopne
dec
ret
loopne
add
cld
or
dec
or
mov
xlat
dec
orb
mov
xchg
nop
incl
adcb
jl
cmp
fwait
cltd
lcall
pop
inc
cmp
test
les
shr
addb
les
dec
cmpl
sub
in
cmp
sarb
mov
or
cmp
dec
mov
xchg
loopne
rolb
dec
xchg
enter
fmuls
cmp
cwtl
dec
andb
les
es
fcompl
lahf
inc
add
pop
or
or
ret
gs
les
les
cmp
aam
add
les
les
cmp
dec
orb
jb
lret
jb
out
rorb
lret
inc
or
lret
jb
cld
pop
rcl
loopne
cmp
aam
or
cmp
cmp
dec
lret
loopne
rol
dec
or
scas
lds
mov
sti
cmp
sub
dec
shlb
xchg
rol
dec
or
scas
les
mov
sti
cmp
sub
dec
lret
loopne
mov
dec
or
dec
orb
sub
dec
shlb
xchg
mov
mov
dec
or
cmp
mov
lods
nop
jo
aam
mov
fsubrl
push
cmp
mov
mov
xchg
xchg
scas
int
or
inc
loopne
les
repnz
dec
mov
rolb
inc
loopne
les
cmp
cmp
cmp
cmp
add
cmp
les
xor
les
lret
inc
daa
sub
pop
cmp
sub
dec
or
popa
cmp
sub
dec
lret
loopne
aam
les
lret
inc
js
les
dec
orb
sub
dec
shlb
xchg
aam
les
lret
inc
pop
scas
int3
test
sub
xor
cmp
dec
lret
loopne
aam
les
lret
inc
mov
les
dec
orb
sub
dec
shlb
xchg
aam
les
lret
inc
xchg
scas
int3
test
sub
xor
cmp
dec
lret
loopne
aam
les
lret
inc
hlt
scas
int3
test
sub
xor
cmp
dec
shlb
xchg
aam
les
lret
inc
leave
scas
int3
test
sub
xor
cmp
dec
ret
loopne
aam
lret
inc
cs
lret
jp
inc
add
ja
dec
cwtl
loopne
inc
cmp
lret
inc
adc
lret
jb
test
rcl
loopne
nop
pop
rcl
pop
dec
mov
mov
cmp
add
push
les
mov
add
xchg
call
les
loopne
xchg
dec
or
inc
loopne
les
outsl
cmp
inc
add
mov
mov
or
icebp
cmp
dec
mov
mov
cmpb
testb
cmp
mov
cmpb
je
das
mov
les
loopne
xchg
dec
or
das
cmp
das
xchg
lods
and
ret
mov
lock
push
mov
mov
xchg
xchg
scas
rorl
inc
loopne
mov
les
lock
dec
mov
hlt
add
push
cmp
cmp
cmp
testb
dec
or
xor
cmp
dec
pop
dec
dec
loopne
les
les
add
les
dec
cmp
push
rcl
push
rcl
push
rcl
push
rcl
push
rcl
push
rcl
push
rcl
push
rcl
pop
rcl
pop
rcl
pop
rcl
pop
rcl
pop
rcl
pop
rcl
pop
rcl
lret
lret
lret
rol
int3
int
iret
lret
leave
dec
les
aam
pop
rcl
pop
rcl
pop
rcl
pop
rcl
pop
rcl
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rorb
or
or
or
or
or
or
or
ret
gs
les
xchg
xchg
gs
testl
cwtl
mov
les
dec
mov
dec
test
negl
dec
mov
sar
pushf
jmp
loopne
dec
std
xchg
enter
test
das
rorb
cld
pushf
jmp
loopne
dec
repz
sbb
sub
pushl
mov
pushl
mov
sub
xchg
les
loopne
decl
dec
nop
loopne
dec
incl
les
les
loopne
dec
cwtl
loopne
dec
cwtl
loopne
dec
mov
test
aad
cmp
loopne
xchg
dec
and
xchg
dec
mov
mov
loopne
dec
nop
loopne
dec
cwtl
loopne
dec
cwtl
loopne
sub
jne
cmp
loopne
xchg
xchg
xchg
dec
nop
loopne
xchg
dec
or
and
lds
sub
cmp
dec
lods
sarb
std
mov
dec
and
xchg
sub
pop
les
rolb
loopne
lret
les
loopne
dec
cwtl
loopne
add
cmp
std
mov
dec
mov
loopne
sub
mov
les
rolb
loopne
lret
les
loopne
dec
cwtl
loopne
pushl
mov
sub
xchg
divl
ljmp
xor
aam
mov
cwtl
mov
les
inc
add
repnz
sbb
or
or
or
scas
cmp
gs
les
enter
testl
shlb
les
dec
mov
int3
dec
sbb
lret
xchg
xchg
xchg
xchg
dec
and
xchg
dec
or
and
les
outsl
cmp
dec
mov
xchg
sub
mov
les
xchg
add
les
sbb
les
mov
les
int3
dec
mov
shlb
les
pop
or
or
scas
cmp
gs
les
xchg
xchg
gs
testl
clc
mov
les
dec
and
xchg
sub
xor
cmp
pop
dec
xor
das
mov
sub
xchg
les
les
fmull
loopne
aas
mov
cmp
pushl
inc
mov
in
rorl
das
dec
adc
dec
mov
xchg
dec
xchg
rclb
cmp
inc
add
test
scas
cmp
in
add
les
loopne
dec
cwtl
loopne
sub
imul
dec
cwtl
loopne
dec
mov
fcoms
loopne
xchg
dec
or
loopne
sub
sub
cmp
loopne
aam
cld
dec
mov
add
cmp
mov
dec
and
xchg
sub
les
rolb
loopne
lret
les
loopne
dec
cwtl
loopne
aas
mov
sub
xchg
idivl
pushl
xchg
les
in
dec
mov
clc
mov
les
inc
add
push
rol
sti
das
sbb
or
or
or
or
or
or
ret
gs
les
enter
testl
shlb
les
dec
mov
int3
dec
sbb
lret
xchg
xchg
xchg
xchg
dec
and
xchg
dec
or
and
les
outsl
cmp
dec
mov
xchg
sub
mov
les
xchg
add
les
sbb
les
mov
les
int3
dec
mov
shlb
les
pop
or
or
sub
or
or
or
or
or
or
addb
enter
inc
pop
lret
dec
push
orb
dec
mov
dec
xchg
fsubrs
dec
mov
xchg
dec
pop
sub
or
dec
out
dec
dec
les
mov
sub
push
add
mov
dec
or
sarl
fdivl
pusha
sarl
dec
mov
dec
mov
sarl
dec
mov
inc
add
xchg
sub
inc
cmp
dec
or
sarl
dec
or
sub
sarl
inc
add
xchg
dec
or
sarl
dec
xchg
rorb
xchg
dec
or
pop
cmp
dec
or
cmp
fwait
dec
mov
xchg
sbbb
xor
aas
cmp
les
or
or
or
or
or
dec
out
dec
dec
les
mov
sub
push
add
mov
xchg
dec
or
sarl
dec
mov
dec
mov
sarb
dec
mov
inc
add
xchg
sub
inc
cmp
dec
or
sarb
dec
or
sub
sarb
inc
add
xchg
dec
or
sarb
dec
xchg
rorb
xchg
dec
or
push
cmp
dec
or
fwait
je
lcall
les
scas
les
outsb
cmp
dec
cmp
sbb
cmp
mov
inc
add
sar
mov
sub
mov
les
in
mov
mov
fwait
testb
xor
les
inc
cmp
mov
inc
add
sar
shlb
les
in
xchg
fdivl
les
sub
dec
mov
sub
jge
cmp
mov
dec
mov
dec
xchg
fcoms
sub
add
cmp
orb
add
les
adcb
int3
dec
lret
outsb
cmp
xor
les
lcall
xchg
dec
xor
les
sub
xor
rorb
les
rol
or
or
or
xchg
dec
mov
aam
nop
loopne
add
loopne
dec
shl
dec
and
xchg
dec
mov
rclb
xchg
xchg
xchg
sub
adc
cmp
fadds
or
or
or
orb
lret
jb
xchg
dec
std
lret
jb
inc
inc
push
cmp
ror
inc
sub
lret
jb
cld
data16
loopne
aam
rcl
dec
or
cmp
fwait
dec
or
cmp
scas
int3
test
orb
fwait
lcall
test
orb
fwait
lcall
int3
inc
or
mov
scas
cmp
orb
fwait
lcall
lahf
sub
dec
mov
inc
or
mov
dec
lret
loopne
aam
les
scas
lds
dec
orb
fwait
lcall
or
mov
dec
shlb
xchg
aam
les
scas
les
dec
orb
fwait
lcall
lahf
sub
dec
ret
loopne
mov
dec
or
jno
cmp
dec
rorb
loopne
into
stc
int3
les
xchg
xchg
sub
jle
cmp
mov
xchg
dec
or
and
cmp
lds
pop
dec
cmp
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
rol
int
ret
int
int
int
int
int
int
int
scas
cmp
gs
les
xchg
gs
testl
inc
les
les
dec
orb
dec
aad
jb
lret
jb
rol
mov
inc
mov
jb
pop
rcl
loopne
pushf
rcl
or
cmp
dec
dec
loopne
les
les
add
and
loopne
les
les
add
jle
cmp
dec
dec
loopne
les
les
add
mov
dec
mov
inc
and
inc
or
add
xchg
dec
or
and
cmp
dec
loopne
les
les
add
dec
orb
rol
leave
mov
scas
int3
add
or
and
cmp
dec
loopne
les
les
add
mov
lods
enter
dec
mov
shrb
data16
cmp
loopne
xchg
scas
les
inc
loopne
les
out
cmp
dec
mov
aam
inc
loopne
les
cmp
cmp
xor
cmp
add
dec
loopne
les
les
add
scas
les
dec
orb
dec
dec
loopne
les
les
add
mov
lods
adc
ret
mov
hlt
sub
gs
cmp
loopne
xchg
scas
les
inc
loopne
les
out
cmp
dec
mov
call
les
cmp
cmp
add
dec
loopne
les
les
add
scas
les
dec
orb
dec
dec
loopne
les
les
add
mov
lods
push
jo
aam
mov
mov
and
xchg
scas
les
inc
loopne
mov
les
in
cmp
dec
mov
mov
inc
loopne
les
cmp
cmp
sub
cmp
add
dec
loopne
les
les
add
scas
lds
dec
orb
dec
dec
loopne
les
les
add
dec
or
mov
icebp
cmp
dec
dec
loopne
les
les
add
ret
mov
lods
sub
fs
cmp
mov
xchg
orb
mov
dec
or
inc
loopne
mov
in
cmp
dec
mov
mov
les
cmp
cmp
sub
cmp
add
dec
loopne
les
les
add
in
cmp
dec
dec
loopne
les
les
add
push
add
cmp
loopne
les
les
add
test
mov
or
cmp
dec
dec
loopne
les
les
add
xchg
loope
into
stc
int3
les
dec
cmp
mov
push
mov
dec
int3
test
mov
mov
inc
cmp
cmp
lds
loopne
les
les
add
xchg
loope
into
stc
int3
les
xchg
xchg
sub
jb
cmp
mov
xchg
dec
or
daa
cmp
cmp
dec
loopne
les
les
add
data16
addr16
addr16
data16
data16
addr16
pusha
rcl
addr16
popa
rcl
popa
rcl
data16
popa
rcl
pusha
rcl
popa
rcl
popa
rcl
rcl
rol
ret
int3
lret
int
iret
lret
enter
lret
lret
lret
lret
lret
lret
lret
lret
or
or
or
or
or
or
sub
or
or
or
or
or
or
or
or
or
or
or
or
ret
gs
les
enter
testl
shlb
les
dec
mov
int3
dec
sbb
lret
xchg
xchg
xchg
xchg
dec
and
xchg
dec
or
and
les
and
cmp
fcoml
les
xchg
add
les
sbb
les
sti
les
int3
dec
mov
shlb
les
pop
or
or
xchg
dec
nop
loopne
xchg
dec
mov
aam
dec
mov
loopne
les
loopne
xchg
dec
and
xchg
inc
add
xchg
sub
sub
cmp
jb
add
add
fwait
lcall
or
or
ret
gs
les
xchg
xchg
gs
testl
mov
les
dec
and
dec
lret
loopne
dec
test
dec
mov
movsb
dec
sbb
das
rolb
dec
lcall
mov
mov
cmp
mov
insl
lds
aad
or
loop
cmp
inc
and
imull
out
add
mov
inc
sub
mov
lods
dec
jno
aam
mov
lock
pop
aas
cmp
loopne
xchg
xchg
scas
rorl
dec
test
movsb
sub
loop
cmp
loopne
aam
inc
rol
les
loopne
xchg
sub
cli
les
shrb
addb
add
aam
out
aam
dec
or
addb
and
cmp
int3
dec
lret
loopne
rolb
dec
xchg
enter
cwtl
lds
mov
orb
or
push
dec
and
inc
add
sub
sub
jecxz
cmp
dec
mov
mov
lcall
inc
mov
mov
les
mov
fmuls
loopne
dec
test
hlt
add
sub
dec
orb
loopne
dec
cmp
inc
sub
dec
or
loopne
les
fmull
rclb
les
test
les
pusha
aas
cmp
sub
ret
cmp
inc
mov
out
dec
and
xchg
sub
stc
les
shrb
dec
ret
in
mov
dec
mov
xchg
dec
mov
xchg
dec
or
sub
loopne
mov
les
inc
add
or
or
or
sub
or
or
or
or
or
or
ret
gs
les
ret
aam
add
addr16
les
dec
mov
int3
dec
dec
add
les
and
les
cmp
cmp
loopne
les
and
les
aaa
cmp
dec
dec
rol
les
and
cmp
cmp
sub
cmp
dec
mov
enter
les
pop
or
ret
gs
les
les
aam
add
les
les
sub
dec
cmp
negl
dec
mov
mov
cwtl
loopne
add
cmp
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
sub
cmpb
dec
inc
loopne
les
loopne
les
loopne
les
rorb
loopne
les
cmp
cmp
loopne
incl
mov
xchg
sub
clc
les
rorb
mov
dec
pop
loopne
les
loopne
les
loopne
les
clc
les
rorb
dec
les
les
les
enter
dec
nop
loopne
add
loopne
dec
shl
dec
and
xchg
dec
nop
loopne
inc
add
loopne
xchg
xchg
xchg
sub
cmp
inc
add
push
enter
or
scas
cmp
gs
les
les
cmp
aam
add
loopne
les
enter
testl
push
addr16
les
loopne
les
dec
mov
sub
loop
les
loopne
xchg
dec
and
dec
dec
rol
les
dec
nop
loopne
xchg
dec
and
negl
dec
dec
loopne
les
les
sarb
cmp
loopne
xchg
dec
and
dec
dec
add
les
lds
cwtl
loopne
dec
cwtl
loopne
dec
dec
loopne
les
sub
cmp
cmp
rolb
loopne
sar
loopne
lret
inc
mov
les
loopne
les
loopne
sub
out
les
inc
loopne
vdivps
cmp
loopne
add
jo
sar
mov
dec
xchg
rolb
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
std
cwtl
loopne
lret
inc
ds
les
les
mov
xchg
dec
test
lods
dec
cwtl
loopne
dec
cwtl
loopne
sub
imul
dec
les
dec
nop
loopne
xchg
add
add
das
cmp
inc
add
xchg
dec
mov
lods
add
jl
mov
les
inc
loopne
int
mov
xorb
xchg
sub
inc
les
rorb
mov
dec
cwtl
loopne
dec
cwtl
loopne
sub
fcmovnb
les
inc
loopne
loopne
loopne
ret
jo
dec
les
mov
sub
std
les
rorb
mov
les
loopne
les
mov
jle
les
inc
loopne
sar
loopne
mov
dec
nop
loopne
xchg
sub
std
les
shrb
jp
les
cmp
cwtl
loopne
lret
inc
cmp
sub
sub
out
les
add
les
loopne
dec
cwtl
loopne
lret
jb
add
jo
into
incb
mov
dec
cmp
lock
jl
cmp
lds
dec
rorl
loopne
xchg
dec
dec
or
les
loopne
mov
mov
xchg
in
les
and
lret
les
loopne
dec
cwtl
loopne
dec
and
divl
add
jo
enter
cmc
pushl
shrl
les
loopne
aam
and
mov
dec
and
lret
jb
hlt
xchg
scas
lds
loopne
sub
jl
cmp
loopne
cmp
mov
dec
mov
in
dec
dec
rol
les
loopne
sub
sub
cmp
loopne
xchg
dec
or
pop
aas
cmp
std
mov
movsb
mov
dec
and
xchg
sub
cld
les
rolb
loopne
lret
les
loopne
dec
cwtl
loopne
std
mov
mov
loopne
xchg
sub
cld
les
rolb
loopne
lret
les
loopne
dec
cwtl
loopne
add
jo
sar
loopne
mov
dec
nop
loopne
xchg
sub
cld
les
rolb
add
cmp
xor
xor
int3
aam
mov
inc
leave
xor
int3
aam
lods
les
aam
inc
loopne
leave
add
sub
les
sub
int3
aam
fstps
int3
aam
mov
add
add
jo
shl
das
dec
les
lods
adc
call
xchg
dec
nop
loopne
dec
mov
cld
sub
in
les
inc
loopne
lret
loopne
mov
dec
nop
loopne
xchg
dec
dec
loopne
les
sub
cmp
jno
jno
aam
int3
inc
mov
inc
loopne
shlb
xchg
sub
repz
les
rolb
jp
les
cmp
lods
rol
xchg
xchg
sub
and
cmp
int3
dec
inc
mov
jo
pusha
les
push
les
les
rorb
fmuls
loopne
les
loopne
les
push
les
inc
loopne
pushl
mov
dec
xchg
rolb
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
add
loopne
les
les
dec
dec
loopne
testl
les
pusha
les
rol
or
or
or
or
xchg
dec
sub
ret
gs
les
xchg
gs
testl
mov
les
xor
xor
cmp
div
mov
sub
push
cmp
dec
or
add
rorb
shr
or
mov
sub
push
add
incl
lret
inc
insb
les
pop
cmp
dec
mov
dec
subl
std
mov
dec
stc
les
enter
mov
sub
stc
les
int3
add
sub
dec
subl
xchg
xchg
xchg
xchg
sub
sbb
cmp
enter
out
mov
sub
ds
fadd
add
cmp
mov
dec
adc
xchg
dec
or
mov
xchg
sub
repnz
les
rorb
dec
rolb
sub
jnp
adc
and
xchg
rorb
aam
or
mov
mov
les
and
xchg
sub
les
shrb
mov
les
or
or
or
or
or
or
xchg
dec
test
pusha
inc
sub
out
ret
gs
les
xchg
gs
testl
mov
les
xor
xor
or
add
shl
das
rorb
shr
or
mov
sub
push
add
dec
mov
inc
pushf
mov
dec
mov
dec
adc
mov
cs
add
jle
div
out
adc
adc
cmp
movl
ret
les
adc
test
mov
negl
das
mov
lcall
dec
sbb
les
cmp
enter
les
xchg
xchg
dec
xchg
mov
dec
xchg
int3
xchg
xchg
dec
sbbl
cmpl
sub
pop
cmp
dec
mov
xchg
dec
or
test
xor
cmp
aam
xorl
dec
xchg
int3
xchg
xchg
dec
subl
cmp
dec
mov
dec
xchg
aam
adc
mov
rorl
sub
movl
cmp
cmpl
inc
or
aam
xchg
dec
or
push
cmp
dec
or
sub
lock
les
rorb
dec
enter
rorb
or
es
dec
mov
dec
xchg
aam
or
test
les
test
mov
dec
mov
push
cmp
xchg
sub
lock
les
shrb
mov
out
mov
xor
push
add
decl
lret
inc
addr16
les
mov
dec
mov
sub
mov
lods
dec
xchg
aam
fdivrs
daa
rorb
xchg
xchg
xchg
dec
or
cmpl
sub
xor
cmp
aam
adc
add
mov
rorl
sub
movl
dec
or
cmpl
cmp
lds
dec
xchg
lods
dec
mov
xchg
out
aaa
xchg
xchg
add
les
je
cmp
enter
das
mov
mov
rolb
adc
dec
xchg
lods
movl
cmp
scas
les
les
mov
dec
mov
mov
aam
clc
jnp
add
out
add
cmpl
dec
xorl
xchg
lods
xchg
xchg
xchg
dec
adc
sub
subl
sbb
add
dec
mov
cmp
cmp
cmp
dec
cmp
dec
mov
mov
les
add
aam
xchg
dec
mov
int3
inc
xor
push
xor
cmp
les
rcrb
or
int3
xchg
xchg
xchg
dec
xor
dec
mov
or
mov
rorl
sub
movl
das
idiv
aas
mov
sub
std
les
loopne
dec
ret
mov
decl
shrl
loopne
out
or
mov
rorl
sub
ds
mov
in
dec
nop
loopne
dec
and
xchg
scas
lds
pop
cmp
cmp
enter
mov
sub
std
les
dec
sub
loopne
inc
xor
testl
rorb
mov
xor
ret
das
and
xor
mov
loopne
les
loopne
dec
mov
in
cltd
lahf
inc
add
push
aam
or
xchg
dec
sub
ret
gs
les
enter
testl
mov
les
xor
xor
les
cmpl
sub
repz
les
rolb
fnstsw
les
rorb
dec
mov
add
inc
insl
ret
mov
das
testl
leave
les
and
xchg
int3
xchg
sub
cmp
cmp
shrb
pop
les
or
xor
aad
cmp
xchg
sub
cmc
les
rcrb
or
inc
sub
xchg
xchg
dec
xor
inc
pop
mov
testl
mov
sub
push
add
dec
mov
pop
jl
mov
add
add
incl
loopne
add
mov
enter
loopne
xchg
dec
or
xchg
scas
lds
cmp
faddl
xchg
dec
mov
inc
add
push
rol
sbb
les
loopne
dec
ret
xchg
dec
and
xchg
dec
or
cmp
cmp
int3
push
rol
or
ret
gs
les
xchg
xchg
gs
testl
test
addr16
les
dec
inc
pop
les
sar
push
les
cmp
dec
inc
pop
les
shl
incl
mov
add
lret
les
mov
les
enter
fmull
shr
or
mov
sub
push
add
mov
scas
testb
out
cmp
loopne
xchg
dec
mov
in
sub
dec
cmp
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
add
nop
loopne
xchg
dec
or
loopne
sub
cmp
cmp
loopne
add
cmp
sub
inc
cmp
dec
stos
orb
xchg
sub
cmp
rorb
dec
xchg
int3
xchg
dec
or
sub
cmp
inc
add
cmp
dec
addb
mov
xchg
xchg
dec
or
mov
cmp
orb
dec
or
subb
cmp
dec
int3
dec
int3
je
dec
mov
test
dec
leave
les
inc
add
or
or
or
scas
cmp
gs
les
xchg
xchg
gs
testl
mov
les
dec
jns
negl
cld
cwtl
loopne
lret
inc
dec
les
loopne
xchg
dec
mov
in
repz
cmp
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
dec
cwtl
loopne
add
mov
rorb
mov
cwtl
loopne
sub
cmp
cmp
loopne
add
cmp
sub
inc
cmp
dec
or
sub
cmp
rorb
aam
xchg
cmp
dec
mov
dec
xchg
enter
xchg
dec
or
sub
cmp
inc
add
cmp
dec
mov
sub
inc
cmp
inc
add
les
mov
mov
les
inc
add
or
or
or
or
or
or
or
scas
cmp
gs
les
xchg
xchg
gs
testl
inc
les
les
les
and
les
hlt
xchg
aam
call
int3
aam
xor
loopne
les
jl
cmp
xor
les
rolb
loopne
les
loopne
les
xchg
jge
xchg
aam
fidivl
loopne
dec
icebp
in
xchg
aam
pop
mov
xchg
aam
shrl
les
loopne
cmp
inc
outsl
inc
pop
mov
sub
lock
testl
sub
lock
les
xor
int3
xchg
aam
xor
les
rolb
int3
dec
ret
dec
das
push
testl
sub
lock
les
mov
pushl
mov
ljmp
les
loopne
sub
sub
cmp
inc
loopne
mov
les
mov
sub
lock
testl
sub
lock
les
rorb
loopne
dec
mov
lods
xchg
dec
xchg
aam
lods
xor
dec
mov
mov
cmp
loopne
dec
les
loopne
dec
ror
xchg
aam
icebp
xor
dec
mov
mov
xchg
xchg
jge
xchg
aam
lods
jl
cmp
xchg
aam
jmp
dec
xor
add
shrl
les
rolb
int3
dec
ret
dec
das
dec
testl
sub
test
mov
test
mov
jbe
les
aam
mov
lods
dec
stos
rolb
inc
loopne
les
cmp
cmp
xor
int3
xchg
aam
xor
les
rolb
int3
dec
ret
dec
das
jg
add
mov
scas
test
mov
test
mov
sub
test
dec
inc
loopne
les
dec
mov
dec
mov
inc
or
sarb
les
add
inc
les
les
inc
add
jge
test
les
cmc
les
rorb
rolb
inc
loopne
mov
mov
dec
mov
xchg
dec
or
lds
cmp
das
divl
xchg
dec
mov
loopne
inc
loopne
les
loopne
sub
cmp
nop
loopne
xchg
xchg
sub
mov
cmp
enter
in
and
jg
les
loopne
les
loopne
dec
test
mov
mov
dec
mov
jle
les
add
mov
les
xchg
aam
xchg
rorb
dec
mov
adcb
int3
aam
inc
loopne
and
cmp
int3
aam
xor
lds
cmp
dec
add
hlt
dec
pop
loopne
les
mov
dec
add
lret
add
xchg
les
rorb
adc
mov
inc
push
cmp
add
add
or
push
dec
icebp
xor
int3
xchg
aam
xor
les
rolb
rorb
testl
sub
cmc
les
loopne
les
dec
mov
xchg
xchg
dec
nop
loopne
xchg
jge
xchg
aam
and
dec
mov
cwtl
dec
mov
out
cmp
xchg
jge
xchg
aam
sub
cmp
dec
xor
ret
mov
sub
cmc
les
inc
add
rorb
testl
fdivl
les
rorb
xchg
aam
jmp
inc
add
inc
cmp
les
rolb
rorb
testl
sub
cmc
les
lret
inc
and
les
cmc
ljmp
mov
les
aam
stc
call
mov
loopne
lret
inc
cmp
les
xchg
aam
jmp
dec
hlt
dec
and
dec
test
loopne
sub
loopne
shrl
pushl
or
js
pop
lret
inc
add
sub
inc
inc
les
hlt
testl
sub
hlt
les
enter
mov
mov
dec
cmp
mov
sub
hlt
testl
sub
hlt
les
inc
sub
testl
sub
hlt
les
aam
jge
xchg
aam
xor
cmp
xchg
xchg
dec
and
xchg
jge
xchg
aam
ret
cmp
loopne
mov
loopne
sub
dec
sti
sub
dec
add
les
gs
add
mov
sub
hlt
les
rolb
rorl
das
testl
out
cmp
sub
hlt
les
dec
js
push
les
loopne
dec
mov
fmuls
dec
add
add
aam
add
jle
les
add
in
and
les
inc
loopne
les
mov
dec
xor
add
inc
or
int3
mov
dec
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
add
loopne
les
les
inc
add
or
or
dec
and
xchg
dec
xor
les
les
pop
les
lret
jb
pop
les
push
in
jb
aam
dec
or
adc
add
and
lcall
or
or
or
scas
cmp
gs
les
gs
testl
cwtl
mov
les
lock
aam
mov
fmull
loopne
sub
rol
lret
jb
loopne
xor
add
mov
aam
and
les
mov
dec
nop
loopne
dec
and
dec
mov
test
xchg
xchg
sub
cmp
enter
aam
and
les
mov
les
dec
mov
cwtl
mov
les
cwtl
pop
scas
icebp
lods
mov
ret
mov
in
and
lret
les
loopne
dec
cwtl
loopne
sub
pop
aas
cmp
loopne
xchg
dec
mov
cld
add
popf
xchg
aas
cmp
sub
jbe
cmp
or
or
or
or
or
or
or
inc
pop
les
rclb
les
cmp
dec
inc
pop
les
rolb
ret
mov
les
add
inc
pop
les
in
lret
inc
xor
les
orb
rorb
ret
orb
add
inc
adc
xchg
mov
xchg
xchg
mov
scas
xchg
sub
cmc
cmp
inc
add
inc
mov
sbb
cmp
mov
inc
add
sar
shlb
les
in
mov
mov
dec
sbb
cmp
mov
inc
add
sar
call
jmp
in
xchg
hlt
mov
add
pop
les
pop
les
lret
jb
pop
les
dec
in
jb
aam
dec
or
adc
add
and
lret
push
pop
inc
mov
sbb
cmp
mov
inc
add
sar
shlb
les
in
sbb
out
sbb
cmp
mov
inc
add
sar
call
jmp
in
mov
mov
add
mov
inc
mov
into
cmp
cmp
inc
pop
dec
pop
les
pop
les
dec
rolb
ret
dec
or
adc
add
and
lret
inc
push
cmp
cmp
pop
les
or
or
or
or
or
or
xchg
xchg
dec
mov
enter
and
xchg
xchg
add
les
cmp
cmp
enter
popf
pop
or
or
or
or
or
or
or
clc
add
xchg
les
dec
xchg
cld
dec
and
mov
xchg
xchg
dec
mov
dec
xchg
subb
cmp
dec
xchg
fmuls
in
or
loopne
sub
sarl
cmp
inc
mov
inc
mov
xor
les
dec
xchg
shrb
dec
mov
xchg
notl
add
bound
cmp
rorb
fmull
fmuls
in
adcb
xchg
loopne
mov
dec
xchg
fmuls
in
pop
or
or
or
or
lods
sbb
ret
gs
les
xchg
gs
testl
mov
les
xor
xor
jp
les
sub
ret
dec
ret
sarl
testl
mov
dec
int3
dec
or
xchg
aam
inc
fs
rol
dec
sbb
xchg
in
sub
xchg
hlt
dec
mov
inc
les
orb
cmp
cmpl
les
dec
cmp
incl
lock
testl
dec
mov
xchg
dec
xor
dec
mov
xchg
xchg
dec
mov
sub
cmpsb
cmp
dec
xchg
aam
mov
dec
or
sub
dec
mov
sub
dec
xchg
fmuls
dec
mov
dec
mov
dec
mov
jle
cmp
cmp
int3
inc
add
sub
xor
les
dec
lret
sub
cmp
les
mov
dec
test
das
testl
sub
int
les
sub
cmp
cmp
mov
dec
lret
add
cmp
rol
add
testb
xor
les
and
les
inc
cmp
dec
sbb
xchg
inc
cmp
mov
inc
add
sar
shlb
les
enter
mov
dec
lret
sub
inc
cmp
dec
sbb
movl
add
sar
enter
jbe
les
sar
aam
shlb
negb
dec
lret
add
cmp
rol
add
les
dec
mov
mov
les
and
scas
lds
sub
cmp
inc
add
aaa
scas
les
les
or
or
or
or
or
or
or
or
ret
gs
les
xchg
xchg
gs
testl
fsubs
les
dec
mov
rorb
rolb
fsubrs
aam
shr
cmp
pop
scas
int3
dec
cwtl
loopne
add
mov
sub
in
les
inc
add
dec
mov
loopne
mov
sub
int
les
cmp
int3
das
idivl
dec
stos
fcoms
cwtl
loopne
dec
mov
cmp
xchg
xchg
xchg
sub
scas
cmp
inc
add
dec
lcall
mov
les
mov
les
add
les
nop
add
inc
call
dec
mov
fsubs
les
inc
add
pop
or
ret
gs
les
xchg
gs
testl
loopne
addr16
les
negl
dec
cwtl
loopne
dec
cwtl
loopne
dec
ret
dec
cwtl
loopne
lods
mov
incl
mov
sub
jecxz
les
inc
add
dec
mov
aam
and
mov
dec
or
ret
ret
divl
xchg
dec
mov
loopne
cwtl
loopne
dec
mov
in
orl
and
xchg
xchg
sub
lods
cmp
inc
add
add
nop
sub
jecxz
les
inc
add
dec
mov
aam
and
pushl
mov
dec
ret
inc
add
xchg
dec
or
pop
cmp
add
adc
aam
divl
xchg
dec
mov
loopne
cwtl
loopne
dec
mov
in
sub
cmp
xchg
dec
and
xchg
xchg
sub
lods
cmp
inc
add
add
mov
fcoms
sub
add
cmp
loopne
dec
cwtl
loopne
pushl
mov
inc
or
dec
xchg
shlb
mov
dec
rorb
rorb
adc
push
cmp
int3
xor
add
ret
int3
dec
or
push
dec
and
dec
mov
cld
dec
nop
loopne
dec
mov
rclb
mov
cmp
dec
and
incl
mov
dec
repz
mov
dec
mov
fmull
rolb
loopne
cmp
cmp
pushl
mov
dec
xchg
rolb
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
dec
add
loopne
mov
les
add
push
enter
or
or
or
or
or
xchg
xchg
xchg
dec
xor
inc
or
out
add
rol
incl
mov
dec
mov
incl
mov
dec
mov
inc
daa
cmp
loope
les
dec
add
xchg
xchg
sub
cmpsb
les
rclb
inc
add
dec
shr
dec
stos
rol
fwait
dec
ljmp
pop
or
or
or
or
or
or
or
xchg
dec
cwtl
loopne
xchg
xchg
dec
xor
dec
xchg
int3
out
push
xchg
incl
mov
out
xchg
rol
sub
cmp
cmp
rorb
out
or
or
in
xchg
dec
rcr
xchg
xchg
sub
mov
int3
inc
add
dec
add
rol
or
or
or
or
ret
gs
les
gs
testl
shlb
les
scas
lds
int3
xchg
dec
mov
shrb
lret
les
add
les
mov
dec
lret
inc
or
lds
mov
enter
fsubrs
lret
les
dec
mov
shlb
les
rolb
lods
aam
les
loopne
les
rorb
enter
and
cmp
cmp
sub
lret
les
dec
mov
shlb
les
rolb
or
or
or
or
or
or
or
int3
xchg
dec
xor
int3
xchg
dec
mov
enter
les
rcl
loopne
xchg
sub
fcmovnb
les
rorb
shrb
les
rol
rorb
loopne
dec
aam
add
mov
rorb
lretw
lcall
or
or
or
or
or
or
xchg
aam
and
cmp
or
or
or
xchg
jge
xchg
aam
inc
cmp
cmp
or
or
xchg
dec
xor
ret
xor
jae
aam
xor
arpl
aam
mov
inc
or
dec
xchg
aam
push
inc
add
ret
add
les
ret
ret
mov
dec
adc
sub
fcmovb
les
rolb
loopne
les
and
les
adc
dec
or
les
or
or
or
or
or
or
or
hlt
sub
or
or
or
or
add
test
aam
test
cld
jae
aam
test
sub
or
or
or
or
hlt
sub
or
or
or
or
xchg
dec
xor
ret
xor
jae
aam
addb
lock
cmp
and
lds
fld
les
rorb
push
rol
or
or
or
or
or
or
or
cmp
cmp
and
lds
fld
les
rorb
push
rol
or
loopne
xchg
xchg
dec
xor
cmp
loopne
dec
nop
loopne
add
mov
aam
mov
dec
xchg
call
enter
or
or
or
or
enter
sub
mov
cmp
ret
ret
sub
sub
mov
fwait
dec
mov
dec
add
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
in
sub
aas
cmp
ret
ret
sub
sub
mov
dec
mov
add
aam
mov
add
les
lock
or
dec
xchg
cmp
mov
dec
mov
dec
xchg
clc
dec
xchg
clc
dec
addl
jae
aam
xor
jae
aam
add
loopne
mov
les
aam
rol
or
or
or
loopne
xchg
dec
mov
xchg
dec
or
loopne
sub
aas
cmp
ret
ret
sub
sub
mov
dec
mov
add
aam
lcall
clc
add
cmp
ret
xor
jae
aam
add
or
or
or
or
scas
cmp
gs
les
cmp
aam
add
addr16
les
dec
mov
enter
in
sub
cmp
cmp
or
add
aam
xor
and
lds
ret
ret
cld
jae
aam
addb
cmp
hlt
xchg
xchg
sub
cmpl
inc
add
dec
add
loopne
mov
les
aam
rol
or
or
or
or
or
or
or
subb
or
or
or
or
loopne
xchg
xchg
dec
xor
cmp
addb
ret
ret
xor
jae
aam
addb
add
or
ret
gs
les
cmp
aam
add
addr16
les
scas
mov
xor
add
dec
mov
enter
and
pushl
jecxz
cmpl
or
cmp
cmp
addb
test
aam
ret
ret
xor
jae
aam
les
loopne
mov
les
aam
or
or
or
or
inc
sub
mov
shrb
cmp
lods
fdivs
loopne
xchg
add
ret
and
cld
jae
aam
and
pushf
jae
aam
dec
lock
les
or
or
or
or
xchg
dec
and
xchg
dec
mov
enter
add
les
cmp
cmp
lcall
popa
aas
cmp
or
or
or
or
or
ret
gs
les
cmp
aam
add
loopne
xchg
gs
testl
xchg
mov
les
push
int3
les
mov
mov
lods
lods
jae
aam
mov
aam
and
lret
les
loopne
dec
cwtl
loopne
sub
dec
aas
cmp
loopne
xchg
dec
mov
in
dec
cwtl
loopne
sub
xchg
cmp
loopne
aam
and
mov
dec
mov
enter
faddp
les
rorb
loopne
add
les
loopne
dec
cwtl
loopne
sub
out
cmp
loopne
mov
les
xor
sub
fadd
les
nop
pop
or
or
or
or
or
or
or
scas
cmp
gs
les
les
cmp
aam
add
les
les
loopne
les
sub
cmp
cmp
add
insb
les
cmp
cmp
aam
fdivs
loopne
xchg
sub
test
or
or
or
or
or
xchg
sub
cmp
cmp
or
or
or
or
or
loope
gs
or
or
or
or
or
loopne
xchg
cmp
andb
pop
or
or
dec
test
dec
aam
cmp
or
or
loopne
lods
adc
ret
aam
xor
les
mov
dec
adc
push
rol
add
push
rol
or
or
or
or
or
or
or
lods
movsb
jmp
les
enter
testl
mov
les
xor
xor
les
cmpl
sub
fld
les
rolb
fisttpl
enter
les
rorb
dec
mov
add
js
ret
mov
dec
xchg
aam
testl
leave
les
and
or
inc
add
scas
les
les
or
or
or
or
or
or
or
xchg
xchg
dec
cmp
les
das
movl
fs
xor
fs
aam
dec
mov
dec
repz
cmp
cmp
fwait
cmp
inc
add
dec
add
or
or
or
or
or
inc
sub
gs
testl
dec
xchg
xchg
xchg
dec
js
in
les
and
dec
xor
xchg
xchg
negl
xchg
dec
cwtl
loopne
cmp
jo
ret
sbb
les
rorb
inc
add
leave
scas
cmp
mov
dec
and
dec
xchg
lds
test
cmpxchg
nop
loopne
xchg
dec
or
dec
aas
cmp
loopne
fwait
dec
add
mov
les
int3
push
enter
or
or
or
scas
cmp
gs
les
cmp
aam
add
loopne
xchg
xchg
xchg
xchg
gs
testl
mov
les
loopne
dec
cwtl
loopne
dec
mov
pushf
scas
les
in
sbb
les
xchg
dec
mov
loopne
les
rorl
testl
sbb
les
rorb
pushl
xchg
xchg
dec
or
dec
aas
cmp
xchg
adcl
lret
les
loopne
dec
and
sub
or
cmp
loopne
dec
nop
loopne
add
les
aam
inc
jne
les
dec
and
inc
push
mov
inc
cmp
nop
loopne
call
roll
aam
mov
call
loopne
dec
nop
loopne
push
incl
fld
les
loopne
dec
mov
in
inc
cmp
mov
mov
call
loopne
dec
nop
loopne
push
incl
fld
les
loopne
xchg
xchg
dec
and
xchg
xchg
lods
rol
xchg
cmp
mov
aam
mov
clc
incl
fmul
les
adc
les
add
pushl
xchg
xchg
dec
or
dec
aas
cmp
loopne
aam
inc
dec
les
loopne
xchg
das
mov
dec
and
sub
inc
or
cmp
xor
fadd
les
loopne
inc
mov
and
mov
dec
and
inc
clc
hlt
les
xchg
dec
mov
hlt
sub
dec
aas
cmp
loopne
inc
or
scas
les
loopne
add
les
adc
les
rol
and
aas
cmp
loopne
aam
leave
dec
and
xchg
sub
rol
les
rorb
mov
mov
les
dec
mov
hlt
testl
les
test
int3
les
or
or
or
or
scas
cmp
gs
les
les
cmp
aam
add
loopne
xchg
xchg
xchg
xchg
gs
testl
je
les
les
lods
negl
dec
add
xchg
sub
xchg
les
loopne
dec
cwtl
loopne
dec
mov
mov
dec
pop
loopne
sub
sbb
aam
inc
loopne
loopne
lret
inc
mov
nop
loopne
dec
mov
in
mov
dec
mov
call
sub
jle
cmp
loopne
add
jl
mov
dec
xchg
rolb
xor
add
rorb
rorb
adc
mov
inc
push
cmp
add
ret
int3
dec
or
push
std
cwtl
loopne
lret
inc
mov
les
les
mov
nop
dec
test
test
and
les
and
les
inc
aas
cmp
loopne
xchg
dec
mov
xchg
xchg
dec
nop
loopne
ja
xchg
dec
pop
loopne
sub
add
cmp
enter
loopne
les
inc
loopne
shrb
aas
cmp
les
inc
loopne
ret
loopne
mov
dec
and
xchg
sub
xlat
les
rorb
inc
les
loopne
add
les
and
les
pop
loopne
add
inc
loopne
ret
jo
insb
les
push
les
les
rorb
inc
les
loopne
les
inc
loopne
les
inc
loopne
les
rol
les
inc
loopne
loopne
mov
dec
nop
loopne
xchg
sub
xlat
les
shlb
cvttps2pi
mov
dec
int3
inc
or
or
mov
cmp
inc
aas
clc
mov
dec
jmp
ja
lret
jb
inc
mov
mov
ror
add
les
dec
mov
fcoms
loopne
xchg
scas
lds
adc
lret
inc
xor
inc
xor
les
ret
ja
add
les
sub
mov
jns
les
dec
test
mov
and
les
and
les
lds
test
mov
out
or
cld
sub
inc
aas
cmp
loopne
dec
rorl
loopne
xchg
xchg
xchg
dec
nop
loopne
dec
mov
pushf
add
add
cmp
inc
mov
inc
loopne
int
leave
dec
and
xchg
sub
les
rorb
movsb
divl
dec
test
mov
loopne
add
xor
jecxz
shrl
les
loopne
aam
and
mov
dec
and
lret
jb
hlt
dec
cwtl
std
rorb
movsb
cmp
mov
inc
mov
inc
loopne
lds
xchg
xchg
sub
les
sarb
loopne
cmp
inc
aas
clc
lret
inc
out
cmp
sub
dec
ret
dec
mov
in
scas
lds
loopne
xchg
scas
lds
adc
mov
xor
movl
cmp
clc
cmp
inc
pop
cmp
cmp
add
int
pusha
loopne
les
dec
inc
shrb
les
mov
dec
jae
xchg
lods
dec
dec
loopne
les
les
ret
mov
dec
rol
stc
mov
inc
rol
les
dec
dec
loopne
les
adc
loopne
aam
leave
dec
and
xchg
sub
aad
les
rorb
call
lret
les
and
les
and
les
inc
loopne
cmp
cmp
inc
xor
inc
push
cmp
add
ret
rorb
push
dec
or
or
int3
mov
dec
rorb
int3
dec
or
adc
dec
loopne
mov
les
dec
dec
loopne
testl
les
insb
pop
or
or
or
xchg
dec
xor
mov
dec
ret
stc
mov
ret
les
inc
add
fstl
ret
les
pop
dec
lret
scas
lds
mov
lahf
add
pop
or
or
int3
les
loopne
xchg
dec
xor
rol
shrl
cmp
dec
add
xchg
dec
xor
mov
dec
ret
xchg
cmp
in
ret
add
lcall
or
xor
les
ret
shl
and
fdivrl
aam
and
sarb
aam
and
aam
ret
and
enter
add
ret
and
sbb
aam
and
sarb
add
ret
and
cmp
aam
and
cmp
ret
and
xor
aam
and
xor
ret
and
sub
aam
and
movsb
cmp
loopne
sub
ret
and
and
aam
and
sbb
ret
and
add
add
ret
and
adc
aam
and
adc
ret
and
dec
and
add
ret
and
or
ret
and
add
aam
and
add
ret
and
or
ret
and
jo
ret
and
push
jl
aam
and
inc
jl
aam
inc
loopne
les
inc
loopne
les
inc
loopne
les
inc
loopne
les
ret
inc
loopne
les
ret
inc
loopne
les
aam
inc
loopne
les
aam
inc
loopne
les
loopne
les
loopne
les
loopne
les
loopne
les
loopne
les
loopne
les
loopne
les
inc
loopne
les
aam
inc
loopne
les
loopne
lock
aam
inc
loopne
les
ret
inc
loopne
call
inc
loopne
les
loopne
les
ret
inc
loopne
les
ret
inc
loopne
les
inc
loopne
les
inc
loopne
les
aam
inc
loopne
les
loopne
les
cmp
jb
dec
rolb
xor
les
or
or
or
or
or
or
inc
cmp
ret
ret
dec
rorb
ret
or
or
or
or
or
or
or
inc
sub
gs
ret
aam
xchg
xchg
xchg
idivl
inc
cld
les
dec
mov
rorb
loopne
dec
mov
loopne
mov
dec
lcall
dec
das
dec
and
dec
push
dec
mov
dec
int3
test
mov
out
add
dec
cmp
or
xor
mov
and
mov
dec
test
das
movl
sub
and
cmp
enter
leave
pushl
mov
pushl
lret
push
add
add
mov
and
dec
rolb
xor
aam
inc
inc
dec
and
mov
dec
mov
rorb
loopne
idivl
dec
rol
cmp
les
loopne
lret
inc
sbb
les
rorb
fmull
dec
and
dec
pop
les
dec
mov
dec
int3
test
mov
out
add
dec
cmp
sub
or
xor
mov
and
mov
dec
test
das
fwait
dec
mov
fmul
les
rolb
rol
les
les
ret
stos
fdivl
xchg
xchg
dec
or
dec
aas
cmp
std
mov
mov
dec
ret
dec
add
loopne
dec
aam
stos
sar
mov
mov
dec
repnz
add
lcall
inc
add
xchg
xchg
xchg
sub
and
cmp
enter
leave
pushl
mov
pushl
lret
push
add
add
repz
and
dec
rolb
cmp
inc
dec
and
lret
inc
clc
cmp
cmp
loopne
idivl
dec
mov
add
les
test
les
lahf
inc
add
pop
dec
mov
aam
rorb
cmp
loopne
xchg
dec
or
scas
aas
cmp
lahf
inc
add
pop
or
or
or
or
or
or
or
xchg
cmp
xchg
gs
or
or
or
jl
add
aam
or
or
or
or
or
jl
add
or
or
or
or
or
ret
gs
les
testl
shlb
jl
les
mov
int
mov
push
ret
and
les
roll
ret
and
les
sarb
aam
mov
shlb
les
or
or
or
or
or
ret
gs
les
testl
shlb
jl
les
xchg
xchg
aam
loope
rcll
ret
and
les
rorl
ret
mov
les
sarb
aam
mov
shlb
les
or
or
or
or
or
inc
cmp
lret
dec
mov
lret
inc
push
les
adc
lret
inc
jge
lret
jb
int3
and
inc
add
rcl
sahf
cmp
cmp
dec
and
add
les
rcrb
cmp
cmp
dec
and
add
aad
les
rcrb
cmp
cmp
dec
and
add
xlat
les
rcrb
cmp
cmp
dec
and
add
loop
les
rcrb
cmp
cmp
dec
and
add
in
les
rcrb
cmp
cmp
dec
and
add
fadd
les
rcrb
cmp
cmp
dec
and
add
mov
les
rcrb
cmp
cmp
dec
and
add
in
les
rcrb
cmp
cmp
dec
and
add
rol
les
rcrb
cmp
cmp
dec
and
add
jecxz
les
rcrb
cmp
cmp
dec
and
add
enter
dec
mov
lcall
cmp
dec
or
and
add
iret
les
rcrb
cmp
cmp
dec
and
add
les
rcrb
cmp
cmp
dec
and
add
fadd
les
rcrb
shl
lret
dec
outsb
lret
inc
dec
les
xor
les
inc
fnstcw
cmp
inc
cmp
lret
inc
hlt
mov
xor
rcl
loopne
and
rcl
adc
or
and
add
rol
les
rcrb
cmp
cmp
dec
and
add
add
les
rcrb
jmp
lret
inc
xchg
cmp
jmp
mov
inc
sub
lret
inc
adc
les
cmp
cmp
dec
and
add
aam
les
rcrb
cmp
cmp
dec
and
add
rol
les
rcrb
and
cmp
cld
lret
inc
push
mov
lret
jb
inc
es
loopne
shlb
aam
repz
cmp
dec
and
add
leave
les
rcrb
cmp
cmp
dec
and
add
push
les
rcrb
cmp
cmp
dec
and
add
imul
les
rcrb
cmp
cmp
dec
and
add
imul
rcrb
cmp
cmp
dec
and
add
ja
les
rcrb
cmp
cmp
dec
and
add
int
les
rcrb
cmp
cmp
dec
and
add
jbe
les
rcrb
cmp
cmp
dec
and
add
jo
les
rcrb
cmp
cmp
dec
and
add
jno
les
rcrb
cmp
cmp
dec
and
add
jb
les
rcrb
cmp
cmp
dec
and
add
lret
les
rcrb
cmp
cmp
dec
and
add
jae
les
rcrb
cmp
cmp
dec
and
add
or
les
rcrb
aas
cmp
dec
or
and
add
je
les
rcrb
aas
cmp
dec
or
and
add
jge
les
rcrb
aas
cmp
dec
or
and
add
jle
les
rcrb
aas
cmp
dec
or
and
add
jg
les
rcrb
aas
cmp
dec
or
and
add
js
les
rcrb
aas
cmp
dec
or
and
add
jns
les
rcrb
aas
cmp
dec
or
and
add
add
mov
lcall
cmp
dec
or
and
add
add
les
rcrb
aas
cmp
dec
or
and
add
pop
loop
les
rcrb
aas
cmp
dec
or
and
add
or
mov
lcall
cmp
dec
or
and
add
or
les
rcrb
cmp
dec
or
and
add
adc
les
rcrb
cmp
dec
or
and
add
push
loop
les
rcrb
cmp
dec
or
and
add
push
loop
les
rcrb
cmp
dec
or
and
dec
hlt
dec
mov
lcall
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
and
aam
vshufps
rcl
aad
aad
aad
ret
ror
rol
aad
aad
aad
aad
into
aad
iret
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
leave
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
lret
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
lret
aad
aam
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
leave
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
iret
dec
les
rcl
sbb
aam
sbb
aam
and
aam
mov
mov
mov
cmp
rcl
sbb
aam
sbb
aam
sbb
aam
sbb
aam
and
aam
sbb
aam
sbb
aam
and
aam
sbb
aam
sbb
aam
and
aam
sbb
aam
and
aam
and
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
and
aam
and
aam
sbb
aam
sbb
aam
sbb
aam
and
aam
fcmovu
fcmovb
fcmovu
fcmovu
fcmovu
fcmovb
fcmovb
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
rol
int3
int
iret
enter
fcmove
aam
xlat
rcl
rcl
fcmovu
fcmovu
fcmovu
or
or
or
or
ret
gs
les
gs
testl
call
negl
dec
cwtl
loopne
xor
mov
int3
aam
mov
jl
int
mov
int3
aam
leave
lods
loopne
ret
nop
xchg
aam
and
add
test
int3
aam
les
lods
xchg
aam
fstps
mov
cmp
ss
les
rorb
dec
and
xchg
sub
mov
les
rolb
orl
lret
les
and
les
and
les
lds
test
mov
out
or
fsubrl
mov
cmp
les
loopne
add
les
loopne
das
sarl
aam
mov
clc
scas
cmp
lret
les
adc
les
les
lods
aas
cmp
xor
lds
in
aam
leave
dec
mov
rclb
les
rorb
mov
call
les
call
or
or
or
ret
gs
les
cmp
aam
add
loopne
xchg
xchg
xchg
xchg
gs
testl
andb
dec
mov
pushf
dec
mov
xchg
xchg
dec
and
xchg
lods
rol
xchg
xchg
dec
cwtl
loopne
lods
xlat
les
loopne
dec
cwtl
loopne
cmp
nop
gs
mov
rorb
dec
test
in
les
loopne
incl
mov
scas
leave
add
les
shrb
or
sub
mov
cmp
loopne
sub
dec
add
lret
les
loopne
dec
cwtl
loopne
dec
mov
dec
aam
pop
mov
out
add
sub
mov
cmp
loopne
add
pop
lret
inc
push
les
cmp
xor
int
fxch
les
loopne
inc
mov
mov
in
mov
dec
mov
in
inc
clc
cmc
into
mov
dec
mov
pushl
int
cmp
les
loopne
inc
mov
mov
in
mov
dec
mov
in
inc
clc
cmc
leave
mov
scas
cmp
sub
mov
cmp
loopne
incl
mov
das
repnz
mov
dec
mov
pushl
int
jl
les
loopne
inc
mov
mov
in
mov
dec
mov
in
inc
clc
cmc
ljmp
dec
mov
call
cmp
loopne
jp
les
fmull
rclb
shrb
aas
cmp
loopne
aam
and
les
in
xchg
sub
inc
add
dec
mov
clc
dec
cwtl
loopne
dec
cwtl
loopne
xchg
dec
cwtl
loopne
cmp
xchg
gs
add
loopne
mov
les
dec
mov
call
les
clc
push
int3
les
loope
gs
loope
retw
loope
retw
leave
enter
mov
aaa
pop
sub
dec
cmp
mov
xchg
idivl
pushl
mov
testl
mov
sub
out
les
xchg
xchg
xchg
xchg
xchg
sub
ret
les
rorb
das
cmp
std
mov
mov
xchg
cmp
sub
xchg
les
enter
mov
xchg
cmp
les
enter
mov
std
mov
mov
sub
out
les
dec
xor
pushf
fwait
lcall
sub
rclb
add
mov
sub
out
les
xchg
xchg
xchg
xchg
xchg
sub
ret
les
rorb
das
in
std
mov
or
out
les
dec
xor
mov
cmp
les
enter
lcall
sub
les
xchg
dec
sub
cmp
inc
movsb
rol
movsb
int3
les
cld
add
cmp
cltd
int3
xchg
xchg
dec
cmp
ret
movl
fwait
xlat
les
adcb
popf
popf
dec
add
add
cmp
xchg
xchg
sub
pop
les
enter
mov
int3
les
fwait
lcall
cmp
dec
mov
add
cld
add
inc
movsb
int3
les
rcrb
xchg
dec
sub
dec
xor
ret
xchg
dec
or
add
xchg
xchg
mov
inc
add
jecxz
sub
les
adcl
popf
popf
dec
add
add
fdivrl
mov
xchg
xchg
sub
pop
les
enter
mov
dec
add
dec
add
les
int3
les
ret
int
mov
sub
aad
les
inc
add
sarl
aam
dec
cmp
or
cmp
cmp
add
pushf
add
lcall
xchg
dec
sub
xor
cmp
ret
ret
add
add
pushf
add
cmp
cmp
xchg
dec
sub
dec
xor
cmp
ret
ret
add
dec
cmp
mov
dec
xor
cmp
ret
ret
add
dec
cmp
mov
dec
xor
cmp
ret
ret
add
dec
cmp
mov
dec
xor
cmp
ret
ret
add
add
mov
sarl
cmp
dec
cmp
xor
cmp
or
sub
cmp
cmp
push
rol
cmp
xor
ret
daa
cmp
cmp
or
sub
cmp
cmp
push
rol
cmp
xor
ret
js
cmp
xor
xchg
sub
cmp
cmp
push
rol
cmp
aam
dec
mov
xchg
idivl
dec
mov
fisubrl
in
les
xchg
xchg
xchg
dec
hlt
sub
rol
inc
add
dec
add
scas
loopne
cmp
les
les
enter
incl
mov
dec
int3
dec
test
inc
cmp
dec
mov
mov
xchg
cmp
mov
sub
in
les
das
js
cmp
mov
cmp
mov
xchg
xchg
lods
inc
mull
iret
stc
les
inc
add
pop
jg
xor
dec
mov
mov
dec
sbb
add
xor
scas
cmp
sbb
cmpl
dec
add
pop
dec
cmp
test
push
pop
xchg
xchg
sub
inc
out
add
pop
scas
les
xchg
xchg
xchg
sub
inc
les
xor
cmp
xchg
xor
xor
mov
cmp
inc
add
lds
xor
dec
or
and
dec
or
or
scas
mov
inc
push
mov
dec
or
les
push
xor
aas
inc
xchg
xor
das
testb
dec
or
and
mov
cmp
pop
popf
xor
dec
or
les
push
xor
add
les
int3
scas
les
adc
sub
clc
les
pop
lods
inc
push
cmp
cmp
xchg
xor
cmp
jle
cmp
aam
sarl
ret
aam
sbb
or
mov
std
fmuls
jg,pt
xchg
dec
mov
out
rorb
dec
or
or
cmp
sub
inc
les
popf
pop
xor
aam
les
mov
xchg
dec
xchg
fsubrl
inc
les
pop
lods
xor
cmp
xchg
xchg
sub
inc
les
xor
xchg
sub
inc
les
shrb
lcall
fwait
lcall
sub
les
inc
xor
xchg
sub
cmp
cmp
sbb
add
xor
pop
dec
cmp
int3
xchg
sub
mov
les
les
xchg
add
mov
arpl
dec
cmp
xor
cmp
or
sub
aas
cmp
popf
dec
add
dec
cmp
int3
inc
add
int
sub
mov
les
sbb
filds
les
xchg
dec
sub
int3
inc
add
int
sub
mov
les
sbb
filds
rol
hlt
mov
les
test
leave
mov
aam
leave
push
cmp
aam
mov
les
ds
aam
dec
cmp
enter
mov
sub
repnz
les
cmp
les
or
xchg
aam
jp
xchg
aam
fldl
pop
xchg
aam
dec
or
sub
aam
imul
dec
mov
sub
push
aas
cmp
xorl
les
dec
cmp
int3
addr16
xchg
aam
pop
dec
cmp
in
mov
ret
aam
add
cmp
sbb
cmp
les
sbb
cmp
scas
les
dec
inc
sbb
cmp
dec
inc
in
cmp
cmp
hlt
cmp
cmp
enter
cmp
cmp
and
cmp
dec
dec
sbb
cmp
dec
push
sbb
cmp
dec
pop
adc
cmp
dec
jno
cmp
cmp
or
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
pop
dec
inc
xor
cmp
dec
add
inc
hlt
cmp
cmp
inc
sub
cmp
dec
dec
xor
cmp
dec
lea
dec
dec
and
cmp
add
cmp
cmp
rol
add
cmp
cmp
les
and
cmp
cmp
lods
gs
les
cmp
mov
inc
in
cmp
cmp
aam
add
enter
int3
scas
sub
mov
les
add
rcrl
cmp
pushf
gs
mov
testl
cmp
or
dec
sub
icebp
pop
xchg
aam
push
add
popf
inc
add
cltd
cmp
sub
mov
les
cmp
testl
sub
cmp
cmp
rolb
dec
cmp
xchg
xchg
cmp
lods
cmpsb
int3
aam
fs
cmp
mov
cmp
mov
les
popf
popf
pushl
lret
inc
inc
les
out
sbb
rolb
mov
xchg
sub
mov
les
dec
xchg
popf
cmp
mov
cmp
dec
add
add
add
cmp
repnz
les
rorb
aam
add
cmp
repnz
les
cmc
add
lock
sub
add
popf
lods
cmpsb
int3
aam
mov
sub
add
dec
ret
rclb
popf
addr16
aam
or
add
lcall
scas
shrb
les
xchg
sub
add
inc
add
lods
cmpsb
int3
aam
mov
xor
lcall
lcall
ret
aam
mov
les
cmp
cmp
cmp
popf
dec
andl
cmp
cmp
andl
les
sub
mov
les
dec
cmp
int3
sub
cmp
cmp
sbb
add
sbb
mov
dec
sub
inc
cmpsb
int3
aam
mov
lods
inc
cmpsb
int3
aam
scas
xchg
les
cmp
inc
cmpsb
int3
aam
lcall
ret
xchg
sub
mov
les
shrl
scas
enter
ret
aam
jle
les
mov
pushf
cmp
cmp
dec
subl
dec
mov
xchg
xchg
sub
xchg
les
sub
mov
sub
mov
les
dec
cmp
dec
add
sub
add
xchg
sub
add
inc
add
out
dec
mov
xchg
sub
add
xchg
sub
add
inc
add
leave
cmp
nop
fs
cmp
test
ret
shll
das
fisttps
int3
dec
xchg
nop
dec
xchg
nop
dec
xchg
pushf
dec
xchg
pushf
dec
xchg
rclb
mov
les
inc
cmpsb
int3
aam
mov
lods
inc
cmpsb
int3
aam
push
xchg
les
cmp
inc
cmpsb
int3
aam
stc
cmp
cmp
dec
cmp
xchg
dec
mov
cltd
cmp
aas
mov
sub
in
les
add
rol
les
cmp
cmp
shl
add
mov
les
lds
test
popf
pushl
mov
sub
add
cmp
les
rolb
sarb
sbbb
mov
dec
adc
xchg
lods
jg
rcl
mov
cmp
gs
pop
mov
cmp
nop
fs
cmpl
les
int
mov
sub
in
les
lahf
or
mov
aam
jle
les
cmp
xchg
les
iret
les
enter
les
xchg
dec
sub
rclb
mov
dec
cltd
cmp
cltd
xor
cmp
aaa
mov
sub
in
les
xchg
xchg
xchg
dec
hlt
sub
cmp
cmp
rorb
sub
xchg
scas
loopne
cmp
les
les
enter
aas
mov
sub
in
les
xchg
xchg
xchg
dec
hlt
sub
cmp
cmp
shrb
in
dec
add
pop
dec
lret
mov
movzbl
inc
cmp
mov
cmp
mov
sub
fcmovnb
les
dec
add
sub
cltd
les
cmp
sub
cltd
les
xchg
xchg
xchg
xchg
xchg
sub
cmp
inc
add
dec
xorl
les
xchg
xchg
xchg
xchg
xchg
sub
cmp
inc
add
dec
cmpl
les
xchg
xchg
xchg
xchg
xchg
sub
cmp
inc
add
dec
or
cmovg
mov
cmp
les
pop
out
cmp
subl
dec
mov
sub
xor
cmp
inc
mov
std
cltd
cmp
inc
test
les
les
test
les
xor
subl
fstl
xor
cmp
inc
rol
les
and
les
xchg
xchg
sub
xor
cmp
inc
cmp
cltd
cmp
notb
les
dec
mov
dec
cmpl
or
push
dec
or
cmp
cmp
push
fistps
les
lret
dec
ret
cmp
cmpl
cmp
push
scas
les
enter
dec
ret
mov
inc
add
dec
ret
cmp
xchg
sub
test
add
push
pop
scas
cmp
clc
xlat
push
xchg
xchg
sub
test
dec
add
add
enter
inc
add
dec
add
pop
cmp
xchg
sub
test
or
push
pop
scas
cmp
push
xchg
xchg
sub
test
dec
or
add
enter
inc
add
cmp
xchg
sub
test
push
mov
or
fadd
add
xor
lds
lds
lcall
xor
sub
fmull
vminsd
lds
dec
xchg
faddl
mov
lds
cmp
add
les
jle
cmp
cld
sti
les
inc
xor
xchg
sub
cmp
cmp
sbb
add
xor
pop
dec
cmp
dec
cmpl
ret
cmpl
rol
add
pop
les
in
cmpsb
cmp
les
ret
mov
cmp
inc
or
dec
adc
mov
inc
or
dec
xchg
rorb
mov
aam
sub
dec
andl
incl
mov
dec
or
xchg
rol
mov
dec
mov
cmp
andl
cmp
sub
les
mov
les
rol
inc
mov
cmp
cmp
sub
les
scas
shrb
inc
mov
les
cmp
cmp
mov
out
mov
dec
mov
cmp
subl
andl
and
andl
sbbl
dec
sbbl
les
sub
cmpl
sub
mov
les
aam
scas
enter
ret
aam
in
mov
les
and
dec
mov
dec
add
imul
mov
aam
iret
in
mov
dec
mov
cmp
andl
add
cmp
les
mov
les
aam
inc
mov
cmp
cmp
sub
cmp
cmp
dec
cmp
enter
cmp
mov
xchg
sub
cmpsb
les
testl
les
mov
sub
cmpsb
les
sub
les
sarl
cmpsb
int3
aam
add
pusha
xchg
aam
es
les
mov
les
or
fwait
les
mov
les
mov
cld
add
popf
inc
add
iret
cmp
fs
aam
insb
les
cwtl
les
or
mov
std
stc
fs
aam
inc
cmp
fs
aam
stc
movsb
or
mov
sub
mov
std
mov
adc
les
test
les
movsl
les
scas
inc
cmp
mov
sub
test
les
lds
ljmp
pushl
lret
inc
repnz
cmp
ret
aam
icebp
call
mov
les
mov
xchg
xchg
sub
test
les
gs
mov
cmp
das
fcoml
les
cmp
mov
xchg
sub
xchg
les
lcall
lods
mov
push
mov
les
dec
ss
cltd
int3
testl
xor
xchg
aam
inc
add
les
cmp
pushl
roll
mov
gs
insl
ret
add
int3
xchg
xchg
xchg
cmp
and
lret
inc
push
les
cmp
cmp
and
lret
inc
inc
les
mov
cmp
and
lds
in
xchg
xchg
sub
mov
cmp
xchg
cmp
gs
insl
ret
add
ret
les
mov
inc
cmp
mov
xchg
xchg
xchg
sub
cmp
cmp
mov
in
and
and
mov
gs
insl
ret
add
int3
xchg
xchg
xchg
cmp
cmp
cmp
cmp
and
sub
dec
int
xchg
sub
mov
les
sub
cmpl
testl
pop
dec
cmp
enter
sub
movsb
les
mov
dec
mov
dec
xchg
enter
cmp
popf
cltd
push
enter
xchg
dec
sub
enter
inc
or
fisubrl
ffree
les
rol
testl
sub
xor
cmp
shl
add
pop
dec
mov
xchg
dec
cltd
aam
divl
lcall
mov
lcall
ffree
les
add
rol
les
add
testl
mov
scas
rcrb
mov
dec
ror
cmp
xchg
sub
les
mov
dec
shl
add
fadd
xor
out
out
pop
dec
adc
adc
cmp
dec
cmp
int3
inc
add
enter
cmp
les
xchg
dec
sub
cmp
cmp
inc
add
cltd
pop
scas
enter
ret
aam
outsb
add
inc
mov
int3
push
call
out
shrb
les
xchg
sub
scas
les
cmpl
sub
les
and
add
pop
scas
shrb
les
dec
sub
cmp
inc
gs
les
fs
stc
nop
mov
aam
mov
sub
mov
les
les
pop
xchg
les
int3
aam
cmp
mov
inc
xor
testl
cmp
mov
xchg
sub
cmp
cmp
inc
xor
lret
inc
and
scas
les
icebp
nop
mov
aam
adc
inc
pop
mov
scas
enter
jo
int3
aam
sarl
mov
sub
in
les
dec
mov
sub
sub
fadd
les
sub
fadd
les
fwait
dec
pop
lahf
das
rclb
les
les
enter
testl
lods
jl
ret
aam
push
add
inc
xor
movsl
int3
aam
mov
scas
shrb
les
xchg
sub
movsl
les
add
int
xchg
sub
movsl
les
cmp
cmp
sub
les
and
mov
cmp
shrb
les
cmp
nop
mov
aam
rcr
fs
add
shrb
rol
les
cmp
nop
fs
sub
rol
les
popf
sub
add
xchg
dec
sub
cmp
cmp
push
lds
mov
sub
out
les
cmp
xor
add
xchg
aam
roll
xchg
aam
add
or
or
or
loopne
xor
mov
dec
lds
lds
mov
xor
mov
rol
les
loopne
les
loopne
les
jle
cmp
mov
cmp
push
inc
add
lds
sub
test
inc
add
testb
loopne
les
les
les
mov
das
or
cmp
loopne
out
add
dec
mov
shr
pop
dec
test
dec
mov
shr
pop
dec
test
dec
mov
shr
pop
dec
cmp
in
mov
ret
aam
add
cmp
shll
int3
scas
into
sub
mov
les
les
mov
scas
shrb
scas
les
ret
aam
lret
inc
push
les
and
cmp
dec
dec
sbb
cmp
dec
push
sbb
cmp
dec
pop
adc
cmp
dec
jno
cmp
cmp
or
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
pop
dec
inc
xor
cmp
dec
mov
dec
add
cmp
add
cmp
cmp
jno
cmp
cmp
cmp
cmp
cmp
sbb
cmp
scas
les
dec
inc
sbb
cmp
inc
add
dec
inc
in
cmp
cmp
hlt
cmp
cmp
cmp
cmp
les
cmp
call
shll
inc
in
cmp
cmp
aam
sub
xchg
les
dec
cmp
enter
ret
aam
xchg
int3
out
enter
or
push
dec
leave
mov
ret
aam
pop
dec
cmp
dec
or
cmpl
les
mov
les
int3
dec
cltd
enter
dec
cmpsl
cmp
and
or
popf
inc
shl
and
cmp
xchg
xchg
xchg
mov
les
cmp
cmpl
les
mov
cmp
sub
rol
les
enter
inc
and
dec
mov
dec
test
mov
les
cmp
mov
les
int3
les
int3
xchg
xchg
xchg
cmp
cmp
add
xchg
xchg
cmp
cmp
cmp
les
in
cmpl
cmp
and
dec
sub
dec
mov
testl
cmp
sarb
mov
scas
les
mov
cmp
sub
loopne
les
in
cltd
pop
dec
cmp
cld
xchg
inc
mov
les
rcl
mov
dec
test
inc
mov
sbb
cmp
aam
enter
dec
mov
add
sbb
or
sbb
and
mov
cmp
inc
mov
xor
cmp
gs
les
sbb
sbbl
les
orl
or
aam
adcl
dec
inc
inc
les
adc
or
cmp
mov
cmp
mov
mov
les
dec
cltd
sbb
mov
les
int
sbbl
les
or
or
dec
sub
enter
testl
int3
dec
test
inc
and
mov
dec
or
testl
scas
lds
enter
dec
or
or
les
mov
dec
or
mov
sub
out
les
in
or
mov
cmp
sub
cmp
cmp
les
cmpl
les
add
dec
cmpl
cmpsl
fmuls
in
and
add
lahf
or
dec
sub
mov
dec
mov
dec
cmpl
inc
cmp
mov
sub
xchg
les
cmp
rol
add
mov
mov
mov
mov
cmp
dec
mov
inc
mov
dec
adc
sbb
enter
aaa
mov
sub
xchg
les
scas
add
movl
xchg
dec
sub
enter
int3
dec
ret
std
les
pop
les
shrb
les
pop
les
lcall
sub
cld
les
pop
les
into
dec
int3
decl
test
inc
add
test
pop
dec
cmp
push
cld
les
int3
pushl
les
les
rorb
les
cld
les
pop
les
int
mov
pushl
inc
mov
lcall
dec
mov
dec
mov
das
push
dec
cmp
fsubl
cmp
aam
mov
sub
add
xorl
xor
rolb
rcl
mov
les
sub
subl
les
mov
xchg
cmp
les
dec
subl
les
or
icebp
les
loopne
out
mov
xchg
dec
in
dec
sub
enter
testl
add
cmp
xor
les
xchg
mov
les
loopne
out
mov
xchg
dec
in
dec
sub
enter
testl
cmp
cmp
cmp
dec
xorl
les
dec
mov
mov
les
dec
and
xchg
dec
sub
in
or
popf
jp
add
and
popa
dec
cmpl
cmpl
enter
mov
add
lds
xor
and
mov
cmp
inc
gs
push
int3
les
xchg
dec
sub
dec
inc
js
negl
xchg
incl
mov
stc
call
lods
dec
inc
je
incl
mov
std
fdivl
incl
mov
std
fdivl
cmp
cmp
jb
les
stos
les
incl
mov
std
fdivl
cmp
cmp
jb
les
test
les
les
cmp
cmp
jb
les
cmp
cmp
incl
mov
std
fdivl
jmp
xchg
sub
cmp
cmp
or
les
out
add
dec
inc
adc
out
add
cmp
les
xor
cmp
aam
jp
les
stc
inc
int3
aam
sar
pop
jo
les
scas
les
repz
xor
cmp
add
les
cmp
cmp
aam
aad
ret
incl
mov
std
fdivl
xor
cmp
dec
add
pop
mov
std
fdivl
xor
cmp
mov
mov
xchg
sub
xor
cmp
pop
dec
cmp
dec
icebp
fsubs
xchg
dec
mov
dec
inc
je
les
mov
xchg
cmp
dec
inc
jl
les
mov
xchg
cmp
dec
inc
jo
les
mov
xchg
cmp
dec
inc
add
les
mov
xchg
cmp
dec
fwait
xchg
add
les
cmp
cmp
aam
int
movl
adc
cmp
mov
dec
xchg
inc
add
xchg
cmp
inc
pop
aam
mov
mov
dec
inc
adc
les
cltd
pop
dec
cmp
mov
inc
inc
les
fs
cmp
dec
inc
je
les
mov
xchg
cmp
dec
inc
jl
les
mov
xchg
cmp
dec
inc
jo
les
mov
xchg
cmp
dec
inc
add
les
mov
xchg
cmp
dec
fwait
xchg
add
les
cmp
cmp
aam
int
movl
adc
cmp
mov
dec
xchg
inc
add
xchg
cmp
inc
pop
aam
mov
mov
dec
inc
adc
les
add
xchg
dec
xor
inc
add
sar
add
popf
dec
cmp
popa
inc
in
xchg
sub
cmp
cmp
cmp
notl
mov
xchg
dec
cld
sub
cmp
cmp
xchg
sub
cmp
cmp
les
fs
aam
ret
xchg
sub
cmp
cmp
testl
mov
aam
mov
mov
les
gs
cmp
aam
xorb
mov
sub
lock
les
test
xor
stos
cld
les
inc
les
scas
enter
les
dec
subb
aam
lods
cmp
cmp
and
cmpl
sub
les
add
xchg
les
gs
mov
dec
leave
fadds
int3
dec
leave
in
int3
aam
dec
insb
les
mov
dec
adc
les
cld
dec
dec
js
les
cwtl
ds
aam
dec
or
les
sarb
ret
aam
inc
push
clc
pop
scas
int3
lods
cmp
ret
aam
jo
les
int3
inc
xor
inc
dec
les
les
dec
add
add
fcoms
aam
add
aad
add
mov
int3
aam
ret
xchg
sub
xor
cmp
cmp
cmp
les
les
adc
les
les
repnz
cmp
cmp
mov
inc
cld
les
ret
aam
ret
xchg
sub
aas
cmp
popf
add
cmp
les
imul
xchg
sub
xor
cmp
les
dec
mov
scas
leave
sub
nop
les
scas
enter
les
dec
cmp
dec
mov
aas
mov
aam
add
cmp
cmp
sub
mov
les
enter
leave
xchg
xchg
xchg
xchg
xchg
sub
and
cmp
rorb
lahf
cltd
pop
dec
cmp
xchg
dec
mov
negl
xchg
xchg
sub
out
les
enter
add
inc
add
ret
testl
dec
add
fdivl
dec
inc
inc
les
mov
les
aam
add
leave
xchg
xchg
xchg
xchg
xchg
sub
and
cmp
rorb
les
add
aam
dec
cltd
enter
incl
sub
inc
mov
hlt
dec
lret
inc
push
les
lret
inc
dec
les
int3
das
incl
enter
inc
cmp
mov
inc
aas
fwait
mov
xchg
dec
or
add
das
fiaddl
enter
inc
cmp
mov
inc
pop
mov
inc
aas
call
or
sub
xchg
sub
mov
les
aam
add
lret
testl
sub
and
cmp
rolb
lret
inc
jecxz
cmp
inc
pop
lret
inc
fstpt
cmp
cmp
lods
je
ret
sub
mov
les
popf
popf
lret
inc
pushf
cmp
cmp
cmp
dec
cmp
dec
mov
xchg
cmp
sub
out
les
enter
add
leave
xchg
xchg
xchg
xchg
xchg
sub
and
cmp
rorb
test
fdivl
push
ret
cmp
sub
cmp
cmp
rorb
inc
cld
fcompl
lods
int3
js
aam
cmp
sub
cmp
cmp
rcrb
dec
sub
rclb
xchg
mov
sub
fadd
les
add
inc
xchg
xchg
dec
mov
dec
fmull
cmp
lcall
dec
xorl
aam
icebp
xor
lods
xchg
mov
cmp
cmp
xor
fmull
xor
cmpl
lods
sbb
ret
aam
xchg
mov
mov
les
enter
lret
testl
sub
and
cmp
sarb
mov
dec
xorl
call
inc
add
rolb
les
cmpl
cmp
add
hlt
dec
xchg
dec
cmpl
aam
hlt
scas
lods
xchg
mov
cmp
cmp
faddl
cmp
push
ret
dec
inc
mov
dec
adcb
inc
add
aam
cmp
inc
add
int
mov
sub
xor
adcb
cmp
inc
add
int
mov
sub
xor
subl
inc
mov
xchg
dec
mov
mov
mov
sub
xor
xchg
dec
stc
loopne
ret
pop
popf
incl
mov
xchg
cmp
inc
add
int
mov
sub
xor
adcb
cmp
inc
add
int
mov
sub
xor
subb
dec
lcall
or
dec
sub
jo
les
cmp
aam
add
cmp
enter
mov
xchg
dec
mov
cmp
cmp
fmull
cwtl
cmp
cmp
movsb
cmp
cmp
pop
les
in
dec
dec
nop
cmp
cmp
call
imul
les
pushf
cmp
cmp
lods
cmp
cmp
lret
inc
jl
les
mov
lret
inc
outsl
inc
mov
gs
inc
cli
xchg
les
ret
mov
cmp
cmp
cmp
in
les
enter
add
leave
xchg
xchg
xchg
xchg
xchg
sub
daa
cmp
inc
add
cmp
dec
ret
mov
dec
add
inc
movsb
cmp
cmp
add
inc
mov
add
les
cmp
les
cmp
incl
mov
xchg
cmp
cmp
cmp
out
les
inc
je
les
cmp
sub
out
les
inc
pop
les
mov
cmp
les
test
cmp
xchg
xchg
sub
aas
cmp
popf
popf
inc
add
inc
and
les
test
cmp
xchg
xchg
xchg
sub
mov
les
enter
inc
or
lret
jae
rorb
cmp
cmp
dec
inc
test
cmp
xchg
xchg
cmp
cmp
cmp
cmp
cmp
enter
mov
dec
inc
xchg
cmp
cmp
add
cmp
cmp
cs
xchg
xchg
xchg
cmp
cmp
cmp
mov
les
aam
add
aad
xor
sub
cmp
inc
add
das
divl
std
jno
cmp
cmp
cmp
cmp
cmp
add
std
jno
cmp
cmp
jno
cmp
cmp
jno
cmp
cmp
fcmovb
les
enter
cmp
cmp
mov
cmp
cmp
cmp
in
les
enter
leave
xchg
xchg
xchg
xchg
xchg
sub
and
rorb
lods
cmp
cmp
testl
testl
cmp
or
dec
sub
add
les
cmp
aam
add
cmp
xchg
jmp
int3
dec
cmp
inc
lods
cmp
cmp
cmp
dec
inc
mov
xchg
inc
add
cmp
cmp
faddl
mov
testl
and
dec
fdiv
cmp
cmp
cmp
popf
popf
inc
add
inc
mov
inc
mov
sub
sub
cmp
rcll
sub
fadd
les
cmp
cmp
mov
dec
xchg
cwtl
cmp
cmp
dec
enter
scas
or
cmp
cmp
dec
inc
pushf
cmp
cmp
cmc
scas
ret
inc
mov
inc
clc
cmp
cmp
dec
add
dec
mov
dec
dec
mov
cmp
dec
inc
mov
cmp
dec
inc
mov
cmp
inc
add
xchg
xchg
sub
loop
les
faddl
mov
testl
sub
and
cmp
rorb
mov
cmp
dec
dec
test
cmp
inc
add
dec
xchg
cmp
dec
lds
cmp
cmp
cmp
fadd
les
enter
lret
inc
xor
les
lods
cmp
cmp
mov
cmp
les
rorb
dec
mov
dec
inc
mov
add
sar
mov
dec
aam
inc
mov
cmp
dec
int3
dec
dec
mov
push
cmpb
cmp
rorb
dec
dec
cmpb
cmp
int3
inc
jns
cmp
cmp
dec
push
mov
add
out
inc
mov
cmp
inc
add
fmull
add
dec
rorl
rorb
dec
int3
dec
dec
mov
mov
inc
jns
cmp
cmp
mov
scas
lds
mov
dec
inc
mov
mov
xchg
scas
mov
aam
lds
les
in
add
std
testl
mov
inc
cmp
mov
lods
cmp
les
icebp
mov
ret
aam
inc
mov
sub
mov
les
enter
add
dec
add
rolb
les
rorb
add
inc
insb
les
int3
lds
cmp
cmp
int3
dec
or
cmp
ret
inc
add
cmc
dec
inc
cwtl
cmp
cmp
jno
cmp
cmp
mov
sub
cmp
pushf
cmp
cmp
cmp
dec
lds
mov
cmp
dec
add
je
cmp
inc
jns
cmp
cmp
aam
jmp
add
add
hlt
cmp
cmp
loopne
ret
add
sarl
repz
sub
cmp
mov
sub
sub
cmp
mov
popf
popf
dec
mov
dec
inc
mov
cmp
inc
add
add
les
cmc
dec
xchg
or
cmp
dec
sub
pop
les
cmp
aam
add
cmp
int3
xchg
xchg
negl
dec
ss
dec
jno
cmp
cmp
pop
mov
decl
mov
xchg
sub
cmp
cmp
les
hlt
mov
add
cmp
cmp
les
mov
cmp
decl
lret
inc
outsb
inc
std
mov
inc
hlt
inc
mov
loop
les
fwait
lret
inc
fadd
les
lods
jl
ret
sub
dec
les
popf
popf
inc
pop
lret
inc
cmp
out
add
mov
cmp
lret
inc
xor
dec
inc
sub
les
inc
test
cmp
les
add
dec
inc
mov
cmp
xchg
xchg
cmp
sub
dec
les
enter
aam
repnz
das
cmp
popf
std
inc
mov
cmp
mov
cmp
cmp
cmp
enter
push
ret
or
ret
aam
sub
test
les
divl
popf
popf
cmp
lret
inc
inc
les
test
cmp
sarl
mov
inc
les
inc
add
inc
add
leave
xchg
xchg
xchg
xchg
xchg
sub
sbb
cmp
sarb
jno
cmp
cmp
lods
cmp
cmp
mov
inc
stc
mov
sub
aas
cmp
popf
inc
add
ret
mov
cmp
aas
inc
sti
les
lret
inc
les
cmp
testl
les
lods
cmp
cmp
mov
add
mov
xchg
xchg
lods
inc
les
mov
xchg
sub
cmp
fdivr
pop
mov
dec
mov
idivl
repz
inc
mov
sub
loope
les
fstl
cmp
sub
aas
cmp
popf
inc
add
int3
in
mov
cmp
das
ret
mov
cmp
xchg
aam
aas
sarl
mov
cmp
mov
std
inc
mov
cmp
mov
sub
xor
cmp
cmp
sub
adc
cmp
in
ret
aam
mov
negl
dec
cltd
and
mov
sub
add
rol
les
sub
sbb
cmp
shl
add
call
fucomip
les
dec
mov
sub
aaa
cmp
inc
mov
lds
rcl
les
mov
inc
sub
les
les
les
test
add
cmp
dec
cltd
cmp
les
mov
dec
mov
dec
adc
cmp
cmp
pop
lret
inc
pusha
std
cltd
enter
pop
cmp
aam
mov
sub
loopne
les
into
add
or
int3
aam
les
les
les
test
pop
sub
cmp
xchg
sub
xor
xorb
cmp
aam
mov
dec
jl
cmp
aam
push
cmp
scas
fsubl
cmp
aam
add
xchg
lods
rolb
les
enter
cmp
inc
mov
les
jmp
mov
negl
scas
enter
les
scas
enter
les
sub
xor
outsl
sub
cmp
cmp
cmp
sub
les
and
cld
ljmp
inc
mov
cmp
int3
testl
xlat
test
jmp
sub
aad
lret
pushf
cltd
pop
dec
rorb
ds
aam
pop
roll
popf
decl
add
add
pop
sub
loop
les
mov
jl
aas
ret
aam
inc
add
pop
sub
loop
les
mov
jl
aas
ret
aam
inc
add
pop
dec
cmp
cmp
cmp
int3
xchg
dec
int3
sub
cmp
cmp
cmp
cmp
lcall
sub
mov
cmp
aam
add
cmp
mov
xchg
dec
cltd
adc
and
and
cltd
sbb
cltd
sbb
jo
cltd
jl
lcall
les
sar
mov
xchg
lret
jae
hlt
lods
rcl
les
sub
test
inc
add
inc
add
les
les
les
cmp
les
and
aad
les
and
and
les
les
sbb
sbb
les
loopne
sbbl
inc
mov
cltd
and
inc
mov
incl
lret
inc
scas
mov
std
cltd
and
inc
cmpsb
mov
std
cltd
sbb
inc
popf
mov
dec
adcl
dec
mov
dec
ror
stc
mov
xchg
cmp
gs
add
inc
jmp
les
sub
lret
inc
loope
lret
jae
sub
cmp
dec
adcl
mov
dec
subl
mov
lret
jb
cmp
jb
das
iret
dec
mov
add
lret
in
jb
cmp
mov
pushf
cmp
xchg
xchg
cmp
les
cmp
scas
lds
les
in
add
inc
add
les
and
sbbl
jnp
les
les
cmp
dec
les
loopne
add
inc
dec
dec
sbbl
inc
les
xchg
test
cmp
dec
les
loopne
add
inc
movsb
dec
andl
dec
cmp
notl
inc
mov
aad
xchg
sbb
mov
dec
dec
inc
les
dec
sahf
mov
js
dec
inc
les
or
fnstsw
mov
dec
mov
dec
mov
dec
aad
pop
mov
lret
jb
cmp
jb
decl
dec
mov
jecxz
dec
mov
das
dec
mov
cmp
les
dec
mov
dec
mov
lret
jb
std
mov
es
mov
test
popf
cmp
les
mov
xchg
xchg
sub
rol
les
xchg
xchg
sub
rol
les
sbb
mov
les
les
add
les
loopne
pop
mov
xchg
cmp
loopne
ret
add
test
add
jmp
xchg
sub
and
cmp
or
les
out
add
dec
inc
adc
out
add
cmp
les
and
cmp
aam
adcl
les
add
les
add
inc
or
les
add
add
les
js
inc
or
les
or
inc
adc
les
adc
inc
push
mov
sub
and
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
negl
inc
add
xchg
cmovns
les
incl
mov
xchg
cmp
loopne
ret
fisttpl
add
les
inc
or
les
ret
inc
or
les
adc
les
push
testl
testl
cmp
or
les
dec
test
ret
aam
aam
rcll
aam
xchg
mov
shrl
cmp
dec
test
pop
sub
out
les
dec
test
ret
aam
aam
rcll
aam
xchg
mov
shrl
cmp
inc
add
pop
dec
cmp
or
adc
add
ret
add
add
add
ret
add
xchg
dec
sub
add
ret
jo
cmp
xor
xchg
sub
adc
cmp
push
rol
cmp
dec
mov
inc
add
orl
inc
inc
mov
dec
mov
dec
mov
incl
int3
xchg
xchg
sub
fcmovb
les
shl
das
loopne
ret
shll
int3
mov
dec
adc
mov
xor
lds
shll
mov
testl
dec
cmp
int3
dec
les
stc
mov
stc
cmpsl
mov
and
out
sub
in
les
push
les
sub
in
les
push
les
les
int3
testl
pushf
mov
aam
test
mov
inc
mov
les
int3
das
dec
mov
dec
mov
sub
in
les
les
cmp
pushl
cmp
mov
mov
les
add
int3
or
cmc
dec
mov
add
les
rol
rorl
int3
lods
mov
mov
cmp
xchg
les
cmp
das
fidivrs
mov
sub
cmp
cmp
inc
mov
aam
cltd
int3
dec
mov
dec
mov
das
push
add
cmp
mov
mov
sub
cld
les
int3
sub
jecxz
les
dec
cltd
int3
dec
mov
sub
in
les
push
les
les
int3
pop
dec
les
cmpsl
mov
and
cld
inc
mov
dec
mov
inc
cmp
mov
inc
cmp
mov
inc
cmp
mov
inc
mov
sub
in
testl
add
scas
int3
lods
inc
mov
aam
and
les
int3
inc
or
cmpsl
mov
and
out
test
inc
add
fisttps
rolb
rolb
cmp
xchg
cmp
cmp
add
cmp
jecxz
les
testl
add
dec
mov
les
dec
cmp
enter
dec
mov
movl
mov
dec
int3
dec
lock
push
movl
testl
add
cmp
enter
into
sub
repz
les
repz
les
cmp
inc
sti
les
cmpl
xchg
dec
or
test
dec
fmull
rolb
testl
dec
xorl
mov
dec
ret
add
xorl
cmp
inc
add
inc
add
into
popl
rolb
sbb
rolb
cmp
cmp
inc
mov
cmpl
jl
jmp
aam
andl
cmp
fcmovnb
les
push
les
les
cmp
sub
repz
les
cmp
sub
repnz
les
fcmovnb
les
int3
scas
les
les
and
cmp
scas
call
aam
ss
les
dec
mov
dec
cltd
and
or
dec
cmpl
sbbl
addl
cmp
popf
popf
dec
sbbl
dec
inc
dec
les
adc
fcmovb
les
dec
les
adc
arpl
les
dec
les
fcmovb
les
aam
dec
dec
les
cmp
testl
cmpl
mov
xchg
cmp
and
cmp
rorb
and
cmp
das
stos
dec
subl
cmp
dec
mov
les
enter
les
rorb
enter
inc
les
int3
das
dec
mov
dec
lcall
andl
scas
add
movl
push
mov
mov
dec
mov
xchg
xchg
scas
les
cmp
aam
mov
cmp
dec
mov
add
cmp
adc
sub
les
and
cmp
mov
dec
sbbl
mov
sub
and
cmp
les
adc
dec
les
fld
les
adc
dec
dec
les
cmpsl
mov
and
xchg
aam
mov
dec
adc
in
push
fnsave
push
fnsave
push
fnsave
les
les
sub
and
cmp
cmp
cmp
cmp
lods
in
ret
aam
xchg
loopne
notl
dec
xchg
and
aam
mov
decl
lret
inc
pushf
cld
xchg
int3
lret
inc
mov
les
int3
decl
mov
xor
les
clc
dec
les
enter
rorb
enter
negl
xchg
dec
mov
sub
inc
les
inc
ss
les
les
inc
and
sbb
ret
rolb
int3
xchg
xchg
sub
cmp
cmp
pinsrw
dec
mov
cmp
sub
inc
les
inc
outsb
les
les
inc
pop
les
mov
dec
or
sub
aam
les
enter
ror
inc
les
inc
add
mov
das
pop
std
xchg
fdivl
les
movsl
xchg
xchg
sub
inc
les
nop
cmp
xchg
dec
or
mov
cmp
popf
popf
xchg
xchg
sub
aam
les
enter
in
les
in
xchg
xchg
sub
inc
les
fdivrs
mov
sub
inc
les
xor
shrb
test
and
shrl
les
cmpl
dec
andl
test
dec
mov
testl
pop
scas
int3
lods
test
out
les
aam
les
dec
cltd
enter
mov
dec
xchg
enter
enter
les
rclb
dec
mov
cmp
cmp
aam
mov
mov
or
cmp
cmp
popf
popf
xchg
cmp
sbb
cmp
fmull
int3
xchg
cmp
cmp
popf
popf
xchg
cmp
sbb
cmp
cmpl
sub
out
les
testl
sub
test
xchg
dec
sub
fadd
mov
cmp
mov
sub
cmp
cmp
aam
mov
int3
mov
xchg
das
cmp
cmp
cmp
cmp
xchg
sub
cmp
shrb
fadds
int3
cmp
xchg
cmp
cmp
inc
add
inc
add
ret
xchg
xchg
sub
sbb
cmp
dec
sub
int3
inc
cli
mov
push
les
les
inc
les
les
inc
les
fadd
std
ret
mov
inc
cli
mov
cmp
cmp
cmp
xchg
sub
sbb
cmp
fadds
lret
inc
dec
les
faddl
enter
sub
test
dec
mov
dec
cmpl
xchg
cmp
and
cmp
dec
cmpl
cmpl
mov
mov
dec
mov
add
dec
mov
inc
or
int3
les
xor
test
dec
mov
cmp
mov
cmp
cmp
cmp
dec
mov
inc
add
cmp
inc
add
incl
fwait
lcall
sub
call
dec
cltd
fmull
sar
les
les
int3
das
dec
int3
inc
cmp
mov
shrl
les
int3
jnp
mov
and
cli
lret
inc
jle
les
aam
jg
rcll
inc
fadd
les
sar
pop
mov
stc
in
push
fnsave
push
inc
cmp
les
fadd
lret
inc
xor
les
ffree
les
dec
lret
inc
jno
les
je
les
int3
sub
ffree
les
dec
les
aam
in
inc
les
shrl
std
cli
mov
inc
mov
dec
adc
pop
mov
stc
in
push
fnsave
push
fnsave
les
les
ffree
les
push
les
les
push
les
fadd
les
mov
divl
dec
je
les
inc
add
mov
pop
std
fstpt
dec
mov
shrb
or
cmp
mov
addb
push
mov
les
sub
cmp
cmp
ret
mov
sub
xor
cmp
adcl
cmp
dec
mov
jnp
mov
and
cli
lret
inc
dec
inc
mov
mov
adc
pop
mov
stc
in
push
fnsave
push
inc
mov
mov
lret
inc
jnp
les
and
mov
cmp
sbb
cmp
rorb
dec
xorl
push
les
cmp
ret
lret
dec
inc
incl
adc
xorl
subl
sbb
test
dec
pushf
rorb
subl
cmp
cmp
sub
xor
cmp
enter
fidivrs
mov
inc
pop
sar
sub
inc
xorl
les
mov
dec
cltd
xor
mov
add
and
mov
cmp
xchg
dec
mov
sub
cmp
cmp
int3
inc
add
cmp
sub
dec
mov
les
sub
xor
cmp
lret
inc
push
les
loope
cmp
in
push
inc
pop
les
fadds
lret
inc
push
les
cmp
inc
les
lock
les
rol
les
dec
les
rol
les
loopne
dec
mov
dec
dec
dec
les
enter
mov
sub
pop
cmp
dec
mov
scas
cmp
mov
sub
xor
cmp
aam
mov
sub
xor
cmp
faddl
enter
inc
mov
in
cmp
cmp
mov
cmp
xchg
cmp
cmp
aas
cmp
inc
add
sub
rol
les
push
les
les
dec
cmp
mov
dec
xor
cmp
ret
ret
add
dec
cmp
xchg
sub
rol
les
enter
les
fmull
int3
jnp
mov
and
cmp
cmp
jg
rcll
in
aad
adc
les
dec
aam
adc
pop
mov
xor
les
test
mov
rol
inc
inc
les
fadd
mov
scas
cmp
enter
cmp
inc
add
das
scas
inc
mov
dec
aam
adc
in
push
fnsave
les
testb
mov
std
popf
shlb
dec
xchg
int3
inc
push
mov
lret
jb
loopne
cmp
xchg
cmp
cmp
inc
add
das
fstpt
mov
cmp
xchg
cmp
cmp
aas
cmp
inc
add
testl
pop
dec
cmp
int3
or
cltd
pop
dec
cmp
shrb
les
icebp
or
les
mov
dec
xor
test
les
int3
aam
cmp
les
aam
add
xchg
dec
sub
icebp
or
les
cmp
inc
add
shl
test
pop
dec
cmp
xchg
dec
xor
mov
sub
sub
cmp
xchg
xchg
xchg
dec
hlt
sub
push
cmp
inc
add
dec
add
xchg
std
cltd
int3
mov
sub
sub
cmp
xchg
xchg
xchg
dec
hlt
sub
push
cmp
inc
add
dec
add
testl
test
mov
mov
sub
sub
cmp
mov
inc
add
mov
dec
cltd
cmp
std
cltd
aam
lret
add
jmp
cmpl
xor
cmp
enter
mov
inc
push
xchg
das
movl
cmpl
mov
dec
xchg
int3
std
xchg
cmp
incl
fisubrl
pop
dec
fisttpll
dec
aad
dec
ret
cmp
mov
testl
enter
xchg
dec
sub
ror
dec
or
mov
into
das
shrl
mov
dec
mov
sub
cmp
cmp
dec
sub
mov
sub
adc
cmp
popf
inc
cmp
xchg
aam
fistl
ret
inc
sub
inc
adc
int3
aam
movl
cmp
mov
dec
add
cmp
divl
scas
les
mov
cmp
les
inc
add
inc
cmp
xchg
aam
fistl
ret
inc
sub
inc
adc
int3
aam
movl
cmp
mov
dec
add
cmp
divl
cmp
sub
mov
popf
popf
inc
cmp
mov
std
rcll
aam
fistl
ret
inc
sub
inc
adc
int3
aam
movl
cmp
mov
dec
add
cmp
divl
cmp
cmp
les
inc
add
inc
cmp
mov
std
rcll
aam
fistl
ret
inc
sub
inc
adc
int3
aam
movl
cmp
mov
dec
add
xchg
dec
and
iret
add
fmull
loopne
dec
and
notl
xor
loopne
xor
dec
or
cwtl
loopne
dec
nop
loopne
dec
and
adc
cs
xor
aaa
dec
xor
mov
dec
and
xor
adc
loopne
mov
mov
incl
mov
push
dec
add
or
or
or
or
dec
and
dec
mov
aam
or
mov
enter
and
xor
xor
loopne
xor
dec
and
xor
aam
or
or
or
or
or
or
xchg
xchg
idivl
dec
and
iret
add
rolb
xor
push
inc
sbb
dec
and
dec
nop
loopne
dec
and
iret
add
xlat
dec
nop
loopne
xor
push
inc
sbb
dec
and
dec
nop
loopne
iret
add
fisttps
loopne
dec
and
notl
xor
xor
mov
sbb
mov
rorb
loopne
dec
and
adc
cs
xor
xor
loopne
push
xor
mov
call
mov
incl
out
and
fists
loopne
fists
ret
xor
xor
push
les
or
or
or
or
or
or
or
xchg
xchg
xchg
idivl
dec
and
iret
add
rolb
xor
push
inc
sbb
dec
and
dec
nop
loopne
dec
and
iret
add
rolb
xor
push
inc
sbb
dec
and
dec
nop
loopne
iret
add
fmull
loopne
dec
and
notl
xor
loopne
xor
dec
sbb
mov
fmull
loopne
dec
and
adc
cs
xor
xor
loopne
dec
or
and
xor
adc
loopne
mov
mov
incl
mov
push
dec
add
xor
push
les
les
or
or
or
iret
add
in
dec
mov
aam
and
notl
xor
loopne
xor
xor
dec
add
mov
das
orl
cwtl
loopne
dec
nop
loopne
dec
and
adc
cs
xor
aaa
dec
xor
mov
dec
and
xor
adc
loopne
mov
mov
incl
mov
and
fists
out
and
fists
xor
push
les
dec
pop
dec
sbb
lcall
or
or
or
or
dec
nop
loopne
dec
mov
rolb
lods
testl
add
rolb
mov
inc
stc
in
int3
aam
mov
sub
xchg
dec
cmp
cmc
xor
enter
ret
inc
add
inc
sub
or
and
movl
push
inc
movl
mov
dec
ret
inc
add
inc
lds
int3
fwait
pop
dec
and
pop
or
or
or
inc
cmp
cmp
popa
push
pop
and
dec
adc
add
and
testl
dec
sub
dec
mov
dec
mov
adc
mov
cmp
inc
pusha
inc
cmp
mov
inc
stc
in
int3
aam
mov
xchg
xchg
inc
and
inc
and
cmp
fwait
cltd
sub
xor
mov
add
movl
popa
cmp
push
shr
rcl
dec
add
les
shlb
or
loopne
in
in
rcl
loopne
loopne
rcl
cmp
dec
insb
in
rcl
cld
in
rcl
in
rcl
in
rcl
adc
dec
add
add
add
sub
inc
add
inc
add
inc
cmp
popa
cmp
push
shr
rcl
out
dec
ret
dec
add
sub
inc
add
inc
add
inc
cmp
popa
cmp
push
shr
rcl
out
dec
ret
inc
add
add
lds
int3
mov
aaa
popa
cmp
push
shr
rcl
iret
out
rcl
in
rcl
in
rcl
in
rcl
in
rcl
in
rcl
in
rcl
in
rcl
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
rorb
xor
cmp
loopne
shr
rcl
cmp
out
rcl
out
rcl
out
rcl
out
rcl
or
push
dec
ret
dec
or
push
dec
ret
dec
add
add
or
dec
les
dec
ret
dec
add
add
add
add
or
push
dec
mov
cmp
std
cmp
add
les
inc
movl
aaa
popa
cmp
loopne
je
rcl
cmp
sbb
out
rcl
les
jle
les
shlb
or
loopne
jo
rcl
loopne
je
rcl
add
rcl
out
rcl
out
rcl
add
adc
sub
add
lds
int3
mov
cmp
popa
cmp
loopne
je
rcl
les
out
dec
add
add
sub
inc
sub
inc
sub
inc
cmp
aaa
popa
cmp
loopne
je
rcl
dec
add
adc
add
add
add
sub
inc
sub
inc
sub
inc
cmp
cmp
cmp
aaa
popa
cmp
loopne
je
rcl
les
out
rcl
out
rcl
out
rcl
out
rcl
out
rcl
out
rcl
out
rcl
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
rorb
xor
cmp
loopne
je
rcl
cmp
rcl
out
rcl
out
rcl
out
rcl
or
push
dec
add
add
or
dec
les
dec
add
add
add
or
push
dec
add
add
add
add
add
add
or
or
or
or
or
or
or
dec
mov
dec
mov
dec
mov
adc
mov
cmp
inc
pusha
inc
cmp
mov
inc
stc
in
int3
aam
mov
xchg
xchg
inc
and
inc
and
cmp
fwait
cltd
sub
xor
mov
add
movl
popa
cmp
push
inc
jmp
add
les
shlb
or
loopne
pop
call
dec
push
jmp
loopne
fsubr
rcl
insb
call
rcl
call
dec
ret
dec
add
add
add
sub
inc
add
inc
add
inc
cmp
popa
cmp
push
inc
jmp
out
dec
ret
dec
add
sub
inc
add
inc
add
inc
cmp
popa
cmp
push
inc
jmp
adc
inc
add
add
lds
int3
mov
aaa
popa
cmp
push
inc
jmp
les
jmp
rcl
jmp
rcl
jmp
rcl
jmp
dec
and
dec
and
dec
sub
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
rorb
xor
cmp
loopne
inc
jmp
push
jmp
rcl
jmp
rcl
or
push
dec
ret
dec
or
push
dec
ret
dec
add
add
or
dec
les
dec
ret
dec
add
add
add
add
or
push
dec
mov
cmp
std
cmp
add
les
inc
movl
aaa
popa
cmp
loopne
in
rcl
cmp
sbb
ljmp
add
les
shlb
or
loopne
loopne
rcl
loopne
in
rcl
lock
inc
ljmp
adc
sub
add
lds
int3
mov
cmp
popa
cmp
loopne
in
rcl
les
out
dec
add
add
sub
inc
sub
inc
sub
inc
cmp
aaa
popa
cmp
loopne
in
rcl
dec
add
adc
add
add
add
sub
inc
sub
inc
sub
inc
cmp
cmp
cmp
aaa
popa
cmp
loopne
in
rcl
les
ljmp
and
rcl
ljmp
cmp
rcl
jmp
aam
jmp
aam
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
rorb
xor
cmp
loopne
in
rcl
cmp
jmp
aam
jmp
aam
jmp
aam
jmp
aam
or
push
dec
add
add
or
dec
les
dec
add
add
add
or
push
dec
add
add
add
add
add
add
or
dec
cmp
int3
xchg
dec
xor
inc
add
cmpsl
sub
int3
les
int3
dec
mov
lods
dec
mov
dec
lret
mov
dec
leave
push
cmp
aam
mov
cmp
dec
ret
sar
mov
int3
aam
rorb
int3
dec
leave
push
cmp
aam
mov
les
rorb
xor
mov
das
into
dec
int3
dec
lret
rorb
dec
add
dec
cmp
fcoml
dec
mov
mov
cltd
int3
jp
lcall
mov
dec
mov
jge
lds
xchg
scas
lds
les
sub
add
das
leave
dec
inc
or
lret
jae
pushf
inc
and
inc
add
lret
dec
inc
or
lret
jb
fsubrl
inc
mov
dec
xorl
pop
sub
dec
subl
lds
add
subl
cmp
les
popf
popf
inc
add
dec
or
cmp
add
shrl
and
cmp
out
testl
dec
subl
dec
xchg
cmp
xchg
xchg
dec
mov
xchg
xchg
cmp
sub
mov
les
loopne
add
inc
stos
cmp
cmp
cmpl
cmp
add
mov
dec
mov
movsl
mov
lcall
dec
sub
xor
push
mov
les
sub
mov
les
je
cltd
pop
dec
cmp
sub
ret
dec
xor
pop
pushl
mov
jl
push
ret
mov
std
lcall
sub
cmp
popf
popf
dec
and
pop
mov
jl
push
ret
in
cmp
sub
cmp
cmp
les
aam
add
leave
xchg
xchg
xchg
xchg
xchg
sub
jg
cmp
rorb
fwait
lcall
dec
sub
in
mov
int3
aam
leave
sbb
sbb
int3
aam
fsts
or
dec
icebp
adc
int3
aam
stc
or
sarl
int3
aam
dec
leave
sub
int3
aam
dec
roll
int3
aam
dec
loope
or
mov
int3
aam
dec
shll
aam
add
aam
add
aam
or
aam
inc
and
cmp
add
hlt
or
les
or
and
add
sbb
int3
aam
rol
add
sbb
les
cmp
aam
inc
sbb
cmp
gs
ret
aam
inc
sbb
cmp
cmp
lods
gs
in
or
scas
lds
int
les
mov
in
cmpps
shll
in
or
les
cs
les
add
rcrl
cmp
pushf
gs
pop
dec
cmp
int3
xchg
negl
xchg
xchg
decl
mov
dec
mov
fildll
sbb
cmp
xchg
xchg
xchg
xchg
xchg
sub
jle
cmp
rorb
das
hlt
dec
mov
pushl
mov
dec
push
dec
adc
xchg
mov
aam
sbb
cmp
dec
xor
fwait
lcall
sub
rol
dec
xor
xor
cmp
add
enter
testl
les
push
xor
cmp
add
sbb
sbbb
mov
aam
cs
les
les
dec
mov
dec
mov
inc
or
or
jle
or
dec
andl
std
int3
mov
dec
mov
dec
mov
xchg
sub
add
cmp
leave
add
cmp
add
cmp
les
dec
adc
add
les
jl
ret
aam
mov
mov
fwait
ror
add
les
addr16
cmp
aam
dec
or
xchg
sub
jns
les
fmull
and
pop
mov
testl
cmp
popf
dec
xor
leave
mov
and
add
mov
dec
fdivr
aaa
mov
mov
les
fwait
shlb
add
cmp
mov
inc
add
xchg
sub
add
cmp
add
idivl
mov
xchg
xchg
sub
cmp
cmp
enter
add
xchg
xchg
xchg
sub
jl
cmp
rorb
rorb
or
pop
dec
pushf
shrb
xchg
sub
add
cmp
rolb
cmp
popf
add
cmp
les
shrb
les
dec
mov
jecxz
les
loopne
dec
mov
int3
xor
mov
dec
inc
mov
into
add
loop
movsl
lds
flds
mov
into
add
aad
movsl
mov
inc
add
into
and
add
push
filds
pop
xor
les
push
mov
inc
add
sbb
push
mov
les
inc
push
inc
mov
into
add
add
movsl
lds
jns
add
cmp
icebp
dec
cmp
aam
icebp
inc
fs
adc
mov
gs
cmp
aam
cmp
mov
xchg
cmp
dec
cmp
aam
adc
adc
add
int3
dec
inc
cmp
les
jecxz
test
ret
cmp
dec
gs
add
iret
xchg
sub
ret
popf
inc
add
fsubrl
cmp
push
fs
add
int3
cmp
or
cltd
pop
scas
les
cmp
cmp
dec
sub
ret
aam
icebp
inc
fs
adc
mov
gs
cmp
aam
cmp
mov
xchg
cmp
dec
cmp
aam
adc
adc
add
int3
dec
inc
cmp
les
jecxz
test
ret
cmp
dec
gs
add
iret
xchg
sub
ret
popf
inc
add
fsubrl
cmp
push
fs
add
int3
cmp
or
cltd
pop
cmp
jl
ret
rol
cmp
int3
cmp
dec
cmp
aam
roll
ret
adc
push
rol
dec
cmp
aam
dec
cmp
ret
aam
roll
ret
xor
xor
or
sub
cmp
cmp
icebp
dec
cmp
aam
rorl
aam
add
dec
sub
mov
cmp
or
sub
cmp
cmp
int3
les
cmp
aam
cmp
mov
xchg
cmp
hlt
or
sub
cmp
cmp
dec
cmp
aam
gs
cmp
aam
cmp
mov
xchg
cmp
dec
fs
leave
dec
cmp
aam
sub
scas
enter
ret
aam
pushf
int3
les
cmpps
cmp
dec
gs
add
ret
xchg
sub
rol
popf
dec
andl
sbbb
cmp
add
loopne
hlt
cmpps
dec
fsts
ret
pop
dec
inc
cmp
les
mov
cmp
dec
inc
cmp
les
mov
inc
or
les
les
scas
leave
sub
out
les
cmp
fs
cmpl
sub
les
les
or
add
int3
gs
subb
push
cmp
popf
add
cmp
les
ret
les
idivl
orl
scas
leave
sub
out
les
xlat
out
les
xchg
cmp
nop
fs
icebp
dec
cmp
aam
cmp
mov
cmp
cmp
xor
xor
les
cmp
dec
xor
popf
inc
xor
dec
cmp
aam
icebp
call
outsl
cmp
cmp
mov
scas
les
cmp
gs
mov
cmp
das
int
sub
add
xor
ret
dec
add
sub
cmp
cmp
inc
xor
into
rol
popf
dec
add
les
ret
dec
mov
inc
xor
inc
cmp
les
loopne
add
ret
xchg
sub
add
sub
add
ret
xchg
sub
add
xor
add
ret
xchg
sub
add
cmp
add
ret
xchg
sub
add
cmp
add
ret
xchg
sub
add
cmp
add
ret
xchg
sub
add
cmp
add
ret
xchg
sub
add
cmp
add
ret
ret
xchg
sub
add
cmp
in
les
dec
mov
ficoms
ret
add
lret
inc
cmp
xchg
sub
add
cmp
cmp
cmp
les
les
les
test
cmp
or
stc
mov
rolb
fs
aam
enter
mov
xchg
sub
add
cmp
cmp
cmp
les
cmp
les
rol
mov
scas
leave
sub
in
les
scas
enter
les
dec
sub
dec
cmp
aam
mov
inc
mov
xchg
cmp
dec
cmp
aam
icebp
inc
fs
adc
mov
cmp
dec
cmp
aam
icebp
dec
cmp
aam
adc
adc
or
icebp
dec
cmp
aam
icebp
call
and
cmp
popf
cmp
mov
sub
cmp
cmp
cmp
aam
cmp
mov
scas
les
aam
pop
dec
cmp
ret
cmp
dec
gs
add
ret
xchg
sub
mov
popf
dec
cmp
cmp
inc
lcall
fs
dec
cmpps
cmp
lods
inc
cmpps
loopnew
int3
aam
adc
addr16
or
cmp
lods
test
ret
addr16
adc
loopne
int3
aam
dec
icebp
dec
fs
hlt
or
mov
inc
stc
in
or
les
or
les
loopne
inc
fs
in
or
gs
fs
shl
int3
aam
repnz
icebp
call
hlt
or
cmp
jl
ret
dec
cmp
aam
cmp
lret
inc
or
les
icebp
in
or
xchg
cmp
inc
add
inc
jg
les
rol
cmp
loopne
int3
aam
lods
cmp
cmp
in
or
loopnew
int3
aam
pushf
cmp
cmp
call
in
or
sub
cmp
cmp
hlt
or
addr16
cld
cmp
inc
add
addr16
or
sub
fcmovb
les
mov
lods
xchg
cld
rcl
icebp
loopne
int3
aam
push
cmp
popf
cmp
dec
cmp
aam
cmp
mov
lods
rol
les
cmp
dec
xor
popf
inc
xor
dec
cmp
aam
icebp
call
fwait
cmp
popf
cmp
add
fildll
aas
cmp
popf
popf
cmp
mov
ret
mov
cmp
testl
aas
cmp
testl
mov
pop
scas
aam
in
mov
aam
push
add
cltd
int3
idivl
lcall
lret
push
add
add
cmp
add
rol
les
sub
jbe
cmp
rolb
cmp
xchg
inc
stc
clc
movsl
int3
aam
mov
scas
shrb
les
sub
fcmovnb
les
add
inc
sub
dec
mov
das
dec
mov
add
cmp
std
mov
xchg
cmp
nop
mov
aam
rorl
ret
xor
add
mov
dec
cltd
int3
dec
mov
scas
shrb
les
dec
sub
les
ret
mov
cmp
dec
gs
add
les
movsb
cs
les
sbb
xchg
dec
sub
int
les
mov
sub
ret
les
icebp
push
cmp
aam
cmp
les
adc
add
cltd
pop
dec
cmp
cmpps
rorl
aam
add
shrl
cmp
push
fs
add
sarl
int3
cmp
pop
dec
cmp
int3
sub
cmp
cmp
rcll
aam
scas
int3
sub
fld
les
cmp
les
dec
sub
dec
ret
mov
cmp
add
pushl
cltd
pop
dec
cmp
mov
testl
aam
lret
mov
cmp
mov
mov
lcall
sub
mov
int3
aam
mov
lods
mov
int3
aam
dec
rol
popf
inc
add
into
cmp
cmpsb
int3
aam
sub
jg
les
inc
cmp
cmp
xchg
add
loopne
ret
shl
cmp
cmp
mov
int3
aam
popf
mov
lods
mov
int3
aam
repnz
popf
inc
add
enter
scas
les
shll
add
pop
scas
fsubrl
push
scas
int3
sub
fadd
les
negl
xchg
fldenv
inc
add
les
movsb
or
dec
adc
aam
mov
pop
les
icebp
lods
cmpsb
int3
aam
push
xor
cmp
sbb
cmp
cmpsb
int3
aam
jno
cmp
popf
dec
xor
mov
dec
mov
inc
sub
dec
mov
pushl
mov
sub
xor
cmp
ret
pushl
mov
cmp
sub
xor
cmp
sub
xor
cmp
cmp
cmp
lods
cmpsb
int3
aam
mov
cmp
dec
cmp
icebp
mov
lods
xor
cmp
enter
mov
std
andl
dec
mov
dec
xor
mov
dec
mov
je
ret
push
fwait
cmp
cmp
aam
jo
ret
mov
cmp
popf
add
cmp
les
aam
mov
dec
fldenv
int3
sub
ffreep
les
cmp
cmp
negl
xchg
aam
mov
scas
int3
sub
ffreep
les
les
dec
cmp
scas
lds
mov
sub
cmp
cmp
enter
lds
ja
cmp
inc
add
pop
dec
cmp
cmp
xchg
sub
daa
cmp
xchg
sub
jle
les
cmp
les
les
les
les
les
shlb
cmp
loopne
push
cmp
aam
pop
or
lods
fs
rcl
cmp
les
loopne
dec
test
aam
test
aam
and
xchg
xchg
gs
cmc
cmpl
mov
dec
cmpl
cmp
cmp
cmp
xorl
les
dec
mov
dec
leave
les
dec
and
or
or
or
xchg
dec
sub
fcoml
dec
mov
div
enter
xchg
dec
ret
cmp
add
les
aam
cmp
mov
dec
mov
or
enter
bound
cmp
enter
or
enter
popa
cmp
dec
or
lret
inc
rol
les
aam
xchg
sub
xchg
cmp
enter
dec
mov
inc
aas
cmp
dec
rcrb
addb
xorl
inc
or
sub
jl
les
cmpl
test
dec
sbb
cmp
mov
inc
mov
dec
ret
cmp
or
enter
popa
cmp
dec
mov
dec
xchg
int3
or
enter
popa
cmp
dec
xorl
and
les
or
std
cmpsl
mov
and
in
inc
stc
js
ret
mov
lods
js
ret
out
les
rolb
lret
dec
xchg
int3
scas
lds
ret
add
dec
mov
sub
jl
les
enter
mov
lods
enter
xchg
dec
pop
dec
or
cmpb
or
mov
dec
ret
cmp
or
enter
pusha
cmp
dec
mov
dec
xchg
int3
or
enter
pusha
cmp
dec
xorl
sub
jae
les
cmp
cmp
xchg
enter
cmp
cmp
dec
cvttps2pi
fdivrs
cmp
or
or
dec
cmp
int3
jl
sahf
les
testl
movl
notl
jge
mov
push
push
dec
push
cltd
pop
or
or
or
or
or
or
xchg
dec
sub
int3
dec
mov
or
jae
rclb
ret
xchg
dec
or
inc
xor
dec
mov
cmp
int3
sbb
xchg
in
call
mov
testl
or
or
or
or
or
or
dec
cmp
lods
lods
mov
aam
fs
rcl
gs
les
xchg
gs
cmc
cmpl
xor
addr16
les
sub
cmpl
lods
aam
out
cmp
cmp
rolb
xchg
dec
or
aam
lods
aam
xchg
cmp
cmp
int3
inc
add
decl
loopne
sub
xor
and
add
cmp
xor
dec
leave
les
and
dec
int3
dec
stc
rol
add
push
push
dec
push
pop
dec
mov
cmp
cmp
testl
leave
les
and
xchg
dec
sub
xor
cmp
inc
xor
inc
add
les
cwtl
gs
aam
dec
mov
std
std
mov
dec
sbb
pop
enter
push
decl
mov
scas
add
movl
std
std
mov
dec
add
inc
add
into
dec
pushf
int3
dec
cltd
cmp
mov
testl
enter
testl
les
sbb
les
movsb
dec
mov
mov
dec
mov
int3
lret
inc
jl
les
push
cmp
aam
stc
pop
cmp
aam
adc
mov
dec
mov
int3
les
push
cmp
aam
fstps
aam
sbb
enter
es
cltd
cmp
dec
mov
les
int
andb
lcall
int
andb
mov
push
les
int
andb
cli
stc
push
les
int
andb
ljmp
int
andb
dec
les
int
andb
lret
les
ret
add
les
mov
scas
int3
cmp
popf
dec
mov
movsb
int3
les
cmp
dec
andb
or
dec
sub
test
mov
cmp
cmp
cmp
add
pop
dec
cmp
xchg
dec
cltd
int3
xchg
xchg
divl
idivl
dec
mov
insb
cmp
aam
int
dec
mov
mov
inc
cmp
lret
inc
mov
les
les
inc
lock
scas
sub
jb
les
inc
stc
je
int3
aam
lret
inc
ffreep
les
cmp
lret
inc
test
les
rol
les
aam
sub
sub
cmp
enter
leave
xchg
xchg
xchg
xchg
xchg
sub
insb
cmp
inc
add
lods
rol
les
or
xchg
scas
les
roll
aam
cmp
pop
gs
add
loop
or
ret
aas
mov
xchg
sub
sub
cmp
enter
lret
testl
sub
arpl
cmp
rclb
cmp
cld
xchg
sub
jno
cmp
inc
add
int3
aam
add
xchg
xchg
sub
repnz
les
rolb
mov
divl
xchg
xchg
xchg
xchg
xchg
sub
arpl
cmp
shrb
divl
lods
add
ret
xchg
sub
icebp
les
enter
leave
xchg
xchg
xchg
xchg
xchg
sub
arpl
cmp
rorb
cmp
lock
ret
aam
xchg
sub
icebp
les
enter
leave
xchg
xchg
xchg
xchg
xchg
sub
arpl
cmp
shrb
pop
adc
movsl
jo
les
enter
xor
rcrl
aam
sbb
sbb
mov
scas
les
cmp
dec
lock
ret
aam
repnz
jo
cmp
cmp
push
gs
lcall
inc
jno
les
shrl
les
inc
stc
je
int3
aam
mov
lods
cmp
les
cmp
les
cmp
cmp
xchg
dec
sub
push
les
cmp
aam
add
cmp
int3
xchg
xchg
dec
mov
negl
inc
mov
inc
mov
cmp
dec
jno
cmp
cmp
inc
cmp
les
les
mov
or
pop
mov
mov
xchg
sub
jae
les
inc
add
pushl
mov
cmp
nop
fs
cmp
lret
inc
inc
les
sarb
mov
cmp
cmp
cmp
jae
les
fmull
mov
cmp
incl
mov
divl
adcb
cmp
popf
popf
aas
mov
xchg
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
xor
add
pushl
mov
scas
lds
cmp
cmp
cmp
incl
mov
std
pop
mov
ret
xchg
sub
jbe
cmp
mov
fwait
lcall
cmp
or
xchg
xchg
xchg
xchg
sub
lock
les
aam
add
leave
xchg
xchg
xchg
xchg
xchg
sub
popa
cmp
inc
add
std
pop
mov
ret
xchg
sub
jbe
cmp
std
cltd
enter
scas
sarb
int3
aam
cmp
xchg
sub
jo
les
faddl
mov
dec
fimull
lret
jb
xchg
sub
jo
les
dec
ret
xor
addl
aam
ret
das
jne
cmp
int3
addr16
mov
aam
pop
dec
cmp
int3
les
int3
dec
int3
cltd
pop
dec
cmp
int3
les
int3
dec
int3
cltd
pop
dec
cmp
int3
les
int3
dec
int3
cltd
pop
scas
call
aam
push
xor
cmp
pop
dec
cltd
or
cltd
adc
and
sbb
sbb
cltd
and
ret
sub
les
test
les
and
andl
les
xchg
xchg
xchg
xchg
xchg
sub
pusha
cmp
inc
add
dec
sbbl
les
xchg
xchg
xchg
xchg
xchg
sub
pusha
cmp
inc
add
dec
sbbl
les
xchg
xchg
xchg
xchg
xchg
sub
pusha
cmp
inc
add
sub
or
cmp
or
lock
int3
aam
or
dec
stc
test
ret
aam
stc
movsb
cmp
aam
cmp
jno
les
add
aaa
mov
cld
fidivl
int3
aam
pop
mov
xchg
xchg
sub
sub
cmp
inc
gs
int3
aam
pop
mov
xchg
sub
jne
cmp
cmp
test
popf
popf
addr16
int3
aam
pop
lret
inc
fld
les
cmp
popf
test
aam
xor
enter
inc
rol
les
sub
cmp
inc
add
sub
gs
int3
aam
pop
mov
xchg
sub
je
cmp
int3
aam
dec
mov
aam
shll
aam
add
inc
push
testl
dec
mov
aam
add
dec
andl
mov
aam
lret
sbb
clc
movl
std
int3
aam
fisubs
int3
aam
pop
mov
dec
mov
out
rcrl
int3
aam
add
dec
sbbl
dec
cltd
sbb
adcl
andl
mov
aam
cmp
gs
adc
mov
std
cltd
adc
into
dec
andl
das
ret
dec
andl
adcl
andl
lods
and
int3
aam
cmp
add
aam
cltd
adc
iret
dec
andl
sti
das
int3
dec
andl
add
les
mov
sub
cmp
cmp
mov
sub
cmp
cmp
mov
sub
cmp
cmp
enter
cmp
cmp
sub
std
cltd
adc
inc
sub
les
dec
mov
xchg
cmc
les
aam
add
leave
xchg
xchg
xchg
xchg
xchg
sub
cmp
inc
add
inc
add
inc
cli
jmp
or
les
les
les
and
clc
out
mov
clc
hlt
mov
aad
das
sub
pop
dec
mov
scas
ret
sub
lret
les
mov
adcb
popf
scas
add
lds
std
mov
clc
hlt
mov
mov
adcb
popf
lds
std
mov
clc
hlt
mov
mov
xor
dec
sbbl
scas
xchg
scas
test
mov
sub
hlt
les
aam
add
rclb
sub
cmp
inc
add
das
rorl
dec
fmull
and
rol
dec
hlt
dec
mov
sub
rol
dec
hlt
sub
xor
cmp
dec
cmp
enter
les
enter
xchg
dec
mov
add
inc
cmp
mov
mov
cmp
dec
add
aas
inc
push
mov
dec
inc
test
les
push
xor
inc
push
mov
dec
add
xchg
cmp
aam
iret
dec
add
fdivrs
ret
aam
or
les
fwait
cmp
xor
scas
mov
dec
cmpl
dec
xchg
cmp
mov
push
dec
cmpl
inc
es
dec
adc
movl
loope
cmp
pop
lahf
xor
dec
adc
push
movl
ret
mov
inc
mov
inc
les
xor
mov
dec
add
aas
inc
push
mov
dec
inc
test
les
push
xor
inc
push
mov
dec
or
ret
aam
int
or
ret
aam
xor
addb
das
sti
loope
les
mov
cmp
mov
inc
push
mov
dec
inc
test
les
push
xor
inc
push
mov
dec
lock
cmp
aam
ret
dec
lock
cmp
aam
mov
scas
or
scas
or
lods
or
mov
inc
mov
dec
icebp
mov
leave
lods
cmp
aam
stc
movsb
cmp
aam
scas
dec
cmpl
cmp
aam
leave
mov
ret
aam
cmp
les
testl
sub
cmp
inc
add
dec
cmpl
cmp
aam
inc
shll
loop
cmp
mov
ret
aam
fnstsw
loop
std
shll
in
shll
mov
ret
aam
stc
test
ret
aam
lcall
dec
sub
enter
cmp
xor
mov
popf
inc
add
leave
xchg
xchg
xchg
xchg
xchg
sub
pop
cmp
inc
add
std
mov
mov
testl
negl
xchg
shll
call
test
ret
aam
inc
fadd
std
icebp
lock
int3
aam
inc
jl
lret
jae
ljmp
in
int3
aam
lret
jae
call
lret
jae
out
int3
aam
mov
int3
aam
ror
jae
loopne
int3
aam
xchg
lret
jae
loop
int3
aam
xchg
xchg
das
enter
loop
int3
aam
xchg
xchg
xchg
xchg
lret
jae
out
int3
aam
sub
cmp
cmp
jae
push
mov
aam
jae
adc
loopne
lret
jae
sbb
int3
aam
lret
jae
adc
std
icebp
or
lret
jae
adc
int3
aam
xchg
lret
jae
push
mov
aam
cmp
lret
jae
push
mov
aam
xchg
xchg
cmp
rorl
int3
aam
sub
cmp
cmp
loopne
nop
inc
ds
scas
pushf
scas
popf
add
les
cmp
xlat
scas
rcrb
les
cmpl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
scas
popf
sub
cmp
cmp
xor
cmp
xchg
xchg
scas
popf
sub
cmp
cmp
mov
mov
mov
ret
aam
or
xchg
fdivrs
out
adc
adc
mov
lcall
call
mov
shl
das
sub
or
add
movl
sub
call
inc
lods
cmp
aam
pop
add
inc
mov
ret
aam
pop
add
scas
int3
lods
insb
mov
aam
mov
xor
icebp
clc
int3
aam
out
scas
ret
iret
les
icebp
clc
int3
aam
iret
sub
cmp
cmp
sar
int3
aam
cmpl
sub
les
xor
cmp
scas
ret
into
les
or
ret
aam
jmp
ret
iret
les
dec
mov
cmp
dec
andl
cmp
cmp
andl
cmp
scas
ret
into
les
dec
sub
int3
xchg
divl
incl
mov
sub
push
cmp
xchg
xchg
xchg
xchg
xchg
add
rol
les
pop
cmp
inc
add
scas
rcrb
cmp
aam
int3
testl
xchg
dec
sub
int3
xchg
divl
incl
mov
sub
push
cmp
xchg
xchg
xchg
xchg
xchg
add
rol
les
pop
cmp
inc
add
scas
rcrb
cmp
aam
int3
testl
xchg
dec
sub
int3
xchg
divl
incl
mov
sub
add
xchg
xchg
xchg
add
rol
les
pop
cmp
inc
add
scas
rcrb
cmp
aam
int3
testl
cmp
aam
jl
cmp
aam
jl
cmp
aam
jl
cmp
aam
scas
int3
lods
sub
ret
aam
in
sub
cmp
sub
cmp
mov
inc
mov
das
ret
testl
add
cmp
outsb
cmp
sub
sub
cmp
sub
and
cmp
mov
cmp
scas
int3
lods
int3
mov
sub
cmp
icebp
test
and
cmp
inc
mov
das
ret
testl
add
cmp
cmp
cmp
lods
iret
xchg
rcl
pop
and
cmp
aam
scas
nop
lods
in
mov
sub
cmp
cmp
cmp
pop
xchg
cmp
int3
gs
cmpl
scas
test
inc
pop
cmp
popf
popf
incl
lret
inc
rol
les
movsl
int3
aam
icebp
test
int3
les
hlt
add
add
add
into
add
add
dec
leave
movsb
movsl
int3
aam
add
incl
mov
dec
adcl
les
dec
pushf
rorb
dec
andl
cmp
andl
in
cmp
popf
inc
add
xchg
dec
mov
enter
int3
aam
lds
test
push
int3
les
out
add
add
les
inc
add
into
inc
movsb
cld
les
test
les
test
adc
push
mov
cmp
movsl
int3
aam
pop
das
ret
test
and
inc
cmp
dec
int3
inc
cmp
cmp
insb
lds
iret
xchg
cmp
insb
gs
add
clc
dec
mov
dec
add
fildl
inc
movsb
movsl
int3
aam
andl
dec
dec
add
fs
les
enter
arpl
les
inc
or
or
andl
std
mov
pop
dec
aaa
add
movsb
movsl
int3
aam
ret
cmp
mov
inc
mov
inc
das
mov
add
inc
pop
mov
scas
xor
xor
add
add
xchg
cmp
pop
gs
cmp
cmp
mov
inc
cmp
insb
gs
add
lock
cli
loope
les
mov
inc
mov
test
int
cmp
mov
inc
mov
int3
lods
fs
les
enter
les
repz
mov
test
ret
cmp
xchg
lret
dec
mov
icebp
test
pusha
gs
add
aad
add
pop
dec
mov
cmp
cmp
inc
or
sub
sub
cmp
dec
cmp
int3
aam
cli
inc
cmp
int3
les
fiadds
int3
les
xchg
cmp
call
ret
test
int3
cmp
es
sub
bound
cmp
les
cmp
fwait
lcall
aam
mov
sub
jecxz
les
int3
aam
idivl
inc
xor
sub
clc
stc
mov
adcl
popf
dec
mov
lds
inc
add
cs
rolb
cmp
popf
popf
dec
stc
addb
cmovg
pusha
xchg
aam
das
xchg
cmp
xchg
popf
mov
scas
lds
cmp
add
mov
sbb
cmp
enter
lret
testl
sub
pop
cmp
inc
add
inc
add
aaa
inc
cli
les
xchg
aam
jno
cmp
inc
loope
xchg
aam
inc
jecxz
add
movsb
cmpsb
int3
aam
testl
int3
aam
dec
popa
cmp
inc
loope
or
les
cmp
and
xchg
dec
sub
testl
dec
xchg
enter
std
or
int3
inc
or
cmpl
aam
add
cmpl
add
dec
cmpl
inc
push
mov
dec
ret
xchg
enter
jb
xchg
subb
les
cmp
inc
mov
dec
mov
dec
ret
enter
dec
xchg
enter
inc
pop
mov
inc
mov
inc
aas
in
roll
pop
inc
push
mov
add
cmp
inc
cli
lret
inc
sub
ret
mov
clc
int
ret
aaa
mov
daa
inc
cli
lret
inc
adc
les
int3
les
inc
or
xchg
or
inc
cli
cwtl
mov
inc
cli
out
loop
add
mov
dec
add
cld
out
rorb
leave
testl
lret
push
add
cmpl
mov
lea
mov
add
cwtl
xchg
ret
inc
or
enter
add
xchg
inc
mov
clc
in
clc
int
addl
stc
lret
jp
xchg
inc
push
mov
sub
insl
les
dec
ret
enter
dec
lds
enter
or
sub
insl
les
cmpb
cmp
dec
xchg
enter
cmp
cmp
mov
add
les
ret
dec
mov
sub
dec
or
mov
inc
in
cmp
or
dec
sub
enter
xchg
xchg
std
fldcw
shrl
jp
int3
aam
xchg
dec
rcrl
ret
mov
icebp
nop
or
incl
mov
dec
cmpl
dec
mov
dec
xchg
cmp
cmp
xchg
xchg
dec
mov
cmp
dec
cmpl
cmp
sti
mov
dec
mov
inc
cmp
cmp
and
dec
ror
add
push
or
cmp
popf
pushl
mov
dec
xchg
cmp
cmp
cmp
sub
cmp
cmp
cmp
add
mov
or
dec
icebp
clc
or
testl
fwait
lcall
dec
sub
mov
aam
sub
xchg
xchg
dec
icebp
cmp
ret
negl
idivl
incl
mov
cmp
dec
cmp
aas
mov
add
xchg
mov
aam
les
out
rcll
cmp
mov
scas
pushf
addr16
mov
aam
shll
int3
aam
cmp
lret
inc
inc
aas
mov
cmp
dec
cmp
aas
mov
testl
std
fdivl
std
fdivl
gs
xchg
xchg
out
add
xchg
xchg
xchg
dec
xorl
cmp
pop
mov
xchg
sub
or
cmp
pop
mov
xchg
xchg
cmp
xor
inc
add
enter
sub
cmp
popf
dec
cltd
cmp
cmp
ret
pop
das
cwtl
inc
cmp
mov
incl
mov
cmp
les
aam
xor
aaa
lret
inc
mov
cmp
cld
fidivl
mov
test
fdivl
xchg
dec
cmpl
dec
cmp
aas
mov
xchg
cmp
shlb
sub
cmp
rcll
xchg
cmp
shlb
dec
add
dec
cmp
aam
mov
dec
cmp
add
add
cmp
add
cmp
dec
cmp
aam
inc
xchg
ret
aam
dec
cmp
add
add
cmp
add
cmp
dec
cmp
std
or
add
aam
les
aam
nop
mov
aam
add
cltd
pop
testl
aam
pop
inc
stc
clc
movsl
int3
aam
mov
xchg
negl
std
fchs
movsl
int3
aam
dec
stc
fsubl
mov
in
movsl
int3
aam
add
lods
les
scas
les
mov
cmp
pop
fs
repnz
les
icebp
nop
mov
aam
adc
rolb
int3
aam
sbb
cmp
in
movsl
int3
aam
les
icebp
nop
mov
aam
adc
mov
aam
shll
ret
loope
mov
aam
pop
dec
cmp
aam
enter
inc
mov
cmp
xchg
xchg
jnp
and
cmp
add
int
adc
aam
ret
aam
movsb
xchg
dec
cmpl
ret
mov
divl
gs
xor
shll
cmp
hlt
gs
xor
xorl
ret
xorl
xor
xor
test
iret
inc
aaa
mov
dec
add
dec
icebp
enter
xor
dec
icebp
aam
ret
aam
fwait
lahf
or
xchg
divl
jnp
mov
aam
clc
xor
mov
dec
shlb
cmp
aam
cld
lods
fs
les
hlt
inc
add
sub
fs
les
enter
loopne
push
testl
loopne
pushf
cmp
aam
testl
dec
fld1
fs
jp
cmp
aam
dec
cli
inc
cmp
lds
xchg
sub
cmp
inc
loop
popf
inc
add
inc
cmp
jp
cmp
aam
dec
ret
mov
inc
mov
xchg
cmp
inc
add
inc
cmp
lcall
sub
int3
cmp
add
lock
pop
scas
enter
ret
aam
lea
cmp
idivl
orl
negl
std
fsts
fsubrl
das
cmp
scas
fisubrl
sub
les
cmp
popf
popf
dec
mov
dec
lock
mov
dec
add
stos
scas
fsubrl
or
cmp
aas
mov
sub
jae
cmp
enter
testl
popf
les
fidivl
les
les
rcll
cmp
cmp
enter
dec
cltd
and
iret
dec
cli
das
ret
xchg
sub
pop
cmp
popf
add
cmp
andl
cmp
scas
into
sub
cmp
cmp
dec
sub
int3
xchg
dec
lock
les
cmp
cmp
scas
aad
inc
and
repnz
hlt
fs
cltd
pop
dec
cmp
loopne
int3
aam
in
movsl
int3
aam
or
aad
xchg
int3
out
xchg
enter
aam
mov
inc
add
incl
cltd
pop
dec
cmp
aam
mov
dec
test
xchg
dec
mov
xchg
dec
cmp
mov
add
lods
or
dec
dec
lds
mov
lret
mov
xor
mov
xchg
dec
fdiv
dec
xlat
dec
xchg
xor
cmp
cmp
xchg
xor
enter
mov
add
ds
mov
scas
sti
sahf
dec
pop
decl
les
in
fisttpll
pop
das
dec
mov
shlb
in
jl
cmp
mov
dec
mov
in
das
fmuls
and
das
dec
mov
shlb
in
jl
les
int
ret
int3
in
rorb
dec
xchg
int3
dec
lahf
rorb
mov
dec
sahf
rorb
dec
sahf
rorb
dec
xchg
int3
dec
mov
dec
adc
inc
ds
mov
scas
sti
sahf
dec
cltd
cmp
daa
lds
xor
inc
dec
out
mov
dec
cltd
cmp
aas
shrb
lcall
mov
adc
dec
mov
call
mov
dec
adc
push
mov
dec
mov
dec
mov
pushl
les
in
rorl
pop
sub
adc
mov
cmpb
mov
int3
in
das
fimuls
and
sub
adc
jo
add
les
mov
shlb
mov
dec
mov
dec
mov
dec
rorb
dec
mov
dec
mov
dec
int3
dec
mov
dec
mov
das
dec
cltd
int3
inc
mov
lcall
lret
inc
inc
les
xor
enter
rorb
dec
lcall
rorb
dec
mov
decl
mov
rorb
add
inc
ds
loope
mov
dec
push
jg
les
dec
mov
int
jg
les
pop
das
dec
cmpb
das
in
inc
mov
dec
mov
les
dec
mov
int
rorb
jle
les
dec
inc
jl
int
dec
cmpl
hlt
cmp
xor
int3
lret
inc
aaa
les
mov
aam
add
inc
sbb
les
cld
movsl
int3
aam
icebp
pop
fs
les
mov
jg
inc
les
leave
cld
movsl
int3
aam
je
int3
aam
les
int
int3
gs
int3
aam
test
dec
leave
cld
movsl
int3
aam
pusha
dec
add
les
mov
aam
test
cmp
aam
mov
inc
mov
inc
movsb
sarb
je
int3
aam
mov
xchg
scas
les
mov
cmp
gs
int3
aam
mov
scas
les
icebp
nop
mov
aam
rcr
fs
leave
loopne
int3
aam
je
int3
aam
or
movsl
int3
aam
or
mov
sub
xchg
sub
or
cmp
int3
inc
add
cmp
loopne
int3
aam
shll
mov
inc
test
movsl
int3
aam
hlt
movsl
int3
aam
or
aam
stc
cld
movsl
int3
aam
fwait
lcall
aam
dec
icebp
loopne
int3
aam
idivl
pushl
lock
add
scas
add
xchg
cmp
in
movsl
int3
aam
cmp
nop
mov
aam
shrl
fs
add
mov
int3
aam
dec
icebp
loopne
int3
aam
in
movsl
int3
aam
xor
icebp
in
movsl
int3
aam
add
cmp
nop
mov
aam
shll
aam
add
in
les
cmp
pop
fs
or
add
xchg
cmp
nop
mov
aam
rcr
fs
pop
inc
mov
cmp
dec
mov
movsl
int3
aam
adc
int3
cmp
fwait
lcall
xchg
xchg
dec
mov
dec
test
xchg
xchg
dec
mov
xchg
negl
das
mov
mov
add
mov
dec
inc
hlt
add
les
sahf
dec
test
dec
test
inc
add
mov
aas
lods
aam
les
enter
les
ret
add
int3
inc
or
sub
dec
push
les
ds
dec
push
out
or
aam
inc
mov
inc
dec
sub
les
dec
push
cmp
les
dec
push
cmp
cmp
add
dec
xchg
rolb
sub
les
les
cmp
cmp
cmp
les
enter
dec
test
dec
mov
dec
mov
dec
test
inc
mov
cmp
les
xchg
cmp
int3
dec
mov
sarb
les
pop
xor
in
int3
dec
pop
fwait
lcall
dec
sub
enter
dec
test
xchg
xchg
dec
mov
xchg
dec
mov
xchg
enter
add
lods
or
dec
dec
lds
mov
dec
mov
inc
and
std
cmp
dec
mov
dec
cltd
cmp
dec
xchg
xor
add
pushl
lret
dec
inc
les
cmp
mov
cmp
sti
popf
dec
mov
fwait
sar
int3
mov
jg
les
in
ficoms
das
dec
mov
mov
shlb
in
push
cmpb
mov
dec
mov
in
das
fildl
and
das
dec
mov
mov
shlb
in
push
add
les
int
ret
int3
in
rorb
dec
fwait
rorb
dec
mov
dec
mov
dec
mov
out
or
mov
inc
mov
popa
les
cmp
enter
mov
cmc
cmp
sti
mov
scas
sti
fwait
dec
cltd
xor
aas
dec
cltd
aam
lahf
rorb
dec
cltd
aam
popf
int3
dec
pop
dec
popf
rorb
dec
popf
sar
int3
mov
dec
mov
rorb
add
inc
cmp
mov
inc
mov
dec
or
les
dec
mov
int
dec
adcb
das
in
mov
dec
mov
les
dec
mov
int
rorb
add
les
and
les
int
dec
xchg
enter
dec
xor
dec
int3
dec
mov
cmp
dec
xchg
enter
dec
xchg
dec
xor
sub
testl
les
enter
dec
mov
dec
cmp
idivl
dec
mov
add
cltd
enter
inc
cmp
mov
scas
sti
lcall
inc
les
cmp
cmp
mov
scas
sti
lcall
mov
jg
les
in
fisttpll
pop
das
dec
mov
shlb
in
push
cmpb
mov
dec
mov
in
das
fmuls
and
das
dec
mov
shlb
in
push
add
les
int
ret
int3
in
rorb
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
mov
dec
mov
add
cmp
mov
scas
sti
lcall
dec
mov
dec
mov
dec
pop
dec
popf
int3
dec
pop
decl
mov
rorb
add
inc
cmp
mov
inc
mov
dec
or
les
dec
mov
int
dec
adcb
das
in
mov
dec
mov
les
dec
mov
int
rorb
add
les
and
les
int
dec
adc
fdivrl
testl
pop
dec
cmp
shlb
movsl
int3
aam
mov
scas
add
mov
inc
add
dec
mov
inc
cmp
iret
inc
or
pop
sub
cmp
das
leave
inc
add
divl
pop
cs
xchg
cmp
leave
hlt
movsl
int3
aam
sbb
rorb
xchg
cmp
cmp
adc
dec
cltd
int3
lcall
sub
sbb
mov
int3
aam
aad
xchg
rorb
xchg
cmp
cmp
adc
dec
cltd
int3
lcall
mov
das
enter
les
dec
cltd
int3
lcall
xor
sbb
cmc
dec
fldlg2
movsl
int3
aam
int
mov
inc
pop
rorb
int3
lcall
mov
sub
cmp
dec
sbb
cltd
int3
inc
pop
mov
testl
cmp
popf
dec
aam
lds
aam
cld
cmp
movsl
int3
aam
xchg
dec
aam
xchg
cmp
cmp
add
les
push
and
cmp
cmp
or
les
add
les
orb
xchg
cmp
cmp
adc
dec
push
inc
les
shrb
dec
xchg
cmp
lods
or
dec
dec
lds
mov
dec
mov
cmp
or
add
out
cmp
in
das
mov
mov
dec
nop
cmp
mov
xor
inc
cmp
dec
mov
scas
sti
lcall
les
sar
int3
mov
inc
cmp
jg
les
dec
or
das
dec
mov
dec
mov
dec
cltd
sub
cwtl
dec
orb
cmpb
mov
dec
mov
dec
cltd
int3
in
das
call
das
dec
mov
dec
dec
dec
add
les
cld
shlb
in
cmp
dec
cltd
sub
dec
mov
in
shrb
dec
cltd
int3
inc
mov
int3
dec
mov
dec
mov
dec
mov
lret
inc
dec
les
xor
xor
mov
dec
mov
dec
mov
dec
xchg
int3
dec
mov
decl
mov
rorb
add
mov
sarb
mov
jnp
les
pop
sub
decl
jnp
les
dec
mov
int
dec
subb
inc
mov
dec
mov
les
int
rorb
dec
js
add
les
and
les
int
dec
mov
or
dec
mov
cmp
dec
mov
mov
adc
into
dec
mov
cmp
xor
dec
mov
or
je
int3
aam
dec
mov
dec
cld
movsl
int3
aam
ret
inc
loope
mov
aam
dec
mov
dec
int3
dec
xchg
fwait
lcall
dec
sub
int3
addr16
int3
aam
js
int3
aam
add
int3
aam
add
dec
cmp
int3
dec
leave
fs
aam
std
xchg
shlb
enter
inc
add
incl
mov
scas
or
lcall
shlb
cmp
add
int3
aam
push
cmp
popf
pop
scas
in
lods
mov
sbb
dec
mov
dec
cltd
int3
inc
aas
iret
mov
pop
scas
popf
out
add
mov
out
add
mov
sub
adc
dec
mov
rolb
cmp
jp
mov
aam
jl
int3
aam
movsb
cmp
cltd
cmp
cmp
inc
add
dec
ret
dec
pop
inc
sub
mov
inc
sub
mov
mov
cmp
add
rol
testl
sub
inc
cmp
inc
add
das
push
add
int3
aam
add
int3
aam
sarb
mov
aam
js
int3
aam
into
jp
mov
aam
add
and
les
dec
andl
sbb
std
andl
and
cmp
std
andl
jp
cmp
popf
testl
aas
iret
mov
inc
aas
shlb
mov
dec
andl
mov
andl
aas
int3
mov
dec
leave
push
cmp
aam
mov
dec
leave
pop
cmp
aam
rcll
ret
aam
push
std
mov
mov
scas
or
dec
adc
cmp
xchg
or
cmp
add
cmp
les
int3
mov
cmp
and
das
fisttpll
int3
dec
mov
les
mov
cmp
popf
pop
xchg
cmp
int3
mov
inc
aas
iret
mov
inc
aas
shlb
andl
adcl
cmp
or
or
or
or
or
rclb
add
dec
cmpl
cmp
dec
test
les
lcall
xchg
dec
das
inc
cmp
mov
jge
les
les
enter
xchg
dec
sub
aam
jae
xchg
jae
orb
dec
xchg
cmp
xor
or
les
dec
add
scas
cmc
xchg
negl
xchg
xor
xchg
sub
sbb
cmp
dec
or
scas
idivb
mov
dec
xorl
cmp
iret
cmp
or
scas
idivl
mov
dec
xorl
cmp
iret
cmp
adc
scas
lock
xchg
xchg
sub
sbb
cmp
xchg
iret
cmp
adc
scas
icebp
cmp
xchg
xchg
sub
sbb
cmp
cmp
sbb
scas
repnz
xchg
xchg
sub
sbb
cmp
cmp
cmp
xorl
cmp
iret
cmp
and
scas
out
cmp
xchg
xchg
sub
sbb
cmp
xchg
iret
cmp
and
scas
out
cmp
xchg
xchg
sub
sbb
cmp
cmp
sub
scas
call
xorl
cmp
iret
cmp
sub
scas
jmp
xorl
cmp
iret
cmp
xor
scas
ljmp
xchg
xchg
sub
sbb
cmp
xchg
iret
cmp
xor
scas
jmp
mov
dec
xorl
cmp
iret
cmp
sbb
scas
hlt
cmp
xchg
xchg
sub
sbb
cmp
cmp
cmp
scas
cmpb
cmp
xor
xchg
sub
sbb
cmp
cmp
cmp
scas
cmpl
xor
xchg
sub
sbb
cmp
xchg
iret
cmp
addb
dec
xorl
cmp
iret
cmp
addb
cmp
xor
xchg
sub
sbb
cmp
cmp
orb
dec
xorl
cmp
iret
cmp
orb
cmp
xor
xchg
sub
sbb
cmp
xchg
iret
cmp
adcb
dec
xorl
cmp
iret
cmp
adcb
cmp
xor
xchg
sub
pop
cmp
iret
cmp
sbbb
dec
xorl
cmp
iret
cmp
sbbb
cmp
xor
xchg
sub
pop
cmp
inc
add
xchg
scas
mov
mov
dec
xorl
cmp
iret
cmp
andb
cmp
xor
xchg
sub
pop
cmp
iret
cmp
subb
dec
xorl
cmp
iret
cmp
subb
cmp
xor
xchg
sub
pop
cmp
inc
add
xchg
scas
cmp
xchg
xchg
sub
pop
cmp
iret
cmp
xorb
cmp
xor
xchg
sub
pop
cmp
iret
cmp
cmpb
dec
xorl
cmp
iret
cmp
cmpb
cmp
xor
xchg
sub
push
cmp
inc
add
les
dec
xorl
cmp
iret
cmp
inc
inc
les
dec
xorl
cmp
iret
cmp
inc
dec
les
xchg
dec
xorl
cmp
cmp
inc
dec
les
dec
xorl
cmp
inc
add
les
dec
xorl
cmp
iret
cmp
inc
push
les
dec
xorl
cmp
iret
cmp
inc
pop
les
dec
xorl
cmp
iret
cmp
inc
pop
les
dec
xorl
cmp
inc
add
les
dec
xorl
cmp
iret
cmp
inc
pusha
les
dec
xorl
cmp
iret
cmp
inc
insb
les
cmp
xchg
xchg
sub
sbb
dec
inc
je
les
dec
cltd
cmp
dec
xorl
sbb
xchg
iret
cmp
add
les
xchg
dec
sub
xor
inc
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
add
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
add
les
dec
cmp
cmp
les
dec
cmp
cmp
les
dec
cmp
cmp
les
dec
cmp
cmp
les
dec
cmp
cmp
les
dec
cmp
cmp
les
jb
les
dec
cmp
cmp
les
dec
cmp
cmp
les
dec
cmp
cmp
les
dec
cmp
inc
add
lcall
sub
int3
inc
mov
int3
aam
test
lds
jb
cmp
popf
popf
inc
xor
das
orl
cmp
mov
xchg
sub
cmp
cmp
cmp
inc
jo
les
dec
aaa
inc
add
les
incl
mov
shll
les
aam
repz
dec
cmp
mov
inc
xor
shr
ret
aam
ret
xchg
sub
dec
cmp
popf
dec
add
shl
ret
aam
ret
xchg
sub
dec
cmp
popf
dec
mov
push
lock
aam
ret
xchg
sub
dec
cmp
popf
lcall
sub
fcoml
divl
xchg
dec
cltd
sub
mov
std
mov
mov
std
mov
mov
dec
mov
dec
mov
add
aam
inc
les
pop
jno
cmp
popf
popf
dec
mov
int3
testl
les
js
les
aaa
popa
sub
jno
cmp
xor
add
sub
dec
cmp
popf
das
adc
fmul
inc
jg
les
cmp
popf
dec
cmpl
divl
cmpb
int3
sub
dec
cmp
cmp
cmp
popf
popf
dec
add
dec
hlt
dec
mov
lret
jae
cli
xchg
scas
lret
subl
adc
cmp
xor
rclb
scas
lds
int
xor
int3
xchg
scas
aam
dec
xorl
xchg
sub
adc
cmp
clc
iret
xorl
jns
cmp
popf
inc
or
das
dec
dec
xorl
int3
inc
cmp
cmp
sub
inc
cld
les
cmp
xor
mov
lret
inc
cli
les
leave
call
or
hlt
ds
aam
mov
dec
leave
lock
aam
mov
dec
mov
dec
cmpl
dec
cmpl
dec
int3
dec
inc
jo
les
loopne
ret
add
xchg
cmp
dec
inc
je
les
mov
xchg
cmp
inc
add
fdivrl
ja
les
dec
cmp
cmp
les
dec
cmp
popf
popf
dec
cmpl
les
cmp
inc
je
les
int3
dec
inc
js
testl
dec
cmp
mov
inc
xor
inc
cld
ds
aam
ret
xchg
sub
dec
cmp
popf
dec
adc
sar
ret
aam
ret
xchg
sub
dec
cmp
popf
dec
adc
roll
sub
dec
cmp
popf
dec
sbb
roll
xchg
sub
dec
cmp
popf
dec
sbb
rorl
sub
dec
cmp
popf
dec
and
rorl
xchg
sub
dec
cmp
popf
dec
mov
push
xchg
ds
aam
ret
xchg
sub
dec
cmp
popf
lcall
sub
aam
xchg
dec
mov
xchg
idivl
dec
mov
dec
mov
mov
std
mov
mov
jg
ds
aam
repnz
scas
hlt
scas
lds
ja
cmp
popf
popf
lcall
mov
testl
les
cmp
popf
dec
cmpl
sub
dec
cmp
popf
das
and
cld
std
mov
scas
shrb
cmp
popf
dec
cmpl
xchg
sub
dec
cmp
cmp
cmp
popf
das
push
dec
cld
lret
jae
cld
dec
xchg
xchg
scas
rcll
lds
dec
cmp
xchg
xchg
scas
rclb
lds
iret
cmp
xchg
xchg
scas
rclb
lds
iret
cmp
xchg
xchg
scas
rcll
lds
inc
add
xchg
scas
fcoml
lds
iret
cmp
xchg
xchg
scas
xchg
xchg
dec
xorl
adc
cmp
cmp
xchg
xchg
scas
xchg
xchg
dec
xorl
pop
cmp
iret
cmp
xchg
xchg
scas
ficoms
les
inc
add
xchg
scas
fstl
xor
sub
pop
cmp
iret
cmp
xchg
xchg
scas
nop
xchg
dec
xorl
pop
cmp
iret
cmp
xchg
xchg
scas
xchg
xchg
dec
xorl
pop
cmp
iret
cmp
xchg
xchg
scas
xchg
xchg
dec
xorl
pop
cmp
inc
add
xchg
scas
xchg
xchg
dec
xorl
pop
cmp
iret
cmp
xchg
xchg
scas
xchg
xchg
dec
xorl
pop
cmp
iret
cmp
xchg
xchg
scas
xchg
xchg
dec
xorl
pop
cmp
inc
add
iret
add
cmp
cmp
cmp
mov
sub
inc
cmp
cmp
cmp
inc
add
sub
dec
xchg
das
dec
int3
inc
cmp
cmp
sub
inc
cld
les
cmp
xor
mov
lret
inc
cli
les
enter
ds
aam
aas
aaa
popa
dec
or
js
les
dec
int
iret
dec
int3
dec
rorb
dec
les
int3
dec
mov
test
cmp
std
mov
mov
dec
lds
jl
incl
mov
xchg
cmp
loopne
ret
inc
je
incl
mov
xchg
cmp
loopne
ret
add
fdivrl
jb
les
inc
cmp
cmp
les
inc
cmp
popf
popf
dec
cmpl
les
cmp
inc
je
les
js
testl
dec
cmp
int3
inc
add
inc
sub
inc
cld
sbb
les
inc
cmp
popf
cltd
pop
jmp
mov
inc
sub
mov
inc
sub
mov
mov
jl
rol
pop
jl
rol
pop
jl
int3
les
jl
rol
pop
dec
cmp
idivl
dec
sbb
xchg
sub
jo
cmp
add
jae
dec
add
mov
add
dec
mov
jge
inc
add
dec
sbb
or
dec
rol
dec
aam
mov
jp
dec
ror
dec
aam
mov
dec
cmp
fadd
les
cmp
aam
add
cmp
cmp
xchg
cmp
gs
inc
add
inc
aas
testl
cmp
test
add
cmp
add
cmp
cmp
inc
add
ljmp
lret
jb
lret
jb
decl
shr
add
leave
cmp
cmp
scas
in
sub
ja
cmp
enter
xchg
mov
scas
les
mov
dec
inc
cmp
cmp
cmp
inc
cmp
cmp
xchg
scas
lds
negl
xchg
cmp
cmp
cmp
cmp
cmp
xchg
xchg
cmp
out
les
adcb
cmp
cmp
xchg
xchg
xchg
dec
inc
cmp
cmp
xchg
lods
mov
cmp
out
les
loopne
add
jae
cmpl
add
mov
dec
dec
sarl
cmp
das
aad
add
mov
ftst
dec
dec
sarl
cmp
dec
dec
ret
les
int3
add
fld
les
xchg
dec
inc
fld
les
inc
and
cmp
pop
cmp
cmp
or
cmp
dec
push
and
cmp
dec
inc
lret
adc
sahf
in
aas
fnsave
dec
adc
lret
inc
fnsave
ftst
dec
adc
aam
movl
or
fwait
testl
cmp
or
dec
mov
or
push
cmp
dec
cmp
push
cmp
aam
xorl
mov
dec
mov
inc
xor
mov
cmp
popf
dec
add
or
leave
sub
and
cmp
dec
mov
dec
mov
push
mov
int3
aam
repnz
xor
loopne
ret
add
lret
inc
cmp
xchg
sub
inc
cmp
popf
gs
int3
aam
subl
dec
mov
xchg
cmp
fsubs
add
cmp
les
dec
dec
mov
scas
leave
sub
daa
cmp
popf
pop
dec
cmp
aam
negl
xchg
dec
mov
sbb
dec
mov
aam
cmp
mov
add
or
les
shll
fs
cltd
cmp
inc
movsl
mov
das
clc
inc
cmp
mov
add
or
les
shrl
ret
pop
inc
cmp
mov
dec
xorl
or
les
add
cltd
cmp
inc
movsb
mov
dec
add
xchg
dec
sub
in
enter
testl
dec
cltd
enter
int3
xchg
sub
cmp
cmp
divl
dec
mov
lret
sub
cmp
cmp
add
pop
dec
mov
testl
les
andl
xor
les
cmp
lret
inc
mov
les
sub
inc
mov
jae
xchg
cmp
and
ret
add
inc
xchg
dec
subl
gs
add
inc
test
dec
xchg
xchg
xchg
sub
je
cmp
push
xchg
enter
dec
mov
std
xchg
sub
inc
cmp
les
lret
inc
or
les
sub
inc
or
lret
jb
cmp
jb
sub
lods
les
fcoms
cmp
dec
mov
inc
add
scas
or
dec
jne
ror
dec
mov
das
out
dec
add
add
in
lret
jb
lret
jb
das
dec
andl
aam
cmp
lret
jb
lds
dec
mov
cli
les
cmp
inc
mov
and
mov
les
aas
cmp
scas
ret
enter
dec
dec
mov
mov
dec
hlt
test
aaa
sub
aas
cmp
sub
inc
mov
fld
test
add
inc
mov
lock
cmp
fidivrl
les
test
shrb
cmp
dec
xchg
dec
xchg
int3
das
dec
mov
testl
add
dec
mov
das
insb
std
icebp
or
pushf
cmp
cmp
cmp
cmp
sub
test
scas
shrb
xchg
add
cmp
and
sub
jnp
cmp
dec
mov
cmp
dec
fwait
lods
dec
mov
sub
cmp
cmp
int3
incl
lods
in
les
outsb
cmp
popf
dec
sbb
pop
lret
inc
add
les
les
lods
dec
aas
aaa
popa
inc
out
xchg
cmp
cmp
popf
popf
dec
andl
les
sbb
mov
cmp
loopne
ret
add
aad
subb
ret
xchg
sub
inc
cmp
popf
dec
lcall
ret
adc
xorb
les
rcll
sbb
les
cmp
popf
inc
mov
shlb
int3
aam
xchg
addr16
int3
aam
xchg
and
testl
dec
mov
adcl
sub
add
andl
les
fmuls
int3
aam
das
sub
and
mov
fld
les
ror
test
and
icebp
mov
int3
aam
shl
fs
add
xlat
gs
int3
aam
mov
int3
aam
ret
xchg
sub
mov
fnstenv
adc
cmpl
sub
les
hlt
scas
leave
sub
sbb
cmp
cmp
mov
inc
aas
mov
int3
aam
ret
xchg
sub
mov
hlt
push
cmp
add
rol
les
rolb
les
and
int
cmp
pop
inc
stc
test
int3
aam
mov
scas
cmp
cmp
cmp
int3
aam
testl
sub
int3
xchg
negl
xchg
xchg
incl
mov
dec
mov
fildll
push
cmp
scas
rcrb
xchg
xchg
xchg
sub
mov
cmp
rorb
das
clc
dec
mov
pushl
mov
dec
fsubrl
push
dec
adc
fidivs
cmp
aas
mov
dec
lret
xchg
mov
aam
fsubrl
out
dec
int3
dec
xor
fwait
lcall
sub
xchg
xchg
xchg
xchg
xchg
xchg
dec
xchg
enter
dec
into
add
int
push
shl
xor
or
inc
add
add
int
add
lret
addr16
sub
inc
add
lcall
sub
negl
xchg
std
cltd
shlb
aam
cltd
enter
add
lcall
ret
dec
mov
fildll
push
cmp
scas
rcrb
xchg
xchg
xchg
sub
mov
cmp
rorb
das
adc
cltd
shlb
push
dec
xchg
aam
pop
mov
dec
fisubrl
adc
dec
add
int3
test
mov
into
dec
int3
test
mov
mov
std
cltd
shlb
aas
mov
inc
mov
dec
or
ret
sub
dec
fisubrl
push
cmp
scas
out
dec
int3
dec
xor
xchg
dec
sub
add
negl
test
cltd
enter
xchg
inc
add
cli
dec
or
push
dec
xor
or
xor
repz
adc
inc
les
into
dec
mov
inc
add
dec
std
das
iret
mov
enter
lcall
fwait
lcall
add
pop
dec
cmp
enter
ret
aam
add
cmp
mov
inc
cli
les
ret
sub
jl
cmp
stc
lods
mov
ret
sub
jl
cmp
fsubrl
xchg
scas
iret
cmp
fs
add
jmp
mov
xchg
sub
inc
les
or
cmp
xorl
les
mov
cmp
sbb
inc
add
shl
das
adc
xor
sub
jae
cmp
jge
shrl
ret
jg
cmp
mov
decl
ret
enter
cmp
mov
testl
cltd
pop
dec
cmp
dec
add
shll
iret
dec
add
mov
inc
add
add
ret
into
inc
or
lcall
inc
cmp
cmp
sub
mov
test
sub
dec
cmp
mov
aam
add
cmp
sub
jle
cmp
dec
adc
pop
les
cmp
cmp
scas
mov
dec
adc
sbb
add
shll
rol
les
ret
add
ret
int3
test
testb
xchg
cmp
les
rcll
cmp
inc
mov
rorb
dec
mov
add
inc
and
dec
mov
fwait
testl
cmp
or
cmp
mov
aam
add
cmp
inc
xchg
dec
or
les
les
fs
add
shl
das
ljmp
cmp
std
or
enter
dec
repnz
dec
adc
cmp
cmp
mov
cmp
mov
testl
or
cmp
dec
sub
mov
aam
add
cmp
int3
sub
jge
cmp
dec
adc
pop
les
fstps
fs
cmp
mov
dec
adc
sbb
add
shll
rol
les
mov
inc
mov
test
dec
addl
ret
les
inc
push
les
xchg
dec
adc
sbb
add
xor
cmp
les
mov
dec
addl
inc
les
enter
rol
les
fsubrl
xchg
xor
dec
or
add
call
xchg
cmp
sub
inc
les
enter
fnstsw
repnz
mov
dec
mov
cmp
popf
incl
mov
xchg
int3
xor
lds
cmp
cmp
inc
push
lds
int3
dec
mov
jl
mov
or
inc
pop
les
xchg
dec
adc
sbb
add
xor
cmp
les
lret
inc
fdivrl
cmp
dec
addl
inc
les
add
jmp
mov
mov
dec
or
lcall
les
int3
das
cmp
enter
repnz
mov
or
ljmp
aam
lock
lcall
xchg
cmp
sub
inc
les
ficoml
das
cmp
cmp
lret
inc
mov
std
lcall
dec
or
sub
xor
and
dec
mov
fwait
lcall
cmp
or
cmp
mov
aam
add
cmp
sub
jae
cmp
dec
adc
pop
les
cmp
cmp
scas
mov
dec
adc
sbb
add
xor
cmp
les
ret
add
ret
int3
test
lahf
dec
addl
inc
les
int
adc
hlt
scas
lds
fiaddl
aam
mov
inc
mov
dec
addl
inc
les
fstl
cmp
cmp
into
inc
mov
rorb
dec
mov
add
inc
and
dec
mov
fwait
testl
cmp
or
repnz
mov
rolb
xor
add
dec
adc
idivl
xor
add
mov
mov
dec
adc
shrl
shrb
lds
or
rcrl
ret
or
mov
insl
mov
mov
insb
ret
mov
inc
mov
repnz
mov
xor
add
popf
dec
adc
shrl
shrb
aas
cmp
scas
lds
or
rcrl
ret
or
mov
inc
mov
cmp
xchg
sub
jb
cmp
int3
dec
xor
add
les
mov
inc
mov
rol
les
dec
xchg
dec
ret
inc
add
roll
mov
xchg
scas
shrb
cmp
enter
mov
mov
inc
cld
les
add
enter
mov
sub
cmp
cmp
shrl
cmp
inc
mov
inc
les
sbb
aam
jns
cmp
inc
add
inc
add
cmpsb
dec
sti
inc
cmp
mov
sub
cmp
cmp
xchg
sub
cmp
cmp
lea
inc
cmp
mov
xchg
sub
mov
cmp
xor
test
adc
rcrl
ret
or
mov
inc
mov
add
les
sar
gs
sbb
sbb
mov
sub
les
inc
das
inc
xor
dec
cmp
cmp
dec
mov
inc
adc
les
sub
lret
inc
add
les
sub
inc
jl
lret
jae
xchg
cmp
and
ret
add
inc
les
cmp
adc
inc
add
inc
push
les
enter
xlat
mov
dec
int3
mov
dec
mov
mov
cltd
aam
pop
mov
dec
stc
sbb
jge
int3
les
lods
nop
pop
ret
test
cmp
enter
out
add
xchg
xchg
xchg
xchg
sub
lods
cmp
inc
add
das
aad
test
les
mov
cmp
inc
add
call
test
cmp
add
fsubrl
das
inc
xchg
cmp
cmp
inc
add
testl
fwait
lcall
dec
sub
dec
add
lret
inc
and
les
les
les
les
les
enter
xchg
scas
in
sub
dec
hlt
push
mov
lret
jb
lret
jb
out
aaa
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
inc
xor
inc
lods
rol
lret
jb
popf
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
inc
xor
inc
mov
lret
jb
lret
jb
out
aaa
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
inc
xor
inc
jecxz
lret
jb
lret
jb
out
aaa
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
das
divl
inc
xor
inc
mov
les
sar
shlb
lret
jb
shr
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
inc
xor
inc
sbb
jb
ror
popf
shr
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
inc
xor
inc
jl
lret
jb
ret
popf
ret
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
inc
xor
inc
push
mov
ret
lret
jb
ret
out
aaa
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
das
divl
inc
xor
inc
mov
les
int3
pushl
jb
int3
lret
jb
int3
out
aaa
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
inc
xor
inc
mov
int
jb
int
aaa
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
inc
xor
inc
in
mov
into
lret
jb
into
out
aaa
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
inc
xor
inc
ret
mov
iret
lret
jb
iret
out
aaa
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
das
divl
inc
xor
inc
es
dec
mov
pushl
jb
enter
enter
shl
pop
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
inc
xor
inc
jge
lret
jb
leave
lret
jb
leave
out
aaa
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
inc
xor
inc
pop
mov
lret
jb
lret
popf
lret
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
inc
xor
inc
mov
lret
jb
lret
lret
jb
lret
out
aaa
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
das
divl
inc
xor
inc
xchg
mov
dec
mov
pushl
jb
aam
jb
aam
aaa
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
inc
xor
inc
in
mov
lret
jb
aad
jb
aad
aaa
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
inc
xor
inc
int3
mov
lret
jb
lret
jb
out
aaa
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
inc
xor
inc
and
lret
jb
xlat
lret
jb
xlat
out
aaa
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
das
divl
inc
xor
inc
push
dec
mov
pushl
jb
ror
jb
shr
aaa
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
inc
xor
inc
pop
lret
jb
ror
jb
shr
aaa
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
inc
xor
inc
mov
jb
ror
jb
shr
aaa
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
inc
xor
inc
xchg
lret
jb
ror
jb
shr
aaa
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
das
divl
inc
xor
inc
test
les
fdivr
mov
mov
lret
jb
fmul
jb
fsubr
aaa
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
inc
xor
inc
int
lret
jb
jb
fucomp
aaa
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
inc
xor
inc
sub
lret
jb
fmulp
jb
fsubrp
aaa
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
inc
xor
inc
add
lret
jb
jb
fucomip
aaa
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
das
divl
inc
xor
inc
data16
les
fdivr
mov
mov
lret
jb
fmul
jb
fsubr
aaa
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
inc
xor
fxch
jb
aaa
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
inc
xor
fcmove
jb
aaa
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
inc
xor
fcmovne
jb
fucomi
aaa
mov
negl
inc
xor
pop
pop
dec
cwtl
fistpll
dec
aaa
das
divl
inc
xor
push
out
ds
ds
inc
inc
aas
cmp
movl
fcmovne
inc
push
mov
jae
rcl
add
dec
xchg
and
xchg
and
lret
jb
and
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
and
jb
and
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
and
jb
and
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
and
jb
and
ss
notl
inc
xor
pop
push
dec
nop
cmp
das
divl
inc
xor
inc
mov
cmp
dec
xchg
sub
xchg
sub
mov
jb
sub
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
mov
cmp
lret
jb
sub
out
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
jmp
jb
cs
jb
cs
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
enter
lret
jb
das
lret
jb
das
out
ss
notl
inc
xor
pop
push
dec
nop
cmp
das
divl
inc
xor
inc
and
cmp
dec
xchg
sub
xchg
sub
lret
jb
sub
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
jnp
cmp
lret
jb
sub
jb
sub
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
pop
cmp
cmp
jb
sub
jb
sub
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
mov
jb
sub
jb
sub
ss
notl
inc
xor
pop
push
dec
nop
cmp
das
divl
inc
xor
inc
pushf
cmp
cmp
xor
xchg
xor
mov
jb
xor
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
hlt
cmp
cmp
jb
xor
out
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
lret
cmp
cmp
jb
ss
jb
ss
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
sub
cmp
lret
jb
aaa
lret
jb
aaa
out
ss
notl
inc
xor
pop
push
dec
nop
cmp
das
divl
inc
xor
inc
or
xchg
xor
xchg
xor
xor
jb
xor
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
cmp
cmp
jb
xor
jb
xor
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
mov
jb
xor
jb
xor
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
lcall
xor
jb
xor
ss
notl
inc
xor
pop
push
dec
nop
cmp
das
divl
inc
xor
inc
std
cmp
cmp
cmp
xchg
cmp
mov
jb
cmp
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
aad
cmp
lret
jb
cmp
out
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
xor
cmp
lret
jb
ds
jb
ds
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
or
cmp
lret
jb
aas
lret
jb
aas
out
ss
notl
inc
xor
pop
push
dec
nop
cmp
das
divl
inc
xor
inc
outsb
cmp
cmp
cmp
xchg
cmp
lret
jb
cmp
ss
notl
inc
xor
pop
push
dec
nop
cmp
mov
lret
jb
cmp
jb
cmp
ss
notl
inc
xor
pop
push
dec
nop
cmp
mov
lret
jb
cmp
jb
cmp
ss
notl
inc
xor
pop
push
dec
nop
cmp
mov
dec
push
das
fxch
jb
cmp
jb
cmp
add
inc
add
pop
add
dec
add
inc
add
testl
les
daa
call
jb
lret
jb
daa
out
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
cmp
cmp
lret
jb
and
jb
and
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
sbb
cmp
lret
jb
and
jb
and
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
jg
cmp
lret
jb
and
jb
and
ss
notl
inc
xor
pop
push
dec
nop
cmp
das
divl
inc
xor
inc
push
aas
cmp
dec
xchg
and
xchg
and
lret
jb
and
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
stos
aas
cmp
lret
jb
sub
jb
sub
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
mov
cmp
lret
jb
sub
out
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
call
jb
cs
jb
cs
ss
notl
inc
xor
pop
push
dec
nop
cmp
das
divl
inc
xor
inc
ret
aas
cmp
dec
xchg
das
call
jb
lret
jb
das
out
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
sbb
cmp
lret
jb
sub
jb
sub
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
jp
cmp
lret
jb
sub
jb
sub
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
pop
cmp
lret
jb
sub
jb
sub
ss
notl
inc
xor
pop
push
dec
nop
cmp
das
divl
inc
xor
inc
mov
xchg
sub
xchg
sub
lret
jb
sub
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
xchg
cmp
lret
jb
xor
jb
xor
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
jmp
cmp
lret
jb
xor
out
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
lret
cmp
jb
ss
jb
ss
ss
notl
inc
xor
pop
push
dec
nop
cmp
das
divl
inc
xor
inc
sub
xchg
aaa
call
jb
lret
jb
aaa
out
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
add
jb
xor
jb
xor
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
fs
mov
lret
jb
xor
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
mov
jb
xor
jb
xor
ss
notl
inc
xor
pop
push
dec
nop
cmp
das
divl
inc
xor
inc
sahf
cmp
xor
xchg
xor
xor
jb
xor
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
cmc
cmp
mov
lret
jb
cmp
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
aam
cmp
lret
jb
cmp
out
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
sub
cmp
jb
ds
jb
ds
ss
notl
inc
xor
pop
push
dec
nop
cmp
das
divl
inc
xor
inc
push
cmp
cmp
aas
call
jb
lret
jb
aas
out
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
data16
cmp
jb
cmp
jb
cmp
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
inc
cmp
cmp
jb
cmp
jb
cmp
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
movsb
cmp
cmp
jb
cmp
jb
cmp
ss
notl
inc
xor
pop
push
dec
nop
cmp
das
divl
inc
xor
inc
cmp
cmp
jb
cmp
jb
cmp
add
cmp
testl
cmp
sub
dec
xchg
call
jb
lret
jb
es
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
xor
jb
daa
lret
jb
daa
out
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
adc
cmp
lret
jb
and
jb
and
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
imul
cmp
jb
and
jb
and
ss
notl
inc
xor
pop
push
dec
nop
cmp
das
divl
inc
xor
inc
dec
xor
cmp
and
xchg
and
lret
jb
and
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
cmpsb
xor
cmp
jb
and
jb
and
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
test
cmp
lret
jb
sub
jb
sub
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
in
cmp
lret
jb
sub
out
ss
notl
inc
xor
pop
push
dec
nop
cmp
das
divl
inc
xor
inc
aas
xor
cmp
call
jb
lret
jb
cs
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
pop
xor
cmp
jb
das
lret
jb
das
out
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
jbe
cmp
lret
jb
sub
jb
sub
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
push
xor
cmp
jb
sub
jb
sub
ss
notl
inc
xor
pop
push
dec
nop
cmp
das
divl
inc
xor
inc
test
cmp
dec
xchg
sub
xchg
sub
lret
jb
sub
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
xorb
cmp
jb
sub
jb
sub
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
out
cmp
lret
jb
xor
jb
xor
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
xor
cmp
jb
xor
out
ss
notl
inc
xor
pop
push
dec
nop
cmp
das
divl
inc
xor
inc
sbb
cmp
dec
xchg
call
jb
lret
jb
ss
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
jno
cmp
lret
jb
aaa
lret
jb
aaa
out
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
push
xor
cmp
jb
xor
jb
xor
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
mov
cmp
lret
jb
xor
jb
xor
ss
notl
inc
xor
pop
push
dec
nop
cmp
das
divl
inc
xor
inc
mov
cmp
dec
xchg
xor
xchg
xor
xor
jb
xor
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
loope
cmp
lret
jb
xor
jb
xor
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
shlb
cmp
jb
cmp
jb
cmp
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
daa
xor
cmp
jb
cmp
out
ss
notl
inc
xor
pop
push
dec
nop
cmp
das
divl
inc
xor
inc
jp
cmp
dec
xchg
notrack
jb
lret
jb
ds
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
push
xor
cmp
jb
aas
lret
jb
aas
out
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
mov
cmp
lret
jb
cmp
jb
cmp
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
nop
xor
cmp
jb
cmp
jb
cmp
ss
notl
inc
xor
pop
push
dec
nop
cmp
das
divl
inc
xor
inc
jmp
cmp
mov
call
xor
cmp
jb
cmp
jb
cmp
ss
inc
adc
cmp
notl
inc
xor
pop
push
dec
nop
cmp
lret
inc
xlat
rol
sub
dec
xchg
and
mov
lret
jb
and
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
adc
cmp
lret
jb
es
jb
es
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
imul
cmp
jb
daa
lret
jb
daa
out
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
dec
aaa
cmp
lret
jb
and
jb
and
ss
notl
inc
xor
pop
push
dec
nop
cmp
das
divl
inc
xor
inc
lods
aaa
cmp
dec
xchg
and
xchg
and
lret
jb
and
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
test
cmp
lret
jb
and
jb
and
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
in
cmp
lret
jb
and
jb
and
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
cmp
cmp
lret
jb
sub
jb
sub
ss
notl
inc
xor
pop
push
dec
nop
cmp
das
divl
inc
xor
inc
push
cmp
dec
xchg
sub
mov
jb
sub
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
jbe
cmp
lret
jb
cs
jb
cs
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
push
cmp
lret
jb
das
lret
jb
das
out
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
mov
cmp
lret
jb
sub
jb
sub
ss
notl
inc
xor
pop
push
dec
nop
cmp
das
divl
inc
xor
inc
cmp
dec
xchg
sub
xchg
sub
lret
jb
sub
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
out
cmp
lret
jb
sub
jb
sub
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
cmp
lret
jb
sub
jb
sub
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
and
jb
xor
jb
xor
ss
notl
inc
xor
pop
push
dec
nop
cmp
das
divl
inc
xor
inc
js
cmp
dec
xchg
xor
mov
lret
jb
xor
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
push
xor
mov
lret
jb
ss
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
mov
cmp
lret
jb
aaa
lret
jb
aaa
out
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
xchg
xor
mov
lret
jb
xor
ss
notl
inc
xor
pop
push
dec
nop
cmp
das
divl
inc
xor
inc
call
xchg
xor
xchg
xor
lret
jb
xor
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
shlb
xor
jb
xor
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
daa
xor
cmp
jb
xor
jb
xor
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
push
xor
cmp
jb
cmp
jb
cmp
ss
notl
inc
xor
pop
push
dec
nop
cmp
das
divl
inc
xor
inc
pop
xor
cmp
cmp
mov
jb
cmp
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
mov
cmp
lret
jb
ds
jb
ds
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
nop
xor
cmp
jb
aas
lret
jb
aas
out
ss
notl
inc
xor
pop
push
dec
nop
cmp
inc
xor
inc
divl
cmp
jb
cmp
jb
cmp
ss
notl
inc
xor
pop
push
dec
nop
cmp
das
divl
inc
xor
inc
lret
cmp
jb
cmp
jb
cmp
ss
inc
sbb
cmp
notl
inc
xor
pop
push
dec
nop
cmp
lret
inc
push
aas
cmp
dec
push
sub
dec
mov
dec
mov
lret
jb
lret
jb
out
push
mov
notl
inc
add
pop
push
dec
nop
cmp
inc
add
inc
sub
lret
jb
xchg
mov
notl
inc
add
pop
push
dec
nop
cmp
inc
add
inc
or
lret
jb
lret
jb
out
push
mov
notl
inc
add
pop
push
dec
nop
cmp
inc
add
inc
outsl
lret
jb
lret
jb
out
add
testl
cmp
sub
dec
mov
dec
mov
lret
jb
lret
jb
out
push
mov
notl
inc
add
pop
push
dec
nop
cmp
inc
add
lods
lret
jb
xchg
mov
notl
inc
add
pop
push
dec
nop
cmp
inc
add
lret
jb
lret
jb
das
pop
dec
mov
dec
mov
lret
jb
lret
jb
out
push
mov
notl
inc
add
pop
push
dec
nop
cmp
inc
add
in
jb
mov
sub
dec
or
jb
lret
jb
sub
testl
dec
rcl
push
rcl
push
rcl
pop
rcl
dec
rcl
dec
rcl
push
rcl
push
rcl
dec
rcl
dec
rcl
push
rcl
push
rcl
dec
rcl
dec
rcl
push
rcl
push
rcl
dec
rcl
dec
rcl
push
rcl
push
rcl
dec
rcl
dec
rcl
push
rcl
push
rcl
dec
rcl
dec
rcl
push
rcl
push
rcl
dec
rcl
dec
rcl
push
rcl
push
rcl
cmp
gs
testl
sub
int3
aam
xchg
negl
xchg
dec
cmp
dec
cmpl
lods
lods
pop
ret
cmp
or
inc
add
int3
dec
icebp
sub
int3
aam
lock
nop
fs
cmp
mov
scas
pushf
addr16
int3
aam
shll
int3
aam
cmp
lret
inc
or
incl
lret
inc
add
les
sub
les
cmp
cltd
fdivl
test
dec
sbb
ret
add
cltd
in
xchg
cmp
cmp
les
dec
cmp
aas
lret
inc
outsl
les
cmp
mov
sti
int3
stc
rol
mov
sub
mov
incl
mov
add
or
les
aad
sub
cltd
cmp
popf
incl
mov
add
sbb
les
int3
dec
sbb
pop
mov
dec
sar
scas
les
cmp
enter
mov
cmp
mov
cmp
inc
add
aad
mov
xchg
xchg
cmp
fs
cmpl
cmp
cmp
das
mov
xor
cltd
fdivs
test
dec
sbb
int3
dec
ret
dec
test
dec
sbb
mov
cmp
mov
testl
mov
xchg
xchg
dec
mov
xchg
cmp
fsubrl
mov
inc
add
pushl
mov
dec
mov
cmp
cmp
cmp
fs
cmp
aaa
mov
xchg
sub
cltd
cmp
popf
dec
add
sub
cmp
or
lea
cmp
dec
sub
aam
mov
dec
mov
mov
cmp
cmp
cmp
cmp
cmp
sub
cmp
cmp
fadds
les
inc
movsl
mov
or
dec
sub
xchg
dec
cltd
aam
pop
mov
testl
mov
dec
mov
stos
dec
mov
dec
or
rolb
inc
push
mov
xchg
cmp
inc
push
mov
xchg
cmp
inc
push
mov
xchg
cmp
inc
push
mov
xchg
cmp
sar
cmp
jb
cmp
jb
cmp
or
test
lret
jb
cmp
clc
lret
jb
cmp
jb
cmp
test
test
lret
jb
cmp
in
dec
mov
dec
or
inc
push
mov
aad
aam
test
cmpl
sub
add
lahf
or
lret
jb
out
add
or
or
or
or
or
or
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
dec
xchg
enter
dec
into
add
int
push
shl
xor
cmp
into
add
enter
lret
addr16
xor
add
lcall
sub
shlb
cmp
aam
add
cmp
dec
xor
int3
aam
cld
xchg
xchg
idivl
adcl
lods
xchg
cmp
mov
aam
add
int3
dec
stc
sub
cmp
nop
fs
cmp
mov
add
sub
std
cltd
sarb
dec
adc
int3
test
cmpxchg
inc
or
out
add
mov
shlb
mov
aam
cmp
lret
inc
push
pop
lret
inc
pusha
inc
cmp
lret
inc
or
les
cmp
cltd
in
int3
dec
ret
rorb
dec
icebp
fsubl
aam
add
cltd
loopne
xchg
cmp
cmp
les
dec
cmp
aas
lret
inc
dec
mov
push
pushf
xor
inc
cmp
mov
dec
cmp
stc
rol
mov
sub
cmpsl
les
incl
mov
add
or
les
aad
sub
sahf
cmp
popf
incl
mov
add
sbb
les
int3
dec
xorl
xor
cltd
xor
inc
cli
xchg
cmp
cmp
mov
cmp
inc
add
inc
daa
les
mov
aam
xchg
xchg
cmp
cmp
or
mov
bswap
inc
push
les
or
mov
std
cltd
fmul
inc
je
decl
les
mov
cmp
xor
mov
cmp
push
decl
mov
push
pushf
xor
std
dec
or
stc
rol
mov
sub
cmpsb
les
pushl
mov
add
or
les
int3
das
ficoms
popf
incl
mov
add
sbb
les
int3
dec
xor
divl
pushl
mov
cmp
mov
cmp
cmp
mov
aam
add
out
xchg
std
cltd
fdivs
ret
fdivrs
mov
cmp
mov
cmp
aam
ret
cmpl
cmp
jecxz
cmp
dec
cmpl
dec
cltd
xor
cltd
int3
mov
dec
ret
rorb
int3
std
cltd
in
int3
dec
ret
rorb
cmp
les
cmp
mov
testl
inc
pop
les
xchg
cmp
in
pushf
cmpsl
les
fmull
xor
pop
mov
dec
icebp
mov
aam
xchg
cmp
enter
cmp
dec
cmpl
xor
mov
mov
inc
add
stc
rol
mov
sub
movsl
les
aas
mov
add
or
les
int3
das
ficoms
popf
incl
mov
add
sbb
les
int3
dec
cmp
idivl
aas
mov
cmp
jl
cmp
inc
add
cmp
sarb
mov
cmp
cmp
dec
cmpl
xor
loope
mov
dec
cmpl
cmp
sub
cmpsb
les
dec
mov
inc
add
xor
fbstp
out
cmp
sub
pop
cmp
popf
das
fidivrs
mov
cmp
cmp
cmp
gs
xor
cltd
xor
sub
pushf
cmp
popf
dec
xorl
sbb
pop
pushf
cmp
popf
dec
add
and
lcall
sub
cmpb
or
dec
sub
aam
mov
dec
mov
mov
mov
dec
mov
mov
cmp
cmp
cmp
sub
cmp
cmp
in
mov
dec
mov
movsl
mov
or
dec
sub
add
inc
mov
testl
or
ret
aam
cmp
cmp
dec
mov
idivl
decl
mov
scas
and
notl
xor
add
mov
sub
mov
cmp
enter
xchg
xchg
xchg
xchg
xchg
sub
mov
cmp
shl
add
adc
lret
imul
int3
pushl
mov
divl
xor
dec
cltd
and
and
lods
inc
stc
clc
movsl
int3
aam
mov
inc
add
inc
and
int3
inc
call
repz
shrb
mov
sub
add
cmp
cmpl
sub
les
and
sbb
xchg
xchg
sub
inc
cmp
inc
add
lcall
mov
xchg
scas
int3
cmp
nop
mov
aam
shll
lcall
mov
std
stc
jo
int3
aam
notl
cmp
mov
cmp
dec
adc
xchg
cmp
cmp
enter
sub
idivl
dec
mov
scas
shrb
cmp
popf
pop
lcall
mov
dec
adc
add
enter
dec
pop
sub
pop
cmp
pop
scas
aam
sub
ret
aam
push
pop
cmp
dec
cltd
int3
inc
pop
mov
cmp
cmp
popf
sub
dec
mov
inc
xor
xchg
cmp
popf
sub
inc
stc
clc
movsl
int3
aam
lret
inc
push
idivl
dec
mov
lret
inc
dec
scas
shrb
cmp
popf
dec
mov
jl
cmp
add
inc
pop
push
call
lea
jns
cmp
enter
rorl
das
icebp
xchg
sub
jnp
cmp
add
mov
add
xchg
cmp
cmp
xchg
sub
jae
cmp
and
xchg
sub
jae
cmp
fdivr
mov
xor
dec
mov
inc
add
inc
and
cmp
nop
mov
aam
shll
and
add
mov
add
xchg
cmp
cmp
xchg
cmp
cmp
inc
add
add
cmp
les
and
mov
inc
xor
lret
inc
and
scas
les
icebp
nop
mov
aam
shrl
fs
cmp
dec
mov
dec
cltd
int3
scas
shrb
cmp
popf
pop
dec
mov
inc
jnp
std
stc
jo
int3
aam
call
cmp
popf
inc
add
inc
push
cmp
cmp
test
and
test
xor
rcll
sub
test
ret
inc
cmp
inc
inc
les
test
and
lods
add
enter
das
mov
xor
scas
les
icebp
nop
mov
aam
shrl
fs
cmp
cmp
mov
aam
lock
sub
mov
add
fildl
and
or
cmp
cmp
enter
testl
pop
sub
test
cmp
cmp
mov
sub
test
cmp
nop
fs
sub
test
cmp
popf
dec
add
push
dec
cmp
enter
decl
mov
scas
and
push
pushf
xor
fsubrs
test
xchg
xchg
xchg
add
enter
sub
lea
cmp
shl
add
test
imul
std
cltd
int3
mov
cmp
cmp
popf
dec
sbb
cmp
cmp
dec
cmp
popf
inc
cmp
aam
aaa
xchg
scas
sbb
cmp
enter
lcall
inc
sub
dec
mov
dec
mov
add
sub
int3
dec
pusha
loopne
les
mov
adc
lret
mov
mov
mov
mov
mov
mov
inc
les
cmp
cltd
pop
xchg
dec
sub
aam
mov
pop
dec
cmp
ds
ds
and
idivl
out
ds
cmp
dec
adc
xchg
xor
push
mov
out
push
xchg
xchg
sub
cmp
cmp
int3
dec
or
push
mov
movl
dec
mov
aaa
outsb
dec
or
inc
add
dec
mov
mov
aaa
outsb
dec
xorl
aam
or
adc
scas
les
cmp
enter
dec
mov
pop
scas
enter
ret
aam
lcall
les
andl
das
out
subl
stc
rol
add
into
stc
fld
les
testl
dec
mov
les
cmpl
dec
andl
cmp
dec
cmp
fdiv
add
dec
cmpl
cmpl
icebp
in
xchg
pop
pop
sahf
out
adc
testl
dec
cltd
sub
xchg
sub
xor
lret
dec
xchg
cmp
cmp
xor
shlb
cmp
mov
testl
lahf
or
cmp
addr16
int3
aam
add
xchg
dec
sub
int3
dec
mov
dec
mov
dec
mov
add
dec
pop
les
lret
stos
mov
mov
mov
mov
lret
mov
mov
mov
stos
mov
stos
xchg
mov
mov
mov
mov
mov
mov
dec
jb
les
inc
les
cmp
mov
pop
xchg
dec
sub
fmuls
xor
cmp
cltd
cmp
enter
dec
or
or
inc
and
push
pop
dec
cmp
ds
ds
and
idivl
out
ds
adc
dec
mov
dec
or
mov
xor
xchg
xchg
xchg
sub
cmp
cmp
enter
dec
mov
or
aam
xchg
enter
adc
sbb
sbb
mov
dec
mov
aaa
pusha
dec
or
mov
xor
mov
dec
mov
dec
mov
aaa
pusha
dec
mov
mov
dec
xchg
enter
dec
adc
xchg
xchg
sub
cmp
cmp
enter
das
fimuls
enter
dec
mov
dec
adc
popa
dec
push
inc
and
or
mov
dec
mov
pop
dec
cmp
aam
mov
dec
mov
cmpsl
inc
cmp
lret
jb
int3
dec
mov
dec
or
lret
jae
test
les
inc
mov
dec
mov
movsl
mov
or
dec
sub
fcoml
mov
out
inc
cmp
dec
cltd
int3
dec
xchg
stc
mov
dec
subl
lret
jae
pushf
das
mov
cltd
int3
add
subl
cmp
les
popf
popf
inc
add
dec
or
cmp
cltd
cmp
popf
das
into
testl
dec
subl
cmp
xchg
dec
cmpl
lds
inc
add
inc
add
aam
xorl
xor
movsb
mov
testl
cmp
or
mov
dec
mov
movsl
mov
lahf
or
int3
aam
jl
ret
pop
dec
cmp
rol
fildll
lret
dec
or
les
mov
dec
or
xchg
rcrb
enter
and
mov
aam
aad
push
mov
testl
xlat
inc
ds
mov
inc
sub
test
aam
int3
aam
testl
sbb
mov
mov
add
adc
dec
leave
aam
int3
aam
aad
test
dec
leave
aam
int3
aam
test
pop
dec
leave
aam
int3
aam
xchg
jle
test
les
fwait
mov
test
dec
leave
aam
int3
aam
mov
dec
dec
clc
loopne
inc
repnz
dec
leave
aam
int3
aam
jp
inc
cmp
lret
dec
xor
lret
inc
sbb
les
lret
inc
or
les
loopne
inc
xchg
dec
test
inc
cld
xchg
mov
dec
or
dec
leave
aam
int3
aam
jp
inc
cmp
mov
inc
sub
lret
inc
lahf
inc
sub
mov
mov
mov
mov
lret
dec
inc
cmp
mov
test
aam
int3
aam
popf
cmp
cmp
jp
inc
sub
jle
inc
les
aam
int3
aam
lds
in
les
ret
cmp
cmp
inc
cmp
lret
dec
sbb
les
pop
cmp
jnp
int3
les
mov
inc
and
sub
cmp
xor
out
dec
or
and
cmp
cmp
cmp
les
inc
ss
inc
and
cmp
cmp
clc
inc
and
and
cmp
lock
ss
inc
and
or
les
loope
and
xor
cmp
aam
les
roll
mov
inc
and
or
sub
cmp
xor
ret
lret
inc
nop
mov
out
mov
push
inc
and
cmp
cmp
rol
sub
inc
and
cmp
sub
inc
ss
inc
and
cmp
inc
or
mov
sub
out
sub
inc
cmp
lret
dec
mov
cmp
inc
cmp
lret
dec
outsl
les
test
inc
stc
cmp
cmp
cmp
cmp
inc
or
push
les
jl
cmp
les
test
aam
int3
aam
mov
jp
dec
add
addr16
int3
aam
xor
outsb
mov
jp
cmp
les
jp
cmp
les
les
les
sub
inc
sub
lret
inc
rol
les
les
les
leave
lret
inc
jb
cmp
test
aam
int3
aam
ja
lret
dec
js
clc
icebp
lret
dec
jo
lret
jp
jle
inc
iret
ss
sub
jnp
int3
les
mov
inc
and
sub
cmp
xor
ret
cmp
cmp
mov
inc
and
cmp
cmp
das
enter
cmp
cmp
insb
lds
in
les
ret
cmp
cmp
inc
and
inc
sub
mov
mov
inc
cmc
cmp
cmp
mov
inc
and
cmp
cmp
mov
and
and
cmp
test
ss
inc
and
or
les
cltd
inc
and
xor
cmp
aam
les
mov
mov
inc
and
or
sub
cmp
xor
repnz
cmp
les
sub
inc
and
xor
cmp
les
les
rolb
cmp
cmp
inc
or
push
les
ret
les
leave
aam
int3
aam
xchg
dec
lret
dec
call
cld
lret
dec
loopne
lret
jp
test
adc
and
mov
aam
int3
aam
cmp
lret
inc
mov
cmp
cmp
inc
mov
aam
les
inc
ss
inc
and
cmp
inc
or
mov
das
ret
cmp
cmp
mov
inc
and
or
inc
and
sub
cmp
int3
les
jle
inc
les
mov
inc
and
cmp
inc
or
mov
das
ret
cmp
cmp
mov
inc
and
or
les
inc
and
xor
cmp
aam
les
jle
inc
les
mov
inc
and
cmp
inc
or
mov
das
ret
cmp
cmp
mov
inc
and
cmp
cmp
mov
cmp
das
mov
and
sbb
cmp
ss
mov
cmp
inc
or
movsb
les
popf
inc
and
jnp
cmp
in
les
popl
cmp
cmp
inc
or
lods
les
stc
inc
and
aaa
cmp
inc
or
mov
les
jmp
and
aas
cmp
inc
or
mov
clc
std
mov
test
aam
int3
aam
cmp
les
lret
testl
cmp
les
dec
add
loope
rcl
imul
aam
imul
aam
imul
aam
push
aam
push
aam
cmp
mov
aam
adc
lds
int3
dec
rolb
ret
movb
dec
sub
inc
add
inc
and
mov
mov
xchg
cmp
popf
das
mov
scas
int3
fwait
dec
adc
incl
mov
jg
aam
aas
mov
scas
lds
xor
int3
aam
jge
cmp
inc
add
roll
das
testl
mov
inc
or
das
dec
or
sbb
enter
das
int
add
lret
out
add
aam
or
mov
dec
or
lahf
fwait
lcall
xchg
dec
sub
inc
or
int3
cltd
push
int3
les
cltd
cmp
sub
inc
mov
dec
mov
dec
xchg
rolb
dec
xchg
rcrb
xchg
dec
sub
dec
mov
dec
aad
aam
rorb
cltd
push
rol
add
pop
dec
test
pop
dec
cmp
int3
incl
rorb
push
int3
les
xchg
dec
sub
dec
mov
add
push
and
aam
or
rolb
roll
testl
test
inc
add
enter
add
ret
dec
or
out
add
dec
test
inc
add
leave
dec
les
mov
dec
aam
or
cmpsb
shl
pop
dec
cmp
rolb
ret
in
cmp
cmp
int3
cltd
push
int3
les
rol
push
add
or
in
dec
cmp
test
cwtl
mov
aam
cltd
int
cwtl
mov
aam
fs
aam
push
addr16
shl
mov
aam
shl
mov
aam
cld
mov
aam
leave
clc
mov
aam
roll
les
mov
aam
rorl
les
mov
mov
aam
rcll
les
pushf
mov
aam
or
into
scas
add
shr
int3
aam
pop
jl
mov
aam
pop
dec
cmp
dec
mov
inc
mov
cmp
rorb
add
push
mov
cltd
push
int3
les
xchg
dec
xor
mov
dec
lds
cmp
dec
sbb
ret
dec
or
aam
sbb
dec
lcall
pop
dec
cmp
int3
dec
lds
xchg
rolb
int
mov
dec
lds
pop
dec
cmp
mov
dec
xor
mov
dec
lds
xchg
int3
incl
mov
dec
mov
dec
aad
cmp
int3
les
xchg
dec
sub
int3
les
pop
dec
lds
mov
inc
mov
test
sub
jb
lret
jb
out
add
xchg
dec
sub
enter
int3
cmp
call
rcl
mov
aam
rcl
mov
aam
xchg
int3
inc
push
mov
xchg
dec
mov
dec
icebp
fmuls
fmull
lret
fmull
loope
mov
aam
dec
leave
int3
mov
aam
mov
dec
leave
in
int3
aam
mov
rorb
leave
loopne
int3
aam
shr
int3
aam
cltd
push
rol
dec
cmp
aam
or
cmp
cmpl
dec
cmpl
xchg
cmp
dec
mov
sar
les
int3
inc
add
or
dec
sub
aam
les
cmp
cmpl
dec
cmpl
xchg
cmp
dec
mov
and
les
int3
inc
add
or
dec
sub
enter
rclb
add
xor
dec
xor
xor
dec
or
add
xchg
dec
fmul
dec
fldl
dec
shl
lcall
sub
int3
les
scas
les
int3
aam
fnstcw
cmp
inc
add
enter
dec
or
sarl
cmp
testl
push
add
or
dec
add
ret
inc
loop
add
sarb
cmp
dec
add
dec
cmp
xor
mov
cmp
mov
inc
cmp
add
dec
add
add
cmp
sub
cmp
cmp
mov
add
lcall
xchg
dec
sub
int
dec
mov
xchg
inc
or
mov
dec
lds
aam
mov
xor
int3
aam
mov
cmp
dec
xor
xor
mov
dec
cmp
xchg
xchg
sub
aas
cmp
add
les
ret
inc
xor
fwait
dec
add
dec
cmp
int3
les
scas
les
int3
aam
jmp
add
lret
int3
dec
or
repnz
cmp
cmp
testl
lcall
xchg
dec
sub
int3
xchg
dec
xor
les
cmp
inc
cmp
mov
xchg
sub
cmp
cmp
mov
add
inc
loop
dec
add
dec
cmp
xor
repnz
dec
mov
mov
scas
les
int3
aam
imul
cmp
mov
dec
lret
dec
int3
dec
mov
dec
mov
das
testl
ret
dec
orb
dec
add
dec
cmp
enter
mov
dec
aad
cmp
xlat
dec
mov
dec
aad
or
rorb
das
aad
das
scas
dec
mov
sub
cmp
cmp
int3
cltd
push
int3
les
xchg
dec
sub
dec
xor
ret
cmp
les
jge
mov
aam
in
cmp
dec
add
mov
fadds
mov
dec
mov
out
or
rol
dec
aam
mov
mov
int3
les
push
int3
les
int3
pop
dec
test
inc
add
int3
dec
rorb
cmp
testb
cmp
int3
cmp
cmp
cmp
inc
add
cltd
push
int3
les
xchg
dec
sub
rol
shrl
ret
mov
cmp
cmp
inc
add
das
dec
or
dec
cmp
mov
aam
cld
test
mov
mov
dec
mov
cmp
aam
int3
aam
stc
cmp
cmp
into
cmp
les
cltd
pop
dec
cmp
xor
mov
dec
or
mov
inc
cmp
mov
inc
add
rcll
popf
xchg
dec
or
ret
in
cmp
dec
add
dec
cmp
xor
int
sub
cmp
cmp
movsl
xchg
dec
mov
nop
dec
or
inc
sub
mov
mov
int3
aam
fsubrl
cmp
inc
add
loope
mov
dec
or
sub
cmp
cmp
fisubrs
cmp
inc
add
leave
dec
lret
add
dec
and
aam
mov
das
testl
das
rolb
rol
lcall
xchg
dec
sub
add
dec
xor
mov
cmp
cld
or
dec
or
cmp
dec
add
dec
cmp
int3
notl
xchg
dec
xor
mov
cmp
incl
mov
testl
mov
xchg
xchg
dec
or
cmp
cmp
lcall
xchg
dec
sub
push
xchg
dec
cmp
mov
cmp
dec
ret
lret
inc
dec
cld
aam
inc
inc
les
int3
dec
lret
incb
fwait
mov
clc
loopne
cld
clc
clc
mov
clc
cli
mov
clc
jmp
mov
loopne
test
fdivr
hlt
mov
sar
inc
mov
clc
cmp
mov
aam
incl
lret
les
int3
dec
or
cmp
cmp
dec
int3
inc
or
ret
enter
jecxz
add
inc
mov
add
add
fwait
lcall
xchg
dec
sub
loopne
enter
testl
testl
add
mov
cmp
cmp
ret
cmp
les
mov
mov
sub
mov
cmp
dec
or
and
lret
dec
xchg
enter
cmpl
or
cmp
cmp
cmp
or
cmp
cmp
in
gs
testl
or
or
mov
cmp
add
dec
lret
cmp
sarl
mov
dec
xchg
int3
xor
xlat
add
xor
testl
sub
stos
cmp
inc
add
dec
lret
dec
mov
dec
push
iret
or
cltd
sbb
daa
mov
mov
ret
jmp
add
cmp
cmp
cmp
lcall
push
int3
les
xchg
dec
sub
xchg
dec
mov
cmp
test
dec
or
shrb
cmp
dec
add
dec
cmp
xor
mov
dec
int3
inc
or
test
xchg
dec
or
cmp
cmp
roll
les
sub
xor
cmp
int3
xchg
dec
or
cmp
dec
add
dec
cmp
int3
notl
xchg
dec
xor
mov
cmp
testl
mov
xchg
xchg
dec
or
add
dec
cmp
gs
int3
aam
les
lret
inc
inc
lret
jp
inc
sub
cmp
aam
int3
aam
cmp
mov
dec
leave
in
int3
aam
mov
cmp
les
cmp
add
and
inc
sub
mov
scas
popf
out
add
mov
out
add
mov
inc
sub
mov
scas
ret
scas
shrl
scas
das
int
shrb
xchg
das
scas
lds
xor
cmp
rclb
cmp
dec
or
int3
dec
mov
dec
mov
or
scas
lds
int3
sub
cmp
int3
or
dec
sub
mov
aam
les
int3
inc
add
fdivrp
test
sarb
rcl
int3
aam
or
ret
dec
cmp
cmp
ret
scas
lds
or
xchg
dec
sub
xchg
dec
mov
cmp
test
dec
or
shrb
cmp
dec
add
dec
cmp
xor
mov
int3
inc
pop
mov
inc
cli
les
cmp
cmp
jecxz
les
int3
aam
popa
xor
cmp
mov
add
dec
and
aam
pushf
shrb
testl
cmp
add
dec
cmp
cmp
mov
mov
negl
pushl
mov
cld
fidivl
int3
xchg
sub
cmp
cmp
notb
mov
aam
mov
cmp
incl
mov
notl
cld
fidivl
divb
or
sub
testl
cmp
cmp
cltd
push
rol
cmp
fcoms
mov
dec
lcall
cmp
add
les
cld
lcall
les
aam
clc
test
inc
add
clc
sahf
lret
inc
jl
std
cltd
cmp
das
int
call
cmp
cmp
aam
int3
aam
ret
incb
lret
inc
dec
lret
jp
inc
sub
inc
cmp
mov
dec
leave
rorb
and
mov
aam
lret
cmp
or
cmp
cmp
xchg
inc
mov
cmp
xor
cltd
xor
inc
les
mov
aam
add
lds
leave
rorb
mov
dec
subl
cmp
dec
subl
xor
cmp
std
stc
aam
int3
aam
int
dec
or
cmp
cmp
lcall
cmp
int
lds
sub
cmp
add
cmp
dec
or
mov
dec
lret
shrb
dec
add
mov
cmp
dec
cmpl
les
push
cmp
cmp
int
cmp
gs
int3
aam
cld
test
mov
aam
add
xchg
dec
sub
dec
mov
mov
cmp
cmp
dec
or
jne
cmp
dec
or
xchg
dec
sub
dec
mov
mov
cmp
cmp
dec
or
dec
cmp
cmp
int3
or
dec
sub
dec
mov
mov
cmp
cmp
dec
or
lods
cmp
cmp
int3
or
dec
sub
xchg
dec
mov
cmp
test
dec
or
shrb
cmp
dec
add
dec
cmp
xchg
dec
mov
cmp
test
dec
or
shrb
lcall
xchg
dec
sub
fcoms
int3
aam
or
mov
mov
addb
cmp
and
aam
icebp
aam
int3
aam
ret
mov
dec
mov
scas
lds
or
clc
hlt
mov
lret
jp
inc
sub
pop
adcb
aam
std
mov
mov
dec
mov
sub
cmp
xchg
cmp
xchg
sub
cmp
cmp
enter
mov
sub
cmp
dec
aam
mov
dec
aad
test
dec
test
dec
add
les
std
inc
add
xchg
clc
test
cli
lret
jp
inc
sub
scas
les
aam
sbb
dec
push
xchg
dec
cmpl
sbb
cmpl
dec
icebp
aam
int3
aam
ret
clc
test
dec
icebp
aam
int3
aam
test
mov
sub
xor
cmp
int3
das
cwtl
scas
lds
sub
add
xchg
cld
or
cmp
sub
cmp
dec
mov
sub
cmp
std
cmpl
and
cmp
mov
dec
subl
cmp
inc
add
das
int3
dec
mov
sub
cmp
dec
mov
dec
aad
test
dec
test
dec
add
pop
dec
cmp
aam
aam
int3
aam
les
cmp
inc
mov
cmp
lret
inc
inc
lret
jp
inc
add
inc
cmp
mov
cmp
inc
inc
jp
aam
in
ret
xlat
lods
fsubl
ret
enter
ret
shrl
cmp
cwtl
cmp
gs
int3
aam
jp
cmp
aam
int3
aam
sub
mov
mov
rorb
xchg
dec
xorl
xchg
sub
cmp
cmp
dec
xchg
rolb
das
ret
cmp
cmp
or
rorb
scas
lds
int3
sub
xor
cmp
int3
or
aam
jp
aam
jp
aam
jp
aam
jp
aam
jp
aam
jp
aam
jp
aam
cmp
mov
aam
jp
inc
sub
inc
sub
lret
inc
outsl
les
les
cmp
sub
aas
cmp
popf
dec
mov
inc
or
mov
aam
les
mov
clc
test
lret
dec
mov
scas
sub
aaa
cmp
sub
gs
int3
aam
rcl
int3
aam
sub
xor
lds
ret
sarl
aam
dec
xorl
repz
cmp
dec
mov
dec
aad
test
dec
test
dec
add
aam
int3
aam
or
aam
mov
or
int3
aam
rcl
int3
aam
sub
xor
lds
ret
sarl
aam
das
iret
cmp
aam
int3
aam
in
and
aam
mov
sub
xor
cmp
int3
or
dec
sub
mov
aam
les
aam
add
test
sahf
mov
cmp
aam
int3
aam
xchg
cmp
int3
testl
dec
xchg
rorb
int3
dec
cmpl
cmp
and
aam
sub
cmp
cmp
aam
fldt
dec
xorl
and
aam
mov
ljmp
in
cmp
cmp
sub
cmp
cmp
int3
or
dec
sub
in
inc
mov
cmp
mov
aam
pop
orl
mov
aam
lret
lret
jp
dec
adc
test
cmp
inc
ffree
les
les
decb
lret
inc
adc
mov
decb
lret
inc
add
std
cltd
ror
inc
or
les
adc
and
lret
jp
adcl
dec
stc
aam
int3
aam
cmp
mov
scas
call
test
cmp
xchg
xchg
dec
mov
inc
xor
cmp
mov
cmp
dec
test
dec
mov
dec
andl
inc
aas
cmp
dec
int3
dec
mov
mov
gs
int3
aam
cld
loopne
mov
lcall
int3
aam
xchg
dec
mov
popf
aas
cmp
dec
int3
dec
mov
mov
dec
mov
gs
int3
aam
fdivl
mov
aam
leave
scas
lds
cmp
call
mov
dec
or
or
dec
aam
mov
das
fwait
scas
lds
lret
dec
or
cli
std
cltd
shlb
mov
sub
xor
int3
das
sti
dec
adc
cmp
lds
xor
cmp
fdivr
cltd
shlb
inc
cld
loop
push
add
add
dec
int3
dec
or
int3
aam
pushf
rolb
cmp
cmp
dec
fcompl
cmp
mov
aam
sub
xchg
negl
cld
fmul
inc
aas
les
and
cmp
pop
dec
cmpl
cmp
cltd
cmp
scas
cltd
xchg
dec
xorl
inc
mov
cmp
jp
int3
les
xor
mov
mov
lods
mov
ret
mov
cmc
cmp
cmp
xchg
cmp
mov
inc
add
cli
gs
int3
aam
fdivl
andl
xchg
sub
cmp
xchg
dec
adcl
cmp
rorb
sub
cmp
xchg
dec
mov
fdivs
cmp
inc
mov
std
xchg
dec
adcl
rorb
fisubrl
xchg
xchg
dec
andl
cmp
enter
sbb
sub
xor
cmp
dec
mov
test
dec
xorl
dec
subl
les
int3
dec
xchg
sub
popf
dec
mov
iret
or
rcrb
scas
cltd
std
fdivl
xchg
scas
lds
sbb
lods
pushf
and
aam
mov
scas
in
xchg
sub
cmp
enter
pop
cmp
dec
adcl
mov
lds
cmp
dec
or
stc
xor
cmp
sub
cmp
mov
sub
ljmp
popf
lahf
or
dec
sub
aam
jecxz
mov
dec
cmpl
cmp
xorl
cmp
cmp
rorb
sub
cmp
int3
or
dec
sub
sub
cmp
int3
popf
popf
cltd
pop
dec
cmp
cmp
cmp
dec
or
dec
cmp
enter
sub
xchg
xchg
dec
mov
negl
dec
lret
rolb
lret
dec
enter
dec
leave
aam
int3
aam
std
lret
inc
daa
les
cmp
sub
sub
cmp
xchg
scas
in
subl
push
cmp
cmp
sub
xor
cmp
cmp
cld
lcall
les
mov
aam
cld
test
inc
pop
les
lahf
gs
int3
aam
les
mov
clc
test
subl
sub
in
les
xchg
sub
xor
cmp
aam
or
jmp
cmp
xchg
dec
or
xor
cmp
mov
aam
cld
test
mov
aam
lcall
mov
lods
cwtl
and
aam
or
xor
cmp
lcall
mov
int3
aam
cld
les
sub
xor
cmp
mov
aam
int3
aam
cld
test
mov
aam
fdivrp
pop
mov
sub
xchg
sub
xor
cmp
enter
sub
cmp
dec
add
cmp
aam
mov
dec
mov
mov
aam
int3
aam
les
rcl
int3
aam
test
int3
aam
les
rcl
int3
aam
fwait
mov
cmp
aam
int3
aam
xorl
xor
cmp
xor
les
gs
int3
aam
int3
inc
add
inc
or
test
mov
aam
int3
inc
or
les
mov
aam
lds
fmull
cmp
addr16
int3
aam
or
cmp
rorb
int3
sub
sub
cmp
int3
or
dec
sub
int3
aam
les
mov
dec
mov
scas
lds
sub
cmp
jmp
clc
sti
mov
cmp
aam
int3
aam
cmpl
cmp
sub
xor
cmp
shrb
into
cmp
cmp
popf
popf
dec
or
xchg
dec
sub
adc
les
cmp
aam
add
cmp
mov
aam
dec
fdivrl
rcl
int3
aam
lret
jp
inc
cmp
lret
dec
lret
lret
inc
xchg
inc
sub
lret
inc
ss
les
hlt
lret
inc
sbb
les
les
inc
xchg
sub
cmp
cmp
xor
inc
mov
lret
dec
add
les
jns
les
xchg
dec
mov
sub
cmp
mov
scas
dec
or
sub
cmp
dec
orl
mov
dec
orl
dec
ljmp
dec
xorl
dec
inc
pushf
cmp
cmp
dec
hlt
cmp
cmp
sub
cmp
sub
xor
cmp
sub
aaa
cmp
sub
gs
int3
aam
cld
test
mov
aam
mov
ret
or
sub
cmp
dec
inc
lods
cmp
cmp
popf
xchg
xchg
lods
nop
daa
ret
dec
mov
cmp
sub
sub
cmp
jbe
sub
cmp
cmp
cmp
aam
int3
aam
lds
inc
cmp
lret
dec
sti
cmp
cmp
mov
dec
ja
les
xchg
mov
inc
cmp
cmp
scas
les
xor
into
les
inc
xchg
sub
cmp
cmp
xor
dec
cmpl
shrb
addl
xor
in
int3
aam
test
les
dec
subl
sub
das
cmp
dec
subl
les
aam
popf
inc
add
ret
call
mov
addl
in
movsb
and
aam
inc
mov
sub
xor
cmp
enter
sbb
cmp
sub
lods
sbb
ret
inc
cld
cmp
cmp
sbb
sub
sub
cmp
mov
mov
cmp
cmp
popf
xchg
dec
mov
xor
cmp
sub
xor
xorb
mov
mov
dec
inc
movsb
cmp
cmp
popf
xchg
dec
mov
xor
cmp
sub
xor
xchg
cmp
cmp
popf
xchg
dec
mov
xor
cmp
sub
xor
test
cmp
xchg
sub
cmp
cmp
sub
xor
cmp
inc
sub
xor
cmp
ret
xchg
sub
ffree
les
add
sub
fnstcw
cmp
dec
sub
mov
aam
or
int3
lret
inc
jbe
std
mov
mov
inc
cld
pushf
mov
test
mov
aam
or
dec
mov
lods
in
and
aam
push
sub
cmp
xchg
lods
pop
and
aam
mov
sub
aaa
cmp
sub
inc
cld
popf
mov
cmp
int3
addr16
int3
aam
add
cmp
dec
mov
dec
cmpl
les
rcrb
les
xchg
lods
dec
and
aam
xorl
cmp
dec
mov
mov
inc
add
das
shrl
in
les
xchg
lods
mov
sbb
mov
dec
or
aam
mov
or
scas
lds
mov
sub
cmp
inc
add
dec
or
xchg
dec
sub
test
enter
testl
negl
xchg
dec
mov
dec
lcall
cmp
dec
fiaddl
shr
int3
aam
add
cld
lcall
les
cmp
mov
aam
int3
decb
lret
inc
cwtl
inc
cmp
std
cltd
and
rorl
das
lret
dec
or
xor
cmp
mov
aam
aam
jp
inc
sub
mov
test
mov
aam
dec
leave
enter
dec
adcl
cmp
in
sub
orl
ds
mov
test
mov
aam
in
and
aam
mov
sub
sub
cmp
inc
loopne,pt
faddl
aam
int3
aam
addl
cmp
sub
inc
ds
mov
dec
sbbl
cmp
shl
int3
aam
test
les
dec
subl
sub
sub
cmp
sub
xchg
cmp
loopne
int3
aam
popf
incl
mov
xchg
das
push
lods
mov
sbbl
dec
subl
xchg
sub
xor
enter
sub
jecxz
mov
cmpl
dec
xorl
dec
adcl
dec
cltd
adc
and
les
test
dec
subl
orl
rorb
enter
inc
std
int
int
andl
cmp
dec
andl
stos
sub
cmp
lcall
cmp
add
int3
aam
or
cmp
dec
sub
fs
les
mov
aam
jp
xchg
negl
jge
les
cmp
mov
in
sub
test
cmp
cltd
sub
aam
int3
aam
dec
mov
inc
ljmp
inc
sti
inc
ds
dec
fadd
les
cmc
mov
lret
dec
lret
lret
jp
cmp
lock
inc
daa
ret
mov
in
cmp
std
cltd
cmp
in
cmpl
mov
sub
xor
cmp
dec
test
inc
add
dec
mov
cmp
or
cmp
rcrb
sub
sub
cltd
enter
subl
xchg
dec
inc
movsb
cmp
cmp
xor
cmp
aam
dec
mov
mov
cmp
dec
mov
cmpxchg
dec
lds
xchg
sar
mov
scas
in
mov
sbb
cmp
scas
cli
dec
mov
push
sub
cmp
aam
pop
mov
add
lds
mov
aam
fdivl
dec
or
sub
inc
test
mov
aam
dec
xor
orl
les
dec
test
inc
add
dec
mov
aam
int3
aam
cmpxchg
inc
mov
dec
cmpl
cmp
scas
mov
cmp
dec
int3
dec
test
inc
add
dec
mov
sub
inc
loopne
cmp
dec
subl
or
cmp
sub
mov
mov
aam
lds
int3
sub
and
cmp
int3
sub
inc
ds
inc
pop
mov
mov
inc
ds
lret
dec
jae
les
fwait
lret
inc
imul
int3
test
mov
mov
aam
dec
sbb
cmp
mov
mov
cmpxchg
cmp
mov
inc
cmp
cmp
mov
lret
jp
cmp
lock
aam
ret
mov
sub
sub
lret
jp
cmp
lock
aam
ret
mov
cmp
lret
jp
cmp
lock
aam
ret
mov
xor
cmp
xor
les
dec
xchg
xor
or
cmp
cmp
sti
mov
inc
cmp
mov
inc
cmp
mov
inc
cmp
mov
scas
lds
xorl
cmp
xor
enter
aam
les
jno
jp
test
mov
aam
bswap
inc
sub
cmp
inc
cmp
xchg
lods
pusha
and
aam
add
nop
lret
dec
adc
les
xchg
lret
dec
dec
mov
inc
sub
lret
inc
push
cmp
cmp
lret
jp
cmp
lock
xor
ret
mov
outsl
cmp
gs
int3
aam
incb
mov
scas
lds
mov
dec
mov
call
push
cmp
cmp
jp
inc
sub
lret
dec
cltd
inc
cmp
lret
inc
nop
cmp
inc
lock
aam
mov
scas
cmp
gs
int3
aam
jp
cmp
aam
int3
aam
cmp
lret
inc
pop
les
cmc
mov
inc
add
inc
cmp
lret
inc
loopne
les
leave
aam
int3
aam
idivb
cmp
dec
subl
dec
mov
sti
das
cmp
scas
call
dec
orl
popf
dec
or
add
cmp
xchg
dec
mov
add
dec
sbbl
cmp
xchg
sub
xor
cmp
sub
cmp
sub
dec
sbbl
inc
xor
cmp
sub
cmp
sub
dec
addl
xchg
sub
sub
cmp
fwait
sub
cmp
sub
cmp
sub
sub
cmp
dec
xorl
les
xchg
cmp
xchg
dec
andl
xchg
dec
mov
fildll
cmp
dec
or
mov
or
mov
jp
cmp
lock
xor
ret
mov
lea
addl
cmp
dec
test
inc
add
dec
mov
mov
insl
rol
mov
scas
sub
dec
subl
mov
jecxz
cmp
sub
inc
cmp
cmp
les
xchg
mov
lret
dec
arpl
les
fwait
mov
lret
jp
test
test
mov
aam
jb
cmp
cmp
cmp
jp
cmp
lock
pushf
and
aam
idivb
cmp
lret
jp
cmp
lock
pushf
and
aam
mov
test
cmp
gs
int3
aam
cld
sti
mov
dec
inc
mov
cmp
xchg
sub
les
sub
sub
cmp
mov
aam
cld
test
mov
aam
xlat
dec
andl
les
sub
sub
cmp
mov
and
xor
or
xor
lret
jp
cmp
lock
xor
ret
imul
test
cmp
inc
xor
ret
cmp
cmp
divl
or
test
cmp
inc
mov
mov
aad
cmp
pushl
lret
inc
sub
cltd
cmp
inc
sarl
cmp
cmp
mov
sub
dec
cmp
mov
aam
sub
les
lret
inc
fcmovnb
les
loopne
inc
rol
les
dec
cmp
jl
inc
dec
movsb
cmp
cmp
xchg
dec
fxch
mov
aam
dec
icebp
rorb
dec
leave
rorb
xchg
dec
stc
int3
mov
aam
dec
leave
int3
mov
aam
dec
dec
movsb
cmp
cmp
mov
aam
leave
enter
inc
cld
sti
add
test
mov
aam
cmpl
scas
lds
das
leave
scas
lds
sub
les
dec
test
inc
add
dec
cmpl
in
mov
aam
inc
mov
dec
subl
cmp
xchg
dec
andl
stos
cmp
inc
add
xchg
dec
mov
sub
and
cmp
xor
mov
dec
lds
xchg
sar
mov
scas
in
mov
sub
sub
cmp
sub
sub
cmp
les
int3
aam
cld
les
mov
aam
or
stc
int3
mov
aam
icebp
rorb
mov
aam
dec
int3
dec
mov
dec
mov
lahf
or
scas
sub
and
cmp
int3
or
dec
sub
cld
gs
testl
aam
int3
aam
dec
fmul
jp
xchg
dec
mov
inc
sub
dec
mov
inc
cmp
mov
dec
leave
int3
mov
aam
rcl
int3
aam
xchg
sub
and
sub
inc
mov
les
cmp
mov
inc
aas
sti
mov
dec
sbbl
xchg
cmp
cmp
test
dec
subl
int3
test
mov
aam
cmp
mov
or
aam
int3
lret
push
add
and
fcmovnb
les
aam
int3
aam
jnp
and
aam
xlat
dec
adc
sbb
cmp
inc
rcl
int3
aam
das
loopne
leave
aam
int3
aam
add
ret
leave
dec
adc
sbb
cmp
pusha
les
aam
int3
aam
dec
sbbl
cmp
xor
in
int3
aam
test
les
dec
subl
sub
and
cmp
sub
xchg
cmp
loopne
int3
aam
popf
dec
mov
inc
add
iret
xchg
sub
and
cmp
lods
js
ret
mov
cmp
lods
mov
orl
dec
adcl
and
aam
mov
sub
and
cmp
adcl
xchg
dec
orl
cmp
inc
add
dec
or
iret
sub
mov
sub
and
cmp
incb
les
mov
dec
mov
add
or
rcl
int3
aam
andl
fisubrs
int3
aam
mov
sub
cmp
dec
int3
dec
test
dec
mov
dec
subl
mov
dec
leave
int3
mov
aam
std
int
int
andl
cmp
dec
mov
dec
adcl
mov
lcall
cmp
or
dec
sub
fcoml
xchg
negl
xchg
dec
cmpl
inc
mov
cmp
cmp
inc
add
xchg
dec
or
pop
cmp
jnp
and
aam
lcall
int3
aam
incb
mov
clc
test
cmp
xchg
dec
xorl
sub
aam
les
sub
cmp
sub
and
cmp
cmp
gs
int3
aam
clc
test
mov
aam
test
pop
mov
scas
das
ret
mov
scas
lds
sub
sbb
cmp
out
xchg
dec
subl
xchg
scas
lds
cmp
jmp
cmp
dec
or
adc
cmp
dec
or
leave
and
cmp
cmp
fwait
dec
add
cmp
mov
aam
sub
xchg
xchg
dec
or
sub
adc
ret
insl
aam
les
aam
int3
aam
jp
inc
mov
les
cmp
mov
cmp
aam
int3
aam
sub
lret
inc
pusha
les
nop
mov
mov
mov
mov
ret
subb
dec
xorl
sub
cmp
and
aam
sub
and
cmp
dec
test
inc
add
dec
mov
lods
int3
and
aam
enter
ret
shrl
cmp
repnz
cmp
inc
mov
xor
mov
dec
cmpl
dec
cmpl
cmp
dec
mov
add
cmp
dec
mov
or
xor
shrb
dec
mov
cmp
aam
int3
aam
sub
mov
or
dec
cmp
mov
aam
cld
sti
mov
test
mov
scas
lds
mov
sub
cmp
popf
popf
das
out
les
addr16
int3
aam
fidivs
cmp
das
enter
lds
mov
sub
aas
cmp
inc
add
dec
or
xchg
dec
sub
aam
les
sbb
cmp
rclb
cmp
gs
int3
aam
cld
les
test
mov
aam
add
jmp
inc
sub
mov
dec
mov
scas
sub
sbb
cmp
int3
or
xchg
sub
cmp
cmp
sub
and
lods
in
and
aam
mov
jo
cmp
das
into
scas
lds
cmp
add
cmp
lods
lock
aam
mov
pop
daa
cmp
dec
mov
or
cmp
rorb
sub
test
xchg
xchg
idivl
jp
les
cmp
mov
dec
mov
cmp
dec
mov
dec
sbb
add
std
std
mov
xor
les
sub
dec
mov
cmp
les
scas
sub
pop
cmp
dec
or
les
cmp
les
mov
sub
and
cmp
enter
aas
cmp
les
or
shrb
cltd
cmp
cmp
inc
les
fadd
les
aam
lret
inc
pop
rol
testl
int3
lret
push
add
cmpl
ret
loope
rol
das
out
inc
add
lret
dec
pop
loope
ffreep
incl
les
cmp
dec
pop
mov
loope
rol
das
out
inc
add
loope
ffreep
stc
aad
lret
inc
cli
rol
stc
lret
inc
test
les
in
int3
aam
or
sub
lds
xor
lds
xchg
sub
cmp
cmp
xchg
sub
and
cmp
dec
mov
dec
test
inc
add
dec
andl
xchg
sub
cmp
cmp
sub
adc
cmp
aam
les
cmp
pop
inc
push
mov
loope
rol
das
out
inc
add
inc
cmp
mov
les
jo
sub
das
cmp
popf
dec
mov
xchg
dec
cmpl
add
dec
or
test
dec
mov
sub
and
cmp
jo
sub
and
aam
les
int3
aam
out
lods
test
aam
cmpl
dec
addl
mov
add
dec
or
das
daa
cmp
xchg
dec
mov
sub
sbb
cmp
mov
sub
and
jo
sub
and
cmp
mov
aam
dec
or
sub
test
or
sub
add
ret
inc
add
inc
xchg
ret
dec
sbbl
xchg
scas
in
addl
xchg
dec
orl
ss
inc
add
dec
or
nop
daa
cmp
dec
or
jne
cmp
dec
int3
dec
mov
dec
mov
dec
mov
in
add
mov
in
xor
mov
in
sbb
cmp
js
mov
dec
mov
dec
pop
call
mov
loope
rol
das
out
incl
lret
inc
inc
call
mov
dec
pop
loope
ret
stc
mov
dec
orl
cmp
dec
int3
dec
test
dec
addl
mov
push
sub
dec
test
dec
orl
mov
sub
sub
enter
adc
stc
mov
dec
orl
cmp
popf
dec
int3
dec
test
dec
xorl
sub
int3
dec
test
dec
mov
cmpl
addb
les
stc
mov
mov
gs
int3
aam
and
clc
movsb
dec
orl
into
sbb
cmp
rorb
dec
sbbl
cmp
popf
xchg
dec
mov
sub
adc
cmp
mov
aam
or
sub
lds
xor
lds
xchg
dec
orl
xchg
sub
sbb
cmp
sbb
cmp
dec
mov
dec
test
dec
andl
xchg
sub
sbb
cmp
sub
adc
cmp
enter
mov
inc
mov
xor
in
int3
aam
aam
les
push
xchg
and
enter
sbb
sbb
cmp
iret
dec
int3
dec
test
dec
mov
dec
andl
mov
subl
cmp
xchg
dec
andl
aam
sub
and
rclb
sbb
cmp
shl
int3
aam
aam
les
dec
or
and
cld
ret
idivl
xchg
scas
int3
jge
mov
aam
popa
pop
cmp
incl
mov
dec
cld
add
cmp
cmp
dec
cmp
subl
cmp
popf
popf
dec
int3
dec
test
dec
mov
dec
adcl
inc
xor
les
shl
aam
les
lret
inc
adc
xor
inc
data16
les
loope
ret
stc
mov
scas
call
dec
subl
xchg
scas
call
dec
addl
xchg
scas
call
dec
cmpl
in
sub
aam
sub
and
cmp
enter
push
or
int
cmp
dec
or
pop
and
cmp
sub
sbb
cmp
jmp
dec
pop
loope
ret
stc
mov
scas
call
dec
subl
lods
fsubrs
aam
sub
and
cmp
enter
movsl
and
cmp
sbb
cmp
leave
lods
aam
ret
mov
sub
sbb
cmp
adcl
cwtl
and
cmp
sbb
cmp
xchg
dec
sbbl
cmp
xchg
sub
sbb
cmp
aam
or
into
and
cmp
sbb
cmp
mov
dec
pop
loope
ret
stc
mov
mov
dec
adcl
sub
pop
cmp
gs
int3
aam
sub
xor
lds
push
xchg
mov
sub
daa
cmp
popf
xchg
dec
mov
sub
pop
cmp
das
lret
sub
daa
cmp
popf
xchg
dec
mov
sub
push
cmp
gs
int3
aam
sub
xor
mov
cmp
inc
mov
les
sbb
adc
ret
dec
andl
dec
mov
cmp
sub
pop
cmp
dec
cmpl
les
lret
inc
push
les
out
inc
les
sbbl
sub
and
cmp
cmp
inc
add
mov
pop
out
inc
les
add
cmpsb
dec
pop
out
inc
les
clc
sub
aam
mov
dec
adcl
cmp
xchg
scas
mov
dec
mov
sub
sbb
cmp
sub
sbb
cmp
sub
sbb
cmp
inc
add
fimuls
out
call
sbb
sbb
cmp
inc
inc
add
iret
dec
pop
out
jmp
das
ret
dec
pop
loope
movsb
les
sbb
add
inc
add
aam
les
mov
loope
rol
das
out
inc
add
loopne
cmpl
ffreep
out
adc
push
fists
xchg
sbb
add
push
mov
lods
sub
ret
pusha
les
cmp
dec
pop
mov
out
jmp
das
shl
movsb
les
sbb
add
inc
add
pop
mov
loope
rol
das
out
inc
add
loope
cmpl
ffreep
les
aad
les
push
fists
xchg
sbb
add
push
mov
lods
jl
ret
xchg
inc
mov
mov
out
jmp
das
shl
movsb
les
sbb
add
inc
add
pop
mov
loope
rol
das
out
inc
add
jmp
pop
inc
es
ffreep
les
les
push
fists
xchg
sbb
add
push
mov
lods
dec
and
aam
mov
sub
pop
cmp
das
roll
cmp
mov
dec
pop
out
stc
les
cmp
cmp
cmp
mov
dec
pop
out
jmp
das
ret
dec
pop
loope
movsb
les
sbb
add
inc
add
pop
mov
loope
rol
das
out
inc
add
dec
mov
dec
pop
loope
ffreep
notl
stc
aad
lret
push
push
xor
mov
dec
mov
notl
stc
lret
push
push
xor
mov
dec
sbbl
lods
cld
sub
aam
sub
sbb
cmp
enter
cmp
dec
sbbl
xchg
sub
fadd
les
cmp
dec
mov
fadd
notl
jp
int3
les
std
xchg
cmp
add
shl
movsb
les
sbb
add
incl
lret
inc
xchg
mov
gs
int3
aam
sub
xor
stc
dec
pop
std
xchg
cmp
add
shl
movsb
les
sbb
add
incl
mov
std
xchg
cmp
jmp
xor
add
das
testl
dec
sbbl
lods
inc
and
aam
sub
sbb
cmp
dec
mov
dec
mov
inc
add
dec
mov
xchg
cmp
mov
dec
pop
loope
ret
stc
lret
inc
outsb
les
mov
dec
pop
out
out
add
ret
dec
pop
loope
movsb
les
sbb
add
inc
add
pop
mov
loope
rol
das
shl
aam
les
lret
inc
pop
les
inc
push
mov
out
out
add
shl
movsb
les
sbb
add
inc
add
lret
loope
ret
stc
mov
dec
pop
inc
push
mov
out
out
add
shl
movsb
les
sbb
add
inc
add
lret
loope
ret
stc
mov
dec
pop
inc
push
mov
out
out
add
shl
movsb
les
sbb
add
inc
add
ljmp
stc
rol
mov
dec
sbbl
lods
mov
ret
sub
pop
cmp
dec
int3
dec
mov
dec
mov
inc
add
dec
mov
add
insb
ss
les
cmp
dec
pop
mov
out
out
add
shl
movsb
les
sbb
add
inc
add
hlt
inc
mov
mov
loopne
notl
clc
test
push
push
dec
push
das
int
add
add
sbb
add
inc
add
lret
sbb
sub
inc
mov
mov
out
out
add
shl
movsb
les
sbb
add
inc
add
hlt
inc
mov
mov
loopne
notl
clc
inc
lret
push
push
dec
push
das
enter
aam
les
sbb
add
inc
add
iret
dec
sbbl
ret
xchg
cmp
dec
pop
mov
out
out
add
shl
movsb
les
sbb
add
inc
add
cli
inc
mov
scas
les
pop
add
lret
push
add
int
pop
out
xor
add
inc
add
in
sbbl
ret
adcl
cmp
dec
mov
dec
mov
inc
add
dec
mov
mov
mov
out
out
add
shl
movsb
les
sbb
add
inc
add
pop
mov
loope
rol
das
shl
aam
les
mov
xor
in
int3
aam
aam
les
xchg
dec
adcl
xchg
sub
push
cmp
dec
int3
dec
mov
dec
mov
inc
add
dec
mov
pop
sbb
and
aam
sub
push
cmp
dec
int3
dec
mov
dec
mov
inc
add
dec
or
aam
mov
fwait
lcall
dec
sub
loopne
xchg
jp
in
les
int3
aam
hlt
inc
loope
mov
aam
sbb
cmp
sub
rol
int
in
int3
aam
popf
dec
mov
dec
or
xor
mov
sub
gs
int3
aam
int3
inc
cmp
test
mov
aam
int3
mov
cld
mov
mov
dec
subl
cmp
gs
int3
aam
das
ret
aam
int3
aam
cld
les
xorl
cmp
dec
mov
dec
cltd
cmp
add
popf
inc
xor
mov
mov
dec
cmpl
cmp
dec
aas
add
sbb
leave
dec
or
shrb
aam
int3
aam
les
lret
inc
pop
clc
test
inc
push
les
sub
inc
mov
inc
inc
les
mov
aam
mov
dec
subl
xchg
dec
mov
add
in
mov
aam
sub
adc
cmp
dec
pushf
shlb
int3
aam
cld
test
xor
cmp
mov
and
popf
dec
int3
dec
mov
dec
test
dec
xorl
andl
das
iret
dec
xorl
xchg
dec
andl
aam
dec
mov
sub
sbb
cmp
sub
adc
cmp
rorb
cltd
cmp
mov
inc
mov
inc
xor
mov
dec
cltd
cmp
les
inc
cmp
cltd
cmp
xor
inc
fnstcw
cmp
jge
aam
les
lret
inc
aam
cmp
gs
int3
aam
les
mov
clc
test
mov
rcl
int3
aam
leave
in
int3
aam
in
inc
mov
inc
push
mov
inc
mov
xor
les
cmp
sub
mov
popf
sub
dec
xorl
sub
cmp
popf
popf
das
lret
mov
scas
lds
int3
sub
or
cmp
int3
fwait
lcall
dec
sub
pop
les
mov
xchg
dec
lcall
cmp
dec
fimull
jnp
and
aam
sub
les
mov
aam
incb
lret
inc
es
clc
test
inc
push
cld
fldlg2
mov
aam
enter
mov
aam
inc
mov
std
fidivl
mov
cmp
xchg
xchg
sub
adc
cmp
enter
sub
push
cmp
cld
cltd
iret
mov
xchg
dec
orl
cmp
inc
add
xchg
dec
or
push
cmp
dec
cltd
iret
dec
leave
aam
int3
aam
std
sti
lret
inc
mov
les
int3
aam
jp
inc
sub
lret
inc
out
mov
inc
and
les
fidivs
inc
sbb
les
int3
xchg
mov
dec
inc
mov
dec
inc
lods
cmp
cmp
popf
sub
dec
addl
xchg
xchg
dec
adcl
aam
int3
aam
pop
sub
cmp
enter
sub
cmp
dec
or
mov
cmp
xchg
dec
or
or
iret
lds
dec
test
inc
cld
fwait
mov
inc
mov
addr16
int3
aam
dec
xorl
xchg
sub
and
cmp
enter
lret
cmp
cmp
gs
int3
aam
cld
test
inc
outsb
les
rcl
int3
aam
pop
les
scas
jecxz
adcl
sub
cmp
cmp
xchg
sub
adc
cmp
aam
or
fwait
adc
cmp
mov
mov
aam
mov
scas
adc
cmp
pusha
and
aam
sub
adc
cmp
enter
sub
or
int3
mov
aam
std
int
sti
dec
cmpl
cmp
lock
sbbl
mov
aam
xorl
xchg
xchg
dec
subl
pop
das
cmp
inc
add
dec
or
xchg
pop
cmp
xchg
dec
or
or
ror
lret
cmp
cmp
mov
aam
incb
mov
clc
test
ret
mov
scas
lds
sub
or
cmp
out
xchg
dec
subl
xchg
scas
lds
xor
out
cmp
dec
or
or
cmp
dec
or
lds
cmp
xchg
dec
or
or
cmp
or
dec
sub
mov
aam
int3
inc
sub
inc
or
enter
mov
sub
adc
cmp
enter
or
mov
mov
mov
dec
mov
scas
sub
cmp
and
lret
jp
inc
das
repnz
mov
aam
aas
in
mov
dec
int3
inc
or
sbb
inc
aas
shlb
int3
aam
in
aas
ret
das
fnstsw
mov
scas
lds
mov
sub
adc
cmp
enter
pop
mov
mov
inc
aas
cmp
scas
sub
cmp
int3
sub
inc
mov
xor
les
cmp
ret
cmpl
inc
and
dec
cmpl
les
cmp
dec
andl
xchg
sub
adc
cmp
dec
test
dec
cmpl
aam
add
inc
cld
les
cmp
mov
mov
dec
andl
sub
cmp
cmp
xchg
sub
adc
cmp
aam
or
adc
dec
adcl
adc
cmp
enter
test
dec
cmpl
aam
les
cmp
add
inc
push
clc
test
inc
inc
les
mov
aam
rcl
int3
aam
and
clc
movsb
dec
adcl
or
int3
dec
test
dec
mov
ror
inc
les
mov
aam
sub
adc
lds
xchg
dec
adcl
sub
sub
cmp
xchg
sub
pop
cmp
inc
add
dec
or
sti
adc
dec
test
dec
mov
sub
or
dec
mov
jns
cmp
das
popa
scas
sub
dec
cmpl
int3
sub
pop
cmp
inc
add
sub
dec
adcl
cmp
sub
add
cmp
mov
aam
sub
adc
lds
xchg
dec
adcl
sub
or
cmp
adc
cmp
dec
test
dec
mov
dec
adcl
cmp
sub
add
cmp
pop
std
fidivl
adcl
dec
sbbl
push
cmp
inc
add
dec
or
out
cmp
dec
int3
dec
test
dec
mov
int3
jge
mov
aam
lods
add
cmp
pop
mov
add
cmp
cmp
dec
fmull
das
divl
dec
subl
cmp
popf
popf
scas
in
dec
adcl
sub
adc
cmp
xchg
sub
push
cmp
inc
add
dec
or
push
push
cmp
xchg
dec
mov
push
or
cmp
mov
aam
and
clc
movsb
mov
aas
mov
dec
xorl
bound
cmp
gs
int3
aam
sub
xor
lds
adc
mov
sub
adc
cmp
sub
or
cmp
lret
sub
adc
cmp
sub
add
cmp
aaa
mov
dec
cmpl
mov
or
sub
shrb
scas
dec
mov
sub
or
cmp
int3
fwait
lcall
dec
sub
nop
gs
int3
aam
les
cmp
in
and
idivl
dec
mov
les
lret
inc
ljmp
ljmp
xchg
dec
adc
xchg
sub
adc
cmp
and
aam
or
dec
int3
dec
mov
rol
dec
leave
aam
int3
aam
clc
test
pop
push
in
xor
jp
scas
in
mov
out
inc
push
shr
push
in
sub
mov
inc
sub
lret
inc
pop
les
lret
inc
out
gs
int3
aam
sub
adc
jp
les
cmp
inc
add
inc
mov
sub
les
adc
sub
adc
sub
adc
dec
test
dec
mov
dec
xorl
aam
sub
adc
lds
mov
add
inc
mov
and
xchg
xchg
dec
cmpl
cmp
sub
adc
dec
test
dec
mov
dec
subl
int3
aam
or
sub
lds
xor
lds
out
pop
cmp
inc
add
inc
mov
sub
xchg
dec
subl
sub
or
cmp
rcl
int3
aam
aam
int3
aam
cld
loopne
fidivrl
mov
dec
cmpl
xchg
dec
xorl
cmp
dec
mov
inc
add
inc
or
aam
int3
aam
clc
test
pop
push
lret
jp
mov
out
inc
push
shr
push
sub
dec
or
cmp
dec
cmp
cmp
mov
test
aam
int3
aam
aas
fcmovne
inc
dec
les
mov
dec
mov
sub
push
cmp
dec
xorl
xchg
dec
mov
sub
or
cmp
dec
test
divl
dec
mov
dec
cmpl
dec
subl
xchg
dec
mov
sub
adc
cmp
sub
or
cmp
dec
test
dec
mov
dec
cmpl
dec
subl
xchg
dec
mov
sub
or
cmp
sub
or
cmp
dec
test
dec
mov
dec
cmpl
jne
std
mov
mov
scas
sub
inc
mov
dec
xorl
lods
and
ret
sub
or
cmp
dec
test
dec
cmpl
cld
les
xor
push
xorl
cmp
or
cmp
iret
scas
lds
inc
add
dec
int3
dec
test
dec
mov
dec
cmpl
int3
aam
cld
les
xchg
sub
xor
cmp
sub
push
cmp
gs
int3
aam
les
mov
scas
lds
xor
or
cmp
lret
aam
int3
aam
test
inc
nop
cmp
cmp
mov
aam
sub
adc
lds
mov
inc
and
clc
enter
mov
lret
inc
icebp
cmp
cmp
xor
xorl
cmp
or
cmp
dec
test
dec
mov
dec
cmpl
clc
enter
subl
cmp
sub
add
mov
dec
xorl
lods
mov
aam
sub
or
cmp
dec
test
inc
add
dec
mov
dec
cmpl
dec
xorl
lods
subb
xchg
sub
or
cmp
dec
test
inc
add
dec
mov
dec
cmpl
std
cltd
fdivl
std
fdivl
inc
adc
std
fnsave
push
jo
xchg
dec
cmpl
cmp
inc
add
dec
or
decb
cmp
dec
or
push
cmp
in
xor
int3
les
push
dec
mov
dec
cmpl
std
fdivl
push
or
cmp
enter
xor
push
cmp
dec
mov
or
les
in
les
int3
dec
xchg
xor
sub
std
mov
or
xor
mov
dec
mov
std
std
mov
xchg
cmp
scas
in
xchg
dec
xorl
or
cmp
enter
popa
or
cmp
sub
cmp
in
scas
lds
mov
sub
or
cmp
enter
adc
scas
lds
int3
sub
pop
cmp
dec
or
pop
dec
cmp
fmull
cmp
les
cmp
xchg
cmp
or
push
dec
rcl
mov
aam
push
mov
inc
sti
mov
dec
xchg
clc
test
mov
aam
dec
xorl
cmp
sub
aam
sub
or
cmp
aam
ljmp
sub
les
popf
popf
dec
int3
dec
test
clc
mov
rorb
mov
aam
subl
cmp
sar
mov
testl
mov
aam
aam
les
mov
aam
inc
mov
dec
mov
cmp
rorb
cmp
cmp
cmp
mov
aam
add
in
dec
mov
or
cmp
test
mov
aam
add
inc
and
xchg
cmp
xor
int3
aam
fmull
inc
add
cli
cmp
fmuls
cmp
sub
pop
cmp
fmull
das
roll
mov
test
das
lds
das
rorb
dec
int3
inc
or
dec
fmull
dec
cmp
gs
int3
aam
les
pop
lret
inc
dec
clc
repnz
sar
mov
cmp
sub
add
cmp
enter
std
fdivl
int
add
mov
xchg
dec
mov
add
cmp
fidivl
cmp
sub
cmp
dec
cmpl
mov
cmp
popf
popf
dec
or
les
cmpl
aam
sub
cmp
inc
mov
add
dec
cmpl
jp
cmp
inc
add
das
push
scas
lds
cmp
lret
cmp
mov
dec
mov
xlat
or
enter
int
dec
mov
inc
add
cmp
into
scas
in
mov
sub
cmp
mov
mov
or
cmp
rcrb
cmp
cmp
cmp
cmp
dec
or
pop
dec
cmp
cmp
cmp
cmp
dec
or
pop
scas
mov
aam
aad
cmp
dec
mov
cmp
mov
shrl
cmp
popf
inc
add
xor
shrl
cmp
popf
dec
mov
dec
stc
xor
int3
aam
sbb
aam
icebp
les
cmp
int3
aam
icebp
cmp
sbb
aam
mov
cmp
sub
jnp
cmp
dec
sub
cmp
cmp
and
mov
aam
cwtl
jae
cmp
cmpl
sub
les
and
mov
cmp
scas
shrl
dec
cmp
mov
aam
les
loopne
xchg
xchg
inc
add
inc
cmpsb
mov
mov
aam
mov
cmp
les
cmp
mov
dec
add
cmp
mov
cmpl
inc
cmc
mov
inc
sub
inc
cmp
lret
inc
aam
lret
jb
lods
xor
aam
loopne
xchg
xor
aam
cmp
ret
and
les
sbb
les
pop
lods
and
aam
or
sbb
aam
jnp
les
mov
inc
or
lret
dec
add
cmp
lret
dec
jne
les
pushf
lret
inc
pop
inc
cmp
lret
inc
gs
int3
aam
les
rcl
int3
aam
cmpl
cmp
lret
dec
push
les
mov
dec
inc
les
cmpl
mov
inc
cmp
lret
inc
mov
les
mov
dec
andl
cmp
xchg
lods
adc
aam
mov
sub
or
shrb
cmp
aam
int3
aam
lds
xor
add
cmp
lods
or
aam
fadd
les
or
mov
cmpl
dec
xor
les
xor
les
sub
les
daa
les
mov
dec
or
les
mov
dec
jp
les
mov
inc
push
les
mov
mov
inc
add
inc
cmp
lret
inc
les
sub
leave
aam
int3
aam
sub
and
rcrb
dec
xchg
cmp
or
les
int3
dec
int3
dec
xchg
shrb
push
mov
or
cmp
or
xchg
rorb
dec
xchg
xor
aas
cmp
inc
std
xchg
dec
subl
xchg
dec
andl
int
xor
sub
cmp
cmp
aam
mov
mov
lods
mov
ret
mov
sub
add
cmp
and
int3
dec
int3
dec
mov
lods
pusha
sub
aam
xlat
lods
pop
sub
aam
enter
ret
shrl
xor
add
cmp
testb
daa
das
out
sbbl
cmp
mov
sub
add
cmp
mov
sub
add
cmp
cmp
inc
mov
cmp
dec
add
xchg
out
add
mov
out
add
mov
inc
sub
mov
lret
jb
cmp
xorl
int3
out
add
mov
dec
xorl
ret
sbbl
xor
dec
andl
xor
dec
subl
cmp
dec
int3
dec
test
inc
add
dec
mov
dec
cmpl
les
sbb
add
cmp
enter
xor
pop
cmp
dec
mov
dec
or
cmp
mov
das
movsl
std
int3
mov
xor
lds
ret
mov
sub
pop
cmp
xor
mov
lods
test
ret
mov
sub
add
cmp
xor
mov
lods
movsb
sub
aam
mov
sub
pop
cmp
dec
subl
xchg
cmp
cmp
das
leave
cmp
mov
sub
add
cmp
enter
fwait
lcall
aam
ss
ss
ss
ss
xor
aam
vshufpd
mov
dec
sub
fmull
aam
int3
aam
jp
xchg
negl
jge
les
cmp
mov
out
pop
xchg
dec
cltd
cmp
inc
cmp
sub
mov
inc
sub
dec
mov
mov
mov
int3
sub
cmp
cmp
les
mov
jno
cmp
std
fidivl
mov
daa
pop
cmp
dec
ret
sarb
aam
int3
aam
xorl
cmpl
or
dec
mov
sub
aas
cmp
sub
dec
xchg
clc
loopne
sar
pop
lret
inc
inc
les
int3
scas
sub
js
cmp
xchg
int3
aam
jp
out
pop
mov
inc
sub
mov
mov
in
cmp
xchg
cmp
xchg
aam
cltd
cmp
pop
aaa
cmp
xchg
cmp
cmp
inc
add
das
stc
scas
lds
mov
xchg
mov
dec
rcl
mov
aam
or
cmp
int3
dec
rcl
mov
aam
shlb
cmp
cmp
mov
sub
add
cmp
enter
lcall
dec
sub
fdivrl
mov
dec
mov
pop
jg
cmp
mov
aam
int3
testl
les
mov
inc
cmp
cmpl
dec
cmp
cmp
rcl
int3
aam
cmpl
lods
in
and
aam
sarb
cmp
cmpsl
dec
cmpl
aam
mov
sub
add
cmp
mov
rcl
int3
aam
mov
cmp
dec
xorl
subl
cmp
dec
mov
test
dec
cmpl
cmp
cmp
inc
add
das
aad
cmpl
int3
sub
add
cmp
enter
or
dec
sub
fcoml
jge
mov
aam
leave
jae
cmp
mov
inc
in
add
cmp
cmp
dec
xor
divl
xchg
cmp
cmp
dec
cmpl
cmp
enter
dec
xorl
sub
dec
mov
test
or
push
add
or
jae
cmp
int3
lcall
xchg
dec
nop
loopne
dec
and
dec
mov
fcoml
lods
test
rcl
cmp
les
cmp
aam
add
loopne
mov
les
loopne
dec
pushf
int3
dec
mov
call
enter
mov
dec
nop
loopne
inc
cmp
ljmp
aam
iret
dec
mov
inc
mov
lods
les
int3
sub
ret
les
les
int3
sub
ret
les
je
dec
rol
les
fcompl
mov
shlb
rol
les
les
int3
dec
mov
testl
xchg
dec
lods
fdivrl
mov
cmp
cli
cmp
cmp
enter
loopne
dec
nop
loopne
dec
jl
les
xchg
dec
mov
int3
dec
in
cmp
cmp
cmp
inc
add
cltd
push
rol
xchg
xchg
xchg
dec
testl
xor
cmp
adc
pop
dec
cs
xor
sub
ret
testl
push
idivl
cmp
xchg
dec
sub
scas
les
sub
faddp
les
xchg
dec
test
int3
xchg
xchg
cmp
cmp
cmp
enter
les
xchg
xchg
idivl
dec
jae
ret
int3
aam
repnz
cmp
inc
add
popf
dec
ret
in
mov
fwait
lcall
dec
or
aam
pop
dec
cmp
int3
addr16
aam
pop
scas
aam
mov
cmpl
les
mov
cmp
fs
andl
sub
dec
les
and
or
add
push
add
mov
rol
les
int3
scas
int3
cmp
mov
mov
cmp
cmp
cmp
and
cmpl
xchg
dec
sub
rclb
cmp
inc
mov
lods
mov
aam
dec
sbb
inc
dec
les
shll
aam
cmp
cmp
inc
out
dec
icebp
push
fs
pushf
sub
adc
lret
inc
rol
les
add
loopne
sub
lods
mov
aam
adc
add
loopne
sub
test
int3
aam
adc
add
loopne
sub
mov
int3
aam
adc
popf
addr16
add
shrb
cmp
xchg
sub
cmp
popf
addr16
int3
aam
mov
int3
aam
pop
mov
std
fnstcw
xchg
sub
cmp
cmp
mov
xor
aam
cmp
popf
popf
dec
cmp
xor
in
cmp
inc
add
fisttpll
cmp
scas
enter
xchg
scas
lds
ret
xor
mov
inc
mov
in
das
std
gs
int3
aam
pop
mov
xchg
sub
cmp
popf
inc
add
loope
adc
cmpl
gs
int3
aam
pop
mov
xchg
sub
cmp
popf
inc
add
int3
cmp
cmpl
int3
aam
pop
cmp
popf
inc
add
aam
mov
cmp
cmp
testl
dec
cmp
int3
xchg
divl
decl
mov
mov
mov
gs
in
gs
leave
push
fildll
sarb
cmp
add
rol
les
cmp
inc
add
inc
or
lcall
sub
aam
mov
dec
mov
and
cmp
dec
xorl
lds
xchg
scas
sarb
int3
sub
push
enter
inc
or
les
int3
lret
jae
mov
rolb
mov
dec
mov
movsl
mov
or
dec
sub
or
int3
aam
mov
dec
or
ret
aam
jae
test
rcrb
int3
sub
cmp
cmp
cmp
aam
mov
dec
mov
movsl
idivl
cmp
mov
cmp
cmp
fs
mov
dec
mov
movsl
mov
or
dec
sub
ret
aam
add
cmp
mov
aam
dec
ret
xchg
idivl
divl
cmp
mov
xchg
xchg
xchg
xchg
cmp
inc
add
int3
dec
stc
mov
jmp
rcll
cmp
mov
scas
pushf
addr16
shll
int3
aam
cmp
lret
inc
jp
incl
lret
inc
jb
incl
mov
std
mov
mov
dec
or
rorb
xchg
xchg
cmp
cmp
dec
or
mov
or
pop
les
push
pushf
xor
std
dec
or
stc
rol
mov
sub
rol
dec
cmp
cmp
or
les
int3
das
ficoms
popf
incl
mov
add
sbb
les
int3
dec
cmp
idivl
cmp
xchg
cmp
cmp
inc
add
in
xchg
std
mov
mov
xchg
xchg
das
ret
fdivrl
mov
scas
cmp
cmp
aam
ret
xor
sub
mov
cmp
cmp
cmp
cmp
sbb
dec
mov
dec
mov
testl
cmp
dec
sub
aam
mov
dec
mov
sub
cmp
cmp
cmp
cmp
xchg
sub
cmp
cmp
faddl
les
inc
movsl
mov
or
dec
sub
mov
sub
int
les
enter
cmp
movsb
cmpsb
int3
aam
xchg
dec
icebp
addb
add
cmpsl
xchg
inc
xor
or
mov
sub
into
les
mov
dec
icebp
addb
test
int3
les
sub
cmp
cmp
xchg
sub
cmp
cmp
dec
ret
cld
stc
mov
xchg
cmp
int
les
enter
lret
inc
add
dec
ret
mov
testl
ret
cld
lds
xor
xchg
dec
sub
aam
mov
dec
mov
shl
cmp
lret
jb
enter
dec
xchg
rolb
fiaddl
aam
mov
dec
mov
dec
or
lret
jae
test
adc
inc
add
testl
mov
dec
mov
movsl
mov
or
dec
sub
mov
scas
les
cmp
cmp
aam
pop
or
or
xchg
xchg
scas
les
rcl
mov
sub
rol
les
and
shlb
rol
les
les
rorb
cmp
or
and
cmp
xchg
dec
lods
aam
xchg
in
xchg
dec
xchg
loopne
sub
les
int3
cltd
dec
and
dec
nop
loopne
dec
jl
les
xchg
xchg
xchg
dec
and
xchg
xchg
scas
cmp
cmp
les
cmp
aam
add
addr16
les
loopne
dec
pushf
int3
dec
mov
inc
cmp
mov
inc
mov
ret
loopne
mov
dec
lock
enter
loopne
dec
mov
inc
mov
shrl
xorb
les
ja
sub
les
jae
mov
shlb
les
fcompl
add
dec
leave
les
rcrb
rcl
aam
xchg
enter
std
xchg
int3
mov
jl
les
xchg
xchg
jg
ret
int3
aam
iret
xchg
xchg
jg
ret
int3
aam
mov
enter
dec
xchg
dec
scas
enter
pushf
popf
cltd
popf
lahf
push
rol
adc
dec
cmp
enter
int3
xchg
lret
jb
dec
mov
inc
cmp
add
lret
jb
dec
mov
fnsave
inc
add
sar
mov
fwait
out
add
cmp
aam
cmp
sub
jmp
cmp
pop
std
cltd
int3
mov
sub
aad
cmp
add
rol
les
sub
cmp
sar
cltd
cmp
inc
movsb
mov
jl
cmp
mov
les
aas
mov
sub
aad
cmp
add
rol
les
sub
cmp
sar
cltd
cmp
inc
movsb
mov
jl
cmp
mov
xor
pushf
shlb
int3
sub
cmp
cmp
dec
or
mov
cmp
cmp
jb
dec
mov
cmp
inc
add
cmp
mov
pushl
push
out
xor
add
ret
dec
mov
movsl
mov
fwait
lahf
or
dec
sub
or
int3
aam
hlt
std
mov
mov
sub
aam
cmp
add
rol
les
sub
cmp
sarb
cmp
enter
cltd
sub
xchg
cmp
sub
cmp
cmp
enter
or
or
or
or
or
or
or
out
or
and
or
scas
ret
les
out
or
and
or
nop
ret
les
xchg
dec
sub
aam
negl
xchg
xchg
std
cltd
aam
inc
adc
les
mov
dec
mov
or
cmp
std
cltd
int3
mov
sub
lret
cmp
xchg
xchg
xchg
xchg
xchg
add
rol
les
sub
cmp
sar
cltd
cmp
inc
movsb
mov
jl
cmp
mov
les
enter
cmp
cmp
in
sub
lret
cmp
xchg
xchg
xchg
xchg
xchg
add
rol
les
das
cmp
inc
add
cld
cltd
cmp
inc
movsb
mov
dec
add
movsb
dec
xorl
cmp
les
enter
mov
dec
mov
movsl
mov
das
decl
int3
lret
jb
dec
mov
cmp
cmp
jb
dec
mov
cmp
inc
add
cmpl
aam
int3
pushl
mov
pushl
or
xor
add
jge
add
lcall
dec
sub
or
int3
aam
std
std
mov
mov
sub
lret
cmp
xchg
xchg
xchg
xchg
xchg
add
rol
les
add
jl
cmp
mov
enter
mov
mov
sub
xchg
cmp
cmp
cmp
inc
add
lcall
sub
enter
ret
aam
add
cmp
xchg
lods
rcl
les
mov
add
sbb
inc
add
roll
das
into
dec
xorl
cmp
popf
dec
mov
testl
cmp
dec
sub
lock
testl
adc
sbbl
adcl
sbb
int3
xchg
idivl
dec
mov
dec
mov
incl
dec
icebp
inc
gs
mov
gs
add
lcall
dec
subl
adc
mov
inc
mov
dec
mov
add
les
cmp
sub
xor
cmp
popf
cmp
mov
cmp
mov
repnz
stc
rol
mov
sub
cmp
cmp
incl
mov
add
or
les
jmp
sbb
mov
scas
lds
mov
cmp
dec
xor
xor
adc
sub
xor
cmp
add
sbb
les
int3
dec
andl
and
mov
shl
xchg
cmp
cmp
inc
add
xchg
cmp
cmp
mov
cmp
inc
add
mov
sbb
mov
xchg
xchg
cmp
enter
gs
add
movsb
dec
cltd
and
lahf
dec
gs
mov
xchg
xchg
xchg
xchg
cmp
enter
xor
xor
sub
fstpt
cmp
incl
mov
xchg
xchg
xchg
xchg
xchg
cmp
enter
add
sub
xor
cmp
iret
inc
mov
dec
mov
sub
stos
cmp
popf
dec
andl
lahf
dec
mov
testl
cmp
mov
pop
dec
cmp
rclb
dec
mov
sub
out
cmp
dec
adc
cmp
add
xor
cmp
xchg
xchg
xchg
xchg
xchg
add
rol
les
sub
cmp
rolb
les
inc
movsb
mov
testl
enter
mov
loopne
pop
dec
mov
xchg
dec
fimull
cmp
lds
push
mov
xchg
lret
jb
scas
int3
xchg
sub
cmp
dec
mov
inc
add
das
aam
push
or
lret
jb
lret
jae
xchg
int3
inc
add
rorl
das
add
mov
inc
mov
das
roll
dec
fildl
add
dec
pop
les
xchg
les
loopne
dec
std
inc
add
out
inc
aas
hlt
mov
add
les
lock
ret
clc
mov
mov
add
les
in
adc
das
into
inc
cmp
mov
inc
aas
hlt
mov
dec
ret
clc
mov
mov
orl
dec
jne
les
cmp
notl
xor
lret
jae
mov
add
jp
inc
sub
add
mov
dec
cmove
lret
jp
mov
inc
sub
decl
mov
int3
std
cmpl
decl
mov
inc
mov
rolb
les
mov
in
mov
dec
mov
les
lahf
dec
cltd
cmp
imul
cmp
subl
jp
cmp
mov
insb
lds
mov
inc
mov
inc
mov
inc
add
out
std
mov
mov
sub
into
cmp
xor
out
les
cmp
lret
xor
pushf
lret
push
add
add
cmp
aam
add
dec
cld
xor
xor
les
inc
movsb
mov
dec
cmpl
aam
add
dec
hlt
inc
mov
dec
xorl
testl
dec
cmp
xchg
cmp
cmp
xchg
aam
ret
lods
inc
cmp
aam
lds
inc
add
cltd
pop
dec
cmp
aam
cmp
sub
in
cmp
dec
mov
negl
decl
mov
cld
cltd
cmp
inc
movsb
mov
testl
ljmp
xchg
xchg
xchg
xchg
add
rol
les
and
cmp
sar
cltd
cmp
inc
movsb
mov
jl
cmp
mov
std
cltd
enter
jp
cmp
mov
sub
int
cmp
add
rol
les
and
cmp
shrb
sti
dec
xorl
sarb
mov
xchg
cmp
sub
rol
inc
add
das
repnz
xchg
cmp
les
mov
dec
xorl
les
in
pop
mov
cld
cltd
cmp
inc
movsb
mov
dec
add
lret
inc
add
cld
cltd
cmp
inc
movsl
mov
lcall
dec
sub
cmp
sub
cmp
cmp
aam
pop
dec
cmp
xchg
xchg
divl
xchg
dec
stc
mov
cmp
incl
mov
dec
gs
xchg
xchg
xchg
scas
cmp
cmpl
lds
popf
popf
dec
cmpl
xchg
xchg
cmp
cmp
xchg
xchg
cmp
inc
add
repnz
cmpl
ret
popf
popf
inc
add
aad
mov
mov
cmp
cmp
popf
dec
mov
inc
add
dec
ret
incl
mov
testl
inc
or
das
xor
mov
sub
xor
cmp
or
or
out
or
add
adc
or
add
les
cmp
or
into
dec
add
dec
shl
jmp
inc
les
sub
or
xchg
dec
mov
iret
or
int3
dec
mov
sahf
jb
dec
les
into
and
mov
into
add
out
add
inc
add
and
mov
incb
mov
incb
mov
movb
and
iret
inc
sub
or
jge
cmp
cmp
add
pop
dec
cmp
int3
das
ret
lea
mov
test
mov
lea
int3
out
add
cmp
call
aam
add
cmp
rclb
dec
push
dec
xor
andl
int3
aam
cld
scas
lds
ret
scas
lds
fs
add
enter
mov
aam
les
sarl
rcll
cmp
mov
add
inc
mov
aam
std
mov
mov
dec
pop
sub
cmp
cmp
xchg
fdivr
adc
xchg
sub
cmp
cmp
popf
dec
xchg
fsubrl
inc
mov
testl
xor
inc
mov
aam
cmp
decl
lret
inc
xor
add
decl
adc
sbb
mov
lret
rorb
std
mov
adc
inc
pop
std
xchg
aam
int3
scas
pushf
sub
call
dec
test
adc
das
sub
cmp
gs
add
dec
std
mov
mov
inc
mov
sub
inc
push
mov
dec
iret
dec
mov
decb
mov
test
das
jns
mov
mov
testl
les
les
sub
inc
push
mov
dec
mov
dec
int
int3
mov
decb
lret
inc
mov
cmp
test
das
or
fsubl
aam
xchg
cmp
cmp
sbb
cltd
adc
sbb
inc
cmp
cmp
jnp
rol
inc
pop
mov
push
pushf
xor
inc
cmp
mov
dec
sbb
incl
mov
sub
xor
cmp
inc
add
fadds
les
or
les
aad
sub
sub
cmp
add
sbb
les
int3
dec
andl
les
and
lret
inc
insb
cmp
cmp
mov
cmp
mov
cmp
inc
add
inc
push
les
mov
cmp
mov
cmp
dec
sbb
pop
mov
mov
push
pushf
xor
inc
cmp
mov
dec
sbb
incl
mov
sub
xor
cmp
inc
cmp
or
les
int3
das
ficoms
popf
inc
add
int
les
sbb
les
int3
dec
cmp
idivl
inc
cmp
mov
cmp
mov
cmp
inc
add
rcll
cmp
cmp
fs
sbbl
cmp
lods
mov
sbb
sub
idivl
negl
std
mov
ret
rorb
int3
std
mov
ret
rorb
cmp
cmp
dec
xor
inc
cmp
lret
inc
jle
cmp
pushl
les
xchg
cmp
fsubrs
xor
cmp
inc
add
inc
pop
lret
inc
push
cmp
cmp
sbb
xchg
cmp
cmp
dec
cmp
add
inc
cmp
sub
cmp
cmp
sbb
and
mov
cmp
cmp
cmp
fs
xor
pop
mov
xchg
sub
sub
cmp
cmp
mov
dec
mov
testl
cmp
dec
sub
aam
mov
dec
mov
cmpsl
out
cmp
mov
dec
xchg
sarb
mov
dec
mov
mov
cmp
cmp
cmp
inc
add
inc
mov
dec
mov
movsl
mov
or
dec
sub
aam
cmp
sub
out
cmp
aam
pop
call
mov
cld
cltd
cmp
inc
movsb
mov
testl
ljmp
xchg
xchg
xchg
xchg
add
rol
les
and
cmp
sar
cltd
cmp
inc
movsb
mov
jl
cmp
mov
std
cltd
enter
jp
cmp
mov
sub
cmp
xchg
xchg
xchg
xchg
xchg
add
rol
les
add
das
dec
xorl
mov
dec
xorl
cmp
cmp
inc
add
das
sti
cmp
cmp
int3
lods
les
cmp
inc
add
incl
mov
sub
cmp
add
rol
cld
cltd
cmp
inc
movsb
mov
dec
add
lret
inc
add
cld
cltd
cmp
inc
movsl
mov
lcall
dec
sub
int3
aam
in
xchg
cmp
cmp
inc
add
inc
add
leave
dec
ret
ret
clc
stc
mov
inc
add
fldl
rorb
add
sbb
addb
xor
cltd
pop
dec
add
roll
das
xor
cmp
dec
cmp
add
or
mov
std
ret
mov
inc
add
les
rclb
xor
popf
dec
mov
inc
xor
push
jmp
xchg
sub
mov
dec
ret
rolb
popf
dec
ret
inc
add
das
in
dec
cmpl
dec
cmp
rorb
int3
xchg
negl
dec
cltd
xor
pop
mov
sub
cmp
xchg
xchg
xchg
xchg
xchg
add
rol
les
sbb
cmp
rolb
cmp
stos
xchg
dec
hlt
xchg
dec
mov
pushl
mov
scas
stc
xchg
sub
mov
popf
dec
mov
test
xor
fwait
add
cmpl
int3
aam
into
sub
cmp
cmp
or
incl
mov
std
cltd
enter
fsubrs
add
mov
cmp
add
rol
les
cmp
std
cltd
cmp
inc
pop
scas
shrb
cmp
popf
addb
pop
mov
dec
fdivr
xlat
scas
shrb
cmp
popf
mov
incl
mov
dec
fmull
addb
pushl
mov
out
mov
sub
cmp
cmp
aas
popf
mov
mov
jp
repnz
sub
cltd
cmp
fisttps
cmp
dec
or
les
rorb
xorl
fidivl
cmp
sti
mov
scas
rclb
aam
add
cmp
inc
add
incl
mov
das
mov
cltd
cmp
inc
es
aas
mov
add
add
dec
repnz
cmp
cmp
cmp
lret
inc
out
cmp
cmp
or
sub
sarb
cmp
enter
inc
cmp
cmp
cmp
jl
aad
popf
rorb
dec
frstor
or
std
cltd
enter
mov
scas
lds
cmp
xlat
cmp
dec
cmp
popf
aas
mov
xchg
xchg
sub
sub
test
cmp
enter
leave
xchg
xchg
xchg
xchg
xchg
sub
pop
cmp
inc
add
dec
mov
add
add
subl
sbb
out
xchg
xchg
cmp
js
ret
add
lret
inc
mov
cmp
les
cmp
out
les
cmp
lret
cmp
sub
cmp
int3
popf
dec
fmull
xor
cmp
cmp
dec
or
add
xchg
cmp
cmp
xchg
dec
sub
int3
mov
testl
mov
sub
sub
adcb
dec
cmp
popf
aas
mov
cmp
xchg
cmp
inc
add
inc
add
leave
xchg
xchg
xchg
xchg
xchg
sub
pop
cmp
inc
add
dec
add
testl
dec
cmp
aam
cmp
sub
fnstcw
cmp
int3
negl
incl
mov
sub
cmp
cmp
add
rol
les
sbb
cmp
sar
cltd
cmp
inc
movsb
mov
testl
xor
lcall
xchg
sub
les
jb
xor
fiadds
cli
lret
jae
lret
jb
add
std
mov
mov
mov
fxch
jae
std
xchg
enter
mov
jae
mov
lret
jae
std
mov
mov
cld
cltd
cmp
inc
movsl
mov
das
lret
cmp
inc
movsb
mov
testl
cmp
cmp
sub
cmp
cmp
enter
or
or
or
cmp
les
loopne
testl
dec
sbb
and
dec
nop
loopne
xor
mov
dec
into
inc
push
mov
inc
or
mov
iret
sbb
dec
pop
add
sbb
into
jnp
cmp
mov
testl
inc
xor
testl
rolb
mov
loope
mov
loope
mov
inc
and
les
lcall
xchg
incb
mov
inc
add
sub
daa
mov
inc
and
incb
mov
inc
add
sbb
daa
mov
inc
and
fwait
dec
xchg
lahf
pop
dec
xchg
lcall
lcall
lcall
gs
or
or
or
or
or
or
mov
inc
cmp
imul
notl
inc
and
testl
dec
xchg
cmp
out
xchg
dec
xchg
int3
inc
push
mov
out
push
out
lds
dec
cmp
test
xchg
dec
pushf
int3
xchg
divl
xchg
dec
mov
jecxz
shlb
enter
dec
incl
int3
xchg
inc
add
xchg
sub
in
cmp
cmc
cmp
mov
testl
dec
shlb
rol
mov
dec
les
int3
incl
int3
xchg
inc
add
xchg
sub
in
cmp
ret
cmp
mov
das
or
cmp
push
dec
cmp
shl
inc
push
mov
xchg
int3
dec
rcl
xchg
dec
mov
enter
movl
sub
dec
test
inc
mov
xchg
dec
pushf
int3
testl
dec
mov
dec
mov
dec
mov
lcall
les
cmp
inc
out
cmpl
dec
ret
sar
add
int3
xchg
inc
add
xchg
sub
in
cmp
rorb
sub
mov
dec
cmpl
add
mov
dec
xorl
enter
xlat
inc
add
int3
xchg
sub
in
cmp
fistpll
mov
dec
or
cmpl
cmp
into
dec
mov
or
sub
cmpl
inc
das
xchg
xor
xor
add
orb
out
cmpl
xor
inc
mov
xor
dec
add
fmull
enter
dec
test
loopne
lret
jb
xor
add
adc
add
rol
mov
testl
dec
cmp
loopne
test
dec
mov
inc
mov
cmp
sub
xchg
dec
pushf
int3
xchg
xchg
idivl
dec
mov
dec
mov
dec
mov
lds
cmp
sbb
inc
xlat
dec
cmpl
inc
out
xorl
testl
add
int3
xchg
inc
add
xchg
sub
fstpt
cmp
shll
adc
mov
dec
mov
dec
cmpl
xorl
incl
int3
xchg
inc
add
xchg
sub
fstpt
cmp
inc
dec
les
mov
dec
or
in
cmp
cmp
mov
xorl
mov
mov
xor
inc
mov
xor
add
das
fisttps
fmull
enter
dec
test
insb
lds
les
loopne
inc
mov
inc
add
in
cmp
sub
cmp
cmp
sub
popf
mov
std
subl
dec
subl
shll
cmpl
inc
mov
dec
subl
inc
mov
dec
andl
add
lcall
int3
pop
ret
aam
add
cmp
dec
mov
inc
xor
cmp
cmp
pop
inc
mov
sub
cmp
cmp
dec
ret
cmp
mov
out
xor
aam
sarb
shlb
add
mov
sub
cmp
cmp
cmp
mov
sub
cmp
cmp
shrl
cmp
inc
add
inc
add
faddl
int3
xchg
sub
cmp
cmp
and
cmpl
das
push
testl
push
mov
sbb
cmp
sbbl
cmp
sub
dec
testl
dec
add
inc
mov
int3
ret
aam
mov
jecxz
cmp
lods
je
ret
aam
or
or
or
or
or
or
or
dec
mov
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
xchg
ret
aam
mov
cmp
dec
mov
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
xchg
ret
aam
out
and
cmp
xor
push
cmp
inc
add
cmp
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
xchg
ret
aam
cmp
cmp
dec
mov
cmp
cmp
popf
pop
dec
nop
loopne
dec
xchg
dec
mov
or
aas
or
cmp
ret
aam
or
cmp
dec
mov
dec
nop
loopne
dec
xchg
dec
mov
or
sbb
cmp
jl
pushf
ret
aam
push
or
or
or
or
or
or
pop
sub
dec
nop
loopne
dec
xchg
dec
mov
sub
or
cmp
cmp
or
pop
or
cmp
ret
aam
mov
cmp
or
or
xor
sbb
cmp
loopne
dec
xchg
dec
mov
or
mov
mov
and
cmp
or
or
or
or
or
or
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
popf
ret
aam
loope
cmp
or
or
or
xor
dec
ljmp
dec
xchg
dec
mov
or
in
or
cmp
ret
aam
cmp
cmp
or
or
or
or
or
or
or
and
dec
nop
loopne
dec
xchg
dec
mov
or
cmp
cmp
daa
cmp
or
or
or
or
or
or
or
insb
sub
dec
nop
loopne
dec
xchg
mov
sub
or
cmp
ret
aam
pop
daa
cmp
or
or
or
or
or
or
or
or
dec
nop
loopne
dec
xchg
mov
testl
jl
sahf
ret
aam
test
or
or
or
or
or
or
dec
xorl
enter
inc
mov
shrb
dec
nop
loopne
dec
xchg
dec
mov
or
pushf
or
cmp
ret
aam
call
or
or
or
or
or
or
shrb
nop
loopne
dec
xchg
dec
mov
or
in
or
cmp
ret
aam
cmp
cmp
or
or
or
or
or
or
or
int3
sub
dec
subl
inc
enter
inc
mov
shrb
dec
nop
loopne
dec
xchg
mov
testl
jl
sahf
ret
aam
jo
cmp
or
or
dec
mov
cld
mov
jl
hlt
mov
adc
dec
nop
loopne
dec
xchg
inc
testl
inc
add
dec
mov
testl
jl
lahf
ret
aam
mov
cmp
dec
mov
dec
nop
loopne
dec
xchg
dec
mov
or
mov
mov
cmp
or
or
or
or
or
or
or
xchg
aam
and
addr16
int3
aam
dec
nop
loopne
dec
dec
mov
testl
jl
lahf
ret
aam
fsubl
cmp
or
or
or
or
dec
nop
loopne
dec
xchg
dec
mov
or
in
cmp
jl
lahf
ret
aam
xor
or
or
loopne
dec
xchg
dec
mov
testl
jl
cwtl
ret
aam
adc
or
or
sub
dec
andl
inc
enter
inc
mov
sub
test
nop
loopne
dec
xchg
mov
testl
jl
cwtl
ret
aam
push
and
or
dec
mov
dec
mov
add
cmp
int3
dec
xchg
dec
mov
or
dec
push
cmp
jl
cwtl
ret
aam
cmpsb
and
dec
addl
inc
enter
inc
mov
sbb
sbb
cmp
pop
dec
nop
loopne
dec
xchg
mov
or
pushf
push
cmp
jl
cwtl
ret
aam
call
or
or
or
or
or
or
enter
cmp
dec
mov
dec
mov
dec
mov
dec
nop
loopne
dec
xchg
mov
sub
push
cmp
inc
add
dec
mov
testl
jl
cwtl
ret
aam
sbb
cmp
or
or
or
or
dec
dec
pushf
cmp
cmp
dec
mov
xor
cmp
cmp
dec
mov
dec
nop
loopne
dec
inc
xchg
cmp
cmp
mov
cmp
testl
inc
add
dec
mov
testl
jl
cltd
ret
aam
mov
or
or
or
or
or
or
sbb
cmp
cmp
dec
nop
loopne
dec
xchg
dec
mov
or
mov
test
ret
aam
mov
cmp
or
or
or
or
or
or
dec
nop
loopne
dec
xchg
dec
mov
or
xchg
or
cltd
ret
aam
loope
cmp
or
or
or
je
insb
mov
cmp
loopne
dec
xchg
jo
or
in
or
lcall
cmp
or
or
or
or
or
or
dec
mov
dec
nop
loopne
dec
xchg
mov
testl
jl
lcall
cmp
or
or
or
or
or
or
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
lcall
cmp
or
or
dec
nop
loopne
dec
xchg
dec
mov
or
jne
cmp
jl
fwait
ret
aam
inc
sbb
cmp
or
or
dec
mov
int3
mov
cmp
insb
inc
and
lret
inc
enter
inc
mov
adc
xor
cmp
pop
dec
mov
sub
dec
mov
sbb
loopne
dec
xchg
mov
sub
or
cmp
aam
mov
testl
jl
fwait
ret
aam
jecxz
cmp
or
or
or
or
loopne
dec
xchg
dec
mov
or
cmc
or
cmp
ret
aam
rcrl
cmp
or
or
dec
mov
dec
nop
loopne
dec
xchg
dec
mov
or
int
cmp
jl
movsb
ret
aam
sbb
cmp
or
or
or
or
or
or
or
adc
dec
nop
loopne
dec
xchg
mov
testl
inc
add
dec
mov
testl
jl
movsb
ret
aam
sbb
cmp
sbb
in
mov
cmp
loopne
dec
xchg
dec
mov
or
insl
add
cmp
ret
aam
mov
or
or
or
or
or
or
dec
adcl
enter
inc
mov
jl
sub
cmp
pop
dec
mov
dec
mov
adc
js
or
pop
sub
dec
nop
loopne
dec
xchg
mov
sub
add
cmp
ret
aam
fcomps
cmp
or
or
or
or
or
or
dec
mov
dec
mov
add
cmp
int3
dec
xchg
dec
mov
or
lret
cmp
ret
aam
sbb
cmp
or
adc
dec
nop
loopne
dec
xchg
dec
mov
or
sub
add
dec
mov
testl
jl
movsl
ret
aam
je
cmp
dec
mov
cld
mov
cmp
js
hlt
mov
cmp
js
in
mov
cmp
js
in
cmp
dec
mov
fdivl
js
aam
cmp
dec
mov
dec
nop
loopne
dec
xchg
push
add
cmp
ret
aam
cltd
sbb
cmp
or
or
or
or
or
or
dec
subl
xchg
sub
lret
cmp
inc
add
pop
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
cmpsb
ret
aam
loopne
cmp
or
or
dec
subl
xchg
sub
lret
cmp
inc
add
pop
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
cmpsb
ret
aam
xor
cmp
or
or
dec
mov
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
cmpsl
ret
aam
or
cmp
or
or
or
or
or
or
or
mov
push
mov
loopne
dec
xchg
mov
sub
add
cmp
ret
aam
pop
sbb
cmp
or
or
or
or
or
xor
jl
cmp
dec
nop
loopne
dec
xchg
mov
testl
jl
cmpsl
ret
aam
test
or
or
or
or
or
or
dec
mov
sub
cmp
dec
mov
dec
nop
loopne
dec
xchg
mov
sub
add
cmp
rorb
testl
jl
cmpsl
ret
aam
in
sbb
cmp
or
or
or
or
sub
fcoml
loopne
dec
xchg
mov
testl
jl
mov
pop
cmp
or
or
or
or
or
or
or
xor
cmp
sub
dec
dec
aam
cmp
sub
dec
dec
mov
cmp
sub
dec
mov
xchg
mov
cmp
call
mov
inc
sub
dec
mov
mov
cmp
mov
cmc
mov
cmp
adc
dec
nop
loopne
dec
inc
and
cmp
dec
dec
and
cmp
testl
inc
add
dec
mov
testl
jl
mov
pop
cmp
or
or
or
or
or
or
je
sub
cmp
dec
nop
loopne
dec
xchg
mov
sub
add
cmp
ret
aam
stc
pop
cmp
or
or
or
or
or
or
or
je
jl
cmp
dec
nop
loopne
dec
xchg
pusha
testl
jl
mov
pop
cmp
or
or
or
or
or
or
or
adc
dec
mov
inc
mov
cmp
inc
sub
dec
mov
mov
cmp
inc
sub
dec
mov
mov
cmp
loopne
dec
inc
mov
cmp
dec
dec
mov
cmp
testl
inc
add
dec
mov
testl
jl
mov
push
cmp
or
dec
mov
sub
dec
mov
in
cmp
dec
mov
mov
cmp
jl
aam
cmp
dec
mov
mov
cmp
jl
les
jl
cmp
cmp
dec
mov
mov
cmp
adc
dec
mov
sub
dec
nop
loopne
dec
inc
cld
cmp
cmp
lock
cmp
or
lahf
pop
cmp
inc
add
dec
mov
testl
jl
mov
push
cmp
or
dec
mov
insb
mov
cmp
or
je
cmp
int3
dec
xchg
mov
sub
pop
cmp
inc
add
dec
mov
testl
jl
mov
sbb
or
or
or
dec
dec
mov
mov
nop
loopne
dec
xchg
mov
sub
push
cmp
jl
mov
sbb
or
or
or
or
dec
mov
sub
dec
mov
mov
cmp
jl
in
mov
cmp
loopne
dec
xchg
push
testl
inc
add
dec
mov
testl
jl
mov
sbb
sbb
cmp
cmp
dec
nop
loopne
dec
xchg
mov
testl
jl
mov
sbb
or
or
or
or
or
or
pusha
sub
dec
mov
dec
nop
loopne
dec
xchg
mov
sub
push
cmp
inc
add
dec
mov
testl
jl
mov
sbb
or
or
or
dec
add
xchg
sub
into
cmp
inc
add
pop
dec
nop
loopne
dec
xchg
dec
mov
or
les
cmp
jl
mov
sbb
cmp
or
or
xor
lods
fistpll
cmp
xor
add
cmp
dec
nop
loopne
dec
xchg
dec
mov
or
or
mov
sbb
cmp
or
sbb
cmp
sub
dec
dec
xor
cmp
sub
dec
dec
mov
cmp
sub
dec
mov
mov
cmp
adc
dec
dec
aam
cmp
sub
dec
dec
call
sub
dec
mov
sbb
jl
adc
pop
sub
dec
nop
loopne
dec
inc
add
cmp
dec
dec
add
cmp
testl
inc
add
dec
mov
testl
jl
mov
sbb
cmp
insb
sub
dec
mov
dec
addl
cmp
popf
pop
dec
nop
loopne
dec
xchg
pop
testl
inc
add
dec
mov
testl
jl
mov
adc
cmp
or
or
or
or
or
or
dec
subl
xchg
sub
int
cmp
int3
pop
dec
nop
loopne
dec
xchg
mov
testl
jl
lods
ret
aam
push
adc
cmp
or
or
xor
jl
cmp
dec
mov
add
cmp
xor
add
sub
dec
nop
loopne
dec
xchg
mov
testl
jl
lods
ret
aam
nop
adc
cmp
or
or
js
sbb
cmp
dec
mov
dec
dec
sbb
cmp
sub
dec
dec
hlt
cmp
cmp
dec
mov
jbe
cmp
dec
dec
mov
cmp
sub
dec
dec
lods
cmp
cmp
dec
mov
stos
cmp
dec
dec
sbb
cmp
sub
dec
nop
loopne
dec
inc
or
cmp
dec
dec
or
cmp
testl
jl
lods
ret
aam
sbb
cmp
or
or
or
or
dec
mov
stos
cmp
dec
mov
adc
cmp
dec
nop
loopne
dec
inc
mov
cmp
dec
dec
mov
cmp
testl
jl
lods
ret
aam
pop
adc
cmp
or
or
or
or
or
or
or
dec
mov
in
fnstsw
cmp
pusha
sub
dec
mov
dec
nop
loopne
dec
inc
mov
dec
mov
or
inc
jnp
cmp
aam
mov
testl
jl
lods
ret
aam
mov
cmp
or
or
or
or
or
dec
mov
dec
nop
loopne
dec
xchg
dec
mov
or
lea
cmp
ret
aam
fsts
cmp
or
or
or
or
or
or
or
xor
or
cmp
dec
nop
loopne
dec
xchg
mov
testl
jl
lods
ret
aam
sub
cmp
or
or
or
or
or
or
or
fs
dec
mov
movsb
test
js
pushf
test
cwtl
cmp
cmp
dec
dec
cwtl
cmp
cmp
dec
dec
cwtl
cmp
cmp
dec
mov
dec
dec
cwtl
cmp
cmp
dec
dec
cwtl
cmp
cmp
dec
nop
loopne
dec
inc
lock
cmp
hlt
cmp
cmp
or
push
jp
cmp
ret
aam
lods
adc
cmp
or
or
or
or
pop
sub
dec
nop
loopne
dec
xchg
mov
sub
jp
cmp
ret
aam
stc
adc
cmp
or
or
or
or
or
or
dec
nop
loopne
dec
xchg
dec
mov
or
test
cmp
ret
aam
rcll
cmp
or
or
or
loopne
dec
xchg
dec
mov
testl
jl
scas
ret
aam
xor
cmp
or
or
or
loopne
dec
xchg
dec
mov
or
lds
cmp
ret
aam
adc
cmp
or
or
or
mov
xchg
test
cmp
pop
sub
dec
mov
test
cmp
loopne
dec
inc
movsb
cmp
cmp
cwtl
cmp
cmp
or
add
cmp
jl
scas
ret
aam
push
adc
cmp
or
or
jl
fsubrl
adc
dec
nop
loopne
dec
xchg
pusha
testl
jl
scas
ret
aam
mov
or
or
dec
mov
sub
dec
nop
loopne
dec
xchg
mov
testl
jl
scas
ret
aam
stc
adc
cmp
or
or
or
or
or
or
dec
mov
jl
cmp
dec
mov
scas
cmp
dec
mov
insb
scas
cmp
dec
mov
dec
nop
loopne
dec
xchg
mov
sub
jns
cmp
ret
aam
xor
cmp
or
or
or
sbb
mov
mov
mov
cmp
dec
nop
loopne
dec
xchg
jo
or
xor
subb
cmp
or
or
or
xor
add
sub
dec
mov
les
dec
nop
loopne
dec
xchg
mov
testl
jl
test
aam
dec
pop
cmp
or
or
or
or
or
mov
cmp
sub
dec
nop
loopne
dec
inc
mov
dec
mov
or
inc
js
cmp
ret
aam
nop
pop
cmp
or
or
dec
dec
mov
cmp
inc
add
sub
dec
dec
mov
cmp
inc
add
sub
dec
dec
mov
cmp
inc
add
sub
dec
dec
movsb
cmp
cmp
dec
mov
sub
dec
dec
lods
cmp
cmp
dec
mov
scas
cmp
dec
dec
mov
cmp
sub
dec
mov
lock
cmp
mov
cmp
sub
dec
mov
movsl
scas
cmp
dec
mov
scas
cmp
gs
int3
aam
and
addr16
int3
aam
dec
dec
mov
cmp
sub
dec
nop
loopne
dec
inc
pushf
cmp
cmp
nop
cmp
cmp
or
jg
cmp
inc
add
dec
mov
testl
jl
test
aam
inc
push
cmp
or
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
test
push
cmp
or
or
or
les
dec
mov
out
cmp
dec
nop
loopne
dec
xchg
dec
mov
or
movsl
jg
cmp
ret
aam
icebp
push
cmp
or
or
or
loopne
dec
xchg
dec
mov
testl
jl
stos
ret
aam
rcll
cmp
or
or
or
pusha
sub
dec
nop
loopne
dec
xchg
push
testl
jl
stos
ret
aam
sub
or
or
or
or
or
or
pusha
sub
dec
nop
loopne
dec
xchg
pop
testl
jl
stos
ret
aam
jns
cmp
or
or
or
or
or
or
or
xchg
aam
and
addr16
xchg
aam
dec
mov
dec
orl
les
dec
cmp
shrb
dec
addl
cmp
sub
dec
mov
repnz
cmp
loopne
dec
xchg
mov
or
mov
cmp
jl
stos
ret
aam
mov
or
or
or
dec
mov
outsb
cmp
dec
andl
enter
inc
mov
shrb
dec
mov
lods
cmp
dec
mov
sub
dec
nop
loopne
dec
xchg
pusha
testl
jl
stos
ret
aam
xor
cmp
or
or
sub
or
cmp
dec
nop
loopne
dec
xchg
dec
mov
or
cmp
sbb
adc
cmp
or
or
or
or
or
or
dec
mov
sub
dec
xorl
cmp
inc
add
cmp
sub
add
les
dec
nop
loopne
dec
xchg
mov
testl
jl
mov
aam
mov
or
or
or
or
dec
mov
sub
dec
andl
cmp
sub
dec
andl
cmp
sub
dec
nop
loopne
dec
xchg
mov
testl
jl
mov
aam
jecxz
cmp
or
or
or
or
sub
dec
nop
loopne
dec
xchg
mov
testl
jl
mov
aam
cmp
cmp
or
or
or
or
or
or
or
xor
cld
and
int3
dec
xchg
dec
mov
or
cmp
add
cmp
or
or
or
or
or
or
or
xor
int3
pop
cmp
dec
mov
add
cmp
int3
dec
xchg
dec
mov
or
jp
cmp
jl
mov
aam
push
or
cmp
or
je
sbb
cmp
dec
nop
loopne
dec
inc
mov
cmp
dec
dec
mov
cmp
testl
jl
mov
aam
mov
or
or
or
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
mov
aam
orl
or
or
or
enter
inc
mov
adc
jl
cmp
pop
dec
mov
sub
dec
nop
loopne
dec
xchg
mov
sub
jl
cmp
aam
mov
testl
jl
mov
aam
xor
cmp
or
or
or
or
test
cmp
sub
dec
dec
push
scas
mov
mov
pop
ss
push
cmp
cmp
dec
dec
mov
cmp
sub
dec
dec
or
cmp
sub
dec
dec
mov
cmp
sub
dec
dec
push
cmp
cmp
dec
nop
loopne
dec
inc
nop
cmp
cmp
xchg
cmp
cmp
or
addr16
cmp
aam
mov
testl
jl
mov
aam
scas
or
cmp
or
or
or
or
or
xchg
aam
and
mov
pop
dec
nop
loopne
dec
dec
mov
testl
jl
mov
aam
cld
or
cmp
or
or
or
or
xchg
aam
and
addr16
xchg
aam
dec
nop
loopne
dec
dec
mov
testl
jl
mov
aam
int3
or
cmp
or
or
or
or
xchg
aam
and
addr16
int3
aam
dec
adcl
inc
enter
inc
mov
sbb
scas
mov
adcl
inc
enter
inc
mov
shrb
dec
nop
loopne
dec
xchg
mov
testl
jl
mov
aam
popa
or
cmp
or
or
dec
mov
dec
orl
enter
inc
mov
or
pop
dec
mov
sub
dec
nop
loopne
dec
xchg
mov
or
dec
jb
cmp
aam
mov
testl
jl
mov
aam
mov
cmp
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
mov
aam
lock
cmp
or
or
rolb
sub
dec
nop
loopne
dec
xchg
mov
testl
jl
inc
ret
aam
into
or
cmp
or
or
or
or
or
xor
lods
sarb
cmp
int3
sub
dec
nop
loopne
dec
xchg
dec
mov
or
lds
cmp
ret
aam
adc
cmp
or
or
or
rolb
sub
dec
nop
loopne
dec
xchg
mov
testl
jl
inc
ret
aam
outsb
or
cmp
or
or
or
or
or
loopne
dec
xchg
dec
mov
testl
jl
inc
ret
aam
inc
or
cmp
or
or
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
inc
ret
aam
mov
or
or
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
inc
ret
aam
orl
or
or
loopne
dec
xchg
dec
mov
or
xchg
jno
cmp
ret
aam
loope
cmp
or
or
or
shrb
nop
loopne
dec
xchg
mov
testl
jl
inc
ret
aam
cmp
cmp
or
or
or
or
or
or
or
sub
dec
add
cmp
loopne
dec
xchg
dec
mov
or
xor
hlt
inc
ret
aam
add
cmp
or
or
or
shrb
mov
inc
add
cmp
dec
mov
inc
add
cmp
dec
mov
inc
add
cmp
dec
mov
inc
add
cmp
dec
nop
loopne
dec
xchg
mov
testl
jl
inc
ret
aam
mov
cmp
or
shrb
mov
inc
add
cmp
dec
mov
inc
add
cmp
dec
mov
inc
add
cmp
dec
mov
inc
add
cmp
dec
nop
loopne
dec
xchg
mov
testl
jl
inc
ret
aam
in
cmp
or
loopne
dec
xchg
dec
mov
testl
jl
inc
ret
aam
rorl
cmp
or
or
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
inc
ret
aam
and
cmp
or
or
or
loopne
dec
xchg
dec
mov
testl
jl
inc
ret
aam
add
cmp
or
or
or
loopne
dec
xchg
dec
mov
testl
jl
dec
ret
aam
popa
push
cmp
or
or
or
xor
cld
leave
cmp
dec
nop
loopne
dec
xchg
mov
testl
jl
dec
ret
aam
mov
or
or
or
or
or
or
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
dec
ret
aam
xchg
push
cmp
or
or
or
loopne
dec
xchg
dec
mov
testl
jl
dec
ret
aam
icebp
push
cmp
or
or
or
xor
insb
dec
cmp
loopne
dec
xchg
dec
mov
or
std
ja
cmp
ret
aam
leave
push
cmp
or
or
or
or
or
or
or
xor
pushf
sbb
int3
dec
xchg
dec
mov
or
int
cmp
jl
dec
ret
aam
sbb
or
or
or
or
or
or
xor
jl
cmp
int3
dec
xchg
dec
mov
or
sbb
dec
dec
ret
aam
imul
or
or
or
or
loopne
dec
xchg
dec
mov
testl
jl
dec
ret
aam
inc
or
or
or
sub
dec
jmp
loopne
dec
xchg
dec
mov
or
dec
jbe
cmp
ret
aam
cltd
or
or
or
or
or
or
or
shrb
nop
loopne
dec
xchg
mov
testl
jl
dec
ret
aam
jmp
or
or
or
or
or
or
dec
add
cmp
rolb
sub
dec
nop
loopne
dec
xchg
dec
mov
or
fidivl
cmp
ret
aam
ss
cmp
or
xor
and
cmp
loopne
dec
xchg
dec
mov
or
cmp
or
aam
or
cmp
or
or
or
or
or
or
dec
mov
dec
nop
loopne
dec
xchg
mov
testl
jl
dec
ret
aam
pop
or
cmp
or
or
or
or
or
or
dec
mov
dec
nop
loopne
dec
xchg
mov
testl
jl
dec
ret
aam
test
or
or
or
or
or
or
dec
dec
sbb
cmp
sub
dec
nop
loopne
dec
inc
add
cmp
dec
dec
add
cmp
testl
inc
add
dec
mov
or
xchg
jne
cmp
ret
aam
jecxz
cmp
or
or
or
or
and
enter
inc
mov
shrb
dec
nop
loopne
dec
xchg
dec
mov
or
fdivl
cmp
ret
aam
sub
cmp
or
or
or
or
or
or
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
dec
ret
aam
add
cmp
or
or
or
rolb
sub
dec
mov
inc
add
cmp
dec
mov
dec
nop
loopne
dec
xchg
dec
mov
or
ja
cmp
jl
dec
ret
aam
inc
add
cmp
or
or
or
dec
mov
sub
dec
nop
loopne
dec
xchg
mov
testl
jl
dec
ret
aam
cltd
add
cmp
or
or
or
or
or
or
dec
or
cmp
sub
in
cmp
loopne
dec
xchg
mov
testl
jl
dec
ret
aam
loope
cmp
or
or
or
enter
cmp
loopne
dec
xchg
mov
testl
jl
dec
ret
aam
cmp
cmp
or
or
or
or
or
or
or
loopne
dec
xchg
dec
mov
testl
jl
dec
ret
aam
adc
cmp
or
or
or
sub
dec
nop
loopne
dec
xchg
dec
mov
or
sbb
in
ret
aam
imul
or
or
or
or
or
or
xor
in
dec
aas
cmp
loopne
dec
xchg
dec
mov
or
insl
imul
jl
dec
ret
aam
mov
or
or
or
or
or
or
dec
mov
sub
dec
nop
loopne
dec
xchg
dec
mov
or
mov
mov
mov
cmp
or
or
or
or
or
or
or
rolb
les
dec
nop
loopne
dec
xchg
mov
testl
jl
dec
ret
aam
roll
cmp
or
or
or
or
rolb
sub
dec
nop
loopne
dec
xchg
mov
testl
jl
dec
ret
aam
add
cmp
or
or
or
or
or
loopne
dec
xchg
dec
mov
testl
jl
dec
ret
aam
add
cmp
or
or
or
shrb
mov
inc
add
cmp
int3
dec
xchg
dec
mov
or
jp
cmp
jl
dec
ret
aam
push
add
cmp
or
rolb
sub
dec
nop
loopne
dec
xchg
mov
testl
jl
dec
ret
aam
scas
add
cmp
or
or
or
or
or
push
cmp
loopne
dec
xchg
push
push
cmp
ret
aam
stc
add
cmp
or
or
or
or
or
or
dec
mov
inc
add
cmp
dec
nop
loopne
dec
xchg
dec
mov
or
repnz
cmp
rorb
testl
jl
dec
ret
aam
cmp
cmp
or
or
or
or
or
or
or
xor
and
lret
inc
enter
inc
mov
shrb
dec
nop
loopne
dec
xchg
dec
mov
or
sub
cmp
jl
dec
ret
aam
js
cmp
or
or
or
or
or
or
dec
andl
cmp
loopne
dec
xchg
dec
mov
or
jge
cmp
jl
dec
ret
aam
dec
add
cmp
or
or
or
or
or
or
dec
xorl
dec
xchg
mov
testl
jl
dec
ret
aam
cltd
add
cmp
or
or
or
or
or
or
dec
add
cmp
loopne
dec
xchg
mov
testl
jl
dec
ret
aam
jmp
or
or
or
or
or
or
dec
mov
inc
add
cmp
rolb
sub
dec
nop
loopne
dec
xchg
mov
testl
jl
dec
ret
aam
sub
cmp
or
or
or
or
or
or
or
or
shrb
nop
loopne
dec
xchg
dec
mov
or
sub
xor
ret
aam
jns
cmp
or
or
or
or
or
or
or
and
in
sbb
cmp
sub
mov
cmp
loopne
dec
xchg
dec
mov
or
jne
cmp
jl
push
ret
aam
inc
pop
cmp
or
or
or
shrb
add
mov
cmp
int3
dec
xchg
dec
mov
or
mov
pushf
push
ret
aam
xchg
pop
cmp
or
dec
mov
dec
nop
loopne
dec
xchg
mov
testl
jl
push
ret
aam
jmp
or
or
or
or
or
or
dec
mov
sub
dec
mov
sub
dec
nop
loopne
dec
xchg
dec
mov
or
in
cmp
jl
push
ret
aam
xor
cmp
or
or
or
shrb
mov
inc
add
cmp
int3
dec
xchg
dec
mov
or
sub
cmp
ret
aam
push
push
cmp
or
dec
mov
dec
mov
add
cmp
int3
dec
xchg
dec
mov
or
jp
cmp
jl
push
ret
aam
push
push
cmp
or
dec
mov
dec
mov
add
cmp
int3
dec
xchg
dec
mov
or
dec
outsl
cmp
jl
push
ret
aam
cmpsb
push
cmp
or
dec
xorl
cmp
int3
dec
xchg
dec
mov
or
mov
inc
push
ret
aam
incb
cmp
or
or
or
or
or
dec
inc
movsb
cmp
cmp
popf
pop
dec
inc
cwtl
cmp
cmp
les
cwtl
cmp
cmp
dec
dec
mov
push
popf
cmp
pop
dec
inc
cwtl
cmp
cmp
lret
inc
aam
les
cwtl
cmp
cmp
dec
mov
add
dec
nop
loopne
dec
inc
nop
cmp
cmp
xchg
cmp
cmp
or
das
outsb
cmp
jl
push
ret
aam
jnp
cmp
or
or
or
or
or
or
or
or
xor
in
sub
int3
dec
xchg
dec
mov
or
jge
cmp
jl
push
ret
aam
dec
add
or
or
or
or
or
or
and
dec
nop
loopne
dec
xchg
dec
mov
or
dec
outsb
cmp
jl
push
ret
aam
cltd
add
or
or
or
or
or
or
push
cmp
loopne
dec
xchg
jo
or
popf
outsb
cmp
jl
push
ret
aam
jmp
or
or
or
or
or
or
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
push
ret
aam
roll
or
sub
dec
nop
loopne
dec
xchg
dec
mov
or
enter
jl
push
ret
aam
and
cmp
dec
add
cmp
rolb
sub
dec
add
jbe
cmp
rolb
sub
dec
add
dec
xor
cmp
loopne
dec
xchg
dec
mov
or
jns
cmp
jl
push
ret
aam
push
add
cmp
dec
mov
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
push
ret
aam
test
or
or
or
or
or
or
dec
mov
dec
nop
loopne
dec
xchg
dec
mov
or
lods
insl
cmp
jl
push
ret
aam
stc
add
cmp
or
or
or
or
or
or
dec
mov
dec
nop
loopne
dec
xchg
mov
testl
jl
push
ret
aam
leave
add
cmp
or
or
or
or
or
or
dec
inc
add
cmp
sub
dec
inc
sbb
cmp
sub
dec
nop
loopne
dec
inc
js
cmp
dec
dec
jl
cmp
testl
inc
add
dec
mov
or
sub
cmp
jl
push
ret
aam
js
cmp
or
or
or
or
or
or
dec
mov
sub
dec
add
sub
out
cmp
pop
dec
nop
loopne
dec
xchg
dec
mov
or
push
mov
ret
aam
inc
jnp
cmp
shrb
nop
loopne
dec
xchg
mov
testl
jl
push
ret
aam
cltd
jnp
cmp
or
or
or
or
or
or
dec
mov
sub
dec
mov
sub
dec
nop
loopne
dec
xchg
mov
sub
insb
cmp
inc
add
dec
mov
testl
jl
push
ret
aam
fdivrl
cmp
or
or
or
or
xor
int3
cmp
dec
nop
loopne
dec
xchg
dec
mov
or
jl
push
ret
aam
sub
cmp
or
or
or
or
or
or
dec
mov
add
cmp
dec
mov
add
cmp
dec
mov
add
cmp
dec
nop
loopne
dec
xchg
mov
testl
jl
push
ret
aam
pusha
jp
cmp
or
or
loopne
dec
xchg
dec
mov
testl
jl
push
ret
aam
inc
jp
cmp
or
or
dec
inc
mov
cmp
xchg
sub
int3
cmp
pop
dec
nop
loopne
dec
inc
mov
cmp
dec
dec
mov
cmp
testl
jl
push
ret
aam
xchg
jp
cmp
or
int3
sub
dec
nop
loopne
dec
xchg
dec
mov
or
popf
arpl
cmp
ret
aam
jmp
or
or
or
or
or
or
dec
mov
cmp
cmp
loopne
dec
xchg
pop
testl
jl
push
ret
aam
cmp
cmp
or
or
or
or
or
or
dec
or
cmp
sub
add
cmp
loopne
dec
xchg
mov
testl
jl
push
ret
aam
add
cmp
or
or
dec
mov
sub
dec
mov
inc
add
cmp
int3
dec
xchg
dec
mov
or
jp
cmp
jl
push
ret
aam
push
jns
cmp
or
sbb
fcoml
loopne
dec
xchg
dec
mov
or
pop
bound
cmp
ret
aam
test
or
or
or
or
or
or
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
push
ret
aam
cmpl
or
dec
subl
sub
sub
cmp
int3
pop
dec
nop
loopne
dec
xchg
dec
mov
or
test
cmp
ret
aam
sarb
cmp
or
or
int3
sub
dec
nop
loopne
dec
xchg
mov
testl
jl
push
ret
aam
sub
cmp
or
or
or
or
or
or
dec
mov
nop
cmp
dec
nop
loopne
dec
xchg
mov
sub
popa
cmp
jl
push
ret
aam
jns
cmp
or
or
or
or
or
or
or
loopne
dec
xchg
dec
mov
or
add
mov
sub
or
or
or
sbb
fcoml
js
aam
cmp
dec
nop
loopne
dec
xchg
jo
or
push
popa
cmp
jl
pop
ret
aam
mov
or
or
dec
add
cmp
loopne
dec
xchg
mov
testl
jl
pop
ret
aam
stc
js
cmp
or
or
or
or
or
or
dec
add
sub
and
cmp
dec
nop
loopne
dec
xchg
dec
mov
or
lock
cmp
jl
pop
ret
aam
int3
js
cmp
or
or
or
or
rolb
xchg
sub
and
cmp
dec
nop
loopne
dec
xchg
mov
testl
jl
pop
ret
aam
sbb
cmp
or
or
or
or
dec
mov
dec
nop
loopne
dec
xchg
mov
testl
jl
pop
ret
aam
imul
or
or
or
or
or
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
pop
ret
aam
inc
jg
cmp
or
or
dec
mov
sub
dec
nop
loopne
dec
xchg
dec
mov
or
dec
pusha
cmp
inc
add
dec
mov
testl
jl
pop
ret
aam
xchg
jg
cmp
adc
int3
adc
sub
dec
nop
loopne
dec
xchg
mov
sub
pusha
cmp
inc
add
dec
mov
testl
jl
pop
ret
aam
fdivrl
cmp
or
or
or
or
shrb
nop
loopne
dec
xchg
mov
testl
jl
pop
ret
aam
sub
cmp
or
or
or
or
or
or
dec
mov
sub
dec
mov
inc
add
cmp
int3
dec
xchg
dec
mov
or
sbb
cmp
ret
aam
jbe
cmp
or
dec
mov
dec
mov
add
cmp
int3
dec
xchg
dec
mov
or
push
cmp
jl
pop
ret
aam
inc
jle
cmp
or
sub
enter
inc
mov
xor
cmp
cmp
pop
dec
nop
loopne
dec
xchg
mov
testl
jl
pop
ret
aam
mov
cmp
or
or
or
or
or
or
xor
sbb
cmp
int3
dec
xchg
dec
mov
or
lea
cmp
ret
aam
fnstcw
cmp
or
or
or
or
or
or
dec
subl
aam
cmp
loopne
dec
xchg
mov
testl
jl
pop
ret
aam
and
cmp
or
or
dec
mov
sub
dec
nop
loopne
dec
xchg
mov
sub
data16
jl
pop
ret
aam
jns
cmp
or
or
or
or
or
or
or
pusha
sub
dec
nop
loopne
dec
xchg
mov
sub
data16
jl
pop
ret
aam
dec
jge
cmp
or
or
or
or
or
or
dec
dec
mov
cmp
sub
dec
nop
loopne
dec
inc
mov
dec
mov
or
inc
data16
jl
pop
ret
aam
nop
jge
cmp
or
or
rolb
sub
dec
nop
loopne
dec
xchg
mov
testl
jl
pop
ret
aam
out
jge
cmp
or
or
or
or
or
and
int3
sbb
loopne
dec
xchg
dec
mov
or
in
data16
jl
pop
ret
aam
cmp
or
or
or
or
or
or
or
push
cmp
or
hlt
or
int3
dec
xchg
mov
sub
cmp
jl
pop
ret
aam
add
or
or
or
loopne
dec
xchg
dec
mov
or
adc
insb
pop
ret
aam
popa
jl
cmp
or
or
dec
nop
loopne
dec
xchg
dec
mov
or
jne
cmp
jl
pop
ret
aam
inc
jl
cmp
or
or
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
pop
ret
aam
mov
or
or
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
pop
ret
aam
cmpl
or
shrb
nop
loopne
dec
xchg
dec
mov
or
lea
cmp
ret
aam
fnstcw
or
or
or
or
or
or
or
push
cmp
loopne
dec
xchg
mov
sub
cmp
jl
pop
ret
aam
sub
cmp
or
or
or
or
or
or
dec
mov
mov
cmp
push
cmp
loopne
dec
xchg
dec
testl
jl
pop
ret
aam
jno
cmp
or
or
or
push
cmp
loopne
dec
xchg
pusha
testl
jl
pop
ret
aam
dec
jae
cmp
or
or
or
or
or
or
dec
mov
dec
mov
mov
cmp
lods
cmp
cmp
dec
dec
mov
cmp
sub
dec
mov
mov
cmp
js
push
mov
cmp
loopne
dec
inc
mov
cmp
dec
dec
cmpb
cmp
or
xchg
cmp
jl
pop
ret
aam
in
jae
cmp
or
or
or
or
dec
mov
sub
dec
mov
mov
cmp
jl
pop
mov
cmp
loopne
dec
xchg
mov
sub
cmp
inc
add
dec
mov
testl
jl
pop
ret
aam
and
cmp
dec
mov
mov
cmp
push
cmp
loopne
dec
xchg
mov
sub
pop
cmp
jl
pop
ret
aam
jno
cmp
or
or
or
fs
dec
mov
dec
mov
in
mov
cmp
loopne
dec
xchg
mov
sub
pop
cmp
jl
pop
ret
aam
mov
or
or
or
or
or
or
dec
subl
inc
enter
inc
mov
xor
sub
cmp
pop
dec
nop
loopne
dec
xchg
dec
mov
or
lods
pop
cmp
jl
pop
ret
aam
clc
jb
cmp
or
or
or
or
or
or
aam
int3
je
cmp
shrb
nop
loopne
dec
xchg
mov
testl
jl
fs
aam
shll
or
or
or
aam
sbb
cmp
shrb
nop
loopne
dec
xchg
dec
mov
or
lds
cmp
ret
aam
adc
cmp
or
or
dec
mov
sub
dec
mov
inc
add
cmp
dec
nop
loopne
dec
xchg
mov
testl
jl
fs
aam
data16
cmp
or
shrb
nop
loopne
dec
xchg
dec
mov
or
insl
pop
cmp
jl
fs
aam
mov
or
or
or
or
or
or
dec
mov
sub
dec
nop
loopne
dec
xchg
mov
testl
jl
fs
aam
mov
cmp
or
or
or
or
or
or
dec
mov
sub
dec
nop
loopne
dec
xchg
mov
testl
jl
fs
aam
fnstenv
cmp
or
or
or
or
or
or
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
gs
aam
xor
cmp
or
or
dec
jno
cmp
cmp
dec
nop
loopne
dec
inc
mov
cmp
dec
dec
mov
cmp
testl
jl
gs
aam
add
cmp
or
or
shrb
mov
sub
dec
nop
loopne
dec
xchg
dec
mov
or
add
insb
gs
aam
push
jo
cmp
or
or
dec
or
cmp
loopne
dec
xchg
dec
mov
testl
jl
retw
aam
test
or
or
or
or
or
or
dec
add
cmp
rolb
sub
dec
add
push
mov
rolb
fadd
les
dec
mov
inc
add
fadd
les
dec
mov
dec
nop
loopne
dec
xchg
mov
testl
jl
retw
aam
jo
cmp
or
dec
subl
sub
and
cmp
int3
pop
dec
nop
loopne
dec
xchg
dec
mov
or
les
cmp
ret
aam
adc
cmp
or
or
hlt
cmp
cmp
dec
jno
cmp
cmp
dec
nop
loopne
dec
xchg
dec
dec
cwtl
cmp
cmp
or
or
cmp
dec
mov
or
jp
cmp
jl
addr16
aam
push
ja
cmp
or
int3
sub
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
addr16
aam
test
or
or
or
or
or
or
dec
or
cmp
loopne
dec
xchg
dec
mov
or
lods
pop
cmp
jl
addr16
aam
stc
ja
cmp
or
or
or
or
or
or
dec
adc
cmp
sub
and
lret
inc
enter
inc
mov
shrb
dec
nop
loopne
dec
xchg
dec
mov
or
in
cmp
jl
pusha
ret
aam
xor
cmp
or
or
shrb
add
jns
cmp
push
cmp
loopne
dec
xchg
pusha
testl
jl
pusha
ret
aam
jle
cmp
or
or
or
or
or
dec
mov
mov
cmp
or
dec
nop
loopne
dec
xchg
mov
sub
pop
cmp
jl
pusha
ret
aam
inc
jbe
cmp
or
or
dec
nop
loopne
dec
xchg
dec
mov
or
push
pop
cmp
jl
popa
ret
aam
mov
or
or
dec
nop
loopne
dec
xchg
dec
mov
or
mov
cmp
jl
popa
ret
aam
xorl
or
dec
nop
loopne
dec
xchg
dec
mov
or
xchg
pop
cmp
jl
popa
ret
aam
loope
cmp
or
or
or
loopne
dec
xchg
dec
mov
testl
jl
jbe
cmp
or
or
dec
mov
dec
mov
add
cmp
int3
dec
xchg
dec
mov
or
cmp
cmp
ret
aam
push
jne
cmp
or
xor
dec
cmp
xor
add
cmp
int3
dec
xchg
dec
mov
or
or
cmp
ret
aam
data16
cmp
or
xor
insb
cmpb
dec
mov
add
cmp
int3
dec
xchg
dec
mov
or
pop
pop
cmp
jl
jne
cmp
or
push
sub
dec
nop
loopne
dec
inc
hlt
cmp
cmp
call
or
mov
cmp
jl
jne
cmp
or
or
or
dec
mov
sbb
int3
dec
xchg
mov
sub
pop
cmp
inc
add
dec
mov
or
clc
pop
cmp
jl
arpl
aam
aam
cmp
dec
mov
sub
dec
mov
sub
dec
mov
sub
dec
nop
loopne
dec
xchg
dec
mov
or
int
cmp
jl
arpl
aam
sbb
or
or
or
or
or
or
or
xor
add
cmp
int3
dec
xchg
dec
mov
or
adc
cmp
ret
aam
outsb
je
cmp
or
or
or
or
or
push
cmp
loopne
dec
xchg
pop
testl
jl
arpl
aam
mov
or
or
or
or
or
or
dec
mov
sub
dec
mov
cmpl
dec
nop
loopne
dec
xchg
mov
sub
pop
cmp
inc
add
dec
mov
testl
jl
arpl
aam
cld
je
cmp
or
or
or
or
sbb
jl
cmp
dec
mov
cmpl
dec
dec
lods
cmp
cmp
dec
mov
pop
cmpl
dec
mov
push
cmpl
dec
nop
loopne
dec
inc
mov
dec
movsb
cmp
cmp
or
aam
cmp
jl
insb
ret
aam
and
cmp
or
or
loopne
dec
xchg
mov
testl
jl
add
imul
or
or
or
cld
cmp
cmp
dec
nop
loopne
dec
inc
lock
cmp
hlt
cmp
cmp
or
add
cmp
jl
insb
ret
aam
push
imul
or
or
dec
mov
inc
add
cmp
rolb
sub
dec
xorl
cmp
int3
dec
xchg
mov
testl
jl
insb
ret
aam
nop
imul
or
or
dec
mov
sub
dec
mov
cmpb
dec
nop
loopne
dec
xchg
push
pop
cmp
inc
add
dec
mov
testl
jl
insb
ret
aam
fsubrl
cmp
or
or
or
or
pusha
sub
dec
nop
loopne
dec
xchg
mov
sub
pop
cmp
jl
insl
ret
aam
sub
cmp
or
or
or
or
or
or
dec
mov
lods
cmpb
dec
mov
dec
mov
pushf
cmpb
dec
dec
mov
cmp
sub
dec
dec
lods
cmp
cmp
dec
mov
cmpb
dec
nop
loopne
dec
inc
in
cmp
dec
dec
fdivrs
cmp
testl
jl
insl
ret
aam
dec
push
cmp
or
or
or
or
dec
mov
dec
nop
loopne
dec
xchg
dec
mov
or
dec
push
cmp
jl
insl
ret
aam
cltd
push
cmp
or
or
or
or
or
or
dec
dec
sarb
cmp
sub
dec
mov
cmpl
sub
dec
dec
pusha
cmp
cmp
dec
dec
mov
cmp
sub
dec
dec
sbb
cmp
sub
dec
mov
pop
cmpl
cmp
cmp
dec
mov
dec
cmpl
cmp
cmp
dec
dec
add
cmp
sub
dec
dec
cmp
cmp
sub
dec
dec
hlt
cmp
cmp
dec
dec
lods
cmp
cmp
dec
nop
loopne
dec
inc
aam
cmp
dec
dec
enter
testl
jl
outsb
ret
aam
imul
add
enter
cmp
int3
dec
xchg
dec
mov
or
bound
cmp
ret
aam
mov
or
or
or
or
or
sub
cmpsl
sbb
cmp
int3
pop
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
outsb
ret
aam
subb
or
or
dec
subl
xchg
sub
sbb
cmp
int3
pop
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
outsl
ret
aam
shrb
cmp
or
or
shrb
nop
loopne
dec
xchg
dec
mov
or
fstl
cmp
ret
aam
sub
cmp
or
or
or
or
or
or
dec
subl
xchg
sub
sbb
cmp
int3
pop
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
outsl
ret
aam
jo
cmp
or
or
dec
mov
sub
dec
nop
loopne
dec
xchg
dec
mov
or
jge
cmp
jl
outsl
ret
aam
dec
push
or
or
or
or
or
or
int3
sub
dec
addl
inc
leave
les
add
dec
mov
xchg
sub
pop
aas
cmp
dec
orl
cmp
loopne
dec
xchg
mov
testl
jl
push
push
or
or
or
or
or
loopne
dec
dec
mov
testl
jl
add
push
or
or
dec
or
cmp
and
and
cmp
sbb
sbb
cmp
sub
adc
cmp
rclb
pop
dec
orl
cmp
loopne
dec
xchg
mov
or
sub
cmp
ret
aam
push
outsl
cmp
or
dec
subl
cmpl
sbbl
inc
popa
cmp
or
mov
subl
lods
popa
cmp
and
movsb
popa
cmp
add
pushf
popa
cmp
int3
inc
and
lret
inc
enter
inc
mov
shrb
dec
or
cmp
popf
pop
dec
or
cmp
popf
pop
dec
andl
cmp
xchg
sub
push
cmp
popf
pop
dec
or
cmp
popf
pop
dec
or
cmp
popf
pop
dec
or
cmp
popf
pop
dec
nop
loopne
dec
xchg
pop
testl
jl
imul
cmp
or
or
or
or
fsubrs
dec
adc
cmp
sbb
and
lret
inc
enter
inc
mov
shrb
dec
nop
loopne
dec
xchg
dec
mov
or
sbb
cmp
jl
imul
cmp
or
or
or
or
or
or
dec
subl
enter
inc
mov
shrb
dec
nop
loopne
dec
xchg
mov
testl
jl
imul
cmp
or
or
or
or
or
or
dec
add
add
cmp
rolb
sub
dec
mov
inc
add
cmp
inc
add
cmp
inc
add
sub
dec
add
mov
cmp
rolb
sub
dec
add
les
pop
dec
add
les
pop
dec
mov
inc
add
sub
dec
add
les
dec
nop
loopne
dec
xchg
mov
testl
jl
imul
cmp
or
or
or
or
or
or
or
or
loopne
dec
xchg
dec
mov
or
add
test
aam
push
insl
cmp
or
or
or
shrb
nop
loopne
dec
xchg
dec
mov
or
pop
push
cmp
jl
push
aam
test
or
or
or
or
or
or
dec
add
cmp
loopne
dec
xchg
mov
testl
jl
push
aam
stc
insl
cmp
or
or
or
or
or
or
or
rolb
sub
dec
nop
loopne
dec
xchg
dec
mov
or
repnz
cmp
jl
push
aam
into
insl
cmp
or
or
or
or
or
dec
mov
inc
add
sub
dec
nop
loopne
dec
xchg
mov
testl
jl
push
aam
push
insb
cmp
or
or
or
or
or
dec
adc
cmp
sub
and
lret
inc
enter
inc
mov
shrb
dec
nop
loopne
dec
xchg
dec
mov
or
add
cmp
jl
imul
sub
or
or
dec
or
cmp
or
leave
les
or
dec
mov
xchg
sub
jnp
cmp
dec
nop
loopne
dec
xchg
mov
testl
jl
imul
sub
or
or
fsubrl
dec
andl
inc
enter
inc
mov
shrb
dec
nop
loopne
dec
xchg
mov
testl
jl
imul
sub
or
or
dec
mov
cmp
sbb
add
cmp
loopne
dec
xchg
mov
testl
jl
imul
sub
or
or
or
shrb
nop
loopne
dec
xchg
dec
mov
or
sub
sub
aam
jns
cmp
or
or
or
or
or
or
or
and
and
lret
inc
enter
inc
mov
shrb
dec
subl
cmp
loopne
dec
xchg
dec
mov
or
fs
cmp
jl
je
aam
mov
cmp
or
or
dec
add
cmp
loopne
dec
xchg
dec
mov
or
mov
mov
sub
or
or
or
or
or
or
or
int3
sub
dec
nop
loopne
dec
xchg
dec
mov
or
lea
jl
je
aam
fldenv
cmp
or
or
or
or
or
or
dec
mov
cmp
loopne
dec
xchg
mov
testl
jl
je
aam
sub
cmp
or
or
or
or
or
or
dec
subl
dec
xchg
mov
testl
jl
je
aam
jns
cmp
or
or
or
or
or
or
or
sub
dec
nop
loopne
dec
xchg
mov
testl
jl
je
aam
dec
bound
cmp
or
or
or
or
or
or
dec
subl
inc
into
cmp
loopne
dec
xchg
dec
mov
or
inc
dec
cmp
jl
jne
aam
xchg
bound
cmp
or
or
dec
add
cmp
rolb
sub
dec
mov
inc
add
sub
lods
fs
scas
orb
inc
add
xchg
sub
pop
cmp
pop
dec
nop
loopne
dec
xchg
mov
testl
jl
jne
aam
lds
cmp
dec
mov
sub
dec
mov
sub
dec
mov
sub
dec
nop
loopne
dec
xchg
mov
sub
dec
cmp
inc
add
dec
mov
or
sub
cmp
ret
aam
add
cmp
dec
mov
push
cmp
int3
dec
xchg
pusha
testl
inc
add
dec
mov
testl
jl
jne
aam
push
popa
cmp
dec
subl
xchg
sub
adc
cmp
int3
pop
dec
nop
loopne
dec
xchg
dec
mov
or
push
dec
cmp
jl
jbe
aam
mov
or
or
shrb
nop
loopne
dec
xchg
mov
testl
jl
jbe
aam
stc
popa
cmp
or
or
or
or
or
or
or
mov
cmp
sub
dec
nop
loopne
dec
inc
mov
dec
mov
or
hlt
dec
cmp
jl
jbe
aam
shlb
or
or
dec
dec
mov
cmp
sub
dec
nop
loopne
dec
inc
mov
dec
mov
or
les
cmp
ret
aam
adc
cmp
or
or
mov
cmp
sub
dec
nop
loopne
dec
inc
mov
dec
mov
or
adc
cmp
jl
jbe
aam
pusha
pusha
cmp
or
or
dec
mov
dec
nop
loopne
dec
xchg
dec
mov
or
insl
dec
cmp
jl
ja
aam
mov
or
or
or
or
or
or
dec
add
cmp
loopne
dec
xchg
mov
testl
jl
ja
aam
mov
cmp
or
or
or
or
or
or
dec
mov
or
cmp
dec
mov
dec
nop
loopne
dec
xchg
mov
sub
dec
cmp
jl
ja
aam
shll
cmp
or
or
dec
mov
cmp
dec
mov
push
cmp
dec
nop
loopne
dec
xchg
mov
sub
dec
cmp
jl
ja
aam
and
cmp
or
or
dec
add
cmp
popf
pop
dec
nop
loopne
dec
xchg
mov
testl
jl
ja
aam
jle
cmp
or
or
or
or
or
dec
xorl
cmp
int3
dec
xchg
dec
mov
or
jb
cmp
jl
jo
aam
dec
cmp
or
or
or
or
or
dec
add
cmp
popf
pop
dec
nop
loopne
dec
xchg
mov
testl
jl
jo
aam
sahf
cmp
or
or
or
or
or
dec
mov
sbb
cmp
dec
nop
loopne
dec
xchg
jo
or
popf
dec
cmp
jl
jo
aam
jmp
or
or
or
or
or
or
dec
add
cmp
loopne
dec
xchg
dec
mov
or
in
dec
cmp
jl
jo
aam
cmp
cmp
or
or
or
or
or
or
dec
subl
and
lret
inc
enter
inc
mov
shrb
dec
nop
loopne
dec
xchg
mov
testl
jl
jo
aam
jo
cmp
or
or
dec
mov
dec
mov
hlt
cmp
dec
mov
cmp
dec
mov
in
cmp
dec
nop
loopne
dec
xchg
mov
or
pop
dec
cmp
jl
jno
aam
mov
cmp
or
dec
mov
sub
dec
nop
loopne
dec
xchg
dec
mov
or
mov
clc
jno
aam
mov
cmp
or
or
or
or
or
or
dec
xorl
cmp
sub
dec
nop
loopne
dec
xchg
dec
mov
or
cli
dec
cmp
jl
jno
aam
data16
or
dec
add
xchg
sub
adc
cmp
int3
pop
dec
nop
loopne
dec
xchg
dec
mov
or
aam
cmp
jl
jno
aam
and
cmp
or
or
js
lods
pop
aas
cmp
or
movsb
cmp
jae
or
cmp
int3
dec
xchg
mov
sub
dec
cmp
jl
jno
aam
imul
or
or
or
or
or
dec
or
cmp
add
in
aas
cmp
add
inc
pop
aas
cmp
int3
pop
dec
mov
sub
dec
xorl
cmpl
mov
sub
dec
nop
loopne
dec
xchg
mov
sub
dec
cmp
jl
jb
aam
andb
or
or
dec
add
cmp
loopne
dec
xchg
dec
mov
or
lea
cmp
ret
aam
fldenv
cmp
or
or
or
or
or
or
dec
add
aas
cmp
dec
add
cmp
loopne
dec
xchg
dec
mov
or
lret
dec
cmp
jl
jb
aam
daa
cmp
or
or
xor
or
cmp
loopne
dec
xchg
mov
testl
jl
jb
aam
jns
cmp
or
or
or
or
or
or
or
and
popf
pop
dec
subl
dec
xchg
dec
mov
or
push
cmp
jl
jb
aam
inc
cmp
or
dec
add
aas
cmp
dec
nop
loopne
dec
xchg
mov
testl
jl
jae
aam
lahf
cmp
or
or
or
or
or
or
rclb
dec
add
les
dec
add
les
dec
add
les
pop
dec
nop
loopne
dec
xchg
mov
testl
jl
jae
aam
cmp
or
dec
nop
loopne
dec
xchg
dec
mov
or
aad
cmp
jl
jae
aam
and
cmp
or
or
dec
nop
loopne
dec
xchg
dec
mov
or
xor
sarb
sub
or
or
or
rolb
sub
dec
nop
loopne
dec
xchg
mov
testl
jl
jl
aam
pop
pop
cmp
or
or
or
or
or
dec
add
aas
cmp
dec
nop
loopne
dec
xchg
dec
mov
or
push
dec
cmp
jl
jl
aam
scas
pop
cmp
or
or
or
or
or
or
or
dec
sbbl
mov
cmp
int3
dec
xchg
dec
mov
or
popf
dec
cmp
jl
jl
aam
jmp
or
or
or
or
or
or
dec
or
cmp
sub
aam
aas
cmp
sub
adc
int3
pop
dec
mov
sub
dec
sbbl
jae
cmp
shrb
nop
loopne
dec
xchg
dec
mov
or
xor
cmp
jl
jge
aam
add
cmp
or
or
shrb
nop
loopne
dec
xchg
mov
testl
jl
jge
aam
pop
pop
cmp
or
or
or
or
or
or
or
rolb
sub
dec
mov
inc
add
sub
dec
nop
loopne
dec
xchg
dec
mov
or
dec
inc
cmp
jl
jge
aam
fwait
pop
cmp
or
or
or
or
or
or
or
or
add
dec
adcl
cld
adc
int3
dec
xchg
mov
sub
inc
cmp
jl
jge
aam
fstps
cmp
or
or
or
or
or
or
dec
add
cmp
loopne
dec
xchg
mov
testl
jl
jge
aam
sub
cmp
or
or
or
or
or
or
dec
add
cmp
loopne
dec
xchg
dec
mov
or
sub
cmp
ret
aam
jns
cmp
or
or
or
or
or
or
or
rolb
sub
dec
mov
inc
add
sub
dec
nop
loopne
dec
xchg
mov
testl
jl
jle
aam
mov
or
or
or
or
or
or
or
dec
add
cmp
dec
nop
loopne
dec
xchg
mov
testl
jl
jle
aam
pop
cmp
or
or
or
or
or
or
int3
sub
dec
adcl
inc
leave
les
adc
dec
mov
xchg
sub
ja
cmp
dec
nop
loopne
dec
xchg
mov
testl
jl
jle
aam
pop
cmp
or
or
sub
or
cmp
xchg
sub
inc
cmp
popf
pop
dec
nop
loopne
dec
xchg
dec
mov
or
cmp
cmp
ret
aam
push
pop
cmp
or
dec
andl
dec
xchg
dec
mov
or
sbb
sub
aam
imul
or
or
or
or
or
dec
inc
add
cmp
sub
dec
nop
loopne
dec
inc
jo
cmp
dec
dec
je
cmp
testl
jl
jg
aam
mov
cmp
or
or
dec
subl
sub
inc
cmp
popf
pop
dec
nop
loopne
dec
xchg
dec
mov
or
stos
inc
cmp
jl
jg
aam
xchg
cmp
or
shrb
add
jns
cmp
inc
add
sub
dec
add
arpl
loopne
dec
xchg
dec
mov
or
in
inc
cmp
jl
jg
aam
cmp
cmp
or
or
or
or
or
or
rolb
sub
dec
add
push
cmp
dec
nop
loopne
dec
xchg
dec
mov
or
das
inc
cmp
jl
jg
aam
jnp
cmp
or
or
or
or
or
or
or
or
push
cmp
fs
dec
nop
loopne
dec
xchg
mov
sub
inc
cmp
jl
js
aam
inc
pop
cmp
or
or
or
xor
sub
inc
cmp
popf
pop
dec
nop
loopne
dec
xchg
dec
mov
or
inc
inc
cmp
jl
js
aam
sahf
pop
cmp
or
or
or
or
or
dec
mov
dec
mov
sub
dec
nop
loopne
dec
xchg
dec
mov
or
xchg
inc
cmp
jl
js
aam
loope
cmp
or
or
or
and
dec
mov
dec
orl
cmp
loopne
dec
xchg
mov
testl
jl
js
aam
sub
cmp
or
or
or
or
or
or
sub
sub
pop
dec
nop
loopne
dec
dec
mov
testl
jl
jns
aam
jl
cmp
or
or
or
or
dec
add
aas
cmp
dec
nop
loopne
dec
xchg
dec
mov
or
jae
cmp
jl
jns
aam
dec
pop
cmp
or
or
or
or
or
or
js
or
aas
cmp
or
sub
mov
cmp
dec
mov
mov
nop
loopne
dec
xchg
mov
sub
inc
cmp
jl
jns
aam
pop
cmp
or
or
or
or
or
or
int3
xchg
sub
mov
cmp
dec
mov
sub
dec
addl
xchg
sub
or
cmp
int3
pop
dec
mov
sub
dec
xorl
cmpl
mov
sub
dec
nop
loopne
dec
xchg
mov
sub
inc
cmp
jl
jns
aam
es
cmp
or
dec
add
aas
cmp
dec
nop
loopne
dec
xchg
dec
mov
or
and
cmp
ret
aam
jg
cmp
or
or
or
or
or
or
shrb
nop
loopne
dec
xchg
mov
testl
jl
jp
aam
dec
pop
cmp
or
or
or
or
or
or
or
rclb
dec
nop
loopne
dec
xchg
mov
testl
jl
jp
aam
lahf
pop
cmp
or
or
or
or
or
or
mov
loope
cmp
push
cmp
cmp
les
push
cmp
cmp
dec
inc
mov
rclb
pop
dec
dec
nop
cmp
cmp
dec
inc
dec
cmp
cmp
popf
pop
dec
jno
cmp
cmp
dec
nop
loopne
dec
inc
mov
cmp
dec
dec
mov
cmp
testl
inc
add
dec
mov
testl
jl
jp
aam
adc
dec
add
mov
nop
loopne
dec
xchg
mov
testl
jl
jp
aam
outsb
pop
cmp
or
or
or
or
or
dec
add
mov
add
cmp
shrb
nop
loopne
dec
xchg
dec
mov
or
push
inc
cmp
jl
jnp
aam
scas
pop
cmp
or
or
or
or
or
dec
subl
dec
xchg
dec
mov
or
lods
inc
cmp
jl
jnp
aam
stc
pop
cmp
or
or
or
or
or
or
or
sub
dec
or
cmp
popf
pop
dec
nop
loopne
dec
xchg
dec
mov
or
ljmp
ret
aam
pop
cmp
or
dec
subl
les
cmp
int3
dec
xchg
dec
mov
or
lds
cmp
ret
aam
adc
cmp
or
or
dec
mov
dec
xorl
push
cmp
xor
add
sub
dec
xorl
push
cmp
xor
add
sub
dec
nop
loopne
dec
xchg
mov
testl
jl
add
aam
inc
push
cmp
or
dec
xorl
cmp
int3
dec
xchg
mov
testl
jl
add
aam
xchg
push
cmp
or
or
or
sub
fsubl
cmp
sub
dec
sbbl
dec
xchg
mov
testl
jl
add
aam
fsts
cmp
or
or
or
or
or
or
dec
subl
cmp
loopne
dec
xchg
dec
mov
or
fldl
jl
add
aam
sub
cmp
or
or
or
or
or
or
dec
nop
loopne
dec
xchg
dec
mov
or
xor
add
dec
mov
or
and
add
push
cmp
or
or
or
or
dec
nop
loopne
dec
xchg
dec
mov
or
add
add
dec
mov
or
jo
cmp
jl
add
push
cmp
or
or
or
or
dec
dec
add
cmp
sub
dec
dec
and
cmp
sub
dec
dec
insb
cmp
cmp
dec
dec
dec
cmp
cmp
dec
dec
cmp
cmp
sub
dec
nop
loopne
dec
inc
inc
cmp
cmp
mov
or
nop
mov
add
push
cmp
or
or
or
or
dec
add
cmp
shrb
mov
inc
add
cmp
push
cmp
fs
dec
nop
loopne
dec
xchg
mov
sub
mov
add
push
cmp
or
or
or
or
or
dec
nop
loopne
dec
xchg
dec
mov
or
and
add
dec
mov
or
adc
add
push
cmp
or
or
or
or
dec
nop
loopne
dec
xchg
dec
mov
or
jne
cmp
inc
add
dec
mov
or
pusha
mov
add
push
cmp
or
or
or
or
dec
mov
sub
dec
andl
pop
dec
mov
xchg
cmp
loopne
dec
xchg
mov
sub
mov
add
push
cmp
or
or
or
or
or
or
enter
sub
cmp
dec
mov
sub
dec
subl
xchg
sub
add
cmp
int3
pop
dec
sbbl
or
int3
sub
dec
mov
sub
dec
nop
loopne
dec
xchg
dec
mov
or
cmp
push
ret
aam
push
push
cmp
or
dec
or
aas
cmp
dec
nop
loopne
dec
xchg
dec
mov
or
adc
push
ret
aam
outsl
push
cmp
or
or
or
or
or
or
jo
insb
and
cmp
add
sub
inc
aas
cmp
dec
mov
inc
push
cmp
sub
dec
nop
loopne
dec
xchg
mov
sub
mov
push
ret
aam
cmpsl
push
cmp
or
or
jo
mov
cmp
add
sub
inc
aas
cmp
dec
mov
orb
cmp
add
ljmp
int3
dec
xchg
mov
sub
mov
push
ret
aam
out
cmp
or
or
int3
xchg
sub
inc
aas
cmp
dec
or
cmp
loopne
dec
xchg
dec
mov
or
fstpt
pop
ret
aam
aaa
push
cmp
or
or
shrb
nop
loopne
dec
xchg
mov
testl
jl
pop
ret
aam
or
cmp
or
or
or
or
or
or
dec
or
aas
cmp
dec
mov
sub
dec
subl
xchg
sub
add
cmp
int3
pop
dec
or
cmp
loopne
dec
xchg
dec
mov
or
bound
pop
ret
aam
mov
or
or
or
or
or
int3
xchg
sub
inc
aas
cmp
dec
or
cmp
loopne
dec
xchg
mov
testl
jl
pop
ret
aam
xchg
cmp
or
dec
add
rorl
dec
add
cmp
shrb
add
cmp
loopne
dec
xchg
dec
mov
or
ljmp
ret
aam
push
cmp
or
dec
dec
pushf
cmp
cmp
dec
jno
cmp
cmp
dec
inc
mov
sub
mov
dec
dec
clc
cmp
cmp
dec
mov
sub
dec
dec
pushf
cmp
cmp
dec
nop
loopne
dec
xchg
dec
dec
mov
cmp
testl
dec
mov
testl
jl
add
aam
push
push
cmp
or
or
or
dec
add
aas
cmp
dec
nop
loopne
dec
dec
mov
testl
jl
add
aam
test
cmp
or
or
or
or
or
or
dec
add
aas
cmp
dec
nop
loopne
dec
xchg
mov
testl
jl
add
aam
call
cmp
or
or
or
or
or
dec
mov
sub
dec
addl
cmp
dec
mov
rorb
int3
dec
xchg
mov
sub
mov
add
aam
aas
push
cmp
or
or
or
or
or
or
push
cmp
jl
sub
fidivrl
cmp
dec
mov
adc
cmp
int3
dec
xchg
mov
sub
mov
add
aam
jg
cmp
or
or
or
or
or
or
int3
xchg
sub
fidivrl
cmp
dec
mov
sub
dec
xorl
sub
pop
aas
cmp
int3
pop
dec
mov
sub
dec
andl
subl
mov
sub
dec
nop
loopne
dec
xchg
dec
testl
jl
add
aam
xchg
push
cmp
or
dec
or
aas
cmp
dec
mov
sub
dec
subl
sub
pop
aas
cmp
int3
pop
dec
mov
sub
dec
sbbl
andl
mov
sub
dec
nop
loopne
dec
xchg
inc
testl
jl
add
aam
ss
cmp
or
dec
add
aas
cmp
dec
nop
loopne
dec
xchg
dec
mov
or
xor
add
aam
andps
cmp
or
or
or
or
or
dec
mov
sub
dec
adcl
insb
add
int3
dec
xchg
mov
sub
mov
add
aam
dec
push
cmp
or
or
or
or
or
or
or
js
pop
aas
cmp
or
hlt
sarl
dec
mov
lods
add
int3
dec
xchg
mov
sub
mov
add
aam
mov
or
or
or
or
or
or
or
rclb
dec
nop
loopne
dec
xchg
dec
mov
or
cmpl
ret
aam
fists
or
or
or
or
or
or
enter
bound
cmp
dec
mov
sub
dec
andl
sub
add
int3
pop
dec
nop
loopne
dec
xchg
dec
mov
or
cmp
ret
aam
push
dec
cmp
or
dec
nop
loopne
dec
xchg
dec
mov
or
and
jl
ret
aam
jno
cmp
or
or
or
enter
bound
cmp
dec
nop
loopne
dec
xchg
dec
mov
or
jae
cmp
jl
add
aam
dec
dec
cmp
or
or
or
or
or
or
dec
xorl
cmp
int3
dec
xchg
dec
mov
or
inc
mov
or
aam
xchg
dec
cmp
or
or
or
sub
pop
clc
cmp
sub
incl
int3
pop
dec
nop
loopne
dec
xchg
mov
testl
jl
or
aam
fmuls
cmp
or
or
or
or
or
or
loopne
dec
xchg
dec
mov
or
in
cmp
jl
or
aam
xor
cmp
or
or
dec
mov
dec
nop
loopne
dec
xchg
mov
testl
jl
or
aam
or
cmp
or
or
or
or
or
or
dec
mov
dec
mov
dec
nop
loopne
dec
xchg
mov
testl
jl
or
dec
cmp
or
or
or
sub
dec
dec
cmp
shrb
nop
loopne
dec
xchg
mov
testl
jl
or
dec
cmp
or
or
or
jl
cld
dec
cmp
loopne
dec
xchg
mov
sub
mov
cmp
ret
aam
stc
dec
cmp
or
or
or
or
or
or
or
mov
cmp
sub
dec
addl
pop
dec
dec
mov
cmp
sub
dec
nop
loopne
dec
inc
test
cmp
dec
dec
lods
cmp
cmp
or
fbstp
or
dec
cmp
or
or
or
or
or
or
or
or
rclb
dec
nop
loopne
dec
xchg
dec
mov
or
and
or
dec
cmp
or
or
or
or
or
or
enter
repz
cmp
dec
mov
sub
dec
subl
xchg
sub
jnp
cmp
int3
pop
dec
sbbl
mov
int3
sub
dec
mov
sub
dec
nop
loopne
dec
xchg
dec
mov
or
mov
cld
push
ret
aam
xchg
dec
cmp
or
dec
or
aas
cmp
dec
nop
loopne
dec
xchg
mov
testl
jl
push
ret
aam
out
dec
cmp
or
or
or
or
or
or
pusha
sub
dec
xorl
pop
dec
mov
ret
cmp
loopne
dec
xchg
mov
sub
mov
cmp
ret
aam
das
dec
cmp
or
or
or
or
or
or
int3
xchg
sub
fidivrs
cmp
dec
mov
sub
dec
subl
sub
jp
cmp
int3
pop
dec
mov
sub
dec
sbbl
cmp
adc
dec
mov
sub
dec
nop
loopne
dec
xchg
mov
testl
jl
push
ret
aam
inc
dec
cmp
or
dec
add
aas
cmp
dec
nop
loopne
dec
xchg
dec
mov
or
inc
mov
cmp
ret
aam
lahf
dec
cmp
or
or
or
or
or
or
inc
sub
dec
adcl
mov
cld
push
cmp
int3
dec
inc
mov
dec
mov
or
xchg
aam
rorl
cmp
or
or
or
dec
adc
cmp
dec
or
cmp
rolb
sub
dec
mov
inc
add
sub
dec
nop
loopne
dec
xchg
dec
mov
or
cmp
insb
aam
or
cmp
or
or
or
or
or
or
dec
adc
cmp
dec
jno
cmp
cmp
dec
inc
sbb
cmp
xchg
dec
dec
and
cmp
xchg
sub
jns
cmp
int3
pop
dec
nop
loopne
dec
inc
or
cmp
dec
dec
or
cmp
testl
jl
aam
mov
cmp
or
or
aam
sub
and
cmp
dec
nop
loopne
dec
xchg
mov
testl
jl
or
aam
dec
cmp
or
or
or
or
or
or
mov
cmp
sub
dec
mov
dec
dec
mov
jbe
cmp
dec
sbbl
pop
dec
mov
dec
dec
mov
push
out
cmp
and
dec
dec
cmpsl
cmp
cmp
dec
nop
loopne
dec
inc
cwtl
cmp
cmp
pushf
cmp
cmp
or
cmp
or
aam
adc
dec
adc
cmp
dec
or
cmp
rolb
sub
dec
mov
inc
add
sub
dec
add
les
pop
dec
nop
loopne
dec
xchg
mov
testl
jl
or
aam
mov
or
or
or
or
or
or
or
enter
daa
cmp
dec
nop
loopne
dec
xchg
dec
mov
or
mov
cmp
jl
or
aam
dec
cmp
or
or
or
or
or
or
int3
xchg
sub
gs
dec
mov
sub
dec
subl
xchg
sub
js
cmp
int3
pop
dec
nop
loopne
dec
xchg
dec
mov
or
ljmp
ret
aam
dec
cmp
or
dec
or
cmp
dec
mov
sub
dec
subl
xchg
sub
jg
cmp
int3
pop
dec
nop
loopne
dec
xchg
mov
testl
jl
or
aam
push
dec
cmp
or
dec
adc
cmp
dec
nop
loopne
dec
xchg
dec
mov
or
add
or
aam
pop
dec
cmp
or
or
or
or
or
or
int3
xchg
sub
fs
dec
nop
loopne
dec
xchg
mov
testl
jl
or
aam
scas
dec
cmp
or
or
or
or
or
or
aam
sub
fs
dec
sbbl
cmp
dec
nop
loopne
dec
xchg
push
testl
jl
or
aam
cmc
dec
cmp
or
int3
xchg
sub
fs
dec
nop
loopne
dec
xchg
dec
mov
or
repz
cmp
ret
aam
iret
dec
cmp
or
or
or
or
or
or
rclb
dec
nop
loopne
dec
xchg
dec
mov
or
ret
mov
cmp
ret
aam
pop
dec
cmp
or
or
or
or
or
or
enter
pop
cmp
dec
nop
loopne
dec
xchg
dec
mov
or
adc
or
aam
outsl
dec
cmp
or
or
or
or
or
or
adc
dec
nop
loopne
dec
xchg
dec
mov
or
insl
mov
cmp
rorb
testl
jl
or
aam
mov
cmp
dec
subl
sub
pop
cmp
dec
nop
loopne
dec
xchg
dec
mov
or
stos
mov
cmp
ret
aam
xchg
or
or
rclb
dec
nop
loopne
dec
xchg
dec
mov
or
xorl
ret
aam
fisttps
or
or
or
or
or
or
shrb
add
sbb
cmp
loopne
dec
xchg
dec
mov
or
lret
cmp
ret
aam
es
cmp
or
dec
add
jno
cmp
inc
add
sub
dec
add
sub
cmp
rolb
sub
dec
nop
loopne
dec
xchg
mov
testl
jl
or
aam
pop
inc
cmp
or
or
or
or
or
rolb
sub
dec
or
cmp
popf
pop
dec
add
mov
nop
loopne
dec
xchg
dec
mov
or
inc
mov
cmp
ret
aam
nop
inc
cmp
or
or
dec
add
cmp
rolb
sub
dec
mov
inc
add
sub
lods
fs
scas
orb
inc
add
xchg
sub
mov
or
cmp
popf
pop
dec
nop
loopne
dec
xchg
dec
mov
or
out
cmp
jl
adc
aam
xor
cmp
or
or
or
shrb
nop
loopne
dec
xchg
dec
mov
or
cmp
hlt
adc
aam
or
cmp
or
or
or
or
or
or
dec
add
jno
cmp
int3
dec
xchg
dec
mov
or
add
adc
aam
pop
inc
cmp
or
or
or
or
or
dec
mov
popa
cmp
je
movsb
inc
cmp
adc
dec
nop
loopne
dec
xchg
mov
sub
stos
cmp
jl
adc
aam
cltd
inc
cmp
or
or
or
or
or
or
or
shrb
mov
inc
add
cmp
inc
add
sub
dec
mov
inc
add
fadd
les
dec
mov
inc
add
fadd
les
dec
nop
loopne
dec
xchg
dec
mov
or
jecxz
cmp
jl
adc
aam
aas
inc
cmp
or
or
or
or
or
or
shrb
nop
loopne
dec
xchg
dec
mov
or
cmp
aam
ret
aam
or
cmp
or
or
or
or
or
or
dec
xorl
cmp
int3
dec
xchg
mov
testl
jl
adc
inc
cmp
or
or
or
or
or
dec
add
loope
cmp
loopne
dec
xchg
dec
mov
or
push
stos
cmp
jl
adc
inc
cmp
or
or
or
or
or
dec
mov
inc
add
cmp
loopne
dec
xchg
dec
mov
or
mov
push
adc
inc
cmp
or
or
or
or
or
dec
cltd
sub
int3
sub
dec
dec
and
cmp
sub
dec
inc
in
cmp
sub
dec
jno
cmp
cmp
dec
inc
fdivrl
cmp
xchg
sub
stos
cmp
popf
pop
dec
dec
and
cmp
sub
dec
mov
sub
dec
nop
loopne
dec
xchg
dec
dec
cmpb
cmp
or
xor
mov
or
and
push
ret
aam
jg
cmp
or
or
or
or
or
or
loopne
dec
xchg
dec
mov
or
add
mov
push
inc
cmp
or
or
or
and
mov
nop
loopne
dec
xchg
dec
mov
or
pop
test
push
ret
aam
test
or
or
or
or
or
or
dec
subl
cmp
loopne
dec
xchg
dec
mov
or
lods
test
push
ret
aam
stc
inc
cmp
or
or
or
or
or
or
or
enter
mov
cmp
dec
mov
sub
dec
subl
xchg
sub
jb
cmp
int3
pop
dec
or
cmp
loopne
dec
xchg
mov
testl
jl
pop
ret
aam
cs
cmp
or
or
or
or
or
dec
or
aas
cmp
dec
or
cmp
loopne
dec
xchg
dec
mov
or
sbb
pop
ret
aam
ja
cmp
or
or
enter
mov
cmp
dec
or
cmp
loopne
dec
xchg
mov
testl
jl
pop
ret
aam
inc
inc
cmp
or
or
xor
or
cmp
loopne
dec
xchg
mov
testl
jl
pop
ret
aam
cltd
inc
cmp
or
or
or
or
or
or
or
aam
in
mov
and
dec
or
cmp
popf
pop
dec
sbbl
cmp
sbb
dec
or
cmp
dec
nop
loopne
dec
xchg
dec
mov
testl
jl
adc
aam
les
cmp
rolb
sub
dec
mov
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
sub
dec
add
sub
cmp
rolb
sub
dec
add
les
pop
dec
add
les
pop
dec
mov
inc
add
sub
dec
or
cmp
popf
pop
dec
add
les
dec
add
les
dec
mov
inc
add
sub
dec
mov
fnstsw
cmp
loopne
dec
xchg
mov
sub
scas
cmp
jl
adc
aam
cmc
inc
cmp
or
int3
sub
dec
inc
test
cmp
sub
dec
inc
test
cmp
sub
dec
nop
loopne
dec
inc
nop
cmp
cmp
xchg
cmp
cmp
or
fldcw
adc
aam
xor
dec
or
cmp
cwtl
cmp
cmp
dec
nop
loopne
dec
inc
nop
cmp
cmp
xchg
cmp
cmp
or
sub
cmp
jl
adc
aam
js
cmp
or
or
or
or
or
or
dec
sbbl
sub
scas
cmp
popf
pop
dec
sbbl
cmp
loopne
dec
xchg
mov
testl
jl
adc
aam
mov
or
or
or
or
or
add
cmp
sub
dec
inc
dec
cmp
cmp
popf
pop
dec
inc
dec
cmp
cmp
popf
pop
dec
inc
dec
cmp
cmp
popf
pop
dec
inc
pop
cmp
cmp
pop
dec
nop
loopne
dec
inc
dec
cmp
cmp
dec
cmp
cmp
or
std
scas
cmp
inc
add
dec
mov
or
call
or
ret
aam
les
cmp
int3
xchg
sub
cltd
aas
cmp
dec
or
les
dec
or
les
dec
or
les
pop
dec
or
les
pop
dec
or
cmp
popf
pop
dec
mov
sub
dec
nop
loopne
dec
xchg
dec
mov
or
js
cmp
jl
adc
aam
push
inc
cmp
dec
add
cmp
and
dec
subl
cmp
loopne
dec
xchg
dec
mov
or
dec
lods
cmp
jl
adc
aam
cltd
inc
cmp
or
or
or
or
or
or
or
int3
sub
dec
subl
dec
xchg
mov
testl
jl
adc
aam
loope
cmp
or
or
or
int3
sub
dec
inc
mov
cmp
sub
dec
inc
lods
cmp
cmp
dec
inc
lods
cmp
cmp
dec
inc
mov
cmp
xchg
sub
lods
cmp
popf
pop
dec
inc
cwtl
cmp
cmp
dec
nop
loopne
dec
inc
cmpb
cmp
test
cmp
testl
jl
adc
aam
jns
cmp
or
or
or
or
or
or
or
shrb
andl
cmp
sub
dec
nop
loopne
dec
xchg
dec
mov
or
insl
lods
cmp
jl
adc
aam
mov
or
or
or
or
or
or
dec
subl
test
adc
popf
pop
dec
sbbl
dec
xchg
dec
mov
or
lcall
ret
aam
idivb
dec
or
cmp
test
cmp
sub
dec
inc
pushf
cmp
cmp
dec
inc
pushf
cmp
cmp
dec
inc
mov
cmp
sub
dec
inc
xchg
cmp
cmp
dec
inc
test
cmp
sub
dec
inc
test
cmp
xchg
sub
lods
cmp
popf
pop
dec
nop
loopne
dec
inc
cld
cmp
cmp
lock
cmp
or
daa
mov
sbb
aam
jae
cmp
or
or
or
or
sub
dec
mov
loopne
dec
xchg
dec
mov
or
jge
cmp
jl
sbb
aam
dec
mov
or
or
or
or
or
or
sub
and
lret
inc
enter
inc
mov
enter
cmp
dec
adc
cmp
popf
pop
dec
adc
cmp
popf
pop
dec
adc
cmp
popf
pop
dec
andl
dec
xchg
dec
mov
or
mov
sbb
aam
out
cmp
or
or
in
insb
sarl
cmp
shrb
mov
sub
dec
nop
loopne
dec
xchg
dec
testl
inc
add
dec
mov
testl
jl
sbb
mov
sub
jl
cmp
and
je
cmp
loopne
dec
xchg
dec
mov
or
and
lock
mov
or
or
sub
dec
mov
cmp
and
inc
mov
cmp
and
in
sarl
cmp
loopne
dec
xchg
dec
mov
or
insl
mov
sbb
mov
or
or
or
or
or
or
int3
sub
dec
andl
dec
orl
dec
addl
dec
inc
mov
loope
cmp
mov
cmp
xchg
sub
mov
dec
mov
jnp
cmp
dec
mov
dec
adcl
dec
orl
dec
mov
sbb
dec
dec
mov
cmp
sub
dec
inc
test
cmp
sub
dec
nop
loopne
dec
inc
movsb
cmp
cmp
cwtl
cmp
cmp
or
shlb
dec
mov
or
xor
push
ret
aam
cmp
or
or
or
or
or
or
sub
pop
mov
cmp
loopne
dec
xchg
dec
mov
or
or
call
pop
mov
or
or
or
or
or
or
sub
dec
nop
loopne
dec
xchg
dec
mov
or
pop
mov
push
ret
aam
test
or
or
or
or
or
or
dec
andl
hlt
mov
cmp
loopne
dec
xchg
dec
mov
or
movsl
mov
push
ret
aam
icebp
mov
or
or
sahf
cmp
les
pop
or
or
or
sahf
cmp
rcrb
or
or
or
sahf
cmp
addr16
fwait
int3
aam
or
or
or
cmp
test
aam
xchg
stos
cmp
inc
add
sub
outsl
cmp
fwait
int3
aam
mov
aam
and
or
or
or
or
popf
cmp
addr16
int3
aam
or
or
or
popf
cmp
rcrb
pop
or
or
or
popf
cmp
fcompl
pop
or
or
or
les
inc
mov
aam
fxch
roll
aam
movsb
dec
ret
rorl
lods
sub
aam
sbb
rolb
fcomps
int3
aam
or
or
or
or
or
or
les
dec
mov
aam
fxch
rorl
aam
mov
ret
rcll
inc
sub
aam
pop
test
rolb
in
int3
aam
mov
aam
or
or
or
or
or
or
les
pop
mov
aam
ret
pop
mov
aam
or
or
or
or
or
or
jl
les
pusha
mov
aam
ret
pusha
mov
aam
or
or
or
or
or
or
jl
les
pusha
mov
aam
ret
pusha
mov
aam
or
or
or
or
or
or
sub
je
cmp
fsubl
test
or
or
or
or
or
sub
je
cmp
shlb
test
cmp
or
or
or
or
sbb
or
or
lods
add
ret
or
or
or
lods
je
ret
js
cmp
popf
pop
or
or
lods
fs
ret
push
pop
or
or
sub
pushf
cmp
addr16
fwait
int3
aam
or
or
or
pushf
cmp
addr16
int3
aam
or
or
or
pushf
cmp
addr16
fwait
int3
aam
or
or
or
cmp
and
ret
mov
add
sub
insl
cmp
fwait
int3
aam
mov
aam
and
or
or
or
or
pushf
cmp
test
pop
or
or
or
xchg
cmp
sbbb
or
or
or
xchg
cmp
mov
pop
or
or
or
les
inc
mov
aam
fxch
roll
aam
movsb
dec
ret
rorl
lods
sub
aam
sub
rolb
mov
int3
aam
or
or
or
or
or
or
les
dec
mov
aam
fxch
rorl
aam
mov
ret
rcll
inc
sub
aam
imul
add
xchg
fwait
int3
aam
mov
aam
or
or
or
or
or
or
les
pop
mov
aam
ret
pop
mov
aam
or
or
or
or
or
or
jl
les
pusha
mov
aam
ret
pusha
mov
aam
or
or
or
or
or
or
jl
les
pusha
mov
aam
ret
pusha
mov
aam
or
or
or
or
or
or
lods
les
sub
scas
cmp
popf
pop
or
or
sub
xchg
cmp
addr16
fwait
int3
aam
or
or
or
xchg
cmp
addr16
fwait
int3
aam
or
or
or
xchg
cmp
addr16
fwait
int3
aam
or
or
or
cmp
aam
ret
and
shrb
cmp
fwait
int3
aam
mov
aam
and
or
or
or
or
xchg
cmp
addr16
fwait
int3
aam
or
or
or
xchg
cmp
addr16
int3
aam
or
or
or
xchg
cmp
addr16
fwait
int3
aam
or
or
or
les
inc
mov
aam
fxch
roll
aam
movsb
dec
ret
rorl
lods
sub
aam
stos
scas
cmp
inc
add
add
insb
fwait
int3
aam
mov
aam
or
or
or
or
or
or
les
dec
mov
aam
fxch
rorl
aam
mov
ret
rcll
inc
sub
aam
jmp
cmp
inc
add
add
push
mov
aam
or
or
or
or
or
or
les
pop
mov
aam
ret
pop
mov
aam
or
or
or
or
or
or
jl
les
pusha
mov
aam
ret
pusha
mov
aam
or
or
or
or
or
or
jl
les
pusha
mov
aam
ret
pusha
mov
aam
or
or
or
or
or
or
lods
test
sub
lods
cmp
popf
pop
or
or
lods
hlt
push
ret
pop
lods
cmp
popf
pop
or
or
sub
xchg
cmp
addr16
int3
aam
or
or
or
xchg
cmp
addr16
int3
aam
or
or
or
xchg
cmp
add
pop
or
or
or
cmp
xchg
push
ret
xchg
lods
cmp
inc
add
sub
bound
fwait
int3
aam
mov
aam
and
or
or
or
or
nop
cmp
or
pop
or
or
or
nop
cmp
addr16
int3
aam
or
or
or
nop
cmp
adc
pop
or
or
or
les
inc
mov
aam
fxch
roll
aam
movsb
dec
ret
rorl
lods
sub
aam
sbb
add
sbb
int3
aam
mov
aam
or
or
or
or
or
or
les
dec
mov
aam
fxch
rorl
aam
mov
ret
rcll
inc
sub
aam
pop
lods
cmp
inc
add
add
sbb
int3
aam
or
or
or
or
or
or
les
pop
mov
aam
ret
pop
mov
aam
or
or
or
or
or
or
jl
les
pusha
mov
aam
ret
pusha
mov
aam
or
or
or
or
or
or
jl
les
pusha
mov
aam
ret
pusha
mov
aam
or
or
or
or
or
or
sub
nop
cmp
sub
pop
or
or
or
nop
cmp
addr16
int3
aam
or
or
or
xchg
cmp
xor
pop
or
or
or
cmp
mov
ret
and
shrb
cmp
fwait
int3
aam
mov
aam
and
or
or
or
or
xchg
cmp
cmp
pop
or
or
or
xchg
cmp
les
pop
or
or
or
xchg
cmp
shlb
or
or
or
les
inc
mov
aam
fxch
roll
aam
movsb
dec
ret
rorl
lods
sub
aam
stos
mov
rolb
int3
movsb
int3
aam
mov
aam
or
or
or
or
or
or
les
dec
mov
aam
fxch
rorl
aam
mov
ret
rcll
inc
sub
aam
jmp
cmp
inc
add
add
enter
push
mov
aam
or
or
or
or
or
or
les
pop
mov
aam
ret
pop
mov
aam
or
or
or
or
or
or
jl
les
pusha
mov
aam
ret
pusha
mov
aam
or
or
or
or
or
or
jl
les
pusha
mov
aam
ret
pusha
mov
aam
or
or
or
or
or
or
sub
xchg
cmp
fsubs
pop
or
or
or
xchg
cmp
addr16
int3
aam
or
or
or
xchg
cmp
loopnew
int3
aam
or
or
or
cmp
push
push
ret
mov
cmp
inc
add
sub
addr16
movsb
int3
aam
mov
aam
and
or
or
or
or
xchg
cmp
addr16
or
or
or
xchg
cmp
addr16
movsb
int3
aam
or
or
or
xchg
cmp
lock
int3
aam
or
or
or
les
inc
mov
aam
fxch
roll
aam
movsb
dec
ret
rorl
lods
sub
aam
cmp
rolb
cld
movsb
int3
aam
mov
aam
or
or
or
or
or
or
les
dec
mov
aam
fxch
rorl
aam
mov
ret
rcll
inc
sub
aam
jnp
cmp
inc
add
add
clc
movsb
int3
aam
mov
aam
or
or
or
or
or
or
les
pop
mov
aam
ret
pop
mov
aam
or
or
or
or
or
or
jl
les
pusha
mov
aam
ret
pusha
mov
aam
or
or
or
or
or
or
jl
les
pusha
mov
aam
ret
pusha
mov
aam
or
or
or
or
or
or
sub
xchg
cmp
mov
pop
or
or
or
xchg
cmp
addr16
movsb
int3
aam
or
or
or
xchg
cmp
addr16
movsb
int3
aam
or
or
or
cmp
je
ret
ret
cmp
shrb
cmp
movsb
int3
aam
mov
aam
and
or
or
or
or
xchg
cmp
addr16
movsb
int3
aam
or
or
or
xchg
cmp
movsb
movsb
int3
aam
or
or
or
xchg
cmp
addr16
aam
or
or
or
les
inc
mov
aam
fxch
roll
aam
movsb
dec
ret
rorl
lods
sub
aam
dec
mov
rolb
lods
movsb
int3
aam
mov
aam
or
or
or
or
or
or
les
dec
mov
aam
fxch
rorl
aam
mov
ret
rcll
inc
sub
aam
mov
rolb
test
int3
aam
mov
aam
or
or
or
or
or
or
les
pop
mov
aam
ret
pop
mov
aam
or
or
or
or
or
or
jl
les
pusha
mov
aam
ret
pusha
mov
aam
or
or
or
or
or
or
jl
les
pusha
mov
aam
ret
pusha
mov
aam
or
or
or
or
or
or
sub
xchg
cmp
addr16
or
or
or
mov
cmp
movsb
int3
aam
or
or
or
mov
cmp
movsb
int3
aam
or
or
or
cmp
adc
ret
push
cmpsl
cmp
inc
add
sub
fs
movsb
int3
aam
mov
aam
and
or
or
or
or
mov
cmp
movsb
int3
aam
or
or
or
mov
cmp
movsb
int3
aam
or
or
or
mov
cmp
movsb
int3
aam
or
or
or
les
inc
mov
aam
fxch
roll
aam
movsb
dec
ret
rorl
lods
sub
aam
rolb
pop
movsb
int3
aam
mov
aam
or
or
or
or
or
or
les
dec
mov
aam
fxch
rorl
aam
mov
ret
rcll
inc
sub
aam
sbb
rolb
pop
movsb
int3
aam
mov
aam
or
or
or
or
or
or
les
pop
mov
aam
ret
pop
mov
aam
or
or
or
or
or
or
jl
les
pusha
mov
aam
ret
pusha
mov
aam
or
or
or
or
or
or
jl
les
pusha
mov
aam
ret
pusha
mov
aam
or
or
or
or
or
or
sub
mov
cmp
movsb
int3
aam
or
or
or
mov
cmp
movsb
int3
aam
or
or
or
mov
cmp
movsb
int3
aam
or
or
or
cmp
xor
ret
loop
cmp
inc
add
sub
pop
cmp
movsb
int3
aam
mov
aam
and
or
or
or
or
mov
cmp
movsb
int3
aam
or
or
or
mov
cmp
movsb
int3
aam
or
or
or
mov
cmp
movsb
int3
aam
or
or
or
les
inc
mov
aam
fxch
roll
aam
movsb
dec
ret
rorl
lods
sub
aam
imul
add
or
int3
aam
mov
aam
or
or
or
or
or
or
les
dec
mov
aam
fxch
rorl
aam
mov
ret
rcll
inc
sub
aam
stos
movsl
cmp
inc
add
add
or
aam
or
or
or
or
or
or
les
pop
mov
aam
ret
pop
mov
aam
or
or
or
or
or
or
jl
les
pusha
mov
aam
ret
pusha
mov
aam
or
or
or
or
or
or
jl
les
pusha
mov
aam
ret
pusha
mov
aam
or
or
or
or
or
or
lods
aam
ret
sub
or
or
ret
clc
lret
int3
aam
dec
cmp
shld
popf
pop
or
or
cmp
inc
add
inc
add
roll
les
mov
ret
adc
int3
aam
movsb
cmp
popf
pop
testl
addr16
int3
aam
push
movsb
cmp
popf
pop
or
or
or
or
gs
int3
aam
adc
test
aam
mov
or
aam
mov
pop
lods
adc
aam
lahf
movsb
cmp
popf
pop
jge
test
aam
lahf
jne
cmp
andl
sub
movsb
cmp
popf
pop
or
call
pop
or
or
sub
mov
cmp
xchg
aam
or
or
or
mov
cmp
xchg
aam
or
or
or
cmp
addr16
xchg
aam
or
or
or
cmp
addr16
or
or
or
shl
fs
add
ret
fsubl
aam
or
or
or
or
or
add
dec
mov
aam
add
aam
or
or
or
rcll
add
aam
or
or
or
movsl
int3
aam
cmp
dec
fs
or
or
movsl
int3
aam
cmp
dec
fs
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
shl
fs
add
ret
fsubl
aam
or
or
or
or
or
sub
or
or
or
or
or
or
shl
fs
add
ret
fsubl
aam
or
or
or
or
or
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
shl
fs
add
ret
fsubl
aam
or
or
or
or
or
lods
push
mov
aam
shl
fs
add
ret
fsubl
aam
or
or
or
or
or
lods
push
mov
aam
shl
fs
add
ret
fsubl
aam
or
or
or
or
or
lods
push
mov
aam
shl
fs
add
ret
fsubl
aam
or
or
or
or
or
lods
push
mov
aam
shl
fs
add
ret
fsubl
aam
or
or
or
or
or
lods
push
mov
aam
shl
fs
add
ret
fsubl
aam
or
or
or
or
or
inc
stc
cld
lret
int3
aam
mov
gs
int3
aam
sub
xchg
cmp
inc
add
testl
aam
les
lret
int3
aam
loopne
int3
aam
or
inc
stc
nop
lret
int3
aam
mov
gs
int3
aam
sub
xchg
cmp
inc
add
testl
aam
les
lret
int3
aam
test
int3
aam
or
dec
leave
adc
int3
aam
or
dec
aam
lds
push
add
adc
int3
aam
les
or
or
or
or
or
or
or
or
or
or
movsb
int3
aam
dec
xor
add
rorb
scas
les
aam
sub
xchg
cmp
inc
add
add
sbb
int3
aam
les
int3
aam
dec
push
cmp
test
aam
fs
cmp
int3
aam
mov
pop
test
aam
or
cmp
or
or
or
or
or
or
sub
lret
xchg
aam
sub
nop
cmp
inc
add
testl
aam
les
xchg
aam
sbb
int3
aam
or
inc
stc
or
lret
xchg
aam
sub
nop
cmp
inc
add
testl
aam
les
xchg
aam
jl
int3
aam
or
jge
xchg
aam
push
sbb
cmp
or
or
or
xchg
aam
add
in
pusha
loopne
les
xchg
dec
leave
cld
xchg
aam
stc
nop
cmp
gs
xchg
aam
add
inc
add
and
or
or
or
roll
ret
or
or
or
rorl
ret
or
or
or
test
int3
aam
mov
gs
xchg
aam
sub
xchg
cmp
inc
add
testl
aam
les
xchg
aam
pushf
xchg
aam
add
dec
xchg
aam
xchg
aam
jns
cmp
clc
and
les
ret
into
sbb
fcomps
ret
in
sbb
les
ret
les
sbb
les
les
les
ret
les
ret
in
ret
negb
ret
les
sbb
les
ret
les
ret
les
sbb
les
ret
les
les
sbb
les
sbb
and
in
ret
hlt
and
les
ret
les
and
les
and
les
les
ret
les
ret
les
and
les
and
les
sbb
les
sbb
les
sbb
les
ret
les
and
les
ret
les
ret
les
ret
les
ret
les
les
ret
les
ret
out
and
in
ret
and
shlb
les
and
les
and
les
and
les
ret
les
les
and
ret
les
and
ret
les
and
ret
fsubs
ret
out
es
cld
es
les
ret
les
ret
les
ret
les
ret
les
ret
les
ret
les
ret
les
es
les
es
daa
ret
les
daa
ret
les
daa
ret
les
les
les
ret
les
daa
ret
les
ret
les
daa
ret
les
ret
shlb
and
fisubl
ret
ljmp
les
and
les
ret
les
and
lret
les
les
les
les
les
les
les
les
ret
enter
stos
les
les
les
ret
in
and
ret
leave
les
les
les
les
ret
les
and
les
les
les
ret
dec
ret
dec
ret
dec
ret
pushf
aam
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
in
ret
les
les
les
les
les
aam
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
les
aam
les
aam
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
ret
les
rcl
ds
mov
rcl
add
inc
pushf
aam
les
aam
les
aam
les
aam
aam
aam
and
aam
out
aam
rol
aam
int
aam
xchg
aam
les
loopne
aam
aam
aam
aam
int
aam
add
xchg
aam
loopne
aam
aam
aam
aam
out
aam
aam
aam
aam
mov
lods
stos
mov
in
stos
stos
mov
movsl
test
mov
lods
stos
mov
lods
mov
stos
stos
les
ret
aam
xor
aam
xor
aam
aam
in
aam
fadd
aam
and
aam
in
aam
fadd
aam
fadd
aam
in
aam
lods
aam
xor
aam
stos
cmpsl
movsl
test
mov
div
xor
xchg
lock
icebp
mov
icebp
jmp
icebp
testl
stos
cmpsl
mov
mov
ret
aam
xor
aam
ffree
aam
jg
aam
ffree
aam
dec
aam
fadd
aam
rol
aam
jg
aam
rol
aam
dec
aam
and
aam
fadd
aam
push
aam
push
aam
js
aam
fadd
aam
jg
aam
fadd
aam
dec
aam
fadd
aam
rol
aam
push
aam
push
aam
jg
aam
rol
aam
js
aam
rol
aam
dec
aam
and
aam
out
aam
aam
aam
ffreep
aam
jg
aam
ffreep
aam
dec
aam
aam
faddp
aam
js
aam
faddp
aam
dec
aam
aam
faddp
aam
jg
aam
faddp
aam
dec
aam
aam
ffree
aam
js
aam
ffree
aam
dec
aam
aam
rol
aam
js
aam
rol
aam
dec
aam
aam
xlat
ret
aam
jg
aam
rol
aam
dec
aam
aam
xlat
ret
aam
js
aam
xlat
ret
aam
dec
aam
aam
ret
aam
jg
aam
xlat
ret
aam
dec
aam
aam
out
aam
aam
aam
aam
faddp
aam
dec
aam
dec
aam
jg
aam
in
aam
aam
aam
aam
in
aam
aam
aam
aam
ffree
aam
push
aam
push
aam
jg
aam
xlat
ret
aam
push
aam
push
aam
jg
aam
ret
aam
pop
aam
pop
aam
jg
aam
pushf
aam
out
aam
mov
aam
xor
aam
xlat
aam
xor
aam
sti
cli
leave
into
sti
mov
inc
cltd
in
les
aam
push
rcl
xlat
aam
push
into
ret
aam
mov
aam
aam
xlat
aam
push
into
ret
aam
mov
aam
jno
aam
xlat
aam
push
iret
ret
aam
pop
aam
into
ret
aam
pusha
aam
aam
iret
ret
aam
pop
aam
iret
ret
aam
pusha
aam
aam
enter
pop
aam
iret
ret
aam
popa
aam
aam
enter
pop
aam
enter
popa
aam
aam
les
aam
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
outsb
ret
test
mov
movsl
test
lods
movsl
cmpsb
test
stos
scas
cmpsl
stos
mov
test
lods
mov
movsl
mov
test
mov
mov
mov
stos
mov
mov
cmpsl
mov
mov
cmpsl
mov
stos
mov
mov
mov
mov
mov
les
lods
mov
mov
mov
nop
cli
in
mov
mov
mov
mov
les
ret
aam
or
aam
or
aam
push
aam
ljmp
adcl
nop
lods
mov
stos
mov
stos
cmpsl
cmpsl
mov
mov
lods
test
in
movsl
mov
lods
stos
mov
in
mov
mov
mov
mov
lods
stos
stos
in
mov
mov
in
in
nop
lods
mov
stos
mov
stos
cmpsl
cmpsl
mov
mov
lods
test
in
movsl
mov
lods
stos
mov
in
mov
mov
mov
mov
lods
stos
stos
in
les
stos
mov
mov
mov
stos
mov
movsl
mov
in
mov
stos
cmpsl
mov
movsl
in
movsl
mov
mov
cmpsb
jmp
mov
stos
in
lods
movsl
mov
mov
stos
stos
mov
mov
ljmp
stos
mov
mov
mov
stos
mov
movsl
mov
in
mov
stos
cmpsl
mov
movsl
in
mov
lods
mov
in
mov
jmp
mov
stos
in
lods
movsl
mov
mov
stos
stos
mov
mov
ljmp
rol
test
in
rol
rol
les
aam
mov
mov
les
rol
aam
int3
int3
int3
in
rol
rol
les
les
mov
in
stos
stos
in
stos
stos
mov
movsl
test
mov
jmp
mov
in
mov
mov
mov
mov
xchg
mov
mov
lods
stos
movsl
mov
in
in
mov
jmp
mov
stos
in
lods
mov
in
stos
in
test
mov
lods
stos
stos
in
mov
mov
mov
mov
mov
les
aam
ss
aam
aaa
aam
adc
aam
stos
mov
lods
stos
mov
mov
mov
movsl
mov
les
stos
mov
stos
in
mov
stos
mov
mov
mov
mov
mov
mov
stos
stos
ljmp
test
mov
ljmp
mov
cmpsl
mov
cmpsl
mov
test
mov
mov
mov
stos
cmpsl
mov
lods
stos
mov
test
mov
lea
mov
movsl
test
mov
mov
mov
stos
cmpsl
mov
mov
movsl
mov
in
mov
cmpsl
mov
in
stos
mov
mov
mov
movsl
test
mov
mov
cmpsl
mov
mov
les
cmpsl
lods
test
mov
movsl
mov
in
mov
cmpsl
mov
in
stos
mov
test
mov
les
stos
mov
stos
in
mov
cmpsl
lods
test
mov
movsl
mov
in
mov
cmpsl
mov
mov
cmpsl
lods
test
mov
movsl
mov
in
mov
cmpsl
mov
test
mov
mov
mov
test
ljmp
in
mov
movsl
mov
in
mov
cmpsl
mov
test
mov
mov
mov
test
ljmp
movsl
mov
in
mov
cmpsl
mov
test
mov
mov
mov
test
ljmp
mov
in
stos
in
cmpsl
cmpsl
mov
stos
in
stos
lods
stos
lods
mov
movsl
test
mov
stos
mov
test
fwait
mov
mov
test
mov
cli
in
test
mov
ljmp
out
rcl
out
rcl
test
lods
movsl
les
les
mov
les
mov
movsl
mov
mov
mov
lods
stos
stos
in
movsl
stos
in
mov
mov
in
lods
mov
in
lods
mov
mov
lods
stos
stos
in
mov
mov
mov
mov
mov
cmpsl
stos
mov
mov
mov
mov
lods
stos
mov
mov
mov
mov
stos
stos
ljmp
xchg
mov
movsl
mov
in
mov
movsl
mov
stos
stos
in
mov
mov
lods
stos
mov
lods
in
in
mov
movsl
mov
mov
test
mov
in
lods
mov
mov
in
in
movsl
mov
mov
in
mov
mov
mov
in
movsl
mov
cmpsl
stos
stos
mov
stos
mov
les
lods
mov
mov
movsl
mov
mov
mov
lods
stos
stos
in
cmpsb
scas
mov
leave
ret
aam
out
rcl
out
rcl
mov
movsl
mov
in
mov
cmpsl
mov
in
mov
mov
movsl
in
movsl
test
mov
mov
mov
mov
in
in
movsl
test
mov
mov
cmpsl
mov
mov
cmpsl
test
mov
in
movsl
test
xchg
mov
lods
mov
lods
stos
mov
test
mov
mov
mov
movsl
mov
in
mov
cmpsl
mov
les
mov
mov
mov
mov
mov
mov
movsl
mov
in
stos
mov
mov
lea
test
mov
in
mov
movsl
mov
in
stos
mov
mov
les
cmpsl
mov
mov
mov
mov
mov
mov
mov
stos
stos
in
mov
mov
lods
stos
mov
lods
in
in
mov
movsl
mov
mov
test
mov
in
lods
mov
mov
in
in
movsl
mov
mov
in
mov
mov
mov
in
movsl
mov
cmpsl
stos
stos
mov
stos
mov
les
lods
mov
scas
cmpsb
mov
in
mov
mov
stos
in
stos
cmpsl
stos
mov
mov
mov
mov
mov
mov
mov
movsl
mov
mov
mov
lods
stos
stos
ljmp
stos
movsl
mov
stos
stos
in
mov
mov
mov
mov
in
mov
in
stos
mov
movsl
test
stos
mov
mov
lods
mov
addb
cmpsb
test
cmpsl
scas
ljmp
les
mov
movsl
stos
in
stos
mov
mov
lods
stos
stos
in
mov
mov
mov
mov
mov
in
stos
cmpsl
stos
mov
mov
mov
mov
lods
mov
cmpsl
stos
stos
mov
stos
movsl
test
mov
mov
lods
stos
stos
ljmp
mov
mov
stos
stos
in
mov
mov
mov
mov
cmpsl
movsl
stos
stos
stos
mov
cmpsb
mov
test
mov
in
in
mov
lods
mov
mov
mov
stos
ljmp
test
mov
mov
in
mov
lods
mov
mov
mov
stos
ljmp
test
mov
mov
lods
stos
stos
in
mov
mov
mov
mov
in
lods
mov
lods
stos
in
sti
ljmp
stos
cmpsl
scas
ljmp
mov
lods
stos
movsl
mov
mov
mov
mov
mov
mov
orb
stos
in
stos
mov
test
mov
mov
mov
mov
lods
stos
movsl
mov
mov
mov
mov
mov
in
mov
jmp
mov
stos
ljmp
les
mov
lods
mov
in
mov
jmp
mov
stos
in
mov
in
stos
in
stos
in
stos
mov
test
mov
scas
lods
stos
mov
mov
call
lods
mov
mov
mov
mov
lods
stos
movsl
mov
mov
les
les
rcl
out
rcl
les
cmpsl
in
stos
mov
mov
mov
mov
stos
cmpsl
mov
mov
in
mov
mov
mov
mov
in
mov
movsl
mov
cmpsl
in
mov
mov
mov
mov
lods
stos
stos
mov
in
mov
in
lods
mov
test
mov
stos
mov
mov
mov
movsl
mov
subb
in
test
mov
stos
mov
mov
stos
stos
in
mov
mov
mov
mov
mov
lods
in
stos
in
stos
mov
mov
mov
mov
lods
mov
mov
mov
mov
mov
mov
out
out
cmpsl
movsl
stos
stos
stos
mov
mov
movsl
mov
in
in
mov
mov
mov
mov
lods
stos
stos
ljmp
mov
mov
movsl
mov
stos
mov
mov
mov
mov
out
out
cmpsl
movsl
stos
stos
stos
mov
mov
movsl
mov
in
in
mov
mov
mov
mov
lods
stos
stos
ljmp
mov
mov
movsl
mov
stos
mov
mov
mov
mov
out
out
cmpsl
movsl
stos
stos
stos
mov
mov
movsl
mov
in
in
mov
mov
mov
mov
lods
stos
stos
ljmp
mov
test
mov
stos
mov
lods
mov
in
stos
in
stos
mov
mov
mov
stos
mov
stos
mov
in
movsl
mov
stos
mov
mov
les
mov
test
mov
cmpsb
lods
stos
movsl
mov
stos
stos
in
mov
mov
movsl
mov
mov
mov
lods
stos
stos
in
mov
in
test
mov
mov
mov
mov
in
rol
les
rol
mov
les
rol
aam
int3
les
les
int3
les
mov
stos
mov
stos
in
mov
mov
movsl
test
mov
les
aam
mov
aam
mov
aam
mov
aam
mov
aam
push
aam
mov
aam
mov
aam
inc
aam
inc
aam
inc
aam
fwait
rcl
mov
aam
jae
aam
fs
les
in
stos
in
lods
mov
movsl
mov
mov
stos
mov
stos
mov
mov
in
cmpsl
mov
lods
mov
in
in
stos
cmpsl
scas
les
rcl
scas
aam
test
aam
stos
aam
sahf
aam
pop
rcl
stos
aam
mov
aam
mov
aam
mov
aam
lahf
aam
cwtl
aam
xchg
rcl
xchg
rcl
mov
aam
cwtl
aam
nop
rcl
nop
rcl
mov
aam
mov
aam
cwtl
aam
pop
rcl
lahf
rcl
popf
rcl
xchg
rcl
dec
aam
fwait
rcl
cwtl
aam
jb
aam
lret
inc
or
aam
leave
ret
aam
or
aam
lret
je
rcl
lret
add
rcl
aam
lret
movsb
aam
aam
lret
ret
aam
xadd
adc
rcl
xadd
les
in
mov
stos
mov
in
movsl
stos
jecxz
in
lods
mov
mov
movsl
mov
mov
mov
lods
stos
stos
in
movsl
mov
mov
mov
mov
in
mov
movsl
mov
lods
lods
stos
mov
mov
in
ret
aam
mov
aam
or
aam
xlat
aam
or
aam
mov
les
scas
les
mov
les
scas
les
xchg
les
mov
les
test
les
mov
les
lods
les
mov
les
lods
test
mov
lods
mov
mov
test
jmp
scas
mov
mov
lods
cmpsl
movsl
test
test
stos
mov
mov
mov
test
jmp
scas
mov
les
les
les
les
les
les
les
les
les
les
les
les
les
mov
mov
jmp
stos
mov
les
mov
stos
mov
les
test
les
jmp
mov
jmp
scas
mov
les
test
mov
les
mov
mov
mov
jmp
scas
mov
les
les
les
les
les
les
les
les
les
les
les
les
les
mov
lods
movsl
test
movsl
mov
les
lods
stos
stos
jmp
les
mov
movsl
stos
jmp
les
mov
mov
mov
mov
jmp
jmp
les
stos
test
stos
les
les
les
les
les
lods
mov
les
les
les
stos
mov
stos
les
les
les
les
les
lods
mov
movsl
mov
mov
les
jmp
stos
mov
mov
les
mov
mov
stos
mov
mov
les
mov
mov
mov
mov
mov
movsl
stos
mov
mov
mov
mov
mov
les
mov
mov
mov
test
mov
mov
stos
mov
mov
stos
stos
jmp
les
test
stos
jmp
les
les
xchg
test
xchg
test
adcl
les
nop
xchg
xchg
popf
mov
mov
lock
xchg
les
mov
les
movsl
mov
lods
movsl
mov
mov
mov
les
mov
les
cmpsl
movsl
test
mov
cmpsb
les
stos
mov
les
mov
cmpsl
mov
test
mov
les
mov
les
nop
pushf
les
xchg
mov
in
stc
inc
call
les
movsb
cli
clc
hlt
cmc
div
lock
repnz
std
les
out
les
les
sti
out
ljmp
loopne
in
in
les
aam
js
aam
js
aam
js
aam
js
aam
jns
aam
jns
aam
jns
aam
jns
aam
jns
aam
jp
aam
jp
aam
jp
aam
jp
aam
jp
aam
jp
aam
jnp
aam
jnp
aam
jnp
aam
add
aam
add
aam
js
aam
stos
scas
stos
stos
mov
in
mov
stos
mov
les
mov
les
mov
lods
les
lods
mov
mov
movsl
mov
mov
mov
lods
stos
stos
ljmp
lods
mov
test
mov
stos
stos
in
lods
movsl
mov
cmpsl
mov
mov
les
lods
mov
mov
cmpsl
mov
mov
cmpsl
test
mov
in
movsl
test
stos
test
movsl
mov
stos
mov
mov
in
lods
movsl
mov
cmpsl
mov
mov
mov
stos
mov
les
lods
mov
mov
mov
mov
lods
stos
movsl
mov
mov
movsl
mov
in
mov
cmpsl
mov
les
lods
mov
scas
in
mov
stos
cmpsl
mov
mov
mov
mov
mov
lods
stos
mov
mov
in
stos
mov
mov
mov
ljmp
movsl
mov
lods
mov
stos
mov
lahf
lcall
movsl
mov
cmpsl
mov
mov
cmpsl
test
mov
in
mov
movsl
mov
stos
stos
ljmp
movsl
mov
lods
mov
mov
lods
stos
mov
mov
mov
mov
in
in
mov
cwtl
in
ljmp
mov
lods
mov
movsl
stos
mov
mov
mov
mov
movsl
mov
stos
mov
mov
mov
mov
mov
cwtl
mov
lea
mov
mov
stos
mov
stos
mov
mov
movsl
stos
mov
les
lods
mov
mov
mov
cmpsl
lods
movsl
mov
cmpsl
mov
mov
cmpsl
test
mov
les
mov
stos
mov
ljmp
lea
mov
cmpsl
mov
in
mov
mov
mov
mov
lods
stos
stos
in
mov
stos
mov
mov
in
mov
mov
stos
stos
in
mov
mov
mov
mov
les
mov
mov
in
mov
mov
movsl
mov
mov
mov
lods
stos
stos
les
movsl
mov
mov
mov
lods
stos
stos
in
mov
mov
stos
in
movsl
mov
mov
les
cmpsl
lods
mov
stos
mov
cwtl
in
les
in
mov
mov
mov
mov
lods
stos
stos
ljmp
les
stos
test
lods
mov
in
mov
cmpsl
lods
lods
stos
mov
in
mov
mov
mov
mov
lods
stos
stos
in
mov
mov
mov
stos
mov
mov
mov
nop
mov
in
mov
stos
mov
stos
mov
in
mov
mov
mov
mov
lods
stos
stos
in
stos
in
movsl
scas
mov
lods
in
lods
stos
lods
cmpsl
mov
mov
mov
mov
mov
in
movsl
cmpsl
lods
lods
stos
mov
test
stos
mov
ljmp
in
mov
lods
stos
stos
in
mov
mov
mov
mov
in
stos
in
mov
mov
stos
mov
out
mov
mov
movsl
test
in
movsl
mov
lods
mov
movsl
mov
mov
scas
mov
lods
stos
mov
lods
mov
in
mov
in
lods
test
in
stos
cmpsl
movsl
mov
ljmp
stos
mov
in
mov
cmpsl
scas
in
mov
cmpsl
mov
lods
stos
mov
test
in
lods
mov
mov
movsl
mov
mov
mov
lods
stos
stos
ljmp
test
mov
mov
mov
mov
lods
stos
movsl
mov
mov
test
in
sti
ljmp
mov
mov
les
jecxz
aam
xor
aam
xor
aam
in
aam
in
aam
in
aam
lret
ret
aam
jecxz
aam
push
rcl
daa
rcl
pop
rcl
in
aam
in
aam
mov
cmpsl
les
test
ret
aam
jecxz
aam
push
rcl
es
in
aam
in
aam
in
aam
stos
scas
stos
stos
mov
in
mov
stos
mov
enter
insb
sub
aam
and
aam
stos
scas
stos
stos
mov
in
mov
lods
stos
stos
in
ret
aam
sub
aam
and
aam
aam
aam
sub
aam
and
aam
aam
aam
sub
aam
and
aam
aam
aam
das
rcl
les
mov
push
ffree
les
mov
mov
xchg
les
mov
les
popf
xchg
add
xchg
test
xchg
les
add
les
add
ret
aam
rol
add
ret
aam
aad
aam
add
ret
aam
mov
aam
add
ret
aam
stos
rcl
add
ret
aam
test
mov
int
iret
enter
aam
xlat
rcl
rcl
fcomp
fcmovu
in
out
loopne
loop
in
in
out
out
call
cmc
div
lock
repnz
std
clc
stc
cli
sti
test
addb
mov
xchg
nop
xchg
xchg
xchg
pushf
popf
sahf
lahf
cwtl
cltd
lcall
mov
scas
scas
test
stos
stos
mov
mov
mov
mov
mov
mov
ljmp
stc
inc
les
rol
aam
aad
aam
rol
aam
and
aam
movsl
mov
mov
stos
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
mov
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
inc
les
inc
les
inc
les
inc
les
inc
les
aam
aam
aam
aam
aam
aam
aam
inc
les
inc
les
inc
les
aam
aam
aam
aam
aam
aam
inc
les
inc
les
inc
les
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
aam
aam
aam
aam
in
in
in
in
in
in
in
in
in
in
lods
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
mov
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
inc
les
inc
les
inc
les
inc
les
inc
les
aam
aam
aam
aam
aam
aam
aam
inc
lds
inc
lds
inc
lds
aam
aam
aam
aam
aam
inc
lds
inc
lds
inc
lds
mov
mov
mov
mov
mov
mov
mov
aam
aam
aam
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
mov
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
rol
rol
aam
aam
aam
aam
aam
rol
aam
aam
aam
aam
aam
aam
vshufpd
mov
mov
mov
mov
mov
mov
mov
aam
mov
mov
mov
les
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
fs
popa
bound
insl
outsb
outsl
push
jne
ja
jno
jae
jge
jg
jns
jnp
add
add
or
push
invd
or
or
adc
sbb
push
pop
sbb
sbb
and
es
and
and
sub
cs
sub
sub
xor
ss
xor
xor
cmp
ds
cmp
cmp
rol
ret
int3
int
iret
enter
aam
xlat
rcl
rcl
fcomp
fcmovu
in
out
loopne
loop
in
in
out
out
call
cmc
div
lock
repnz
std
clc
stc
cli
sti
test
mov
scas
test
stos
stos
mov
mov
mov
mov
mov
cltd
lcall
mov
scas
scas
test
stos
stos
mov
mov
mov
mov
mov
mov
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
fs
popa
bound
insl
outsb
outsl
push
jne
ja
jno
jae
jge
jg
jns
jnp
add
add
or
push
invd
or
or
adc
sbb
push
pop
sbb
sbb
and
es
and
and
sub
cs
sub
sub
xor
ss
xor
xor
cmp
ds
cmp
cmp
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
fs
popa
bound
insl
outsb
outsl
push
jne
ja
jno
jae
jge
jg
jns
jnp
add
add
or
push
invd
or
or
adc
sbb
push
pop
sbb
sbb
and
es
and
and
sub
cs
sub
sub
xor
ss
xor
xor
cmp
ds
cmp
cmp
rol
ret
int3
int
iret
enter
aam
xlat
rcl
rcl
fcomp
fcmovu
in
out
loopne
loop
in
in
out
out
call
cmc
div
lock
repnz
std
clc
stc
cli
sti
test
addb
mov
xchg
nop
xchg
xchg
xchg
pushf
popf
sahf
lahf
cwtl
cltd
lcall
addl
mov
xchg
xchg
pushf
popf
sahf
mov
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
fs
popa
bound
insl
outsb
outsl
push
jne
ja
jno
jae
jge
jg
jns
jnp
add
add
or
push
invd
or
or
adc
sbb
push
pop
sbb
sbb
and
es
and
and
sub
cs
sub
sub
xor
ss
xor
xor
cmp
ds
cmp
cmp
xchg
lods
mov
movsl
test
xchg
out
in
xchg
nop
in
stos
mov
mov
lods
in
mov
in
stos
in
stos
test
mov
test
mov
in
mov
mov
ljmp
or
subl
mov
mov
les
les
test
add
les
les
mov
mov
mov
les
mov
mov
mov
mov
les
mov
movsl
test
mov
test
les
lods
mov
mov
cmpsl
mov
test
les
les
les
add
fld
les
les
les
les
les
les
les
les
les
les
add
les
les
les
les
les
les
les
test
mov
mov
leave
into
les
in
mov
stos
mov
into
les
mov
leave
into
les
mov
mov
leave
into
les
leave
into
test
test
cmpsl
movsl
mov
stos
stos
in
movsl
mov
test
movsl
stos
in
mov
mov
mov
in
stos
movsl
mov
in
in
mov
mov
test
cmpsb
mov
mov
in
stos
cmpsl
stos
mov
mov
ljmp
mov
mov
cmpsl
mov
mov
mov
test
cmpsl
movsl
mov
stos
stos
jecxz
in
mov
mov
mov
in
mov
stos
mov
test
lods
stos
mov
mov
stos
stos
ljmp
les
leave
into
jmp
mov
mov
in
mov
in
xchg
lea
mov
test
mov
movsl
mov
mov
in
mov
lods
stos
mov
lods
mov
in
stos
mov
lods
mov
movsl
test
mov
stos
into
nop
lods
lods
mov
lods
stos
mov
mov
cmpsb
mov
in
stos
in
stos
mov
in
mov
test
cmpsl
movsl
mov
stos
stos
ljmp
in
stos
mov
in
lods
scas
mov
lods
mov
mov
mov
stos
mov
test
stos
mov
mov
stos
test
mov
test
in
in
mov
cmpsl
mov
stos
stos
in
mov
test
movsl
mov
mov
in
stos
stos
mov
mov
cmpsl
mov
mov
stos
mov
mov
subb
ljmp
hlt
div
leave
into
jmp
in
stos
stos
mov
lods
in
mov
cmpsl
mov
in
stos
cmpsl
movsl
test
in
stos
mov
mov
stos
stos
leave
into
les
leave
into
jmp
mov
mov
in
stos
lods
mov
movsl
test
mov
mov
in
stos
mov
in
lods
movsl
stos
in
stos
cmpsl
mov
lods
mov
lods
stos
mov
mov
cmpsb
mov
in
stos
in
stos
mov
in
mov
test
cmpsl
movsl
mov
stos
stos
ljmp
hlt
div
leave
into
jmp
in
stos
mov
lods
stos
lods
mov
movsl
test
mov
les
leave
into
jmp
cmpsb
test
in
stos
in
stos
lods
mov
movsl
test
mov
movsl
mov
into
les
leave
into
jmp
in
stos
stos
mov
lods
in
mov
cmpsl
mov
in
stos
mov
stos
in
stos
lods
mov
movsl
test
mov
stos
leave
into
les
leave
into
jmp
in
stos
stos
mov
lods
in
mov
cmpsl
mov
in
mov
lods
stos
in
stos
lods
mov
movsl
test
mov
stos
leave
into
les
leave
into
jmp
mov
mov
movsl
test
mov
lods
stos
stos
in
movsl
test
leave
into
les
leave
into
jmp
in
stos
stos
mov
lods
in
mov
cmpsl
mov
in
stos
stos
mov
movsl
mov
mov
movsl
cmpsb
test
leave
into
les
leave
into
jmp
cmpsb
test
in
stos
in
mov
stos
in
stos
stos
mov
test
in
mov
leave
into
les
leave
into
jmp
mov
mov
movsl
mov
mov
leave
into
les
leave
into
jmp
mov
mov
test
lods
mov
mov
movsl
mov
scas
in
mov
stos
mov
into
les
leave
into
jmp
in
stos
stos
mov
lods
in
mov
cmpsl
mov
in
lods
mov
movsl
mov
movsl
leave
into
leave
into
nop
lods
lods
mov
movsl
mov
test
cmpsl
movsl
mov
stos
stos
in
movsl
mov
mov
mov
mov
in
lods
mov
mov
test
in
mov
movsl
mov
in
mov
lods
stos
in
stos
in
stos
mov
mov
test
mov
mov
mov
cmpsl
stos
stos
mov
cmpsl
mov
mov
mov
test
cmpsl
movsl
mov
stos
stos
jecxz
in
mov
mov
mov
in
mov
stos
mov
test
lods
stos
mov
mov
stos
stos
ljmp
repnz
hlt
std
leave
into
jmp
in
stos
stos
mov
lods
in
mov
cmpsl
mov
in
stos
mov
mov
stos
test
into
les
leave
into
jmp
in
stos
stos
mov
lods
in
mov
cmpsl
mov
in
mov
mov
mov
into
les
leave
into
jmp
movsl
mov
stos
mov
stos
mov
mov
mov
stos
mov
in
stos
mov
test
movsl
mov
les
mov
mov
mov
movsl
test
xchg
out
in
mov
mov
test
cmpsb
mov
mov
into
into
ljmp
stos
mov
stos
movsl
test
scas
stos
stos
mov
cli
les
test
mov
mov
into
into
xchg
mov
mov
in
les
mov
mov
xchg
mov
xorb
les
cmpsb
mov
mov
mov
xchg
mov
mov
les
mov
les
in
mov
call
mov
mov
les
les
cmpsb
mov
les
cmpsb
mov
les
mov
mov
mov
les
mov
les
les
les
les
les
movsl
mov
les
mov
les
stos
mov
mov
mov
test
test
mov
mov
les
mov
stos
les
mov
les
mov
mov
mov
movsl
mov
xchg
mov
mov
les
movsl
mov
mov
xchg
mov
mov
xchg
movsl
mov
xorb
les
mov
les
mov
les
mov
mov
mov
les
mov
mov
les
mov
in
stos
cmpsb
movsl
mov
mov
mov
lods
jmp
movsl
les
jmp
cmpsl
movsl
les
in
stos
mov
movsl
les
in
mov
les
scas
les
jmp
les
stos
movsl
les
stos
movsl
les
mov
movsl
test
stos
mov
mov
mov
stos
test
movsl
stos
mov
movsl
mov
cmpsb
mov
mov
lods
stos
les
stos
mov
cmpsl
lods
les
les
lods
stos
les
cmpsl
movsl
les
mov
les
mov
mov
les
mov
jmp
movsl
stos
mov
stos
lods
mov
jmp
mov
les
mov
jmp
mov
mov
stos
lods
mov
jmp
mov
in
lods
cmpsl
stos
les
mov
jmp
les
mov
jmp
mov
les
mov
jmp
test
mov
stos
lods
mov
jmp
mov
mov
les
mov
jmp
mov
les
mov
jmp
cmpsl
movsl
stos
les
mov
jmp
mov
movsl
mov
les
mov
jmp
mov
les
mov
jmp
movsl
test
movsl
mov
mov
stos
lods
mov
jmp
mov
mov
stos
lods
mov
jmp
stos
lods
cmpsl
movsl
stos
in
mov
lods
cmpsl
les
mov
jmp
movsl
in
lods
cmpsl
movsl
les
mov
jmp
test
les
mov
jmp
mov
mov
stos
lods
mov
jmp
mov
movsl
les
mov
jmp
stos
mov
stos
movsl
les
mov
mov
jmp
lods
test
movsl
stos
les
mov
stos
mov
scas
les
mov
cmpsb
stos
scas
test
les
mov
les
movsl
stos
jmp
mov
les
jmp
lods
mov
les
stos
jmp
mov
les
stos
jmp
test
mov
mov
jmp
mov
stos
mov
mov
mov
jmp
mov
movsl
stos
les
lods
jmp
mov
les
lods
jmp
test
mov
mov
stos
cmpsl
lods
jmp
mov
mov
lods
jmp
lods
movsl
stos
les
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
lods
mov
in
stos
cmpsb
movsl
mov
mov
mov
jmp
lods
in
mov
les
mov
jmp
mov
mov
jmp
lods
cmpsl
movsl
les
mov
jmp
mov
mov
jmp
cmpsb
cmpsb
mov
les
mov
jmp
mov
mov
jmp
mov
stos
mov
jmp
mov
mov
jmp
lods
cmpsl
movsl
stos
les
jmp
lods
movsl
stos
les
mov
jmp
lods
mov
stos
stos
movsl
test
cmpsl
lods
lods
stos
mov
lods
stos
mov
mov
lods
lods
stos
mov
lods
test
lods
mov
lods
lods
stos
mov
stos
stos
mov
les
mov
les
lods
lods
les
lods
movsl
stos
les
movsl
stos
les
movsl
test
movsl
stos
les
cmpsl
movsl
stos
jmp
lods
mov
les
cmpsl
movsl
stos
in
stos
mov
les
cmpsl
movsl
stos
les
xchg
les
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
sahf
mov
aam
mov
aam
mov
xchg
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
xchg
xchg
add
ret
xchg
xchg
push
xchg
mov
pop
adc
aam
xchg
xchg
les
ret
addl
les
orl
les
mov
aam
nop
xchg
in
adc
aam
mov
aam
mov
aam
mov
aam
nop
xchg
adc
ret
xchg
xchg
les
adc
aam
xchg
xchg
jo
ret
xchg
mov
fs
aam
xchg
mov
dec
adc
aam
xchg
xchg
mov
ret
xchg
add
adc
aam
xchg
add
adc
aam
xchg
add
adcl
mov
rclb
ret
xchg
mov
rclb
aam
xchg
mov
xor
ret
xchg
les
ret
xchg
test
or
ret
xchg
sahf
les
ret
xchg
xchg
les
aam
xchg
xchg
les
aam
xchg
popf
les
ret
xchg
xchg
les
xchg
add
adc
aam
adcl
les
mov
aam
mov
aam
xchg
test
xchg
adc
aam
xchg
aam
mov
aam
sahf
add
addl
aam
xchg
aam
mov
aam
popl
aam
sahf
mov
rclb
aam
sahf
mov
cmp
ret
mov
aam
mov
aam
xchg
les
ret
xchg
pop
or
ret
test
aam
mov
aam
test
aam
mov
aam
nop
mov
lods
adc
aam
xchg
aam
xchg
aam
xchg
test
mov
xchg
test
enter
ret
aam
ror
jmp
aam
int3
fxch
mov
xchg
les
mov
mov
scas
les
movsl
test
cmpsb
mov
mov
cmpsl
mov
lods
mov
cmpsl
mov
mov
in
stos
mov
mov
les
lods
stos
stos
in
stos
mov
lods
test
mov
les
cmpsl
scas
mov
movsl
mov
lods
test
cmpsb
test
les
movsl
test
stos
in
stos
stos
mov
mov
cmpsl
mov
mov
in
mov
lods
mov
les
mov
mov
stos
in
movsl
mov
mov
subb
mov
les
stos
in
lods
mov
les
movsl
stos
mov
scas
mov
les
stos
stos
test
in
lods
test
in
mov
les
lods
mov
scas
les
movsl
cmpsl
mov
mov
stos
stos
in
mov
les
mov
stos
in
movsl
mov
mov
movsl
mov
mov
mov
lods
movsl
mov
in
jmp
in
stos
stos
mov
stos
test
stos
mov
mov
mov
stos
stos
les
movsl
stos
mov
stos
in
lods
test
mov
nop
stos
stos
in
movsl
stos
mov
stos
in
lods
test
mov
lods
stos
in
mov
les
lods
mov
mov
mov
les
mov
mov
mov
les
in
lods
mov
cmpsl
mov
mov
les
cmpsl
lods
in
mov
les
mov
mov
test
stos
scas
les
mov
mov
xchg
mov
cmpsl
mov
lods
cmpsl
mov
in
mov
mov
xchg
mov
mov
stos
stos
in
mov
les
stos
stos
mov
lods
in
mov
cmpsl
mov
xchg
mov
cmpsl
mov
mov
mov
mov
test
in
stos
movsl
mov
lods
test
cmpsb
test
les
lods
test
in
mov
cmpsl
mov
les
lods
test
in
mov
mov
stos
mov
cmpl
in
mov
stos
mov
les
lods
mov
in
stos
stos
in
stos
stos
mov
stos
in
mov
lods
in
mov
in
mov
movsl
mov
mov
les
jmp
mov
mov
mov
mov
les
mov
mov
mov
stos
cmpsl
mov
stos
stos
in
movsl
test
les
cmpsl
lods
in
mov
cmpsl
mov
stos
in
mov
lods
in
lods
test
in
mov
mov
mov
mov
les
mov
stos
stos
in
stos
mov
mov
mov
lods
mov
mov
in
mov
stos
mov
in
stos
test
mov
mov
stos
cmpsl
movsl
mov
mov
in
test
mov
in
lods
mov
lods
mov
cmpsl
mov
mov
stos
mov
in
movsl
mov
in
test
mov
in
mov
movsl
mov
xchg
test
mov
in
mov
mov
stos
mov
movsl
mov
in
in
mov
mov
mov
stos
mov
les
in
mov
mov
cmpsl
in
lods
mov
movsl
mov
mov
jecxz
movsb
test
mov
cmpsl
mov
mov
cmpsl
stos
mov
in
stos
stos
mov
mov
cmpsl
mov
mov
lods
mov
mov
mov
mov
les
mov
mov
movsl
mov
in
stos
mov
in
stos
stos
mov
mov
cmpsl
mov
mov
lods
mov
mov
mov
mov
les
mov
cmpsl
stos
mov
in
stos
stos
mov
mov
cmpsl
mov
mov
lods
mov
mov
mov
mov
les
lods
cmpsl
in
mov
mov
mov
cmpsl
mov
mov
mov
les
lods
cmpsl
in
stos
lods
mov
movsl
test
mov
stos
mov
jecxz
les
cmpsl
mov
mov
mov
movsl
mov
in
stos
mov
in
stos
stos
mov
mov
cmpsl
mov
mov
lods
mov
mov
mov
mov
les
cmpsl
mov
mov
cmpsl
stos
mov
in
stos
stos
mov
mov
cmpsl
mov
mov
lods
mov
mov
mov
mov
les
mov
cmpsl
mov
mov
mov
mov
mov
mov
lods
mov
mov
mov
mov
les
mov
cmpsl
mov
mov
cmpsl
stos
stos
mov
mov
cmpsl
mov
mov
lods
mov
mov
mov
mov
les
test
mov
mov
test
mov
mov
jecxz
les
test
mov
mov
mov
mov
jecxz
les
cmpsl
movsl
test
mov
mov
mov
mov
in
mov
les
in
mov
mov
mov
mov
cmpsl
mov
mov
cmpsl
test
mov
mov
jecxz
movsb
test
cmpsl
movsl
test
mov
mov
cmpsb
test
jecxz
movsb
xchg
nop
nop
les
mov
mov
mov
lods
stos
mov
stos
mov
in
stos
stos
mov
mov
cmpsl
mov
mov
cmpsl
test
mov
mov
jecxz
les
cmpsl
mov
mov
mov
movsl
mov
in
stos
stos
mov
mov
cmpsl
mov
mov
lods
mov
mov
mov
mov
les
cmpsl
mov
mov
mov
mov
mov
mov
lods
mov
mov
mov
mov
les
cmpsl
mov
mov
cmpsl
stos
stos
mov
mov
cmpsl
mov
mov
lods
mov
mov
mov
mov
les
movsl
test
mov
movsl
cmpsl
mov
in
movsl
mov
les
mov
mov
movsl
mov
in
stos
stos
mov
mov
cmpsl
mov
mov
lods
mov
mov
mov
mov
les
mov
mov
mov
mov
mov
lods
mov
mov
mov
mov
les
mov
cmpsl
stos
stos
mov
mov
cmpsl
mov
mov
lods
mov
mov
mov
mov
les
mov
mov
lods
stos
mov
mov
mov
mov
mov
les
test
in
stos
stos
mov
mov
cmpsl
mov
mov
cmpsl
test
mov
mov
jecxz
les
mov
mov
lods
stos
mov
mov
mov
mov
mov
les
in
mov
cmpsl
mov
mov
les
mov
les
in
mov
mov
cmpsl
in
mov
mov
jecxz
les
mov
les
jecxz
movsb
mov
mov
cmpsb
test
jecxz
les
test
jecxz
les
stc
clc
clc
stc
cli
cli
stc
jmp
jmp
stc
out
stc
les
loop
les
in
cli
stc
clc
stc
jmp
jmp
out
jmp
mov
mov
mov
mov
les
stc
stc
stc
clc
clc
cli
cli
in
mov
in
mov
les
test
mov
fwait
fwait
mov
mov
mov
cmpsl
mov
les
repnz
cmpsl
movsl
test
les
mov
movsl
test
les
mov
movsl
test
les
cmpsl
movsl
test
les
cmpsl
movsl
test
les
cmpsl
test
fwait
fwait
cmpsb
movsl
mov
mov
les
ret
daa
ret
daa
ret
daa
ret
daa
ret
daa
ret
daa
ret
daa
ret
daa
ret
daa
ret
cs
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
daa
ret
daa
ret
jg
aam
daa
ret
daa
ret
jg
aam
daa
ret
daa
ret
daa
ret
daa
ret
daa
ret
ret
daa
ret
cmp
ret
daa
ret
daa
ret
sub
aam
daa
ret
jg
aam
daa
ret
jg
aam
daa
ret
jg
aam
daa
ret
daa
ret
js
aam
jg
aam
daa
ret
daa
ret
daa
ret
daa
ret
daa
ret
daa
ret
daa
ret
daa
ret
daa
ret
daa
ret
daa
ret
daa
ret
daa
ret
es
es
es
es
es
es
es
es
es
es
es
and
ret
and
ret
and
ret
and
ret
and
ret
and
aam
and
aam
and
aam
and
aam
and
aam
and
aam
and
aam
and
aam
and
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
cs
imul
scas
imul
stos
imul
je
rcl
imul
sbb
aam
jo
aam
imul
adc
je
aam
je
aam
je
aam
jo
aam
jo
aam
jo
aam
sti
sti
in
les
mov
stos
mov
les
mov
mov
mov
jmp
test
les
stos
mov
les
les
les
in
les
les
clc
mov
mov
mov
call
lods
mov
lods
mov
call
in
lods
mov
mov
in
lahf
les
mov
test
mov
movsl
test
les
les
mov
stos
fwait
mov
mov
les
movsl
mov
movsl
mov
lods
mov
jecxz
les
test
stos
movsl
test
cmpsl
mov
movsb
les
lods
cmpsl
jmp
jmp
mov
mov
jmp
test
jmp
les
mov
in
cmpsl
mov
jecxz
les
in
les
mov
les
in
les
les
mov
in
les
mov
mov
in
in
les
stos
in
xchg
in
lahf
mov
mov
scas
cltd
inc
les
in
les
mov
mov
mov
mov
mov
in
les
movsl
test
les
cmpsl
in
movsb
mov
test
mov
mov
cmpsl
in
movsl
mov
in
mov
in
mov
cmpsl
mov
mov
lods
mov
jecxz
movsb
mov
test
mov
mov
cmpsl
in
movsl
mov
in
mov
in
stos
stos
mov
mov
cmpsl
mov
mov
lods
mov
jecxz
les
in
mov
mov
cmpsl
in
mov
cmpsl
mov
mov
lods
mov
jecxz
les
mov
mov
les
lods
mov
mov
mov
mov
lods
mov
mov
in
les
jecxz
les
in
les
lods
test
in
les
les
lods
test
in
stos
test
mov
test
les
les
mov
mov
test
les
xchg
mov
fwait
fwait
lods
stos
mov
idiv
les
les
fwait
mov
fwait
fwait
lods
stos
mov
lock
cmc
repnz
div
les
cld
les
in
les
les
les
lods
stos
mov
les
les
stos
cmpsl
mov
stos
mov
movsl
mov
stos
stos
les
mov
mov
mov
mov
stos
stos
test
les
mov
test
xchg
stos
mov
mov
les
mov
mov
xchg
lods
stos
mov
mov
mov
les
imul
orb
mov
stos
cmpsl
movsl
mov
stos
stos
les
les
les
in
stos
mov
cmpsl
stos
stos
mov
mov
in
movsl
test
stos
mov
lods
test
in
nop
xchg
mov
test
mov
test
in
movsl
test
mov
stos
mov
in
mov
mov
ljmp
popf
mov
mov
stos
mov
in
mov
lods
mov
mov
lock
hlt
ljmp
les
in
mov
cmpsb
mov
in
mov
in
mov
mov
ljmp
mov
test
in
mov
stos
stos
mov
mov
test
mov
in
mov
cmpsb
stos
stos
mov
test
cmpsl
scas
fwait
mov
les
mov
mov
movsl
mov
stos
mov
cmpsl
mov
stos
mov
les
movsl
mov
in
les
test
les
mov
mov
les
mov
mov
test
stos
stos
mov
mov
les
mov
mov
stos
mov
mov
stos
stos
mov
mov
stos
mov
in
lods
mov
mov
movsl
test
jecxz
in
mov
les
test
mov
les
mov
test
les
mov
test
mov
les
cmpsl
scas
les
les
mov
mov
fwait
mov
les
mov
mov
mov
les
mov
mov
lods
stos
cmpsl
mov
les
les
les
mov
lods
ljmp
stos
mov
les
les
les
les
les
les
lock
cld
lock
jmp
les
lock
jmp
les
les
test
hlt
test
test
mov
lods
mov
clc
nop
cli
in
stos
stos
in
stos
stos
mov
mov
cmpsl
mov
mov
nop
cli
in
stos
stos
in
stos
stos
mov
ret
aam
fadd
aam
fadd
aam
fcmovb
aam
lock
aam
icebp
aam
fcmovb
aam
in
aam
in
aam
fld
aam
jecxz
aam
out
aam
out
aam
in
aam
in
aam
in
aam
fld
aam
jecxz
aam
call
aam
in
aam
in
aam
in
aam
fld
aam
cli
aam
xor
aam
fld
aam
jmp
aam
xor
aam
xor
aam
xor
aam
xor
aam
xor
aam
fadd
aam
jmp
aam
xor
aam
fadd
aam
outsb
aam
ljmp
inc
push
aam
aam
mov
aam
pop
aam
mov
aam
ffreep
aam
mov
aam
mov
aam
mov
aam
rol
aam
dec
aam
fadd
aam
rol
aam
js
aam
rol
aam
dec
aam
fadd
aam
rol
aam
jg
aam
rol
aam
push
aam
push
aam
js
aam
rol
aam
dec
aam
in
aam
rol
aam
jg
aam
rol
aam
dec
aam
in
aam
rol
aam
jg
aam
rol
aam
push
aam
push
aam
jg
aam
rol
aam
jmp
aam
push
aam
ret
aam
mov
aam
insl
aam
xlat
aam
push
ret
aam
mov
aam
insl
aam
xlat
aam
push
aad
aam
mov
aam
insl
aam
xlat
aam
push
aad
aam
mov
aam
insl
aam
xlat
aam
push
aad
aam
lods
aam
outsb
aam
mov
cmpsb
movsl
mov
scas
fwait
mov
mov
les
in
stos
mov
cmpsl
stos
stos
mov
mov
in
movsl
test
stos
mov
lods
test
in
stos
cmpsl
movsl
test
mov
test
mov
cmpsl
scas
mov
test
cmpsl
mov
lods
stos
mov
mov
mov
mov
mov
cmc
div
ljmp
les
in
in
in
mov
stos
stos
mov
lods
test
mov
in
mov
stos
scas
stos
stos
mov
in
lods
lods
mov
stos
cmpsb
scas
mov
stos
mov
in
mov
mov
mov
in
mov
lods
mov
stos
lods
mov
stos
les
test
mov
stos
mov
movsl
mov
stos
stos
in
lods
lods
mov
stos
cmpsb
scas
mov
stos
mov
in
mov
mov
mov
in
movsl
stos
mov
cmpsl
cmpsl
mov
mov
mov
nop
mov
stos
mov
stos
mov
movsl
mov
stos
stos
in
lods
lods
mov
stos
cmpsb
scas
mov
mov
stos
stos
mov
movsl
mov
movsl
cmpsl
lods
movsl
cmpsb
test
les
les
mov
stos
mov
mov
mov
scas
in
lods
mov
stos
stos
stos
mov
cmpsb
mov
cmpsl
lods
mov
mov
lods
lods
mov
cmpsl
lods
mov
mov
mov
xchg
stos
mov
jmp
les
movsl
mov
mov
movsl
mov
in
mov
mov
mov
mov
test
in
movsl
mov
mov
mov
stos
mov
mov
test
mov
les
ret
aam
jns
aam
js
aam
cld
ret
aam
adc
aam
repz
aam
scas
fcmovb
aam
bnd
aam
scas
ffreep
aam
bnd
aam
and
aam
and
aam
bnd
aam
mov
aam
sub
ret
aam
mov
aam
sub
ret
aam
mov
aam
sub
les
aam
mov
aam
sub
aam
insl
aam
xor
aam
insb
aam
sub
aam
insl
aam
cmp
aam
sub
aam
inc
aam
inc
aam
inc
aam
pop
aam
sub
aam
inc
aam
inc
aam
dec
aam
inc
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
xor
aam
sub
aam
sub
aam
sub
aam
sub
aam
inc
aam
inc
aam
inc
aam
inc
aam
inc
aam
dec
aam
xor
aam
sub
aam
sub
aam
sub
aam
dec
aam
test
aam
inc
aam
inc
aam
les
hlt
aam
ffree
aam
fadd
aam
ffree
aam
ffree
aam
cs
aam
mov
aam
ffree
aam
sub
aam
cs
aam
cs
aam
cs
aam
mov
aam
add
aam
ljmp
mov
fadd
aam
adc
aam
ffree
aam
jge
aam
sub
aam
sub
aam
jge
aam
and
aam
jmp
aam
sub
aam
jae
aam
sub
aam
mov
aam
mov
aam
inc
aam
jl
aam
call
aam
xor
ret
aam
xor
aam
call
aam
cmp
aam
out
ret
aam
cmp
aam
cmp
aam
rol
je
vandps
rol
aam
in
ret
aam
in
aam
sub
aam
sub
aam
sub
aam
sub
aam
sub
aam
mov
aam
xor
aam
cs
aam
cs
aam
xor
aam
mov
aam
push
aam
sub
aam
xor
aam
in
ret
aam
add
aam
sub
mov
inc
das
aam
sub
aam
sub
aam
push
aam
mov
aam
xor
aam
das
aam
xor
aam
xor
aam
in
ret
aam
mov
aam
js
aam
in
ret
aam
jnp
aam
jecxz
aam
js
aam
jecxz
aam
add
aam
jecxz
aam
mov
aam
mov
aam
jnp
aam
jecxz
aam
jmp
aam
mov
aam
jecxz
aam
jmp
aam
mov
aam
loop
aam
mov
aam
mov
aam
xlat
aam
mov
aam
loop
aam
mov
aam
popf
xlat
aam
push
loop
aam
mov
aam
mov
aam
xlat
aam
push
vunpcklps
ret
aam
mov
aam
ljmp
je
loope
aam
mov
aam
lods
xlat
aam
push
loope
aam
mov
aam
push
xlat
aam
push
movsl
test
in
stos
in
test
cmpsb
stos
stos
mov
mov
lods
stos
stos
les
ret
aam
aam
aam
inc
aam
pop
aam
inc
aam
sbb
aam
inc
aam
pop
aam
std
ret
aam
sbb
aam
std
ret
aam
adc
aam
adc
aam
sbb
aam
std
ret
aam
mov
aam
adc
aam
xlat
aam
push
std
ret
aam
mov
aam
adc
aam
xlat
aam
push
cld
ret
aam
mov
aam
adc
aam
xlat
aam
push
clc
ret
aam
xor
clc
ret
aam
sbb
aam
sbb
aam
inc
aam
and
aam
es
and
aam
cs
sub
aam
aad
aam
ljmp
test
xlat
aam
push
inc
aam
mov
aam
xor
aam
xlat
aam
push
lea
les
les
test
aam
hlt
aam
ffree
aam
fadd
aam
ffree
aam
ffree
aam
cs
aam
mov
aam
ffree
aam
sub
aam
cs
aam
cs
aam
cs
aam
mov
aam
add
aam
test
aam
movsb
aam
jmp
aam
fadd
aam
adc
aam
ffree
aam
jge
aam
sub
aam
xor
aam
jge
aam
and
aam
test
aam
cmp
aam
cmp
aam
test
aam
cmp
aam
cmp
aam
test
aam
cmp
aam
dec
test
aam
xor
aam
test
aam
xor
aam
sti
ret
aam
rol
mov
aam
aad
aam
rol
aam
lret
vandps
ljmp
movsb
hlt
aam
sub
aam
sub
aam
sub
aam
sub
aam
sub
aam
mov
aam
xor
aam
cs
aam
cs
aam
xor
aam
mov
aam
push
aam
sub
aam
cmp
ret
aam
movsb
aam
sub
mov
inc
das
aam
sub
aam
sub
aam
pop
aam
mov
aam
xor
aam
das
aam
xor
aam
xor
aam
cli
ret
aam
mov
aam
mov
aam
xlat
aam
push
vunpcklps
ret
aam
mov
aam
mov
aam
xlat
aam
push
stc
ret
aam
mov
aam
mov
aam
xlat
aam
push
stc
ret
aam
mov
aam
mov
aam
xlat
aam
push
vmovaps
ret
aam
mov
aam
mov
aam
xlat
aam
push
clc
ret
aam
mov
aam
mov
aam
xlat
aam
push
xchg
aam
lods
aam
mov
aam
xchg
xchg
xchg
mov
mov
mov
int3
add
test
aam
xlat
aam
mov
aam
xchg
aam
lods
aam
mov
aam
xchg
aam
lods
aam
mov
aam
in
stos
mov
mov
mov
test
stos
mov
mov
test
test
mov
movsl
mov
in
movsl
mov
test
in
les
test
lods
lods
mov
stos
cmpsb
scas
mov
mov
mov
in
xchg
in
lods
lods
mov
stos
cmpsb
scas
mov
movsl
stos
stos
stos
mov
mov
mov
mov
test
lea
mov
test
mov
in
lods
movsl
stos
in
lods
mov
lods
test
mov
in
xchg
in
mov
in
in
mov
mov
mov
mov
lods
test
mov
in
lods
lods
mov
stos
cmpsb
scas
mov
stos
mov
mov
mov
stos
mov
in
in
mov
cmpsl
lods
movsl
test
test
mov
in
test
cmpsl
scas
in
mov
in
mov
lods
mov
mov
in
les
movsl
stos
mov
stos
mov
movsl
mov
stos
stos
in
movsl
stos
jecxz
in
mov
stos
cmpsl
movsl
mov
in
in
les
ret
aam
mov
aam
sub
aam
pop
aam
xor
aam
push
aam
sub
aam
pop
aam
cmp
aam
sub
aam
inc
aam
inc
aam
inc
aam
pop
aam
sub
aam
inc
aam
inc
aam
dec
aam
inc
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
xor
aam
sub
aam
sub
aam
sub
aam
sub
aam
inc
aam
inc
aam
inc
aam
inc
aam
inc
aam
dec
aam
xor
aam
sub
aam
sub
aam
sub
aam
dec
aam
add
mov
aam
inc
aam
inc
aam
add
mov
aam
xor
aam
xor
aam
add
movsb
mov
aam
sub
ret
aam
dec
aam
dec
aam
dec
aam
add
inc
mov
aam
mov
aam
mov
mov
mov
in
mov
mov
in
mov
stos
mov
mov
movsl
test
mov
xchg
movsl
lods
mov
in
mov
lods
mov
movsl
mov
lods
in
stos
mov
jecxz
xchg
movsl
stos
mov
test
mov
mov
mov
in
stos
cmpsl
stos
mov
stos
mov
mov
subl
mov
lods
test
mov
in
lods
lods
mov
stos
cmpsb
scas
mov
stos
mov
in
mov
mov
mov
in
mov
mov
mov
mov
stos
stos
mov
lods
mov
stos
stos
mov
movsl
in
movsl
test
mov
in
mov
les
cmpsl
scas
mov
hlt
jmp
add
aam
sub
ret
aam
mov
aam
sub
ret
aam
mov
aam
sub
ret
aam
mov
aam
sub
ret
aam
mov
aam
sub
stos
cmpsl
scas
xchg
movsl
mov
xchg
cmpsl
lods
mov
mov
xchg
les
mov
lods
mov
xchg
mov
mov
in
stos
mov
test
mov
mov
lods
mov
les
mov
lods
mov
xchg
mov
mov
les
xchg
lods
stos
scas
in
lods
mov
lods
stos
mov
mov
mov
mov
mov
mov
mov
mov
les
test
mov
stos
mov
movsl
mov
stos
stos
subb
in
test
movsl
mov
in
mov
in
mov
lods
mov
movsl
mov
mov
mov
stos
subb
movsl
stos
mov
lods
mov
movsl
mov
mov
mov
stos
subb
mov
mov
lods
mov
movsl
mov
mov
mov
xchg
les
test
mov
stos
mov
movsl
mov
stos
stos
subb
in
popl
addb
stos
mov
fwait
test
xchg
mov
orb
stos
stos
stos
mov
cmpsb
mov
mov
lods
in
xchg
mov
mov
movsl
stos
mov
stos
mov
movsl
mov
stos
stos
subb
in
test
lods
stos
mov
mov
stos
mov
mov
stos
stos
mov
movsl
in
mov
mov
mov
mov
cmpsb
test
cmpsl
scas
in
lods
mov
mov
xchg
test
in
mov
mov
mov
mov
les
test
mov
stos
mov
movsl
mov
stos
stos
subb
in
lods
mov
mov
mov
test
stos
mov
mov
stos
stos
mov
movsl
in
mov
mov
mov
mov
cmpsb
test
cmpsl
scas
in
lods
mov
xchg
mov
mov
movsl
stos
mov
stos
mov
movsl
mov
stos
stos
subb
in
stos
mov
test
mov
xchg
in
repz
test
cmpsl
scas
in
movsl
mov
in
stos
mov
mov
mov
movsl
stos
mov
stos
mov
movsl
mov
stos
stos
subb
in
stos
mov
test
mov
mov
movsl
stos
mov
stos
mov
mov
mov
in
stos
mov
mov
mov
clc
nop
cli
in
stos
stos
in
stos
stos
mov
mov
aam
outsl
aam
sub
aam
pop
aam
xor
aam
pop
aam
pop
aam
data16
aam
addr16
aam
sub
aam
pop
aam
pop
aam
fs
aam
pop
aam
sub
aam
inc
aam
inc
aam
dec
aam
inc
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
xor
aam
sub
aam
sub
aam
pop
aam
pop
aam
inc
aam
inc
aam
inc
aam
inc
aam
inc
aam
dec
aam
sub
aam
pop
aam
pop
aam
pop
aam
dec
aam
pop
aam
sub
aam
sub
aam
outsl
aam
pop
aam
imul
aam
imul
aam
imul
add
aam
pop
aam
mov
aam
jno
aam
inc
aam
inc
aam
mov
aam
jno
aam
jo
aam
jno
aam
in
stos
stos
cmpsb
test
cmpsl
scas
lods
stos
mov
mov
in
mov
stos
stos
mov
lods
test
mov
in
mov
mov
stos
cmpsb
scas
mov
hlt
mov
aam
mov
aam
sub
test
div
repnz
aam
sub
aam
jae
aam
sub
aam
mov
aam
mov
aam
inc
aam
jl
aam
mov
aam
jl
aam
jle
aam
jle
aam
std
aam
inc
aam
js
aam
inc
aam
fadd
aam
jge
aam
cs
aam
jge
aam
js
aam
jg
aam
jg
aam
inc
aam
jg
aam
inc
aam
jg
aam
jle
aam
jge
aam
jle
aam
cld
aam
jge
aam
jle
aam
mov
mov
mov
mov
stos
stos
in
movsl
lods
test
mov
lods
in
mov
stos
mov
les
mov
les
test
mov
mov
mov
mov
andl
stos
test
ret
aam
mov
aam
sub
ret
aam
jp
aam
sub
aam
push
aam
xor
aam
mov
aam
mov
aam
inc
aam
inc
aam
mov
rol
int3
aam
in
les
ffreep
repnz
les
scas
stos
add
lds
mov
inc
or
xor
adc
pop
pusha
mov
jae
push
loop
sti
xor
lock
and
rolb
pop
fcoml
pop
ret
inc
es
jecxz
mov
inc
call
fs
call
ja
daa
jmp
xchg
adc
jne
scas
std
mov
outsb
aas
xchg
mov
xchg
test
pop
cld
xor
push
in
cmp
push
or
xlat
sub
arpl
mov
inc
mov
out
push
dec
subb
rcrb
lcall
ret
push
pop
push
mov
dec
adc
mov
mov
jo
sub
mov
jns
dec
mov
jno
mov
xor
movsl
icebp
xchg
jge
add
pop
aad
sbb
inc
sub
dec
gs
leave
jnp
xchg
nop
jg
xchg
int
adc
repnz
cld
jnp
addr16
inc
aaa
adc
mov
jmp
inc
lock
xchg
nop
mov
out
sub
pop
mov
ljmp
mov
lea
cmp
mov
adc
or
mov
xchg
cmp
jge
lcall
inc
push
sbb
les
pop
into
xor
pushf
sarl
adc
fimull
sti
lret
movb
dec
scas
push
aad
mov
or
xor
and
and
inc
es
sbb
fldln2
add
jae
lret
jp
cmp
mov
cmp
insb
testl
popf
jecxz
sub
fnsave
leave
jmp
or
decl
or
jg
inc
xchg
pop
movsl
shr
sarb
lods
shlb
mov
rol
int3
aam
in
les
ffreep
repnz
les
xchg
repz
aas
add
popa
pop
jno
lahf
push
xchg
std
xor
inc
sti
push
adc
ret
sbb
lahf
inc
jp
cmc
loopne
mov
jp
cmp
inc
arpl
sbb
xor
pop
and
jp
add
lret
or
loopne
call
mov
sbb
cwtl
push
dec
cmp
pop
test
jecxz
je
mov
and
adcl
xchg
cmpsl
push
ret
in
rolb
jae
cld
in
ljmp
cld
xchg
nop
mov
mov
ljmp
push
gs
data16
mov
popl
addr16
test
adc
inc
icebp
lret
fs
aam
add
repz
js
lock
fdivr
mov
mov
stos
ljmp
cmpsl
popa
mov
int3
movb
cmp
das
test
pusha
xor
jp
mov
in
adc
xchg
mov
repz
decl
jno
pop
dec
inc
popa
pop
jno
cld
jno
aaa
lahf
push
xchg
std
fstl
jb
aad
popf
pop
mov
imul
push
faddl
push
adc
addr16
outsb
ret
sbb
stos
mov
lds
and
es
adc
mov
mov
mov
push
sar
cmp
inc
icebp
add
arpl
sbb
loop
or
mov
and
loope
cld
inc
cmpl
adc
add
lret
mov
gs
out
popf
stos
call
bound
adc
test
insl
je
jno
aad
push
dec
cmp
sub
divb
test
in
pop
or
je
lret
add
insb
stc
aaa
iret
and
loope
into
push
adcl
stos
inc
and
cmpsl
push
ret
lret
in
in
sarb
jmp
addb
jecxz
or
fucomip
sub
add
sbb
pop
xlat
leave
cld
xchg
sbb
into
mov
jg
scas
mov
push
sub
push
inc
push
inc
rolb
mov
mov
sub
data16
js
mov
cmp
mov
popl
hlt
jp
ret
test
fcoml
push
adc
loopne
pop
adc
in
xchg
inc
icebp
lret
adc
scas
aam
adc
jl
add
test
pop
das
dec
sbb
mov
jno
je
cmpsl
sahf
or
std
cmovle
mov
push
pop
lahf
addr16
adc
stos
ljmp
inc
dec
mov
jmp
xchg
outsl
xor
sarb
fmulp
movb
in
fisubl
push
sub
test
pusha
sarl
cmp
daa
ss
loop
or
jecxz
ret
push
add
add
fisubrl
and
adc
stos
sub
stos
shll
bound
add
cmp
aad
sbb
icebp
iret
mov
inc
mov
pop
in
push
loopne
test
jp
ror
jp
clc
mov
aam
add
cli
adc
mov
mov
mov
outsl
stos
setnp
pushf
orl
lds
xchg
mov
stos
mov
test
mov
mov
mov
mov
mov
test
mov
les
lods
mov
fmuls
aam
sub
aam
xor
aam
xor
aam
xor
aam
sub
aam
sub
aam
cmp
aam
sub
aam
inc
aam
inc
aam
inc
aam
pop
aam
sub
aam
sub
aam
sub
aam
xor
aam
ss
aam
cmp
aam
ss
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
xor
aam
sub
aam
sub
aam
ss
aam
xor
aam
inc
aam
inc
aam
inc
aam
inc
aam
inc
aam
dec
aam
xor
aam
sub
aam
sub
aam
sub
aam
dec
aam
mov
aam
ds
aam
inc
aam
inc
aam
les
aam
sub
aam
pop
aam
xor
aam
aas
aam
sub
aam
xor
aam
cmp
aam
aas
aam
inc
aam
inc
aam
inc
aam
pop
aam
sub
aam
sub
aam
inc
aam
xor
aam
xor
aam
cmp
aam
xor
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
xor
aam
sub
aam
sub
aam
cmp
aam
ds
aam
inc
aam
aas
aam
inc
aam
inc
aam
aas
aam
dec
aam
xor
aam
sub
aam
sub
aam
sub
aam
dec
aam
mov
aam
push
aam
inc
aam
inc
aam
mov
mov
nop
mov
stos
mov
stos
mov
movsl
mov
stos
stos
in
lods
lods
mov
stos
cmpsb
scas
mov
stos
mov
in
test
stos
mov
lods
stos
mov
mov
les
aam
sub
les
ret
aam
cmp
aam
cmp
aam
movsl
test
mov
mov
fmuls
aam
sub
aam
pop
aam
xor
aam
cmp
aam
sub
aam
cmp
aam
cmp
aam
cmp
aam
inc
aam
inc
aam
inc
aam
mov
test
aam
cmp
aam
cmp
aam
dec
aam
inc
aam
dec
aam
dec
aam
dec
aam
cmp
aam
cmp
aam
dec
aam
movsb
dec
aam
dec
aam
xor
aam
cmp
aam
cmp
aam
push
aam
inc
aam
inc
aam
inc
aam
inc
aam
inc
aam
dec
aam
xor
aam
sub
aam
sub
aam
sub
aam
dec
aam
mov
aam
in
aam
inc
aam
inc
aam
and
scas
inc
push
jg
aaa
stos
clc
xor
xchg
dec
lods
rcrl
inc
fcmovnu
or
les
mov
mov
xchg
lods
stos
mov
mov
mov
mov
mov
mov
in
test
stos
mov
mov
lods
movsl
mov
in
mov
cmpsl
mov
stos
stos
in
les
ret
aam
mov
aam
sub
test
xchg
mov
mov
xchg
mov
test
xchg
mov
mov
mov
lods
in
mov
stos
mov
les
stos
mov
test
les
stos
mov
cmpsl
test
les
mov
mov
stos
test
mov
stos
stos
in
in
stos
in
nop
nop
in
movsl
mov
in
les
mov
cmpsl
fwait
cmpsl
movsl
mov
in
les
enter
aam
ret
aam
les
aam
xchg
aam
int3
xor
aam
int
aam
mov
les
int
aam
out
aam
int3
xor
aam
les
cmp
cmp
les
ret
aam
lock
aam
int
aam
mov
ret
aam
int
aam
loopne
aam
loopne
aam
lock
aam
les
cmp
cmp
les
ret
aam
les
int
aam
int
aam
les
ret
aam
les
cmp
cmp
les
ret
aam
cld
xor
ret
aam
mov
ror
ret
aam
into
ret
aam
out
aam
cld
xor
les
cmp
cmp
les
ret
aam
les
ret
aam
mov
les
ret
aam
out
aam
les
les
cmp
cmp
les
ret
aam
les
ret
aam
mov
les
ret
aam
into
ret
aam
out
aam
les
les
cmp
cmp
les
ret
aam
les
ret
aam
into
ret
aam
rol
les
ret
aam
iret
ret
aam
loopne
aam
loopne
aam
ffreep
aam
les
ret
aam
les
cmp
cmp
les
ret
aam
in
les
ret
aam
into
ret
aam
aam
ret
aam
iret
ret
aam
les
ret
aam
iret
ret
aam
loopne
aam
loopne
aam
ffreep
aam
faddp
aam
aam
ret
aam
les
cmp
cmp
les
ret
aam
in
aam
ret
aam
iret
ret
aam
les
aam
iret
ret
aam
les
ret
aam
iret
ret
aam
int
aam
loopne
aam
loopne
aam
ffreep
aam
les
aam
les
cmp
cmp
les
ret
aam
in
les
aam
iret
ret
aam
les
ret
aam
enter
clc
enter
enter
iret
ret
aam
int
aam
loopne
aam
loopne
aam
ffreep
aam
faddp
aam
les
ret
aam
les
cmp
cmp
les
ret
aam
in
les
ret
aam
enter
clc
aam
ret
aam
iret
ret
aam
clc
les
ret
aam
enter
les
ret
aam
mov
les
ret
aam
enter
int
aam
les
les
cmp
cmp
les
ret
aam
les
aam
leave
ret
aam
mov
ret
aam
leave
ret
aam
enter
int
aam
les
aam
les
cmp
cmp
les
ret
aam
fdivl
ret
aam
leave
ret
aam
rol
les
leave
ret
aam
leave
ret
aam
enter
int
aam
fdivl
ret
aam
les
cmp
cmp
les
ret
aam
les
aam
leave
ret
aam
les
ret
aam
leave
ret
aam
leave
ret
aam
out
aam
loopne
aam
lret
les
aam
les
cmp
cmp
les
ret
aam
xor
aam
les
cmp
cmp
les
ret
aam
mov
ret
aam
leave
ret
aam
out
aam
loopne
aam
aam
aam
hlt
les
cmp
cmp
les
ret
aam
hlt
les
aam
leave
ret
aam
int3
xor
aam
lret
les
ret
aam
lret
and
ret
aam
leave
ret
aam
out
aam
loopne
aam
lret
or
ret
aam
int3
xor
aam
les
cmp
cmp
les
ret
aam
aam
aam
les
cmp
cmp
les
ret
aam
hlt
int3
xor
aam
lret
les
ret
aam
lret
les
int3
xor
aam
lret
les
aam
lret
ret
aam
mov
les
lret
ret
aam
out
aam
les
aam
les
cmp
cmp
les
ret
aam
les
lret
ret
aam
mov
ret
aam
lret
ret
aam
fcmovnb
aam
fcmovnb
aam
les
les
cmp
cmp
les
ret
aam
les
aam
lret
ret
aam
mov
ret
aam
lret
ret
aam
fcmovnb
aam
fcmovnb
aam
les
aam
les
cmp
cmp
les
ret
aam
les
ret
aam
les
ret
aam
les
ret
aam
mov
les
ret
aam
loopne
aam
les
les
cmp
cmp
les
ret
aam
les
ret
aam
mov
ret
aam
aam
aam
aam
aam
loopne
aam
les
les
cmp
cmp
les
ret
aam
aam
ret
aam
aam
aam
les
aam
aam
aam
aam
aam
ret
aam
les
cmp
cmp
les
ret
aam
les
aas
ret
aam
aad
aam
mov
clc
aad
aam
aad
aam
loopne
aam
les
aas
ret
aam
les
cmp
cmp
les
ret
aam
les
ret
aam
mov
les
aam
aad
aam
in
aam
les
les
cmp
cmp
les
ret
aam
les
int3
aam
aad
aam
mov
les
aad
aam
aad
aam
out
aam
les
int3
aam
les
cmp
cmp
les
ret
aam
les
ret
aam
mov
in
ret
aam
ret
aam
out
aam
les
les
cmp
cmp
les
ret
aam
les
ret
aam
mov
les
ret
aam
out
aam
les
les
cmp
cmp
les
ret
aam
les
aam
ret
aam
mov
les
aam
ret
aam
out
aam
les
aam
les
cmp
cmp
les
ret
aam
clc
les
aam
xlat
ret
aam
in
les
aam
xlat
ret
aam
les
aam
xlat
ret
aam
int3
call
xlat
ret
aam
xlat
ret
aam
in
aam
loopne
aam
loopne
aam
loopne
aam
ffreep
aam
faddp
aam
les
aam
les
cmp
cmp
les
ret
aam
in
in
int3
aam
xlat
ret
aam
in
int3
aam
xlat
ret
aam
les
ret
aam
xlat
ret
aam
in
aam
loopne
aam
loopne
aam
loopne
aam
ffreep
aam
in
int3
aam
les
cmp
cmp
les
ret
aam
clc
les
aam
rol
aam
in
les
aam
rol
aam
les
aam
rol
aam
int3
in
rol
aam
rol
aam
rol
aam
in
aam
loopne
aam
loopne
aam
loopne
aam
ffreep
aam
faddp
aam
les
aam
les
cmp
cmp
les
ret
aam
in
in
int3
aam
rol
aam
in
int3
aam
rol
aam
les
aam
rol
aam
in
aam
loopne
aam
loopne
aam
loopne
aam
ffreep
aam
in
int3
aam
les
cmp
cmp
les
ret
aam
les
ret
aam
mov
les
rol
aam
rol
aam
fld
aam
les
les
cmp
cmp
les
ret
aam
les
les
ret
aam
les
les
ret
aam
les
ret
aam
les
ret
aam
rol
aam
fcmovb
aam
out
aam
loopne
aam
rol
aam
rol
aam
in
int3
aam
les
cmp
les
ret
aam
ror
aam
les
cmp
cmp
les
ret
aam
les
les
int3
aam
rol
aam
les
int3
aam
rol
aam
rol
aam
rol
aam
fcmovb
aam
out
aam
loopne
aam
rol
aam
aam
aam
les
cmp
cmp
les
ret
aam
ror
aam
les
cmp
cmp
les
ret
aam
loopne
les
ret
aam
aam
les
ret
aam
les
ret
aam
les
ret
aam
rol
aam
rol
aam
in
aam
in
aam
loopne
aam
ffree
aam
fadd
aam
les
les
cmp
cmp
les
ret
aam
aam
les
int3
aam
rol
aam
les
int3
aam
rol
aam
aam
ret
aam
rol
aam
in
aam
in
aam
loopne
aam
ffree
aam
les
int3
aam
les
cmp
cmp
les
ret
aam
in
les
aam
rol
aam
enter
les
aam
rol
aam
les
aam
rol
aam
les
aam
rol
aam
fadd
aam
loope
aam
loopne
aam
fadd
aam
rol
aam
in
int3
aam
in
les
cmp
cmp
les
ret
aam
xlat
int3
aam
les
cmp
cmp
les
ret
aam
enter
ror
aam
fadd
aam
ror
aam
fadd
aam
rol
fcomp
ret
aam
fadd
aam
loope
aam
loopne
aam
fadd
aam
aam
aam
enter
cmp
cmp
les
ret
aam
ror
aam
les
cmp
cmp
les
ret
aam
loopne
les
ret
aam
aam
les
ret
aam
les
ret
aam
les
ret
aam
fadd
aam
ffree
aam
in
aam
in
aam
loopne
aam
ffree
aam
fadd
aam
in
int3
aam
loopne
les
cmp
cmp
les
ret
aam
int3
aam
les
cmp
cmp
les
ret
aam
aam
les
int3
aam
ffree
aam
les
int3
aam
ffree
aam
les
ffree
aam
in
aam
in
aam
loopne
aam
ffree
aam
aam
aam
aam
les
cmp
cmp
les
ret
aam
int3
aam
les
cmp
cmp
les
ret
aam
clc
cld
aad
aam
ffree
aam
in
cld
aad
aam
ffree
aam
cld
aad
aam
ffree
aam
int3
les
ret
aam
faddp
aam
out
aam
loopne
aam
loopne
aam
loopne
aam
ffreep
aam
faddp
aam
cld
aad
aam
les
cmp
cmp
les
ret
aam
in
les
ret
aam
les
ret
aam
les
ret
aam
out
aam
loopne
aam
loopne
aam
loopne
aam
ffreep
aam
les
les
cmp
cmp
les
ret
aam
clc
les
ret
aam
in
les
ret
aam
les
ret
aam
les
faddp
aam
ffreep
aam
ffreep
aam
out
aam
loopne
aam
ffreep
aam
faddp
aam
in
int3
aam
clc
les
cmp
cmp
les
ret
aam
aam
aam
les
cmp
cmp
les
ret
aam
in
les
int3
aam
ffreep
aam
les
int3
aam
ffreep
aam
rol
les
ret
aam
out
aam
loopne
aam
ffreep
aam
aam
aam
in
les
cmp
cmp
les
ret
aam
aam
aam
les
cmp
cmp
les
ret
aam
les
ffreep
aam
mov
les
ret
aam
ffreep
aam
out
aam
les
les
cmp
cmp
les
ret
aam
les
ret
aam
mov
ret
aam
fadd
aam
fld
aam
fcmovnb
aam
les
les
cmp
cmp
les
ret
aam
les
aam
fadd
aam
rol
les
fadd
aam
fadd
aam
fcmovb
aam
fcmovnb
aam
les
int3
aam
les
cmp
cmp
les
ret
aam
mov
ret
aam
fadd
aam
fcmovb
aam
fcmovnb
aam
les
aam
les
cmp
cmp
les
ret
aam
les
iret
int3
aam
fadd
aam
rcr
aam
fld
aam
les
iret
int3
aam
les
cmp
cmp
les
ret
aam
lock
fld
aam
mov
les
fld
aam
fcmovnb
aam
lock
les
cmp
cmp
les
ret
aam
les
int3
aam
fcmovnb
aam
les
ret
aam
mov
ret
aam
fld
aam
fcmovnb
aam
fcmovnb
aam
les
les
cmp
cmp
les
ret
aam
les
int3
aam
fld
aam
mov
ret
aam
fcmovb
aam
fcmovnb
aam
fcmovnb
aam
les
int3
aam
les
cmp
cmp
les
ret
aam
in
ror
aam
fcmovb
aam
mov
ret
aam
fcmovb
aam
out
aam
loopne
aam
in
ror
aam
les
cmp
cmp
les
ret
aam
les
ret
aam
rol
les
ret
aam
fcmovnb
aam
fcmovb
aam
fcmovb
aam
fcmovnb
aam
leave
int3
aam
les
cmp
cmp
les
ret
aam
mov
ret
aam
fcmovb
aam
fcmovb
aam
fcmovnb
aam
les
int3
aam
les
cmp
cmp
les
ret
aam
mov
ret
aam
fcmovb
aam
fcmovnb
aam
les
int3
aam
rol
les
cmp
cmp
les
fcmovnb
aam
leave
int3
aam
les
cmp
cmp
les
ret
aam
les
int3
aam
fcmovnb
aam
mov
les
aam
fcmovnb
aam
fcmovnb
aam
les
int3
aam
rol
les
cmp
cmp
les
ret
aam
les
aam
fcmovnb
aam
les
int3
aam
les
cmp
cmp
les
ret
aam
leave
int3
aam
les
cmp
cmp
les
ret
aam
aam
aam
les
cmp
cmp
les
ret
aam
mov
loopne
ret
aam
fcmovnb
aam
loopne
aam
les
int3
aam
in
aam
les
in
aam
les
int3
aam
les
cmp
cmp
les
ret
aam
lock
int3
aam
in
aam
mov
ret
aam
in
aam
in
aam
loopne
aam
lock
int3
aam
les
cmp
cmp
les
ret
aam
hlt
ror
aam
in
aam
mov
ret
aam
in
aam
in
aam
loopne
aam
hlt
ror
aam
les
cmp
cmp
les
ret
aam
les
ret
aam
mov
clc
in
aam
in
aam
loopne
aam
les
les
cmp
cmp
les
ret
aam
les
ret
aam
rol
les
aam
in
aam
loopne
aam
loopne
aam
loopne
aam
les
les
cmp
cmp
les
ret
aam
les
ret
aam
rol
les
in
aam
in
aam
loopne
aam
loopne
aam
loopne
aam
les
les
cmp
cmp
les
ret
aam
in
int3
aam
out
aam
rol
hlt
out
aam
out
aam
loopne
aam
loopne
aam
loopne
aam
in
int3
aam
les
cmp
cmp
les
ret
aam
ror
int3
aam
out
aam
les
ret
aam
out
aam
ror
int3
aam
les
cmp
cmp
les
ret
aam
lock
js
ret
aam
les
out
aam
out
aam
lock
les
cmp
cmp
les
ret
aam
in
int3
aam
out
aam
shl
ret
aam
out
aam
in
int3
aam
les
cmp
cmp
les
ret
aam
aam
aam
out
aam
les
out
aam
aam
aam
les
cmp
cmp
les
ret
aam
les
ret
aam
mov
les
ret
aam
out
aam
loopne
aam
les
les
cmp
cmp
les
ret
aam
les
int3
aam
out
aam
mov
ret
aam
loopne
aam
loopne
aam
loopne
aam
les
int3
aam
les
cmp
cmp
les
ret
aam
les
int3
aam
loopne
aam
mov
ret
aam
loopne
aam
loopne
aam
loopne
aam
les
int3
aam
les
cmp
cmp
les
ret
aam
les
int3
aam
loopne
aam
mov
les
aam
loopne
aam
loopne
aam
les
int3
aam
les
cmp
cmp
les
ret
aam
les
loopne
aam
mov
les
loopne
aam
loope
aam
loopne
aam
les
les
cmp
cmp
les
ret
aam
shl
ret
aam
loopne
aam
les
les
cmp
cmp
les
ret
aam
les
aam
loope
aam
mov
les
loope
aam
out
aam
les
aam
les
cmp
cmp
les
ret
aam
les
ret
aam
mov
les
aam
loope
aam
out
aam
les
les
cmp
cmp
les
ret
aam
les
int3
aam
loope
aam
mov
les
loope
aam
loop
aam
out
aam
les
int3
aam
les
cmp
cmp
les
ret
aam
in
int3
aam
loop
aam
mov
les
ret
aam
out
aam
in
int3
aam
les
cmp
cmp
les
ret
aam
les
ret
aam
mov
les
ret
aam
loop
aam
out
aam
les
les
cmp
cmp
les
ret
aam
int3
fmul
aam
loop
aam
mov
les
ret
aam
loop
aam
out
aam
int3
fmul
aam
les
cmp
cmp
les
ret
aam
les
ret
aam
mov
loopne
ret
aam
jecxz
aam
fld
aam
les
les
cmp
cmp
les
ret
aam
les
int3
aam
jecxz
aam
mov
les
ret
aam
fld
aam
les
int3
aam
les
cmp
cmp
les
ret
aam
in
les
aam
jecxz
aam
enter
les
aam
jecxz
aam
les
aam
jecxz
aam
les
jecxz
aam
in
ret
aam
in
ret
aam
cld
ret
aam
loopne
aam
fadd
aam
rol
aam
les
aam
les
cmp
cmp
les
ret
aam
enter
in
int3
aam
in
ret
aam
in
int3
aam
in
ret
aam
rol
les
in
ret
aam
cld
ret
aam
loopne
aam
fadd
aam
in
int3
aam
les
cmp
cmp
les
ret
aam
rol
les
aam
in
ret
aam
les
aam
in
ret
aam
enter
js
ret
aam
out
ret
aam
out
ret
aam
in
ret
aam
in
ret
aam
in
ret
aam
in
ret
aam
out
ret
aam
out
ret
aam
test
aam
test
pusha
test
les
les
cmp
cmp
les
ret
aam
into
fsubr
ret
aam
in
ret
aam
in
ret
aam
in
ret
aam
in
ret
aam
out
ret
aam
out
ret
aam
test
aam
test
pusha
test
lock
aam
les
cmp
cmp
les
ret
aam
int
les
in
ret
aam
in
ret
aam
in
ret
aam
out
ret
aam
out
ret
aam
test
aam
test
pusha
test
aam
int3
aam
les
cmp
cmp
les
ret
aam
int3
les
ret
aam
in
ret
aam
out
ret
aam
out
ret
aam
test
aam
test
pusha
test
les
fxch
aam
les
cmp
cmp
les
ret
aam
fsubr
ret
aam
in
ret
aam
out
ret
aam
out
ret
aam
test
aam
test
pusha
test
les
int3
aam
les
cmp
cmp
les
ret
aam
les
out
ret
aam
out
ret
aam
test
aam
test
pusha
test
les
int3
aam
les
cmp
cmp
les
ret
aam
les
ret
aam
out
ret
aam
test
aam
test
pusha
test
les
rol
les
cmp
cmp
les
ret
aam
mov
ret
aam
out
ret
aam
lock
aam
icebp
ret
aam
les
les
cmp
cmp
les
ret
aam
fcmovne
aam
in
les
cmp
cmp
les
out
ret
aam
les
ret
aam
in
int3
aam
les
cmp
cmp
les
ret
aam
fcmovne
aam
les
cmp
cmp
les
ret
aam
les
out
ret
aam
mov
les
ret
aam
call
ret
aam
shl
int3
aam
int3
les
cmp
cmp
les
ret
aam
les
out
ret
aam
out
ret
aam
shl
int3
aam
les
cmp
cmp
les
ret
aam
in
aam
les
cmp
cmp
les
ret
aam
les
ret
aam
mov
les
ret
aam
call
les
les
cmp
cmp
les
ret
aam
les
aam
call
mov
les
ret
aam
call
ret
aam
les
aam
les
cmp
cmp
les
ret
aam
les
aam
call
les
ret
aam
call
les
aam
les
cmp
cmp
les
ret
aam
les
ret
aam
in
jmp
ret
aam
jmp
ret
aam
lock
aam
icebp
ret
aam
jmp
fsub
int3
aam
les
cmp
cmp
les
ret
aam
les
ret
aam
jmp
ret
aam
icebp
ret
aam
jmp
les
int3
aam
rol
les
cmp
cmp
les
ret
aam
les
ret
aam
jmp
les
int3
aam
les
cmp
cmp
les
ret
aam
in
aam
les
cmp
cmp
les
ret
aam
mov
ret
aam
jmp
ret
aam
icebp
ret
aam
les
les
cmp
cmp
les
ret
aam
rol
int3
loope
aam
ljmp
int3
loope
aam
ljmp
aam
les
ret
aam
ljmp
inc
jmp
aam
jmp
aam
hlt
ret
aam
hlt
ret
aam
hlt
ret
aam
test
lock
aam
test
pusha
test
inc
cmc
ret
aam
cmc
ret
aam
cmc
ret
aam
les
aam
les
cmp
cmp
les
ret
aam
lret
les
ret
aam
ljmp
inc
jmp
aam
jmp
aam
hlt
ret
aam
hlt
ret
aam
hlt
ret
aam
test
lock
aam
test
pusha
test
inc
cmc
ret
aam
cmc
ret
aam
cmc
ret
aam
les
les
cmp
cmp
les
ret
aam
lret
les
jmp
aam
jmp
aam
jmp
aam
hlt
ret
aam
hlt
ret
aam
hlt
ret
aam
test
lock
aam
test
pusha
test
inc
cmc
ret
aam
cmc
ret
aam
cmc
ret
aam
les
les
cmp
cmp
les
ret
aam
leave
les
ret
aam
jmp
aam
jmp
aam
hlt
ret
aam
hlt
ret
aam
hlt
ret
aam
test
lock
aam
test
pusha
test
inc
cmc
ret
aam
cmc
ret
aam
cmc
ret
aam
les
int3
aam
les
cmp
cmp
les
ret
aam
enter
aam
ret
aam
jmp
aam
hlt
ret
aam
hlt
ret
aam
hlt
ret
aam
test
lock
aam
test
pusha
test
inc
cmc
ret
aam
cmc
ret
aam
cmc
ret
aam
les
les
cmp
cmp
les
ret
aam
iret
les
ret
aam
hlt
ret
aam
hlt
ret
aam
test
lock
aam
test
pusha
test
inc
cmc
ret
aam
cmc
ret
aam
cmc
ret
aam
les
int3
aam
les
cmp
cmp
les
ret
aam
into
les
hlt
ret
aam
hlt
ret
aam
hlt
ret
aam
test
lock
aam
test
pusha
test
inc
cmc
ret
aam
cmc
ret
aam
cmc
ret
aam
les
aam
les
cmp
cmp
les
ret
aam
int
loopne
ret
aam
hlt
ret
aam
test
lock
aam
test
pusha
test
inc
cmc
ret
aam
cmc
ret
aam
cmc
ret
aam
les
leave
les
cmp
cmp
les
ret
aam
in
aam
enter
cmp
cmp
les
ret
aam
in
aam
enter
cmp
cmp
les
ret
aam
mov
ret
aam
test
aam
ret
aam
cmc
ret
aam
les
les
cmp
cmp
les
ret
aam
les
cmc
ret
aam
cmc
ret
aam
les
les
cmp
cmp
les
ret
aam
in
aam
les
cmp
cmp
les
ret
aam
clc
test
aam
ret
aam
les
les
cmp
cmp
les
ret
aam
out
aam
les
cmp
cmp
les
ret
aam
les
ret
aam
test
lock
aam
test
pusha
test
les
rol
les
cmp
cmp
les
ret
aam
loope
aam
rol
les
cmp
cmp
les
ret
aam
out
aam
rol
les
cmp
cmp
les
ret
aam
mov
ret
aam
test
aam
icebp
ret
aam
aam
int3
aam
les
cmp
cmp
les
ret
aam
out
aam
les
cmp
cmp
les
ret
aam
les
ret
aam
int3
loope
aam
les
cmp
cmp
les
ret
aam
rol
cld
loop
aam
test
cld
loop
aam
test
les
ret
aam
icebp
ret
aam
test
aam
lock
aam
lock
aam
icebp
ret
aam
lock
aam
rol
les
cmp
cmp
les
ret
aam
int3
lock
aam
test
aam
lock
aam
lock
aam
icebp
ret
aam
lock
aam
les
loope
aam
les
cmp
cmp
les
ret
aam
les
ret
aam
lock
aam
lock
aam
icebp
ret
aam
lock
aam
les
int3
aam
les
cmp
cmp
les
ret
aam
rol
les
ret
aam
lock
aam
lock
aam
icebp
ret
aam
lock
aam
les
rol
les
cmp
cmp
les
ret
aam
les
lock
aam
lock
aam
les
les
cmp
cmp
les
ret
aam
loope
aam
les
cmp
cmp
les
ret
aam
mov
loopne
ret
aam
lock
aam
icebp
ret
aam
les
les
cmp
cmp
les
ret
aam
les
icebp
ret
aam
cld
loop
aam
les
cmp
cmp
les
ret
aam
in
int3
aam
icebp
ret
aam
mov
ret
aam
icebp
ret
aam
bnd
aam
loopne
aam
in
int3
aam
les
cmp
cmp
les
ret
aam
les
in
int3
aam
icebp
ret
aam
mov
ret
aam
bnd
aam
bnd
aam
loopne
aam
les
in
int3
aam
les
cmp
cmp
les
ret
aam
les
in
int3
aam
bnd
aam
mov
les
bnd
aam
loopne
aam
les
in
int3
aam
les
cmp
cmp
les
ret
aam
les
int3
aam
bnd
aam
rol
les
aam
bnd
aam
bnd
aam
fcmovb
aam
fcmovnb
aam
les
les
cmp
cmp
les
ret
aam
mov
ret
aam
bnd
aam
fcmovb
aam
fcmovnb
aam
les
int3
aam
les
cmp
cmp
les
ret
aam
les
ret
aam
rol
in
ret
aam
repz
aam
repz
aam
fcmovb
aam
fcmovnb
aam
les
int3
aam
les
cmp
cmp
les
ret
aam
mov
ret
aam
repz
aam
fcmovb
aam
fcmovnb
aam
les
les
cmp
cmp
les
ret
aam
int3
in
int3
aam
repz
aam
rol
les
aam
cld
ret
aam
repz
aam
fcmovb
aam
fcmovnb
aam
les
aam
les
cmp
cmp
les
ret
aam
mov
ret
aam
repz
aam
fcmovb
aam
fcmovnb
aam
int3
in
int3
aam
les
cmp
cmp
les
ret
aam
les
int3
aam
cld
ret
aam
rol
les
ret
aam
cld
ret
aam
fcmovb
aam
fcmovnb
aam
les
les
cmp
cmp
les
ret
aam
mov
ret
aam
cld
ret
aam
fcmovb
aam
fcmovnb
aam
les
int3
aam
les
cmp
cmp
les
ret
aam
les
cld
ret
aam
mov
les
ret
aam
cld
ret
aam
loopne
aam
les
les
cmp
cmp
les
ret
aam
les
aam
std
ret
aam
mov
fdivr
ret
aam
std
ret
aam
out
aam
les
aam
les
cmp
cmp
les
ret
aam
les
int3
aam
std
ret
aam
mov
les
ret
aam
out
aam
les
int3
aam
les
cmp
cmp
les
ret
aam
fsubr
int3
aam
std
ret
aam
mov
les
ret
aam
std
ret
aam
out
aam
fsubr
int3
aam
les
cmp
cmp
les
ret
aam
clc
les
ret
aam
in
les
ret
aam
les
ret
aam
in
inc
aam
inc
aam
inc
aam
inc
aam
out
aam
loopne
aam
ffreep
aam
faddp
aam
les
les
cmp
cmp
les
ret
aam
in
les
int3
aam
inc
aam
les
int3
aam
inc
aam
les
ret
aam
inc
aam
inc
aam
out
aam
loopne
aam
ffreep
aam
les
int3
aam
les
cmp
cmp
les
ret
aam
cld
ljmp
mov
ret
aam
inc
aam
out
aam
loopne
aam
cld
ljmp
les
cmp
cmp
les
ret
aam
les
ret
aam
mov
les
inc
aam
out
aam
les
les
cmp
cmp
les
ret
aam
les
int3
aam
inc
aam
mov
les
aam
inc
aam
out
aam
les
int3
aam
les
cmp
cmp
les
ret
aam
les
ljmp
mov
ret
aam
inc
aam
call
ret
aam
les
ljmp
les
cmp
cmp
les
ret
aam
enter
fdivr
ret
aam
mov
call
clc
ret
aam
call
enter
les
cmp
cmp
les
ret
aam
lock
aam
clc
ret
aam
mov
les
ret
aam
call
lock
aam
les
cmp
cmp
les
ret
aam
les
ret
aam
mov
les
clc
ret
aam
clc
ret
aam
out
aam
les
les
cmp
cmp
les
ret
aam
les
aam
stc
ret
aam
mov
aam
ret
aam
stc
ret
aam
out
aam
les
aam
les
cmp
cmp
les
ret
aam
les
jmp
aam
stc
ret
aam
mov
les
stc
ret
aam
out
aam
les
jmp
aam
les
cmp
cmp
les
ret
aam
fdiv
int3
aam
stc
ret
aam
mov
les
aam
stc
ret
aam
out
aam
fdiv
int3
aam
les
cmp
cmp
les
ret
aam
les
ret
aam
mov
les
stc
ret
aam
cli
ret
aam
out
aam
les
les
cmp
cmp
les
ret
aam
les
aam
cli
ret
aam
mov
les
ret
aam
out
aam
les
aam
les
cmp
cmp
les
ret
aam
rol
cld
test
push
cli
ret
aam
cld
test
push
cli
ret
aam
enter
fs
ret
aam
sti
ret
aam
sti
ret
aam
cli
ret
aam
sti
ret
aam
in
ret
aam
in
ret
aam
out
ret
aam
out
ret
aam
test
aam
test
pusha
test
aam
int3
aam
les
cmp
cmp
les
ret
aam
into
sti
ret
aam
cli
ret
aam
sti
ret
aam
in
ret
aam
in
ret
aam
out
ret
aam
out
ret
aam
test
aam
test
pusha
test
les
hlt
int3
aam
les
cmp
cmp
les
ret
aam
int
les
ret
aam
in
ret
aam
in
ret
aam
out
ret
aam
out
ret
aam
test
aam
test
pusha
test
les
hlt
les
cmp
cmp
les
sti
ret
aam
les
ret
aam
sti
ret
aam
les
les
cmp
cmp
les
ret
aam
test
iret
les
cmp
cmp
les
ret
aam
les
test
les
mov
ret
aam
test
aam
call
ret
aam
les
test
mov
les
cmp
cmp
les
ret
aam
les
test
xchg
test
aam
mov
les
ret
aam
call
les
test
les
cmp
cmp
les
ret
aam
test
aam
mov
les
ret
aam
test
aam
call
test
les
cmp
cmp
les
ret
aam
in
int3
aam
test
aam
mov
les
ret
aam
test
aam
call
in
int3
aam
les
cmp
cmp
les
ret
aam
clc
test
aam
mov
les
test
aam
call
clc
test
les
cmp
cmp
les
ret
aam
les
ret
aam
mov
les
aam
test
aam
call
les
les
cmp
cmp
les
ret
aam
rol
in
int3
aam
test
aam
in
int3
aam
test
aam
aam
les
ret
aam
xchg
aam
xchg
aam
jmp
aam
jmp
aam
hlt
ret
aam
hlt
ret
aam
hlt
ret
aam
test
lock
aam
test
pusha
test
inc
cmc
ret
aam
cmc
ret
aam
cmc
ret
aam
les
aam
les
cmp
cmp
les
ret
aam
lret
les
ret
aam
xchg
aam
jmp
aam
jmp
aam
hlt
ret
aam
hlt
ret
aam
hlt
ret
aam
test
lock
aam
test
pusha
test
inc
cmc
ret
aam
cmc
ret
aam
cmc
ret
aam
les
aam
les
cmp
cmp
les
ret
aam
lret
les
xchg
aam
xchg
aam
jmp
aam
jmp
aam
hlt
ret
aam
hlt
ret
aam
hlt
ret
aam
test
lock
aam
test
pusha
test
inc
cmc
ret
aam
cmc
ret
aam
cmc
ret
aam
in
int3
aam
les
cmp
cmp
les
ret
aam
les
ret
aam
mov
les
ret
aam
in
aam
les
les
cmp
cmp
les
ret
aam
int3
icebp
int3
aam
xchg
aam
mov
les
ret
aam
xchg
aam
in
aam
int3
icebp
int3
aam
les
cmp
cmp
les
ret
aam
cld
icebp
int3
aam
xchg
aam
mov
les
ret
aam
xchg
aam
in
aam
cld
icebp
int3
aam
les
cmp
cmp
les
ret
aam
les
int3
aam
add
mov
call
add
adc
ret
aam
les
int3
aam
les
cmp
cmp
les
ret
aam
les
ret
aam
rol
les
ret
aam
bnd
aam
bnd
aam
loopne
aam
les
les
cmp
cmp
les
ret
aam
fdivr
int3
aam
add
rol
les
add
and
ret
aam
icebp
ret
aam
bnd
aam
loopne
aam
fdivr
int3
aam
les
cmp
cmp
les
ret
aam
std
int3
aam
add
rol
in
ret
aam
add
aam
bnd
aam
loopne
aam
std
int3
aam
les
cmp
cmp
les
ret
aam
les
repz
aam
add
rol
les
add
aam
bnd
aam
loopne
aam
les
repz
aam
les
cmp
cmp
les
ret
aam
les
int3
aam
add
mov
ret
aam
add
aam
loopne
aam
les
int3
aam
les
cmp
cmp
les
ret
aam
repnz
aam
les
cmp
cmp
les
ret
aam
in
ret
aam
add
aam
lock
aam
icebp
ret
aam
lock
aam
add
les
int3
aam
enter
cmp
cmp
les
ret
aam
les
repnz
aam
add
mov
les
add
dec
add
les
int3
aam
les
cmp
cmp
les
ret
aam
les
ret
aam
add
les
repnz
aam
les
cmp
cmp
les
ret
aam
aam
int3
aam
add
mov
les
add
int3
add
fs
aam
int3
aam
les
cmp
cmp
les
ret
aam
les
aam
add
mov
ret
aam
add
xchg
bnd
aam
loopne
aam
les
aam
les
cmp
cmp
les
ret
aam
les
add
les
aam
add
les
les
cmp
cmp
les
ret
aam
rol
les
int3
aam
add
les
int3
aam
add
les
add
rorb
aam
lock
aam
lock
aam
lock
aam
icebp
ret
aam
lock
aam
les
int3
aam
les
cmp
cmp
les
ret
aam
les
ret
aam
rol
les
mov
aam
icebp
ret
aam
bnd
aam
loopne
aam
les
les
cmp
cmp
les
ret
aam
cld
std
int3
aam
mov
aam
mov
les
aam
mov
aam
add
cld
std
int3
aam
les
cmp
cmp
les
ret
aam
rol
dec
aam
mov
aam
dec
aam
mov
aam
into
int3
ret
aam
ret
aam
mov
aam
add
aam
lock
aam
icebp
ret
aam
lock
aam
add
inc
ret
aam
ret
aam
les
int3
aam
les
cmp
les
ret
aam
les
ret
aam
les
int3
aam
les
cmp
cmp
les
ret
aam
std
int3
aam
les
cmp
cmp
les
ret
aam
les
aam
ret
aam
les
les
cmp
cmp
les
ret
aam
dec
aam
les
cmp
cmp
les
ret
aam
les
ret
aam
add
aam
lock
aam
icebp
ret
aam
lock
aam
add
lock
aam
les
cmp
cmp
les
ret
aam
call
mov
aam
int
les
ret
aam
mov
aam
mov
aam
pop
aam
pop
aam
pop
aam
pop
aam
lock
aam
icebp
ret
aam
les
aam
les
cmp
cmp
les
ret
aam
int3
les
ret
aam
mov
aam
mov
aam
pop
aam
pop
aam
pop
aam
pop
aam
lock
aam
icebp
ret
aam
les
int3
aam
les
cmp
cmp
les
ret
aam
rorb
aam
pop
aam
pop
aam
pop
aam
pop
aam
lock
aam
icebp
ret
aam
les
les
cmp
cmp
les
ret
aam
les
ret
aam
pop
aam
pop
aam
pop
aam
lock
aam
icebp
ret
aam
les
int3
aam
les
cmp
cmp
les
ret
aam
les
aam
pop
aam
pop
aam
pop
aam
lock
aam
icebp
ret
aam
les
les
cmp
cmp
les
ret
aam
rol
les
pop
aam
pop
aam
pop
aam
lock
aam
icebp
ret
aam
les
les
cmp
cmp
les
ret
aam
mov
ret
aam
pop
aam
lock
aam
icebp
ret
aam
call
les
cmp
cmp
les
ret
aam
fsub
int3
aam
jmp
les
mov
aam
rol
les
aam
mov
aam
jmp
ret
aam
icebp
ret
aam
les
les
cmp
cmp
les
ret
aam
les
mov
aam
mov
ret
aam
mov
aam
bnd
aam
loopne
aam
les
les
cmp
cmp
les
ret
aam
les
aam
mov
aam
rol
loopne
ret
aam
mov
aam
icebp
ret
aam
bnd
aam
loopne
aam
les
aam
les
cmp
cmp
les
ret
aam
rol
les
cli
int3
aam
mov
aam
les
cli
int3
aam
mov
aam
les
ret
aam
mov
aam
mov
aam
lock
aam
lock
aam
icebp
ret
aam
lock
aam
les
aam
les
cmp
cmp
les
ret
aam
les
mov
aam
mov
aam
lock
aam
lock
aam
icebp
ret
aam
lock
aam
les
cli
int3
aam
les
cmp
cmp
les
ret
aam
rol
les
ret
aam
les
ret
aam
les
ret
aam
mov
aam
lock
aam
lock
aam
icebp
ret
aam
lock
aam
aam
int3
aam
les
cmp
cmp
les
ret
aam
les
aam
mov
aam
lock
aam
lock
aam
icebp
ret
aam
lock
aam
les
les
cmp
cmp
les
ret
aam
les
sti
int3
aam
mov
aam
mov
les
ret
aam
mov
aam
add
les
sti
int3
aam
les
cmp
cmp
les
ret
aam
rol
les
mov
aam
les
mov
aam
les
ret
aam
mov
aam
lock
aam
lock
aam
icebp
ret
aam
lock
aam
int3
test
aam
les
cmp
cmp
les
ret
aam
les
aam
mov
aam
lock
aam
lock
aam
icebp
ret
aam
lock
aam
les
les
cmp
cmp
les
ret
aam
les
ret
aam
rol
les
ret
aam
mov
aam
add
aam
loopne
aam
les
les
cmp
cmp
les
ret
aam
cmp
les
rol
sti
rol
cmp
les
cmp
les
ret
rol
les
rol
les
fadd
les
ret
fadd
les
ret
ffree
cld
ffree
les
ffree
les
faddp
les
ret
faddp
les
ret
ffreep
les
ffreep
les
ret
fadd
les
ret
fadd
les
ret
fld
in
ret
fld
les
les
ret
fld
in
fcmovb
les
ret
fcmovb
les
ret
fcmovnb
les
ret
fcmovnb
les
ret
in
cld
in
les
ret
in
les
ret
in
les
ret
out
in
out
les
ret
out
loopne
les
ret
loopne
aad
ret
loope
les
loope
mov
ret
loop
les
repz
les
ret
jecxz
les
ret
in
ret
in
ret
in
ret
in
ret
in
ret
in
ret
in
ret
out
ret
out
ret
out
ret
out
ret
out
ret
out
ret
out
ret
out
ret
out
ret
call
ret
call
ret
jmp
ret
jmp
ret
ljmp
pop
ljmp
jmp
les
jmp
les
ret
jmp
in
ret
hlt
ret
hlt
ret
hlt
ret
hlt
ret
hlt
ret
cmc
ret
cmc
ret
cmc
ret
cmc
ret
cmc
ret
test
in
test
xchg
test
mov
ret
test
or
ret
test
in
ret
test
les
ret
test
cld
lock
lock
lock
lock
icebp
ret
icebp
ret
icebp
ret
icebp
ret
icebp
ret
icebp
ret
bnd
bnd
bnd
bnd
bnd
repz
repz
repz
repz
repz
cld
ret
cld
ret
cld
ret
cld
ret
cld
ret
std
ret
std
ret
std
ret
std
ret
std
ret
inc
les
inc
les
ret
inc
les
ret
inc
les
inc
sar
ret
clc
ret
clc
ret
clc
ret
clc
ret
stc
ret
stc
ret
stc
ret
stc
ret
cli
ret
cli
ret
cli
ret
cli
ret
cli
ret
cli
ret
sti
ret
sti
ret
sti
ret
sti
ret
sti
ret
sti
ret
test
les
ret
test
les
test
les
ret
test
les
ret
test
les
test
out
ret
xchg
les
les
ret
xchg
faddl
ret
xchg
les
les
ret
add
in
ret
add
movsb
add
dec
add
jl
ret
add
faddl
ret
add
in
add
lods
add
fs
adc
ret
add
in
add
pushf
add
dec
add
je
ret
add
aam
ret
mov
les
ret
mov
cld
ret
ret
ret
ret
mov
les
ret
mov
les
les
mov
pop
testl
ret
pop
les
pop
in
mov
les
ret
mov
iret
mov
les
mov
les
rorb
ret
mov
out
mov
les
mov
les
les
xchg
ret
xchg
ret
xchg
ret
xchg
ret
xchg
ret
xchg
ret
xchg
ret
xchg
ret
xchg
ret
xchg
ret
xchg
ret
xchg
ret
xchg
ret
nop
ret
nop
ret
nop
ret
nop
ret
nop
ret
xchg
ret
xchg
ret
xchg
ret
xchg
ret
xchg
ret
xchg
ret
xchg
ret
xchg
ret
xchg
ret
xchg
ret
xchg
ret
xchg
ret
xchg
ret
xchg
ret
xchg
ret
pushf
ret
pushf
ret
pushf
ret
pushf
ret
pushf
ret
popf
ret
popf
ret
popf
ret
popf
ret
popf
ret
sahf
ret
sahf
ret
sahf
ret
sahf
ret
sahf
ret
lahf
ret
lahf
ret
lahf
ret
lahf
ret
cwtl
ret
cwtl
ret
cwtl
ret
cwtl
ret
cwtl
ret
cltd
ret
cltd
ret
cltd
ret
cltd
ret
lcall
dec
lcall
sub
ret
fwait
ret
fwait
ret
fwait
ret
fwait
ret
fwait
ret
movsb
ret
movsb
ret
movsb
ret
movsb
ret
movsl
ret
movsl
ret
movsl
ret
movsl
ret
movsl
ret
cmpsb
ret
cmpsb
ret
cmpsb
ret
cmpsb
ret
cmpsl
ret
cmpsl
ret
cmpsl
ret
cmpsl
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
lods
ret
lods
ret
lods
ret
lods
ret
lods
ret
lods
ret
scas
ret
scas
ret
scas
ret
scas
ret
scas
ret
scas
ret
scas
ret
scas
ret
test
les
ret
test
les
ret
test
ret
test
ret
test
ret
stos
ret
stos
ret
stos
ret
stos
ret
stos
ret
stos
ret
stos
ret
mov
les
mov
les
ret
mov
les
mov
les
mov
les
mov
into
mov
mov
les
mov
les
mov
les
mov
in
mov
les
mov
les
mov
enter
xchg
mov
les
ret
mov
iret
mov
les
ret
mov
iret
mov
pushl
ret
mov
aam
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
inc
ret
inc
ret
les
cmp
cmp
push
ffree
les
aam
les
cmp
cmp
rcll
les
ret
aam
les
cmp
cmp
ret
les
ret
rcll
les
ret
aam
les
cmp
cmp
rol
aam
les
rol
aam
rcll
rcrb
les
les
ret
aam
cmp
cmp
rcll
les
mov
ret
aam
mov
ret
aam
lock
aam
les
cmp
cmp
in
les
add
les
ret
aam
les
ret
aam
les
ret
aam
les
cmp
cmp
les
decb
mov
les
pushf
ret
aam
cmp
cmp
fadd
aam
out
push
ffree
int3
popf
ret
aam
les
pushf
ret
aam
les
cmp
cmp
push
ffree
les
int
les
ret
aam
les
mov
aam
cmp
cmp
les
cmp
cmp
les
push
ffree
les
aam
les
aam
les
cmp
cmp
aam
rcll
les
les
cmp
cmp
ret
rcll
les
popf
ret
aam
les
cmp
cmp
ffree
aam
rcll
in
ret
aam
les
cmp
cmp
ffree
aam
rcll
les
les
cmp
cmp
push
ffree
les
les
cmp
cmp
aam
rcll
les
ret
aam
les
cmp
cmp
les
push
ffree
les
ret
aam
les
cmp
cmp
faddp
aam
ret
in
ret
rcll
rcrb
les
cmp
cmp
push
ffree
les
les
cmp
cmp
aam
rcll
les
les
les
data16
aam
cmp
cmp
les
cmp
cmp
les
aam
rcll
les
aam
les
aam
les
les
cmp
cmp
les
cmp
cmp
les
ret
aam
rcll
les
aam
ret
aam
les
cmp
cmp
ret
les
ret
rcll
les
les
cmp
cmp
ffreep
aam
cld
ffreep
aam
rcll
les
les
cmp
cmp
push
ffree
les
aam
les
cmp
cmp
aam
les
aam
les
aam
les
aam
rcll
les
cwtl
ret
aam
les
cmp
cmp
fadd
aam
lret
aam
cmp
cmp
ret
les
ffreep
aam
rcll
in
ret
aam
les
cmp
cmp
push
ffree
les
les
les
aam
les
aam
cmp
cmp
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
out
push
ffree
les
ret
aam
les
aam
les
cmp
cmp
aam
rcll
les
ret
aam
les
cmp
cmp
ret
rcll
loopne
ret
aam
les
les
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
out
push
ffree
les
les
ret
aam
les
mov
mov
les
les
aam
les
aam
cmp
cmp
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
out
push
ffree
les
lcall
test
les
lcall
mov
mov
les
lcall
mov
ret
les
les
les
rcll
les
les
les
push
aam
les
aam
cmp
cmp
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
out
push
ffree
les
fwait
ret
aam
aam
ret
aam
les
ret
aam
mov
mov
les
ret
aam
in
aam
les
les
movsb
ret
aam
mov
ret
aam
mov
ret
aam
aam
ret
aam
les
cmp
cmp
les
aam
les
ret
aam
les
cmp
cmp
clc
les
cmp
add
ret
rcll
les
ret
aam
les
cmp
cmp
ret
rcll
les
ret
aam
les
cmp
cmp
fcmovb
aam
rcll
les
movsb
ret
aam
out
push
ffree
les
les
cmp
cmp
les
les
les
les
ret
cmp
cmp
aam
les
aam
rcll
les
les
cmp
cmp
ret
rcll
les
aam
out
push
ffree
les
les
cmp
cmp
fcmovnb
aam
cmp
cmp
fcmovnb
aam
cmp
cmp
fcmovnb
aam
cmp
cmp
fcmovnb
aam
cmp
cmp
fcmovnb
aam
cmp
cmp
fcmovnb
aam
cmp
cmp
les
and
aam
mov
in
cmpsb
ret
aam
cmp
cmp
les
cmp
out
push
ffree
les
cld
cmpsb
ret
aam
les
les
aam
mov
les
aam
cmp
cmp
les
aam
cmp
cmp
out
push
ffree
les
ret
aam
les
aam
les
cld
sub
aam
mov
les
ret
aam
cmp
cmp
ret
out
push
ffree
enter
les
ret
aam
les
cmp
cmp
in
aam
rcll
les
les
cmp
cmp
in
aam
rcll
les
les
cmp
cmp
les
cmp
lods
in
aam
rcll
les
aam
les
aam
les
cmpsl
ret
aam
enter
in
mov
ret
aam
mov
ret
aam
mov
ret
aam
les
ret
aam
les
cmp
cmp
les
aam
les
aam
les
cmp
cmp
clc
les
aam
cmp
cmp
aam
rcll
les
out
push
les
ret
aam
les
cmp
cmp
ret
cmp
cmp
in
aam
cmp
cmp
in
aam
cmp
cmp
cmp
cmp
cmp
cmp
in
aam
cmp
cmp
in
aam
cmp
cmp
in
aam
cmp
cmp
in
aam
cmp
cmp
push
ffree
les
mov
les
cmp
cmp
aam
rcll
int3
mov
out
push
ffree
les
les
cmp
cmp
les
les
cmp
sbb
ret
les
les
push
les
ret
aam
les
cmp
cmp
out
aam
in
out
aam
hlt
out
aam
cld
out
aam
les
les
les
cmp
pushf
out
aam
les
les
cmp
fs
aam
les
aam
cmp
cmp
aam
rcll
les
mov
les
cmp
cmp
ret
rcll
cld
mov
les
cmp
cmp
out
aam
fsub
ret
in
ret
rcll
les
les
cmp
cmp
push
ffree
les
aam
les
cmp
cmp
aam
les
aam
rcll
les
mov
les
cmp
cmp
ret
rcll
les
les
cmp
cmp
ret
les
ret
rcll
call
out
push
les
ret
aam
les
cmp
cmp
loopne
aam
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loopne
aam
cmp
cmp
loopne
aam
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aam
les
aam
cmp
cmp
aam
cmp
cmp
ret
rcll
les
mov
les
cmp
cmp
loope
aam
rcll
fsubrl
les
cmp
cmp
loope
aam
cld
loope
aam
les
rcll
les
out
push
les
ret
aam
les
cmp
cmp
ret
cmp
cmp
cmp
mov
cmp
cmp
aam
cmp
cmp
ret
cmp
cmp
ret
cmp
cmp
ret
cmp
cmp
ret
cmp
cmp
ret
cmp
cmp
ret
cmp
cmp
ret
rcll
les
lods
ret
aam
les
cmp
cmp
loop
aam
cld
loop
aam
les
push
ffree
in
ret
aam
les
cmp
cmp
aam
rcll
les
les
cmp
cmp
aam
rcll
les
aam
out
push
les
les
cmp
cmp
ret
cmp
cmp
ret
cmp
cmp
ret
cmp
cmp
ret
cmp
cmp
jecxz
aam
cmp
cmp
jecxz
aam
cmp
cmp
jecxz
aam
cmp
cmp
jecxz
aam
cmp
cmp
jecxz
aam
cmp
cmp
push
ffree
in
ret
aam
les
std
dec
rcl
cmp
cmp
les
cmp
cmp
les
rcll
les
les
les
les
rcl
cmp
cmp
les
cmp
cmp
les
ret
aam
rcll
les
ret
aam
les
scas
ret
aam
les
les
cmp
cmp
les
cmp
cmp
les
scas
ret
aam
rcll
enter
fsubrs
les
cmp
cmp
ret
cmp
cmp
jecxz
aam
cmp
cmp
in
ret
rcll
les
les
cmp
cmp
in
ret
cld
in
ret
rcll
les
aam
les
cmp
cmp
push
ffree
les
scas
ret
aam
les
cmp
cmp
aam
cmp
cmp
aam
cmp
cmp
aam
cmp
cmp
aam
rcll
les
ret
aam
les
cmp
cmp
ret
cmp
cmp
ret
rcll
lock
aam
les
cmp
cmp
in
ret
lret
aam
rcll
les
les
cmp
cmp
push
ffree
les
ret
aam
out
push
les
test
aam
les
cmp
cmp
les
ret
les
ret
les
ret
les
ret
les
ret
les
les
les
in
ret
les
in
ret
les
in
ret
les
in
ret
les
in
ret
les
in
ret
aam
les
je
aam
cmp
cmp
les
cmp
cmp
les
rcll
les
les
ret
aam
les
les
les
aam
rcll
in
stos
ret
aam
les
les
test
mov
les
ret
aam
cmp
cmp
les
cmp
cmp
les
cmp
cmp
mov
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
les
push
ffree
les
les
les
cmp
cmp
aam
rcll
les
aam
les
cmp
cmp
ret
rcll
les
stos
ret
aam
out
push
ffree
call
les
cmp
cmp
out
ret
aam
ret
ret
sti
out
ret
les
les
cmp
cmp
aam
les
aam
les
ret
les
ret
rcll
les
les
les
mov
les
aam
cmp
cmp
ret
out
push
ffree
les
stos
ret
aam
les
aam
les
cmp
cmp
call
int3
call
xlat
call
ret
rcll
les
out
push
ffree
les
les
cmp
cmp
les
les
les
les
cmp
cmp
aam
rcll
les
aam
les
cmp
cmp
ret
rcll
les
ret
aam
les
cmp
cmp
jmp
int3
jmp
push
ffree
les
ret
aam
les
aam
call
les
mov
aam
mov
aam
mov
ret
aam
mov
aam
mov
aam
int3
xor
aam
les
cmp
cmp
les
rcl
les
aam
les
cmp
cmp
les
or
les
ret
aam
les
cmp
cmp
hlt
les
aam
aam
les
cmp
cmp
rol
in
aam
in
int3
aam
les
cmp
cmp
rol
les
cmp
hlt
jmp
push
ffree
les
les
les
cmp
cmp
les
cmp
cmp
shlb
ffree
shlb
loopne
ret
aam
les
cmp
cmp
aam
les
ret
rcll
les
out
push
les
ret
aam
les
cmp
cmp
ret
les
jmp
les
jmp
les
les
jmp
aam
aam
ljmp
fldl2e
ret
fldl2e
ret
cmp
cmp
push
ffree
shlb
les
cmp
cmp
aam
rcll
hlt
mov
aam
les
cmp
cmp
ljmp
add
ret
les
ljmp
mov
ret
aam
les
cmp
cmp
jmp
aam
in
ret
les
rcll
les
aam
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
in
rcl
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
rcl
sub
aam
les
cmp
cmp
les
cmp
les
cmp
cmp
les
rcl
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
rcl
xor
aam
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
les
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
xor
aam
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
les
rcl
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
les
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
in
rcl
les
cmp
cmp
les
cmp
les
cmp
cmp
out
rol
cmp
cmp
repnz
cmp
cmp
les
cmp
cmp
les
cmp
cmp
les
enter
rcl
les
cmp
cmp
les
cmp
les
cmp
cmp
les
rcl
les
rol
aam
cmp
cmp
les
cmp
les
cmp
cmp
fadd
aam
fadd
aam
out
ffree
aam
cmp
cmp
les
cmp
cmp
les
ret
aam
rcll
les
ret
aam
les
ret
aam
les
cmp
cmp
les
cmp
les
cmp
cmp
les
les
ffree
aam
ffree
aam
cmp
cmp
les
cmp
cmp
les
cmp
cmp
fadd
aam
les
cmp
cmp
les
cmp
les
cmp
cmp
fadd
aam
fadd
aam
les
rol
aam
les
les
ret
aam
les
aas
ret
aam
les
cmp
cmp
enter
pop
in
aam
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
les
rcl
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
les
rcl
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
les
rcl
cmp
cmp
les
rcl
cmp
cmp
les
cmp
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
les
cmp
les
cmp
cmp
fdivrp
rcl
les
cmp
cmp
les
cmp
les
cmp
cmp
les
rcl
les
cmp
cmp
les
cmp
les
cmp
cmp
xchg
aam
les
cmp
cmp
les
cmp
les
cmp
cmp
les
les
cmp
cmp
les
cmp
les
cmp
cmp
les
mov
aam
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
sti
mov
aam
les
cmp
cmp
les
cmp
les
cmp
cmp
xchg
rcl
xchg
rcl
les
cmp
cmp
les
cmp
les
cmp
cmp
xchg
rcl
les
cmp
cmp
les
cmp
les
cmp
cmp
xchg
rcl
xchg
rcl
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
les
rcl
les
cmp
cmp
les
cmp
les
cmp
cmp
les
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
les
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
les
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
mull
aam
les
cmp
cmp
les
cmp
les
cmp
cmp
les
aam
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
popa
rcl
les
cmp
cmp
les
les
cmp
cmp
les
rcl
les
cmp
cmp
les
cmp
les
cmp
cmp
rcl
cmp
les
les
cmp
cmp
in
les
aam
les
les
cmp
cmp
enter
cmpsb
and
aam
les
int3
aam
les
cmp
cmp
in
in
aam
les
int3
aam
les
cmp
cmp
in
les
les
int3
aam
les
cmp
cmp
in
les
aam
les
mov
ret
aam
mov
les
les
aam
aam
les
cmp
cmp
rol
in
aam
in
int3
aam
les
cmp
cmp
rol
les
les
les
cmp
cmp
enter
les
aam
les
ret
aam
fldcw
aam
les
les
les
cmp
cmp
les
aam
les
int3
aam
les
cmp
cmp
clc
les
aam
aam
aam
les
cmp
cmp
rol
in
aam
in
int3
aam
les
cmp
cmp
rol
les
les
aam
mov
ret
aam
mov
ret
aam
mov
les
aam
les
ret
aam
cld
aad
aam
les
cmp
cmp
les
aam
les
les
cmp
cmp
clc
les
in
int3
aam
les
cmp
cmp
in
aam
aam
fdivrs
ret
aam
mov
ret
aam
mov
ret
aam
mov
ret
aam
les
les
les
les
cmp
cmp
in
hlt
inc
aam
les
int3
aam
les
cmp
cmp
loopne
les
lock
int3
aam
les
cmp
cmp
aam
les
aam
les
les
cmp
cmp
aam
hlt
inc
aam
aam
aam
les
cmp
cmp
rol
in
aam
in
int3
aam
les
cmp
cmp
rol
les
les
ret
aam
mov
ret
aam
mov
ret
aam
mov
ret
aam
les
les
les
aam
les
cmp
cmp
loopne
les
ror
aam
les
cmp
cmp
in
les
aam
les
les
cmp
cmp
enter
hlt
inc
aam
les
mov
ret
aam
mov
ret
aam
mov
les
aam
les
ret
aam
les
les
cmp
cmp
in
les
les
int3
aam
les
cmp
cmp
loopne
les
aam
hlt
ror
aam
les
cmp
cmp
aam
in
aam
les
mov
ret
aam
mov
ret
aam
mov
ret
aam
mov
les
aam
les
les
les
cmp
cmp
les
inc
aam
les
int3
aam
les
cmp
cmp
les
aam
in
ror
aam
les
cmp
cmp
les
inc
aam
aam
aam
les
cmp
cmp
rol
in
aam
in
int3
aam
les
cmp
cmp
rol
les
les
aam
mov
ret
aam
mov
ret
aam
mov
ret
aam
les
enter
mov
les
ret
aam
mov
in
aam
clc
mov
les
aam
les
cmp
cmp
les
aam
in
int3
aam
les
cmp
cmp
clc
les
aam
les
les
cmp
cmp
in
les
les
ret
aam
mov
ret
aam
mov
ret
aam
mov
ret
aam
les
aam
les
ret
aam
les
aam
les
cmp
cmp
les
aam
in
int3
aam
les
cmp
cmp
clc
les
aam
les
les
cmp
cmp
in
les
les
ret
aam
mov
ret
aam
mov
ret
aam
mov
ret
aam
mov
les
lock
les
mov
aam
aam
les
les
in
int3
aam
les
cmp
cmp
call
sub
les
in
int3
aam
les
cmp
cmp
call
sub
les
ret
aam
mov
ret
aam
les
aam
les
ret
aam
in
int3
aam
les
cmp
cmp
call
cs
aam
les
mov
ret
aam
mov
les
aam
les
ret
aam
les
aam
les
cmp
cmp
loopne
les
aam
in
int3
aam
les
cmp
cmp
in
les
les
les
cmp
cmp
enter
mov
vcmpps
faddl
lock
ret
aam
inc
ret
aam
mov
ret
aam
mov
les
les
les
les
cmp
cmp
les
les
int3
aam
les
cmp
cmp
clc
les
aam
cld
ljmp
cmp
cmp
in
hlt
pop
les
aam
inc
ret
aam
inc
ret
aam
mov
ret
aam
mov
ret
aam
aam
les
inc
ret
aam
les
int3
aam
les
cmp
cmp
call
push
aam
les
aam
les
cmp
cmp
call
mov
aam
cld
inc
ret
aam
mov
ret
aam
les
aam
les
les
les
cmp
cmp
call
mov
les
mov
ret
aam
mov
les
aam
les
aam
fdivr
int3
aam
les
cmp
cmp
call
inc
aam
les
ret
aam
mov
ret
aam
mov
les
aam
les
les
repz
aam
les
cmp
cmp
call
dec
aam
les
inc
ret
aam
inc
ret
aam
mov
ret
aam
les
aam
aam
ret
aam
std
int3
aam
les
cmp
cmp
lock
les
lock
ret
aam
mov
ret
aam
mov
les
aam
les
les
les
cmp
cmp
call
pop
aam
les
mov
ret
aam
mov
les
aam
les
aam
fadds
aam
mov
ret
aam
les
aam
les
ret
aam
les
les
cmp
cmp
call
jp
aam
les
inc
ret
aam
mov
ret
aam
les
aam
les
ret
aam
les
aam
les
cmp
cmp
call
aas
aam
aam
ret
aam
mov
ret
aam
mov
les
aam
call
les
les
cmp
cmp
call
clc
aam
les
ret
aam
mov
ret
aam
les
aam
les
les
aam
mov
les
aam
les
aam
les
cmp
cmp
les
cmp
les
cmp
cmp
cli
aam
les
cmp
cmp
les
cmp
les
cmp
cmp
aam
stc
aam
cmp
cmp
aam
rcll
les
inc
ret
aam
les
cmp
cmp
les
cmp
les
cmp
cmp
jmp
aam
cmp
cmp
ret
les
ret
rcll
lock
ret
aam
les
cmp
cmp
ret
rcll
les
les
cmp
cmp
les
cmp
cmp
les
les
les
ret
aam
rcll
les
ret
aam
les
ret
aam
les
cmp
cmp
les
cmp
cmp
les
into
fwait
les
inc
ret
aam
rcll
les
inc
ret
aam
enter
les
cmp
cmp
les
cmp
cmp
les
les
les
rcll
les
les
les
cmp
cmp
les
cmp
cmp
les
les
pop
aam
les
ret
aam
rcll
les
ret
aam
les
ret
aam
les
cmp
cmp
aam
rcll
les
inc
ret
aam
les
cmp
cmp
ret
les
ret
rcll
in
ret
aam
les
cmp
cmp
cmc
ret
int3
cmc
ret
xlat
cmc
ret
ret
in
cmc
ret
rcll
les
les
cmp
cmp
les
les
les
les
rcll
les
aam
les
cmp
cmp
les
cmp
cmp
les
les
les
inc
ret
aam
rcll
les
inc
ret
aam
enter
les
cmp
cmp
les
cmp
cmp
les
les
les
rcll
les
les
les
cmp
cmp
les
cmp
cmp
les
les
les
ret
aam
rcll
les
ret
aam
les
ret
aam
les
cmp
cmp
les
cmp
cmp
les
les
rorb
rcll
les
inc
ret
aam
rorb
les
cmp
cmp
test
out
push
ffree
les
les
cmp
cmp
les
cmp
cmp
les
les
les
aam
rcll
les
les
aam
les
cmp
cmp
les
cmp
cmp
les
les
les
ret
aam
rcll
les
ret
aam
les
ret
aam
les
cmp
cmp
aam
rcll
in
dec
ret
aam
les
cmp
cmp
ret
rcll
les
les
cmp
cmp
ret
rcll
les
aam
les
cmp
cmp
les
cmp
cmp
les
int
aam
les
mov
mov
les
dec
ret
aam
mov
les
dec
ret
aam
rcll
les
ret
aam
les
dec
ret
aam
les
cmp
cmp
push
ffree
cld
dec
ret
aam
les
cmp
cmp
push
ffree
les
les
cmp
cmp
aam
les
aam
rcll
les
aam
les
cmp
cmp
ret
rcll
les
dec
ret
aam
les
cmp
cmp
lock
rcll
les
ret
aam
les
cmp
cmp
lock
rcll
fmuls
aam
les
cmp
cmp
push
ffree
les
les
cmp
cmp
aam
rcll
les
les
cmp
cmp
les
cmp
cmp
les
les
aam
les
aam
rcll
les
aam
les
ret
aam
les
cmp
cmp
icebp
ret
iret
icebp
ret
shl
ret
rcll
les
ret
aam
les
cmp
cmp
push
ffree
lock
ret
aam
les
cmp
cmp
les
push
ffree
les
les
cmp
cmp
aam
rcll
les
ret
aam
les
cmp
cmp
les
cmp
cmp
les
std
xor
aam
les
ret
aam
rcll
les
ret
aam
les
ret
aam
les
cmp
cmp
ret
rcll
fmull
aam
les
cmp
cmp
bnd
rcll
les
les
cmp
cmp
push
ffree
les
les
cmp
cmp
aam
rcll
les
ret
aam
les
cmp
cmp
aam
rcll
les
ret
aam
les
cmp
cmp
les
cmp
cmp
les
les
rorb
out
push
ffree
les
dec
ret
aam
rorb
aam
les
cmp
cmp
repz
int3
repz
rcll
les
les
cmp
cmp
repz
rcll
les
aam
les
cmp
cmp
push
ffree
les
ret
aam
les
cmp
cmp
aam
rcll
les
ret
aam
les
cmp
cmp
ret
rcll
rorb
les
cmp
cmp
cld
ret
rcll
hlt
dec
ret
aam
les
cmp
cmp
push
ffree
les
les
cmp
cmp
push
ffree
les
aam
les
cmp
cmp
aam
les
ret
rcll
les
ret
aam
les
cmp
cmp
ret
rcll
les
ret
aam
les
cmp
cmp
std
ret
fdivr
ret
rcll
rclb
les
cmp
cmp
les
push
ffree
les
les
cmp
cmp
push
ffree
les
les
cmp
cmp
aam
les
aam
rcll
les
aam
les
cmp
cmp
les
push
ffree
les
push
ret
aam
les
cmp
cmp
inc
aam
int3
inc
aam
rcll
aam
ret
aam
les
cmp
cmp
inc
aam
cld
inc
aam
rcll
les
les
cmp
cmp
push
ffree
les
les
cmp
cmp
aam
les
ret
les
ret
cmp
cmp
ret
les
ret
rcll
les
ret
aam
les
cmp
cmp
inc
aam
rcll
les
les
cmp
cmp
push
ffree
fcoms
aam
les
cmp
cmp
push
ffree
les
les
cmp
cmp
les
cmp
cmp
les
les
aam
lret
mov
aam
mov
mov
les
ret
aam
mov
les
ret
aam
rcll
les
les
ret
aam
les
cmp
cmp
ret
rcll
les
aam
les
cmp
cmp
ret
les
ret
les
inc
aam
les
inc
aam
int
ret
rcll
call
les
cmp
cmp
hlt
clc
ret
cmp
cmp
les
les
aam
mov
les
aam
rcll
les
les
aam
les
cmp
cmp
push
ffree
les
ret
aam
les
cmp
cmp
aam
rcll
rclb
les
cmp
cmp
ret
les
clc
ret
rcll
hlt
push
ret
aam
les
cmp
cmp
stc
ret
fdivr
ret
rcll
les
les
cmp
cmp
push
ffree
les
aam
les
cmp
cmp
les
push
ffree
les
push
ret
aam
les
cmp
cmp
aam
rcll
les
ret
aam
les
cmp
cmp
ret
les
stc
ret
les
stc
ret
rcll
loopne
ret
aam
les
cmp
cmp
les
cmp
cmp
les
les
les
push
ffree
les
les
aam
les
cmp
cmp
push
ffree
les
aam
les
cmp
cmp
push
ffree
les
push
ret
aam
les
cmp
cmp
aam
rcll
aam
ret
aam
les
cmp
cmp
ret
les
ret
rcll
clc
push
ret
aam
les
cmp
cmp
sti
ret
int3
sti
ret
rcll
les
les
cmp
cmp
sti
ret
rcll
les
ret
aam
les
cmp
cmp
les
cmp
cmp
les
int
les
ret
aam
rcll
les
ret
aam
les
ret
aam
les
cmp
cmp
les
aam
cmp
cmp
les
testl
mov
les
push
ffree
in
push
ret
aam
les
les
cmp
cmp
aam
rcll
les
aam
les
cmp
cmp
ret
rcll
les
ret
aam
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
les
les
les
les
mov
mov
mov
aam
ret
aam
rcll
les
ret
aam
in
ret
aam
les
cmp
cmp
test
aam
cld
test
aam
rcll
les
les
cmp
cmp
push
ffree
les
aam
les
cmp
cmp
aam
rcll
les
pop
ret
aam
les
cmp
cmp
ret
rcll
les
ret
aam
les
cmp
cmp
ret
rcll
loopne
ret
aam
les
cmp
cmp
les
cmp
cmp
les
les
les
push
ffree
les
les
les
cmp
cmp
push
ffree
les
aam
les
cmp
cmp
les
push
ffree
les
pop
ret
aam
les
cmp
cmp
aam
rcll
int3
pop
ret
aam
les
cmp
cmp
les
push
ffree
lock
ret
aam
les
cmp
cmp
xchg
aam
faddl
push
ffree
les
les
cmp
cmp
out
push
ffree
les
ret
aam
les
cmp
cmp
aam
rcll
les
ret
aam
les
cmp
cmp
aam
les
aam
rcll
les
pop
ret
aam
les
cmp
cmp
ret
rcll
hlt
pop
ret
aam
les
cmp
cmp
xchg
aam
rcll
les
les
cmp
cmp
push
ffree
les
aam
les
cmp
cmp
push
ffree
les
ret
aam
les
cmp
cmp
aam
rcll
les
ret
aam
les
cmp
cmp
ret
les
ret
rcll
enter
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
les
int
aam
fcmovb
aam
les
mov
mov
les
push
ffree
les
les
aam
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
les
les
les
xlat
aam
les
pop
ret
aam
mov
mov
les
pop
ret
aam
rcll
les
pop
ret
aam
enter
les
cmp
cmp
les
cmp
cmp
les
les
aam
les
push
ffree
les
les
les
cmp
cmp
les
cmp
cmp
les
les
ret
les
ret
aam
rcll
les
aam
les
ret
aam
les
cmp
cmp
aam
rcll
int3
pop
ret
aam
les
cmp
cmp
aam
rcll
lock
ret
aam
les
cmp
cmp
ret
les
ret
rcll
les
les
cmp
cmp
add
ffree
les
ret
aam
les
cmp
cmp
les
les
les
les
les
rcll
les
ret
aam
les
cmp
cmp
aam
les
aam
les
aam
rcll
rcrb
aam
les
cmp
cmp
ret
les
ret
rcll
les
les
cmp
cmp
add
faddl
in
ret
rcll
les
ret
aam
les
cmp
cmp
out
push
ffree
les
ret
aam
les
cmp
cmp
aam
les
aam
rcll
les
pop
ret
aam
les
cmp
cmp
ret
les
ret
rcll
in
fs
aam
les
cmp
cmp
ret
les
ret
rcll
les
les
cmp
cmp
add
out
push
ffree
les
aam
les
cmp
cmp
push
ffree
les
ret
aam
les
cmp
cmp
aam
rcll
les
ret
aam
les
cmp
cmp
les
cmp
cmp
les
les
adc
loopne
ret
aam
rcll
shlb
aam
lock
aam
les
cmp
cmp
ret
rcll
les
les
cmp
cmp
mov
aam
int3
mov
aam
rcll
les
aam
les
cmp
cmp
mov
aam
les
les
mov
les
gs
aam
rcll
les
gs
aam
les
gs
aam
les
cmp
cmp
les
les
les
les
ret
les
ret
rcll
call
les
cmp
cmp
les
ret
cmp
cmp
les
les
popa
mov
les
aam
rcll
les
aam
les
aam
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
ret
mov
les
cmp
cmp
mov
aam
icebp
mov
mov
aam
ret
aam
mov
in
ret
aam
rcll
les
ret
aam
hlt
addr16
aam
les
cmp
cmp
ret
les
les
cltd
mov
les
ret
aam
rcll
les
les
ret
aam
les
cmp
cmp
push
ffree
les
addr16
aam
les
cmp
cmp
aam
les
aam
rcll
int3
pusha
ret
aam
les
cmp
cmp
les
les
ret
rcll
clc
pusha
ret
aam
les
cmp
cmp
mov
aam
fmull
push
ffree
les
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
les
les
les
les
pusha
ret
aam
mov
mov
les
pusha
ret
aam
rcll
les
ret
aam
les
pusha
ret
aam
les
cmp
cmp
les
cmp
cmp
les
les
aam
les
push
ffree
cld
popa
ret
aam
les
les
cmp
cmp
les
cmp
cmp
les
les
aam
les
aam
rcll
les
aam
les
aam
les
cmp
cmp
les
cmp
cmp
les
les
les
ret
aam
rcll
les
ret
aam
int3
les
cmp
cmp
ret
les
ret
rcll
les
les
cmp
cmp
ret
les
ret
rcll
les
les
cmp
cmp
pop
aam
in
pop
aam
rcll
les
aam
les
cmp
cmp
push
ffree
les
les
cmp
cmp
aam
rcll
int3
arpl
aam
les
cmp
cmp
aam
cmp
cmp
aam
cmp
cmp
ret
rcll
lock
aam
les
cmp
cmp
ret
rcll
les
les
cmp
cmp
mov
aam
rcll
les
ret
aam
les
cmp
cmp
les
out
push
ffree
les
ret
aam
les
cmp
cmp
aam
les
aam
les
aam
les
ret
les
ret
rcll
shrb
les
cmp
cmp
mov
aam
rcll
les
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
mov
aam
decl
les
rcll
les
les
cmp
cmp
les
out
push
ffree
les
ret
aam
les
cmp
cmp
aam
rcll
shrb
les
cmp
cmp
ret
les
ret
les
ret
les
ret
mov
aam
lret
aam
rcll
hlt
insl
ret
aam
les
cmp
cmp
push
ffree
les
ret
aam
les
cmp
cmp
les
les
ret
les
ret
les
ret
les
ret
les
ret
cmp
cmp
ret
les
ret
les
mov
aam
les
mov
aam
les
mov
aam
les
ret
les
mov
aam
rcll
les
aam
les
cmp
cmp
mov
aam
rcll
les
les
cmp
cmp
les
cmp
les
shll
mov
les
aam
rcll
les
les
aam
les
cmp
cmp
les
aam
cmp
cmp
les
les
mov
les
ret
aam
rcll
les
ret
aam
les
ret
aam
les
cmp
cmp
aam
rcll
hlt
outsl
ret
aam
les
cmp
cmp
les
ret
cmp
cmp
les
shrb
mov
les
rcll
les
les
ret
aam
les
cmp
cmp
xchg
ret
rcll
les
ret
aam
les
cmp
cmp
les
les
rcll
les
ret
aam
les
cmp
cmp
aam
les
aam
les
ret
les
ret
les
ret
les
xchg
ret
rcll
loopne
ret
aam
les
cmp
cmp
les
int3
xchg
ret
aam
ret
fcoml
in
ret
in
xchg
ret
hlt
xchg
ret
cld
xchg
ret
les
les
les
les
les
ret
les
ret
les
aam
les
ret
rcll
les
les
cmp
cmp
les
les
push
ffree
loopne
ret
aam
les
cmp
cmp
xchg
ret
rcll
les
les
cmp
cmp
les
les
les
ret
les
ret
les
ret
les
ret
les
ret
les
ret
les
xchg
ret
les
rcll
les
aam
les
cmp
cmp
les
cmp
cmp
les
les
adc
aam
fsubrs
aam
rcll
enter
call
les
cmp
cmp
xchg
ret
rcll
les
les
cmp
cmp
push
ffree
les
aam
les
cmp
cmp
aam
rcll
les
ret
aam
les
cmp
cmp
ret
rcll
les
ret
aam
les
cmp
cmp
ret
les
ret
rcll
shrb
aam
les
cmp
cmp
nop
ret
hlt
nop
ret
rcll
les
les
cmp
cmp
les
push
ffree
les
les
cmp
cmp
aam
les
aam
rcll
les
aam
les
cmp
cmp
ret
rcll
les
imul
les
cmp
cmp
xchg
ret
in
xchg
ret
rcll
aam
ret
aam
les
cmp
cmp
push
ffree
les
les
cmp
cmp
aam
rcll
les
les
cmp
cmp
aam
rcll
les
ret
aam
les
cmp
cmp
ret
rcll
les
ret
aam
les
cmp
cmp
xchg
ret
rcll
les
je
aam
les
cmp
cmp
les
push
ffree
in
ret
aam
les
cmp
cmp
les
les
ret
les
ret
rcll
les
les
cmp
cmp
ret
les
ret
les
ret
rcll
les
aam
les
cmp
cmp
xchg
ret
rcll
les
jne
aam
les
cmp
cmp
hlt
xchg
ret
cmp
cmp
les
pushl
aam
mov
fdivl
aam
rcll
les
aam
in
jbe
aam
les
cmp
cmp
push
ffree
les
les
cmp
cmp
aam
rcll
les
ret
aam
les
cmp
cmp
ret
rcll
les
aam
les
cmp
cmp
ret
rcll
les
jbe
aam
les
cmp
cmp
pushf
ret
rcll
aam
ret
aam
les
cmp
cmp
push
ffree
clc
ja
aam
les
cmp
cmp
aam
les
aam
rcll
les
les
cmp
cmp
aam
les
aam
rcll
les
ret
aam
les
cmp
cmp
ret
rcll
les
ret
aam
les
cmp
cmp
popf
ret
rcll
les
ja
aam
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
push
ffree
in
jo
aam
les
cmp
cmp
push
ffree
les
les
cmp
cmp
aam
rcll
les
aam
les
cmp
cmp
les
push
ffree
les
ret
aam
les
cmp
cmp
sahf
ret
fcompl
in
ret
in
sahf
ret
rcll
les
ret
aam
les
cmp
cmp
push
ffree
lock
aam
les
cmp
cmp
aam
cmp
cmp
ret
rcll
les
les
cmp
cmp
aam
rcll
les
ret
aam
les
cmp
cmp
ret
les
ret
les
ret
rcll
les
ret
aam
les
cmp
cmp
lahf
ret
les
in
lahf
ret
hlt
lahf
ret
les
les
les
rcll
les
jno
aam
les
cmp
cmp
aam
rcll
les
les
cmp
cmp
aam
cmp
cmp
ret
rcll
les
ret
aam
les
cmp
cmp
ret
rcll
les
aam
les
cmp
cmp
cwtl
ret
cmp
cmp
cwtl
ret
rcll
les
jb
aam
les
cmp
cmp
push
ffree
fdivl
aam
les
cmp
cmp
les
les
ret
les
ret
rcll
les
les
cmp
cmp
les
cmp
cmp
les
les
adc
aam
les
aam
rcll
les
aam
les
aam
les
cmp
cmp
les
cmp
cmp
les
les
les
ret
aam
rcll
les
ret
aam
les
les
cmp
cmp
cltd
ret
rcll
cld
jl
aam
les
cmp
cmp
cltd
ret
rcll
les
les
cmp
cmp
les
les
push
ffree
les
aam
les
cmp
cmp
aam
les
les
aam
les
aam
les
les
les
rcll
les
jl
aam
les
cmp
cmp
lcall
in
jge
aam
les
cmp
cmp
lcall
lcall
push
ffree
les
les
cmp
cmp
les
les
aam
rcll
les
aam
les
cmp
cmp
aam
rcll
les
jge
aam
les
cmp
cmp
ret
rcll
les
les
cmp
cmp
fwait
ret
fistps
push
ffree
fdivrs
aam
les
cmp
cmp
push
ffree
les
les
cmp
cmp
aam
les
aam
rcll
les
les
cmp
cmp
ret
les
ret
rcll
les
aam
les
cmp
cmp
ret
rcll
les
jle
aam
les
cmp
cmp
movsb
ret
rcll
aam
ret
aam
les
cmp
cmp
les
push
ffree
clc
jg
aam
les
cmp
cmp
aam
les
aam
les
ret
les
ret
rcll
les
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
ret
les
movsb
ret
rcll
les
ret
aam
les
cmp
cmp
movsl
ret
cmp
cmp
movsl
ret
rcll
les
ret
aam
les
cmp
cmp
push
ffree
call
les
cmp
cmp
les
cmp
cmp
cmp
mov
mov
int
std
int3
aam
les
aam
mov
les
aam
rcll
les
les
aam
les
cmp
cmp
les
cmp
cmp
aam
cmp
cmp
aam
les
aam
rcll
les
ret
aam
les
cmp
cmp
out
push
ffree
enter
les
cmp
cmp
cmpsb
ret
rcll
les
les
cmp
cmp
les
les
rcll
les
les
cmp
cmp
aam
les
ret
les
ret
les
ret
les
ret
les
ret
les
ret
rcll
les
aam
les
cmp
cmp
ret
rcll
enter
les
cmp
cmp
cmpsl
ret
rcll
cld
jp
aam
les
cmp
cmp
push
ffree
les
les
cmp
cmp
les
les
ret
les
aam
les
ret
rcll
les
aam
les
cmp
cmp
ret
rcll
les
jp
aam
les
cmp
cmp
mov
out
mov
mull
push
ffree
int3
jnp
aam
les
cmp
cmp
push
ffree
les
les
cmp
cmp
aam
les
aam
rcll
les
aam
les
cmp
cmp
ret
les
ret
rcll
les
jnp
aam
les
cmp
cmp
ret
les
ret
mov
lret
aam
frstor
push
ffree
les
ret
aam
les
cmp
cmp
les
rcll
les
les
cmp
cmp
les
cmp
inc
mov
push
ffree
les
les
cmp
cmp
aam
rcll
les
ret
aam
les
cmp
cmp
cmp
mov
cmp
xchg
mov
cmp
movsl
mov
cmp
test
ret
rcll
les
ret
aam
les
cmp
cmp
les
cmp
cmp
les
cmp
cmp
aam
les
cmp
cmp
aam
rol
les
aam
les
ret
les
mov
push
hlt
add
les
cmp
cmp
les
cmp
cmp
out
push
ffree
les
ret
aam
les
cmp
cmp
les
les
rcll
les
les
cmp
cmp
aam
les
mov
les
ret
les
ret
les
ret
les
ret
les
mov
push
ffree
enter
les
cmp
cmp
ret
rcll
les
les
cmp
cmp
lods
ret
in
lods
ret
imulb
lods
ret
rcll
les
ret
aam
les
cmp
cmp
les
les
les
rcll
les
ret
aam
les
cmp
cmp
aam
cmp
cmp
ret
rcll
fadds
ret
aam
les
cmp
cmp
ret
rcll
les
les
cmp
cmp
lods
ret
into
lods
ret
lods
ret
cmp
cmp
lods
ret
rcll
les
les
cmp
cmp
cmp
sahf
lods
ret
rcll
les
ret
aam
les
cmp
cmp
aam
les
ret
les
ret
les
ret
rcll
les
ret
aam
les
cmp
cmp
les
lods
ret
les
les
lods
ret
les
lods
ret
les
lods
ret
les
lods
ret
cmp
cmp
les
les
les
aam
rcll
les
les
aam
les
cmp
cmp
scas
ret
rcll
les
ret
aam
les
cmp
cmp
push
ffree
fadds
ret
aam
les
cmp
cmp
aam
les
aam
les
ret
rcll
les
les
cmp
cmp
ret
les
ret
les
scas
ret
rcll
les
ret
aam
les
cmp
cmp
scas
ret
imull
fisubrs
out
ret
ljmp
les
les
rcll
les
ret
aam
les
cmp
cmp
les
ret
les
les
ret
les
ret
les
ret
les
ret
rcll
fadds
ret
aam
les
cmp
cmp
ret
rcll
les
les
cmp
cmp
test
aam
int3
test
aam
aam
ret
rcll
les
ret
aam
les
cmp
cmp
les
les
push
ffree
les
ret
aam
les
cmp
cmp
aam
rcll
fadds
ret
aam
les
cmp
cmp
aam
les
ret
les
test
aam
rcll
les
les
cmp
cmp
les
cmp
cmp
les
iret
nop
les
ret
aam
rcll
les
ret
aam
les
ret
aam
les
cmp
cmp
test
push
ffree
les
add
aam
les
cmp
cmp
les
rcll
int3
or
aam
les
cmp
cmp
les
push
ffree
clc
or
aam
les
cmp
cmp
les
cmp
cmp
les
les
les
aam
rcll
les
les
aam
les
cmp
cmp
ret
rcll
les
ret
aam
les
cmp
cmp
stos
ret
cmp
cmp
stos
ret
rcll
les
or
aam
les
cmp
cmp
stos
ret
cld
stos
ret
rcll
in
or
les
cmp
cmp
push
ffree
les
les
cmp
cmp
aam
les
ret
les
ret
rcll
les
aam
les
cmp
cmp
ret
rcll
les
or
les
cmp
cmp
stos
ret
les
fisubrs
out
ret
imull
ljmp
les
rcll
les
ret
aam
les
cmp
cmp
push
ffree
les
les
cmp
cmp
aam
les
aam
les
ret
rcll
les
aam
les
cmp
cmp
ret
mov
aam
les
stos
ret
les
stos
ret
iret
mov
aam
xlat
mov
aam
fbstp
ffree
les
push
ret
aam
les
cmp
cmp
push
ffree
in
ret
aam
les
cmp
cmp
les
les
aam
rcll
les
les
cmp
cmp
aam
les
ret
les
mov
aam
les
mov
aam
rcll
les
aam
les
cmp
cmp
mov
aam
into
mov
aam
shll
push
ffree
les
aam
les
cmp
cmp
push
ffree
int3
or
aam
les
cmp
cmp
aam
les
ret
les
ret
les
ret
les
aam
les
aam
les
ret
les
mov
aam
rcll
cld
or
aam
les
cmp
cmp
les
mov
aam
mov
aam
leave
mov
aam
fdivl
push
ffree
les
ret
aam
les
cmp
cmp
push
ffree
les
ret
aam
les
cmp
cmp
aam
les
ret
les
ret
rcll
rorb
ret
aam
les
cmp
cmp
ret
les
mov
aam
les
mov
aam
rcll
les
les
cmp
cmp
mov
aam
rcll
les
ret
aam
les
cmp
cmp
mov
aam
rcll
les
aam
les
cmp
cmp
les
rcll
les
or
aam
les
cmp
cmp
aam
rcll
fmull
ret
aam
les
cmp
cmp
ret
rcll
les
les
cmp
cmp
ret
rcll
les
les
cmp
cmp
mov
aam
rcll
les
ret
aam
les
cmp
cmp
les
push
ffree
les
ret
aam
les
cmp
cmp
aam
rcll
les
or
aam
les
cmp
cmp
aam
les
aam
rcll
in
or
aam
les
cmp
cmp
ret
les
mov
aam
les
mov
aam
lds
push
ffree
les
les
cmp
cmp
mov
aam
pushl
les
rcll
les
aam
les
cmp
cmp
les
les
ret
les
ret
les
ret
rcll
les
or
aam
les
cmp
cmp
ret
rcll
in
adc
aam
les
cmp
cmp
mov
aam
rcll
les
les
cmp
cmp
mov
aam
cld
mov
aam
cmp
cmp
push
ffree
les
aam
les
cmp
cmp
les
les
ret
les
ret
les
ret
rcll
les
ret
aam
les
cmp
cmp
ret
rcll
int3
adc
les
cmp
cmp
mov
aam
rcll
lock
les
cmp
cmp
mov
aam
rcll
les
les
cmp
cmp
push
ffree
les
ret
aam
les
cmp
cmp
aam
les
ret
les
ret
les
ret
les
ret
les
mov
aam
les
mov
aam
les
les
int3
les
ret
aam
rcll
les
aam
aam
ret
aam
les
cmp
cmp
les
cmp
cmp
les
les
aam
les
push
ffree
les
les
les
cmp
cmp
mov
push
ffree
les
aam
les
cmp
cmp
push
ffree
les
push
ret
aam
les
cmp
cmp
aam
les
ret
les
ret
cmp
cmp
ret
rcll
les
ret
aam
les
cmp
cmp
ret
cmp
cmp
mov
push
ffree
clc
pop
ret
aam
les
cmp
cmp
mov
cmp
fidivrs
push
ffree
les
les
cmp
cmp
push
ffree
les
ret
aam
les
cmp
cmp
les
mov
les
aam
les
ret
les
ret
les
ret
les
iret
vshufps
mov
aam
ret
aam
rcll
les
ret
aam
in
ret
aam
les
cmp
cmp
les
mov
les
mov
les
les
mov
les
mov
mov
leave
mov
fdivrs
out
mov
std
mov
les
les
les
les
rcll
les
les
cmp
cmp
aam
les
aam
les
ret
rcll
les
adc
aam
les
cmp
cmp
ret
les
ret
rcll
hlt
adc
aam
les
cmp
cmp
mov
fdivrl
out
ret
rcll
les
les
cmp
cmp
les
les
les
les
ret
rcll
les
aam
les
cmp
cmp
ret
les
mov
les
mov
les
mov
les
mov
mov
rol
leave
mov
les
cld
adc
aam
rcll
les
ret
aam
les
les
cmp
cmp
mov
cld
mov
les
push
ffree
les
aam
les
cmp
cmp
les
push
ffree
les
ret
aam
les
cmp
cmp
aam
les
aam
les
ret
les
ret
les
ret
les
les
mov
push
ffree
les
ret
aam
les
cmp
cmp
mov
fdivrl
in
ret
rcll
les
les
cmp
cmp
les
les
les
rcll
les
aam
les
cmp
cmp
aam
les
aam
les
ret
les
ret
les
ret
les
ret
les
mov
les
mov
les
mov
push
les
ret
aam
les
cmp
cmp
mov
push
ffree
clc
sbb
aam
les
cmp
cmp
les
les
les
les
les
rol
les
aam
rcll
les
les
aam
les
cmp
cmp
aam
les
aam
les
aam
rcll
les
ret
aam
les
cmp
cmp
ret
les
ret
rcll
loopne
ret
aam
les
cmp
cmp
mov
fdivrl
in
ret
rcll
les
les
cmp
cmp
les
les
les
les
les
ret
les
ret
les
ret
les
ret
les
ret
les
ret
les
les
ret
rcll
les
aam
les
cmp
cmp
inc
ret
rcll
loopne
ret
aam
les
cmp
cmp
inc
ret
rcll
les
les
cmp
cmp
les
push
ffree
les
les
rcl
les
push
ret
aam
les
les
cmp
cmp
enter
subb
mov
ret
aam
push
ret
aam
mov
les
les
cmp
cmp
enter
inc
sub
aam
cmp
cmp
les
cmp
les
cmp
cmp
rol
aam
rol
aam
pop
ret
les
and
shlb
dec
pop
ret
aam
ret
les
sbbb
les
les
ret
sbb
and
les
ret
clc
and
les
ret
into
sbb
fcomps
ret
in
sbb
les
ret
les
sbb
les
les
les
ret
les
ret
in
ret
negb
ret
les
sbb
les
ret
les
ret
les
sbb
les
ret
les
les
sbb
les
sbb
and
in
ret
hlt
and
les
ret
les
and
les
and
les
les
ret
les
ret
les
and
les
and
les
sbb
les
sbb
les
sbb
les
ret
les
and
les
ret
les
ret
les
ret
les
ret
les
les
ret
les
ret
out
and
in
ret
and
shlb
les
and
les
and
les
and
les
ret
les
les
and
ret
les
and
ret
les
and
ret
fsubs
ret
out
es
cld
es
les
ret
les
ret
les
ret
les
ret
les
ret
les
ret
les
ret
les
es
les
es
daa
ret
les
daa
ret
les
daa
ret
les
les
les
ret
les
daa
ret
les
ret
les
daa
ret
les
ret
shlb
and
fisubl
ret
ljmp
les
and
les
ret
les
and
lret
les
les
les
les
les
les
les
les
ret
enter
stos
les
les
les
ret
in
and
ret
leave
les
les
les
les
ret
les
and
les
les
les
xchg
mov
nop
lods
test
lods
test
nop
lods
test
xchg
xorl
xchg
xchg
mov
stos
mov
test
les
xchg
mov
mov
mov
stos
mov
les
mov
test
cmpsl
les
xchg
mov
cmpsl
mov
movsl
mov
les
mov
mov
lea
stos
cmpsl
scas
mov
mov
test
les
lea
stos
cmpsl
scas
mov
lods
movsl
stos
mov
lea
stos
cmpsl
scas
mov
mov
test
les
lea
stos
cmpsl
scas
mov
lods
movsl
stos
mov
les
mov
lods
mov
cmpsl
movsl
test
mov
stos
les
les
xchg
movsl
test
mov
stos
std
mov
mov
mov
cmpsl
movsl
test
mov
stos
les
lea
test
mov
mov
cmpsl
movsl
test
mov
stos
test
stos
xchg
xchg
les
mov
les
rclb
mov
mov
mov
mov
mov
cmpsl
mov
les
test
mov
movsl
mov
mov
mov
xchg
mov
mov
xchg
xchg
les
mov
stos
mov
lods
stos
mov
scas
mov
les
mov
mov
mov
mov
mov
mov
stos
mov
les
xorl
test
mov
add
nop
test
test
les
xchg
stos
mov
xchg
mov
mov
mov
test
mov
stos
stos
xchg
mov
mov
mov
les
xchg
lea
test
mov
stos
stos
xchg
stos
mov
les
xchg
mov
mov
cmpsb
test
nop
lods
test
lcall
mov
stos
test
lods
stos
stos
xchg
mov
mov
mov
sub
mov
scas
mov
mov
mov
cmpl
rclb
mov
mov
stos
mov
les
les
mov
movsl
cmpsb
test
nop
lods
test
les
xchg
mov
les
rclb
xchg
movsl
test
mov
test
xchg
mov
mov
les
rclb
mov
test
mov
andl
test
mov
les
rclb
test
mov
mov
lods
mov
mov
test
test
stos
cmpsl
clc
mov
cmpsb
mov
mov
test
fld
cmpl
stos
stos
test
mov
lods
stos
mov
mov
cmpsb
mov
mov
xchg
les
mov
imul
mov
mov
xchg
mov
mov
movsl
test
test
div
ljmp
les
cmpsl
mov
les
stos
mov
xchg
test
mov
les
mov
mov
stos
les
mov
mov
lods
stos
mov
les
mov
xchg
mov
mov
cmpsl
stos
test
les
mov
mov
mov
mov
les
imul
mov
arpl
xchg
mov
mov
xchg
mov
test
xchg
mov
aad
xchg
lods
mov
mov
stos
mov
mov
lea
test
mov
mov
cmpsl
movsl
test
mov
stos
les
mov
xchg
xchg
lods
mov
mov
mov
andl
mov
stos
les
xchg
mov
mov
cmpsl
mov
les
stos
xorl
xchg
mov
mov
stos
mov
xlat
rclb
nop
lods
mov
movsl
mov
andl
xchg
les
xchg
mov
nop
lods
test
lods
test
nop
lods
test
les
mov
movsl
cmpsb
test
nop
lods
test
les
andl
andb
mov
mov
xchg
mov
lods
stos
mov
cmpl
mov
mov
xchg
mov
stos
mov
mov
mov
lods
stos
mov
mov
mov
mov
stos
mov
movsl
mov
mov
mov
rclb
movsl
mov
xchg
mov
cmpsl
mov
add
andl
mov
stos
cmpsl
mov
rclb
test
mov
mov
lods
stos
stos
subb
les
xchg
mov
movsl
stos
mov
mov
lods
stos
stos
subb
lea
mov
mov
mov
stos
mov
faddp
cmpl
les
lds
mov
mov
mov
movsl
mov
jno
xchg
nop
lods
mov
movsl
mov
andl
movsl
stos
mov
test
fadd
xchg
mov
xchg
stos
mov
stos
mov
movsl
lods
mov
cmpl
mov
andl
mov
andl
test
mov
xchg
les
mov
mov
lds
mov
cmpsl
mov
rcll
lods
test
les
xchg
mov
mov
xlat
movb
mov
mov
mov
les
mov
mov
lea
movsl
mov
stos
stos
les
mov
xchg
les
lds
test
nop
mov
movb
mov
mov
lea
movsb
lds
stos
mov
mov
stos
test
mov
lods
stos
mov
lds
mov
mov
stos
test
mov
lods
stos
mov
xorb
lods
mov
stos
test
mov
lods
stos
mov
lds
mov
mov
stos
test
mov
lods
stos
mov
or
mov
mov
les
mov
mov
mov
mov
mov
test
lods
lds
xchg
xrelease
xchg
mov
movsl
test
mov
xchg
movsl
mov
andl
test
lea
leave
lds
mov
mov
mov
enter
xchg
movsl
test
mov
test
les
xchg
mov
lods
stos
mov
test
les
xchg
mov
lods
stos
mov
xchg
mov
movsl
test
lea
les
mov
mov
xchg
mov
lods
stos
mov
les
mov
xchg
mov
lods
stos
mov
rclb
lods
mov
stos
test
movsl
mov
movsl
cmpsb
test
test
cmp
mov
stos
mov
adcl
je
xchg
cmpsl
mov
lods
mov
xchg
mov
les
les
xchg
mov
mov
mov
les
andl
stos
test
les
lods
sub
inc
and
les
ret
les
les
ret
les
xchg
xchg
ljmp
xchg
xchg
mov
mov
mov
les
cmp
cmp
ret
ljmp
cmpsl
lods
test
cmpsl
movsl
test
test
les
ret
add
ljmp
movsl
test
mov
mov
mov
mov
test
aam
sub
ret
les
lods
mov
cmpsl
in
in
std
std
imul
div
hlt
lock
mov
ljmp
mov
lods
cmpsl
mov
in
mov
scas
mov
mov
mov
call
ljmp
lea
xchg
adcl
mov
ret
add
ljmp
mov
stos
mov
mov
mov
mov
mov
mov
test
aam
sub
ret
ljmp
movsl
test
mov
mov
mov
lods
stos
stos
mov
cmpsb
movsl
mov
test
mov
test
cmpsb
stos
stos
mov
test
mov
ljmp
mov
cmpsl
stos
mov
mov
mov
test
mov
xchg
sti
loopne
movsl
mov
cmpsl
fwait
mov
mov
test
mov
lods
stos
stos
test
mov
mov
movsl
lods
mov
test
div
fwait
mov
mov
mov
lods
mov
test
mov
test
mov
test
mov
lods
test
cmpsb
stos
stos
mov
test
lods
test
cmpsb
stos
stos
mov
test
aam
ljmp
mov
cmpsl
stos
mov
mov
mov
test
mov
xchg
sti
loopne
mov
mov
movsl
lods
mov
fwait
mov
movsl
mov
mov
loopne
mov
mov
movsl
lods
mov
test
div
fwait
mov
mov
mov
lods
mov
test
mov
test
mov
test
test
lods
test
cmpsb
stos
stos
mov
test
ret
ljmp
mov
cmpsl
stos
mov
mov
mov
test
mov
xchg
sti
loopne
div
fwait
mov
mov
mov
lods
mov
fwait
lods
test
mov
lods
stos
stos
test
mov
test
cmpsb
stos
stos
mov
test
lods
test
cmpsb
stos
stos
mov
test
ret
ljmp
mov
stos
mov
lods
stos
mov
scas
mov
test
cmpsl
fwait
mov
test
test
mov
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
ret
ljmp
test
stos
mov
test
xchg
sti
loopne
mov
stos
mov
lods
stos
mov
scas
mov
test
cmpsl
fwait
mov
test
test
mov
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
add
ljmp
mov
stos
mov
lods
stos
mov
scas
mov
test
test
mov
mov
mov
mov
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
les
ljmp
test
stos
mov
test
xchg
sti
loopne
mov
stos
mov
lods
stos
mov
scas
mov
test
test
mov
mov
mov
mov
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
ret
outsb
ret
imul
aam
ljmp
movsl
test
mov
mov
mov
lods
stos
stos
mov
addb
movsl
lods
test
cmpsb
stos
stos
mov
test
aam
les
ljmp
mov
mov
adcb
mov
movsl
lods
mov
test
div
fwait
mov
mov
mov
lods
mov
test
mov
test
mov
test
mov
lods
test
cmpsb
stos
stos
mov
test
aam
jne
aam
les
ljmp
movsl
mov
cmpsl
fwait
mov
mov
test
mov
lods
stos
stos
test
mov
mov
movsl
lods
mov
test
div
fwait
mov
mov
mov
lods
mov
test
mov
test
mov
test
mov
lods
test
cmpsb
stos
stos
mov
test
aam
sub
les
ljmp
mov
stos
mov
lods
stos
mov
scas
mov
test
mov
stos
mov
cmpsb
stos
stos
mov
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
ljmp
mov
mov
mov
cmpsb
stos
stos
mov
test
ljmp
test
stos
mov
test
xchg
sti
loopne
mov
stos
mov
lods
stos
mov
scas
mov
test
mov
stos
mov
cmpsb
stos
stos
mov
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
aam
les
ljmp
mov
cmpsl
stos
mov
mov
mov
test
mov
test
xchg
nop
test
test
test
mov
lods
test
cmpsb
stos
stos
mov
test
ret
ljmp
pushf
test
ret
les
les
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jge
aam
jge
aam
jge
aam
jge
aam
jge
aam
jge
aam
jge
aam
jge
aam
jge
aam
jge
aam
jge
aam
ret
jge
aam
jge
aam
jge
aam
jge
aam
jge
aam
jge
aam
jge
aam
jge
aam
jge
aam
jge
aam
jge
aam
jge
aam
jge
aam
jge
aam
jge
aam
jge
aam
jge
aam
jge
aam
jge
aam
jge
aam
jge
aam
jge
aam
jge
aam
jge
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
jl
aam
cs
fdivrs
fdivrl
sarb
aam
ret
jl
aam
jl
aam
jl
aam
jl
aam
jae
aam
jae
aam
jae
aam
jae
aam
jae
aam
jae
aam
jae
aam
jae
aam
jae
aam
jae
aam
jae
aam
jae
aam
jae
aam
cs
sub
ret
ljmp
mov
test
stos
mov
cmpsl
movsl
mov
mov
sti
test
mov
hlt
movsl
icebp
cmpsb
test
add
ljmp
mov
mov
fwait
cmpsl
movsl
mov
mov
sti
test
mov
hlt
movsl
icebp
cmpsb
test
ret
add
ljmp
fwait
mov
mov
lods
mov
test
add
ljmp
stos
stos
fwait
mov
mov
fwait
stos
cmpsb
scas
mov
mov
test
mov
ljmp
mov
stos
test
in
ds
aam
xchg
aam
xchg
aam
xchg
aam
xchg
aam
xchg
aam
xchg
aam
xchg
aam
xchg
aam
xchg
aam
mov
mov
aam
sub
mov
ret
rol
mov
mov
mov
rol
fadd
leave
int
enter
int3
enter
int
enter
into
iret
int3
enter
rol
leave
rol
lret
mov
aam
leave
aad
mov
in
leave
icebp
mov
les
les
les
les
les
les
les
les
les
les
les
rol
les
into
les
into
les
int
les
rol
les
leave
les
in
les
leave
les
mov
les
iret
les
leave
les
aad
les
mov
les
iret
fadd
enter
enter
int3
les
ret
ljmp
fwait
mov
mov
stos
stos
test
les
fnstsw
and
ret
add
aam
les
cmp
cmp
inc
les
les
les
les
les
aad
hlt
mov
les
cmp
cmp
inc
les
les
les
les
les
aam
jmp
les
mov
ret
les
cmp
cmp
les
les
aam
les
aam
les
aam
les
aam
les
aam
call
les
ret
or
aam
or
int3
aam
cmp
aam
les
aam
cmp
cmp
cmp
cmp
psubd
aam
les
mov
les
clc
adc
aam
ret
les
les
fcoms
aam
les
ret
les
or
aam
les
ret
les
lock
aam
les
or
aam
les
or
aam
les
ret
les
fmull
ret
in
ret
les
aam
les
les
les
les
cld
or
aam
cmp
cmp
les
cmp
cmp
les
les
les
les
les
aam
cmp
aam
cmp
cmp
aam
les
ret
pop
ret
pop
ret
pop
ret
pop
ret
pop
ret
pop
ret
pop
ret
pop
ret
pop
ret
pop
ret
pop
ret
pop
ret
pop
ret
pop
ret
pop
ret
push
ret
push
ret
push
ret
push
ret
push
ret
push
ret
push
ret
push
ret
push
ret
push
ret
push
ret
push
ret
push
ret
push
ret
push
ret
push
ret
push
ret
push
ret
push
ret
push
ret
push
ret
push
ret
push
ret
push
ret
push
ret
push
ret
rol
les
aam
ljmp
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
in
in
in
in
in
in
in
in
in
in
in
in
in
les
mov
scas
test
stos
stos
mov
mov
mov
mov
mov
les
addb
mov
xchg
nop
xchg
xchg
xchg
pushf
popf
sahf
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
in
in
in
in
in
in
in
in
in
in
in
in
in
les
mov
scas
test
stos
stos
mov
mov
mov
mov
mov
les
addb
mov
xchg
nop
xchg
xchg
xchg
pushf
popf
sahf
les
ror
mov
inc
in
les
les
les
and
les
les
les
les
les
les
les
les
les
les
les
data16
les
data16
lahf
les
les
les
push
lcall
push
test
les
sbb
and
cmc
mov
les
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
add
ret
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
add
ret
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
sbb
aam
pop
ret
add
ret
add
ret
pop
ret
pop
ret
pop
ret
pop
ret
add
les
rol
sbb
rol
sbb
rol
sbb
rol
sbb
rol
in
push
ffree
les
ljmp
lods
mov
movsl
mov
movsl
test
stos
mov
xchg
sti
loopne
mov
xchg
mov
test
cmpsb
stos
stos
mov
test
mov
cmc
test
test
mov
xchg
mov
test
stos
stos
mov
test
testl
mov
test
test
cmpsb
stos
stos
mov
test
les
ljmp
mov
cmpsl
stos
mov
mov
mov
test
mov
xchg
xchg
cmpsl
mov
stos
stos
mov
mov
test
test
cmpsb
stos
stos
mov
test
add
ljmp
mov
cmpsl
stos
mov
mov
mov
test
mov
xchg
sti
loopne
movsl
mov
cmpsl
fwait
mov
lods
stos
mov
mov
mov
test
mov
mov
mov
mov
test
test
movsl
lods
mov
test
mov
lods
mov
mov
mov
test
test
test
movsl
mov
fwait
mov
test
mov
mov
lods
test
mov
mov
mov
mov
test
test
movsl
lods
mov
test
mov
lods
mov
mov
mov
test
test
test
mov
stos
test
test
lods
test
cmpsb
stos
stos
mov
test
add
ljmp
mov
cmpsl
stos
mov
mov
mov
test
mov
xchg
mov
mov
test
mov
lods
cmpsl
mov
stos
test
test
lods
test
cmpsb
stos
stos
mov
test
add
ljmp
mov
cmpsl
stos
mov
mov
mov
test
mov
xchg
lods
stos
fwait
mov
mov
lods
cmpsl
mov
stos
test
test
lods
test
cmpsb
stos
stos
mov
test
ljmp
mov
cmpsl
test
mov
mov
mov
movsl
mov
cmpsl
mov
stos
stos
test
stos
cmpsl
mov
lods
stos
fwait
mov
mov
lods
cmpsl
mov
movsl
lods
test
movsl
mov
stos
test
test
mov
mov
movsl
mov
movsl
lods
test
movsl
mov
stos
test
test
add
ljmp
mov
mov
stos
cmpsl
mov
addb
les
ljmp
lods
test
mov
mov
test
test
movsl
lods
mov
test
mov
lods
mov
mov
mov
test
test
test
lods
test
movsl
mov
stos
test
test
mov
ljmp
mov
mov
mov
mov
lods
stos
mov
mov
mov
lods
cmpsl
mov
lods
test
mov
mov
mov
mov
test
test
movsl
lods
mov
test
mov
lods
mov
mov
mov
test
test
test
cmpsb
stos
stos
mov
test
lods
test
movsl
mov
stos
test
test
ljmp
mov
stos
mov
mov
mov
lods
cmpsl
mov
lods
test
mov
mov
mov
mov
test
test
movsl
lods
mov
test
mov
lods
mov
mov
mov
test
test
test
cmpsb
stos
stos
mov
test
ljmp
cmpsl
fwait
cmpsb
movsl
mov
test
lods
mov
movsl
mov
movsl
lods
test
movsl
mov
stos
test
test
add
ljmp
mov
mov
movsl
mov
test
test
movsl
mov
stos
test
test
add
ljmp
fwait
cmpsl
movsl
mov
mov
mov
test
mov
test
cmpsb
stos
stos
mov
test
aam
ljmp
cmpsl
fwait
cmpsl
movsl
mov
mov
mov
test
mov
test
cmpsb
stos
stos
mov
test
ljmp
mov
cmpsl
mov
mov
mov
lods
cmpsl
mov
stos
test
test
mov
ljmp
mov
mov
mov
stos
fwait
lods
stos
cmpsl
mov
lods
stos
fwait
mov
mov
lods
cmpsl
mov
movsl
lods
test
movsl
mov
stos
test
test
lods
test
movsl
mov
stos
test
test
ljmp
fwait
lods
stos
cmpsl
mov
lods
stos
fwait
mov
mov
lods
cmpsl
mov
movsl
lods
test
movsl
mov
stos
test
test
ljmp
cmpsl
stos
mov
movsl
cmpsb
test
test
mov
movsl
cmpsb
test
fwait
test
test
add
ljmp
stos
mov
cmpsl
movsl
mov
mov
mov
mov
mov
stos
mov
test
ret
ljmp
mov
movsl
mov
fwait
cmpsb
movsl
mov
test
test
cmpsb
stos
stos
mov
test
ljmp
mov
cmpsl
movsl
test
test
les
ljmp
cmpsl
stos
mov
mov
mov
mov
movsl
lods
test
cmpsb
stos
stos
mov
test
les
ret
sub
ret
sub
ret
sub
ret
sub
ret
sub
jle
mov
jno
notl
push
bound
adc
push
jl
fdiv
cld
sub
jnp
add
int3
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
lret
lret
les
ljmp
mov
test
mov
mov
mov
mov
add
ljmp
mov
stos
test
les
ljmp
fwait
stos
mov
mov
mov
mov
ljmp
lods
cmpsl
fwait
mov
test
les
ljmp
aam
ljmp
mov
mov
stos
mov
mov
mov
mov
ljmp
mov
stos
test
test
ret
ljmp
stos
mov
mov
mov
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
ljmp
fwait
cmpsl
movsl
mov
test
les
ljmp
test
stos
mov
test
xchg
sti
loopne
mov
stos
mov
lods
stos
mov
scas
mov
test
lods
test
mov
mov
mov
mov
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
aam
ljmp
mov
stos
mov
lods
stos
mov
scas
mov
test
lods
test
mov
mov
mov
mov
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
ljmp
test
stos
mov
test
xchg
sti
loopne
mov
stos
mov
lods
stos
mov
scas
mov
test
mov
mov
mov
test
mov
movsl
stos
test
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
ret
ljmp
mov
stos
mov
lods
stos
mov
scas
mov
test
mov
mov
mov
test
mov
movsl
stos
test
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
aam
ljmp
fwait
mov
mov
mov
test
mov
movsl
stos
test
test
aam
ljmp
test
stos
mov
test
xchg
sti
loopne
mov
stos
mov
lods
stos
mov
scas
mov
test
movsl
mov
stos
mov
cmpsl
mov
stos
mov
cmpsb
stos
stos
mov
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
les
ljmp
mov
stos
mov
lods
stos
mov
scas
mov
test
movsl
mov
stos
mov
cmpsl
mov
stos
mov
cmpsb
stos
stos
mov
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
ret
ljmp
mov
mov
cmpsl
mov
stos
mov
cmpsb
stos
stos
mov
test
ret
ljmp
mov
mov
lods
stos
stos
test
test
add
ljmp
test
stos
mov
test
xchg
sti
loopne
mov
stos
mov
lods
stos
mov
scas
mov
test
movsl
test
stos
cmpsl
test
test
mov
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
les
ljmp
mov
stos
mov
lods
stos
mov
scas
mov
test
movsl
test
stos
cmpsl
test
test
mov
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
ljmp
fwait
movsl
test
stos
cmpsl
test
les
ljmp
test
stos
mov
test
xchg
sti
loopne
mov
stos
mov
lods
stos
mov
scas
mov
test
fwait
mov
test
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
ret
ljmp
mov
stos
mov
lods
stos
mov
scas
mov
test
fwait
mov
test
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
aam
ljmp
scas
fwait
mov
test
test
aam
ljmp
test
stos
mov
test
xchg
sti
loopne
mov
stos
mov
lods
stos
mov
scas
mov
test
mov
mov
mov
mov
mov
mov
stos
mov
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
aam
ljmp
mov
stos
mov
lods
stos
mov
scas
mov
test
mov
mov
mov
mov
mov
mov
stos
mov
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
ljmp
mov
test
stos
mov
mov
mov
mov
stos
mov
test
ljmp
movsl
mov
cmpsl
fwait
mov
mov
stos
mov
loopne
lods
movsl
mov
mov
movsl
lods
mov
test
test
test
cmpsl
movsl
mov
mov
addb
test
les
ljmp
test
stos
mov
test
xchg
sti
loopne
mov
stos
mov
lods
stos
mov
scas
mov
test
mov
mov
mov
movsl
stos
test
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
ret
ljmp
mov
stos
mov
lods
stos
mov
scas
mov
test
mov
mov
mov
movsl
stos
test
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
aam
ljmp
fwait
mov
mov
mov
movsl
stos
test
test
aam
ljmp
test
stos
mov
test
xchg
sti
loopne
mov
stos
mov
lods
stos
mov
scas
mov
test
test
test
mov
movsl
stos
test
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
aam
ljmp
mov
stos
mov
lods
stos
mov
scas
mov
test
test
test
mov
movsl
stos
test
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
ljmp
fwait
test
test
mov
movsl
stos
test
test
ljmp
mov
fwait
mov
movsl
mov
mov
lods
stos
fwait
lods
stos
cmpsl
mov
lods
stos
fwait
mov
mov
lods
cmpsl
mov
movsl
lods
test
movsl
mov
stos
test
test
lods
test
movsl
mov
stos
test
test
les
ljmp
mov
fwait
mov
movsl
mov
mov
loopne
mov
stos
mov
mov
mov
lods
cmpsl
mov
lods
test
mov
mov
mov
mov
test
test
movsl
lods
mov
test
mov
lods
mov
mov
mov
test
test
test
cmpsb
stos
stos
mov
test
lods
test
movsl
mov
stos
test
test
les
ljmp
mov
cmpsl
stos
mov
mov
mov
test
mov
xchg
sti
loopne
mov
test
mov
cmpsl
fwait
mov
mov
test
mov
mov
mov
mov
lods
mov
movsl
mov
stos
test
test
mov
stos
test
test
test
cmpsl
movsl
mov
mov
xchg
sti
loopne
movsl
mov
cmpsl
fwait
mov
mov
test
mov
mov
mov
mov
lods
mov
movsl
mov
stos
test
test
mov
stos
test
test
test
test
test
cmpsb
stos
stos
mov
test
les
ljmp
mov
cmpsl
stos
mov
mov
mov
test
mov
xchg
xchg
subl
test
test
cmpsb
stos
stos
mov
test
les
ljmp
mov
cmpsl
stos
mov
mov
mov
test
mov
test
stos
mov
mov
mov
cmpsl
scas
mov
mov
mov
test
movsl
mov
stos
test
test
lods
test
cmpsb
stos
stos
mov
test
ljmp
mov
cmpsl
stos
mov
mov
mov
test
mov
xchg
xchg
subb
mov
test
test
cmpsb
stos
stos
mov
test
mov
ljmp
mov
cmpsl
stos
mov
mov
mov
test
mov
xchg
sti
loopne
movsl
mov
cmpsl
fwait
mov
mov
movsl
test
scas
mov
cmpsl
mov
lods
mov
movsl
mov
stos
test
test
mov
movsl
test
scas
mov
mov
lods
cmpsl
mov
mov
lods
mov
movsl
mov
stos
test
test
movsl
mov
stos
test
test
lods
test
cmpsb
stos
stos
mov
test
les
ljmp
mov
cmpsl
stos
mov
mov
mov
test
mov
test
cmpsl
lods
mov
fwait
movsl
mov
movsl
mov
mov
addl
mov
test
test
ret
ljmp
mov
cmpsl
test
fwait
lods
stos
fwait
mov
mov
lods
cmpsl
mov
stos
mov
mov
test
mov
mov
lods
cmpsl
mov
mov
movsl
lods
test
movsl
mov
stos
test
test
mov
mov
movsl
mov
movsl
lods
test
movsl
mov
stos
test
test
mov
ljmp
mov
cmpsl
test
stos
mov
xchg
repnz
test
cmpsl
mov
mov
movsl
cmpsl
mov
mov
mov
test
movsl
mov
stos
test
test
cmc
div
lock
test
movsl
mov
stos
test
test
mov
mov
movsl
mov
movsl
lods
test
movsl
mov
stos
test
test
add
ljmp
mov
movsl
stos
mov
stos
mov
movsl
mov
stos
stos
test
stos
xchg
xchg
test
ljmp
test
cmpsl
xchg
test
stos
xchg
xchg
test
aam
ljmp
lods
mov
mov
test
stos
xchg
xchg
test
ret
ljmp
cmpsl
scas
mov
mov
lods
mov
mov
test
stos
xchg
xchg
test
aam
ljmp
fwait
mov
mov
test
stos
xchg
xchg
test
ljmp
fwait
subl
test
stos
xchg
xchg
test
les
ljmp
test
stos
mov
mov
test
test
subl
test
stos
xchg
xchg
test
mov
mov
mov
test
mov
mov
fwait
xchg
mov
test
stos
cmpsl
scas
xchg
subb
hlt
test
xchg
lods
scas
stos
mov
xchg
xchg
xchg
test
mov
xchg
xchg
test
subl
test
test
mov
xchg
test
les
ljmp
cmpsb
scas
mov
test
mov
loopne
test
cmpsl
scas
xchg
subb
hlt
test
xchg
lods
scas
stos
mov
xchg
xchg
xchg
test
mov
xchg
xchg
test
mov
xchg
xchg
test
les
ljmp
lods
mov
mov
mov
test
mov
mov
fwait
xchg
mov
test
stos
cmpsl
scas
xchg
subb
hlt
test
xchg
lods
scas
stos
mov
xchg
xchg
xchg
test
mov
xchg
xchg
test
subl
test
test
stos
xchg
xchg
test
ljmp
stos
movsl
cmpsb
test
fwait
mov
movsl
mov
mov
test
mov
xchg
xchg
cmpsl
mov
stos
stos
test
mov
test
les
ljmp
stos
stos
mov
stos
test
ret
ljmp
cmpsl
scas
mov
cmpsl
stos
stos
stos
mov
les
ljmp
cmpsl
scas
mov
mov
mov
mov
les
ljmp
cmpsl
scas
mov
les
ljmp
xchg
test
test
stos
xchg
xchg
test
aam
ljmp
mov
test
mov
mov
mov
xchg
xchg
xchg
test
add
ljmp
mov
stos
test
xchg
xchg
xchg
test
ret
ljmp
stos
xchg
mov
xchg
movsl
stos
mov
stos
test
xchg
xchg
xchg
test
mov
ljmp
movsl
mov
movsl
cmpsb
test
mov
mov
hlt
xchg
test
loopne
repz
mul
hlt
test
mov
xchg
xchg
test
add
ljmp
lods
mov
stos
cmpsl
scas
xchg
lods
mov
xchg
mov
xchg
test
ret
ljmp
stos
mov
lea
mov
mov
stos
xchg
xchg
test
add
ljmp
cmpsl
scas
nop
mov
stos
mov
stos
mov
movsl
mov
stos
stos
test
stos
xchg
xchg
test
aam
ljmp
mov
mov
stos
mov
mov
movsl
cmpsl
mov
mov
stos
xchg
xchg
test
add
ljmp
cmpsl
scas
xchg
test
stos
xchg
xchg
test
aam
ljmp
mov
xchg
xchg
xchg
lods
mov
mov
mov
xchg
test
mov
lea
test
stos
xchg
xchg
test
les
ljmp
lods
test
mov
lea
movsl
cmpsl
mov
test
stos
xchg
xchg
xchg
lods
mov
mov
mov
xchg
test
mov
lea
test
stos
xchg
xchg
test
xchg
xchg
xchg
test
aam
ljmp
test
stos
mov
mov
test
test
test
mov
lea
movsl
cmpsl
mov
test
stos
xchg
xchg
xchg
lods
mov
mov
mov
xchg
test
mov
lea
test
stos
xchg
xchg
test
xchg
xchg
xchg
test
xchg
xchg
xchg
test
aam
ljmp
test
cmpsl
scas
xchg
lea
xchg
lods
scas
stos
mov
lea
mov
mov
stos
xchg
xchg
test
scas
xchg
test
test
stos
xchg
xchg
test
ret
ljmp
mov
stos
mov
xchg
xchg
xchg
test
add
ljmp
test
movsl
mov
mov
xchg
test
ljmp
test
stos
movsl
cmpsb
test
lea
sti
loopne
test
cmpsl
scas
xchg
subb
hlt
test
xchg
lods
scas
stos
mov
xchg
xchg
xchg
test
mov
xchg
xchg
test
xchg
lods
scas
stos
mov
testb
stos
xchg
xchg
test
les
ljmp
test
cmpsl
scas
xchg
subb
hlt
test
xchg
lods
scas
stos
mov
xchg
xchg
xchg
test
mov
xchg
xchg
test
aam
ljmp
mov
cmpsb
test
test
stos
xchg
xchg
test
ljmp
stos
movsl
cmpsb
test
test
stos
xchg
xchg
test
ljmp
stos
mov
mov
test
mov
stos
xchg
xchg
test
add
ljmp
mov
nop
mov
stos
mov
stos
mov
movsl
mov
stos
stos
test
stos
xchg
xchg
test
ret
ljmp
scas
test
stos
xchg
xchg
test
ljmp
mov
mov
mov
test
test
stos
xchg
xchg
test
mov
xchg
xchg
test
add
ljmp
movsl
mov
test
stos
xchg
xchg
test
les
ljmp
mov
mov
mov
mov
stos
mov
mov
cmpsl
mov
movsl
lods
test
movsl
mov
stos
test
test
lods
test
movsl
mov
stos
test
test
aam
ljmp
movsl
stos
mov
mov
cmpsl
mov
movsl
lods
test
movsl
mov
stos
test
test
les
ljmp
mov
mov
mov
mov
mov
test
mov
mov
lods
cmpsl
mov
mov
lods
mov
movsl
mov
stos
test
test
mov
stos
test
test
lods
test
movsl
mov
stos
test
test
ljmp
mov
mov
mov
lods
cmpsl
mov
mov
lods
mov
movsl
mov
stos
test
test
mov
stos
test
test
mov
ljmp
mov
mov
mov
mov
mov
movsl
test
scas
mov
mov
lods
cmpsl
mov
mov
lods
mov
movsl
mov
stos
test
test
test
test
lods
test
movsl
mov
stos
test
test
les
ljmp
mov
mov
stos
cmpsl
scas
mov
mov
lods
cmpsl
mov
mov
lods
mov
movsl
mov
stos
test
test
test
test
ret
ljmp
mov
mov
mov
test
cmpsl
mov
mov
movsl
cmpsl
mov
mov
mov
test
movsl
mov
stos
test
test
lods
test
movsl
mov
stos
test
test
aam
ljmp
mov
mov
mov
mov
test
movsl
mov
stos
test
test
aam
ljmp
movsl
test
mov
test
xchg
xchg
xchg
test
aam
ljmp
mov
stos
test
stos
xchg
xchg
test
add
ljmp
lea
mov
test
stos
xchg
xchg
test
leave
rol
icebp
les
les
aad
leave
inc
mov
iret
hlt
leave
les
xlat
les
les
ljmp
test
stos
mov
test
xchg
sti
loopne
mov
stos
mov
lods
stos
mov
scas
mov
test
mov
movsl
scas
fwait
mov
mov
cmpsb
stos
stos
mov
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
ljmp
mov
stos
mov
lods
stos
mov
scas
mov
test
mov
movsl
scas
fwait
mov
mov
cmpsb
stos
stos
mov
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
add
ljmp
fwait
mov
movsl
scas
fwait
mov
mov
cmpsb
stos
stos
mov
test
add
ljmp
lods
mov
fwait
movsl
mov
movsl
mov
mov
addl
les
ljmp
mov
fwait
mov
movsl
mov
mov
mov
fwait
mov
movsl
cmpsl
mov
mov
mov
test
movsl
mov
stos
test
test
lods
test
movsl
mov
stos
test
test
add
ljmp
mov
fwait
mov
movsl
mov
mov
mov
movsl
stos
mov
mov
cmpsl
mov
movsl
lods
test
movsl
mov
stos
test
test
lods
test
movsl
mov
stos
test
test
add
ljmp
mov
fwait
mov
movsl
mov
mov
loopne
mov
mov
mov
lods
cmpsl
mov
mov
lods
mov
movsl
mov
stos
test
test
mov
stos
test
test
lods
test
movsl
mov
stos
test
test
les
ljmp
mov
fwait
mov
movsl
mov
mov
loopne
mov
mov
stos
cmpsl
scas
mov
mov
lods
cmpsl
mov
mov
lods
mov
movsl
mov
stos
test
test
test
test
lods
test
movsl
mov
stos
test
test
ljmp
mov
mov
mov
cmpsl
scas
mov
mov
mov
test
movsl
mov
stos
test
test
mov
ljmp
mov
cmpsl
stos
mov
mov
mov
test
mov
xchg
xchg
cmpsl
mov
stos
stos
xchg
mov
test
lods
test
cmpsb
stos
stos
mov
test
mov
ljmp
mov
cmpsl
stos
mov
mov
mov
test
mov
xchg
xchg
cmpsl
mov
stos
stos
nop
mov
stos
mov
mov
test
cmpsb
stos
stos
mov
test
ljmp
mov
cmpsl
stos
mov
mov
mov
test
mov
xchg
xchg
cmpsl
mov
stos
stos
test
lods
test
cmpsb
stos
stos
mov
test
les
ljmp
test
stos
mov
test
xchg
sti
loopne
mov
stos
mov
lods
stos
mov
scas
mov
test
mov
lods
stos
stos
fwait
cmpsl
movsl
test
test
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
add
ljmp
mov
stos
mov
lods
stos
mov
scas
mov
test
mov
lods
stos
stos
fwait
cmpsl
movsl
test
test
test
mov
lods
stos
stos
fwait
mov
test
cmpsb
stos
stos
mov
test
ret
ljmp
fwait
mov
lods
stos
stos
fwait
cmpsl
movsl
test
test
test
ret
ljmp
mov
cmpsl
stos
mov
mov
mov
test
mov
xchg
xchg
xchg
mov
mov
mov
mov
test
test
cmpsb
stos
stos
mov
test
ljmp
mov
cmpsl
stos
mov
mov
mov
test
mov
xchg
xchg
andb
mov
test
cmpsb
stos
stos
mov
test
ret
ljmp
stos
stos
mov
stos
xchg
mov
test
ljmp
cmpsl
scas
mov
xchg
icebp
xchg
mov
mov
mov
test
mov
ljmp
cmpsl
scas
mov
movsl
test
ret
ljmp
mov
cmpsl
stos
mov
mov
mov
test
mov
xchg
xchg
mov
test
lods
test
cmpsb
stos
stos
mov
test
ljmp
mov
cmpsl
stos
mov
mov
mov
test
mov
xchg
xchg
xchg
mov
mov
mov
test
test
cmpsb
stos
stos
mov
test
aam
ljmp
mov
cmpsl
stos
mov
mov
mov
test
mov
xchg
xchg
xchg
mov
mov
mov
test
test
les
ljmp
mov
cmpsl
stos
mov
mov
mov
test
mov
xchg
xchg
xchg
mov
mov
mov
test
test
cmpsb
stos
stos
mov
test
aam
ljmp
mov
cmpsl
stos
mov
mov
mov
test
mov
xchg
xchg
mov
mov
test
test
les
ljmp
mov
cmpsl
stos
mov
mov
mov
test
mov
xchg
xchg
mov
mov
mov
test
test
add
ljmp
fwait
andb
lods
stos
stos
test
stos
xchg
xchg
test
les
ljmp
test
stos
mov
mov
test
test
andb
lods
stos
stos
test
stos
xchg
xchg
test
mov
mov
mov
test
mov
mov
fwait
xchg
mov
test
stos
cmpsl
scas
xchg
subb
hlt
hlt
xchg
andb
stos
mov
xchg
xchg
xchg
test
mov
xchg
xchg
test
andb
lods
stos
stos
test
test
mov
xchg
test
les
ljmp
cmpsb
scas
mov
test
mov
loopne
test
cmpsl
scas
xchg
subb
hlt
hlt
xchg
andb
stos
mov
xchg
xchg
xchg
test
mov
xchg
xchg
test
mov
xchg
xchg
test
les
ljmp
lods
mov
mov
mov
test
mov
mov
fwait
xchg
mov
test
stos
cmpsl
scas
xchg
subb
hlt
hlt
xchg
andb
stos
mov
xchg
xchg
xchg
test
mov
xchg
xchg
test
andb
lods
stos
stos
test
test
stos
xchg
xchg
test
aam
ljmp
stos
stos
mov
stos
nop
mov
stos
mov
mov
ljmp
cmpsl
scas
mov
mov
mov
add
ljmp
cmpsl
scas
mov
mov
mov
test
les
ljmp
cmpsl
scas
mov
mov
les
ljmp
cmpsl
scas
mov
xchg
icebp
xchg
mov
mov
test
les
ljmp
cmpsl
scas
mov
mov
mov
les
ljmp
test
movsl
mov
mov
xchg
test
mov
ljmp
test
stos
movsl
cmpsb
test
lea
sti
loopne
test
cmpsl
scas
xchg
subb
hlt
hlt
xchg
andb
stos
mov
xchg
xchg
xchg
test
mov
xchg
xchg
test
xchg
lods
scas
stos
mov
testb
stos
xchg
xchg
test
les
ljmp
test
cmpsl
scas
xchg
subb
hlt
hlt
xchg
andb
stos
mov
xchg
xchg
xchg
test
mov
xchg
xchg
test
ret
ljmp
lods
mov
movsl
mov
movsl
test
stos
mov
xchg
sti
loopne
mov
xchg
mov
fwait
test
stos
stos
mov
test
mov
testb
mov
test
mov
test
stos
stos
mov
test
test
mov
testl
cmpsb
lods
test
test
lods
test
cmpsb
stos
stos
mov
test
ljmp
lods
mov
movsl
mov
movsl
test
test
test
cmpsb
stos
stos
mov
test
ljmp
lods
mov
movsl
mov
movsl
test
stos
mov
xchg
sti
loopne
mov
xchg
mov
test
lods
test
test
mov
testb
mov
test
lods
mov
test
stos
stos
mov
test
test
mov
testl
cmpsb
lods
test
test
lods
test
cmpsb
stos
stos
mov
test
ljmp
mov
cmpsl
stos
mov
mov
mov
test
mov
test
test
mov
mov
loopne
lods
mov
fwait
movsl
mov
movsl
mov
mov
xchg
fwait
xchg
xchg
test
mov
mov
stos
stos
mov
test
lods
test
cmpsb
stos
stos
mov
test
ret
ljmp
lods
mov
fwait
movsl
mov
movsl
mov
mov
xchg
fwait
xchg
xchg
test
mov
mov
stos
stos
mov
test
ret
ljmp
mov
mov
xchg
xchg
xchg
test
ret
ljmp
mov
mov
mov
xchg
xchg
xchg
test
ret
ljmp
test
movsl
test
mov
xchg
movsl
lods
mov
test
stos
xchg
xchg
test
ret
ljmp
test
stos
mov
mov
test
test
mov
mov
mov
test
mov
mov
mov
mov
test
test
stos
xchg
xchg
test
mov
xchg
xchg
test
add
ljmp
stos
mov
mov
test
test
mov
movsl
mov
test
stos
xchg
xchg
test
aam
ljmp
xchg
test
stos
xchg
xchg
test
add
ljmp
movsl
test
mov
subb
xchg
xchg
xchg
test
add
ljmp
movsl
test
mov
mov
mov
xchg
xchg
xchg
test
add
ljmp
lods
movsl
stos
stos
mov
mov
mov
test
mov
mov
mov
stos
mov
movsl
mov
stos
stos
test
stos
xchg
xchg
test
aam
ljmp
movsl
test
mov
mov
test
stos
xchg
xchg
test
ljmp
movsl
test
mov
mov
stos
mov
mov
test
test
mov
movsl
mov
test
stos
xchg
xchg
test
ljmp
mov
xchg
mov
mov
test
test
stos
xchg
xchg
test
aam
ljmp
les
ljmp
mov
nop
mov
mov
movsl
mov
lods
test
movsl
test
mov
mov
xchg
xchg
xchg
test
ljmp
test
stos
mov
mov
test
test
mov
mov
mov
test
cmpsl
scas
xchg
movsl
mov
xchg
cmpsl
lods
mov
test
cmpsl
scas
xchg
movsl
mov
xchg
cmpsl
lods
mov
mov
mov
stos
xchg
xchg
test
mov
xchg
xchg
test
aam
ljmp
mov
mov
mov
xchg
mov
cmpsl
mov
mov
mov
xchg
test
ljmp
cmpsl
scas
xchg
movsl
mov
xchg
cmpsl
lods
mov
mov
mov
stos
xchg
xchg
test
add
ljmp
mov
movsl
stos
mov
stos
mov
movsl
mov
stos
stos
subb
xchg
xchg
xchg
test
ret
ljmp
mov
mov
lods
mov
xchg
mov
mov
test
stos
xchg
xchg
test
les
ljmp
cmpsl
scas
lods
stos
mov
mov
stos
test
test
mov
mov
mov
stos
mov
movsl
mov
stos
stos
test
stos
xchg
xchg
test
ljmp
lods
mov
movsl
mov
mov
mov
xchg
test
stos
xchg
xchg
test
ljmp
mov
mov
test
test
stos
xchg
xchg
test
ret
ljmp
stos
cmpsl
scas
xchg
movsl
mov
xchg
cmpsl
lods
mov
test
cmpsl
scas
xchg
movsl
mov
xchg
cmpsl
lods
mov
mov
mov
stos
xchg
xchg
test
add
ljmp
lods
nop
mov
stos
mov
stos
mov
movsl
mov
stos
stos
test
stos
xchg
xchg
test
ret
ljmp
mov
mov
mov
mov
xchg
xchg
mov
movsl
stos
mov
stos
mov
movsl
mov
stos
stos
test
stos
xchg
xchg
test
mov
xchg
xchg
test
les
ljmp
mov
mov
mov
mov
test
stos
mov
nop
stos
nop
mov
lock
mov
mov
mov
stos
xchg
xchg
test
mov
mov
stos
xchg
xchg
test
xchg
mov
movsl
stos
mov
stos
mov
movsl
mov
stos
stos
test
test
stos
xchg
xchg
test
add
ljmp
test
stos
mov
mov
test
test
mov
mov
test
stos
mov
nop
stos
nop
mov
lock
mov
mov
mov
stos
xchg
xchg
test
mov
mov
stos
xchg
xchg
test
xchg
mov
movsl
stos
mov
stos
mov
movsl
mov
stos
stos
test
test
stos
xchg
xchg
test
icebp
repnz
test
stos
xchg
xchg
test
les
ljmp
test
stos
movsl
cmpsb
test
lea
xchg
mov
xchg
xchg
xchg
test
mov
lods
test
test
mov
mov
test
stos
mov
nop
stos
nop
mov
lock
mov
mov
mov
stos
xchg
xchg
test
mov
mov
stos
xchg
xchg
test
xchg
mov
movsl
stos
mov
stos
mov
movsl
mov
stos
stos
test
test
stos
xchg
xchg
test
icebp
repnz
test
mov
xchg
test
ljmp
mov
mov
mov
mov
xchg
lods
mov
xchg
mov
mov
cmpsl
nop
mov
stos
mov
stos
mov
test
stos
mov
nop
stos
nop
mov
lock
mov
mov
mov
stos
xchg
xchg
test
mov
mov
stos
xchg
xchg
test
loopne
xchg
test
icebp
repnz
test
hlt
xchg
test
stos
xchg
xchg
test
add
ljmp
div
repnz
stos
xchg
xchg
test
ret
ljmp
cmpsb
test
cmpsl
scas
lods
stos
mov
xchg
xchg
xchg
test
ret
ljmp
xchg
mov
test
stos
xchg
xchg
test
ret
ljmp
stos
mov
mov
mov
lods
stos
mov
mov
mov
mov
stos
mov
movsl
mov
stos
stos
test
stos
xchg
xchg
test
mov
xchg
xchg
test
aam
ljmp
scas
mov
mov
xchg
mov
mov
test
stos
xchg
xchg
test
mov
ljmp
mov
mov
mov
test
mov
mov
stos
mov
stos
mov
movsl
mov
stos
stos
test
stos
xchg
xchg
test
mov
xchg
xchg
test
aam
ljmp
mov
mov
mov
stos
xchg
xchg
test
les
ljmp
mov
xchg
mov
mov
lea
mov
lods
stos
mov
mov
mov
mov
stos
mov
movsl
mov
stos
stos
test
stos
xchg
xchg
test
mov
xchg
xchg
test
add
ljmp
stos
mov
mov
test
test
mov
xchg
xchg
xchg
test
aam
ljmp
mov
stos
xchg
lods
mov
stos
mov
mov
mov
mov
stos
mov
movsl
mov
stos
stos
test
stos
xchg
xchg
test
mov
xchg
xchg
test
ret
ljmp
mov
mov
mov
test
stos
xchg
xchg
test
ljmp
lods
lea
stos
stos
mov
mov
mov
stos
xchg
xchg
test
rol
fadd
les
rol
vshufps
hlt
les
rol
rol
mov
les
les
rol
clc
movsl
mov
mov
in
test
out
mov
mov
lods
mov
test
mov
mov
test
ljmp
stos
lods
mov
mov
stos
stc
out
ljmp
in
mov
mov
mov
stos
mov
test
mov
out
mov
mov
lods
mov
test
mov
mov
test
ljmp
in
in
clc
mov
cmpsl
mov
lods
mov
cli
leave
into
in
in
in
clc
mov
mov
mov
xchg
mov
mov
test
mov
into
in
in
in
in
clc
mov
mov
mov
cmpl
mov
test
test
mov
test
out
mov
stos
mov
scas
mov
lods
test
stc
out
movsl
test
mov
mov
mov
mov
cmpl
mov
test
leave
into
in
in
in
clc
jmp
mov
mov
mov
lods
test
mov
into
in
in
clc
jmp
mov
mov
cli
leave
into
in
clc
jmp
mov
mov
lea
into
clc
jmp
mov
mov
cli
xchg
test
sbbl
mov
lea
test
xchg
test
pushf
pushf
xchg
test
xchg
test
pushf
pushf
xchg
test
xchg
test
pushf
pushf
xchg
test
push
hlt
aad
out
icebp
hlt
cmpsl
hlt
mov
pop
hlt
adc
jmp
mov
mov
cmc
sbb
shl
mov
mulb
divb
not
lock
addr16
inc
icebp
push
icebp
add
mov
into
repz
xchg
xchg
repz
repz
repz
cld
cmpsl
cld
mov
cld
aaa
cld
std
xchg
std
test
std
jge
xor
leave
std
decb
fdivr
mov
inc
clc
jbe
add
clc
ret
stc
loopne
lcall
stc
addr16
push
jnp
cmp
cli
out
stc
cli
and
ss
test
sti
and
in
les
div
xor
hlt
mov
hlt
loop
xchg
xchg
cmc
test
data16
xchg
mulb
negl
lock
icebp
xchg
icebp
movsl
icebp
ja
add
pushf
repnz
repnz
push
repz
cld
pusha
cld
sar
cmp
std
add
sbb
ljmp
xor
cmc
jmp
decl
sbb
clc
cmp
clc
lahf
clc
test
mov
mov
clc
jg
or
xor
stos
stc
mov
stc
enter
cmp
sub
lock
cmpsb
sti
jbe
push
sti
cs
hlt
les
in
hlt
jmp
icebp
hlt
xor
mov
hlt
jle
add
sbb
cmc
fprem1
icebp
cmc
xchg
cmc
stos
cmc
mov
cmc
jno
js
pop
cmc
es
int3
imul
negb
notb
pop
negb
test
mull
negl
div
lock
test
lock
xor
aam
fdiv
std
icebp
mov
mov
icebp
in
lods
repnz
or
repz
repz
rep
repz
inc
repz
xor
sar
cld
in
cld
lock
mov
cld
fs
sub
std
test
cmpsl
std
mov
pop
std
je
xchg
cmpsl
incb
dec
adc
cmpsl
mov
lcall
pushl
call
clc
push
clc
addr16
add
and
vpmovmskb
mov
inc
stc
push
stc
xlat
cli
in
nop
cli
sahf
cli
mov
cli
das
cli
pop
sti
pop
sti
les
les
hlt
dec
hlt
add
cmc
std
cmc
stos
cmc
mov
cmc
js
and
lods
divb
divl
divl
lock
and
xor
in
push
xor
icebp
dec
icebp
push
icebp
pop
icebp
jbe
pop
icebp
dec
repnz
or
adc
adc
sbb
xchg
repz
repz
repz
jecxz
jmp
cld
mov
mov
inc
cld
pop
cld
jns
adc
sbb
call
lcall
cli
sub
aad
mov
sti
dec
sti
dec
sti
les
les
mulb
ja
and
xchg
xchg
icebp
mov
inc
icebp
daa
icebp
aaa
icebp
cmp
cli
pushf
cli
pop
cli
insb
cli
les
div
xchg
mov
hlt
loope
sub
int
ljmp
repz
sti
insb
sti
les
call
cmc
adc
mulb
adc
sbb
sbb
cmp
imull
testl
lock
lock
lock
lock
icebp
xor
icebp
inc
repz
repz
cld
ja
add
pushl
clc
sar
out
clc
mov
clc
int
xchg
stc
mov
stc
sti
sar
lock
mov
push
sti
les
xchg
hlt
leave
hlt
out
hlt
mov
hlt
dec
hlt
push
hlt
addr16
jbe
sub
cmc
xchg
cmc
xchg
cmc
cltd
cmc
mov
cmc
popa
cmc
jnp
sub
sub
fcomi
test
xor
notb
notb
divb
mulb
aam
fincstp
test
mov
mov
mov
mull
add
sbb
int3
lock
lock
lock
lock
lock
lock
lock
add
lock
icebp
hlt
icebp
stc
icebp
movsb
icebp
mov
icebp
inc
icebp
push
icebp
or
icebp
out
div
lahf
bnd
jb
jns
add
pop
repnz
repz
mov
mov
repz
push
repz
lret
cld
cld
cld
sti
cld
stos
cld
inc
cld
dec
cld
push
cld
and
sub
aaa
cld
cmp
std
xchg
std
sahf
std
mov
std
ja
adc
ret
xlat
fdivrp
mov
push
incb
decb
pop
push
aas
loope
call
incl
dec
call
pop
jmp
ljmp
pushl
push
clc
clc
clc
xchg
push
clc
pop
clc
addr16
mov
dec
stc
inc
cli
dec
cli
push
cli
jbe
ss
cmp
sti
out
fwait
sti
mov
sti
arpl
jo
js
add
adc
sbb
daa
sti
les
mov
hlt
xchg
hlt
xchg
hlt
cmpsl
hlt
mov
imul
hlt
js
push
hlt
xor
shl
cmc
shl
loope
call
cmc
mov
cmc
mov
cmc
push
cmc
cmp
shl
not
testb
mov
testb
divb
js
pop
testb
sub
testl
negl
imull
push
testl
lock
lock
std
lock
lock
lock
lock
lock
lock
cmp
shl
icebp
in
xchg
icebp
cwtl
icebp
cmpsl
icebp
scas
icebp
push
icebp
data16
sbb
and
sub
ss
in
ljmp
repnz
repnz
bnd
ss
repz
fwait
repz
repz
jo
js
add
adc
sbb
daa
repz
cld
xchg
cld
xchg
cld
cmpsl
cld
mov
imul
cld
js
push
cld
xor
sar
std
sar
out
cmc
std
xchg
std
mov
dec
std
xor
jmp
push
decl
jmp
ljmp
clc
clc
clc
movsb
clc
mov
clc
push
clc
out
jmp
cmp
insl
stc
je
daa
stc
ss
xchg
cli
mov
cli
xchg
xchg
sti
js
pop
sti
push
sti
les
add
call
hlt
inc
hlt
push
hlt
js
push
hlt
adc
adc
xlat
cmc
out
mov
sahf
cmc
movsb
cmc
mov
cmc
sbb
cs
xor
xor
div
xchg
test
mov
testb
adc
xor
shl
not
testl
notl
pop
notl
idivl
test
lock
lock
lock
lock
lock
shl
icebp
mov
icebp
int3
repnz
inc
repnz
repnz
shl
in
rep
repz
repz
std
cld
addr16
jbe
xlat
std
in
xchg
std
pusha
std
mov
jbe
in
call
clc
out
cmc
clc
pushf
clc
jg
pop
clc
and
stc
push
stc
data16
jne
pop
sti
adc
xor
les
cwtl
hlt
call
hlt
and
cmp
shl
in
lock
sbb
fpatan
cmpsl
cld
mov
mov
incb
pop
clc
es
in
stc
mov
inc
stc
arpl
cli
xlat
cli
in
cli
mov
addr16
jbe
jp
lret
sti
hlt
sti
xchg
sti
cwtl
sti
pop
sti
insl
sti
or
adc
daa
sti
aaa
sti
les
les
les
arpl
jb
shl
cmc
loopne
inc
cmc
dec
cmc
push
cmc
or
das
cmc
mulb
notb
mulb
notb
imull
sbb
lock
fdiv
out
icebp
sub
repnz
repnz
inc
repnz
bnd
ret
repz
div
dec
repz
repz
repz
cld
inc
cld
mov
jle
adc
jge
or
adc
xor
int
fdivr
movsb
ljmp
jle
sbb
clc
test
test
clc
popa
clc
imul
clc
or
sbb
jecxz
xchg
stc
movsl
stc
dec
stc
pop
stc
adc
sbb
enter
jmp
cli
pusha
cli
jb
pop
cli
adc
les
les
les
hlt
adc
hlt
ds
xor
sbb
sub
shl
fcomip
negb
divb
mulb
jb
adc
cmp
out
repnz
lock
lock
lock
icebp
xchg
bnd
mov
mov
repz
cld
daa
cld
xor
into
sar
std
decb
ljmp
cmp
iret
clc
clc
in
mov
inc
clc
insb
clc
jne
jae
jns
add
stc
stc
stc
scas
stc
out
mov
cli
mov
nop
sti
sbb
sti
les
les
leave
hlt
fs
pop
hlt
out
icebp
cmc
mov
inc
cmc
and
xlat
mul
notb
imulb
div
idivl
divl
lock
lock
pop
lock
or
daa
lock
out
mov
lahf
icebp
mov
icebp
and
xor
fdiv
xchg
repnz
repnz
repnz
repnz
repz
repz
loop
cmc
cld
repz
stc
cld
dec
cld
pop
cld
adc
sar
std
mov
inc
std
outsl
std
aaa
std
sar
xchg
fwait
mov
inc
call
call
pushw
ss
cmp
push
clc
data16
jb
ss
cmp
inc
stc
dec
stc
outsl
stc
jbe
aaa
stc
cli
loop
xchg
cli
movsl
cli
addr16
jbe
pop
sti
les
les
fdiv
div
xor
cmc
mov
cmc
std
testb
aam
mov
negw
cld
int
out
std
ljmp
clc
cmpsl
stc
mov
xlat
cli
in
cli
lahf
cli
mov
les
cmc
shl
in
in
idivb
add
idiv
negl
lock
out
icebp
adc
div
xchg
mov
ja
add
sub
aad
loope
mov
pop
cld
push
cld
sub
xor
mov
cmpsl
mov
sbb
inc
clc
in
stc
jmp
repz
jb
xlat
cli
out
inc
cli
daa
cli
ss
xchg
sti
ja
add
aam
les
cmc
stos
cmc
push
cmc
data16
jne
xor
iret
imul
mulb
jbe
push
lock
lock
icebp
loop
cmpsl
repz
sar
cld
mov
adc
pop
std
es
loop
push
pop
xlat
jmp
incl
call
clc
addr16
jb
loop
ja
push
cli
addr16
jbe
jp
in
lock
les
push
cmc
div
xor
notl
cld
xchg
cld
mov
std
lret
std
std
xchg
std
mov
inc
std
data16
jne
daa
sti
xor
hlt
les
hlt
jbe
jnp
and
ret
cmc
mov
cwtl
divl
negl
imull
not
lock
xchg
xchg
lock
sbb
icebp
aad
cmpsl
cld
mov
push
cld
or
pop
cld
std
sar
cmp
std
stos
std
mov
mov
std
jp
dec
push
pop
data16
incb
dec
stc
xchg
nop
stc
aaa
stc
sar
sti
loopne
les
div
test
daa
hlt
ss
push
cmc
popa
cmc
ja
pop
not
lock
div
xor
repnz
bnd
repz
repz
jb
jns
add
pop
cld
es
sar
std
mov
mov
mov
std
dec
xchg
cwtl
cmpsl
addr16
jne
sbb
ja
push
pushl
stc
jge
add
xor
cmp
cli
into
cli
idiv
xchg
mov
cli
push
cli
add
cli
sbb
lock
pushf
sti
les
les
cmc
pop
cmc
fs
pop
cmc
and
inc
notb
push
imull
mul
lock
adc
and
loop
cmpsl
icebp
mov
xchg
xchg
repnz
repnz
shl
loopne
out
repz
repz
repz
xor
int3
stc
push
cli
cli
daa
cli
out
idiv
push
sti
data16
les
hlt
shl
mov
inc
cmc
mov
test
shl
cs
lock
addr16
xlat
icebp
out
aaa
icebp
repnz
xchg
repnz
repnz
bnd
daa
repnz
fdiv
out
hlt
cld
mov
idiv
test
mov
and
in
push
call
aas
std
stc
mov
cli
lcall
les
gs
out
cmc
testb
divb
test
shl
cltd
lock
xchg
repnz
cld
repnz
xchg
cli
cmpsl
cli
xlat
sti
loopne
les
mov
les
notb
div
lock
lock
lock
aad
xchg
xchg
repnz
repnz
repnz
repz
std
xchg
std
pop
std
and
aaa
inc
jmp
push
stc
pop
sti
outsl
sti
les
inc
out
cmc
push
mulb
lock
mov
inc
lock
lock
lock
icebp
and
out
repnz
repz
repz
xchg
cld
mov
cld
add
adc
push
cld
and
pushf
std
push
std
jo
aaa
std
ret
in
pop
ljmp
lcall
jmp
sahf
clc
mov
ja
add
and
sub
cli
cltd
cli
dec
cli
pop
cli
insl
cli
imul
cli
sti
cmp
sti
les
cwtl
les
hlt
dec
cmc
pop
cmc
pop
imulb
insl
idivl
mov
dec
icebp
xlat
repnz
repz
push
repz
test
ja
add
out
cmc
addr16
jb
push
sbb
xchg
lcall
incl
lcall
ljmp
stc
stc
idiv
lods
cli
mov
je
les
hlt
cmc
hlt
xlat
cmc
in
aaa
cmc
notb
testl
icebp
sahf
icebp
dec
icebp
pop
icebp
insb
icebp
push
jo
ret
repnz
repnz
aaa
bnd
repz
repz
repz
repz
cld
popf
cld
mov
cld
inc
cld
and
out
stc
std
inc
std
popf
scas
jge
ud0
clc
or
idiv
test
pop
cli
adc
xchg
sti
movsb
sti
les
les
hlt
push
hlt
and
lock
xchg
cmc
inc
cmc
push
cmc
jns
push
cmc
xchg
mulb
je
cli
mull
divl
push
icebp
repnz
repnz
adc
div
xchg
pop
repz
inc
cld
push
cld
fwait
std
or
dec
clc
repnz
cmp
stc
cmpsl
stc
sti
cltd
sti
push
sti
ja
add
les
out
cmc
hlt
push
hlt
gs
ret
cmc
mov
mov
mov
mulb
add
sbb
int3
test
negl
idivl
add
sbb
shl
fdiv
out
div
xchg
mov
lock
lock
adc
sbb
and
icebp
in
xchg
icebp
lods
icebp
insb
icebp
and
cmp
cld
repnz
dec
repnz
repz
repnz
repz
repz
idiv
out
cmc
std
cltd
incb
adc
pushl
add
sbb
stc
cmpsl
cli
mov
dec
cli
insl
cli
adc
les
les
outsl
hlt
lods
idivb
lock
std
lock
icebp
lods
repnz
jb
or
adc
idiv
test
dec
pop
xchg
clc
daa
clc
xor
ljmp
xor
les
pop
hlt
adc
pop
mulb
divb
test
icebp
add
adc
shl
inc
repnz
repnz
xlat
repz
push
cld
gs
std
jl
sar
mov
mov
pushl
add
clc
enter
in
clc
cli
popf
cli
inc
cli
outsb
cli
mov
les
hlt
adc
cmc
out
push
mulb
js
sbb
popf
lock
lock
add
test
scas
mov
cli
test
cmp
cli
mov
xchg
cli
nop
cli
pushf
cli
cwtl
cli
movsb
cli
mov
cli
icebp
sti
aam
les
cmc
call
cmc
cld
cmc
clc
cmc
test
xor
cmc
mov
xchg
cmc
nop
cmc
pushf
cmc
cmpsl
cmc
mov
idivb
or
outsb
lock
icebp
movsb
icebp
pop
repnz
repnz
cld
pop
cld
std
sar
cmp
jmp
ja
add
push
clc
popa
clc
inc
cli
push
cli
arpl
in
hlt
les
hlt
div
xor
push
std
std
mov
dec
stc
add
mov
movsl
cli
push
cli
sti
sti
xchg
sti
cwtl
sti
and
das
sti
hlt
mov
test
notb
daa
cld
xor
aaa
std
ret
sar
xchg
jmp
incl
stc
ss
sti
aad
addr16
jbe
les
les
cmc
int3
neg
notb
testb
mul
div
mull
je
out
div
addr16
xchg
icebp
mov
repnz
xchg
repnz
repnz
repnz
aaa
repz
push
cld
mov
std
xor
ret
incb
push
adc
sar
loop
mov
incl
clc
addr16
je
ja
add
sti
test
cltd
sti
push
sti
les
int
fcomip
std
cmc
mov
out
cmc
mulb
divb
test
xchg
xchg
icebp
aaa
icebp
repnz
repnz
repz
ss
test
mov
cld
sbb
das
cld
xor
std
cs
decb
pushl
jmp
clc
and
stc
int
mov
stc
int
std
cli
cmp
cli
sahf
cli
movsb
cli
add
sti
fsincos
popf
sti
scas
sti
les
les
jns
jnp
pop
cmc
and
mulb
test
idivl
xchg
lock
repnz
repnz
test
mov
repz
cld
insb
cld
aas
cld
cmp
jb
out
clc
pushl
psubb
stc
lret
cli
mov
adc
sti
add
les
out
hlt
hlt
mov
inc
hlt
add
fdiv
mov
addr16
xor
int3
negb
idivb
testb
popa
imul
lock
lock
lock
lock
out
icebp
mov
repnz
repz
repnz
repnz
nop
repnz
repnz
repnz
push
repz
idiv
cmp
cld
outsb
cld
jae
daa
cld
xor
call
std
push
std
insl
std
test
mov
jge
add
cld
ljmp
pushl
dec
clc
cmp
clc
add
sbb
es
pop
cli
adc
sti
lods
sti
mov
les
inc
std
hlt
mov
nop
hlt
mov
hlt
or
cmp
cmc
xchg
xchg
divb
test
lods
testl
das
notl
data16
lock
div
xchg
outsb
icebp
xlat
repnz
inc
repnz
aam
mov
cld
icebp
cld
dec
cld
outsb
cld
jbe
in
std
cld
std
cmp
add
popf
pop
dec
cli
out
repz
clc
cli
xchg
cli
cmpsb
cli
ja
add
sti
sti
stc
sti
daa
sti
xor
les
inc
shl
inc
hlt
push
hlt
gs
adc
mul
testb
push
test
popa
testl
mul
lock
xchg
popf
lock
lock
icebp
xor
repnz
push
repnz
repz
repz
repz
daa
repz
out
idiv
pop
std
push
std
and
inc
cli
ljmp
clc
xchg
nop
clc
lahf
stc
sub
out
hlt
cli
sbb
les
movsb
les
neg
testl
negl
mul
lock
lock
lock
addr16
jo
adc
sbb
ss
loope
idiv
mov
inc
incb
add
push
sbb
push
incl
clc
in
clc
ljmp
clc
fdivrp
idiv
sti
stos
sti
les
pop
stc
hlt
mov
hlt
je
pop
hlt
pop
cmc
not
imulb
notb
mul
mul
imul
imul
mull
test
lock
add
or
and
icebp
out
xchg
icebp
addr16
jno
adc
cmp
lret
repnz
test
lahf
repnz
ljmp
std
gs
ss
test
mov
clc
lods
clc
inc
clc
pop
clc
jno
or
jge
and
out
idiv
cmp
cli
pop
cli
jle
push
cli
daa
cli
ss
sar
out
xchg
sti
inc
sti
push
sti
push
sti
les
loopne
out
div
test
mov
xchg
cmc
fwait
cmc
mov
cmc
dec
cmc
gs
jb
pop
cmc
adc
icebp
aam
fyl2x
stos
icebp
mov
icebp
xor
repnz
repnz
repnz
in
xchg
mov
mov
repz
cld
inc
cld
push
std
sub
aas
std
into
decb
insb
jae
xor
cmp
lret
decl
or
aam
fprem
jecxz
ljmp
clc
mov
movsb
clc
scas
clc
mov
mov
clc
pop
clc
gs
jp
or
push
clc
sbb
clc
ss
cmp
stc
fdivr
out
idiv
stc
cmp
mov
stc
dec
stc
push
stc
pop
stc
data16
ja
jns
add
psubw
stc
and
stc
aad
out
call
cli
mov
mov
movsl
cli
scas
cli
mov
mov
cli
pop
cli
data16
pop
cli
es
sub
cmp
sti
into
sti
sar
fdivr
cmc
sti
cld
sti
cmp
movsb
sti
test
mov
dec
sti
push
sti
fs
outsb
sti
jne
jl
add
psubq
sti
les
lock
hlt
int
aam
fdiv
out
gs
imul
hlt
cmc
mov
cmc
adc
sub
cmp
lret
div
idiv
testb
mov
imulb
testb
or
sbb
cmp
shl
imul
testl
notl
divl
jge
or
pop
mull
imull
test
lock
lock
lock
lock
lock
add
adc
lock
fcomi
div
xor
mov
icebp
outsl
icebp
jae
adc
sbb
cs
cmp
repnz
repz
repz
push
repz
repz
jle
or
and
sub
cmp
sar
jmp
cld
mov
lcall
cld
outsb
cld
jge
es
sub
xor
cmp
leave
std
fdivrp
lock
std
std
pushf
std
scas
std
mov
inc
std
dec
std
addr16
jo
add
push
std
sub
xor
dec
cmc
decb
mov
dec
addr16
jne
add
adc
sub
call
jmp
push
call
inc
decl
repnz
clc
clc
les
les
icebp
push
icebp
sub
lret
repnz
lock
nop
repnz
repz
repz
out
mov
clc
ja
adc
xlat
stc
in
daa
stc
sub
cli
lret
cli
sar
inc
cli
push
cli
jae
jp
xchg
sti
lcall
sti
cmp
les
les
push
hlt
negb
out
div
repnz
repnz
repnz
repnz
repnz
repz
repz
xchg
repz
repz
repz
sub
xor
std
cld
mov
nop
cld
stos
cld
pusha
cld
push
pop
dec
jmp
push
incl
jnp
sbb
clc
add
idiv
test
lcall
sti
adc
mov
fwait
hlt
mov
test
aam
push
repnz
xchg
std
mov
stc
aam
rol
les
sti
sbb
sub
in
rol
hlt
mov
cld
hlt
mov
out
cli
cld
mov
cld
add
and
int3
std
cmpsl
std
mov
insb
pop
clc
ja
add
sbb
sub
cmp
in
stc
mov
stc
xor
aas
stc
leave
cli
js
push
cli
sbb
cli
sti
jecxz
repnz
mov
push
sti
or
adc
test
lret
hlt
fcomi
in
hlt
repnz
cli
hlt
mov
xchg
hlt
mov
hlt
inc
hlt
data16
jnp
mov
pushf
cmc
lods
cmc
mov
mov
cmc
pop
cmc
aad
fcomip
lock
notb
idivb
add
sbb
sub
lret
idiv
testl
idivl
cmp
fcomi
xchg
lock
lock
and
shl
icebp
icebp
icebp
icebp
xchg
mov
icebp
push
icebp
gs
jo
jg
add
or
adc
sbb
sub
xor
fdiv
jecxz
xchg
repnz
or
lret
repz
cld
mov
dec
cld
jbe
adc
sub
ret
std
cmp
std
jo
push
std
es
cmc
scas
adc
daa
pushl
inc
clc
sar
in
cli
clc
xchg
mov
popf
clc
inc
clc
or
sbb
test
mov
stc
dec
stc
pop
stc
arpl
and
aaa
stc
sar
cli
loope
ja
add
es
int
stc
sti
sti
les
les
cmc
xor
mov
pusha
notb
repnz
mov
icebp
pusha
icebp
cmp
jmp
jno
and
shl
repz
repz
repz
repz
cld
sahf
cld
movsl
cld
inc
cld
push
cld
push
cli
gs
mov
inc
sti
les
in
jecxz
mov
hlt
inc
hlt
dec
hlt
jbe
jge
sub
xor
xor
cmp
cmp
cmc
ljmp
cmc
mov
lock
mov
xchg
lock
lock
lock
lock
les
decb
adc
adc
sbb
sbb
and
and
sub
les
aam
les
cli
inc
cli
les
lock
les
jo
inc
lock
lock
std
cmpsb
std
popa
ljmp
ja
push
jmp
clc
in
clc
hlt
clc
xchg
clc
cwtl
clc
cmpsl
clc
inc
clc
push
clc
sbb
les
lods
les
cmc
mov
cmc
pop
cmc
pop
cmc
outsl
cmc
add
sbb
shl
fdiv
out
loope
call
icebp
push
icebp
adc
std
aad
sub
cmp
in
pushl
call
clc
es
xor
jmp
clc
stc
xchg
stc
cmpsb
stc
pop
stc
push
stc
or
cli
call
cli
cmp
cli
cli
aaa
sti
les
mov
hlt
shl
mov
cwtl
hlt
mov
inc
hlt
push
hlt
fdiv
in
push
cmc
cmp
out
icebp
testl
icebp
pusha
icebp
insb
icebp
push
icebp
or
inc
repz
repz
repz
push
cld
jae
sub
xor
inc
pop
push
clc
addr16
or
stc
idiv
cmp
stc
pop
stc
stc
les
les
aad
push
hlt
gs
loop
cld
cmc
xchg
imull
mov
xchg
std
lods
std
aam
sar
fprem
loopne
idiv
xchg
mov
clc
push
clc
add
clc
sbb
mov
cmpsl
stc
scas
stc
addr16
jbe
adc
sub
fdivr
or
daa
cli
cs
sti
sti
in
pop
sti
adc
les
les
hlt
xlat
cmc
loop
dec
cmc
nop
lock
lock
lock
lock
inc
lock
lock
xlat
icebp
out
cmc
icebp
out
repnz
mov
std
and
sar
movsl
xchg
jmp
incl
pop
clc
sub
mov
and
les
and
inc
cmc
push
mull
or
cmp
into
lock
repnz
repnz
repnz
repz
repz
repz
in
decb
push
pushl
clc
xor
cmp
cmp
stc
sar
fdivr
fdivr
in
loopne
cmp
stc
push
sti
data16
es
les
les
hlt
xlat
hlt
daa
hlt
xor
cmc
lcall
idiv
testb
or
adc
sbb
es
neg
mul
imul
notl
mull
testl
lock
gs
insb
icebp
shl
pusha
repnz
repz
inc
cld
std
adc
sar
clc
enter
sar
fdivr
fdivr
in
loopne
in
clc
call
clc
cmpsl
clc
mov
inc
clc
rol
les
idivl
notl
icebp
jl
add
xchg
repz
repz
mov
inc
push
pop
clc
and
xor
aam
aam
div
xor
in
fadd
les
push
repnz
and
out
idiv
mov
push
clc
data16
jne
hlt
rol
lock
out
icebp
lock
lock
lock
lock
div
xchg
xchg
repnz
bnd
cmp
mov
decl
call
lcall
jmp
ljmp
pushl
jl
daa
pushl
call
sti
sar
jecxz
lahf
sti
les
aad
mov
divb
divl
les
hlt
aad
xor
hlt
les
les
not
imul
idiv
divl
or
icebp
ret
repnz
repz
scas
cld
pop
cld
cmp
push
lcall
jmp
ljmp
pushl
jl
js
add
add
or
or
adc
adc
sbb
sbb
and
and
out
repnz
cmpsb
clc
out
stc
cwtl
cli
movsb
cli
mov
cli
mov
mov
mov
cli
push
cli
gs
aaa
cli
ds
cmpsl
sti
les
loopne
in
cmc
call
cmc
ja
not
mul
idiv
divl
lock
icebp
mov
stc
les
nop
icebp
cmc
imulb
notl
lock
sbb
and
and
sub
sub
xor
xor
cmp
cmp
icebp
shl
icebp
xchg
icebp
sub
sub
or
cld
mov
mov
cld
inc
cld
dec
cld
dec
cld
push
cld
push
cld
pop
cld
and
cmp
push
cli
les
lods
les
mov
mov
testb
fdiv
pop
repnz
repz
pop
repz
std
push
std
cmp
inc
dec
dec
aam
sar
fdivr
fdivr
in
loopne
in
call
nop
pushf
cwtl
movsb
mov
incb
out
idiv
addr16
jb
pop
stc
daa
stc
les
dec
les
hlt
cmp
aam
shl
fdiv
fdiv
in
loopne
in
imul
div
div
notb
mulb
mov
aaa
divl
repnz
repnz
repnz
repnz
mov
mov
repnz
repnz
repnz
repnz
repnz
repnz
repnz
bnd
in
movsl
cld
scas
cld
mov
std
gs
sar
call
jmp
incl
cli
inc
cli
inc
cli
push
cli
pop
cli
popa
cli
pop
cli
cmp
and
cmp
les
lods
out
cmc
stc
cmc
and
xor
repnz
div
xor
repz
repz
cld
push
cld
jge
add
cld
cmp
std
test
cmp
std
push
std
and
sub
cmp
cmp
xchg
cwtl
fwait
pushl
call
dec
clc
out
clc
lcall
clc
pop
clc
xchg
stc
movsl
stc
cmpsb
cli
inc
cli
push
cli
outsb
cli
sar
outsl
sti
les
les
div
jbe
cmc
jl
divl
push
mull
divl
lock
daa
repnz
xor
cld
fdivr
out
xchg
push
cld
pop
cld
fs
add
or
pop
cld
repz
movsb
std
inc
std
push
std
jno
or
cmp
decb
incb
push
js
push
adc
adc
hlt
push
stc
incl
lcall
popa
ljmp
jbe
and
cmp
xchg
xchg
clc
lcall
stc
mov
stc
or
xor
ret
cli
push
jno
and
fsincos
inc
sti
push
sti
gs
and
les
les
les
addr16
jno
add
inc
mul
imull
xchg
icebp
ljmp
bnd
jle
push
repnz
repnz
repnz
repnz
repz
repz
repz
out
out
repz
repz
mov
xchg
repz
repz
repz
mov
repz
repz
repz
repz
jg
add
adc
repz
cld
icebp
cld
test
cld
xchg
cld
movsl
cld
test
mov
inc
cld
dec
cld
pop
cld
addr16
push
adc
sbb
xor
mov
dec
std
cmpsb
pop
incb
adc
cmp
sar
loopne
idiv
repnz
incl
dec
call
jmpw
ja
xor
cmp
mov
cli
in
les
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
cmc
shl
cmc
and
sub
sub
shl
test
aam
shl
fdiv
fdiv
in
loopne
in
imul
div
div
idiv
idiv
testb
notb
cwtl
mulb
test
mov
mov
mov
notb
imulb
idivb
test
ret
not
neg
mul
imul
notl
aaa
test
lock
insl
icebp
push
icebp
sbb
sbb
and
sub
repz
add
sbb
xor
cld
cld
pushf
cld
mov
push
cld
pop
cld
pop
cld
ds
or
call
clc
in
clc
xchg
clc
lahf
clc
cmpsl
clc
mov
inc
clc
pop
clc
imul
push
stc
jne
jl
adc
into
cli
sar
dec
cli
insb
cli
adc
cli
cmp
sti
cwtl
sti
mov
mov
sti
xor
les
les
hlt
loopne
lock
jno
add
hlt
shl
lock
lret
icebp
outsl
icebp
jno
sub
repnz
repnz
repnz
repnz
bnd
cld
pop
cld
sub
xor
sar
mov
cltd
std
std
jl
ret
dec
sti
lahf
movsl
inc
call
push
cmp
clc
jmp
stc
nop
stc
popf
stc
push
sti
es
cmc
hlt
mov
hlt
ds
jnp
sub
testb
shl
idivl
maskmovq
lock
lock
lock
lock
lock
cs
push
repnz
repnz
repz
repz
cld
pusha
cld
out
loopne
adc
jl
sub
jmp
stos
stc
inc
stc
adc
mov
inc
cli
jae
jnp
sub
les
hlt
gs
adc
hlt
xor
cmpsl
cmc
mov
cmc
cs
or
mov
cli
icebp
xchg
icebp
sahf
icebp
mov
icebp
jno
jns
es
sub
repnz
repnz
cmp
cmp
mov
sti
in
les
les
pusha
idivb
or
and
in
lock
cli
lock
mov
lock
sbb
shl
out
icebp
in
push
cld
cmp
fdivr
jecxz
call
std
cltd
std
inc
std
gs
insb
std
push
std
jl
js
add
add
lret
fdivr
fdivr
in
inc
push
push
js
add
and
incl
call
cwtl
jmp
jo
jl
js
clc
stos
clc
dec
clc
dec
clc
push
clc
pop
clc
fs
pusha
clc
or
aaa
clc
aad
fdivr
fdivr
in
loopne
in
stc
call
stc
mov
stc
dec
stc
push
stc
xor
cli
out
in
cli
call
cli
mov
cli
jl
js
add
add
or
or
adc
fdivrp
in
loopne
in
sti
call
sti
js
add
hlt
rol
mov
mov
jne
jae
jns
pop
cmc
or
cmc
sbb
and
das
cmc
ss
cmp
not
neg
mul
imul
div
idiv
testb
cmpsb
mulb
testb
negb
popa
testb
jns
push
negl
testl
mov
icebp
jg
add
icebp
sub
xor
int3
repnz
repnz
cld
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
push
repnz
sub
repz
out
repz
cmpsl
repz
repz
repz
idiv
popf
cld
pop
cld
xor
std
cld
std
test
dec
std
pop
std
data16
push
jo
add
push
std
sbb
sub
cmp
cmp
fdivrp
jecxz
jmp
incb
xchg
lahf
cmpsl
test
mov
decb
push
push
pop
data16
jne
add
push
adc
es
and
ss
xor
sar
fdivr
loope
cmp
inc
decl
pop
inc
clc
enter
xchg
stos
clc
dec
clc
push
clc
pop
clc
fs
push
clc
in
in
stc
clc
stc
cmp
stc
cwtl
stc
mov
stc
inc
stc
push
stc
data16
js
or
adc
and
xor
icebp
cli
xchg
test
mov
mov
cli
out
sti
cld
sti
test
lcall
test
les
les
push
hlt
push
cmc
or
or
sbb
cmp
aad
shl
pop
not
neg
div
div
not
lock
mov
lock
lock
lock
cli
icebp
cmpsl
icebp
mov
dec
icebp
fs
add
sub
xor
repz
repz
repz
cld
test
cmp
push
cld
push
adc
and
das
cld
xor
std
sar
fdivr
out
std
idiv
sti
std
fwait
std
lods
std
pop
std
sti
decl
push
clc
clc
lcall
clc
mov
clc
jb
pop
clc
psubb
stc
loop
idiv
sti
stc
cmp
stc
xchg
stc
lcall
stc
dec
stc
push
stc
pop
stc
arpl
imul
stc
add
or
stc
mov
mov
fs
imul
pop
cli
sub
into
sti
mov
imul
sti
xor
ds
les
hlt
ret
hlt
sahf
hlt
mov
hlt
addr16
jae
sbb
sbb
aam
mov
cmc
jge
and
imulb
notb
idivb
testl
divl
ds
icebp
push
icebp
es
sub
sub
aaa
icebp
fwait
repnz
repnz
repnz
bnd
jns
xor
xchg
xchg
repz
repz
jno
adc
pop
repz
cld
sar
out
out
cld
repnz
stc
cld
cmp
cld
cmpsl
cld
stos
cld
mov
cld
push
cld
push
cld
popa
cld
or
adc
and
cld
cmp
in
in
std
std
std
test
mov
mov
inc
std
dec
std
outsl
std
jbe
paddw
std
and
sub
jle
push
sub
sub
hlt
stc
cli
stc
cmp
stc
cmpsl
stc
mov
mov
stc
popa
stc
jl
pop
stc
or
stc
sbb
ds
cli
iret
cli
aam
fdivr
in
cli
jmp
xchg
mov
xchg
cli
lcall
cli
inc
cli
inc
cli
fs
jne
jae
or
jmp
les
notb
test
ljmp
icebp
dec
icebp
push
icebp
push
ja
jl
jns
or
cmp
into
repnz
repnz
repnz
repnz
push
repnz
hlt
repz
in
cli
cmp
cli
scas
cli
addr16
jae
push
sti
psubq
sti
les
les
hlt
dec
hlt
pop
hlt
je
push
hlt
cmp
cmp
mov
popf
neg
lock
lock
lock
repnz
repnz
xchg
repnz
repnz
repnz
daa
bnd
repz
repz
inc
repz
xlat
cld
lahf
cld
add
and
lahf
std
mov
std
arpl
imul
std
or
and
dec
in
jmp
xchg
mov
clc
dec
clc
pop
clc
jle
sub
stc
dec
stc
or
loope
cli
pop
cli
jp
les
in
les
cmc
test
push
jae
shl
testb
imulb
cmp
aad
test
mov
inc
cld
les
mov
std
jg
jnp
pop
std
add
paddw
std
pop
std
adc
pop
std
sbb
daa
std
and
das
std
sub
aaa
std
xor
aas
std
cmp
inc
dec
dec
xlat
sar
out
jecxz
out
jmp
idiv
sti
decb
mov
mov
jp
xchg
decl
decl
stc
mov
mov
stc
add
cli
cld
sti
lahf
sti
sbb
les
hlt
sti
cmc
pop
cmc
je
xor
cmp
int3
negb
div
idiv
testl
adc
iret
lock
f2xm1
mov
repnz
xor
loope
cmp
dec
std
fs
jnp
aaa
std
idiv
mov
dec
jmp
jmp
clc
aad
in
jmp
cli
xchg
cli
sahf
cli
lcall
cli
stos
cli
mov
cli
push
sti
les
adc
enter
in
loop
call
hlt
stc
hlt
xor
hlt
xchg
hlt
lahf
hlt
movsl
hlt
scas
hlt
mov
hlt
lahf
cmc
movsl
cmc
mov
mov
cmc
dec
cmc
pop
cmc
fs
cmc
push
negl
lock
icebp
aad
pop
icebp
or
jns
shl
inc
repz
adc
std
mov
std
xor
decb
daa
sub
fdivrp
in
decl
jns
inc
clc
push
clc
pop
clc
or
xchg
nop
stc
adc
cmp
cli
lret
cli
sar
out
call
cli
inc
cli
dec
cli
dec
cli
push
cli
push
cli
pop
cli
pop
cli
cli
pop
cli
xor
aas
cli
ret
sti
lret
sti
cmp
sti
xchg
sti
cltd
sti
mov
sti
push
sti
add
add
les
lret
hlt
scas
hlt
jb
add
and
sub
mov
cmc
sub
pop
idivb
adc
enter
loop
clc
lock
lock
lock
lock
lock
push
lock
cmp
enter
xchg
icebp
dec
icebp
push
icebp
pop
icebp
mov
repnz
bnd
fdivp
sti
repz
repz
repz
cld
mov
cld
sbb
cmp
idiv
xchg
std
test
push
std
outsb
std
jne
pop
std
sbb
xor
sar
decb
data16
je
sbb
cmp
ljmp
clc
out
clc
mov
jo
xor
sar
stc
sahf
stc
mov
stc
adc
int3
cli
sar
cli
cli
in
sti
pop
sti
jge
or
sti
les
les
hlt
cli
hlt
mov
movsl
hlt
push
hlt
jnp
add
or
sbb
hlt
ss
vpsllq
dec
cmc
pop
cmc
popa
cmc
outsl
cmc
jne
push
cmc
and
cmp
shl
testb
mov
negb
jo
add
sub
neg
imul
imull
idivl
test
lock
lock
adc
xor
cmp
xlat
icebp
ljmp
icebp
dec
icebp
popa
icebp
push
icebp
shl
repnz
mov
cld
mov
mov
dec
cld
or
cmp
fwait
outsb
incb
es
mov
jns
sbb
call
jne
ret
cli
sahf
cli
and
sti
dec
sti
les
les
les
hlt
jmp
cmc
or
xor
ljmp
divb
mulb
test
out
div
stos
testl
notl
lock
lock
icebp
scas
icebp
push
icebp
fs
sbb
sub
repnz
repnz
repnz
into
repz
repz
repz
cld
mov
xchg
push
and
in
jmp
decl
mov
clc
das
clc
stc
aam
mov
cli
xor
sti
idiv
nop
sti
movsb
sti
mov
inc
sti
push
sti
data16
insb
sti
jbe
add
cs
cmp
les
les
vpgatherqq
loop
xchg
cmc
cltd
cmc
cmpsl
cmc
lods
cmc
stos
cmc
push
cmc
pop
cmc
sbb
neg
mul
imul
idiv
testb
add
adc
cs
shl
fcomi
lcall
idivl
lock
div
inc
lock
lock
ret
icebp
fcomip
xchg
icebp
xchg
icebp
popf
icebp
cltd
icebp
movsl
icebp
mov
icebp
sbb
loope
mov
mov
inc
repnz
sub
cmp
repz
repz
repz
popf
std
lods
std
mov
inc
std
jb
and
ss
cmp
int3
dec
loope
out
incb
cmpsl
test
mov
pop
sbb
xor
call
lcall
jmp
jmp
clc
stc
clc
cmp
clc
lods
clc
mov
mov
stc
lcall
stc
cmp
or
jmp
sti
psubq
sti
iret
cmc
dec
mulb
test
ljmp
lock
lock
out
repz
cld
movsl
cld
pop
std
jno
jp
push
std
adc
and
das
std
idiv
push
inc
pop
clc
xchg
mov
inc
cli
cmp
sti
popf
sti
lods
sti
pop
sti
insb
sti
jae
pop
sti
aam
les
cwtl
hlt
inc
hlt
and
hlt
divl
repz
repz
repz
repz
repz
sub
iret
cld
cmp
cld
push
cld
jle
cs
fdivrp
mov
dec
std
jle
incb
decb
pop
incb
es
out
xchg
decl
sbb
clc
scas
clc
push
clc
jle
cs
stc
idiv
push
stc
jbe
push
stc
sar
cli
pop
cli
adc
ret
sti
sahf
sti
push
sti
pop
sti
cs
in
les
fxtract
mov
dec
hlt
jle
mov
mov
notb
or
cmp
xor
imull
daa
not
lock
cs
cmpsl
icebp
sbb
fdiv
test
repnz
mov
repz
xchg
cld
mov
cld
ljmp
icebp
xchg
incb
data16
ds
aad
stos
incl
ljmp
cli
clc
push
clc
jle
cs
loope
xchg
stc
mov
add
mov
movsl
cli
lods
cli
mov
cli
imul
cli
or
sti
inc
sti
imul
ret
leave
hlt
div
xchg
hlt
mov
push
hlt
jle
ss
xor
cmc
jbe
push
cmc
ss
idiv
mulb
negb
test
div
sahf
testl
fdivp
mov
push
lock
ss
icebp
sahf
icebp
push
icebp
jle
es
into
repnz
repnz
repnz
ss
mov
mov
repz
cld
sahf
cld
dec
cld
or
ds
idiv
mov
std
xor
loope
xchg
mov
lcall
call
jmp
clc
mov
mov
clc
repz
sahf
stc
pop
stc
push
stc
xlat
cli
idiv
mov
cli
ss
loope
mov
mov
addr16
push
sti
ds
les
out
xchg
hlt
mov
hlt
into
cmc
div
mov
cmc
shl
imulb
idivb
imul
mull
divl
not
lock
xchg
lock
pop
lock
lock
icebp
out
icebp
dec
icebp
adc
repnz
repnz
repnz
repz
repz
repz
repz
repz
mov
jo
daa
cld
loope
mov
mov
std
idiv
xchg
mov
push
jbe
and
sar
cmp
push
dec
clc
clc
mov
clc
out
cmpsl
stc
pop
stc
push
stc
ljmp
sti
mov
addr16
push
sti
les
hlt
out
hlt
mov
hlt
add
iret
testb
mov
mov
mul
lock
lock
scas
icebp
pop
icebp
push
icebp
ds
out
repnz
repnz
bnd
xor
jecxz
xchg
repz
repz
cld
cld
scas
cld
data16
push
cld
cmp
jmp
std
jle
incb
pop
dec
pushl
ds
clc
cwtl
clc
jno
push
clc
ss
fyl2xp1
mov
dec
stc
aaa
stc
fdivrp
pushf
cli
pop
cli
push
cli
ds
cld
sti
test
jo
and
les
into
hlt
xchg
mov
jg
cmp
div
cltd
cmc
push
cmc
push
cmc
and
cmc
call
idivb
imul
negl
lock
mov
lock
cmpsb
icebp
pop
icebp
push
icebp
cmp
jmp
dec
repnz
lret
repz
repz
cld
nop
cld
push
cld
add
cs
stc
std
mov
jno
in
mov
mov
out
clc
scas
clc
pop
clc
and
stc
call
stc
push
stc
cs
out
xchg
cli
mov
cli
mov
sti
les
icebp
hlt
cwtl
hlt
fs
cs
xor
cmc
and
std
imulb
neg
testl
lock
lock
lock
cmpsl
icebp
dec
icebp
add
repnz
bnd
cs
mov
mov
cld
mov
mov
std
lock
sahf
std
jae
inc
incb
aas
stc
pushl
jecxz
sahf
clc
push
clc
ds
stc
inc
stc
cli
out
cli
push
cli
adc
sti
sti
sub
les
mov
hlt
mov
inc
hlt
push
hlt
hlt
jb
add
push
hlt
sbb
xor
ret
cmc
jecxz
jmp
lock
cmc
cli
cmc
mov
xchg
cmc
mov
cmc
mov
cmc
push
cmc
arpl
imul
cmc
or
and
sub
ret
mul
imul
testb
mov
inc
notb
divb
push
testb
and
xor
ret
neg
mul
imul
imul
idiv
testl
stos
idivl
negl
jae
jnp
adc
sbb
xor
lock
repz
mov
mov
lock
lock
lock
lock
lock
js
add
adc
sbb
and
cs
cmp
icebp
shl
fcomi
repz
sti
icebp
xchg
icebp
fwait
icebp
mov
inc
icebp
push
icebp
jb
add
push
icebp
sbb
xor
ret
repnz
jmp
lock
repnz
repnz
xchg
repnz
repnz
repnz
repnz
imul
repnz
and
sub
ret
repz
repz
mov
mov
repz
repz
repz
rep
repz
js
add
adc
sbb
and
cs
cmp
cld
sar
repz
sti
cld
xchg
cld
fwait
cld
mov
inc
cld
push
cld
arpl
jle
jp
adc
and
xor
ret
std
lret
std
sar
fdivrp
call
std
mov
nop
std
sahf
std
lcall
std
dec
std
arpl
imul
std
or
and
xor
ret
out
ljmp
mov
mov
decb
pop
fs
jae
jnp
add
push
decb
sbb
and
xor
cmp
sar
repz
sti
call
incl
pop
lcall
jb
add
adc
and
sub
xor
ds
cmp
enter
jecxz
jmp
lock
clc
cli
clc
mov
xchg
clc
mov
clc
dec
clc
arpl
imul
clc
adc
and
xor
into
stc
lret
stc
repnz
cmp
stc
fwait
stc
mov
stc
mov
stc
pop
stc
pusha
stc
outsb
stc
push
js
add
adc
sbb
xor
cmp
sar
cmc
cli
xchg
mov
xchg
cli
mov
mov
mov
cli
gs
cli
push
cli
or
sbb
and
xor
sti
loop
repnz
test
cmp
sti
cmpsb
sti
mov
sti
inc
sti
dec
sti
push
sti
pop
sti
and
sti
les
dec
aad
shl
in
xchg
hlt
xchg
hlt
movsl
hlt
mov
mov
inc
hlt
push
hlt
push
hlt
gs
jne
jae
add
hlt
and
hlt
vmovq
fdivp
out
cmc
lock
std
cmc
xchg
mov
lahf
cmc
mov
cmc
inc
cmc
gs
ja
push
cmc
or
adc
and
test
fcomip
loopne
in
div
idiv
testb
movsl
divb
mulb
divb
jb
push
testb
pop
mulb
imulb
idivb
les
in
imul
div
div
idiv
idiv
testb
notb
cwtl
mulb
test
mov
mov
mov
divb
sub
fdiv
xchg
testl
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
lock
lock
shl
fdiv
fdiv
jo
mov
xchg
icebp
nop
icebp
pushf
icebp
cwtl
icebp
movsb
icebp
mov
icebp
mov
mov
mov
icebp
inc
icebp
dec
icebp
dec
icebp
push
icebp
push
icebp
pop
icebp
pop
icebp
fs
pusha
icebp
insb
icebp
push
icebp
jl
js
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
repnz
repnz
shl
fdiv
fdiv
in
loopne
in
bnd
repnz
repnz
repnz
xor
repnz
xchg
repnz
repnz
repnz
repnz
repnz
repnz
mov
mov
repnz
repnz
repnz
repnz
repnz
bnd
add
add
or
or
adc
adc
sbb
and
sub
sub
xor
xor
cmp
cmp
repz
repz
clc
repz
xor
repz
xchg
pause
repz
repz
rep
repz
rep
repz
repz
js
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
cld
sar
cld
enter
sar
fdivr
fdivr
in
loopne
in
cld
call
cld
cld
cld
clc
cld
test
cmp
cld
mov
xchg
cld
nop
cld
pushf
cld
cwtl
cld
movsb
cld
mov
cld
mov
mov
mov
cld
inc
cld
dec
cld
dec
cld
push
cld
push
cld
pop
cld
pop
cld
fs
pusha
cld
insb
cld
push
cld
jl
js
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
std
sar
std
enter
sar
fdivr
fdivr
in
loopne
in
std
call
std
cld
std
clc
std
test
cmp
std
cwtl
std
movsb
std
mov
std
mov
mov
mov
std
inc
std
dec
std
dec
std
push
std
push
std
pop
std
pop
std
fs
pusha
std
insb
std
push
std
jl
js
add
add
or
or
adc
adc
sbb
sbb
and
sub
sub
xor
xor
cmp
cmp
inc
dec
dec
aam
sar
fdivr
fdivr
in
loopne
in
call
cld
clc
incb
mov
xchg
nop
pushf
cwtl
movsb
mov
mov
mov
mov
incb
dec
decb
cmp
cmp
inc
call
stc
fdivr
fdivr
in
fdivr
fdivr
in
les
or
les
hlt
adc
adc
sbb
in
bnd
repnz
repnz
repnz
xor
repnz
xchg
repnz
repnz
repnz
repnz
repnz
bnd
jo
jl
js
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
repz
repz
shl
fdiv
fdiv
in
loopne
in
repz
repz
repz
repz
xor
repz
xchg
pause
repz
repz
rep
repz
js
add
add
or
in
loopne
in
clc
call
clc
cld
clc
clc
clc
test
cmp
clc
mov
xchg
clc
nop
clc
pushf
clc
cwtl
clc
movsb
clc
mov
clc
mov
mov
les
les
hlt
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
int3
cmc
enter
shl
fdiv
fdiv
in
lock
cld
cmc
clc
cmc
nop
cmc
pushf
cmc
cwtl
cmc
movsb
cmc
mov
cmc
mov
mov
mov
cmc
xor
xor
cmp
cmp
test
int3
test
aam
shl
fdiv
fdiv
in
loopne
in
imul
idivb
add
add
or
in
call
les
les
push
cld
pop
cld
fs
insb
cld
je
jl
add
or
adc
sbb
and
sub
xor
cmp
std
int3
std
aam
fdivr
in
in
std
hlt
std
cld
std
test
mov
xchg
std
pushf
std
movsb
std
lods
std
mov
mov
std
push
std
pop
std
fs
insb
std
je
jl
add
or
adc
sbb
and
sub
xor
cmp
dec
aam
fdivr
in
in
hlt
cld
incb
pushf
movsb
lods
mov
mov
push
pop
fs
insb
je
jl
add
or
adc
sbb
and
sub
xor
cmp
dec
call
fdivr
in
in
push
inc
and
les
int3
lock
shl
fdiv
fdiv
in
loopne
in
lock
lock
lock
lock
xor
lock
xchg
lock
lock
lock
lock
lock
lock
mov
mov
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
js
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
icebp
shl
icebp
enter
shl
fdiv
fdiv
in
loopne
in
icebp
call
icebp
cld
icebp
clc
icebp
test
xor
icebp
mov
xchg
icebp
nop
icebp
pushf
icebp
cwtl
icebp
movsb
icebp
mov
icebp
mov
mov
mov
icebp
inc
icebp
dec
icebp
dec
icebp
push
icebp
push
icebp
pop
icebp
pop
icebp
fs
pusha
icebp
insb
icebp
push
icebp
jl
js
add
test
cmp
clc
mov
xchg
clc
nop
clc
pushf
clc
cwtl
clc
movsb
clc
mov
clc
mov
mov
mov
clc
inc
clc
dec
clc
dec
clc
push
clc
push
clc
pop
clc
pop
clc
fs
pusha
clc
insb
clc
push
clc
jl
js
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
stc
sar
stc
enter
sar
fdivr
fdivr
in
loopne
in
stc
call
stc
cld
stc
clc
stc
test
cmp
stc
mov
xchg
stc
nop
stc
pushf
stc
cwtl
stc
movsb
stc
mov
stc
mov
mov
mov
stc
inc
stc
dec
stc
dec
stc
push
stc
push
stc
pop
stc
pop
stc
fs
pusha
stc
insb
stc
push
stc
jl
js
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
les
les
hlt
shl
hlt
enter
shl
fdiv
fdiv
in
in
hlt
call
hlt
cld
hlt
clc
hlt
test
xor
hlt
mov
xchg
hlt
nop
hlt
pushf
hlt
cwtl
hlt
movsb
hlt
mov
hlt
mov
mov
mov
hlt
inc
hlt
dec
hlt
dec
hlt
push
hlt
push
hlt
pop
hlt
pop
hlt
fs
pusha
hlt
insb
hlt
push
hlt
jl
js
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
xor
xor
cmp
cmp
cmc
shl
cmc
enter
shl
fdiv
fdiv
in
loopne
in
cmc
call
cmc
cld
cmc
clc
cmc
test
xor
cmc
mov
xchg
cmc
nop
cmc
pushf
cmc
cwtl
cmc
movsb
cmc
mov
cmc
mov
mov
mov
cmc
inc
cmc
dec
cmc
dec
cmc
push
cmc
push
cmc
pop
cmc
pop
cmc
fs
pusha
cmc
insb
cmc
push
cmc
jl
js
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
test
int3
test
aam
shl
fdiv
fdiv
in
loopne
in
imul
div
div
idiv
idiv
testb
notb
cwtl
mulb
test
mov
mov
mov
testb
testb
notb
pop
negb
mulb
insb
imulb
je
jo
jl
js
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
test
not
not
neg
idiv
testl
nop
negl
mov
divl
mov
testl
negl
mull
imull
divl
idivl
testl
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
lock
lock
shl
fdiv
hlt
lock
lock
lock
xor
lock
xchg
lock
lock
lock
lock
lock
lock
mov
mov
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
js
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
icebp
shl
icebp
enter
shl
fdiv
fdiv
in
loopne
in
icebp
call
icebp
cld
icebp
clc
icebp
test
xor
icebp
mov
xchg
icebp
nop
icebp
pushf
icebp
cwtl
icebp
movsb
icebp
mov
icebp
mov
mov
mov
icebp
inc
icebp
dec
icebp
dec
icebp
push
icebp
push
icebp
pop
icebp
pop
icebp
fs
pusha
icebp
insb
icebp
push
icebp
jl
js
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
enter
shl
fdiv
fdiv
in
loopne
in
bnd
repnz
repz
repz
repz
repz
repz
repz
repz
repz
rep
repz
repz
js
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
cld
sar
cld
enter
sar
fdivr
fdivr
in
loopne
in
cld
call
cld
cld
cld
clc
cld
test
cmp
cld
mov
xchg
cld
nop
cld
pushf
cld
cwtl
cld
movsb
cld
mov
cld
mov
mov
mov
std
test
mov
mov
mov
std
inc
std
dec
std
dec
std
push
std
push
std
pop
std
pop
std
mov
mov
mov
clc
inc
clc
dec
clc
dec
clc
push
clc
push
clc
pop
clc
pop
clc
fs
pusha
clc
insb
clc
push
clc
jl
js
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
stc
sar
stc
enter
sar
fdivr
fdivr
in
loopne
in
stc
call
stc
cld
stc
clc
stc
test
cmp
stc
mov
xchg
stc
nop
stc
pushf
stc
cwtl
stc
movsb
stc
mov
stc
mov
push
stc
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
cli
sar
cli
enter
sar
fdivr
fdivr
in
loopne
in
cli
call
cli
cld
cli
clc
cli
test
cmp
cli
mov
xchg
cli
insb
cli
push
cli
jl
js
add
add
or
or
adc
adc
sbb
sbb
and
mov
int3
icebp
enter
shl
fdiv
fdiv
in
loopne
in
icebp
call
icebp
cld
icebp
clc
icebp
test
xor
icebp
mov
xchg
icebp
nop
icebp
pushf
icebp
cwtl
icebp
movsb
icebp
mov
icebp
mov
mov
mov
icebp
inc
icebp
dec
icebp
dec
icebp
push
icebp
push
icebp
pop
icebp
pop
icebp
fs
pusha
icebp
insb
icebp
push
icebp
jl
js
add
add
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
repnz
repnz
shl
fdiv
fdiv
in
loopne
in
bnd
repnz
repnz
repnz
xor
repnz
xchg
repnz
repnz
repnz
repnz
repnz
repnz
mov
mov
repnz
repnz
repnz
repnz
repnz
adc
adc
sbb
and
and
cmp
cmp
repz
repz
shl
fdiv
fdiv
in
loopne
in
repz
repz
repz
repz
xor
repz
xchg
pause
repz
repz
rep
repz
repz
mov
mov
repz
repz
repz
repz
repz
repz
repz
repz
rep
repz
repz
in
cld
call
cld
std
int3
std
enter
sar
call
std
cmp
std
xchg
std
lods
std
mov
std
push
std
push
std
pop
std
fs
jl
or
or
adc
sub
cmp
aam
sar
fdivr
in
cld
decb
movsb
mov
push
pop
insb
push
adc
and
and
xor
cmp
cmp
inc
dec
jmp
push
cld
decl
movsb
jmp
pushl
push
jmp
insb
jl
js
or
adc
adc
sbb
sbb
and
sub
clc
aam
sar
loopne
in
clc
cld
clc
clc
clc
test
cmp
clc
mov
xchg
clc
nop
clc
cwtl
clc
mov
inc
clc
dec
clc
pop
clc
pop
clc
push
clc
add
adc
sbb
sbb
and
cmp
enter
in
loopne
in
stc
call
stc
cwtl
stc
movsb
stc
mov
mov
mov
stc
dec
stc
fs
je
jo
add
or
or
adc
adc
sbb
and
cmp
cmp
sar
loopne
in
cli
call
cli
xchg
cli
movsb
cli
mov
cli
dec
cli
dec
cli
push
cli
push
cli
pop
cli
pop
cli
fs
pusha
cli
push
cli
and
xor
xor
sar
sti
fdivr
fdivr
call
sti
cmp
sti
xchg
sti
lods
sti
mov
sti
push
sti
push
sti
pop
sti
fs
jl
or
or
sbb
and
and
sub
xor
aam
les
hlt
fdiv
fdiv
call
hlt
xor
hlt
pushf
hlt
cwtl
hlt
mov
hlt
push
hlt
fs
pusha
hlt
insb
hlt
push
hlt
sbb
and
xor
xor
cmp
shl
loopne
in
cmc
cld
cmc
clc
cmc
test
mov
movsb
cmc
mov
mov
inc
cmc
dec
cmc
dec
cmc
push
cmc
push
cmc
adc
adc
sbb
and
cmp
int3
test
fdiv
in
loopne
call
negb
mov
mov
mulb
jo
jl
js
add
sbb
sub
xor
test
imul
imul
div
div
idiv
idiv
testl
mov
notl
mull
insb
imull
je
jo
jl
add
sbb
sub
sub
cmp
lock
shl
loopne
in
lock
lock
lock
lock
xor
lock
lock
lock
lock
lock
lock
lock
lock
adc
and
sub
cmp
cmp
icebp
int3
icebp
in
hlt
icebp
lock
xor
icebp
pushf
icebp
cwtl
icebp
test
mov
mov
mov
icebp
inc
icebp
dec
icebp
push
icebp
insb
icebp
push
icebp
sbb
sub
sub
cmp
repnz
repnz
fdiv
hlt
repnz
cwtl
repnz
repnz
mov
inc
repnz
repnz
repnz
repnz
repnz
repnz
bnd
adc
and
sub
cmp
cmp
enter
shl
fdiv
fdiv
in
in
repz
xchg
pause
repz
repz
repz
repz
repz
repz
repz
repz
xor
xor
sar
cld
fdivr
fdivr
in
loopne
in
cld
hlt
cld
mov
mov
mov
cld
dec
cld
dec
cld
pop
cld
fs
je
jo
jl
js
add
add
or
or
adc
sub
xor
int3
std
fdivr
fdivr
call
std
cmp
std
mov
xchg
std
nop
std
cwtl
std
mov
mov
std
pusha
std
jo
jl
or
or
sbb
and
and
sub
sub
xor
xor
cmp
cmp
sar
call
incb
cwtl
movsb
mov
mov
dec
pop
fs
je
jo
add
or
sbb
sbb
and
and
sub
sub
xor
cmp
aam
sar
call
call
lods
ljmp
mov
pushl
incl
call
lcall
sbb
and
cmp
enter
in
loopne
in
clc
call
clc
cwtl
clc
movsb
clc
mov
mov
mov
clc
dec
clc
fs
je
jo
jl
js
add
sbb
sub
xor
stc
sar
stc
loopne
lock
cld
stc
mov
mov
xchg
stc
pushf
stc
mov
inc
stc
inc
stc
push
stc
pop
stc
insb
stc
push
stc
js
adc
and
sub
cmp
cmp
cli
sar
cli
loopne
lock
cld
cli
mov
mov
xchg
cli
nop
cli
cwtl
cli
mov
inc
cli
dec
cli
pop
cli
pop
cli
fs
pusha
cli
insb
cli
je
or
sbb
sbb
and
and
sub
sar
sti
fdivr
fdivr
loopne
clc
sti
test
pushf
sti
lods
sti
test
mov
sti
dec
sti
pusha
sti
jo
jl
add
sbb
sbb
xor
cmp
in
les
hlt
in
loopne
in
hlt
clc
hlt
test
xchg
hlt
nop
hlt
cwtl
hlt
mov
inc
hlt
dec
hlt
pop
hlt
pop
hlt
fs
pusha
hlt
push
hlt
sbb
sub
sub
xor
xor
cmp
shl
loopne
in
cmc
cld
cmc
clc
cmc
test
mov
movsb
cmc
mov
mov
inc
cmc
dec
cmc
dec
cmc
push
cmc
push
cmc
pop
cmc
jo
add
or
sbb
sbb
and
and
sub
xor
int3
neg
neg
imul
div
div
idiv
idiv
testb
mov
inc
testb
mulb
jo
jl
or
or
adc
sub
cmp
not
not
neg
div
testl
idivl
mull
imull
testl
sub
xor
xor
cmp
lock
in
lock
lock
lock
lock
lock
lock
lock
lock
lock
add
or
sbb
sbb
and
sub
icebp
aam
shl
fdiv
lock
xor
icebp
pushf
icebp
cwtl
icebp
movsb
icebp
lods
icebp
inc
icebp
push
icebp
push
icebp
pusha
icebp
insb
icebp
push
icebp
sbb
and
xor
xor
cmp
repnz
in
bnd
repnz
repnz
repnz
repnz
repnz
repnz
bnd
add
add
adc
sbb
sbb
and
cmp
enter
in
loopne
in
repz
repz
pushf
repz
repz
mov
mov
mov
rep
repz
js
or
adc
and
and
sub
sub
xor
xor
cmp
cld
fdivr
in
cld
call
cld
xchg
cld
nop
cld
pushf
cld
cwtl
cld
movsb
cld
lods
cld
inc
cld
push
cld
push
cld
pusha
cld
insb
cld
jl
js
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
xor
int3
std
fdivr
fdivr
in
loopne
in
std
call
std
cld
std
clc
std
test
mov
movsb
std
mov
mov
mov
std
inc
std
dec
std
dec
std
push
std
push
std
pop
std
jo
add
or
or
adc
adc
sbb
sbb
and
and
sub
sar
fdivr
fdivr
in
loopne
in
call
xchg
movsb
mov
mov
mov
mov
insb
push
jl
js
add
sbb
sub
xor
xor
cmp
fdivr
fdivr
lock
ljmp
push
lcall
ljmp
je
jl
adc
and
and
sub
sar
clc
in
hlt
clc
lock
cmp
clc
mov
nop
clc
test
mov
clc
push
clc
pop
clc
fs
jl
or
or
sbb
and
sub
stc
aam
sar
loopne
in
stc
call
stc
cld
stc
clc
stc
cmp
stc
test
mov
mov
mov
stc
dec
stc
fs
je
jo
js
adc
sbb
xor
cli
sar
cli
enter
call
cli
xchg
cli
nop
cli
mov
cli
mov
mov
mov
cli
inc
cli
dec
cli
dec
cli
push
cli
push
cli
pop
cli
pop
cli
fs
pusha
cli
push
cli
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
sti
sar
sti
enter
fdivr
hlt
sti
test
cmp
sti
mov
xchg
sti
nop
sti
pushf
sti
cwtl
sti
movsb
sti
mov
sti
mov
mov
mov
sti
insb
sti
push
sti
jl
js
add
add
or
or
adc
adc
sbb
sbb
and
cmp
hlt
ret
les
hlt
aam
shl
fdiv
fdiv
in
loopne
in
hlt
call
hlt
cld
hlt
clc
hlt
xor
hlt
test
mov
mov
mov
hlt
inc
hlt
dec
hlt
dec
hlt
push
hlt
push
hlt
pop
hlt
fs
jl
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
cmp
aam
in
loopne
in
cmc
call
cmc
cld
cmc
clc
cmc
test
xor
cmc
mov
cmc
inc
cmc
pop
cmc
push
cmc
jl
add
sbb
sub
sub
xor
enter
in
idiv
idiv
testb
mov
notb
negb
mulb
js
add
sbb
sbb
xor
shl
test
div
div
testl
notl
mull
insb
idivl
testl
or
adc
adc
sbb
xor
shl
lock
shl
fdiv
fdiv
loopne
clc
lock
xchg
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
adc
adc
sbb
xor
cmp
aam
in
loopne
in
icebp
hlt
icebp
mov
pushf
icebp
cwtl
icebp
mov
icebp
push
icebp
fs
pusha
icebp
insb
icebp
push
icebp
sbb
and
xor
xor
cmp
cmp
shl
bnd
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
bnd
or
adc
adc
sbb
and
cmp
int3
repz
in
loopne
in
repz
repz
rep
repz
repz
repz
repz
repz
repz
js
add
sbb
sub
xor
xor
cmp
cld
fdivr
in
cld
call
cld
cmp
cld
mov
nop
cld
test
mov
cld
dec
cld
push
cld
insb
cld
jl
js
or
adc
adc
sbb
xor
sar
std
fdivr
fdivr
in
in
std
test
xchg
std
nop
std
mov
std
mov
dec
std
pop
std
fs
je
jo
jl
add
sbb
sub
sub
cmp
aam
sar
loopne
in
call
cld
clc
incb
mov
mov
inc
decb
pop
fs
pusha
insb
push
sbb
and
xor
xor
cmp
cmp
sar
call
incl
ljmp
dec
call
lcall
jo
add
or
sbb
sbb
and
and
sub
sar
clc
fdivr
in
clc
call
clc
xchg
clc
movsb
clc
mov
clc
mov
clc
push
clc
add
or
adc
sub
cmp
cmp
enter
sar
fdivr
lock
cmp
stc
pushf
stc
cwtl
stc
movsb
stc
lods
stc
inc
stc
push
stc
push
stc
pusha
stc
insb
stc
push
stc
sbb
and
xor
xor
cmp
cli
fdivr
in
cli
call
cli
cmp
cli
mov
cli
dec
cli
dec
cli
pop
cli
fs
pusha
cli
insb
cli
push
cli
jl
js
add
add
or
or
adc
sub
cmp
sti
sar
sti
enter
sar
fdivr
fdivr
in
loopne
call
sti
pushf
sti
cwtl
sti
movsb
sti
mov
sti
mov
mov
mov
sti
insb
sti
push
sti
adc
sub
cmp
cmp
les
enter
shl
fdiv
in
cld
hlt
mov
mov
cwtl
hlt
movsb
hlt
mov
hlt
push
hlt
pop
hlt
insb
hlt
push
hlt
adc
and
and
xor
cmp
cmp
shl
cmc
call
cmc
xor
cmc
xchg
cmc
lods
cmc
mov
cmc
push
cmc
push
cmc
pop
cmc
jo
add
or
sbb
sbb
sub
xor
xor
cmp
cmp
test
int3
test
aam
shl
fdiv
fdiv
in
loopne
in
imul
div
testb
mov
divb
mov
testb
push
notb
pop
mulb
testb
notb
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
test
div
testl
idivl
notl
pop
mull
testl
and
and
sub
shl
lock
in
lock
lock
lock
lock
lock
lock
lock
lock
jl
or
or
adc
adc
sbb
and
cmp
int3
icebp
enter
in
loopne
in
icebp
call
icebp
cwtl
icebp
movsb
icebp
mov
mov
mov
icebp
dec
icebp
fs
je
jo
add
or
or
adc
sbb
xor
xor
enter
in
loopne
in
bnd
repnz
repnz
repnz
repnz
repnz
jo
js
adc
and
sub
cmp
cmp
repz
repz
hlt
repz
repz
xchg
repz
repz
inc
repz
repz
repz
repz
or
or
sbb
and
xor
xor
cmp
cmp
cld
sar
cld
enter
call
cld
xchg
cld
nop
cld
pushf
cld
cwtl
cld
movsb
cld
lods
cld
inc
cld
push
cld
push
cld
pusha
cld
insb
cld
push
cld
sbb
and
xor
xor
sar
std
enter
sar
fdivr
fdivr
in
loopne
in
std
call
std
cwtl
std
movsb
std
lods
std
inc
std
inc
std
pop
std
push
std
adc
adc
sub
cmp
inc
dec
dec
aam
sar
fdivr
in
cld
decb
movsb
mov
mov
mov
mov
decb
je
jo
jl
js
add
add
or
or
adc
sbb
xor
inc
dec
dec
call
call
fdivr
fdivr
loopne
clc
decl
lcall
mov
call
pop
lcall
jmp
insb
pushl
lcall
sbb
and
and
sub
xor
int3
clc
fdivr
fdivr
in
loopne
call
clc
pushf
clc
lods
clc
test
mov
clc
dec
clc
dec
clc
push
clc
push
clc
adc
adc
sbb
sbb
and
cmp
enter
in
loopne
in
stc
call
stc
xchg
stc
movsb
stc
mov
stc
dec
stc
dec
stc
push
stc
push
stc
pop
stc
pop
stc
fs
insb
stc
add
adc
adc
sbb
sbb
and
and
sub
sar
cli
fdivr
in
cli
call
cli
cmp
cli
mov
xchg
cli
nop
cli
cwtl
cli
mov
inc
cli
dec
cli
dec
cli
push
cli
push
cli
pop
cli
fs
jl
or
or
sbb
and
and
sub
sar
sti
fdivr
in
sti
call
sti
cmp
sti
mov
xchg
sti
nop
sti
cwtl
sti
mov
inc
sti
dec
sti
dec
sti
push
sti
push
sti
pop
sti
fs
jl
or
or
sbb
and
and
sub
sub
xor
les
enter
pop
repz
add
and
sub
cmp
fdivr
in
call
cld
cwtl
cld
lods
cld
dec
cld
dec
cld
push
cld
pop
cld
push
cld
or
xor
sar
std
in
std
hlt
std
mov
nop
std
mov
mov
std
jo
or
sbb
cmp
sar
hlt
xchg
cwtl
mov
jo
adc
sbb
sub
int3
call
fdivr
loopne
cmp
pushl
or
adc
sbb
cmp
in
call
clc
nop
clc
movsb
clc
inc
clc
dec
clc
push
clc
jo
add
and
sub
xor
cmp
sar
stc
call
stc
mov
lods
stc
mov
pop
stc
je
sbb
and
cmp
int3
cli
in
cli
lock
cwtl
cli
test
pop
cli
fs
add
sbb
sub
cmp
loopne
call
sti
test
mov
mov
sti
jl
or
xor
cmp
les
in
lock
clc
hlt
xor
hlt
xchg
hlt
nop
hlt
pushf
hlt
cwtl
hlt
movsb
hlt
lods
hlt
mov
hlt
fs
push
hlt
cmp
shl
cmc
mov
xchg
cmc
pushf
cmc
movsb
cmc
lods
cmc
mov
mov
cmc
je
adc
xor
cmp
shl
not
neg
mul
div
testb
notb
insb
idivb
notb
divb
test
aam
call
negl
pusha
imull
jo
add
and
sub
xor
xor
cmp
cmp
lock
lock
loopne
call
lock
lock
lock
lock
jl
add
or
adc
sbb
and
sub
enter
clc
icebp
cwtl
icebp
mov
icebp
mov
icebp
je
jl
add
or
adc
sbb
and
sub
xor
cmp
repnz
repnz
fdiv
clc
repnz
lods
repnz
mov
bnd
adc
sbb
and
shl
repz
repz
repz
repz
repz
repz
repz
repz
jl
add
or
adc
sbb
and
sub
xor
cmp
fdivr
in
cld
mov
xchg
cld
pushf
cld
mov
cld
je
jl
add
or
adc
sbb
and
sub
xor
cmp
sar
std
call
std
movsb
std
test
dec
std
pop
std
js
sbb
and
sub
xor
cmp
sar
sar
fdivr
loopne
hlt
pushf
mov
je
adc
and
sub
int3
call
lcall
mov
push
lcall
insb
decl
adc
xor
cmp
sar
clc
fdivr
cld
clc
test
mov
test
mov
inc
clc
fs
push
clc
cmp
stc
int3
stc
aam
fdivr
in
in
stc
hlt
stc
cld
stc
test
mov
xchg
stc
pushf
stc
movsb
stc
mov
push
stc
fs
insb
stc
or
sbb
and
sub
aam
loopne
clc
cli
nop
cli
mov
cli
pop
cli
jo
add
and
sub
aam
hlt
sti
cld
sti
test
mov
xchg
sti
pushf
sti
movsb
sti
lods
sti
mov
mov
sti
add
or
and
sub
les
shl
hlt
shl
fdiv
in
hlt
mov
test
mov
mov
hlt
push
hlt
fs
add
or
sub
xor
cmc
in
in
cmc
hlt
cmc
lock
cld
cmc
clc
cmc
test
xor
cmc
xchg
cmc
mov
cmc
dec
cmc
pop
cmc
pusha
cmc
jl
add
adc
sbb
sub
aam
lock
divb
testb
notb
sbb
and
sub
xor
cmp
test
testl
pop
mull
push
test
lock
xchg
lock
dec
lock
lock
adc
xor
aam
fdiv
cld
icebp
xor
icebp
mov
mov
icebp
pop
icebp
insb
icebp
or
sbb
and
aam
fdiv
fdiv
lock
repnz
repnz
repnz
repnz
repnz
mov
mov
repnz
xor
cmp
fdiv
loopne
test
movsb
repz
repz
and
cmp
cld
fdivr
in
clc
cld
test
movsb
cld
inc
cld
fs
add
and
std
fdivr
in
test
cwtl
std
movsb
std
lods
std
mov
std
fs
jo
js
adc
sbb
sub
xor
cmp
cmp
sar
sar
in
hlt
incb
lods
test
mov
mov
fs
jo
js
adc
sbb
sub
xor
cmp
cmp
inc
dec
call
fdivr
in
lock
clc
call
mov
mov
incl
dec
decl
push
lcall
ljmp
incl
lcall
and
xor
cmp
aam
fdivr
call
clc
xchg
clc
nop
clc
pushf
clc
cwtl
clc
movsb
clc
mov
clc
mov
clc
pop
clc
je
jl
or
adc
sbb
sbb
and
and
sub
xor
cmp
stc
sar
fdivr
hlt
stc
cld
stc
mov
nop
stc
pushf
stc
cwtl
stc
movsb
stc
mov
stc
mov
mov
stc
fs
jo
js
adc
sbb
sub
xor
int3
cli
aam
sar
fdivr
fdivr
in
loopne
in
cli
hlt
cli
cld
cli
test
cmp
cli
nop
cli
cwtl
cli
mov
mov
cli
insb
cli
je
jo
jl
js
add
add
or
or
adc
sbb
and
cmp
sti
sar
fdivr
hlt
sti
cld
sti
clc
sti
test
cmp
sti
mov
xchg
sti
nop
sti
cwtl
sti
mov
sti
mov
sti
pop
sti
pusha
sti
jl
add
add
or
adc
sbb
and
xor
cmp
les
loopne
hlt
shl
hlt
shl
fdiv
hlt
hlt
cld
hlt
mov
nop
hlt
lods
hlt
mov
mov
mov
hlt
inc
hlt
dec
hlt
push
hlt
pop
hlt
je
jl
or
adc
sub
xor
xor
cmp
cmp
cmc
shl
cmc
aam
fdiv
in
lock
clc
cmc
xchg
cmc
pushf
cmc
cwtl
cmc
movsb
cmc
lods
cmc
mov
mov
cmc
pop
cmc
pop
cmc
fs
insb
cmc
je
jl
or
adc
sbb
sbb
and
sub
xor
cmp
enter
fdiv
fdiv
in
in
div
idiv
testb
cwtl
mulb
mov
negb
mulb
divb
idivb
add
or
adc
sbb
sub
xor
cmp
cmp
shl
not
imul
div
div
idiv
idiv
testl
divl
testl
pop
mull
testl
imull
xor
cmp
call
lock
mov
test
mov
lock
sbb
int3
icebp
fdiv
in
icebp
hlt
icebp
movsb
icebp
mov
inc
icebp
dec
icebp
jl
or
sbb
and
cmp
shl
bnd
repnz
repnz
repnz
mov
repnz
repnz
adc
int3
repz
in
repz
rep
repz
inc
repz
repz
or
sbb
and
aam
loopne
hlt
cld
cld
cld
xchg
cld
cwtl
cld
push
cld
insb
cld
jo
js
sub
std
enter
call
std
mov
std
sbb
sub
cmp
aam
fdivr
loopne
clc
decb
push
pop
insb
decb
adc
xor
jmp
call
mov
call
sbb
and
cmp
sar
clc
fdivr
cld
clc
cmp
clc
test
mov
clc
sbb
xor
cmp
sar
stc
in
stc
mov
nop
stc
mov
inc
stc
fs
push
stc
aam
loopne
hlt
cli
cld
cli
xchg
cli
pushf
cli
mov
cli
je
js
sbb
sub
int3
sti
sar
lock
test
movsb
sti
test
dec
sti
pop
sti
jl
add
or
sub
cmp
les
push
hlt
in
call
hlt
movsb
hlt
inc
hlt
dec
hlt
push
hlt
and
sub
xor
shl
fdiv
in
cmc
mov
xchg
cmc
cwtl
cmc
mov
cmc
je
jl
add
or
adc
xor
mul
imul
testb
je
add
sbb
and
sub
shl
div
idiv
testl
pop
divl
testl
test
lock
lock
lods
lock
mov
lock
adc
sbb
cmp
int3
icebp
in
icebp
hlt
icebp
cld
icebp
xor
icebp
push
icebp
pop
icebp
pusha
icebp
js
or
sub
xor
shl
in
test
mov
nop
repnz
mov
bnd
sub
repz
lock
movsb
repz
mov
dec
repz
repz
add
enter
hlt
cld
cmp
cld
pushf
cld
mov
mov
cld
je
adc
sbb
cmp
int3
std
in
std
lock
test
inc
std
dec
std
push
std
push
std
and
sub
enter
cld
incb
mov
inc
fs
jo
adc
and
dec
call
push
incl
dec
lcall
incl
jmp
pushl
aam
fdivr
loopne
test
mov
clc
je
jl
cmp
int3
stc
fdivr
hlt
stc
clc
stc
cmp
stc
dec
stc
push
stc
pop
stc
or
and
sub
xor
enter
cld
cli
cmp
cli
test
mov
cli
add
or
adc
sbb
and
sub
cmp
fdivr
in
in
sti
lock
nop
sti
cwtl
sti
lods
sti
dec
sti
push
sti
pop
sti
pusha
sti
add
sbb
cmp
les
sub
hlt
enter
lock
test
movsb
hlt
lods
hlt
mov
push
hlt
fs
add
or
sub
cmp
hlt
cmc
xor
cmc
pushf
cmc
mov
mov
cmc
je
adc
xor
shl
neg
div
idiv
testb
mulb
idivb
testb
xor
enter
call
mull
divl
add
or
and
sub
enter
in
test
mov
xchg
lock
lock
lock
sub
cmp
aam
fdiv
loopne
nop
icebp
lods
icebp
mov
mov
icebp
or
adc
shl
repnz
call
repnz
repnz
repnz
repnz
sub
enter
cld
repz
mov
nop
repz
inc
repz
repz
int3
cld
aam
fdivr
in
in
cld
lock
nop
cld
movsb
cld
push
cld
pop
cld
fs
push
cld
sub
int3
std
sar
lock
clc
std
cmp
std
nop
std
cwtl
std
lods
std
dec
std
push
std
jo
js
add
or
adc
sbb
and
sub
xor
cmp
sar
sar
fdivr
in
decb
push
insb
jo
js
sbb
xor
int3
call
fdivr
lock
push
jmp
incl
or
sub
xor
cmp
int3
clc
in
clc
hlt
clc
cld
clc
test
mov
xchg
clc
cwtl
clc
mov
clc
push
clc
pop
clc
pusha
clc
push
clc
add
or
adc
sbb
and
sub
xor
cmp
int3
stc
in
stc
hlt
stc
cld
stc
cmp
stc
mov
push
stc
pop
stc
pusha
stc
push
stc
add
or
adc
sbb
and
xor
in
cli
clc
cli
mov
xchg
cli
lods
cli
mov
push
cli
fs
add
or
sub
cmp
fdivr
in
call
sti
movsb
sti
inc
sti
dec
sti
push
sti
jo
js
or
sub
xor
les
or
shl
fdiv
in
hlt
mov
nop
hlt
mov
inc
hlt
fs
push
hlt
cmp
shl
cmc
call
cmc
movsb
cmc
lods
cmc
mov
mov
cmc
push
cmc
and
enter
cld
testb
mov
push
negb
js
or
sub
xor
shl
in
test
mov
test
mov
inc
mull
divl
adc
and
lock
mov
lods
lock
push
lock
or
adc
xor
cmp
shl
icebp
fdiv
cld
icebp
xor
icebp
test
mov
icebp
add
or
adc
and
repnz
repnz
fdiv
in
in
repnz
repnz
repnz
repnz
repnz
repnz
repnz
bnd
or
sub
xor
cmp
fdiv
in
repz
xchg
repz
rep
repz
pusha
repz
add
or
cmp
aam
fdivr
loopne
clc
cld
mov
lods
cld
mov
push
cld
pop
cld
pusha
cld
je
adc
sbb
and
sub
xor
cmp
std
enter
cld
std
pushf
std
movsb
std
test
dec
std
push
std
pop
std
insb
std
or
adc
xor
in
in
lock
nop
movsb
incb
push
jo
js
or
sub
xor
sar
in
test
mov
nop
pushl
decl
pop
decl
adc
sbb
cmp
sar
clc
hlt
clc
clc
clc
mov
clc
dec
clc
fs
push
clc
sbb
and
xor
aam
call
stc
mov
stc
push
stc
jo
js
add
or
adc
sbb
and
xor
aam
fdivr
clc
cli
mov
lods
cli
mov
push
cli
pop
cli
pusha
cli
push
cli
and
sub
enter
clc
sti
mov
lods
sti
mov
push
sti
pop
sti
insb
sti
or
adc
sbb
cmp
les
int3
mov
shl
hlt
shl
fdiv
in
hlt
mov
xchg
hlt
cwtl
hlt
mov
hlt
pop
hlt
jl
add
and
sub
xor
cmp
shl
cmc
xor
cmc
mov
cmc
inc
cmc
jo
adc
sbb
and
xor
aam
fdiv
in
in
div
idiv
testb
negb
imulb
idivb
sbb
and
sub
xor
mul
imul
div
notl
testl
testl
idivl
neg
lock
lock
mov
lock
lock
lock
or
adc
sbb
xor
icebp
in
call
icebp
cwtl
icebp
lods
icebp
dec
icebp
push
icebp
pop
icebp
pusha
icebp
add
or
adc
sbb
and
sub
xor
repnz
in
repnz
repnz
repnz
mov
xchg
repnz
repnz
bnd
jl
add
and
sub
xor
repz
call
repz
rep
repz
add
or
and
sub
enter
in
test
mov
nop
cld
dec
cld
fs
push
cld
sbb
cmp
std
enter
cmp
std
mov
mov
std
push
std
and
sar
sar
fdivr
loopne
call
movsb
test
dec
push
pop
insb
decb
adc
sbb
and
sub
xor
cmp
sar
push
call
test
dec
call
pop
jmp
je
adc
sbb
and
sub
enter
clc
clc
cmp
clc
nop
clc
cwtl
clc
mov
clc
inc
clc
fs
insb
clc
je
jl
add
or
sub
cmp
fdivr
in
in
stc
lock
nop
stc
cwtl
stc
mov
stc
pop
stc
js
or
sub
xor
cmp
fdivr
in
cli
mov
nop
cli
mov
inc
cli
fs
push
cli
and
sti
enter
lock
test
movsb
sti
lods
sti
mov
mov
sti
push
sti
and
sub
xor
cmp
les
les
hlt
enter
cld
hlt
pushf
hlt
mov
hlt
push
hlt
fs
add
or
adc
sbb
and
sub
enter
cld
cmc
xor
cmc
mov
push
cmc
pop
cmc
js
or
adc
sbb
and
sub
xor
enter
call
idivb
pusha
divb
negb
idivb
test
enter
in
test
mov
nop
divl
imull
notl
negl
imull
idivl
test
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
or
sbb
cmp
icebp
int3
icebp
shl
lock
clc
icebp
mov
lods
icebp
mov
mov
icebp
push
icebp
add
adc
xor
cmp
shl
repnz
loopne
lock
repnz
repnz
repnz
repnz
or
adc
xor
cmp
shl
repz
fdiv
loopne
hlt
repz
repz
rep
repz
dec
repz
repz
repz
repz
adc
sbb
and
sub
xor
cmp
sar
cld
sar
in
test
mov
test
mov
cld
pop
cld
push
cld
adc
sub
xor
cmp
int3
std
in
std
hlt
std
clc
std
cwtl
std
mov
std
pop
std
pusha
std
push
std
add
or
adc
sbb
and
sub
xor
cmp
int3
in
lock
nop
movsb
incb
push
jo
js
add
sbb
and
and
sub
xor
sar
jmp
inc
xor
int3
mov
shl
hlt
call
hlt
pushf
hlt
cwtl
hlt
movsb
hlt
add
or
xor
xor
cmp
cld
cmc
adc
pushf
testb
testl
lock
lock
lock
fdiv
dec
icebp
push
icebp
pop
icebp
sub
int3
repnz
repnz
repnz
sub
xor
cmp
cmp
repz
repz
shl
fdiv
fdiv
in
loopne
in
repz
repz
repz
repz
xor
repz
xchg
pause
repz
repz
rep
repz
repz
mov
mov
repz
repz
repz
repz
repz
repz
repz
repz
rep
repz
repz
js
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
cld
sar
cld
enter
sar
fdivr
fdivr
in
loopne
in
cld
call
cld
cld
cld
clc
cld
test
cmp
cld
mov
xchg
cld
nop
cld
pushf
cld
cwtl
cld
movsb
cld
mov
cld
mov
mov
mov
cld
inc
cld
dec
cld
dec
cld
push
cld
push
cld
pop
cld
pop
cld
fs
pusha
cld
insb
cld
push
cld
jl
js
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
std
sar
std
enter
sar
fdivr
fdivr
in
loopne
in
std
call
std
cld
std
clc
std
test
cmp
std
mov
xchg
std
nop
std
pushf
std
cwtl
std
push
std
add
or
sub
enter
call
cld
clc
incb
mov
xchg
cwtl
movsb
mov
sub
sub
sar
fdivr
dec
clc
cmp
int3
stc
fdivr
in
stc
cld
stc
cwtl
stc
lods
stc
test
mov
mov
mov
stc
push
stc
push
stc
add
or
adc
sbb
and
sub
xor
cmp
sar
cli
sar
fdivr
loopne
call
cli
cmp
cli
nop
cli
cwtl
cli
int3
sti
enter
int3
les
hlt
inc
hlt
dec
hlt
dec
hlt
push
hlt
push
hlt
pop
hlt
pop
hlt
fs
pusha
hlt
insb
hlt
push
hlt
jl
js
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
cmc
shl
cmc
enter
shl
fdiv
fdiv
in
loopne
in
cmc
cld
cmc
mov
mov
mov
mov
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
bnd
js
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
repz
repz
shl
fdiv
fdiv
loopne
in
repz
repz
repz
repz
xor
rep
repz
test
mov
pop
std
and
nop
mov
cmp
lock
lods
clc
pop
clc
adc
stc
pushf
stc
dec
stc
js
sub
sar
lock
mov
cli
mov
mov
mov
cli
inc
cli
dec
cli
dec
cli
je
jo
jl
js
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
sti
sar
sti
enter
sar
fdivr
fdivr
pushf
sti
mov
sti
adc
and
aam
les
in
xchg
hlt
mov
sub
cld
cmc
add
in
xchg
negb
lock
mov
lods
lock
hlt
icebp
xchg
icebp
adc
in
repnz
repnz
mov
cld
mov
std
insb
std
mov
ljmp
sbb
movsb
stc
dec
stc
jo
sbb
aam
lock
movsb
cli
in
dec
sti
in
les
shl
nop
hlt
mov
push
hlt
je
or
sub
fdiv
test
mov
jl
sub
aam
clc
imulb
negb
test
push
lock
icebp
xchg
icebp
mov
push
icebp
jo
and
repnz
repnz
bnd
sub
xchg
repz
repz
cld
xchg
cld
pusha
cld
adc
cmp
in
insb
std
in
mov
pop
decb
in
mov
clc
push
clc
sbb
fdivr
movsb
stc
and
cld
cli
movsb
cli
push
sti
lock
xchg
sti
push
sti
adc
hlt
int3
les
fdiv
movsb
hlt
fs
and
aam
adc
cld
testb
and
mul
idiv
mull
in
lods
lock
icebp
cld
icebp
sbb
pushf
repnz
bnd
and
aam
test
pop
repz
sub
fdivr
pushf
cld
inc
cld
add
xor
std
cld
std
pusha
std
adc
lock
lods
insb
sbb
int3
decl
incl
call
cli
pop
cli
and
aam
pushf
sti
inc
sti
sbb
les
int3
hlt
nop
hlt
mov
.byte
.byte
.byte
bswap
rcl
mov
bts
pusha
bts
sub
test
mov
cmc
neg
not
not
movzbw
rol
sub
xor
and
pusha
not
sub
bswap
pop
pushf
pushf
movzbl
pushf
pushl
jmp
movl
mov
mov
push
pushl
lea
jmp
mov
pushl
pushf
movw
pushf
lea
jmp
add
mov
call
call
jmp
divl
push
jmp
push
pusha
lea
jmp
movzbw
push
cwtl
mov
pusha
lea
jl
pusha
movb
lea
cpuid
pusha
clc
sub
cmc
cmpl
call
rol
push
cmp
pusha
xor
test
add
pushf
add
jg
bt
pushf
sub
cmp
push
cmp
clc
cbtw
clc
stc
cmc
cwtl
call
mov
pusha
pusha
movb
lea
jmp
mov
movsbl
mov
push
mov
pushf
pushl
ret
mov
mov
lea
jmp
push
call
jmp
and
clc
stc
cmp
movb
lea
jne
shl
xorb
call
push
mov
pusha
pushf
pushl
pushf
lea
jmp
mov
push
movsbw
mov
bswap
bswap
mov
pushf
jmp
pushf
call
rol
rcr
mov
pusha
push
push
cmp
add
jmp
pushl
mov
call
call
pusha
mov
pusha
pushf
pushf
popl
pushl
pushl
pushl
popl
push
movb
mov
lea
jmp
sbb
lea
shld
xor
sar
movzbw
neg
cmp
or
xor
bsf
pusha
mov
jmp
pushf
jmp
jmp
mov
push
movb
mov
movb
lea
jmp
sub
jg
pop
movsbw
cld
or
pop
test
test
cmp
pusha
pushl
popf
movb
pusha
movb
mov
lea
jmp
cmp
clc
lea
stc
sub
clc
push
movb
not
jmp
sub
jmp
test
bt
add
pusha
mov
cmp
stc
xchg
bt
jmp
inc
stc
or
mov
mov
jmp
das
mov
stc
rcr
notl
neg
clc
or
mov
test
sub
test
cmp
and
pushf
movw
pushf
popl
pushf
pusha
mov
pushl
popl
pushf
lea
jmp
mov
pusha
pushf
pushf
pushf
lea
jmp
mov
pusha
push
mov
lea
jmp
push
jmp
pushl
popl
push
pushf
push
pushf
lea
jmp
pushl
popl
push
pushf
pushf
lea
jmp
xor
clc
clc
mov
movb
cmp
sub
jmp
mov
push
pushf
lea
jmp
push
mov
call
pushl
popl
pushl
push
pushf
lea
jmp
dec
mov
sar
bts
rcr
mov
pushf
cmc
push
bt
add
jmp
pushf
popl
mov
call
xor
add
sbb
dec
mov
cmp
push
clc
shl
test
shr
push
or
clc
bt
clc
xor
pusha
call
jmp
rcr
shl
cmc
mov
cmc
pushf
sub
call
btr
neg
rcl
mov
sbb
mov
or
call
jmp
mov
call
mov
pushf
mov
call
bsf
xadd
inc
mov
mov
dec
or
mov
jmp
call
call
add
mov
push
mov
pushf
popl
pushf
pushl
popl
mov
push
pusha
lea
jmp
neg
sub
inc
sbb
cmc
movsbw
mov
cmp
cmp
cmp
test
add
push
movb
mov
pushf
push
pushf
lea
jmp
movb
pushf
inc
jmp
movb
pushl
popl
movl
lea
jmp
pushf
pushf
mov
pusha
call
not
movzbl
cmc
pusha
sub
cmp
pushf
clc
pusha
neg
jmp
cmp
test
stc
cmc
shl
pusha
pusha
mov
jmp
aad
mov
cmp
btc
bswap
mov
mov
bt
clc
not
stc
stc
not
pusha
and
pusha
mov
push
call
pushf
call
add
push
movb
jmp
pusha
call
call
pushl
pusha
mov
push
movb
jmp
pushf
popl
mov
call
jmp
or
mov
cmp
bt
add
clc
bt
bt
shrd
push
jmp
jmp
pushf
mov
movw
mov
mov
pusha
push
jmp
mov
push
pushf
pusha
movw
lea
jmp
mov
pusha
pushf
push
movb
lea
jmp
mov
pushf
mov
pushf
mov
pushf
movl
lea
jmp
sub
pushf
call
pusha
push
mov
lea
cpuid
stc
test
test
sub
stc
cmpl
jmp
clc
push
ror
rcr
and
push
movsbw
add
xor
bswap
and
xor
shl
pusha
pushl
sbb
and
movsbw
mov
mov
sub
movw
jmp
mov
push
mov
pushf
pushf
lea
jmp
call
jmp
add
pusha
rol
mov
pushf
pushl
add
pushf
call
clc
pusha
xor
pusha
push
xchg
mov
pushf
movb
movl
pushl
pushl
mov
push
mov
pushl
ret
mull
pushl
pushf
cmpsb
jmp
mov
xchg
fs
sbb
ljmp
addr16
cltd
gs
or
mov
dec
imul
xor
mov
push
arpl
jns
mov
mov
fwait
cmpsb
pushl
popf
cmpsb
lcall
outsl
mov
cli
outsl
mov
lcall
cmpsb
fsts
cmpsb
stc
fs
mov
cmpsb
pushl
lahf
cmpsb
jmp
fwait
cmpsb
ljmp
mov
stos
outsl
mov
js
cmpsb
call
fs
loope
cmpsb
incl
cmpsb
jns
mov
xchg
fs
xor
cmpsb
decl
cmpsb
stc
fs
mov
fs
cwtl
arpl
push
addr16
cltd
gs
lcall
mov
stos
outsl
mov
lcall
mov
jns
mov
dec
imul
leave
xchg
cmpsb
stc
fs
mov
fs
arpl
lcall
addr16
xor
cmpsb
mov
addr16
mov
arpl
incl
mov
fs
fsts
mov
sbb
pushl
outsb
mov
jle
cmpsb
call
fs
lret
imul
mov
call
cmpsb
call
cmpsb
incl
mov
adc
mov
mull
incl
cmpsb
dec
fwait
cmpsb
stc
fs
push
popf
cmpsb
pushl
xchg
cmpsb
mov
data16
or
mov
xchg
fs
leave
xchg
cmpsb
decl
mov
mov
lahf
cmpsb
incl
cmpsb
mov
outsb
mov
stc
fs
or
mov
sbb
js
cmpsb
jmp
popf
cmpsb
jmp
popf
cmpsb
mov
xchg
cmpsb
incl
cmpsb
decl
cmpsb
ljmp
cmpsb
pushl
xchg
cmpsb
call
cmpsb
decl
cltd
cmpsb
stc
fs
outsb
mov
mov
mov
fsts
mov
mov
cmpsb
call
mov
cltd
gs
push
popf
cmpsb
cli
outsl
mov
jle
cmpsb
jmp
mov
push
arpl
lcall
cmpsb
stc
fs
jle
cmpsb
pushl
imul
or
lcall
outsl
mov
mov
mov
adc
mov
mull
lcall
cmpsb
lcall
mov
mov
mov
mov
lcall
data16
cltd
gs
stc
fs
push
popf
cmpsb
pushl
imul
call
cmpsb
pushl
outsb
mov
dec
imul
leave
xchg
cmpsb
jmp
fwait
cmpsb
push
addr16
pop
pushf
cmpsb
mov
fs
adc
mov
mov
mov
push
lahf
cmpsb
call
cmpsb
push
addr16
fsts
mov
mov
xchg
cmpsb
ljmp
popf
cmpsb
jmp
fwait
cmpsb
lcall
cmpsb
lcall
data16
stc
fs
outsl
outsl
mov
mov
mov
js
cmpsb
decl
cmpsb
decl
mov
jne
mov
into
fwait
cmpsb
dec
fwait
cmpsb
incl
mov
or
cmpsb
call
cmpsb
jle
cmpsb
jmp
popf
cmpsb
stc
fs
fsts
mov
arpl
dec
xchg
cmpsb
incl
cmpsb
mov
outsl
mov
and
mov
jns
mov
or
cmpsb
call
cmpsb
pushl
fs
adc
mov
mov
mov
or
stc
fs
or
mov
into
fwait
cmpsb
push
addr16
pop
imul
call
xchg
cmpsb
mov
outsl
mov
lcall
cmpsb
pushl
imul
call
xchg
cmpsb
push
addr16
push
nop
cmpsb
jmp
popf
cmpsb
call
cmpsb
decl
cmpsb
decl
fwait
cmpsb
lcall
cmpsb
decl
mov
arpl
stc
fs
xchg
bt
adc
sub
mov
clc
neg
neg
mov
stc
call
movb
push
mov
push
push
pushf
push
lea
jmp
rol
cmp
test
mov
stc
clc
jmp
mov
mov
pusha
movb
lea
jmp
setge
lea
mov
lea
xchg
mov
lea
pushf
movsbw
pusha
xchg
movsbw
movsbw
repz
popl
bswap
pushl
popl
bswap
movl
cmp
rcl
dec
mov
btr
add
add
pusha
call
shld
mov
stc
add
push
jmp
call
sets
pusha
mov
dec
ror
xor
adc
mov
call
shrd
mov
jl
push
clc
lea
stc
cmp
sub
cmc
cmc
clc
pusha
not
clc
bt
stc
add
push
stc
jmp
call
sub
btr
rcl
ror
rcr
call
pushf
popl
pushf
pushl
popl
pushf
lea
jmp
push
pushf
movb
push
mov
pusha
push
movw
lea
jmp
cmc
mov
cmp
jmp
or
shl
mov
cmp
cmc
cmp
sub
cmp
push
jmp
pushf
popl
push
call
pushf
call
pusha
mov
push
lea
jmp
call
jmp
rdtsc
rdtsc
push
cmc
pusha
call
rcr
daa
lea
jmp
bswap
cwtl
sar
mov
test
pushf
mov
pushl
mov
add
jmp
pushl
pushf
cld
pushl
rep
not
jmp
setp
mov
movsbw
setns
movzbw
mov
jmp
pushf
clc
sub
cmc
pushf
clc
movl
sub
jmp
jmp
mov
pushf
lea
jmp
shl
add
rcr
mov
mov
stc
bt
pusha
cmc
sub
stc
stc
pushf
mov
add
movb
pushf
popl
jmp
pusha
mov
mov
movb
mov
pushf
lea
jmp
call
pusha
sub
pushf
push
bt
pushl
cbtw
bt
pushl
cwtl
bt
push
push
cmp
sub
push
jmp
jmp
push
pushl
pushf
pushf
mov
mov
pushf
push
lea
jmp
pushf
inc
cmp
test
pushl
xor
movb
jmp
stc
mov
clc
bt
and
pusha
clc
call
shr
mov
bt
sub
test
clc
add
pusha
pushl
not
pushl
xor
pushf
movb
sub
sub
jno
test
stc
sub
pusha
stc
cmc
test
sub
call
shld
shl
mov
and
mov
jle
sub
push
sub
jp
test
pusha
shl
pusha
mov
push
pushf
push
pushl
pushf
popl
jmp
jmp
call
call
call
push
mov
pushf
mov
push
mov
pushl
ret
pushf
pushf
mov
lea
not
mov
movzbw
pusha
mov
bswap
jmp
mov
push
pushl
pushf
lea
jmp
cmp
pushl
lea
jne
shl
xorb
pushf
movsbw
bswap
not
mov
push
lea
jmp
pusha
pushf
jmp
not
pushf
pop
inc
rcl
bt
inc
and
not
push
stc
btc
sub
bswap
push
xor
bswap
inc
bts
movsbw
movzbw
movzbl
bsf
pop
sub
mov
cmp
not
jmp
push
mov
push
pushf
lea
jmp
clc
ror
cmp
sub
cmp
call
bt
rol
push
and
dec
shr
ror
sub
movsbw
jmp
lea
stc
sub
movsbl
cmp
shl
adc
mov
bswap
pusha
bsr
mov
shrd
sub
dec
add
lea
sub
mov
not
lea
shl
xor
call
pusha
push
mov
movb
movb
lea
jmp
pushf
pushf
lea
jne
shl
movsbw
mov
bt
and
bt
push
stc
cmp
pushf
mov
lea
jne
rcl
ror
xorb
not
pop
pusha
pushf
pushf
lea
jmp
jmp
shl
mov
setne
shld
shr
bsr
mov
clc
call
jmp
lea
jne
bsf
btr
bts
stc
mov
push
movsbl
stc
call
lea
je
cmp
popf
pushf
pushf
pusha
lea
jmp
mov
cmp
add
adc
aad
pushf
aam
movzbl
bt
cmp
jmp
mov
push
push
pusha
lea
jmp
lea
jl
clc
sub
push
ror
pushf
pushf
add
pusha
pushf
mov
movb
pushf
popl
call
test
add
mov
call
pushf
jmp
call
lea
jne
btr
shr
shrd
cwtl
mov
cmp
lea
aas
movsbl
cmc
stc
cmp
push
pusha
call
call
lea
jne
xadd
sub
mov
ror
sbb
add
ror
ror
movzbl
push
cmc
clc
cmc
cmp
jmp
movsbl
push
movb
pushf
movb
jmp
daa
movsbw
lea
mov
pusha
cmc
mov
jmp
pushl
movl
call
pusha
lea
jae
bsf
mov
seto
aaa
xor
not
mov
cmc
movzwl
aaa
cmc
mov
cmp
add
mov
daa
bt
rol
shl
mov
stc
bt
jmp
dec
push
pushl
lea
je
stc
popf
push
lea
jmp
pusha
test
cmp
call
call
call
movzbw
lea
movb
cld
movb
lea
movb
lea
movb
movsbw
bswap
xchg
not
movb
mov
pop
movb
lea
push
pushf
movb
std
pushf
not
movzbw
movb
xchg
movb
call
cmp
call
mov
lea
mov
pushf
std
cld
shl
xor
call
movb
jmp
jmp
call
test
mov
shld
aas
movsbl
call
ror
sar
mov
clc
pushf
adc
rol
mov
cmp
add
pusha
pusha
mov
movl
call
movl
pushl
movb
jmp
pusha
pusha
lea
jne
push
pushf
pushf
pushf
lea
jmp
jmp
pusha
movl
call
lea
jne
pushf
call
pusha
movl
movw
jmp
jmp
pushf
movb
pushl
lea
jne
pushf
pushf
pusha
lea
jmp
cmp
cmp
pusha
lea
jne
and
mov
btc
movsbl
pusha
pusha
pushf
cmp
jmp
movb
not
xchg
lea
jp
jmp
jmp
mov
jmp
test
pushf
pushf
cmp
jmp
lea
jne
bts
sete
mov
mov
cmc
shr
pusha
movsbl
pushf
cmp
bt
pusha
cmp
push
pushf
lea
jne
bsf
mov
mov
shr
bsf
shl
movsbl
call
movb
movw
movb
call
movb
movb
movb
call
mov
pushf
movl
pusha
pushl
call
rcr
mov
push
btc
mov
call
pushf
lea
movb
pop
lea
xchg
movb
bswap
sete
not
std
movb
movsbl
pop
mov
movb
pushf
push
xchg
movb
call
sub
test
shld
mov
pushf
add
dec
shl
add
rcr
rcl
stc
mov
lea
jge
mov
bswap
imul
neg
movzbl
jmp
movb
mov
mov
pusha
movb
pop
jmp
push
pushl
mov
pushf
jmp
movb
pusha
movb
mov
bswap
setnp
movsbw
movb
pop
std
bswap
mov
movb
setae
movb
cld
movzbw
movb
lea
pusha
movb
movzbw
movb
push
std
movw
movb
movzbl
lea
pop
movb
pop
movsbl
not
movzbl
movb
push
movsbw
xchg
movl
xchg
movl
jmp
mov
mov
lea
jmp
pushf
lea
jne
pusha
lea
jmp
jmp
cmpl
pushf
pushl
lea
je
shld
mov
lea
shrd
bsr
shrd
mov
jmp
not
movl
push
pushl
setp
movl
movw
call
add
shld
movzbw
cmp
movzbl
push
cmp
cmc
cmp
call
aam
mov
neg
add
push
mov
dec
adc
or
jmp
jmp
jmp
movb
mov
movb
call
call
bt
sub
adc
xor
mov
jmp
jmp
jmp
stc
add
pushf
mov
push
pushf
pushf
lea
jne
pusha
pushf
pushf
lea
jmp
pusha
pushf
mov
call
push
mov
push
lea
jne
xor
movsbl
aad
mov
jne
rcr
test
bts
add
movsbw
movzbl
push
cmp
pusha
push
lea
jg
jne
stc
adc
bsr
cmc
mov
xor
and
jbe
rcr
add
push
movzbl
call
lea
jne
pushf
lea
jmp
btc
and
mov
push
bts
sbb
mov
btc
adc
test
mov
stc
stc
bt
pushf
add
pushf
lea
jge
pushf
pushf
mov
pushf
lea
jne
pushf
pusha
lea
jmp
movb
movl
movb
call
movsbw
mov
aam
cmc
stc
add
btc
sar
rcr
mov
btc
bsf
mov
shrd
add
shr
xor
or
mov
rol
btr
mov
call
push
cmp
pusha
jmp
pushf
call
mov
mov
lea
jmp
call
mov
test
lea
xor
movsbl
clc
test
cmp
pushf
lea
jne
add
mov
shl
adc
rcr
movsbl
bt
stc
test
cmp
call
pusha
movl
movb
pushl
popl
pusha
pushl
ret
pushf
pusha
mov
pushf
mov
mov
pusha
movb
pushl
ret
movl
pushf
movb
pushl
movl
jmp
call
jmp
jmp
xchg
movzbw
movsbl
movzbw
movsbw
mov
setae
lea
bswap
cld
mov
cld
std
mov
lea
pusha
push
pop
cld
bts
inc
call
movb
jmp
jmp
movb
jmp
bswap
movsbl
movl
clc
pushf
cmp
jmp
lea
jne
push
pusha
lea
jmp
movb
call
pushf
xchg
movb
bswap
movsbl
movb
xchg
std
movb
movzbw
std
cld
lea
movb
cld
movzbw
movl
call
call
rol
mov
dec
cmp
call
movl
mov
pushl
popl
pushf
push
pushf
mov
pushl
ret
pusha
movl
pushf
lea
jmp
cmp
jmp
mov
call
bt
mov
push
stc
bt
pusha
cmpl
pushf
jmp
push
test
pushl
sub
sub
test
sub
push
call
movb
not
movb
bswap
lea
jbe
movb
pusha
bswap
movb
lea
jno
pushf
movb
pushf
setne
pusha
movb
cld
movb
movw
movb
not
lea
movb
pop
xchg
movb
mov
movb
bswap
pushl
movb
jmp
lea
jne
shld
mov
stc
movsbl
bt
cmp
push
movb
pushf
lea
jne
sub
aad
bswap
rcr
mov
shld
shld
dec
dec
movsbl
jmp
movl
movb
jmp
jmp
dec
movzbw
mov
push
sbb
movzbw
mov
call
lea
jne
shrd
shr
mov
movzbw
movsbl
stc
call
mov
lea
jne
shl
movsbw
setnp
mov
inc
bsf
btr
rcl
movsbl
cmp
cmp
call
cmp
pushl
push
cmpl
call
movl
jmp
cmpl
jmp
movl
cld
std
pop
sete
movl
lea
jb
cld
movl
lea
pushf
bswap
movl
push
not
pushf
movl
cld
pushf
movl
lea
bswap
movl
pusha
movl
bswap
pushf
movl
mov
movzbl
pop
pop
movl
xchg
cld
movzbw
cld
movl
push
xchg
pushf
movl
not
movsbw
movl
lea
std
movl
push
call
movzwl
daa
mov
shld
call
jmp
xor
mov
mov
movb
movw
lea
jmp
cmp
cmpl
jmp
mov
cmp
mov
call
xchg
mov
std
jmp
pusha
jmp
movb
lea
jne
pusha
lea
jmp
jmp
pushf
jmp
not
movl
std
movl
cld
pusha
xchg
movl
not
xchg
std
movl
jmp
movb
jmp
mov
pushf
movzbw
movb
jmp
sbb
btc
and
mov
neg
lea
sets
add
movsbw
pusha
cmc
or
mov
shr
pusha
jmp
movl
movb
jmp
mov
movsbw
dec
test
mov
clc
cmc
clc
cmc
add
call
sar
bts
bsr
mov
movl
jmp
cmp
call
movl
call
cmc
stc
cmp
pushf
jmp
cmc
jmp
call
jmp
call
push
call
movb
xchg
movb
mov
xchg
movb
not
movb
std
pushf
movb
not
pushf
movb
movsbw
jmp
pushl
lea
jne
rcr
bts
btr
lahf
mov
seto
add
bts
movsbl
jae
cmp
test
cmp
cmp
push
pushf
mov
mov
lea
jne
rdtsc
mov
mov
cmp
movsbl
push
cmp
push
pusha
lea
jne
pushf
pushf
dec
not
mov
neg
btr
movsbl
push
test
pusha
cmc
cmp
movb
push
movw
lea
jne
shl
push
cmc
mov
movsbw
bt
pushl
movsbl
push
stc
stc
cmp
mov
lea
jne
rcl
mov
shl
test
movsbl
jmp
jmp
pushf
pusha
mov
pushf
push
push
push
lea
jne
pusha
pushf
push
lea
jmp
jmp
mov
cmc
shld
mov
test
jp
or
setl
add
btr
das
movzbw
or
mov
ror
mov
stc
and
lea
bswap
mov
push
add
mov
call
movb
call
movw
movl
movb
call
mov
movb
lea
xchg
call
jmp
movb
std
pushf
bswap
cld
movb
call
movzbl
mov
mov
pop
not
push
mov
movsbl
mov
pushl
pushl
lea
jmp
lea
jne
pushf
pusha
pushl
movb
lea
jmp
pushf
not
movb
call
movb
call
jmp
les
sbb
das
jmp
lock
loopne
xchg
out
rcll
pushf
jmp
ret
mov
dec
xor
adc
pop
add
loopne
je
je
gs
mov
adc
pop
mov
jmp
cmpsb
rol
loopne
adc
js
out
pop
cmpsb
daa
loopne
je
bound
gs
loopne
xchg
sahf
repz
mov
pop
add
pop
mov
lock
mov
ret
cmp
jmp
int
or
int
mov
pop
jmp
jb
int
ss
fdivrs
adc
int
out
mov
pop
imulb
loopne
xor
jle
inc
jmp
mov
aam
xchg
mov
in
out
int
mov
in
shr
pop
decl
jae
xchg
inc
jmp
lahf
insb
repnz
push
jne
jmp
fs
jne
add
rcr
shl
mov
bsf
btc
movsbl
jbe
cmp
pushf
pushl
call
mov
jmp
movl
pusha
pushl
popl
mov
pusha
movb
pushl
ret
mov
push
movb
lea
jmp
jmp
movb
call
stc
cmp
pushf
lea
jne
jmp
add
jmp
movb
pop
lea
movzbw
movb
pop
cld
movb
sets
jmp
mov
movb
jmp
lea
jne
sub
btr
shl
rcr
mov
add
stc
or
movsbl
jmp
mov
push
push
mov
mov
setge
mov
pushf
setns
cld
not
sub
lea
mov
pusha
push
mov
movsbw
call
cmp
push
pushl
jmp
call
bswap
movb
pop
not
movb
call
mov
jmp
call
lea
jne
stc
rdtsc
das
mov
movzbw
adc
setge
movsbl
cmc
push
cmp
push
push
pusha
lea
jne
and
shl
mov
shr
mov
shl
shl
movzbw
sar
movsbl
stc
pusha
push
cmp
call
call
lea
jne
shl
lea
mov
movsbw
or
movsbl
stc
bt
test
cmp
pushf
pushf
call
movb
mov
jmp
lea
jge
jne
shr
mov
xor
jmp
lea
jne
cwtl
movsbw
mov
aad
movsbl
pushf
pusha
cmp
pusha
call
call
pushf
mov
call
push
movb
bswap
cld
call
movw
pushl
popl
pushf
pushl
ret
pushl
popl
pushl
pushl
ret
jmp
call
cmp
lea
call
lea
jne
pusha
mov
pushl
lea
jmp
movsbw
cld
movb
call
pushf
pushl
popl
mov
movb
pusha
pushl
ret
mov
pushf
pushl
mov
pushl
lea
jmp
lea
jne
cmp
xor
bsr
inc
mov
bswap
test
add
pusha
test
movzbl
clc
push
lea
jge
call
call
movl
pushf
mov
push
pushf
lea
jmp
lea
jne
clc
mov
call
sub
mov
pushf
cmpl
pusha
lea
jne
pushf
pusha
mov
pushf
lea
jmp
movb
jmp
bts
mov
stc
clc
bt
add
and
xor
mov
shrd
rcl
cmc
mov
setno
or
movsbl
bt
cmp
pushf
lea
jne
adc
push
mov
bswap
ror
movsbl
mov
movb
test
jmp
pushf
movl
call
movb
pusha
lea
mov
movzbl
movb
mov
movzbw
movb
not
movsbw
cld
movb
bswap
cld
cld
call
stc
ror
cmp
add
pushf
movw
movb
pusha
pushf
popl
call
call
push
lea
jne
btc
mov
inc
movzbl
add
test
movzbl
pushf
cmp
push
pushl
pusha
call
movw
call
cld
inc
movzbw
ror
neg
sub
setnp
shl
shld
neg
mov
mov
shl
neg
mov
lea
shl
mov
bsr
ror
btr
mov
ror
sar
bswap
and
mov
pushf
bt
cmc
sub
pusha
pushl
pushl
pushl
xor
push
lods
push
test
test
mov
cmp
pushf
push
lea
jl
clc
push
sub
cmc
mov
jmp
lea
jne
pushf
mov
mov
lea
jmp
movb
call
jmp
movb
pushf
movl
push
call
pusha
push
cmpl
pushf
call
jmp
pushl
movl
xchg
std
movzbw
movl
bswap
bswap
mov
lahf
call
das
and
mov
and
cmc
bswap
xor
add
inc
shrd
sar
ror
movzbl
stc
push
pushf
stc
cmp
pusha
lea
jne
ror
adc
mov
lea
rcr
ror
bsr
add
not
sub
movzbl
pusha
stc
bt
stc
cmp
call
push
jmp
movb
jmp
movb
std
lea
xchg
cld
movb
xchg
movb
cld
movb
not
not
movl
call
call
push
cmc
mov
pusha
cmpl
call
movl
push
mov
call
movl
movb
jmp
call
jmp
movb
xchg
movzbl
mov
xchg
movb
movw
movb
std
mov
cld
not
movl
pop
lea
movzbw
movl
cld
bswap
pushf
xchg
cld
call
movl
jmp
mov
movb
call
bt
pusha
add
mov
pushf
call
movw
pushf
pusha
lea
jne
push
mov
lea
jmp
clc
movzbl
pusha
cmp
jmp
mov
bswap
pushl
mov
movsbw
call
pushf
lea
jne
shr
lea
rcr
mov
rcl
bswap
add
and
movzbl
stc
jge
cmc
cmp
pusha
pusha
movb
lea
jmp
movb
call
jmp
stc
sub
call
cmp
jmp
sub
sub
dec
aam
mov
pushf
jmp
lea
jne
btc
mov
stc
lea
neg
movsbl
call
test
bt
cmp
pusha
movl
call
jmp
lea
mov
stc
stc
add
push
mov
jmp
mov
shr
movsbw
btr
shld
mov
inc
mov
stc
sub
jmp
movb
jmp
cmp
adc
mov
dec
shl
shld
add
dec
rcl
movzbl
pushf
jmp
movb
call
movl
jmp
movl
push
pusha
call
xchg
movzbw
setnp
call
pushf
movl
pusha
movl
pusha
pushf
movl
pushl
movl
mov
call
cld
call
movb
call
lea
jne
sar
push
sub
shl
mov
pusha
bt
ror
movsbl
stc
test
call
movsbw
pushf
lea
mov
movzbw
mov
bswap
imul
btr
sar
stc
mov
bts
bts
lea
mov
clc
pusha
add
jmp
movzbl
bswap
xchg
not
movzbw
mov
pushf
movzbl
pop
mov
not
std
jmp
movb
cld
call
shl
xor
mov
pusha
cmp
stc
movw
cmpl
push
lea
jne
pusha
pushf
pushl
mov
lea
jmp
cmp
add
push
mov
pusha
lea
jmp
movb
movsbw
movb
movsbw
movsbw
pop
movb
jmp
cmp
pusha
call
xchg
mov
movb
lea
movsbl
pushf
movb
pushf
call
lea
jae
add
pushf
bsr
mov
btc
add
adc
shr
movzbl
jmp
lea
jne
movsbw
not
movzbw
mov
call
pushf
pushf
add
mov
pusha
push
movw
pushf
popl
pushf
pushf
jmp
lea
jne
btr
mov
xor
shl
setle
setnp
movsbl
jmp
movw
lea
jle
pusha
movl
pushl
call
and
aaa
mov
cmc
cmp
push
pusha
lea
jae
lea
rdtsc
push
cmc
mov
btr
btr
call
mov
jmp
not
shl
bt
shr
mov
aas
bswap
add
sar
shl
mov
shl
aas
mov
sub
add
bt
inc
mov
btc
mov
shr
and
clc
call
call
movb
not
movw
bswap
movb
mov
not
movl
movb
push
movb
cld
movl
lea
bswap
movl
push
xchg
lea
pusha
mov
movsbw
movzbw
mov
pop
cld
lahf
mov
movsbw
xchg
cld
cld
not
stc
cmc
clc
sub
adc
mov
call
cmpl
pushf
pushf
lea
je
sbb
mov
jmp
shl
xor
ror
xor
cmp
pusha
movsbw
call
sub
test
mov
call
pusha
mov
jmp
lea
jne
bts
btr
sets
mov
bsr
cmc
adc
movsbl
stc
bt
bt
cmp
call
movb
movl
movb
call
lea
je
shr
aam
xchg
mov
rcl
adc
movzwl
movsbw
sbb
bt
pusha
and
pushf
pusha
add
aad
lea
mov
test
mov
call
pusha
movl
mov
pushf
lea
jmp
lea
jne
xadd
jmp
call
jmp
lea
jne
not
dec
sbb
bswap
mov
shl
movsbl
test
cmp
pushf
call
push
cmp
push
lea
jne
and
and
mov
pusha
movsbl
stc
pusha
push
stc
cmp
pushf
pushf
lea
jne
aam
or
shr
aas
mov
sbb
test
shl
rcl
movsbl
cmc
stc
clc
cmp
jmp
movb
call
mov
sub
bt
lahf
daa
pusha
mov
call
stc
pusha
pushl
stc
cmp
pusha
pushf
lea
jmp
movb
call
movb
jmp
cmp
movb
push
pusha
lea
jne
dec
xadd
sbb
cmc
mov
sbb
rcr
pushf
stc
movsbl
jmp
movb
xchg
mov
std
call
mov
lea
jne
inc
shld
mov
movzbw
not
sub
movsbw
movsbl
push
bt
cmc
call
pusha
lea
jne
shld
mov
stc
lahf
shrd
movsbl
cmc
cmp
pusha
pushl
pusha
pushl
lea
jne
shrd
mov
rol
rcr
rcr
rcl
movsbl
cmp
test
pusha
pusha
push
lea
jne
cwtl
not
mov
call
bswap
cld
call
movl
lea
xchg
movl
movzbw
lea
bswap
movl
xchg
movb
lea
movzbw
movl
movsbw
std
not
lea
movl
movw
pop
xchg
lea
movl
cld
pop
mov
bswap
movb
cld
jmp
call
jmp
setno
and
xchg
cmc
mov
ror
mov
cmc
add
pusha
push
mov
call
movb
setbe
movb
xchg
not
std
movb
movzbw
cld
movsbw
movsbw
movb
call
push
lea
jne
inc
mov
push
aas
movsbl
cmp
cmp
pusha
mov
call
movb
call
mov
call
lea
jne
rcr
mov
xor
movsbw
bswap
movzbl
movsbl
call
rol
movsbl
push
cmp
call
pusha
pushf
lea
jne
sbb
bsr
clc
bsr
mov
shl
ror
add
bts
cmp
inc
movzbl
bt
test
pushf
pusha
cmp
pusha
call
setno
btc
shld
mov
pushf
pushl
cmpl
pusha
lea
jne
push
pusha
lea
jmp
jmp
shr
xor
dec
push
add
btc
neg
pushf
movzbl
jmp
and
bt
cmc
mov
add
jne
neg
test
mov
pushf
cmpl
pusha
push
jmp
pushf
cmp
call
jmp
lea
jne
rcl
call
mov
movl
pushf
movb
movb
jmp
bt
call
cmp
call
mov
jmp
cld
movb
call
pusha
pushf
push
lea
jne
bsf
clc
btr
ror
mov
shl
push
cmp
add
lea
clc
movzbl
pushf
clc
cmp
push
lea
jne
btc
aam
movzbw
mov
cmc
rol
movzbl
add
sar
sar
sbb
add
movzbl
jmp
pushf
pushf
lea
jne
push
lea
jmp
stc
stc
ror
jmp
mov
push
pushl
call
sub
ror
not
xadd
mov
shr
shld
mov
add
bts
adc
movzbl
mov
bsf
pushf
call
cmpl
push
pusha
lea
jne
push
push
pusha
mov
lea
jmp
sbb
mov
pushf
neg
pushf
mov
shl
mov
sar
and
mov
cmp
sub
push
bt
test
clc
xor
mov
mov
mov
movb
lea
jmp
movl
movb
lea
jmp
lea
jne
shld
jmp
lea
jne
xchg
mov
shl
shld
movsbl
push
cmp
cmc
cmp
call
movb
push
lea
jne
shl
btc
movzbw
test
mov
inc
mov
movsbl
clc
cmc
test
pushf
lea
jne
lea
call
pushf
lea
jne
push
push
lea
jmp
sub
jmp
call
call
ror
shl
mov
bsr
movsbl
test
call
je
das
not
btc
clc
mov
neg
sar
movsbl
jmp
movb
movl
jmp
shr
cmp
push
mov
jmp
movsbl
cmc
cmp
call
rcl
lea
mov
shrd
neg
movsbl
jmp
bswap
mov
bswap
movzbw
mov
call
pushl
call
jmp
pushl
mov
xor
btc
movsbl
pushf
cmp
cmp
call
cmp
call
test
pushf
movb
test
push
call
pushf
push
jmp
lea
mov
push
mov
mov
lea
jmp
and
push
bt
push
xchg
mov
rol
cmc
test
stc
sub
cld
mov
movsbw
pusha
mov
bswap
bswap
jmp
movb
pushl
movb
jmp
mov
setp
mov
test
call
clc
cmpl
mov
call
jmp
movb
cld
pusha
std
movb
call
movl
lea
je
lahf
mov
pushf
setns
stc
mov
shr
adc
and
call
mov
movl
movb
pushl
movb
pushf
movl
jmp
aam
pusha
mov
shld
movsbw
dec
mov
pop
add
aaa
bsr
xchg
cwtl
mov
bswap
or
pushl
mov
dec
mov
cmp
add
call
add
pusha
pushf
call
call
call
movl
jmp
call
call
btc
mov
movzbl
inc
shl
lea
movsbl
pusha
cmp
pushf
pushf
pushf
pushf
lea
jne
bswap
adc
mov
bt
shl
movsbl
cmc
clc
cmp
jmp
mov
mov
pusha
pushf
pushl
push
lea
jmp
movb
call
lea
jne
stc
shl
mov
add
movsbl
cmc
test
cmp
push
pushl
lea
jne
daa
mov
mov
not
not
movsbl
clc
clc
test
call
clc
pusha
mov
shld
ror
btc
xor
mov
call
lea
jne
push
movb
pushf
mov
lea
jmp
add
not
movzbl
cmp
test
push
cmp
lea
jmp
call
pusha
pushf
mov
push
mov
pusha
jmp
mov
pushl
movb
pushl
call
mov
pusha
lea
jmp
jmp
sbb
cmp
lea
bt
mov
push
pushf
call
mov
rcl
btc
add
shr
add
rcl
mov
rcl
rcr
mov
not
shr
mov
jmp
lea
jne
or
aad
xchg
btr
mov
sbb
movsbl
jmp
movb
mov
call
movb
jmp
call
cmp
jmp
bswap
seto
call
pusha
mov
pop
movsbl
movb
movb
movb
cmp
jmp
pushf
mov
pushf
movb
mov
pusha
lea
jmp
call
jmp
cmc
mov
mov
stc
test
test
jmp
movsbw
pop
lea
pushf
mov
push
bswap
movzbl
mov
pusha
jmp
pushf
lea
jne
rcr
sbb
sbb
sets
mov
call
call
cld
not
movb
mov
movb
call
call
test
bt
jmp
xchg
movb
std
not
not
movb
std
std
movsbl
std
movb
xchg
cld
movb
push
movsbw
pop
xchg
movl
not
cld
movl
setae
mov
bswap
cwtl
std
mov
push
movsbl
mov
lea
std
movsbl
xchg
mov
setp
pusha
setno
lea
cld
btc
inc
pushf
shl
xor
setb
push
mov
movsbw
movzbw
bswap
mov
jmp
jmp
std
not
movb
pushf
jmp
bt
cmp
pushf
lea
jne
bsf
mov
bsf
and
movsbl
push
lea
jge
stc
bt
cmp
pusha
lea
jne
rcr
jmp
lea
jp
mov
pusha
pushf
movw
pusha
lea
jmp
jmp
movb
call
lea
jl
jmp
shld
rcr
push
mov
sar
seta
pushf
shr
mov
pushl
mov
cmp
test
add
movl
mov
mov
pushl
pusha
jmp
pusha
call
pushf
mov
movl
push
pushf
jmp
pushf
pusha
pusha
movl
pushf
push
movl
movb
pushl
popl
mov
push
pushl
ret
movb
pushf
lea
movb
not
movb
push
jmp
call
not
mov
lods
cmp
jmp
lea
jne
pushf
movl
pushl
pusha
lea
jmp
mov
bswap
pusha
pushf
mov
push
mov
call
rcr
shl
shld
mov
clc
cmpl
pusha
jmp
mov
pushf
mov
lea
jmp
movb
jmp
movb
lea
jne
add
clc
cmp
mov
call
jmp
pushf
cmp
push
pusha
movb
lea
jne
push
xadd
mov
shr
stc
inc
movsbl
call
jmp
movb
call
lea
jne
sar
test
cwtl
dec
mov
bswap
movzbl
movsbl
stc
cmp
pushf
push
mov
lea
jne
pushf
cmp
ror
mov
shl
movsbl
push
bt
stc
cmp
jmp
lea
js
push
movb
lea
jne
sub
mov
das
bswap
call
movb
not
movb
pusha
setno
cld
bswap
movb
pushl
push
jmp
cmp
pusha
call
pushf
mov
call
movb
jmp
jmp
cld
stc
sbb
bt
bsf
sub
movzbl
neg
rol
xadd
mov
not
stc
sub
mov
neg
stc
sub
not
mov
xor
sbb
cmp
cmc
mov
bts
mov
cmc
cmp
xor
jmp
movl
mov
bswap
cld
bswap
xchg
lahf
xchg
mov
bswap
pop
std
mov
cld
mov
std
not
jmp
bts
sar
add
shr
mov
clc
mov
movsbw
xchg
shrd
mov
sub
cmc
ror
shl
push
mov
rcr
bts
mov
mov
cmc
cmp
cmc
add
jmp
movb
jmp
pusha
push
push
pushl
popl
movb
push
push
pushl
pushl
ret
pushf
call
lea
je
clc
popf
pushf
push
mov
lea
jmp
push
bt
stc
mov
pusha
cmpl
jmp
cmp
pushf
jmp
push
cmp
jmp
movb
pushl
movl
call
movb
call
call
push
pusha
lea
jne
lea
aaa
rcr
mov
test
rol
movsbl
pusha
movw
pusha
test
lea
jne
jne
pusha
movsbw
not
lea
jae
mov
push
mov
push
mov
pusha
lea
jmp
lea
jne
ror
pushf
mov
not
add
pushf
test
pop
movzbl
movb
cmp
movb
mov
lea
jne
push
movzbw
bt
mov
shrd
sar
ror
mov
btc
stc
cmp
lea
bts
movzbw
xor
mov
xchg
cmp
mov
lahf
mov
bts
mov
xor
mov
mov
sub
call
pushf
movb
jmp
lea
jne
sub
xor
btr
mov
aaa
cwtl
shrd
movsbl
cmp
call
movl
call
cld
movl
call
mov
movw
test
stc
mov
cmpl
jmp
pushl
popl
movb
push
pushl
ret
pusha
pushf
lea
jne
neg
jmp
jmp
call
mov
movb
pusha
lea
jmp
movb
jmp
lea
jne
aas
ror
shrd
mov
test
movsbl
pusha
pusha
cmp
movb
pushl
lea
jne
not
xchg
neg
mov
movzbl
bt
clc
not
movsbl
stc
test
pushf
cmp
push
movw
lea
jne
shl
mov
sub
movsbl
test
test
pusha
pusha
mov
call
movw
movl
call
jmp
aad
movzbw
mov
bsf
rcl
movsbl
push
movb
push
cmp
call
dec
shld
mov
pushf
pusha
movzbw
and
add
pushf
movzbl
mov
movb
cmp
movw
jmp
movb
mov
call
jmp
bt
inc
aad
shl
mov
cmc
bsf
setno
inc
add
sbb
pushf
mov
rol
mov
jmp
lea
jne
cmp
mov
ror
dec
or
push
movsbl
stc
jmp
daa
mov
not
add
shl
clc
dec
mov
rcl
adc
mov
not
mov
test
sar
push
add
mov
lea
jo
clc
pusha
pusha
cmp
pushf
pushf
pushf
lea
jae
sbb
mov
rcr
and
add
sbb
and
mov
mov
add
call
jmp
pushl
popl
movw
pushl
ret
pusha
lea
jne
neg
btr
shr
mov
bsr
add
xor
movzbl
cmc
cmc
call
movl
movb
call
stc
cmp
pushf
lea
jne
xadd
mov
pusha
add
pushf
movzbl
stc
cmp
pushf
lea
jne
aam
btc
neg
mov
neg
and
mov
movzbl
bswap
lea
neg
adc
aam
mov
bsf
mov
btc
bts
clc
mov
rol
add
ror
ror
mov
sbb
mov
push
shld
xor
shld
mov
pushf
cmp
bt
pushf
div
cmc
jmp
setbe
and
mov
inc
push
add
and
bsf
mov
sub
shld
rcr
xadd
mov
rcr
movzwl
test
jmp
movb
call
movzbl
bswap
xor
movsbl
bt
bt
cmp
jmp
push
pusha
pusha
pushf
mov
movsbl
mov
pop
pushf
push
pushf
movb
pushl
ret
movl
pushl
movb
movl
call
movb
pushl
lea
jbe
movb
push
cld
bswap
setbe
movb
setge
call
push
pusha
push
lea
jne
pushf
pushf
movb
lea
jmp
movl
jmp
movb
movb
call
cmpl
pushf
pushf
jmp
push
mov
movl
mov
call
clc
cmc
sub
pushf
jmp
call
push
test
mov
stc
cmp
call
jmp
call
lea
jne
aam
cmp
mov
cmp
add
clc
movzbl
cmc
cmc
call
lea
lea
setne
not
push
mov
push
jmp
jmp
movb
movb
movb
movb
mov
lea
jmp
movb
call
jmp
call
lea
jne
push
movb
push
pusha
lea
jmp
jmp
lea
jne
adc
inc
mov
push
movsbl
cmp
stc
cmp
jmp
jmp
pushf
push
lea
jne
bt
clc
mov
shrd
shl
movsbl
jmp
lea
jne
pusha
stc
stc
btr
mov
clc
mov
movsbl
cmp
pusha
bt
cmp
call
call
xor
movb
lea
jmp
jmp
setno
movzbl
pushf
movb
movsbw
jmp
lea
jne
push
mov
not
ror
add
rol
rol
rcr
pushf
movzbl
mov
push
clc
cmp
pusha
movb
push
lea
jne
setle
movsbw
mov
dec
push
bsr
add
ror
movzbl
cmc
stc
cmp
mov
pushf
lea
jne
inc
sub
mov
movzbw
shr
shld
add
btr
add
push
stc
movzbl
jmp
pushf
movl
jmp
movb
jmp
pushf
mov
test
pusha
add
movb
movb
pusha
mov
pushf
mov
pushf
lea
jmp
pushf
lea
jae
mov
movzbl
setns
mov
xadd
mov
shl
push
bsf
push
add
xor
push
movzbl
stc
stc
pushf
xor
test
sar
or
sbb
mov
test
pushl
clc
cmc
add
pusha
mov
pushf
pushf
mov
pushf
lea
jmp
mov
jmp
cmp
push
push
lea
jne
movzbl
call
push
movb
bswap
movl
jmp
mov
pop
mov
movzbw
call
movsbw
push
jmp
cmp
call
pusha
push
lea
jne
sar
push
neg
xor
mov
bswap
movsbl
stc
test
cmc
test
pusha
pushl
push
pushl
lea
jne
lahf
setbe
mov
push
pushf
mov
mov
push
pusha
lea
jmp
bt
stc
clc
popf
pusha
pushl
pusha
lea
jmp
jmp
movb
lea
jp
push
movl
movl
pusha
lea
jmp
lea
jne
push
push
lea
jmp
push
xchg
call
mov
pop
movb
pop
mov
lea
lea
movsbw
movzbl
mov
pushf
lea
jmp
dec
pushf
jmp
lea
jne
not
add
mov
sbb
ror
btc
btr
add
bswap
movzbl
cmc
cmp
pushf
cmp
push
lea
jne
btc
bsr
rcr
mov
sar
shrd
jne
add
aas
call
mov
rol
btc
btr
pop
mov
stc
pusha
cmc
pushl
add
pushf
pushl
mov
mov
mov
mov
lea
jmp
call
push
movb
lea
movb
pop
movb
xchg
std
pop
movb
pop
call
movzbl
movb
movzbw
lea
movb
setle
bswap
pushf
pushf
movb
movsbw
pop
cld
movl
movsbw
pushf
setae
not
movl
lea
not
jmp
pusha
movl
call
std
push
std
pushl
movb
lea
pushf
movsbl
movb
push
movsbl
movb
not
movb
std
lea
lea
movb
sete
movb
jmp
call
pushf
call
call
pushf
cmp
cmp
call
mov
jmp
clc
setb
pusha
bt
mov
call
btc
cmp
lea
not
mov
call
movb
jmp
push
movb
mov
pushf
lea
jmp
call
jmp
or
add
xor
shl
mov
das
stc
xchg
mov
clc
daa
jmp
pushf
lea
jmp
lea
jne
clc
shld
mov
bt
movsbw
ror
bsf
movsbl
pushf
cmc
clc
cmp
jmp
pushf
mov
mov
push
movb
lea
jmp
movl
movb
movw
movb
jmp
xor
neg
mov
clc
push
cmc
cmpl
mov
movb
lea
jne
pushf
movb
mov
lea
jmp
movb
bswap
movb
xchg
jmp
pusha
lea
jne
not
bts
mov
shl
add
movsbl
clc
bt
cmp
cmp
call
movb
jmp
clc
cmp
pushf
pusha
lea
jae
btr
aam
mov
movzbw
mov
btc
bsr
pushf
add
bswap
pop
mov
test
clc
rdtsc
mov
clc
aam
mov
das
rcl
sub
shrd
shld
bsf
shr
shr
pushf
inc
push
mov
test
cwtl
mov
cmp
movw
add
jmp
jmp
jmp
pushf
jmp
add
test
mov
or
mov
btr
add
lea
bswap
pushf
mov
pushl
mov
mov
jmp
pushf
pushl
mov
jmp
jmp
mov
movb
jmp
jmp
jmp
pushf
jmp
mov
call
pushf
mov
pusha
movsbw
mov
movb
pusha
push
pushl
ret
test
pushf
cmpl
pusha
push
lea
jg
jne
push
mov
mov
pushf
lea
jmp
adc
sub
shl
movsbl
bt
bt
jmp
cmp
pushf
jmp
movl
push
pushl
popl
pushf
pushf
mov
pushl
ret
movl
call
cld
lea
movsbw
movl
xchg
push
call
call
pusha
movl
call
mov
movb
jmp
movzbw
bswap
movb
xchg
movb
seto
movb
pushf
movb
setbe
setl
movsbw
movb
setp
jmp
cmp
call
pushf
cmc
cmp
jmp
mov
setnp
mov
mov
lea
jnp
push
pusha
pushf
movl
jmp
mov
movb
std
mov
cld
jmp
jmp
jmp
call
movl
lea
push
push
movl
movsbw
movl
xchg
jmp
pusha
clc
pushf
cmpl
jmp
pushf
jmp
mov
btr
ror
pusha
movzwl
pushf
pushf
clc
push
sar
clc
jmp
add
btc
mov
push
push
pushf
add
pusha
jmp
pushl
movb
call
push
movl
lea
jae
aam
bsf
bsr
rcl
mov
stc
add
cmc
mov
rol
add
not
mov
not
mov
pushf
call
lea
jne
setns
aas
bt
mov
shr
neg
btc
call
lea
jne
btr
mov
rcl
xor
movsbl
bt
bt
pusha
call
xor
stc
movsbl
pushf
clc
pusha
stc
cmp
call
pusha
mov
mov
pusha
push
mov
lea
jmp
lea
imul
aaa
mov
shl
shl
mov
bt
cmp
pusha
pushf
push
lea
jae
movzbw
rdtsc
push
mov
lea
imul
ror
shl
seto
cmc
mov
pusha
ror
movsbw
not
mov
pushl
dec
add
movsbw
mov
bswap
imul
bswap
bsr
setp
cmc
mov
rol
mov
bt
add
movzbw
setbe
pop
xchg
mov
bswap
movsbl
mov
push
mov
mov
push
mov
pushf
movb
mov
lea
jmp
push
mov
pushf
lea
jmp
movb
mov
jmp
movb
xchg
call
cmc
jmp
pusha
lea
jne
push
lea
jmp
pushf
movb
movl
call
movzbw
bswap
mov
pushf
push
mov
mov
lahf
mov
movsbw
cld
jmp
lea
je
stc
cmpl
push
movb
lea
je
stc
movl
mov
mov
jmp
mov
pushl
jmp
cmp
call
lea
je
pushf
seto
bsr
mov
pushf
cmp
cmpl
lea
jne
je
sub
aas
bts
jmp
lea
jne
jmp
movb
jmp
push
pusha
lea
jne
xadd
bswap
mov
cmc
lea
dec
shl
add
clc
movzbl
cmc
cmp
push
pushf
push
lea
jne
ror
setb
pusha
neg
mov
or
not
and
call
pusha
mov
pushl
pushf
lea
jmp
jmp
clc
mov
cmp
clc
stc
pusha
cmpl
pushf
pushl
mov
lea
jne
push
lea
jmp
pushf
pusha
mov
pusha
pushf
jmp
call
bt
cmp
cmpl
pusha
lea
je
call
sets
mov
movb
lea
movb
movzbl
call
cmp
lea
je
push
lea
jne
or
call
lea
jne
jmp
jmp
pusha
lea
jne
rol
shld
mov
add
shl
movsbl
pusha
mov
push
cmp
movw
jmp
div
pushf
pushl
mov
stc
neg
movsbw
rcl
mov
jmp
push
movl
lea
jne
pushf
shld
mov
neg
call
lea
jne
btc
mov
cmp
clc
mov
or
sar
call
pusha
pushf
push
movl
movl
pushf
pushf
lea
jmp
mov
bts
pusha
mov
call
movb
call
pushl
cmp
jmp
setl
movzbl
dec
mov
push
movl
jmp
mov
rcr
dec
call
jmp
mov
push
push
lea
jne
shl
mov
lahf
mov
cmp
mov
test
call
mov
movb
movb
jmp
bt
mov
bt
jmp
mov
mov
mov
std
bswap
movsbw
mov
movzbl
mov
movzbw
movsbw
movzbw
not
cld
rcr
setp
xor
shrd
mov
or
xchg
mov
clc
movzbl
xchg
jmp
cmp
add
jmp
movb
movl
pushl
call
movb
jmp
cmpl
pusha
lea
jne
push
lea
jmp
mov
jmp
bt
pushl
cmp
add
pusha
jmp
movb
call
push
call
movb
movb
movb
jmp
call
movb
lea
jne
clc
rol
test
mov
bswap
xor
movsbl
cmc
clc
test
push
lea
jne
movsbw
pushf
jmp
lea
jne
pushf
lea
jmp
movb
movw
jmp
lea
jne
bts
neg
mov
cmp
shl
ror
add
shrd
jmp
mov
movl
cmpl
call
jmp
and
call
call
mov
jmp
movw
movb
mov
push
mov
pushf
lea
jmp
movb
pop
jmp
pushf
lea
jne
adc
shrd
stc
mov
bts
test
or
movsbl
call
jmp
cmc
std
popf
push
lea
jmp
mov
lea
jle
push
lea
jne
pusha
push
pusha
lea
jmp
mov
movsbw
movb
xchg
movb
call
call
call
pushf
movb
push
lea
jne
sar
shl
movzbl
mov
shr
rol
shrd
movsbl
cmc
pushf
cmp
pushl
pushl
call
mov
movb
movb
call
not
movb
movsbw
jmp
movb
call
xadd
mov
shl
bts
mov
pushf
rcl
setnp
add
add
push
mov
call
pushf
call
cmp
div
call
movl
pushl
movl
movb
push
lea
jo
movl
call
lea
jne
pushf
pusha
pushf
mov
lea
jmp
jbe
push
sub
pushf
pushf
pushf
lea
jne
push
pushl
xchg
mov
movzbl
lea
bswap
jmp
jmp
lea
jne
shld
pushf
setns
mov
shl
add
movsbl
pusha
call
pushf
mov
pushf
lea
jmp
pushl
popl
push
pushf
pushl
ret
mov
movb
jmp
call
bswap
movb
xchg
push
movb
xchg
jmp
call
pushf
lea
jne
pusha
mov
push
lea
jmp
cmp
mov
call
ror
rcr
add
movzbw
push
movzbl
cmc
cmp
cmp
pushf
call
cld
movb
not
call
btc
shl
xor
clc
mov
call
pusha
mov
jmp
call
cmpl
call
lea
jne
pushf
pusha
pushf
lea
jmp
jmp
movl
movb
push
movl
movb
movl
pushf
movl
jmp
movb
call
xchg
movb
movsbl
movb
pop
js
std
pusha
movb
cld
lea
movb
std
movsbl
movb
pushf
lea
jo
std
movb
lea
movzbw
movb
jmp
pushf
lea
movb
jmp
mov
lea
jne
jmp
shrd
pop
movzbl
stc
cmc
push
cmc
cmp
pushf
pushf
lea
jne
sbb
pusha
mov
call
sub
movsbl
clc
stc
cmp
pushl
pusha
call
pushf
movb
mov
std
cld
movb
jmp
cmp
jmp
movb
call
pushf
movw
movl
call
movb
jmp
lea
jbe
cld
rol
rol
bt
xor
rcl
mov
movzbw
rol
mov
sub
clc
ror
mov
and
test
rcl
mov
bsr
mov
jmp
mov
shl
or
bts
movsbl
pushf
call
lea
jne
mov
btc
stc
mov
rol
bt
call
pushf
cmp
cmp
movb
lea
jne
bsr
das
call
movw
movb
movb
mov
movb
jmp
lea
jmp
jl
pusha
mov
pusha
mov
pushf
push
call
pushf
mov
lea
jne
adc
xor
call
movsbw
pusha
mov
pusha
jmp
pushf
movb
setae
not
movb
pushl
cld
setne
movb
movzbl
lea
movb
setp
lea
setno
movb
pushf
xchg
pop
movb
call
pushf
movb
lea
je
and
aas
mov
bt
test
jmp
call
pushf
lea
jne
das
mov
neg
pushf
btr
movsbl
stc
call
call
mov
movb
jmp
test
cmp
push
lea
jae
push
jmp
pusha
pushf
lea
jne
stc
sbb
mov
xor
sbb
add
sbb
movzbw
clc
movzbl
test
bt
pushf
cmc
cmp
push
movw
lea
jne
test
cmp
mov
daa
mov
shl
pusha
mov
bsr
lea
pushl
rdtsc
stc
shl
mov
neg
movsbw
rcl
bts
mov
rcr
cmp
mov
stc
btr
seto
mov
stc
mov
rcr
shld
xor
not
inc
mov
clc
div
call
movb
pushf
movb
pushl
movb
pushf
movb
lea
pushf
movb
call
movb
mov
movb
call
call
bsf
mov
pushf
push
xadd
mov
bts
cmc
and
cwtl
mov
shr
neg
mov
cmp
stc
test
sub
mov
bt
call
bt
pushf
add
mov
pusha
mov
pusha
mov
mov
movb
lea
jmp
cmc
clc
cmp
pusha
pushf
pushf
lea
jne
stc
mov
neg
bt
movzbw
add
cwtl
neg
bsr
movsbl
movzbl
stc
cmp
jmp
movb
jmp
jmp
pushf
movl
jmp
call
push
pusha
pusha
movl
pushf
lea
jmp
push
jmp
lea
jmp
jmp
movb
movw
movb
call
movb
call
lea
jne
sar
sar
mov
shrd
movsbl
clc
test
cmp
jmp
movb
movb
movb
call
jmp
cmp
jmp
movzbw
movb
push
bswap
push
movb
pushf
not
jmp
pushf
bt
pushf
cmp
pushf
lea
jne
not
lahf
mov
aam
add
bsr
bts
and
aaa
movzbl
jmp
bt
cld
stc
popf
push
push
mov
lea
jmp
movw
setle
movsbw
movb
not
cld
movb
not
not
call
movb
movsbl
jmp
movzbl
call
mov
lea
pushf
pushf
pushf
call
cmp
movw
pushf
push
pushl
lea
jne
adc
xadd
xchg
mov
dec
stc
add
sbb
add
shl
and
movzbl
cmp
cmc
jmp
pusha
jmp
movl
pushl
pushf
push
movl
pushl
call
cmp
call
cmp
push
cmc
cmpl
pusha
call
mov
pusha
jmp
cmp
jmp
movb
mov
jmp
lea
jmp
cmpl
pusha
jmp
cmp
pusha
pushl
pushf
lea
jne
bsr
aas
lahf
mov
bswap
movsbl
pusha
bt
cmc
cmp
pushf
jmp
lea
jne
call
pushf
movl
jmp
bt
sub
pushf
pushf
lea
jne
mov
jo
lea
pop
pushf
not
pop
not
pop
movzbl
pop
pushf
jmp
jmp
call
not
bswap
movb
cld
movb
xchg
bswap
movb
lea
movb
xchg
pusha
mov
pushl
movb
pop
pushf
xchg
push
movb
setle
movb
movsbw
bswap
movb
xchg
movb
lea
movb
std
std
std
movb
setb
mov
movzbl
xchg
movb
pushl
lea
js
movb
jmp
bswap
pushl
pusha
mov
stc
clc
jmp
mov
movb
jmp
pushf
lea
jne
ror
shl
sbb
das
mov
neg
movsbl
cmp
cmc
cmp
push
movl
lea
jne
shrd
das
mov
setno
shrd
movsbl
test
jmp
shld
movsbl
clc
cmp
pushl
lea
jne
jmp
call
lea
jne
push
lea
jmp
pushl
mov
pushf
movw
push
pusha
lea
jmp
pushf
call
movb
jmp
movb
call
adc
neg
add
cmp
mov
lea
movsbl
add
shrd
movzbl
rol
mov
pusha
mov
pusha
push
push
cmp
mov
lea
jae
das
mov
pushf
test
add
pushf
movb
pusha
pushf
push
movb
lea
jmp
add
inc
mov
lea
bsr
bsr
mov
pushf
cmp
pushf
lea
jbe
jae
adc
ror
shr
btc
movzbl
bts
sar
mov
lea
mov
test
cmp
add
test
inc
movzbl
jmp
jmp
pushf
pushf
mov
lea
jne
setno
movzbw
mov
jmp
setb
not
pushf
movb
push
mov
movsbl
pushf
movb
bswap
xchg
std
movb
jmp
call
cmp
lea
jp
push
lea
jne
lahf
lea
mov
ror
movsbl
pushf
cmp
push
mov
jmp
movb
movzbw
cld
lea
jns
pushf
movb
not
std
movl
movb
movzbl
movsbw
cld
xchg
movb
bswap
movb
jmp
movzbw
lea
bswap
push
mov
not
lea
call
rol
mov
shr
bswap
cmc
mov
mov
mov
cmc
or
sbb
movsbw
mov
rcr
sar
and
jmp
lea
jne
pusha
pusha
lea
jmp
mov
adc
jmp
clc
push
cmp
pushf
pusha
mov
call
movb
pusha
movb
call
call
lea
jne
push
pushf
movl
lea
jmp
movl
cld
cld
movl
std
cld
movl
movw
movzbl
lea
movl
movzbw
mov
movl
jmp
lea
aas
daa
bsf
mov
pusha
mov
xor
sar
mov
cmc
btc
mov
not
inc
xchg
bts
mov
test
sub
push
mov
jmp
pushf
movl
movw
mov
pusha
lea
jmp
movb
pushf
movb
not
movb
xchg
movb
pushl
movzbw
std
movb
pop
jmp
movzbw
movb
jmp
cmp
pusha
cmp
mov
lea
jne
not
mov
shrd
add
pusha
movsbl
pusha
call
std
movb
not
call
mov
mov
lea
je
pushf
lea
mov
setb
bswap
pushf
mov
lea
jnp
push
movzbw
movzbw
mov
pusha
jmp
push
mov
movb
call
call
movb
push
push
jmp
mov
pusha
movsbw
shr
mov
sar
call
movb
push
bswap
movb
call
setbe
lea
pusha
movb
jmp
pushf
lea
jne
movzbl
mov
mov
jmp
mov
movl
lea
jmp
movsbw
rcr
movzbl
stc
bt
cmp
jmp
movb
mov
movw
mov
movb
jmp
call
mov
bt
movzbw
rcl
movsbl
stc
bt
stc
pushf
cmp
pusha
push
call
cmc
xchg
mov
bsr
pushf
dec
call
mov
bswap
bswap
movsbw
mov
lea
je
push
pusha
pusha
mov
mov
movsbw
pop
pushf
pusha
push
pushl
ret
or
shrd
adc
add
shl
bswap
sub
test
movzbl
pushf
jmp
clc
clc
stc
cmp
pushf
lea
jne
or
xor
mov
bts
cmc
movsbl
push
cmp
pushl
lea
jmp
mov
std
not
movl
pop
movzbw
pop
pushf
movl
movsbw
not
pushf
mov
xchg
pushf
movzbw
mov
not
mov
pushf
mov
mov
std
bswap
cld
add
shl
xor
btr
sar
mov
mov
sbb
sar
xadd
mov
lea
ror
mov
pop
sbb
bt
mov
ror
rol
shl
bt
mov
cmc
sub
pushf
pushf
xor
movb
mov
mov
lea
jmp
jmp
jmp
movb
movb
call
mov
cmc
xor
cmc
push
bt
sub
mov
mov
pushl
lea
jmp
call
cmpl
jmp
stc
shrd
bsf
mov
rol
and
bts
bt
mov
bt
add
pushf
mov
mov
pusha
lea
jne
push
pushf
lea
jmp
mov
push
pushf
cmp
cmpl
push
pushl
lea
jp
push
lea
jne
pushf
pushl
push
lea
jmp
movsbl
bt
mov
cmp
movb
jmp
jne
ror
mov
movsbw
bsr
add
push
rcr
movzbl
pusha
pusha
cmp
pushl
call
mov
movl
movl
push
call
call
xor
mov
rol
inc
movzbl
mov
clc
push
push
add
push
lea
jne
pusha
mov
pushf
pushf
lea
jmp
not
bswap
movzbw
movb
movzbw
push
std
movb
cld
cld
pushl
push
movb
std
lea
movb
setne
movb
movsbw
movb
lea
jmp
pushf
mov
mov
sub
test
test
call
btr
push
add
mov
btr
mov
add
mov
lea
jg
clc
shr
mov
bt
pusha
stc
add
movzbw
dec
mov
adc
add
xor
xadd
mov
movzbw
lea
movsbl
push
test
cmp
pushf
pushf
mov
lea
jne
lea
xadd
mov
neg
pusha
das
btc
movsbl
jmp
call
movsbw
cld
movl
std
xchg
movl
lea
lea
jmp
stc
call
movb
jmp
pushf
push
lea
pusha
push
push
pusha
movl
lea
lahf
pop
mov
mov
pushf
call
add
mov
pusha
push
mov
pushf
cmc
mov
clc
stc
cmc
cmpl
movw
jmp
mov
movb
movw
mov
mov
movb
lea
jmp
pushf
call
call
movb
bt
cmp
push
pushl
lea
jne
bswap
bswap
mov
clc
movsbl
clc
clc
cmp
pusha
mov
pushf
jmp
movsbw
jmp
jmp
movb
jmp
dec
mov
sub
cmc
xor
pusha
movsbl
pushf
cmp
lea
jb
jne
bt
mov
setge
movsbl
pusha
cmp
movb
lea
jne
rcl
jmp
movb
call
call
lea
popa
pushf
pushl
movl
push
lea
jmp
mov
lea
ja
mov
pushf
pushl
mov
pusha
mov
pushf
pushl
lea
jmp
push
mov
pusha
lea
jne
shl
or
mov
cmc
jmp
lea
movsbl
pushf
mov
clc
cmp
push
call
lea
jne
ror
mov
daa
stc
movsbl
jmp
pusha
push
movw
lea
jne
xchg
mov
mov
xor
call
call
setbe
bswap
movb
pop
std
movb
not
bswap
cld
jmp
test
and
jmp
push
pushl
popl
pushl
pushl
ret
mov
mov
lea
jne
stc
mov
push
clc
add
add
sar
add
movzbl
test
cmp
push
push
push
pusha
lea
jmp
mov
pusha
movl
mov
pushf
push
pushl
popl
pushf
pushl
ret
mov
mov
jmp
dec
mov
pushl
push
jmp
movb
jmp
movb
mov
movb
mov
mov
jmp
add
setno
btr
bsf
movzbl
call
jmp
bts
aaa
add
shl
stc
call
lea
push
call
setp
call
shl
mov
pushf
add
pusha
clc
or
mov
add
stc
ror
xadd
mov
bswap
sar
shrd
mov
stc
cmp
pushf
call
lea
call
clc
cmp
jmp
lea
jne
rcr
aas
mov
sar
movsbl
stc
stc
cmp
call
pushl
popl
mov
pushl
ret
movb
movb
call
pusha
mov
pusha
push
movl
pushf
push
push
pushl
popl
mov
mov
pushf
movb
pushl
ret
mov
cmp
jmp
mov
movb
jmp
call
pusha
lods
test
push
cmc
movb
cmp
call
aad
mov
bts
setno
sbb
adc
mov
stc
cmp
pusha
add
pushl
pushl
pushl
mov
jmp
pushf
bt
pushl
add
pushf
pushf
mov
push
push
lea
jmp
jmp
std
movb
call
movb
mov
movb
jmp
ror
imul
pop
not
and
mov
cwtl
mov
add
pushf
sbb
push
add
jmp
push
call
lea
jmp
movl
mov
jmp
lea
jae
call
pushf
pushf
lea
jne
not
movzbw
not
mov
pushf
mov
lea
pusha
pusha
lea
jmp
pop
movb
cld
movb
setae
xchg
pushl
movzbw
movb
movsbw
movsbw
jmp
jmp
push
movb
movzbw
pushf
lea
movb
std
not
pop
movzbw
movb
movzbw
pop
movb
pushf
xchg
movb
movsbl
movb
bswap
not
std
movb
not
std
pushl
lea
movb
std
not
movb
bswap
cld
movb
lea
movb
pop
jmp
movb
jmp
movb
call
cmp
mov
lea
cmp
push
jmp
pushf
pusha
jmp
lea
rol
mov
rcl
aam
mov
movsbw
mov
bts
dec
btc
rol
mov
inc
xor
mov
movzbl
stc
add
bswap
mov
jmp
pushf
mov
movl
jmp
call
pushf
movl
pushl
movl
push
call
movl
movl
movl
call
mov
call
movb
movb
mov
movb
movw
jmp
push
movw
movw
lea
jne
btc
call
movb
movb
movb
mov
movw
lea
jmp
cmp
pusha
mov
mov
cmpl
pushf
pushf
pushf
lea
jne
pusha
movl
push
lea
jmp
mov
movb
jmp
movl
jmp
mov
movl
jmp
movl
pushl
call
shr
aad
stc
btr
mov
sbb
btc
call
mov
mov
movb
jmp
movb
jmp
push
lock
std
std
mov
xchg
push
int3
mov
ret
int
imul
xchg
adc
xor
int
sub
jge
imul
sahf
and
aam
pop
movb
xlat
das
adc
test
mov
scas
arpl
call
cmp
movsb
push
cmc
enter
or
mov
jmp
pop
fildl
lock
std
std
mov
xchg
insl
loope
aam
jo
jno
cli
mov
and
add
ss
sbb
int3
lea
cmp
inc
mov
rcl
push
push
enter
shrl
adc
test
sub
dec
add
push
shr
xchg
push
push
lods
hlt
gs
and
mov
mov
int3
sbb
inc
push
lock
std
std
adcl
inc
ret
jnp
mov
jge
imul
mov
pop
sub
xor
fmuls
lea
fxam
and
dec
inc
dec
and
aam
push
rolb
shlb
adc
test
rcr
popf
mov
or
dec
mov
inc
es
in
xchg
push
data16
and
mov
test
adc
enter
xlat
inc
push
lock
std
std
mov
push
ret
jo
movb
ret
and
pushf
mov
pop
jg
xor
jmp
jp
in
test
inc
cs
aam
pop
ret
out
shll
adc
test
lea
add
jle
inc
xchg
push
scas
test
fdivs
repnz
ror
jmp
adc
pop
std
std
test
and
dec
mov
int3
lret
sub
icebp
pushf
mov
pop
dec
ss
and
sbb
mov
dec
dec
pop
and
aam
pop
movl
mov
cmp
mov
inc
es
in
xchg
push
mulb
add
push
jp
enter
fiaddl
pop
std
std
mov
insl
aam
loopne
adc
int
iret
int
arpl
pushf
mov
pop
pushl
xor
jg
sbb
sarl
icebp
aam
pop
lret
add
call
fwait
xchg
test
mov
sahf
mov
inc
inc
add
in
xchg
push
mulb
cmp
jb
mov
jmp
sbb
dec
push
lock
std
std
mov
xchg
insb
or
inc
mov
into
fisttps
push
cltd
adc
pop
jmp
xor
fcompl
dec
jge
test
dec
xor
aam
push
ret
add
out
fsubl
adc
test
out
lcall
pusha
mov
inc
cmp
in
xchg
push
xchg
in
add
xchg
in
sbb
inc
push
lock
std
std
xchg
pusha
imul
enter
imul
ss
xchg
pop
sub
jge
cmp
and
dec
inc
sbb
aam
push
roll
aad
adc
test
es
xor
and
xchg
inc
inc
add
in
xchg
push
xchg
push
mov
enter
xchg
adc
jmp
adc
fisubrl
xchg
dec
mov
out
ss
fcom
push
arpl
jne
xchg
stc
movaps
cltd
jo
jb
or
cmpsl
sbb
std
push
scas
mov
push
insb
or
mov
sub
aas
xor
andl
loop
xor
shrl
cltd
push
push
enter
xlat
xor
mov
lds
adc
repz
movsl
jae
in
leave
cmp
sahf
ret
dec
inc
aad
ret
inc
add
jo
xchg
loop
hlt
mov
lret
loop
cmp
in
jne
test
mov
wrmsr
mov
pop
and
jb
dec
addb
int3
fldcw
xchg
ret
loope
push
xor
xor
ret
cmc
mov
mov
nop
pop
dec
fcoms
das
mov
lcall
ret
into
adc
dec
shld
jnp
adc
xchg
data16
out
sub
pop
arpl
sbb
lods
lock
xchg
mov
mov
jmp
fsubs
and
xchg
ljmp
mov
sbb
stc
jb
add
lods
sbb
loop
jns
outsl
push
aaa
rcrb
fnsave
int3
insb
or
stos
je
xchg
mov
cmp
scas
adc
sbb
cs
push
lretw
or
std
mov
fldt
aam
pop
mov
pop
fwait
notl
adc
lock
lods
jp
in
or
arpl
push
mov
mov
adc
repz
xchg
in
insb
push
push
popa
xor
mov
pop
sub
mov
repz
mov
in
push
orb
mov
aaa
dec
push
inc
rol
std
fdivr
lea
nop
testl
outsl
aas
mov
arpl
jae
jae
out
and
adc
repz
xor
nop
pop
jnp
loop
mov
pop
mov
addr16
sub
push
arpl
ficoms
cmp
lods
lock
push
ja
adc
ret
push
int
lock
xchg
cltd
movaps
jb
or
pmaxsw
jns
outsl
push
daa
mov
xor
jnp
mov
cmp
mov
sbb
ret
leave
push
xchg
or
inc
fldt
fldl
jnp
or
mov
pop
jnp
adc
addr16
movsb
arpl
in
jmp
dec
inc
aad
jp
insl
inc
loopne
push
icebp
xor
stc
jmp
out
pop
pop
inc
jmp
mov
xor
inc
pop
push
lock
faddl
div
xchg
fcmovne
lcall
cmp
icebp
pop
cmp
addb
clc
enter
fists
daa
push
cmp
shll
out
and
into
subl
add
xchg
cwtl
jnp
jnp
inc
dec
dec
and
mov
out
ficoms
cmp
lods
lock
cmp
mov
xor
repnz
push
iret
push
cmp
mov
cmp
sub
xor
into
lods
sbb
call
and
lret
push
sub
jl
mov
add
xchg
mov
sbb
psrlw
push
jbe
adc
lods
adc
int
adc
push
dec
popf
scas
xchg
xchg
sub
ficompl
mov
lret
mov
iret
fwait
sbb
incb
aas
out
in
stc
cmp
dec
aad
aad
addr16
mov
insb
push
addb
xlat
cmc
repz
loopne
scas
inc
inc
push
xchg
xor
cmc
aas
inc
push
cmp
fadd
out
pusha
addb
xchg
lds
loope
push
cmp
inc
cmp
inc
inc
lcall
nop
daa
dec
clc
sahf
sub
enter
mov
icebp
out
sub
adc
push
xchg
fildl
push
lock
mov
push
mov
loope
in
inc
sub
stos
pop
das
jmp
ficoms
sbb
lods
lock
mov
jb
cmc
loope
add
fdivs
das
out
repz
iret
test
and
sub
pop
jb
bswap
test
repz
bound
or
lods
jo
xchg
mov
dec
repz
push
add
loop
ret
cli
sub
pop
adc
jnp
and
push
xorl
imul
adc
icebp
dec
scas
push
in
fnstenv
bound
push
test
and
or
addl
clc
mov
adc
lods
pop
movb
xor
mov
pusha
jns
pop
and
mov
inc
outsl
orb
enter
rclb
xor
jge
and
bound
sti
sbb
mov
nop
xlat
inc
enter
in
sbb
out
enter
add
popf
adc
push
add
push
xor
xchg
inc
jnp
and
ret
dec
sbb
out
sub
pop
arpl
into
ficoms
fsub
lods
lock
fistpll
orl
cmp
add
push
into
testb
xchg
xchg
test
sbb
into
mov
mov
aaa
pop
push
jle
jle
aad
bts
fucom
xchg
add
push
jg
add
push
int3
xchg
call
sub
mov
mov
and
lods
xor
pop
sbb
adc
je
inc
stos
jmp
outsb
xchg
int
dec
aad
enter
mov
mov
jecxz
decb
lock
and
cmc
movsb
push
fists
xor
pusha
mov
xadd
cmp
aad
out
outsb
xor
out
fmull
lret
repz
loope
push
xor
and
sub
inc
push
lock
push
orb
inc
inc
js
sub
mov
arpl
xchg
in
out
and
push
iret
xchg
adc
jecxz
cmp
add
popf
aas
jnp
inc
push
and
mov
outsb
sbb
and
pop
arpl
iret
ficoms
js
lods
lock
mov
jle
or
in
aam
add
jecxz
ret
hlt
into
xor
sub
jb
push
into
test
sbb
lea
xlat
push
push
push
jae
mov
jle
xchg
mov
jecxz
add
pop
pop
popa
add
add
fistl
pushf
push
data16
sub
lahf
sahf
test
fists
repnz
lret
packssdw
adc
stc
inc
cmpsl
mov
in
cltd
cmp
ret
inc
inc
aad
add
jb
sbb
xor
aad
loopne
repnz
enter
out
test
xor
scas
iret
loopne
cmp
rolb
out
outsl
andb
xchg
int
dec
ljmp
insl
mov
cmp
repnz
mov
aaa
inc
call
sarb
add
cmp
and
pop
leave
cwtl
adc
mov
stos
or
sbbb
bound
out
popa
xchg
sub
ficoms
js
lods
lock
in
call
stos
jno
jne
and
add
xor
ret
xchg
gs
scas
sbb
int
adc
pop
push
pop
adc
xchg
mov
xchg
add
enter
inc
test
push
scas
jmp
sub
xchg
xchg
sub
or
mov
iret
fwait
aaa
push
adc
clc
inc
cmpsl
clc
push
in
cltd
aas
addr16
enter
push
lcall
popf
fiadds
stc
in
sti
xor
xor
aad
movsl
cli
ja
xor
inc
pop
mov
cmp
fcmovnb
out
outsb
xorb
push
fcmove
cltd
lret
aas
dec
in
popf
push
xor
xor
inc
dec
rol
cld
sbb
dec
test
sub
mov
ss
dec
out
das
add
pushf
adc
adc
mov
in
popf
jne
push
popf
adc
lods
daa
das
bound
arpl
cmp
or
adc
pop
mov
lods
jns
jmp
outsl
fdivrl
leave
ljmp
or
xchg
sub
or
mov
js
pushf
addr16
and
add
xor
sahf
adc
sti
loope
repnz
sub
scas
fsubl
mov
xor
xchg
clc
sbb
add
mov
mov
loopne
repz
scas
es
xchg
mov
push
arpl
and
mov
sbb
inc
inc
dec
mov
add
movsl
xchg
xor
in
repz
sbb
mov
pop
shll
jns
sbb
loop
jp
jp
push
loope
inc
das
in
pop
sbb
or
mov
fldcw
and
ljmp
mov
lods
xor
mov
jle
push
fdivl
pusha
add
ss
push
inc
sti
mov
push
call
inc
and
pusha
lea
jne
aam
lahf
push
dec
xor
shr
mov
shl
add
pusha
mov
call
lock
xor
mov
mov
imull
call
test
je
push
cmp
cwtl
les
lahf
jne
es
cmp
inc
cmp
sub
dec
jo
cmp
push
mov
loop
pop
mov
jbe
inc
scas
adc
repz
repz
aas
push
sbb
loope
sbb
out
movsb
sub
add
dec
xor
add
add
sbb
xchg
sbb
push
sub
add
add
add
add
add
icebp
sbb
add
add
mov
add
add
add
add
daa
sbb
dec
xor
add
sbb
popf
inc
sbb
push
sub
add
add
add
add
imul
inc
outsl
outsb
je
outsl
insb
jae
mov
push
loop
mov
jbe
insb
js
or
subb
fmuls
cs
push
jb
inc
cs
lret
push
std
xor
jecxz
rcrb
jge
inc
lds
into
in
inc
or
mov
mov
dec
and
push
les
pop
iret
int
movsl
jge
xchg
incb
mov
mov
das
pop
add
jge
hlt
push
orl
ljmp
ds
xchg
fldenv
ds
mov
sbb
imul
xorb
lret
lea
pusha
pushf
movl
push
mov
mov
pushf
pushf
pushl
ret
dec
pop
mov
dec
and
fidivs
test
cld
pop
jb
dec
xor
dec
cmp
or
or
inc
rcrb
xchg
lea
stos
jae
jmp
push
js
xchg
cmp
push
int
enter
nop
jns
jp
mov
inc
fdivs
lds
pop
pusha
xor
push
fbstp
sbb
cmp
sub
test
popa
and
mov
jo
ror
jbe
xor
jl
and
sub
cmp
rorb
push
jg
scas
ss
sbb
call
int3
mulb
std
xor
ss
cmc
xor
enter
fcmovnu
int
cmpsl
pop
clc
adc
inc
das
xchg
sbb
pop
test
push
mov
pop
test
pop
cmp
dec
test
dec
je
push
push
lahf
xor
repz
stos
adc
rol
and
mov
lea
je
cmc
sub
pusha
cmc
test
cmc
cmp
jmp
call
test
push
push
jmp
add
push
imul
jb
add
push
bnd
sbb
pop
repz
aaa
nop
movsb
mov
rclb
pop
pop
popa
lea
sahf
sar
icebp
cmp
inc
push
in
sbb
inc
push
or
push
inc
push
mov
push
das
mov
and
dec
add
loop
add
adc
sbb
jmp
incl
push
popa
xor
and
jno
hlt
scas
into
sub
pop
stos
xchg
fwait
push
imul
das
jg
lretw
dec
and
int3
loopne
mov
adc
and
sub
loope
aam
xchg
scas
call
insb
clc
sub
imul
aaa
jae
cmpsb
mov
add
nop
ljmpw
lock
fstps
sub
mov
push
jmp
pop
sar
ja
pop
add
xchg
popa
jmp
mov
mov
xlat
addl
sbb
xchg
jnp
mov
xor
adc
lcall
pop
rorb
mov
mov
dec
xchg
jns
dec
xor
lret
je
stos
filds
push
lea
and
loop
incb
adc
mov
dec
add
nop
jmp
mov
lea
jae
cmp
push
pusha
jmp
out
inc
mov
xor
jae
xchg
pop
orl
mov
add
inc
sub
je
mov
xor
imul
arpl
xchg
sub
inc
mov
addb
sub
stos
and
inc
push
jns
mov
icebp
movzwl
stc
sar
clc
mov
cmp
pushf
movw
pushf
add
cmp
mov
pushf
test
mov
call
adcb
xor
mov
sti
jno
in
add
add
sbb
xchg
sbb
shrl
adc
dec
pop
mov
test
test
and
xchg
ds
or
fs
push
sub
sub
or
xor
and
gs
sbb
dec
inc
imul
notb
push
mov
and
cmp
mov
movsl
bound
push
aam
and
xchg
lods
push
lods
push
mov
scas
test
shl
push
mov
push
cli
jbe
test
cmc
sbb
pop
vmovaps
dec
sti
xchg
jl
jb
push
mov
les
inc
fsubrl
out
jb
xor
jnp
mov
and
repz
int
sti
divl
jbe
shl
mov
test
movsb
lcall
scas
xor
push
mov
pushf
ret
mov
fbld
push
sbb
subb
add
pop
out
push
call
notb
in
adc
cmp
mov
sub
xor
pop
push
inc
idivb
rol
mov
xchg
xchg
ds
sti
jl
adc
mov
xchg
daa
sbb
enter
inc
mov
and
dec
mov
sbb
lock
lret
add
mull
mov
mov
int3
mov
jg
into
sbbb
xor
push
ja
adc
xchg
inc
mov
inc
xchg
iret
push
jp
cmp
push
sbb
add
bound
adcl
jbe
nop
stos
mov
mov
lret
add
popf
or
adc
push
insb
dec
pop
in
pusha
outsb
cld
call
adc
mov
or
rcr
push
cmovns
mov
push
insl
cmpsb
int
dec
mov
dec
pop
mov
nop
jb
icebp
outsl
insl
jns
cmp
sub
lods
add
jecxz
ret
in
orl
out
mov
add
mov
adc
call
lea
push
mov
pusha
mov
lea
jmp
mov
push
lea
lea
pushf
call
push
pushf
lea
ja
shr
sub
sub
add
bswap
mov
inc
mov
shr
push
mov
stc
bt
bt
clc
repnz
pushf
jmp
out
cmp
push
sar
in
inc
mov
rcrl
mov
repnz
std
sub
inc
loop
xlat
jge
popf
icebp
push
mov
test
popf
jae
inc
cs
aas
and
xchg
sub
push
fcom
lcall
pusha
or
adc
mov
dec
mov
push
std
ja
repz
xor
cmpsl
inc
push
fcom
es
out
shl
pusha
lret
daa
pop
mov
mov
xlat
mov
imul
pop
xchg
outsb
stos
pop
jbe
push
loope
inc
hlt
push
mov
inc
inc
push
test
add
aaa
inc
mov
pushf
enter
mov
mov
aad
xor
stos
test
and
dec
jbe
cmpsb
or
sub
dec
data16
addr16
mov
and
sbb
shrl
xor
adc
ret
xor
push
fcom
ret
fisttps
out
pusha
fisubl
leave
aad
cmc
sub
dec
jecxz
xchg
cmp
idiv
loope
daa
inc
xchg
mov
mov
outsb
cld
sbb
lret
pop
addb
jbe
mov
out
inc
test
xor
jge
ss
shufps
cmc
insb
loop
pop
jne
adc
loope
popa
das
mov
sbb
mov
and
jae
sarl
sbb
lods
inc
das
add
repnz
sbbl
es
in
mov
inc
pusha
mov
push
lea
jb
jmp
arpl
in
xor
js
lods
scas
lcall
fcom
inc
pop
jle
in
pusha
subb
mov
sbb
and
fcompl
addr16
iret
arpl
adc
jl
hlt
popa
dec
cltd
xchg
test
or
mov
jnp
xchg
or
adc
dec
mov
test
jmp
sarb
jb
loop
popa
je
pop
and
test
jo
aam
pop
dec
mov
out
xchg
je
cmp
roll
gs
inc
jp
sub
push
clc
pop
cli
adc
xchg
dec
aam
repnz
loope
add
call
xor
lods
clc
lods
sbb
sbb
inc
sarl
inc
cs
pusha
adc
cmp
cwtl
sub
push
sbb
cmpsb
or
pop
popa
in
mov
dec
out
push
lahf
out
pop
jns
pop
rcrl
lahf
insb
push
js
jb
push
dec
add
stc
inc
sti
pop
mov
cltd
sbb
shr
push
test
gs
cld
adc
add
ret
mov
je
adc
mov
aaa
lea
mov
pop
adc
jg
jnp
mov
test
rcrl
mov
repnz
addl
leave
jbe
movsb
or
sbb
bnd
aaa
adc
push
xor
rorl
lods
mov
fidivl
sbb
into
jb
leave
popa
sbb
icebp
sbb
inc
pop
inc
jae
mov
fimull
rcrb
ficoms
ds
test
sbb
xchg
mov
dec
fidivl
inc
or
stc
ja,pt
in
mov
add
subl
push
jecxz
mov
add
adcl
addl
cmpsb
faddp
push
add
loopne
lock
xor
lds
mov
dec
shrd
rcl
add
add
rol
mov
sar
mov
pusha
mov
stc
push
repnz
pusha
movb
lea
jns
jne
lahf
bswap
cwtl
movb
jmp
mov
pushf
pushf
pushl
lea
jmp
sub
cmp
pusha
pushl
popl
test
push
mov
cmc
cmp
call
add
ja
jbe
dec
jne
inc
gs
outsl
jae
je
outsl
outsb
add
xlat
bt
add
cmp
mov
bt
call
push
lods
bt
clc
not
sub
jnp
test
push
add
bt
ror
movw
push
dec
stc
pushf
pusha
cmp
pop
lea
lea
js
lea
lea
lahf
pushf
movzbw
mov
movb
jmp
push
out
push
lds
test
cmp
xchg
in
cmp
lock
fmull
sub
dec
push
jle
push
bound
xchg
push
js
sbb
aas
sbb
cmp
hlt
inc
xchg
adc
bound
cmp
push
ljmp
mov
xor
leave
out
inc
xor
sbb
sbb
shrb
push
add
inc
dec
xlat
fildl
scas
dec
test
push
mov
cli
test
dec
lods
inc
or
mov
add
push
jns
push
cmpsb
push
cmc
jg
int
out
mov
adc
cmc
xor
cmc
mov
sub
xor
sub
xor
push
add
cmc
insl
outsl
jnp
jno
ret
pop
jbe
push
cmp
and
mov
jb
mov
sahf
rcrb
shlb
das
leave
ja
dec
neg
sbb
mov
cmc
cmpb
pushf
lea
jne
shr
shl
adc
clc
sub
rcl
shld
mov
sets
jmp
adc
pushf
or
movsbw
mov
bsr
bsf
sbb
pusha
lea
dec
aaa
sub
pushf
mov
pusha
mov
mov
pop
mov
adc
pushf
bsr
mov
lea
sub
mov
cmp
clc
test
pushl
lea
je
cmp
ror
mov
shl
bswap
rol
add
neg
adc
xor
mov
pushf
movb
jmp
pushf
mov
pushf
lea
call
call
lea
je
pusha
add
cmc
cmc
cmp
jmp
mov
jmp
mov
jns
pop
push
movb
mov
pushl
ret
movsbw
jmp
pushl
mov
movb
pusha
pushf
mov
inc
lea
jge
push
rol
call
add
clc
pushf
push
cmp
pushf
lea
jb
pusha
cmp
movw
mov
lea
jae
setge
mov
add
shld
mov
seta
movzbw
pusha
mov
bt
mov
test
clc
sub
stc
repnz
jmp
pushf
lea
jae
push
mov
push
lea
jmp
stc
test
jmp
movl
call
lea
jne
clc
add
mov
movsbl
neg
jmp
movl
push
mov
jmp
clc
mov
not
mov
pushl
movb
stc
sub
jmp
mov
movw
mov
pushl
lea
jmp
pushf
repnz
pusha
pushl
push
lea
jne
test
shld
mov
call
add
push
gs
outsl
arpl
add
ret
bsf
dec
btr
mov
pusha
movl
cmpb
mov
call
lea
mov
call
add
pusha
bt
neg
not
mov
cmp
test
push
jmp
test
pusha
jmp
data16
insl
xor
push
jge
cmp
dec
add
std
dec
jg
popa
insl
xchg
jb
sbb
stos
push
mov
xchg
lret
pop
jmp
stos
addr16
aam
imul
out
idiv
je
hlt
ret
mov
or
repz
sarl
inc
xchg
cltd
lea
insl
xchg
dec
dec
pop
jno
insl
stos
lret
out
push
out
mov
mov
popf
arpl
push
xor
adc
push
push
inc
dec
test
lcall
out
inc
or
scas
and
mov
xor
bound
aad
pushl
sub
lods
inc
push
or
cmp
sbb
push
cmpsl
push
inc
cmp
add
and
xchg
lods
sbb
jl
sub
mov
insl
xor
pop
rcrl
es
in
nop
jns
fwait
pop
pop
arpl
adc
inc
ja
sub
fisttpl
cwtl
shlb
adc
mov
pop
xor
add
mov
or
push
xchg
mov
xchg
stos
or
pop
in
xchg
in
jg
clc
sbb
movsb
push
test
jae
leave
int
push
mov
xlat
mov
jbe
push
ret
mov
xchg
mov
je
xchg
cmp
mov
les
lea
jne
cwtl
movsbw
call
sub
push
bsf
clc
shld
lea
mov
jmp
pushf
clc
sub
cmc
cmp
jmp
pushf
push
push
lea
jae
stc
cmp
clc
cmp
add
call
stc
call
not
add
jmp
aam
shl
lahf
xor
inc
lea
bswap
aad
mov
shr
add
cmc
xor
jmp
add
add
stos
mov
cmp
add
add
hlt
mov
jno
adc
cwtl
lret
mov
push
add
add
hlt
mov
mov
pop
add
lods
dec
cmc
movb
push
movl
pusha
movb
movl
pushf
movb
lea
jmp
inc
push
fwait
jo
push
into
and
inc
jmp
jnp
jmp
xor
jno
mov
scas
and
mov
imull
lock
inc
mov
adc
jns
loope
jns
lret
test
fisubl
das
lock
pop
pop
push
orb
scas
subb
and
sbb
push
jo
push
xchg
call
xlat
jnp
ret
std
fiaddl
pop
pop
push
fdivl
in
pusha
flds
mov
inc
mov
xor
jmp
cltd
leave
lret
fists
xchg
test
outsl
insl
jns
xor
into
fisttpl
test
rep
sarl
xor
inc
xchg
sub
cs
pop
stos
addb
lcall
add
repnz
cmp
jp
or
mov
lahf
popa
mov
popf
and
movsl
hlt
xchg
scas
lret
inc
mov
push
pusha
lea
ja
test
shl
cmc
test
sub
rcl
jl
bsr
add
cmp
bt
lea
movzbw
mov
test
mov
cmc
jmp
add
jo
push
sbb
mov
mov
in
xor
rcpps
mov
xchg
cwtl
push
in
mov
aam
inc
les
xor
push
xor
dec
mov
xchg
or
mov
sar
aas
cmc
ljmp
adc
into
mov
and
xor
out
xchg
sti
inc
stos
data16
and
mov
mov
inc
gs
jb
arpl
fs
jae
add
stos
call
test
addr16
addr16
mov
xor
jb
push
jns
outsl
arpl
sbb
iret
xor
shlb
mov
sbb
fs
and
mov
sub
add
mov
xor
jns
lret
ja
addr16
iret
jecxz
arpl
inc
mov
repnz
jmp
movsb
icebp
or
xor
jle
sub
jo
cmpb
mov
push
test
push
sbb
and
test
andl
leave
xor
and
mov
ret
sub
dec
loope
push
push
mov
pusha
pushl
ret
lea
jne
movzbw
movb
mov
push
lea
call
fs
jb
push
call
hlt
jle
jle
out
push
mov
popa
sarb
sbb
cmp
insb
and
pop
arpl
mov
xchg
cltd
cmpsb
or
jmp
xlat
ret
mov
xchg
out
dec
xor
pop
popf
loope
cmpl
sbb
lret
mov
lret
es
popl
inc
mov
les
pop
and
pop
mov
inc
or
pop
aaa
into
and
test
dec
xchg
cmp
mov
fld
ss
fadd
repz
mov
lods
scas
mov
das
jecxz
jecxz
es
or
lcall
mov
mov
add
dec
mov
mov
scas
loope
jecxz
sar
xor
or
push
sti
xlat
cmp
sbb
ljmp
shlb
mov
mov
aas
cmc
push
lds
mov
stc
bt
test
bt
sub
call
pusha
add
mov
mov
lea
jmp
push
push
inc
push
xor
cs
dec
dec
add
fidivrl
add
pusha
mov
lea
jne
call
jmp
pusha
xor
call
clc
call
lea
pushl
pushf
mov
mov
movl
mov
mov
movb
mov
mov
pushl
pushl
ret
mov
pushf
stc
sub
test
mov
pushl
popl
cmc
cmc
pusha
cmp
mov
mov
pusha
movb
lea
ja
neg
sub
pusha
btr
shr
shl
sub
add
neg
mov
ror
dec
mov
pusha
movb
repnz
jmp
add
push
imul
jb
je
arpl
loop
je
push
pop
movsl
jns
jmp
data16
cmpsb
adc
pop
cld
dec
lds
mov
andl
mov
or
jns
or
mov
rcll
inc
or
dec
ficompl
cmp
adc
mov
fistl
inc
or
jmp
lods
xor
jb
mov
or
push
pushl
movb
mov
mov
pushl
ret
bswap
pop
pushf
movl
pushf
pushl
ret
movw
clc
sub
push
mov
not
jmp
push
movb
pushf
lea
ja
setne
cmc
cmp
stc
sub
sar
add
add
lea
rcl
bsr
mov
sete
mov
clc
pushf
call
movl
push
mov
pushf
pushl
pushf
pushl
ret
pushf
pushf
lea
ja
inc
sub
movzbw
push
sar
lea
add
shl
setb
push
neg
mov
or
mov
test
repnz
pusha
call
call
mov
push
pushf
lea
movl
movw
movl
movl
call
clc
stc
stc
imul
push
pusha
pushf
add
pushf
lea
jmp
pusha
movb
pushl
lea
jne
jmp
movl
pushf
lea
jmp
outsl
leave
jne
push
cmp
or
fs
adc
pop
mov
xorb
xchg
out
mov
iret
arpl
dec
test
lcall
mov
adc
inc
pop
push
imul
in
bound
sti
out
daa
sub
sti
stos
push
out
test
sub
sub
cmpsb
call
out
imul
out
ljmp
stos
sti
ljmp
sti
call
call
movsl
sti
mov
stos
jbe
push
fbstp
adc
dec
or
cltd
add
xchg
mov
mov
addr16
jmp
cmp
sbb
sub
inc
xchg
push
xor
jmp
push
test
mov
sub
out
mov
fcomp
into
mov
add
pop
inc
mov
cwtl
adc
lea
sub
push
xchg
rcrl
pmaddwd
mov
ja
push
fists
or
jb
push
sbb
add
popf
dec
mov
xor
in
rcrb
xchg
cmp
aad
out
sub
loop
sbb
add
push
das
ret
push
push
sub
mov
add
push
pop
xchg
scas
push
ds
mov
or
flds
mov
in
lock
data16
test
xchg
jp
jp
inc
dec
out
add
insl
lret
ja
push
je,pt
les
push
js
shll
lds
in
nop
clc
sbbb
jbe
ss
in
mov
shrb
pop
push
cld
pop
dec
aad
mov
cmc
dec
cmc
mov
lods
mull
int
mov
loop
out
sub
push
sbb
adc
push
sub
sub
ds
int3
pusha
xor
xor
test
fwait
xchg
in
ret
and
dec
movsb
dec
cmpsl
std
jae
inc
popf
mov
dec
inc
lcall
test
adc
add
lea
ja
pushf
movb
lea
jb
test
jmp
push
pusha
pushf
mov
call
xor
daa
jns
push
xor
fld
dec
and
jmp
sub
into
inc
addr16
adc
es
insl
and
and
das
push
pop
adc
jge
leave
fldl
and
ret
das
and
rorl
sbb
test
test
sbb
enter
clc
mov
push
cmp
jb
lods
repnz
pop
inc
cwtl
pushl
push
mov
movl
pushf
movb
movl
mov
pushf
lea
jmp
lea
je
stc
push
test
call
push
shrd
cmp
mov
jmp
testl
lahf
jae
jecxz
jbe
loopne
and
dec
int3
mov
repnz
cs
cltd
sub
dec
inc
sbb
loope
mov
mov
dec
pop
or
loope
xchg
out
sbb
xor
pop
movsb
dec
dec
jle
rcll
push
test
cmp
stos
and
pop
or
sub
xchg
loopne
pop
aad
and
gs
popa
addr16
outsl
js
add
movl
add
movb
cwtl
mov
mov
jmp
clc
not
mov
jmp
rolb
inc
jp
push
aad
add
cli
ss
sbb
mov
xor
and
sbb
or
stos
push
sbb
stos
jbe
add
les
xor
mov
movsb
or
sbb
push
es
pop
pop
test
jle
aam
mov
adc
or
mov
pop
test
jl
mov
sbb
cmp
pop
test
pop
jl
mov
pop
test
int
stos
cmp
je
test
dec
jl
das
mov
push
test
jl
cmp
adc
xor
sbb
mov
sbb
mov
pop
test
jl
mov
inc
test
mov
sbb
inc
mov
sbb
xor
sbb
xor
sbb
mov
adc
mov
mov
sbb
mov
adc
aam
mov
inc
test
jl
mov
push
test
mov
sbb
xor
push
test
and
mov
pop
test
jl
mov
sbb
mov
adc
mov
adc
add
mov
pop
test
inc
jl
xor
pop
test
mov
push
test
pop
jl
das
mov
adc
dec
mov
inc
test
adc
push
aas
rcll
pop
test
jle
jb
mov
sbb
mov
adc
dec
inc
mov
inc
test
add
mov
sbb
mov
pop
test
jl
mov
sbb
mov
pop
test
jl
cmp
pop
test
push
jl
aaa
mov
adc
dec
dec
mov
sbb
cmp
xor
test
mov
pop
test
mov
lahf
lea
movb
lahf
mov
mov
setg
lea
pushf
call
pop
icebp
pop
jge
push
xchg
std
inc
sub
mov
pop
jmp
daa
cwtl
ja
pop
pop
sbb
inc
in
pop
pop
es
pusha
add
mov
xlat
cmc
bound
push
out
xor
xor
fwait
jno
jg
cltd
leave
lahf
xlat
cltd
jbe
mov
in
fimuls
leave
pop
movl
cltd
mov
stc
mov
add
mov
loope
popl
in
or
mov
jbe
into
mov
lods
xor
inc
dec
mov
fwait
in
sub
out
and
push
xlat
mov
push
push
jns
dec
dec
addr16
mov
mov
in
mov
adc
loopne
fwait
in
mov
popf
hlt
adc
xor
sbb
fcoml
mov
movsl
cmp
add
cld
sbb
shrl
cwtl
insl
js
mov
sbb
sahf
iret
inc
pop
insb
jl
xchg
test
mov
stc
movsb
scas
leave
pop
xchg
or
push
fisttpl
fwait
mov
or
pop
dec
xchg
lret
sar
lods
iret
xchg
loope
fildl
sub
inc
mov
or
stos
scas
cwtl
adc
dec
add
fildl
cld
sbb
mov
nop
rcrb
adc
sti
or
mov
push
push
mov
mov
mov
fnstcw
mov
push
mov
insl
test
dec
push
shll
ret
mov
push
repnz
or
ret
in
xor
or
mov
loop
loope
pusha
cs
int3
or
xor
push
xchg
mov
repnz
faddl
jmp
sarl
ficoml
sbb
sbb
or
push
fnstenv
rep
pop
out
fdivr
lret
std
inc
sti
cld
jo
outsb
xor
or
jge
pop
jbe
popa
sub
dec
mov
dec
mov
add
test
dec
xlat
or
or
xchg
into
xchg
mov
add
xchg
push
xor
add
push
repz
push
sub
clc
call
push
lea
jae
clc
mov
add
dec
movzbw
mov
lea
lea
test
mov
bt
pushf
stc
movb
sub
call
cmpb
pushl
lea
jne
pushf
xor
aaa
sbb
mov
rcl
dec
add
movb
mov
call
pushf
pushf
add
jmp
lea
jg
je
pusha
bt
add
push
cmp
pusha
clc
cmp
push
jmp
inc
dec
dec
inc
push
dec
xor
cs
dec
dec
add
push
aad
dec
scas
dec
mov
inc
push
cmpsb
dec
test
in
jg
jmp
dec
icebp
sbb
popa
fnsave
loope
xor
inc
shlb
imul
jp
mov
fiaddl
into
rol
push
adc
or
sub
sbb
adc
mov
sti
and
es
ror
xor
mov
xlat
jmp
push
pop
sbb
xchg
mov
push
enter
mov
push
sub
or
sbb
pop
mov
push
pop
or
stos
inc
jmp
xor
leave
ffree
jmp
push
in
cmp
scas
clc
push
sahf
xor
add
daa
ds
add
leave
jo
add
test
out
cld
call
and
sub
stos
dec
or
jle
in
in
roll
xchg
call
jl
lahf
adc
xchg
sbb
test
fiaddl
or
es
loop
ret
mov
and
push
xor
sbb
cmp
inc
inc
sbb
pop
test
dec
adc
popa
and
bound
push
inc
out
add
adc
out
ret
or
and
int
mov
add
and
cmp
loopne
cmp
mov
sub
scas
mov
gs
rorb
fwait
push
arpl
movsl
mov
mov
xchg
jg
mov
xor
push
and
lahf
xor
sbb
jg
stos
out
test
in
adc
adc
popa
dec
sbb
jg
inc
int3
pop
scas
xor
push
stc
adc
ficoml
mov
mov
mov
in
stos
repz
jnp
mov
loopne,pt
sti
stc
in
xor
add
push
cmp
sbb
lea
loop
ret
arpl
mov
cmpsl
xchg
in
push
aaa
std
sbbl
insb
push
loopne
mov
cmp
aam
and
or
pop
mov
inc
sub
clc
je
test
je
push
inc
jmp
jmp
test
cmpb
pushf
movw
lea
jne
btr
sub
mov
clc
add
cmp
clc
pusha
jmp
mov
cmp
mov
cmp
jp
nop
test
loope
sti
es
push
into
in
ret
pop
pop
cwtl
test
rcrl
sbb
xchg
dec
add
inc
sub
or
and
loopne
sub
jp
jne
jp
push
enter
sbb
mov
add
inc
ljmp
pop
aam
xor
inc
add
xchg
aas
popa
fists
pop
mov
rcrl
aam
cmp
mov
push
out
aad
and
fadd
in
rorb
ret
ror
xor
inc
add
inc
cmovae
ret
sbb
dec
mov
shl
xor
div
sub
insl
cmp
les
dec
imul
repz
cmp
dec
movsl
push
push
ret
sbb
ret
mov
mov
int
adc
ljmp
mov
aam
das
into
clc
cmp
push
pusha
mov
ja
loope
pop
adcl
pop
push
rorb
data16
and
add
push
or
add
inc
mov
jne
sbb
roll
push
sbb
imulb
loope
dec
inc
mov
pop
dec
jne
movsb
cmp
mov
or
mov
aad
gs
or
push
add
add
add
popa
cli
test
pushf
lea
je
cmc
pushf
sub
test
push
cmp
push
jmp
mov
lea
jne
pusha
seta
movb
pusha
setno
mov
pop
lea
cwtl
bswap
lea
jmp
lea
jne
xor
mov
xor
call
mov
pushf
pushl
ret
call
push
sbb
mov
cmp
mov
shlb
sub
iret
xchg
cmp
push
dec
mov
ret
jmp
or
cmp
cmp
sub
jg
rolb
cltd
jne
aad
jns
jns
jns
or
jbe
negb
pop
fcomps
lret
push
dec
xor
fs
int
lock
ret
call
and
mov
xchg
push
dec
xchg
add
repnz
inc
ljmp
test
jnp
stos
and
test
inc
or
subl
add
inc
bsr
shl
mov
mov
movsbl
pusha
call
cmp
cmp
pop
mov
push
xlat
jb
cmp
ss
in
and
imul
cmpsl
stos
xchg
mov
in
sub
cmp
inc
aam
or
adc
sti
jo
jmp
aaa
jg
cmp
mov
inc
pop
jne
arpl
test
adc
push
mov
inc
and
ret
cmp
adc
pusha
cli
inc
cmpsb
mov
mov
pop
bound
sbb
add
call
shr
bsr
bts
not
mov
pusha
cmpb
push
lea
jne
bt
daa
sub
not
lea
mov
pusha
lea
jmp
mov
mov
test
pusha
lea
je
push
pushl
pushf
pusha
lea
jmp
add
lods
push
stos
xor
aaa
cltd
lds
arpl
sahf
inc
sbb
push
jae
ret
scas
mov
sbb
jns
dec
jecxz
mov
aas
out
cmp
stos
mov
or
insb
mov
mov
add
lods
mov
adc
pop
push
pop
jecxz
jno
and
imul
or
mov
sub
lods
in
je
mov
sahf
push
std
pop
or
mov
xchg
outsl
mov
imul
incl
mov
ret
inc
stc
in
adc
cld
add
cmp
sbbl
dec
and
push
jecxz
pop
loopne
repz
sbb
pop
rcl
lea
sub
mov
xchg
push
cwtl
cs
xor
xchg
dec
xchg
lret
push
pushf
add
sub
cmpb
movsb
loope
subl
add
adc
dec
stos
hlt
add
jmp
stc
cmp
repnz
pushf
jmp
pusha
pushf
jmp
lods
lock
loopne
je
cmp
jne
aam
add
fadds
sub
adc
jbe
mov
sahf
das
cld
cmpsb
cmp
jb
or
mov
xor
dec
bound
notl
mov
or
jle
xchg
mov
fdivrs
sbb
in
cmp
xlat
leave
sub
push
mov
lods
lcall
lret
or
mov
aas
sbb
adc
hlt
dec
lods
lods
out
in
pop
xor
ret
aad
fwait
push
imul
jno
fimuls
stc
in
cmp
pop
mov
pop
js
in
mov
xor
mov
jo
cmp
adc
dec
insl
cmpb
xchg
sarb
mov
das
popf
mov
cmp
addb
repz
addb
push
inc
clc
nop
es
pop
jns
mov
add
inc
and
fs
and
push
rclb
add
cltd
aaa
jnp
add
xchg
dec
pop
xchg
insl
jge
das
jmp
ficoms
push
mov
push
mov
jae
sbb
sbb
sub
mov
mov
stos
cmp
sub
xchg
inc
sub
sub
lret
inc
cmp
mov
jge
repz
in
or
ss
push
or
inc
shlb
jecxz
jle
js
push
leave
scas
inc
xor
enter
pusha
cltd
loopne
cmp
xchg
sub
adc
xchg
sbb
push
sbb
popa
adc
pop
mov
dec
loop
loop
ret
cs
repnz
jb
xchg
pop
aaa
movsl
testl
mov
int
rorl
mov
faddl
mov
adc
adc
jb
add
call
pop
cmp
dec
jg
popf
xor
int
shrb
inc
dec
pop
in
pop
shlb
push
add
stos
push
orl
loop
fists
decl
rcrb
inc
cmc
test
mov
test
mov
test
lea
ja
pusha
lea
jb
pusha
cmpb
pusha
jmp
add
dec
mov
push
sbbb
mov
out
add
es
out
js
cmp
inc
scas
fcoms
ja
leave
jg
push
lods
mov
xchg
sub
and
cmpsb
stos
xchg
aam
gs
xlat
mov
and
xor
out
loop
mov
imulb
lds
loope
add
fadd
js
fidivl
jecxz,pt
fwait
out
or
jmp
mov
push
clc
mov
xchg
add
pop
push
orl
arpl
clc
daa
imul
roll
add
and
hlt
mov
push
or
stos
repz
popf
sub
scas
int
lods
aam
mov
lcall
cwtl
jb
xlat
mov
popa
lods
mov
inc
mov
sbbl
arpl
and
mov
xchg
lret
inc
cmp
call
mov
lods
fistps
inc
mov
mov
pop
loope
mov
mov
rorl
sbb
aas
stos
out
pusha
ljmp
loopne
shr
and
mov
call
xchg
push
movsb
shl
stc
movsbl
shld
add
cmp
rol
rcr
adc
mov
rcl
inc
setns
mov
jmp
clc
cmpb
jmp
call
push
pushf
push
mov
pushf
pusha
lea
jmp
call
test
push
in
xlat
lret
loop
xchg
cwtl
mov
lret
push
movsb
xchg
mov
mov
leave
push
popf
dec
les
xchg
incb
int
movsb
leave
loopne
sub
ja
addr16
sbb
cmpsb
or
orb
sub
mov
push
int
test
loopne
mov
jns
adc
or
test
test
js
dec
out
inc
cli
es
mov
or
pop
jmp
push
call
jmp
lea
jne
cmc
and
xor
btr
movsbw
bsr
movsbw
mov
pushf
rcl
add
and
shl
sar
mov
bt
pushf
cmp
stc
test
call
lods
jle
mov
push
pushf
inc
adc
cmp
or
jmp
sbb
leave
pop
dec
loop
dec
sub
pop
pop
aas
xchg
jg
das
inc
pop
mov
mov
jg
cwtl
mov
xor
adc
xor
mov
shll
stc
xor
mov
sub
scas
jecxz
xlat
mov
mov
jb
data16
clc
mov
loope
xchg
sbb
std
pop
dec
loope
insb
xchg
test
leave
in
insb
fildl
sti
pop
and
into
sbb
add
jg
in
inc
nop
add
xchg
insb
call
push
mov
jmp
stos
add
sbb
inc
push
inc
push
add
mov
call
rcl
mov
push
inc
and
xor
test
sub
jae
xor
push
mov
fdivl
cmp
test
xchg
mov
fildl
add
fimull
je
stc
push
adc
cwtl
xchg
cmp
aad
aad
add
out
pop
jecxz
dec
push
or
test
cmp
jmp
push
push
pushf
lea
jmp
sbb
push
in
jle
sahf
xchg
mov
and
ljmp
je
and
mul
sarb
imul
clc
fmull
pop
jo
mov
mov
or
or
dec
rcll
mov
popa
sbb
mov
lds
cmp
add
popa
mov
mov
fildll
lods
xchg
inc
test
push
daa
btl
xlat
cs
dec
push
lret
inc
or
in
cs
jle
xor
jmp
inc
lock
call
push
insb
push
outsl
subb
ficoml
inc
inc
scas
repz
aaa
pop
sub
mov
sub
out
push
loop
out
cld
xor
mov
lods
mov
loope
cmp
jo
pushf
add
push
mov
push
fdivs
sbb
ret
cmp
int
pushf
cmovg
adc
add
movsb
pop
ja
xchg
sbb
jle
add
or
popf
add
mov
add
cmpsb
in
sub
sbb
pop
mov
push
inc
mov
add
test
loopne
xchg
int3
pusha
cltd
xchg
loopne
dec
xchg
movsb
les
mov
ss
test
push
icebp
aas
push
jmp
jmp
add
repz
lock
sbb
fidivs
cs
dec
jb
push
sbb
cld
mov
ret
psllq
cmp
mov
sahf
lea
jae
inc
rcl
xadd
or
mov
inc
bts
lea
inc
mov
sar
mov
pushf
pushf
cmp
mov
sub
clc
bt
clc
bt
repnz
push
pushf
push
lea
jne
sbb
push
ror
mov
or
or
sub
shrd
sub
pushf
lea
cmp
cmc
jmp
jmp
roll
xor
pop
sub
fbstp
outsl
jp
and
popa
lods
xor
ss
push
inc
xor
pusha
mov
dec
xor
icebp
push
adc
add
std
mov
pop
lods
sub
xor
and
imul
jno
xchg
iret
das
gs
and
push
jp
ret
lret
filds
rcrb
xor
sub
pop
dec
inc
scas
add
mov
nop
lock
fs
xchg
into
in
in
mov
mov
xor
or
lock
movsb
xchg
cmpsl
mov
lret
inc
pop
xor
clc
inc
stos
xchg
inc
popa
sub
int3
jbe
ss
xor
orl
add
loopne
sbb
outsl
cltd
and
cmpsb
dec
push
push
shrb
pop
pop
mov
mov
xor
add
les
sub
jle
imul
pop
xchg
popf
adc
pushf
jnp
std
mov
in
inc
outsb
xor
popf
jle
subl
and
pop
push
sbbb
sbb
push
imul
dec
js
lret
push
mov
or
push
cmpsl
add
cmovno
out
xor
sbb
rorl
test
call
xor
es
jb
pop
fs
insb
lahf
dec
popf
lods
push
add
adc
and
aas
divl
inc
xchg
cmp
sub
loope
inc
icebp
dec
mov
cmp
ljmp
xor
or
imul
jmp
jnp
repnz
push
js
mov
jecxz
push
test
mov
call
mov
movb
push
pushl
ret
push
lock
std
std
test
xchg
addr16
mov
mov
insl
sub
pushf
mov
pop
cmc
ss
sahf
pop
or
jge
pop
in
dec
dec
inc
int
cs
pop
movb
adc
test
int3
cmp
cli
add
test
sub
in
xchg
push
cmpsb
je
sub
cmp
add
pop
fisttpl
adc
add
mov
lcall
pushf
lea
jae
mov
setns
bts
shl
mov
test
bswap
mov
push
xor
shr
mov
stc
test
sub
pushl
test
mov
pushf
repnz
pushf
pushl
lea
jne
shl
mov
shld
shrd
cmp
sbb
sub
sub
jmp
pusha
lea
jb
pushf
cmpb
call
push
bt
add
test
pushf
call
push
dec
dec
dec
dec
cs
dec
dec
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
jmp
repnz
mov
jmp
add
lcall
add
add
add
sub
add
cmp
add
add
add
add
add
pop
sbb
lock
add
add
add
add
add
sbb
clc
cmp
add
icebp
sbb
jl
sbb
add
add
icebp
sbb
cmp
sbb
or
add
icebp
sbb
lds
add
cmp
add
test
not
pusha
pushf
mov
push
movb
stc
test
add
jmp
jae
cmpsb
xchg
xor
icebp
lea
dec
scas
dec
sub
roll
cmp
lds
push
imul
jl
dec
fs
add
inc
ret
xchg
cmp
xchg
mov
mov
adc
sbb
dec
xchg
cld
mov
pop
out
jl
mov
and
jl
push
or
xor
sbb
das
add
xor
sarb
cs
aaa
test
iret
add
jmp
push
mov
lea
jne
movzbl
movzbw
cwtl
mov
movb
movzbl
movzbw
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
addb
mov
adc
in
adc
inc
or
lret
repnz
mov
cwtl
push
loop
cmpsl
mov
inc
pop
lahf
clc
sub
mull
cmp
sbb
sarb
push
into
nop
insb
mov
mov
fdivl
mov
jne
mov
xor
or
jle
incb
sarb
inc
or
mov
adcb
in
iret
pop
imul
inc
pop
add
xor
call
push
lea
jne
sar
shld
dec
mov
clc
pusha
jmp
lea
ja
push
pusha
cmc
stc
imul
jmp
pusha
movw
lea
ja
clc
clc
pushf
imul
mov
add
push
movl
pusha
lea
jmp
fisubrs
cmpsb
xchg
xor
loope
loop
loop
inc
ds
popa
pop
popa
lea
pop
jbe
jecxz
add
pop
mov
push
sbb
sub
aam
das
lds
xchg
dec
pop
pop
int3
js
push
movsl
cmpsb
xor
test
push
dec
xor
fdivl
sbb
add
inc
and
push
lea
enter
jb
cmp
divl
dec
mov
int
incb
add
mov
xor
les
orb
gs
je
inc
imul
adc
lret
inc
and
dec
bound
loopne,pt
add
xchg
add
rcrl
lret
cmp
xchg
xor
pop
inc
std
add
adc
mov
jbe
mov
and
orl
das
jecxz
adc
mov
pop
jecxz
cwtl
repnz
aam
push
mov
dec
pop
mov
out
xor
pop
mov
jo
jae
push
xchg
push
dec
inc
test
lahf
xor
call
out
data16
stos
pop
mov
sbb
adc
enter
lcall
scas
xchg
inc
inc
stos
xchg
mov
fnstenv
stos
adc
jmp
inc
sarb
xor
lods
and
into
push
pushl
mov
fs
inc
pop
ret
js
aaa
lahf
sub
scas
hlt
mov
xchg
jnp
jmp
call
iret
pop
jmp
popf
jnp
xchg
dec
pop
mov
das
ret
sub
sbb
jecxz
mov
mov
xchg
ljmp
call
fcomps
push
pop
mov
lods
rorl
mov
adc
nop
add
pop
mov
xchg
mov
gs
xor
lea
inc
mov
insb
xor
faddl
jl
stc
push
lds
xor
and
sbb
mov
shrb
and
push
fildl
lcall
or
inc
rcrl
mov
sub
xor
mov
bound
xchg
xor
sub
mov
pop
fbstp
lahf
jae
mov
adc
sbbl
gs
and
xor
sbb
das
mov
mov
sbb
pop
ja
fists
insl
sarb
jno
mov
push
mov
insl
addr16
inc
mov
fdivs
sub
push
enter
push
adc
imul
mov
xor
aad
div
loopne
fidivrl
sub
xchg
push
pop
sti
inc
stos
xor
xchg
pop
test
test
mov
lea
ja
mov
cmp
div
jb
mov
mov
aad
rolb
mov
xchg
out
push
xor
jo
leave
or
xchg
mov
call
jmp
test
jmp
xchg
insl
addr16
aas
mov
dec
dec
inc
mov
sahf
mov
ror
inc
xor
inc
fbld
adc
inc
dec
add
inc
js
je
jb
arpl
jae
cmc
clc
cmc
movzwl
stc
bswap
xor
movsbw
mov
test
add
cmc
cmc
call
sar
sub
mov
bswap
not
pushf
mov
lea
setns
mov
movzbl
pop
mov
mov
call
mov
call
lea
jne
bts
rcr
shl
bsr
mov
ror
bswap
sub
jmp
pusha
shld
mov
adc
mov
clc
repnz
movb
pusha
lea
jne
call
lea
jne
ror
clc
lahf
btc
xor
setne
mov
neg
inc
rcr
setge
add
or
xor
jp
mov
stc
push
stc
test
test
call
lea
jne
bswap
mov
shrd
sub
bsf
mov
clc
stc
sub
test
pushf
pushl
popl
stc
cmc
cmp
push
lea
ja
jle
xor
sub
not
cmc
shr
inc
add
cmc
shrd
mov
xor
test
push
or
mov
pusha
pushf
pushf
cmp
repnz
jmp
mov
setne
movb
lahf
jmp
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
loop
lea
ja
shl
rcr
sub
sub
ror
sub
cmp
add
jmp
movb
push
pushf
lea
jne
jmp
pushf
jmp
push
push
lea
jne
lea
movb
jmp
bt
cmpb
push
movl
lea
jne
or
sub
btr
shld
mov
pushf
call
pushf
pushf
call
cmc
sub
pushf
pushl
popl
cmp
cmp
pusha
lea
ja
pushf
adc
sub
or
add
add
btc
btc
shl
ror
mov
cmp
mov
bt
bt
repnz
call
push
lock
std
std
test
and
aam
jo
xchg
or
lret
and
pushf
mov
pop
lods
ss
mov
je
in
pop
dec
dec
pop
and
aam
pop
int3
add
jmp
sub
test
insl
pushf
and
cmp
jecxz
les
scas
sub
push
scas
je
insl
dec
cltd
or
push
enter
rolb
fs
jbe
bswap
shld
btc
mov
bsr
or
movsbw
add
sbb
not
mov
clc
pushf
add
pushf
shl
movl
dec
bsr
mov
lea
pushf
movb
clc
pushf
cmp
movb
lea
jbe
pusha
sub
pushf
stc
pusha
mov
add
neg
mov
push
pushl
rol
add
pusha
rol
inc
shr
pop
pushl
mov
add
push
call
clc
add
cmp
stc
movb
cmp
mov
movw
push
lea
jb
call
movzbw
mov
lea
lea
push
pushl
movl
movb
movb
pushf
push
mov
push
pushf
push
pushf
pushl
ret
out
xor
sub
push
aam
fdiv
mov
mov
jns
adc
pop
adc
mov
push
mov
dec
rcrl
dec
add
jae
or
lock
and
fwait
iret
sbb
aam
pop
sbb
xchg
sbb
mov
dec
xor
mov
push
and
clc
cmp
inc
cli
push
test
xor
mov
or
pop
pop
stos
jmp
mov
dec
fnstsw
popa
mov
clc
loopne
rdpmc
pushl
shrl
dec
mov
and
or
mov
fcmovb
mov
je
out
xchg
pop
into
dec
or
hlt
mov
jae
loopne
insl
inc
cmp
dec
movb
dec
das
inc
mov
push
push
lret
mov
cmc
fwait
dec
push
int3
pop
push
xchg
inc
leave
cmpsl
cmp
sbb
outsb
and
popf
xor
or
pop
dec
in
imul
xchg
xchg
mov
sub
push
test
pop
push
dec
cmpsl
sti
xlat
mov
mov
pop
cmc
add
daa
stc
jns
lret
testl
xor
clc
cmpsl
jge
push
dec
lock
inc
sahf
xchg
test
pushf
inc
jl
and
aad
in
out
pop
inc
jge
inc
cld
imul
and
or
test
daa
jnp
adc
pop
xchg
jmp
fdivl
outsb
int
addr16
insl
int
push
push
stos
fwait
push
data16
mov
dec
jns
push
clc
outsb
jg
pop
pop
push
mov
xchg
sbb
scas
jecxz
inc
sti
cmpsl
xor
mov
roll
or
int3
loopne
shrb
fnsave
jge
sbb
les
mov
lea
jb
jmp
jmp
jmp
movsbw
pushl
push
movb
lea
jmp
pushf
lea
jne
bswap
jmp
pushf
pusha
add
pushl
call
add
pusha
movzwl
add
jmp
jb
push
movl
call
jmp
cmp
push
arpl
leave
mov
jo
ss
dec
and
loope
movb
or
das
push
push
fs
je
es
sub
pop
sub
test
nop
shr
push
xchg
div
cmp
ficomps
aas
addr16
sub
imul
add
enter
cmc
ss
jmp
les
sbb
mov
addr16
xchg
leave
stos
push
sub
adc
mov
sbb
dec
cmp
outsb
push
loop
adc
xchg
mov
mov
out
outsl
and
xor
nop
xor
cli
test
jno
inc
mov
test
call
pushf
mov
lods
fwait
nop
fsubrs
inc
dec
out
adc
repz
mov
pop
inc
or
arpl
sti
xchg
stos
gs
xchg
add
and
aaa
mov
shrb
push
pushf
movl
jmp
insb
mov
pop
shrl
sbb
sbb
lods
xor
mov
xchg
test
and
into
clc
push
test
jnp
jmp
sub
test
xadd
xchg
sbb
mov
movsb
push
cmc
push
or
add
mov
cs
iret
xchg
or
data16
mov
xchg
cmp
decb
popa
pop
aaa
movsl
dec
rcrl
movsb
pop
mov
xor
xchg
sub
sub
hlt
push
bound
lahf
mov
int3
sbb
decb
pop
xor
jno
popa
sbb
popa
scas
inc
icebp
xchg
fsubrs
push
lahf
xlat
and
mov
cmp
das
add
popa
ret
mull
fwait
xlat
mov
pop
and
test
test
mov
repnz
xor
dec
ret
icebp
dec
jae
xchg
cmp
lret
stos
xchg
mov
dec
scas
mov
pop
mov
fprem1
and
rcr
hlt
and
js
sbb
jmp
pop
nopl
addr16
jae
sub
add
test
and
in
mov
mov
xor
add
fld
jns
adc
scas
stos
loopne
mov
add
push
repnz
pushf
jmp
cmpb
call
pushf
pushf
mov
setge
pusha
call
call
inc
xchg
ficompl
adc
cmp
imul
leave
adc
push
lret
xor
sub
xor
pop
aam
orb
jb
lret
xchg
and
test
dec
in
xchg
pop
les
adc
or
push
pop
cli
cmp
pusha
pusha
pushf
jmp
add
dec
outsl
popa
fs
imul
add
add
rorb
mov
pushl
ret
jmp
movl
jmp
mov
lea
je
pushf
lea
jmp
and
clc
mov
aas
xor
ret
adc
jl
sahf
adc
jb
lock
adc
sub
in
clc
add
fmuls
xor
push
inc
filds
jns
xor
clc
les
das
inc
testb
cmp
dec
jae
cmp
push
rcrl
stos
hlt
dec
movsb
stos
subb
popf
cmpb
bound
imul
pop
cmpsb
inc
testb
xchg
sbb
lret
jne
aad
jbe
xchg
mov
xlat
dec
and
inc
loop
xor
bound
inc
sub
push
mov
scas
sarb
and
cmpl
pop
fistl
sbb
mov
mov
scas
add
push
ss
pushf
rorb
pop
and
cli
mov
scas
fidivs
pop
xor
and
testb
call
jbe
push
mov
add
sarl
mov
mov
add
xor
stc
jp
fiaddl
dec
adc
outsl
pop
mov
aas
repz
sbb
sbb
mov
mov
adc
push
adc
loop
into
mov
mov
in
imul
das
jecxz
sbb
jo
data16
fisubl
dec
popf
dec
test
loop
rcrl
inc
pop
sbbl
repz
out
cltd
mov
xchg
fdiv
stc
pushl
popl
push
pusha
pushf
cmp
jmp
stc
cmp
jmp
clc
sub
jmp
pushl
pushf
lea
jne
lea
pusha
movb
movzbw
pusha
mov
cwtl
lea
mov
mov
mov
mov
movl
call
lea
je
cmc
test
jmp
jmp
clc
pusha
cmpb
movb
pushl
pushl
movb
lea
jne
call
add
dec
outsl
arpl
inc
jb
gs
ds
test
add
pushf
push
jmp
mov
movb
pushl
ret
pop
out
mov
stos
cmpsl
imul
and
loope
mov
xchg
inc
cwtl
imul
lahf
outsb
hlt
out
and
out
dec
lds
mov
popa
nop
push
je
cmp
ret
cmpsl
mov
pop
mov
xor
in
fdivs
in
and
out
xor
lea
stos
aam
stos
js
icebp
shl
data16
dec
push
sub
sub
cltd
and
fcom
sbbl
pop
add
pop
add
jmp
mov
xor
pop
or
js
xchg
and
ja
outsl
jae
sub
sti
cmpsl
mov
fwait
xor
jmp
adc
mov
loopne
out
icebp
ja
mov
fldl
mov
bound
stos
add
pop
jmp
lods
mov
mov
shll
sub
mov
xchg
out
ffreep
xor
inc
lahf
prefetch
xchg
stos
or
scas
mov
cmp
loopne
xor
push
stos
mov
popa
test
ret
sub
adc
cmpsl
push
and
imulb
mov
xor
inc
push
mov
lret
insb
xor
lods
out
iret
mov
mov
pushf
imul
cli
mov
jnp
in
loope
mov
mov
popa
popa
jl
mov
or
outsb
mov
xor
enter
cltd
jo
mov
push
and
fwait
test
je
mov
mov
outsb
xor
sbbb
push
sarl
adc
jl
cltd
std
add
lods
test
popf
jb
pop
call
cld
push
cmp
sub
dec
push
in
xchg
jle
cmp
imul
pop
mov
jae
and
bt
add
push
pushf
test
mov
lea
jne
jmp
call
pminub
cmpsb
xor
cmp
jb
push
fdivp
dec
es
fsubl
movsb
sub
shrb
pop
xor
sbb
pop
mov
orb
push
cmp
inc
call
mov
adc
adc
add
mov
in
fs
sbb
shlb
xor
jle
roll
scas
adc
iret
or
enter
scas
cmp
xchg
inc
mov
pusha
in
loopne
inc
out
and
mov
loopne
sarl
outsl
loope
sarl
mov
jb
xor
adc
negl
movsb
fadds
pop
movsl
dec
cli
add
movsl
dec
xchg
int
jne
jb
cmpsl
mov
sbb
ljmp
cmp
into
es
cmpsl
ss
cmpsb
fiaddl
pop
xchg
lret
lds
or
xchg
add
scas
xor
xor
lock
mov
or
fstpt
outsb
and
xchg
push
insb
orb
inc
aas
arpl
fadds
add
pop
push
dec
bswap
stos
jge
sub
out
arpl
pushf
rcr
dec
pop
xor
ret
and
shll
and
sbb
pop
cmpsb
test
pop
movsb
adc
xchg
cmc
femms
loope
mull
xchg
sbb
add
lds
inc
and
pop
cmp
test
xchg
ficoml
je
je
xchg
mov
pop
repz
sarb
aad
adc
test
mov
sbb
rcrl
lcall
push
jmp
jmp
push
cltd
jne
xchg
rcrb
rcll
xor
sar
jecxz
sbb
sar
cmp
pop
outsl
pusha
mov
das
sarb
out
testl
inc
aad
outsb
lahf
lds
out
mov
and
cmpsb
mov
rcrb
adc
mov
mov
mov
jne
add
lahf
mov
pop
int3
mov
and
sti
lcall
jo
fisttps
mov
mov
sbb
push
ficoml
push
lret
aam
int
sbb
sbb
call
pusha
clc
sar
mov
jmp
dec
cmc
cmp
test
cmp
cmp
pop
lea
pop
mov
setno
pop
mov
call
pushl
push
lea
jne
mov
xor
push
lea
mov
mov
push
movb
lea
jmp
add
add
add
add
sbb
xchg
sbb
push
sub
add
add
add
add
add
icebp
sbb
add
add
mov
add
add
add
add
daa
sbb
dec
xor
add
sbb
popf
inc
sbb
push
sub
add
add
add
adcl
call
inc
sub
jle
cmp
xchg
pop
les
push
mov
negb
dec
das
push
pop
mov
out
add
adc
fistl
add
cld
xchg
lahf
fwait
dec
push
cli
adc
inc
adc
jp
xor
rcrl
loopne,pn
push
sbb
sbb
frstor
fbstp
add
jle
cmp
mov
cmp
das
test
loope
ja
pop
out
hlt
enter
pop
pop
dec
mov
mov
mov
pop
es
dec
movsl
sbb
dec
mov
addb
push
in
fwait
push
and
loopne
push
ds
fimull
cmp
adc
fidivl
sbb
cltd
dec
adc
jecxz
mov
cld
mov
pushf
call
cmp
pushl
pushf
pushf
cmp
jmp
add
add
add
setno
shl
pushf
mov
jmp
ror
cmc
mov
cmp
clc
sub
test
bt
pushl
jmp
call
pushf
test
pushl
lea
je
push
lea
jmp
cld
jmp
fisubrl
cld
loopne
lock
sub
cld
lock
xor
and
sbb
push
pop
cmp
out
cmp
out
popw
mov
adc
mov
mov
sarl
push
dec
mov
mov
xchg
sub
stos
xor
int3
shrb
jl
sbb
dec
mov
jecxz
xor
ret
cld
int
pop
jno
in
add
push
mov
rcr
lea
add
adc
jl
aaa
sub
add
cmpsl
cltd
inc
inc
mov
loope
fbstp
outsl
je
mov
fcmovnbe
or
mov
xchg
das
div
loope
sub
int
cmpsb
into
cmp
push
and
adc
dec
icebp
int
sbb
ljmp
mov
stos
xor
or
sbb
sub
mov
adc
and
cmp
movsb
test
test
clc
xchg
call
jne
push
mov
inc
pop
fisttpll
in
adc
push
mov
lods
jge
jnp
mov
xlat
xchg
dec
stos
negb
add
mov
jo
xchg
cmp
ret
dec
fisubl
enter
jmp
lods
lock
jb
inc
inc
lret
xchg
out
aaa
add
fadds
push
lds
aad
lcall
pusha
leave
jb
or
mov
gs
dec
push
rcrb
add
js
xchg
mov
mov
jg
add
aam
pop
lret
in
cld
inc
sbb
sub
pop
aam
lods
popf
cltd
fadds
fldt
flds
mov
jg
ja
adc
stc
dec
movsb
push
pop
in
sbb
pusha
lcall
mov
inc
pusha
jge
push
fimuls
stc
out
std
pop
mov
aad
sbb
jne
mov
pusha
mov
dec
jo
cmp
fsubl
dec
clc
mov
js
movb
cmp
cmp
xor
testb
dec
fists
sub
icebp
jg
sahf
inc
pop
inc
or
out
es
into
and
sahf
int3
jnp
mov
mov
outsb
scas
aas
sub
pop
arpl
lret
ficoms
cwtl
out
push
jmp
mov
push
jmp
pushf
lea
call
pusha
movb
mov
pushf
mov
movw
movb
lea
jmp
rcr
cmc
mov
push
cmpb
pushf
pusha
call
rcl
bts
rcr
mov
clc
cmc
cmpb
pushf
lea
ja
jne
neg
pusha
rcl
shr
xor
setae
not
and
aaa
mov
rcl
bt
add
stc
add
mov
pushf
pushl
test
call
call
clc
stc
pusha
repnz
call
mov
push
loop
adc
pop
mov
call
loope
mov
enter
mov
push
inc
out
sarl
xchg
aas
repz
inc
sub
cmp
pop
push
repnz
shll
stc
les
arpl
inc
sub
les
xlat
fwait
stos
lds
xchg
push
add
aam
jno
sbb
or
pop
xchg
int
sbb
dec
xlat
dec
or
dec
ja
ljmp
pop
pop
ret
mov
stos
call
add
jb
mov
cmp
clc
mov
daa
sbb
imull
adc
and
sbb
push
loopne
mov
or
es
aam
jno
mov
sub
loopne
stos
pop
jmp
or
imul
aas
add
call
rorb
push
pop
loopne
mov
sbb
pop
and
push
testb
push
jp
roll
pop
sti
push
sbb
inc
inc
sub
fwait
mov
rcr
mov
push
mov
mov
insl
sbbl
xchg
sub
neg
xor
mov
out
cmp
pop
add
xor
add
and
subb
sahf
mov
ret
ror
dec
sbb
pop
test
aad
aad
add
dec
add
xchg
xchg
jl
xor
addr16
add
add
mov
in
push
lret
femms
pop
or
stos
xchg
fildl
sub
xlat
jmp
or
enter
stc
and
pop
add
xchg
mov
sbb
jne
or
out
add
add
adc
in
sub
mov
xor
je
aam
outsb
in
pop
dec
jmp
and
xchg
push
lcall
in
dec
testb
fdiv
sub
xor
sbb
jl
insb
xor
cmpsl
cmp
push
push
xchg
call
dec
xchg
add
ret
xchg
dec
pop
push
inc
dec
icebp
cmc
mov
jns
pop
rcrl
insl
jno
in
dec
xchg
ss
cwtl
xor
insl
inc
jecxz
adc
add
jecxz
mov
stos
ss
sbb
adc
cltd
xchg
test
inc
push
repnz
cmc
das
arpl
insl
mov
icebp
jg
dec
and
sti
out
inc
pop
icebp
fbstp
das
adc
call
or
outsl
cmp
lds
test
jo
lods
orl
adc
leave
adc
in
stos
jbe
popf
imul
sub
xor
iret
sub
jge
setno
fldt
lcall
xlat
sti
mov
sub
fdivs
int
cmpsb
cli
js
mov
mov
lods
mov
mov
mov
dec
jns
test
mov
test
bound
mov
aam
push
mov
test
hlt
sub
mov
sbb
aam
bt
sub
call
jmp
mov
test
pusha
pushl
test
pushf
call
adc
push
mov
push
xchg
cs
std
mov
shll
and
pop
sub
mov
pop
push
and
xor
scas
lahf
cs
jns
lret
add
es
std
pop
sub
jnp
movsl
incl
sub
lahf
xorl
scas
sarb
aam
adc
cmp
dec
jo
add
pop
mov
lods
xchg
mov
xchg
push
popf
push
call
mov
sti
add
iret
arpl
push
mov
out
mov
pusha
dec
mov
sti
fdivr
mov
xor
lea
je
pushf
jmp
movb
lea
jle
test
call
cmc
cmp
call
ror
add
mov
pop
movsbl
mov
lea
call
pushf
movb
lea
jb
pusha
test
jmp
mov
jmp
ljmp
or
and
adc
nop
pop
dec
out
add
jb
push
inc
mov
pop
inc
mov
inc
cltd
lds
out
fisubs
bound
cld
mov
pop
pusha
lahf
dec
pushf
pxor
insb
cmpb
and
jo
jo
sub
aam
pusha
mov
call
gs
movsb
repnz
fwait
icebp
lods
cmp
push
xchg
fs
xchg
cld
adc
sub
das
xchg
pop
cmpsb
lods
lock
or
xchg
ss
lret
outsl
adc
ja
testl
add
mov
mov
xlat
lret
lds
aam
hlt
pop
push
dec
xor
jb
idivb
repnz
mov
push
mov
mov
andb
or
jle
bound
or
test
subb
in
sarl
lea
inc
push
pusha
arpl
cmc
inc
xor
lcall
add
xor
scas
aam
ret
inc
arpl
pop
inc
jmp
mov
out
sbb
cld
es
roll
mov
push
incl
jne
cs
ret
aam
or
adc
jno
adc
inc
lea
popa
mov
loopne
stc
mov
sub
add
frstor
pop
test
repnz
in
xchg
add
cwtl
lea
divb
sahf
mov
outsb
rcrb
fiadds
cld
push
sbbb
hlt
push
add
mov
ds
and
xchg
js
test
jnp
cwtl
push
clc
pop
sbb
add
lock
mov
sbb
decl
test
lcall
fs
jmp
movl
push
pushf
push
movb
lea
jmp
lea
jne
aad
cmp
sub
mov
movsbw
pushf
mov
push
push
lea
jmp
push
lea
ja
jmp
push
ud1
mov
lea
lea
dec
xchg
pushf
mov
lea
jmp
test
repnz
push
push
lea
jne
bswap
push
setae
movb
cwtl
lea
mov
lea
lea
call
shr
mov
jmp
jmp
add
inc
gs
outsl
fs
gs
imul
add
gs
in
dec
mov
pushf
test
cmpb
pusha
jmp
lea
lea
lea
movzbw
not
pop
jmp
push
movb
lea
je
call
mov
push
test
push
pushf
pusha
lea
je
push
movb
pushf
lea
jmp
lea
ja
stc
clc
imul
stc
cmc
clc
test
add
pusha
mov
lea
jmp
call
movl
jmp
push
setb
push
not
jmp
lret
mov
push
nop
jp
stos
xchg
cmc
sub
or
ret
push
pop
orb
addr16
mov
cmpsl
cmp
repz
in
or
ss
push
xor
and
cmpsl
int
popf
mov
cmp
loopne
inc
push
sbb
mov
or
outsl
and
jne
call
push
repnz
push
addr16
jb
cmpl
shrl
daa
shll
pop
dec
out
aaa
jmp
pop
aaa
imul
repnz
and
out
test
into
movb
pop
ja
pop
imul
hlt
testl
les
ret
arpl
jne
in
imul
adc
lds
inc
test
sbb
pop
xor
cmp
sbb
xor
xchg
cltd
inc
mov
popl
adc
bound
cmpsb
push
and
cmovae
hlt
fcoms
aam
xchg
or
stos
daa
aas
cmp
cwtl
lds
nop
push
inc
vmwrite
clc
gs
inc
or
cmp
cmp
push
pushf
movw
pushl
ret
lea
je
pushf
sub
cmp
cmp
movl
stc
cmp
push
jmp
arpl
mov
sub
out
mov
cmp
xlat
lock
and
shrl
js
push
mov
sbb
notb
and
push
inc
lret
inc
xor
or
cmp
jge
aaa
mov
sbb
or
inc
xor
data16
pop
inc
or
ljmp
incl
pushf
jae
aad
jg
decl
call
test
sub
test
sub
ja
push
pushl
popl
pushf
test
movb
cmp
jmp
jmp
and
bswap
ror
setae
mov
test
call
dec
adc
push
outsb
xchg
xor
shll
daa
sub
scas
mov
mov
inc
xor
mov
loope
push
into
inc
cwtl
push
js
mov
aas
fwait
cwtl
and
insb
push
scas
repz
xchg
test
inc
adc
xor
mov
leave
adc
push
jmp
mov
xchg
stc
mov
clc
inc
push
enter
pop
push
addr16
inc
movups
dec
adc
cmc
sbb
addb
dec
outsl
arpl
inc
insb
insb
outsl
arpl
pushf
stc
test
pusha
jmp
mov
shr
mov
shl
mov
mov
call
jmp
pushf
bt
rol
cmc
jmp
movl
pushf
movl
pushf
mov
pushf
pushf
lea
jmp
test
mov
pusha
sub
btr
lea
movl
cmc
cmp
jmp
pusha
jmp
mov
push
lcall
mov
inc
mov
adc
pop
add
fdivp
daa
jnp
push
dec
lock
jb
ja
mov
xchg
jae
scas
lcall
pusha
mov
inc
in
adc
xchg
pusha
pusha
call
push
sbb
pop
xchg
test
pop
mov
test
jle
lods
les
sub
cs
out
pop
lods
icebp
divb
out
mov
pop
repz
pusha
sahf
fisubrl
leave
and
push
or
mov
and
pop
push
inc
push
xchg
lea
inc
stc
and
cmp
orb
popa
lret
daa
jnp
test
mov
or
inc
sbb
ret
mov
sub
stc
mov
aaa
fadds
int3
nop
xchg
lock
and
lea
je
cmp
pushf
add
cmp
cmp
mov
mov
movb
lea
jb
push
test
push
cmp
movb
push
pushf
pusha
lea
jae
bsf
mov
not
mov
add
stc
mov
test
pushf
xor
pushf
repnz
push
pushf
call
lea
je
movsbw
xor
shr
add
shl
or
bts
mov
bt
pushf
bt
add
bt
mov
sub
btc
mov
bt
push
cmp
mov
movw
call
push
scas
lahf
mov
ret
pop
ret
sti
shrl
add
fcmovnbe
repz
cmp
int
sbb
sub
pop
xor
je
ss
mov
xor
testl
das
fsubl
lahf
mov
std
jmp
sahf
inc
mov
xchg
sbb
xor
mov
loope
stos
or
out
out
xchg
hlt
dec
adc
mov
loop
mov
fdivs
pop
dec
repnz
jnp
inc
je
dec
add
pop
xchg
mov
popf
inc
test
arpl
add
daa
int
mov
jmp
clc
test
or
imul
lds
cmp
and
add
fnstsw
pop
mov
mov
addr16
lea
lea
mov
std
mov
push
jmp
pop
xor
and
adc
xchg
arpl
test
imul
dec
out
push
lea
jl
lods
adc
loope
and
push
into
add
cs
mov
jmp
pusha
mov
jmp
out
jmp
ljmp
cmpsb
sti
sub
cmpsb
call
out
imul
out
ljmp
stos
sti
ljmp
sti
call
call
movsl
sti
mov
push
mov
push
iret
inc
pop
xchg
test
arpl
aaa
lahf
popa
arpl
cmp
dec
mov
out
in
repnz
xor
mov
jno
cmp
aaa
adc
push
arpl
cmp
int
xor
mov
jmp
add
lods
dec
adc
lcall
nop
imul
shll
shrl
xlat
call
ja
negl
push
pusha
xchg
jae
test
or
movb
call
push
pushf
lea
ja
pushf
lea
jne
pusha
lea
jb
bt
test
pushf
cmpb
mov
lea
jne
btr
cmc
bsf
mov
cmc
add
push
test
bt
pushl
movzwl
not
shl
bswap
jmp
jmp
call
add
call
bt
rol
push
and
dec
shr
ror
sub
movsbw
jmp
pushf
call
mov
pushf
movw
lea
jmp
jmp
mov
call
push
pushf
popl
movw
push
pushl
popl
pushf
mov
movl
lea
jmp
shr
mov
bt
sub
test
clc
add
pusha
pushl
not
pushl
xor
pushf
movb
sub
sub
jno
test
stc
sub
pusha
stc
cmc
test
sub
call
mov
pushf
popl
push
pushl
popl
pusha
pushl
movb
push
lea
jmp
pushl
popl
pushf
lea
jmp
or
mov
cmp
bt
add
clc
bt
bt
shrd
push
jmp
adc
movzww
cmc
sub
call
mov
pusha
push
mov
lea
jmp
pushl
cmc
and
dec
movsbw
setno
stc
mov
push
add
push
jmp
test
sub
bt
shr
mov
pusha
movb
mov
mov
jmp
pushf
pushf
mov
lea
not
mov
movzbw
pusha
mov
bswap
jmp
call
mov
pushf
lea
jmp
call
bsr
dec
shr
rcl
mov
rcl
add
jmp
cmc
cmc
add
test
neg
pushf
pushf
cmp
add
pushf
pushl
jmp
xchg
bt
adc
sub
mov
clc
neg
neg
mov
stc
call
mov
pusha
push
lea
jmp
pusha
mov
mov
movb
mov
pushf
lea
jmp
call
not
stc
cmp
pushf
jmp
and
clc
stc
cmp
movb
lea
jne
shl
xorb
call
jmp
call
clc
ror
cmp
sub
cmp
call
movb
pushl
popl
movl
lea
jmp
divl
push
jmp
push
mov
movb
jmp
call
mov
pushl
pushf
movw
pushf
lea
jmp
pushf
mov
movb
mov
movw
mov
jmp
pushl
popl
pushl
push
pushf
lea
jmp
pushl
lea
je
mov
push
pushf
lea
jmp
sets
pusha
mov
dec
ror
xor
adc
mov
call
rcr
shl
cmp
dec
lea
push
cmp
pushf
mov
pushl
pusha
lea
ja
rcr
xor
mov
push
aad
neg
ror
lea
das
sub
jmp
push
lea
jnp
pushf
lea
jne
sar
call
stc
sub
jmp
movb
pushf
inc
jmp
movb
call
movb
mov
push
mov
push
mov
pushf
pushf
push
lea
jmp
bt
sub
bt
pushf
pusha
cwtl
cmc
sub
call
call
lahf
movsbw
mov
push
mov
call
sete
mov
bts
movsbw
mov
push
clc
sub
jae
cmc
add
push
call
pushf
call
add
pusha
rol
mov
pushf
pushl
add
pushf
call
rcl
clc
rcr
ror
dec
rcr
clc
add
sar
xor
pushf
jmp
pusha
push
mov
lea
cpuid
stc
test
test
sub
stc
cmpl
jmp
jmp
clc
pusha
xor
pusha
push
xchg
mov
pushf
movb
movl
pushl
pushl
mov
push
mov
pushl
ret
pushf
pushl
popl
movb
movb
mov
lea
jmp
pushf
popl
mov
call
pusha
call
pushf
popl
pushf
pushf
call
movzbw
push
cwtl
mov
pusha
lea
jl
pusha
movb
lea
cpuid
pusha
clc
sub
cmc
cmpl
call
call
pushf
call
mov
push
mov
pushf
pushf
lea
jmp
clc
pusha
shr
jmp
rol
mov
cmc
sub
push
call
mov
movw
push
pushl
lea
jmp
lea
jne
push
mov
pushf
pushl
lea
jmp
pushl
pushf
cld
pushl
rep
not
jmp
pusha
pushf
mov
mov
mov
lea
jmp
pushl
popl
movl
movb
movw
lea
jmp
sar
adc
or
movzbl
jae
shl
sub
inc
sub
bswap
pushf
movb
inc
sbb
bts
xor
shrd
inc
btr
shrd
sub
movzbw
mov
movb
pusha
ror
shl
add
rol
bswap
sub
shl
shl
call
shl
call
pusha
pushf
jmp
lea
jne
rol
mov
clc
push
bt
jmp
mov
push
lea
jmp
jmp
mov
shr
movw
add
mov
pushf
mov
bt
pusha
add
pushf
pushl
mov
push
lea
jmp
movsbw
stc
stc
mov
cmc
rcl
add
not
mov
mov
jmp
mov
push
pushf
lea
jmp
movzbw
mov
pushf
jmp
mov
pushf
popl
mov
pushl
popl
mov
lea
jmp
pushf
push
mov
call
bswap
cwtl
sar
mov
test
pushf
mov
pushl
mov
add
jmp
pushl
pusha
mov
push
movb
jmp
pushf
xchg
rcr
and
mov
shl
mov
pushf
add
call
shld
jmp
pushf
cwtl
not
mov
pushf
bswap
lea
mov
jmp
shld
mov
stc
add
push
jmp
push
pusha
lea
jmp
lea
jmp
add
mov
push
mov
pushf
popl
pushf
pushl
popl
mov
push
pusha
lea
jmp
sub
jg
pop
movsbw
cld
or
pop
test
test
cmp
pusha
pushl
popf
movb
pusha
movb
mov
lea
jmp
adc
setge
mov
shrd
rcl
xor
bsf
xor
not
inc
not
ror
add
mov
jmp
setp
mov
movsbw
setns
movzbw
mov
jmp
pushl
mov
call
pushf
jmp
bsr
rol
bts
sub
sets
bswap
movzbw
inc
or
xor
dec
add
pushf
call
neg
sub
inc
sbb
cmc
movsbw
mov
cmp
cmp
cmp
test
add
push
movb
mov
pushf
push
pushf
lea
jmp
jmp
mov
pusha
pushf
push
movb
lea
jmp
pusha
stc
pushf
pushl
popl
bt
pushf
pushf
cmc
add
cmp
pushl
popf
push
pushf
pushf
pushf
lea
jmp
pusha
mov
pusha
pushf
pushf
popl
pushl
pushl
pushl
popl
push
movb
mov
lea
jmp
mov
pusha
pusha
movb
lea
jmp
jmp
lea
jle
mov
pushf
jmp
sub
jmp
push
push
mov
mov
mov
jmp
mov
movb
pushf
lea
jmp
call
call
mov
push
pushf
pusha
movw
lea
jmp
call
cmc
pushf
and
push
mov
push
pushf
popl
movb
pushl
jmp
lea
jo
mov
jmp
cmc
rol
push
cmp
xor
bt
sub
stc
call
mov
push
movsbw
mov
bswap
bswap
mov
pushf
jmp
pushf
popl
jmp
add
mov
call
test
bt
add
pusha
mov
cmp
stc
xchg
bt
jmp
call
add
movw
mov
pushl
pusha
push
pushf
mov
pushf
movb
movb
lea
jmp
setge
lea
mov
lea
xchg
mov
lea
pushf
movsbw
pusha
xchg
movsbw
movsbw
repz
popl
bswap
pushl
popl
bswap
movl
cmp
rcl
dec
mov
btr
add
add
pusha
call
bswap
mov
jmp
xor
clc
clc
mov
movb
cmp
sub
jmp
mov
push
pusha
lea
jmp
rol
cmp
test
mov
stc
clc
jmp
jmp
bswap
jmp
pusha
call
add
add
pushf
inc
cmp
test
pushl
xor
movb
jmp
mov
push
movb
mov
movb
lea
jmp
btc
mov
cmp
test
jne
sbb
mov
push
test
sub
clc
stc
shl
push
jmp
mov
movb
lea
jmp
mov
jmp
pushf
mov
movsbw
pushf
popl
movzbl
movsbl
std
mov
pusha
mov
bswap
std
lea
std
std
movw
xchg
pusha
movsbw
call
sub
push
call
pushf
pushf
mov
pushf
push
lea
jmp
mov
call
add
movsl
in
xchg
movsl
call
xchg
movsl
pushl
sahf
movsl
call
popf
movsl
lcall
xchg
movsl
cli
test
incl
lods
movsl
mov
stos
movsl
jmp
stos
movsl
sti
xchg
movsl
call
mov
jmp
test
movsl
call
test
ljmp
movsl
dec
xchg
movsl
call
popf
movsl
call
sahf
movsl
decl
movsl
jle
movsl
call
stos
movsl
dec
xchg
movsl
call
mov
out
sahf
movsl
decl
movsl
incl
movsl
lcall
xchg
movsl
decl
xchg
movsl
decl
movsl
pushl
lahf
movsl
call
sahf
movsl
sti
xchg
movsl
mov
lahf
movsl
jmp
xchg
movsl
call
mov
jmp
movsl
dec
fwait
movsl
incl
stos
movsl
incl
lods
movsl
out
sahf
movsl
decl
xchg
movsl
out
sahf
movsl
call
xchg
movsl
jmp
lods
movsl
call
lods
movsl
jmp
xchg
movsl
call
mov
call
xchg
movsl
incl
lods
movsl
incl
stos
movsl
sti
xchg
movsl
sti
xchg
movsl
mov
stos
movsl
mov
test
movsl
dec
fwait
movsl
incl
movsl
jle
movsl
jmp
popf
movsl
call
mov
incl
movsb
movsl
incl
movsl
ljmp
lods
movsl
mov
test
movsl
dec
fwait
movsl
incl
movsl
incl
stos
movsl
decl
movsl
ljmp
movsl
jmp
pushf
movsl
call
mov
decl
movsl
mov
xchg
movsl
lcall
movsl
ljmp
sahf
movsl
call
lods
movsl
jmp
scas
movsl
out
stos
movsl
pushl
lahf
movsl
mov
movsb
movsl
jmp
stos
movsl
call
mov
jmp
scas
movsl
incl
incl
mov
xchg
movsl
pushl
lahf
movsl
lcall
movsl
lcall
xchg
movsl
lcall
movsl
sti
xchg
movsl
call
stos
movsl
jmp
scas
movsl
call
mov
jle
movsl
call
xchg
movsl
jmp
test
movsl
call
stos
movsl
lcall
xchg
movsl
jmp
test
movsl
incl
lods
movsl
pushl
lahf
movsl
jmp
movsb
movsl
call
mov
jmp
scas
movsl
jmp
test
movsl
call
popf
movsl
incl
movsb
movsl
incl
stos
movsl
in
xchg
movsl
push
stos
movsl
incl
cmpsl
movsl
jmp
lods
movsl
jmp
pushf
movsl
call
mov
out
cmpsb
movsl
sti
xchg
movsl
incl
stos
movsl
incl
scas
movsl
jmp
lods
movsl
call
lods
movsl
decl
movsl
incl
stos
movsl
in
xchg
movsl
mov
stos
movsl
incl
movsl
call
mov
out
stos
movsl
out
stos
movsl
incl
stos
movsl
jle
movsl
lcall
xchg
movsl
decl
movsl
dec
xchg
movsl
lcall
xchg
movsl
incl
decl
movsl
incl
lods
movsl
lcall
movsl
jmp
stos
movsl
incl
movsl
call
mov
decl
lahf
movsl
out
cmpsb
movsl
jmp
test
movsl
ljmp
movsl
ljmp
movsl
dec
fwait
movsl
mov
scas
movsl
call
movsb
movsl
incl
jmp
xchg
movsl
call
mov
call
xchg
movsl
call
lods
movsl
decl
movsl
mov
popf
movsl
incl
mov
xchg
movsl
lcall
movsl
lcall
movsl
call
movsb
movsl
incl
movsl
incl
movsl
call
mov
cli
test
jmp
stos
movsl
call
xchg
movsl
incl
stos
movsl
push
stos
movsl
pushl
xchg
movsl
incl
pushl
sahf
movsl
sti
xchg
movsl
decl
popf
movsl
out
sahf
movsl
js
movsl
call
mov
push
stos
movsl
jmp
sahf
movsl
pushl
sahf
movsl
call
lods
movsl
incl
stos
movsl
call
xchg
movsl
call
cmpsb
movsl
mov
cmpsl
movsl
decl
movsl
in
xchg
movsl
out
cmpsb
movsl
call
mov
call
xchg
movsl
jmp
into
out
call
pusha
sub
pushf
push
bt
pushl
cbtw
bt
pushl
cwtl
bt
push
push
cmp
sub
push
jmp
jmp
dec
mov
sar
bts
rcr
mov
pushf
cmc
push
bt
add
jmp
shl
mov
setne
shld
shr
bsr
mov
clc
call
pop
lea
pop
pushf
pushf
pushl
lea
jmp
pushf
movb
stc
sub
test
push
call
bswap
rcl
mov
bts
pusha
bts
sub
test
mov
cmc
neg
not
not
movzbw
rol
sub
xor
and
pusha
not
sub
bswap
pop
pushf
pushf
movzbl
pushf
pushl
jmp
pusha
jmp
push
mov
pushf
mov
push
mov
pushl
ret
pusha
jmp
pushl
popl
push
pushf
push
pushf
lea
jmp
call
call
pushf
mov
movw
mov
mov
pusha
push
jmp
mov
pushf
push
lea
jmp
pushf
jmp
bts
shl
mov
bts
add
bsf
call
or
shl
mov
cmp
cmc
cmp
sub
cmp
push
jmp
cmp
pushl
lea
jne
shl
xorb
pushf
movsbw
bswap
not
mov
push
lea
jmp
call
pushl
popl
pushf
pushl
movl
mov
lea
jmp
btc
cld
aad
mov
not
aas
pop
and
shld
aas
clc
pop
rcl
popf
bswap
pop
bswap
lea
pop
push
movzbw
not
mov
pusha
movzbw
jmp
movb
lea
je
push
xor
stc
pushf
xchg
pusha
cmc
mov
pushl
sub
pushf
call
pushl
popl
push
pushf
pushf
lea
jmp
jmp
jmp
btr
cwtl
mov
pusha
cmc
jmp
rol
push
cmp
pusha
xor
test
add
pushf
add
jg
bt
pushf
sub
cmp
push
cmp
clc
cbtw
clc
stc
cmc
cwtl
call
cmp
clc
lea
stc
sub
clc
push
movb
not
jmp
call
bt
jmp
cmc
xchg
stc
test
sub
test
call
sub
jmp
and
shrd
rcl
mov
pusha
cmp
test
sub
movl
lea
js
pusha
mov
pushf
movb
movw
pushf
lea
jmp
shl
add
rcr
mov
mov
stc
bt
pusha
cmc
sub
stc
stc
pushf
mov
add
movb
pushf
popl
jmp
sbb
cld
pop
ror
inc
std
inc
pop
jmp
call
push
pushf
movb
push
mov
pusha
push
movw
lea
jmp
shl
movl
mov
pusha
call
mov
pushf
rcr
shld
mov
setp
and
mov
test
test
sub
bt
movb
shr
jmp
sub
btr
rcl
ror
rcr
call
mov
push
push
lea
jmp
aad
mov
cmp
btc
bswap
mov
mov
bt
clc
not
stc
stc
not
pusha
and
pusha
mov
push
call
cmp
test
stc
cmc
shl
pusha
pusha
mov
jmp
jmp
call
jmp
pushf
pushf
lea
jne
shl
movsbw
mov
bt
and
bt
push
stc
cmp
pushf
mov
lea
jne
rcl
ror
xorb
not
pop
pusha
pushf
pushf
lea
jmp
pushf
popl
pushf
pushl
popl
pushf
lea
jmp
cmp
add
pusha
call
jmp
rol
rcr
mov
pusha
push
push
cmp
add
jmp
jmp
clc
push
ror
rcr
and
push
movsbw
add
xor
bswap
and
xor
shl
pusha
pushl
sbb
and
movsbw
mov
mov
sub
movw
jmp
mov
jmp
mov
push
push
pushf
popl
pusha
push
pushl
popl
push
pushl
push
lea
jmp
jmp
jmp
pusha
pushl
mov
pushf
movw
pushf
lea
jmp
rcr
daa
lea
jmp
not
movzbl
cmc
pusha
sub
cmp
pushf
clc
pusha
neg
jmp
mov
pusha
pushf
pushf
pushf
lea
jmp
mov
call
pushf
cmp
pushl
popf
pushf
push
movl
pushf
lea
jmp
call
not
pushf
pop
inc
rcl
bt
inc
and
not
push
stc
btc
sub
bswap
push
xor
bswap
inc
bts
movsbw
movzbw
movzbl
bsf
pop
sub
mov
cmp
not
jmp
stc
mov
clc
bt
and
pusha
clc
call
call
movb
push
mov
push
push
pushf
push
lea
jmp
mov
xchg
cmp
sub
pushl
sub
push
mov
call
mov
movw
pushf
push
lea
jmp
mov
push
pushl
pushf
lea
jmp
push
pushf
popl
pushf
jmp
pusha
mov
push
lea
jmp
bts
not
mov
rcr
inc
sets
shl
mov
cmc
stc
stc
push
sub
jmp
movb
mov
pusha
push
push
pushf
lea
jmp
push
mov
mov
pusha
mov
pusha
lea
jmp
rcr
shl
cmc
mov
cmc
pushf
sub
call
cmc
stc
not
cmc
bt
movl
test
add
bt
call
pushl
pushf
call
push
mov
push
pushf
lea
jmp
pushf
popl
push
call
jmp
jmp
mov
pushf
call
push
pusha
jmp
call
aas
rol
xor
aaa
mov
rol
rcr
mov
push
cmc
clc
sub
jnp
add
push
pushf
mov
pusha
lea
jmp
pushf
jmp
pushf
clc
sub
cmc
pushf
clc
movl
sub
jmp
jmp
movb
pushf
popl
movl
jmp
btr
neg
rcl
mov
sbb
mov
or
call
add
jmp
jmp
call
stc
cmc
pusha
stc
add
movb
jmp
cmc
mov
cmp
jmp
mov
mov
lea
jmp
lea
stc
sub
movsbl
cmp
shl
adc
mov
bswap
pusha
bsr
mov
shrd
sub
dec
add
lea
sub
mov
not
lea
shl
xor
call
shrd
mov
jl
push
clc
lea
stc
cmp
sub
cmc
cmc
clc
pusha
not
clc
bt
stc
add
push
stc
jmp
push
pushf
popl
push
jmp
mov
pushf
push
pushf
lea
jmp
pushf
popl
push
pushf
movb
pushl
popl
pushl
lea
jmp
mov
pushf
pusha
lea
jmp
mov
pushf
mov
pushf
mov
pushf
movl
lea
jmp
setge
shld
mov
jmp
push
jmp
sub
call
jmp
pushf
pushf
mov
pusha
call
push
mov
call
push
pushl
pushf
pushf
mov
mov
pushf
push
lea
jmp
pusha
push
mov
movb
movb
lea
jmp
sub
pushf
stc
cmc
neg
pushf
call
inc
movb
push
pushl
decl
call
jmp
jmp
jmp
pushf
bswap
xchg
mov
jmp
stc
lea
rol
xadd
neg
shld
sar
call
mov
jmp
push
mov
pusha
pushf
pushl
pushf
lea
jmp
push
jmp
mov
pushl
popl
pusha
lea
jmp
mov
pushl
push
pushl
mov
lea
jmp
push
call
shld
shl
mov
and
mov
jle
sub
push
sub
jp
test
pusha
shl
pusha
mov
push
pushf
push
pushl
pushf
popl
jmp
sub
jmp
dec
mov
clc
cmc
add
pushf
lea
jmp
pushl
popl
pushf
mov
lea
jmp
sub
pushf
call
sub
pushf
shl
pushl
jmp
pushl
popl
push
mov
mov
lea
jmp
movl
mov
mov
push
pushl
lea
jmp
pusha
mov
and
mov
push
not
call
mov
mov
pusha
movb
lea
jmp
mov
movsbl
mov
push
mov
pushf
pushl
ret
add
push
movb
jmp
clc
cmp
sub
stc
cmc
jmp
lea
jns
ror
btr
sbb
not
add
btr
bswap
xor
rcl
call
mov
pushf
mov
call
pushf
inc
movzbl
clc
xor
mov
cmp
clc
xor
pusha
call
rdtsc
rdtsc
push
cmc
pusha
call
jmp
jmp
mov
call
lea
jne
call
mov
call
das
mov
stc
rcr
notl
neg
clc
or
mov
test
sub
test
cmp
and
pushf
movw
pushf
popl
pushf
pusha
mov
pushl
popl
pushf
lea
jmp
cmp
stc
sub
pusha
pushf
mov
mov
pushf
lea
jmp
pushf
movzbw
mov
jmp
pushf
call
xor
add
sbb
dec
mov
cmp
push
clc
shl
test
shr
push
or
clc
bt
clc
xor
pusha
call
push
mov
pushl
pusha
pushf
movb
lea
jmp
call
call
sbb
lea
shld
xor
sar
movzbw
neg
cmp
or
xor
bsf
pusha
mov
jmp
bsf
xadd
inc
mov
mov
dec
or
mov
jmp
pushf
popl
mov
call
inc
movl
call
jmp
inc
stc
or
mov
mov
jmp
sbb
dec
movzbl
stc
pusha
movb
stc
sub
jmp
push
call
jmp
