dec
loope
into
mov
mov
cltd
mov
jns
jmp
outsb
dec
cmp
add
nop
inc
in
data16
sub
mov
and
or
xor
stos
pop
iret
mov
add
mov
sub
ja
dec
lds
add
pop
aam
jle
inc
dec
pop
es
ret
pop
lock
xchg
dec
jne
or
cmp
gs
lahf
xor
dec
adc
addr16
push
int
ret
xchg
std
xchg
pop
pop
movsl
push
mov
jnp
aas
imul
inc
test
aad
xor
inc
jae
jno
cmp
pop
adc
inc
mov
shrl
fisubl
jnp
fdivrs
fcmovnb
sbb
add
shrl
pop
imul
sub
int
jl
or
shufps
call
sub
mov
test
mov
mov
mov
data16
pop
fadds
repnz
and
jg
add
mov
mov
call
mov
mov
rolb
lds
xchg
cltd
sbb
subl
repnz
mov
mov
and
ret
jmp
fldenv
in
mov
je
cmp
outsl
js
out
movsb
jnp
push
fdivrl
push
iret
movsb
js
mov
in
lret
stos
lock
dec
cmpsb
mov
cmp
push
fwait
in
cmp
or
jge
mov
sar
les
add
jbe
mov
cmp
inc
sbb
imul
mov
push
fwait
mov
enter
int3
or
xor
stos
leave
rol
popf
mov
outsb
lahf
mov
in
fdivl
sub
jmp
pop
pop
dec
ljmp
bnd
daa
mov
or
mov
adc
arpl
jmp
adcb
adc
jnp
inc
sti
ficoml
jge
loop
mov
jo
mov
jbe
sub
pop
data16
or
clc
dec
jle
test
dec
iret
je
int
repnz
adc
and
mov
and
pusha
push
mov
or
adc
fs
scas
sub
icebp
ljmp
adc
loope
jle
mov
mov
cmpsl
push
jp
mov
dec
xor
dec
aam
inc
imulb
cld
lods
loop
subb
inc
sarl
xchg
push
je,pn
loopne
mov
insb
pusha
mov
dec
sub
pop
cs
mov
out
shlb
popf
push
or
cwtl
lret
popa
xchg
or
sub
loop
xchg
mov
aam
dec
add
xor
xor
imull
out
cmc
cmp
xor
gs
daa
cs
mov
sub
loope
adc
or
mov
adc
mov
popf
push
pop
loopne
push
and
mov
and
sbb
cmp
stos
pop
add
jge
fs
mov
xor
adc
xor
mov
push
jl
js
nop
mov
push
adc
sbb
jecxz
push
fwait
sti
lahf
dec
or
jno
ljmp
popa
mov
jle
inc
push
aaa
in
test
xor
loopne
rcrb
pop
ds
adc
loope
cmp
or
sbb
xchg
inc
xchg
mov
push
pushf
repz
jbe
imul
ja
out
add
and
sbb
addb
add
pop
stc
scas
mov
test
insb
jg
xchg
jno
iret
and
cmp
test
incl
jp
sub
push
clc
insl
aas
jne
dec
mov
fisubrl
push
pop
mov
adc
mov
out
push
in
cwtl
inc
movsb
test
sbb
fs
pop
mov
jl
mov
ffreep
cs
or
shl
mov
loope
daa
fstpt
push
test
jmp
mov
les
jge
out
sahf
lcall
mov
mov
or
out
mov
xor
push
or
sbbb
and
data16
push
sbbl
lahf
out
stos
add
daa
movsl
stos
add
popa
mov
das
movl
fcoml
enter
mov
js
adc
mov
lds
push
fmull
mov
add
dec
insb
jne
into
ficompl
xchg
adc
cmpl
adc
mov
into
jle
sahf
mov
lds
cs
fwait
inc
fcoms
mov
lea
push
test
mulb
adc
icebp
mov
push
add
or
or
or
cmc
stc
xor
adc
js
in
adc
xchg
mov
iret
cmpb
adc
mov
adc
fcmovnb
mov
jge
sub
xchg
push
xor
rcrb
mov
int3
or
push
jne
nop
data16
rcl
xor
stc
es
pop
push
pop
sbbb
hlt
ret
cmp
es
pusha
cli
imull
xor
jnp
inc
pop
mov
sti
lods
xchg
or
test
jae
xor
push
lock
sub
lahf
aad
or
inc
test
cltd
mov
jb
outsb
ja
dec
arpl
out
call
popl
push
xchg
dec
sbbl
jno
mov
je
insb
mov
sub
popf
fwait
mov
shll
insb
divl
adc
fisubs
inc
scas
mov
lret
inc
push
movsl
lods
mov
jbe
imul
jmp
xchg
jnp
xchg
sbb
mov
push
movsb
mov
lds
mov
mov
sti
jg
lahf
mov
mov
shrl
mov
push
jl
test
push
lahf
mov
xchg
pop
jecxz
mov
adc
jmp
push
xor
dec
shr
outsl
shr
hlt
iret
mov
pop
je
dec
dec
cmpsl
sub
lea
cmpsl
adc
scas
gs
dec
scas
testb
ret
dec
clc
sbb
shlb
js
ds
mov
in
stos
pop
test
data16
push
andb
cwtl
leave
and
xchg
dec
xchg
rclb
and
scas
sahf
test
mov
out
aam
add
shll
cs
cltd
cmp
pop
jae
sbb
fdivs
add
mov
packuswb
inc
xchg
decl
loope
fcoms
imul
jge
inc
dec
pusha
xor
mov
shrl
ja
shlb
pop
es
xor
xchg
sahf
inc
mov
ret
jle
das
cmp
push
sub
shl
aam
ja
dec
and
or
mov
fmul
out
mov
push
fsubrs
test
dec
add
outsl
jo
or
mov
enterw
popf
bound
outsb
je
push
stc
push
jmp
push
int3
int
popa
lods
ja
adc
aaa
xor
xor
mov
sbb
jns
dec
les
mov
adc
mov
lock
mov
fiadds
std
inc
add
mov
inc
stc
mov
xchg
jo
in
pop
or
imulb
jnp
pusha
mov
mov
mov
inc
adc
mov
jecxz
hlt
jbe
mov
sub
dec
dec
mov
xor
imul
bound
adc
fisttpll
push
sub
fcompl
arpl
icebp
icebp
imul
int3
mov
sbb
push
repz
test
aas
inc
out
xchg
rcr
add
aad
call
daa
fwait
sub
sbb
sub
out
push
insb
and
cmc
fadds
sar
rorb
jmp
sbb
mov
sbb
pop
in
adcb
popa
pushf
add
ret
mov
mov
loopne
js
fbstp
xor
fcmovnu
dec
lea
cmp
xchg
mov
dec
xor
hlt
sub
repz
jg
mov
xchg
mov
sbb
leave
mov
and
add
cli
add
or
ss
sbb
jno
repz
jne
sarb
hlt
jl
std
neg
cli
into
int
push
test
aam
mov
and
add
cs
push
movsl
sbb
scas
fiaddl
je
lods
xlat
movl
loop
out
and
and
stos
sbb
clc
popa
ret
mov
flds
and
mov
hlt
cld
jg
xor
insl
inc
sub
imul
out
cli
jbe
dec
pushf
xor
sub
jle
and
mov
gs
ds
icebp
push
dec
sbb
add
stos
cli
xchg
popa
and
cmp
add
ds
test
jns
cltd
out
test
and
addr16
mov
or
subb
xchg
repz
pop
xor
cmpsl
pop
mov
add
in
mov
sbb
adc
or
inc
push
decl
jb
movsl
adc
mov
aad
cmp
jnp
imul
push
inc
push
cld
sub
leave
jge
test
lcall
sub
cwtl
flds
icebp
insl
jmp
add
ret
xchg
aas
xor
cmp
flds
sub
out
pop
icebp
in
jl
jecxz
mov
rolb
iret
inc
dec
ss
dec
leave
mov
inc
or
jmp
in
add
imul
add
mov
cmp
xor
data16
pop
cli
lds
jl
in
pushf
xchg
bound
fistps
jnp
push
pop
sbb
nop
mov
xor
enter
jecxz
jns
dec
popf
or
add
mov
bound
jbe
jle
bound
test
add
pop
xor
insl
fsubl
push
cmc
inc
lret
mov
adc
stos
sbb
sbb
test
dec
sti
imul
mov
mov
add
push
push
xor
push
popl
cmpl
jle
mov
jle
in
xchg
push
push
pusha
cmovbe
js
mov
push
push
pop
divb
sahf
es
or
inc
movsl
int3
enter
nop
mov
fisubrl
sbb
adcb
adc
xchg
inc
pop
idiv
xorl
mov
std
push
xor
insl
push
cmp
out
mov
out
addl
add
xchg
xchg
add
jle
jle
rcrb
adc
adcl
add
cmpsb
xor
pop
cmp
int
lcall
jns
in
daa
inc
pop
insb
sbb
cwtl
mov
clc
mov
mov
pop
inc
add
scas
les
lock
xchg
push
pop
sub
in
or
xlat
arpl
and
inc
and
push
xor
push
fdivl
jbe
dec
fdivl
cmpsl
push
popf
cmp
rclb
push
xor
push
pop
sub
insb
mov
mov
stos
ja
sbb
shlb
push
cmpl
mov
call
and
aas
lds
movsb
sub
ds
outsl
faddl
test
xchg
xor
jle
enter
xor
repz
cmc
pop
into
xor
test
fcomi
sub
pop
pop
jg
dec
sahf
jbe
bound
jae
in
fnstsw
popf
sbb
out
xor
aam
dec
imul
pop
pop
pop
sub
subb
add
out
rcr
dec
xorb
sub
sub
fmull
mov
xchg
inc
ljmp
mov
fs
mov
jp
aas
rcrl
mov
sti
xchg
imul
ficomps
arpl
insb
xchg
divb
stos
sub
push
adc
cmp
ja
les
xor
loope
mov
test
adc
mov
push
dec
pop
pop
mov
adc
mov
fistl
test
fnstcw
cwtl
iret
es
cli
xorl
mov
sub
or
jecxz
sbb
outsl
js
push
or
enter
into
mov
and
push
icebp
fxch
ret
test
cmp
xor
shrl
into
add
pop
mov
push
js
aad
xchg
mov
jge
call
dec
mov
jnp
and
mov
sub
pop
daa
pop
movsl
push
dec
idivb
pop
in
in
mov
shr
lahf
xor
xor
add
into
bound
adc
pop
in
scas
adc
inc
stc
mov
cmpsl
insb
popa
mov
sub
shl
pusha
sbb
out
inc
or
lock
mov
out
das
jl
sbb
fstl
cltd
sub
push
pop
aam
lret
sub
mov
cwtl
not
je
lods
in
aas
xchg
outsb
in
loope
dec
push
pusha
pop
push
testl
fucomi
inc
or
shll
jb
jnp
cwtl
cs
mov
add
je
dec
inc
pop
pusha
cwtl
mov
mov
enterw
push
les
fs
das
jl
in
add
lea
mov
shlb
js
enter
mov
lods
scas
loopne
jno
sbb
mov
sbb
lahf
mov
sti
fs
sub
movsb
mov
aad
into
lret
rolb
aam
inc
adc
in
pushf
sbb
cmp
fs
stos
in
mov
ja
jmp
pop
loopne
inc
push
mov
sub
scas
lahf
xchg
fldl2e
ss
xchg
push
dec
push
stos
hlt
jge
repnz
push
cs
out
xchg
arpl
pop
cmpl
imul
add
jbe
cmp
and
ds
repz
fiaddl
je
test
push
stos
imul
je
lods
shll
lods
adc
mov
mov
fildl
aas
mov
test
lahf
popa
fcomps
push
in
das
in
xor
adc
pop
popl
shlb
call
or
jbe
jns
std
mov
mov
push
ret
xchg
cwtl
jl
fidivl
repz
gs
test
mov
push
jecxz
pop
sub
aad
bound
xor
iret
xor
inc
mov
insb
leave
fs
movsb
inc
mov
mov
sub
test
mov
mov
imul
outsl
and
test
into
dec
inc
mov
js
mov
mov
pop
insl
adc
push
insl
sti
lods
jp
fsubp
pop
inc
insb
or
in
cmpsl
jecxz
shl
out
xchg
mov
push
daa
std
xchg
cmp
adcl
insl
clc
outsl
xchg
arpl
push
rcll
stos
xchg
inc
out
dec
mov
outsb
mov
mov
mov
lds
stos
mov
cmp
push
rcll
cmp
inc
mov
cmp
mov
fs
scas
roll
and
and
das
outsl
and
mov
icebp
mov
rcr
add
inc
les
dec
jl
out
inc
fidivl
mov
xchg
popf
cmp
in
xor
jo
xor
mov
adc
xor
push
push
bnd
out
call
aaa
fmuls
xor
push
adc
xor
mov
nop
notl
in
mov
jae
push
hlt
arpl
cmpsb
sub
sbb
or
jae
lock
pushf
out
js
cmp
adc
cwtl
inc
inc
scas
jmp
dec
les
sbb
mov
dec
push
int
bound
dec
push
inc
je
mov
mov
cs
pop
sub
js
sti
movsl
ljmp
test
mov
cmp
orl
scas
pop
sbb
lods
push
gs
aaa
in
sbb
lret
add
std
pusha
dec
mov
inc
adc
sub
and
lret
push
jbe
outsb
inc
test
pop
push
pop
fucomp
out
movsl
pop
adc
test
call
mov
sub
cld
cli
andl
sbb
pop
add
mov
lret
fcoml
jns
fistps
lds
rorl
lods
enter
test
fnsave
inc
faddl
imul
push
sbb
push
imul
repz
add
fldenv
cmp
cmpsl
xchg
imul
xchg
fisttpl
fisttpll
lds
call
lret
loopne
popa
xlat
adc
mov
roll
sub
pop
xchg
mov
mov
add
xorb
xor
sub
jno
and
cmpsb
jecxz
pop
test
and
jo
lcall
aaa
lret
mov
in
mov
fcomip
outsl
or
jnp
aam
sbb
sbb
jno
imul
out
in
mov
in
inc
aam
cmp
sub
mov
stos
mov
jmp
test
xchg
xchg
xchg
fisubrl
enter
out
stos
mov
push
jbe
adc
testb
pop
test
pusha
pushf
out
inc
in
je
int3
push
add
shl
loopne
dec
jns
cmc
test
mov
fcomi
jne
cmp
inc
lods
out
dec
dec
dec
mov
clc
les
jp
mov
jmp
xchg
and
imul
cmc
xchg
lods
mov
push
xor
idivl
dec
sbb
push
adc
cmpsb
adc
jp
mov
cmp
inc
out
mov
hlt
pushf
cmp
push
mov
test
inc
jae
xchg
shrl
js
jp
into
test
mov
enter
jne
ret
mov
roll
push
mov
add
sub
xor
jb
xchg
sub
icebp
in
loope
cmp
leave
mov
je
mov
or
jl
xor
cmc
dec
loopne
mov
jl
mov
test
sbb
pshufw
push
push
push
push
dec
jo
jp
push
mov
das
push
sub
inc
in
add
push
ror
push
nop
loope
xchg
mov
cmp
inc
lea
inc
mov
and
jo
mov
mul
popf
mov
cmpsl
clc
scas
jns
lcall
js
inc
inc
push
lcall
mov
aad
cmc
cmpsl
out
cmp
add
rolb
dec
popf
sbb
inc
mov
testl
push
es
xchg
popa
dec
add
dec
or
outsb
and
insl
adc
push
push
add
xchg
dec
sub
lods
je
or
jg
popf
mov
pop
cmpsl
mov
sub
mov
jge
sub
bound
mov
inc
call
inc
jae
cmpsb
cmp
sbb
lcall
sbb
data16
xor
dec
cmpb
loop
insl
jb
fists
fs
cld
lret
sti
xlat
push
fucom
out
mov
push
mov
cmpsb
pop
xorl
cli
mov
imull
addr16
js
mov
jmp
mov
cmp
fildll
aas
mov
adc
xchg
inc
ret
and
adc
push
mov
xchg
cwtl
test
add
push
hlt
jge
aad
dec
add
sahf
and
dec
mov
les
loopne
jl
jns
movsb
xchg
loop
scas
pop
push
int3
jl
add
jg
pop
jo
dec
test
mov
lea
andb
in
pshufw
mov
inc
movsl
adc
xor
aad
jne
mov
cltd
dec
mov
xor
jecxz
andb
imul
xor
shrl
out
mov
sbb
ficoms
scas
sti
popf
cwtl
mov
movsb
out
and
test
cmc
xchg
popf
adc
stos
dec
aaa
test
sbb
jbe
pop
stos
mov
lods
ds
adc
or
icebp
aaa
or
pushf
stos
push
jne
xchg
icebp
imul
mov
movsl
repnz
xlat
in
jns
pop
pop
test
push
jmp
fbstp
jo
xor
adc
mov
cmp
mov
mov
cmp
or
call
and
shlb
jbe
inc
cmp
inc
mov
popa
lret
add
insl
pop
sub
mov
aas
push
xchg
arpl
negl
lock
push
pop
mov
dec
dec
push
jne
data16
imul
ds
push
dec
test
dec
and
or
bound
mov
ret
jle
add
xchg
stos
mov
xchg
inc
adcb
dec
xchg
stos
aaa
aas
movsl
or
sub
data16
in
inc
dec
xchg
add
iret
mov
xchg
clc
lods
xor
jp
adc
jle
out
cmp
fwait
lret
cmp
jg,pn
push
pop
adc
mov
int
popf
dec
mov
mov
xchg
sti
adc
scas
push
jb
pop
mov
subl
pushf
mov
ret
cld
sub
sbb
cmp
pop
fsubr
cmp
mov
sbb
mov
mov
rol
or
mov
xchg
data16
and
dec
cmp
es
testb
jnp
clc
sub
imul
mov
pop
xchg
int3
cmp
rcrb
push
mov
cwtl
leave
js
push
gs
mov
pop
std
subl
nop
add
data16
xor
lds
out
mov
dec
sarb
fs
or
inc
inc
iret
in
mov
inc
mov
pop
cmp
jge
fsubrs
and
pop
addr16
cmp
sub
subb
or
sub
test
mov
jl
mov
dec
rcrl
fidivs
inc
clc
ss
cmp
imul
lea
jne
fdivl
mov
sub
les
jns
bound
cli
push
aad
pop
sub
or
cmp
xchg
jge
inc
add
mov
mov
clc
aas
imul
test
mov
mov
jmp
iret
mulb
insl
inc
jmp
sbb
ret
xor
cld
sbb
nop
inc
add
loope
pop
xchg
ficompl
paddusw
popf
cmp
aaa
fistpll
mov
inc
xchg
cmc
clc
push
fcmovnu
add
push
ffree
mov
out
std
push
stos
jb
and
sti
popf
std
iret
ds
dec
scas
mov
and
or
adcb
or
xor
xor
sbb
subb
es
jle
mov
dec
pop
adc
cmc
popf
add
cs
lds
js
js
out
push
movsl
jl
cmpb
jb
fildll
fwait
out
cli
mov
loope
inc
add
lds
sub
fs
push
stos
sub
xor
mov
push
or
test
cli
jmp
and
jl
inc
mov
ja
fwait
ret
ret
sbb
repnz
loopne
dec
sbb
call
incl
jmp
push
pop
loop
push
fmul
jmp
mov
fwait
add
xchg
inc
movsb
mov
push
add
adc
xor
repnz
hlt
dec
paddw
sbb
xchg
ljmp
cmp
sahf
insb
out
mov
scas
inc
pushf
adc
ljmp
mov
jge
popf
and
inc
and
jecxz
sbb
adcb
and
fisubl
loop
sbb
lcall
out
incb
xchg
and
push
flds
loopne
fcoml
mov
fimuls
icebp
xchg
scas
shlb
jge
addl
sub
imul
mov
mov
cmpsl
mov
movsb
jne
mov
or
je
clc
popf
std
popf
mov
mov
push
pop
das
mov
cmp
push
outsb
pushf
loop
pop
pop
in
inc
jbe
or
into
lods
jb
jge
jbe
aaa
rcll
jp
les
and
gs
loope
jns
inc
nop
pop
insb
lods
pop
sbb
jo
sub
adc
sub
cwtl
test
jle
addl
jb
andl
push
add
movsb
lock
jecxz
std
sub
and
testb
mov
push
mov
push
repz
mov
or
out
popf
test
imul
dec
sub
call
inc
mov
dec
inc
lea
mov
jbe
pop
popf
add
sbbl
and
cmovbe
jle
mov
notl
cltd
bound
or
mov
mov
dec
rorb
test
fildll
filds
xor
or
iret
aaa
mov
xor
mov
push
cmp
out
ljmp
mov
and
test
jmp
push
inc
or
loop
or
mov
iret
cmp
mov
cmc
fbstp
mov
adc
jge
or
andl
jo
cmp
js
imul
movb
add
mov
dec
nop
sbb
data16
fs
aaa
mov
push
jecxz
mov
xchg
outsl
pop
inc
andb
inc
lcall
push
cwtl
jbe
mov
es
sbb
shlb
call
inc
ret
sbb
roll
cmp
sbb
ss
sub
pop
xor
pop
push
push
lea
imul
fsubr
ja
mov
dec
popa
mov
jp
ja
je
in
std
dec
push
loope
jmp
mov
cmp
cmpsb
sub
mov
xchg
scas
jo
and
cmp
add
push
sub
mov
inc
mov
pop
push
rorl
jg
jecxz
pop
add
sub
jbe
addb
repz
movsl
xchg
dec
or
adc
mov
sbb
xchg
lock
leave
sbb
mov
adc
adc
fiadds
sbb
adc
in
xchg
lds
call
scas
mov
hlt
sbb
gs
loop
fsubl
in
pop
and
or
mov
je
mov
jle
call
cmp
pop
push
test
add
cwtl
rclb
lods
notb
inc
pusha
popf
jbe
stos
mov
hlt
cltd
xchg
mov
insl
and
jbe
test
ret
out
mov
pop
jnp
adc
adc
xor
or
jae
lret
loop
inc
sbb
sub
pusha
cli
aaa
mov
pusha
adc
ss
lock
dec
sbb
nop
insl
test
pusha
mov
fcoml
pop
orb
mov
push
lods
or
divl
aaa
add
psubusw
cmp
popa
cmp
and
in
cmp
enter
dec
pop
jb
xor
pop
out
mov
pop
scas
dec
daa
add
into
jns
cmpsb
mov
xor
xlat
lds
adc
popa
push
pusha
pop
cmp
jne
adc
and
int
pop
lcall
sbb
repnz
xor
orb
and
pop
shlb
add
mov
pusha
dec
mov
ja
dec
pop
imul
outsl
int3
jmp
mov
fdivrs
sti
pusha
sarb
imul
push
adc
roll
leave
sti
mov
push
add
pop
jle
dec
cmpsl
mov
push
push
lods
mov
xor
repz
out
or
daa
or
xor
stos
enter
movsb
into
dec
aaa
pop
jg
arpl
cmc
xor
mov
mov
popa
jae
movb
or
cmp
cmp
sbb
mov
add
movaps
jae
nop
bound
out
adcl
fiadds
das
pop
in
jne
add
mov
pop
adc
aaa
loop
jmp
inc
mov
fwait
testl
cmp
push
mov
mov
xor
adc
inc
jle
push
sahf
cmc
imul
inc
jge
aad
shrl
and
cld
jnp
out
loop
lds
xchg
stc
jns
cltd
sub
adc
mov
scas
mov
ret
mov
lods
rol
sbb
jo
push
fdivs
addr16
sub
pop
popa
and
stos
jns
mov
cs
popf
push
mov
aad
mov
icebp
in
or
daa
fimuls
fisubs
enter
test
filds
xlat
mov
int3
and
add
xor
xchg
scas
idivl
mov
xor
nop
xchg
inc
push
add
push
xchg
xchg
push
push
push
fnstsw
fcomp
cmp
iret
add
adc
mov
cmp
leave
lret
push
cmpsb
mov
mov
dec
int3
data16
mov
cmp
gs
or
cmp
iret
cmp
cmpsb
or
jecxz
aad
fistl
ljmp
push
imul
mov
aam
add
pop
xlat
jae
stos
clc
lret
rcrb
fs
mov
aas
fstps
bound
push
push
push
jae
pop
sub
add
int3
fs
movsb
ja
ds
push
and
push
pop
mov
xor
pop
fmulp
arpl
outsl
mov
fsubrs
cmp
je
cmp
and
adc
xor
cli
outsl
insl
stos
lods
dec
and
jmp
rcll
fucomi
xchg
mov
in
rorb
fistpll
push
xor
lock
stc
inc
test
or
mov
mov
loopne
sbb
adc
call
xchg
xor
and
outsb
in
dec
clc
push
fnsave
inc
ja
mov
inc
add
fnstcw
xchg
sahf
cmp
fs
or
in
mov
pop
aaa
or
mov
mov
clc
das
sub
push
push
push
clc
outsl
enter
out
jecxz
cmp
mov
jge
lock
rol
dec
jp
xor
sub
mov
dec
jecxz
movsl
mov
sbb
jmp
aas
or
add
addr16
sbb
jg
pop
lods
push
cli
out
decl
loopne
cmp
imul
jp
sbb
loope
repz
add
ja
adc
sahf
ficoml
mov
or
sahf
loopne
mov
xor
sub
popa
xor
pop
js
popa
imul
enter
sub
cmp
imul
mov
xchg
add
xor
cmp
cmp
sub
mov
rolb
fwait
leave
call
dec
out
dec
ffree
and
mov
xor
sbb
jb
aas
jg
adcb
das
rcrb
imul
es
add
aad
xor
jb
xchg
xchg
or
cmp
not
push
loop
flds
ret
gs
pop
sbb
and
jmp
push
shrb
cld
jg
xchg
push
es
js
aad
mov
js
ret
scas
dec
aaa
rcll
and
add
inc
jno
mov
mov
sti
mov
and
add
call
cmp
enter
ss
mov
test
dec
inc
rcrl
in
inc
xchg
cwtl
jae
mov
mov
fwait
shll
push
or
lcall
xchg
push
lcall
movsl
xlat
mov
mov
push
cmp
lea
xchg
loopne
add
dec
dec
xor
add
hlt
mov
pop
xor
jo
loopne
dec
push
adc
test
je
sbb
andb
stos
jp
sarl
mov
xlat
jle
movsl
loop
int3
sarl
sub
cltd
mov
std
ficompl
cmpsl
test
jne
lret
adc
mov
sbb
stos
scas
sbb
add
pop
cwtl
gs
fsubrs
xlat
add
mov
xchg
xor
jecxz
lods
dec
sub
dec
dec
repnz
cmp
cmp
mov
pop
hlt
pushf
or
jecxz
lret
dec
jne
and
inc
mov
in
cmpsl
inc
push
fwait
and
test
ss
insl
fs
fwait
int
xchg
push
mov
pop
in
int3
adc
xchg
jmp
jge
std
mov
push
sub
mov
fnstsw
stos
scas
jp
mov
xlat
or
and
pop
jl
sub
scas
out
and
movb
xor
jb
dec
jecxz
sti
cmpsb
in
xlat
inc
mov
xor
rcl
or
pop
xor
out
out
pop
jnp
mov
cmp
daa
xchg
mov
cmp
add
outsl
lock
mov
dec
outsb
mov
popf
rcrb
sbb
cltd
je
adc
fcomps
arpl
cli
and
aad
mov
movsb
mov
lahf
xlat
add
icebp
sub
popf
shrb
sbb
stos
cltd
negb
fnstcw
fisttps
test
dec
jp
outsb
push
mov
pop
popf
push
xchg
xchg
add
mov
imulb
sub
adc
jg
bswap
push
lods
pop
hlt
adc
pop
hlt
sub
out
aaa
cmpsl
add
setge
mov
pop
mov
and
lock
dec
movsl
outsl
pop
lret
outsl
arpl
or
cmp
adc
imul
and
loop
dec
dec
mov
out
xlat
cmpsl
jns
enter
outsl
ret
sub
repz
xor
push
scas
or
adc
lahf
daa
fmull
or
stos
fbstp
xor
xchg
jg
push
push
outsl
icebp
xor
inc
aaa
pop
mov
mov
fidivs
stc
pop
add
cmpsl
out
mov
rclb
mov
push
shrl
lods
pusha
sar
ljmp
outsb
jg
fistpl
cmpsl
movsb
das
mov
mov
sbb
xchg
lods
addr16
and
jns
push
xor
or
lods
leave
xor
push
ja
sub
insl
lahf
push
mov
and
push
dec
mov
mov
xor
repz
cmp
rcll
jnp
pop
sub
xchg
repnz
call
jecxz,pt
nop
jl
arpl
sti
or
sbb
nop
std
xchg
pop
inc
cmp
jmp
jmp
aas
shrb
mov
xchg
into
inc
add
push
sub
pop
mov
cmp
outsl
adc
mov
popl
xor
hlt
xor
pop
icebp
jmp
loop
inc
mov
in
nop
pushf
ret
shll
rolb
cmpsl
movsl
les
movsl
ljmp
sbb
dec
cmp
sub
and
int3
mov
push
sbb
adcb
sub
or
mov
das
xchg
int3
adc
frstor
or
adc
mov
sub
mov
and
int3
imul
in
out
sub
daa
adc
add
sbb
push
insl
lods
lods
aaa
movsl
cltd
aas
pop
mov
xchg
cmpsl
stos
hlt
les
sbbl
imul
sub
ret
cmp
add
cwtl
ja
insl
dec
push
adc
mov
arpl
lock
add
lods
dec
pop
imul
inc
mov
xor
mov
std
popa
dec
mov
je
mov
jbe
unpckhps
xor
push
xor
and
inc
push
xor
push
ja
and
cmovne
adc
repz
fisttps
jge
lahf
adcl
gs
mov
cmp
pop
sti
mov
or
mov
adc
sub
fsubrl
mov
mov
test
rcrb
imul
adc
hlt
call
out
rol
mov
add
dec
mov
and
ret
pop
es
call
test
xchg
jmp
adc
adc
jp
xchg
in
mov
jl
rcr
ljmp
repnz
lods
adc
pop
push
xchg
cli
mov
push
and
lret
inc
stos
dec
test
mov
adc
inc
cmp
or
dec
xor
jp
inc
jg
daa
leave
adc
lret
jae
adc
sbb
pusha
adc
push
dec
add
xchg
fmull
jg
adc
outsb
push
pushf
adc
mov
lods
fdivrl
mov
cld
adcb
push
inc
or
or
das
addr16
pusha
test
lods
inc
sbb
ja
ss
in
repz
xor
cmpsb
cltd
daa
fisubs
loop
aaa
or
jle
inc
dec
lods
mov
leave
lds
dec
fs
cmp
inc
mov
inc
mov
push
adc
adc
jnp
cld
adc
cmp
stc
pop
xchg
xor
loopne
sub
repnz
daa
jns
aas
loop
dec
mov
cwtl
cli
add
lds
push
mov
clc
ja
mov
inc
jle
pop
nop
ds
shll
sbbb
push
adc
jg
pop
call
xorl
stos
add
and
arpl
shr
aad
dec
sbb
movb
jbe
xor
push
add
or
inc
in
mov
push
lock
outsb
sub
movsl
sub
jp
popf
insb
lds
mov
xchg
push
add
es
mov
jecxz
sti
lcall
mov
scas
jnp
push
inc
push
je
aad
sahf
jmp
cmp
and
mov
incb
push
pop
insb
fstpt
rclb
scas
movsl
imul
cli
xchg
leave
ja
cwtl
jae
stc
and
jp
xchg
xchg
fldl
in
sub
flds
pop
fcomps
or
mov
stos
les
pop
inc
test
adc
testb
pop
add
in
push
ret
popf
int
lcall
in
repz
inc
lcall
or
loopne
sar
cltd
fadd
out
push
stos
mov
enter
cmp
cmc
out
cmp
aaa
movsl
repnz
adcl
jp
fs
ljmp
pop
in
movsb
lods
addr16
loop
jo
xchg
pop
fwait
mov
mov
pop
jmp
ja
mov
pop
add
xor
xorb
mov
xchg
pop
pop
dec
fwait
jecxz
in
stos
xor
push
test
or
stos
dec
mov
loope
int
ret
aaa
push
pop
aam
aas
scas
aad
jge
xor
mov
mov
test
or
mov
insb
jg
push
xchg
and
fsts
mov
sahf
arpl
mov
lcall
lds
testl
lret
std
and
and
inc
dec
push
sbb
or
in
lret
lds
sub
imul
out
fcompl
sbb
fdivr
jge
mov
fstps
icebp
in
mov
into
roll
xor
das
orb
repnz
pop
cmpsb
lcall
push
jbe
fnsave
jno
mov
xchg
lcall
into
mov
sbb
cmc
push
cmp
add
or
add
das
add
and
xor
data16
cmp
jp
jae
xor
andb
cmp
out
sbb
lods
jb
sbb
leave
inc
mov
dec
lds
popa
ret
add
xchg
js
or
stos
cltd
nop
inc
fistpll
ret
push
jb
jb
cmpsl
inc
outsl
aas
enter
mov
adc
mul
xchg
mov
jge
mov
xchg
cmpsb
sar
dec
ret
and
lea
js
popa
icebp
push
loop
inc
pop
push
cmp
lret
pop
mov
test
fincstp
xlat
fsubrl
mov
rol
add
push
pop
xor
xchg
sti
sub
rcll
movsb
lcall
int
fistl
hlt
cli
hlt
xchg
rcl
bound
sarl
in
pop
or
xchg
inc
adc
jb
adc
ret
bound
push
lcall
add
stos
ja
or
jo
js
lock
xchg
jne
incl
sub
jmp
lcall
pop
push
jmp
ret
mov
jg
in
sub
ljmp
sub
pop
adc
ja
and
sub
sahf
inc
aam
iret
enter
addr16
xor
popa
mov
test
pop
movsl
cmp
mov
iret
sub
xchg
and
sub
push
ret
sbb
int
and
push
add
push
sub
ja
cmp
cmc
das
cmpsb
xchg
lods
add
negb
cltd
cmpsb
mov
divl
pop
in
mov
cmpsl
in
jbe
xchg
jns
nop
inc
repz
sub
out
sub
test
mov
sbb
xor
and
inc
ss
pop
push
test
ret
int
pushf
loope
xchg
idivb
fidivrs
adc
aam
into
cld
in
std
cmc
mov
add
out
lret
cli
idivl
pop
hlt
or
or
sub
mov
sub
outsl
repz
and
pusha
movsb
fs
push
mov
xor
addr16
cli
shl
xor
add
arpl
pop
mov
scas
cmp
aas
jle
stc
pop
das
push
inc
cmp
ret
mov
cmpb
std
sbb
jle
es
pop
sub
adc
inc
sarl
repz
lods
mov
mov
cltd
mov
cltd
lcall
lods
dec
push
dec
cltd
das
test
in
test
outsb
int
imul
mov
lods
lret
jo
test
jnp
dec
enter
dec
or
repnz
idivb
jg
mov
add
in
sbb
or
addr16
out
lds
movsl
sbb
adc
shr
inc
les
shl
and
in
mov
sti
addr16
jp
jg
sbb
leave
in
into
popf
xor
stc
fdivrs
in
mov
jbe
jg
and
sub
inc
std
dec
sbb
add
into
xor
mov
sbb
pop
btr
pop
dec
push
dec
add
adc
inc
add
shll
xor
imul
js
call
arpl
in
fdivrs
pushf
cli
dec
and
loop
popa
adc
dec
and
or
xor
and
cmpsb
cld
xor
aaa
cmpsl
add
loope
push
lea
sbb
pop
and
push
aas
js
call
data16
jmp
cs
mov
fisttpll
ret
or
jno
pop
loope
mov
jecxz
xchg
aas
adc
cmp
lret
push
test
iret
mov
adc
mov
jge
int3
or
ret
lret
and
adc
cmp
dec
jmp
adc
ja
clc
cmp
jo
cmpsb
arpl
push
xor
xchg
dec
test
inc
inc
movsl
subl
ds
stos
sahf
pop
inc
cmp
sbb
mov
jbe
ficoms
mov
cmpsl
arpl
mov
or
push
daa
iret
movsb
mov
push
mov
scas
scas
xlat
stos
mov
ret
in
leave
incb
mov
cmpsb
push
xchg
xor
push
xchg
int3
adc
mov
jne
dec
mov
imul
mov
push
cli
push
mov
and
repnz
imul
shlb
repz
pop
push
pop
xchg
imul
lock
push
cmp
pop
popa
aam
popf
mov
scas
xchg
xchg
mov
sti
or
dec
imul
dec
mov
cld
into
jae
lret
ds
dec
mov
bound
rcrb
mov
in
jae
sbb
adc
sub
mov
cli
inc
or
ficomps
shlb
and
and
or
hlt
jae
mov
pop
dec
jge
xor
clc
mov
mov
cmc
out
sbb
mov
mov
cmpsl
cmpl
add
push
push
push
cmp
lahf
imulb
jge
sets
inc
jp
lods
fcomip
loopne
pop
jno
lret
testl
mov
sub
sbb
lea
dec
fmuls
ja
xlat
mov
dec
mov
jbe
pop
ja
cmc
mov
xlat
ja
movsl
in
cmp
inc
jmp
pop
movsl
clc
inc
lock
test
flds
inc
add
cltd
stos
lret
push
addr16
fsubrl
mov
fwait
imul
inc
sub
pop
pop
outsb
outsl
je
cwtl
or
stos
mov
jno
pop
push
pop
jmp
shl
in
fs
out
ficoml
mov
aas
sbb
push
push
ret
aaa
shrb
sbb
insb
aaa
fs
xchg
cmpsl
sub
dec
lret
push
std
mov
mov
rorl
pop
fstpt
jb
mov
fldl
scas
sub
and
rorl
fadd
sar
std
in
dec
or
and
fs
xchg
sti
out
fdivr
add
mov
bound
dec
xchg
sahf
pushf
dec
int3
ds
lret
test
sub
jno
push
scas
xchg
push
sbb
out
xchg
add
int3
inc
and
push
inc
lea
xchg
lahf
mov
pop
jl
or
ja
mov
xchg
add
lahf
pop
inc
sub
leave
mov
and
sbb
mov
lock
cmpsb
push
jne
leave
les
fdivrl
xlat
lea
out
adc
dec
leave
call
dec
insl
pop
pop
out
fstpt
shrl
int3
cli
or
sub
rorl
mov
mov
hlt
ds
jo
sti
popf
orl
inc
adc
jb
gs
pop
or
dec
inc
xor
xorb
inc
cs
fisubrs
repz
dec
push
cmp
sub
imul
mov
scas
repnz
rcll
sarb
addr16
mov
mov
arpl
leave
in
mov
jae
mov
pop
adc
mov
add
adc
mov
or
cmp
cmp
lock
rol
fcmovb
fisttpll
mov
insl
sbb
call
ret
pusha
sub
jge
inc
xor
push
xchg
jns
insl
mov
icebp
jbe
fs
movsl
mov
ret
aad
mov
xchg
add
filds
inc
dec
xchg
loop
loopne
nop
scas
dec
ljmp
and
mov
popf
adc
and
xchg
add
adc
xchg
inc
popa
and
inc
xor
or
std
jmp
nop
hlt
lahf
mov
sbb
push
insl
pop
push
xchg
sbb
ljmp
push
inc
xchg
add
xchg
test
in
inc
pop
pop
add
hlt
mov
dec
mov
addb
daa
and
mov
pop
sbb
enter
jbe
jne
push
lea
xchg
loop
mov
cmp
ret
les
loop,pn
mov
lock
frstor
pop
jo
xor
hlt
sub
daa
sbb
dec
in
and
dec
push
add
lods
fsubrl
dec
dec
sbb
push
mov
pop
push
in
xchg
xlat
call
jle
mov
addr16
xor
push
sbb
cmp
inc
jbe
xor
iret
jl
mov
cmpsb
clc
lea
test
nop
xchg
cltd
lock
lret
push
or
pop
jl
add
repz
test
test
jp
shrb
xor
jb
scas
adc
xchg
mov
cmp
test
rolb
mov
arpl
inc
mov
dec
out
jnp
inc
int3
in
jmp
sub
sub
mov
notl
sti
fnstenv
cmc
adc
loop
movsl
outsl
andb
jg
xor
sbb
jl
mov
push
mov
xchg
sti
or
addl
cmp
xor
aas
enter
fmuls
xor
or
jb
jae
push
pop
xlat
test
xchg
and
lods
subb
outsb
xchg
push
mov
mov
pop
push
es
mov
mov
ret
sbb
add
lret
iret
dec
in
mov
and
fidivl
and
aas
push
scas
mov
cmp
into
adc
or
mov
cs
mov
adc
ret
aam
out
lret
rol
ja
inc
push
ja
mov
jns
adc
xor
push
movsl
cmp
xor
dec
cmp
dec
ljmp
push
pop
push
filds
loope
jnp
or
pop
dec
rcr
mov
push
lods
ds
mov
inc
lret
push
cmp
push
or
ljmp
subl
loop
sbbl
push
daa
mov
stc
int3
shll
sti
aaa
sub
repz
iret
sahf
rclb
cmp
movl
and
rol
cltd
cli
push
jmp
xor
pop
adc
push
mov
cmpl
push
xchg
sti
push
out
stc
xchg
xchg
bound
stos
mov
popf
aad
cwtl
sahf
jl
loopne
pop
daa
mov
xchg
mov
and
cmp
xchg
es
loope
insl
mov
inc
push
lret
pusha
outsl
pop
jno
addl
jbe
cmc
dec
xchg
stos
pop
lods
push
xchg
jmp
cmp
xchg
jo
push
mov
aam
cmp
lods
clc
adc
pop
aas
mov
jbe
jl
dec
dec
jbe
dec
daa
fwait
mov
pop
dec
popf
pop
fisubrl
shll
dec
mov
loopne
pop
dec
mov
stos
and
cmp
ljmp
lcall
fisttpl
inc
sbb
sbb
rcrb
mov
lods
add
vpmadcswd
push
in
repnz
js
push
andb
xlat
and
push
icebp
outsb
ret
mov
push
xor
mov
test
mov
mov
out
cwtl
dec
sub
rorb
cwtl
test
inc
adc
cmp
fisubs
push
adc
inc
popf
adc
cli
daa
in
jecxz
dec
jg
jle
adc
clc
std
adc
mov
rcll
js
sub
jno
mov
xchg
les
in
jle
mov
push
jl
cmc
jle
mov
lods
int3
insl
xchg
pop
mov
cmpsb
std
xor
arpl
mov
or
inc
or
js
jne
mov
add
push
lock
outsb
sub
mov
aad
or
fs
bnd
adc
icebp
int3
xor
divl
fdiv
lods
lret
and
mov
out
mov
mov
dec
add
out
loop
movl
jp
jmp
pop
pop
daa
pop
jmp
imul
jge
lock
sub
push
xor
push
mov
sbb
test
jg
aaa
mov
loop
arpl
add
mov
xor
sub
and
sub
push
vcmpsd
pop
ret
fsubs
pop
test
rorl
insl
push
jnp
clc
xchg
icebp
push
and
mov
insl
mov
cmpsb
test
call
sub
lret
insl
aaa
mov
enter
pop
shl
adcb
ss
lret
fadds
sbb
pop
notl
pop
sub
lahf
call
nop
hlt
xor
scas
sbb
push
insl
sbb
xorb
or
fidivs
test
and
cltd
mov
lcall
cltd
pop
mov
mov
dec
or
aaa
idivl
sbb
xor
and
cwtl
adc
and
test
imul
fwait
inc
lahf
dec
adc
push
rol
je
sbb
sahf
bound
ljmp
mov
and
push
dec
movsl
ffreep
xchg
repz
jecxz
insl
xlat
jne
test
mov
xor
les
and
mov
push
lock
cmp
in
aas
cld
and
into
andb
mov
movsb
clc
int
push
ds
shll
sbb
outsb
aad
mov
pop
scas
addb
sahf
and
sub
push
scas
scas
insb
xorl
enter
lea
or
mov
push
jmp
dec
sub
jne
sbb
jmp
inc
push
sbb
hlt
leave
dec
xchg
mov
out
lret
fs
xor
imul
pop
shlb
mull
shlb
and
pop
mov
pop
pop
mov
push
and
push
lret
pop
aad
mov
cltd
fs
lret
jns
pop
stos
add
xchg
push
push
mull
or
sub
inc
mov
lret
inc
mov
jbe
pop
or
mov
js
pusha
push
xor
jmp
pushf
scas
push
inc
lahf
mov
andl
clc
outsb
popf
push
repz
icebp
movsl
or
mov
push
rorb
xor
in
test
and
mov
mov
scas
sub
pop
inc
and
int
jno
bnd
lcall
les
fsubrp
int3
rcll
jle
in
adc
scas
adc
pop
dec
ljmp
pop
rorb
mov
inc
lahf
shlb
mov
jge
movb
jae
or
add
jo
mov
or
or
out
sahf
roll
push
mov
dec
in
and
mov
movsb
mov
jno
mov
jle
dec
jae
or
adc
pop
andl
sub
fs
inc
add
mov
push
es
nop
xchg
movsb
int3
gs
lahf
mov
test
cmp
or
int
and
inc
hlt
or
aaa
ret
mov
nop
xchg
sub
push
ret
push
in
arpl
mov
std
in
mul
enter
hlt
das
jle
pop
aaa
add
lock
jmp
leave
jns
clc
repnz
adc
xchg
xorl
mov
mov
ret
insb
push
ds
cmpsb
mulb
xchg
add
outsb
sub
xchg
dec
push
jno
lret
nop
xor
inc
adc
mov
inc
dec
mov
cmp
ljmp
adc
mov
lcall
scas
inc
or
bound
fcomp
mov
fwait
imul
fucom
push
fsubp
fdivr
daa
test
mulb
leave
adcb
roll
stc
pushf
das
in
mov
dec
ja
xchg
pop
je
pusha
pop
add
push
jno
aas
adc
sub
pop
lahf
adc
mov
insl
repz
ror
mov
mov
aam
out
jns
pop
mov
psubsw
add
jle
fildll
add
je
ret
sti
mov
mov
jnp
and
js
ds
sbb
js
notb
push
outsl
sbb
add
shrl
test
cmp
popa
mov
adc
jo
add
pop
popf
cmp
xchg
into
aad
fbstp
mov
mov
dec
inc
fwait
loop
divb
int
adc
dec
repnz
mov
pop
mov
push
ljmp
dec
mov
inc
fstpt
shlb
sub
cmp
pop
dec
adc
cmp
in
jl
insb
es
je
and
ja
sahf
cmp
push
pop
and
sub
scas
cmp
movsl
pushf
movsb
inc
sub
xor
mov
into
std
mov
cld
icebp
out
and
clc
lock
dec
add
outsl
outsb
ret
push
push
mov
pop
jmp
mov
xor
mov
jmp
dec
popa
cld
mov
sti
in
roll
inc
push
mov
push
adc
push
inc
sub
inc
imul
jae,pt
mov
dec
pop
pop
in
pop
mov
push
les
jecxz
sbb
xchg
inc
iret
xlat
adc
fnstsw
sahf
or
add
xchg
decb
or
sub
pop
mov
enter
shl
shrl
jb
pushf
xor
clc
pop
lret
addr16
jge
mov
xor
xor
mov
xchg
or
frstor
inc
pop
aam
inc
in
jae
in
mov
xor
repz
scas
adc
sbb
cmp
fadds
or
mov
into
add
mov
push
clc
add
ds
iret
jle
test
out
mov
test
pop
addr16
movsl
int
cmp
cmp
mov
mov
pop
adc
ja
or
mov
repz
or
orl
sbb
daa
dec
enter
mov
shrl
mov
cmp
push
mov
fwait
rorl
fldenv
fisubl
pusha
call
xor
nop
in
movsb
fwait
jae
imul
ret
das
adc
cltd
jne
xor
test
loop
mov
lods
lret
flds
icebp
fiadds
dec
and
sub
mov
in
mov
es
mov
ljmp
jo
ror
sti
cmpsb
jbe
mov
push
cmp
imul
push
call
xchg
leave
inc
icebp
ret
lods
mov
mov
aam
cmpsl
cwtl
data16
pop
or
jne
mov
and
fwait
cltd
cli
mov
roll
mov
and
lea
jbe
xor
mov
mov
add
ret
push
mov
int3
es
add
out
or
sbb
inc
push
sbb
push
fucomi
jge
mov
dec
add
test
push
mov
mov
pop
jge
inc
xchg
inc
insb
push
imul
and
popa
in
jecxz
or
data16
fdivs
pop
incl
add
dec
xor
daa
inc
xchg
test
mov
scas
pop
movsb
cmp
xor
data16
dec
sahf
pop
mov
stc
outsb
cs
ret
sub
shrl
xchg
in
mov
pop
and
jnp
movsb
stos
push
lret
pop
ret
out
repz
xchg
dec
rorb
js
xor
stos
ret
jecxz
ljmp
outsb
push
jmp
lds
push
dec
lret
movsl
mov
jo
adc
push
inc
test
movsb
add
inc
mov
es
data16
sub
fsubrs
rcrl
orl
ret
mov
dec
cli
std
xor
dec
pop
int
add
cmp
rcrl
or
xchg
and
mov
aad
loope
std
dec
push
cmpsl
jg
jb
mov
sub
ret
aam
in
stos
mov
cwtl
sbb
lret
shrb
push
mov
insl
add
sub
call
and
push
mov
popa
pop
sbb
sbb
test
clc
mov
fidivrl
mov
jno
push
push
xor
dec
xchg
push
jecxz
push
out
sub
mov
dec
sbb
fistl
xor
in
xor
rcrl
mov
jp
add
stc
dec
push
jo
sbb
fdiv
inc
add
pop
cmpsb
cltd
push
xchg
sub
movsb
fs
pop
test
jl
sub
xlat
xor
in
inc
mov
cmc
xchg
sbb
xchg
fwait
inc
lret
gs
dec
ljmp
aaa
test
mov
xchg
xchg
and
aaa
mov
xchg
adc
ret
cmp
sub
pop
cltd
push
adcl
stos
pop
cmp
jbe
hlt
sub
dec
int3
sub
sbb
enter
daa
lcall
pop
push
mov
fadd
inc
mov
jge
sahf
dec
lods
add
xchg
jmp
std
nop
or
xor
out
xchg
call
sarb
sahf
dec
mov
dec
movsl
mov
xorb
xchg
push
and
mov
vmovntps
insl
mov
insl
mov
mov
lcall
ss
arpl
push
sbb
dec
cltd
dec
mov
mov
pop
lea
dec
insl
lea
add
fcomi
or
xor
cltd
mov
sarl
in
xchg
xor
lea
dec
out
pop
pusha
cld
fnsave
leave
jno
cltd
adc
mov
fdivrs
test
fidivrl
out
adc
in
lods
xor
stos
lds
or
stos
loopne
push
js
cltd
add
mov
xor
lcall
cmpsl
stc
pop
enter
es
ds
push
mov
sahf
hlt
les
pusha
push
mov
push
adc
mov
cmp
mov
xchg
int
or
add
fstl
mov
loop
lds
movsb
pusha
add
roll
imull
push
xchg
ret
xchg
xchg
pusha
dec
add
lds
pop
adc
inc
sbb
ss
fists
sub
cmp
test
sub
xchg
stos
icebp
pop
mov
cltd
cmp
mov
mov
mov
pop
jae
mov
mov
pop
pop
jno
push
enter
out
adc
pop
inc
cmp
pusha
add
jne
adc
movsb
sahf
gs
add
inc
neg
aas
hlt
andl
inc
test
ret
adc
lret
push
mov
je
loope
push
inc
cmc
insl
mov
or
test
push
shrl
vpsrlw
add
inc
inc
cmp
outsb
mov
mov
dec
add
repz
ss
pop
xchg
daa
dec
dec
mov
cmpsl
sub
add
add
push
into
inc
fcmovb
bound
pusha
push
aaa
push
push
jbe
outsb
jle
ja
mov
test
pop
ret
fwait
cmc
adc
adc
inc
out
push
subb
fldl
les
push
adc
add
jb
in
in
inc
scas
fistps
insl
ss
stos
into
pop
inc
popf
subb
insb
jbe
in
pop
cltd
lahf
or
push
pop
clc
mov
pop
ret
hlt
sbb
test
pop
aad
out
cmp
mov
inc
les
mov
out
jb
mov
mov
dec
scas
add
leave
inc
sbb
ret
pop
fadd
sbb
cwtl
jns
mov
fsubrp
das
add
xchg
aad
das
nop
or
lahf
jp
xchg
les
cmp
bound
adc
fwait
cli
pop
dec
mov
sbb
psubb
sub
dec
lcall
loope
cmp
adc
stos
shll
xor
es
inc
mov
stos
cmp
loop
movsb
mov
dec
data16
or
dec
sbb
xchg
mov
xchg
filds
sarl
insb
and
dec
ljmp
daa
test
inc
sub
in
jns
mov
rorl
xchg
outsl
pop
ficompl
inc
or
repz
in
push
mov
insl
lea
in
pop
adc
pop
mov
fs
push
cmpsb
mov
mov
lret
inc
and
push
cltd
mov
pop
sub
dec
outsl
push
or
insl
inc
aaa
movsl
mov
adc
rcrl
orl
push
pop
outsb
mov
gs
xchg
pop
adc
lret
or
xor
call
pushf
js
push
jae
inc
and
dec
jnp
and
mov
sbb
jne
ds
sub
mov
ss
jo
fs
pop
fstl
into
lahf
and
test
cwtl
pop
inc
in
notb
push
inc
outsb
sarl
push
mov
mov
inc
mov
aad
dec
orb
mov
add
in
addr16
dec
cli
in
movsb
inc
xor
mov
cltd
bound
fst
sub
imul
or
insl
imul
out
scas
jb
push
cld
add
pop
ss
gs
cmp
leave
rorl
adc
mov
xchg
ljmp
xchg
pop
lcall
lods
jl
xchg
nop
and
push
push
adc
shlb
lods
add
cmpsl
cmp
pop
jge
jbe
leave
push
pusha
mov
in
push
pop
es
xchg
fisubl
in
daa
or
sub
clc
add
pop
std
repnz
adc
mov
ds
ret
leave
bound
lea
lds
adc
es
nop
inc
jp
lahf
js
sarb
jmp
ss
inc
ljmp
mov
jg
test
scas
xor
push
fsts
ret
push
or
or
xor
adc
pushf
jl
dec
cmp
mov
sub
xor
push
cli
xor
adc
fists
repnz
inc
lods
xchg
mov
sub
sbb
shrb
inc
xchg
inc
sbb
test
aas
push
fucomip
out
ret
pop
inc
sbb
xchg
divl
cwtl
jnp
aam
mov
mov
imul
or
or
jge
add
push
pop
rcll
or
sbb
add
call
das
jne
pop
add
sahf
repz
cmpsl
fimuls
scas
test
dec
int3
shlb
cmp
fldenv
out
or
jb
out
lret
and
adc
pop
dec
addl
jmp
call
xor
fsubs
stos
negl
enter
fidivl
push
mov
xlat
add
std
lods
cmpsl
test
and
dec
inc
xor
pop
or
xchg
inc
jb
movsb
aaa
fdivrl
sbb
jle
in
mov
dec
in
popf
pop
add
jbe
add
or
loope
lahf
pop
test
daa
xor
mov
xchg
lds
aas
mov
adc
loopne
les
push
mov
sbb
mov
clc
loope
mov
pop
ljmp
nop
cmp
or
and
aas
add
aaa
xlat
push
push
or
inc
clc
pop
mov
mov
lret
sbb
into
sbb
aad
out
in
dec
mov
pop
insl
push
push
sub
nop
ror
xorb
iret
test
outsb
push
out
mov
mov
push
int
icebp
push
data16
leave
cli
fwait
cmp
les
pop
dec
fisttpl
lahf
repnz
inc
scas
scas
push
das
loopne
notl
cld
mov
inc
pop
cli
mull
sti
icebp
out
sub
dec
cld
cmp
pop
jno
lods
inc
jl
std
aad
xchg
jnp
int
sub
xorl
das
dec
pop
cltd
xchg
pusha
testb
dec
inc
adc
add
mov
add
cmp
dec
mov
push
or
fcmove
push
popa
clc
pop
mov
dec
xchg
mov
jmp
loopne
test
mov
ficoml
mov
jne
ja
fwait
inc
mov
mov
lret
push
test
stos
sub
cmp
xor
repnz
movaps
add
push
jle
adc
out
clc
js
adc
push
and
pop
dec
xchg
or
sbb
fwait
pop
shll
out
or
push
ds
or
enter
push
sbb
dec
ljmp
sbb
cli
clc
mov
jge
mov
mov
in
jne
pop
aaa
lds
loope
jmp
push
mov
scas
movsb
sub
mov
in
cmp
les
push
mov
sbb
mov
or
idiv
push
adc
sahf
jne
cmc
mov
dec
cs
in
mov
push
and
pop
sub
push
push
lea
and
fidivrs
popa
mov
and
out
and
inc
or
pop
pop
mov
nop
jnp
std
lods
movsb
sub
scas
jo
std
loope
hlt
icebp
xchg
sbb
xor
push
pusha
and
icebp
push
pop
jp
cmc
sub
sbb
inc
pop
cmpsl
cmp
xorb
negl
jnp
mov
inc
pusha
cmpsl
sbb
aas
fs
enter
stos
xchg
cmp
fldenv
rolb
mov
fisttps
filds
outsb
insl
sbb
mov
js
jb
add
cli
ja
pop
inc
roll
pop
ficoms
push
loopne
add
les
ret
out
cmp
mov
clc
daa
dec
fwait
out
push
inc
mov
leave
inc
arpl
inc
jbe
adc
and
mov
arpl
addr16
pusha
popf
dec
push
stos
inc
ret
repnz
mul
pop
lods
jnp
mov
dec
in
xchg
xchg
sub
or
mov
test
ret
test
and
daa
add
cwtl
movsb
inc
sbb
out
add
es
xchg
push
and
mov
cli
call
or
stos
mov
in
xor
lcall
mov
xchg
pusha
xchg
add
outsl
or
fcmove
cmp
out
out
mov
nop
cmpsl
call
pop
iret
add
xchg
lock
mov
cmp
loopne
push
dec
and
fistpll
and
sti
add
sti
cmp
add
lahf
dec
movsl
mov
adc
cmp
dec
xor
lahf
test
out
ret
arpl
jle
dec
fldenv
adc
outsb
loope
mov
rcrl
dec
loop
mov
rolb
cmpb
push
sbb
inc
arpl
inc
dec
mov
push
pop
xor
xchg
push
stos
add
pop
stos
shlb
icebp
add
out
xchg
jle
cmpsb
div
icebp
sarl
jo
sub
aas
mov
xchg
hlt
test
mov
cmpsl
push
mov
lcall
mov
pop
cmpsb
imul
pop
pop
cs
test
push
xor
sti
dec
jg
push
lahf
adc
stos
enter
add
xchg
andl
cmpsb
pushf
push
jns
ret
xor
scas
jg
out
add
into
sarb
sbb
repnz
out
jb
clc
int
dec
loopne
cltd
mov
xchg
scas
aad
cwtl
stos
mov
ja
lret
cltd
cs
mov
popf
jecxz
loope
in
mov
mov
pop
into
mov
push
int3
hlt
mov
xlat
xchg
cld
lods
mov
fisttps
mov
adc
fprem
sarl
clc
pusha
push
mov
aas
push
movsl
pop
pusha
les
rorb
arpl
mov
mov
mov
lock
inc
loopne
mov
ret
jle
xchg
mov
adc
rclb
cwtl
mov
dec
push
lahf
dec
adc
sub
outsb
mov
lahf
and
xchg
inc
sbb
lcall
xlat
inc
lds
dec
jle
mov
call
pusha
pop
and
cmp
mov
sbb
pop
imul
push
in
xchg
ds
aam
loopne
jb
mov
dec
cmp
dec
xchg
push
or
mov
rcl
sahf
pop
inc
xchg
jle
shll
subb
clc
mov
pop
ficoml
jo
pop
add
cmp
dec
or
aaa
mov
mov
lods
xchg
adcl
lds
jle
imul
daa
add
mov
add
test
idivb
adc
mov
nop
pop
iret
fsts
sub
bound
pop
cmp
aas
cltd
xor
out
mov
int3
cmp
movsl
jnp
push
fs
and
and
cmpsb
jp
outsb
push
pop
push
dec
pop
ret
out
shlb
cmp
lock
xor
loopne
cmp
lea
or
imul
pop
in
mov
dec
pop
push
lods
mov
sbb
sub
popf
cmp
lcall
push
icebp
push
mov
cmp
xor
cmpsb
xchg
dec
sbb
sarl
adc
pop
cmp
cmp
lods
lea
add
bound
and
imul
lods
in
pop
cli
dec
inc
dec
movsl
test
ljmp
stos
mov
icebp
jp
notl
or
enter
xchg
adc
fsubl
icebp
jo
lods
mov
aaa
shrl
imul
mov
icebp
sub
and
inc
mov
fisttpll
cmp
push
pop
xor
stos
sbb
in
ret
push
test
adc
jbe
push
jle
negb
lret
adc
pop
movsl
push
aam
shlb
add
addr16
negb
ss
pop
ret
xlat
roll
aas
rorl
dec
xor
inc
fisttpll
loop
test
call
jmp
dec
xchg
jno
out
inc
call
out
xor
jmp
push
xor
and
ds
pop
cmp
jae
aad
cmc
imul
lods
xor
incb
imull
iret
sbb
sbb
xchg
inc
fwait
cmp
jp
push
sub
outsl
js
daa
outsl
into
or
pusha
outsl
cli
sub
and
mov
gs
xchg
nop
je
sarb
scas
push
jg
enter
pop
rorb
mov
xchg
jns
pop
cmp
stc
push
imul
rol
inc
add
xor
jmp
inc
inc
jno
xchg
sbb
jno
push
pop
cmp
mov
aaa
fwait
mov
sahf
fwait
jle
test
or
push
xchg
test
fs
push
or
jns
cs
aam
in
imul
xor
sbb
data16
cmp
sbb
rcrb
test
lea
mov
scas
add
cmp
repz
imul
jmp
insb
and
mov
mov
sbb
cmpsl
push
xchg
xor
xlat
daa
push
test
push
mov
inc
cld
inc
pop
arpl
cmp
fucomp
repz
aaa
clc
clc
mov
rolb
cmpsl
fwait
jno
sti
jp
lcall
inc
mov
adc
adc
jp
sub
sub
cs
adcl
cmp
mov
ret
mov
faddl
clc
or
aas
shl
pop
sbb
in
ljmp
fucomp
pop
loopne
cmpsl
int3
mov
stc
daa
fs
cmp
and
repz
dec
push
mov
pop
ret
cmp
cmpsb
testb
lret
mov
test
sbb
aaa
ret
fs
clc
cmp
clc
stc
mov
xchg
cmp
mov
loop
jb
ds
xor
rcrb
dec
ds
mov
pop
repnz
lahf
mov
sub
test
cmp
out
cli
or
inc
aam
in
inc
stc
mov
jle
sti
inc
sarb
push
cmp
repnz
adc
jmp
mov
out
loopne
xor
mov
xchg
int
movsl
xchg
addr16
push
mov
stos
iret
mov
imul
sub
iret
lcall
scas
out
inc
xchg
push
test
xchg
jle
fld
mov
mov
and
cli
pop
adc
jmp
sub
out
sub
sub
adc
test
inc
repnz
xor
jg
jecxz
mov
xchg
adc
cmp
outsb
lret
cmpsl
pop
pop
iret
xor
sbb
add
push
pop
sbb
cld
lods
cmp
or
sub
sbb
inc
xlat
pop
or
add
push
popf
pop
das
repz
std
jb
subb
adc
jo
add
rclb
insl
mov
cmp
in
popa
lods
pushf
enter
jge
std
jb
daa
insl
xchg
cmc
filds
push
sar
push
daa
loopne
lcall
add
inc
std
aam
aad
adcb
push
test
sbb
sub
popa
pushf
fldenv
push
mov
loop
and
dec
adc
jns
sbb
ds
or
movsb
xor
cwtl
shl
ret
pushw
test
insl
cmp
add
clc
in
mov
mov
rcl
rolb
add
xor
lock
add
or
jmp
or
or
inc
rol
sub
pop
and
out
clc
and
imul
adc
jle
in
mov
lret
scas
jae
mov
adc
cmpsl
out
inc
inc
jb
roll
xor
sbb
gs
fists
mov
mull
sbbb
pop
les
leave
dec
repnz
pop
lret
jb
sti
rclb
fiadds
sub
fs
and
mov
sbb
mov
cmp
add
loopne
pop
rcrl
jnp
pop
shll
push
jnp
cmp
jecxz
mov
inc
cmp
inc
scas
xchg
sub
push
ljmp
inc
jmp
fstps
push
and
out
xor
dec
test
mov
fs
add
sub
fdivl
adc
adc
mov
negb
sub
notl
test
leave
jp
dec
and
pop
fisttpl
push
mov
stos
insl
ja
push
pop
push
xchg
mov
cwtl
jae
stc
out
shrl
push
aad
les
popf
call
jecxz
or
mov
jnp
imul
mov
push
bound
and
aaa
ret
insb
test
mov
sub
xchg
push
mov
xchg
and
push
aad
push
sbb
jbe
xchg
inc
bound
jae
sti
sub
pusha
pop
jg
push
jbe
out
hlt
lret
daa
or
cmp
push
jae
rol
jnp
push
push
lock
test
sbb
mov
mov
adc
lds
xor
enter
xor
jmp
jp
pop
movsb
pusha
push
dec
into
movsb
adc
out
jbe
aam
adc
or
push
fidivs
sub
mov
jne
inc
pop
and
mov
mov
stc
dec
push
imul
push
sbb
adc
out
and
rclb
add
jge
and
or
ss
dec
and
jecxz
cmp
test
ror
mov
clc
repz
repnz
pushf
ficoml
cmp
inc
int3
dec
adc
sub
in
dec
cmpl
sbb
hlt
test
in
in
sarl
mov
aaa
sub
imul
jb
shlb
xor
and
mov
clc
dec
push
mov
hlt
int
pushf
fiaddl
rcll
fcmovb
mov
ss
jnp
mov
lahf
xchg
mov
dec
adc
or
stos
in
dec
mov
cmc
lahf
and
into
xchg
inc
sub
adc
jle
or
adc
jns
mov
adc
xchg
xlat
lahf
inc
movsl
push
adc
push
test
and
addl
pop
aam
xchg
icebp
add
lahf
sub
pop
cmp
popa
xor
jbe
ret
cmp
cmp
add
leavew
lret
loopne
or
out
pusha
push
scas
jl
scas
jb
jmp
cmp
xor
add
cli
jo
lods
lds
subb
cli
add
ret
adc
push
jbe
jge
mov
inc
arpl
pop
shr
xor
aaa
cmp
push
push
rclb
lods
das
ja
cmpsl
dec
mov
jecxz
jg
inc
jae
mov
jno
fbld
mov
fisubl
push
negl
int
orb
popf
jl
mov
jmp
xchg
fxch
fs
lret
test
movsl
call
aad
dec
sahf
mov
inc
mov
lock
out
push
imul
scas
dec
inc
cmc
lahf
pop
dec
rorl
test
xchg
xor
testb
inc
xorb
dec
fstps
inc
pusha
mov
pop
or
jl
sub
inc
mov
neg
data16
inc
mov
sahf
mov
dec
sti
xor
mov
fdiv
inc
cld
ret
ja
fcoms
out
pop
add
pop
pop
jecxz
jmp
iret
mov
pop
pushf
xor
sub
in
jb
scas
pop
test
xchg
inc
xlat
adc
or
les
push
jo
je
xchg
push
je
xchg
xor
gs
stos
mov
sub
jne
push
ds
add
mov
push
push
adc
adc
jnp
int3
jp
in
jp
js
loop
fs
outsl
push
xchg
cmp
std
cmp
rol
hlt
lods
sub
in
insb
repnz
pop
ret
shll
mov
sbb
mov
ret
sub
or
adc
mov
cltd
and
shld
jp
add
dec
ret
mov
shl
add
pushf
and
testb
or
aas
ds
lock
sub
daa
in
js
push
imul
sub
pop
and
inc
sbb
xor
dec
cld
loop
mov
loop
dec
scas
mov
ss
lcall
cmpsb
push
stos
mov
or
mov
adc
cmp
xor
cmp
imul
std
mov
push
sbb
movsl
cli
inc
dec
ljmp
sbb
scas
fisubl
add
out
repnz
add
push
test
xor
mov
push
mov
dec
push
lods
outsb
fnsave
pop
fnclex
sub
push
inc
mov
js
push
pop
fistpl
inc
dec
mov
test
ja
sti
rcrb
ds
dec
stos
fldl
call
mov
xlat
push
fiadds
inc
xchg
cmovge
sarb
sub
sar
mov
xchg
lds
inc
jno
in
jl
pop
lods
mov
lds
inc
jp
outsl
in
popf
sti
add
sahf
pop
sbb
mov
adc
insb
cmovg
daa
and
adc
ficoml
cmpsl
aaa
ror
call
arpl
int
fisttpll
je
pop
mov
and
inc
sahf
push
pop
jne
add
into
and
add
mov
je
xor
push
mov
shrl
inc
testb
push
sub
pop
pop
jno
jae
das
lcall
dec
aam
mov
push
mov
bound
and
je
aad
fidivrs
in
inc
xor
or
dec
fwait
or
ret
icebp
les
stos
hlt
pop
mov
arpl
dec
movw
xor
mov
out
test
or
sbb
pop
decl
ret
aad
aas
xchg
pop
push
push
mov
inc
mov
outsl
mov
test
dec
push
andl
mov
in
sarb
jg
push
mov
cmp
push
data16
jne
jecxz
push
lahf
stos
inc
adc
mov
test
jecxz
jne,pt
sbb
imul
ljmp
loopne
arpl
mov
shll
sbb
pop
xor
scas
into
xor
shll
sbb
mov
push
lock
fsubrl
roll
xchg
imul
fsubr
or
mov
pushf
sub
rorb
aad
pop
push
inc
ljmp
pusha
mov
mov
out
js
sbbl
xchg
test
jecxz
cmp
imul
xor
pop
cmpb
pop
xchg
stos
fimuls
std
cld
test
inc
outsl
fdivrl
fwait
xchg
push
or
inc
mov
js
ds
cmp
jno
mov
mov
popa
jmp
mov
cltd
mov
call
mov
push
fmul
adc
insl
dec
mov
jb
shll
popa
int
test
std
das
loopne
out
cmp
insl
mov
stc
frstor
fcomps
fwait
popf
inc
clc
xlat
and
enter
out
jmp
shlb
call
cmpb
xchg
scas
sbb
fistl
inc
scas
adc
or
scas
cmp
das
and
inc
loop
fimuls
sti
in
mov
jae
or
add
mov
sub
xchg
mov
hlt
push
push
inc
jne
mov
insl
dec
lds
add
aaa
xchg
mov
sti
in
popa
sub
jo
push
inc
popf
in
loope
mov
sbb
pop
adc
fisubs
xchg
adc
sahf
fwait
push
imul
mov
push
and
push
sub
pop
out
in
popa
lret
and
xor
enter
loopne
ret
iret
imul
push
xlat
lods
mov
sbb
cmp
pop
mov
pop
aad
sbb
clc
pop
push
xor
xchg
inc
dec
movsb
addr16
int
adc
pop
test
xor
xchg
push
cmpsb
shrb
lea
fwait
or
fxch
lahf
and
pop
out
or
orw
dec
cwtl
lret
addr16
mov
sub
enter
sub
mov
pop
pop
frstor
sub
addl
hlt
push
sbb
insb
incl
push
or
push
ret
and
and
pop
mov
inc
mov
out
dec
mov
in
jae
imul
gs
out
jg
dec
imul
adc
movsl
bswap
cmp
popf
outsl
mov
pop
dec
cmp
sub
mov
xchg
enter
jbe
shlb
cmp
pop
push
dec
xchg
test
stos
out
imul
cmpsb
sub
lods
or
mov
add
pop
xor
outsl
cmp
pop
out
cwtl
mov
mov
cmpsb
push
sbb
jl
adc
add
loope
cwtl
or
lret
les
and
inc
scas
mov
repnz
fiadds
xor
cli
pushf
add
in
sbb
andl
add
mov
sbb
popa
rolb
aaa
lahf
inc
test
cli
dec
sarl
cmpsb
inc
repnz
mov
imull
and
aam
lcall
add
sub
out
icebp
iret
push
push
jo
idiv
xorl
lea
sub
jl
adc
or
jno
jmp
sub
xlat
mov
call
push
adc
dec
push
ret
repnz
jno
lahf
lcall
mov
cmc
mov
xor
mov
ret
test
jp
xor
pop
rclb
add
mov
in
insb
ss
test
lcall
in
dec
popa
inc
cmp
or
inc
fcmovu
pop
dec
jbe
outsb
loop
push
in
jmp
xchg
xchg
inc
mov
push
repnz
mov
xchg
daa
out
xchg
addl
sti
adc
inc
andb
ss
cmp
sub
mov
pop
test
push
dec
xor
out
call
sub
fdivs
jecxz
sbb
or
add
scas
cmp
ret
sub
jnp
iret
cmp
push
bound
imul
dec
mov
lods
mov
sti
xchg
xor
sarb
dec
adc
mov
ds
inc
mov
add
xchg
or
ret
nop
lock
inc
mov
lock
sub
push
cmp
add
mov
movsl
xchg
iret
fwait
imul
xor
loop
sbb
pop
cmp
leave
or
push
cmp
popa
xchg
xor
pop
xor
in
lret
cmpsb
leave
stos
jge
jns
cmpl
mov
inc
lret
cli
xchg
add
xor
lcall
lds
pop
mov
hlt
pop
pushf
add
addb
popa
stc
nop
lcall
or
mov
jle
push
mov
lahf
adc
jg
dec
xlat
in
js,pt
xchg
mov
lret
mov
testb
lds
lcall
xchg
dec
lcall
dec
cmp
cltd
cmp
in
clc
xor
imul
mov
stos
xchg
nop
push
add
roll
jp
hlt
loope
inc
mov
les
or
add
sbb
call
push
inc
sbb
jnp
pop
mov
cmp
loopne
shrl
xchg
xlat
mov
mov
orl
data16
push
test
loope
sub
push
dec
inc
fdivl
cmp
jmp
cltd
mov
jae
fsubrl
loop
aad
cltd
nop
pop
push
xchg
mov
jb
nop
dec
loope
or
xchg
inc
lcall
popf
or
dec
adc
nop
mov
pop
cmpsb
lcall
xchg
jp
sbb
push
stos
xor
jmp
lret
jle
dec
mov
mov
mov
mov
sub
sti
aas
mov
and
icebp
ds
mov
ss
xchg
inc
adc
test
inc
loopne
jmp
fsubl
stc
shll
lds
test
dec
nop
sub
into
les
mov
xchg
pop
outsb
shrb
xor
fadds
rorl
push
push
loopne
ret
rolb
inc
push
sbb
mov
and
in
aaa
lret
pop
mov
dec
addr16
dec
les
dec
loopne
dec
cmp
inc
rorb
cmpsb
jae
outsb
push
pushf
std
sub
dec
jle
mov
sub
lahf
hlt
mov
outsb
jge
xor
xlat
orl
mov
sub
int3
imull
pop
mov
push
jns
data16
test
and
jns
add
push
jg
shll
bound
push
hlt
in
sub
outsl
xor
jl
movsl
cmp
cwtl
xchg
dec
imul
and
stc
xchg
sub
insl
xchg
cmp
jle
dec
cmpsb
in
cmp
dec
xchg
dec
lret
aaa
mov
fidivrl
mov
mov
xor
aas
out
jp
rorb
inc
cwtl
sbb
aaa
dec
pop
dec
mov
fwait
mov
push
push
pop
mov
push
or
and
push
pop
and
inc
xor
inc
sub
dec
cwtl
sub
mov
jbe
aas
push
pop
cld
dec
mov
int
shr
sbb
sbbb
mov
inc
pop
lock
faddl
fsts
in
sbb
and
jbe
pop
lea
pop
dec
mov
dec
hlt
jb
nop
outsb
inc
inc
push
mov
inc
inc
jo
xor
mov
cmp
test
mov
mov
enter
lods
inc
jns
jmp
jno
add
call
sbb
js
dec
xchg
test
sbb
add
into
jge,pn
adc
mov
and
inc
iret
out
lret
repnz
mov
inc
mov
mov
inc
sbb
push
mov
fsts
jno
jo
in
loopne
add
daa
fisubrs
shll
jbe
leave
inc
or
pop
pusha
pop
outsb
ljmp
lret
pop
inc
pop
xor
popa
faddl
ret
test
push
lock
jmp
gs
xchg
test
push
fldcw
cld
lods
xchg
sub
mov
jbe
xor
hlt
or
mov
out
add
inc
stos
fists
jb
mov
leave
pop
or
mov
sarl
insb
es
sbb
bound
add
aas
scas
mov
aam
sbb
sahf
or
repz
dec
je
mov
mov
and
and
stos
outsb
mov
loopne
mov
les
adc
jae
mov
rcll
mov
frstor
mov
mov
push
pushf
stc
jbe
mov
out
mov
aaa
inc
jp
mov
js
jno
fisubrl
dec
and
adc
addr16
xor
arpl
mov
les
lods
cmc
jecxz
sbb
mov
daa
jg
dec
pop
cltd
mov
mov
push
jns
push
mov
push
andb
mov
cwtl
add
faddl
decl
or
mov
sub
xchg
movsl
push
sub
add
fs
jl
in
xor
in
sub
fsubs
dec
aaa
iret
outsb
jp
cmp
cld
sbb
mov
sbb
aaa
jo
test
mov
leave
pop
mov
bound
push
pop
xchg
add
sbb
jg
mov
sbb
xchg
fs
cmp
ret
mov
pop
das
sub
jp
dec
push
jg
cmc
stos
in
dec
and
adc
into
in
aas
mov
out
dec
xchg
push
test
push
or
test
in
xlat
pop
push
out
js
es
repnz
incb
jnp
dec
mov
lds
fistpll
icebp
int
xor
fstl
xchg
test
push
das
mov
es
in
xchg
call
sub
movsl
gs
or
sbb
xor
mov
mov
adc
test
jecxz
jne
out
inc
mov
xchg
test
inc
xor
mov
fwait
pushf
pushf
fidivl
pop
pop
rclb
lahf
push
cmp
lods
mov
sbb
aad
leave
jle
sbb
lods
pushf
dec
dec
cmp
push
xchg
insl
and
mov
mov
adc
cmc
mov
aas
pop
in
jle
push
push
push
cmpsb
leave
add
and
cmc
add
mov
and
imul
sub
fmull
test
int3
clc
adc
fsub
add
int
sahf
adc
fmuls
icebp
jno
int
add
mov
stc
xchg
shrb
push
lretw
aaa
xor
push
dec
pop
in
jns
rcrb
out
push
fldenv
sub
shl
lock
adc
outsb
jmp
mov
movsl
push
js
push
lret
cltd
dec
les
pusha
jle
mov
dec
cmp
inc
dec
iret
xor
int
xchg
stos
mov
popf
push
out
lock
fistpl
faddp
adc
imul
repnz
push
xor
loop
or
inc
dec
iret
inc
xlat
enter
mov
xchg
sti
clc
inc
sti
loop
jge
mov
sahf
mov
jp
push
mov
loop
cs
inc
push
mov
subl
sbb
fstpt
lea
dec
and
inc
cli
jl
pop
lds
pop
sar
xchg
loope
sbb
pusha
frstor
mov
sub
xor
mov
sub
loop
pusha
aaa
mov
cld
mov
jns
pop
jp
pop
xchg
cmc
inc
push
repnz
cmp
jp,pn
xchg
loope
int
sub
lret
jmp
add
nop
cmp
or
sbb
xchg
sub
cwtl
cltd
jbe
lods
pusha
addl
and
xchg
outsl
add
cmp
add
jne
movsb
js
int
push
xor
insl
shll
out
pushf
pushf
shrb
dec
filds
push
mov
cli
dec
jns
mov
cmp
jbe
mov
xor
clc
mov
mov
or
shrb
loop
test
push
roll
aas
ret
inc
and
lret
loope
test
testl
adc
xorw
mov
jg
leave
outsb
jne
imul
mov
jae
mov
cmpsb
jae
mov
inc
and
cld
cmp
jmp
mov
sbb
out
arpl
pop
insb
lock
jne
into
stos
inc
sub
push
cwtl
mov
mov
pop
dec
aas
add
mov
aaa
push
xor
test
lret
nop
or
loopne
decl
adcl
bound
sub
lods
jns
aas
std
outsl
sbb
pop
insb
aam
lsl
xchg
push
int
int3
mov
sub
mov
leave
lea
or
arpl
lods
cwtl
adc
adc
mov
cmp
jmp
jl
dec
sub
ficoms
fsubl
or
mov
int3
jo
jmp
out
xor
push
mov
or
xor
inc
or
sbb
cmc
and
dec
fists
add
std
xchg
imul
ds
mov
scas
aaa
xchg
mov
pop
sub
iret
or
stos
pop
mov
sahf
cmp
sbb
pop
rorb
ds
pop
movsb
jb
xchg
or
push
hlt
iret
and
and
xchg
outsb
adc
mov
mov
icebp
cmp
into
subb
mov
pusha
lcall
in
scas
sahf
cmp
pop
push
mov
push
pop
dec
in
push
je
dec
sub
aas
or
stc
incl
leave
enter
dec
sbbb
jge
orl
cmp
dec
mov
ss
or
cmp
cltd
push
fsubl
mov
sub
or
lods
flds
scas
dec
mov
clc
add
inc
dec
loop
pop
insl
imul
mov
das
popf
xor
add
jnp
rclb
pushf
je
scas
inc
in
repnz
stc
icebp
ret
push
and
jge
sti
jo
and
in
and
jbe,pn
outsb
outsl
popa
data16
pop
js
sub
insl
add
lret
add
add
xchg
lahf
sub
pushf
mov
mov
loope
mov
xor
mov
mov
xchg
ds
jns
xor
test
fs
cmp
aas
ret
mov
or
pop
in
xor
cld
jae
hlt
das
and
cmp
push
push
pop
imulb
cmpb
loope
ret
ds
sbb
imul
mov
push
ss
je
mov
adc
fcoml
xchg
mov
mov
fcmovnbe
sbb
jo
aaa
push
icebp
mov
ret
push
les
mov
mov
pop
inc
add
flds
or
cli
divb
aaa
fcoml
add
xor
aaa
mov
sub
or
adc
sbb
mov
mov
mov
cs
fildll
shr
sbb
js
popa
pcmpgtw
pop
mov
in
int
daa
or
push
pop
lret
cwtl
out
nop
adc
pop
sahf
test
jno
jle
jle
nop
int3
out
rclb
lret
jns
inc
fmuls
cmp
sub
xchg
movsb
sub
addr16
out
push
jbe
xor
bound
in
jbe
cld
jl
jno
mov
icebp
inc
mov
stc
adcb
loop
jno
mov
repz
dec
or
aam
mov
pop
dec
or
sub
lds
outsl
push
movsb
dec
dec
xchg
jl
pusha
shlb
add
movsl
jg
pop
cli
dec
adc
dec
mov
mov
xchg
jb
mov
xchg
push
adc
addr16
mov
push
xchg
faddl
or
cmp
movsb
div
mov
mov
mov
mov
mov
mov
push
sbb
ja
dec
sbb
or
lea
les
bound
xor
loope
sub
loope
mov
or
cmpsl
hlt
or
sbb
sub
out
sbb
frndint
xor
push
mov
iret
mov
push
push
add
mov
arpl
xor
xchg
pop
int
jmp
cs
mov
jecxz
pushw
xchg
sbb
dec
xor
push
mov
rcr
loope
push
adc
andb
adc
xchg
outsl
fidivs
push
jl
stc
mov
stc
push
ret
loope
outsb
pop
daa
mov
pushf
sub
sbb
sub
sbb
into
xor
add
sahf
pcmpeqw
mov
in
dec
push
mul
outsb
push
lds
jecxz
inc
andl
fdivl
lods
cmp
mov
hlt
jg
and
lcall
ss
cmp
jae
cmpsl
popf
mov
sub
jae
cmp
cmpsb
adc
in
daa
dec
aad
push
xchg
or
xor
repnz
dec
in
push
xchg
inc
arpl
arpl
inc
xchg
and
es
insl
jns
je
jl
je
lcall
andb
sti
shlb
notl
ret
mov
into
or
adc
pushf
cmp
fistps
leave
cmp
mov
or
inc
cmp
mov
xchg
inc
mov
xor
dec
adc
shrl
cs
mov
loop
std
je
cwtl
es
mov
scas
icebp
stc
inc
adc
sub
aaa
xchg
int3
stc
pop
dec
mov
ljmp
push
cmp
and
add
inc
loope
push
cmp
or
mov
add
push
nop
mov
ret
adc
xchg
test
in
sub
sub
js
in
and
aas
imul
fdivrl
lcall
or
test
dec
pop
inc
stos
jae
mov
sub
xor
cmc
sub
andl
addr16
testl
fdivl
les
js
fcomps
xor
add
xor
and
adc
lods
jecxz
popa
punpcklbw
hlt
xchg
lcall
out
jbe
push
push
sub
cli
shrb
jb
or
inc
out
sbb
pop
add
iret
int3
sub
jmp
pop
cli
pop
push
xchg
loopne
xchg
repz
incl
sbb
xchg
fdivl
lahf
inc
push
sub
test
and
push
push
sbb
jecxz
mov
es
dec
mov
ljmp
rcrl
add
in
lods
lock
roll
pop
pop
test
jmp
in
pop
pop
mov
xor
dec
and
xchg
mov
dec
roll
xlat
test
popa
jne
cwtl
je
fwait
pop
outsl
pusha
push
xchg
shrl
mov
out
cmpsl
pop
inc
jge
cmpsb
or
outsl
imull
xor
jmp
stc
adc
outsl
mov
sbb
push
pop
jo
aad
cwtl
inc
sbb
icebp
lock
xor
pop
or
mov
cld
pop
adc
jns
add
pop
jnp
mov
je
pop
mov
dec
in
movsw
stos
inc
ss
or
push
in
xchg
mov
push
in
cwtl
pminub
xchg
cmp
rcr
fdivrl
mov
in
sarl
outsl
mov
stos
lcall
das
sbb
pinsrw
inc
xchg
sbb
cwtl
add
es
cli
out
and
push
aam
hlt
mov
cmpsb
scas
add
lods
int
fs
add
jae
inc
pop
mov
aas
mul
jecxz
mov
cmc
pop
cmp
jp
ds
jmp
sahf
xchg
arpl
and
lret
gs
mov
xchg
testb
outsl
adc
popa
dec
stc
stc
and
push
sbb
aaa
nop
bound
xchg
jle
sbb
push
mov
mov
loopne
gs
jb
mov
pop
fstl
fcompl
add
sahf
stos
and
sbb
lds
inc
and
mov
mov
loop
sbb
xchg
mov
pop
sub
les
inc
mov
jg
bound
adc
fs
out
xchg
adc
dec
test
fiadds
push
xchg
cmc
addr16
adc
addl
insb
xlat
adc
sbbb
mulb
xchg
and
cmpsb
test
pop
sbb
data16
adc
shrb
push
pop
jge
push
pushf
gs
inc
stos
out
pop
sti
das
and
pop
ret
add
sub
sub
cli
testb
sub
mov
jecxz
shlb
movsl
mov
enter
test
dec
outsb
cli
xchg
push
call
or
push
arpl
mov
outsl
popa
out
xor
out
mov
push
jmp
xchg
lret
es
sahf
fildl
fisubrl
out
lcall
push
inc
out
loopne
insb
mov
pop
subl
push
ds
sbb
jb
and
rcrl
xor
lahf
adc
adc
push
sbb
aas
mov
orb
xor
mov
fiaddl
mov
std
push
fisttpl
popf
loopne
push
inc
aam
icebp
mov
push
jnp
push
jecxz
pop
inc
pop
jecxz
mov
movsl
cmp
test
add
repz
andb
jmp
lock
mov
insl
xchg
inc
scas
jge
mov
xor
push
add
sbb
inc
clc
dec
adc
inc
daa
daa
or
fmuls
std
xchg
push
cmp
std
in
cli
jmp
jno
ss
lret
call
sbb
clc
cmp
mov
xchg
dec
jmp
and
xchg
test
mov
mov
pop
pop
fiaddl
xchg
pop
cli
es
aad
cmp
cld
xlat
jle
mov
test
inc
xchg
mov
ja
pop
lea
push
mov
mov
fisttps
outsb
cmp
inc
pushf
xor
aad
pop
sbb
mov
sbb
cwtl
leave
pusha
sub
sarb
lahf
in
and
imul
adc
cmp
dec
iret
jecxz
test
clc
pop
scas
ja
or
mov
imul
inc
adc
mov
loopne
sbb
aaa
pop
xchg
or
jbe
call
in
mov
adcb
rcl
push
scas
mov
push
leave
fimull
fbld
or
loopne
popa
jb
ja
addb
sub
cmp
xor
imul
dec
adc
stos
jo
pusha
gs
mov
xchg
enter
call
add
adc
jnp
cmpsb
lock
stc
dec
dec
sub
cli
das
movsl
sbb
cmp
popf
std
xchg
fdivl
inc
dec
jl
in
sbb
push
push
sub
cld
jge
and
pop
jg
pop
cltd
mov
ds
xor
cli
inc
or
mov
pop
dec
lret
test
sti
add
stos
test
idivl
push
int3
rcr
dec
pop
adc
add
loopne
sub
xchg
adc
test
lods
imul
jg
sub
je
fbstp
push
inc
or
adc
fpatan
xor
push
insb
push
sbb
sbb
dec
cmc
pop
sbb
aas
ret
pop
jecxz
lods
mov
cltd
sbb
add
test
and
aad
cld
mov
xor
lahf
arpl
xor
xchg
jne
cs
jno,pt
test
push
int
inc
jmp
movsl
mov
inc
pop
fnsave
das
push
xchg
jg
test
push
test
sbb
push
sti
jne
inc
and
xlat
outsl
sub
lea
sbb
ljmp
arpl
add
das
sbb
jge
jmp
stos
and
call
cmc
sbb
jbe
loopne
xchg
jno
mov
rolb
push
inc
cmp
cmpb
push
lahf
xor
jb
mov
stos
xchg
push
sahf
mov
mov
fwait
mov
sub
fmull
inc
dec
ss
aas
sub
inc
jge
icebp
fisubrs
mov
dec
pop
idivb
inc
and
mov
cmpl
pop
mov
and
js
xor
testb
sbb
ljmp
lret
xor
sub
aaa
xlat
mov
fcomip
pop
test
fdivrs
pop
dec
sub
mov
stos
push
push
dec
push
xchg
mov
dec
test
and
adc
inc
cmp
rcrl
cmp
and
xor
arpl
adc
iret
fdiv
lea
mov
cmpb
cmp
clc
out
dec
inc
and
fsubs
add
ret
sbb
lock
inc
jns
cmp
insb
test
dec
sbb
lret
mov
lret
or
imul
pop
arpl
add
fidivs
pop
sti
bound
and
xor
rcll
repnz
fcomps
faddp
test
ss
rclb
ret
xchg
pusha
sbb
enter
ss
sub
xchg
sub
mov
stos
push
push
push
insb
cmp
ljmp
das
sbb
cmc
xchg
dec
lret
bound
bt
neg
popf
mov
xor
movsb
bound
jnp
or
xor
xchg
mov
xor
mov
nop
dec
dec
inc
cmpsb
cmovns
leave
pop
xchg
mov
jp
pushf
and
adc
out
lret
dec
insl
fnstcw
push
cmc
arpl
cmp
and
mov
imul
dec
hlt
repz
mov
sbb
jne
das
outsb
mov
mov
lahf
xchg
xor
clc
push
jbe
aaa
inc
daa
pushf
iret
fimuls
and
jmp
cmp
fnsave
lock
sahf
pmulhw
mov
iret
jnp
push
loop
sub
mov
pop
sbb
push
sub
push
fs
cmp
cli
mov
and
loope
shlb
mov
dec
cmp
es
in
mov
cmp
mov
fimuls
or
pop
scas
cltd
jp
sahf
add
je
push
jle
mov
and
cmpl
jl
add
mov
cmp
out
xchg
sbb
clc
daa
xor
filds
push
fdiv
fimuls
xor
int3
xchg
les
ja
mov
incb
or
fiaddl
ror
mov
jle
arpl
lret
jmp
das
sub
sbb
adc
mov
inc
in
cmp
push
add
pop
jmp
jmp
orl
icebp
cltd
sarb
mulb
arpl
data16
jge
pusha
cmpsl
repnz
test
pusha
push
sbb
mov
mull
jbe
movsl
and
jle
or
push
xchg
mov
adc
aad
xor
jmp
inc
xchg
xorb
sub
aaa
pop
cmp
jne
loop
xchg
hlt
and
push
lds
pop
insb
sub
aas
loop
ljmp
fadd
xor
add
roll
inc
add
popf
imul
or
dec
mov
iret
mov
jno
jne
sbb
inc
shlb
in
jg
cli
stc
dec
arpl
shr
xchg
add
adc
test
cmpsb
push
mov
cld
bnd
mov
jne
out
or
mov
mov
insl
jbe
mov
push
arpl
mov
es
push
adc
push
xchg
aas
clc
xchg
xor
sarb
ljmp
add
lods
jb
add
jns
insb
fisubs
or
rolb
loope
stos
ret
sbb
outsl
in
add
test
mov
push
sarl
stc
jge
stos
inc
cwtl
ja
fxch
mov
push
shll
inc
sbb
adc
push
jo
xchg
mov
clc
cmc
ja
imul
inc
cmp
out
sbb
arpl
jno
sub
push
popa
shll
push
popa
xor
rolb
stos
rcl
mov
inc
pop
add
pop
push
test
in
mov
sahf
aad
test
incb
or
rol
push
call
cmp
jge
insb
loop
mov
shlb
popf
mov
and
jne
pop
cmp
scas
xor
cmpsb
pop
int3
lods
push
lcall
inc
daa
int
into
movsl
mov
cmp
add
push
add
xchg
in
push
scas
xchg
jmp
daa
leave
xor
ret
add
into
dec
mov
fucomip
adc
lods
sarb
and
and
dec
cmp
arpl
jecxz
nop
mov
push
js
pop
mov
mov
inc
loopne
adc
mov
idiv
pop
repnz
or
stos
mov
test
out
testb
jl
scas
xor
dec
fcomps
push
pop
lret
cmp
rcll
fisttpll
push
add
out
mov
in
mov
adc
clc
insb
cmp
xor
out
mov
outsb
shlb
les
add
sbb
fcmovnu
push
js
xor
mov
test
in
mov
int3
jl
jp
nop
mov
clc
test
add
or
iret
outsl
test
pop
or
sbb
in
popa
mov
fcmovnu
divl
mov
insb
loop
mov
cli
mov
xchg
dec
enter
pop
push
push
mov
or
pop
rcrb
je
lret
les
push
outsb
mov
push
pop
fistps
push
daa
or
lea
mov
js
dec
pop
jg
cmp
xchg
shlb
pop
daa
sub
xchg
jae
inc
std
bound
mov
in
push
sub
or
and
outsl
leave
cmp
sti
arpl
dec
ret
lret
jp
ja
mov
jmp
and
xchg
in
inc
aas
mov
cmp
inc
imul
xor
add
push
cli
cmpsb
mov
jg
stc
cld
sbb
mov
sub
cli
subl
push
mov
adc
icebp
in
sub
lods
pop
dec
test
and
iret
mov
pop
jp
std
cmp
in
incl
jge
fucomip
data16
dec
jbe
mov
cwtl
pop
int3
push
out
pop
adc
push
shll
adc
push
js
fcomps
push
fmull
xor
xchg
xlat
hlt
and
movsl
xchg
int3
mov
xchg
inc
sbb
pop
repnz
xorl
fildll
mov
pop
cmp
mov
inc
dec
or
cli
push
xchg
jecxz
stc
outsl
mov
aad
lret
push
frstor
js
mov
cmpsb
dec
cs
jp
movsb
pop
sbb
or
jle
repnz
test
inc
jne
call
add
std
mov
fmuls
test
les
js
cmp
loopne
mul
cmp
jg
mov
mov
dec
jle
and
ret
bound
dec
aad
sub
inc
scas
js
fnstenv
leave
mov
scas
andl
pop
cmp
adc
sub
xor
dec
jne
sub
mov
inc
mov
mov
dec
sbb
test
xor
push
jo
mov
mov
lret
sbb
jbe
adc
mov
adc
lret
or
aam
roll
roll
aad
das
or
imul
xchg
lods
ret
xchg
inc
pushf
jmp
aam
repnz
rcl
push
jecxz
sbb
gs
push
push
inc
sbb
lds
push
gs
dec
fcomps
jle
jge
insl
mov
sub
pop
xchg
push
call
inc
adc
pop
xchg
inc
daa
sub
subb
mov
popf
loope
imul
jb
sarb
repz
pop
sbb
fcompl
sub
pop
push
vpunpckhdq
insb
adc
add
dec
ja
sti
jne
dec
mov
sbb
dec
ljmp
fs
sbbb
lret
cli
adc
cmpl
scas
cmpl
adc
icebp
lcall
jl
pop
mov
into
movsl
sbb
xlat
stos
xor
push
sbb
push
inc
mov
test
xchg
dec
ret
clc
jne
lea
aad
and
gs
js
mov
aas
pop
inc
jbe
and
pop
pop
mov
rcrl
test
scas
or
cmp
mov
mov
mov
jo
dec
fisubrs
adc
lcall
movsl
fdivrl
pop
in
mov
or
int3
fisubrs
pushf
xlat
icebp
sub
and
mov
enter
lods
dec
mov
fsubrs
aam
sub
movsb
stos
xchg
dec
rcrb
ret
bound
ljmp
bound
mov
out
xlat
lods
pop
and
jmp
cltd
dec
pop
jl
xchg
dec
sub
hlt
ljmp
jmp
out
cmpsl
mov
adc
adc
pop
push
cmc
fimuls
mov
mov
cmp
dec
lods
aad
cs
das
out
push
cs
lcall
and
pop
mov
dec
sub
sarb
xor
out
or
lods
mov
loopne
push
ljmp
aas
push
in
jno
cltd
jbe
xchg
std
mov
ret
pop
or
pop
cmpsl
cmpsl
jge
gs
mov
adc
or
fdivrs
and
jae
cmp
mov
ret
addr16
mov
daa
je
aaa
rclb
repz
jmp
stos
adc
std
inc
push
dec
adc
inc
cmp
sub
test
std
push
dec
sbb
jno
pusha
test
mov
hlt
popa
outsb
ljmp
cmp
repnz
push
jo
dec
dec
adc
test
mov
enter
mov
mov
sub
dec
cmp
pop
dec
jecxz
inc
add
pop
xor
rcl
cld
cwtl
arpl
xchg
fwait
bound
call
add
out
jp
xchg
negl
xor
mov
sahf
lret
test
adc
push
xchg
jg
mov
push
sub
rcr
data16
in
mov
gs
jle
add
jmp
lret
icebp
sbb
xchg
movl
dec
pop
push
jp
dec
inc
dec
inc
xchg
jne
nop
sbb
mov
push
filds
in
add
cltd
fwait
jo
mov
mov
popl
inc
test
repz
inc
repnz
lock
imulb
push
rorb
push
imul
sbb
aas
test
pop
cmp
pop
sub
vmovd
outsl
lcall
leave
int3
push
ficompl
cmpsl
ja
mov
mov
daa
adc
cmpsl
sbb
lock
adc
lcall
inc
sbb
jmp
jge
push
xchg
enter
inc
xchg
out
test
jo
movsl
aaa
mov
fisttpl
movsl
cli
dec
test
or
sbb
test
inc
jmp
mov
cmp
sbb
jne
lods
nop
test
add
sbb
lcall
mov
and
pop
cmc
mov
cmp
ds
mov
js
push
pop
scas
jmp
inc
mov
test
and
adc
mov
aad
mov
add
clc
lcall
xchg
out
dec
xchg
inc
and
add
mov
jp
mov
stos
adc
mov
jnp
mov
in
jmp
sti
push
loop
sbb
push
push
xchg
test
sbb
in
push
adc
insb
rorl
adc
xchg
movsb
aas
cltd
pushf
mov
cld
enter
xor
pop
cmp
fisubrl
enter
scas
test
pop
push
bound
stc
es
sbb
jmp
and
loope
movb
test
stos
pop
iret
xlat
inc
push
dec
xor
test
repz
ficoms
int3
in
cmc
bound
mov
cmpb
leave
mov
cmp
jb
lret
inc
rol
test
sub
fmulp
jne
aaa
lock
pop
mov
adc
arpl
xchg
cmpsl
rorb
fsubl
push
sahf
jecxz
hlt
pop
out
cltd
adc
sub
jnp
dec
mov
adc
cmp
in
fidivs
shrb
fs
mov
mov
sub
aad
pcmpgtb
xchg
push
push
pop
dec
decb
push
sarb
inc
je
cmpb
or
repnz
fistpl
sti
adc
adc
out
test
add
xor
cmp
add
movb
loope
imul
pop
movsb
rorl
test
sub
inc
rcrb
ret
pop
mov
or
push
add
push
popa
shll
loope
into
xor
test
shll
mov
push
nop
pop
and
dec
fildll
mov
cmp
mov
mov
xlat
aas
in
push
ret
loopne
pusha
ja
fisttpll
add
jne
cmp
mov
push
lahf
mov
enter
fimuls
cmp
movsb
in
cmpsb
pop
icebp
rorl
mov
pusha
in
dec
jg
cltd
scas
jbe
fstpl
aad
imull
adc
sub
repz
imul
cmp
xor
cmpsl
lret
nop
sub
push
mov
xor
mov
lods
xchg
push
aam
scas
gs
insl
inc
jp
push
sub
pop
adc
aas
lods
mov
outsb
jae
dec
sbb
ret
dec
push
xor
or
mov
adc
lret
jno
xchg
push
mov
das
movsl
addb
scas
call
dec
jle
lcall
cmpsl
jae
mov
adc
scas
jecxz
and
push
int3
jp
repz
mov
xor
pop
aas
inc
push
mov
std
inc
stos
or
dec
inc
inc
aaa
xchg
pop
jecxz
sbb
jb
jnp
adc
push
test
pop
xchg
aam
je
mov
dec
imul
ficompl
jne
andl
in
out
inc
xor
and
xor
inc
aam
mov
or
es
sub
test
fwait
pop
push
movsb
popa
dec
dec
push
rcrb
dec
mov
mov
fistl
dec
xchg
not
ret
out
fisubl
cmp
pop
stos
ret
xchg
and
mov
mov
xor
shrl
fs
push
push
sub
push
add
or
cli
rcl
movsl
ljmp
mov
push
lcall
lods
inc
pop
adc
adc
je
push
pop
test
mov
pop
push
addr16
pop
lea
lahf
aas
add
sbbb
insb
mov
xchg
add
xorb
data16
pop
es
mov
addb
gs
sbb
mov
and
dec
and
jno
ja
or
dec
icebp
jl
sarb
or
out
sbb
pop
js
or
xor
lcall
or
inc
ret
ret
push
inc
mov
cmc
arpl
mov
ds
mov
xchg
mov
lahf
mov
dec
fisubl
cmp
sub
test
insb
adc
enter
pop
scas
test
bound
and
and
mov
fstps
cmp
mov
xchg
std
movsb
sbb
mov
in
icebp
lret
rcrb
dec
inc
into
roll
out
mov
mov
mov
inc
lret
pusha
mov
fldt
repnz
inc
pop
fnclex
inc
jmp
or
mov
in
or
adc
stos
and
ljmp
jnp
hlt
mov
push
outsl
fdivrs
and
into
loop
shl
sub
pop
mov
je
jge
push
call
sbb
xor
cbtw
xchg
pop
fistl
pop
out
cmp
test
pushf
sub
sbb
nop
adc
pop
push
cmp
fildll
arpl
popa
out
cmc
int3
sbb
addl
call
dec
cmc
fs
test
sbb
cs
xor
dec
pop
pushf
sub
pop
mov
dec
dec
cltd
adc
cmp
push
sub
sbb
add
out
fnsave
stos
addr16
cwtl
bound
mov
push
int3
scas
into
mov
clc
inc
pop
add
cmp
sbb
mov
sar
fldt
sbb
dec
lcall
inc
les
cmp
xchg
movsl
add
jmp
sbb
mov
mov
mov
jb
outsl
out
in
pop
fcmovnb
dec
insb
jl
mov
and
inc
or
out
pop
jp
mov
lea
bound
ret
dec
dec
shrl
hlt
pop
sbb
sbb
nop
sub
repz
or
jle
sub
test
xchg
lock
je
push
inc
out
fnsave
js
jmp
loopne
jp
incb
mov
arpl
aad
mov
bound
cmp
push
xlat
fiaddl
mov
gs
xchg
ja
sbb
daa
aaa
data16
jnp
push
xchg
out
xor
pop
enter
stos
aas
xlat
ret
xchg
xchg
shlb
popa
push
repz
roll
rorb
sti
push
mov
dec
dec
out
fcmove
aam
lret
test
xor
das
mov
inc
jg
jbe
lret
ret
sarl
aaa
les
das
mov
xchg
jo
pop
inc
adc
ja
mov
mov
mov
adc
je
lahf
xor
std
jmp
lret
adc
jno
fisttpll
sbbb
mov
test
inc
adc
xorl
frstpm(287
add
and
scas
fstl
fidivrl
xchg
and
xchg
sbb
add
xor
sahf
pop
shll
test
sti
adc
out
fwait
xchg
sarb
sti
xchg
cld
inc
iret
rcll
sbb
cmp
aad
xchg
xor
sub
mov
mov
nop
xchg
dec
sub
loope
inc
inc
inc
pop
enter
dec
dec
in
fucomi
cltd
pop
cmpsb
test
data16
loope
insb
xor
repnz
mov
in
add
xor
mov
cli
addr16
and
int3
adc
and
mov
mov
imul
or
stos
dec
testl
push
es
rorb
xchg
jne
sbb
insl
jmp
sub
lret
pop
xchg
pop
repz
jnp
insb
jecxz
daa
in
xchg
or
sub
out
popa
jae
jnp
sbbl
sbb
sub
orb
jno
cmpsb
icebp
dec
or
xor
adc
ljmp
mov
out
lods
shrl
cmpb
sbb
xchg
push
popa
lea
cltd
adc
loope
cmp
xor
stos
jo
and
cmpsl
imul
and
imul
fwait
dec
dec
jge
scas
cwtl
lea
arpl
scas
dec
add
push
lret
testl
xchg
shll
lds
pop
popa
mov
jecxz
add
dec
int3
ret
add
loop
sbb
xchg
adc
and
cld
jp
cmp
test
dec
add
or
sbb
or
pop
insb
rolb
jo
dec
sbb
stos
outsb
lock
pushf
jg
js
hlt
lcall
ljmp
stos
push
inc
addb
push
push
daa
xor
stos
sub
js
dec
and
or
roll
js
add
daa
out
arpl
add
out
xchg
rcr
frstor
test
dec
loope
cld
lret
dec
in
adc
int3
mov
mov
inc
stos
push
add
cli
mov
push
and
pop
in
pusha
cmpsl
pop
fnstcw
xor
xor
pushf
sub
lods
push
mov
push
test
aas
idiv
out
pop
lahf
or
mov
pop
aad
add
ds
arpl
icebp
sub
jae
icebp
ds
sub
outsl
movb
cli
mov
adc
push
cmp
and
mov
mov
test
rcll
dec
jmp
ret
add
push
fstp
jnp
pushf
inc
jns
or
sub
es
std
loope
cmc
xchg
in
sub
mov
inc
pushf
out
or
insl
xchg
insl
cmpsl
push
aaa
xchg
ret
mov
fstp
and
in
pop
xchg
ficoml
mov
xor
mov
mov
push
test
pop
add
repnz
pop
xor
repnz
mov
xchg
test
add
inc
shl
push
xor
shrl
lds
jae
cmp
adc
xor
jo
add
enter
xchg
pusha
lock
mov
mov
cmp
sarl
arpl
mov
pop
add
mov
xor
sub
xchg
and
xchg
aam
into
adc
sahf
push
bound
jae
xor
dec
mov
mov
pushf
and
push
adc
xchg
sarl
inc
rcrb
stc
cltd
pushf
mov
cmp
out
faddl
xor
nop
mov
and
adc
jbe
xlat
jae
nop
int
jp
rol
and
fwait
xor
lret
mov
push
or
mov
dec
int3
xor
icebp
sub
sbb
std
rorl
xor
inc
jecxz
sbb
push
filds
push
ja
pop
inc
push
cs
mov
imul
sbb
xchg
lods
lret
es
loopne
mov
cmp
mov
fcoml
daa
mov
jp
jg
pusha
push
xchg
inc
pop
jbe
call
cmpsb
cmp
add
cmp
rclb
das
push
pop
mov
pop
cmpb
cmp
xor
enter
mov
aam
adc
jbe
xor
pop
rclb
xchg
aaa
das
xlat
mov
test
mov
dec
mov
out
mov
test
icebp
out
mov
or
shr
and
test
jae
xchg
in
daa
insb
cmp
mov
out
and
aad
adc
jne
cmp
xor
stos
aaa
adc
dec
cltd
clc
int
xchg
stos
rclb
cwtl
mov
and
loop
stc
es
addr16
push
int3
cmp
mov
adc
insb
fwait
dec
xchg
mov
loopne
pop
xor
xchg
roll
pop
jbe
arpl
dec
mov
jae
xchg
lret
add
ds
sbb
adc
aad
rcrb
bnd
jp
mov
sub
enter
jl
xchg
xchg
xlat
and
rorb
jne
call
dec
cmpsl
inc
sub
sub
xchg
stc
arpl
mov
out
aam
xor
je
mov
and
inc
push
jp
jge
lods
pop
or
add
into
lret
sub
inc
sub
rclb
xchg
pop
sbb
mov
outsb
mov
clc
inc
lcall
push
and
push
jle
or
jg
cmc
push
aam
mov
es
lcall
push
add
xor
loop
xchg
push
add
push
out
flds
pop
adc
cmp
add
cli
sbbl
out
pop
sub
hlt
sbb
mov
pop
pop
mov
out
shlb
sahf
mov
and
mov
or
fiaddl
out
scas
xor
sahf
mov
mov
mov
notl
je
out
xor
scas
cmc
shrb
dec
decl
push
loope
test
mov
aas
out
jbe
int
cmpl
push
mov
inc
xchg
dec
jecxz
test
mov
xchg
cmp
xchg
adc
aas
push
or
mov
pop
int3
xor
imul
orb
mov
xchg
mov
cmp
cli
imul
push
sahf
cmp
xchg
in
mov
aaa
inc
sub
cmp
xchg
movsb
mov
imul
mov
push
cmp
add
int3
sub
dec
jne
jae
sbb
std
iret
and
call
push
sbb
cmp
cmp
mov
test
pusha
pusha
outsl
xchg
std
mov
sahf
jmp
or
xchg
jnp
int3
jb
ret
mov
test
shll
imul
add
mov
nop
lcall
shrb
inc
adc
loopne
popf
jge
jmp
inc
and
out
movsb
imul
aas
or
lret
cli
scas
ret
ja
dec
popa
iret
sbbb
mov
dec
mov
and
sub
test
dec
xchg
cmpb
lods
sub
mov
cmc
dec
jbe
push
inc
mov
lahf
ljmp
fnsave
adc
jae
mov
xchg
lods
lret
mov
insb
push
cmp
js
mov
icebp
out
movsl
and
aas
push
out
addr16
sbb
rcrl
sarl
aaa
dec
or
xchg
jp
xchg
or
cmp
imul
icebp
aad
sbb
and
rcll
sbb
xchg
mov
and
or
bound
pop
pop
dec
xor
or
jl
fcos
ds
nop
dec
xlat
cmc
mov
mov
pushf
in
aam
jecxz
add
fdiv
int3
xlat
jbe
pusha
lret
adc
and
sub
insl
mov
or
ss
lock
cmp
fidivrs
imul
jl
jne
sub
testb
rorb
lock
fmull
lret
sbb
jmp
out
adc
and
jp
dec
fs
or
mov
frstor
jo
cmp
movsl
push
mov
imul
mov
or
cwtl
jne
pop
add
jb
adc
fdivr
jge
das
push
dec
adc
inc
mov
mov
loopne
popa
dec
jne
ret
or
mov
scas
jno
jge
sub
loopne
add
in
cmpb
pop
iret
ret
nop
or
cmp
lcall
les
and
xchg
xchg
cltd
mov
add
push
popf
ljmp
ret
jge
into
dec
jmp
jbe
fldenv
out
jmp
enter
push
aad
jne
lret
add
sbb
cmp
cwtl
scas
cld
aad
push
or
outsb
jno
das
push
and
and
rclb
mov
imulb
jecxz
dec
pop
in
lcall
fidivs
fmul
sbb
pop
and
cmp
cltd
inc
int3
sub
mov
addb
ja
outsb
fdivrs
adc
out
and
mov
or
mov
jo
sub
icebp
jno
stc
sub
mov
arpl
cli
mov
insb
mov
push
mov
add
aas
lods
mov
mov
dec
adc
cmpb
mov
addl
lods
adc
mov
mov
call
mov
frstor
loope
xor
jns
add
imul
mov
arpl
xor
sub
imul
dec
sub
cmpsb
ljmp
jo
jg
notl
xlat
adc
outsb
dec
cmp
stos
lods
fnstenv
icebp
jp
hlt
dec
jo
pop
iret
xchg
push
lahf
xor
mov
adc
mov
xor
sbb
mov
loope
loope
loop
loop
inc
pop
pop
out
bswap
dec
lahf
test
aaa
adc
mov
adc
das
iret
scas
mov
pop
mov
je
leave
cwtl
out
je
clc
movsl
insl
mov
inc
add
mov
outsl
push
and
inc
ja
pop
and
cmp
mov
xchg
xchg
nop
mov
jns
mov
clc
or
sbb
nop
mov
xor
jl
aad
dec
ljmp
rolb
jecxz
pop
pusha
imul
dec
or
cmp
clc
dec
add
pop
lds
out
inc
lcall
push
je
xorb
imul
mov
cmp
das
add
push
xchg
adc
stc
ljmp
aas
push
mov
loopne
cli
sub
shll
sub
jge
lods
xchg
inc
and
jbe
xchg
push
std
outsb
add
inc
repz
int
sub
insl
lahf
add
mov
gs
js
mov
inc
push
loopne
cwtl
jecxz
sbb
mov
mov
sbb
fistpl
sub
mov
and
aad
mov
inc
aad
mov
sti
push
jae
push
imul
lock
lahf
mov
xchg
jo
loope
sbb
or
or
jge
js
minps
mov
stos
pop
mov
lret
cltd
mov
xchg
cmp
dec
int
pop
fs
stos
arpl
cmp
adc
and
mov
sub
cld
pop
outsl
testb
mov
jo
mov
pop
subps
data16
shlb
add
lret
add
and
mov
sahf
mov
or
jmp
pop
subb
gs
push
inc
jge
pop
cmp
inc
cmp
mov
movsl
nop
pop
in
jbe
test
xorl
lret
xor
xor
out
jae
cmc
fcoms
dec
das
gs
out
cmpsl
mov
sbb
nop
push
inc
or
test
mov
jle
and
gs
cmp
sub
xor
insb
lods
push
lods
add
je
jecxz
cli
or
mov
add
fldl
jne
and
bnd
cmpsl
sti
mov
cli
jnp
adc
xor
movsb
add
xchg
mov
mov
faddp
mov
fimuls
adc
aas
jo,pn
mov
fwait
adc
pusha
cmc
jecxz
add
in
add
mov
push
mov
shlb
mov
test
ret
xor
notl
inc
mov
and
cmpsb
icebp
cmpsb
and
mov
addr16
and
ud1
and
pop
mov
dec
aaa
or
lahf
test
dec
dec
and
in
sub
xor
push
xchg
push
out
mov
inc
fmul
push
fistps
xchg
aam
fidivrl
insl
stos
mov
xchg
pop
adc
ljmp
enter
aas
mov
rcr
inc
rcll
sub
add
pop
fiaddl
aas
and
push
mov
xchg
call
jg
jmp
mov
push
and
pop
sbb
mov
sbb
xor
ljmp
xchg
shl
enter
mov
out
jne
ret
sub
imul
sub
pop
nop
lds
pop
xorb
pop
mov
ljmp
xor
pop
test
add
adc
out
cmp
xchg
dec
rolb
xchg
addr16
pop
xchg
add
ret
adc
push
negb
and
stos
iret
push
repz
sahf
shrl
and
push
or
insb
rcl
lods
and
push
aam
inc
jns
add
mov
sbb
into
addr16
stos
or
test
adc
js
add
addl
push
cmp
mov
inc
push
cmp
fwait
adc
push
xorl
jp
adc
xchg
jnp
cli
loopne
ret
sbb
or
and
jo
sub
jne
push
cmc
jg
sub
lods
mov
dec
les
push
and
add
into
jae
add
arpl
flds
mov
pop
rcr
push
sbb
jecxz
or
cmp
loope
jne
jne
dec
mov
mov
js
jp
and
std
in
incb
test
cltd
dec
mov
lock
jns
popf
cmp
mov
shrb
les
imul
bound
dec
push
imull
sahf
mulb
pop
scas
aam
adc
add
add
test
jo
jge
push
outsl
std
inc
xor
add
adc
push
in
mov
sub
or
and
pop
xchg
push
in
inc
out
inc
cmp
mov
sbb
nop
andb
mov
outsb
hlt
inc
add
lret
insl
pop
adc
enter
inc
cmpsl
mov
shrl
xchg
subl
aaa
or
mov
hlt
and
mov
xchg
xor
movsl
stc
es
test
mov
mov
xor
or
mov
call
mov
pop
dec
aaa
jp
ret
sub
add
inc
insl
bound
loopne
inc
out
and
cltd
outsl
xor
test
shl
xchg
mov
sub
mov
mov
xor
xchg
lock
ljmp
aaa
add
call
adcl
or
sbb
jmp
jbe
test
ss
or
dec
jecxz
lahf
xchg
loope
mov
ja
sahf
jmp
sbb
outsl
mov
negl
cmp
mov
xchg
inc
xchg
dec
mov
or
push
je
sub
test
movsb
in
in
nop
sub
lods
les
mov
stc
cwtl
inc
insb
lahf
sub
jbe
jae
jmp
mov
cmp
sub
ret
clc
add
push
push
aad
sbb
cld
test
mov
lock
xorl
inc
es
les
lret
pushf
push
mov
imul
lods
enter
push
es
or
add
popf
lret
jns
fistps
nop
push
pop
bound
les
xchg
dec
data16
lock
lock
and
mov
lret
mov
sub
inc
cld
adc
xchg
inc
mov
inc
outsl
cld
mov
insb
jl
pop
mov
fists
lods
pop
lret
rcrb
cmp
mov
pop
mov
shll
mov
imull
inc
inc
movsl
mov
cmp
insl
cmc
sbb
jnp
es
xchg
lods
sbb
jp
adc
adc
dec
push
and
inc
xchg
shr
scas
push
jmp
insb
pop
pop
stos
clc
sti
mov
repnz
data16
adc
xchg
repz
cmp
push
out
addr16
mov
sbb
xchg
add
mov
loope
cmpb
dec
push
shl
popf
add
prefetchnta
xlat
gs
pop
pop
sub
bound
lock
aad
sbb
scas
pop
add
mov
push
call
mov
xor
push
add
scas
jne
add
pop
add
mov
push
xchg
clc
repnz
sbb
std
dec
mov
cmp
jecxz
imul
mov
adcl
insl
mov
rorb
xor
and
lret
dec
pop
jno
sub
std
sbb
push
or
mov
xchg
push
push
xchg
int
shrb
xchg
repnz
mov
xor
faddl
xchg
mov
stc
dec
std
add
out
ja
scas
jae
mov
mov
pop
sub
cmp
iret
lcall
xchg
cmpb
mov
pop
mov
or
sarb
insl
cmpsb
push
loopne
mov
pusha
imul
mov
cmpl
addb
xchg
push
push
xchg
mov
decb
xchg
mov
xor
movsl
pushf
pop
frstor
jp
lods
imul
aam
int3
stos
cld
cmp
aas
pop
jmp
andl
inc
sub
shll
data16
rorb
pushf
inc
mov
mov
mov
mov
cmp
sbb
adc
push
mov
scas
push
inc
stc
insl
pusha
jno
push
dec
sbb
cmpsl
cld
enter
xlat
into
in
loopne
inc
scas
aas
scas
mov
mov
dec
out
pop
pop
test
sti
mov
repz
pop
daa
fistpll
shl
ret
leave
add
call
adc
cli
cld
pmuludq
stc
es
out
ficompl
push
fiaddl
cmc
imul
sub
loopne
cli
xor
imul
xchg
inc
fisttps
fiadds
std
jg
dec
repz
sbb
push
add
shll
xchg
jecxz
inc
fildl
push
cmp
pop
insb
add
stc
incl
xor
inc
mov
lds
jb
jno
testl
mov
lcall
arpl
pop
mov
jbe
imul
andb
xchg
sbb
lcall
out
sarl
push
leave
sahf
ficomps
push
sub
dec
mov
pop
stos
or
mov
push
xchg
ljmp
sarb
sar
enter
imul
mov
popa
pop
or
mov
adc
mov
xchg
pop
cmpsb
out
inc
xor
jno
dec
cltd
iret
mov
inc
mov
nop
jbe
sub
mulb
sub
stc
insb
and
mov
fucomi
mov
mov
test
mov
cli
xchg
imul
pusha
dec
jmp
cwtl
or
lock
sar
das
jbe
shrl
popf
push
inc
lds
out
add
jb
pop
ja
push
add
popa
loope
in
stos
repnz
out
sbb
or
stos
cld
or
popa
bound
shrl
mov
pop
push
push
xlat
xchg
pop
xor
inc
inc
adc
insb
jmp
daa
pop
addr16
loop
pop
fs
mov
add
lods
mov
xorb
jmp
iret
and
gs
stos
dec
add
sti
adc
inc
sar
stos
sbb
ret
or
jns
jbe
inc
clc
jns
push
testb
xor
dec
ds
aad
pop
jmp
int3
cwtl
or
jno
imul
bound
lret
push
sarl
lret
adc
dec
dec
mov
or
mov
aaa
mov
insl
in
add
rorl
inc
jae
cld
pop
xchg
push
daa
ret
jnp
hlt
lcall
push
out
out
adc
sbb
cwtl
test
int
into
jb
inc
jbe
popa
dec
mov
mov
cmp
mov
jbe
lea
dec
mov
push
pop
adc
roll
cmp
mov
push
jae
movsb
inc
popf
sbb
lahf
mov
inc
sub
add
jge
sbb
dec
aas
xlat
xor
or
jno
pop
mov
adc
dec
or
out
inc
dec
inc
leave
ljmp
nop
scas
sbb
and
xor
mov
jle
out
mov
add
mov
dec
cs
iret
jae
dec
mov
test
clc
dec
dec
jbe
pop
cmc
out
imull
jo
imul
sub
add
mov
xor
jge
lea
dec
andb
out
popf
mov
xor
fldl
xchg
fldl
pop
lock
cli
xor
sbb
sbb
popa
fsts
mov
stc
sub
lock
fwait
pusha
and
xlat
in
jg
xchg
fs
mov
inc
test
sbb
shrl
xlat
jnp
sub
mov
ficoml
aaa
mov
or
cmp
int3
test
adc
push
pop
xchg
pusha
inc
ja
scas
aas
repnz
mov
pop
shlb
pop
enter
xchg
sbb
dec
andb
shl
movl
jp
lahf
iret
outsb
jne
lds
rclb
sbbb
mov
fadd
sub
pushf
ret
add
cmp
inc
mov
push
loope
xchg
xchg
dec
dec
mov
int
test
fsubl
sbb
add
fisubl
hlt
xchg
mov
mov
nop
or
adc
pop
xchg
out
lahf
pusha
dec
dec
sbb
or
dec
sub
push
cld
push
cmp
inc
push
std
cli
stos
push
xlat
push
dec
stos
cld
xchg
mov
mov
and
pop
mov
sbb
sti
push
mov
sarb
aas
pop
mov
pusha
sub
mov
imul
enter
cmpsl
mov
data16
scas
and
add
movsb
int3
jb
movb
inc
popa
aas
ret
xchg
sbb
iret
sbb
inc
xorb
and
sbb
jge
loop
out
or
pop
test
jg
xchg
std
jecxz
imul
add
jb
ss
jl
mov
jmp
daa
fnstenv
mov
jmp
sub
xor
mov
push
sub
lret
xchg
push
mov
das
mov
cmpsl
hlt
int
aas
lds
lahf
pop
add
cmp
xchg
test
xchg
int
pop
repz
jecxz
xchg
lret
aaa
lahf
ja
movsb
push
xchg
int
adc
xor
cmp
adc
jno
dec
mov
data16
call
bound
mov
ret
mov
ja
div
lods
shrl
mov
mov
mov
in
xor
fwait
jge
scas
fnstcw
jl
add
push
loopne
cmc
in
dec
inc
xchg
lods
lock
and
clc
fimuls
loopne
mov
daa
pop
mov
jp
lods
adc
lahf
aas
pushf
jecxz
cltd
lock
add
xor
and
cmp
lahf
cmc
push
adc
dec
mov
cmpsl
in
lock
sbb
jo
xchg
std
adc
jo
xor
stos
mov
lock
loopne
int3
jo
push
xchg
int
cmc
or
js
daa
scas
mov
xchg
lods
enter
pop
push
mov
gs
xchg
xchg
dec
xor
or
fs
fadds
mov
jne
xor
sub
in
mov
sbb
decl
daa
xchg
repz
mov
push
sub
jns
ficoml
jecxz
cmp
fidivs
test
das
mov
movsl
movsb
fnstcw
test
ret
push
add
loop
xor
xchg
jb
mov
dec
roll
sarb
outsl
lret
int3
mov
loopne
sub
daa
xchg
add
xchg
xor
sub
add
cmc
add
xchg
xor
or
movsb
xor
add
testb
ja
repnz
sti
jnp
ja
sub
push
pop
es
test
stc
push
test
push
aam
jmp
jne
cltd
fsubrl
and
lods
and
mov
jne
pop
push
pushl
cmc
cmp
mov
dec
subl
pusha
cwtl
mov
mul
mov
ficoms
cmpsl
pop
jp
hlt
dec
sub
xor
jns
lret
movsl
lea
or
mov
loop
mov
daa
sub
clc
movsb
std
mov
mov
out
xchg
add
cmp
ret
leave
xor
callw
and
add
mov
jnp
inc
xchg
mov
mov
outsb
das
lods
xchg
enter
ficoml
ljmp
into
push
nop
push
loopw
jne
or
mov
cmp
js
sbb
adc
arpl
cmp
jmp
adc
or
pusha
lea
in
mov
mov
mov
push
inc
mov
gs
comiss
out
mov
iret
push
mov
and
mov
dec
loopne
inc
cmp
pop
push
and
adc
sbb
ljmp
push
shrl
test
adc
xor
mov
dec
enter
imul
mov
arpl
pop
je
rclb
mull
pop
nop
push
xor
sub
pop
jno
ret
fcoms
or
or
scas
dec
divb
push
cmp
cmpsb
sub
push
popa
inc
lock
mov
leave
inc
ficompl
dec
sbb
jmp
push
cmp
pop
test
mov
jne
test
lret
leave
fs
aaa
sarl
test
dec
out
cmc
sub
jle
call
and
cmp
dec
inc
cli
shlb
int
fs
xorl
dec
fstl
adc
and
les
push
lock
and
mov
sarb
push
sbb
daa
into
test
jl
ret
shrb
arpl
mov
cmpl
pop
push
mov
int
jae
mov
adc
dec
jne
xor
js
lea
sub
int3
xor
mov
pop
cmp
lcall
loop
xor
pop
movsb
jb
dec
cltd
wbinvd
fdivr
cmp
sti
lea
incl
mov
jmp
mull
fisubl
dec
stos
icebp
ret
mov
mov
mov
push
aam
iret
out
repz
int
pop
adc
or
dec
pop
dec
pop
mov
arpl
cmp
xor
push
mov
loop
aaa
sub
cli
gs
or
sub
in
cli
mov
fwait
roll
push
push
inc
dec
pop
rol
push
inc
in
in
outsl
mov
pop
js
sbb
addr16
mov
and
movsl
inc
nop
xchg
stos
adc
cmpsl
cmp
pop
shr
or
and
out
jb
mov
dec
ficomps
pusha
mov
jo
sbb
mov
sahf
ljmp
push
rcl
lret
popaw
test
or
dec
outsb
mov
pop
adc
daa
add
test
sbb
push
sbb
adc
lock
inc
xchg
fwait
rclb
loope
and
push
testl
jbe
mov
addr16
cmp
cmpsb
push
stc
aaa
pop
xchg
lea
imul
and
mov
iret
mov
dec
jmp
mov
mov
xchg
push
mov
inc
adc
aam
xchg
and
inc
addr16
icebp
mov
push
jnp
out
mov
cwtl
xor
lock
sar
and
cmpsl
mov
inc
add
xchg
sbbl
int3
adc
pusha
mov
cltd
popa
jmp
movsl
insb
fsubl
mov
sbb
inc
adc
mov
sub
aad
into
jmp
inc
sub
subl
pop
jl
jl
sbb
in
cwtl
jne
sarl
and
iret
jbe
addr16
mov
aad
addr16
test
cld
pushf
and
lret
ljmp
xor
stos
int3
fstpt
outsb
loopne
mov
frstor
sbb
je
clc
sub
jns
mov
adc
pop
xchg
or
fwait
cmpsl
aad
loop
aam
add
and
aad
cmc
dec
movl
sbb
mov
inc
mov
aam
mov
pop
mov
sti
ret
int3
loop
push
fistl
pop
mov
push
les
cld
inc
jns
jge
in
xchg
xor
lock
mov
int
repnz
repz
in
popa
test
jmp
mov
ds
cmp
add
inc
inc
roll
test
les
pop
out
sub
mov
daa
xor
lea
pop
xlat
push
movsl
xchg
les
rolb
mov
cmp
mov
jecxz
mov
rcl
iret
mov
addr16
aas
add
sbb
popf
jns
or
cli
push
xchg
imul
sub
fcmovnu
push
xchg
push
test
and
lret
cwtl
sub
int
mov
imul
arpl
dec
lcall
testl
aam
jns
pop
adc
sbb
int3
mov
cmp
insl
push
idivl
jmp
dec
jno
loopne
mov
push
jecxz
in
aaa
dec
push
scas
xchg
icebp
pop
bound
rorl
cld
shlb
xchg
sub
movsl
insl
into
sub
addr16
fildl
dec
out
mov
out
xor
sbb
lret
jmp
ds
ljmp
sbb
push
jmp
lds
aaa
mov
xor
fmull
and
sub
into
pusha
fidivrl
cs
adc
inc
jne
add
xor
mov
fbstp
mov
dec
stos
lcall
int
test
in
and
or
sub
and
int
imul
imul
jp
mov
and
imull
xor
adc
cmp
xor
hlt
jmp
loop
cmp
push
mov
loopne
inc
adc
imul
ficoml
cmp
add
xchg
cmp
int
stos
mov
out
jnp
cmp
loop
cmp
and
pop
inc
push
sahf
pop
ficomps
xlat
gs
xor
add
imul
fwait
jp
cmp
cltd
stc
xlat
scas
movsb
mov
sahf
fisubrl
mov
jmp
mov
in
cmp
xchg
sbb
lods
inc
sbb
cmp
into
sub
mov
test
nop
mov
sbb
push
adc
repz
scas
cs
or
mov
push
adc
sbb
jg
shrl
std
or
jge
and
out
pushf
push
xchg
jl
loope
mov
in
pop
ficoms
push
add
jo
insb
pusha
cwtl
xchg
jo
out
dec
shll
movb
inc
dec
mov
data16
pusha
je
lds
xor
dec
push
pop
lret
clc
incb
in
lds
pop
push
scas
out
adc
xor
fldcw
cs
stos
xchg
jle
xchg
and
ds
jns
sub
test
inc
dec
loop
shrl
fwait
pop
in
xor
xchg
sub
imul
inc
lods
dec
ret
and
xchg
jne
dec
insl
or
ljmp
in
dec
jne
repz
mov
shll
xchg
subb
xor
jb
dec
leave
dec
test
cmp
pop
mull
push
jge
add
cmpl
mov
inc
scas
dec
sub
push
or
dec
enter
inc
pop
add
loope
cmp
push
cmp
mov
addr16
insb
out
shrb
dec
test
das
hlt
ja
mov
mov
jno
sti
cltd
adc
sbb
fdivrp
dec
popl
out
fcmovb
iret
dec
in
andb
addr16
mov
jnp
pop
loopw
mov
mov
popf
dec
rol
dec
mov
mov
outsb
into
mov
fiaddl
mov
mov
push
lods
lods
jg
mov
xor
pushf
lock
mov
in
clc
mov
sbb
xchg
and
inc
mov
cld
andl
push
xchg
call
inc
test
mov
jmp
mov
mov
pushf
add
pop
and
adc
push
add
xchg
mov
shrb
mull
test
sbb
popf
sbb
mov
adc
dec
push
sbb
adcl
ffreep
stos
in
add
test
cmp
enter
aad
jmp
adc
xor
mov
xchg
or
out
pop
jnp
mov
mov
cli
sub
cmp
pop
adc
pop
mov
dec
ret
add
dec
iret
cmp
addr16
sbb
and
dec
xchg
scas
test
jno
movsb
jmp
cltd
aaa
js
pop
pop
dec
pop
sub
rorl
repz
movsl
sub
ljmp
adc
stc
movd
rcl
mov
popa
out
fdivs
mov
outsb
call
into
fs
in
or
hlt
add
les
jge
je
inc
jl
popa
add
test
int
cmp
leave
xchg
repz
stc
outsl
mov
jge
mov
movsb
sbb
mov
scas
lea
jne
push
and
dec
dec
mov
mov
mov
rcl
rsqrtps
or
jno
and
jg
mov
push
loope
lock
or
leave
push
imul
repnz
pop
jae
mov
outsl
jnp
jae,pn
xchg
jg
mov
dec
mov
xchg
test
push
call
gs
jl
inc
mov
gs
jp
call
inc
jmp
xchg
sahf
jge
lods
rcll
jg
ret
scas
fistl
std
jbe
es
mov
xchg
movsl
jmp
dec
lcall
clc
pop
xchg
dec
mov
in
push
push
fs
sti
xchg
adc
cmp
xor
sub
jg
jo
cmp
stos
push
lret
imul
aam
jne
mov
push
in
ficomps
je
lea
es
jp
ret
jl
xor
xchg
push
fists
inc
add
int
out
ds
sbb
fildll
fsubrs
sub
sbb
ret
lods
xchg
in
dec
add
rcl
sarb
cmp
jl
cmp
or
pop
repz
cmp
test
lahf
lea
jne
loopne
push
dec
leave
dec
lds
pusha
dec
inc
enter
iret
cld
sahf
mov
es
repz
fisttpll
sbb
mov
iret
sbb
xchg
add
and
sbb
mov
pop
loope
mov
or
jae
xchg
movsl
dec
sbb
xchg
xchg
dec
inc
adc
mov
or
je
insl
and
dec
scas
frstor
dec
cwtl
les
and
lea
sub
filds
sbb
loop
daa
mov
arpl
mov
jg
mov
pop
loope
mov
pop
fcompl
das
call
daa
jb
cmp
fs
jecxz
pop
pop
fcmovnbe
ljmp
xchg
or
sbb
lret
in
sti
push
and
pop
xchg
out
mov
rcrl
dec
xchg
ret
pop
cmp
push
test
inc
insl
sub
sbb
fsubl
sub
mov
lcall
outsl
fcoml
loop
cltd
or
push
xor
push
lcall
add
mov
and
sub
shlb
add
cmpsb
jle
mov
push
imul
sbb
lock
mov
lahf
leave
lds
out
scas
rcll
ja
ds
cld
and
rcl
ret
sbb
pushf
shl
inc
jmp
hlt
ljmp
aad
dec
imul
inc
or
jp
cld
sarl
jne
dec
sbb
dec
xchg
out
jg
sbb
cld
iret
ljmp
mov
test
sub
aaa
sbb
cmp
out
ja
sbb
xor
scas
push
pop
jmp
movsl
shll
outsb
subl
pop
lea
xabort
bound
shrb
mov
pusha
adc
sahf
cwtl
je
mov
or
sbb
or
jmp
ficompl
mov
cwtl
sbb
dec
ss
dec
pusha
std
add
push
jbe
mov
push
inc
mov
mov
mov
sub
cwtl
loop
addb
mov
mov
stos
jae
adc
jmp
test
jne
or
add
add
adc
xor
imul
adc
sbb
or
cmp
push
xor
adc
faddp
mov
fnstsw
fiadds
cltd
adc
insb
pop
mov
xchg
xor
popf
xlat
test
lods
outsb
sbb
call
xchg
das
dec
call
xchg
adc
sbb
std
fwait
sbb
cmc
push
insb
cmp
or
pusha
imul
cmp
cmp
lahf
mov
paddusb
cmpsl
push
cmp
loop
je
mov
mov
jb
xor
mov
add
adc
lods
loopne
decb
pop
mov
mov
sbb
xchg
pushf
loop
dec
sub
aaa
bound
ss
dec
out
adcb
pop
jmp
into
test
inc
adc
mov
lahf
cmp
dec
call
jl
out
leave
mov
mov
sub
aaa
push
clc
outsl
bound
xchg
call
fdivr
hlt
out
daa
out
jmp
mov
dec
test
outsb
sbb
imul
inc
in
mov
lods
int
sub
movsl
xor
popa
jl
xchg
lock
mov
inc
cwtl
sbbb
repnz
shrb
fistpll
mov
test
gs
test
mov
repnz
inc
cmp
jnp
lea
cmp
aam
xor
jbe
mov
test
mov
ja
roll
imul
xchg
xor
adc
insl
pop
mov
sbb
push
gs
pop
je
out
adcb
fs
call
mov
js
idivb
add
inc
mov
and
arpl
sbbl
cmp
sub
cmp
cmp
and
in
dec
rcrl
jb
cmp
push
add
stc
xor
inc
or
jg
pop
enter
mov
leave
sbb
add
mov
xchg
sbb
jb
cmc
mov
mov
out
aad
mov
out
pushf
lret
jg
ret
outsb
mov
cmp
aam
mov
jmp
add
insl
clc
jae
sbb
or
loope
or
stc
dec
cli
std
cmp
xchg
ds
sub
dec
pop
mov
faddl
mov
outsb
push
jns
inc
or
adc
incl
mov
imul
dec
mov
jecxz
sub
cmpps
and
insb
pop
rorl
mov
mov
and
and
movl
int3
stos
lea
cmpsl
je
cmpb
cmp
sti
push
or
mov
stc
fst
call
push
adc
fldl
je
dec
int3
lds
fdivrl
push
ret
fnstenv
insb
dec
push
pop
add
xor
shlb
mov
xlat
inc
inc
pop
adc
arpl
outsb
mov
push
push
arpl
out
sub
dec
pop
and
aaa
push
out
sbb
pop
in
lcall
cmp
dec
out
cmp
adc
sub
mov
and
mov
bound
dec
lret
pop
mov
or
mov
pop
sub
inc
aas
cmp
mov
xchg
cmp
xor
push
mov
shll
mov
xor
out
cmc
aam
gs
in
enter
dec
mov
pop
sarb
lea
mov
mulb
sbb
xchg
lcall
xorb
sahf
loop
mov
lret
mov
dec
testl
sbb
push
xchg
mov
or
repnz
inc
mov
cmp
sbb
pop
mov
adc
pop
jp
insl
add
cs
lods
test
adc
int3
xchg
stos
mov
dec
in
jmp
testb
pop
inc
add
cmpsb
incl
dec
psllq
xor
and
sub
clc
lret
imul
movsb
push
inc
inc
sahf
fisubrl
push
pushf
sahf
mov
outsl
bound
std
or
jg
hlt
cmp
and
imul
cmc
int
test
cmp
cwtl
lahf
nopl
adc
inc
jmp
jmp
repnz
cli
lcall
or
adc
add
dec
ftst
push
xor
cmp
nop
leave
mov
pcmpeqd
inc
mov
insl
roll
lods
cmp
nop
insb
pushf
mov
mov
lcall
mulb
scas
imul
loop
mov
pop
inc
xchg
adc
push
insb
test
fbld
insb
mov
adc
and
xor
adc
dec
stos
stc
or
fbld
jae
cltd
and
testb
decl
and
in
aas
or
loop
shll
sahf
xchg
adc
out
popa
xchg
xor
rorb
ret
jle
fadd
fisttpl
decb
int
push
lret
fwait
add
xor
daa
adc
testb
dec
outsl
cli
cmc
cmpsl
mov
add
outsb
lcall
sahf
fs
inc
xor
inc
dec
cmp
dec
cltd
cmc
adc
xchg
loope
mov
add
fwait
adc
gs
gs
shl
cmpsl
adc
cmp
cmpsb
dec
push
scas
xchg
and
sub
in
popl
sbb
aaa
fcomps
fimull
fsubrl
hlt
cltd
sub
rolb
cmp
xor
out
repz
push
je
adc
mov
pusha
icebp
cmp
xchg
fbld
dec
mov
cli
mov
jp
fnstsw
cmpsl
adc
sarb
scas
jmp
je
mov
pop
lea
les
ljmp
lret
jbe
xor
push
bound
fcompl
rorl
adc
push
inc
or
testl
cmp
inc
sahf
jg
xchg
push
mov
cmp
clc
inc
jp
mov
addr16
iret
hlt
dec
ss
xchg
fstps
mov
inc
pop
jo
cli
das
xchg
jno
clc
scas
lret
mov
loopne
mov
call
and
adcl
leave
mov
stc
outsb
sahf
pop
push
xchg
dec
mov
fcompl
leave
cmpsl
js
push
pop
test
ret
loop
loope
iret
test
push
mov
es
cmp
jbe
xor
push
cmp
scas
push
lods
ret
adc
movsl
push
cmp
xchg
mov
adcl
adc
inc
or
inc
fstps
jmp
neg
pop
imul
imul
imul
enter
pop
xor
xorb
or
jge
add
push
mov
gs
xchg
mov
insl
cmp
inc
push
mov
jbe
dec
adc
dec
in
pop
push
xchg
cli
mov
push
out
cmp
in
dec
pop
adc
jp
jg
out
push
stos
out
push
call
mov
sahf
sub
xor
mov
leave
mov
fildll
mov
dec
cmp
fldenv
sub
lahf
mov
mov
dec
imul
repnz
push
repz
pop
lret
into
mov
adc
fs
mov
or
fdivrl
or
roll
test
push
add
cmp
mov
lods
hlt
jae
cmp
inc
and
outsb
sub
xchg
popf
jo
mov
fstp
arpl
xchg
fcompl
jae
fsubs
ljmp
ss
xchg
jno
add
dec
hlt
test
mov
bound
sub
aaa
gs
jo
dec
jb
mov
adc
inc
in
jnp
js
mov
ljmp
call
aas
lret
mov
les
ss
mov
jle
jne
mov
push
add
hlt
in
daa
ret
or
sbbl
aaa
je
mov
out
adc
push
ja
xchg
pop
pop
leave
movsb
loopne
fmuls
movsl
push
and
sbb
dec
arpl
mov
inc
stos
bound
cmp
and
fs
jns
ret
dec
mov
in
rorl
pushf
mov
cmovne
and
movsl
roll
sub
roll
xchg
push
pop
and
or
mov
mov
sahf
mov
jmp
in
add
ss
push
in
push
xchg
xchg
imul
ror
insl
sub
push
sarb
push
or
push
mov
cmp
insb
iret
cwtl
mov
dec
jbe
push
call
into
and
dec
jecxz,pn
cmp
pusha
fbstp
pop
xlat
clc
in
out
or
icebp
lret
pop
and
jne
xchg
and
push
add
push
int
negl
aaa
in
aas
jecxz
push
mov
mov
mov
xor
add
fcompp
lods
mov
test
pop
fs
das
ljmp
xchg
mov
adc
jo
test
sar
dec
pop
mov
pushf
imul
lds
add
lods
pusha
cmp
inc
jg
je
push
daa
ja
mov
cmp
fcos
aad
js
xchg
jb
mov
cmpsb
and
xchg
add
jp
mov
out
imul
xchg
lret
add
scas
push
pusha
cmp
xchg
jbe
ret
fisubs
fistpll
or
fiadds
push
fadd
lahf
pop
add
test
dec
cwtl
xchg
dec
mov
das
mov
sbb
jae
mov
ss
outsb
pop
mov
ja
mov
in
pop
sub
out
push
cmp
add
int
inc
mov
push
xchg
fstp
fildl
pushf
ret
rorl
add
arpl
fdivrl
mov
test
sub
inc
dec
xchg
add
jecxz
mov
jae
mov
mov
dec
cmp
rolb
inc
lods
pop
xlat
cmp
ss
ja
mov
mov
fimuls
pop
insb
ds
scas
xor
sub
mov
add
loop
in
xchg
push
les
out
rorb
data16
pop
dec
adc
bound
shl
mov
js
js
adc
push
ret
out
xlat
lea
jae
push
xchg
stc
push
call
dec
push
mov
lods
nop
xchg
test
sub
shrb
lods
jno
xchg
imul
cltd
push
aam
pop
out
punpckhdq
sti
lret
roll
mov
or
push
repnz
lea
repz
cmp
jmp
and
jmp
inc
fldcw
add
stc
in
mov
adc
cmp
jp
in
pop
jecxz
sahf
adc
lahf
sbb
popa
mov
imul
lds
cmp
imull
mov
sbbl
fnstsw
fmull
inc
test
push
jns
addr16
loop
sub
clc
jae
ss
pop
out
dec
jb
iret
mov
or
xor
loop
mov
jp
fstpt
int
sbb
adc
sbbb
jae
nop
sub
lock
cmpsl
pushf
adc
sbb
test
add
xorl
cmp
int
jno
loope
gs
jae
jae
lahf
push
arpl
fnsave
push
xor
gs
test
or
mov
dec
shrb
ljmp
std
xchg
pop
mov
add
test
push
call
repz
and
les
lret
cmp
out
pop
popl
xchg
bound
mov
cmp
jno
outsb
lock
fstl
adc
jge
fidivs
jne
repnz
hlt
push
test
add
lods
pop
fildl
lods
adc
and
cli
mov
jp
int
fcmove
mov
inc
jmp
fsts
inc
popa
stos
imul
scas
es
or
xchg
mov
lods
int3
ja
push
fwait
jmp
cwtl
out
gs
int
adc
movsb
jne
das
pusha
sub
mov
test
mov
jne
mov
mov
arpl
mov
mov
xchg
cmp
adc
jl
cwtl
push
dec
movsb
cli
das
cmp
ljmp
es
in
xorl
cmp
dec
cli
in
bound
in
pop
mov
pop
push
xchg
aas
les
in
adc
gs
ret
js
or
in
pop
faddl
repnz
inc
dec
add
dec
ss
inc
xchg
or
mov
sbb
sub
inc
jo
lods
fstl
aam
mov
lret
xchg
jmp
cmp
fwait
scas
ljmp
jns
dec
mov
in
int
sub
push
and
fmull
les
out
or
popl
sbb
setbe
pop
mov
xor
shlb
stos
ret
es
xchg
insl
sbb
pop
push
jno
mov
clc
mov
and
adc
mov
push
scas
jae
outsl
push
in
adc
fsub
jno
stc
push
jle
stc
push
idiv
es
rorb
inc
and
repnz
adc
int3
ret
cmp
xor
in
mov
mov
testl
and
clc
scas
das
mov
cwtl
jp
xor
cmp
in
jno
pop
repz
xor
push
scas
pop
cmp
and
lods
and
mov
fisubrl
cmp
sar
inc
jg
fdivrl
rcr
push
nop
adc
nop
add
seto
xchg
xchg
mov
or
lods
or
ret
mov
mov
stos
add
xchg
inc
push
nop
pop
xor
lods
push
mov
jnp
cs
xchg
pop
repnz
cmc
jecxz
or
insl
mov
outsb
jns
jge
push
std
adc
test
add
push
jne
shrl
jns
sbb
add
daa
cmp
cmp
jmp
shld
jns
xor
and
pop
fwait
enter
mov
mov
test
popf
sub
gs
test
into
or
push
push
push
inc
out
jg
clc
out
sub
cmpsl
shl
mov
popa
sbb
push
nop
xchg
adc
test
andl
adc
movl
xchg
inc
int
mov
or
addr16
jecxz
cmp
push
inc
rcl
es
loope
stos
jl
dec
mov
cltd
or
push
and
or
jecxz
push
mov
out
adc
nop
inc
sarb
es
mov
cmp
xor
ljmp
and
xchg
js
jl
rclb
mov
fdivr
mov
lods
scas
stos
sub
sbb
addr16
inc
fs
xor
push
sbb
pop
int3
mov
cmpsl
lret
jmp
addl
mov
lret
lock
lret
push
dec
cwtl
fldl
sbb
inc
mov
jno
cmpsb
mov
rorl
sbb
movsl
adc
mov
test
cli
test
jo
rcll
in
mov
lds
call
sbb
or
lds
ficomps
je
mov
movsb
cmpsl
rorb
inc
data16
and
sbb
xchg
dec
fiadds
add
outsl
push
and
cmp
in
out
xor
orl
sbb
lahf
mov
push
into
stos
fiadds
inc
fmul
inc
xrelease
dec
aaa
inc
ss
lret
rorb
test
add
pop
dec
pusha
or
xor
outsb
out
xchg
in
lahf
lahf
aad
lahf
adc
sbb
pop
push
jo
push
lea
sub
cmp
push
adc
mov
jae
inc
mov
sub
lcall
orb
test
cmp
fstpt
jge
in
pop
das
push
icebp
and
arpl
xchg
push
enter
fs
imulb
xor
in
movsl
enter
in
mov
std
fildl
push
mov
mov
mov
sub
pop
pop
inc
and
sbb
xor
sbb
adc
cmp
xchg
loopne
hlt
fsubp
mov
aam
push
movlhps
sub
xor
push
add
les
jle
out
inc
mov
pop
jne
cmp
mov
lcall
outsl
ret
mov
cwtl
push
add
movsb
arpl
aam
mov
sbb
call
cmp
cmpsb
insb
jge
data16
lock
sub
xlat
out
push
xchg
cmp
daa
dec
dec
cmp
mov
sub
push
fcompl
sbb
lods
pop
and
leave
and
pushf
addr16
sti
cmp
mov
jge
lahf
sbb
jno
jns
movsl
lods
es
movsb
cmp
push
aas
push
inc
into
sbb
and
and
and
sub
add
call
mov
in
sbb
je
sub
loop
ret
add
and
or
jns
iret
out
fwait
in
pop
aaa
xchg
sbb
jle
ja
outsl
ds
jo
sub
and
cmp
stos
and
pop
push
dec
aam
add
jnp
hlt
mov
mov
fiadds
xor
mov
sbbl
lret
jne
sub
jno
jmp
stos
cld
mov
out
or
in
aad
pop
lahf
test
insl
inc
test
out
out
aam
xor
mov
pop
in
cmp
lret
jbe
fstpt
popf
inc
ficomps
es
nop
stos
and
xor
add
xor
std
cmpsb
mov
pop
lods
cmp
sti
fwait
adc
adc
mov
pop
adc
inc
sbb
and
cli
leave
mov
dec
sub
clc
pop
lock
ror
bound
jp
mov
mov
sarl
ljmp
add
pop
cld
sub
or
mov
mov
or
out
stos
iret
bound
dec
or
and
hlt
ficoms
aam
inc
lds
sub
rolb
dec
bound
mov
xor
sbb
jl
lods
cmp
sub
push
stos
dec
pop
lahf
mov
jl
std
mov
repnz
imul
iret
mov
inc
cwtl
mov
add
jmp
ljmp
loopne
mov
jae
fcoml
fiaddl
dec
out
shll
mov
jb
addl
cmc
push
xchg
jecxz
sbb
cmpsb
out
std
mov
insb
stos
mov
and
pop
aaa
popa
das
repnz
xchg
iret
out
les
pop
jo
imul
jge
xchg
jo
and
jbe
mov
mov
xor
mov
les
into
int
in
out
push
pop
outsl
adc
adc
out
nop
and
pop
adc
or
outsl
clc
mov
sbb
or
mov
cmp
pop
rorb
ret
or
lcall
mov
sbb
pushl
lods
xor
dec
jp
jecxz
repz
popf
testb
insb
shr
ficoms
mov
mov
mov
loope
pusha
or
push
ret
ja
xor
cmp
xchg
jae
dec
cmpl
dec
mov
lahf
aas
pop
mov
jmp
jmp
aam
xchg
popa
movsl
scas
popf
dec
push
lcall
mov
pop
inc
out
pop
cld
push
jne
push
cmp
mov
insb
push
push
popa
mov
insb
xchg
and
mov
fwait
in
adc
adc
inc
iret
data16
dec
sub
and
sub
sub
imul
mov
inc
and
dec
mov
cmp
fwait
pop
fstp
xchg
icebp
or
push
jp
dec
jne,pt
fwait
add
stos
cmpb
loop
leave
push
xor
or
dec
sbb
dec
stos
mov
xchg
lods
rorb
dec
nop
xchg
mov
les
fdivs
cltd
sbbb
mov
jge
in
fadds
mov
pop
fbld
mov
xor
cs
scas
loop
pop
nop
imul
rorb
arpl
mov
cmp
mov
das
cmpsl
roll
repnz
mov
test
gs
negb
pop
inc
movsb
sub
addr16
mov
out
movsb
fiadds
jle
mov
adc
shll
iret
jnp
lods
aaa
cld
fwait
sbb
je
shlb
cmpsb
repz
aam
sbb
sti
data16
mov
push
cmp
cmpsb
repz
mov
mov
xchg
mov
or
int3
gs
fsub
cmpsb
jo
in
aad
sbb
ja
push
movsl
mov
xor
popf
out
nop
pop
xchg
loope
sahf
sub
mul
psrlw
pop
xor
jle
clc
scas
sbb
ret
adc
xor
lret
fisttpl
xchg
out
pushf
stos
inc
repz
lcall
adc
lock
xchg
add
xor
mov
cmc
sbb
cmp
pop
rol
mov
adc
mov
xchg
pop
cmp
loope
cmp
push
or
enter
mov
mov
jb
bound
xchg
mov
stos
test
adc
out
aad
je
popf
push
mov
je
sub
jg
mov
xorl
mov
fcomps
pop
ds
sbb
xchg
inc
js
add
sbb
mov
lock
mov
xchg
rcl
lea
xlat
jno
push
out
ret
ds
mov
jne
sub
cmp
xlat
mov
pop
mov
arpl
ffreep
jno
mov
mov
pop
mov
mov
aas
int
lret
xor
shr
dec
jmp
pop
iret
lret
push
jmp
adc
pop
mov
xchg
mov
or
adc
add
mov
pop
nop
ja
mov
and
adc
repz
fiadds
addr16
sbb
out
xchg
sub
idivl
jecxz
add
mov
fstpl
lds
mov
or
fldt
push
jmp
xor
xchg
lods
push
insl
push
pop
pop
add
sbb
mov
push
mov
cli
int3
cmpsb
divb
jge
mov
out
lret
lods
mov
dec
inc
arpl
test
lret
jmp
pop
das
mov
std
mov
or
or
mov
jl
xchg
fsqrt
jbe
cs
mov
ja
push
mov
fs
add
test
xor
sarl
adc
xor
mov
push
or
mov
jecxz
jb
pop
in
fs
inc
inc
inc
leave
xor
xlat
dec
sbb
xor
push
mov
pop
stos
test
sarb
decl
push
inc
xor
dec
es
push
sub
mov
xchg
fimull
dec
scas
jmp
idiv
xor
push
push
inc
cltd
idivb
sub
add
cmp
jo
aaa
xlat
das
jl
add
sti
dec
push
test
pop
and
je
mov
dec
fidivrs
test
outsl
aaa
dec
inc
and
pop
ds
clc
mov
cmp
divl
xor
cld
movl
jnp
xchg
fmuls
mov
iret
ss
loop
inc
ret
movsl
adc
fcmovnb
aaa
sub
out
cmp
cmpsl
out
cwtl
cmp
fs
pop
jae
insl
xlat
repnz
ret
cmpsl
xchg
jb
jbe
pop
mov
outsl
aaa
jne
cmp
ret
jns
into
test
xchg
push
cmpb
or
mov
pop
sub
fimull
inc
or
mov
mov
fnstcw
clc
lods
and
loope
call
sub
out
jge
pushl
and
lock
add
and
jge
jp
aaa
xor
movsl
lret
dec
in
ret
mov
test
mov
es
aaa
xor
inc
pusha
push
push
and
stc
imul
out
stc
xor
movsl
repnz
out
or
add
xchg
scas
cmp
gs
cmp
int
and
loopne
scas
insl
jp
insb
mulb
or
dec
dec
cmpsl
add
inc
cmpl
sub
jns
mov
std
test
mov
test
pop
jp
lds
pop
xor
mov
popf
jmp
jnp
std
xor
fbstp
loopne
xor
subb
rorl
add
add
ja
inc
mov
dec
sub
push
inc
popa
das
and
cwtl
scas
push
mov
xchg
mov
leave
in
fnsave
loopne
je
cmc
popf
std
pop
insb
add
pop
mov
cmpsb
pop
es
pop
xchg
decb
add
inc
fstps
xchg
adc
pop
push
ljmp
in
imul
inc
addr16
sub
jg
jp
rcr
add
sar
repz
mov
aam
popf
pop
and
pop
mov
xor
mov
loop
cmp
insb
or
cmp
and
sbb
clc
iret
arpl
cmp
rcrb
mov
jmp
fsubr
jmp
mov
ret
or
add
jg
into
xor
pushf
test
inc
sub
mov
int
mov
dec
lock
push
popa
pop
popf
mov
outsl
fdivs
fucomp
scas
jmp
repnz
arpl
cmp
xor
and
mov
in
adc
pop
xor
fdivl
push
test
cmp
sbb
jae
jne
xor
sahf
cmp
or
stos
mov
out
sbb
bound
pop
in
xor
pop
shlb
adc
out
scas
push
xchg
cmp
test
xchg
pop
sahf
dec
fdivp
dec
xchg
clc
xchg
sub
outsb
cmpsb
pshufw
out
in
imul
daa
in
jl
and
pop
jle
xor
sbb
adc
ret
lahf
jg
add
loope
outsb
push
rorl
and
push
rolb
shlb
sbb
push
addr16
shrb
mov
ret
dec
dec
jg
adc
jae
sbb
cmp
pop
mov
ja
imul
je
push
xor
mov
test
lods
test
scas
shlb
xchg
xor
cwtl
cli
aam
cmpsl
pop
pop
andb
pop
and
das
or
je
and
int
shlb
or
test
in
and
pop
dec
and
lds
movsb
pop
push
sbb
repz
jecxz
fildll
arpl
sub
jmp
xor
pop
sub
test
fnstsw
push
sub
int
inc
arpl
cmp
outsl
xchg
xor
mov
sbb
ss
pop
pop
mov
cmp
clc
ja
and
stos
xor
in
test
push
addb
pushf
dec
sub
adc
imul
out
jl,pt
jae
inc
shl
xor
addr16
shll
sbb
test
pop
stc
cld
add
movsl
sbb
sub
test
jge
sti
dec
jb
adc
add
aas
sbbb
jle
pop
inc
xor
lds
cmp
cli
mov
fcmovb
mov
bound
mov
add
lds
stos
in
loopne
fidivl
repnz
je
outsl
aad
and
shrb
xchg
sti
mov
data16
int3
ja
cmpsb
xor
lret
jno
lea
imul
inc
test
mov
ja
loop
leave
cli
xor
xorl
and
orl
mov
iret
and
lock
imul
jge
out
clc
fistpl
jns
inc
dec
pop
jae
jo
adc
pop
pop
or
mov
out
aam
int
mov
jge
adc
xchg
pop
ja
mov
jb
pusha
fists
mov
or
xchg
das
popf
ret
xchg
movsb
add
jmp
and
fldl
fcoml
addr16
xlat
jmp
cmp
jo
pop
add
data16
dec
jle
je
or
pop
leave
mov
mov
cmp
into
test
or
stos
iret
daa
andl
xchg
pop
les
nop
jb
and
lea
bound
xchg
lock
jne
out
cmpsl
out
movsl
mov
test
mov
es
mov
dec
mov
dec
int3
test
loopne
dec
jae
insb
aad
fs
clc
into
add
aas
fnstsw
jg
mov
mov
mov
fdivs
cli
cmc
mov
jbe
aaa
or
dec
jbe
xchg
stos
jnp
xchg
addr16
lret
xor
outsb
adc
ljmp
rcrb
jbe
mov
sbb
ficompl
mov
hlt
dec
or
add
je
mov
jo
mov
xchg
pop
cmp
and
mov
add
mov
ja
stos
pop
xchg
push
data16
aaa
push
ds
xchg
push
sub
shlb
test
stos
xor
jp
push
scas
out
fiaddl
jno
jmp
fldl
xorb
pop
into
push
call
jns
sbb
inc
xchg
sub
lods
stos
aad
loop
outsl
jmp
andb
jo
in
loop
sbb
out
or
shrl
lahf
cld
or
sbb
mov
stc
mov
test
lea
jne
or
mov
cmp
add
js
jne
les
mov
das
mov
popf
or
jno
pop
fdivr
es
cmpb
cmp
mov
daa
arpl
xor
test
insb
ds
insb
sbb
xor
or
push
cld
fbstp
and
cmp
sarl
mov
fcomps
and
cmp
mov
or
mov
data16
cmp
jg
mov
dec
scas
out
xor
xchg
dec
pop
cli
and
sbb
scas
aam
pop
xchg
sub
test
mov
ds
stos
push
es
insb
xor
sub
adc
add
fidivrl
jns
cmp
lods
mov
cmp
sbbl
scas
add
stc
mov
mov
popa
andl
sbb
jb
movsb
mov
adc
mov
lock
sbb
jl
popa
sub
xchg
test
jb
and
add
imul
mov
push
push
xlat
or
orl
out
adc
mov
pop
les
xor
test
or
push
pop
xchg
jecxz
add
cmp
jae
call
mov
cltd
loopne
aam
push
pop
jecxz
dec
xor
adc
sar
inc
xor
mov
lret
addb
xlat
hlt
enter
jle
fsubrp
push
push
rcrl
sbb
push
push
movsb
in
lret
mov
jb
or
cmp
mov
fdivrl
adc
adc
sub
scas
pop
xor
cmp
and
mov
hlt
and
fists
push
or
mov
pop
dec
mov
pop
mov
lahf
and
cmp
jno
mov
dec
shrl
add
jle
mov
mov
mov
ds
stos
xchg
sbb
add
dec
and
push
and
je
rorb
mov
adc
sub
int
les
pop
jb
sub
imull
xchg
int3
mov
out
mov
call
lret
lahf
jmp
cmp
xor
dec
inc
xchg
sbb
push
and
adc
popa
dec
or
mov
and
or
push
ret
sub
xor
pop
mov
push
lea
fwait
cld
sub
mov
fdivp
jle
in
aaa
jecxz
rcll
mov
lret
pop
pop
cli
cmp
xor
jnp
pop
jle
cmp
adc
cmp
mov
mov
push
ret
shrl
jecxz
pushf
add
cltd
xor
iret
sti
pusha
shll
lret
leave
dec
xor
xchg
cli
mov
mov
adc
arpl
dec
leave
adc
and
adc
pop
mov
add
daa
bound
xor
jno
inc
mov
cs
das
xor
or
mov
adc
rep
in
dec
sbb
in
ss
xchg
call
popa
fsubs
add
sahf
mov
jae
fbstp
pusha
sbb
iret
jb
testb
ret
data16
sub
inc
stc
cmp
jp
xor
mov
shll
dec
mov
sub
sub
scas
xchg
or
popa
stos
xchg
and
jo
push
jnp
decl
mov
sub
mull
dec
add
jne
out
adc
imul
add
ret
pop
cmp
adc
insb
or
xor
inc
cmp
jnp
pop
loope
mov
out
or
jb
lcall
or
xchg
or
ds
mov
arpl
jne
push
cmc
inc
out
xor
into
ds
push
lahf
pop
push
xchg
sbb
inc
mov
mov
and
das
movsl
mov
push
or
jo
jae
vmptrst
outsb
jle
clc
fcomi
mov
dec
adc
lods
stos
sub
das
push
lods
arpl
stos
adc
dec
popf
test
sbb
sbb
sub
lea
push
ret
orb
add
int3
dec
inc
cmp
in
in
xchg
add
mov
and
xor
add
les
sbb
add
lret
arpl
push
mov
jbe
dec
add
push
jl
aas
and
push
loope
jge
xor
jnp
repnz
jl
in
test
lret
cli
lods
push
jmp
cli
imul
repz
imul
inc
sbb
inc
xchg
pop
test
lods
mov
inc
daa
imul
jno
movsl
cmc
jp
out
mov
mov
dec
insb
xchg
rorl
add
pop
mov
les
sub
sbb
cmpsb
mov
and
arpl
jno
xlat
sbb
lods
movsb
jne
pop
dec
xchg
pop
sbb
xchg
lcall
cmp
in
fcoms
adc
jg
icebp
stos
rcr
test
xchg
testb
xchg
fstps
or
pop
sarl
mov
pop
stc
loopne
shrl
mov
jb
cld
push
test
ljmp
gs
lahf
dec
lret
js
mov
mov
xchg
stc
push
std
mov
mov
test
sbb
xchg
int3
jnp
mov
pop
repnz
mov
ret
and
add
ja
inc
pushf
jbe
pop
xchg
jle
test
test
xchg
lret
call
fld
lods
icebp
int
roll
xor
gs
jae
push
in
cs
insb
js
mov
xor
lret
adc
mov
mov
jmp
add
push
push
jae
arpl
xor
mov
fnstenv
mov
into
in
xor
test
xchg
pop
push
cld
mov
mov
sub
js
jl
cmp
cmp
sbb
mov
jne
popf
xchg
popa
pop
pop
pusha
mov
std
mov
ret
adc
push
push
fiaddl
rep
and
std
add
stos
inc
jb
in
jo
inc
aam
pop
iret
sbb
ja
jle
mov
sbb
inc
pushw
rcll
inc
jg
cld
cmp
shll
sbb
push
sbb
repz
and
pop
push
jno
add
add
mov
cld
inc
dec
sbb
mov
push
pop
add
add
pop
xor
mov
inc
pop
cmp
mov
cmc
inc
cwtl
fildll
cmc
push
xchg
dec
cld
push
xchg
push
out
test
dec
imul
inc
xchg
inc
pop
lods
push
jle
repnz
or
mov
cs
hlt
and
sbb
clc
lea
imull
scas
xor
ficompl
push
and
leave
xchg
add
lcall
pushf
mov
pop
push
jnp
cmp
jl
stos
outsb
icebp
fisttps
sbb
and
nop
ja
mov
out
inc
dec
call
js
call
fld
addl
push
cmp
and
xchg
sbb
stc
test
push
sub
push
test
xor
fwait
je
jp
lock
mov
insl
cmpsb
jbe
jp
cmp
mov
in
or
and
pop
jbe
js
in
mov
and
sub
ja
sbb
push
adc
push
add
sbb
mov
mov
dec
aas
mov
xchg
out
sub
mov
sbb
sub
jmp
pop
mov
pop
cmc
in
mov
jno
mov
cmpsb
pop
pop
cld
lret
fisubrl
push
inc
pop
jb
xchg
push
jl
sub
xor
xor
push
add
inc
push
push
fisttpll
push
and
adc
outsb
pushf
pop
iret
fcompl
cmpsl
adc
adc
sahf
aas
mov
lods
xor
enter
pusha
or
jge
xor
xor
cmp
xlat
cmpsl
jge
out
sbb
mov
rorb
stos
je
jno
add
orl
mov
enter
lds
sub
pusha
dec
lods
dec
pop
fdivl
imul
jle
gs
adc
and
adc
arpl
pop
test
mov
pop
fdiv
hlt
outsl
mov
xchg
pop
xlat
iret
sbb
pop
adcl
imul
addr16
mulb
rol
xorl
inc
inc
test
xchg
mov
cwtl
add
fimuls
lcall
xchg
movsl
testb
aas
and
dec
imul
add
scas
andl
sub
sub
push
push
imul
jne
pop
fucomi
mull
fstpl
stos
push
in
xor
cmp
les
mov
inc
pop
adc
xchg
dec
sub
lret
cmp
lahf
fimuls
adcl
data16
bnd
lret
xchg
sahf
insl
rcr
insb
andl
xchg
pop
fdivr
xchg
push
and
dec
cmp
sub
cmp
mov
xor
pop
jne
das
pop
inc
jae
out
pop
js
cmpsl
aam
mov
xchg
stos
scas
sti
pop
fnstsw
and
gs
shr
mov
outsl
sub
call
test
jmp
mov
aas
mov
leave
ds
mov
cli
iret
push
dec
adc
icebp
cmpsl
ret
mov
out
pop
scas
fisttpll
and
ds
inc
pop
insb
and
fs
adc
into
adc
cmpb
inc
and
dec
sbbb
mov
xorb
push
xchg
jae
pusha
es
sub
cmp
and
sub
pop
add
daa
adc
mov
fcoml
inc
in
mov
inc
adc
xchg
dec
pop
and
fistpl
test
std
pop
gs
add
lahf
hlt
pop
fimuls
dec
add
sbb
push
dec
inc
fdivrs
ss
les
add
xchg
push
lea
call
incb
mov
daa
in
test
push
jo
rolb
inc
lahf
mov
into
int
ret
inc
inc
test
mov
push
sbb
xchg
pop
test
mov
push
lods
xchg
jb
repnz
cmp
mov
mov
or
js
mov
mov
lret
xor
jg
mov
icebp
jg
push
pushf
andb
stos
mov
mov
adcb
mov
mov
pop
scas
sti
xchg
lahf
outsb
adc
movsl
cli
add
sub
enter
inc
lods
ret
lods
test
mov
pop
cmpsb
in
shl
push
xchg
mov
sub
bound
push
jecxz
lods
mov
jne
xchg
jbe
xor
sbb
push
xchg
mov
lcall
lahf
imul
and
pop
pop
jnp
out
out
dec
sbb
loop
jg
mov
push
inc
cmpsb
push
or
ss
ja
mov
iret
jb
arpl
mov
push
mov
push
add
jae
mov
jp
mov
and
sub
test
jecxz
repnz
jg
cmp
loop
cmp
mov
mov
inc
shlb
aad
out
pushw
gs
pop
xor
fadds
outsb
mov
mov
into
mov
pusha
adc
push
insl
mov
add
and
push
inc
add
lret
out
incl
xor
hlt
pop
cmpsb
add
test
jle
ss
mov
mov
test
cltd
mov
pop
push
aas
shr
sbb
mov
mov
mov
dec
in
test
and
dec
inc
cmpsb
iret
cmp
adc
std
mov
or
xchg
mov
pop
hlt
shlb
repnz
mov
pusha
adc
repnz
pop
pop
jnp
xchg
sbb
mov
ljmp
add
cmp
lret
jae
insb
xorb
jnp
mov
lea
push
movsb
std
mov
cmp
mov
incl
inc
ret
mov
xchg
dec
sub
mov
sbb
das
jne
scas
sahf
inc
jle
imul
out
fldt
sub
jmp
mov
xchg
iret
bound
mov
mov
ret
test
scas
popf
enter
les
std
jbe
cs
fisubs
jmp
pop
mov
or
jo
mov
roll
mov
icebp
and
inc
sub
loop
mov
pop
push
sbb
adc
push
fsubr
jp
or
cmp
lcall
jns
adc
pop
jns
dec
dec
loopne
adc
mov
add
das
lea
push
push
or
lret
ds
pop
cmpl
scas
lcall
add
mov
sti
jno
pop
ds
inc
test
lds
imul
cltd
out
sbb
addr16
or
je
jns
mov
pop
adc
xchg
lods
and
sbb
cmp
cmp
push
stos
xor
push
push
mov
xor
and
inc
loop
jmp
andb
xchg
jg
stc
xchg
das
xor
dec
insl
inc
lret
add
and
mov
push
sub
xor
jmp
push
insl
cltd
push
ds
pushf
popa
fucom
test
jo
testl
adc
mov
mov
data16
rcrb
mov
jns
add
lods
call
jl
jmp
test
lret
jb
subl
in
sbb
cltd
jno
decb
push
icebp
inc
lcall
loope
xchg
inc
mov
pop
shlw
or
ret
out
or
inc
pop
mul
imulb
int3
stos
mov
testl
les
subb
cmp
mov
lock
adc
push
mov
ret
mov
rcll
mov
std
fadds
mov
lods
sbb
jle
add
adc
js
and
adc
mov
lds
jno
cmp
mov
dec
outsl
icebp
pop
push
das
scas
xchg
mov
jl
pop
pop
mov
jbe
or
xchg
xor
shr
sbb
add
pop
adc
icebp
mov
xchg
sub
nop
jmp
ljmp
mov
jmp
fsubp
adc
int3
dec
test
xor
dec
lret
dec
push
sbb
lds
mov
mov
add
mov
mov
xchg
mov
pushf
push
hlt
out
mov
adc
jbe
ret
sub
mov
fsubrs
aas
loop
jl
scas
int3
std
mov
mov
pushf
adc
aad
jnp
jmp
jecxz
int3
jo
stc
movsb
cltd
mov
out
ds
push
sub
notl
mov
sub
jle
mov
std
fisttpll
faddl
mov
adc
mov
pop
arpl
popf
push
lods
sarb
mov
lea
xlat
dec
or
in
pop
loop
shl
and
aas
cmp
xor
in
cmpxchg
sub
cltd
ret
les
lds
stos
mov
jae
icebp
leave
into
jmp
repz
dec
xorb
mov
inc
xchg
and
dec
sbb
in
or
repz
push
rolb
cmpb
cli
lock
pop
push
and
mov
fnsave
scas
inc
sbb
jns
repz
jo
ds
rcrb
gs
loopne,pt
arpl
xor
jbe
push
mov
fldt
test
cs
jbe
push
lahf
or
ret
insl
rcl
outsb
cmc
sarb
jbe
inc
dec
cmpl
sbb
and
and
and
aas
arpl
out
std
outsb
xlat
out
sahf
stc
lahf
mov
ret
aaa
push
std
ss
mov
mov
cli
je
jg
xchg
dec
lretw
mov
xchg
push
xlat
addb
jno
pop
fidivs
sub
sub
xchg
and
es
pop
sub
orl
les
std
sub
lock
cmpsb
out
loopne
lahf
sbb
leave
or
loopne,pn
xor
mov
dec
adc
mov
in
dec
cmp
popf
loope
mov
jg
dec
sbbb
push
sub
mov
sub
add
xchg
lahf
and
testb
mov
stc
das
ds
xor
ja
adc
sbb
or
lret
mov
pushw
leave
insl
mov
and
popf
xchg
mov
insl
addb
push
fnclex
push
out
xor
xchg
jbe
mov
fdivl
jae
fisubs
cmpsl
imul
and
outsl
and
shlb
stc
shll
xor
rcrl
inc
ja
cmpsb
add
sbb
gs
mov
ds
mov
test
sarb
aad
push
jne
jp
jno
jbe
popf
push
call
adc
mov
inc
sahf
or
lret
ljmp
std
push
jecxz
popa
inc
nop
icebp
xchg
push
push
push
call
pop
push
mov
out
incb
jecxz
das
ret
clc
cmpsl
mov
add
repnz
cmp
in
icebp
mov
xor
adc
mov
addr16
ffreep
and
cmpsl
xchg
add
pop
scas
leave
pop
mov
xor
inc
loop
popa
mov
mov
pop
pop
andb
dec
cmp
outsl
repnz
push
xor
sub
ja
sbb
sbb
arpl
sub
imulb
and
jp
push
mov
pop
and
faddp
adc
pop
xchg
subb
mov
xchg
out
iret
sbb
jno
jb
sub
mov
mov
fildl
or
ficoms
cwtl
sub
nop
loop
push
idiv
test
movb
lret
mov
lretw
mov
dec
pop
stc
jl
stos
into
je
fsts
sub
jmp
cmpsl
flds
rorl
ja
hlt
dec
ret
push
adc
movsl
xor
lret
cli
hlt
push
cmp
sbbb
and
ja
inc
cld
cmp
sarb
dec
ds
daa
movsl
sub
daa
mov
xor
push
dec
out
push
fcompl
in
jne
inc
lds
add
mov
das
inc
add
ret
addr16
mov
jb
subl
fwait
cmp
iret
adc
pop
adc
out
outsl
jno
mov
adc
les
pop
fcoml
sbb
subb
in
inc
das
sbb
insb
addr16
xor
aad
imul
xchg
mov
cmc
dec
inc
lock
aaa
sub
add
dec
out
pop
adc
mov
xchg
cmp
ret
mov
jnp
lret
lea
cmpsb
jmp
mov
cs
ror
lods
inc
test
xchg
int3
arpl
pop
pop
and
and
jmp
stos
push
push
push
sub
lahf
fxch
out
sub
cmpsb
cld
mov
jnp
sti
ja
xor
sub
xor
mov
imul
das
imul
pop
pop
pop
dec
inc
add
jge
lret
adc
sti
adc
mov
loopne
inc
rcll
adc
arpl
leave
xlat
push
rcrb
cmp
stos
and
iret
push
sub
scas
fists
push
sbbb
arpl
xchg
mov
mov
add
mov
mov
sbb
rorb
nop
sbb
adc
jb
push
or
jno
rcrl
sub
fstpt
jnp
mov
sti
xchg
rol
adc
imul
imul
push
fsubrl
imul
and
adc
inc
jge
leave
or
pop
inc
sub
jbe
loopne
ficompl
dec
jp
loope
andb
push
call
fldz
push
insl
mov
push
inc
int
cmpsl
push
out
inc
mov
cs
repnz
call
inc
mov
or
push
cmp
adc
pop
jne
insb
sub
fisubrl
xor
or
add
push
sar
pop
incb
inc
cmpsl
and
lea
inc
pop
jae
pop
cmpl
ret
int
cmp
and
fistl
cmc
sub
test
sbb
arpl
aam
adc
ss
pop
dec
packuswb
lds
xor
fxch
enter
sbb
adc
sbb
xchg
add
cli
xchg
fs
inc
add
lods
inc
mov
inc
mov
ss
pop
mov
in
jge
imul
into
sub
mov
in
sub
sub
jnp
mov
xor
cs
loop
xchg
mov
xchg
popf
pop
lea
mov
pop
shl
pop
nopl
inc
es
inc
jmp
jns
ret
es
lods
rcrb
loop
subb
aad
cltd
pop
jo
cmp
sarb
rclb
fisubrs
cmp
jg
rorb
or
mov
cmpl
push
inc
aas
fwait
js
sub
xor
cmp
jae
push
ret
pop
in
push
cs
and
jp
outsb
xor
das
push
sub
xchg
pop
push
rclb
adc
fcmovnb
lods
pop
sbb
sbb
adc
jl
jg
sbb
sahf
or
rol
mov
lcall
rcrl
clc
add
inc
shrl
stos
test
dec
rolb
fsts
insb
pop
push
shlb
pop
cmp
test
rcl
repz
push
in
sbb
and
xacquire
pop
mov
or
inc
jmp
stc
enter
sarl
or
xchg
xor
xor
push
sub
adc
mov
gs
lods
cmp
mov
shlb
xchg
lea
pop
or
lods
daa
jo
and
scas
mov
std
dec
mov
pop
cmp
outsb
out
in
pop
aad
sqrtps
mov
add
and
xchg
sub
enter
sahf
das
sbb
push
mov
loope
in
aas
lods
mov
test
inc
mov
xchg
push
jg
pop
jns,pt
mov
out
pop
out
pusha
inc
mov
loop
lds
dec
push
stos
imul
test
xlat
jg
loope
pop
std
jle
rol
sub
jmp
mov
add
cmp
in
pop
add
dec
xchg
push
rclb
and
or
pop
lcall
fistl
pop
mov
nop
cltd
cmp
cmp
xor
xchg
andl
int3
jl
insb
into
push
sub
addr16
jl
cmp
cmp
xor
jne
lcall
lods
in
sbb
fs
lcall
int3
sti
jb
jae
negb
jecxz
push
and
and
pusha
push
ja
adc
mov
mov
mov
jb
cmp
fildll
pop
jl
ss
inc
or
xor
cltd
adc
test
ret
jo
leave
fs
mov
inc
fmuls
imul
mov
push
lea
lods
shr
jle
push
aam
sbbb
jne
xchg
sahf
adc
sub
adc
jae
fs
ret
add
mov
mov
inc
nop
pusha
push
inc
sarb
pusha
scas
inc
int
mov
adc
fwait
inc
mov
daa
cmp
sbb
stos
cmp
jmp
mov
and
in
push
clc
inc
adc
push
sbb
sbb
pop
stc
scas
fcmovnbe
ffree
xchg
jae
mov
stos
pop
add
pop
leave
in
sub
mov
test
aas
adcl
pop
movsl
pop
scas
ret
cwtl
fstl
pop
aam
cmpb
fldl
push
pop
orl
ss
xchg
pop
add
jp
dec
dec
loop
push
sahf
mov
dec
bound
inc
xchg
and
scas
pop
xchg
gs
sub
js
add
cmp
push
xor
jge
bound
jge
adc
add
pop
xchg
cmp
icebp
div
jp
clc
roll
lret
mov
daa
jl
and
shlb
dec
leave
in
cmp
ja
pop
dec
pop
pushf
ss
xor
pop
push
push
xor
cwtl
sbb
xor
stc
cmp
mov
cs
dec
pop
je
or
loope
nop
xlat
aaa
sub
pushf
mov
decb
mov
jmp
rolw
pop
pop
dec
lea
push
or
or
dec
pop
fwait
out
iret
xor
mov
push
loope
mov
lods
iret
and
push
cwtl
mov
nop
push
sbb
and
jp
adc
mov
sbb
inc
cs
jbe
imul
push
lahf
xchg
inc
ficomps
test
pop
cltd
pushf
mov
mov
adc
sahf
xchg
shr
jb
cld
add
adc
or
push
cs
outsl
sub
out
xor
test
push
stos
push
jns
les
test
lret
and
or
outsb
and
pop
pushf
or
insl
dec
xchg
push
pop
cmpsb
cwtl
xchg
lret
and
mov
clc
std
mov
rorl
add
xchg
mov
add
push
push
fsts
push
gs
sbb
xor
mov
movsl
notl
push
imul
pop
push
les
cwtl
outsb
scas
xchg
sahf
cmp
js
sarl
call
test
nop
out
outsb
stos
or
dec
inc
add
mov
pusha
popa
push
mov
sub
sub
xor
jg
push
mov
lcall
mov
insl
push
sub
jbe
imul
lods
sbb
and
push
scas
div
jmp
popa
cld
movl
in
fsqrt
cmpsb
lahf
sti
cmpsl
mov
mov
xchg
mov
in
sub
mov
mov
cmp
cltd
mov
movsb
loopne
stc
add
fadds
or
sbb
or
inc
mov
test
insl
ds
std
jmp
add
lds
jp
rcrb
sbb
jl
pusha
jns
test
pop
testb
scas
sub
mov
xchg
add
dec
dec
ficompl
idivb
por
ljmp
or
sbb
lcall
mov
pop
jne
mov
and
xchg
inc
scas
mov
negb
pmulhw
popa
fisttpl
jle
icebp
shl
dec
repz
pop
lock
fimull
scas
hlt
clc
in
xchg
push
jne
ret
loop
sbb
cmp
or
jg
cwtl
out
fimuls
push
cmp
insb
mov
jb
add
movsl
rolb
adc
adc
xchg
pushf
pop
adc
push
jge
int3
sub
jg
pop
cmpsb
or
jge
and
jae
in
mov
push
je
sbb
jl
jmp
adc
cwtl
aas
adc
inc
shlb
outsl
pop
daa
mov
cmp
mov
xor
dec
jmp
icebp
inc
or
test
sub
pop
aaa
and
push
dec
sub
ljmp
and
push
into
sbb
aas
cmpsb
imul
xchg
lahf
mov
out
sub
mov
dec
cmp
adcb
flds
fs
jl
fildl
addl
jge
in
or
stc
cli
daa
or
and
int
or
pop
mov
pop
das
jle
clc
mov
cmp
push
xchg
push
add
js
sub
pop
xchg
rcr
lods
add
adc
push
xchg
push
loop
cmp
dec
filds
lahf
jg
leave
mov
pop
xor
jmp
lods
test
xchg
add
sub
inc
push
mov
sbbl
popf
dec
jnp
or
ds
addr16
jo
dec
cmc
lea
adc
outsb
cmc
mov
out
push
mov
or
call
cmp
mov
jmp
mull
fxch
aaa
mov
fidivrs
push
mov
mov
push
push
jge
addr16
mov
xchg
xchg
mov
fistps
shlb
outsl
fmull
mov
imul
sub
mov
out
inc
out
fdiv
fmull
fsts
ret
adc
in
data16
pop
or
hlt
jae
jae
stos
aam
inc
loop
xchg
scas
aam
jb
scas
jmp
xchg
mov
xor
imul
imul
repnz
subb
iret
jnp
jmp
or
fwait
jbe
inc
pop
or
mov
xor
enter
cltd
orb
adc
rcrb
mov
xchg
add
fisubrl
enter
pop
sbb
add
adc
ja
cltd
and
or
repnz
outsb
xchg
ss
mov
testb
mov
lock
pop
lods
push
push
dec
lds
jge
dec
iret
nop
aad
and
in
loop
push
cmp
fnsave
jecxz
mov
aad
outsb
dec
cmp
loope
imul
inc
add
jns
pop
hlt
mov
mov
xchg
jmp
ret
movsb
subl
sbb
ljmp
loop
cwtl
cld
jae
in
ficoms
lret
xor
mov
or
push
fnstcw
cmp
adc
std
push
xor
fdiv
and
pushf
xor
outsb
xchg
mov
lods
adc
dec
ret
in
pop
sar
iret
loope
cmp
and
inc
cmp
inc
daa
not
insb
sti
add
adc
pop
lds
out
inc
into
xor
test
jmp
mov
jecxz
pop
xor
pop
pop
jp
sahf
popa
xchg
push
popl
inc
xor
cmpsl
outsb
add
xor
xor
aam
xchg
or
loop
push
cs
cmp
adc
add
xor
jae
int
sub
mov
addr16
mov
repz
insb
cmp
cmp
cltd
push
cld
pop
xchg
jmp
loop
lock
scas
pop
cmp
shll
inc
mov
add
mov
xchg
xor
js
cmp
or
sbb
ret
lods
gs
aas
stc
aad
imul
sti
or
addr16
mov
shrb
stos
inc
or
adc
les
mov
into
icebp
rorb
imul
popa
leave
push
push
cmc
rcrb
fnstcw
mov
jbe
sub
jns
imul
or
scas
outsl
sbb
push
sbb
daa
ss
in
ds
xchg
in
das
test
and
add
dec
pusha
cwtl
or
adc
mov
jle
lret
fxam
mov
call
daa
in
jp
leave
adc
sarl
and
cld
andl
mov
cmpsb
and
add
push
push
or
jns
dec
in
cmp
movhlps
and
test
xchg
shl
or
std
mov
scas
jmp
repnz
mov
hlt
hlt
repnz
je
xor
push
out
ss
jecxz
push
push
or
out
pushf
xchg
or
js
scas
jle
in
sub
adc
mov
aaa
push
dec
dec
stos
das
inc
sub
fistpll
and
and
dec
repz
insl
push
mov
and
cltd
dec
mov
ret
rcrb
aas
into
inc
rcrb
adc
rorb
out
mov
push
and
in
out
rcr
mov
imul
ret
aaa
push
setb
movsl
pop
or
jl
sub
test
decb
lds
lods
push
or
xor
lret
imul
ds
add
in
je
out
or
cmp
data16
jae
and
mov
sub
cli
scas
jns
jmp
loop
sub
xor
pop
xor
sub
cltd
sti
inc
jb
cld
adc
mov
add
xor
jns
mov
add
stos
inc
dec
mov
sbb
aaa
out
adc
inc
fcmovu
or
cmovae
pop
mov
dec
or
xor
cmp
scas
xchg
cmp
push
mov
aas
test
cmp
ljmp
mov
xchg
mov
sahf
ficomps
mov
push
fucomip
mov
cmpsb
dec
pop
imul
dec
jmp
std
xchg
mov
jl
push
cli
movsb
push
mov
pop
inc
gs
push
sub
int3
mov
push
inc
pop
push
mov
pop
insb
decb
and
add
sbb
call
pop
xor
gs
sub
test
mov
or
xor
leave
inc
inc
lock
push
adc
rdmsr
mov
dec
xchg
in
jb
push
mov
inc
dec
mov
gs
xlat
movsb
sub
data16
dec
stos
push
mov
or
jae
and
ljmp
push
xor
daa
in
pop
das
ljmp
push
cli
test
jecxz
out
jecxz
mov
shl
sub
mov
cmp
idivl
or
and
cmp
lahf
das
mov
push
and
pop
cmpsl
imull
add
pop
and
insl
pop
cmc
mov
add
xchg
bound
add
push
or
addr16
dec
cmc
ss
push
cmc
add
push
popa
xor
and
cmovnp
and
or
inc
pop
xor
xchg
dec
dec
imul
loopne
cmp
loope
fsubl
stos
sub
add
add
adc
int3
popa
notl
ror
stc
jecxz
ss
push
mov
push
cmpsb
pusha
sub
stc
push
adc
loopne
repz
decl
das
hlt
cmp
std
adc
add
inc
loop
inc
or
mov
or
adc
dec
or
es
rorl
out
mov
inc
lahf
into
sbb
dec
jg
iret
xchg
fdiv
add
movb
mov
lahf
decl
bound
cmc
testb
sbb
adc
in
fdivrl
cs
xchg
xchg
fmul
xchg
mov
add
loop
mov
push
mov
add
aas
xchg
aad
ss
lea
cmpsl
cmp
xchg
xor
loop
jae
mov
cmpsb
aam
jl
jecxz
pushf
sbb
notb
mov
ret
mov
test
mov
add
cmp
mov
lahf
out
mov
cmpsl
sbbb
into
mov
sbb
fdivs
pop
ljmp
daa
dec
xor
cmpsl
fcomps
push
mov
xor
addr16
in
sub
in
sub
into
or
jmp
dec
imul
cmp
and
stos
xor
stos
sub
lret
lahf
push
mov
mov
dec
imul
fwait
test
xor
inc
jno
sar
fldt
push
out
sub
repz
in
lahf
movl
jb
dec
jge
repz
or
jne
dec
mov
daa
mov
pop
lcall
ret
scas
dec
arpl
repnz
int
push
jle
push
pop
fdivrp
inc
and
add
dec
mov
or
push
pop
hlt
pusha
lock
sub
fiadds
xor
imul
adc
out
mov
inc
sbb
cmp
mov
pop
into
push
divl
frstor
leave
and
mov
hlt
adc
pop
xorl
fstl
out
mov
inc
cmp
jb
xchg
fisttpll
pop
dec
pop
pop
mov
cmp
fwait
movsb
clc
xor
les
cs
js
push
fcompl
les
stc
pop
xchg
jno
mov
test
sub
rcrb
sbb
clc
sti
insl
call
or
push
test
and
sar
adc
sbbb
jecxz
movsb
fsubrs
xor
repz
mov
or
addr16
lds
and
xchg
or
jmp
insl
or
enter
movsb
push
adc
lahf
jns
mov
mov
sbb
jbe
push
jecxz
fwait
cmpsl
inc
mov
mov
push
in
es
pushf
jp
and
mov
xchg
arpl
cmpsl
jbe
lods
cmp
add
push
repnz
fwait
mov
stos
xor
clc
lods
and
jmp
insl
cld
cmp
call
jne
inc
xchg
inc
mov
lods
mov
sub
insb
mull
fst
and
arpl
jo
addr16
dec
xchg
lods
pop
jecxz
xor
or
pop
rcrl
add
popa
lds
pop
mov
cmc
pushf
loope
mov
aam
sti
fcmovu
adc
cmp
push
cmp
xor
aad
cwtl
bound
cmp
cmc
xor
cmp
mov
daa
fistpl
aad
mov
cmp
mov
xor
sbb
xchg
mov
sub
std
ficoml
mov
sbb
shll
lea
in
sub
xlat
ficomps
fsubrs
pop
mov
cmpsb
sub
stc
cmp
insb
pusha
and
xchg
lcall
lock
xchg
cmp
adcl
aad
pop
jno
push
test
mov
or
xor
pop
mov
sub
fiaddl
fucom
adc
dec
jp
lds
loopne
fdivr
xchg
lods
mov
call
rcrb
loopne
inc
push
cltd
sbb
cmp
repnz
out
add
mov
pop
pop
daa
mov
jne
aaa
push
mov
xchg
mov
call
lods
ficoml
push
mov
xchg
sub
pushf
mov
mov
leave
mov
xchg
in
ja
inc
repnz
mov
and
int
dec
fsubrs
imul
shrb
fldl
xchg
xor
sub
jmp
mov
outsl
inc
xchg
sarb
das
mov
sub
push
stos
outsb
inc
jp
divb
xor
cld
lds
mov
pop
push
xchg
jp
out
and
stos
sti
psrad
and
lret
adc
or
push
xchg
aam
popl
pusha
gs
or
fisttpll
mov
mov
dec
jnp
mov
mov
push
sahf
mov
repz
mov
je
add
dec
dec
scas
mov
loope
lret
data16
push
jns
test
and
add
je
push
lret
and
cmp
inc
and
js
inc
shl
je
and
cli
xchg
jo
ficompl
sub
lock
fwait
pop
mov
aas
js
dec
addl
xlat
sub
je
pop
call
jmp
sub
inc
pop
dec
stos
incb
push
aad
sub
iret
cmp
mov
ds
and
xchg
mov
sbb
pop
and
sbb
mov
shl
cs
decb
sbb
mov
xchg
add
das
mov
jno
insl
jnp
fnstsw
lods
in
cli
xchg
sbbl
ret
cmp
or
leave
inc
pop
scas
sub
pop
xchg
mov
lret
unpcklps
daa
rcl
mov
arpl
mov
cmp
enter
enter
push
push
clc
out
mov
inc
movsl
lods
lds
mov
ret
pop
or
dec
and
pop
adc
cld
pushf
mov
xor
xchg
xor
test
popa
jne
ja
push
inc
inc
popa
or
dec
dec
cmpsb
imul
sarb
adc
jbe
out
xlat
mov
sti
pop
xor
pop
push
jp
popf
sbb
mov
jae
add
add
in
xlat
push
adc
lds
lahf
loop
movsb
rcr
ret
aaa
lret
jo
lahf
lea
rorl
shlb
sbb
shll
add
sub
lret
in
jge
or
pop
or
adc
sahf
add
push
or
fsubl
rcl
dec
clc
add
testb
inc
aad
insl
and
gs
pop
or
dec
je
inc
fnsave
loop
mov
nop
dec
push
fdivs
mov
idivb
mov
and
int3
dec
ss
cwtl
mov
scas
xor
lods
fistl
jge
clc
sti
stos
scas
scas
jo
sbb
sbb
popa
jl
rdtsc
sbbb
sbb
inc
cmp
jmp
jmp
cmp
jo
sub
sarb
mov
lock
popa
sbb
mov
outsl
cmp
clc
xchg
jmp
pop
sub
scas
stc
push
icebp
popa
fldenv
dec
data16
push
mov
pop
enter
lret
das
dec
pop
dec
push
lods
je
mov
out
jl
out
pop
movsl
xchg
stc
add
into
and
pushf
jp
or
outsb
add
bound
pusha
movsl
push
push
dec
push
inc
ja
cmpsl
jge
inc
ja
sti
es
aaa
fcompl
cmp
leave
pop
iret
mov
sub
pop
fsubs
enter
mov
xor
sbb
mov
mov
sahf
xlat
int3
sahf
ss
dec
fists
subl
xlat
mov
mov
push
xor
pusha
pop
add
into
rcl
inc
mov
mov
add
sbb
ljmp
jg
stos
cs
sub
pushf
xor
stc
inc
sub
jle
jnp
mov
xchg
mov
or
in
jl
cwtl
add
lods
aam
lods
fdivrs
mov
sahf
leave
in
mov
mov
lea
jnp
xchg
inc
and
mov
inc
adc
ret
lea
movsb
js
inc
pop
pushl
lret
sahf
push
loopne
lret
call
xchg
pop
adc
inc
int
mov
sub
popf
sbb
cmpsl
jecxz
daa
or
arpl
xorb
orl
jo
lods
dec
dec
outsb
mov
sar
scas
test
movsl
sbb
imul
je
sbb
rol
data16
lahf
add
dec
adc
sbb
dec
cmp
push
aas
stc
mov
hlt
or
out
shlb
mov
pop
ficoml
mov
xor
fidivs
aam
repnz
xor
scas
push
sub
ds
sbb
data16
mov
dec
mov
sahf
sub
fcmovb
pop
es
lcall
sti
jle
mov
pop
lock
rol
ss
fs
inc
add
jp
gs
pusha
andl
insl
mov
adc
das
fninit
xchg
add
or
mov
push
sti
shrl
sub
pop
cmp
adc
xchg
bound
mov
out
gs
xor
stc
push
leave
fwait
aam
movb
fldenv
lds
aad
pop
fisttps
adc
int3
data16
roll
pop
xchg
or
rcrb
imull
fadds
addr16
mov
pop
ljmp
pop
cmp
mov
jmp
fisttps
fwait
shlb
dec
adc
sub
sahf
inc
pop
sub
dec
inc
sub
xor
sti
and
lret
aas
sub
icebp
cmc
cwtl
fwait
add
test
xchg
bound
cmpsl
movsb
jae
push
dec
or
cli
sahf
push
imul
jnp
ficompl
xchg
movsl
fimull
into
mov
scas
lods
cmp
add
es
lret
jmp
or
jne
pop
or
aad
in
add
ljmp
dec
jmp
inc
sbb
loop
jb,pt
push
test
sar
and
into
xlat
xchg
fs
adc
int3
lea
insb
inc
sti
test
dec
mov
loop
pop
test
xchg
stc
scas
dec
mov
aaa
xchg
mov
xchg
push
dec
mov
stos
test
mov
push
adc
xchg
mov
or
mov
maskmovq
idivl
ja
or
jmp
mov
mov
aaa
lods
pop
mov
push
push
test
mov
sub
repz
lods
je
cmp
xlat
or
sti
cwtl
sbb
lea
mov
or
push
mov
loope
int
fstl
xor
mov
cmp
out
rcl
adc
aam
jecxz
dec
add
add
pop
xchg
or
cmp
lret
lods
std
xchg
negl
pop
dec
cld
enter
push
dec
pop
and
jno
jne
jp
sbb
dec
fs
sbb
inc
scas
out
mov
dec
addb
stos
mov
push
inc
roll
fistl
popw
adc
test
inc
adc
and
sbbb
lret
push
jo
int3
push
pop
jae
dec
outsb
mov
sahf
roll
add
stos
xor
insb
jns
xlat
inc
add
jecxz
lods
stos
sub
mov
push
movl
stc
cmp
cwtl
das
pusha
mov
jnp
mov
shr
pop
mov
pop
outsb
push
push
inc
sbb
pop
out
scas
adc
lock
add
pop
repnz
movl
or
xchg
in
in
stos
ja
jg
fmull
jmp
test
pop
mov
je
call
pop
in
fdivrl
add
xchg
stos
cltd
add
jno
push
or
inc
dec
and
insl
jg
imul
jb
fcmovnb
xlat
inc
dec
test
and
jno
xor
mov
mov
sbb
adc
popf
cli
push
mov
jne
mov
nop
stc
pop
push
ret
sub
addr16
movsl
into
lcall
xor
and
jae
lock
mov
and
popa
outsb
mov
jle
add
adc
push
stos
xchg
lret
je
lock
mov
jno
mov
and
ret
cmp
xchg
add
pop
mov
mov
pop
scas
jns
jns
jnp
inc
cmp
popf
rclb
and
dec
pop
push
addl
jmp
adcl
pop
adcb
pop
inc
and
sub
fwait
iret
pop
test
cmp
gs
cmc
cltd
sbb
xchg
add
add
mov
stc
std
or
bound
inc
fs
sar
rorb
out
jo
mov
adc
inc
mov
pop
push
mov
or
adc
sub
xchg
ret
es
aad
push
and
popf
push
xor
addr16
lcall
cmp
xchg
insl
mov
gs
lock
inc
jbe
mov
inc
mov
dec
pushf
jae,pt
xor
iret
rcll
movsb
out
xchg
cmp
mov
dec
cmpsb
lahf
push
inc
lods
jmp
cmp
data16
addl
divl
push
int3
call
dec
push
jno
into
xor
mov
movsb
rcll
xlat
sub
sub
fwait
imul
ss
sbb
mov
add
sbb
enter
adc
push
lea
pop
or
xchg
or
cmp
jb
gs
shr
dec
inc
sub
mov
xor
add
leave
adc
jnp
jp
inc
in
ljmp
inc
mov
sub
pusha
scas
jne
push
jnp
or
pop
out
outsb
ret
or
mov
scas
sbb
shll
mov
ss
lods
aad
add
cld
pop
pushw
jg
sbb
xchg
jle
mov
dec
and
test
cmpsb
pop
mov
dec
mov
loopne
adc
mov
xchg
mov
sub
push
dec
lock
jp
xchg
cs
mov
cwtl
sub
std
mov
adc
imull
lahf
in
or
sub
aam
xchg
push
pop
jne
inc
mov
pushf
lds
mov
adc
push
mov
pop
sub
adc
scas
mov
mov
cmp
pop
sarb
mov
adc
js
mov
lret
push
mov
test
out
or
mov
add
fs
and
hlt
mull
dec
imul
jmp
jae
add
pop
sti
mov
outsb
push
popf
imull
adc
push
sahf
lret
les
pop
and
ljmp
cmc
jae
rcrb
pushf
mov
cmc
mov
mov
or
mov
xchg
mov
and
cmp
cmp
in
ja
pop
inc
mov
xlat
cs
ficoml
pop
dec
dec
mov
mov
add
mov
fsubrl
dec
out
xchg
fmull
addr16
mov
sbbb
stos
enter
ror
pop
lea
cmpl
sub
sub
jo
mov
mov
mov
lahf
dec
xor
mov
outsw
mov
mov
xor
into
arpl
xorb
mov
fs
pushf
stc
and
mov
sahf
icebp
add
stos
push
je
cltd
jge
call
push
std
cmpl
pushf
mov
and
mov
mov
stos
dec
mov
popf
negb
mov
cli
add
shlb
cmp
or
sub
xchg
mov
pop
cltd
leave
pop
cmpb
in
and
jae
stos
mov
lods
pop
gs
sahf
fbld
push
adc
lahf
mov
cmc
xor
cmp
movsb
sarb
push
sbb
testl
outsl
ret
mov
roll
push
adc
jnp
pusha
popa
xchg
mov
clc
in
xlat
mov
data16
pop
push
cmp
or
sbb
push
pop
jle
mov
scas
and
xchg
das
cmc
xor
fs
fs
xchg
push
imul
pop
cli
push
cmp
xchg
cmp
pop
jo
xor
test
push
loop
xlat
jb
cmp
sbbb
mov
int
push
or
jecxz
fbld
sti
dec
fdivl
ret
popa
sub
jle
or
pop
aas
out
jae
pop
xchg
mov
call
clc
cmpsl
xor
add
ds
shl
xor
in
jae
in
imul
cmp
fldt
jae
mov
mov
daa
push
add
jo
pusha
mov
mov
sarb
xor
cmp
inc
push
imul
sub
in
push
xlat
cmp
aad
sub
xchg
mov
xchg
inc
into
out
and
in
nop
fistps
ds
xchg
lock
dec
xchg
xchg
sbb
jp
mov
xchg
out
pusha
mov
sub
lods
fadd
pop
mov
add
lret
jae
adc
push
scas
jmp
data16
outsb
fildl
loopne
in
mov
add
add
fnstsw
fadd
pop
or
cwtl
jo
inc
sub
cwtl
or
xor
nop
pop
xor
mov
inc
push
mov
incl
mov
imul
cltd
ficoms
mov
popf
push
and
leave
sub
cwtl
std
jns
jns
and
sahf
xor
test
or
inc
ljmp
test
inc
shlb
xor
lds
xchg
mov
out
or
cltd
psubsb
divb
out
pop
out
popf
cmp
jns
jl
aad
hlt
push
adc
sbb
ret
data16
sub
mov
jbe
or
add
xchg
repz
fwait
dec
mov
popa
aas
je
push
pop
loop
push
sbbb
or
in
lods
sbb
mov
push
mov
jmp
pop
and
push
sbb
push
jnp
scas
movsb
ret
lret
adc
aaa
notl
sbb
mov
xorl
insb
cmp
sbb
cmpsb
or
loopne
sub
fmuls
es
dec
pop
aad
and
mov
sub
xchg
cmpsb
data16
in
mov
stos
fiaddl
xchg
cmc
sbb
dec
xchg
jecxz
mov
std
mov
xor
fsubrs
lds
sub
lods
outsl
cltd
lcall
lods
dec
arpl
mov
push
daa
cmpsl
call
mov
fsub
dec
push
xchg
pop
cmp
cwtl
and
lds
imul
sbb
dec
sahf
jmp
adc
add
xchg
stc
cmp
movsb
mov
push
jge
dec
xor
or
ja
addr16
jmp
leave
add
pop
in
cmp
push
xchg
mov
scas
scas
jge
xor
repz
dec
ljmp
mov
cld
cmp
inc
pop
add
and
call
and
cmp
push
loop,pn
push
rclb
dec
rcl
stos
inc
push
mov
push
int
scas
inc
mov
or
add
test
jns
push
adc
or
pop
and
xchg
push
mov
aas
add
js
cmp
rorb
or
sub
cli
mov
sub
adc
shlb
mov
fstpl
stos
cmp
mov
test
push
jo
pop
xor
repz
es
lods
pop
loopne
sbb
sbb
and
dec
sub
push
adc
ret
push
add
jne
mov
pop
inc
nop
imul
push
into
xor
mov
dec
and
pop
and
sub
xchg
push
mov
ret
pushf
lcall
mov
push
out
test
mov
push
andb
cmp
test
fld
mov
outsb
es
out
mov
inc
ja,pt
xlat
or
sub
mov
adc
or
lods
out
mov
in
dec
fadd
fsub
lret
je
movsb
cmpsb
popa
mov
xchg
mov
subb
adc
lds
xor
pop
orl
movsb
push
pop
ret
pop
movsl
adc
pop
sub
ss
sbb
pushf
add
cltd
jns
dec
in
rcr
inc
wrmsr
iret
mov
fistpll
sbb
jnp
out
add
push
lret
cmp
inc
data16
loope
jle
cmpsl
jmp
pop
das
xor
inc
cmpsb
cs
mov
sbb
mov
mov
ljmp
aam
fs
gs
sahf
addr16
push
lods
testl
dec
cmp
callw
xor
je
data16
xchg
dec
cmp
pop
ljmp
sbb
int
mov
mov
lcall
pop
cmp
sbb
sbb
dec
pop
shll
aaa
sbb
je
sbb
xchg
xor
mov
jg
mov
push
add
and
mov
mov
test
jle
fstps
mov
lcall
mov
and
ja
inc
mov
mov
sub
aam
cmpsb
sbb
mov
sahf
fstpt
ljmp
xor
cli
enter
cmpsb
pushf
das
aam
mov
mov
cmp
or
je
mov
fcomi
push
cmp
push
pop
jne
notl
push
push
cwtl
negb
addr16
test
sbb
movsl
stos
hlt
xchg
and
sti
jne
dec
cmpsl
out
and
fld
dec
jno
xor
rorl
push
jmp
inc
fmul
dec
and
pusha
push
and
adc
pop
in
shlb
cmc
jmp
jnp
push
dec
add
cltd
insb
ret
cmp
loope
dec
test
in
fwait
cmp
in
loope
int
inc
test
mov
add
fsubl
movb
dec
inc
repnz
mov
test
and
and
pop
clc
mov
or
sti
and
xor
sub
lret
or
scas
dec
mov
inc
pop
insl
jg
cli
fwait
test
jns
mov
aam
add
aas
and
jp
mov
insl
arpl
mov
xchg
jmp
cmpsb
testl
aas
push
pusha
or
ja
push
ret
aam
or
scas
or
mov
test
jle
inc
mov
pop
int3
pop
fisttps
dec
pop
es
fstpt
fimull
fcomps
adcb
ret
push
cmp
cwtl
fdivrp
cmp
ja
fadds
jae
lods
push
adc
sbb
jle
add
icebp
test
lret
clc
jp
cmpsl
jnp
mov
push
lea
jge
add
out
pushf
sarb
jl
cmp
test
inc
xchg
cmp
ret
mov
sbb
cmp
dec
sub
jmp
pop
xchg
lahf
lea
push
stos
loopne
sub
in
pusha
fnstenv
cmp
jle
insw
andl
scas
aaa
xchg
aad
clc
cmc
xchg
inc
shl
int
push
cmp
out
xor
or
adc
sub
loop
adc
pop
and
cmp
and
xchg
insl
mov
dec
test
dec
push
inc
add
cli
mov
inc
and
sub
sbb
rcrb
enter
jmp
cmp
in
adc
jecxz
insb
jl
xor
stos
jnp
mov
stos
push
jnp
xchg
ffreep
loopne
fcompl
cmpsb
xchg
imul
cmpsb
mov
cmp
dec
std
xchg
insb
and
mov
in
rorl
popl
stos
test
and
mov
ret
and
push
inc
add
sbb
shl
or
fsubr
imul
lcall
jp
xchg
flds
fs
sbb
xor
add
mov
into
outsb
add
gs
jns
dec
jnp
adc
jmp
out
lret
or
je
inc
mov
add
sbbb
adc
scas
cmpsl
repz
add
adc
mov
xchg
push
and
stos
mov
mov
ret
sbb
pop
xor
ds
sbbb
pop
in
push
mov
dec
xorl
test
inc
xchg
outsl
mov
pop
xchg
pop
add
mov
pop
stc
mov
mov
jo
das
sbb
push
mov
dec
sbb
sbb
mov
pop
jge
xchg
xor
rcll
jmp
inc
pop
fisubl
push
sub
sbb
jl
sbb
int3
cmp
lea
insl
movsb
inc
push
lds
cmpsb
call
sbb
popa
or
inc
jecxz
inc
dec
in
stc
pop
sub
lea
inc
pop
aaa
movsb
jns
mov
push
jmp
jne
push
stos
orl
cmp
dec
fwait
add
adc
les
or
and
push
ret
and
loop
push
sahf
out
inc
sahf
xchg
jns
cmpsb
mov
xchg
cmpsb
daa
sbb
xchg
cmc
dec
cwtl
addb
jge
cmp
movsl
daa
inc
cltd
mov
sar
lods
sar
cmp
jbe
push
rorb
sub
jle
xchg
mov
mov
adc
mov
xchg
jle
mov
sbb
xor
and
xchg
dec
xchg
lds
icebp
add
xor
mov
cld
xchg
loope
enter
or
jecxz
ja
or
nop
add
mov
fstl
adc
mov
aaa
sti
sti
mov
xor
rcr
fs
mov
dec
adc
mov
sub
aam
movsl
test
jmp
xor
xor
and
pop
adc
jp
sbb
push
mov
mov
add
aaa
movsl
jmp
mov
aam
sbb
scas
mov
divb
mov
pop
lea
sbb
sbb
stos
imul
loopne
add
pop
xor
dec
pop
or
sti
mov
ljmp
insl
xchg
pop
pop
lahf
xchg
jge
add
or
sbb
vpmaddwd
mov
mov
cltd
mov
push
inc
fstpl
imul
add
stc
hlt
into
xlat
addb
push
xchg
test
cmp
scas
mov
jnp
das
cmp
lret
and
pop
cli
out
jnp
cmp
sahf
imul
xlat
ja
flds
pusha
mov
jno
sbbb
sbb
pop
xchg
push
push
test
roll
iret
fisubs
cmpsl
pop
fcompl
mov
cmpsb
dec
or
adc
test
aaa
not
lret
shld
loop
add
dec
lahf
mov
xor
pop
lock
jecxz
out
inc
mov
test
mov
mov
scas
push
daa
mov
test
add
sbb
mov
mov
xor
outsb
push
jecxz
aad
inc
loopne
sbb
dec
movsl
inc
jmp
rcr
push
or
lahf
xor
sub
sub
dec
jg
mov
imul
mov
push
mov
jne
and
int3
lret
pop
dec
aam
rcrl
push
mov
inc
imul
pop
jge
in
stos
cmp
ss
pushf
test
outsb
popa
push
dec
lods
mov
outsb
sub
jecxz
fwait
jge
mov
lods
cld
sahf
push
mov
repz
jae
lret
shl
push
sbb
pusha
push
cmp
cmp
add
inc
sbb
mov
push
xor
idivb
mov
jb
cwtl
jecxz
mov
xchg
adc
mov
gs
aam
inc
adc
clc
sub
ja
scas
sbb
pushf
in
push
lret
or
sub
adc
push
push
andl
push
or
push
stos
pop
jl
test
and
inc
add
test
fmull
loopne
mov
mov
outsl
stos
mov
cli
mov
in
out
cltd
cli
inc
sbb
add
push
add
pop
pop
std
mov
mov
test
push
mov
mov
fisttpl
mov
mov
mov
adc
dec
fwait
push
jge
xchg
fwait
nop
mov
mov
sub
push
inc
sti
mov
scas
ds
sub
pop
test
jecxz
filds
jne
push
mov
xor
sbb
sbb
mov
jnp
inc
outsl
pop
or
jo
sahf
xor
lock
or
xchg
push
adc
int
cli
xor
fdivrl
dec
push
ret
scas
ja
aas
jnp
leave
mov
cmp
fcomps
aam
aam
fwait
ja
jge
ret
fcoml
cmp
dec
inc
cmp
inc
in
jg
add
dec
mov
sub
mov
dec
xchg
jg
mov
aas
xchg
ja
test
cltd
cmpsl
imul
subb
mov
scas
lret
cs
inc
fmulp
fdivrs
or
xor
pop
add
js
sbb
aad
orb
and
shrw
dec
hlt
lods
adc
imul
cmp
dec
in
sub
fidivs
int
push
mov
xchg
subb
mov
shl
adc
pop
jno
cmp
add
xchg
inc
incl
xor
leave
shl
inc
mov
das
inc
ja
add
aam
scas
jg
insl
insl
mov
test
sbb
shll
pop
imul
mov
cmp
or
cwtl
es
aad
loop
jnp
pop
sbb
aas
adc
pop
xor
pop
inc
jo
icebp
ja
fcomp
sbb
pop
clc
repnz
out
mov
cli
leave
inc
mov
mov
mov
mov
jb
out
lock
mov
push
mov
popa
ljmp
jb
outsb
in
mov
fisttpll
repnz
sub
push
and
idivb
inc
loop
and
inc
pusha
mov
jne
test
xchg
bound
mov
cmp
testl
mov
stos
jmp
ret
push
std
push
or
add
jae
imul
in
sahf
sbb
pop
clc
cmpsb
imul
sbb
pop
ret
or
fistl
insl
test
rol
popf
popa
xchg
sub
and
jle
dec
adc
and
jnp
ljmp
jne
push
fs
inc
xor
push
xchg
cmp
jmp
xchg
cmp
mov
nop
pop
mov
leave
inc
cmp
es
fiaddl
mov
xchg
dec
call
pop
mov
addl
out
insb
cmp
mov
in
adc
push
jne
hlt
mov
or
inc
mov
inc
fwait
pushl
xchg
mov
data16
pusha
addr16
cmpsb
lcall
push
dec
iret
es
sbb
push
mov
jns
mov
movsb
mull
push
mov
cmpsl
lahf
mov
test
aas
jge
xlat
out
imul
hlt
fiaddl
dec
test
adc
outsl
pushf
stos
dec
pop
fistps
push
cltd
pushf
js
ds
aas
mov
scas
pop
imul
dec
jg
or
popa
jne
imul
push
push
test
jmp
rcll
rcr
lods
xchg
out
cmpsb
dec
imul
es
outsb
cmpsb
xor
push
xchg
repnz
dec
xchg
negb
sbb
push
mov
fld
inc
test
test
aaa
add
mov
and
cmp
scas
mulb
fnsave
aaa
mov
adc
mov
jge
insl
outsb
push
cmpb
jo
inc
bound
pop
test
aam
ss
notl
sarl
mov
popa
int
xchg
gs
inc
mov
sub
xchg
bswap
lcall
lock
sbb
xorb
cmpsb
inc
ja
dec
cld
and
sti
inc
or
fimull
dec
clc
mov
or
or
out
sbb
push
add
or
and
xor
fwait
mov
or
jno
push
stos
shll
sub
dec
bound
nop
adc
mov
icebp
inc
movsl
jns
iret
xchg
mov
testb
iret
mov
xor
jb
push
mov
xchg
imul
scas
test
fdivl
cmpsb
shl
lock
aaa
andl
dec
std
pop
mov
pushl
testl
dec
or
lock
xchg
xchg
inc
hlt
push
sbb
xor
pmullw
lea
add
mov
adc
or
mov
mov
sub
aas
cmp
mov
push
setge
mov
test
fs
pop
mov
mov
cmp
adc
and
aas
dec
movsb
ret
js
shl
stos
mov
xchg
jb
es
sbb
shrb
adcl
pop
scas
shll
push
cmpsl
lret
cmp
shrb
idivb
xor
inc
jmp
lret
in
insb
mov
pop
stc
lcall
jmp
cwtl
stos
push
mov
clc
stos
jne
cwtl
sbb
das
inc
xchg
cwtl
jmp
cltd
loop
mov
lahf
ficoml
or
inc
gs
clc
sahf
mov
sub
clc
in
dec
test
stos
packssdw
popa
add
shl
into
push
loop
nop
andb
cmpl
popa
cmp
pop
sbb
xor
sub
faddl
scas
fistpll
mov
stos
pop
pop
jle
cmp
ret
and
push
pusha
or
jle
lret
pop
push
xor
into
cmp
mov
test
mov
test
stos
in
adc
dec
dec
jnp
aas
das
sarb
bound
and
cmp
pop
add
iret
sbb
stc
pop
repnz
pop
test
mov
push
mov
dec
in
xor
mov
mov
push
jno
sub
mov
dec
ds
xor
cmp
ljmp
or
pop
loopne
dec
ja
aas
test
loop
sbb
outsl
leave
andl
push
adc
sarb
cmp
cmp
jecxz
pop
rcrb
hlt
sub
lret
push
mov
jg
test
sbb
lret
push
lods
dec
dec
lods
mov
sbb
add
out
push
js
or
lcall
stos
mov
les
or
imul
loopne
icebp
pop
jo
fnsave
inc
fnstsw
or
jnp
push
sbb
jno
xchg
mov
mov
sub
and
adc
cwtl
jno
gs
mov
imul
mov
fisubl
or
lret
jns
push
outsb
bnd
mov
jo
jb
xlat
jmp
pop
mov
outsl
jge
movsb
or
pop
mov
and
mov
adc
cmpb
es
fidivrl
pop
inc
out
and
loop
rclb
sbb
jno
cmp
lods
or
mov
in
add
dec
lret
push
adc
dec
loopne
or
push
movsb
hlt
or
jmp
push
out
or
cmp
mov
jno
sub
aas
test
and
pusha
in
imul
xor
inc
stc
dec
enter
and
out
jge
or
das
cmp
fiaddl
inc
scas
dec
mov
sub
and
fsubl
mov
adc
jnp
stos
inc
imul
cld
fidivs
cmpsb
adcb
inc
pop
push
out
mov
mov
mov
out
scas
ds
insb
push
in
jge
dec
mov
sti
scas
mov
adcl
movsb
push
cwtl
and
jl
sub
cmp
add
sub
out
mov
icebp
push
mov
hlt
sahf
xchg
mov
repz
dec
add
jb
lret
push
mov
orl
inc
sbb
mov
cmp
or
or
les
loope
dec
lds
pop
push
add
roll
inc
xchg
add
dec
lock
mov
or
mov
inc
mov
mov
mov
jnp
cli
pushf
jo
jp
cwtl
lock
mov
push
mov
cs
clc
repz
fdivl
insb
std
cmp
sbbl
push
xchg
push
push
jae
popa
cs
in
arpl
dec
faddp
jbe
pop
jl
stos
push
decb
sbb
dec
mov
sbb
push
dec
std
or
fmulp
pop
push
scas
scas
sahf
fcmovnb
dec
inc
mov
dec
rolb
loop
mov
pop
mov
pop
xor
jo
inc
jo
je
repz
fisttps
push
inc
jnp
and
out
out
jne
sbb
je
jno
ds
fbstp
sub
mov
fadd
ret
in
xchg
inc
inc
push
hlt
jmp
mov
xor
push
scas
mov
jnp
in
adc
cmpsb
xchg
insb
inc
push
aam
imul
sbb
rcl
push
inc
mov
adc
repnz
add
pop
cmp
add
mov
out
pop
insb
movsl
ljmp
dec
cmp
pop
pop
mov
push
outsl
mov
ds
xchg
push
sbb
push
bound
imul
shlb
jnp
and
insl
lea
xor
jne
lret
push
gs
xor
sarl
cld
sbb
dec
jg
out
int3
cli
cmp
or
pop
stos
iret
test
ljmp
les
std
data16
mov
cmpsb
xchg
fidivrs
pop
dec
add
push
les
jecxz
mov
ret
and
adc
jp
cwtl
adc
loope
popf
pusha
nop
adc
xlat
out
int
nop
lock
or
daa
fstl
test
push
shrl
es
in
xor
fdivrs
inc
pop
sbb
lods
xchg
xlat
inc
rorl
inc
adc
and
in
cmp
cli
jp
dec
pop
cwtl
xchg
shl
push
int3
pop
or
pop
adc
jbe
xor
dec
xor
fdivrl
hlt
mov
cmpsl
jns
mov
jne
les
lods
icebp
push
adc
fstpl
xor
mov
mov
gs
imul
ja
push
sbb
adc
movsl
jge
inc
daa
inc
je
push
cmp
xor
mov
xchg
lods
inc
ss
outsb
mov
sti
call
lret
cli
and
jb
ret
adc
pop
or
ror
dec
and
mov
xor
mov
mov
dec
in
pop
fs
lahf
addr16
mov
or
jp
scas
inc
stos
or
sub
mov
xor
scas
jb
mov
jmp
or
push
in
mov
jnp
imul
pop
cld
or
fdivrp
out
sub
pop
and
mov
xor
sub
mov
sub
inc
mov
or
icebp
cmp
mov
push
sub
add
sar
andl
mov
xchg
mov
xor
aad
and
mov
ret
or
mov
aaa
sub
mov
lock
inc
cmp
mov
out
int
sbb
cmp
cmpsb
rorl
outsb
popf
lods
pop
out
cmp
push
xchg
adc
das
lea
xchg
sub
cmp
cld
mov
or
aad
mov
ret
inc
nop
and
fistl
shrl
in
push
xchg
mulb
push
sub
cmp
mov
jge
stc
dec
out
jo
in
cmp
aam
addb
sub
xchg
mov
pop
jmp
mov
xchg
aad
mov
sbb
adc
out
dec
push
jmp
scas
pushf
inc
icebp
insb
jmp
jp
inc
daa
or
idivb
xor
out
jbe
clc
push
fnstcw
or
jmp
inc
adc
jo
xchg
std
fsubl
mov
int3
cwtl
movl
mov
push
arpl
mov
lcall
stos
notl
data16
cmp
adc
jo
cmp
inc
div
fucomip
cmp
push
pusha
cmpsl
lea
cmp
nop
out
dec
xchg
cs
inc
repz
in
ja
mov
cmp
dec
add
stos
je
cltd
ss
mov
push
out
xor
ret
cltd
xchg
daa
testl
pop
xchg
popa
lret
sti
popa
lea
pushf
popf
aam
ljmp
ret
adc
pushf
lcall
clc
call
sbb
fs
add
mov
shl
jg
jg
push
adc
jg
sub
add
cmp
movsl
lods
add
mov
repnz
dec
mov
rcrb
mov
add
into
or
ljmp
jae
and
or
push
ja
int
and
sub
lods
adc
xor
and
mov
pop
mov
repz
aam
sub
push
outsb
int3
mov
xchg
xlat
cld
xchg
push
inc
dec
mov
jns
loopne
sbb
or
and
mov
mov
addl
mov
stos
pop
repz
subl
cmp
shlb
insl
jmp
ljmp
dec
repz
xor
push
mov
lds
adc
gs
xorb
jns
sbbl
cltd
out
in
push
sub
adc
adc
xchg
adc
pop
fidivrs
test
mov
add
sbb
outsl
mov
and
pop
cmp
xchg
or
in
lret
sub
jg
ja
out
inc
or
js
inc
outsl
orl
lods
sub
gs
stos
mov
mov
add
inc
jnp
jge
mov
call
cmpsl
fs
dec
xchg
push
push
push
pusha
pop
mov
cmp
pop
in
mov
xor
jae
inc
pmullw
xorb
movsb
cmp
mov
jg
test
imul
pop
add
scas
add
push
add
add
pop
inc
jb
mov
aas
pop
pop
bound
or
int
xchg
jge
sbb
push
pushw
sti
in
xor
es
cld
leave
pop
push
jae
pop
shr
je
xchg
fisubrl
adc
mov
mov
mov
sbb
into
mov
or
xor
jp
xchg
cmpsl
fwait
mov
aaa
aas
popl
addr16
adc
jmp
adc
test
test
jb
xchg
out
add
pop
dec
test
fisubl
dec
sub
mov
pusha
pop
popa
dec
stos
ret
sub
xor
adcb
imul
stc
test
sbbl
imul
mov
in
rcr
out
pop
enter
dec
inc
or
cmp
js
int3
pushf
js
test
cld
call
sbb
mov
cli
fs
inc
jns
dec
inc
aad
pop
xchg
cmpsl
cmpsl
cli
sahf
sub
xchg
xchg
mov
or
xchg
lods
ficomps
push
push
notb
push
jne
mov
shrd
xchg
lea
xor
cmpsl
fs
je
into
aas
pop
dec
cli
adc
jmp
dec
sub
push
add
lcall
shll
test
xor
test
cli
sub
fnsave
fs
pop
pop
mov
cld
fdivrp
xor
mov
lock
adc
out
jbe
sahf
xchg
in
fs
dec
push
in
arpl
mov
stos
xor
xor
inc
inc
and
shlb
addb
hlt
fincstp
jbe
jp
icebp
pop
fisttpl
mov
ret
pop
dec
jno
sbb
jmp
mov
cmpxchg
dec
mov
ret
ja
rol
outsl
adc
arpl
mov
or
les
jo
ss
shll
dec
outsb
cmp
int3
add
out
push
fld1
repz
movsl
ss
enter
pushf
sub
add
jmp
cs
add
cld
push
mov
mov
rcrb
orb
mov
cmp
rorl
lods
lret
arpl
fcmovnb
sub
dec
pop
cmpsb
inc
test
sub
and
jle
sub
not
sbb
xor
xchg
xor
mov
ffree
or
mov
mov
fbld
lea
xor
lea
sub
lret
stos
cmp
lret
sbb
and
stc
gs
cmpb
leave
push
cmp
sbb
and
cmp
xor
xchg
and
movsl
dec
mov
test
ret
push
adc
out
or
fsubr
jecxz
xchg
in
inc
and
or
mov
mov
xchg
call
int
push
fisubl
inc
daa
sub
push
dec
imul
mov
roll
dec
mov
adc
aam
jle
push
mov
mov
cmp
int3
mov
pop
mov
xchg
scas
sub
lds
loopne
imul
xor
sbb
add
xor
scas
jno
mov
mov
dec
and
push
push
mov
int3
jne
aam
aaa
icebp
push
fldcw
or
jnp
xchg
sbb
xor
je
push
inc
iret
adc
push
inc
loope
hlt
and
lret
and
mov
out
scas
xchg
mov
aam
mov
pop
repnz
addb
pop
xchg
jge
xchg
and
dec
fcmovbe
imul
movsl
cmpsl
adc
mov
pop
xchg
and
shll
insb
lock
push
adc
mov
xor
jl
bound
fldcw
bound
pop
mov
icebp
out
sub
lods
xchg
or
test
adc
add
out
mov
ret
add
mov
fisttps
sbb
mov
sbb
mov
in
js
test
in
shll
pop
fsts
pop
in
pop
outsb
add
les
pop
fidivrs
and
push
test
xchg
call
pushf
mov
mov
adc
imul
outsl
push
add
mov
cmpsb
add
mov
lcall
insl
out
adc
adc
andl
dec
ds
test
cmp
and
pop
orb
enter
cmpsl
fiaddl
and
shlb
mov
mov
out
pop
and
lea
inc
les
dec
jnp
push
pop
adc
or
cltd
enter
mov
iret
sti
mov
xchg
pop
inc
mov
out
fsubrl
mov
repnz
lods
cltd
scas
outsl
push
sub
mov
lahf
jnp
in
push
les
push
xor
jecxz
loope
es
stos
leave
mov
mov
sub
mov
fnstsw
mov
pop
adc
into
adc
pop
xor
inc
sbb
and
xor
jmp
dec
popa
xor
dec
xchg
movsb
xor
xorl
add
insl
push
xchg
xchg
loope
shl
sub
cmp
cmp
lock
int
mov
add
sti
mov
dec
fsts
jmp
ljmp
push
sahf
loopne
scas
sbb
sbbl
jg
dec
mov
jg
xor
inc
xor
cmpl
push
nop
xchg
fwait
mov
inc
push
push
add
in
xor
cwtl
nop
pop
js
retw
stos
sub
add
inc
sub
pop
dec
test
arpl
int
xchg
subl
mov
fldcw
jp
addr16
xor
test
sub
cmc
addr16
xor
into
rcl
or
and
loope
mov
add
ljmp
cmp
push
pop
out
sub
imul
jbe
push
add
cltd
xchg
sub
jo
inc
lods
sbb
pop
gs
sbb
andl
cmp
out
int3
pop
xor
xchg
mov
adc
stos
xchg
push
es
add
xchg
xor
mov
hlt
mov
xor
cld
adc
xchg
or
rol
or
pop
std
pop
fadds
aas
movsl
test
addr16
mov
test
inc
cs
mov
xchg
or
into
add
ret
lahf
std
sbb
es
scas
pop
add
fwait
sarl
sbb
ja
pop
or
xor
mov
stos
inc
sub
add
inc
das
aam
daa
sub
cmp
xchg
shlb
mov
cmp
inc
aaa
mov
push
sbb
imul
inc
adc
mov
lahf
or
aas
ljmp
in
push
sbb
jno
sub
fidivrl
lret
push
mull
nop
inc
mov
jb
xchg
add
pop
dec
imul
or
dec
nopl
mov
cld
push
into
repnz
inc
enter
xchg
jno
mov
sahf
flds
or
fisubs
sahf
or
call
xchg
fisubl
mov
mov
negl
sarb
jno
or
and
shlb
cmc
mov
xchg
mov
jmp
hlt
lahf
pop
popa
add
mov
mov
adc
stc
shlb
jo
jbe
inc
push
loopne
fadds
inc
fs
fstpt
aad
dec
xchg
sub
pusha
ficompl
js
jb
sbb
popf
js
pop
mov
mov
push
xchg
sbb
jl
int3
inc
adc
xor
sbbl
sub
push
les
mov
movsl
and
mov
stos
and
jb
push
js
xchg
ss
mov
int
or
cs
in
loope
xchg
cs
pop
adc
adc
sahf
and
inc
dec
xchg
loopne
cmp
xor
movsl
in
sbb
inc
out
mov
dec
and
jb
inc
mov
xchg
mov
repnz
sub
jle
mov
dec
fnstenv
jmp
in
lea
or
pop
call
das
push
sbb
pop
lret
hlt
icebp
fcmovnbe
rclb
popf
call
imul
sbb
dec
loopne
mov
outsb
adc
cmpsb
cs
and
add
outsl
das
fdivrs
repnz
ja
xchg
mov
dec
or
inc
test
pusha
push
jge
out
outsb
je
cmp
rorb
ss
insl
nop
ds
idiv
jae
bt
sbb
mov
clc
pop
bsr
jle
sahf
sahf
popa
pop
adc
cmp
sub
mov
sahf
and
inc
testl
sbbb
cmc
fs
inc
add
xchg
ficoms
add
mov
addr16
imulb
cmp
or
jg
adc
mov
and
sub
mov
pop
mov
rolb
es
jl
notl
add
sub
daa
cltd
sar
rorb
push
jb
xchg
fucomp
outsb
dec
fadd
bound
inc
decb
cmp
mov
fstpl
lock
mov
jae
push
pop
add
xor
sub
add
xchg
xchg
push
cmp
adc
outsb
repnz
mov
and
fwait
cli
sbb
ret
add
cmp
js
fs
xor
push
cwtl
ror
ret
call
mov
popa
pop
andl
incb
outsl
mov
pop
push
stos
xchg
mov
xchg
daa
pop
mov
ss
jno
shrb
push
call
cli
push
fistl
fsubrl
dec
enter
push
cmpsl
les
aam
cwtl
xchg
xchg
faddp
dec
iret
fmuls
adcb
mov
aad
dec
fisubs
mov
rclb
aam
adc
js
add
pusha
mov
dec
and
rolb
cmp
enter
vphadduwd
or
inc
lcall
push
adc
imul
xchg
push
push
dec
inc
sbb
pop
pop
push
outsb
pushf
ret
enter
popf
in
xor
and
fwait
data16
pop
sbb
cli
out
jno
iret
lahf
cltd
add
clc
push
insl
jns
subl
cmp
jb
movsl
cmp
push
inc
sub
loopne
repnz
pop
xor
mov
roll
mov
ja
mov
imul
scas
imul
xchg
test
inc
xchg
popf
jno
adc
xchg
xlat
sub
outsl
jmp
ret
rcrb
fucom
arpl
gs
dec
rorl
xchg
cmp
mov
enter
sbb
jae
or
in
jae
mov
sti
ret
and
std
inc
sahf
mov
dec
jnp
insl
mov
add
loop
aaa
repnz
imul
bound
inc
xor
out
sub
sbb
repnz
stos
dec
push
pop
mov
das
pop
jbe
jno
mov
fld
in
lds
imul
rcrl
sbb
mov
fcomps
pop
testb
movsb
aad
inc
mov
or
inc
in
shlb
int
mov
dec
jne
pop
shll
cmp
xchg
jecxz
jo
pop
dec
fldl
out
pop
out
insl
fdivl
jne
sbb
push
fdivl
mov
and
mov
bound
pop
iret
out
outsb
xlat
pop
mov
push
ret
adc
xor
fldenv
xchg
jg
pop
hlt
repz
jl
subb
outsb
and
jge
inc
mov
cmpsl
xchg
stos
push
js
notb
mov
lret
push
sub
push
pop
or
lret
repz
xchg
inc
sbb
sub
mov
insb
gs
das
orl
mov
fistpl
xchg
or
dec
cmpsl
mov
mov
pop
dec
add
fldenv
or
test
xchg
int3
sub
imul
or
test
call
xchg
bound
push
imul
lods
push
popa
jecxz
cli
pop
jne
pop
in
stos
mov
xchg
xchg
xor
loopne
jo
leave
cltd
ja
js
jno
rol
xor
das
repz
arpl
inc
xor
scas
or
mov
cmpsb
fists
dec
or
xor
shll
iret
adc
and
sbb
sub
mov
in
hlt
cmp
mov
test
xchg
or
pop
jl
jbe
jno
outsl
pop
add
into
push
sbb
push
pop
or
pop
mov
fistpll
add
lret
insl
fucom
cmpsb
sub
xor
pop
mov
test
divl
test
mov
cmp
add
rorb
arpl
std
idivb
xchg
jmp
inc
cwtl
arpl
push
mov
add
inc
jge
push
nop
sahf
ds
outsb
dec
into
pusha
pop
or
test
pop
xor
and
in
js
cmpb
not
dec
xchg
and
sbb
xorl
xlat
ror
dec
jp
inc
xor
dec
mov
add
cmp
clc
inc
jnp
push
stos
inc
sahf
mov
sahf
fmuls
lret
mov
pop
jnp
adcl
xor
ret
cmp
sub
ljmp
pusha
into
sbb
daa
add
lods
test
add
ljmp
xchg
dec
cwtl
mov
add
xchg
add
sahf
adc
daa
cmpsb
loop
push
clc
add
mov
xor
ret
nop
cmc
popf
jae
je
sbb
movsb
and
sbb
shll
fs
pushl
xor
mov
leave
xchg
stos
cmpsl
pop
out
add
out
data16
xor
das
add
pop
xor
popf
test
and
fcmovbe
ss
cwtl
and
sahf
mov
xchg
movsb
mov
jbe
sbb
mov
mov
mov
test
push
idivb
dec
popa
xchg
enter
clc
repz
adc
adc
mov
ljmp
adc
movsl
mov
push
jne
stos
push
xchg
sbb
loope
sub
pop
shrb
mov
int
shlb
or
hlt
mov
push
pusha
outsl
jae
add
stos
cmp
test
mov
les
loopne
loope
lret
dec
ljmp
pop
scas
cs
cld
sbb
mov
movsl
rcll
or
adc
icebp
jae
xor
out
cld
scas
mov
jecxz
mov
jecxz
out
add
mov
out
inc
pushf
repz
sahf
and
fildl
xchg
mov
enter
push
insl
out
in
lcall
or
inc
aaa
adc
jmp
inc
pop
cmp
in
or
subb
in
popf
adc
and
dec
inc
and
fs
or
inc
je
mov
std
fcmovb
pusha
lret
ja
in
clc
out
enter
pop
push
mov
bound
xchg
sbb
pop
test
ja
imul
sub
out
mov
mov
dec
pop
fadd
pop
inc
dec
lods
adc
mov
dec
js
shl
das
mov
and
pop
testb
mov
cwtl
xchg
jb
je
sub
mov
rcrb
mov
movsl
sbb
loopne
cltd
mov
loop
rcrl
inc
and
int3
and
push
fisttps
daa
aaa
mov
lods
clc
mov
fmuls
xchg
lret
push
out
mov
hlt
lret
jae
pop
mov
loopne
imul
sbb
inc
push
subb
add
lods
enter
mov
and
fidivs
inc
roll
mov
jnp
movsl
insb
pop
or
iret
and
sbb
int3
xor
cmp
repz
scas
outsb
popa
and
mov
dec
cwtl
mov
pop
xchg
jb
into
out
or
insb
xor
and
fnstenv
je
xchg
sub
mov
cmp
xor
sahf
inc
push
adc
cmp
jae
xchg
mov
daa
ss
fstpt
and
rcrl
lea
jecxz
cmpsl
lock
cmp
insb
mov
and
imul
fdecstp
mov
jne
pop
lock
stc
cltd
das
dec
dec
aam
ret
cwtl
aas
sti
ds
mulb
push
xlat
inc
xor
pop
scas
iret
and
leave
loope
scas
inc
sbbl
ss
arpl
fidivrs
and
mov
sub
xchg
jno
pushf
cmp
lods
js
imul
aas
insl
jmp
movsl
or
jmp
sub
in
popf
cwtl
out
or
sbb
daa
dec
ds
cmp
outsl
jnp
out
scas
movsb
mov
xlat
pop
mov
out
mul
mov
pop
jno
inc
std
inc
addl
lret
outsl
loop
imul
cltd
movsl
test
mov
inc
adc
or
pop
push
cli
xchg
arpl
xor
mov
arpl
cmp
lds
add
and
xchg
inc
and
inc
mov
mov
xor
repz
das
mov
imul
pushf
loopne
push
mov
mov
adc
adcb
cmp
pop
push
in
stos
mov
and
cmp
into
js
in
clc
aam
std
mov
add
shll
mov
fstl
dec
xchg
cld
or
scas
jnp
xchg
int
repnz
or
outsl
jmp
hlt
jae
sbb
addr16
xor
imul
xor
je
sub
push
lea
mov
sbb
leave
ja
or
dec
add
fidivs
pop
inc
fwait
aad
lock
nop
inc
mov
add
cs
aad
xor
lea
cmc
loope
cmovbe
popf
xor
cmp
inc
lods
jae
adc
stos
pusha
dec
xchg
pop
cmpl
movsl
xchg
xor
or
pop
aad
mov
aam
aas
sub
pop
cld
push
addr16
div
cmp
shlb
idivl
popf
mov
pop
cwtl
rclb
cmp
fidivl
popf
cltd
push
or
in
and
dec
mov
adc
add
xchg
jle
mov
jns
adc
iret
mov
sti
inc
pop
add
aaa
in
fdivp
sub
xor
mov
cwtl
adc
or
or
aaa
test
test
pop
out
mov
mov
ds
fistl
sbb
xor
or
inc
inc
movsl
add
loope
inc
add
insb
in
jmp
add
xor
negb
imul
dec
cmp
je
lock
rclb
into
movsb
xor
movsl
movsb
fwait
ret
mov
push
adc
jns
aas
aad
imul
fstpl
xor
out
mov
push
jbe
dec
std
inc
cld
xor
ja
jmp
add
sub
test
xlat
test
gs
mov
mov
and
lcall
negb
xor
mov
insb
in
and
pop
push
xchg
xchg
xsavec
dec
divb
push
insl
insb
push
xor
in
addr16
sbb
mov
orl
xchg
xrelease
mov
inc
repz
dec
adc
js
and
xlat
push
nop
leave
sbb
xchg
xor
repnz
mov
pop
test
stc
mov
sbb
mov
push
enter
dec
cmp
pop
mov
enter
arpl
test
xchg
imul
data16
mov
and
pop
sbb
les
cmpsb
repnz
imul
mov
and
and
xchg
sbb
mov
aas
adc
mov
jnp
pop
std
xor
mov
push
xor
cmp
cmp
arpl
dec
pop
and
and
mov
into
or
ljmp
push
pop
out
jb
xchg
lods
mov
jns
test
adc
fidivl
mov
push
test
sub
into
fisubrl
ficompl
stc
sbb
mov
push
fldcw
cmc
stos
mov
inc
push
push
pop
popa
mov
popa
inc
xchg
cmc
lcall
push
mov
bound
aas
in
push
std
pop
mov
jnp
cmp
xor
xchg
dec
ja
aaa
pop
sahf
sahf
popf
clc
pop
addr16
add
pop
mov
cmpl
mov
pop
and
sbbl
in
and
push
int3
sbb
mov
cmp
loop
add
scas
xorl
xor
jo
xchg
mov
loopne
out
imul
sbb
mov
sub
push
sub
jae
dec
adcl
cld
sti
lods
cs
add
in
lret
mov
jge
addr16
xchg
insl
push
dec
xor
jnp
dec
call
stc
jge
xchg
mov
cmp
sbb
dec
jno
daa
mov
add
ret
lods
and
fwait
or
and
fsubr
add
lea
out
ret
dec
mov
loopne
push
dec
shlb
mov
lcall
scas
mov
or
cltd
inc
imul
scas
xlat
lds
jne
cmp
shr
push
pop
cmp
addr16
out
inc
mov
jge
mov
ljmp
or
jnp
adc
sbb
dec
ficoml
lret
cmpsb
je
aad
xor
cmp
mov
sahf
sbb
fadds
dec
mov
lret
sbb
cmp
inc
pop
idivb
and
cmpsb
jmp
ret
test
rcr
sub
dec
es
pop
xor
pop
mov
mov
push
inc
gs
nop
mov
ljmp
push
or
lods
sti
stos
and
adc
push
sbb
or
adc
dec
call
movzbl
sar
sbb
sahf
and
inc
dec
jb
sub
sub
adc
adc
hlt
imul
sbb
add
xchg
arpl
rcl
shll
leave
mov
add
pusha
shrl
xchg
loop
jne
mov
xor
sub
dec
mov
test
lahf
sbb
fcmovnbe
pop
mov
cmp
aam
dec
jecxz
push
rcrb
rcll
sbb
jg
xchg
ret
or
clc
mov
jge
xor
jmp
ficompl
sti
lods
gs
stos
int
fisubrs
rcrb
dec
cmp
push
lea
add
outsl
jb
int
orl
fistpll
bound
pop
jnp
jl
xchg
and
stos
mov
add
jmp
les
fcomps
daa
lcall
test
inc
dec
dec
push
lahf
ja
jmp
add
inc
mov
xchg
push
test
lret
push
aaa
lret
pop
ja
lods
xchg
adc
dec
rcr
and
adc
push
jnp
pop
jp
mov
mov
stc
mov
sbb
test
inc
and
jno
fcomps
out
add
repz
ficomps
sbb
jl
stos
and
aam
mov
xchg
xor
mov
int3
jl
imull
xor
sub
adc
fimuls
in
es
mov
xchg
xchg
adc
cmp
call
negb
pop
les
cmp
jmp
and
pop
push
xlat
push
push
daa
dec
scas
push
pop
cmp
addr16
std
mov
jo
jge
subl
sub
sbb
jge
jae
mov
ljmp
xorb
push
and
cs
mov
insl
cwtl
scas
cmp
test
lret
pop
sub
xor
or
dec
push
pop
add
push
inc
mov
jns,pn
sub
xor
push
arpl
push
inc
mov
mov
pop
xchg
call
mov
jb
mov
pop
mov
jmp
xchg
pop
in
fisubrs
test
mov
dec
mov
cmp
jno
pushf
es
xchg
inc
sub
xor
mov
push
mov
ss
jno
imul
push
out
push
mov
jns
test
cmp
shlb
movsl
js
mov
lahf
mov
mov
pop
js
stc
out
mov
pop
ret
popa
push
repz
pop
jecxz
ja
xor
and
push
push
mov
stos
xchg
push
rcll
incb
inc
popf
jo
xor
inc
andl
cmp
or
cmp
cltd
mov
dec
in
sbb
rcrl
add
jns
loope
mov
jb
inc
xchg
and
adc
sub
popf
movsl
xchg
sub
cmc
mov
and
loopne
and
xchg
ja
mov
les
mov
arpl
adc
cwtl
adc
xor
xchg
ret
xor
mov
jmp
add
nop
pop
call
cmpl
xor
stos
inc
call
dec
push
mov
fldl2e
inc
push
cwtl
adc
xor
popf
dec
ret
inc
mov
sub
jle
push
xchg
pop
pop
sbb
or
fsubs
sub
insb
adc
loop
fdivrp
rcr
enter
test
mov
popa
incb
push
mov
mov
mov
ds
xor
push
dec
sub
sub
sub
adc
cwtl
ds
jmp
sbb
jbe
ffreep
pop
jle
lods
pushf
cmpsl
aad
or
es
cmp
inc
xchg
les
fstps
cmp
ds
fsubrs
push
stos
pusha
xchg
outsb
mov
cmp
mov
dec
cs
or
pop
push
jo
xchg
jl
in
jp
aam
aas
adc
mov
sbb
or
push
enter
push
and
pusha
bound
or
insb
arpl
ss
sti
fidivrl
sub
gs
xor
aaa
push
repz
pop
sbb
pop
sbb
fisubl
xchg
mov
fsubl
mov
xlat
out
ja
and
xor
lret
jmp
mov
jb
sub
dec
dec
xor
push
dec
xchg
pusha
push
pop
push
fsubrl
jg
filds
pushf
fdivrs
cmp
sbb
inc
scas
movsl
loop
push
shrb
xchg
push
fists
jle
stos
ja
jg
sahf
pusha
jecxz
test
jge
and
sbb
mov
out
sub
insl
add
pop
mov
push
lds
mov
out
xchg
sbbl
pop
cmp
arpl
movl
jg
cmp
mov
out
dec
cmpsl
sbb
and
nopl
push
out
sahf
mov
mov
lock
and
pop
push
data16
xor
lea
sub
mov
pop
movb
and
loope,pt
mov
jnp
xchg
mov
mov
mov
jge
mov
push
and
aas
jne
outsl
loope
insl
loopne
mov
lcall
and
scas
lahf
jo
divl
pop
jle
dec
fs
jmp
out
ljmp
lcall
imul
mov
adc
push
sub
ret
ret
shrb
inc
lods
stos
jle
push
jp
hlt
sub
push
shll
adc
sbb
inc
cmpsl
inc
or
sub
inc
push
push
sub
inc
test
cmp
int3
jno
lcall
jecxz
jne
clc
incb
dec
ret
repz
js
cmpsb
pop
stos
xchg
cmp
push
ficoml
hlt
lods
inc
dec
faddl
mov
mov
mov
dec
imul
or
push
push
mov
int3
pop
cld
nop
inc
out
stc
push
and
xchg
dec
push
push
sub
js
movsl
jb
bound
and
pop
or
stos
mov
or
or
sti
mov
cmp
mov
jl
lds
mov
jnp
pop
popa
jo
aaa
pop
adcb
xor
jl
adcl
fildll
je
ret
fs
inc
jo
jle
aad
popf
dec
not
in
cmp
add
cmp
mov
aaa
shr
shr
push
fs
dec
xor
inc
outsb
cmp
lds
gs
pop
mov
pop
out
jne
pop
xchg
sub
andl
rorl
aaa
ret
enter
inc
stos
in
dec
out
or
mov
repz
mov
push
pushf
push
ror
jno
push
push
mov
iret
popf
and
cmp
dec
push
out
fsubs
add
mov
mov
xchg
mov
bound
mov
inc
pushf
aaa
repnz
imul
sub
jecxz
addr16
movsl
push
aas
jle
sub
push
jno
nop
inc
and
inc
push
sub
repz
or
xchg
or
sbb
jnp
jl
jle
sti
lret
cmc
hlt
pop
cld
cli
sbb
fwait
adc
mov
out
out
fistpll
test
outsb
ss
xchg
sub
or
icebp
andb
xchg
fldcw
adc
push
push
mov
push
into
mov
mov
cltd
fcomip
dec
mov
in
push
jnp,pn
fmull
scas
push
fists
out
int
xchg
test
push
sbb
push
pop
aad
cld
pop
inc
inc
lcall
ljmp
or
js
jb
imul
mov
in
sahf
mov
fwait
mov
cli
insb
mov
shll
lret
push
xchg
leave
in
mov
mov
dec
xor
cmp
sbb
inc
hlt
xchg
xchg
cmp
ret
fs
mov
les
jge
divb
inc
popa
dec
jecxz
cmp
mov
pop
int
and
ljmp
push
sub
pushf
and
fs
adc
stc
test
cmpb
insl
popf
push
push
es
cltd
data16
andb
les
fcmovb
push
cmp
ljmp
rorb
ja
fisubl
mov
xchg
aaa
int
cmp
or
jo
iretw
int
cmp
rclb
mov
aaa
mov
pop
jle
adc
imul
mov
push
lods
test
sub
mov
push
adc
mov
sbb
movsl
sbb
pushf
cmc
movsl
scas
pop
mov
mov
fisubrs
cwtl
aad
jp
jge
add
adc
or
xor
clc
sbb
pop
jno
inc
ljmp
iret
vpunpcklqdq
sbb
mov
mov
mov
push
test
cmpsb
ret
je
mov
je
test
push
fcompl
lock
cmp
mov
in
sti
lods
xchg
jl
pop
aam
mov
stc
and
mov
cmp
hlt
dec
mov
jl
pop
std
pop
push
or
mov
mov
mov
fcomip
rcl
mov
and
sahf
dec
jp
aad
lea
push
xchg
pop
xor
movsl
out
push
nop
je
shr
dec
pop
adc
push
aas
adc
sub
out
insb
hlt
dec
lret
jp
inc
add
sub
ja
fwait
push
es
cmp
mov
addr16
dec
icebp
pop
sbb
xor
mov
xchg
and
insb
mov
cmp
pop
divl
subb
add
inc
nop
pop
push
test
lea
mov
into
fsubrl
add
mov
adc
mov
pop
psubq
scas
jp
ljmp
sar
bound
xor
lret
movsl
ds
xchg
jecxz
sub
in
and
xor
jmp
mov
adc
aad
test
pop
xor
dec
adc
ret
cmp
arpl
push
sahf
sbb
adc
mov
xor
sub
push
mov
dec
sbb
inc
stos
loopne
sbb
es
aaa
notb
cltd
push
cli
mov
cmpsb
shufps
mov
adc
fldenv
call
mov
out
push
test
sub
inc
and
jno
or
fwait
jns
mov
lods
inc
pop
out
clc
fldt
fstl
or
mov
jmp
xlat
shr
cwtl
jmp
and
outsl
ret
push
cmpsl
and
cmp
fsubs
js
out
push
mov
ljmp
fisttpll
pop
pop
inc
xor
rorb
and
cmpsb
mov
inc
je
imul
cld
pushf
mov
out
repz
adc
push
sbb
push
loope
push
dec
mov
lret
and
sbb
rcrb
sbb
sbb
in
sub
cmpps
xchg
mov
in
cltd
push
jecxz
lods
repz
fwait
and
insb
fildll
sbb
lds
xor
xor
ss
pop
mov
dec
push
mov
aam
add
jnp
shrl
pop
jl
inc
dec
jg
pop
out
adcl
loope
jne
jge
fistpl
stc
xchg
notb
shlb
push
sub
daa
sub
movsb
and
xbegin
cs
push
mov
mov
dec
lret
cmp
mov
adc
cs
leave
mov
hlt
outsb
sub
push
sub
or
jl
cmp
jns
fcomp
imull
sub
adc
aaa
fdivl
push
or
jne
or
xorl
sub
jge
cmp
pop
ss
push
pop
mov
int3
jmp
and
or
mov
fcompl
fs
lretw
scas
xor
push
or
xchg
arpl
xor
xor
jno
jne
out
mov
stos
mov
into
cmp
sub
mov
jnp
gs
xor
add
daa
aam
inc
dec
ret
xor
xchg
lahf
push
loope
mov
jb
outsb
xchg
mov
sub
sarb
loope
cmpsb
mov
fbstp
or
jnp
sbb
jmp
and
cmc
loope
pop
inc
fildll
mov
push
cmp
push
nop
mov
in
in
sub
jge
xchg
jp
jmp
out
push
or
popa
push
dec
push
inc
fucomip
cli
mov
mov
enter
adc
clc
push
dec
subl
shll
xchg
or
pop
mov
push
sahf
mov
sub
incb
dec
xchg
adc
sub
in
dec
pop
and
or
jnp
test
shl
enter
sbb
cmp
jnp
jno
lea
or
or
fstpl
mov
fbld
out
imulb
sbb
inc
stos
xor
inc
hlt
imul
and
cltd
jg
dec
cmp
lcall
stos
pop
xlat
shlb
das
nop
je
sbb
xor
sbb
dec
insl
dec
lods
lcall
jp
inc
cmp
mov
pop
and
pushf
imul
jp
and
nop
rcrl
bound
add
mov
mov
inc
outsl
subb
cmp
stc
div
pop
cmpsl
popa
aam
outsb
cwtl
push
subl
or
mov
shll
adc
scas
jne
into
adc
aam
pop
imul
dec
mov
ja
push
dec
jbe
pop
lds
nop
mov
mov
testl
shrb
inc
xlat
adc
arpl
movl
add
and
mov
outsl
rcll
lods
nop
es
sbb
in
sbbb
cltd
iret
jl,pt
loope
or
icebp
mov
inc
mov
mov
add
gs
mov
pop
jno
fwait
inc
je
xlat
popf
scas
mov
jb
add
das
les
pop
push
dec
out
dec
imul
or
out
imull
popa
mov
or
loope
movsl
push
dec
lret
sbb
insl
xchg
lcall
cwtl
ljmp
and
pop
call
adc
arpl
jge
add
sti
ja
repnz
mov
mov
dec
mov
jo
mov
xchg
adc
daa
sbb
ja
dec
ret
cwtl
mov
or
or
stc
ficoml
adc
inc
push
daa
int
lahf
dec
jne
je
bound
inc
sub
mov
cmp
pop
int
and
fcomip
sub
orl
aad
mov
dec
iret
scas
dec
ret
je
push
hlt
jbe
inc
xchg
and
test
int3
pop
jno
xchg
push
xchg
into
or
and
or
loop
jp
adc
stos
push
fildl
mov
mov
bound
push
je
and
lahf
inc
in
add
adc
inc
pop
jo
push
insb
inc
sub
adc
les
or
ror
and
and
sahf
xor
xchg
fsubr
and
xor
in
or
dec
mov
repnz
jo
test
mov
nop
loope
or
add
loopne
jle
jle
inc
inc
out
subb
push
inc
add
mov
movsl
and
pop
pop
mov
mov
jl
sbb
jns
ljmp
add
mov
jge
dec
lea
mov
daa
push
adc
jge
out
dec
and
int3
inc
push
and
outsl
data16
or
jb
sbb
hlt
xchg
lds
add
inc
mov
ficoms
push
and
xor
adc
insl
cmp
xlat
mov
or
sbb
addr16
and
mov
cmpsb
addr16
outsl
add
mov
add
mov
rorb
out
arpl
imul
cmpb
std
lahf
add
icebp
mov
xchg
dec
add
mov
add
mov
xor
aad
sbb
xchg
dec
in
testl
call
xchg
mov
add
adc
test
movsl
ret
inc
pop
pop
jmp
adc
ror
sbb
stos
mov
adc
sahf
push
mov
xor
ss
and
movsb
sbb
jge
cmp
add
aam
mov
test
outsl
cmc
in
lods
cld
xchg
mov
mov
xor
jg
lea
mov
inc
cltd
mov
sahf
mov
test
das
pop
pop
mov
cmp
pop
sti
inc
push
pop
cs
jge
jl
add
out
cmp
mov
cld
xor
push
cmp
dec
adc
mov
into
pop
and
mov
sbb
jb
testl
sub
mov
aas
lret
cmp
push
pop
inc
ret
and
pop
mov
loop
decl
mov
fists
sahf
daa
cmpsl
repnz
out
sbb
stos
mull
xor
and
adc
xor
cwtl
jo
mov
push
lahf
push
cmp
mov
les
loopne
aad
xor
jbe
and
lcall
push
sbb
fcmovnu
pavgw
pop
rolb
dec
xchg
and
ret
int
fsubl
cld
dec
mov
pushf
mov
or
and
pop
shlb
rclb
mov
in
cmp
mov
mov
mov
inc
adc
lret
push
stos
adc
pop
sub
fistps
stos
jecxz
cld
fisubl
movsl
enter
pop
js
arpl
jb
stos
addl
or
inc
and
dec
mov
inc
xchg
scas
mov
pop
stos
lock
mov
mov
adc
scas
jle
mov
fidivl
dec
jb
sti
inc
daa
mov
jle
mov
clc
inc
or
push
sbb
or
jo
inc
jne
sub
xchg
int
test
cs
push
mov
xor
and
mov
andl
jp
xor
pop
push
nop
xchg
xchg
bound
xchg
or
out
add
pop
xor
jb
out
or
mov
int3
cmpsb
pop
mov
push
lret
sbb
mov
js
lret
enter
pushf
ja
xchg
leave
sahf
repz
mov
ja
cmp
aam
xchg
inc
xlat
sub
and
test
sti
cmpsl
rorl
pop
loope
mov
mov
test
aam
arpl
mov
cmp
jne
or
sub
sub
jns
or
jle
xor
in
jmp
push
add
call
pop
mov
aam
cmp
push
mov
ds
stos
cmp
sub
sub
lcall
mov
loope
jp
fiaddl
cmpb
mov
mov
ret
test
out
flds
sub
pushf
push
fadds
lock
hlt
dec
aam
pop
mov
mov
xor
mov
mov
daa
dec
scas
int3
pop
pop
or
push
xorb
sbb
jbe
and
dec
das
loope
cmc
daa
mov
leave
ds
aad
inc
int3
cmc
jg
loop
mov
mov
cmp
arpl
sahf
dec
and
xchg
jns
lret
cmpb
dec
ja
push
pop
imul
pop
lahf
xchg
add
sbb
mov
jno
mov
aas
xor
pusha
dec
xchg
lea
shll
cmpsb
xchg
sbb
push
mov
outsb
dec
lret
pop
out
or
mov
jp
mov
loope
pop
pusha
aad
mov
xchg
mov
adc
cld
popf
adc
std
loopne
rcr
popa
into
add
dec
xchg
getsec
ret
popa
xchg
sar
xchg
mov
add
das
jl
xor
jne
add
cwtl
adc
adc
inc
fldl
mov
repnz
jb
cmc
xchg
test
cld
fdiv
pop
pop
stc
inc
fwait
lahf
fdivp
jmp
insb
mov
cld
mov
pusha
xchg
mov
jmp
repz
bnd
test
imul
dec
shlb
enter
stos
cmp
xor
dec
jmp
rorb
jne
xchg
cmp
test
imull
add
in
mov
in
repnz
sbb
ljmp
mov
rorl
mov
loop
push
push
jo
fsts
jb
pop
inc
pop
or
dec
sub
mov
dec
jnp
mov
xor
out
jge
into
xchg
scas
test
xor
andb
jge
mov
lds
xchg
or
xor
rcrb
std
mov
mov
dec
dec
scas
sbb
stos
push
adc
fsubr
mov
xchg
mov
aam
shll
cld
xor
pop
inc
scas
pusha
test
mov
xor
add
adc
push
mov
push
mov
aad
int3
daa
fbstp
cli
ss
movsl
mov
lds
lret
aam
add
scas
cmpsl
jno
cli
xor
and
sbb
shr
test
cmc
jae
sarl
push
or
movsl
cmp
sub
fcmovbe
cmp
in
das
push
insb
mov
mov
scas
push
xor
pusha
lea
mov
fbstp
sub
inc
sub
cltd
jo
push
insl
mov
loope
popa
adc
in
lcall
sub
fucomp
jecxz
mov
sbb
nop
cmp
sbbw
mov
sti
xchg
jl
mov
shll
lret
enter
pop
stc
cmpsb
jns
or
fdivr
mov
in
add
out
cld
in
push
mov
cwtl
cmp
mov
shl
fldpi
repz
dec
std
fstpt
cmpsb
cmp
mov
push
mov
or
in
xor
popa
fcomi
aaa
cmp
leave
cmpsb
arpl
cmpl
jle
xor
mov
mov
cmp
stc
pop
sbb
mov
popf
jns
adc
mov
push
imul
jg
inc
mov
stos
cmc
insb
inc
add
fidivs
xor
and
add
xchg
ret
ret
lahf
and
xchg
jbe
push
in
push
stc
and
sub
cs
push
xor
jl
push
inc
out
insb
int3
pop
leave
mov
and
adc
sbb
xchg
pushf
push
insl
mov
mov
xchg
popa
cld
sbb
adc
lcall
push
lret
js
insb
aas
mov
mov
lods
inc
clc
cmp
loopne
out
mov
lods
sbbb
sub
dec
scas
notrack
mov
and
test
mov
add
jle
sarl
or
imul
sub
std
sub
pop
pusha
pop
cmp
mov
mov
into
popf
shrb
jle
ret
cmc
sub
js
outsl
or
arpl
and
loopne
pop
xor
shll
outsb
cmp
fsubrl
mov
jg
or
sub
dec
xorl
imulb
gs
enter
ja
push
aad
cmp
aad
inc
fwait
pop
insb
popa
pop
pop
rcl
push
filds
fsubs
cmp
push
xchg
xchg
add
imul
add
inc
lock
sbb
sub
or
lea
fisttpll
movsl
pop
push
jmp
jb
test
or
rolb
xchg
les
push
aam
flds
jno
int3
mov
push
push
aam
xchg
movsb
xor
push
sbb
lods
cmpsl
pop
int
outsb
add
mov
lcall
adc
dec
mov
hlt
mov
add
jecxz
xchg
mov
push
fidivrs
lret
mov
sbb
sbbl
clc
pop
jg
out
mov
aas
and
popf
aaa
loop
jae
ror
mov
mov
mov
and
adc
inc
rolb
or
adc
fisttpll
dec
loopne
mov
ss
ret
imul
push
movsb
cld
xlat
fucompp
xchg
sub
inc
mov
loopne
jbe
mov
jo
and
xchg
sbb
jbe
fdivl
mov
and
loopne
push
fcomp
mul
and
dec
das
sub
cmpsl
xchg
mov
mov
add
mov
cmc
cmp
fs
lods
insb
mov
pop
push
add
adc
and
mov
sbb
cli
lds
push
jge
push
gs
mov
lret
clc
xchg
rcrl
lds
mov
ret
in
jae
pop
and
mov
dec
loop
inc
inc
addr16
sub
aas
inc
xchg
daa
ljmp
pop
and
ss
sbb
xor
mov
mov
ss
inc
and
cmpsb
xchg
xchg
insb
out
scas
xchg
adc
inc
shll
xor
aaa
mov
unpckhps
lock
mov
incb
and
ror
cmpsl
les
inc
and
inc
fxch
push
scas
and
push
rol
sub
lds
inc
dec
xorps
sub
mov
dec
sbb
test
push
sti
aad
pop
ret
fimuls
jbe
iret
jnp
adc
insb
xchg
mov
add
or
cmp
xor
pop
out
add
cmp
or
lods
pop
lods
orb
or
movsl
pushf
jo
push
xchg
mov
out
std
mov
test
dec
ret
leave
dec
shlb
push
mov
mov
imul
pop
repz
adc
add
cltd
mov
mov
in
imul
es
xlat
cmp
lcall
lock
jecxz
jo
push
cmc
repnz
out
roll
push
sub
pop
pop
lea
xor
lret
jae
test
repnz
pop
loop
fs
dec
xlat
or
hlt
dec
rolb
cld
push
ret
mov
adc
mov
rcll
mov
adc
scas
fbld
xor
and
ljmp
outsl
jb
mov
inc
ljmp
pop
push
push
insb
ljmp
ljmp
mov
js
lods
add
test
mov
adc
push
fmulp
in
sahf
cmpb
imul
jnp
sub
or
pop
jle
mov
dec
imul
or
lods
jns
cs
push
mov
pop
jg
pushf
pop
lcall
xchg
rclb
imul
repnz
ja
and
in
mov
popf
mov
in
fninit
std
inc
gs
or
jg
push
xor
clc
lock
fistpl
adc
negl
les
in
not
xchg
stc
sahf
cmp
add
outsb
out
cmp
add
xor
loopne
add
dec
dec
shl
loope
lahf
rorl
jmp
adc
popf
adc
sahf
jo
jno
testl
mov
stos
jnp
sub
sbb
shlb
fcompl
cltd
sti
je
cs
stos
mov
aad
dec
cltd
pop
cmp
testl
mov
fidivl
aad
dec
and
mov
aas
idivb
jbe
xchg
and
lahf
in
cmp
lds
jnp
dec
push
fnstsw
sahf
filds
pushf
push
lahf
adc
ss
pushf
sub
cs
fcmovne
jnp
adc
jecxz
inc
imul
sti
sbb
pop
pusha
js
jmp
xchg
das
jp
dec
dec
push
adc
stos
frstor
sub
movsb
cmp
imul
pop
add
push
fstl
movsl
popa
sbb
dec
out
sub
dec
push
cs
xor
inc
pop
mov
cmp
or
xchg
hlt
rcr
adcb
xor
bnd
out
dec
int3
and
mov
icebp
xlat
push
mov
in
mov
mov
rorb
aad
aad
enter
jbe
adc
dec
jb
sahf
arpl
cs
outsb
push
mov
call
add
js
adc
lds
cmovs
dec
rcrl
jo
push
dec
and
push
clc
mov
or
and
mov
inc
je
adcb
cmp
add
jl
sub
jno
ja
jecxz
test
and
mov
push
xchg
ss
mov
cmp
out
or
sbbl
mov
mov
cs
cmpsl
inc
das
clc
mov
or
dec
mov
int3
ret
pop
mov
bound
lods
mov
and
scas
xchg
mov
xchg
mov
daa
mov
cli
push
xorb
add
sbb
lods
xchg
jg
fsubrs
out
out
adc
and
lret
pusha
push
xlat
xchg
sub
es
fmulp
popa
in
mov
adcl
call
cli
cmp
fildll
or
pusha
fmull
lock
aam
mov
mov
aam
popf
mov
xchg
shl
or
pop
inc
mov
nop
roll
jle
mov
cmpsl
out
xchg
mov
push
ss
stos
movsl
stos
jns
xorl
xchg
js
pop
rcll
gs
sarl
xor
mov
mov
push
mov
xor
and
in
cwtl
jno
addr16
idiv
push
fisubrs
adc
push
dec
push
mov
push
inc
adc
fmuls
or
mov
movsl
scas
out
test
bound
push
mov
rclb
dec
cmp
pop
fnstsw
popa
push
cmp
mov
in
or
cli
imul
inc
pusha
stc
cmp
add
test
jle
or
and
xchg
daa
jle
fcomps
jns
pusha
ret
repnz
cwtl
fnsave
adc
jmp
js
dec
in
jp
inc
mov
push
dec
dec
cli
loop
jbe
jo
cmp
adc
sbb
add
jb
sbb
and
push
das
and
cltd
sub
or
mov
in
sbb
pop
pop
sbbb
or
aam
into
jl
ficomps
movsl
sbb
imul
iret
add
xchg
jo
jecxz
iret
hlt
stos
xor
aaa
sub
push
push
in
jb
jmp
lret
test
adc
scas
ucomiss
shlb
repnz
xchg
dec
bnd
daa
ret
jp
push
sbb
mov
and
in
cmp
xlat
and
sbb
cmp
sub
mov
jge
fdiv
js
or
sbb
jmp
or
cmp
push
sbb
add
ja
mov
stos
cmp
mov
call
pop
mov
call
mov
push
insl
cltd
jae
dec
push
sbb
iret
lods
lret
mov
pop
mov
and
pop
push
andb
xor
sbb
dec
int3
lcall
xchg
jbe
mov
sub
xchg
pushf
inc
scas
insb
and
mov
fdiv
mov
or
inc
mov
and
cmp
inc
pop
xchg
les
mov
xlat
int
outsl
sbb
fisttps
sbb
pop
fmuls
add
in
mov
and
push
cmp
pop
fucomi
ss
cmc
jbe
cmp
sbb
daa
mov
xchg
inc
pusha
or
ss
aad
mov
jne
xchg
cmp
sbb
mov
loope
inc
test
outsl
add
pop
out
data16
push
and
stc
add
fsubrl
push
inc
xchg
in
xor
add
popf
lods
mov
sub
push
xchg
pushf
xchg
adc
rcr
and
pop
es
mov
arpl
xchg
xor
lods
mov
mov
sbb
ret
stc
mov
adc
sub
es
testb
mov
mov
inc
cmp
dec
mov
add
xchg
js
daa
jnp
pusha
sbb
popf
adc
test
adc
jns
inc
ret
mov
adc
shrb
jge
repnz
lret
xorl
jns
daa
sbb
mov
sub
daa
mov
leave
out
in
or
into
mov
sub
scas
jecxz
aas
jo
sub
xchg
or
cmp
imul
rclb
bound
mov
mov
jle
cmp
sahf
movsl
pop
xor
inc
xlat
mov
push
in
adc
xchg
out
pop
rorl
ds
fstpt
add
dec
push
mov
xor
test
xchg
mov
lahf
xchg
loop
cwtl
repz
inc
dec
jne
push
adc
inc
mov
or
add
mov
enter
fucomp
and
sub
aad
mov
fiaddl
iret
mov
and
pusha
pop
mov
xor
jp
xchg
dec
clc
sbb
insl
xchg
mov
nop
add
jno
cli
jno
add
jne
push
xor
mov
rcrl
ret
ss
aaa
cmc
cli
and
das
sbb
xchg
in
add
jns
sub
shll
and
test
xchg
inc
inc
mov
jb
data16
mov
sbb
loope
dec
mov
movsb
test
mov
stc
and
xchg
cltd
pop
int
dec
scas
stos
repz
sub
sbb
jns
sub
data16
iret
or
cmpsl
shlb
mov
ret
test
lret
inc
pop
jp
add
mov
and
sbb
popa
dec
popf
lahf
test
mov
lret
mov
imul
cmp
adc
add
push
test
jge
add
add
movsb
movsl
faddp
pop
inc
int
sub
loop
xchg
inc
enter
xchg
or
repnz
sbb
hlt
aam
pop
repz
jns
pop
dec
pushf
or
je
sti
mov
xchg
nop
fisubrl
cmp
adc
and
in
jnp
out
mov
pop
or
fs
lahf
outsb
mov
pop
mov
mov
adc
xor
push
out
std
jne
add
pop
sbb
andb
pop
fsubs
out
adc
fsubrl
dec
stos
out
xchg
bound
or
sbb
sbb
and
fnstenv
gs
scas
es
lret
aaa
pop
ret
lret
fsubl
push
cmp
mov
enter
push
inc
lock
hlt
pop
aam
xor
lcall
mov
pusha
int3
fsubs
scas
xchg
jp
push
xchg
fiaddl
loopne
into
push
iret
add
lret
mov
clc
adc
pushf
repnz
inc
jl
mov
sub
add
mov
push
cmp
or
mov
dec
xchg
jno
enter
in
jno
std
enter
pop
inc
jmp
jl
xchg
pushf
scas
loope
and
push
inc
idivl
mov
sbb
sbb
mov
sbb
loop
loop
imul
es
fwait
push
add
scas
pop
add
and
dec
jecxz
std
icebp
pusha
outsl
pusha
dec
icebp
std
push
mov
loope
aad
out
adc
adc
stc
pop
out
jle
cmp
xor
add
inc
pop
sub
and
sbb
sub
mov
xchg
or
incl
loope
cmp
push
jns
lret
adc
xor
pushf
mov
cmp
mov
xchg
fnstcw
repz
fldl
xor
push
jno
lock
lret
lods
adc
adcb
bound
add
pop
stos
mov
cld
pop
mov
enter
nop
repnz
sarl
stos
shr
popf
mov
test
xor
add
adc
loop
sbb
jo
push
lret
shrb
inc
movsb
movsbl
mov
mov
sub
sub
test
aaa
xchg
inc
stos
ret
mov
das
xchg
ja
push
nop
stos
fistps
lea
adc
or
dec
xor
inc
mov
inc
ja
fdiv
xor
into
mov
les
aad
test
inc
arpl
loop
mov
daa
and
push
adc
mov
sbb
xchg
pusha
shrb
into
sahf
insb
into
jecxz
sbb
jle
xchg
add
dec
jb
int
mov
jmp
cvtps2pd
mov
dec
mov
repz
sti
aaa
js
int
mov
mov
jae
nop
mov
addr16
ds
mov
outsl
shr
inc
mul
mov
sbb
xorb
mov
dec
cmp
popf
add
sbb
dec
sbb
or
ffree
ret
insb
jmp
push
jg
in
dec
push
lock
pop
mov
xor
and
cwtl
stos
mov
shrl
cmp
jo
loop
repz
add
mov
fcmovbe
mov
dec
sub
and
push
mov
jae
cmpsb
mov
jbe
sahf
xchg
pushf
fnsave
into
sbb
sub
hlt
xor
lret
sub
in
out
or
add
fcmovnb
cmpsl
xchg
es
pop
adc
lret
call
sbb
int
cmc
scas
leave
fsubr
movsb
imul
fs
cmp
fdivl
and
or
push
sbb
cmp
clc
mov
popa
adc
scas
or
mov
jno
repnz
movb
jl
lock
gs
and
xor
and
gs
clc
and
xor
jg
add
fsubp
lods
scas
mov
out
sahf
int
scas
push
pop
fimull
mov
lock
xchg
xchg
movsb
lds
cmp
fdivr
test
push
push
inc
adc
pushf
shlb
sub
mov
sub
push
popf
mov
adc
mov
mov
movsb
add
bnd
scas
inc
aad
dec
aam
cmp
xlat
nop
andb
sbb
pop
push
jb
in
xor
jmp
sbb
repnz
cmp
test
jns
cmp
push
insb
push
push
pushf
aas
jbe
sbb
insb
inc
mov
shr
adc
rorl
push
aad
xlat
dec
jo
inc
test
or
insb
xor
jl
xor
pop
lret
stc
mov
adc
mov
idivb
and
lret
scas
jo
fcmovbe
pop
cmpsl
cmp
pop
dec
fbstp
pop
outsb
std
dec
das
mov
xor
iret
mov
aas
out
imul
xor
lds
dec
mov
pop
pop
clc
ljmp
out
xchg
outsl
notl
pop
sahf
jp
inc
test
sub
mov
enter
aas
xchg
or
mov
movsb
outsl
ret
dec
add
adc
jmp
lock
clc
and
cmpsl
mov
mov
sub
mov
cli
jno
test
bound
shll
lret
push
add
or
jne
mov
push
gs
scas
jnp
jbe
adc
ret
cmp
pop
inc
mov
lods
mov
inc
popf
imul
mov
orb
push
movsl
test
insl
mov
cli
out
popf
nop
inc
lret
dec
adc
repz
or
cwtl
sbb
rcll
popa
fldt
push
mov
jno
or
mov
jbe
lods
fimull
clc
test
fs
cmp
lcall
scas
ds
dec
xchg
gs
ljmp
scas
jno
sbb
icebp
lret
jae
push
cltd
in
dec
bound
out
repz
rorl
outsb
stos
or
iret
or
pop
cmpsl
ret
flds
sbb
sub
add
mov
shl
decb
dec
pmullw
hlt
mov
pop
fdivl
lret
out
push
nop
hlt
xchg
inc
sbb
pop
push
mov
aad
out
mov
sub
jge
fmull
test
dec
mov
cld
dec
push
mov
jg
push
ret
inc
sub
adc
in
js
push
inc
fdivrl
sub
fwait
sub
sub
dec
jg
mov
mov
xchg
sbb
jb
aaa
sbb
js
in
cmp
xchg
lret
popl
fisttpl
out
jmp
out
cld
mov
lds
or
lods
push
pop
loope
cwtl
sbb
xchg
mov
cli
cmp
cs
or
mov
dec
cmpsb
or
cmp
inc
aas
mul
cmc
or
mov
pop
jbe
dec
lcall
cmpsb
xorb
stos
sub
dec
mov
sbb
push
jns
adc
add
shlb
cmp
mov
adc
dec
adcb
icebp
incb
data16
repnz
mov
dec
jmp
aam
pop
sub
mov
test
sbb
pop
add
and
add
jo
dec
push
jg
scas
icebp
sahf
dec
and
test
xor
mov
pop
dec
rolb
adc
outsl
out
inc
cwtl
adc
push
lock
mov
daa
mov
dec
lret
lods
push
cmpsl
aam
jg
xchg
adc
daa
cltd
test
test
fnsave
jmp
js
aad
jg
popa
repz
hlt
cmc
popa
mov
xor
mov
popf
xor
push
pop
inc
repz
push
xchg
jae
add
lea
mov
cmp
pop
lods
xor
add
insb
dec
int3
xchg
insb
and
pushf
inc
clc
and
sub
arpl
inc
pop
push
inc
in
lock
sti
xchg
mov
scas
xor
pop
mov
pop
mov
and
add
pop
mov
inc
shll
jno
fildl
aaa
jg
mov
cld
push
mov
add
dec
aad
sbb
mov
in
cmp
jge
or
inc
rorl
lods
loop
lods
popf
mov
outsl
xor
arpl
jns
xor
jbe
pop
aas
mov
cmp
mov
jmp
adc
jne
inc
into
pop
ja
nop
jns
les
jmp
and
jns
push
inc
xor
pushf
cmp
xchg
orb
add
mov
cmpb
aaa
lds
outsl
arpl
das
gs
pop
jg
and
pop
push
push
xorl
scas
sbb
xlat
sub
fwait
inc
adc
mov
cs
xchg
mov
sub
lods
cmp
icebp
xor
and
xchg
lds
jnp
mov
daa
sub
xchg
add
push
push
mov
sarl
or
out
sub
rol
push
pusha
adc
out
cmpsl
lret
sahf
lds
ljmp
cld
sbb
adc
shlb
cmp
test
leave
push
mov
mov
cmp
lods
in
clc
cld
repz
test
movsb
pushf
xchg
test
les
lret
cwtl
sub
mov
mov
push
sbbb
push
sarb
sbb
xchg
inc
cmp
dec
xchg
pop
mov
jno
sbb
mov
rclb
cmp
cli
fldl
cmpb
shl
and
cltd
nop
cmp
int3
cmpsl
jle
in
repz
push
mov
out
cmc
pop
pop
inc
test
lds
icebp
mov
sub
fsubrl
mov
outsl
daa
or
out
mov
xchg
sub
subb
movsl
inc
mov
dec
cmp
int
cmp
addl
dec
inc
xor
xorl
call
mov
lock
cmp
inc
jns
stos
mov
dec
sbbl
jns
ret
xchg
outsl
push
cs
xchg
adc
aas
ljmp
dec
orl
mov
je
negb
in
addr16
pusha
or
inc
lahf
mov
shll
fldenv
lods
lock
mov
jmp
js
push
add
push
inc
mov
ret
dec
cmc
nop
lcall
mov
and
xor
push
sbbb
push
jge
lret
lret
dec
inc
mov
push
xor
xor
fistpll
loopne
fwait
cmp
les
inc
cmp
sub
jge
xor
sbb
movsl
inc
dec
ss
adc
inc
dec
hlt
in
cs
enter
dec
sahf
gs
aas
mov
xchg
rcll
insl
leave
orl
lea
gs
adc
imulb
and
jae
jbe
int
push
adc
inc
call
call
pop
cld
fs
arpl
test
out
dec
and
dec
test
nop
stc
out
ljmp
mov
call
insb
xor
inc
fistps
jecxz
cli
and
dec
pop
push
add
adc
out
sbb
aaa
xor
aaa
xchg
hlt
inc
rclb
mov
cwtl
mov
pop
inc
insl
mov
push
jbe
aaa
lret
and
stc
cmpsb
sbb
popl
adc
jp
lcall
ret
pusha
push
inc
es
in
dec
movsl
and
mov
jp
inc
inc
ficoml
repz
fdivrl
sub
lods
shll
jae
ret
mov
in
daa
cs
push
fs
lret
mov
jbe
mov
sub
jl
ss
adc
fisubrl
ds
ret
mov
or
imul
ljmp
inc
popf
mov
test
mov
push
aad
push
addr16
push
add
mov
dec
imul
xchg
mov
je
mov
pop
andb
push
outsl
or
int
sbb
add
sahf
mov
xor
js
sbb
inc
test
cmp
mov
push
and
and
sbb
push
or
popf
pop
enter
dec
in
ficompl
mov
ljmp
or
movsb
js
js
mov
popf
mov
add
nop
and
je
push
lods
les
scas
adc
mov
inc
adc
fnsave
sub
cs
insl
jno
mov
loopne
add
jecxz
add
stos
dec
add
jns
sub
popa
mov
ja
fsubrs
cmovle
pop
mov
sub
xchg
cmp
scas
std
test
shll
sub
dec
xor
add
push
cli
adc
shrb
jmp
lods
add
pop
aad
push
sbb
mov
pusha
mov
sbb
dec
pop
or
add
push
mov
jl
stos
shlb
inc
inc
ljmp
push
out
sub
jb
push
rorl
push
stc
ror
movsb
das
fcmovnu
fwait
adc
inc
outsl
test
and
ljmp
movsb
cli
sub
dec
add
clc
xchg
cmp
fisubl
out
jmp
sub
mov
cmpsl
jbe
and
push
lods
pop
lods
xchg
mov
pop
fdivrl
int3
push
out
test
or
pop
mov
test
or
push
cmp
stos
int
sbbb
add
out
push
jne
je
leave
lods
shrb
js
dec
subl
add
ja
into
jbe
sbb
nop
cmp
sub
imul
dec
loope
subl
aam
mov
cltd
jb
cmp
xchg
xchg
ss
adc
mov
hlt
fmulp
fstpl
fistps
rclb
icebp
and
testl
lret
dec
mov
mov
sub
mov
ljmp
cmc
add
xchg
test
push
lcall
leave
add
setae
aaa
in
popf
adc
pop
fstpt
fucomp
daa
cs
repz
out
dec
and
sarb
and
inc
iret
and
loope
xor
mov
sahf
cmp
stos
out
push
cltd
push
fisubrs
lods
inc
jb
out
pop
faddl
outsb
out
dec
and
add
arpl
jle
test
dec
pop
sbb
out
fstpl
jmp
leave
adc
mov
pop
out
test
sbb
pop
imul
cmova
push
popa
enter
mov
mov
inc
setno
mov
fsubp
jle
in
mov
inc
cmpsl
sub
cmpsb
test
lods
xchg
sahf
mov
lcall
das
mov
out
dec
out
aam
dec
jge
in
ljmp
dec
xor
adc
daa
jno
imul
pop
sbb
and
mov
jecxz
mov
adc
gs
stc
arpl
dec
mov
imul
out
iret
inc
insb
out
fisttps
add
adc
adc
or
cmp
pop
push
mov
insb
fldlg2
xchg
imulb
cmp
sub
lret
and
popf
nop
push
lock
jae
stc
mov
jo
cltd
mov
cmp
out
cli
sub
outsb
test
mov
xchg
jb
inc
stos
fs
out
xlat
gs
pusha
mov
pop
mov
shlb
into
jnp
mov
and
xchg
mov
xchg
jl
jo
pop
rorb
push
sbb
push
push
aam
lcall
xor
mov
or
aad
pop
aas
sbb
aad
cmpsl
lahf
push
cld
xsavec
inc
icebp
mov
dec
in
and
data16
sbb
cmp
sub
or
sub
xchg
outsb
idivb
cmp
into
push
push
andl
pop
adc
in
loop
jg
in
fadds
xor
sub
jb
cmp
lods
xor
mov
stos
add
out
roll
xchg
mov
repnz
mov
test
shll
pop
push
or
mov
dec
mov
fsubrs
mov
jno
pop
lds
or
out
ret
fisubrl
lods
xchg
mov
lret
fadd
mov
push
shlb
push
nop
loopne
push
popa
cltd
push
inc
fdivrs
cltd
xchg
dec
sub
xchg
sub
loope
or
jmp
mov
negl
lds
xchg
out
cs
pop
ficompl
jne
xchg
jle
inc
ret
lods
add
lahf
jecxz
push
sbb
out
movsb
lock
sbb
shrl
std
dec
xor
sub
xchg
adc
ds
jbe
test
push
test
call
jo
gs
shll
fistpll
mov
mov
add
pop
add
sub
xor
xchg
push
loope
popf
mov
jb
mov
sbb
loope
pusha
cwtl
pop
inc
pushf
jne
jno
fcmovb
xlat
add
adc
sub
mov
lea
mov
add
subl
out
adc
inc
dec
ljmp
scas
nop
dec
lret
sbb
lret
in
fwait
test
loopne
cmp
jl
inc
mov
arpl
lods
cmp
xchg
add
pop
jnp
mov
fimull
sub
out
cmpl
cmp
jb
imull
insl
and
add
pop
iret
scas
movsl
dec
or
mov
dec
or
sbb
loop
lds
xchg
fists
sub
and
int
clc
pop
loope
in
enter
fldl
divb
popf
mov
js
je
fs
sbb
lock
xchg
ret
rorl
lret
mov
arpl
nop
jmp
stos
jecxz
into
dec
cmc
xor
insl
test
sahf
mov
cmc
pop
jge
jnp
adc
pusha
xchg
std
mov
movsl
dec
inc
out
pusha
mov
push
adc
xor
loop
sbb
std
sbb
mov
pop
lock
inc
leave
aad
jecxz
es
mov
jnp
dec
repnz
push
lahf
mov
push
insb
fists
test
nop
cmp
sub
loope
repnz
clc
and
cmpsl
pop
call
cmp
adc
push
les
rcll
das
in
aaa
cmp
lret
xchg
jg
repnz
push
cmpsl
das
les
inc
xchg
hlt
aad
fldl
mov
push
dec
icebp
lahf
movsb
mov
cmp
adc
testl
aad
dec
mov
and
gs
and
ja
adc
insl
mov
sbb
sbb
popf
dec
sbbl
int
in
fcompl
push
js
int
pop
aaa
pushl
xchg
shll
add
mov
pop
pop
int3
push
xchg
mov
xchg
sbb
jb
sti
and
iret
fsubp
pop
fldt
push
pop
mov
pop
js
test
sbb
xor
push
filds
mov
loop
insl
rorl
adc
sti
imul
xchg
push
cmp
mov
adc
push
scas
pushf
pop
ret
iret
test
movsl
mov
jle
cmpsl
fs
adc
jae
push
icebp
fldenv
cwtl
aas
xor
add
sbb
inc
mov
aaa
imul
jle
and
js
lret
jl
inc
cmc
movsl
pop
and
inc
mov
fndisi(8087
in
inc
subl
mov
push
icebp
sbb
jl
sbb
fdivl
or
mov
mov
adc
lea
xor
ja
adc
out
xchg
insb
jcxz
out
cmp
xor
int3
stos
cld
or
aad
push
dec
lea
jo
or
push
int3
lret
pop
insl
or
cmp
mov
mov
cmpsb
jae
cmp
jae
pop
dec
scas
mov
xchg
sub
out
out
jp
xchg
inc
jae
push
stos
movsb
lock
in
mov
inc
out
je
push
out
jne
stos
cmpb
hlt
daa
lods
fwait
push
xor
mov
mov
dec
jp
dec
inc
mov
shll
outsb
movsl
jae
cmp
xchg
notb
repz
mov
es
or
or
inc
movsl
imull
or
xor
pop
mov
add
mov
push
hlt
dec
mov
jne
mov
jae
push
mov
std
in
addr16
lret
xor
jmp
shll
push
push
lret
jmp
mov
pop
rorb
ja
outsb
dec
jmp
push
sahf
je
mov
add
lret
icebp
daa
pop
in
in
cmc
cs
andb
lahf
shl
scas
mov
sahf
mov
adc
ds
adc
outsb
call
aad
shll
and
ss
add
dec
mov
or
icebp
mov
and
xchg
dec
lods
inc
xchg
cmc
dec
rol
mov
ljmp
lds
leave
pop
jmp
iret
pop
xor
push
in
in
test
or
sbb
fwait
mov
loopne
lock
xchg
inc
push
sub
or
cld
lods
jg
sub
js
call
lds
sbb
inc
xorb
les
clc
cmp
push
jnp
lret
xor
mov
nop
fistpll
jg
ja
mov
aas
jns
ljmp
imul
or
lcall
mov
icebp
lods
push
jmp
adc
or
adc
and
lods
mov
cmpsl
sbb
pop
mov
cmp
subb
mov
or
std
test
inc
mov
xchg
loope
mov
lock
orb
rcl
add
dec
sbb
out
add
or
adc
stos
mull
cmp
jl
lahf
add
popl
adc
enter
sub
ds
fcmovb
lods
adc
out
pop
xadd
dec
les
sub
and
jp
test
sbb
mov
xchg
push
mov
cli
roll
cld
dec
inc
inc
push
enter
adc
push
dec
outsb
mov
ds
fistpl
andb
add
adc
shrl
add
jmp
rcrb
rorb
and
lea
add
and
jns
les
sbb
mov
and
aas
sahf
lahf
or
out
cmp
shrl
xor
addb
jb
sbb
imul
push
lock
inc
and
xor
adc
push
cwtl
xlat
pop
das
fisubs
movsb
adc
mov
sbb
jmp
jecxz
ja
push
mov
fmul
pop
xor
xor
dec
dec
pop
mov
mov
aaa
jle
adc
adc
popf
mov
lds
dec
in
iret
mov
cmp
es
les
not
sub
outsl
dec
es
stos
push
aaa
lods
dec
in
filds
push
lahf
std
popa
in
xor
sarl
cmp
mov
inc
in
xchg
or
dec
push
ljmp
cmp
testl
fbld
mov
add
movsl
pusha
aam
pushf
movsb
cltd
pop
push
loope
adc
ret
push
int3
repz
aad
add
push
xchg
dec
pop
and
nop
cs
and
js
inc
std
add
clc
or
nop
int3
xor
adc
in
lcall
out
loopne
lret
outsl
out
mov
int3
mov
sahf
fwait
xchg
cmc
andb
insl
fidivs
xchg
repz
outsl
jns
ss
std
into
pop
pop
cmp
adc
leave
lahf
mov
call
mov
pusha
or
and
dec
xchg
loopne
mov
mov
jb
fsubrs
mov
imul
lcall
into
adc
adc
mov
cmpsl
lock
sarl
dec
int3
pop
dec
jno
inc
xchg
je
sahf
mov
pop
cli
xlat
ret
or
push
pop
mov
inc
lret
outsb
ret
popf
cmp
testl
push
insb
aam
popa
fcoml
andb
cmpsb
lea
outsl
mov
mov
cmpsb
jl
stos
lret
test
jmp
adc
ja
insb
popa
mov
cwtl
leave
test
mov
mov
aad
jmp
out
insb
jp
pushf
insb
pusha
loopne
push
lret
lret
mov
lret
fwait
xchg
mov
rol
mov
push
push
xor
mov
inc
leave
mov
cmp
add
cmc
jo
sub
out
outsl
xchg
and
mov
cltd
iret
loopne
or
fdivr
repnz
mov
lcall
lods
jne
xor
sub
push
mov
xor
in
popf
fcmove
adc
sbb
or
out
lods
imul
push
cmp
mov
gs
aam
imul
popa
and
jne
in
in
mov
lea
leave
or
test
outsb
dec
mov
dec
xorb
adc
ret
cmpb
sub
cwtl
adc
jns
adc
push
or
push
push
push
pop
dec
xchg
cmp
mov
mov
je
jecxz
inc
mov
fsubrs
jno
inc
push
xlat
aas
rcrb
pop
cltd
in
pop
xor
dec
aaa
dec
cli
je
rolb
sub
or
ss
lods
xchg
xor
sub
pushf
imul
bound
jecxz
jecxz
dec
in
cmc
out
scas
out
dec
mov
in
sbbl
lods
test
xor
inc
mov
jp
movsb
aaa
sti
sub
repz
js
sub
imul
and
inc
pop
fsubl
and
je
rcrb
fnstcw
int
icebp
cmc
hlt
orb
jge
fs
andl
loop
jae
pop
jo
inc
and
lea
in
xchg
call
mov
leave
mov
xchg
fwait
mov
int
or
pop
mov
fwait
and
in
fucomip
add
and
shrb
push
mov
hlt
sbb
insl
imul
das
nop
ja
scas
adc
loope
gs
sahf
adc
cmpsb
adc
and
jecxz
icebp
test
xor
jle
fs
shlb
in
js
repz
pop
filds
scas
mov
push
xor
xlat
sbbl
insl
lds
jo
mov
cs
sbb
add
pop
ljmp
test
mov
js
adc
add
loop
and
je
jecxz
push
roll
cmpsl
ficoml
cmp
mov
lods
scas
inc
add
iret
std
std
push
inc
push
addl
scas
dec
dec
xor
sub
push
adc
add
pop
adc
pop
jmp
jb
pop
inc
adc
pushl
lods
dec
lret
mov
add
cmc
rolb
popa
shrl
xor
fnstenv
push
movsb
mov
popa
aad
jo
or
mov
mov
sbb
sbb
xchg
sbb
adc
adc
mov
pop
in
scas
frstor
and
add
dec
lea
lret
leave
xor
inc
fwait
cmp
dec
or
out
xor
push
xchg
and
xchg
push
adc
cwtl
push
sub
lock
pop
xchg
mov
adc
lods
lds
ret
lods
push
cmp
cmp
clc
loopne
push
std
or
sti
inc
mov
mov
in
cmp
inc
sbb
test
xor
add
sahf
rolb
or
cwtl
fimuls
mov
pop
or
push
lods
dec
jmp
pop
mov
and
notb
dec
fs
jns
sbb
mov
mov
jl
in
jecxz
lea
mov
loop
stos
mov
lock
cmp
pushf
je
fistpll
mov
jno
rcrl
xor
out
jge
mov
testb
add
inc
pop
push
adc
mov
dec
push
repz
imul
lcall
cs
ljmp
xchg
add
mov
pop
pop
clc
cmpsl
cs
cmp
sub
les
push
xchg
je
mov
and
stos
sub
or
sub
xchg
pop
sarb
addr16
jbe
pop
push
xchg
inc
out
mov
out
pop
fwait
roll
jp
mov
push
push
or
orb
jo
lock
cltd
lods
js
inc
gs
jl
and
cld
push
xor
sbb
sahf
dec
je
fadds
cmp
out
fidivrl
cmp
and
dec
pop
pushf
mov
dec
add
mov
repz
cli
gs
sti
movb
xchg
xor
test
mov
ja
sarl
test
inc
pop
xor
test
jnp
test
movsl
dec
adc
daa
in
dec
jne
push
or
mov
fnstenv
bound
imul
mov
or
sbb
cs
inc
adc
inc
aas
mov
mulb
xor
pop
sarl
add
add
sub
add
xchg
jb
push
cmpsl
mov
cli
mov
es
mov
add
jno
add
add
das
aas
les
push
and
hlt
dec
movsb
sbb
outsl
mov
mov
mov
pop
aad
cmp
cwtl
out
push
sbb
cltd
sbb
sti
pushf
push
ss
dec
sub
loop
mov
mov
icebp
fimull
adc
cmp
out
fisubrs
dec
das
and
inc
jns
stos
fidivrs
les
adc
push
pop
into
loopne
jp
movsl
xor
jmp
xchg
dec
imul
jo
in
inc
inc
and
mov
lea
adc
xchg
mov
or
sub
pop
and
clc
mov
and
je
fstp
xchg
stos
rorl
dec
into
xchg
inc
xchg
rcr
mov
sub
jne
scas
xor
and
or
lds
mov
and
mulb
cld
or
jle
enter
rorb
imulb
in
cs
pop
inc
test
mov
sbb
stc
aam
mov
fnstcw
push
inc
sub
sub
sti
mov
push
add
push
mov
fs
lcall
loop
lock
pop
testl
call
sub
addr16
inc
adc
in
jl
sub
adc
jl
and
pusha
lods
xor
pop
add
mov
lret
bound
cmp
mov
std
and
int3
push
std
cmpsb
popa
ds
dec
fsubl
pushl
jle
jo
movsl
shll
xchg
push
das
or
push
push
test
jg
mov
pusha
push
sbb
pop
adc
xchg
pop
pop
xchg
outsl
cwtl
popf
push
mov
xor
mov
adc
daa
lock
fidivrl
gs
and
mov
ljmp
or
adc
and
push
rcr
daa
mov
jmp
aas
mov
fldcw
dec
std
das
push
adc
mov
adc
cmp
sbb
js
int
bswap
sbb
mov
pop
rcrl
or
scas
je
dec
sbb
or
mov
hlt
cmpsb
iret
pop
mov
mov
mov
stc
jg
adcl
and
cmp
popf
push
xchg
lcall
rolb
clc
movsb
lea
xchg
stos
fiaddl
out
jbe
movsb
iret
lahf
in
pop
and
loopne
jp
mov
aad
jnp
push
xchg
jmp
xlat
and
in
jmp
add
xchg
xorb
adc
dec
ret
loopne
sbb
mov
fwait
movsl
lret
cmpsb
les
mov
loop
dec
push
add
push
and
adc
pop
dec
sub
sub
shlb
pop
nop
xchg
mov
js
xchg
jle
aam
mov
adc
jp
rorb
cmp
mov
xchg
pop
mov
pop
lret
fwait
mov
sub
mov
sbb
data16
daa
xchg
sar
pop
mov
sbb
lahf
cs
faddp
rdtsc
inc
dec
andl
mov
mov
adc
jb
dec
imul
faddl
in
or
lret
sbb
inc
jno
and
pop
inc
subb
test
je
ljmp
pusha
xchg
cmc
inc
or
adc
inc
popa
cmp
dec
or
mov
or
shl
push
cmp
in
jns
aam
std
mov
loope
es
xchg
fistps
fbstp
fadds
add
out
add
sbb
xlat
or
xor
nop
or
or
xchg
inc
xor
inc
xor
cmp
aaa
cmc
add
mov
cmp
jno
push
jae
ret
adc
repnz
pop
mov
ret
inc
loopne
int3
push
dec
fcomi
shlb
sub
xchg
sbb
addr16
add
push
push
dec
test
push
sbb
pop
sub
sarl
jle
outsb
xor
rolb
push
and
sub
pop
gs
sub
ret
xor
nop
inc
xchg
fisubrl
arpl
sahf
data16
inc
lds
cmp
add
mov
lret
sbb
loop
or
addr16
cmp
call
pop
aaa
outsl
mov
test
sub
cwtl
sbb
fld
xor
in
pop
out
lahf
add
iret
bound
add
or
icebp
or
in
movsb
out
mov
cmp
add
lods
mov
aaa
mov
mov
lret
out
data16
jns
loop
adc
mov
sbb
in
out
nop
aam
sbb
icebp
push
xchg
shl
cli
inc
xchg
jb
les
repnz
lock
repz
enter
mov
jg
loop
xor
unpcklps
mov
jecxz
or
sar
and
xor
nop
inc
and
and
mov
mov
lds
xor
fdivrp
and
sbb
xchg
mov
sbb
push
aas
adc
sarl
stc
stc
pop
lods
fstl
test
pop
pop
outsb
popa
int
jecxz
mov
in
mov
add
pop
imul
addr16
sbbb
mov
inc
mov
sub
cs
imul
lods
insb
sub
stos
xlat
add
mov
movsl
adc
data16
incb
mov
sub
fisubs
ds
xchg
in
cmp
jbe
jbe
call
and
cmc
sub
push
popf
pop
adc
leave
andl
jecxz
iret
loope
addl
jns
jecxz
sahf
mov
negl
mov
data16
sub
push
xor
out
mov
enter
out
popf
sub
push
add
xchg
ret
mov
mov
repnz
fsubr
sahf
pop
lahf
out
mov
insl
das
std
loop
jecxz
sbb
pop
call
fstpl
sarb
jg
xlat
ret
and
dec
mov
mov
pop
sbb
insl
pusha
out
scas
dec
jg
or
mov
inc
adcb
sti
mov
gs
aas
sahf
push
das
inc
repnz
loope
pusha
jmp
sub
or
mov
jno
in
and
js
shll
xor
fnstenv
mov
outsl
neg
outsb
lea
inc
stos
sahf
xor
lock
mov
sbb
imul
std
xchg
ja
sub
mov
test
inc
cltd
adc
mov
cmpb
and
mov
ss
add
sub
jmp
cmp
outsb
or
mov
or
in
sahf
and
pop
pop
mov
ja
xchg
cwtl
fnstcw
lock
into
inc
push
cs
popa
mov
jecxz
xchg
leave
gs
popf
push
jnp
mov
loopne
fadds
push
aad
ss
out
and
dec
add
sahf
mov
inc
aam
sbb
cmp
pop
cli
mov
add
fidivl
shlb
xchg
fsts
mov
mov
add
mov
jno
int3
fcomip
mov
lods
pop
push
dec
fsubrs
popa
fucomp
sub
pop
cmp
lahf
sub
iret
mov
repnz
jecxz
dec
cmpps
fnstsw
sahf
add
gs
stos
divb
das
dec
movsl
push
mov
pop
jne
push
iret
jp
test
push
sbb
mov
mov
mov
mov
xor
aas
rcll
stos
dec
gs
movsb
inc
cmc
push
dec
divl
push
das
sti
push
adc
and
xor
sub
sub
mov
mov
xchg
shlb
mov
gs
fwait
inc
cwtl
stos
jb
in
je
aad
andb
or
addr16
sbb
inc
aas
or
scas
sub
test
lahf
xchg
dec
sarb
mov
add
mov
mov
or
call
pop
shr
or
fldcw
fisttpl
andb
cmp
pop
out
mov
xlat
jp
jae
push
xchg
mov
push
or
sub
xchg
call
inc
rol
mov
sbb
bound
fcmovne
mov
clc
test
shl
stos
cwtl
jae
ljmp
or
push
push
sarl
xchg
jo
repz
cmp
mov
loopne
mov
cwtl
sub
push
into
flds
rcrl
cs
addb
jnp
mov
scas
nop
arpl
mov
aaa
movsl
push
imul
push
dec
adc
cmp
pushf
lock
sti
jbe
mov
jecxz
jnp
jnp
adc
push
faddl
rclb
cltd
inc
pop
imul
movsl
fnstenv
dec
lcall
mov
lods
mov
stos
dec
cmp
add
imul
inc
das
or
daa
sbb
call
cmp
sbb
jno
mov
lods
sbb
lret
jmp
inc
sbbl
push
sti
mov
cmp
mov
lds
pop
cmpsl
push
int
scas
ret
js
push
arpl
ds
gs
mov
outsl
lds
mov
fidivl
inc
mul
dec
mov
and
popa
rolb
int
repnz
into
lcall
push
mov
inc
imul
push
xor
lods
sub
addr16
adc
lods
and
pusha
out
pop
add
ret
je
test
mov
or
out
cli
mov
xchg
sbb
stos
jmp
mov
lret
imul
xor
mov
pop
call
and
jnp
fwait
loop
sub
and
ja
cs
pop
movsl
add
mov
mov
into
pop
inc
data16
jne
ljmp
ret
aas
inc
clc
xchg
push
lods
dec
fs
add
mov
inc
daa
push
stos
ss
and
shll
dec
mov
dec
pop
nop
test
add
dec
pop
pop
mov
and
fists
mov
fisttps
in
lret
shr
test
pop
lret
cltd
mov
into
cs
lods
add
repz
xor
xchg
push
stos
rcll
mov
mul
rclb
add
imul
cmp
sbb
data16
push
or
je
cmp
xor
push
stos
int
or
mov
enter
push
leave
fsub
ljmp
loop
xchg
lock
loop
enter
xchg
sbbb
mov
cmp
add
dec
sbbb
jo
cmp
and
test
xor
fistpl
mov
imull
cmp
out
out
push
mov
outsl
rcl
out
xchg
jno
mov
sti
mov
test
shll
lods
dec
xor
fnstenv
or
nop
outsl
in
call
adc
pop
mov
sub
stos
fisubl
or
jp
fdivp
pop
pop
sti
lret
xchg
incb
fidivrl
mov
das
push
aaa
mov
iret
pop
adc
xor
gs
and
push
inc
cmpsl
test
out
xchg
psrlq
insl
cld
xchg
fidivs
inc
jg
roll
xchg
dec
cmp
and
int3
push
cwtl
cmp
xchg
shll
sub
fsts
push
int3
pop
out
mov
in
outsb
or
sub
inc
fiadds
xchg
clc
inc
adc
xlat
inc
test
loopne
or
lds
and
lahf
lret
cmp
out
push
inc
imul
fmull
cmp
push
mov
sub
push
cmp
imulb
xchg
and
inc
bound
nop
sbb
test
arpl
push
pop
cltd
mov
xchg
ds
add
dec
sub
jnp
jns
xchg
add
inc
mov
xchg
ficoms
sahf
sbbl
fisubs
and
int
in
ror
cmc
clc
add
mov
mov
ljmp
xchg
mov
notl
jecxz
bnd
sbb
jl
inc
pushf
ret
xor
fs
or
mov
push
into
rcrl
cmpsl
imul
cmp
xor
xchg
sbb
scas
into
sahf
fcoml
jnp
add
lcall
or
hlt
pop
add
loope
push
aaa
out
ds
jl
or
xlat
cmp
sub
mov
mov
popa
xor
rolb
repz
fists
mov
push
loop
enter
ljmp
mov
stc
inc
adc
roll
jne
shl
outsb
xchg
or
jno
add
push
adc
sbb
inc
aad
mov
lret
add
pop
cmc
enter
insl
out
adc
mov
roll
int3
in
xchg
test
call
dec
fistps
cltd
xor
sti
add
or
pop
pop
xchg
stos
mov
xor
jmp
mov
jge
outsb
push
dec
mov
sbb
dec
cmp
ds
pop
iret
out
adc
mov
imul
in
ja
pop
test
xchg
hlt
ficompl
insl
flds
mov
iret
cmp
mov
dec
xor
cltd
test
xchg
adc
xchg
fists
cmpsb
xchg
sbb
xchg
fstps
xchg
push
xor
popf
ret
adc
lds
jnp
push
fwait
jmp
xchg
adc
jno
cwtl
add
and
lcall
cmpsb
jg
mov
xchg
lcall
push
jae
fcmovbe
cmp
jmp
fwait
lret
lret
out
popf
sbb
adc
out
add
sbb
int
into
sub
add
adc
xor
push
call
mov
out
dec
push
sbb
jno
in
int
stos
pop
aas
ret
ja
jb
jo
adc
dec
je
out
clc
jno
sbbl
xor
lcall
dec
pop
jno
das
sub
cmp
repnz
sahf
push
xchg
rcrl
push
cmc
out
cli
movsl
or
xor
or
mov
sbb
add
or
lret
lods
or
lcall
out
test
adc
das
mov
mov
xchg
inc
cmp
mov
xchg
pop
cmp
movsl
mov
jo
dec
stos
add
in
inc
mov
jne
dec
mov
dec
push
ret
push
lods
jbe
push
cmp
imul
aaa
mov
mov
or
jnp
push
sub
bound
cmp
pushf
mov
sbb
addb
insl
or
xlat
sub
dec
pop
jb
repnz
cwtl
sbb
adc
pop
jecxz
jg
push
or
repnz
lods
mov
cmp
mov
loopne
out
test
fsubrl
mov
mov
xchg
pop
dec
xchg
cmp
mov
icebp
icebp
xchg
mov
add
cltd
loopne
or
mov
aaa
adc
xor
faddl
push
push
iret
adc
and
in
cld
mov
in
out
push
lods
cmp
in
adc
mov
jbe
cmpsl
and
mov
push
jg
out
and
ja
jne
out
adc
jnp
movsb
and
mov
jmp
mov
inc
and
inc
push
inc
ds
in
mov
jno
or
aad
gs
mov
nop
cmp
xor
in
dec
cli
dec
push
bound
inc
sahf
sahf
mov
das
or
push
jmp
mov
or
stc
popf
xchg
popa
lea
ret
xor
sub
fs
ja
pop
push
inc
xchg
mov
jp
pusha
or
movsb
ror
sbb
mov
sub
xor
xor
pop
push
mov
mov
lds
in
notb
push
sub
outsb
ret
in
lea
dec
sub
mov
push
cli
not
cwtl
mov
stos
fisubl
bound
mov
int
popa
jmp
outsb
mov
leave
dec
adc
mov
add
sub
push
stos
bound
cmp
fisttpl
or
jb
xor
fcmovne
push
icebp
pop
sti
scas
inc
jmp
call
push
dec
pushf
nop
mov
int
mov
dec
add
sbb
insb
xchg
cmp
cmp
pop
scas
test
dec
mov
mov
sbb
hlt
rorb
cmp
fistpll
call
outsb
xchg
inc
or
scas
sub
inc
add
mov
and
out
dec
call
push
and
js
arpl
jmp
orb
rorl
mov
ljmp
cmc
lea
std
lret
hlt
jecxz
fsubs
mov
mov
jmp
mov
testb
lcall
mov
sahf
jp
js
mov
jecxz
jmp
and
sub
fidivl
pop
addr16
aaa
cmp
add
push
jnp
call
adc
ss
ljmp
movsl
std
dec
in
cli
sub
je
push
cmc
pushf
sub
out
dec
sub
and
shll
dec
dec
rorl
test
push
add
dec
dec
call
push
push
adc
lock
xor
aas
mov
fldenv
repz
or
jle
or
loope
fstpt
in
std
enter
sbb
jge
and
xor
xor
xchg
xor
add
add
adc
cld
fsubr
fwait
mov
push
int
stc
imul
shrb
outsl
xchg
push
ret
ljmp
inc
data16
ljmp
dec
and
test
xchg
dec
jmp
push
sub
subl
enter
cs
mov
in
mov
mov
outsb
pop
pushf
pop
cmp
mov
pop
mov
stos
inc
ja
inc
loopne
pop
lds
push
jg
pop
adcb
das
add
or
loop
aad
lds
mov
pop
ret
mov
xchg
incl
lahf
pop
adc
in
in
pop
sub
mov
mov
mov
out
pop
in
cmp
aad
add
pop
adc
int3
lcall
in
cltd
mov
shlb
daa
addb
mov
push
jne
jmp
cltd
and
push
xor
mov
enter
mov
jecxz
and
push
push
cmpsb
mov
and
sub
jge
in
divb
fidivs
push
ret
loope
call
fwait
sbb
sbb
inc
jp
inc
inc
mov
push
and
dec
ss
mov
push
push
mov
dec
pop
sub
dec
push
pop
pop
insl
dec
xor
jg
jl
mov
ss
sub
inc
sti
fidivrl
push
iret
insl
jns
into
xor
dec
aad
sbb
out
lock
push
push
xor
jp
pop
add
int3
jge
dec
ss
mov
ret
ljmp
pop
repnz
stc
jbe
push
pop
xlat
cmp
mov
cmpb
stos
jbe
fwait
adc
adc
add
repz
fs
sub
mov
push
jl
pop
mov
sub
jl,pn
jmp
add
cmp
or
mov
subb
rorl
dec
xchg
or
add
movsb
mov
dec
add
and
ljmp
push
sub
out
push
jnp
or
sub
movsl
ljmp
std
cmp
pusha
push
in
jbe
cmpsl
out
adc
push
out
sbb
leave
sub
mov
arpl
sbb
cmp
cs
mov
lcall
cli
or
add
mov
aaa
lock
dec
xor
das
testl
scas
xchg
js
icebp
sub
mov
test
shll
int
dec
fstl
call
mov
push
or
in
xchg
iret
sub
lahf
and
fsub
pop
pop
idivb
sbb
pop
ds
dec
cmp
ret
imul
popf
jns
in
mov
clc
pushf
mov
flds
jmp
dec
mov
lds
movsb
mov
cmc
insb
fstps
jmp
outsb
sbb
dec
xchg
or
add
loopne
sub
sbb
shl
fwait
fwait
insb
pop
enter
or
and
push
pushf
arpl
fwait
out
inc
scas
sbb
push
les
mov
xlat
pop
fnstsw
insb
aad
and
inc
iret
lea
push
cmpsb
call
test
stos
mov
or
xchg
mov
jp
sub
add
leave
in
cli
xor
or
cmp
test
jb
mov
bound
add
out
pop
fidivl
stos
inc
imul
adc
push
mov
shrl
ret
sub
cmp
ds
inc
mov
int3
jmp
push
cmp
insb
pop
mov
test
and
jbe
add
pop
loope
and
fstps
aam
ljmp
pop
cli
adc
xor
in
xchg
ds
scas
sbb
or
xchg
in
loop
or
addb
out
loop
sub
mov
sbb
xlat
test
nop
pop
xchg
test
sbb
movb
insl
ret
or
mov
and
orl
testb
xchg
in
ret
and
add
sbbb
pop
cmp
pop
jae
int
test
and
push
js
or
in
xchg
hlt
or
fwait
cmpsl
xchg
loop
lahf
cmp
xor
fcmovnbe
push
jge
pop
dec
sbb
inc
cmpsl
sub
cmp
aaa
dec
call
mov
addr16
rorb
cmp
lock
add
sub
mov
pop
dec
sub
ret
jo
mov
and
clc
in
divl
lods
jmp
sbb
inc
pusha
in
or
cmp
fisttpll
sbb
lahf
mov
cmp
movsl
dec
scas
pop
lock
mov
fisubs
mov
sub
sbb
adc
cmp
ret
divb
insl
push
stc
out
xchg
jbe
test
pop
mov
push
sub
ret
fimuls
mov
xor
stc
mov
sar
shlb
int3
sub
icebp
push
rclb
mov
push
and
xlat
test
inc
fidivl
out
sbb
arpl
les
mov
mov
mov
push
sub
jo
cmp
dec
sub
lods
push
iret
cltd
mov
mov
out
loop
sub
fwait
popa
pop
decb
dec
rcl
in
lods
lea
xor
jns
sbb
rclb
mov
iret
or
dec
mov
pop
xchg
jmp
xor
inc
sahf
outsl
js
push
test
xchg
push
in
mov
insl
std
fdiv
ret
mov
test
loope
push
sub
ror
or
jo
xorl
addl
pop
mov
pop
shl
jecxz
add
lods
sub
mov
xchg
idivl
fstpl
mov
movsb
movb
movsb
repz
add
dec
and
add
stos
xchg
adc
mov
call
ret
mov
ret
mov
mov
xchg
int
pop
or
loopne
cmp
jecxz
loop
jne
xchg
jae
inc
js
add
xor
mov
cmpsb
push
test
pop
cmc
shl
sbb
push
hlt
or
add
xor
int3
addr16
cmp
pop
scas
popf
and
xchg
mov
mov
xchg
mov
jno
mov
add
in
es
arpl
mov
push
inc
pushf
inc
mov
arpl
out
mov
into
adc
cmpl
mov
ds
shlb
loope
aad
push
sub
adc
mov
add
test
or
popa
cld
xchg
mov
mov
cwtl
or
pushf
pop
add
xlat
aaa
mov
mov
insl
jbe
pop
aaa
hlt
test
and
mov
mov
xor
add
clc
fdivl
les
and
pop
mov
out
mov
addr16
aas
adc
rcl
dec
pusha
adc
inc
in
jnp
cli
mov
call
sub
cmp
ret
je
inc
adc
push
lods
inc
dec
shrb
mov
xor
sarl
ss
pop
cmp
or
adc
jne
sar
pop
sbb
push
or
or
xchg
sti
push
clc
pushf
cltd
pop
fisubs
or
jge
mov
inc
movsl
inc
pop
mov
mov
nop
out
mov
xor
icebp
mov
cmp
js
outsb
push
shrl
in
sbb
cmp
sar
cmp
rorb
mov
int3
sarl
loopne
roll
xchg
inc
dec
xor
sahf
inc
dec
clc
pop
lcall
cmp
inc
psllw
adc
lock
adc
mov
or
pusha
sub
xor
data16
xchg
hlt
jge
add
hlt
or
push
mov
pop
loop
jbe
gs
add
inc
fmuls
notl
pop
mov
pop
std
shlb
in
aaa
mov
xor
push
inc
lock
mov
repz
ficoms
sub
dec
mov
lods
jno
outsb
sbb
cltd
shl
cli
js
pushf
movsl
es
cmp
outsl
lock
xchg
pop
cmp
test
mov
int
push
push
jb
sbb
jecxz
scas
inc
xchg
jle
inc
inc
or
rcrb
fwait
int3
ds
testb
lds
xlat
sub
es
out
sbb
jecxz
mov
mov
add
adc
mov
stos
lahf
fisttpll
xchg
dec
xchg
and
in
mov
mov
pop
loope
cmpsb
dec
in
ds
and
xor
jmp
repz
xchg
aam
shlb
leave
jbe
addr16
js
hlt
loop
cmpb
hlt
xchg
or
mov
out
adc
in
aam
stc
push
cld
adc
repz
loope
shll
imul
xchg
repnz
out
mul
xchg
fimuls
sti
sbb
sub
lret
iret
daa
mov
loope
das
stos
movsb
loop
inc
sbb
dec
xlat
adc
fs
pop
or
dec
jne
push
in
xchg
aad
jbe
loopne
lds
add
enter
push
flds
dec
out
ss
das
mov
xor
jmp
ds
loope
fistps
xor
push
and
and
add
mov
jle
lock
push
sbb
loope
lcall
pop
add
push
mov
adc
filds
xchg
jmp
dec
pop
or
mov
pop
cwtl
and
fwait
das
imul
push
pop
into
fs
mov
lcall
dec
and
adc
push
loopne
loope
add
pop
xchg
icebp
push
sbb
mov
test
push
dec
dec
cmc
sbb
or
gs
loop
pop
jno
add
jo
mov
out
mov
mov
pop
bound
pushf
fcomps
push
mov
add
add
daa
adc
imul
adc
repnz
push
out
gs
pop
mov
adc
test
sbb
rcrl
pop
add
add
cmp
movsl
insb
inc
and
lret
popf
imulb
or
outsb
cs
or
sub
push
mov
movsl
nop
push
in
sarb
loop
insb
sahf
insb
rcl
jg
push
xchg
push
cltd
sti
test
dec
jne
fldt
cs
inc
sub
callw
dec
and
mov
fwait
int
xchg
int
das
xlat
lods
addb
sbb
data16
movsb
outsb
push
subl
mov
cmpsb
xor
cld
sbbb
pop
push
mulb
loope
push
fidivl
pop
outsb
sarl
dec
into
lods
popa
daa
and
dec
std
push
je
into
insb
out
dec
or
into
add
daa
xor
jne
mov
fisttpl
addb
push
pusha
in
cmpsb
lcall
push
mov
and
scas
cmpsl
dec
mov
lods
divl
clc
clc
daa
dec
mov
sahf
cmp
jns
scas
je
lret
psubusw
test
cltd
pushf
rcrl
cmp
loop
push
arpl
bound
jge
imul
jp
cwtl
xchg
lahf
cld
shll
pusha
mov
icebp
imul
cmpsl
jge
and
mov
inc
push
mov
icebp
popf
dec
call
push
scas
xlat
popa
mov
jmpw
and
stos
cmp
xor
incb
cld
push
into
sub
fs
or
mov
lret
hlt
jecxz
push
push
xor
cmp
push
xor
into
ljmp
jp
adc
rclb
sub
imul
std
orps
cli
adc
loop
lret
ja
dec
test
adc
jae
sbb
cmp
mov
jg
stc
cmpsl
mov
push
inc
in
cmpsl
fwait
cld
in
ss
adc
add
push
std
pop
cmp
hlt
push
stc
stos
cmpsl
fidivrs
and
inc
jg
mov
je
lods
add
adc
xor
cmc
sub
sbbl
cmpsl
lds
jae
xchg
insb
push
xor
imul
cs
pop
idivb
pop
mulb
jmp
xor
jecxz
inc
xchg
jg
loopne
test
repnz
lcall
scas
out
sbb
sbb
test
je
push
push
in
arpl
fs
js
or
jnp
inc
pop
out
dec
cmp
test
push
push
scas
in
push
jno
aas
or
push
mov
mov
pop
int
hlt
fidivs
sahf
pop
fbstp
mov
into
push
cmpsb
and
loop
xchg
mov
loope
es
aaa
sti
mov
int
dec
fiaddl
popa
pop
fisubrl
xchg
push
popf
xchg
je
mov
lods
push
nop
mov
das
sbb
imul
mov
test
sub
int3
xchg
xchg
xchg
push
shl
mov
arpl
or
aad
pop
sub
or
and
lds
inc
stos
pop
jl
sbb
mov
jbe
sub
mov
jns
mov
es
mov
xor
fmul
pop
mov
mov
sti
jnp
fldcw
dec
les
in
mov
pop
add
xor
stos
fcompl
mov
call
push
sub
xchg
addr16
sub
dec
mov
push
jl
inc
ds
sarl
testl
js
xchg
mov
xchg
inc
movsb
xor
repz
push
repz
xchg
loopne
ja
push
mov
mov
sbb
cmp
out
notb
test
outsl
sbb
xchg
test
bound
lret
in
sarb
imul
arpl
or
inc
add
daa
xchg
lods
outsb
mov
xchg
je
stos
jp
in
push
sub
enter
add
sub
xlat
xlat
lahf
sub
std
push
xchg
repz
fdivrp
cld
cmp
fisttpl
push
push
jns
aaa
or
pop
shll
mov
jg
xchg
inc
and
orl
rcll
sub
mov
psllw
jo
in
in
add
das
ret
xor
mov
jne
mov
lods
test
outsb
jns
inc
mov
outsl
popf
cmp
push
sub
fdivs
gs
jns
sbb
sub
ret
jl
and
or
ds
nop
addr16
popf
adc
imul
lds
aad
std
mov
or
and
inc
repnz
repz
inc
xor
add
test
add
adc
cmp
cmc
inc
int
cli
add
cmpsl
xchg
aaa
loopne
cmp
jbe
jg
inc
push
addr16
test
movups
inc
add
push
dec
imul
shr
mov
jle
cld
mov
fsubs
mov
cltd
out
mov
ja
add
cwtl
mov
insl
mov
adc
push
mov
inc
incb
pminsw
sbb
test
repz
sti
cmpsl
mov
push
push
int
stc
push
nop
scas
adc
mov
pop
gs
lahf
lods
aad
daa
mov
sbb
stos
pop
popf
out
mov
incb
in
pushf
and
pop
mov
popf
pop
jne
push
in
test
mov
dec
pop
xor
xchg
stos
xchg
xor
mov
lock
jbe
cltd
xlat
fdivrl
outsl
into
fcmovb
aaa
fcmovb
test
mov
jne
sbb
negl
cwtl
jmp
jmp
lret
pop
fstl
aam
pop
cmp
dec
cmp
push
inc
fisubrl
in
pop
fildll
fildll
and
mov
int3
into
sti
xlat
jns
cs
cmp
in
cmp
incl
test
inc
xchg
outsl
xor
add
ret
mov
mov
es
adc
mov
test
popa
dec
lds
cmp
push
mov
fimuls
mov
ss
push
mov
cmpsl
test
jns
out
adc
scas
adc
sub
rorb
ret
lea
fdivrs
mov
stos
mov
xor
lret
aas
cmp
adc
or
add
popf
insb
jecxz
outsl
mov
inc
sbb
inc
dec
loope
xor
ljmp
clc
add
lret
push
cwtl
xor
push
pop
stc
ficomps
add
leave
ja
adc
clc
jne
pusha
aad
push
fstps
mov
add
jle
test
stc
out
or
sarl
inc
dec
push
sbb
mov
mov
adc
and
mov
sub
inc
out
sub
mov
pop
pop
jmp
jg
mov
lea
cmp
lea
mov
fistps
in
mov
adc
ret
icebp
sbb
pushf
outsb
rcrb
push
cmpsl
pop
xchg
mov
fisttps
lret
xchg
icebp
in
out
mov
and
scas
cmp
xlat
ret
mov
adc
push
jg
push
scas
aam
rcrl
dec
jle
sub
aam
int3
jae
mov
jp
push
addr16
lock
adc
loop
adc
dec
jns
cmp
adc
or
pop
enter
and
mov
popa
and
push
dec
rcrb
pop
push
inc
sar
repz
cmc
sbb
dec
filds
stos
fiadds
mov
push
lock
pop
mov
dec
and
push
stos
sub
dec
fptan
add
mov
lahf
daa
jp
and
xchg
cmp
adc
sub
cmp
icebp
mov
rcll
and
arpl
shll
jns
lock
jp
xchg
psraw
or
xchg
lods
mov
shlb
pop
cmpsl
int3
sbb
sub
cmp
xor
sub
mov
cmp
pop
mov
popa
cmc
cmp
loope
mov
mov
sete
and
pop
mov
cs
inc
lds
es
jb
and
mov
pop
in
jecxz
add
adc
clc
cltd
call
xchg
repz
aas
push
stos
sbb
and
sbb
add
xor
push
mov
das
cmp
fcompl
fidivl
out
idivb
mov
popf
lahf
int3
fcomps
out
xchg
inc
dec
xor
andb
out
inc
sti
pop
mov
and
mov
adc
adc
or
popf
addl
ret
stc
sbb
ret
rolb
aaa
ret
scas
cltd
xchg
sbb
jns,pt
jg
and
addr16
stos
fsubl
idivb
bound
test
lahf
dec
and
inc
pop
subb
pop
jp
pop
jg
add
mov
mov
mov
sub
call
mov
inc
cltd
sub
dec
cmp
add
sbb
ja
aaa
inc
mov
lods
sbb
fisubrs
rclb
fsubs
daa
cmp
es
cmpsb
pop
stos
jno
add
std
test
sbb
int3
mov
xor
mov
add
sub
sub
movb
enter
outsb
mov
dec
lcall
xor
jb
out
and
test
not
rcll
mov
fcompp
out
or
movsb
push
fwait
jne
lcall
movsb
adc
ja
bound
out
dec
inc
and
mov
add
lds
xlat
jmp
loope
jbe
out
push
pop
mov
xor
jne
jnp
mov
mov
ret
jne
sbbl
in
adc
test
and
cmp
insl
lret
jg
sbb
ret
imul
imul
imul
xchg
dec
add
fmul
sbb
mov
push
imul
sub
xor
jle
and
and
sub
imul
lods
inc
fcompl
xor
movsb
out
setg
sub
fstpl
insb
ja
ljmp
inc
xchg
scas
sub
jns
pop
jl
stc
mov
into
in
test
shl
fsubr
add
mov
mov
stos
mov
xchg
movsbl
dec
sub
mov
cwtl
cmp
mov
fldenv
inc
jns
cmovne
mov
pusha
fnsave
sahf
push
mov
cmpsb
inc
push
loope
loopne
das
jle
inc
jle
mov
shl
sub
scas
stos
lret
mov
mov
and
sahf
insl
push
test
pop
insl
pusha
shll
mov
cmp
hlt
std
sub
rorl
arpl
dec
push
rcll
pop
jle
sbb
pop
testb
lods
stc
push
fldl
and
daa
loopne
push
dec
mov
sbb
push
mov
ret
lods
loopne
pusha
inc
popf
mov
ljmp
pushl
mov
sbb
nop
inc
rcrl
or
addl
fldl
push
adc
adc
push
nop
cmp
mov
adc
inc
dec
in
ret
cmp
testb
dec
xor
sub
sbb
nop
icebp
or
ljmp
jmp
push
jmp
xor
pop
or
mov
js
dec
fnop
pop
clc
imul
cmp
dec
aas
sub
repnz
and
xchg
imul
mov
xchg
out
add
push
xor
sbb
or
mov
adc
mov
sbb
mov
mov
jp
inc
orb
icebp
fisubrl
fisubs
fsubl
int3
stos
and
add
cmp
cmp
je
pop
mov
pushf
cld
inc
fsubrl
xor
xchg
movsl
jp
push
sbb
hlt
mov
lret
stc
cmp
movsl
fists
jg
xchg
ror
imul
test
push
jb
ficompl
jp
rcll
xor
sub
jb
adc
dec
mov
jp
outsb
add
lret
and
fs
jp
hlt
mov
mov
xor
xchg
push
jl
adc
jno
mov
lcall
pop
xchg
leave
dec
dec
pushw
push
pushf
and
jno
iret
mov
dec
mov
sub
mov
xor
ficomps
rorl
cmp
int
cmp
and
popa
dec
je
xor
lcall
xchg
jecxz
fmul
pushf
mov
aaa
push
dec
mov
jno
lcall
pop
aad
add
sub
or
stos
xor
pop
add
in
dec
fdivl
jmp
ljmp
inc
mov
and
mov
aas
js
cltd
into
dec
and
pop
repnz
adc
call
fs
adc
push
aad
test
mov
sbb
xor
popa
mov
aaa
out
arpl
mov
gs
dec
out
sub
mov
ret
pop
pop
pop
sbbb
mov
xor
pop
jae
stos
and
pop
or
xchg
mov
out
jmp
xchg
jb
fidivrl
test
jl
lods
xor
xor
lods
sbb
fs
cmp
call
in
and
sbb
sub
sub
dec
iret
mov
inc
xchg
int
add
xchg
clc
lret
push
xor
inc
cmp
mov
jno
sub
jno
sub
shrb
jl
inc
push
scas
push
aam
dec
fistpll
in
adc
mov
or
cmc
pop
dec
hlt
es
aas
pop
jbe
sub
xchg
mov
loope
xor
shlb
lea
decb
out
rorb
ret
imul
xor
out
dec
cld
cli
mov
pop
je
aad
xorl
insb
pop
stc
lock
dec
pop
xor
test
add
and
mov
xchg
cmp
sub
push
xchg
mov
push
cmp
sarl
jecxz
pop
pop
andb
daa
jle
adc
or
pop
filds
sub
sbb
je
adc
outsl
jle
bnd
frstor
dec
das
xchg
push
decl
and
jmp
insl
mov
ss
pop
push
pshufw
ja
aaa
rorl
lds
adc
xlat
xor
mov
ret
flds
popf
jecxz
movsl
xchg
xor
data16
repnz
popf
push
xor
divb
sahf
sahf
cs
sbb
fwait
lods
jne
stos
jno
imul
iret
lret
insb
test
mov
inc
mov
xchg
fists
hlt
pop
fcomi
mov
jo
mov
ljmp
adc
mov
or
xor
aad
xor
mov
and
and
mulb
lds
sbb
or
stos
adc
xchg
xchg
mov
nop
in
adc
scas
push
and
pop
negl
les
sahf
xchg
aad
movsl
xor
mov
xchg
jno
aad
popf
lods
ja
shrb
call
data16
and
jae
icebp
sbb
shlb
pusha
pushf
xor
scas
dec
fsts
mov
mull
or
xor
jle
or
shrb
movsb
das
cltd
ljmp
scas
sub
rclb
cmp
subb
mov
cmpsb
aas
ret
sbb
scas
xor
out
jge
lea
cltd
shll
test
lcall
das
cmp
loope
mov
int
pop
outsb
lcall
dec
inc
jb
jmp
or
pop
and
in
cltd
stos
rcrl
cwtl
mov
daa
ds
add
repnz
fstpl
mov
mov
jmp
add
mov
stos
sti
insb
xorl
sub
cwtl
imul
arpl
clc
or
jbe
mov
shll
int
xor
dec
shrb
in
adc
loopne
add
into
sbb
pop
movups
movsl
or
mov
pop
cmc
mov
pop
sub
out
shlb
xchg
mov
pop
sub
pop
xor
pop
and
xchg
out
cli
xor
hlt
je
imul
pop
lret
mov
in
lea
inc
clc
or
roll
daa
test
push
xchg
ja
mov
lds
and
xchg
mov
movsb
pop
pop
frstor
adc
pop
imul
inc
pop
loop
xor
inc
jmp
mov
sbb
add
movsb
fimuls
int
stos
hlt
hlt
es
les
lods
xchg
addr16
ss
lods
pushf
sub
jmp
lcall
leave
and
and
mov
jno
mov
pop
jecxz
inc
or
push
xor
in
test
addb
sub
sbb
ret
je
pop
sub
fisubl
mov
jbe
mov
dec
xchg
adcb
mov
int3
mov
fwait
pop
push
nop
xor
push
lods
jno
sub
mov
addl
andb
jl
lea
out
push
mov
ficoms
ds
or
sub
out
into
mov
xchg
sbb
xchg
in
call
adc
jle
adc
or
outsb
sti
jp
lahf
jae
add
mov
push
std
sub
mov
je
or
mov
mov
imul
ds
mov
popf
dec
push
xor
lret
cwtl
cmp
inc
xor
les
dec
jbe
inc
push
xor
sub
js
sbb
ret
xlat
mov
sahf
mov
mov
xchg
add
mov
jo
add
jle
add
mov
mov
mov
lahf
aaa
in
mov
mov
inc
stos
or
popa
xlat
jmp
inc
push
cmp
jns
sahf
pop
or
rcrb
inc
push
lcall
ja
xor
add
inc
ss
mov
sti
test
adc
add
sti
xorb
fstpl
aam
pop
jl
mov
mov
xor
repz
mov
jbe
adc
xchg
push
mov
nop
jl
in
push
xor
mov
sub
sahf
and
pusha
or
jg
ds
jmp
sbb
loope
ljmp
pop
test
paddd
push
xchg
lret
cmpb
ret
sahf
or
fcmovnb
dec
mov
es
adc
movsb
loope
mov
popa
gs
imul
cld
mov
adc
sub
push
push
sub
ds
pop
or
nop
push
out
sahf
xchg
cld
addr16
aad
xchg
mov
jle
jb
inc
mov
push
cmp
dec
and
mov
ljmp
lods
push
add
xchg
cld
add
add
stos
mov
pop
dec
test
cmp
mov
push
add
jmp
aad
sahf
shlb
stos
sub
sub
cmp
out
enter
shll
fs
push
fwait
stos
cmpb
xor
mov
sar
adcb
std
test
push
mov
push
sbb
mov
inc
mov
inc
call
mov
jnp
and
push
js
xchg
push
mov
loopne
clc
mov
movsl
sub
mov
andb
insb
outsl
pushf
arpl
xlat
ljmp
or
pop
mov
jns
mov
fiaddl
and
mov
mov
lds
in
cmp
cmp
jnp
repz
xlat
xchg
sar
xlat
and
outsl
adc
sub
in
and
xchg
std
or
add
fstl
dec
add
xchg
mov
mov
push
jb
pop
popf
push
into
xor
and
mov
lret
or
inc
pop
mov
fs
cmp
lods
ds
aas
push
adc
dec
mov
xor
sbb
jmp
inc
out
adc
leave
je
push
fwait
lcall
or
dec
nop
and
leave
fsubs
inc
mov
outsb
mov
xchg
mov
cmpsl
sarb
and
sub
xor
dec
push
sbb
lahf
inc
add
cmp
or
shrb
sbb
sub
add
sbb
mov
or
popf
pop
push
and
cltd
aad
bound
xchg
rolb
sbb
movsl
dec
jge
push
mov
xchg
movsb
inc
and
mov
les
pop
arpl
push
mov
push
rcrb
jno
dec
dec
mov
outsl
lea
int3
push
cli
xor
cmpsl
mov
xor
daa
movsb
out
push
lods
stos
push
inc
mov
scas
test
bound
js
ret
jp
xor
ret
jge
loope
or
jle
cltd
xor
mov
cmp
inc
imul
inc
xor
pop
xlat
fs
insb
ss
xchg
mov
xchg
add
or
jle
xchg
aam
xchg
or
mov
xchg
add
sub
and
xlat
icebp
movsb
mov
pop
rolb
xor
mov
pop
mov
add
sar
push
gs
or
or
lods
add
in
not
push
mov
or
sbb
dec
cli
std
mov
mov
push
adc
cmp
pop
lret
roll
ret
les
lret
popl
or
jns
cmp
sub
and
hlt
push
adc
inc
mov
push
push
imul
loopne
pop
cmp
dec
xchg
jo
insl
imul
sbb
std
arpl
fstl
movsl
pop
js
rcrl
sub
mov
lods
jg
push
in
mov
pop
inc
sti
repnz
ret
fcomps
mov
jne
pop
pop
jbe
or
fbld
data16
or
mov
shlb
test
xchg
adc
pop
enter
jb
jbe
or
lahf
data16
shrb
mov
mov
or
fucom
nop
nop
add
lret
dec
cltd
shr
xchg
mov
scas
sbb
add
addr16
mov
mov
sbb
insl
popf
cmpsl
xchg
fnstcw
in
xchg
lret
pop
test
push
sbb
vmovaps
adc
int
xchg
push
movsb
lods
ja
or
mov
pop
dec
push
dec
or
rcrb
insl
stos
mov
outsb
movzwl
scas
xchg
and
dec
and
frndint
popf
aad
ljmp
jge
int
lds
dec
ljmp
push
mov
lods
pushf
aad
adc
fs
push
aaa
adc
pop
xchg
mov
add
adcl
xor
scas
dec
aas
jmp
cmc
repz
inc
arpl
adc
in
dec
test
xchg
xor
xchg
sbb
mov
jo
jb
and
or
dec
inc
xchg
xor
mov
fcomp
fs
and
mov
add
xchg
cmp
icebp
mov
mov
fwait
xor
gs
push
xchg
stos
add
out
std
aad
push
into
sub
mov
loope
push
or
popf
test
sarb
mov
mov
push
pop
inc
repz
cmpsb
and
mov
leave
sti
imul
cmp
adc
adc
lods
fnsave
push
sbb
jae
out
mov
icebp
mov
push
xchg
or
pop
dec
lcall
push
or
add
fstps
repnz
sbb
sahf
pusha
int
mov
ss
out
jge
sub
adc
ja
inc
xor
hlt
fmull
jp
sub
xchg
xchg
push
mov
in
das
pop
add
or
stos
fsubl
dec
xor
in
mov
push
cs
outsl
movsl
and
rcr
inc
pop
lcall
lock
arpl
lahf
or
daa
stos
stos
mov
mov
stos
ret
aas
out
pop
pop
shrb
addl
cld
xchg
add
sub
pop
adc
cmp
roll
jae
and
cmp
fwait
push
js
xchg
cmp
jns
lcall
out
add
inc
pop
shld
sbb
clc
xor
push
lret
push
cltd
adc
push
in
stos
std
inc
in
shlb
dec
loope
rorb
jg
aam
pop
xlat
out
mov
call
xchg
stos
sbb
and
pushf
xchg
or
les
and
out
lea
dec
pop
in
inc
mov
and
int3
adc
xor
add
adc
lahf
jbe
inc
sbb
cmc
repz
xor
xor
fwait
inc
std
lret
leave
insl
stos
add
adc
stos
outsb
movsb
scas
xchg
mov
movsb
insb
sub
repz
lret
popf
and
iret
int3
mov
inc
nop
dec
cmp
push
mov
mov
enter
lds
fadds
fucom
add
pusha
lea
add
sbb
cwtl
fstpt
push
inc
dec
add
sar
jns
in
dec
or
arpl
pop
lret
xor
push
mov
push
daa
cmp
filds
pop
cmp
out
mov
pop
sbb
push
loope
push
mov
mov
mov
pop
ficomps
mov
and
cld
clc
jge
dec
xchg
repnz
ret
imul
loopne
lods
int3
jb
cmp
sub
hlt
or
out
movsb
outsl
and
xchg
push
out
jno
in
je
xlat
push
push
jecxz
leave
mov
fisttps
in
shll
mov
stc
inc
inc
push
jno
xchg
test
add
jl
adc
ja
iret
loope
popf
je
and
in
movsb
ret
xor
imul
fdivrl
sti
mov
push
inc
jae
loop
push
clc
loope
push
push
loopne
adc
pop
test
xor
mov
sub
call
std
test
test
lods
fwait
inc
mov
dec
mov
out
sbb
mov
xchg
and
inc
xor
enter
push
mov
sti
fcomip
and
or
ret
sahf
subl
or
ss
loope
mov
adcb
add
jmp
mov
es
out
in
pop
mov
pop
push
push
in
std
jge
jg
dec
jle
mov
call
inc
dec
sub
mov
dec
test
or
and
ja
pop
mov
adc
addb
cmp
adc
aam
aad
and
aam
jge
jnp
push
test
dec
xchg
sahf
mov
loop
fs
std
imulb
in
jmp
inc
out
lock
ss
fwait
dec
mov
stc
xchg
mov
loop
call
sbb
sub
sbb
push
ja
ja
xlat
mov
add
and
and
cmp
xor
xchg
xor
cmpb
pop
xchg
dec
inc
repz
pop
mov
or
jne
xlat
and
and
arpl
movsl
mov
outsl
iret
pop
lods
sbb
mov
adc
jmp
xchg
jmp
pop
mov
and
in
cli
gs
aaa
push
jle
loope
inc
dec
inc
lods
repnz
clc
jl
mov
mov
sub
push
mov
fldcw
jb
xor
mov
mov
dec
pop
enter
lret
scas
fld
lods
mov
das
rorl
pop
jecxz
or
int3
enter
fwait
xor
jae
push
loop
gs
cmp
push
mov
add
mov
shlb
loope
js
fnstcw
push
je
call
imul
repz
rclb
es
dec
outsb
push
sbb
and
sbb
in
das
inc
lcall
idivb
lods
push
cmpsb
das
sub
pop
daa
cmp
call
pushf
lock
arpl
mov
cmp
mov
es
push
in
movsl
sahf
std
jns
cmp
jb
hlt
jmp
mov
or
sub
inc
negl
in
pusha
imul
loop
shrb
int
movsb
push
push
dec
fcomps
rcr
xchg
pop
aaa
xchg
xchg
loop
in
arpl
inc
or
in
dec
sub
pop
sbb
jnp
adc
adc
sbb
or
addr16
in
jmp
xchg
les
push
sub
test
stos
xor
lea
lock
mov
pop
or
mov
dec
inc
mov
cmp
dec
xorl
push
jo
adc
sub
push
inc
in
movsb
xor
mov
or
dec
xchg
adc
scas
pop
insb
rorl
push
mov
sub
xchg
lock
in
mov
aaa
or
roll
inc
movsb
dec
push
xchg
sti
sbb
mov
mov
dec
adc
pop
add
test
mov
mov
cld
test
pushf
scas
mov
xor
jbe
and
cmc
and
jo
lods
nop
popa
push
scas
popf
lcall
or
pushf
mov
ja
cld
dec
dec
gs
cmpsl
jle
cmp
cmpsb
sub
mov
test
repz
rcll
xor
jae
push
enter
add
leave
cmpb
push
jecxz
xchg
inc
sbb
sbbl
js
ds
loopne
hlt
xor
pop
loopne
mov
call
inc
inc
cli
rorl
test
scas
adc
shl
sahf
mov
mov
inc
lret
dec
cs
xchg
shlb
out
push
mov
jmp
push
in
sub
and
dec
pop
popf
mov
inc
push
shrb
repz
sub
rolb
js
push
subl
sub
mov
imul
push
outsl
xor
lahf
in
rcr
jbe
fidivrs
xchg
daa
xor
fmuls
mov
xchg
xor
fsubs
sub
push
mov
mov
push
and
mov
dec
test
mov
pop
add
rcrl
sbb
add
cmp
jb
dec
or
repz
jmp
std
negl
or
outsl
sbb
cltd
adc
mov
pop
push
xchg
add
in
mov
xor
adc
fcmove
add
sbb
push
sub
shlb
add
fdivrp
xor
int3
lods
fadds
xlat
push
fildl
pop
and
mov
scas
xor
mov
sbbl
xchg
mov
in
xor
cmc
xchg
jl
into
sbb
lods
add
test
add
sub
fucomip
pushf
sbb
adc
mov
inc
pop
push
jmp
pop
and
jp
repnz
cmp
or
add
arpl
sub
out
mov
popf
jg
shrb
nop
and
or
movsb
loope
push
push
cmp
and
pushf
inc
sbb
cmp
subb
jbe
push
pop
jae,pn
pop
pop
xor
dec
fidivs
inc
in
add
or
movsl
cwtl
dec
mov
mov
xchg
popa
sub
inc
mov
mov
xor
inc
out
add
mov
sbb
iret
jge
push
cld
pop
sbb
aad
cld
and
dec
push
sbb
inc
xchg
rclb
jnp
sub
repnz
push
outsl
out
loop
adc
pushf
push
adc
aad
call
inc
idivl
dec
fwait
test
mov
pop
mov
imulb
inc
pop
push
pop
jg
xchg
cli
aaa
mov
mov
nop
xchg
ljmp
test
in
jmp
mov
dec
xor
movsl
imul
mov
aad
push
adc
adc
je
cmp
inc
mov
mov
cmp
hlt
gs
sti
sahf
push
mov
add
and
or
mov
cli
cmc
fmull
dec
data16
fstl
mov
xor
mov
sbb
sub
cwtl
jg
push
sub
pop
jno
push
popa
jbe
lcall
sbb
and
jle
out
inc
data16
test
jmp
outsb
mov
ljmp
int3
jp
cmp
out
or
or
hlt
push
jp
sub
sub
inc
in
xchg
sbb
mov
mov
ja
xchg
test
xchg
mov
inc
cmp
and
pop
dec
ds
cmpsl
pop
pop
jmp
add
add
int3
cmc
imul
push
call
mov
mov
xor
xor
add
lahf
fistpll
mov
xchg
nop
jmp
jae
pop
sub
shll
mov
sti
sbb
dec
stc
fistps
or
mov
out
inc
leave
add
or
mov
into
and
adc
ljmp
cmpsl
movsb
jmp
sub
hlt
push
hlt
das
cltd
push
xchg
sub
dec
cmp
sub
loopne
jp
fists
dec
fsubs
lea
mov
or
ffree
pushf
sbbb
cmp
pushf
divl
mov
mov
or
in
fiaddl
lret
mov
push
xor
sbb
movsl
xlat
lcall
cmp
inc
pop
cmpsl
xchg
movsb
out
jg
das
inc
pop
dec
dec
jbe
pushf
xor
scas
ret
adc
and
aas
adcl
xor
add
rolb
insl
ljmp
gs
adc
icebp
xchg
lcall
lret
adc
repz
mov
push
out
or
mov
les
shlb
dec
ret
dec
push
dec
push
leave
aam
sub
fists
add
hlt
inc
xor
sahf
xchg
fwait
out
mov
cli
inc
lret
movsl
sarl
sbb
je
inc
pop
cs
inc
xor
mov
int
sbb
jp
outsl
xor
xchg
sbb
hlt
sub
js
inc
mov
outsl
add
xor
xchg
mov
sub
out
sbb
inc
push
mov
or
cwtl
out
xor
repnz
jno
add
sarl
clc
loopne
fstps
mov
jmp
lods
cmp
cltd
enter
cwtl
xchg
add
outsb
bound
or
in
cs
and
lods
mov
hlt
push
daa
and
in
jbe
popa
sar
idivl
lods
pop
dec
cmp
inc
hlt
cmpb
sbb
xchg
cld
test
mov
or
sub
mov
mov
push
jle
mov
into
dec
and
stos
or
lret
filds
xchg
aad
pop
push
sbb
mov
inc
sbb
push
adc
mov
rolb
inc
inc
adc
inc
or
ljmp
bound
test
and
imul
fidivrs
loope
hlt
mov
ljmp
into
dec
mov
mov
mov
dec
fstpt
sub
call
mov
or
inc
popf
or
mov
cmc
mov
and
xorb
push
loopne
push
shlb
sbb
and
xlat
imul
imul
popa
mov
sub
pop
xchg
cmp
or
and
mov
lods
push
cmp
imulb
fucomip
cwtl
outsl
out
jle
inc
xlat
or
lret
adc
mov
adc
push
cmpsl
testl
push
mov
lret
stos
jg
jno
shl
xchg
imul
fxch
cmp
xchg
fdivrp
repnz
jmp
ret
xor
repz
outsb
clc
lea
shufps
or
cmp
jb
push
add
add
pop
xor
lods
add
enter
sbb
ljmp
aad
cmc
outsb
mov
mov
shll
pop
fbstp
enter
mov
dec
xorb
xchg
mov
sahf
fwait
push
test
and
jbe
add
mov
mov
adc
mov
pop
or
movsb
pusha
mov
xor
lea
int
jmp
in
sahf
push
in
arpl
jge
stc
pushf
mov
lea
stc
push
test
repnz
iret
push
xor
nop
adc
xchg
cld
adc
je
inc
stos
mov
dec
loope
mov
mov
pushf
stc
shld
rclb
stos
into
or
daa
aaa
or
lds
push
mov
add
add
xorl
and
xchg
adc
mov
add
ja
bound
mov
sarl
aad
xchg
mov
lret
sbb
jp
int3
inc
lret
pop
popf
xlat
push
andl
fs
pushl
out
mov
js
cmp
and
pusha
je
aam
pusha
and
xchg
clc
out
stos
loope
ret
aam
mov
pop
dec
mov
cmp
and
icebp
sbb
lea
sub
mov
push
xor
out
sub
scas
jle
sub
jge
sub
js
cmc
xchg
add
testl
push
cld
imul
sub
lods
mov
adc
xchg
cs
test
sub
popf
dec
incl
push
aas
mov
lea
das
mov
lds
jle
sbb
daa
cli
outsl
sub
subl
imul
incb
inc
out
out
int3
mov
fsubl
mov
rcrb
jno
mov
enter
sti
sub
cwtl
mov
xchg
std
lea
mov
rorl
insb
insl
inc
mov
and
adc
jbe,pn
pop
dec
sahf
xor
mov
aam
jecxz
sub
xchg
mov
mov
shlb
shlb
sarl
imul
test
adc
mov
xchg
ret
jb
test
sub
ss
in
notl
fnstenv
test
lods
jnp
out
nop
shll
push
and
push
cmp
lock
or
dec
cmpsl
xor
mulb
jmp
int3
fwait
ret
aam
shll
test
shlb
sub
sbb
cli
cmp
xchg
pop
arpl
jns
ljmp
pop
adc
mov
loop
ds
iret
scas
inc
cmp
dec
das
cmp
cmp
aas
jge
imul
jmp
clc
pop
cmp
jmp
lock
mov
mov
add
popa
les
cmp
sahf
cmc
das
push
nop
mov
stos
inc
mov
sub
mov
push
lret
add
inc
cs
pushf
insl
mov
or
sub
movsl
aas
push
and
xor
mov
xor
je
xlat
and
dec
sub
out
aaa
or
cmp
add
cmp
sub
call
xchg
inc
push
jnp
fbstp
or
lahf
pop
shlb
inc
add
ljmp
popa
xchg
or
call
mov
aaa
ljmp
stos
xchg
cmp
std
into
adc
mov
mov
and
add
stos
dec
inc
push
int
test
adc
pop
pusha
bound
lods
push
inc
in
sub
mov
sti
inc
fldt
mov
dec
mov
scas
or
jno
into
jmp
and
out
ljmp
xchg
aad
stc
jbe
stc
dec
mov
mov
dec
dec
sub
clc
and
inc
cmp
sub
pop
lea
popf
out
fsubl
ja
test
icebp
sub
sub
enter
outsb
and
into
inc
scas
fcmovnb
mov
xor
or
in
test
mov
mov
aam
mov
data16
push
or
xor
push
mov
sarb
push
loopne
popf
sbb
xchg
dec
repnz
call
test
aas
dec
add
or
fbld
adc
mov
jns
pop
adc
xchg
aam
jb
cld
xchg
or
leave
and
sahf
shrb
dec
es
int3
push
cmp
cmovbe
inc
xor
cli
mov
add
imul
jmp
fstpt
jge
pop
clc
fnsave
and
mov
stc
and
ss
in
loope
in
sti
call
mov
jl
xorl
test
mov
in
bound
mov
pop
ret
loopne
adc
insb
xor
cmp
nop
inc
xor
jnp
scas
lods
sub
sub
data16
jne
xor
mov
lcall
jle
mov
cmp
xor
sub
cmc
sub
cmp
cmpsl
mov
jp
mov
jno
sub
and
mov
fistps
out
pop
mov
dec
cmc
mov
sbb
jns
aas
or
xchg
stc
test
and
shll
sbb
add
push
repnz
sahf
ds
xor
pop
inc
pop
cmpsb
mov
adc
sub
jbe
mov
sti
lea
jle
mov
bound
pop
out
push
sbb
subl
sbb
and
stos
loop
rcrl
popf
cmpsl
mov
adc
sahf
inc
add
pop
xchg
pop
or
test
arpl
jle
fimuls
cmp
xor
xchg
push
fldcw
or
dec
sub
mov
pusha
sbb
adc
sbb
fdivrs
add
jae
stc
push
and
mov
ret
add
and
dec
into
cwtl
inc
jle
dec
xor
push
xor
cltd
outsb
lahf
push
push
data16
into
adc
xchg
fisttps
sbb
lods
mov
add
dec
xor
filds
sub
in
xchg
mov
jg
inc
ja
and
fcomps
and
xchg
stos
loope
scas
sbb
aaa
jle
cltd
or
mov
jae
dec
sbb
subl
jecxz
or
bound
dec
xchg
insb
outsb
add
xor
movsb
je
sahf
push
or
sub
dec
pop
ljmp
mov
lcall
xchg
call
inc
mov
mov
sbb
fs
or
jb
test
and
mov
daa
add
stos
sub
push
mov
cmp
push
xchg
dec
mov
cmpsl
add
inc
xor
scas
and
addr16
jle
scas
dec
add
test
or
outsl
fstps
test
jo
jl
sub
fs
cmovno
cmp
jmp
ja
mov
dec
sub
mov
xor
lds
stos
stc
mov
cmp
add
pop
add
jmp
xchg
arpl
mov
ficoms
mov
jns
rcr
and
inc
test
or
out
cmpsl
jbe
inc
cmp
je
mov
fs
sub
and
outsb
mov
lods
jo
xchg
je
dec
lods
lods
inc
push
and
adc
icebp
mov
insb
ljmp
push
daa
adc
scas
mov
lcall
jbe
outsl
ds
aaa
movsl
push
mov
bound
adc
push
and
imul
outsl
xor
sbb
inc
mov
xchg
and
or
out
lds
sub
pusha
jle
mov
fsubp
mov
mov
loopne
mov
into
pusha
fisubs
mov
push
sub
stc
xor
inc
jge
int3
js
aad
add
lock
mov
aaa
cmpb
stos
insl
sahf
sahf
pop
dec
sbbl
fisubrl
and
idivl
icebp
movsl
jl
adc
mov
xchg
push
push
cmc
or
cmpsb
cmpb
bound
or
sti
push
sub
lret
push
aas
dec
xor
popa
les
les
fsubrs
loop
lea
in
sub
int3
gs
aad
xchg
jbe
add
and
ds
sbb
stos
fidivl
and
pop
sub
inc
and
out
mov
movsb
mov
sub
shlb
push
cmp
sbb
pop
test
mov
call
mov
sbb
cmp
mov
mov
push
mov
inc
or
mov
hlt
fldl
and
add
cmp
mov
test
xchg
pop
mov
mov
jne
pushf
xchg
test
mov
roll
jbe
ss
in
xchg
jmp
incl
push
aad
adcb
aas
sbbb
xchg
pop
add
or
imul
add
jbe
test
fnsave
cmpsl
add
js
cmpsl
push
notl
cmpsb
push
adc
xor
ret
or
inc
imul
mov
mov
ljmp
jp
int3
xor
xlat
loopne
xchg
loop
cwtl
subl
jle
adcb
cld
or
movzwl
sbb
mov
jo
cltd
scas
out
dec
pop
xchg
sti
and
out
push
pop
mov
mov
jp
mov
push
in
lds
jo
movsb
test
push
jecxz
push
or
cs
lods
pop
cmp
data16
xchg
cmpsl
shlb
lahf
or
pusha
mov
mov
fs
adc
jbe
cmp
stc
sbb
leave
and
or
pop
nop
sarl
aas
loope
aas
outsb
add
sarl
orl
gs
mov
and
or
cmp
out
push
ja
faddl
sub
push
add
push
add
movsb
xlat
repnz
and
jbe
mov
or
cmc
stos
sub
inc
add
and
pop
pop
push
test
inc
push
mov
icebp
mov
scas
xchg
xor
addl
inc
mov
cmc
pop
mov
and
lcall
mov
fimull
andl
xchg
clc
mov
rorl
mov
movsl
lret
sub
imul
or
jno
or
mov
inc
cmp
mov
gs
mov
insl
pop
loopne
and
cmp
jno
stos
push
scas
pop
sub
jae
dec
pop
xchg
mov
xor
pop
jl
add
cmp
aad
cmp
push
xchg
ss
jge
adc
pusha
add
xlat
into
jle
pop
mov
cld
gs
and
out
jge
stos
lahf
movsb
movsl
sbb
mov
mov
repz
data16
adc
dec
int
sbb
ret
dec
pop
lahf
in
cmp
hlt
pop
jle
daa
inc
add
pop
mov
sti
adc
xchg
sub
roll
add
sbb
dec
bsf
adcl
out
movsb
jge
add
dec
dec
mov
or
lret
inc
mov
pop
idivb
and
or
dec
mov
inc
mov
mov
or
ret
cmc
psubusb
int3
fld
fldt
push
mov
out
pop
fbld
sti
test
or
dec
lods
addb
enter
mov
js
sbb
in
xchg
add
jl
mov
int3
pusha
push
push
fbld
cmp
int3
mulb
das
mov
pop
in
js
out
mov
enter
cmpsb
and
movsl
popf
cld
cmp
bound
into
jns
int
mov
popa
mov
push
mov
mov
cmp
cltd
jg
xor
inc
es
dec
loope
imul
testb
shlb
movsl
and
sub
fsubrl
hlt
sbb
sbb
aad
sub
aad
sub
xchg
cmpsb
mov
scas
pop
and
cmp
stos
dec
cmc
cltd
iret
dec
lock
pop
test
cmp
sbb
xchg
aaa
mov
sar
clc
pop
scas
notb
mov
mov
mov
sbbl
aam
xor
xchg
cmp
mov
push
pop
pop
xor
cld
cli
inc
mov
mov
in
jp
ja
out
stos
sbb
cmc
ja
and
mov
outsl
lret
adc
fs
jg
pop
inc
dec
mov
scas
mov
jno
js
mov
sahf
mov
mov
dec
jns
jge
cltd
add
inc
push
mov
xchg
nop
icebp
dec
dec
push
cmp
popa
xorb
adc
pop
daa
div
daa
cmp
lock
dec
hlt
rorb
inc
mov
shrb
sub
inc
sub
mov
dec
popf
fnstsw
clc
int3
cmpsl
xor
call
sub
jle
xor
adc
rol
jecxz
sub
sub
jns
loop
popa
and
dec
xor
sbb
inc
mov
add
adc
mov
or
add
ds
lret
adc
pusha
popf
pop
dec
xor
fld
cli
lret
int3
push
std
test
mov
mov
adcl
and
add
ret
cmp
popa
iret
push
inc
out
inc
lock
jne
movsb
lock
mov
das
aad
mov
sbb
or
pop
pop
mov
xor
stc
pop
lea
cwtl
cmc
outsl
dec
imul
addr16
fisubl
lret
loopne
and
xchg
or
ljmp
jo
setp
inc
movsl
inc
jno
jns
inc
popf
cmpsl
sbb
sbb
sarl
mov
das
or
stos
xorl
fisubs
in
pop
inc
cld
nop
aam
add
sbb
inc
adc
or
pop
mov
xlat
dec
mov
scas
push
in
int3
mov
loope
cmpsb
mov
cmp
mov
pop
mov
je
inc
inc
xor
aaa
inc
fisubl
in
push
xor
mov
or
mov
mov
ja
test
mov
lea
inc
xchg
dec
and
dec
leave
mov
cltd
lock
jae
cwtl
xchg
xchg
or
adc
or
add
cld
in
cmpl
cmp
fildl
add
sbb
lahf
addr16
rorb
mov
or
enter
xlat
cmp
push
loop
add
roll
arpl
sbb
and
sub
cmp
inc
push
sub
add
cmpsl
cmpsl
mov
leave
pop
xor
adc
stos
mov
roll
icebp
xor
push
gs
and
cli
and
mov
leave
adc
fs
xchg
fldenv
pusha
mov
inc
mov
jecxz
nop
jbe
pop
scas
ret
xchg
call
inc
add
out
or
inc
lea
push
mov
add
insb
out
mov
push
test
movl
xor
jae
subb
mov
xchg
and
push
std
mov
inc
jb
data16
mov
out
push
or
jg
lock
aad
lock
and
mov
jo
xchg
ds
jg
jmp
jo
shlb
jo
fldt
lock
jg
cli
mov
mov
push
fisubl
mov
in
cmp
fdiv
je
frstor
out
nop
mov
push
lods
xor
cmc
pop
cld
pusha
and
mov
ret
std
mov
dec
lret
les
push
aas
push
xchg
in
loope
mov
decl
ret
fstl
mov
xchg
fisubrl
cs
pushf
test
dec
sub
lods
xor
clc
lock
add
push
xor
inc
nop
or
sub
pop
jmp
pop
iret
push
fisubs
jo
mov
dec
jb
imul
xor
and
sbb
scas
jno
fdivrl
pushf
sbb
push
push
insl
icebp
xor
mov
lock
jnp
int3
popa
jnp
cmp
dec
repz
fistpll
and
out
les
ret
add
push
rorb
ds
in
push
sub
xchg
lahf
pop
xchg
push
add
xlat
insb
mov
and
into
fbstp
push
sub
cmp
cltd
clc
mull
ja
data16
pop
lods
push
mov
inc
push
inc
sub
imul
jae
incl
ficompl
xlat
push
and
add
std
aam
ja
add
pop
js
adc
jns
push
xor
and
push
inc
lods
dec
testl
cmp
push
pusha
pop
lret
lcall
dec
repnz
stos
xchg
and
xchg
lock
mov
inc
sbb
sti
jl
call
mov
inc
add
bound
cs
scas
lds
push
xor
or
pop
jnp
pop
int
mov
pop
cmpsl
mov
mov
aam
mov
push
xor
aaa
call
dec
xchg
mov
pop
inc
and
testb
and
add
jmp
adc
inc
rorb
rorl
and
stc
cmp
mov
sbb
push
mov
popa
ret
adc
jo
mov
dec
dec
and
jae
mov
aaa
mov
lahf
mov
dec
hlt
xchg
fmull
fwait
mov
aad
aaa
shr
orl
sti
dec
and
cmp
imul
add
das
jne
bswap
aas
fmull
xor
insl
cltd
mov
clc
outsb
fnstenv
or
adc
int
inc
inc
mov
mov
movsl
in
mov
stos
and
loopne
cmpl
or
dec
es
addr16
bound
mov
cmp
icebp
xchg
push
fnsave
or
add
jmp
xchg
js
pushf
mov
or
inc
imul
lods
push
insb
push
xchg
popa
je
movsb
sbbl
aam
mov
lret
jl
mov
ret
fistpll
leave
lret
clc
adc
inc
fstpl
dec
mov
cmp
cld
and
pop
int3
mov
add
jo
sub
not
lret
data16
xor
adc
insl
mov
ja
ja
lods
fstpt
mov
scas
push
lret
jne
lds
cmp
xor
nop
sarb
popf
enter
push
cmpb
add
lock
push
fbstp
ret
rorb
and
out
add
push
movlps
out
js
ffree
movsb
adc
push
lret
mov
xchg
bound
inc
test
in
sti
jno
movsb
sbb
add
sbb
cmp
les
xchg
loopne
mov
shl
mov
push
sub
popf
add
pop
jg
adc
inc
mov
xor
mov
sub
rcrb
lcall
cld
or
fcmovnbe
data16
cmpsl
mov
jecxz
shrb
test
xlat
jno
stc
push
cs
daa
dec
lods
xchg
and
insb
adc
fidivl
push
pusha
hlt
ds
pop
xchg
pop
mov
lcall
xchg
mov
xor
dec
cmp
aam
pushf
ljmp
mov
test
or
filds
cmp
test
pop
lret
inc
inc
cmp
lock
xchg
imul
scas
jb
pop
xchg
mov
add
sub
pop
loope
add
mov
in
mov
sbb
jg
inc
lcall
mov
aas
and
aas
lret
mov
scas
xor
push
sub
pop
sahf
cwtl
lcall
loope
addr16
aaa
xchg
xchg
inc
js
addr16
adc
and
inc
inc
pop
sub
sub
mov
inc
sub
push
jp
aaa
pop
fstpl
fisubl
call
clc
out
dec
jg
dec
sbb
add
cmp
xchg
push
rcr
inc
pop
lcall
sbb
adc
mov
int
pop
pop
mov
or
add
xchg
dec
jo
outsb
mov
stos
mov
arpl
pusha
mov
mov
inc
pop
and
adc
cmp
testl
inc
imul
pop
aaa
and
in
stos
xchg
pop
cmp
fnsave
sti
jg
adc
nop
aam
arpl
fs
or
dec
cmp
or
dec
int3
cmp
push
sbb
cmp
sahf
lea
or
pop
or
jg
dec
and
es
add
sti
out
add
int3
xchg
test
repnz
lret
pushl
jns
nop
and
dec
sub
stos
inc
sbb
or
push
jns
in
add
xchg
mov
cmp
in
test
idivl
shrl
insl
inc
xchg
dec
lods
popf
adc
mov
mov
xchg
movsl
clc
lcall
mov
loop
invd
and
jno
jbe
in
mov
in
loop
mov
adc
scas
or
insb
inc
sbb
es
in
jb
cmp
movsl
loopne
orb
outsb
movl
icebp
sti
and
fistps
shl
mov
fsubs
insb
lret
ss
in
pushl
bound
and
mov
xchg
jae
and
mov
dec
pop
aad
mov
mov
push
jecxz
pop
lds
shrl
fbld
daa
out
mov
inc
mov
dec
lret
xlat
cmp
mulb
and
sbb
cmp
mov
cli
and
stos
dec
jmp
push
testb
mov
fucomi
push
and
or
jmp
sbb
push
mov
mov
clc
cmpsb
push
lds
add
movsb
inc
xchg
into
inc
pop
add
repnz
rcrl
or
mov
pop
decl
sti
in
jmp
pop
adc
and
cmpsl
rorl
imul
xchg
stc
das
xchg
sbb
push
hlt
outsl
cli
into
in
mov
jo
pop
xchg
mov
ficomps
mov
xchg
mov
mov
rcrb
les
sti
and
push
imul
xor
hlt
inc
repnz
les
add
dec
enter
cmp
out
les
add
xchg
sub
jno
jmp
cmp
and
adcb
test
fldl
fistpl
das
scas
mov
test
add
and
mov
jge
popf
fcoml
test
cmpsl
stos
jb
jle
push
pop
mov
test
push
sbb
clc
sbb
xor
insl
arpl
add
push
xchg
xor
mov
ret
cmp
cltd
fs
daa
in
xor
xor
sub
test
mov
popf
push
popf
sub
jle
pop
push
xor
mov
xchg
sub
lcall
and
lahf
mov
add
inc
sbb
int3
mov
aad
pop
mov
ja
push
int3
xchg
mov
imul
rcr
sbb
data16
scas
mov
shlb
fwait
ret
je
push
bndstx
pop
fldl
push
movsl
ja
inc
mov
int3
inc
subb
ds
ficomps
loopne
js
scas
sbb
mov
mov
xorb
jecxz
xchg
add
out
jbe
xor
push
leave
mov
enter
loopne
adc
add
jae
fcmovbe
enter
cli
jae
mov
ret
repz
je
pop
or
jmp
ljmp
stc
jmp
hlt
leave
pop
lock
pushf
cltd
push
mov
push
mov
les
mov
clc
das
push
shl
pop
pop
lds
sbb
push
pop
xor
in
ljmp
and
jge
out
outsl
mov
jb
push
pushf
push
xchg
sbb
mov
neg
adc
dec
in
mov
sahf
das
out
jp
icebp
pop
fdivrs
lods
sbb
mov
inc
arpl
sbb
xchg
fwait
sub
add
outsb
or
dec
test
ret
lods
jae
loop
cli
sub
insl
insl
jb
push
and
or
sub
xlat
fldcw
nop
fcomip
xlat
dec
jl
and
inc
fld
mov
or
add
stos
daa
cmp
shrl
push
adcb
fisttpl
rol
inc
les
or
addr16
push
jns
lahf
imulb
or
insb
imul
jp
scas
jp
mov
pop
xchg
mov
je
mov
hlt
shrl
movsl
push
jbe
sbb
xchg
xchg
pop
imul
sahf
push
out
xchg
push
lret
xor
shl
add
icebp
jle
dec
xor
pop
loop
mov
inc
pop
inc
incl
dec
push
mov
xchg
sti
push
mov
pop
xchg
je
or
mov
sbb
fwait
mov
sub
out
scas
jmp
je
adc
mov
inc
sub
mov
popf
push
or
shll
lods
inc
mov
pop
and
int3
test
or
roll
cmc
xor
xchg
sahf
out
sbb
jecxz
mov
in
xorb
fcoml
adc
mov
cmp
bound
sti
cmpsb
push
xor
pop
out
pop
push
pop
inc
ret
jmp
jle
sarb
push
out
and
pop
int3
inc
aas
pop
push
pop
icebp
je
xchg
pop
adc
ljmp
lcall
leave
add
mov
imul
imul
dec
ret
repnz
repz
test
xor
aad
and
cmp
sub
fcomps
cmpb
and
xor
fdiv
xorb
xchg
lea
daa
fs
sahf
push
pusha
mov
ljmp
fsubrs
jmp
cmc
xor
lea
fcmovnbe
push
mov
lods
sti
inc
int3
shrb
insb
mov
mov
inc
xchg
ja
test
lods
cmp
fs
push
std
mov
clc
pop
sbb
push
lea
cmc
mov
or
jo
jne
cld
sub
imul
andl
ljmp
leave
xchg
cmp
mov
inc
xchg
jbe
mov
lcall
sar
dec
push
ljmp
icebp
dec
inc
lret
mov
or
in
sti
push
bound
sbbl
icebp
js
xor
lea
cmp
cmp
push
decl
cmpsb
and
movsb
pop
imul
pop
in
lahf
mov
xchg
fstps
and
rclb
pop
and
mov
jno
mov
xor
cmpsl
push
loope
jb
and
out
pop
inc
fs
out
mov
fcompl
pop
add
mov
cmp
roll
loope
xchg
push
in
or
outsl
repnz
xchg
mov
mov
jae
subl
enter
sbb
cmp
ret
push
push
or
ret
pop
xchg
adc
push
ror
mov
cmp
orb
pop
fs
test
jo
jne
pop
int3
aaa
sbb
push
iret
jecxz
rclb
lea
mov
cmc
sbb
dec
xor
inc
shlb
cwtl
shl
jg
jnp
mov
mov
aam
xor
or
outsb
xor
loopne
imul
jecxz
insb
pop
mov
push
popf
sbb
test
mov
adc
cs
jne
lods
jo
dec
sbb
cli
bound
lahf
movsb
popa
lock
jmp
dec
mov
icebp
int
pop
adc
ja,pn
movsl
mov
es
pop
test
pop
mov
sysret
lahf
ret
xlat
in
cmpsl
and
add
fimuls
test
frstor
shlb
icebp
fisttps
jg
dec
out
and
pop
insb
mov
inc
jl
mov
push
sub
fdivp
push
or
inc
inc
jecxz
out
and
rolb
pusha
fmul
mov
xchg
push
jb
add
xor
or
popf
jmp
or
bound
imul
mov
cmp
ss
add
adc
push
cmp
xchg
mov
push
push
adc
xchg
push
sahf
add
js
fidivrl
pop
push
adc
mov
incl
test
rcll
aad
dec
imul
jns
sahf
loopne
std
ror
mov
mov
sbb
mov
imul
lods
adc
andl
test
fs
gs
aam
imul
leave
lock
inc
xor
inc
cmp
lds
aas
sbb
cmpsl
cmp
rcr
popa
pop
push
cmp
dec
out
add
sbb
ror
int
fcomps
mov
loop
xchg
daa
out
sbb
inc
lret
xchg
lock
lods
testb
adc
mov
std
push
in
inc
punpcklbw
int3
pop
sbb
push
mov
stos
sub
xor
outsb
rcrb
fucom
and
mov
orb
clc
xchg
aad
in
insl
mov
or
pop
pop
cmpsl
jge
push
jp
inc
xchg
call
xor
imul
add
out
outsb
push
adc
das
add
std
pop
es
inc
nop
sub
shll
ja
outsl
or
fisttps
lods
addr16
std
inc
pusha
lods
cmp
jno
shll
push
xchg
push
cld
sbb
pusha
jns
repz
dec
sub
mov
jg
push
sub
pusha
jmp
imul
jbe
mov
fstps
xor
icebp
sbb
gs
xor
scas
xchg
inc
imul
mov
pushf
mov
jmp
bnd
adc
mov
jg
negl
push
or
jge
aad
lret
aam
ds
aas
adc
push
mov
fwait
xor
insb
sbb
mov
mov
xchg
imul
sbb
add
insb
movsb
pusha
imul
jo
adc
inc
xchg
cli
in
mov
aam
and
es
xchg
stos
sti
cmpb
jge
test
rcl
enter
test
mov
ss
sbb
cld
test
test
jmp
dec
jge
jmp
pop
push
mov
pop
sub
jbe
or
ret
xchg
and
cwtl
mov
or
jg
dec
fdivr
ja
mov
xor
mov
pop
iret
xor
sub
rol
std
das
inc
mov
int
and
fwait
out
or
xchg
dec
xchg
int
adc
pop
sbb
mov
add
pop
push
mov
stc
jp
int
mov
mov
rorb
mov
xor
cmp
lahf
shlb
lea
sub
adc
dec
jo
movsb
daa
lea
out
pop
or
cmp
outsb
push
mov
cld
dec
lret
cmpb
or
mull
or
push
cmpsb
and
mov
arpl
ret
cli
push
leave
ret
sbb
sar
or
in
gs
in
cmpsl
repz
loopne
adc
das
dec
pushf
int3
or
hlt
in
adc
out
cmc
fiadds
mov
push
xchg
mov
pop
ds
lret
mov
or
in
and
add
loope
arpl
dec
push
fucomip
int
pushf
test
mov
sbb
cmp
xor
clc
pop
cli
pop
addl
mov
movsb
mov
sarl
test
and
jg
pop
ljmp
pop
bsf
scas
jl
js
outsl
inc
out
loop
rorb
lahf
fs
pop
lds
je
out
jl
dec
xchg
lret
dec
fwait
aaa
ret
ljmp
inc
push
stc
mov
mov
in
jo
lcall
lret
inc
lret
sbb
iret
xchg
fwait
mov
pop
xor
mov
adc
sub
sbb
repnz
add
adc
dec
flds
lds
jbe
or
mov
and
push
imul
inc
sub
loop
cmc
movsb
lea
repnz
mov
inc
or
mov
jge
xor
sbb
gs
cld
xchg
mov
lcall
fdivrl
pop
cwtl
sbb
xlat
lcall
mov
mov
test
scas
hlt
outsl
inc
out
mov
mov
sbb
jmp
pop
movsl
mov
aaa
popf
js
adc
mov
ds
shrl
arpl
sub
fwait
icebp
add
les
xchg
fmuls
add
test
xlat
dec
xchg
cmc
fwait
push
mov
sbb
sbb
int3
or
cmp
jg
dec
fsub
aam
jo
test
cltd
enter
in
out
pcmpgtb
ljmp
ljmp
pop
cmc
icebp
sub
cli
addr16
cli
jge
cltd
and
push
movsl
fstp
dec
js
cmpl
dec
push
pop
add
jecxz
xor
test
push
sub
imul
ljmp
mov
test
mov
insb
cmp
and
push
or
sbb
jecxz
test
sbb
fucom
movsl
popf
cmc
loope
mulb
or
push
rcr
push
popa
mov
mov
xor
ljmp
test
jo
leave
divl
stc
aad
call
jo
xor
jmp
sub
insb
or
lahf
mov
pop
test
ja
ja
dec
inc
in
out
pop
jbe
mov
jmp
xchg
inc
data16
hlt
mov
ljmp
inc
movb
movsb
mov
aas
sbb
xchg
mov
dec
ljmp
nop
inc
sahf
outsb
pop
add
mov
and
stos
aam
aam
add
insb
fistpll
xchg
pushf
loop
adc
enter
pop
mov
and
adc
mov
sbb
mov
daa
xchg
push
push
inc
clc
jo
jmp
fwait
bound
fsubr
stc
not
test
push
inc
repz
pop
mov
inc
rcl
jp
shll
jp
push
stos
cmp
adc
int
xchg
lods
lret
or
and
aaa
into
jae
pop
rcll
in
inc
xchg
arpl
mov
fsubl
jno
push
xchg
xchg
stos
inc
enter
or
xchg
jmp
mov
mov
call
test
aas
dec
or
inc
add
xchg
inc
pusha
movsb
mov
jb
les
xchg
dec
fcompl
push
dec
sbb
jp
out
pop
or
push
pop
push
push
js
sub
cltd
leave
out
push
mov
mov
imul
xor
cmp
in
xor
jmp
sbb
and
dec
hlt
jno
mov
mov
js
jecxz
adc
push
push
inc
mov
repz
xor
jne
xchg
icebp
outsl
push
pop
push
xchg
add
insl
inc
mov
imul
jecxz
fsts
orl
mov
push
dec
inc
cmpsb
out
dec
data16
lock
ficompl
push
cmp
loopne
decb
cs
out
pop
xor
adc
fists
js
in
mov
jae
scas
and
adc
js
fistpll
jns
pop
ds
jae
out
in
out
xchg
sub
add
in
mov
scas
push
fcomp
outsl
into
in
add
stc
pop
cmp
cmp
cmp
mov
jle
pushf
and
scas
nop
andb
mov
dec
stc
stos
shll
jns
shrl
in
push
pop
cmp
jp
fdivrl
push
and
fdiv
mov
call
sbb
and
jb
and
repnz
inc
mov
stos
mov
inc
fs
and
xor
sarl
lds
jecxz
xor
jno
cmp
mov
add
loopne
xchg
cld
pop
cli
pop
dec
out
mov
pop
mov
ffreep
and
and
negb
pop
sarb
or
sbb
lea
fadds
xor
cmc
daa
int
or
lods
movsb
les
jge
sbb
lods
daa
js
sub
inc
or
inc
dec
jmp
mov
sbb
mov
jnp
mov
test
call
mov
adc
enter
adc
push
inc
jns
test
jae
mov
loope
je
pop
mov
ljmp
cli
icebp
pop
cmp
sub
frstor
mov
push
fcoml
xchg
pop
adc
jbe
inc
sbbl
daa
jb
mov
or
push
fnstsw
push
lahf
je
pop
push
mov
shr
popa
add
mov
push
inc
push
and
push
scas
xor
out
mov
shrb
insl
push
sub
mov
shrb
push
insb
gs
jle
adc
jp
pop
push
hlt
inc
jecxz
jmp
aad
popa
and
out
mov
cmp
mov
jmp
clc
push
dec
dec
push
outsb
mov
mov
int3
aam
xor
inc
fwait
inc
cmp
mov
cmpsb
test
mov
movsl
jp
xchg
adc
imul
jbe
jns
popf
sahf
push
test
cmpsl
ja
fidivs
cwtl
nop
shl
sbb
cmp
daa
xor
or
push
sbb
ss
jne
subb
lds
push
mov
xchg
pusha
inc
jg
push
pop
mov
icebp
mov
cmp
lock
mov
push
call
ret
mov
inc
cmp
out
cmpsl
pop
cmp
lahf
jb
divl
call
inc
xor
out
xchg
inc
cmp
movsb
popf
sub
pushf
shl
dec
mov
stc
and
pop
mov
popa
sub
xchg
jle
stc
sbb
mov
andb
enter
insb
add
mov
enter
test
mov
xchg
ds
mov
sbb
je
sbb
mov
insl
mov
outsb
xor
in
lds
dec
out
sub
or
jle
movsl
dec
addr16
or
test
jge
or
das
add
repnz
popa
fmull
mov
push
adc
dec
rcll
inc
cmp
dec
jge
loopne
repnz
xchg
fdivp
iret
adc
mov
gs
call
sbb
and
jae
cmpsl
jbe
push
and
pop
lcall
cmpsl
push
dec
or
fisubrs
aam
jmp
xchg
in
loopne
lds
stc
xchg
ljmp
xchg
sbbl
es
ja
scas
or
std
out
cli
sbb
jl
loope
imul
mov
adc
mov
jge
cli
cld
out
sahf
adcb
push
mov
adc
lods
arpl
fmul
adc
jbe
call
sub
pop
dec
pop
lea
xor
mov
lret
mulb
je
out
inc
jmp
out
imul
mov
add
adc
push
adc
loopne
inc
stos
ja
pusha
sub
outsl
jle
sub
pop
mov
adc
ficoms
ss
loopne
scas
mov
cmpb
adcb
xor
fcmovbe
jg
xchg
adc
xchg
or
ss
mov
mov
andb
pop
sti
xchg
jno
or
jno
aas
cmpsb
mov
mov
pop
dec
cmp
add
movsb
loopne
adc
fbstp
jl,pn
sub
inc
mov
ror
dec
sarl
stos
xchg
and
bnd
dec
add
cli
xchg
shll
mov
int
ret
aam
int
iret
mov
in
adc
inc
sti
bound
sarb
sahf
and
mov
mov
enter
lock
cltd
jecxz
mov
lea
scas
cmp
ds
cltd
sbb
arpl
fisttpll
imul
fcmove
adc
aaa
sub
sbb
or
fs
lcall
jne
pop
pop
sub
pop
pop
inc
sub
sub
mov
sub
lcall
imul
xchg
out
ljmp
cmc
cwtl
sbb
ds
mov
inc
mov
cmp
movsl
mov
fidivrs
inc
js
shll
or
or
subl
cmpsb
push
cmp
test
pushf
mov
subl
rol
mov
rolb
cld
sub
cmp
out
notb
ss
fnstcw
mov
lea
push
scas
inc
ja
mov
clc
xchg
fists
nop
jne
lea
insb
ss
fwait
mov
mulb
shlb
xlat
sub
or
pop
sbb
out
sbb
push
mov
cmp
sbb
jge
test
lods
push
adc
mov
fstl
sbb
xor
xchg
xchg
dec
cld
test
enter
adc
jecxz
loop
rcpps
fnstsw
push
cmp
jmp
inc
mov
jbe
adc
lds
inc
mov
sarl
mov
pop
test
ljmp
inc
or
or
shlb
ljmp
jnp
lods
popf
mov
pushf
adc
out
add
push
push
inc
les
call
add
out
shl
jmp
jbe
mov
shlb
rorl
fimuls
inc
inc
dec
popa
or
fisttpll
dec
icebp
and
pusha
in
xchg
loope
adc
fwait
or
jae
sbb
test
xchg
xor
xchg
pop
aas
xchg
or
push
lahf
add
es
jle
mov
mov
pop
mov
fistpl
sub
scas
cmc
mov
ret
out
in
sub
inc
in
div
xor
jg
xchg
and
add
std
xor
cmp
pop
arpl
jae
es
push
sbb
push
popf
enter
mov
mov
es
mov
int3
stc
inc
mov
test
pop
rclb
push
sub
fstp
out
hlt
imul
xor
out
xchg
mov
inc
mov
push
push
ret
test
fiadds
aam
xor
adc
lock
jg
pop
lahf
xchg
testb
loopne
and
push
fs
xchg
out
clc
dec
std
es
rorb
mov
int
mov
pop
xor
movsl
sar
mulb
test
gs
add
loope
jle
pop
test
mov
ret
jbe
iret
sbb
mov
xor
in
popf
cwtl
test
jecxz
nop
jno
jne
and
push
lret
ror
movsl
lret
lea
mov
push
sbb
xlat
push
sbbb
insb
push
ja
imul
sub
and
iret
iret
push
push
adc
dec
addr16
pushf
add
mov
leave
cwtl
hlt
lret
outsl
movb
sub
lock
push
mov
test
sbb
mov
sarl
pop
push
insl
hlt
movsb
hlt
sahf
add
es
fcomps
ret
sbb
lods
mov
orl
mov
sbb
stc
adc
add
sbb
cli
xor
sub
push
and
dec
xchg
mov
cmp
je
jae
mov
and
andl
dec
push
fs
repz
inc
or
inc
xlat
movsb
lods
xorps
fldl
push
cs
dec
sbb
icebp
subl
test
out
and
push
in
xlat
ja
enter
fisttpll
and
lret
and
daa
add
fcmovne
cmp
out
inc
xchg
pop
repz
pop
push
jle
cmp
pushf
cmp
sbb
popw
push
ljmp
pop
lret
mov
out
mov
fmulp
in
jns
rorb
mov
xor
mov
leave
fisttpl
data16
inc
into
mov
loop
mov
lcall
inc
out
movsb
ss
pop
repz
inc
xor
daa
repz
mov
xor
ljmp
fisttpll
jbe
dec
sbb
imul
fs
outsl
call
adcb
mov
xchg
jno
push
push
push
xorl
cmpsl
dec
enter
add
push
adc
loopne
sbb
lret
das
xor
cltd
jb
pop
lahf
xor
pusha
mov
mov
cmp
jl
roll
out
arpl
jge
arpl
insb
sub
jecxz
test
loopne
cmp
dec
jecxz
push
dec
jp
and
stos
push
mov
xor
lds
test
cmc
push
sbb
pop
mov
jmp
es
push
into
sub
insb
mov
ja
insb
jnp
push
std
add
mov
in
shll
subl
adc
jecxz,pn
push
fs
dec
push
mov
jbe
ja
mov
mov
adc
and
cmp
es
cmp
inc
lret
inc
enter
sbb
int
mov
xchg
andl
sub
mov
push
icebp
mov
mov
test
aas
mov
lds
movsb
mov
pop
movsl
mov
shll
xchg
jl
test
xor
pushf
rcrb
rcll
jle
add
lea
dec
ljmp
sub
and
imul
out
stos
scas
scas
aaa
mov
and
cltd
pop
scas
sub
mov
in
lods
dec
cwtl
loop
inc
lret
xchg
cs
in
cld
xor
xorl
enter
inc
or
push
and
mov
hlt
push
bnd
adc
ret
loop
sbb
imul
mov
sub
cmp
movsb
int
inc
cmp
ljmp
jns
loope
push
and
sbb
rorl
mov
test
push
hlt
fcoml
mov
xor
std
pop
inc
mov
or
leavew
add
nop
inc
das
sti
fdivp
jae
fs
cmp
mov
sub
outsl
mov
nop
mov
pop
or
je
jg
jg
out
cmp
loopne
push
or
adc
and
mov
clc
cmp
jecxz
dec
or
mov
inc
push
dec
push
mov
nop
ret
jns
sbb
cld
adc
add
lret
shl
daa
add
mov
scas
inc
xchg
push
add
fwait
out
jnp
cmp
fistps
mov
push
outsb
ret
pop
stos
hlt
xlat
push
and
in
dec
insb
loope
push
jnp
int
loopne
orl
stos
dec
insb
sbb
lahf
sti
and
or
sarb
inc
xor
mov
mov
and
neg
rcrl
faddp
jo
sbb
and
push
testl
icebp
and
mov
jge
cli
mov
inc
inc
roll
lods
enter
movsl
add
mov
fldenv
push
cmpxchg
sub
pop
in
jb
and
mov
mov
push
inc
jle
sub
inc
cltd
outsl
mov
je
jb
pop
pop
aad
cmpsb
mov
and
xchg
xlat
cmp
pop
pop
mov
mov
adc
addr16
ja
pop
adc
sub
into
mov
pusha
cmp
add
sbb
bound
add
sahf
dec
adc
adc
mov
gs
loopne
sbb
cmpb
lock
cmpsl
jne
outsb
imull
adc
and
int
xor
js
sub
cli
icebp
cmpsl
ret
adc
fisubs
or
pushf
flds
jl
inc
pop
and
pop
and
mov
add
insb
stc
or
mov
std
pushf
inc
shlb
sbb
movsl
inc
xchg
sbb
sub
jecxz
or
adc
push
mov
push
jp
stc
sub
jno
xchg
sbb
pushf
mov
push
nop
insb
dec
pop
ds
jge
sub
jg
cltd
stos
aad
test
std
je
jo
sbbl
test
outsl
cwtl
sbbb
xlat
push
xchg
jge
xor
js
ljmp
fldcw
repz
fldenv
cmp
mov
xchg
mov
lds
inc
andl
add
fwait
scas
lock
mov
jmp
into
movsl
leave
or
sbb
adcb
pop
xchg
lret
sub
mov
xor
jnp
or
jle
inc
fsubl
sbb
jbe
lods
mov
pop
arpl
aaa
xchg
shrb
movsl
stos
xor
stos
ret
ret
xor
mov
sbb
mov
lahf
inc
xor
and
popa
jb
clc
test
repz
or
jle
cmp
cltd
inc
leave
fisubs
imul
inc
pop
dec
mov
xor
movsb
sarb
loopne
dec
dec
mov
mov
xor
ret
rcll
jne
cmc
outsl
addr16
mov
mov
or
push
cmp
mov
add
imul
ss
and
dec
scas
xor
mov
aam
cltd
mov
xchg
enter
fstpl
shl
dec
int
jo
cmp
sbb
aaa
mov
inc
xor
xchg
loop
jae
xorl
fstl
fldt
inc
vpcmpeqd
movsb
xor
push
xchg
pushf
test
sbb
pop
push
cs
mov
xchg
push
pop
pop
xchg
dec
push
mov
sub
sbb
out
jmp
cmp
push
mov
sbb
push
adc
pop
mov
mov
inc
xchg
stos
cmp
lea
adc
mov
or
cmp
testb
movsb
mov
scas
inc
push
mov
pop
movsl
out
mov
fdivl
cmc
aaa
push
cmp
xchg
xchg
push
aas
jns
inc
lods
xchg
out
sbb
clc
or
xor
xor
mov
test
push
add
cld
ljmp
scas
push
cmc
mov
fs
xchg
dec
add
test
mov
push
xor
adcb
scas
mov
aas
les
in
xchg
imul
jl
lea
and
xchg
lret
push
daa
lret
push
shll
and
sbb
data16
ds
mov
dec
push
sub
push
dec
shl
xor
jmp
les
call
rorl
dec
nop
pop
fnstenv
pop
js
mov
jb
ja
jecxz
int
loope
add
mov
dec
popa
lods
ljmp
push
dec
sbb
add
lods
jne
int3
cltd
shrb
mov
jbe
xchg
mov
mov
popf
cli
cmp
arpl
mov
mov
push
add
xchg
loopne
cmp
inc
jae
arpl
out
jp
arpl
mov
pop
pop
or
inc
or
push
jge
int
shlb
arpl
pushf
xor
xchg
outsb
lods
cmp
mov
pop
test
sbb
inc
int3
iret
unpcklps
pop
ljmp
jge
cmc
cmp
clc
sbb
in
stos
lahf
inc
dec
push
les
ljmp
dec
lock
push
jne
dec
cmp
int
push
mov
xchg
dec
in
adc
cmp
in
or
movsl
aaa
push
cli
rclb
xchg
cltd
jle
xor
movsb
adc
and
push
rol
int
mov
fnstcw
lcall
ret
xchg
push
cld
ds
movsl
pop
jo
push
xor
fiadds
icebp
xchg
out
xchg
xchg
xor
rcl
lock
pusha
sbb
jo
xchg
jbe
mov
orl
xchg
pop
and
or
je
push
shlb
int3
cmp
push
adc
lea
add
mov
pop
insl
imul
adc
cmp
mov
mov
mov
int
das
and
scas
sub
and
int
cmp
jns
adc
stos
mov
decl
loope
in
mov
fldt
xchg
scas
std
add
loopne
mov
popf
jae
pop
std
pop
and
add
add
ret
jl
push
jns
xchg
jns
pop
lods
cmc
aad
pop
xchg
xor
jmp
ret
dec
mov
jae
addr16
out
jmp
inc
sarl
loop
mov
imul
dec
leave
and
jp
inc
stos
mov
jge
jecxz
out
out
jnp
bound
mov
aas
addr16
ret
dec
or
jg
jge
sub
loope
dec
in
jge
inc
fucomp
mov
xchg
mov
or
jns
cmp
pop
mov
add
cmp
aas
test
xor
int
cmp
js
pop
gs
faddl
push
push
stos
lahf
xchg
outsl
ret
int
fsubl
and
scas
or
pop
ret
inc
mov
mov
int
jb
xor
pop
shl
inc
dec
xchg
stos
inc
ja
mov
inc
xchg
gs
inc
pop
lds
push
lahf
nop
push
sahf
faddl
loope
loopne
mov
das
mov
pop
in
call
clc
or
in
lock
cwtl
xor
test
hlt
xor
bound
mov
inc
sar
jb
into
aam
sbb
out
test
adc
inc
cmp
or
dec
add
add
sahf
popa
pop
or
sahf
inc
ljmp
sub
fcomps
pop
fwait
pop
outsb
mov
adc
ds
xor
ret
mov
dec
or
and
cmp
stc
and
les
leave
pop
stos
pop
xor
push
test
add
xchg
fnstenv
push
outsl
and
lds
addb
out
jg
shlb
scas
mov
push
mov
or
or
fimuls
out
sub
lock
mov
or
mov
fstl
js
jns
test
pop
fucomp
inc
imul
cmp
inc
sbb
int3
insb
mov
loop
cmc
push
enter
xchg
adc
fcomip
aaa
mov
out
cmpsl
fdivl
dec
je
and
rclb
add
jnp
mov
pop
divb
xor
dec
or
dec
mov
movsl
scas
push
sub
inc
les
pop
stc
mov
jecxz
jno
jns
push
cmc
sarb
hlt
out
dec
leave
int3
inc
xchg
cwtl
inc
popf
loope
fldt
dec
lcall
sahf
shl
cmp
bound
jae
or
es
rolb
in
fwait
lret
ficomps
pop
or
push
insl
add
das
mov
xor
push
das
aas
gs
cwtl
ljmp
pop
mov
into
xlat
xor
jle
enter
mov
test
pushw
test
scas
xor
jecxz
cmc
repz
ja
and
into
add
clc
in
push
and
inc
mov
xchg
cmc
fs
xchg
mov
fwait
xchg
in
sub
jge
or
popf
mov
mov
sub
mov
cwtl
ja
xor
cmpsb
xchg
enter
inc
popa
or
cs
lds
cs
lock
lods
cs
pop
sbb
xchg
add
out
and
xchg
subb
leave
xlat
or
mov
dec
popw
jno
outsb
sarb
push
test
call
cs
mov
fsubl
nop
jb
mov
fsubl
lret
cwtl
out
ret
stc
and
addr16
in
xchg
push
ret
and
mov
xchg
lea
ss
cwtl
xorl
stos
in
std
xchg
in
xor
xor
mov
out
popf
or
xor
mov
pop
and
or
sahf
add
stos
fs
cmp
mov
mov
mov
cmp
stos
sbbb
jnp
push
xchg
ret
xor
cmp
mov
mov
addr16
push
xor
imul
clc
negl
adc
rep
int
cld
scas
jae
insl
outsb
ret
jnp
jecxz
fcmovnu
imul
dec
nop
cs
mov
xchg
fistps
cltd
mov
cli
push
mov
iret
pop
test
roll
incl
stos
loopne
js
movsl
xor
loopne
mov
inc
std
leave
mov
sbb
pop
cmpsb
cmp
lret
push
lods
or
jo
inc
test
movsb
cld
xor
in
in
test
fdivrl
jns
dec
imul
add
xchg
sub
push
adc
xchg
mov
jbe
rclb
jbe
push
stos
xor
push
addr16
frstor
fstps
das
loope
les
sub
out
stos
push
xor
cmp
dec
cmpsb
sbb
push
xor
xor
sarl
xchg
stos
aad
js
jns
or
stos
inc
xchg
sbb
icebp
dec
jl
int
push
fs
inc
sahf
push
out
outsl
inc
mov
adc
sub
test
xchg
xchg
test
outsb
add
fcoms
sti
push
aad
xchg
int
jno
jbe
xchg
lret
fnstenv
mov
andb
or
je
stos
lret
push
push
dec
out
pop
aam
push
cmp
or
pop
or
cmpl
lret
xchg
mov
loopne
and
add
xor
jl
add
int3
cmp
jno
or
inc
dec
add
inc
stos
hlt
sub
jnp
test
or
pushf
push
xlat
addb
sbb
or
je
jp
cmp
pusha
adc
fs
lahf
jno
les
out
popf
insb
cmc
dec
pop
fistpll
jmp
sub
push
mov
inc
cmpsl
outsl
imul
iret
in
inc
test
daa
fwait
ja
sub
cmp
ret
stos
jl
cld
push
stos
mov
les
xor
jge
das
add
lret
dec
jg
insb
dec
loope
decb
fwait
push
and
xlat
cmp
mov
movsb
stos
xlat
dec
mov
mov
outsb
ret
imul
jno
shrl
mov
xor
push
ret
push
popl
movsb
cltd
xor
xchg
dec
scas
repz
pop
mov
stos
bound
or
cwtl
leave
jecxz
jmp
scas
cli
mov
dec
mov
xchg
mov
xchg
pop
inc
or
mov
ret
xor
mov
xchg
pop
dec
out
stos
adc
adc
dec
cmp
imull
mov
repnz
xor
mov
out
jecxz
mov
rorl
movsl
ret
pop
add
push
sahf
scas
cmp
mov
fstpt
pop
mov
iret
pop
lcall
mov
and
and
ds
nop
in
fstl
mov
jmp
xchg
sbb
mov
pop
lods
inc
dec
je
add
je
dec
and
mov
imulb
mov
mov
mov
bound
outsl
dec
fnstcw
out
insl
inc
pop
inc
dec
inc
ss
lds
cmc
test
push
adc
dec
xchg
popa
loope
push
jne
push
cmpsb
xchg
xchg
dec
insb
adc
push
add
inc
imul
xchg
mov
dec
pop
push
xor
xchg
fs
mov
inc
sub
stos
push
shrl
jp
mov
notb
popa
pop
shlb
addb
add
idivl
imull
ljmp
nop
or
jecxz,pt
es
push
or
sub
or
filds
pop
xor
ljmp
pop
test
je
cld
push
xor
in
mov
lcall
and
mov
xchg
pop
fldcw
movsb
cli
in
mov
dec
pusha
inc
jb
cmp
and
ljmp
mov
pop
xchg
pop
insb
jno
xchg
lock
ss
stos
in
mov
aad
mov
loopne
cwtl
add
push
test
mov
pop
scas
jno
pop
clc
or
dec
or
imul
mov
add
adc
adc
mov
movb
leave
push
in
mov
in
add
pop
mov
dec
icebp
jae
push
inc
gs
xlat
out
ficompl
xchg
dec
lret
dec
mov
fcmovnu
testl
sub
sub
test
sbb
cmp
dec
sbb
sbb
aad
jb
mov
jnp
out
inc
xchg
or
popf
jne
push
cltd
mov
sub
clc
adc
jge
mov
xchg
das
lock
fsts
push
dec
aad
lock
and
cmp
adc
aam
dec
mov
mov
dec
mov
cmp
ret
test
and
fdivs
or
xchg
stos
jb
out
stos
xchg
out
das
mov
addb
xor
lahf
cs
sub
repnz
sbb
pop
mov
mov
sbb
je
arpl
les
stos
dec
mov
movsl
imul
mov
scas
aad
and
cmpl
addr16
out
pushf
inc
test
xlat
lahf
testb
pop
and
sti
dec
push
call
enter
xchg
cmp
cmp
xchg
push
out
push
jg
repnz
xchg
mov
sub
mov
mov
cs
hlt
scas
cmp
sbb
mov
mov
sub
out
loopne
aam
sbb
adc
pop
sbb
ds
popa
sbb
dec
lods
test
sub
mov
rclb
leave
mov
es
repnz
inc
jno
jae
ds
xchg
shlb
cld
jmp
adc
mov
lods
pushf
add
ljmp
jb
push
outsl
aad
aas
mov
sbb
call
push
dec
pop
push
inc
push
add
fsubrl
lcall
aam
enter
icebp
pop
insb
arpl
scas
xorl
push
lret
mov
mov
mov
cmp
int3
push
int3
jnp
or
popf
pop
in
ds
sub
mov
sub
sahf
scas
mov
addl
adc
dec
inc
popf
movsl
mov
ljmp
cli
push
push
jno
fidivs
loopne
ss
mov
xor
subl
ret
pushf
idivb
jge
lret
aaa
jns
or
pop
sub
shlb
sahf
mov
cmpsb
gs
mov
xchg
cmp
lret
sbb
cld
paddq
cmp
jae
in
ss
push
addl
int
xchg
and
mov
pop
aas
jmp
mov
cmp
cmp
hlt
sub
lods
mov
mov
pop
xor
test
cld
divl
push
jae
call
dec
xchg
dec
or
xchg
pop
aas
int3
js
loope
nop
xchg
loopne
aad
leave
jo
test
xchg
cmc
hlt
ss
sbb
adcl
xor
std
adc
pop
push
xor
je
jo
xchg
hlt
dec
loope
and
in
push
sbb
mov
mov
popa
mov
xlat
inc
xchg
imul
ret
add
scas
jb
ds
sub
sbb
inc
and
lods
cmp
mov
jle
int3
sub
clc
fmuls
fdiv
xchg
xor
ja
pop
cmp
lret
xchg
in
jae
dec
mov
popa
scas
repnz
popa
pmaxub
cmc
or
xor
or
pop
mov
clc
jns
adc
movsl
add
nop
inc
lcall
xchg
mov
xchg
aas
ret
loopne
push
insl
xchg
cmp
popa
sub
test
mov
xor
push
insb
adc
fmull
push
mov
or
int3
pcmpeqb
cld
xor
add
add
sub
mov
shrl
ja
insl
push
negl
sbb
pop
dec
and
cmc
in
dec
fnsave
mov
in
push
jl
mov
dec
in
adc
mov
clc
scas
push
sarb
outsb
or
hlt
out
sbb
pop
pop
outsl
push
xchg
enter
xor
inc
or
gs
mov
rol
push
lcall
fbld
ja
pop
hlt
test
sahf
adc
mov
repz
xchg
aad
xor
mov
inc
out
adc
and
mov
push
ret
sbb
notl
int3
sbb
cmc
or
out
jbe
jl
inc
xchg
sbb
or
pop
xor
push
pusha
cwtl
mov
jnp
ja
cld
mov
mov
fists
mov
es
stos
mov
add
push
test
int3
popf
stos
sub
sub
btc
xorb
cs
scas
xor
xor
add
scas
ja
imul
pusha
and
jnp
xchg
add
lds
test
sbb
outsb
inc
cmp
and
mov
insl
lods
loope
add
jmp
fistpll
push
dec
xorb
ljmp
rol
aad
xchg
addr16
add
pop
mov
inc
inc
je
jns
into
shr
dec
mov
mov
ljmp
pop
cld
ljmp
pop
out
push
std
mov
fidivrl
jp
in
add
cmpsb
xchg
call
lret
rcll
mov
fsubs
je
jmp
sub
test
nop
test
test
push
mov
lcall
jp
out
sbb
and
cmp
jo
fimull
dec
cltd
int3
aad
repnz
push
enter
pushf
sub
mov
in
ss
sahf
jge
mov
cwtl
inc
cmp
jmp
movsb
pop
push
xchg
sbb
push
aaa
orl
outsb
jl
rorb
xchg
iret
rcrl
ficoms
sbb
addl
cwtl
bound
sbb
cmp
test
or
pop
lock
dec
fisubrs
jae
jbe
xchg
fwait
pop
movl
pop
lock
sub
out
movsb
or
cwtl
push
sub
cmp
xchg
ret
or
xor
mov
adc
es
insb
ret
test
fcoml
xchg
dec
lods
pusha
xlat
js
sub
xor
popa
dec
iret
mov
popf
dec
popf
jns
je
or
retw
push
lcall
mov
mov
mov
push
sbb
push
bound
leave
sub
add
mov
mov
jno
jnp
aas
fsubl
dec
cmp
pop
push
push
ficompl
dec
jl
testl
dec
jp
jbe
pop
or
arpl
xor
dec
orl
lcall
xchg
ror
pusha
cmp
in
out
pop
jnp
jbe
movsb
push
pop
and
xchg
jne
daa
out
pop
xor
jge
jne
gs
das
or
sub
das
inc
fcmovbe
jle
fwait
or
push
dec
and
dec
or
add
stos
xlat
js
xor
cld
add
ret
jne
nop
xchg
mov
jle
maxps
scas
jbe
sbb
lcall
inc
mov
lahf
pop
xor
or
mov
push
cmpb
addr16
fldenv
scas
mov
jg
xor
cli
ficompl
rolb
ret
mov
add
lods
popa
ds
clc
int
sbb
bnd
int3
int3
push
mov
dec
scas
test
push
mov
sbb
dec
in
ds
cmc
add
jae
popa
cltd
pop
fwait
call
cld
adc
adc
out
js
outsb
inc
movsb
sahf
lods
or
aad
xor
sti
jo
popa
and
ficompl
sub
sbb
and
shl
repz
lret
inc
scas
jo
pop
lods
add
call
jo
pop
pop
inc
inc
mov
sbb
or
mov
cmp
lods
xchg
push
xchg
mov
mov
cli
rclb
mov
adc
dec
adc
or
ds
leave
push
movb
push
mov
sbb
outsl
popa
ds
sarl
xor
es
repz
xor
inc
jo
jns
lret
negb
lahf
mov
lods
cmpsb
pop
adc
push
fnstcw
jecxz
fcoml
push
dec
fbstp
or
ds
int3
mov
cmpsl
cmc
cwtl
xor
in
mov
add
test
xlat
dec
add
fnstcw
jo
push
xor
in
xchg
fdivl
jns
enter
dec
sub
dec
jns
sbb
test
js
xchg
xor
jle
pop
or
jae
push
mov
sub
push
leave
mov
or
dec
adc
add
shll
data16
push
push
negb
outsb
ljmp
rorb
add
cmp
sub
cmp
sbb
popa
inc
sarl
dec
push
out
mov
dec
xor
ret
xchg
sbb
fwait
pop
and
mov
mov
fwait
jne
mov
push
fldl
js
jbe
lcallw
lds
loope
xor
sbb
jo
cli
bound
insl
pop
incb
call
lods
xchg
add
cmp
adc
sti
repnz
rorb
push
pop
ja
sub
or
push
pop
pop
and
das
test
xchg
sahf
or
dec
or
shll
jno
loope,pt
or
loope
lret
test
rorb
pusha
xchg
fs
sbb
rcr
outsl
push
mov
xchg
ljmp
mov
dec
pop
jo
pop
mov
stos
test
pop
shl
fidivl
cmp
popf
aas
unpckhps
or
sbb
adc
mov
add
insb
inc
popf
popf
mov
sbb
sbb
mov
dec
hlt
cmp
inc
xlat
ljmp
in
lock
mov
xor
lret
sahf
sti
fimull
push
cmp
into
push
xor
xor
mov
ret
adc
dec
cld
repz
shr
lods
sbb
sahf
dec
fsubr
xchg
nop
pop
jae
xor
cmp
push
inc
xchg
dec
sti
push
jge
repz
ret
test
lock
jbe
dec
push
sub
jbe
sarb
adc
lcall
push
mov
gs
push
inc
mov
sub
fimuls
mov
mov
mov
or
jns
les
pop
pushf
mov
fstpt
int
sbb
je
ret
pop
jmp
leave
leave
pop
lret
adc
pop
xor
add
insl
mov
pop
rcr
ljmp
addb
aas
mov
jne
out
adc
push
data16
mov
int3
push
mov
stos
dec
pop
mov
and
sub
movntq
aaa
xchg
sbb
fdivl
in
push
inc
fs
jge
daa
mov
jo
sbb
push
push
adc
and
fdivr
fwait
push
sbb
cmpl
mov
arpl
add
in
push
add
repz
aaa
dec
adc
fcompl
push
cs
call
cmp
jp
cmpsb
xchg
out
xchg
pusha
pop
mov
add
addr16
or
sbb
outsb
push
mov
xor
cmpsb
xchg
adc
stos
xor
cwtl
adc
lods
into
inc
pop
outsb
orl
sub
dec
and
clc
cmp
dec
push
outsb
mov
mov
ficoml
push
jnp
inc
popa
xor
or
cld
and
sbb
inc
dec
mov
stos
rdpmc
aaa
cmp
mov
push
mov
lret
ret
xchg
incl
xor
jl
cmp
xor
add
das
dec
push
ret
sbb
pop
mov
mov
push
jecxz
data16
dec
aaa
frstor
jno
sbb
popf
in
cmpsl
ret
insl
mov
push
cmpw
jns
xchg
inc
cmp
mov
push
movb
push
clc
es
int3
repnz
mov
pop
in
inc
stc
sbb
add
sub
xchg
push
fstps
aaa
lcall
push
cmc
rol
xchg
jge
push
rol
test
mov
icebp
xor
push
or
jne
or
mov
mov
cmpl
out
test
fnsave
sar
ret
jmp
loop
cmp
sbb
adc
sub
push
outsl
pop
jecxz
cli
das
mov
push
mov
pop
in
cld
add
mov
lock
cwtl
xor
xor
addr16
adc
pop
push
sarl
repz
sahf
jne
pop
push
repnz
push
jb
jg
das
inc
into
insb
lock
clc
cltd
and
adc
imul
sarb
lds
adc
movl
and
lret
rdtsc
xchg
jecxz
pop
es
ds
sbb
not
jl
mov
out
inc
dec
cmpsl
jle
pop
dec
jle
pop
leave
pop
sub
stos
xchg
jmp
xchg
jae
in
add
rcl
push
leave
cmp
bound
hlt
xlat
sete
add
iret
nop
adc
insb
mov
outsb
pop
ret
les
xlat
jle
stos
xchg
and
faddl
push
and
jge
and
mov
mov
inc
cvttps2pi
or
andb
adc
add
xchg
jns
jl
jge
add
aas
lods
mov
inc
incl
inc
and
push
cmp
jl
inc
mov
ret
mov
pop
jecxz
xor
movsl
fdivrs
jns
js
out
cltd
js
nop
adc
movsl
ljmp
bound
or
and
dec
xor
xchg
or
xor
ret
jge
fmul
dec
hlt
push
mov
mov
sub
sahf
pushf
fucomip
daa
loop
pop
inc
xor
fnstsw
mov
mov
mov
push
dec
out
push
popf
xor
sarl
pop
xchg
imull
fs
outsb
sub
push
pop
lea
pop
jae
xchg
in
mov
ljmp
mov
and
int
pop
add
inc
push
xchg
loopne
js
mov
and
push
inc
mov
into
mov
lret
cli
jle
shl
not
adc
xchg
mov
cmp
add
fidivs
fiadds
pop
jge
mov
cmp
sub
rclb
inc
sub
iret
je
pop
mov
fstpl
xlat
jle
cs
pop
lret
fiadds
sub
jnp
imul
sarb
cld
jne
mov
lret
addl
int3
mov
and
sbb
sub
or
xchg
and
jbe
arpl
jne
sahf
push
stc
fsubrl
cmpsl
mov
mov
push
and
mov
clc
test
mov
dec
inc
push
mov
int3
insb
or
je
ret
inc
in
pop
jmp
xor
loope
push
pop
sub
stos
sub
popa
inc
popf
xchg
sbb
test
push
pop
cmp
ret
scas
cmpsl
fildll
mov
stc
sbb
das
mov
loopne
sub
dec
fisubrs
cltd
add
clc
adc
jb
mov
mov
mov
or
and
aaa
out
dec
xchg
rorb
movsbl
sbb
into
or
xchg
lea
mov
mov
inc
add
imul
xor
push
popf
out
jne
cmpl
sbbb
cmpsl
sbb
dec
inc
adc
mov
jo
cmp
add
cmp
sub
rclb
mov
in
jle
and
push
in
das
cmp
test
mov
cltd
or
test
pop
repz
ret
jnp
adc
cltd
push
fnstsw
inc
shl
adc
js
add
add
cmpsl
vpsadbw
push
cli
pop
add
xchg
pop
push
incb
in
subb
dec
adc
js
sub
push
in
cmp
fs
push
outsb
jge
dec
cwtl
xchg
into
push
and
sub
or
ds
fcomps
cli
or
les
jl
in
pop
out
ret
ss
clc
test
packssdw
dec
ljmp
cs
pushf
pushf
ret
cmpsl
mov
inc
mov
mov
lahf
mov
ds
dec
ret
sub
lods
stos
ljmp
xor
sahf
add
rcl
xchg
adc
push
lock
mov
out
xchg
ds
lds
add
cld
sbb
mov
lahf
jecxz
imul
and
add
incl
test
dec
data16
mov
inc
cli
pop
or
sbb
rclb
pop
jno
int3
dec
in
stos
loopne
xchg
push
ds
adc
or
cli
pop
sbb
pusha
sahf
mov
incb
add
mov
clc
ret
sub
dec
arpl
mov
add
aaa
ror
shll
jg
adc
ss
sbb
sub
sarl
inc
and
adc
jg
leave
mov
icebp
xchg
mov
xchg
stos
push
mov
pop
cmpl
xor
clc
cli
outsb
mov
jg
add
loop
into
fsub
mov
inc
mov
cli
rcll
push
ror
call
fidivl
mov
add
mov
gs
inc
push
xchg
les
dec
in
mov
push
dec
sahf
sti
rep
movsb
fists
or
push
xchg
in
xor
jecxz
dec
je
leave
ss
icebp
sar
aam
sub
test
fucomip
mov
adc
mov
mov
sub
leave
in
inc
mov
dec
sarb
or
movsb
in
and
lods
dec
or
ljmp
subb
jo
add
push
push
movsl
add
adc
cmp
mov
sahf
in
push
xlat
xchg
mov
das
fnstsw
lds
loopne
push
movsl
js
pushf
or
movb
jbe
cmp
xor
add
test
mov
cwtl
fcompl
push
push
shlb
sbb
sbb
dec
out
outsl
cs
dec
cmp
leave
ljmp
imul
push
jmp
scas
xor
test
push
xchg
ja
jnp
cmp
pop
cmc
aad
or
iret
push
xor
xchg
outsb
std
xchg
inc
xor
adc
addr16
pop
sbb
mov
dec
dec
push
dec
imul
and
stc
rcl
mov
into
out
addr16
leave
mov
jbe
in
andb
xlat
or
nop
nop
inc
pop
test
lea
roll
mov
les
xchg
lds
push
je
lcall
push
fwait
xchg
jbe
daa
or
fs
fwait
mov
mov
scas
push
dec
nop
inc
int3
mov
xchg
les
adc
pop
xor
sbb
roll
clc
leavew
mov
mov
push
movsb
lahf
jns
inc
leave
jmp
push
and
and
inc
or
notl
das
adc
and
push
and
lea
stos
adc
mov
pushf
xor
push
ss
adc
pop
sahf
jge
inc
fptan
dec
sarl
cmpsl
aad
in
push
mov
or
jnp
out
jno
mov
xor
test
and
jp
cmp
jge
aas
jne
imul
lods
sti
out
mov
dec
cltd
and
iret
mov
adc
pop
mov
xchg
pop
pop
jecxz
fisttpl
push
lods
push
cli
inc
negl
and
enter
fs
sbb
insl
dec
ret
sbbb
rol
xchg
loop
je
jle
fisttpll
dec
sbb
or
add
fcompl
and
pop
jae
imul
leave
aaa
adc
mov
and
sarl
adc
ljmp
roll
sbb
icebp
fnstcw
mov
scas
pop
and
iret
repz
mov
lods
mov
mov
push
and
push
dec
fs
adc
arpl
ror
aad
add
adcb
cmp
xor
mov
fs
add
sub
roll
incl
push
lret
inc
or
mov
repnz
ret
add
xor
jmp
ss
adc
inc
aam
push
rorb
fucom
test
incb
xchg
jns
int3
jb
jo
jne
imul
ret
jne
roll
cwtl
cwtl
xor
mov
call
xchg
fists
aaa
test
jg
cmc
and
gs
adc
popa
jnp
mov
popl
lods
mov
ljmp
sahf
cmpsb
pop
xchg
push
pop
inc
test
das
loopne
cmpb
mov
insl
cmp
mov
out
lret
xchg
and
xor
push
jge
stc
rcrl
test
ds
push
xchg
call
mov
add
sub
inc
mov
sub
js
mov
pop
xchg
sahf
and
outsl
cs
xor
xchg
cs
ret
mov
cmp
mov
addl
push
push
clc
arpl
pop
push
stc
bound
movsl
pop
mov
sarl
in
xchg
sti
sub
dec
shll
js
cs
and
outsb
xchg
adc
ret
js
lret
mov
icebp
out
push
mov
jge
dec
adc
lods
xchg
add
movsb
test
mull
inc
inc
test
rcl
ljmp
xchg
adc
fisubl
mov
mov
sub
pusha
inc
sbb
iret
mulb
cs
dec
das
cmp
mov
int
mov
fmuls
cmp
daa
das
sub
sub
xor
or
cmc
insb
test
xchg
mov
ret
cmpsl
inc
mov
lea
pushf
mov
aad
mov
push
mov
add
jne
lahf
and
scas
out
adcb
shl
mov
jmp
pop
repz
and
sub
fld
insb
xor
push
xchg
ljmp
push
xchg
addr16
je
or
aaa
jnp
scas
push
mov
pop
cmpl
fcomi
fdivrp
adc
cmp
leave
dec
inc
movb
jge
adc
push
xchg
rclb
adc
jg
sub
mov
loopne
movsl
cwtl
add
scas
push
mov
std
arpl
or
pushf
test
add
es
jno
ficoms
cmp
jl
or
sbb
lock
sbb
cmp
and
adc
push
testl
movsb
std
shlb
xor
adc
popa
test
test
das
outsb
and
pop
sbb
mov
push
and
mov
xchg
test
inc
aaa
popl
test
xor
fwait
xor
fwait
dec
jl
testb
push
jl
add
jb
es
sbb
xchg
add
inc
sbb
push
mov
sub
adc
mov
loope
div
mov
cltd
add
dec
adc
adc
and
call
arpl
jnp
pop
mov
pop
jbe
orb
aaa
mov
sbb
in
testb
test
into
ljmp
and
lret
js
mov
lahf
in
testb
frstor
sub
std
push
ret
xchg
mov
iret
loopne
push
push
jp
sbb
fsts
ja
mov
mov
cmpb
into
lea
inc
repz
jl
addr16
sti
and
pop
dec
repz
pusha
fcmovnu
sti
or
xor
sahf
int3
jge
mov
pop
xor
lret
push
lret
into
test
repnz
mov
and
mov
xchg
fdivp
pop
push
test
and
filds
es
sub
inc
xchg
adc
dec
rcr
insb
mov
jnp
iret
cmpsb
aaa
inc
les
hlt
dec
push
arpl
push
and
imul
sub
lods
push
adc
je
gs
jl
or
push
fmuls
cmovne
test
loope
mov
or
pushf
push
sub
iret
imul
xchg
add
das
jns
pop
pop
jns
mov
loopne
insl
jmp
xchg
dec
movsl
mov
daa
dec
ret
stc
sarb
and
mov
stc
clc
nop
sbb
ja
ss
xor
dec
pop
lahf
pop
fisubs
add
jmp
repz
pop
fwait
jns
das
push
jno
imul
mov
jge
xchg
or
arpl
sub
jne
add
dec
js
xor
dec
mov
lret
movhps
mov
mov
jp
or
js
mov
xor
loopne
enter
repz
mov
gs
push
cmp
push
mov
addb
lods
dec
pop
jne
mov
lcall
int
pop
mov
leave
sbbl
xor
cmpsl
arpl
lods
adc
mov
nop
xor
push
pop
mov
sub
jmp
dec
dec
mov
lods
pusha
loope
mov
mov
dec
inc
xor
dec
xchg
cmp
lds
mov
or
gs
out
adc
aad
test
inc
inc
lret
adc
cmpsl
or
roll
or
add
push
push
lret
mov
stos
jp
jnp
cmp
adc
jmp
sahf
cmpsb
dec
rol
push
push
mov
jl
mov
cmp
jae
data16
add
dec
dec
xchg
dec
xchg
movsb
add
cmp
sti
int
push
push
lret
mov
jne
in
ret
mov
into
fsubl
ja
dec
fnstenv
jl
bound
fcmovnb
jl
jp
lds
jb
cmc
dec
mov
nop
repnz
mov
lods
push
and
stos
inc
mov
pop
add
lods
add
or
adc
imul
out
inc
xchg
inc
jecxz
cmc
push
push
lret
sbb
pinsrw
or
shlb
or
fimuls
push
nop
sarl
mov
mov
push
outsb
sub
pop
insb
pop
add
aam
mov
jae
mov
cli
xchg
in
mov
shrb
cli
cmpsb
inc
shlb
aam
mov
and
mov
mov
mov
aam
mov
out
aaa
cwtl
push
leave
pop
sarl
sub
add
test
pop
mul
adc
dec
inc
xchg
sbb
push
or
jo
ret
sub
push
adc
sar
rcrb
cmp
out
rclb
and
in
aas
outsb
icebp
or
loope
add
loop
lock
scas
and
aaa
aad
push
insb
inc
dec
push
push
pminsw
repz
std
xlat
mov
push
adc
adc
daa
outsl
sahf
stc
ret
pop
imulb
mov
mov
or
ljmp
mov
add
xchg
mov
xchg
fnstsw
pop
push
jne
test
aas
fwait
pop
jge
rorl
rol
cltd
push
fimuls
xchg
sub
ljmp
insl
stos
in
ret
es
dec
lods
movsb
adc
cmp
sbb
std
cmp
lods
sub
jae
in
adc
cmp
das
inc
fs
push
cwtl
scas
sub
iret
out
sub
push
imul
jle
sbb
ficompl
push
and
mov
pop
push
adc
or
cmp
sbb
pop
fists
xor
xchg
cmp
jmp
jno
stos
sbb
dec
out
inc
jno
iret
adc
dec
insb
data16
pop
sbbl
dec
test
insb
jg
insl
xor
rcl
inc
inc
test
inc
pop
sub
orb
out
add
push
dec
negl
and
ret
sbb
sbb
out
pop
inc
std
pop
xchg
adc
popl
testb
inc
in
jb
or
je
push
dec
xor
cmp
ja
fisubrl
xchg
push
xor
aas
cmp
lea
aas
inc
or
call
or
and
push
fstl
sub
add
and
mov
pop
das
outsl
xchg
out
xchg
mov
push
push
adc
lods
xlat
push
sbb
icebp
call
in
leave
sar
push
xor
jo
mov
sbb
jae
jmp
xchg
cwtl
ljmp
mov
repnz
cmc
push
movsb
dec
xchg
daa
arpl
repnz
mov
loopne
loopne
sub
cmpxchg
out
xchg
les
popa
lock
jmp
push
cmp
mov
push
lcall
daa
inc
xlat
dec
je
out
and
sahf
iret
call
aaa
inc
push
cltd
push
rcll
lret
xor
mov
movsl
dec
add
sbb
fcoms
in
fdivrs
pushf
jl
pop
and
in
cld
ljmp
divb
push
or
loope
das
cmpsl
and
mov
sbb
lock
lock
ja
shlb
add
sub
mov
xchg
fdivs
cmpl
es
jecxz
out
mov
xchg
fnstenv
js
fnstenv
push
icebp
inc
mov
or
xor
imul
rcrl
pop
popa
xor
test
inc
out
lea
icebp
lods
dec
jne
sbb
in
aam
mov
loope
je
scas
sub
loop
mov
jae
std
ja
and
pop
cmpsb
in
cmp
movsl
push
lods
int
ss
sahf
adc
add
test
nop
and
rorl
push
sub
cld
xor
jo
xchg
cmp
repz
mov
inc
out
cmp
popf
stos
adc
xlat
cmp
adc
mov
lret
inc
insb
cltd
lret
mov
add
sbb
and
mov
jae
arpl
cmp
arpl
xchg
fidivrs
cmpsl
add
fs
adc
inc
mov
mov
aaa
push
push
filds
inc
js
pop
cmp
pop
pop
imul
cmc
cmp
inc
aam
fs
mov
mov
pop
pop
fs
push
add
adc
or
cmpsl
dec
test
add
ret
push
pop
xor
idivl
fiaddl
loope
push
bound
mov
in
add
sbb
dec
roll
mov
dec
sahf
in
xor
rorb
xor
and
add
jb
rcl
imul
cmpsb
mov
popf
add
mov
es
push
xchg
fcoms
cmp
lret
xor
les
lahf
adc
sbb
and
lcall
pop
or
mov
outsb
pop
pushf
mov
test
fisubrl
je
testb
mov
lods
shl
mov
push
outsl
dec
xor
xchg
stos
in
push
add
or
pop
inc
addb
add
push
pop
js,pt
les
ret
out
or
test
mov
std
push
icebp
hlt
jb
mov
in
dec
add
rcll
jmp
jl
lret
test
or
mov
pop
push
sub
push
mov
cmp
sbb
sub
lea
call
cli
lock
lea
aas
data16
dec
cmp
push
faddp
jns
xorb
lds
popf
mov
negl
fistl
push
insl
sbb
push
add
addr16
pop
lock
cmp
es
lcall
test
add
adc
pop
or
lret
dec
xchg
xchg
lods
cmc
pop
out
call
or
jge
mov
sbb
sarl
inc
loope
repnz
out
mov
out
mov
jb
testb
lret
lea
out
inc
cmp
xchg
test
movsl
mov
lods
enter
loop
lods
and
pop
inc
mov
inc
hlt
hlt
or
cltd
shll
jecxz
push
ret
adc
fisubs
dec
mov
imul
add
push
insl
mov
push
lds
xchg
data16
icebp
std
ficoms
pop
cmp
stc
pop
xchg
mov
mov
push
xor
xchg
inc
push
push
lcall
and
daa
cmp
cmp
imul
mov
push
sub
jbe
adc
cmp
cli
frstor
mov
xchg
push
ret
jb
out
push
inc
rep
iret
xor
int3
cmc
mov
repz
fimuls
xchg
xlat
jmp
js
mov
push
nop
inc
inc
and
cltd
fimuls
stc
mov
das
jmp
jno
push
rcrl
cmpsl
out
mov
push
fcomp
sbb
push
lds
push
lds
dec
stc
cmp
scas
aas
fwait
inc
cltd
cltd
jne
scas
dec
sub
sarl
mov
push
push
daa
andb
adc
imul
repnz
mov
cli
mov
or
dec
pop
loope
cmp
mov
push
jge
jns
xchg
cwtl
int3
inc
and
adc
movsl
mov
adc
scas
add
ret
mov
pusha
mov
fsubrs
lock
call
mov
mov
or
lret
xchg
ret
inc
xor
lea
movsl
pop
test
pushf
scas
inc
xchg
movsb
enter
movsl
push
jae
stc
fnstcw
test
addr16
jae
das
xor
in
jp
insb
or
sbb
adc
cmpsb
subl
adc
stos
and
hlt
jno
sub
daa
add
movsb
iret
repnz
xor
inc
or
inc
jge
es
loop
pusha
enter
and
sbb
cmp
mov
lcall
aad
notb
popa
lds
mov
test
lods
divb
mov
ret
lods
loopne
pop
iret
icebp
scas
das
xchg
fldt
outsb
movsb
pop
dec
outsb
outsl
adc
popf
sar
fisubrs
subb
and
scas
in
sbb
jno
in
hlt
es
mov
xchg
rcrb
push
cmp
ljmp
pusha
aas
insb
fninit
ds
shrb
fisubs
loopne
mov
fucomip
push
sub
mov
in
dec
test
cwtl
push
lock
sbb
daa
mov
fisttpll
popa
and
fadds
and
inc
dec
pushf
jo
fs
rcll
pop
cs
pusha
rcrb
scas
mov
addb
or
fisubs
cmpsl
popf
mov
pop
and
pop
repnz
push
jmp
in
dec
lret
cmpsb
cwtl
pusha
push
inc
xchg
dec
fstps
mov
xor
cmp
jmp
jg
rcrl
add
ds
or
fs
fwait
adc
xor
movsb
pop
cli
popa
mov
stc
cmp
jp
cwtl
sbb
or
test
aas
insb
insb
inc
and
lahf
push
out
test
sahf
dec
pop
pop
outsb
mov
pop
popa
push
mov
sbb
cmp
ret
test
in
roll
cli
add
sbb
lea
orl
xchg
lea
test
jb
push
inc
adc
mov
sbb
xchg
test
mov
jl
pusha
adc
int
in
out
push
out
aam
xlat
call
jge
xor
cmpb
stos
cmp
movsl
inc
mov
jge
cmp
push
cwtl
shl
fimull
adc
out
dec
movsl
push
mov
xchg
and
or
daa
xchg
shlb
add
sbb
pop
inc
and
adc
push
xor
add
xor
test
leave
mov
mov
dec
cmp
dec
cld
add
clc
ja
nop
aam
lock
je
jne
dec
lea
shr
int3
lods
stc
jmp
mov
icebp
sub
jp
popl
fisubl
in
adc
nop
scas
inc
clc
inc
cld
push
dec
fmul
fwait
imul
cmp
lret
dec
mov
in
addl
mov
jle
mov
mov
mov
jmp
push
xchg
pop
sub
js
push
int3
std
mov
push
jo
xchg
fsts
fidivrs
arpl
push
sbbb
aad
addr16
xor
mov
movsb
pop
lcall
lods
xlat
daa
pop
sbb
addl
test
mov
jb
inc
or
aas
shll
mov
push
dec
mov
pop
dec
pop
call
fwait
call
push
out
or
sub
ds
pop
lahf
cmp
and
in
aad
lods
aaa
enter
stos
mov
fs
lock
or
inc
cmp
dec
sbbl
bound
and
jl
shrb
fucomip
or
arpl
stos
bound
jg
in
adc
into
and
cs
fidivs
jl
cmc
mov
push
sbb
or
in
out
fs
dec
or
pushf
arpl
imul
push
xchg
daa
mov
test
inc
loope
fisubl
cmp
cmp
pop
int3
push
loope
mov
xchg
mov
dec
xorb
push
cmp
adc
test
shll
ds
xor
stos
mov
push
repnz
ja
movsb
stos
lock
mov
shlb
push
inc
shl
mov
sub
dec
lret
xor
mov
jne
ljmp
scas
pop
cld
ret
inc
cmc
jp
inc
cli
std
push
jo
adc
ss
rolb
xchg
inc
cwtl
xchg
movsb
jb
insb
imul
adc
cmpsb
sub
lret
leave
into
ss
mov
xchg
mov
test
fisubs
pop
mov
es
push
inc
sbb
adc
mov
inc
push
jg
inc
xchg
push
pcmpgtb
out
jne
loop
add
data16
xor
std
push
idiv
jmp
xchg
pop
inc
jmp
jns
xor
xor
xor
imul
and
push
xchg
les
add
addr16
jmp
fdiv
movsl
sub
or
ret
xchg
movsb
cmpsl
fldl
int3
nop
ds
mov
mov
insb
adc
das
lods
mov
jnp
ret
inc
dec
subl
pop
sbb
repnz
popf
mov
sbb
lret
jbe
push
lods
sbb
push
push
and
mov
ss
mov
mov
mov
hlt
mov
repnz
inc
pop
or
dec
into
cmp
loop
clc
push
fbstp
jmp
stc
push
scas
add
mov
mov
outsb
xorb
add
clc
ss
notb
xor
and
arpl
fsts
cli
jmp
add
pop
cmpsb
outsb
hlt
mov
aad
jle
ret
cmp
les
xchg
lods
and
cmp
sbb
in
dec
fcmovnb
mov
push
lods
push
outsb
mov
mov
test
shl
gs
add
neg
lods
xlat
mov
xor
jg
xchg
fnstsw
fcompl
gs
ss
jns
mov
push
pusha
stc
lahf
fsubr
and
and
aaa
sbb
xor
in
inc
jp
add
imul
inc
mov
retw
jnp
cmp
jbe
push
jb
stos
ss
dec
mov
adc
leave
mov
cmpsl
fistps
dec
cmp
fwait
sbbb
sarl
cmp
data16
cmp
jo
inc
mov
mov
std
xchg
sbb
das
push
push
pop
mov
pop
jnp
ffreep
sub
lock
test
scas
pop
outsb
pop
mov
fucom
mov
pop
ret
add
mov
mov
enter
ret
xor
inc
and
dec
daa
xchg
pop
mov
mov
hlt
lcall
adcl
or
pop
mov
jl
cltd
shrl
daa
das
loope
sahf
cmp
outsl
xchg
test
mov
add
and
inc
lea
addr16
mov
jg
mov
mov
loop
or
ss
mov
jmp
js
sti
imul
push
xchg
jp
insl
sbb
jbe
sub
ret
inc
imul
mov
jmp
and
fistpl
xchg
sub
push
mov
imul
sub
cmc
jecxz
addr16
mov
inc
dec
mov
out
adcl
sbbb
aas
add
movsb
xor
xchg
mov
jmp
hlt
mov
outsb
sbb
dec
imull
imul
loopne
jns
push
mov
clc
pop
icebp
or
sbb
pop
pop
mov
out
aad
or
data16
push
mov
fiadds
movsb
pop
sub
xchg
inc
jns
dec
xchg
in
adcb
popa
jge
jl
ret
jmp
aaa
xchg
cvttps2pi
in
sub
out
mov
add
jg
xchg
xchg
outsb
pop
jle
dec
mov
inc
push
cld
ljmp
cmc
mov
addr16
xor
sbb
cli
or
jge
inc
nopl
das
fcmovnb
addr16
out
inc
sub
inc
adc
mov
pop
mov
inc
mov
jbe
push
mov
int3
js
jne
xchg
adc
cli
jge
add
and
xchg
in
or
lahf
mov
or
mov
jg
and
sub
ret
inc
xor
pop
mov
clc
or
cmp
inc
repz
sbb
js
mov
xor
xchg
push
mov
rol
add
mov
ficoml
icebp
jmp
sbb
xchg
add
push
clc
ret
jg
add
addr16
pop
mov
jns
cmc
in
sbb
xor
out
dec
push
push
xchg
mov
sbb
stos
cmpsl
pop
int3
push
lods
adc
sbb
ds
insb
pop
std
popf
faddl
xchg
scas
inc
stos
jb
xchg
lods
jns
add
jle
mov
sbb
add
stos
adc
sti
dec
xor
inc
lods
fs
data16
mov
jnp
loope
inc
push
xor
xchg
fwait
mov
pop
jo
inc
mov
test
movsb
inc
outsl
lds
jnp
jno
push
mov
and
fists
testl
xchg
cli
mov
lret
xchg
add
cli
adc
mov
por
push
cmp
negb
repz
adc
outsl
pushf
aad
xchg
fistps
xchg
loop
pop
push
mov
paddusw
sbb
cmp
lea
bound
inc
subl
cwtl
adcb
lret
or
aam
adc
cli
push
sub
sbb
aas
leave
movsl
je
fists
test
adc
stos
mov
outsb
shlb
call
ljmp
and
xchg
xchg
mov
rclb
and
push
adc
and
imul
sbb
dec
dec
inc
testl
out
mov
rcll
cmp
mov
push
sub
cmp
lcall
imul
sarl
push
cli
xchg
and
rcrl
or
inc
scas
pop
dec
mov
add
outsb
gs
cmpsb
gs
scas
lcall
repnz
sarl
test
rcrl
dec
pop
out
dec
inc
add
movsb
push
jbe
dec
enter
mov
pop
xchg
ret
push
mov
lret
inc
mov
out
ror
xchg
clc
mov
imul
into
insb
stos
mov
dec
push
cmpsb
ret
sub
test
test
adc
pop
scas
aad
mov
or
mov
or
addr16
jecxz
lods
adc
lock
mov
add
sbb
ror
js
adc
xchg
sbb
jp,pt
cmp
fs
insl
lods
cmp
or
pop
or
test
sahf
mov
push
cmp
std
divb
in
icebp
inc
pop
pop
loopne
cmc
int
jae
push
pushf
nop
xchg
shll
cltd
lret
call
jmp
mov
test
xchg
jb
and
lret
inc
imul
push
div
sti
xchg
cmp
dec
sub
mov
loopne
hlt
xlat
pop
flds
add
out
jae
inc
add
fs
outsb
pop
mov
sarl
std
testb
pop
push
mov
stos
xor
ljmp
inc
push
outsb
dec
std
jmp
outsl
pop
imull
jmp
scas
xor
xor
xchg
and
and
aas
sbb
mov
sahf
cmp
fstps
add
in
stc
dec
outsb
ljmp
cmp
xchg
int3
into
jle
xchg
xchg
xor
pushl
sbb
leave
popf
movsl
and
insl
popa
mov
mov
insb
push
mov
out
dec
flds
pop
out
push
adc
push
fistpl
test
or
cmp
and
loop
lods
jae
lret
leave
repz
inc
into
xor
in
mov
pop
mov
xorl
sub
sar
mov
and
ds
orb
aas
js
daa
xor
js
pop
ficoms
fwait
push
push
push
clc
xlat
lock
xchg
leave
jae
lock
pop
pop
pop
mov
jbe
out
push
mov
add
pop
sbb
cmpl
ret
in
jb
addr16
dec
gs
bswap
mov
mov
lea
lret
aaa
scas
ret
cld
sbb
nop
pop
mov
mov
dec
jnp
xchg
add
clc
ljmp
cmp
and
mov
sti
xchg
push
adc
or
xchg
lea
test
aam
fidivl
mov
sub
inc
ljmp
xchg
mov
aad
jo
mov
adc
mov
jae
mov
mov
mov
es
nop
lcall
or
addr16
pop
inc
enter
mov
fdivrs
and
clc
push
pushf
push
xchg
test
sbb
cmc
jbe
ret
inc
insl
in
pushf
push
xor
sub
outsb
jmp
sub
sub
div
cs
stos
dec
lahf
leave
test
clc
decb
jp
lock
pusha
es
dec
test
stos
mov
push
sahf
test
imul
or
lds
shlb
out
push
mov
popf
rcrb
jp
inc
aam
cmpsb
repnz
adc
test
cwtl
sbb
jno
jnp
sbb
mov
mov
mov
loop
cmp
jmp
dec
fcompl
and
jmp
and
mov
aas
imul
aaa
sbb
movsl
mov
aas
in
jle
or
out
mov
imul
xor
daa
sti
pop
in
sarl
enter
lret
out
aad
outsb
iret
fwait
dec
jbe
pop
add
pop
jp
dec
mov
sbb
test
enter
xor
inc
and
sbb
nop
xchg
in
movsb
hlt
add
mov
or
push
mov
aad
sub
xor
out
mov
imul
divb
add
push
pop
pop
adc
mov
pop
jnp
scas
sbb
inc
add
pop
cmc
inc
pop
and
or
adc
pop
pop
or
mov
out
xchg
incl
int
add
roll
outsb
push
push
sahf
shll
fs
vpsrad
jle
or
fcompl
mov
xchg
mov
mov
push
insb
jb
call
lods
lods
imul
cmp
and
out
pop
jo
adc
test
pop
push
push
loop
xchg
gs
out
fs
push
sub
dec
push
sub
bound
dec
stos
sub
js
mov
lret
adc
mov
insl
and
xchg
add
aas
mov
jnp
subl
jecxz
es
lcall
mov
mov
sub
inc
push
jge
sub
pop
fs
sar
fcmovne
jns
mov
xchg
push
inc
in
into
adc
and
adc
nop
cltd
mov
gs
adc
adc
call
ss
cmc
mov
jnp
dec
loopne
stos
vandps
mov
lret
dec
cmp
dec
bswap
or
xor
arpl
sarl
lds
fdivr
iret
js
data16
icebp
dec
fisttpll
dec
ja
xchg
imull
mov
outsb
inc
mov
jno
mov
adcl
jmp
push
pusha
in
push
out
out
lods
push
mov
stc
xchg
xor
and
xlat
mov
je
ret
rcl
adc
ja
ljmp
adc
fcomps
mov
push
mov
mov
pop
in
lcall
mov
std
xor
in
repz
push
xchg
loop
ds
sub
xchg
pop
cmp
and
xor
insl
xchg
movsb
loope
aaa
dec
pop
mov
sbb
int3
les
popa
cmp
dec
xorl
dec
mov
or
cmp
popf
fmull
or
nop
lcall
add
xchg
rcrl
mov
add
rolb
adc
mov
in
mov
sbb
push
push
iret
xor
stos
jbe
iret
data16
jge
mov
jae
popf
je
mov
mov
pop
push
icebp
inc
jp
xbegin
stos
and
pop
test
pop
les
mov
or
dec
jae
cmp
mov
hlt
or
iret
fcoml
or
enter
testl
xor
jg
ljmp
xchg
adc
lcall
repz
mov
sub
arpl
xchg
jns
lods
sub
mov
mov
shlb
stos
jne
je
cmp
mov
mov
pop
dec
leave
or
out
inc
das
cmp
movsl
add
adc
ret
adc
pop
or
pop
int
xor
jg
mov
popf
jg
in
jne
fdiv
mull
aad
je
push
aas
fxch
int3
addl
insl
adc
jl
int3
adc
add
pop
lods
pop
jle
fistl
repnz
cwtl
push
push
cmp
xchg
push
add
pop
adc
or
call
push
enter
sub
cmp
jge
sahf
push
jo
xchg
jbe
pop
cld
arpl
fsts
dec
sub
ret
push
xor
mov
cs
lods
cmc
loop
cs
loopne
mov
lods
pop
stos
popa
movsb
mov
mov
lods
gs
loope
mov
and
push
testl
call
imul
jmp
adc
leave
inc
lcall
out
pop
hlt
and
stos
and
nop
mov
mov
inc
ds
or
adc
ret
inc
adc
setb
mov
scas
or
ret
and
mov
add
outsb
mov
pop
ret
jmp
push
stos
cmp
jno
lock
jno
adc
jg
jmp
insb
sarl
lret
loope
xlat
push
ror
sub
jns
xchg
inc
push
divl
mov
fmul
filds
rcrl
les
mov
lods
inc
into
xor
fs
aas
jg
lods
mov
dec
daa
in
push
xor
jo
inc
adc
lahf
or
movsb
adc
divl
mov
xchg
mov
pop
and
jo
lahf
popl
mov
xorl
mov
outsb
jmp
mov
sbb
mov
stos
call
xor
pop
lock
movsl
jnp
inc
in
xchg
mov
or
cltd
dec
pop
xlat
dec
jge
outsl
decb
push
dec
dec
jle
sbb
mov
sbb
xchg
pop
sbb
enter
pop
sub
test
push
xor
push
inc
in
out
addr16
pushf
mov
fidivl
in
adc
add
jle
imul
ds
or
lods
jne
cwtl
pusha
lock
xchg
xchg
adc
in
jle
test
and
rcrl
and
or
pop
mov
pop
add
lret
daa
mov
bnd
mov
jbe
cmp
add
addr16
sbb
je
aaa
mov
ljmp
push
mov
data16
testb
or
jle
dec
lea
xor
ret
pop
xor
pop
outsb
bound
stos
stc
aas
ja
adc
mov
rcrl
out
add
stc
cmc
adc
rorb
cs
ja
xor
jnp
popf
push
mov
mov
filds
leave
xchg
pop
and
icebp
lcall
lret
clc
mov
pop
mov
lods
mov
inc
movsl
mov
decb
sbb
push
push
fwait
and
fildll
sbb
cmp
outsb
lret
mov
outsl
mov
stos
pop
inc
xlat
xor
pop
push
lahf
int
in
ss
into
jnp
push
cmp
lods
call
lock
jmp
lock
add
shlb
addr16
sub
sbb
xor
outsb
insb
das
enter
lods
aas
ss
xchg
cmp
mov
ss
pop
jle
addr16
lds
jno
enter
mov
scas
dec
mov
xor
cmp
dec
xchg
lock
fsts
pop
std
inc
mov
sbb
adc
fsubp
data16
negb
shrl
in
orb
aad
aaa
std
movsb
data16
cmp
flds
mov
jae
push
cmc
filds
ljmp
in
jle
sub
push
sub
test
push
stos
lea
push
daa
push
flds
imul
jmp
scas
test
mov
int3
in
out
inc
xchg
insl
inc
insl
adc
sbb
sbb
mov
gs
pop
subl
cwtl
decl
jb
pop
lock
sbb
adc
xchg
ja
js
xchg
jl
dec
mov
jmp
mov
sbb
cltd
push
pop
loope
pop
loope
clc
cmp
pop
xchg
or
sub
cmp
into
sbb
bound
loopne
rorb
xchg
adcb
add
pusha
out
je
in
call
jmp
cmp
lock
add
and
push
xor
lcall
outsl
stos
mov
push
int3
push
dec
sub
les
push
xor
inc
ja
mov
cmc
scas
addl
push
out
stc
cld
jmp
pop
jg
jle
arpl
leave
xchg
mov
popa
test
iret
mov
and
outsb
enter
aaa
out
or
icebp
adcb
lcall
fists
lea
ja
jo
enter
mov
pop
daa
pop
shrl
cmp
push
jl
sbb
push
xchg
dec
pop
js
or
outsl
lock
jp
push
cwtl
mov
lahf
inc
testb
xchg
ja
mov
mov
cwtl
fadds
xchg
sbb
addb
mov
xchg
jno
xlat
insl
jno
aad
js
cmp
jecxz
add
jne
xor
lods
mov
inc
outsl
popf
dec
scas
mov
sub
mov
jmp
or
cmp
or
or
or
rcl
mov
mov
lret
dec
and
adc
cs
or
jne
cld
push
xlat
jb
mov
xlat
stc
xchg
cmpsl
pop
xor
pop
inc
fmulp
dec
ljmp
bound
inc
sbbl
lock
popl
sbb
pushf
insl
pop
mov
aas
fidivs
dec
mov
pop
xor
in
jae
popa
shl
mov
sub
xor
push
inc
hlt
ljmp
dec
xchg
pop
lods
cs
dec
push
mov
loop
lds
ret
adc
mov
sti
or
sbb
repz
push
testb
lret
dec
dec
dec
rcr
inc
pop
es
sub
jg
ljmp
fs
inc
mov
std
add
jp
mov
inc
stos
mov
out
jecxz
pop
or
gs
xchg
fisttpll
js
xor
arpl
daa
ret
mov
mov
or
pusha
mov
mov
cmpb
loope
mov
xchg
mov
cmp
jae
stos
jb
fldenv
push
rorl
cmpsl
repnz
add
xor
mov
xor
int3
pop
lret
cmp
cwtl
clc
gs
out
loop
mov
jb
add
sbb
adc
dec
xor
jbe
test
add
jg
test
xor
mov
sub
das
shrl
pop
sub
in
xlat
mov
call
mov
je
sbb
nop
enter
mov
divb
pop
je
ss
dec
cmpb
inc
mov
jns
mov
repnz
jl
jae
test
or
lahf
sub
sub
pop
lahf
hlt
test
addr16
push
cs
sbb
mov
sub
jg
shll
jmp
mov
sub
leave
daa
mov
aaa
out
aad
fistpl
push
outsb
fwait
decl
xlat
popf
movsl
mov
cmp
lcall
imul
ficomps
add
negl
decb
sbb
dec
adc
cmp
subl
imul
push
mov
dec
sbb
push
dec
jb
arpl
cmp
inc
push
movsl
sti
push
jae
sub
les
std
mov
dec
pop
scas
add
push
push
xchg
aas
out
inc
sbb
aas
scas
jg
sub
loopne
mov
jge
cli
xchg
negl
daa
cld
imul
push
sbb
sahf
ljmp
negb
adc
mov
nop
pop
test
dec
sub
or
bnd
lret
sub
cli
lock
addr16
inc
lcall
aam
dec
sbb
push
fildll
imulb
mov
xor
cmp
in
mov
std
fs
sti
lods
daa
dec
insb
jl
je
add
ss
jnp
fdivr
fs
repz
in
jbe
xchg
cld
repnz
cmp
or
lock
jecxz
aam
imul
jbe
xchg
ja
lret
mov
xlat
xor
ret
pop
shl
addr16
jecxz
sub
inc
cmpsb
push
fs
sbb
push
gs
test
into
adc
xlat
mov
jne
jp
leave
ljmp
sbb
stos
adc
mov
shrb
mov
out
sbb
sbb
adc
and
shufps
pushf
push
or
stos
and
fiaddl
xchg
adc
out
movsb
pop
mov
shlb
add
cwtl
sub
nop
testb
adc
pop
mov
out
out
enter
ret
ffreep
xchg
imul
jne
adc
mov
adc
push
xlat
xlat
ljmp
adc
dec
mov
dec
outsl
sbbb
mov
jp
dec
repz
xlat
push
dec
fwait
pop
fsubr
and
jns
pusha
xchg
mov
cmp
stos
xor
cmp
test
inc
mov
jle
cmpsl
xor
push
inc
js
fwait
dec
je
out
xor
adc
inc
jmp
inc
and
cmpsl
xlat
push
push
shrl
outsb
inc
test
mov
mov
mov
les
sti
jecxz
shlb
push
xor
jecxz
les
adc
cmp
cld
popf
inc
lcall
in
je
dec
sub
pop
xchg
jnp
mov
aas
inc
enter
ds
popf
and
dec
and
das
adc
loop
mov
inc
clc
test
xor
add
xchg
fwait
out
ja
rorl
cmpsb
adc
test
and
popw
fcoml
aas
cmp
cwtl
xchg
lcall
scas
mov
aaa
push
int3
inc
adc
movl
pop
push
lahf
fnstcw
dec
decl
orl
cltd
inc
xchg
xor
daa
jg
xchg
adcb
mov
inc
sti
into
sub
into
icebp
and
sub
mov
mov
sbb
jo
add
push
stos
mov
mov
dec
push
push
mov
or
adc
adc
mov
out
adcb
dec
rcrl
ja
mov
in
divl
push
push
clc
add
fbld
mov
jle
push
mov
pop
out
enter
in
nop
in
xorb
mov
jmp
xchg
adc
adc
addr16
movaps
cwtl
mov
add
pop
in
hlt
or
cmp
add
mov
mov
mov
outsb
outsb
rclb
xlat
out
sbb
cmp
cmp
cmc
xor
sub
cmpl
cld
pop
xchg
leave
xchg
outsl
bound
xlat
sarl
aam
enter
and
mov
add
icebp
mov
fnstenv
or
sbb
faddl
movsb
loopne
mull
imul
pop
leave
lea
sti
xchg
jo
cmc
filds
sub
xchg
fcoms
stos
add
rclb
xchg
jmp
mov
pop
fnsave
xor
fwait
push
outsb
mov
imul
xor
push
stos
pop
and
fst
mov
and
cmp
sbb
dec
xchg
push
mov
mov
lcall
xchg
push
js
mov
add
pop
xchg
int3
push
inc
jle
mov
ss
pop
or
repnz
push
mov
mov
sbb
pusha
into
and
dec
sti
enter
fisubrs
push
aaa
push
adc
mov
aam
je
hlt
fdivrs
fsubl
mov
cmp
loop
cmp
fwait
and
into
sbb
cwtl
into
gs
test
iret
mov
adc
mov
mov
into
push
dec
into
das
sahf
jle
pop
cld
mov
xor
mov
mov
cmp
and
leave
push
push
jne
jb
or
int3
sub
mov
sub
loopne
jmp
lock
in
fwait
nop
in
add
mov
clc
test
imul
xchg
jle
xorb
inc
inc
xchg
nop
lods
jo
pop
loope
mov
test
cli
movsb
mov
xor
jecxz
xchg
xor
fcom
sub
sbb
inc
popa
loope
xchg
loope
fcmovu
or
in
fmul
lea
cmp
inc
imul
add
sbb
dec
or
pop
push
popf
int3
fmull
xchg
sub
xor
adc
imul
mov
movsl
xchg
fdivrp
or
nop
insl
mov
les
jns
lcall
xor
test
jp
sub
or
xchg
inc
clc
push
add
adc
lea
dec
icebp
subb
je
push
dec
xchg
rolb
sub
cwtl
test
nop
es
mov
mov
scas
repnz
imul
jge
cmpb
popf
mov
je
push
mov
arpl
out
mov
cwtl
sbbl
lret
jmp
cmp
fldl
lods
and
rcr
es
loope
scas
and
jbe
jo
jmp
dec
inc
mov
cltd
and
roll
outsl
and
imul
leave
mov
fsts
sbb
fcomps
arpl
sar
inc
and
mov
sbb
pop
xor
mov
pop
sbb
dec
mov
and
outsl
xchg
in
lds
cmp
xchg
push
hlt
xor
pop
and
mov
and
push
pop
lcall
aam
cmp
loop
cs
data16
adc
imul
mov
mov
je
out
jne
mov
cltd
test
and
testl
sub
outsb
inc
add
jne
popa
and
hlt
fcom
mov
adc
dec
adc
sub
or
std
or
std
dec
cmc
cli
popa
add
or
adc
outsl
lcall
pop
rcl
rol
out
mov
mov
push
push
in
fsubs
push
in
jno
mov
loope
ret
sub
pushf
and
jb
out
mov
scas
inc
dec
insl
mov
fistps
inc
mov
mov
cmp
or
lret
or
stos
scas
lea
xchg
cmp
ret
xchg
in
push
addr16
mov
and
mov
cld
repnz
dec
sbb
repnz
push
lahf
andl
test
xchg
pop
jge
jno
cmp
sbb
sub
testl
daa
push
les
sbb
repnz
mov
xchg
push
sti
or
in
inc
popa
stos
hlt
movsb
nop
das
inc
inc
jns
mov
aad
into
sbb
std
sub
sbb
mov
push
lods
cmp
mov
imul
scas
jle
sbb
cli
xor
cmpsl
gs
pop
jmp
lea
fstl
pop
lods
jg
jno
inc
sub
sahf
sbb
push
mov
rolb
cmovl
mov
mov
push
and
fdecstp
scas
ds
mov
int3
push
pop
outsb
pushf
and
pusha
push
push
sbb
aas
fists
lahf
or
cltd
dec
lret
out
daa
nop
cmp
nop
or
pop
jg
xchg
loopne
int3
inc
push
cmpl
ja
adc
xor
push
or
mov
loope
bound
adc
orb
shlb
adc
dec
out
add
mov
sbb
lret
orl
mov
rcll
push
mov
xor
push
fwait
jb
insb
push
sub
shr
pop
stc
nop
jecxz
dec
dec
loopne
dec
test
inc
scas
out
pop
cld
sbb
aaa
xor
inc
or
pop
clc
push
movsl
rcrl
mov
enter
roll
out
adc
jno
jbe
mov
stos
pop
add
test
sub
movsl
pop
loope
xchg
mov
sub
lcall
push
and
insb
inc
cmpsb
out
add
arpl
xchg
dec
inc
inc
repnz
cmp
dec
out
xor
loop
mov
lahf
and
mov
aaa
cmpb
jle
dec
imull
jno
nop
les
je
jecxz
mov
int
sbb
nop
lea
adc
data16
pop
sbb
popa
rcrl
sub
outsl
sub
fwait
mov
push
xor
pushf
je
adc
adc
enter
loop
test
add
subl
dec
xchg
in
adc
mov
mov
pop
xlat
mov
lea
xchg
test
jnp
cld
mov
lock
jecxz
lods
lcall
cmpsb
lock
push
std
fsubr
repnz
hlt
xchg
or
jg
loopne
inc
fs
aad
adc
jns
mov
xor
or
lahf
xor
test
and
inc
out
shl
in
xchg
rolb
stc
lret
cmp
mov
fsubl
and
adc
sahf
or
mov
or
push
loopne
sbb
mov
jmp
out
rorb
lods
jb
movb
fmull
jb
stc
adc
xor
or
mov
xchg
inc
popf
popf
adc
or
movsl
filds
mov
and
fsubr
jle
and
jne
push
jle
adc
inc
andl
jecxz
inc
cmp
cmp
aam
into
push
mov
inc
mov
das
in
dec
pusha
int
adc
cltd
pop
dec
mov
jb
icebp
sbb
mov
dec
test
aam
dec
xchg
add
push
push
aaa
fsubl
cmp
addr16
loop
jae
xor
jg
mov
sti
bound
pusha
sub
int3
roll
push
lods
pop
lret
mov
push
fidivs
jno
sahf
lds
fimuls
dec
dec
push
cmc
sbb
adc
movsl
mov
popa
dec
leave
aas
inc
jb
pop
inc
jmp
mov
aad
push
mov
add
mov
xchg
cltd
xor
push
mov
dec
movsl
add
loop
xor
xchg
push
insb
sbb
fsts
push
lds
xor
mov
das
sbb
sub
push
sbb
adcb
popf
mov
subl
inc
lcall
stc
and
pop
sub
xchg
push
lods
les
and
fnstenv
add
mov
outsl
js
imul
jo
enter
filds
outsl
subl
mov
cld
pop
rcrl
xlat
push
push
stos
dec
cld
xchg
add
mov
jb
loopne
sbbb
lret
shrb
ret
or
push
test
cmp
push
clc
pop
std
push
hlt
out
mov
jae
mov
or
andb
fxch
inc
sahf
imul
dec
loop
or
arpl
dec
cmpb
xchg
jecxz
pop
int3
daa
das
ret
push
aas
mov
cmp
mov
into
popf
xchg
arpl
jecxz
mov
cmp
jbe
add
jp
jnp
mov
jg
sbb
jo
sbb
xchg
cmp
dec
push
sub
or
xor
clc
imul
sbb
push
inc
cld
sub
xor
les
adc
pusha
mov
add
sbb
test
arpl
xor
sub
stc
scas
aaa
xchg
flds
stc
fdivrl
out
inc
xor
shlb
xchg
mov
push
push
test
add
pop
cmp
jle
mov
pushf
scas
cli
dec
push
in
xchg
les
jno
inc
test
push
pmullw
and
clc
jecxz
popf
cmpsl
push
add
test
sahf
or
icebp
imul
or
negl
xchg
movl
xor
inc
sbb
scas
mov
jo
xchg
xchg
fbstp
dec
ss
lret
push
dec
mov
lods
jp
scas
sbb
cli
jno
dec
fadd
xor
pop
add
sub
test
ds
sti
cltd
pop
or
in
fdivrs
jp
and
mov
and
inc
jbe
mov
jae
test
lods
mov
mov
pop
add
lret
cmp
jne
fwait
lahf
mov
add
push
fmull
dec
lret
xor
xchg
ljmp
push
ret
lret
push
mov
sub
leave
shr
or
xlat
int
pop
add
enter
dec
fcmovu
xor
push
mov
push
dec
mov
cmp
jnp
mov
mov
fldl
into
inc
mov
popa
fdivs
xchg
push
out
mov
pushf
mov
xor
xchg
sub
xchg
repnz
aaa
or
push
jns
dec
mov
lods
pop
cmp
and
fwait
and
lock
jns
push
popf
push
fidivs
popl
les
lcall
add
aas
sbb
mov
cmp
dec
add
xor
fmull
add
fsincos
clc
lahf
or
sub
int3
xor
ljmp
jns
xor
leave
xor
icebp
lds
mov
mov
jo
mov
push
or
adc
mov
push
jmp
out
or
xchg
xchg
pop
xchg
pop
aaa
jmp
rolb
iret
outsb
mov
cwtl
mov
leave
inc
mov
repnz
xor
ret
arpl
pop
mov
cmpsl
add
push
fiadds
enter
into
sbb
mov
adc
pop
test
push
mov
je
ljmp
xchg
sbb
adc
arpl
sub
xchg
shll
in
sub
adc
daa
ss
repz
or
xor
mov
mov
or
xor
cld
cwtl
xchg
mov
mov
cs
cli
addl
fildl
jl
jge
data16
mov
outsb
push
je
ja
mov
dec
iret
and
aad
sahf
jg
sbb
das
sub
xchg
notl
sbbl
cs
mov
xor
sbb
fsubs
clc
and
xor
inc
jb
sub
xchg
mov
cmp
jmp
stos
outsl
mov
pop
mov
loope
dec
mov
or
stc
inc
mov
nop
in
mov
daa
stos
jno
add
mov
sbb
sbb
movb
fcompl
dec
jnp
ret
jge
test
aas
shlb
mov
testl
aam
xchg
mov
js
repnz
pop
iret
mov
fwait
cmp
mov
arpl
jne
cmp
push
in
aam
xchg
ret
pop
mov
mov
in
dec
fwait
mov
scas
rclb
push
jbe
lahf
out
push
jg
pushf
pop
push
and
sub
stc
lcall
push
cmp
std
into
notl
in
testb
inc
popa
push
rclb
pop
xor
or
hlt
mov
xlat
cli
push
clc
adc
popf
stos
adc
pop
lds
add
prefetch
in
pop
nop
das
add
fisubs
and
stos
sahf
sub
cmp
loope
fbstp
cmc
aaa
sbb
arpl
or
or
mov
push
int
fdivr
mov
movsb
fiaddl
push
ljmp
adc
adc
leave
andb
ficoml
mov
jbe
inc
push
test
dec
mov
cmp
inc
in
sbb
or
into
insl
xlat
js
mov
lret
push
jecxz
pop
hlt
aam
test
mov
push
bound
add
test
or
mov
cli
mov
push
adc
dec
pusha
ret
dec
nop
fdivl
out
or
and
cli
inc
adc
or
cli
cmpsb
inc
fmull
roll
outsb
xchg
popa
lret
es
insl
fwait
aaa
dec
cld
jb
jl
jge
xor
mov
cld
mov
cmpsb
icebp
and
inc
jp
mov
cmpsb
dec
leave
add
mov
dec
int3
jle
nop
and
inc
sub
outsb
sbb
sarb
clc
mov
xchg
sub
xchg
sbb
in
push
inc
xor
jecxz
leave
repnz
lret
mov
outsb
scas
adc
cmpsl
int3
or
out
cmp
ret
push
stos
jae
mov
pop
mov
adc
mov
out
cmp
imul
mov
dec
add
mov
pop
lret
cmp
adc
add
mov
push
fsubl
and
xchg
mov
pop
mov
jae
dec
repz
mov
in
jbe
cli
adcl
mov
or
pop
add
cmp
outsb
xchg
test
es
jecxz
dec
mov
enter
mov
cmp
dec
mov
movsb
in
dec
gs
psubb
mov
sahf
test
sbbb
push
jbe
dec
stc
cltd
xor
adc
mov
mov
negb
inc
lahf
outsl
aaa
and
or
push
adc
rorb
pusha
mov
addr16
into
addl
push
jge
mov
jle
adc
sbb
fcoml
sahf
or
inc
mov
cmc
bound
movsb
adc
pop
imul
push
hlt
notb
pop
jmp
mov
icebp
cltd
xchg
imul
pop
inc
stos
pop
sub
mov
movsb
das
loop
mov
ljmp
mov
inc
insb
xor
cli
or
or
sub
loope
sbb
xorb
cwtl
std
cmp
xor
loop
lea
jl
jmp
sub
mov
pop
xor
mov
xlat
xchg
cmc
add
call
sbb
push
rcr
dec
mov
loop
std
jecxz
loope
neg
jns
clc
pop
inc
jb
mov
notl
sbb
and
mov
decb
popf
adc
sbb
mov
adc
xor
xchg
push
xchg
flds
mov
movsl
jbe
es
mov
stc
xchg
pop
push
mov
jae
pushf
fidivrs
ret
mov
pop
out
inc
mov
dec
mov
push
jp
pop
sarb
pop
rol
dec
roll
test
jns
push
push
clc
dec
push
lock
outsl
push
mov
and
or
jl
add
push
sbbl
cmp
pushf
incb
mov
mov
jp
xchg
sub
sbb
cmp
xchg
mov
insl
in
inc
mov
add
bound
dec
ret
cmp
mov
jmp
adc
mov
aam
out
push
test
xor
hlt
cmpsb
sub
adc
cmp
cmp
mov
xor
sub
add
jge
daa
xor
and
sbb
pop
dec
in
repnz
xchg
mov
mov
ja
ret
fwait
inc
idivl
mov
jbe
and
lret
int
movsl
addr16
dec
ficoml
iret
test
int
sub
xor
sbb
rolb
push
inc
sub
sbb
jbe
sub
mov
sbb
and
mov
test
jnp
xor
addb
rolb
imul
jbe
movd
dec
mov
and
inc
push
and
sti
mov
cmc
pop
push
add
sbb
sub
icebp
js
xchg
cld
mov
insb
mov
xchg
xchg
mov
popf
cli
ss
ss
push
push
lret
add
xor
pop
mov
cmp
xchg
lds
add
insl
xchg
loop
xchg
or
inc
iret
cltd
shll
mov
mov
mov
mov
lret
cmp
and
mov
mov
imul
mov
sbb
pop
ss
ljmp
popl
pop
xor
sbb
add
mov
lods
lods
cld
js
out
outsl
pop
or
push
jnp
test
testb
nop
jns
dec
mov
push
jecxz
or
add
sbb
and
in
loopne
cmp
push
push
inc
mov
imul
cmp
cwtl
and
sbb
dec
lcall
rol
cld
push
icebp
mov
xchg
fwait
scas
js
and
dec
sbb
cmpsb
jmp
pop
fldl
or
cmpl
loopne
nop
cwtl
scas
lods
int
jge
fadds
inc
xchg
jg
adc
call
or
adc
cltd
sahf
and
mov
xor
popl
iret
jecxz
dec
pop
mov
pop
push
mov
shll
push
add
xor
shll
push
je
or
adc
cmp
inc
cltd
mov
mov
xchg
adcb
inc
repnz
cmpsb
in
movsw
push
xchg
sub
mov
ss
mov
mov
push
dec
js
adc
cmp
jl
push
icebp
in
je
aas
cmp
add
sahf
push
in
and
imul
cmp
stos
and
aad
sub
mov
cmp
dec
in
pop
nop
mov
mov
ret
lock
sbb
aad
inc
cmp
and
lea
cltd
out
adc
sub
negb
or
push
fistps
and
leave
movsb
mov
sub
and
sbb
push
xor
les
adc
lret
dec
jbe
test
jo
hlt
mov
imul
sbbl
arpl
dec
lahf
insb
mov
ss
enter
fcmovu
mov
stos
jae
arpl
fwait
stc
xor
fxch
adc
stc
test
mov
decl
sbb
faddl
inc
adc
xchg
jbe
add
in
insl
push
js
pop
xor
lret
dec
or
sbb
test
scas
fwait
mov
xor
pop
push
rorb
inc
cmpsl
and
mov
daa
xchg
mov
add
stos
fstpt
leave
xchg
fistl
popf
jp
inc
fnstenv
ret
das
or
stc
mov
pop
aas
push
push
or
cmp
push
cmp
mov
mov
and
xor
cmp
repz
in
adc
stos
jae
daa
shlb
mov
insl
inc
out
push
rcr
cwtl
leave
in
xchg
out
cmp
jmp
inc
pushf
dec
setns
pop
nop
adc
lcall
mov
iret
inc
mov
jns
rcrb
shll
scas
pop
sti
clc
sub
mov
ficomps
mov
mov
or
rorb
adc
or
push
jg
call
addr16
popa
sub
les
lods
mov
or
or
daa
loope
in
mov
pop
pop
scas
fsubrl
inc
pop
sahf
cs
lea
mov
push
sub
dec
inc
loope
mov
lret
jle
inc
hlt
jne
pushf
pushl
adc
fcoms
jbe
xor
cld
popa
pop
pop
fstpt
lret
sbb
xchg
movups
pop
adc
sub
popl
mov
or
loope
mov
cmp
loopne
mov
mov
pop
inc
jbe
call
pop
sbb
lret
adc
mov
mov
sbb
jb
call
stc
pop
xchg
push
test
mov
inc
or
adc
fdivs
bound
aas
ss
add
inc
adc
mov
push
xor
push
mov
rcll
lret
and
test
and
out
cltd
push
outsb
enter
push
clc
sbb
dec
das
jp
xchg
mov
aaa
es
adc
mov
xchg
xchg
and
sub
pop
lret
xchg
mov
repz
inc
sub
cmpl
bound
js
sub
insl
shlb
xchg
inc
in
insl
jns
sub
fucomip
insl
in
adc
ret
out
inc
mov
cwtl
enter
enter
sbb
cs
push
jbe
jmp
push
andl
push
pop
push
xor
fs
sub
lcall
mov
lods
lock
inc
xchg
sub
js
lock
fcmovnbe
clc
cmp
aam
loop
lahf
adc
jne
cmpsl
sbb
orb
pop
aas
or
mov
call
into
out
or
xor
cmc
out
inc
pop
bound
xchg
fidivl
push
or
out
cmpsl
sbb
je
sub
pop
push
outsb
andl
inc
push
adc
and
push
cld
lret
repz
out
js
lods
aaa
outsb
cwtl
ja
fdiv
es
loopne
dec
mov
jmp
cld
xchg
or
jne
movsl
jp
push
push
out
iret
push
inc
xor
add
mov
imul
test
cmpsb
movsl
arpl
movsb
xor
scas
jnp
and
push
stos
inc
jnp
push
and
jle
faddl
cltd
dec
and
imul
subl
xchg
dec
jmp
xor
imul
push
out
push
shlb
setno
nop
xlat
inc
cmp
lea
test
xchg
pop
jl
sbb
mov
adc
jmp
in
mov
icebp
xlat
lret
ret
dec
or
push
popf
test
lret
hlt
dec
or
pusha
jge
mov
cltd
std
sbb
push
out
dec
loopne
fnstsw
lea
xor
mov
stos
lcall
inc
outsl
popf
repz
in
push
loop
insb
push
xlat
pop
push
out
and
xor
add
fcompl
cmp
sbb
sahf
lret
sarb
mov
mov
dec
lcall
sbb
mov
or
dec
pop
negb
sbb
loop
mov
enter
push
scas
jbe
inc
sti
jmp
lahf
mov
sub
scas
xlat
out
mov
pop
xor
pop
jns
inc
mov
ss
in
ss
fisubrs
pop
call
dec
inc
cli
mov
clc
rol
xor
push
mov
mov
push
push
lods
lock
lods
arpl
test
jae
mov
loopne
arpl
stos
rcl
mov
jmp
or
xchg
data16
sbbl
mov
adc
and
test
ljmp
xchg
cmpsb
push
mov
mov
add
mov
cmp
and
out
adc
jno
add
les
push
push
fs
mov
mov
ja
or
arpl
out
pop
mov
lret
adc
movsl
in
xchg
fistpl
push
rcrb
out
in
sti
icebp
lods
push
jl
dec
fisttps
dec
xchg
inc
lret
xchg
test
push
mov
cltd
mov
cmp
ror
jg
fsubrl
mov
gs
movsl
jb
jo
or
imul
aaa
mov
adc
lods
daa
dec
and
mov
xor
inc
cmp
fsubrp
jns
hlt
inc
push
mov
push
push
push
cltd
sub
xchg
or
pop
pextrw
xor
and
ret
sub
jae
addr16
pop
xor
dec
hlt
mov
movsl
fadds
add
es
mov
loop
xchg
push
xchg
xor
std
lods
jmp
test
vpor
js
out
mov
imul
sar
push
lret
je
xor
roll
ss
out
lcall
arpl
cmp
xorl
cmc
dec
stc
loop
std
add
cmpl
out
pop
jl
cwtl
jne
or
sub
jae
push
dec
pop
clc
inc
je
out
pop
ljmp
jne
add
and
cmp
xlat
lahf
shll
pop
sub
ret
pop
cmp
aad
jmp
and
cmp
sbb
mov
cmc
cld
or
in
in
sub
mov
jnp
dec
stos
ret
pop
mov
lret
out
adc
and
jno
mov
mov
lret
inc
and
sbb
stos
xchg
loopne
mov
and
inc
aam
lods
addr16
dec
pop
les
xchg
stc
jmp
push
inc
mov
dec
in
pushf
pop
outsb
aam
and
into
test
pushf
push
xchg
outsb
mov
popf
in
push
xor
mov
rol
test
loopne
test
xor
clc
je
sub
jle
cmp
test
outsl
add
cmp
out
andl
lcall
mov
test
pop
mov
repz
lret
stc
popa
rcll
cwtl
lahf
mov
inc
sub
call
mov
push
pop
adc
or
incl
jmp
sub
cli
aad
jns
mov
shl
aaa
popl
mov
fs
mov
loope
jmp
mov
push
xchg
mov
hlt
into
in
jns
cmp
sbb
jge
cmp
cltd
push
daa
scas
pop
testl
stos
adc
popf
mov
lods
push
jb
bound
xlat
lock
fmuls
out
movsb
jno
dec
daa
test
cmpsl
fnsave
shl
movsl
loope
sbb
mov
das
popa
push
cltd
int
fwait
pop
xchg
mov
scas
scas
rclb
cli
jg
mov
cmp
daa
jno
fidivl
push
dec
scas
ljmp
fsubs
rcrb
outsl
fwait
lds
fsubrl
push
fs
mov
dec
in
adc
xor
cwtl
mov
xchg
out
push
rcl
adc
push
out
adc
xor
test
pop
xchg
inc
clc
mov
test
fimull
inc
pushf
inc
add
push
sub
sub
inc
dec
gs
rclb
out
mov
pop
jno
test
test
lock
xlat
pushf
xchg
subb
jmp
sub
adc
xchg
xchg
negb
leave
test
dec
aad
pushf
mov
xacquire
adcb
mov
push
je
jg
stos
adc
ss
sbb
stos
js
push
push
pop
in
mov
mov
adc
sbb
dec
xchg
jmp
in
or
lods
xor
jecxz
out
and
syscall
xchg
mov
cltd
add
imul
and
xor
orb
xlat
jae
addr16
inc
ss
stc
andl
rcrl
xchg
sbb
xchg
pop
into
stc
out
testb
in
inc
ja
push
in
xchg
fisttps
loopne
mov
push
mov
cld
out
cmc
cmp
ds
jmp
cltd
cmc
push
les
out
xchg
sub
dec
or
jp
movsl
inc
mov
pop
push
enter
jg,pt
into
push
or
xchg
fnsetpm(287
dec
negb
mov
pop
xchg
addr16
and
mov
lds
rolb
test
mov
subl
shl
cmpsb
dec
and
jnp
cmpsb
pop
xorl
jg
pop
or
xor
filds
cmove
dec
clc
sub
idiv
lahf
cmpsb
dec
jne
push
xchg
jne
sar
fidivrl
mov
dec
dec
leave
inc
pusha
js
xchg
adc
je
push
out
dec
xchg
scas
jmp
mov
ret
aad
xchg
cmp
fwait
pop
push
mov
xor
fidivrl
adc
cltd
and
jp
and
jb
stos
mov
mov
aam
cwtl
xor
sbb
shrb
hlt
mov
insl
fxam
jg
adc
outsb
addl
cmc
je
loopne
nop
test
lcall
and
mov
jne
ljmp
mov
push
xchg
mov
sbb
shll
cmp
or
outsl
clc
or
mov
lods
dec
xlat
mov
or
stos
leave
pop
pop
in
jo
aam
cs
fnstsw
or
sub
mov
pop
lea
in
sbb
scas
repnz
sub
in
jle
xchg
pushf
or
loop
push
test
sbb
mov
pop
stos
inc
cmp
adc
mov
xchg
push
jg
pop
xchg
xchg
popa
xor
sub
or
or
mov
push
lahf
mov
cmpsl
pop
add
ret
and
push
sbb
ret
scas
imul
mov
mov
xchg
pop
xchg
jmp
lahf
jns
inc
in
push
pushf
rcll
leave
pop
rolb
fcmovnb
daa
mov
and
mov
lds
shll
push
pusha
sub
and
cltd
testb
jmp
lods
xchg
decl
or
in
imul
out
jecxz
repz
mov
out
cltd
pop
addb
lods
lret
enter
iret
sbb
xorb
lahf
bound
test
dec
mov
push
jo
cs
mov
and
push
inc
pop
pop
ss
outsb
dec
in
jo
lahf
in
in
dec
inc
mov
addr16
add
mov
sbb
das
pop
cmp
nop
xor
test
dec
scas
mov
adc
insb
sti
out
inc
cli
ja
mov
fwait
pop
pop
mov
lods
pop
lods
xor
mov
mov
mov
add
aad
mov
or
mov
cltd
test
insl
jl
mov
sub
or
aas
leave
fldl
xchg
mov
leave
or
movsl
push
xchg
jmp
aas
jge
or
jge
jno
sarl
cmp
pop
xchg
xchg
pop
sub
cld
dec
push
ds
or
fimull
faddp
xor
sbb
jne
and
ret
xchg
jmp
hlt
imul
in
xchg
xor
jge
cli
jae
jmp
roll
xchg
shrl
sahf
in
mov
movsb
push
rcl
inc
adc
sub
fisubs
je
sbb
sbb
dec
xor
add
jecxz
inc
or
sub
sti
or
sarl
sbbl
mov
cli
or
cmp
shl
daa
enter
dec
out
mov
cmpsb
mov
hlt
xor
push
jbe
roll
dec
imull
std
in
testb
add
pushf
out
jb
inc
std
mov
in
dec
cli
in
test
popa
sti
lea
aad
fadds
mov
leave
daa
imul
fs
cmp
popa
sub
iret
xchg
ja
in
mov
xorl
mov
inc
adc
in
iret
aaa
hlt
mov
push
add
scas
and
adc
hlt
xchg
rolb
mov
scas
repz
jo
mov
stos
add
pop
jae
inc
outsl
pop
sbbl
pop
out
sahf
add
cmp
adc
jle
fsubl
push
pop
mov
cmp
repz
out
leave
insb
lock
outsl
push
pop
push
ror
pop
jmp
aas
inc
sbb
cli
gs
mov
xlat
sub
push
in
pop
mov
rclb
adc
cmp
add
sbb
mov
sbb
cmp
dec
sub
repz
arpl
scas
ja
in
xchg
fimuls
aaa
sub
mov
call
pop
and
fs
jb
adc
mov
es
js
xor
fst
pop
imulb
fxrstor
xchg
cmpsl
loopne
cltd
stos
je
imul
stos
jo
lods
das
test
jno
cmp
push
gs
dec
mov
pop
cli
sbb
xchg
movsb
imul
negl
lods
add
aam
mov
jae
js
xor
or
fimull
data16
pop
ficoms
sahf
mov
add
jb
fsubrl
dec
pop
ds
mov
sbb
mov
movhps
add
loop
adc
push
push
dec
push
fwait
xor
push
adc
hlt
div
and
ret
aam
pop
sub
out
bound
push
and
rclb
mov
mov
out
xor
arpl
ret
push
lret
clc
loope
sbb
ficoms
int3
leave
sbb
jmp
mov
and
cmp
pop
mov
sub
pusha
xchg
sub
sbb
pop
lea
push
test
stc
push
dec
ljmp
mov
cmp
lds
mov
mov
xchg
adc
scas
xchg
cltd
es
sbb
out
test
dec
sub
pop
nop
mov
lods
xor
push
sbb
sub
call
mov
mov
pop
mov
jns
jae
out
imul
xchg
or
jge
jne
pop
push
lods
cld
idivb
push
mov
movsl
repz
std
inc
test
jb
aad
jae
push
loopne
mov
add
mov
aad
push
notb
mov
or
xorb
call
sub
shl
fisttps
xchg
and
or
scas
add
repz
test
movsb
push
shl
mov
adc
std
or
cmpsl
f2xm1
les
je
lahf
imul
sbb
xor
mov
mov
sub
cmp
test
ja
xchg
nop
and
mov
jno
jns
bswap
dec
and
xchg
or
mov
fildll
mov
lahf
dec
repz
aaa
sahf
aam
xchg
mov
sahf
xchg
cmpsl
sbb
cmp
xchg
rcrl
lcall
lock
lahf
and
leave
xor
sub
sbb
cld
loop
or
cmp
repz
inc
popa
popl
mov
sub
scas
pop
add
push
jp
mov
aas
orb
add
fcomi
and
mov
sub
gs
mov
xchg
xchg
jb
arpl
adc
add
xchg
mov
mov
fldcw
xor
jbe
jnp
add
cmp
cwtl
pop
outsl
clts
dec
dec
lret
jbe
sbb
pop
lds
lahf
xor
rcrb
or
sbb
xchg
inc
lds
dec
cmp
mov
mov
mov
dec
pop
clc
dec
rclb
ss
pop
ja
push
in
jb
and
adc
mov
dec
dec
dec
sbb
cmp
imul
test
or
dec
lea
inc
pop
pop
adc
aam
xchg
lcall
out
push
push
jg
and
xor
jge
movsl
fsubrs
into
jbe
je
mov
mull
push
cmpsl
inc
pop
dec
loope
jp
fnstenv
inc
mov
mov
add
jno
cmp
imul
sbb
fsubr
pop
pop
outsl
lret
cmp
inc
orb
insl
mov
orl
inc
mov
or
xchg
cli
jle
xchg
jg
out
shl
cmp
xor
gs
sub
ja,pt
xchg
shll
and
int3
adc
mov
mov
pop
xchg
push
cmpsl
fmuls
in
sbb
mov
pusha
and
and
stos
popl
lret
add
sti
ss
outsb
sub
aad
scas
cltd
fcomi
lret
sbb
lahf
movsb
xchg
scas
mov
test
mov
dec
repnz
and
or
push
or
fcoms
test
pushw
add
lods
mov
pop
out
outsb
hlt
or
jno
pop
xchg
sub
cmp
sub
mov
and
lcall
push
test
push
lea
divl
pop
xchg
or
leave
ds
inc
cmpsb
mov
shrl
xor
enter
push
outsb
pop
mov
aaa
fiaddl
out
pop
sbb
jns
mov
inc
ja
jp
lock
xor
enter
enter
leave
das
mov
mov
je
sarl
push
inc
in
mov
jae
dec
or
xor
fsubl
sub
adc
mov
adc
add
xor
lods
gs
dec
mov
push
xchg
mov
mov
adcb
repnz
shlb
xchg
mov
sahf
fcmovb
xorl
icebp
daa
mov
in
push
jo
pop
mov
fisubrl
dec
pop
sti
mov
xchg
popf
dec
int3
hlt
xchg
xchg
inc
sub
adcl
push
xchg
dec
xchg
jo
inc
and
notl
inc
xor
cwtl
popa
inc
mov
mov
lret
xorb
and
popa
test
dec
push
add
xchg
mov
iret
adc
push
adc
imul
stos
fwait
and
dec
dec
cmp
rclb
lret
mov
call
mov
mov
sarb
mov
stos
cmp
lock
sbb
lods
std
lods
repz
subb
jmp
xor
sub
pop
clc
test
pop
add
enter
or
jno
js
dec
mov
lret
pusha
out
stc
pop
mov
mov
ret
scas
stc
mov
push
inc
pusha
xchg
cmpl
dec
int
std
jbe
mov
and
xor
push
xor
scas
cld
add
push
cmp
pop
sbbb
push
pop
fxch
and
pop
cwtl
mov
dec
jecxz
clc
mov
jmp
cmp
mov
adc
gs
fwait
enter
pop
mov
xor
in
mov
rorb
comiss
jmp
imul
or
cmc
sub
and
stos
andb
sub
test
scas
in
add
ljmp
push
inc
mov
pop
fidivl
sub
out
jp
or
mov
xchg
ljmp
add
in
xor
pusha
int
cld
or
add
daa
ds
das
js
movsb
filds
lcall
fsubrs
xor
mov
enter
leave
nop
pop
jnp
mov
add
and
scas
adc
mov
sbb
jge
jne
enter
sbb
dec
and
push
push
pop
into
es
mov
out
scas
sbb
ljmp
cmp
jl
shlb
adc
sub
cmp
cmpb
pop
shrb
mull
pop
inc
aaa
pop
mov
loopne
scas
sub
out
movswl
push
sub
push
shll
add
cld
popa
cmp
xchg
ret
movsl
imul
xor
arpl
ret
push
inc
lock
arpl
or
push
dec
xchg
sub
aas
call
mov
outsb
cmp
mov
jbe
imul
pop
sti
call
pop
jo
push
sbb
insb
lods
cmpsb
movsl
pop
push
push
jns
int
das
jge
sbb
fsubp
mov
test
addl
neg
jl
jmp
inc
scas
xchg
mov
or
stc
mov
lahf
rep
add
add
das
add
orl
inc
push
jo
pop
cs
or
icebp
test
cli
mov
pop
add
dec
addb
out
jl
adc
dec
fsubrs
xor
sahf
dec
test
pusha
pop
adc
or
jb
push
sbb
pop
mov
sub
pop
dec
clc
fmull
arpl
jnp
cmpsb
bound
and
pop
repnz
stos
mov
sarb
mov
sub
jb
ret
pop
sarb
push
in
in
sbb
xor
loopne
mov
sbbb
push
xlat
jo
mov
dec
ljmp
pop
mov
rorb
out
lret
mov
pop
push
mov
xorb
xor
fsub
fcompl
xchg
mov
imul
ljmp
push
repnz
je
pop
mov
nop
sub
xor
pop
popa
push
sbb
jbe
xlat
sti
shll
in
inc
rcrl
bound
daa
xor
push
xor
stos
ret
into
outsl
adc
push
aam
popl
xchg
xchg
loopne
repnz
cltd
or
push
leave
out
mov
sub
mov
mov
stc
xor
in
addr16
dec
push
bound
cld
xchg
sbb
cmp
std
mov
addr16
add
xchg
repnz
sbb
sbb
pop
mov
out
jns
in
hlt
jnp
dec
push
lds
ljmp
fwait
xor
call
and
sbb
xor
mov
jge
nop
movsb
fwait
stc
mov
mov
xchg
xor
and
mov
jae
push
clc
mov
fwait
push
int
fcompl
cmp
mov
shl
inc
inc
sbbb
outsl
dec
fiadds
rclb
fcomps
nop
and
rcrl
push
cmp
sbb
xor
pop
cmp
rcl
sbb
sub
push
and
push
xchg
movsl
movsl
icebp
mov
jno
gs
pop
lods
fcmovne
stos
xor
xchg
into
pop
sbb
pop
push
cmp
lods
lds
adc
ss
xchg
ret
ljmp
mov
dec
fistps
test
mov
and
add
pop
ret
stc
and
jl
cmp
scas
test
push
xchg
push
sub
arpl
dec
sub
mov
stc
and
cmp
mov
pop
xorl
arpl
daa
jmp
sbb
loop
gs
hlt
adc
insl
inc
adc
adc
jmp
pop
pop
lcall
hlt
nop
xchg
xor
and
pop
mov
mov
lods
jg
mov
outsb
cmpsb
stos
mov
dec
add
ja
mov
cld
push
addr16
mov
aaa
dec
or
push
jnp
add
lods
aaa
and
cmp
lahf
cmp
mov
jnp
jmp
xchg
leave
xchg
push
jg
add
nop
test
push
outsl
clc
or
push
sub
sbb
dec
dec
movsb
movsl
add
xchg
ret
shl
arpl
jp
push
cmp
jnp
stos
inc
lds
aad
jl
lahf
fildl
jp
fnstcw
test
aaa
dec
xchg
enter
sbb
mov
xchg
clc
inc
daa
xor
and
or
daa
fistps
push
ret
xor
fnstenv
jb
rolb
test
mov
mov
mov
jbe
mov
test
aad
xchg
mov
pop
lcall
and
les
add
outsb
inc
dec
jae
jp
adc
xor
ljmp
sub
jne
adc
imul
lock
jne
mov
xor
push
xor
and
mov
mov
mov
xchg
jmp
xchg
jge
xchg
or
aaa
mov
inc
sub
lahf
push
push
mov
pop
movsl
and
leave
xchg
mov
aam
jmp
sub
popf
cmc
or
adc
mov
xor
iret
std
inc
andl
add
or
std
testb
dec
sbb
sbb
fbstp
cmp
xor
sbbl
popf
scas
pop
dec
fmulp
push
xchg
jnp
ds
aad
xor
scas
into
mov
test
jo
enter
mov
das
push
sbb
xchg
mov
mov
dec
in
pop
add
stos
adc
sbb
fdivr
and
bound
or
push
push
popf
fldcw
outsl
out
inc
cmp
or
sbb
mov
aaa
pop
or
ds
dec
in
sub
adc
push
pop
mov
int3
push
int3
xchg
inc
mov
jge
lcall
dec
shrb
out
mov
mov
dec
int3
pop
fidivs
pop
je
scas
adc
scas
and
stos
enter
test
fnsave
pop
andl
ret
mov
shl
adc
inc
xor
idivl
mov
or
outsl
xchg
inc
js
pop
jb
cmpsb
test
xor
jnp
inc
sbb
out
cli
in
je
push
lea
lahf
pop
dec
sbb
pop
cmp
out
insl
mov
mov
push
sbb
jae
xor
pop
rol
pop
mov
call
pop
fs
mov
dec
stos
mov
cmp
shlb
push
xlat
leave
dec
push
push
or
dec
mov
popa
popa
dec
sub
mov
jp
int
fisttpl
je
mov
repz
sub
xorb
pop
pop
fidivs
sub
xchg
shll
mov
sub
fnstsw
pop
fidivrs
jns
sub
sub
jl
ljmp
push
pop
xor
in
cmp
jns
pop
pop
add
add
mov
pop
sarb
pop
push
sub
adc
cmp
lret
cltd
std
inc
call
in
rol
shll
dec
xor
pop
je
ficompl
js
inc
xchg
push
mov
dec
fadds
xchg
dec
js
inc
jl
popf
in
dec
or
adc
fninit
mov
or
pop
dec
mov
push
fldcw
xchg
push
pop
pop
inc
and
mov
xchg
or
std
repnz
sub
movsl
rolb
jecxz,pn
mov
or
test
push
iret
in
popa
inc
pop
and
xor
xor
rcrl
sbb
or
into
nop
adc
leave
cmpsb
dec
cmp
jbe
stos
xchg
mov
adc
push
lock
movsl
gs
mov
xchg
mov
lea
xor
inc
insl
js
icebp
mov
sbb
push
in
mov
sub
mov
jno
adc
mov
ret
fwait
mov
roll
jl
stos
lods
sbbl
jge
cmp
fwait
mov
shl
imul
popa
pop
xchg
mov
cmp
mov
lcall
xchg
pop
push
sub
dec
or
cli
pop
sub
std
add
fwait
stos
xor
out
fs
nop
add
push
cmp
daa
loopne
push
jnp
sub
loopne
adc
inc
into
add
clc
push
outsl
jmp
sub
sti
adc
outsl
or
int
fs
jae
pop
push
dec
inc
jecxz
mov
add
inc
or
movsl
adc
adc
push
stc
push
pop
dec
cmpsl
ret
and
xchg
xchg
adc
cmp
push
test
sub
lahf
repnz
sar
or
pop
jle
ficoms
or
cmp
lods
sbb
jne
push
sbb
lods
data16
push
in
jecxz
aad
push
jl
push
xor
int
sub
jns
outsl
jns
in
fidivl
xchg
out
stos
sub
out
sub
dec
lods
std
adc
cltd
std
jl
inc
push
fiadds
mov
and
fwait
inc
xchg
add
inc
dec
ds
sarl
inc
sub
mov
test
xchg
cmp
push
pop
cmp
gs
mov
push
cwtl
fstps
xchg
dec
or
out
add
fdivrp
insb
adcb
mov
mov
jmp
arpl
xchg
int3
cmp
sbb
fmul
xlat
inc
cmp
stc
pusha
test
lret
fstpt
cmp
sahf
cmpsb
sub
aam
rolb
lcall
pop
or
push
add
xor
adc
pop
imul
jo
mov
add
bound
cmp
pop
and
int
cmp
jne
nop
les
ficompl
rcrb
lea
fwait
xchg
repnz
jno
test
pop
jnp
test
je
adc
pop
lock
mov
movsb
cmp
mov
dec
push
sub
call
stos
cmp
scas
push
cmpsl
std
or
lds
cmp
add
and
mov
loopne
sahf
test
jbe
dec
cmp
adc
lret
lds
dec
rorb
add
add
xor
aaa
cmc
and
jp
out
movsl
in
sbb
cmp
add
sbb
pop
push
jbe
cmpsl
clc
xchg
xor
sbb
fs
push
xchg
cmp
cs
sahf
xor
dec
and
mov
and
das
rol
xchg
or
out
roll
and
icebp
stc
aas
gs
xor
xchg
scas
push
pop
mov
sbb
xor
scas
daa
lret
dec
sub
lcall
lods
je
pop
movsb
inc
mov
comiss
add
in
sub
push
popf
fstpt
mov
popa
push
or
xlat
xchg
jl
pop
mov
dec
jae
bound
mov
mov
jo
xchg
sti
push
cmp
iret
sahf
jmp
pop
jl
lcall
scas
lods
and
push
jae
cmovb
addl
xchg
push
jnp
aad
sub
into
xchg
mov
sub
or
or
sbb
aaa
stos
adcl
or
xchg
enter
ret
push
insb
mov
xchg
jmp
xchg
jb
push
mov
lock
add
or
inc
cmp
icebp
inc
sub
es
and
pop
rol
push
sub
mov
mov
lds
cltd
jle
push
mov
andb
mov
dec
inc
stc
int
cvtps2pd
insb
es
mov
icebp
cmp
aas
mov
cmpsb
push
orb
xor
xor
xchg
stos
int
lods
xorl
xchg
sub
leave
mov
shrl
fistpll
pop
mov
dec
add
fbstp
test
in
push
ret
rcl
lahf
push
xchg
push
lock
jl
mov
ret
xchg
and
es
jecxz
inc
out
cmp
push
hlt
push
mov
ret
daa
cmp
push
jno
iret
decl
cmc
mov
in
cmp
ss
decb
mov
pop
leave
jmp
cmp
stos
mov
push
out
push
flds
sti
xchg
mov
lret
xor
pop
inc
jbe
outsl
push
sbb
mov
xor
idivb
push
xor
dec
aaa
inc
mov
or
cmp
push
jp
ss
ds
push
aad
int3
xchg
push
loope
stos
scas
inc
mov
cmp
mov
aaa
out
lds
adc
sbb
sub
cmp
repz
cmp
ljmp
mov
call
adc
mov
jmp
mov
mov
pop
fwait
add
sbb
pop
outsl
cltd
mov
push
cltd
ja
and
push
rclb
fistps
and
mov
loopne
xchg
pop
dec
sub
stos
push
enter
test
pop
out
cmpb
or
rcll
popl
or
lcall
repz
es
into
sbb
mov
dec
mov
int
sbb
push
sbb
lahf
sub
lret
fadds
cli
mov
rorl
xchg
push
aad
movl
int3
or
pop
xchg
xchg
movsl
int3
xchg
movsl
sub
inc
sub
dec
fcom
movsb
pop
rolb
out
fdivrs
xchg
sub
in
xor
jns
dec
dec
cmp
setnp
mov
xor
inc
jge
and
mov
or
int3
inc
je
scas
aam
push
iret
insl
xchg
jge
call
sbb
inc
xchg
mov
push
and
imul
or
cmp
daa
push
addl
xchg
inc
sbbb
sbb
push
nop
adc
push
push
inc
es
add
in
sbb
jg
repnz
cmpsl
enter
push
movsl
xchg
fs
push
rcrl
mov
scas
dec
aaa
mov
rcll
xchg
cmp
popa
push
push
lret
out
sbb
sub
daa
and
call
lcall
aad
xor
std
ss
jp
cld
test
xchg
call
aaa
mov
arpl
sub
lods
popa
pop
xor
movsl
sub
mov
orl
in
fsubr
sub
cmp
ret
mov
cmp
loope
xor
add
inc
shll
add
fscale
jp
fstpt
sbb
pop
add
push
insb
add
aas
jmp
pushf
mov
xchg
mov
fwait
mov
mov
xchg
test
sarb
mov
cmpsb
sbb
fisttps
inc
cmc
pusha
xchg
hlt
ret
ret
imul
push
sbb
jo
loopne
std
pusha
or
stc
lea
xchg
pop
lods
jp
xchg
mov
fwait
stos
cltd
ret
aaa
in
pop
in
inc
cs
sub
movsl
rolb
mov
test
faddl
jge
pushf
jle
lea
jb
or
scas
outsb
or
call
loopne
xchg
jnp
inc
add
pusha
lcall
mov
outsl
adcb
ja
lea
outsl
ds
dec
inc
nop
mov
and
pop
sbb
mov
leave
shlb
inc
mov
ror
pop
xchg
mov
mov
push
xchg
addr16
fnsave
sbb
scas
loop
dec
xchg
dec
imul
lahf
enter
inc
aas
xor
mov
leave
mov
or
shlb
pop
fcoml
loopne
or
les
sti
cli
mov
inc
and
sbb
out
rcrb
test
notb
jp
jl
fstpl
pop
push
clc
out
fisubrs
sub
jmp
je
adc
out
lcall
jecxz
mov
shrl
aas
sbbb
push
jnp
dec
inc
pop
imul
pop
ret
push
xchg
cmp
stos
lcall
xrelease
in
push
sbb
push
mov
or
in
or
or
clc
jmp
pop
cmc
jnp
push
cmp
scas
aas
or
cmpl
push
out
arpl
mov
inc
addr16
xor
jnp
or
jge
jl
jbe
pushl
xlat
cmpb
jecxz
push
adc
jne
push
repz
fildll
dec
sub
dec
ss
repnz
cmp
adc
mov
call
pop
xchg
jns
dec
cmpsl
xorl
call
cs
sti
xorb
aas
mov
outsb
es
xchg
nop
sub
fistpl
xchg
jo
data16
xchg
mov
out
in
negb
jb
jno
aas
das
int
mov
clc
sub
cmp
and
data16
mov
xchg
mov
repz
lock
jbe
cmp
cmp
sbb
adc
inc
mov
and
mov
mov
xchg
mov
push
cld
pop
adc
loop
jo
mov
stos
jecxz
add
scas
pop
pop
sub
out
push
sbb
pop
push
inc
xchg
es
jl
dec
dec
add
dec
cmp
fcmovb
je
jbe
jno
pop
xchg
pop
pop
sahf
test
aad
data16
aam
imul
ss
xchg
xor
jne
mov
jle
data16
ret
pop
pop
xchg
xlat
xchg
jge
fnstcw
loopne
sarb
jns
add
pop
mov
jge
or
xchg
arpl
sub
sahf
fistps
cmp
adc
sub
nop
add
jecxz
stc
lods
pusha
dec
sub
or
addr16
mov
dec
xlat
mov
xchg
ja
fsub
das
jg
push
mov
fwait
or
fildl
insb
insl
add
loope
jns
mov
in
jb
fst
rorl
jge
push
cmp
scas
pop
imul
sar
cmp
mov
int3
fadds
pop
and
les
pushl
xor
les
aam
out
mov
jnp
xor
xorb
inc
inc
les
sub
mov
es
ds
lods
inc
or
push
cmpsl
push
dec
out
loopne
mov
pushf
aaa
pop
outsb
mov
pop
arpl
in
outsb
icebp
push
adc
xor
and
mov
cmp
fwait
out
out
jne
std
jb
pop
icebp
popf
clc
out
xchg
jne
push
xlat
inc
gs
mov
jmp
loopne
rcrb
cwtl
dec
loope
movsb
pop
mov
sbb
les
mov
lods
xchg
pop
aam
inc
lahf
or
sub
jb
jbe
xchg
hlt
in
int
dec
ja
jns
mov
jno
jl
xlat
xor
jo
imul
hlt
rcr
mov
inc
daa
cld
xchg
mov
or
inc
xchg
pop
cmp
pop
cmc
add
pop
es
jg
inc
dec
inc
cmp
jp
adc
and
cli
push
ret
xor
or
ret
mov
ret
call
aaa
mov
scas
movsl
imul
test
cmp
push
or
mov
mov
movsb
mov
sub
push
adc
dec
and
orl
pop
sbb
xchg
lcall
mov
mov
loop
cltd
pop
rolb
cs
dec
mov
push
jnp
ljmp
data16
xor
jl
nop
sbb
xor
outsb
scas
dec
stc
pop
cmpsl
lock
mov
je
xchg
fisubrl
iret
push
xchg
add
in
insl
inc
je
jecxz
sbb
call
or
jb
mov
lret
mov
push
pushl
fdecstp
sahf
pop
lcall
jo
pusha
and
cwtl
or
mov
stc
pop
imul
sbb
loop
das
movsl
mov
and
les
fildl
sub
faddl
and
dec
mov
stos
xchg
loope
or
lretw
push
movsl
fidivl
bnd
iret
paddusw
mov
fwait
ja
stc
push
lret
mov
in
fbld
jae
adc
dec
mov
or
mov
clc
push
dec
jl
adc
adc
ror
mov
push
xchg
push
setae
fdivrl
pop
rclb
cmp
nop
cmp
mov
xchg
sub
and
mov
mov
iret
push
sti
dec
push
or
outsb
out
sbbl
mov
and
add
mov
xorb
push
test
mov
jae
fwait
and
dec
mov
jb
and
jb
test
pop
xchg
add
aad
test
push
lock
lret
jb
jne
jbe
pop
fdivl
inc
sbb
or
sarb
ss
int
sbb
mov
mov
jo
pop
mov
inc
les
jp
cltd
scas
sub
or
pop
inc
sbb
jnp
jae
aam
ss
inc
and
fists
jnp
or
cs
mov
add
out
jge
push
lahf
rcrl
adc
pop
fldt
jp
or
mov
lock
in
cmpsl
and
dec
call
or
outsb
mov
sbb
cmp
sahf
int
mov
int3
mov
fisubs
cmp
pop
mov
ret
arpl
cmpsb
je
int
pusha
xchg
insb
in
pusha
and
push
mov
orb
outsb
mov
or
push
or
and
stos
push
add
aam
idivb
loopne
fcom
jmp
int3
jge
enter
mov
divb
inc
jge
imul
push
push
test
jns
push
lret
xor
cmp
les
scas
pop
in
insl
mov
pop
je
mov
ljmp
cmp
cmpsl
movl
arpl
adc
cmp
sar
pop
loop
sbb
jp
dec
shl
shrl
mov
fldl
je
jecxz
sbb
fimull
jmp
cmp
add
or
aaa
pop
mov
in
add
bnd
mov
mov
mov
ficomps
add
or
iret
or
std
inc
movsb
out
std
sub
sbb
icebp
jg
mov
add
inc
mov
push
pop
xchg
js
cmp
fldt
hlt
add
dec
fstpt
mov
orb
add
xor
lods
pushf
jno
mov
lsl
repz
jg
dec
daa
xchg
popf
shrl
inc
fcom
mov
insl
or
in
cltd
jecxz
test
scas
imul
ficoml
xchg
jle
mov
loop
aaa
push
jg
ret
enter
dec
xor
loop
jg
fiaddl
inc
cmp
jle
mov
xor
cmc
dec
pop
sub
negb
mov
adc
xchg
xlat
cli
lret
fldt
lods
sahf
or
mov
pop
sub
clc
cmpsb
cmp
push
adc
cwtl
mov
testb
and
push
mov
mov
cmpsb
cmpsl
jo
insb
decb
mov
sbb
or
insl
test
sbb
xchg
pop
and
jae,pn
jno
out
loope
shrl
jge
sub
push
add
push
ret
push
add
iret
xchg
sbb
xchg
repnz
out
lcall
add
cmpb
scas
test
cmp
jg
xchg
or
cld
arpl
xchg
inc
cmc
cs
push
adc
pop
mov
call
jnp
xor
add
popa
mov
mov
xchg
mov
pop
mov
jbe
sti
cld
test
xor
mov
inc
add
and
xlat
sbb
inc
out
mov
jg
inc
xchg
fadds
mov
jmp
mov
lar
pop
mov
call
mov
push
les
sbb
xchg
adc
imul
nop
mov
stos
dec
out
xchg
dec
je
movsb
stos
mov
loope
or
mull
inc
lcall
cmpb
imul
and
imul
mov
mov
inc
mov
fidivs
iret
mov
dec
movsl
ja
scas
mov
sbbb
pop
jle
xlat
cmp
jmp
int3
mov
push
push
outsl
out
pushf
cmpb
xor
mov
fwait
imul
cmp
out
movsl
mov
out
pop
pop
lret
cmpsl
gs
ds
push
mov
lds
pop
cmc
sub
adc
jae
idivb
add
inc
inc
popa
out
lock
fildl
xor
test
and
enter
out
fucomi
ljmp
arpl
pushf
and
push
xchg
ss
leave
sub
inc
xchg
sbb
jne
in
xorl
jecxz
fsubl
lret
fidivrl
push
cli
adc
scas
sbb
mov
sub
push
adc
dec
cwtl
inc
test
lods
mov
fiaddl
adc
data16
insb
decb
lret
cltd
stos
and
in
outsb
adc
mov
xor
pop
xchg
push
fwait
and
inc
or
aad
jne
mov
push
xorl
jae
push
movl
lods
xor
nop
inc
or
push
rolb
sar
cli
sbb
sbb
mov
pop
loopne
cmp
lcall
jbe
sbb
shrl
les
mov
inc
loopne
sub
cltd
mov
and
xor
lcall
xchg
jnp
xlat
cmp
push
cmp
jb
loope
fcmovne
sub
dec
sub
les
cmc
leave
cmp
push
push
je
inc
inc
xor
lock
loop
shl
mov
dec
push
sub
popl
add
test
jp
dec
arpl
adc
jb
pop
cld
je
lcall
mov
mov
jno
scas
mov
lock
xchg
lret
sub
fsub
stos
es
cwtl
cmc
push
jge
movsb
cmp
cs
push
jae
pop
lds
jecxz
mov
xor
lds
test
adc
push
xor
lss
jnp
rcrl
push
rorl
push
outsb
mov
sbb
bound
nop
push
xchg
push
sbb
mov
dec
jecxz
out
cmp
cmp
push
pushf
repz
cmp
test
or
or
incb
sub
sub
jnp
mov
shlb
adc
loop
push
xlat
pop
push
dec
cli
or
push
sbb
negb
adc
imul
xchg
call
mov
inc
and
arpl
mov
data16
fmull
push
pop
jg
mov
in
ret
mov
aaa
stos
movsb
pop
push
jae
roll
lahf
xchg
mov
xor
mov
sbb
push
addb
add
pop
and
jb
sbb
cmp
inc
push
cmp
frstpm(287
rclb
jne
fsubs
push
or
bound
out
push
sub
mov
mov
push
out
inc
sub
xor
jecxz
fimuls
and
jg
int
fistps
mov
add
int
push
das
mov
sub
inc
pushf
and
dec
xor
or
jns
aas
mov
cmp
stc
fisttps
jae
psubusb
mov
sbb
idiv
cwtl
jo
xchg
cltd
pushf
cmc
xchg
jnp
out
ja
rorb
mov
mov
xchg
xor
ljmp
addr16
rcrl
aas
je
insb
in
ljmp
dec
jmp
mov
js
popf
jle
leave
mov
insb
or
xchg
outsb
bound
fstps
mov
fs
mov
pop
jb
dec
push
es
cld
push
int
pop
xor
rcrl
enter
das
mov
loope
sbb
in
ds
inc
loope
mov
cmp
test
add
push
adc
fwait
aam
cmp
push
pop
or
dec
push
or
sub
mov
les
add
cmpsl
ret
adc
fwait
test
xchg
dec
in
adc
popl
aam
and
mov
or
dec
addb
adc
hlt
xorb
jbe
gs
pop
je
push
insb
lock
lcall
cli
imul
mov
popa
rcrb
in
bound
jns
push
and
das
mov
mov
sub
sub
in
dec
add
jmp
fcmovb
hlt
xor
popa
sbb
repnz
push
xor
sarb
test
cmp
pushl
shl
sbbl
mov
push
jae
pop
push
icebp
call
pushf
add
inc
dec
jmp
popf
lahf
jl
leave
add
pop
mov
out
sbb
jg
add
push
or
mov
push
cmc
popa
out
cli
jne
rep
dec
dec
and
rorl
lock
stos
inc
push
outsb
lock
nop
xor
sbb
mov
testl
adc
adc
lock
jnp
add
outsl
inc
insb
andl
test
orl
sbb
jge
xchg
jl
adc
xchg
push
inc
mov
jp
repnz
jge
fcmovb
call
xor
daa
jmp
pop
inc
mov
fs
rol
pop
push
adc
push
imul
adc
xor
adc
rorl
daa
sbb
mov
push
call
push
daa
xchg
outsb
cmp
ja
mulb
or
out
imul
mov
decl
fistl
js
add
sbb
sub
mov
mull
in
dec
inc
es
sbb
cmp
dec
icebp
pop
sbbb
jo
push
mov
in
adc
xchg
fsubr
in
or
mov
pop
adc
mov
add
jb
into
rorb
lock
les
mov
iret
ds
bound
pushf
jno
xor
inc
push
inc
das
je
js
into
sbb
mov
loopne
jmp
repz
and
nop
xor
cld
jg
xchg
ss
mov
mov
sahf
mov
stos
and
mov
js
in
pop
mov
mov
testb
pop
lods
inc
push
nopl
jecxz
inc
rcrb
mov
pushf
stos
icebp
mov
lock
pop
nop
sbb
lahf
push
mov
or
push
jl
shlb
bound
push
scas
adc
sub
adc
cwtl
sbb
dec
add
xchg
cmp
out
xor
shrb
ret
pop
data16
or
out
pushf
and
pop
push
cld
rclb
fidivl
sub
leave
sti
aad
in
push
cwtl
ret
sti
cmp
pushw
cld
negl
push
gs
shrb
xlat
cmpsl
and
ljmp
rcrb
inc
pushl
incl
popf
push
stos
add
jge
out
and
sub
push
enter
mov
inc
push
lahf
ljmp
pop
imul
jno
sarb
into
jmp
jecxz
push
sbb
and
cltd
loop
jmp
sub
push
add
or
jo
or
mov
outsl
xchg
insl
push
addr16
mov
cld
je
xchg
iret
sahf
push
mov
xchg
bound
jbe
aad
incb
dec
adc
dec
in
icebp
sbb
inc
lret
jbe
cmc
maxps
adc
mov
clc
adc
xor
dec
aad
adc
ret
xchg
add
jle
loope
scas
mov
int3
mov
jb
out
fsubp
in
aad
push
mov
loope
dec
dec
xchg
mov
sub
pushf
jno
pushf
cltd
mov
ud0
mov
add
shlb
cltd
cmpsl
pop
mov
into
sti
xor
sbb
insb
iret
sbb
out
pushf
xor
outsb
arpl
mov
pop
fcompl
add
fistl
push
mov
gs
pushf
fwait
dec
add
pop
mov
mov
mov
or
data16
icebp
push
dec
lret
pcmpgtb
xor
jno
test
fsubrl
dec
sbb
cs
add
lods
icebp
push
pushf
loop
cld
in
test
dec
fwait
push
sub
scas
xchg
and
adc
lahf
jns
lret
pop
outsl
out
arpl
testb
and
mov
out
sub
fwait
data16
iret
cmc
sbb
push
jae
xor
add
xor
sarl
pop
pop
imul
dec
dec
sub
xchg
jl
into
sbb
inc
leave
sbb
sub
add
test
sub
sub
xor
xor
flds
cwtl
pop
push
xlat
jbe
adc
jno
outsb
or
leave
jg
xlat
pop
pop
inc
add
test
dec
jnp
dec
cmpsb
push
push
frstor
mov
jns
iret
mov
loop
or
mov
jnp
scas
jns
push
shrl
inc
jp
pop
sbb
dec
arpl
movsl
adc
fcom
push
insl
dec
leave
mov
inc
cli
leave
xchg
xchg
push
mov
sbb
and
lret
popa
sbb
bound
insl
arpl
adc
jg
popa
jl
mov
cmp
cld
fwait
xchg
jno
rorl
in
scas
xchg
ret
ja
stos
insb
dec
int3
fimuls
jo
loop
push
adcl
mov
mov
mov
loopne
or
sbb
cmp
filds
pusha
dec
ja
int3
push
or
add
mov
sub
insl
xor
cwtl
mov
stos
mulps
in
insb
stos
test
mov
jbe
das
fiadds
call
lahf
jp
fisubs
lahf
xor
xorb
repnz
mov
and
nop
fisubrs
sub
fisttps
ja
std
inc
push
pop
xlat
aas
stos
shll
imul
daa
push
inc
mov
jle
and
cmp
or
push
sbb
mov
movsb
push
dec
add
adc
pop
mov
iret
ja
shll
push
cmp
pop
lock
ljmp
nop
xchg
mov
test
push
out
and
xor
sbb
jp
shll
stos
jle
push
sbb
or
sbb
xchg
fcomps
inc
add
inc
xor
int3
cmp
push
ja
fstl
jo
lea
add
inc
popa
dec
arpl
jp
loopne
test
mov
or
movsb
lock
daa
rorl
sar
xchg
mov
ss
cmp
fidivs
inc
pop
push
out
in
call
push
xor
sbb
dec
leave
js
cmpsl
add
push
imul
dec
add
and
inc
data16
mov
push
cwtl
sbbl
xor
or
lahf
loopne
pop
cwtl
sbb
cmpsl
jno
outsl
add
ffree
out
push
push
adc
cmp
fistl
mov
fistpl
test
dec
lahf
sbb
xchg
stos
push
shlb
dec
sarl
orb
fsts
cmp
imul
mov
xchg
lcall
mov
adc
pop
rorb
pop
push
sti
jbe
push
mov
mov
outsl
das
es
pop
pop
push
movl
mov
adc
test
mov
lcall
lea
pop
cmp
loopne
fs
mov
add
and
sbb
pop
test
imul
ja
popa
jno
daa
pop
push
outsl
lahf
sub
push
sub
or
adc
jl
imul
pushf
dec
les
pop
js
cltd
xchg
mov
mov
and
inc
cmp
outsl
cmp
fsubrs
sbb
aaa
push
jbe
inc
aas
push
xchg
ljmp
stc
dec
movsb
sub
jecxz
mov
cmpsl
dec
das
cmp
andb
fdiv
add
loop
mov
mov
insl
addb
and
fsubl
lods
xchg
nop
jns
lods
cmp
movsl
mov
stos
cld
gs
or
cs
mov
dec
out
in
stc
ds
cwtl
daa
movsb
lret
add
sahf
fisubs
sahf
add
in
and
dec
cltd
clc
shlb
cmp
imul
dec
xor
cwtl
addr16
stc
mov
notl
pop
mov
shlb
rcll
sbb
addb
cltd
adc
stos
mov
inc
or
in
pushf
mov
ret
popa
xor
push
xchg
scas
mov
mov
stc
cmp
cld
pop
sbb
shl
xor
cmp
je
sti
or
push
popl
lret
adc
cmp
into
and
jl
stos
sub
xor
adc
add
scas
fwait
orb
cmp
and
sbb
jb
xor
fadd
enter
aaa
pop
cltd
jmp
insl
mov
sti
jno
in
push
movb
out
jno
or
add
push
dec
test
sti
push
and
dec
pop
andl
mov
mov
add
lret
scas
pop
in
mov
cmp
fwait
jl
inc
add
mov
int
mov
mov
daa
sub
mov
arpl
adc
cmpsb
inc
fcoml
mov
and
inc
loopne
jl
xchg
fidivrs
sbb
cmpsb
pop
repnz
fs
loope
pop
sbb
shr
or
fs
pushf
sub
cwtl
repz
xchg
sbb
aaa
nop
sbb
mov
sub
cld
mov
pop
push
fldcw
pop
inc
push
jo
jl
jnp
stc
add
mov
fadd
pop
push
into
jl
mov
xchg
addr16
lods
cmp
scas
push
push
sbb
fcompl
cmpl
mov
fwait
out
mov
stc
dec
inc
cs
xor
cmpsb
fsubl
add
adc
dec
and
pop
ljmp
sub
mov
int
repnz
jge
lds
and
cmp
in
add
jo
pop
jae
push
pop
push
push
inc
sbb
mov
int3
jae
adc
jp
and
xchg
mov
or
jl
les
inc
fwait
or
je
pop
and
lret
sub
push
push
out
dec
add
shr
icebp
mov
ss
shl
mov
aas
sbb
sub
incb
cltd
jmp
lock
xchg
and
cmpsb
int3
or
in
push
aad
int
je
clc
test
leave
sub
xchg
cmc
js
lods
lea
mov
fnstcw
push
pop
cmp
call
repnz
adc
insl
cmpsb
hlt
and
or
push
mov
pop
xorl
cli
mov
push
sarl
inc
fwait
rorb
lret
jb
pop
js
ret
adcl
in
negb
or
xor
sbb
push
dec
add
out
es
push
or
std
sbb
fwait
push
movb
sbb
das
push
xor
mov
adc
mov
dec
gs
test
loopne
jle
clc
xchg
je
pushf
repnz
test
arpl
sbb
jg
stos
inc
cs
push
ret
add
scas
jne
clc
or
loopne
out
insb
imul
cmp
daa
mov
lods
stos
sbb
test
push
jbe
cld
push
or
cmp
leave
inc
dec
js
ja
or
pushf
inc
fsubp
daa
jbe
outsb
mov
sub
jae
jle
fs
mov
fiadds
mov
je
mov
rolb
aas
jo
cmp
xlat
xchg
or
fs
add
pop
in
into
ds
mov
into
xchg
out
mov
call
jmp
push
sub
inc
popa
xchg
adc
fsub
pop
xchg
adc
icebp
pop
sti
lods
call
mov
aas
out
or
scas
clc
cmpsb
test
xor
aad
dec
ss
mov
iret
xor
sbbb
js
lds
adc
lcall
lea
adc
mov
inc
idivb
push
pushl
adc
movsb
icebp
push
stos
and
xchg
loope
lock
notb
daa
sbb
aad
movsb
xor
dec
gs
int
scas
dec
sbb
fadd
and
loopne
test
inc
mov
test
sahf
mov
lock
repnz
inc
cltd
call
test
loopne
and
push
fisttpl
mov
jge
add
mov
in
dec
insl
sub
sub
out
jmp
pop
popf
pop
dec
push
adcb
sub
fcoml
cld
cmpsb
mov
xchg
shl
mov
and
inc
add
cmp
lret
test
icebp
adc
addr16
add
adc
int3
test
add
arpl
jmp
incb
sub
mov
add
pop
test
fdivrs
jbe
lcall
fidivrs
jns
xchg
jno
sub
inc
hlt
icebp
jb
fnop
call
in
scas
mov
js
mov
cmp
pop
or
fs
add
mov
push
jne
xor
test
call
pop
jp
dec
and
xor
cmp
hlt
sub
test
xchg
or
sbb
out
push
pop
mov
and
gs
je
mov
imulb
sahf
scas
xor
push
mov
je
test
inc
call
lods
sbb
sub
lea
out
out
adc
mov
mov
mov
add
adc
sbb
mov
cmp
mov
mov
fadd
xchg
cmp
fwait
test
jl
outsl
jae
lock
or
lods
push
dec
xor
inc
daa
mov
dec
cltd
stos
jae
adc
addl
in
push
push
push
add
mov
into
out
mull
stos
popa
push
xlat
add
in
sahf
adc
fs
push
push
add
imul
lret
test
push
adc
add
sbb
jns,pt
sti
mov
mov
mov
cmp
fstl
lahf
dec
mov
popf
cld
push
test
in
xchg
push
mov
leave
inc
sub
pop
sbb
pop
sub
insb
fcmovb
js
test
jge
ljmp
push
icebp
xor
pop
rclb
ss
rcrb
xchg
rcrl
xchg
mov
pop
lret
mov
mov
out
and
inc
sbb
mov
lret
ret
jge
pop
mov
test
pop
mov
cmp
push
xchg
push
sub
mov
add
loopne
sbb
jo
dec
inc
push
aam
loope
adc
movsl
das
cmp
sub
int
stos
adc
insb
xor
pop
push
push
out
shlb
mov
xor
jl
push
push
in
jg
mov
jmp
cli
roll
and
imul
sub
shl
orb
into
test
add
decl
rorb
sub
fadds
sub
neg
adc
cwtl
pop
jge
mov
lcall
iret
xor
fsubrs
dec
and
cmpsl
loop
insb
lret
add
ficompl
mov
cmp
jmp
cmpb
loop
jl
inc
cmp
mov
cmpsb
lret
stos
sti
mov
mov
shrb
inc
test
push
fwait
in
sub
inc
cmp
inc
shlb
push
rorl
dec
dec
xchg
popf
insb
add
or
mov
fs
enter
fwait
xchg
push
mov
push
rol
mov
and
lds
jecxz
cwtl
call
subl
xor
ret
das
mov
sahf
test
repnz
xchg
aam
jge
jno
les
mov
fisttpl
ss
push
lock
stos
arpl
pop
std
stos
imul
loopne
jp
jae
stc
pop
xchg
dec
cmp
ret
xor
jle
loope
and
rolb
jb
adc
mov
shr
mov
imul
push
add
cmp
mov
pop
pop
jecxz
mov
push
push
and
stos
call
in
adc
mov
loop
pop
or
fsubrl
gs
jns
or
stos
daa
dec
push
xchg
shlb
popf
aam
push
cs
add
cwtl
sti
jmp
mov
sbb
mov
add
imul
and
sub
push
pusha
daa
call
subl
rclb
ss
dec
push
scas
lods
mov
mov
cli
inc
data16
lret
xor
cmc
das
lcall
sbbl
rclb
and
mov
ss
jl
out
mov
add
in
inc
in
into
pop
mov
xchg
adc
or
push
std
aaa
xlat
sub
mov
pop
cmp
ret
jno
xor
mov
insl
scas
push
mov
adc
pusha
lods
jmp
cmp
lods
pop
dec
sub
cs
xor
ss
mov
mov
fs
sub
xchg
jns
pop
in
fsubl
inc
out
or
lea
inc
mov
or
pusha
mov
aam
jb
sbb
pop
cmp
aas
add
push
or
lret
test
adc
popf
xchg
mov
lret
sbbb
and
inc
mov
xor
mov
mov
pop
cmp
fwait
mov
or
pop
and
loope
cmp
lods
dec
pop
push
out
pop
shl
push
ficompl
loop
ja
gs
call
popa
outsl
pop
or
adc
xor
ret
flds
xchg
inc
xchg
jns
int
out
test
or
or
add
outsl
test
pusha
push
add
mov
and
idivl
ss
pushf
call
mov
cmpsb
jnp
mov
xchg
inc
jecxz
test
xchg
test
dec
in
xchg
test
xchg
jae
xor
repz
imul
sbbb
cs
in
popf
orb
or
cmp
inc
cmp
mov
fs
mov
pop
decb
push
adc
xor
mov
jg
call
popa
jno
jns
lds
inc
outsb
arpl
out
xchg
dec
cmpsb
aaa
dec
cmpb
stc
or
add
xchg
xchg
adc
scas
ljmp
adc
pop
sahf
lods
fs
into
mov
popa
adc
nop
je
mov
imul
push
loopne
adc
fbstp
cmp
lret
loopne
pop
aad
repz
mov
scas
cmp
inc
aad
inc
adc
mov
icebp
mov
push
mov
push
dec
mov
mov
mov
test
leave
ficompl
pop
mov
aas
adc
xchg
sti
inc
mov
cmp
or
and
mov
icebp
xor
je
stos
mov
mov
mov
sub
roll
pop
daa
mov
mov
push
ret
cmc
enter
xor
inc
rol
cltd
cli
sub
inc
popf
testl
test
lock
into
sti
inc
xor
lret
sbb
gs
repz
in
push
jg
js
mov
insl
push
gs
inc
lods
popa
js
pop
inc
js
xorb
aad
out
jg
sub
or
jbe
jo
mov
movb
sarl
and
test
adc
enter
cwtl
arpl
adc
lahf
or
outsb
sbb
or
jns
rcll
mov
dec
lret
add
mov
adc
dec
xchg
ljmp
xlat
xchg
test
mov
xchg
pop
nop
adc
mov
mov
cmp
xchg
mov
sbb
xor
loopne
cmp
or
dec
add
sbb
int
or
jecxz
sbb
sub
cwtl
xor
adc
loope
xor
mov
dec
fsub
xlat
mov
or
lret
xor
pop
push
xor
pop
insb
ljmp
insb
mov
nop
fdivrl
and
mov
push
movsb
pop
clc
js
aaa
inc
cmpsl
stos
mov
pop
int3
cmpsb
add
insl
pop
push
mov
sub
sbb
lods
sub
add
outsl
inc
push
adc
add
or
mov
mov
dec
xlat
pop
sbb
cmpsb
enter
dec
call
inc
inc
repnz
nop
aad
lods
loope
add
sbb
rorl
jl
adc
nop
sub
in
ret
daa
or
dec
dec
lcall
jbe
cmp
dec
ljmp
jmp
les
add
aam
int
jb
pop
ljmp
ret
and
insb
mov
jge
sahf
mov
dec
cmpsl
outsb
nop
xchg
xchg
mov
sub
xchg
scas
jb
mov
jge
inc
call
pop
mov
ja
inc
bound
inc
das
sbb
dec
add
in
pushf
in
loop
adc
das
add
jns
push
and
xor
sub
sub
scas
push
adc
int
shll
adc
loopne
lcall
call
sub
xor
mov
test
sbb
xchg
stos
lods
sbb
outsl
sbb
sub
fimuls
iret
jae
pop
jg
xor
repnz
inc
xchg
xchg
sub
insl
fsub
cmpsb
jns
cli
inc
sbb
fwait
jo
notl
fwait
lret
out
cmp
and
push
jne
jb
xchg
dec
orb
cwtl
fadd
cld
pop
adc
cmpsb
xor
and
jbe
aaa
pushf
ja
nop
add
sbb
insl
sub
xor
lahf
mov
je
inc
int3
adc
out
or
push
mov
shlb
int
inc
stc
xor
inc
lock
push
je
inc
int3
xor
into
inc
xchg
and
lds
cmp
fidivrs
push
cld
out
xchg
mov
cmpsl
adc
push
lods
andb
inc
and
jmp
mov
jmp
cmp
data16
insl
sbb
xchg
ret
or
push
mov
orl
mov
movsb
ret
xor
and
inc
mov
add
repnz
cmp
mov
inc
sub
add
insl
mov
jg
push
xchg
push
dec
fdivl
sbb
sbb
rcrl
aaa
decb
test
xchg
mov
shld
fisubrs
jecxz
jae
mov
enter
adc
mov
sbb
dec
mov
popa
repz
sub
iret
sbb
cmp
mov
sub
fnstenv
mov
and
mov
cmp
pop
and
sbb
xchg
adc
push
shlb
and
fiaddl
mov
and
inc
cld
dec
xchg
or
imul
dec
push
mov
out
fwait
xor
mov
push
int
jbe
je
insl
lods
cltd
push
test
mov
ja
cmp
xor
push
gs
pop
add
jo
outsl
movsl
popf
mov
and
or
sbb
xchg
add
mov
pop
stos
into
mov
jnp
out
cmp
ror
int3
popa
das
test
pusha
aam
repz
cld
and
daa
adc
fwait
les
dec
imul
dec
xchg
pop
jno
jbe
test
movsl
adcl
sbb
add
loopne
xchg
in
adc
push
adcl
push
and
or
fstpl
jno
or
mov
outsb
or
int
xlat
clc
xor
fnsave
push
dec
dec
cmp
xchg
push
jg
mov
xchg
in
sub
sbb
lret
dec
enter
stc
xchg
sub
mov
push
dec
outsb
pushf
jae
push
test
push
sbb
gs
xchg
xor
data16
push
fstps
lahf
in
pusha
push
pop
jno
jbe
fwait
push
bnd
test
mov
add
or
mov
inc
loopne
mov
adc
iret
fabs
movsb
jnp
push
mov
inc
push
rcl
xchg
imul
xor
inc
mov
mov
mov
adc
cmp
push
and
mov
bound
lock
cld
push
fnop
and
xchg
xor
adc
and
jnp
js
mov
cmp
add
dec
mov
arpl
inc
pusha
add
imul
inc
cltd
push
add
add
in
lret
inc
fisttps
sbbb
or
imul
mov
movsl
arpl
ret
sub
mov
xlat
lahf
scas
loope
call
pop
fs
pusha
lcall
ljmp
xchg
mov
inc
das
mov
test
and
pop
adc
testl
in
xchg
test
das
cmpl
mov
test
int3
mov
dec
das
shrl
pop
xchg
pop
xchg
adc
lcall
jmp
mov
pop
dec
std
aam
jb
popa
ljmp
push
andb
add
pop
aaa
xchg
lock
inc
jle
jle
lods
loopne
aad
clc
loopne
in
in
lods
dec
adc
pop
inc
pop
jmp
out
gs
push
xor
cli
push
gs
std
sub
fcoms
or
push
inc
pushf
inc
ss
fidivrs
idivl
test
xorb
ret
dec
push
add
dec
mov
adc
jmp
mov
jb
sbb
rcrl
mov
mov
and
pusha
in
jge
int
inc
or
jns
xlat
push
xor
out
in
loopne
and
mov
lock
shlb
add
push
push
pop
inc
stos
cmpsb
mov
int3
mov
inc
mov
cmp
dec
addl
imul
sti
icebp
cli
mov
out
aad
ja
mov
sub
sub
cmp
scas
dec
and
pop
iret
fldt
mov
mov
jecxz
popa
pop
jl
outsb
in
xchg
std
popf
add
lock
out
and
mov
fdivl
fildll
xchg
add
pop
clc
adc
inc
or
out
mov
xchg
mov
dec
mov
jb
rcr
cmp
push
call
leave
int
pop
and
push
insb
and
xchg
fdivs
mov
rcrl
adc
test
scas
xor
aas
inc
mov
xchg
fwait
or
jbe
jg
xor
pop
loope
stos
cld
repnz
call
ds
repnz
mov
icebp
cmp
inc
cmp
test
test
mov
stc
add
and
out
push
fmuls
pop
stc
sbb
pop
inc
jmp
hlt
sub
mov
stos
in
lock
scas
sarl
xlat
push
pushf
adc
sub
ss
out
jo
call
repnz
mov
sbb
jp
fldcw
jb
loope
sub
or
clc
push
jns
in
mov
xchg
xor
mov
jns
std
adc
popf
int3
jne
icebp
cmp
pop
push
cmp
addb
adc
push
sbb
mov
cwtl
iret
sub
or
push
and
cmp
jmp
add
ss
repnz
arpl
iret
ljmp
inc
mov
pop
nop
or
es
mov
dec
jp
jns
hlt
stos
fidivrl
mov
push
out
and
xchg
mov
mov
mov
maskmovq
negl
or
in
iret
loopne
pop
ljmpw
cmp
pop
lods
test
push
fcmovnbe
xchg
push
jmp
cmp
add
cmpsb
loopne
int3
add
pop
xor
adc
lods
push
cld
stc
fisttpll
add
mov
sti
shlb
outsl
pop
stos
or
cmpsl
fistpll
test
sub
mov
sahf
jp
add
orb
push
dec
lds
inc
inc
cmp
aaa
pushf
adc
xor
pop
mov
push
lahf
mov
fcoms
fcom
ja
and
add
popf
jmp
or
dec
mov
sub
cmp
inc
and
shlb
mov
inc
cmp
int
cwtl
jnp
std
popa
adc
out
push
in
daa
cmc
int3
sahf
or
push
dec
adcl
lret
js
sbb
imul
lcall
push
or
sbb
sub
cwtl
xor
nop
and
pop
loop
add
xor
dec
push
adc
sbb
fiadds
cmp
adc
pmaddwd
lods
data16
mov
lret
sub
cmp
fs
and
call
push
push
mov
mov
add
mov
scas
add
stos
fstpl
ja
adc
loop
scas
fs
mov
inc
adc
lock
test
adc
fisubs
inc
je
mov
shlb
leave
pop
mov
cmp
aad
push
loop
js
xor
in
inc
inc
hlt
in
mov
and
gs
inc
je
jle
sbb
in
cmp
cld
lret
lods
xchg
test
rcr
push
pop
mov
rolb
mov
cld
push
loopne
mov
shrl
push
mov
ret
xchg
push
fstl
das
mov
pop
and
lcall
xor
lcall
and
rcll
orb
pop
in
pop
mov
dec
sub
repz
shlb
mov
hlt
pop
or
adc
sbbl
es
sbbl
loop
add
pop
fwait
cmp
ret
subl
je
lock
arpl
cltd
outsl
xchg
rcll
xor
and
jmp
and
jne
hlt
aam
lods
nop
jae
sbb
aas
les
mov
or
sub
cwtl
mov
push
dec
cmpsb
into
cmpsb
dec
rcll
pmullw
and
jae
shll
outsb
mov
mov
mov
add
popa
fnstcw
filds
in
scas
push
insb
mov
mov
pop
addr16
call
gs
or
fwait
push
stc
cmc
stc
ret
mov
cmp
ret
xchg
mov
cmp
es
shrb
lahf
cwtl
mov
sti
incb
mov
test
lods
dec
sbb
stc
cwtl
iret
mov
shlb
cmp
sub
lcall
dec
fisttps
sbbl
mov
outsb
or
mov
in
cmc
pop
mov
mov
aam
pop
ficomps
stc
jp
daa
xor
dec
mov
mov
jbe
cs
mov
mov
jge
fdivl
idiv
jle
jge
mulb
mov
and
and
xor
leave
scas
sbb
jl
dec
push
mulb
xchg
shll
push
mov
int
es
mov
movsb
jp
lods
add
jg
add
sbb
lods
pop
jno
sbb
jl
jmp
xchg
mov
mov
pop
push
fldt
mov
imul
add
sbbl
sub
sbb
jb
push
ljmp
repnz
cwtl
pushf
cmpsb
sbb
fisttpll
jmp
fdiv
mov
pop
in
in
test
ret
out
ret
inc
rcll
cmp
push
pop
sub
inc
sub
xlat
xchg
leave
out
jg
sbb
insb
sub
addr16
pop
test
and
xchg
clc
inc
xchg
out
cmp
sub
mov
subl
adc
adc
sub
mov
incl
jns
pop
jae
out
dec
subl
push
movsl
xchg
pushf
orl
adc
xchg
mov
inc
in
inc
in
iret
pop
repz
les
mov
jbe
sbb
std
xchg
xchg
ret
stc
fldenv
loop
mov
out
mov
sbb
out
testb
leave
int3
or
iret
push
and
mov
addr16
imul
ss
xchg
or
mov
dec
jno
stc
cmp
xchg
out
jmp
jp
fildll
and
scas
push
cmp
xchg
add
or
mov
fiadds
jns
jmp
test
in
dec
mov
adc
ret
and
sarl
inc
sub
or
sbbb
adc
mov
pop
pop
cmp
inc
sub
xchg
jne
cmp
sbb
clc
dec
pop
sbb
divl
or
lcall
mov
sbb
lahf
lds
das
xchg
jbe
jle
sbb
or
int3
mov
mov
and
pop
push
imul
hlt
fsubrl
scas
mov
mov
pusha
ljmp
lret
xchg
stos
cmpsl
and
add
mov
push
add
ret
scas
hlt
lahf
lret
mov
hlt
sbb
dec
inc
andl
push
xlat
and
or
mov
mov
cmpsb
aaa
mov
adc
mov
out
lock
adc
mov
lods
cmp
pop
push
fdivrl
pop
mov
jbe
push
movsb
dec
add
lods
mov
das
ljmp
sub
dec
xor
aam
xor
hlt
mov
divb
fstps
bound
inc
xor
adc
pop
addr16
or
dec
jle
shr
in
mov
rolb
sbb
sbb
adc
mov
stos
inc
inc
pusha
and
cmp
xor
jne
sbb
pop
test
sub
sub
stos
adc
dec
ss
and
dec
dec
dec
pushf
dec
mov
adc
add
mov
leave
mov
popa
jge
les
mov
out
into
lahf
insl
fldt
add
jbe
push
pop
xor
adc
int3
dec
mov
sahf
mov
imul
lock
ror
int3
and
add
std
and
jecxz
jecxz
mov
test
push
pop
sub
add
mov
scas
dec
rcrl
add
xchg
or
mov
cli
sti
add
and
mov
inc
adc
mov
pusha
inc
imul
pop
negb
or
adc
jbe
cld
dec
push
jle
xchg
dec
pop
dec
out
dec
loopne
jp
fwait
sub
fisubl
cmp
cltd
incl
push
js
mov
lret
test
pop
cld
mov
int3
out
pop
fnstsw
movsl
xorl
arpl
dec
jns
sub
and
add
inc
xchg
push
jne
dec
push
push
popa
mov
add
aaa
sbb
xchg
pop
gs
addr16
aaa
sbb
bound
nop
mull
xchg
xor
sub
mov
jmp
pop
pop
std
fcomps
xor
pop
mov
xlat
mov
in
or
add
loopne
outsl
pop
call
in
outsl
or
and
ds
testb
sub
or
mov
and
xlat
fwait
push
pop
adc
sub
jle
sub
dec
adc
arpl
dec
insl
jecxz
mov
pop
clc
sbb
mov
lods
push
and
pop
loopne
iret
pop
ljmp
scas
jmp
jle
shlb
pop
push
pop
dec
mov
pusha
es
pushf
dec
shlb
or
mov
popf
add
mov
inc
movsl
bound
jmp
fstpl
dec
mov
shrl
movsb
mov
or
repnz
ficomps
jl
sbb
and
adc
mov
aam
js
mov
xchg
jo
jg
inc
pop
lods
in
aam
sub
sarb
mov
out
sub
push
sub
arpl
ds
aas
jb
stc
inc
stos
sbb
sarl
mov
cwtl
sbb
popf
sub
dec
lret
and
pop
stc
out
xchg
adc
pop
sbbb
sarl
mov
int
test
popf
sti
dec
iret
aas
in
test
push
int3
cmp
imul
adc
xlat
incb
mov
cmp
out
jae
push
and
subb
mov
movsl
mov
pop
sub
aad
mov
loop
xchg
jecxz
icebp
mov
leave
dec
xchg
repnz
add
out
cmp
lcall
dec
mov
imul
cmpsl
jl
dec
ss
push
push
fidivrl
jae
sub
jmp
add
fcmovbe
jb
dec
enter
test
or
mov
shrl
bnd
shlb
pop
loopne
lods
push
das
out
loope
js
xor
mov
jmp
jp
test
push
ret
push
or
dec
push
out
pushf
mov
adc
mov
mov
add
aaa
xchg
in
scas
pop
add
pop
or
das
pop
dec
sub
jne
loope
jp
aam
mov
mov
xor
push
or
or
outsl
pop
pop
repnz
pop
mov
mov
test
xchg
cmpsb
sbb
cld
or
sbb
scas
pop
sub
sahf
insb
add
mov
ret
mov
outsb
ja
jbe
out
lret
lea
lcall
out
pop
jae
mov
in
loop
sar
sub
into
mov
decl
sub
enter
dec
and
add
lret
cmp
int3
ret
push
shr
push
and
jno
ljmp
loope
lea
fmull
popf
and
addr16
dec
mov
inc
sbb
cmpsl
push
rclb
in
pop
jno
fwait
movsb
test
loopne
pop
xor
div
sahf
or
xor
mov
rcr
mov
test
lcall
mov
jae
fsubrs
pop
movsl
xchg
mov
lods
add
cmp
jnp
push
insl
add
insl
xchg
les
sbb
mov
and
cmp
aaa
outsl
loopne
mov
test
mov
test
and
out
mov
cmp
cmp
and
xchg
subb
xlat
out
in
push
aam
shll
or
push
inc
pop
outsb
ja
add
cltd
jnp
pop
jge
xchg
pop
movsb
test
pusha
push
mov
mov
jle
je,pt
push
jmp
shr
jl
ret
dec
fsubrl
sub
movsl
lahf
mov
sub
in
pop
ss
dec
xchg
mov
negl
ljmp
jns
aaa
add
fwait
ja
imul
inc
mov
and
repz
push
cltd
xchg
movsl
push
testl
es
pop
pop
mov
dec
xlat
pop
scas
mov
xchg
in
mov
movsl
xor
xchg
jb
jle
jg
xlat
test
cltd
xor
fdivrl
ljmp
xor
inc
mov
inc
push
fisttpl
xchg
inc
mov
add
cltd
in
adc
pop
ror
js
jnp
push
sub
mov
mov
daa
sbb
sbb
cmp
int3
repz
cmp
inc
add
ljmp
data16
out
aaa
addb
sub
adc
fcoms
lahf
sbb
data16
je
ja
imul
xchg
adc
outsl
mov
cmp
push
jmp
repz
xor
or
adc
dec
push
mov
loopne
mov
jecxz
leave
cmp
pop
std
into
sbb
in
dec
inc
out
add
js
hlt
mov
bound
pop
fmull
xorb
fxch
mov
cs
cld
imul
fdivl
jmp
dec
aaa
iret
cmp
sub
mov
outsb
xor
mov
repz
shr
gs
outsl
jl
and
cmp
xchg
cmp
movsb
jecxz
mov
pop
and
mov
jecxz
cwtl
call
mov
aas
ret
lahf
sti
dec
adc
pop
xor
sbb
and
cmp
xchg
jne
lea
rcrb
dec
jbe
enter
push
push
in
cli
mov
cmpsb
add
sub
jnp
and
mov
nop
insb
mov
xor
xchg
icebp
jae
lea
inc
popa
push
imul
push
scas
cli
sbb
xor
loop
mov
sub
pop
dec
pop
movups
push
cmp
pop
and
iret
fnstsw
jne
cmp
add
xchg
ss
jb
push
pop
and
add
jle
sbb
cwtl
push
push
xor
fimull
enter
or
ret
popa
lcall
push
call
cmp
imul
push
mov
arpl
outsb
dec
mov
or
inc
dec
loopne
fldl
aad
mov
mov
pop
sub
xchg
push
mov
sarb
lods
cmpsb
cld
sti
jnp
and
fildl
test
sub
hlt
stc
lds
push
lds
xchg
ret
pop
cmp
xchg
cltd
xchg
xchg
pop
shlb
shl
pop
je
sub
jp
stos
cmp
notl
push
mov
mov
stc
fidivrs
xchg
scas
push
adc
pushf
or
mov
mov
jb
push
or
jmp
push
cld
cltd
mov
adc
sub
and
xchg
sbb
lret
and
les
cmpsl
push
mov
fwait
jno
pop
xchg
adc
mull
add
test
add
nop
ficoms
xchg
in
es
pop
test
test
fs
sbb
push
add
pop
aaa
lds
imul
xchg
rclb
push
std
call
lods
dec
mov
les
or
mov
mov
jge
popf
mov
xchg
push
inc
and
or
andb
movsb
test
cmp
outsl
nop
test
arpl
je
adc
xchg
out
call
jg
gs
mov
pusha
pop
out
push
gs
in
xchg
jmp
add
mov
mov
cmp
jp
das
mov
cmpsb
and
push
in
mov
fmull
pop
arpl
xchg
mov
mov
mov
out
insb
push
cmc
jg
ret
outsl
inc
movsl
jg
call
add
sti
mov
lcall
mov
out
pop
cmp
cltd
sbb
and
xchg
pop
mov
imull
nop
aad
mov
xchg
outsl
cwtl
xchg
std
xor
jae
mov
lahf
cli
xor
cmp
jmp
out
mov
cmc
sub
out
andl
lods
out
mov
pushf
inc
cmpb
xchg
inc
je
or
lods
jge
pop
fsubrs
dec
add
clc
sar
or
outsb
or
outsl
jle
mov
xchg
iret
xchg
lahf
jl
repz
call
repz
mov
icebp
cwtl
fwait
cmp
insl
jne
gs
subl
sub
repz
jno
stc
xchg
loopne
fimuls
in
clc
mov
push
add
push
sub
fnstenv
int3
fmull
addr16
inc
popa
sub
push
inc
testb
roll
call
test
mov
sub
lods
jl
lds
ljmp
or
imul
sbb
ss
shlb
rorb
xchg
mov
push
std
repz
push
movsl
test
andb
add
inc
loope
pusha
pusha
addr16
mov
fcmovnb
mov
push
mov
jmp
add
and
cmp
sbb
inc
jnp
cmpsl
mov
iret
gs
out
push
jmp
int3
adc
jg
sub
mov
fistps
and
fildll
or
cmc
and
jmp
adc
cltd
scas
jecxz
movsl
pop
jge
adc
inc
jl
sbb
fistl
pop
mov
jp
in
out
jno
lods
jl
clc
fwait
das
stc
sbb
mov
dec
aad
cmpl
nop
sbb
sahf
mov
jle
add
mov
jp
dec
insb
pop
cmp
xor
decl
push
dec
mov
or
add
mov
nop
ljmp
rol
sub
stos
roll
xor
out
aaa
imul
pop
add
adc
mov
mov
cli
pop
ss
sub
jno
jb
popf
sub
push
shrl
mov
or
dec
jbe
jle
iret
stc
repnz
lock
mov
std
orl
stos
xor
mov
mov
rclb
repnz
adc
mov
sub
xchg
jecxz
cmpsb
adc
popf
ljmp
nop
mov
aam
cmpsb
pop
mov
fimuls
adc
scas
jb
or
xor
idiv
inc
mov
rol
test
daa
mov
jg
cmpsl
or
in
mov
gs
xchg
in
mov
sub
dec
xlat
cld
repz
push
cmp
mov
xchg
adc
sahf
mov
and
add
mov
icebp
hlt
fincstp
leave
and
pop
mov
inc
in
hlt
push
cmpsl
aam
xor
enter
in
fs
adc
lds
cmp
jnp
fs
cmp
mov
lods
sub
subb
sti
addr16
cltd
pop
popa
xchg
enter
jecxz
fbstp
push
daa
jl
popf
jno
xor
sub
pop
aad
push
test
addb
mov
push
ja
dec
sahf
fmull
push
sbb
dec
pop
pop
jo
xchg
pop
sub
hlt
ficoms
call
push
cmp
xor
or
pop
push
push
add
cwtl
comiss
lods
xor
push
fdivs
out
loop
push
pushf
xor
test
mov
add
fbld
out
lea
call
addb
mov
or
dec
daa
pop
dec
fldlg2
loopne
scas
sub
push
push
push
mov
jns
mov
sbb
xor
jo
stc
out
jb
add
jl
outsb
cmp
repz
lods
xchg
sub
test
or
jne
sbb
mov
cmp
stos
enter
push
push
push
fld
dec
dec
aaa
xchg
and
pop
je
cmpl
in
jmp
sbb
sub
fs
arpl
mov
fidivrl
scas
push
pop
cmc
jno
cwtl
ljmp
out
jo
or
rorb
enter
jo
sarl
out
or
cmc
or
call
sbbl
mul
sti
mov
and
iret
sbb
jae
or
xor
lods
xchg
loope
aam
gs
cld
cli
stos
into
xor
movsl
je
fs
mov
sub
mov
and
xor
and
stos
notl
xor
jnp
imul
icebp
popf
outsl
and
sbb
ret
pop
shrl
sahf
mov
aas
push
inc
adc
xchg
cmp
or
jecxz
dec
fsubl
inc
xor
inc
sbb
fstps
dec
les
popf
bound
stc
push
dec
xor
popa
cmp
lods
dec
lock
sub
mov
hlt
pop
clc
xchg
ss
sbb
int3
fistpll
ss
or
xor
push
push
xor
mov
mov
scas
scas
rcll
mov
fstl
repz
push
adcl
popf
pop
mov
pop
xor
sub
iret
jno
xor
pop
add
jno
fstpl
add
pop
aam
xchg
lds
movsb
nop
repz
in
sub
es
in
xchg
cmp
xor
sub
add
das
fdivp
cmp
mov
cmpsb
sahf
or
pop
push
xor
inc
push
js
in
iret
repnz
je
sbb
cmpsl
cltd
sti
int
jae
test
pop
dec
push
lret
jae
and
hlt
cmp
stos
lods
cwtl
scas
and
pop
lahf
fs
jle
mov
xor
or
and
sub
bound
rcrb
jmp
adc
mov
xor
mov
pop
loopne
mov
adc
cltd
into
and
arpl
mov
std
dec
scas
cltd
aad
lods
pop
push
pop
fldt
jns
fs
insl
jae
cwtl
jbe
jg
int3
sbb
out
repz
mov
icebp
mov
call
cmp
xchg
lock
jne
pand
add
xchg
dec
loop
jl
lcall
or
mov
dec
jns
push
mov
jp
push
inc
andb
jmp
gs
mov
jle
xor
roll
dec
icebp
or
mov
dec
pop
aaa
in
and
adc
pushf
fsubrp
mov
inc
out
mov
xchg
imul
clc
mov
jle
and
mov
inc
inc
add
pop
mov
xor
stos
fistps
xlat
and
xchg
add
in
shll
test
arpl
cmc
dec
cmp
sbb
movsb
sub
sahf
xor
jne
pop
inc
aam
daa
push
pop
dec
in
xor
add
jb
lods
lods
xor
cmp
movsl
fldl
jmp
lods
fisubl
adc
out
jle
bt
movsb
jbe
mov
lret
lret
sub
jne
test
shrl
sub
das
jmp
aam
cmp
loop
inc
mov
mov
ret
mov
orb
dec
insl
rorb
sti
dec
out
repnz
ret
imul
xor
adc
cltd
or
jge
fadds
xchg
dec
es
lock
push
jle
call
mov
jmp
shrb
test
stos
pop
sub
repnz
jle
jae
int
mov
lds
insb
outsl
fisttps
sbb
push
mov
aas
popa
push
add
jne
std
pop
mov
insb
and
out
pusha
xor
sub
ljmp
xchg
jnp
sub
sbb
nop
js
pop
sbb
repz
sub
xorb
iret
mov
push
cmp
pop
cmp
pop
jns
and
sub
add
in
push
scas
cmpsb
adc
fsubrl
or
sbbb
nop
mov
lahf
inc
jmp
sub
push
dec
cs
push
call
cs
push
pop
aad
push
xor
mov
cli
pusha
ret
xchg
icebp
xor
xor
push
adcl
fs
jge
mov
pop
cltd
data16
xor
xchg
cmpsl
cmpsb
aad
mov
pop
fbld
fs
push
pop
jns
pop
push
jae
fcom
test
out
jecxz
repnz
adc
cwtl
push
scas
push
int3
pop
addr16
sbb
pop
mov
loope
fwait
jbe
adc
enter
sbb
pop
nop
loope
sbb
mov
pop
icebp
movsl
push
test
inc
xchg
aaa
sbb
adc
vzeroall
mov
insl
or
mov
mov
pop
outsl
dec
sbb
idivl
xchg
mov
cmp
repz
les
dec
jg
nop
jo
xchg
cmp
int3
dec
sub
testb
fwait
push
dec
loop
pop
push
or
mov
out
icebp
arpl
loopne
jb
push
outsl
sub
jecxz
je
push
out
push
lahf
lahf
mov
mov
lock
iret
pushf
jne
mov
sbb
and
scas
inc
fildl
jne
fs
sbb
mov
mov
push
inc
xor
movsl
cmpsl
pop
jb
mov
jp
and
lea
mov
xchg
imul
inc
pop
dec
mov
xor
xchg
test
nop
fldt
mov
cmpsb
call
fsubl
jl
mov
std
push
push
push
cmc
aad
cmp
in
mov
gs
cld
mov
cmp
aam
fmull
shlb
loope
xor
int
pop
xorb
js
push
fs
shrb
adcb
dec
xchg
das
cli
adc
jae
repnz
push
pop
push
pop
push
outsl
stc
xchg
in
xchg
scas
sbb
mov
hlt
cmp
or
xchg
adc
out
idivb
pusha
lret
mov
ror
mov
jo
inc
mov
cltd
inc
in
push
sub
cmp
xor
xchg
stos
std
jnp
or
jne
xchg
adc
lods
dec
dec
dec
in
and
mov
inc
and
jno
adc
fs
lcall
cwtl
mov
mov
fstps
clc
movb
cwtl
add
fldenv
data16
jecxz
lds
sahf
push
inc
xchg
popf
inc
cmpsb
inc
nop
inc
mov
adc
in
lret
add
icebp
mov
rcr
fs
lods
pop
inc
aas
sbb
jns
icebp
xor
stc
lock
jge
adc
popa
andb
push
and
push
and
cmp
xor
stc
cmp
icebp
inc
fmul
xor
jecxz
add
les
loope
mov
out
sub
push
mov
out
aaa
test
inc
inc
hlt
push
push
decl
cmc
and
out
mov
popa
hlt
and
add
cmc
in
es
add
lret
mov
jecxz
rolb
and
dec
cltd
inc
scas
push
xchg
cltd
mov
movsb
gs
mov
adc
outsb
lea
push
fisttpl
push
in
in
lods
mov
mov
pusha
into
jae
push
js
add
cld
test
inc
cmpsb
jecxz
or
and
aad
sahf
mov
sbbl
inc
xchg
jo
sbb
sub
xchg
int3
in
test
push
inc
dec
xor
dec
push
imul
mov
mov
inc
incl
fwait
lods
shll
ljmp
out
mov
mov
mov
jb
xor
pop
lock
adcl
fld
and
insb
aas
adc
es
lds
jbe
fs
jmp
out
or
push
sbb
mov
add
pusha
lods
cmp
mov
mov
repnz
fcoms
sub
add
fstpl
cs
mov
xchg
cmp
mov
sub
stos
fisttpll
scas
add
dec
jns,pn
fucomip
push
mov
icebp
out
out
xchg
xor
mov
add
mov
pop
xchg
call
scas
mov
adc
daa
fwait
or
movsl
iret
cwtl
dec
leave
xlat
outsb
add
mull
test
push
push
xor
loop
sarl
mov
roll
sub
jp
out
call
mov
xor
icebp
sub
lods
lahf
jno
inc
adc
call
cmc
xchg
and
push
movsb
out
stc
lret
clc
add
jae
adc
in
inc
cmp
les
dec
mov
std
and
push
pop
bound
add
pop
idivl
dec
mov
pop
int
aaa
leave
jae
mov
scas
push
sub
add
push
push
aam
xor
push
sub
pop
push
pop
sbb
adc
into
mov
jl
adc
xchg
push
pop
and
cmp
jbe
adc
adc
push
mov
adc
inc
fbstp
sbb
sbbb
mov
mov
push
rorl
mov
jl
mov
xor
cmpsl
data16
jno
push
mov
cmp
jne
lds
adc
jmp
mov
adc
pop
pop
jns
xchg
jo
or
lcall
repz
cwtl
push
sbb
xor
mov
inc
jg
and
adc
je
xchg
iret
sahf
out
pusha
mov
sub
iret
cmc
sub
cmc
jge
fimull
mov
dec
bound
rclb
insl
or
lahf
aas
in
in
rcll
xchg
mov
mov
outsb
hlt
sub
mov
mov
outsb
ja
jle
sbb
add
std
fisttpl
push
adc
mov
pop
push
push
rorb
sub
clc
pop
pop
imul
vmovapd
inc
lahf
pushf
mov
into
jge
scas
cmp
std
in
jb
vpperm
das
cli
xchg
inc
inc
dec
icebp
pushf
aas
pushf
shll
es
inc
adc
cmp
xchg
inc
pop
in
xor
xor
outsb
push
and
ret
rorb
lcall
jns
xor
push
pop
adc
inc
inc
and
inc
pop
frstor
fistl
xor
jo
pop
mov
jno
jns
adc
rcll
cmp
ss
adc
mov
and
xchg
jo
mov
clc
mov
pop
cli
mov
in
out
sbb
push
arpl
cmp
scas
sub
fmull
add
mov
adc
int
iret
xlat
push
fs
insb
push
stos
cmp
cltd
and
imul
ljmp
pop
jbe
jae
jnp
mov
stos
mov
test
inc
and
mov
mov
aad
stos
add
xchg
fidivrs
dec
pop
xchg
xchg
sahf
aam
aam
pop
push
sub
loope
mov
cs
lea
in
add
mov
and
mov
lret
or
mov
mov
or
and
shr
outsb
mov
push
adc
lea
popa
xchg
fadds
lds
inc
vcvtsi2sd
lret
loop
je
mov
xor
mov
in
js
xor
add
inc
and
std
mov
mov
lcall
repnz
mov
loop
fneni(8087
fisubs
cmp
xchg
rorl
and
inc
sbb
cmp
dec
and
jb
adc
jmp
sbb
stos
mov
aas
arpl
cmc
jg
js
xchg
cmpsl
outsl
mov
add
and
enter
ret
pop
nop
cs
mov
test
mov
dec
insl
mov
imul
loop
cmpsl
mov
out
sbb
mov
in
cltd
push
push
adc
imul
adc
lcall
jnp
add
test
lcall
mov
out
stc
std
sbb
hlt
add
and
mov
dec
xchg
test
cmc
std
and
stos
repz
ljmp
dec
loopne
sbb
jns
ljmp
jne
push
sbb
lods
sub
push
jl
xor
incb
mov
push
ljmp
adc
sbb
cmp
or
mov
adc
jecxz
push
sub
mov
adc
inc
fsubrs
ss
shll
addr16
fcmovnb
sahf
test
out
sbb
sub
ret
dec
lret
aam
pop
test
icebp
daa
sub
adc
cmp
sub
ss
in
dec
xchg
jae
push
sub
or
mov
into
cmp
imul
pop
fcomi
add
push
push
cmp
push
orb
dec
sub
xor
add
pop
adc
pusha
xchg
fsubrl
cmp
imul
mov
popf
lret
repz
cmp
xor
orl
out
lods
std
pop
jle
scas
adc
outsl
mov
clc
cltd
push
cli
ja
push
scas
bound
sbb
pop
add
xor
jb
insl
push
xor
imul
push
les
cmpl
mov
int
mov
ficompl
cld
dec
mov
xor
aad
test
outsb
add
imul
lds
sub
sbb
fstps
and
sub
mov
dec
popa
loope
imul
pop
aaa
sub
pop
add
sbb
sbb
sub
int
mov
out
lock
mov
jge
sbb
inc
cmpsb
jbe
stos
lret
aad
loope
or
push
xchg
jae
pop
lea
pop
popa
push
mov
push
dec
imul
nop
xor
sub
adcb
add
xlat
or
ljmp
push
add
stos
aam
jge
pop
xor
push
fcmovu
jg
ss
jge
xchg
jle
lods
pop
stos
stc
ja
mov
ret
mov
das
xor
subb
inc
aam
sub
push
cld
loopne
lea
mov
out
iret
push
aaa
stos
cmp
clc
enter
jnp
div
sub
loope
insl
push
addr16
in
scas
cmovo
sbb
mov
call
adc
sbb
enter
popf
lea
cwtl
shll
shll
pusha
mov
add
popf
push
ja
fwait
cmp
add
outsl
xor
mov
mov
jge
xor
dec
lret
pop
cmc
js
cmp
and
rcr
scas
pop
cmpsl
aam
into
addb
jns
jecxz
inc
jmp
mov
mov
fnsave
rol
imul
fcos
push
and
pop
dec
cmp
xor
add
mov
or
mov
mov
mov
sti
rclb
in
lret
ja
stc
mov
imul
sbb
push
and
sbb
aad
push
cmc
or
pusha
or
cwtl
sub
sbb
lea
jns
sub
xchg
jae
dec
sub
fnstenv
sbb
repnz
xorl
xor
imul
pusha
scas
stos
repnz
sbb
pop
nop
mov
insb
jne
xchg
in
cmp
aas
pop
imul
lahf
xor
mov
out
fidivrs
pop
jbe
ss
pop
rolb
shlb
scas
and
mov
sbb
xchg
int3
adc
shll
dec
push
adc
and
cli
test
lds
inc
cmpsl
les
jb
sbb
pop
push
xchg
daa
cmp
sahf
sahf
sahf
adc
mov
int
cli
aam
or
sub
or
insl
outsl
inc
lahf
inc
test
or
adc
and
adc
sahf
or
sbb
mov
scas
cmp
movsl
inc
mov
mov
push
jecxz
xchg
lea
or
stos
dec
popa
scas
cld
or
xchg
xor
sbb
lret
lahf
arpl
dec
stos
movsl
push
mov
xor
loopne
jle
imul
cmp
loope
jo
xor
frstors
fsubrs
or
lret
leave
jno
shrl
cltd
imul
sub
mov
ret
cmpsl
lods
xlat
jns
sbb
jecxz
inc
gs
in
daa
inc
mov
add
cltd
jae
mov
fldcw
int3
imul
ror
gs
ljmp
jecxz
cwtl
fidivs
xlat
inc
push
icebp
fisttps
das
xor
rcrb
sbbb
lds
int
gs
push
loopne
xchg
stos
mov
pop
add
dec
or
out
pop
cmp
sbb
lret
fstps
adc
sub
popf
cmp
dec
out
push
inc
xchg
mov
in
scas
jnp
sti
dec
fstl
and
adc
adcl
pop
out
xor
icebp
bnd
mov
cmp
dec
ss
xchg
cmp
jp
adc
pushf
push
fdivs
pop
xor
mov
inc
push
mov
dec
sar
test
xor
test
sbb
mov
js
cmpl
cli
and
and
cmp
cmp
movsl
sbb
mov
mov
fisubs
ljmp
and
push
mov
sbb
pop
or
ljmp
bound
jle
mov
pusha
aaa
mov
test
sub
push
movsl
ds
sbb
repz
pop
adc
adcb
inc
inc
sbb
sub
repz
sti
insl
mov
push
popa
jne
sub
dec
into
aad
inc
gs
mov
lds
out
stos
mov
xor
ret
xor
sub
push
push
or
das
mov
jp
inc
loope
inc
mov
test
out
inc
fldcw
sbb
pop
mov
outsl
lea
cmp
fcoms
fsubl
push
lret
pusha
dec
fld
dec
lds
cs
cmp
cmp
push
mov
lret
add
cmp
fdivs
int3
ss
loop
stos
cld
roll
push
jb
jne
push
clc
lock
cs
std
and
adc
lret
push
rep
inc
das
mov
jl
repnz
or
pop
ss
sub
cmp
cli
push
inc
xlat
pop
mov
iret
sbb
sbb
mov
mov
mov
and
jmp
add
sub
mov
inc
lret
fadds
pop
movsl
or
ja
inc
dec
ljmp
cmpsl
lock
lahf
out
sbb
mov
test
mov
lock
push
mov
mov
mov
scas
mov
dec
dec
mov
in
mov
xlat
mov
or
jno
dec
pop
sub
out
jmp
lock
mov
adc
imul
les
mov
out
cltd
outsl
out
jmp
or
mov
dec
je
mov
jne
mov
push
jns
fsubs
int
out
sbb
mov
pop
fists
mov
push
in
add
aas
lds
mov
in
add
test
add
adc
mov
dec
jecxz
sti
testb
sbb
dec
adc
mov
mov
sbb
repz
xchg
cwtl
aas
movsl
pop
rcrl
sub
jg
mov
or
push
out
das
int
test
mov
sub
jmp
mov
std
inc
test
out
pop
push
mov
add
sbb
and
push
stos
rcrl
push
into
jnp
jmp
inc
gs
cmp
xchg
outsb
arpl
xlat
test
aaa
cmpsb
push
lret
ja
or
fs
xchg
inc
xchg
pop
jmp
inc
jmp
push
jns
test
icebp
in
or
lods
fdivs
out
jae
xor
out
or
mov
xor
ret
divl
adc
and
mov
data16
sub
jbe
xchg
frndint
jae
cltd
hlt
cltd
cmpsb
stos
inc
and
mov
xchg
mov
mov
inc
push
iret
xlat
or
jns
jl
mov
inc
sbb
inc
insb
or
in
pop
sub
or
dec
pop
mov
testl
aaa
xchg
jp
mov
cmp
scas
dec
pushf
cs
mull
pushf
pop
cmpsb
fildll
cmp
imul
fildll
xchg
aam
inc
dec
pop
rcrl
mov
adc
sbb
push
roll
mov
push
loop
in
mov
out
fs
in
stos
shrb
sub
ret
pushf
pop
ret
fistpl
loop
push
leave
nop
push
dec
xor
ljmp
dec
or
mov
xchg
inc
div
mov
cmp
xchg
sub
sbb
add
out
and
jecxz
mov
sbb
mov
xor
aaa
insl
movsl
cmp
xor
cwtl
fisttpl
fdivr
or
mov
cmp
and
dec
and
icebp
mov
insl
emms
xchg
ja
dec
jp
push
xor
rcll
adc
mov
and
jno
scas
add
jle
cmp
lcall
mov
xor
clc
popa
mov
out
daa
mov
cs
lock
mov
nop
cmp
movsl
scas
sbb
xchg
sbb
sbb
adc
jmp
dec
movsl
jae
push
or
addr16
add
mov
lret
cltd
leave
adc
iret
loopne
pop
and
divb
xorl
call
jne
add
mov
mov
jns
xchg
hlt
adc
jl
test
mov
cld
or
or
imul
xor
mov
fdiv
or
xlat
push
fstpt
jae
mov
imul
jbe
sub
test
and
pop
xor
mov
imul
jns
mov
loope
mov
mov
mov
sbb
mov
or
cmp
hlt
stos
and
cmp
or
sub
jp
dec
lea
ss
xchg
xor
mov
cmp
pop
push
in
and
fcom
mov
and
mov
dec
in
inc
or
icebp
xchg
mov
sub
xchg
enter
movsl
mov
mov
mov
aas
jbe
cltd
xchg
jmp
inc
dec
callw
cmpsl
xchg
inc
xchg
testl
icebp
push
loop
push
xor
test
mov
mov
imul
xor
sub
out
inc
xor
outsl
jl
scas
sbb
ret
jle
iret
push
mov
sbb
dec
jne
sbb
sub
je
mov
lret
rcrl
jp
jmp
xor
dec
imul
cmovo
enter
sbb
in
shrl
cs
xchg
inc
stos
ds
sbb
add
mov
cmp
pushf
and
test
loope
fs
pusha
das
fisubrl
push
les
test
mov
sbb
ss
jl
or
repz
ljmp
bound
roll
cs
pop
xchg
fwait
fs
cmpsl
cltd
or
rorb
loopne
jl
or
mov
out
in
nop
push
mov
adc
lret
push
push
cwtl
xor
insb
jg
adc
push
mov
inc
lods
in
sti
push
jle
insl
cmpsl
fsts
out
mov
push
jle
outsb
lock
in
pop
sub
dec
jl
xor
out
cld
lock
je
cmp
fiadds
or
pop
pop
pop
int
inc
scas
iret
orl
imul
and
test
cmp
div
pop
mov
add
sbb
pop
int3
xchg
repz
lea
shlb
push
cmpsb
les
and
in
inc
push
cmpb
mov
jae
loop
jecxz
aad
mov
cmp
and
inc
mov
cmpsb
into
rorb
or
cmp
pop
fidivs
mov
sub
jbe
ror
push
push
push
xchg
dec
enter
push
dec
mov
sbb
mulb
gs
dec
pop
movsl
push
xchg
fildl
imul
push
and
jo
out
adc
ljmp
adc
push
inc
stos
mov
or
jbe
xor
mov
cmp
sub
fsub
scas
dec
movsl
or
xchg
and
mov
mov
loopne
pop
and
aad
jge
dec
mov
shrb
or
mov
scas
pop
xchg
xchg
pop
ficoml
lcall
add
cmp
repnz
jp
mov
inc
sbb
addb
popf
cmp
sbbl
jne
xor
lods
pop
scas
test
mov
pop
xor
push
push
mov
mov
inc
iret
iret
jb
lret
push
cmc
fiaddl
mov
sahf
pop
mov
jae
sub
jp
sub
and
lock
mov
mov
in
hlt
into
pop
dec
ljmp
outsw
dec
add
adc
fs
sahf
dec
cltd
lds
and
fmull
push
cmp
out
sahf
cmp
mov
inc
sbb
ss
adc
sub
mov
mov
loopne
cmpsl
mov
ja
dec
sub
outsl
mull
je
jns
and
andl
ss
shlb
inc
push
pop
sbb
pop
or
jno
sub
pop
sbb
jae
mov
pop
and
stos
lds
mov
leave
pop
ljmp
lds
jbe
nop
arpl
sub
je
inc
jmp
nop
mov
pop
mov
int3
out
mov
or
adc
inc
pop
out
add
cmpsl
icebp
mov
or
adc
iret
pop
in
xchg
xchg
inc
fldenv
clc
xor
outsb
repnz
jns
jb
fbld
fidivs
lcall
dec
negl
adc
cmp
fmull
pop
aad
cmc
test
xchg
in
stc
inc
scas
sbb
ljmp
push
and
loop
pop
cmpsl
lahf
lock
pop
aaa
cmp
mov
lods
movl
inc
hlt
xor
movsb
or
mov
lahf
cld
xchg
xchg
dec
imul
or
cmp
jae
icebp
test
movsl
lret
add
xor
adc
in
or
mov
repnz
pop
scas
scas
xchg
bound
je
cs
sbb
sti
pop
scas
dec
push
cwtl
xchg
jo
mov
repz
ret
sub
mov
dec
xchg
mov
push
jae
mov
inc
and
jecxz
shlb
outsb
test
movsl
movhps
inc
and
sub
aaa
in
in
jne
jae
dec
ret
ds
std
jbe
imul
popa
jbe
sahf
imul
lcall
sub
test
std
shl
je
or
mov
aas
xor
loop
movsl
cmc
dec
adc
sub
pop
fldl
lds
pop
jae
adc
mov
lds
jae
and
add
dec
lahf
arpl
jmp
dec
xchg
mov
shll
lea
xchg
daa
imul
ljmp
aas
fbld
aas
addr16
int
jmp
stc
std
and
jbe
test
call
arpl
cs
mov
imul
pop
xchg
sarl
aaa
les
pop
test
add
shll
sub
cmp
in
inc
mov
cmp
fldt
loopne
fisubs
dec
pop
mov
dec
iret
int
add
pop
push
je
jne
push
mov
aad
push
call
data16
leave
sub
mov
add
ret
mov
aad
fidivs
fisubrs
xchg
or
or
or
pop
push
outsb
pop
adc
push
sarl
aad
cmp
pop
adc
cmpsl
add
stc
das
pop
adc
out
pop
cmp
cltd
cmp
mov
push
xor
test
and
les
stos
mov
xor
add
lock
xlat
xchg
pcmpeqd
leave
push
inc
sbb
psllw
dec
lea
cltd
addr16
repz
stos
sbb
cmp
int3
das
out
or
add
cmpsb
fcomps
call
into
orb
fstpl
and
and
subl
jo
xchg
popf
mov
rcr
repz
jno
repz
or
or
call
ret
push
inc
or
xor
in
call
mov
inc
mov
insb
pop
les
call
mov
jmp
sub
mov
loope
cs
xchg
pop
jmp
out
jo
repnz
mov
add
mov
push
inc
flds
sahf
addl
pop
mov
pop
mov
xor
jo
movsl
loop
or
mov
inc
push
sbb
aaa
xor
mov
pop
xchg
jl
sbb
fdivr
and
scas
jb
iret
in
pop
adc
jnp
pop
pop
pop
mov
out
jg
mov
lret
push
pop
lods
fdivrs
xor
mov
shrb
fprem1
ljmp
insb
ljmp
int3
outsb
in
add
push
not
sub
lock
cmp
inc
jecxz
outsb
and
pop
push
pusha
cld
xchg
lock
in
mov
mov
sbb
and
into
out
cli
outsb
push
xchg
outsl
xlat
sahf
pop
cmp
mov
push
shlb
add
jae
out
insb
jo
pop
pop
in
sbb
mov
xor
xchg
push
xchg
add
jns
mov
push
cmp
std
adc
pusha
sub
push
scas
and
daa
dec
dec
push
arpl
repnz
jmp
leave
popf
push
das
int
pop
test
sub
pop
xchg
inc
mov
fsubrl
es
sub
js
sbb
loope
xchg
icebp
jp
jae
mov
and
popf
in
mov
mov
push
int
dec
out
pop
scas
push
push
mov
pop
or
mov
test
adc
mov
pop
dec
cli
mov
test
aas
dec
js
xor
lods
inc
jle
mov
jg
pusha
outsl
cmp
cmpsb
shlb
and
dec
jle
push
mov
mov
adc
mov
add
jecxz
xlat
scas
or
dec
frstor
mov
repnz
das
movsl
movsl
loop
fsubs
es
lcall
imul
subb
xchg
imul
in
inc
mov
outsb
mov
or
push
leave
into
into
pop
ret
and
jae
adc
pop
and
das
or
xor
jbe
es
insl
xor
pop
sub
push
mov
or
or
add
pop
xchg
das
rcr
sbb
shr
fdivrl
sbb
mov
jno
fisttpl
dec
aad
in
dec
data16
adc
dec
lcall
ret
inc
lock
cmp
fs
imul
pop
rorb
fcompl
shll
ret
shl
out
ret
in
jg
pop
or
mov
and
stos
out
add
stos
aaa
xor
outsl
test
jecxz
mov
or
sub
test
cmp
add
loope
es
push
fisubl
in
add
push
add
test
test
mov
jmp
jnp
inc
adc
aaa
xor
xor
mov
adc
sub
adc
scas
adc
inc
xchg
xchg
outsb
xchg
leave
jb
lods
push
cmpsl
xor
sub
ret
inc
sbb
and
add
jmp
into
or
mov
push
jne
es
pushf
mov
orb
adc
lock
fldenv
out
xchg
push
xor
ja
lahf
stc
add
sub
lods
mov
scas
dec
add
or
xchg
scas
or
or
jle
ja
rcrl
jno
into
int
mov
adc
dec
ret
jmp
push
ret
or
nop
hlt
fistpl
adc
faddp
or
mov
sbb
xchg
cld
jge
inc
pusha
sbb
or
iret
mov
lahf
imul
nop
inc
shll
or
std
rcrb
dec
aas
adc
mov
popa
pop
or
push
dec
xchg
pop
roll
call
xor
call
pushf
std
aas
lea
jle
loop
out
insb
mov
mov
addl
lds
test
les
xlat
cmp
fistpl
jne
sub
orb
pop
movsl
insb
xor
ret
insb
repnz
add
movsb
push
lods
rorl
or
fistps
popf
xchg
add
neg
adc
fnstsw
mov
xorl
popa
sysret
and
mov
stos
adc
push
movb
subb
cmp
and
mov
mov
shlb
fdivs
je
mov
popf
jge
add
lcall
xor
mov
movsb
push
loop
loope
push
cmp
bound
test
add
mov
lods
push
or
jno
jmp
jp
movsl
cli
aas
shlb
sub
js
push
add
loope
rcrb
cmpsl
fdivrl
je
repz
sbb
in
negl
add
push
int
xchg
out
jo
mov
xchg
mov
stos
arpl
ficompl
stos
xor
lahf
pop
cli
dec
mov
cmp
data16
ret
push
je
or
sub
enter
jns
push
loopne
mov
cmp
lock
cmc
push
movsb
pop
shll
fisubrs
faddl
sbb
aas
stos
cld
test
pushl
std
mov
mov
loopew
dec
pause
pop
xchg
mov
mov
jge
ret
xorb
loopne
aad
xor
lcall
stc
add
fdivs
cwtl
jecxz
add
or
mov
jo
and
movsl
dec
fsubl
jecxz
xchg
sub
mov
jl
aam
std
outsl
sub
sub
testb
or
mov
cld
dec
mov
add
repz
dec
cli
test
mov
mov
lahf
and
inc
mov
mov
fmulp
shrb
jge
aaa
lods
repz
sub
lds
lahf
aam
cld
inc
or
mov
push
test
adc
rcll
roll
mov
repnz
fstpl
mov
jecxz
inc
xlat
pop
fstps
mov
stos
cmpsb
pop
push
faddl
mov
lidtl
rolb
cmpsb
push
aam
test
stos
sub
fldenv
jp
or
jbe
push
les
jo
movsb
idivl
lcall
adc
fcoms
lret
les
std
pop
dec
mov
inc
mov
jae
gs
popf
fisubrs
sarb
adc
int
int3
subb
shrb
xor
push
popf
into
push
jae
test
xor
pusha
lret
les
fdivrl
ljmp
mov
std
mov
stc
ret
ja
popa
sti
inc
dec
cmp
pop
xchg
out
mov
push
add
outsl
in
es
jne
xor
pop
addb
mov
push
mov
xor
stos
aad
ss
test
and
inc
pop
movsb
add
insb
test
ss
imul
movsb
add
out
pop
ss
shl
cwtl
mov
adc
lods
and
xor
cltd
fldcw
jl
mov
arpl
es
or
or
aas
repnz
stos
shll
cmp
cmp
dec
xor
or
into
lret
inc
jbe
jge
mov
test
aaa
xchg
shl
push
shll
dec
fbld
aam
and
sub
or
test
jno
mov
xchg
xor
cmp
push
xchg
movsl
gs
cmp
jne
fimuls
mov
mov
jbe
xor
rcl
mov
dec
dec
stc
mov
stos
xor
mov
ror
cmp
sub
adcb
lods
insl
add
and
push
push
jb
xor
cs
xor
rorl
cmp
sahf
xchg
aam
lret
xor
rcr
add
test
add
xlat
mov
cli
push
imul
lods
add
popf
add
pop
test
movsl
les
xchg
push
jp
push
jb
ret
mov
add
dec
ljmp
mov
dec
add
sub
push
xor
jno
clc
insb
adc
add
add
add
ljmp
into
mov
mov
arpl
xor
add
mov
outsb
mov
push
and
es
inc
xlat
stos
loopne
shlb
in
pop
sbb
mov
repnz
xor
mov
xchg
cwtl
mov
jmp
dec
repnz
jne
lret
pop
insl
xchg
or
add
sbb
sub
imul
sub
pop
pop
mov
and
pop
mov
stos
rcrb
sahf
out
int3
mov
push
out
xchg
mov
loopne
pop
fdivrl
stc
dec
jbe
jbe
outsl
cmp
inc
popa
shr
cmp
mov
sbb
jne
stos
int
pop
adc
xchg
lds
stos
test
lods
ret
in
jl
fstpt
or
rorl
cmp
sbb
and
movsl
test
cmp
cmp
enter
or
push
in
dec
enter
cld
push
iret
push
add
dec
mov
xor
subb
leave
fnstsw
jae
aam
fnstcw
lock
data16
stos
out
std
pop
and
or
mov
and
repz
aad
dec
pop
mov
lret
in
sub
pop
pop
cmp
dec
adc
add
es
pop
outsl
scas
iret
loop
adcl
pusha
fstl
xor
xchg
and
ja
imul
insb
cmp
addr16
or
or
push
jne
aad
dec
js
jecxz
mov
lret
xchg
stos
outsb
out
xor
stos
xor
into
mov
push
rcll
loope
push
loope
sbb
dec
and
nop
pop
cld
jge
bound
mov
mov
mov
cltd
mov
dec
stc
cmpps
jb
inc
jno
in
push
jge
loopne
divb
xchg
subl
cmpsb
sahf
adc
mov
dec
lea
andl
push
jb
insl
jle
aad
mov
stos
lcall
sbbl
loop
fdivrp
adc
lods
fstpt
pop
and
sub
or
movsl
imul
mov
lcall
push
inc
imul
in
adc
sbb
lock
repz
outsl
pop
jns
stc
adc
repz
mov
sti
mov
lret
lds
gs
xor
cmpsl
push
and
pop
mov
dec
cmp
push
ds
mov
jge
test
xor
push
lret
xor
xor
insl
mov
bound
jmp
sbb
dec
int
cmp
pushf
mov
int
test
and
dec
addl
stos
icebp
fs
stos
dec
daa
and
mov
dec
xchg
je
dec
ja
popa
rorb
lock
lock
sub
mov
outsl
cmpsb
adc
test
add
cmpb
lcall
lcall
jbe
stos
divl
ss
jae
adc
call
push
or
mov
mov
aad
push
out
inc
into
push
adc
sub
cltd
lret
ljmp
xchg
xchg
in
sbb
lds
xchg
adc
sbb
test
jnp
pop
test
outsl
lds
hlt
outsl
enter
jmp
lds
inc
cld
aad
fcoms
adcl
test
push
std
push
stos
mov
adc
push
test
pop
cmp
inc
sti
or
jg
les
jno
std
jmp
push
pop
adcl
adc
mov
inc
jp
ds
icebp
aaa
in
cs
insb
arpl
mov
jmp
sub
cmp
xchg
lds
mov
pusha
push
out
cs
in
in
inc
fildl
out
fs
in
inc
dec
and
mov
std
scas
mov
cli
js
inc
repnz
dec
and
fbstp
in
xor
mov
cmp
mov
xchg
mov
dec
shl
aad
insb
inc
jnp
sbb
sarb
pop
test
ja
add
inc
mov
pop
rcll
cld
xor
pop
test
mov
in
cmpsl
jo
addl
sti
shrl
push
mov
and
pop
mov
shll
sub
push
jnp
movsl
sbb
xchg
cmp
dec
mov
mov
repz
cwtl
fld
std
int3
cmpsl
dec
push
cli
pop
dec
cs
and
jns
cs
movsb
push
ret
dec
cmp
jl
add
in
sti
push
xchg
ljmp
cmp
loopne
jg
push
loope
clc
xchg
and
add
cmp
jo
push
dec
push
pop
lahf
cli
sub
mov
push
mov
cli
xchg
daa
insl
inc
movsb
rolb
in
sbb
mov
movsb
call
imul
mov
lcall
rcrl
push
mov
mov
ljmp
and
aaa
test
push
jne
imul
cmp
mov
push
subl
xchg
xor
out
loop
inc
test
gs
pop
gs
dec
fcom
aas
outsl
gs
or
test
mov
lods
xchg
add
xchg
push
jnp
in
and
dec
ret
jge
shlb
or
adc
pushf
push
mov
push
xlat
ret
sub
fsub
cmp
xchg
dec
mov
and
add
clc
push
test
and
push
adc
lea
inc
mov
lahf
out
cwtl
pop
rorl
xchg
pusha
lds
push
mov
cmpsb
fdiv
push
std
sbb
xor
pop
xor
inc
or
mov
mov
arpl
xchg
sarb
int3
push
decl
in
fucomi
adc
dec
or
sbb
js
xchg
cmp
mov
fistpl
test
mov
adc
imul
cmp
jb
mov
xor
cmpl
pop
addr16
les
jg
call
push
mov
pop
and
add
test
or
dec
lock
xchg
mov
add
dec
xchg
sbb
push
adc
jmp
mov
fdivrl
pop
adc
les
inc
cmp
or
xchg
lods
push
lock
pop
jecxz
out
cwtl
xor
stos
lcall
jg
scas
dec
push
lea
arpl
ds
mov
push
xor
dec
movsb
inc
cmc
pop
xchg
jne
jmp
negb
orb
mov
popf
cmp
push
pop
dec
loope
hlt
and
jns
xchg
call
push
xchg
jg
adc
xchg
and
aaa
ja
push
cmpsl
dec
mov
sahf
sbb
xor
pop
outsl
movsbl
call
hlt
movsl
arpl
pusha
adc
mov
mov
inc
repz
cmp
ret
mov
add
roll
mov
fdivrl
xchg
push
sbb
data16
ljmp
scas
xor
cmp
pop
push
fcmovb
mov
adc
lahf
leave
fwait
push
lcall
push
rorb
outsl
imul
sbb
jnp
cmpsl
test
or
xor
mov
dec
pop
mov
jae
push
out
loop
inc
aam
dec
push
xor
pop
or
cmp
push
and
cwtl
cmc
popa
rorl
aad
inc
xor
or
js
xchg
dec
rcll
aaa
push
mov
imul
mull
hlt
add
pop
adc
ljmp
aad
mov
je
into
xchg
testl
lock
push
add
testb
cltd
in
dec
mov
dec
je
mov
out
add
cmc
stos
mov
test
adc
pop
and
xor
adc
mov
mov
xchg
adc
mov
xchg
cmp
ret
lahf
xor
sub
cmp
loope
loope
or
aam
jge
jae
pop
pop
push
lahf
jl
cmp
mov
xorl
ss
es
in
mov
jp
nop
push
or
and
pop
pop
mov
mov
jle
cmpsb
scas
in
scas
push
dec
loop
adc
inc
inc
neg
mov
out
dec
lret
je
pusha
repz
mov
int3
ficoms
in
jg
test
out
aam
movsb
dec
mov
daa
sbb
pop
push
imul
mov
mov
scas
nop
and
dec
sub
add
pop
sub
mov
imul
jb
push
adc
aad
or
jne
push
sbb
pop
cmp
stc
dec
cmc
mov
add
fdivrl
in
or
push
push
or
movb
lods
sbb
notb
sub
mov
arpl
mov
int
sub
push
insb
test
mov
sbb
jmp
xchg
popa
xchg
jb
inc
mov
pop
xor
cmc
jmp
cld
mov
lahf
outsl
and
sbb
out
mov
mov
jmp
popa
inc
arpl
loop
lea
mov
sbb
cmpsb
dec
idivl
sub
mov
dec
mov
push
movb
or
adc
dec
and
stc
cmpsb
jnp
and
movd
out
adc
cmpsl
xchg
inc
not
es
or
rcrb
ss
mov
push
jnp
lock
loop
adc
inc
xor
cmpb
incb
hlt
xchg
adc
pop
push
addr16
cmpsb
mov
pop
mov
xchg
push
add
ja
and
icebp
popl
insb
mov
cmp
or
pop
clc
fdivl
test
mov
insl
mov
pop
jg
push
nop
push
gs
jnp
pop
rol
xchg
lds
or
mov
int3
mov
pop
mov
sub
push
test
jae
xlat
out
ss
ret
popf
and
mov
xlat
insl
sub
stc
sbb
jns
pop
lods
inc
cmc
xor
int3
add
dec
mov
stos
test
andl
push
cwtl
mov
sti
mov
dec
sbb
mov
and
in
mov
cmp
push
xchg
shrb
cmp
mov
inc
test
stos
jge
idivb
out
shrb
sub
loope
in
pop
mov
in
lock
fidivs
xor
sub
pop
test
adc
in
inc
dec
sahf
xor
xchg
push
push
cmp
fisttpl
xchg
ret
fs
mov
lret
pop
push
ss
jge
outsl
sub
sbb
pushf
pop
sub
xor
sub
flds
jl
or
sub
mov
xchg
dec
mov
sahf
mov
out
jo
fs
std
jge
in
hlt
jmp
repz
mov
adc
fistps
push
mov
pop
cli
mov
les
out
xor
xor
aad
pop
fnstsw
dec
loop
or
inc
test
add
xor
inc
mov
fadd
ds
push
push
aam
push
xchg
std
rcrl
push
mov
lods
inc
adc
sarb
pop
dec
add
loop
data16
mov
xlat
popa
movsb
mov
aas
xchg
mov
sub
push
pusha
popl
push
and
sbbb
test
xor
xchg
and
fmull
adc
dec
xchg
push
jle
dec
and
and
leave
mov
jmp
cmp
outsl
adc
push
enter
loope
xchg
mov
jne
das
pop
std
mov
cli
ffree
imul
negb
sub
adc
add
inc
mov
push
arpl
rcrl
inc
jne
adc
xchg
bound
adc
popf
lea
mov
jge
adc
ljmp
lret
hlt
sub
xor
xchg
xchg
addr16
test
jo
jo
out
jl
fidivrs
dec
mov
adc
out
in
iret
mov
mov
cmp
inc
sbb
xlat
and
mov
push
lea
cmp
repz
cmp
add
sbb
jnp
aaa
std
sbb
cmc
repnz
popf
cmp
pop
in
sbb
cltd
das
loop
arpl
lcall
in
jb
int
or
in
imul
xlat
xchg
test
outsb
dec
or
aaa
and
push
out
adc
and
sbb
mov
loopne
or
roll
stos
push
inc
add
inc
adc
jmp
dec
cmp
daa
xor
dec
scas
push
inc
inc
push
cmp
ja
pop
mov
cmp
mov
mov
lock
shl
aam
mov
jbe
and
sub
lock
lock
out
push
lods
test
pop
push
pop
cltd
sbb
pushf
test
and
xor
xchg
dec
lret
push
xlat
cld
in
jmp
sarl
popa
sbb
or
mov
rcrb
stos
movsb
cld
jno
fnstcw
adc
inc
push
lret
add
pop
dec
jne
shl
add
xchg
and
shld
push
mov
mov
mov
mov
mov
and
jb
sub
popa
int
clc
or
scas
dec
test
movsb
ja
jo
xchg
int
lock
ds
clc
and
push
push
shrl
inc
gs
roll
into
pushf
dec
fnsave
movsb
lahf
outsb
notl
cmc
mov
ja
sbb
sbb
in
shrl
aad
mov
sbb
cmp
dec
dec
and
pop
jno
xor
cli
test
out
adc
lcall
cmp
cmp
loopne
mov
lret
dec
sub
inc
push
rcrl
mov
roll
xchg
lods
mov
add
test
loope
jecxz
jl
jno
mov
mov
divb
sub
dec
aaa
cmp
ja
mov
push
mov
pop
jno
jae
daa
in
sub
scas
rorb
xchg
daa
or
dec
sbb
xchg
ds
adc
popa
aaa
xchg
inc
fistps
hlt
in
inc
imul
lcall
adc
and
mov
pop
or
jle
sub
inc
and
mull
aam
shll
cmp
inc
pop
lods
xchg
mov
cmp
pop
xchg
movsl
jl
aad
dec
shrl
pop
sbb
xor
push
test
sub
or
out
pop
sbb
jg,pt
jns
mov
inc
lret
xchg
out
iret
push
or
dec
leave
jnp
cmp
sarb
ds
xchg
cmp
mov
and
gs
xor
cmp
sar
fmull
mov
sbb
std
icebp
xchg
jg
push
ds
mov
sub
in
inc
in
sbb
jg
int
cmc
add
dec
pop
sti
xchg
inc
addps
repz
cmp
outsb
loope
push
cmovae
shrl
cmp
ficomps
repnz
cmpsl
cmpsl
rcll
add
call
inc
adc
outsl
add
mov
lea
sti
fldcw
jg
inc
repnz
sarb
jbe
out
xor
cmc
repz
outsl
pop
add
repnz
in
xor
leave
in
or
in
cmpsl
jmp
cmp
inc
and
add
fcompl
aad
into
mov
bound
and
aad
xchg
pusha
shlb
nop
mov
cmp
test
pop
fwait
pushf
pop
jns
repnz
push
fisttpl
cltd
xchg
roll
fdivp
fcomi
fldt
in
adc
cmpsl
pop
scas
mov
mov
lods
push
jge
lds
inc
scas
scas
cmpsl
adc
ja
push
or
lcall
subb
adc
and
push
addr16
cltd
jns
jmp
inc
and
inc
fs
xor
mov
mov
in
bound
inc
mov
sti
push
xor
mov
rol
arpl
jecxz
out
mov
je
sarl
lock
out
int3
push
lcall
ss
push
nopl
sbb
nop
xor
adc
andl
dec
mov
cmp
adc
int3
mov
push
loopne
sar
jl
in
mov
dec
adc
inc
mov
scas
aam
and
sbb
xor
dec
pop
stos
mov
dec
out
xchg
scas
gs
mov
sbb
icebp
fsubrp
gs
aam
mov
out
popa
xor
je
adc
popf
lods
clc
adc
test
mov
xchg
add
ljmp
jg
addb
dec
loope
push
outsb
xchg
xor
push
inc
and
mov
popa
movsl
cwtl
shlb
mov
and
cmp
stc
xchg
inc
rcrl
adc
sub
sbb
jne
cmp
iret
in
sbb
mov
cmp
outsb
movsb
add
sub
popf
jp
data16
call
push
imul
fwait
and
jo
inc
loop
lods
add
mov
mov
or
sti
xchg
gs
xchg
push
cmpsb
shr
fidivrl
movl
in
cltd
pop
cwtl
mov
mov
and
mov
sarb
inc
popa
popa
out
jle
loopne
into
punpckhbw
jmp
mov
lcall
inc
push
hlt
sti
add
scas
add
mov
jo
cmp
ljmp
pop
xor
cs
sbbl
dec
cmp
push
pop
stos
pop
lret
aas
fdivrs
sbbb
fidivl
pop
cmp
mov
or
gs
mov
sub
dec
insl
fdivr
das
cmp
cltd
and
lock
jmp
or
sti
sbb
nop
dec
dec
mov
jle
popf
mov
stos
notb
mov
outsl
cmpsb
and
sub
ja
inc
jne
pop
sti
sti
xor
idivl
cli
cmp
test
mov
aad
ljmp
jno
cmp
bound
cmp
cmp
and
jb
mov
mov
call
stos
pop
mov
mov
cmpsl
sub
cmova
lret
mov
cmp
xchg
mov
fdivr
mov
xor
fisttpl
push
push
cmp
mov
andl
mov
xchg
mov
xor
dec
jns
addb
adc
clc
xor
cmc
ror
adc
jle
or
gs
icebp
fdivl
icebp
ret
std
xor
div
push
dec
int3
inc
add
rcrl
jp
int
pop
movsl
xor
dec
dec
sub
or
jno
ret
adc
push
arpl
lock
stc
push
leave
roll
dec
sbbl
jns
aad
xchg
add
mov
xchg
mov
or
shrl
ja
pusha
test
pop
ficoms
sti
push
xor
mov
clc
je
int3
pop
sbb
inc
into
xor
lods
dec
mov
add
mov
shlb
mov
repz
cltd
mov
scas
xchg
pop
dec
cmp
mov
mov
callw
sti
pop
lds
mov
cmp
pop
arpl
clc
repz
dec
clc
loopne
mov
iret
inc
xchg
adc
stos
jne
and
iret
push
stc
adc
loopne
add
cld
jne
adc
push
cli
sub
mov
loopne
sbb
and
pop
ss
mov
and
movsb
or
sbbb
pushf
lret
fisttpll
fsubr
jbe
sub
lret
sub
pop
aas
scas
cmpsb
es
dec
shr
leave
mov
movsb
fcompl
imul
outsl
xor
push
pusha
pop
sub
push
cmp
sub
int
pop
pop
xorb
sub
cmp
jno
mov
stos
outsb
in
mov
popf
fildll
add
and
mov
sbb
xor
jns
xchg
push
inc
dec
cmpsl
addl
and
ljmp
sti
cmpsb
and
orb
iret
fs
add
movsb
stc
dec
sub
je
jg
dec
xchg
add
adc
dec
psllq
out
cmp
sti
int
or
pop
fistpl
movsl
mov
inc
inc
push
inc
testb
pop
loop
jge
sbb
cwtl
mov
jg
mov
or
mov
jge
orl
mov
jae
fdivrl
arpl
dec
loopne
clc
fucomi
or
inc
xchg
mov
sub
test
push
movb
xorl
mov
xor
push
push
fwait
xchg
les
mov
jp
int
test
fmuls
xchg
pop
sbbb
cmc
test
shrb
sub
inc
jae
mov
dec
cmp
fldl
cwtl
adc
pop
dec
clc
sub
movsb
movsl
cmc
scas
sbb
and
data16
outsb
out
cmp
mov
movsb
sti
lods
push
bound
mov
test
xlat
js
dec
cld
push
inc
mov
stc
or
xlat
imul
fcoml
xor
popa
pusha
cmp
leave
shll
fcomi
out
xor
shlb
out
mov
fnstsw
jge
scas
mov
adc
push
dec
imul
sbb
jno
outsl
in
leave
insl
add
js
mov
dec
rcll
int
push
jae
addr16
shlb
jbe
jae
jnp
int
cmp
leave
add
push
xchg
mov
popa
jno
xor
push
repnz
sub
leave
mov
inc
and
stos
clc
sarb
movsl
cli
and
sub
lahf
arpl
or
insl
scas
mov
aam
arpl
icebp
pushf
add
arpl
xchg
cmc
xchg
aam
pop
loope
lods
sbb
jne
lds
or
and
add
jg
movsb
or
flds
pop
ss
mov
call
inc
xchg
push
movsb
mov
aaa
add
es
out
imull
cmp
lahf
xchg
shlb
ret
cs
add
imul
xchg
lret
cli
in
sub
out
sub
xor
arpl
pushf
lods
xor
test
insb
loop
jmp
push
jne
cmp
jp
repnz
lods
in
int
or
insb
neg
xchg
stc
add
pop
scas
in
mov
mov
sti
push
aad
aam
test
push
inc
cmp
inc
adc
sbb
push
lock
sbb
pop
jns
enter
leave
adc
insl
test
in
sub
sbb
dec
or
in
pop
test
jo
cmpsl
movsl
subl
xchg
nop
popa
mov
lock
sbb
fisttpl
imul
lcall
xorl
dec
cmpsb
imul
push
mov
inc
aam
xor
pop
xchg
add
lahf
and
xor
mov
mov
test
shl
push
cmp
lods
jb
aad
aaa
xchg
mov
mov
shlb
outsl
mov
loope
jnp
pop
bnd
sub
jle
and
aam
and
pop
push
mov
jge
test
lret
repnz
cli
cmp
mov
hlt
pop
fcmovb
outsb
loop
aaa
loopne
xchg
jae
jmp
dec
xchg
cltd
sub
inc
pop
fucom
pop
cltd
xor
add
aas
sub
xor
jae
mov
push
cmp
imulb
mov
into
mov
cwtl
testb
cwtl
adc
cmp
jg
dec
fs
push
jae
sbb
adc
js
je
fists
andb
pushaw
insb
stc
dec
jno
push
and
cwtl
mov
adc
dec
test
cmp
stos
popf
cwtl
xchg
adc
dec
movsb
lret
jbe
mov
or
popf
sahf
and
movsb
imull
add
adc
das
mov
add
mov
dec
sub
mov
xchg
fnstsw
ja
inc
sub
fmull
jno
add
jge
es
fidivrl
test
out
lcall
inc
adc
pop
addl
insb
clc
jo
enter
xchg
and
push
push
sbb
stos
sub
popa
addb
mulb
cmp
fcmovnbe
jge
and
adc
and
mov
xchg
mov
jae
jl
mov
jo
nop
sub
sub
adcl
rorb
out
push
jle
mov
pusha
mov
fsub
sub
rcrl
push
inc
jns
dec
xor
mov
lock
mov
xlat
sub
jbe
pop
sahf
inc
pop
inc
filds
nop
sub
stc
and
loopne
arpl
dec
sbb
cwtl
sbb
into
push
or
and
cmpsl
into
push
loopne
dec
popa
and
inc
sbb
cltd
call
filds
xchg
mov
pop
mov
xor
xchg
xchg
in
out
daa
int
adc
loop
cmpsl
mov
lret
mov
pop
mov
imul
adc
ljmp
adc
pusha
js
repz
xlat
negl
rcrl
cld
and
jne
es
xchg
lret
insl
test
je
mov
pushf
ja
int3
sub
or
loopne
sbbl
dec
dec
add
mov
loope
push
sub
pop
rcll
xchg
lret
sub
notl
pop
cmc
call
test
dec
dec
sub
adc
mov
jne
xlat
add
flds
loopne
adc
mov
sub
inc
std
sbb
arpl
addr16
dec
adc
aaa
bound
and
lcall
adc
pushf
pop
mov
inc
sbb
and
push
xor
mov
sysexit
test
scas
stos
push
lock
subb
lea
adc
cmp
int
xchg
mull
mov
push
dec
mov
or
dec
ret
mov
lcall
adc
pop
adc
jo
push
cltd
cmp
rclb
bound
push
ljmp
or
mov
sub
xchg
xchg
roll
shll
inc
xorb
out
lock
push
mov
mov
lret
test
pushf
pop
out
cmp
icebp
jbe
adc
pop
add
insb
xchg
pop
leave
pushl
scas
inc
mov
jp
lea
pusha
inc
cmp
dec
adcl
call
xchg
cmp
xor
push
push
int
mov
fcmovnbe
les
pop
test
dec
stos
ja
fisubrl
pushf
push
cmp
jmp
lea
cmp
out
push
rcrb
int
add
sbb
dec
bound
lahf
mov
push
dec
push
xchg
std
push
mov
inc
or
sub
mov
sti
or
inc
js
cmpsb
push
pusha
inc
ror
js
js
stos
jno
loope
jg
iret
jge
in
push
repnz
arpl
enter
and
cli
sti
iret
sub
stc
mov
cmp
or
daa
pop
push
cli
addr16
inc
lea
xlat
push
jb
jbe
testb
jo
outsb
cmp
add
nop
jnp
pand
nop
fs
mov
ds
outsl
and
and
lods
jg
xor
xor
jp
call
jbe
pop
and
mov
xlat
test
rorl
outsl
and
sbbl
cld
fcomps
mov
mov
fwait
mov
add
xchg
test
ret
mov
fcompl
push
mov
sbb
xchg
arpl
ret
adc
mov
fisubs
mov
ja
scas
in
mov
out
dec
sub
dec
jae
cmovb
insl
pop
pop
jp
int3
or
fwait
jecxz
inc
rolb
and
jle
pop
push
cmp
mov
ret
xchg
pushl
pop
sub
int3
loop
jb
hlt
xchg
xor
test
jno
or
shrb
insl
imul
ljmp
hlt
jbe
jg
mov
lock
loope
test
lock
sub
aad
test
pop
dec
shrl
aas
pop
push
and
notl
dec
stos
xlat
insl
mov
in
mov
mov
or
stc
aam
fs
ret
and
sbb
or
jae
cs
mov
mov
push
aas
push
testb
jne
cltd
mov
pop
sbb
sub
dec
in
lret
pop
in
push
adc
jb
dec
xchg
push
and
jp
sub
test
xor
jbe
inc
clc
xchg
pusha
cli
jns
or
idiv
mov
xor
dec
pop
push
loope
rcl
cltd
mov
push
and
not
divb
jg
int3
jp
rcl
ss
les
push
fidivrl
sarl
lds
mov
clc
insl
mov
jo
into
and
xor
cmpsl
lcall
push
shr
pushf
test
nopl
xor
xor
mov
test
push
dec
jo
sbb
adc
jae
pop
sbb
test
cmp
xchg
cld
xchg
lds
sbb
jl
addr16
cltd
shrl
xor
jl
xchg
je
insl
lods
int3
pushl
cs
sub
cmc
sub
sbb
inc
or
xor
pop
and
xlat
dec
sub
aam
frstor
mov
add
call
out
cs
push
test
sarl
push
cmpsb
mov
pop
je
mov
mov
mov
and
in
cwtl
mov
xor
cmpsl
lds
cmp
mov
inc
xlat
test
mov
xchg
or
xchg
jmp
cwtl
pmullw
push
out
sbb
gs
sbb
cmpb
push
subl
xlat
jp
dec
cld
jbe
pushf
inc
daa
in
adc
lea
stc
pop
arpl
loop
push
jmp
adc
dec
inc
inc
cmp
out
rcrl
dec
jnp
or
outsb
fbld
fndisi(8087
xorb
mov
xchg
sub
mov
jmp
and
ss
push
outsb
loop
lods
stos
aaa
push
sbbb
cli
or
inc
imul
push
mov
push
sbb
dec
test
jg
ds
pop
adc
hlt
jbe
stos
push
fcomip
and
nop
add
loopne
push
stos
xchg
xchg
sub
adc
inc
dec
and
add
std
lea
aad
leave
jno
addr16
xchg
stc
addr16
inc
stos
out
shrl
mov
sbb
test
jns
jge
stc
in
outsl
sbb
gs
add
jb
mov
shl
push
decl
ret
div
fs
insb
inc
jg
mov
rorl
ljmp
int3
mov
test
js
pushf
mov
mov
xor
xchg
je
cwtl
xor
xchg
pop
sbb
push
push
pop
cmpsl
xor
mov
mov
sbb
movd
or
pop
dec
out
idivb
es
sbb
int3
mov
jmp
fimuls
and
lods
sub
ret
or
lods
stos
sbb
lahf
clts
dec
xchg
rcrl
popa
ljmp
fdivrs
xor
mov
das
mov
mov
cltd
dec
int3
sub
cmpsb
test
fistpl
out
out
pushf
and
pop
cmp
push
mov
cmpsb
push
fsubrs
cmp
mov
xchg
sbb
push
inc
ja
in
out
inc
mov
ds
sbb
shll
out
shll
mov
mov
xchg
adc
mov
pop
dec
push
les
pop
mov
jp
test
sub
jg
sub
mov
mov
pop
in
lahf
jle
mov
jle
das
cld
lea
fcoml
pop
lods
inc
sub
dec
inc
dec
cmpsb
int
pop
fs
rorb
push
cmc
adc
cmpl
adcl
jecxz
fmul
jne
dec
push
cmp
push
std
pop
and
stos
dec
xor
fwait
sub
push
sub
dec
inc
jl
leave
add
or
mov
iret
mov
add
scas
out
mov
sub
rclb
fisubs
adc
jle
cmpsb
cmpsl
popa
cmp
cli
fidivs
mov
xor
sub
cltd
leavew
cmp
mov
iret
xchg
xchg
xchg
movsl
addl
mov
dec
and
in
mov
sub
shl
sbb
sbb
aaa
or
mov
lock
jmp
cmc
mov
inc
pop
pop
xorb
je
mov
pop
inc
or
and
clc
adc
cmc
jp
push
in
sbb
cltd
mov
sbb
test
sti
pop
inc
test
push
scas
pop
cld
std
add
mov
xchg
imul
scas
gs
push
add
iret
push
hlt
adc
and
mov
push
icebp
pop
shlb
jnp
push
test
sub
icebp
and
insl
scas
and
sbbl
adc
lret
shrb
sbb
push
emms
pop
loopne
mov
mov
shlb
enter
rorb
mov
mov
push
jnp
jmp
decb
mull
sub
or
cld
cmp
cmpl
inc
shrb
cpuid
out
push
mov
pop
mov
aaa
or
lret
mov
sbbl
arpl
cli
imul
inc
mov
nop
imul
mov
test
xchg
inc
mov
imul
jo
mov
push
mov
shll
jbe
into
lcall
lret
hlt
int
lock
mov
jg
imul
out
std
cld
into
leave
xchg
add
ret
jne
cmp
fisttps
inc
cli
cltd
dec
dec
jno
gs
daa
jmp
imul
inc
pop
movsl
out
dec
xor
cmpsb
add
nop
fildl
ret
iret
lret
xor
pop
dec
jecxz
jne
cmp
and
lds
insb
and
add
xchg
movlhps
push
cmp
cmp
jg
xor
xor
arpl
inc
bound
in
adc
pop
and
icebp
adc
dec
xchg
sbbl
das
cltd
ret
push
mov
repnz
movsb
ds
push
adc
adc
mov
push
jge
cmp
adc
movsb
mov
mov
in
cmp
pushf
setge
pop
lods
mov
jno
loop
insb
outsb
mov
push
mov
dec
cld
mov
lret
jnp
pop
mov
clc
clc
push
call
or
cmpsl
sub
enter
inc
out
push
inc
xchg
andl
inc
xlat
pop
mov
andb
loopne
add
or
sbb
data16
mov
dec
cltd
bound
cmc
repz
fisubs
mov
repnz
jne
xchg
paddsw
xchg
call
sbb
pop
pop
js
out
jne
fstp
jp
inc
sub
incb
push
bound
lods
arpl
js
mov
lret
and
lea
enter
loopne
fscale
pop
mov
xor
daa
shrb
push
mov
bswap
jno
jge
jle
iret
fwait
pop
out
aaa
dec
mov
flds
mov
rorl
jmp
and
mov
sbb
jnp
rolb
loopne
ja
repz
mulb
jecxz
cmpsl
addl
mov
dec
in
movsb
out
sbb
sbb
idivl
lea
ds
mov
mov
inc
add
inc
stos
mov
xchg
mov
cwtl
pop
push
mov
pop
clc
pop
out
push
mov
sar
jne,pt
jmp
push
jge
mov
shlb
shlb
lret
add
pop
and
xchg
jge
scas
xchg
push
mov
xor
lds
cmp
leave
lods
cmp
mov
sbb
sti
aam
jno
push
cmc
xor
sbb
xchg
jle
push
ret
rcrb
std
fadd
mov
jns
clc
xchg
loop
jp
xlat
cmp
add
hlt
xor
and
adc
mov
cli
lahf
movsb
adc
or
dec
add
popa
in
sarl
and
jbe
xchg
push
fwait
xor
inc
outsb
mov
sbb
mov
sahf
push
sbb
jl
jns
sbb
cmc
ja
fistpl
rorl
mov
sub
ja
xchg
aam
lret
out
faddl
mov
std
je
sub
sarl
imulb
sub
mov
xchg
rorl
test
mov
push
pop
add
mov
pop
ret
pop
sub
mov
or
pop
cmp
inc
insl
dec
xor
mov
das
jg
jo
scas
bnd
mov
sbb
xchg
adc
sbb
test
push
mov
clc
jo
push
les
add
adc
sbb
cmp
cs
std
add
xor
aas
push
inc
bound
test
ljmp
daa
xor
imul
call
pop
mov
inc
rclb
mov
add
cmc
add
test
es
pop
scas
mov
adc
clc
cmpb
pop
std
inc
movsl
or
jmp
test
sbb
nop
daa
js
cmc
xchg
fnstsw
lret
mov
xchg
hlt
xchg
ja
popf
adc
and
mov
icebp
cmp
loopne
mov
inc
inc
push
xchg
imul
aaa
rcrl
mov
xchg
push
inc
pop
cmp
mov
in
rcr
das
fnstsw
pop
clc
cld
lock
nop
xchg
and
sub
inc
mov
add
out
xchg
push
add
aaa
mov
ja
aad
outsb
xor
leave
in
adc
icebp
pop
cmovno
dec
out
shl
pop
inc
mov
outsl
jns
pop
mov
aas
xor
roll
sub
jno
and
dec
push
xlat
pusha
cmpsl
popf
xchg
cmp
mov
cmc
pop
pop
sti
lcall
fisubl
or
inc
shll
out
call
scas
sahf
mov
stos
loopne
xchg
ljmp
stos
xor
test
pusha
repnz
mov
jmp
fidivs
mov
adc
in
add
pop
sbb
sub
dec
cmp
das
cltd
mov
dec
sti
dec
sbb
cltd
out
fwait
add
and
add
ja
xchg
iret
addl
mov
fdiv
adc
fs
mov
lret
in
dec
icebp
mov
insb
arpl
sti
inc
or
sub
push
insl
adc
popf
mov
cmp
mov
stos
inc
dec
std
add
cld
or
fsts
stos
push
or
daa
push
xor
cmc
iret
test
push
ret
shrl
fisubrs
lret
pop
add
mov
out
jo
arpl
jbe
dec
aam
lods
adc
add
repz
xchg
in
adc
mov
sub
and
add
test
push
or
cmpsl
data16
mov
nop
sub
iret
push
mov
inc
hlt
cmp
xchg
aaa
clc
sarb
loopne
push
insb
int
dec
push
fistps
mov
lret
in
aas
dec
xor
in
dec
lahf
cmp
and
mov
fcomps
cld
dec
jbe
cmp
xchg
or
out
sub
mov
xchg
aam
jnp
push
lcall
or
fwait
push
jae
mov
mov
inc
mov
ja
mov
sbb
in
rclb
push
mov
mov
or
jge
inc
mov
lock
fiaddl
xchg
mov
mov
int3
xchg
imul
aaa
pop
xlat
vpsubq
inc
pop
enter
cmpl
xor
loope
sub
adc
sub
movsl
cmp
shrl
aad
push
pop
popa
xchg
shl
addr16
xor
shll
xchg
mov
cli
add
aam
shlb
jae
mov
pushf
fwait
bound
mov
mov
xchg
ja
lret
mov
jae
arpl
in
push
movl
adcl
sti
sbb
rcrl
ss
jb
cmpsl
jbe
xor
pop
jnp
jge
dec
leave
adc
add
jnp
mov
push
loopne
mov
cmc
ret
nop
xchg
xlat
adc
jecxz
or
dec
popa
xor
ja
inc
xchg
push
nop
cmp
or
ret
or
in
xor
mov
ss
shl
repnz
mov
in
sti
adc
and
inc
pop
subb
xor
ds
ja
adc
fnstenv
mov
aad
cmp
inc
sub
mov
mov
add
cmp
xchg
inc
adc
das
jle
imul
xor
jne
mov
dec
fmuls
xor
popa
je
arpl
notl
mov
xchg
loope
andb
dec
xchg
cmp
lods
xchg
dec
test
mov
lahf
xchg
mov
testl
addr16
sti
outsl
pushf
mov
sub
loopne
sbb
jo
mov
jbe
shlb
ret
arpl
leave
pop
xchg
fstp
movsl
push
or
pop
fistpl
adc
subl
inc
in
incb
in
cwtl
cltd
sbb
pushf
xchg
idivl
mov
mov
test
outsl
inc
ret
pop
ljmp
gs
jge
lods
lret
push
push
jo
int3
push
push
sbb
lods
sbb
les
or
push
pop
test
dec
mov
aad
dec
data16
lcall
push
pop
stos
pop
cltd
xor
lahf
lahf
jne
js
fisubl
cmc
jnp
loop
cld
mov
push
out
insb
shrb
repnz
ss
adc
jno
in
adc
dec
xor
stos
mov
jecxz
iret
hlt
dec
push
dec
outsl
out
pop
leave
scas
in
fcmovbe
sbb
incb
int3
adc
jle
call
sbb
inc
rclb
adc
repz
dec
add
fstl
xchg
lds
dec
or
cmp
pop
scas
pop
adc
pop
jb
mov
jne
fs
xchg
xor
pop
lds
mov
fldcw
bound
in
cmp
test
lret
stos
cs
je
les
xchg
jge
outsb
loope
xor
mov
sub
dec
outsb
int
fsubrp
std
sub
push
and
cwtl
xchg
push
rdpmc
lock
add
and
fdivrl
rol
sbb
jmp
repnz
sub
jge
lods
movsb
jnp
xlat
sbb
into
sub
and
jg
pop
xor
in
imul
loopne
or
call
in
mov
push
cwtl
xor
lcall
add
xchg
push
mov
outsb
xchg
cltd
adc
clc
and
mov
push
jne
in
out
dec
repz
sub
lods
popf
jb
stos
leave
sbb
lret
dec
xchg
adc
xchg
add
add
push
cli
loope
add
pop
dec
and
iret
sub
dec
in
push
adc
subb
arpl
sub
mov
arpl
inc
jnp
call
out
mov
push
sub
adc
jnp
adc
mov
pop
pop
mov
fidivs
vpsubusb
imul
push
add
inc
int
jle
pop
sbb
dec
out
in
or
mov
cld
xchg
sub
fwait
add
les
fisubrl
or
sub
sbb
and
das
dec
popf
pop
mov
xchg
in
loop
aaa
and
in
jno
xchg
xor
push
cltd
loop
or
push
cmp
dec
ret
mov
sbb
imul
stos
add
ret
fwait
rorl
pop
gs
mov
addb
sub
loopne
jecxz
out
xchg
popf
inc
popa
out
adc
scas
cmovnp
cld
movsb
cwtl
dec
call
adc
mov
and
mov
dec
lock
sub
sbb
dec
jle
jns
adc
inc
xchg
pop
dec
dec
push
rorl
sbb
push
push
ret
mov
push
inc
sub
in
das
repz
pushf
aaa
push
push
jae
adc
pop
rcrb
clc
jl
mov
jno
cmpsb
and
xchg
cmpsl
adcl
pop
stos
je
and
add
sbb
and
adc
fcmovb
push
inc
jmp
stc
imul
lret
cmp
mov
pop
mov
inc
jecxz
mov
loope
push
pop
or
and
push
inc
jl
sbb
mov
lds
jge
adc
daa
call
xchg
das
mov
loop
aaa
pop
fs
pusha
sbb
rcrb
stos
and
call
outsb
fdivl
stc
jl
and
and
dec
repnz
dec
adc
pop
rcr
jge
mov
sbb
arpl
inc
mov
and
movsl
mov
in
xor
jmp
jnp
mov
jge
dec
scas
test
das
lock
pop
mov
ja
jle
clc
mov
xchg
pusha
gs
sub
or
mov
sbb
shrb
sbb
xchg
ja
cmp
lahf
imul
insb
inc
dec
ja
sbb
xchg
in
xchg
lcall
pop
xchg
fstps
nop
insl
mov
out
adc
jl
jns
add
repz
xchg
push
jo
xchg
dec
lret
or
cwtl
pushl
mov
arpl
push
fisttpll
or
mov
lods
movsl
cmpsb
cltd
les
add
pushf
in
push
adcb
je
mov
sub
out
pop
sub
outsl
pop
and
mov
je
sbb
addr16
int
and
pop
inc
add
xchg
lds
mov
dec
xor
cmpsb
cli
aam
adc
outsb
repnz
xor
or
cmp
pop
out
push
rcl
pop
mov
out
cmp
insb
mov
jge
or
inc
inc
push
mov
loope
push
aam
xlat
inc
mov
mov
xchg
scas
adc
adcb
stc
cmc
sbb
rolb
mov
xor
adc
or
push
cmp
repz
pop
mov
lahf
pushf
sub
push
xchg
cmc
pop
cmp
xor
push
shlb
mov
mov
inc
cwtl
shrb
andnps
or
mov
sarb
les
arpl
test
xchg
push
adc
cs
xchg
test
test
fisttpl
xchg
jp
jno
aam
cmpsb
int3
sbb
pop
sti
pop
push
fists
push
in
nop
mov
adc
adc
mov
jl
popa
or
mov
mov
icebp
mov
test
inc
jmp
cwtl
inc
cltd
call
out
lret
add
push
ja
iret
add
jmp
xchg
push
lods
lods
ror
out
mov
lcall
not
scas
cmp
out
stc
push
dec
xchg
lock
orl
inc
inc
xlat
fsubrl
rcrl
adc
push
and
repz
or
nop
pop
jge
push
xchg
pop
ds
jbe
shll
inc
xchg
xor
push
iret
cs
call
jg
push
in
xchg
xchg
test
cmp
mov
fisttpll
ret
adc
jnp
or
jb
push
jae
mov
xlat
mov
popa
dec
push
jnp
ds
sbbb
pop
jnp
out
cmc
mov
pop
mov
pop
mov
lret
and
mov
int3
cmp
sbb
les
leave
adc
dec
outsl
cmp
test
push
out
pop
or
push
mov
xchg
rcrb
add
mov
pop
out
push
lret
dec
pop
ret
fcom
adc
mov
andb
mov
pop
ret
and
mov
push
mov
add
aad
dec
push
jae
call
sar
lds
in
into
cs
jl
and
or
push
rcrl
sub
xchg
cmp
stos
out
xchg
dec
mov
cmp
jae
sbb
lea
xor
jg
repz
shrb
aad
in
insb
aas
sub
loop
cmp
imul
andb
subb
adcb
hlt
aam
and
pop
xor
cwtl
push
fisttps
loop
pushf
cmp
adc
ja
add
decb
sti
or
and
xchg
test
fistpll
cmpsl
xlat
push
dec
cmp
xor
add
fs
jo
and
pop
jecxz
jmp
jb
pop
std
jle
cmp
inc
or
xchg
and
out
fdiv
or
jge
xchg
pop
lret
gs
scas
xorb
mov
jle
aad
adc
push
jae
dec
or
xchg
jmp
dec
sbb
std
jecxz
lock
adc
cmpsb
or
stos
sbb
push
mov
jno
cmp
imul
and
lcall
pop
pusha
cmp
adcl
movsl
mov
scas
push
outsl
les
dec
pop
dec
cmpsl
sbb
xor
push
push
imul
test
and
push
std
jp
fwait
and
sbb
jmp
lods
xchg
les
add
jl
sahf
inc
push
xchg
push
mov
adc
pop
popa
cmp
lds
sbb
shll
dec
dec
in
inc
loop
repnz
pop
and
imul
xor
mov
popa
sub
pop
je
add
cld
idiv
sub
leave
xchg
or
or
xchg
into
lret
test
lock
gs
enter
mov
flds
int3
sbb
push
bound
gs
in
and
frstor
jl
in
out
mov
jg
or
jo
jns
rorb
xchg
jmp
and
push
mov
lahf
insl
enter
pop
or
or
ret
push
or
adc
xor
cmpsb
test
mul
xchg
loopne
pop
aam
dec
inc
inc
into
inc
es
lods
mov
js
sarb
int
outsl
scas
sub
insl
cwtl
jno
gs
pop
cmp
pop
pop
push
insl
mov
imul
mov
mov
and
adc
fbld
jne
cmpsb
rolb
jo
inc
jbe
or
mov
gs
insb
nop
stos
divb
mov
dec
push
pop
lret
and
lock
cmp
aas
stos
out
lahf
mov
fwait
mov
sub
js
mov
loopne
jae
stos
aad
scas
shrb
insb
and
call
xor
arpl
or
dec
jnp
mov
adcb
je
sub
fistpll
cmp
xor
jmp
stc
cld
fsubrl
lea
test
inc
sarb
shrl
mov
sbb
into
clc
inc
xor
movsl
sub
ret
and
and
push
mov
add
hlt
push
imull
cli
in
sbb
out
mov
xchg
xchg
jp
les
jecxz
add
scas
sub
loop
scas
daa
sbb
notb
sub
arpl
into
ret
dec
rcrl
xchg
xor
or
mov
into
jno
add
or
loopne
dec
sbbl
loope
ret
mov
dec
jmp
js
sbb
add
scas
jge
push
mov
cmp
enter
add
and
andb
ja
push
dec
mov
cmp
push
and
jp
ljmp
pop
jl
stc
mov
pop
cmp
and
ficomps
arpl
mov
in
in
push
sub
and
lock
mov
popa
icebp
enter
xchg
sbb
sub
cmp
test
adc
fwait
imulb
test
out
mov
loop
loope
pushl
mov
rcl
jnp
fisubrs
loope
dec
sbb
sbb
jno
jecxz
ror
mov
pusha
push
sub
loopne
push
and
imul
xor
adc
mov
dec
aad
xchg
shll
cmp
or
enter
sub
addr16
sub
or
inc
xlat
pop
jl
cld
sub
int
out
mov
mov
outsl
jno
pop
adc
out
dec
adc
adc
adc
pop
sbb
adc
jns
sbb
out
into
ja
cltd
pop
mov
clc
lea
aad
xor
or
and
mov
mov
scas
test
adc
mov
jae
xchg
mov
cmp
ss
mov
xchg
mov
mov
into
fmulp
pop
in
aas
xchg
ss
imul
sub
mov
dec
les
xor
lds
push
sub
stc
dec
push
movsb
or
insl
add
xor
inc
mov
mov
sub
dec
and
test
jle
xchg
dec
daa
xchg
push
jae
ljmp
fidivs
outsb
sbb
test
sbb
mov
xchg
mov
cltd
sub
mov
adc
lcall
pop
dec
cltd
mov
out
incl
les
orl
push
push
jns
popf
into
cmpsb
imul
lcall
test
aas
imul
cwtl
scas
lret
mov
fs
xchg
and
fidivl
scas
lret
test
stc
stos
dec
mov
jb
pushf
or
and
xchg
call
xchg
inc
bound
push
in
push
out
adc
mov
sub
push
ds
cmp
and
pop
jmp
testl
xor
dec
xor
test
je
adc
mov
mov
jp
inc
jb
pop
es
dec
or
call
leave
fstpl
dec
outsb
fwait
cmp
mull
outsl
or
gs
cltd
insb
sete
dec
jle
and
dec
push
iret
fxch
push
or
adc
xchg
jno
mov
sbbl
das
cmp
enter
cmp
sbb
cli
mov
out
sti
mov
rcrb
enter
jne
ljmp
sub
int
mov
or
rcrl
or
xchg
pop
xchg
stc
or
out
clc
sub
add
je
imul
push
or
or
xor
mov
call
popa
mov
xchg
add
xchg
push
and
in
das
adc
cltd
xchg
xchg
push
sbb
sbb
dec
jge
xchg
xchg
popf
sbb
adc
jo
jle
fistps
add
and
movsl
push
mov
adc
push
pop
testl
in
ss
xor
jg
pop
sub
or
sub
lock
mov
adc
in
lods
jmp
adc
adc
pop
inc
cmp
pop
scas
sub
xor
adc
or
fs
hlt
lret
fldcw
or
jg
inc
clc
cmpsl
popf
sub
les
sub
mov
aad
test
jle
addr16
mov
mov
pop
fwait
repz
pop
push
mov
ljmp
out
add
sbb
imul
aas
lret
dec
mov
cmc
xchg
test
aam
sub
xor
lods
pop
repz
shll
jecxz
jo
push
shll
xor
notl
dec
or
add
daa
cld
mov
loop
xchg
add
cmp
jne
sub
mov
cwtl
lods
ds
int
pop
clc
xchg
out
mov
out
loop
xchg
cmp
shrb
es
push
je
int
push
and
xor
cltd
jmp
inc
lahf
dec
cmc
pop
jmp
mov
fs
ss
pushf
mov
pop
loopne
rcrl
inc
scas
sbb
mov
mov
adc
pusha
call
inc
mov
mov
or
pop
pushf
jle
jp
add
repz
cmpsl
cltd
repz
pop
jg
and
rcll
call
pusha
mov
imul
lea
xchg
sahf
in
jmp
sbb
imul
scas
jmp
jecxz
cwtl
sbb
out
and
adc
shll
rcrb
sub
push
in
scas
add
mov
pop
or
mov
outsl
std
fdivrl
hlt
movsl
sbbb
call
arpl
sbb
mov
jno
jecxz
enter
adc
lods
ret
and
cwtl
icebp
adc
mov
mov
rorl
or
xor
mov
fstps
inc
les
lret
test
ja
repnz
ss
xchg
mov
negl
mov
or
mov
xchg
push
outsl
or
in
je
lds
icebp
sub
out
iret
inc
mov
scas
add
xchg
or
aad
xor
or
sbb
clc
ret
fidivl
xlat
dec
jg
js
xchg
mov
dec
and
jno
stc
sbb
aaa
scas
lcall
sti
mov
xor
ret
rcr
sbb
das
adc
leave
sbb
adc
jo
xor
aas
add
testb
repz
ret
inc
pushf
add
out
mov
dec
mov
ret
pop
inc
mov
lea
pop
add
jno
loop
push
sbb
in
popa
callw
and
sbb
lods
out
xchg
xchg
push
jnp
imulb
xor
jmp
pop
fldl
je
fdivl
mov
loop
bound
jecxz
out
loopne
call
ljmp
inc
jb
test
scas
mov
adc
test
inc
mov
test
or
dec
dec
push
adc
lahf
imulb
jg
mov
rol
lods
repz
mov
pushf
call
jbe
jg
pop
insl
shlb
dec
or
std
jns
pop
dec
or
mov
push
inc
sub
leave
notl
add
xchg
pop
loope
sub
inc
mov
in
xlat
pop
in
sti
jl
scas
scas
inc
repnz
shr
lock
pop
cld
push
ret
shlb
push
xor
addr16
xchg
xor
adc
aad
int3
or
pop
add
fidivl
aaa
adc
add
xor
mov
test
rolb
test
mov
dec
or
sub
sbb
mov
mov
lock
addr16
psubsw
test
pushf
in
cld
sbb
ss
call
shll
pop
sbb
mov
int3
add
push
mov
int
xor
sbb
push
jns
aas
fldl2e
or
pop
add
repnz
fidivl
adc
ds
aaa
jle
rclb
or
jae
adc
lods
scas
mov
insb
cmp
jno
ljmp
jb
mov
sbb
lret
f2xm1
das
xor
jb
push
icebp
sub
ja
adc
xchg
adc
cmpl
fsubrl
in
dec
or
add
sahf
mov
gs
aaa
mov
sbb
repnz
mov
mov
aad
fiaddl
add
jns
xchg
add
int3
fbld
push
daa
inc
mov
jmp
imul
loope
pop
repnz
pop
push
pop
xor
adc
cmp
mov
sub
xor
imul
mov
or
cmp
js
jecxz
test
adcl
aaa
jl
or
stos
das
inc
ljmp
inc
into
jne
mov
pop
int
cmp
mov
push
xor
addr16
stc
jecxz
or
stc
mov
ljmp
rol
cmp
cmc
adc
cmp
out
push
cmp
mov
and
adc
insb
inc
iret
int3
dec
xchg
jecxz
bound
mov
push
in
adc
stos
mov
rcl
cmpsl
mov
aas
aam
push
mov
outsb
movsl
pop
rorb
enter
dec
mov
stc
adc
lcall
frstor
push
sbb
xor
push
inc
arpl
mov
daa
and
mov
adc
pop
test
wbinvd
pop
loope
xchg
inc
jno
xor
pop
sbb
not
jp
sbb
out
jns
insl
push
inc
jge
sarb
int
mov
clc
adc
push
mov
stc
pcmpgtw
cmpl
int
incl
push
xchg
push
pop
jae
and
mov
xchg
jnp
pop
cmp
sbb
in
dec
out
out
sti
fcomps
ja
xchg
jmp
xchg
sbb
addr16
xchg
mov
out
push
rclb
dec
aas
les
inc
lods
add
dec
xor
sub
or
pop
lods
jmp
inc
mov
mov
sahf
inc
sub
in
ds
xlat
xchg
push
xor
cmp
call
or
outsl
mov
cmpsl
adc
mov
sub
insb
mov
jbe
aad
adc
mov
mov
mov
cld
stc
jbe
mov
nop
dec
xor
out
paddq
repz
aas
fmul
ret
jmp
inc
movsl
in
inc
mov
aas
xchg
fldenv
scas
and
scas
adc
xchg
scas
je
mov
jnp
mov
xchg
call
test
test
cmp
mov
pop
jnp
mov
daa
mov
xor
ret
add
mov
scas
in
popa
ja
mov
mov
nop
es
push
loop
mov
cmp
mov
mov
add
into
add
int3
bound
pop
dec
ret
pop
adc
jl
imulb
pop
cmp
mov
int3
jne
out
jmp
and
adc
iret
jno
cmpsb
pop
fbstp
and
pop
sti
pusha
push
pusha
pushf
xchg
pop
icebp
fsubs
subl
fdivs
int3
jg
cltd
push
icebp
lahf
cmovp
dec
daa
mov
loopne
inc
gs
mov
sub
push
cwtl
in
mov
ja
mov
aad
enter
pop
sbb
cmpsl
adc
inc
shrl
dec
test
sbb
and
inc
or
mov
and
js
pop
push
movsl
inc
or
insl
imul
cltd
sahf
push
clc
inc
das
icebp
pop
ljmp
and
dec
lds
mov
popf
sbb
pop
push
fildll
xchg
stc
in
movsb
jb
fxch
sbb
clc
loopne
mov
out
je
mov
sbb
stc
sub
cmpsb
jae
enter
iret
lods
mov
cmp
cltd
push
and
ret
out
xchg
clc
push
orb
push
ja
inc
rorl
mov
or
bound
mov
int
scas
push
fnsave
mov
aam
repnz
push
cmpsb
movsl
sub
fstpl
call
inc
jmp
imul
add
fs
fcomp
cmpsl
xchg
aaa
flds
call
dec
lods
outsb
and
push
mov
and
shl
or
inc
jecxz,pn
mov
sub
lahf
loope
mov
scas
xor
mov
js
jne
sbb
mov
pop
xchg
lock
mov
sbb
outsb
mov
or
mov
and
mov
leave
push
inc
cmp
sbb
inc
fstps
cmp
xchg
or
outsl
jbe
jbe
xchg
aas
mov
sbb
add
fisubrl
imul
insl
push
in
mov
or
loopne
lods
das
aas
or
xchg
ja
lea
filds
cmp
pop
fcoml
stc
add
push
je
rclb
cli
mov
in
ss
iret
inc
push
call
lret
dec
stos
xor
in
pop
loopne
jb
movb
scas
pop
shrl
or
stos
movsl
mov
mov
repz
inc
ret
xchg
push
lods
iret
lods
movsb
std
jo
inc
cmpsl
inc
aas
out
adc
addr16
sub
inc
sti
pop
cmp
push
sahf
cmpsl
mov
filds
mov
icebp
push
mov
pop
add
mov
xor
icebp
outsb
jmp
test
dec
cwtl
adc
jns
push
arpl
inc
push
mov
cli
mov
adc
pop
out
ds
push
push
add
inc
pop
movsb
cltd
std
xor
jns
bound
or
push
aas
pop
mov
jnp
ss
call
fcompp
mov
lea
jl
jl
gs
sbb
inc
push
ja
insb
leave
loop
push
adc
mov
popa
shrl
or
stc
fcmovnb
imul
mov
cmpsb
stc
dec
test
add
push
fs
pop
jo
outsb
psubsb
sbbb
sub
pop
fdivp
lcall
sub
leave
push
fsubrs
inc
scas
outsl
or
sbb
in
scas
gs
incl
jmp
popf
push
xchg
xchg
dec
addl
dec
dec
dec
add
adc
sbb
aaa
cwtl
mov
cmpsb
mov
in
fiaddl
adcl
push
push
mov
add
xchg
cmp
pop
aad
je
pop
subps
add
imul
cld
push
inc
pop
fmuls
orb
clc
mov
sub
nop
mov
aaa
repz
push
cmp
push
imul
das
cltd
shrb
dec
fdivrs
std
cmpl
fisubrs
shrl
test
jle
push
mov
mov
lds
mov
dec
test
lods
fstpt
inc
xchg
sahf
icebp
or
xor
lahf
mov
imul
in
test
and
popf
out
test
fwait
out
mov
dec
pop
fdiv
cwtl
jg
cmp
adc
add
cmp
pop
mov
xor
mov
out
xchg
fiaddl
out
mov
add
cs
pop
adc
clc
xchg
out
or
sbb
pop
loopne
fs
nop
call
pop
lock
or
push
fnstcw
das
or
inc
push
popf
adc
sahf
mov
nop
in
jnp
adc
xchg
out
xor
mov
mov
ja
cmp
lock
aam
push
sub
repz
mov
push
mov
dec
std
sbb
sbb
aas
mov
adc
daa
sub
jo
cmp
mov
lock
push
sub
sbb
sbbl
jne
inc
xor
in
adc
jae
and
jnp
shrb
pop
insl
adc
js
jp
out
cmc
mov
push
mov
ja
xchg
stos
icebp
mov
fistpll
adc
shl
mov
push
inc
mov
adc
push
or
inc
ds
jg
popa
lods
sub
repz
mov
out
je
cmp
jne
in
xor
jns
add
add
cld
repz
push
sbbl
mov
lahf
subl
sub
push
mov
dec
push
xchg
aaa
fptan
xor
fs
push
cmpsb
enter
inc
mov
lods
loopne
xor
pop
push
rcll
stc
mov
inc
jge
mov
mov
push
aaa
fistpl
mov
inc
xchg
jle
repz
jae
pop
cmp
xchg
jns
mov
jmp
dec
push
dec
sub
fmull
hlt
adc
aam
fcom
xor
das
cli
xorb
xchg
rcrl
fistpl
mov
in
pop
add
dec
dec
pop
push
push
mov
outsl
fnstsw
subb
mov
jg
or
ja
ljmp
jle
pop
imul
mov
jle
gs
gs
mov
add
push
sub
and
leave
mov
int
jnp
loope
push
jns
mov
aad
dec
and
push
punpckhdq
xchg
in
xchg
xor
pusha
mov
adc
nop
adc
jmp
shrb
mov
push
xchg
sub
lahf
jge
pushf
mov
adc
xor
ss
jo
std
and
inc
pushf
repz
sub
xchg
gs
add
lods
pop
sub
outsl
andl
push
repnz
les
call
mov
mov
inc
cld
xchg
adc
lds
sub
jnp
aad
mov
mov
sbb
fwait
xorb
dec
mov
fdivr
movsb
inc
dec
cmp
pop
sbb
sub
xchg
nop
mov
fimull
lock
leave
dec
mov
test
inc
push
jmp
in
mov
int3
inc
cmc
popa
pop
lret
mov
or
mov
or
stos
repz
or
xchg
push
push
clc
and
and
adc
mov
inc
notl
adc
lock
leave
imul
stc
push
les
rcl
pop
mov
dec
adc
mov
push
les
out
adc
cmp
fisttps
pushf
and
mov
scas
lods
mov
sbb
addb
cwtl
sub
mov
add
cli
push
push
les
and
xchg
cmp
ds
lds
dec
rolb
lcall
int3
ds
fwait
insl
fdivrl
addb
mov
xor
xor
lods
insl
pop
fadds
addb
xchg
cmp
add
pop
movsl
pushf
add
cmp
lods
dec
addr16
mov
or
xchg
jp
cmp
cmpsb
lcall
mov
fdivrl
inc
test
push
mov
sub
jne
popf
in
fimull
and
test
and
pop
cltd
sti
fwait
push
push
dec
cmp
mov
xchg
scas
sub
xor
add
into
les
jg
repnz
std
cmpsl
insl
je
and
lods
mov
aad
pushf
cmp
fmull
enter
push
fdivr
mov
xchg
gs
and
test
mov
test
xor
dec
je
sbb
pop
pushf
sub
icebp
pushf
and
pop
scas
dec
mov
and
push
jbe
cmp
adc
inc
cmp
cmp
cmc
push
mov
mov
xchg
insl
pop
mov
dec
xor
jmp
xlat
mov
nop
add
jmp
push
sub
adc
in
fstpt
ss
mull
ret
mov
dec
mov
sub
push
or
lret
femms
xor
shlb
lock
stos
sub
stos
cmpl
ret
aas
and
mov
mov
cli
daa
add
rorb
fs
and
or
clc
or
leave
rcll
outsl
sub
loop
mov
mulb
inc
std
cmp
or
inc
lods
jl
adc
dec
push
xor
mov
push
xor
lahf
pushf
and
inc
sub
and
insl
sub
fldl
mov
inc
sahf
repnz
inc
sub
clc
xchg
sarl
sbb
fbld
ret
lahf
lret
cmp
sahf
cwtl
mov
mov
pop
xchg
lret
xchg
loope
sub
fldcw
xchg
jno
pop
ret
xchg
mov
out
jo
aam
insb
daa
push
in
daa
mov
xchg
push
aaa
in
shll
std
xor
loopne
lods
xchg
subb
xchg
jmp
shll
std
or
push
dec
inc
or
data16
dec
mov
dec
add
pop
inc
xor
popf
cmp
cld
inc
mov
outsl
into
and
mov
outsl
pop
inc
inc
popf
loope
test
cmp
and
ds
sahf
cmpsb
inc
jbe
inc
and
xor
add
push
push
adc
cmp
sahf
lahf
xlat
aad
or
mov
mov
insl
iret
ds
mov
mov
outsl
pop
dec
lret
int3
xor
movsl
jbe
les
jle
out
and
mov
fwait
hlt
rcrb
jns
inc
jo
cmp
jb
cs
lock
aam
mov
fcoml
mov
push
test
cmpsl
push
push
lock
test
loopne
cli
fcoml
pop
push
jne
sub
bound
xor
pop
ret
insb
sbb
loope
aad
sub
cmpsl
jp
insb
sub
out
into
xchg
mov
fmul
test
dec
out
imul
xchg
mov
xchg
stos
scas
gs
mov
jg
push
or
dec
add
out
mov
pop
push
out
mov
pop
inc
dec
jg
mov
rorb
sub
pop
scas
mov
and
xchg
shll
add
or
outsb
jnp
in
insb
or
rol
jo
xor
aad
rolb
xchg
sub
or
in
jnp
roll
imul
loop
xchg
dec
into
add
test
and
xlat
xchg
scas
adc
les
inc
jg
jp
movsl
lods
negb
pop
xchg
cmc
push
mov
shl
jbe
lret
or
xchg
movsl
popf
and
push
sub
add
push
in
rcll
mov
filds
dec
movsl
dec
orl
mov
mov
sti
pop
daa
je
jge
stos
dec
adc
jl,pt
push
xchg
movsl
mov
shlb
add
jp
sbb
xchg
push
enter
int
adc
adcl
cwtl
imul
jb
and
push
or
xor
cmp
jb
dec
jo
jmp
dec
testb
setnp
jae
mov
add
clc
rclb
inc
test
pop
addr16
ss
mov
or
sbb
xchg
test
rorb
mov
cli
sbb
mov
and
in
cmp
dec
in
add
mov
cli
or
inc
stc
adc
jbe
lret
xchg
and
cmp
or
js
cmc
imul
push
cmp
out
mov
in
sbb
mov
insb
mov
push
fst
sbb
gs
adc
xor
mov
push
iret
test
insl
mov
add
push
adc
lret
stos
mov
inc
push
addr16
jno
mov
xchg
arpl
lret
addr16
dec
lret
mov
push
cwtl
imul
outsb
data16
fs
insb
in
insb
scas
xlat
mov
xchg
push
sbb
lret
sti
or
fidivl
shl
fcoml
lret
mov
inc
cmc
jno
sbb
inc
mov
dec
jmp
xchg
adc
jge
push
mov
lods
and
stos
xchg
mov
jp
imul
arpl
mov
dec
push
inc
gs
aad
mov
push
ret
in
pop
arpl
leave
fidivrs
dec
bound
popa
std
mov
jg
sub
push
gs
inc
dec
push
pop
loopne
cmp
push
int
add
fisubrs
dec
test
pop
test
in
adc
mov
popf
test
sbb
push
mov
shll
mov
sub
sbb
mov
call
xor
dec
stos
lret
das
jle
mov
test
gs
push
fisubl
insl
or
xchg
pop
push
int
cmp
mov
push
fidivl
test
cmpsl
ja
leave
shll
in
pop
mov
jo
stos
jnp
mov
loopne
loop
in
imul
shl
outsl
mull
add
xchg
mov
pop
addr16
mov
and
inc
xchg
pop
gs
inc
sahf
inc
or
jns
rcll
repz
and
std
xchg
iret
sbb
and
adc
into
sub
add
mov
adc
dec
sub
cmp
shrl
shll
push
mov
inc
pop
dec
inc
adcl
push
insl
fcoml
dec
sub
mov
dec
and
push
push
jp
adc
cmp
or
rcll
pop
xchg
cli
mov
cltd
scas
xor
mov
negl
add
in
aas
inc
dec
sbb
lods
xor
aam
inc
rcrb
pushf
dec
jne
add
push
cli
jns
adc
rorl
mov
loop
dec
push
jae
xchg
xor
icebp
lds
ljmp
decl
or
mov
cli
cwtl
dec
pop
xchg
cmp
loopne
inc
in
popf
pop
add
xchg
div
shlb
mov
inc
jae
ret
out
lea
fsubrs
adc
shl
mov
or
shr
push
mov
insb
jno
aam
adc
add
mov
ja
fidivl
gs
xorl
ret
cmp
std
push
stos
test
movsb
xor
xchg
leave
mov
ljmp
mov
mov
jmp
cmpsl
mov
dec
adc
into
cltd
fdivl
mov
mov
xchg
jno
imul
cmp
pop
lahf
dec
in
and
pop
sti
call
inc
aam
cmc
nop
lods
jle
jecxz
pop
cmp
subl
jbe
mov
scas
adc
mov
pop
daa
or
scas
or
sub
mov
mov
xor
test
jae
arpl
sbb
sub
and
adc
mov
dec
scas
jl
aaa
call
xor
and
mov
xchg
add
sbb
addr16
pusha
mov
xchg
jge
test
sub
sub
pop
std
cli
push
cmp
cmp
sub
mov
dec
mov
pop
andl
xchg
push
mov
testb
sbb
mov
pop
sbb
jns
mov
mov
inc
in
int
nop
xor
xchg
lods
sub
in
lods
and
xor
sub
lea
sub
sbb
divl
cld
pushl
out
or
dec
pushf
mov
and
push
mov
lods
fldenv
sbb
sbb
mov
movsb
xor
xor
mov
les
clc
add
stos
cmpsl
in
mov
pusha
bound
clc
lods
sub
outsl
push
out
mov
add
ret
stos
cmp
or
rcrl
lods
ja
shll
mov
dec
add
or
ret
scas
divb
mov
lret
bound
stos
and
or
in
push
cmpsl
push
jp
shl
push
add
pop
imul
xchg
rcll
popl
xchg
arpl
jl
outsb
test
ret
sbb
xchg
inc
cmc
mov
loopne
inc
dec
loop
lret
add
and
mov
and
jl
dec
xor
test
in
addr16
scas
sub
fs
pop
imul
ja
data16
cld
shll
xor
push
lcall
ficoml
and
mov
mov
jecxz
xchg
xchg
pop
cmp
pop
hlt
rorb
cmc
and
xchg
dec
ja
sbb
push
outsb
inc
js
dec
jmp
in
pop
mov
test
sbb
fst
adc
xchg
jl
mov
jae
outsb
rorb
lcall
pop
stos
xlat
mov
arpl
push
mov
aas
stc
pushl
or
in
call
inc
test
push
jae
arpl
nop
out
push
mov
sahf
in
mov
jns
lds
jl
xor
mov
inc
popa
adc
or
enter
sbb
jns
in
mov
fwait
pop
mov
ret
bound
mov
mov
sbb
data16
in
pop
sub
cmp
dec
sbb
dec
ja
push
mov
out
push
push
clc
mov
jle
mov
jae
lock
scas
mov
sub
imul
mov
dec
in
push
ror
outsb
add
jae
int
fimull
cmp
lcall
into
sub
mov
xchg
fwait
xchg
ss
cmpl
mov
popa
jae
and
arpl
xchg
xor
out
push
clc
dec
add
enter
mov
sub
movl
outsb
jmp
add
punpcklbw
mov
push
or
leave
jno
push
dec
fildll
dec
cwtl
js
add
fdivl
dec
adc
int3
xchg
loope
lds
ret
adcb
cld
push
cmp
jle
je
jbe
xchg
or
jle
pop
cld
mov
call
push
sbb
jnp
lahf
mov
loope
pop
cs
enter
stos
js
xchg
xor
cld
adc
or
cmc
jb
test
pop
hlt
push
call
cmpl
arpl
in
mov
aam
mov
sbb
mov
sarl
aaa
pushf
add
add
xchg
sbb
pop
cmp
and
pusha
addl
sti
lahf
pushf
inc
push
adc
mov
orl
pop
insl
push
dec
out
pop
fwait
and
lcall
icebp
sbb
sub
test
push
or
inc
popf
xchg
imul
pop
popa
out
xor
xor
lcall
jmp
lods
maxps
js
sub
cmpsl
cwtl
pop
clc
mov
fcmovb
jle
sbb
xchg
rcll
sbb
test
mov
and
jecxz
dec
dec
jg
inc
fs
data16
jbe
xor
cwtl
ret
jno
aad
and
cmp
test
or
sbb
pop
xchg
les
insl
les
loope
popa
fidivl
movsl
test
rcr
mov
or
outsl
shlb
dec
out
hlt
adc
sti
inc
js
jp
iret
cmc
mov
nop
aaa
pop
aaa
push
mov
pop
add
sbb
mov
fwait
add
bound
loop
sub
mov
es
xchg
jbe
ds
ret
fiaddl
pop
inc
xchg
cli
xor
in
les
mov
or
fwait
loopne
pop
nop
scas
pop
or
pop
mov
mov
fwait
and
and
fwait
lret
or
xchg
xchg
hlt
loopne
mov
test
sbb
sti
lds
aad
xor
pushf
aad
aas
cld
jp
inc
test
adc
dec
or
into
add
cmp
stos
sub
fldcw
pop
jge
push
roll
fisttpl
jno
xchg
push
add
cs
je
lds
and
and
idiv
pop
push
mov
loop
cmc
cmp
mov
xor
arpl
icebp
lds
or
mov
je
xchg
hlt
sbb
test
stc
outsb
pusha
xchg
pop
xchg
cmp
scas
ficoml
xor
out
xchg
cmc
xchg
dec
push
in
cli
lret
divb
pusha
sbb
lds
dec
add
popa
xchg
out
push
imul
add
sub
mov
stos
int3
stos
xchg
sub
stc
push
arpl
arpl
pmullw
enter
fs
lock
pop
cvtps2pd
cmp
cmp
push
jmp
sub
jne
push
lods
push
adc
add
mov
movsb
ds
add
out
incl
or
add
popf
xchg
jb
test
mov
fldl
sub
imul
movsb
cli
inc
test
pop
sbb
inc
xor
and
cmp
mov
leave
repnz
icebp
icebp
sbb
ret
add
int3
cli
inc
mov
xor
jns
xchg
rep
daa
fsts
and
add
pop
sbb
xlat
jae
iret
xchg
jo
mov
mov
cmp
xchg
or
inc
jnp
push
jge
mov
bound
cltd
xor
adc
in
dec
out
cmova
sbb
jmp
repz
jno
test
movsb
cld
ret
sub
cmp
test
lcall
xchg
dec
adc
pop
adc
test
jmp
in
lret
mov
jb
mov
movsl
ja
adc
mov
or
mov
lods
popa
xor
sub
aad
nop
or
or
add
mov
sahf
mov
jp
rcrl
jl
mov
add
in
jo
and
cmp
cmp
cmp
jnp
mov
push
leave
sbb
sbb
and
bound
imul
or
fwait
cs
lods
push
iret
mov
pop
aam
mov
mov
cmc
or
orl
mov
sbb
and
fnsave
es
pcmpgtb
pop
inc
xchg
out
int
mov
cmp
lret
xor
push
mov
xchg
sbb
cmp
ret
push
sub
pop
loop
push
push
mov
pop
dec
or
or
cmp
xchg
adc
and
pop
mov
jbe
inc
repz
push
leave
cmp
test
adc
and
insb
add
xchg
xchg
loop
pop
xor
push
adc
fs
cld
shlb
sahf
xor
std
push
inc
popl
outsb
mov
out
cs
mov
arpl
sub
or
and
inc
fisubl
daa
pop
and
enter
xor
aaa
xor
add
imul
cmpsb
xorl
mov
cmp
ror
test
jbe
jp
adcl
mov
imul
dec
sub
jno
addr16
bound
test
fnstsw
adc
outsb
int
inc
dec
pop
movsb
faddp
lcall
jae
adcb
pop
sub
and
cli
repnz
popf
fs
jl
cmp
mull
sahf
mov
ficoms
mov
xchg
outsb
mov
out
popf
sarl
inc
aam
hlt
adc
lea
iret
out
stc
popa
mov
push
jo
and
xchg
adc
sbb
mov
sbb
lret
mov
imul
shlb
add
or
mov
cmp
or
int
dec
lods
ljmp
jbe
add
pusha
int3
aaa
sub
fstl
scas
sbb
in
xchg
jmp
xlat
ja
shll
lods
mov
hlt
addr16
push
mov
mov
push
orl
cmp
sub
inc
filds
mov
mov
xchg
sub
jl
incb
sub
cmpsb
push
jl
jno
sbb
mulb
add
je
xorl
inc
test
mov
rol
sbbl
je
cmp
testl
push
outsl
sub
or
addb
jne
inc
adc
popa
sub
xchg
dec
cmp
js
push
jbe
xor
sub
fistpll
fists
inc
push
sbb
call
outsb
rclb
add
icebp
enter
ret
add
jne
dec
dec
insl
fsubl
sub
pop
fimull
adc
sub
in
jge
jnp
xchg
rorb
shll
mov
and
sti
je
enter
cwtl
xchg
jl
sub
push
mov
repnz
roll
push
sahf
xchg
jnp
push
fwait
jnp
pop
mov
shll
jb
jo
xor
jle
jno
xchg
or
adc
jp
dec
dec
mov
clc
ret
pop
in
xchg
mov
push
imull
rcrw
scas
js
mov
and
pop
out
aaa
mov
or
cli
or
xchg
push
add
cmp
push
dec
mov
setne
mov
mov
dec
je
stc
add
cmp
out
das
mov
cli
adc
scas
test
cs
push
aam
xchg
or
fnstsw
gs
incb
enter
jno
adc
inc
mov
cld
or
jp
mov
test
mov
pop
mov
pusha
fwait
imul
adc
xlat
xor
fsub
and
int
adc
mov
cmp
dec
push
and
testb
stos
push
pop
popf
cs
cmp
and
mov
lods
cmp
pop
clc
push
cmpsb
add
addb
push
scas
ret
and
mov
aam
cmpsl
mov
mov
mov
test
xor
test
xor
and
sti
lods
jmp
loope
push
sti
shr
out
scas
cmp
xlat
xchg
leave
and
cmp
jbe
mov
movsb
xor
mov
shlb
mov
stc
cmp
test
shl
ljmp
cmp
push
dec
xchg
sub
push
dec
inc
aad
and
sbb
push
cmpsb
add
cwtl
cmp
insb
mov
pop
jne
lods
icebp
sarb
js
int
leave
mov
and
pop
imul
and
pminub
mov
push
test
inc
scas
push
mov
adc
into
push
test
push
adc
adc
add
jne
and
cltd
les
cltd
mov
pop
iret
test
or
sti
popa
scas
es
push
fldcw
xchg
rolb
in
scas
mov
popf
mov
add
iret
pop
cltd
sub
xor
push
adc
dec
rorl
add
push
xchg
or
sbb
sbb
int
adc
and
push
fs
jle
or
mov
sub
nop
data16
addb
xor
mov
leave
lea
pop
adc
mov
lods
pusha
and
inc
cmp
loope
push
std
sahf
pop
loopne
in
fmul
cwtl
fists
test
lods
loop
je
add
push
pop
cmp
sub
jle
push
movsb
iret
and
and
xlat
xchg
jo
aad
xchg
mov
xorl
xchg
ret
iret
and
or
lock
bound
arpl
jge
cmp
out
mov
into
pusha
push
ds
mov
push
lea
adc
in
xchg
or
push
and
jbe
test
mov
or
lret
mov
decl
or
push
adc
xor
repnz
out
enter
push
lods
fcoml
mov
mov
add
ret
sbb
dec
push
inc
lds
xor
sub
xchg
loop
outsb
push
mov
inc
sbb
jg
xorb
rcrl
cs
nop
loop
push
cmp
inc
aam
sbb
adc
cld
in
mov
fmul
gs
push
cmc
mov
repz
lahf
dec
jle
sahf
pushf
loopne
jne
insl
int
or
mov
popa
dec
push
sub
fisubrs
into
mov
cmp
xchg
cld
addr16
aad
push
loope
movsb
pushf
pop
xchg
xchg
add
push
aaa
and
sbb
add
aad
pop
pop
in
lods
insb
pop
cwtl
daa
push
jmp
inc
daa
xchg
cmpsb
es
xchg
aam
and
in
andl
mov
xchg
jl
test
mov
push
out
out
cli
dec
movsb
mov
sbb
mov
je
addr16
lret
xchg
lret
cld
sub
cmp
mov
push
mov
test
mov
sti
push
pop
pop
loope
sub
lret
mov
mov
clc
jno
pop
into
sahf
dec
stc
sbb
jo
mov
out
xchg
jae
jb
add
int3
fimull
push
mov
lea
sub
das
lret
mov
xor
fcom
push
into
mov
sbb
test
inc
mov
mov
and
sbb
icebp
xchg
xor
lahf
cmp
adc
imull
imul
stc
pop
aas
andb
mov
add
jns
cwtl
and
call
cmp
fiadds
push
daa
mov
push
lea
inc
add
lahf
stos
pop
sub
popa
cld
addb
xor
jle
and
fcoms
pusha
add
scas
int
into
aas
sti
adc
inc
mov
mov
push
adc
push
jmp
iret
test
into
fnsave
sti
iret
xor
and
mov
mov
std
test
aam
mov
aas
shr
pop
outsb
jne
and
int
inc
adc
mov
loop
mov
push
adc
icebp
call
imul
mov
sbb
cmc
dec
push
out
stos
imul
fcoml
push
hlt
push
div
jbe
fadds
testl
inc
mov
mov
insb
xorl
xor
mov
test
mov
sub
sbb
pop
insb
push
xorl
xor
fwait
aam
scas
aad
pop
divb
clc
mov
add
jo
sahf
call
popa
xchg
data16
lock
fadds
shll
out
popf
or
mov
out
add
or
push
mov
add
add
mov
shl
cmp
stc
xor
cmp
loope
outsb
int
and
adc
into
xchg
ret
fstpl
into
add
sarb
shlb
push
dec
pop
cmpsl
inc
sub
loopne
xchg
adc
jne
inc
jmp
mov
and
push
pop
dec
cmp
mov
mov
push
jbe
sbb
lcall
hlt
scas
in
icebp
mov
les
addb
mov
popa
inc
iret
jl
cmp
mov
cwtl
xchg
into
or
rolb
pop
cmpsb
lock
fdivl
xchg
xor
push
xchg
mov
sbb
xchg
nop
loopne
push
xchg
mov
jl
sbb
or
lds
or
cs
outsl
in
movsb
stc
pop
sahf
mov
adc
xor
shlb
lahf
es
shlb
or
pop
add
or
push
movb
and
jle
mov
bnd
mov
loope
push
mull
adc
xor
out
adc
addr16
add
sbb
fs
ja
xchg
ja
into
cmc
jecxz
repnz
xchg
mov
pop
sub
std
mov
jb
lret
test
clc
adc
loop
xor
out
xchg
mov
cmpsl
jl
sub
pop
sahf
add
adc
push
stc
mov
inc
jp
es
dec
fsubrs
inc
mov
roll
insb
pushl
mov
pop
icebp
fimuls
aad
imul
xchg
pop
addr16
hlt
lds
test
dec
imul
mov
inc
test
and
jecxz
jl
fstl
fcoms
fstl
push
mov
pop
leave
sbb
loop
stc
daa
mov
je
stos
or
add
in
les
popa
mov
lcall
outsb
int
cli
add
arpl
xchg
je
lods
push
or
xchg
push
inc
lds
out
mov
dec
shlb
lcall
into
push
ja
jns
popw
test
mov
leave
aad
and
push
lock
pop
sbb
mov
test
push
xor
aaa
mov
in
sub
jns
cltd
push
push
mov
hlt
and
push
mov
fwait
mov
out
stos
add
cmp
ljmp
add
in
and
dec
arpl
sub
fisubs
or
pmulhuw
mov
cmc
and
jp
mov
and
cmpsl
mov
filds
rorb
xor
adc
not
xor
xor
sub
lds
je
stos
add
insb
mov
lock
push
in
or
out
mov
cmp
cld
shll
movsl
jmp
cltd
dec
lods
cmc
sub
cmpsb
clc
std
add
daa
mov
fs
or
push
sbb
stc
mov
mov
mov
shr
lods
testl
lea
mov
lret
dec
xor
lods
adc
xor
jl
sbb
jo
rcll
cmp
push
push
mov
inc
add
movsl
mov
xor
push
dec
scas
push
imul
arpl
std
xchg
add
icebp
cli
outsb
mov
dec
out
push
push
jo
mov
jo
xor
rorl
push
loopne
sbb
data16
pop
xor
je
test
test
jo
or
push
adc
nop
cmc
cmp
scas
fistpl
and
and
ret
aad
cli
fnstenv
fdivrs
aad
push
cld
out
ffreep
mov
ljmp
aad
add
add
call
sarb
xor
xor
call
cmpsb
lods
jmp
lcall
mov
les
out
std
jp
inc
ss
xlat
fisttpll
mov
mov
hlt
sbb
xlat
cltd
fistps
jl
cld
and
es
es
dec
cs
ret
leave
data16
mov
adc
fimuls
into
pop
sbb
out
hlt
out
jnp,pn
dec
shll
add
addr16
adc
popa
ljmp
mov
or
insb
orb
dec
scas
dec
sbb
and
dec
fwait
pop
pop
leave
inc
cs
gs
sub
xor
add
fistpl
sti
adc
inc
xor
mov
push
mov
fwait
insl
imul
adcl
xchg
std
add
icebp
insl
insb
and
fsts
negb
sahf
xchg
scas
jo
mov
dec
fisubrl
ss
cmp
loope
dec
inc
add
outsl
cmp
lahf
js
into
in
in
pop
stos
hlt
out
lret
scas
movsb
mov
das
call
xor
xor
es
sub
xlat
dec
fadds
dec
sub
cmpsl
xchg
gs
out
movsb
popf
cmp
aad
enter
loop
lock
jmp
dec
adc
mov
cld
clc
iret
imul
mov
adc
mov
aam
imul
popf
dec
out
lahf
popa
inc
or
in
xchg
push
fwait
mov
cmp
mov
clc
daa
fdivrs
pop
aas
adc
cmp
aad
popa
leave
or
fisttpl
out
repnz
push
sbb
loop
push
mov
pop
mov
adc
imull
xor
subb
out
push
ret
xchg
sti
aaa
mov
rorl
sti
mov
jge
xor
pop
mov
inc
push
outsl
inc
mov
adc
adcl
inc
cmp
inc
jecxz
hlt
int
les
arpl
daa
fwait
aas
add
or
pop
cwtl
enter
inc
sbb
insb
add
adc
sub
movsl
inc
nop
repnz
xor
xchg
pusha
sbb
jns
daa
lock
inc
rcrl
sbbl
sub
mov
in
push
es
test
push
test
pusha
sbb
xchg
mov
mov
push
loop
pop
inc
lds
imul
mov
shlb
sbb
sbb
mov
mov
xchg
fstpt
inc
addr16
rol
jecxz
aam
jns
and
or
cmpsl
cmc
xchg
or
sbb
jb
mov
fwait
lahf
lds
fdivs
push
cs
inc
pop
cs
outsb
xlat
test
outsl
push
pmuludq
sub
pop
adc
sahf
repz
jmp
jge
mov
push
pop
pop
int
subb
push
mov
dec
fstpt
in
cld
mov
hlt
mov
movsl
pop
imul
or
push
dec
lock
pop
mov
xlat
outsb
mov
xchg
das
dec
out
inc
das
hlt
dec
mov
jno
popa
rol
pop
mov
out
in
icebp
loopne
push
cmp
mov
inc
outsb
push
stos
mov
dec
rorl
xor
outsl
into
shlb
and
cld
sbb
push
pop
fisubrl
loop
sub
aaa
adc
pop
pop
jp
jl
mov
in
fnstenv
mov
arpl
fmull
sub
xchg
cmp
sbb
or
fcmove
lock
lods
cmpsb
sub
mov
inc
dec
repz
inc
mov
sbb
out
cs
xchg
bound
cmp
fs
cmp
push
lods
or
mov
das
push
mov
pop
mov
push
pop
add
mov
sti
repz
push
pusha
sti
dec
imulb
loop
xorb
and
std
out
jge
mov
loopne
cmp
jns
idivb
in
jae
inc
jb
and
clc
stc
cmp
pusha
cmpsb
movsb
and
pop
push
push
pop
mov
mov
pop
es
nop
jp
out
dec
xchg
dec
inc
pushf
sbb
xchg
jg
sbb
in
es
xchg
jp
add
mov
into
lods
scas
xlat
mov
push
fmull
add
fwait
out
mov
popf
dec
cli
dec
stc
push
jbe
loope
cmp
sbb
lea
sar
negb
dec
mov
xchg
sub
test
push
fists
mov
cmpsl
xor
shrl
sbb
inc
xchg
sbbl
scas
aad
sub
xchg
pushl
cmp
pop
push
sub
xchg
dec
ficoml
sbb
rolb
shrb
fidivrl
test
pop
jle
test
test
add
add
dec
pop
out
and
push
mov
pop
push
mov
aad
imul
inc
rorb
pop
inc
cmp
call
push
inc
xor
cli
outsb
lret
imul
adc
outsl
test
addr16
fsubl
decb
imul
xorl
outsl
xchg
in
loope
enter
adc
sbb
ss
aas
pop
lods
mov
std
adc
mov
jae
jl
jno
ss
subb
inc
fcompl
addr16
xchg
sub
push
popa
cmp
stos
imul
dec
jbe
and
popf
dec
dec
cmp
xorb
push
inc
pop
fsubrl
loopne
pusha
in
cmc
sub
rorl
jecxz
push
sti
mov
push
mov
jle
clc
sub
mov
repnz
lret
lahf
adc
repz
sub
sbb
pop
mov
inc
xorl
push
and
xlat
ljmp
mov
sub
xchg
fstpl
rcrl
push
fistpll
dec
scas
je
fs
sar
les
clc
mov
rclb
xlat
push
outsb
mov
mov
mov
icebp
sbb
add
loopne
mov
mov
popf
aam
adc
mov
test
aas
aad
xlat
leave
add
inc
adc
shlb
sub
es
add
outsb
in
push
sub
and
sbb
stos
hlt
mov
lret
and
cmp
loopne
out
into
mov
fxch
jmp
pop
push
push
int3
mov
sub
imul
or
add
xlat
sbb
repz
dec
push
mov
outsl
rorl
lret
adc
xor
fs
mov
ror
lods
cmc
or
cli
daa
sub
or
xorl
mov
inc
dec
pop
mov
sbb
out
cmpsb
lods
call
jmp
push
push
push
fwait
dec
jbe
jae
adc
loope
test
outsl
loop
xor
out
aaa
mov
pop
lock
jle
idivb
adcb
inc
stos
adc
test
jne
movsl
mov
xchg
cmpsl
or
jns
imul
jp
mov
xchg
or
push
outsb
inc
iret
scas
add
sbb
cld
adc
std
roll
cmp
mov
mov
loopne
lcall
dec
cmp
push
push
dec
sbb
add
orb
hlt
gs
insb
jne
outsl
xor
cmp
dec
mov
mov
sbb
subb
insb
mov
cmp
sub
mov
dec
fmull
in
or
aad
insl
push
cmp
push
jno
ret
lea
jl
mov
por
mov
mov
and
jno
xor
mov
in
push
jb
lret
pop
xchg
jno
jb
jbe
sti
mul
jo
test
imul
lds
inc
cmp
mov
fiaddl
es
ds
lods
mov
les
negl
lret
inc
test
mov
xor
xchg
mov
addr16
jns
loop
stc
mov
push
xchg
or
inc
repz
inc
mov
add
xor
mov
fsubrl
sahf
mov
adc
in
loope
cmp
loope
shr
ret
cmp
sub
rorl
test
sbb
ss
jno
daa
mov
out
pop
mov
push
pop
jp
test
mov
outsb
clc
push
adc
sbb
lods
or
dec
cmp
in
stos
fadds
idivl
clc
rorb
xchg
adc
sub
add
inc
leave
in
jmp
or
ret
movups
inc
and
jl
lods
xchg
lea
pop
outsl
push
bound
imul
push
xchg
xchg
xorb
repnz
jp
loop
cmpsl
sbb
mov
or
mov
mov
cwtl
jb
imul
pushf
ds
sbbb
and
and
loope
add
aas
jp
in
sbb
adc
mov
nop
jo
insb
jns
pop
int
push
std
loope
test
jno
jg
push
mov
les
movntps
repz
jg
sub
sbb
mov
lret
pop
pop
cld
gs
pop
mov
leave
inc
call
mov
and
inc
ret
sahf
sahf
or
sbb
cmp
daa
or
push
ds
dec
adc
jecxz
jecxz
pop
push
inc
mov
cmp
push
sbb
inc
das
inc
out
push
inc
xchg
jmp
pop
jne
loop
int
jp
addr16
adc
lea
daa
add
push
jecxz
jmp
loope
push
lds
mov
rorl
sti
loope
xchg
int
xchg
cmp
rcll
aad
jp
ljmp
mov
bound
xor
xchg
insw
sub
jge
xchg
mov
mov
or
xchg
xor
popf
shll
xchg
add
mov
cld
ret
cmp
out
out
cmp
ret
in
mov
xor
push
ds
imull
fnstcw
sub
repz
outsb
jecxz,pn
fucomp
xchg
xor
gs
push
jmp
mov
or
iret
adc
push
repz
jp
sub
cmp
in
out
cltd
roll
inc
and
cli
cmp
inc
icebp
sbbb
iret
jns
fsubr
fcomp
aam
mov
xor
scas
push
mov
sbb
xchg
cmp
hlt
jbe
inc
or
shll
out
mov
inc
lds
lret
ss
movsl
leave
repz
sahf
pusha
lahf
sahf
add
inc
mov
flds
pushf
fmuls
aad
sbbl
pop
adc
dec
hlt
inc
push
xor
data16
shrl
xor
test
push
fidivl
cmp
stc
fcoml
gs
mov
push
ds
stos
jmp
adcl
pushf
inc
add
push
into
outsb
push
pushl
test
push
push
sbb
js
push
out
fisubrl
and
imul
mov
repz
test
cwtl
xchg
int
adc
sbb
inc
aam
push
out
push
pop
lock
in
enter
ja,pn
jae
stos
pop
mov
movb
aas
add
pop
push
mov
stos
cmp
repz
mov
xchg
call
aam
xchg
adc
aad
ds
xor
mov
xchg
int3
dec
dec
lock
leave
push
subb
outsb
xchg
stos
jo
popf
jmp
idivl
pop
inc
inc
xchg
xor
jb
dec
mov
push
jns
jmp
sbbl
gs
push
stc
or
xchg
dec
sub
and
data16
out
and
in
cltd
dec
loop
inc
jb
adcb
jmp
mov
push
leave
cmc
repz
dec
dec
cltd
mov
mov
fnstsw
fmull
dec
inc
cltd
sbb
mov
fcmovu
in
pop
add
mov
mov
mov
xchg
and
mov
lret
pop
add
data16
lods
mov
push
inc
out
fwait
dec
pusha
xor
insb
in
aad
outsb
and
int3
pushf
sbb
andb
aam
es
mov
hlt
lret
dec
or
inc
int
pop
mov
add
mov
daa
sub
cmp
sub
dec
lcall
leave
xchg
jg
mov
sub
imul
lods
jecxz
xor
mov
dec
out
imul
mov
mov
or
daa
add
dec
mov
std
test
ret
sti
sub
mov
call
add
inc
lea
jnp
clc
push
out
sbb
daa
add
xor
push
call
push
cmpsl
sub
inc
shlb
cmp
mov
pop
push
pop
mov
jg
inc
and
inc
push
out
and
in
mov
xchg
lret
std
cmp
add
clc
add
mov
mov
add
inc
xor
mov
sub
xchg
mov
ljmp
or
jl
jb
jo
pop
jne
sbb
loopne
cmpsl
sti
and
mov
stos
cli
sbb
stos
rcr
dec
fsubrl
int3
sbb
movsl
stos
lahf
xchg
cld
js
sub
cmc
dec
fsubrl
jecxz
pop
sub
shll
adc
xchg
sub
dec
or
inc
test
or
clc
sbb
add
cmpsl
mov
movhps
clc
into
loop
mov
inc
orb
jecxz
scas
loopne
cmp
jmp
or
jmp
xchg
push
cwtl
jno
imul
add
and
dec
mov
sub
mov
mov
mov
repnz
out
loopne
test
pop
push
mov
sbb
fwait
subb
push
jg
pop
bound
js
and
ja
add
sbbl
and
lret
mov
in
mov
push
decl
push
ljmp
mov
mov
repnz
adc
mov
cmpsb
outsl
jns
addr16
pop
jg
pop
inc
xchg
repnz
filds
jecxz
sarl
dec
pusha
fs
dec
and
sti
and
adc
mov
insb
cmp
mov
push
push
test
fdivrs
cmp
cmp
mov
cltd
test
ret
push
adc
sub
push
fcompl
or
mov
or
lret
sahf
sbb
dec
mov
mov
push
cltd
add
or
jl
xchg
or
aaa
ss
call
jo
dec
mov
inc
jge
ljmp
bound
xchg
xor
push
imul
fldcw
lock
mov
int3
xor
dec
fistps
pop
js
test
or
xchg
dec
add
jns
add
shlb
cmc
and
push
mov
movb
pushf
lret
scas
in
mov
cmp
insb
xchg
push
sbb
rorb
pop
add
pop
dec
test
mov
add
inc
push
mov
js
fldcw
add
dec
push
add
test
bnd
pop
mov
dec
sbb
push
rcll
mov
fiaddl
xor
mov
into
xor
inc
xchg
ret
cmp
fstps
ja
xorl
jge
lock
test
push
fs
insl
mov
aad
loope
cwtl
loopne
movsb
data16
sub
fimull
stos
loopne
sub
jecxz
adc
inc
or
ds
outsb
addr16
mov
jae
ficompl
jecxz
cmc
test
pop
dec
stos
dec
cld
push
loopne
frstor
pop
push
rorl
jl
ffree
xchg
sbb
sub
je
mov
sub
pusha
and
testl
mov
lret
lret
aad
push
jle
fdivs
test
flds
xchg
sbb
sti
add
test
jp
xor
sar
mov
fs
or
cmp
add
shl
sarl
push
mov
insl
arpl
mov
inc
dec
cmp
pop
hlt
call
add
fiaddl
aam
imul
fiaddl
push
sti
cmp
arpl
fisttpl
jbe
sbb
xchg
or
and
xor
test
mov
and
cmpsl
jp
std
outsb
movsb
ret
cmpsl
rclb
sarl
call
adc
pop
sbb
movsl
xchg
cmp
out
xor
mov
stos
sbb
cwtl
jmp
test
jb
sbb
mov
mov
sbb
ret
xchg
fs
lods
xchg
pop
jg
mov
rolb
mov
sti
stc
jne
jle
push
pop
clc
push
scas
xchg
xchg
jo
ja
mov
push
xchg
add
aad
jle
pop
insb
mov
xor
out
or
mov
nop
adc
popa
mov
dec
mov
add
cltd
in
jl
sub
inc
inc
or
lds
inc
push
or
mulb
inc
out
dec
cmp
mov
or
jno
push
shlb
jbe
pop
dec
dec
out
and
pop
out
movsb
dec
icebp
les
adc
idivl
mov
mov
shl
pop
mov
insl
mov
jne
andl
fwait
push
sti
cmp
jge
mov
ds
cltd
movsb
mov
sahf
xchg
aaa
lret
sbb
jo
xor
add
xchg
sbb
stos
adc
and
ficomps
and
mov
fldcw
cmp
dec
cld
lods
or
inc
xor
fstps
xchg
mov
dec
sbb
pushf
pop
stc
and
lds
sahf
es
sub
movsb
jmp
dec
jecxz
push
xchg
lea
js
outsl
mov
add
push
inc
xor
orb
outsb
in
ret
arpl
jne
xchg
pusha
inc
sbb
stos
orl
or
jecxz
cmp
mov
mov
aam
push
inc
dec
dec
mov
cmp
dec
arpl
sub
mov
addr16
cwtl
xchg
sub
out
insl
fsubr
push
stc
imul
mov
mov
cli
add
adc
js
lahf
inc
jle
mov
adc
or
mov
gs
jl
jg
clc
and
imul
push
iret
jecxz
xchg
in
mov
clc
xchg
adc
sub
rorl
sbb
sub
dec
lret
fnstcw
movsl
adc
jmp
mov
pop
xor
aad
das
push
dec
sub
mov
fdivl
lds
pop
mov
push
stos
xor
jns
jecxz
ljmp
movsb
mov
pop
xchg
xchg
aas
and
dec
mov
add
stos
lock
pop
push
mov
pop
test
xor
jae
mov
push
adc
jne
inc
mov
imulb
cld
in
mov
or
cmp
loopne
add
decb
pop
mov
mov
ds
js
adc
cmp
inc
cmc
inc
cmpsb
int
cli
sbbb
sub
add
xor
andb
je
inc
int
sbb
cli
cmpsb
insl
sub
lods
lahf
inc
mov
sti
shlb
cltd
sbb
sbb
stos
jg
loop
scas
aam
add
shll
cmp
pusha
inc
cwtl
mov
std
pop
lret
inc
push
test
clc
and
pop
and
xchg
jge
jnp
cli
inc
xchg
fdivl
addr16
adc
and
mov
fcomps
das
sub
ss
repz
daa
stc
outsl
mov
dec
push
dec
cltd
adc
aam
and
iret
imul
into
ss
pop
jo
mov
dec
mov
insl
sbb
jb
cmp
sub
gs
fwait
jge
cli
in
aad
fucomp
aam
sti
adc
repnz
pop
pushf
ss
cmpsb
icebp
rorl
lods
mov
cld
dec
pop
xchg
fbld
mov
xchg
fidivrl
iret
in
pop
cmpsl
bound
imul
mov
and
stos
adcl
and
sbb
xor
jns
pop
ret
lahf
xor
cmp
lods
mov
lahf
addb
pushf
sub
lret
pop
mov
cmp
pop
adc
stc
cmp
mov
xchg
stos
jg
pushf
and
int3
cld
repz
add
addr16
or
insl
jl
xor
movsb
mov
out
push
push
jmp
int3
or
jb
out
and
cmp
fsubrs
sub
fstpl
out
lret
push
push
iret
jl
push
sub
mov
and
std
push
push
cmpb
jmp
insl
jmp
mov
adcl
xchg
xchg
in
jle
xlat
fisubrl
in
outsl
je
pop
inc
test
mov
jno
scas
xchg
adcl
push
lods
inc
aaa
cld
in
ds
dec
jecxz
fadds
filds
inc
sub
or
pop
mov
stc
push
sbb
pushf
je
aas
cmp
mov
push
out
push
push
mov
and
jge
repz
mov
stos
sub
cwtl
test
insb
pop
int
hlt
idiv
jnp
jne
cs
enter
pop
shrl
xchg
cs
pop
mov
xchg
dec
cwtl
popf
add
inc
rorb
sub
int
lods
sbb
inc
mov
xlat
scas
shll
std
outsb
dec
ret
jbe
std
adc
rcl
popf
jmp
adc
out
and
jb
in
out
ret
cli
inc
cwtl
and
sbb
imul
lods
into
int3
mov
in
cmp
add
outsb
dec
in
pop
iret
test
push
jbe
shll
push
or
mov
in
insb
arpl
and
xchg
out
lahf
and
mov
mov
xchg
dec
stc
mov
push
fsubrs
and
and
xor
mov
icebp
jge
jmp
orb
xlat
pop
push
sbb
repz
mov
and
xor
add
jmp
add
out
mov
outsb
ja
cwtl
movsl
mov
ja
pop
sub
arpl
jno
aam
pop
imul
cmpsb
ret
mov
xor
mov
in
or
lcall
mov
mov
into
aas
inc
jb
mov
fidivl
cmc
xchg
repz
jge
jns
ljmp
jb
push
mov
adc
movsb
mov
ror
add
push
fnstenv
rcll
mov
lcall
jmp
sub
lret
into
inc
subb
and
rcrb
sub
pop
ret
push
lods
adc
ret
inc
inc
pusha
mov
test
mov
pop
loope
jmp
pop
popa
mov
cmpsl
gs
mov
push
pop
cld
sub
imul
cmp
inc
or
outsl
scas
loop
cmc
inc
lcall
lods
xor
cmp
ja
cmp
insb
adc
out
gs
push
lods
lds
lret
lods
dec
stos
outsb
cmp
mov
xchg
mov
adcl
addr16
push
push
push
cwtl
jne
fisttpll
pusha
xor
ja
es
or
and
inc
xor
fimull
hlt
ljmp
sahf
jle
mov
nop
shl
addr16
pusha
push
xchg
and
fdivrs
inc
inc
push
xchg
sbbl
xchg
and
aaa
or
rol
hlt
out
rclb
sbb
cmp
int3
push
xchg
and
das
pop
push
mov
dec
pop
test
movsl
popa
mov
loope
daa
inc
aam
push
dec
mov
sbb
inc
out
xchg
pop
sahf
mov
fs
sbb
es
or
mov
nop
xchg
jo
mov
dec
or
push
cmp
jmp
scas
push
in
pop
cli
cmp
adc
dec
subl
inc
nop
jmp
pop
dec
ljmp
idivb
enter
push
lahf
mov
mov
movsb
test
inc
fidivs
out
mov
outsb
bound
cltd
pop
fcmovnbe
lea
mov
push
int3
data16
stos
push
aaa
jge
inc
test
andl
push
stos
jae
pop
xchg
jge
jo
jmp
sar
je
xchg
dec
shl
adc
mov
jl
mov
scas
in
cmp
fsub
mov
jge
cmpsb
jecxz
mov
repz
add
sahf
cmpsb
enter
leave
mov
cmpsl
cld
inc
iret
xchg
int3
rcll
repz
jg
mov
push
inc
jmp
or
sbb
and
xlat
lds
mov
gs
mov
cmpl
out
repz
xchg
mov
pushf
and
and
and
lods
push
and
or
sub
sarb
sub
push
xor
sbb
mov
ret
push
mov
add
inc
cltd
sbb
mov
sbb
push
sub
xchg
repnz
scas
pop
lcall
lods
xor
imul
adc
lahf
sub
adc
push
sbb
fisubrs
mov
stc
fcomps
dec
loop
mov
mov
adc
aad
xchg
ds
mov
aaa
push
add
xor
addb
xchg
out
cmp
xor
mov
je
inc
lea
xchg
xchg
mov
dec
dec
repz
pushf
dec
stos
sbb
hlt
mov
int3
bound
cwtl
cld
sti
pop
icebp
mov
xor
stos
rcll
jbe
cmp
add
pushf
movsb
mov
stos
movsl
stos
fldl
test
icebp
cmp
rcr
hlt
pop
mov
popa
xchg
sub
sbb
cmpsb
jp
mov
fiadds
jno
rolb
mov
fisubl
adc
sbb
mov
xlat
lcall
push
leave
nop
sub
sbb
inc
shlb
icebp
cmp
xchg
lock
cmp
js
pop
mov
push
push
pushl
and
repnz
and
or
mov
sbb
daa
inc
dec
pop
lahf
inc
fsubrp
mov
jo
fs
stos
xor
inc
mov
fwait
jle
push
in
cld
lret
stos
pop
jne
or
xchg
dec
in
ret
orl
or
push
mov
decb
xor
and
jle
mov
cli
jl
outsb
out
lret
icebp
cmovnp
and
mov
dec
mov
rol
repz
icebp
insb
out
stos
mov
xor
cli
test
add
rolb
or
mov
repnz
sub
xchg
push
push
or
sahf
push
push
clc
orb
or
push
pop
imul
leave
sub
ja
cmc
or
les
in
stc
or
mov
dec
mov
xchg
xchg
jge
bound
jae
mov
out
mov
xchg
xchg
lret
aad
jecxz
shll
stc
loope
mov
test
cld
imul
pop
mov
xchg
dec
out
adc
adc
pop
dec
push
jge
js
loop
int3
bound
ss
cmp
jno
add
mov
sub
jne
xor
scas
mov
add
jle,pn
xor
sbb
inc
inc
jl
lock
int3
xor
push
jl
les
add
enter
fisubl
lret
mov
addr16
mul
daa
cwtl
xor
jmp
mov
sub
imul
orl
idiv
aaa
nop
lods
mov
mov
in
aaa
mov
push
leave
mov
mov
orb
nop
cs
shr
sbb
imul
add
nop
in
ds
or
pop
mov
loopne
and
rorb
rclb
aad
lret
sub
adc
aam
inc
sub
cld
insl
sbbl
dec
pop
inc
jge
inc
imul
in
js
xchg
inc
and
cmpsl
fdivl
es
outsb
shll
popf
out
fdivrl
push
into
jg
mov
aam
movsl
cld
inc
es
jb
add
int3
push
inc
sub
jne
or
mov
sub
lock
push
sbb
punpckldq
enter
mov
or
mov
inc
pop
dec
movsl
xchg
inc
inc
dec
test
adc
mov
test
dec
out
xor
lods
and
xor
adc
push
push
test
sbb
push
daa
jle
jle
dec
inc
pop
scas
cmp
xor
pop
jbe
xchg
lahf
repnz
adc
inc
fwait
popa
cs
in
push
aam
adc
push
aad
mov
mov
pop
dec
and
mov
pop
popa
push
jl
loop
adc
decb
mov
cmpsb
add
or
mov
mov
xchg
shlb
test
negl
mov
cmp
movsl
imul
movsl
mov
and
dec
and
xchg
xchg
jmp
mov
mov
sub
push
adc
inc
in
dec
data16
loop
inc
inc
out
int3
lcall
lret
jns
jmp
imul
in
inc
xor
mul
push
mov
mov
dec
inc
push
push
out
icebp
mov
clc
pop
mull
adc
push
adc
mov
int
mov
push
pop
fsts
cmc
cmp
sub
mov
pop
cmp
out
das
and
push
into
cmc
in
les
push
stos
int3
mov
adc
mov
xchg
fisubrs
data16
aad
jne
sahf
lret
jp
ret
jae
sbb
in
rorb
shrl
sub
or
add
mov
or
adc
cmp
mov
jnp
cmp
mov
jb
cld
lea
and
mov
stos
idivb
je
ret
repnz
mov
in
mov
leave
add
in
mov
nop
insl
cmpl
repz
fwait
adc
lods
or
push
push
add
lahf
pop
std
lock
repz
push
push
int3
inc
jmp
fistpll
dec
dec
and
outsb
test
ret
dec
fistps
and
or
push
xchg
insl
pop
sub
test
loopne
es
loopnew
dec
sbb
mov
lods
sub
dec
sub
and
jb
shl
mov
cli
cwtl
dec
dec
data16
push
shrl
and
xchg
stos
cmp
cmp
addr16
aad
aad
clc
mov
mov
or
sbb
mov
gs
push
into
gs
shr
ja
jg
data16
dec
xor
in
or
jmp
and
dec
xchg
xchg
bound
push
adcb
movb
adc
or
js
imul
dec
loopne
into
xor
out
adcb
mov
aas
movsl
xchg
scas
cmp
xor
scas
cmp
adc
and
test
adc
jo
pop
lret
ljmp
mov
cmpl
aaa
sbb
add
jne
scas
or
inc
fs
cmp
xorl
clc
icebp
inc
js
dec
inc
xchg
mov
jae
test
aaa
sahf
in
dec
push
jmp
stos
test
daa
xchg
fiaddl
aas
sar
mov
sbb
sub
mov
mov
daa
mov
inc
pusha
sub
add
mov
or
dec
xchg
push
int
push
xor
push
stos
cld
mov
orl
dec
jecxz
loope
cwtl
and
out
xlat
lock
cs
xchg
xchg
movsb
loop
or
jmp
adc
and
test
inc
xchg
sub
mov
std
mov
out
iret
ficoms
jae
movsl
and
fst
inc
and
push
dec
les
in
adc
cmp
mov
cltd
mov
add
cmp
push
lahf
gs
adc
push
mov
shlb
mov
push
dec
inc
fnstenv
jnp
adc
push
sub
cli
jl
xchg
xor
jmp
insb
cmp
outsb
into
insb
inc
js
fwait
mov
pop
fadds
mov
es
xchg
stos
clc
sbb
dec
scas
mov
push
pop
negl
data16
fnstsw
jb
daa
ds
enter
push
add
or
xchg
push
popf
sbb
jnp
xor
sbb
out
mov
adc
in
adc
mov
mov
sbb
xlat
lret
mov
and
fildll
sub
mov
out
push
shrb
xchg
out
sbb
adc
pop
leave
inc
popa
cmp
jle
adc
sbb
stos
pop
dec
idivb
les
das
xchg
cmp
cmp
push
mov
popl
stos
cmp
into
jne
sbb
je
mov
adc
fprem1
cmp
lock
out
movsb
cmp
faddl
push
rcr
jge
add
call
cmc
xor
int3
test
ret
or
jp
mov
dec
aaa
idivl
clc
pop
int
cmpsb
sahf
pop
mov
pop
sub
inc
mov
pop
or
lea
stos
enter
daa
jbe
dec
lret
mov
gs
stos
ljmp
ja
faddl
xchg
hlt
sub
xchg
mov
push
jne
mov
pop
xor
lahf
movsl
jbe,pt
or
sbb
aas
push
dec
or
ljmp
cmpsb
in
and
fiaddl
mov
xchg
inc
sti
bound
and
inc
fdivrl
cmpsb
fs
jmp
rol
sub
test
jge
lcall
ljmp
xchg
mov
cld
fdivs
out
xor
js
cli
pop
test
cwtl
jb
push
dec
gs
push
mov
push
jl
push
and
clc
cli
push
mov
test
push
cmp
add
rclb
dec
sahf
pop
pushf
sub
call
addl
imul
lods
sbb
jp
push
jno
jp
jge
imul
adc
and
repnz
adc
loopne
push
push
mov
addr16
test
shlb
push
test
add
xchg
mov
sbb
pop
add
push
test
ret
js
xor
pop
dec
lea
mov
pop
mov
cmp
jecxz
inc
push
sub
xchg
insl
and
jne
ret
les
mov
add
stc
loopne
fbstp
out
daa
int3
lds
fisttpll
push
push
aaa
mov
and
fisttps
jo
adc
and
mov
data16
jecxz
cli
push
push
dec
add
adc
int3
xchg
dec
icebp
iret
fadds
mov
out
scas
enter
sbb
inc
movsb
dec
outsl
jg
cmpsl
xor
je
out
xchg
mov
mov
mov
aaa
jne
lods
stos
mov
mov
sbb
mov
jmp
outsl
adc
push
inc
xor
cli
repnz
or
push
xchg
leave
dec
jge
mov
scas
mov
pop
sbb
ret
sub
ftst
cmp
inc
dec
dec
outsb
jmp
inc
sahf
mov
rcll
ja
or
leave
and
pushl
push
jno
gs
push
pminub
mov
xchg
and
sahf
dec
cltd
scas
sbb
sahf
ror
jbe
test
xchg
scas
jmp
test
aam
loop
and
xor
mov
jmp
mov
ds
shrb
pop
mov
jle
fisubrs
pop
imul
rcrl
sub
add
test
ror
outsb
popa
mov
lea
add
out
or
fcmove
mov
cld
xchg
daa
and
jl
cmp
cmpb
jne
push
fildll
xlat
sub
mov
andb
fmull
xor
inc
popf
inc
pusha
enter
mov
jle
or
cwtl
mov
mov
lahf
xchg
int
test
stos
icebp
in
fidivrl
sub
xor
or
mov
mov
leave
fisttpl
push
loope
xor
inc
mov
inc
dec
cmp
fcmovnb
rcll
testb
mov
pop
enter
lret
dec
loop
sbbl
xlat
push
sbb
or
mov
movsl
or
out
xor
add
test
pop
xor
jb
xchg
movsl
jb
lods
fwait
and
enter
test
cmp
adc
push
int3
push
shl
mov
mov
and
xchg
nop
pop
mov
xlat
int
into
cmpsl
push
xor
pop
icebp
jnp
dec
and
jmp
mov
hlt
push
std
outsl
xor
cmpl
sbb
xor
test
add
les
jle
jne
faddp
lahf
lock
xchg
bnd
pop
inc
leave
or
mov
adc
adc
fdiv
out
dec
push
loop
sti
call
and
sbb
add
adc
adc
sub
lret
pop
mov
mov
nop
roll
cli
xchg
fistps
push
aas
adc
mov
daa
sahf
and
iret
adc
repz
inc
shll
jo
cmp
adc
insl
es
call
jbe
insb
sbb
add
mov
sub
mov
adc
push
lods
cmp
push
jp
cmpsl
or
pop
add
std
inc
inc
jge
adc
movsl
cmp
and
test
add
xchg
mov
dec
jnp
stos
test
ror
loop
push
mov
jo
add
lret
inc
fwait
jno
outsl
bound
mov
loop
popf
data16
out
inc
cli
mov
mov
rcrb
mov
js
dec
stos
cmp
cmp
aad
xchg
jbe
xchg
repnz
int3
aaa
mov
scas
int3
sbb
mov
stos
adc
xor
out
cmpsb
sub
mov
mov
into
push
sub
rcll
movsl
sarb
push
fwait
test
ret
dec
stc
jnp
fnstsw
cli
mov
pop
xchg
call
mov
clc
fcomi
mov
popa
andb
mov
mov
inc
movsb
sub
repz
or
mov
xor
and
arpl
adc
adc
inc
enter
dec
and
ss
mov
nop
adc
lds
loopne
push
ror
jo
jne
push
xor
lods
or
int
sbb
and
sbb
dec
or
cmpsb
or
stos
pop
das
fistpl
icebp
mov
dec
cltd
ja
and
arpl
out
xor
in
loop
sub
jb
mov
cmp
mov
dec
xor
cmp
add
imul
loop
lock
rcr
inc
dec
int
adc
stos
rcr
push
cltd
push
push
testl
addr16
push
ffreep
addr16
adc
into
shrl
in
es
cli
nop
in
inc
test
dec
xor
test
jno
insl
sub
sbb
xor
loop
and
mov
stc
xchg
cmp
xlat
and
in
xchg
pusha
loop
pmulhuw
xchg
sbb
push
add
sub
in
adc
cli
hlt
push
adc
sti
loopne
je
shr
aaa
clc
imul
jb
shlb
loopne
sub
cmp
test
jb
test
mov
popf
insl
and
enter
sbb
mov
cli
pop
icebp
arpl
mov
stc
mov
cmp
sub
out
aaa
xchg
cli
pop
aad
fwait
xchg
mov
enter
aad
or
aam
test
push
data16
mov
sub
sbb
rorb
ljmp
or
lock
lahf
and
mov
sbb
xchg
push
jmp
xchg
and
inc
fnsave
inc
jnp
jg
ss
inc
test
mov
mov
ds
sti
dec
add
jecxz
jge
mov
mov
out
inc
or
mov
push
out
xor
fstpt
cli
cltd
repnz
xor
or
aam
mov
mov
lods
or
movsb
and
aaa
pop
test
push
test
jb
xor
fadd
add
push
and
icebp
imul
in
pop
lods
push
stc
rcr
cmp
sub
mov
or
stc
jnp
int
mov
adc
hlt
mov
mov
jne
adc
test
jo
mov
jbe
lret
add
cmp
lcall
mov
mov
mov
mov
ljmp
dec
cld
lcall
icebp
xor
add
sbb
inc
icebp
fisubrs
cld
and
jnp
and
shl
cmp
fwait
add
mov
lods
into
and
xor
lods
lret
jmp
cwtl
pop
sarb
pushf
mov
inc
insb
lods
or
rorb
repz
push
shlb
cld
bound
dec
lea
push
xchg
ja
push
and
stc
pop
addl
and
xor
repz
or
mov
call
aam
pop
outsl
repz
push
loop
insb
adc
nop
nop
mov
xchg
xchg
inc
ljmp
jmp
seta
mov
stc
js
cld
add
jne
add
in
add
add
cltd
dec
int3
pusha
pop
xchg
rorb
notb
or
push
mov
mov
hlt
dec
or
lods
out
sbb
mov
lock
insb
adc
sbb
movsb
icebp
xor
cmc
movsl
int3
jae
ret
outsb
aas
inc
mov
mov
fs
and
jnp
or
dec
lock
stos
xor
aas
sbb
ss
sub
leave
jae
pop
xchg
std
pusha
aam
test
jge
xor
or
std
pop
iret
cmpsl
loope
push
pop
xchg
arpl
xchg
ffree
sbb
ud0
sub
outsl
mov
popf
dec
pusha
mov
add
fisubs
push
inc
add
mov
repz
aad
push
nop
imull
and
dec
sbb
sbb
adc
mov
dec
xchg
fists
xor
lahf
daa
dec
ss
scas
xchg
mov
je
push
xchg
imul
test
testl
mov
gs
adcl
push
inc
xchg
inc
out
dec
out
in
arpl
addr16
int
frstor
mov
shll
sbbl
jnp
adc
test
sub
inc
lea
repnz
repz
cmpsl
push
decl
xor
jo
push
mov
fnstsw
out
and
popf
aad
mov
lea
out
and
insl
ret
inc
cld
sbb
icebp
cmpsb
mov
mov
pop
mov
jp
push
mov
test
and
into
adc
lret
mov
push
xchg
stc
daa
out
pop
sarl
add
addr16
mov
pop
test
or
sbb
push
imul
sub
inc
fldenv
lock
mov
xchg
add
cli
aam
mov
fdivr
rorl
into
add
cmp
dec
jge
fcompl
insb
popa
inc
in
test
jl
cmpsb
pushf
int
and
add
mov
sub
sti
mov
scas
add
cmp
ret
in
xlat
stc
cmp
testb
repz
aaa
int
inc
sbb
adc
in
xlat
dec
jbe
pop
js
enter
orb
call
push
fst
popf
xchg
inc
stos
sub
xor
jmp
ds
mov
mov
push
jp
pop
mov
incb
popf
pop
mov
rcrb
inc
mov
testb
ss
jp
test
push
push
loop
fiaddl
test
mov
or
je
jmp
fxch
sbb
rcll
cmpl
fimull
sbb
sub
push
mov
mov
inc
push
inc
cmp
fidivrl
ja
dec
out
out
adc
loopne
sub
stos
mov
or
outsb
add
lds
subb
icebp
lea
inc
jne
xor
add
jmp
mov
xchg
mov
mov
sbb
push
fs
or
or
fistpll
mov
iret
cmpsl
cs
xor
cmp
or
and
outsb
aas
adc
mov
sbb
ljmp
js
fisubs
andl
mov
in
scas
fdivr
jg
test
movb
inc
stos
dec
imull
sbb
sbbl
shrl
or
cmc
cwtl
stos
dec
or
stos
or
jmp
jmp
popa
cltd
rcrl
push
mov
lret
xchg
or
addr16
push
mov
add
clc
into
mov
jmp
push
cmc
or
mov
arpl
lcall
out
xor
mov
aad
pop
data16
out
xchg
mov
popl
int
mov
inc
cmp
inc
push
fbld
jmp
insb
push
sbb
push
ret
xor
out
cmp
pop
cli
jb
test
std
pop
fs
and
jl
iret
sbb
jg
ljmp
subb
fwait
setne
mov
icebp
xchg
xchg
popf
pop
fucomp
mov
shll
mov
xchg
pop
and
or
and
adc
sub
mov
cmpsl
loop
stos
adc
or
sub
jae
mov
mov
aas
sub
or
stos
in
out
jne
scas
jle
imul
dec
sbb
cmp
psubsb
or
push
jl
insb
outsl
or
test
jmp
lret
icebp
cwtl
mov
movsl
movsb
xchg
sub
push
pop
pop
mov
adc
int3
mov
icebp
sbb
rcr
dec
adc
ret
pushf
add
fdivp
adc
or
jbe
sbb
xor
subb
int3
stc
lea
jns
cld
stc
in
mov
cwtl
jl
add
adc
mov
xchg
nop
rep
cwtl
cs
dec
inc
sub
sbb
cli
xchg
push
cmp
push
push
mov
clc
mov
or
pop
je
mov
jecxz
pop
fadd
sub
scas
push
dec
mov
mov
jp
fcompl
sub
xchg
xchg
xor
push
sbb
add
pop
mov
nop
stc
mov
add
shlb
andl
push
outsb
fs
add
inc
jp
dec
fmuls
clc
add
shrl
xchg
and
xchg
ret
movsb
xchg
dec
sti
lret
push
adc
into
xor
cmpsl
xchg
add
mov
out
stos
adc
gs
push
cmpsl
adc
cld
es
jmp
scas
lods
outsb
jl
test
push
movsl
mov
popf
dec
push
dec
into
mov
mov
ss
cli
pop
sub
dec
sbb
jl
test
subl
cmp
or
and
ret
pop
popa
rcrb
sbb
and
mov
out
daa
andb
test
adc
ds
sbb
jge
clc
lds
xchg
push
out
nop
pop
test
add
cmpsb
flds
xor
outsb
pop
into
outsb
mov
cmp
lods
xor
lods
cmpl
lods
xbegin
cmp
ja
mov
movsb
jnp
ret
xlat
rolb
jb
mov
xchg
lea
xlat
popa
out
mov
scas
in
pop
test
cmpsl
xor
pop
movsb
fildl
or
scas
sarl
cld
aaa
jmp
cmp
pushf
xchg
loope
mov
adc
fs
mov
add
cmpb
sbb
mov
push
ret
or
jo
sahf
sub
inc
jge
clc
fs
and
fnstcw
dec
fs
add
popf
pushf
mov
orl
insl
jge
add
popf
pusha
push
imul
or
pop
int3
pushf
imul
adcb
lods
ja
popa
mov
jnp
push
cmp
xchg
jl
sbb
xchg
pop
pop
xor
divl
sbb
add
inc
mov
loopne
jns
dec
outsb
lret
cld
adc
sbb
sbb
pop
stc
add
xchg
pop
cwtl
jp
fadds
inc
xor
mov
and
mov
cmp
mov
inc
sarb
cwtl
jg
jbe
out
and
inc
scas
sbb
mov
cmp
arpl
orl
imul
mov
xchg
insb
pop
sub
xor
cmp
test
stos
test
mov
mov
cmpsl
cs
dec
dec
mov
fwait
mov
sbbl
ja,pt
xor
xchg
push
es
test
pop
aad
or
mov
cmp
inc
sbb
mov
cmp
imul
inc
cmp
xchg
repnz
aad
sbb
subl
fistps
dec
push
jecxz
add
jo
and
xor
aas
fildl
sbb
addr16
dec
aam
pop
repnz
mov
cltd
cmp
nop
inc
aad
int
arpl
and
sti
into
and
adc
icebp
jbe
or
cmp
cwtl
cmpsl
subb
cmp
mov
dec
inc
lret
cmc
call
dec
jo
sbb
dec
push
in
call
fcoml
pop
jge
jno
call
bound
add
push
xor
push
mov
test
xchg
xor
adc
mov
fmull
cmp
out
lret
pushf
sub
cmpl
jbe
popf
fistpl
dec
push
lods
imul
adc
mov
repz
push
mov
fildll
or
push
popf
fs
add
aaa
dec
jmp
ds
dec
test
lea
xor
mov
mov
mov
clc
lds
mov
push
jp
inc
scas
in
xor
jge
cli
or
mov
inc
inc
mov
add
push
dec
add
bound
or
mov
outsl
push
cwtl
sbb
ja
add
jb
push
pop
xchg
inc
jp
loope
inc
push
xor
and
fstp
dec
pop
add
sub
aam
call
and
arpl
arpl
repnz
mov
dec
call
hlt
sbb
xor
and
daa
in
jo
mov
rorl
add
cmpsb
sbb
filds
fst
es
or
into
ja
add
inc
mull
mov
dec
cmpsb
sub
test
cs
int
pop
push
aad
in
pop
jno
adc
jbe
int
aas
lret
imul
loope
mov
inc
sub
cmp
jl
jae
loopne
shr
xor
xlat
dec
clc
aaa
int
icebp
sbb
rolb
ret
jae
mov
repz
xchg
mov
mov
jnp
test
andl
push
cmp
int
je
les
lcall
int
xchg
xor
fcomps
mov
out
dec
pop
pusha
cmp
add
adcl
stc
mov
sbb
out
mov
sti
push
add
pop
add
dec
roll
push
dec
xchg
sub
lret
jmp
fidivrs
leave
push
mov
pop
and
imul
dec
in
mov
or
dec
xor
lret
insb
adc
pop
dec
mov
vpavgw
jl
fisttpl
les
cmpb
dec
leave
or
sbb
call
and
xor
mov
jecxz
push
mov
jmp
jo
sbb
jmp
mov
and
jge
sbb
jle
xor
push
lahf
daa
sbb
xchg
pop
les
xchg
cmpxchg
pop
arpl
or
and
addr16
sbb
fs
dec
rolb
leave
mov
cmc
cmp
repnz
repz
ds
mov
pop
test
xchg
sub
cmp
fldenv
lret
sti
adc
hlt
fsubrs
mov
mov
dec
in
pop
add
dec
movsl
jecxz
or
popa
mov
out
xlat
js
lods
je
pushf
mov
inc
push
push
out
in
popl
xchg
and
pop
and
mov
loop
scas
and
fstl
test
pop
jmp
movsl
and
imul
add
lods
dec
loop
cld
mov
xor
insl
mov
test
outsb
sub
xor
mov
into
xor
xor
mov
movsb
jns
dec
or
inc
test
cs
dec
adc
mov
imul
adc
mov
adc
mov
arpl
in
pop
les
decl
es
or
shl
xchg
xchg
ljmp
inc
test
add
les
jg
and
mov
std
aam
movsl
fcompl
mov
fisttps
lds
or
add
sbb
lods
and
and
or
dec
pop
mov
sub
movsb
mov
and
mov
pushl
xchg
push
xorl
popa
lret
cltd
das
sub
jmp
mov
push
addr16
push
xchg
inc
and
mov
jmp
icebp
sub
pop
inc
pushf
fiadds
andb
fists
ret
stos
lods
scas
xchg
stos
rolb
lcall
mov
cmp
jecxz
mov
push
fs
jne
bound
jno
adc
jmp
mov
aas
jl
push
mov
aaa
inc
pop
pop
fwait
loop
mov
lahf
popf
test
inc
mov
pop
icebp
pop
pop
xchg
hlt
ficoms
jg
int3
aam
add
addr16
fbstp
stos
rorb
lret
test
xchg
sbb
popa
sbb
cltd
cmp
sbb
mov
pop
loop
popf
sbb
mov
push
movsb
dec
and
gs
and
pop
xchg
popf
test
or
in
mov
xlat
push
push
insb
pushf
pusha
mov
mov
fdivrl
jge
nop
int3
mov
scas
pop
movsl
fsubrl
jns
inc
movsl
in
movsb
mov
mov
sbb
inc
out
xchg
scas
lock
add
jecxz
iret
dec
xor
and
sti
xchg
sub
xor
shrl
ds
outsb
ret
test
into
out
jp
xor
cmpsb
fnstenv
mov
cmpb
and
push
pop
mov
xchg
and
pop
daa
jmp
xor
enter
daa
adc
lea
fiaddl
aad
cld
imul
lret
in
and
xor
cmp
sbb
icebp
mov
test
jp
stos
fldenv
dec
call
pop
test
shll
iret
sbb
pop
push
jp
out
ficoms
fldcw
gs
imul
fiaddl
or
fcoms
inc
mov
in
ja
stos
int3
jns
xor
loopne
add
mov
inc
in
add
nop
sub
cs
mov
data16
and
enter
jecxz
pop
sbb
loop
leave
ret
lcall
xor
xor
sub
into
inc
int3
rorb
dec
pusha
lret
out
lods
sbb
int3
enter
gs
popf
pop
imul
adc
cmp
test
movsl
ret
dec
or
pop
and
adc
lock
and
cmp
cmpsl
xchg
add
test
pop
bound
jge
cmpb
adc
pop
sub
dec
nop
loopne
mov
mov
or
sub
cs
sub
aam
dec
mov
mov
adc
and
shl
jg
ds
ret
sub
sbb
push
repnz
jg
jo
test
push
jle
or
pushl
in
lcall
jmp
mov
jns
fidivrl
push
mov
mov
rclb
pop
fistpll
lret
pop
push
rcr
mov
daa
test
sub
cli
std
loopne
add
jecxz
mov
rclb
std
popf
inc
int3
fwait
push
mov
and
or
mov
cmpsb
xor
push
pop
ds
xor
push
icebp
in
xchg
and
fldt
adc
test
aaa
dec
divb
mov
inc
insb
mov
fdivl
xor
xorb
sub
mov
jmp
lret
add
mov
insb
rcr
xchg
in
test
push
mov
mov
call
cmp
nop
inc
mov
xchg
push
push
xchg
pop
jecxz
sarb
in
fsubrl
add
push
orl
hlt
cld
sbb
mov
mov
jb
ja
mov
pop
mov
dec
fisubrl
pusha
or
dec
dec
or
jno
repz
jmp
cs
xchg
mov
rorl
out
cmpsb
std
xchg
adc
out
outsb
jge
xor
cld
mov
pushf
and
jp
inc
sbb
xchg
fstps
sub
aaa
lock
and
ficomps
pushf
cwtl
jmp
jns
iret
xchg
pop
xchg
and
add
push
out
fnstcw
pop
sbb
pop
enter
mov
lods
mov
int
fisttpll
push
dec
fisubs
fcoml
pop
xor
sbb
fistpl
sub
xchg
scas
jno
lcall
adc
ja
adc
add
in
fcomip
popa
push
loope
fcomps
mov
push
ret
push
cltd
int3
jg
loope
push
mov
xchg
push
and
lods
or
dec
mov
frstor
bound
cli
cmpl
andb
out
fisubrs
cmp
in
and
dec
sarl
jle
clc
mov
sub
lret
pop
repz
lods
or
jmp
fdivs
push
int
rcrb
pop
cs
jns
rcrl
dec
outsb
sub
jnp
js
lea
ficoml
cmp
je
data16
sbb
test
jge
jno
push
je
in
das
xor
leave
xchg
or
rclb
jns
out
jg
imul
mov
cmc
lods
sbb
mov
adc
dec
mov
mov
jnp
dec
cmp
in
test
out
cs
xor
push
scas
into
xchg
std
sbb
test
pop
cmp
xchg
out
lcall
jbe
pop
push
adcl
xchg
test
jecxz
clc
jno
pop
pushf
mov
dec
pusha
mov
fwait
das
call
sahf
add
cmp
and
lea
clc
sub
sbb
dec
cmp
sub
mov
mov
mov
pop
xor
cmpsb
test
jp
inc
push
pop
jecxz
add
adc
mov
clc
mov
int3
inc
sti
loop
sbb
fdiv
ret
sbb
cmp
or
rcll
push
mov
rcrb
clc
dec
dec
cli
daa
divl
int
push
rcr
cmp
loopne
out
jmp
popf
sahf
ret
pop
out
cmc
adc
mov
xchg
call
mov
cld
mov
sbb
lock
lods
std
pop
inc
inc
jo
jo
out
xlat
and
jg
aaa
mov
cmp
pop
pop
inc
or
mov
pop
lods
push
add
xchg
into
adcb
jno
mov
aas
cmp
push
ja
cwtl
jae
cmpb
lds
push
leave
out
and
enter
outsl
je
xor
cmp
test
shrb
pop
cmp
js
adc
std
sbb
pop
mov
rcrb
sbb
cmp
mov
mov
shlb
jl
mov
xor
cli
movsb
shl
add
sub
cmp
sbb
xor
test
mov
sbb
dec
test
divb
loopne
pop
iret
adc
sbb
loopne
pop
or
mov
decl
sbb
std
xor
pop
out
test
jg
out
mov
test
mov
mov
cmp
dec
jb
and
jl
or
cmp
repz
add
xor
mov
or
cltd
push
or
mov
pop
mov
or
repz
cmp
or
mov
mov
mov
popa
xchg
cs
iret
xchg
push
js
call
outsl
xor
or
push
lret
or
xchg
sahf
mov
pushf
jl
xchg
lods
cld
mov
jle
xchg
push
je
mov
out
xor
adc
imul
popf
outsl
out
push
testb
mov
mov
adc
adc
cwtl
lahf
aas
push
xor
in
data16
ret
cmc
ffree
add
je
sub
out
aas
adc
mov
cmp
mov
ret
sbb
xor
adc
jns
iret
ret
popa
jp
outsl
bound
and
pop
outsl
mov
mov
loope
mov
pop
cli
adc
push
mov
xchg
scas
cmp
fs
push
push
and
cwtl
fwait
jno
push
cmc
inc
pop
test
jg
ljmp
jge
jl
xchg
lret
aad
imul
das
adc
xchg
stos
or
arpl
aas
mov
and
andl
test
lret
push
cmp
lcall
pop
rcr
xchg
les
inc
cld
sbb
fwait
in
mov
lea
mov
jle
sbb
jp
bound
sbb
out
lahf
aad
test
data16
cmpsb
and
cmp
lods
mov
pop
clc
dec
mov
cmp
and
cmp
loope
stos
push
jl
xchg
add
jb
mov
jge
in
repz
aam
push
ds
xorb
or
cmp
fsubs
cli
mull
pop
lret
mov
std
mov
testb
shlb
dec
sub
test
inc
test
jge
lods
test
imul
or
je
lock
or
push
aad
push
add
jae
aaa
inc
push
ret
sbb
testb
pop
ja
mov
es
inc
iret
gs
insb
in
filds
cmp
sub
sub
cmpl
pop
call
loopne
xor
cli
leave
cs
test
push
das
xchg
add
sub
lret
and
in
loopne
pop
adc
int3
cmp
shrl
ljmp
jns
ljmp
test
inc
inc
pop
es
pop
lock
mov
and
js
loop
inc
sbb
pop
das
mov
das
icebp
add
mov
inc
addr16
int
and
cld
je
aaa
rcll
enter
nop
nop
adc
aaa
imul
xchg
mov
pop
xchg
lret
mov
je
test
movsl
je
sub
imul
lahf
mov
out
mov
push
div
ret
cwtl
nop
repnz
dec
mov
dec
pop
imul
loopew
cmp
nop
adc
fimull
mov
pop
andb
test
mov
mov
mov
pop
cmp
dec
enter
decb
lods
or
loop
mov
push
fsubrl
fsubrp
sti
jae
jbe
push
ds
iret
cmp
bound
push
mov
loopne
insb
out
pop
or
and
push
pop
add
fdivrl
cmp
rcl
sbb
mov
xchg
xchg
pop
xor
pop
dec
insb
mov
dec
push
jo
mov
mov
rol
test
sbb
aam
mov
mov
rorl
xchg
add
jns
push
mov
xchg
sbb
cld
cmp
cltd
inc
bound
xor
in
outsl
sti
xchg
cltd
and
jno
iret
dec
adc
mov
cmp
daa
clc
xor
les
push
sbb
dec
hlt
push
xlat
or
xor
movb
popa
movsl
pop
jbe
dec
outsl
stc
sti
push
dec
andps
xor
xchg
cmp
sbb
mov
repz
inc
movsb
mov
inc
sub
aas
pop
adc
adc
mov
out
xorb
add
sbb
jecxz
mov
std
lret
shlb
rcrl
mov
insl
cmpsb
sub
and
test
mov
xchg
mov
mov
adc
out
cmp
xchg
insl
lock
or
pop
xchg
cmp
mov
or
jo
imul
mov
mov
jecxz
or
cmp
xlat
in
pop
mov
ljmp
sub
mov
mov
xchg
xchg
cmp
lret
dec
hlt
mov
outsl
pop
dec
cmc
addb
in
imul
cmp
push
lret
jae
or
xor
out
mov
leave
lock
insl
int3
or
idivb
scas
jno
daa
hlt
test
cltd
in
push
loopne
xchg
sub
pop
add
push
mov
sub
push
gs
push
and
ss
shrl
js
mov
xchg
leave
pop
push
push
aad
mov
out
add
lgs
mov
jle
aas
out
adc
xchg
test
out
testb
inc
in
ja
lods
cli
test
jae
sbb
sbb
pop
xlat
movsl
jg
mov
arpl
add
cmc
xchg
in
xchg
imul
aad
fidivl
aas
or
jnp
divl
cmp
mov
outsb
lret
in
ror
dec
fists
inc
je
rcll
jnp
fwait
cmp
lahf
leave
mov
pop
sti
mov
daa
or
mov
leave
pusha
or
xchg
fisttpl
out
mov
test
out
cmc
add
insl
add
fisttpl
pop
sub
jle
fs
mov
test
dec
and
pop
mov
in
leave
out
lcall
jae
aad
sbbl
setb
jg
call
inc
push
int3
sub
xor
mov
loopne
test
mov
call
icebp
push
xor
inc
mov
cmpsb
mov
inc
mov
andl
pop
dec
sbb
stos
mov
iret
and
jns
mov
inc
push
dec
pop
icebp
mov
push
das
pop
cmpsl
in
mov
push
dec
cmpsl
add
rorb
push
xor
cli
nop
cmp
and
mov
psllw
mov
pop
pop
aaa
and
icebp
loopne
ds
xorb
push
mov
mov
pmaxub
xchg
sti
mov
addr16
and
movsb
dec
in
loope
jp
push
mov
push
xchg
int3
mov
subl
stos
iret
lret
sti
mov
sub
fdivrs
mov
data16
sti
xor
sub
sub
lock
pop
inc
scas
adc
in
xchg
in
test
jne
andb
in
in
icebp
add
aad
fstpl
inc
arpl
enter
dec
or
push
mov
mov
lods
add
loopne
int3
stc
pop
cmp
mov
dec
clc
mov
jmp
ss
pop
shrl
icebp
sbb
and
aas
mov
xchg
pop
rcrl
jecxz
push
leave
gs
push
out
addr16
pmuludq
sarl
insl
out
das
sbbb
and
ds
sbb
testb
xchg
jnp
dec
cmc
inc
rclb
lock
inc
add
xor
mov
xor
mov
ja
mov
shlb
sub
cmp
add
daa
jb
mov
loope
cmc
fsubrs
sbb
outsl
cmpsl
mov
or
inc
jg
shll
cltd
push
sti
js
add
xchg
mov
pop
mov
sbb
sub
hlt
leave
xchg
pop
lret
xchg
movsb
ret
js
mov
jno
mov
mov
add
mov
push
push
cltd
ret
adc
lock
dec
or
lds
std
or
lods
movsl
pop
arpl
jmp
pop
xor
subb
andl
xchg
xchg
in
jo
mov
lods
and
std
or
jne
dec
xchg
lahf
mov
pusha
and
pop
mov
int
aas
fisubrs
jecxz
xor
inc
les
sbb
mov
pop
insl
jecxz
cld
xor
test
dec
adc
ret
push
inc
jo
incl
scas
mov
pop
sub
aad
jge
mov
inc
stos
xor
insl
popf
fidivl
sbb
idiv
fstps
adc
xchg
inc
dec
dec
nop
pop
add
xor
mov
imul
loope
ret
fmull
int3
lea
icebp
push
adc
pop
neg
sbb
lcall
cmp
jne
cli
add
shll
mov
scas
jmp
gs
inc
mov
lcall
je
stc
mov
popfw
mov
dec
and
loopne
lcall
ja
vpaddb
outsw
add
daa
add
mov
in
les
out
lcall
fwait
mov
cmp
adc
es
test
fimuls
and
dec
inc
and
xor
fs
and
outsb
mov
icebp
in
filds
out
pop
jns
push
outsl
mov
add
push
sbb
ret
xchg
push
leave
popa
xor
rcr
mov
push
outsb
sbb
lds
dec
xchg
fidivrl
jp
xor
ljmp
pusha
dec
negb
push
lea
sbbl
stc
shlb
sub
push
ret
cli
icebp
data16
cmp
pop
mov
pop
leave
xor
or
dec
imul
or
mov
jg
fisttps
mov
std
aad
jno
in
test
push
jbe
jbe
cs
cltd
cmp
mov
adc
push
adcl
popf
sbb
lea
or
stos
add
bound
lods
lret
or
push
imul
adc
sub
adc
scas
sbb
flds
xchg
push
sti
lods
out
mov
data16
and
nop
push
insl
adc
jb
gs
or
adc
mov
xor
rorl
pop
test
ret
notb
and
not
pop
dec
inc
out
aam
test
icebp
rorb
jo
clc
push
les
mov
mov
pop
sbb
jno
mov
jbe
add
scas
mov
inc
dec
inc
aad
in
jnp
fdivp
push
adc
sub
adcl
in
mov
or
inc
xor
jnp
mov
push
rorb
dec
aaa
mov
pop
inc
int
sbb
aad
push
adc
bound
test
xchg
scas
push
or
stc
add
sub
jne
mov
adc
in
pop
jecxz
bnd
adc
adc
push
add
lret
ret
sbb
dec
jmp
dec
lret
inc
cli
sti
or
in
or
aas
add
adc
pop
fdivl
push
cltd
das
xchg
cmp
jbe
cmpsl
mov
xor
mov
sub
jp
xchg
xor
add
flds
pop
repnz
or
loopne
mov
outsb
lds
push
in
ds
adc
aad
mov
mov
leave
sti
scas
fld1
mov
jl
pop
int
movsl
adc
inc
or
es
pop
fs
ja
pop
add
das
fyl2x
aam
mov
outsb
pop
inc
dec
or
xchg
cmp
pop
mov
jle
aad
inc
lds
ret
fcmovnbe
ljmp
in
daa
sub
mov
mov
add
and
inc
test
inc
mov
fists
mov
or
lods
lods
push
icebp
inc
lock
ret
jge
mov
push
incl
js
jle
push
in
sub
mov
mov
jne
loopne
sbb
push
cld
int3
aam
cmpb
sahf
insl
jmp
xchg
jb
xor
mov
sub
or
xchg
dec
sub
mov
xor
clc
arpl
into
adc
dec
int
sahf
loope
ss
mov
mov
in
fnstenv
addr16
jb
mov
out
pushf
xchg
cmp
pop
xchg
mov
test
jp
add
mov
bound
clc
jns
shlb
jae
icebp
pop
jbe
ds
or
cmp
popa
push
shrb
out
clc
inc
and
in
sub
gs
mov
sub
out
adc
scas
decb
adc
fldenv
mov
fucomp
bound
cs
and
sub
ret
stos
bnd
loopne
rcr
fwait
add
mov
sbb
and
js
adc
aam
sbb
inc
mov
add
jp
jnp
mov
cli
jmp
add
inc
mov
jb
lret
adc
jle
jge
cmc
mov
sub
inc
ret
or
stos
leave
and
ds
popf
adc
bound
push
popa
outsl
fisttpll
cld
mov
lods
in
push
pushf
pusha
sbb
or
mov
mov
inc
scas
mov
adc
sahf
notl
popf
mov
sub
adc
icebp
int3
fwait
int3
adc
std
push
cmp
aam
aas
push
jg
sbb
xlat
sarl
mov
mov
into
fs
out
jl
sub
cli
push
xor
mov
jl
and
mov
push
inc
mov
xor
add
test
xlat
xchg
out
push
dec
cmp
push
dec
inc
test
xor
cmp
xor
sub
mov
and
rclb
pop
push
dec
sub
xor
push
jl
and
fbld
cmp
lret
pop
jbe
adc
pop
out
inc
dec
mov
int
push
sub
jge
aaa
mov
push
xor
fcoms
stc
repnz
les
dec
into
shl
jmp
test
inc
ret
repnz
ss
int
repz
jecxz
js
pusha
mov
popa
cmpsl
xchg
aad
jne
inc
js
pushf
leave
call
sub
pop
sub
lods
sarb
sub
jo
rcrl
lea
cwtl
cwtl
iret
orl
jp
push
xchg
pop
inc
mov
jl
xor
push
or
lret
jbe
das
or
cmp
arpl
out
ret
adc
mov
fldt
pop
dec
add
sub
cmp
ret
xlat
rorb
popf
out
test
mov
loop
in
out
add
movsb
fbstp
ds
fidivrs
pop
add
pop
adc
aad
test
cmpsl
add
lcall
or
sbb
push
pop
cmp
dec
inc
push
sbb
shr
jns
es
addr16
push
insl
sub
repz
xor
sarb
mov
xor
insl
jl
cltd
es
call
mov
cmp
ret
out
ror
sbb
test
cmp
enter
xchg
ret
mov
ljmp
jbe
and
ficoml
mov
fcomps
shll
inc
mov
pop
cmc
insb
sub
and
int3
push
lcall
cmp
int3
mov
addb
sar
mov
ret
jp
bound
in
rcll
jle
jo
rorl
idiv
gs
icebp
in
popa
int3
mov
enter
pop
lock
jae
jp
dec
jg
jns
xor
push
stc
lcall
cmp
sub
dec
arpl
mov
or
xchg
cmp
mov
ret
cmpb
rclb
dec
addr16
popf
cmp
or
hlt
mov
aaa
lahf
enter
scas
jecxz
mulb
pop
fucomp
push
xor
pop
fidivs
sbb
jge
mov
test
loope
cld
inc
sarl
repz
mov
mov
mov
ficompl
das
stc
or
cld
fcompl
mov
pop
sub
dec
rorb
sar
daa
adc
xchg
enter
and
out
arpl
jnp
and
lock
mov
sub
xor
lret
cli
mov
popa
cmpl
or
lea
inc
mov
sti
xor
enter
enter
addr16
addr16
shlb
das
pop
ret
les
xchg
leave
and
mov
add
jae
out
xor
scas
cmpsb
mov
mov
push
jbe
xchg
or
jp
mov
cmp
xchg
cmpsb
push
push
outsl
sbb
cmp
push
cmpsb
sbb
dec
iret
pushf
mov
xchg
shlb
enter
add
add
and
cmp
sbb
scas
cld
adc
clc
movsb
push
mov
mov
cli
inc
jo
push
arpl
xbegin
sbb
cmpsb
xor
jl
mov
fs
adc
das
repnz
mov
mov
ds
filds
imul
add
sarl
xor
ljmp
pop
dec
or
and
and
pop
cmp
xchg
jl
cmpsb
push
adc
xor
add
clc
js
ja
pop
mov
or
das
cmp
shlb
out
and
lods
into
xlat
fdivs
mov
daa
pop
test
xor
lods
xchg
std
stos
xlat
xchg
jmp
xchg
push
jecxz
mov
movsb
jne
cmpsb
jp
jl
aas
shlb
dec
jbe
les
xor
shl
fimull
pop
mov
mov
movsb
cmpsb
cld
shrd
adc
loopne
xor
fistpll
test
dec
andb
or
mov
shl
fsts
sbb
in
sbb
add
sub
add
mulb
out
add
leave
dec
popf
mov
filds
lock
push
and
pop
lret
or
mov
ret
sbb
iret
inc
xor
les
dec
pop
add
test
fwait
cs
cs
int
stc
and
outsl
cmp
scas
jo
test
and
adc
adc
icebp
inc
dec
and
mov
mov
inc
and
loop
mov
lahf
fs
cwtl
test
dec
cmp
inc
xor
es
mov
xor
jbe
sbb
mov
pop
aad
iret
mov
rcrb
push
stos
hlt
push
imul
push
out
mov
mov
shlb
mov
inc
or
xchg
add
sbb
repz
mov
js
orl
icebp
clc
outsb
std
cmc
inc
bound
jge
idivb
xchg
jg
mov
pop
mov
and
rolb
jnp
add
imul
xchg
sbb
cwtl
mov
xchg
insb
inc
in
push
sbb
dec
add
pop
pop
test
jge
sub
mov
sti
inc
inc
clc
cmp
stc
popf
std
mov
dec
cltd
push
inc
sbb
sbb
aad
aad
cli
arpl
test
xor
mov
pop
mov
sbb
notb
sahf
jb
dec
sbb
xor
xor
or
imul
inc
stos
or
inc
cmp
into
imul
es
bound
and
xor
xor
lahf
pusha
popf
mov
push
sbbb
dec
push
dec
jg
cmp
jnp
pop
ret
dec
cwtl
mov
xor
push
and
cmp
test
jg
xchg
popf
push
les
mov
in
inc
jno
pop
xor
popa
jb
sub
loope
std
adc
fidivl
je
cli
fwait
mov
jnp
sbb
mov
or
cmpsl
in
jne
iret
mov
mov
xchg
stos
and
cmp
mov
cwtl
gs
fldpi
mov
jl
push
adc
mov
inc
cmpsb
negb
dec
jns
sbb
shll
cmp
mov
sub
xor
hlt
inc
dec
stos
or
lea
jmp
ljmp
pop
clc
bound
aaa
jb
repz
ja
mov
mov
lock
pushf
push
push
aam
scas
cmp
xlat
or
scas
out
arpl
sti
pushf
out
fimuls
gs
adc
inc
ffree
cmpsb
lret
mov
hlt
xchg
gs
aam
pusha
add
and
jmp
push
mov
adc
or
scas
imul
sub
call
cmpb
xor
jg
stc
in
test
sahf
test
stos
insl
jl
fidivrl
hlt
ror
fisttpll
inc
daa
adc
pop
int3
cmp
mov
sub
out
push
js
or
sub
stos
sarb
in
push
sete
sbb
fimuls
popa
mov
jge
lcall
jno
mov
imul
popf
imul
lock
mov
jg
mov
mov
shll
inc
mov
sub
cmp
pop
mov
push
sub
push
push
jno
xchg
fcmovne
ret
enter
inc
push
pop
pop
xor
bound
test
cmp
in
mov
cmp
cmc
imul
rolb
xchg
fstl
add
outsb
xchg
fbstp
jmp
dec
xchg
xor
pop
icebp
sub
mov
and
mov
or
mov
pop
dec
inc
loope
or
and
mov
xor
mov
or
xor
lock
or
or
xor
imulb
gs
ljmp
cli
loope
and
jne
mov
jno
xorb
out
call
inc
inc
or
bsr
loop
inc
xor
decl
sub
lcall
push
jae
push
push
repnz
or
clc
ret
ss
sbb
sti
xor
loop
sbbb
dec
inc
loopne
sti
inc
jle
pop
roll
sub
outsl
into
fdivs
pop
dec
inc
fcmovnb
movsl
pop
addr16
mov
scas
add
aad
jmp
fucomip
nop
fdivl
adc
sti
imul
ret
push
add
mov
outsb
pop
hlt
and
imull
cmp
xlat
in
scas
or
pop
xor
ljmp
add
and
test
jae
jmp
lods
mov
or
lods
push
add
mov
arpl
test
add
inc
add
daa
and
jmp
testl
movsb
fildl
mov
pop
sbb
mov
mov
out
sbb
adc
xlat
push
add
mov
jne
das
jnp
sbb
xchg
push
lcall
xor
cmp
mov
pop
outsl
addr16
pop
dec
js
je
push
into
lds
cmp
mov
test
iret
fldcw
ret
add
push
and
out
add
or
cli
pusha
push
push
sbb
push
mov
jbe
pop
pushf
push
mull
and
call
mov
adc
mov
arpl
test
and
sub
testb
fisttps
mov
dec
les
cmp
in
add
push
test
cmpl
or
mov
insb
push
std
and
push
sub
ja
repnz
pop
movb
popf
sahf
dec
jl
loopne
in
inc
jbe
or
cmp
mov
add
test
ja
xchg
xlat
xchg
vcomisd
inc
fiaddl
inc
aaa
sub
pushw
fwait
xrelease
cmp
and
outsb
mov
push
popa
inc
sub
mov
push
mov
jns
sbb
in
seto
mul
fwait
ss
push
jo
mov
inc
nop
mov
push
sbb
xchg
xchg
jl
mov
mov
fnstcw
rclb
fwait
xor
movsb
mov
les
out
pop
pop
add
mov
sbb
adc
add
fldt
aaa
cmp
pmaddwd
fwait
icebp
pop
jp
cmpsb
call
mov
and
push
clc
cli
inc
jne
jp
fwait
pop
mov
in
sub
sahf
inc
add
rorb
fwait
jns
push
loop
add
sbb
mov
pop
enter
fucomp
je
inc
add
mov
call
xchg
sbb
adc
stc
stos
jmp
push
imul
jg
scas
pop
sub
es
fdivr
push
lret
mov
mov
jge,pn
xlat
xorb
out
repnz
inc
lahf
insl
lds
mov
loopne
lcall
and
fsubrs
xchg
inc
mov
aam
mov
inc
add
lret
jg
imul
push
clc
inc
dec
pushf
out
pop
push
or
or
push
push
pop
ss
adc
sub
stos
repz
dec
pushf
sub
add
mov
call
sub
mov
cmp
fisubrs
fists
xlat
fsubs
and
daa
fsubr
mov
pop
mov
inc
add
lds
sahf
rcll
cs
mov
pop
add
popa
push
dec
mov
lds
cltd
mov
into
cmp
shrl
push
pop
into
push
adc
ss
add
jecxz
cs
imul
adc
cmpsb
push
cld
push
jl
mov
push
arpl
sub
sub
mov
mov
roll
xor
or
mov
incb
inc
arpl
inc
cltd
cld
sub
pop
cmp
jp
jno
mov
cli
int3
in
sbb
inc
pop
jne
fistpl
inc
or
fdivl
push
push
stos
dec
fldl
bound
popf
pop
dec
sbb
cwtl
mov
pop
and
or
mov
testl
and
mov
rcll
mov
xchg
test
dec
call
mov
or
je
pop
mov
inc
add
js
in
add
cmp
adc
pop
xchg
loopne
ja
adcb
xchg
sbb
push
jb
outsl
sahf
sub
stos
or
jbe
fadds
mov
pop
out
push
les
mov
sub
pop
test
shll
sbb
shl
mov
and
fcomps
push
or
sub
xor
or
xor
push
xchg
ret
mov
pop
mov
pop
cmp
pop
xchg
inc
jle
popf
and
test
cwtl
jecxz
insb
mov
pushf
aas
stc
mov
imul
movl
xchg
test
es
cwtl
movsb
out
aam
xor
dec
out
jns
lods
pop
clc
add
test
mov
xor
arpl
mov
stos
add
andl
or
testb
push
cmpsb
cld
jno
sti
xor
scas
popf
sub
rclb
cmc
add
mov
and
gs
xor
enterw
lock
or
rcr
rorl
mov
sbb
jmp
inc
xor
ss
pop
mov
mov
mov
inc
sub
push
fwait
movsb
cld
shll
push
in
shlb
cwtl
and
gs
xchg
add
adc
mov
stos
sarb
daa
cmpsl
pop
jae
das
or
andb
ret
pop
push
sbb
outsb
movl
lea
inc
dec
addr16
dec
jno
cmp
ss
faddl
dec
cli
or
mov
and
xchg
and
mov
in
cmp
lcall
dec
hlt
jae
add
xchg
xor
cli
cmpb
adc
out
pop
insl
mov
test
sub
mov
cmp
cltd
mov
jbe
into
pop
jp
fisubrl
jmp
cwtl
cwtl
or
mov
enter
mov
ljmp
mov
gs
lock
cmpsb
fs
pusha
stc
lret
inc
mov
push
and
cmpsl
jmp
jge
jle
push
cmp
fdivrl
sbb
cmc
xchg
push
bnd
mov
pop
cwtl
cli
sbb
loop
adc
imul
cmc
orb
cli
lock
lock
fimull
mov
adc
daa
jnp
pop
arpl
jae
out
es
data16
ja
cwtl
in
mov
lret
fucom
in
cmc
outsl
stos
test
ja
orb
pop
pop
scas
inc
jle
inc
sbb
scas
int
int
sbb
xchg
and
test
icebp
icebp
dec
xchg
cli
ss
or
data16
imul
out
adc
div
fildll
rcrl
jle
sbb
mov
inc
sub
xchg
inc
pop
jmp
scas
add
adc
sub
int3
xor
mov
es
fcompl
and
cmp
mov
adc
push
mov
js
test
adc
movsl
push
aaa
aaa
add
or
jmp
add
cmpsl
and
ret
popa
pop
add
push
mov
and
mov
aam
lret
imull
dec
rcr
jo
sub
and
fbld
les
outsl
sti
repnz
sbb
mov
pop
das
movsl
jo
xor
subl
cmc
enter
inc
pop
mov
leave
andb
outsb
popa
loopne
xor
fimull
xchg
xchg
push
cltd
xchg
pop
sub
aad
test
push
mov
add
xor
pop
cltd
sahf
clc
cs
jge
mov
mov
xor
push
push
and
xor
add
xchg
subb
sbb
orl
push
ffreep
jecxz
jmp
sbb
jg
lahf
cld
cmp
add
adcl
daa
fnstsw
mov
adc
cmp
addr16
in
mov
sub
mov
imul
xchg
bndstx
fiaddl
add
popw
rol
push
push
mov
addr16
pop
popa
and
test
andl
scas
cwtl
jbe
xor
out
dec
rorl
push
pop
popa
inc
jno
lods
and
cli
cs
addr16
xchg
ja
imul
jno
add
cwtl
xchg
sbb
enter
adc
xor
call
pop
dec
mov
leave
cmp
pop
cmp
fisttpl
mov
push
xor
test
xlat
jnp
imul
es
jmpw
xor
dec
leave
out
adc
cltd
out
cwtl
mov
scas
fidivrl
dec
inc
sub
xchg
test
xor
inc
movsb
dec
add
cmp
pop
xchg
jmp
test
in
outsl
insb
dec
jecxz
jle
mov
ret
or
jno
cmpl
sub
push
scas
dec
orb
sbbl
subl
out
dec
push
ja
cltd
repz
lods
enter
cmp
cmp
repz
ds
sub
pop
cltd
add
xchg
mov
movsb
in
or
in
lods
jg
mov
xor
cmpsl
mov
cmp
lret
mov
jne
aas
adc
int3
xchg
mov
testb
sub
cmp
jae
mov
dec
or
xchg
sbb
xor
inc
scas
dec
and
adc
xchg
test
xor
test
dec
cli
and
insl
loope
push
pop
test
fisttpl
leave
xchg
icebp
lret
shlb
outsl
xchg
or
xchg
sbb
xor
xchg
pop
xor
xchg
ss
shrb
pop
push
jbe
cmp
mov
adc
lcall
loopne
sub
or
cmpsb
test
push
inc
or
fcmovu
push
orb
fdivrp
clc
or
scas
or
ret
test
mov
rcrl
xor
aas
fwait
xchg
mov
push
daa
sub
xchg
sbb
add
movsl
dec
sub
outsb
scas
call
push
enter
mov
mov
sub
dec
in
test
xchg
push
icebp
pop
sbb
xor
mov
jne
mov
cmc
sbb
fnsave
loopne
mov
mov
std
fldcw
packssdw
and
xorl
xchg
add
mov
xchg
scas
xchg
add
mov
xor
inc
mov
fdivrs
jmp
xchg
dec
leave
jg
and
mov
adc
sbb
xor
call
mov
mov
or
adcb
or
or
add
mov
adc
cmp
cwtl
orl
in
loop
sahf
pusha
in
dec
insb
jae
in
rcr
mov
cwtl
popa
fadd
adc
aas
adc
dec
xor
inc
repnz
ret
jmp
arpl
int3
out
pop
dec
push
dec
or
repz
jo
ficoms
xchg
pop
add
or
or
inc
in
hlt
fdivs
aaa
mov
int
iret
iret
leave
jbe
test
cltd
cmp
fwait
test
add
subb
mov
lcall
xchg
cmp
addr16
dec
and
fs
cmc
les
add
sarl
adc
inc
leave
pop
push
js
popf
aam
inc
jmp
xor
sbb
dec
inc
out
and
mov
push
adc
xchg
movsb
jne
out
and
fwait
adc
lea
fs
sbb
xchg
addb
jecxz
hlt
inc
mov
and
pushf
sysexit
arpl
push
addl
push
lods
cmpl
cld
mov
xchg
sub
jns
inc
sub
orb
movsl
dec
fwait
xchg
or
ficompl
mov
aas
js
push
leave
pop
mov
test
mov
cltd
adc
and
mov
dec
ds
in
push
or
mov
aaa
arpl
mov
iret
movsb
xchg
movsb
adc
dec
mov
inc
dec
shrl
dec
mov
jns
mov
shrl
xchg
push
adc
das
inc
insl
repz
dec
cmp
ljmp
sub
or
aas
loopne
ret
pop
mov
and
data16
inc
cmp
pop
or
push
daa
imul
stc
mov
mov
mov
and
in
mov
push
bound
out
aas
jae
in
jmp
aaa
fs
or
int
shlb
push
xchg
bound
adc
pop
adc
aaa
or
lcall
call
loopne
outsb
or
sub
xor
jmp
ss
and
cmp
pop
mov
mov
xchg
out
or
dec
or
imul
fcmove
jnp
and
lods
push
push
xor
mov
or
loopne
or
jmp
xor
test
jl
sbb
scas
outsb
sub
shl
icebp
pushf
mov
movsb
dec
das
clc
lds
mov
and
xchg
ds
popa
add
mov
sub
cmp
xor
sbb
push
in
fmuls
sbb
or
fimull
fs
mov
in
xor
mov
test
pop
jl
es
mov
dec
pop
xor
std
sahf
fldt
adc
ret
scas
pop
pop
sbb
out
stos
and
in
mov
inc
sbb
xchg
jnp
sarb
out
cmpb
dec
cmp
fs
xor
mov
sbb
sub
ret
sbb
enter
sub
mov
bound
ss
cmp
and
sbb
add
mov
dec
shrb
sahf
lods
mov
sbb
push
loop
xchg
cmpb
dec
dec
and
repnz
scas
mov
gs
add
out
jb
push
push
sbb
cmp
in
ds
pop
xchg
add
pop
das
decl
lahf
dec
add
movsb
int3
in
push
xchg
sub
or
xchg
cld
jl
lock
xorb
pop
adc
xchg
adc
sub
adc
dec
hlt
mov
mov
das
insl
jge
lds
and
dec
popf
and
fiaddl
or
fbld
in
scas
inc
cmpsb
loop
jnp
pop
imul
adc
pop
pop
lcall
xchg
leave
and
test
mov
xchg
xchg
mov
lea
sbb
cmpsb
sbb
jmp
push
ret
vmovaps
mov
roll
or
mov
and
dec
sbbl
dec
test
mov
js
das
jg
f2xm1
loop
clc
push
dec
pop
pop
aam
inc
mov
cli
xchg
js
insl
xor
push
xor
loopne
filds
dec
lock
mov
icebp
mov
test
mov
jl
sbb
repnz
fs
testb
sbb
leave
mov
xor
push
inc
in
or
subb
mov
xor
inc
pop
int3
xchg
hlt
mov
add
sbbl
push
dec
arpl
test
out
add
outsl
cmpsl
rcl
or
xlat
hlt
gs
int3
ficoml
insb
std
in
aam
pop
pop
inc
xor
mov
adc
js
stc
enter
inc
pop
in
je
pop
lock
ja
dec
adc
xchg
xchg
push
mov
mov
pushf
pop
stos
scas
lcall
mov
repnz
test
mov
insl
int3
push
jnp
xor
or
les
daa
cld
ret
fwait
scas
or
loope
add
mov
mov
adc
jbe
bound
dec
popf
jno
cmp
mov
cmp
subb
push
out
push
jnp
ret
mov
and
rclb
xor
or
call
pop
pop
pop
imul
jne
aas
imul
rcrb
shrl
in
push
int3
pop
lret
stc
lock
test
aad
mov
rcl
cmpsl
enter
mov
mov
xchg
ss
adc
mov
ds
sub
mov
in
push
push
cld
subl
pop
sbb
outsb
cld
mov
insb
das
add
mov
lret
rsqrtss
mov
mov
xor
ja
outsb
pop
shlb
cmp
push
push
push
or
nop
fnstenv
lret
imul
sbb
ret
iret
mov
lea
xor
add
enter
cs
xor
cmp
ss
ja
jle
push
inc
in
in
cld
shr
xchg
add
add
dec
sub
lods
cmpl
cmp
not
xchg
push
push
fsubr
mov
adc
rorb
pop
dec
scas
pop
mov
pop
shrl
lds
pushf
mov
sub
add
push
adc
mov
ljmp
mov
push
out
sbb
fsubr
mov
add
icebp
push
shlb
mov
xor
daa
bound
push
lahf
repz
ret
xchg
pop
dec
orb
std
adc
jne
fs
inc
in
cmp
jbe
sub
push
jmp
popa
andb
push
and
and
jo
jmp
adc
mov
and
lods
lds
pusha
or
xorb
dec
cli
inc
inc
movsb
lcall
jp
mov
jbe
imul
rorl
cmp
mov
jnp
or
sbb
inc
sub
stos
push
pop
cs
cmpb
mov
jmp
lds
dec
int3
popl
sub
sbb
or
mov
pushf
shll
jle
aaa
pop
mov
imul
addl
cmp
inc
lods
insb
dec
jge
dec
nop
pop
je,pn
scas
push
aaa
mov
cmpb
or
stos
test
insl
gs
stc
test
push
sar
push
test
test
bound
adc
adc
movsl
ss
mov
sub
sti
out
xor
jl
mov
or
mov
inc
dec
mov
lods
out
mov
dec
arpl
test
clc
cmpsb
loop
push
aas
mov
jge
cmc
jge
pop
mov
cmpsl
inc
imul
sbb
push
outsb
fnsave
dec
push
hlt
fstp
sbb
aaa
pop
jae
jp
aas
lds
mov
pop
pop
push
pop
pop
loopne
pop
rcll
and
ror
imul
fnsave
fwait
incl
in
mov
movsl
xchg
aad
inc
mov
in
cwtl
sub
xchg
pop
lcall
or
jo
ljmp
sbb
push
adc
and
movlps
mov
xor
arpl
jnp
gs
dec
arpl
mov
ss
add
sub
ja
mov
inc
add
int3
lock
mov
jmp
pop
test
adc
bnd
jb
int3
push
mov
pop
decb
and
lcall
bound
leave
mov
add
mov
inc
add
test
ret
ljmp
mov
jb
pop
das
outsl
push
jo
sarl
std
mov
or
and
mov
push
xchg
xor
and
add
mov
pop
cltd
stos
mov
mov
add
lds
sbb
push
imul
push
mov
fcomps
jp
jp
lock
xchg
fwait
jle
stc
cmp
test
test
jg
mov
fcmove
int
push
pop
cmpsb
mov
xchg
xor
jmp
addr16
mov
ds
sbb
pop
sarl
lcall
insl
cmp
mov
add
rcrl
and
mov
in
add
lcall
mov
and
lea
imull
inc
mov
or
imul
lea
jle
xlat
cmp
xchg
adc
fwait
stos
xchg
inc
jl
fwait
add
and
pop
lods
pop
pop
push
dec
push
inc
dec
imul
dec
mov
jp
mov
shrl
sub
rcrb
pop
arpl
adc
test
mov
cmp
pop
ljmp
dec
jecxz
stos
jmp
cmpb
ja
test
mov
pop
add
test
cmp
out
xorl
fldl
test
add
push
and
in
imul
pop
push
mov
xlat
dec
dec
jmp
pusha
enter
sub
push
add
mov
pop
jle
inc
fbld
stc
scas
mov
pop
pop
jne
enter
pusha
addr16
aaa
xor
adc
ljmp
add
icebp
fsubl
add
cmpsb
push
add
stos
arpl
push
pop
jbe
push
and
ret
mov
mov
insl
push
imul
sbb
fisubl
xchg
repnz
push
xlat
outsl
xchg
int
adc
iret
adc
xlat
sub
mov
shlb
ljmp
aas
rorb
and
out
cmp
daa
or
fld
mov
add
outsl
sbb
in
xor
adc
xor
or
sbb
aas
and
xor
or
inc
and
cmp
lret
repnz
sbb
sub
inc
orl
aad
je
or
jno
jns
dec
xor
push
sub
jmp
shll
es
mov
mov
stos
pop
divl
lds
cltd
ror
jecxz
fcoml
xlat
js
dec
cld
cltd
inc
loop
sub
xor
mov
jle
cmp
jge
push
xchg
cli
push
pop
test
and
pop
and
out
nopl
lret
xor
xorb
xchg
scas
cli
and
push
sahf
add
sbb
mov
notb
jne
clc
insb
jnp
in
daa
data16
cmpsl
dec
aaa
fs
dec
push
mov
sub
mov
adc
pop
dec
mov
jno
push
aad
push
stc
dec
outsl
in
daa
mov
stos
in
arpl
out
mov
xchg
xchg
shl
and
call
lret
xor
pop
loope
mov
and
lret
int
es
rcrl
xchg
jnp
push
push
inc
xor
fwait
arpl
push
adc
pop
fwait
int
add
xlat
push
xor
sub
sub
sub
bswap
stc
loope
sub
ja
dec
add
inc
xorb
push
push
ret
mov
cli
pushf
bound
clc
cmc
inc
pop
or
jge
jmp
sbb
movsl
ja
fldenv
and
push
lods
sbb
adc
xchg
std
inc
data16
adc
icebp
lret
clc
out
jl
mov
sub
xchg
inc
or
jo
enter
dec
aaa
pop
or
stos
xor
fstpt
fidivl
lret
adc
adc
dec
sbbl
dec
out
es
ret
jne
dec
sbb
sub
shl
xor
add
scas
mov
xor
cmp
push
cs
gs
push
jae
scas
lea
sub
dec
mov
adcb
push
lds
outsb
sub
adc
jmp
jmp
mov
inc
add
add
mov
lock
lret
inc
mov
inc
in
xor
push
mov
cli
sbb
sub
lcall
push
out
aam
or
popf
add
jno
xor
scas
jns
out
insb
clts
adc
sub
jo
imul
pop
add
das
test
mov
fwait
mov
jmp
or
aaa
in
sub
stc
jae
popa
mov
mov
mov
sbb
dec
mov
addr16
jmp
inc
xor
mov
shl
mov
sahf
out
cli
scas
pop
int
sar
or
rcrb
lret
xor
or
xor
cmpsb
and
push
or
add
and
jecxz
addb
sbb
bound
test
mov
lret
mov
add
nop
dec
aad
xor
shll
fisttpll
jne
xor
imul
outsb
cmp
push
sbb
and
pop
mov
mov
fdivrs
imul
cmp
cmpsl
adc
cs
std
pop
adc
daa
inc
mov
mov
enter
and
xsha256
cmpsb
push
mov
scas
pop
cltd
and
jnp
btr
mov
pop
sub
mov
dec
aad
xor
pop
decl
fnstcw
popa
jno
mov
add
ret
lock
add
mov
or
inc
lods
ja
imul
lcall
xchg
lods
jno
aam
dec
inc
pop
mov
cmp
mulb
mov
nop
adc
cmp
push
sub
arpl
in
pop
pop
andl
leave
bound
mov
test
aas
or
and
cmp
pusha
pusha
sub
bound
fs
test
leave
mov
aad
pop
add
test
sbb
test
pop
xor
imul
sub
inc
movups
insl
enter
ljmp
jecxz
sbb
or
sub
test
cwtl
aaa
jns
scas
insl
jb
lret
pop
std
or
mov
mov
mov
mov
jmp
clc
sub
sub
pop
add
and
int
call
inc
stc
mov
lods
leave
adc
int3
js
nop
mov
pushf
xor
push
imulb
repz
pop
arpl
test
and
leave
pop
mov
xor
sub
jae,pt
jne
adc
bound
adc
cltd
cli
mov
dec
dec
pop
xchg
dec
rcl
out
xchg
and
xchg
push
ljmp
pop
cmpsb
imul
mov
loopne
mov
inc
xlat
inc
xor
ret
cwtl
jp
test
mov
cmpl
mov
and
jl
jne
test
mov
cmp
out
out
lahf
hlt
shrl
adc
inc
out
push
mov
fwait
rcrb
push
or
outsb
lea
mov
mov
jp
shll
insl
push
sbb
nop
sub
sbb
js
pushf
lods
xor
xor
out
jo
mov
fmul
cltd
jg
dec
scas
mov
data16
push
xlat
adc
dec
repnz
add
xor
jge
pop
sbb
mov
or
fbld
pushf
xor
je
dec
push
xlat
dec
or
jg
in
adc
cs
repz
inc
mov
push
pop
inc
sbb
mov
adc
pushf
lea
pop
and
mov
mov
ja
sti
pop
sbb
loopne
push
xor
fistpll
jle
mov
pusha
inc
dec
sbb
jno
cmp
adc
adc
xor
push
mov
pop
das
lret
cmp
in
inc
xlat
sbb
or
sbb
jl
mov
sub
and
outsb
mov
cmp
stc
fsubrp
addr16
icebp
add
xchg
hlt
sti
stc
into
faddl
mov
push
daa
ja
jge
pop
test
xor
mov
stos
fisubl
jo
jg
popf
pop
jne
dec
mov
jns
pop
fmuls
mov
bound
push
jne
sub
sahf
xchg
inc
mov
mov
cwtl
in
sbb
jecxz
jo
inc
sbb
mov
jg
push
lods
in
addr16
loopne
and
dec
daa
rcll
xor
mov
pop
out
and
dec
add
mov
stos
pop
xchg
inc
ficompl
lods
loop
push
mov
and
mov
jo
test
inc
gs
inc
dec
or
fcomi
gs
mov
push
out
sbb
xchg
jae
test
lcall
or
stc
ja
cmp
sbb
xor
cmp
movsl
and
mov
jb
and
mov
outsl
or
sub
mov
ss
pop
cwtl
add
sbb
stos
nop
es
pushf
cmc
mov
sbb
iret
ds
mov
sbbb
lea
lock
call
push
lahf
dec
and
jecxz
mov
jge
or
mov
push
ds
cmp
repnz
mov
add
dec
mov
repnz
nop
and
sub
data16
xchg
add
js
push
ja
ja
lock
popa
mov
lea
sarl
andl
or
add
adc
sub
dec
mov
jbe
popf
in
adc
repnz
enter
or
daa
jnp
mov
sbb
ficomps
mov
cmp
adc
ja
je
cld
fwait
or
pop
sub
or
ret
out
xor
clc
rcll
in
push
pop
fidivrs
out
pop
mov
addl
mov
cli
pop
mov
pop
loopne
pop
add
loope
xor
stos
imul
xchg
and
push
adc
pop
or
leave
nop
fdivl
leave
stos
mov
dec
idivl
movsl
or
mov
repnz
fisttpll
and
icebp
push
pop
sub
rclb
pop
sahf
pop
pop
adc
lods
mov
mov
repz
ret
adc
fcmove
inc
adc
mov
sahf
outsb
and
mov
stos
mov
xchg
sbb
cmp
dec
leave
aaa
hlt
push
mov
cmp
add
mov
or
pop
enter
in
xchg
mov
int3
sub
xorb
rolb
fwait
mov
mov
lret
mov
inc
lahf
cmpsb
dec
or
inc
push
loope
or
std
push
mov
daa
jmp
sti
daa
sbb
out
mov
mov
fcmove
ljmp
cmp
fdivl
fs
shrb
cltd
and
adc
cs
pop
cmp
inc
xchg
jno
sbbb
in
hlt
clc
xchg
je
lret
inc
jmp
pusha
lret
cmp
lea
mov
arpl
cltd
add
or
stos
mov
rcrl
repnz
cmp
push
loopne
lea
and
cmp
scas
inc
mov
lds
inc
mov
pop
mov
arpl
xchg
add
cltd
cmp
rorb
push
pop
xchg
dec
add
jo
xchg
xchg
icebp
test
fsubl
lahf
adc
sub
mov
fnstenv
push
pop
sbbb
or
mov
pusha
push
pop
fs
rcrb
sbb
or
xor
xlat
mov
xor
xor
cltd
lahf
or
fisttps
mov
dec
cmp
cmpsl
mov
add
dec
mov
sub
loop
xor
das
es
cmp
mov
lret
sbb
aaa
clc
cmp
loope
inc
cld
pusha
ljmp
jl
mov
mov
mov
into
nop
and
lret
jecxz
aad
pop
pop
and
js
cmp
and
mov
ret
and
pop
or
stos
cmpsb
lret
mov
push
jge
pop
jb
xchg
stc
add
fidivrl
rorl
jle
mov
mov
xchg
shlb
test
adc
mov
mov
test
adc
dec
jb
movsl
lds
jecxz
pop
push
xor
ret
jg
mov
jae
jecxz
in
pusha
je
ja
push
pop
sub
push
push
inc
jecxz
adc
push
mov
inc
lret
aad
adc
sbb
cld
xlat
pop
fsubs
push
sub
lahf
mov
mov
sub
xchg
fisttps
mov
add
mov
xchg
icebp
or
pop
insb
mov
mov
paddd
loopne
inc
dec
inc
xorl
lea
mov
mov
sbb
stos
sub
call
rcrb
jge
jmp
movsl
sub
sub
or
lods
push
xchg
push
lea
loope
inc
in
push
test
pop
mov
jae
in
inc
loop
cmp
jl
mov
adc
jge,pn
icebp
stos
in
icebp
stos
pop
test
sbb
icebp
push
enter
cmp
adc
ljmp
idivl
addr16
loopne
and
pop
mov
adc
insb
or
lods
int3
stos
mov
add
cmp
outsb
pop
xor
shl
mov
mov
faddl
mov
xlat
int
sbb
repnz
sub
pop
pushf
jno
iret
sbb
add
in
or
push
fucomip
popa
cmp
xchg
add
or
or
notb
lahf
jl
jmp
cmp
cmpsb
pop
pop
push
dec
out
push
aas
add
popa
jecxz
arpl
add
sub
or
pushf
fwait
mov
out
ja
aaa
sub
push
ds
push
xor
adc
addr16
insl
push
cli
or
clc
sbb
out
sub
repz
out
mov
pop
push
ja
mov
loopne
aaa
gs
aas
je
lods
movsl
stos
mov
mov
mov
mov
lret
or
jne
repnz
mov
cltd
negb
cmp
test
imul
jbe
xchg
xor
mov
divb
out
push
shll
gs
mov
cmp
pop
push
push
imul
xor
cmp
mov
incb
cwtl
jmp
orb
out
pop
or
dec
pcmpeqw
out
push
mov
call
sbb
out
enter
popa
cmp
pop
sbb
push
mul
ja
jecxz
pop
jne
scas
pusha
inc
pushf
je
and
arpl
mov
add
es
cld
xchg
adc
int
aad
pop
aad
inc
filds
adc
cmp
out
pop
xor
jne
cltd
lcall
in
pop
jmp
in
mov
outsb
rcrb
sub
xor
xor
cmpsl
lahf
and
inc
hlt
mov
inc
adc
sub
insb
mov
faddl
pop
dec
mov
jb
push
outsb
mov
inc
int
mov
aad
sbb
lods
in
sub
insb
add
out
push
loopne
shll
lods
mov
dec
push
fstl
loop
inc
clc
dec
dec
xchg
roll
adc
or
shlb
add
pop
test
pop
mov
cmp
push
daa
adc
inc
or
pop
test
into
mov
xchg
int3
and
loopne
std
or
stos
dec
push
xchg
inc
lcall
outsb
into
sub
and
push
out
sti
mov
rcrb
sbb
pusha
mov
neg
out
and
jbe
pop
das
push
push
pop
inc
cmp
xchg
xchg
imul
cmp
mov
flds
fwait
les
mov
jmp
aam
dec
xchg
mov
repnz
call
stc
enter
cmovae
iret
jne
pusha
push
mov
call
cld
les
ret
jl
jmp
lea
movb
push
cmpsb
and
adc
adc
mov
dec
cmp
and
dec
xlat
sub
insb
pop
std
rolb
icebp
xor
movsb
popa
bound
push
into
in
mov
add
adc
dec
mov
pop
jle
gs
jmp
stc
in
popf
sbb
sbb
mov
popa
shll
xor
adc
xor
inc
aas
cmpsl
in
daa
andb
jno
into
loop
test
sub
out
movsl
mov
addl
mov
jne
rol
xchg
outsb
pop
xor
sub
aad
cmpsb
mov
lods
cltd
pop
loopne
and
fldcw
sbb
push
xchg
or
or
imul
lds
mov
sbb
faddp
xor
mov
setnp
lock
fisubl
cmpsb
lret
hlt
mov
repnz
pop
scas
add
xor
or
add
sbbb
loop
mov
pop
cwtl
add
push
test
jp
mov
mov
jg
mov
adc
and
xchg
cmp
test
ret
movsl
decb
aas
scas
jne
push
sub
aam
mov
rclb
dec
enter
jae
rol
cmc
pop
mov
ror
cltd
out
mov
sbb
faddl
adc
sarb
sarl
sbb
dec
adc
je
jnp
repz
pop
lock
adc
mov
jno
std
push
stos
jb
pop
pop
jns
jg
sahf
mov
sub
cmp
int
divb
add
xchg
stos
mov
loopne
negb
cmpsb
test
inc
or
pop
cmpsl
cmp
pop
mov
add
loop
push
xlat
add
js
push
adc
lcall
shl
adc
test
in
cmp
add
insl
adc
dec
pop
fldcw
xchg
add
cwtl
nop
and
pusha
fwait
jmp
inc
pushf
mov
fs
adc
cwtl
fistl
jp
adc
pop
mov
lret
add
mov
mov
sbb
ret
add
arpl
sub
push
lcall
dec
enter
aam
pop
adc
mov
jl
xchg
inc
cltd
adc
pop
mov
insb
inc
sbb
sbb
inc
add
jp
int
clc
lret
adc
fsubrl
xchg
inc
insb
test
in
dec
adc
add
js
pop
xchg
mov
cmpsl
adc
or
sbb
mov
lcall
pop
jge
loopne
lods
adc
push
dec
add
fsin
mov
mov
aad
pop
es
push
sbb
adc
add
stos
mov
rcrl
xor
xchg
sbb
fistpll
lea
bound
fisubrs
mov
data16
lds
pop
mov
dec
mov
jne
mov
je
and
mov
jo
jbe
ds
and
xchg
sub
jb
repz
xchg
fisubs
fdivs
cmc
sbb
jae
popf
enter
jle
sub
mov
mov
or
lahf
jmp
sub
aaa
loop
scas
add
mov
mov
in
icebp
sahf
outsb
or
and
in
cltd
bound
fsub
leave
mov
add
out
cwtl
lea
lea
jne
lods
arpl
into
rclb
test
outsb
jb
mov
jl
jne
xor
das
cwtl
jns
ss
lret
jo
add
popa
xchg
fucom
inc
cwtl
jecxz
xchg
pusha
xor
cs
adc
jle
test
out
xor
ret
mov
add
loope
add
leave
loope
sbb
pop
and
sbb
enter
sub
xchg
and
pop
outsb
add
icebp
or
gs
mov
mov
sti
jne
loope
fdivl
int
in
jns
ja
in
inc
push
mov
sub
int3
sub
popa
pop
push
xchg
jno
in
mov
test
std
push
shrb
adc
push
sub
movsb
lea
es
cli
mov
shll
orl
in
mov
mov
sbb
push
faddl
cltd
cld
lods
jg
xor
sbb
jge
add
bound
lea
adcb
inc
in
push
sbb
je
push
mov
pushf
in
pop
lahf
mov
gs
and
xchg
sbb
xor
jle
add
inc
sbb
pushf
cld
sub
mov
gs
add
xchg
mov
ljmp
inc
sbb
xor
fwait
and
add
outsb
clc
into
popf
sbb
jmp
sbb
mov
adc
push
inc
repnz
imul
fs
pop
inc
jp
sbbb
or
xor
pop
xor
outsl
dec
push
sbb
xor
cmp
mov
es
outsb
imul
das
pusha
nop
gs
or
cmp
shll
in
and
jmp
xchg
pop
mov
mov
out
jnp
cltd
adc
roll
test
rorb
mov
inc
movl
xor
add
adc
outsl
ja
push
pop
shlb
jbe
sti
out
mov
pop
jg
cmp
loop
fistl
out
cs
outsb
ret
sub
jecxz
int
and
xchg
fldcw
out
dec
mov
or
gs
bnd
and
mov
pop
pop
les
insb
loopne
xor
scas
dec
or
aas
push
sahf
push
fcompl
adc
and
mov
inc
sbb
mov
in
bound
dec
jecxz
push
je
fs
enter
nop
incl
fidivrl
and
jmp
nop
jmp
pop
xchg
add
xor
or
iret
mov
adc
pop
sub
mov
xchg
orl
fnstenv
xor
in
daa
dec
leave
cwtl
pop
sbb
dec
fstpt
insb
sahf
and
mov
mov
jge
and
or
xor
cmp
add
lods
inc
and
xchg
fnstenv
in
cs
mov
or
mov
adc
je
out
int3
jmp
dec
scas
cmpsb
cmp
addr16
pop
mov
adc
ljmp
outsl
dec
mov
divl
jp
test
add
fstl
outsl
lods
aas
dec
mov
mov
rolb
stc
cli
mov
dec
cltd
jo
das
adc
js
sub
cmp
jg
or
out
jnp
cltd
pop
xor
icebp
sbb
push
pop
inc
out
js
xchg
rcll
mov
sub
out
mov
push
scas
xor
and
mov
mov
mov
aam
lret
sub
outsb
iret
adc
add
cwtl
push
push
shrb
popf
adc
xor
outsl
adc
add
dec
int
js
jg
inc
repnz
outsb
cli
jae
testb
xorb
lds
int3
in
cmpsb
test
sub
test
into
sbb
notb
xor
enter
jl
and
pavgb
rol
lahf
aad
inc
jp
shll
rorl
mov
fucomp
mov
sbb
pop
sbb
data16
pop
sbb
mov
clc
das
gs
test
imull
cmp
pop
xor
pusha
mov
shll
add
sub
dec
fcmovbe
iret
xchg
xor
xchg
test
push
ret
and
xchg
and
sub
out
insb
mov
mov
fnsave
adc
out
dec
push
xchg
movsb
jne
mov
xor
aam
test
aaa
data16
sbb
mov
xchg
scas
outsl
pop
mov
xor
test
cmpsb
pop
jg
sub
imul
mov
inc
aas
adc
cmpb
in
xor
mov
push
and
pop
call
mov
jg
lret
dec
jecxz
insl
leave
dec
adc
jmpw
insl
insb
jno
repnz
ficomps
pop
ja
adc
pushf
ficoms
icebp
js
out
sbb
stos
xchg
add
push
pop
nop
call
or
stos
inc
lahf
and
add
addr16
fstl
push
mov
out
pop
inc
add
jb
xchg
add
cmp
pop
sbb
std
test
mov
mov
fsubrs
jns
shll
imul
mov
sbb
jg
cli
sbb
icebp
sub
scas
mov
and
ror
data16
mov
sbb
xor
xor
cltd
sbb
push
adcl
push
leave
out
xchg
adc
adc
out
sbb
and
pop
stos
mov
jge
xchg
xchg
mov
fmull
inc
les
sub
dec
addr16
or
fldl
and
gs
sub
jnp
jmp
sub
add
jo
dec
lock
jmp
je
arpl
dec
out
lahf
sbb
mov
test
mov
jl
xor
sarl
dec
repnz
mov
insl
cmp
jmp
jle
sub
in
sub
mov
imul
adc
loope
push
clc
inc
stos
sub
lahf
dec
mov
mov
sub
xchg
in
sbb
pop
leave
negb
pop
lds
or
inc
inc
in
cmpsb
inc
sbb
push
push
or
pop
cmp
lahf
imull
test
and
jbe
cmp
mov
add
push
mov
xchg
hlt
sub
fidivs
dec
mov
or
and
imul
mov
out
data16
rorb
ljmp
shll
add
iret
mov
cmp
jl
mov
cmpsl
jo
ret
ss
push
mov
dec
xchg
stos
dec
out
fsubrs
dec
outsl
loop
push
test
mov
mov
into
clc
pop
jle
cmp
jb
dec
idivb
into
xor
push
cmp
jne
out
pop
loopne
jne
pop
sbb
les
cli
mov
and
icebp
dec
call
jae
mov
sbbl
cmc
jecxz
js
mov
push
xor
mov
mov
or
pop
push
mov
test
outsl
movsl
pop
rcll
clc
fwait
mov
mulb
adc
add
cmp
cs
dec
push
call
mov
inc
aas
cltd
push
jo
fidivs
push
or
bound
shrb
xorl
fcmovnbe
shll
mull
pop
out
cs
fdivl
mov
insl
jae
add
and
pushf
jmp
inc
xchg
mov
sub
pop
popa
shll
fmuls
loop
js
adc
adc
jl
cmp
xor
lret
dec
sbb
sbb
inc
jbe
jge
outsb
adc
xchg
mov
xor
das
cbtw
jg
sti
data16
aas
xchg
pop
dec
cmp
cmp
xchg
xor
xorl
fistl
loope
add
gs
xorl
xchg
xchg
popf
fwait
sub
mov
dec
test
ljmp
cmpsl
ds
jae
scas
xchg
add
pop
push
rorl
xor
jb
pop
js
pop
jle
mov
mov
cmp
and
mov
inc
imul
inc
cwtl
adc
jne
sbbl
push
movsw
pop
cmpsl
inc
es
jp
mov
cmp
sub
sahf
fnstenv
jo
je
pop
cmp
cmpsl
popf
mov
in
out
or
fdivl
int
jmp
xchg
rolb
push
push
jg
imulb
fstp
outsb
and
stos
in
cmp
mov
test
mov
add
xchg
movsl
pop
mov
aas
sub
test
pushf
jp
mov
lock
xor
fdivrs
or
cwtl
dec
mov
or
lret
dec
inc
cmp
adc
and
sub
ss
insl
imul
mov
and
jge
push
mov
hlt
aas
sar
add
cwtl
mov
stos
cmp
scas
sbb
mov
sbb
mov
mov
aad
cmp
cmc
mov
mov
or
inc
xchg
inc
int3
popa
mov
in
in
insl
and
fstps
xor
fsub
xchg
sti
fucomi
dec
test
mov
jg
iret
scas
and
fwait
xchg
pushl
mov
cs
mov
inc
push
adc
cs
fcmovne
aad
out
js
pop
cmp
jb
sbb
addr16
outsl
mov
addb
and
adc
push
out
add
stos
aad
out
push
gs
lods
dec
ja
push
xchg
aaa
rcl
ljmp
orl
adc
sahf
add
mov
cli
xchg
jmp
jo
aaa
mov
mov
mov
cmp
add
dec
aad
cmc
stos
ja
mov
pop
clc
jb
mov
push
or
inc
push
cmp
test
or
cmp
lahf
mov
xor
cmc
insl
push
lds
push
sub
jle
mov
push
daa
dec
pop
nop
loope
stos
iret
mov
mov
adc
push
lods
lahf
cmp
lret
mov
mov
call
push
imul
push
push
cmp
cltd
mov
sbb
mov
push
mov
jmp
stos
mov
lret
sub
mov
stos
loop
push
cltd
fsubrs
movsb
push
inc
adc
pop
xchg
lahf
aaa
repz
mov
addb
jecxz
push
in
mov
mov
dec
add
rorb
lock
aaa
sub
xchg
and
enter
push
sbb
add
pop
repz
inc
inc
mov
imul
in
xor
loope
jns
fsubs
aam
cltd
add
mov
mov
test
std
add
movsl
cltd
loope
push
sbb
push
mov
dec
int
dec
sbb
call
lret
dec
push
cmpsl
cmpb
mov
xor
loop
sarb
repnz
and
mov
sub
out
push
ret
pop
das
cmp
mov
mov
pop
stos
sub
insl
cmp
out
insl
dec
cmp
std
sbb
fs
dec
inc
pop
xchg
in
je
data16
subb
addr16
pop
idivl
mov
outsl
pop
and
arpl
sub
lahf
imul
sub
pop
jmp
out
or
js
xor
inc
adc
push
adc
mov
xchg
arpl
ja
call
ljmp
out
sbb
test
enter
sbb
push
sbbl
das
jnp
mov
push
stos
xchg
fildll
mov
xchg
lret
jmp
shlb
or
dec
sar
fidivrl
push
dec
jmp
xor
sbbl
leave
scas
push
cld
inc
cmp
aad
cltd
mov
push
jecxz
movsl
push
xchg
pushf
xchg
out
test
testb
jp
push
dec
test
sarb
xor
mov
adc
inc
loopne
or
leave
or
rorl
ffreep
fidivrs
mov
xor
cli
outsl
ret
lds
lahf
push
out
pop
push
out
mov
out
sarl
imul
adc
inc
loope
les
sahf
shlb
xor
sbb
adc
call
dec
push
cmp
lret
inc
aam
jne
xor
arpl
pop
pop
or
jne
repnz
insl
lahf
mov
test
cltd
popa
or
add
test
testb
rcrl
dec
cwtl
std
insb
jg
test
fadd
xchg
cmp
lret
sti
and
mov
clc
ret
cmc
jg
lds
ficoms
sbb
addr16
je
rcll
sbb
stc
or
mov
mov
jmp
cmp
cmp
push
xor
lods
popa
pop
in
mov
mov
cmc
mov
sbb
mov
push
mov
jmp
and
push
clc
xchg
scas
sahf
test
loope
xorb
sbb
in
sbb
and
sbb
sahf
enter
cs
int
mov
sbb
xor
and
insl
jp
cmp
rol
xchg
pop
dec
sub
add
sub
aad
adc
push
cmpsb
jp
cmp
nop
push
mov
adc
inc
scas
enter
scas
cltd
orb
cltd
fdivrs
xlat
xchg
idivl
xor
add
mov
aaa
lods
cs
in
out
rolb
push
in
mov
xchg
cmp
mov
vmulpd
test
insl
faddp
int3
loopne
push
sbb
inc
mov
stos
cmp
subb
adc
cmp
imul
sub
cmpsl
push
add
aad
or
or
adc
dec
nop
xchg
cltd
rcll
jmp
ljmp
or
lock
aad
push
insb
in
cmc
mov
pop
je
dec
out
inc
mov
mov
jle
jmp
mov
inc
rcll
loope
out
int3
cmp
jae
add
call
ljmp
arpl
lret
je
xlat
aam
jne
jge
inc
mov
cmpsl
add
mov
jp
popf
xchg
sbb
jo
out
mov
roll
pop
out
push
sbb
sub
fstps
sbb
xlat
cwtl
dec
sub
and
fwait
mov
aaa
sti
icebp
ret
imul
subb
inc
xchg
pop
cmp
shll
jne
push
test
xor
popf
and
jb
cwtl
enter
xor
int3
pop
mov
enter
pop
cmp
in
or
adc
out
inc
mov
test
mov
stc
outsb
test
dec
popa
pop
jb
or
in
std
sbb
xchg
insl
imul
ret
cmp
clc
push
sbb
xor
imul
jb
rorl
pop
paddb
mov
es
pminsw
ds
xor
outsl
jge
ja
mov
xchg
xor
shl
cmp
xchg
push
mov
cmp
add
push
je
aam
jno
sbb
adc
jne
mov
pop
sahf
xchg
xchg
mov
lahf
repz
and
pop
xor
icebp
test
mov
repnz
adc
sbbl
adc
fldl2e
ret
test
cmp
pop
cltd
pmaxub
sbb
mov
mov
cmp
lods
inc
mov
nop
movsl
mov
clc
lret
inc
movsb
inc
imul
stos
add
inc
xchg
cli
scas
mov
jbe
add
fildl
cmpsl
mov
and
jg
and
mov
inc
les
bound
push
in
mov
dec
js
xchg
jo
mov
inc
sbb
lcall
cwtl
cld
rcl
or
pop
xorb
shrb
loopne
sub
add
es
scas
inc
mov
int
clc
add
xor
dec
dec
inc
lds
add
and
jmp
jne
lret
inc
push
lods
repz
mov
pop
lret
lock
pop
pop
lods
pop
popf
stos
push
rcrb
fistl
or
movsb
ror
ds
jns
mov
divl
xchg
push
push
orl
sahf
ljmp
push
push
sarb
neg
pop
hlt
and
js
das
cmp
call
pop
mov
sub
pop
test
fcom
mov
negl
jns
jmp
pop
popf
aas
lods
int3
fsubrp
gs
aas
arpl
mov
int
and
mov
call
cmp
push
inc
mov
mov
shl
mov
fisubs
imul
popa
xor
cmpsb
inc
push
test
mov
mov
aaa
cli
pop
push
mov
add
pop
xchg
adc
adc
fmulp
push
sub
or
mov
push
pop
xchg
outsb
int
push
lock
enter
inc
pop
sbb
mov
cmp
dec
sub
inc
pop
and
fwait
popa
sbb
lret
leave
bound
inc
sbbb
hlt
mov
inc
fidivl
int3
sti
adc
lret
sbb
adcl
jl
fisubrl
aam
fmuls
adc
inc
aaa
mov
dec
or
scas
mov
pop
ret
mov
adc
test
and
xor
aad
push
ljmp
push
or
add
hlt
lret
adc
xlat
fldln2
pop
pop
ror
mov
add
vmwrite
mov
mov
xchg
ljmp
or
dec
add
adc
mov
xchg
pop
adc
pusha
sbb
xor
popf
rolb
fisubrs
imul
or
test
int3
push
inc
push
addr16
add
lahf
test
fbstp
repz
daa
lods
sarb
cmp
jns
inc
pop
aad
adc
push
sub
mov
cmpsb
mov
inc
mov
scas
sarb
sahf
loop
jno
repnz
sahf
daa
popa
div
cmpsl
cld
in
xor
mov
testb
mov
jecxz
mov
and
push
or
cs
idivl
jno
test
push
pop
stc
scas
push
je
ljmp
arpl
clc
gs
lahf
mov
xor
jo
pop
das
fmul
xor
int3
pop
jnp
sbb
mov
mov
mov
sbbb
and
ljmp
je
xchg
pop
sbb
loopne
add
mov
out
shrl
adc
dec
inc
jb
movsb
mov
mov
xchg
add
adc
and
inc
xor
arpl
push
or
pop
mov
movsb
lods
pop
lahf
inc
loope
sub
inc
or
stc
test
pushf
sbb
mov
adc
aad
inc
out
or
mull
pop
cmp
dec
mov
pop
push
into
roll
mov
mov
dec
add
popa
mov
xor
cmp
xor
imul
loope
xchg
sahf
sub
jecxz
adc
repz
sub
test
jecxz
jg
lret
add
lods
enter
add
cli
inc
xchg
push
into
push
xchg
xor
mov
mov
fistps
test
inc
sbb
mov
shlb
pop
dec
dec
and
imul
scas
add
push
cmp
xchg
into
bound
push
cltd
cmp
test
fsubl
mov
mulb
rcl
mov
popf
sbb
jbe
mov
fcoms
movsb
jp
inc
test
sub
scas
in
sbb
mov
xchg
gs
pusha
arpl
jge
sbb
adc
cmp
neg
push
dec
adc
mov
cmp
push
mov
loope
roll
repnz
js
imul
insb
lods
ljmp
dec
cmp
sub
lahf
or
pop
lock
jge
outsb
imul
sbb
jbe
repz
sub
dec
fstps
adc
inc
lea
gs
pop
push
loopne
ja
and
shll
ret
stos
jbe
js
cmp
stc
test
push
jl
bound
nop
pop
ret
pop
adc
inc
push
jmp
mov
aaa
pop
iret
aaa
jo
inc
push
mov
add
arpl
ds
ret
mov
clc
test
and
mov
or
jb
jbe
ret
nop
sbb
xor
in
ret
test
imul
adc
dec
sar
sub
nop
popa
lea
jbe,pn
stc
ss
cltd
je
add
pushf
pop
ja
mov
incl
in
xor
and
lahf
mov
pop
add
or
and
call
daa
cmp
loopne
jae
out
jne
ljmp
push
cli
mov
ljmp
int3
mov
std
aad
or
inc
jne
ja
mov
xor
or
sub
add
dec
ret
leave
jl
fcomps
sbb
add
arpl
or
leave
ror
adc
mov
jnp
outsb
jp
roll
das
test
aas
test
pop
repnz
insl
sub
push
std
testl
cwtl
shr
out
cwtl
jmp
or
outsb
stos
push
insl
nop
mov
add
xchg
in
pop
jge
adc
sbb
add
ljmp
pop
into
lods
sbb
push
adc
insb
xchg
adc
in
mov
or
popf
pop
adc
lods
adc
push
out
xor
sub
inc
inc
mov
mov
loope
pop
movsb
or
dec
stos
sti
push
lock
cwtl
jecxz
inc
sahf
pop
jg
cmp
jge
cmp
sahf
dec
mov
pop
sub
xor
mov
imul
sarl
orb
push
pop
inc
push
inc
pop
pop
sbb
mov
dec
mov
adc
cwtl
mov
dec
jp
push
sub
mov
add
push
or
ficoml
in
xchg
xchg
push
mov
push
pop
lods
sti
cmp
mov
xchg
jb
xchg
mov
push
jnp
popf
imul
outsb
jle
sbb
les
jne
add
fidivl
push
jno
ret
lods
add
sbb
out
nop
adc
clc
pop
dec
sbb
pop
icebp
stc
lods
daa
mov
jo
inc
lea
jne
push
jo
mov
jae
enter
dec
inc
and
cmp
adc
lret
cmc
pop
push
mov
outsl
cmp
insl
pop
imul
and
jo
jb
dec
cmpsb
xchg
icebp
cltd
dec
sahf
and
pop
pop
sbbb
xchg
movsb
pop
adc
and
jno
leave
enter
lods
mov
xor
daa
scas
or
jecxz
pop
mov
ret
shlb
or
pushf
sarl
out
inc
repnz
mov
out
dec
mov
into
into
lcall
mov
in
inc
loopne
scas
adcl
scas
scas
mov
sbb
dec
jmp
adc
jne
lahf
sbb
pop
push
repz
jge
leave
pop
xor
cltd
in
test
insb
xchg
jg
mov
lock
jb
push
ja
cwtl
stos
jne
xor
sbb
stc
es
les
rclb
dec
adc
pop
scas
sbb
or
fnstsw
shll
xor
lsl
adc
push
pusha
inc
les
or
scas
jge
pop
test
sbb
loopne
clc
or
fs
mov
mov
fisubrl
xchg
sbb
sbb
mov
jne
lock
push
sub
push
push
push
jb
push
jmp
nop
or
test
cwtl
dec
and
sbbb
mov
fimull
and
xor
popa
xorb
out
xor
fisttpl
sbb
adc
or
in
push
outsb
js
and
test
dec
lcall
std
int3
xchg
xor
xchg
insl
lds
out
dec
aas
das
jb
dec
fsubrs
aam
leave
in
xlat
mov
lret
ljmp
xor
dec
mov
or
adc
mov
sub
pop
nop
pop
gs
mov
int
loopne
dec
jmp
insb
lods
popa
pop
inc
mov
pop
or
push
or
dec
aaa
adc
sub
xlat
xchg
fstpl
lahf
cwtl
vsubsd
mov
and
sub
mov
into
jae
cltd
arpl
sub
cmc
aaa
in
add
sub
adc
add
in
xor
and
fsubrl
push
xor
sbb
out
imul
push
cmpb
pusha
xlat
dec
fucomi
jge
lcall
sbb
loope
rcll
divb
jl
arpl
out
sub
jmp
sub
push
jnp
adc
lahf
inc
fiadds
inc
mov
loope
xlat
out
jnp
ss
lods
sub
lock
shll
shrl
decb
in
lods
inc
sti
and
mov
mov
inc
fsubrs
pop
mov
ret
adc
fdiv
xchg
rcl
jns
in
out
cmc
push
cmp
cltd
jmp
jp
loopne
xor
daa
cmpsb
mov
dec
jge
fs
bound
and
roll
push
nop/reserved
loopne
push
lods
sbb
lret
fbstp
fdivrs
mov
ficomps
ds
jg
and
add
popf
push
movsl
cli
cmc
sbb
shrl
sbb
pop
ret
clc
mov
out
xlat
jg
push
xlat
aad
push
inc
mov
dec
xchg
pop
ja
aam
dec
sarl
adc
and
cmpl
xor
shrb
push
sbb
ja
clc
repz
push
outsb
sbb
jnp
decb
inc
ss
jmp
stc
cmp
push
mov
adc
sub
nop
movsl
aaa
rclb
xchg
cmpsb
xchg
jle
or
imul
dec
dec
cmpsl
jnp
stos
dec
ss
aam
into
mov
mov
mov
mov
add
stc
nop
jns
pop
lds
xchg
add
sbb
inc
fimuls
cmp
andb
lahf
jmp
jg
andb
adc
js
dec
sub
mov
hlt
cmp
sub
sbb
pop
movsb
inc
inc
in
test
xchg
mov
mov
mov
mov
xchg
pusha
mov
inc
dec
and
test
mov
mov
inc
dec
jo
dec
stc
scas
cmp
cmp
cs
imul
aas
mov
pushf
and
mov
clc
insl
xor
mov
fcompl
or
aas
mov
cwtl
mov
cmp
fs
lahf
aaa
int
movsl
mov
mov
pusha
lret
sub
jmp
test
push
mov
popf
pop
pop
dec
jle
mov
xor
xlat
xor
mov
andb
icebp
xchg
cwtl
lods
cli
or
fisttpl
stc
je
in
pop
ret
jmp
in
test
fsub
movb
das
pop
inc
mov
cld
jl
dec
out
sbb
xor
pop
loopne
out
cmpsb
sbb
xor
out
adc
sbb
adc
xchg
enter
imul
lods
les
and
in
in
cli
adc
rorl
or
mov
mov
rcll
sub
loope
sti
lods
inc
hlt
jnp
mov
xchg
mov
mov
xor
out
adc
cmc
or
sub
xchg
pushw
fisubrl
lock
cmp
mov
mov
pop
add
cmp
repnz
jbe
xchg
xchg
pop
and
adc
lock
in
stc
xchg
mov
and
pop
sub
xchg
push
std
mov
mov
addr16
lea
clc
mov
popa
and
adc
mov
add
aaa
mov
dec
mov
sub
jl
mov
jmp
lahf
std
out
das
mov
push
xchg
inc
jmp
xor
or
add
sbb
popa
xchg
in
push
jp
mov
daa
push
sbb
jmp
arpl
nop
fldz
pop
inc
mov
xchg
xchg
or
dec
add
sub
push
sbb
mov
cmpl
test
inc
pop
sti
add
lds
popf
mov
cmp
inc
fdivr
lds
or
popf
sub
nop
mov
leave
fwait
jge
sub
cltd
or
push
sub
into
pop
mov
or
loope,pt
mov
pop
imull
push
push
pop
xchg
xor
pop
or
push
adc
stc
flds
or
pushf
test
or
xchg
fstpl
cmp
ljmp
push
dec
dec
xchg
gs
lods
inc
idivb
das
fwait
add
fistpll
fisubs
sbb
arpl
or
mov
or
lods
fdivs
cltd
aas
dec
jp
sub
in
in
lahf
xchg
lds
pop
inc
mov
sbb
mov
ret
sarb
scas
mov
shll
test
imul
imull
cld
push
loop
clc
call
mov
mov
fmul
mov
scas
scas
std
cmp
aaa
nop
sbb
fwait
sbb
sahf
add
imul
mov
pop
xor
call
lret
dec
jecxz
in
jae
inc
mov
or
mov
sub
dec
jo
cmp
test
pop
scas
add
andb
cwtl
frstor
idivb
sub
xor
and
ret
jecxz
adc
add
pop
inc
fucom
movsl
pop
adc
cmpsl
ss
cmp
adc
cmp
fs
rorl
push
loop
jb
dec
pop
jmp
loop
jg
dec
and
je
jp
add
add
pop
or
dec
and
sub
mov
xchg
mov
inc
fstl
sub
jne
dec
cmp
es
sub
and
mov
adc
movsb
out
cwtl
ss
fwait
iret
out
stos
mov
mov
sti
fdivs
aas
test
pop
in
xchg
lods
mov
aaa
pop
hlt
mov
hlt
or
jo
aas
cmpsl
inc
push
xchg
andb
loopne
mov
mov
sbb
negb
movsl
das
in
ljmp
sbb
mov
in
inc
pop
push
jne
adc
stc
sbb
bound
ljmp
xor
stos
xchg
test
mov
das
push
or
andl
shlb
mov
and
clc
xor
adc
lcall
mov
pushf
daa
xor
das
in
movsl
sub
jns
cmp
roll
dec
xchg
add
xchg
repz
fistl
arpl
aam
sarl
and
jle
xorb
movsl
enter
pusha
mov
mov
cmp
pop
xchg
adc
or
shrl
pop
jae
adc
aad
fcom
outsl
pop
hlt
inc
repnz
inc
daa
push
xchg
insb
cmp
mov
mov
loope
dec
shlb
adc
pop
pop
or
push
je
inc
dec
mov
and
xor
ret
das
inc
outsl
xchg
and
data16
mov
push
and
mov
arpl
xchg
sub
shll
push
pop
lret
and
loop
xchg
lods
xchg
and
or
add
pop
mulb
ja
or
loopne
mov
mov
idivl
mov
repnz
es
dec
push
adc
pop
xor
jmp
pushf
out
adc
in
push
insl
push
and
aaa
push
cmpsb
dec
lea
inc
mov
in
mov
sbb
loope
or
sub
mulb
popa
push
outsb
or
addl
mov
sub
shll
push
cmp
xchg
xchg
pop
sahf
daa
xor
dec
push
addr16
lods
aas
inc
or
popa
sbb
dec
inc
and
sahf
out
pop
stos
xor
lds
fwait
out
sub
jne
mov
jae
in
movb
xor
sarl
mov
adc
clc
adc
lds
scas
cmp
dec
jo
sub
in
clc
push
mov
jne
scas
mov
dec
mov
dec
jl
or
and
movsl
dec
sub
out
push
xchg
push
rcrb
cmp
cltd
xchg
xchg
sub
cmp
sbb
fnclex
xor
loopne
push
pop
in
pushl
aaa
cmpsb
mov
fs
mov
or
notl
dec
sbb
cmc
pop
hlt
movsb
sarl
push
sti
xor
stos
xchg
imul
cs
popa
cltd
xchg
ljmp
lods
leave
loope
push
arpl
xor
imul
pusha
add
fnstsw
xchg
pop
inc
jbe
add
adc
in
cmpl
jne
push
cmp
inc
scas
adc
mov
pop
push
scas
xor
jmp
and
arpl
fsubs
sbb
push
cli
mov
xchg
cmc
test
cmp
add
mov
outsl
mov
cmp
stos
sub
pop
dec
mov
mov
add
pop
mov
sahf
sbb
mov
repz
mov
out
dec
outsl
push
inc
pop
loopne
jle
adc
xchg
mov
pop
pop
ret
addb
inc
push
in
push
es
mov
daa
xchg
jmp
mov
je
xchg
push
lock
sub
xor
xchg
lds
xchg
out
mov
mov
jecxz
fistpl
lret
mov
stos
sbb
pop
lock
movsl
cmpsl
lahf
pop
shlb
and
or
shrl
xchg
push
test
aas
fwait
mov
pop
andb
int3
unpcklps
adc
mov
mov
jmp
jg
sub
sbb
mov
imul
jb
pop
jg
subb
cmpsb
stc
fcmovu
inc
push
in
lods
mov
sbb
cmp
jge
mov
xchg
xchg
and
mov
imul
xchg
clc
mov
xchg
nop
cmp
or
sbb
ffree
andb
rcrb
jle
imul
leave
xchg
and
cmp
in
xor
pop
cld
cmp
push
shr
test
test
dec
int3
mov
iret
out
mov
mov
mov
jp
ret
xchg
sbb
adc
dec
add
cmp
loop
fxch
nop
xchg
cmp
in
jl
add
jnp
xchg
iret
notb
gs
pop
sbb
mov
sahf
sbbb
and
push
arpl
jmp
lock
cmp
aad
adc
pop
jge
push
insb
aaa
inc
std
insb
fadd
mov
mov
adc
loop
aad
iretw
mov
cmp
or
lcall
cmp
ds
jae
adc
gs
data16
add
in
mov
leave
adc
add
out
cld
cmp
addr16
jno
fdivrs
mov
jl
mov
rcl
call
add
or
dec
movsb
sbb
inc
ds
out
loope
lds
xchg
jp
mov
xor
arpl
call
aad
shlb
add
dec
popf
insl
cs
ja
jns
cmc
xor
pop
sarl
or
sbb
in
mov
repnz
pusha
push
dec
inc
gs
lret
add
cmp
iret
and
repnz
repz
fistpl
inc
xchg
xlat
push
xchg
mov
inc
sbb
push
dec
shll
sti
sbb
mov
dec
pop
dec
ds
xlat
inc
sar
push
push
adc
test
jmp
sbb
lods
pop
pop
and
mov
aad
mov
shl
bound
push
adc
cmp
inc
and
mov
dec
cwtl
mov
dec
dec
fmull
repz
in
orl
cmp
out
sti
out
sti
loope
push
add
pop
mov
dec
popa
das
rcll
mov
scas
out
loope
mov
mov
pop
xor
inc
lret
push
lods
lock
jl
mov
movsb
stos
mov
pop
ret
and
repz
jge
push
mov
loop
and
pop
xchg
sub
aad
jo
shlb
sub
pop
aam
mov
dec
push
mov
mov
mov
add
add
nop
lretw
into
pop
mov
jo
cmp
pop
xchg
in
repnz
sti
mov
mov
cmp
xlat
outsb
nop
out
adc
push
cltd
cmp
dec
scas
inc
xorl
mov
sbb
jmp
mov
push
mov
fcom
outsl
in
imul
out
fwait
mov
add
roll
or
mov
dec
push
xchg
pop
data16
xchg
scas
jl
adc
insb
mov
jnp
rcl
xor
cmp
ficompl
les
insl
xchg
mulb
sub
or
popf
loop
bound
sbb
mov
mov
psllq
aam
push
jae
adc
fistpll
sahf
xchg
or
loopne,pn
fs
push
popf
xchg
xorl
cmp
sub
pop
les
xorl
into
xchg
rcrb
push
repz
es
pop
outsb
mov
lods
icebp
mov
daa
shl
jecxz
cmp
lds
jbe
mov
mov
xor
rolb
mov
adc
fildl
hlt
sub
sbb
das
pop
sub
ret
mov
lret
xchg
pop
repnz
jp
xchg
cli
jns
adcl
mov
idivl
inc
xchg
iret
ljmp
or
loop
repz
add
lcall
mov
or
add
hlt
add
adc
imul
xlat
push
push
mov
movsb
mov
cmp
push
jne
xor
arpl
jae
addr16
test
sub
sbb
push
push
es
cmp
xchg
sub
mov
pusha
jp
xchg
jb
sub
scas
xlat
xor
and
add
insl
int
dec
or
out
and
pop
je
pushf
mulb
add
and
dec
add
sarb
int3
stc
sub
push
cmp
out
in
and
imul
dec
popf
stos
sub
dec
stc
xchg
mov
push
addb
fwait
stos
jg
sti
ja
and
fstpt
jbe
cmp
negb
add
or
dec
jae
push
inc
mov
pop
jnp
nop
jge
mov
popf
jp
or
clc
stc
test
xchg
sub
rcll
mov
daa
sbb
xor
jge
bound
mov
aas
push
pop
fildll
mov
jb
mov
in
or
sub
add
lea
add
or
xchg
jg
int3
mov
cmpsl
add
fcomip
std
adc
push
fisubs
mov
adc
enter
cmc
subb
push
dec
mov
lret
mov
inc
mov
stc
dec
dec
sbb
frndint
in
mov
ret
mov
test
sub
cmp
jle
sub
aam
lods
mov
ficomps
inc
mov
inc
test
xchg
sub
push
mov
xchg
jg
xchg
and
rorl
hlt
mov
mov
arpl
hlt
mov
push
pop
lcall
icebp
addr16
ret
fidivrl
jnp
mov
out
loop
bound
cmp
sub
push
cli
loope
push
or
shlb
sbb
mov
in
sbb
push
fistl
lret
sti
push
enter
icebp
sub
ss
neg
cmp
movsb
lock
arpl
xchg
les
aad
xchg
fistl
inc
gs
mov
mov
into
pop
dec
faddl
xchg
dec
jae
inc
dec
jl
clc
xor
bound
mov
push
mov
inc
pop
mov
sti
adc
test
xor
push
pusha
clc
jge
scas
shrb
shll
push
inc
out
pop
or
fcoms
xchg
iretw
push
mov
loope
inc
sbb
into
push
inc
cmp
insl
push
mov
arpl
and
mov
arpl
nop
push
lock
dec
lcall
aam
int3
movsl
sub
sub
add
sbb
imul
loopne
add
cmc
out
cld
fs
stos
xchg
push
push
pop
push
xor
pusha
mov
test
or
push
bound
cmc
dec
xchg
addr16
arpl
repnz
jp
jbe
insl
arpl
sub
mov
test
mov
xchg
jge
push
inc
xchg
mov
lods
and
mov
xor
mov
addr16
int3
xchg
std
rorl
pusha
adc
mov
ljmp
cmp
stos
sbb
mov
or
ds
or
mov
xor
mov
add
decb
jge,pn
inc
xchg
cli
andl
repnz
sbb
movsl
pop
xor
subb
mov
add
jecxz
add
xor
and
jae
test
pop
xchg
fidivrl
inc
dec
in
mov
mov
in
es
mov
fmull
pusha
outsb
fisubrs
ljmp
mov
or
sub
pushf
incb
pop
and
adc
inc
test
loop
mov
mov
lea
out
lcall
or
mov
adc
data16
or
sbb
mov
mov
push
mov
iret
push
mov
cwtl
and
pop
insb
lock
mov
notb
popf
and
cmp
push
inc
or
jae
mov
fimull
popf
sub
jns
dec
mov
lods
sub
sbb
outsb
int3
jae
mov
mov
pusha
mov
aam
xlat
pop
adc
icebp
aaa
inc
les
and
mov
mov
sub
add
aas
mov
lds
addl
outsb
fiadds
loope
add
fmul
push
dec
pop
cwtl
pmulhuw
adc
je
seto
add
ds
movsb
and
dec
subl
sbb
push
sbb
movsb
daa
mov
mov
out
inc
mov
jp
in
filds
or
lcall
test
imul
or
movsl
mov
pop
enter
pop
inc
adc
xchg
fs
fsub
cli
jmp
lea
bnd
bound
pop
and
sbb
lea
dec
push
test
inc
and
xchg
imul
and
movsb
mov
mov
pop
cmp
out
pop
and
lock
xchg
lret
stos
push
icebp
add
int
aas
dec
jns
or
sbb
orl
arpl
push
pop
pop
dec
repz
or
add
mov
push
pop
aas
in
mov
dec
push
jns
ja
mov
push
cmp
out
adc
test
pop
or
loope
jmp
pop
push
xchg
loop
mov
mov
leave
add
not
lcall
sbb
pop
cmp
push
test
sahf
adc
xor
dec
and
nop
mov
mov
insb
add
cmp
mov
or
mov
jno
push
cmp
xlat
int3
inc
pop
repnz
bnd
jle
pop
inc
xchg
jp
pop
xlat
adc
dec
push
sbb
xor
enter
imul
adc
jp
adc
xlat
imul
mov
out
mov
fistpll
sbbb
out
mov
test
pop
and
mov
fdivrl
push
test
mov
mov
cmp
and
loopne
std
out
adc
ret
inc
xchg
push
cwtl
inc
add
fcomps
jecxz
mov
shlb
icebp
out
pop
scas
test
insb
shll
add
pushf
inc
lds
inc
push
mov
icebp
sbb
inc
xchg
jmp
loope
insb
ljmp
xchg
jmp
pop
popa
adc
testb
out
imul
sub
jns
std
fbstp
cmpsb
jns
and
xchg
ds
adcl
ljmp
mov
inc
fcmovnu
xor
jmp
mov
sub
jmp
dec
adc
or
inc
pop
xchg
addl
stos
xor
dec
roll
es
nop
mov
sbb
leave
and
push
add
arpl
enter
fwait
dec
out
lods
mull
mov
std
sub
adc
test
xchg
insl
loopne
repz
es
cmp
jnp
push
mov
adc
xchg
mov
push
xchg
lcall
cmp
xor
pushf
fdivrl
or
mov
jp
stos
or
leave
aad
xchg
sbb
into
pop
sahf
and
push
cli
daa
mov
pop
movsl
addr16
sub
jne
add
push
mov
pop
mov
or
in
notl
dec
sub
scas
cmc
cmpsb
push
jns
jge
js
test
mov
or
cmp
and
ret
rcl
add
mov
cmp
imul
jns
pop
fbstp
pop
jge
xor
cli
xor
xchg
movsb
inc
dec
or
adc
and
xchg
or
dec
es
sahf
push
xchg
add
sbb
fisubl
das
mov
lods
hlt
xchg
inc
nop
or
ljmp
cs
jp
add
nop
aaa
push
mov
ret
cmpsb
adc
addr16
cli
xlat
fs
or
js
cwtl
repz
mov
int3
fsubrs
mov
xor
pusha
sahf
movsb
adc
jle
jecxz
cmpsb
repz
mov
fisubrl
prefetchw
movsb
pop
icebp
mov
push
jmp
add
shl
inc
sbb
push
push
push
insb
les
dec
inc
into
stos
leave
in
addr16
xor
loopne
xor
out
mov
add
cmp
cltd
out
cli
or
mov
jle
les
loope
pop
xchg
in
popf
jge
out
mov
inc
add
cmp
test
ljmp
ds
cmp
into
cmp
mov
ret
jmp
ljmp
mov
add
dec
push
or
inc
insl
stc
jno
and
scas
mov
frstor
fwait
mov
cmpsl
pop
push
test
jl
scas
cmp
mov
pop
inc
rorl
add
or
or
cmp
js
push
sti
pop
aaa
fwait
stos
cwtl
lock
je
repz
cmpsl
sub
clc
mov
cmp
push
fsubl
popa
imul
inc
mov
cmovnp
addr16
daa
sarl
dec
lods
dec
loope
cltd
packsswb
cli
stos
outsl
cmp
cmpb
dec
push
lret
mov
inc
xor
fwait
dec
mov
mov
xchg
cmp
scas
inc
pop
mov
xchg
mov
xchg
popa
cmpb
bswap
mov
das
cwtl
pop
mov
and
inc
nop
adc
popa
and
sub
sbb
lods
mov
test
pop
sub
pop
mov
nop
insb
lcall
and
insl
sub
scas
cmp
mov
test
ss
mov
mov
out
jno
or
mov
jle
negl
mov
sub
rcrl
ror
loop
push
daa
xor
sbb
jae
stos
sarl
mov
jns
rcr
es
sarl
lods
aam
jmp
loop
adc
cmpsb
jle
dec
loop
divb
pop
jo
dec
xchg
sub
ret
mov
lret
push
std
subl
movsb
sbb
jmp
adc
mov
cmpsl
xor
adc
push
jb
jmp
mov
push
pop
xor
das
add
pop
sbb
outsb
shlb
mov
pop
sub
pop
sti
push
xchg
test
stos
add
mov
mov
xor
cmpl
push
add
rorl
call
sbb
sahf
ficomps
iret
out
push
std
cli
cltd
and
out
call
mov
xor
mov
cwtl
pop
hlt
mov
std
pop
in
mov
into
jno
pop
xor
ljmp
mov
push
inc
fdivrl
sub
fcomi
lret
lds
add
jb
push
jmp
sub
push
sub
mov
in
and
dec
lcall
pushf
adc
addb
and
iret
sub
ret
mov
and
mov
movsb
or
sti
repz
jne
fwait
sbb
mov
mov
ret
aas
das
leave
mov
lods
push
pushf
push
clc
cs
lret
sub
xchg
and
shll
cmc
mov
mov
lea
mov
insl
sti
jb
and
mov
cmp
fcoml
bound
subl
gs
std
jg
loope
inc
adc
cmp
in
aas
orb
test
gs
mov
ds
jecxz
adc
mov
jmp
add
dec
outsb
adc
aad
add
ss
arpl
imul
into
fcmovnbe
cs
test
mov
sbb
mov
ret
cli
test
test
jns
out
inc
leave
sub
mov
xchg
pop
xchg
nop
mov
push
push
out
cld
cmp
mov
hlt
jmp
call
ljmp
mov
mov
xchg
fiaddl
popa
add
pop
imul
cwtl
jb
and
cltd
mov
mov
push
add
add
and
lods
movl
push
mov
jnp
mov
sbb
hlt
mov
mov
mov
or
adc
sub
idivb
iret
add
cmp
pop
out
mov
inc
xchg
cmp
lret
mov
shll
sbb
and
push
faddl
or
roll
xchg
and
cltd
jnp
jne
test
mov
xchg
cmp
ficoms
add
int
xchg
xor
test
pop
jmp
push
sub
xchg
sbb
jnp
mov
lods
inc
in
daa
lcall
add
push
pusha
mov
repz
add
pop
int3
aad
xlat
add
pop
xor
les
or
and
std
int
pop
xchg
inc
ffree
cmp
mov
mov
inc
mov
mulb
or
jbe
cmp
inc
setnp
mov
insb
inc
sbb
sbb
movsb
test
push
addr16
int
fildll
cmp
add
sbb
movsb
jmp
lock
outsl
nop
es
cli
push
lret
call
loop
pop
daa
ljmp
fs
adc
mov
mov
add
xor
pop
add
loop
jmp
push
cmc
push
xor
je
popf
les
xor
mov
dec
mov
lret
fwait
xchg
mov
sbbl
adc
mov
out
pop
fs
jecxz
push
inc
fnstcw
push
mov
ja
sbb
cmp
dec
mov
jns
mov
xchg
pop
mov
std
ja
xchg
imul
std
enter
out
pop
xchg
mov
aaa
cmp
popf
pushf
jge
xlat
test
test
mov
jg
xchg
ljmp
jp
ret
out
mov
jmp
cmp
sbb
or
sti
sbb
lods
adc
cmp
sbb
jg
in
jbe
push
mov
mov
test
gs
stos
and
rcrl
xor
add
test
jecxz
cmc
jg
je
jae
mov
xchg
das
add
dec
nop
fadd
js
cmp
sarb
pop
xchg
pop
stos
in
mov
adc
push
roll
das
add
jbe
movsb
sbb
jmp
clc
outsb
cmp
shr
mov
dec
mov
or
shlb
repz
fcomp
stos
aas
ljmp
mov
mov
xor
sbb
sarl
js
push
mov
cltd
lds
arpl
and
xchg
mov
clc
jp
sub
jo
sti
les
pop
pop
jbe
fsubrs
push
iret
pop
mov
call
inc
jl
ret
mov
lods
xchg
xlat
in
out
loop
sbb
push
mov
addr16
jge
mov
arpl
xchg
pop
add
pop
andl
add
sbb
aaa
aaa
or
inc
push
sub
aaa
add
inc
mov
iret
add
adc
adc
mov
dec
push
and
push
cmp
push
mov
sti
and
mov
sbb
rcrl
push
out
or
jmp
mov
out
cwtl
imul
mov
rolb
mov
pop
ficoml
jge
jp
out
cmpsb
mov
push
mov
push
push
insl
jmp
inc
push
aam
rol
push
fistps
aam
xchg
jae
bound
out
lcall
mov
mov
imul
mov
sarb
dec
xchg
or
je
data16
xor
je
add
or
cmp
dec
ja
aaa
jp
icebp
cli
and
add
dec
push
rcrl
xor
pop
test
jecxz
jae
sub
lods
push
cli
mov
and
sbb
mov
jae
dec
imul
cmc
std
divl
sub
jge
fbld
in
stos
sbb
imul
adc
inc
jge
mov
lea
setns
inc
sarl
pop
popa
dec
pop
or
frstor
pop
test
fdivrs
notb
lahf
mov
aam
lods
adc
aaa
clc
imul
xchg
xchg
add
les
mov
or
mov
push
cmp
sbb
sbb
das
dec
std
pop
sahf
sub
push
imul
mov
les
and
into
pop
inc
and
aam
sti
dec
sbb
adc
mov
shrb
or
rep
shlb
jge
cmp
insl
stos
and
in
xor
jno
das
popa
inc
call
fstl
mov
mov
sbb
inc
dec
adc
add
dec
out
sub
mov
aas
xor
adc
pop
sub
mov
and
xlat
mov
ficomps
cltd
cmpsl
sub
js
stc
js
ret
mov
mov
mov
push
iret
adc
push
pop
mov
out
push
andl
fisubrl
ja
push
ficompl
xchg
jp
fistpll
dec
movl
xor
cmc
pop
leave
mov
enter
pop
add
mov
sbb
mov
push
roll
mov
push
jle
aaa
sub
and
dec
dec
mov
mov
dec
sbb
fwait
pop
lret
mov
sbb
arpl
gs
xor
cmp
cs
xchg
mov
xchg
mov
ret
ret
push
in
mov
sub
mov
fidivrs
shl
push
jecxz
xchg
les
pop
dec
cltd
mov
mov
push
jmp
mov
cltd
jns
add
dec
decl
and
adc
xchg
adc
mov
and
fidivrs
mov
imul
push
movsb
shll
xchg
fsub
jbe
sub
mov
ja
das
mov
lock
imul
add
or
jge
and
call
push
cmp
mov
gs
rorb
lods
mov
xor
ljmp
loop
jle
sbb
mov
or
xchg
mov
int
push
pop
jge
mov
sbb
stc
xor
test
addr16
inc
ljmp
pushf
lock
pusha
jae
imul
pop
das
pop
pusha
cld
and
in
das
or
dec
sub
clc
cmp
ret
pop
es
jb
xchg
pop
je
xchg
out
and
xchg
sub
xchg
sub
mov
rorl
dec
das
xchg
cld
pushf
fdivrs
je
sbb
cmpsl
cltd
add
add
cmp
in
ja
pop
mov
and
loopne
inc
mov
loope
push
rclb
sahf
aam
mov
mov
inc
aaa
cwtl
mov
scas
or
decl
js
xor
inc
sub
dec
and
or
lahf
jl
fdivs
imul
jge
or
cmp
jb
jle
cld
or
daa
jecxz
mov
xchg
mov
repz
cmp
pop
cs
jo
jbe
cwtl
mov
jl
adc
ret
mov
dec
inc
std
jns
cmpl
and
mov
testb
jns
inc
movsl
jbe
and
rclb
insb
mov
jle
add
adc
mov
jnp
fsubrl
loopne
js
fisttps
nop
mov
inc
jecxz
pop
mov
jo
sub
mov
xlat
mov
mov
and
leave
push
test
pop
dec
sub
fdivrl
push
movsl
add
jmp
pop
int3
pop
fcmove
lods
pop
out
pop
aas
push
leave
leave
icebp
call
out
lcall
mov
pop
inc
sahf
repnz
mov
add
shlb
fidivs
inc
xchg
lcall
xchg
addr16
imul
sub
push
push
jmp
xchg
xor
mov
pop
pop
and
mov
in
cmp
hlt
adc
lods
mov
in
hlt
les
jle,pt
stos
cmp
mov
ljmp
adc
jecxz
inc
xchg
bnd
adc
pop
fwait
mov
inc
cld
aaa
leave
outsb
test
or
mov
idiv
mov
scas
or
and
pusha
xchg
sahf
mov
pop
js
ja
movsb
pop
sub
ja
jle
dec
popf
push
pop
fs
mov
stc
test
or
mov
insb
lea
and
dec
shrb
sub
mov
jns
add
mov
or
jmp
loop
outsb
loope
adc
fisubl
mov
or
loopne
jge
adc
out
jno
fistpll
xor
pop
das
and
pop
fwait
sub
test
xor
pop
inc
and
lds
cltd
cld
loopne
mov
jmp
es
decl
push
out
mov
fmul
pop
or
sub
sub
cmc
aaa
hlt
jecxz
cmc
aas
iret
mov
mov
ret
pop
pop
push
dec
bound
adc
fstpt
mov
sbb
sbb
inc
outsl
dec
mov
xchg
pop
jmp
adc
jge
inc
insl
pop
jnp
mov
icebp
jbe
add
jecxz
in
sub
inc
pop
scas
xor
pop
enter
push
int
xor
xchg
fstpl
pop
mov
xchg
mov
repnz
add
xchg
pop
add
sub
cltd
cmp
lods
inc
addl
inc
dec
loopne
push
pop
jp
cmpsl
in
inc
call
mov
inc
and
jbe
pavgb
cwtl
jmp
aam
aam
xchg
out
loop
xlat
jb
push
orl
in
ljmp
lret
xchg
imul
je
lods
jnp
pop
pop
inc
loop
cli
or
shr
push
ds
xchg
dec
fistps
sub
and
mov
lea
test
pop
clc
mov
and
mov
xor
into
mov
ficoms
cmp
push
or
inc
dec
dec
jno
das
out
imul
outsb
adc
out
jne
xor
pop
xlat
sbb
mov
mov
mov
lahf
ss
lahf
ror
mov
pop
jnp
scas
cmp
cmpsl
clc
push
outsl
pop
and
push
ss
pop
dec
lcall
mov
sarb
js
push
mov
and
jg
ficomps
mov
sub
jmp
loopne
xorb
dec
sarb
fisttpl
lods
dec
in
jae
call
repnz
or
sarb
fistl
adc
mov
and
jmp
rorl
fmull
pusha
jae
out
mov
imul
jo
pop
pop
dec
fdivr
jae
xor
sahf
cs
insb
outsb
scas
int3
enter
jge
test
loop
dec
cmp
shll
mov
sub
bound
stos
or
mov
ja
out
enter
xor
icebp
cmp
stos
enter
adc
cs
aam
int
xor
fcmovbe
sub
out
pop
lock
clc
xchg
xor
add
jns
fcoml
dec
mov
sub
inc
mov
xchg
fistpl
cmp
mov
in
jbe
nop
ret
dec
subl
xchg
aaa
nop
adc
xchg
xchg
fs
sarl
pusha
push
jno
xchg
das
in
jae
sub
arpl
pusha
pop
adc
out
in
shl
sbb
xchg
cmp
mov
hlt
repz
sub
negb
jno
and
cmpb
test
in
mov
fsubrp
popf
jl
or
repnz
jmp
pop
pushf
notl
out
jge
das
adc
cmc
push
loop
adc
xchg
xor
xchg
cmp
push
cmp
pop
xchg
pop
cwtl
icebp
pop
imul
incb
adc
mov
and
push
popf
pop
mov
out
jmp
mov
xchg
es
sbb
rcr
jle
sub
xlat
aaa
incb
inc
xlat
or
lcall
inc
sbb
or
xlat
mov
mov
in
adc
sub
lea
lods
movsl
xor
subb
sub
imul
in
imull
das
or
push
int3
jo
push
popa
pop
xchg
jno
jmp
ja
and
movsl
shrl
pusha
dec
lcall
clc
and
fdivrp
push
mov
dec
test
loop
popa
mov
dec
cmp
jnp
fucom
sbb
pop
xchg
and
sbb
mov
cs
and
mov
jl
pusha
inc
xchg
inc
lcall
add
sbb
lret
mov
and
loopne
jp
gs
mov
daa
mov
fisttpll
cwtl
jb
fs
sbb
inc
outsb
jns
stc
cltd
subb
stos
or
pop
push
pop
and
sbb
stos
orb
jne
mov
dec
aaa
xchg
icebp
clc
lcall
test
mov
xor
jno
cmc
mov
sub
jo
and
sbb
call
cld
adc
inc
push
push
xchg
mov
lods
xchg
cmpsl
xchg
jl
and
ret
enter
shll
stc
push
cwtl
jae
dec
bound
out
ds
dec
mull
insl
and
push
mov
sub
std
cmpsb
sbb
lods
ficomps
lock
inc
mov
fistpl
out
bound
cmp
and
roll
lcall
idivl
in
push
dec
out
mov
insb
inc
cmc
push
xchg
cmp
insl
lret
xchg
insl
ja
or
add
mov
or
fadds
mov
dec
adc
push
fistpl
cmp
push
cmp
lods
or
push
cmpsl
jno
inc
sub
scas
fdivl
xor
push
inc
lea
ret
loop
mov
inc
loope
cmp
scas
push
movsl
adc
sti
ss
nop
movsl
ljmp
or
and
sub
mov
or
inc
lods
bnd
jle
popa
in
daa
loope
hlt
sub
aas
jns
inc
mov
in
adc
push
and
mov
add
rclb
pop
mov
scas
sbbb
adc
mov
jge
inc
sbb
outsb
test
frstor
lods
mov
push
cmp
inc
pop
cltd
out
dec
lea
clc
dec
mov
daa
or
xchg
les
jmp
sub
push
fldt
in
xchg
test
mov
fiaddl
std
jbe
sti
mov
inc
jbe
pusha
mov
cwtl
subl
cmovs
pop
lahf
sbb
or
hlt
lock
inc
in
into
adc
dec
shlb
icebp
adc
add
jbe
pop
hlt
jb
out
jl
mov
dec
loope
xchg
mov
adc
mov
adc
dec
gs
and
sbb
out
jbe
divb
push
and
pop
cmc
into
adc
fcoms
inc
adc
sbbl
das
add
xor
xchg
je
mov
inc
add
mov
mov
mov
adc
das
push
leave
or
push
mov
movsl
mov
cmpsb
fwait
adc
cmpsl
daa
push
pop
mov
add
cmp
fimuls
mov
repnz
testb
popa
sub
lahf
xor
push
jbe
lods
or
push
push
jge
cli
cltd
pushf
cmp
push
ffreep
xor
mov
call
inc
dec
outsb
xchg
mov
inc
inc
scas
rorl
pop
push
xor
mov
ja
mov
andl
fdivr
test
dec
cmp
jne
jns
stos
lds
push
rcll
in
cmp
ds
and
test
mov
and
sub
scas
push
cmp
xchg
pop
lds
notb
mov
mov
js
repz
stos
dec
and
push
inc
insl
xchg
mov
fnstcw
push
adc
mov
ficompl
and
pop
stos
out
pop
inc
dec
dec
fs
out
imul
std
cmp
sub
das
divps
sub
inc
jg
dec
in
nop
inc
lret
xor
xor
cmp
fcompl
popa
pop
jne
cmp
inc
inc
mov
jns
aaa
push
or
mov
xor
pop
xor
pop
sbb
push
cmc
repz
dec
jg
cmp
jns
jg
ja
push
pop
jo
push
jno
imul
mov
lret
in
insb
pop
mov
push
or
inc
add
or
stos
xor
push
inc
xchg
out
pop
call
pop
lret
mov
fistpl
aas
js
push
mov
sub
into
lock
dec
aaa
movsl
out
in
aaa
xchg
mov
inc
lock
sub
adc
iret
aaa
and
xchg
or
imul
and
cmp
dec
fdivs
cmpsb
js
repz
mov
or
dec
adc
xor
jp
sbb
add
and
insb
cmpsb
lods
adc
js
movl
in
jge
cwtl
push
lods
xchg
dec
sub
hlt
or
es
sbb
inc
js
loopne
push
mov
sbb
daa
in
push
sub
jb
cld
mov
insb
and
mov
dec
fisttpll
pop
test
xchg
mov
mov
ss
pop
dec
aam
pop
aam
int
ljmp
pop
and
in
fldt
xlat
mull
push
mov
add
adc
test
mov
or
mov
pop
dec
inc
rcr
shl
mov
fisubrl
jo
push
je
pop
gs
mov
sbb
pop
mov
repnz
xchg
popa
sar
and
pop
inc
xor
das
outsl
pop
flds
lahf
xor
inc
sub
popf
inc
push
subb
aam
loop
repz
insl
pop
movl
inc
int3
adc
xchg
add
push
cmpsl
or
pop
test
xchg
push
cwtl
inc
mov
cmp
ss
pextrw
jge
push
lea
cmp
aad
or
les
and
jp
push
xchg
dec
punpcklwd
jo
mov
add
xor
adc
ds
jecxz
fidivl
sub
mov
je
jp
jae
mov
lret
fs
clc
push
imul
das
psrld
fisttpll
or
insl
cmpsb
pusha
and
mov
mov
push
push
imul
sbb
add
popf
xchg
mov
les
sub
xor
adc
xor
mov
dec
xor
lahf
and
pop
push
or
cli
lock
int
pop
faddl
and
scas
dec
outsl
cltd
push
xchg
fdivrp
push
mov
or
fcoml
sbb
mov
jno
pop
inc
or
sub
jns
inc
aam
inc
stos
add
jne
ja
lock
shrl
mov
push
je
and
add
adc
mov
xor
push
shr
lock
add
je
imul
cld
mov
xchg
sub
adc
jecxz
mov
mov
mov
jecxz
lahf
stc
jnp
xchg
cmpsb
in
adc
lock
arpl
cmpsb
cmp
cmpsb
xor
data16
data16
push
cs
mov
inc
aas
aad
scas
scas
xchg
lahf
mov
jnp
pop
nop
scas
sbb
sahf
sti
adcl
in
aam
out
aad
repnz
hlt
mov
inc
sbb
mov
pop
push
enter
cld
jg
shr
fwait
adcl
fnstcw
and
xor
cltd
inc
or
leave
bound
out
pushf
in
push
sbb
sbb
adc
pop
clc
xchg
and
addr16
jbe
enter
add
jnp
daa
inc
cld
pop
ss
std
pop
sub
enter
bound
bound
jl
jecxz
or
cld
out
shrb
and
popa
jp
cli
sbb
and
jecxz
call
out
notl
fcompl
movsb
inc
sub
pop
and
mov
ds
and
js
add
ret
stos
or
jo
pop
fsub
enter
fs
sub
or
aaa
dec
jl
lcall
es
mov
mov
or
add
and
ret
and
lret
cmp
jae
mov
mov
insl
xchg
incb
or
imull
adc
mov
std
and
cmp
outsb
adc
and
std
xchg
iret
xlat
fwait
popa
repnz
add
ret
pop
call
jno
lods
cmp
xchg
sub
aas
and
pop
dec
dec
fldcw
sbb
shr
je
sub
leave
movsb
jle
and
sub
xor
xchg
cwtl
into
xchg
mov
adc
out
rep
and
cmp
jecxz
mov
outsl
jne
jo
mov
mov
sahf
xor
sbb
loope
jno
xchg
jbe
jmp
cmp
cmpl
in
cmp
jmp
push
cmpsb
ja
and
scas
jmp
xchg
cmp
push
sub
mov
xchg
jmp
leave
std
pop
push
fs
push
ficoml
xor
or
adc
dec
pop
cld
loopne
mov
and
dec
out
jge
cli
mov
lds
out
mov
lods
aam
jg
addr16
push
cmp
mov
outsb
repz
xchg
xor
and
jb
sbb
jb
and
sbb
xor
jnp
inc
push
test
test
sbb
into
rcrb
cli
mov
push
pop
cmp
mov
fiadds
incb
fcoml
gs
popf
fdivrp
xorl
cmp
clc
and
les
jne
clc
and
pop
dec
test
cwtl
or
mov
cmpsl
inc
pop
sub
mov
and
cmc
rorb
xor
ljmp
lods
push
out
pushf
mov
in
xchg
in
scas
dec
cs
pop
pusha
out
jae
pop
inc
or
adc
mov
sarl
orl
jge
dec
bound
rclb
push
int3
ds
sub
jae
outsl
jmp
inc
sub
mov
inc
or
or
sahf
sub
insb
push
ds
inc
inc
into
sub
dec
out
sub
bound
mov
cmpsl
fildll
or
adc
pop
cmpl
jmp
add
sbb
sbb
mov
sbb
ret
fisttpl
cmpsb
mov
cvttps2pi
cmp
loope
inc
pop
mov
fldt
jmp
push
scas
pop
or
inc
mov
mov
jnp
hlt
adc
cmpsb
cmpsl
cli
push
dec
out
or
xlat
jo
xchg
sub
and
adc
sub
das
add
mov
lds
out
outsb
rclb
mov
roll
lcall
jne
pop
lcall
dec
insl
xor
push
int
sub
imull
push
mov
ret
and
insb
daa
jo
into
pcmpgtb
icebp
sub
dec
adc
ds
push
das
addr16
cmp
sti
pop
ja
ret
inc
inc
cmpl
and
loopne
dec
adc
xchg
inc
pop
enter
mov
inc
out
push
fs
xchg
xchg
in
test
lcall
and
add
push
daa
fsub
mov
mov
pop
sub
int3
clc
push
fs
sbb
mov
repz
jge
sub
xor
ss
lods
mov
lcall
adc
sub
xor
insl
xor
cmpsb
pop
fsubrl
xchg
jns
das
or
or
jle
inc
loope
push
push
repz
push
loope
loope
in
dec
cmp
jns
mov
movb
sub
roll
aaa
movsl
sub
ljmp
push
inc
sbb
push
in
hlt
push
push
cmp
mov
jns
jbe
xchg
fs
adcb
add
dec
hlt
pop
arpl
inc
cmp
in
pop
out
cmovnp
mov
sub
mov
test
xchg
and
cmp
sbb
cltd
je
mov
out
adc
cltd
call
subb
es
pop
subl
fnstcw
and
ret
add
jge
divl
mov
cmpsb
inc
lea
inc
lret
xor
xchg
mov
bound
fprem1
adc
rcr
bound
cmp
fs
lret
xor
repnz
flds
sbb
icebp
ljmp
andl
in
push
insl
imul
push
ret
xchg
iret
or
shl
int
jo
fwait
stos
add
repz
jb
pop
or
pop
add
add
inc
jo
mov
repnz
pop
mulb
dec
lea
std
jne
jge
cs
mov
orb
das
push
sbb
fs
pop
dec
sub
jle
cmp
xor
clc
xchg
dec
test
enter
push
pop
fdivrl
dec
fdivl
xor
in
pop
push
inc
adc
pop
dec
sbb
popf
sbb
packssdw
subb
iret
sub
mov
cwtl
lcall
loope
test
andb
jg
aam
mov
and
xor
cmc
lds
inc
lcall
pop
rcll
loopne
inc
nop
mov
mov
dec
mov
nop
xor
dec
idivb
push
push
xchg
mov
fucomip
daa
and
add
inc
repnz
jbe
scas
pop
push
xor
cltd
ss
mov
pop
leave
repnz
inc
xor
and
add
cmp
rolb
push
sbb
add
pop
dec
xorb
pop
jle
mov
jp
adc
je
inc
pop
std
mov
lcall
add
add
inc
dec
movsl
xor
ds
cmp
ret
movsb
mov
lea
jns
adc
ret
test
out
sbb
xchg
ret
aaa
jno
stc
jge
dec
jp
leave
testb
or
icebp
and
pop
test
xchg
mov
mov
inc
int
xor
cmp
fwait
jae
xor
push
pop
xchg
test
cmp
push
push
and
xchg
or
lods
daa
push
dec
inc
clc
lods
dec
outsb
dec
inc
dec
xchg
lret
pop
loopne
inc
cmp
test
enter
or
cmp
push
mov
adc
aaa
iret
cltd
lahf
gs
xor
or
leave
insb
or
adc
daa
jns
stc
lods
out
cmp
enter
scas
push
mov
ret
dec
test
ljmp
fildl
xor
inc
lods
je
mov
sbb
add
fisttpl
mov
insb
lret
sub
movsb
cmp
pop
pop
fldl
jns
movsl
bound
sub
jns
popa
jp
aaa
jno
lds
adc
xchg
and
sub
add
in
mov
mov
mov
cmp
jae
fmull
mov
test
push
xchg
icebp
push
inc
repz
arpl
push
imul
inc
out
in
mov
jmp
fldenv
inc
sub
jge
pop
xor
mov
dec
cmp
cmp
mov
out
pop
cltd
adc
dec
imul
sub
mov
repnz
rcrb
mov
xlat
xchg
enter
insb
lahf
dec
cmp
out
push
lea
mov
ja
loopne
xor
mov
inc
jae
push
dec
sbb
insl
decb
mov
mov
xor
lods
jo
adcl
mov
xor
loopne
ret
lods
add
scas
insb
leave
mov
inc
pop
out
push
jle
icebp
testl
je
and
lea
jae
lds
cmp
fisttps
orl
jnp
shll
lret
xchg
mov
mov
or
loop
push
in
sub
arpl
xchg
out
mov
add
add
ljmp
sub
jbe
xchg
in
out
cmovl
pop
aaa
mov
pop
cld
ret
mov
sub
sbb
insl
mov
pusha
adc
fiaddl
insl
lea
add
mov
into
or
mov
push
pop
stos
cmp
test
mov
mov
in
sub
sub
movsl
add
jg
sbb
jg
and
jg
orl
add
mov
daa
and
leave
sar
das
fdivs
sbb
rorb
call
pop
mov
lret
fidivrl
mov
or
dec
mov
inc
pop
les
mov
pop
sub
lret
pop
push
push
lods
inc
mov
adc
adc
adc
jne,pt
andl
shrl
mov
pop
add
jmp
push
jne
leave
mov
and
cmp
push
mov
and
fs
jns
jge
outsb
cld
sub
pusha
pusha
test
dec
push
jp
testl
mov
test
insb
jmp
add
sbb
es
out
in
pop
ror
loope
aas
out
test
fwait
sub
ss
and
push
xor
roll
xchg
sbb
rorl
inc
cltd
add
xor
ja
jno
xchg
inc
push
popf
sbb
insb
repz
mov
or
cltd
mov
lea
cmc
sub
cmc
push
call
adc
mov
decb
pop
imul
outsl
xchg
mov
movsl
push
mov
movsl
fistpl
loope
jb
jecxz
rcrl
shlb
arpl
in
pop
pop
or
stc
adc
xlat
in
mov
mov
les
mov
xchg
flds
insb
out
ds
or
aas
mov
adc
pop
lods
insl
jno
xchg
jg
fisttps
ljmp
cmpsl
cltd
loop
mov
add
lahf
jae
jne
sarb
pop
mov
ja
fdivrl
pop
int3
lret
push
inc
rol
mov
jb
push
pop
push
insb
lea
or
pop
ret
stos
in
in
fwait
push
or
movsb
popf
push
mov
icebp
stos
std
ds
xchg
and
lret
jg
loopne
xchg
clc
aas
shr
pop
pop
xor
mov
cwtl
mov
sbb
add
cltd
push
mov
or
jae
push
sbb
fildl
shl
dec
xchg
or
out
and
and
aam
adc
mov
in
xchg
orb
hlt
adc
rcr
xlat
test
mov
or
pop
loope
xchg
mov
jno
push
add
stos
adc
cmp
xchg
xchg
out
daa
sbb
iret
sub
orb
cwtl
mov
sub
sub
negb
gs
or
push
xchg
sub
lret
sbb
aaa
mov
std
lcall
scas
xchg
imul
arpl
xchg
movsb
pushf
lea
cmpsl
leave
pop
dec
loope
mov
mov
scas
push
mov
cmpsl
xchg
test
test
in
mov
jecxz
lahf
repz
in
add
negl
roll
mov
push
jbe
mov
xor
rcl
mov
rcll
or
ficoml
pop
repnz
sbb
arpl
fisttpl
adc
data16
sbb
add
xor
sub
jae
icebp
push
fsts
ja
jg
mov
adc
out
mov
ss
enter
inc
fsub
and
std
jmp
sub
ret
mov
and
mov
xchg
mov
fiaddl
frstor
dec
dec
loopne
dec
cmpsl
cwtl
loopne
outsl
cltd
dec
mov
addb
aad
add
negl
jne
add
daa
aam
mov
push
mov
push
stc
aad
sub
dec
nop
mov
or
inc
daa
faddp
nop
or
fdiv
sbb
xchg
pushw
pop
jp
push
out
sti
dec
es
jno
lret
xor
inc
xor
mov
xrelease
lea
inc
idivl
jecxz
inc
push
push
sbb
add
pop
int
das
lea
test
bound
fistpl
scas
lcall
pop
sbb
cmp
dec
mov
gs
cmp
inc
xor
cmpsb
fwait
cmpsb
pusha
and
vandps
insl
sti
adc
sbb
jno
lock
cld
out
xor
cwtl
jecxz
mov
fcomip
dec
xor
cli
leave
xor
setge
pop
ret
mov
fwait
or
out
pop
fildl
fldcw
xor
icebp
inc
pop
mov
sbb
cmc
stos
and
icebp
or
xchg
es
lret
and
mov
sbb
sti
xchg
sub
mov
adc
sar
test
and
imul
sti
shrb
out
dec
pusha
fs
or
nop
fisttpll
pop
outsb
mov
aaa
push
push
inc
push
movsb
xlat
mov
add
sbb
pop
and
fisttps
jg
enter
pop
sub
jno
dec
sbb
add
and
test
das
nop
into
fldcw
scas
cmp
xor
fstp
adc
sub
test
dec
adcb
mov
adcb
cld
xor
mov
mov
cs
jle
es
arpl
cmp
pop
imul
and
inc
pop
add
sub
nop
mov
pop
lret
mov
mov
psrlq
sbb
std
sbb
inc
mov
push
sbb
xchg
into
adc
and
cmpsl
fdivrl
mov
fwait
or
shrb
mov
out
std
popf
xor
pop
push
inc
push
inc
add
add
jecxz
add
cmp
jl
repnz
xchg
in
cmpb
fcmovbe
xchg
lock
ret
mov
lahf
pop
scas
jns
mov
in
sbb
rorl
cmp
lods
sub
mov
insl
sub
inc
fisttps
outsb
push
scas
std
mov
test
pop
sbb
ret
push
pop
mov
dec
mov
mov
xchg
mov
or
jnp
daa
lcall
fs
outsb
push
pop
enter
mov
pop
je
icebp
dec
lcall
mov
js
sbb
iret
sbb
fucom
daa
cli
jle
imul
mov
in
xor
sbb
pop
loop
imul
xlat
out
mov
cmc
xorl
lods
mov
or
mov
jmp
mul
pop
cmp
sub
xchg
sub
filds
xchg
mov
sub
mov
xchg
push
rorl
in
cmc
push
jo
sbb
fadd
xor
stos
pop
ljmp
test
fldlg2
repz
adc
fimull
pop
push
pop
add
imul
test
arpl
push
xchg
mov
add
add
dec
mov
into
mov
shr
jne
jo
outsl
ret
xchg
ret
jmp
stos
mov
pop
jl
and
lock
pop
stos
adcl
popa
or
mov
loopne
test
add
loop
adc
pop
or
xor
in
fldt
lds
jmp
mov
ret
insb
arpl
push
cmp
scas
mov
out
mov
sbb
lea
pusha
enter
test
mov
adc
bnd
aam
dec
std
aam
imul
mov
movsl
dec
add
push
push
add
add
or
mov
xchg
push
pop
repnz
xor
jmp
xlat
adc
jne
repz
xor
scas
add
jle
xchg
mov
adc
mov
adc
iret
lock
xor
sbb
or
dec
add
test
jp
in
fisubrs
cli
adc
fstpl
jne
xchg
push
cmp
add
sbb
pop
mov
push
rclb
xor
cwtl
in
ss
dec
hlt
loope
outsb
and
inc
mov
dec
in
mov
cmp
loopne
in
jp
xchg
add
sbb
push
push
js
ret
mov
ja
pop
adc
sbb
push
ja
sub
fisubs
scas
pushf
mov
lret
mov
aam
or
in
pushf
mov
cmc
ss
sti
xchg
faddl
jmp
insb
jbe
test
lret
adc
outsl
repz
dec
push
test
push
inc
push
and
dec
iret
imul
inc
fldl
sbb
mov
loop
je
inc
imul
sub
imul
outsb
out
inc
rcrb
dec
or
mov
jae
push
call
inc
outsb
out
sub
fsts
pop
out
xchg
repnz
or
jl
lds
test
rcrl
sbb
int
shrl
push
int3
adc
jmp
addb
inc
js
pop
out
xor
orb
xor
addr16
popf
movsb
push
mov
sbb
bnd
xchg
sahf
lret
iret
pop
or
mov
mov
push
push
mov
in
dec
and
push
addl
test
push
jp
adc
inc
xor
iret
dec
add
mov
adc
loope
or
call
gs
mov
lock
shrl
add
movsb
hlt
test
sub
enter
lock
pop
les
xor
in
jl
pop
imul
divl
mov
push
repz
out
adc
xchg
adc
jmp
jl
ja
test
out
push
mov
lret
add
cmp
add
xlat
cltd
add
fisttpl
ds
pop
xchg
imul
inc
xor
out
cwtl
rolb
mov
or
sbb
std
aad
incb
lret
or
push
cli
pop
sbb
pop
pop
out
insb
sub
scas
dec
and
sbb
idivb
pushf
push
xor
icebp
mov
push
in
inc
and
pop
xchg
enter
mov
cs
mov
push
xor
sub
out
adc
cmpsb
mov
sub
xchg
mov
les
push
pop
cwtl
dec
xor
nop
push
and
jge
aaa
mov
imul
ret
aad
cwtl
inc
negb
lret
add
out
inc
outsl
mov
add
aas
mov
dec
fldt
mov
out
or
mov
lcall
sub
inc
shll
sub
dec
push
sub
data16
ja
xchg
cwtl
shrl
jnp
mov
les
mov
in
out
mov
cmpsl
jb
pop
fists
pop
cmp
sbb
dec
sub
jb
mov
and
or
into
imul
adc
adc
fmulp
movsb
jne
test
dec
adc
shrl
fs
jmp
je
mov
push
mov
and
xor
ret
sbb
xlat
ss
adc
sti
push
ret
lods
into
mov
pop
sub
shl
and
paddw
xor
pop
dec
call
xchg
and
xchg
jle
pop
xchg
push
pop
adc
enter
add
cwtl
int3
out
push
vpshufhw
into
jbe
hlt
fwait
dec
fwait
jle
scas
xchg
jo
sahf
in
movsb
testb
pop
jo
pop
lret
xor
dec
hlt
int3
and
fwait
mov
push
nop
cmp
and
es
sbb
int
cmpl
jns
xchg
jno
add
fsubr
cmpsl
divl
sub
fsubs
sub
shrd
mov
test
xor
inc
stos
aad
pop
inc
mov
xchg
test
inc
out
repz
repz
imul
outsb
mov
mov
mov
xor
fdivr
xchg
pop
leave
lods
outsl
es
pop
cmp
pop
cmp
push
jecxz
or
imul
inc
jo
add
fs
mov
cld
aaa
paddq
inc
push
cmp
popa
xchg
pop
pop
xchg
inc
fidivs
dec
lock
mov
mov
add
in
mov
sub
cwtl
out
and
mov
add
mov
cli
outsl
or
les
out
mov
stos
xchg
inc
or
pop
mov
inc
xorl
or
mov
arpl
js
push
fnstsw
lcall
je
popa
jmp
xor
pop
mov
or
sar
add
aam
mov
stc
push
sbb
into
int3
lea
cmpb
es
or
bound
mov
jl
test
iret
xchg
jo
test
dec
in
lods
scas
stc
fsubrl
pop
add
cltd
out
jb
stos
xchg
mov
bound
xchg
jb
mov
js
sub
int3
add
in
lret
lret
test
mov
xor
stc
cwtl
mov
das
mov
mov
mov
dec
add
mov
test
rcll
push
jbe
xchg
loopne
lods
sub
cmpl
xchg
cltd
inc
ljmp
mov
jg
pop
scas
out
imul
xchg
fimull
push
push
jno
xor
xor
sub
rcr
fisubs
cltd
cltd
lret
cli
fstpt
cmp
daa
push
dec
sbb
fcoms
mov
xor
mov
adcb
xchg
mov
in
push
movsb
add
xor
test
mov
pop
mov
gs
ss
adc
mov
daa
repz
movsb
lock
in
sub
arpl
pop
movsl
jbe
mov
pop
xchg
sbb
flds
xor
fcomps
jbe
cmp
cmp
pop
ss
inc
lcall
neg
inc
push
xchg
out
fidivl
std
aaa
outsl
mov
sbb
xchg
loop
call
loop
iret
cmp
nop
rcll
cwtl
jne
mov
lahf
or
cmp
cli
mov
hlt
xchg
movsl
jp
xchg
mov
push
dec
xor
xor
push
in
cltd
addb
jecxz
out
sbb
cmpsl
add
rcrb
pusha
rol
lcall
inc
arpl
fdivrl
jbe
mov
gs
xorl
xorb
push
mov
in
popa
mov
jp
mov
call
jno
inc
xor
inc
mov
xlat
aaa
sub
test
mov
pusha
daa
inc
js
jnp
mov
jno
int
jb
jns
fildl
fildll
aas
and
jae
pop
dec
xor
js
mov
jle
data16
pushf
lock
xlat
xor
mov
and
lcall
out
xchg
fdiv
sbb
call
pushf
push
sbb
xchg
stos
out
fstpl
mov
mov
or
cmpsl
test
push
das
aam
lods
mov
cwtl
mov
adc
add
stc
fiadds
icebp
lods
adc
jmp
fdiv
movsl
clc
jge
push
pop
inc
roll
mov
imul
ret
jecxz
andl
fdivp
cs
fmull
inc
cmp
adc
addr16
jl
pop
in
cmp
aam
push
out
pop
push
cmp
in
pop
sahf
fistl
dec
popa
and
push
dec
dec
pushw
sub
add
aas
push
bnd
sbbb
and
outsl
orl
aad
loopne
xor
mov
push
sbb
jb
xchg
icebp
les
pop
andl
arpl
or
inc
cwtl
mov
mov
sub
pushf
xor
pusha
fcompl
subl
es
imul
pusha
or
jge
rclb
jmp
ss
shl
sbbb
das
dec
je
sbb
iret
out
sub
out
cmp
repz
xor
das
shll
lods
in
sub
jl
mov
mov
adc
sbb
mov
sahf
sbb
fcoms
clc
push
xchg
xor
jg
cmpb
scas
add
clc
hlt
add
mov
cmpsb
mov
fadds
dec
mov
bound
or
pop
sub
hlt
add
adc
xchg
or
cmp
adc
xor
mov
das
dec
rorb
add
mov
pusha
jge
enter
fbstp
sbb
push
mov
or
or
lcall
outsb
inc
jmp
mov
cmpb
cmp
shl
out
mulb
fists
sarb
cmc
jg
xor
sbb
xor
sarl
outsl
ja
xor
add
pop
fildll
imul
mov
jge
inc
and
xlat
adc
aad
and
mov
dec
mov
xor
mov
mov
in
jno
fimuls
hlt
push
cmpsl
or
loope
lds
cmp
sti
mov
mov
enter
push
fldenv
loopne
clc
std
hlt
pop
mov
pop
ljmp
jmp
test
and
loopne
sub
push
pop
cmp
cmp
outsl
pop
sbb
icebp
and
adc
or
stos
nop
fs
sub
xor
add
sub
mov
adc
into
loope
divl
or
dec
cmc
and
cli
pop
jp
outsb
xchg
scas
jl
xor
rolb
jge
mov
pop
fucomp
ds
inc
subb
cltd
jmp
dec
xlat
test
js
pop
scas
in
cli
cmpb
or
xchg
fsubp
fbld
dec
sbb
ljmp
sbb
or
xor
mov
dec
fisttps
sub
inc
adc
divl
in
jnp
int
subl
mov
mov
sahf
sub
lock
rcr
adc
ja
mov
mov
cld
bound
addb
aaa
adc
sbb
fimuls
das
inc
mov
lret
mov
push
pushf
mov
jo
pop
inc
add
jb
insb
sahf
xor
sbb
mov
aas
sub
in
inc
mov
pop
iret
mov
push
or
pop
lds
mov
dec
mov
bound
push
cmp
cmc
lea
les
int3
xchg
int
dec
mov
jae
repz
fldenv
jg
jnp
insl
rcll
movsl
pop
repz
push
sub
push
xor
dec
scas
mov
outsb
dec
inc
cmp
inc
shll
bnd
dec
stos
lcall
inc
sub
xchg
mov
or
jbe
out
mov
stos
mov
gs
and
pusha
cmp
ds
loopne
shrb
pop
int3
ret
test
inc
sub
insb
inc
push
mov
loop
add
ret
cmp
push
or
and
cs
jecxz
mov
mov
mov
fistpll
mov
out
getsec
loope
lds
mov
mov
mov
pushf
sbb
inc
cmp
nop
dec
jb
push
rcrl
cwtl
aas
cmp
sub
sub
xchg
gs
mov
out
jns
fistps
popf
push
rcr
mov
adc
lods
jno
fstpl
sbb
insb
cmovo
imul
mov
imul
sub
fcoml
dec
test
dec
xor
out
pop
icebp
mov
mov
shl
pusha
in
sub
fistpl
clc
jae
out
sbb
mov
xorb
lahf
dec
out
sub
mov
inc
xchg
mov
ja
jbe
or
mov
dec
xor
aam
arpl
sti
sub
int
push
pop
flds
xlat
push
pop
and
cmp
mov
sarb
sub
pop
gs
lret
fsubrs
pop
mov
sub
call
and
mov
ret
fwait
pop
addr16
or
out
add
adc
in
sar
scas
movsl
xchg
pop
push
rclb
lods
cltd
jecxz
mov
mov
cmc
jmp
xchg
pop
mov
sub
xchg
push
dec
sarl
or
lods
insb
mov
push
push
cmpsb
dec
pop
push
xor
xlat
mov
xchg
add
les
mov
test
dec
add
fcoms
xchg
data16
std
lret
jb
pop
jns
sub
out
sub
jmp
mov
es
in
aaa
sbb
stos
and
sarb
pop
stos
push
cmp
movsb
dec
daa
jmp
mov
popl
in
xlat
out
ja
rolb
add
cltd
shl
or
dec
cmpsb
ljmp
ljmp
lods
cmp
lahf
mov
xchg
mov
or
mov
cmpsl
cmpsb
cmp
jecxz
pop
push
divb
cmp
jmp
mov
and
aas
push
or
sti
fsub
std
mov
push
fdivrs
cmc
out
and
clc
cmpsb
sub
jnp
mov
popa
cltd
lcall
subl
repnz
loopne
fucom
mov
insb
jae
xor
mov
fisubs
or
jle
xor
and
mov
jae
sub
push
repz
aad
xor
add
std
fwait
xor
ret
and
movsl
dec
popf
jns
ja
cmp
cmp
adc
leave
aas
lods
addr16
jb
imul
jle
call
popf
adc
repnz
sub
mov
mov
cs
xchg
fnstenv
popa
fwait
ss
cs
push
loope
stos
cs
adc
jns
ljmp
std
sbb
sub
mov
and
stos
and
ss
addr16
imul
clc
or
xchg
lret
adc
fildll
pop
jg
movsl
push
insb
into
lock
fwait
or
gs
imul
lods
aas
xchg
xchg
push
fistps
js
mov
mov
inc
cvtps2pi
mov
add
cmpsl
dec
xchg
mov
je
jl
sbb
arpl
sahf
add
lcall
movsl
cmp
xchg
fdiv
out
pop
pushf
outsb
mov
addr16
or
add
pop
cmpsl
in
mov
push
jmp
shll
imull
adc
pop
dec
inc
stc
xchg
mov
adc
loopne
cmp
adc
pop
add
sub
sub
xor
mov
push
push
repz
loopne
bound
jle
cmc
test
cmp
sub
jne
sub
pop
leave
cmp
mov
jmp
sahf
jne
bound
gs
test
js
and
repz
jmp
test
cmpsl
rcrl
xchg
sbb
or
sbbb
inc
lret
outsl
or
pop
aad
mov
adcl
fwait
jae
mov
xchg
xor
mov
subl
data16
inc
cmpsl
out
mov
jmp
insb
out
iret
mov
popf
dec
dec
mov
sub
or
push
lea
aam
shll
in
push
hlt
mov
mov
add
cmc
in
aaa
lods
pushf
lock
and
jo
and
cmp
or
aad
loopne
aam
cmc
fcmovu
adc
cmc
xlat
xchg
or
cs
pop
push
into
jge
xchg
inc
test
adc
sarl
repnz
mov
pusha
ret
repz
lds
bnd
cmp
les
dec
cmpsb
mov
movsl
mov
pop
dec
inc
call
jl
and
shl
cmp
int
pop
imul
sub
nop
movsl
cmp
jecxz
cmp
scas
xor
push
sub
sbb
mov
inc
dec
bound
std
inc
xchg
movsl
clc
mov
mov
add
dec
mov
pop
pop
pop
dec
cmp
push
or
out
cld
mov
addr16
xor
hlt
leave
mov
out
adc
xchg
fsubrl
repz
ljmp
cmp
push
mov
test
cmp
cmp
dec
popf
mov
pop
dec
insl
sub
notb
retw
mov
loopne
dec
sahf
fstps
icebp
stos
push
jl
inc
mov
dec
sbb
push
xchg
out
inc
out
mov
sarb
push
jbe
dec
adc
dec
fists
sbb
pusha
iret
icebp
pop
xor
mov
dec
jge
in
mov
imulb
fsts
dec
shll
push
test
cltd
leave
cltd
movsb
dec
sbb
fldl
fs
dec
mov
add
mov
in
lods
and
push
sbb
or
push
jo
push
cltd
mov
fnstcw
mov
and
push
sbb
fsubrl
in
mov
clc
loop
mov
dec
jno
cmpsl
stos
jmp
jb
push
xchg
xor
mov
pop
dec
mov
leave
add
or
popa
mov
ljmp
add
imul
push
pop
sbb
pop
les
inc
test
fs
mov
mov
out
cmp
repnz
addr16
inc
add
jae
mov
dec
add
mov
cmp
inc
xchg
jecxz
in
dec
push
fwait
movsl
mov
std
stos
popa
dec
xchg
add
out
xchg
aam
push
mov
bound
outsl
cmp
int
in
out
and
or
mov
adc
xor
or
push
pop
pop
pop
fsubr
pop
add
or
js
ljmp
nop
or
das
mov
sub
fisubl
inc
iret
add
mov
fwait
add
adc
sbb
xchg
xor
sub
lods
enter
lea
cmp
mov
adc
cmp
jp
lret
mov
jb
int
mov
sub
mov
lcall
les
jb
cmp
mov
shlb
cmp
in
mov
mov
inc
jnp
fmul
out
mov
leave
mov
insb
sbb
jle
mov
push
mov
lock
cmp
add
jb
in
out
and
add
sub
enter
xchg
fs
test
loopne
xchg
stos
jbe
sahf
cmp
jl
inc
and
xchg
mov
sahf
cmpsb
scas
mov
jns
std
andl
ret
scas
dec
cltd
shlb
xor
js
mov
loop
inc
sbbb
lret
and
sub
push
movsl
jle
sub
es
add
in
sahf
arpl
inc
pop
pop
pop
dec
dec
or
add
jb
dec
jb
int
mov
inc
add
push
jmp
or
ret
pop
stos
cwtl
push
mov
stc
push
jns
and
lret
fstps
jle
sbb
scas
ret
push
jno
xor
push
ret
and
push
adc
push
loopne
pushf
clc
mov
jae
cmpl
cmp
shlb
pop
mov
mov
xor
sub
maskmovq
lods
add
or
mov
jg
mov
pop
push
fldcw
pop
arpl
xchg
and
enter
sub
pushf
lret
adc
stos
dec
jo
mov
or
arpl
stos
xchg
pop
nop
push
adc
stos
xor
pop
aad
mov
in
sarb
mov
pop
mov
dec
cmp
add
cwtl
sub
jnp
dec
outsb
fists
jp
sbb
cltd
xor
inc
lods
pop
mov
movsb
mov
fnstenv
arpl
outsb
push
mov
xor
mov
cmp
and
jnp
sub
fcoms
imul
mov
int3
bound
push
mov
data16
call
test
stc
xlat
push
jl
test
mov
daa
iret
les
push
pop
pop
xchg
mov
mov
pop
test
int
in
test
and
inc
mov
adcl
js
jl
mov
int
popa
xchg
aas
es
fsubs
mov
rolb
pop
mov
push
adc
out
into
shrl
sbb
jns
loope
xchg
mov
mov
push
popa
jp
push
bsr
adc
xor
movsl
mov
dec
mov
adc
popl
rorb
inc
cmp
inc
xor
dec
or
sbb
xor
jmp
mov
test
xchg
mov
adc
sbb
and
xchg
out
lea
xor
xor
lcall
add
repz
add
sub
lret
cltd
ds
imul
xor
jo
pop
jge
aas
sbb
add
jmp
cld
movsb
pop
push
push
cs
loop
js
push
insb
lret
loop
fldcw
pop
clc
push
xchg
xchg
mov
insl
in
aad
lwpins
lahf
mov
cmp
push
dec
pop
hlt
std
xchg
cmp
inc
enter
jno
lods
sub
cmp
xchg
adc
lret
inc
out
div
cmp
cmp
in
cmpb
xchg
sarb
jo
or
mov
push
mov
je
jle
mov
loop
sbb
push
push
or
dec
daa
sarl
aas
mov
pop
stc
dec
subl
pusha
stos
cmpsb
lea
dec
not
arpl
test
mov
lods
enter
xchg
add
je
outsl
mov
pushf
out
xor
imul
aaa
xchg
or
js
or
or
sub
adc
out
adc
mov
decl
dec
sub
fadd
mov
test
negl
ljmp
adc
stos
loopne
cmp
insl
sub
dec
jbe
xor
shll
scas
push
xlat
in
push
sub
add
sahf
sub
lds
cmp
fdivrl
pop
push
out
ret
icebp
or
out
mov
loope
xchg
int3
scas
xchg
jle,pn
mov
in
sti
rcrl
xor
sub
outsb
or
nop
arpl
adc
jecxz
xorb
popf
popl
jno
je
cs
mov
das
das
test
scas
not
dec
pop
lea
nop
js
rcrb
sub
jae
aam
or
pop
mov
aas
data16
lsl
test
inc
xor
arpl
jo
xor
stos
cmpsb
lods
push
inc
test
xchg
in
jmp
pop
clc
jnp
bound
movsl
dec
pop
popa
cmpsb
into
inc
dec
lcall
sub
jb
pop
pop
push
push
popa
mov
pop
int
jns
jle
dec
pop
mov
inc
push
repnz
dec
adc
cld
mov
pop
pop
mov
and
jp
jnp
test
jecxz
xor
sub
and
loop
movsl
popf
aas
rorb
xchg
fists
add
cltd
mov
mov
lea
out
add
outsb
cmpl
nop
imul
cmpsb
outsl
adc
jmp
cmp
sub
sub
dec
inc
and
push
insb
jns
inc
inc
mov
cmp
int
sub
mov
lock
inc
sub
mov
aas
add
adc
cmp
xchg
movsl
lea
shl
es
pusha
int
adcb
jg
push
ljmp
pop
push
adc
dec
xchg
adc
jecxz
scas
movsb
dec
sub
mov
lret
cmp
imul
loopne
mov
stos
pop
pop
push
lods
fldln2
mov
cmp
dec
inc
dec
sbb
cmpl
out
shlb
push
rcrl
mov
mov
loope
sbb
movsb
ljmp
mov
ja
dec
adc
and
xlat
int
push
xchg
shlb
andl
inc
test
filds
jge
inc
jp
repnz
mov
inc
aam
lcall
mov
rcrb
test
or
dec
clc
orl
aas
pop
outsb
into
fs
inc
xchg
pop
insl
stos
dec
addb
cmpsb
adc
std
rolb
aas
xchg
in
fwait
outsb
xor
push
mov
xchg
aad
movsl
popf
add
jle
aaa
cmp
das
xorl
out
pop
sub
xlat
dec
leave
andl
xor
out
stos
or
cmpsb
je
bound
pop
popa
test
xchg
ds
insl
inc
add
sbb
jp
xchg
lea
mov
ljmp
xor
mov
and
jp
mov
mov
lret
xlat
add
add
sbb
sub
add
pop
popf
daa
filds
adc
mov
in
add
push
lods
xor
repz
mov
leave
and
push
ret
mov
push
pop
add
adc
adc
push
cld
lahf
fcmove
mov
adc
and
movsl
jmp
add
flds
jae
jbe
add
adcb
cmpsb
cltd
ljmp
cmp
imul
push
outsl
mov
and
cld
pop
xor
fcompp
js
cmp
jno
adc
jno
cmc
mov
incb
movb
test
lret
pop
push
andl
shll
add
jg
xchg
jo
daa
cmpsl
paddsb
int3
mov
mov
ret
ljmp
cli
cli
inc
addr16
xchg
lret
cmp
cmp
pop
pop
inc
imul
out
ret
inc
jb
stc
faddl
std
test
scas
mov
dec
pop
mov
xor
popf
movsl
sbb
dec
add
mov
xlat
mov
fucomi
add
jne
icebp
mov
inc
mov
rcrb
or
mov
sti
push
das
fdivrs
lds
dec
mov
add
inc
sub
rclb
push
orl
xchg
dec
mov
call
xor
adc
movsl
inc
mov
sub
dec
ret
adc
jno
add
lock
and
fldenv
shrb
mov
andl
lea
imul
jecxz
aad
push
xor
pop
push
bound
jae
outsl
pop
mov
cmp
mov
lods
mov
sbb
gs
jbe
loopne
and
inc
sbb
sahf
mov
and
cmpsb
sub
lcall
fs
dec
sbb
data16
lea
inc
jo
add
jae
and
sub
push
aam
jl
out
pop
cmp
inc
push
xchg
in
mov
cmpsb
not
addr16
push
inc
lahf
mov
jmp
scas
cmp
xor
or
push
daa
xor
push
pop
pop
pop
xor
and
out
dec
movsl
pop
mov
mov
hlt
push
sbb
out
pop
data16
bound
fdivl
je
out
xchg
push
jns
jne
fucom
mov
xchg
xor
adc
xor
and
jno
mov
arpl
ss
push
movsb
enter
mov
call
testl
add
pop
pop
xor
xchg
mov
jae
adcl
movsl
jno
ds
mov
push
lods
push
fwait
sub
movsb
mov
cltd
mov
mov
pop
dec
daa
loope
clts
cmp
jo
dec
pop
lea
add
aaa
cs
divl
jo
stc
loope
stos
out
inc
rcrb
sahf
lods
stos
pop
mov
outsb
movsl
cmpsb
mov
and
pop
and
iret
jmp
dec
repz
adc
iret
ds
iret
pop
jne
dec
sub
inc
jecxz
outsl
xchg
cmp
or
inc
jge
dec
jge
dec
icebp
pop
scas
ss
shl
cltd
data16
or
pushf
aas
lcall
icebp
repz
dec
shr
mov
jge
mov
mov
mov
dec
mov
out
push
dec
test
xchg
cmp
cmpsl
xor
test
dec
outsl
les
xchg
clc
cmp
add
cmpsb
mov
adc
push
xlat
cmp
into
lock
mov
sar
test
aad
lret
dec
xchg
in
dec
aad
stos
and
mov
or
xchg
outsb
int3
ret
int
mov
mov
rclb
and
cli
and
test
dec
outsl
pop
test
leave
add
jge
xchg
icebp
mov
jnp
pop
and
sbb
adc
movsl
shr
int
orb
fcmovnu
adc
iret
or
push
std
xlat
add
aad
xchg
sbb
cmp
cmp
jle
ret
mov
mov
or
pop
shrl
pop
xchg
xlat
pushf
add
fdivl
daa
mov
into
mov
xor
rcrb
adc
push
mov
push
cli
cltd
push
jbe
pop
push
outsb
jge
scas
cmp
mov
lea
ret
fchs
fildl
in
adc
and
sbb
cli
jl
js
push
push
push
cmpsl
xchg
and
loopne
call
adc
shll
ror
ret
push
jns
outsl
popa
xchg
adc
adc
mov
es
rorb
lret
jecxz
sbb
xchg
jp
mov
loop
jb
jno
aam
les
std
lret
xor
dec
sti
dec
sub
fsubr
or
xchg
mov
std
mov
mov
mov
pop
inc
aas
dec
adc
and
pushf
sbbb
jnp
out
and
in
je
lods
pushf
popf
js
xchg
cmpsl
xchg
mov
repz
or
int3
loopne
orl
and
xorb
je
cmp
stos
add
movsb
sbb
shll
sahf
mov
xor
inc
vshufpd
seta
je
fs
cmc
dec
fs
sub
push
into
fstp
sbb
in
cmp
daa
mov
jnp
jno
xor
ficoms
stos
cmpsb
pusha
pop
cmp
popf
fisubrs
ret
pop
sbb
pop
sarl
push
push
aam
jge
stos
std
jmp
lret
js
lahf
stc
xor
push
cmp
push
pop
xchg
fstl
dec
lods
mov
xor
jb
xor
imul
jge
mov
loop
dec
cmpsb
outsb
into
out
out
cmpsl
pop
movsl
adc
lret
push
incl
cmp
mov
sti
aam
or
add
mov
ret
aas
adc
push
cld
sbb
inc
dec
arpl
pop
mov
insl
xchg
fsub
push
inc
cmp
mov
pop
xchg
xlat
xchg
out
cmp
pushf
repnz
scas
popf
loop
jnp
imul
ret
inc
lret
inc
dec
sbb
lret
ffreep
xor
cli
daa
jl
lret
xchg
cmpsb
mov
mov
out
fcmovbe
leave
jae
push
imul
iret
adc
scas
test
mov
shrb
dec
test
mov
ffreep
sbb
inc
icebp
stc
sahf
inc
clc
xor
xchg
mov
out
jg
sub
mov
push
or
xchg
cmp
xchg
popf
std
addb
lcall
mov
nop
jp
jle
fwait
int3
out
sbb
gs
aaa
shrb
mov
xchg
xor
enter
cmp
ljmp
daa
lods
lea
pop
imul
and
push
cmpsb
lahf
pop
cs
or
fidivl
cmp
in
orl
sub
dec
ds
add
lods
jle
or
sti
aas
jecxz
loope
int3
lret
nop
jno
cmpsb
cmpb
and
movsl
inc
cwtl
popa
call
sub
dec
adcl
stos
imul
subl
mov
xchg
pop
push
and
xchg
subl
jmp
leave
inc
mov
pop
ljmp
add
nop
or
cmp
xchg
pushf
adc
movb
andb
sub
outsl
sub
lds
push
sub
add
push
cmp
inc
sub
ss
cli
or
sbb
inc
jnp
push
out
dec
adc
mov
shrb
sbb
jnp
jmp
sarb
and
jmp
int3
cmc
mov
mov
mov
cmp
jp
add
xchg
icebp
fdivrl
jae
stos
aam
push
add
sub
ret
shlb
inc
dec
sub
jge
push
mov
add
mov
inc
push
pop
cmp
movsb
push
mov
add
fmul
mov
dec
adc
int3
int3
cmc
dec
pop
fwait
pop
gs
push
mov
jp
lods
dec
dec
fistpl
push
xchg
imul
loopne
outsb
cli
stos
sbb
xchg
scas
lcall
in
jge
add
mov
scas
jno
mov
dec
stc
addr16
inc
cmp
mov
mov
outsl
lahf
jg
outsl
add
lret
cmp
cmc
outsl
sbb
push
pop
jp
int3
les
cmp
sbb
testl
imul
jg
inc
lret
push
sbb
lods
addl
test
ret
mov
and
rcr
test
out
dec
add
dec
xchg
shrl
jl
test
mov
jecxz
sub
shlb
and
int
into
bound
lahf
in
sbb
outsl
dec
ds
les
sub
inc
jl
andb
jae
inc
adc
jne
or
mov
mov
cwtl
lret
pop
hlt
seto
shld
int3
imul
pop
xchg
push
subb
push
sub
in
test
es
stos
push
push
imul
repz
sbb
jae
fimull
adc
rcll
cwtl
cmp
cmp
dec
daa
pop
pop
aad
clc
ss
hlt
sub
fwait
and
test
les
add
mov
dec
in
sbb
push
test
jo
fs
mov
xor
jge
xlat
cltd
pop
repnz
sbb
sahf
inc
enter
xchg
dec
jecxz
xor
cli
scas
je,pn
popf
in
pusha
cmpsb
jmp
add
cmp
dec
imul
mov
mov
sbb
dec
pop
stos
jno
cltd
iret
adc
jg
imul
mov
jle
jbe
or
out
movsl
mov
lcall
xor
sub
fbld
sbb
mov
mov
cmp
xor
cmp
ret
cs
bound
ss
fsubs
dec
cld
add
ret
or
nop
jnp
adc
call
adc
pop
cmp
fcoml
movsl
xchg
cmpsb
xor
xor
cmpsb
shll
mov
push
sahf
mov
mov
mov
push
gs
sub
pusha
icebp
bound
dec
orl
inc
mov
dec
loope
lret
xor
enter
and
xor
pop
adc
jl
daa
cmp
mov
sbb
adc
jmp
xchg
mov
out
adc
mov
ja
cs
outsl
popf
lock
mov
pop
jmp
insb
dec
fistps
psubq
dec
jbe
push
xchg
dec
aam
mov
mov
jle
test
out
xchg
xor
int
cltd
and
adc
or
orl
shrb
pop
or
push
lods
cltd
mov
add
or
dec
rcl
sahf
rolb
popl
mov
sub
leave
push
out
icebp
adc
aas
int3
mov
repnz
cmpsb
or
pop
les
xor
mov
push
sbb
push
cmp
shrl
add
imul
mov
or
push
insb
or
sarl
out
mov
daa
sbb
adc
adc
add
mov
xor
cld
test
imul
xchg
add
aam
roll
sti
ss
push
icebp
arpl
or
das
jmp
and
icebp
ret
and
jns
jnp
dec
movsl
or
fnsave
shll
fisubrl
movsb
les
add
push
loop
andb
sbb
stc
xchg
fwait
lcall
mov
xchg
arpl
xchg
into
ljmp
aad
and
mov
scas
pop
aad
jae
mov
mov
testb
lods
xchg
rolb
xchg
add
dec
xor
xor
xor
xchg
sbb
fcoml
subb
push
push
xlat
cmp
cld
ja
pop
int3
sub
or
sub
dec
inc
aad
insb
or
test
push
loopne
adc
push
inc
jl
lea
inc
popa
shl
or
mov
mov
fcom
xchg
cmpsl
cmp
mov
sbb
push
stos
in
and
insl
jp
std
das
int3
out
jnp
lahf
fisubs
mov
movsb
movsb
xor
pop
push
leave
or
out
push
and
xor
outsl
jns
xchg
popa
mov
ror
mov
sub
pusha
push
mov
movsb
vmovupd
das
decb
and
lret
jae
adc
jbe
jp
add
push
mov
iret
jl
mov
pextrw
push
or
mov
loop
push
cmp
inc
rorl
notb
mov
lods
dec
enter
push
lea
ja
push
cs
and
insl
ja
mov
pop
push
ja
and
mov
imul
xor
test
test
in
int
imul
testl
adc
or
xchg
add
icebp
out
pop
outsb
inc
les
jecxz
cmp
maskmovq
notl
inc
sbb
ret
rorl
clc
lods
sahf
ja
movsl
or
fdivs
iret
lea
rcr
sub
sahf
iret
and
xchg
cmp
sub
sbb
xor
jne
in
mov
push
cmp
xor
js
adc
cltd
mov
daa
xor
andb
mov
dec
mov
cmp
sbb
pop
push
add
xor
ret
cli
and
xchg
fs
arpl
inc
aaa
push
sbb
jge
adc
xchg
mov
mov
scas
xchg
mov
std
mov
lock
dec
jmp
add
dec
mov
subl
movlps
leave
lcall
jmp
pop
sbb
sub
and
add
and
sub
mov
in
push
pop
mov
push
je
mov
nop
and
jae
jle
sbb
cld
push
add
addr16
cltd
fwait
pushf
sbb
push
popf
cmp
out
add
xor
repnz
std
sbbl
mov
jae
cmp
or
addr16
lahf
fnstsw
adc
test
cmpsl
in
dec
js
add
push
ret
xor
aad
cmp
test
dec
mov
push
sbb
xor
pop
stos
inc
or
mov
imul
xor
je
std
sub
or
stos
into
and
jb
ljmp
aaa
xchg
sbb
rcll
pop
fnsave
lds
sahf
lods
sahf
ss
add
in
push
pop
cmc
lods
or
test
push
dec
push
repnz
mov
in
inc
mov
xchg
jbe
mov
xchg
lea
and
pop
mov
mov
in
andb
pop
and
dec
lods
sub
xor
aaa
jns
inc
sub
mov
popf
out
inc
pop
or
push
pop
push
dec
xchg
push
test
call
dec
test
shlb
mov
jle
sub
aam
pop
mov
adc
inc
fwait
lock
fisubrs
movsl
mov
out
imul
adc
mov
jle
repnz
jbe
or
mov
pop
ret
fwait
divb
push
jb
cmp
outsl
insb
adc
add
and
xchg
sbb
or
mov
inc
inc
stos
iret
pop
fs
xor
cmp
xchg
push
and
cmp
mov
ja
push
add
loope
cld
mov
call
inc
pop
xor
or
incl
xor
ja
inc
mov
sbbl
cmp
cwtd
lock
ds
xor
les
insb
rcrl
pop
pop
scas
lods
mov
lcall
xor
sbb
xchg
push
pop
jbe
cmp
lcall
shll
ret
push
mov
cmp
ss
sub
or
scas
push
jne
pushl
stos
in
pop
shlb
push
into
jbe
push
dec
mov
pop
pushf
ss
cmpl
repnz
ffreep
stos
icebp
mov
cld
pop
fldt
push
in
sahf
jbe
mov
pusha
push
nop
lcall
push
xchg
inc
lret
inc
push
pop
jno
dec
stos
add
push
xor
xchg
jne
aad
jmp
gs
pop
jp
repz
into
lahf
out
pop
movsb
add
rclb
enter
sbb
push
or
pop
jge
stos
jmp
mov
xor
pop
adc
mov
push
push
loop
ret
xor
sub
jne
pop
into
ret
mov
push
jle
add
insb
xor
xor
fmul
lcall
and
call
push
test
add
mov
xor
arpl
lcall
pop
addr16
xchg
addr16
lods
push
and
jbe
xchg
ret
sub
into
jns
sbb
loope
xlat
xchg
adc
stos
dec
cmp
mov
out
mov
mov
xor
push
rclb
or
call
or
fnstenv
xor
pop
ljmp
es
and
mov
adc
cld
push
loope
stc
sub
insb
push
or
stos
mov
sbb
push
insb
cltd
add
fisubl
decl
or
mov
push
loope
mov
mov
mov
nop
adc
fwait
pop
cmp
push
jae
cs
push
nop
or
jo
test
fidivs
or
ljmp
ds
scas
dec
push
cwtl
dec
adc
fcompl
addl
test
shlb
xchg
inc
and
hlt
sbb
push
dec
scas
mov
sbb
lea
rcr
es
inc
mov
or
lea
mov
push
ja
adc
les
fbld
cmp
jl
mov
outsb
out
les
xchg
cs
lret
mov
fstpl
jmp
mov
fadds
imul
in
mov
jecxz
shr
sbb
push
movsl
push
mov
or
leave
loope
pushf
bound
push
sti
adc
movsb
inc
popa
ret
test
lods
inc
jno
inc
lahf
mov
mov
dec
and
mov
fdivl
push
es
dec
xor
nop
inc
fwait
push
in
inc
loope
mov
jmp
mov
aas
lock
fsubrs
iret
jl
mov
and
cmp
adc
in
cmp
mov
mov
mov
fucom
push
mov
mov
std
fdivs
aam
int3
and
notb
hlt
mov
lahf
push
fsubl
pop
and
mov
and
mov
or
std
push
mov
mov
sub
ret
sti
movsb
mov
and
dec
add
icebp
dec
xchg
clc
mov
sti
push
leave
dec
pop
sub
test
and
js
pop
jle
pop
cmp
repz
jmp
cmp
and
insb
ret
lret
dec
not
pushf
repz
and
into
pusha
pushf
leave
icebp
jnp
xchg
cmpsb
xorb
mov
int3
in
jge
lods
cld
movsl
sub
push
sub
mov
nop
fistpll
sub
sahf
add
mov
sbb
xchg
jae
popa
xor
push
mov
jb
dec
inc
xor
xchg
pop
into
jp
arpl
loop
cmpsb
pusha
sbb
cmpsb
loope
push
cmp
aam
icebp
dec
fmull
xchg
rol
xorl
hlt
and
or
loopne
ljmp
fwait
add
cwtl
shl
mov
leave
inc
sub
enter
imul
cltd
nop
push
jno
loope,pn
pop
ror
dec
dec
lahf
dec
sub
jmp
push
pop
jg
iret
mov
sub
fmull
adc
lods
adc
or
xchg
xor
call
and
mov
sbb
leave
xchg
pushf
mov
ja
and
scas
cmp
sbb
jl
and
lea
jbe
lret
cmp
inc
daa
pop
cmpsb
aam
loopne
pop
xor
int3
fs
cmpb
fucom
cmp
cmc
dec
inc
and
adc
bound
mov
sub
sub
in
std
cwtl
lfs
cmpb
sub
xlat
dec
xor
sub
sbb
fldl
push
cmp
addl
syscall
mov
and
push
mov
add
outsb
xor
add
subb
lods
int3
iret
push
fwait
imul
daa
mov
or
xchg
cmpsb
gs
xchg
loope
pop
outsb
add
adc
into
lods
int3
adc
pushf
int
cltd
push
imul
mov
cmp
add
push
push
ds
je
into
and
stos
cltd
jae
insl
or
mov
sti
dec
push
xchg
push
xor
sub
push
in
add
jg
sahf
jae
and
jne
inc
fidivrs
icebp
jb
out
mov
jle
addr16
call
in
pop
inc
lea
out
cmpsb
or
es
sub
sbb
outsl
and
or
shrl
or
sbb
xchg
enter
sbb
push
xchg
stos
adc
repnz
xor
dec
bound
pop
or
mov
out
sub
inc
gs
mov
cmc
adc
ljmp
enter
xor
xor
rclb
and
cli
cmp
mov
or
jae
ss
mov
divb
adc
mov
sub
and
jge
sbb
fs
xlat
pop
dec
dec
push
lahf
sub
mov
pop
mov
cmp
or
mov
cltd
push
dec
rcrb
xchg
xor
mov
and
out
lahf
sar
xor
fistpl
popa
pushf
push
outsb
sub
push
aas
jecxz
jb
sub
xor
imul
sbb
and
jl
mov
and
jg
js
into
shlb
aam
xor
ds
imul
out
add
sbb
mov
xor
xchg
lcall
xor
mov
mov
cmpsb
cmpsb
cli
dec
ds
or
dec
in
pop
pop
sarb
add
lret
fs
xor
push
lret
scas
scas
mov
test
and
iret
cwtl
icebp
std
push
testb
lods
mov
repnz
cmp
adc
mov
sub
out
mov
xor
inc
insl
cmc
imul
and
mov
sahf
outsl
adc
lds
into
ljmp
ret
jmp
push
xor
ljmp
out
shlb
shrb
out
rcrb
loop
sub
push
mov
fwait
lods
repz
mov
cmpsb
clc
sti
aaa
adc
enter
mov
push
add
inc
mov
je
mov
dec
jne
inc
outsb
icebp
dec
inc
cli
add
jne
movl
mov
js
or
add
or
jl
testl
out
mov
test
test
mov
lock
push
push
js
mov
inc
aad
test
inc
lret
mov
mov
arpl
push
inc
imul
push
rolb
mov
in
adc
mov
fisttpll
sahf
imul
cmpsb
dec
in
jae
loopne
shlb
xchg
test
cmp
mov
jb
jl
mov
xor
inc
jo
sbb
adc
xchg
pusha
mov
sbb
add
xchg
gs
fidivrl
insl
jmp
sub
and
adc
sbbb
push
dec
fldenv
sub
jae
xchg
mov
js
xchg
fucomip
sub
or
fisttpl
aad
xchg
pop
inc
cld
dec
sub
xlat
lods
daa
dec
push
adc
verr
sub
xorb
or
mov
fsubp
sbb
mov
cmp
sub
xchg
mov
aam
loopne
inc
xchg
add
test
xor
cmp
outsb
inc
iret
in
push
iret
and
outsb
xor
xchg
jge
xor
mov
or
xchg
outsb
divb
jne
inc
std
ja
lods
add
mov
dec
in
jnp
mov
cltd
or
xchg
jno
cltd
out
pop
in
icebp
cltd
xchg
sbb
xchg
push
cmp
mov
jmp
jecxz
sbb
jne
neg
sub
pop
mov
lcall
repnz
sti
popa
das
ret
pop
out
mov
sarl
cld
xchg
add
mov
xor
jle
push
add
andb
insb
push
lock
movb
mov
push
lcall
popa
adc
in
mov
adc
inc
ret
inc
ds
dec
shll
out
ss
inc
aas
push
stc
sbb
push
pop
dec
xchg
sbb
popa
ret
fwait
jmp
push
push
jmp
add
clc
push
jecxz
das
dec
test
inc
push
repnz
push
push
add
mov
mov
fcom
and
lods
push
sbb
jae
pushf
bsr
in
and
test
movl
or
inc
jb
nop
stos
sub
into
or
mov
jl
dec
out
add
data16
adc
je
loope
or
cwtl
and
cmpsb
es
add
push
stos
imul
mov
jae
jno
adc
jp
pop
mov
and
jo
mov
pop
xchg
sub
sub
jnp
and
sbb
jmp
test
xchg
mov
jno
xchg
pop
clc
add
js
mov
cwtl
dec
sub
stos
push
push
jmp
xor
inc
xlat
mov
dec
adc
cmp
cmp
fdivs
xor
das
add
rclb
out
sub
and
test
ret
inc
sbb
add
fists
lcall
cmp
and
xor
dec
fnsave
aam
rcll
lds
faddl
cli
pop
push
push
and
push
scas
nop
push
nop
adc
iret
adc
lret
iret
pop
add
mov
mov
movsl
imulb
outsl
lods
adc
and
repz
or
mul
popa
lock
push
mov
stc
mov
in
cld
and
ljmp
sahf
mov
cltd
clc
sub
push
sub
or
icebp
and
adc
aaa
test
push
rcrl
andl
lock
dec
popa
sub
in
scas
cs
mov
lcall
aas
dec
pop
or
and
cmp
leave
fistpll
jno
mov
imul
cmp
popf
imul
sbb
inc
frstor
lea
jno
jl
mov
sub
ret
and
lret
mov
mov
cli
mov
mov
sub
scas
das
ret
pop
add
mov
mov
mov
and
cmp
dec
loopne
jnp
push
fidivl
fwait
xchg
add
ret
push
cmp
mov
pop
jmp
mov
loopne
dec
push
fwait
jne
nop
mov
push
adc
xchg
mov
mov
and
out
mov
aad
mov
pop
fistpl
subl
sub
movsl
jne
adc
mov
clc
sbb
cli
xchg
arpl
add
aaa
sub
dec
cmc
int3
add
xchg
das
les
pop
sarl
inc
aam
pusha
dec
lock
sub
jne
cmp
outsb
cmp
inc
aas
mov
pop
dec
push
orb
ret
xor
in
test
stos
jmp
push
add
pop
popa
pop
clc
dec
lock
jne
sarb
cmpsl
jmp
dec
jo
fisubs
mov
pop
mov
aad
movsb
iret
insl
test
in
testl
sti
add
push
aaa
imul
mov
aad
mov
and
stos
lret
les
jle
mov
push
jo
std
imul
add
inc
xor
ds
dec
jns
ret
repz
xor
movsl
pop
into
inc
cmp
mov
pop
mov
mov
inc
mov
popf
sub
mov
push
dec
bound
cltd
mov
mov
lds
sahf
xchg
fcmovnb
in
leave
mov
test
sub
ljmp
sub
inc
repnz
or
push
or
daa
inc
out
push
mov
rclw
mov
push
dec
ss
inc
xor
jnp
lods
in
stos
fildl
in
or
dec
mov
popa
xlat
sub
and
inc
pusha
lahf
dec
aam
jae
int3
cmpl
test
stos
adc
imul
adc
jnp
test
cmp
and
xor
hlt
xchg
inc
push
repz
sbb
xor
push
sti
movsb
jne
jb
dec
and
jp
sbb
cltd
lds
das
pop
rorl
ss
push
push
pop
addl
mov
loope
sub
int3
dec
push
in
test
out
mov
shrb
push
mov
into
es
adc
dec
test
lock
lea
cmp
sub
jecxz
push
xor
add
scas
pop
mov
into
test
in
scas
test
push
push
outsl
movsb
bound
test
xor
fldt
xchg
sub
das
aad
in
push
loop
lcall
out
fs
ljmp
push
sbbb
dec
inc
mov
popa
cmp
cli
adc
testb
fbld
jmp
cld
ljmp
arpl
xchg
pop
mov
fiadds
and
je
xor
or
xchg
push
xor
cmp
call
stos
sarl
mov
in
cmp
cmpsb
mov
push
sub
mov
xchg
jl
add
ja
xorb
lret
sbb
xchg
loope
in
cmp
aaa
dec
cmpl
jae
lds
test
jnp
sbb
js
jbe
insl
and
pop
in
jge
dec
xchg
push
xchg
inc
dec
stc
lock
jne
xor
jbe
hlt
fldenv
test
mov
push
sub
sbb
push
pop
pop
negl
adc
or
push
or
je
call
xor
sti
push
inc
xchg
inc
out
lods
lea
mov
insl
mov
dec
push
adc
push
push
stc
jmp
ja
xchg
sahf
add
add
mov
int3
or
add
insl
push
pop
scas
adc
ds
aas
cmp
test
imul
ljmp
je
enter
mov
psllw
jp
jno
cmpsl
xchg
xchg
xor
xchg
adc
pop
push
mov
mov
lods
cmp
xchg
in
out
mov
fisubl
rclb
cmpsl
add
or
je
popa
popf
rcl
xlat
mov
jno
loope
stos
pop
clc
insl
pusha
cld
fisubrl
xchg
test
pusha
jg
addr16
add
jne
or
imul
sub
in
cltd
mov
inc
or
fmuls
fwait
xchg
dec
popa
addr16
adc
addr16
mov
in
and
inc
out
jns
inc
cmc
lock
fwait
dec
test
cltd
dec
sub
and
je
adc
mov
test
adc
or
dec
xor
lock
test
js
mov
sahf
or
add
jecxz
push
fisubs
aaa
fcmovnbe
adc
out
out
or
mov
stos
xchg
pop
fs
jecxz
inc
orl
nop
inc
cli
sub
pop
movsb
adc
jno
fstp
sub
or
mov
dec
lods
lea
repz
jl
jmp
outsl
fidivrs
push
adc
stos
mov
mov
or
repz
sub
orb
insl
dec
iret
mov
jbe
sbb
xchg
pusha
lret
inc
and
je
lods
nop
fbstp
mov
leave
aad
jb
fnstsw
mov
mov
sbb
xchg
jbe
les
mov
iret
fidivs
fs
mov
jne
xchg
xor
xchg
dec
mov
adc
or
xchg
cmp
out
mov
dec
adc
jmp
push
inc
xchg
add
adc
xchg
andb
sbb
aaa
rcr
shl
lret
sbb
shlb
mov
in
xchg
adc
mov
pop
cld
mov
add
jle
push
pushf
hlt
loop
mov
rolb
es
pop
xor
je
imul
jge
dec
fisubl
and
lods
xor
push
mov
push
sub
sti
das
and
mov
cmp
inc
out
or
ja
cmp
movswl
icebp
pop
int3
xor
insb
xchg
jne
mov
or
mov
cmp
sbb
aas
mov
cmpb
movsb
inc
ret
fdivrs
add
inc
aam
dec
or
jmp
pop
imul
xchg
sub
dec
adc
or
cmp
jo
int
scas
imul
push
sub
push
cmp
aam
adc
lcall
cmpsl
sub
dec
xor
or
xor
adc
cmpsl
cld
xchg
inc
pop
pop
dec
jno
das
add
and
cmp
push
fwait
enter
push
pop
inc
rcll
jne
mov
xchg
mov
xchg
adc
movsl
aas
push
nop
pop
inc
xchg
and
cmpsl
fmul
add
test
inc
sbb
enter
dec
enter
xchg
dec
lret
dec
mov
fs
aad
pop
xor
ss
or
cmp
lcall
lea
sub
jmp
cmp
mov
sbb
xchg
xor
mov
sbb
sbb
pop
notl
pusha
and
out
fs
cmp
mov
add
ds
push
cs
jp
ret
ljmp
in
insb
mov
adc
cmc
mov
repz
fadd
adc
incb
lds
in
jge
test
dec
test
loop
xlat
idivb
imul
pop
es
test
push
cwtl
push
lock
fdivr
fisubs
and
jp
pop
ret
rorl
sub
jb
movsb
fs
int
loope
push
cmpsb
and
fimull
lea
xor
push
cmpsb
mov
loop
and
fistl
sbb
sbb
mov
popa
or
das
cmp
mov
aam
mov
js
sub
cwtl
sbb
mov
int
sbb
pop
mov
test
mov
stos
sti
sbb
lcall
insl
sbb
ljmp
adc
clc
or
sbb
adc
jp
inc
lea
adc
add
sub
test
fmull
idivl
inc
and
jl
jl
lea
mov
jg
repz
sub
mov
outsb
pop
mov
mov
sub
mov
jo
cmc
sbb
sub
cmpsb
push
xchg
pop
hlt
popa
loope
jae
push
xchg
mov
xchg
mov
inc
lahf
shll
rorl
add
stc
sbb
je
les
hlt
call
jmp
mov
adc
xor
xor
ret
jno
icebp
loopne
mov
fs
mov
ret
loopne
push
movsb
cmp
cmp
ret
loop
add
lea
dec
scas
ficomps
pop
cmp
pop
outsl
ret
push
jge
push
inc
cmp
pop
or
scas
sub
leave
mov
cmp
stos
leave
mov
arpl
inc
movsl
test
es
outsb
xchg
neg
pop
scas
xchg
jle
and
mov
mov
dec
aas
jmp
cltd
inc
add
loop
push
adc
xor
fwait
adcb
mov
stc
sub
aad
sbb
xor
xor
out
xchg
stos
cltd
adc
dec
dec
sbb
dec
mov
gs
lds
sub
les
mov
in
jae
lcall
insb
or
add
outsl
sahf
mov
mulb
fistl
xchg
xor
movd
scas
cmc
or
xlat
jl
int3
cwtl
insl
xor
repnz
add
pusha
jne
add
iret
sti
push
xor
mov
pop
xlat
cmc
fs
leave
and
hlt
xchg
jg
inc
scas
xchg
cld
lods
loop
clc
stos
push
inc
and
dec
inc
jp
mov
mov
aam
mov
out
lret
shrb
jb
pop
mov
mov
sub
mov
cmp
jae
push
lods
rclb
int
adc
and
or
loop
imul
pop
jns
inc
inc
cmp
pop
fsubp
mov
xchg
gs
loope
js
leave
xlat
imul
lock
mov
pop
jmp
or
loope
dec
std
inc
insl
outsl
mov
lds
mov
pop
lret
in
lret
clc
popa
mov
fistl
sti
sub
in
add
or
fs
inc
out
mov
mov
adc
icebp
addr16
ja,pt
jno
imul
or
mov
add
adc
push
aas
sar
ljmp
xchg
push
lahf
nop
jb
jbe
outsl
xchg
ret
mov
inc
mov
mov
testl
rclb
mov
in
adc
mov
jnp
mov
cmp
scas
inc
sti
dec
lods
push
and
push
add
pop
or
jnp
out
fcomp
sub
pushf
dec
mov
or
maxps
sub
and
xor
xchg
pop
fwait
cmp
sbb
jl
fldlg2
jge
cwtl
subb
pop
in
je
ja
lahf
jmp
mov
enter
aaa
sbb
shlb
mov
adc
mov
mov
imul
pop
add
out
shl
sub
fucom
sub
dec
rcrl
mov
stos
mov
jns
jl
push
add
out
cmp
movsb
xor
push
xlat
xchg
add
lcall
push
loopne
in
in
gs
inc
pop
lret
cmpsl
das
out
lret
je
rclb
jecxz
outsl
push
push
add
pop
pop
fstpt
clc
push
test
test
sbb
mov
into
adc
adcl
mov
cmp
in
das
or
adc
femms
xchg
jae
xchg
or
and
pop
jnp
fistpl
loope
int
mov
inc
and
outsl
in
test
test
rol
push
imul
imul
push
mov
sbb
daa
fildll
adc
es
push
cwtl
push
scas
adc
nop
push
popa
mov
scas
cli
push
xor
mov
out
ret
aam
ret
sti
xchg
fildll
sbbb
rorb
lock
and
cli
outsl
lret
xor
pop
pop
jp
int3
rcrb
cld
xchg
jne
jns
sbb
fsts
imul
adc
sub
pop
sbb
dec
xchg
add
dec
jg
mov
pop
push
rorl
mov
fists
sbb
fistl
jp
cmp
loope
repz
shr
or
das
aam
sub
lret
decl
dec
add
les
lahf
fwait
push
adc
dec
mov
lcall
sbb
jge
fs
sub
loop
and
js
fildl
movsb
cmp
dec
or
sub
and
jne
cld
xchg
lahf
leave
mov
mov
notl
sub
mov
test
fs
xor
call
and
mov
in
dec
jg
mov
jo
push
xor
les
movsb
xchg
sub
push
add
sub
popf
loop
cmpsl
jmp
fdivr
scas
inc
test
pop
cmpsb
adc
dec
rcl
jle
mov
inc
mov
xor
pop
dec
jle
popf
dec
ja
test
jge
pop
in
or
jns
fwait
jmp
inc
out
cmp
or
lahf
stc
push
mov
jecxz
in
not
and
pushf
and
fistps
ljmp
jmp
or
call
and
mov
cli
xchg
and
and
mov
aas
adc
daa
add
push
jge
fstpl
scas
pop
mov
xchg
mov
and
cmp
jo
arpl
cwtl
mov
inc
mov
mov
out
andl
arpl
mov
jb
push
daa
adc
inc
repz
je
std
sub
pop
push
leave
jmp
fbstp
and
mov
iret
push
int3
jle
inc
mov
pusha
xchg
or
mov
lret
pusha
sub
cmp
cmp
mov
and
add
pop
jg
sub
pop
mov
mov
out
mov
mov
or
loop
jecxz
dec
in
sbb
lret
outsl
add
pop
push
sub
rcr
movsl
test
ss
mov
pushl
test
into
rorb
test
mov
mov
outsb
push
adc
xchg
bound
xor
jnp
mov
insb
jbe
inc
cmp
sbb
xor
push
sbb
aad
lahf
popa
xchg
sbb
push
mov
lea
stos
dec
xor
cmp
push
dec
fwait
movsb
inc
adc
dec
je
xchg
scas
dec
loop
xchg
pop
adc
sbb
push
ret
adc
pop
or
aad
dec
xor
pusha
push
fdiv
fwait
out
loop
ficoml
js
mov
sub
or
push
mov
cmp
cmp
or
dec
and
dec
out
enter
mov
jb
jecxz
jae
push
mov
jne
xchg
sbb
mov
arpl
adc
loope
popf
jmp
shl
fs
outsl
pop
mov
in
xor
sti
xchg
jg
dec
jmp
sub
pop
sub
pop
icebp
fsubr
pop
pop
call
in
inc
xchg
nop
xor
xor
orl
lahf
daa
call
into
adc
pop
mov
hlt
adc
and
or
dec
jnp
pop
shrl
pop
mov
test
movsl
dec
out
add
mov
test
les
jl
or
push
jbe
test
mov
pop
fisttpll
insb
sub
adc
adc
shlb
gs
lock
add
fisttpl
test
push
sbb
push
inc
xlat
push
into
xchg
scas
adc
lods
pop
rcl
fbstp
out
sbb
sbb
push
es
push
add
and
push
or
shr
cmp
aaa
sub
int
pusha
cmc
std
clc
arpl
pop
sete
out
aam
cmp
clc
lock
ret
in
sbb
dec
add
push
push
iret
dec
fdivs
or
push
call
xchg
or
mov
jge
aad
loope
cltd
cli
xchg
xor
sub
jns
pop
xchg
inc
inc
scas
inc
and
pop
mov
sahf
popf
sub
sbb
xor
or
hlt
cmc
cmp
lsl
stc
lahf
ret
aad
dec
pop
mov
jo
data16
dec
inc
int3
in
loop
cltd
in
clc
out
leave
daa
mov
loope
sub
rcrb
cmc
movsb
lods
divl
adc
call
cmp
hlt
mov
in
repnz
lock
push
incb
shll
mov
cmp
sub
aas
cld
push
jg
adc
loope
xchg
sbb
pop
add
outsl
dec
or
ja
iret
icebp
imul
rcr
mov
or
pop
push
pop
or
mov
mov
adc
ds
sub
dec
sbbb
scas
adc
outsb
mov
mov
leave
lret
jbe
add
dec
lret
pop
clc
cmp
sub
inc
lcall
mov
xor
cltd
xchg
test
jecxz
jge
movsl
pop
je
adc
and
push
xchg
push
pop
outsl
andb
jp
sbb
xchg
call
in
xor
jp
iret
js
and
dec
inc
arpl
push
das
stc
scas
mov
dec
inc
jno
out
mov
and
sub
push
aam
push
cld
aas
mov
pop
in
lcall
dec
arpl
dec
lret
push
push
xorl
xor
add
fs
insb
sub
fsub
stos
inc
dec
iret
mov
xchg
cltd
shlb
xchg
movsb
lcall
aas
inc
mov
xchg
xchg
arpl
inc
mov
or
test
jnp
xchg
xchg
jno
ret
sbb
sbb
clc
mov
lret
jecxz
mov
jne
cld
push
xchg
cltd
sub
pop
inc
push
and
sbb
fmulp
and
sbb
fadds
fsqrt
jns
jb
mov
shll
mov
icebp
cld
stc
sti
les
jp
js
in
popa
mov
scas
insb
les
mov
ljmp
lds
aas
push
ds
push
adc
add
sub
pop
shr
lock
test
movsl
sti
xor
scas
jl
shl
xor
ret
cmp
jmp
lret
mov
sub
imul
fidivrs
iret
and
fistps
push
rolb
xor
pusha
insl
mov
xor
insl
ret
popa
loop
push
into
jg
mov
mov
imul
fwait
vpsubsb
rcll
ret
jb
ret
xor
pshufw
mov
mov
into
leave
inc
jp
xchg
ss
inc
or
mov
cmpb
mov
ds
mov
les
cwtl
fcmovnu
jp
jnp
icebp
int3
cld
ds
fidivrs
in
std
mov
mov
xchg
push
fiaddl
movsl
jae
pop
pop
jbe
pop
adc
fidivs
mov
test
aam
jne
and
ds
lahf
mov
sub
ja
stos
push
out
fisubl
stc
sarl
or
xor
lea
test
push
sbb
push
jb
fdivrl
mov
pop
xchg
mov
jl
into
lret
enter
mov
dec
test
ja
inc
fildll
dec
push
mov
fucom
cs
test
lahf
pushf
xor
stos
repnz
xor
aaa
xchg
push
lods
jle
movsl
pop
pop
test
jmp
outsb
mov
jl
movsl
jecxz
int3
mov
repz
add
aas
testl
stos
sbb
loope
sub
out
sub
and
pop
loop
push
mov
scas
sbb
arpl
or
xor
lret
jecxz
ret
cmpsb
dec
leave
in
cmp
add
aam
imul
and
sbb
mov
loope
sbbb
inc
mov
les
push
cs
pop
imul
push
xlat
cmp
mov
outsb
jle
mov
movsl
cwtl
xchg
lods
mov
out
and
xlat
stos
notb
and
loopne
sub
pop
nop
out
iret
cmp
push
pop
mov
dec
xor
xor
into
ret
mov
rcll
sahf
sbb
test
cmp
lock
btc
sub
aam
push
hlt
and
dec
jb
sub
fildl
fisttpl
mov
xor
cltd
cmp
sub
cmp
mov
add
cmpsl
fstpl
cli
pop
loopne
mov
push
or
and
mov
mov
adc
cmp
lds
or
rorl
xor
js
xchg
aas
lret
xchg
push
push
cmp
rorb
sahf
jns
sbb
mov
sbb
lret
hlt
push
mov
frstor
push
out
movsl
in
jmp
loopne
mov
ljmp
sub
mov
mov
jle
mov
push
jg
iret
daa
push
sbb
adcl
push
xchg
xlat
mov
dec
jo
adcl
not
int3
subl
sbb
jb
fstp
jmp
nop
push
cltd
dec
push
sub
pop
iret
mov
xor
roll
out
imul
jbe
insl
icebp
call
push
sub
or
stc
lret
xorl
ds
out
ja
fbstp
icebp
push
cmp
cwtl
jo
xor
jnp
adc
add
xchg
ljmp
loop
xchg
cmp
mov
leave
xchg
and
jnp
in
js
shl
nop
jno
call
mov
fsubrs
mov
notl
mov
lret
cmc
pop
filds
imul
and
add
lcall
pandn
ss
lcall
popa
sub
mov
inc
imul
sub
push
movsl
ret
mov
xor
loopne
inc
bound
inc
sub
and
sbb
sub
gs
mov
pop
jle
sub
popf
iret
xchg
jg
pushf
pushf
push
mul
inc
jno
and
sbb
mov
inc
push
cmc
or
mov
int3
dec
mov
ss
in
sub
dec
hlt
in
into
loop
rorl
sbb
mov
cmpsb
pop
sbb
jae
fdivs
inc
mov
adc
xor
mov
clc
dec
pop
jecxz
push
fstpl
out
pop
in
lods
push
lea
jmp
dec
xlat
adc
cmpsb
xlat
xor
xchg
push
pushf
push
loop
fsubl
lret
dec
and
nop
movsb
xor
adc
cwtl
dec
and
adc
jno
and
jb
orl
and
cltd
outsl
add
movsl
enter
inc
not
dec
into
fildll
ror
ret
adc
pop
or
orb
xor
mov
pop
sbb
aas
sub
insb
or
scas
mov
pop
or
xor
push
aam
or
aam
shlb
out
push
scas
scas
mov
mov
dec
js
icebp
push
mov
inc
ret
lods
and
aad
xor
aaa
xchg
jo
pop
and
aam
fildl
sub
add
add
cmp
loope
iret
or
push
jb
cmp
sub
jb
loopne
mov
mov
xor
scas
sub
push
fwait
leave
push
push
adc
push
or
and
sbb
jbe
xlat
movsb
add
addb
mov
cmp
dec
inc
cltd
push
sub
mov
test
push
mov
data16
loope
lcall
pushf
imul
adc
fidivs
movsl
sbb
dec
insl
bound
mov
dec
fs
sbb
aaa
mov
inc
les
mov
dec
stos
jecxz
cli
adc
bound
ret
xchg
pop
and
push
es
andb
push
mov
xor
sbb
fmull
xor
lret
cmc
fsubl
jp
aas
ja
vpavgw
enter
mov
loope
stc
cld
ljmp
pop
sbb
ret
xchg
inc
mov
jnp
jge
pop
add
loop
push
mov
cmp
jmp
out
cmpsl
ss
lcall
pop
adc
mov
ret
mov
imul
mov
in
sub
stc
mov
push
pusha
add
pop
sti
sub
xchg
pushf
mov
js
cld
adc
sub
movsb
add
pushf
jne
clc
xchg
cltd
push
int
push
mov
xchg
sub
int
mov
push
add
stos
inc
adc
xor
mov
arpl
mov
push
add
cmp
sub
std
cmp
mov
pop
pusha
inc
bound
mov
push
xorb
mov
pop
pop
or
adc
cwtl
xlat
sbb
inc
outsl
inc
mov
xchg
rcrl
mov
lcall
add
jmp
imul
fsubrl
xchg
insl
js
xchg
xlat
or
inc
push
in
aam
push
dec
mov
jmp
cmp
jno
pop
xor
out
jns
lret
cld
negl
enter
movl
pop
jno
movl
push
xchg
stos
dec
or
clc
or
pop
fs
adcb
mov
popf
inc
xchg
mov
cltd
pop
jb
rclb
push
lret
xchg
lods
adc
pop
incl
sub
ds
cmp
sub
cltd
jns
out
ret
push
inc
xchg
sbb
mov
imul
leave
call
or
negb
push
push
pop
push
mov
jge
and
faddl
xlat
in
xchg
mov
and
es
inc
hlt
in
push
xchg
sarb
jae
mov
push
pop
xor
std
and
add
jbe
mov
pop
pop
pop
xchg
gs
push
iret
loopne
cmp
loopne
pop
adc
inc
push
cltd
push
shr
dec
roll
mul
mov
sbb
xchg
pusha
popa
and
pushl
jno
lods
xchg
pop
pop
or
dec
mov
mov
and
add
aaa
out
xchg
stos
cli
repnz
xchg
daa
dec
mov
push
cltd
cmp
push
inc
fdivs
popa
pop
jle
push
push
add
adc
jp
and
movsl
js
insl
fisubs
test
aas
sub
xor
pop
or
xor
icebp
adc
cmc
sbb
sbb
lcall
sub
jae
mov
jno
xchg
arpl
cwtl
adc
xchg
bound
cmpsb
sahf
cmp
lahf
dec
and
jmp
cmp
jb
dec
cmc
or
mov
pushf
idivl
push
fidivrs
xorb
dec
out
daa
aad
mov
mov
add
jge
sbb
push
insl
mov
cld
jle
sub
add
jg
and
in
loopne
fsts
les
aaa
dec
mov
sub
mov
std
cmp
pop
daa
mov
pusha
fisubrs
scas
cmp
test
orl
das
dec
inc
xchg
int3
adc
dec
add
mov
or
into
jg
loope
addr16
fs
jle
test
ret
sbb
mov
cmp
popa
inc
dec
inc
inc
aas
stos
pop
cmp
adc
jp
lahf
insl
jbe
mov
and
push
ret
jnp
ja
lret
mov
icebp
cmp
repz
pop
xchg
test
inc
xor
testb
flds
push
pop
inc
adc
jl
enter
inc
shrl
test
inc
test
cli
pop
icebp
xor
push
stc
sub
enter
bswap
pop
sub
inc
das
in
pop
cs
mov
jl
sbb
dec
cmp
jge
ficoml
ja
popf
xor
loope
ret
push
fldenv
mov
mov
lret
fildll
jmp
sub
add
insb
inc
push
ss
imul
cmpsb
je
push
sar
popa
pop
mov
ret
and
mov
push
xchg
xor
push
nop
jl
adc
xorb
fdivs
push
sbb
arpl
jae
shlb
in
xor
es
push
incl
lock
shlb
jle
jbe
out
arpl
fstl
das
adc
sbb
fldt
dec
add
push
xor
into
pop
pushf
enter
xchg
cltd
dec
adc
icebp
push
loope
stos
pop
out
jae
lods
pop
out
jmp
pop
mov
dec
fstp
ret
shlb
in
aad
jl
negb
ret
jno
and
adc
loope
es
loope
jmp
dec
in
aaa
repnz
mov
adc
jg
arpl
mov
mov
lods
sub
fmull
pusha
mov
push
push
ret
rclb
sub
pop
push
gs
shufps
xor
mov
shll
sub
mov
lahf
mov
inc
pop
xchg
cmp
popf
pop
mov
xor
push
iret
scas
popa
repnz
and
std
pop
out
gs
dec
stc
mov
cmpsb
sbb
xchg
add
push
push
pop
cmc
or
jg
dec
cwtl
std
mov
xor
xchg
cwtl
and
movsb
lret
nop
dec
insl
aaa
sub
cmpsb
repnz
mov
xor
ficompl
aaa
gs
pop
xchg
add
ret
cmp
ljmp
push
or
icebp
xor
push
arpl
mov
add
jo
pop
imul
push
out
into
icebp
popf
aas
aaa
arpl
and
pop
test
pop
repz
fstpl
mov
jae
mov
xchg
aas
mov
sbb
xchg
insb
repz
jmp
mov
or
push
cs
enter
mov
stos
xor
add
shl
je
and
cmp
jp
and
stos
cmp
inc
xchg
cs
xor
test
cmp
sbbb
lret
add
xchg
inc
hlt
pop
jecxz
jecxz
movsl
xor
xchg
rorl
jo
leave
jmp
cld
popa
data16
in
pushf
sti
add
fidivrs
mov
pop
or
loopne
cmp
sbb
pusha
mov
jns
adc
add
mov
pop
sbb
dec
outsb
popf
jecxz
out
xorl
lods
stos
push
push
push
test
in
mov
sti
in
aas
int
stc
iret
mov
sbb
inc
sti
adc
aas
or
xchg
xchg
insl
bts
dec
iret
push
rcrl
flds
dec
imul
and
jg
dec
jecxz
andb
or
jb
push
sbb
test
orb
jb
pop
jbe
mov
enter
mov
jge
mov
xchg
gs
pop
fsubl
mov
mov
xlat
mov
in
and
out
cmp
jne
mov
mov
mov
jg
jnp
mov
push
adc
arpl
mov
rorb
mov
lods
sub
jmp
fwait
jnp
lock
mov
test
xchg
sbb
lahf
sbb
fildl
push
stc
lock
pop
out
lret
and
mov
jg
out
stos
mov
dec
cmp
es
mov
and
mov
adc
jnp
clc
hlt
cmp
mov
outsb
loop
daa
int
fadds
out
gs
pop
in
pusha
push
das
movsl
inc
std
sbb
test
stos
loop
mov
jne
ss
in
test
xchg
jae
jae
bnd
nop
mov
aad
and
cld
mov
dec
je
push
and
mov
push
cmpsb
push
sbb
mov
adc
push
outsl
inc
rorb
dec
dec
inc
pop
pop
test
and
mov
dec
mov
xchg
or
jl
or
sarb
jae
pop
cmp
cmp
push
xchg
sub
cs
call
jnp
sbb
shr
mov
pop
cmp
push
dec
cmp
sbb
je
or
test
lcall
outsb
or
cmp
inc
lock
fisttpl
sub
push
ss
out
jp
mov
outsb
dec
fld
lods
pop
addr16
cmc
test
cmp
negl
sahf
dec
inc
pop
inc
sbb
and
lds
adc
nop
inc
divb
outsl
int3
push
dec
movb
ljmp
add
jl
sbbb
jae
jne
enter
push
mov
fisubrl
out
jmp
adc
sahf
add
jmp
aas
lcall
ljmp
pop
jmp
imul
js
inc
int3
movsl
mov
adc
xchg
insl
mov
vmovmskps
sbb
xchg
and
sarb
aam
push
push
xchg
push
ret
out
push
xorb
sbb
mov
push
imul
and
int3
cwtl
mov
shlb
dec
adcl
jbe
xor
popf
testb
adc
jle
fnstcw
xchg
rclb
adc
adc
mov
inc
enter
inc
pop
pop
cmpsb
sbb
out
jle
add
mov
cmc
in
lcall
mov
sarb
lahf
das
jo
fildl
push
dec
xor
mov
enter
aas
and
and
out
or
jle
mov
pop
jo
xchg
lock
or
jns
fcoms
shlb
icebp
mov
and
aaa
jp
push
add
adc
xor
jae
mov
icebp
lahf
xchg
pop
mov
imul
mul
sub
lods
mov
popa
xchg
sbb
sbb
movsl
outsl
loopne
popf
sbb
jo
lahf
add
jecxz
push
adc
jmp
xor
stc
mov
cld
lea
les
ljmp
lds
ds
and
sub
push
or
int3
pop
movsl
lret
jle
mov
xor
adc
pop
std
scas
pop
and
and
shrl
ffree
push
or
fs
sub
aam
adc
cmpb
call
or
xchg
cmp
arpl
call
inc
adc
xor
inc
mov
cwtl
aad
ja
xor
pusha
inc
mov
arpl
icebp
push
mov
mov
jmp
inc
js
and
call
jle
inc
inc
cmp
cmpsb
mov
je
movsb
mov
es
not
fidivl
mov
add
jbe
aas
jno
data16
jo
or
jbe
movsw
fwait
aad
jle
dec
and
mov
mov
pop
cmp
ret
nop
cmpsb
stos
dec
push
mov
adc
dec
fistl
xor
adc
test
fs
jbe
push
aad
jp
sbb
xchg
bound
and
aas
or
xor
jp
cmpsl
stos
ds
xchg
push
xlat
xlat
pushf
shll
xor
addr16
push
and
js
fistps
aaa
sbb
ljmp
xchg
mov
pop
cld
inc
hlt
xor
mov
fisttpl
fisubrs
pushf
popf
push
jecxz
or
cmpsl
push
mov
cmc
orl
push
and
adc
adcl
outsl
sub
push
fcmovbe
jle
push
mov
cmp
xchg
out
xchg
fs
adc
outsl
andb
int3
jge
dec
mov
xchg
xor
mov
sbb
or
pop
dec
popf
xor
xchg
icebp
add
lret
pop
add
mov
sti
xchg
lds
iret
inc
add
inc
sbb
jnp
and
repnz
addr16
and
push
cwtl
aas
cmp
jnp
repnz
mov
fstl
stos
iret
add
or
cmpsl
fiaddl
lcall
add
mov
cwtl
or
sub
mov
push
mov
jae
push
pop
lds
lock
jne
jl
jo
bound
ret
pop
aaa
lods
in
mov
sarb
push
ret
scas
xchg
jg
push
clc
jp
test
fwait
shlb
sub
aam
adc
cltd
loope
lret
add
scas
sbb
fldcw
cmp
or
adc
mov
xchg
jne
push
sub
ja
xor
and
cmpsb
xor
dec
pop
insl
pop
push
mov
push
loopne
jmp
jl
call
and
ret
rolb
push
lcall
inc
lods
sbb
sbb
outsl
mov
jne
push
popa
mov
out
inc
cwtl
sub
iret
sti
mov
push
mov
or
jge
push
jl,pt
adc
fisttpll
loopne
xchg
mov
pop
data16
mov
xchg
ds
fcompl
pop
sub
mov
rcrl
dec
leave
adc
aam
mov
mov
scas
and
outsl
insl
add
sbb
jo
pop
call
push
jp
repz
jge
xorb
push
xchg
fwait
mov
popf
mov
xlat
sahf
popf
mov
push
xchg
sub
dec
push
jl
cmp
xor
ss
push
mov
push
mov
pusha
aad
aas
mov
dec
bound
scas
push
in
das
arpl
sbb
pusha
sub
fcompl
aam
sub
ret
std
mov
sbb
sub
stos
loop
xchg
pop
inc
test
cs
sbb
inc
hlt
xor
mov
and
in
mov
lcall
and
mov
xchg
stos
inc
into
jecxz
xlat
adc
ret
dec
aas
gs
dec
inc
int
jecxz
jg
xor
mov
mov
jmp
out
push
std
fmull
enter
adc
ljmp
and
std
mov
jno
out
add
fiadds
sbb
push
add
fnstsw
pop
xor
fmul
mov
cmp
pop
lds
mov
cs
ret
idiv
imull
pop
mov
sub
and
or
imul
inc
xchg
scas
xor
lret
loopne
movsb
mov
ret
daa
test
add
xor
push
movsb
rcrb
push
mov
fimuls
test
fwait
sub
adc
jne
lods
cmpsl
rol
pop
in
cld
or
xchg
hlt
lods
xchg
inc
inc
incl
push
xchg
fistpll
lods
js
jmp
or
cmp
call
stos
insl
push
imul
jb
ficompl
pop
lret
bound
add
sub
in
sbb
cmp
fdivl
das
xchg
fadds
inc
nop
fs
dec
add
fsubrs
push
pop
lds
fistl
inc
in
adc
aaa
cli
cs
rcrb
daa
push
sub
ror
sub
movsb
pop
pop
out
push
sbbb
mov
addr16
cmp
cmp
sbb
test
dec
sub
adc
arpl
jo
lahf
add
cmpsl
mov
imulb
loope
icebp
or
pusha
cmp
addr16
pop
scas
andb
repnz
mov
pop
lods
mov
mov
or
imul
inc
mov
lcall
je
push
addr16
xchg
repz
adcb
repz
sbb
dec
dec
push
pop
rolb
cmp
fistl
sbb
mov
mov
test
fcoml
aad
push
das
cli
test
push
pop
lcall
inc
push
mov
mov
mov
pop
repz
ss
lock
xor
addr16
aaa
arpl
xchg
cli
icebp
lcall
mov
sarl
jno
aad
jmp
sub
cmpsl
and
inc
fs
lcall
pop
hlt
daa
popf
and
loop
ljmp
mov
jnp
shll
aam
cmp
les
pop
xchg
add
or
mov
dec
dec
pop
inc
push
jno
repz
push
imul
adc
cmp
mov
rolb
aad
mov
out
adc
sub
add
cmp
roll
inc
push
ficomps
lea
adc
lds
push
call
data16
add
jecxz
movsb
flds
push
cmp
movsl
lret
mov
jnp
dec
shll
cltd
fisubrs
notb
sbb
outsb
cmp
aas
push
sarb
add
out
mov
or
or
fisubrs
jns
in
xor
jg
sbb
test
xor
and
loope
cmp
in
lret
decb
lahf
pushf
nop
xor
scas
pop
popa
or
jno
int3
jge
and
xchg
orb
mov
jae
jecxz
mov
xchg
push
dec
push
add
xor
pop
fsts
sti
jno
inc
int
jecxz
enter
cmpsb
adc
das
xor
fists
les
xchg
dec
mov
out
cmpl
jle
mov
popa
xor
stos
nop
adc
jnp
cmpsl
shl
enter
idivb
lret
das
cltd
mov
xor
sarb
mov
faddl
adc
mov
stos
mov
pushf
out
lea
dec
push
data16
sbb
or
scas
dec
sub
pushf
cmp
sub
fcmovb
xor
sub
mov
imul
mov
inc
mov
mov
sub
lds
ss
repz
jp
jmp
ret
inc
movsb
jae
jl
dec
ljmp
xlat
stos
push
stos
push
or
rcll
mov
jmp
hlt
or
jl
mov
mov
sub
cwtl
out
jle
shlb
sbb
leave
xchg
aaa
cltd
cmp
or
pushf
jbe
cld
sbb
and
js
test
push
mov
sbb
mov
subl
sub
loope
dec
insb
push
hlt
test
addb
jns
mov
mov
lea
dec
das
lds
ret
push
push
pop
fsubrs
les
inc
mov
popa
testl
outsl
lahf
xchg
cmp
inc
pop
cmp
call
cmpsb
pop
lret
mov
movsl
mov
dec
pslld
dec
jbe
push
jmp
shll
xchg
scas
mov
jmp
js
adc
repz
int3
xchg
mov
jns
test
sub
jnp
xchg
outsb
movsl
sbb
fisubrl
xchg
smsw
or
pop
std
addr16
inc
mov
out
out
xlat
hlt
fwait
outsl
jle
mov
cwtl
mov
and
sbb
jle
xchg
cld
or
jp
cwtl
daa
imulb
lock
aad
lret
xchg
stos
dec
dec
sub
rorl
in
dec
xchg
dec
lock
adc
pop
aam
mov
into
dec
sub
pop
add
adc
sub
hlt
enter
mov
and
out
xchg
sub
cli
call
cli
fs
fisttps
cli
arpl
mov
pop
or
xchg
push
jne
sarl
push
fstpl
xlat
repnz
aad
in
dec
cltd
movsl
inc
aas
pop
repnz
jl
movsb
test
fcompl
or
or
dec
mov
test
or
lcall
mov
bound
xchg
push
lods
inc
push
jnp
push
jp
ret
jb
into
pop
ja
imul
or
sbb
icebp
xchg
sbb
push
adc
jbe
out
aam
shrb
shrb
imul
ds
cmp
xor
rcrb
stos
cmpsb
mov
and
adc
addr16
ss
sbb
cwtl
lock
clc
dec
mov
cmc
or
lahf
in
sbb
call
dec
js
jbe
lods
subb
hlt
test
cs
lods
mul
sbb
insl
out
ss
push
add
push
sub
inc
inc
ret
xchg
xlat
cli
sbb
inc
inc
xchg
enter
jb
pop
aaa
jbe
xchg
sbb
push
sub
add
mov
ss
mul
hlt
adc
lret
xorl
mov
rcl
ror
scas
icebp
mov
out
vpshufhw
cmp
out
orl
xchg
clc
fistpll
fisubs
jg
push
push
iret
decb
loopne
les
test
in
pushf
cmp
sub
adcl
test
xchg
out
xor
pop
mov
loop
mov
xor
aas
cmpsl
adc
mov
nop
imull
icebp
fisubl
lret
mov
mov
faddl
mov
shlb
sbb
jle
movsl
mov
jmp
xor
rorb
or
dec
jo
lea
outsb
mov
xchg
fwait
pop
loopne
aaa
out
dec
mov
adc
addb
dec
addr16
je
jecxz
call
sub
add
sbb
fisttpl
dec
je
outsl
out
adc
fisttps
fbstp
push
adc
sub
les
xor
ja
daa
daa
test
rcll
ret
inc
insl
fldt
push
popa
fwait
repz
add
xor
mov
stos
aaa
fnstsw
cmp
jne
movups
outsl
aad
hlt
stos
mov
repz
es
mov
sub
xchg
push
or
insb
sbb
push
sti
push
test
cld
lahf
iret
scas
push
sti
push
jo
jnp
test
or
ret
xor
and
cmp
pop
sbb
rorl
std
adc
fnstsw
and
sub
sub
mov
ret
lret
stc
sti
ret
adc
mov
and
scas
push
nop
mov
ljmp
push
outsb
inc
movsb
pop
imul
jne
movsl
cld
repz
cmpsb
mov
in
inc
fnclex
fidivrs
jne
stos
pop
sub
imul
in
lods
cmpsb
mov
push
mov
rclb
leave
jmp
jg
pop
addr16
fsubrl
lods
pop
repz
lret
xchg
pop
mov
imul
pop
jge
rol
push
xor
mov
fs
in
fwait
sub
aaa
lret
push
jnp
stos
add
pop
add
repnz
mov
repnz
stos
in
mov
mov
out
bound
add
push
leave
imul
mov
push
mov
and
mov
leave
ffreep
mov
in
xor
mov
lcall
mov
push
sahf
add
test
fimuls
and
push
add
jl
popf
cs
cmp
push
ror
mov
jo
mov
xchg
jl
mov
lods
jl
je
pop
or
mov
xlat
push
lret
js
bound
cmp
enter
call
ficomps
cld
repnz
pop
loopne
pop
pop
pop
jg
test
cmp
adc
dec
push
xchg
lea
mov
imul
loopne
cwtl
insb
cmp
enter
stos
sub
bound
in
add
push
pop
in
rorb
decb
lret
and
inc
inc
imul
imul
mov
mov
and
or
sub
pop
jmp
jne
mov
pop
call
lret
push
adc
movsl
insl
aam
pop
xorl
out
fbstp
cmc
fdivs
mov
dec
push
push
sbb
subb
sub
out
xor
scas
dec
sbb
cmc
push
in
or
cmpxchg
or
xchg
dec
xchg
lea
or
push
xor
andl
adc
pop
xchg
mov
fbstp
push
pop
mov
mov
popa
cmp
inc
out
or
mov
and
jns
cmp
insl
lret
push
mov
lret
test
clc
repz
lods
mov
cltd
jl
aaa
mov
popf
sbb
mov
jg
and
mov
mov
enter
pop
imulb
xor
shrl
cmpsb
movsb
int3
in
pop
sbb
scas
inc
insb
adc
mov
pop
inc
jnp
repz
loop
xchg
fnsave
and
mov
daa
pop
sarl
rclb
out
je
shl
dec
hlt
pop
xchg
testl
add
mov
loopne
loope
sub
mov
cmpb
loope
xor
ret
jno
inc
mov
cltd
incl
push
lret
xchg
mov
cmp
push
fwait
push
mov
ljmp
and
and
dec
dec
push
sub
ret
outsl
or
aad
nop
inc
mov
cmpsl
inc
scas
inc
lret
adcb
or
cmpsb
loope
and
ror
lea
fbld
enter
mov
xlat
sti
cld
pop
dec
leave
pop
nop
jno
pop
jmp
xor
sub
icebp
pop
rcl
adc
jbe
sbb
push
dec
xchg
jp
push
mov
cs
dec
xchg
xchg
push
stc
mov
dec
xor
ja
or
pop
adc
daa
lret
aam
popa
jmp
stos
or
das
pusha
dec
mov
enter
xor
mov
and
jno
pop
dec
les
into
xchg
subl
in
fcomip
lods
and
xchg
adc
ja
mov
inc
loop
scas
mov
lea
insl
adc
xor
dec
inc
xchg
adc
cmpsb
jb
das
stos
in
test
aam
bound
daa
adc
shr
sahf
scas
cmp
xlat
jne
push
push
cld
and
xchg
pop
bound
pop
sbb
sbb
sub
and
mov
sub
fiadds
aaa
lret
cmc
cmp
jne
pop
xor
hlt
mov
mov
mov
jno
lcall
cwtl
jae
inc
mov
mov
shrb
and
das
jns
leave
jnp
sti
out
mov
es
adc
imul
std
push
xlat
daa
ja
sub
jo
leave
das
jno
pop
dec
or
and
mov
test
add
adc
repz
xchg
mov
pop
hlt
and
xor
xor
push
dec
pop
adc
jmp
cltd
adc
mov
adc
movsb
sbb
add
pop
and
lahf
jno
scas
outsb
mov
inc
pusha
sbbl
fmuls
fldl
outsb
xorb
pop
add
sbbb
sub
push
int
sbb
adc
repnz
es
pop
sub
nop
outsl
sub
push
cmpl
mov
test
out
push
pop
addr16
push
inc
jo
mov
adc
push
je
outsl
dec
mov
jp
jecxz
dec
fidivs
out
push
mov
pop
imulb
shrb
into
hlt
jle
xchg
pop
enter
ficompl
push
cli
dec
fisttpll
mov
inc
sbb
cmpsl
addr16
out
leave
out
mov
int3
movsl
lahf
sub
loop
xchg
pushf
xchg
ret
jnp
mov
das
sbb
pop
or
shll
clc
or
sbb
test
call
adc
push
inc
subb
xchg
in
in
push
and
insb
pop
push
loope
movsb
mov
andl
xor
cs
out
adc
mov
pusha
cmp
daa
testl
ficompl
cmp
jbe
lahf
and
pop
pop
out
dec
scas
mov
inc
add
push
sub
ss
cmc
and
es
and
push
mov
in
xchg
cli
faddl
xchg
xor
adc
or
or
es
test
push
lret
popa
fisttpll
repnz
repz
dec
aas
xor
pop
xor
add
push
fistps
fldl
and
ja
andl
andl
inc
movsl
cld
cs
rorb
mov
lret
fisubrl
aam
mov
insl
loop
sbb
lods
adc
addr16
add
push
fstpl
lock
mov
push
ljmp
idiv
mov
push
xlat
clc
and
xchg
addb
mov
in
out
rcrb
push
dec
push
mov
add
mov
mov
pop
xchg
inc
dec
clc
jge
xchg
or
fsubs
lret
cs
scas
fucom
adc
rclb
dec
stc
sarl
cld
pop
dec
test
arpl
push
sub
adcb
mov
gs
outsb
std
or
lret
cltd
xor
jle
adc
or
ror
hlt
push
in
mov
xlat
and
loope
or
and
rorl
int
or
rcr
bswap
push
das
push
fdivl
xchg
roll
push
fcmovbe
imul
cmp
mov
pop
mov
jns
pop
daa
sahf
fsubrl
cli
add
xchg
ss
mov
pusha
test
sub
ss
pop
jp
lea
ret
dec
mov
popa
pop
iret
scas
mov
in
jne
xchg
cmp
outsl
cli
jno
or
fstpl
sbb
mov
push
sbb
cmp
add
scas
xor
dec
aaa
adc
loop
lcall
push
nop
fs
adc
in
orl
je
sub
popa
mov
mov
push
mov
add
dec
sbb
call
mov
inc
mov
pop
notw
lods
unpckhps
sub
scas
cmc
cltd
pop
ret
shl
clc
sbb
lea
shrb
dec
and
mov
loope
imulb
dec
fwait
inc
push
pop
ss
mov
je
pop
cmp
int3
push
rcl
jb
repz
shrb
scas
jmp
or
outsb
pop
int3
sbb
mov
leave
outsl
icebp
and
lods
ror
lret
dec
inc
inc
xchg
daa
push
loopne
mov
rorb
out
ja
dec
and
jg
nop
daa
and
jnp
dec
ljmp
mov
jno
bound
cli
cld
xchg
sub
scas
sbb
rcrb
bound
shlb
sbb
dec
pop
aaa
add
jle
xchg
ds
jge
xchg
std
mov
repz
iret
xchg
nop
dec
cmp
add
pop
sub
subb
jbe
inc
xorl
xlat
jge
pop
add
daa
shlb
scas
dec
ss
push
fdivl
mov
xchg
hlt
shl
movsl
xchg
pop
addr16
popa
xlat
cmc
pop
jge
ret
out
nop
aas
stc
mov
mov
adc
push
aas
aas
jae
stc
jle
shlb
pop
arpl
mov
pop
lods
nop
addr16
popf
sub
popa
cmc
jb
cmp
mov
leave
daa
lret
xchg
cmp
pusha
push
arpl
pop
sbbb
fsts
push
mov
xchg
andb
arpl
mov
gs
jbe
adc
imul
pop
mov
orl
ljmp
jne
and
clc
push
ljmp
sbb
jmp
loopne
test
mov
jp
jbe
adc
scas
ficompl
or
and
fs
push
mov
xchg
cmp
mov
add
iret
xchg
xor
lahf
mov
push
sbb
pop
call
pusha
cmp
outsl
sbb
adc
jbe
dec
and
adc
cmp
jo
lret
divl
push
sbb
adc
fisubrl
test
xchg
pop
pop
dec
sbb
xor
pop
push
les
lahf
add
pop
xchg
lcallw
mov
lods
cli
sti
jbe
lock
mov
jp
jns
fidivrl
jp
movsl
cmc
stos
xchg
lea
xor
in
lret
xchg
iret
sub
mov
cmp
push
in
mov
push
ds
dec
popf
rcrl
pushf
xor
or
sub
dec
jbe
xchg
push
mov
push
inc
lcall
mov
je
cwtl
out
test
adc
cs
outsb
test
and
aas
test
jmp
mov
jno
mov
data16
xchg
mov
cs
sub
addr16
jle
inc
outsb
leave
adc
dec
inc
add
jno
in
nop
add
cltd
xchg
or
push
cmc
xchg
jmp
test
fdivrl
jbe
stos
aad
or
call
jle
push
inc
scas
adc
jnp
int3
lds
and
pop
gs
cmp
xchg
push
push
cmp
insl
popf
popa
and
leave
arpl
or
repnz
test
sarb
mov
lret
ljmp
pop
xlat
dec
xchg
rep
es
inc
arpl
lock
jne
jns
cmp
testl
adc
xchg
and
add
out
jp
aam
gs
jae
arpl
inc
flds
fidivs
or
nop
leave
jne
mov
xor
mov
mov
aam
addr16
cmp
out
push
scas
shr
loop
andb
xchg
and
xor
out
and
inc
jnp
pop
cmc
sub
cmpsb
mov
and
leave
jp
ror
pop
mov
mov
push
cmp
cmp
jge
gs
pop
clc
daa
fs
mov
and
mov
aaa
bound
mov
push
negb
pop
shll
xor
loope
push
dec
shlb
add
shrl
inc
jmp
lods
insl
pushf
dec
repz
jae
sub
subps
lds
sti
and
daa
mov
mov
mov
mov
pop
pop
jno
mov
mov
jg
push
fiaddl
lret
ficoms
xchg
jno
call
sbb
mov
or
arpl
rol
mov
js
cmp
jge
adc
shlb
xchg
inc
mov
je
sub
dec
in
pusha
mov
popa
mov
lret
int3
cwtl
popf
pop
cmp
enter
ss
sbb
lds
out
fwait
pop
mov
andl
es
dec
stos
xlat
mov
inc
push
or
jo
sbb
mov
sbb
adc
cmp
das
adc
push
je
cmc
fisubs
gs
pop
ljmp
popf
rolb
add
test
adc
data16
sbb
xchg
imul
mov
xchg
inc
pusha
aas
cld
mov
lds
sti
scas
movsl
adc
xchg
inc
add
iret
jo
out
sub
aam
adc
xlat
sub
test
adc
push
pop
aad
jae
xchg
xchg
ret
inc
bnd
jp
add
sbb
data16
std
andb
inc
or
or
call
mov
divl
cmp
lock
jbe,pn
push
add
sub
movsb
fstl
jb
call
pop
mov
out
sbb
jmp
pop
sub
cmp
jecxz
pop
push
sub
pop
frstor
xor
jno
xlat
inc
mov
or
cmp
or
lcall
rcll
jmp
add
and
mov
rol
ss
and
push
movsl
test
xor
xchg
xchg
shrb
rcl
dec
imul
mov
out
adc
ss
sahf
push
enter
repnz
test
pop
rorl
jne
jge
xor
or
sahf
add
test
push
rolb
gs
mov
mov
jae
call
cmpsb
lods
mov
mov
mov
inc
inc
jno
lods
popf
xor
ja
add
jmp
scas
or
cwtl
iret
call
xlat
test
fs
mov
cwtl
fwait
pushf
push
loop
xchg
push
mov
bound
mov
pop
movsl
lahf
into
mov
push
sbbl
inc
pop
int3
jg
fdivl
push
cli
test
cmc
sbb
mov
addr16
dec
call
testb
iret
test
cmpsl
pop
lea
xchg
ljmp
jb
add
loop
mov
or
lds
lret
cmp
hlt
add
sub
pop
movsl
arpl
repnz
iret
cmp
xchg
mov
mov
pop
nop
push
xchg
lcall
mov
or
push
clc
xor
nop
lahf
inc
scas
sahf
and
negl
mov
aas
out
stos
pop
sbb
add
xchg
repnz
sub
mov
pop
cmpsl
out
pop
dec
inc
out
mov
scas
leave
arpl
sbb
mov
shl
push
notb
in
in
push
adc
cwtl
or
jb
jg
sub
mov
imul
adc
and
adc
lcall
mov
xor
fucomi
in
or
pop
fidivs
and
sbb
sub
stos
ror
dec
loop
in
xchg
sub
lods
adc
ss
test
jmp
mov
lds
sub
mov
cmp
push
pop
push
mov
cwtl
mov
subb
lret
dec
bound
pop
js
mov
sbb
out
pop
ds
mov
jp
hlt
repnz
ja
mov
cmp
ljmp
and
fmul
jno
and
mov
int3
inc
pop
push
adc
push
mov
xchg
mov
call
xchg
mov
fdivl
loope
mov
mov
inc
lret
mov
fdivrl
pop
xchg
pop
push
mov
dec
pop
jbe
and
cmp
xorl
or
xlat
dec
in
scas
repnz
jle
jle
je
ss
sub
fsubl
adc
ja
stos
shr
push
inc
or
inc
inc
test
xchg
dec
or
dec
js
fwait
and
andb
jbe
jne
sub
dec
sbb
pusha
iret
clc
aas
cmc
sahf
push
call
ficoms
sbb
popa
js
push
test
push
in
aaa
jnp
cmpsl
mov
push
imul
lods
pusha
stc
sbb
jo
loop
adc
movsl
mov
into
jns
inc
repnz
dec
xchg
jl
andb
out
pop
cmp
imul
das
dec
sub
sbb
xor
in
test
push
ja
sbb
push
adc
stc
cmp
test
dec
lods
insb
cmp
and
ret
add
outsl
inc
loop
fwait
cmp
aam
fs
imul
and
je
adc
in
bound
add
push
dec
or
mov
lret
dec
jmp
lea
mov
mov
mov
dec
inc
push
sbb
scas
scas
push
lahf
stos
dec
xchg
dec
lock
jae
mov
cmp
clc
outsl
xor
imul
push
cmp
adc
jae
sub
stc
orl
inc
outsb
or
sub
adc
iret
push
addr16
lcall
int3
movsb
lret
jmp
cmp
out
int3
add
cmp
fadds
iret
cmpsb
mov
leave
xlat
sub
cmp
shll
pop
ss
jmp
and
sbb
lahf
dec
in
fdivrs
lret
shlb
rorb
flds
mov
or
outsb
pop
in
leave
mov
and
aam
fdivp
aas
cmp
mov
cld
dec
dec
mov
pusha
xor
xchg
mov
into
xchg
push
push
mov
sub
std
push
jns
cmp
iret
xlat
jmp
mov
bnd
pop
dec
aam
les
incl
push
leave
push
jnp
and
cmp
insl
jl
push
xchg
repnz
out
add
pop
or
leave
das
aam
pop
xor
insb
sub
sub
inc
push
mov
mov
in
pop
pop
adc
and
add
mov
cmp
fildl
pop
push
in
push
test
fs
xlat
inc
decl
pop
mov
lods
bound
dec
pop
addr16
faddl
add
fisubrl
mov
aaa
xchg
push
loop
test
cmp
adc
adc
je
jae
fcoml
subb
sbb
mov
jae,pn
add
mov
add
xor
sub
push
sbb
int
xor
add
push
cmc
sub
inc
xor
insb
bound
dec
loopne
cs
cmpsb
out
popa
cwtl
xor
stc
xor
inc
add
das
xchg
sbb
repz
aam
mov
inc
lock
aad
loopne
nop
stos
stc
pusha
test
jnp
cmpb
mov
cmpsl
adc
lea
mov
xchg
mov
in
pop
lret
pop
popa
cmc
lea
test
push
lea
push
adc
xchg
pop
repz
clc
outsl
push
push
mov
pop
call
pop
cmp
pop
push
std
js
das
ds
mov
stos
in
lret
inc
inc
sbb
pop
sbb
mov
lea
ljmp
or
mov
sub
jbe
cmp
imul
adc
xchg
std
lods
aad
outsb
stos
pop
pop
cmp
mov
inc
js
pusha
or
test
fcompl
adc
jo
cmp
cmp
dec
push
out
ret
fidivl
add
dec
jo
fmull
dec
pop
xorl
sbb
in
pop
mov
outsb
mov
jo
add
cmp
add
cld
sub
sti
pop
push
mov
cli
push
sub
pop
sub
negb
dec
inc
mov
rorl
adc
lret
inc
jno
sub
xchg
shlb
js,pn
fwait
mov
in
mov
daa
aad
aaa
cld
pusha
sbb
iret
fisubl
ret
adc
inc
push
out
cwtl
jl
lea
cld
mov
gs
cmpsb
add
sti
sub
aaa
pop
test
popa
cmp
out
xchg
mov
add
nop
xchg
movsb
in
aad
shll
sub
outsl
push
jbe
push
and
cmp
jle
xchg
mov
mov
mov
stos
lret
rclb
cmp
shl
and
cld
outsb
add
fisttps
push
sbb
flds
xchg
in
mov
jno
repnz
nop
xor
iret
xchg
cli
shr
mov
inc
lret
jecxz
sbb
pop
cmp
in
sbb
pop
push
jne
cld
out
mov
mov
mov
cmpsl
rorb
ret
icebp
push
lret
dec
scas
xlat
enter
jmp
dec
push
push
jmp
lret
mov
jnp
sub
movsb
cmc
jmp
bound
fcomps
enter
dec
mov
and
and
xor
les
lret
jno
insb
cltd
ss
out
nop
mov
sbb
outsb
in
jnp
sbb
stc
fwait
adcb
pop
adc
aad
sbb
mov
jbe
jecxz
cmp
sub
in
call
fnstenv
cli
or
cmpb
cmp
into
iret
xchg
call
jecxz
aam
lahf
aam
push
fcoms
cli
cmpsb
jp
mov
sbb
arpl
add
jmp
dec
cmpsl
popl
xlat
dec
sbb
pushl
or
rcrb
push
loopne
ror
cmp
dec
jae
std
test
sub
push
cmp
or
popa
add
and
imul
leave
mov
mov
or
insl
sbb
push
int3
sbb
push
bound
inc
and
inc
mov
cmp
cltd
aam
xor
dec
iret
lcall
pop
mov
pop
xchg
lock
cmpsb
mov
xor
cmpsl
ds
in
rcl
test
or
adc
aas
add
dec
sarl
ficomps
mov
loope
xor
pusha
scas
stos
dec
sbbl
popf
push
xchg
xlat
push
ror
jp
iret
xor
cmp
sbb
mov
addr16
mov
add
mov
idivl
lahf
mov
sbb
out
arpl
out
fdivs
push
sti
jb
rcll
and
and
scas
adc
dec
call
push
gs
jmp
jb
lret
cmpsl
repnz
repnz
pop
and
inc
mov
add
in
pop
outsb
jle
push
jo
pop
bound
stc
cld
mov
fnstsw
nop
std
arpl
push
data16
jno
pop
xor
and
or
adc
pop
imul
jle
addl
mov
or
test
enter
and
xor
mov
sbb
pop
push
xchg
push
add
es
xchg
bound
js
lret
adc
lods
cld
inc
adc
mov
add
cmp
adc
cld
mov
das
mov
add
stc
xchg
xchg
lahf
and
mov
and
outsb
and
rolb
mov
stc
mov
xchg
leave
pop
dec
scas
test
lahf
movsl
das
dec
je
sbb
xchg
into
loopne
mov
rorb
subl
add
imul
jnp
shlb
dec
lahf
test
jl
mov
shrb
xor
cmovo
push
xchg
je
icebp
jge
lahf
xchg
popa
rcrl
and
add
mov
jl
pop
mov
dec
push
mov
xor
add
pop
std
imul
mov
loop
fldcw
imul
outsb
jp
stos
add
fwait
sbbl
mov
je
xchg
leave
fcompp
and
aaa
add
dec
lret
xchg
cmpsl
daa
dec
imul
jg
lds
js
clc
push
lods
sub
imul
mov
insb
jp
mov
in
lods
push
js
test
insb
into
and
fistpl
push
mov
push
je
mov
testb
ret
mov
jmp
lahf
loop
repz
pop
outsb
mov
sbb
cmc
inc
add
fdivs
ja
jle
data16
sti
push
inc
xchg
mov
out
outsb
loop
jne
xchg
inc
mov
push
jl
fstpt
call
sahf
mov
mov
lret
or
pop
jns
jb
xor
addr16
rcrb
push
dec
jecxz
mov
and
inc
loopne
push
movsb
dec
inc
jno
iret
cld
mov
cmp
inc
sbb
push
pop
ja
aam
cltd
iret
jmp
mov
fwait
in
pop
icebp
mov
gs
cmp
aam
stc
clc
jb
loop
movsl
xlat
pusha
cmpsl
fidivrl
test
cmp
cmpsl
lods
lock
adc
and
popf
mov
xor
test
pop
cmp
inc
dec
fsubp
mov
cmpsl
and
fnstenv
push
pop
addb
mov
or
stc
mov
movsb
cmp
or
fidivrs
fnsave
inc
mov
xor
aad
cmp
fstl
and
adc
add
mov
leave
pop
nop
mov
test
sbb
push
xchg
mov
xor
lret
stc
adc
hlt
pop
shll
call
push
jmp
outsl
adc
jmp
adc
jl
mov
mov
xor
out
cs
mov
sbb
mov
add
arpl
adc
mov
push
mov
mov
jno
jmp
cs
sbb
add
je
repnz
repnz
das
and
test
dec
jg
pop
orb
add
stc
orb
dec
fistl
and
mov
out
sbbb
stos
push
fwait
mov
inc
sbb
cmp
jbe
inc
aaa
sub
jae
push
add
mov
mov
je
jns
bound
out
cmpsb
xchg
popf
aaa
push
jns
jmp
mov
add
and
and
inc
and
sbb
stos
decb
xchg
sub
pop
jb
pop
notl
stos
mov
pushf
inc
jno
ss
inc
mov
into
xor
jmp
xor
std
cltd
aaa
xchg
inc
into
and
test
je
gs
cmpsl
xchg
fsincos
add
xchg
pop
sbb
fiaddl
out
inc
addl
and
sub
jl
rcrl
dec
shrb
mov
inc
je
mov
pop
aam
icebp
movsl
jle
mov
adcb
mov
xchg
dec
add
imul
repnz
jl
dec
cmp
mov
sti
loopne
mov
push
xor
ja
push
adc
ja
shr
mov
imul
andb
lcall
push
sub
sarl
orl
jecxz
clc
stos
sbb
cmpsb
addr16
or
cwtl
and
fbld
clc
into
mov
jns
movsl
sub
mov
push
jb
gs
adc
xor
je
sub
sahf
push
mov
lret
or
test
mov
jecxz
pop
out
rclb
sbb
mov
inc
jae
hlt
xchg
shrl
fs
mov
bound
clc
js
shll
add
cmpsb
pop
mov
and
jne
inc
shrl
movsb
fs
movsb
mov
xchg
insb
lcall
psrld
jae
push
mov
ficoml
iret
push
in
out
pop
jns
xchg
adc
fimull
lahf
lcall
lcall
pop
inc
mov
mov
pop
mov
call
xor
scas
xchg
fwait
outsb
out
or
shlb
mov
xor
mov
sbb
cmp
or
js
aam
ja
test
and
notb
fucomp
jle
pop
sub
test
bound
popf
loop
incl
incb
mov
mov
and
int3
and
pop
jge
sbb
std
jae
hlt
add
imull
pop
aam
cmp
cmp
repz
lret
call
stos
test
adc
imull
push
inc
mov
outsb
in
int3
xchg
imulb
in
and
rorb
jecxz
mov
jnp
pop
push
mov
mov
sbb
outsb
out
mov
fcompl
ljmp
xor
out
shrb
jge
cld
stos
lret
sub
cli
sti
mov
lcall
cs
arpl
xchg
mov
negb
pop
ret
push
mov
adc
cs
or
jp
inc
jp
add
enter
sub
cmp
xchg
int
mov
adc
repz
addb
mov
cmc
lds
xchg
jnp
imul
cmp
imul
sbb
ffreep
sarl
xchg
cli
xchg
bound
pop
adc
or
loop
lock
aaa
sbbl
loopne
adc
mov
jmp
jo
out
and
mov
gs
add
loopne
sbb
jecxz
fnstenv
and
or
inc
scas
pop
outsb
mov
fptan
repz
faddl
lods
lahf
outsl
out
jne
out
add
ret
jno
pusha
mov
jae
scas
test
sub
xor
push
xor
fs
pop
inc
insb
sub
mov
cmpl
pop
inc
push
enter
mov
lret
add
dec
push
outsb
jb
sub
and
rolb
mov
xor
jae
subl
mov
pop
xchg
or
repz
mov
dec
inc
push
pop
mov
fmull
leave
and
fsubs
jle
pop
mov
jge
adc
enter
xor
popf
jecxz
adc
dec
mov
sub
fidivrl
push
cmp
repz
shrb
in
lods
pop
data16
ds
push
sub
push
scas
jb
out
int3
xor
sbb
push
cwtl
adc
mov
jg
xchg
call
mov
adc
testl
das
je
mov
inc
lahf
sbb
xchg
or
push
in
mov
call
add
mov
cmp
cmpsb
shl
adc
lock
inc
xor
mov
jge
stc
cmp
lods
add
adc
or
jb
in
movsb
sub
xchg
popa
enter
lods
idivb
cmp
cltd
cld
and
cmp
pop
dec
arpl
jg
sarl
jno
sbb
ja
das
orl
xor
stos
aas
push
or
call
out
inc
int3
xor
sub
or
mov
movsb
in
das
outsl
jl
push
dec
cld
xchg
push
inc
lock
pop
out
dec
lret
mov
inc
add
xor
and
lock
xchg
add
sub
and
pop
dec
out
mov
call
sub
dec
bound
clc
jbe
repnz
sub
add
mov
insb
jl
ficoml
test
mov
cmc
dec
icebp
test
mov
xor
push
movsb
cmp
sti
cmpsl
shll
jne
fistpll
and
aad
jmp
ror
cmp
enter
and
in
test
stc
stos
sbb
pop
jo
mov
pop
mov
mov
mov
cmp
inc
sub
xchg
cmp
sbbl
dec
xchg
jmp
sub
fcoms
push
inc
in
adc
data16
xchg
or
cmp
xchg
lahf
push
imul
mov
repz
pop
cmp
push
dec
mov
test
rorl
iret
test
repz
or
cmp
mov
cltd
bound
or
ret
aas
inc
jnp
testb
mov
insl
ljmp
aas
fisttpl
sub
cmp
or
mov
mov
outsb
push
jecxz
or
mov
cmp
testb
in
mov
movsl
popf
sub
inc
aas
xor
mov
pop
mov
je
cmpl
popa
pop
xchg
push
sub
pop
sahf
icebp
or
popf
jbe
pop
test
cmp
lret
sarl
repz
jle
cmpsl
push
aad
cmc
cmpsb
push
fadd
push
jne
stc
jle
sbb
pop
sarl
jecxz
push
inc
int3
push
je
je
lods
jl
dec
dec
push
xchg
push
or
mov
jb
mov
int
inc
jnp
jmp
mov
testl
jns
das
sbb
loopne
push
jl
mov
add
add
and
adc
shll
adc
lock
out
fcoms
dec
mov
out
xchg
test
cmp
call
mov
daa
roll
test
test
fistpll
mov
loope
jo
jb
or
aad
add
jecxz
call
in
sub
adc
mov
fimuls
pop
mov
xchg
mov
inc
scas
cmp
iret
imul
pop
xchg
dec
mov
cmc
stos
adc
jge
mov
insb
leave
inc
pop
dec
int
push
iret
idivb
cmpsb
roll
arpl
mov
xor
in
mov
mov
mov
or
mov
dec
ss
imull
popa
daa
cwtl
movsl
inc
pop
ds
fwait
lods
cmp
aad
mov
mov
xor
int3
sub
mov
adc
add
xor
sub
mov
cmp
insb
mov
cltd
ljmp
xchg
or
lds
test
bswap
jbe
jnp
cmp
cmpsb
fldt
xor
ss
push
adc
idivb
imul
dec
mov
lds
fmull
imul
pop
sbb
pusha
cmp
lds
push
mov
dec
xor
dec
je
out
fcomps
mov
push
mov
push
sub
mov
test
jo
cwtl
xchg
mov
adc
fs
stos
jo
pushf
adc
mov
adcl
xor
in
xchg
jg
adc
fstpl
into
and
jne
sub
sti
nop
loopne
add
dec
jl
insl
pop
cmpsb
sti
mov
hlt
push
in
xlat
ljmp
jmp
mov
ret
leave
sti
iret
scas
adc
xlat
pushl
push
cli
das
cmpb
enter
sbb
sbb
pop
bsf
call
jb
cmp
and
push
into
mov
cmp
jp
jne
pop
into
addl
lods
movsl
jno
cmp
fisubrl
xor
mov
mov
jno
loop
sbb
sbb
ds
rclb
push
and
sbb
fnstsw
loope
arpl
andl
mov
clc
xor
pushf
loopne
push
xchg
and
loopne
mov
jne
loop
das
push
and
sbb
mov
insl
ljmp
cs
in
dec
mov
cmp
or
iret
mov
movsl
cmp
jne
or
inc
pop
insl
nop
jns
add
stos
insb
sti
jnp
cmp
sbb
addr16
fisubrs
sti
dec
dec
iret
cmp
fdivs
test
push
aam
in
cld
mov
mov
or
mov
aam
mov
aas
int3
xchg
int
imul
shlb
cmp
aas
adc
jae
push
pushw
mov
push
adc
cs
mov
pop
fsubrl
stc
xor
shrl
push
loopne,pn
insl
pop
mov
mov
adc
in
sti
repnz
pusha
inc
test
and
gs
cmp
popf
cltd
xor
ret
mov
fsubr
mov
fld
inc
lret
push
jae
into
xor
lods
mov
mov
adc
popf
mov
xchg
incb
mov
push
in
shlb
dec
test
aad
addr16
pop
sbb
xor
dec
repnz
sbb
jb
outsb
lret
out
dec
cmp
lret
dec
popf
inc
jnp
les
cmp
push
ds
inc
out
std
xchg
scas
sub
dec
ret
xor
mov
jmp
loop
movsb
mov
fwait
scas
or
adc
push
and
xlat
es
or
or
stc
cmc
call
sub
xchg
rcrb
mov
mov
jg
out
mov
cmpsb
fmulp
jno
rorl
xchg
mov
mov
pop
insl
pop
scas
xchg
rcrb
or
jl
add
sub
pop
xchg
call
and
cmp
dec
out
insb
fcomps
pop
jb
andb
lea
add
ret
push
fidivrl
subl
push
cmp
shll
jmp
lret
xorl
loop
cmp
and
jecxz
jno
aad
out
in
fdivrs
arpl
inc
cwtl
inc
in
and
lcall
stos
sbb
lcall
and
adc
xchg
and
fstpt
mov
xchg
and
xor
adc
and
aam
sub
pminub
sbb
xor
lods
ret
lahf
add
add
sub
dec
mov
ffree
pop
icebp
mov
or
mov
push
mov
mov
test
mov
lret
lock
int3
sub
inc
sahf
sbb
mov
rep
pop
xchg
test
pop
aaa
enter
mov
lret
mov
out
cmp
add
add
das
stos
mov
sub
xchg
sub
jne
mov
imul
mov
fistl
pop
daa
jle
out
orb
gs
movsb
sahf
cmpsl
ret
ss
dec
jo
lea
xchg
sbb
mov
or
xor
push
std
das
fsubr
mov
cmp
gs
fisubl
mov
dec
add
jmp
xor
repz
out
and
daa
and
loopne
add
sub
in
test
inc
imul
imul
push
inc
xchg
inc
lret
movsb
mov
and
dec
adc
fsub
inc
add
popa
rcll
leave
popa
loopne
push
outsb
dec
mov
bound
ret
popf
dec
xchg
xchg
cmp
adc
in
add
stos
das
mov
frstor
adc
pop
and
mov
dec
out
sbb
push
popa
scas
sbb
sub
push
aad
mov
in
mov
fisttps
mov
fsubrl
xchg
adc
notb
xor
xchg
jb
aad
cli
push
cmpsb
daa
mov
mov
push
mov
adc
dec
imul
movsb
imul
movsl
cmpsb
push
xor
xchg
mov
adc
jo
xor
lea
jg
cs
or
pushf
cmpsb
in
aaa
incb
sahf
jnp
mov
fdivr
sbb
shrl
sti
push
mov
lock
mov
in
push
pop
mov
hlt
pop
mov
push
pop
mov
jnp
cmp
stc
call
les
les
cmpsl
mov
xchg
outsb
repz
adc
jbe
fsubrs
sub
jecxz
test
ljmp
pcmpeqd
pmulhw
jns
jp
stos
mov
adc
jno
lahf
lea
add
std
push
cmpsb
inc
mov
stos
shlb
pop
or
mov
lret
repz
push
inc
rorl
mov
sbb
jl
sbb
inc
dec
or
adc
pop
in
add
cmp
popf
shr
jg
dec
jno
iret
sub
shll
fdiv
lock
movsb
and
insb
mov
sbb
jo
fwait
xchg
jnp
jnp
insl
sub
dec
cmp
mov
sub
inc
mov
adc
adc
scas
cld
mov
fwait
and
lds
mov
xor
jl
jo
mov
adc
adc
repnz
add
int
ret
das
shll
roll
mov
data16
cwtl
dec
push
add
inc
lods
jo
inc
sti
xchg
adc
mov
lods
and
dec
jl
push
jmp
dec
movsb
cs
ja
insb
std
or
lock
in
stc
inc
or
leave
into
push
push
pop
outsb
push
fnstcw
ret
sub
fwait
jp,pt
popa
out
shrl
pop
push
push
clc
mov
imul
insl
outsl
test
mov
xor
sbb
adc
xchg
movsb
idiv
insb
inc
mov
aam
popf
and
mov
inc
dec
mov
sbb
mov
pop
out
adc
mov
adc
mov
inc
pop
push
fwait
std
adc
jge
jno
shl
and
jae
cwtl
lods
insl
mov
out
push
xlat
rorb
sahf
xor
mov
fsubs
fldcw
es
faddp
cmp
xor
xor
cs
in
stc
fwait
psubusb
stos
push
mov
inc
add
loopne
cmp
jp
scas
fsubl
mov
lret
jecxz
ficoms
sti
mov
adc
lcall
push
cmc
push
cmc
les
int
dec
xor
push
pop
pop
add
outsl
mov
pop
mov
not
or
and
jp
sub
add
leave
xchg
sbb
aam
xchg
sbb
add
fcmovnu
push
fiaddl
inc
sbb
repnz
outsb
daa
inc
insb
push
xchg
in
lock
lods
or
gs
jmp
insl
mov
or
xor
jmp
dec
scas
and
or
pop
aas
xchg
mov
pop
pop
xor
sub
js
dec
xchg
popa
inc
mov
xchg
push
lcall
or
js
xchg
mov
stc
cmp
pop
mov
cmp
mov
inc
sub
inc
and
das
push
mov
lea
movb
clc
test
inc
insb
mov
dec
idivl
adc
aaa
add
cmc
not
or
push
dec
pop
or
jnp
sub
addb
sub
cmpsl
in
inc
jo
mov
xchg
adc
mov
inc
mov
push
std
mov
jg
lods
dec
fs
jl
lock
and
sub
das
divl
mov
mov
pusha
inc
ja
std
jge
inc
pop
or
imul
clc
xlat
dec
stc
hlt
aad
pop
int
stc
int3
inc
and
sti
cmp
push
jns
test
lahf
das
jle
nop
jae
jnp
call
repnz
aas
icebp
mov
jns
or
mov
sub
xorl
in
xchg
jp
mov
push
dec
rclb
out
loope
aaa
nop
mov
pop
mov
sti
xor
rclb
repz
mov
mov
loop
in
ss
jp
jb
or
rorb
fmull
dec
xor
lcall
inc
xchg
sahf
imul
insb
ds
fnstenv
mov
add
sti
hlt
lea
dec
push
and
divl
adc
into
mull
xchg
jno
sbb
cmp
adc
sub
lods
mov
dec
inc
out
fldl
or
in
aad
mov
xlat
or
mov
sti
mov
cmp
outsl
scas
jmp
and
aaa
stc
cmpsb
jne
jo
sti
popf
insl
and
arpl
fwait
in
gs
aam
aaa
sar
sub
fisubs
xorl
repnz
ret
andb
bound
sub
cli
inc
push
pop
in
in
xchg
or
and
pop
push
or
inc
lret
into
test
js
icebp
push
push
pop
mov
sub
shll
subl
sti
mov
jge
mov
inc
mov
ficompl
je
dec
pop
xor
cmp
cwtl
sub
out
inc
adc
imul
scas
pop
mov
jns
add
test
push
push
mov
jmp
xor
or
cmpsl
xchg
fisubrs
shl
sbb
loopne
pop
push
arpl
fiadds
push
sbb
pop
mov
into
jnp
shrl
sbb
xchg
movsw
mov
mov
add
or
mov
xchg
es
cmp
xchg
ja
test
xor
mov
add
push
and
pop
cmp
or
jecxz
sbb
mov
stos
lods
in
mov
ficomps
fcomi
mov
xor
bound
sarl
mov
cmp
pop
jp
imul
sbb
pop
orb
stos
insl
loop
pop
jb
adc
bound
int3
jae
or
gs
addr16
rolb
dec
fistpll
fdivr
in
xor
sets
mov
daa
jbe
pop
les
sub
je
out
xchg
test
inc
pop
push
xchg
push
pop
fldt
std
mov
push
ret
cmp
sub
lea
xor
pop
adc
cmp
pop
inc
in
inc
loop
negb
ret
dec
jo
fistl
repz
cmpsb
enter
xchg
inc
add
pop
or
xor
mov
xor
fstps
outsw
mov
jl
out
fsubr
adc
rclb
int3
jge
dec
cmp
shlb
dec
mov
lock
sub
cmc
insl
flds
dec
loopew
inc
shlb
inc
sbbl
test
iret
mov
fldl2e
mov
sub
add
push
lahf
dec
mov
jp
sbb
inc
pop
mov
repz
test
sti
cwtl
inc
push
inc
push
testl
cmc
out
test
jae
jnp
imul
out
ret
shrb
in
gs
stos
mov
and
fiadds
push
fucomi
bound
sbb
jae
push
es
mov
add
xchg
jbe
mulb
lds
push
movsb
push
ffree
sti
sahf
and
mov
pop
xchg
lret
incl
xchg
rcl
js
scas
cld
je
pop
pop
aad
repnz
leave
inc
inc
inc
dec
mov
out
xor
insb
pop
xchg
xorl
xchg
in
adcb
xchg
add
ficoms
dec
jne
ret
mov
in
call
js
imul
sbb
cs
sbbl
adc
pop
mov
pop
dec
shlb
push
inc
ret
push
or
cwtl
jle
shl
push
arpl
ja
in
pop
outsb
or
call
pop
mov
jnp
lods
adc
mov
arpl
insl
fwait
dec
push
out
lret
mov
cmc
and
push
push
cmp
xor
pop
cmc
mov
jae
cmp
push
xor
cmpsb
push
out
mov
mov
js
iret
push
xor
pop
hlt
push
int3
fwait
pop
adc
cmpsl
xchg
push
cmp
out
pop
add
ljmp
sti
lea
in
jb
out
cld
inc
shll
push
popf
dec
aam
in
icebp
xor
roll
xor
subb
adc
aam
ror
mov
mov
imul
push
rcrb
add
add
and
jns
jecxz
mov
mov
shlb
idivb
aas
inc
jb
mov
pop
lock
pop
dec
mov
push
pop
insl
rorl
daa
out
cmpsb
cmp
push
sub
sbb
iret
jmp
xor
outsb
cli
fcomip
mov
or
mov
jmp
or
cli
stos
aam
pop
lea
jp
sub
xchg
pop
add
popa
inc
int
or
pop
loope
lock
inc
out
in
jo
bound
insb
xchg
push
push
lahf
lock
mov
xchg
inc
rorl
vcomiss
mov
out
enter
sub
inc
inc
stos
or
pop
push
fdivrp
movsb
out
cmp
sub
imul
ret
push
out
sub
mov
in
icebp
jb
push
movsb
cmc
jnp
sbb
mov
lods
mov
subb
and
flds
call
in
mov
test
sahf
and
imul
das
fistpl
fmuls
sub
icebp
in
outsl
cmpsl
notb
into
cmp
repnz
xchg
adc
fistl
lds
lock
jl
lss
les
int3
loop
mov
xor
adc
div
xor
popa
ficoms
movntq
insl
push
mov
shrl
cltd
jl
std
mov
sti
sub
add
and
push
out
sbb
dec
lds
in
out
mov
push
mov
inc
daa
lret
mov
xchg
into
int3
sub
fwait
insl
mov
cmp
mov
inc
mov
sub
add
ds
jns
sbb
jmp
daa
lods
je
xchg
adc
inc
repnz
xchg
xor
push
add
inc
jne
outsl
or
pop
jp
scas
aas
pusha
sbb
int3
inc
jb
push
push
ljmp
fstl
stc
out
cmpl
cmp
imul
push
xor
inc
ds
dec
jp
ffreep
cmc
cmp
or
in
mov
jno
int
fcomi
mov
in
mov
inc
stos
push
mov
mov
loope
cmp
out
es
loop
or
jnp
addl
test
mov
jae
rcl
cmp
mov
lds
lahf
pop
xchg
inc
push
fcompl
push
sbb
aaa
in
mov
insb
push
or
jge
nop
pop
dec
shll
xor
andl
shrl
sub
and
or
xchg
or
mov
push
or
cld
xor
in
or
ret
sub
push
call
sub
das
push
cmc
mov
in
sub
push
or
scas
push
xchg
enter
xchg
aas
xchg
jmp
lods
jg
mov
cmc
cmp
call
gs
mov
les
andl
test
mov
fdivrp
or
stc
dec
push
push
and
jmp
lahf
pushf
push
ss
std
test
shl
movsl
dec
jmp
ja
ljmp
sbb
into
push
insb
stc
jo
push
xor
cmp
and
jno
ja
repnz
fldl
and
pop
jno
jle,pn
ja
cmc
and
push
inc
push
adc
aaa
rcll
aad
shll
fwait
jno
inc
adc
rcrb
sub
mov
push
cmp
fwait
stos
lods
xchg
or
push
cmpsb
push
ret
xchg
pop
outsb
ja
jg
push
mov
pusha
sub
jg
push
xor
test
ret
shlb
sti
out
in
pop
mov
insb
pop
sub
roll
jg
pop
jp
mov
sbb
xor
imul
dec
xlat
loope
mov
sub
and
sti
push
adc
insl
mov
jmp
insb
sub
sbb
mov
sub
mov
mov
int
xchg
xchg
xchg
xchg
and
mov
adc
pop
adc
outsl
movsb
insb
int3
hlt
test
adc
je
lret
sbb
mov
and
dec
imul
stos
test
pop
mov
lahf
xor
add
fbstp
imul
sub
mov
dec
mov
cmp
cld
mov
fisttpl
xchg
icebp
loope
xchg
mov
aaa
popa
lret
pushf
popa
nop
pop
cmp
cmovp
sbb
int3
push
popf
ds
cmpsl
sub
lret
pop
iret
dec
mov
pushf
add
lods
fiadds
xchg
and
dec
adc
fucomp
mov
mov
movsb
cmp
dec
enter
mov
dec
jb
test
aas
jge
lret
push
pop
push
pop
frstor
push
mov
mov
mov
cs
daa
jg
and
jmp
xor
mov
jge
mov
add
pop
xchg
int3
andb
inc
mov
scas
fsubrp
xor
std
mov
in
std
addr16
outsb
add
sti
and
mov
sahf
pop
dec
sub
sub
enter
outsl
xor
mov
mov
into
push
mov
pop
jne
mov
fidivs
push
lahf
dec
notb
adc
pop
cmpl
fcmovne
sbb
xchg
pop
daa
test
adcb
clc
outsb
jle
or
pop
in
xchg
xchg
ror
inc
mov
hlt
dec
popf
lret
xlat
sbb
sub
inc
jge
and
and
sub
dec
lock
jmp
leave
loopne
mov
pop
xor
jg
imul
jl
fdivs
mov
push
mov
mov
icebp
sbb
inc
iret
cmp
cmp
xorb
push
pop
cmp
mov
shr
ret
mov
sub
iret
sbb
cwtl
es
push
nop
scas
ret
push
enter
pop
jnp
hlt
push
or
dec
cmp
adc
das
pop
push
and
test
in
stos
and
popa
loop
popf
das
das
push
call
xor
xchg
add
or
fdivs
push
xchg
and
jne
lret
aam
movsb
xor
movb
push
dec
nop
mov
call
mov
std
outsl
xor
pop
jl
repz
mov
in
pop
push
inc
xchg
call
pusha
xchg
cmpsb
adc
mov
test
jle
jno
inc
popf
jle
pop
push
cld
out
inc
mov
sub
ljmp
add
test
dec
lds
pop
arpl
cwtl
push
mov
cmc
sub
dec
mov
scas
inc
and
or
cmp
pop
cmpb
jge
addr16
ja
std
fcmovnbe
cli
cmpxchg
fsubl
lock
mov
rorl
test
sbb
push
mov
xor
shll
mov
jmp
addr16
cld
mov
jl
cs
data16
jecxz
and
xor
out
hlt
xor
sbbl
fnsave
lret
scas
mov
dec
ljmp
push
je
adc
jmp
sahf
stc
jl
ret
jmp
jle
cmpsb
cmp
popf
pop
je
dec
out
jae
xor
jbe
mov
ret
into
mov
adc
stos
and
out
inc
jmp
fwait
add
xor
lods
or
xchg
xchg
adc
dec
vpaddb
insb
push
sahf
scas
and
fucomp
dec
gs
mov
pop
lods
addb
push
jbe
idivl
je
fisubs
arpl
or
add
jp
inc
enter
or
iret
inc
xchg
pusha
ja
sbbl
std
fldenv
pop
sub
add
xchg
adc
mov
lock
pop
sahf
push
sub
push
mov
das
xchg
mov
sub
je
data16
mov
mov
cmp
popa
mov
dec
addr16
mov
add
repz
sti
sub
or
lds
sub
mov
xor
cld
push
enter
push
xor
xorl
adc
call
nop
sub
ret
jl
icebp
sub
sahf
xlat
xchg
outsb
pop
arpl
aas
mov
cmpl
xor
jmp
cmpl
and
lods
pop
cmp
cld
fstpl
loop
hlt
xlat
jns
or
pop
leave
out
fsubs
leave
jle
push
loop
aaa
pop
cmp
push
in
xor
into
jge
je
sbb
lret
adcb
neg
sub
mov
fcoms
inc
test
push
dec
add
push
mov
cmp
mov
mov
sub
dec
mov
pop
nop
mov
and
add
inc
ljmp
bound
mov
xchg
in
xor
andb
hlt
loop
insb
xchg
clc
sub
test
stc
push
dec
cltd
sbb
sarb
dec
int
enter
repz
add
leave
adc
aam
push
outsl
cltd
jl
push
int3
mov
mov
bound
stc
into
movsl
cld
scas
arpl
insl
add
dec
mov
xchg
fimull
bound
testl
jnp
sahf
cmp
mov
pop
or
xlat
jb
mov
pushf
dec
outsl
inc
stc
mov
andl
sub
xor
mov
cmpsb
or
sbb
pop
dec
fistpll
fwait
xchg
dec
decl
jl
std
mov
pusha
lahf
add
cmp
dec
pop
mov
xchg
ret
lret
mul
ljmp
out
testl
movsb
ret
sub
in
or
and
ljmp
xchg
cmp
jns
xchg
inc
push
xchg
lret
xor
dec
pop
jl
fbld
adc
jp
subl
sar
push
orb
pop
dec
insl
inc
lahf
lret
les
in
out
icebp
mov
jge
dec
lcall
xchg
arpl
inc
jmp
cmp
inc
aas
test
xor
leave
movsw
aam
mov
ja
dec
aas
dec
test
sub
add
clc
or
je
iret
sbb
pop
sbb
lret
pop
out
xchg
clc
imul
cmp
cmp
lret
inc
jl
cmp
pop
leave
mov
sub
mov
or
or
loop
push
xchg
std
aam
test
icebp
push
aaa
shlb
cli
fnsave
stos
mov
nop
cmp
inc
mov
xor
sub
mov
data16
out
jns
pop
pop
out
fld
shll
dec
movsb
orb
popf
test
fucomi
mov
test
pusha
rcrb
mov
cmp
fidivl
mov
in
scas
insb
inc
inc
pop
into
xchg
mov
sbb
add
pop
pop
mov
sub
pop
cmp
data16
and
xor
push
jns
idivb
out
lock
jno
fstps
push
mov
cmp
in
xor
sub
push
sbb
cmp
repz
jo
mov
rorb
pop
lods
push
cmp
xor
sub
push
and
pop
imul
jge
and
scas
pop
sbb
jo
mov
jbe
xchg
repz
lea
inc
pop
scas
push
stc
pop
and
sahf
data16
mov
sbb
cmp
movsl
adcb
stc
mov
ja
scas
lret
xchg
xchg
clc
fists
js
test
xor
test
push
or
fwait
cmc
cmpsb
xchg
ja
push
xor
out
and
or
outsl
jns
or
push
dec
ja
add
push
pop
and
and
mov
xchg
add
push
mov
test
neg
xchg
push
inc
jnp
arpl
jle
mov
push
icebp
out
or
mov
cmpb
xor
push
stc
jle
dec
push
xor
mov
xchg
cmp
outsb
out
pop
in
sbb
push
shl
pop
add
cmp
loop
dec
mov
pop
pop
movsb
mov
into
and
mov
addr16
sbb
icebp
or
cmc
daa
fmull
pop
pop
out
shlb
cmpsb
insb
jnp
inc
sub
in
in
and
adc
pusha
sti
loope
negl
cltd
std
pop
lds
or
pushf
cmp
into
clc
lahf
mov
fwait
rolb
mov
inc
insl
xchg
hlt
mov
or
xchg
ja
fwait
lds
jg
in
xlat
pop
test
lods
aam
pop
test
int3
dec
cmpsb
sub
aam
and
shrl
and
or
mov
lds
adc
mov
or
fldcw
out
adcb
mov
dec
dec
fs
sbbb
enter
or
test
dec
push
mov
sub
leave
push
sbb
sbb
stos
repz
mov
movb
shl
lahf
movsl
jmp
push
mov
scas
popf
cmc
popa
mov
or
mov
sbb
or
mov
jno
xchg
popf
fs
jl
imul
gs
cld
dec
and
and
mov
orl
mov
xor
fdivs
xchg
scas
test
js
cltd
inc
test
pop
and
mov
pop
push
sahf
xchg
icebp
pavgw
add
test
ffreep
pop
in
or
add
pop
push
jge
into
pop
sub
adc
in
adc
adc
jle
xchg
inc
movsb
push
call
xor
roll
scas
push
dec
fsts
lds
inc
mov
notl
pusha
subb
cmpsl
and
in
std
or
aam
popf
or
call
cs
push
add
adc
add
sti
jmp
ja
daa
or
loope
popf
subl
mov
xchg
lock
in
fisubrs
fwait
mov
jnp
inc
les
aad
scas
push
dec
add
insl
cwtl
xor
cwtl
test
mov
pop
pop
sahf
xchg
jns
ret
mov
mov
mov
mov
rorb
add
orps
or
inc
outsb
cmp
bound
inc
popa
shlb
int3
pop
sbb
mov
gs
pop
sub
mov
sub
pushf
popa
sarb
out
sub
xchg
int3
adc
lods
mov
addl
sub
adc
adc
aas
out
xchg
clc
sub
mov
xchg
xchg
or
in
hlt
jl
cmp
sub
mov
imul
xor
xchg
idivl
das
pusha
sub
dec
cmpsl
aam
sbb
mov
inc
clc
movsb
or
int
lahf
lret
xchg
pop
mov
adc
mov
roll
ljmp
mov
push
subl
sti
repz
mov
sbb
lcall
cmpsb
add
ljmp
fdivrl
dec
mov
repnz
adc
inc
out
mov
mov
inc
mov
dec
into
or
pop
sub
xor
scas
pushf
adc
fwait
in
and
pop
into
inc
jl
adc
sub
cmp
xchg
insb
test
and
push
adc
and
cmpsb
les
push
je
fisttps
adc
pop
cmp
repz
push
jnp
ss
lret
fcomps
or
dec
outsb
js
sbb
aam
pop
mov
insb
jb
cmp
scas
push
push
mov
cltd
cmp
cs
ja
fiadds
scas
iret
rcl
pop
aaa
out
xchg
mov
xorl
in
clc
mov
xor
xchg
aas
mov
cwtl
sbb
jb
in
dec
test
mov
clc
cmp
into
lock
fstpl
movsl
fyl2x
movsl
adc
fldenv
add
enter
mov
pop
sbb
xchg
push
ds
mov
mov
lea
xchg
push
jecxz
and
add
adc
lds
push
mov
lcall
pop
std
mov
pop
lods
out
pop
stos
push
jnp
push
int3
sbb
mov
outsl
dec
les
repnz
lods
fcomi
and
mov
adc
mov
sub
cld
push
push
lds
mov
repz
add
movsb
repz
or
dec
popl
ficompl
xchg
cmp
cmpsb
jb
shlb
js
and
hlt
push
jne
mov
xchg
mov
fdivl
xor
pop
imul
adc
jb
inc
std
outsb
mov
jl
xor
shl
fmulp
fadd
jp
jle
mov
gs
sbb
addr16
and
xor
stos
push
fwait
lahf
xorl
lods
jae
jno
xchg
lods
xchg
fimuls
cmpsl
sti
rclb
add
lret
andb
adc
out
sarb
mov
scas
jbe
xchg
fstl
add
repz
dec
lods
ds
pop
test
aas
popa
repz
sbb
mov
sbb
cmp
push
jl
mov
call
mov
push
xlat
sub
popf
sarb
or
jg
fwait
pop
arpl
mov
push
xor
pop
outsb
cltd
adc
lock
loope
addr16
xchg
jne
xor
sahf
and
jle
mov
imul
movsl
inc
fdivrl
cmp
adc
jne
push
lods
int3
dec
imul
subb
rolb
ret
xchg
jmp
pop
rcr
dec
mov
arpl
and
cmp
inc
orl
js
mov
mov
outsl
lods
add
push
enter
movsl
cmp
fidivl
pop
aad
sbb
jo
push
cltd
rclb
fldcw
or
xchg
or
adc
leave
loopne
loop
push
mov
jno
xchg
mov
push
mov
xor
mov
fldt
faddp
add
in
xlat
cmp
jmp
or
fiaddl
jg
mov
inc
mov
mov
xor
es
pop
push
leave
and
aad
xchg
shrb
nop
jns
add
insl
cmpsl
outsb
pop
mov
loopne
loopne
mov
jecxz
mov
je
fildl
enter
push
int
inc
jbe
out
sbb
test
adc
sub
and
mov
outsl
int3
jb
lahf
nop
stos
ds
pop
imul
leave
xchg
sbb
or
xchg
fisttpll
mov
js
and
add
ret
ss
dec
stos
add
lods
sti
lcall
out
jecxz
and
jae
loopne
cmp
adc
add
insl
adc
sahf
sbb
xorb
xchg
lods
dec
pop
push
push
cmovg
in
dec
dec
jb
js
in
sub
adc
pop
out
test
push
cmp
pop
xchg
push
insl
push
jb
sar
and
pop
push
pop
inc
add
or
ljmp
mov
outsl
mov
lcall
mov
push
pop
rclb
sbb
mov
stos
xchg
out
fidivrs
and
cmc
je
call
je
mov
enter
stos
int3
add
push
sbb
mov
add
aas
or
jns
xchg
xor
cmpsb
mov
inc
ds
rcll
scas
jecxz
into
push
fbstp
mov
aaa
or
sbb
outsl
or
fucom
jns
cmpl
dec
test
or
fucomi
aaa
fisttps
mov
insb
std
adc
into
or
jo
insl
xor
push
or
lahf
cmc
inc
sub
adc
sub
test
pusha
lock
pop
lea
roll
and
lea
xchg
aam
dec
jmp
inc
pop
loope
and
add
mov
cmpb
aam
inc
cmp
pop
cwtl
cmpsb
mov
xchg
xchg
imul
xchg
add
sbb
cmp
push
push
lcall
fdivr
jecxz
ja
outsl
jo
stc
arpl
push
lds
sbb
push
test
clc
dec
lds
movsb
or
mov
mov
xchg
mov
xorl
sti
inc
mov
repnz
xchg
cmp
fs
pop
pop
sahf
aaa
dec
and
add
add
cmp
xchg
xchg
mov
js
or
push
pop
add
dec
mov
in
mov
stos
push
rorb
sub
jmp
lock
cs
imul
int3
sbb
cltd
jmp
xchg
faddl
jecxz
xchg
and
test
lret
loope
pop
xor
mov
ret
inc
imul
dec
fs
test
push
bound
js
add
in
inc
insb
addr16
repz
fwait
div
and
ficompl
dec
stc
cltd
fstps
lock
adc
xor
mov
scas
xor
ret
push
push
pop
mov
push
and
sbb
sarb
pusha
inc
out
cld
outsl
sub
xor
call
dec
mov
add
ss
cmpsb
mov
and
fucom
and
idiv
or
cmpsl
pop
xor
mov
cmpsb
dec
jp
inc
icebp
cmp
shrl
ret
sahf
mov
adc
fwait
push
xor
jge
mov
xlat
mov
stos
dec
lds
stos
sahf
in
mov
shrb
xor
cwtl
sub
jno
ljmp
xor
cs
adc
das
ror
dec
lcall
adc
leave
pop
or
outsb
xchg
adc
push
push
jp
aad
test
pusha
out
and
pop
inc
mov
jp
shrb
mov
xchg
jo
hlt
stos
mov
fcmovnbe
xor
push
rorb
in
or
rorl
popf
rclb
or
mov
dec
nop
push
sahf
rcr
mov
xorl
mov
mov
cmp
data16
dec
push
test
jmp
bound
or
leave
xor
jns
push
add
xchg
xorl
push
cmp
test
leave
pop
div
repz
inc
xor
fwait
and
cmp
ljmp
addb
adc
dec
and
loop
and
movsb
cmp
and
or
mov
dec
cmp
in
inc
cmpsl
ret
int3
pop
pushf
xchg
pop
adc
add
dec
rorb
call
popa
pop
lods
inc
push
inc
sub
or
jl
xchg
cmp
pop
mov
sub
sub
pop
pop
iret
sbb
sub
add
or
lock
lods
daa
cltd
xchg
es
cmpsl
shlb
add
sub
cmpsb
mov
lahf
popf
pop
in
jle
rol
inc
clc
mov
scas
or
pop
fs
lds
mov
cmp
sub
and
mov
loope
dec
pop
xchg
push
push
cmp
push
ret
imul
cmpb
jnp
xchg
jae
imul
iret
hlt
call
mov
push
shll
pop
ljmp
or
jle
dec
outsl
inc
cmp
dec
in
sub
pop
in
repz
das
notl
and
out
mov
lahf
aas
pop
imul
rcrl
push
pop
rolb
orl
fnstcw
lods
in
mov
xchg
jmp
adc
inc
cli
jmp
insl
andb
call
sarl
mov
adc
mov
or
shl
enter
xchg
mov
cmpsl
dec
mov
fistl
mov
mov
sbb
push
add
sub
sub
or
add
lods
inc
lcall
sub
enter
hlt
mov
mov
sahf
add
shrb
mov
push
pop
mov
and
jmp
in
les
mov
jbe
je
out
mov
mov
pop
and
aad
aaa
repz
sarl
push
lcall
dec
pop
aam
mov
push
movsb
xor
xchg
lods
inc
xlat
dec
lds
inc
lods
dec
dec
push
scas
lea
faddp
arpl
push
and
push
pop
rclb
sahf
xor
jns
int
jnp
pop
int
mov
in
fwait
xchg
repnz
jo
cli
mov
test
ds
or
fisttpl
sbb
add
aam
push
insl
dec
xor
stos
xlat
mov
sahf
inc
es
or
lret
xchg
dec
mov
lock
jne
sbb
or
pop
enter
push
pop
and
cmc
mov
addb
fldl
aas
loop
dec
push
cmpsl
inc
in
hlt
shrl
in
bound
fsubrs
negl
jg
mov
fmuls
lock
dec
bnd
inc
inc
scas
movsb
mov
xor
shrb
inc
pop
cli
xchg
aas
or
fsub
repnz
sub
mov
arpl
dec
xor
jecxz
fwait
sub
xchg
cld
jb
lcall
fdivs
push
imul
mov
in
sti
xor
mov
xlat
add
push
pop
xchg
mov
mov
arpl
xchg
imul
aaa
lea
jle
pushf
shrb
fwait
cmp
pop
mov
jp
and
jae
cmpsb
inc
cmp
sub
and
inc
and
xchg
les
push
sbb
sbb
sbb
dec
push
repnz
mov
adc
bound
andl
in
xchg
push
test
cwtl
xor
out
xorb
xlat
push
mov
in
mov
pusha
test
btc
mov
pop
leave
mov
shr
and
daa
enter
repnz
mov
and
fs
xchg
mov
lods
dec
scas
mov
cmp
or
ret
mov
jnp
dec
sbb
xchg
push
mov
xchg
imul
aaa
mov
xor
jbe
add
pop
cmpsb
popf
shl
aad
inc
xchg
xchg
sbb
mov
lods
outsl
test
out
cmc
xor
sbb
sub
dec
adc
and
mov
das
pop
push
mov
outsb
decl
decl
cmp
mov
popa
addl
cwtl
cmpsb
inc
lock
insb
sbb
or
cmp
xor
movsb
pop
xor
mov
cmpsb
test
jmp
mov
push
test
mov
adc
divb
push
fwait
cmc
jnp
fisubrl
data16
push
cmp
daa
shll
pop
les
jle
cmp
pop
popa
bound
xor
inc
xchg
ds
rol
xchg
loop
lods
adc
add
lock
jnp
ja
xor
jo
movsb
pop
ja
cs
leave
or
lret
dec
repnz
mov
or
and
mov
fcmovnu
jp
lahf
lret
mov
repnz
mov
add
inc
push
fnstcw
push
outsb
xor
addb
add
dec
je
incb
mov
sar
add
into
xor
outsl
push
xlat
pop
mov
cmp
push
adc
popa
andb
push
lret
lret
pop
jno
dec
jno
loop
jne
scas
mov
pop
call
jmp
or
pop
fdiv
jae
xchg
lds
dec
cmp
shrl
sbb
mov
jne
loop
xor
lahf
inc
int
dec
xor
in
lods
or
cwtl
sbb
or
movsb
xor
xchg
pop
sub
cmp
mov
jns
lcall
data16
notb
xchg
lods
sar
adc
lret
inc
pop
into
lret
cmp
and
mov
mov
repnz
push
nop
add
ret
push
and
data16
cmp
push
dec
adc
mov
aaa
jmp
sub
mov
bound
lds
cmp
inc
pop
mov
daa
jle
ret
fnstsw
stos
fimull
je
mov
insb
in
icebp
add
cmovg
jae
mov
call
and
negb
lcall
movsl
jbe
js
dec
pop
dec
jmp
out
insb
jl
pop
rcrl
mov
leave
mov
and
pop
push
cld
fcomi
xor
test
cs
and
xor
pushf
repnz
push
push
cmpb
out
imul
adc
fcoml
dec
int
mov
xchg
mov
out
push
lret
add
adc
cmp
fs
in
push
xchg
xchg
roll
mov
mov
mov
and
pop
sbb
sbb
ja
push
cwtl
push
aaa
jbe
jle
rcll
popf
cld
stos
cmpsl
insl
int
stos
loopne
scas
mov
fcoml
adc
das
leave
add
inc
jb
aas
pop
pusha
mov
clc
and
outsl
inc
push
call
stc
test
sti
and
mov
js
mov
dec
adc
aad
mov
jno
inc
enter
out
nop
popf
lock
jecxz
mov
mov
int3
ja
out
leave
in
arpl
mov
call
mov
icebp
repnz
test
mov
jno
lods
sbb
and
movnti
insb
sar
xlat
jb
lea
and
xchg
mov
push
push
pop
fcmove
add
dec
lahf
iret
sbb
xchg
dec
mov
cmp
push
test
mov
aad
into
mov
mov
sarl
fldt
xor
fistps
lods
sub
sbb
data16
inc
scas
loop
add
sbb
imul
and
fwait
cmp
jl
cmpsb
dec
pop
adc
ud0
push
test
pop
aas
jno
xor
lods
sti
sarl
or
enter
dec
inc
clc
pusha
adc
ret
ret
xor
pop
js
iret
pop
mov
pop
jge
pushf
iret
repz
addr16
push
jl
inc
mov
gs
mov
ljmp
or
adc
jmp
inc
mov
dec
in
lds
push
add
insl
int3
inc
cmp
test
movsl
fdivrl
out
inc
mov
sub
jns
xor
stc
add
outsb
and
loopne
push
movsb
sbb
mov
push
pop
iret
lock
adc
fucomi
cltd
mov
int
outsb
xchg
push
mov
xor
add
lahf
aad
or
cld
cmpsl
out
cmpsb
pop
scas
insl
icebp
inc
mov
cli
push
rcrb
xchg
inc
dec
in
push
repnz
mov
adc
fnstenv
scas
out
push
jnp
dec
jle
mov
adc
fnsave
roll
aad
jmp
test
mov
test
sub
pop
and
or
das
dec
out
sub
imul
enter
and
xor
adc
jae
mov
push
cmp
cmp
int
cmp
push
rcrl
mov
push
dec
push
and
cmpsl
mov
inc
or
xchg
xor
xor
rcll
adc
sub
das
xchg
cmp
xchg
add
lret
test
adc
pop
ror
add
cmp
xor
push
orl
adc
sti
sbb
add
or
inc
sub
stos
adc
idivl
mov
dec
sbb
rcr
xchg
pop
arpl
jne
rcrl
rcll
fucomp
or
mov
dec
lock
inc
fiaddl
cmp
out
divl
xchg
popa
inc
mov
push
or
in
jg
inc
mov
cmp
jecxz
fdivrl
or
jae
insb
in
fcomi
cmc
sti
push
push
or
xchg
sub
cmp
loop
push
test
into
lock
cmpsb
mov
mov
xor
ljmp
inc
cmp
xchg
ja
push
lods
icebp
mov
clc
pop
arpl
xchg
mov
xchg
dec
stc
add
mov
jnp
sub
in
je,pt
or
outsl
inc
push
or
lds
paddd
ffreep
sub
ds
rolb
imul
mulb
test
fxch
mov
xor
inc
jne
add
sub
cmpsl
rcll
xchg
testb
xchg
jmp
mov
mov
rclb
jl
xchg
mov
js
cmp
sarb
jl
mov
add
sbb
jmp
mov
xorb
xor
addr16
xchg
fs
jns
out
ror
loop
dec
fld
sbb
test
repz
mov
cld
gs
arpl
daa
or
aad
and
cli
add
jo
dec
pop
push
jg
push
out
sbb
sub
loopne
mov
decl
push
mov
xchg
fs
jecxz
je
jl
outsl
lret
popa
cmp
push
xchg
repz
test
mov
lds
out
jmp
fsub
add
add
cmp
shll
mov
jmp
fnstcw
leave
sub
test
cmpsb
dec
and
stos
das
push
sub
jo
popw
clc
jecxz
sbb
mov
push
dec
xchg
jbe
pop
cli
shld
scas
bnd
pop
cltd
jle
cmp
inc
cmc
lods
add
in
ret
cmp
mov
gs
pop
js
repz
in
testl
insb
mov
cmp
rcrl
xor
xor
test
pop
xchg
add
in
and
fstps
jo
arpl
jbe
mov
movsl
loop
lods
lcall
jmp
icebp
rol
pop
negb
inc
xor
aaa
icebp
dec
push
rorb
mov
pop
push
out
lea
mov
pop
movb
clc
incl
jno
in
lret
dec
adc
repnz
pushf
es
es
sbb
subb
ret
std
push
xchg
leave
enter
ret
cld
sti
icebp
jns
xor
ljmp
sub
pusha
nop
lahf
nop
mov
xchg
push
clc
aas
addr16
pop
mov
push
les
rcrl
xor
and
cmp
in
dec
outsb
push
add
sub
inc
and
icebp
mov
mov
mov
jmp
jbe
in
cmc
fmulp
ljmp
in
cmpsb
add
mov
mov
ret
mov
repz
hlt
fimull
adc
pop
lcall
dec
sub
pop
mov
mov
inc
imul
out
mov
ljmp
pop
inc
and
inc
lea
mov
arpl
sbb
icebp
test
jns
or
pop
arpl
xor
mov
movl
outsb
fildll
push
nop
mov
shrb
lahf
push
ret
icebp
and
mov
daa
xor
inc
xchg
loope
aaa
inc
jns
mov
dec
push
outsl
stc
jecxz
push
jg
das
xchg
cmp
js
or
push
mov
ret
jmp
out
mov
mov
push
mov
mov
adcl
orb
jnp
lahf
cmp
int
dec
jnp
xor
sbb
aad
sbb
mov
popa
add
iret
in
scas
jo
jnp
arpl
jbe
jecxz
pop
xchg
mov
push
inc
test
or
and
imul
mov
aas
jg
xchg
ret
adc
in
popa
cmp
inc
add
mov
xor
xchg
das
les
clc
div
sbbl
jg
push
or
mov
cltd
jecxz
ss
xor
dec
mov
enter
popf
jge
cmp
jnp
dec
xor
outsb
testl
fwait
sbb
jecxz
scas
lret
stos
xchg
push
push
fisubl
adc
adc
jnp
fidivrl
xor
cli
bts
push
jg
push
clc
mov
or
scas
clc
or
jp
js
cli
aas
adc
xor
add
cmp
add
cmp
aam
ja
sbb
insl
ret
cmpsb
mov
xor
mov
pop
pushl
and
or
sub
mov
inc
ret
mov
sub
and
push
xchg
pop
or
jmp
ljmp
inc
insl
lods
mov
out
xchg
shrl
push
decl
push
cmp
pop
jns
je
sub
mov
in
add
pop
xchg
call
inc
jmp
dec
test
xor
clc
or
inc
dec
push
inc
push
scas
and
add
mov
je
addb
fs
dec
call
push
sbb
in
fs
xchg
or
scas
jae
push
jo
jmp
daa
cmp
add
jle
ret
in
lea
sub
and
ret
pop
push
add
orb
data16
adc
incl
lds
adc
dec
push
sahf
shlb
inc
into
pop
and
push
jns
mov
xchg
xlat
lods
and
je
lahf
pop
xlat
lcall
movb
mov
xor
repz
inc
or
test
fsubl
js
lret
mov
jecxz
and
setp
pushf
xor
xchg
mov
adc
es
es
fisttpll
mov
daa
xor
xchg
lea
jp
xor
test
push
mulb
test
cvtpi2ps
xor
imul
xchg
push
push
or
jmp
push
adc
call
inc
and
jno
or
in
mov
out
inc
pusha
pusha
xchg
pop
mov
mov
and
cmc
xlat
pushf
es
and
jae
and
test
mov
popa
or
int3
mov
fnsave
adc
and
ja
xchg
insb
push
push
in
pop
stc
das
and
rcr
mov
xlat
enter
fcomp
mov
jno
mov
repnz
or
out
aam
push
mov
out
lds
ja
pop
cs
sub
or
push
insl
mov
fcmovnbe
pop
sbb
cmpl
cmpl
xchg
and
das
aad
xor
sahf
dec
inc
cmc
repz
std
add
dec
stos
jecxz
dec
or
or
imul
lods
xchg
stos
inc
shll
dec
xor
repz
mov
sub
push
xchg
std
mov
scas
frstor
sub
add
repnz
cmc
mov
sbb
rclb
sub
popf
sub
jecxz
sub
andl
test
cltd
cltd
je
andl
adc
clc
sbb
mov
mov
mov
xchg
xchg
pop
xchg
cs
jo
shrb
push
hlt
add
or
call
sbb
xor
push
icebp
xor
sbb
out
sbb
jl
int3
add
rol
xor
adc
lods
hlt
repnz
les
xchg
sbb
mov
cmp
xchg
jl
cmp
lea
mov
cmp
ret
lods
mov
aas
std
push
pop
shll
nop
repz
mov
push
rcl
jbe
inc
pop
mov
xor
inc
inc
mov
inc
xor
jns
dec
adc
jbe
adc
cmp
add
pop
or
xchg
sub
jae
adc
movsl
fbstp
filds
out
xchg
cmovbe
in
xor
loopne
inc
sbb
mov
lock
fiaddl
jg
pop
fld
mov
adc
add
adcb
leave
push
mov
and
jb
out
jge
and
fsts
and
jae
jmp
mov
out
inc
fwait
sub
fisttps
lds
cltd
mov
sahf
dec
out
push
jg
loope
xor
cwtl
sti
in
icebp
loope
mov
shrl
test
jno
jg
ret
xchg
test
or
xor
jg
fcompl
js
loopne
mov
ja
movsl
cmc
push
and
cmp
mov
pop
cmpsl
dec
or
pusha
or
add
dec
fsts
pop
call
jg
ss
mov
aas
jge
push
pop
aas
push
das
sub
cmpl
mov
push
cmpsl
lahf
jo
idiv
mov
pushf
pop
pop
cmpl
mov
not
into
or
jmp
pusha
loopne
into
xchg
inc
negl
aam
leave
ficomps
aas
jb
jg
cwtl
lret
js
mov
inc
pop
or
cmpsl
out
or
mov
insb
jge
inc
adc
movsl
cs
dec
cli
mov
mov
and
dec
rcr
cmp
ljmp
ret
ljmp
jp
mov
into
stc
or
or
ret
inc
in
int
adc
mov
pop
xchg
sub
popf
cmp
pop
dec
mov
mov
mov
and
push
mov
loop
sahf
mov
pop
jno
xor
mov
test
cmp
iret
cmp
test
je,pt
test
movhlps
popa
xchg
cli
ud0
jecxz
push
dec
push
lea
or
push
arpl
pop
bound
mov
add
inc
lret
sbb
fists
dec
leave
andb
pop
cltd
fcmovnb
mov
inc
push
addr16
fsubr
shrb
jo
scas
dec
xor
shrb
shll
inc
into
sub
xor
add
sub
cmpsl
push
idivl
xor
or
ljmp
addb
inc
jecxz
in
sbb
ret
dec
mov
inc
js
pop
add
and
outsl
and
and
push
mov
cmp
xchg
lret
mov
fdivs
sarb
cmp
ficoms
les
dec
mov
rorl
pop
push
add
loop
inc
xor
gs
imul
pop
cmpsb
xor
dec
adcb
inc
push
dec
dec
adc
inc
pop
adc
bswap
das
and
lea
adc
loopne
lahf
fildll
fcompl
enter
or
mov
pusha
xchg
ja
mov
iret
pop
mov
xor
insb
jge
sub
into
lea
arpl
insb
stos
mov
pop
xor
mov
out
xchg
lods
stos
sub
lds
mov
movsb
dec
jne
movsb
cmp
and
push
lret
adc
mov
fdivs
xchg
pop
mov
test
outsb
xchg
mov
xor
repnz
or
jb
into
inc
notb
sbb
fstpt
push
fdivp
lcall
sarb
mov
ret
sub
mov
mov
cmp
cli
test
hlt
mov
push
push
jo
in
cmp
pop
xor
jns
dec
push
adc
sbb
mov
addr16
sbb
hlt
aas
mov
pop
xchg
arpl
daa
lret
iret
mov
xchg
inc
and
aas
stc
enter
shll
je
xchg
pop
dec
sbb
adc
push
test
dec
xchg
aas
cltd
dec
push
push
in
cmp
fiadds
enter
pop
aam
idivb
ds
fldt
clc
imul
dec
movsb
aad
push
push
and
popf
popf
jl
repnz
push
not
jo,pn
lock
scas
xchg
xor
jl
jae
lods
adc
lahf
loope
push
adc
xchg
addb
cmp
sbbb
out
out
xlat
or
daa
jp
out
aam
call
mov
adc
mov
inc
xchg
add
pop
push
iret
ror
or
mov
adc
jle
xor
loop
out
dec
push
jno
mov
dec
cmovns
cmp
scas
mov
ficoml
lock
jnp
les
add
aad
xor
data16
ret
scas
inc
mulb
popf
sldt
pop
push
inc
fwait
pop
test
adc
faddl
or
jae
sub
out
in
pop
mov
push
jecxz
mov
inc
mov
pop
popa
or
jmp
out
sbb
leave
movb
xor
inc
cmp
outsl
add
add
cmpsb
roll
fldenv
sbb
aam
cmpsb
mov
movsb
jl
std
jns
jp
xchg
mov
xor
jp
popf
add
cs
ss
rcrb
fidivrs
call
jge
jl
cwtl
pop
pop
sub
ret
into
adcl
or
pop
inc
xor
lret
addr16
jl
sahf
shll
das
cs
std
xchg
imul
dec
test
inc
int3
jle
stc
lods
push
jnp
sub
xchg
pushf
push
les
in
adc
daa
int
insb
fimull
sarl
int3
add
aad
je
test
getsec
out
cmp
stc
xchg
xchg
fistpl
insl
pop
mov
cmpsl
xor
sahf
sbb
push
inc
lret
inc
out
cmp
gs
push
lcall
lret
push
insl
lods
and
lods
cwtl
adc
daa
and
clc
rcr
push
mov
lahf
pop
inc
add
inc
nopl
adc
push
sbb
in
rcr
std
hlt
cmc
outsl
lahf
cmovb
enter
inc
loope
stos
outsl
mov
sub
orl
imull
in
in
pop
ljmp
fcoms
mov
jnp
insb
loop
repz
outsl
fidivl
jmp
test
jb
cli
in
repnz
sub
mov
sub
out
jne
pushf
mov
cmp
lret
dec
push
push
mov
es
daa
ret
xchg
adc
fs
push
inc
mov
add
pop
out
daa
or
xor
mov
in
inc
jg
negl
add
test
jmp
dec
setns
rorb
mov
int
inc
cmp
jmp
jp
jge
test
xor
xchg
lret
lret
scas
js
xor
fmull
sub
dec
sbb
sub
lds
test
in
jecxz
dec
mov
scas
ljmp
dec
in
fcmovbe
and
stos
jecxz
xor
std
mov
in
jno
int3
jmp
mov
imul
jne
flds
out
fndisi(8087
add
fiaddl
int3
arpl
leave
gs
pop
in
test
sub
mov
cltd
push
outsl
insl
and
daa
pop
push
js
les
mov
inc
mov
add
sbb
inc
and
aam
and
imul
fdivrs
rcll
mov
scas
movsb
mov
and
add
sub
sub
mov
bound
and
cmp
addr16
jle
rclb
dec
adc
enter
lcall
enter
mov
lock
mov
test
test
sub
sub
ret
ret
cmp
fdiv
or
inc
data16
jns
nop
aam
es
jo
inc
jbe
mov
or
xchg
stc
nop
subb
pop
jnp
cmp
mov
jp
cmp
or
cmpsl
sub
sbb
push
ljmp
pop
mov
das
std
sub
divb
mul
jns
orl
sbbl
sbb
push
in
sbb
adcl
fcoms
xchg
lret
aas
xchg
js
pop
ja
imul
cmp
mov
pop
in
adc
mov
mov
push
mov
int
add
cmp
or
sbb
xorl
cmpsb
mov
cmp
enter
adc
aas
and
je
cmp
jle
std
jge
inc
cmpsl
icebp
decl
xor
insl
mov
and
xor
jg
inc
pop
fwait
int
xchg
dec
or
inc
xor
hlt
outsb
icebp
in
jb
jo
js
jecxz
xchg
cmpl
cmc
inc
out
push
test
cltd
into
push
sub
mov
sarb
mov
xchg
add
das
push
mov
nop
xor
in
hlt
add
mov
ret
loope
pop
inc
push
sub
and
aam
pop
icebp
mov
inc
loop
xor
in
xlat
out
out
stos
leave
jns
dec
xchg
sbb
inc
push
push
je
int
or
xchg
jmp
cmp
mov
data16
es
jmp
mov
push
mov
dec
enter
or
or
jle
dec
xor
mov
mov
cmp
fists
mov
dec
loope
jno
push
add
jmp
or
decl
dec
and
sbb
pmullw
mov
ja
inc
adc
repz
inc
je
cmp
dec
and
mov
jnp
gs
dec
xchg
pop
pop
dec
test
mov
test
imul
fcomps
add
loopne
sbb
or
lahf
mov
or
data16
lret
xchg
mov
xor
lods
in
in
mov
test
aad
idivl
outsl
outsb
adc
sub
jo
ss
cmp
sbb
mov
sub
out
pop
aas
xor
clc
bound
shll
sub
cmpsb
xchg
outsl
sbb
inc
xchg
loope
add
mov
pop
cmp
adc
adc
cmp
dec
adc
aas
add
lret
sbb
push
xor
pop
mov
lahf
xlat
roll
stos
ret
data16
popa
pusha
xchg
repnz
enter
jmp
cmpsl
mov
inc
lret
dec
cmp
out
or
fsub
push
les
stos
xor
xchg
jl
cmp
or
jle
mov
dec
shl
sbb
out
arpl
adc
xchg
dec
mov
insb
fwait
sbb
adc
mov
mov
jecxz
fisttpll
insb
mov
xor
stos
push
imul
pusha
push
jp
sbb
movsb
sub
loope
mov
inc
push
push
movsb
xchg
mov
jbe
push
scas
test
or
ljmp
xchg
iret
dec
into
or
mov
sub
sbb
sbb
push
jle
sbb
mov
or
mov
adc
lea
sub
xor
inc
shrl
pop
std
out
ljmp
fwait
enter
cltd
push
ret
data16
pop
negb
sbb
jb
adc
xchg
leave
fsubs
add
xchg
mov
add
adcb
mov
lds
call
or
testb
test
out
jne
aaa
scas
mov
push
push
in
jle
ret
adc
bound
addb
inc
dec
out
dec
push
jns
mov
push
data16
mov
sbb
inc
in
packuswb
inc
aas
int
inc
adc
xchg
mov
cltd
das
cmpsl
or
mov
add
mov
notl
sbb
out
dec
outsl
fdiv
mov
xlat
std
pop
add
ljmp
es
xchg
popf
adc
ja
mov
inc
fcomip
in
out
xchg
mov
int3
je
std
enter
sbb
ret
add
clc
cmp
fmul
push
fcompl
pop
stc
cmp
adc
movsl
dec
pop
push
cmp
test
dec
aaa
inc
cmp
stc
lret
xor
dec
mov
ljmp
test
add
mov
and
adcl
enter
fimuls
inc
mov
xor
mov
insb
loopne
pop
jmp
pusha
ljmp
cmp
or
or
xchg
callw
mov
and
nop
cmp
and
fistps
xor
jle
jae
cld
pushf
cld
mov
lock
lock
in
lock
arpl
mov
out
sub
pop
mov
repnz
inc
imul
cld
cmp
movsb
mov
push
mov
test
test
cltd
sbb
arpl
push
and
sbb
into
fwait
sub
jbe
push
loop
xor
pop
push
cmpsl
fiadds
mov
testb
push
cmpb
xor
adc
inc
mov
xor
addl
ret
bound
cltd
mov
ret
and
sbb
push
push
leave
cmp
cli
rcl
and
xor
add
mov
lret
enter
sub
add
cmc
orl
notb
ret
fmull
cmp
sbb
aam
in
scas
or
lods
jae
mov
dec
lds
push
aas
add
xchg
jae
test
fcomp
ficompl
outsl
xlat
push
pop
dec
inc
mov
jge
ljmp
mov
loope
sub
out
cmp
xchg
lea
pop
jnp
xchg
fcmovnb
subb
sahf
ficomps
clc
das
test
iret
iret
jb
fwait
jecxz
adc
test
pop
xchg
xchg
and
into
fwait
stc
or
push
jmp
inc
cmp
add
fnstsw
iret
xorb
fadds
in
xor
loop
push
sti
cmpsl
add
mov
adc
out
push
sti
mov
pop
arpl
je
xchg
ja
out
ret
push
sbb
shrl
jnp
lret
cs
shll
and
and
scas
and
les
push
add
fdivrl
test
fidivs
pop
int3
jb
xor
enter
loopne
sar
popf
inc
or
imul
cli
jbe
hlt
jle
ljmp
test
cld
xchg
mov
mov
insb
jae
xor
cltd
pinsrw
lcall
pop
sbb
mov
adc
push
std
jg
push
and
repnz
or
adcb
adc
xchg
clc
lock
push
fucomp
inc
call
ret
out
das
xor
stos
repnz
push
arpl
icebp
out
test
sub
xchg
push
inc
xor
sub
jae
mov
add
jge
fwait
mov
pop
jmp
stc
pop
arpl
mov
mov
sub
sub
jmp
or
xlat
mov
ds
pop
loope
jo
ja,pn
or
mov
dec
xor
test
stc
mov
faddl
xor
xor
xor
mov
xchg
scas
adc
or
add
lahf
and
add
push
adc
stos
sub
mov
lret
aas
fcmovu
lret
scas
mov
loope
divb
sub
loope
out
or
mov
iret
loopne
or
repz
js
out
repz
push
incb
sbb
sub
sub
push
flds
pop
cmp
movsl
jle
sti
nop
inc
xchg
filds
cmpsl
push
lds
sub
pop
lds
cmp
jo
or
or
xchg
sub
out
push
pop
sub
add
inc
jmp
int3
add
icebp
sub
call
int
pop
jecxz
je
ror
in
test
sbb
lea
es
pushf
les
scas
xchg
or
xchg
xchg
int3
inc
enter
mov
aam
out
je
add
adc
mov
xor
xor
cmp
aad
add
dec
jge
xchg
lcall
outsl
mov
add
add
add
inc
pop
mov
mov
mov
inc
add
stos
or
pop
mov
dec
add
adc
repz
popa
out
inc
push
sbbb
stos
dec
pop
mov
ret
rorb
cmpsb
add
scas
rcl
mov
lock
sub
mov
pop
pop
arpl
call
pop
cmpsl
cmp
mov
outsb
mov
and
cmpsb
popf
fdivrl
mov
mov
mov
aad
ja
repnz
loope
or
jbe
jno
push
sub
inc
jge
push
mov
sti
sub
rol
ffree
hlt
bnd
cmc
adc
mov
lds
sbb
mov
cli
xchg
and
add
aaa
test
xor
dec
dec
or
mov
push
fwait
mov
int3
xchg
jecxz
fst
inc
hlt
sub
mov
lods
cmpsl
stc
adc
xchg
mov
mov
pop
dec
mov
push
mov
and
std
inc
inc
loopne
test
xlat
mov
inc
push
shlb
dec
jp
jle
aam
clc
xchg
ja
add
add
es
cmp
xchg
pushf
lcall
mov
sub
out
mov
cld
mov
xor
fwait
imul
or
shrb
and
sub
in
cmp
sub
mov
and
xchg
icebp
add
bound
or
orl
mov
mov
inc
clc
lret
mov
sub
in
sub
subb
pushf
les
out
fbld
inc
fcmovnb
stos
add
je
fildl
lock
and
rorl
inc
das
leave
lret
cli
leave
or
push
sbb
test
shll
sub
mov
fcompl
insb
jg
push
ja
movsb
and
add
test
out
inc
mov
ja
lds
and
ret
mov
xchg
arpl
xor
jnp
add
dec
push
mov
push
mov
scas
jl
jle
lods
gs
inc
rclb
cli
dec
sarl
dec
clc
pop
or
iret
add
les
imul
inc
pop
aam
loopne
push
adc
xor
das
movsl
icebp
rcl
lods
dec
xor
sub
lock
jo
and
not
xchg
lods
mov
dec
dec
iret
js
cmp
adc
addr16
mov
hlt
test
popa
fisttps
mov
xor
push
lods
jns
fidivl
add
mov
rolb
xor
inc
cmp
clc
inc
push
cmp
loope
sbb
jmp
repz
cmp
popa
jnp
in
xchg
xor
js
shlb
xor
mov
stos
shlb
shll
stos
aas
lea
xchg
out
shll
lahf
and
jecxz
push
ret
sti
and
lret
add
stos
adc
notb
dec
leave
int
mov
andl
aam
fwait
movsl
aad
mov
pop
movsb
divb
fcmovnbe
fwait
mov
js
ficoml
pop
inc
in
ficompl
in
jl
clc
mov
jb
sbb
cs
pop
aaa
push
fs
pop
push
pusha
pop
iret
sub
fldl
cld
xsavec
jns
inc
cli
mov
jae
out
aaa
addb
jle
jno
lock
fucomip
sub
jns
leave
sbb
pop
cli
jle
mov
pop
lods
push
fdiv
add
xor
sahf
aam
xor
dec
pop
ret
inc
lret
jnp
jle
loope
and
xor
test
xchg
rcll
repnz
xchg
push
fprem1
loopne
and
lds
faddp
je
stos
dec
ss
sub
sub
addr16
xor
insl
imul
jo
enter
mov
mov
and
test
cwtl
movsb
sbb
push
jne
push
sbb
mov
aas
jo
inc
sahf
sbb
leave
jmp
iret
imul
daa
pop
outsb
pop
rcl
inc
cld
popf
xchg
xorb
out
movsb
cmpsl
mov
int3
xor
xor
pop
sub
and
cmp
mov
sbb
mov
pop
out
or
cld
jle
jno
push
cmpl
ljmp
fimuls
sbb
es
dec
mov
arpl
shl
adc
lret
add
adc
lods
into
sahf
mov
int3
inc
xor
sbb
inc
sbb
sub
int3
push
or
sbb
xchg
add
ds
je
dec
cmpsb
xor
mov
cld
or
jne
arpl
jns
jo
mov
sti
xor
mov
sbb
cmp
std
sbb
aas
adc
clc
imul
leave
ss
or
fdivp
pop
mov
ds
push
or
aaa
sbb
in
iret
push
pop
sbb
inc
jns
jp
mov
cmp
pop
ret
scas
std
out
icebp
cmp
loopne
sub
jo
or
xchg
in
xchg
sahf
popa
inc
lods
shll
push
cld
imull
push
dec
mov
mov
push
rcrl
loope
xchg
or
sahf
or
outsb
mov
cmpb
gs
sbb
fmulp
sub
sub
or
pop
adc
insb
add
aaa
aam
push
negl
dec
test
fstpl
shll
add
sbb
addb
dec
ficoml
loope
adc
xchg
lret
jmp
hlt
test
jl
fsts
js
bound
movsb
fisttps
popf
dec
xor
mov
mov
std
mov
pop
ja
sahf
es
cltd
or
loopne
cmp
mov
ds
out
xlat
xchg
pop
and
fidivl
xor
jb
jp
lods
leave
clc
loopne
push
aam
push
test
nop
jbe
lea
push
clc
out
lods
sbb
in
in
add
jl
and
add
sahf
ret
andl
notb
xchg
jle
sti
scas
or
js
pop
and
clc
cld
leave
dec
cltd
adc
das
cltd
push
mov
inc
xor
ficomps
mov
jl
movsl
jle
lock
mov
cmpsl
gs
cltd
lock
pop
add
lret
in
arpl
jo
cltd
pop
add
pop
out
xor
push
arpl
cmp
push
enter
pop
cmpl
jmp
scas
bound
sti
shlb
cmc
xlat
lahf
lods
pushf
aas
and
aam
sarb
jbe
and
and
or
ljmp
pop
jecxz
ret
jb
adc
mov
mov
xchg
dec
mov
cmc
cmpb
mov
repnz
mov
push
call
and
ret
pop
inc
ljmp
in
and
mov
cmp
mov
adc
jae
cmp
and
adc
test
int3
jbe
iret
movsb
test
gs
lret
pop
cmpsl
mov
jb
or
add
jo
stc
and
xor
jo
xchg
pop
in
addr16
dec
jmp
sbb
push
mov
pop
xor
inc
push
mov
xchg
pop
sbb
outsl
cmp
cmp
add
mov
jb
xchg
sbb
movsl
push
movsb
cmp
xlat
fmulp
push
cmp
push
imul
pop
shll
aaa
out
rol
aas
cwtl
sbb
fcomps
mov
lods
lea
out
shll
movsb
cmp
xorb
out
or
ljmp
sub
adcb
inc
sub
push
test
aam
push
movsb
icebp
sbb
flds
pop
sub
push
sub
xor
into
xchg
aam
jnp
int
lds
lret
in
push
cld
lret
mov
std
push
in
xchg
add
dec
arpl
in
xchg
shr
sbb
add
call
outsb
adc
ret
and
sub
mov
or
cmp
fcmovu
or
pop
xor
pop
lret
std
cltd
sahf
mov
mov
cmpb
mov
lds
repz
sbb
inc
cs
in
es
xor
pop
out
mov
sub
lods
enter
fistps
in
xchg
xchg
int
mov
jp
push
idivl
shl
out
aad
mov
nop
jne
fnstsw
cmp
push
lret
and
data16
test
add
jmp
test
in
fsubl
in
jge
loopne
adc
dec
sub
repnz
cltd
pop
je
pop
mov
inc
sub
daa
mov
out
or
jnp
cld
dec
jno
arpl
cmp
push
mov
xchg
icebp
test
dec
push
test
and
loope
jnp
and
cmpxchg
test
jl
inc
jmp
dec
idivl
or
xlat
inc
mov
hlt
jae
xor
sbb
sub
loop
out
loopne
add
inc
or
xor
dec
adc
jbe
fldt
sbb
push
adc
mov
mov
data16
fs
test
or
mov
loopne
insb
xchg
icebp
push
lods
jns
push
popf
jno
sbb
mov
andb
iret
sarb
test
sub
and
subl
rol
dec
out
scas
loopne
enter
xor
xor
ljmp
mov
cltd
mov
hlt
jbe
push
test
inc
ss
je
mov
sahf
aam
pop
stc
mov
outsl
push
mov
cmc
sahf
mov
andb
jnp
orl
and
andl
mov
mov
loope
cmp
xlat
repnz
mov
cli
mov
jb
mov
push
push
insb
mov
push
push
jo
scas
mov
xchg
jns
inc
xchg
inc
pop
dec
lret
enter
cld
mov
and
out
pop
addr16
test
sbb
ljmp
addb
dec
mov
aaa
repz
inc
ret
pop
jae
fdiv
and
xor
pop
lds
icebp
jp
jae
je
push
into
pop
cmp
int
dec
lcall
call
xchg
xchg
cmp
pop
mov
ficoms
pop
rorb
inc
xor
mov
dec
addr16
out
sub
xchg
jl
or
aas
cmp
cwtl
and
adc
fldenv
push
lds
cmp
ss
adc
inc
inc
mov
mov
clc
loope
lcall
dec
cltd
jl
pop
mov
jp
mov
push
inc
adc
in
sahf
mov
lods
sbb
sbb
leave
fsts
xchg
jns
mov
bound
sub
mov
add
nop
aas
das
sbb
fsubs
pop
mov
lret
cmc
push
fcmovu
mov
out
dec
xor
lods
push
mov
xchg
pop
adc
or
pop
cltd
pop
xchg
push
loop,pt
jne
mov
and
jmp
push
adc
add
scas
pop
icebp
and
std
mov
insb
pop
stos
ss
cmp
or
sbb
jmp
test
int3
jno
faddl
push
pop
ds
fidivs
jle
and
ret
mov
pop
cmp
sub
cmp
in
xchg
add
out
jp
cmp
insl
push
and
push
push
xor
enter
rol
sub
pop
jle
into
or
test
aaa
pop
aam
arpl
xor
jae
in
mov
int
xlat
fldt
jbe
xor
pushf
sbb
sbb
imul
test
clc
mov
mov
xchg
lret
xchg
insb
loopne
sub
out
xchg
or
xor
out
int3
push
lcall
xchg
in
scas
cmp
jns
and
mov
pop
bound
cmp
mov
mov
mov
mov
push
mov
sbb
mov
push
incl
push
jno
enter
inc
push
divb
dec
mov
jnp
dec
or
pop
dec
add
arpl
sbb
xchg
cld
fsub
stc
or
jb
test
sub
mov
or
mov
sub
or
or
mov
test
loopne
xor
lret
mov
aam
xchg
sbb
test
icebp
cmp
cmpsb
nop
xor
mov
lods
push
subb
into
js
push
push
lret
in
mov
daa
cld
in
push
arpl
mov
mov
mov
ljmp
lds
mov
fistpl
mov
sbb
out
test
insl
rcrb
add
inc
js
mov
je
mov
mov
pop
inc
mov
cld
aad
cmp
shlb
stos
push
add
mov
jno
mov
or
cmp
pusha
adc
jg
jmp
out
outsl
popf
imul
popf
sbb
es
data16
mov
xchg
mov
leave
jle
fidivrs
add
rclb
dec
loop
adc
lods
mov
nop
shr
loop
das
pop
pop
jg
mulb
rcll
fidivl
pop
into
aam
mov
in
add
imul
jbe
push
sub
cmc
mov
int3
mov
adc
aad
sti
test
mov
and
lret
dec
mov
mov
jle
or
les
or
lds
or
add
jecxz
push
ds
pop
add
mov
push
into
rolb
mov
decl
sbb
adc
adc
inc
std
bnd
push
rcl
cmpsl
repz
call
xchg
movsl
and
jg
mov
xchg
sub
je
cmp
jne
adc
mov
add
lret
scas
cmpsb
add
bound
mov
ss
sbb
add
xor
or
sub
mov
mov
lods
sbb
xor
pushf
ds
cmc
loop
and
dec
fdivp
pop
jae
aam
std
jecxz
jae
mov
add
fdivrl
imull
cmc
mov
jnp
xchg
outsl
adc
fxch
sub
addr16
in
jmp
mov
or
mov
dec
lahf
into
cmp
add
mov
out
mov
mov
ds
out
nop
sbb
inc
inc
jbe
mov
cld
dec
mov
sti
nop
ds
mov
xchg
sbb
cmp
outsl
adc
push
cmpb
ds
mov
loopne
imul
mov
or
shlb
hlt
xor
push
or
mov
aad
stc
jae
xchg
scas
jge
std
sbb
daa
mov
gs
mov
mov
movl
arpl
mov
rcrb
scas
scas
xlat
and
lret
jecxz
mov
sub
fistpl
es
fisubrs
lcall
add
mov
jo
and
cmp
loope
adc
jnp
xchg
xchg
sahf
cwtl
mov
gs
scas
xchg
enter
jne
pop
mov
sbb
xor
repnz
fbld
into
insb
add
clc
inc
dec
addb
lock
mull
inc
push
and
loope
imul
in
sti
shll
or
xor
adc
or
sbb
loopne
dec
push
pop
or
push
mov
shll
add
orb
out
sbb
pop
add
adc
je
mov
sbb
push
movaps
ret
popa
movsb
push
fnsave
loop
mov
jo
adc
fdivs
sbb
xchg
test
outsb
inc
leave
jle
adc
or
das
push
cli
jb
je
arpl
jp
mov
ffree
testl
sub
sbb
jne
push
lods
adc
fiadds
adc
in
bound
bound
gs
stc
dec
adc
rcll
push
inc
xor
jmp
mov
adc
test
and
jns
aam
mov
test
ds
push
into
rolb
cmp
icebp
push
or
ret
cs
inc
pop
icebp
out
scas
icebp
sbb
aaa
adc
pop
pusha
mov
push
xchg
imul
cs
pusha
mov
pop
or
inc
ret
mov
stos
and
add
cltd
pop
xchg
aad
aad
dec
sub
mov
addr16
and
leave
sub
or
fisubl
aas
int
adc
adc
imul
mov
pusha
in
mov
out
mov
sbb
jne
pop
mov
xor
mov
aam
dec
insl
pusha
and
xchg
mov
xlat
push
ret
in
sbb
repz
cmp
mov
sbb
push
enter
cmpsl
sahf
sub
mov
scas
stos
lds
mov
rorb
into
push
scas
test
pop
lods
cltd
mov
rorb
cmpsl
xchg
push
jge
mov
sub
popa
xor
icebp
lock
orb
mov
sub
int3
pop
outsl
outsb
mov
test
rcll
call
mov
mov
shrb
add
jae
sbb
das
cld
mov
arpl
mov
clc
push
fiadds
movlps
add
jnp
imul
inc
cwtl
clc
jnp
stos
push
cmpsb
out
mov
imul
cmp
insl
xor
aas
in
pop
roll
jle
push
push
lret
in
bound
pop
incl
pop
imul
popf
test
mov
dec
jne
pusha
popa
and
sub
jo
insb
jns
imul
imul
in
out
test
aad
rcll
or
xchg
or
enter
adc
push
int3
imul
mov
ret
cmpsl
lcall
pop
sahf
jecxz
mov
bound
xchg
mov
add
mov
pop
in
cltd
mov
inc
xchg
pop
sbb
cmp
sub
mov
ret
pop
nop
filds
xchg
inc
xchg
insl
push
add
jge
xchg
es
in
mov
ss
add
add
pop
mov
nop
mov
push
cld
xchg
pop
test
sbb
and
aas
sub
or
icebp
cmpsl
jmp
xchg
bound
pop
ljmp
sti
bound
sbb
cmpsb
cmpsl
rcl
and
jecxz
jmp
push
fdivr
adc
mov
out
es
cwtl
jb
cmpsl
movb
sti
adc
jnp
aas
gs
push
addl
inc
pop
bound
or
sahf
push
adc
mov
xchg
and
lret
mov
lods
mov
fstl
mov
std
fistpll
test
mov
cmp
mov
push
bound
std
fdivr
jb
xchg
inc
repz
insl
sbb
mov
mov
push
cs
xchg
js
dec
mov
loop
in
test
adc
inc
fisubl
sub
jne
mov
shll
pop
into
rcl
jg
mov
push
and
lret
fildll
insb
scas
inc
loope
pop
and
pop
xchg
pop
pop
mov
jle
loopne
fwait
mov
jmp
out
push
pop
rorb
stos
or
std
or
push
out
sahf
mov
jecxz
jle
adc
push
sbb
xlat
pusha
in
sub
jae
rolb
test
mov
push
push
add
push
adc
pop
ret
sti
adcb
jp
lods
jns
in
js
enter
cmp
cmpsl
sarb
mov
mov
inc
fwait
in
pop
out
add
ja
sti
scas
test
dec
fists
clc
loop
mov
push
out
jo
subl
rol
pop
xor
in
cmp
leave
cwtl
sub
adc
popf
dec
in
insb
or
inc
mov
inc
pop
push
add
ss
pop
adc
orb
imull
xor
shlb
push
add
pop
pop
aas
imul
sub
je
test
add
xchg
mov
dec
mov
popf
mov
jnp
sbb
aas
inc
outsl
jne
jge
out
xchg
ficoml
out
sarl
sub
pop
mov
mov
mov
dec
lods
jmp
enter
dec
rcrl
aas
lcall
clc
test
jne
fdivl
imul
in
js
lea
lock
dec
popf
xor
gs
loope
mov
loopne
lods
fdivl
test
fnstsw
sbb
xchg
mov
sub
sub
or
out
add
fmull
ret
push
and
icebp
jge
pop
lods
push
push
pushf
sub
arpl
aam
or
push
xchg
and
icebp
mov
adc
aad
jp
jp
cld
in
shrb
outsl
aam
int
pop
dec
sar
clc
sbb
adc
cmpsl
add
pop
mov
sarl
mov
insl
ud0
cmpl
pop
testl
pop
mov
arpl
cmc
imul
int
es
mov
xor
loopne
mov
insb
lods
popa
movsb
sbb
enter
aam
or
push
repnz
mov
inc
subb
inc
jnp
cmp
jg
lahf
ss
pop
push
cld
cmp
jmp
or
xor
loopne
cld
stc
mov
jno
cli
push
sarl
mov
nop
mov
sub
or
or
jae
or
xchg
or
sti
incb
in
xchg
sbb
pushf
arpl
stos
jo
rorb
dec
ljmp
cs
inc
dec
bound
cld
push
test
xor
mov
sbb
cmp
mov
sbb
xor
xor
inc
daa
inc
add
mov
mov
sub
cmc
int
fldt
cwtl
xchg
lods
and
mov
mul
fcoms
lahf
pushf
sbb
mov
out
jp
sbb
and
jnp
sub
dec
insb
xchg
imul
icebp
and
mov
loopne
adc
and
or
inc
out
pop
nop
push
in
xor
lret
addr16
add
cmp
xor
xchg
xchg
sbb
je
popa
test
insl
dec
add
sbb
out
and
pop
insb
rclb
clc
xchg
stos
movsl
lahf
iret
xchg
inc
test
pop
cmp
outsl
inc
xorl
pushf
aam
add
or
cld
repnz
mov
xchg
add
jg
push
and
je
sub
loopne
jns
ljmp
out
sahf
dec
xlat
xlat
xchg
sarl
jl
mov
or
cmp
insl
sub
xchg
inc
mov
push
push
xlat
jp
cmp
fwait
cld
mov
sub
dec
cmpsb
and
jecxz
pop
in
push
mov
lret
pop
sti
fwait
inc
sbbb
sti
xor
fisttpll
push
lret
adc
addb
lds
out
mov
ds
fildl
and
mov
testb
mov
xchg
imul
inc
repnz
mov
cmp
out
and
pop
xchg
out
nop
pushf
adc
popa
sub
sti
out
push
xlat
orl
jo
stos
push
jb
adc
stos
sbb
xlat
mov
int
sbb
xchg
xor
fadds
cli
lahf
pop
and
std
sbb
sbb
icebp
in
in
shrl
xorl
lds
repz
fwait
pop
scas
loop
push
jl
aam
xchg
jmp
jl
ret
add
insl
lock
push
add
jp
dec
xchg
pop
fmuls
nop
popf
scas
mov
dec
push
out
lahf
push
clc
cmp
pop
gs
mov
insl
out
call
cs
mov
arpl
scas
pusha
sub
inc
arpl
loop
pop
xchg
cli
add
cmc
inc
mov
popf
mov
cmc
xchg
ja
and
loopne
cmc
xor
mov
aad
lahf
or
push
rorb
lahf
xchg
shlb
xchg
or
and
xchg
mov
push
sub
repz
adc
dec
pop
jmp
aam
add
push
inc
fcmovu
xlat
insl
pop
gs
add
xchg
add
loop
lods
pop
stos
imul
jle
bound
push
and
push
fwait
lods
das
xor
cld
xor
sbb
bound
data16
fdivrl
pop
loopne
sbb
xchg
push
xchg
pop
pop
daa
insl
mov
pop
sub
int3
cmp
xchg
out
mov
movsl
bound
or
xchg
sbb
push
mov
push
jne
loopne
fdivp
adc
adcb
fnstsw
dec
jg
es
daa
adc
jp
lods
xor
subl
or
test
mov
jl
xchg
test
loope
iret
inc
mov
sub
cmc
and
pop
jnp
jecxz
popf
std
mov
mov
test
repz
arpl
clc
jno
nop
dec
push
mov
and
adc
mov
pop
sarb
xor
push
inc
mov
jmp
push
vfrczss
sbb
xchg
pop
adc
jnp
and
shll
es
aaa
jmp
ds
loope
fisubrl
push
out
dec
xchg
testb
lock
push
cs
jo
imul
jecxz
daa
mov
movsl
xor
pop
test
jns
stos
inc
pusha
push
push
pop
mov
mov
ds
mov
lret
lret
cmpsl
lods
call
sarl
flds
test
ja
test
pop
cmc
cmc
mov
xchg
loope
into
daa
mov
inc
inc
xchg
xor
cli
jns
cmp
mov
xchg
sarb
call
in
xor
mov
jb
lds
mov
out
push
data16
popf
lods
add
xchg
lock
xorl
pop
cmpsb
imul
enter
movsb
popfw
ljmp
andl
rclb
pop
lahf
jne
loop
dec
mov
jle
push
mov
cmp
int
fmul
fildll
int
pop
roll
gs
xchg
lds
mov
lret
ficompl
and
pop
jno
aam
clc
inc
pop
ljmp
or
push
ficompl
sarb
sub
fs
cltd
jmp
scas
js
sbb
xchg
inc
jno
jo
fmuls
mov
sbbb
dec
add
in
dec
out
pause
cmp
adc
insl
xorb
mov
fists
dec
sub
out
cmpsl
mov
sbb
cmp
out
inc
adc
imul
sbb
xor
pop
inc
scas
dec
push
sahf
cmp
jne
imul
sub
movsb
incb
pop
outsl
out
in
stos
sub
or
and
stos
in
xor
in
jmp
shlb
pop
or
sub
test
inc
scas
xor
or
cmp
rcrb
imul
aas
and
inc
sbb
mov
test
idiv
mov
scas
or
jl
cmp
pop
pop
orb
adc
or
fs
mov
out
sbb
or
push
add
xor
or
add
cld
push
mov
movsb
jle
xchg
repnz
loop
mov
push
jp
jmp
out
push
fildl
jp
notl
mov
aam
xlat
inc
xchg
jae
int
xor
xor
mov
in
enter
mov
out
aad
ljmp
inc
flds
out
or
jnp
jb
inc
test
ret
push
xor
jne
inc
push
imul
loope
xorb
and
in
jge
jb
inc
jno
add
nop
inc
xchg
inc
stc
or
imul
xor
imul
in
ret
cmp
inc
adc
xchg
jmp
xchg
lds
push
mov
icebp
adc
stc
std
or
mov
nop
call
je
fistl
jbe
push
es
addr16
bound
xor
mov
cmp
call
in
rorb
mov
and
mov
push
daa
stos
jnp
in
add
fsubs
mov
add
repz
ret
mov
lret
or
mov
mov
nop
or
adc
sti
or
ss
clc
lock
pushf
cmp
mov
ret
out
sub
lcall
test
cmp
xchg
add
stos
mov
push
inc
lock
cmp
mov
xchg
std
xor
xchg
xchg
int3
jecxz
adc
and
mov
lret
mull
shrb
push
test
pop
dec
cmp
xchg
in
fimull
rcrl
sub
lret
xchg
loopne
xchg
xorl
test
xor
adc
and
enter
jp
mov
jecxz
or
fwait
xor
mov
call
icebp
pop
mov
adc
adc
jmp
orl
mov
arpl
fs
pop
sti
mov
inc
mov
inc
pop
fsubrl
xlat
pop
mov
ss
push
aad
fcomip
test
sahf
rcll
cmpsb
mov
scas
mov
and
xor
popf
mul
push
jnp
pop
cmpsb
data16
sti
pop
insl
xchg
repz
add
clc
mov
xchg
mov
adc
das
push
popa
les
shl
js
xor
inc
push
push
fbstp
or
push
jmp
mov
fsubrl
in
inc
mull
xchg
cmc
adc
inc
fisubl
in
rolb
je
cmpsb
pop
xlat
imul
dec
fisttpl
jno
dec
xor
ret
push
sbb
cmc
insb
mov
jp
jg
repz
pop
xchg
cli
es
jecxz
cltd
ret
and
jno
xor
jo
add
mov
imul
mov
cwtl
and
xor
cmp
shrl
pop
decl
mov
inc
adc
add
sub
loop
loop
xchg
mov
mov
popf
cmc
es
cmp
mov
jbe
add
fsubrl
mov
icebp
xor
out
push
shl
mulb
in
fidivrl
idiv
fsubs
rolb
sbb
stc
cli
pop
sub
mov
sbb
lret
pop
clc
fimull
cmp
bnd
dec
call
sahf
movsl
mov
enter
cltd
movsl
inc
sub
mov
push
into
stos
pop
rcrl
ljmp
xchg
rcrl
jns
lea
mov
add
lret
dec
imul
inc
mov
mov
xchg
repnz
bound
test
lcall
adc
or
lock
pusha
adc
ds
adc
setne
cmp
shl
sbb
int3
push
push
push
shlb
out
cmp
mov
mov
inc
push
js
push
into
cli
popl
xchg
aam
clc
mov
mov
cwtl
nop
out
jle
inc
xor
dec
mov
iret
inc
or
inc
lock
cmpsl
adc
cwtl
outsl
movl
pushf
sub
jns
inc
mov
or
in
xchg
stos
sub
aas
rolb
js
xchg
mov
cmp
lahf
fbstp
xor
push
dec
rcrb
lahf
stc
in
sbb
stc
and
xchg
mov
jo
rcrb
adcb
jae
jmp
insb
loop
out
cltd
popa
mov
jg
sub
aam
adc
pop
ljmp
inc
pop
sarb
rcll
xchg
push
add
imul
lcall
and
push
mov
inc
adc
xor
in
inc
sbb
mov
mov
movsb
xor
out
mov
les
jne
js
push
lahf
cmp
sub
sbb
sub
sti
pop
negl
lcall
insl
addr16
scas
jo
mov
fisubs
shrb
adc
cmp
insl
push
jmp
sbb
stos
adc
dec
pop
inc
pop
sbb
icebp
mov
inc
sub
mov
add
add
and
inc
fimull
es
push
loope
vminss
cld
push
or
cmp
xchg
adc
mov
xor
push
in
sub
xor
sbb
xor
sub
lret
in
sub
cmp
xchg
cwtl
dec
xor
add
fistl
sub
out
into
sti
sahf
push
inc
lds
mov
shll
or
fs
sub
xorb
lret
aaa
dec
lods
pop
js
dec
sahf
fsubl
mov
xor
jg
sbb
out
lods
jmp
push
fdivp
sbbb
mov
pop
pop
ja
pushl
or
aad
and
in
lea
jmp
xchg
aas
mov
pop
push
cmp
pop
add
out
nop
pushf
and
dec
cld
cli
add
add
mov
jns
and
lret
inc
cmc
or
fnstcw
subb
out
nop
cmp
sbb
push
stc
mov
cmp
popf
and
ss
sbb
in
jp
add
push
sbb
xlat
push
and
sub
xchg
jmp
clc
jno
mov
mov
adc
xchg
add
lret
mov
mov
adc
sub
fwait
push
inc
inc
in
test
and
mov
pop
in
clc
pushl
outsb
gs
in
fucomi
mov
js
xchg
es
push
pop
jno
or
and
add
icebp
inc
gs
add
pop
clc
or
aaa
fisttps
jo
mov
jo
imul
push
pop
lret
push
adc
xor
shrb
mov
mov
push
push
xchg
adc
xor
xchg
in
mov
cmp
sbb
in
sub
imul
dec
inc
jecxz
or
pop
dec
xor
jge
lods
xor
inc
push
pop
inc
and
mov
dec
adc
xor
out
sub
pop
xlat
xor
and
sbb
popf
out
add
shlb
lret
push
pop
adc
pop
push
add
dec
add
int3
inc
push
sbb
int
dec
dec
mov
push
mov
xor
popf
cmp
popf
xor
lcall
iret
mov
mov
adc
subb
movsb
or
sub
pop
xchg
xchg
add
push
push
out
push
mov
or
xchg
push
insl
jo
xchg
pop
std
mov
mul
ret
add
cmp
fsubl
cmp
or
push
nop
adc
rcll
pop
dec
lea
add
jbe
jo
cmp
or
loop
imul
shr
mov
or
jo
ret
repz
push
cli
test
mov
mov
sarb
popl
jmp
dec
jnp
clc
push
adc
pop
jmp
mov
mov
ja
jns
add
push
add
and
pop
mov
fadds
scas
jp
fwait
add
pushf
enter
add
jg
cmc
cs
jle
loopne
scas
aam
jne
sbb
dec
insl
fiadds
jae
push
insl
mov
mov
sti
pushf
lret
cmp
cmp
insb
loope
pop
fwait
cmpsl
push
inc
jo
bnd
push
mov
iret
fistpll
mov
mov
int
sahf
or
push
inc
fcomps
push
lahf
std
pop
jecxz
out
jmp
pusha
inc
sbb
repz
lahf
push
out
incb
sub
mov
add
ljmp
js
sub
push
in
mov
xchg
add
push
in
lcall
adc
cld
push
sbb
ficoms
sub
lret
push
pop
jnp
call
xorl
sub
cmp
stos
outsb
mov
cmp
into
mov
in
jl
mov
shrb
add
addl
test
mov
lods
cmp
pop
or
xor
ror
lahf
xor
dec
fidivs
dec
sub
pusha
cmc
mov
cs
enter
jns
shll
out
imul
mov
jg
jns
jl
fdivrp
mov
repz
mov
pop
adc
xchg
push
fisttpl
mov
cmp
xor
pusha
mov
lods
lds
xchg
mov
add
or
inc
fwait
sbb
mov
mov
or
shr
sbb
enter
push
jg
and
dec
fstl
push
out
and
mov
ret
push
mov
rol
push
lock
stc
aas
dec
xor
imul
add
inc
hlt
cmc
mov
dec
sub
subb
mov
test
int3
adc
sarl
nop
mov
loopne
lcall
jnp
ficomps
sub
jne
adc
add
adc
add
and
dec
or
rorb
test
cs
lods
adc
fstpt
xorb
out
mov
ret
mov
aaa
add
rcrl
in
and
arpl
dec
enter
and
loopne
pop
jecxz
insl
mov
mov
gs
xor
cwtl
lcall
jnp
out
sbb
push
xor
andb
sbb
test
sti
cmpsb
push
data16
sbb
push
inc
sub
pop
xor
mov
arpl
aam
test
movsw
ja
gs
mov
and
test
xchg
cmp
adc
flds
jg
add
or
push
test
cltd
dec
fwait
leave
iret
mov
les
stos
idivb
xchg
ljmp
prefetch
pop
cmpsl
cmpl
test
jns
imul
mov
mov
lods
adc
add
and
adc
dec
fwait
imul
xchg
xchg
jb
xor
gs
loop
out
and
insl
les
adc
xor
clc
arpl
dec
push
inc
sub
fmuls
mov
push
mov
test
pop
inc
stos
fnstsw
dec
dec
ss
das
and
popf
mov
in
mov
js
adc
out
int
out
test
icebp
in
inc
movsb
pop
inc
pushf
arpl
jo
ljmp
inc
sbb
stc
cmpsb
enter
clc
arpl
les
lods
jp
sbb
and
xchg
lahf
clc
iret
subl
decl
sub
pop
outsl
sub
mov
shlb
inc
aad
cmp
jno
push
cmp
adc
push
sbb
xchg
xorb
xchg
push
punpckhwd
popa
rol
push
ret
push
rcrl
mov
cmp
sub
loop
int
jo
sub
add
dec
outsl
push
outsb
push
imul
pop
jnp
sub
cmc
jmp
cs
insl
negb
outsl
test
xor
rcl
adc
fmulp
es
call
ret
fnstsw
mov
cmpsl
test
imul
sti
mov
das
jg
jmp
or
mov
shlb
hlt
mov
mov
aaa
adc
in
orb
nop
mov
ficoml
aas
sub
adc
add
movsb
xchg
aad
cmp
adcb
sahf
shlb
stos
mov
inc
fadds
setb
xor
xchg
cmpb
mov
lea
addr16
sbbl
push
js
xlat
enter
sahf
les
sbb
daa
jns
dec
push
test
cmpsb
andb
jae
sbb
daa
sbb
or
punpcklwd
fimuls
push
pop
mov
pushf
rorl
xchg
xlat
cmpsl
roll
adc
cmp
mov
mov
arpl
or
fdivrs
pop
dec
and
inc
aas
ja
jmp
iret
pop
xchg
push
sub
repz
leave
dec
in
ja
xchg
or
jg
lods
scas
cltd
fwait
jp
or
test
or
jns
lods
xchg
fisubrl
pop
cmc
mov
cli
jge
adc
imul
fsubrp
subb
aas
mov
xor
jl
adc
iret
popa
in
xchg
jnp
push
out
adc
dec
test
xchg
movsb
sar
fsubrs
xor
inc
loop
inc
jno
mov
push
xchg
sub
scas
movnti
in
sarb
cs
sarl
or
dec
mov
add
jge
into
sub
cmp
add
jmp
shl
or
push
pop
int3
sub
outsb
aaa
lcall
aaa
shl
lods
push
mov
jle
out
in
jb
sub
lods
xlat
jg
jge
xor
jg
ja
sbb
shll
mov
jne
in
pop
rol
test
jge
mov
sub
mov
mov
adc
and
shlb
and
add
mov
loop
das
lcall
sbb
sbb
enter
lcall
fdivrs
mov
inc
pushf
jge
and
jne
scas
aaa
test
push
pop
pusha
pusha
mov
sub
jmp
xor
test
sti
inc
insl
sbb
jmp
cmpsl
adc
test
pop
jb
iret
pushf
lods
cltd
and
pushaw
xor
push
jb
or
leave
xchg
mov
mov
sbb
lods
out
sbb
rclb
adc
out
mov
enter
cwtl
cmpsb
pop
and
rcrb
lock
sub
pop
mov
sarb
test
lcall
js
add
xchg
cmp
mov
push
add
leave
movsb
ds
mov
movsl
xchg
or
push
aad
mov
adc
cmp
inc
mov
dec
add
imul
faddp
ret
adc
and
gs
out
or
xor
push
std
inc
fcoml
pop
push
mov
in
popf
jp
jo
add
rorl
adc
sbb
or
popf
jbe
nop
mov
stos
xchg
shld
lea
dec
adc
push
sahf
xor
call
or
sub
xor
mov
std
nop
icebp
mov
xchg
pop
loope
mov
pop
inc
cmp
lods
cmp
out
imul
pop
into
sub
jns
sbb
clc
daa
les
mov
pop
lahf
aad
mov
enter
cmp
xor
movsl
icebp
in
dec
jbe
test
inc
xchg
in
stos
hlt
sub
or
pop
mull
lock
pusha
xchg
loopne
imul
jne
rcll
fldt
push
data16
sar
ret
jae
cltd
roll
or
xchg
mov
xor
inc
bound
dec
and
jae
aas
push
test
dec
mov
movsb
add
in
mov
adc
cmp
lods
sub
nop
fcoml
arpl
pop
pusha
sbb
loop
pop
or
push
mov
inc
mov
int3
mov
jp
lea
sbb
es
jge
xor
lods
add
lds
mov
xlat
lret
dec
xor
je
lds
test
scas
inc
dec
fwait
cmp
adc
sti
dec
inc
ficompl
xchg
lret
outsb
push
lret
mov
jge
sbb
clc
xchg
std
cmp
mov
mov
in
mov
add
or
push
push
push
stc
cmp
mov
mov
dec
pushf
fs
cmp
push
rorb
dec
or
inc
hlt
cmpsl
cmp
sti
adc
test
xchg
push
pop
mov
mov
xor
pop
lcall
mov
inc
push
xchg
loope
negb
xlat
pop
xor
add
popf
out
jno
xor
decb
mov
cld
add
dec
pushf
pop
jne
inc
dec
popa
jl
cwtl
jge
stos
jo
push
adc
aaa
jle
fisttps
stc
daa
xchg
sub
mov
rol
mov
xlat
add
jbe
mov
popf
leave
out
mov
or
sbb
popl
addr16
jne
in
into
loopne
and
cs
mov
mov
ljmp
scas
mov
in
dec
and
inc
aaa
je
add
jle
repnz
pushf
jne
cmp
aaa
adcb
jmp
jl
cli
pop
sub
xchg
cmp
scas
arpl
mov
aas
sbb
lock
sbb
rcrl
jp
in
mov
adc
add
test
js
inc
mov
mov
dec
jecxz
xor
xor
stos
or
test
sub
inc
test
inc
jns
dec
cli
lock
xor
fimull
push
stos
xor
xchg
pop
ja
jg
push
int
lds
hlt
xor
push
jno
pop
cs
ficomps
mov
sbb
sub
mov
xchg
adc
sbb
insl
pop
popf
out
jecxz
loopne
cmp
mov
xor
ficompl
fs
loope
mov
push
jge
scas
mov
mulb
pop
fwait
int
scas
fninit
jmp
pop
popf
xor
shll
add
dec
outsb
and
leave
sub
cmp
js
sbb
cld
xor
mov
into
xchg
dec
jbe
push
push
xchg
imul
push
jg
inc
push
rorb
daa
int
pop
je
imul
nop
mov
imulb
pop
add
pushl
mov
sahf
fs
cld
je
lret
mov
lcall
mov
jae
jno
jb
ss
imulb
shrb
je
xchg
jg
xchg
ds
and
mov
scas
imul
or
dec
adc
fstpl
add
pop
int3
cmp
add
enter
xor
xlat
es
jb
andl
sub
cltd
hlt
or
fwait
and
mov
in
in
pop
dec
fisubs
jnp
out
ret
roll
gs
pop
sbb
push
aaa
jge
inc
xchg
movsl
jbe
out
mov
enter
bound
sub
jne
cmc
out
movsl
sbb
mov
mov
cmpsb
shl
and
jmp
push
sub
fsubs
loopne
insl
and
ret
xchg
leave
out
clc
push
fst
push
mov
dec
mov
ficompl
pop
and
mov
in
lock
inc
loop
lahf
push
int3
cs
call
nop
sbb
int3
int3
adc
mov
test
clc
push
mov
repnz
pop
loope
jne
add
test
fld
and
scas
push
and
mov
inc
fisubrl
jge
lea
pop
sbb
ljmp
ja
dec
push
into
out
shll
cmp
ljmp
and
pop
ss
int
pop
out
ss
jecxz
fstps
int3
ss
sbb
sub
push
in
cli
cld
pop
outsb
mov
in
mov
push
jb
jnp
xchg
arpl
bound
dec
stos
dec
insb
out
cmp
and
or
xchg
xchg
mov
filds
mov
in
sbbl
imul
fmul
out
sub
popa
pop
pop
iret
out
call
mov
in
inc
ds
repz
pusha
lcall
bound
fwait
jo
in
gs
cmpl
dec
jg
sarl
out
aad
cmp
mov
repz
add
cs
xor
xchg
xor
xchg
and
inc
push
sbb
in
and
or
pop
sar
movsb
sbb
test
call
or
dec
ljmp
pop
out
popf
mov
push
insl
add
sbb
sbb
adc
test
repnz
add
cmp
sub
cmc
in
sqrtps
dec
shrl
gs
push
enter
ss
movb
add
in
shlb
std
in
gs
imul
push
loop
mov
sbb
std
movsb
clc
sbb
jle
in
scas
mov
test
dec
adc
inc
pusha
mov
pop
pop
sbb
cwtl
popa
pop
dec
add
imul
adc
mulb
jne
notl
mov
pop
mov
lods
fs
and
add
add
cmp
stc
imul
scas
std
fildl
pop
sub
xor
mov
aaa
cltd
fcoms
test
xor
or
pop
sub
mov
jae
cmp
hlt
sub
imul
lea
inc
jecxz
hlt
mov
push
inc
push
xor
mov
in
push
pop
jnp
lret
xor
mov
pop
push
fcompl
pop
mov
xor
out
sbb
ficoml
pop
push
data16
inc
in
call
xbegin
mov
arpl
std
call
sti
sahf
std
mov
repnz
cltd
pop
adc
push
jne
lahf
push
jbe
dec
mov
jnp
leave
jge
pop
ja
xor
insb
pop
and
sub
test
mov
ja
fs
jp
cmp
jge
ljmp
cmp
sub
and
in
xchg
int3
mov
out
idiv
cmp
shl
sub
imul
xchg
sub
test
imul
iret
jbe
fiaddl
ja
cmp
rcr
mov
jno
movsb
std
repz
rcrb
repnz
mov
jg
jle
jge
loopne
adc
ret
arpl
iret
mov
sbb
adc
dec
mov
test
cwtl
scas
mov
int3
adc
jbe
out
push
ja
add
dec
and
mov
push
xor
adc
xor
fidivl
push
mov
adc
movsb
add
std
inc
bound
sbbb
out
cli
jbe
aaa
and
lret
xchg
lock
mov
lcall
les
sti
jp
sbb
dec
cltd
xchg
xor
out
push
and
lret
pop
cmp
clc
dec
dec
test
cli
shlb
adc
cmp
jmp
jns
push
mov
push
fimull
sbb
push
ret
sub
ja
or
insb
inc
cmp
sbb
addr16
mov
cmp
daa
jge
repz
sbb
sarb
lahf
fidivrs
inc
js
out
insl
cmp
lret
jb
add
jmp
aad
xor
cmp
xlat
cmp
xchg
push
in
pop
lods
fcmovne
test
lret
dec
lods
test
ss
adc
ds
fmuls
fsubl
push
jb
cmp
sub
std
and
adc
decb
and
dec
cmp
lods
hlt
sar
adc
inc
aaa
lea
rolb
out
or
or
idivl
xor
inc
sbb
repnz
into
add
fsts
test
out
out
ss
add
mov
pop
mov
ds
in
pop
mov
daa
cs
xor
sbb
mov
imul
test
jmp
lds
jns
repz
add
pop
jae
sti
jecxz
rcll
adcl
pusha
sbb
push
stos
adc
leave
xchg
add
adc
pop
sub
mov
jmp
push
cmpsl
inc
adc
stos
xchg
in
mov
cmp
push
or
mov
lea
inc
sarb
and
out
jmp
test
sbb
mov
loope
add
test
bound
adc
sub
mov
bound
pop
jne
pop
ss
cmp
ljmp
rcr
test
xchg
in
int3
xor
test
pop
or
fidivl
pop
mov
fdivrs
imul
insb
mov
je
mov
add
rcrb
sbb
ja
stc
imul
fnstsw
lock
lods
mov
lret
imul
scas
mov
nop
test
push
xor
cmpl
rcl
test
out
xor
test
mov
jp
bound
mov
pop
or
movsl
xchg
sbb
nop
lock
add
sti
repz
nop
sbb
cmp
fcmove
dec
js
pop
pop
sbb
cmp
imul
shrl
add
dec
xlat
cwtl
loope
xchg
push
dec
test
or
out
jb
bound
adc
add
mov
mov
scas
inc
xorl
aam
mov
icebp
pop
push
mov
enter
adc
ret
nop
jp
ds
fmul
fcmovbe
in
dec
filds
repz
pop
cld
repnz
lahf
int
orl
lea
pop
dec
mov
das
pop
in
lret
cmp
xor
cmc
mul
fcoml
mov
and
ljmp
add
ja
out
xlat
repnz
inc
add
push
imul
mov
arpl
xor
push
push
pushw
jg
lds
bnd
adc
pop
xor
xchg
sbb
fnsave
int3
fwait
rcll
or
and
inc
cmp
imul
lcall
insb
pop
repz
mov
add
lods
mov
mov
clc
mov
stos
rcl
es
sub
aad
sub
rol
mov
sub
xchg
test
or
push
xchg
sahf
fwait
int
ljmp
adc
aas
pop
cmp
stc
mov
mov
loope
jne
das
dec
insb
jge
lock
cmpsb
and
imul
cs
fwait
idivb
js
jbe
cltd
gs
cmpsl
fwait
sbb
dec
or
cwtl
adc
pop
mov
stos
cwtl
cmpsl
cli
xor
cmp
and
add
jmp
mov
jmp
push
sti
mov
add
scas
jge
push
into
sbbb
cli
mov
xchg
xor
shl
inc
fistpll
arpl
inc
lret
sbb
leave
jecxz
mov
lcall
shll
movsb
dec
mov
aam
mov
scas
add
cmp
or
das
or
mov
jb
cmp
ret
and
nop
shll
cmp
jle
in
xor
loope
stos
jg
pop
pop
mov
mov
ss
ja,pt
jl
outsb
mov
icebp
mov
int3
pop
add
jne
ss
sbb
leave
inc
mov
bound
sbb
pushf
xchg
sub
scas
xchg
push
jl
jb
ljmp
cmp
je
call
cmc
lahf
push
ja
rcll
in
pop
pop
mov
fidivl
adc
enter
jecxz
pop
lea
sub
mov
dec
ficoms
lea
sbb
arpl
sbb
inc
scas
cli
sbb
push
lret
or
or
dec
hlt
lea
mov
into
lret
cli
jnp
inc
addr16
inc
mov
xchg
inc
ja
jb
or
xor
outsl
or
mov
xchg
data16
ljmp
sbb
mov
std
in
mov
inc
jne
test
sub
jne
repnz
add
aad
jne
sti
and
push
cmp
jns
xor
stos
mov
addb
push
imul
loop
mov
outsb
or
mov
and
sub
enter
mov
pop
insl
cmpsb
and
push
dec
aaa
sbb
lods
add
frstor
pop
cmp
fiadds
ret
les
cld
dec
xor
push
loope
cmp
paddusb
fwait
sbb
rolb
jns
movsl
mov
pop
dec
add
mov
sbb
jne
adc
ja
cld
pop
xchg
popa
mov
adc
or
dec
and
bound
lock
loop
push
pop
mov
push
push
lret
push
ds
mov
cmp
ja
sbb
xchg
iret
sub
in
sbb
stos
push
aad
fldl
arpl
outsl
fimull
imul
pop
xchg
jge
xchg
xor
xchg
fidivl
xor
jno
jg
mov
pop
or
ss
xchg
jnp
pop
sbb
out
push
sub
push
xor
cmc
lds
mov
rcr
cmp
cmc
mov
daa
xor
int
nop
mov
ljmp
sub
mov
cli
int3
mov
push
mov
mov
inc
jmp
lahf
aaa
jns
pop
clc
or
leave
cmpsb
aas
mov
fwait
lcall
add
push
cmpsb
add
out
jne
mov
scas
inc
cli
jmp
mov
nop
add
call
sub
sub
push
aaa
add
lret
jp
dec
jns
jno
rcrl
xchg
xchg
fs
mov
ror
adc
jno
inc
and
sbb
push
cmpl
popf
cltd
pop
adc
jge
inc
pop
mov
jbe
fs
sahf
xchg
lcall
dec
push
pushf
rclb
lcall
gs
sbb
jnp
cwtl
mov
dec
or
xor
pop
xchg
push
jle
push
cmp
and
je
jp
xchg
mov
push
aaa
lahf
rclb
mov
adc
call
adc
sbb
mulb
mov
enter
inc
in
outsb
lds
or
mov
lock
mov
push
je
popa
loope
call
xlat
pop
stos
int3
sahf
or
lods
push
and
mov
add
rcll
xchg
jo
cs
xor
sub
daa
mov
push
pop
js
fcomps
add
sub
sub
mov
mov
scas
aaa
cmpb
sub
xchg
jmp
shll
out
adc
adc
addb
dec
fldl
sbb
iret
jl
sbb
sbb
mov
jp
lods
in
cs
push
ja
stos
lea
imul
jl
scas
cmp
push
adc
inc
into
mov
or
js
shl
out
adcl
cs
scas
lcall
jb
inc
orl
xorl
into
sub
jle
dec
add
fidivrs
xchg
mov
nop
jl
stc
push
xlat
sub
jle
fiaddl
pop
cmc
ds
jo
mov
inc
call
fcompl
imul
cmp
push
hlt
aam
dec
ja
pop
inc
push
mov
int3
scas
out
jb
fs
cld
xchg
fists
xchg
sub
jnp
add
adc
adc
jae
mov
push
dec
jb
cltd
ret
and
push
ds
mov
push
js
push
cltd
scas
loopne
xor
lahf
push
daa
adc
in
or
js
in
popa
jne
push
xor
and
daa
cwtl
addr16
sahf
hlt
mov
incb
and
sub
call
addr16
push
mov
push
mov
das
pop
jno
mov
les
mov
dec
test
xor
cltd
xchg
rorl
pusha
cmpl
nop
mov
in
xchg
dec
fwait
add
std
mov
test
shr
mov
mov
mov
add
mov
sbb
xchg
test
fdivl
jle
mov
int
push
sbb
aam
clc
xor
mov
pop
ret
decb
cmp
daa
push
push
or
loop
aam
xor
int
insb
addr16
insl
rcr
sbb
ljmp
ss
pop
mov
inc
push
xor
cltd
notb
out
push
xor
mov
ss
adc
or
cld
mov
das
fisttpll
addr16
cli
xor
cmp
inc
sub
aad
xchg
and
cmpsb
and
outsl
jae
arpl
loop
sahf
push
sbb
scas
shl
sahf
pop
mov
add
paddb
mov
jae
leave
movsl
std
mov
pop
pushl
or
cmc
int3
gs
inc
add
lahf
hlt
enter
inc
mov
mov
mov
insl
or
cmp
rcll
pop
xlat
iret
in
or
push
insl
sbb
xor
sbb
in
aad
sahf
ret
mov
int
insb
and
jne
pop
and
insl
mov
dec
dec
and
ret
into
pop
push
into
mov
pop
jmp
sbb
inc
imul
leave
xor
xchg
mov
arpl
stc
cmp
inc
loope
sbb
or
dec
lret
testb
mov
pop
test
xor
sub
stos
jb
ljmp
cmp
lahf
or
adc
outsl
mov
scas
dec
mov
mov
sbb
and
pop
push
int3
cmpb
jo
aas
fadd
mov
in
mov
repz
mov
or
or
filds
jecxz
out
cmp
xchg
les
pop
xor
orb
mov
mov
xchg
roll
mov
mov
ss
inc
pop
cld
pop
sbb
sbb
mov
inc
out
sbb
sbb
cld
aad
popf
test
int3
mov
sub
sbb
dec
xchg
xchg
gs
inc
leave
ss
sub
pop
pop
cmp
pushl
scas
xor
negb
lcall
mov
in
out
fs
xchg
jl
addr16
push
xlat
xchg
jae
jno
cmc
ja
xchg
pop
loope
ja
and
xlat
cwtl
test
dec
push
sbb
dec
inc
cwtl
lcall
jb
pop
mov
inc
and
pop
or
out
cld
fsubrs
xchg
call
cmp
pop
mov
mov
fsubrs
pop
ret
in
lret
pop
addr16
or
xlat
sub
lret
shll
js
mov
ror
and
and
cltd
leave
fdivl
leave
negb
inc
jns
mov
aas
int
mov
mov
jb
insb
adc
je
inc
adc
arpl
fstl
inc
pop
sbb
mov
dec
lahf
sub
outsw
dec
and
pop
aam
jmp
aam
pop
leave
or
icebp
xchg
loop
ficoml
sub
aad
and
movsl
stos
cwtl
sub
sub
add
sbb
cmp
outsl
cli
cmc
cwtl
test
fs
sub
out
and
aad
mov
lahf
lods
shr
cmpsb
add
push
or
andb
prefetcht0
xor
icebp
jecxz
push
jo
mov
in
push
inc
adc
repnz
lods
leave
dec
sbb
decl
mov
adc
pusha
cmp
test
mov
jo
mov
jl
std
xorb
sahf
insl
dec
out
adc
xor
and
in
cmp
sbb
sahf
nop
adc
mov
xchg
inc
mov
cmpsb
xor
or
and
pop
shlb
cmp
insl
xor
insl
js
add
ja
dec
test
lcall
inc
scas
sub
mov
inc
loopne
jecxz
push
jl
mov
adcl
test
push
ljmp
incl
ds
fnsave
add
mov
cmp
out
inc
sub
jg
push
lods
and
sbb
outsl
hlt
lret
and
and
mov
sbb
pop
add
xchg
xor
mov
inc
fsubrs
xorl
orb
icebp
movsb
push
sub
pop
push
or
fidivrl
sub
jb
xchg
fistpl
out
addr16
add
fldenv
mov
mov
loopne
sbb
dec
lds
sbb
pop
fcomps
dec
xor
push
je
or
push
xchg
fmull
xor
dec
push
mov
mov
cmpsb
daa
decl
pop
inc
fldcw
pop
push
add
aad
sarb
dec
orb
fldt
sub
in
cmp
or
mov
xorl
les
lret
mov
push
sbb
adc
add
data16
cmp
shrb
sub
jmp
mov
add
and
lret
adc
add
mov
mov
jo
mov
dec
mov
xor
icebp
in
pop
xchg
push
cmp
outsl
daa
and
fidivl
pop
adc
mov
mov
jne
lock
outsl
out
xorl
sub
mov
scas
mov
arpl
jo,pn
xchg
outsb
add
dec
pop
fucomip
pop
xchg
pop
mov
enter
pop
sub
jmp
ret
push
sub
popa
cmpsl
iret
lds
das
adc
dec
jo
jge
add
xchg
movl
jns
mov
ds
fsubrl
cmp
jbe
arpl
lods
dec
movsb
fs
cmp
inc
ss
jl
pop
and
or
hlt
and
mov
in
mov
imul
mov
add
loopne
les
and
notl
mov
jmp
pusha
bound
pushf
mov
sbb
icebp
scas
xchg
jae
xchg
ret
arpl
pop
jge
outsb
pop
xor
pushf
xchg
lahf
xor
jl
add
adc
popa
push
rolb
out
es
mov
push
jae
and
insl
xor
xor
lret
js
ss
lcall
push
pop
mov
js
cmpsb
lea
ja
fdivrl
shll
ret
and
pusha
dec
call
push
push
push
mov
ja
and
and
sub
sub
push
xor
mov
imul
sbb
sub
adc
hlt
lahf
mov
mov
push
inc
lock
dec
pop
loopne
lret
mov
or
sub
pop
pop
jb
lods
dec
xor
lahf
ret
sub
movsb
psllw
cld
jns
mov
sub
xchg
stos
mov
adc
mov
mov
jle
sahf
push
aam
shlb
xlat
and
jp
in
jle
xchg
aas
adcl
decb
xchg
xor
mov
pop
sub
rclb
add
xchg
pushl
jbe
nop
xor
movsl
jns
pop
pop
and
ret
xor
in
add
fldpi
shll
aam
pop
pop
and
dec
inc
xlat
enter
mov
mov
iret
jmp
call
add
sbb
xlat
lea
and
jbe
mov
xchg
loope
insl
sbb
mov
and
push
xlat
pop
jbe
loop
stc
movsb
push
test
push
and
xor
pop
scas
or
push
xorb
cld
fs
ss
mov
aam
jne
pop
rorb
fcom
out
subb
leave
idivb
pop
ret
xorb
not
xor
xor
dec
jge
cld
mov
movsb
fs
mov
jp
jo
jnp
or
cli
leave
jb
movsl
xchg
scas
imul
jp
inc
daa
sarl
loope
test
jbe
imul
or
cmpsl
out
test
push
mov
sub
jns
and
add
addl
jmp
sub
mov
or
jp
fsub
test
loope
bound
lds
rcr
push
xchg
imul
mov
lahf
push
mov
and
and
clc
lea
icebp
mov
pop
and
inc
lret
xor
outsb
testb
mov
ret
cwtl
ss
mov
imul
mov
sub
jb
addr16
push
in
jne
xor
add
sbb
add
enter
insb
les
mov
xor
add
xor
sbb
sbb
jle
lret
sub
rolb
jno
test
and
daa
push
jnp
movsb
xor
popf
repz
pop
enter
inc
cmp
sbb
test
sub
into
cwtl
mov
push
cld
frndint
inc
mov
shr
mov
jp
pop
fidivrs
xor
rcll
sbb
mov
shrb
push
outsl
and
mov
jle
adcb
cmpsl
jp
enter
ret
repnz
das
inc
push
jge
mov
rolb
mov
ret
pusha
out
aaa
loopne
sub
adc
cmc
or
xor
lds
pop
lds
dec
pop
jnp
ds
mov
mov
add
push
iret
jne
cmc
adc
hlt
push
xchg
cmc
adc
fs
xchg
sbb
test
push
pushf
cltd
sti
xchg
and
adc
stc
addr16
jb
nop
inc
pusha
cltd
pop
test
mov
mov
dec
fsubl
xor
pop
pushf
sub
cltd
xchg
cs
scas
js
cmc
push
and
or
sbb
mov
mov
jbe
imul
test
mull
or
xchg
aam
lret
pop
push
xlat
aad
push
idivl
testl
lahf
dec
insb
bnd
pop
dec
into
xchg
and
lcall
cmp
aam
or
xor
and
ja
mov
mov
mul
mov
loop
loope
cwtl
add
xchg
mov
xor
lahf
adc
stos
std
xchg
mov
mov
sub
ss
inc
xor
and
xchg
sbb
lahf
xchg
mov
cltd
mov
incb
test
imul
pop
xlat
sub
shll
xchg
xchg
ds
roll
jns,pt
leave
push
in
jl
fidivs
cmpb
push
loop
pop
insl
mov
sbb
cs
sbb
pop
pusha
and
test
xchg
sarl
lods
insl
lahf
fwait
pop
mul
mov
jns
fnstenv
sahf
ljmp
sbb
enter
xlat
dec
mov
mov
xor
fldt
repz
mov
negl
inc
sbb
jg
out
scas
inc
push
or
pop
mov
addr16
lret
into
popa
jmp
mov
adc
repz
and
mov
push
push
add
stos
or
xlat
jp
mov
push
nop
push
sbb
cmp
cmpsb
outsb
das
ss
fildl
enter
das
aad
and
dec
sti
stos
mov
bound
jg
ret
push
sbb
stos
and
aas
add
push
jo
pop
jp
inc
cltd
aam
std
popf
or
enter
cwtl
jb
sti
adc
pop
jb
clc
stos
add
lea
in
insl
xorb
sub
sbb
addr16
pop
mov
pop
or
dec
shr
cwtl
push
xor
add
mov
mov
cmpsl
test
inc
cmp
sar
adc
xchg
dec
lods
insb
in
in
pop
sub
add
enter
dec
xchg
mulb
push
inc
cmp
or
fcom
daa
out
les
lret
and
test
out
or
sub
xchg
fwait
movsl
xchg
sub
mov
out
and
adc
mov
or
add
jo
adcb
ficoml
jecxz
pop
lods
mov
inc
ret
and
sarl
outsb
push
ret
stc
mov
scas
mov
and
or
arpl
pop
add
sahf
and
movsb
jecxz
sub
push
jmp
fmuls
out
aam
and
pusha
mov
xchg
in
ret
and
inc
jnp
jecxz
add
xchg
stos
pushf
push
stc
mov
adc
adc
sub
cmp
jb
jno
adc
jle
clc
inc
xor
fbstp
mov
adcl
xchg
xchg
clc
bound
nop
xlat
hlt
daa
adc
xchg
dec
xor
test
and
sub
dec
scas
push
adc
outsb
xlat
clc
lcall
adc
call
inc
cmp
xlat
inc
jo
testl
test
repnz
pop
or
mov
dec
testb
cmp
push
loopne
mov
jecxz
in
mov
popa
push
popa
hlt
dec
pop
fsubrs
dec
call
icebp
stos
sub
cmpsb
loop
rcrl
lods
inc
cmp
jnp
inc
mov
cmc
gs
jp
inc
cmp
jne
rolb
push
ret
aas
mov
aas
ss
or
sub
int3
loope
jecxz
xchg
js
xorb
fbld
xor
inc
push
mov
mov
sub
ret
and
push
pop
into
xchg
mov
sub
mov
pop
sbb
arpl
xchg
cmp
andb
ds
mov
xor
sar
fistpll
pop
sti
aaa
popa
scas
mov
dec
xchg
pop
push
rolb
jge
das
or
add
or
cld
fbstp
jp
xchg
cmp
xchg
jl
pop
leave
xchg
mov
jbe
lret
fldt
insl
fistps
adcb
outsl
add
dec
je
sub
push
into
fs
mov
xchg
loope
xor
cmpsl
es
mov
hlt
jl
pop
mov
inc
push
pusha
imul
pop
mov
test
lret
cmp
mov
mov
push
dec
inc
popa
idiv
push
sub
imul
inc
mov
inc
rolb
jmp
mov
mov
js
aas
mov
out
push
xor
fucomp
scas
icebp
pop
repnz
sub
fmulp
and
xchg
int3
cmpsl
pop
push
lea
sub
cmc
sub
mov
or
test
popa
arpl
stc
lods
xor
lcall
aaa
mov
push
aaa
push
sub
pop
bnd
fsubl
and
pop
jbe
ret
cmp
pop
arpl
adc
mov
shl
stc
add
and
dec
add
jmp
cltd
mov
cwtl
iret
pop
stos
in
fcomps
mov
jbe
add
ja
pop
in
sub
aaa
dec
gs
sbb
scas
dec
movsl
mov
xchg
push
or
xor
fisttpl
fs
pop
mov
jns
adc
xorb
scas
faddl
movsb
andl
int3
sahf
repz
dec
scas
imul
out
fisttpll
jbe
int
test
rcll
cmp
cmc
call
jb
test
mov
jns
xchg
rcrl
gs
hlt
repz
xchg
jnp
push
icebp
cmpsb
cmp
dec
imulb
imul
sbb
and
lock
push
imull
cli
cmp
inc
mov
sbb
cmp
out
mov
mov
inc
fld
fcoml
xlat
lods
push
adc
daa
fnstcw
mov
sbb
cmp
jmp
pushf
xchg
scas
jmp
push
negl
ja
jmp
inc
pop
in
aad
rcr
inc
pop
mov
adc
daa
fisubrs
shll
pop
push
pushf
fstl
sub
mov
dec
push
rcrb
pushf
in
pushf
sti
rcrl
push
rol
push
add
out
push
cli
test
int
pop
jp
rcll
push
add
dec
scas
aam
fcmovu
xor
sub
idiv
or
pusha
push
in
ret
jge
push
test
inc
les
fidivrl
mov
sbb
fwait
mov
pop
icebp
idivl
dec
mov
sub
cmp
shlb
cs
in
dec
loopne
xor
imul
in
mov
clc
sbb
push
adc
sub
rcll
js
mov
inc
hlt
cmp
test
push
mov
pop
movsl
mov
pusha
ljmp
jb
loopne
dec
push
pop
add
icebp
in
lcall
sbb
cmpsb
dec
dec
repz
xchg
and
fiaddl
pop
into
xor
cmp
cli
in
xchg
pop
in
or
xchg
push
lret
push
push
stos
add
or
sbb
dec
mov
adc
xlat
jno
lods
loopne
push
xor
or
jg
int
cs
imull
shrb
cmp
push
lds
mov
es
fstl
pop
loope
outsl
pop
add
data16
xor
fisubl
lret
sbb
inc
adc
outsb
insb
int3
mov
and
clc
cmp
fsubrl
push
clc
andb
jle
lahf
push
lcall
dec
fwait
push
dec
push
xchg
sbb
shlb
push
mov
aas
cmp
aas
push
cmp
pop
test
lret
xlat
ret
pushw
sbb
add
out
jle
xchg
mov
insb
mov
push
fistpll
cmc
mov
pop
int
shl
jno
inc
inc
fmul
cmp
addr16
and
mov
fistpll
lea
sbb
pop
adc
cmp
adc
cmc
and
add
les
add
adc
repnz
addr16
add
popl
lret
dec
sbb
push
aas
into
and
loopne
aas
insb
fiadds
or
hlt
aad
enter
mov
jno
dec
inc
mov
cmc
mov
mov
xchg
subl
movsb
and
mov
dec
inc
loopne
addr16
fimull
mov
loopne
fisttpll
fcomi
ljmp
xor
cmpsl
mov
leave
sub
repz
test
imul
lods
adc
jne
mov
popf
sbb
jp
add
dec
pop
xchg
jle
xor
jp
nop
lds
call
jae
stos
sti
rcll
rorb
aad
andl
sub
aas
inc
hlt
sbb
pop
out
push
fadds
test
mov
xchg
mov
pop
in
mov
push
pop
aas
insb
jp
out
jnp
pop
adc
mov
pop
sbb
push
mov
or
cmp
std
daa
add
jle
pop
or
pop
mov
dec
xlat
lods
add
cmp
test
mov
imul
or
out
das
push
add
sub
dec
hlt
popf
sbb
and
scas
jbe
push
mov
push
pop
sub
mov
mov
lock
adc
nop
sbb
mov
inc
xchg
add
insl
jg
mov
dec
xchg
aaa
dec
sbb
mov
adc
push
or
cmpb
and
test
add
ss
es
call
mov
xor
lahf
shll
xchg
xlat
lods
daa
mov
xor
xchg
sahf
jns
xchg
dec
push
fs
int3
loopne
inc
lods
je
mov
cmp
fildll
ret
pushf
fldenv
adc
adc
int
or
xlat
pop
lcall
mov
into
data16
xchg
mov
rorl
jbe
imul
xchg
jg
mov
ret
imul
setae
es
and
or
sub
xor
shrb
mov
jne
jb
add
adc
cmp
dec
mov
cmp
fwait
cmpsb
adc
cmp
inc
pop
mov
cmpl
push
adc
jo
stc
ljmp
jl
or
dec
sub
int
mov
mov
lahf
pop
inc
jno
mov
mov
rcl
dec
mov
mov
pop
pop
sub
and
int
in
sub
jbe
addb
adcl
ja
adc
lock
xchg
int
push
xor
add
or
adc
xchg
lods
movsb
or
jp
sub
or
clc
or
push
or
pushf
cmp
mov
push
jecxz
icebp
jmp
jle
mov
jmp
ja
pop
pop
xchg
sbb
dec
adc
cld
scas
cmp
arpl
mov
enter
sbb
sbb
lods
ret
xor
test
push
sarl
mov
pop
bound
ss
sbb
insb
mov
xlat
adc
aad
test
pop
es
insl
arpl
pop
sub
jge
mov
dec
dec
pop
jns
rcr
xchg
sub
js
popf
mov
fstps
arpl
push
xchg
leave
stos
test
mov
call
xchg
xchg
pushf
lods
dec
rcrb
inc
and
aas
mov
mov
rcr
adc
sub
mov
mov
and
dec
xchg
popa
out
ds
xchg
out
add
cmp
xor
push
in
inc
mov
nop
sub
decb
and
in
out
or
dec
cmc
jp
jg
test
ret
push
shrl
negl
scas
outsl
test
mov
lock
lods
shr
into
outsb
subl
shrb
scas
int
cmp
mov
out
out
dec
repz
psubb
add
mov
nop
popl
aaa
shrl
lahf
popf
cltd
sbb
fildll
ljmp
push
push
dec
jne
xchg
lcall
pop
iret
insl
jmp
cmc
and
and
push
outsl
push
daa
addr16
in
paddusb
addr16
cs
xor
aaa
sub
les
repz
rcrl
sub
xor
dec
jb
mov
pop
inc
mov
mov
prefetcht1
lahf
fists
jge
jb
cmp
cmp
cwtl
insl
test
mov
ljmp
rorb
mov
and
xchg
push
mov
test
sahf
ret
xchg
xchg
je
icebp
cli
or
ds
bound
leave
inc
xor
sbb
jno
sets
nop
and
pop
mov
jne
outsb
pop
les
or
adc
xchg
clc
sub
cmp
shl
or
movsl
adc
sub
sbb
fcoml
ja
xchg
addr16
push
jb
pop
lcall
out
pinsrw
cmpsb
scas
xor
mov
sarl
in
xchg
loopne
lahf
and
xor
loope
mov
testl
ret
push
and
cltd
sub
dec
sub
fbstp
stos
repnz
jle
push
sti
pop
cmp
fidivrs
or
lret
ljmp
and
pushf
inc
xor
outsb
out
pop
hlt
loopne
adc
stos
cmp
or
xor
mov
jmp
and
hlt
or
inc
clc
popf
and
aas
ret
inc
repnz
aam
cs
mov
or
ret
pop
sub
inc
dec
movsb
jno
int3
bound
das
pop
pop
mov
xchg
nop
movsb
or
cmc
inc
mov
push
rep
rorl
xchg
gs
adc
aaa
sbb
sub
es
mov
push
cmpsl
fdivrs
dec
inc
add
fdivs
rolb
pop
xlat
jmp
xchg
push
popf
xlat
mov
push
inc
push
sbb
cmpsl
mov
incb
aad
cmp
pop
cs
mov
push
sub
and
loopne
lods
inc
sbb
mov
mov
call
push
mov
adc
pushf
test
ret
dec
cs
test
aad
sbb
sbb
in
loopne
movsl
rclb
inc
lock
mov
jb
inc
inc
sbb
shll
sub
cli
mov
pop
in
sub
push
push
lods
push
jbe
cld
loop
jg
nop
sar
cmp
pop
movsb
cmp
jp
jno
mov
inc
out
cmp
fldt
xchg
sahf
dec
xchg
sbb
aam
pushf
shll
les
sbbl
fists
jmp
push
jmp
cmp
rclb
push
cmpsb
fcoml
mov
inc
stos
add
add
sahf
fsubrl
out
push
int
fnstsw
test
scas
or
adc
aam
cmc
lea
addr16
push
mov
insb
cmc
iret
pop
push
push
in
orl
cmp
jg
cmpsl
aas
addr16
mov
sbb
push
or
add
stos
adc
mov
aad
mov
add
mov
iret
cmp
fcoms
and
dec
mov
ljmp
out
leave
addb
ficoms
sub
push
sub
dec
mov
int
sbb
dec
lahf
cmpb
mov
cmp
hlt
xchg
fwait
xor
sbb
repz
add
add
pop
pushf
out
mov
push
lea
mov
loopne
and
cmpsb
outsb
dec
orl
popf
repz
vmovq
inc
xchg
test
xor
scas
mov
and
push
add
sub
lahf
sbb
sbb
nop
ljmp
mov
lds
les
dec
mov
pop
fnstsw
pop
cltd
add
insl
dec
fldt
aas
mov
mov
roll
or
ficoml
mov
aad
fldt
iret
adc
in
outsb
out
faddl
push
pop
sub
and
xsha256
cmpsb
pop
xchg
push
inc
lret
fistpl
movl
or
fisubrl
sbb
sub
pop
shll
push
js
mov
dec
repz
cmc
adc
mov
xchg
cmp
mov
enter
xchg
jb
mov
scas
xchg
pop
sub
mov
pop
or
inc
jo
divb
push
jae
cmp
out
iret
addr16
push
and
mov
cli
jne
stos
stos
in
mov
scas
daa
add
insl
push
push
loop
jle
fldenv
sti
sub
push
add
out
bound
mov
mov
sbb
fnstenv
adc
adc
out
and
bnd
adc
enter
cld
ss
in
pop
mov
lock
xor
sub
mov
out
sti
jl
or
outsb
aad
and
test
dec
mov
inc
data16
mov
xlat
lahf
mov
and
lock
aas
xor
pop
fmuls
dec
push
lds
scas
push
push
dec
shufps
mov
scas
and
xor
and
sbb
mov
ja
dec
pop
and
das
xor
mov
cmp
xchg
sub
ljmp
pop
fistpl
add
popf
fldl
mov
cmp
in
push
addl
outsb
xchg
outsl
pusha
data16
pop
cmp
in
sbb
add
push
inc
xchg
cltd
or
add
cmp
cltd
bnd
inc
jne
pop
jbe
test
ret
pop
sti
xchg
push
js
out
pop
sub
fldcw
mov
xchg
push
pop
push
cmpsl
xchg
repz
mov
mov
ret
repnz
shr
ja
jnp
loope
loope
filds
cmp
xor
hlt
or
hlt
cld
xor
orb
mov
testb
sbb
pop
mov
js
pop
stos
lcall
movsb
dec
ja
sbb
sysenter
cs
int3
push
dec
dec
mov
ret
cmp
es
and
push
jmp
mov
fst
jnp
adc
aaa
push
lds
adc
dec
out
push
icebp
xchg
sub
dec
fstp
inc
xor
pop
or
lret
adcl
cwtl
mov
adc
dec
jnp
fwait
cmp
fidivrs
bound
xchg
mov
jl
sub
loope
test
add
jmp
pop
lods
stos
inc
fndisi(8087
inc
pop
pusha
test
inc
pop
and
push
ds
ret
cwtl
xchg
inc
jl
sahf
inc
enter
sbb
xchg
lret
adc
test
jmp
fdivrs
fsubrl
xor
or
testl
or
aad
out
jecxz
and
add
pop
ss
scas
repz
rcr
inc
cld
lret
leave
mov
dec
test
sbb
and
lods
xor
js
xchg
hlt
bndldx
cwtl
cmp
jb
fildll
aaa
pop
add
cmp
lret
mov
jo
pop
flds
pop
insl
sbb
pop
xlat
or
out
imulb
jg
ja
fs
lods
jg
adc
mov
mov
lahf
dec
pop
mov
mov
lds
jo
mov
nop
jno
shlb
jno
xor
data16
pop
lods
mov
fcoml
mov
cld
push
inc
movsb
mov
inc
jg
sbb
in
pop
sbbl
idiv
insl
les
imul
add
out
es
in
jne
into
dec
xor
fstl
push
mov
out
pusha
outsb
dec
and
or
movsb
cmpsb
mov
cmp
mov
scas
ljmp
mov
and
es
mov
ja
dec
or
sti
sti
lahf
daa
and
inc
inc
ret
stc
leave
xor
xchg
icebp
ficoms
aas
test
pop
jns
jno
ret
xchg
cmp
inc
gs
fucomi
mov
repnz
or
pop
and
mov
push
rcr
inc
movsl
popf
add
test
test
mov
xor
test
int
sbb
rcrl
lret
or
imul
mov
push
cld
fldl
sahf
movsb
cmpl
mov
push
inc
in
fstp
inc
repnz
fwait
sub
bound
adc
movsb
fadds
lahf
cmp
ret
dec
js
aam
pop
mov
pop
out
mov
scas
es
mov
mov
test
jecxz
push
sub
cltd
mov
fnsave
mov
add
ss
rcll
pop
adc
arpl
into
mov
lahf
jg
pop
repz
popf
xorl
dec
sub
call
add
movsl
dec
popl
in
pushf
mov
outsb
cmpsb
jmp
insb
adc
xor
mov
xor
xor
cmp
mov
xlat
bound
jne
pop
in
mov
test
fimull
into
inc
loop
cmp
pop
daa
daa
push
lea
fcomps
dec
sbb
out
pop
lods
jmp
repnz
sbb
and
adc
mov
and
mov
mov
dec
rolb
repnz
pop
test
aad
shrb
xchg
aad
push
iret
mov
adc
pop
xor
mov
cmp
dec
int3
cmp
lods
push
jnp,pt
popa
push
test
jp
mov
jns
push
ss
andb
sbb
jecxz
add
pop
stc
dec
mov
pop
add
dec
ret
iret
add
ds
out
ljmp
mov
iret
or
adc
loop
push
sbb
test
mov
fneni(8087
dec
and
sbb
mov
dec
roll
xchg
mov
lods
aam
faddl
or
mov
fimull
in
xor
popa
ja
or
cs
ja
inc
sub
pop
pop
pop
cmp
mov
and
jae
xor
lds
push
sahf
push
lds
and
sbb
test
cltd
rolb
bound
xchg
mov
ja
pushf
mov
imul
shr
lret
pusha
jg
inc
sub
mov
jmp
mov
pop
fdivs
popa
mov
sti
sbb
ret
movsl
fs
and
movsb
jo
jl
std
jb
xor
push
pop
mov
dec
push
pop
mov
es
test
sbb
push
push
xor
mov
dec
out
mov
push
dec
into
das
inc
out
xchg
mov
ret
jp
inc
out
hlt
pushl
mov
and
test
cmp
add
fstpt
xchg
pusha
fucomi
dec
add
test
xchg
dec
push
pop
jecxz
ja
divb
mov
sarl
mov
sbb
pusha
cmc
popa
push
xor
scas
mov
into
xor
jl
movsl
push
xchg
test
sub
pop
pop
out
hlt
lds
les
test
cmp
jmp
lds
and
sbb
pop
stc
dec
or
inc
scas
cmp
cwtl
int3
jg
call
mov
das
in
cmp
push
lods
ja
nop
cmp
xchg
dec
sub
xorb
cmp
mov
outsl
aaa
or
pop
add
ja
mov
movsl
cmp
add
je
jg
cmp
mov
xchg
negb
or
cli
hlt
cmpsl
add
lea
push
mov
xchg
in
jo
push
rcll
sarl
jne
adc
inc
mov
push
out
mov
je
push
xchg
jo
mov
xor
inc
cmc
dec
scas
xchg
sub
cli
jo
enter
subl
mov
pusha
or
push
dec
fisubl
cs
mov
or
mov
ja
bound
cmp
add
cmpsl
outsb
in
pop
int
and
mov
inc
pop
sub
sub
cmp
imul
cmp
and
test
shll
mov
mov
sub
movsb
mov
or
pop
sbb
lfence
fs
push
sub
sar
adc
mov
mov
loopne
jg
mov
jle
lahf
rorb
repnz
dec
mov
pusha
lock
clc
sbb
jns
push
iret
js
inc
popl
scas
pop
fidivl
dec
mov
fwait
fs
ficompl
push
fisubl
mov
je
dec
lock
cld
mov
jecxz
dec
push
inc
adc
dec
js
pop
xlat
jmp
and
inc
dec
pop
dec
ucomiss
sbb
inc
inc
inc
iret
sbb
lock
imul
daa
subb
or
lea
sti
inc
mov
adcb
sub
das
ret
push
out
xchg
jge
dec
dec
or
rep
and
ret
mov
out
xor
sbb
lret
xor
or
fnstsw
mov
pop
or
cwtl
mov
inc
stc
mov
into
dec
jmp
jp
out
adc
stos
or
xchg
jp
sbb
or
rorl
jb
data16
outsl
cmc
jmp
cmpsb
lock
shll
loope
out
xor
hlt
outsl
in
mov
repz
in
xor
nop
add
jge
push
scas
push
mov
es
loope
cmpl
jbe
lock
xchg
adc
mov
aas
mov
lods
lahf
jmp
leave
xchg
mov
test
test
mov
sbb
and
jne
and
mov
icebp
in
mov
cwtl
loop
xchg
sub
sub
sub
ljmp
xorps
pop
xchg
push
xor
aam
add
pop
pop
push
stos
adc
mov
sbb
jp
mov
dec
pushl
cmpsl
int3
xor
jmpw
neg
push
sbbl
sbb
pushf
or
xchg
popf
in
sbb
arpl
xor
mov
adc
sbb
adc
test
mov
fimuls
xor
lret
out
iret
jno
push
jnp
xchg
cmpsl
push
fprem1
or
mov
and
aaa
inc
cmc
adc
push
and
into
dec
xchg
cmp
sub
or
fwait
cmp
dec
insb
mov
lds
mov
xchg
xor
aad
in
xchg
xchg
test
ret
fstpt
imul
pop
jne
daa
leave
jge
sti
das
scas
and
mov
sub
inc
jnp
arpl
stos
and
loopne
xlat
fcoml
icebp
ljmp
jle
ja
add
mov
gs
sti
jp
xchg
lods
cs
fldcw
decb
stc
inc
outsl
popa
fildl
in
shlb
jno
sti
xchg
add
rorl
out
jecxz
push
popa
sub
or
mov
push
sbb
xor
enter
fisttpll
movsl
in
fadd
lcall
push
cwtl
movsb
jnp
jns
sub
cmc
xchg
notl
and
xchg
dec
pushf
mov
jne
jno
testl
in
paddd
push
dec
mov
lret
and
mov
sub
or
pushf
adc
out
rol
inc
add
les
js
out
sbb
ret
ret
push
in
jo
jno
out
mov
scas
and
cmp
test
xor
xchg
pop
in
sub
push
es
or
jl
ss
ljmp
dec
xor
push
jae
pop
iret
dec
cmp
push
push
imul
inc
lock
or
insl
mov
mov
pop
cwtl
incl
or
call
pushf
das
mov
sub
testb
inc
pop
sub
hlt
pop
jmp
push
mov
sub
inc
cmp
jne
syscall
movsl
shlb
bound
lahf
add
movsb
jecxz
adc
into
in
pop
jne
movsb
inc
cld
aaa
arpl
xor
andb
ja
jne
push
mov
inc
pushl
add
pop
xchg
mov
cltd
add
cmp
mov
dec
and
out
or
mov
adc
out
test
loopne
bound
cmp
fldl
data16
std
repnz
or
ret
cwtl
shll
cld
movsl
cmp
pop
movsl
in
sahf
sbb
ss
addb
sbb
hlt
sub
fiaddl
sub
lods
dec
imul
add
mov
sahf
xor
pop
inc
and
ja
clc
push
xchg
xchg
pop
cli
jmp
dec
mov
and
pop
xchg
jmp
repz
sub
xchg
fwait
imul
and
shlb
popa
jae
xor
outsb
fistpll
fisubs
lds
lock
adc
inc
cmpl
daa
xor
daa
cmpsb
cmc
dec
mov
dec
ljmp
imul
mov
mov
in
test
stos
ffreep
cmp
pop
adc
insl
lret
lea
popf
mov
push
sbb
enter
and
les
cmpsl
adc
cmpb
dec
sti
adc
into
push
stos
fcoms
in
pop
aam
or
xor
pop
dec
pop
jge
jnp
loopne
xchg
mov
mov
cwtl
fistl
mov
mov
es
ret
aad
push
adc
pop
adc
rolb
sub
iret
enter
jecxz
cmp
adc
xchg
stc
mov
push
and
cmpl
insb
test
cmp
in
push
subb
mov
xor
and
adc
cmp
dec
inc
popa
clc
out
test
leave
imul
fsubr
nop
sub
jp
xchg
rep
in
std
mov
cmp
cld
es
aad
sub
in
divl
rorb
cmpsl
outsb
in
lahf
mov
ljmp
sub
xlat
cmpsl
add
cmpsb
adc
in
out
xor
push
mov
test
test
add
dec
pop
mov
push
mov
ficoms
jp
cmpsb
xor
jns
rolb
mov
pop
jo
jle
adc
add
pop
mov
mov
in
mov
adc
sbb
leave
pushf
add
popf
inc
aad
cltd
loopne
pop
out
cmp
mov
pushl
push
mov
loope
xor
nop
jno
sbb
in
pop
pop
sbb
movsl
xlat
xchg
sarb
mov
sub
repnz
mov
and
mov
or
dec
lret
arpl
dec
and
jnp
pop
notb
push
test
loope
call
insb
cmp
mov
jno
and
jge
in
mov
push
das
loope
mov
call
xor
shrb
insb
nop
xchg
lds
lea
fwait
lea
push
push
mov
or
pop
xor
dec
sbb
dec
jl
sarl
dec
stos
xchg
jg
jp
int3
cmp
scas
mov
inc
iret
cmp
testb
jecxz
adc
adc
out
cli
lret
imul
shl
outsl
stos
sbb
cmc
movsl
fwait
mov
jmp
cmp
push
js
cmp
or
jle
inc
sti
inc
adc
push
mov
jae
jne
pop
or
addr16
in
fs
inc
fldenv
and
sub
and
xchg
cmp
mov
adc
jge
push
loope
push
out
adc
movsl
or
lods
shr
dec
jmp
ffreep
xchg
jb
xchg
mov
mov
jbe
add
mov
inc
subb
leave
flds
mov
fidivrl
add
fwait
adc
lock
add
jb
stos
pop
movsb
call
ja
sub
stos
pop
pop
aam
rcl
and
lret
test
lret
xchg
jle
push
stc
das
and
add
adc
nop
inc
mov
out
cmpsl
std
lods
fwait
mov
or
cmpb
subb
aaa
sbb
and
push
add
out
sub
mov
fs
mov
jne
mov
icebp
and
add
outsb
jl
pop
cli
mov
push
bound
cmc
mov
pop
scas
inc
insb
cmp
xor
aas
adc
or
lret
xchg
lock
lret
aad
xchg
pushf
filds
rcll
sbb
dec
ja
outsb
jns
lret
cmpsb
das
jecxz
imul
pop
divl
fcomps
adc
repnz
and
loope
inc
mov
fwait
int
fwait
and
out
int
xchg
push
les
ljmp
aas
add
dec
xlat
or
push
sub
jmp
in
arpl
pop
cmp
or
jae
addr16
and
xchg
push
xor
jp
jmp
push
add
repz
mov
imul
adc
cli
sub
hlt
lcall
pop
pop
arpl
in
out
add
test
repnz
adcl
js
mov
nop
xor
test
popa
jb
push
pusha
fstps
cmp
or
arpl
fisttpll
jo
jle
int3
js
pop
cmp
scas
jbe
mov
loopne
mov
cli
push
pop
test
loope
jp
or
inc
adc
and
mov
arpl
mov
and
mov
adc
ja
mov
pop
mov
mov
mov
movsl
outsl
xchg
xchg
testl
jl
pop
mov
xor
mov
pop
pop
dec
push
mov
test
data16
test
lret
xchg
into
mov
cmpsb
inc
sarl
sbb
aad
pop
sub
push
test
adc
aas
mov
mov
add
jl
sbb
mov
ret
shll
jnp
mov
divb
mov
cmpsb
mov
es
out
pop
xchg
mov
das
jg
or
lods
mov
sub
mov
data16
xor
outsb
sub
cmp
mov
inc
jl
lcall
imul
iret
push
pop
out
sbb
mov
insb
out
lods
pushf
and
push
mov
jae
mov
xor
jmp
notb
dec
add
imul
call
jmp
xchg
inc
mov
jne
notb
clc
rolb
adc
movsl
scas
jmp
mov
rcll
dec
lods
js
insb
cs
xor
sti
aam
pop
adc
inc
frndint
inc
test
fsubrl
les
repz
push
shll
les
inc
repnz
mov
das
mov
mov
or
imul
pop
jb
jmp
mov
in
cmp
lcall
pop
push
aam
arpl
cli
mov
inc
adc
popa
mov
pop
jne
xchg
mov
jns
push
jbe
inc
cmp
sub
mov
pop
lret
xlat
xor
sub
loopne
and
mov
aad
cmc
sub
imul
mov
std
enter
mov
dec
sbb
mov
dec
inc
cltd
lret
outsl
pop
and
inc
sbb
sarb
jp
outsl
test
lds
and
ret
out
cmpsl
inc
xchg
movsl
cmpsl
add
stos
inc
ja
stc
cmp
cmp
sub
jbe
arpl
gs
mov
add
mov
sbb
dec
push
lea
inc
out
sub
lds
mov
jb
test
popf
pop
xchg
aam
pop
pop
xchg
movsl
aam
fldenv
xchg
loop
addr16
xchg
mov
pop
xor
pop
fsubr
out
and
ja
fimull
inc
xor
sub
cmp
sub
push
mov
mov
cs
jne
xchg
cltd
xchg
mov
jo
push
not
or
stos
stc
cmp
test
xchg
adcb
es
mov
adcb
and
call
mov
push
add
jae
sub
cmp
mov
xor
leave
cmp
enter
and
icebp
jbe
adc
iret
push
es
jmp
xor
xor
mov
loope
pusha
dec
stc
pop
test
rcrl
clc
jle
aad
insl
xor
nop
add
sbb
pop
ficoms
cmp
in
inc
fildll
shl
sub
int3
shlb
cmp
mov
dec
xchg
dec
sub
ret
and
in
dec
xor
mov
test
fidivs
lock
jg
cmc
enter
in
shrl
cmc
dec
lret
sarl
iret
mov
cmp
mov
mov
dec
push
or
stos
loope
mov
test
pop
bound
test
mov
fnstcw
add
jns
mov
fimuls
dec
dec
add
jl
xor
lock
cmp
cltd
popf
push
push
out
clc
popf
mov
pop
cli
call
push
lea
fisubrs
sahf
push
adc
leave
mov
loopne
shll
mov
aas
in
xor
loope
xchg
dec
mov
lcall
push
sub
stc
inc
pop
in
and
scas
xor
dec
add
xor
in
cmp
test
inc
dec
cmp
jg
and
gs
and
ljmp
pop
adc
test
daa
movsb
sarb
inc
dec
sub
gs
sbb
push
outsl
xor
mov
mov
hlt
jo
cmp
xor
adc
cmpsb
mov
test
cmp
mov
ds
sbb
testb
mov
xchg
xchg
pop
xchg
xchg
repnz
or
stos
dec
and
outsb
sub
pop
dec
icebp
hlt
mov
and
pop
leave
sub
cmp
mov
cmp
sti
mov
js
icebp
out
inc
mov
cmp
dec
dec
fildll
cltd
mov
jno
jo
or
mov
in
add
mov
adc
or
xchg
fbstp
pop
bound
jns
pop
mov
fcompl
fadd
cmp
lret
or
enter
adcb
mov
lea
movsl
lcall
addr16
push
arpl
out
and
stc
dec
hlt
insl
mov
push
je
or
scas
push
mov
aas
icebp
dec
lods
nop
jb
add
insb
push
leave
sub
out
pushf
xor
push
jno
pop
sub
adc
cmp
stos
cld
inc
ja
push
and
and
push
mov
cmp
xchg
add
dec
add
test
mov
imulb
push
sti
mov
inc
repz
in
dec
mov
ret
inc
add
xchg
xchg
jae
rcl
push
test
movb
mov
pop
cmp
mov
into
movsb
movsb
aaa
testl
cmp
dec
dec
mov
addr16
stc
lods
push
arpl
jne
mov
cmp
mov
pop
ja
mov
and
pop
test
xchg
filds
mov
pop
pop
push
sbb
sub
das
mov
fsubl
iret
lods
test
in
jne
mov
mov
xor
and
add
fucomi
jne
sarl
scas
dec
or
lret
stos
test
loope
ljmp
fdivrl
andb
adcb
les
sti
lcall
adc
insb
adc
nop
mov
lods
lcall
stc
das
test
or
inc
pop
std
xlat
lahf
daa
aad
jp
jle
push
arpl
jne
inc
xor
cmpsl
rolb
mov
or
pop
enter
iret
sbb
daa
sbb
por
mov
pop
jge
pushf
adc
mov
push
inc
mov
inc
ljmp
and
or
nop
sbbb
in
jns
shll
sahf
dec
mov
ret
aad
jecxz
and
fsubl
jmp
ret
xlat
mov
and
cmpl
out
subl
xlat
mov
add
dec
pop
jg
add
mov
lcall
lcall
dec
outsb
mov
inc
lret
insl
sub
imul
push
push
clc
loope
adc
daa
cmpsl
jle
cs
ljmp
in
gs
movsb
repnz
into
cs
ret
out
and
mulb
sahf
mov
push
mov
xchg
pop
adc
cmpsl
push
sub
adc
into
or
pop
arpl
mov
and
out
sub
inc
rcr
cmpsl
int
add
jb
in
xchg
xor
adc
pop
pusha
outsb
cmp
xchg
jl
cli
mov
jo
pop
lcall
xor
addr16
inc
fstpl
icebp
mov
inc
jmp
iret
jg
mov
out
ljmp
out
popl
jp
aas
lods
add
jle
jae
out
xor
mov
shlb
fisttpl
inc
test
jns
dec
pop
mov
push
fadds
ret
xchg
out
or
mov
inc
fs
adc
int
xor
daa
pop
dec
sub
int
pop
mov
and
mov
cs
hlt
clc
cmpsl
mov
imul
dec
ficomps
mov
loopne
cli
mov
movsl
xchg
cmc
imul
fcoms
cmpl
adc
xor
pushf
lods
sub
sub
and
stos
out
shlb
imul
imul
xor
stos
xchg
pop
push
inc
cmc
imul
pop
shlb
mov
jbe
call
sbb
ljmp
sbb
cmpsl
jp
out
fistpll
outsl
fwait
jmp
nop
xchg
sarl
push
fldenv
mov
dec
mov
mov
and
std
outsl
push
mov
sub
sbb
push
mov
jns
out
pop
cmpsb
cmp
nop
inc
sub
dec
cmp
push
lret
bound
cmp
cmp
xor
pop
ret
dec
icebp
cwtl
add
std
push
out
dec
mull
pop
mov
add
std
sub
aaa
and
push
jae
mov
pop
imul
push
jecxz
jo
push
andl
push
lds
jbe
fsubl
xor
add
inc
mov
sti
cmp
mov
test
jnp
js
xor
inc
mov
cli
xchg
lret
shlb
insb
mov
rcl
add
xor
pop
jp
loopw
mov
int
push
lock
out
or
popa
in
lea
ljmp
xchg
out
repz
adc
dec
inc
fisubrs
test
cmp
gs
mov
inc
aad
or
xor
pop
mov
inc
add
loop
mov
cmp
or
push
es
icebp
cmpl
into
jbe
sti
in
frstor
xchg
sub
fnsave
add
push
mov
cmpsb
shll
mov
out
dec
dec
dec
sbb
sbb
mul
les
cmp
shlb
inc
fidivrl
dec
mov
lahf
icebp
add
popa
das
push
icebp
and
cwtl
in
test
mov
lock
cmc
mov
and
les
xor
hlt
ljmp
jns
jb
imul
mov
mov
pop
push
aam
jbe
wrmsr
insb
xor
pop
hlt
inc
mov
pop
pop
aam
insl
lock
add
daa
dec
add
dec
int
sub
mov
in
call
sbb
enter
outsl
and
dec
pop
push
test
push
dec
ljmp
pop
push
xor
push
jb
jp
fld
sbb
mov
mov
mov
jge
loop
scas
std
push
movsl
mov
sbb
rcll
mov
iret
xor
or
js
mov
subl
ss
jne
js
stos
push
pop
pop
pop
jge
dec
dec
ja
dec
jle
mov
fists
jecxz
inc
shlb
push
add
pop
out
mov
xchg
daa
xor
addr16
or
sti
xchg
adc
inc
mov
jmp
or
push
loop
sbb
movsl
hlt
cmp
mov
cmc
pop
mov
dec
sbb
in
test
sub
push
jno
std
divb
cmp
dec
pop
xorb
imul
bound
imul
testb
mov
mov
aad
cwtl
les
xor
dec
test
aaa
add
addb
adc
fistl
repz
jbe
ljmp
js
lods
int3
fsts
inc
jmp
xor
xchg
dec
push
lret
pop
dec
inc
ret
sahf
cmp
xchg
test
ds
push
les
icebp
pop
fldl
or
pop
adc
push
add
movsl
and
inc
cmp
jno
sub
nop
js
lret
add
pop
pop
inc
sbbl
mov
cmp
mov
cmpsb
addr16
xchg
mov
out
xchg
les
jmp
std
js
push
push
cmp
pop
stos
xchg
mov
gs
test
add
movsl
repz
test
dec
jp
adc
mov
inc
std
testl
jmp
mov
cmp
ss
and
dec
and
adc
js
in
mov
addr16
add
addl
mov
xchg
cmpsl
sbb
push
or
fisttpl
or
xor
cmp
cli
mov
mov
into
add
and
xor
add
cmp
mov
test
lock
dec
lret
push
inc
sub
mov
aam
outsb
std
pop
mov
fimull
fs
mull
push
xchg
push
mov
adc
iret
cmp
add
je
xchg
mov
xchg
and
push
sbb
jmp
out
lods
jmp
cmp
mov
and
ljmp
mov
arpl
int
xor
xchg
adc
or
je
aaa
out
loope
sbb
mov
or
xchg
int
push
in
imul
dec
pop
call
fs
lret
mov
sarb
mov
inc
iret
les
sub
lods
add
fisubrs
sti
test
pop
cmpsb
fwait
jnp
in
and
jb
xchg
inc
mov
mov
subb
cmp
push
roll
into
cli
mov
insl
cmc
in
loopne
adc
and
aad
pop
test
mov
aaa
xor
jl
push
stos
cmp
ds
jb
pop
add
nop
pop
xor
ja
push
out
xlat
decl
fnsave
pusha
xlat
shrl
fsts
cld
xor
jg
pop
push
push
iret
mov
inc
out
inc
xor
jns
and
cmp
and
lods
push
add
dec
rolb
mov
lret
lods
testl
enter
scas
xlat
ret
fwait
jmp
push
and
fs
mov
sahf
lret
dec
icebp
ret
or
cmp
cltd
fnstenv
call
aad
adc
aas
ret
xchg
shll
data16
js
in
jmp
xor
sub
xchg
pop
sbb
stos
pop
push
popf
mov
cmp
adc
divb
call
add
push
cli
rorl
repz
pop
fidivrs
inc
lds
pop
lds
jle
push
int3
add
mov
mov
jl
sbb
xor
dec
mov
xor
incl
aad
and
scas
enter
leave
arpl
and
rcrb
mov
test
pop
mov
mov
mov
cmp
xchg
sub
pop
sahf
ja
movsb
xchg
das
orb
lcall
and
repz
pop
mov
inc
stc
out
inc
sub
insb
cld
mov
stos
ljmp
or
push
jl
mov
fdivs
sbb
daa
pop
cmovbe
jb
out
popf
mov
repz
pop
rol
adc
sub
popa
mov
inc
fst
cs
add
pop
ret
sbb
xchg
pop
and
pop
mov
and
pop
adcb
jb
sarb
sti
cld
inc
mov
mov
shll
and
loop
ret
sti
or
stc
sahf
push
or
xlat
jno
mov
out
and
std
inc
loopne
fnop
dec
andl
addr16
lds
sti
cltd
cli
out
push
jns
mov
js
cs
or
loop
mov
xchg
sub
insl
push
fnsave
test
call
sub
jno
add
xor
insl
test
lcall
cli
push
test
pop
aam
xor
or
movsl
sbb
movsb
sbb
ja
bswap
into
sub
adc
popf
cmp
sti
aad
imull
out
int
imul
repz
int3
dec
cld
inc
mov
mov
pushf
xchg
push
or
jmp
xabort
js
and
lret
out
mov
xor
sbb
sbb
in
push
xor
jnp
clc
pushf
js
jle
xor
lahf
cmc
test
dec
mov
rclb
sbb
int
fs
xor
aam
out
testb
mov
into
cmp
push
sti
jg
in
jnp
adc
in
push
xor
daa
das
push
mov
sub
aam
mov
mul
lods
je
dec
mov
call
inc
cmp
shrb
pop
mov
cmp
lds
rcrb
xchg
sub
xchg
inc
adc
insb
aaa
int3
fildl
sbb
adc
lret
decb
xlat
mov
loopne
into
add
jecxz
lcall
jl
dec
adc
jae
imul
push
pop
jnp
dec
inc
outsl
lods
adc
int
stos
push
add
jecxz
cmp
push
outsl
mov
xchg
or
inc
and
jl
dec
popf
cmp
push
push
daa
dec
cli
adc
inc
or
xchg
dec
ss
loop
cmp
pop
jo
add
mov
movsl
jae
test
jae
mov
test
jbe
int3
enter
jecxz
loope
adcl
sub
call
flds
mov
sub
and
inc
sub
push
cmp
ret
cmc
xchg
dec
xchg
iret
dec
pop
repnz
rclb
push
push
es
push
cli
xor
xor
mov
xchg
xor
jg
in
xor
shlb
xchg
repnz
sbb
xchg
sbb
adc
xor
clc
popf
test
sbb
dec
insl
xchg
push
jnp
push
add
xchg
test
mov
and
add
inc
or
xlat
imul
fs
sbb
xor
cmpsl
fsubrs
outsl
aam
incb
into
xchg
pop
test
ret
dec
aam
jecxz
addl
mov
call
mov
into
xchg
mov
xchg
xchg
mov
inc
je
cmp
out
bound
out
or
and
out
fsubrl
hlt
jo
icebp
popf
xchg
pop
jl
adc
mov
stos
outsl
mov
add
xacquire
stc
sti
lds
dec
roll
or
mov
jno
push
dec
lret
and
shr
lea
hlt
loop
fsubrp
push
dec
imul
sub
sbb
dec
jg
cmp
fs
mov
out
or
or
fs
add
test
push
push
test
daa
mov
loop
cmp
rcrl
push
inc
pop
inc
xchg
insl
push
aaa
mov
push
jl
inc
jp
mov
mov
mov
leave
dec
ret
inc
jo
je
loop
xor
push
sbb
fdivl
loop
dec
push
data16
mov
jge
or
iret
negb
jl
jns
lret
pop
test
jne
icebp
mov
adc
and
scas
sbb
das
enter
inc
xor
in
jg
jge
shl
xor
mov
mov
and
push
cltd
add
fstl
mov
aam
scas
xor
clc
mov
or
lea
mov
mov
mov
sbb
les
add
leave
xor
lret
jmp
in
xlat
or
test
xchg
sbb
pop
mov
pusha
cmp
add
sar
lds
push
fdivs
sbb
sbb
mov
cmc
nop
js
pop
fidivrs
adcb
not
mov
push
mov
fs
clc
and
inc
ja
add
arpl
adc
pop
cs
rcll
jb
jne
xchg
mov
testb
mov
iret
pop
sbb
mov
shrl
cmpsl
xchg
out
ss
dec
sub
fadds
lods
in
out
in
dec
aam
ret
roll
sub
pop
push
mov
inc
mov
and
shll
mov
dec
pop
dec
das
cmp
jg
and
pop
pushf
jb
and
scas
scas
xlat
ss
test
arpl
or
out
orl
pushl
clc
icebp
mov
pop
sub
inc
xor
sarl
cli
das
fnstsw
push
mov
push
mov
shl
dec
adc
dec
push
iret
lea
inc
dec
cltd
shll
cwtl
sahf
inc
xor
testb
pop
jl
in
mov
imull
mov
xchg
adc
cmp
sbbl
push
jo
sbb
addr16
scas
out
push
adc
clc
mov
mov
ficoml
adc
sbb
sbb
cmp
or
push
xchg
push
push
mov
aad
xor
test
cmp
adc
cmp
fcomps
pop
filds
sahf
lods
xor
or
ds
cmp
and
or
inc
sbb
jnp
and
test
jmp
jmp
shl
mov
outsb
lods
jl
pop
sbb
add
push
xor
ret
aaa
aas
xor
jg
xor
sarl
jbe
arpl
jae
jmp
sbb
inc
and
and
cmpsl
mov
pop
mov
or
addr16
adc
cmc
mov
adc
mov
ret
fidivrl
daa
in
lret
mov
mov
aad
and
pop
loop
jle
data16
mov
or
push
add
sbbl
inc
into
fsubl
add
inc
ljmp
xchg
imul
je
arpl
xchg
add
fiaddl
xchg
or
daa
adcl
in
sub
iret
nop
add
out
push
mov
outsl
ss
fidivl
lea
pop
cld
mov
ljmp
stc
jno
ja
mov
inc
imul
lock
xchg
add
fs
push
pop
sub
mov
shr
jl
add
sahf
jb
adc
sub
dec
out
pop
scas
jne
js
shrb
or
hlt
cmp
inc
clc
dec
in
cmp
mull
dec
addl
cmpsb
add
stc
imul
push
mov
or
xlat
nop
push
aam
popf
xor
sub
jp
test
cmp
inc
in
add
inc
sbb
popf
negl
nop
ja
mov
push
mov
inc
dec
inc
jecxz
clc
sub
sahf
xchg
movsl
sbb
cmpsb
arpl
and
sub
js
stos
ret
inc
repnz
mov
push
pop
pushf
or
or
mov
mov
mov
inc
in
cmp
xor
mov
lods
mov
aad
adc
sub
lea
leave
mov
outsb
cmp
xchg
cmp
outsl
ds
xchg
xchg
les
xchg
lahf
stos
inc
mov
xchg
mov
or
ss
dec
addr16
clc
xchg
in
jnp
jecxz
idiv
movb
xor
sub
sbb
xlat
mov
inc
or
push
cmpsl
add
and
xchg
scas
mov
iret
push
test
mov
sub
cmc
cli
iret
xor
mov
mov
lea
test
aaa
imul
pslld
and
sbb
insb
lods
xor
pop
lods
mov
cld
pop
inc
je
mov
lcall
in
fdivs
sbb
movsb
mov
adc
xchg
aam
inc
gs
and
cmp
enter
mov
or
inc
arpl
andl
aad
xchg
adc
cwtl
imul
mov
sub
or
dec
mov
mov
inc
ja
mov
xor
fcomp
add
xor
cs
xchg
adc
lea
imul
jg
pop
mov
dec
aad
mov
addr16
mov
cmp
fmul
repz
shrb
lret
xchg
ljmp
mov
sub
and
out
jno
sar
mov
loope
enter
imul
mov
cld
das
addr16
jp
jbe
cmc
loope
add
push
push
insb
inc
lahf
inc
push
xlat
jb
fpatan
sbb
sbb
dec
nop
mov
loopne
lods
ljmp
push
or
add
or
jl
mov
or
push
pop
pop
and
xchg
mov
push
push
aaa
aad
mov
mov
aad
loopne
inc
mov
arpl
add
jmp
into
imul
xlat
test
stc
popf
jle
pop
and
leave
in
jae,pn
push
aad
fisubs
rorl
call
jb
dec
shll
fs
dec
das
push
pusha
jne
out
inc
fwait
cwtl
xchg
adc
jmp
rcll
cld
dec
sub
xchg
iret
popf
outsl
lcall
mov
mov
clc
push
int3
mov
aad
pop
push
jmp
jge
xor
popl
sub
aam
popa
stc
iret
fnstsw
pop
mov
stc
leave
add
cmpsl
fldenv
add
sub
mov
das
fdiv
cmp
cmp
or
out
aad
adc
dec
fnstcw
and
xor
lret
jb
hlt
fadds
lock
push
and
jg
adc
and
lds
jb
mov
dec
stos
ja
push
pushf
dec
in
icebp
enter
pop
or
repnz
push
nop
arpl
sbb
pop
call
insl
outsl
pop
movsl
leave
sbb
ja
dec
inc
das
stc
xchg
jo
cltd
cmp
ljmp
adc
pushl
xlat
add
inc
mov
lods
sub
jl
jae
ljmp
sub
or
and
jo
inc
push
dec
xor
adc
xchg
inc
inc
mov
lock
mov
jg
mov
js
xor
rep
or
cmp
push
fcomi
negb
pop
jecxz
jge
sbb
mov
mov
sarl
cmpsb
shufps
in
movsb
sub
mov
pop
jg
and
pop
push
jo
nop
and
dec
mov
mov
mov
sub
inc
jbe
lea
xor
stos
xor
add
cmpsb
jmp
mov
cltd
push
mov
xchg
push
pop
push
sub
mov
dec
shrb
jmp
pop
adc
es
shlb
or
in
lds
add
cmpsl
xor
mov
test
stc
jnp
cmc
xchg
sti
das
into
scas
out
out
mov
jecxz
fcoms
mulb
out
push
ljmp
mov
js
pop
fildl
inc
data16
jle
cmpsb
fcmovnbe
lock
test
mov
mov
test
jno
and
cli
insb
in
xor
imul
cld
xchg
cwtl
cmp
mov
jmp
loopne
or
cmp
and
movl
nop
arpl
aas
enter
pop
xchg
jo
or
push
leave
xor
push
fistpl
pop
outsb
push
negl
mov
cmpsb
cmc
adcl
xchg
cs
adc
push
inc
shll
xor
xlat
and
idivb
sti
mov
mov
cmc
cmp
pop
adc
mov
les
cmpsb
push
xchg
add
ds
out
sbb
cli
outsb
xchg
scas
lret
mov
movsl
rcll
mov
stc
dec
test
pop
cld
lds
cmp
jmp
jno
inc
fdivrl
jge
or
mov
mov
cmpsl
sbb
mov
les
lret
ds
xor
les
xchg
call
dec
fldenv
cmp
mov
clc
mov
pop
mov
mov
pushl
and
aad
mov
iret
stos
clc
icebp
aaa
dec
or
arpl
pop
cmp
jnp
jge
ds
xchg
xchg
loope
rcrl
or
addb
and
lret
and
lret
and
ficomps
or
mov
cli
push
stos
out
cltd
aaa
mov
cmp
or
inc
dec
movsb
push
dec
outsb
add
mov
add
das
jp
or
fwait
daa
mov
mov
inc
jp
jae
inc
xor
mov
adc
sarl
test
sahf
ret
stc
fbstp
jle
push
adc
ljmp
jo
mov
or
fldt
mov
and
sbb
xchg
cmpsl
bound
scas
rclb
aad
push
inc
shll
mov
jno
leave
mov
push
js
mov
mov
imul
repnz
or
aad
inc
loope
arpl
xchg
xchg
lock
js
adc
lea
clc
fldcw
or
push
and
cmpsb
push
xor
jg
imul
inc
sbb
addr16
jbe
xchg
insl
inc
push
sbb
xchg
mov
or
push
add
and
or
je
dec
fisubrs
mov
faddl
aas
xchg
leave
adc
clc
mov
lods
xlat
dec
gs
sbb
pop
leave
scas
lock
test
push
into
xchg
push
pop
adcb
xchg
int3
pop
lahf
or
ret
cmp
jb
addr16
push
inc
fs
sbb
cmpl
fistps
xchg
ljmp
add
insb
fnstsw
pusha
jle
lea
and
xor
inc
xorb
int3
lods
mov
ss
push
inc
mov
mov
ficoms
adc
inc
cld
ja
add
cmpb
add
mov
jp
mov
addr16
jl
adc
ret
leave
and
loopne
fcmovne
popa
call
fdivrl
mov
cmp
imul
mov
bound
fisubrs
lcall
push
sub
xchg
daa
dec
jb
adc
stos
xlat
mov
mov
adcb
xchg
mov
pop
ja
das
xchg
jnp
lea
movsl
icebp
sub
movsb
lret
jg
dec
or
inc
jbe
mov
hlt
mov
jmp
fidivl
stos
sti
dec
stc
jne
aad
mov
sub
into
adc
push
arpl
pop
cli
lret
jge
repz
mov
mov
xchg
push
fcom
sub
roll
test
xchg
incb
es
jl
fwait
adc
mov
bound
fistl
add
jecxz
imul
das
or
insb
lahf
rcr
cmc
sbb
into
inc
mov
mov
lret
mov
mov
hlt
inc
imul
lret
ret
mov
nop
jle
mov
std
nop
xchg
test
ljmp
into
in
scas
mov
shlb
inc
popaw
movsl
mov
adc
cmp
mov
pop
dec
ds
dec
pop
sub
add
lcall
vmwrite
lods
imul
ret
xchg
shlb
push
xlat
dec
or
outsb
pop
mov
leave
sub
jbe
movsb
data16
sbb
stos
add
dec
mov
mov
testl
xor
inc
push
push
sbb
inc
jnp
push
xchg
jp
das
pop
inc
cld
xchg
pop
adc
adc
push
insl
in
adc
and
dec
xor
movsb
add
les
outsl
fsubrs
in
mov
sbb
and
xchg
xor
xchg
je
jne
xor
pop
mov
out
jecxz
xchg
aas
roll
push
inc
and
dec
fimuls
push
iret
std
mov
xchg
lret
repz
int
out
inc
ljmp
stos
test
cltd
cmc
xor
xchg
xchg
xchg
pusha
int
xchg
outsb
mov
std
mov
add
inc
stos
ja
fsubl
xchg
adc
aas
cmp
mov
mov
sub
sbb
fldl
rorl
adc
inc
ret
fisttpll
xchg
ss
clc
and
sbb
int3
xchg
iret
loop
cmp
pop
add
xchg
popf
fwait
mov
fwait
sbb
pop
int
ror
push
add
sahf
mov
pushf
hlt
jne
mov
lcall
or
cli
xchg
test
and
test
adc
mov
mov
mov
pop
lcall
sbbb
iret
rorl
mov
xor
vphadduwd
js
xchg
sarb
bound
jp
pop
xchg
es
test
cmp
jne
sub
mov
xor
push
out
inc
mov
ds
jg
movsb
aam
loop
ret
cmpb
jno
mov
xchg
insb
ss
scas
mov
mov
addl
jecxz
lret
stos
sbb
xchg
add
push
cmp
pop
in
popa
jg
das
or
xorl
jg
or
enter
testb
inc
fdivrs
lahf
fs
movb
movsb
mov
add
shll
call
aaa
insl
xchg
jno
jmp
std
stc
fstl
enter
or
mov
pop
and
std
push
jne
dec
sarl
mov
clc
ret
add
xchg
inc
pop
clc
pusha
push
push
xor
outsl
xlat
adc
push
inc
pusha
or
mov
jae
lcall
andb
mov
cmp
fdivl
pop
cmp
shlb
in
jmp
sbb
std
lock
xor
mov
inc
or
xchg
dec
and
fwait
pushf
xor
mov
xor
imul
push
mov
mov
cmp
add
and
inc
in
or
cs
sbb
jb
pop
ret
adc
sbb
fcompl
mov
cmp
xor
mov
lret
cmpsb
mov
fisubrl
gs
scas
insb
ror
imul
in
repz
lods
xor
aad
adc
sub
sbb
rorl
insl
pushf
fnstcw
aaa
or
pop
fdivrl
sbb
fsubr
pop
sub
repz
movsb
or
push
inc
roll
or
fs
lret
test
pop
jg
push
imul
cli
addr16
mov
jge
movsb
in
stos
sbb
mov
cmp
xchg
jle
stos
stos
loope
mov
mov
loope
push
cmp
fwait
rorl
xor
pop
jmp
dec
mov
test
int
hlt
scas
xor
dec
add
testl
cwtl
or
icebp
ss
xchg
cltd
jo
fstl
mov
loope
fnstsw
movsl
mov
cmp
xorl
or
adc
hlt
popf
pop
cs
jb
ret
dec
arpl
sbb
mov
mov
inc
mov
and
int3
mov
in
std
inc
sub
mov
out
leave
pop
dec
xchg
sub
xor
fcompl
psrlq
pusha
adc
cli
fisubrs
test
data16
loopne
aas
sub
mov
mov
adc
mov
aaa
dec
outsb
lds
lock
push
fcoml
or
imul
jecxz
jge
push
jecxz
pop
test
pop
fsubrl
push
push
into
test
cld
cmp
xor
out
mov
js
fstpt
pop
lahf
lods
enter
or
mov
sub
xchg
jle
ss
push
lret
add
pop
adc
int3
leave
repz
subl
pop
popa
jbe
js
ret
das
movsl
pop
test
scas
add
jno
pop
inc
arpl
movsl
les
inc
pop
jmp
pop
xchg
sub
mov
xchg
xchg
jl
les
pop
and
push
dec
or
outsl
lcall
test
icebp
or
mov
pop
pop
jno
dec
push
push
aas
lock
imul
sti
or
fistpl
divb
or
adc
inc
test
aam
add
inc
icebp
fwait
sub
sahf
push
pop
outsl
ret
repz
mov
inc
and
adc
add
test
popf
xchg
mov
pop
stos
ret
sub
addl
insb
sub
add
lea
dec
mov
cmp
arpl
and
fs
xchg
sti
sarl
add
xchg
clc
ds
lret
dec
mov
int3
lret
push
add
pop
jns
ss
jge
test
sub
sbb
leave
push
push
movsb
dec
cmp
movsl
in
call
xor
xchg
lret
fs
sub
mov
ss
xchg
mov
fisttps
in
es
jmp
mov
scas
dec
into
repz
adcb
aas
data16
jmp
mov
sbb
call
mov
sub
pop
stc
push
sbb
mulb
dec
scas
arpl
push
ror
jl
pop
push
sbb
fs
push
jns
jmp
call
sub
js
push
js
fwait
mov
sbb
inc
xor
shl
pop
mov
cmp
push
xor
add
sub
std
outsl
lods
mov
sbb
ss
ljmp
mov
aad
pop
add
and
jae
scas
imull
cmpsl
out
lret
cmp
cmp
sbbl
pop
mov
dec
sahf
cmp
mov
inc
mov
lock
ss
stos
cmp
icebp
jno
jl
lods
mov
jle
scas
leave
mov
ja
outsb
jecxz
subb
lea
icebp
xor
xchg
lds
loop
mov
pop
sub
and
lea
fsubl
push
nop
cmp
test
cmp
in
into
sbb
mov
loope
in
sub
xchg
cwtl
ss
sbb
push
aaa
mov
mov
fcomip
mov
jo
pop
out
rclb
push
push
sub
xor
in
test
add
bound
fs
cmp
negb
jge
lock
xlat
mov
xor
lahf
xchg
fbld
cmc
jl
ret
adc
jle
imul
shrb
cmc
dec
add
in
pop
call
sbb
push
cltd
mov
push
sbb
sub
push
mov
add
adc
sub
jae
mov
dec
or
push
push
mov
test
pop
test
mov
sub
dec
aam
adc
popa
out
fs
outsb
les
push
inc
enter
iret
call
icebp
lock
push
xchg
addb
pop
pop
sub
mov
lahf
and
rcrb
ret
ds
xor
mov
cmp
cltd
pop
mov
pop
jmp
imul
fst
inc
ss
mov
jg
out
mov
pop
sub
mov
int3
mov
xchg
or
leave
inc
sarb
or
dec
cli
pop
or
sub
loopnew
push
mov
inc
rcrb
ret
adc
inc
push
mov
add
push
push
aas
fildll
and
jno
stos
loope
test
inc
or
jns
and
aaa
xchg
pop
fsubl
in
jnp
push
fstps
movsl
rcr
pop
nop
inc
xor
adc
xor
add
sbb
jg
pop
push
mov
and
mov
and
mov
jae
xchg
inc
scas
sbb
mov
sbb
pop
scas
adc
mov
popa
pushf
in
les
movsb
in
xor
jle
gs
mov
mov
fs
mov
movsb
xchg
xor
pop
je
int3
xor
fldenv
jae
push
push
fcmove
rcl
pop
adc
adc
cli
inc
les
cmpsl
sarl
jae
or
or
dec
daa
push
mov
notb
sbb
nop
outsl
jg
std
sahf
mov
std
jns
scas
fdivr
mov
cmc
out
ljmp
sbb
inc
jg
inc
daa
sbb
and
cmp
push
nop
pop
push
jo
pop
push
mov
fs
and
dec
test
lods
out
sub
sub
enter
mov
out
insb
pop
jl
loop
push
in
mov
not
push
cmp
lret
cmp
es
fldt
fwait
loopne
decl
outsl
sarl
lea
jge
pop
ds
pushf
add
aaa
data16
jg
jle
stos
stc
and
push
es
lahf
popf
dec
mov
inc
sbb
into
aam
and
pop
jg
sahf
ret
lods
sahf
outsl
std
aam
push
imul
adc
xor
adc
sbb
int3
xor
dec
aaa
and
sub
les
jl
mov
sarb
dec
addr16
test
das
dec
notb
sub
lock
fiadds
iret
jno
in
addr16
jbe
pop
mov
xor
or
adc
push
scas
cltd
sub
sub
out
inc
hlt
adc
scas
ljmp
xchg
call
mov
mov
xor
add
rclb
or
loop
sub
jl
inc
orl
mov
cmp
xchg
dec
rorl
cmp
sahf
mov
inc
rorb
xchg
pop
fld
insl
xor
dec
into
daa
ljmp
mov
xchg
add
fsubrl
shrb
sub
mov
ds
mov
lret
push
test
mov
cltd
mov
lcall
rcr
stc
out
ja
jle
pop
jb
sbb
es
cmc
lea
mov
daa
pop
inc
into
jle
fadd
xlat
add
imul
adc
fidivrs
cmp
jb
dec
dec
frstor
es
add
pop
mov
pop
sub
inc
add
scas
testl
mov
mov
xor
loop
lds
dec
xchg
adc
inc
or
leave
out
cwtl
clc
cltd
mov
push
outsb
and
mov
dec
out
ret
cltd
std
inc
mov
mov
and
bound
enter
int3
fadd
or
pop
pushf
dec
cmp
xor
xchg
scas
dec
call
out
push
ret
aaa
mov
nop
mov
mov
rclb
lods
popf
aad
mov
mov
xor
sub
xor
scas
gs
test
xor
cmp
js
ret
xchg
ljmp
xchg
cld
jmp
inc
repnz
push
push
std
jbe
shrl
and
popa
cmp
fisubrs
mov
add
std
jns
addr16
fldl
rcrl
mov
negl
push
scas
test
adc
sbb
outsl
push
push
xchg
cmp
fld
sbb
push
cmpl
inc
les
rcrb
xor
cmp
jbe
scas
push
test
stc
inc
lods
jl
cmpsl
mov
popf
mov
in
shrl
es
pushf
cltd
testb
fisubl
arpl
dec
and
shrb
or
test
ret
jmp
nop
push
sbb
sub
mov
iret
sub
fcoml
test
inc
cmp
ljmp
push
leave
xor
lret
cmp
adc
and
xchg
paddusb
add
inc
movsb
gs
pop
jmp
inc
popa
out
out
cltd
push
mov
and
daa
popa
xchg
pop
test
mov
inc
test
xchg
repnz
cmp
pop
adc
xor
inc
nop
in
mov
or
cmpsl
pop
add
clc
mov
xchg
loopne
leave
inc
xchg
ja
mov
and
out
scas
lea
pop
enter
insb
push
jg
sbb
dec
pop
mov
pop
cmp
mov
mov
push
xchg
out
int3
fiaddl
gs
xorl
inc
mov
xchg
push
inc
jle
jae
divl
loope
aam
das
int3
jnp
imul
dec
pushl
cmp
jl
nop
jb
pop
rcrl
adc
adc
lret
cmp
stos
pop
fwait
out
repz
inc
out
mov
cmp
mov
mov
pop
xor
imul
cmc
fisubs
or
jge
rol
mov
mov
xchg
stos
cwtl
adc
rorb
pop
idivb
xchg
loope
mov
int
push
inc
sub
push
jb
xor
pop
cmpsb
out
xchg
mov
ret
out
loop
jp
inc
rcrl
and
push
cmp
and
jo
sbb
or
sbbb
shl
rep
pop
pop
xchg
out
call
xchg
jbe
loopne
cld
push
outsb
adc
lret
jp
or
xchg
fnstcw
sbb
xorl
divb
cmc
push
rorb
ud2
in
daa
popf
jg
popa
mov
jle
adc
lret
jnp
addl
mov
mov
or
mov
faddl
inc
and
and
imul
sbb
adc
mov
je
inc
movsl
sbb
scas
cmp
sbb
add
decb
test
or
in
mov
jp
shlb
pop
pop
xchg
lods
add
mov
lret
repz
adc
clc
fisttpl
repnz
sbb
xor
xchg
mov
rcrl
fs
ljmp
push
xchg
mov
cld
or
xchg
or
into
or
test
faddl
out
lods
xchg
push
jnp
adc
dec
xor
push
mov
out
mov
popf
cmp
pusha
test
dec
ss
sahf
arpl
inc
dec
loop
sahf
inc
dec
mov
dec
nop
mov
xchg
mov
mov
sub
xchg
jb
xor
out
and
mov
mov
pop
loope
hlt
push
inc
lds
cltd
ja
mov
dec
and
cwtl
mov
repz
xchg
lods
or
cld
in
mov
pop
mov
das
push
int
xchg
mov
daa
movsb
cmp
inc
repnz
arpl
popf
in
or
arpl
jnp
xor
mov
adc
sub
cmpsb
sbb
lods
jbe
ds
jne
sbb
xchg
mov
testb
jno
int3
out
inc
xchg
add
pop
add
push
xchg
in
sub
stos
lock
mov
aad
repz
mov
cmpsb
sub
mov
mov
pop
stc
cmc
out
mul
in
lods
lods
ret
mov
cmp
data16
loopne
dec
cwtl
cmp
push
out
push
aaa
xchg
lahf
inc
loope
pushf
jbe
test
ret
pop
fsubr
cmp
inc
fistl
lods
dec
sub
dec
test
or
cli
xchg
cmpsl
sub
outsl
shl
iret
add
repz
xor
dec
pop
mov
mov
imul
or
cmp
inc
or
adcl
ljmp
cmp
sub
and
pop
cmp
mov
mov
push
leave
cld
pop
fistpll
mov
sub
fcoml
jl
scas
dec
int
add
jno
in
insl
loope
push
sub
xchg
int
in
cmp
aas
or
xchg
js
sbb
xor
shlb
sub
lcall
aad
bound
sbb
jo
xor
insl
loopne
sbbb
sti
shlb
add
out
dec
jecxz
popa
rcll
mov
pop
lods
add
shlb
stc
addr16
insl
xchg
cmp
or
inc
dec
mov
adc
insb
pop
sbbb
cmpsl
imul
pop
test
xchg
sbb
sahf
push
and
and
pop
mov
sbb
insl
jo,pt
add
add
mov
outsb
cmp
or
daa
push
gs
jno
xchg
outsb
stos
sub
pop
mov
xor
push
inc
mov
movsb
movsl
xor
cmp
fbstp
mov
lock
mov
subl
cmpsl
pop
arpl
add
insl
out
test
push
xchg
test
js
inc
and
hlt
adc
jp
jb
mov
arpl
jo
leave
movsb
mov
popa
hlt
cmc
mov
cwtl
sbb
leave
addr16
dec
in
and
adc
mov
faddp
faddl
daa
cmp
jg
test
daa
jg
adc
std
adc
xor
add
lret
sti
push
mov
or
and
loope
push
xchg
jno
jle
push
push
jg
pop
mov
testb
out
jnp
adc
into
sahf
test
mov
or
xchg
jns
popa
push
loop
mov
fwait
aas
or
pop
mov
xor
pop
sbb
xchg
xor
mov
jl
xchg
hlt
dec
dec
aad
sbb
sub
push
mov
xchg
addb
dec
test
mov
inc
lahf
pop
lods
adc
std
cmpsb
pop
adc
or
out
js
and
int
sti
xchg
push
xor
in
sub
cmp
mov
clc
cmpsl
loop
sbb
adc
mov
ds
insb
cmp
mov
xlat
jmp
fcomp
xor
mov
test
mov
pop
sub
jl
leave
xchg
f2xm1
inc
ficoml
mov
mov
and
and
lahf
sbb
mov
addr16
in
lea
mov
lret
mov
pop
jmp
fs
out
mov
inc
or
cmpsb
mov
add
repnz
rcrl
fdivrs
loopne
cmpb
mov
mov
inc
jl
push
jecxz
xorl
mov
mov
int3
roll
ret
jmp
sub
and
bound
repz
xor
fcompl
sbb
aas
imul
fistps
jmp
add
mov
jae
jnp
pop
sub
lret
or
std
jno
fldenv
jno
cmp
in
out
jns
adc
les
int
xor
std
fs
and
subl
cs
andl
fisttps
pop
jb
mov
loopne
testl
cmp
into
xchg
in
cmp
jbe
mov
sub
loope
cli
clc
aam
jne
xchg
cltd
or
addl
stc
andl
scas
mov
cmp
pop
pop
std
push
inc
jbe
dec
call
es
mov
fidivl
cs
adc
out
in
sti
nop
icebp
xchg
inc
aad
add
add
push
inc
int3
jb
lahf
dec
lret
sub
fdivrs
test
inc
xor
enter
jecxz
push
cmc
add
dec
and
sub
xor
sub
push
adc
movsl
sbb
fisttpll
inc
xchg
int3
clc
inc
data16
sub
pop
sbb
imul
pop
sarl
jp
and
or
loope
jecxz
sbbb
sub
int3
aas
jmp
add
xor
push
mov
cs
hlt
and
jl
jl
testb
inc
xchg
cli
xchg
pop
imul
fnstcw
add
into
mov
mov
sbb
mov
xchg
addr16
test
push
add
aad
pop
push
sbb
cmpsb
ja
push
addr16
call
sahf
xchg
jns
xor
adc
and
data16
mov
cmpsl
xchg
sbb
pop
pop
jne
cmp
fisttpll
test
mov
gs
sub
flds
lock
add
fwait
cli
mov
cmp
out
push
cld
cmpsb
rolb
movsb
mov
ret
stos
pop
adc
cltd
push
ret
xor
ds
loop
fdivrs
mov
movsl
pop
movsl
pop
jo
in
jg
and
and
stos
mov
hlt
out
loope
mov
test
sbb
shl
dec
pop
aaa
push
dec
mov
scas
fs
jecxz
scas
push
cmpl
les
adc
add
mov
push
flds
or
pop
movsl
pop
jb
test
jg
sti
test
jns
xor
xor
adc
and
ljmp
xchg
cli
xchg
pop
push
push
sahf
xchg
ds
daa
cwtl
add
push
mov
mul
push
pop
sub
cmp
mov
int3
pushf
cltd
sbb
sahf
jp
insl
stos
mov
test
movsb
jne
repz
sbb
jmp
fucomip
fcoml
setbe
sub
scas
pusha
pop
rcll
rclb
sbb
addr16
inc
in
xor
je
and
sar
fisttpll
dec
xchg
data16
mov
jg
sub
xchg
outsb
lods
add
sar
cmp
out
sbb
add
add
mov
push
cmp
add
in
aam
xorb
pop
mov
enter
ljmp
xor
inc
test
shrl
aas
xchg
push
adc
cli
adc
mov
jmp
popa
inc
shll
cmp
into
mov
adc
lods
scas
sub
inc
flds
cmp
jns
push
cmp
sbb
aas
jge
and
push
imul
addr16
xchg
adcb
jl
push
arpl
adc
or
mov
lods
or
cmc
out
popl
add
jne
mov
std
push
xchg
or
fists
gs
xor
loope
les
sbb
add
adc
aam
fldl
dec
push
mov
or
nop
aam
xchg
sbb
inc
sub
inc
lea
push
mov
push
jb
in
shr
inc
add
int
popf
pop
leave
xchg
mov
imul
out
lret
mov
push
sbb
mov
pop
mov
add
cmp
shl
je
mov
roll
push
cwtl
adc
scas
int
or
ret
fidivl
jno
mov
push
pop
mov
int3
push
push
or
imul
rolb
mov
jmp
xchg
mov
inc
lret
sar
test
mov
iret
les
ret
leave
jne
mov
mulps
dec
rcr
imul
jle
pop
pop
xchg
movsb
sbb
dec
addr16
xchg
mov
dec
jp
push
pop
jae
adc
sbbb
mov
mov
jl
push
je
push
lret
dec
test
cld
push
fildll
int
loop
add
or
in
outsl
rcl
add
popf
mov
js
loopne
mov
adc
mov
jl
push
loop
icebp
fistpll
sub
leave
je
jns
xor
imul
pop
inc
clc
cmp
or
out
fcoms
scas
cmc
arpl
mov
shll
sahf
adc
pushf
mov
pop
aam
dec
mov
cmpsb
bnd
in
xor
sub
nop
lret
mov
lret
scas
push
call
jmp
mul
pushf
pushf
mov
cmp
lcall
sub
cli
ja
sbb
cmpsb
jns
mov
dec
sub
fstpt
jl
std
and
cmp
dec
sti
ds
jl
and
out
enter
hlt
or
call
jecxz
add
movsl
ljmp
std
jnp
push
inc
jb
loop
in
and
sahf
fmul
dec
add
jb
test
jecxz
dec
aaa
inc
lods
xor
repnz
sub
add
aad
cmp
daa
test
cmovl
cmp
les
and
push
adc
push
aad
call
cltd
mov
inc
push
xor
ljmp
in
loope
or
pop
lea
sub
repnz
xchg
and
fimuls
cmpsl
das
mov
mov
jg
xchg
out
mov
mov
test
cmp
outsl
ds
lods
imul
lcall
roll
jnp
dec
xchg
mov
into
call
xchg
dec
or
mov
hlt
inc
test
adc
int3
add
ficompl
int
mov
push
negb
sti
xchg
lahf
test
test
dec
push
out
add
mov
shrb
ja
sbb
mov
dec
out
jnp
and
stc
je
or
stc
mov
pop
sarb
sub
cs
pop
scas
mov
pusha
or
jge
shr
inc
xchg
adc
pop
aam
push
ret
xchg
sub
cltd
xchg
movsb
sbb
or
int
push
mov
add
fists
hlt
sbb
push
je
repnz
xlat
xor
add
jmp
ss
or
push
add
in
aam
imul
insl
jbe
aas
mov
stos
psubd
dec
jbe
xchg
add
fcoms
stos
outsl
in
lret
pop
mov
out
jp
sub
lock
push
icebp
jne
into
out
ljmp
inc
pop
outsb
in
lods
adc
xor
sbb
jb
inc
jae
repnz
movsl
enter
sub
push
xor
xchg
sub
xorl
push
aad
les
inc
adc
lds
mov
mov
out
iret
dec
cmc
mov
hlt
imull
scas
push
mov
push
push
cli
mov
or
cld
mov
popa
data16
jb
out
imul
or
pop
jecxz
imul
cmc
dec
test
fwait
ret
lods
push
inc
add
stos
gs
sti
jp
push
sbbl
pop
mov
mov
mov
sti
inc
sbb
iret
stos
gs
leave
aad
or
popf
mov
adc
jae
push
jne
push
icebp
or
jge
xlat
cmp
fcmovu
jl
xchg
jg
xor
orb
lods
cmp
cld
sub
xchg
addb
dec
xor
jge
lret
inc
rolb
dec
in
jmp
pop
insb
lock
lods
sub
push
adcb
sbb
xchg
test
xchg
mov
push
sahf
jmp
push
dec
stc
mov
push
jmp
sub
cld
xchg
lret
into
repnz
lahf
add
fs
scas
add
pop
lahf
add
mov
repnz
cwtl
pop
mov
idivl
cmp
xchg
dec
icebp
adc
xchg
lock
sub
into
push
cwtl
jae
cld
pop
fisubs
jb
fs
mov
notb
scas
test
stos
clc
shr
adc
sbb
cmp
adc
adcl
and
sbb
add
cwtl
inc
fwait
shlb
nop
sar
cmpl
cmp
sbb
aas
imul
arpl
push
pop
xor
insb
sub
xchg
fildl
inc
push
outsb
mov
movsl
mov
mov
test
mov
xchg
sbb
lds
mov
push
stos
sar
scas
daa
imul
sbb
mov
and
and
or
in
cmc
jle
mov
and
xchg
adc
enter
or
stos
mov
jmp
pushf
or
mov
and
lods
call
sub
xor
push
clc
sub
cs
and
xor
xchg
inc
popf
sbb
test
or
adc
movsl
scas
jmp
push
xchg
sbb
push
out
mov
or
outsb
mov
test
add
in
in
sub
aad
mov
cmp
incb
cmp
xor
imull
fdivs
inc
mov
out
jl
jg
sbb
inc
adc
and
mov
adc
sbb
pop
inc
jae
loope
pop
fistpl
mov
cmp
mov
sub
add
add
push
and
jp
sbb
cwtl
xor
in
jbe
cwtl
inc
dec
mov
lahf
inc
fwait
scas
fistpl
push
jno
jne
inc
in
mov
adc
cmp
jnp
fisttpl
icebp
movsb
cs
pop
orl
xor
mov
das
inc
sbb
enter
addr16
xor
xchg
pushw
push
es
mov
sub
push
cmp
jl
sti
aaa
arpl
sub
mov
js
mov
dec
xchg
xchg
xor
lods
pop
arpl
xor
add
jge
push
sub
pop
mov
movsb
cmc
jp
lea
mov
rcll
repz
jno
inc
adc
pop
adc
subb
in
or
inc
in
insb
rolb
jnp
sbb
push
out
ds
popf
push
or
inc
adc
fdivs
jg
sub
sub
lahf
nop
cmpsl
ljmp
outsl
jmp
ficoms
hlt
pop
andb
inc
xchg
lds
mov
add
sbb
xor
out
stos
sub
pop
push
outsb
dec
call
iret
sbb
shll
xchg
out
cmp
inc
mov
mov
jmp
es
bound
fidivl
cltd
xor
bnd
sub
push
lea
xorl
fwait
popa
mov
int
inc
mov
xor
cmp
ja
test
inc
xlat
pop
fldenv
enter
outsb
enter
inc
mov
mov
mov
dec
jnp
gs
mov
sub
loopne
xor
roll
lahf
cs
xlat
dec
out
unpcklps
or
sbb
inc
lcall
jp
dec
imul
test
lret
sub
jbe
push
sub
fcoms
mov
je
pop
rcrl
jl
jl
mov
ret
sub
mov
and
xchg
add
ja
imul
cmp
icebp
out
and
mov
addr16
lock
inc
push
mov
in
fsub
testl
imul
fldcw
test
int
and
push
xchg
mov
mov
out
ret
lds
xor
xchg
jmp
pushf
mov
in
std
bound
sbb
cli
or
ljmp
or
je
ficompl
ret
out
stc
push
int3
ljmp
adc
inc
and
std
sbb
notb
pmulhuw
sub
jne
fldenv
push
xchg
cmpsl
lret
pop
inc
mov
iret
not
push
cld
stos
fnstsw
cld
cmp
pop
shlb
lds
and
add
aad
das
negl
inc
cltd
dec
and
idivb
sbb
sub
int3
xor
sub
call
aad
xchg
icebp
mov
lods
aas
lret
pusha
push
fadd
adcl
xorl
jp
stos
jge
adc
std
std
cmp
in
xchg
xchg
xor
daa
ret
dec
insb
mov
cmpb
dec
test
cmp
push
add
out
or
fidivrs
xchg
xchg
ret
xor
sbb
test
movb
mov
movsl
lock
repz
shll
lods
or
cmpl
xor
push
adc
inc
jge
rorl
xor
int
sbb
and
int
xchg
inc
push
out
cwtl
test
sub
mov
cmp
dec
sub
pushf
repz
push
cmp
pop
jae
and
push
and
mov
loopne
mov
out
insb
mov
cli
or
cmc
out
sahf
cmp
in
or
bnd
inc
or
adc
stc
push
leave
lods
adc
sbb
sub
sbb
and
cmp
cld
sub
mov
inc
sbb
xor
stos
inc
and
push
imul
out
mov
inc
adc
sub
loope
cmp
pushf
iret
rcr
andb
push
bound
pop
adc
aaa
push
jmp
mov
pop
mov
sti
or
sbb
push
aaa
test
and
out
xchg
negb
pop
shrb
add
mov
push
mov
ljmp
rolb
pop
xchg
xchg
dec
sub
pop
out
and
mov
je
dec
inc
mov
addr16
insl
lcall
test
popa
mov
jg
ljmp
jb
add
in
rol
and
repz
lock
jno
loopne
jb
sub
xchg
stos
or
fldl
add
xor
adcb
fsubrs
into
fidivs
into
int
dec
mov
nop
repz
int
ljmp
test
inc
shl
mov
xchg
adc
std
xlat
out
imulb
jl
sub
lock
cmpsb
out
int3
iret
scas
in
add
push
mov
sub
nop
test
ficoml
mov
nop
fstpl
loop
and
or
dec
xchg
push
nop
cmc
adc
or
cmpsb
or
test
pop
ljmp
inc
sub
jle
inc
aas
jmp
inc
dec
cmp
lods
test
testl
ljmp
pop
rorl
dec
es
jo
cmp
cli
sbb
sub
mov
mov
call
lea
pop
sub
hlt
lea
mov
wrmsr
cmp
lret
pusha
mov
sbb
out
add
movsl
sub
adc
cmp
and
dec
scas
lret
in
sub
jae
mov
xchg
std
lods
xor
loopne
imulb
mov
sub
mov
xor
iret
les
xor
out
lods
scas
inc
push
cwtl
mov
loop
sbb
cwtl
xchg
mov
andl
shr
or
lods
inc
dec
jecxz
jge
add
test
lret
rcl
xorb
sub
fldcw
xchg
dec
push
add
out
aam
out
punpcklwd
jno
cltd
stc
imul
xchg
dec
cs
orb
repz
cmpsl
loopne
loopne
int
pop
sbb
pop
outsl
and
roll
addr16
sbb
popa
pop
jno
mov
pop
dec
pop
inc
mov
fmul
xchg
adc
cmp
popa
pop
and
por
imul
sub
push
and
subb
jp
and
ds
aas
int
xchg
dec
leave
ret
hlt
push
ljmp
cltd
push
sub
inc
movsb
add
or
jbe
and
adcl
andl
dec
lea
jo
stc
dec
add
mov
xchg
sub
xor
negb
xor
pop
gs
or
inc
add
aaa
dec
in
leave
fisttps
fstl
cmp
add
sbb
addr16
mov
fst
and
push
aaa
js
and
in
mov
ljmp
hlt
movsl
sbb
repz
xchg
add
imul
xlat
lret
movsb
dec
sbb
rcrb
orl
jmp
mov
xchg
sub
mov
imul
aad
rcl
jle
mov
jne
cmpsb
fadds
adc
std
xchg
pop
push
and
push
inc
mov
xlat
adc
sbb
push
int3
popf
mov
adc
cwtl
cmpsl
aaa
pop
scas
shlb
decb
cmp
cmp
mov
lcall
jecxz
pushf
scas
push
ljmp
inc
jbe
sysexit
aam
xor
js
shll
inc
ret
ja
repz
in
or
jecxz
xchg
push
in
les
jmp
xor
call
scas
sub
xor
inc
addr16
ds
clc
fsubp
mov
or
dec
sbb
mov
push
mov
or
rolb
leave
jmp
add
addr16
bound
add
leave
cs
mov
mov
es
je
inc
mov
xchg
out
test
or
ret
mov
jg
cmp
cmpsb
popf
imul
mov
cmc
and
add
hlt
mov
pop
sti
les
adc
ds
sbb
arpl
ljmp
xor
xchg
lods
sub
inc
push
xchg
inc
mov
dec
insb
xor
xchg
sbb
cmc
int3
push
add
jns
mov
insl
xor
fidivrs
mov
mov
insl
cmp
sub
inc
lods
add
fscale
cli
rcr
in
adc
xchg
hlt
xor
mov
lock
cmp
inc
sub
push
sub
shrl
fimull
inc
lret
sarl
shr
out
lcall
pop
mov
push
xchg
outsl
jmp
aaa
pushf
cmp
insb
mov
fsubl
popa
dec
ss
xchg
cmp
ja
pop
xlat
aad
dec
outsl
push
pop
mov
mov
pop
repnz
repnz
cmp
xorb
dec
sbb
pop
fldl
jp
cmc
fisubl
mov
pop
and
inc
push
cmp
mov
mov
xchg
sti
pop
in
repnz
mov
xor
push
loope
scas
dec
fsubrs
leave
mov
cltd
pop
test
add
fdivrl
inc
mov
mov
jg
or
jecxz
cmp
cmpsb
ficoml
xchg
push
mov
test
push
jb
and
scas
sbb
sti
xchg
imul
mov
orb
mov
andb
jle
add
add
out
xor
pushf
clc
pop
rorl
stos
jne
mov
stos
sub
bnd
enter
call
push
cs
cmp
jbe
push
mov
pushf
sub
sub
jae
lcall
sbb
cmp
xchg
sbb
inc
ror
sub
add
cmp
jp,pt
xchg
mov
xor
loop
jns
add
and
adc
cmc
ret
dec
lcall
out
and
call
inc
jmp
jno
sub
cmp
test
outsl
jns
insl
inc
movl
push
mov
jmp
sub
mov
in
push
out
pop
mov
mov
lret
sbb
jge
sub
jle
cmovae
xchg
mov
dec
cmp
fisttpl
cmp
insb
pop
xchg
mov
push
mov
pop
clc
cmp
jmp
pushf
or
fidivl
sub
adc
cmp
outsl
and
add
sub
out
xor
cmpsb
mov
sub
les
dec
movsb
jl
sub
mov
movsb
mov
dec
cmpl
jbe
cltd
sub
cld
adc
adc
jp
scas
jb
xchg
insl
aam
push
sbb
xchg
mov
mov
inc
popw
xchg
cmc
and
adcb
inc
subl
roll
xor
das
inc
push
daa
mov
xor
orl
arpl
or
insb
fstpl
int3
jae
push
sahf
scas
lahf
mov
mov
dec
or
cmpsb
jg
jge
jns
lea
cmpsb
loop
sub
movsb
loop
xor
rol
sub
cmpsl
xor
sbb
or
dec
or
jp
xor
cmpsb
and
jb
ja
mov
jmp
dec
out
cmpsl
sbb
fsubl
pop
aas
fidivs
jg
sti
cld
push
ja
adc
inc
sub
fwait
xchg
aad
scas
dec
addl
push
inc
cmc
xorb
addr16
out
test
mov
das
flds
imul
jno
fists
inc
jae
mov
mov
mov
cmp
ds
cltd
adc
scas
leave
repz
in
int
stos
push
mov
push
mov
sbb
hlt
out
lock
rcl
mov
repz
loopne
ljmp
and
ljmp
scas
push
mov
rcrb
push
addl
dec
testb
sarl
lods
popa
cmp
pop
mov
xor
mov
dec
scas
das
mov
stos
dec
inc
gs
lods
xorb
push
rclb
or
xchg
ljmp
dec
inc
scas
fstpl
push
mov
or
int3
call
fs
push
daa
lods
ss
sub
xchg
jge
cmp
dec
fidivs
mov
int
jecxz
sbb
das
xchg
mov
dec
stos
mov
mov
mov
in
out
icebp
push
clc
push
imul
cmpb
test
stc
aaa
iret
aas
inc
pusha
mov
add
cmp
xlat
sti
cmp
mov
test
pop
or
fldl
push
and
cs
arpl
insl
dec
lret
add
push
mov
repnz
pop
aas
loopne
add
lcall
flds
mov
pop
ror
in
jno
popa
lcall
int
pop
rep
adc
push
add
mov
mov
lcall
sub
push
lock
incl
stos
mov
lret
btr
pushf
sub
mov
mov
jl
aaa
cmp
loop
inc
mov
pushf
cli
mov
movsl
mull
sahf
pop
mov
push
sub
sbb
mov
jns
scas
and
idivl
jp
mov
int3
cld
out
xchg
mov
mov
push
jne
out
sbb
std
inc
xchg
pushf
and
mov
cmp
add
mov
pop
push
xchg
adc
push
stc
fs
not
leave
dec
ret
add
sub
push
push
cwtl
mov
push
mov
ds
imul
sti
mov
or
pop
and
xchg
testl
add
movsb
test
out
orb
add
dec
mov
ret
mov
lret
lods
fidivs
inc
adcl
scas
insl
jle
aam
push
mov
mov
jbe
out
lcall
loopne
mov
int3
adc
adc
divps
pop
adcl
push
mov
and
scas
cmpsl
dec
jnp
xor
mov
out
dec
adc
xorb
sahf
mov
push
es
xchg
gs
fcoms
or
mov
into
out
rcrl
lods
sti
mov
sub
mov
call
cmp
xor
push
sahf
mov
xchg
in
std
and
faddl
push
push
in
xlat
mov
sti
inc
aad
cltd
push
outsl
scas
xor
orl
in
pop
mov
in
scas
inc
test
test
mov
xchg
aas
push
addr16
mov
xchg
aad
pop
mov
xchg
dec
xchg
cmpsb
roll
gs
add
gs
ds
shll
sbb
cltd
imul
adcb
pushf
fst
jno
add
push
fs
xor
je
cmp
mov
outsb
mov
in
int
jb
in
xchg
adc
cmpsb
jle
jno
pushf
js
aad
gs
arpl
push
dec
inc
jno
js
nop
mov
daa
dec
ret
lods
insb
mov
popa
sbb
dec
or
shufps
mov
jns
jbe
mov
mov
dec
cmp
leave
mov
or
rcrl
int
pusha
fstps
adc
mov
cmp
push
mov
cld
in
lds
sub
fdivr
cld
push
cmp
mov
adc
imul
mov
mov
xlat
movsl
mov
hlt
dec
ret
outsb
or
mov
aas
inc
xchg
ret
sbb
in
in
jno
insl
dec
pop
movsl
outsl
sub
push
mov
push
lods
in
dec
or
test
cmp
test
xchg
sarl
or
jnp
add
push
xchg
or
xchg
cmpsb
push
sub
ljmp
mov
lahf
insb
nop
enter
fwait
push
sub
pop
lahf
pop
fidivl
sub
jg
xchg
adc
mov
sub
push
aas
hlt
pop
cmp
or
pop
cmp
sti
mov
mov
mov
sub
notl
dec
inc
push
out
mov
notb
imulb
dec
adc
stos
and
add
dec
sahf
int
jne
cmpsb
adc
jb
insl
sub
sti
inc
dec
push
push
mov
and
push
ret
sub
insb
mov
push
pop
sub
jnp
and
cld
cmp
adc
dec
xchg
mov
aaa
cltd
push
call
xor
jb
das
aad
into
adc
test
xchg
fisubrl
adc
arpl
nop
enter
mov
das
xchg
fnstenv
push
std
push
inc
inc
loop
mov
mov
mov
mov
mov
mov
fisubrl
cli
pop
sbb
nop
push
jbe
mov
add
pushf
ret
xchg
push
test
jb
adc
and
cmpsl
dec
mov
add
fwait
and
divl
inc
xor
cmpsl
dec
out
shll
data16
insb
stc
jge
aam
lret
scas
xchg
pop
fldl
or
mov
bound
sub
or
jg
mov
imul
lcall
out
in
outsl
push
adc
lcall
mov
cmp
jo
jb
lret
outsl
test
xchg
push
pop
inc
sti
pop
fscale
das
ret
gs
cmpsb
test
enter
add
sub
or
add
cmc
popa
test
add
cwtl
in
xlat
lea
in
xlat
jp
mov
push
lret
mov
cld
jb
std
std
jmp
outsl
inc
scas
sub
xor
shll
data16
lret
stc
jne
push
sbb
xchg
fsubrs
mov
adc
or
push
cli
aad
lds
jae
cmp
sub
and
or
js
jmp
lock
les
lea
adc
cmp
dec
push
insb
mov
and
sarl
mov
lret
push
dec
cmp
xlat
add
leave
pushf
sbb
inc
jle
lret
sti
fists
mov
scas
and
scas
push
add
jmp
push
inc
mov
or
notb
ficoms
mov
movsb
jge
adc
cltd
ret
loope
mov
sub
cmp
aaa
mov
add
mov
in
push
mov
add
cmc
dec
and
sti
and
fnsave
sti
rorl
and
call
inc
aas
repnz
sarl
enter
pop
adc
jmp
cmc
sub
ret
sbb
js
mov
subl
mov
adc
pop
sub
mov
sbb
add
aad
xor
push
mov
mov
mov
popa
or
bound
xor
ficomps
cmp
imul
bound
or
and
mov
push
mov
out
sub
push
sub
ja
out
jg
adc
xchg
adc
or
adc
cwtl
scas
xchg
cmp
test
repz
jbe
mov
cmp
addl
pushf
inc
iret
cmovle
popa
jl
pop
cwtl
int
clc
stos
aam
outsl
cmp
dec
cmpsl
out
std
adc
xchg
mov
in
adc
lods
out
pop
xchg
aad
mov
cmp
stos
in
and
push
xchg
aad
imul
and
rorl
inc
shl
dec
sbb
xchg
pop
cmc
pushf
fdivr
lods
orb
or
xor
or
jge
dec
ja
movsb
adc
sti
adc
jns
pop
cmc
call
xor
jae
mov
cs
outsl
jns
repz
outsb
mov
ss
mov
xchg
and
pcmpgtw
mov
mov
pusha
jo
mov
pop
xchg
pop
sub
into
jbe
adc
shrl
sub
inc
mov
aam
fldl
add
mov
test
lcall
repnz
test
mov
ds
dec
pusha
mov
ljmp
sti
add
sbb
gs
mov
mov
daa
sub
test
ljmp
mov
push
shlb
outsb
add
mov
dec
pushf
leave
xor
pop
push
rorb
inc
test
dec
cmp
ret
inc
and
insl
ja
in
xchg
xor
or
gs
test
add
mov
mov
xchg
inc
mov
cmp
mov
jge
mov
jg
mov
dec
popf
cmp
push
aad
pop
mov
iret
out
int3
pop
xlat
sbb
lret
pop
mov
test
jl
jnp
in
stc
push
mov
adc
inc
pusha
arpl
cmp
pop
popf
test
mov
pop
mov
dec
add
loop
xchg
mov
aam
add
jne
ss
aaa
dec
inc
lea
in
imul
jbe
inc
cmp
adc
mulb
int
add
inc
icebp
xchg
cmc
xchg
xor
mov
jb
inc
sub
push
ss
mov
push
movsl
mov
sub
and
lds
std
test
and
sbb
mull
ds
fcoms
cmp
aaa
repnz
shll
and
mov
les
sbb
jl
inc
adc
nop
mov
shrl
out
int
inc
imul
pop
push
or
into
sub
popa
ret
clc
aam
lock
je
call
inc
jbe
mov
pop
subb
out
popa
ja
orl
sti
dec
or
je
mov
stc
aam
out
je
cmp
lea
repz
pushf
ljmp
jl
sti
in
imul
pop
jne
add
insb
rclb
insl
out
fldcw
mov
daa
fcmovu
cld
scas
pop
mov
pop
out
mov
sbb
int
cmc
outsb
mov
adc
bound
aam
dec
iret
imul
out
inc
pop
out
sbb
jmp
subb
in
xor
cmc
arpl
and
cmp
movsl
and
and
mov
jne
jg
ss
jcxz
sbb
out
xor
test
mov
hlt
xchg
cltd
pop
mov
push
ss
dec
cmpsb
or
cwtl
sbb
jmp
and
add
gs
add
movsb
fcomip
xchg
adc
sub
gs
and
imul
push
push
stos
sbb
sbb
jp
cli
cltd
adc
ret
mov
mov
and
scas
push
pusha
jb
sbb
jecxz
fdivrl
pusha
mov
imul
aas
mov
jne
sarb
cmp
inc
jb
loop
inc
in
xor
ffreep
mov
xchg
test
stc
add
push
inc
ficoms
add
mov
sbb
jo
addr16
mov
mov
pop
mov
sub
lods
sub
aad
or
adc
lcall
mov
fcomps
pinsrw
or
repnz
stos
add
test
cmc
adc
jae
insl
cs
sub
clc
adc
pop
dec
fcmovb
or
and
adc
adc
xchg
mov
ja
fwait
inc
lods
iret
test
ds
lcall
test
aaa
cmp
xchg
movsb
rclb
sahf
jp
push
push
repnz
and
add
push
dec
stos
push
inc
mov
adc
jne
dec
negl
jne
push
add
mov
dec
add
mov
sti
popf
push
jle
push
mov
aaa
mov
dec
mov
ret
mov
adc
or
jnp
bnd
icebp
inc
push
int
jnp
bound
int
jg
cmp
push
push
sbb
sbb
jle
push
popl
fistpll
outsb
subb
cmc
mov
dec
insl
jmp
sbbl
in
xchg
imul
icebp
cs
mov
push
add
ret
test
int
fists
xor
setbe
or
xor
jmp
jb
lods
out
lds
cmp
sbb
mov
test
cmc
lods
cmp
pusha
lcall
mov
pop
jge
pop
in
push
mov
clc
lds
dec
testl
sub
dec
mov
xor
leave
bound
outsl
out
push
push
loop
stos
sbb
inc
mov
mov
pop
loopne
outsl
cmp
push
pop
push
mov
or
push
adc
test
fsub
jno
pop
push
push
xchg
fadd
fisttpl
xor
outsb
repnz
cs
repnz
sub
sbb
cwtl
jp
mov
cmp
ljmp
xchg
fsubrl
rorb
inc
inc
mov
fwait
dec
pop
xchg
add
nop
push
icebp
mov
xlat
mov
sbb
xchg
pushf
repnz
mov
jle
push
mov
or
jnp
xchg
mov
push
add
lds
cmpsl
popa
and
cmp
out
pop
push
cmp
and
data16
stos
lret
push
cmpsb
inc
mov
inc
pop
pusha
push
xchg
jle
cmp
jmp
mov
sbb
xchg
sahf
lods
mov
std
lds
ja
mov
mov
and
lcall
dec
lea
sbb
xchg
mov
aaa
sub
push
sarb
andb
ret
into
push
mov
sub
lcall
or
stos
or
push
out
jg
aas
stos
pop
pop
insb
pushf
fdivs
addb
leave
mov
rclb
sub
outsb
xchg
add
cmp
inc
into
test
jg
cmpsl
adc
ds
cld
imul
jo
and
mov
jge
je
outsl
scas
int3
andl
push
jmp
insb
fadds
push
lods
inc
sti
jo
mov
movsl
pusha
sarb
and
jecxz
push
mov
push
xor
push
mov
mov
inc
mov
pop
lahf
and
sbb
lahf
int3
rclb
imul
mov
dec
data16
testb
dec
sti
nop
dec
mov
fsubrl
data16
cmp
mov
inc
and
push
mov
push
xorl
push
aam
stos
in
xor
clc
cmp
dec
fwait
pop
ret
or
sarb
push
lods
and
dec
mov
jb
addr16
sub
mov
sbb
cmp
sbb
test
in
jecxz
cmpsb
lcall
ljmp
jnp
cmp
ljmp
push
shll
adc
movsb
push
push
into
bound
imul
adc
imul
stos
out
js
mov
out
push
loope
sbb
in
scas
add
jbe
inc
call
mov
sub
push
mov
adc
mov
iret
jmp
dec
clc
pop
shll
jecxz
rclb
lret
pop
das
xchg
movsb
je
or
push
and
cmp
mov
lret
mov
pop
out
sbb
fidivs
add
sub
cmp
hlt
cmpsb
cmp
add
pop
dec
lock
push
jne
mov
xchg
push
push
loope
icebp
jno
call
movsb
fwait
sub
lahf
std
jns
mov
out
xchg
mov
test
push
scas
and
rclb
adc
xchg
xor
cmp
rclb
call
xchg
cmp
aam
inc
es
into
or
pop
push
lock
or
or
loope
cmpsl
dec
pop
mov
mov
adc
pop
push
dec
dec
mov
mov
test
sub
and
cmp
pop
pop
test
pop
popf
push
sub
lods
mov
push
loop
jns
sub
rcll
xor
sahf
xor
sbb
dec
and
push
lahf
sub
add
push
push
adc
mov
stc
jmp
and
xor
mov
and
movsl
inc
mov
pop
pushf
loope
and
aaa
inc
and
je
jle
lea
push
pop
mov
jg
ret
aas
pop
sbb
mov
insl
sbb
adc
pop
loopne
aaa
and
nop
data16
jns
push
dec
push
or
int3
fisttpl
stos
xchg
daa
push
lods
ljmp
or
loop
and
fbstp
mov
mov
xlat
cmpsb
sub
pop
imul
out
mov
mov
push
div
sbb
cmp
mov
pushf
das
aad
nop
shrl
icebp
cmp
jge
int
push
in
sti
subb
mov
pop
rclb
pop
push
push
and
sahf
push
pushl
push
xchg
push
adc
sahf
dec
pop
shlb
jl
mov
dec
jmp
jp
dec
data16
adc
jmp
icebp
cmp
mov
mov
rolb
out
fucomp
imull
pusha
cmpsl
mov
add
pop
in
rcrb
ret
cmp
aas
sti
sbb
dec
add
clc
outsl
ja
inc
pop
xchg
incl
pop
or
jnp
and
mov
loop
cmp
stc
jg
and
jns
mov
jmp
inc
push
sbb
push
hlt
outsl
int3
in
test
hlt
rcrb
mov
adc
and
jne
and
mov
mov
adc
mov
insl
inc
lods
pop
mov
adc
mov
dec
jnp
jno
popf
mov
mov
aam
adc
pushf
lods
adcl
sahf
mov
mov
dec
lock
cwtl
cmp
dec
mov
add
push
sbb
iret
inc
leave
sbb
push
or
pop
dec
insw
insb
dec
out
or
cli
loopne
push
lds
mov
in
lock
cmp
popa
lahf
adc
repz
and
mov
out
cmp
int3
dec
arpl
int3
xchg
je
jnp
xor
js
inc
lock
and
sbbl
ret
mov
lret
inc
mov
insb
mov
lock
push
lret
ss
stc
inc
inc
cmc
or
es
xor
xor
stos
cmp
call
jne
orl
push
testb
fsubp
cmpsl
imul
pop
rclb
mov
push
stos
jg
jae
cs
test
adc
and
jg
push
add
mov
data16
pop
testb
loope
dec
movsl
std
mov
hlt
xor
pmulhw
mov
scas
stos
ret
stos
in
and
push
mov
rcrb
mov
in
push
mov
aad
ret
push
and
xchg
popa
xor
movsb
xchg
push
pop
out
sub
outsb
pop
add
xor
cld
aam
lock
fs
insl
cld
xchg
xor
or
jl
push
push
inc
push
gs
adc
mov
mov
jmp
inc
cmp
fisttpl
sub
dec
adc
ud0
into
fs
enter
in
add
dec
aad
adc
loope
in
xor
sub
aam
in
pushf
dec
pop
xor
iret
mov
sarl
mov
push
mov
popf
inc
fstpt
mov
lock
and
adc
test
xchg
mov
lods
lock
cld
mov
stos
and
stos
dec
xor
jns
clc
ficoml
jb
fwait
pop
nop
aad
jns
pop
cmp
mov
scas
push
aas
ret
rcll
ret
mov
cmp
sub
push
lds
push
repz
es
dec
mov
inc
movb
xor
and
push
xchg
das
mov
xchg
shlb
leave
push
fs
xlat
cli
rolb
push
inc
insl
xchg
test
jno
ss
jle
pop
xchg
icebp
cmp
jle
pusha
inc
push
push
pop
xchg
pop
adc
shrb
mov
xor
test
addr16
jns
ss
not
xor
or
dec
cmp
inc
jae
cmp
mov
cmp
lods
mov
daa
enter
jae
xor
adc
adc
inc
adc
adc
jb
pusha
add
pop
xor
inc
loop
sbbb
sahf
ja
addl
pop
xor
xor
popa
cmp
fiaddl
jnp
sub
repnz
mov
out
jbe
xor
add
jno
loope
push
push
add
sarb
inc
dec
xor
dec
dec
ret
ja
cmpsl
pop
push
push
xchg
mov
pop
loope
or
jg
scas
fadds
and
jbe
jg
mov
or
push
mov
add
xor
add
cld
sbb
and
pop
or
aas
pop
inc
push
xchg
adc
andl
inc
push
aam
rolb
cli
test
mov
jl
aas
jmp
sbb
mov
sub
adc
shll
call
sub
cltd
push
enter
cltd
out
pop
pop
xor
popf
inc
jae
loop
popa
or
in
adc
lds
std
or
fcmovnbe
dec
cld
lcall
add
mov
mov
int3
and
inc
insl
push
sbb
mov
xchg
scas
lods
test
lea
les
fnstenv
sub
xchg
adc
cmp
loopne
rorl
sbbl
popa
fdivs
sub
mulb
xor
jbe
xchg
sub
sbb
mov
pop
cli
cmp
or
push
loope
fdivrl
addr16
dec
jge
pop
pop
jb
jno
fnstenv
arpl
sbb
sarb
pusha
rcrl
in
das
mov
test
movsb
imul
adc
mov
sbb
push
push
sub
fldcw
push
or
sbb
mov
andb
cmp
jecxz
xor
enter
mov
xchg
enter
lds
repnz
fisttpl
sub
lock
xor
adc
xchg
xor
cld
xchg
push
out
cmp
push
push
push
add
cmp
rcr
fildl
jmp
cwtl
mov
cmp
ja
std
addr16
scas
xor
add
jg
fadd
push
xor
icebp
push
dec
dec
mov
test
cmp
push
clc
mov
call
mov
nop
fwait
getsec
out
pop
xchg
test
repz
std
pop
popa
stc
out
lahf
xchg
mov
mov
icebp
jl
sub
mov
repnz
aaa
in
jp
popf
cmp
faddp
in
ret
lret
xor
jbe
frstor
sbb
sub
cwtl
pop
xor
and
cmpsl
xchg
mov
jo
cmp
shl
fistpl
pop
mov
sbb
loop
insl
imul
outsb
mov
repnz
add
dec
outsl
inc
loope
inc
xchg
push
mov
mov
popa
mov
mov
idivb
nopl
pop
adc
push
lret
sub
sub
cmp
orl
ffreep
sbb
es
stos
jmp
lods
movsb
data16
cmp
loope
scas
and
mov
cs
addr16
subl
mov
divb
add
adc
loop
sbb
cmp
pushf
ret
daa
or
aas
inc
stos
adc
jmp
data16
jecxz
sub
sti
push
icebp
out
and
mov
fldl
add
push
jl
test
andl
pop
jg
sub
xchg
jmp
decl
cltd
ljmp
cmp
jmp
ljmp
jmp
cmc
xchg
ljmp
push
jo
add
ficomps
outsb
sbb
pop
fcomps
add
test
inc
push
adc
xchg
popa
pop
add
xchg
xor
test
repz
inc
mov
nop
mov
std
xorb
jae
aad
fdivrl
push
cld
in
add
repnz
xchg
aaa
and
sbb
and
shlb
and
arpl
cwtl
or
jge
insl
xchg
mov
enter
test
mov
and
addb
inc
movsb
stos
xchg
sub
mov
jns
pop
int3
hlt
icebp
xor
adc
imul
ror
mov
fwait
mov
outsl
loope
jo
mov
jle
out
pusha
psrld
pop
sbb
shlb
and
push
add
ja
mov
sub
xchg
hlt
ret
push
std
mov
andb
push
nop
xchg
repnz
ja
xor
jb
fdivr
mov
xor
pop
add
aad
adc
mov
dec
cmc
and
mov
and
cmpsb
inc
cmp
xchg
les
add
popa
pop
iret
imul
scas
lock
clc
add
jge
add
sbbb
xchg
adc
in
and
cmpsb
mov
call
cmc
arpl
add
js
rep
popl
ud1
rolb
repz
mov
outsl
or
cmc
outsl
leave
loopne
mov
jno
xor
cmp
mov
cmp
dec
mov
lret
fcmove
pop
sbb
lea
pop
cmp
shrb
add
jb
pop
push
mov
test
in
push
dec
add
fadd
pop
pop
sbb
xchg
sbb
lock
pop
jo
das
hlt
in
sub
sub
scas
dec
dec
iret
out
push
lret
scas
mov
div
test
shrl
cwtl
imul
push
cmovs
mov
cmp
je
aad
je
cmp
test
je
loope
fdivr
ss
or
cmc
mov
das
je
movsl
ret
mov
add
in
jl
loopne
call
bound
sbb
and
fstps
or
mov
lret
xchg
call
sbb
sbb
je
pop
in
add
jne
xchg
es
and
pop
fnstsw
ja
idivl
dec
and
or
xchg
xchg
lcall
jo
dec
enter
fdivrl
sbb
push
jns
ja
mov
mov
test
xorl
cmp
sub
fistps
gs
mov
sub
inc
or
std
aas
mov
movsb
mov
test
inc
es
pop
sbb
loop
loopne
sub
sub
lahf
add
fadds
add
jbe
sbb
out
fidivl
out
out
rcrb
movsl
imul
ficoms
sahf
popa
sbb
mov
insb
test
push
jmp
pop
jo
popf
sbb
sub
je
outsl
pop
imul
pop
inc
je
aam
enter
jno
test
pop
pusha
fmul
add
ja
stos
nop
or
jno
test
mov
or
dec
test
sahf
xchg
push
or
pop
orl
shll
xchg
dec
sub
inc
inc
and
sub
fsts
jo
mov
push
stc
dec
push
repnz
movl
repnz
sbb
faddl
addb
fidivs
cmp
pop
push
repnz
pop
and
adc
les
add
mov
jmp
arpl
ja
or
adc
lret
shr
and
cmp
es
fcoms
sbb
pop
xor
xchg
lret
arpl
inc
dec
test
out
jmp
cmpsl
fildl
cmp
mov
loop
es
test
lock
icebp
push
or
jno
icebp
dec
aas
aam
std
movsl
inc
daa
push
test
xlat
jbe
jno
ret
add
xor
dec
sbb
out
lahf
inc
in
inc
mov
loope
adc
into
dec
cmc
es
cmp
sbb
sbb
movsl
push
adcl
inc
sbb
es
popf
jnp
mov
out
mov
andb
jmp
ss
stos
fwait
out
cli
mov
mov
jecxz
pop
insb
mov
xlat
in
in
enter
dec
xchg
pop
lret
cmpsb
shl
aaa
xor
outsb
mov
int
jae
in
out
push
addl
das
rsm
inc
xor
cmpsb
add
ds
jmp
lods
gs
pop
test
std
in
mov
sbb
add
lock
pop
imul
adc
into
lret
rcl
inc
push
jp
or
or
insl
and
shlb
inc
popl
rcl
iret
xor
sub
inc
inc
cli
test
mov
cmp
cmp
add
dec
inc
sub
hlt
push
rcrl
dec
push
ja
aam
inc
mov
out
mov
pop
nop
push
mov
fidivrs
or
lcall
daa
idivb
popf
sbb
aaa
push
cs
jnp
mov
lret
es
loopne
cmpsb
dec
clc
ret
pop
and
push
push
adc
aas
mov
imul
pop
or
xor
jp
pusha
lock
aad
loope
xchg
clc
ljmp
orb
stc
loop
xchg
push
xor
push
and
jb
jg
add
pop
pop
adc
cmp
popa
add
mov
sti
fidivl
std
jnp
sub
dec
push
cmpsb
cmp
mov
mov
rcl
fidivs
push
xchg
push
clc
push
test
sbb
sbb
push
cmpsl
lret
jb
dec
les
leave
lods
lahf
push
inc
rorl
rorl
mov
pop
shl
ret
mov
or
dec
dec
and
mov
or
add
addr16
pop
inc
add
mov
daa
mov
jbe
mov
sub
mov
inc
add
mov
push
mov
les
mov
dec
sbb
cs
es
mov
jne
and
inc
cmp
mov
xlat
pop
cmpsb
xchg
jnp
pop
push
movsb
imul
xchg
scas
gs
les
xor
cwtl
inc
pop
popf
aaa
dec
dec
fsubrs
mov
mov
insl
test
sbb
je
adc
add
std
lods
lret
xor
ret
movl
push
lret
out
mov
out
out
sbb
xchg
mov
xor
dec
ret
scas
mov
or
pop
jl
push
andb
adc
push
or
aam
or
pop
add
out
daa
inc
fisttpll
pop
pusha
out
pop
mov
in
mov
xor
sub
mov
data16
int
cmp
lret
inc
push
push
pop
xchg
and
adc
ljmp
cwtl
or
adc
adc
add
icebp
or
jp
mov
aad
fistpl
in
cltd
pop
call
loopne
test
sbb
cwtl
repnz
mov
in
or
or
pop
aaa
ret
inc
pop
sbb
in
sahf
movsb
mov
in
inc
fldenv
pop
adc
jno
orl
dec
daa
sbb
sub
in
push
pop
push
jne
ret
xor
xor
addr16
xchg
mov
in
mov
mov
mov
clc
ss
sub
mov
and
cmc
and
fwait
xor
mov
mov
cmp
adc
inc
cwtl
xor
fisubl
out
adc
mov
jg
lahf
push
mov
cmp
stos
in
mov
test
sbb
lahf
jmp
dec
cmp
adc
add
mov
xor
fwait
cmp
addr16
mov
test
add
outsl
scas
and
dec
lret
jge
jns
adc
inc
arpl
repz
fistpll
mov
push
sbb
call
and
icebp
sar
pop
gs
or
out
mov
ret
inc
loop
mov
mov
movsb
addr16
stos
push
mov
enter
repnz
cwtl
test
cmpsb
mov
push
xchg
push
jbe
xchg
mov
xchg
push
sti
loope
aam
int
pusha
stos
push
mov
xor
dec
dec
cmc
movsl
inc
nop
jo
rolb
or
pushf
inc
nop
mulb
pop
into
or
js
pop
nop
push
scas
pop
out
cmpsl
in
fwait
push
movsl
rclb
leave
xchg
sub
jne
mov
xchg
sbb
dec
or
jge
and
out
lods
and
insb
push
aaa
scas
adc
sahf
mov
jmp
fstp
jecxz
test
lods
push
fs
mov
adc
cmp
xchg
sti
in
or
jg
adc
arpl
mov
popf
out
inc
xchg
adc
push
ret
inc
or
neg
jb
fiadds
mov
int3
rcrl
lcall
jge
sti
and
out
lcall
lock
hlt
fs
mov
fildl
adc
sub
insb
ret
scas
int
push
dec
mov
push
push
les
push
inc
and
movsl
xor
sub
mov
add
mulb
sbb
xchg
jo
in
cmpsb
add
sti
int
pop
jmp
je
xchg
cmp
das
sbb
mov
cmp
mul
or
sub
or
jne
cmp
ret
inc
testl
fsubrs
psrad
ret
into
lods
xchg
fstps
pop
push
cmp
cli
mov
inc
roll
pop
xchg
in
andb
cmpsl
test
leave
iret
add
hlt
je
jle
push
xchg
fs
pop
xchg
pushf
ss
adc
cmpsb
out
inc
mov
pop
xchg
cmp
lret
testl
shrl
cmp
mov
xor
push
into
je
in
mov
or
aam
addr16
ret
pop
scas
sub
fcoml
sbb
adc
out
lods
dec
ficoms
lret
mov
push
add
dec
into
div
push
int
jb
xlat
push
out
icebp
cli
add
iret
mov
xor
and
adc
test
pop
lcall
call
lahf
sub
fcomps
fidivrs
dec
rolb
movsb
inc
lock
jecxz
jl
iret
sbb
sub
jg
andb
sbbl
sahf
cwtl
jb
inc
pusha
aas
mov
or
repz
fisubs
or
pusha
into
add
aaa
adc
add
aas
mov
ss
ljmp
add
cmp
sti
fidivrs
imul
aaa
pop
pushl
hlt
or
push
adc
addr16
push
clc
mov
jbe
cli
clc
insb
xor
insb
pop
fwait
jge
dec
mov
lods
jge
cmp
pop
hlt
ret
je
jne
jg
cmp
jne
icebp
pop
dec
adc
negl
sbb
add
call
andb
pop
push
mov
push
mov
loopne
mov
mov
push
push
insb
jl
sbb
sub
mov
xchg
or
insb
insb
pop
fxch
add
sub
mov
cwtl
mov
sub
xor
repz
sub
pop
imul
in
and
push
dec
cmp
dec
shll
pop
dec
jnp
sbb
xchg
sub
and
sub
mov
out
pop
fwait
orb
call
loop
xchg
out
pop
cmp
pop
xchg
xor
cmp
gs
clc
int3
jo
fs
push
inc
movsl
insb
or
imull
dec
add
lret
movq
jo
adc
push
mov
std
outsl
push
test
outsb
mov
mov
add
jl
push
out
ret
loop
sbb
arpl
leave
or
imul
cmpsl
popa
imul
sbb
adc
popf
xchg
ret
test
aas
in
mov
out
sbbb
mov
dec
inc
out
subb
roll
ret
ljmp
cmc
ret
jb
mov
lcall
cmovo
daa
pop
add
fcmovu
adc
lds
aam
fadds
pop
mov
out
sbb
pop
and
outsl
mov
loop
scas
mov
test
adc
pop
pushf
aas
sbb
or
lea
imul
or
mov
shr
push
fisubrl
dec
lcall
inc
xlat
add
xchg
mov
lahf
in
jp
pop
jo
sub
sub
xor
jns
adc
sbb
jnp
jne
sub
sub
mov
inc
fisubl
roll
data16
rol
pop
test
xchg
scas
sbbl
scas
imul
incl
lock
sarl
push
sub
jmp
jae
daa
das
push
es
pop
idivb
lock
cmpl
mov
push
outsl
pushf
cmpsl
clc
xchg
pop
add
fs
mov
cltd
sub
cmp
and
add
or
in
outsl
dec
mov
jne
inc
mov
movb
and
jae
outsl
sub
pushf
jnp
xchg
movsb
xchg
pop
mov
pusha
xchg
add
dec
or
jo
imul
loop
xlat
movsl
xor
sub
mov
mov
and
imul
daa
sahf
and
pop
loope
add
les
xchg
cmp
xor
lret
aam
test
and
stos
cmpsl
add
repz
cmp
sti
repz
insl
push
fs
or
outsl
in
pop
in
int3
mov
jne
pop
or
mov
inc
in
sub
rcrb
and
enter
sti
js
fcoms
je
in
lret
mov
dec
shrb
cmpsb
cmp
mov
pause
loopne
pop
shlb
movb
fcompl
cmp
or
xchg
push
xor
mov
sbbl
enter
adc
out
enter
imul
mov
cmpsb
ja
push
xor
xor
dec
mov
xor
loopne
gs
cltd
test
movsl
bound
fildl
add
push
jb
cltd
pop
jo
sub
mov
mov
iret
xchg
sahf
je
cmp
pop
dec
dec
push
sbb
cmp
rclb
xor
cmpsl
cmp
sub
xor
daa
push
stos
subb
xchg
pushf
movsl
pop
sbb
movsl
cmpsl
push
push
jg
push
push
insl
xor
cwtl
jbe
mov
in
shll
dec
xor
mov
movsl
xchg
mov
and
inc
jns
jecxz
pop
daa
lds
jnp
cld
mov
shlb
mov
xchg
mov
mov
mov
mov
push
mov
orl
add
mov
pusha
add
or
inc
mov
mov
add
inc
mov
in
ja
inc
int
jp
add
iret
sbb
fistpl
pop
popf
mov
es
xor
mov
xor
push
lcall
pop
mov
mov
inc
loop
inc
jl
adc
mov
mov
push
add
cld
lock
push
data16
sarb
pushl
or
lock
jle
cmpsb
push
jb
loope
mov
in
in
inc
and
fwait
in
test
sbb
hlt
rcrl
cs
fdivl
mov
repz
sbb
adc
jp
sbb
data16
sub
dec
xor
push
mov
mov
fs
add
mov
cmp
es
fisttpl
lock
lahf
lcall
aaa
cmp
lods
ffree
mov
push
and
sahf
std
stc
jbe
lret
js
imul
in
outsb
clc
stos
sub
or
test
jbe
dec
ss
aas
jb
aaa
xor
pop
outsb
outsb
lahf
test
add
xchg
nop
stos
loope
outsb
cmp
mov
addr16
jp
popa
imul
pop
das
pop
and
mov
jp
dec
sti
and
lods
pushf
popa
cld
out
divl
aaa
xor
fsubrl
push
xchg
and
cmc
enter
cmp
sbb
clc
xchg
mov
or
xchg
testb
jge
dec
mov
imul
pop
mov
aaa
xlat
clc
push
les
mov
into
pushf
mov
orb
fldl
xchg
inc
mov
push
inc
pop
outsl
fcomps
insl
loop
fisttpll
dec
lcall
imul
test
cs
xor
mov
jecxz
mov
pop
fstps
sub
fcomps
xor
sbb
cmp
or
push
popf
dec
mov
jb
xor
and
cmp
iret
out
xlat
daa
sbb
aas
les
ret
mov
xchg
fiaddl
pop
iret
mov
sub
jbe
mov
data16
inc
adc
inc
insl
push
into
stos
aas
cmc
push
jnp
mov
or
aad
out
jge
cmp
mov
inc
loop
imul
cwtl
les
add
and
daa
rorl
pop
or
pop
pop
int
enter
je
push
aam
andl
dec
std
rorb
mov
loope
jl
cwtl
popa
add
mov
scas
rorb
xor
dec
out
outsb
cltd
dec
push
pop
lods
add
popf
in
mov
pop
mov
popl
imul
pop
fwait
sub
fists
and
mov
repnz
sub
pushl
mov
aas
subl
xchg
clc
mov
lcall
lock
jno
arpl
not
pop
jnp
lahf
aad
fidivs
mov
mov
int3
mov
mov
xchg
test
in
sbb
xchg
ja
mov
pop
mov
sbb
je
roll
jp
inc
shll
stos
jnp
or
lds
std
nop
test
testb
lds
imul
lret
xchg
std
mov
loope
loope
pop
jle
push
dec
pop
imul
les
fwait
mov
inc
pusha
xchg
sbbb
adc
xor
js
lahf
mov
dec
cs
stc
pop
rolb
insl
jp
fidivrl
cmp
rolb
and
cld
adc
cwtl
aas
lahf
xor
pop
xor
cmc
jle
mov
sub
xchg
cli
mov
inc
and
pushf
xlat
adc
fsubl
popf
shll
xlat
lds
mov
sahf
mov
test
adc
test
outsb
ficoms
gs
fcmovnb
pop
dec
paddusb
jp
stos
or
push
add
testl
fchs
sub
out
fstpl
lahf
lret
jns
lret
sub
insb
pop
popf
stos
shlb
push
xor
sbb
pusha
cmpsl
fstpl
sbb
or
repz
mov
inc
arpl
push
shr
and
loop
mov
hlt
pop
and
cmpsl
roll
inc
ds
jae
aaa
sti
jge
and
lahf
lahf
cmp
push
stc
sbbb
aad
cmp
cmp
sub
mov
mov
mov
or
mov
fs
out
popf
rcll
gs
xchg
rclb
aad
ds
add
xor
push
sbb
xchg
adc
outsl
es
aam
add
test
and
ljmp
add
call
xchg
adc
jbe
outsb
inc
push
mov
cltd
cmp
jo
sub
iret
ret
lcall
arpl
dec
lds
adc
dec
jge
and
popf
pop
mov
int3
pinsrw
lcall
sub
mov
aam
pop
int3
daa
xchg
jge
addr16
addl
sbb
inc
les
lods
pop
daa
xchg
pushf
adcb
or
pop
inc
fmuls
mov
add
inc
mov
mov
data16
std
gs
imul
or
push
push
addr16
cli
test
test
stc
idivl
jne
shl
out
mov
push
subb
inc
ljmp
in
jmp
pop
add
mov
in
xchg
sub
mov
and
pop
insb
aam
imulb
shlb
addr16
sub
lret
shll
fs
sbb
jnp
js
and
jmp
inc
add
pushf
push
cmpsl
jle
xor
or
sub
add
test
xchg
aas
mov
push
scas
pop
jmp
fsubrs
adc
or
mov
mov
lods
xchg
movb
cmpsb
xchg
xchg
sub
xchg
shr
inc
aas
xor
in
outsb
adc
jns
push
int
aad
filds
das
fisubs
outsb
adc
jno
movsb
mov
ds
dec
pushf
movsb
mov
pop
sbb
bound
add
pushf
jns
inc
push
sub
out
inc
xchg
ss
adc
test
sbb
in
add
mov
inc
inc
xor
dec
ds
jle
mov
std
shll
imull
add
cmpsl
pop
inc
stos
mov
cmpsl
jg
xor
fsubrp
bnd
xor
dec
fisubs
inc
cltd
rorb
add
sahf
dec
push
ret
sbb
leave
iret
out
or
dec
ret
add
xor
call
aaa
pushf
jo
cmpsl
stos
or
fbld
mov
mov
xchg
dec
push
inc
in
lret
jno
out
aas
dec
into
cmp
pop
jl
das
pop
aas
xchg
cwtl
jg
idivb
gs
decl
fwait
in
fwait
loopne
es
lcall
testl
inc
jp
mov
fidivrl
mov
adc
push
sub
leave
cmp
loop
mov
sbb
mov
xor
js
mov
cbtw
mov
jg
test
cmp
or
inc
xorl
cmp
dec
push
idivb
sub
out
or
ss
sti
int3
push
aas
xor
out
push
lods
mov
push
test
push
adc
cmpsb
pusha
sahf
inc
fwait
je
and
jmp
sub
and
xor
or
push
add
daa
mov
gs
mov
add
ret
pop
adc
enter
es
int
xlat
mov
xor
addr16
popa
inc
and
ds
xchg
dec
xchg
ljmp
test
sbb
jns
shlb
xchg
test
dec
dec
dec
xchg
mov
push
xchg
jge
xchg
into
add
mov
aad
inc
inc
js
inc
mov
mov
dec
xchg
mov
mov
insb
outsl
pusha
and
insb
inc
stos
insl
inc
imul
test
xchg
movb
dec
mov
test
sahf
xor
jns
mov
sbb
sbb
xchg
xor
ja
leave
ss
inc
mov
repz
xor
mov
cmpsl
loop
test
ret
insb
cmp
cmp
hlt
addr16
nop
push
addr16
aas
psllq
in
filds
mov
stos
out
stos
mov
sub
add
mov
push
jge
sti
inc
repz
not
scas
int3
imul
lea
mov
mov
adc
or
mov
inc
jae
sub
stc
cmpsl
jo
repz
or
dec
sub
sbb
xchg
and
xchg
xorb
insl
jecxz
insl
rcll
enter
jg
outsb
push
adcb
pop
mov
ret
call
fcoms
cmp
mov
xor
das
out
cmp
xchg
or
ds
xchg
popf
lea
sbb
mov
mov
out
xor
les
fucomi
xchg
fdivrl
orl
loopne
imul
sbb
jns
xlat
cmp
push
loop
js
mov
sahf
add
addr16
test
loopne
addr16
pop
stos
les
cmpl
push
movsl
xor
xchg
andnps
push
dec
xchg
and
pop
pop
sbb
and
repnz
mov
dec
loop
dec
iret
mov
inc
push
push
call
mov
mov
or
rolb
sub
push
add
adcb
jnp
insb
test
loope
mov
xor
xor
jnp
ljmp
jecxz
inc
adc
fdivl
hlt
xchg
mov
cmpsl
sbb
popf
xor
pusha
xchg
sar
mov
pop
mov
pop
dec
mov
mov
nop
sbb
xchg
pop
pop
mov
jge
jae
pop
pop
cmp
xchg
cmp
lahf
popf
push
mov
jne
mov
insl
cmp
dec
sti
pushf
ret
pop
scas
data16
sub
mov
scas
or
pop
sub
xor
loopne
fiadds
movsb
icebp
test
mov
push
sbb
inc
out
jg
xchg
movsb
imulb
cmp
popf
sub
dec
hlt
gs
mov
adc
ljmp
sub
out
lahf
push
test
mov
jp
or
pop
in
mov
xor
cmp
fcoml
cmpsl
es
adc
inc
jp
mov
ja
xlat
push
and
and
out
pop
and
cmp
addr16
outsl
jae
dec
push
dec
push
sub
in
adc
xchg
inc
sbb
clc
mov
sbb
inc
lock
adc
loopne
adc
jno
out
xchg
mov
cmc
out
imul
pop
subl
inc
mov
mov
pop
mov
pushf
jp
inc
pop
insb
bound
ds
mov
add
or
push
repz
std
ficomps
push
mov
xchg
daa
andl
mov
xchg
test
cmpsl
imulb
and
and
or
psubq
sbb
jle
cmc
lock
inc
in
ss
enter
leave
in
ja
xchg
roll
jecxz
dec
push
fwait
stos
lret
push
xchg
mov
sarl
stos
test
lods
jne
xor
ret
lahf
mov
sub
and
cltd
sub
lea
sub
jo
pop
leave
cltd
jno
cli
sbb
pop
addl
je
pop
push
or
jno
push
jg
es
in
sbb
sbb
mov
cld
sub
in
cld
cmp
vmovddup
mov
mov
push
add
sub
jmp
jb
cmp
popf
adc
loop
mov
lock
jo
sbb
xchg
adc
mov
xor
mov
jle
shr
push
movsl
test
sti
imul
dec
fisubrl
jno
in
mov
call
or
pop
push
lret
add
adc
mul
cmpsb
xchg
movsl
gs
or
sbb
pop
or
add
in
inc
cmc
mov
stc
imul
subl
imul
insb
movsb
fdivrs
cmp
es
shll
or
mov
pop
push
xor
and
push
gs
add
sbb
incl
cli
pusha
loop
jge
scas
xchg
mov
dec
pop
inc
push
xchg
ret
testl
ja
push
mov
add
pop
outsb
fidivrl
stos
push
dec
pop
repnz
or
decb
test
pusha
or
pop
imul
fnstenv
lock
mov
xor
mov
sbb
pop
sbb
dec
or
cli
mov
mov
lret
mov
mov
lock
push
pop
mov
mov
in
cmpsl
call
inc
lcall
stc
mov
out
rcll
sbb
dec
lret
push
orl
rclb
lock
pop
push
call
xor
add
fwait
cwtl
jecxz
icebp
inc
mov
push
dec
mull
pop
jmp
std
dec
jmp
pop
jo
sbb
loope
aad
sub
jb
adc
sbb
sbb
ljmp
cmp
mov
push
pop
xchg
mov
mov
jo
mov
je
jae
cmp
mov
add
loopne
adc
cmp
daa
jne
aam
push
daa
jno
sar
enter
arpl
sahf
push
cwtl
push
jg
cmp
mov
adc
lods
fs
mov
loopne
mov
cmpsb
divl
inc
lea
adc
jmp
test
sub
notl
scas
jno
je
lods
ss
mov
push
les
dec
dec
adc
mov
inc
xlat
aam
lret
push
arpl
add
test
push
out
push
mov
jecxz
mov
call
xlat
dec
sarb
lods
push
aaa
int
aas
icebp
cmpsl
test
jp
std
not
add
ljmp
add
in
mov
add
xchg
mov
and
test
mov
push
mov
cmp
fdivs
fistps
cmp
push
or
cltd
fsubs
jmp
mov
leave
ret
or
adc
insb
or
dec
jbe
leave
je
xchg
les
pop
iret
cmc
mov
outsl
cltd
xor
lcall
and
mov
fldenv
push
mov
cmpl
sbb
lds
push
push
xchg
cmpsb
push
jecxz,pt
or
push
push
mov
jge
adc
rep
adc
pop
xor
jmp
fsub
lods
pop
rcl
sbbl
add
dec
aam
mov
seta
addb
gs
movsb
adc
stc
les
clc
add
pop
push
loop
xchg
sbb
scas
dec
mov
int
xchg
ds
pop
inc
sub
push
adc
dec
jmp
cmp
cli
pop
xchg
shll
xchg
les
repz
movsb
mov
repz
pusha
dec
sub
inc
mov
out
or
push
add
loop
inc
mov
fcoml
mov
jns
and
std
cmpsl
pop
push
enter
xchg
sbbl
push
repnz
push
add
mov
xchg
aam
mov
popa
imul
mov
movsb
mov
jbe
in
mov
fsubs
jmp
mov
imul
ja
jne
or
cmp
or
popf
push
lret
jp
sbb
ljmp
dec
jmp
dec
lock
jo
mov
jb
fnsave
and
xor
jp
or
leave
pop
js
adc
icebp
lea
jmp
jecxz
int3
or
mov
popf
loope
lods
out
enter
cmp
imul
jmp
push
jo
ljmp
push
push
push
dec
mov
pop
pushf
inc
sub
jg
in
add
insl
sti
pusha
xor
or
repz
mov
cltd
adc
mov
mov
mov
xor
sbb
jbe
xor
sbb
std
insl
fcomp
xchg
test
gs
add
dec
and
mov
dec
mov
out
pushf
push
cld
mov
shl
mov
and
adc
mov
cmpsl
mov
sbb
rorl
xlat
in
ljmp
ficompl
mov
xchg
aaa
push
sub
pop
mov
js
adc
push
data16
bound
enter
shrl
mov
fwait
lock
in
jg
cld
mov
mov
xor
xchg
or
scas
popa
xor
fcomps
cmc
xor
xchg
jno
cs
inc
xchg
xchg
out
lret
mov
xchg
ljmp
xor
aad
xchg
int
inc
mov
or
outsb
dec
loop
adc
and
jno
fs
pop
sbb
xchg
xor
rorb
xlat
inc
repz
cmpsb
fildll
push
dec
jbe
dec
outsb
lea
or
dec
add
ja
mov
dec
popa
aas
enter
cmc
jmp
rcrb
and
fsubrl
sti
and
cmp
add
inc
mov
sbb
popf
push
pop
or
xchg
inc
cmpsb
inc
cmp
inc
inc
sbb
mov
ss
mov
and
pop
sti
jne
shll
shll
dec
addl
aad
and
inc
lods
icebp
sub
adc
push
add
inc
into
aad
cmp
outsb
xor
cmpsb
sbbl
shll
or
dec
bound
dec
xchg
cmp
bound
cmp
sbb
aam
fbstp
mov
dec
mov
fimuls
and
add
cmp
movsl
cmpsb
mov
sub
jne,pn
sub
movsl
fwait
cmp
jnp
xlat
add
shl
add
sub
ja
sub
and
test
shrb
repnz
mov
push
loope
mov
in
adc
mov
pop
mov
inc
and
cli
xchg
adcb
or
rcll
aas
loopne
adc
dec
and
xorb
repz
sub
ret
into
lret
mov
push
idivb
test
xchg
movb
in
push
aaa
and
pop
or
xchg
ja
pop
enter
xor
mov
inc
in
mov
ja
add
popa
cmpsl
mov
jge
ret
test
jp
mov
cwtl
cmc
or
leave
cmp
jl
aad
outsb
xchg
cmp
pop
xchg
ljmp
insb
push
xchg
lret
sub
fcompl
call
or
cli
cli
and
or
xor
xchg
push
repnz
and
or
shl
pusha
insb
aad
mov
mov
lret
push
enter
sbb
mov
aam
in
push
cmp
out
and
mov
in
push
mov
pop
add
aaa
daa
sub
mov
loope
cwtl
cmc
pop
inc
pop
sarb
movsb
cmp
mov
enter
dec
fdiv
std
orb
les
fwait
xchg
sbb
xacquire
jae
test
int3
adc
jg
and
inc
rolb
mov
scas
cmpsl
pop
adc
mov
inc
pusha
sub
into
mov
ss
and
inc
mov
into
stos
pop
pusha
push
xchg
rcl
xor
jge
xor
pop
ljmp
jle
mov
sub
adc
mov
jle
sub
and
cmp
adc
loop
sbb
mov
dec
or
or
outsb
or
xchg
jp
mov
loopne
sti
mov
xchg
sahf
add
das
clc
mov
sar
sbb
ss
in
stos
out
sub
or
mov
adc
je
mov
pop
cli
dec
or
loope
loope
lds
shll
test
mov
and
jo
mov
mov
iret
or
scas
insl
out
mov
fdivl
loope
sbb
xchg
out
negb
jo
cltd
mov
not
outsb
xchg
mov
adc
mov
test
cmp
or
dec
dec
in
push
push
js
xchg
mov
or
in
sbb
push
les
pop
adc
and
fwait
pushf
pop
in
arpl
sub
test
test
inc
scas
pop
in
mov
shrl
stos
clc
addl
cmp
jp
jmp
jecxz
scas
lcall
sub
or
fiaddl
dec
mov
imul
pop
jb
dec
mov
pop
rorb
and
in
xchg
and
repnz
push
sub
outsl
push
mov
xchg
movsb
xor
call
mov
hlt
bound
daa
in
lds
cmpsb
or
fisubs
dec
shlb
pop
add
pop
push
inc
inc
loop
jnp
fwait
mov
push
jns
rolb
mov
pop
sub
in
push
mov
inc
in
push
bound
pop
in
stos
js
out
repnz
dec
lods
push
scas
out
lock
mov
mov
push
add
inc
push
pop
or
push
aam
mov
shll
cmpb
xorl
and
mov
clc
pop
push
or
adc
push
loopne
lods
pop
push
push
es
push
arpl
jne
aam
mov
subl
xchg
jae
cmp
insb
mull
cltd
outsb
scas
movsl
insl
sahf
movb
dec
pop
jb
adc
or
int
hlt
push
push
mov
scas
std
mov
pop
or
or
mov
outsl
push
mov
jbe
mov
mov
movsl
mov
pop
sar
mov
leave
lods
or
bnd
adc
jae
imul
cs
bound
mov
cs
dec
icebp
push
mov
jnp
mov
lods
lds
fiadds
out
cmc
fidivs
jb
ret
cmpsl
mov
sbb
xor
inc
push
cmp
xor
pop
mov
mov
mov
cmp
stos
mov
movsl
lds
faddl
pop
pop
dec
xchg
insl
pop
adc
mov
xchg
mov
out
jno
xor
add
mov
nop
cld
jbe
fistpl
sbb
dec
out
xchg
clc
stc
pop
ficomps
outsb
pop
fcmovnbe
bound
ljmp
cmp
dec
mov
pop
pop
xsaveopt
mov
decl
ret
pop
mov
push
mulb
sbb
enter
aam
leave
fsubr
or
outsl
negb
mov
int
xchg
cmpsl
lods
jmp
inc
push
jge
push
xchg
dec
xlat
mov
xorb
nop
or
jecxz
push
dec
int3
shr
dec
inc
std
loope
mov
ret
into
into
shlb
cltd
int
stos
imul
pop
dec
insl
lret
adc
repz
mov
xor
add
jg
insb
into
sub
arpl
and
ret
and
mov
cli
and
movl
stc
xchg
lahf
cwtl
push
out
jl
dec
nop
push
out
test
mov
and
popa
xor
adc
add
arpl
js
or
xchg
jne
cmpsl
adcb
xchg
fsts
aas
lock
inc
nop
sub
inc
cmpsb
xchg
sti
leave
xchg
lahf
lods
pop
fistpl
adc
xchg
cmp
cmpsl
push
lcall
mov
shrl
cli
sub
call
fimuls
je
pop
mov
push
ja
test
cmc
push
jo
cmp
lods
mov
out
in
cmp
out
aam
jb
arpl
ja
pop
imul
add
arpl
adc
orl
popf
mov
xchg
mov
sub
cmc
push
mov
jbe
mov
jb
lret
jmp
repz
gs
or
ss
pusha
and
mov
addr16
sub
lret
inc
jbe
inc
stc
out
adc
xlat
imul
cmp
xchg
enter
adc
jb
mov
sbb
out
insl
lret
popf
jbe
jb
jg
inc
push
outsl
mov
int3
sbb
int
jno
and
adc
cmp
call
rolb
mov
or
pop
jmp
push
stos
push
movsb
mov
sbb
sbb
ret
lea
aam
fistpll
jge
adc
mov
rcll
mov
xchg
insb
jle
mov
push
outsb
mov
sub
rcrb
inc
rclb
jb
jne
cmp
shrb
pop
pop
out
and
cmp
out
mov
aad
push
jl
clc
push
rep
or
dec
test
pop
add
ret
inc
cmp
jl
inc
not
push
adc
cmpsb
cmp
loopne
mov
shll
jne
inc
xchg
jle
mov
push
adc
mov
cmp
sub
xchg
inc
les
push
jb
test
inc
push
adc
push
bound
test
nop
pop
aam
arpl
call
push
jno
into
cwtl
mov
mov
or
test
dec
pop
xchg
in
daa
or
pop
pop
mov
sbb
jb
sub
jns
sbb
add
push
inc
in
jmp
xor
sbb
shl
in
out
xchg
insb
mov
fwait
lcall
scas
ss
adc
and
leave
out
test
lcall
addr16
sbb
mov
adc
pushf
mov
xorl
xchg
fs
pop
mov
xchg
jb
cmc
mov
push
xchg
in
jnp
cmpl
idivl
adc
xor
inc
jge
jl
shrb
call
jge
lock
xchg
scas
hlt
xor
jp
jmp
or
cltd
lods
adc
xchg
sub
xor
stos
mov
aas
loopne
add
dec
inc
lock
mov
sub
push
test
push
cmpb
push
rorl
pop
lods
repnz
daa
in
imul
pop
mov
sub
inc
or
cld
rcl
jmp
out
cli
xchg
add
cmp
scas
jbe
xchg
testb
and
cltd
scas
mov
stc
or
sarl
addb
adc
lock
nop
test
inc
inc
mov
and
and
lods
data16
push
xchg
adc
push
call
sub
xor
adc
mov
fisttps
push
mov
adc
fwait
jg
sti
push
xor
jns
scas
lcall
popf
fwait
mov
jae
ror
sbb
lods
sti
sub
call
cmp
cs
ljmp
jae
push
or
pop
pop
cmpsl
test
mov
mov
int3
idivb
dec
jno
popa
mov
scas
and
xchg
jo
subl
dec
je
mov
xor
cmpsb
clc
xchg
out
add
ja
int3
addr16
mov
scas
into
dec
jecxz
mov
outsb
xchg
add
iret
sahf
cwtl
and
and
loop
and
lea
ficomps
shlb
testb
mov
add
and
mov
in
lods
rcrb
mov
pop
popa
jnp
inc
sub
mov
fs
jle,pn
dec
outsb
mov
gs
out
dec
push
loopne
shrd
test
movsl
jo
cltd
jmp
push
cs
outsl
arpl
cmp
rorl
fisubs
dec
mull
ljmp
adc
inc
xchg
imul
fwait
rclb
jmp
and
imul
fwait
test
cmp
lods
adc
xlat
jne
mov
inc
loope
mov
mov
push
movsl
push
xchg
and
sbb
lret
rcr
out
mov
jne
enter
loope
sub
rorl
add
addr16
xchg
stos
push
xchg
call
ja
stos
mov
scas
sub
push
or
aad
aam
dec
leave
les
push
sub
hlt
mov
push
imul
xchg
jle
lea
jle
mov
imul
inc
sbb
outsl
enter
sub
inc
rcrb
in
nop
fimull
test
jmp
in
pop
add
repnz
adc
les
cmp
inc
scas
jecxz
aas
jnp
lods
mov
and
mov
nop
pop
mov
adc
adc
push
imul
fiadds
cmp
jno
bound
outsl
jl
push
jb
orb
cmp
es
in
adc
cmp
dec
and
push
add
adc
xchg
popa
aaa
ret
adc
push
push
mov
sub
repz
dec
inc
xor
cmp
jns
adc
cmp
add
sti
fdivr
jl
inc
pop
mov
pop
and
pop
xchg
loopne
mov
call
popf
push
xor
dec
jbe
add
xor
mov
inc
adc
pop
ds
lock
loopne
and
or
jl
jno
lret
scas
lea
add
inc
addr16
adc
nop
adc
scas
loope
pop
mov
xchg
inc
in
addb
cmc
sbb
test
xchg
cmc
jns
sbb
aaa
adc
adc
lods
mov
insb
sub
dec
ja
push
imul
sarl
inc
call
xor
jo
xchg
mov
jae
mov
xor
int
daa
add
sahf
adc
or
xchg
je
push
es
mov
fidivs
xchg
addb
jns
and
das
sti
cmp
xchg
xchg
xor
shlb
inc
mov
dec
jle
pop
and
mov
inc
test
aaa
jnp
push
outsl
sbb
jg
push
pop
into
test
movsb
orb
xor
push
je,pt
mov
mov
mov
xchg
testb
in
xchg
iret
xchg
pusha
insb
mov
js
ds
and
aas
or
out
incb
pop
cmpl
sub
lret
fidivs
xchg
rolb
xor
test
cwtl
rcr
lret
test
jno
hlt
fistps
push
das
add
test
in
loop
push
adc
mov
jge
inc
stos
cmp
xor
add
cld
sub
inc
mov
mov
cmp
push
jae
sti
ja
push
and
pop
add
mov
sahf
stos
xor
xor
in
pop
pop
or
lods
dec
test
mov
mov
inc
fucomip
cmp
cmp
addr16
jge
loope
cmp
js
nop
and
mov
push
loope
nop
test
mov
and
scas
xchg
aam
cmpsb
push
arpl
fwait
ljmp
xor
dec
lret
inc
push
cmp
shl
daa
jae
cmp
pop
test
fbstp
jle
or
out
fs
push
jns
sub
dec
pop
add
mov
sub
inc
icebp
popa
dec
mov
mov
pop
mov
lock
loop
pop
fbstp
mov
jb
js
mov
rcr
rep
mov
dec
sbb
loopne
sub
test
adc
mov
rorb
inc
jge
jne
popf
inc
add
sbbb
jno
out
addps
xchg
ss
inc
xchg
ja
aaa
pop
adc
ss
in
pusha
das
jbe
fsubrl
or
inc
adcb
mov
add
stc
sub
sbb
push
xlat
pushw
in
xor
cld
js
inc
push
mull
and
lret
push
cmpb
jp
insb
gs
shr
and
repz
mov
insl
fisubs
leave
iret
inc
repz
sarl
pop
inc
test
push
lahf
out
ss
bound
mov
xchg
xchg
mov
jmp
jbe
and
pop
pop
das
mov
enter
mov
insb
add
push
nop
lea
push
test
popa
pushf
mov
sub
jp
addr16
pop
int3
sbb
inc
jae
push
cmpsb
jo
jmp
stc
mov
js
mov
cmovbe
fisubrl
adc
fs
dec
inc
mov
incl
outsb
ljmp
mov
stos
dec
ss
ja
in
xchg
aad
push
sub
inc
xchg
cmp
sbb
push
fwait
add
jp
add
or
mov
sub
lea
jnp
xchg
call
daa
cmpsl
dec
iret
jmp
inc
out
mov
mov
lock
jle
pop
into
lods
aad
fbld
cmp
cmc
adc
sbb
mov
test
lmsw
push
inc
ds
add
daa
sub
xchg
mov
mov
test
cmpsb
into
add
cmc
and
mov
push
or
jmp
or
lock
into
push
cs
prefetcht0
cld
mov
pushf
lock
popa
adc
push
iret
repz
cmp
mov
stc
subb
mov
std
pushf
xor
jae
sbb
adc
por
std
ljmp
sbb
and
out
cltd
mov
fcomps
or
push
or
add
imul
cmp
arpl
xor
mov
decl
lret
jg
imul
fisttps
lock
mov
outsl
int3
rorb
mov
lea
lret
adcl
cmp
mov
call
xchg
cmp
sub
push
sub
out
mov
fistl
decb
popa
sbb
mov
jo
xor
push
cmp
xchg
xor
fwait
test
ss
repz
xcrypt-cfb
cmpsl
es
push
mov
shl
negb
addr16
dec
sbb
sub
or
cmc
cmp
add
sub
fnstenv
adc
iret
in
sbb
sbb
into
sbb
pop
or
dec
stos
dec
jnp
jbe
insl
lods
test
mov
ja
int
mov
mov
mov
pop
lods
mov
xchg
or
sub
stos
sub
in
mov
xor
cmp
imul
gs
test
psubq
sub
adc
cld
dec
mov
scas
mov
and
lcall
adc
imul
jg
or
push
ds
mov
bound
nop
push
cld
arpl
mov
sbb
add
and
push
jl
movsl
xchg
mov
jmp
mov
aas
in
bound
pop
sahf
dec
jbe
xlat
fnstsw
addr16
int
lret
jnp
lahf
call
push
js
mov
jmp
push
fucomip
sbb
xor
push
push
test
cmpsl
icebp
add
stc
pop
test
xor
xchg
inc
scas
sbb
and
cmp
call
xchg
pop
adc
cmp
aam
enter
dec
xor
mov
lret
cmp
jmp
mov
fs
int3
pusha
and
xchg
add
xchg
adc
loop
jne
sarl
loopne,pn
push
push
xor
sub
push
xchg
xchg
popa
pushf
xor
popf
mov
sbbl
pop
xrelease
mov
aaa
sar
pushf
iret
or
icebp
mov
ficoms
arpl
int
clc
lahf
xor
or
add
in
daa
mov
lods
in
adc
ficoms
mov
dec
sub
lea
mov
push
cltd
or
cmp
sahf
dec
xchg
or
pop
xchg
and
out
push
xor
xor
jmp
inc
add
in
and
jns
sub
add
mov
aad
sti
roll
jge
out
test
sahf
sahf
lret
xor
dec
repz
push
push
in
mov
out
inc
cli
das
shl
lods
cmc
nop
push
xor
dec
cmp
ret
xorb
into
mov
das
inc
ljmp
idiv
cli
inc
movhps
into
shll
dec
xchg
mov
fs
jecxz
lock
out
adcb
mov
adc
js
enter
fwait
sbb
test
adc
xor
fsts
imul
ds
mov
out
push
mov
sbb
das
sbb
imul
adc
filds
dec
cmc
dec
int3
popa
xchg
xchg
lods
mov
lea
lahf
ljmp
xchg
push
cmp
push
out
xchg
int
and
cmp
lock
push
mov
movsl
jp
ja
cs
ror
sbb
imul
inc
ja
and
hlt
or
stc
fisubrl
nop
sbb
pop
xchg
or
cmp
outsb
inc
test
dec
add
mov
test
clc
xchg
test
cmc
push
jo
pop
mov
ss
jecxz
movsl
push
hlt
xor
and
jbe
sbb
movsb
loop
insb
mov
jg
xchg
incb
in
xor
sub
sbb
jecxz
xor
insl
jbe
icebp
mov
rorl
imul
lahf
mov
js
cmp
mov
aaa
or
jne
movsb
push
xchg
mov
cmp
cmp
inc
stos
push
test
cmp
adc
mov
adc
hlt
das
fstl
cmpsl
lds
sbb
insl
mov
dec
pop
jb
xor
cmp
dec
test
bswap
scas
lcall
not
xlat
adcb
dec
push
sbb
add
jns
cmpsb
out
in
dec
inc
in
fwait
and
add
dec
jns
femms
sbb
dec
push
outsb
adc
push
sbb
out
js
hlt
sbb
pop
mov
in
pop
mov
mov
mov
sbb
sbb
or
dec
xchg
test
mov
jp
mov
jo
movsb
sbb
adc
xchg
call
and
fildl
fdivs
mov
mov
inc
imul
mov
shlb
movsb
mov
je
and
mov
les
pop
xchg
xchg
ds
xchg
or
jbe
aas
jg
fldenv
gs
pop
mov
shr
in
adcl
mov
mov
aam
jmp
add
out
inc
jge
popf
adc
xchg
repz
xchg
jecxz
jne
mov
stc
test
sub
or
jge
sbb
fldenv
push
xchg
aas
xor
inc
push
sbb
dec
daa
sbb
cmc
mov
sti
mov
dec
repz
push
shlb
xor
sbb
xchg
fiadds
xchg
iret
xchg
jmp
or
fidivs
lock
outsl
repz
and
push
cmpsb
mov
xor
sub
mov
mov
mov
mov
dec
mov
leave
jo
test
cmp
cltd
in
rclb
add
imul
pushf
ljmp
adc
inc
jns
leave
outsl
sbb
sbb
mov
insl
mov
pop
lahf
bound
sub
mov
mov
aas
pop
out
xor
test
pop
xor
in
cmpsl
add
ficompl
insb
insb
push
scas
fs
insb
repz
jne
inc
cmp
aaa
les
sbb
sbb
test
int3
enter
push
popa
enter
jle
fistpl
out
cs
sub
or
popf
push
xorb
das
addl
and
inc
adc
in
mov
push
leave
nop
leave
mov
in
icebp
sub
sbbl
in
xchg
xchg
push
outsb
add
test
add
mov
jnp
mov
das
lcall
cmpb
cmp
dec
dec
jns
sbb
outsb
cmpsb
add
out
orb
shll
pop
dec
push
pusha
sbb
push
push
pop
ljmp
into
jb
mov
inc
and
xor
jle
jb
sub
pop
inc
stos
imul
jge
jmp
push
pop
add
xchg
mov
cmp
fisttpl
int3
push
mov
xchg
xor
sbb
cli
out
ret
lock
out
cmpsl
shlb
and
add
adcb
sub
xor
insl
out
es
icebp
lahf
xchg
mov
fs
sti
mov
xchg
adc
pop
repnz
dec
mov
ficomps
mov
lock
jp
scas
mov
inc
aas
test
xor
jbe
sahf
or
adc
push
aas
inc
iret
cmp
out
or
pop
dec
popf
in
stos
imul
shlb
and
mov
mov
lods
inc
sub
mov
mov
not
or
cmpsb
or
add
adc
imul
push
mov
lret
imul
dec
ds
xor
add
js
testb
push
ret
orl
push
adc
sub
mov
mov
sub
lea
lea
add
sti
jmp
stos
mov
mov
stos
cmp
shll
sub
notb
int
test
and
loope
cmpsl
xor
ds
dec
loopne
xchg
sbb
in
push
and
lahf
popf
jae
ds
inc
mov
lea
lds
jp
je
ds
mov
clc
sbb
outsb
dec
inc
pop
cmpsl
fwait
repz
out
and
daa
mov
xchg
aam
mov
pop
jmp
xchg
aas
inc
push
mov
dec
inc
into
test
sahf
mov
jns
push
inc
mov
jl
int
pop
cmp
xlat
xchg
lods
inc
in
push
add
cltd
jbe
fcomip
or
in
outsb
jge
push
push
int
sahf
addr16
loopne
dec
dec
adc
push
int3
and
adc
repnz
jp
sahf
fwait
int3
ljmp
scas
inc
push
add
xchg
xchg
outsl
shl
or
shrb
sbb
cs
jg
mov
fmul
or
shlb
pop
and
cltd
inc
sbb
and
pusha
inc
popa
iret
xchg
out
and
stos
push
stos
adc
test
jl
sub
sbb
mov
fstl
mov
mov
lret
cmpsb
xor
mov
pop
push
shl
out
dec
pop
add
xor
push
cmp
js
cmp
or
push
jae
xor
stc
jns
insb
xor
popf
jl
imul
popf
push
aaa
call
xor
cwtl
push
and
and
imulb
xchg
dec
push
xchg
adc
xor
lahf
gs
fdivp
stos
push
jle
scas
cltd
shr
xchg
dec
cmpsl
stos
cmpb
and
jae
in
jl
and
notl
cmpsl
and
sub
sub
lret
mov
out
pop
clc
or
int
xor
adc
cmpsb
imul
mov
xchg
sbb
or
inc
xchg
mov
dec
mov
jns
in
jp
and
jbe
out
inc
or
out
and
dec
and
cmp
pop
cld
das
cli
or
clc
sbb
ljmp
stos
xchg
rorb
std
icebp
testb
jle
xor
xchg
mov
ja
sub
popf
lds
mov
or
fstl
pop
mov
push
mov
inc
ja
and
adc
sahf
movsb
insl
pop
mov
out
test
out
xchg
mov
pop
jp
orb
sub
out
push
pushf
push
xor
data16
cmp
mov
mov
pop
xorb
push
xchg
xchg
lret
inc
xorl
mov
ljmp
out
xchg
shlb
pop
pop
lcall
and
push
xchg
add
fistl
mov
movsl
out
sbb
mov
dec
add
mov
out
xor
lods
je
adc
sub
push
mov
sub
jae
mov
and
dec
cltd
xor
fimull
mov
inc
sbb
or
repz
mov
jp
jmp
mov
pop
mov
dec
jl
lods
sbb
sbb
loopne
inc
scas
pushf
cmp
mov
mov
dec
and
and
fcoml
pop
into
sbbl
ret
ds
sbb
lahf
dec
adc
inc
or
into
and
jns
cmp
jbe
mov
xchg
fiaddl
or
xor
ret
in
lahf
mov
mov
mov
jle
sub
cltd
xchg
push
fstl
xor
pop
fwait
pop
ja
in
out
iret
xlat
or
addr16
fcoml
out
cmpsl
and
lret
ja
hlt
sub
lcall
cmc
mov
gs
imul
fildll
cmc
mov
cmp
push
mov
mov
dec
mov
inc
lods
lods
or
cli
mov
ja
sub
mov
jo
mov
pop
iret
shlb
cmpb
iret
cmp
aas
stc
adc
mov
addr16
test
or
fwait
lcall
xor
popa
shl
sub
jb
mov
mov
int
and
leave
mov
jo
mov
mov
mov
add
mov
jbe
lds
arpl
jge
repnz
inc
stc
sub
fistl
adc
jmp
xchg
and
or
mov
mov
cmp
sbb
aam
cwtl
inc
sbb
js
sub
push
imul
clc
leave
mov
jno
test
mov
jmp
in
pusha
jb
xorl
or
jmp
test
shll
push
dec
mov
xchg
xchg
movups
and
fldenv
push
popw
or
dec
push
push
into
cmp
push
or
push
fdivrl
fiadds
and
sahf
push
jb
pushf
mov
mov
inc
stc
dec
mov
jae
jb
xchg
sti
in
sbb
add
or
ds
adc
cmp
mov
push
dec
xchg
data16
mov
andl
mov
shll
lock
cmp
mov
push
into
sub
sarb
arpl
xorl
pop
shl
filds
sbb
pop
rcr
je
out
xchg
or
lods
mov
mov
push
data16
sbb
cs
rorl
mov
mov
in
aad
aas
cmp
sbb
imul
daa
popa
stc
imul
packuswb
xchg
jno
mov
aaa
ret
sub
inc
out
je
pop
mov
jecxz
push
inc
loop
pop
jmp
ljmp
sbb
ja
add
pop
or
jl
cmp
stos
and
aad
cmp
and
xor
insl
je
push
ss
xchg
loope
fisttpll
es
imul
dec
lret
pop
adc
test
pop
popa
movsl
sahf
aam
add
imul
loopne
lahf
ret
xor
sti
mov
test
pop
pop
push
stos
sub
imul
jg
and
push
inc
add
xchg
into
mov
xor
daa
adc
data16
xlat
dec
std
gs
mov
in
out
inc
inc
shrb
jbe
and
iret
push
leave
addl
nop
mov
push
jl
lock
xorb
insl
pop
push
and
pop
outsl
sbb
sub
fs
xchg
ret
mov
popa
jnp
add
fucom
dec
and
stos
fidivrl
xor
scas
pop
cmp
repz
repz
out
xor
es
sub
pop
aaa
hlt
push
sub
jb
add
push
dec
out
xchg
enter
inc
xchg
and
mov
lock
cmpsb
cmp
cmp
sub
cli
add
push
popl
scas
jl
bound
lcall
jbe
fdiv
or
sub
repz
scas
push
cli
insl
loope
push
pop
cld
repnz
or
xchg
and
and
mov
push
pusha
bound
mov
xor
addb
fmuls
imul
sub
and
int
fsin
int3
imul
mov
sbb
je,pn
or
es
and
repz
test
mov
mov
subb
stos
into
out
dec
iret
mov
fists
xor
jns
cmc
dec
cmp
adc
add
jle
test
cmp
loopne
cmp
or
repnz
out
es
mov
mov
clc
xor
jp
fdivrs
sbb
fdivl
cltd
xor
mov
faddl
fidivs
out
notl
xchg
xor
and
push
les
es
loope
pushf
cmp
cmp
mov
xchg
mov
push
jns
out
cmp
leave
or
mov
push
push
cs
fstp
inc
xchg
fidivs
aad
mov
add
adc
iret
inc
je
mov
bound
stc
push
sub
aas
mov
cmp
out
jle
or
stos
les
jbe
and
rorb
mov
ss
jae
xchg
mov
cs
jb
insb
cmp
je
mov
add
push
icebp
movsl
in
outsl
push
cwtl
addb
or
dec
add
repnz
jo
test
adc
xchg
adcb
inc
sbbl
dec
mov
fsubs
sbb
popa
dec
sub
daa
mov
push
push
xchg
inc
das
jo
mov
std
or
pop
arpl
out
pop
cltd
dec
loope
jbe
inc
or
cmp
xchg
ds
lds
fcomip
xor
movsb
sub
mov
xor
cltd
jl
je
shll
push
fisubrl
out
mov
inc
in
sbb
cltd
and
add
loope
nop
fbld
cltd
or
mov
inc
or
mov
inc
outsl
cmpsl
or
popf
mov
or
sahf
into
loop
pusha
xor
xor
call
mov
xor
or
jno
std
test
out
lahf
dec
fnstsw
sarl
movsl
dec
mov
iret
lock
mov
jecxz
mov
dec
daa
add
shrb
pushf
fists
jl
repz
loop
mov
adc
in
push
stc
sub
inc
cwtl
pop
mov
jns
decl
inc
xchg
in
cld
jle
mov
sahf
mov
ja
mov
mov
sbb
sbb
push
xlat
cmp
xchg
das
xorb
mov
repz
int3
push
push
sub
pop
xor
inc
lods
mov
push
mov
mov
xchg
mov
jmp
xor
inc
mov
inc
stos
lea
push
bound
xor
sahf
int3
and
push
aad
out
ds
ret
test
fwait
push
lods
jae
add
mov
test
jno
or
insl
shr
data16
int
sbbb
fsub
je
ljmp
dec
add
xchg
sub
or
jg
stos
adc
mov
aaa
imul
and
gs
dec
movsl
repnz
fldt
insb
rclb
lret
mov
rcll
cmp
xchg
cmp
push
mov
jne
ljmp
cmpsb
cmp
xchg
ja
cmc
mov
dec
mov
jge
push
xchg
ljmp
xor
mov
xrelease
test
andb
outsb
push
mov
inc
pop
sbb
sar
cmc
cli
xchg
mov
add
adc
ret
push
mov
scas
insb
movsl
sbb
cmc
jge
clc
mov
mov
jo
adc
jg
lahf
push
mov
adc
mov
sub
adc
testl
in
adc
sub
sahf
push
add
sub
pop
shrb
lcall
rclb
stc
adc
mov
sbb
sbb
push
fdivr
or
popa
inc
clc
pop
sub
test
jbe
outsl
mul
clc
loopne
stos
add
daa
push
out
dec
xchg
mov
out
repz
and
sbbb
mov
shr
aaa
push
fs
xchg
lods
and
adc
cltd
and
sub
pop
in
inc
jo
and
out
mov
test
or
repnz
scas
jge
in
insl
out
lea
ss
test
mov
lds
scas
or
push
js
cmp
xchg
je
pushl
xor
and
jl
ds
dec
dec
xchg
and
lods
cmp
loope
aam
push
sbb
fldcw
mov
inc
rorb
sub
scas
aam
jae
bound
sub
jmp
mov
cmp
sti
pop
shll
jmp
pop
mov
inc
sub
outsl
out
lock
and
jl
fdivrs
test
push
inc
aaa
xlat
test
add
sbb
mov
mov
jp
fdivp
pushf
or
cli
inc
mov
fwait
lcall
ds
fs
cmp
test
imul
adc
sub
pop
fisubl
mov
adc
cmpsb
xor
lods
cmp
adc
jg
jnp
sbb
subl
popf
cmpsl
lods
mov
pop
outsl
cmp
sbb
out
jl
fmull
fwait
inc
ss
movsl
push
xor
sub
lret
xor
inc
mov
lea
out
inc
mul
in
push
shl
mov
and
stos
fbstp
add
lock
test
pop
mov
mov
xchg
cmp
pop
pop
push
dec
xor
push
push
jg
addb
push
sbb
icebp
mov
std
mov
mov
mov
mov
mov
in
adc
insl
mov
loopne
dec
mov
mov
xchg
fstpl
cmp
shll
fmuls
add
lods
mov
mov
mov
mov
hlt
loopne
lret
jne
imul
leave
popf
pop
repnz
push
ljmp
sbb
mov
femms
int
sbb
outsl
movsb
repnz
je
cmp
or
sbb
sti
lods
xchg
sbb
dec
push
das
sub
mov
loop
cld
jno
push
jno
inc
push
sbb
pop
jl
lock
leave
nop
dec
test
scas
nop
mov
movsb
std
mov
push
adc
gs
inc
les
or
mov
and
aas
fmull
cmpsb
aam
cli
or
jb
popf
insl
out
dec
adc
test
and
jns
aam
lods
rcr
outsb
movsb
pop
pop
push
sub
mov
mov
sub
jnp
and
adc
ret
scas
jg
outsb
js
movsl
dec
roll
mov
push
xorb
imul
sbb
dec
rolb
sti
inc
or
mov
out
push
dec
fidivl
test
arpl
fwait
mov
add
push
into
lea
lret
add
push
add
lods
xchg
or
inc
callw
adc
stos
add
dec
dec
jo
xor
data16
scas
xchg
push
and
pop
jne
mov
aas
jo
jnp
cltd
ljmp
mov
cs
fcomip
xchg
dec
cmp
or
inc
in
lods
lds
adc
int
scas
leave
dec
testl
mov
mov
or
jle
adc
rcrl
jp
es
xor
cmp
jo
jbe
loopne
movnti
insl
test
pop
xor
adc
add
ja
or
jb
ljmp
jp
mov
fistpl
data16
and
insb
mov
dec
mov
mov
dec
insl
ja
inc
imul
jne
inc
aam
in
aas
xchg
xchg
je
insl
out
dec
mov
and
das
cli
xchg
xor
jl
fdivrs
leave
inc
pop
cmp
xchg
add
lret
lods
mov
add
and
aaa
add
or
and
xor
jp
mov
cmp
mov
notl
jmp
movsl
mov
int3
ficoms
movsb
jnp
inc
and
clc
lcall
and
sbb
stos
test
cltd
ficompl
outsb
or
lahf
stos
outsl
pop
mov
test
xor
add
sar
or
sbb
int
fchs
xchg
adc
push
sbb
fcomp
mov
ficompl
jno
jbe
cmpsl
or
jnp
out
and
rclb
mov
repz
mov
dec
xchg
xor
and
lods
jne
leave
fistps
sahf
mov
js
mov
sub
xchg
push
xor
and
and
xchg
cmpl
mov
repz
jnp
push
mov
and
jp
xchg
jmp
mov
pop
clc
or
fiadds
fimuls
int3
lds
outsb
addl
enter
ret
sub
mov
daa
ss
adc
adc
push
paddd
in
push
sub
out
into
mov
push
xchg
push
jle
inc
pop
shll
mov
aad
gs
xlat
icebp
jg
dec
push
pop
mov
xor
inc
fs
pop
xchg
cmpsb
and
adc
outsl
loope
and
loopne
xor
cmp
push
mov
outsw
adc
pop
pop
scas
pop
rclb
mov
jne
clc
mov
movlps
movsb
scas
pop
sub
in
aam
pop
fisttpl
pop
lods
pop
lret
or
into
xor
pop
mov
add
pop
gs
push
jns,pt
push
movsl
cmp
and
mull
xor
pop
jns
cmp
daa
push
and
divl
ds
gs
lret
shlb
pop
in
nop
cs
in
insb
pop
mov
xchg
dec
pop
and
pop
xchg
xchg
mov
xchg
popf
sbb
mov
stc
push
cwtl
test
cmp
xor
nop
aam
xchg
divl
cltd
push
mov
mov
jl
scas
das
fistpl
pop
mov
into
stos
loopne
sahf
cltd
repnz
and
jne
dec
dec
adc
das
sbb
pop
push
stc
cmpsl
das
push
or
iret
scas
mov
ds
mov
push
popa
outsl
adc
test
notb
jnp
jp
adc
dec
std
jecxz
test
pop
xor
sub
in
out
ret
gs
jecxz
fcoms
adc
mov
mov
pushf
loope
jnp
fistl
dec
ja
in
add
leave
movsl
rclb
xor
xchg
add
js
push
fcmovnbe
out
jne
pop
dec
mov
xchg
sahf
je
xchg
into
and
lock
icebp
cmp
sahf
pop
mov
jo
loop
jno
jmp
push
cmp
insl
cmc
sbb
xchg
andb
scas
cmpsb
repz
insb
pusha
out
scas
mov
sbbb
enter
std
dec
pop
gs
push
jl
pop
dec
decl
pop
xor
mov
push
ja
hlt
scas
dec
mov
fsubl
iret
mov
fmull
lods
dec
mov
or
xchg
movsl
and
mov
mov
inc
mov
test
daa
scas
std
push
shll
cli
xor
add
xchg
jecxz
mov
jnp
jne
hlt
jb
mov
pop
push
cli
pop
jb
inc
lock
jle
dec
cmpsb
repnz
push
pop
and
push
sbb
mov
sbb
in
mov
pop
out
mov
outsl
mov
rol
loope
into
popf
jno
imul
jne
lret
push
jo
das
push
xlat
ja
xor
test
push
and
stc
clc
inc
cmp
bound
out
mov
in
jg
or
mov
lea
fnstenv
out
movsb
clc
adc
stc
pop
jb
jg
fidivrs
push
cmp
add
and
push
cmp
pusha
int3
and
idivl
push
mov
imull
in
fldt
mov
ret
lret
je
cmp
pop
out
negb
nop
and
test
dec
push
add
inc
ljmp
mov
mov
fptan
js
rclb
mov
mov
ret
hlt
das
cmp
jns
push
bound
jne
mov
cmp
loopne
mov
rcrl
push
jge
add
adc
cmp
loope
jns
mulb
jnp
out
mov
or
mov
mov
shlb
mov
test
xchg
imul
mov
or
adc
lahf
popfw
inc
fisubs
fdivp
mov
add
jne
push
sbb
fdivl
push
enter
sub
jl
movntps
pop
jnp
inc
mov
cmpsl
and
add
imul
loopne
aaa
ret
adc
mov
sub
imul
mov
push
push
sahf
sub
fldl2t
in
lods
testb
dec
imul
insb
pop
mov
xorb
xor
pushf
inc
dec
push
dec
mov
ret
mov
mov
into
push
and
adc
pop
pop
lret
add
xchg
mov
data16
fidivs
rcll
jnp
mov
pop
mov
mov
negl
jae
js
jne
xchg
daa
insb
aad
gs
jge
xor
lret
push
lea
jb
mov
jno
or
xlat
fwait
scas
xchg
aas
sub
pop
ja
insb
lock
dec
rcrb
adc
cwtl
test
adc
mov
inc
ss
aam
xchg
add
pop
xchg
ss
aas
cltd
jo
and
mov
mov
sub
fsubrl
fbstp
adc
push
sahf
subl
ja
mov
mov
ret
aas
mov
icebp
xchg
cmpsl
lahf
or
push
push
lahf
cmp
push
mov
call
cmp
jne
idiv
xor
pop
popf
push
gs
push
xchg
aas
xlat
add
mov
pop
mov
js
leave
pop
in
and
pop
loopne
xorl
jp
out
xchg
das
divb
push
xchg
and
sbb
dec
jp
mov
or
mov
imul
or
out
dec
xchg
movsb
das
lods
inc
jb
adc
jmp
xlat
pusha
dec
addr16
mov
push
dec
pop
pop
in
sub
int
cmp
dec
jl
jmp
fcompl
jne
outsl
scas
mov
mov
sahf
stos
scas
hlt
xor
push
cmc
es
mov
push
xchg
mov
mov
daa
popa
xchg
call
ja
cmp
xor
jg
ret
icebp
enter
jnp
mov
popa
stos
outsl
cmpsb
lock
inc
push
pusha
xchg
mov
push
mull
ljmp
dec
cld
dec
xchg
loop
mov
aam
pop
jg
sbb
pop
xor
out
lock
shll
xor
pop
mov
cli
add
push
or
stos
pop
mov
cmp
sub
mov
js
cmp
fs
into
or
push
int3
add
pushf
jg
adc
inc
cmp
mov
dec
mov
pop
jno
bound
mov
int3
push
adc
cmp
out
xchg
call
add
mov
add
jp
out
flds
fcoms
lods
and
notb
pop
lret
push
out
int
or
cmp
dec
mov
cmp
push
xor
cmpsl
mov
dec
fsubrs
pop
outsl
mov
mov
das
pop
push
call
xor
mov
outsl
push
mov
lret
cmp
sbb
lahf
sub
sahf
xor
test
lds
mov
add
sbb
push
cli
loopne
jle
xor
test
adc
dec
push
out
inc
lret
cmp
negl
aaa
jo
adc
pop
or
test
sbb
push
test
cs
sbb
stc
mov
jbe
cmp
lds
push
jb
mov
cmp
sub
es
aas
mov
mov
add
mov
push
sbbb
xor
daa
adc
fadds
daa
xor
mov
lcall
sbbl
ljmp
jg
pop
inc
inc
aaa
lea
xor
outsb
stos
stos
mov
insb
int3
enter
add
shl
pop
movsl
mov
mov
dec
or
sub
fcoml
je
or
xchg
test
ds
xor
jmp
and
sbb
loopne
add
mov
clc
sbb
test
arpl
mov
sub
push
xchg
sarb
jmp
xchg
mov
pop
add
out
jns
or
mov
push
dec
add
xor
sub
mov
test
sahf
fisubl
fxch
dec
or
add
out
adc
sub
aam
push
adc
movzbl
xor
inc
sub
ficoml
inc
xchg
and
push
mov
hlt
push
jae
lret
je
xor
imul
imul
or
and
les
mov
addl
lea
ds
and
fdivs
shll
push
push
and
pop
dec
mov
lret
mov
enter
sub
ljmp
push
imul
out
xorl
adc
movsl
hlt
cmpsl
pop
popf
or
ss
test
sbb
inc
movb
orl
mov
iret
outsb
loopne
mulb
xchg
fptan
addr16
mov
jecxz
shl
sbb
pop
xor
incl
xor
xchg
ficoms
fstps
xchg
xchg
mov
shrb
mov
xorb
sub
pop
inc
lds
xchg
pop
inc
or
fwait
mov
orb
mov
aas
data16
mov
in
pusha
xlat
shl
sub
adc
test
and
outsl
xorl
sbb
cmpsl
or
aas
aaa
xor
stos
jb
inc
pushf
and
es
sbb
into
cmp
jns
adc
cltd
inc
xor
shlb
incl
dec
push
scas
xchg
dec
cmp
cmpsb
dec
or
sti
out
rcll
clc
xor
push
cmp
idivl
push
add
ficoms
inc
js
sarb
movsb
popf
outsb
push
sbb
enter
push
inc
cmp
jo
sarb
sbb
pop
bound
loopne
inc
or
sbb
clc
add
cmp
dec
test
or
dec
or
mov
stc
fxch
xchg
int3
ud1
aas
cli
add
adc
cwtl
xchg
lret
sbb
jnp
jg
push
in
mov
add
jo
or
inc
in
jecxz
mov
in
xchg
pop
pop
fwait
mov
aad
jp
sbb
fidivl
outsb
xchg
adc
out
push
data16
out
mov
jnp
cmp
decb
shrl
add
enter
adc
fidivrl
hlt
push
xchg
and
lcall
loope
xchg
jmp
jno
mov
lds
jae
mov
aam
lret
cld
hlt
data16
push
sub
int
test
cs
in
mov
sub
iret
in
outsb
int
out
xor
and
sub
jp
mov
addb
movsb
fisttps
adc
adc
jl
and
inc
dec
out
mov
icebp
sti
xor
dec
sbb
cwtl
jp
xor
ss
fadd
ljmp
add
fidivrl
insb
popa
jb
jmp
les
testb
mov
mov
xchg
push
sbb
nop
enter
shlb
pop
cmp
mov
in
sarb
inc
data16
sti
iret
inc
fwait
xor
sub
or
cld
mov
imul
ror
pop
pusha
inc
and
psrld
pusha
and
dec
cli
mov
pop
pushl
lcall
xor
sbb
xor
insl
into
add
xor
cmp
in
xchg
jmp
or
jb
sbb
jmp
sbb
xchg
stos
test
add
ret
in
scas
frstor
jbe
push
jbe
mov
mov
rolb
mov
and
movsb
repz
sbb
fsubs
mov
sbb
sub
mov
popa
inc
mov
fldenv
xor
lds
jle
sahf
repz
or
test
sbbb
insl
pop
fdiv
mov
inc
pop
std
ret
rcrl
sti
lock
cmpsb
jne
cmp
in
fs
call
sub
in
and
sbb
add
mov
cmpsl
fisubrl
add
dec
jb
in
dec
push
cwtl
push
mov
or
cmp
shrl
jg
rcrb
ss
call
mov
dec
xchg
fadds
sbb
and
and
mov
pusha
sbb
push
movsl
sahf
loope,pt
push
ret
jae
out
inc
and
mov
jecxz
pop
adc
in
or
and
pop
and
mov
into
insl
stos
outsb
popa
call
inc
mov
and
xchg
sbb
push
nop
and
cmp
xchg
xor
aaa
loop
fwait
dec
sub
sbb
lock
mov
enter
mov
scas
push
cmp
movsl
lret
loop
xor
mov
cmp
fstp
rorl
ljmp
cmc
lret
or
mov
pop
jae
test
mov
test
scas
rol
inc
fdivl
push
shl
dec
jg
shrl
cmp
out
mov
jns
add
mov
pop
sub
outsb
cmp
sarb
test
add
lea
lret
sub
cmpsb
cmp
sub
push
inc
in
xor
lea
pop
test
mov
dec
out
test
jle
mov
mov
add
arpl
jl
lods
mov
add
or
add
add
testl
nop
jge
add
shlb
dec
push
dec
push
sbb
xchg
call
fldcw
push
outsl
jmp
mov
ror
dec
pusha
mov
adc
nop
shll
out
and
xor
push
call
lret
test
and
mov
test
mov
push
and
inc
icebp
divb
xchg
les
nop
mov
lods
ret
clc
or
insl
xor
push
pop
cli
inc
lret
mov
inc
mov
imul
or
xchg
scas
in
mov
adc
push
cmp
push
and
mov
inc
dec
stos
pop
add
fwait
xchg
push
movsl
sub
jmp
mov
mov
push
lret
cmp
int3
sbb
cld
adc
and
aad
test
sbb
inc
lahf
aam
jp
jae
mov
and
xchg
hlt
jecxz
push
add
push
mov
scas
xchg
jae
inc
add
mov
outsb
dec
cs
sub
test
jle
loop
pushf
cmp
stos
aad
lret
or
clc
mov
add
jnp
jg
adc
push
sar
mov
push
sbbl
into
scas
adc
adc
xchg
mov
pusha
pop
mov
jp
mov
and
inc
cmp
int
mov
gs
mov
pop
jbe
repz
xchg
jns
pusha
jo
cmp
cmpsl
lock
insb
pusha
cmp
push
adcl
aad
push
out
pop
xchg
movsb
lret
mov
or
sbb
cmp
fs
mov
mov
std
clc
clc
insb
mov
outsl
ret
or
out
out
mov
sbb
xor
cs
mov
sub
fldl
or
xor
cwtl
jecxz
lods
xchg
cltd
dec
inc
xchg
jp
jno
pop
mov
push
loop
pop
adc
shrb
mov
shrb
push
xchg
xor
mov
mov
das
xor
loopne
scas
mov
jp
arpl
scas
adc
imul
pop
popl
xchg
ds
outsl
mov
incb
call
popf
lcall
mov
daa
aas
ljmp
pop
or
and
rorb
loop
pop
into
push
out
addr16
ja
xor
js
sub
sub
or
xchg
add
je
into
mov
mov
xor
cwtl
xor
mov
add
mov
jo
cmp
test
mov
cmp
mov
jg
add
sti
mov
xchg
or
jbe
stos
xchg
adc
pop
push
xchg
push
xchg
and
or
mov
cwtl
scas
rcl
cmpsb
xor
ljmp
pop
int3
int3
daa
es
mov
cltd
scas
sub
xchg
divl
mov
cmp
ret
xchg
test
pop
test
daa
or
jl
adc
and
mov
push
adc
imulb
inc
mov
gs
and
mov
mov
faddl
push
inc
add
out
mov
lock
orl
adc
push
jns
insb
pop
jmp
xchg
jle
inc
jne
push
out
je
xchg
mov
lods
into
adc
nop
adc
mov
subb
je
cltd
jmp
shll
or
sbb
iret
ds
jae
popf
mov
push
bound
test
test
inc
jbe
cmc
clc
fiaddl
sub
push
out
clc
mov
popf
stos
sbb
push
sbb
and
scas
mov
push
loopne
mov
mov
cmp
mov
out
pushf
test
cmp
mov
push
and
ljmp
push
cwtl
inc
clc
rclb
stos
cmc
pop
loope
xor
adc
in
in
bound
pushf
enter
loopne
xor
jns
pop
insb
lea
popf
mov
dec
into
lahf
aaa
cli
add
aas
inc
out
lahf
mov
adcl
mov
sub
ret
cli
xchg
mov
call
xorl
in
or
pop
xchg
pop
xchg
pop
adc
subl
js
stc
inc
push
cmpsb
inc
pushf
dec
mov
adc
adc
fsubs
mov
enter
add
dec
push
push
jge
popa
fsubl
dec
adc
ja
test
xchg
or
mov
scas
cli
aas
sbb
cmp
inc
mov
adc
push
jnp
sbb
sub
jb
jecxz
das
mov
out
cmpsb
xor
hlt
shrl
cmpsb
xchg
push
and
int3
shr
pushf
xchg
inc
push
adc
stos
dec
std
daa
jnp
inc
inc
sbb
sub
loope
rorb
or
mov
cmp
or
pop
xchg
dec
aad
mov
fcmovu
sti
subl
mov
lcall
pusha
pushf
jl
lahf
sub
inc
pop
loope
jns
ds
test
push
pop
or
pop
rol
int3
call
sub
sbb
jo
adc
call
jge
mov
or
rep
out
stos
sarl
sarl
bound
cmpsl
sbb
cltd
incl
dec
lods
jns
mov
hlt
dec
popf
cmc
mov
or
and
out
int
mulb
mov
add
or
sub
mov
cmp
pop
xor
mov
sub
test
inc
ja
mov
in
into
fs
subl
mov
push
inc
pop
xchg
xchg
movsb
sub
movsb
inc
add
repz
mov
xor
jmp
mov
add
jg
aas
mov
cmpb
sbb
jno
aas
jb
pusha
dec
dec
shrb
imull
dec
ficompl
cltd
jge
clc
fwait
mov
sbb
push
sub
fsubr
mov
mov
out
sub
cmp
inc
daa
and
add
push
jl
insb
inc
jmp
out
roll
push
xor
pcmpeqb
push
inc
add
inc
icebp
test
add
scas
mov
mov
lock
add
jae
popf
xor
imul
mov
cli
xor
mov
mov
inc
fisubrs
sub
mov
xor
sbb
outsb
push
mov
cmp
jb
dec
mov
movl
lret
sahf
or
nop
mov
jo
mov
and
lcall
in
imull
inc
or
pop
lret
and
xlat
inc
push
inc
pop
and
sub
sub
out
inc
stc
in
dec
dec
push
fwait
add
xchg
fs
stos
mov
mov
adc
es
outsb
ss
fcomps
push
pop
dec
in
test
or
mov
push
inc
add
lock
xchg
mov
data16
cmp
fs
std
mov
sarb
aaa
and
gs
ficoml
mov
add
leave
inc
fimuls
sti
ret
and
daa
fdivl
adc
dec
daa
dec
imul
in
cwtl
insb
sub
cmp
or
or
add
mov
cwtl
mov
add
out
aas
loop
or
and
sub
lret
mov
stos
jg
mov
push
push
xor
test
leave
lret
jl
jl
dec
pop
mov
movsb
dec
cmc
mov
mov
inc
or
push
sti
or
je
xlat
dec
push
mov
mov
mov
cmpb
fs
hlt
adc
stos
fisubs
push
sbb
ret
add
mov
sbb
sar
mov
sahf
sub
push
mov
push
inc
mov
mov
mov
int3
daa
and
and
adc
out
inc
xchg
insb
cltd
int
cmp
and
popa
or
dec
cmpsb
imul
sub
add
ret
sbb
push
fucomp
adc
jle
xor
insb
movsl
data16
clc
mov
cwtl
aad
mov
adc
dec
dec
sbb
push
mov
mov
inc
adc
cmpsb
xchg
and
fsubrs
ljmp
inc
jo
gs
cmc
rcrb
cmc
mov
cmc
cld
scas
dec
int
leave
mov
je
lcall
xor
in
pusha
sbb
std
lret
jle
lods
push
add
scas
mov
inc
loopne
mov
xor
jae
jle
or
xor
pop
fadd
cmp
sbb
dec
fwait
push
cmpsb
jno
jae
jb
mov
mov
pushf
mov
int
sarb
imul
not
lock
lea
add
leave
or
filds
xorl
mov
aad
fistps
mov
rolb
int3
sbb
mov
pusha
add
push
jge
xor
push
das
pop
inc
cmp
testl
lret
lcall
aas
mov
dec
pop
adc
xchg
jecxz
jbe
push
mov
dec
fnsave
lock
mov
and
js
xchg
out
das
inc
cld
call
into
dec
sbb
xor
out
lahf
push
cmp
negl
repz
push
lock
cmp
xor
lahf
sti
pusha
lret
sbb
mov
sub
lock
repz
fs
pop
and
jle
not
loope
lret
repz
mov
ret
jmp
push
mov
stos
add
cs
push
dec
popf
aas
xchg
lea
cmc
xrelease
sub
insl
adc
gs
and
mov
mov
mov
jmp
push
mov
fcmovnu
les
lcall
and
pop
sub
fcomip
and
jecxz
cmp
mov
lret
inc
mov
stos
outsb
fwait
mov
dec
dec
movsl
dec
loope
orb
insb
in
test
cltd
pop
and
xor
mov
xchg
jp
dec
popf
mov
push
sbb
pop
jae
ljmp
cmp
rcrl
addb
or
xchg
mov
lods
lods
fsubl
xor
fisttpl
lock
mov
loope
cmp
mov
sbb
adc
cwtl
sub
data16
outsb
cs
pop
mov
imul
xchg
or
push
push
jae
push
sbb
subl
es
lods
adc
or
add
ret
push
jno
push
int
addr16
jne
jae
fdiv
and
and
mov
fcom
movsl
mov
mov
aad
fwait
test
leave
in
and
call
cwtl
sbb
fwait
cmp
jg
jnp
xor
fcmove
test
jbe
lods
test
or
inc
jne
iret
loop
inc
icebp
cwtl
push
cmp
and
dec
in
nop
ret
mov
cmp
mov
mov
rorb
sbb
adc
scas
std
aas
hlt
push
in
inc
xchg
cmp
mov
push
dec
cmp
repz
stos
lret
out
jg
pop
nop
inc
outsl
cmp
inc
fwait
gs
pop
aam
jmp
shrb
pshufw
insb
std
or
and
mov
push
or
lret
arpl
sarb
andb
cmp
iret
loopne
jo
adc
or
shlb
add
imul
or
dec
push
add
adc
push
cmc
ljmp
xchg
sbb
shrb
mov
adc
imull
push
rcll
pop
repz
mov
daa
ret
movsl
lea
daa
push
rorl
mov
std
xor
clc
pop
jns
or
fildll
sbb
iret
lods
mov
jp
pop
out
xchg
or
jne
hlt
decb
pop
lods
or
pop
jne
xor
jns
xchg
popa
add
dec
dec
imull
pop
pushf
sub
ljmp
test
mov
div
pushf
addb
sub
shll
out
pop
movsb
inc
inc
nop
movsbl
sub
stos
dec
ficomps
dec
xchg
sub
jmp
shrb
xor
mov
jge
dec
or
xor
mov
sub
jne
mov
jmp
pop
sub
movsl
and
pusha
adc
and
cmp
loope
mov
adc
lcall
adc
inc
inc
outsb
sbb
orl
cwtl
push
jbe
arpl
lods
shll
fmuls
sub
and
dec
mov
xchg
pop
mov
or
lock
pop
cmpsb
call
lods
mov
jnp,pn
adc
std
sbb
clc
mov
mov
xor
dec
cltd
pop
enter
call
in
pop
jnp
cmp
out
push
pop
sbb
shrl
in
hlt
mov
cmp
fidivs
cmp
mov
push
mov
mov
mov
insb
mov
aaa
xlat
inc
mov
cld
out
mov
lea
or
mov
popf
repz
aad
dec
loope
mov
sub
in
sub
sbb
popf
or
dec
out
xor
es
jae
adcl
arpl
xor
pop
outsb
inc
rep
mov
or
pop
pop
and
es
inc
leave
or
das
mov
mulb
jg
xchg
das
fmull
into
cmpsl
sbb
shll
decb
std
xor
mov
imul
cmp
notb
sbb
or
shll
lods
push
dec
movsb
inc
scas
addr16
rcrb
pop
dec
fistps
lret
xchg
dec
fsubl
mov
push
jno
fs
mov
and
push
mov
xchg
or
stos
sub
js
test
lods
pop
mov
mov
and
jnp
and
or
sbb
dec
adc
das
mov
ret
add
or
adc
sahf
sti
cmp
pusha
lret
sbb
or
popf
adc
cmp
add
inc
jle
adc
sub
shll
cmp
mov
stos
cs
xor
xchg
dec
add
mov
repnz
in
jl
jmp
mov
imul
sub
insl
shll
popa
cmp
ja
jg
and
std
lds
movsl
fiaddl
sarl
xchg
stos
jnp
jbe
pop
notb
out
jns
sbb
inc
gs
jmp
pop
loop
fbld
push
cmpsb
adc
jns
leave
ja
les
roll
adc
movsb
scas
push
and
adc
lret
out
incl
add
mov
or
add
jmp
aad
mov
inc
icebp
sub
jne
jne
jo
aam
push
dec
cmc
hlt
pop
insl
dec
jo
in
xchg
mov
sub
stc
jns
pop
lds
cbtw
xchg
repnz
jge
mov
cmp
pop
unpcklps
jbe
aam
cmp
and
sbb
cwtl
cltd
es
sbb
or
jge
adc
mov
mov
xor
and
dec
negb
xchg
ljmp
sahf
stc
adc
push
les
adc
in
adc
cs
cmpsl
fs
out
call
in
jp
sub
mov
ja
inc
cltd
pop
xorb
addr16
mov
inc
cmp
xchg
mov
loope
cmp
std
xor
cmp
pop
out
lret
or
loopne
cltd
mov
lds
mov
mov
push
mov
test
xchg
fcos
ret
or
dec
scas
cmp
lock
mov
or
jl
jmp
fists
hlt
mov
fadd
icebp
jne
and
mov
in
call
jns
xchg
add
mov
inc
and
int
nop
pop
scas
fists
sub
dec
or
ljmp
and
mov
je
pushf
aas
mov
mov
cltd
xchg
add
addr16
aaa
outsl
dec
insl
mov
outsb
jg
adc
jle
inc
pop
or
or
mov
sbb
dec
adc
pop
push
push
or
test
jns
nop
push
or
enter
arpl
xor
cmp
mov
pop
lahf
inc
fbstp
call
xchg
inc
xor
add
inc
push
push
add
dec
cmp
jmp
cmp
and
clc
das
jge
nop
int3
loopne
xchg
ja
cli
mov
inc
mov
jmp
xor
stos
push
xchg
adc
mov
insl
aaa
dec
mov
insb
adc
fsubl
fnsave
sub
cmp
xor
les
lret
js
fwait
jne
cmpsb
pop
add
pop
sbb
fsubrp
xor
jl
pop
adc
pop
jecxz
stos
mov
inc
xor
stc
je
mov
pop
xchg
dec
imul
repz
dec
stc
out
cmc
int3
loope
das
xchg
rclb
imul
sub
jecxz
pop
and
iret
leave
dec
mov
fmuls
gs
cli
sbb
data16
xor
xchg
mov
xlat
outsl
movsl
cmp
pusha
aaa
jp
mov
xor
cltd
test
movsl
popa
pop
addr16
add
sub
inc
insb
loope
jg
sbb
xor
sub
in
lret
aad
xor
cmp
movsl
ds
out
add
inc
mov
cmpsb
sti
mov
mov
into
fnsave
xor
hlt
fndisi(8087
loop
testl
jmp
or
mov
inc
cmpsb
sub
dec
iret
popa
aad
orl
sbb
and
xchg
push
adc
mov
repnz
sbb
stc
aas
cmp
test
push
pushf
and
sbb
xchg
ds
aad
lea
pushf
cltd
test
stos
pop
mov
adc
ja
mov
xchg
cmp
mov
lret
ss
ret
xchg
int
pop
std
sub
sub
mov
decl
int3
inc
fnsave
push
xchg
repz
push
ds
clc
lods
aad
iret
lret
mov
stos
inc
insb
pop
popa
jne
and
mov
add
jge
mov
pop
cmpsl
lcall
inc
jb
ljmp
es
push
call
cltd
mov
push
or
and
xor
sbb
loop
pop
jg
jle
adc
ss
hlt
repz
arpl
sub
enter
pop
cli
outsb
vphaddubq
pop
pop
mov
cli
adc
int
xor
xchg
sub
dec
jbe
mov
leave
testl
mov
lock
mov
sbbl
in
insb
xlat
movsl
add
cmc
fldcw
sub
add
push
inc
push
ljmp
cmp
insl
mov
inc
mov
cmp
mov
jb
das
inc
push
add
cmp
in
push
dec
cmp
and
add
in
imul
ret
in
or
es
out
das
jecxz
loope
lods
fistpll
sub
andb
movsl
sbb
jnp
mov
jge
mov
das
cs
enter
jno
stos
pop
insb
aad
dec
repnz
cld
or
nop
pop
dec
push
jmp
sub
pop
jmp
push
iret
adc
sbb
cld
or
cmp
jge
addr16
cmp
pop
idivb
lret
inc
call
pusha
push
mov
scas
and
sbb
andb
mov
lret
movsb
pusha
test
in
inc
incb
loope
pop
mov
adc
ret
dec
movsl
scas
jno
xchg
xor
inc
loop
xor
adc
mov
orl
lods
loop
fcmove
push
iret
pop
hlt
iret
mov
xchg
fs
push
mov
adc
xchg
sub
in
inc
pop
jo
arpl
and
ret
lret
pfsub
ficompl
scas
cmp
cld
dec
xor
leave
rclb
loop
mov
repnz
test
insb
adc
arpl
movswl
jns
in
gs
je
mov
mov
inc
xchg
sub
inc
mov
aam
in
icebp
inc
les
fstpl
outsb
in
xchg
gs
pop
pushf
insl
inc
xor
sub
jp
fsubrs
aam
out
mov
cmp
lods
test
xlat
repnz
cmp
pop
push
pop
in
xchg
in
gs
test
and
mov
dec
push
fcomi
cmp
xor
bound
out
sbb
fmull
jg
xchg
lret
lcallw
push
cmp
outsb
vpaddusb
xchg
cmp
loop
out
imul
fldcw
jp
hlt
xchg
dec
lahf
pop
imul
pop
out
stos
stos
leave
into
lret
mov
popa
dec
sub
mov
pop
aam
popf
mov
sub
xchg
ds
mov
and
mov
mull
cmp
jmp
or
mov
xchg
pusha
cmpsl
pop
xchg
add
daa
ret
pop
add
daa
insl
call
mov
nop
das
das
push
repnz
sub
cwtl
fsubl
pop
inc
mov
adc
add
xchg
rcrl
xchg
adc
sub
jl
ljmp
fldenv
pop
fldl
stos
push
into
mov
and
or
sbbb
aas
xor
xor
aaa
decl
mov
xlat
arpl
das
movsb
das
ss
push
cmp
scas
mov
adc
int3
shrl
imul
push
arpl
adc
jbe
ret
les
add
push
pop
shr
jae
lret
icebp
mov
shrl
out
add
aaa
outsb
shl
pop
jle
and
mov
jnp
in
repnz
mov
cwtl
push
mov
mov
or
jmp
sbb
and
mov
dec
mov
insl
mov
jle
xchg
inc
leave
xor
popa
xor
sti
insl
push
adc
add
dec
pusha
or
and
in
cld
aad
or
hlt
ja
mov
adcl
loop
cs
notl
cmp
pop
cmpsb
mov
loope
lret
xchg
das
sub
popf
daa
fildl
add
mov
ss
cli
push
or
push
mov
adc
imul
adc
lahf
sbb
sbb
pop
and
lcall
push
cltd
test
pop
pop
mov
mov
sbb
jo
cwtl
sub
cltd
lods
fs
ret
aaa
es
ret
inc
bound
test
mov
mulb
mov
jg,pn
push
movsl
or
test
scas
pop
icebp
fs
jb
mov
cmp
and
cmp
or
lcall
neg
sub
add
fdivrs
inc
aas
pop
fucomp
sti
sbb
shrb
outsl
pop
js
loop
mov
pop
cwtl
sbb
adc
faddp
jae
cs
push
mov
dec
add
jg
clc
sbbb
or
mov
pop
lds
stos
add
cmpb
pop
aaa
xchg
jmp
cmp
fcompl
xor
mov
and
push
jg
push
inc
xor
fldl
lock
mov
xchg
jmp
js
psubb
xchg
mov
pushf
int3
lret
push
xchg
jge
inc
ja
fildl
jle
jmp
adc
inc
adc
mov
ss
sub
mulb
repnz
jns
or
les
cmp
dec
jmp
in
movsb
mov
test
cmp
lods
jns
scas
xor
call
xchg
mov
xchg
mov
cmp
in
std
inc
je
sbb
aaa
xchg
gs
int
ja
daa
out
in
mov
jno
les
xor
jae
sub
push
sbb
out
pop
stc
push
inc
rcrb
jle
and
shll
and
pop
roll
pop
sarl
push
fnstenv
inc
sbb
xchg
push
push
mov
data16
xor
sbb
add
clc
xchg
inc
cmpsb
mov
jnp
mov
jg
insl
int
mov
sub
mov
fdivrl
cmp
mov
sbb
mov
jae
xchg
mov
ja
xor
fnsetpm(287
out
or
cmp
xor
imul
mov
xchg
jnp
jle
dec
sub
push
outsb
push
mov
repz
cwtl
call
mov
ror
cld
jno
pop
push
es
das
mov
fistpl
fdivr
dec
jge
popa
sub
pop
dec
jecxz
outsl
cmp
jecxz
shlb
ds
jb
mov
sarl
mov
jmp
rcrb
jecxz
in
add
jle
pop
cmp
cmpsb
xchg
sbb
inc
pop
cmp
scas
cmpl
cwtl
cltd
test
sub
sub
mov
dec
not
and
push
lret
ljmp
add
out
push
insl
sub
mov
loop
jmp
in
int
mov
cmc
mov
push
push
add
imul
pop
fs
in
outsb
pusha
arpl
push
aaa
adc
fwait
call
push
sbb
adc
pop
add
pop
stc
mov
and
cld
fists
aas
in
jmp
sbb
pop
lret
push
dec
loop
call
or
dec
das
push
inc
pop
repnz
adc
mov
faddl
lret
das
jmp
nop
pushf
jecxz
push
insb
test
mov
int3
out
mov
push
arpl
dec
mov
xchg
lcall
lret
push
rcll
or
loopne
sbb
adc
das
iret
xor
sbb
pop
aas
shlb
shll
lock
jo
ret
cpuid
add
or
insb
xchg
rep
or
adc
dec
push
cmp
test
sbb
pop
pusha
jg
pop
scas
cmpsl
shlb
daa
rclb
dec
xchg
pop
jae
mov
mov
sub
pop
pop
inc
and
pushf
enter
incl
inc
divl
outsb
xchg
xchg
hlt
inc
xchg
stos
xchg
add
mov
andb
and
adc
sbb
popf
mov
sti
sbb
fwait
add
stos
iret
xor
sbb
fimuls
sbb
ljmp
push
push
in
jb
mov
arpl
imul
enter
push
gs
sub
add
test
bnd
out
cltd
fadds
cmp
jo
andl
jg
in
sbb
xor
xchg
xchg
insl
sbb
inc
sbb
or
xchg
jecxz
cltd
jmp
mov
mov
adc
or
sarb
mov
shl
jne
cmpsb
push
and
mov
xchg
sbb
shrl
dec
lods
push
dec
sbb
fcompl
inc
adc
jbe
add
mov
sub
mov
fs
sbb
fwait
test
ret
clc
push
sbb
arpl
inc
ret
push
cmp
mov
imul
sbb
imulb
adc
icebp
aas
xchg
push
sbb
jle
fdiv
xchg
pusha
jnp
cmp
das
mov
ljmp
cmp
fwait
cltd
sti
leave
push
dec
mov
sub
inc
xchg
lret
lea
icebp
pop
not
test
push
mov
arpl
or
cmpl
ljmp
lds
mov
insb
jmp
jl
cmpsl
xchg
aam
js
push
dec
clc
jle
or
repz
int
lods
jb
and
es
xchg
data16
imul
inc
mov
pop
jle
adc
and
jmp
jl
cmp
push
nop
cs
inc
xchg
push
orl
xchg
sbb
mov
mov
sub
test
test
lret
repz
or
xlat
orb
jge
daa
dec
test
and
pop
fsubs
push
cmp
lret
test
pop
cmc
ja
lock
xchg
lea
nop
test
mov
stos
loope
insl
sarl
jge
inc
xchg
jl
xchg
inc
dec
arpl
jmp
add
add
push
aad
mov
ljmp
pop
lcall
push
sub
push
mov
push
shrb
dec
and
cld
hlt
popa
dec
out
jae
inc
push
and
shlb
decb
mov
sbb
add
xor
add
and
ja
jnp
mov
int3
in
jl
fwait
in
jb
es
push
dec
sbb
xor
mov
cmc
dec
enter
xor
sub
and
jns
test
movsb
xchg
xor
push
enter
lods
lsl
scas
dec
mov
add
xor
fdivrl
adc
push
mov
inc
cmp
lahf
and
iret
movl
test
daa
push
stc
icebp
push
je
pop
testb
pop
les
add
cltd
pushf
xchg
push
push
test
jns
pop
call
xchg
leave
add
in
xor
movsl
xchg
xchg
fcmovnbe
int3
scas
mov
sbb
pop
add
push
aam
xlat
inc
aas
pop
cmp
imulb
clc
movsl
adc
and
ljmp
add
mov
call
js
call
push
inc
hlt
push
xor
int3
adc
or
fstpl
cmpsb
lock
mov
in
sti
out
mov
ds
xchg
add
adc
xchg
add
imul
dec
fwait
pop
mov
jge
or
mov
inc
rolb
or
mov
imul
lret
xor
mov
insl
scas
lcall
insl
repz
pusha
std
xor
dec
jbe
cmp
sbb
mov
add
xchg
daa
xor
cmc
jl
fmul
leave
fistpl
loopne
fwait
shrb
mov
cmp
inc
add
jle
cmp
pop
lods
fcomps
out
imulb
xchg
inc
mov
mov
pop
mov
pop
lds
jmp
test
xchg
out
pop
mov
adc
push
fstpt
js
ljmp
inc
or
pop
lea
and
ret
mov
loopne
inc
aaa
jp
sbb
out
loopne
jg
repnz
push
xchg
or
lret
mov
add
pop
shlb
repnz
std
daa
mov
jns
mov
mov
and
mov
stos
mov
dec
inc
sahf
cwtl
adc
pop
xchg
retw
push
push
push
dec
add
cmp
mov
sti
mov
movsb
movsl
icebp
push
sbb
stc
loop
cmc
mov
std
and
mov
sub
std
cmpl
mov
xchg
inc
fs
jnp
inc
mov
movb
in
mov
outsl
icebp
repz
sub
and
fistpl
push
xor
jl
insl
sub
mov
je
pusha
sti
mov
inc
xchg
add
or
sub
repnz
sbb
nop
fisttpll
aaa
jge
fwait
push
daa
mov
fdivl
into
outsb
and
ret
push
shlb
add
nop
pop
xor
sub
jp
rolb
lcall
andb
mov
mov
mov
mov
int
ret
in
jg
into
into
nop
inc
out
cwtl
cmpb
leave
push
pop
aaa
xlat
imul
sbbl
add
das
shrl
push
shrl
inc
inc
and
imul
ficomps
pop
xor
movsl
push
arpl
xchg
sub
jno
aas
and
or
lock
std
and
fdiv
movsl
and
negl
ja
push
ficoml
ret
add
or
or
ret
mov
lods
hlt
fnstsw
pop
fldenv
xor
pop
stos
xor
std
sbb
sarl
xchg
vpmovzxbw
int
push
mov
pop
dec
sbb
cmc
je
aad
imul
aaa
sbbl
jmp
or
xchg
lds
jae
mov
mov
mov
xchg
subb
sbb
aas
imul
push
mov
je
xchg
leave
jle
andl
out
jbe
pop
cltd
sbb
stos
movsl
outsb
shll
arpl
adc
xchg
add
fdiv
mov
repz
xlat
mov
fcoms
mov
xchg
mov
mov
dec
or
adc
test
mov
jg
clc
inc
ret
enter
shrb
scas
in
icebp
loope
fsts
call
adc
pusha
sbb
arpl
xchg
ss
mov
pusha
mov
inc
cmpsb
push
mov
mov
inc
mov
push
xchg
out
pusha
sub
adc
mov
fstpl
or
adc
xor
inc
pop
cmp
mov
xchg
pusha
adc
and
iret
dec
pop
scas
add
les
lods
bound
mov
adc
leave
pop
daa
fimull
faddl
and
rcrl
xor
jns
iret
or
fisubrs
jg
dec
push
pop
inc
mov
and
cmp
bswap
pop
sub
cmp
inc
mov
imul
aad
lds
inc
mov
in
or
adc
add
dec
movaps
or
inc
das
js
fwait
xchg
aaa
repz
stos
cmpsl
lcall
iret
loop
add
lea
out
cmp
in
repz
mov
sub
lcall
or
adc
and
inc
mov
xor
lods
push
jmp
inc
fsubrs
dec
inc
sbb
or
insb
je
cmp
ret
mov
push
cli
hlt
imulb
iret
imul
jecxz
cmc
incb
popa
jecxz
add
outsl
out
lcall
fists
adc
sbb
ja
add
mov
rcll
enter
fists
stc
cmp
pop
jp
or
std
sub
dec
pop
gs
jle
int3
adc
xchg
into
les
into
pop
mov
icebp
rorb
cwtl
fdivl
pusha
jl
hlt
fldl
arpl
mov
inc
pop
popf
cmp
loop
pop
xchg
sbb
xor
aad
movsb
and
test
pushl
pop
push
xchg
xchg
inc
dec
mov
pop
jae
in
or
iret
in
dec
jno
shl
xchg
incl
mov
movsb
or
lock
ret
es
push
jp
mov
das
out
pop
test
dec
push
adc
adc
xor
fsubrl
push
inc
mov
movsl
adc
pop
sbb
loope
std
fisttps
jmp
adc
mov
or
mov
dec
cli
push
push
or
add
cmp
sar
push
adc
ret
mov
pop
insb
repnz
idivl
shll
add
adc
movsb
test
bound
mov
xor
scas
and
mov
pop
push
nop
pushl
dec
cmp
in
jp
icebp
add
cs
cmp
sbb
test
sbb
pop
mov
arpl
daa
addr16
clc
rorl
gs
add
pop
xorb
mov
f2xm1
mov
das
mov
pushf
lea
lods
movsl
mov
sahf
sbb
adc
mov
or
repz
sub
test
mov
or
xchg
xchg
adc
or
test
push
push
stc
push
ja
jmp
dec
repnz
stos
dec
jae
cltd
sahf
mov
xchg
je
enter
xchg
sub
rorl
iret
push
inc
dec
mov
sbb
jno
roll
psrld
add
jno
dec
pop
pop
mov
pop
inc
and
push
scas
iret
hlt
add
push
jnp
jg
movsl
aas
sti
xor
push
and
mov
lock
sbb
mov
stos
outsl
adc
test
inc
lock
movb
rcr
out
pop
out
pushf
xchg
incl
leave
sar
jo
jmp
adc
push
pop
sbb
push
dec
cmp
xor
mov
sbb
cli
xchg
pop
jmp
cmp
push
xchg
leave
in
mov
jo
pop
add
aaa
gs
imul
imul
pop
add
push
pop
ret
int3
inc
addr16
xor
add
stos
and
pop
ja
ret
or
aad
fnstcw
and
lcall
outsl
in
push
loope
out
cmp
pop
sbb
jge
pop
mov
jo
imul
xchg
jge
dec
aaa
movsl
cmp
adc
cmp
ds
jmp
ret
mov
rolb
fildll
pop
cld
sub
leave
lock
mov
ss
or
fcmove
fidivs
jbe
push
roll
cmp
or
call
xor
add
cmp
loopne
sbb
cmpsb
mov
xor
xchg
mov
sbb
sbb
xchg
mov
inc
adc
mov
xor
test
rcl
inc
jl
push
mov
adc
xor
lahf
lds
jns
in
mov
fldcw
sub
jns
sbb
das
arpl
mov
inc
les
adc
lahf
sbb
xchg
les
test
sub
ljmp
in
shl
cltd
add
inc
sub
mov
add
dec
jb
or
jmp
and
dec
jg
xor
stos
imul
std
js
imul
testb
pop
pushf
pop
or
jge
pop
push
add
sub
das
ja
sbb
and
jl
jmp
and
jecxz
push
mov
loopne
mov
arpl
mov
and
dec
push
pop
inc
sarb
add
mov
jp
fsts
xchg
gs
xlat
mov
dec
test
add
aas
mov
sbb
scas
ljmp
sbbl
in
int
adc
call
cs
loop
adc
sub
adc
or
pop
je
jmp
js
stos
inc
mov
cld
mov
add
lds
fs
xor
or
ss
imul
add
mov
sbb
push
jmp
xchg
addr16
stc
lcall
mov
jge
jo
pop
or
mov
xchg
lods
in
sbb
movsl
pop
adc
notb
inc
aad
ret
cmp
inc
add
dec
jnp
mov
sub
outsb
add
stos
cmc
pop
adc
adc
fsubl
adc
clc
loop
lods
pop
stos
push
mov
or
in
rol
hlt
sbb
stos
push
jp
nop
int
sub
sbb
sub
xor
xchg
addr16
andl
jnp
or
or
pushf
cltd
sbb
pop
jnp
adc
icebp
pop
push
xchg
cld
adc
push
xlat
xchg
repnz
scas
mov
iret
aad
rcrl
sub
add
shlb
xor
jae
sbb
mov
pop
stos
mov
or
xor
jne
inc
in
jb
pop
mov
fs
outsb
add
inc
jl
inc
cmpl
aam
cltd
sbb
cld
mov
cld
adc
sbb
outsl
inc
jp
push
cmc
cltd
cmp
mov
fisttpl
jge
lahf
enter
shr
mov
ficomps
and
shlb
sbb
sahf
add
cmp
in
mov
push
aad
out
sub
fsubl
push
sbb
dec
mov
stc
ds
insb
push
push
pop
and
inc
jae
sarb
dec
jns
mov
sar
out
jns
out
add
dec
cs
pusha
cmc
scas
aas
xchg
cli
stos
mov
mov
cmp
and
mov
push
mov
and
jecxz
imul
push
int3
mov
jmp
clc
lret
mov
scas
dec
xchg
js
test
or
outsl
call
in
into
insb
xor
and
sub
mov
cltd
add
sarb
aaa
mov
mov
ror
sbb
mov
or
or
pop
xor
fldt
insb
enter
jg
into
lds
jae
ljmp
push
in
in
xchg
out
decb
or
test
int
fcmove
push
xchg
dec
mov
adc
cmp
mov
ficoms
xor
push
cmp
push
xchg
mov
inc
mov
add
rorl
xor
rcrb
xor
cmc
mov
jne
adc
jge
ror
mov
repz
int3
lods
ss
loopne
sub
fildl
jae
lods
les
sbb
inc
sub
xchg
ret
dec
popf
inc
cmp
mov
outsb
xor
mov
lahf
shlb
andl
push
xor
cwtl
cmp
jecxz
movsb
scas
sbb
and
pop
es
cmpsb
mov
les
xor
insl
pop
pop
xchg
sbb
addl
fsts
pop
mov
mov
scas
les
dec
cmp
addb
cld
or
pusha
lea
andl
cmp
mov
cmpsl
lods
leave
push
jp
stc
std
sub
arpl
inc
fldl
sbb
ds
pop
pop
jae
cmc
mov
hlt
mov
mov
daa
or
test
outsl
inc
mov
sub
jbe
les
cmp
xor
xor
lret
pop
add
repnz
push
and
cs
xchg
mov
in
stc
jle
and
and
xorl
pop
and
mov
and
or
mov
scas
inc
rcrb
pop
stos
in
nop
bound
xor
or
hlt
sbb
adc
xor
mov
cmp
pushf
xchg
in
push
popa
lods
jl
cli
mov
push
cltd
sbb
push
loop
xchg
mov
xchg
sbb
or
repz
push
mov
inc
ja
push
push
inc
insb
pop
fsubs
mov
imul
pop
inc
ja
or
inc
sub
mov
insb
sbb
mov
shlb
cs
xchg
or
sbb
mov
inc
rorl
jb
jl
xchg
jo
and
mov
cltd
xchg
rcr
ret
lret
push
pop
mov
aas
sub
enter
jo
es
fdiv
mov
sub
xchg
mov
jp
jno
ret
adc
fs
cwtl
mov
inc
or
sub
push
adc
jmp
in
pusha
xchg
int
sub
and
inc
ret
cs
sbb
lock
aad
xchg
mov
and
fcomi
and
push
movsl
idiv
outsl
xchg
mov
ror
xor
arpl
adc
jnp
sbb
sbbb
inc
mov
push
int3
cmp
pop
aam
dec
ja
in
cmp
or
stos
pop
mov
cltd
mov
sbb
xchg
mov
or
jbe
or
jecxz
in
mov
xchg
jmp
add
aad
cmp
ret
dec
lds
mov
imull
jmp
sahf
shlb
jo
add
xor
in
jp
inc
mov
add
mov
sub
adc
inc
popf
sbb
add
fldt
test
add
mov
dec
movsl
push
repnz
push
mov
xchg
add
jae
mov
push
cli
push
mov
shll
add
dec
and
imul
testl
mov
and
pop
jl
mov
cmp
add
hlt
lods
xchg
lock
push
js
sbb
jmp
dec
mov
sbb
jge
ljmp
and
orl
push
dec
pop
push
inc
and
jae
dec
jmp
xor
int
push
mov
arpl
nop
out
lods
mov
pop
mov
std
add
xor
ljmp
ljmp
or
dec
inc
pushl
inc
cmpsb
popa
cmpb
inc
out
neg
fistl
push
rcr
lods
or
js
add
bound
pop
mov
sbb
xchg
cmpsb
jne
inc
jo
jo
pushf
inc
in
frstor
adc
outsl
mov
nop
das
hlt
cmp
cli
jo
je
idivb
and
nop
das
loopne
jae
xchg
loope
ficompl
je
or
adc
aam
mov
sub
xchg
jbe
fdivrs
rorb
xor
mov
adc
adc
lods
shrb
hlt
or
pop
mov
sub
fisttpll
lea
fucomi
repnz
rorb
xor
mov
hlt
or
inc
loopne
ret
in
xchg
leave
in
xchg
pop
dec
stc
movsl
mov
sub
jecxz
and
add
pop
inc
mov
aad
sti
xchg
jecxz
movl
mov
dec
in
xor
loopne
test
sub
into
push
das
jae
sbb
and
cmpsl
xchg
in
jbe
push
push
popa
sbb
cmp
aad
and
leave
cmp
and
pop
aad
popf
mov
add
dec
stc
mov
or
dec
lods
scas
mov
adc
cmp
out
jg
out
mov
int
cmpl
mov
xchg
cmpsb
ljmp
dec
jbe
out
ret
pop
cmp
add
dec
xchg
inc
pop
inc
stos
add
mov
lahf
pop
sub
test
and
sub
mov
lock
xor
call
jnp
lea
inc
cmpsb
or
mov
int
xchg
aam
mov
add
std
push
adc
mov
jno
sub
mov
stc
and
push
fdivrs
rcr
mov
icebp
dec
jns
push
ret
pushf
fnsave
jb
imull
xor
pop
int3
mov
out
mov
push
push
or
push
sub
mov
orb
cmpsb
mov
pop
jbe
jae
in
add
mov
xor
add
test
jl
mov
lods
inc
and
or
ss
fcmovbe
andb
xor
ret
sub
mov
xchg
fimull
inc
test
sub
repnz
push
or
lcall
mov
popf
jl
fbstp
inc
ret
add
clc
cmc
mov
imul
aam
popa
sbb
ljmp
mov
pop
stos
pop
pop
dec
mov
pop
mov
dec
fildl
and
lcall
outsb
popf
lahf
mov
lock
inc
fsub
add
mov
mov
sahf
mov
lahf
or
paddsw
jle
das
push
mov
call
sub
push
or
sahf
pop
insl
xchg
pop
and
push
push
and
sbb
xlat
xor
test
das
roll
mov
xor
aas
sub
popf
mov
mov
and
dec
dec
push
adc
push
ja
adc
pop
xchg
mov
shlb
and
rcrb
or
mov
ret
xor
xor
ss
and
cmp
push
and
sub
mov
xchg
pop
xchg
mov
das
jns
setp
ljmp
adc
sbb
adc
int3
cltd
lcall
mov
mov
sub
lahf
pop
push
jne
daa
inc
xchg
xchg
flds
nop
sub
int3
pop
cltd
push
push
dec
mov
test
xchg
jo
lods
outsl
jo
pop
lods
nop
ds
movsb
xchg
xchg
add
sub
fstps
aam
xchg
sub
in
mov
pop
mulb
mov
cmpsb
pop
and
push
xchg
mov
mov
xor
cmp
enter
popa
mov
cs
int3
sbb
outsl
xchg
add
dec
outsl
jp
sub
jge
fsubs
ret
loopne
ret
lret
lcall
mov
push
rorb
mov
push
dec
push
cld
dec
add
outsl
jge
cltd
dec
sbb
inc
fs
xchg
sub
roll
add
jnp
in
xor
xchg
or
sbb
fildll
sahf
xor
cmpsl
pop
es
mov
shrb
mov
and
mov
rclb
shll
mov
pop
fwait
inc
jle
cmp
out
in
sbb
pushf
pusha
xor
movsl
xchg
shl
rcrl
stos
mov
pop
mov
lods
add
jge
xor
dec
push
test
scas
fdivrl
mov
push
jle
loopne
jge
and
xlat
sbb
jns
sti
aas
fmuls
pop
pop
call
jbe
and
fnsave
ret
push
shlb
mov
mov
xchg
push
fists
xor
cmpsb
ficompl
and
faddl
push
dec
adc
xchg
xor
aas
ja
xor
fistpl
mov
jo
push
pop
scas
test
inc
loope
or
sbb
in
push
into
test
aam
adc
mov
sbb
sti
lcall
mov
mov
fwait
mov
mov
scas
cmp
jo
addl
xchg
cmp
jge
fisubrs
inc
and
in
les
mov
jge
jne
movsb
sbb
add
adc
mov
shrl
push
enter
aam
or
inc
pop
jge
xchg
sub
movsb
mov
adc
mov
mov
sub
sub
jl
stos
sti
pop
mov
inc
pop
loope
arpl
dec
pop
xlat
das
dec
dec
fs
jg,pn
aas
jge
sub
mov
call
ret
sti
xor
cmpsb
jecxz
daa
cwtl
jecxz
add
iret
mov
lods
pop
icebp
push
out
dec
dec
jae
jle
mov
subl
mov
xchg
jno
xor
pop
pop
insb
popf
sbb
or
test
cltd
and
pop
repz
or
mov
dec
divb
test
jns
mov
lahf
pusha
dec
ljmp
aad
mov
or
adc
mov
sub
jno
sub
sahf
outsl
sub
mov
xor
clc
sub
xor
xor
sti
sahf
jae
outsl
ret
and
cli
insb
xchg
lods
mov
mov
shrl
adc
jp
sub
xchg
xchg
shll
pop
jo
pop
aad
push
sahf
pop
aaa
push
test
movsb
lret
scas
jge
mov
arpl
popa
ret
cmp
xor
call
fwait
jb
xchg
add
lret
xor
rcll
addl
mov
jnp
sahf
movsb
pop
sub
sahf
sbb
lret
mov
stos
je
imul
inc
or
js
ficoml
xlat
leave
popf
xchg
xor
pop
jecxz
inc
lcall
push
or
cmp
cli
decl
jns
xchg
xchg
and
jnp
pop
jne
adc
dec
sub
jbe
popa
dec
inc
pop
lds
cmp
ret
loop
push
jmp
sbb
add
fs
lcall
pop
ss
sarb
pop
push
dec
adc
lea
lret
pop
pop
mull
mov
cmpsl
nop
scas
push
xor
dec
mov
out
pop
scas
jne
xor
outsl
rclb
xor
cmpl
mov
mov
dec
xor
fidivrl
cld
push
movsl
div
icebp
or
enter
pop
sub
repz
incb
sub
andl
cmp
dec
pop
add
sbb
imul
xchg
pop
in
sub
into
dec
mov
jp
cltd
lea
push
movsl
bound
jmp
scas
les
sbb
dec
test
lods
xchg
jns
adcb
xlat
int3
pop
fisttpll
inc
mov
in
inc
inc
daa
xchg
mov
stc
add
ljmp
je
jns
repz
dec
mov
or
fnstsw
repnz
add
jo
inc
lcall
sar
fs
push
imul
scas
jp
pop
repz
in
fnsave
jle
add
pop
xor
jl
pop
lock
je
ret
ror
or
sub
inc
jno
stos
outsb
cmp
dec
loopne
cs
mov
cwtl
add
andb
jmp
jg
jp
inc
mov
ret
out
test
out
jbe
rorl
in
sahf
mov
bound
xchg
cmpsl
add
insb
outsb
in
or
push
into
push
xchg
adc
inc
jae
and
insb
jmp
test
loop
jbe
rolb
cld
lret
inc
sbb
mov
das
sahf
nop
jmp
pop
lret
test
movsb
adc
pushf
mov
shl
mov
adc
or
or
ja
mov
jae
arpl
test
xchg
mov
aaa
fisubl
pop
in
cmp
inc
aaa
pop
xor
cmp
pop
leave
in
pushf
and
pop
cmp
daa
idivl
push
dec
icebp
cmc
cmp
sbb
movsb
and
scas
mov
aam
outsl
lods
sub
mov
cmova
dec
xor
js
push
add
cs
add
mov
daa
sbbl
mov
imul
mov
jo
frstor
mov
roll
repz
sbb
jle
mov
adc
xchg
fwait
mov
sbb
xchg
mul
push
cmpsb
or
pop
dec
and
clc
testl
into
shrb
cmp
lea
ja
daa
mov
mov
cmpb
pop
sbb
jp
test
loopne
adc
push
sub
add
nop
adc
push
rclb
loope
cmpsl
cli
adc
pop
aas
dec
inc
xor
imul
rcll
sub
std
ret
daa
add
sbb
outsl
and
inc
imul
sbb
arpl
pop
insl
inc
stos
sub
inc
call
fists
xchg
pop
fsubrp
cmp
mov
push
dec
in
xchg
ret
mov
xchg
int
cltd
mov
mov
pop
mov
lret
and
and
pop
or
add
push
cmp
ljmp
and
mov
pusha
sub
lret
stos
scas
pop
inc
mov
push
push
or
movsl
sub
fsubrl
shll
dec
call
push
mov
cld
stc
add
daa
cmp
pop
mov
sbb
ljmp
fimuls
cmc
or
fwait
inc
outsb
jo
and
js
jb
daa
cmp
inc
insb
cmp
addr16
imul
jge
jns
xchg
jp
ficompl
adc
sub
push
outsl
add
int
jl
lea
sub
ficoml
xchg
jg
jle
xchg
in
or
dec
dec
lds
shrl
add
pop
jmp
imul
addb
test
push
push
sub
leave
out
mov
lock
shlb
xlat
out
loope
out
xchg
int3
rcr
mov
cs
xchg
lods
mov
dec
inc
and
cmp
fdivs
push
mov
mov
dec
mov
das
push
cmc
mov
sbb
push
jle
ds
ret
add
cmp
iret
jo
fsubs
movsl
daa
or
and
insb
and
xor
xchg
sub
cmp
lods
test
test
shl
aam
cmpsb
leave
push
pop
lea
fmulp
push
mov
sbb
fistl
sub
lret
js
push
xor
scas
and
jp
dec
mov
pop
sete
cmp
data16
add
mov
lds
scas
shll
inc
je
daa
lock
sub
aad
xorl
mov
adc
roll
subl
sbb
mov
lea
push
js
stos
sbb
sbb
or
dec
or
jge
ss
cmp
int
push
stc
mov
cmpl
xchg
mov
jno
or
int3
out
jg
lods
add
pop
push
add
lds
je
scas
mov
insl
cld
mov
push
lret
daa
or
mov
push
mov
push
mov
and
ss
mov
ja
inc
mov
lret
repz
lret
xor
popf
push
jb
add
mov
or
cmp
test
daa
sbb
sti
lret
adc
xchg
stc
mov
inc
mov
ret
les
outsb
int3
add
xchg
stc
cmp
jle
mov
scas
mov
push
dec
xchg
lods
call
jge,pn
xlat
pop
adc
jb
cltd
sbb
ljmp
pop
pop
outsl
dec
fistps
cmp
sbb
xchg
pop
test
out
out
stos
cmp
int
jb
mov
leave
cmp
push
vmwrite
fdivl
push
outsl
add
test
mov
cmp
mov
gs
js
dec
push
inc
lods
sbb
sbb
pop
popf
xor
out
fcomi
sub
or
adc
push
lock
ftst
in
add
mov
inc
clc
and
add
jne
lds
cltd
and
das
mov
add
jp
nop
cld
sub
pop
cmpsb
jbe
imul
inc
rep
lock
pop
jne
cltd
adc
push
sarl
insb
ror
mov
jl
outsb
mov
jl
stc
or
fsubr
mov
xchg
lret
jns
inc
mov
push
jnp
adc
mov
lret
xor
sarl
mov
ret
cmpsb
clc
sahf
lcall
mov
cli
out
push
hlt
ljmp
pop
xlat
sbb
in
std
xchg
jp
in
mov
insl
lret
and
jb
scas
jge
loop
push
push
add
push
and
adc
pop
mov
dec
out
pop
mov
dec
jle
mov
insl
dec
shl
mov
stos
icebp
adc
iret
out
xlat
pusha
pop
mov
insl
mov
test
out
dec
and
mov
or
or
cmp
xchg
push
and
mov
aaa
jne
jno
leave
cltd
outsb
xor
fimuls
aaa
insb
notl
jg
sub
sahf
das
add
add
xor
push
adc
jp
mov
pop
xor
pop
cmpsl
scas
fwait
jbe
fmul
inc
and
xor
jb
xchg
push
lods
repnz
ficomps
jecxz
sub
cmpsb
aaa
adc
add
push
test
popa
push
jmp
lock
cwtl
cmp
sbb
roll
jge
mov
clc
push
movb
dec
cli
fwait
push
jbe
jae
loope
add
stc
sbb
mov
push
and
xor
imul
fwait
mov
scas
cmp
lea
sbb
lahf
cs
shlb
xchg
add
mov
clc
mov
mov
cmc
lea
or
int
push
push
dec
push
sti
inc
fnsetpm(287
rorb
out
pusha
and
lcall
std
dec
dec
call
dec
adc
inc
jle
jae
jge
mov
xlat
mov
or
sbb
fs
dec
push
bound
repnz
cmp
pop
icebp
xor
and
pop
add
mov
or
insb
das
jae
stos
mov
add
and
rorb
sbb
cmpsl
xor
arpl
mov
les
pop
push
cmpb
gs
scas
sahf
fs
aaa
adc
mov
cmp
shl
push
adc
add
cltd
mov
mov
cmpsb
mul
arpl
xchg
pop
jbe
xchg
or
inc
jbe
dec
adc
popf
loopne
push
ret
negb
and
adc
loopne
sbb
push
lods
mov
or
or
arpl
mov
lods
jbe
ljmp
cmp
adc
lods
addr16
xlat
roll
dec
scas
dec
in
pop
enter
push
out
mov
out
sbb
cmp
mov
ja
cmp
mov
cmovbe
cmp
jo
cwtl
icebp
cmpsl
sbb
mov
and
xchg
fisubrs
or
shr
fucomp
dec
lds
mov
push
dec
shr
clc
clc
cmp
popf
jg
out
lret
cmp
mov
movsb
std
pop
bswap
int
and
dec
cwtl
les
pop
repnz
cmp
bound
or
shlb
ljmp
inc
cmpsl
mov
xchg
test
gs
xchg
pop
mov
clc
mov
or
add
adc
dec
int3
cwtl
mov
test
mov
xchg
pop
out
push
adc
mov
and
test
or
cli
test
xchg
add
sbb
fadds
ljmp
inc
arpl
orb
in
or
jno
or
andl
stc
scas
fsubrp
mov
mov
push
adc
pop
or
or
daa
mov
inc
das
int
add
xchg
sbb
aaa
or
xlat
pop
and
push
xorb
or
mov
push
xor
fisubrl
mov
cmpsb
push
mov
fcomi
inc
daa
test
xchg
dec
std
xchg
loopne
adc
jg
nop
sar
mov
dec
adc
fs
jmp
xchg
dec
xor
pop
jbe
lods
or
test
xor
hlt
push
push
xchg
ljmp
mov
dec
mov
ret
ficompl
mov
out
xor
xor
fs
push
clc
adc
fsts
jae
pop
cmp
testl
mov
xchg
inc
mov
nop
xor
sbb
xor
in
pop
movsl
sti
xchg
es
push
mov
adcb
pop
test
shrb
in
mov
lods
mov
inc
inc
dec
test
push
pop
cmp
jb
in
shll
add
mov
lret
sbb
mov
pop
pop
test
or
je
addr16
pop
or
add
dec
cwtl
ret
cmp
clc
pop
pop
aaa
movsb
adc
mov
inc
jo
xchg
inc
dec
ret
sub
ret
jo
and
aaa
jns
push
dec
into
push
push
adc
popf
xchg
ret
adc
insb
lods
xor
repz
scas
fstpt
cmp
lock
cmpsb
rol
mov
mov
or
and
mov
dec
add
xchg
adc
and
mov
iret
es
sahf
push
nop
dec
lret
shlb
sbb
cmp
out
into
imul
mov
push
inc
push
mov
dec
adc
nop
es
call
sarl
stc
adc
and
xchg
bound
jmp
gs
enter
jge
mov
data16
les
gs
cmc
fcoml
jl
push
inc
or
mov
or
ret
jns
iret
pop
sub
push
stos
fnstsw
movsb
push
test
rcll
sbb
add
cmp
js
iret
popf
jo
lret
fistl
pop
aad
pop
into
out
ficoms
mov
mov
push
movsl
jne
cmpsl
or
xchg
test
shlw
stc
inc
and
cs
arpl
dec
or
loopne
loop
rcrb
or
xor
sub
sahf
jne
out
fcompl
push
pop
es
decl
scas
into
repz
mov
and
lcall
je
pop
loopw
shlb
mov
neg
pop
add
push
and
sti
aam
iret
cli
jmp
movl
pop
test
xchg
mov
int3
add
out
push
jl
addr16
pusha
jmp
pop
shlb
repz
pop
xchg
mov
mov
aad
dec
test
cwtl
imull
gs
sti
ljmp
pop
fidivrl
ficoml
ret
aam
xor
pop
clc
loopne
js
mov
mov
push
xchg
test
inc
jbe
and
or
lea
jbe
sub
lret
ljmp
or
xchg
sahf
shlb
push
inc
pop
mov
dec
js
sbb
pop
mov
test
sbb
push
sub
lock
ja
xchg
dec
je
dec
add
xchg
jg
xor
push
dec
popf
adc
push
inc
aaa
jnp
cmp
fbstp
mov
aas
sbb
add
lahf
mov
and
std
aad
cmpsb
mov
fndisi(8087
jno
lret
sti
scas
call
sub
sti
push
mov
hlt
push
ds
mov
lret
fwait
test
adcb
test
jle
lret
xchg
xor
inc
pop
xchg
decl
mov
sti
notl
and
jp
sahf
inc
add
pop
and
ds
outsl
mov
shll
push
xor
repnz
jmp
aam
test
sub
mov
lahf
sbb
add
leave
mov
sahf
ds
mov
cmp
add
setle
and
cwtl
out
fldt
clc
cld
jns
dec
adc
adc
and
or
mulb
cltd
test
cli
imul
bound
adc
add
pop
lds
sub
inc
mov
xchg
test
sbb
inc
push
das
xchg
cmpsb
arpl
push
push
pop
or
loope
jne
xor
lea
add
adc
and
mov
push
xchg
jg
jae
push
adc
jae
shl
lcall
outsl
test
aam
lds
lea
pop
movsl
test
and
pop
sub
push
test
clc
inc
fldcw
bswap
sub
mov
xchg
test
or
int
fwait
out
mov
sti
push
jecxz
icebp
data16
or
jb
jbe
cli
push
jno
jbe
push
pop
int
nop
cmp
stc
sub
push
pushf
pop
cmpsl
icebp
setle
cli
clc
ss
imul
xor
pop
call
jnp
jg
xor
pop
xchg
xor
and
jae
mov
adc
adc
dec
mov
inc
xchg
shll
aaa
jb
outsl
add
ror
dec
xor
cmpsb
and
inc
repz
icebp
mov
pop
fstp
icebp
addr16
cmpsb
sub
sub
inc
jle
xor
mov
add
lds
shl
stc
and
pop
scas
adc
cmp
les
mov
sub
sbb
cltd
je
sub
cs
jns
in
cmp
jbe
outsl
pop
aam
and
pushf
ljmp
xor
lcall
iret
or
testb
sti
out
push
sahf
jno
dec
adc
call
cs
cs
push
adc
sbb
int
jae
pushf
popf
xchg
in
outsb
push
cmp
mov
ds
out
or
and
add
dec
mov
loopne
cld
jmp
push
jp
or
pop
in
movsb
pop
jnp
adcl
insl
mov
gs
or
ret
inc
lcall
sahf
sbb
stc
jg
adc
mov
sti
inc
sti
ror
adc
mov
call
les
jge
cs
addb
push
jae
nop
add
rolb
arpl
push
push
and
jl
inc
lahf
fisubrl
bound
mov
imull
push
mov
movsb
sti
or
leave
add
cmc
fisubl
sbb
sbb
sarb
mov
mov
lret
pushl
adc
push
lcall
out
test
push
lods
outsb
aas
or
push
js
push
out
and
mov
pop
jl
fstp
push
mov
lock
fsubp
sbb
xor
lahf
adc
mov
cld
es
mov
sti
cmpsl
in
sbb
push
aas
and
bound
in
leave
xor
test
mov
add
pop
or
cmp
jne
cmpsl
call
dec
imul
xor
xor
pop
test
jns
mov
adc
orl
insb
cli
push
aas
icebp
fwait
xorl
sti
add
popf
cli
leave
fs
cmp
int
stos
mov
jno
cwtl
mov
stos
mov
mov
in
cmp
xor
std
shl
sbb
out
mov
pop
das
jnp
inc
fisubs
and
or
inc
imulb
sbb
pop
cmp
sub
incb
imul
xchg
push
aad
jge
negb
inc
daa
cltd
pop
lret
push
adc
shl
jne
jb
iret
mov
insb
js
repnz
mov
lds
adcl
out
in
iret
test
add
dec
dec
mov
push
push
and
gs
inc
push
repz
movsl
leave
cmp
mov
adc
lock
xchg
lods
arpl
push
mov
push
and
fbld
add
data16
push
push
xchg
inc
repz
xchg
movl
xor
add
fldl
fcomp
loopne
sub
test
shrb
sbb
xchg
ret
std
jl
fdivl
add
mov
ja
pop
mov
fwait
or
loop
cmp
mov
sub
jmp
mov
xchg
cmp
inc
bound
lea
and
jns
pop
sti
addr16
inc
out
ljmp
jge
xchg
shrl
lcall
pop
add
das
dec
inc
mov
js
rcrb
int
mov
inc
mov
in
mov
inc
cltd
pop
dec
leave
jmp
or
lcall
cmp
mov
movsb
insl
xchg
inc
hlt
cmc
jcxz
mulb
lea
xchg
mov
icebp
lret
rolb
in
hlt
mov
mov
out
pop
mov
xlat
push
pop
lods
test
fcmovnb
inc
insb
sbb
decl
cltd
sub
aaa
mov
and
push
sub
xor
mov
lea
iret
mov
mov
leave
popf
jg
fwait
sbb
es
nop
push
adc
push
les
cmp
lods
pop
and
mov
lea
pop
sarl
mov
ljmp
add
mov
or
clc
shrb
loop
inc
mov
lcall
outsb
loopne
mov
mov
fwait
push
rcl
or
nop
je
adc
add
jmp
push
int3
adc
and
xchg
xchg
ljmp
xor
aas
inc
bound
cmpsb
push
cli
and
pop
mov
mov
gs
push
jecxz
mov
fwait
push
xchg
pop
pop
mov
adc
xor
es
mov
sub
ja
lods
negb
rorb
sbb
adc
subb
mov
not
ss
push
fdivrl
add
mov
aad
sahf
mov
add
icebp
or
js
cmp
daa
sbb
dec
adc
loope
push
mov
lahf
addr16
add
stos
js
inc
mov
sub
mov
push
mov
sbb
mov
lret
call
inc
in
jo
pop
push
arpl
jmp
addr16
push
cltd
int
fistpl
stos
xor
xchg
mov
sahf
pop
push
push
sarb
jg
outsl
cwtl
sbb
mov
push
xor
jne
std
push
call
loopne
pop
mov
xchg
arpl
add
add
daa
pop
cmc
xchg
bnd
call
loope
and
mov
cltd
push
mov
mov
or
jmp
pop
cmp
or
stc
repnz
ret
push
add
or
outsb
push
cltd
ficoms
stos
push
les
flds
dec
and
scas
xor
out
ficomps
shr
roll
pop
pop
xor
push
adcb
mov
scas
cmp
aam
add
out
cltd
mov
adc
out
push
dec
pop
loopne
xor
int
nop
inc
adc
or
cli
insl
cmp
adc
sti
test
subl
into
test
out
dec
jp
into
sub
out
testl
xlat
loope
cmpsb
lcall
adc
jae
movl
test
mov
sbb
je
repnz
jo
lods
pop
mov
stc
in
and
pop
adc
mov
mov
push
jg
adc
cmpsl
call
imul
dec
loop
in
inc
inc
mov
pop
sbb
push
stos
test
fcomp
rep
adc
adc
cmp
mov
outsl
mov
aam
inc
push
fs
xchg
int
or
shrb
sahf
ds
mov
leave
pop
cmp
jg
sbb
arpl
sti
sbb
xlat
mov
mov
push
jno
xchg
fiadds
gs
pusha
and
out
aaa
and
pop
lcall
shll
mov
cld
sbb
aad
or
push
ja
pop
dec
xor
addr16
mov
das
movsb
nop
fwait
cmc
repnz
sbb
xchg
repnz
out
ljmp
push
jno
int
jae
push
aad
mov
pop
dec
mov
cmpsl
mov
gs
jle
iret
mov
std
stos
cmp
lret
push
out
lds
inc
dec
lds
cltd
outsl
aad
jnp
mov
pop
mov
in
dec
sbbl
xchg
call
test
test
cmp
lret
daa
push
popa
pop
fdivp
aaa
push
fs
jp
xor
addl
jle
push
jmp
dec
jg
sbb
sub
scas
xchg
xchg
sub
mov
jge
jnp
sbb
enter
xor
jb
xchg
fwait
pop
jl
imul
iret
sahf
lock
or
scas
adc
jno
mov
jno
divl
std
fwait
les
jo
gs
mov
in
arpl
ds
das
pusha
stos
bound
cmp
movsl
shll
mov
into
xchg
bound
mulb
jae
out
cltd
aam
mov
pop
aas
ds
jp
jle
cli
cmp
fwait
jnp
sub
jnp
push
cmp
fidivrs
movsb
mov
or
sbb
divb
test
hlt
mov
xchg
outsb
imul
dec
ret
push
xchg
lods
push
outsl
sub
jb
imul
add
push
add
clc
push
fdivrs
out
mov
les
push
dec
insl
shr
addr16
add
push
ret
ret
jno
adc
lods
scas
push
xchg
cli
or
sbb
loope
xchg
js
out
lea
mov
lock
pop
rcrl
sub
leave
ljmp
pop
out
es
and
and
scas
addr16
fisubrs
mov
jns
mov
xchg
jae
add
stc
push
push
fwait
js
out
lock
pop
push
loope
jns
dec
dec
or
jle
push
orps
mov
xorl
xchg
mov
les
xchg
mov
push
iret
sbbl
mov
mov
outsl
mov
jae
out
sti
cmp
sbb
xchg
rorb
fisubl
add
push
int
mov
mov
and
test
lock
add
jnp
popf
das
mov
pop
insb
mov
pop
mov
inc
sub
fstps
sub
shr
pop
scas
xor
cmp
ljmp
imul
pop
cmpb
incb
push
sbb
pop
pop
outsb
sbb
jns
shl
lcall
enter
push
adc
push
jae
nop
mov
icebp
imul
ret
repnz
push
sbbb
cmp
aaa
dec
inc
xchg
add
sub
sub
mov
pop
adc
mov
loopne
mov
dec
js
push
stos
out
inc
or
stc
hlt
add
shll
imul
paddw
test
shlb
cmpsb
push
rclb
adc
mov
movsb
mov
insb
and
repnz
jnp
rcr
mov
jl
cmc
inc
jmp
sbbl
add
in
xchg
shl
lahf
push
rol
ret
push
push
push
add
cmp
popf
fldl
lock
mov
jl
dec
mov
jmp
cmp
lea
push
xor
xor
mov
testb
cld
pop
jge
sahf
in
aam
and
adc
je
or
fst
lock
in
cmc
cmpsl
xor
filds
dec
cmpsl
add
xor
add
decl
loop
xor
sbb
ss
push
mov
xchg
lahf
mov
in
int3
dec
sbb
xchg
ja
insl
fisttpl
jge
stos
add
adc
lret
and
inc
repnz
lea
js
or
sub
rcl
sub
repnz
pop
and
jb
cwtl
xchg
or
and
mov
popa
and
lock
outsb
lods
test
and
js
jl
adc
adc
add
mov
push
xor
mov
repnz
mov
sub
lods
mov
jo
push
insl
rcr
or
mov
sbb
loop
cmc
repnz
lods
aaa
enter
sarb
xchg
sahf
imul
cmp
popa
jnp
jl
or
shll
mov
or
icebp
in
pop
push
test
test
into
ds
mov
negb
pop
hlt
lods
ss
aad
test
out
adcl
std
dec
insl
mov
fcmovnbe
andb
cmp
ss
or
lods
pusha
mov
ss
nop
push
mov
mov
leave
jl
mov
ss
stos
out
inc
mov
adcl
adc
imul
and
rcrl
pop
push
mov
in
lods
cmp
fstps
cmp
repnz
jnp
mov
sub
sub
jb
sub
inc
lret
xor
xor
hlt
mov
sbb
lcall
jns
ret
negb
and
cmp
out
notb
dec
sbb
fisubrs
jo
push
inc
cmp
stos
xchg
inc
addr16
orb
lcall
outsb
testb
mov
ror
pop
mov
push
fstpt
ds
push
pavgw
cmp
cmpsl
push
fistl
xor
es
add
adc
mov
stos
sub
dec
or
sbb
orb
shlb
ss
scas
bound
gs
push
xchg
ljmp
test
andb
shll
push
inc
out
iret
jecxz
mov
sbb
or
jae
and
into
push
or
stos
dec
inc
jo
jp
shrl
xor
je
fs
dec
push
in
sahf
hlt
and
xchg
imul
jp
mov
out
ficomps
mov
aam
jle
push
outsb
in
jnp
sarb
cmpsl
pop
xchg
pusha
cmp
xor
int3
xchg
add
les
lcall
sub
repz
push
pop
inc
ret
add
int3
dec
push
mov
add
aaa
push
mulps
imul
or
pop
test
add
data16
dec
in
sbb
push
popa
mov
xor
sti
fmul
xor
shr
pop
xor
iret
pop
push
push
xor
lock
js
test
fsqrt
adc
pop
mov
push
iret
jge
add
mov
js
jne
add
jns
fistps
nop
jae
adc
jle
xchg
cld
dec
fisttpl
or
sbb
xor
pop
push
mov
push
inc
insl
jno
hlt
stos
movlps
jecxz
into
mov
call
out
xchg
adcl
xlat
sbb
pop
or
mov
stos
scas
and
push
test
push
cmp
mov
push
and
divl
and
pop
gs
hlt
push
lret
sbb
pop
push
in
clc
push
fidivs
sub
xlat
mov
cmc
jo
mov
int3
icebp
push
or
mov
imull
and
and
dec
nop
das
jle
es
mov
push
mov
sbb
icebp
bound
ljmp
pop
lds
pop
sub
or
sahf
cmpsl
jl
mov
lock
sbbl
xor
rclb
dec
dec
std
mov
scas
notl
repnz
sbbl
mov
mov
stos
mov
pop
inc
sbb
enter
jns
loop
mov
xor
push
fldl
sbb
mov
test
sub
dec
mov
lods
shlb
rcrb
mov
fwait
jmp
and
pop
pop
cmp
or
movsl
sbb
mov
inc
sbb
sub
stc
pusha
popf
std
cmp
mov
pop
ljmp
and
fcoms
in
lret
or
cltd
xor
loop
jg
aad
out
bound
push
jg
mov
xorb
mov
lcall
lds
jno
push
cmp
push
cmc
jp
imul
shll
lds
cmp
int3
xchg
les
push
jg
fcompl
push
dec
push
std
fwait
ret
mov
data16
mov
les
pop
xor
icebp
call
sarl
jp
js
adc
jo
decl
xchg
imul
jnp
fadd
nop
rorl
xchg
je
dec
dec
pushf
shl
cmp
inc
aam
rcr
sub
lcall
mov
scas
pop
loopne
and
cmpsl
ljmp
lcall
mov
arpl
divb
jp
ja
in
sub
movb
sbb
incb
roll
xchg
xchg
lret
jecxz
mov
push
cmc
addr16
jbe
dec
dec
lea
inc
jae
or
push
shrb
xchg
pop
or
pop
xchg
xchg
lret
sbb
dec
pop
data16
mov
xor
js
mov
add
inc
sarl
sbb
xchg
cmp
mov
inc
sub
repnz
fisubrs
adc
rcrl
roll
lods
sbb
jg
in
sbb
adcb
mov
ror
sbb
out
test
mov
cmp
push
mov
lea
mov
mov
lcall
cmpsl
push
mov
inc
ljmp
and
xor
ror
push
lock
jmp
arpl
sar
jae
mov
jb
and
in
xchg
add
add
mov
cmp
shlb
or
out
cld
cmp
pop
in
jge
outsb
sub
adc
iret
out
and
loopne
pop
mov
ja
push
dec
mov
test
andb
and
sbb
data16
imull
lea
out
les
ret
jbe
jge
in
xchg
and
sbb
rcrb
shr
icebp
mov
fcom
add
push
push
sbb
pop
cmpl
cld
cmp
push
loop
mov
gs
lret
scas
ficoms
jns
bound
push
loop
lods
lmsw
push
scas
pop
sub
push
dec
cmp
movsb
adc
das
xor
ret
lret
fwait
and
das
je
mov
enter
data16
and
xor
imul
fisubl
sbb
sbb
leave
jle
xchg
sub
push
es
jae
je
data16
ret
cltd
jg
or
in
out
adc
add
sbb
jns
rol
push
clc
bound
cltd
push
data16
aaa
cmpl
or
mov
xor
mov
imul
adc
sub
mov
shlb
xchg
pop
inc
repz
push
cwtl
in
lds
pop
dec
stos
sub
pop
movsl
jne
fwait
or
jbe
xchg
fs
nop
out
push
imull
push
cmp
xchg
stc
pop
jnp
sti
add
pop
stos
stos
fs
leave
xchg
push
jge
mov
mov
test
in
mov
dec
mov
pop
pop
filds
mov
das
pop
dec
pop
inc
adc
cmp
or
leave
movsl
mov
call
lahf
sbb
mov
ja
xor
push
in
dec
lock
mov
jecxz
push
jo
outsb
sbb
sti
movsl
pop
sbb
das
pop
sub
jge
ja
mov
out
mov
xorl
ds
add
cmp
push
cmpsb
sahf
mov
mov
fsubrs
inc
sub
addr16
les
sbb
outsb
mov
mov
rolb
pop
scas
std
mov
inc
icebp
add
ljmp
mov
cmp
std
jnp
les
mov
sub
bswap
clc
inc
mov
pop
pop
iret
mov
loop
mull
aad
mov
sahf
mov
dec
icebp
shr
mov
and
daa
aad
test
jle
cmpsb
je
enter
enter
pop
aas
loope
dec
rcr
je
fs
fcmovu
mov
popa
iret
pop
les
cmpsb
dec
sbb
shrl
or
xchg
imul
mov
sub
pushf
adc
jp
enter
push
inc
dec
mov
rcrl
mov
push
xor
lds
push
in
mov
or
repnz
mov
xor
push
push
xor
int3
sbb
pop
test
fimull
or
push
hlt
das
xor
mov
sbb
orb
adc
jecxz
lods
repz
jbe
bound
clc
inc
sbb
cli
je
sbb
sbb
adc
out
faddl
xchg
push
in
jg
fs
sub
inc
xchg
cmp
fldt
sbb
ss
sub
xor
enter
sub
inc
test
push
in
pop
or
test
push
arpl
cmpsb
jl
out
push
cmp
test
mov
xchg
clc
xchg
cmp
scas
js
mov
add
sti
fnstsw
inc
scas
movsl
sbb
cmp
dec
push
jp
push
clc
mov
mov
push
or
out
aam
lret
test
in
pop
jecxz
iret
hlt
push
jae
dec
xor
cltd
mov
js
es
mov
adc
divl
jbe
dec
fdivl
and
xchg
cmc
jecxz
int
shll
jp
or
mov
scas
bound
aad
mov
jnp
or
je
jbe
call
cltd
add
call
cld
mov
out
or
adcl
inc
in
ret
add
and
popa
mov
test
xor
in
jl
mov
fucomi
sbb
fs
iret
ds
xchg
das
stc
in
mov
and
call
xchg
pop
ja
push
or
adc
imul
pusha
out
dec
push
or
jge
mov
cltd
dec
test
popa
aaa
cmp
sub
shrb
dec
enter
push
inc
cmc
pop
inc
jne
hlt
incb
dec
or
stos
shl
movsb
lcall
cmp
dec
or
mov
adcl
lods
dec
adc
call
pop
mov
lock
adc
loop
mov
mov
movhps
out
xor
orb
mov
aam
mov
xor
adcl
scas
setne
jae
and
gs
inc
mov
push
aad
in
jmp
mov
mov
sbb
out
mov
cwtl
push
insl
call
mov
cs
adc
mov
out
test
incb
fnstenv
dec
inc
movsl
cmp
xchg
loop
in
add
mov
leave
add
pop
jg
pop
cmp
xor
lahf
ljmp
inc
mov
mov
xchg
mov
rcrl
add
hlt
fistl
xchg
or
add
xchg
jae
loop
cmp
dec
popf
rcrb
scas
in
imul
pop
inc
jo
add
inc
rorl
push
cmp
pxor
popa
mov
xor
pushf
andb
jae
cwtl
mov
rcrl
jle
cmp
mov
cmp
sbb
int3
sub
js
fldenv
push
jp
push
push
ret
aas
push
jb
mov
outsl
in
push
pop
pop
mov
out
jno
jnp
rcll
dec
ret
cmp
popf
jmp
mov
sar
out
push
and
lret
fwait
xlat
adc
insl
dec
adc
ljmp
xor
fdivrs
jl
jg
xlat
shlb
xchg
iret
call
dec
jl
jae
add
add
cwtl
ror
xor
lods
sti
mov
mov
leave
outsb
or
out
fisubrl
push
and
jmp
fcomp
imul
stos
cmp
cmp
jg
mov
data16
call
outsb
lea
dec
cmp
shlb
xor
lods
loope
daa
divb
add
xor
lods
mov
aad
repz
js
cmp
jge
das
das
sbb
jbe
mov
das
adc
orl
push
lret
mov
xchg
lahf
cmpsb
imul
loopne
bound
jno
int
pop
lret
iret
add
dec
push
pop
dec
mov
adc
iret
lock
jbe
popf
js
pop
jmp
test
jbe
insb
mov
cld
jg
push
pop
iret
xor
fisubs
jl
push
jle
js
inc
imul
mov
ffree
pop
iret
aaa
dec
mov
jns
sbb
in
mov
and
adc
jae
ja
pop
fcomip
pop
pushl
mov
sub
dec
call
ret
inc
or
cmp
in
inc
xchg
hlt
jl
xchg
and
mov
and
dec
std
out
je
movsb
mov
mov
popf
gs
out
add
xchg
lods
dec
movsl
mov
int
pop
xor
insl
sbb
dec
aad
mov
pop
jno
ljmp
pusha
jns
nop
xor
fcompl
push
sbb
jmp
mov
jg
mov
adc
pop
gs
mov
outsb
sbb
adc
push
bound
pushf
add
lods
lea
js
insb
add
insb
jmp
sbbl
push
mov
adc
or
xchg
fdiv
inc
dec
in
out
movsl
cmp
repz
sbb
int
cmp
es
jmp
fmuls
or
add
pop
pop
out
lcall
mov
push
jb
cli
lret
stos
popa
js
sbb
cld
cwtl
mov
sbb
push
dec
pop
pop
aas
sub
das
xor
adc
ljmp
clc
and
sbb
jnp
cli
inc
cs
inc
push
adc
aam
mov
call
xor
es
push
test
mov
sub
cld
call
mov
sub
lret
push
mov
out
adc
mov
inc
sbb
cmc
sub
bound
out
pushf
popf
sbb
scas
flds
arpl
inc
insb
add
lods
jo
sub
xor
or
jmp
add
pop
or
fwait
loopne
xchg
and
push
movl
das
movl
push
sub
int
xchg
repnz
sahf
in
inc
pop
sub
inc
ffree
add
fwait
jne
fs
push
arpl
dec
aas
mov
lock
sahf
clc
jb
ds
rclb
push
in
push
mov
std
dec
dec
mov
xchg
testl
dec
push
mov
or
sub
xorl
js
xchg
mov
inc
ds
mov
scas
ja
or
push
mov
mov
sub
icebp
xor
test
ja
test
sarb
sbb
add
xchg
faddl
imul
and
mov
fwait
sahf
lods
test
movsb
adc
mov
imul
jns
daa
push
xor
bound
mov
int
mov
test
lahf
in
loope
push
cmp
leave
jmp
hlt
xchg
movsb
sub
ds
test
adc
incb
xchg
push
sub
mov
push
repz
cmpsl
fimull
mov
xor
inc
inc
orb
sbb
movsb
add
push
dec
into
fdivrl
rorb
and
mov
cmp
mov
jg
fdivs
mov
push
leave
es
push
xor
or
outsb
cwtl
push
sbb
into
push
test
imul
jl
decl
mov
out
and
xorw
adc
mov
subl
sbb
pushf
movsb
sbb
cmp
xor
lods
ljmp
cs
gs
ret
js
movsl
jmp
adc
in
test
xchg
int
scas
inc
jbe
adc
pop
xchg
and
push
ds
fcompl
sbb
mov
mov
push
mov
test
fisubrs
les
imul
sub
sahf
adc
cld
push
lahf
mov
or
shlb
mov
popa
pop
adc
and
pop
adc
mov
adc
cmp
daa
and
imul
frstor
lea
jl
push
ds
mov
dec
jae
sub
sar
pop
wbinvd
cmp
int
or
repz
outsb
test
repz
inc
sar
mov
popl
cwtl
xchg
scas
sub
dec
adc
mov
add
mov
movsb
sbb
pavgw
push
mov
iret
daa
or
popa
outsl
outsl
cmp
or
add
fdivr
cmp
mov
loop
sub
icebp
popa
and
push
and
xchg
xlat
push
pop
icebp
push
int
xchg
cld
scas
and
lret
ljmp
adc
inc
inc
mov
loopne
dec
in
xor
adc
lea
aad
sub
mov
push
fcmove
ja
movsl
and
jecxz
add
push
out
cmp
test
sbb
pop
aas
sahf
xlat
daa
lret
or
mov
gs
es
sbb
cmp
sub
jl
xor
cmp
shr
lods
xor
mov
outsl
popf
cltd
mov
ljmp
subl
pop
add
pop
dec
loope
jae
mov
inc
es
xchg
pop
mov
popa
rcr
mov
divb
jmp
mov
and
cs
mov
cmp
out
ja
inc
pop
sub
fs
sahf
mov
popa
jb
adc
cltd
mov
stos
ret
arpl
leave
sub
cs
adc
mov
insl
test
push
xchg
pop
sub
movsl
call
ljmp
gs
adc
cmpsl
xor
mov
aas
ret
outsl
push
into
fistl
cwtl
sbb
or
xlat
clc
sub
xor
fdivs
sbb
pop
mov
pusha
in
aad
xlat
sbb
dec
arpl
rorb
clc
shl
inc
js
jp
inc
push
loope
into
cld
cmc
daa
outsb
or
xor
sbb
push
cltd
int
pushf
bnd
mov
inc
sbb
xchg
adc
test
push
in
outsl
aaa
lret
repnz
dec
in
mov
fimuls
dec
inc
cmc
movsb
xchg
push
xchg
rorl
rcl
lods
test
in
jg
std
data16
xchg
cmp
fisttpl
lods
xchg
xchg
aad
mov
jnp
xchg
xchg
sub
xor
dec
sub
add
mov
daa
sub
icebp
and
popf
test
repz
inc
pop
xchg
xchg
ffree
cmp
cwtl
cmp
adc
out
inc
test
data16
sbb
pop
movsb
xor
repnz
lods
shlb
jbe
mov
or
adc
or
test
popa
mov
imulb
sbb
js
mov
std
call
pushf
outsb
fadds
daa
movsl
test
mov
jo
adc
and
inc
enter
add
mov
orl
loopne
adc
mov
jno
dec
fmull
fisubrl
gs
test
data16
jns
ljmp
movsl
in
lcall
push
int
adc
push
clc
mov
in
dec
out
xchg
jb
cli
xchg
cmp
lock
data16
aaa
cli
fsincos
dec
add
lret
cld
mov
insb
bound
lahf
popf
add
std
dec
daa
pop
lods
mov
shl
aas
sbb
adc
fcomp
cwtl
mov
jbe
test
adc
test
and
push
add
add
repz
inc
inc
push
dec
jb
lahf
xchg
dec
add
movsb
aam
push
cmp
mov
mov
mov
jge
faddp
cmp
aaa
push
jae
mov
mov
push
sahf
sub
jmp
cmpsb
std
gs
pop
adc
sti
sbb
popf
repz
in
pop
sbb
leave
cli
pushf
mov
gs
pushf
xchg
cmp
inc
mulb
add
xchg
jnp
fisubs
cmpsb
mov
cmp
ret
add
and
data16
inc
ja
pop
arpl
cmp
inc
aam
movsl
inc
std
clc
rol
cmpsl
push
mov
cmp
add
push
pushf
xlat
in
cmp
cmpps
push
aas
cmp
sub
jl
popa
stos
andb
xor
inc
xlat
mov
repnz
sbb
shl
int
out
cmp
clc
xchg
mov
push
sub
push
scas
aaa
pcmpgtb
push
jne
mov
jo
loope
in
loope
pop
and
sub
rcrl
shll
mov
mov
in
sbb
mov
xlat
mov
ficoms
das
xchg
cltd
cmpsb
mov
mov
fnstenv
mov
add
popf
shlb
or
ret
pushf
or
jae
sbb
jge
and
loop
mov
loopne
push
xchg
jl
arpl
idivb
leave
std
lods
mov
mov
sbbb
push
test
imul
add
mov
rcrl
pop
mov
outsl
adc
repnz
add
push
jl
outsl
mov
leave
xor
cmpsl
or
xchg
sbb
das
in
push
cmpsb
inc
or
mov
pop
push
stc
adc
mov
insl
aad
daa
out
add
lods
push
push
pop
fucom
inc
jmp
sub
leave
fnsave
dec
mov
xchg
fadds
sbb
cmpsb
nopl
xchg
xor
ret
mov
pop
andl
pop
add
test
jb
inc
pusha
sbb
xchg
inc
sti
popf
or
sbb
jnp
jno
mov
push
cwtl
je
incb
into
mov
aam
nop
jecxz
cmp
hlt
cmpsb
xchg
pushf
sti
cld
jnp
stc
mov
mov
jge
shl
js
lods
xchg
imul
bnd
mov
enter
jge
cli
shlb
adc
iret
aam
ljmp
popl
jmp
jge
xor
mov
xchg
stc
fldcw
mov
sub
lahf
neg
dec
sbb
or
xchg
rcr
mov
shll
imul
icebp
cmp
xchg
sbb
fsubs
pop
lret
mov
push
aad
mov
popa
rcll
nop
sub
mov
bound
shll
and
fsub
dec
jb
enter
sub
insl
mov
and
aas
sti
and
sbb
mov
mov
cli
lods
subl
sbb
pop
ret
into
push
shrb
mov
sub
stc
mov
xchg
xchg
notl
int3
dec
pop
notb
and
cmp
loopne
and
lea
jno
mov
enter
stos
arpl
xor
pop
xchg
mov
ret
push
mov
js
shll
faddp
pop
add
xchg
cwtl
addr16
push
adc
leave
test
jnp
js
ficoml
adc
jecxz
dec
dec
ss
jbe
ds
sub
pop
popa
or
fwait
or
mov
lea
rcrl
inc
cmp
adc
ds
cltd
and
xor
stos
cmp
adc
adc
mov
add
lods
cs
and
movsl
mov
mov
sub
cmpsl
xchg
daa
xchg
adc
sub
mov
xchg
xor
dec
pop
pop
or
mov
mov
lock
ret
in
mov
mov
rcll
sarb
cmpl
or
pop
pop
cwtl
mov
lods
popf
dec
and
or
bound
daa
fists
stc
lock
pop
jne
mov
and
jo
sub
mov
lret
nop
inc
and
xchg
roll
dec
or
mov
sbb
lahf
gs
in
pop
aam
repnz
push
shlb
or
mov
pop
and
sub
and
add
sbb
mov
pop
test
xchg
imul
xchg
dec
add
or
rcrb
mov
cwtl
jno
inc
pop
inc
imull
push
ret
mov
inc
fwait
or
daa
pop
hlt
sbb
and
daa
or
adc
fmull
sbb
pop
push
inc
inc
mov
add
xchg
xor
cli
mov
or
jo
xchg
adc
jo
pop
push
mov
adc
fwait
and
stos
ds
xchg
xor
inc
cmp
xchg
jnp
inc
jl
in
mov
popf
sahf
loop
idiv
xchg
cmp
mov
int
aas
rcrl
pusha
mov
shll
xchg
ds
and
mov
add
fiadds
insb
mov
push
or
sub
sbb
test
and
jno
loope
fistl
cmp
mov
add
pusha
jmp
and
fistps
xor
xchg
xor
cmp
push
add
adc
lods
and
ljmp
test
sub
lds
incl
rcrb
jbe
mov
rclb
cmpsl
mov
and
lock
add
and
fdivl
push
push
push
pop
cmpsb
xchg
push
dec
add
cmp
jmp
sbb
scas
cld
dec
jo
mov
xchg
arpl
ljmp
rcrl
cmp
or
inc
sbb
inc
insb
ret
sub
pop
mov
pop
xchg
int3
addl
inc
cwtl
inc
jo
inc
sub
sub
push
dec
fistps
push
adc
fsub
test
shl
dec
ds
data16
sub
push
call
jp
mov
pop
testb
inc
jg
fstpt
lea
mov
mov
mov
dec
push
inc
fdivrs
into
in
es
test
rol
inc
inc
adc
je
xchg
and
sti
les
inc
xor
push
fwait
push
insb
cmp
pop
stos
and
lcall
mov
test
lret
add
data16
repz
cltd
jp
xchg
cmp
imul
pusha
mov
xor
stos
jno
xchg
push
fdivl
mov
testb
push
xchg
loop
ret
xor
or
push
idivb
xor
push
mov
pushf
push
mov
daa
movsb
sbbb
data16
inc
shr
lock
in
mov
and
adc
je
dec
mov
pop
jno
lcall
ror
andb
gs
ja
pop
cli
mov
jp
sub
ror
xchg
inc
mov
jle
sub
cli
xchg
add
scas
and
pop
push
movsw
sahf
int
sub
add
sub
shrl
xchg
dec
cmpsb
out
mov
sbbb
xchg
push
out
mov
lcall
push
movsl
std
lods
add
or
or
icebp
mov
jl
ficoml
mov
push
dec
cmp
aas
mov
xlat
sub
out
mov
test
ret
in
lds
jno
cmp
icebp
pop
mov
inc
shll
adc
adc
in
stos
aas
dec
pop
nop
sub
out
jbe
xchg
les
cs
xchg
std
dec
xor
int3
cmp
push
sbb
sub
jae
cmp
sahf
mov
imul
lret
jle
scas
enter
inc
and
inc
pop
fs
or
add
push
test
jl
aam
mov
dec
repnz
cmp
xchg
sub
dec
push
fiaddl
cli
icebp
pop
in
fistps
les
cmc
dec
call
push
int3
add
out
stos
pusha
into
popf
test
cmp
inc
jae
or
cmp
rclb
mov
loopne
fwait
xchg
dec
push
push
inc
arpl
in
hlt
ja
dec
sbb
mov
pop
popf
push
inc
xchg
sar
jmp
out
pop
in
lahf
push
cmp
inc
arpl
iret
jmp
lods
int
fs
stos
cmp
xchg
sbb
jne
sub
in
xchg
inc
push
jle
ret
rep
rclb
mov
hlt
adc
hlt
adc
dec
mov
testb
and
ror
into
mov
jge
rolb
test
mov
cmp
inc
xchg
adc
cli
add
xor
cmpsl
sbb
cmp
xchg
cmpsl
jae
inc
cmp
cmp
lods
andb
fmull
lret
and
in
lods
xor
lods
mov
ror
push
negl
adc
sub
fs
les
add
les
outsl
push
mov
test
or
idiv
mov
mov
nop
ficoms
lcall
ljmp
lock
stos
scas
dec
add
testl
sub
fcomip
loopnew
aad
insb
imul
fsubr
adc
or
xchg
cwtl
cs
enter
fs
mov
bound
out
in
mov
hlt
and
mov
int3
fsubp
xor
outsb
shrb
sbb
out
in
cmp
mov
sub
test
push
add
mov
lahf
mov
leave
popf
frstpm(287
pop
cmp
or
xchg
lret
popa
adc
addb
out
push
xchg
xor
xchg
lahf
xchg
fcmovu
xchg
sahf
sarb
push
pop
pushf
sub
nop
and
icebp
int
in
test
fwait
dec
lods
or
scas
scas
jne
sarb
push
int
daa
cmpsb
xchg
jbe
inc
push
ljmp
lahf
ja,pt
fs
adc
dec
sbb
xor
jmp
cli
movsl
fst
std
mov
xchg
add
jmp
push
les
je
stos
scas
popf
sbb
cmp
repnz
js
stos
dec
outsl
or
out
dec
out
pushw
mov
jnp
lods
push
jg
aas
mov
or
out
test
movsb
pop
sub
cli
into
cli
mov
xchg
or
inc
lahf
ljmp
ret
mov
dec
into
jae
jbe
and
aad
jl
xor
cmp
jle
add
in
std
stos
push
fistl
pushf
es
bound
cmc
pop
out
lods
add
xchg
push
pop
arpl
jmp
pop
xor
in
out
in
and
jno
imul
stos
push
aam
fcoml
fcoms
scas
js
in
and
mov
adc
mov
and
je
jmp
jne
cltd
adc
xchg
xchg
lret
sahf
ficompl
hlt
xor
xchg
icebp
cld
lea
icebp
mov
sub
rcrb
inc
add
repnz
cmc
jle
iret
fisttps
pop
popa
es
dec
loope
or
add
push
jb
or
fcom
adc
mov
cmp
lods
fwait
lahf
xchg
xlat
movsb
fildll
push
cmpsb
enter
push
fs
ficoms
cmpsb
mov
out
sbb
fsubl
notl
mov
xchg
dec
sbb
dec
push
push
jnp
jl
mov
ss
cmp
ret
popf
mov
lods
dec
and
xchg
filds
jecxz
loopne
cmpsl
inc
jecxz
fs
pop
decl
dec
dec
sub
cmpsb
stc
sarb
jecxz
or
dec
lods
les
mov
sub
enter
xor
in
xchg
jns
mov
js
inc
and
xchg
stc
inc
dec
test
mov
pop
mov
fcompl
or
ja
pop
adc
pop
pushf
ficoms
mov
nop
push
mov
repz
mov
iret
push
mov
lcall
shll
push
cli
inc
cmpsl
cmp
into
add
lea
add
mov
xor
adc
sub
mov
stos
lret
outsl
push
lret
lds
and
lea
hlt
or
inc
out
adc
jns
hlt
xor
and
and
jmp
push
adc
xlat
int3
or
add
jnp
sbb
repnz
fsubrl
xor
xchg
test
cmp
xchg
int
fbstp
out
jl
jb
cli
push
and
push
shrb
dec
js
jl
mov
int3
jl
fxch
mov
mov
xlat
lcall
push
pop
sub
fimuls
mov
aas
mov
imul
gs
repz
jle
scas
lds
xadd
or
shlb
push
push
fs
aas
movsb
int
push
cmp
inc
push
cmpsb
mov
mov
pushf
imul
rolb
xlat
xor
pop
ficompl
cltd
cmp
mov
fs
sarl
gs
xorb
mul
outsb
test
mov
push
or
inc
outsb
pop
fistps
inc
push
arpl
pop
adcl
adc
or
cld
ja
mov
mov
clc
and
push
mov
sub
push
sbb
jge
lret
fs
sbb
loopne
jmp
push
push
mov
loope
xlat
fiaddl
mov
roll
fs
mov
sbb
mov
xchg
cmp
cli
stos
pop
adc
loope
jns
inc
mov
dec
ss
in
add
clc
cli
sbb
mov
pop
aaa
dec
roll
cmp
cmp
adc
ds
fadd
mov
jne
push
dec
dec
mov
push
push
or
and
jnp
xlat
mov
in
in
movsl
inc
mov
pop
lret
mov
pop
xchg
xchg
ret
mov
sbb
je
imul
lahf
sub
test
sub
cmp
in
mov
add
xor
pop
js
adc
mov
rcrb
out
dec
jp
jecxz
cmp
insb
daa
lods
pushf
fimull
mov
gs
test
cld
out
fs
xchg
mov
sbb
mov
push
and
test
cmpsb
cmpsl
out
adc
adc
pop
mov
inc
pop
jecxz
test
sub
stos
inc
lahf
addb
lea
mov
xor
and
mov
pop
fcoms
loop
sub
cmp
jnp
arpl
dec
fildl
ljmp
lret
ss
stc
movsb
testl
adc
sarb
and
pushf
mov
adc
and
sbb
push
lock
xor
sbb
call
scas
inc
imul
ss
cmpsl
and
xor
pop
or
adc
xchg
push
fs
mov
xor
sub
push
inc
mov
xchg
jmp
jle
les
adc
inc
xchg
and
xor
dec
cltd
add
cld
add
cmc
xor
aaa
test
xchg
inc
adc
xor
dec
loopne
sbb
rep
insb
or
or
push
mov
dec
xchg
pop
push
and
hlt
fwait
push
cs
cmp
clc
pop
dec
test
pop
movl
mov
mov
adc
mov
add
mov
stc
bound
inc
jo
xchg
pop
xor
sbb
mov
cli
out
popf
jae
pop
dec
push
cmpsl
jns
adc
iret
add
cmp
and
sub
inc
fdivrp
sbb
cmp
aam
and
rolb
shll
add
or
flds
jno
into
add
push
inc
push
or
movsb
mov
loopne
scas
movsl
call
dec
mov
mov
pop
ja
dec
out
inc
mov
hlt
inc
les
push
sub
test
jnp
in
push
add
aas
xor
cld
cld
pushl
test
in
rcr
call
inc
mov
xchg
arpl
js
inc
mov
test
xchg
lds
pushf
sbb
jbe
movsb
mov
jno
divl
jnp
aad
mov
push
imul
cmp
pop
fs
adc
repz
and
pushf
fildl
fcmove
loope
lcall
add
les
mov
mov
subb
pop
cmp
sub
xchg
arpl
push
jae
xor
movsb
xlat
jns
push
pop
int3
sub
out
movl
pop
jle
subw
ljmp
and
xchg
lret
inc
stos
inc
insb
inc
idivb
sub
in
mov
push
adc
and
scas
lock
xchg
add
flds
iret
mov
xor
pusha
hlt
or
or
or
mov
and
stos
push
adc
push
nop
jp
mov
and
mov
mov
jb
call
mov
imul
hlt
pop
test
mov
cs
xchg
adc
add
and
jns
das
jno
xchg
cmp
xchg
cmp
int3
out
loope
push
mov
lret
cld
push
push
pop
gs
mov
repnz
rcll
imul
sbb
mov
lret
imul
cmp
cmp
test
add
add
push
jnp
out
sbb
and
test
xor
sbb
add
xchg
push
push
cltd
daa
lods
enter
pop
in
sbb
gs
cmpsl
sbb
rol
sbb
ret
xchg
arpl
xor
cld
insl
mov
mov
jg
cmpsl
das
and
or
or
into
lods
mov
lahf
xchg
and
outsb
scas
and
pop
fmull
lods
jg
pop
push
ret
or
xchg
arpl
inc
sbb
mov
jo
cmp
lcall
hlt
out
jnp
pop
mov
mov
les
lods
sahf
xor
cwtl
xchg
loopne
mov
pop
mov
les
shlb
jmp
fmull
and
and
stc
insl
outsb
cmp
shll
test
ficompl
xchg
dec
xor
dec
addr16
int3
lods
adc
test
negl
rorl
xchg
and
add
test
inc
add
xchg
adc
ret
pusha
pop
lret
lcall
cmpsb
lea
jl
lret
dec
jg
aam
pusha
pusha
popa
mov
xchg
stc
lea
push
sub
push
out
pushf
mov
sbb
sahf
rcl
inc
jge
mov
sti
aaa
mov
movsw
ss
ret
adc
mov
icebp
pop
iret
imul
mov
xchg
pop
lret
pop
pop
gs
outsb
test
push
and
xor
push
aam
das
lcall
lods
xlat
ret
mov
adcb
mov
loop
lds
subl
pop
cmpsl
mov
je
test
adc
enter
in
mov
js
fimull
jns
jecxz
mov
lock
fimuls
cmp
repnz
test
dec
jb
jne
mov
and
movsl
aaa
mov
sbb
outsl
mov
pop
jmp
pop
sbb
outsb
repnz
adcb
xchg
sub
jo
or
xor
and
inc
popa
setbe
and
lods
jecxz
test
subb
jb
sbb
cmc
adc
aaa
cmp
insl
sbb
inc
push
pop
inc
pop
movswl
jnp
dec
mov
add
xor
nop
fstpt
or
sbb
rorl
outsl
stos
push
test
out
xchg
cltd
adc
pop
push
xchg
lds
arpl
stos
je
arpl
ljmp
sub
in
xchg
mov
push
xor
adc
daa
stc
mov
gs
jecxz
and
out
add
or
dec
loop
jg
lods
jne
dec
sbb
mov
and
dec
adcl
cmp
cmpl
inc
setb
mov
aas
roll
test
sbb
xor
icebp
push
mov
cmp
adc
aas
cmp
jne
out
jle
push
cmp
stc
jne
cltd
xor
jo
jns
cld
icebp
mov
xor
xchg
sbb
shl
jecxz
sarb
add
push
in
mov
bound
and
arpl
repz
int3
sub
loopne
cmpsb
aas
jmp
stos
sbb
scas
sub
fimuls
scas
add
lock
fimuls
sub
rorl
xorl
push
sub
hlt
popl
inc
aam
dec
mov
dec
and
cmp
jle
push
sbb
pop
xor
lret
ror
pushf
sub
and
mov
inc
sbb
xor
jns
sub
in
mov
enter
sbb
mov
mov
xchg
inc
push
in
xchg
in
inc
std
test
sub
sub
push
dec
jmp
aaa
ret
outsl
dec
lods
cmp
fsubl
jns
in
loope
push
jo
pop
insl
adc
adc
leave
aam
adc
or
cmp
repz
testb
pop
dec
iret
test
add
dec
push
sbb
inc
shll
sub
call
jl
adc
ret
mov
fisubrl
in
ret
add
in
xor
push
mov
jmp
sub
sbb
stos
lock
mov
lahf
popf
je
xchg
das
notl
sar
jbe
sub
add
dec
lcall
and
xchg
loop
sbb
ljmp
loopne
shl
daa
add
and
inc
mov
xor
pusha
nop
dec
sub
repz
inc
jp
lret
mov
rcll
sub
aas
jns
add
insl
stos
out
inc
lcall
mov
jno
cmpsl
pop
sbb
push
fs
mov
iret
xchg
outsb
sub
lock
xlat
aas
sub
jp
push
test
jno
jb
or
push
shll
add
mov
in
std
mov
ret
repnz
leave
rcrb
fs
decl
test
add
push
push
mov
in
sub
push
aas
cwtl
or
lock
push
or
inc
aaa
les
shll
mov
or
lea
mov
pop
popf
push
leave
or
fstl
jmp
mov
jne
sub
add
inc
push
cld
push
and
lea
cmpsb
in
pop
pop
and
cs
adc
push
iret
push
push
jbe
out
jae
cmp
cmpsl
jbe
cmp
xor
mov
mov
outsl
add
xchg
mov
out
or
movsl
in
mov
fbld
in
shrb
pop
cmpsl
lea
adc
adc
jmp
jne
imul
sub
jnp
adc
jl
out
push
add
push
adc
loope
and
mov
xchg
in
cli
mov
jae
stc
in
sub
push
sub
sbb
mov
sahf
adc
push
sti
push
lds
scas
pushf
xchg
pop
mov
jecxz
jmp
iret
dec
fbstp
repnz
adcl
cmpsl
mov
inc
mov
xchg
pushl
or
mov
adc
mov
and
add
cmpsl
pop
mov
mov
enter
mov
imul
sbb
jp
mov
or
push
mov
sub
sub
sbb
mov
fcoml
pusha
xor
mov
dec
mov
icebp
sub
lods
xor
push
daa
mulb
jmp
xorb
dec
bound
add
sub
mov
enter
inc
movsl
mov
pop
aas
fwait
std
mov
inc
and
aad
adc
add
imul
das
in
nop
mov
loop
test
push
mov
cmp
sub
dec
fsts
inc
or
dec
shll
mov
xchg
daa
xchg
push
push
mov
out
lock
loope
divl
outsb
pop
or
or
stos
jge
fs
stc
mov
loop
stos
movsl
inc
loop
idivl
and
push
inc
sbb
imulb
daa
and
add
sbb
in
mov
dec
daa
mov
mov
icebp
shll
jno
je
popl
push
xchg
and
pop
fs
xlat
xchg
movsl
scas
inc
or
les
ja
js
hlt
stos
push
xor
imul
stos
addb
scas
cwtl
int3
mov
add
cmpsb
mov
je
gs
cmp
adc
inc
lcall
insb
add
adc
xor
push
mov
mov
or
jle
xor
mov
add
mov
push
jmp
insb
lods
lahf
inc
sti
pop
inc
and
mov
jecxz
push
incl
cmp
cmc
js
push
xor
inc
adc
lods
lret
mov
fimull
mov
and
xchg
and
imul
cmpb
fwait
popa
subl
mov
xor
cmpsb
add
push
std
and
orl
dec
sahf
sub
or
pusha
clc
aas
mov
pop
ja
jmp
mov
fistps
addb
dec
xchg
shlb
inc
cmpsb
sbb
lock
jne
pop
pushf
enter
jecxz
or
xlat
dec
xchg
push
mov
push
shlb
jecxz
rcrb
cmp
rsm
push
cmp
jle
gs
cwtl
pop
inc
fs
ljmp
popa
out
mov
inc
repnz
or
mov
int
sbb
xlat
lock
mov
mov
jl
in
pop
or
push
inc
xchg
bnd
and
daa
sub
push
outsl
fildl
arpl
dec
das
jg
enter
jmp
loop
jno
lcall
mov
insb
mov
cld
pcmpgtw
mov
dec
clc
shrl
cs
movsl
xchg
dec
inc
dec
or
sub
stos
mov
jecxz
xchg
xchg
subb
add
cmp
movsb
fcmovbe
xchg
dec
cs
mov
mov
vcvtps2dq
daa
fs
push
sub
sahf
sbb
mov
add
mov
mov
arpl
inc
arpl
sub
add
push
inc
push
rorb
or
cmc
call
scas
test
xlat
inc
movsl
test
in
sbb
imul
mov
and
movsb
nop
xor
out
mov
xchg
xchg
add
dec
pusha
mov
push
bound
test
inc
pop
or
sub
jbe
sbb
outsl
push
fisttpl
insl
das
or
mov
cmc
inc
pop
stos
enter
cltd
push
xchg
pusha
sbb
jno
rcl
dec
fcmovu
outsl
shr
lcall
out
test
cmp
jno
and
addr16
mov
mov
sbb
cmp
or
dec
mov
out
lahf
cmp
rorl
je
sbbl
pop
fcompl
or
mov
or
pushf
loopne
jmp
cmpsb
xchg
mov
test
lds
xor
xor
repnz
repz
pop
fmulp
es
push
cli
sub
cld
jb
clc
jl
fmull
lahf
cs
and
outsl
icebp
lea
cmpsl
mov
mov
ja
fprem1
arpl
adc
cmp
int
rol
lcall
cwtl
jns
neg
pop
out
cmpsb
gs
out
or
lcall
dec
aad
adc
dec
mov
fildll
push
outsl
xchg
mov
xchg
mov
in
pop
cli
test
std
push
icebp
mov
sub
arpl
mov
in
inc
cmpsb
pop
nop
mov
pop
outsb
push
push
imulb
mov
or
cmp
mull
stos
aad
ficoms
xorl
das
dec
enter
mov
out
xor
lret
inc
test
lret
lret
out
xor
adc
fmuls
nop
out
popa
bound
jmp
sub
mov
and
hlt
rorb
aaa
mov
jmp
les
add
sbb
nop
cld
mov
inc
xchg
subl
dec
outsl
cli
cmp
inc
insb
out
inc
mov
cmp
clc
ret
in
cmpsb
js
js
lret
or
ret
push
mov
xchg
lret
leave
inc
sbb
sbb
add
leave
aaa
lret
stos
stos
lahf
mov
jb
imul
jbe
jb
or
aaa
cmp
jbe
mov
pop
jl
jae
test
lods
and
jne
mov
lods
fbstp
or
mov
sarb
test
mov
xor
aaa
and
jge
loop
aas
push
inc
fcoms
and
cmp
movsl
mov
pushf
movsl
and
fmul
inc
sti
cmpsl
and
pop
or
outsb
xor
push
and
push
push
loope
push
and
je
jle
mov
test
sub
sbb
or
mov
shl
mov
and
xchg
xor
mov
js
lret
inc
das
mov
mov
shr
cmpsb
lods
lret
js
int3
and
push
inc
lock
add
ret
imul
ja
hlt
or
jne
fsubp
mov
xor
test
aas
sbb
cmp
nop
cmc
icebp
insb
jg
jle
movsb
jae
lea
ds
mov
cmpsb
into
idiv
inc
negb
mov
push
das
imull
mov
lds
mov
add
mov
jp
push
or
shl
rorb
sub
pop
jmp
xchg
push
adc
test
orl
lcall
mov
pushl
inc
sti
jno
in
xchg
xchg
mov
ret
sub
roll
ljmp
xchg
leave
ds
rcll
dec
addr16
inc
movl
pop
out
cmpsl
sub
cmp
je
pop
movsl
imull
xchg
sti
dec
int3
dec
aas
dec
push
stos
fdivr
lret
pop
mov
cmp
data16
lea
jnp
addr16
mov
push
sbb
push
movsb
pop
bound
stos
outsl
add
fisubrs
sub
push
push
mov
jmp
push
inc
mov
ljmp
inc
cmp
bound
mov
js
cs
mov
lcall
ficomps
sbb
mov
icebp
mov
cld
inc
mov
test
add
cmpsb
repnz
mov
in
mov
stos
es
push
enter
in
test
lret
scas
xor
int3
or
nop
fisubs
xchg
or
cmp
push
xor
or
xlat
or
or
insl
or
mov
sub
idivl
mov
std
fcoml
fdivrs
xchg
shrl
and
jno
inc
stc
xchg
xchg
repnz
test
push
roll
outsb
leave
dec
xor
fistpl
inc
xchg
fists
stos
lcall
gs
mov
out
popf
nop
lods
fwait
push
pusha
or
pop
lods
popf
pushf
test
hlt
movsb
cmpsl
jbe
in
mov
dec
rorl
cmp
cli
imul
fcmovnbe
std
or
scas
lds
fimuls
loopne
repnz
mov
or
or
outsb
mov
cwtl
fwait
movsb
cli
jmp
add
add
bound
sahf
pusha
ljmp
rol
rorb
pusha
lret
shl
fsubrp
xchg
ljmp
and
lahf
jne
ds
mov
lahf
cmpsb
dec
and
rorb
jb
xor
inc
aas
cmp
cmp
ret
lcall
xor
cmp
scas
ficomps
jecxz
iret
in
rorl
lret
sbb
mov
sbb
mov
xchg
in
dec
movsl
mov
icebp
mov
repz
pop
nop
xor
rep
ror
nop
scas
jbe
enter
push
pop
sti
xchg
loope
ss
adc
shrl
movsb
les
fwait
mov
lahf
cltd
mov
loope
mov
scas
sbb
or
adc
leave
jae
scas
and
arpl
movsl
mov
dec
push
lret
movsb
faddl
or
mov
repz
push
add
jbe
xor
sbb
jmp
mov
shr
rcll
out
cli
xchg
sar
mov
shll
xchg
fldenv
ret
xor
and
and
dec
add
inc
bound
jb
ja
rcrl
outsb
ficoms
push
pushl
cmp
sbb
sub
adc
aam
mov
xchg
lcall
dec
push
inc
pushf
lcall
pop
shlb
fnstsw
mov
sbb
orb
push
dec
js
mov
roll
lcall
lret
movb
sahf
sbb
lock
mov
nop
push
fwait
bound
jns
push
pop
stos
pop
outsb
sbb
add
and
xor
mov
lods
add
out
push
mov
dec
sub
into
fstpl
mov
and
repnz
mov
popf
pop
pusha
gs
sub
aaa
pop
xchg
sbb
test
xchg
jo
testb
cs
test
loope
dec
jo
fcmovnu
repnz
dec
or
fs
repnz
and
jns
mov
fcoms
xchg
imul
adc
je
and
sbb
sbb
jge
les
je
movsl
xor
sbb
jge
repnz
data16
sbb
les
pop
loop
mov
outsb
orps
mov
cmp
adc
insl
xor
aad
pop
aas
jo
out
imul
adc
or
dec
out
jns
jge
dec
repnz
cmp
sbb
cmp
jmp
lret
cltd
sbb
imul
mov
imul
aas
repnz
loope
add
mov
fwait
mov
fwait
pusha
mov
push
faddl
imul
fs
pop
aam
xor
mov
inc
gs
sbb
cmp
jo
out
mov
mov
jns
popa
pop
leave
pop
mov
mov
inc
xchg
out
or
lahf
pop
xor
push
pushf
xchg
add
xchg
ja
mov
xor
in
jp
jp
stc
jge
call
fstl
mov
xchg
push
mov
inc
shlb
fisttpl
mov
data16
lods
in
xchg
les
ds
sbb
js
mov
and
pop
sbb
pop
mov
pop
and
adc
jns
mov
int
push
sub
add
push
xchg
clc
orl
ds
xchg
push
adc
into
or
cwtl
mov
mov
mov
ret
test
fmuls
sbb
sbb
pusha
jecxz
push
and
add
lds
dec
dec
aas
sti
cmp
bound
test
mov
adc
sahf
incb
out
jmp
shrl
add
les
mov
xor
sub
mov
mov
jle
inc
adc
xor
sub
push
icebp
sub
sub
scas
mov
mov
loopne
inc
cmp
jo
aas
xchg
stos
cmp
sub
add
push
lret
and
cmc
ret
lock
jmp
jl
loope
and
add
ret
sbb
aam
out
aam
inc
movsb
subl
mov
popf
or
rcr
insb
xchg
lret
ret
add
int3
jge
lea
out
xchg
sbb
enter
hlt
je
fisubl
orl
xchg
mov
sti
or
xchg
or
push
in
sbb
movsl
and
fiaddl
iret
fs
ljmp
ret
push
enter
jle
push
mov
cmp
aam
inc
out
sbb
fld
loope
jno
mov
dec
es
sbb
sub
add
hlt
jnp
imul
sbb
mov
outsl
inc
je
clc
loopne
lock
xchg
les
ljmp
dec
enter
mov
sarb
xchg
pushf
add
outsl
rcl
mov
cltd
cmp
insl
xor
and
stos
jno
push
mov
adc
mov
push
jns
shrl
cld
outsb
push
inc
sahf
xchg
pop
sub
clc
push
cmp
sbb
or
andl
mov
sti
sub
jbe
xchg
push
xchg
fcompl
xor
pop
and
jns
sbb
push
orb
or
xchg
sbb
cli
push
add
sub
adc
xor
ljmp
cmpsb
outsl
es
lock
dec
or
pop
and
and
sbb
data16
fcoml
adc
mov
fidivl
pop
divl
mov
inc
sti
jo
aam
push
cmp
vpaddd
mov
lahf
pop
mov
push
pop
aam
inc
jle
cmpsb
mov
mov
iret
or
gs
sti
lcall
pop
cmpsb
cmp
mov
scas
add
rcl
jl
cmp
add
test
std
push
insb
add
std
xor
loope
dec
sbb
xchg
fld
add
and
cmp
popa
mov
adc
adc
addr16
xchg
sarb
mov
and
inc
mov
dec
jecxz
sbb
mov
outsl
xor
inc
or
jl
xchg
or
scas
sbbb
popa
in
mov
pop
xchg
paddsb
dec
test
out
pop
sbb
sub
fcomps
rcr
pusha
inc
leave
insb
add
fdivs
adc
sbb
pop
xor
ret
stos
pop
jb
pop
fcomip
aas
leave
cltd
jb
icebp
push
push
js
push
mov
and
imul
mov
cs
insl
lods
cmpsl
add
and
pop
pop
shll
mov
insb
dec
xchg
mov
rorb
or
or
or
push
adc
in
mov
addl
popa
and
scas
pop
call
jno
xor
cmpsb
sub
repnz
lret
insl
mov
mov
fnop
push
dec
jns
leave
insl
call
sti
lods
ds
es
mov
ret
xor
mov
pop
std
xchg
pop
fstps
mov
repz
aaa
pop
pop
sub
daa
mov
iret
mov
or
faddp
mov
add
jno
sub
or
pop
xor
in
cwtl
mov
push
mov
fsub
add
inc
sbb
dec
stos
jle
cli
cwtl
cmp
push
rcr
lods
sbbl
xchg
das
sub
dec
sub
or
push
in
fldl
ds
inc
sbb
fiadds
lahf
mov
in
sbb
outsb
push
rorl
xor
loope
test
cmc
and
call
mov
repnz
out
and
stos
mov
cli
das
xchg
xchg
pop
jnp
xor
mov
push
jne
push
stc
push
xorl
xchg
ja
mov
call
push
sti
fwait
stos
cmp
in
push
mov
ja
cld
push
xchg
mov
roll
mov
cli
fwait
cmp
sub
stos
hlt
repz
pop
xor
and
in
add
int
lret
jae
inc
enter
mov
inc
mov
mov
or
sti
mov
lret
xor
mov
les
mov
mov
cwtl
aam
adc
and
jo
jecxz
shrl
lea
push
mov
lcall
arpl
push
jbe
mov
push
mov
cmp
push
or
adc
and
gs
dec
mov
xor
xlat
ljmp
xchg
xchg
adc
xor
jbe
lock
pop
inc
repz
out
or
div
pusha
sub
movsb
dec
sbb
push
pop
or
mov
sub
mov
push
add
fcoml
and
cmp
cld
gs
int
shl
mov
jge
mov
subl
shl
aaa
jle
int3
xchg
xchg
jne
and
xchg
iret
pop
cli
cltd
fs
xchg
fsts
fiadds
mov
pop
push
and
jae
movsb
sbb
jno
aam
pop
loopne
aas
leave
aaa
inc
pop
xchg
pushf
rol
push
sahf
imull
stc
mov
cmp
fcmovnbe
scas
pop
cmp
aam
mov
jg
fwait
notl
mov
or
mov
pop
popf
sbb
shl
sub
pop
mov
inc
dec
mov
rcr
jg
mov
sub
inc
rorb
or
test
lods
lahf
pop
mov
jo
mov
js
fcomps
lds
add
sub
js
notb
fadds
addb
stc
inc
xor
jb
dec
push
jbe
pop
xchg
adc
cmp
pop
xchg
push
rorl
repz
xchg
enter
cmp
ds
fwait
arpl
test
in
loope
aas
popa
lret
lret
lds
fwait
imul
mov
movsl
mov
mov
in
fsubr
pop
jmp
fwait
hlt
pop
movntq
out
mov
jge
loope
dec
mov
pop
lods
ret
mov
ret
jmp
icebp
fldl
add
aad
adc
repnz
pop
into
mov
and
sub
ja
mov
sarl
popa
jl
cld
ljmp
xor
rol
cwtl
jbe
jnp
ds
cld
inc
mov
inc
ja
jp
dec
lret
push
fstl
add
push
sbb
xlat
fisubl
imul
insb
push
cmpsb
rolb
push
fs
push
sahf
mov
mov
mov
add
seto
test
movsb
out
popa
dec
push
adc
xor
jmp
repnz
mov
jle
mov
int
jl
fisttpll
clc
jne
loopne
and
rcrb
in
repnz
sti
js
bswap
and
inc
cmp
adc
push
xlat
adc
lahf
scas
das
mov
xor
cmp
push
ds
in
imul
bound
aaa
daa
xchg
ret
imul
mov
int3
ja
ret
inc
bound
pcmpgtb
adc
mov
shl
xor
pop
jle
bound
xor
or
sub
cmp
insb
dec
xchg
ljmp
sub
sbb
loop
outsl
cmpsl
pop
fsts
ss
jb
leave
sbb
jg
inc
enter
jecxz
lods
mov
push
push
cwtl
das
pop
lahf
push
jbe
lds
pushf
pop
mov
cmp
fs
jns
dec
inc
xor
stos
xchg
jecxz
stos
cmpsb
sbb
int3
and
or
inc
lea
jl
stos
inc
fildl
push
pop
popa
mov
sbb
cmc
in
dec
dec
cmp
out
or
repz
repnz
jno
lcall
lds
and
cmc
cmp
jmp
adc
xor
in
xorb
dec
inc
jge
imul
pop
xchg
popf
loope
scas
mov
or
lods
xchg
xchg
pop
dec
sub
mov
lods
xor
test
psubw
hlt
and
dec
insb
sbb
jnp
fimuls
movsl
cli
cmp
fcmovnb
sahf
fucomi
dec
xchg
out
mov
lods
push
sub
ja
jo
jmp
adc
and
jb
repz
lea
mov
fisttpll
cmpsl
and
push
movsl
stos
lcall
ds
rcll
fimuls
call
jmp
es
jecxz
and
dec
xchg
and
lods
shlb
dec
aas
out
jecxz
dec
inc
jl
fcoms
xchg
iret
push
and
cmp
inc
insl
sbb
fwait
jo
in
pop
push
rol
pop
cmc
testl
clc
out
mov
push
aam
dec
jl
divl
mov
sub
in
cld
jns
cwtl
push
mov
adcl
int
or
cltd
mov
jns
jmp
mov
cmp
lea
xchg
test
push
fmuls
loope
inc
bound
aam
jne
aaa
out
test
push
mov
pop
enter
inc
mulb
jmp
dec
fsubrs
addr16
call
xor
mov
ja
jno
pop
push
and
fwait
mov
stc
and
insb
pop
and
dec
es
iret
xor
pusha
into
mov
xor
lock
shr
mov
or
loope
push
mov
repz
sahf
fnstenv
pushf
xchg
daa
rep
adc
shll
and
clc
push
out
and
rol
out
push
dec
mov
xor
lret
sarb
lahf
lock
jg
call
push
ret
aam
or
or
adc
ret
stc
pop
adc
dec
call
dec
pop
fists
and
jns
imul
std
adc
push
lret
pop
cmp
imul
push
inc
pop
loope
mov
or
loop
loopne
in
push
sbb
gs
xor
add
and
pop
clc
mov
data16
push
sbb
xchg
push
pop
imul
inc
fldl
cmp
add
push
xor
or
pop
and
mov
jbe
mov
mov
inc
pop
in
push
dec
inc
je
mov
and
lea
lahf
push
repz
sbb
leave
shlb
decb
sbb
or
loop
fwait
cs
lahf
into
cmp
pop
pop
mov
fldenv
pop
jnp
adc
cmp
sub
pop
pushf
mov
in
push
nop
push
pop
xchg
ds
inc
pop
and
sub
adc
cmpb
push
cmp
dec
popl
inc
popf
out
push
scas
jo
outsb
mov
ss
jnp
xor
fnsave
pusha
daa
jecxz
lret
inc
pop
int
and
pop
sbb
gs
popa
fwait
push
aad
stc
pop
xchg
out
sbb
cmpsl
adc
fldl
or
push
dec
ds
test
xlat
jbe
out
push
xchg
test
ficoms
push
ftst
inc
repnz
jle
fs
fimull
aas
or
jae
or
jmp
insb
inc
or
nop
or
in
testl
js
data16
and
adc
or
dec
arpl
mov
adc
push
push
pop
xchg
jecxz
inc
inc
das
inc
lods
pop
sub
push
push
push
sbb
cmpl
dec
push
pcmpgtw
popf
cmpsl
std
outsl
mov
and
jb
int3
cmpsl
jno
cld
lds
scas
sbb
jecxz
ljmp
ss
iret
jnp
jnp
inc
shrl
insl
cmc
ljmp
popf
lods
imul
in
cld
jg
sti
lcall
dec
push
in
rorb
dec
dec
sbb
adc
divb
add
out
or
leave
decl
cwtl
cmp
lahf
xchg
out
cmpsl
aaa
mov
xchg
imul
aam
xchg
cmp
adcl
outsl
aaa
dec
cmp
test
mov
outsl
data16
nop
jmp
daa
dec
lods
push
sub
inc
push
out
mov
imul
push
pop
scas
mov
xchg
cmp
pop
fistps
das
xchg
arpl
mov
test
push
and
mov
cmc
je
daa
gs
and
cmp
xchg
mov
loope
xor
lods
inc
lds
or
and
inc
or
sbb
and
add
lods
xchg
frstor
jns
mov
mov
ja
mov
add
lea
xor
inc
lods
aas
or
xchg
not
mov
push
jge
push
dec
icebp
mov
sub
je
scas
pop
and
inc
dec
lea
stc
loopne
mov
or
mov
pop
sub
repnz
int3
data16
jno
mov
jp
lock
fwait
aad
dec
xlat
test
or
push
xor
pop
xor
jno
dec
xchg
and
push
cmp
xchg
leave
xorb
dec
jl
jo
dec
or
mov
nop
xor
jge
leave
xchg
loopne
inc
push
pop
pop
loop
push
dec
inc
mov
mov
ljmp
or
sarl
sub
shrl
sub
add
bnd
stos
stos
mov
pop
test
mov
cmp
sub
mov
lret
cli
jb
pop
adc
mov
insb
adc
and
daa
pop
sub
xchg
adc
mov
pop
xchg
lret
orl
jle
gs
jno
or
lahf
sub
enter
pop
cmp
mov
enter
vmwrite
pop
sub
cmpsw
jmp
cmp
mov
or
mov
movsl
mov
sub
lret
mov
sbb
lods
push
test
xchg
adc
in
xor
push
add
push
adc
or
ficoms
and
xlat
or
xchg
out
xchg
daa
in
gs
sbb
bound
or
jle
test
imul
and
sub
rorl
test
pop
xorb
in
call
pop
pop
aaa
mov
sub
jmp
mov
mov
jbe
fdivs
pcmpgtb
jno
xchg
xchg
outsb
ret
cld
dec
jge
cld
xlat
xor
or
pop
xor
cmp
pop
scas
mov
sbb
ss
int
out
aad
mov
ljmp
jnp
cld
sbb
ss
mov
cmp
pop
jo
cltd
test
test
lret
arpl
lds
std
lret
mov
mov
andl
jae
imul
scas
push
movsl
cmp
xor
cmpb
or
test
mov
cmp
mov
scas
outsl
inc
testb
out
es
sub
sub
jecxz
inc
jbe
aad
daa
dec
fld
cmpsb
add
cmp
or
push
idivb
movsb
push
loope
negb
dec
jb
fmull
pop
cmp
mov
xchg
in
mov
les
mov
cmpsl
sub
hlt
xchg
sub
cli
js
sbb
pop
jae
dec
test
mov
xchg
jmp
fwait
xor
loop
mov
arpl
enter
sbb
inc
loope
xchg
add
nop
rcl
sbb
mov
mov
icebp
ret
cmp
shl
push
and
inc
and
add
movsb
push
divl
or
out
fs
jbe
out
dec
faddl
sub
jns
jecxz
add
les
sbb
lds
pop
sarb
mov
or
jbe
pop
or
and
ror
mov
cmpsl
push
pop
mov
xchg
int
in
sub
sbb
aad
cmp
popf
mov
gs
daa
mov
and
aas
mov
cmp
pop
aas
bound
nop
ret
add
leave
xchg
in
xorl
jecxz
push
nop
mov
ja
inc
jb
pop
lds
pop
daa
mov
out
jns
movsl
adc
into
lret
cmp
add
mov
daa
pop
xchg
xchg
scas
add
add
nop
inc
sub
mov
sbb
ret
mov
imulb
dec
sti
fadds
jbe
dec
inc
rol
cmp
leave
fmull
repz
pop
stc
mov
xor
fs
lods
mov
test
les
lods
notb
jmp
xchg
adc
test
fists
xor
sub
dec
in
ds
hlt
mov
pusha
das
mov
fdiv
mov
sub
jmp
and
lock
add
or
xchg
data16
cmp
pop
leave
cmp
xor
lcall
test
xchg
add
cmovnp
out
push
jl
cli
loop
adc
dec
lret
mov
pop
nop
stos
mov
cmp
xchg
push
das
push
loopne
or
repz
xchg
out
jmp
lcall
cltd
outsb
sbb
xchg
xor
ja
daa
cltd
add
mov
cmpsl
or
imul
out
mov
daa
in
cmp
pop
mov
jne
cltd
decb
cmc
xor
out
xor
add
xlat
adc
out
jbe
mov
arpl
dec
test
mov
inc
adc
and
push
bound
arpl
stc
scas
test
hlt
cmpsl
nop
push
sti
xchg
frstpm(287
shlb
fstps
pusha
fs
pusha
mov
addr16
xor
sbb
sarl
in
out
dec
xor
and
je
lods
loope
pop
pop
jp
push
and
hlt
xor
call
push
fwait
mov
dec
cmp
leave
add
jg
ss
cmp
mov
dec
shl
in
pop
roll
sbb
mov
popa
lods
mov
push
mov
lea
mov
in
mov
or
dec
gs
push
add
mov
jmp
add
xor
data16
icebp
ret
sbb
fldt
adc
push
mov
repz
or
nop
dec
or
jecxz
int3
dec
fcoms
roll
stos
pop
outsb
xchg
test
insl
or
dec
imul
xchg
sub
lcall
push
mov
inc
jmp
sti
jl
loop
fs
mov
xor
xchg
sub
sub
add
jmp
movsb
cmp
repz
out
out
lret
sbb
sbb
mov
int
out
jge
push
fcomps
jmp
push
sahf
xchg
mov
mov
in
add
lcall
popf
cmp
dec
pop
mov
clc
jg
xlat
divl
rcrb
adc
xlat
inc
push
add
fdiv
jmp
push
mov
add
dec
mov
icebp
cmpsl
xor
sbb
sahf
bnd
sub
mov
je
scas
addr16
jne
sti
mov
and
cmp
into
xor
mov
fcmovne
dec
popa
out
test
push
and
mov
shr
sbbl
mov
mov
bound
add
in
jne
outsb
leave
push
stos
jno
jnp
sbb
fxch
jb
xchg
mov
adcb
jno
lahf
mov
ret
inc
add
dec
jp
lcall
pusha
jmp
and
negb
addb
push
int
fcomps
jecxz
or
testb
test
sbb
fwait
xchg
je
sub
fsubrs
mov
push
jbe
nop
sti
loopne
adc
das
shll
int3
aaa
xorl
sub
movsl
out
mov
sbb
push
call
repnz
and
dec
pop
jno
pushf
mov
popf
adc
and
or
pop
outsl
cltd
jo,pn
cwtl
pop
out
addb
orb
and
sbb
in
aad
adc
xchg
cmp
in
inc
out
imul
or
push
ret
mov
lret
call
pop
dec
dec
test
lods
stos
je
repnz
in
inc
dec
daa
mov
aad
pop
jmp
xchg
xchg
and
push
cmp
out
pop
adc
in
sahf
lret
sbb
cmc
sbb
dec
addr16
lds
or
inc
rcl
cmp
inc
into
fistl
pop
and
pushf
inc
popf
or
cmpsb
push
push
jns
add
jns
pop
sub
push
aaa
into
sbb
aam
xchg
mov
sub
push
push
icebp
adc
pop
stos
aad
xchg
and
mov
lret
movsb
out
sbb
jecxz
nop
mov
fxch
or
mov
xor
xchg
push
push
sub
mov
jo
jo
inc
dec
pop
cmp
out
stos
fistpl
mov
mov
adc
or
cli
or
out
rol
xlat
repnz
xor
cltd
mov
rcr
lock
dec
lods
test
fiaddl
fimull
sub
jnp
mov
call
pop
cli
jg
add
mov
out
rcr
ja,pn
dec
in
orb
sahf
mov
addr16
arpl
das
repnz
sahf
pop
mov
push
ret
pop
jns
xchg
dec
dec
jnp
pop
movsl
iret
sbb
mov
cmp
cmc
mov
leave
rclb
mov
mov
imul
stos
pop
jno
jnp
jmp
dec
into
lods
aaa
mov
outsl
fs
lock
cmp
cld
es
mov
pusha
icebp
lds
jne
sahf
push
dec
icebp
push
imul
jge
sbbl
aaa
push
add
loope
movsl
addb
ret
stc
stc
fstpl
mov
lret
push
mov
loop
pop
mov
sbb
lods
and
cmp
lret
pop
inc
add
xchg
pushf
mov
or
sub
xchg
in
daa
scas
and
mov
or
and
and
lock
idiv
and
sbbl
int3
andb
cmp
lcall
out
push
jg
test
aam
dec
vpunpckhbw
sbb
ss
rcrb
in
mov
mov
pop
jge
sub
fistpll
cmp
mov
jnp
push
shrl
sub
enter
xchg
mov
lea
add
repnz
mov
in
into
insb
arpl
testb
iret
add
mov
shll
cmp
inc
aad
rorb
push
jecxz
and
lret
push
rorl
inc
inc
fs
push
mov
mov
hlt
jnp
xchg
sbb
rorl
xor
push
jge
stc
outsb
jge
call
add
cmp
pushf
int
in
ret
xorb
inc
pop
cwtl
mov
dec
movsb
cld
xlat
cmc
bound
mov
pop
push
je
test
sub
or
xor
dec
out
push
mov
insb
ds
push
add
jbe
push
das
lahf
sub
rorl
adc
rclb
mov
xor
insb
mov
mov
mov
jmp
and
fistpll
jbe
out
mov
dec
sbb
sub
dec
loope
adc
sti
or
hlt
add
inc
shr
call
adc
add
jecxz
aad
sbb
cld
xchg
loop
in
push
arpl
or
xchg
sub
jmp
fldl
ds
sti
adc
ja
stos
add
mov
in
jo
sub
insb
hlt
pop
aaa
push
jge
sbb
filds
cmc
mov
mov
popa
mov
ss
gs
test
or
jb
xchg
imul
adc
loope
popa
cmpsb
sahf
ja
lds
inc
scas
adc
push
in
int3
and
aad
push
out
mov
lds
pop
mov
repz
into
aam
test
push
test
ds
add
test
pop
or
and
mov
and
enter
jae
jo
xchg
sbb
inc
int
jae
dec
movsl
push
lcall
mov
stos
mov
sbb
mov
mov
jecxz
push
lds
jae
jmp
lcall
push
dec
sub
add
stc
mov
orb
sub
sbb
inc
inc
test
rdmsr
das
adc
mul
in
and
cwtl
fwait
sbbl
sub
mov
push
insb
sub
cwtl
add
stos
pushf
test
outsl
iret
mov
decl
mov
cmp
addr16
dec
push
mov
mov
hlt
jns
cmpb
sub
pop
push
hlt
mov
das
stos
cmp
sahf
cmp
pop
sbb
pop
aaa
cld
mov
inc
jmp
inc
bound
mov
aad
jl
cmpsb
jo
cmpsb
mov
push
push
stos
xor
jae
jno
adc
dec
pop
out
mov
xchg
rorl
fdivrs
fistps
push
jl
mov
sub
repnz
cmpsl
mov
jns
add
stos
push
gs
jnp
imulb
in
sbb
cmp
sbb
in
das
lcall
stc
repnz
mov
add
mov
popa
dec
inc
nop
dec
shlb
add
das
push
cwtl
jge
shl
dec
adc
xchg
xchg
mov
pop
in
push
pop
xchg
cmp
jp
das
and
or
jo
mov
xchg
cmpsb
cmc
adcb
filds
int
push
fdivl
int
or
mov
mov
pop
mov
jo
push
lcall
mov
fisubl
add
fwait
pop
subb
push
xchg
jno
fistpl
fwait
test
test
repnz
inc
aas
cli
mov
and
lods
inc
pop
push
out
jb
in
adc
insl
and
rolb
add
xor
clc
in
ror
int3
jg
addb
pop
stos
leave
mov
andl
dec
movsl
insl
mov
lret
mov
in
lret
adc
mov
cmp
mov
add
pushf
shl
nop
sbb
addr16
mov
pop
push
pop
adc
push
shrl
jp
repz
or
and
test
cwtl
pushf
inc
aam
push
push
insb
jae
cmp
mov
aaa
and
mov
jl
cmpsb
xchg
xor
adc
sbb
sub
idivl
test
push
scas
jmp
sbb
push
fistl
xchg
or
shrl
pop
mov
jl
jbe
ljmp
js
pop
mov
imul
enter
add
jmp
jge
add
hlt
mov
test
inc
outsb
das
jl
sbb
adc
punpckhwd
push
lods
divb
jl
dec
jo
lods
rcll
iret
cli
insb
das
sbb
aaa
add
or
mov
sub
popa
pop
xorb
ret
inc
and
mov
aad
mov
aaa
pop
adc
in
fnstcw
flds
call
ret
je
add
addr16
inc
test
call
cmp
aam
ret
adc
popf
jo
push
leave
out
je
mov
scas
and
adc
fucomi
mov
data16
mov
mov
pop
cmc
divl
ss
mov
in
loope
lock
sbb
int
jl
lds
aad
out
imul
inc
xor
sbb
int
inc
jp
sbb
xchg
and
jmp
cli
pushw
cmpb
outsl
push
push
xchg
jnp
pop
adc
enter
push
jl
add
sbb
testl
addr16
jl
js
jbe
mov
adc
lret
dec
jge
push
jo
aaa
in
xchg
in
cmp
push
addps
cmp
mov
inc
imul
fisubl
xor
ret
sub
in
scas
data16
sub
cmpsw
mov
jp
mov
sahf
inc
insl
and
mov
mov
xor
ss
rorb
mov
aam
mov
je
jnp
dec
sub
movsb
sub
pop
rorb
call
lret
inc
ficoml
push
pop
mov
repnz
sar
dec
push
xor
push
add
xchg
dec
ja
stc
xchg
scas
push
stc
cmc
cmp
pop
popf
arpl
hlt
iret
sarl
or
push
sbb
xor
fsub
xor
scas
lret
ds
fcmovne
pop
fisubrs
iret
dec
or
lds
jo
and
ss
xchg
cmpsb
mov
popa
cmpsb
mov
dec
jecxz
sbb
cmp
es
pusha
vcomiss
or
lods
mov
inc
jae
mov
ret
inc
lret
adc
shll
add
cs
mov
or
adc
jo
xor
outsb
xor
out
push
lock
lock
loopne
and
movsl
adc
jmp
pop
cmp
pusha
xlat
pop
or
fwait
scas
xor
adc
pop
repnz
add
imul
ror
outsl
loope
prefetch
in
jo
add
add
ja
call
push
iret
add
pop
sbb
stos
cltd
test
fcmovb
shl
jmp
or
cmpsl
mov
pop
lea
fs
ss
pop
jmp
pop
mov
mov
stos
fldcw
xlat
push
mov
aas
btc
sbbl
xor
and
std
aam
mov
ret
frstor
out
lret
push
fwait
xor
add
test
cmpsl
xor
push
push
push
inc
outsl
fstl
jne
mov
dec
test
inc
jge
scas
cwtl
inc
xchg
add
cmpsb
dec
js
int
push
push
xor
adc
outsl
adc
sahf
pop
push
mov
jge
sub
lahf
sub
push
mov
adc
and
shrb
cmp
mov
test
jp
mov
ds
add
ja
loopne
inc
lock
ja
dec
in
loopne
aam
xchg
mov
int
mov
lock
pushf
mov
rcll
pop
inc
jge
fs
pop
sbb
and
lods
sbb
outsb
iret
dec
jmp
inc
out
test
fnsave
dec
push
ds
sbb
push
sub
jno
lcall
pop
lods
dec
jecxz
pusha
insb
imul
rorl
ja
jg
add
js
jnp
dec
mov
mov
stos
test
divl
pop
sbb
mov
mov
repnz
outsl
inc
je
xor
lahf
or
pop
sbb
hlt
shll
lcall
cld
sbb
call
hlt
adcl
lods
jo
gs
mov
cmp
pop
addr16
movsb
out
pop
lahf
filds
bound
xlat
iret
mov
sbb
and
dec
fimull
aam
test
adc
push
aam
bnd
cmp
and
inc
rorl
and
jp
rcrl
aaa
fdivrp
cltd
inc
jne
dec
cwtl
dec
repnz
ja
les
int
dec
xchg
add
ror
inc
inc
jbe
sahf
js
adc
aaa
inc
ja
cmc
daa
insb
test
push
fisttpl
push
or
mov
jo
rolb
xchg
push
dec
in
sub
and
adc
test
je
divl
or
jecxz
orb
mov
or
repz
pushl
adc
stc
cmpsb
call
mov
jns
mov
adc
lea
sub
mov
xchg
mov
repz
mov
pop
push
test
push
cld
ljmp
lods
mov
mov
cltd
andb
andb
or
pop
ss
je
xor
mov
xchg
popf
sbb
mov
clc
pop
pop
cwtl
movsb
pop
inc
stc
push
xor
outsb
pop
mov
cmpsb
or
lods
mov
addl
adc
dec
loop
dec
ret
inc
nop
xchg
adc
cli
rcrb
dec
add
out
js
jp
dec
mov
or
mov
push
scas
dec
xor
repz
aas
lret
data16
sarl
loop
sbb
xchg
mulb
dec
sbb
jmp
adc
xchg
add
ret
mov
mov
mov
out
jl
push
adc
mov
xchg
cld
shl
mov
call
test
sbb
pop
cmpsl
shrl
jmp
movsl
mov
ljmp
jae
insl
or
bound
ret
test
insb
or
int3
dec
dec
les
int
out
lahf
and
mov
cmp
and
mov
cmpsl
pop
xchg
dec
lea
mov
dec
cs
int3
mov
jns
mov
cmp
lock
outsl
pop
cmp
sahf
inc
scas
inc
adcb
sarb
call
cltd
dec
stos
pusha
call
clc
scas
aas
cmp
xchg
and
loop
sbb
jne
imul
sbb
sbb
cmpsb
test
pop
xchg
loop
push
pop
addb
adc
test
pop
sub
jl
xor
in
loopne
sahf
imul
jnp
dec
das
lret
in
xchg
lahf
xchg
iret
shlb
das
int
xchg
dec
dec
pop
push
dec
sub
mulb
mov
dec
xor
int
in
fstpt
je
sarb
out
ret
sti
sti
and
push
push
pop
and
cld
xchg
xchg
aam
inc
push
scas
stc
aad
push
in
mov
repnz
in
cs
fcmovnbe
outsb
sub
ficoml
adc
cmc
insl
or
pop
fnsetpm(287
xlat
leave
cmovbe
adc
inc
pop
ljmp
insb
xor
sti
and
das
sahf
mov
cmpsl
pusha
sti
inc
push
and
xor
imul
stos
negb
pop
sbb
cmp
jns
sbb
push
loope
loopne
xor
adcl
notb
add
xor
sarb
ds
mov
shrl
popf
nop
fldt
push
inc
pop
lret
sbb
push
aad
xor
in
inc
pushf
mov
out
out
lods
sub
add
rolb
out
test
sarl
pop
cmp
imul
push
push
push
push
mov
xlat
and
js
add
or
jge
pop
pusha
es
lcall
js
jp
sahf
lods
out
arpl
outsl
inc
jge
add
rcrl
filds
popf
jo
or
gs
and
jmpw
adc
movsl
addr16
mov
push
and
lcall
inc
inc
jle
ss
lds
inc
xchg
test
dec
sub
cltd
mov
xor
jo
mov
jo
lds
jne
inc
add
jbe
sbb
or
mov
xchg
inc
insl
or
dec
pop
pushf
dec
push
into
inc
add
add
int3
sbb
mov
fdivr
mov
jns
and
fcmovnb
loopne
mov
jp
mov
dec
jae
or
outsb
clc
fsincos
into
cs
mov
aaa
push
mov
sbb
xchg
push
fadd
pop
fwait
inc
es
add
ja
aas
xchg
pop
dec
jmp
or
jge
adc
pop
scas
shr
cmpsl
push
push
int
repz
in
sbb
fildll
or
and
rcrl
push
loop
das
adc
xor
xchg
or
dec
inc
hlt
xchg
lea
inc
decl
sub
out
fcompl
push
nop
or
push
andl
adc
cmp
sub
and
aam
adc
int
jbe
out
test
xchg
xor
adc
std
lret
pop
lea
add
jg
push
pop
jg
jmp
shll
daa
xor
or
icebp
das
sub
daa
add
add
or
mov
dec
jno
add
xorl
les
add
insb
or
dec
sbb
push
mov
test
sbb
lahf
subb
mov
loopne
cld
insb
mov
nop
repz
sub
imul
push
and
or
das
jbe
insw
aam
adc
jg
mov
leave
cli
inc
mov
inc
pushf
cmpsb
ljmp
pop
es
mov
lret
aas
push
pop
lret
call
cld
aaa
mov
add
xchg
ficomps
jmp
aaa
sub
movsl
leave
cs
jp
xchg
es
incb
or
insb
movsb
mov
test
jo
lods
mov
cwtl
mov
or
pop
ror
mov
xchg
insb
loopne
subb
mov
xchg
into
repz
unpckhps
xchg
ja
in
dec
xor
cmp
add
mov
cmp
jae
push
enter
stos
mov
sub
inc
inc
out
sbb
in
jae
jmp
add
enter
mov
or
ds
dec
jl
push
inc
mov
mov
mov
sbb
repnz
sbb
xchg
or
and
sub
pop
fwait
add
push
daa
scas
mul
sbb
and
das
stos
lods
arpl
sub
sbb
sbb
int
ss
adc
or
cwtl
dec
xchg
mov
push
int
test
dec
jb
sub
ss
pshufw
addb
lods
mov
out
shlb
jae
inc
jg
lea
inc
xchg
shr
jno
outsl
jle
fsubs
cmpb
push
push
mov
out
repnz
or
inc
xchg
dec
inc
std
enter
jg
leave
lret
shll
cmp
fnsave
mov
leave
pushf
loopne
aaa
pop
pushf
xor
and
rclb
jae
ret
popf
cwtl
sahf
mov
inc
xor
pop
push
push
fnstenv
add
xor
push
add
cli
shll
adc
icebp
mov
insl
flds
xchg
inc
stc
in
cmp
pop
jmp
sbb
lret
jae
xlat
lea
jl
push
mov
or
sbb
cmp
gs
adc
lods
pop
push
mov
xor
loopne
cmp
je
adc
jl
fs
cmp
add
les
add
mov
stos
and
add
push
in
jl
iret
xor
jns
ret
mov
aaa
inc
cmp
fs
scas
dec
pop
movl
inc
cmp
es
pop
sbb
xor
mov
inc
frstor
xchg
arpl
pop
inc
addr16
push
inc
cmpsb
cmc
or
shlb
sbb
add
insb
push
je
fidivrl
int
push
ret
bound
and
mov
add
sahf
sbb
mov
push
out
nop
push
mov
xchg
gs
lds
outsl
jmp
push
int3
loopne
testb
xchg
es
cmpl
push
pop
in
out
xchg
and
push
xchg
repnz
mov
rcr
sbb
cmp
bound
mov
sbb
lahf
int
jg
fistl
mov
mov
fldl2e
lret
jb
sub
sti
mov
lock
inc
dec
mov
and
cmp
icebp
xchg
lcall
shrb
sub
xor
xlat
xchg
add
xchg
stc
insb
push
sub
cmp
mov
lock
mov
inc
aam
dec
or
push
fldcw
loopne
scas
fwait
shlb
mul
push
int3
fwait
pop
sbb
fisttps
mov
mov
out
subb
xor
xchg
in
mov
cmp
jb
mov
lcall
mov
xchg
mov
push
sti
addr16
out
out
ret
sub
mov
adc
pusha
adc
les
int3
xchg
dec
shl
fidivl
jmp
in
inc
add
test
inc
movsl
mov
popa
popf
mov
mov
push
loop
mov
xor
mov
add
mov
xor
cmc
fwait
insl
jbe
mov
pop
sbb
das
and
inc
ret
leave
dec
loop
xor
and
daa
adc
mov
mov
or
adc
dec
jmp
mov
or
mov
fidivrl
inc
push
jp
mov
std
cmpsl
cmp
jae
sbb
les
loop
sub
xchg
lds
lahf
pop
iret
and
pop
repnz
cld
jno
aam
cmp
lea
dec
daa
hlt
fcompl
lret
pop
jg
cmp
roll
add
mov
aas
je
mov
xor
xchg
arpl
xlat
inc
xchg
and
mulb
pop
sahf
sbb
cmp
xor
xchg
lock
stc
add
sbb
hlt
imul
pop
jge
dec
or
imul
or
mov
mov
pushf
inc
out
lods
sub
xchg
push
push
and
in
push
xchg
je
mov
cmp
and
test
dec
dec
cmp
lahf
mov
out
fstl
sahf
popf
outsl
call
out
pop
xor
shr
mov
push
xorl
rcrl
rcrb
out
test
gs
in
mov
cmovae
dec
push
push
dec
jle
and
mov
adc
xchg
xor
nop
mov
pop
mov
adc
inc
test
cmp
xchg
fnstsw
int3
lahf
mov
mov
mov
aad
ljmp
cmc
or
dec
and
mov
test
and
test
scas
out
scas
inc
inc
mov
jp
sub
popa
nop
sbb
and
inc
test
insb
and
shll
mov
movsb
jbe
add
push
ffree
mull
pusha
add
fisttpl
sar
popa
mov
sbb
pop
aaa
xchg
aas
and
imul
fisttpll
adc
into
dec
popa
pop
and
jbe
and
cmp
repz
or
clc
mov
sbb
iret
mov
dec
mov
shlb
dec
popf
dec
dec
sub
xchg
rcll
aas
inc
adc
xchg
push
lods
out
fsubs
mov
xchg
cmp
cmp
popf
dec
and
and
sbb
cld
push
or
icebp
addr16
fidivrs
ret
stc
or
fs
jns
inc
imul
sbb
inc
sub
add
sub
and
dec
inc
mov
push
sub
arpl
aad
jno
gs
pusha
or
pop
mov
cmp
dec
movsb
inc
sbb
mov
adc
jnp
cld
pop
jge
push
je
mov
in
and
xor
pop
push
imul
xchg
jb
pop
ss
repnz
dec
sbbb
xchg
icebp
clc
push
mov
dec
jae
push
lods
inc
arpl
mov
push
jne
add
movsb
aaa
push
fstpl
incl
std
push
aam
movsl
ds
cmp
push
xor
aam
pushf
mov
gs
adc
test
add
scas
dec
in
cmp
mov
dec
test
sub
mov
inc
inc
mov
rcr
in
in
adc
test
fcmovnu
insb
sub
mov
cmp
jbe
push
pop
rcll
hlt
add
jne
adc
addr16
jb
add
xchg
mov
sub
addl
in
dec
xchg
stc
les
pusha
xor
mov
adc
jne
movsb
test
int
xchg
lea
push
jecxz
and
jbe
lea
imul
jne
mov
pop
addr16
sbb
aas
mov
sbb
sub
std
mov
fdiv
add
mov
cli
mov
cmpsb
popf
in
mov
lret
mov
add
pop
in
mov
call
jbe
push
mov
mov
out
add
mov
sarb
mov
sti
sbbl
mov
mov
insl
shll
pop
inc
bnd
fmuls
xchg
int3
mov
mov
jge
and
in
test
cmpsl
sub
sbb
cwtl
sub
rorb
js
test
test
adc
lods
aas
mov
mov
pop
stos
push
jbe
xchg
xchg
popf
ret
pop
cmp
outsb
aaa
mov
mov
mov
cmp
dec
adcb
xorb
stos
jmp
adc
test
dec
pop
idiv
jbe
mov
cmpsb
xchg
sub
pop
div
jmp
jle
cmp
pop
sahf
mul
pop
in
mov
aaa
clc
sar
imul
jno
jle
mov
or
out
shll
push
imul
pop
and
rclb
lds
sbb
in
xchg
cmp
dec
push
sarl
push
push
dec
inc
out
lcall
sbb
mov
rcl
cmp
xlat
mov
jb
out
mov
add
arpl
adc
inc
push
sub
out
popa
mov
es
and
and
and
cmovns
test
mov
lret
push
test
andl
pusha
imul
jmp
push
mov
fadd
outsl
jne
cmpsb
xchg
mov
cmc
mov
repnz
add
and
jecxz
pop
sbb
push
xor
in
jmp
or
or
xor
mov
pop
int
sarb
lds
or
shll
cmpsl
adc
jl
xor
or
int3
ret
or
sub
popf
cli
roll
xor
pop
shlb
fdivp
adc
movsb
sub
jge
mov
inc
mov
mov
test
sub
mov
pop
cltd
jmp
divl
adc
movsl
aad
xchg
mov
insl
mov
dec
mov
jle
xor
test
mov
sub
faddl
adc
add
btr
pop
movsl
xor
pop
pusha
push
mov
jbe
loopne
jae
jp
stos
lea
lahf
movsl
push
push
mov
pop
imul
pushf
adc
test
subl
xor
pop
negl
iret
xor
mov
or
jo
push
outsb
cmpsb
ror
lds
lahf
jno
test
pop
cmc
sub
sub
xor
js
xor
mov
adc
outsl
gs
adc
out
inc
adc
out
push
shrb
cmp
jo
inc
arpl
mov
fldcw
shr
jns
mov
lods
and
enter
cmpb
aaa
shl
decb
jge
fadds
pushf
testb
lock
loope
inc
iret
cmp
cmp
int
lret
je
jb
mov
mov
lret
cmpsl
jns
mov
clc
inc
stos
dec
or
and
push
sahf
movsl
dec
dec
lret
sahf
daa
jg
pop
adc
je
pop
das
jge
pop
icebp
and
xchg
clc
inc
mov
mov
sarl
cmpsl
pop
mov
ret
xchg
xchg
xorb
int3
nop
pop
roll
cmp
cmp
jle
pop
add
xor
jge
ljmp
stos
scas
aam
mov
jo
or
and
jl
mov
lods
sbb
les
fnstsw
imul
cmp
push
jge
sbb
add
addr16
icebp
or
push
test
out
jbe
movb
pop
push
lret
push
cs
cmc
cwtl
jnp
or
aad
pop
sarl
mov
inc
push
and
cwtl
inc
popa
adc
clc
popa
xchg
cmp
push
sbb
push
jmp
sbb
adc
dec
lret
push
arpl
xor
loope
sbb
sub
pop
daa
mov
push
add
scas
pop
test
xor
imul
sbb
pop
int
in
mov
mov
fnstsw
xchg
adc
fsubrl
repz
in
mov
and
jo
sbb
push
mov
pop
jb
rcrb
jg
sbb
push
dec
insb
fcompl
out
cmpl
clc
xor
adc
lods
iret
mov
sub
sahf
xchg
inc
fmull
pop
lret
cmpsb
lcall
pop
xchg
sub
xor
jnp
ret
jne
pop
jle
dec
adc
and
lock
clc
imul
int
cmp
iret
jne
insl
lret
xchg
shrl
add
dec
jp
mov
mov
mov
adc
lea
lods
cmpsl
adc
push
cli
pushf
mov
and
in
fnstsw
mov
push
stc
clc
pop
push
pop
out
sbb
frstor
pop
inc
stos
push
ret
cmp
ret
mov
add
cmpsb
push
icebp
in
jl
aas
stc
in
js
mov
fsts
push
aaa
cmpsl
int3
test
sahf
and
jmp
pop
fsubl
mov
push
repz
cmp
push
in
in
ss
or
test
ja
and
sbbl
mov
cwtl
sub
inc
shlb
mov
adc
jmp
inc
test
adc
out
xor
jnp
jns
push
pop
insb
xor
jno
add
mov
add
cmp
sahf
mov
or
dec
in
mov
bts
dec
rcl
xor
mov
mov
push
xor
sbb
fs
adc
std
fwait
add
lret
and
or
dec
fs
cltd
mov
sub
ds
rcrl
fsubrl
and
xchg
mov
mov
lock
es
fnstenv
or
loopne
in
and
in
xor
aad
std
jecxz
cmp
xor
push
aas
aas
sub
push
sbbb
or
ret
lods
pop
mov
mov
pushf
jb
lods
shl
or
and
dec
ljmp
movb
mov
sbb
sub
rcrl
inc
stos
sub
sbb
fadd
dec
jle
push
push
push
jle
push
std
into
outsl
push
leave
push
dec
jp
aaa
enter
ds
sarl
movsl
or
pop
fsubr
insl
pop
pop
xchg
cld
arpl
and
in
and
cmc
repz
push
push
lahf
bound
clc
inc
jae
xchg
jnp
pop
jge
inc
outsb
dec
push
fmuls
jmp
mov
jmp
xlat
or
push
cmp
xchg
stos
loopne
cmp
adc
ret
and
mov
inc
test
dec
xchg
push
push
in
movsb
sub
repnz
sbb
test
xor
jnp,pn
push
loop
inc
lds
mov
shr
xor
es
adcb
cmp
aas
push
cmp
cmp
int
ret
les
sbb
popa
add
loopne
dec
mov
mov
add
mov
das
sbb
xchg
stos
cli
dec
pop
xchg
pushl
aam
int3
mov
imul
push
xchg
push
arpl
hlt
iret
dec
ss
out
adc
pop
lea
sbb
mov
daa
aas
push
inc
cld
loop
xchg
xor
subl
popa
xlat
lods
jae
rcr
scas
xorb
testl
inc
std
jmp
imul
inc
pop
mov
dec
and
ss
jecxz
push
hlt
and
dec
xchg
adc
pop
ljmp
in
sbbl
inc
lret
pushf
cmpsl
inc
mov
xchg
test
fcomps
cmp
cs
cli
jns
pop
bound
mov
jo
test
lods
std
xlat
popf
test
sbb
pop
inc
dec
inc
aaa
mov
loop
cmp
dec
dec
fwait
and
daa
inc
mov
cmp
insl
cmpsl
das
mov
mov
xchg
jge
movsb
fistpll
fbld
in
mov
ss
fwait
shll
cmp
fwait
pop
pop
sarb
push
inc
fs
adc
add
aas
sbb
sub
cmp
repnz
hlt
pop
shlb
or
jecxz
or
loop
cmpb
insb
or
mov
sbb
sbb
out
loop
sub
cmp
mov
xchg
in
addl
test
dec
mov
push
mov
add
adc
divb
pop
js
mov
pop
aaa
push
out
in
mov
lods
scas
and
cmp
lret
xchg
mov
mov
mov
cmc
std
in
lret
cld
and
mov
and
insl
je
orb
jbe
xchg
es
daa
out
in
xchg
xchg
push
dec
sub
sti
inc
rcrb
sahf
jp
es
sti
jb
dec
xchg
adc
iret
or
rorl
lret
mov
adc
divl
xchg
fidivrs
dec
inc
test
fsts
mov
mov
and
in
xchg
imul
dec
mov
push
pop
aad
mov
mov
cs
pusha
mov
cmpsl
adc
push
jnp
dec
ficoml
scas
xor
addb
loope
insb
cli
std
mov
cmp
enter
or
push
pushf
or
push
imul
loope
loope
or
adc
jb
test
aam
adc
jbe
jb
scas
outsl
fsubr
hlt
shrb
aam
setle
je
xor
ret
lods
pop
sbb
cmp
ret
js
sti
or
popf
pop
dec
mov
scas
int
mov
mov
or
pop
test
dec
sbb
daa
jecxz
sbb
ja
inc
sbb
aad
inc
es
bound
lea
xchg
inc
mov
dec
add
jl
pop
insl
cli
lds
jbe
push
adcb
sub
add
fcmovnb
imul
xchg
xor
cld
sub
push
adc
out
pop
adc
or
mov
ret
xchg
xchg
and
dec
js
in
pop
push
dec
jne
sub
aas
in
cltd
xor
mov
movsb
fcomp
loopne
sub
inc
addr16
ret
sub
aad
es
repnz
mov
ret
xor
sbb
sbb
outsl
mov
mov
ljmp
jge
pushf
mov
xlat
and
jg
adc
jmp
mov
push
pop
in
in
and
cwtl
adc
mov
xorl
and
aam
adc
jp
nop
insb
cmp
mov
mov
sbb
xchg
mov
push
jne
push
data16
push
rorb
and
xchg
inc
outsb
stos
mov
jno
test
adc
daa
and
shll
xchg
mov
xor
xor
mov
xchg
adc
push
ret
fsts
aad
xchg
mov
xor
enter
jg
daa
dec
jmp
nop
ret
adc
or
or
mov
sbb
sub
mov
lcall
lret
sbb
xor
sub
adc
jl
lods
or
pop
mov
fwait
inc
inc
jb
mov
daa
jg
or
popf
test
jle
stos
xchg
ret
pop
push
mov
lods
mov
inc
mov
pop
dec
mov
cli
and
inc
mov
jnp
xchg
int3
cmp
aaa
adc
sub
dec
in
arpl
mov
dec
lods
inc
xor
out
inc
cmc
shlb
fisttps
xchg
pushl
inc
dec
push
clc
es
push
out
arpl
and
fsqrt
jecxz
cmp
jno
add
fstpt
mov
or
cmc
pusha
cmp
jecxz
pop
push
sbb
sbb
ficoml
insb
inc
cmc
je
test
adc
ret
aas
lods
fdiv
mul
popf
test
dec
iret
shlb
mov
fisttpl
lods
popf
dec
adc
jns
outsb
call
pop
lds
les
inc
ljmp
mov
incl
push
xor
sbb
gs
mov
xchg
hlt
dec
add
or
sub
cli
lret
add
inc
imull
mov
out
popa
push
imull
mov
xchg
mov
ja
fwait
cmp
pop
push
fcmovnu
inc
jecxz
mov
pop
pop
gs
inc
jle
imul
push
adc
cmp
push
int3
dec
lods
xchg
lcall
sahf
mov
add
jbe
daa
xor
andb
adc
outsl
mov
add
fistpl
jg
sub
imul
xlat
movsb
mov
push
and
pop
lcall
lds
idivb
dec
lds
push
or
dec
or
call
xchg
inc
add
ret
adc
jnp
gs
or
sti
pop
jmp
repz
popa
popa
bound
xor
jnp
sub
push
add
mov
adc
imul
or
dec
sbb
xor
imul
pop
dec
fistps
or
adc
xorb
call
cmp
mov
xchg
aas
sahf
inc
je
xchg
out
xor
rcrb
push
mov
adc
push
popa
sahf
mov
bound
mov
flds
push
inc
add
stos
les
nop
shrb
sbb
mov
sub
js
ret
and
or
push
pusha
push
aam
mov
enter
cmpsl
jnp
scas
push
push
es
leave
adc
adc
arpl
xor
daa
xchg
mov
jg
das
cltd
testl
rcll
outsb
popa
push
jg
into
hlt
cmp
pop
xchg
ja
pop
in
sub
out
nop
dec
dec
js
jg
and
cmp
jne
push
cmc
dec
mov
xor
cltd
push
jns
fcomip
addr16
push
cmp
int
mov
push
mov
push
mov
dec
pop
or
data16
in
iret
lcall
ljmp
xor
sti
gs
add
popf
dec
dec
dec
fisubrs
pmuludq
pop
pop
rcrb
jmp
fidivrs
fisttpll
jne
aas
jb
mov
or
insl
add
clc
push
and
xor
fwait
test
or
pop
mov
cmp
sahf
cmp
dec
cmp
pop
sub
mov
cmpsb
mov
mov
fildl
icebp
adc
or
xor
xor
pusha
pop
pop
mov
pop
jp
mov
mov
imul
outsl
push
xlat
aas
xchg
jg
mov
pop
pushf
in
push
and
jmp
inc
incl
xchg
hlt
repnz
sub
mov
push
adc
pop
mov
std
clc
lahf
mov
mov
mov
insl
mov
or
mov
rorl
daa
inc
gs
shrb
or
mov
dec
fldt
shr
dec
ja
dec
addr16
hlt
or
popa
ja
push
out
gs
mov
stos
fisttpll
pusha
cmp
pop
mov
mov
inc
arpl
loope
or
push
pusha
test
push
xor
out
mov
sub
sub
fsubr
mov
add
dec
jl
in
xor
pop
negb
cltd
in
fiaddl
xchg
sbb
rol
bound
mov
sub
or
sub
push
push
pop
test
iret
push
add
test
leave
mov
inc
imull
dec
fsubrs
cwtl
push
inc
movsb
jmp
fwait
xor
fdivrs
in
jg
mov
add
push
int3
and
rcrb
call
rorl
lahf
mov
mov
in
sahf
pop
mov
cmp
adc
popf
into
sarb
jle
push
lods
icebp
out
inc
ss
lcall
add
mov
xchg
jb
push
mov
incl
sarb
adc
or
mov
pop
daa
pop
xor
cld
in
clc
and
lods
mov
pop
lods
std
mov
sbb
imul
jo
mov
mov
push
movlps
fwait
jle
data16
mov
add
push
pop
mov
lahf
out
push
jp
es
pop
add
daa
jl
and
fdivs
repz
sbb
sbb
adc
fimuls
push
adc
cmpb
xor
mov
adc
rcr
xchg
xorl
orl
pop
movsb
sub
mov
ljmp
scas
popf
es
repnz
sahf
fs
and
cmp
mov
or
lcall
fcomps
mov
jno
mov
adcb
pop
test
jbe
stos
fnstenv
jo
jge
test
mov
jl
and
cmpb
mov
xor
dec
loop
cmpl
call
pop
push
movsl
sub
adc
jecxz
mov
inc
mov
and
push
jp
addl
cld
cmp
mov
repz
pop
loope
hlt
dec
jp
dec
push
lea
cmp
and
jno
stos
lds
xchg
sub
xor
aam
push
outsb
inc
mov
jp
or
lock
pop
filds
dec
daa
sub
push
cmp
jnp
cmp
std
imul
andl
jbe
push
add
outsb
mov
mov
sahf
lea
xor
jb
adc
adc
subl
repnz
dec
mov
push
scas
sub
mov
fs
dec
andb
fwait
call
popf
mov
or
rol
mov
pop
aas
inc
cmp
lret
adc
cmp
mov
cmpsb
inc
sbb
out
pop
jp
aas
out
inc
jmp
xor
xchg
jecxz
icebp
push
cmp
dec
jge
dec
mov
mov
xchg
incb
shll
icebp
jae
xchg
sbb
mov
dec
addl
inc
mov
nop
cld
fcoml
xchg
mov
es
out
mov
rorl
loope
cwtl
stc
jnp
lahf
jbe
leave
test
sub
call
ja
push
stos
clc
cltd
jecxz
dec
or
decl
push
sub
arpl
mov
pop
sbb
bswap
pop
leave
jmp
fsts
sbbl
cld
testl
mov
int3
dec
sub
mov
sbb
sahf
mov
loope
mov
xor
test
xor
loop
imull
bnd
mov
lcall
lahf
push
and
mov
mov
fstp
sbb
jbe
cmc
jnp
enter
and
gs
pop
sbb
call
xchg
lods
inc
inc
pop
pusha
jg
xor
je
pop
xchg
jbe
cld
sbb
xchg
dec
and
popa
out
in
cld
pop
adc
push
cmp
dec
aas
add
adc
jle
inc
int3
mov
ret
mov
pop
push
and
fstl
add
cld
ds
xor
loop
pop
in
cs
hlt
das
or
xchg
sbb
push
and
dec
lods
cld
into
je
lret
int3
push
cwtl
jp
lods
shl
push
pop
outsb
sahf
aaa
andl
push
cmp
cmp
push
or
push
or
in
lahf
shr
out
movsl
or
xorb
jecxz
out
xchg
lods
shl
sub
add
cwtl
mov
fistl
loopne
xor
or
cmp
aaa
lahf
mov
or
jne
inc
jge
loopne
xlat
out
mov
dec
mov
cmp
mov
add
shl
rorl
add
std
mov
imul
out
adc
cmp
test
mov
mov
cmpl
pop
cmc
popf
mov
nop
fwait
std
repz
lods
cmp
jb
mov
mov
push
inc
repnz
int
aad
xchg
sti
je
dec
sub
ret
or
jge
ret
out
jno
xor
jbe
add
imul
mov
push
iret
xchg
aam
cmp
jo
rolb
pop
das
mov
fsub
sahf
mov
pop
cmc
add
inc
imul
jge
mov
in
ja
in
div
jle
mov
pop
fadds
aaa
pop
mov
insb
xchg
iret
jb
inc
das
jno
mov
add
or
cmp
fs
push
mov
into
subl
jno
xor
pop
lret
js
mov
imul
adc
fimull
mov
pop
outsl
movsb
dec
outsl
inc
aas
rolb
adc
jmp
push
push
xchg
sub
push
xchg
lret
cmp
add
mov
lahf
imul
mov
cmp
data16
test
inc
loopne
hlt
add
lahf
out
inc
fidivrl
popa
and
popa
or
cmp
xor
mov
lcall
ljmp
jmp
or
xchg
ficoms
jle
xchg
xchg
icebp
jg
jmp
hlt
fmull
test
adc
shrb
jl
and
cwtl
xor
cs
negl
arpl
inc
frstor
cmpsb
lds
add
adc
xchg
je
xchg
jecxz
ja
mov
sub
mov
cmpl
jge
dec
xchg
cmpsb
addr16
outsb
dec
mov
cmpsb
xchg
mov
mov
push
xchg
nop
fwait
adc
stos
mov
enter
jecxz
mov
add
jl
lret
sar
aad
bound
rorb
cmp
mov
leave
and
jle
and
jge
pop
xchg
cs
and
adc
push
xor
adc
jmp
sub
mov
dec
mov
stos
add
jl
or
xchg
mov
icebp
mov
or
lods
je
out
dec
and
iret
jbe
enter
sbb
hlt
stc
or
mov
aam
pop
xor
pop
aas
out
and
mov
fdivrl
inc
mov
loope
cli
or
call
pop
cwtl
test
out
shll
push
inc
mov
inc
or
mov
std
enter
add
js
les
sahf
jo
popa
movsb
push
and
rorl
mov
mov
pop
adc
dec
fists
xchg
cld
shl
fcoms
mov
jmp
int
inc
jo
daa
movl
sbbb
pop
ds
cmpsb
div
mov
scas
and
inc
xor
cld
pop
cmpsl
xchg
sbb
imul
jge
pop
jnp
nop
loop
fwait
mov
push
idivb
push
cmp
out
pop
cmpsl
inc
push
push
fildl
nop
sbb
sub
insl
cltd
movsl
das
cmp
dec
mov
sub
cli
xchg
mov
gs
xchg
pop
int3
out
cmp
mov
sub
fcomp
lahf
push
je
mov
mov
mulb
fdivr
scas
sbb
lret
lcall
mov
push
pop
pop
sbb
aad
inc
in
std
ficompl
movsl
dec
lock
xchg
fidivrl
mov
push
inc
out
sbb
xor
call
movsl
and
xorb
scas
outsl
mov
mov
in
inc
loopne
and
lods
cwtl
dec
addr16
inc
cmc
dec
mov
sbb
test
fisttpll
test
xchg
vcvtpd2psy
push
or
cli
push
pop
stos
jge
cltd
cmp
test
dec
mulb
dec
push
dec
loopne
pop
outsl
inc
movsl
insl
enter
lea
jo
test
sti
sbb
sub
ret
sbb
mov
jmp
or
imul
xchg
and
insl
mov
sbbb
ret
jmp
in
scas
xor
dec
xor
push
lret
jl
xrelease
ret
inc
push
pop
jl
mov
adc
outsl
push
cwtl
nopl
jns
fscale
loop
add
jnp
cli
inc
or
xor
xor
or
icebp
aad
sub
or
lods
scas
fcmovnb
ss
in
jmp
fmul
inc
dec
stos
dec
jno
movsl
adc
mov
add
scas
fisubl
add
int3
dec
cmp
fcmovnbe
ret
test
in
clc
loope
push
pop
push
dec
push
mov
imul
mov
add
icebp
cli
enter
dec
jns
jle
sbbl
jno
xor
mov
xor
subb
jl
mov
insl
bswap
testl
xor
xchg
mov
roll
jp
pusha
xor
leave
jle
xor
sbb
xchg
push
loop
cvttps2pi
insb
mov
or
jno
dec
inc
fadds
jle
and
adc
mov
dec
cltd
mov
mov
lock
mov
stos
das
xor
xchg
loopne
lods
pop
xor
pop
or
push
mov
push
mov
mov
hlt
or
out
insb
pop
dec
push
scas
aaa
jge
mov
movsb
push
rcll
mov
add
or
pop
rorl
daa
sbb
push
pop
jmp
xor
jl
in
repnz
sub
push
add
mov
ret
addr16
lods
outsl
jno
nop
bound
mov
push
pop
mov
sub
out
push
mov
imul
aad
jo
shrl
nop
adc
inc
or
xchg
test
mov
ja
popf
adc
cmc
and
mov
cvtps2pd
xor
arpl
sub
dec
loope
fstpt
iret
int3
cmp
sbb
popf
out
push
dec
adc
test
lds
cld
push
sbb
xorb
lahf
and
imul
stos
ret
mov
outsb
insl
lods
mov
mov
das
imul
fldcw
stos
mov
sarb
pop
cmp
cmpsb
push
sbb
sti
mov
andl
mov
testl
xor
das
cltd
xchg
inc
jo
lsl
push
xchg
imul
mov
pop
leave
xor
iret
repz
iret
lock
bound
and
pop
je
arpl
in
daa
push
xchg
jl
lea
jnp
cli
insl
push
xor
inc
repz
cmp
bound
shrb
mov
mov
dec
data16
imul
xor
push
mov
std
xchg
mov
pop
repz
jno
push
cmp
or
adc
aas
clc
dec
fwait
das
inc
ja
mov
gs
in
and
sub
aas
adc
xor
inc
pop
mov
sub
das
mov
aam
fstps
mov
push
in
inc
imul
aas
repz
outsl
daa
jo
mov
jp
and
cmp
insl
sub
test
test
pop
iret
in
imul
cwtl
fmul
push
mov
mov
loope
lret
ja
jbe
pop
pop
cs
fmuls
scas
inc
fisttpll
push
dec
jno
imul
outsl
add
cmp
aam
dec
lahf
jb
outsl
fstp
in
addr16
repz
mov
mov
cld
dec
ror
mov
mov
mov
mov
xchg
xor
and
xchg
bound
inc
dec
inc
cltd
mov
cmp
adc
xchg
pop
popa
jne
mov
sub
or
rorb
xorl
lahf
sub
mov
fcmovne
jp
sti
outsb
shll
sub
push
std
push
inc
add
loop
out
xor
cmpb
ficompl
out
inc
sar
cltd
lahf
lods
mov
imul
lea
sub
into
ss
jns
movsb
mov
sti
pop
movsl
mov
inc
cmp
mov
fisttpll
jb
nop
add
insb
movsl
pop
or
push
imul
lods
sbb
scas
daa
jmp
loop
fs
mov
mov
sub
popf
xchg
inc
push
inc
add
pop
arpl
nop
dec
jno
dec
jmp
int
pop
and
add
jnp
pop
je
jle
movsb
add
jb
test
out
sub
mov
mov
add
lret
adc
sub
mov
pop
adcb
sbb
push
sub
lret
xchg
loop
mov
adc
mov
dec
adc
and
std
inc
and
bound
and
mov
and
push
mov
adc
push
inc
sub
push
mov
test
imul
sub
adc
pushf
cmp
rclb
pop
xor
pop
int
xchg
clc
clc
pusha
fistpll
in
sub
sbb
test
xchg
push
push
add
or
test
fsubrl
jp
popf
rorb
repz
inc
xor
aas
cmp
leave
add
call
lret
pop
insb
mov
cmp
rcl
test
lock
xchg
xor
inc
cmpsl
or
das
and
jns
mov
js
daa
add
pop
rcll
xchg
sbb
and
inc
lods
pop
out
ljmp
xchg
mov
fistl
in
xorl
cmc
out
jno
dec
call
mov
lcall
mov
bound
sti
aam
cmp
mov
mov
jp
lret
test
dec
push
fmul
int3
mov
jae
lds
jae
sahf
divl
loope
pop
or
ljmp
sbb
imul
mov
call
jp
dec
insb
stos
subb
and
add
cmp
notb
push
and
stc
cld
inc
fdivr
or
imul
in
psraw
lods
pop
repnz
inc
and
ja
xchg
cmp
fldt
int
pop
fistpl
dec
fbld
ret
mov
xchg
cmc
pop
shl
add
in
lret
push
stos
mov
or
inc
jmp
mov
jno
test
jp
in
inc
jp
xchg
or
pusha
ret
jl
pop
mov
xor
xor
pop
imul
ds
cmp
fcomp
cmp
js
shll
add
stos
out
adc
pop
push
cmp
fcoms
jns
mov
dec
sub
lock
and
lods
mov
adc
push
add
pop
inc
push
and
xchg
lds
mov
jecxz
xchg
adc
mov
pop
cmpsb
and
add
mov
lods
adc
sbb
aam
shlb
iret
pop
sub
mov
into
dec
mov
sub
out
xchg
or
jo
jl
sbb
adc
inc
dec
push
xchg
jbe
or
push
pop
push
dec
arpl
push
xor
and
and
sbb
mov
imull
inc
sub
jecxz
cld
subb
scas
pop
imul
sbb
faddl
or
push
dec
xlat
dec
push
fxch
inc
and
shlb
mov
jo
inc
cmc
push
insl
imul
or
lcall
jle
pop
and
mov
stos
std
mov
push
jl
cmpsb
mov
loope
push
movsb
outsb
fsts
lret
cltd
hlt
int3
jns
mov
cmp
ret
push
ljmp
fidivs
inc
xchg
add
std
scas
shll
and
out
dec
fcomp
rol
xorl
stos
std
or
fwait
lahf
sti
pop
repnz
xlat
push
push
outsl
out
leave
add
dec
jno
add
mov
daa
jge
cmp
sti
sti
ss
xor
push
cmpb
dec
xchg
xchg
pop
fdivrl
xor
test
mov
test
pop
inc
out
out
and
out
ljmp
sarb
xchg
ret
sbb
into
stos
fcomps
pop
and
pusha
mul
movsb
xchg
mov
fiadds
adcl
int
loope
test
ret
or
shl
or
ret
and
add
inc
pusha
clc
inc
mov
xor
push
stos
mov
cmp
in
ljmp
mov
push
cmpsb
pop
je
push
mov
push
sbb
jge
push
and
push
sub
cmp
popf
jl
xor
loopne
fists
scas
xor
xor
sub
xchg
cmp
lret
or
sub
call
adc
sbb
or
mov
icebp
add
xchg
sbb
int3
addr16
lcall
repnz
lds
xchg
mov
ss
nop
aad
jnp
lret
or
pop
sub
jae
je
mov
fcompl
xchg
popf
cmp
xchg
call
and
jmp
xor
push
test
and
idivl
ss
iret
jmp
in
inc
sahf
faddl
movsb
push
rolb
sbb
jle
xchg
push
imul
jl
jl
xor
push
or
addr16
cmpsb
adc
pop
inc
xchg
xchg
or
aad
pop
cmp
cld
sub
es
adc
pop
test
inc
mov
mov
xchg
popa
adc
imul
divl
add
push
xorl
into
mov
dec
rorl
cmp
out
jbe
jecxz
xor
std
jns
icebp
into
pop
push
jg
outsb
test
mov
pop
data16
add
imul
aad
jo
xchg
clc
push
inc
jg
in
sbbb
mov
dec
mov
jp
mov
xor
bound
arpl
mov
fadd
ja
mov
mov
ret
push
adc
js
jle
inc
jl
xchg
push
into
adc
and
movsl
jmp
imul
inc
pushf
in
fsubrl
xchg
fwait
ret
loope
inc
jo
sbb
shll
xchg
loop
leave
or
rorl
cli
cltd
jg
mov
test
subb
or
add
imul
cwtl
adc
test
je
enter
idiv
cmpsl
movsb
sub
daa
fadds
cld
xchg
insl
cmpsl
lcall
inc
enter
inc
jae
nop
xchg
sbb
decb
mov
insl
outsb
pop
ficoml
js
lods
and
push
cmpsl
lahf
push
bnd
inc
jle
sub
pop
mov
into
insb
lahf
or
mov
ss
cmpsl
add
mov
data16
jbe
test
fcmove
mov
sbb
xchg
mov
dec
test
ljmp
movsl
sub
mov
fsubl
xchg
mov
mov
and
std
test
and
mov
scas
test
out
or
rclb
inc
out
repz
insb
add
mov
xor
test
sub
dec
or
fdivrl
sub
sti
mov
loopne
out
aam
pop
jl
stc
je
cmp
test
test
repnz
addr16
push
push
dec
xchg
lret
dec
add
lods
ds
daa
in
mov
and
fs
int3
movsl
and
pop
scas
ja
and
and
jne
ficoml
add
adcl
stos
lahf
cli
scas
sub
inc
roll
and
and
lcall
sub
inc
jb
add
sbb
mov
pop
std
mov
xlat
jns
cmpl
pop
movsl
in
cmpsb
out
mov
adc
repnz
adc
dec
lahf
push
push
clc
fincstp
lock
hlt
outsb
mov
aaa
pop
and
outsb
push
xchg
pop
pop
int3
or
cmp
ss
jp
or
icebp
lahf
add
les
popf
or
cmp
push
int
cmpsb
lret
add
cmp
and
call
rcl
dec
inc
dec
inc
mov
jne
add
inc
out
ror
fwait
mov
adcl
mov
ret
cmp
test
push
jp
push
push
inc
aaa
dec
push
push
jmp
loop
nop
jno
sbb
aas
fiaddl
out
lcall
sub
shll
pusha
xor
loopne
mov
sbb
mov
or
sub
xchg
push
gs
leave
push
push
mov
dec
cmc
jl
jnp
xlat
aad
popf
xchg
or
sbb
sub
shl
out
add
jns
clc
leave
testl
push
dec
sahf
or
inc
lcall
sub
out
and
in
pop
je
cmp
cmp
fsubs
shll
stos
mov
sbb
out
pop
ret
sub
and
cmp
sub
std
xlat
jmp
inc
sbb
jl
scas
mov
mov
jle
testb
jge
add
cmp
sub
fisttps
cmpsb
pop
pop
add
loope
mov
mov
xchg
or
ja
push
sahf
mov
fsubrs
imul
cmp
push
and
sti
adc
inc
xchg
cmp
mov
mov
dec
test
inc
or
int
ljmp
xchg
mov
sbb
and
aaa
push
add
jl
mov
fdivl
std
insb
adc
lods
ret
test
out
int
xchg
mov
and
inc
roll
add
fsubs
insl
inc
xor
ljmp
shrl
es
ja
fcomi
divb
sbb
arpl
xchg
mov
xchg
call
sub
fisttpl
fwait
cmp
into
pop
std
cmp
in
fwait
mov
adc
pop
loop
mov
mov
cmpsl
bnd
cmc
fldenv
stos
movsb
jb
cmp
ret
mov
enter
imul
int3
pusha
mov
jp
dec
xchg
fisttps
push
jge
adc
cmp
sti
sub
cmp
lds
sub
dec
sbb
jno
push
movsl
cmp
dec
lods
enter
xchg
cli
add
sub
add
mov
fs
lcall
push
cwtl
test
js
mov
jae
repnz
xor
stc
push
iret
movsb
mov
dec
or
sub
lock
or
out
adc
fisttps
lea
sbb
fwait
mov
add
pop
adc
inc
cmpsb
aad
movsb
jecxz
stc
sub
dec
xor
xchg
and
fwait
movsl
rcrl
adc
ljmp
jp
sarb
call
add
mov
adc
jne
aam
clc
hlt
dec
xor
add
pushf
add
and
adc
jp
test
hlt
push
rcll
jb
mov
jl
pushf
push
mov
cld
aad
jnp
inc
add
sbb
push
ret
pop
add
into
xlat
icebp
mov
or
pushf
ja
add
shrb
scas
pushf
lret
sbb
dec
leave
lock
adc
and
cmc
jecxz
lcall
setg
loopne
jmp
xor
add
pop
shlb
dec
js
add
lret
lods
lahf
enter
out
stc
sbb
cmp
pop
jmp
divl
mov
and
hlt
mov
jp
inc
dec
hlt
dec
cmc
lods
inc
in
and
cmp
push
push
rol
adc
mov
out
mov
out
out
lret
jnp
insb
in
inc
ret
pop
xchg
lods
insb
inc
push
iret
jmp
add
jb
dec
inc
in
les
push
mov
sbb
ss
test
lods
int3
sub
xor
subl
pop
sub
ljmp
testb
sahf
push
cmp
adc
or
adc
push
pop
es
sbb
mov
cmpb
mov
pop
mov
dec
xor
xor
add
stc
xlat
xchg
loope
pop
mov
xchg
cmpsl
xor
aam
loopne
in
pop
xchg
or
and
pop
dec
mov
jno
popf
int3
push
loopne
rcll
pop
jns
cli
icebp
out
pop
aam
fisttps
xlat
mov
push
sbb
xlat
lret
stos
or
xor
mov
pop
jae
ret
loopne
enter
aad
lock
cld
in
mov
aam
xchg
push
enter
add
nop
inc
lret
or
jne
stos
lcall
sarb
fldl
stos
mov
jmp
jp
or
mov
fnstsw
pushf
cmpsl
hlt
sbb
insb
xor
mov
inc
pushf
xor
jb
xor
ret
in
adc
adcl
lock
xor
cmovno
mov
adc
pop
enter
pop
sbb
sbb
mov
sbb
mov
add
sahf
sub
ljmp
pop
pop
shlb
ljmp
pop
das
aam
sbb
lods
push
cmp
push
clc
adcl
pop
repz
mov
inc
jo
and
jg
inc
xchg
jno
in
mov
bound
inc
mov
and
stos
rcll
cltd
out
add
ficoml
push
movsb
iret
dec
stos
rorl
int
aad
fdivrs
pop
mov
jae
and
pop
es
clc
push
mov
mov
sub
xchg
inc
test
dec
push
mov
js
cmp
ljmp
sub
cld
mov
xorl
mov
pop
push
leave
addl
push
test
jecxz
and
lock
fcmove
or
es
inc
mov
push
inc
or
iret
mov
fdivl
into
and
mov
lea
pop
dec
imul
pop
sub
jns
idivl
mov
cmpsl
and
call
pop
bts
push
and
xlat
jbe
mov
jnp
testb
ds
push
xchg
xchg
in
inc
mov
in
push
mov
ljmp
dec
cld
clc
push
dec
test
jae
cmpsb
push
jbe
imulb
lcall
fs
dec
test
mov
xchg
lahf
out
xchg
sbb
sti
mov
adc
test
lds
mulb
shl
mov
inc
mov
adc
cltd
sub
jg
iret
jle
xor
push
and
jecxz
jno
push
in
lock
push
xchg
lods
popf
lea
mov
sub
push
jmp
test
xchg
xabort
cmp
mov
inc
ret
push
aas
jno
jg
adc
cmp
in
xchg
loopne
sahf
repz
mov
fwait
sti
imul
mov
mov
scas
call
outsl
mov
aad
adc
movsb
fidivrl
mov
pop
inc
sarl
or
cmp
push
sub
shll
mov
fildll
add
out
mov
subb
jle
lcall
xchg
push
sbb
xor
xchg
push
or
pop
nop
or
pop
icebp
mov
jp
sub
sti
push
mov
dec
gs
pop
aam
cld
lea
mov
jg
jle
cli
sbb
out
ror
lock
out
push
pop
movsl
lods
sub
fstps
mov
push
and
jp
inc
aaa
jae
jecxz
add
dec
or
cmpsb
rol
or
jp
pop
xchg
xchg
inc
mov
mov
lds
scas
arpl
test
mov
je
stos
bndstx
cmpxchg
mov
imul
repz
cs
mov
dec
sbb
inc
inc
jg
xchg
or
adc
andb
xchg
lcall
add
mov
ljmp
add
push
xorb
mov
push
inc
stos
pop
gs
push
ret
add
out
cwtl
aaa
mov
pop
stos
and
xor
out
pop
stos
in
out
out
jmp
pop
lret
mov
sti
out
movsb
ljmp
fidivrl
sub
inc
call
loope
add
test
adc
adcl
icebp
cmc
push
xchg
push
shll
jmp
or
push
shlb
movsb
ljmp
movsb
addl
xchg
sbb
scas
mov
mov
popf
lea
addr16
lret
pusha
add
sub
les
mov
bound
bound
rcrb
xchg
les
imul
shr
divl
mov
inc
les
or
xchg
jo
lcall
ja
cmc
aam
mov
jp
pop
add
push
dec
scas
mov
scas
cmp
adc
rclb
cld
push
add
fists
jecxz
je
sub
mov
test
popa
andl
jl
imul
fisubrs
or
hlt
jb
lcall
ds
jg
outsb
mov
insb
inc
mov
lods
aam
pop
mov
dec
sbb
scas
pop
jae
bound
test
dec
and
or
nop
mov
mov
cmp
lods
xchg
xchg
sub
cmp
mov
xlat
lea
nop
mov
or
mov
icebp
sbb
and
sbb
test
and
loope
push
mov
stos
jle
or
fidivl
lahf
add
scas
daa
add
gs
cmp
cs
mov
sub
mov
cmp
in
mov
outsb
and
fidivrs
int3
repz
pusha
pop
into
cmpsb
and
xchg
push
adc
push
cmp
mov
xorl
cmp
clc
or
mov
jb
inc
xor
sbb
inc
mov
sar
sahf
dec
in
rolb
test
mov
xor
mov
cmpsb
lret
mov
icebp
stc
xor
loopne
ds
push
clc
pop
pop
adc
testb
xchg
rdpmc
dec
mov
pushf
adc
js
adc
lds
mov
negl
roll
sbb
shll
xor
testl
push
ret
jo
pushf
sub
call
mov
pop
pop
out
adc
adc
ja
xor
mov
cmp
popa
popa
adc
vpsubusw
jl
in
jl
mulb
mov
clc
imulb
outsl
jle
outsl
cmp
in
sbb
cmp
cmp
aam
add
je
icebp
jne
pop
inc
testl
xchg
cli
insl
call
push
fsub
add
cld
icebp
mov
mov
lret
movsl
clc
out
adc
cmp
das
xchg
mov
lret
sbb
rcl
insb
xchg
cmp
xor
push
fdivl
cmc
nop
sub
inc
and
cmpsl
sub
mov
insl
lock
test
in
out
add
inc
cmp
push
pop
pushf
les
imul
mov
xlat
add
xchg
push
bound
dec
out
cmp
data16
jb
and
add
adc
std
inc
sub
out
dec
add
ret
test
inc
mov
sbb
dec
push
out
ret
pop
mov
or
jne
mov
mov
in
js
data16
mov
jbe
mov
cli
mov
pop
hlt
xor
rcrl
in
fs
mov
adc
fwait
xchg
lods
cmp
inc
pop
out
loopne
lahf
or
frstor
jl
xchg
mov
loop
mov
sub
fwait
not
pop
mov
mov
push
stos
fidivl
iret
xor
mov
inc
mov
cmp
mov
outsl
jl
jle
pop
ljmp
negl
pop
or
out
arpl
scas
shrb
sub
js
push
les
fsts
push
roll
cmp
adc
rolb
addr16
mov
fcompl
js
jb
jl
cmpps
outsb
add
xor
in
movsl
iret
roll
mov
insl
and
xchg
std
data16
and
add
dec
inc
add
aam
lods
mov
gs
clc
inc
popa
xor
in
cmp
orl
pusha
loopne
stos
push
cltd
mov
xor
mov
push
push
js
xchg
arpl
fistpl
mov
push
xchg
dec
icebp
stc
flds
adc
cltd
add
or
xlat
divb
sti
cmp
mov
mov
inc
pop
inc
bound
push
out
test
push
dec
scas
sub
mov
push
push
fists
dec
clc
roll
scas
jae
add
aaa
xlat
mov
ret
stos
sbb
mov
push
adc
sahf
cmpsl
out
jno
sub
fisubl
arpl
jo
cmp
stos
insl
pop
mov
lds
test
adc
out
jne
sti
jo
mov
push
mov
add
lds
pop
mov
mov
lret
leave
xchg
dec
les
sbb
int
sub
jmp
sbb
ss
gs
mov
lret
test
jb
cmp
pop
lods
mov
and
imull
aaa
sbb
jnp
inc
sbb
fwait
pop
mov
add
mov
fs
dec
aad
mov
fnstcw
sub
fldt
in
stos
adc
xchg
shll
xor
cs
mov
pop
push
jl
imul
or
jge
sub
inc
mov
popf
dec
add
rcll
cmp
sub
fcmovbe
mov
jg
cmpsl
rcr
sarl
or
add
sbb
mov
mov
jnp
mov
jnp
ljmp
mov
lods
leave
sbb
jne
pop
adc
insl
xchg
cmpsl
repz
and
push
cmpsb
inc
ret
iret
fadds
jb
xlat
lods
jo
or
cmp
push
out
cmpsb
xchg
inc
adc
and
add
fs
jns
shll
add
jl
outsl
daa
add
xchg
pop
add
push
das
dec
or
arpl
or
push
mov
mov
fbld
push
outsb
in
mov
push
and
jl
bound
jl
or
dec
fildl
inc
loop
aad
sbb
add
stos
mov
out
pop
xor
xor
pop
and
test
pop
shrb
clc
scas
ja
adc
lahf
mov
insl
sub
fstpt
gs
mov
in
jns
dec
add
testb
xor
pusha
in
mov
add
sti
das
xchg
pusha
js
leave
cs
or
jp
inc
push
push
xchg
into
mov
les
sub
and
imul
xor
or
sbb
inc
cltd
int
pop
push
loopne
sub
dec
shll
mov
pop
aam
outsb
in
shlb
mov
int3
cld
outsl
fldt
cld
cmp
mov
push
pop
adc
add
jae
xor
pop
or
adc
movsb
mov
push
push
arpl
jbe
xchg
add
aad
mov
gs
ja
gs
fimuls
push
nop
xchg
mov
jo
mov
scas
test
lcall
mov
cmp
pop
push
insb
dec
xor
iret
inc
push
aam
ljmp
xchg
jp
inc
xchg
std
or
adc
data16
ud2
inc
lods
mov
push
jle
inc
sub
fidivrl
cmpsl
adc
ljmp
icebp
js
stos
xor
lahf
sub
das
loop
adc
jne
push
fmull
mov
ret
push
aas
and
pop
adc
outsl
lods
inc
pusha
inc
popa
bound
fiadds
jno
out
push
in
mov
push
cmpsb
loopne
pop
xchg
das
xchg
arpl
xchg
cmp
mov
outsl
or
pop
mov
push
adc
or
push
jne
aas
jbe
test
mov
call
lods
inc
pop
jo
mov
test
cwtl
jecxz
xor
mov
pop
dec
jl
cld
xor
cmpsl
out
bound
cmp
cmp
push
mov
aam
and
push
jmp
cmc
in
popa
sbb
mov
inc
pop
insb
call
jno
ficoms
das
mov
out
xor
xor
shrl
lea
ja
mov
cld
jl
cltd
cltd
jo
cmp
dec
ljmp
jo
mov
flds
in
mov
ja
push
adc
lcall
ja
adc
dec
adc
dec
mov
inc
outsb
push
out
mov
pushl
aad
aad
mov
mov
lods
in
repnz
into
mov
adc
clc
inc
sbb
mov
lds
daa
loop
int
mov
dec
cmp
xor
mov
cmp
push
mov
push
pop
and
add
sub
mov
xchg
movsl
movsb
call
add
adc
add
jl
in
mov
mov
test
mov
xchg
cli
xchg
xchg
popf
stc
cld
mov
mov
xlat
gs
cmpb
ret
mov
push
aad
fs
scas
pop
mov
pusha
js
gs
and
lods
aad
sbb
cmp
mov
in
fs
je
icebp
mov
push
rol
scas
pop
ret
sub
or
jns
movsb
mov
sub
rclb
add
jg
repz
dec
psubusb
jmp
mov
in
jb
push
frstor
jecxz
fsub
inc
dec
xchg
scas
ret
enter
push
cmp
pop
mov
jg
adc
dec
mov
mov
pop
mov
inc
fisttps
push
sub
push
adc
xlat
adc
shrl
lock
js
jno
pop
fisubl
mov
addr16
sbb
sbb
lret
sbb
outsl
add
add
sbb
xchg
push
sahf
lock
cmp
dec
loope
or
testl
cmp
adc
mov
mov
call
add
pop
jae
push
adc
lret
hlt
mov
sar
into
mov
and
cmpsb
sub
imul
ret
mov
js
inc
push
pushf
mov
pop
shrb
xor
stos
adc
xchg
fidivl
jae
sbbl
jae
test
call
pushf
loope
sarb
pop
and
cmp
push
jg
movsb
adc
inc
sub
jle
ljmp
movsl
leave
inc
pusha
push
ja
ja
dec
js,pn
dec
test
or
ret
outsl
sbb
fdivr
sub
test
or
stc
fmuls
push
sbb
aad
sahf
shl
inc
add
xchg
in
mov
mov
mov
fmulp
jbe,pt
cli
cli
outsb
dec
pop
xor
and
cltd
sbb
js
out
cmpsb
mov
bound
xlat
xchg
pop
pop
pop
cwtl
and
or
push
mov
sti
repnz
bound
lcall
les
scas
and
in
outsb
mov
enter
hlt
bndldx
inc
jl
fnstenv
adc
fistpl
lock
inc
push
je
xlat
ds
addb
xor
out
mov
popa
adc
sbb
push
mov
movsb
and
movzwl
and
cmpsl
xchg
adc
sbb
frstor
sub
sub
aas
mov
aaa
cmp
int
cltd
add
pop
rolb
mov
dec
mov
and
jnp
or
jecxz
sahf
fbstp
mov
push
out
rclb
dec
loope
ja
dec
jp
icebp
cmp
lock
jb
jg
fistps
sbb
xlat
fdivp
dec
mov
or
cltd
lcall
filds
outsl
push
xorb
insl
or
arpl
add
pop
mov
aas
jle
pop
sbb
jp
fs
adc
mov
jns
jl
in
sub
lock
mov
pcmpeqd
pop
test
and
int
push
fnstsw
lret
push
aam
cmp
or
fwait
icebp
or
pop
xchg
xchg
mov
into
loope
scas
movl
push
stos
sti
dec
cli
cmp
sbb
jl
fdivp
mov
fstl
and
mov
pop
jecxz
cmp
sbb
int3
push
insl
pop
or
or
mov
cmpsb
ss
icebp
aam
sbb
or
inc
stos
mov
mov
mov
repz
push
dec
popa
jge
arpl
pop
pop
xlat
pop
xchg
add
push
iret
mov
cltd
jmp
inc
sbb
adc
or
in
pop
cmc
inc
push
aam
sbb
cmp
aam
xor
push
inc
inc
repz
push
es
cltd
testb
les
out
xchg
fdivrl
ss
out
stos
test
mov
subb
mov
adc
push
cmp
out
xor
ret
mov
call
test
pop
jb
rolb
sbb
fnsave
sub
add
cld
ja
xor
mov
shlb
xor
loop
in
sub
loop
outsb
dec
insl
daa
dec
popf
cli
dec
cmp
sub
fcmovnbe
out
in
sub
outsb
rcll
jbe
jne
inc
int
sub
jle
pop
shrw
cs
xor
popf
lret
in
lods
jmp
jp
repz
push
arpl
mov
sub
add
or
xchg
mov
data16
std
gs
scas
inc
push
sahf
ret
std
push
push
cmpb
jae
test
roll
sbb
fmull
pop
push
rcll
hlt
xor
scas
fisubl
sub
cltd
rcrb
push
sbb
push
xor
push
sub
dec
and
sahf
or
and
jb
mov
push
data16
xorb
mov
mov
xchg
lahf
stos
daa
adc
repnz
and
mov
inc
pop
inc
dec
popf
mov
outsl
mov
test
xlat
dec
test
sahf
adc
idivl
cmpsb
mov
jmp
inc
pop
sar
outsb
insl
cmp
xchg
jne
jae
push
and
xchg
xor
repnz
jmp
push
cltd
aad
push
inc
pop
fisttpl
xlat
mov
loop
xor
add
push
xchg
scas
mov
mov
ficoml
jb
and
cltd
mov
mov
mov
add
xchg
sbb
push
push
jmp
mov
dec
push
sbb
cmpsl
mov
push
sbb
les
push
jbe
lock
lods
ss
lock
repnz
jbe
mov
test
push
andl
xor
movl
roll
cmpsb
aas
test
cmpsl
or
xchg
mov
mov
js
daa
cmc
lods
jecxz
ljmp
pop
js
dec
test
xchg
jne
add
inc
inc
rolb
das
lret
int
dec
cmp
jp
out
outsb
testb
jns
inc
sub
popf
stos
add
mov
leave
hlt
rorl
mov
push
ret
rclb
jl
shll
jl
dec
lods
push
pinsrw
ds
pop
sbb
in
push
cmp
dec
dec
fld
popa
add
jp
jg
cld
xchg
aad
mov
and
roll
into
sub
ffreep
jne
add
in
add
rorl
jp
pop
popa
test
cmp
push
cmpxchg
lcall
test
jg
fisttpl
push
jecxz
and
jmp
mov
jp
out
into
test
jae
cmp
clc
mov
pusha
lcall
mov
push
push
stos
iret
jmp
push
jg
jae
jecxz
hlt
adcb
cmpsb
sbbl
insl
cwtl
mov
mov
jbe
repnz
pop
and
or
fdiv
jae
js
xor
in
jo
mov
xor
sub
sub
movsl
push
lcall
loope
test
in
xchg
sbbl
cld
repnz
push
and
sahf
sahf
push
pop
jns
xor
dec
and
cld
imul
fs
lret
fbld
das
jbe
and
cmp
fwait
or
and
sub
lcall
or
inc
jecxz
movb
rorb
sbb
in
mov
andl
ficomps
outsb
aas
inc
out
sub
outsl
call
xorb
sbb
mov
sarl
push
iret
out
test
shll
stos
imul
aad
adcl
and
loopne
cld
or
push
shlb
and
pop
inc
enter
or
mov
iret
adc
in
add
mov
jg
mov
call
jmp
sahf
in
cli
mov
ljmp
jecxz
add
sbb
xorb
sub
push
mov
in
lock
insl
xor
mov
mov
adc
jg
push
insl
pop
pop
int3
sub
fdivrs
push
cmp
repnz
jmp
mov
fcoms
in
sahf
shlb
or
shll
movsb
push
loopne
xor
data16
mull
jno
fldenv
scas
js
mov
jne
mov
xor
xor
mov
xlat
mov
dec
push
int3
cmp
mov
out
into
push
dec
out
dec
sbb
or
pop
cwtl
aas
fnsave
dec
loopne
xchg
negl
cmc
jmp
mov
mov
jmp
in
push
push
rorb
das
lahf
dec
xor
sbb
sahf
js
cwtl
cltd
sub
enter
nop
jae
setno
and
stos
xchg
push
sub
fisubs
dec
jae
sbb
mov
jmp
out
mov
cwtl
mov
xlat
loop
mov
xor
xchg
test
push
rorb
sarb
add
or
dec
es
sub
test
inc
inc
jae
daa
mov
xchg
jne
inc
dec
in
cmp
jo
push
xor
or
shr
test
cld
jno
jb
lods
mov
fs
mov
pop
or
xor
cmpsb
sbb
cmp
pop
stos
add
lods
dec
stos
mov
pop
mov
cmc
mov
xchg
data16
scas
mov
sarl
push
stc
cmp
jbe
mov
mov
and
sbbl
filds
sub
lret
ljmp
push
xor
call
sbb
cli
push
push
or
inc
pop
in
test
jl
icebp
loopne
jnp,pt
mov
mov
outsb
dec
cli
sarb
and
push
and
xchg
mov
idivl
sbb
xchg
add
ja
jae
dec
mov
loopne
mov
jmp
inc
or
adc
loope
lods
push
pop
xor
ja
mov
test
enter
daa
adc
push
ja
loope
mov
sbb
pop
fcomip
sti
mov
aaa
arpl
mov
inc
sbb
push
and
lods
lcall
fcomps
jne
dec
push
xor
mov
aas
lods
jmp
sub
xorl
stos
sbb
dec
imul
mov
sub
insl
andb
iret
jno
jle
xchg
iret
inc
xor
xchg
lods
andl
xchg
stc
sub
add
into
inc
sub
mov
loop
xchg
sbb
mov
xchg
sub
fucomp
pop
push
pop
out
das
imul
pop
mov
das
rol
int
mov
insb
aam
lods
or
push
shrb
and
or
loop
xchg
and
push
and
out
or
fwait
decb
and
arpl
xchg
repnz
imul
mov
mov
xchg
aam
lds
xchg
out
lcall
push
mov
lock
das
insl
jno
jns
lret
int
jmp
sub
push
or
jnp
inc
in
icebp
xor
jge
mov
add
je
or
sahf
cmpsb
rcrb
xlat
lcall
call
test
xchg
mov
mov
in
int
repnz
repz
cmpsb
mov
sub
jl
sbb
adc
jnp
daa
adc
and
jne
mov
movsb
pop
sub
mull
rep
inc
cld
dec
out
or
cmc
xchg
jo
and
popa
scas
popa
or
xor
loop
xchg
xor
and
mov
inc
rcpps
cli
mov
in
les
test
idiv
xor
push
repnz
in
dec
cmp
jmp
repnz
push
mov
jne
xchg
cmc
sbb
loope
outsb
int3
lret
dec
aad
aas
pop
push
sahf
daa
loop
push
xlat
mov
push
dec
push
push
push
push
in
hlt
call
aam
mov
fwait
rorb
pop
shll
sbbl
cmp
add
pop
fbld
adc
movsb
xchg
hlt
and
icebp
sub
inc
call
add
cmp
dec
mov
std
sbb
adc
pop
aad
cmp
xor
out
fstpt
clc
inc
inc
add
popa
jge
clc
xchg
test
mov
push
jmp
jns
cmpsl
push
mov
aas
sbb
outsl
cmp
ja
mov
xor
cmp
lret
or
mov
dec
mov
shrb
leave
ret
pop
push
mov
imul
or
dec
xchg
scas
lret
in
subb
je
dec
idivb
cmp
cwtl
push
mov
push
ljmp
pop
sub
pop
and
xchg
hlt
adc
insl
gs
dec
adc
aaa
xchg
imul
lahf
pop
dec
dec
xor
addr16
sub
test
lds
xor
pop
dec
mov
lea
mov
movsl
fisubrs
dec
jbe
inc
sbb
cld
les
adcb
mov
aaa
sarl
adc
pushf
push
outsl
pop
xchg
jmp
lds
loope
jno
sbb
or
add
scas
test
inc
jns
addr16
outsl
jne
leave
push
insb
and
mov
imul
dec
call
sub
pop
mov
jbe
stos
mov
and
call
push
and
jae
fcmovne
cmp
iret
cmc
imul
sbb
out
mov
and
and
or
push
xchg
dec
mov
push
xchg
xor
cmpsl
push
enter
pop
jle
arpl
sbb
icebp
loopne
or
mov
lds
or
sbb
nopl
pop
aad
cmpsl
cltd
jg
pusha
jg
repz
lcall
inc
stc
adc
adc
add
sbb
and
lods
sbb
cs
adc
jbe
push
loop
push
pop
mov
pop
outsb
pop
push
mov
jo
sbb
jl
push
sub
popf
repz
addr16
dec
jecxz
or
mov
pop
movsb
out
out
cmc
mov
pusha
dec
mov
and
mov
inc
imul
hlt
or
rcr
jp
lds
mov
add
pop
cmc
popa
cwtl
pop
in
int
xor
add
push
bound
and
and
js
inc
inc
negl
pop
push
jo
test
mov
mov
mov
ja
or
dec
or
int
cmp
xor
pop
js
mov
mov
fs
dec
lahf
jnp
dec
sahf
mov
cmpsb
mov
outsb
sti
rcr
pop
pop
clc
subb
call
xchg
add
xchg
inc
jno
mov
push
add
out
lcall
stos
pop
pop
cmp
rcrl
repnz
cmp
es
adc
xlat
leave
pop
and
and
bound
adc
shlb
cwtl
jne
add
das
aaa
flds
gs
sub
or
pushf
mov
add
dec
out
ret
pushf
pop
xchg
mov
insl
fildll
pop
ja
adc
mov
dec
loop
xor
push
addb
cmp
or
mov
scas
mov
push
xor
and
movl
ret
push
nop
gs
pop
xor
lret
mov
mov
cld
jno
pop
ja
cmp
jbe
xchg
sub
mov
sbb
cmpsb
mov
ret
leave
call
das
pop
lods
pop
inc
mov
adc
sbb
push
decl
in
jge
pusha
cmp
mov
testb
lahf
push
adc
dec
mov
mov
jns
push
addr16
or
or
jge
inc
push
or
and
jae
orb
pusha
shll
lea
xor
int
notb
sub
pop
xchg
and
pop
addb
mov
adc
push
ret
and
inc
dec
inc
out
add
les
mov
adc
or
adc
sub
sbbb
je
xlat
int
mov
sar
into
sbb
pop
sub
mov
sub
push
jle
push
mov
pop
sbb
lods
jmp
pop
mov
repnz
xor
adc
xor
xchg
hlt
pop
dec
mov
adc
pop
in
mov
mov
mov
sbb
mov
and
in
xchg
pop
or
pop
or
stos
pop
out
xor
push
bound
or
imul
ljmp
or
adc
and
je
psubsw
pop
lahf
fwait
sub
bound
or
popl
lahf
or
dec
sbb
lods
pop
add
or
cld
data16
lahf
inc
sahf
imul
pop
shr
pusha
pop
push
mov
and
fmull
dec
inc
cmp
rolb
add
mov
sbb
mov
jo
pop
xchg
insb
hlt
scas
sbb
loopne
es
or
je
xchg
cli
and
mov
sub
dec
lock
and
inc
add
fwait
jb
cltd
push
push
push
and
adc
leave
adc
subb
pop
lahf
xchg
lods
in
and
adc
clc
and
aas
lret
lret
xchg
inc
lret
inc
cltd
and
rcrb
cld
mov
and
xor
jmp
mov
jmp
cmp
sub
test
pop
adc
mov
imul
popa
and
mov
inc
popa
jmp
xor
mov
mov
sub
sub
lahf
xor
addb
dec
repz
push
xor
nop
add
mov
adc
sub
sub
icebp
push
xchg
mov
push
jg
mov
aam
sbb
mov
inc
mov
jle
jge
mov
popa
rcl
lcall
cwtl
mov
mov
dec
cwtl
xor
mov
call
rorb
mov
loop
add
push
popa
and
cltd
stc
out
andl
jmp
sub
sbb
inc
shlb
add
or
jecxz
and
dec
mov
std
xchg
inc
int3
mov
cmp
rcrb
mov
adc
xchg
push
js
scas
add
push
and
test
mov
je
mov
dec
in
and
rcrb
repnz
jne
dec
test
xor
push
ret
sub
jb
lods
inc
sub
ds
jbe
rcr
inc
cmpb
leavew
imul
xchg
mov
mov
add
jne
mov
push
test
pop
xor
push
mov
fmuls
insb
js
or
clc
lcall
out
int
cmp
xlat
mov
vmovhps
cmp
jns
push
test
loop
repnz
out
mov
daa
adc
cld
and
xor
mov
jle
and
ljmp
mov
and
push
jbe
int
sarb
add
pop
orb
mov
mov
jp
sbb
xchg
mov
jl
ss
sarl
or
out
or
xchg
push
int3
lds
push
and
shll
mov
in
mov
loop
mov
mov
mov
leave
mov
lods
push
dec
jmp
jnp
stc
sub
ficompl
mov
xor
cli
stos
xchg
jmp
ja
push
adc
sub
add
cmc
addr16
cmp
mov
andl
dec
and
iret
cmpl
mov
mov
sub
mov
popa
lret
lock
mov
sarl
lds
in
mov
mov
pop
adc
scas
jp
pop
mov
hlt
adc
pop
pop
repnz
insl
ljmp
lds
mov
jne
xchg
dec
sbb
stos
inc
mov
mov
cmp
sub
shl
out
push
repz
mov
repz
mov
mov
mov
push
ljmp
or
add
jo
sub
jns
xor
leave
in
sub
sar
cli
popf
jnp
mov
mov
loop
cmp
movb
dec
lcall
mov
cmp
repz
shr
js
inc
clc
mov
mov
test
roll
push
jb
mov
fbstp
stos
fcmovu
or
sub
aad
dec
inc
ret
jo
xchg
int3
push
nop
lea
clc
push
mov
jp
add
inc
inc
xchg
in
xor
dec
cmp
addb
loope
jge
pop
pop
pop
xchg
nop
test
into
jmp
bound
jp
lods
xor
lret
adc
inc
push
pop
sub
sub
cwtl
js
jp
sub
jnp
dec
xor
test
dec
dec
add
mov
dec
rorb
hlt
and
push
xchg
adcb
mov
cmp
pop
mov
sub
cmp
xchg
dec
xor
jo
dec
sbb
xchg
xor
cmp
test
pop
hlt
addr16
int3
inc
xor
idivb
test
or
mov
mov
out
je
pop
rclb
aaa
jae
in
outsl
stc
bound
clc
adc
bound
xor
sbb
dec
push
movl
imul
stos
xchg
cmpsl
sub
out
jp
cwtl
cmp
push
mov
js
sbb
and
pop
mov
xchg
mov
cwtl
sbb
ja
les
rorb
lock
ret
push
divl
and
lods
jno
or
mov
xchg
mov
pop
jnp
jecxz
outsl
mov
out
sub
outsl
push
or
dec
cld
cmp
std
push
subl
loopne
ret
push
fists
jbe
mov
pop
mov
test
out
pushf
mov
jb
add
and
aad
rolb
int
pop
insb
rcl
inc
jnp
cmc
or
push
loope
es
or
or
ljmp
inc
in
adc
mov
sti
and
push
xor
pop
test
cwtl
mov
sub
cli
sbb
pop
mov
hlt
sub
push
cli
cltd
push
jne
xor
pusha
in
pushf
mov
sbb
mov
pop
mov
aam
je
push
fisubrs
aam
call
adc
dec
sbb
jge
popf
ljmp
jmp
je
shrl
adc
mov
or
jns
push
daa
pop
sbb
je
dec
xchg
or
xlat
mov
insl
cwtl
dec
adc
loopne
adc
or
xchg
arpl
jge
lods
pop
sbb
jmp
scas
and
inc
jp
mov
cmpsl
aaa
leave
ljmp
adc
mov
add
test
jb
es
adc
les
in
lods
out
jbe
scas
fidivrl
fsubrl
xor
cltd
hlt
popf
into
mov
adc
nop
imul
mov
pop
adc
jecxz
jl
jae
icebp
push
lea
and
jecxz
xor
and
jae
sbb
push
movsb
mov
xor
add
mov
sbb
ljmp
push
cwtl
sbb
push
daa
clc
iret
jecxz
mov
sahf
in
xchg
adcl
and
cmp
leave
cs
insl
sarl
dec
sbb
fdivs
lret
mov
mov
gs
shrb
scas
lahf
xorl
pop
dec
ds
add
xchg
adc
adc
push
mov
mov
mov
test
cltd
lock
mov
outsb
mov
and
mov
xlat
adc
loopne
loop
mov
ret
lock
std
dec
jl
adc
cmp
add
loop
loopne
ja
addr16
or
outsb
push
rorb
jmp
and
scas
imul
push
pop
pop
ja
jge
sbb
movsb
xchg
mov
jno
pop
testb
mov
out
pop
xchg
or
mov
cmp
xchg
aam
push
inc
mov
push
ret
adc
pop
dec
imul
push
outsl
fimull
scas
mov
xchg
idivb
fucomp
jp
or
sbb
jg
pop
faddl
cwtl
outsl
iret
sub
dec
inc
mov
dec
xchg
mov
jecxz
inc
add
jl
ljmp
in
ficoml
rcrl
movsb
in
cld
jae
les
sbb
dec
xor
jmp
push
jecxz
xchg
lret
sub
push
scas
mov
mov
in
jne
jl
xor
xor
sbb
or
push
inc
out
out
xor
lret
xor
ret
pop
aaa
adc
andb
cltd
xor
lods
sub
outsl
xor
sub
jo
mov
xchg
nop
out
bound
inc
xchg
popa
add
in
or
lea
in
dec
arpl
sub
mov
daa
das
jl
or
cwtl
cmp
insl
xchg
out
sub
outsb
mov
jae
add
jne
pop
mov
inc
push
cmpl
fmuls
in
sbb
xchg
movsl
lcall
xchg
test
pop
fs
xor
xor
aam
sbb
hlt
xchg
mov
inc
rcrl
and
lahf
fsubs
faddl
icebp
ret
xor
repnz
adc
dec
test
jnp
aas
add
push
and
inc
dec
jle
out
push
xor
pushf
fcmovbe
and
std
mov
insb
shll
push
mov
xor
cli
or
jge
jl
popa
popa
lret
stc
and
pop
decb
cmc
aam
clc
pop
jmp
subl
cld
push
adc
sbbl
iret
mov
aaa
adc
pop
dec
xor
dec
jnp
jle
sbb
js
ret
sbb
fs
dec
cmp
pop
or
sahf
mov
aas
sbb
mov
push
xorb
inc
push
into
mov
xchg
subl
mov
scas
mov
and
dec
xor
pop
lock
mov
and
mov
addl
dec
ss
push
in
rcrl
loopne
fistl
not
xchg
int3
testl
ja
imul
jns
push
mov
push
lret
or
sbb
jbe
push
adc
mov
aad
out
inc
pop
jae
or
sbb
test
daa
fldl
aam
jg
and
jnp
pop
lret
jno
and
push
pop
rclb
mov
sbb
pop
popf
sub
mov
xor
cmp
add
scas
inc
cs
fldenv
mov
adc
inc
and
pop
sbb
sbb
pop
xor
mov
out
fcomps
cmpsl
je
sub
inc
pop
jmp
inc
shl
sbb
in
dec
repnz
imul
mov
mov
xor
dec
mov
lret
shlb
mov
or
daa
push
push
mov
jo
insl
movsb
push
inc
stc
xor
inc
les
jno
adc
xor
push
leave
popa
subl
jnp
pop
dec
pop
scas
pop
or
mov
jecxz
mov
push
das
out
jge
add
and
int3
push
push
faddp
inc
cmp
popf
inc
aad
fiaddl
inc
lcall
daa
shlb
in
cmp
mov
sub
inc
addr16
hlt
ret
mov
cmp
sbb
cmp
push
sub
sbb
cmp
push
add
ret
push
xchg
scas
pop
test
add
push
mov
out
sub
and
jl
and
jae
adc
dec
push
push
cmp
mov
xor
push
cmp
push
pop
add
ja
loope
jbe
xchg
loope
pushf
nop
stos
push
mov
call
sbbb
add
leave
out
lret
loope
sarl
cwtl
dec
pop
push
outsl
idivb
pop
nop
aas
pusha
xchg
or
in
add
adc
out
push
inc
pop
adc
ret
popa
cli
or
adc
jmp
ret
stc
jg
popf
arpl
subl
ljmp
test
pop
enter
push
fwait
int3
shlb
or
jne
cmp
lcall
jo
into
cmpsl
out
mov
imul
adc
sbb
and
pop
mov
popa
jne
jne
idivl
jbe
jo
stc
xlat
insl
aas
pop
ret
cmp
test
ds
out
sub
add
xchg
imul
test
incl
sub
scas
iret
pmaxsw
adc
lock
insb
sub
and
dec
mov
jno
mov
sub
cmp
stc
jno
dec
add
push
in
stos
push
ret
sub
lods
pop
ss
mov
xchg
mov
jno
and
mov
inc
fdiv
jns
test
fwait
jb
jle
push
dec
and
xchg
pop
jg
sub
sbb
gs
pop
enter
jg
ror
xchg
dec
das
shl
cli
pop
testl
not
inc
pop
mov
pop
mov
out
and
mov
cmp
and
test
in
inc
mov
or
inc
scas
mov
mov
dec
mov
pop
push
aaa
dec
adc
jp
sbb
or
into
jae
jp
dec
adc
xor
lds
nop
ret
xor
cmp
es
add
jmp
mov
jg
fdivrl
xor
xlat
pop
dec
rep
into
insl
aad
mov
pop
xchg
inc
sbb
lock
movsl
aas
js
scas
sarl
xchg
xchg
lret
or
adc
push
inc
popa
inc
loop
vfpclasspd
test
push
mov
xchg
into
test
dec
repnz
mov
fists
into
fcmovnu
out
dec
loope
cmp
jecxz
adc
sbb
sub
sbb
pop
outsl
sbb
mov
mov
sbb
subb
fsubl
rorl
mov
mov
leave
clc
add
fwait
call
add
mov
imull
adc
adc
test
mov
out
arpl
push
out
pop
lret
mov
out
jae
mov
mov
inc
push
add
pop
cli
in
out
insb
xchg
rcl
inc
mov
xchg
adc
aaa
jp
jae
cmp
loopne
pop
fmuls
and
jp
push
xor
jle
jo
add
cltd
sub
clc
mov
dec
cmpsb
stos
fwait
pop
mov
decl
shrl
jb
jbe
adc
dec
push
cmpsl
leave
jmp
xor
xor
xchg
fstps
fidivrl
mov
test
stos
mov
vsubps
jbe
add
mov
xor
and
in
or
jne
loopne
adc
mov
inc
mov
push
filds
dec
inc
xchg
push
jecxz
stos
loope
cli
clc
jl
and
shll
xor
mov
mov
mov
lahf
scas
daa
ret
mov
cmc
or
pop
cmp
test
sahf
push
negl
jno
jb
xor
repnz
cmp
mov
sub
dec
or
mov
je
lock
adc
lret
leave
stc
arpl
out
xchg
xor
jecxz
les
inc
sbb
or
stos
cmpl
xor
clc
gs
divl
subb
in
mov
xchg
rep
out
xorl
bound
sbb
es
andb
jecxz
faddl
adc
mov
data16
pop
pop
dec
nop
push
mov
std
sub
xchg
clc
xchg
adc
xor
clc
pop
or
inc
pop
jno
xor
decl
jle
mov
add
adc
pop
pop
fcompl
jmp
loop
adc
add
sbb
stos
js
lret
leave
add
imul
fmull
xchg
xor
fstp
dec
add
out
stos
mov
fisttps
xchg
stos
mov
iret
adc
movsb
or
pop
ret
adc
mov
mov
mov
leave
and
ja
cld
dec
mov
sbb
outsb
pop
test
xchg
or
shr
or
mov
rcl
test
pop
push
xchg
aam
mov
cwtl
sti
mov
lea
push
js,pn
sub
sub
xlat
lcall
into
cld
fisttps
in
push
lea
dec
jl
sbb
sbb
ljmp
bound
cmpsl
jno
mov
mov
lcall
popf
pop
pop
mov
out
repz
test
mov
clc
mov
xchg
out
lcall
rcll
add
pushl
pop
inc
cmpb
ss
mov
xchg
test
xchg
jp
push
bound
lods
popf
bound
sbb
pop
inc
xchg
dec
adc
out
ds
iret
dec
jo
jbe
mov
pushf
jnp
test
sub
adc
push
cli
pop
sar
aaa
lea
in
fidivs
rol
lea
push
fwait
and
or
jns
fiadds
imul
push
sub
inc
mov
jg
xorl
jne
ljmp
outsb
xchg
clc
cmpsl
and
mov
loopne
push
cli
or
fadd
adc
hlt
and
lea
cmp
shl
cmpb
cld
enter
push
fs
gs
lahf
fmuls
cwtl
push
inc
adc
ret
sbb
jg
cmpsl
pop
addr16
jnp
cmpb
dec
aad
les
xchg
repz
es
mov
xor
sub
icebp
jecxz
mov
xchg
mov
and
cmc
or
pop
stos
in
imulb
movsl
or
adc
mov
testb
adc
scas
ja
stos
dec
outsb
or
sub
cwtl
dec
push
pop
and
and
pop
mov
jg
ljmp
cli
jbe
iret
popf
push
lcall
int
inc
mov
sbb
cmp
fcmovu
jmp
aas
scas
stos
push
lds
push
xchg
ficoml
lds
pop
lret
cmp
xor
or
xchg
outsl
or
lods
mov
loope
gs
mov
call
sub
ds
sarb
fnsave
add
andb
out
fidivl
sub
mov
out
scas
add
lcall
and
mov
ss
mov
mov
out
xchg
aad
rcrl
adc
arpl
sub
cmp
xor
xor
adc
lahf
sarl
cmp
fcom
fisttpll
ficoml
jecxz
movsl
fisttps
test
mov
cmpsl
cmp
pop
sub
push
popa
or
push
outsl
movsl
xchg
ret
mov
mov
cmc
push
rol
pop
out
dec
xchg
xchg
inc
mov
jg
mov
pop
mov
xorb
loopne
adc
jnp
jp
jns
stc
aas
push
sar
test
lret
popa
dec
fistl
out
inc
jae
loope
aaa
mov
push
repnz
fstl
in
adc
aas
insl
mov
and
xchg
stos
add
insl
xor
pop
fwait
cmp
lds
mov
cld
push
sti
testb
sbb
add
subb
pop
stc
push
call
js
ret
xchg
push
cli
out
int3
or
jns
pop
sarl
mov
je
je
stos
loope
out
xlat
inc
loope
scas
js
es
lock
iret
push
int
out
cmp
mov
pop
pop
xor
add
test
lock
imul
add
jo
cmp
je
rcll
jl
stc
sti
pusha
in
call
imul
sbb
push
insb
jnp
inc
fmuls
pop
or
cltd
inc
push
add
sbb
inc
push
rcrb
shlb
lods
cmp
mov
fldcw
push
sbb
icebp
fadds
jne
cmp
mov
push
mov
add
rol
shl
arpl
push
repz
jnp
xlat
sti
rorb
stos
cmp
je
ds
js
inc
and
jb
mov
sbb
jo
ret
jge
orl
cmp
jp
sti
fidivrl
mov
test
mov
lret
mov
out
push
dec
fnstenv
sub
hlt
jl
mov
adc
jp
cltd
mov
out
sub
xor
or
ret
ja
icebp
mov
push
sahf
adc
cwtl
adc
outsl
jle
mov
test
mov
pop
in
add
jns
cmpsl
mov
push
js
nop
or
dec
fnop
or
jmp
xlat
loopne
mov
sub
or
je
insl
add
inc
mov
lahf
cmpsb
nop
aad
hlt
xor
addr16
jno
push
fcomi
mov
xlat
scas
loop
mov
rcr
jge
add
in
xor
insb
jnp
mov
xchg
lahf
sbb
notb
insl
cwtl
xchg
lods
loope
sub
adc
test
mov
imulb
cwtl
push
jle
out
mov
push
aaa
xchg
dec
loop
jle
jb
sbbl
imul
test
push
shll
inc
sbb
lods
xor
cmp
addr16
out
mov
jae
adcl
jg
xor
inc
cmpsb
jae
stos
in
fidivl
pop
jecxz
fdivs
dec
mov
ret
ss
push
fdivrp
ss
sub
cmp
fldt
mov
scas
arpl
insb
call
pusha
shrl
mov
cmp
jno
fdiv
pushw
or
cmp
adc
mov
sbb
ja
adc
jge
iret
adc
es
and
imul
dec
sbb
jb
addr16
nop
dec
out
mov
mov
add
mov
sbb
sbb
insb
lret
or
xor
xorb
sbb
in
outsb
xchg
stos
popf
xor
rorl
mov
pop
imul
push
imul
and
jl
js
lds
mov
dec
push
or
mov
lock
xchg
mov
icebp
inc
dec
out
cmp
sub
adc
mov
loopne
arpl
xchg
je
cmp
scas
pop
lds
in
xor
pop
iret
inc
xchg
add
loopne
rcll
cmp
and
bound
and
rolb
hlt
andb
pop
pusha
mov
jg
lcall
mov
aas
push
frstor
push
nop
jo
das
cltd
sub
sbb
push
xor
jl
daa
leave
jge
inc
cmp
imul
js
xor
inc
icebp
pusha
leave
and
jecxz
in
mov
adc
inc
adc
or
xchg
mov
push
push
rol
pop
ficoml
lahf
dec
lods
inc
adc
jb
sub
ret
cmpsb
jge
imul
ret
daa
mov
lcall
insl
and
aaa
push
push
pop
jae
jl
pop
mov
rsm
movb
cmp
inc
push
lods
data16
cmp
and
fistpll
mov
int
out
stos
add
je
enter
sub
icebp
aam
enter
dec
ret
dec
mov
lret
shrd
adc
or
inc
pop
adc
add
mov
les
loop
xchg
stos
in
loop
mov
and
mov
arpl
jge
pop
clc
aam
dec
xor
cltd
xchg
mov
adc
xchg
jge
in
fwait
outsl
outsb
pop
sar
adc
iret
data16
lret
mov
mov
in
pop
mov
test
or
test
add
dec
int
dec
imul
add
in
rcll
in
mov
sbb
push
cmp
sbb
push
sarb
xor
push
movsl
movsl
scas
lcall
dec
repnz
xor
loopne
or
fidivs
stos
xor
add
popa
inc
fbld
xor
push
in
push
pop
ret
iret
sub
insb
sbb
ret
mov
adc
int
leave
mov
dec
jge
xlat
mov
push
add
mov
pushf
outsl
cld
sbb
shlb
xor
mov
aas
addr16
out
cwtl
adc
and
xor
xor
or
js
daa
into
fdivs
rol
sbb
aas
rolb
xchg
or
mov
cmpsl
cmp
sbb
jo
xchg
test
subl
loopne
cmpsb
ret
and
push
mov
aad
arpl
fstps
mov
mov
cltd
addr16
adc
push
test
repz
add
nop
inc
xchg
dec
sub
push
aas
sbb
adc
mov
lea
mov
and
and
jg
rolb
add
lods
add
cmp
lret
test
sti
jp
cmc
cmpsl
xchg
outsb
psrad
xchg
lahf
mov
cmc
aaa
aam
sbb
pop
mov
mov
jge
inc
out
imul
sbb
xchg
int3
mov
shrb
pop
jno
dec
push
inc
leave
or
int3
sbb
sbb
loop
lods
pushl
or
out
cmp
push
icebp
adc
or
loope
ja
push
leave
jo
jl
mov
in
lea
imulb
adc
mov
mov
jmp
stc
jo
insl
xchg
dec
or
cld
dec
mov
jmp
fistpll
pushl
xchg
scas
mov
sbb
pop
adc
add
int
xchg
mov
mov
out
pusha
lock
scas
out
jecxz
lea
mov
sbb
mov
enter
stc
pop
inc
stos
sbb
mov
test
and
push
jb
mov
out
push
in
mov
jo
jp
adc
add
repz
mov
aaa
negb
out
cli
into
mov
jl
mov
cmp
js
dec
add
xor
xor
stc
xchg
jp
mov
push
jle
pop
js
scas
xchg
movsb
mov
outsl
hlt
test
imul
mov
stos
decb
roll
mov
push
adc
mov
mov
outsl
and
add
xor
icebp
sarb
push
imul
cmp
push
push
mov
pop
xchg
push
mov
inc
add
mov
jno
movsb
rorb
out
inc
jne
push
lahf
lret
shll
clc
mov
inc
sub
inc
lods
mov
aad
test
jle
mov
gs
cltd
scas
test
inc
sbb
jae
cmc
cmp
sub
mov
mov
lods
jp
and
pop
fldt
jg
cmpsl
out
xchg
jmp
sub
pusha
inc
mov
add
xor
fsubp
xchg
stos
imul
push
mov
lcall
test
arpl
xor
cmc
call
cli
cmp
add
inc
mov
subl
ljmp
fmuls
jp
dec
jmp
mov
add
and
xchg
out
sub
jecxz
push
sub
es
cmpsl
lods
xchg
cmc
es
add
push
call
dec
push
xorb
sbb
hlt
faddl
fstpt
xchg
pop
rcrl
inc
adc
call
dec
dec
lret
and
es
mov
and
push
xchg
mov
xchg
sbb
clc
inc
mov
push
xchg
adc
jle
jo
mov
imul
jg
lods
test
mov
add
test
dec
cmp
lahf
out
push
pushf
fldl2t
add
inc
inc
sub
ret
or
pop
jge
mov
xor
iret
inc
push
push
inc
out
sbb
pop
pop
sbb
sbb
shlb
adc
cmp
xor
stos
jns
inc
scas
ficomps
and
popa
mov
jg
add
fs
sti
cld
adc
jmp
orb
or
cmc
addr16
pop
dec
xchg
mov
sub
cmp
lods
bound
mov
pop
js
inc
jp
push
xor
and
add
scas
pop
sbb
inc
dec
push
cmpsb
call
sbb
scas
int
in
gs
shr
ja
sahf
jb
jb
jae
int
pop
push
divb
ss
leave
lock
ja
jno
sbb
ds
sbb
adc
mov
cmpsb
push
rolb
or
sub
cwtl
and
jno
mov
cwtl
push
pop
insl
cs
mov
mov
push
mov
mov
test
mov
dec
sub
mov
pop
inc
test
outsb
movsb
and
sub
dec
aad
mov
push
ret
push
aad
mov
out
ret
stc
movhps
stos
push
add
or
or
adc
inc
loop
stos
stc
or
fsubr
js
cmpsb
add
adc
stos
mov
data16
aam
xchg
fs
mov
push
cmp
mov
pop
sbb
stos
jge
aad
push
lock
divb
jmp
add
push
cmc
inc
out
fisubl
push
push
pop
sub
movsb
out
sbb
repz
mov
adc
sbb
dec
adc
and
lea
lahf
xlat
mov
cmpsb
add
add
popw
leave
loop
jle
ret
push
paddsb
hlt
icebp
mulb
mov
adc
mov
push
icebp
jno
andb
mov
adc
xchg
lcall
mov
fcoms
jmp
xchg
dec
lret
ret
and
loope
pushf
inc
or
jp
xor
addr16
ss
fsubrs
in
or
jle
fidivrl
jg
mov
pusha
movsl
dec
adc
lods
dec
sbb
pusha
dec
loope
arpl
pop
or
push
rcl
xlat
or
add
aad
insl
in
pop
mov
in
in
xchg
push
cmp
xor
or
movsl
adc
lea
out
adc
mov
sub
and
pop
cmp
pop
pop
divl
out
movsl
repnz
jbe
jb
dec
push
out
mov
test
imul
imul
call
pop
cmp
or
and
sub
lret
cmp
push
mov
paddb
inc
sub
mov
pop
push
mov
push
roll
push
imul
stos
cmpsb
int
xchg
out
movsl
ret
stc
aaa
popa
inc
jae
sub
in
ds
adc
stos
add
xchg
cmpsb
push
arpl
cmp
add
add
rorb
aad
nop
sbb
mov
inc
pusha
out
mov
sub
cmp
mov
lock
jns
or
adc
mov
pop
out
and
imul
mul
outsl
or
inc
loopne
xchg
jmp
insl
hlt
mov
jnp
lahf
jb
cltd
mov
pusha
testl
repnz
xchg
lods
inc
add
ds
in
push
fists
add
call
mov
movsb
cmp
sub
popf
jne
outsl
mov
aaa
cld
mov
pop
xchg
and
icebp
inc
mov
lock
cld
or
and
xchg
inc
push
mov
mov
sub
test
mov
leave
push
pop
mov
and
dec
fdivs
jb
scas
xchg
push
jecxz
push
cmp
int3
imul
hlt
inc
pop
mov
sahf
rcrb
mov
rolb
dec
cltd
add
in
cwtl
lea
xchg
insb
test
imull
js
into
test
sbb
push
mov
pop
or
leave
and
in
out
mov
jle
cs
xor
inc
xor
jbe
fldcw
popf
in
cmp
inc
icebp
jnp
xor
ret
std
mov
imul
rcl
or
pop
inc
push
pushf
movsl
movsb
aaa
flds
pop
fs
push
xchg
inc
les
std
in
movsl
pop
or
adc
and
dec
xchg
cli
in
mov
pop
rol
shrb
movsl
xor
jge
mov
inc
outsb
jns
or
mov
sarb
xor
stos
inc
les
xchg
insl
test
mov
push
xchg
pop
push
push
cs
out
test
lcall
imul
pop
leave
push
mov
or
insb
cmc
sbb
pusha
push
and
pop
ret
ja
mov
xlat
cmpsb
outsb
loopne
sub
and
imul
pop
sub
and
aas
xchg
fisttpl
mov
mov
popf
loope
cmpsl
sub
lcall
outsb
xchg
rcl
xor
jnp
xchg
push
cmpsb
enter
jp
sub
cmpsl
in
adc
outsl
scas
cmpsl
popf
fmul
jno
sub
je
std
dec
nop
pop
or
and
jo
mov
bound
mov
jbe
vpavgb
push
insb
dec
mov
test
xchg
xor
rep
mov
fisubl
mov
inc
js
sub
add
mov
in
or
cld
sbb
sub
adc
lea
lea
xchg
mov
jp
mov
imul
aad
pop
adc
lcall
cmp
test
cmpsb
mov
jg
pop
ja
into
popf
inc
js
in
es
shll
pop
sbb
iret
pop
add
fmuls
and
loope
or
fucomi
pop
jecxz
mov
pop
or
fwait
jb
jae
or
add
inc
repnz
push
and
push
fsubl
mov
mov
or
ret
jae
std
push
xchg
mov
xlat
sti
cmp
pushf
cmpsb
lret
aad
xor
sti
mov
pop
and
std
sub
test
xchg
pop
testb
jo
fmuls
bound
mov
jl
pop
jge
test
dec
aaa
push
iret
push
jo
pusha
sbb
btc
imul
inc
pop
ret
loopne
shrb
test
imul
mov
in
jbe
dec
mov
mov
cmp
jg
cmp
or
popa
mov
xchg
rdpmc
aas
lahf
sbb
jo
mov
pop
das
lcall
or
jno
mov
xchg
and
jge
in
pop
jns
shrb
jae
pop
mov
pop
sahf
mov
push
and
mov
mov
hlt
pop
mov
xlat
loop
fildl
inc
or
add
mov
adc
in
mov
insb
sub
inc
sarb
jg
push
xor
mov
cmp
xchg
test
pusha
test
mov
adc
ror
cmpsb
sub
mov
ret
inc
jnp
xor
or
cltd
stc
cmpb
daa
mov
jb
sbb
test
push
push
icebp
or
sub
pop
data16
sub
loop
fimuls
iret
fnstsw
add
xor
push
mov
xchg
mov
or
add
pop
arpl
and
mov
cmp
jle
sub
cld
adc
mov
add
xor
pop
push
dec
dec
movb
pop
dec
call
clc
test
and
sub
mov
jmp
cld
jb
fmuls
mov
adc
jae
dec
arpl
pop
popa
xor
jne
mov
repz
das
in
fs
into
insb
mov
mov
or
mov
add
ja
loopne
test
dec
cmp
pop
cltd
sbb
jmp
ja
pop
repnz
pop
test
cwtl
jmp
in
and
insl
fsts
sbb
out
mov
xchg
imul
push
mov
sub
fidivrl
jecxz
jecxz
jb
sarb
jle
les
inc
mov
and
das
add
xlat
or
push
in
push
xor
and
pop
jge
add
or
inc
pop
ret
dec
test
and
pop
and
ss
inc
dec
and
inc
jp
popf
cmp
insb
add
xchg
sbb
ljmp
mov
push
or
adc
daa
push
mov
iret
add
adc
lds
jecxz
ss
sbb
cmp
out
fs
out
lds
ss
jle
inc
mov
shr
push
mov
add
and
inc
fdiv
mov
jns
cmp
sbb
nop
push
mov
inc
xor
mov
cmpsb
jne
add
rcrl
lods
dec
stos
daa
fstps
jo
mov
sbb
inc
xor
enter
pushf
mov
add
arpl
es
adc
mov
adc
push
stos
sar
mov
adc
and
ja
cmc
adc
adc
lret
adc
data16
movsb
mov
sbb
xor
ljmp
jecxz
icebp
xchg
lock
jge
jnp
jle
adc
fwait
sti
mov
test
jg
mov
je
add
clc
push
sub
xadd
jns
loopne
xchg
pop
mov
sbb
adc
mov
pop
loope
jns
inc
popa
mov
xchg
call
mov
mov
out
flds
cwtl
das
loope,pn
test
pop
icebp
outsb
test
xor
pop
hlt
or
aad
and
xlat
imul
push
shr
mov
jl
inc
inc
xchg
outsb
mov
movsb
stos
aam
mov
arpl
add
jecxz
les
sti
out
lods
aas
or
cmp
adc
cmpl
arpl
xchg
adc
shll
cmp
mov
dec
fcmove
mov
inc
xor
clc
jg
sbb
cmc
cwtl
sahf
lret
jns
mov
mov
out
mov
mov
inc
sbb
in
or
jg
sbb
lods
sahf
data16
shlb
rcrb
js
cli
fstpl
and
mov
xor
pop
mov
rcl
adc
pop
pop
push
rorb
data16
cmp
sbb
jg
in
fsubl
jns
dec
rclb
scas
hlt
or
or
add
xor
add
js
or
dec
fnstcw
rcll
jae
lcall
xchg
jp
mov
dec
jg
pop
imul
inc
mov
aaa
lcall
push
cwtl
or
mov
shll
rcrb
mov
mov
loop
roll
sub
fbstp
sbb
test
ljmp
cmp
je
cmp
clc
push
out
lods
adc
shll
jne
xchg
out
jmp
shll
xchg
lahf
enter
dec
daa
sti
xchg
jl
in
jo
scas
and
mov
data16
sti
shl
add
push
int
fdivr
push
hlt
hlt
jge
lea
push
add
and
cld
xchg
out
jo
jnp
pop
xchg
ret
imul
mov
inc
xchg
add
mov
push
mov
out
mov
pop
jle
push
js
ja
aad
and
mov
outsb
pop
add
stos
data16
test
mov
mov
add
aas
mov
hlt
jns
mov
sbb
fldt
jg
jns
push
fptan
cmp
sbb
scas
and
mov
pop
les
fsubl
push
pushf
lods
adc
aam
adc
dec
stos
les
inc
lret
dec
inc
pop
add
add
mov
xchg
aam
dec
outsb
fsubrl
push
ljmp
and
sbb
movsl
leave
mov
or
inc
je
icebp
mov
lea
pop
mov
shlb
mov
lea
mov
or
sbb
shll
dec
jae
mov
jns
test
daa
test
aad
mov
mov
push
xor
frstor
and
data16
movsb
setl
ljmp
xchg
adc
call
jecxz
popa
sbb
mov
repz
pop
cmp
out
sahf
rcl
pop
movsl
lds
jnp
loope
sbb
cmp
cwtl
jo
fcmove
jnp
mov
pop
xchg
jae
sub
mov
adc
mov
subl
xor
and
adc
add
in
ror
adc
pop
stos
cltd
loop
aas
cltd
xchg
rorb
lret
jl
sbb
jb
out
pop
cmc
test
xchg
mov
mov
dec
fisttpll
jle
or
xor
push
jne
incb
jnp,pt
sub
or
xchg
nop
mov
inc
cmpsl
inc
or
sahf
jae
jle
cmp
mov
push
dec
dec
jmp
sbb
std
call
clc
or
stos
and
fdiv
idivl
mov
jno
fwait
sbbl
xor
add
imul
mov
pop
outsb
or
loope
inc
mov
mov
xlat
sub
std
mov
shrl
cld
sub
add
pushf
jo
adc
lea
cmp
inc
bound
mov
fwait
mov
pop
adc
test
test
adc
dec
out
cs
fimull
movsl
les
std
data16
dec
mov
outsl
or
lea
ret
jnp
and
gs
xor
cld
cmp
gs
lahf
pop
sbb
lea
add
ret
sbb
adc
sbb
jge
dec
xor
push
stos
or
mov
gs
push
mov
push
and
cmc
lret
sbb
sar
hlt
and
pop
mov
or
rcrl
jbe
sub
andb
xlat
lret
popf
adc
shlb
loopne
out
pop
stos
mov
iret
jne
lods
and
ret
test
push
insl
stos
jne
lock
cmp
fstl
mov
jno
scas
inc
ror
mov
into
fwait
and
mov
rol
jmp
aaa
push
jne
lds
push
jmp
cmp
xchg
or
jp
adc
bnd
sbb
inc
lods
xor
jne
add
nop
xchg
mov
pushf
out
mov
or
jmp
aas
push
cwtl
stos
je
mov
dec
imul
sbb
xchg
inc
jmp
sbb
adc
xchg
pop
xor
and
mov
bound
lret
gs
clc
std
ljmp
and
ss
ja
dec
hlt
mov
and
cmpsb
dec
or
lea
add
mov
jnp
lods
cmpsl
push
add
mov
imul
sti
and
or
push
not
push
fisubrs
jne
rolb
fdivr
or
cli
mov
rorb
add
iret
xchg
scas
cltd
adc
sbb
or
aad
and
dec
cmp
push
scas
testl
mov
stc
xor
imul
jne
ljmp
inc
xchg
xchg
or
sbb
dec
cli
int
push
cmp
andb
pop
jecxz
shrb
movsb
add
or
sbb
lods
lahf
and
xchg
lods
mov
mov
imul
push
cli
adc
fs
clc
pop
adc
push
adc
nop
mov
lock
ret
mov
mov
movsb
jo
gs
int
or
arpl
and
xor
xchg
stos
or
sbbb
movsl
xchg
xchg
fcomps
add
lods
mov
int3
inc
lds
or
and
int
das
lock
lcall
push
arpl
xchg
push
mov
imul
sbb
lock
sbb
ja
imul
test
or
fidivl
jg
aaa
not
stc
mov
mov
or
loopne
xchg
aad
jno
lods
mov
fistl
sub
mov
adc
pushf
pusha
stos
pop
xchg
xor
mov
fcompl
cmc
jge
testl
xchg
jo
testl
sub
shll
std
popa
mov
mov
mov
ffreep
jno
in
inc
aaa
and
mov
cmp
faddl
xor
cs
push
mov
es
sub
jg
rorl
push
pop
xor
nop
ficoml
cmpsb
add
adc
stos
sbb
sbb
pop
mov
mov
jb
cmpsb
mov
and
in
fdivp
xchg
test
push
fdivs
int
push
jl
cmpsb
pop
mov
xchg
sub
es
xor
pop
push
shrb
mov
out
inc
pop
dec
pop
cmp
push
xchg
mov
fs
in
shlb
fsubrl
cmp
adc
das
mov
ja
xchg
sbb
jb
pop
icebp
fs
jl
int
xlat
xor
iret
xor
lcall
push
adc
pop
rorl
jmp
jnp
out
xchg
adc
imul
int3
in
stc
in
cmc
pmulhw
inc
sbb
sti
dec
mov
jns
or
rolb
sub
xor
cmp
lret
push
push
jp
inc
hlt
mov
mov
iret
fidivs
push
mov
imul
mov
sub
mov
mov
pop
adc
xor
popf
and
xchg
adc
xchg
sub
or
inc
andl
cs
insb
push
mov
scas
dec
ss
stos
stos
movsb
das
je
xor
sbb
notb
fwait
xor
xchg
movsb
xorb
push
imul
cmp
ret
adc
and
jb
in
mov
and
cmp
inc
inc
cwtl
pop
orl
pusha
jne
dec
fimuls
test
and
fsts
cli
repnz
jae
imul
and
dec
fcos
cwtl
xor
shlb
jmp
sbb
pop
jne
pop
lods
xchg
das
insl
int
jg
aas
cmpl
cmp
push
mov
fcomps
lds
push
xchg
stc
in
mov
xchg
jge
jns
mov
loopne
push
cmp
imul
jp
popf
xlat
mov
mov
enter
sbb
bound
jge
xchg
adc
inc
lcall
xor
add
sbb
xlat
adc
mov
testl
lret
cmp
repnz
fistps
bound
iret
add
xchg
push
mov
in
dec
movsb
lcall
cmpsb
inc
dec
addr16
mov
and
je
jle
jg
mov
sub
push
push
aad
jns
loope
jp
mov
insb
pop
inc
out
insb
les
rcl
aaa
xchg
and
icebp
loopne
test
xlat
inc
ret
loope
out
adc
imul
mov
lret
mov
stc
mov
or
stos
dec
xchg
xorb
jbe
or
mov
push
in
dec
inc
out
push
aam
es
pop
inc
iret
cli
xchg
js
xor
mov
add
stos
push
or
cmc
ljmp
in
es
sbb
mov
sahf
push
mov
sbb
xor
js
imul
adc
push
fiaddl
stos
sbb
out
repnz
out
or
or
fs
dec
lcall
sbb
scas
mov
mov
outsb
mov
dec
cmp
pop
xor
push
test
clc
sbb
enter
lret
mov
mov
dec
popa
xlat
movsb
add
enter
sub
sbb
and
push
and
cwtl
repnz
daa
pop
xchg
push
cmp
push
mov
enter
mov
mov
cli
pop
and
decl
pop
lods
or
out
xor
mov
mov
or
rorl
mov
add
jbe
out
les
enter
pushw
sbb
pop
je
or
pop
push
ja
lods
xchg
dec
mov
inc
mov
add
mov
mov
add
lret
les
fisttps
lock
dec
mov
aaa
icebp
mov
addw
mov
sbb
rorb
pop
adc
and
sbb
lret
aam
outsl
push
das
xchg
in
clc
call
add
jmp
jecxz
pop
pop
add
or
repnz
pop
pushf
mov
jb
clc
int3
movsl
sahf
xchg
cmp
lods
xchg
sbb
imul
cmp
mov
dec
cld
dec
stos
bound
cmc
out
sub
cmp
lods
insl
mov
fidivrl
cs
xchg
mov
test
sub
ss
mov
test
outsb
xchg
cwtl
lret
iret
lahf
push
adc
sbb
jmp
fdivr
mov
push
sbbl
ja
and
and
push
mov
and
cmc
rcll
sbb
lcall
mov
xor
lods
gs
jo
into
sub
xor
push
or
pop
je
jo
or
inc
pop
notb
sahf
inc
std
test
push
loop
xor
dec
push
dec
sub
lcall
add
push
cli
icebp
ret
out
mov
add
in
pop
test
xor
jecxz
xor
sbb
int
inc
adc
test
movsb
cmp
dec
fs
sub
imul
leave
jae
ret
mov
jge
mov
lret
inc
push
cmp
aaa
dec
xchg
cli
cmp
push
movb
xchg
and
add
and
pop
push
lea
std
pop
and
dec
std
mov
repnz
outsb
lar
inc
xchg
mov
pop
cmp
test
lds
jb
xchg
add
dec
test
pop
cmp
outsl
adc
sub
push
inc
inc
sbb
je
dec
test
stos
cmp
mov
movsb
adc
mov
or
ss
rcrl
mov
mov
jp
push
fstpt
cmp
mov
std
cmc
aaa
add
ljmp
mov
adc
cmp
fs
lcall
mov
into
into
cmp
push
out
jnp
test
daa
rol
or
insl
sub
in
jne
jae
jl
pop
sub
xchg
mov
mov
push
cltd
inc
xor
aad
sbb
in
sub
cmc
loopne
and
push
lret
mov
stos
xchg
fwait
sbb
repnz
test
loope
dec
xor
cmpsl
xor
cltd
pop
out
adc
push
mov
pusha
and
test
push
xor
pop
cltd
push
pop
dec
jl
and
dec
lods
jle
jae
pop
xlat
icebp
xor
aad
in
js
scas
or
scas
call
scas
push
int
lods
fadd
and
popf
out
adcl
notb
fdivp
mov
adc
mov
jbe
fwait
and
or
ss
mov
sbb
mov
cld
sti
sub
jmp
insb
fwait
leave
ret
outsb
sbb
stos
adc
out
adc
cmp
cmpb
xor
inc
pop
push
adc
pusha
mov
add
shl
arpl
orl
push
xchg
bound
ficompl
sbb
in
gs
cmpsb
es
adc
in
test
mov
outsl
mov
xor
out
clc
ror
cmp
add
push
dec
out
lock
cmp
xchg
mov
adc
or
ljmp
cmp
mov
push
lds
lock
jg
inc
mov
hlt
adc
pusha
cli
mov
repz
fcmovnb
stc
cmp
bound
clc
mov
mov
xchg
xor
fmuls
mov
rcr
in
stc
enter
sbb
loope
sti
mov
sbb
and
daa
aad
xchg
fcoml
shlb
repz
testl
hlt
loope
pop
pushw
cmp
and
aam
xchg
push
aaa
dec
push
jp
push
xor
pop
sbb
lods
aas
sub
int3
mov
in
addl
inc
mov
xchg
adc
stc
mov
push
xor
fildl
fs
out
push
lods
jae
mov
adc
pop
ficoml
sub
adc
push
loop
sub
test
add
cmp
cs
xchg
inc
dec
jg
pop
call
mov
ficoms
pop
stc
sub
inc
repnz
or
xchg
daa
fcoms
lret
push
stos
and
dec
fndisi(8087
adc
pop
mov
add
movsb
sub
nop
fwait
int3
pop
jne
jecxz
sbb
cmpsb
fs
enter
scas
push
and
xor
mov
and
or
jno
je
add
fstpl
jb
cmp
aaa
shlb
jae
xchg
mov
push
push
add
lahf
push
add
rcr
sub
sahf
or
pop
cmc
das
add
xchg
xchg
mov
ds
push
sub
out
das
ljmp
icebp
cli
inc
mov
orb
add
and
or
lea
in
cmovbe
add
pop
dec
fcompl
fstpl
outsb
call
jo
lods
popl
sbb
jae
sbb
gs
cmove
pop
ds
push
cmpl
scas
cmpsb
add
mov
push
add
loop
adc
sbb
sub
xor
xchg
stc
aad
pop
bound
add
je
and
aad
inc
mov
daa
les
js
adc
ret
lds
pop
inc
sbb
je
test
lret
arpl
mov
cmp
inc
pop
cltd
les
mov
hlt
and
cmp
add
insb
out
sub
sti
cmp
gs
sbb
jmp
test
push
jo
cmp
add
bt
mov
icebp
inc
lds
push
add
cs
inc
decb
ret
jl
mov
lcall
lcall
sbbb
clc
into
cmp
mov
nop
arpl
or
push
ljmp
aam
cli
jge
pusha
jge
adc
jnp
bound
push
loope
out
ret
stos
lahf
cmp
push
adc
push
push
lods
push
adc
das
enter
pop
ja
call
jl
jns
in
xchg
xchg
out
mov
das
hlt
insb
adc
jecxz
aaa
add
dec
repz
jl
push
inc
call
or
cmpsb
mov
mov
dec
add
inc
insl
fsubr
add
or
xlat
lods
or
call
stc
fstpl
cli
and
add
lcall
push
push
add
fs
xchg
repnz
sbb
insl
ret
jp
in
insl
mov
mov
or
push
xchg
dec
fnstsw
subl
shrl
sahf
cs
jnp
inc
push
js
in
adc
popf
out
cltd
xchg
pop
jbe
lret
jle
repnz
in
int3
andb
xor
ficompl
orb
pop
jno
mov
fsubrl
xchg
mov
jns
dec
xlat
imul
mov
sarb
dec
jp
int
pop
lock
arpl
scas
xchg
outsl
xchg
cli
pop
fdivrl
adc
adc
inc
fisttpll
sbb
jb
lea
das
and
cmpsb
daa
xchg
jo
rcll
xchg
or
pushf
cltd
mov
push
or
lods
mov
test
ret
rorl
sbb
es
jne
inc
or
sub
xor
pop
fucomi
hlt
fcoml
rorb
inc
jl
pop
mov
movsl
and
fucom
in
ret
testb
cmp
cmp
frstor
arpl
mov
aam
cli
inc
jp
popf
nop
fcompl
js
sub
mov
pop
icebp
jbe
mov
cmp
aas
mov
or
jb
andb
ja
inc
addl
dec
xor
movsb
adc
sahf
and
xor
iret
mov
cmp
fistpll
lds
and
jnp
jnp
fs
xlat
lret
pop
push
sub
sub
jl
jo
lock
outsl
add
mov
add
outsb
push
xchg
jmp
sbbb
hlt
sbb
enter
pop
stos
jp
stos
adc
xor
adc
xor
push
lea
xchg
loope
movsb
push
and
gs
cmp
sub
and
dec
pop
and
mov
loop
push
add
cld
sbb
pop
sbb
inc
andl
dec
nop
aaa
dec
or
sub
outsb
xchg
or
add
push
mov
inc
and
js
sub
sbb
fwait
ds
mov
test
mov
popa
or
mov
movsl
arpl
inc
rcll
andl
andb
sahf
cmp
xlat
test
push
dec
cmp
stc
stos
xchg
sbb
ds
aad
add
push
rorl
or
enter
mov
jno
push
movsl
push
or
push
ljmp
xchg
in
testb
adc
pop
jo
stc
addb
lret
std
mov
out
enter
or
fstpl
sbb
nop
dec
add
rclb
lods
jmp
nop
mov
and
addr16
push
push
sbb
add
or
xor
sub
pop
sub
das
nop
pop
pop
pop
lcall
in
data16
repz
and
das
xchg
fldl
xchg
xchg
jmp
cmc
or
popa
daa
call
dec
sbb
call
out
mov
mov
call
repz
insb
pop
mov
dec
and
or
xor
in
and
add
lret
adc
mov
jecxz
inc
adc
sub
loopne
dec
mov
mov
rorl
mov
jo
sbb
sbb
jno
fists
sub
ss
mov
loopne
lret
xchg
push
add
pop
sub
mov
adc
lahf
push
jae
in
sub
or
jmp
movsl
repz
mov
es
mov
outsl
pop
mov
pop
pop
xlat
pushf
jg
lods
pushw
popa
mov
sbb
std
pop
and
ss
xchg
adc
outsl
ret
sub
sbb
dec
shlb
mov
add
lret
mov
inc
mov
std
fimuls
int
push
mov
fs
sub
and
pop
pop
push
leave
add
fisttpll
insl
leave
ds
push
test
mov
adc
dec
mov
test
pop
xchg
mov
mov
aad
jl
test
adc
mov
icebp
pop
xor
movsb
movsb
imul
inc
sarb
lahf
jecxz
ja
bound
push
out
lahf
jns
sbb
xor
or
popa
pop
out
jne
pop
leave
cli
sarb
pop
jmp
mov
loopne
not
jns
in
rorl
arpl
cmp
inc
mov
xchg
ret
ds
mov
lods
cli
mov
mov
cmp
sti
lcall
das
or
pushf
fs
out
adc
imul
mov
jmp
mul
outsl
and
jg
icebp
push
xor
aaa
jmp
nop
test
cmp
xor
movl
adc
cs
out
jno
jno
pop
movsl
push
icebp
sbb
cmovns
das
push
mov
fildll
or
movsl
flds
out
jae
movsl
sbb
out
adc
push
add
inc
pop
das
sbb
sbb
lods
notb
sub
ret
hlt
sbb
xchg
incb
dec
lret
push
mov
lret
mov
out
les
subb
xchg
sub
sub
aas
arpl
scas
bound
mov
mov
and
std
mov
addb
mov
jb
inc
movsl
mov
shll
mov
stc
icebp
lcall
int3
out
adc
data16
lret
pop
cmp
cmp
adc
jae
fimull
jb
jb
sbb
rcrl
call
cmpsb
fdivrs
aaa
leave
adc
mov
test
pop
arpl
fdivrs
mov
adc
inc
pop
inc
mov
or
out
mov
lahf
adc
lea
inc
add
or
arpl
jle
rcrl
stos
iret
scas
insb
cmp
push
pusha
push
dec
outsl
loopne
fsubrs
ja
lret
into
jbe
xor
dec
sbb
mov
repnz
icebp
test
lods
cwtl
dec
xchg
pop
sbb
xor
enter
adc
pushf
fildl
push
ja
scas
or
dec
test
std
lahf
aam
pop
cmc
iret
jno
sbbb
push
jns
mov
shl
push
imul
push
mov
cmp
movsl
push
and
fidivrl
adc
pusha
insb
cwtl
sbb
shll
mov
data16
les
sub
jae
mov
inc
and
cmpsb
movsb
push
aam
xchg
aad
xchg
pop
add
js
gs
adc
mov
fsubrs
xchg
or
pushl
je
dec
das
sbb
sbb
mov
frstor
rcll
in
fs
and
add
test
xchg
push
add
loope
jle
ja
xchg
sbb
cmp
mov
pushf
sti
push
imull
jl
notb
or
in
jge
notl
inc
mov
das
les
xchg
testb
les
insb
jmp
push
in
add
xchg
in
sbb
maxps
xlat
dec
xchg
rorl
movsb
push
cld
movsb
cmp
int
and
jl
cld
xchg
cmc
add
jo
inc
daa
rclb
cwtl
push
imul
adcb
andb
pop
jb
outsb
addl
testl
in
dec
frstor
enter
int
and
jl
cld
xchg
cmc
add
jo
inc
daa
rclb
cwtl
push
imul
adcb
andb
pop
jb
outsb
addl
testl
in
cmp
add
pop
pop
xlat
inc
and
ss
sbb
and
jae
xchg
out
in
jle
pushf
adc
in
bound
mov
adc
ljmp
stc
mov
and
jge
je
out
pop
mov
mov
cs
pop
int
addr16
xchg
or
js
mov
mov
repnz
pop
int
loopw
mov
inc
mov
push
rolb
rolb
sbb
lock
xorl
cmp
lahf
pop
mov
movsl
mov
cmpsb
shll
mov
cmpsl
ret
dec
lds
iret
das
dec
ret
ret
cli
ret
and
lds
xchg
mov
outsb
cmp
lcall
and
repz
xchg
ljmp
sbbb
add
cld
out
push
xor
pop
repnz
hlt
xor
push
inc
imul
pusha
xor
and
shrb
and
xchg
jmp
jle
mov
xchg
mov
fnstsw
arpl
jmp
xchg
cltd
jcxz
inc
adc
popa
sbb
pop
not
push
xlat
addb
aad
pop
ljmp
xor
xor
sbb
mov
fiadds
dec
fnsave
es
inc
mov
add
sub
icebp
outsl
lcall
jp
in
push
stc
gs
pushf
outsl
fiadds
mov
clc
fwait
add
rcrl
ror
outsl
lcall
mov
lods
and
pusha
or
sbb
popf
or
xchg
or
jle
mov
fstpl
scas
pop
mov
cltd
dec
cmp
add
inc
int
and
jb
mov
gs
pop
mov
fisttps
in
adc
jmp
shll
frstor
out
data16
xchg
outsb
movsl
sub
gs
repz
jne
mov
int3
aas
aam
cltd
or
insl
xchg
add
jge
je
jo
cwtl
push
imul
and
movsb
cmp
inc
inc
xlat
inc
and
aaa
outsb
stc
imul
and
inc
js
jno
jecxz
movsl
inc
shll
inc
and
pusha
jecxz
adc
sub
gs
dec
mov
xchg
adc
imul
enter
dec
mov
mov
jg
mov
out
insb
loop
je
ret
inc
shll
cld
fwait
jbe
je
pusha
pop
repnz
mov
jns
push
lds
shll
ret
push
lds
push
ja
loope
push
sahf
or
cmpsb
insl
and
and
pop
cmp
and
push
mov
fdivrp
jnp
mov
jmpw
jmp
jne
jne
out
add
sub
mov
xchg
push
lds
std
or
inc
inc
and
xor
cmp
mov
fwait
add
ss
inc
mov
sbbb
out
sbb
movsl
sbb
mov
adc
pop
xchg
adc
sub
jecxz
pop
insb
or
sbb
lea
jg
jmp
fsubrl
int3
push
rolb
shlb
test
mov
stos
cmp
dec
or
mov
pushf
sti
push
cli
jo
xorl
inc
out
mov
pop
aad
sub
xor
jno
xorb
jnp
mov
dec
les
int3
and
out
sbb
dec
fnsave
pop
into
pop
cmp
and
je
lea
setg
or
imul
push
push
xor
and
mov
xchg
jle
or
hlt
outsb
cld
fwait
jbe
iret
push
lret
ljmp
sub
cmp
or
pushf
xor
adc
popf
mov
test
push
test
pop
xchg
jb
inc
and
pop
loop
notb
xlat
mov
test
bound
jnp
push
xlat
inc
and
mov
cltd
clc
or
orl
push
fisttpl
fnsave
jae
outsl
or
in
add
std
or
jns
addr16
xor
scas
cmp
mov
jle
add
adc
add
popf
or
sbb
aad
rolb
nop
push
popa
nop
js
dec
fstpt
addr16
pop
dec
fmuls
fcomps
add
adc
xchg
pop
xchg
repnz
pop
xchg
add
xor
clc
or
outsb
or
dec
ja
jge
negl
mov
lock
lret
cli
imul
insl
fcoml
jo
arpl
cmc
inc
movsl
add
inc
loopne
adc
addr16
mov
fistpl
test
adc
data16
xchg
outsb
mov
pop
lret
scas
pop
mov
ret
push
lds
je
add
push
add
repnz
pop
repnz
xchg
lods
and
pop
mov
xchg
js
movsb
ret
fisubrl
mov
pop
enter
sub
aaa
push
mov
fisubrl
dec
fdivrl
bound
sti
sahf
insl
test
xchg
add
jno
push
shlb
popa
nop
js
stos
cmp
or
cmpsl
push
adc
hlt
insb
loop
je
loop
jmp
push
test
push
mov
inc
shll
scas
leave
cmp
cmpl
call
setae
xchg
inc
sub
iret
dec
frstor
aaa
ret
mov
inc
mov
cs
aas
pop
test
mov
outsl
or
out
and
push
jg
push
cld
pop
fs
bound
push
xor
or
jge
inc
and
cmp
scas
aas
pop
test
xor
xor
daa
int
loop
pop
loop
insb
cld
xchg
cmc
add
xor
cmpsl
aaa
cmpsl
ret
sub
push
ret
cmpsb
push
mov
ds
mov
mov
or
sbb
sbb
icebp
popa
add
pop
push
pop
jp
and
dec
fidivrs
add
sahf
sub
xor
sbb
pop
jno
and
das
cmpsl
aaa
push
mov
mov
cmpsb
mov
xchg
repz
out
popa
icebp
nop
arpl
negb
push
lret
test
xor
inc
rolb
rclb
test
and
lock
leave
pop
cmp
and
jno
xorb
jno
xorb
aas
scas
lret
lock
outsl
lcall
cmpsl
ret
mov
test
pop
iret
stos
pop
shlb
mov
cwtl
or
mov
xchg
adc
mov
cltd
sbb
cmpsb
xor
scas
dec
pop
fdivl
in
push
lea
sahf
or
cmpsb
dec
add
cmp
lret
pop
ds
pop
repnz
xchg
cwtl
sbb
inc
int
and
cmp
dec
fdivrs
push
xor
sub
cmp
or
mov
mov
mov
adc
dec
fmuls
fcomps
imul
sbb
sbb
arpl
mov
xor
pop
mov
inc
fisttpll
out
into
push
les
fistpll
in
mov
in
sbb
jmp
in
jg
pop
lds
iret
jp
mov
xor
or
inc
mov
cltd
clc
or
or
pop
sahf
or
cmpsb
inc
fistps
stos
pop
mov
aam
mov
inc
mov
daa
mov
xchg
sbb
rolb
shlb
insb
loop
je
dec
ret
ret
cli
push
mov
dec
mov
je
insb
sbb
fs
leave
pop
cmp
and
mov
inc
mov
in
ljmp
aad
out
std
insl
hlt
pop
out
leave
pop
cmp
and
pop
int3
stos
data16
xchg
push
roll
aad
or
sub
jo
xorl
into
jno
ret
ret
in
sbb
shlb
sbb
inc
in
aam
dec
leave
adc
mov
stos
into
cmp
inc
mov
cmp
mov
ret
mov
repz
lea
mov
xchg
adc
sbb
call
movb
adc
xor
dec
pop
into
test
mov
dec
fidivrs
mov
sbb
adc
test
test
lock
push
mov
pop
leave
pop
cmp
sub
scas
cmp
mov
xchg
add
cld
xchg
cmc
add
fldl
mov
mov
sbb
pop
hlt
repnz
add
xor
push
dec
fnstcw
fdivrl
inc
and
pop
mov
xchg
data16
push
in
or
pop
mov
inc
mov
sahf
ja
push
lret
mov
add
sub
aam
int3
stos
data16
mov
in
sbb
xchg
repnz
jecxz
jecxz
jne
pop
fisttpl
fnstsw
inc
leave
pop
cmp
and
jno
jecxz
out
adcl
test
jmp
popf
adc
loope
adc
and
dec
frstor
mov
xor
dec
mov
test
mov
xlat
sete
insl
pushf
sub
add
pop
imul
cli
fs
popf
insb
lds
popf
or
jb
xchg
fwait
push
xchg
repz
mov
aad
imul
cmp
dec
ja
imul
das
add
aad
lret
scas
pop
mov
push
cmp
push
sub
push
xlat
inc
and
xor
dec
fistpll
fnstcw
push
popa
nop
aaa
adc
xor
outsl
cmp
js
fs
sbb
movb
sbb
xchg
jg
jbe
cmpl
push
lds
mov
mov
and
mov
mov
cs
dec
push
in
and
xlat
push
ret
cmpsb
push
mov
mov
cmp
out
jbe
cmpl
dec
fdivrl
ret
cmpsb
push
in
push
mov
and
movsl
or
xor
pop
aas
lret
push
mov
and
cmc
ja
gs
sbb
fs
popf
insb
mov
pop
leave
test
mov
popf
or
test
pop
test
loop
cmc
pushf
outsl
test
inc
shlb
jmp
jge
and
jae
push
add
or
push
xor
daa
add
jecxz
push
in
inc
rolb
shlb
push
les
jno
jecxz
cltd
or
stos
cmp
mov
scas
insl
ljmp
stc
out
adc
or
insb
push
mov
jle
cmp
mov
inc
mov
sahf
add
mov
push
lcall
pusha
pop
repnz
mov
xchg
adc
pop
fbld
adc
cmp
inc
and
cmp
dec
ret
mov
xor
add
cmp
jmp
adc
lock
jp
dec
les
int3
imul
sbb
and
xchg
mov
adc
in
sbb
jle
addr16
sbb
xchg
jge
pop
leave
test
lods
push
xchg
or
je
mov
inc
mov
jne
jnp
in
dec
jnp
js
ljmp
mov
jge
pop
enter
and
pop
cmp
outsl
enter
push
mov
ljmp
push
cld
inc
out
out
mov
or
aas
scas
lret
push
xchg
add
lea
sub
lds
and
xor
scas
jp
or
stc
imul
adc
push
rolb
sarb
ficomps
stos
pop
xchg
movsl
xor
push
xor
es
gs
pushf
outsl
xor
popa
jbe
cmpl
lds
iret
and
push
mov
enter
es
cmp
inc
rorl
mov
mov
jne
mov
xlat
inc
aad
dec
ljmp
dec
fstpt
sub
sbbl
xor
xchg
or
fldt
hlt
push
cld
push
lods
cmp
push
shlb
mov
not
dec
fnstcw
frstor
pop
ljmp
pop
cmp
sbb
call
or
sbb
movsl
xor
mov
jg
arpl
adc
add
push
aaa
ret
xchg
add
sahf
ja
xor
mov
pusha
call
scas
and
sbb
jne
stos
cmp
dec
iret
inc
shll
pushf
sti
push
loop
test
lahf
cli
or
xor
adc
outsl
lcall
inc
and
mov
mov
dec
mov
push
mov
sbb
or
in
sbb
or
jae
add
stc
imul
stc
cwtl
imul
cs
outsl
ljmp
stc
in
push
xchg
repz
in
into
pop
cmp
lods
aas
scas
lret
rorl
mov
push
cld
dec
or
pop
int
fimull
inc
and
jns
aad
sub
push
fisttps
or
js
mov
xchg
xor
adc
fisttps
flds
addr16
sbb
or
jo
xorl
clc
adc
dec
fstpt
lock
bound
loopne
notl
dec
rclb
addr16
adc
lret
lret
loopne
adc
add
push
mov
jmp
mov
jns
jl
mulb
push
ret
push
mov
mov
sbb
sbb
fimull
push
mov
jo
xorl
imul
repz
add
sbb
jns
mov
sbb
sub
gs
pushf
outsl
jbe
cmpl
add
push
shlb
add
ja
and
push
shll
xor
and
fimuls
add
add
imul
ret
mov
mov
mov
xchg
pop
bound
push
in
inc
int
and
push
je
xchg
testb
sub
in
popa
icebp
nop
arpl
lret
iret
pop
cmp
and
pop
ds
and
dec
out
jle
mov
push
in
sub
fmuls
movsb
push
mov
cmpsb
dec
nop
or
insb
loop
je
lods
xor
xchg
mov
es
mov
lahf
or
cmp
mov
inc
mov
faddl
mov
jmp
xor
and
ljmp
add
mov
cmpsl
ret
and
cmp
dec
cltd
sbb
adcl
jbe
cmpl
aam
sub
addr16
push
mov
xchg
icebp
add
xchg
and
mov
in
jge
idivl
mov
shrb
ja
loope
cmp
and
push
cld
jo
xorl
movsl
push
outsb
cld
xchg
cmc
add
xor
mov
mov
lods
lret
inc
test
fldcw
insl
hlt
pop
out
scas
cmp
rolb
shlb
push
les
fstpt
sub
adc
jl
jne
cmp
mov
xchg
rorb
push
std
pop
lcall
cltd
push
mov
mov
fimuls
add
inc
xlat
mov
scas
xchg
push
test
push
cld
lds
mov
test
into
pop
cmp
ss
sub
mov
jns
popa
daa
mov
inc
mov
fsts
cmpsl
push
cmc
out
std
test
pop
mov
xchg
js
mov
idivb
mov
es
cmp
inc
sbb
repz
sti
push
clc
push
dec
fdivl
in
lea
mov
sbb
inc
xlat
inc
and
xor
fdivs
inc
roll
shll
mov
dec
mov
push
in
fisttpll
mov
test
push
mov
xchg
cmp
cmpsb
xor
scas
sbb
inc
xlat
mov
out
jge
je
xor
js
mov
adc
outsl
repz
cmc
daa
mov
mov
xor
imul
pop
ljmp
nop
fstpl
scas
pop
mov
cli
adc
bound
repz
push
pushf
sti
push
jecxz
mov
inc
mov
loop
loope
jae
add
or
mov
mov
sbb
adcb
inc
shll
sti
popa
icebp
nop
arpl
fildl
mov
std
cld
xchg
cmc
add
hlt
imul
sub
sbb
sub
add
std
or
ret
mov
xchg
mov
movsl
int3
aas
fistl
inc
and
aas
mov
mov
sbb
loop
sti
sahf
insl
mov
pop
leave
test
mov
cmpsl
aaa
push
mov
mov
inc
sub
jp
adc
mov
and
cmp
dec
fcoml
mov
leave
test
mov
out
jl
testb
and
in
sbb
jb
in
pop
int3
inc
and
icebp
nop
arpl
mov
mov
mov
es
jmp
and
pop
leave
test
test
icebp
popa
add
inc
test
mov
and
xchg
pusha
fistpll
test
pusha
notb
sbb
xchg
aas
test
xchg
movsb
ret
ds
int
gs
sbb
cmp
mov
sub
inc
les
int3
lea
cltd
clc
or
lods
sub
add
stc
imul
outsb
or
sbb
push
cld
pop
jb
push
inc
mov
scas
outsl
out
adc
or
sub
arpl
xchg
gs
lret
test
cmp
pop
jg
jge
notl
mov
jbe
jbe
loopne
cmc
lock
bound
sbb
add
aaa
sub
and
mov
mov
cmc
and
mov
xchg
and
push
lds
or
fdivl
in
out
jno
xorb
in
jge
divl
mov
gs
adc
notl
insl
out
jl
notb
sub
mov
ret
sbb
mov
sbb
int3
dec
fistpll
mov
mov
subl
lds
dec
rcll
das
or
mov
xchg
repz
in
add
sbb
adc
gs
jne
out
sbb
lahf
punpckhdq
pop
stos
imul
fmull
mov
aad
dec
movsl
lock
insl
int3
xor
cmp
mov
xchg
or
in
mov
int3
gs
add
sbb
and
pop
int3
stos
shr
ja
xorb
sub
or
fistpll
test
mov
nop
repz
xorl
imul
adc
push
and
push
shlb
dec
mov
or
pop
je
xchg
pushf
sti
push
fnsave
xchg
cmc
add
mov
fwait
decb
psubd
jge
addr16
push
inc
int
and
and
push
shlb
mov
mov
add
cmp
mov
xchg
pop
iret
stos
pop
test
inc
mov
stos
push
les
int3
and
rcll
xor
xchg
push
pushf
sti
push
mov
js
sub
arpl
xchg
testb
repnz
out
jb
xchg
mov
pushf
je
inc
and
pop
cmpsl
add
std
or
xor
xchg
adc
test
mov
fisttps
flds
ljmp
jg
pop
jp
jns
fs
popf
insb
test
jle
mov
mov
rorb
dec
xorl
jno
insl
hlt
pop
loope
and
or
or
rcll
sub
lahf
punpckhdq
je
and
stc
pop
roll
aad
jge
js
ljmp
xchg
gs
push
arpl
outsl
or
testb
sbbl
call
frstor
mov
sbb
jb
xchg
pop
push
xor
jns
mov
xchg
movsb
ret
ds
sub
addr16
sbb
inc
and
xor
jg
into
dec
fistpll
mov
and
pop
xchg
add
jnp
fdivl
in
inc
into
pop
cmp
jno
outsb
cld
fwait
jbe
or
inc
into
pop
cmp
xor
addr16
sbb
insb
test
test
movsb
ret
ds
and
sbb
add
xor
jmp
sub
ficoml
cmpsb
push
mov
pop
mov
xor
dec
fidivrs
cmp
sbb
test
ret
pop
enter
sbbl
sahf
sub
pop
and
jl
jbe
cmpl
stc
imul
cmp
sub
fisttpl
shlb
insb
or
out
push
mov
es
lds
mov
test
jp
jp
lret
dec
frstor
sti
push
decl
jmp
mov
push
mov
adc
add
stos
and
mov
fwait
decb
in
pop
jmp
mov
dec
fmuls
fdivrs
or
pop
int3
inc
and
cmp
sbb
imul
insl
int3
and
xor
xor
loop
pop
loop
lds
fldt
cwtl
popf
add
sub
pop
mov
jg
cmp
ret
inc
enter
imul
jmp
push
in
aas
inc
rcll
daa
cmpsl
and
push
lds
and
xchg
outsb
mov
lcall
mov
and
insb
lahf
jg
rclb
addr16
cmp
addr16
jl
jne
push
into
pop
cmp
xor
push
shll
push
mov
jae
jp
pop
xchg
adc
ds
inc
mov
mov
cwtl
pushf
adc
mull
icebp
sbb
shll
ret
push
xor
push
or
mov
mov
cld
xchg
cmc
add
rorl
mov
arpl
cmc
pop
enter
pop
ljmp
int3
push
mov
mov
and
pop
lcall
pop
fmuls
fdivrs
mov
movsl
in
sbb
mov
cmp
inc
das
test
pop
test
lock
lea
mov
jle
bound
xlat
test
mov
and
inc
outsb
in
sbb
add
enter
ret
ds
dec
fnstcw
shlb
jns
jmp
and
es
inc
mov
js
dec
cmp
pop
int
and
aas
pop
adcl
adc
fwait
or
push
aam
sub
fidivrl
iret
stos
pop
fadds
mov
dec
fdivrs
mov
pop
enter
sub
test
lea
aad
mov
arpl
jno
jecxz
push
adc
ljmp
jo
loopne
adc
push
jns
mov
pop
inc
and
cmp
push
shlb
sahf
insl
mov
repz
sbb
inc
lret
lret
cli
push
lea
adc
test
setge
add
std
or
cmp
dec
mov
mov
sbb
fs
sbb
pop
iret
stos
pop
shrb
decb
add
adc
js
mov
push
roll
aad
sub
movsl
cmp
xor
scas
xor
adc
jbe
dec
fstpl
in
jg
fisubs
xchg
test
jecxz
out
jl
notb
in
jge
negl
or
jb
fs
adc
pop
leave
test
mov
setg
or
dec
push
xor
push
out
sbb
add
sbb
outsb
test
mov
das
iret
clc
je
lea
stc
imul
lods
mov
lods
out
jmp
jge
stc
outsl
lcall
add
cmp
lock
bound
arpl
loop
xchg
adc
in
bound
hlt
pop
bound
pop
mov
sahf
or
cmpsb
inc
mov
leave
inc
xlat
mov
test
out
pop
repnz
sbbb
sub
aas
inc
enter
and
inc
es
scas
cmp
mov
lods
ja
jp
in
sbb
push
xor
push
mov
sub
cmp
sub
xor
pop
cmp
outsl
into
push
lret
lods
xchg
or
in
mov
andl
inc
stc
imul
adc
lods
aaa
cmpsl
ret
jae
jl
testb
jle
call
adc
push
aad
divl
jl
jmp
xchg
mov
cmpsl
loope
cmc
pushf
outsl
test
in
mov
cwtl
decl
in
ret
push
lds
xchg
sbb
jns
mov
mov
scas
lret
dec
les
int3
and
notl
xor
push
lds
into
inc
shlb
loopne
jb
call
xchg
adc
jnp
and
int3
arpl
xchg
mov
or
lcall
sub
mov
mov
fcomip
push
scas
xor
call
rclb
pop
push
xor
js
aad
sub
je
rolb
shlb
insb
or
xorl
xor
movsl
es
cs
cli
or
jg
insb
or
in
imul
insl
sbbb
adc
nop
testl
push
std
adc
enter
cmp
push
adc
mov
inc
mov
repz
test
adcb
andb
dec
fnsave
and
pop
jle
bound
repz
gs
nop
add
sub
ret
push
lds
fisttpl
push
mov
dec
mov
dec
lock
mov
mov
test
in
adc
cmp
push
mov
fdivrs
pop
ds
mov
test
push
test
push
mov
movsl
ss
dec
mov
fildll
int3
loope
notl
lcall
jae
in
dec
int3
inc
and
frstor
stos
pop
mov
loopne
stc
cwtl
imul
cmpsl
aaa
push
mov
shlb
roll
lret
pop
leave
test
mov
pop
mov
mov
movsb
movsb
ret
ds
dec
fmuls
fsubrs
int
inc
inc
and
sbb
out
mov
rcr
fidivrs
shll
imul
js
ljmp
mov
pop
loope
sbb
push
xor
js
or
in
mov
mov
cmp
push
cmc
push
les
ss
mov
fwait
jbe
sbb
xor
inc
movl
xlat
inc
and
mov
and
repz
mov
daa
inc
mov
fstl
lods
pop
mov
sarw
push
fmuls
fdivs
add
jl
popa
add
adc
in
repz
cmc
pop
ja
jnp
in
add
push
les
push
xor
fimull
mov
jecxz
jne
mov
shll
ja
loope
push
lds
iret
push
mov
ljmp
stc
mov
fisttpl
fnsave
push
lahf
push
jmp
jmp
jge
jmp
leave
sub
push
flds
dec
sti
insb
into
pop
cmp
push
dec
out
jl
divb
and
and
pusha
loopne
adc
add
push
sub
inc
rcll
pop
mov
inc
stos
mov
movsb
ret
xlat
mov
nop
testl
lea
mov
inc
mov
sbb
push
jecxz
push
in
mov
rorb
pop
cmp
inc
sub
sub
adc
push
addr16
push
cld
or
xchg
or
pop
int
and
aaa
jne
jo
loop
push
rcll
sub
inc
fidivrl
jl
testb
dec
fistpll
cli
popf
insb
lds
dec
sub
pop
dec
aam
sub
pop
ds
adc
push
jns
and
pusha
pop
repnz
cld
pop
int3
stos
data16
xor
mov
jb
addr16
sbb
mov
cltd
sbb
add
mov
inc
mov
sahf
sbb
jo
xorl
lcall
stos
daa
mov
and
sub
call
addl
xchg
andl
jge
sub
jp
jg
jmp
shlb
xchg
testb
push
cld
scas
aas
scas
lret
test
stos
and
pushf
push
xchg
repz
jmp
jns
mov
push
sahf
or
cmpsb
syscall
pushf
xor
sbb
xchg
mov
pop
adcb
xorb
das
mov
xor
cltd
cmp
xor
out
jg
jmp
ds
into
dec
fdivrl
jno
jecxz
in
icebp
nop
arpl
sbb
jns
mov
stos
sub
int
aad
dec
scas
fcoms
mov
notl
outsb
or
push
lock
mov
loop
std
movsl
das
mov
mov
inc
fidivrl
jg
jmp
mov
in
in
sbb
cs
pop
jle
jg
jmp
mov
inc
rolb
shlb
insb
loop
je
or
add
popa
icebp
nop
arpl
xor
out
out
mov
ljmpw
stc
mov
rolb
sarb
mov
inc
mov
aas
mov
test
mov
cs
iret
sbb
pop
ds
inc
push
xor
das
xor
in
push
lahf
push
mov
fisubl
inc
inc
rclb
sub
jno
xorb
mov
inc
mov
dec
rclb
or
lock
inc
mov
add
push
scas
inc
jecxz
cld
fwait
jbe
jle
bound
fnstcw
shlb
stos
into
cmp
sbb
adc
jae
xchg
and
es
mov
in
out
jo
push
leave
pop
cmp
cmp
insb
loop
je
stos
xor
lret
lret
nop
push
popa
nop
cmp
addr16
dec
filds
mov
call
clc
dec
mov
xchg
adc
jbe
test
std
add
push
jmp
dec
enter
sub
cmp
inc
sti
jl
jne
fs
jecxz
push
in
add
insb
out
adc
or
ret
ret
jnp
mov
push
jno
jecxz
das
cmpsl
aaa
push
mov
mov
pop
cmp
loope
jae
sub
sub
loopne
pop
test
fistpl
inc
rolb
shlb
imul
cmc
add
lock
popf
insb
test
dec
fnstsw
test
cmp
jl
jne
out
pop
cmpsb
xor
scas
pop
push
test
cmp
adc
fdivl
in
inc
fimull
fisubrl
jns
mov
jns
dec
das
ficompl
and
in
insl
std
test
ds
iret
dec
fdivrl
les
adc
enter
es
lock
bound
movsl
inc
dec
ret
repz
dec
fdivrl
jecxz
jne
jmp
mov
lock
insb
loop
je
push
fwait
or
outsb
cmpsb
movsb
ret
ds
xchg
add
fisttpll
out
jp
arpl
cmc
sbb
jnp
mov
or
aas
mov
mov
in
jge
testl
pop
stos
xor
roll
aad
mov
test
push
test
cwtl
xor
push
cld
dec
in
aam
dec
leave
or
dec
fstpt
gs
sbb
jp
jp
xor
pop
fcomps
stos
data16
mov
cmpsl
rcll
lods
pop
mov
push
les
mov
cs
mov
scas
lret
sbb
mov
mov
scas
leave
cmp
std
jb
xchg
inc
into
pop
cmp
aas
mov
mov
test
inc
xlat
mov
mov
fstpt
mov
inc
aam
sub
mov
pop
leave
test
mov
mov
inc
mov
xor
ds
xchg
pop
lea
sub
je
lea
and
rep
std
test
pushf
pop
xchg
repnz
mov
jecxz
mov
je
fs
sub
les
xchg
jb
outsb
sbb
cmp
push
lds
clc
jge
je
gs
lea
jecxz
push
in
pop
aam
sub
pop
cmp
jno
or
out
adc
add
pop
cmp
sub
xor
pusha
notb
pop
jp
arpl
ljmp
lods
cmp
mov
jecxz
out
jg
jmp
mov
icebp
nop
arpl
sub
cmp
aas
pop
test
xor
xor
scas
outsb
mulb
push
sub
push
lret
lret
or
pusha
notb
push
jb
xchg
push
pop
cmp
push
movsl
and
inc
les
int3
sub
in
rcll
cmpsl
push
mov
or
add
out
adc
add
push
shll
xchg
pop
aad
sub
jp
lea
pop
jb
xchg
cmc
add
das
mov
je
outsb
or
adc
xchg
add
sahf
push
xchg
add
sbb
cld
nop
or
adc
stos
cmp
add
dec
sub
push
jmp
sar
gs
pushf
outsl
fisubl
mov
pop
cmp
dec
cmp
xor
cltd
pop
jno
jecxz
inc
ret
ret
push
xchg
repz
out
rolb
mov
inc
cmpsb
mov
shrl
mov
mov
inc
mov
inc
enter
es
add
jbe
insb
loop
je
jnp
gs
adc
repz
cmc
pop
adc
ds
inc
mov
mov
aad
cmpl
sbb
sub
jae
xchg
add
js
rolb
sarb
mov
rorb
mov
xchg
lock
shll
cmp
push
xor
cmp
add
mov
jl
imulb
cwtl
imul
sbb
aad
mov
int
mov
cmc
addb
lock
dec
lret
lret
mov
inc
mov
push
pop
enter
push
mov
es
rcrb
pop
repnz
xchg
cmpsb
test
in
push
pushf
sti
push
clc
xchg
sbb
xchg
add
jo
adcl
test
sbb
push
xor
daa
fmull
movsb
push
mov
push
hlt
inc
fisttpl
fstpl
rorl
mov
inc
daa
sarb
dec
test
shll
lods
mov
mov
sahf
or
cmpsb
adc
add
xchg
jb
xor
cmp
add
xchg
testb
out
xchg
or
jecxz
push
in
cwtl
cmp
leave
pop
cmp
sbb
mov
and
jo
loop
cmp
loopne
cmc
pushf
outsl
fcomps
mov
imul
xor
addr16
sti
push
lea
scas
aas
pop
test
int
ficomps
xchg
add
sahf
ja
outsb
cld
fwait
jbe
stos
aas
scas
lret
test
iret
cmp
adc
mull
icebp
cmp
pusha
notb
inc
and
cmp
xchg
cmc
add
push
insl
hlt
pop
mov
cmpsl
push
rcrl
pop
in
sahf
push
xchg
repz
cmpsl
enter
push
loopne
mov
sbb
adc
mov
in
dec
rolb
shlb
out
jg
jmp
insl
pushf
sbb
push
lret
mov
push
xor
sub
mov
addb
repnz
sbb
jo
xchg
add
lcall
mov
sbb
and
and
adc
and
jg
setg
or
cmc
jns
mov
add
pop
int3
stos
data16
mov
lods
lret
inc
mov
jb
xchg
fisttpl
mov
add
xor
mov
jns
jge
notl
adcl
daa
mov
inc
mov
test
xchg
adc
decb
mov
mov
or
scas
xor
mov
xchg
movsl
lret
push
lds
adc
jle
call
aaa
ret
jle
mov
testl
or
push
jno
bound
pop
cmp
adc
insl
out
jg
jmp
dec
mov
shlb
sub
rcrl
stos
pop
lods
jbe
insl
hlt
pop
jmp
fmuls
fdivrs
push
jl
add
sbb
pushf
xor
push
xchg
add
or
arpl
popa
add
push
mov
jmp
push
hlt
lods
cmp
fdivl
in
into
pop
leave
test
push
int3
inc
and
mov
js
mov
movsb
inc
shll
mov
push
test
push
test
push
add
push
cmc
gs
jp
gs
pushf
outsl
ljmp
adc
pop
fimull
fidivrl
inc
les
int3
ficomps
test
out
jo
pop
fisttps
xchg
xchg
lock
test
mov
and
jbe
xchg
testb
out
rorb
dec
mov
cmpsl
inc
cmp
imul
leave
pop
cmp
cmp
push
adc
inc
aad
sub
jp
push
mov
mov
cwtl
push
imul
jnp
mov
mov
mov
movsb
cmp
sbb
cmpsl
aaa
push
mov
aaa
ret
fisttps
daa
mov
and
mov
cmpsb
cmp
mov
dec
mov
decl
lea
js
ljmp
shl
popa
icebp
nop
arpl
test
rcll
lods
pop
mov
xor
mov
inc
mov
pop
fisttpll
out
add
in
gs
pushf
outsl
lret
dec
sub
adc
pop
int3
stos
data16
imul
sti
imul
sbb
dec
adc
or
outsl
lcall
movsl
int3
aas
aad
jmp
xlat
inc
aad
dec
ljmp
js
jl
notb
pop
xchg
adc
mov
mov
sbb
sbb
dec
fisttpl
repnz
lcall
fwait
decb
jmp
repz
gs
adc
mov
jbe
js
ljmp
xchg
cmpsl
hlt
push
lds
popf
insb
mov
cs
mov
lods
lret
inc
movsb
jae
imul
adc
jae
in
mov
les
mov
cmpsb
xchg
and
icebp
fists
pop
sti
and
sub
sbb
movsb
sub
push
les
adc
mov
xchg
add
jns
adcl
lcall
popf
in
mov
scas
aas
scas
lret
mull
icebp
pop
or
js
jo
loop
rorl
mov
xor
or
push
ret
cmpsb
push
in
inc
fisttpll
out
lret
push
lret
jmp
mov
inc
mov
pop
lds
iret
jp
xlat
inc
and
pop
or
xlat
pop
lret
scas
pop
fildll
int3
pop
fstpt
iret
dec
fdivrl
sbb
push
and
insl
std
test
pop
aad
sub
aas
inc
int3
inc
and
nop
testl
repz
loopne
pop
leave
test
mov
test
jp
cmp
test
test
cmp
cld
insl
std
test
push
lds
or
cmp
dec
fimuls
or
int3
inc
and
out
mov
xchg
mov
and
push
mov
mov
dec
jns
mov
dec
mov
cld
nop
or
in
mov
add
xor
pop
cmpb
out
insb
loop
je
mov
mov
data16
xchg
outsb
mov
in
imul
nop
push
popa
nop
jle
mov
jle
bound
cmc
iret
inc
fidivrl
cld
fwait
jbe
insl
in
sbb
notb
mov
and
std
ja
xorb
cmp
jbe
cmpl
adc
test
jge
sub
mov
inc
mov
lods
cmp
jbe
cmpl
xchg
mov
adcb
andb
lods
cmp
scas
cmp
mov
cli
lock
lret
add
sbb
sub
fs
dec
out
call
push
xor
js
adc
pop
jp
adc
hlt
ss
adc
or
jge
adc
mov
jg
arpl
inc
and
aas
sbb
mov
movsl
int3
aas
aam
mov
aaa
mov
cmp
jo
mov
gs
jp
lock
adc
jg
mov
cld
jo
xorl
int3
cmp
dec
fdivrl
cmp
pop
sbb
insl
cld
xchg
cmc
add
loop
ljmp
or
adc
pop
enter
cli
insl
std
test
dec
aad
sub
sub
sbb
nop
push
popa
nop
cmp
dec
fidivrs
dec
fnsave
adcb
xorb
xor
int
xchg
jae
jl
testb
sbb
or
hlt
jae
ret
push
lds
mov
mov
lock
bound
mov
imul
sbb
fldenv
xchg
lea
push
push
jecxz
push
in
dec
ret
ret
pop
int
scas
mov
scas
leave
cmp
mov
test
data16
xchg
outsb
mov
dec
iret
inc
shlb
mov
loope
adc
adc
popf
or
adc
gs
pushf
outsl
fisttpll
mov
lods
lret
inc
scas
outsl
cli
push
scas
aas
pop
test
cmp
jle
sti
imul
push
fadds
mov
lock
or
xor
sub
outsb
adc
push
jns
and
mov
gs
and
jle
call
jns
cmovb
push
xor
adc
inc
aam
dec
test
icebp
popa
add
adc
cmpsb
or
out
notl
xlat
mov
mov
subl
iret
stos
pop
test
adcl
test
mov
inc
mov
mov
ficoms
cwtl
push
imul
jp
jp
push
jne
out
sbb
mov
inc
roll
shll
mov
push
test
mov
pop
enter
and
xlat
test
jecxz
jge
je
je
or
test
aad
lea
cltd
or
es
push
shlb
shlb
xchg
loopne
adc
sub
jmp
hlt
push
les
out
mov
add
adc
mov
jmp
push
in
or
ja
mov
mov
dec
mov
fwait
jns
xchg
add
sahf
jo
push
shll
lds
icebp
jp
jp
clc
jo
xorl
mov
js
ljmp
xor
fmul
inc
shlb
aad
dec
movsl
std
outsb
cld
fwait
jbe
adc
xchg
test
push
fldl
nop
push
popa
nop
jb
outsb
cld
fwait
jbe
adcb
jecxz
idivb
jns
jmp
sub
out
je
lea
pop
xchg
repnz
xor
adc
inc
mov
pop
rcll
push
popa
fcomps
ret
int
loopw
and
fimull
fidivrl
pop
into
test
inc
es
xor
pop
cmp
pop
enter
push
mov
xchg
fidivrs
aad
dec
ljmp
in
jecxz
jne
imul
call
addr16
lret
inc
aam
dec
mov
mov
iret
pop
repnz
fs
mov
xchg
push
mov
es
pusha
notb
jb
in
mov
aam
mov
dec
mov
cmp
cmpsl
cmp
mov
repnz
aam
sub
and
or
or
push
xchg
repz
mov
call
and
imul
cmp
jae
in
insb
out
jl
mulb
fistpl
test
sub
daa
movb
dec
scas
push
mov
jns
popa
into
dec
fistpll
pop
cmp
daa
cmp
or
outsl
cli
ja
xorb
dec
fidivrs
add
jp
pop
lret
scas
pop
mov
jo
mov
fdivr
jbe
cmpl
sbb
adc
mulb
pop
or
mov
pop
roll
aad
dec
fimull
fidivl
sub
push
lds
fs
divps
pop
ds
cmc
jae
xchg
pop
rclb
jg
inc
and
ja
lods
and
add
arpl
xchg
gs
shlb
sub
ds
xor
int
mov
insb
mov
xchg
jo
jmp
push
in
or
sahf
or
cmpsb
inc
pop
lahf
punpckhdq
add
push
pop
fimuls
or
jl
jne
insl
jg
imul
sbb
popa
out
jg
jmp
add
xchg
adc
inc
lret
lret
sub
push
xor
cmp
xlat
das
mov
adc
stos
cmp
xchg
mov
fwait
decb
int
aam
mov
inc
mov
cmp
les
xchg
addr16
data16
xchg
outsb
dec
aam
sub
int
addr16
jl
jno
jecxz
ljmp
stc
scas
jno
bound
sub
push
pushf
sti
push
xchg
pop
fimuls
xor
imul
insl
movb
dec
scas
fs
push
in
or
scas
sub
hlt
jo
xorl
test
dec
fnstcw
fdivrl
add
pop
sbb
pushf
adc
sub
cmpsb
xor
scas
inc
push
xchg
add
gs
pushf
xor
dec
mov
rcrb
cmp
jo
rcll
add
gs
pushf
outsl
popl
cli
ds
cmp
inc
sub
push
lds
jbe
loopne
in
jne
mov
mov
xchg
mov
mov
jge
je
sub
sub
leave
pop
cmp
pusha
xor
aas
pop
test
inc
mov
jo
inc
and
push
lret
mov
nop
testl
fwait
jbe
sub
push
inc
lds
iret
and
cwtl
push
imul
mov
dec
mov
fldcw
lret
shlb
or
cmpsb
insl
outsb
in
sbb
add
dec
ret
mov
sti
imul
sbb
lods
pop
fisttpl
mov
xlat
ret
mov
fnstcw
or
pop
push
mov
jns
push
int3
inc
and
or
je
mov
inc
mov
out
je
lea
xchg
add
and
or
or
seta
bound
mov
cmp
push
xchg
repz
mov
cmp
pop
lods
sub
call
and
jp
push
pop
enter
push
adcb
subb
shll
test
xor
xchg
pop
bound
push
mov
leave
cmp
push
and
dec
rcrl
fs
inc
fidivrl
mov
test
pop
test
je
jne
out
sbb
push
ret
cmpsb
push
hlt
out
in
jle
push
lret
pop
ds
and
mov
cld
outsl
lcall
int
addr16
push
iret
pop
cmp
popa
mov
mov
jle
call
call
mov
nop
push
popa
nop
cmp
inc
shlb
lock
in
mov
inc
mov
loopne
lds
mov
insb
in
bound
fstpt
jbe
loopne
dec
roll
aad
cmp
addl
repz
out
insb
loop
je
test
test
loope
jmp
add
das
mov
ficoms
cmpsl
push
mov
scas
pop
outsl
add
lcall
push
lds
cmp
imul
mov
sub
fisttpll
mov
adc
es
adc
jb
pop
leave
test
out
cmpsl
cmp
jmp
xchg
outsb
sarl
je
out
inc
mov
xchg
mov
add
pop
xchg
xchg
adc
mulw
icebp
adc
stc
out
dec
fisttps
flds
jl
jne
jne
aas
scas
lret
pop
push
xor
data16
jbe
loopne
seta
bound
aaa
ret
das
mov
add
lock
shlb
lods
pop
fcmovb
inc
fidivrl
cli
popf
insb
mov
notl
inc
rcll
and
push
mov
sbb
xchg
jbe
inc
shlb
out
mov
cmc
jge
je
fcoms
mov
loopne
jb
cmp
dec
lds
iret
sub
outsl
or
in
cs
lea
lods
lret
inc
scas
cmp
mov
das
mov
loope
in
jg
fs
popa
add
sbb
mov
mov
lea
leave
pop
lret
pop
ds
pushf
add
std
or
xchg
push
xchg
mov
add
pop
xchg
xchg
adc
mulw
icebp
adc
stc
out
dec
fisttps
flds
jl
jne
jne
aas
scas
lret
pop
push
xor
data16
jbe
loopne
seta
bound
aaa
ret
das
mov
add
lock
shlb
lods
pop
fcmovb
inc
fidivrl
cli
popf
insb
mov
notl
inc
rcll
and
push
mov
sbb
xchg
jbe
inc
shlb
out
mov
cmc
jge
je
fcoms
mov
loopne
jb
cmp
dec
lds
iret
sub
outsl
or
in
cs
lea
lods
lret
inc
scas
cmp
mov
das
mov
loope
in
jg
fs
popa
add
sbb
mov
mov
lea
leave
pop
lret
pop
ds
pushf
add
std
or
xchg
mov
xlat
jno
push
push
cmp
xchg
pop
out
fldl
mov
out
ret
ret
or
in
xchg
daa
test
jge
or
jno
jecxz
ss
jbe
fs
pop
xor
xchg
xchg
repnz
and
inc
or
test
mov
pop
xchg
repnz
hlt
jge
je
and
cmpsl
aaa
push
mov
shll
into
dec
push
xor
sub
and
push
push
fimuls
bsf
cmpsl
ret
or
lret
pop
into
test
and
adc
mov
popa
icebp
nop
arpl
jecxz
and
cmc
gs
pop
outsl
sti
imul
or
inc
daa
shlb
mov
sbb
ja
push
enter
popa
jle
ja
loope
in
out
mov
and
imul
shlb
arpl
push
inc
and
or
jns
mov
add
das
scas
cmp
mov
dec
int3
inc
and
stos
int
fmull
push
jns
xchg
sbb
inc
mov
mov
sti
pop
xchg
and
stc
imul
insb
or
loop
repnz
pop
repnz
decl
imulb
ret
push
lds
icebp
lock
bound
xlat
jb
lret
pop
ds
push
mov
jns
push
jecxz
push
in
mulb
push
cmp
jb
jmp
sarl
pop
cmp
jle
mov
inc
mov
inc
fmuls
fsubrs
aas
scas
lret
xor
aas
pop
test
jecxz
cltd
std
pop
int3
stos
data16
out
jl
mulb
mov
movsl
int3
aas
fistpl
dec
sub
cmp
sub
push
mov
es
out
adc
add
loop
sbb
stos
cmp
or
sub
lret
lret
insb
loop
je
xchg
sbb
mov
inc
mov
inc
lret
lret
lret
lret
cmp
jl
bound
repnz
cmpsl
in
loope
jae
xlat
inc
mov
stos
mov
mov
and
aam
xlat
mov
call
xchg
gs
leave
pop
cmp
jg
xor
fmull
mov
nop
testl
lret
inc
icebp
and
inc
mov
imull
pop
jp
adc
pusha
notb
test
dec
ret
mov
cmp
xor
xchg
add
js
aaa
cmpsl
ret
jo
push
cld
adc
je
out
pop
popa
jmp
stos
daa
mov
and
mov
dec
frstor
insb
lahf
jns
stos
cmp
dec
adc
in
lcall
stc
cwtl
imul
sub
cmp
inc
andb
inc
aad
sub
aaa
int3
pop
into
test
dec
sub
inc
or
repz
jp
jo
loop
and
jnp
adc
cmp
ret
pop
int3
stos
rcl
jo
xorl
xor
add
and
in
push
mov
cmc
pushf
outsl
popl
out
fisttpl
fnstsw
inc
lds
iret
and
imul
and
inc
aam
dec
jmp
jbe
insb
jmp
push
in
add
xchg
ja
js
mov
or
push
jno
imul
lahf
adc
dec
fidivrs
hlt
xchg
outsb
leave
repnz
icebp
nop
arpl
jnp
lods
cmp
push
shll
inc
mov
cmp
dec
aam
sub
loop
je
daa
mov
pop
xchg
jb
es
dec
fistpll
popf
in
mov
sub
popf
sbb
xor
sub
lds
add
adc
test
test
ret
mov
xchg
icebp
add
jns
xchg
testb
stos
inc
enter
inc
mov
jne
pusha
call
sbb
dec
rclb
and
imul
ret
push
lds
test
lahf
cli
or
and
pop
roll
aad
mov
xchg
cltd
or
sti
imul
sbb
jnp
mov
xchg
and
cli
mov
xchg
sbb
adc
mov
and
insl
std
test
int
lret
jecxz
nop
push
popa
nop
cmp
movsb
cmp
sbb
xchg
testb
jbe
mov
lds
fnstsw
mov
cmp
sbb
adcl
mulb
pop
aam
lret
scas
pop
mov
negl
and
sbb
sub
cmc
gs
pop
push
fmuls
fdivrs
mov
inc
mov
dec
frstor
out
mulb
stos
and
mov
fwait
decb
cmp
aas
in
in
jle
pushf
or
in
mov
xor
repnz
pop
repnz
insb
loop
je
mov
mov
and
mov
mov
test
pop
test
cmp
xor
mov
jns
and
test
out
jg
jmp
scas
pop
in
pop
leave
test
lock
xor
setg
or
mov
pop
mov
inc
and
es
mov
rclb
mov
xchg
lock
jb
imul
sbb
imul
adc
jns
pop
inc
and
cmp
int
and
jb
leave
pop
cmp
add
dec
frstor
cmp
sub
lock
mov
gs
jge
mov
lea
scas
inc
shll
lahf
cli
or
inc
xchg
push
mov
sub
push
adc
mulb
nop
arpl
in
in
je
je
ret
ret
es
xchg
popf
or
mov
pop
mov
jns
aas
add
jp
jne
out
pop
push
mulb
jns
rolb
rclb
adc
imul
jg
insl
hlt
pop
in
lret
pop
ds
mov
rcrl
popf
or
mov
dec
mov
mov
and
mov
aad
subl
aaa
push
mov
lea
push
xor
sub
sub
pop
and
orl
sub
inc
aam
dec
mov
daa
adcb
aaa
ret
inc
shll
es
mov
addr16
popa
add
sbb
xchg
ljmp
out
adc
pop
lret
cmpsl
push
sti
jmp
iret
push
lret
lret
rcll
jbe
push
lret
cmc
pop
les
int3
jnp
jecxz
push
in
sub
xchg
adc
in
sbb
incb
xchg
xchg
repz
out
in
cli
popf
insb
mov
jae
in
rolb
dec
lods
adc
ret
mov
push
xor
in
mov
inc
mov
push
add
inc
xlat
mov
stos
mov
xchg
repz
in
pushf
adc
das
mov
mov
jg
bound
fidivrl
sub
push
lds
in
loopne
jb
sub
push
lds
or
inc
aad
sub
jp
sub
dec
roll
shll
roll
aad
filds
mov
icebp
cltd
add
mov
in
sbb
inc
fimull
fidivl
fdivl
in
cmc
push
lds
decl
lea
pushf
xor
jo
add
aam
sub
pushf
sti
push
hlt
mov
scas
in
imul
and
in
jge
negl
dec
rorl
dec
in
loope
lcall
sbb
add
xchg
jno
cltd
or
jnp
popf
or
enter
cmp
mov
jle
arpl
mov
inc
mov
adc
dec
fimull
ficompl
clc
outsb
cld
fwait
jbe
sbbb
out
sbb
lods
pop
mov
lea
insb
or
testl
mov
mov
mov
lret
lret
xchg
add
and
rcll
push
dec
std
lock
shlb
arpl
shlb
sti
nop
adc
push
lahf
push
mov
cmpsl
ret
push
rolb
sarb
sub
data16
pop
loop
xchg
adc
scas
aas
pop
test
cld
rsm
jmp
movsb
mov
aad
notl
adc
mov
and
cmp
pop
jae
jbe
loopne
cmp
rclb
push
pushf
inc
rolb
shlb
add
js
fwait
or
jae
fisttpll
out
ljmp
sahf
insl
lcall
in
jnp
mov
filds
mov
icebp
pusha
notb
mov
popa
icebp
nop
arpl
xlat
dec
fdivrs
ret
cmpsb
push
aam
mov
gs
sbb
cmp
dec
fidivrs
dec
das
fidivrl
das
scas
cmp
mov
sub
out
notb
sbb
xchg
js
loop
pop
loop
aam
int3
stos
data16
adc
jbe
loopne
push
test
mov
outsl
loopne
adc
add
js
mov
lret
mov
mov
sbb
mov
xor
or
ret
ret
ljmp
xlat
mov
movsl
mov
fildll
lahf
xor
inc
cmp
sbb
inc
shll
add
sub
sbb
dec
stc
jg
jno
jecxz
out
jno
xorb
jle
mov
scas
pop
fnstsw
xchg
dec
enter
rcll
mov
cli
popf
insb
mov
xchg
add
adcb
andb
shlb
xor
dec
stos
and
push
lahf
push
scas
and
stc
jo
xorl
jo
out
cltd
push
jle
fcomps
scas
pop
scas
jno
jno
jecxz
xchg
or
cmp
repnz
pop
repnz
pop
iret
stos
pop
test
loope
xor
pop
lret
scas
pop
cld
std
gs
pushf
outsl
pushf
lock
push
xor
sub
mov
std
popa
icebp
nop
arpl
add
insl
mull
icebp
push
popf
add
or
push
mull
icebp
js
push
mov
repnz
ret
mov
push
les
dec
fnsave
cmp
stos
cs
xor
and
test
jge
sub
out
cmp
sub
push
ss
loop
jecxz
jne
or
dec
fdivrl
pop
cmp
aas
popf
push
pushf
sti
push
jecxz
adcl
test
lcall
pop
cmp
xor
add
std
or
inc
fisttpl
fnsave
push
cltd
or
ds
pop
das
mov
dec
mov
scas
pop
repnz
xor
pop
xchg
adc
lock
aad
fistpll
and
mov
push
roll
lods
mov
xchg
cmp
and
jns
jmp
sub
orl
decb
xor
das
jg
imul
fidivrl
xchg
icebp
add
sbb
add
jns
mov
stos
and
mov
cli
jnp
mov
arpl
jge
negl
mov
and
xor
inc
fidivrl
leave
test
lcall
lahf
or
add
std
or
jmp
in
mov
mov
addr16
dec
cmpsb
xor
scas
pop
dec
rolb
shrb
add
pop
xchg
repnz
xor
mov
popa
add
jbe
daa
mov
and
inc
xchg
lea
pushf
sti
push
lock
mov
lahf
cli
or
jno
gs
adc
fisttps
flds
das
test
ljmp
lea
adc
mov
sti
in
jecxz
jne
imul
mov
dec
push
xor
daa
shlb
xchg
gs
imull
sahf
insl
andl
push
std
push
push
rcll
xor
mov
sarl
ret
pop
aas
lret
in
bound
loop
je
fiaddl
mov
stc
scas
xor
and
mov
and
mov
nop
daa
jne
jg
jmp
add
inc
cmp
or
cmpsb
and
xchg
add
adc
push
shll
add
int3
stos
xchg
insl
std
test
push
cwtl
push
imul
ret
push
lds
lock
dec
fidivrs
mov
and
jno
outsl
or
int3
push
test
cmc
gs
sbb
mov
mov
arpl
adc
push
xchg
insb
ss
dec
das
fisubrl
insb
or
addl
push
cmpsl
jno
push
shll
clc
or
push
aam
sub
fstpt
repnz
test
and
dec
cmp
and
mov
push
in
jecxz
stc
cwtl
imul
lret
xor
pop
and
and
repz
mov
mov
test
cmp
or
push
les
mov
insb
loop
je
out
loope
jae
xor
pushf
push
xchg
repz
incl
jae
in
push
xchg
add
sahf
aaa
mov
mov
sbb
test
lock
and
scas
pop
repnz
pop
jb
cmp
mov
jbe
nop
adc
mov
dec
mov
xor
das
adc
jmp
jecxz
jne
hlt
jno
xorb
dec
fdivrl
sahf
stc
or
xchg
in
idivb
mov
inc
mov
call
stos
loop
stc
cwtl
imul
lods
mov
scas
lret
shll
xchg
mov
imul
shlb
mov
and
mov
mov
out
js
mov
xor
stos
cmp
inc
popf
or
fisttpll
out
jp
ja
loope
fwait
add
pop
xchg
repnz
sbb
out
pop
popf
pop
xchg
repnz
das
lcall
add
fcompl
stos
data16
mov
inc
mov
mov
mov
das
iret
divl
xorb
les
int3
sub
inc
aam
dec
mov
fidivl
sub
cs
cmp
or
mov
push
push
jle
sbb
movsl
inc
idivb
mov
mov
nop
testl
xchg
stos
cmp
and
pop
into
pop
cmp
jno
adc
dec
ret
mov
push
lahf
push
pop
enter
and
cmpsl
imul
aad
fdivrl
popa
add
pop
enter
push
loopne
repz
cmc
pop
pop
push
xor
jns
jg
mov
mov
xchg
xlat
jnp
mov
sub
sbb
lods
lret
inc
xchg
inc
lret
pop
ds
xchg
pop
xchg
adc
ficompl
test
mov
xor
xchg
pop
xchg
adc
pop
fisttpll
out
stos
sub
xlat
arpl
xchg
adcl
jnp
popa
add
cmp
in
xlat
inc
and
cmp
scas
cmp
mov
nop
sbb
aad
int
lds
iret
cmp
std
jp
jg
jmp
adc
inc
roll
mov
adcl
adc
mov
outsl
or
in
add
ja
rclb
addr16
inc
and
das
js
jno
jecxz
or
mov
mov
ret
push
lds
jge
je
xor
jp
in
inc
imul
add
dec
std
pop
int
loopw
pop
xchg
adc
push
ret
xchg
icebp
add
outsb
out
jl
notb
cld
adcl
test
push
xor
daa
scas
sub
les
int3
and
lods
outsb
in
sbb
popa
add
push
mov
jecxz
and
dec
fdivrs
jp
in
push
mov
shll
fstpt
jo
loop
mov
vandps
lods
pop
sti
fisttpll
push
xchg
mov
xlat
in
loope
jae
out
loopne
jb
push
rcll
dec
rolb
shlb
pop
ret
ret
add
aam
sub
scas
xlat
fdivl
insb
sti
push
inc
lods
fcomip
jb
out
test
mov
jle
cli
sub
and
ret
dec
jp
fimull
jmp
add
adc
fildll
test
pop
test
push
xlat
inc
and
ss
outsl
lcall
repnz
mov
adcl
xchg
add
jae
test
pop
test
pushl
mov
jne
xchg
cmc
add
cltd
adc
out
cltd
push
jns
popa
jb
insl
hlt
pop
icebp
or
or
cmpsb
dec
sbb
push
les
lcall
mov
jnp
mov
inc
xlat
inc
and
aaa
into
pop
leave
test
cmc
insl
std
test
jae
jle
call
shll
aad
ret
jmp
pop
jp
ds
xlat
inc
and
push
lock
jge
jbe
loopne
cmp
xor
lds
mov
sbb
insb
test
fwait
decb
xchg
popa
lea
sub
push
sub
loope
sti
sahf
insl
test
popf
adc
ja
xchg
cmc
add
jbe
cmpl
xor
mov
jg
outsb
orb
push
les
and
inc
nop
add
sbb
sbb
out
jg
jmp
das
fidivrl
mov
mov
and
xchg
jnp
and
mov
fadds
mov
imull
cltd
clc
notl
sub
fiadds
mov
clc
jecxz
in
je
sub
rolb
shlb
ret
push
lds
cld
fwait
jbe
ljmp
or
mov
cmpsl
sbb
mov
stos
int
aad
mull
icebp
pop
jbe
pusha
pop
repnz
lea
gs
pushf
outsl
or
sub
ljmp
lea
jp
pop
adc
out
dec
ja
mov
test
test
test
cmp
xchg
add
std
or
mov
xchg
scas
cmp
jns
jge
notl
jno
je
out
add
fisttps
add
jbe
bound
addr16
dec
sub
adc
xchg
mov
mov
stos
imull
cwtl
imul
std
insl
hlt
pop
mov
add
lock
shll
shll
lock
xorb
test
adcl
int3
inc
and
les
arpl
cmc
sbb
dec
mov
movsl
inc
adc
mov
scas
lret
fcoms
mov
fwait
decb
shrl
int3
sbb
push
popa
nop
jns
lods
and
inc
xchg
in
sbb
dec
fldt
adc
cltd
or
pop
icebp
gs
pushf
outsl
insb
stc
imul
pop
aas
lret
outsl
lcall
shll
and
add
mov
lret
push
pushf
sti
push
mov
out
pop
inc
jecxz
push
in
xchg
mov
sbb
jecxz
cli
pop
iret
stos
pop
loopne
fisttpll
out
mov
stos
into
cmp
mov
jns
outsb
or
sbb
icebp
jmp
loop
je
into
dec
fdivrs
sti
sahf
insl
xor
jmp
cmpsl
aaa
push
mov
add
cmp
inc
and
xor
rolb
pop
cmp
xor
fisttpll
out
xchg
push
mov
es
jl
jne
insb
cmp
mov
aad
sbbl
push
les
int3
cs
inc
mov
or
dec
lahf
or
ret
push
lds
leave
push
shlb
xchg
push
leave
pop
cmp
jbe
add
pop
clc
stc
cmpsl
aaa
and
movsl
sub
shrl
xchg
adc
test
mov
in
bound
dec
sub
cmc
pushf
outsl
pushf
sbb
dec
fistpll
in
mov
jo
push
fdivrl
lahf
adc
in
sbb
ret
dec
fnstcw
pop
cmp
mov
rorl
xor
and
jge
je
insb
inc
int3
inc
and
adc
imul
add
or
mov
inc
mov
sahf
or
enter
data16
pop
and
aas
adcb
jecxz
test
int
addr16
mov
loope
jae
push
iret
pop
cmp
jle
lea
or
lds
iret
jp
mov
dec
fnstcw
sbb
or
jbe
cmpl
imul
cmp
push
fisttpl
fnstsw
mov
stos
int
faddp
inc
fidivrl
adc
fs
rolb
sarb
aad
mov
lahf
cli
or
lods
and
mov
cmc
ljmp
jle
mov
mov
cmpsl
jge
addr16
push
fistl
mov
les
jae
in
pop
roll
aad
sub
ljmp
lahf
punpckhdq
fldcw
shrb
pop
mov
jle
jp
sbb
sbb
gs
pushf
outsl
ror
push
les
xchg
icebp
add
mov
inc
mov
mov
and
xchg
mov
lahf
dec
enter
sbb
push
xor
sub
imul
mov
inc
mov
jmp
jecxz
jne
insl
ljmp
insb
or
call
cmp
rcrl
stos
pop
test
je
out
dec
xchg
mov
imul
sub
idivl
vmovaps
or
mov
fwait
or
mulb
pop
popa
add
xor
imul
sbb
lock
bound
insb
test
adcl
fdivl
in
mov
mov
mov
dec
mov
pop
lods
adc
jb
xchg
cs
inc
mov
sub
fldl
mov
idivl
sahf
fnstsw
mov
movsb
push
sbbl
aam
lret
mov
loopne
xchg
xchg
repnz
roll
dec
scas
dec
lret
lret
inc
and
aaa
adc
pushl
jl
or
inc
pop
fisttpl
fnsave
push
cli
dec
rcll
and
mov
lds
mov
jo
loop
mov
fdiv
pusha
notb
arpl
cmc
xor
push
ret
cmpsb
push
mov
or
jge
je
insl
xor
fisttps
mov
insl
hlt
pop
mov
dec
fdivrl
in
je
cmp
out
arpl
xchg
cmc
add
jae
jge
negl
jp
in
pop
cli
pop
into
test
inc
es
scas
xor
dec
fstpt
fwait
decb
push
aaa
push
mov
dec
mov
jns
push
rolb
sarb
jle
push
cld
push
orl
popl
jmp
mov
jge
je
popa
mov
xchg
lock
daa
test
xchg
cltd
clc
or
adcb
loope
clc
jl
jge
testl
sub
stc
les
ror
leave
test
mov
jae
xchg
pop
int3
inc
and
push
sbb
xchg
add
cmp
and
insb
loop
je
out
imul
stos
jb
clc
data16
out
fmull
cwtl
dec
mov
daa
sahf
lret
cmpsb
and
xlat
dec
movsl
jb
add
and
jg
mov
xchg
adc
lcall
inc
aad
dec
movsb
mov
lahf
cli
or
mov
cwtl
decl
in
xchg
add
jp
xor
or
mov
xchg
repnz
cmp
push
cmp
xlat
pop
into
test
and
pop
in
pusha
notb
jb
in
push
mov
jns
jg
jmp
cmp
or
fwait
or
jns
out
adc
add
sbb
sbb
push
xchg
or
insl
lret
push
mov
push
xor
imul
lock
or
add
cmp
cwtl
lret
mov
in
jle
or
xchg
aaa
cmpsl
ret
movb
cwtl
jl
jne
bound
fisubrs
jl
notb
fs
popf
insb
test
ja
xorb
mov
gs
jp
outsb
cld
fwait
jbe
cli
jo
xorl
repz
clc
jo
xorl
loope
outsl
out
adc
or
pop
lret
scas
pop
mov
pop
mov
cmp
lcall
xchg
mov
and
xchg
add
pop
repnz
xchg
jbe
loopne
lods
cmp
js
mov
lea
cmp
sbb
mov
js
and
mov
repz
dec
fistpll
mov
sbb
or
loopw
jae
xchg
cmp
sub
adc
mov
mov
dec
and
sti
imul
adc
gs
pushf
outsl
lea
popa
add
pop
mov
scas
lret
mov
mov
je
ficoms
mov
inc
and
ds
je
sbb
roll
add
rolb
test
adc
jb
mulb
decb
sti
imul
and
popa
icebp
nop
arpl
pop
mov
pop
jp
jg
sub
dec
fidivrs
jle
call
xlat
and
mov
mov
sbb
aam
dec
stc
sbb
push
jno
sub
jbe
cmpl
dec
fdivrs
push
xor
inc
and
jns
jo
xorl
pop
mov
mov
pop
stos
inc
lahf
sbb
xchg
add
jge
rcll
sub
test
pop
test
push
fdivl
in
mov
loop
mov
jle
gs
jecxz
push
in
jl
popa
add
adc
repnz
out
adc
sbb
push
shll
or
or
xchg
fisttpll
push
xchg
xchg
add
test
lods
mov
scas
sti
insl
std
test
pop
mov
jg
sub
mov
dec
mov
les
pushf
inc
jecxz
push
in
mov
in
sbb
mov
hlt
mov
dec
sub
xor
and
lcall
xor
ret
ret
sbb
rcll
and
movsb
cmp
inc
or
push
lret
mov
rclb
sub
jp
in
push
cmp
sbb
dec
fistpll
loopne
jb
stc
jne
mov
idivb
mov
push
fisttpll
out
enter
dec
mov
gs
lds
iret
cmp
pop
aas
lret
data16
xchg
outsb
lods
inc
rolb
shlb
mov
xlat
sub
das
lcall
cltd
or
push
out
xchg
or
xchg
pop
bound
add
push
aad
fdivrs
je
sub
lret
sti
ret
int3
fildl
adc
leave
jb
inc
shlb
jbe
loopne
sub
inc
rclb
and
jne
out
add
sbb
jecxz
push
in
pop
jecxz
push
in
push
test
jge
outsb
add
dec
les
int3
pop
sub
inc
lea
xchg
lock
arpl
bound
leave
test
mov
repnz
pop
repnz
lds
lods
pop
mov
cltd
or
insb
aaa
movsl
xor
imul
adc
sub
fisttps
fcoms
cmpsb
push
hlt
xchg
or
in
in
insb
loop
je
cmp
in
je
lea
pop
into
test
adc
mov
inc
mov
setb
addr16
and
jle
loope
shlb
xor
ja
scas
aas
pop
test
xor
inc
and
add
sbb
outsl
or
out
xor
lcall
adc
popa
push
fmuls
fdivrs
dec
fnstcw
stc
cwtl
imul
adc
or
lds
mov
inc
and
and
test
pop
test
fmuls
mov
cmp
or
int
and
push
pop
iret
pop
cmp
xor
call
and
mov
push
mov
gs
gs
xor
scas
aas
pop
test
repz
mov
fimuls
dec
test
mov
sbb
int3
sbb
mov
mov
inc
enter
cmp
sbb
xor
dec
fnstcw
add
jno
mov
inc
mov
in
lock
bound
dec
movsl
cwtl
and
popf
or
add
jnp
mov
das
cmpsb
xor
scas
inc
sahf
adc
rclb
shufps
lea
and
clc
lcall
inc
add
popf
add
add
ret
lock
sbb
push
sbb
aam
adc
jb
sub
jle
pop
pushf
aad
inc
aam
dec
clc
pushf
add
std
or
jnp
jo
loop
add
jecxz
adc
xor
pop
cmp
pop
bound
push
cmc
je
adcl
or
daa
mov
and
bnd
xchg
sub
inc
lret
pop
ds
sti
jl
jne
fs
jne
out
add
outsb
or
adc
lock
shlb
xchg
adc
clc
ja
xorb
jmp
cmpsl
sub
cs
push
xor
cmp
push
lret
mov
add
xchg
add
xor
sub
sub
sub
pop
out
out
jo
and
sbb
pop
jp
xor
pop
leave
test
test
insb
loop
je
lds
xchg
gs
arpl
cmc
dec
fiaddl
dec
in
mov
mov
in
sbb
xchg
or
in
mov
loopw
inc
shlb
dec
fisttpll
roll
inc
movsb
and
cmp
dec
jge
xchg
cmc
add
lea
cltd
clc
or
and
inc
popa
jmp
push
in
add
pusha
mov
mov
inc
mov
jecxz
cltd
push
xorl
inc
test
out
jg
jmp
pop
stos
dec
int3
inc
mov
test
jle
add
lahf
or
in
loope
inc
fidivrl
xchg
cld
bswap
stos
cmp
mov
cmpsb
mov
mov
and
imul
hlt
pop
in
fisttpll
mov
call
mov
flds
mov
out
jns
mov
mov
mov
push
mov
es
cmc
outsl
in
icebp
inc
xor
adc
pop
repz
jno
jmp
sti
pop
xchg
xchg
inc
sub
jae
popa
add
adc
fisubl
enter
outsl
lcall
mov
mov
jle
bound
pop
and
aaa
nop
sbb
mov
js
inc
mov
fdivp
jle
mov
lret
inc
movsb
pop
aam
sub
lcall
and
pop
xlat
inc
fidivrl
xchg
testb
push
xchg
lea
mov
sbb
imul
fisttpl
movsb
push
mov
pop
fs
popf
insb
popf
xchg
aad
xchg
xchg
setg
or
incb
pop
iret
stos
pop
into
scas
xor
cmp
outsb
cld
fwait
jbe
test
mov
cs
addb
test
jge
pop
mov
and
cmc
imul
sbb
or
push
lahf
push
cld
jp
jp
adc
jb
mov
dec
leave
pop
cmp
and
sbb
adc
test
pop
test
cmpsl
sub
imul
pop
loop
dec
les
int3
sub
out
adc
mov
lods
mov
mov
loope
adc
or
arpl
xchg
gs
inc
aam
sub
popf
in
fmull
mov
je
out
add
pop
lret
scas
pop
mov
lahf
punpckhdq
pop
stos
pop
inc
fdivl
in
int3
push
lret
cmc
mov
mov
sbb
std
or
seto
popa
nop
daa
mov
xchg
adc
popf
sub
lods
and
xor
imul
gs
pushf
outsl
mov
pop
sub
xchg
int
ret
mov
lcall
lds
cmc
add
fistps
scas
pop
mov
jle
mov
pop
ljmp
add
test
cmp
icebp
popa
add
sahf
int3
sub
loop
jecxz
notl
out
adc
jne
adc
inc
rolb
shlb
or
mov
insl
cli
push
ljmp
mov
and
mov
movsl
xor
sbb
daa
mov
and
add
testb
mov
add
and
inc
pop
cli
push
mov
or
ficompl
scas
pop
mov
into
sub
movsl
xor
xchg
jb
outsl
adc
push
popa
nop
jle
fisttpll
out
into
inc
fidivrl
mov
sbb
mov
cltd
push
push
mov
lret
inc
movsb
pop
roll
sarl
out
stc
cwtl
imul
mov
xchg
arpl
inc
shlb
scas
lret
es
inc
mov
xchg
or
push
pushf
sti
push
hlt
notl
inc
fimuls
pop
jle
jnp
in
pop
setne
pop
jp
sub
pop
iret
stos
pop
into
pop
lret
pop
ds
test
mov
sbb
int
filds
test
cltd
clc
or
mov
mov
and
dec
iret
pop
cmp
divb
mov
adc
dec
fstpt
cmp
inc
movsl
and
setg
or
cmp
fists
lods
pop
xchg
adc
shll
xchg
xchg
push
cmp
das
test
mov
cmp
mov
js
popa
ljmp
je
jl
bound
dec
sub
mov
sbb
dec
and
xor
js
mov
loop
out
mov
xor
sbb
pop
int3
stos
data16
cmpsb
xor
scas
pop
int3
push
shll
xchg
out
and
cmp
jp
mov
in
ret
sub
scas
pop
cmc
jbe
cmpl
mov
inc
mov
das
scas
cmp
mov
xlat
push
mov
sbb
imul
jne
into
pop
cmp
aas
dec
lret
pop
ds
jno
push
sub
lds
adc
dec
dec
lds
iret
sub
dec
fnstsw
into
inc
shlb
or
outsb
adc
adc
mov
fisttpl
pop
into
pop
cmp
jno
xchg
add
push
cltd
or
mov
mov
push
lret
mov
push
xor
imul
insb
lahf
sub
adcb
subb
sbb
dec
fisttpl
fnsave
sti
imul
dec
jg
jno
jecxz
sub
xchg
xor
leave
pop
cmp
dec
mov
lahf
cli
or
pop
xchg
or
jp
mov
inc
mov
xchg
sbb
in
bound
push
cmp
sub
loop
sbb
gs
pushf
outsl
testb
xchg
add
pop
movsl
sub
lds
orl
shlb
pop
iret
stos
pop
mov
push
mov
les
and
out
dec
frstor
ret
inc
rolb
shlb
cli
jae
xchg
dec
fimuls
push
sub
pop
inc
fisttpll
out
sub
or
mov
gs
inc
lret
pop
lret
scas
pop
repnz
add
inc
shll
sub
jno
iret
pop
cmp
push
sub
adc
adc
js
mov
and
push
mov
jns
popa
push
xlat
inc
and
aas
stos
sub
push
jge
negl
lock
adc
sbb
or
push
js
addr16
adc
pop
int
addl
jno
aam
mov
stc
jp
pop
pop
sub
xchg
ficomps
fnsave
sahf
imul
push
jno
inc
adc
xchg
xchg
adc
dec
fimuls
push
or
sub
rcrl
pop
in
inc
jecxz
push
in
ret
pop
enter
repz
xchg
or
test
mov
sbb
sbb
fsubrs
scas
lretw
pop
ds
pop
mov
out
insb
loop
je
cs
cmp
mov
arpl
jo
loop
sub
jo
xorl
push
mov
das
les
test
jge
outsb
mov
cwtl
sti
jno
xorb
aad
sub
xor
jg
mov
or
and
push
pushf
sti
push
loop
dec
fnstcw
cwtl
decl
decl
mov
in
das
cmp
cmp
dec
lret
xchg
mov
push
cld
adc
jmp
push
in
dec
mov
rcrl
push
xor
jns
cmpsl
aaa
push
mov
push
sbb
mov
mov
adc
jns
mov
jmp
into
mov
mov
sub
mov
lea
and
repnz
xchg
add
pop
xchg
adc
rcrb
scas
pop
mov
andl
popa
testl
je
loopne
cltd
push
gs
jp
test
push
lahf
push
sbb
jbe
add
std
or
adc
out
jl
jne
jno
push
lahf
push
pop
xchg
mov
push
mov
cld
fwait
jbe
push
push
xor
daa
fimuls
mov
push
cmp
cmp
sbb
pop
xchg
repnz
or
push
out
jo
xorl
fs
in
bound
scas
jne
loope
out
mov
in
xlat
mov
stos
xlat
bound
adc
loop
icebp
nop
arpl
aas
aam
add
jb
xchg
daa
mov
inc
into
pop
cmp
xor
jl
jne
and
jno
xorb
jb
xchg
xchg
sbb
aad
rorb
sbb
outsb
es
cmp
inc
lods
and
inc
aad
dec
movsl
add
imul
lods
cmp
jae
xchg
mulw
icebp
adc
sub
push
divb
jge
testl
mul
js
mov
sbb
sbb
xor
mov
inc
mov
insb
icebp
popa
add
inc
jns
jnp
in
inc
mov
xchg
adc
fcompl
imul
setg
or
movl
xor
inc
test
lret
and
mov
cmp
sub
jae
in
lret
dec
fdivrl
jle
call
xchg
xor
xchg
add
pop
cli
jno
xorb
sbb
imul
insl
mov
cmc
ja
push
jbe
cmpl
int
and
and
pop
aas
lret
ja
xorb
xchg
add
jae
add
std
or
cmp
int3
pop
iret
stos
pop
rol
leave
test
test
outsb
cld
fwait
jbe
sbb
cwtl
pop
xchg
repnz
xchg
mov
push
cmpsl
push
iret
pop
cmp
pusha
mov
movsb
cli
pop
iret
stos
pop
loopne
insl
std
test
pop
xchg
or
jp
lock
adc
mov
jg
push
cmp
sti
jl
jne
sbb
push
xchg
add
js
sub
les
int3
imul
cmp
cmc
gs
adc
nop
push
popa
nop
je
adc
mov
jle
out
adc
aaa
ss
mov
xor
jne
fwait
orl
jecxz
mov
test
push
cld
xchg
add
aam
sub
and
mov
lahf
push
mov
cmp
loop
jmp
icebp
popa
add
pop
scas
xor
notl
andb
and
xorb
sahf
or
cmpsb
and
mov
mov
cmpsb
shll
xchg
adc
jae
xchg
rcrl
scas
pop
mov
enter
sub
pop
repnz
mov
xchg
add
jp
and
sahf
sbb
xchg
add
pop
imul
pop
loop
and
cmp
mov
cmpsb
popf
pop
xchg
adc
xor
dec
rolb
mov
test
notl
rolb
mov
in
fwait
or
pop
das
mov
xchg
or
outsb
cld
fwait
jbe
cwtl
adc
cmpsb
xor
scas
pop
or
add
daa
mov
and
or
push
mov
into
cmp
dec
mov
fsubrl
lcall
dec
in
bound
add
and
mov
jle
insl
pop
fmuls
fdivrs
popa
loopne
adc
add
xor
dec
lret
lret
sti
imul
adc
cwtl
push
imul
mov
inc
mov
sub
push
cwtl
push
imul
inc
xlat
mov
cmpsb
ja
push
mov
sbb
pop
int3
inc
and
and
rolb
xchg
add
sahf
jl
out
jp
jp
push
adcl
es
fildll
mov
inc
mov
add
or
dec
ret
jmp
inc
shll
mov
sbb
lea
in
sbb
pop
les
push
testb
sub
add
push
mov
jnp
adc
xor
sahf
sbb
pop
jecxz
push
in
aas
mov
mov
movsl
int3
aas
ror
dec
frstor
xchg
addr16
push
lds
fwait
jbe
push
out
cltd
push
stos
pop
test
in
inc
shll
dec
das
fidivl
loopne
loope
jae
js
jle
call
stos
movsw
lock
xchg
outsb
mov
fs
popf
insb
xchg
jle
mov
outsb
popf
cmp
and
or
sbb
fnstenvs
sahf
mov
hlt
jo
bound
pop
cmp
popa
shlb
in
push
mov
jno
jecxz
xor
xor
or
outsb
call
cmp
sub
pop
cmc
ja
xorb
add
xchg
add
jae
fisttpll
out
jne
xchg
testb
mov
inc
mov
lods
and
mov
push
fimull
fisubrl
out
ljmp
jne
jno
mov
inc
mov
ljmp
fwait
jbe
and
push
mov
mov
and
imul
hlt
pop
in
test
xchg
adc
push
movsb
inc
fmuls
fsubrs
jo
xorl
and
sbb
lret
jle
mull
icebp
push
data16
imul
pop
cmp
dec
std
pop
int3
stos
data16
mov
jg
pop
adc
rolb
inc
mov
test
mov
xlat
push
mov
xchg
adc
xchg
adc
dec
fidivrs
mov
cmp
sbb
jl
pusha
pop
repnz
addr16
mov
shll
cmp
cmp
push
lret
lret
adc
or
ss
fimull
fisubrl
insb
or
addl
push
cmpsl
jno
push
shll
clc
or
push
aam
sub
fstpt
repnz
test
and
dec
cmp
and
mov
push
in
jecxz
stc
cwtl
imul
lret
xor
pop
and
and
repz
mov
mov
test
cmp
or
push
les
mov
insb
loop
je
out
loope
jae
xor
pushf
push
xchg
repz
incl
jae
in
push
xchg
add
sahf
aaa
mov
mov
sbb
test
lock
and
scas
pop
repnz
pop
jb
cmp
mov
jbe
nop
adc
mov
dec
mov
xor
das
adc
jmp
jecxz
jne
hlt
jno
xorb
dec
fdivrl
sahf
stc
or
xchg
in
idivb
mov
inc
mov
call
stos
loop
stc
cwtl
imul
lods
mov
scas
lret
shll
xchg
mov
imul
shlb
mov
and
mov
mov
out
js
mov
xor
stos
cmp
inc
popf
or
fisttpll
out
jp
ja
loope
fwait
add
pop
xchg
repnz
sbb
out
pop
popf
pop
xchg
repnz
das
lcall
add
fcompl
stos
data16
mov
inc
mov
mov
mov
das
iret
divl
xorb
les
int3
sub
inc
aam
dec
mov
fidivl
sub
cs
cmp
or
mov
mov
xchg
icebp
add
adc
idivb
mov
mov
nop
testl
xchg
stos
cmp
and
pop
into
pop
cmp
jno
adc
dec
ret
mov
push
lahf
push
pop
enter
and
cmpsl
imul
aad
fdivrl
popa
add
pop
enter
push
loopne
repz
cmc
pop
pop
push
xor
jns
jg
mov
mov
xchg
xlat
jnp
mov
sub
sbb
lods
lret
inc
xchg
inc
lret
pop
ds
xchg
pop
xchg
adc
ficompl
test
mov
xor
xchg
pop
xchg
adc
pop
fisttpll
out
stos
sub
xlat
arpl
xchg
adcl
jnp
popa
add
cmp
in
xlat
inc
and
cmp
scas
cmp
mov
nop
sbb
aad
int
lds
iret
cmp
std
jp
jg
jmp
adc
inc
roll
mov
adcl
adc
mov
outsl
or
in
add
ja
rclb
addr16
inc
and
das
js
jno
jecxz
or
mov
mov
ret
push
lds
jge
je
xor
jp
in
inc
imul
add
dec
std
pop
int
loopw
pop
xchg
adc
push
ret
xchg
icebp
add
outsb
out
jl
notb
cld
adcl
test
push
xor
daa
scas
sub
les
int3
and
lods
outsb
in
sbb
popa
add
push
mov
jecxz
and
dec
fdivrs
jp
in
push
mov
shll
fstpt
jo
loop
mov
vandps
lods
pop
sti
fisttpll
push
xchg
mov
xlat
in
loope
jae
out
loopne
jb
push
rcll
dec
rolb
shlb
pop
ret
ret
add
aam
sub
adc
sbb
lock
pop
les
stos
pop
rolb
lods
jnp
dec
sub
pop
imul
sbb
and
add
adc
fildll
test
pop
test
push
xlat
inc
and
ss
outsl
lcall
repnz
mov
adcl
xchg
add
jae
test
pop
test
pushl
mov
jne
xchg
cmc
add
cltd
adc
out
cltd
push
jns
popa
jb
insl
hlt
pop
icebp
or
or
cmpsb
dec
sbb
push
les
lcall
mov
jnp
mov
inc
xlat
inc
and
aaa
into
pop
leave
test
cmc
insl
std
test
jae
jle
call
shll
aad
ret
jmp
pop
jp
ds
xlat
inc
and
push
lock
jge
jbe
loopne
cmp
xor
lds
mov
sbb
insb
test
fwait
decb
xchg
popa
lea
sub
push
sub
loope
sti
sahf
insl
test
popf
adc
ja
xchg
cmc
add
jbe
cmpl
xor
mov
jg
outsb
orb
push
les
and
inc
nop
add
sbb
sbb
out
jg
jmp
das
fidivrl
mov
mov
and
xchg
jnp
and
mov
fadds
mov
imull
cltd
clc
notl
sub
fiadds
mov
clc
jecxz
in
je
sub
rolb
shlb
ret
push
lds
cld
fwait
jbe
ljmp
or
mov
cmpsl
sbb
mov
stos
int
aad
mull
icebp
pop
jbe
pusha
pop
repnz
lea
gs
pushf
outsl
or
sub
ljmp
mov
std
or
test
int3
ja
imul
mov
shrb
rclb
stc
mov
xchg
scas
cmp
jns
jge
notl
jno
je
out
add
fisttps
add
jbe
bound
addr16
dec
sub
adc
xchg
mov
mov
stos
imull
cwtl
imul
std
insl
hlt
pop
mov
add
lock
shll
shll
lock
xorb
test
adcl
int3
inc
and
les
arpl
cmc
sbb
dec
mov
movsl
inc
adc
mov
scas
lret
fcoms
mov
fwait
decb
shrl
int3
sbb
push
popa
nop
jns
lods
and
inc
xchg
in
sbb
dec
fldt
adc
cltd
or
pop
icebp
gs
pushf
outsl
insb
stc
imul
pop
aas
lret
outsl
lcall
shll
and
add
mov
lret
push
pushf
sti
push
mov
out
pop
inc
jecxz
push
in
xchg
mov
sbb
jecxz
cli
pop
iret
stos
pop
loopne
fisttpll
out
mov
stos
into
cmp
mov
jns
outsb
or
sbb
icebp
jmp
loop
je
into
dec
fdivrs
sti
sahf
insl
xor
jmp
cmpsl
aaa
push
mov
add
cmp
inc
and
xor
rolb
pop
cmp
xor
fisttpll
out
xchg
push
mov
es
jl
jne
insb
cmp
mov
aad
sbbl
push
les
int3
cs
inc
mov
or
dec
lahf
or
ret
push
lds
leave
push
shlb
xchg
push
leave
pop
cmp
jbe
add
dec
fdivrs
push
popa
nop
cmp
push
cmp
jp
jle
mov
inc
mov
test
mov
in
bound
dec
sub
cmc
pushf
outsl
pushf
sbb
dec
fistpll
in
mov
jo
push
fdivrl
lahf
adc
in
sbb
ret
dec
fnstcw
pop
cmp
mov
rorl
xor
and
jge
je
insb
inc
int3
inc
and
adc
imul
add
or
mov
inc
mov
sahf
or
enter
data16
pop
and
aas
adcb
jecxz
test
int
addr16
mov
loope
jae
push
iret
pop
cmp
jle
lea
or
lds
iret
jp
mov
dec
fnstcw
sbb
or
jbe
cmpl
imul
cmp
push
fisttpl
fnstsw
mov
stos
int
faddp
inc
fidivrl
adc
fs
rolb
sarb
aad
mov
lahf
cli
or
lods
and
mov
cmc
ljmp
jle
mov
mov
cmpsl
jge
addr16
push
fistl
mov
les
jae
in
pop
roll
aad
sub
ljmp
lahf
punpckhdq
fldcw
shrb
pop
mov
jle
jp
sbb
sbb
gs
pushf
outsl
ror
push
les
xchg
icebp
add
mov
inc
mov
mov
and
xchg
mov
lahf
dec
enter
sbb
push
xor
sub
imul
mov
inc
mov
jmp
jecxz
jne
insl
ljmp
insb
or
call
cmp
rcrl
stos
pop
test
je
out
dec
xchg
mov
ficomps
sti
jle
addr16
sbb
xchg
pop
enter
sbb
fwait
or
mulb
pop
popa
add
xor
imul
sbb
lock
bound
insb
test
adcl
fdivl
in
mov
mov
mov
dec
mov
pop
lods
adc
jb
xchg
cs
inc
mov
sub
fldl
mov
idivl
sahf
fnstsw
mov
movsb
push
sbbl
aam
lret
mov
loopne
xchg
xchg
repnz
roll
dec
scas
dec
lret
lret
inc
and
aaa
adc
pushl
jl
or
inc
pop
fisttpl
fnsave
push
cli
dec
rcll
and
mov
lds
mov
jo
loop
mov
fdiv
pusha
notb
arpl
cmc
xor
push
ret
cmpsb
push
mov
or
jge
je
insl
xor
fisttps
mov
insl
hlt
pop
mov
dec
fdivrl
in
je
cmp
out
arpl
xchg
cmc
add
jae
jge
negl
jp
in
pop
cli
pop
into
test
inc
es
scas
xor
dec
fstpt
fwait
decb
push
aaa
push
mov
dec
mov
jns
push
rolb
sarb
jle
push
cld
push
orl
popl
jmp
mov
jge
je
popa
mov
xchg
lock
daa
test
xchg
cltd
clc
or
adcb
loope
clc
jl
jge
testl
sub
stc
les
ror
leave
test
mov
jae
xchg
pop
int3
inc
and
push
sbb
xchg
add
cmp
and
insb
loop
je
push
pop
jp
and
imul
ret
cmpsb
push
in
mov
andl
jb
add
and
jg
mov
xchg
adc
lcall
inc
aad
dec
movsb
mov
lahf
cli
or
mov
cwtl
decl
in
xchg
add
jp
xor
or
mov
xchg
repnz
cmp
push
cmp
xlat
pop
into
test
and
pop
in
pusha
notb
jb
in
push
mov
jns
jg
jmp
cmp
or
fwait
or
jns
out
adc
add
sbb
sbb
push
xchg
or
insl
lret
push
mov
push
xor
imul
lock
or
add
cmp
cwtl
lret
mov
in
jle
or
xchg
aaa
cmpsl
ret
movb
cwtl
jl
jne
bound
fisubrs
jl
notb
fs
popf
insb
test
ja
xorb
mov
gs
jp
outsb
cld
fwait
jbe
cli
jo
xorl
repz
clc
jo
xorl
loope
outsl
out
adc
or
pop
lret
scas
pop
mov
pop
mov
cmp
lcall
xchg
mov
and
xchg
add
pop
repnz
xchg
jbe
loopne
lods
cmp
js
mov
lea
cmp
sbb
mov
js
and
mov
repz
dec
fistpll
mov
sbb
or
loopw
jae
xchg
cmp
sub
adc
mov
mov
dec
and
sti
imul
adc
gs
pushf
outsl
lea
popa
add
pop
mov
scas
lret
mov
mov
je
ficoms
mov
inc
and
ds
je
lea
sbb
sub
inc
adcb
out
out
xchg
jb
mulb
decb
sti
imul
and
popa
icebp
nop
arpl
pop
mov
pop
jp
jg
sub
dec
fidivrs
jle
call
xlat
and
mov
mov
sbb
aam
dec
stc
sbb
push
jno
sub
jbe
cmpl
dec
fdivrs
push
xor
inc
and
jns
jo
xorl
pop
mov
mov
pop
stos
inc
lahf
sbb
xchg
add
jge
rcll
sub
test
pop
test
push
fdivl
in
mov
loop
mov
jle
gs
jecxz
push
in
jl
popa
add
adc
repnz
out
adc
sbb
push
shll
or
or
xchg
fisttpll
push
xchg
xchg
add
test
lods
mov
scas
sti
insl
std
test
pop
mov
jg
sub
mov
dec
mov
les
pushf
inc
jecxz
push
in
mov
in
sbb
mov
hlt
mov
dec
sub
xor
and
lcall
xor
ret
ret
sbb
rcll
and
movsb
cmp
inc
or
push
lret
mov
rclb
sub
jp
in
push
cmp
sbb
dec
fistpll
loopne
jb
stc
jne
mov
idivb
mov
push
fisttpll
out
enter
dec
mov
gs
lds
iret
cmp
pop
aas
lret
data16
xchg
outsb
lods
inc
rolb
shlb
mov
xlat
sub
das
lcall
cltd
or
push
out
xchg
or
xchg
pop
bound
add
push
aad
fdivrs
xor
or
jge
je
xor
popa
icebp
nop
arpl
sbb
sub
inc
shlb
jbe
loopne
sub
inc
rclb
and
jne
out
add
sbb
jecxz
push
in
pop
jecxz
push
in
push
test
jge
outsb
add
dec
les
int3
pop
sub
inc
lea
xchg
lock
arpl
bound
leave
test
mov
repnz
pop
repnz
lds
lods
pop
mov
cltd
or
insb
aaa
movsl
xor
imul
adc
sub
fisttps
fcoms
cmpsb
push
hlt
xchg
or
in
in
insb
loop
je
cmp
in
je
lea
pop
into
test
adc
mov
inc
mov
setb
addr16
and
jle
loope
shlb
xor
ja
scas
aas
pop
test
xor
inc
and
add
sbb
outsl
or
out
xor
lcall
adc
popa
push
fmuls
fdivrs
dec
fnstcw
stc
cwtl
imul
adc
or
lds
mov
inc
and
and
test
pop
test
fmuls
mov
cmp
or
int
and
push
pop
iret
pop
cmp
xor
call
and
mov
push
mov
gs
gs
xor
scas
aas
pop
test
repz
mov
fimuls
dec
test
mov
sbb
int3
sbb
mov
mov
inc
enter
cmp
sbb
xor
dec
fnstcw
add
jno
mov
inc
mov
in
lock
bound
dec
movsl
cwtl
and
popf
or
add
jnp
mov
das
cmpsb
xor
scas
inc
sahf
adc
fimull
fidivrl
pop
mov
js
pusha
push
fimuls
adc
pusha
notb
lods
mov
mov
xchg
add
ss
test
lcall
gs
pop
repnz
pop
int
lea
xchg
jb
sub
jle
mov
mov
clc
pushf
add
std
or
jnp
jo
loop
add
jecxz
adc
xor
pop
cmp
pop
bound
push
cmc
je
adcl
or
daa
mov
and
bnd
xchg
sub
inc
lret
pop
ds
sti
jl
jne
fs
jne
out
add
outsb
or
adc
lock
shlb
xchg
adc
clc
ja
xorb
jmp
cmpsl
sub
cs
push
xor
cmp
push
lret
mov
add
xchg
add
xor
sub
sub
sub
pop
out
out
jo
and
sbb
pop
jp
xor
pop
leave
test
test
insb
loop
je
lds
xchg
gs
arpl
cmc
dec
fiaddl
dec
in
mov
mov
in
sbb
xchg
or
in
mov
loopw
inc
shlb
dec
fisttpll
roll
inc
movsb
and
cmp
dec
jge
xchg
cmc
add
lea
cltd
clc
or
and
inc
popa
jmp
push
in
add
pusha
mov
mov
inc
mov
jecxz
cltd
push
xorl
inc
test
out
jg
jmp
pop
stos
dec
int3
inc
mov
test
jle
add
lahf
or
in
loope
inc
fidivrl
xchg
cld
bswap
stos
cmp
mov
cmpsb
mov
mov
and
imul
hlt
pop
in
fisttpll
mov
call
mov
flds
mov
out
jns
mov
mov
mov
push
mov
es
cmc
outsl
lcall
std
test
in
dec
frstor
sbb
outsb
or
inc
sub
jae
popa
add
adc
fisubl
enter
outsl
lcall
mov
mov
jle
bound
pop
and
aaa
nop
sbb
mov
js
inc
mov
fdivp
jle
mov
lret
inc
movsb
pop
aam
sub
lcall
and
pop
xlat
inc
fidivrl
xchg
testb
push
xchg
lea
mov
sbb
imul
fisttpl
movsb
push
mov
pop
fs
popf
insb
popf
xchg
aad
xchg
xchg
setg
or
incb
pop
iret
stos
pop
into
scas
xor
cmp
outsb
cld
fwait
jbe
test
mov
cs
addb
test
jge
pop
mov
and
cmc
imul
sbb
or
push
lahf
push
cld
jp
jp
adc
jb
mov
dec
leave
pop
cmp
and
sbb
adc
test
pop
test
cmpsl
sub
imul
pop
loop
dec
les
int3
sub
out
adc
mov
lods
mov
mov
loope
adc
or
arpl
xchg
gs
inc
aam
sub
popf
in
fmull
mov
je
out
add
pop
lret
scas
pop
mov
lahf
punpckhdq
pop
stos
pop
inc
fdivl
in
int3
push
lret
cmc
mov
mov
sbb
std
or
seto
popa
nop
daa
mov
xchg
adc
popf
sub
lods
and
xor
imul
gs
pushf
outsl
mov
pop
sub
xchg
int
ret
mov
lcall
lds
cmc
add
fistps
scas
pop
mov
jle
mov
pop
ljmp
add
test
cmp
icebp
popa
add
adc
cmp
and
xchg
or
push
pop
xchg
push
xchg
repz
sti
inc
rolb
shlb
or
mov
insl
cli
push
ljmp
mov
and
mov
movsl
xor
sbb
daa
mov
and
add
testb
mov
add
and
inc
pop
cli
push
mov
or
ficompl
scas
pop
mov
into
sub
movsl
xor
xchg
jb
outsl
adc
push
popa
nop
jle
fisttpll
out
into
inc
fidivrl
mov
sbb
mov
cltd
push
push
mov
lret
inc
movsb
pop
roll
sarl
out
stc
cwtl
imul
mov
xchg
arpl
inc
shlb
scas
lret
es
inc
mov
xchg
or
push
pushf
sti
push
hlt
notl
inc
fimuls
pop
jle
jnp
in
pop
setne
pop
jp
sub
pop
iret
stos
pop
into
pop
lret
pop
ds
test
mov
sbb
int
filds
test
cltd
clc
or
mov
mov
and
dec
iret
pop
cmp
divb
mov
adc
dec
fstpt
cmp
inc
movsl
and
setg
or
cmp
fists
lods
pop
xchg
adc
shll
xchg
xchg
push
cmp
das
test
mov
cmp
mov
js
popa
ljmp
je
jl
bound
dec
sub
mov
sbb
dec
and
xor
js
mov
loop
out
mov
xor
sbb
pop
int3
stos
data16
cmpsb
xor
scas
pop
int3
push
shll
xchg
or
jne
inc
sub
pop
int
cld
fwait
jbe
xlat
pop
lret
scas
pop
cmc
jbe
cmpl
mov
inc
mov
das
scas
cmp
mov
xlat
push
mov
sbb
imul
jne
into
pop
cmp
aas
dec
lret
pop
ds
jno
push
sub
lds
adc
dec
dec
lds
iret
sub
dec
fnstsw
into
inc
shlb
or
outsb
adc
adc
mov
fisttpl
pop
into
pop
cmp
jno
xchg
add
push
cltd
or
mov
mov
push
lret
mov
push
xor
imul
insb
lahf
sub
adcb
subb
sbb
dec
fisttpl
fnsave
sti
imul
dec
jg
jno
jecxz
sub
xchg
xor
leave
pop
cmp
dec
mov
lahf
cli
or
pop
xchg
or
jp
mov
inc
mov
xchg
sbb
in
bound
push
cmp
sub
loop
sbb
gs
pushf
outsl
testb
xchg
add
pop
movsl
sub
lds
orl
shlb
pop
iret
stos
pop
mov
push
mov
les
and
out
dec
frstor
ret
inc
rolb
shlb
cli
jae
xchg
dec
fimuls
push
sub
pop
inc
fisttpll
out
sub
or
mov
gs
inc
lret
pop
lret
scas
pop
repnz
add
inc
shll
sub
jno
iret
pop
cmp
push
sub
adc
adc
js
mov
and
push
mov
jns
popa
push
xlat
inc
and
aas
stos
sub
push
jge
negl
lock
adc
sbb
or
push
js
addr16
adc
pop
int
addl
jno
aam
sub
jb
in
dec
fisttps
add
add
or
cmp
adcb
addb
adc
adc
fimuls
push
or
sub
rcrl
pop
in
inc
jecxz
push
in
ret
pop
enter
repz
xchg
or
test
mov
sbb
sbb
fsubrs
scas
lretw
pop
ds
pop
mov
out
insb
loop
je
cs
cmp
mov
arpl
jo
loop
sub
jo
xorl
push
mov
das
les
test
jge
outsb
mov
cwtl
sti
jno
xorb
aad
sub
xor
jg
mov
or
and
push
pushf
sti
push
loop
dec
fnstcw
cwtl
decl
decl
mov
in
das
cmp
cmp
dec
lret
xchg
mov
push
cld
adc
jmp
push
in
dec
mov
rcrl
push
xor
jns
cmpsl
aaa
push
mov
push
sbb
mov
mov
adc
jns
mov
jmp
into
mov
mov
sub
mov
lea
and
repnz
xchg
add
pop
xchg
adc
rcrb
scas
pop
mov
andl
popa
testl
je
loopne
cltd
push
gs
jp
test
push
lahf
push
sbb
jbe
add
std
or
adc
out
jl
jne
jno
push
lahf
push
pop
xchg
mov
push
mov
cld
fwait
jbe
push
push
xor
daa
fimuls
mov
push
cmp
cmp
sbb
pop
xchg
repnz
or
push
out
jo
xorl
fs
in
bound
imul
jl
mov
stc
jns
mov
pop
jecxz
push
in
and
loop
icebp
nop
arpl
aas
aam
add
jb
xchg
daa
mov
inc
into
pop
cmp
xor
jl
jne
and
jno
xorb
jb
xchg
xchg
sbb
aad
rorb
sbb
outsb
es
cmp
inc
lods
and
inc
aad
dec
movsl
add
imul
lods
cmp
jae
xchg
mulw
icebp
adc
sub
push
divb
jge
testl
mul
js
mov
sbb
sbb
xor
mov
inc
mov
insb
icebp
popa
add
inc
jns
jnp
in
inc
mov
xchg
adc
fcompl
imul
setg
or
movl
xor
inc
test
lret
and
mov
cmp
sub
jae
in
lret
dec
fdivrl
jle
call
xchg
xor
xchg
add
pop
cli
jno
xorb
sbb
imul
insl
mov
cmc
ja
push
jbe
cmpl
int
and
and
pop
aas
lret
ja
xorb
xchg
add
jae
add
std
or
cmp
int3
pop
iret
stos
pop
rol
leave
test
test
outsb
cld
fwait
jbe
sbb
cwtl
pop
xchg
repnz
xchg
mov
push
cmpsl
push
iret
pop
cmp
pusha
mov
movsb
cli
pop
iret
stos
pop
loopne
insl
std
test
pop
xchg
or
jp
lock
adc
mov
jg
push
cmp
sti
jl
jne
sbb
push
xchg
add
js
sub
les
int3
imul
cmp
cmc
gs
adc
nop
push
popa
nop
je
adc
mov
jle
bound
test
rolb
sarb
pop
roll
aad
lea
mov
and
mov
adcb
jecxz
cld
xchg
add
aam
sub
and
mov
lahf
push
mov
cmp
loop
jmp
icebp
popa
add
pop
scas
xor
notl
andb
and
xorb
sahf
or
cmpsb
and
mov
mov
cmpsb
shll
xchg
adc
jae
xchg
rcrl
scas
pop
mov
enter
sub
pop
repnz
mov
xchg
add
jp
and
sahf
sbb
xchg
add
pop
imul
pop
loop
and
cmp
mov
cmpsb
popf
pop
xchg
adc
xor
dec
rolb
mov
test
notl
rolb
mov
in
fwait
or
pop
das
mov
xchg
or
outsb
cld
fwait
jbe
cwtl
adc
cmpsb
xor
scas
pop
or
add
daa
mov
and
or
push
mov
into
cmp
dec
mov
fsubrl
lcall
dec
in
bound
add
and
mov
jle
insl
pop
fmuls
fdivrs
popa
loopne
adc
add
xor
dec
lret
lret
sti
imul
adc
cwtl
push
imul
mov
inc
mov
sub
push
cwtl
push
imul
inc
xlat
mov
cmpsb
ja
push
mov
sbb
pop
int3
inc
and
and
rolb
xchg
add
sahf
jl
out
jp
jp
push
adcl
es
fildll
mov
inc
mov
add
or
dec
ret
jmp
inc
shll
mov
sbb
lea
in
sbb
pop
les
xchg
outsb
jmp
xor
outsl
repz
cmc
daa
add
xor
sahf
sbb
pop
jecxz
push
in
aas
mov
mov
movsl
int3
aas
ror
dec
frstor
xchg
addr16
push
lds
fwait
jbe
push
out
cltd
push
stos
pop
test
in
inc
shll
dec
das
fidivl
loopne
loope
jae
js
jle
call
stos
movsw
lock
xchg
outsb
mov
fs
popf
insb
xchg
jle
mov
outsb
popf
cmp
and
or
sbb
fnstenvs
sahf
mov
hlt
jo
bound
pop
cmp
popa
shlb
in
push
mov
jno
jecxz
xor
xor
or
outsb
call
cmp
sub
pop
cmc
ja
xorb
add
xchg
add
jae
fisttpll
out
jne
xchg
testb
mov
inc
mov
lods
and
mov
push
fimull
fisubrl
out
ljmp
jne
jno
mov
inc
mov
ljmp
fwait
jbe
and
push
mov
mov
and
imul
hlt
pop
in
test
xchg
adc
push
movsb
inc
fmuls
fsubrs
jo
xorl
and
sbb
lret
jle
mull
icebp
push
data16
imul
pop
cmp
dec
std
pop
int3
stos
data16
mov
jg
pop
adc
rolb
inc
mov
test
mov
xlat
push
mov
xchg
adc
xchg
adc
dec
fidivrs
mov
cmp
sbb
jl
pusha
pop
repnz
addr16
mov
shll
cmp
dec
cs
mov
mov
sub
adc
jmp
fucomip
add
add
jmp
jle
arpl
cmc
push
imul
add
add
fidivl
add
mov
add
sub
push
xor
mov
mov
int3
add
jmp
mov
jmp
call
jmp
test
in
sbb
fwait
inc
call
add
lods
gs
add
sbb
and
jmp
imul
add
add
jmp
mov
mov
jmp
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
in
lods
shr
mov
add
add
jmp
gs
pop
repnz
mov
add
pop
sub
jmp
pop
pop
sub
jmp
gs
cmp
sub
jmp
nop
out
call
jmp
jns
bound
adcb
xchg
sbb
and
ucomiss
call
ret
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
mov
repz
add
adc
xchg
add
add
add
add
jmp
adc
mov
iret
mov
popa
incl
popf
ret
mov
sbb
mov
incl
popf
ret
pop
ret
ret
loop
xor
add
inc
and
out
sbb
pusha
jmp
mov
add
add
jmp
pop
rcll
push
in
pop
sub
jmp
call
jmp
cwtl
call
jmp
cltd
add
push
lahf
push
jns
les
adc
incl
movw
movzbl
add
cmp
je
jmp
movsb
jl
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
cltd
call
jmp
in
jb
xchg
shlb
sbb
add
jnp
shl
mov
in
scas
and
cmp
mov
mov
movsb
lret
jmp
pusha
mov
and
jmp
call
jmp
jae
jge
negl
inc
jne
sub
mov
movl
movw
movzbl
add
cmp
je
jmp
imul
inc
call
jmp
xor
ljmp
add
mov
les
pop
call
bound
adc
add
jmp
call
jmp
andl
shll
cmpsl
loope
movl
movw
movzbl
add
cmp
je
jmp
push
pop
sub
jmp
inc
mov
enter
jmp
xchg
pop
sub
jmp
call
jmp
add
adc
mov
sbb
insl
sub
addl
pusha
jmp
arpl
jbe
loopne
cltd
pop
fistpll
add
add
push
dec
inc
dec
xor
cs
insb
add
sahf
xchg
call
jmp
je
imul
sbb
mov
inc
and
popf
ret
pushf
sbb
aas
call
jmp
or
push
mov
dec
sti
inc
pushf
addl
pusha
jmp
jmp
add
push
dec
inc
dec
xor
cs
insb
add
adc
and
lock
shl
test
xchg
cmpsb
jmp
callw
add
jmp
aam
mov
push
pushf
addl
pusha
jmp
jnp
loope
add
add
jmp
cltd
adc
sub
enter
and
popa
incl
popf
ret
sbb
adc
push
cmp
jmp
call
jmp
jge
push
cld
adc
or
xorl
add
jmp
out
es
jmp
ja
outsl
or
jecxz
sbb
je
or
jmp
mov
movl
jmp
pushf
call
jmp
adcb
out
icebp
mov
mov
call
dec
sbb
aas
negl
stos
mov
sar
adc
ds
call
jmp
inc
outsl
push
sub
mov
and
call
jmp
mov
test
push
jns
cmp
and
call
sahf
or
cmpsb
push
xlat
pushf
addl
pusha
jmp
mov
add
call
iret
push
jecxz
mov
add
callw
add
jmp
cltd
or
cli
mov
popa
incl
popf
ret
movsl
stos
ja
jne
add
jmp
mov
shrl
sub
mov
jmp
dec
add
add
add
jmp
jb
jo
loop
or
ss
add
add
jo
mov
cmp
mov
call
jmp
das
mov
push
push
xor
sub
add
add
push
dec
inc
dec
xor
cs
insb
add
nop
and
jecxz
mov
pop
xchg
repnz
dec
mov
jae
movl
movw
movzbl
add
cmp
je
jmp
xor
jmp
mov
movl
movw
jmp
cmp
call
jmp
adc
push
jno
push
add
add
and
outsb
fmull
lahf
aad
xor
int3
je
bound
call
jmp
push
xchg
add
outsl
sti
imul
or
and
jmp
sti
in
sar
call
jmp
mov
xchg
or
xor
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
aaa
adc
mov
xchg
inc
fisttpll
out
ja
jl
testb
dec
xchg
incl
popf
ret
inc
repz
add
jmp
call
jmp
pop
xchg
jb
es
call
jmp
std
add
rorl
add
stc
data16
xchg
outsb
inc
and
js
mov
mov
xor
addl
pusha
jmp
jp
jne
out
pop
out
call
jmp
mov
test
pop
lcall
sub
dec
pop
pushf
addl
pusha
jmp
mov
push
or
ljmp
call
jmp
fstpt
mov
rcr
dec
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
sub
jecxz
sbb
sti
jmp
in
dec
je
jmp
xlat
push
lret
mov
aas
fdivrl
mov
cld
xor
add
add
call
add
add
mov
lea
ret
jmp
addb
repnz
stc
jge
je
insb
cmp
incl
popf
ret
mov
stos
into
cmp
inc
pop
sub
jmp
mov
call
jmp
test
mov
ljmp
cli
cli
push
mov
mov
mov
addl
mov
popl
jmp
sbbl
movlps
movb
jmp
mov
add
add
jmp
sbb
punpckhdq
addl
popf
lea
jmp
call
add
add
jmp
and
repz
call
hlt
jg
pusha
mov
add
lcall
call
push
jmp
movl
popa
jmp
sbb
out
aaa
pushl
lea
jmp
es
fcomps
xor
add
daa
loop
call
jmp
inc
iret
pop
cmp
jo
mov
push
adc
movl
movw
movzbl
add
cmp
je
jmp
ficoms
mov
sub
jmp
call
jmp
and
push
fdivl
in
pop
sub
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
cmpsb
sbb
sti
jmp
loopne
call
jmp
inc
enter
sub
aas
addl
pusha
jmp
mov
aas
pusha
inc
movw
jmp
call
jmp
xor
sbb
pop
sub
mov
movl
jmp
in
ret
add
add
jbe
add
and
aaa
scas
inc
call
es
jns
dec
and
stc
adc
imul
call
jmp
mov
repnz
fs
pop
mov
jmp
call
jmp
mov
mov
sbb
repz
adc
add
cmpsl
or
out
imul
xor
jp
push
mov
push
call
jmp
pop
sub
jmp
call
jmp
call
jmp
pop
iret
pop
cmp
xor
add
add
push
dec
inc
dec
xor
cs
insb
add
iret
test
lods
mov
scas
enter
mov
push
pushf
addl
pusha
jmp
outsb
call
jmp
jmp
call
jmp
or
aas
inc
cltd
adc
mov
add
cmp
je
jmp
outsb
jo
pusha
jmp
dec
xor
call
jmp
cmp
add
addr16
add
je
jl
testb
push
pushf
addl
jmp
call
jmp
xchg
or
hlt
dec
add
inc
and
popa
incl
popf
ret
and
inc
fimull
fisubl
fsubs
sbb
nop
jns
mov
jmp
and
add
add
jmp
hlt
push
lahf
push
sti
mov
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
int
add
add
jmp
xchg
mov
mov
inc
lds
adc
orl
and
movw
movzbl
add
cmp
je
jmp
push
and
add
repnz
add
inc
fimuls
push
jg
xlat
sub
pop
sub
add
pop
mov
addl
mov
popl
jmp
lds
pushf
outsl
ljmp
and
jmp
jmp
dec
call
jmp
jne
gs
sub
and
add
pushl
jmp
pusha
and
call
jmp
jno
pusha
pop
repnz
pop
inc
imul
adc
jmp
call
jmp
loope
notl
dec
pop
call
add
add
mov
lea
ret
addl
jmp
mov
cmpsl
ret
in
shlb
xor
add
add
add
mov
test
pop
test
cmp
mov
push
push
lea
jmp
cmp
add
add
jmp
inc
lds
iret
and
xor
add
jg
pusha
mov
add
lcall
push
call
push
jmp
aad
add
add
jmp
divl
xchg
int3
pop
push
pushf
addl
jmp
call
jmp
cmp
push
lea
add
and
cs
sbb
fs
xchg
dec
mov
mov
stos
and
call
jmp
lret
inc
mov
out
push
loopne
add
add
jmp
jg
gs
ss
adc
mov
or
xchg
fwait
call
jmp
out
cld
fwait
jbe
xor
loopne
mov
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
cwtl
aaa
inc
or
das
jb
xchg
cmc
add
rcrb
xchg
xchg
pop
sub
jmp
cmp
mov
add
add
cmp
add
jp
fs
pop
lahf
or
call
mov
imul
dec
test
xor
add
jo
test
push
call
jmp
loope
call
jmp
cmc
js
mov
push
arpl
pop
pop
sub
jmp
or
add
jmp
aaa
stos
cmp
inc
sub
scas
mov
movl
movw
jmp
push
call
jmp
fisttpl
mov
popa
incl
popf
ret
in
fsubl
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
fisttpl
mov
repnz
cmpsl
inc
pop
sub
jmp
pop
cmpsb
mov
adc
adc
sbb
add
add
jmp
mov
mov
sbb
loopne
dec
fdivrp
nop
jg
movsb
jmp
mov
movl
jmp
pop
call
jmp
mov
ret
call
hlt
jg
pusha
mov
add
lcall
sarl
jmp
and
ret
jmp
pop
call
jmp
jnp
jge
negl
sbb
addl
pusha
jmp
inc
in
jne
incl
popf
ret
jb
mov
sbb
je
dec
add
add
inc
and
ja
inc
mov
mov
out
scas
stos
mov
jmp
mov
add
add
jmp
mov
cltd
std
imul
insl
ret
mov
add
cmp
je
jmp
jno
jle
call
xor
out
push
sbb
call
jmp
inc
push
call
jmp
call
jmp
push
xchg
pop
bound
cltd
jle
push
pushf
addl
pusha
jmp
call
fisttpl
push
sub
lea
mov
adc
push
enter
ja
jne
jmp
xor
ds
test
inc
fdivl
in
push
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
jl
or
jmp
call
jmp
imul
insl
in
cmp
inc
mov
sub
mov
movl
movw
jmp
mov
mov
repnz
pop
repnz
mov
pop
and
incl
jmp
call
jmp
pop
jecxz
push
in
mov
cmp
je
jmp
push
pushf
addl
pusha
jmp
mov
ret
jbe
cmp
ficomps
call
jmp
push
adc
nop
lea
loop
jmp
imul
call
jmp
xor
bnd
movzbl
add
cmp
je
jmp
xchg
sbb
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
mov
mov
sub
ret
lret
call
or
push
pop
fpatan
xchg
mov
enter
pop
movsb
push
and
add
add
jmp
mov
movsb
ret
shrb
and
incl
popf
ret
xor
add
mov
add
divl
xchg
adc
add
jmp
leave
mov
add
add
jmp
sbb
cmc
je
push
pushf
addl
pusha
jmp
nop
pop
sbb
add
add
lock
clc
and
add
jmp
jb
outsl
or
mov
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
ret
add
add
imul
mov
shll
jmp
jge
pop
pop
sub
jmp
add
call
jmp
lret
mov
icebp
mov
popa
incl
popf
ret
test
add
mov
data16
xchg
outsb
mov
fwait
push
jmp
xchg
cwtl
decl
jecxz
pop
sub
jmp
in
call
jmp
mov
mov
adc
add
and
cs
sbb
fs
xchg
dec
mov
mov
fists
cmpsb
push
mov
fwait
insb
cmp
das
pop
sub
mov
movl
movw
movzbl
add
cmp
je
jmp
out
sbb
call
add
add
mov
lea
ret
addl
jmp
pop
enter
outsl
push
add
pop
jmp
push
inc
call
jmp
xchg
add
jl
add
add
sbb
movsb
ret
ds
push
roll
shll
lods
xor
inc
lea
jmp
push
xlat
inc
and
xor
inc
xlat
mov
cmpsb
jb
outsb
or
sbb
cltd
nop
sbb
lcall
sub
pop
jnp
push
cld
jmp
adc
inc
aam
dec
mov
push
mov
lahf
push
jmp
sbb
pop
repnz
xchg
hlt
lcall
jmp
dec
inc
and
das
stc
lock
aam
gs
pushf
outsl
dec
frstor
sub
jno
call
jmp
and
mov
inc
mov
cmp
cmp
add
inc
lock
scas
aas
lea
jmp
cmpsb
cmp
pop
iret
stos
pop
rcrb
ret
sbb
xor
dec
fnstcw
mov
and
lret
mov
daa
inc
mov
sbb
or
out
jae
push
cld
sbb
cmp
lret
pop
ds
int3
inc
aam
dec
and
jmp
fnstsw
and
jg
imul
insl
test
push
insl
jmp
pop
loop
push
jecxz
push
in
mov
rcrb
push
jns
pusha
sahf
adc
sbb
xchg
popa
enter
inc
mov
mov
fimuls
mov
mov
sbb
xor
push
mov
xor
scas
sbb
push
les
leave
jmp
sbb
and
dec
adc
push
cmc
outsl
lcall
xchg
cld
psubsw
add
lcall
lods
iret
push
ret
cmpsb
push
xchg
dec
fdivrs
lods
jmp
mov
xchg
add
jnp
mov
sbb
or
int3
int3
int3
int3
int3
call
jmp
rclb
adc
les
int3
sub
push
ret
cmpsb
push
mov
sub
lods
and
repz
add
jl
jne
push
daa
mov
and
loope
stc
cwtl
imul
or
mov
dec
mov
xchg
pusha
mov
cmpsl
and
sbb
mov
imul
push
cmp
and
jge
pushf
or
push
jmp
jmp
call
pop
lods
cmp
ret
push
lds
push
jmp
xor
divw
xchg
outsl
hlt
push
cld
dec
add
or
in
jmp
xor
imul
nop
arpl
out
call
repz
sbb
xchg
cld
jp
dec
cltd
lods
sub
imul
sbb
or
testb
adc
mov
ret
mov
mov
sub
scas
push
add
cmc
adc
outsb
cld
fwait
jbe
jge
imul
xor
out
pop
xlat
inc
jmp
cs
mov
xchg
bound
push
loop
dec
or
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
jmp
pop
sti
sub
cmp
push
lds
hlt
jb
xchg
rolb
dec
lods
jl
outsb
or
push
out
inc
shr
sar
jmp
jg
xor
pop
aas
call
mov
shl
loop
call
jmp
mov
add
or
outsb
cld
fwait
jbe
sub
push
rolb
sarb
pop
call
jmp
push
lret
mov
jecxz
push
in
ljmp
xor
mov
lea
jmp
jge
in
lock
bound
movsl
inc
loope
jecxz
jne
add
sbb
push
adc
jmp
xchg
xor
fisttps
fldl2t
leave
push
add
inc
mov
loop
push
mov
jg
bound
js
jo
loop
sbb
push
popa
call
sub
push
mov
movsb
call
jmp
pop
iret
stos
pop
test
pusha
out
jp
jp
mov
cltd
push
mov
lea
jmp
adc
cmp
gs
pushf
outsl
rorb
inc
sub
je
jmp
jmp
scas
lret
data16
imul
pop
bound
dec
mov
mov
movsl
fs
sbb
sbb
xchg
je
je
mov
jmp
sbb
cmp
xor
insb
or
in
jmp
xchg
pusha
lcall
fmuls
fdivs
and
mov
jle
push
jmp
mov
sbb
enter
pop
mov
jnp
mov
inc
aad
jmp
jp
sti
imul
cmp
mov
gs
jbe
rclb
sub
outsl
lcall
in
jmp
out
add
out
sbb
insb
or
mov
inc
shlb
fnstcw
add
popa
stc
data16
xchg
outsb
fnstenv
push
stc
fs
popf
insb
fistl
mov
rolb
call
jmp
andb
int3
inc
and
shll
icebp
add
jp
imul
sbb
call
jmp
or
in
shlb
daa
inc
mov
cmc
jnp
mov
inc
push
xor
sub
std
insl
lea
jmp
cs
cmp
inc
in
sbb
add
rcll
and
call
push
cmp
and
adc
lret
stos
call
jmp
inc
fidivrl
pop
cmp
sub
adcl
test
dec
ret
mov
fs
jmp
inc
mov
sub
int3
inc
aam
dec
lods
push
fimuls
inc
cmpsl
jmp
jmp
lock
bound
out
push
lahf
push
add
loop
sti
sahf
insl
lahf
aaa
stos
cmp
inc
out
jl
jne
jno
jl
popa
out
call
lahf
mov
or
gs
add
jmp
test
inc
shll
fistpll
jbe
loopne
lods
and
xor
sub
jp
jp
sub
pop
fisttpl
fnstsw
sub
lods
and
aaa
cmpsl
ret
and
lahf
or
in
jmp
mov
repz
lock
bound
jae
pusha
mov
inc
xor
adc
jl
add
call
jmp
mov
cmpsl
or
jl
jne
xor
jg
jmp
jmp
popa
add
and
pop
mov
call
cmp
je
push
call
pop
call
pop
call
call
pushf
mov
negl
pushl
call
mov
add
fwait
call
call
jmp
jg
mov
outsb
cmc
gs
inc
xchg
add
mov
and
jmp
jg
cmp
in
mov
movsb
lahf
and
jmp
test
mov
inc
mov
into
dec
frstor
mov
fistpl
fs
and
out
lock
bound
aaa
xlat
xor
popa
out
jg
or
add
sub
mov
dec
test
inc
test
jmp
push
add
jg
arpl
cmc
sbb
cmpsb
xor
scas
or
imul
add
jmp
loop
cmc
sbb
jg
cltd
or
mov
leave
ljmp
jne
call
jo
leave
call
jg
or
call
jmp
pop
xchg
repnz
mov
arpl
xchg
gs
js
jle
call
lea
jmp
inc
xlat
inc
and
xor
negl
je
mov
sbb
aaa
les
scas
cltd
pop
xchg
repnz
stos
push
fadds
mov
jmp
jno
movsl
xor
imul
push
shll
add
xchg
jmp
cwtl
push
imul
pop
in
call
jmp
jmp
jg
mov
mov
int
je
lea
dec
les
fdivrl
mov
ret
push
lds
push
mov
pop
decl
push
xor
daa
or
rclb
jmp
mov
dec
mov
mov
sub
jp
ret
push
lds
lods
cmp
adc
push
push
xor
imul
stos
adc
add
sbb
mov
sbb
subb
roll
aad
and
add
jmp
fistpll
imul
jl
ljmp
stc
shll
aam
xchg
or
jge
jno
xorb
outsl
lcall
pop
cmp
ss
jmp
sbb
jnp
mov
cmp
fsts
mov
jp
in
add
xchg
jb
imul
xor
inc
sub
mov
call
sub
or
mov
call
or
sbbl
daa
inc
mov
or
or
js
sahf
or
cmpsb
dec
js
bound
sbb
stos
add
frstor
or
push
rorl
mov
je
add
aas
mov
jge
ja
loope
mov
xor
push
sbb
add
js
mov
in
and
xchg
jmp
sbb
in
stc
cwtl
imul
lock
pop
sbb
jmp
movsl
push
mov
stos
pop
roll
mov
out
in
jge
divl
aam
sbb
mov
out
adc
push
and
mov
test
push
jmp
insl
std
test
test
cmpsb
shll
jle
jne
out
push
ljmp
mov
push
jmp
adc
add
inc
fisttps
fsts
fmuls
fcomps
sti
imul
jl
jmp
adc
add
mov
aaa
mov
dec
mov
jg
outsl
or
call
jmp
push
jl
negb
pop
jecxz
push
in
js
pusha
pop
repnz
jb
jmp
aad
mov
xchg
pop
les
cmpsb
push
mov
cmc
pop
inc
lret
lret
pop
jmp
sub
push
shlb
mov
inc
fisttpl
arpl
popa
add
jmp
aad
sub
push
sub
sub
push
mull
nop
arpl
jmp
dec
fisttpl
xchg
or
and
sub
jmpw
add
bound
xchg
testb
adc
sbb
xchg
sarb
ljmp
and
mov
lea
jmp
xor
aaa
mov
inc
mov
mov
leave
push
ret
cmpsb
push
mov
dec
mov
cld
cmp
adc
je
add
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
movl
call
cmpl
jne
pushl
jmp
call
movsl
xchg
dec
push
push
call
dec
call
pushf
test
jne
call
mov
call
mov
lock
add
fldl
add
call
jmp
dec
fdivrs
insl
hlt
pop
lock
inc
and
jns
lahf
punpckhdq
lea
jmp
push
push
xor
xchg
and
jb
in
nop
or
xchg
mov
mov
sbb
addr16
jl
negb
loope
std
test
adc
or
jnp
jle
lea
jmp
cmpsb
xor
int
aam
jg
mov
into
pop
int3
stos
ror
int
cmpsb
enter
data16
mov
jmp
arpl
xchg
gs
lea
push
xor
sbb
xchg
add
jne
rolb
fs
jmp
cmpsl
push
mov
jbe
cmpl
rolb
shlb
iret
dec
fnstcw
repnz
add
mov
test
or
repz
jmp
mov
add
adc
mov
mov
mov
iret
pop
cmp
jo
pusha
notb
stc
mov
mov
sar
jmp
jno
xchg
or
in
jge
divl
add
insl
std
test
fucomi
fldenv
jmp
shrl
jns
in
jge
testl
push
aam
aad
dec
mov
sbb
or
pushl
call
pop
pushl
call
jge
call
jmp
lds
popa
add
adc
andb
jmp
push
lds
scas
pop
cld
repnz
icebp
nop
arpl
and
imul
jmp
aaa
fistl
jae
in
pop
iret
stos
pop
test
jb
in
fbstp
sub
jmp
loopne
adc
add
stos
mov
cltd
clc
or
cli
jle
mov
lea
jmp
or
in
xchg
add
xor
insb
or
int
loopne
adc
push
push
jmp
adc
jl
push
lahf
push
add
lcall
adcl
gs
jg
iret
pop
int
addr16
lahf
cli
or
sub
push
lds
or
add
push
jno
push
add
sbb
adc
call
push
call
pop
andl
xor
inc
call
jecxz
test
add
add
imul
adc
cmpl
jne
pushl
call
pop
mov
mov
test
je
pushl
call
pop
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
pushl
call
mov
call
mov
call
pushl
call
mov
pushl
call
add
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
push
call
call
pop
push
call
call
pop
movl
call
cmpl
jne
call
cmp
call
pop
pushl
call
xor
inc
call
add
repnz
rorl
fldl
add
call
jmp
int3
sub
push
lret
mov
call
dec
mov
fwait
decb
call
jmp
pop
lret
scas
pop
stos
pushf
add
fiadds
mov
out
and
js
lea
jmp
js
jp
in
inc
out
call
repz
cmc
je
jmp
add
jbe
out
jg
jmp
xlat
dec
lock
jmp
inc
shll
mov
das
lds
cmc
and
outsl
insb
lea
jmp
je
addr16
add
jnp
jg
mov
out
jns
mov
and
sbb
outsl
hlt
push
cld
dec
lods
cmp
int
and
push
jae
xchg
sbb
pushf
sti
push
mov
movsb
or
fisubrl
lds
iret
dec
jg
jb
jmp
loopne
adc
xor
push
mov
rorb
cltd
sbb
jmp
mov
inc
and
loop
je
inc
rclb
sub
push
jmp
mov
push
xchg
repz
lds
ret
dec
push
xor
sub
std
sahf
adc
or
in
loopne
sub
enter
cmp
jl
adc
scas
lret
cmc
popa
icebp
nop
arpl
and
sub
jmp
jl
adc
mov
xchg
add
pusha
daa
mov
add
push
lea
adc
jmp
mov
mov
inc
mov
jne
xor
jmp
xor
into
test
jae
in
jo
popa
add
pop
inc
lret
pop
ds
ds
mov
fs
pop
push
adc
insl
test
jmp
push
pop
rolb
shlb
call
stos
and
push
xor
and
test
jmp
dec
pop
iret
stos
pop
test
into
in
pusha
notb
clc
lahf
push
int
add
js
push
lds
iret
push
mov
gs
push
cmp
cmp
dec
xor
mov
adc
daa
adc
addr16
xchg
cmc
add
jno
jne
add
add
jb
xor
mov
adc
clc
jmp
add
add
or
lahf
punpckhdq
mov
je
out
cmp
add
add
jmp
pop
aas
lret
out
adc
push
in
lock
bound
add
test
xchg
icebp
add
sbb
lock
mov
out
cld
fwait
jbe
rcl
call
jmp
jecxz
push
in
iret
push
lds
movsl
push
jmp
pop
xchg
repnz
fs
jmp
xlat
and
adc
push
movsl
and
push
xor
dec
mov
les
add
mov
jns
outsb
inc
push
add
add
call
jmp
cld
xchg
cmc
add
scas
daa
mov
and
sbb
pop
xchg
add
data16
jbe
fs
jmp
ret
cmpsl
push
cmc
xor
outsl
xchg
pop
xchg
repnz
scas
jmp
leave
cmp
mulb
xchg
bound
test
lahf
punpckhdq
mov
js
ljmp
mov
push
cmpsl
sbb
adc
ss
mov
lods
and
add
pop
cmp
push
test
lret
dec
fistpll
sbb
imul
lcall
sub
movsl
and
je
add
add
jne
out
add
mov
mov
mov
pushl
in
fwait
sbb
test
jg
scas
call
jmp
outsl
lcall
mov
and
fwait
pop
xchg
repnz
pop
lds
iret
jnp
fs
jmp
xchg
ret
xchg
gs
lahf
punpckhdq
hlt
pop
mov
or
add
mov
inc
mov
add
jmp
fwait
or
jp
xor
cmp
push
rolb
dec
lods
inc
push
mov
jmp
xchg
or
jne
and
pop
mov
gs
xor
adcl
test
jmp
sub
or
leave
pop
iret
stos
pop
test
or
adc
push
jmp
imul
push
cld
or
test
jl
divb
sbb
adc
imul
hlt
xchg
outsb
xchg
pop
aas
stos
cmp
pop
fmuls
daa
mov
xchg
out
ja
xorb
cmp
sbb
add
int3
stos
rcr
jl
jne
add
lea
or
pop
inc
and
and
repz
fisttps
flds
cmp
pop
jmp
popa
nop
jo
sbb
aad
lret
jp
in
add
mov
jbe
push
jmp
loop
je
arpl
js
ljmp
rcrl
xchg
insb
jmp
xchg
cmc
add
dec
pop
lret
scas
pop
scas
setge
mov
xchg
xchg
adc
sub
data16
jmp
repnz
pop
repnz
lea
in
sbb
sbb
sub
stos
pop
mov
lea
jmp
cmp
and
mov
jns
sets
mov
sbb
loope
sbb
dec
sub
pop
pop
fimuls
add
xor
xor
je
lea
cmp
loop
pop
loop
cwtl
adc
xor
mov
jmp
or
jbe
cmpl
jp
jp
pop
roll
sarl
mov
lret
add
arpl
xchg
gs
pop
int3
stos
xchg
in
ljmp
cltd
push
cmpl
xchg
add
call
jmp
push
mov
ret
shr
outsl
lcall
or
jp
js
lea
jmp
test
mov
cmpsl
aaa
push
mov
pop
scas
inc
pop
jmp
outsl
lcall
test
pop
std
ss
jae
push
jp
jp
orb
add
cmp
push
mov
jmp
inc
fidivrl
lods
mov
loop
sbb
mov
jo
sbb
pop
adcb
sbb
xor
ljmp
stc
testb
xor
push
jmp
leave
add
imul
out
cmc
gs
push
xor
jl
jbe
sbb
add
lock
aad
mulb
jns
rclb
inc
sub
mov
mov
add
jmp
leave
add
xchg
inc
aad
dec
scas
mov
scas
loopne
cmc
pushf
outsl
jmp
aaa
fstpt
mov
pop
repnz
xchg
pop
cmp
jno
xlat
inc
jmp
call
dec
fdivrl
das
dec
mov
and
call
jmp
movsb
add
fldenv
xchg
cmc
add
aad
ret
cmpsb
push
cli
jmp
xchg
outsb
sarl
fs
push
call
call
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
call
jmp
outsl
cltd
jae
ja
loope
sub
mov
xchg
adcl
fwait
adc
xchg
inc
mov
out
sar
jmp
int
and
xor
loopne
adc
add
dec
popf
sbb
mov
lea
jmp
add
and
lock
int3
stos
rcr
shlb
jb
add
int
push
les
dec
sub
psrlw
fs
ljmp
stc
out
clc
imul
inc
shlb
pop
jb
dec
pop
mov
int3
int3
int3
call
jmp
repnz
pop
repnz
leave
push
shll
cmp
sbb
xchg
aas
insb
sti
imul
dec
add
mov
lcall
mov
fdivrs
jp
in
inc
loop
mov
cmp
bnd
lea
mov
call
in
sub
push
mov
push
mov
call
or
push
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
jl
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
call
call
jmp
mov
inc
mov
cltd
push
mov
movb
cmp
sub
push
ja
xchg
lea
jmp
std
or
inc
leave
pop
cmp
add
stos
cmp
inc
or
xor
sbb
pop
mov
fadd
dec
fistpll
loope
jae
ds
inc
mov
out
add
push
repnz
aad
out
popf
or
jnp
mov
ret
jmp
mov
aaa
cmpsl
ret
mov
mov
jg
call
jmp
xchg
or
je
fisttps
fsts
pushf
or
in
mov
loop
pop
loop
inc
aam
lea
jmp
sti
insl
std
test
addr16
pop
repnz
cld
data16
xchg
outsb
lahf
fs
hlt
pop
mov
mov
js
and
push
ret
cmpsb
push
in
imulb
cltd
push
ss
insb
or
scas
pushf
pop
xchg
repnz
insb
jmp
les
int3
dec
ret
mov
jmp
imul
insl
lea
dec
das
fidivrl
pop
fimull
fidivrl
xchg
adc
jmp
fisubrl
xlat
mov
stos
push
roll
sarl
pusha
ljmp
or
cmpsb
push
jmp
shll
nop
testl
sbb
adc
into
mov
fadds
inc
and
bound
mov
sbb
inc
mov
xor
inc
rolb
shlb
xor
aas
test
push
jmp
or
aaa
cmpsl
ret
push
mov
xchg
aas
insb
sti
imul
inc
sbb
sbb
inc
daa
shlb
mov
inc
mov
dec
jno
mov
mov
xchg
adc
js
jecxz
push
in
inc
ret
ret
sbb
jae
addr16
pusha
pop
repnz
push
inc
push
xor
daa
mov
adc
dec
sub
inc
lods
and
mov
xchg
repnz
popa
in
jge
notl
pop
pushl
jmp
or
adc
push
jl
fists
cmpsb
push
mov
mov
sbb
inc
mov
push
mov
es
out
jg
jmp
movsl
push
mov
jne
jmp
or
loop
je
mov
mov
pop
int3
stos
iretw
fwait
jmp
or
mov
sbb
mov
out
jno
xorb
or
or
idivl
add
xor
and
sbb
mov
call
in
jge
negl
fisttps
flds
and
sar
jmp
test
push
push
xor
cmp
mov
inc
mov
enter
pop
movsb
jecxz
jmp
jge
or
or
jae
call
lds
call
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
call
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
call
jmp
push
xchg
repz
out
push
lret
test
bound
in
popf
or
jmp
call
insb
ja
jo
loop
test
mov
xlat
jmp
les
and
mov
push
push
add
scas
push
call
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
call
jp
fsubr
lock
add
push
test
je
cmpl
jne
push
call
add
call
jge
out
pop
ret
call
jmp
fs
popf
insb
pop
int
loopw
gs
pop
adc
add
sbb
test
mov
cmc
gs
adc
data16
xchg
outsb
mov
xchg
jb
sub
push
lea
jmp
sti
push
clc
xlat
pop
iret
stos
pop
subl
orb
adc
mov
shlb
mov
mov
mov
lock
sbb
mov
and
jl
jns
jmp
arpl
gs
adc
outsl
lret
jmp
flds
add
nop
push
mov
xchg
aas
iret
push
les
xor
or
add
mov
jg
and
aas
pop
test
hlt
pop
andb
ljmp
sbb
xor
inc
movb
add
outsl
jge
add
pop
stos
push
inc
fmuls
fsubrs
jg
jp
in
pop
ret
pop
leave
jmp
lock
jl
testb
int
addr16
cmp
jmp
jge
je
insb
pop
inc
and
cmp
cmp
das
movsl
xor
mov
lea
jmp
out
sbb
push
in
or
xchg
add
jnp
jp
jp
sbb
sbb
popa
ss
cmp
pop
fimuls
mov
add
sahf
pop
adc
sbb
imul
and
pop
sbb
enter
push
mov
jmp
fwait
or
xor
push
or
out
jl
testb
sbb
push
addr16
push
push
xchg
repz
mov
inc
fidivrl
aam
dec
push
jmp
mov
inc
shll
frstor
lds
sbb
movsl
int3
aas
shll
aad
data16
xchg
outsb
mov
js
mov
inc
mov
jmp
sbb
roll
aad
inc
iret
pop
cmp
xor
pusha
pop
repnz
test
sbb
dec
fimuls
push
and
dec
es
inc
mov
push
jmp
mov
push
lds
inc
aam
sub
dec
sub
jg
jmp
adc
pop
sub
jg
jecxz,pt
call
jmp
xchg
add
and
inc
jmp
dec
fstpt
jae
in
sahf
inc
rorl
leave
aam
icebp
mov
fdivrl
mov
jo
addr16
sbb
subb
push
cmp
sub
daa
lret
pop
fdivl
in
and
stos
add
xlat
jb
rclb
or
outsl
or
jmp
jp
mov
scas
jmp
fidivl
rcll
mov
sub
mov
shrl
adc
jmp
pop
int3
stos
xchg
pop
xchg
add
jnp
push
ret
cmpsb
push
cmpsb
daa
mov
dec
mov
lea
jmp
mov
jbe
loopne
sbbl
fcoms
cmpsb
push
hlt
xlat
jmp
cmpsb
push
mov
int
aas
movsl
xor
sub
jge
je
jmp
push
lret
jmp
in
bound
and
add
sti
jle
in
test
jmp
add
stos
dec
adc
push
fisttpl
fnstsw
xor
pop
xchg
rcll
addr16
jmp
sbb
add
in
jge
notl
insb
loop
je
out
adc
aas
jg
add
addr16
inc
xchg
or
dec
rolb
shlb
mov
jmp
sti
imul
sbb
clc
adc
pop
bound
sub
add
fimull
fs
jmp
cli
or
jnp
pusha
pop
repnz
cmc
gs
sbb
fbstp
add
pop
cmp
cmp
imul
mov
sbb
lock
or
mov
xchg
jmp
iret
pop
or
or
and
jb
add
push
int
dec
fdivrs
xor
push
xor
es
outsb
cld
fwait
jbe
rorb
mov
jns
clc
call
jmp
mov
jns
insb
loope
cld
fwait
jbe
fcoml
mov
stc
cwtl
imul
and
jmp
clc
push
lahf
push
pushf
sti
push
aad
sbb
jmp
aam
mov
test
pop
xchg
repnz
repz
mov
jg
cmp
int3
inc
and
mov
jmp
cmpsl
aaa
push
mov
mov
dec
frstor
out
neg
push
lds
sbb
add
mov
inc
mov
lcall
sub
lds
jp
sbb
ljmp
sti
pusha
mulb
sbb
daa
mov
and
cmpsl
xor
es
mov
fldt
popa
add
inc
pop
lds
iret
fs
scas
cmp
or
sbb
adc
add
gs
loop
pop
loop
jmp
in
jle
add
sbb
adc
push
xor
dec
mov
lahf
cli
or
test
int3
pushf
sbb
aad
push
jmp
fadds
add
out
notb
sub
push
ljmp
add
flds
leave
jo
jge
je
dec
ficoml
mov
push
fadds
add
adc
stos
es
cs
mov
imul
or
jmp
fadds
add
cmp
mov
cmpsb
xor
scas
insl
mov
lret
push
call
jmp
mov
scas
cmp
push
mov
inc
sub
imul
push
popf
or
icebp
popa
add
pop
inc
fldt
cmpsl
aaa
push
mov
add
add
ja
xorb
aam
sub
jecxz
jne
dec
iret
pop
jmp
jg
jmp
sub
add
dec
fnstcw
and
or
call
jmp
mov
mov
test
push
out
lods
movsb
ret
mov
mov
mov
mov
jmp
adc
xchg
setg
or
push
adc
sbb
cmp
dec
sub
pop
xor
and
mov
add
sbb
jmp
icebp
popa
add
adc
cld
push
mov
xor
dec
push
xchg
add
jmp
mov
mov
cmp
push
jbe
imul
push
in
ud2
test
jne
call
lret
imul
mov
add
jmp
and
gs
pushf
outsl
in
notl
popa
in
bound
jle
fs
jmp
sbb
add
xor
jg
lock
adc
jmp
insl
pushf
jbe
push
mov
test
pop
mov
adc
es
push
vpunpckldq
add
lock
cld
fwait
jbe
call
lret
frstor
fs
jmp
daa
mov
and
jne
popa
add
sbb
jmp
lock
push
sbb
jge
sgdtl
add
xchg
cli
jb
xchg
cli
jno
xorb
jmp
xchg
bound
xor
add
jle
add
stos
aas
scas
lret
sbb
mov
sbb
xor
or
jo
xorl
in
or
jns
push
jmp
fldl
add
xorb
dec
fistpll
sti
sahf
insl
fstl
sbb
add
loopne
out
mov
xchg
or
pop
lret
pop
ds
addr16
imul
add
jmp
jmp
xchg
gs
int
and
push
mov
mov
lock
push
sahf
push
mov
es
cmp
es
sub
fimuls
push
xchg
pop
jmp
adc
jo
imul
adc
popa
icebp
nop
arpl
sarl
cmpsl
aaa
push
mov
shlb
mov
scas
leave
cmp
jl
popa
add
adc
mov
jg
arpl
mov
fbld
fs
or
stos
cmp
or
adc
mov
pushl
adc
or
jmp
fnstsw
xor
push
aas
movsb
cmp
sbb
jp
jo
loop
popa
clc
outsb
or
inc
fiaddl
dec
in
leave
pop
cmp
jle
lea
jmp
pop
jmp
in
insb
mov
test
pop
lcall
sbb
xchg
push
test
push
ljmp
jl
notb
out
jg
jmp
jmp
mov
adc
push
mov
in
push
test
jge
outsb
scas
sub
cmpl
jmp
add
ds
test
scas
jecxz
cmc
shrl
push
call
orl
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
andl
push
pushl
call
pop
pop
mov
test
jne
mov
pushl
call
mov
mov
call
je
push
call
pop
mov
push
call
xlat
call
testb
jne
testb
jne
push
call
pop
andl
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
call
jecxz
cltd
sub
add
test
jne
call
call
je
push
call
pop
call
rcll
xlat
movl
call
jmp
call
stc
add
xchg
jmp
cmp
jne
call
inc
je
push
call
pop
call
movl
jmp
andl
mov
call
ret
call
jmp
andl
fmuls
jae
in
xlat
jecxz
jl
or
jmp
add
jmp
pop
hlt
push
fimull
fisubrl
push
outsb
or
adc
jnp
mov
js
lods
inc
shll
out
movb
sar
jmp
xchg
add
cmp
push
shlb
dec
mov
push
std
dec
fnstcw
lea
jmp
mov
lds
in
dec
roll
aad
mov
movsl
int3
aas
faddl
jmp
dec
adc
push
shlb
lret
lods
sub
cmp
dec
adc
inc
xchg
push
mov
es
test
push
mov
add
jmp
aam
out
adc
pop
push
jecxz
push
in
sub
shr
sbb
mov
and
or
push
cmc
adc
pop
cmp
push
jmp
cmp
adc
xchg
ret
cmp
sbb
cmp
adc
xchg
testb
or
stos
add
mov
jmp
testl
adc
push
iret
sbb
outsl
lcall
push
xor
das
enter
dec
mov
scas
cmp
mov
adc
out
push
jmp
leave
dec
ret
mov
enter
popf
in
mov
dec
fistpll
sbb
sbb
movsb
cmp
dec
add
pop
fisttpl
fnsave
out
clc
lahf
push
jmp
jecxz
divb
jp
in
sbb
mov
mov
aas
scas
aas
jmp
push
cmpsl
aaa
push
mov
push
mov
lcall
jnp
je
lock
inc
jns
ja
loope
loopne
out
mov
push
push
cld
push
xor
js
add
inc
out
rcll
jbe
cmp
icebp
popa
add
jbe
mov
loope
lock
bound
adc
jg
or
je
adc
outsb
cld
fwait
jbe
xchg
adc
jl
jne
sbb
arpl
push
std
xor
pop
cmp
or
xchg
and
popf
or
pop
adc
dec
mov
pop
cmc
and
and
push
lds
adc
sub
ljmp
cmpsb
xor
inc
and
imul
jmp
adc
scas
pop
in
fisttpll
mov
and
stos
mov
mov
lock
inc
outsl
icebp
popa
add
pop
inc
fimuls
push
xor
ficoms
sbb
adc
scas
leave
cmp
repz
xorl
shlb
arpl
xchg
gs
cmp
adc
js
int
and
xor
cmp
ret
push
pushl
jmp
inc
jp
pusha
pop
repnz
jl
negb
scas
daa
mov
and
arpl
sbb
std
test
xor
adc
cmp
dec
mov
cmp
jo
xorl
cmpsl
inc
inc
aam
sub
add
ljmp
push
jns
popa
popf
adc
jmp
push
in
add
inc
es
inc
roll
fs
jmp
les
cmpsl
push
mov
adc
in
sbb
and
push
xlat
jmp
mov
in
fdivl
in
jp
ja
loope
mov
xchg
movsl
xor
push
xor
lods
xor
test
jmp
test
jmp
ja
xorb
lret
pop
ds
ret
mov
test
sarl
dec
jmp
push
inc
and
aaa
mov
in
hlt
out
adc
add
xchg
mov
push
call
jmp
lret
pop
ds
inc
int3
inc
and
add
adc
push
pushf
sti
push
hlt
sbb
add
xor
add
in
or
cmp
jmp
pop
test
xlat
inc
xlat
mov
lods
jo
jne
out
pop
mov
ret
or
jmp
pop
jp
data16
and
jno
jecxz
popa
clc
outsb
or
inc
cld
xchg
mov
jmp
cmp
xor
ljmp
stc
mov
pusha
notb
sbb
pop
lcall
fstpl
stos
data16
aas
lret
mov
xchg
push
jmp
or
jb
daa
mov
and
ljmp
mulb
pop
adc
inc
sbb
push
fdivl
in
cmp
in
stc
cwtl
imul
popl
repz
mov
loopne
clc
outsb
or
adc
hlt
pop
lock
mov
call
jmp
dec
frstor
xchg
jecxz
jecxz
jne
and
fs
add
dec
je
add
push
lret
mov
dec
fistpll
shll
jbe
inc
cld
push
lahf
push
push
rclb
sub
or
sbb
stos
aaa
cmpsl
ret
adc
cmp
notl
les
mov
jmp
xchg
or
sub
xchg
cmpsl
cmp
mov
mov
xchg
outsb
cld
fwait
jbe
lock
xorb
ret
ret
sub
sbb
pop
lods
inc
test
nop
testl
push
mov
xlat
and
cmpsl
xor
push
mov
mov
das
out
push
lahf
push
xchg
sbb
cli
mov
jmp
adc
sub
lds
sub
adc
adc
sbb
gs
xor
mov
jl
js
ljmp
aad
sbb
jmp
cmp
adc
push
xlat
inc
and
imul
cmp
adc
mov
std
lock
aad
insb
loop
je
jmp
in
jle
add
jmp
or
call
fisubrs
jb
imul
mov
cmpsl
addr16
adc
push
hlt
jno
xorb
cli
push
mov
jmp
adc
out
mov
or
sub
outsl
lcall
or
adc
jb
imul
and
xor
fwait
or
jb
and
and
pop
cmp
adc
jo
jbe
loopne
sti
push
lahf
push
sbbl
out
sbb
cmp
adc
jle
mov
shll
mov
mov
push
mov
adc
jmp
pop
mov
sbb
inc
mov
jmp
leave
mov
mov
out
adc
pop
jmp
fistpll
jp
in
imul
les
rcll
pop
lock
adc
adc
adcl
lock
sbb
lea
sahf
stc
or
ss
jno
push
jle
and
jmp
lock
cmp
addr16
sbb
leave
dec
ret
ret
jmp
lock
cmp
outsb
or
adc
adcb
xorb
xor
add
xchg
mov
jmp
add
rorb
mov
jecxz
jne
cwtl
adc
cltd
or
xchg
lods
sbb
test
jp
sub
inc
sub
je
push
fcoms
call
jmp
fs
popf
insb
test
scas
mov
mov
das
fsubr
js
lea
jmp
mov
mov
and
jecxz
hlt
sbb
jmp
stc
or
sub
stos
xor
push
lret
cmc
dec
rolb
shr
sbb
into
pop
cmp
popa
xchg
mov
sbb
and
popf
cmp
sbb
adc
js
in
hlt
xchg
outsb
mov
jb
popa
out
adc
push
je
sbb
adc
pop
jecxz
push
in
jmp
xchg
insb
call
mov
mov
cmp
adc
adc
xchg
xor
xor
lahf
punpckhdq
jmp
rolb
add
xor
enter
cmp
repnz
pop
repnz
call
jmp
in
jl
roll
mov
adcl
testb
sub
adc
pop
jb
sub
pop
leave
test
test
in
sbb
pop
nop
or
jmp
or
mov
mov
mov
jmp
or
arpl
mov
scas
adc
inc
xlat
mov
fwait
or
jne
jmp
inc
adc
add
adc
orb
decb
jmp
inc
adc
testl
ds
hlt
jge
je
and
jge
idivl
pop
cmp
jmp
inc
mov
jge
pusha
pop
repnz
push
lahf
push
cmpsb
sub
lcall
es
mov
js
jle
call
jns
dec
outsl
ljmp
sbb
mov
ret
inc
rolb
sarb
mov
xchg
aad
frstor
jbe
data16
xchg
mov
xchg
adc
mov
sbb
es
cs
jle
mov
in
xchg
pop
insb
or
cmpl
sbb
add
xchg
test
pop
test
adc
rolb
dec
cmpsl
pusha
jmp
roll
add
or
push
lds
mov
test
andb
stc
cwtl
imul
roll
add
adc
add
bnd
jne
pusha
popl
xchg
icebp
add
xor
movsb
das
mov
mov
inc
mov
pusha
xchg
fs
rcll
data16
sbb
add
in
push
lds
iret
daa
xchg
pop
xchg
repnz
mov
jmp
cld
add
pop
cmpsl
cmp
mov
repnz
push
test
push
mov
gs
add
jmp
insb
or
scas
mov
rep
push
pushf
sti
push
xchg
jno
inc
daa
rclb
xor
jmp
lods
and
adc
dec
sub
adc
mov
inc
mov
inc
int
and
xor
jg
lea
jmp
sahf
adc
lret
lret
jg
mov
cltd
setg
or
call
xor
push
call
jmp
mov
sub
sub
push
ja
jno
jecxz
mov
xchg
hlt
outsb
cld
lea
jmp
adc
sbb
inc
fimuls
dec
cmp
sbb
sbb
pushf
xor
or
loope
cmpsl
or
jb
xchg
sbb
pop
fstpt
mov
mov
adc
test
sbb
add
popa
scas
sub
lods
cmp
lea
jmp
aad
add
pop
and
push
mov
aad
leave
pop
cmp
sub
fsubr
cs
add
pop
cltd
add
fildll
fisubrs
jae
jbe
loopne
cmp
or
cld
cmp
adc
push
rolb
add
cmp
jbe
push
pop
xor
div
cmp
sbb
inc
jne
call
movl
push
push
push
push
push
call
add
xor
jmp
imul
mov
mov
cmp
jne
xor
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
mov
pushl
call
pop
mov
movl
call
mov
cmp
je
pushl
push
push
call
add
cmp
jne
push
push
call
push
call
or
dec
cmp
je
push
call
pop
test
jne
mov
cmp
je
movl
jmp
xor
mov
call
pop
faddl
pop
cmp
jne
mov
cmp
je
movl
mov
call
ret
push
push
call
mov
test
jne
pushl
call
pop
jmp
mov
test
jne
push
call
pop
jmp
cmpl
jne
xor
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
call
enter
add
outsb
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
movl
call
cmpl
jne
test
jne
inc
add
and
mov
push
push
push
call
icebp
call
push
mov
jmp
mov
mov
call
push
icebp
scas
or
jne
cmp
je
push
call
pop
test
jne
call
cmp
jne
mov
call
sahf
push
call
pop
mov
jmp
test
jne
call
cmp
je
movl
jmp
test
jne
inc
push
push
push
call
xchg
call
lret
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
movl
xor
call
ret
call
call
test
jne
call
mov
call
rcll
fs
add
jmp
call
jmp
fwait
or
jae
rcll
data16
push
ret
cmpsb
push
in
push
pushf
lea
jmp
repz
xchg
fildl
dec
sti
mov
sbb
sbb
movsb
cmp
sub
pop
cmp
push
jl
jne
push
push
jmp
push
mov
sbb
outsb
into
dec
fidivrs
inc
and
xor
push
and
add
sub
pop
into
test
or
cmpsb
add
jae
in
in
sbb
add
in
stc
cwtl
imul
xchg
and
in
lcall
add
jmp
and
lods
cmp
mov
jecxz
add
xchg
xchg
sbb
es
inc
mov
xor
mov
fs
popf
insb
popf
mulps
sbb
sub
lahf
punpckhdq
mov
lock
aam
sub
stc
cwtl
imul
add
stc
scas
dec
rolb
shlb
pop
leave
test
fidivs
nop
push
popa
nop
pop
daa
stos
cmp
or
jl
out
jg
jmp
xchg
push
nop
push
popa
nop
jns
jmp
mov
stos
mov
stos
lahf
sbb
gs
pushf
outsl
jmp
scas
aas
pop
test
lret
inc
test
xchg
add
jbe
repz
cmc
adc
insb
loop
jne
or
es
movb
rclb
push
divl
cmpsl
pushf
add
push
rclb
and
frstor
mov
inc
mov
sahf
or
call
jmp
fstpl
mov
mov
arpl
jno
jecxz
mov
cmpsl
push
mov
fstpt
das
dec
mov
call
jmp
mov
popa
out
adc
push
xlat
push
shll
xchg
jp
mov
lea
jmp
pushf
outsl
lret
bound
add
dec
fstpt
sbb
and
pop
int3
stos
xchg
jae
ja
loope
sbb
sbb
dec
sub
inc
rclb
push
pushf
pushf
or
cmp
sbb
cmp
adc
mov
clc
or
inc
daa
shlb
dec
sub
dec
shr
out
add
pop
les
int3
gs
aas
pop
test
es
test
and
cltd
pop
scas
push
xor
push
push
call
mov
push
call
add
mov
mov
test
jne
push
pop
pop
ret
andl
xor
pop
ret
call
jmp
pop
mov
sbb
jge
je
and
insl
in
jmp
dec
sub
cmp
cmp
mov
outsb
jbe
call
cs
jmp
dec
clc
add
xchg
out
lock
enter
add
jmp
dec
cmpsb
bnd
mov
ss
clc
jno
xorb
loopne
int3
int3
int3
int3
int3
int3
call
jmp
test
inc
fisttpll
out
xchg
adc
cmp
addr16
in
add
add
mov
cmpsl
jnp
pop
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
jmp
or
in
lock
sub
in
bound
lret
test
pop
lea
jmp
adcl
sub
cmp
test
jge
sbb
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
jmp
ljmp
stc
repnz
int
and
jb
lret
lret
cmp
mov
lea
jmp
insb
ljmp
stc
mov
in
sbb
mov
adc
mov
mov
sub
pop
or
pop
adc
mov
fidivrl
mov
lretw
pop
ds
xchg
std
or
movl
jmp
aad
add
mov
push
mov
es
add
mov
add
roll
ljmp
fists
lods
pop
jmp
stos
inc
inc
lret
lret
cmc
mov
push
call
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
call
ret
call
jge
push
xor
daa
xor
lret
lahf
add
jmp
add
sub
xchg
cmp
cmp
mov
add
jmp
pop
mov
mov
jnp
push
mov
cltd
or
mov
add
lcall
sub
jns
jbe
cmpl
pushl
call
pop
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
pushl
mov
call
mov
add
mov
jmp
mov
sub
je
sub
je
dec
je
call
movl
xor
push
push
push
push
push
call
add
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
movl
push
call
mov
pop
xor
cmpl
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
movl
cmp
jne
call
in
mov
call
mov
imul
ret
add
cmp
jge
mov
imul
mov
mov
incl
jmp
call
mov
movl
call
cmp
jne
pushl
push
call
pop
jmp
mov
mov
call
and
add
pop
pop
mov
loopne
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
call
popa
sbb
xor
lahf
add
into
test
pushf
sti
push
hlt
ljmp
add
scas
inc
shll
jg
pop
mov
pop
iret
stos
pop
rorb
ds
add
jp
leave
pop
cmp
sub
fs
jmp
cmp
or
aad
aam
dec
mov
add
lret
pop
enter
pop
lret
lret
ret
push
lds
mov
fcmovnbe
mov
call
cmp
jb
xchg
repnz
call
jmp
jecxz
xor
fstpl
test
mov
rolb
shlb
mov
pushf
sti
push
clc
es
mov
jmp
jge
je
add
cwtl
add
or
sbb
add
cmpsb
cld
pushl
mov
inc
mov
outsl
lcall
cmp
add
imul
adc
or
notl
push
sbb
jne
imul
mov
and
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
jmp
js
mov
ret
mov
shlb
sbb
sub
sub
jmp
jecxz
ljmp
int3
aas
aad
ja
xorb
jmp
leave
cmp
or
lcall
or
rolb
shr
pop
mov
loop
in
mov
xor
ja
gs
pushf
outsl
ljmp
add
xor
jbe
dec
fstpt
mov
mov
jmp
insb
or
mov
lods
and
sbb
shrl
in
sbb
push
cwtl
push
lea
jmp
xchg
adc
in
sbb
insb
in
bound
mov
sub
nop
testl
sub
or
dec
sahf
lock
jmp
stc
in
data16
xchg
outsb
xchg
jne
mov
ja
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
call
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
adc
pusha
popa
adc
test
adc
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
pop
bound
adc
popa
adc
in
popa
adc
in
adc
fsubl
adc
popa
adc
int3
popa
adc
les
adc
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
adc
bound
adc
adc
dec
bound
adc
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
shlb
in
adc
or
adc
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pusha
arpl
adc
adc
jo
adc
js
adc
andb
mov
adc
arpl
adc
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
arpl
adc
arpl
adc
arpl
adc
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
call
jmp
lahf
punpckhdq
repz
mov
divb
cmp
add
jmp
jns
outsl
or
out
cltd
or
jnp
push
outsl
jmp
sbb
or
push
xor
and
jno
mov
outsl
in
sbb
add
inc
mov
lret
push
adcb
andb
into
cmp
jmp
clc
lahf
push
inc
rolb
sarb
imul
or
or
pusha
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
call
jmp
ljmp
leave
pushf
xor
mov
ljmp
call
xor
xor
xor
xor
xor
jmp
call
jmp
cld
push
cmp
and
js
mov
push
mov
test
cmpsl
xor
adc
call
jmp
dec
frstor
dec
mov
xor
xor
cmp
mov
lea
jmp
stos
cmp
hlt
push
cld
push
iret
pop
into
test
sbb
out
mov
icebp
imul
xchg
add
adc
in
sbb
sbb
dec
rolb
sarb
aaa
cmpsl
ret
outsl
icebp
popa
add
pop
dec
fsts
sbb
outsb
or
jg
outsl
lcall
in
je
push
ret
inc
mov
cmpsb
lock
xchg
push
test
push
cld
push
mov
jns
popa
int
fdivrs
mov
and
in
pop
hlt
das
and
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
call
mov
call
mov
call
sbb
push
call
pop
push
call
dec
push
call
cmp
adc
jne
push
call
pop
push
call
int3
push
call
inc
leave
ret
call
jmp
lahf
punpckhdq
jnp
and
push
xor
push
jns
dec
in
bound
pop
clc
lcall
or
cmpsb
jb
fisttps
flds
mov
movsb
ret
fistps
jp
add
test
nop
testl
inc
mov
or
cmp
jmp
notl
movsb
sub
xchg
or
jne
pop
jp
ja
xchg
add
jmp
jle
push
cld
push
push
fisttps
flds
xchg
add
pop
mov
aad
and
xor
int
fisubs
fimull
mov
jle
jmp
jmp
sbb
add
mov
clc
cmp
dec
fucomi
cltd
add
add
lock
bound
push
cld
pop
cwtl
hlt
dec
pop
lds
push
call
andl
movapd
movl
jmp
mov
mov
mov
cmp
je
cmp
je
xor
ret
xor
inc
ret
mov
andl
movl
mov
call
ret
call
jmp
cmp
mov
xchg
repnz
pushl
xchg
aaa
movsb
cmp
pop
in
adcl
fs
jmp
loop
ljmp
adc
or
movsl
jmp
xchg
adc
mov
dec
aad
sub
je
pop
lret
scas
pop
in
fisttps
jge
add
add
mov
xor
ret
call
jmp
inc
aad
dec
mov
mov
repz
mov
mov
fists
lea
jmp
xchg
and
std
insl
hlt
pop
out
ljmp
sbb
push
cmp
and
mov
fwait
or
pop
lret
scas
pop
jmp
push
outsl
lcall
mov
inc
fidivrl
inc
mov
jmp
mull
icebp
dec
and
ljmp
sbb
jmp
push
in
pop
lds
iret
fs
cwtl
les
int3
dec
jns
dec
das
ficoml
sbb
jge
je
arpl
mov
mov
stos
into
cmp
jmp
ja
mov
inc
mov
xor
push
push
xlat
inc
and
ss
lcall
in
jmp
aad
jmp
popf
adc
in
sbb
mov
aad
movsl
xor
repz
cmc
sbb
pop
lret
scas
pop
scas
sub
sub
repnz
dec
fmuls
jmp
or
xchg
popa
lods
push
mov
mov
es
xor
lret
or
xor
lea
test
push
test
inc
and
ja
leave
pop
cmp
mov
jmp
les
adc
in
sbb
pop
enter
jl
ja
loope
pop
ret
push
jmp
cli
popf
insb
jmp
mov
inc
mov
mov
movsl
int3
aas
jno
jecxz
jne
push
cld
push
fsubr
js
imul
jmp
call
sub
and
sbb
outsb
cld
fwait
jbe
faddl
mov
jmp
fs
jmp
insl
into
pop
cmp
push
lret
dec
fistpll
sub
and
push
ret
cmpsb
push
mov
aaa
stos
call
jmp
pop
int
mov
mov
xchg
je
les
int3
imul
and
inc
lea
jmp
aam
leave
test
mov
xchg
jg
dec
fistpll
sbb
int
addr16
rclb
push
notl
push
xor
or
icebp
popa
add
jmp
popf
jno
or
mov
dec
mov
out
jecxz
mov
roll
add
lcall
push
mov
or
push
xor
jmp
xor
das
scas
aas
pop
test
bound
and
xor
call
add
sbb
dec
stos
fistpl
test
mov
movsl
inc
xchg
xchg
repnz
movsl
and
jmp
aaa
mov
inc
mov
lcall
outsb
cld
fwait
jbe
fwait
jmp
std
je
lea
stc
imul
frstor
sbb
jmp
shll
scas
inc
push
lret
test
repz
cld
test
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
call
jmp
clc
outsb
or
push
orb
sti
push
repnz
and
ficoml
mov
sahf
lea
jmp
call
mov
mov
movl
fmull
dec
sub
or
and
cmpsl
xor
dec
fistpll
adc
mov
sub
leave
push
mov
js
ljmp
jmp
sub
into
push
shll
daa
rclb
rcll
inc
xchg
jmp
in
pop
leave
rcll
mov
jno
jecxz
or
jbe
ljmp
cmc
pushf
outsl
lea
stos
jo
imul
adc
ja
xorb
mov
es
cmp
mov
cmp
sub
push
fcoml
cmpsl
push
mov
setg
or
mov
in
jmp
adc
mov
inc
mov
cmp
cmp
mov
repnz
mov
jmp
adc
dec
fdivrl
xchg
repnz
nop
add
std
or
sub
das
sub
jmp
or
shlb
add
mov
and
call
jmp
or
sub
je
jle
call
pop
test
adc
jne
jmp
lock
push
push
aad
sub
cmp
jbe
cmpl
stos
cmp
sbb
dec
into
pop
cmp
aas
rclb
lods
pop
mov
inc
lods
sbb
cltd
lea
jmp
enter
mov
orb
clc
or
mov
in
add
pop
mov
xor
in
mov
jmp
xchg
add
jnp
movsb
ret
ds
aad
mov
out
es
fisttps
xchg
add
mov
incl
lcall
cld
fwait
jbe
xchg
mov
sbb
xor
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
call
jmp
push
mov
es
add
movsb
cmp
inc
adc
scas
lods
lea
jmp
das
mov
das
mov
push
lahf
push
jmp
mov
jle
call
pusha
xchg
daa
popa
ljmp
stc
scas
push
lea
lcall
xor
adc
insb
and
das
dec
mov
mov
jmp
dec
fnstcw
test
pop
leave
jp
outsl
or
loope
cltd
or
js
jmp
mov
mov
js
mov
cmpsl
ret
jle
push
dec
fdivrs
mov
clc
outsb
or
pop
rcrb
test
mov
scas
lods
and
mov
dec
mov
imul
outsb
lcall
outsb
mov
jmp
adc
insb
or
mov
int
inc
inc
and
cmp
push
ret
cmpsb
push
jmp
adc
and
movsb
lods
lret
inc
mov
inc
and
push
in
adc
pop
or
loop
jl
jo
loop
cmp
movsb
cmp
jmp
or
push
mov
mov
sbb
ja
imul
das
xchg
pop
xchg
adc
jne
jmp
lock
outsb
cld
fwait
jbe
mov
les
fstpt
jmp
lock
stos
cmp
dec
push
fmuls
fdivrs
fimuls
sub
jmp
lret
add
jp
jae
pushf
xor
inc
idivb
jp
insl
loopne
adc
jmp
lret
add
movb
pop
bound
insl
pushf
cmp
inc
and
inc
call
jmp
sub
xchg
dec
fimuls
inc
dec
rolb
shlb
test
test
dec
fnstcw
add
sahf
and
pop
int
addr16
sub
pushl
jmp
lock
push
in
cmp
xor
pop
xchg
sbb
enter
dec
scas
add
jbe
gs
pop
mov
mov
lea
jmp
and
cmp
inc
mov
rcrl
xchg
add
jo
lahf
punpckhdq
dec
mov
popf
insb
or
mov
movsb
cwtl
adc
push
fimull
jne
jmp
and
arpl
insb
loop
je
insl
insb
or
repz
aad
sbbl
test
lods
lret
inc
movsb
js
jge
negl
jmp
in
je
insl
add
pop
bound
pop
sbb
mov
cltd
lea
mov
sbb
cmpsb
push
in
rcrb
sbb
std
and
rcrl
rcl
jb
xchg
sub
jne
jmp
sbb
add
mov
cmpsb
shll
jo
addr16
jmp
sbb
inc
mov
cwtl
sbb
push
aam
sub
addr16
push
mov
sbb
pop
adc
pop
scas
es
cs
cmp
mov
stos
addr16
jg
jmp
adc
dec
scas
and
fimuls
adc
nop
push
popa
nop
js
imul
adc
pop
adc
jl
jne
inc
jge
jns
jmp
addr16
sbb
jp
sbb
cwtl
adc
ljmp
stc
divb
mov
inc
mov
adc
adc
jne
jmp
push
mov
push
mov
cmp
jle
push
test
push
test
pop
cld
jmp
loope
adc
or
outsl
lcall
pushf
sti
push
clc
pop
jecxz
push
in
jg
imul
sti
incl
add
pop
sub
xchg
sbb
aad
shl
call
add
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
call
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
je
adc
adc
xchg
je
adc
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
pop
jne
adc
adc
hlt
je
adc
je
adc
je
adc
je
adc
je
adc
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
adc
jne
adc
adc
adc
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
shlb
adc
jne
adc
adc
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
jo
adc
js
adc
xorb
mov
adc
jbe
adc
jbe
adc
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
int3
jbe
adc
jbe
adc
jbe
adc
jbe
adc
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
call
jmp
dec
fdivrl
dec
sub
add
inc
loope
sbb
repnz
lea
jmp
arpl
cmc
adc
test
jge
rcrb
xchg
addr16
and
sbb
push
lahf
or
in
loope
sbb
adc
sahf
or
cmpsb
jmp
lcall
jg
jmp
jnp
xor
mov
jle
jp
in
bound
jmp
out
inc
ja
jl
testb
push
aaa
ret
jle
mov
decl
in
data16
lcall
mov
add
jmp
lea
js
mov
mov
xlat
cmp
add
add
sub
add
cs
jno
jbe
loopne
push
xchg
cmc
add
and
sbb
int3
pop
into
test
scas
leave
cmp
mov
sti
push
jmp
fisttps
fs
popf
insb
rcl
push
ret
cmpsb
push
cli
aas
mov
out
jno
mov
jmp
jecxz
push
in
shlb
xorl
rclb
pop
leave
test
lea
out
rclb
and
testb
mov
xchg
pusha
push
jmp
shll
jge
gs
roll
shll
call
movb
jmp
add
pusha
pop
repnz
dec
fistpll
xchg
icebp
add
je
outsb
or
adc
mov
jmp
or
add
sbb
imul
add
xor
jl
jne
jmp
or
xchg
je
push
xchg
repz
in
and
icebp
popa
add
push
cwtl
add
pop
adc
xor
insb
loop
je
mov
xchg
adc
mov
scas
add
je
jle
call
xlat
and
push
xlat
int3
insl
std
test
jecxz
jge
jg
xchg
cmc
add
jmp
stc
cwtl
imul
jmp
xchg
add
fs
fs
popf
insb
lret
pop
roll
aad
cltd
or
ret
push
lret
and
jmp
push
push
xor
push
add
rorl
mov
mov
pop
enter
adc
push
call
pop
ret
mov
push
mov
sub
call
xor
mov
testb
push
je
push
call
pop
call
test
je
push
call
pop
testb
je
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
push
mov
lea
push
push
call
lea
add
mov
lea
push
movl
mov
mov
call
ljmp
push
call
loope
add
jecxz
add
int3
call
jmp
jo
xorl
cmpsl
and
aam
shll
popf
lea
jmp
push
mov
mov
popa
cli
push
pop
lret
scas
pop
repnz
sbb
rdtsc
lods
cmp
inc
fidivrl
inc
es
clc
imul
insl
jmp
jl
aad
in
jle
data16
sbb
in
je
arpl
addr16
mov
pop
int3
stos
data16
lock
bound
jns
jmp
xchg
jb
cmp
xchg
push
lock
ja
imul
xchg
add
lahf
add
add
fidivrl
mov
fcompl
test
mov
dec
mov
lods
inc
dec
lret
pop
ds
add
jo
outsb
or
jmp
repz
cmc
sbb
hlt
adc
dec
fidivrs
repz
mov
sbb
pop
cmp
and
gs
imul
pop
lret
pop
enter
mov
sbb
les
push
rclb
sub
mov
js
cs
or
jmp
add
dec
mov
xchg
adc
mov
and
pop
int
outsl
decl
imul
or
dec
or
and
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
call
jmp
push
test
push
cltd
fcompl
stos
data16
dec
fidivrs
ja
loope
jno
fs
jmp
stos
xor
pop
jp
jns
es
cs
imul
sbb
in
cld
fwait
jbe
aam
repnz
fs
int
fidivrl
adc
mov
add
mov
nop
testl
inc
mov
cmp
test
test
push
jmp
pop
repnz
fs
pop
jmp
xor
mov
call
xchg
jne
mov
mov
cmp
jne
mov
ret
push
push
call
jmp
call
jmp
mov
mov
mov
ret
ret
int3
inc
and
rol
call
jmp
ret
dec
ret
mov
cmp
repnz
pop
repnz
dec
jmp
add
xor
push
lds
cld
mov
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
call
push
lea
sub
and
add
sbb
or
pop
call
call
jmp
into
pop
cmp
cmp
inc
shlb
and
xchg
add
das
mov
jmp
mov
test
mov
mov
jle
cmp
push
mov
es
loope
adc
xor
call
jmp
push
pushf
sti
push
neg
pop
iret
stos
pop
test
push
xor
daa
js
mov
aas
mov
add
inc
jmp
push
lahf
push
sbb
sub
cmp
cmpsb
jmp
les
fstpt
push
cld
sbb
jae
xchg
xor
cs
mov
shrl
jmp
mov
dec
mov
jge
jns
mov
inc
mov
inc
roll
rcll
rolb
push
jmp
and
mov
mov
and
cmpsb
xor
inc
xlat
mov
mov
add
jl
jp
in
inc
or
int3
push
shlb
xor
lea
jmp
or
loope
xchg
xor
insb
int
and
push
or
scas
sub
lds
frstor
xchg
gs
cltd
push
push
mov
jmp
adc
jno
popf
or
loopne
adc
add
pop
lret
scas
pop
jmp
fimuls
sub
xchg
jp
out
adc
or
hlt
inc
lret
shr
call
and
and
mov
ret
inc
xlat
inc
and
js
jmp
jle
dec
dec
jecxz
push
in
jp
arpl
cmc
sbb
rorb
mov
sbb
and
fimuls
push
in
jnp
mov
movsl
cmp
mov
sti
int
shr
clc
int
shlb
stos
pop
into
mov
mov
sbb
jbe
add
and
jmp
or
mov
inc
mov
cmp
push
xor
mov
push
xchg
repz
out
sahf
inc
mov
int3
int3
int3
call
jmp
repz
ret
sub
stos
cmp
pop
setge
mov
inc
mov
inc
aad
sub
aas
cmp
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
call
mov
cmp
xchg
jmp
in
bound
inc
es
fistpl
stos
pop
mov
and
les
fs
jmp
and
adc
xor
push
jg
sbb
cli
adc
outsb
or
sbb
jp
jp
sub
sub
cmp
jmp
rcll
and
out
or
push
shlb
or
repnz
jmp
add
cmp
adcb
loopne
rcrb
sbb
push
stc
in
fimull
mov
pop
cmp
outsb
sub
and
mov
xor
mov
jmp
inc
or
int
lret
jecxz
push
lret
cmc
fldl
mov
cmc
outsl
icebp
popa
jmp
inc
or
xchg
cmc
add
mov
mov
cltd
or
push
sbb
lahf
movzwl
jmp
dec
or
mov
sub
and
push
dec
int3
inc
and
jecxz
jne
mov
sbb
into
inc
fidivrl
sbb
sub
mov
mov
fdivrp
jmp
das
mov
int
and
arpl
jo
xorl
pop
mov
fs
jmp
fadds
dec
in
sub
inc
shll
jecxz
add
ficomps
fs
push
ret
cmpsb
push
mov
lds
iret
sub
xor
fstps
xchg
mov
call
in
inc
iret
pop
cmp
xor
arpl
xchg
subl
add
jmp
mov
inc
mov
js
imul
cmc
add
mull
icebp
pop
sbb
and
jmp
adc
mov
mov
mov
jns
aaa
fsubr
sbb
cmp
ljmp
mov
das
lcall
add
push
lds
pusha
xchg
ja
cmp
push
mov
les
dec
pavgb
push
call
jmp
jns
mov
jbe
jp
in
add
and
adc
and
sub
movsl
mov
lods
mov
scas
test
shlb
cltd
clc
or
add
lret
mov
test
pop
mov
js
mov
data16
outsb
or
jmp
rcrw
push
aaa
ret
outsl
lcall
punpckhdq
out
addr16
mov
incl
sub
dec
jp
dec
add
pop
mov
mov
dec
jmp
addl
repnz
inc
rcll
daa
adc
or
jge
pop
enter
jg
out
or
call
jmp
sub
lds
rcll
cmpsl
push
mov
pop
leave
test
mov
out
or
popa
icebp
lea
jmp
push
fisttpl
fnsave
lea
repnz
pop
repnz
mov
arpl
cmc
cmp
outsl
or
jmp
movsb
inc
cltd
push
test
push
cld
push
pop
mov
call
jmp
cmp
dec
ret
mov
xlat
aaa
jle
imul
pop
xor
add
push
les
fcmovnu
push
mov
shll
add
js
jmp
aad
aad
dec
movsl
lds
mov
inc
and
jbe
mov
jmp
ja
xorb
sub
mov
dec
mov
xor
sub
adcl
fs
jmp
fnstsw
loope
clc
lahf
push
push
sahf
or
cmpsb
insl
mov
sarb
inc
mov
add
jo
mov
leave
jbe
push
xor
mov
rep
pop
ret
test
jbe
push
push
mov
mov
rep
pop
pop
ret
call
jmp
das
mov
loop
pop
loop
popf
pop
xchg
adc
cld
ja
xorb
sahf
or
fs
jmp
loope
out
jno
mov
mov
sbb
add
roll
dec
cmpsb
call
insb
pop
dec
call
jmp
add
xchg
sbb
aad
lret
mov
cmp
push
fs
jmp
dec
mov
fadd
push
mov
lods
lret
inc
test
cmpsb
test
test
jmp
test
push
lret
mov
jae
in
add
sbb
insl
jp
imul
mov
cmpsl
ret
movsl
daa
mov
and
sbb
jmp
dec
mov
xorl
and
dec
les
int3
and
jmp
dec
ret
mov
mov
inc
mov
pop
inc
and
sub
insl
hlt
pop
in
out
ljmp
shrl
mov
outsl
or
aam
shlb
push
xor
sub
rcrl
mov
arpl
xchg
gs
sub
push
lret
lret
jmp
adc
add
lcall
mov
sbb
cmp
or
add
loope
xchg
scas
or
in
xchg
dec
into
pop
cmp
add
mov
inc
mov
pushf
sub
jmp
int3
aas
fbstp
mov
dec
mov
out
sbb
xor
jmp
sbb
or
arpl
xchg
gs
call
stos
jnp
pusha
push
jmp
sti
jnp
mov
je
imul
sbb
gs
pop
dec
jmp
mov
mov
jns
mov
inc
roll
rcll
xchg
push
sub
call
jmp
sbb
aad
mov
mov
out
adc
or
outsb
or
sbb
pop
iret
lea
jmp
xor
pop
into
test
fs
pop
jmp
decb
sub
jp
inc
aad
dec
xchg
or
jne
sub
sbb
jl
loope
jecxz
jne
mov
lods
mov
mov
push
test
push
imul
jns
push
jmp
jne
and
shrl
jae
jp
in
push
xor
jmp
je
out
jne
mov
xchg
setg
or
and
dec
xlat
inc
and
jbe
push
inc
jne
call
jmp
xchg
cmp
dec
fstpt
and
pop
fwait
sbb
push
add
mov
sbb
jge
shrb
jmp
pop
into
test
shll
ljmp
loop
sti
sub
jmp
jmp
iret
push
fisttps
fsts
mov
fstpt
mov
inc
mov
mov
xchg
cli
imul
adcb
andb
insl
hlt
pop
out
xor
sbb
mov
sbb
jae
loope
call
mov
mov
sbb
cmpsl
aaa
push
mov
int
mov
push
out
jb
xchg
or
sbb
das
xor
push
test
jge
pop
rclb
mov
jne
out
push
jmp
adc
data16
sub
jo
xorl
scas
inc
popf
sbb
add
std
or
orb
cli
or
xchg
pop
push
test
push
jmp
xchg
ja
push
lret
mov
inc
stos
jge
add
add
sti
imul
jmp
dec
mov
cmp
testb
inc
movsb
loope
in
rorb
add
repnz
inc
xlat
mov
call
mov
sub
push
push
push
jmp
jg
add
adc
dec
movzbl
movzbl
shl
xor
movzbl
shl
xor
movzbl
shl
xor
xor
movzbl
mov
movzbl
movzbl
shl
xor
movzbl
movzbl
shl
xor
movzbl
shl
xor
movzbl
shl
xor
movzbl
shl
xor
movzbl
shl
xor
movzbl
xor
shl
xor
movzbl
movzbl
shl
xor
xor
shl
xor
xor
mov
mov
shr
and
mov
mov
shr
and
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
mov
shr
and
mov
and
xor
mov
shr
xor
mov
and
xor
xor
mov
shr
and
mov
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
shr
and
mov
shr
and
xor
mov
xor
shr
xor
mov
and
xor
mov
xor
shr
mov
shr
and
mov
and
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
mov
shr
and
mov
and
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
mov
shr
and
mov
and
xor
mov
shr
xor
mov
and
xor
shr
xor
and
mov
shr
and
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
and
mov
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
and
shr
and
mov
mov
xor
mov
mov
shr
xor
mov
shr
and
xor
mov
and
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
shr
and
mov
and
xor
mov
xor
shr
xor
mov
and
xor
mov
xor
shr
mov
shr
and
mov
and
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
mov
and
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
mov
and
shr
shr
and
and
mov
xor
mov
shr
and
mov
xor
mov
shr
xor
mov
shr
xor
mov
and
xor
and
xor
xor
xor
mov
shr
and
mov
mov
shr
and
xor
mov
shr
xor
mov
mov
and
xor
mov
xor
shr
and
mov
mov
mov
shr
shr
and
xor
xor
mov
and
xor
mov
xor
shr
and
mov
mov
shr
and
xor
mov
shr
xor
mov
and
xor
mov
shr
and
mov
shr
and
xor
mov
xor
shr
xor
mov
and
xor
mov
xor
shr
mov
shr
and
mov
and
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
mov
shr
and
mov
and
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
mov
shr
and
mov
and
xor
mov
shr
xor
mov
shr
and
mov
shr
and
xor
and
xor
mov
xor
shr
xor
mov
and
xor
mov
xor
shr
and
mov
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
and
mov
shr
and
mov
mov
xor
mov
mov
shr
xor
mov
shr
and
and
xor
mov
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
shr
and
mov
and
xor
mov
xor
shr
xor
mov
and
xor
mov
xor
shr
mov
shr
and
mov
and
xor
mov
shr
xor
mov
and
xor
xor
mov
mov
mov
shr
and
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
and
mov
mov
shr
and
shr
and
mov
xor
mov
shr
xor
mov
shr
and
mov
xor
mov
shr
xor
mov
and
xor
and
xor
xor
xor
mov
shr
and
mov
mov
shr
and
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
mov
shr
and
mov
and
xor
mov
shr
xor
mov
and
xor
mov
xor
mov
mov
shr
and
shr
mov
and
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
and
mov
shr
and
xor
shr
xor
mov
and
xor
xor
cmpl
jle
mov
shr
and
mov
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
and
mov
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
mov
and
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
and
shr
and
mov
mov
mov
xor
mov
shr
xor
and
xor
mov
xor
shr
mov
shr
and
mov
and
xor
mov
shr
xor
mov
and
xor
xor
mov
mov
shr
and
mov
mov
shr
and
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
mov
and
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
and
mov
shr
and
xor
shr
xor
mov
mov
and
xor
xor
cmpl
jle
mov
shr
and
mov
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
and
mov
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
mov
and
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
and
shr
and
mov
mov
mov
xor
mov
shr
xor
and
xor
mov
xor
shr
mov
shr
and
mov
and
xor
mov
shr
xor
mov
and
xor
xor
mov
mov
shr
and
mov
mov
shr
and
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
mov
shr
and
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
and
mov
shr
and
xor
shr
xor
mov
mov
and
xor
xor
mov
shl
add
mov
shr
and
mov
and
mov
shr
and
mov
and
xor
mov
shr
mov
and
xor
mov
and
movzbl
xor
xor
mov
mov
mov
shr
mov
mov
shr
mov
mov
shr
mov
mov
mov
mov
shr
and
mov
and
mov
shr
and
mov
and
xor
mov
shr
mov
and
xor
mov
and
movzbl
xor
xor
mov
mov
mov
shr
mov
mov
shr
mov
mov
shr
mov
mov
mov
mov
mov
shr
shr
and
mov
and
mov
and
and
xor
mov
shr
mov
and
xor
mov
and
movzbl
xor
xor
shr
mov
mov
mov
shr
mov
mov
shr
mov
mov
shr
mov
mov
mov
mov
shr
and
mov
and
mov
and
and
xor
shr
mov
and
xor
mov
and
movzbl
xor
xor
mov
mov
shr
mov
mov
shr
mov
mov
shr
mov
mov
jmp
pop
rolb
sarb
fs
sbb
pop
leave
ret
call
jmp
mov
inc
mov
or
popl
xchg
icebp
add
xchg
sbb
repnz
lea
jmp
adcb
loop
ljmp
pop
int
and
push
clc
jmp
fwait
jbe
test
lods
mov
pop
lret
lret
test
adc
xchg
add
sahf
aaa
fadds
mov
lock
and
and
sub
sbb
xchg
pop
les
int3
jnp
aaa
cmpsl
ret
pop
std
insl
hlt
pop
andb
movsb
and
jge
xchg
testb
das
iret
movl
jmp
fisubrl
xlat
data16
pop
loop
popa
in
sbb
and
lock
rolb
sbb
clc
outsb
or
xor
stos
cmp
inc
insb
loop
pop
loop
out
notl
or
sbb
js
jge
in
sbb
add
sahf
imul
std
test
sbb
cmc
popa
icebp
nop
arpl
icebp
adc
sbb
add
mov
in
sbb
adc
out
in
mov
int3
aas
andb
cmc
add
sub
xchg
jb
es
pop
pushf
lods
lret
inc
push
jmp
call
xchg
inc
and
dec
rcll
mov
leave
test
mov
dec
mov
jae
call
jmp
adc
fimull
fidivl
iret
pop
cmp
pusha
adc
and
jmp
imul
mov
nop
fistpl
test
sbb
enter
mov
or
fs
popf
insb
mov
jmp
jp
jp
gs
jge
notl
daa
lods
and
adc
jp
jp
and
out
notl
and
inc
aam
dec
cmpsl
pushf
pop
xchg
adc
mov
sbb
and
cltd
or
fisttpl
fnstsw
and
jb
insb
loop
je
in
jmp
mov
scas
outsb
cli
push
xchg
mov
sbbb
jmp
enter
or
movsl
cmp
mov
sti
add
cltd
push
xchg
repz
mov
cmp
xchg
and
and
dec
fdivrl
mov
sbb
sbb
imul
fs
pop
pop
fdivl
in
sti
adcl
test
mov
push
jmp
ret
inc
aad
dec
mov
das
cmp
jg
push
cld
pop
mov
jecxz
xor
cltd
adc
das
mov
insl
out
adc
push
jmp
test
push
ljmp
outsb
add
pusha
notb
mov
sbb
movsb
push
mov
fisttps
or
xor
pop
ret
push
jmp
pop
xchg
inc
jecxz
push
in
and
cs
dec
mov
in
pop
jmp
es
sahf
add
push
mov
es
les
xchg
outsb
jmp
jae
ljmp
dec
mov
sbb
or
outsl
lcall
xchg
ljmp
sbb
inc
and
push
jl
jne
push
mov
mov
out
or
mov
add
mov
add
rcrb
scas
pop
mov
jnp
add
and
sbb
push
mov
shlb
sub
jo
aaa
cmpsl
ret
xor
sub
jmp
das
mov
add
data16
xchg
outsb
lcall
xor
sbb
inc
and
jbe
jns
mov
xor
cmpsl
aaa
push
mov
cmpsl
push
mov
jno
jle
mov
add
dec
mov
mov
jmp
add
lds
fdivl
in
adc
ds
fisttpl
sbb
or
movsb
add
daa
stos
cmp
jg
adc
movzbl
jmp
adc
pushf
sbb
rolb
shlb
fistpl
xchg
addr16
adc
jge
gs
roll
aad
xchg
sbb
jge
je
dec
idivb
shl
jmp
or
and
xor
sub
pop
xchg
sbb
jnp
mov
mov
sbb
lock
int3
stos
xchg
push
rcll
xchg
push
xchg
repz
int
adc
jge
add
xor
sub
cmp
adc
rcrb
aaa
roll
xchg
or
mov
test
dec
adc
push
jmp
loop
mov
push
mov
mov
and
mov
stos
das
mov
jae
push
add
sahf
push
mov
es
test
popa
xchg
imul
add
dec
mov
cmpsl
push
mov
in
push
leave
inc
shlb
push
jmp
push
lahf
push
mov
pop
in
sub
jmp
sub
mov
gs
cmp
mov
addr16
imul
xchg
lea
jmp
jae
inc
and
push
movsb
es
cs
mov
and
cmc
pop
jmp
sub
pop
mov
adcl
test
jge
je
gs
push
ret
cmpsb
push
jmp
jmp
push
pushf
xor
inc
imul
adc
inc
nop
sbb
fimull
add
sbb
mov
and
and
mov
mov
ret
sbb
ret
sub
outsl
lcall
xor
add
sbb
gs
pushf
outsl
push
jmp
inc
pusha
xchg
jnp
cmp
fs
popf
insb
lret
lds
xchg
addr16
scas
xor
jmp
inc
inc
fdivl
in
pusha
ljmp
stc
mov
pop
div
outsl
lcall
clc
inc
jmp
jns
aas
filds
add
xor
xchg
add
lds
push
mov
jge
je
fs
adc
popa
icebp
nop
arpl
sbb
call
jo
outsl
mov
ret
push
cld
push
jae
add
call
jmp
or
mov
pop
push
xor
addr16
jle
call
lea
jmp
divb
jl
movsl
es
cs
mov
sbb
jno
push
nop
push
popa
nop
jns
and
push
mov
jg
fs
jmp
add
mov
inc
mov
loop
clc
lahf
push
fstl
pop
mov
ret
push
movzbl
jmp
push
add
cmp
mov
mov
es
cs
mov
ret
imul
lcall
out
adc
or
sti
movzbl
jmp
dec
add
repz
cmc
add
mov
inc
mov
mov
dec
add
xorb
enter
popa
sti
fs
popf
insb
fisttpl
xchg
add
cmp
movzbl
jmp
or
ljmp
stc
and
sti
sahf
insl
mov
cmp
sbb
fs
pop
pop
fisttpll
out
dec
iret
pop
cmp
ds
mov
fdivl
loopne
jmp
bound
icebp
nop
arpl
push
negb
dec
jmp
xor
cs
ret
ret
in
sbb
mov
jns
popa
orl
jmp
out
sbb
sti
push
pop
xchg
add
pop
int
cmpsb
sbbl
jmp
jp
in
push
arpl
gs
adc
rsm
xchg
or
sti
xchg
fcmove
call
jmp
cwtl
push
imul
lods
lret
inc
lods
aam
mov
test
cmc
lea
jmp
rorl
mov
scas
leave
cmp
loopne
bnd
test
outsb
cld
fwait
jbe
lahf
add
dec
fdivrs
fdivrl
jnp
in
insb
adc
add
sahf
dec
inc
rcll
daa
adc
les
push
jmp
movsl
and
dec
frstor
gs
jp
mov
inc
mov
cltd
jmp
loopne
repz
dec
fstpt
push
jno
dec
in
loop
je
lret
mov
sbb
js
pop
xchg
repnz
pop
rolb
shlb
mov
mov
into
add
xor
add
inc
shll
pop
aas
lret
mov
push
push
xor
adc
cmpsb
les
or
sbb
mov
lods
lret
inc
test
adc
fimull
fidivrl
adc
add
push
shlb
lods
lods
lret
inc
scas
jmp
or
jne
test
add
popa
icebp
nop
arpl
bound
cmp
xor
jmp
cld
xchg
cmc
add
fcoml
mov
xchg
icebp
add
popf
push
jnp
pusha
lea
jmp
js
gs
pop
js
push
cld
adc
outsl
cltd
push
add
out
or
dec
frstor
out
sbb
lcall
or
sarl
jmp
loop
push
adcl
mov
jg
push
pusha
jnp
popa
add
cmp
in
sub
mov
push
push
mov
push
mov
mov
mov
mov
mov
jmp
aas
mov
inc
mov
and
dec
mov
mov
mov
not
and
mov
and
or
add
mov
lea
mov
rol
add
mov
and
mov
not
and
or
add
mov
lea
mov
mov
rol
add
mov
not
and
mov
and
or
add
mov
lea
mov
ror
add
mov
mov
not
and
mov
and
or
add
mov
lea
ror
add
mov
and
mov
not
and
or
mov
add
lea
mov
mov
rol
add
mov
mov
not
and
mov
mov
and
or
add
mov
lea
mov
mov
rol
add
mov
mov
not
and
and
or
add
mov
lea
ror
add
mov
not
and
mov
and
or
mov
add
lea
ror
add
mov
mov
mov
mov
not
and
mov
and
or
add
mov
lea
mov
mov
mov
rol
add
and
mov
not
and
or
add
mov
lea
rol
add
mov
mov
not
and
and
or
mov
add
lea
mov
mov
mov
ror
add
mov
mov
not
and
and
or
add
mov
mov
lea
ror
add
and
mov
not
and
or
mov
add
lea
mov
mov
mov
rol
add
mov
not
and
mov
and
or
add
mov
lea
rol
add
mov
notl
mov
and
mov
and
or
mov
mov
add
mov
mov
lea
mov
mov
ror
add
and
mov
notl
mov
and
or
add
mov
lea
mov
and
ror
add
and
or
add
mov
lea
mov
rol
add
and
and
or
add
mov
lea
rol
add
mov
not
mov
and
and
or
add
lea
rol
add
mov
not
and
mov
and
or
add
mov
lea
mov
not
and
ror
add
and
or
add
mov
lea
rol
add
and
mov
not
and
or
add
mov
lea
rol
add
mov
and
mov
not
and
or
add
mov
lea
not
and
rol
add
mov
and
or
add
mov
lea
mov
not
and
ror
add
and
or
add
mov
lea
rol
add
and
mov
not
and
or
add
mov
lea
rol
add
mov
not
mov
and
and
or
add
lea
rol
add
mov
not
and
mov
and
or
add
mov
lea
mov
not
and
ror
add
and
or
add
mov
lea
rol
add
and
mov
not
and
or
add
mov
lea
rol
add
mov
and
mov
not
and
or
add
mov
not
and
lea
rol
add
mov
and
or
add
mov
lea
mov
xor
ror
add
xor
add
lea
rol
add
mov
xor
xor
add
lea
rol
add
mov
xor
xor
add
lea
mov
rol
add
xor
mov
xor
add
lea
ror
add
xor
add
mov
lea
mov
xor
rol
add
xor
add
lea
rol
add
mov
xor
xor
add
mov
lea
rol
add
xor
mov
xor
add
lea
mov
ror
add
xor
add
lea
mov
xor
rol
add
xor
add
lea
rol
add
mov
xor
xor
add
mov
lea
rol
add
xor
mov
xor
add
mov
lea
mov
ror
add
xor
add
xor
lea
rol
add
xor
add
lea
mov
rol
add
mov
xor
xor
add
lea
rol
add
mov
xor
xor
add
lea
ror
add
mov
not
or
xor
add
lea
rol
add
mov
not
or
xor
add
lea
rol
add
mov
not
or
xor
add
lea
rol
add
mov
not
or
xor
add
lea
ror
add
mov
not
or
xor
add
lea
rol
add
mov
not
or
xor
add
lea
rol
add
mov
not
or
xor
add
lea
rol
add
mov
not
or
xor
add
lea
ror
add
mov
not
or
xor
add
lea
rol
mov
add
not
or
xor
add
lea
mov
rol
add
not
or
xor
add
lea
mov
rol
add
not
or
xor
add
lea
ror
add
mov
not
or
xor
add
lea
rol
add
add
mov
not
or
xor
add
lea
rol
add
mov
not
or
xor
add
not
lea
rol
add
add
or
xor
add
lea
ror
add
add
add
jmp
inc
rolb
sarb
add
and
pop
leave
ret
call
jmp
inc
shll
mov
cs
mov
xchg
mov
gs
and
pop
lea
jmp
insl
int
and
push
cmp
or
lods
and
pusha
imul
movsl
sub
sbb
jmp
push
in
add
adc
jmp
fdivl
pop
fmuls
fdivs
stc
jno
xorb
mov
inc
mov
repz
lds
test
leave
ljmp
jmp
fs
movsl
xor
int
jmp
fstps
pop
aas
lret
loop
push
cmp
push
mov
sub
push
push
mov
lea
push
push
call
mov
mov
mov
shr
add
and
mov
mov
push
pop
cmp
movb
jl
push
pop
sub
lea
push
call
pop
xor
lea
push
movzbl
movzbl
shl
or
movzbl
shl
or
movzbl
shl
or
mov
inc
add
cmp
jb
lea
lea
call
push
lea
lea
pop
pop
mov
mov
mov
mov
mov
mov
mov
mov
add
add
dec
jne
pop
leave
ret
jmp
cmp
mov
adc
push
decl
jne
mov
lea
mov
test
jne
xor
ret
mov
movzbl
inc
mov
mov
movl
mov
mov
add
shr
mov
mov
and
mov
jmp
xchg
sbbl
xor
inc
ret
push
mov
push
push
jmp
and
jg
xlat
lock
inc
lea
push
mov
call
pop
test
je
mov
lea
lea
push
mov
call
pop
test
je
cmpl
jne
mov
mov
jmp
add
push
mov
rolb
ret
xor
jmp
push
mov
mov
sub
push
push
mov
push
jmp
cltd
push
pushf
sti
push
cld
popf
mov
xor
cmp
je
cmp
je
lea
mov
mov
mov
mov
mov
mov
test
je
lea
mov
test
je
mov
mov
mov
inc
inc
mov
mov
jmp
mov
lea
push
lea
call
pop
test
je
cmpl
je
lea
push
lea
call
pop
test
je
cmpl
je
lea
push
lea
call
pop
test
je
cmpl
je
push
xor
pop
lea
push
lea
call
pop
test
je
dec
mov
lea
mov
jne
test
je
mov
sub
cmp
ja
mov
decl
test
je
mov
mov
sub
mov
mov
jmp
mov
decl
test
je
mov
movb
incl
jmp
mov
decl
test
je
mov
movzbl
incl
xor
inc
mov
and
inc
inc
shr
mov
mov
je
mov
sub
cmp
ja
cmp
ja
sub
test
je
mov
sub
mov
mov
incl
inc
dec
mov
jne
mov
jmp
mov
mov
jmp
lea
push
lea
push
call
pop
pop
test
je
mov
test
jne
cmp
jne
lea
push
lea
push
mov
call
pop
pop
test
je
sub
cmp
ja
mov
cmp
ja
sub
test
je
mov
sub
mov
mov
incl
inc
decl
mov
jne
jmp
sub
jmp
dec
dec
mov
decl
test
je
mov
movzbl
shl
add
incl
mov
lea
push
lea
push
mov
call
pop
pop
test
je
cmp
jb
incl
cmp
jb
incl
cmp
jae
addl
mov
sub
cmp
ja
mov
cmp
ja
sub
test
je
mov
sub
mov
mov
incl
inc
dec
mov
jne
mov
mov
xor
inc
jmp
mov
decl
test
je
mov
decl
test
je
mov
mov
mov
incl
incl
mov
xor
cmpl
je
jmp
jbe
jo
loop
das
mov
sub
jmp
or
pop
pop
pop
leave
ret
call
jmp
jg
mov
mov
cltd
jnp
dec
sub
pusha
ja
dec
sub
lea
add
in
add
jne
imul
sbb
test
sbb
jmp
scas
pop
mov
popf
jne
sbb
dec
fnstcw
aad
dec
jmp
xchg
or
push
orb
clc
or
pusha
out
jl
notb
int3
inc
shll
test
leave
jmp
mov
data16
push
cld
adc
stc
imul
pop
aas
lret
jmp
daa
mov
inc
mov
mov
mov
and
jbe
imul
cmp
jmp
push
xor
aas
arpl
xchg
gs
stos
cmp
add
and
or
gs
jne
je
xchg
add
add
icebp
popa
add
inc
push
icebp
popa
add
jbe
jmp
out
cli
popf
insb
mov
lock
and
dec
test
lret
call
call
push
mov
push
sti
dec
pop
jns
adc
sub
mov
jb
xchg
adc
ret
mov
sbb
pop
cmp
aas
pop
fmuls
fdivrs
mov
in
cli
into
dec
fnstcw
fimuls
mov
add
int
fstpt
ret
mov
insl
jb
sbb
add
mov
stos
fcomps
scas
pop
scas
es
dec
mov
loop
jmp
add
mov
call
aam
sahf
or
xor
loopne
sub
jmp
les
sbb
xchg
addr16
cmp
mov
xor
sbb
pop
xchg
or
out
jl
testb
popa
add
pop
dec
rolb
shlb
push
jmp
pop
cmp
ficomps
fs
jno
xorb
inc
shr
sbb
scas
sub
lea
cltd
clc
or
std
jp
jp
rclb
mov
mov
jmp
rcrb
scas
pop
mov
add
lea
fimuls
jmp
add
adc
adcb
andb
xor
dec
xchg
push
mov
rolb
sub
jmp
mov
sbb
rolb
mov
out
pop
lret
scas
pop
cwtl
xchg
add
jmp
push
add
or
sbb
pusha
cli
push
mov
inc
mov
mov
jmp
arpl
cmc
dec
push
int3
inc
and
add
and
addr16
sbb
xchg
push
pushf
sti
push
mov
push
aad
mov
dec
mov
fsubrl
stc
in
jmp
inc
add
subl
xchg
enter
push
mov
dec
mov
jmp
mov
push
mov
and
je
clc
jo
jmp
dec
jmp
xchg
outsb
subb
ss
mov
ljmp
shrb
movzbl
jmp
inc
shll
std
test
add
adcb
loopne
jmp
add
std
or
mov
ret
repz
pushf
outsl
test
mov
dec
mov
mov
jmp
inc
xlat
mov
stc
insb
hlt
push
cld
push
xor
std
popa
icebp
nop
arpl
cmpsl
jmp
leave
cmp
pop
negl
mov
cs
cmpsl
dec
jmp
notl
loope
jae
fstps
stos
pop
xchg
inc
and
sbb
ljmp
stc
out
out
adc
add
in
mov
int3
mov
jmp
in
sbb
adc
clc
jbe
cmpl
jmp
sbb
ds
test
repz
mov
mov
xchg
in
sbb
and
jmp
int
push
mov
out
mov
imul
hlt
pop
in
addr16
gs
add
push
mov
cmc
pushf
outsl
fldt
mov
inc
mov
xor
out
gs
add
cld
fisubrl
cmpb
sbb
inc
push
enter
jg
xchg
add
sbb
imul
cmp
dec
sub
pop
fimuls
add
pop
cmp
aaa
in
lea
jmp
popa
xchg
movsl
xor
jae
xchg
pop
xchg
add
jmp
sbb
aad
fstl
mov
xchg
repz
lds
movb
sub
sbb
mov
ret
cmp
inc
mov
push
add
pop
pop
enter
outsl
lods
cmp
add
iret
pop
cmp
jmp
add
in
std
adc
daa
jl
je
out
pop
mov
mov
in
jge
lds
pop
and
lods
data16
outsb
or
push
imul
pop
ret
ret
jmp
xchg
rclb
push
cld
jnp
mov
gs
adc
inc
in
insl
std
test
shr
pop
scas
dec
mov
int
sub
into
pop
cmp
ss
mov
leave
pop
cmp
and
mov
loope
clc
lahf
push
adc
xor
outsl
jo
sbb
stc
jmp
fistpll
das
mov
adc
push
imul
pop
jmp
ja
xor
pop
in
jmp
jge
fisttpl
mov
jle
sbb
pusha
cmc
gs
pop
out
loope
jae
inc
inc
and
jns
push
test
push
out
rol
jmp
xor
int
xchg
in
je
lea
popf
or
mov
sbb
andb
and
repz
mov
mov
jle
or
aad
or
jmp
sbb
mov
inc
rcll
and
pop
leave
test
mov
jmp
lret
add
mov
lahf
cli
or
dec
rclb
and
notl
add
sbb
and
mov
scas
lret
ljmp
and
das
mov
pop
jp
arpl
lock
bound
mov
rolb
mov
out
inc
jmp
aas
decb
das
fidivrl
mov
fdivr
push
lahf
push
xlat
inc
shlb
adc
cld
xchg
cmc
add
cmp
add
cltd
or
es
decl
jmp
punpckhdq
or
push
cli
gs
pushf
outsl
ficompl
outsb
or
jg
jmp
and
repz
lcall
or
jp
and
adc
and
pop
jnp
cmp
js
xchg
cmc
add
inc
lds
iret
and
mov
call
and
sbb
xchg
sbb
into
pop
cmp
xor
pushl
shll
in
bound
repnz
fs
imul
add
push
mov
imul
mov
add
repz
inc
add
fidivl
fucomi
jno
xorb
jecxz
push
in
icebp
jmp
pop
push
add
xor
sbbb
jmp
xchg
push
pushf
sti
push
push
jmp
cmpl
or
ss
lds
jmp
stos
mov
int
pop
leave
test
mov
or
lock
push
repnz
jmp
lods
dec
adc
popf
sbb
lret
lret
and
add
sbb
sbb
gs
dec
lds
jmp
and
add
gs
popa
and
sub
sbb
push
std
cmp
jle
mov
and
add
lahf
aad
add
fcoms
cmpsb
push
hlt
loop
out
mov
insl
mulb
dec
add
adc
ljmp
dec
insl
call
pop
call
jmp
lcall
es
jecxz
push
in
lahf
adc
xlat
inc
call
ljmp
stc
or
ret
into
jmp
add
mov
xchg
mov
icebp
dec
fimuls
add
dec
fisttpll
push
lret
add
rolb
mov
xor
push
scas
xor
int
mov
add
mov
mov
and
jmp
nop
arpl
jmp
xchg
aad
aas
imul
jmp
xchg
jge
cltd
or
insb
sbb
aam
fstpt
push
jmp
jp
pop
into
test
icebp
nop
arpl
jle
rolb
jmp
pop
mov
add
scas
das
mov
inc
and
ds
mov
and
adc
call
jmp
push
mov
fnstcw
sub
inc
fidivrl
mov
jmp
jne
insl
mov
lods
lret
inc
movsb
cmp
loop
clc
lahf
push
out
inc
roll
sub
xor
inc
mov
sarb
xlat
or
pop
jb
jmp
xor
mov
ror
addr16
call
jmp
mov
ret
dec
fnstcw
mov
pop
xchg
adc
lcall
jmp
push
movsl
dec
mov
test
cmp
fwait
setg
or
mov
ret
aas
jmp
sbb
adc
insb
loop
je
sbb
out
jg
mov
arpl
gs
jmp
sbb
adc
popf
pusha
cli
push
into
pop
cmp
pusha
fwait
add
xchg
mov
jmp
mov
jecxz
imul
or
push
iret
push
shlb
push
in
insb
jnp
dec
sub
pop
dec
into
pop
cmp
add
cmp
sub
je
out
test
jmp
out
sbb
xor
rcrb
scas
pop
mov
jne
push
flds
fwait
decb
fisubrs
or
xor
dec
ret
movsl
push
mov
nop
push
popa
nop
jb
cmp
or
push
rcll
je
jne
les
int3
imul
push
popa
nop
push
jne
jno
jecxz
cltd
push
pushf
jmp
es
mov
push
insl
hlt
pop
mov
pop
xchg
ss
push
lea
call
sub
mov
jne
xor
jmp
mov
mov
mov
test
je
test
jle
add
jmp
xor
jmp
cmp
jbe
loopne
shlb
mov
test
je
cmp
jb
cmp
jb
lea
shr
push
pop
je
mov
mov
and
mov
cmp
jne
movzwl
and
add
lea
mov
add
inc
cmp
jb
add
jne
pop
pop
jmp
or
or
inc
pop
leave
ret
push
mov
sub
lea
mov
call
mov
mov
mov
test
je
test
jle
lea
jmp
xor
jmp
popa
cli
push
add
pop
push
push
mov
test
je
cmp
jb
cmp
jb
lea
shr
movl
je
mov
movzwl
mov
and
mov
cmp
jne
and
add
add
mov
add
cmp
jne
mov
incl
cmp
jb
add
jne
pop
pop
jmp
inc
fimuls
dec
jbe
je
rolb
call
jmp
jae
jl
imul
adc
adc
sub
pusha
notb
js
push
mov
sub
push
push
push
call
xchg
or
test
ret
jno
jecxz
roll
mov
cmpsl
sbb
aad
shl
jbe
cmpl
fs
jmp
lea
test
cmp
mulb
sbb
nop
push
popa
nop
popa
sbbb
ljmp
inc
call
mov
sbb
es
in
jo
xorl
cmp
pop
cmp
dec
push
jmp
add
add
mov
xchg
fistps
andb
xor
inc
inc
rclb
sbb
add
sub
mov
ret
mov
cmpsb
shll
sbb
add
jmp
push
test
arpl
hlt
sbb
push
ret
cmpsb
push
mov
sbb
mov
mov
lahf
je
les
int3
cmp
movsb
cmp
inc
dec
test
jmp
test
cmp
out
ljmp
lcall
insl
subl
repz
test
ret
xor
or
xor
sbb
in
pop
lret
pop
ds
pusha
std
insl
hlt
pop
mov
cli
push
out
adc
sbb
add
add
inc
and
pop
pop
fisttpll
out
mov
mov
fucompp
filds
das
mov
roll
aad
inc
ret
ret
inc
mov
scas
push
fisttpll
out
movsb
xor
pop
pop
pop
leave
ret
mov
push
call
mov
push
call
xor
xor
ret
call
jmp
repz
cmc
adc
inc
and
cmp
xchg
add
ret
push
lds
inc
rolb
fs
jmp
mov
mov
jmp
push
in
or
std
push
jmp
outsl
lcall
fnsave
bound
scas
leave
cmp
sub
fldl
xchg
and
push
mov
mov
jne
mov
decb
pop
das
call
jmp
or
jb
xchg
enter
fs
push
mov
cmp
push
cmp
jg
add
cmpsb
xor
scas
adc
inc
fidivrl
sbb
add
push
xor
push
fwait
mov
mov
mov
sub
adc
mov
fsubrl
int3
cwtl
pop
rcrl
call
adc
outsb
ljmp
sbb
push
pushf
push
test
push
cld
pop
xlat
inc
and
js
outsl
lcall
pop
aas
lret
and
jmp
in
je
addr16
push
cld
adc
adc
xor
mull
icebp
or
sub
ja
loope
lcall
jmp
mov
xlat
mov
cmpsl
inc
rolb
shlb
insl
std
test
dec
inc
and
push
jmp
mov
mull
icebp
inc
inc
fdivl
in
aad
fdivrs
das
jmp
outsb
pop
push
xor
js
xor
int
mov
sub
pop
lods
js
mov
jmp
and
add
and
aas
and
dec
ficompl
lea
jmp
and
add
cmp
iret
pop
cmp
ds
add
cmpsb
mov
and
add
jmp
xor
insl
mov
std
or
out
popa
icebp
nop
arpl
shll
ficoms
mov
jle
jle
fdivl
in
add
or
pop
mull
xchg
popa
lea
call
push
jmp
imul
jg
push
shll
js
dec
add
add
jmp
jmp
adc
add
mov
dec
mov
mov
cmpsl
jle
popa
lea
jmp
jo
jno
jecxz
and
mov
mov
sbb
lahf
jmp
cli
or
or
jns
arpl
cmc
sbb
push
mov
push
xor
jmp
mov
jle
cmp
sub
lock
mov
ljmp
and
lcall
xor
push
lods
or
sub
jp
sbb
sub
pusha
notb
sub
ljmp
js
ljmp
add
add
or
jb
data16
in
sbb
cmp
aam
add
add
or
jb
pop
leave
test
mov
mov
jmp
fcomps
scas
pop
scas
and
jp
popf
je
push
jmp
test
pop
test
sahf
pop
xchg
repnz
cwtl
xor
mov
andb
lea
jmp
les
mov
lcall
inc
lds
iret
sub
or
setg
or
push
mov
in
jle
fcompl
stos
pop
mov
frstor
lods
and
adc
loop
sub
dec
ret
mov
es
cs
and
lods
and
pop
xchg
repnz
lds
mov
ljmp
cmc
add
cltd
or
add
pop
lret
lret
stc
imul
sbb
jge
xor
and
mov
inc
mov
cli
fs
popf
insb
lds
inc
daa
shlb
inc
and
ja
xor
dec
fstpt
mov
mulb
sub
pop
int3
stos
data16
lcall
mov
sbb
divl
xorb
data16
xchg
outsb
mov
xchg
testb
pushf
jne
pop
jp
jne
mov
inc
mov
sub
jmp
lock
bound
andl
scas
and
fwait
or
outsl
dec
push
lret
test
mov
and
jg
fisttpll
out
mulb
xchg
popa
test
push
ret
cmpsb
push
mov
int3
imul
xor
push
fwait
add
roll
sarl
push
mov
mov
loopne
adc
push
add
push
imul
popa
icebp
nop
arpl
pop
ljmp
stc
orb
pop
jp
inc
cs
inc
mov
js
outsb
or
sbb
fs
popf
insb
mov
arpl
cmc
sbb
dec
sub
pop
xor
push
dec
lret
lret
popa
icebp
nop
arpl
stc
mov
sub
nop
pop
or
idivl
mov
mov
fnstcw
mov
inc
mov
gs
gs
adc
shlb
ja
out
in
aaa
lret
inc
jne
data16
sbb
int3
loop
in
jg
adc
fs
jbe
loopne
mov
nop
push
popf
or
out
adc
inc
xor
cmp
push
and
pop
lds
iret
jp
xchg
add
push
into
jae
xchg
ret
inc
xlat
mov
fwait
outsb
repz
cmc
adc
and
pop
jecxz
push
in
push
fisttpl
fnsave
dec
leave
pop
cmp
sub
decl
inc
es
mov
std
or
repz
mov
jne
test
mov
and
mov
test
cmp
pop
cwtl
push
imul
in
bound
shll
push
jno
jne
push
xor
imul
cmpsb
xor
lret
pop
ds
jl
jle
call
cmp
jno
jne
mov
cwtl
add
jne
mov
pop
ret
ret
sbb
roll
shll
push
test
push
mov
clc
outsb
or
dec
lret
cltd
push
shll
cmpsl
adc
add
sahf
dec
loope
lock
bound
sub
lods
and
push
rclb
pop
mov
and
test
pop
test
inc
push
xor
daa
mov
xchg
lock
adc
cltd
pop
xchg
adc
ret
mov
in
jle
idivb
mov
mov
xchg
repz
out
cld
xchg
cmc
add
outsl
add
and
mulb
xchg
outsb
leave
xchg
add
rolb
shlb
ret
scas
pop
mov
setg
or
add
sub
dec
xchg
or
push
mov
es
mov
xchg
data16
outsb
or
push
add
or
or
sbb
adc
test
movsb
es
cs
incb
cwtl
sbb
rcll
inc
fdivrs
lods
add
out
lock
bound
inc
loope
stc
cwtl
imul
imul
pop
jb
inc
xor
push
lds
jecxz
loop
jecxz
jne
sbb
lcall
iret
stos
pop
mov
fdivrl
xchg
pop
into
pop
cmp
adc
cs
je
jno
jecxz
fwait
or
fcoms
cmpsb
push
hlt
divl
xchg
push
iret
pop
cmp
popa
mov
mov
xchg
add
sahf
and
jge
negl
cmp
sbb
fdivl
in
addr16
push
popf
or
inc
mov
mov
lcall
fs
sbb
shll
cltd
clc
or
nop
adc
gs
adc
add
repnz
mov
xchg
repnz
add
aam
repz
lea
addr16
sbb
insb
or
in
ret
ret
dec
fidivrs
jo
loop
loop
out
jno
jne
jnp
in
dec
std
insb
loop
je
ja
ja
loope
ret
push
lret
mov
mov
pop
iret
pop
cmp
jo
xchg
pop
bound
ret
add
xchg
or
xchg
mov
add
inc
fimull
fidivl
add
mov
jns
dec
das
ficompl
int
and
add
adcl
test
fs
popf
insb
lea
test
lods
sub
inc
fidivrl
pop
cmp
cmp
mov
gs
jge
xchg
jb
insl
fcoml
lods
pop
cli
idivl
je
dec
xchg
sbb
cmp
imul
aad
sub
xor
xchg
add
sahf
push
jge
je
insl
push
push
xor
cmp
mov
jnp
js
ljmp
add
mov
adc
in
sbb
sub
rcll
xor
xchg
push
pushf
sti
push
mov
loope
loopne
in
mov
xor
js
push
outsb
icebp
popa
add
inc
mov
mov
leave
push
pop
fdivl
in
lods
cs
loope
adc
add
pop
iret
stos
pop
test
inc
and
cmp
test
pop
test
pop
cltd
or
ja
fmuls
fdivs
adc
or
cmpsb
inc
ds
clc
jo
xorl
xchg
jl
cmc
gs
sbb
jnp
mov
orl
imul
lods
cmp
int
and
and
inc
sub
jp
cmc
gs
or
jmp
insb
sbb
and
inc
fimuls
pop
adc
and
cwtl
or
stos
xor
int
xchg
insl
repnz
pop
repnz
data16
push
scas
cmp
mov
jns
dec
sub
pop
les
pushf
outsl
ljmp
fstpl
stos
data16
mov
or
push
lahf
push
lock
mov
ds
sbb
xchg
and
icebp
dec
les
int3
imul
out
data16
xchg
outsb
orb
ret
in
sbb
loopne
jb
inc
int
and
and
push
cld
adc
xor
adc
mov
dec
mov
fsubrs
lret
cwtl
or
enter
fs
pusha
notb
xor
push
jmp
out
jo
xchg
or
push
mov
es
pop
pop
jp
ds
cmp
push
and
push
lds
sbb
in
dec
frstor
mov
cmpsb
shll
xor
xchg
sbb
lods
and
mov
cmp
adc
cmp
cs
mov
jecxz
neg
push
mov
ss
mov
xor
push
xor
and
push
mov
and
push
and
in
sbb
sbb
push
lret
mov
mov
inc
mov
dec
mov
aas
lret
cli
push
sub
in
out
jo
stc
insb
loop
je
push
lret
lret
mov
addr16
insl
hlt
pop
lods
rorl
mov
imul
mov
es
into
push
shlb
mov
into
test
mov
int3
inc
and
popf
in
repz
out
hlt
xchg
outsb
mov
into
in
icebp
nop
arpl
js
test
fldl
mov
jns
push
mov
mov
lods
mov
mov
cmp
inc
xchg
pop
aam
leave
test
mov
les
pusha
xchg
insb
loop
je
test
test
push
jmp
mov
inc
mov
mov
sbb
pop
repnz
mov
int3
loop
in
jg
sbb
in
jge
testl
cmp
aam
inc
shll
and
push
enter
pop
cmc
sub
mov
mov
or
fisttps
pop
fstpt
xchg
adc
mov
fidivl
xlat
mov
fiaddl
push
xor
das
xchg
adc
in
sbb
mov
lods
mov
cmpsl
je
push
fmuls
fcoms
mov
nop
testl
jmp
ret
shll
jge
gs
sbb
ret
ret
fimull
fisubrl
dec
fimull
fidivrl
mov
inc
mov
adc
jbe
pop
add
setns
push
xchg
repz
test
adc
leave
cmp
dec
jecxz
and
jp
jp
push
imul
dec
shll
gs
mov
lods
and
xor
pop
fimull
fimull
inc
push
xor
sub
sti
test
std
or
je
pusha
pop
repnz
push
cmp
sub
jp
jno
push
cld
adc
sub
mov
cwtl
lahf
adc
and
pop
adc
or
jle
jae
xchg
xchg
sbb
mov
push
lret
mov
scas
cmp
mov
stos
cmp
sbb
pop
lret
scas
pop
mov
lods
inc
add
push
popa
nop
js
jb
xchg
cld
data16
xchg
outsb
lahf
or
inc
fisttps
mov
std
popa
icebp
nop
arpl
int
shlb
dec
mov
in
mov
rcrl
ljmp
std
test
cmp
sub
mov
mov
movsb
ret
fdivl
mov
dec
mov
push
cmpsl
inc
xchg
push
test
push
lock
fmuls
fdivs
jp
add
adc
pushf
xor
add
std
cmc
jl
jne
push
mov
jle
outsl
sub
adcl
mov
leave
adc
pop
xchg
or
imul
scas
lods
lret
inc
test
jge
je
addr16
and
pop
or
jge
jle
call
cmp
cmp
daa
mov
and
test
js
ja
loope
and
dec
aad
sub
push
or
adc
fnstsw
je
add
mov
jg
or
pop
dec
enter
cs
and
int
out
mov
add
dec
adc
add
push
call
dec
mov
leave
xor
mov
pop
rolb
rcrb
mov
roll
repnz
frstor
test
aaa
mov
cmp
mov
ret
add
or
cmp
cmp
push
push
in
adc
adcl
test
pop
int
addr16
push
xor
xor
dec
fidivrs
or
xor
sub
mov
adc
lea
pushf
xor
adc
arpl
cmc
je
pop
into
test
mov
inc
and
cmp
iret
sti
jp
jp
pop
fisttpll
out
jns
insb
or
out
fs
popf
insb
addb
xor
sub
stc
fstl
mov
add
pop
jge
push
cld
adc
test
pop
test
dec
fistpll
jo
loop
sub
cli
push
mov
jg
jg
lock
push
ret
mov
add
jo
sub
lds
jns
arpl
cmc
sbb
pop
and
jb
pop
xchg
repnz
arpl
xchg
gs
add
jmp
push
push
bound
xchg
testb
or
push
out
jae
xchg
sbb
sbb
xor
jle
mov
mov
and
aam
lds
addr16
adc
arpl
cmc
sbb
sarb
mov
inc
mov
sbb
rorl
dec
cmpsb
xor
jbe
cmpl
dec
fdivrl
fidivrs
out
jo
adc
jbe
je
out
dec
jmp
mov
cmp
outsl
jmp
ss
adc
inc
dec
mov
jle
sub
pushf
xor
push
dec
aam
sub
jp
in
inc
add
test
jge
and
push
jae
daa
pop
leave
test
out
mov
movsb
dec
in
bound
ret
xorb
xchg
push
test
push
ljmp
push
hlt
jb
xchg
arpl
jp
in
or
pop
xchg
repnz
cmpsb
and
lcall
mov
xor
enter
rorb
push
mov
dec
fdivrs
out
mov
rcrl
stos
xchg
mov
ficomps
xchg
add
data16
mov
and
push
lcall
pop
int
addr16
imul
mov
mov
mov
leave
pop
cmp
jg
insb
loop
je
sbbb
call
sub
adc
mov
call
aad
jl
jne
xor
dec
ret
sarl
dec
das
ficompl
lods
lret
inc
xchg
mov
stos
into
cmp
mov
mov
jmp
adc
add
jnp
out
adc
push
clc
jl
jne
push
popf
or
insb
loop
je
push
mov
push
mov
xchg
pop
js
addr16
adc
leave
add
inc
into
pop
cmp
aas
aam
iret
stos
pop
xchg
sub
and
outsl
std
insl
hlt
pop
mov
das
out
adc
lahf
or
add
cmp
es
fisttps
sub
imul
adc
inc
xchg
or
nop
push
popa
nop
cmp
xchg
mov
lds
iret
jp
xchg
add
adc
repz
cmc
je
add
dec
int3
inc
and
rcll
add
jge
push
into
je
imul
fsubrs
imul
xchg
sbb
aad
dec
push
xor
imul
xor
outsl
out
adc
or
in
ja
imul
xlat
mov
mov
pop
jno
jo
loop
inc
fisttpl
fnstsw
pop
jp
push
xchg
xchg
adc
xlat
inc
mov
stos
rclb
mov
popa
icebp
nop
arpl
inc
fdivl
in
movsb
cmp
adc
or
sbbl
dec
stc
lock
loop
je
fiadds
mov
negb
ret
cmp
push
test
jge
pop
jae
add
push
add
test
fwait
decb
xor
es
adc
add
loopne
inc
and
aaa
das
stos
cmp
dec
adc
jb
push
lock
push
and
dec
dec
ret
ret
xor
jne
mov
dec
fisttps
test
iret
jbe
je
out
dec
mov
pop
cmp
sub
data16
xchg
outsb
test
es
mov
mov
mov
das
mov
movsb
cmp
pop
push
lret
lret
out
adc
inc
and
aas
cmpsl
aaa
push
mov
sub
push
lock
pop
lods
xor
pushf
xor
and
xchg
dec
fstpt
inc
sub
cmp
out
pushf
and
dec
fdivrs
popf
in
cmc
jbe
pusha
pop
repnz
in
sbb
pop
bound
jnp
xor
xchg
pop
bound
and
xor
xchg
mov
into
pop
cmp
xor
mov
iret
outsb
cld
xchg
cmc
add
sub
fisttpl
xorl
and
lret
shll
mov
pop
xlat
push
xor
sbb
sti
pop
insl
cmc
gs
or
xchg
pop
bound
add
push
leave
push
mov
mov
adcl
inc
and
ja
stc
imul
or
shlb
and
mov
mov
add
adc
jmp
add
mov
dec
mov
dec
lods
mov
test
lods
lret
inc
mov
jmp
test
and
ljmp
int
and
cmp
add
push
ljmpw
jp
gs
or
lahf
punpckhdq
add
pop
xchg
or
mov
inc
mov
std
imul
push
shlb
sub
xor
lcall
clc
popa
icebp
nop
arpl
jno
jg
enter
std
test
in
jb
xchg
bound
xchg
testb
add
xor
pop
cmp
mov
mov
or
pop
xchg
or
mov
jmp
sti
sbb
dec
adc
pop
clc
jle
mov
cltd
push
jmp
pop
iret
stos
pop
mov
pop
cmp
xor
lds
jbe
loopne
inc
pushf
jmp
cmp
shl
push
push
mov
jg
arpl
pop
cmp
jmp
add
outsb
popf
jae
es
mov
popa
lock
xor
add
xchg
add
loope
or
ds
flds
mov
mov
cmp
jmp
sbb
aad
xchg
mov
xchg
mov
inc
xchg
push
mov
add
push
lock
mov
stos
into
cmp
sub
jnp
hlt
inc
jmp
ds
sbb
jno
pop
into
test
jno
jecxz
and
sbb
pop
add
enter
jg
outsb
idivb
mov
and
imul
pop
add
adc
gs
or
mov
jb
int
xchg
sub
add
iret
xchg
add
sbb
data16
xchg
cmc
add
es
push
lds
lods
and
sbb
sbb
and
push
lds
es
cs
pop
push
xor
repnz
std
test
test
pop
js
dec
sub
pop
scas
sub
lds
push
roll
shll
mov
mov
add
inc
mov
xchg
xchg
repnz
js
mov
test
xchg
icebp
add
mov
jmp
es
mov
ljmp
mov
rcrb
stos
pop
mov
sbb
push
fisttpll
out
mov
test
cmp
loop
out
jo
test
test
push
jmp
popf
mov
call
jmp
out
adc
dec
test
scas
lret
stc
insl
std
test
iret
pop
into
test
in
fs
jmp
pop
rclb
xor
jae
in
add
inc
jmp
adc
xor
or
jp
in
pop
jp
je
out
inc
mov
mov
add
pusha
xchg
push
jle
jae
in
push
rolb
rolb
sbb
xlat
inc
mov
jmp
mov
cs
cmpsl
daa
mov
and
xchg
xchg
repnz
xor
push
jmp
add
cmp
push
lret
mov
add
mov
inc
sub
add
jmp
cwtl
push
imul
dec
fnstcw
jle
call
call
jmp
xlat
inc
and
jbe
ljmp
stc
cwtl
imul
aam
sub
mov
jmp
dec
into
pop
cmp
add
mov
mov
sbb
add
sbb
arpl
dec
sub
cmp
outsl
lcall
xchg
lock
and
add
loop
add
jns
addr16
xor
mov
mov
mov
jmp
cmp
adcl
repnz
pop
repnz
jo
xorl
fs
jmp
repnz
lcall
addr16
push
into
push
lds
push
add
pop
aas
lret
ja
xorb
push
shlb
movsb
push
jmp
pop
xchg
repnz
xchg
inc
pop
fimull
fidivrl
jp
loope
call
jmp
mov
inc
mov
and
and
rcrl
pop
out
roll
fs
jmp
movsl
int3
aas
xchg
sub
lcall
sbb
ds
dec
lahf
into
push
ret
cmpsb
push
mov
cmpsl
aaa
push
mov
and
jmp
js
mov
push
xlat
inc
and
aas
jl
outsb
or
push
out
lock
bound
jmp
and
mov
sbb
lds
popl
xchg
repz
loopne
in
sbb
sbb
loope
cmpsb
xor
scas
inc
pop
leave
test
lods
xchg
add
mov
insb
and
jmp
and
sub
or
jae
jne
out
add
xor
jmp
inc
shlb
or
dec
ret
mov
push
mov
mov
add
mov
pop
jne
insb
or
mov
les
mov
sbb
cmp
test
xchg
sbb
inc
mov
test
pop
jmp
mov
clc
imul
fwait
or
cmp
into
pop
cmp
adc
and
cmp
in
sub
cmp
jmp
cmp
add
jbe
imul
sbb
inc
mov
fs
jmp
mov
leave
test
mov
loopne
icebp
je
lea
jmp
pop
loop
mov
lea
jl
idivb
cmp
mov
jmp
js
cmpsb
sub
cs
movsl
xor
lahf
por
push
push
lds
iret
push
xchg
or
pop
ja
ja
loope
das
in
call
jmp
and
cltd
or
push
adc
dec
out
cli
popf
insb
mov
inc
lea
jmp
addl
inc
mov
cli
adc
jmp
or
out
adc
push
mov
in
je
dec
add
add
jmp
or
scas
pop
mov
stc
in
dec
fdivrs
mov
lock
jmp
fidivrs
lods
mov
loop
out
adc
sub
daa
dec
jmp
or
dec
fimuls
inc
mov
mov
cmc
gs
dec
adc
dec
orb
in
mov
add
push
push
push
call
cmp
dec
ret
std
inc
fsubr
sbb
push
fiaddl
mov
out
inc
mov
test
lock
jp
lea
jmp
mov
pop
cmp
aaa
mov
stos
int
fmulp
dec
fnstcw
sbb
insb
popf
pop
out
imul
mov
xchg
je
insb
jmp
je
sbb
ds
dec
mov
and
out
jo
push
jmp
test
xor
das
dec
mov
mov
cmpsl
push
lds
iret
cmp
lahf
punpckhdq
sbb
fs
cmp
lea
gs
pushf
outsl
xchg
mov
ja
mov
jmp
and
add
xor
rcrb
pop
out
fildl
mov
call
arpl
jmp
and
add
stos
cmp
cld
xchg
cmc
add
popa
icebp
nop
arpl
jecxz
xlat
mov
in
and
add
jmp
inc
push
xor
sbb
mov
clc
js
mov
xor
fcomps
stos
data16
fcompl
test
mov
scas
inc
jmp
cld
fwait
jbe
push
jmp
add
add
cwtl
push
imul
push
test
push
lock
cwtl
push
imul
or
fidivrs
sbb
jle
roll
aad
jne
push
jmp
call
add
push
xor
inc
outsb
ljmp
stc
in
jmp
stc
cwtl
imul
mov
daa
rcrl
pop
in
insb
hlt
push
xor
jmp
fdivr
jmp
xchg
testb
inc
mulb
insl
hlt
pop
lods
das
mov
sbb
std
lcall
or
fwait
or
dec
fstpl
stos
data16
jmp
mov
inc
aad
dec
movsb
xchg
adc
inc
aam
jmp
push
aam
sub
pop
cmp
xor
push
lret
sti
mov
loop
dec
push
jmp
mov
inc
stos
ds
inc
mov
test
sahf
stc
or
jo
xchg
testb
push
dec
mov
cmp
push
mov
test
jmp
outsl
add
dec
movsb
iret
pop
leave
test
mov
lea
leave
pop
cmp
cmp
or
add
pop
cmc
lds
ljmp
adc
or
xchg
or
xor
pop
pop
leave
ret
call
jmp
adc
lock
push
dec
leave
pop
cmp
sub
pop
cmp
xor
fs
jmp
dec
lret
lret
setg
or
mov
shr
data16
xchg
outsb
leave
sbb
adc
jbe
outsb
or
sbb
fimull
fidivrl
jb
insb
or
out
dec
fnstcw
cli
popf
insb
test
jno
xorb
fisttps
flds
out
jg
jmp
cld
pxor
dec
fnstcw
in
jg
push
insl
hlt
pop
mov
jne
repz
lods
xor
int
xchg
adc
push
nop
push
popa
nop
cmp
sub
outsb
cmp
int
mov
fnstcw
inc
and
pop
adc
dec
mov
mov
mov
push
lret
mov
movsl
dec
add
mov
fs
adc
push
pop
roll
shll
cs
cmp
or
je
lea
xchg
jb
popa
sub
xor
inc
jecxz
loop
je
dec
rcll
sub
mov
mov
cs
js
jns
jmp
jmp
and
xchg
add
test
repnz
pop
repnz
fcomi
lock
lds
mov
inc
mov
xchg
or
pop
int3
stos
iretw
sub
sub
add
dec
ret
std
sbb
adc
inc
shll
push
cld
jnp
stc
imul
cs
mov
jle
insl
and
inc
push
xor
sub
cmp
aaa
mov
inc
mov
fldenv
xchg
lea
in
cmp
xchg
or
cmp
dec
fnstcw
pop
cmp
push
aaa
ret
repnz
pop
repnz
mov
ret
dec
fdivrl
xchg
repnz
jge
jl
testb
mov
inc
mov
pop
lret
lret
jl
jne
data16
jg
jmp
inc
mov
lods
aas
scas
lret
fildl
mov
mov
out
sbb
inc
jmp
add
sahf
and
nop
push
popa
nop
cmp
pop
cmp
les
xchg
add
add
test
pop
test
lretw
pop
ds
xor
call
jmp
jns
icebp
je
lea
add
std
or
dec
ret
ret
pop
sbb
jmp
adc
adc
call
mov
sbb
mov
fdivrp
jmp
sbb
rolb
mov
in
daa
mov
and
rolb
dec
scas
cld
imul
jmp
xchg
add
std
or
aaa
mov
inc
mov
movsb
cmp
mov
test
sahf
pop
rclb
imul
xor
jmp
dec
fstpt
or
jecxz
push
in
stc
jns
mov
jbe
imul
iret
dec
frstor
daa
shlb
insl
jmp
mov
int
jmp
jge
bound
testl
imul
fwait
or
mov
jmp
enter
aas
scas
lret
jmp
cli
popf
insb
mov
pushf
xor
dec
dec
rcll
enter
fsubrl
lds
sti
push
push
push
lds
enter
jmp
call
mov
and
shlb
xchg
dec
fistpll
adc
pop
xor
and
sbb
mov
mov
mov
call
adc
inc
fimull
fisubrl
mov
jns
mov
jle
or
jmp
mov
lcall
and
dec
fstpl
fs
je
lea
sbb
push
scas
dec
lods
das
mov
pop
xchg
adc
pop
rolb
shlb
loope
clc
jmp
or
pusha
push
test
add
std
or
ljmp
mov
jmp
cli
jne
mov
mov
mov
and
sbb
stc
outsl
lcall
test
ja
xorb
add
push
in
and
or
jl
jne
out
pop
imulb
fwait
jbe
push
test
jmp
or
mov
jnp
in
pop
xlat
dec
fnstcw
adc
xor
mov
xor
jmp
fimuls
xor
pop
leave
test
mov
mov
stc
js
mov
cmpsb
daa
pop
insl
lahf
call
jmp
cmpsl
aaa
push
mov
pop
loop
inc
ret
ret
lret
lret
push
lea
jmp
cmp
ljmp
outsb
cld
fwait
jbe
mov
aad
xchg
add
out
jl
notb
adcl
test
sub
lds
sbb
xchg
mov
cmp
cmp
xchg
add
dec
fdivrs
stos
push
jmp
popf
or
mov
inc
mov
add
daa
ret
push
lds
jmp
mov
mov
xchg
push
cwtl
push
imul
lcall
jmp
inc
xlat
mov
call
add
or
loope
in
jle
lock
lea
jmp
loop
out
mov
pop
rclb
jbe
adc
jmp
sub
adc
pop
xchg
repnz
pushf
sub
xchg
fldl
mov
jmp
sub
adc
pcmpeqd
dec
fstpl
movsb
ret
ds
ja
mov
jmp
mov
jbe
cmpl
dec
fidivrs
xlat
imul
imul
jmp
sbb
mov
lcall
and
mov
xchg
or
insl
rcrb
pop
out
imul
jmp
fimuls
or
das
dec
mov
cli
or
mov
rorb
fs
jmp
ficoml
pop
mov
pop
mov
in
add
jmp
pop
mov
mov
test
push
jmp
jb
xchg
sbb
jmp
dec
ret
mov
mov
inc
mov
inc
aam
sub
pusha
pop
repnz
sub
mov
mov
jb
xchg
and
jnp
mov
inc
mov
test
sbb
aas
mov
push
xor
push
inc
mulb
mov
inc
and
mov
jmp
rolb
add
mov
dec
mov
addr16
jae
lret
pop
ds
jge
imul
add
mov
scas
add
add
icebp
sub
jmp
call
pop
jp
jns
xchg
add
jbe
notl
sbb
adc
pop
lcall
push
lahf
push
cs
push
lds
jmp
jmp
adc
jmp
cmp
cwtl
push
imul
fimull
fidivl
inc
jmp
and
jns
outsl
lcall
ljmp
insl
pushf
xor
arpl
sbb
inc
mov
mov
pushf
aad
fistpll
mov
jecxz
jmp
or
push
lret
mov
popa
icebp
nop
arpl
jbe
mov
xor
jmp
dec
roll
aad
xchg
adc
push
mov
js
ljmp
daa
stc
jb
xchg
js
add
cmp
sti
add
add
xchg
sbb
add
mov
inc
mov
jmp
mull
pushf
outsl
lret
push
xor
add
rolb
or
jmp
pop
xchg
repnz
mov
les
xlat
sub
push
lds
lods
cmp
jmp
in
jbe
cmpl
inc
shll
outsb
or
push
aas
jmp
push
scas
adc
xchg
mov
addr16
outsb
or
dec
rorb
mov
stc
cwtl
imul
dec
fstpt
push
lds
popf
in
shrl
movsl
sub
out
adc
or
lahf
je
stc
imul
inc
and
aas
push
sbb
fwait
or
jns
lds
iret
push
cmp
xchg
or
mov
jmp
and
add
add
fisttpll
out
gs
push
push
jmp
and
add
cwtl
imul
pop
roll
aad
cmp
mov
in
and
add
jmp
add
sbb
mov
lea
lea
test
push
jmp
icebp
push
hlt
jae
xchg
add
pop
int3
stos
shlw
loop
jmp
dec
fdivrs
aam
dec
jmp
sti
cmp
pop
cmp
sub
and
jmp
lret
inc
scas
loopne
jmp
jge
cld
data16
xchg
outsb
lahf
ja
bound
sbb
jl
outsl
lcall
pop
and
jl
es
cs
mov
in
sbb
push
mov
mov
xor
sbb
xchg
add
fs
sbb
aad
dec
scas
jb
push
cld
adc
std
push
call
jmp
xchg
add
sahf
sub
lea
push
cmp
jp
scas
cmp
mov
lock
rorl
jp
inc
dec
roll
aad
pop
fimull
fidivrl
mov
mov
jmp
or
push
into
pop
cmp
cmp
sar
jno
xorb
ret
push
lds
aas
pop
test
out
call
jmp
jmp
ss
testb
sub
lret
lea
jmp
jg
add
adc
mov
inc
mov
call
lahf
xor
sbb
adc
dec
fidivrs
imul
pop
jno
jbe
loopne
ljmp
sub
adc
mov
rcrl
sbb
xchg
xor
xchg
testb
add
jmp
inc
xor
rcrb
iretw
mov
repz
jmp
inc
push
xchg
fs
dec
fistpll
or
push
pushf
push
mov
mov
jmp
cmp
sbb
roll
inc
mov
sub
mov
stos
jmp
fdivrl
imul
std
test
jnp
dec
push
xor
imul
insl
push
fmuls
fdivs
or
int3
inc
shll
xchg
lock
sbb
lret
test
dec
fdivrs
add
sbb
xchg
xor
xchg
pop
adc
pop
out
mov
xchg
add
popa
icebp
nop
arpl
out
fldpi
sbb
jmp
jge
jnp
jno
jecxz
insl
hlt
push
cld
inc
repz
xchg
jmp
pop
cmp
jg
lcall
xchg
lock
cli
jge
push
les
mov
lcall
sub
movb
dec
scas
scas
push
jmp
sub
xor
nop
adc
in
sbb
insb
out
jg
jmp
inc
mov
sbb
xchg
repz
test
ficoms
repnz
es
cs
int
imul
sbb
js
ljmp
fs
fdivl
in
sbb
arpl
jmp
imul
xchg
push
rclb
pop
mov
jecxz
sbb
push
jmp
inc
and
and
mov
push
mov
add
outsb
jmp
inc
cmc
imul
adc
in
sbb
lea
xchg
adc
inc
notl
jmp
mov
in
xchg
pop
jecxz
push
in
jl
insl
hlt
pop
jecxz
pop
int
addr16
ret
ret
cld
xchg
cmc
add
lds
mov
mov
cli
adc
pop
xchg
push
jmp
sbb
add
inc
mov
in
imul
insl
mov
les
mov
add
xchg
add
sahf
jl
mov
das
mov
mov
mov
sbb
add
adc
mov
adcb
loopne
sarb
jmp
xchg
lock
ljmp
lahf
push
or
add
sahf
outsl
sbbl
jmp
dec
das
fidivl
std
mov
fdivs
adc
sbb
icebp
jno
adc
jb
adc
sbb
jb
adc
jb
adc
sbb
divb
adc
sbb
in
sbb
xorl
jae
adc
je
adc
sbb
inc
je
adc
sar
jmp
adcb
addb
mov
push
lret
mov
mov
jo
lea
jmp
jecxz
sti
sahf
insl
subb
push
inc
and
xor
add
add
adc
scas
mov
std
or
repz
jp
loopne
dec
and
call
imul
int3
inc
and
call
jmp
icebp
popa
add
adc
dec
fnsave
lods
and
clc
outsb
or
adc
and
jmp
pop
into
pop
cmp
adc
lcall
and
push
jae
mov
jmp
xor
stc
imul
pop
aas
lret
mov
movsb
xor
jmp
js
jo
loop
mov
and
xchg
cmc
add
insb
cmc
adc
jmp
sti
imul
pop
xchg
aad
aad
js
mov
inc
jecxz
push
in
jmp
and
jmp
pop
ret
ret
mov
jle
and
dec
fnstcw
sbb
xor
or
and
and
fcompl
fs
lods
cmp
sub
scas
aas
pop
test
dec
mov
push
jmp
mov
shlb
and
and
jg
insb
loop
je
fsubr
sbb
notl
icebp
nop
arpl
pushf
push
mov
jmp
jl
add
data16
xchg
outsb
leave
inc
roll
rcll
mov
mov
sbb
sub
push
jmp
jl
add
xor
daa
sbb
or
out
adc
xor
push
add
jmp
arpl
add
lock
lret
adc
jb
jl
imul
mov
jnp
push
les
sbb
or
lds
iret
sbb
push
xchg
subb
cmp
dec
pop
jecxz
push
in
xor
lret
jmp
jmp
inc
enter
es
sbb
aad
shr
sti
sahf
insl
mov
and
jmp
cmp
out
jmp
jge
mov
nop
hlt
jmp
sahf
insl
test
cltd
or
jnp
xchg
mov
ds
test
mov
jmp
xchg
add
bound
ret
push
lds
out
jg
jmp
adc
pop
jecxz
adc
sbb
push
lds
shlb
stos
movsb
ret
ds
pop
leave
test
fisubrs
adc
adcl
test
mov
inc
mov
imul
sbb
or
mov
jmp
push
scas
inc
pop
adcb
andb
insb
or
call
mov
jne
jmp
lahf
cmp
dec
push
xor
add
insl
test
pop
into
test
jmp
cltd
inc
repz
je
insb
pushf
pop
xchg
adc
pushf
push
pushf
sti
push
xor
sbb
mov
mov
and
or
mov
mov
and
out
jns
push
jmp
jo
jnp
in
dec
and
xor
cmp
cmp
add
jo
mov
mov
pop
repnz
roll
mov
in
ja
xorb
sbb
push
mov
cmp
dec
stos
das
mov
stos
cmp
dec
ss
jmp
pop
xor
pop
mov
mov
outsb
cld
fwait
jbe
mov
shl
jmp
sbb
aad
movb
push
jns
das
jmp
icebp
nop
arpl
cmp
or
iret
shlb
call
jmp
dec
fdivrs
pop
aas
lret
arpl
xchg
gs
inc
aam
dec
test
lret
pop
lea
jmp
ljmp
cmp
pop
adcb
andb
arpl
cmc
sbb
cmp
fstl
lods
pop
mov
or
or
pushf
sbb
imul
or
lcall
sahf
stc
or
nop
add
add
push
sahf
or
cmpsb
add
inc
and
adc
jb
xchg
pop
jmp
and
aas
lods
cmp
aam
sub
add
sbb
pop
jmp
push
mov
xlat
aas
movsb
cmp
sbb
mov
stc
imul
testb
add
add
jge
negl
iret
stos
pop
rolb
adc
imul
sti
push
ret
xchg
repz
call
sbb
adc
jmp
ret
push
lds
insl
ljmp
aas
pop
test
push
int
jmp
push
fstpt
ret
ret
in
sbb
add
std
mov
sbb
or
fstps
scas
pop
mov
or
mov
aad
int3
push
rcll
mov
jmp
sub
adc
lahf
punpckhdq
adc
adc
icebp
popa
jmp
sub
adc
mov
movsb
cmp
pop
scas
cmp
cmc
gs
push
rorb
jmp
xor
mov
test
pop
enter
aaa
call
xchg
int
cld
fwait
jbe
cld
jle
mov
push
mov
and
call
test
je
push
call
pop
mov
push
call
jmp
call
jmp
into
pop
cmp
jg
das
mov
call
xchg
setg
or
fs
jmp
in
aad
dec
lret
shlb
xor
or
loopne
add
sahf
or
cmpsb
inc
js
insb
or
out
inc
rclb
jmp
insb
loop
je
fstps
lea
jp
in
push
ds
cmp
in
fs
popf
insb
orb
sbb
outsl
insb
loope
adc
add
dec
fdivrl
sbb
fs
pop
int3
stos
data16
lahf
punpckhdq
dec
popa
cmp
in
jmp
xor
add
xchg
add
mov
jns
pusha
test
jecxz
push
mov
sbb
add
add
adc
sub
bound
or
cmpsb
psrld
add
in
fwait
add
testb
popa
call
dec
ror
dec
fistpll
movsb
nop
xlat
dec
push
mov
and
push
push
xor
mov
addl
mov
mov
cmp
je
cmp
jne
call
cmp
je
push
call
pop
mov
mov
addl
call
cmp
je
push
call
pop
mov
cmpl
jbe
push
call
pop
mov
mov
cmp
je
call
cmp
je
push
call
pop
mov
mov
cmp
je
call
cmp
je
push
call
pop
mov
mov
cmp
je
call
cmp
je
push
call
pop
mov
push
call
call
call
jmp
test
pop
test
dec
fimuls
or
add
adc
in
sbb
cmpsb
cmp
lea
jmp
and
lcall
adcb
subb
jmp
shlb
xchg
lret
push
lds
int3
aas
mov
xchg
out
fidivrl
pop
cmp
add
lock
bound
int
jno
xorb
sub
call
fs
adc
push
divl
xchg
pop
aad
sub
aas
mov
popl
lea
jae
xchg
xchg
sbb
fisttpl
dec
mov
adc
jo
jo
loop
push
lret
pop
ds
insl
add
mov
das
mov
pop
into
pop
cmp
cmp
outsb
cld
fwait
jbe
test
pop
sbb
mov
add
lahf
punpckhdq
jge
jmp
sbb
xor
jle
mov
and
push
inc
sbb
pop
jl
add
dec
roll
aad
ja
push
cld
sbb
stc
sbb
sbb
add
mov
bound
lock
bound
sub
jmp
mov
lret
mov
mov
test
sbb
ja
xorb
dec
ret
mov
mov
xchg
push
push
jmp
or
in
sbb
jecxz
jne
sbbl
out
sbb
jle
jmp
or
xchg
and
js
jo
loop
aas
movsb
cmp
sbb
ja
pop
or
pop
cmpsl
ret
test
mov
sbb
sbb
push
mov
jg
and
jmp
push
mov
psubd
cmp
mov
ret
addl
sub
jmp
pop
cmp
sub
dec
ret
mov
mov
js
pusha
mov
lret
int3
dec
fsubrp
sbb
sbb
je
addr16
fwait
or
cmp
push
lret
xchg
stos
push
jmp
and
nop
push
mov
es
pop
and
aaa
dec
rclb
sub
imul
jmp
pop
jp
jg
in
sbb
adc
les
int3
jg
jmp
jl
jne
outsb
lea
mov
mov
roll
aad
mov
cwtl
mov
mov
cmp
sbb
or
sbb
sahf
insl
ret
popa
add
inc
inc
in
sbb
push
add
mov
jmp
imul
fimull
fidivrl
movsl
xor
mov
jns
popa
lods
mov
jmp
and
fmuls
fdivs
push
aad
sub
xor
pushf
xor
inc
enter
inc
jmp
and
and
sbb
imul
insl
test
ret
push
lds
sub
inc
ds
lea
jmp
call
xchg
cmc
add
mov
mov
and
and
pop
jmp
call
xchg
adc
and
and
pop
dec
fdivl
in
jge
jle
call
adc
jmp
lock
aam
fisttpl
fnsave
xor
in
jmp
inc
and
or
aam
push
mov
js
ds
dec
ret
shr
rep
jmp
rclb
dec
sub
leave
test
mov
imul
repnz
lea
jb
in
dec
lret
lret
ljmp
stc
out
jo
push
sbb
cmc
push
mov
stc
movsb
xor
lock
bound
inc
adc
pop
cmp
aas
dec
ret
ret
mov
outsb
add
sbb
push
add
in
jge
divl
lea
mov
sbb
sti
insb
loop
je
inc
roll
sbb
mov
rorb
mov
ljmp
enter
sub
jmp
lds
iret
fs
mov
loope
adc
dec
mov
jmp
or
test
xor
imul
inc
jmp
inc
lcall
mov
es
cld
jns
mov
xchg
sbb
jmp
inc
aad
push
fisttps
flds
push
hlt
sub
fcoms
mov
jmp
xor
lcall
xor
mov
or
pop
lret
jmp
pushl
jne
mov
jle
sub
lcall
fs
sbb
gs
pushf
outsl
xchg
lods
call
jmp
movsb
ret
xlat
rcrl
stos
pop
test
jl
jne
and
mov
inc
into
pop
lea
jmp
mov
scas
leave
cmp
pop
xlat
inc
and
ss
fisttpll
out
mov
fbld
les
push
aaa
ret
fistpl
mov
jmp
test
jge
data16
arpl
cmc
sbb
stos
pop
push
xor
ds
sub
mov
mov
mov
fdivl
in
adc
jmp
add
pop
adc
pop
add
adc
pop
xchg
adc
add
add
ficomps
xchg
xchg
dec
sub
xor
jmp
adc
add
sarb
fisttps
repz
mov
mov
xchg
repnz
add
add
adc
negl
adc
or
jle
cmc
gs
pop
cmp
sbb
jnp
mov
adc
inc
roll
shll
enter
sbb
xchg
pop
bound
and
aas
fisttpll
mov
in
je
and
jmp
scas
pop
stos
mov
popf
adc
add
cmp
add
sub
jmp
adc
dec
es
xchg
or
ds
xor
and
jle
sbb
jp
outsb
or
sub
and
sbb
aad
lds
cmpsl
or
pop
hlt
cld
decl
push
mov
sti
push
decl
push
aaa
ret
hlt
cld
jmp
and
and
pop
je
push
jns
lea
jmp
pusha
sbb
fs
imul
adc
mov
fsubrp
sbb
popa
add
xor
int3
or
jo
ret
ret
sbb
jbe
loopne
es
push
lds
insl
std
test
sbb
sbbb
jmp
movsl
cmp
enter
popa
lret
push
les
inc
adc
pop
pop
add
sbb
outsl
xor
insb
in
jge
notl
xor
sbb
add
mov
and
cli
dec
int3
inc
and
into
test
pop
call
jmp
add
rcrb
test
jne
xchg
testb
push
mov
pop
xorl
cmp
loop
std
test
stc
imul
add
pop
push
repz
fmuls
fdivrs
in
bound
int3
stos
data16
in
arpl
xchg
mov
pop
cmp
jb
in
cmp
push
jmp
clc
std
sti
sahf
insl
aam
sub
jnp
mov
xchg
or
clc
std
cli
aam
in
jle
xchg
mov
adcl
test
nop
push
lea
jmp
pop
test
mov
gs
pushf
outsl
test
dec
fdivrl
sbb
pusha
xchg
xchg
lock
fsts
mov
out
mov
xlat
pop
int
addr16
jmp
add
add
and
mov
inc
mov
orb
sti
push
cmp
add
cmp
jae
in
icebp
notl
leave
pop
into
test
mov
and
xlat
inc
mov
stos
scas
loope
outsb
cld
jmp
pop
leave
test
clc
jo
xorl
cmp
in
bound
mov
jmp
mov
sub
repz
notb
sbb
xlat
mov
mov
jnp
in
or
fs
popf
insb
xchg
push
mov
shlb
push
popa
nop
popa
and
sub
test
inc
aam
jmp
push
push
pop
mov
jns
aas
adc
push
jns
and
xchg
jmp
mov
cmc
push
les
int
addr16
gs
pushf
outsl
mov
mov
jmp
add
push
xor
daa
pop
fdivl
in
out
adc
add
inc
xlat
mov
cmpsb
or
and
dec
fsubr
sub
jmp
int
and
push
or
inc
stc
jp
jp
and
lahf
push
mov
ds
daa
jmp
das
dec
int3
inc
and
movsb
ret
shlb
jo
loop
mov
sar
jbe
cmpl
adcb
orb
in
je
imul
inc
and
adc
cmp
adc
popa
add
add
mov
jmp
dec
jecxz
loope
jae
fwait
or
fdivl
in
das
mov
jmp
add
sarl
loopne
adc
adc
push
xor
jns
insl
mov
add
xor
add
xor
add
add
dec
xor
add
add
add
add
js
add
mov
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
sbb
add
xor
add
inc
xor
add
add
push
xor
add
add
js
add
xchg
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
insb
xor
add
add
test
add
mov
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
pop
xor
add
add
test
add
xchg
xor
add
xor
add
das
add
out
das
add
add
add
push
xor
add
xor
add
xor
add
add
adc
add
xor
add
xor
add
xor
add
xor
add
add
aas
dec
adc
adc
adc
add
add
arpl
gs
outsl
imul
add
inc
add
dec
add
dec
add
add
add
add
add
add
add
outsl
fs
outsl
imul
add
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
jb
js
je
jb
arpl
jae
add
jae
arpl
outsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
add
add
xor
xor
or
and
jo
imul
and
jae
insl
popa
fs
and
je
insl
jo
and
insb
outsl
popa
and
and
jb
outsb
je
insl
and
jb
jb
and
arpl
jb
arpl
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
add
add
xor
xor
je
gs
jo
and
jne
and
dec
dec
and
fs
outsl
insl
and
jae
popa
jae
gs
bound
fs
imul
imul
and
imul
je
outsl
outsb
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
and
and
and
jae
and
gs
jns
je
and
jae
insb
je
outsl
data16
insb
insb
imul
dec
push
dec
dec
sub
imul
insb
jb
and
outsb
arpl
outsb
and
outsl
insl
and
outsb
popa
je
jbe
and
outsb
jae
jb
arpl
and
and
outsl
insl
and
dec
popa
imul
push
xor
xor
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
arpl
and
outsw
jb
popa
je
outsl
outsb
or
add
add
xor
xor
je
gs
jo
and
imul
imul
and
push
and
jb
and
outsb
and
arpl
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
cs
xor
xor
push
push
and
je
imul
imul
add
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
push
push
jo
insb
imul
and
jae
jb
jno
gs
gs
and
outsb
je
insl
and
je
jb
imul
je
imul
outsb
jne
jne
insb
and
jns
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
jo
jb
and
je
insb
outsl
popa
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
adc
and
and
and
and
and
and
and
and
and
sub
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
jnp
jge
jg
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
add
add
je
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
inc
push
xor
cs
dec
dec
add
push
jne
dec
outsl
outsb
push
jne
push
gs
push
push
popa
je
add
dec
popa
outsb
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
jl
clc
cltd
ja
out
lea
testb
imul
outsl
outsl
ficoms
xchg
push
xor
pusha
add
add
test
sub
push
sbb
out
xlat
xlat
mov
stos
stos
dec
lcall
popf
addb
xchg
cli
adc
pop
pop
mov
inc
inc
mov
lock
in
lods
lods
inc
addr16
mov
mov
scas
inc
mov
movsb
movsb
push
xchg
jb
in
rol
ret
jne
std
std
loope
xchg
xchg
cmp
pop
ss
inc
aas
aas
jle
div
cmc
dec
int3
int3
sbbl
hlt
movsl
movsl
push
xor
in
or
icebp
stc
xchg
jno
loop
fcomp
stos
push
xor
bound
adc
add
push
mov
inc
pop
ret
ret
popf
sub
sbb
mov
add
lcall
adc
and
addb
es
int
daa
daa
dec
int
mov
lahf
jne
ljmp
sbbl
sbb
xor
sbb
ss
outsb
fsubr
pop
pop
mov
mov
push
movsb
dec
cmp
jbe
mov
mov
jge
sub
push
jecxz,pt
fnsave
das
pop
xchg
test
push
add
add
and
cld
cld
jecxz
mov
jns
pop
pop
mov
push
aam
lret
lret
fnstcw
cmp
dec
dec
xchg
aam
dec
cwtl
call
iret
iret
test
sarb
in
stos
dec
push
sti
sti
in
lds
xchg
dec
dec
lcall
test
iret
inc
inc
mov
stc
stc
jmp
cmpl
mov
mov
test
dec
repz
push
mov
rolb
mov
xchg
aas
mov
cmp
jo
cmc
cmc
icebp
fistpll
ja
fcmovu
scas
arpl
and
adc
and
jmp
push
repz
insl
rcl
mov
adc
or
xor
in
in
ret
loope
pop
mov
int3
inc
inc
mov
pop
pop
cs
les
cmpb
inc
cmp
fs
mov
xchg
jae
out
pusha
pusha
rcrb
dec
sahf
jg
fsubl
jle
sub
nop
cmp
inc
inc
mov
out
out
sarl
adc
jns
fisubs
sbb
fcmovnu
lods
cmp
loopne
push
xor
fs
cmp
je
or
adc
dec
dec
xchg
or
push
or
and
dec
in
pop
mov
outsb
rcl
mov
cmpsb
bound
test
xchg
cmp
in
mov
repnz
out
inc
enter
aaa
aaa
outsb
mov
insl
fimull
aad
rorb
pushf
loopne
test
fdivr
push
push
lods
pop
hlt
hlt
repz
gs
jp
jmp
or
adc
mov
js
outsl
and
cs
and
sbb
icebp
cmpsb
cmpsb
push
mov
jae
mov
and
call
mov
and
pop
fisttpll
xchg
fdivrl
mov
nop
jo
loopne
ds
mov
jno
data16
fmuls
nop
add
div
notl
push
push
sbb
popa
popa
ret
xor
scas
sarb
xchg
pop
rol
daa
sbb
sahf
daa
cmp
loope
adc
clc
jmp
cwtl
cwtl
sub
adc
and
test
cmpsl
xchg
xchg
xor
push
push
cmp
xchg
leave
dec
into
into
xchg
push
push
stos
js
sub
movsl
mov
orb
sbb
mov
out
movb
mov
inc
inc
xorb
sub
push
lret
mov
jnp
push
push
test
mov
push
sub
arpl
movsl
jl
clc
test
out
cltd
jnp
testb
imul
outsl
outsl
fidivs
xor
pusha
push
add
add
addr16
test
out
xlat
xlat
mov
stos
stos
dec
out
jbe
lcall
pop
popf
leave
leave
mov
jge
xchg
cli
out
adc
inc
inc
mov
lock
or
aam
addr16
std
scas
scas
inc
ljmp
push
divl
in
rol
pop
mov
jne
std
std
loope
xchg
xchg
cmp
push
ss
pop
aas
aas
jle
div
cmc
add
int3
orl
push
hlt
in
shll
icebp
stc
or
loop
fcomp
stos
jae
xor
adc
add
or
xchg
push
and
inc
gs
ret
popf
pop
sbb
xor
xchg
xchg
aaa
mov
lcall
or
adc
addb
cmp
daa
daa
dec
imul
or
sbb
sub
je
sbb
sbb
ss
pop
pop
mov
mov
push
movsb
idivb
cmp
mov
mov
jge
sub
push
jnp
jecxz
ds
das
pop
jno
test
xchg
push
push
cmpsb
cmc
rcl
mov
add
in
shrl
inc
pusha
cld
cld
jecxz
mov
jns
pop
pop
mov
push
aam
lret
lret
lea
mov
jb
dec
dec
xchg
fimuls
aam
pop
mov
iret
iret
test
sarb
sub
sti
in
push
inc
inc
xchg
dec
dec
lcall
test
xchg
inc
inc
mov
stc
stc
jmp
push
jg
incb
cmp
js
lahf
lahf
and
jecxz
push
mov
incb
add
popl
lods
popf
popf
and
cmc
icebp
add
mov
ja
fcmovu
scas
jne
and
adc
and
jmp
sbb
repz
push
rcl
mov
dec
or
sbb
adc
xor
pop
pop
mov
mov
pop
pop
cs
les
bnd
cld
cmpb
enter
mov
sub
out
pusha
pusha
shlb
dec
sahf
rcr
fsubl
data16
push
jle
nop
cmp
inc
inc
mov
out
out
sub
adc
cmp
fisubs
loop
or
sbb
loopne
fstpt
xor
fs
cmp
je
or
adc
dec
dec
xchg
fildl
push
or
and
dec
insb
pop
pop
mov
pop
rcl
mov
out
bound
cmpsb
xchg
xchg
cmp
in
shll
jns
repnz
out
xor
enter
aaa
outsb
pop
insl
insl
fidivl
aad
mov
dec
dec
pushf
shrb
insb
fdivs
hlt
repz
ljmp
scas
jp
hlt
mov
or
sbb
js
mov
cs
jb
sbb
and
cmpsb
push
icebp
mov
jae
mov
push
call
frstor
pushf
pop
pop
and
xchg
fnstsw
mov
test
loopne
ds
mov
jno
data16
stos
dec
dec
nop
fadds
add
add
push
push
sbb
popa
popa
ret
xor
scas
stc
mov
xchg
xchg
rol
pop
sbb
sahf
daa
mov
clc
clc
jmp
cwtl
cwtl
sub
imul
jo
mov
mov
sub
and
jmp
xchg
push
stos
ljmp
sub
movsl
jp
mov
mov
mov
orb
gs
out
xor
test
push
inc
add
cltd
sub
nopl
mov
jnp
push
push
test
mov
push
sub
arpl
movsl
arpl
jl
out
cltd
ja
testb
imul
imul
outsl
lds
push
xor
add
add
test
sub
out
xlat
mov
xlat
stos
dec
out
jbe
lcall
pop
popf
or
inc
leave
jge
xchg
out
adc
pop
inc
mov
inc
lock
or
lods
inc
in
lods
aam
addr16
pop
std
mov
pushf
and
movsb
jb
xchg
jb
fwait
pop
shlb
sbb
xchg
cmp
push
ss
pop
ss
jle
aas
div
add
int3
orl
push
hlt
movsl
in
xor
icebp
stc
or
jno
xchg
jno
stos
jae
xor
xor
or
xchg
push
and
and
popf
pop
ret
sbb
sub
xchg
aaa
mov
add
pop
push
or
adc
adc
fistpll
jmp
dec
imul
jne
lahf
jne
adc
or
pop
je
sbb
sbb
ss
outsb
pop
mov
pop
mov
movsb
notb
jbe
cmp
mov
mov
into
mov
push
jnp
jecxz
jecxz,pt
pop
jno
test
xchg
test
cmc
push
sarl
add
in
shrl
jecxz
cld
mov
enter
in
pop
push
mov
lret
mov
jb
cmp
fimuls
cwtl
aam
pop
mov
pop
iret
test
sarb
sub
stos
dec
in
sti
in
push
sti
inc
xchg
inc
dec
lcall
test
xchg
test
iret
inc
stc
jmp
push
add
cmpl
js
cmp
and
jecxz
push
mov
mov
popl
lods
xchg
popf
and
cmc
icebp
add
mov
ja
mov
scas
jne
and
and
and
adc
in
push
std
push
repz
dec
int
sbb
adc
xor
in
pop
mov
mov
inc
pop
cmp
les
repnz
jle
cmpb
inc
cmp
pop
mov
sub
jae
xchg
jae
shlb
dec
sahf
rorl
mov
data16
push
jle
nop
cmp
mov
lret
sub
mov
sub
fisubs
loop
or
sbb
fneni(8087
fstpt
loopne
fs
xor
je
cmp
adc
or
fisttpl
or
push
and
insb
and
mov
pop
ret
outsb
shrl
cmpsb
bound
xor
jns
mov
aad
out
mov
aaa
outsb
pop
aaa
insl
fidivl
aad
fs
pushf
rorb
dec
loopne
insb
fdivs
hlt
repz
hlt
ljmp
gs
mov
inc
jmp
or
lock
dec
outsl
and
sbb
and
cmpsb
push
icebp
cmpsb
mov
mov
xchg
push
call
mov
pushf
je
and
dec
xchg
fisttpll
popa
fdivrl
mov
test
jl,pt
ds
les
dec
nop
fmuls
push
add
testb
adc
popa
ret
xor
scas
stc
push
mov
pop
xchg
xchg
cltd
pop
rcrl
mov
loope
jmp
clc
cwtl
sub
adc
mov
xor
fwait
push
cmp
push
xchg
and
into
xchg
push
stos
call
push
js
fbld
mov
or
or
out
xor
inc
test
inc
push
add
cltd
sub
sub
mov
lret
mov
test
push
mov
sub
push
movsl
arpl
test
cltd
ja
testb
repnz
mov
outsl
outsl
xchg
push
vpunpcklbw
xor
add
add
test
sub
out
mov
xlat
xlat
dec
out
stos
in
lcall
pop
popf
addb
xchg
out
adc
pop
pop
mov
inc
inc
sti
or
lock
in
lods
lods
mov
aam
pop
std
mov
scas
and
movsb
movsb
in
jb
fwait
pop
rol
ret
loope
std
std
cmp
push
es
pop
ss
aas
aas
cmc
add
testl
hlt
movsl
movsl
shll
icebp
loop
jno
stos
jae
fsubs
xor
sub
adc
add
push
mov
popf
pop
ret
ret
xor
sbb
aaa
mov
add
lcall
adc
sbb
loop
int
jmp
dec
imul
mov
lahf
jne
adc
or
sbb
je
sub
sbb
ss
outsb
outsb
mov
pop
pop
pop
sti
mov
push
jbe
cmp
mov
jge
mov
push
jnp
sub
jecxz,pt
pop
jno
das
adc
push
push
mov
add
add
sub
in
inc
pusha
and
jecxz
cld
cld
jns
mov
mov
pop
pop
aam
push
lea
lret
fnstcw
dec
cmp
xchg
fimuls
cwtl
aam
dec
mov
pop
pop
test
iret
mov
sub
out
dec
in
stos
in
push
sti
sti
xchg
inc
inc
lcall
xor
xchg
test
jmp
push
add
incb
push
push
js
cmp
and
jecxz
test
repz
push
pop
mov
inc
add
lods
xchg
xchg
and
cmp
add
cmc
arpl
mov
mov
jne
fiaddl
and
and
adc
in
std
push
repz
dec
int
sbb
or
xor
in
in
mov
mov
inc
inc
cmp
pop
xchg
push
les
cmpsl
cmpsl
cld
cmpb
inc
cmp
fs
sub
sbb
xchg
jae
shlb
sbbl
data16
push
jle
sub
stos
nop
nop
or
inc
inc
sub
out
imul
mov
cmpsl
jns
fidivrs
or
lods
jbe
fcmovnu
cmp
loopne
push
xor
je
cmp
adc
or
xchg
fisttpl
or
push
push
dec
insb
and
mov
pop
ret
outsb
rcl
inc
out
lods
lods
les
xchg
xchg
xor
in
mov
aad
out
mov
enter
aaa
fidivl
lea
pushf
rorb
dec
loopne
test
lods
cli
push
push
repz
hlt
hlt
iret
and
gs
mov
inc
jmp
or
outsl
aad
mov
dec
outsl
and
cmp
sbb
icebp
cmpsb
cmpsb
jae
mov
xchg
push
mov
and
call
call
and
pop
xchg
fisttpll
popa
fdivrl
mov
test
jo
inc
ds
mov
int3
stos
data16
fmuls
push
add
div
sbb
push
push
ret
popa
push
xor
push
imul
xchg
cmp
sbb
sahf
fnstcw
loope
jmp
clc
clc
sub
adc
sarb
pop
mov
xchg
sub
and
push
adc
and
jmp
stos
call
push
js
sub
mov
orb
fidivrl
out
movb
mov
inc
inc
sub
sub
lret
mov
test
push
push
insl
mov
push
arpl
arpl
jl
ja
ja
jnp
jnp
repnz
outsl
outsl
outsl
outsl
lds
xor
xor
add
add
addr16
sub
xlat
xlat
xlat
xlat
stos
stos
stos
stos
jbe
jbe
lret
lret
addb
jge
jge
cli
cli
cli
pop
pop
pop
pop
inc
inc
inc
inc
lock
lods
lods
lods
aam
aam
mov
scas
scas
scas
pushf
pushf
pushf
pushf
movsb
movsb
movsb
movsb
jb
jb
rol
shlb
std
std
xchg
xchg
xchg
xchg
es
aas
aas
aas
div
div
int3
int3
int3
int3
xor
xor
movsl
movsl
movsl
movsl
in
in
icebp
icebp
icebp
icebp
jno
jno
fcomp
fcomp
xor
xor
adc
add
add
mov
and
ret
ret
ret
sbb
sbb
xchg
xchg
xchg
xchg
add
lcall
adc
adc
addb
loop
jmp
jmp
daa
daa
daa
mov
mov
jne
jne
or
or
addl
sub
sbb
sbb
sbb
sbb
outsb
outsb
pop
pop
pop
pop
mov
push
push
push
cmp
cmp
mov
mov
sub
sub
jecxz
jecxz
das
das
das
das
test
push
rcl
rcl
add
add
in
in
in
in
and
and
cld
cld
cld
cld
mov
mov
pop
pop
pop
pop
push
push
lret
lret
lret
lret
mov
cmp
cmp
dec
dec
dec
dec
dec
dec
pop
pop
pop
pop
iret
iret
iret
iret
rcl
rcl
out
out
out
out
stos
stos
stos
stos
sti
sti
sti
sti
inc
inc
inc
inc
dec
dec
dec
dec
xor
xor
test
inc
inc
stc
stc
stc
stc
add
add
jg
jg
push
push
push
push
cmp
cmp
lahf
lahf
lahf
lahf
test
test
push
push
push
push
mov
inc
inc
inc
xchg
xchg
xchg
xchg
popf
popf
popf
popf
cmp
cmp
cmc
cmc
cmc
cmc
mov
mov
mov
fcmovu
fisubl
and
and
adc
adc
push
repz
rcl
int
int
or
or
adc
adc
in
in
in
in
pop
pop
pop
pop
xchg
xchg
xchg
xchg
inc
inc
inc
inc
pop
pop
pop
pop
les
jle
jle
cmp
fs
pop
pop
pop
sbb
sbb
jae
jae
pusha
pusha
pusha
pusha
addl
and
and
sub
sub
nop
nop
nop
nop
mov
inc
inc
out
out
out
out
mov
adc
adc
ficomps
pop
pop
or
or
fcmovnu
fcmovnu
loopne
loopne
xor
xor
cmp
cmp
or
or
dec
dec
dec
dec
push
push
push
push
and
and
pop
pop
pop
pop
ret
ret
rcl
lods
lods
lods
lods
bound
bound
xchg
xchg
xchg
in
in
jns
jns
out
out
enter
aaa
aaa
aaa
aaa
insl
insl
insl
insl
lea
aad
dec
dec
dec
dec
test
insb
insb
insb
push
push
push
push
hlt
hlt
hlt
hlt
ljmp
gs
jp
scas
scas
scas
scas
or
or
mov
js
js
and
cs
sbb
cmpsb
cmpsb
cmpsb
cmpsb
mov
mov
mov
call
fstp
fnsave
je
pop
pop
pop
dec
dec
dec
dec
mov
mov
mov
jo
ds
mov
data16
dec
dec
dec
add
add
div
div
push
push
push
push
popa
popa
popa
popa
xor
push
push
push
mov
xchg
rcrl
sahf
sahf
loope
loope
clc
clc
clc
clc
cwtl
cwtl
cwtl
cwtl
adc
adc
imul
xchg
xchg
xchg
fwait
fwait
fwait
fwait
push
push
push
push
xchg
jmp
into
push
push
push
push
sub
sub
mov
mov
or
mov
out
inc
inc
inc
inc
push
inc
inc
inc
cltd
cltd
cltd
cltd
sub
pfcmpeq
mov
mov
push
push
push
mov
push
push
push
push
cmpsl
hlt
push
push
gs
jle
movsb
pop
sbb
imul
stos
pop
cli
lods
xchg
add
dec
push
cli
xor
imulb
lods
xchg
jbe
mov
xlat
in
xlat
lret
sub
addb
mov
mov
sbb
push
ljmp
jne
ret
adc
dec
andl
pop
popl
xchg
pushf
xchg
adc
ficompl
xchg
sub
and
imul
mov
ret
jns
hlt
imul
cltd
fnsave
daa
mov
loope
pop
lods
mov
data16
and
mov
into
jge
dec
fbld
xor
in
xor
inc
jg
loopne
fs
scas
imul
sub
stc
pop
push
inc
popl
clc
jnp
and
jae
loop
dec
jb
pop
jecxz
stos
push
popw
sub
mov
ret
lcall
shl
xchg
xor
push
add
in
sub
mov
repnz
repz
hlt
fisubl
mov
xor
mov
cmpsb
les
push
repz
jne
mulb
out
pusha
inc
push
lahf
jno
push
adc
stc
mov
ds
add
out
mov
push
xchg
add
aam
add
adc
cwtl
sbb
inc
inc
mov
fldenv
inc
call
pop
cmp
out
out
enter
jl
jmp
push
test
add
add
addl
xor
pop
insb
sti
decl
std
push
cmp
cmp
or
cmpsb
pop
push
cmp
ss
or
movntq
rclb
fwait
sbb
rolb
dec
ja
push
sbb
sbb
mov
mov
cmp
pop
sbb
or
mov
mov
test
icebp
push
dec
pop
jne
mov
pusha
jg
lahf
es
mov
cmp
xor
sti
pop
jbe
inc
mov
and
push
icebp
in
lret
xlat
adc
xchg
adc
adc
test
dec
test
cmp
stc
scas
insl
mov
sahf
sbb
in
push
xchg
insb
push
mov
cltd
mov
xchg
adc
fs
test
aas
lock
out
nop
xor
dec
dec
xchg
sarl
fsin
mov
aam
iret
xor
movsl
mov
aas
in
cmp
int3
pop
push
inc
jle
ret
imul
mov
cmp
cmc
scas
ret
cmpb
shrb
sub
and
enter
adc
pushf
call
or
int
sbb
add
dec
andl
out
out
stos
or
mov
out
fstps
outsl
dec
aam
lahf
ljmp
movsb
xor
and
sub
xchg
movsl
mov
mov
je
lret
mov
nop
loopne
fsubs
icebp
neg
in
inc
push
push
int
das
notb
jbe
mov
inc
push
dec
stos
int3
filds
in
mov
sahf
sbb
sub
jg
gs
add
pop
popf
pop
xor
xchg
cs
or
pop
sbb
fistl
adc
insl
mov
lcall
clc
pop
mov
jmp
daa
test
mov
in
loope
mov
jp
pushf
aas
jae
push
jns
adc
mov
int
push
pop
stos
std
pop
adc
cmp
js
repz
lret
push
cmp
mov
push
or
loop
mov
sub
or
cmp
mov
or
push
fs
test
jnp
mov
aad
pop
insb
dec
inc
push
mov
push
gs
jle
movsb
pop
sbb
pop
daa
cmp
inc
popf
pop
icebp
pop
cli
lods
stos
add
dec
xchg
cli
xor
push
insl
jbe
divb
mov
xlat
in
cld
lret
sub
xlat
inc
xor
mov
pop
mov
dec
sbb
inc
cwtl
sar
loope
das
ret
add
dec
adcl
stc
shrl
pop
popl
out
xchg
adc
jmp
push
xchg
fiaddl
je
shrl
dec
sub
leave
mov
jne
jns
hlt
js
pop
cltd
imul
fisttpll
mov
pop
lods
and
data16
jge
dec
fbld
xor
in
xor
pusha
jg
bound
fs
scas
imul
sub
stc
xchg
push
inc
sbb
xchg
jnp
mov
jae
and
dec
jb
pop
jecxz
stos
push
data16
jmp
pop
ret
add
xchg
xchg
xor
movsl
mov
add
sbb
mov
mov
cmpsl
xchg
repnz
repz
dec
mov
mov
xor
pop
cmpsb
les
push
repz
xor
mulb
out
pusha
inc
stos
lahf
jno
push
adc
push
mov
ds
push
fstl
scas
mov
push
xchg
mov
les
aam
add
adc
cwtl
sbb
mov
mov
sahf
fldenv
inc
call
pop
mov
out
out
enter
jl
inc
cmovb
test
leave
add
add
xchg
xor
adc
lods
jb
insb
dec
decl
std
sti
cmp
cmp
daa
or
push
shrl
ss
or
mov
push
xchg
setbe
mov
xchg
fwait
sbb
and
popa
mov
sbb
sbb
mov
mov
cmp
pop
sbb
sbb
mov
lods
test
sub
enter
test
jne
dec
fstpl
mov
lahf
cmc
jb
mov
jle
pop
xor
inc
mov
and
fdivr
in
mov
icebp
in
arpl
xor
lret
inc
adc
xchg
adc
movb
mov
scas
adc
sahf
sbb
repz
xchg
rclb
mov
insb
mov
xchg
adc
fs
test
aas
lock
fcoms
dec
xchg
sarl
fld
mov
aam
ss
movsl
sub
lods
aas
movsb
popf
cmp
xchg
js
or
inc
jle
bound
test
fcoms
pop
scas
ret
xor
pop
lahf
mov
sub
and
enter
adc
mov
es
sbb
hlt
mov
in
add
xchg
out
out
stos
jle
mov
out
out
out
fnstenv
outsl
dec
into
or
sub
mov
xor
xchg
movsl
xor
xor
aaa
lret
cmpsb
rclb
xor
inc
notl
jg
notb
jbe
mov
inc
dec
dec
stos
int3
push
add
in
mov
sahf
jecxz
push
sbb
sub
mov
ljmp
pop
je
cli
jae
or
cs
fistl
xor
insl
adc
lcall
clc
pop
mov
jmp
daa
test
mov
in
loope
mov
jp
pushf
pop
jae
push
aas
into
adc
jns
jae
int
push
ljmp
fists
inc
js
repz
lret
push
cmp
mov
push
jb
loop
or
cmp
mov
test
jno
or
fsubp
mov
pushf
rcll
test
jnp
mov
aad
pop
insb
dec
je
mov
push
cmpsl
inc
jle
gs
sbb
movsb
daa
cmp
imul
stos
pop
jecxz
xchg
add
and
jbe
imulb
mov
dec
in
cld
xlat
sub
xlat
lret
xor
mov
mov
mov
inc
cwtl
push
pop
loope
das
ret
add
adcl
xchg
shrl
stc
popl
out
xchg
adc
jmp
push
xchg
ficompl
aam
xorl
loopne
sub
mov
jne
mov
cltd
imul
daa
fnsave
mov
pop
lods
and
data16
into
jge
cmp
arpl
dec
sbb
xorb
xchg
pusha
xor
inc
jg
mov
ja
mov
sbb
or
xchg
sub
pop
push
ficoms
clc
jae
and
dec
jb
add
jecxz
push
data16
mov
add
lds
movsl
or
xor
xchg
add
or
sub
cmpsl
xchg
mov
repz
hlt
add
rcrl
bound
xor
push
repz
xor
mulb
in
pusha
inc
stos
out
jno
push
lahf
outsb
mov
stc
mov
xchg
cmp
add
push
xchg
mov
les
pop
push
add
aam
pusha
call
mov
mov
inc
fldenv
sahf
call
pop
mov
enter
jl
inc
or
jmp
push
add
add
orb
xchg
xor
adc
lods
jo
insb
dec
jb
std
sti
incl
cmp
daa
cmp
or
push
rcll
cmp
or
addr16
xchg
movntq
out
mov
xchg
fwait
sbb
mov
dec
adc
sbb
shl
and
loopne
adc
or
mov
mov
test
jne
dec
pop
cltd
out
mov
pusha
add
lahf
es
mov
cmp
pop
xor
inc
mov
and
fadd
in
mov
cld
in
arpl
xor
lret
inc
adc
movb
mov
scas
adc
sub
insl
mov
mov
repz
ja
jecxz
sub
test
cli
dec
jmp
test
mov
mov
fsubrs
and
nop
dec
xchg
dec
cmp
rcl
mov
mov
cmc
cmpsb
iret
cmpl
mov
sub
popf
js
or
int3
jle
bound
test
fcoms
pop
test
lahf
mov
xchg
aad
test
adc
cmpsl
jge
call
jnp
es
js
outsb
hlt
sbb
subl
ljmp
or
adc
mov
into
ss
ljmp
movsb
xor
and
xor
aaa
mov
nop
loopne
shlb
icebp
dec
cwtl
in
inc
neg
int
push
push
xchg
pop
das
testb
out
inc
dec
mov
int3
push
dec
xchg
in
add
sahf
jecxz
push
sbb
gs
jg
pop
popf
add
mov
pop
xor
or
cs
addr16
sbb
adc
xor
insl
adc
lcall
clc
pop
mov
jmp
cmp
into
out
daa
popa
mov
leave
sbb
in
in
jp
mov
pushf
pop
fcomip
push
aas
jae
sbb
jae
aaa
notl
int
pop
pop
stos
cmp
js
fldt
mov
sub
mov
push
jb
loop
or
cmp
mov
incl
test
jno
or
fidivs
push
fs
ror
popa
test
aad
mov
dec
je
mov
push
cmpsl
hlt
jle
gs
sbb
movsb
pop
cmp
imul
stos
pop
cli
dec
xchg
add
and
xor
xchg
jbe
cmc
and
xlat
in
xlat
lret
sub
addb
mov
mov
sbb
push
ljmp
jne
adcl
xchg
inc
imul
roll
out
adc
jmp
insl
xchg
ficompl
aam
cmpl
sub
mov
jne
mov
hlt
js
mov
fnsave
mov
pop
lods
mov
data16
and
cmp
arpl
dec
xorb
xchg
pusha
xor
inc
jg
mov
ja
mov
sbb
cmp
pop
push
inc
xchg
xchg
mov
jnp
and
jae
loop
dec
jecxz
pop
data16
jmp
add
mov
lcall
xor
xchg
and
push
in
pop
adcb
sub
cmpsl
xchg
mov
repz
dec
mov
hlt
fiaddl
aad
add
les
push
mov
xor
mov
in
addl
pusha
pop
push
lahf
jno
push
adc
stc
mov
xchg
cmp
add
out
mov
push
jno
pop
les
aam
pusha
call
cwtl
xchg
jmp
inc
addr16
fnstenv
mov
sbb
out
enter
jl
jmp
push
test
add
add
addl
push
lods
jo
insb
dec
jb
std
sti
decl
orps
test
daa
cmp
push
rcll
cmp
ss
or
push
mov
xchg
out
sbb
mov
dec
ja
push
sbb
loop
mov
mov
adc
or
mov
enter
test
icebp
scas
dec
pop
jne
mov
pusha
jg
lahf
add
jb
lds
pop
xor
sti
mov
inc
lret
fadd
and
arpl
in
lret
inc
adc
xchg
test
adc
test
dec
sar
cmp
stc
insl
mov
sahf
fdiv
xor
ja
jecxz
sub
test
cli
dec
xchg
inc
and
les
push
fsubrs
xchg
dec
dec
fld
sarl
mov
mov
aam
iret
xor
fisubl
mov
sub
popf
cmp
xchg
js
fwait
int3
pop
push
bound
test
lea
pop
idivl
xor
ret
lahf
mov
xchg
shrb
sub
and
adc
arpl
or
outsb
hlt
sbb
add
dec
out
outsb
xchg
stos
jle
jmp
or
mov
mov
into
outsl
ljmp
mov
scas
mov
sub
and
xor
je
mov
and
rclb
icebp
dec
cwtl
add
neg
in
jg
push
int
das
notb
inc
dec
mov
int3
push
dec
stos
in
add
sahf
jecxz
rorl
push
mov
push
gs
add
pop
add
mov
jae
xchg
cs
or
push
rcr
jmp
adc
lcall
mov
jmp
cmp
into
out
daa
test
loope
in
jp
mov
pushf
pop
push
aas
jae
sbb
adc
mov
int
pop
pop
stos
std
fists
cmp
lret
scas
mov
sub
and
pop
inc
mov
mov
mov
incl
or
or
mov
fcomps
push
jnp
test
aad
mov
dec
je
insb
rolb
mov
or
or
push
push
aad
aad
xor
xor
ss
movsl
movsl
movsl
cmp
cmp
mov
inc
inc
inc
mov
sahf
sahf
sahf
addl
xlat
xlat
sti
sti
sti
sti
jl
jl
jecxz
jecxz
cmp
cmp
addb
fwait
das
das
das
das
incl
xor
xor
mov
inc
inc
inc
inc
inc
jmp
lret
lret
lret
push
push
push
push
jnp
jnp
xchg
xchg
xchg
xchg
xor
xor
cmpsb
cmpsb
cmpsb
cmpsb
ret
ret
and
cmp
out
out
out
dec
dec
dec
dec
xchg
xchg
xchg
xchg
or
or
inc
inc
inc
inc
cli
cli
cli
cli
ret
ret
ret
ret
dec
dec
dec
dec
or
or
cs
data16
sub
and
and
mov
mov
jbe
jbe
pop
pop
pop
pop
mov
dec
dec
dec
insl
insl
insl
insl
mov
rcl
and
jb
jb
clc
clc
clc
div
div
fs
push
cwtl
push
push
push
push
aam
aam
movsb
movsb
movsb
movsb
pop
pop
pop
pop
int3
int3
int3
int3
pop
pop
pop
pop
gs
mov
xchg
xchg
xchg
xchg
insb
insb
insb
insb
jo
jo
dec
dec
dec
dec
push
push
push
push
std
std
std
std
in
in
in
in
mov
fcmovu
ficompl
pop
pop
adc
inc
inc
inc
push
push
push
push
cmpsl
cmpsl
cmpsl
cmpsl
lea
popf
popf
test
nop
fcomp
fcomp
stos
stos
stos
stos
add
add
mov
mov
or
or
div
div
in
in
pop
pop
pop
pop
add
mov
mov
inc
inc
inc
inc
push
push
push
push
rcl
rcl
sub
sub
push
push
push
push
lret
aas
aas
lar
add
rol
shrl
mov
add
add
add
adc
adc
imul
cmp
cmp
adc
adc
inc
inc
dec
dec
dec
dec
addr16
ljmp
xchg
repnz
iret
iret
iret
into
into
into
into
lock
mov
out
out
jae
jae
xchg
xchg
xchg
xchg
lods
lods
lods
lods
je
je
and
and
out
out
lods
lods
lods
lods
xor
test
loop
stc
stc
stc
aaa
aaa
aaa
aaa
call
sbb
sbb
jne
jne
fildll
outsb
outsb
inc
inc
inc
inc
icebp
icebp
icebp
icebp
sbb
sbb
jno
jno
sbb
sub
sub
mov
outsl
outsl
mov
mov
bound
bound
push
push
push
stos
stos
stos
stos
sbb
sbb
mov
sbb
sbb
cld
cld
cld
push
push
push
push
ds
dec
dec
dec
mov
rcl
rcl
jns
jns
and
and
lcall
fcmovnb
rol
js
js
int
int
pop
pop
pop
pop
hlt
hlt
hlt
hlt
pop
pop
pop
pop
fstp
fstp
test
test
xor
xor
mov
pop
pop
mov
xor
mov
mov
adc
adc
adc
adc
pop
pop
pop
pop
daa
daa
daa
daa
addb
in
pop
pop
pop
pop
pusha
pusha
pusha
pusha
push
push
push
push
jg
jg
test
sbb
sbb
dec
dec
dec
or
sub
in
jp
jp
lahf
lahf
lahf
lahf
xchg
xchg
xchg
xchg
leave
leave
leave
leave
pushf
pushf
pushf
pushf
out
out
out
out
mov
loopne
loopne
cmp
cmp
dec
dec
scas
scas
scas
scas
sub
sub
cmc
cmc
cmc
cmc
mov
mov
enter
jmp
jmp
mov
cmp
cmp
addl
cltd
cltd
cltd
cltd
popa
popa
popa
popa
pop
pop
pop
pop
sub
sub
add
add
jle
jle
mov
ja
ja
es
loope
imul
adc
arpl
push
push
push
push
and
and
or
or
jge
jge
add
add
add
add
add
add
add
or
add
adc
add
and
add
inc
add
add
add
add
pop
add
add
add
jns
jae
imul
insb
add
add
jbe
add
add
push
inc
push
inc
push
inc
pop
inc
inc
push
inc
push
dec
push
push
dec
dec
dec
pop
push
jns
je
insl
add
jae
gs
inc
imul
imul
dec
inc
push
push
inc
push
inc
pop
inc
insb
popa
jae
gs
dec
outsb
je
jb
popa
arpl
add
add
sub
add
add
add
add
add
dec
gs
gs
inc
popa
jae
cs
insb
add
dec
gs
gs
inc
popa
jae
cs
insb
add
add
add
dec
add
add
cmp
adc
add
add
sub
add
insl
add
incl
add
add
incl
add
add
incl
add
add
adc
incl
add
add
adc
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
sub
adc
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
add
call
xchg
push
adc
xchg
push
adc
add
add
incl
add
add
incl
add
add
incl
add
add
adc
add
add
incl
add
add
incl
add
add
incl
add
add
adc
add
add
incl
add
add
incl
add
add
incl
add
add
inc
adc
add
add
incl
add
add
incl
add
add
incl
add
add
dec
adc
add
add
incl
add
add
incl
add
add
incl
add
add
adc
add
add
incl
add
add
incl
add
add
incl
add
add
push
adc
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
adc
add
add
incl
add
add
incl
add
add
lcall
cli
push
adc
add
add
incl
add
add
incl
add
add
ljmp
pop
adc
sub
add
add
incl
add
add
incl
add
add
incl
add
add
pop
adc
add
add
incl
add
add
incl
add
add
ljmp
push
adc
push
adc
add
add
incl
add
add
incl
add
add
cli
push
adc
add
add
incl
add
add
incl
add
add
incl
add
add
add
into
das
add
sbb
add
shrb
add
xor
add
lock
mov
add
add
add
add
xor
add
icebp
add
mov
add
add
add
add
add
ds
add
xor
add
add
dec
xor
add
add
add
add
js
add
mov
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
sbb
add
xor
add
inc
xor
add
add
push
xor
add
add
js
add
xchg
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
insb
xor
add
add
test
add
mov
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
pop
xor
add
add
test
add
xchg
xor
add
xor
add
das
add
out
das
add
add
add
push
xor
add
xor
add
xor
add
add
adc
add
xor
add
xor
add
xor
add
xor
add
add
add
add
aas
add
je
fs
jo
gs
dec
outsb
outsw
add
dec
dec
push
inc
push
dec
cs
dec
dec
add
fldl
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
je
jne
jb
outsb
je
push
dec
add
xchg
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
push
gs
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
roll
fs
gs
js
gs
imul
gs
add
push
outsb
push
gs
js
gs
imul
gs
add
dec
jae
bound
addr16
jb
jae
outsb
je
sbb
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
je
jb
arpl
fs
jae
add
movl
je
popa
insb
jne
add
add
insb
jae
insb
insb
outsl
arpl
add
add
insb
jae
gs
popa
insb
jne
add
add
insb
jae
jb
gs
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
popa
jo
jb
add
mov
push
insb
gs
sbb
inc
js
je
jb
arpl
jae
outsl
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
gs
je
dec
popa
outsb
fs
add
repz
je
imul
bound
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
pusha
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
inc
push
dec
jne
je
inc
jns
gs
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
int
dec
gs
jo
jb
popa
je
add
into
add
popa
jo
gs
jb
jns
in
add
imul
jb
add
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
out
add
je
jb
jb
je
arpl
push
arpl
outsb
add
jb
inc
gs
push
dec
outsb
outsw
add
inc
gs
inc
push
add
aaa
add
je
inc
dec
inc
push
add
or
dec
jae
popa
insb
imul
addr16
add
popa
jo
insb
insb
outsl
arpl
jmp
je
popa
insb
inc
insb
insb
outsl
arpl
add
add
popa
jo
gs
insb
insb
outsl
arpl
and
je
inc
imul
popa
fs
imul
add
jecxz
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
sbb
je
push
outsb
ja
outsb
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
data16
je
je
imul
inc
add
add
insb
je
inc
jns
gs
outsl
push
imul
imul
je
imul
push
add
sub
dec
inc
dec
popa
jo
je
imul
add
popa
jo
je
imul
add
popa
jo
imul
push
dec
inc
dec
xor
cs
insb
add
xor
ja
jo
imul
add
outsb
inc
insb
imul
add
add
jo
jns
insb
imul
add
xchg
push
gs
insb
imul
inc
popa
je
add
dec
add
outsl
jae
inc
insb
imul
add
adc
jae
addr16
outsl
js
add
inc
push
xor
cs
insb
add
pusha
add
addr16
jo
outsb
dec
gs
js
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
xor
push
gs
insb
outsl
jae
dec
gs
cmp
push
gs
jb
popa
je
dec
gs
js
add
push
gs
gs
popa
insb
jne
inc
js
add
inc
inc
push
inc
push
dec
xor
cs
insb
sbb
shll
xorb
lret
pop
ds
movsb
es
cs
jno
pusha
pop
repnz
adc
sti
jp
jp
or
sbb
arpl
mov
xor
inc
push
xor
daa
push
ret
cmpsb
push
mov
xchg
mov
sbb
or
push
dec
rclb
cs
les
int3
sub
hlt
stc
jnp
mov
jg
pusha
pop
repnz
xchg
add
inc
fidivrl
shlb
call
adc
in
sbb
fisttpll
mov
sub
mov
inc
mov
adc
push
roll
aad
push
enter
popa
jb
jns
jmp
xchg
or
and
or
std
pusha
notb
lret
scas
pop
fsubr
dec
fdivrs
stos
into
cmp
imul
dec
fdivrs
sbb
rolb
shlb
pop
adcl
icebp
popa
add
sbb
dec
fstpt
push
xor
push
test
mov
lods
mov
stos
xor
int3
inc
shll
or
pop
xchg
repnz
inc
rolb
sarb
mov
mov
sbb
mov
mov
sbb
movl
bound
jno
movsl
aaa
cmpsl
ret
mov
cltd
jp
jbe
loopne
in
in
mov
inc
mov
fsubrs
xchg
jle
jbe
loopne
xchg
mov
mov
jmp
jmp
fistpll
mov
jo
xorl
and
popa
out
adc
push
pop
fisttpll
out
movsb
and
mulb
push
xchg
adc
jp
adc
ret
mov
addr16
xor
xchg
jb
popa
stos
sub
outsb
cld
fwait
jbe
sti
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
dec
adc
add
add
incl
add
add
add
add
add
add
add
add
add
or
add
dec
out
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
adc
add
add
inc
add
add
add
add
add
add
push
adc
in
adc
in
adc
in
adc
in
adc
add
add
add
add
mov
adc
test
adc
or
adc
mov
adc
hlt
pop
adc
in
push
adc
add
add
in
push
adc
aam
adc
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
push
adc
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
add
add
push
adc
or
add
mov
add
add
add
hlt
add
add
enter
adc
add
cwtl
add
add
je
adc
adc
add
dec
add
add
adc
add
call
add
add
add
add
adc
sbb
add
push
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
pushf
add
adc
add
add
add
adc
add
call
add
add
add
adc
add
enter
cld
add
add
add
adc
add
add
adc
push
jns
adc
adc
push
jns
adc
adc
push
jns
adc
adc
incl
add
add
adc
mov
adc
mov
adc
lods
adc
adc
adc
adc
adc
adc
adc
test
adc
js
adc
insb
adc
adc
adc
adc
push
adc
adc
adc
dec
adc
adc
adc
inc
adc
adc
adc
cmp
adc
cmp
adc
xor
adc
xor
adc
sub
adc
sub
adc
and
adc
adc
adc
or
adc
add
adc
inc
adc
adc
movlps
hlt
movlps
in
movlps
loopne
adc
fmuls
adc
int3
movlps
rorb
adc
adc
lods
movlps
cwtl
movlps
mov
adc
or
add
add
add
add
add
pop
adc
add
add
adc
shlb
shlb
shlb
shlb
shlb
shlb
shlb
shlb
jg
jg
jg
jg
mov
adc
add
add
add
add
add
add
add
add
add
add
xorb
add
add
lock
incl
add
add
push
add
push
add
adc
fs
adc
incl
add
add
add
add
incl
add
add
lcall
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
lcall
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
insb
add
add
cli
cs
lcall
add
add
add
add
jmp
ret
lods
pop
mov
pop
sub
jmp
mov
add
add
jmp
pop
roll
aad
pusha
jl
dec
pop
call
xchg
pop
pushf
mov
imul
dec
jbe
das
add
inc
imul
call
jmp
in
jg
mov
int
mov
popa
incl
popf
ret
cmp
sbb
dec
pushf
jmp
or
call
jmp
ds
sub
xchg
scas
mov
movl
movw
movzbl
add
cmp
je
jmp
jp
push
inc
cmp
or
inc
push
dec
inc
dec
xor
cs
insb
add
das
xor
sbb
cmp
or
mov
lcall
jne
add
add
jmp
adc
scas
or
xor
nop
loop
fcompl
jmp
add
add
mov
add
mov
mov
aaa
addl
pusha
jmp
dec
sub
adc
push
add
add
mov
call
jmp
stos
xor
gs
sub
jmp
outsb
and
add
jl
add
fldl
mov
call
test
adc
add
mov
bound
bound
testl
push
call
jmp
movsl
cmp
popf
fs
jmp
and
outsb
pop
outsb
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
mov
pop
lcall
mov
mov
pop
sub
jmp
sbb
call
jmp
sbb
ljmp
jmp
mov
lret
dec
fistpll
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
lds
fcomps
test
sub
dec
fisubl
addl
pusha
jmp
call
jmp
mov
xlat
mov
jmp
aaa
mov
inc
mov
setge
bound
incl
popf
ret
or
cmp
lret
add
pushf
addl
pusha
jmp
fldenv
xchg
lea
hlt
add
add
add
add
jmp
clc
adcl
test
sub
sbbl
andl
and
movw
movzbl
add
cmp
je
jmp
pop
inc
and
cmp
loope
add
add
jmp
clc
jno
xorb
adc
imul
add
negb
add
bnd
jp
pusha
lahf
imul
jb
stc
pop
lahf
mov
not
push
adc
jmp
call
jmp
scas
es
shlb
inc
and
popa
incl
popf
ret
xor
push
lds
mov
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
dec
add
add
mov
inc
mov
or
adc
jg
adcl
inc
and
movw
movzbl
add
cmp
je
jmp
xchg
pop
lods
mov
popa
incl
popf
ret
data16
push
cld
adc
adc
push
pushf
addl
pusha
jmp
pop
sub
jmp
mov
add
dec
sbb
add
or
jo
dec
loopne
sub
mov
movl
movw
movzbl
add
cmp
je
jmp
mov
ficomps
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
test
aad
jmp
inc
gs
inc
call
jmp
dec
fmuls
fcomps
inc
xchg
call
cmp
cltd
dec
ja
sub
mov
popa
sti
push
call
jmp
js
call
jmp
xchg
xchg
adc
outsb
ljmp
stc
in
jg
and
call
jmp
imul
add
add
and
add
leave
mov
adc
add
hlt
jg
pusha
mov
add
lcall
imul
add
jge
add
lahf
or
popf
pop
sub
jmp
ljmp
add
jmp
test
mov
mov
jmp
out
mov
sbb
sub
add
pop
mov
jmp
dec
and
add
add
jmp
lds
stos
data16
inc
aam
dec
out
push
pushf
addl
pusha
jmp
call
jmp
cmp
lcall
out
add
xchg
mov
sbb
call
int
sub
jmp
call
jmp
dec
aad
sub
push
adc
in
sbb
jns
call
add
add
mov
lea
ret
addl
jmp
cmc
je
mov
enter
add
add
push
xchg
call
jmp
in
jo
xorl
int3
jb
adc
movl
popa
jmp
mov
mov
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
dec
imul
fwait
decb
inc
arpl
call
mov
add
sub
call
jmp
in
hlt
xchg
outsb
mov
std
sbb
add
and
cs
sbb
fs
xchg
dec
mov
mov
mov
or
and
lods
sti
pop
sub
jmp
pop
sub
jmp
call
jmp
jbe
add
sbb
and
cmpsl
dec
outsl
jp
jmp
lods
call
jmp
popf
sbb
mov
add
add
add
lea
cld
ret
addl
jmp
iret
cltd
mov
add
sbb
add
mov
xlat
movl
cmp
add
pushl
lea
jmp
adc
addl
popf
lea
pushl
jmp
scas
cmpsl
sub
call
jmp
loope
stc
cwtl
imul
hlt
jp
daa
pop
mov
addl
mov
popl
jmp
fsubrl
inc
orb
call
jmp
jo
imul
bndstx
jmp
movb
movl
popa
jmp
or
jb
and
pop
sub
jmp
clc
xor
dec
call
fisttpl
push
sub
lea
mov
adc
mov
inc
add
int3
inc
and
inc
daa
sarb
push
pushf
addl
pusha
jmp
popf
adc
cs
scas
push
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
pop
jl
out
jmp
inc
into
pop
cmp
aas
xchg
sbb
aad
rcrb
push
call
jmp
call
jmp
aam
aam
dec
cmpsb
and
pop
sub
movb
movl
popa
jmp
and
loop
call
hlt
jg
pusha
mov
add
lcall
sub
push
aaa
ret
mov
mov
add
push
dec
inc
dec
xor
cs
insb
add
nop
loope
flds
jmp
mov
mov
call
jmp
and
add
lcall
add
mov
mov
das
out
ds
xor
sar
flds
jmp
mov
push
add
add
add
add
lea
ret
jmp
stos
inc
shll
mov
stos
sub
fcmove
addl
jmp
push
imul
add
add
jmp
adc
sub
dec
pushf
addl
pusha
jmp
insb
ljmp
stc
mov
mov
addl
mov
popl
jmp
in
sub
movb
movl
jmp
cmc
insl
std
test
outsl
hlt
push
cld
dec
push
shll
sub
add
jmp
mov
add
add
jmp
sbbl
push
sbb
mov
jmp
movb
movl
popa
jmp
jecxz
call
outsl
addl
popf
lea
pushl
jmp
adc
add
sbbl
add
outsb
cld
fwait
jbe
or
push
jmp
lea
jmp
call
jmp
rep
loop
je
shlb
xor
addl
popf
lea
pushl
lea
jmp
loope
adc
sub
xchg
cmc
add
sub
add
add
push
dec
inc
dec
xor
cs
insb
add
daa
dec
in
jge
divl
or
sub
jmp
call
jmp
dec
out
jg
jmp
call
jmp
lock
jmp
push
aam
sub
mov
and
cmp
outsl
call
or
push
pop
fpatan
xchg
mov
and
inc
jmp
call
jmp
repz
xorb
mov
mov
cmp
adc
lahf
lcall
jb
in
mov
shrl
dec
push
call
push
jmp
enter
call
jmp
rol
call
jmp
push
aam
sub
pop
sub
add
pop
mov
addl
mov
popl
jmp
sub
push
daa
int
mov
addl
mov
popl
jmp
xchg
bound
dec
call
jmp
movsb
and
loopne
add
jmp
lods
call
jmp
add
and
push
jo
push
add
add
add
add
lea
ret
addl
jmp
sub
jge
add
add
jmp
sbb
dec
lret
pop
ds
mov
and
add
jb
lea
and
add
add
jmp
orl
push
test
jmp
jmp
mov
movsb
call
jmp
mov
fwait
decb
sldt
add
add
add
push
lea
ret
addl
jmp
mov
jb
jmp
orb
jmp
add
mull
add
int3
inc
shlb
popf
lea
pushl
lea
jmp
call
jmp
sub
mov
scas
jns
adc
movl
popa
jmp
testb
sub
jmp
xchg
add
cmp
add
add
jmp
cmp
adc
int3
pushf
addl
pusha
jmp
daa
call
jmp
mov
xchg
repz
cli
pushf
mov
cmp
decl
dec
sub
xor
mov
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
fwait
push
sub
pop
cmp
or
cmp
clc
pop
sub
mov
movl
movw
jmp
call
jmp
inc
xlat
inc
and
sbb
mov
adc
add
xor
push
out
lods
add
adc
in
les
rclw
pop
jmp
inc
sub
or
incl
popf
ret
adc
xor
movzbl
jmp
adc
into
call
jmp
sti
insb
loop
je
add
or
popf
lea
pushl
lea
jmp
sti
shlb
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
jnp
xlat
jmp
pop
call
jmp
sbbl
ljmp
pop
sub
jmp
ret
hlt
dec
mov
popa
incl
jmp
call
jmp
pop
repnz
fs
sub
jmp
mov
movl
movw
movzbl
add
cmp
je
jmp
fstpl
call
jmp
mov
mov
add
jmp
and
push
push
push
pushf
addl
pusha
jmp
push
sahf
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
les
in
push
push
pop
pop
push
add
jmp
insb
hlt
push
cld
push
insb
inc
repz
ret
icebp
push
pop
xchg
jb
es
adc
adc
xorl
inc
and
jmp
adc
add
add
jmp
mov
mov
adc
add
adc
les
xor
push
out
jae
dec
jle
push
push
call
jmp
fldl
mov
out
hlt
xchg
aam
inc
and
popa
incl
popf
ret
mov
cwtl
scas
xchg
insb
push
pushf
addl
pusha
jmp
xor
jbe
mov
add
shll
add
pop
add
cmpsl
in
add
aaa
jge
adc
add
cmp
je
jmp
pop
sub
jmp
call
jmp
dec
out
jg
jmp
jge
cld
call
xor
ss
es
pop
roll
sub
push
call
jmp
gs
call
jmp
fstps
test
lea
push
pop
sub
jmp
pop
stc
call
jmp
adc
loopne
jno
or
inc
push
dec
inc
dec
xor
cs
insb
add
mov
call
jmp
push
fisttpl
fnstsw
jecxz
jbe
push
pushf
addl
pusha
jmp
sub
lcall
call
jmp
xchg
adc
imul
int
mov
int
pushf
addl
jmp
jmp
sahf
xlat
call
jmp
pop
adcb
andb
fmull
incl
popf
ret
pop
adcl
jecxz
popf
ret
icebp
je
lea
push
jmp
call
jmp
pop
inc
and
cmp
xorb
xchg
incl
jmp
fsubr
adc
add
add
jmp
and
daa
mov
inc
sbb
adc
adc
subl
inc
and
movw
movzbl
add
cmp
je
jmp
add
and
xchg
dec
sub
jmp
call
jmp
mov
nop
testl
push
add
add
out
aaa
and
jge
and
shlb
push
call
jmp
pusha
jmp
call
jmp
pop
aam
sub
adc
pushf
cmc
jmp
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
jb
jl
jmp
sub
test
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
push
push
mov
jmp
call
jmp
mov
ficomps
push
push
js
sub
jmp
das
mov
cwtl
rolb
add
jnp
xor
push
or
fwait
push
and
fucomp
cmp
push
loop
dec
jnp
mov
adc
movl
movw
movzbl
add
cmp
je
jmp
int
push
push
call
jmp
call
jmp
cmp
pop
adcl
in
decb
adc
add
pushl
aam
adc
ja
fwait
outsb
fistpll
shrl
pop
push
call
jmp
or
add
add
jmp
lods
cmp
mov
jecxz
sub
pop
sub
mov
movl
movw
jmp
call
jmp
in
jmp
jge
xor
mov
popa
incl
jmp
xchg
inc
ret
call
jmp
jecxz
jmp
jge
hlt
daa
ds
cmp
je
jmp
inc
inc
and
xor
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
xor
inc
xlat
mov
cmpsl
pop
into
pop
cmp
jno
rcrb
call
jmp
pop
sub
jmp
xor
jmp
movsl
cmp
xchg
pop
call
jmp
mov
jmp
call
jmp
outsl
hlt
push
cld
dec
adc
mov
push
call
and
pop
or
fistps
inc
and
popa
incl
popf
ret
fnstcw
jl
add
add
jmp
es
push
lret
lret
movl
movw
jmp
xchg
sbb
add
add
jmp
xchg
or
push
call
fucomip
cmp
add
cmp
popa
xor
sbb
xchg
fmull
hlt
push
call
jmp
movzbl
add
cmp
je
jmp
add
add
add
jmp
mov
lcall
in
pushf
addl
pusha
jmp
pop
call
jmp
lods
aaa
cmpsl
ret
or
dec
movzbl
add
cmp
je
jmp
ja
push
push
mov
add
repnz
mov
or
push
test
or
dec
xlat
inc
and
push
sbb
add
add
jmp
and
idivb
fcomp
jmp
ret
call
jmp
call
jmp
push
pop
cmp
push
in
insl
std
test
ret
add
add
push
dec
inc
dec
xor
cs
insb
add
rolb
add
lcall
dec
mov
imul
fcomp
jmp
call
jmp
mov
stos
into
cmp
or
jle
mov
addl
jmp
stos
repz
jmp
pop
jecxz
push
in
ds
shlb
popa
incl
popf
ret
pusha
jmp
loopne
xor
call
jmp
mov
stos
int
aad
movsb
ss
sub
mov
movl
movw
movzbl
add
cmp
je
jmp
divl
xorl
pop
mov
call
incb
dec
sub
xchg
inc
lret
add
dec
inc
daa
xor
push
call
jmp
lret
adc
add
jmp
xor
mov
clc
sbb
flds
fiadds
and
movw
movzbl
jmp
fidivl
add
add
jmp
fistps
scas
pop
mov
add
add
push
dec
inc
dec
xor
cs
insb
add
nop
ja
mov
jmp
jne
insb
or
mov
mov
popa
incl
popf
ret
mov
call
jmp
and
jno
cwtl
jmp
shlb
out
push
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
or
aaa
stos
jmp
pop
sub
jmp
pusha
out
jg
jmp
js
insl
cmp
sahf
sub
pop
sub
jmp
lds
mov
mov
add
add
jmp
jbe
push
cltd
in
call
add
add
mov
lea
ret
addl
jmp
mov
popl
jmp
pop
sub
movb
jmp
jnp
add
add
jmp
out
lock
bound
add
pop
mov
addl
jmp
jne
call
jmp
rclb
push
mov
add
push
add
add
repnz
mov
fwait
adc
or
dec
jb
push
call
push
jmp
sbb
xorl
jmp
mov
add
add
nop
das
add
push
xchg
add
data16
addl
jmp
xchg
add
add
add
jmp
in
ljmp
loope
pushf
xor
add
dec
push
ds
jmp
call
jmp
or
xchg
popa
jmp
xor
xor
inc
push
push
popf
lea
jmp
call
jmp
out
out
jo
sbbl
xor
aaa
cmp
je
jmp
fidivl
pop
fs
push
pushf
addl
pusha
jmp
add
and
pop
sub
jmp
scas
jmp
add
add
jmp
out
adc
jb
rcrb
xor
lea
jmp
push
mov
add
jmp
rcrb
pop
out
clc
push
popf
ret
dec
roll
sarl
sbb
xchg
add
add
jmp
fld1
add
add
jmp
js
je
out
inc
pop
fwait
pop
mov
addl
mov
popl
jmp
xchg
add
outsl
call
jmp
insl
repnz
pop
repnz
dec
std
cmp
outsl
adc
add
jmp
adc
call
jmp
jnp
jne
out
inc
data16
imul
sldt
add
add
add
arpl
addl
jmp
jle
push
add
add
test
add
std
or
sbb
cmp
xchg
jmp
jae
adc
add
xchg
insl
cmp
shlb
fs
dec
jmp
sbb
test
pop
mov
out
dec
or
lds
add
fbstp
add
jp
outsb
or
sub
subl
addl
jmp
sti
add
add
add
jmp
inc
push
xor
sub
pushl
lea
jmp
mov
add
add
push
dec
inc
dec
xor
cs
insb
add
nop
flds
incl
ficoms
loop
jmp
and
hlt
fdivl
movl
call
jmp
jg
insb
or
in
pop
pop
sub
mov
movl
jmp
xchg
mov
add
jmp
push
nop
push
popa
nop
jns
das
pop
sub
movb
movl
popa
jmp
push
add
cmp
jmp
call
jmp
push
xchg
pop
bound
push
into
mov
popa
incl
popf
ret
call
ss
orb
imul
push
add
outsl
call
jmp
and
andl
xchg
sub
cmp
add
icebp
push
fimull
ficoml
lret
push
call
push
jmp
pop
in
popf
ret
loopne
cmp
call
jmp
int
fidivrs
dec
gs
fisttps
incl
jmp
pop
rolb
shlb
push
ja
loope
test
in
pop
call
push
jo
adc
adc
adcl
inc
and
movw
movzbl
add
cmp
jmp
jg
fs
adc
pop
int3
stos
data16
sbb
adc
stos
fcomi
and
pop
mov
js
je
cmc
add
push
call
jmp
jge
addr16
push
in
cltd
push
xchg
jge
pop
sub
jmp
mov
mov
cs
outsb
add
das
mov
pop
mov
dec
arpl
pushf
addl
pusha
jmp
jl
arpl
cmc
xor
pop
ds
push
in
pop
sub
jmp
inc
rolb
sarb
stos
lods
lret
inc
scas
xchg
add
repz
shlb
jne
icebp
inc
sarb
popa
cmpsb
hlt
push
call
jmp
xchg
push
shrb
mov
adc
push
std
insl
hlt
pop
hlt
cmp
push
pusha
pop
repnz
lds
inc
sarb
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
sub
or
test
push
mov
and
incl
popf
ret
xor
mov
push
pushf
addl
jmp
loop
adc
sub
inc
mul
jns
mov
inc
movl
movw
movzbl
add
cmp
je
jmp
dec
inc
and
imul
pusha
jmp
sbb
call
jmp
mov
lds
xor
sbb
cmp
test
incl
call
jbe
push
dec
xorb
cmp
adcb
jmp
pop
sub
mov
movl
movw
movzbl
jmp
jle
xchg
cmc
add
roll
inc
movsb
cmp
push
xor
lret
xchg
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
hlt
or
sti
jmp
mov
add
cmp
je
jmp
pusha
jmp
stc
pop
sub
jmp
push
lea
pop
iret
stos
pop
mov
adcb
andb
dec
push
pushf
addl
jmp
pop
fmuls
fdivs
or
pop
jp
jle
loopne
dec
sbb
and
incl
popf
ret
cmp
push
call
jmp
aas
mov
sub
or
mov
ja
lahf
dec
and
adc
add
xor
push
out
lods
add
adc
in
les
mov
test
cmp
jnp
imul
pop
sti
je
lea
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
pop
cmp
jmp
pop
sub
jmp
jo
xchg
cmc
add
add
jl
push
mov
push
jmp
ss
gs
jmp
mov
or
xor
add
rcrl
out
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
jp
and
jmp
pop
sub
movb
movl
popa
jmp
and
xchg
add
sbb
aad
into
mov
push
pushf
addl
jmp
fmull
mov
add
push
das
mov
push
jbe
inc
and
add
pushl
lea
jmp
and
ret
sbb
cmp
adc
pop
add
add
lahf
ja
icebp
imul
sub
fldt
in
push
pop
jmp
add
dec
fisttpl
frstor
jmp
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
addb
jmp
movsl
cmp
push
xchg
repz
mov
and
ret
jbe
sti
lcall
call
jmp
vmovapd
jmp
jmp
loopne
shlb
cld
fwait
jbe
jge
insl
hlt
pop
sarl
mov
dec
jmp
adc
mov
ret
lds
cmpl
fsubs
dec
in
lcall
lcall
repnz
mov
movl
jmp
call
lcall
stc
jb
xchg
push
pop
mov
addl
mov
popl
jmp
mov
loop
lea
jne
mov
je
or
inc
and
popa
incl
popf
ret
js
gs
pop
push
fisttpll
out
out
popa
icebp
nop
arpl
aad
or
movw
movzbl
add
cmp
jmp
in
jge
je
jo
jb
xchg
outsb
std
insl
hlt
pop
aad
dec
es
sldt
add
add
add
jnp
fs
ret
addl
jmp
cmp
cmp
dec
cwtl
or
shl
mov
pop
lock
push
xor
jmp
pop
sub
jmp
mov
ret
cld
fwait
jbe
lahf
or
xchg
in
mov
inc
cmp
mov
mov
add
add
or
xlat
pop
std
pop
les
test
test
mov
xor
mov
aam
lcall
jmp
jmp
test
mov
and
xchg
ficompl
pop
aaa
repz
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
fcompl
call
insl
hlt
pop
lods
mov
and
jle
call
pop
fsubrl
cmp
shr
or
jmp
out
fidivrl
out
mov
std
sbb
imul
mov
jecxz
jmp
or
call
jmp
push
xlat
inc
and
or
nop
push
popa
nop
jbe
insb
loop
je
cmp
and
incl
popf
ret
push
roll
shll
inc
rclb
sub
pop
sub
add
pop
mov
addl
mov
popl
jmp
test
push
nop
adc
stos
add
add
addb
add
mov
mov
ret
enter
sub
movb
jmp
data16
adc
or
jg
push
cld
pop
jb
inc
and
add
pushl
lea
jmp
pop
inc
and
adc
pop
mov
inc
xlat
mov
stos
ficoms
mov
sldt
add
add
add
push
lea
ret
addl
jmp
icebp
sbb
adc
scas
push
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jge
add
in
notl
lods
daa
mov
and
lret
or
pop
ja
sub
jmp
loope
loope
jae
adcl
ds
pop
add
add
iret
movsb
push
lcall
add
xor
call
jmp
pop
into
pop
cmp
jno
insl
std
test
or
pop
sub
jmp
sub
push
push
xor
and
push
mov
nop
mov
clc
imul
movsl
xchg
push
xchg
repz
test
mov
movl
movw
jmp
inc
jecxz
push
in
adc
in
sbb
sarl
push
pushf
addl
pusha
jmp
je
jmp
inc
stc
imul
shll
movzbl
add
cmp
jmp
in
jno
xorb
mov
dec
fnstcw
pushf
sti
push
xchg
icebp
mov
popa
incl
popf
ret
enter
imul
push
jmp
mov
cltd
clc
or
xchg
std
or
rolb
inc
mov
call
imul
adc
push
test
or
add
xchg
push
call
push
jmp
pushf
addl
jmp
mov
cmpsb
shll
pop
xchg
pop
bound
mov
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
dec
sub
jmp
jno
pushl
dec
adc
arpl
cmc
adc
jno
xorb
push
mov
es
mov
cs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
popf
pop
push
mov
cmpsb
xchg
mov
inc
jmp
in
gs
pushf
outsl
popl
cli
jb
xchg
in
imul
lret
or
pop
and
adc
testb
lods
inc
orl
cwtl
jp
pop
repnz
jmp
popf
pop
xchg
adc
dec
lds
iret
cmp
pop
leave
test
mov
mov
sub
mov
movl
movw
jmp
adcb
loop
ljmp
fs
test
lcall
inc
and
popf
ret
mov
mov
and
add
add
jo
fcoms
mov
add
jmp
out
js
mov
and
xchg
and
jne
xorl
ja
adc
incl
movw
movzbl
add
cmp
je
jmp
xchg
insl
cmp
call
xchg
pop
pushf
mov
imul
dec
sahf
sbb
push
call
jmp
xor
cmp
mov
or
inc
fmuls
fdivs
xor
psrlw
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
adc
jmp
stos
mov
sub
jmp
cmp
jae
arpl
cmc
pop
xor
jbe
pop
sub
jmp
jno
sbb
push
add
pop
mov
addl
mov
popl
jmp
fldl
mov
out
aam
sub
jmp
gs
outsb
or
dec
cmc
push
lds
aas
push
call
add
add
mov
lea
ret
addl
jmp
imul
insl
in
in
addl
jmp
pop
mov
jle
pop
push
mov
jns
outsl
or
out
stos
ret
push
pushf
addl
pusha
jmp
sbb
sbb
jo
gs
inc
in
popf
lea
pushl
lea
jmp
pop
fimull
fidivrl
adc
push
roll
sarl
je
lea
pushf
dec
xchg
xorl
xorl
jmp
jp
ljmp
adc
pushf
addl
pusha
jmp
orl
and
and
pop
test
rcrb
call
jmp
ret
or
aas
call
cmp
cltd
dec
ja
sub
mov
popa
jmp
and
leave
cs
je
jmp
xor
push
lds
cmc
jg
mov
jecxz
cld
fwait
jbe
int
int
lea
call
add
add
mov
lea
ret
addl
jmp
xchg
add
std
or
popf
adc
push
call
add
pop
mov
addl
mov
popl
jmp
push
call
pop
sub
movb
jmp
test
mov
sbb
in
testl
push
call
push
jmp
xor
and
add
add
inc
out
jns
mov
add
pop
bound
dec
lret
and
add
pushl
lea
jmp
push
jmp
mov
test
push
out
int3
push
lds
pushf
outsl
les
cmp
adc
popa
jmp
fstpl
or
dec
jmp
adc
and
pop
ds
jp
idivl
add
push
dec
inc
dec
xor
cs
insb
add
nop
add
cld
jmp
cmpsl
call
jmp
mov
mov
jp
jp
xlat
jnp
mov
jns
xchg
mov
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
int
iret
pop
cmp
push
add
xchg
adc
pop
sub
jmp
pop
sub
jmp
cmp
ljmp
adcb
subb
jmp
aaa
call
inc
out
mov
popf
aas
adc
dec
icebp
jmp
add
jp
jmp
cmp
push
lds
gs
adc
add
lea
pop
addl
pusha
jmp
pop
jecxz
push
in
leave
insb
call
mov
into
icebp
cs
xor
aad
or
inc
jmp
dec
testb
mov
js
adc
adc
xorl
inc
and
movw
jmp
ss
mov
pushf
sub
mov
mov
jmp
ds
inc
mov
push
movsl
dec
push
fstpt
jmp
add
add
push
dec
inc
dec
xor
cs
insb
add
nop
decl
ljmp
push
fsubl
inc
and
popf
ret
lock
mov
jmp
push
popl
nop
testl
arpl
imul
jmp
jmp
pusha
pop
repnz
into
add
cmp
je
jmp
push
jmp
or
out
js
mov
push
ret
ret
push
pushf
addl
pusha
jmp
call
jmp
push
les
int3
and
adc
cmp
fucomi
or
inc
push
dec
inc
dec
xor
cs
insb
add
iret
out
adc
jb
push
les
aad
dec
in
pop
sub
jmp
jbe
jge
testl
scas
and
or
inc
in
mov
fsubr
pushf
addl
pusha
jmp
and
sub
mov
movl
movw
movzbl
jmp
xchg
mov
sbb
aas
mov
jnp
push
cmp
add
mov
jno
adc
int
rcrb
add
pop
ds
jmp
outsb
push
call
jmp
or
ficompl
stos
pop
sub
negb
call
jmp
arpl
jno
jecxz
mov
cwtl
decl
call
enter
add
jae
shll
cli
fdivrp
ljmp
stos
cmp
inc
jns
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
pop
cmp
mov
arpl
cmc
sbb
pop
int3
stos
data16
adcb
andb
shrl
push
and
verr
jle
mov
mov
jg
inc
push
fimuls
or
pop
into
test
into
add
cmp
je
jmp
in
popa
icebp
nop
arpl
jp
sbb
add
xchg
mov
fimuls
push
imul
aam
push
xchg
into
jmp
idivb
jp
pop
mov
popa
incl
popf
ret
sbb
push
jge
push
jmp
and
adcb
subb
notb
jb
in
or
incl
popf
ret
pop
pop
sub
jmp
inc
inc
and
sbb
inc
mov
jo
scas
jae
adc
add
inc
xor
jmp
or
or
inc
push
dec
inc
dec
xor
cs
insb
add
ja
mov
inc
mov
lret
xchg
addr16
test
pop
sub
mov
movl
movw
movzbl
add
cmp
je
jmp
mov
add
xchg
pop
pushf
mov
imul
dec
push
inc
psubsw
add
add
sbbb
int3
gs
stos
sub
leave
pop
cmp
jbe
loop
pop
loop
mov
call
add
pop
mov
addl
mov
popl
jmp
inc
pop
sub
jmp
adc
pop
jp
mov
repz
xchg
call
add
add
mov
lea
ret
addl
jmp
lcall
andl
inc
scas
or
in
xchg
add
mov
movsl
int3
aas
jmp
and
inc
and
add
jmp
push
or
push
ret
cmpsb
push
mov
in
sbb
mov
mov
cmp
call
movl
jmp
pop
jecxz
push
in
xor
add
inc
and
popa
incl
popf
ret
and
inc
jmp
or
icebp
popa
add
push
cmp
push
xor
lea
jmp
test
sbb
add
or
xchg
cwtl
into
pushf
pop
jo
std
fldt
sub
mov
add
pop
roll
sarl
dec
sub
and
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
add
in
jmp
mov
lods
lret
inc
mov
stc
in
movsb
ret
xlat
adc
pop
and
pop
sub
jmp
gs
gs
adc
or
pop
pop
sub
jmp
cmp
rolb
mov
or
int
xchg
xchg
call
add
add
mov
lea
ret
addl
jmp
adcb
jmp
push
in
add
mov
sub
push
call
push
jmp
inc
leave
add
pop
mov
addl
jmp
clc
popa
icebp
nop
arpl
daa
mov
sub
jno
daa
lret
aam
addl
pusha
jmp
dec
out
frstor
jmp
daa
iret
or
pop
sub
jmp
int3
push
shlb
insb
lahf
sub
xchg
mov
popa
jmp
stos
xor
pop
stc
imul
pop
jns
lcall
jmp
adc
mov
add
popa
jmp
fs
popf
insb
jmp
dec
fdivrl
pushf
addl
jmp
cs
inc
mov
jns
outsl
or
out
push
xor
sub
movsb
gs
orl
decb
push
mov
decb
cli
pushf
jb
inc
and
add
pushl
lea
jmp
push
jge
negl
jp
jp
sbb
cmp
jne
mov
ficomps
call
jmp
push
call
jmp
pop
rolb
sarb
mov
aam
outsb
sbb
lahf
jne
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
cmp
pop
inc
stos
inc
pop
sub
mov
movl
jmp
xchg
sahf
stc
or
and
aad
into
test
mov
adc
add
ffreep
enter
test
aas
jb
add
mov
call
push
xor
sub
aad
jmp
sub
sub
or
in
mov
mulb
cmp
popa
lea
add
adc
xorl
inc
and
movw
movzbl
add
cmp
je
jmp
sbb
std
insl
hlt
pop
in
ja
jo
loop
push
movw
jmp
or
cmpsl
cmp
mov
repnz
in
je
sub
pushl
add
push
dec
inc
dec
xor
cs
insb
add
nop
mov
mov
jmp
add
fwait
or
pop
sub
jmp
adc
call
jmp
pusha
std
insl
hlt
pop
mov
pusha
notb
ds
test
stc
pop
leave
test
fisubs
pop
pop
jnp
pushf
addl
pusha
jmp
push
add
push
dec
inc
dec
xor
cs
insb
add
mov
fwait
or
sbb
les
sbb
jns
pop
jmp
repnz
pushf
jmp
pop
fdivl
in
loopne
icebp
nop
arpl
jb
lods
cmp
mov
popa
incl
popf
ret
push
inc
and
aaa
out
addl
pusha
jmp
jae
sub
jmp
pop
fisttps
flds
jmp
std
test
dec
lret
lret
mov
inc
mov
add
add
push
dec
inc
dec
xor
cs
insb
add
push
jbe
xchg
testb
jno
mov
jnp
adc
adc
addl
orl
add
cmp
je
jmp
nop
pop
xor
push
lds
enter
push
sarl
push
lds
push
mov
sbb
jmp
add
jle
pop
lret
scas
pop
scas
sub
sub
jb,pn
ja
loope
xlat
call
xor
inc
push
xor
mov
inc
push
rclb
sub
push
call
jmp
lock
add
add
sub
add
popa
push
out
bound
insl
cwtl
test
imul
jmp
push
rcll
data16
mov
ret
cmpsb
push
mov
movzbl
add
jmp
add
adc
lcall
inc
and
popa
incl
popf
ret
xor
mov
inc
and
popa
incl
popf
ret
push
jmp
pop
les
int3
cmp
ljmp
std
mov
mov
pop
sub
mov
movl
movw
movzbl
add
cmp
je
jmp
xor
hlt
push
cld
dec
add
test
and
cmp
jmp
jecxz
mov
pop
jbe
jmp
lods
xor
mov
xchg
and
nop
push
popa
nop
pop
mov
jg
dec
mov
addl
mov
popl
jmp
xchg
mov
addl
popf
lea
jmp
jo
pusha
pop
repnz
and
mov
js
push
call
add
pop
mov
addl
mov
popl
jmp
mov
rolb
jge
cmp
pop
sub
jmp
fistpl
test
xchg
add
sahf
jo
cs
sbb
je
call
add
add
mov
lea
ret
addl
jmp
mov
adc
jmp
adc
inc
add
add
pop
call
lcall
dec
adc
inc
aad
repz
gs
xchg
add
mov
add
add
inc
push
xor
mov
inc
pop
int
fidivl
lds
test
call
mov
rolb
pop
jp
jne
xchg
addr16
sub
jmp
stos
es
cs
ds
inc
mov
pusha
repnz
pop
repnz
lock
pop
push
pushf
addl
pusha
jmp
scas
enter
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
pop
xor
cmpsl
jmp
sbb
xchg
pop
xchg
repnz
or
xchg
ret
and
fs
jmp
ds
loopne
call
mov
cmpsl
jb
dec
add
xor
testl
add
aas
scas
aas
pop
test
imul
cmp
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
shll
jmp
cmpb
cmp
or
inc
push
dec
inc
dec
xor
cs
insb
add
cmp
scas
cmp
mov
push
lret
lret
jbe
adc
pop
sub
jmp
sbb
ficomps
jmp
jmp
xor
mov
out
xlat
mov
sarl
nop
pop
ja
jmp
lods
add
add
inc
daa
shrb
mov
fildl
dec
sti
addr16
pushf
addl
pusha
jmp
inc
sbb
mov
popa
incl
popf
ret
cmp
jnp
mov
popa
push
jmp
pushf
lods
lret
inc
shll
and
pop
inc
push
xor
sbb
and
mov
movl
movw
movzbl
add
cmp
je
jmp
pushf
addl
jmp
pop
popf
or
es
cs
sub
call
pop
push
sub
xchg
adc
stc
dec
std
mov
pushl
cmpl
mov
push
call
jmp
ja
addr16
push
outsl
call
in
pop
sub
jmp
mov
ret
jne
add
sbb
xchg
add
jno
fimuls
inc
jnp
adc
add
mov
js
and
mov
sti
pop
out
dec
adc
iret
rcll
xor
aas
scas
lret
sbb
jb
arpl
xchg
xchg
adc
add
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
inc
or
xlat
call
jmp
mov
cmc
js
mov
fists
cmpsb
push
mov
jmp
mov
fistps
movl
push
lds
iret
push
lea
loopne
adc
add
mov
and
popf
ret
cmp
cmp
inc
rorl
mov
and
movzbl
add
cmp
je
jmp
pushf
addl
jmp
mov
mov
and
xchg
int3
cmpsl
push
push
jmp
dec
inc
and
push
mov
xchg
sbb
pop
sub
mov
jmp
lea
and
movsl
dec
aam
sub
stc
jbe
mov
popa
incl
popf
ret
out
pop
sub
jmp
xchg
setg
or
and
or
jle
inc
xchg
mov
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
add
inc
sahf
sbb
aad
lock
inc
mov
cmpsb
rorb
adc
xor
inc
and
movw
jmp
call
mov
movsl
sbb
or
jae
jmp
mov
pop
add
add
ret
mov
ja
inc
jecxz
in
mov
dec
lods
sub
test
jge
jmp
mov
lret
mov
stos
mov
jno
mov
popa
incl
popf
ret
pop
fisttps
out
jecxz
jne
adc
add
fiadds
pop
sub
jmp
push
jmp
ss
lret
mov
and
push
push
fisttps
push
movzbl
add
cmp
je
jmp
lock
call
jmp
push
xchg
add
adc
push
push
xor
cmp
mov
pushf
addl
pusha
jmp
call
add
add
mov
lea
ret
jmp
sub
jmp
inc
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
add
cld
jae
xchg
pop
lret
lret
loopne
adc
or
xchg
pusha
jmp
call
push
sbb
adc
jno
insb
mov
sub
add
call
mov
das
das
repz
push
addl
jmp
fimuls
mov
inc
and
and
mov
jle
cmp
sub
mov
movl
movw
movzbl
add
cmp
je
jmp
leave
mov
dec
movl
jmp
mov
mov
cmpsl
aaa
push
mov
sub
movb
jmp
loopne
in
mov
and
mov
addl
popf
lea
pushl
lea
jmp
loope
adc
xor
mov
pop
fisttpll
mov
pop
jge
adc
addl
jmp
out
jae
xchg
push
rolb
shlb
addb
testl
popa
jmp
out
cmc
pushf
outsl
scas
das
mov
fwait
and
clc
pusha
jmp
xchg
adc
cld
xchg
cmc
add
sub
add
add
push
dec
inc
dec
xor
cs
insb
add
sbb
add
pop
cmp
and
outsl
lcall
shll
sub
jmp
and
push
jecxz
push
in
push
fisttpll
out
mov
aas
out
sub
add
pop
mov
addl
mov
popl
jmp
stos
and
jbe
push
push
xor
cmp
imul
call
jmp
lds
lods
pop
mov
pop
int
addr16
pusha
pop
repnz
mov
pop
sub
jmp
out
jle
mov
or
sbb
lock
bound
int
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
inc
and
or
push
in
push
call
jmp
sahf
or
sub
mov
jmp
and
lcall
cli
push
test
subb
sbb
addl
pusha
jmp
aad
fdivrl
call
inc
loopne
jecxz
inc
cli
or
shld
pop
shr
xor
xchg
mov
xchg
mov
pop
mov
inc
and
popa
incl
popf
ret
movsl
cmp
dec
mov
out
mov
fstps
pushf
addl
jmp
icebp
jae
xchg
ret
xchg
addr16
jns
mov
and
and
incl
popf
ret
stos
shr
in
jmp
xchg
cmp
pop
sub
jmp
lret
lcall
pop
mov
movl
movw
movzbl
add
cmp
je
jmp
outsb
repz
cmc
adc
mov
add
push
jmp
push
js
ljmp
lahf
cmc
jno
xorb
loope
frstor
and
call
add
jmp
push
lahf
punpckhdq
jbe
insl
fstps
fs
int3
iret
adc
xchg
sldt
add
add
add
and
fs
ret
jmp
dec
ret
mov
cmp
push
lahf
push
mull
ja
xorb
fwait
mov
inc
and
add
jmp
add
sbb
outsb
push
fimuls
add
jle
mov
mov
addl
mov
popl
jmp
pop
sub
jmp
imul
adc
sbb
mov
inc
mov
test
iret
push
call
push
sbb
adc
jno
insb
mov
push
call
jmp
add
lea
aad
out
lret
lret
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
cmpsb
xorl
in
jle
movsb
xor
shll
pushl
jmp
je
ja
loope
in
jne
mov
je
jge
testl
xchg
xorl
adc
incl
add
popa
jmp
shrb
pusha
scas
inc
jmp
xchg
or
xlat
inc
and
pusha
sbb
out
lea
jmp
gs
push
mulb
push
pop
rclb
ja
xchg
mov
in
pop
sub
mov
movl
movw
movzbl
add
cmp
je
jmp
mov
test
pop
lcall
call
mov
je
outsb
bound
add
lods
mov
popl
jmp
cmp
and
sti
jnp
push
xor
sub
add
jg,pt
outsb
or
sbb
ret
inc
aam
dec
cmpsl
mov
call
add
add
mov
lea
ret
addl
jmp
in
std
test
std
inc
xor
and
pushl
lea
jmp
push
jmp
and
cwtl
adc
xchg
add
jge
stc
int
pop
sub
movb
movl
popa
jmp
jo
insb
or
loop
stc
imul
or
jne
xor
int
enter
pushf
addl
pusha
jmp
pop
pop
sub
jmp
call
xchg
sub
cmp
add
icebp
inc
loop
imul
jp
jle
call
push
rolb
adc
loopne
jecxz
inc
cli
or
shld
xchg
cmp
call
or
cmp
cmp
mov
in
adcl
test
push
call
jmp
arpl
imul
sbb
jmp
mov
jmp
pop
adcb
subb
pusha
pop
repnz
movsb
cmp
or
jb
xchg
sti
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
lahf
dec
testb
inc
decl
xchg
add
and
notl
xor
pop
rclb
imul
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
das
or
loope
xor
sbb
addl
inc
and
movw
jmp
mov
and
dec
sub
dec
cmc
push
and
popa
incl
popf
ret
jo
inc
daa
rclb
pop
int
loopw
lcall
mov
std
ds
pop
sub
jmp
mov
shlb
packsswb
call
jmp
fidivrs
imul
call
and
xchg
mov
mov
sbb
ja
dec
lcall
inc
and
ds
push
pushf
addl
pusha
jmp
aaa
mov
inc
mov
bnd
add
add
mov
lea
ret
jmp
adc
clc
jb
xchg
inc
push
call
push
jmp
test
jmp
jmp
call
mov
ret
lahf
mov
loop
jl
xchg
test
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
loop
mov
jmp
cmp
inc
pop
sub
add
pop
mov
addl
mov
popl
jmp
push
jb
sub
jmp
movb
movl
jmp
inc
leave
pop
cmp
sub
inc
mov
test
or
movzbl
add
cmp
je
jmp
fsubrl
or
popf
lea
jmp
rcrb
xchg
addr16
jno
jno
jecxz
mov
shlb
xchg
popa
jmp
or
xor
lea
jmp
data16
gs
ds
mov
mov
sbb
pusha
nop
jecxz
pushf
addl
pusha
jmp
cwtl
pop
call
and
xchg
mov
mov
sbb
ja
daa
mov
and
fisttpll
out
or
data16
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
add
or
mov
push
call
jmp
aas
stos
cmp
pop
aaa
lods
and
add
dec
fstpt
jae
in
and
jno
push
or
mov
xlat
inc
and
jbe
outsl
lcall
inc
daa
sarb
mov
jns
aas
rolb
and
incl
popf
ret
sbb
push
jmp
jmp
add
fistpll
test
cmp
or
push
push
pushf
addl
pusha
jmp
or
fsubs
lahf
push
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
mov
ljmp
stc
out
sub
outsl
mov
pop
sub
mov
movl
movw
movzbl
add
cmp
je
jmp
divl
xorb
xchg
pop
bound
in
push
jmp
lret
dec
frstor
xchg
jp
lret
pop
ds
lcall
and
popa
incl
popf
ret
rcrl
scas
pop
std
out
pushf
addl
jmp
dec
les
int3
pop
jbe
pop
fisttpl
fnstsw
imul
iret
test
adc
adc
adc
inc
and
movw
movzbl
add
cmp
je
jmp
loopne
std
test
jmp
addb
jp
arpl
je
pop
add
add
and
adc
inc
ljmp
mov
jmp
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
jne
pop
leave
jmp
fwait
setg
or
jae
xchg
xchg
or
sub
leave
pop
sub
jmp
iret
pop
int3
stos
movsw
lea
incl
popf
ret
in
in
ret
mov
ret
addr16
mov
enter
push
mov
jecxz
test
mov
sub
mov
movl
movw
movzbl
add
cmp
je
jmp
test
addl
jmp
fildl
mov
mov
lret
in
sbb
jle
adc
add
sbb
push
sti
into
and
cmp
rcl
aam
lea
call
jmp
mov
mov
push
xor
addr16
shlb
jb
pusha
jmp
pop
rcll
push
clc
dec
xchg
mov
dec
fstpt
pusha
jmp
or
push
fisttpl
fnstsw
lret
sub
pop
sub
jmp
or
add
jno
pop
repnz
lea
sahf
or
cmpsb
inc
push
adc
or
inc
push
dec
inc
dec
xor
cs
insb
add
mov
fwait
or
jne
gs
pushf
outsl
test
std
call
jmp
jnp
mov
movsl
cs
adc
xlat
push
pushf
addl
pusha
jmp
pop
sub
jmp
mov
fwait
decb
mov
cmc
add
pop
xor
add
pushl
lea
jmp
inc
enter
and
pop
cmp
cmp
xor
rclb
mov
adc
movl
popa
jmp
and
adc
and
lahf
adc
sub
jmp
je
jp
in
dec
stos
cmp
rcll
and
outsl
ljmp
push
jmp
xlat
inc
mov
stos
adcl
test
jge
sub
in
lods
pop
sub
add
pop
mov
addl
mov
popl
jmp
sub
popa
cli
push
or
out
jl
testb
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
sbb
mov
pop
test
xchg
lahf
pop
xchg
repnz
popa
pop
lret
pop
ds
sbb
aaa
mov
outsb
and
andl
aas
mov
adc
inc
and
movw
jmp
das
xchg
add
adc
movsb
ret
ds
dec
sahf
mov
sbb
add
cmp
loope
jg
dec
xchg
sbb
int
and
jl
cmp
push
and
jmp
hlt
jne
mov
jecxz
icebp
nop
arpl
push
cmpsb
and
fwait
call
add
add
mov
lea
ret
addl
jmp
xor
and
push
cmpsl
and
lds
movzbl
add
cmp
jmp
arpl
je
out
pop
les
mov
push
xor
or
push
push
popa
incl
popf
ret
cltd
adc
xor
xchg
xchg
and
ffreep
dec
fdivrl
xor
dec
cltd
dec
sub
add
dec
aad
pushf
addl
pusha
jmp
adc
adc
lds
mov
pop
aas
lret
mov
mov
adc
ljmp
fs
xchg
dec
mov
mov
pop
push
call
and
inc
push
mov
adc
arpl
adcb
subb
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
fistps
pushf
jmp
lahf
jo
call
add
add
mov
lea
ret
addl
jmp
and
pop
sub
add
pop
mov
addl
jmp
jge
jg
jmp
mov
in
jnp
mov
and
cld
call
inc
out
mov
popf
aas
adc
dec
icebp
jmp
add
aam
push
call
push
jmp
in
jbe
cmpl
int
and
jl
sahf
xor
or
jmp
cltd
add
pusha
notb
and
mov
addl
popf
lea
pushl
jmp
or
inc
fimull
fisubrl
adc
in
sbb
dec
lea
call
jmp
mov
and
jmp
loope
shlb
scas
lret
adc
add
sbb
lea
jmp
sahf
sbb
dec
pusha
jmp
movsb
and
mov
dec
mov
shlb
iret
or
dec
iret
pushf
addl
jmp
mov
scas
push
add
jnp
in
dec
loopne
sub
movb
movl
popa
jmp
jae
imul
test
pop
repz
test
cmp
pop
push
call
jmp
call
jmp
sahf
pop
xchg
adc
inc
enter
and
fs
cwtl
sbb
or
inc
push
dec
inc
dec
xor
cs
insb
add
int
aam
sub
pop
aas
lret
inc
aam
dec
jmp
xchg
call
jmp
or
add
xchg
repz
add
add
mov
lea
ret
jmp
pop
xchg
pop
bound
dec
sub
loope
push
add
add
mov
sub
ret
insb
mov
dec
in
sbb
lret
call
mov
test
adc
add
inc
fmuls
fsubrs
addl
jmp
sbb
call
add
pop
mov
addl
mov
popl
jmp
fcmovne
pop
mov
jmp
jmp
rorl
mov
inc
sub
bound
add
add
add
xchg
jle
mov
fildl
push
call
jmp
xchg
mov
push
test
mov
pusha
cld
xchg
cmc
add
adc
aas
lahf
inc
shll
subl
adc
add
add
inc
popf
lods
lret
inc
shll
addl
pusha
jmp
aaa
mov
fisttps
or
sub
jmp
inc
push
xor
sub
adc
pop
ds
aam
fisttpl
inc
and
add
pushl
lea
jmp
xorl
push
add
add
test
into
iret
ret
mov
lahf
jae
in
push
call
push
jmp
pop
mov
addl
jmp
mov
scas
fistps
test
lods
mov
stos
int3
sub
sub
add
jmp
lret
movsb
push
mov
sbb
sbb
push
cmp
sldt
add
add
add
jae
fs
ret
addl
jmp
pop
sub
movb
movl
popa
jmp
fsts
mov
add
mov
mov
faddl
jge
inc
and
add
push
push
mov
jg
arpl
inc
daa
shlb
arpl
addr16
pop
pop
and
std
mov
popl
jmp
mull
icebp
or
pop
lret
scas
pop
cld
pop
push
adc
xor
lea
jmp
inc
inc
and
sbb
sub
inc
rolb
sarb
mov
fs
jmp
inc
xlat
inc
and
aaa
jb
jne
out
dec
xchg
or
in
in
mov
rorb
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
jge
inc
into
jmp
call
dec
push
dec
dec
push
inc
push
dec
cs
dec
dec
add
push
inc
jecxz
push
in
dec
and
decl
sub
xlat
jp
nop
cld
js
cmc
jmp
mov
mov
jmp
jmp
movsb
cmp
mov
in
jge
jp
in
push
push
iret
pop
cmp
jle
and
test
xor
pushf
addl
pusha
jmp
les
mov
jmp
mov
mov
sbb
sub
jo
pop
xchg
adc
stos
fimuls
popf
lea
ret
adc
sub
sub
jbe
mov
lret
lcall
fwait
dec
stos
aad
orl
mov
and
movl
jmp
jl
insl
hlt
pop
jecxz
add
mov
add
add
add
mov
sub
jp
dec
test
xlat
sub
call
jmp
lods
xor
add
pop
lahf
jmp
in
imul
xchg
icebp
add
cmp
push
jmp
mov
scas
sbb
add
sahf
jl
movsb
ret
ds
or
call
jmp
stos
and
or
in
cli
xor
call
jmp
lock
mov
jmp
out
mov
pushf
call
mov
js
and
mov
sti
pop
out
dec
addr16
popa
add
sbb
push
call
jmp
sub
and
cmp
xor
jmp
jmp
nop
add
xlat
inc
and
js
inc
mov
xorl
aad
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
out
rcll
orl
add
add
daa
shlb
sbb
loope
in
cmp
addl
pusha
jmp
push
lahf
push
xchg
add
cmp
jmp
ljmp
adc
out
adc
pop
cltd
mov
mov
popa
popf
lea
ret
pop
fsubrs
jno
sbb
jne
jne
sbb
aaa
pushf
add
sbb
sbb
push
jne
push
push
leave
cli
inc
pop
sub
jmp
sub
inc
and
ja
cmc
test
sub
xchg
movl
movl
jmp
add
add
add
jmp
push
mov
sub
and
incl
popf
ret
xor
mov
push
call
jmp
int
lret
scas
pop
repnz
setg
or
into
adc
incl
movw
movzbl
add
cmp
je
jmp
stos
cmp
xlat
inc
and
push
dec
push
pushf
addl
pusha
jmp
and
push
inc
adc
jmp
ret
ja
adc
jmp
call
jmp
xchg
or
cmp
and
incl
popf
ret
call
jmp
lea
xchg
adc
bnd
cwtl
jb
mov
add
inc
push
xor
cs
insb
add
stos
jecxz
mov
mov
cmc
sub
add
jmp
mov
jmp
call
jmp
inc
rclb
es
xor
call
push
cmp
pop
sub
sbb
xchg
and
mov
fwait
decb
call
jmp
test
push
inc
out
mov
popa
incl
popf
ret
loope
cmp
jmp
adc
call
jmp
addl
stos
xor
movzbl
add
jmp
enter
add
add
jmp
mov
mov
lcall
jmp
mov
movl
movw
jmp
cmp
add
add
jmp
aas
mov
pop
out
add
ret
call
movsl
dec
inc
dec
sbb
inc
mov
in
ret
mov
lahf
test
lcall
ss
mov
ljmp
call
jmp
daa
mov
pushf
loope
test
or
add
push
push
inc
push
xor
cs
insb
add
nop
xchg
dec
loope
jmp
sbb
in
mov
call
push
push
inc
push
xor
cs
insb
add
nop
lods
and
xchg
adc
lcall
aas
mov
xorl
and
jmp
or
mov
add
add
jmp
inc
int3
inc
and
push
pop
sub
mov
jmp
jp
cmp
add
add
jmp
cmp
inc
inc
cmpsb
call
leave
mov
nop
push
sub
dec
in
push
je
popf
inc
push
pushf
xor
push
jo
push
call
jmp
mov
xchg
repnz
aas
push
pushf
addl
pusha
jmp
mov
or
add
push
push
inc
push
xor
cs
insb
add
sub
fidivs
pop
pushf
ficoms
pop
sub
jmp
aaa
mov
shll
xchg
mov
dec
mov
inc
add
ss
sub
jmp
call
jmp
pusha
repz
cmc
pop
jp
mov
popa
incl
popf
ret
lret
pop
iret
stos
pop
pop
mov
gs
popa
cli
call
sbb
cmpsb
dec
mov
idivb
ljmp
push
call
jmp
fmul
call
jmp
cmp
mov
mov
movl
sbb
adc
adc
xchg
notl
mov
movl
jmp
call
jmp
xchg
add
fwait
pop
sub
jmp
push
les
int3
cs
add
jmp
xchg
add
std
or
sbb
rol
adc
popf
ret
movzbl
add
cmp
jmp
addr16
add
add
jmp
mov
int3
cmp
nop
das
fcomps
pushf
addl
pusha
jmp
mov
ja
or
sbb
add
and
jl
sub
jmp
call
jmp
mov
xchg
cmp
xor
pop
inc
pushf
addl
pusha
jmp
dec
fisttpl
stos
xor
icebp
cmpsl
xchg
mov
movl
movw
movzbl
jmp
adc
add
add
jmp
cli
push
sbb
aad
fwait
dec
call
sub
mov
cmp
push
adc
xchg
pop
enter
mov
mov
jmp
pop
lds
iret
fs
or
incl
popf
ret
xchg
or
mov
add
cmp
je
jmp
ss
int
and
pop
sub
jmp
and
add
add
jmp
lods
xor
jns
push
pushf
addl
pusha
jmp
push
sub
add
add
scas
add
jmp
lea
add
add
push
dec
inc
dec
xor
cs
insb
add
nop
and
mov
adc
push
cwtl
sbb
pop
stos
call
mov
jmp
sub
pop
sub
call
jmp
loope
shlb
pop
sub
jmp
das
call
jmp
push
mov
gs
inc
fidivl
sub
add
push
push
inc
push
xor
cs
insb
add
nop
mov
mov
addl
lock
lcall
adc
addl
and
jmp
call
jmp
mov
fsubrs
je
jmp
adc
fadds
lds
adc
add
jmp
adc
pop
mov
add
add
jmp
mov
lds
inc
fisubl
and
incl
popf
ret
ret
fisubrl
push
je
jmp
sbb
pusha
pop
call
jmp
pop
fisttps
flds
add
jl
xor
incl
popf
ret
cmc
aam
pop
sub
jmp
iret
push
call
jmp
mov
add
incl
add
out
lock
bound
add
add
push
inc
push
dec
xor
cs
insb
add
nop
in
pop
or
jmp
xor
in
call
jmp
ja
xchg
testb
adc
inc
dec
leave
sbb
pop
ss
pop
sbb
loopne
xchg
into
xchg
jmp
and
test
in
push
pushf
addl
pusha
jmp
call
add
jmp
xor
insb
ljmp
ret
adc
mov
movl
movw
movzbl
add
cmp
je
jmp
cmp
call
jmp
adc
jmp
add
add
push
inc
push
dec
xor
cs
insb
add
insb
orb
push
test
push
imul
fmul
pop
sub
jmp
add
pop
jp
arpl
mov
jns
pusha
or
xor
cwtl
jecxz
xor
fistl
add
jb
cmp
ret
sti
mov
out
ret
adc
mov
jmp
adcl
loopne
mov
mov
dec
mov
ds
lds
test
pop
call
jmp
or
pop
ljmp
incl
movw
jmp
dec
fimull
fidivl
or
dec
fimull
fidivrl
cmp
mov
sbb
add
insl
cmp
cmp
mov
push
xor
mov
lock
jmp
mov
inc
and
popa
incl
popf
ret
stos
aaa
cmpsl
ret
clc
insb
movzbl
add
jmp
insl
mulb
dec
mov
mov
jbe
cmpl
inc
mov
popa
incl
popf
ret
scas
push
jmp
mov
in
insl
repnz
pop
repnz
hlt
push
es
ret
push
ds
jmp
cwtl
cmp
aam
sub
jnp
in
aas
and
and
pushf
addl
jmp
daa
movsl
xor
and
xchg
adc
mov
call
jmp
insb
jmp
fldenv
xchg
lea
sub
jmp
hlt
adc
add
add
in
cltd
xlat
dec
mov
test
xchg
or
repz
or
add
leave
dec
ret
mov
or
inc
push
inc
push
dec
xor
cs
insb
add
nop
add
push
clc
jmp
mov
xchg
icebp
add
test
test
cmp
mov
mov
popa
incl
popf
ret
pop
aam
sub
or
mov
addl
pusha
jmp
push
popf
or
fstpt
js
add
es
or
sub
mov
movl
movw
movzbl
add
cmp
je
jmp
jbe
imul
push
imul
fsubl
xor
call
jmp
pop
iret
pop
cmp
jo
push
xchg
repz
int
xor
rolb
sarb
call
add
add
push
inc
push
dec
xor
cs
insb
add
imul
and
cmp
push
shlb
jmp
int3
stc
decl
insb
dec
rolb
shlb
mov
gs
jno
ljmp
addr16
push
mov
push
add
add
push
adc
stc
sub
mov
dec
in
aad
fnsetpm(287
std
inc
jmp
adc
and
mov
arpl
cmp
nop
faddl
dec
add
push
pushf
addl
pusha
jmp
cmpsb
aas
scas
lret
rcrb
pop
sub
jmp
ljmp
xchg
jmp
scas
xor
std
insl
hlt
pop
mov
call
aad
cmpsl
int3
mov
popa
incl
popf
ret
je
inc
sub
pop
aas
ret
push
lds
sahf
and
xchg
add
jo
mov
sub
mov
movl
movw
movzbl
add
cmp
je
jmp
or
mov
call
data16
into
mov
sub
jp
dec
test
mov
add
add
test
shlb
call
dec
push
dec
dec
push
inc
push
dec
cs
dec
dec
add
cmp
decl
insb
out
jg
jmp
lret
in
push
call
jmp
mov
lods
mov
loop
mov
jg
inc
outsb
xchg
addl
jmp
mov
movw
movzbl
add
cmp
je
jmp
in
jge
negl
ljmp
add
inc
inc
push
inc
push
dec
xor
cs
insb
add
xor
jae
in
dec
les
int3
sbb
call
jmp
or
push
jno
imul
adcl
ljmp
je
xchg
xchg
call
jmp
es
inc
mov
xor
add
pop
sub
mov
jmp
pushf
or
sbb
out
jl
negb
sbb
and
imul
pushf
addl
pusha
jmp
xor
cwtl
push
imul
mov
movsb
mov
popa
popf
ret
mov
mov
fwait
or
xor
adc
ss
pop
jbe
pop
add
add
loope
mov
mov
mov
mov
xchg
dec
push
call
jmp
fiaddl
mov
out
ret
push
lds
add
adc
dec
push
call
jmp
push
pushf
jmp
xchg
aaa
cmpsl
ret
out
sti
sahf
insl
mov
and
arpl
jno
jecxz
mov
incl
popf
ret
cmp
fadds
sub
add
aas
lods
sub
lds
cs
pop
test
mov
int3
xchg
pop
cmp
adc
incl
movw
movzbl
add
cmp
je
jmp
ja
sub
cmp
call
jmp
cmc
ja
xorb
test
or
outsl
sub
xor
sarl
add
push
push
inc
push
xor
cs
insb
add
lret
aaa
push
mov
sub
or
sar
rcrb
jle
or
push
jns
push
lret
lret
in
jge
testl
call
sbb
cmpsb
dec
mov
idivb
ljmp
cmp
mov
inc
cmc
out
push
call
push
jmp
sub
fmull
movsb
push
mov
jae
or
dec
popa
push
pushf
addl
pusha
jmp
pop
adc
ret
popa
jmp
push
les
int3
cs
lahf
push
pushf
jmp
xor
xor
dec
aas
test
mov
mov
sbb
pop
sub
movb
movl
jmp
adc
out
jnp
mov
out
jbe
cmpl
and
and
add
pushl
lea
jmp
inc
fisttpll
out
jbe
or
add
push
push
inc
push
xor
cs
insb
add
fs
pop
xchg
adc
jb
jmp
pop
sub
jmp
push
call
jmp
jbe
js
ljmp
test
or
fs
mov
adc
add
xchg
push
cwtl
sbb
pop
stos
call
jae
jmp
shlb
xchg
arpl
push
xor
inc
jle
xchg
cmc
add
movsb
push
call
ds
out
enter
popa
nop
jbe
xchg
jb
outsb
pop
xchg
add
sahf
jl
jmp
push
in
add
jmp
add
or
xor
ss
lcall
popf
or
sbb
aad
lret
and
xchg
repnz
mov
addl
mov
popl
jmp
addl
popf
lea
jmp
and
or
sbb
inc
stos
and
aad
in
pop
sub
jmp
cltd
adc
aaa
mov
scas
and
pop
into
test
sub
add
pop
mov
addl
mov
popl
jmp
pop
xchg
add
jnp
movb
jmp
cwtl
or
popf
or
jns
movsl
add
sldt
add
add
add
pop
lea
ret
addl
jmp
cmp
jg
jg
jmp
pop
stos
inc
inc
rolb
sarb
into
pop
leave
test
test
mov
sbb
pop
xchg
repnz
mov
mov
pushl
lea
jmp
xchg
setg
or
lods
add
test
jae
imul
adc
jmp
les
xchg
outsb
jmp
and
mov
div
je
lea
nop
push
popa
nop
jno
push
lret
mov
jo
push
aam
sub
and
mov
lcall
add
jp
push
jmp
jnp
mov
lcall
jp
jp
pop
aam
sub
cli
popf
insb
mov
push
mov
les
xchg
pop
bound
dec
mov
fisubrs
ret
mov
mov
jle
mov
outsl
lcall
jle
test
stos
cmp
sbb
jle
mov
repz
jo
sub
add
jmp
setbe
sahf
and
mov
dec
mov
in
pop
stos
push
loope
sldt
add
add
add
cmp
addl
jmp
lcall
inc
fidivrl
mov
hlt
push
cld
jnp
loop
pop
loop
movsl
es
cs
jl
insb
lret
dec
fdivrs
imul
jnp
in
or
dec
frstor
testb
call
in
sbb
jbe
insb
or
int
js
mov
scas
daa
mov
and
es
aas
pop
test
dec
mov
loop
jmp
sub
jo
xorl
ss
aaa
cmpsb
xor
scas
insl
insl
stc
imul
es
mov
push
xchg
add
jp
dec
fidivrs
inc
daa
shlb
xchg
adc
or
push
lahf
push
mov
xchg
adc
mov
cmpsb
cmp
repz
cmc
inc
cmp
or
cmpsb
and
pop
fisttpll
out
das
lods
and
push
jmp
stc
cwtl
imul
pop
addb
repz
out
mov
lahf
sbb
mov
dec
mov
in
mull
xchg
mov
lods
lret
inc
lea
jge
negl
xor
aad
enter
aad
iret
stos
pop
mov
mul
je
lea
lcall
or
cmp
lahf
punpckhdq
testl
fldcw
ret
sbb
xchg
jle
mull
icebp
pop
adc
lea
test
push
test
jg
mov
pop
int3
stos
fnstenvs
jg
jmp
test
cmp
add
lods
mov
lds
shll
xorl
add
in
outsb
cld
fwait
jbe
iret
dec
frstor
push
std
sbb
jmp
sti
sbb
stos
and
dec
pop
aad
sub
aas
ret
dec
fidivrs
mov
jne
mov
xor
daa
test
pop
test
mov
fwait
decb
enter
mov
dec
mov
iret
cmp
lods
cmp
mov
jecxz
das
mov
push
les
lods
mov
scas
pop
iret
pop
cmp
aas
mull
icebp
pop
imul
add
push
and
jo
jno
xorb
aad
sub
bound
mov
dec
loopne
inc
shll
mov
cli
push
and
notl
xchg
pop
xchg
adc
sbb
icebp
jo
xorl
adc
loopne
cmc
pushf
outsl
lea
mov
jg
push
call
popa
ljmp
lock
bound
sarl
shll
xchg
xchg
push
cmp
das
fistl
lods
pop
mov
xchg
add
sbb
fs
jge
aas
scas
lret
mov
xchg
sbb
push
mov
flds
xchg
add
arpl
xchg
mov
adcl
or
pop
leave
test
out
cmp
lret
push
shlb
xlat
and
sarl
add
sahf
aaa
mov
fwait
insl
int
and
push
shlb
xorb
test
inc
les
int3
sub
or
jge
lock
bound
inc
stos
fwait
sbb
aad
clc
jl
jne
push
sbb
push
pushf
sti
push
hlt
sahf
pop
mov
add
add
pop
sub
mov
movl
movw
movzbl
add
cmp
je
jmp
dec
rclb
addr16
add
jp
xlat
inc
and
cmp
ja
loope
mov
fwait
decb
and
and
aas
scas
lret
fisttps
push
mov
sbbl
xlat
inc
and
cmp
and
mov
aad
int3
mov
mov
xchg
adc
loop
out
mov
insl
sti
imul
push
push
popf
or
roll
aad
out
out
mov
mov
jnp
je
out
pop
shll
xorb
outsb
cld
fwait
jbe
or
mov
faddl
sbb
insl
mov
fidivrl
scas
mov
and
repz
jle
mov
fildll
ret
mov
lods
lret
inc
movsb
outsl
in
sbb
cmp
bound
push
cmp
and
aam
fimull
fidivrl
push
xchg
add
jnp
sbb
fmull
mov
jecxz
jne
repnz
lock
lds
cmc
dec
fdivl
in
das
mov
sub
lcall
fistpll
xor
adc
push
xor
addr16
xor
sbb
sub
ja
xorb
dec
fidivrs
frstor
push
movsb
and
pop
cmp
dec
in
hlt
xchg
outsb
mov
icebp
sbb
repz
sbb
imul
sub
xchg
cmc
add
mov
lods
dec
rcll
and
mov
jecxz
mov
add
mov
aam
stc
imul
dec
sub
sub
sarl
pop
int
and
and
orb
push
imul
xor
insb
loop
je
loope
ljmp
jbe
jb
mov
inc
mov
mov
mov
addr16
inc
or
cmp
cltd
mov
jmp
lret
mov
mov
cmp
mov
jg
pop
fcomps
test
mov
push
divl
shlb
fs
pop
mov
movsl
cmpsl
and
in
sbb
movsl
int3
aas
fildll
mov
dec
rcll
or
je
out
add
jle
call
dec
mov
lds
testl
and
lahf
push
repnz
lock
lds
test
pop
test
mov
lret
pop
lret
lret
or
popf
or
rolb
shlb
adc
and
inc
es
ret
pop
enter
sub
je
jns
jmp
inc
fdivl
in
jb
jge
testl
outsb
shrd
mov
and
xor
scas
jp
movsl
xor
in
sbb
or
mov
xchg
je
xlat
inc
and
ss
gs
sbb
cmpsb
dec
xor
and
cmp
mov
and
cmp
jmp
and
icebp
jge
je
popa
ja
xorb
xor
dec
frstor
lahf
push
loope
loopne
jb
rolb
mov
out
cmp
mov
xchg
gs
pushf
outsl
fmull
mov
hlt
xchg
outsb
xchg
das
leave
push
shll
mov
clc
push
enter
popa
adc
popa
std
insl
hlt
pop
lods
loope
in
mov
inc
mov
loop
in
je
xor
lcall
or
sbb
rorl
pop
jecxz
push
in
mov
stos
into
cmp
pop
lods
dec
lcall
fmuls
fdivrs
jbe
pusha
pop
repnz
mov
call
addb
aas
lret
dec
fstpt
or
jne
jno
xorb
mulb
sbb
jmp
push
adcl
adcl
test
mov
setge
jp
jp
xor
dec
frstor
mov
sbb
pop
ret
ret
xor
int
mov
dec
ret
std
adc
jecxz
adc
sub
xchg
out
jno
xorb
aam
sub
sub
ds
xchg
or
dec
sbb
or
add
xlat
inc
and
cmp
adc
test
nop
adc
in
sbb
push
shll
imul
stc
mov
xchg
pop
idivb
je
imul
inc
mov
mov
fmull
push
xor
sub
xchg
testb
jp
or
or
xor
push
lret
lahf
loopne
in
jle
jl
jns
jmp
pop
enter
and
pop
enter
rorl
mov
and
movsl
add
cld
imul
insl
aam
in
sbb
mov
and
sti
push
push
lret
lret
mov
xchg
adc
addl
xor
bnd
xchg
cli
jns
mov
add
push
test
push
ds
adc
sbb
jg
push
xchg
repz
test
aam
push
fimuls
or
arpl
xchg
xchg
loop
push
xchg
repz
out
call
clc
push
lahf
push
pop
mov
gs
popa
cmp
lret
pop
enter
movsb
xor
cmp
out
jns
mov
mov
xchg
adc
lcall
imul
dec
fstpt
loop
je
jl
jno
jecxz
faddl
mov
jmp
cmpsl
adc
mov
pop
fisttpll
out
es
cmp
dec
sbb
inc
pusha
out
adc
or
add
adc
clc
outsb
or
push
pop
lcall
inc
and
xor
lcall
jb
in
out
std
test
test
cltd
clc
or
mov
fwait
decb
jp
jle
mov
dec
mov
jl
gs
jo
loop
leave
pop
iret
stos
pop
shl
in
jle
xchg
pop
xchg
repnz
in
jp
jp
xor
ss
mov
dec
mov
fsubrs
fdiv
push
inc
fimull
fidivl
cs
enter
popa
dec
inc
and
imul
call
lds
pushf
outsl
ljmp
lods
sub
adc
insb
in
bound
jg
jmp
pop
scas
inc
adc
push
roll
sarl
sbb
dec
lds
iret
das
push
inc
mov
idivb
popa
add
pop
or
sbb
add
jae
jge
je
insb
les
mov
mov
and
xlat
and
xchg
outsb
std
insl
hlt
pop
dec
fisttps
flds
mov
std
outsl
lcall
fnstcw
ret
movsl
or
mov
out
pop
mov
xchg
sub
lods
cmp
inc
shlb
and
mov
mov
mov
in
aad
dec
lret
cwtl
decl
fidivrs
outsl
or
loope
pop
repnz
test
test
pop
test
push
fisttpl
fnsave
push
rolb
shlb
ficompl
stos
data16
test
or
in
negb
mov
es
cs
iret
pop
cmp
cmp
pushf
xor
inc
repnz
test
lds
iret
and
fs
popf
insb
cwtl
pop
fwait
or
jae
jo
xorl
lea
mov
jg
dec
mov
ficomps
pop
cmp
cmp
sbb
cmp
mov
jecxz
and
cs
in
sbb
inc
rorl
mov
jnp
in
inc
clc
gs
pushf
outsl
ficoml
pop
cmp
jle
sub
aad
sub
pop
mov
mov
repz
cmc
daa
clc
jns
mov
push
or
les
jle
call
jno
pusha
cwtl
sbb
aad
lret
pop
and
cmp
sub
setg
or
idivl
out
gs
pushf
outsl
sbbl
add
sahf
jp
jae
xchg
pushf
adc
cmp
mov
mov
insb
loop
je
mull
icebp
or
xchg
pop
bound
sub
and
jge
je
addr16
push
lret
mov
std
insl
hlt
pop
in
mov
aad
xor
cltd
push
pop
test
imul
add
pop
and
imull
lcall
pusha
xlat
inc
jecxz
push
in
jb
jge
testl
movsb
or
xchg
adc
push
lahf
push
cmp
addl
testl
add
sbb
mov
gs
je
lock
bound
adc
jbe
cmpl
in
sbb
dec
pop
aam
sub
notl
and
lock
leave
pop
cmp
sub
pop
enter
sbb
mov
jg
iret
pop
repnz
fs
push
les
int3
imul
lret
xchg
xchg
cmp
and
out
or
scas
xor
int
int
mov
cmp
sbbl
xor
pushf
xor
adc
mov
dec
mov
sbb
pop
negl
scas
pop
fdivrl
and
cmpsl
and
addl
lock
aas
mov
or
mov
cmpsl
mov
outsl
ljmp
inc
and
xor
push
fwait
adc
jg
mov
orl
sbb
scas
and
cmp
stos
aas
scas
lret
std
outsb
cld
fwait
jbe
pop
leave
pop
cmp
outsb
push
xchg
add
jg
mov
mov
mov
sbb
sub
push
lds
insl
clc
outsb
or
pop
sub
loope
call
lret
lret
scas
aas
pop
test
mov
inc
fmuls
fsubrs
rclb
imul
adc
aas
mov
mov
out
cmp
push
aaa
ret
adcl
test
jle
mov
mov
les
inc
es
sub
inc
sub
dec
xor
popa
ficoms
mov
mov
and
in
lock
bound
bound
cs
xor
dec
push
les
int3
and
call
add
or
cmp
jnp
mov
pop
xchg
pop
bound
inc
mov
jp
jl
negb
xor
das
mov
jecxz
out
mov
lods
xor
int
xchg
mov
xchg
pop
into
test
int3
stos
shr
ja
xorb
setg
or
and
mov
test
push
pusha
notb
xor
scas
dec
nop
pop
xchg
adc
xchg
adc
in
sbb
lret
dec
ret
mov
push
shll
add
pop
jg
imul
sbb
pop
int3
stos
rcr
mov
and
pop
inc
leave
pop
cmp
sub
push
cld
push
fisttpll
out
mov
mov
aad
int3
pop
roll
aad
sub
and
pop
xchg
pop
bound
cmp
and
out
jne
mov
sub
out
jnp
mov
mov
mov
mov
mov
and
mov
sbb
aas
xchg
jns
jp
in
pop
rclb
inc
xor
add
pop
enter
mov
lahf
cli
or
insb
in
bound
in
mov
push
movsb
dec
push
pop
jp
ja
mov
ljmp
std
insl
hlt
pop
out
pop
xchg
adc
jae
sub
sbb
inc
roll
aad
push
fimuls
cmova
pop
aas
lret
cmp
dec
fdivl
in
pusha
pop
repnz
cwtl
setg
or
cmpsb
xor
pop
xchg
repnz
and
es
mov
in
out
jno
stos
xor
popf
or
push
lret
cmc
call
shrb
daa
inc
mov
inc
fldt
cmpsb
xor
scas
pop
and
outsl
lcall
mov
mov
fstpl
stos
data16
push
jns
jmp
call
lahf
jnp
xchg
cmc
add
out
imul
jo
xorl
insb
mov
xchg
add
xor
jg
mov
movsb
xor
xchg
add
setg
or
lods
daa
mov
and
scas
and
dec
fistpll
add
sahf
imul
aam
sbb
xchg
add
push
xor
and
subb
popa
add
push
adc
movsl
lods
lret
inc
lock
mov
inc
shlb
clc
lahf
push
sbb
js
jp
in
inc
aad
fidivrs
ljmp
out
sbb
cmp
lea
roll
aad
xor
pop
sbb
xor
in
bound
xchg
testb
adc
xor
sahf
push
test
push
aad
inc
shlb
in
jle
in
popa
icebp
nop
arpl
jmp
jnp
iret
arpl
xchg
gs
jnp
mov
sti
imul
or
in
xlat
mov
mov
and
or
cli
push
popf
or
add
test
inc
and
ja
xchg
add
cs
rolb
sarb
popa
icebp
nop
arpl
sub
dec
aad
sub
push
xchg
add
lahf
punpckhdq
pop
mov
mov
mov
lods
dec
inc
lds
iret
das
push
mov
fs
adc
push
push
xlat
inc
and
ss
mov
and
xchg
in
mov
cmp
mov
jg
fs
sbb
sbb
outsl
lcall
mov
mov
inc
mov
insl
insb
or
repz
loope
mov
mov
jns
dec
jno
jne
out
cvtpi2ps
push
lds
jne
ja
loope
cwtl
adc
mov
inc
mov
adc
stos
xor
push
mov
xor
scas
pop
and
mov
inc
mov
and
into
pop
cmp
push
pushf
cmp
push
test
jge
pop
or
pop
fmuls
fdivrs
mov
icebp
jne
mov
arpl
jp
in
or
sbb
jns
mov
cmc
jge
je
addr16
sbb
in
fs
popf
insb
cmpsl
idivl
mov
out
sbb
adc
mov
aad
pusha
notb
xor
dec
or
pop
leave
pop
cmp
outsb
mov
fidivrl
pop
cmp
mov
sbb
xchg
and
xchg
cld
paddb
mov
gs
and
push
sbb
dec
fnstcw
push
pop
int3
stos
iretw
xlat
dec
fdivrs
jns
jmp
insb
int
and
push
jp
outsb
or
sub
push
mov
iret
stos
pop
xchg
insl
hlt
pop
out
adc
in
sbb
mov
cmpsb
scas
sub
inc
shll
or
jnp
sbb
popf
or
cli
push
data16
xchg
outsb
mov
clc
dec
push
xor
rcrl
fs
je
je
out
push
push
ret
ret
nop
push
popa
nop
aaa
dec
fisttpll
out
jae
jnp
in
or
jns
mov
hlt
pusha
notb
cs
mov
inc
mov
push
ret
cmpsb
push
in
mov
insl
hlt
push
cld
inc
filds
mov
out
mull
icebp
dec
push
into
pop
cmp
jg
jne
mov
lods
or
mov
xchg
lcall
repz
test
mov
or
cmc
jno
xorb
lret
pop
ds
pop
fisttps
dec
iret
pop
cmp
lods
and
add
movsb
sub
lds
mov
scas
leave
cmp
insb
loop
pop
loop
idivl
mov
mov
test
cmp
inc
into
pop
cmp
and
pop
iret
stos
pop
sub
xor
cltd
or
jecxz,pt
loopne
jb
lds
mov
jecxz
jne
nop
add
std
or
dec
fisttpll
out
stos
aaa
cmpsl
ret
pop
mov
gs
and
cltd
or
xor
add
sub
push
mov
popl
lods
cmc
outsl
lcall
pushf
sti
push
mov
or
test
gs
pushf
outsl
mov
jbe
ret
mov
mov
push
in
push
mov
mov
sbb
sahf
sbb
pop
mov
scas
leave
cmp
pop
rolb
shlb
fisttpll
out
mov
shlb
jl
notb
jnp
push
cld
push
xchg
cltd
clc
or
mov
ret
dec
sub
xor
xchg
testb
mov
or
mov
dec
fdivrl
notb
push
jns
das
lahf
or
and
pop
ret
ret
add
inc
shll
imul
and
mov
repz
stos
setg
or
jmp
std
jge
je
push
cmpsb
sub
sub
pop
jp
jne
fdivl
in
divb
xorb
aaa
cmpsl
ret
pusha
jmp
push
in
add
mov
push
fmuls
fdivrs
sub
les
int3
and
ljmp
rcll
push
mov
aaa
rcll
push
fwait
or
outsb
scas
cmp
mov
mov
cs
or
jnp
mov
inc
mov
mov
sub
das
dec
mov
push
mov
xorl
mov
aam
ret
cmpsb
push
in
mov
mov
sbb
inc
mov
movsb
cmp
or
adc
xchg
add
adc
lea
test
pop
jecxz
push
in
fstps
test
push
lds
pop
adcb
andb
mov
sbb
inc
mov
sahf
adc
in
sbb
dec
lds
iret
push
mov
dec
mov
push
in
mov
popl
xchg
icebp
add
adc
push
imul
insl
std
test
jp
jg
jmp
mov
in
enter
or
pop
cmp
sub
pop
int3
stos
data16
cmpsb
xor
scas
inc
das
mov
jnp
ja
loope
add
adc
in
jnp
mov
pop
lahf
punpckhdq
sub
jno
jecxz
loopne
adc
xor
xchg
pop
bound
or
addl
sbb
add
sbb
insl
sub
mov
jg
outsb
or
sbb
dec
sub
or
js
mov
or
cmp
icebp
jg
mov
or
bound
jno
jecxz
lret
mov
jae
in
movsb
das
mov
mov
setl
push
movsb
push
ljmp
test
sahf
or
and
mov
xchg
push
xchg
repz
out
pop
iret
stos
pop
rclb
daa
nop
or
aam
sub
lds
das
fidivl
lods
lret
inc
icebp
call
aad
setg
or
xor
jns
xor
imul
insl
lea
mov
inc
mov
xchg
mov
call
xchg
push
inc
and
xor
aam
adcl
rclb
addr16
inc
xlat
mov
test
jp
in
add
mov
out
lcall
jmp
jge
jp
gs
or
pop
cmp
and
dec
das
fisubrl
sub
jb
jno
jecxz
scas
cmp
and
dec
fdivrs
mov
nop
push
popa
nop
popa
push
xchg
add
and
in
xchg
or
in
stos
lret
pop
lret
scas
pop
bnd
pop
repnz
fs
push
lds
iret
cmp
push
pusha
rcll
inc
movsb
cmp
js
sbb
xchg
add
jo
sub
push
test
push
divl
fistpl
xchg
mov
mov
movsb
cmp
dec
aaa
mov
mov
cld
mov
rclb
dec
sub
cmp
xchg
or
jle
xchg
mov
push
xor
cmp
lcall
mov
cmp
mov
loop
loope
jae
icebp
gs
pushf
outsl
es
inc
mov
loope
jmp
jge
sbb
inc
fldt
cmpsb
inc
shll
repnz
fs
jl
jne
cmp
push
mov
mov
rolb
sarb
rcll
jbe
out
jg
jmp
mov
push
roll
roll
xor
pop
stos
dec
in
jae
xchg
xor
adcl
test
mulb
adc
repz
lods
pop
mov
pop
mov
dec
fdivrl
fistpll
fstpt
dec
sub
cmp
scas
ss
adc
inc
xlat
inc
and
sub
pop
jp
xor
pop
int3
stos
movsw
mov
ret
push
lret
mov
mov
inc
mov
adcb
mov
dec
mov
add
inc
or
or
test
mov
sbb
je
imulb
lahf
push
jmp
lret
sub
lods
or
jp
outsb
or
sub
mov
inc
mov
int3
aas
fcoml
repz
pop
xchg
adc
mov
cmpsb
in
notb
adc
insl
mov
fists
dec
sub
jg
mov
stos
and
mov
xchg
jb
pop
iret
stos
pop
test
jp
in
add
aad
mov
mov
and
pusha
icebp
popa
add
add
arpl
xchg
les
add
xor
push
mov
dec
sub
xor
adcl
inc
mov
out
adcl
test
cmp
loopne
adc
dec
dec
roll
shrl
add
std
or
int3
push
shll
adc
dec
aad
fidivrs
loopne
jb
push
pop
cmp
push
add
sti
js
mov
outsl
in
jge
notl
jo
xorl
jnp
mov
and
repz
xchg
cmc
add
mov
pushf
sti
push
decl
adc
mov
xor
add
jae
jne
xchg
cmc
add
in
bound
push
popa
nop
jb
aas
scas
lret
cmp
inc
cli
push
xor
inc
rolb
shlb
in
jge
divl
arpl
imul
sbb
jl
jne
outsb
jg
jns
jmp
inc
fisttpl
fnstsw
pusha
pop
repnz
scas
aas
pop
test
mov
xchg
icebp
add
ja
jmp
leave
in
out
mov
fildl
mov
stc
rclb
inc
leave
push
lahf
push
addb
icebp
add
inc
rclb
es
dec
fnstcw
popf
in
imull
inc
lret
dec
ret
mov
pusha
notb
inc
and
cmp
jo
xorl
icebp
pop
cmp
jo
inc
xlat
mov
mov
add
inc
int
and
aaa
dec
lds
iret
and
xchg
jb
jnp
dec
fidivrs
mov
and
or
fs
imul
cmp
fs
popf
insb
mov
mov
inc
aad
sub
xor
inc
in
lds
iret
cmp
push
test
push
test
cld
xchg
cmc
add
imulb
test
pop
pop
jp
ds
cwtl
insb
lock
pop
icebp
insb
loop
je
xchg
aaa
cmpsl
ret
fs
popf
insb
jmp
mov
inc
mov
dec
iret
pop
cmp
xor
jns
mov
cmp
push
lds
call
lahf
adc
jnp
mov
imul
sbb
pop
cmp
pop
pushf
xor
add
rcrb
stos
pop
mov
repz
wbinvd
mov
jle
bound
mov
lods
cmp
push
les
out
mov
jo
ja
loope
sbb
sbb
push
mov
jns
arpl
cmc
sbb
jecxz
test
jge
jge
push
xor
jns
push
xor
addr16
leave
pop
cmp
jbe
adc
in
sbb
ret
cmpsb
push
cli
adc
jbe
dec
sub
xor
and
inc
fwait
dec
lret
lret
movsb
cmp
dec
pop
fimull
fidivrl
xchg
adc
push
lahf
push
or
mov
lds
loop
inc
aam
dec
jmp
mov
pop
rolb
sarb
cli
je
lea
mov
jb
insb
or
out
in
jge
testl
dec
mov
adc
sub
inc
mov
mov
sbb
cmp
dec
sbb
dec
fisttpll
out
jns
bound
dec
sub
push
mov
popf
sub
adc
sahf
or
cmpsb
sbb
pop
repnz
fs
cmp
cmc
gs
push
dec
roll
shll
cmp
jl
jne
add
jg
jmp
adc
add
pop
jp
jbe
lock
bound
negl
push
test
push
in
push
jns
mov
dec
push
xor
sub
jno
popa
out
jg
jmp
mov
lret
scas
pop
mov
lea
jl
jne
insl
sti
jbe
cmpl
mov
inc
mov
sbb
out
jge
je
and
lcall
mov
das
iret
inc
roll
sarl
xchg
push
xchg
repz
out
cmp
push
iret
pop
cmp
es
notl
cwtl
add
notl
lods
xor
adc
adc
add
push
lcall
lods
xchg
jg
mov
push
push
call
jmp
or
aad
fistpll
pop
and
bound
adcb
addb
daa
mov
and
mov
pop
pushf
xor
inc
mov
cmpsl
xor
mov
and
cli
aaa
mov
inc
mov
dec
lret
lret
hlt
push
cld
adc
xlat
aaa
cltd
adc
and
xor
push
lds
sbb
jnp
je
loope
adc
or
les
call
ds
js
jle
call
test
lcall
jle
jg
jmp
push
mov
push
in
and
int
les
mov
push
test
push
mov
mov
outsl
lock
inc
sbbl
cmp
rcll
inc
sub
sbb
and
cmc
gs
sbb
jp
jp
push
fisttpl
fnstsw
mov
cmpsb
shll
test
mov
les
int3
and
push
ret
cmpsb
push
mov
in
or
push
cld
pop
jle
fs
xor
insb
xorb
hlt
pop
loope
out
adc
or
out
outsl
loop
pop
loop
movsl
xor
pop
test
jge
jns
pop
leave
test
in
jl
jne
inc
cmc
popa
icebp
nop
arpl
xor
push
insb
or
out
dec
fmuls
fdivrs
ret
push
lds
pushf
add
fwait
add
nop
push
popa
nop
das
sbb
mov
fwait
pop
adcl
stos
cmp
sbb
movl
shrl
jns
jmp
test
mov
push
mov
ds
test
mov
call
xchg
movsl
daa
mov
and
mov
cmpsb
shll
xlat
arpl
xchg
xorl
mov
sti
xchg
push
mov
es
push
movsb
inc
add
leave
pop
cmp
and
aaa
push
mov
xchg
pusha
mov
insl
std
test
je
jp
in
dec
into
pop
int
cmpsb
inc
mov
mov
in
push
out
loopne
jb
mov
mov
hlt
push
cld
or
loopne
loop
call
pop
leave
test
out
mov
and
and
dec
fstpt
popa
add
jbe
push
mov
jmp
jge
pusha
loope
adc
pop
nop
adc
pop
repnz
fs
dec
frstor
dec
mov
aaa
ret
add
stos
cmp
dec
mov
lea
cmc
push
popf
or
cs
roll
aad
outsb
loop
pop
loop
fs
jg
jmp
jb
addr16
aam
dec
mov
pop
sti
fisttps
mov
int3
stos
data16
out
fs
popf
insb
test
pop
iret
stos
pop
shrb
daa
inc
mov
sub
sbb
sbb
and
into
jno
push
mov
out
mov
out
call
pop
into
test
push
imul
and
loop
notl
in
je
fs
insb
loop
je
push
roll
sarl
mov
stos
int
fmull
pop
cmp
cmp
imul
push
orb
clc
or
mov
cmp
shlb
xchg
repz
in
add
xchg
pop
dec
fimuls
push
or
inc
roll
shll
pop
jp
push
mov
lret
lea
mov
sbb
mull
nop
arpl
cld
pop
inc
fldt
out
adc
xor
mov
insl
std
test
lahf
pop
xchg
repnz
xchg
and
jo
xorl
jmp
mov
and
mov
cs
mov
lret
inc
mov
fstpt
inc
lds
iret
das
mov
fstpt
sahf
stc
or
std
js
mov
out
jecxz
jne
out
loop
je
inc
enter
add
push
in
sbb
les
mov
or
jnp
mov
dec
fimull
fidivl
or
push
sbb
roll
mov
sbbl
pop
mov
jns
out
jp
jp
add
aaa
nop
or
add
inc
fisttpll
out
sbbl
sbb
mov
js
ds
push
imul
push
pushf
sti
push
xchg
stos
or
and
aad
sub
cmp
test
mov
fmuls
fdivs
pop
cwtl
push
imul
mov
inc
mov
dec
les
int3
cs
xor
sbb
xor
int
shr
popa
icebp
nop
arpl
xchg
je
jnp
mov
scas
and
into
pop
cmp
ds
add
movsb
ret
ds
inc
fisttpl
fstpl
mov
aad
stos
cmp
inc
scas
cmp
cs
dec
frstor
shrl
cwtl
les
fs
push
mov
es
pop
pop
jp
ds
call
jg
mov
pop
ret
ret
lock
ja
lea
popf
or
jg
mov
cmpsb
xor
scas
dec
lea
in
notb
add
jnp
jne
mov
std
jg
mov
cli
jge
je
insb
das
stos
cmp
dec
ret
dec
fidivrs
pusha
pop
repnz
mov
popl
xchg
repnz
mov
scas
lret
bnd
mov
cwtl
imul
movsl
sub
xor
gs
pushf
outsl
lret
ds
test
pop
lret
lret
cwtl
push
imul
mov
fucomi
or
add
push
push
inc
push
xor
cs
insb
add
nop
xor
jmp
dec
iret
pop
cmp
ss
add
adc
movsb
cmp
inc
push
xchg
jb
outsl
ss
inc
mov
push
push
mov
jl
enter
test
adc
jmp
scas
das
mov
sbb
and
jb
xchg
pop
fwait
or
jns
mov
jle
sub
mov
pop
mov
xchg
js
test
cmp
mov
cmpsb
fstps
scas
pop
mov
mov
inc
mov
mov
fstpt
mov
mov
inc
mov
scas
out
xchg
mov
add
movzbl
jmp
adcb
jecxz
cld
arpl
push
cld
push
sub
add
aaa
fldl
mov
sbb
aas
inc
add
mulb
push
push
roll
aad
aam
fidivrs
mov
inc
xlat
mov
enter
dec
mov
mov
mov
insb
loop
je
pop
fisttpll
out
mov
ret
add
adc
inc
fidivrl
aam
int3
ficoml
mov
push
loopne
adc
sub
xchg
jb
popa
aas
mov
inc
mov
fsts
mov
add
js
jb
xchg
rolb
mov
stos
addr16
push
cld
or
mov
hlt
push
cld
aas
pop
int3
inc
and
mov
or
adcb
andb
sub
insb
loop
je
xor
and
jnp
pop
int3
stos
iretw
int3
push
shll
dec
mov
dec
mov
xchg
loopw
fimuls
popa
lods
and
pusha
mov
filds
cmp
xchg
repz
in
ret
mov
adc
popa
jp
insb
or
call
jae
pushf
push
test
push
cld
sahf
sbb
jns
mov
or
add
jb
adc
rolb
add
push
jp
jp
jae
insl
hlt
pop
in
stos
and
daa
mov
ret
mov
cmpsl
ret
sti
push
lahf
push
jmp
adc
popa
sbb
pusha
movsl
aaa
cmpsl
ret
pop
int3
inc
and
int3
stos
xchg
pushf
add
and
push
popa
icebp
nop
arpl
mov
ljmp
cmc
outsl
lcall
and
mov
je
add
movsb
cmp
sub
push
shll
cmp
das
mov
rol
aad
dec
scas
orl
decb
ret
jns
in
push
inc
int3
inc
and
call
sub
jns
mov
orb
sti
push
repnz
sub
pop
cmp
es
mov
mov
scas
leave
cmp
insl
std
insl
hlt
pop
in
add
add
pop
leave
test
decb
dec
sub
sbb
movsl
xor
dec
fidivrs
jecxz
jne
cmpsb
xor
or
mov
lea
jmp
rorb
mov
xor
or
pop
mov
push
scas
andb
and
icebp
add
popa
fdiv
pop
lret
scas
pop
faddl
push
jle
call
mov
sub
cmp
or
pop
int3
stos
data16
js
inc
push
xor
and
rcll
movb
sbb
sub
inc
mov
stos
cmp
inc
loop
loop
je
orl
sbb
push
popa
nop
jns
dec
fistpll
addr16
pop
jecxz
out
jo
push
ret
ret
in
sbb
fs
sbb
cmp
pop
int
lea
lea
lret
lret
cmpsl
aaa
push
mov
push
mov
pushf
outsl
rclb
lea
scas
aas
pop
test
lds
scas
aas
pop
test
aam
mov
pop
lcall
jns
push
cmp
mov
movsl
pop
fisttpll
out
pop
inc
cltd
pop
pop
cmpsl
pusha
pushf
jmp
cli
sbb
push
add
cmp
stos
cmp
add
movsb
pop
pushf
jmp
push
leave
pop
cmp
jle
cld
mov
adc
jmp
or
xor
outsb
or
jg
adc
jo
xchg
xchg
xabort
inc
push
cmp
jmp
fstps
scas
pop
mov
dec
lods
test
mov
lea
sub
lea
jmp
add
loopne
push
mov
jmp
xchg
rep
jmp
jle
jb
push
cld
adc
xchg
jne
mov
dec
mov
cld
sub
jmp
mov
cmpsl
ret
into
inc
fidivrl
out
mov
int3
inc
fidivrl
xchg
pushl
cmp
push
cwtl
push
imul
mov
dec
mov
cmp
dec
decl
mov
cld
jmp
inc
sbb
test
pop
pop
popf
jmp
aaa
mov
cmp
xchg
push
xchg
repz
sti
inc
inc
and
jns
pushf
and
cmc
fs
popf
insb
scas
pop
lret
lret
pop
das
push
call
push
call
lds
cmpsl
push
mov
add
rcrb
pop
cld
push
mov
cmp
cli
decl
in
iret
push
ret
add
adc
addl
jmp
mov
jmp
add
sbb
sti
lock
fnsave
bound
nop
mov
jmp
adc
adc
inc
aam
dec
stc
aad
test
in
add
push
cld
jmp
mov
mov
lods
and
xor
jno
mov
add
jmp
mov
popf
jmp
rclb
cmpsl
push
xchg
popa
icebp
nop
arpl
fdivrl
jmp
sbb
xor
inc
push
mov
loope
jae
pop
outsl
daa
push
fmuls
decl
xchg
add
jge
or
mov
dec
mov
loopne
mov
dec
and
mov
jmp
fs
bound
test
cmp
xchg
sbb
mov
sub
inc
mov
mov
cmp
popl
nop
testl
xchg
mov
xor
scas
pop
roll
mov
call
decl
add
and
imul
mov
inc
aam
dec
lea
in
jg
jle
call
popa
ret
jnp
add
das
mov
mov
and
out
loopne
jb
add
push
int3
int3
xchg
and
fildll
mov
inc
mov
addr16
insl
hlt
pop
lods
pop
push
xor
jno
push
xchg
pushf
popl
jmp
es
clc
gs
pushf
outsl
data16
xchg
outsb
push
arpl
inc
dec
cbtw
jmp
mov
jmp
xchg
or
push
lods
and
xor
jb
xchg
sub
mov
or
fnstcw
outsl
or
shl
jne
mov
fisubrl
push
adc
call
frstor
xchg
andb
or
sbb
int
int
sbb
fidivrl
xchg
cmc
add
mov
pushf
sti
push
mov
fsubrp
sub
mov
jmp
pop
xchg
or
cmp
jo
loop
lods
sub
fsubrp
xchg
dec
inc
shll
adc
add
popf
cld
jmp
aam
xchg
add
jnp
fisttpl
pop
das
rorb
jmp
icebp
popa
icebp
nop
arpl
mov
mov
nop
stos
cmp
cmp
add
leave
pop
ljmp
adc
pop
xor
add
adc
xchg
add
jmp
xor
push
sub
push
scas
adc
loop
add
xor
gs
leave
mov
adc
jge
scas
or
fs
imul
insl
sbbl
sbb
cmpsl
inc
shll
iret
dec
mov
not
jmp
ss
inc
mov
mov
test
jbe
loopne
jp
adc
add
fsubr
jno
xorb
je
lea
push
lret
cmc
pop
not
or
jmp
adc
xchg
add
sahf
sbb
push
shll
lds
or
add
adc
ljmp
test
pop
test
sbb
mov
mov
mov
jmp
jg
xor
ss
movsl
jnp
xchg
testb
inc
movsl
xchg
pop
xchg
adc
shr
loopne
or
in
std
loop
cltd
push
xor
addr16
ss
movzwl
mov
jmp
or
push
outsl
mov
jmp
dec
push
xor
and
push
les
cli
popf
insb
mov
add
cmp
incl
push
jns
popa
mov
scas
leave
cmp
lock
sbb
dec
add
jmp
scas
arpl
jb
icebp
jmp
iret
push
ret
xchg
jmp
cmc
data16
xchg
outsb
fwait
add
pop
int3
inc
and
shlb
mov
add
jmp
and
out
jns
mov
jg
js
ljmp
punpckhbw
xchg
idiv
jge
jne
out
sbb
xor
pop
lret
scas
pop
repnz
out
out
add
pushl
jns
jmp
ss
bound
dec
jmp
cld
sub
jmp
popl
jmp
jns
je
out
pop
or
ss
add
mov
inc
mov
out
sub
mov
jmp
sbb
sub
mov
push
jmp
xor
inc
push
xor
sub
add
cmp
mov
cld
mov
loopne
inc
add
xor
inc
aam
dec
lods
or
inc
lret
pop
ds
test
xchg
repnz
xchg
mov
jmp
les
mov
cmpsb
stc
inc
push
mov
sub
jmp
popa
pushf
popl
jmp
ss
push
fstpt
loopne
adc
sub
imul
add
insl
adc
and
adc
sub
add
sbb
xchg
sbb
or
add
movsl
gs
int
sbb
inc
inc
adc
xlat
std
adc
sub
add
inc
adc
addr16
adc
pop
rcll
mov
pop
add
mov
adc
jb
adc
xlat
std
adc
inc
out
pop
add
std
adc
cmc
sub
pop
push
adc
js
adc
aam
adc
push
adc
xlat
std
adc
cmpsb
rclb
jbe
add
add
ret
add
push
sbb
inc
jge
add
sbb
testb
add
icebp
pop
add
fistl
add
rclb
out
adc
add
sbb
xchg
add
dec
sbb
adc
dec
addr16
pop
dec
adc
test
les
add
sub
fsubrl
and
adc
std
or
add
gs
rcll
add
add
fcomps
adc
fwait
adc
lcall
add
jb
add
adc
bound
adc
and
adc
add
adc
mov
sbb
adc
test
sbb
xchg
add
jbe
adc
mov
sub
xor
adc
cltd
pop
adc
mov
adc
push
mov
add
dec
adc
outsb
aam
add
pop
adc
push
jbe
add
push
adc
repnz
adc
mov
std
adc
fisubrl
add
add
add
std
adc
pop
repz
add
sbb
cmpsb
push
adc
sub
adc
flds
sbb
lcall
add
adc
xlat
std
adc
or
cmp
add
adc
ljmp
add
adc
push
adcb
subl
pop
xor
adc
xchg
add
pop
outsl
adc
mov
adc
xchg
add
inc
adc
jg
sbb
cmpsb
push
adc
or
add
rcll
leave
adc
pop
popa
adc
dec
push
adc
xor
add
adcb
add
ja
adc
in
adc
ja,pt
add
dec
adc
inc
notb
add
inc
adc
jno,pn
add
adc
mov
adc
sub
add
outsb
adc
stos
and
add
add
add
adc
mov
adc
mov
adc
mov
add
add
je
add
add
add
adc
lock
adc
mov
pop
add
es
xchg
push
adc
push
adc
push
adc
and
jmp
or
add
add
xchg
add
mov
add
add
lcall
xchg
add
xor
adc
in
adc
cs
adc
xlat
std
adc
imul
add
std
adc
insl
popa
adc
push
cmp
add
aaa
adc
pop
outsb
adc
cmc
add
lods
scas
adc
xlat
std
adc
mov
jae
add
std
adc
nop
dec
adc
mov
adc
xlat
std
adc
lock
sbb
pop
add
jge
adc
pop
sbb
adc
cmp
sbb
xor
xlat
std
adc
fsubp
pop
add
adc
and
adc
jl
adc
dec
js
add
popa
adc
aad
adc
orl
and
adc
or
add
add
add
push
adc
adc
iret
adc
fsubs
adc
push
je
add
adc
aas
adcl
add
std
adc
out
adc
lcall
add
mov
sbb
loop
adc
mov
pop
add
mov
add
sub
adc
add
dec
adc
inc
adc
fstpt
adc
dec
inc
adc
mov
sbb
in
adc
int
pop
add
pop
adc
sti
and
add
jnp
add
jnp
or
push
mov
es
mov
idivl
mov
jecxz
pushf
fdivrs
push
call
sti
je
into
pop
adc
call
orb
adc
xchg
push
mov
rcrb
sti
rclb
push
movsb
imul
push
call
cmpsb
movsb
ret
ds
xor
xchg
push
call
nop
push
xchg
repz
in
mov
mov
sbb
lahf
or
pushw
push
call
stos
push
call
push
adcl
ret
ret
outsl
lcall
push
es
push
call
jle
je
out
inc
lret
mov
push
call
inc
fisttpll
out
ss
pop
test
jmp
leave
jno
arpl
cmc
pop
daa
jns
movntps
call
pop
les
int3
jnp
or
dec
mov
adc
call
sub
out
sbb
push
call
jmp
xchg
gs
sbb
pop
int3
stos
data16
jo
xorl
adc
call
push
call
icebp
xor
cmp
call
lea
and
repnz
mov
pop
bound
loop
push
call
stc
jle
mov
ds
call
je
add
push
shl
je
push
call
push
rolb
sarb
dec
lret
pop
ds
push
fmuls
fdivrs
scas
aas
pop
test
jnp
call
pop
into
test
aaa
push
mov
lret
inc
movsb
or
cwtl
sbb
add
push
xchg
add
data16
xchg
outsb
leave
test
scas
lret
xor
inc
dec
fdivl
in
roll
mov
lcall
dec
sub
push
lea
test
push
test
cmp
popa
clc
outsb
or
inc
xchg
or
cmp
add
pop
int3
stos
sarw
mov
mov
and
add
pusha
out
lcall
xchg
add
sahf
jo
sbb
mov
push
cltd
fistpl
jb
in
add
push
aad
sub
adc
lret
dec
ret
mov
jmp
mov
rcrb
add
sahf
jl
mov
gs
xor
test
pop
test
and
out
pusha
notb
xchg
repz
in
fs
dec
fdivrs
cmp
mov
push
or
fisttpl
fnstsw
enter
mov
or
sbb
ljmp
or
loope
pop
pop
adc
pop
add
push
adc
pop
into
add
mov
pop
push
push
into
add
dec
xchg
and
mov
xchg
ljmp
sbb
popa
mov
stc
adc
pop
adc
into
sub
imul
sbb
xor
jp
lcall
push
rclb
sub
xchg
add
sahf
jbe
pushf
xor
add
mov
inc
mov
inc
fmuls
fsubrs
insl
std
test
je
arpl
cmc
dec
lock
cld
fwait
jbe
inc
fimuls
push
fwait
add
push
mov
js
adc
mov
mov
sbb
add
push
rolb
shlb
out
adc
mov
mov
add
sbb
leave
gs
adc
pop
adc
scas
xlat
into
outsb
lcall
testl
imul
jmp
xchg
and
fildll
push
mov
nop
push
popa
nop
jns
mov
jns
push
popf
jne
add
enter
sub
dec
fdivrl
mov
and
cli
xchg
sbb
sub
lcall
jnp
in
pop
inc
rolb
sarb
adc
rclb
push
testl
data16
dec
scas
or
push
lret
pop
ds
mov
xchg
mov
test
push
out
lcall
outsb
cld
fwait
jbe
lcall
xchg
mov
mov
cwtl
arpl
insl
hlt
pop
lods
and
out
fstpt
lods
mov
ret
pop
cmp
add
fs
popf
insb
lea
adcb
andb
into
test
push
xor
out
mov
icebp
je
lea
es
cs
and
stos
and
cltd
or
ja
ret
push
lds
test
cltd
clc
or
es
cmp
inc
enter
dec
mov
sub
dec
xor
mov
add
add
outsb
ror
je
sbb
or
loope
dec
push
adc
pop
lcall
xlat
mov
push
jp
jmp
lds
pop
stos
dec
mov
ret
aam
int
adc
stos
add
add
leave
or
pop
outsb
mov
push
adc
pop
into
mov
mov
xchg
adc
jge
add
lcall
dec
inc
and
das
popf
push
xchg
repz
mov
fs
inc
shll
sub
adc
lods
adc
add
add
gs
mov
pop
scas
scas
into
add
xchg
add
jmp
fwait
cs
std
insl
hlt
pop
cmpb
adc
xor
addl
fstps
test
mov
and
fstps
stos
data16
fisttps
pop
jp
jle
pushf
xor
inc
addr16
bound
add
sahf
push
ficoms
lods
pop
mov
stos
cmp
dec
push
jecxz
push
in
pop
fisttpl
fnsave
pop
mov
jg
jle
pop
leave
test
mov
cs
push
test
push
mov
lods
outsl
sub
push
push
cld
push
add
add
popa
mov
pop
or
loope
fs
push
into
ret
fildll
lret
add
adc
mov
add
push
jge
xchg
jp
jl
jns
jmp
adcl
sbb
stos
cmp
pop
push
mov
call
fstps
push
cmp
jb
lcall
mov
add
mov
mov
test
pop
lcall
pushf
push
mov
es
movsl
ret
mov
mov
je
jnp
xchg
testb
notl
jl
aad
mov
cwtl
decl
call
std
pop
test
mov
and
mov
movsl
sub
fdivl
in
pop
aam
sub
test
push
ljmp
into
sbb
add
rcll
mov
mov
pop
fs
scas
mov
xlat
jp
fisttps
push
les
int3
cmp
push
xor
data16
fstpt
adc
roll
sarl
pop
mov
js
popa
in
js
mov
adc
mov
cltd
xor
and
sbb
cld
inc
seta
bound
daa
shlb
mov
js
and
je
inc
and
pop
mov
xchg
adc
clc
sub
dec
ret
mov
pop
leave
test
mov
xchg
jbe
mov
ret
mov
jbe
loopne
pop
fimull
fidivl
fsts
mov
pop
aas
lret
mov
add
popa
mov
mov
pop
jp
into
add
fs
xlat
lcall
and
cmp
or
loopne
std
test
aaa
mov
mov
test
cmp
or
adc
mov
push
add
sbb
mov
ret
inc
jo
adc
pop
outsb
add
jmp
jmp
aaa
cmpsl
aaa
push
mov
movsb
push
mov
add
pusha
sti
imul
pop
fiadds
dec
mov
xorl
dec
fdivrl
ds
test
pop
push
xor
addr16
pop
jp
and
je
out
inc
arpl
insb
or
mov
mov
mov
movsb
jg
xchg
testb
popa
mov
sahf
or
cmpsb
inc
sti
jp
jp
mov
lods
mov
lahf
cli
or
aaa
mov
inc
mov
into
dec
fnstcw
inc
and
cmp
jne
aad
repz
gs
sti
imul
adc
in
or
leave
daa
test
mov
cmpsl
cmp
add
push
test
add
xor
pop
or
loope
mov
pop
xlat
lcall
mov
and
rclb
add
sbb
mov
pop
mov
pop
xlat
xlat
into
add
lcall
out
jle
mov
les
negb
mov
gs
jbe
jle
mov
lds
add
sbb
fimull
fisubrl
out
mov
push
int
and
push
push
mov
push
xor
ja
and
in
jge
testl
xchg
inc
es
jne
gs
sub
push
xor
es
int
and
xor
into
pop
cmp
xor
sbb
test
mov
and
dec
fstpt
adc
popa
inc
enter
outsl
mov
shll
mov
jmp
roll
shll
add
or
pop
jb
jnp
xlat
inc
and
aaa
stos
cmp
xor
inc
shll
add
adc
dec
fisttps
scas
cmp
dec
ret
movsl
loope
call
jmp
scas
xor
mov
test
pop
cmp
jg
test
pop
test
lea
xchg
adc
jo
pop
ljmp
stc
addb
cwtl
sbb
xor
cltd
sbb
sub
loope
hlt
xchg
outsb
mov
lock
bound
push
mov
lods
mov
cmpsl
cmp
mov
stc
les
cmpsb
push
mov
cltd
inc
jecxz
loop
je
xor
cmp
add
add
sahf
jbe
inc
shll
enter
popa
lock
xor
je
out
or
jl
jne
outsb
fisttps
mov
ret
cmpsb
push
hlt
in
in
mov
add
inc
add
xor
or
mov
push
adcb
subb
movsb
cmp
sbb
push
lds
shll
xchg
sbb
add
sbb
rorl
sbb
ljmp
jmp
jge
push
xchg
shll
cmp
sub
outsb
loopne
icebp
nop
arpl
cwtl
jns
inc
shll
pop
bound
mov
mov
loope
insb
out
jg
jmp
mov
mov
outsl
lret
movsl
int3
aas
divb
push
dec
fdivrs
xchg
repz
in
repz
je
insb
ja
push
add
out
adc
sbb
gs
pop
sbb
ds
pop
test
mov
mov
and
pop
loop
cmpsl
xor
mov
mov
popf
loopne
out
mov
adc
imulb
cltd
push
decl
mov
xor
pop
stos
sbb
mov
add
jb
setg
or
cs
inc
mov
jnp
imul
jp
in
push
divb
xorl
lret
or
ljmp
and
test
cmp
adc
popf
adc
in
sbb
cwtl
push
test
push
cli
inc
int
and
aaa
cmp
push
mov
shlb
or
jno
jge
je
jo
and
xor
cmp
push
outsl
fisttps
mov
lcall
sahf
stc
or
fsubrl
imul
clc
outsb
or
push
inc
fdivl
in
test
mov
sbb
mov
jae
daa
inc
fimull
fisubrl
popf
or
clc
outsb
or
jg
adc
mov
inc
mov
dec
lret
lret
xchg
add
jo
push
mov
mov
ljmp
push
cmp
and
xor
push
mov
cld
fwait
jbe
adc
xor
dec
sub
add
add
pop
outsb
xor
ret
sbb
pop
lcall
add
xor
mov
insb
or
loop
push
les
loopne
jb
push
jne
out
sbb
lahf
punpckhdq
sbb
es
mov
loopne
out
jno
cmpsb
xor
cmpsl
aaa
push
mov
int
aam
ljmp
stc
mov
mov
mov
in
adc
sub
add
sub
cmp
insl
ret
xchg
cld
nop
xor
dec
frstor
stc
or
inc
rclb
es
fldenv
cmpsb
xor
scas
dec
popa
in
sbb
add
fmuls
fdivrs
movb
inc
lods
push
jge
negl
xor
int
ficoms
cwtl
push
imul
or
and
cmp
dec
cwtl
adc
or
inc
enter
cmp
xor
je
lea
stos
cmp
or
lret
pop
ds
scas
aas
scas
lret
add
dec
fisttpll
out
and
add
lret
pop
ds
ja
jge
negl
pop
cmp
jbe
cmp
ljmpw
stc
mov
in
sbb
inc
imulb
cwtl
imul
add
add
sbb
popa
scas
jmp
add
mov
scas
inc
push
adc
pop
fs
jp
jge
fisttps
dec
mov
inc
sub
pop
add
sbb
popa
sbb
shll
mov
pop
fs
xor
or
ljmp
jmp
xchg
add
jno
sbb
divl
xorl
fadds
push
aaa
ret
in
bound
mov
sbb
mov
sbb
or
outsb
pop
xor
pop
xor
into
add
scas
fisttps
push
fs
add
sbb
outsb
pop
leave
ret
or
cmp
adc
pop
dec
jp
add
fildll
xor
add
add
add
mov
xor
adc
pop
mov
into
add
jge
jmp
ds
push
lds
lods
dec
inc
rcll
and
add
sbb
gs
je
mov
adc
jge
add
mov
xor
aaa
cmpsl
ret
js
insl
hlt
pop
in
dec
push
call
fwait
push
xchg
push
movzbl
mov
jmp
pusha
in
sbb
mov
jmp
mov
lahf
cli
or
jecxz
lcall
mov
jbe
mov
jmp
aam
in
add
sub
fs
dec
mov
jmp
lods
sub
or
cmp
test
jnp
popf
dec
mov
jmp
sbb
mov
mov
jmp
mov
mov
jmp
mov
aam
movsl
xor
dec
fdivrl
pushf
add
adc
call
lods
and
pop
lret
stos
pop
xchg
popa
mull
icebp
pop
cmp
add
sbb
ret
or
popa
pop
xlat
mov
pop
xchg
filds
and
fistpll
jge
shr
jmp
iret
pop
int3
stos
movsw
out
jg
mov
lret
pop
repnz
fs
notl
js
dec
add
test
shll
sbb
jp
jmp
mov
pushf
jmp
cmpsl
cmp
mov
repnz
dec
inc
and
popa
adc
lds
daa
rclb
popa
push
adc
call
dec
aad
sub
push
mov
dec
mov
or
dec
dec
ljmp
inc
add
pop
mov
pop
ds
sete
xor
adc
call
push
call
test
xchg
repz
fisubl
sbb
or
imul
sbb
add
je
rcrl
or
sbbb
pop
dec
dec
into
add
push
xor
xlat
and
push
fisttpl
fnstsw
aad
lret
arpl
call
sahf
inc
cmp
push
adc
call
inc
lds
iret
and
fisttpl
fnstsw
movl
nop
push
popa
nop
jns
push
call
iret
pop
push
call
js
pusha
pop
repnz
cltd
push
sub
xor
push
call
insl
in
mov
add
fs
mov
ficomps
or
cmp
es
mov
inc
pop
add
ljmp
dec
push
adc
pop
xlat
imul
jmp
pop
les
adc
loope
dec
push
adc
pop
xor
into
add
fs
scas
xchg
and
sbb
popa
imul
xor
pusha
adc
call
shl
add
and
mov
jp
js
ljmp
xor
test
push
call
push
call
es
inc
mov
addr16
popa
add
sbb
cmp
jo
xchg
push
scas
push
call
pop
rcll
xor
arpl
cmc
inc
sub
into
or
push
call
filds
mov
ljmp
call
pushf
or
xchg
mov
cmp
insb
dec
jbe
push
call
push
call
cli
data16
xchg
outsb
or
cmp
mov
ret
inc
lods
push
call
sbb
sub
mov
movsl
xor
divl
cmpl
int
and
cmp
adc
in
sbb
xor
es
mov
mov
ret
dec
sub
add
aaa
push
call
fdivrs
jp
and
sbb
and
ret
push
lds
ret
ret
pop
enter
and
push
jecxz
push
in
sti
je
lea
in
jge
negl
std
insl
hlt
pop
icebp
dec
fdivl
in
sub
or
pop
lret
lret
inc
aad
dec
scas
jmp
jle
lret
add
sbb
shrl
or
mov
pop
fs
add
xchg
mov
mov
js
arpl
fdivrl
lods
cmp
aam
sub
punpckhdq
hlt
pop
lods
in
jnp
mov
mov
in
sbb
faddl
mov
testb
fmuls
mov
add
sahf
sbb
rorb
jno
pusha
pop
repnz
sub
setg
or
test
mov
sub
cld
xchg
cmc
add
lret
dec
fdivrl
add
leave
mov
xchg
pop
jmp
add
jp
xor
jnp
and
iret
inc
aad
dec
xchg
inc
sub
xor
cmp
dec
adc
or
jnp
mov
pop
inc
and
sub
mov
inc
mov
and
adcb
loope
mov
sub
stc
imul
lods
mov
scas
adc
fmuls
fdivrs
add
std
or
gs
insb
or
mov
jbe
cmpl
mov
add
or
sbbl
lcall
add
sbb
outsb
gs
cmp
adc
pop
adc
cmp
jge
into
add
mov
mov
pop
loope
movsb
cmp
adc
push
add
and
cmp
dec
pop
mov
dec
mov
lahf
push
das
lods
and
push
jl
xchg
cmc
add
lcall
push
mov
push
inc
xlat
mov
mov
cs
popa
jmp
push
ret
cmpsb
push
hlt
mov
cld
push
fisttps
cmp
and
push
cmc
push
push
call
sub
mov
xchg
repz
out
stos
cmp
pop
cmp
ficoms
cmpsb
push
cmpsb
fwait
or
lds
iret
push
xchg
add
std
or
rclb
pop
mov
out
adc
push
and
daa
inc
mov
cwtl
add
pop
int
shll
fisubrl
sahf
add
std
insl
hlt
pop
lods
cwtl
add
pop
cltd
or
xor
sbb
ret
sbb
xor
or
loope
add
outsb
push
adc
xor
add
lcall
and
jle
jb
in
cmpsb
or
int3
inc
and
jns
jmp
cmp
adc
or
jns
cld
xchg
cmc
add
imul
add
mov
and
mov
cmpsl
ret
js
pusha
pop
repnz
mov
loope
xor
int
rclb
dec
sub
add
scas
aas
pop
test
sahf
insl
and
clc
lahf
push
sub
jle
arpl
cmc
push
rolb
mov
in
xor
or
test
add
je
outsb
ret
xor
into
leave
pop
mov
pop
xor
into
add
and
dec
push
nop
push
popa
nop
jb
fisttps
movsl
dec
mov
mov
or
sub
push
leave
pop
cmp
pusha
adc
call
xlat
ret
xchg
gs
pop
test
into
insb
loop
je
push
mov
inc
mov
lods
and
pusha
sahf
and
insb
loop
je
dec
int
and
aaa
mov
scas
jb
imul
sbb
inc
mov
stos
int
aad
sub
mov
add
pop
popa
or
gs
mov
pop
or
into
add
dec
and
mov
jmp
add
je
pop
sbb
mov
pop
dec
xchg
add
fs
cltd
push
dec
mov
mov
stos
dec
fistpll
sbb
push
adc
cli
jne
mov
aad
aad
dec
movsl
imul
or
or
jecxz
push
lret
pop
ds
cmpsb
xor
int3
inc
and
inc
sub
xor
flds
imul
insl
lcall
adc
lds
fldt
xchg
insb
icebp
popa
add
inc
imulb
lahf
push
xor
les
int3
dec
dec
repz
cmc
je
cltd
or
dec
pop
fisttps
flds
lret
mov
or
jns
push
les
pop
cmp
aaa
lret
dec
frstor
mov
test
arpl
popa
clc
jo
xorl
fcoms
dec
sub
cmp
repnz
pop
repnz
stos
inc
enter
cmp
xor
cmpsl
aaa
push
mov
cmpsb
push
hlt
int
repnz
cmpsl
clc
outsb
cld
fwait
jbe
aam
shll
and
pop
pop
lret
lret
ret
push
lds
dec
aam
sub
sbb
mov
test
xchg
pop
les
int3
jnp
setg
or
into
jns
mov
shll
xchg
es
push
add
sbb
or
outsb
mov
push
adc
pop
xor
into
add
scas
and
lcall
mov
mov
out
hlt
xchg
outsb
cwtl
imul
mov
hlt
adc
mov
js
addr16
xchg
cmc
add
dec
rcll
and
inc
fidivrl
xchg
mov
xor
add
sbb
gs
pop
outsb
xor
mov
pop
lcall
xor
jmp
xchg
adc
cli
jno
xorb
push
mov
loope
jae
dec
ret
ret
add
sub
cmpsb
xor
scas
pop
test
loopne
xchg
add
push
and
and
push
or
jae
jne
out
add
adc
lock
pop
cmp
jle
push
xor
addr16
adc
cmp
pop
cmp
popa
mov
mov
sub
sti
imul
dec
add
sub
mov
xchg
add
inc
xchg
adc
in
sbb
or
pop
fimuls
add
enter
and
adcl
test
pop
lret
scas
pop
mov
lahf
punpckhdq
scas
pop
mov
mov
mov
add
or
pop
sbb
ret
jp
add
adc
fs
push
dec
scas
and
inc
leave
pop
cmp
daa
out
insl
addb
add
sbb
shll
mov
or
loope
dec
pop
push
into
pop
fildll
lret
xlat
aam
adc
pop
xchg
add
lcall
test
cltd
clc
or
pop
inc
and
cmp
push
xor
es
lret
or
jge
jl
testb
dec
fidivrs
jecxz
jne
and
jo
xorl
jp
jbe
jno
jecxz
aas
stos
cmp
pop
nop
or
mov
sti
lock
frstor
adc
lock
aad
inc
xlat
mov
out
inc
aam
dec
stc
pop
mov
or
xor
inc
and
or
jp
jp
cs
cmp
mov
aad
lret
mov
jns
push
roll
shll
imul
add
sbb
pusha
pop
repnz
inc
and
xor
pushf
xor
add
pop
leave
test
xchg
in
loop
je
ret
push
ret
cmpsb
push
mov
adcl
loop
pop
loop
sbb
pop
bound
psubd
in
jge
je
jo
inc
mov
out
test
stos
cmp
mov
cmpsb
ficoml
cmpsb
push
mov
sbb
loop
in
jg
mov
fistps
mov
sbb
push
cmp
xor
or
mov
push
lcall
aam
xchg
ret
popa
sbb
ljmp
or
loope
push
pop
push
into
mov
jp
add
adc
mov
lcall
fs
push
jmp
into
pop
stc
imul
rcll
cmpsl
push
mov
dec
frstor
ret
fcompl
dec
sub
xor
repnz
add
xor
adc
mov
orl
decl
in
jle
mov
mov
inc
and
ss
pop
xchg
adc
cmp
cwtl
or
jmp
cltd
or
pop
enter
sbb
xchg
add
and
xor
push
int
and
arpl
push
push
shlb
inc
mov
push
lahf
punpckhdq
xor
repz
mov
int
dec
repz
cmc
je
xchg
add
inc
xchg
push
test
push
clc
into
dec
fdivrl
in
je
addr16
enter
and
push
cld
sbb
cs
mov
js
pusha
imul
adc
or
xor
and
ja
insb
or
call
repnz
xchg
sbb
mov
jle
bound
mov
and
lods
and
inc
setge
sub
sti
imul
sbb
jge
negl
pop
into
pop
cmp
lea
mov
sbb
add
sbb
leave
ljmp
push
into
outsb
or
lret
scas
mov
pop
or
fs
add
jmp
dec
lcall
jg
jp
in
pop
inc
fisttpll
out
fiadds
mov
lret
cmc
daa
mov
jmp
shr
jbe
cmpl
adc
stc
imul
daa
inc
mov
or
in
repnz
xchg
add
sahf
jg
mov
inc
mov
js
insb
or
out
mov
int3
cmp
and
and
cltd
or
mov
xchg
lock
dec
rcll
das
dec
fistpll
test
ljmp
stc
out
or
pop
jb
jnp
xor
int
aam
das
mov
dec
fdivrl
lret
scas
pop
cwtl
or
sbb
test
arpl
fs
pop
jbe
bound
int
shll
lahf
dec
aam
sub
fstpt
or
sub
in
bound
pop
jb
cmp
mov
cmp
or
fimull
fimull
xchg
pop
xchg
adc
leave
dec
fistpll
dec
sub
add
mov
push
cmc
adc
jno
test
pop
test
add
ja
fstpt
lret
lret
jne
mov
mov
xlat
mov
xlat
ljmp
pop
pushf
push
pushf
sti
push
mull
insb
cltd
pop
test
xchg
add
add
je
ret
xor
adc
imul
push
pop
les
adc
loope
push
push
adc
pop
xchg
lcall
and
ja
ja
loope
or
dec
lea
mov
sbb
testb
outsl
lcall
jo
pushf
inc
adc
call
mov
mov
mov
cld
xchg
cmc
add
lea
and
movsl
xchg
or
test
jge
cmp
xchg
inc
loopne
adc
addr16
fisttpl
andb
lcall
test
or
sbb
or
jns
out
jl
negb
cli
jge
je
insb
push
jecxz
push
in
in
data16
xchg
outsb
leave
mov
xchg
icebp
add
lahf
push
test
push
lock
rolb
shlb
cmp
loop
pop
loop
mov
scas
lret
les
mov
pop
ds
nop
add
iret
pop
cmp
adc
icebp
popa
add
adc
ficoml
pop
cmp
sub
add
add
pop
ret
ror
je
and
push
adc
pop
into
pop
xlat
imul
mov
into
add
xchg
fbstp
jmp
jle
call
test
jns
jmp
mov
xchg
adc
mov
sahf
add
in
jge
testl
lock
insb
or
mov
adc
int3
inc
and
inc
sub
or
imul
gs
pushf
outsl
mov
fistl
add
jnp
adcb
andb
out
mov
sahf
sbb
fimuls
add
daa
mov
and
push
cwtl
cmp
sub
push
push
jp
in
or
xchg
add
jno
cmpsb
xor
scas
inc
test
fcomps
mov
gs
jl
std
insl
hlt
pop
lock
outsb
cld
fwait
jbe
dec
fdivl
in
loop
ljmp
mov
adc
imul
cmp
or
add
add
xor
sbb
mov
pop
dec
dec
into
add
xchg
xor
xor
xchg
add
and
mov
push
movsl
sbb
xor
pop
int
sarb
shlb
mov
or
std
test
lea
mov
fs
popf
insb
mov
andb
mov
mov
jl
jmp
pushf
test
nop
testl
mov
jae
in
adc
push
mov
jle
sub
rolb
rcrb
in
imul
insl
test
add
sbb
pop
ret
je
xor
pop
xor
into
add
xchg
fs
pop
push
fstpt
insb
loopne
adc
or
lods
and
inc
adc
adc
jnp
insb
loop
je
setle
cmpsb
rolb
mov
lods
jo
jne
out
pop
xor
mov
xchg
mov
fildll
or
adcb
sbb
inc
jecxz
push
in
pushf
add
mov
inc
mov
in
aam
dec
leave
jge
dec
sub
popa
pop
mov
loop
notl
jo
loop
mov
cmpsl
pushf
sbb
pop
add
add
add
je
popa
ret
gs
push
adc
pop
into
mov
jp
les
adc
loope
dec
push
adc
pop
jge
into
add
and
dec
mov
fdivs
mov
dec
mov
cmpsl
push
mov
dec
test
cmp
ret
mov
and
dec
fnstsw
fsts
mov
jb
in
pusha
repz
cmc
pop
xor
adcl
cmpsb
xor
scas
or
popa
add
xor
dec
adc
pop
pop
int3
inc
and
fistpll
add
gs
pushf
outsl
pushf
mov
mov
sbb
cli
or
shll
inc
and
jns
xor
andb
add
add
mov
xor
pop
xor
into
add
push
xlat
xor
out
adc
inc
sahf
add
add
shr
or
mov
pop
fs
add
xchg
or
scas
and
in
testl
add
sbb
mov
mov
adc
jge
add
xlat
push
xor
scas
fistpll
add
mov
sbb
pop
test
stos
adcl
jp
xchg
pop
jg
js
out
mov
aas
pushf
xor
and
add
sbb
ret
ljmp
or
loope
cmp
adc
pop
push
or
dec
xlat
xchg
or
fbld
data16
adc
clc
mov
call
pop
enter
and
dec
fidivrs
xchg
cmc
add
mov
xchg
xchg
call
mov
mov
cmp
push
xchg
add
sahf
aaa
daa
mov
sub
mov
add
loopne
call
dec
fdivrs
and
inc
push
call
mov
push
call
cmp
ret
mov
cld
arpl
xchg
adc
call
movsb
cmp
xchg
pushf
push
call
xor
push
call
adc
pop
jp
and
push
cmp
dec
inc
in
sbb
push
iret
pop
cmp
add
add
mov
roll
pop
adc
pop
mov
xor
xlat
inc
push
call
and
vpunpckhbw
push
jbe
ljmp
js
ljmp
cmc
cli
xchg
out
push
call
icebp
xor
push
call
test
mov
push
ret
cmpsb
push
mov
xchg
jae
jg
mov
and
dec
push
call
sbb
scas
adc
call
and
xchg
sbb
cmpsl
aaa
push
mov
icebp
mov
add
fidivs
decl
xchg
jb
inc
xlat
pop
int3
stos
data16
lods
and
push
adc
iret
pop
push
call
mov
push
call
sahf
pop
xchg
adc
fcoml
mov
inc
and
and
adc
call
sub
jl
jge
testl
xchg
xor
mov
mov
add
jb
call
inc
aad
dec
scas
add
mov
jne
decl
repnz
push
mov
std
pop
pop
mov
jmp
push
call
cmpsl
cmp
mov
repnz
or
rcll
jle
inc
push
call
push
mov
jns
and
lea
mov
in
add
sbb
or
mov
js
adc
pop
xor
or
xor
jp
or
xchg
or
sub
add
add
pop
pop
sbb
adc
pop
ljmp
xlat
scas
and
mov
imul
cmp
rcll
adc
jo
jne
imul
sbb
dec
ret
mov
xchg
mov
pop
repnz
test
pop
cmp
cmp
push
call
imul
or
pop
xchg
aam
xor
repnz
xchg
add
in
jge
notl
sub
push
mov
test
add
outsb
xor
pop
fbld
pop
fs
xor
lcall
add
cmp
xchg
pop
bound
fsubrs
int
jmp
rcll
push
mov
popf
outsl
xchg
pop
xchg
repnz
jne
je
out
sbb
scas
and
mov
mov
jb
xchg
cs
jbe
jno
jecxz
lea
pop
repnz
rcrb
test
or
les
xor
insl
std
test
icebp
insb
loop
je
push
icebp
popa
add
jbe
push
xor
dec
lock
xchg
in
insl
std
test
xchg
adc
in
sbb
mov
mov
rolb
sarb
adc
add
jno
sbb
aad
lret
gs
adc
sub
roll
shll
mov
fistl
cmpsl
push
mov
leave
xor
dec
insb
dec
push
add
cmpsl
insl
call
dec
ret
ret
dec
fdivrl
cmp
pop
fmuls
mov
cmpsl
ret
mov
aam
xchg
or
jbe
setg
or
adc
pop
rcll
xor
xchg
add
and
imul
hlt
push
cld
inc
out
jo
xorl
inc
imull
push
cld
push
aas
mov
pusha
ret
ret
mov
dec
mov
xor
adc
adc
enter
dec
test
out
rolb
dec
cmpsl
fs
adc
add
insl
hlt
pop
jmp
js
mov
or
xchg
sbb
aad
sbbl
add
sbb
sarl
inc
sbbb
pop
and
and
xor
add
mov
jg
inc
popf
adc
in
sbb
xchg
and
sahf
or
cmpsb
inc
dec
fnstcw
xchg
repnz
cltd
or
or
rcll
es
sbb
or
sbb
je
jge
push
into
scas
imul
add
mov
pop
mov
into
add
lcall
je
jnp
in
sub
pop
cmp
sub
daa
mov
inc
mov
push
lret
pop
ds
sbb
jl
cli
push
mov
xchg
aas
mov
xchg
gs
pushf
outsl
les
imul
dec
jo
bound
cmpsl
ret
cmc
push
lds
cmp
push
inc
test
add
sbb
or
mov
dec
push
adc
pop
fs
add
jp
lcall
mov
fisttps
flds
les
dec
lods
pop
fmuls
fdivrs
xchg
adc
inc
xlat
mov
scas
xchg
pop
xchg
adc
cs
into
inc
fidivrl
nop
testl
loope
fcmovnb
dec
ret
mov
mov
fs
orb
sti
push
push
jge
je
jno
or
jbe
cmpl
icebp
popa
add
push
jmp
mov
push
mov
sub
scas
sbb
mov
pop
pop
or
loope
jge
push
into
or
imul
add
mov
pop
xlat
xlat
into
add
push
mov
scas
xor
lahf
punpckhdq
scas
pop
std
sahf
add
std
or
jecxz
out
mov
mov
in
sbb
xchg
or
roll
sarl
iret
pop
cmp
pusha
aad
fistpll
mov
inc
aad
dec
lret
arpl
cmc
je
mov
test
int3
and
dec
movsb
sub
es
cs
in
icebp
nop
arpl
cli
adc
jge
je
insb
or
outsl
fcoml
lods
pop
cli
xchg
push
mov
es
fcompl
scas
pop
mov
pusha
notb
cs
mov
lret
ret
movsb
push
mov
int
push
outsl
or
repnz
push
lahf
push
stos
cmp
mulb
sbb
ljmp
pop
jp
jg
popa
icebp
nop
arpl
xor
inc
int3
push
lds
push
in
inc
add
add
push
pushf
sti
push
mov
jmp
pop
rcll
jbe
mov
gs
push
xor
dec
dec
fstpt
iret
stos
pop
cmpl
cli
jns
mov
lahf
pop
iret
dec
fidivrs
mov
sub
jl
jne
popfw
push
test
push
mov
xor
mov
pop
leave
test
mov
shll
fcoml
mov
xchg
cld
psubw
jp
jp
push
jns
add
je
outsb
mov
pop
adc
pop
pop
push
push
into
add
scas
xlat
mov
filds
pop
loop
mov
mov
and
xor
in
jns
mov
mulb
xchg
popa
test
inc
and
cmp
mov
std
gs
pushf
outsl
pushf
call
in
jnp
mov
or
das
mov
inc
mov
lods
xor
jo
xorl
xor
data16
rolb
rclb
or
pop
enter
hlt
je
lea
sbb
stos
cmp
inc
lds
mov
mov
cmpsl
dec
rorb
dec
mov
jl
sahf
sbb
lcall
mov
sbb
repz
ljmp
mov
scas
leave
cmp
scas
and
pop
repnz
fs
jl
jne
jno
out
cmp
add
pop
mov
pop
or
loope
je
adc
pop
mov
add
into
add
push
lcall
test
in
sbb
mov
lock
int
and
aaa
jbe
ja
loope
sub
mov
add
shll
xor
inc
sbbb
pop
popa
jp
xchg
xor
fs
lcall
jb
rep
lcall
fidivrl
pop
cmp
push
aaa
ret
push
shll
mov
cmp
add
push
shll
mov
push
xor
push
xor
cmpsb
shll
jmp
stc
cwtl
imul
movsb
dec
iret
pop
cmp
ds
mov
sti
add
sbb
popa
xor
pop
or
inc
js
adc
pop
or
and
dec
xlat
add
and
push
fs
rcll
das
lcall
repnz
pop
repnz
jo
xorl
in
and
pop
cmp
es
enter
sub
sub
add
std
or
out
popa
icebp
nop
arpl
and
std
outsb
cld
fwait
jbe
mov
mov
and
xchg
push
fmuls
mov
add
outsb
or
mov
push
adc
pop
pop
mov
scas
fistpll
dec
scas
add
xlat
push
fisttpl
push
mov
lcall
outsl
imul
add
push
imul
insl
mov
inc
mov
adc
pop
ret
ret
adc
lds
iret
fs
imul
insl
fmull
mov
push
xchg
repz
mov
jb
xchg
xchg
adc
jne
mov
sub
lret
movsl
push
mov
dec
stos
and
ss
mov
sbb
push
jnp
mov
fsts
cmpsl
push
cmc
mov
lods
lret
inc
lret
inc
shlb
add
add
ljmp
scas
pop
push
into
pop
push
imul
add
mov
pop
fs
add
jp
push
xor
jge
das
cmpsl
aaa
push
mov
fildll
enter
out
cli
out
clc
lahf
push
je
je
out
push
pop
enter
cmp
cmp
repnz
adcl
ja
jl
jle
call
test
xchg
setg
or
jl
jne
out
pop
and
out
in
mov
aad
out
jo
xorl
std
push
lret
lods
pop
ljmp
dec
ljmp
test
jmp
and
lea
add
add
mov
or
outsb
mov
pop
scas
scas
into
add
jp
scas
push
or
fs
fmuls
fdivrs
mov
rol
inc
xlat
mov
scas
arpl
jne
out
add
fsubr
imul
insl
mov
imul
insl
int3
xor
add
add
mov
ret
pop
or
loope
je
adc
pop
add
into
add
and
mov
xlat
cli
jb
xchg
jae
push
add
add
popa
leave
shll
pop
je
jl
adc
pop
mov
into
add
push
or
cld
jb
xchg
adc
or
jnp
outsb
add
sbb
outsb
gs
or
inc
js
adc
pop
or
xlat
xlat
dec
jmp
and
xor
pop
lcall
add
xor
pop
gs
mov
adc
loope
je
adc
pop
leave
jp
dec
or
dec
jmp
data16
xchg
outsb
xchg
jp
jp
fisttpl
mov
xor
loopw
ljmp
das
fidivl
xor
ss
mov
xchg
popa
enter
pop
repnz
dec
fistpll
jns
jmp
imul
rcrl
addr16
arpl
xchg
cmc
add
mov
xchg
pop
jb
cmp
add
push
rolb
rolb
repnz
pop
repnz
mov
dec
mov
xchg
pop
fimull
fidivl
push
rolb
shlb
jmp
popf
out
push
lahf
push
ss
outsb
jmp
push
in
dec
xchg
pop
push
jno
jecxz
xchg
pop
xor
pop
mov
mov
shll
ret
mov
jp
mov
lea
sar
jecxz
jne
mov
fisubs
imul
adc
or
mov
mov
sbb
cld
xchg
cmc
add
jae
js
ljmp
push
fadds
mov
and
mov
and
push
shrl
inc
rcll
adc
mov
xchg
xchg
repz
out
and
mov
add
add
popa
ret
pop
mov
pop
adc
pop
fs
add
filds
xchg
lcall
negb
clc
add
add
mov
ret
mov
pop
add
into
add
xlat
xchg
fisttps
and
sbb
rolb
sarb
cli
jge
je
insb
jle
push
cld
push
fcoms
mov
iret
stos
pop
lods
sbb
or
jne
leave
pop
cmp
sub
mov
sub
xor
jne
mov
add
out
jmp
jge
adc
dec
jecxz
push
in
rolb
mov
lods
push
lds
iret
daa
xor
ss
mov
push
mov
and
and
jbe
loopne
mov
out
cmpsb
cmp
cwtl
push
xchg
repz
cmpsl
loope
in
mov
ljmp
out
or
cwtl
cmp
sbb
pop
jp
jno
cmc
gs
sbb
xchg
pop
bound
outsb
popf
jb
cmpsb
xor
scas
dec
movsb
and
in
sbb
les
push
jns
das
rcrb
scas
pop
xchg
dec
lret
pop
ds
shll
xchg
xchg
cwtl
push
imul
lcall
cli
popf
insb
test
pop
repnz
fs
roll
mov
call
add
add
leave
ret
or
xor
pop
adc
pop
xor
dec
add
and
xlat
jge
aaa
cmpsl
ret
xchg
pop
xchg
repnz
cli
jae
xchg
push
rcll
sub
jne
mov
xchg
or
xchg
aad
xchg
adc
add
cmp
shll
fnstcw
stos
into
cmp
call
jb
in
mov
mov
lods
lods
sub
mov
stos
int
js
mov
add
popf
sbb
mov
inc
mov
pop
xchg
add
jg
repz
cmc
sbb
cs
cmp
or
lret
pop
ds
mov
shlb
adc
gs
shl
imul
fisttps
fsts
hlt
data16
xchg
outsb
xchg
xchg
push
add
sbb
mov
outsb
inc
jl
adc
pop
or
add
dec
mov
xlat
add
mov
jns
data16
jo
xorl
push
call
lods
and
nop
push
popa
nop
jns
mov
xchg
bound
mov
or
push
call
cmp
inc
aad
sub
jp
lods
and
ja
imul
call
aad
shll
outsb
inc
push
call
hlt
inc
push
call
sub
push
lds
jecxz
in
jg
mov
mov
mov
push
call
es
fsubl
loope
add
pop
cmp
jno
jecxz
inc
fimull
fidivl
mov
inc
mov
push
push
call
push
mov
jns
and
or
dec
cmpsl
cmp
adcl
test
cmpl
add
sbb
leave
pop
mov
dec
push
adc
pop
ljmp
fbstp
jae
mov
push
call
mov
movsb
std
pop
int3
stos
data16
gs
pushf
outsl
mov
and
jl
push
call
push
push
call
adc
or
add
jno
mov
mov
xchg
fstl
call
cmpsb
into
jo
dec
pop
mov
mov
jmp
popa
out
adc
push
cmpsl
and
lods
cmp
mov
dec
mov
fdivl
mov
jmp
les
movsb
push
repnz
nop
testl
fsubrl
ret
push
lds
jmp
je
push
push
xor
sub
pop
int3
stos
pop
dec
fistpll
jnp
adc
call
mov
fcmovu
push
ret
cmpsb
push
cmpsb
xchg
fidivs
jbe
push
call
xlat
inc
aad
dec
ljmp
repnz
popf
insb
mov
loop
lret
add
sbb
outsb
mov
mov
pop
jmp
mov
and
jge
xlat
xchg
inc
rolb
sarb
stc
jae
xchg
push
xchg
add
imulb
je
sti
cltd
popa
push
call
push
call
test
add
adc
call
ss
inc
mov
popf
or
mull
icebp
inc
add
scas
push
call
das
jl
push
call
imulb
cltd
push
test
xor
push
add
push
hlt
push
cld
dec
jmp
fistpll
aad
dec
lret
add
add
outsb
pop
leave
sarl
adc
pop
xor
into
add
or
fs
sub
xor
cli
lock
call
push
call
adc
mov
and
icebp
xor
mov
adc
call
mov
cmpsl
ret
add
mov
and
cli
mov
add
sbb
popa
leave
mov
pop
adc
pop
push
push
into
add
xchg
push
jge
jmp
ljmp
mov
mov
ret
cmpsb
push
mov
pop
xorl
push
ret
cmpsb
push
mov
lock
test
jge
fs
ret
ret
loop
pop
loop
lcall
and
xchg
add
js
into
pop
cmp
ds
loope
jae
movsb
cmp
pop
xchg
setg
or
js
filds
mov
icebp
dec
fisttpl
fnsave
mov
inc
fimuls
dec
jge
sbb
pop
push
call
push
gs
dec
std
das
stos
lods
aaa
pusha
cld
xchg
cmc
add
or
data16
xchg
outsb
fldenv
test
jge
or
scas
aas
pop
test
gs
inc
mov
cltd
pop
inc
push
xor
sub
or
dec
mov
pop
lods
inc
or
pop
jp
jle
mov
inc
mov
jno
push
jo
xorl
mov
cmp
sub
cmpsb
les
mov
out
jno
outsl
add
mov
add
iret
xor
mov
shl
loope
jae
cld
jae
xchg
add
out
jg
mov
daa
mov
inc
mov
jmp
and
leave
rorb
mov
test
inc
mov
incl
mov
mov
mov
add
sbb
je
ljmp
adc
pop
jge
into
add
jmp
and
popf
or
mov
dec
mov
lahf
push
test
cwtl
decl
lea
jl
divb
sub
daa
mov
and
dec
roll
aad
jno
add
adc
dec
fstpt
out
mov
jb
fs
adc
stos
in
cld
fwait
jbe
scas
sub
loopne
adc
sub
jbe
loopne
bnd
jne
pusha
les
add
add
mov
popa
dec
add
push
adc
pop
into
or
imul
sbb
and
add
or
jmp
repnz
test
pushf
xor
dec
popa
in
bound
jns
jmp
repz
notb
mov
in
sbb
lock
bound
daa
iret
dec
fimull
fidivl
adc
inc
fldt
add
mov
jg
and
scas
cmp
mov
insl
icebp
popa
add
pop
flds
mov
stc
les
test
or
sub
stos
mov
aaa
add
add
leave
sbb
ljmp
push
adc
pop
into
ret
xor
lret
add
adc
jge
add
push
lcall
pop
int
loopw
insb
or
sbb
mov
lods
cmp
aam
sub
push
xor
pop
cmp
aas
clc
jge
je
gs
fistpll
addr16
push
ds
dec
mov
lcall
les
stos
and
rolb
shlb
or
aad
dec
movsb
push
cltd
or
insl
adc
lods
cmp
pushf
or
in
mov
popa
icebp
nop
arpl
pxor
and
add
add
je
leave
sbb
ljmp
adc
outsb
xchg
lret
scas
mov
pop
pop
jmp
mov
fistps
and
xor
push
xor
and
notl
mov
mov
and
decl
xor
notl
jge
jp
in
push
aaa
scas
aas
pop
test
inc
pop
add
add
pop
mov
add
pop
push
into
ret
lcall
pop
adc
pop
rcr
add
xchg
or
pop
cmp
pusha
pop
ret
ret
push
lahf
push
cmpsb
add
std
or
jge
dec
sub
popa
jp
outsb
or
sub
test
pop
test
xor
inc
lret
pop
ds
xor
pop
loop
sti
sahf
insl
mov
xacquire
nop
testl
add
gs
into
xlat
into
or
call
adc
xor
add
jp
push
mov
xchg
push
cld
dec
insl
push
stos
add
add
mov
outsb
pop
or
loope
clc
call
adc
xor
jp
mov
xor
lcall
mov
or
pop
fs
xchg
cmp
add
add
gs
pop
leave
or
push
push
adc
pop
dec
dec
into
add
jmp
scas
and
fstpt
sub
push
orb
adc
sub
xor
push
lds
dec
lret
pop
ds
pop
push
fldcw
add
ret
pop
ror
sbb
xor
push
adc
pop
into
gs
imul
pop
xchg
xchg
jp
xlat
xor
fmuls
mov
cmpsl
ret
call
add
leave
mov
jp
pop
push
into
mov
jp
mov
pop
lcall
xchg
xor
and
outsb
popf
pop
loop
ljmp
clc
or
cmp
aam
sub
sbb
js
sahf
or
cmpsb
adc
addl
add
sbb
or
outsb
pop
ljmp
pop
or
add
xlat
scas
mov
jge
xchg
jecxz
push
in
pop
mov
add
je
xor
gs
adc
jge
mov
xor
xchg
popa
add
dec
std
popa
icebp
nop
arpl
lret
push
lret
jmp
cwtl
push
imul
fisttps
fldenv
and
sub
mov
movsl
sub
mov
jns
push
icebp
popa
add
sbb
cmpsl
lret
dec
frstor
push
cmc
sbb
jno
xorb
out
adc
dec
pushf
adc
in
sbb
pop
xchg
add
sahf
jo
lret
pop
ds
rcrl
stos
data16
mov
jle
bound
imul
rcpps
push
xor
daa
lods
lods
lret
inc
mov
stos
cmp
or
xchg
push
ret
lods
pop
mov
iret
daa
sbb
push
jns
pusha
and
sub
call
sbb
and
push
cmc
dec
aaa
scas
aas
pop
test
es
push
into
pop
cmp
jg
dec
fnstcw
notl
add
adc
leave
lcall
sub
fisttpl
fnstsw
cmp
sub
push
jno
fs
push
adc
data16
adc
or
jne
out
minps
inc
and
jns
add
ret
push
lds
rclb
sahf
or
cmpsb
inc
cwtl
adc
in
sbb
repz
mov
mov
stos
push
rclb
xor
lds
stc
cwtl
imul
sbb
dec
fnstcw
fdivrs
sub
sbb
mov
push
inc
pop
ret
ret
inc
shlb
clc
lahf
push
ss
aas
pop
test
push
mov
pop
test
cwtl
cmp
push
ret
cmpsb
push
aam
mov
dec
mov
inc
mov
xor
adc
add
sbb
pop
leave
sbb
ret
inc
mov
adc
pop
leave
add
into
add
lcall
xor
pop
out
push
mov
cmpsb
shll
movsl
daa
mov
and
and
sti
ja
xorb
adc
cld
xchg
cmc
add
les
cmpsb
push
mov
aad
outsb
out
adc
or
and
hlt
jg
mov
jns
jns
jmp
imul
or
or
in
dec
cmpsl
movsb
ret
ds
push
push
xor
sub
mov
sbb
push
jns
pusha
and
stos
xor
mov
inc
mov
push
sahf
or
cmpsb
jl
movsb
adc
jmp
xchg
pusha
xlat
hlt
push
mov
repnz
lods
and
xor
adc
inc
lods
sub
xchg
push
test
push
pushl
push
cld
push
cmp
mov
xchg
jbe
data16
xchg
outsb
addb
arpl
jg
jmp
xchg
les
in
add
push
mov
jns
insb
fwait
adc
in
sbb
repz
je
insb
lahf
adc
sub
pop
leave
pop
cmp
cmp
rolb
shlb
sbb
push
lret
mov
ret
sub
pop
ds
inc
roll
shll
lea
cmp
inc
shll
gs
inc
sub
sbb
imul
insl
fsubrl
xchg
jo
arpl
cmc
inc
sub
sbb
xchg
adc
mov
arpl
ja
loope
ret
mov
test
stos
dec
aam
lret
scas
pop
mov
pop
mov
sub
push
js
sti
add
sbb
rorl
pop
xor
pop
xor
add
fistpll
add
jmp
pop
mov
rolb
shlb
addr16
bound
inc
and
sbb
and
pop
gs
icebp
jle
mov
add
sbb
dec
fdivrl
add
jnp
push
mov
mov
xor
sub
roll
aad
mov
sarl
scas
cmp
or
mov
inc
fisttps
fstps
xchg
add
cmp
mov
sarb
pop
xchg
adc
jmp
xchg
xor
push
inc
and
or
dec
and
xchg
adc
sub
mov
movsb
and
mov
jg
arpl
xchg
or
jle
pop
mov
sti
outsb
in
sbb
add
sti
movsl
sub
mov
idivl
jp
fwait
setg
or
ljmp
je
or
add
repnz
pop
repnz
arpl
mov
inc
mov
add
xor
mov
mov
pop
push
push
into
add
jp
xor
mov
fs
inc
stos
cmp
jno
jns
jmp
cld
gs
pushf
outsl
fstpt
mov
rorb
mov
jne
out
inc
aad
fdivrs
push
aaa
ret
loopne
adc
push
sub
arpl
xchg
gs
scas
aas
pop
test
and
add
sbb
sbb
mov
or
loope
mov
or
mov
add
jge
xlat
push
fs
add
call
ljmp
mov
enter
sub
push
les
add
sahf
ja
out
jl
notb
xor
js
ljmp
jp
pop
push
jnp
in
or
pop
into
test
jnp
in
pop
roll
mov
cmpsl
mov
mov
sbb
sahf
push
pushf
sti
push
mov
dec
fidivrs
pusha
pop
repnz
add
sbb
je
popa
mov
jp
pusha
pop
adc
pop
fs
add
and
lcall
ret
mov
xlat
cmp
in
dec
fildl
mov
mov
jecxz
jnp
jno
jecxz
add
add
add
xor
ljmp
adc
pop
fs
add
jmp
jp
test
aad
fwait
ljmp
repnz
pop
repnz
scas
xor
aam
sub
into
test
hlt
xchg
outsb
jmp
mov
sub
add
pop
cmp
sub
inc
sub
aas
out
notl
xchg
adc
das
test
popa
in
sbb
repz
sbbl
repz
mov
loope
cltd
push
mov
mov
inc
cmpsl
or
inc
into
pop
cmp
and
inc
daa
sarb
or
push
enter
pop
lods
cmp
inc
shll
frstor
and
repnz
fs
sub
imul
insl
cwtl
scas
xor
repz
xchg
sbb
bound
sbb
sbb
leave
or
je
cwtl
pop
adc
pop
shll
xchg
xchg
jge
xor
movsl
xor
xchg
mov
sub
daa
inc
mov
adc
cltd
cmp
pop
jp
inc
pop
pushf
xor
inc
scas
cs
arpl
xchg
sbbl
dec
mov
pushf
sti
push
imulb
fadds
push
aaa
ret
sahf
or
cmpsb
inc
jns
pusha
pop
repnz
movsb
sub
lds
jle
gs
adc
mov
jle
outsl
inc
roll
aad
pusha
in
bound
jo
loop
sbb
sub
adc
sbb
sub
xchg
movsl
adc
inc
fisttpl
fnsave
call
and
sbb
mov
mov
sub
aam
sub
stc
cwtl
imul
mov
mov
mov
sbb
jnp
and
xchg
cmp
daa
stos
cmp
jg
cltd
or
jg
hlt
push
cld
sbb
lock
mov
dec
mov
mov
or
jns
sti
imul
adc
cwtl
push
imul
js
mov
mov
rolb
in
cmp
and
push
cmp
pop
int3
stos
xchg
cmpsl
cmp
jbe
cmpl
rcll
data16
stos
inc
shll
stos
int
mov
mov
test
jge
sub
pop
cmp
mov
es
rorl
mov
dec
das
fisubl
fmuls
fdivs
pop
xchg
repnz
add
sbb
outsb
gs
pop
popa
je
jp
push
into
sbb
imul
pop
mov
into
add
xchg
add
mov
xchg
adc
lcall
push
xor
data16
ret
cmpsb
push
in
ret
arpl
xchg
gs
lcall
or
call
sub
adc
jmp
xchg
testb
sbb
divb
cmp
mov
ret
call
adc
ljmp
bound
mov
sub
jmp
lods
sub
lds
add
es
mov
or
jne
pusha
notb
int3
push
sbb
call
mov
add
jno
lcall
dec
or
fs
jl
notb
jecxz
push
in
cmp
mov
jmp
lahf
adc
fstl
pop
mov
xchg
push
call
inc
sbb
push
call
mov
fistpll
mov
dec
mov
adc
pop
leave
inc
fidivrl
push
push
call
inc
rolb
sarb
xchg
or
mov
add
movsl
std
jmp
pusha
pop
repnz
jp
jle
inc
daa
adc
ljmp
xchg
xor
inc
adc
push
shlb
stos
push
call
pop
inc
repz
mov
sub
std
ljmp
outsb
or
pop
or
add
sahf
outsl
adc
and
jge
je
sub
icebp
push
call
sti
fsubrl
adc
call
jo
push
call
test
cmp
jmp
xchg
mov
mulb
dec
xor
sbb
xor
mov
test
xchg
ret
push
call
push
and
fimuls
push
call
scas
adc
outsb
cld
fwait
jbe
addr16
push
in
aas
mov
cmpsl
ret
inc
adc
and
add
mov
insb
stos
sbb
into
push
call
jmp
out
mov
mov
push
and
xchg
and
and
or
cmp
add
imul
call
xchg
add
int3
inc
and
mov
and
adc
sbb
ljmp
cwtl
pop
adc
pop
and
lret
imul
adc
loope
cwtl
pop
adc
pop
push
push
into
add
add
lcall
cmp
inc
mov
mov
adcb
andb
mov
pop
xchg
adc
and
and
pop
je
push
xor
sti
imul
adc
dec
fstpt
xor
dec
movsb
xor
fisttps
movsb
push
repnz
pop
int3
stos
movsw
iret
pop
iret
stos
pop
test
dec
fdivrl
icebp
nop
arpl
pop
fs
insb
or
testl
push
xchg
mov
add
sbb
mov
inc
mov
lcall
adcb
xorb
enter
dec
mov
lahf
fistpl
stos
pop
mov
sti
imul
sbb
cmp
cltd
inc
and
jne
pusha
pop
repnz
insl
hlt
pop
jmp
push
call
mov
lods
mov
shlb
cmpsl
ret
in
fs
popf
insb
cmpsl
inc
leave
pop
cmp
daa
xchg
sbb
insl
std
test
push
lcall
dec
das
fisubrl
roll
mov
test
cmp
cs
mov
jmp
dec
fnstcw
notb
cmp
inc
rcll
sti
movsl
cmp
clc
popa
icebp
nop
arpl
les
fs
arpl
xchg
fdivrl
ja
loope
rep
loop
je
out
call
mov
jg
cmp
inc
lds
cmp
sbb
push
xchg
test
test
rol
sub
add
sbb
mov
mov
pop
jge
into
add
fistpll
xor
and
add
jno
push
lahf
push
or
cwtl
adc
loop
pop
loop
push
fistl
ljmp
pop
int
subl
out
lock
bound
jns
inc
fidivrl
cs
mov
cmpsl
push
cmc
std
insb
loop
je
std
imul
cmpsb
xor
scas
inc
dec
fmuls
fdivs
mov
pushf
sbbl
sub
or
lea
mov
cwtl
push
xchg
repz
cmpsl
insb
icebp
popa
add
inc
sbbb
and
clc
imul
insl
fdivl
xchg
adc
in
cmc
pushf
outsl
mov
dec
lods
adc
popf
sbb
aad
sub
inc
xchg
sbb
lea
sbb
sbb
inc
enter
outsl
push
xchg
mov
inc
aam
dec
mov
test
mov
add
add
ret
pop
je
popa
outsb
push
mov
scas
jmp
fucomip
jp
dec
xchg
movsb
aam
into
test
arpl
cmc
pop
adcl
loop
idivl
add
add
push
xor
addr16
sbb
dec
mov
mov
les
cmpsb
xor
scas
inc
repnz
xchg
outsb
xchg
das
push
xchg
or
insl
jno
js
ljmp
outsl
int
lret
jecxz
ljmp
stc
scas
add
cs
xchg
add
and
repz
cmc
je
sub
fwait
or
dec
in
hlt
xchg
outsb
mov
jo
xorl
fnstsw
scas
das
mov
push
test
push
fistps
test
mov
jns
mov
idivb
test
mov
inc
mov
jne
xchg
testb
push
mov
out
test
mov
das
iret
mov
test
cmp
mov
jno
jno
jecxz
jecxz
out
jo
adc
sbb
sub
push
in
inc
mov
mov
adc
incl
js
ret
push
lds
addr16
pop
repnz
push
mov
gs
gs
roll
aad
aaa
lods
cmp
lock
fisttpll
inc
and
jns
pop
jp
and
cmpl
andb
shll
cmpsl
cmpsl
add
std
or
ss
dec
mov
lds
int
je
imul
sbb
xchg
jb
data16
jnp
insl
hlt
pop
jmp
cmp
dec
fdivrl
jl
notb
sti
imul
xor
push
cmp
and
jg
mov
stos
sub
es
cs
push
fdivl
in
add
add
sahf
jbe
hlt
push
cld
or
mov
inc
mov
sbb
pop
roll
aad
sub
push
fsts
cmpsb
push
mov
dec
out
lahf
or
mulb
dec
lods
xor
int
xchg
cwtl
pop
xchg
repnz
sarb
repz
cmc
inc
imull
cwtl
imul
aas
scas
lret
push
lock
ja
jge
je
add
or
outsb
out
jl
notb
xchg
xchg
add
sbb
sbb
outsb
mov
adc
pop
popa
dec
dec
into
add
or
and
push
ret
cmpsb
push
mov
hlt
push
cld
adc
xor
jmp
popf
and
dec
sahf
adc
in
sbb
ss
push
lds
mov
cs
mov
jns
add
js
insl
movsl
sub
out
jg
jmp
xchg
repnz
notb
scas
leave
cmp
lea
mov
and
and
sbb
jno
sbb
push
push
xor
daa
test
shll
loopne
jb
test
pop
push
xor
loopw
jmp
push
mov
pushf
sti
push
mov
xchg
ljmp
stc
mov
clc
outsb
or
jg
lds
iret
dec
daa
stos
cmp
jg
sbb
dec
fdivrl
add
sahf
jl
mov
int3
dec
fnstcw
inc
es
jge
outsb
or
adc
add
sbb
mov
jle
sub
adcl
test
cmc
gs
adc
xor
pushf
xor
dec
push
mov
js
jge
aad
sub
xor
mov
sub
jle
cmpsl
lret
add
sbb
or
je
pop
ljmp
pop
jmp
mov
xor
scas
xchg
jmp
movsl
inc
adcb
nop
push
popa
nop
js
aaa
cmpsl
ret
outsb
hlt
push
cld
or
call
cmp
pusha
xor
jmp
jmp
jge
jo
jge
testl
fnsave
jl
testb
int3
stos
data16
xor
adcb
adcb
lods
pop
mov
mov
sub
lea
add
add
mov
ret
inc
les
pop
add
add
inc
add
into
add
push
fucomip
jge
xor
and
stc
jle
mov
mov
and
and
rorb
dec
out
inc
roll
aad
cmp
sub
inc
mov
shll
adc
push
sbb
mov
ret
cmp
jne
mov
push
rclb
add
dec
adc
pop
das
mov
xchg
add
add
pop
ljmp
les
pop
push
jge
xlat
and
fs
stc
imul
fidivrs
xor
push
and
sub
cmp
or
and
lods
cmp
add
sbb
leave
rcrl
popa
mov
adc
pop
mov
and
push
scas
jmp
mov
inc
mov
fiaddl
mov
out
fisttpll
out
pop
stc
imul
aam
mov
mov
sbb
inc
push
roll
shll
push
xchg
add
xchg
add
jnp
jns
mov
cmpsb
and
aaa
cmpsl
ret
aam
push
mov
add
sbb
mov
ret
inc
test
adc
pop
pop
add
into
add
push
mov
or
jge
fistl
mov
xchg
adc
pop
xchg
call
sbb
mov
inc
mov
popa
xchg
and
sub
mov
inc
mov
adc
adc
cmc
gs
pop
lods
cmp
mov
xchg
dec
fistpll
int
addr16
cmp
pop
xor
mov
inc
mov
sbb
std
imul
insl
ret
stos
int
andl
or
push
xchg
or
in
mov
in
inc
sbb
pop
jb
cmp
jg
jmp
adc
imul
dec
xchg
pop
xchg
adc
or
add
jne
dec
fdivrl
and
pop
cltd
push
mov
es
dec
lret
lret
jecxz
push
in
je
lea
lea
pop
int
scas
sub
imul
fists
mov
aam
int3
stc
je
lea
jo
xorl
fisubrs
leave
pop
iret
stos
pop
shlb
and
jno
sub
ret
ret
mov
xchg
push
xchg
repz
test
add
stc
or
mov
pop
lods
adc
data16
xchg
outsb
lods
xor
jae
xchg
sub
mov
mov
sbb
xor
dec
outsb
in
bound
inc
daa
shlb
cmp
mov
movsl
cmpsb
and
or
sbb
arpl
call
mov
fs
jl
and
push
xchg
repz
test
stos
popa
fistl
cmpsl
push
mov
push
mov
add
sbb
je
ljmp
pop
adc
pop
xchg
jge
xor
fbld
rcrb
xchg
addr16
notl
dec
push
xor
cmp
aad
push
mov
sahf
or
fisttpll
mov
add
js
cmp
jl
jne
and
adc
pop
scas
xor
int
mov
mov
outsl
lcall
into
test
enter
out
jno
xorb
sahf
or
cmpsb
adc
test
lods
push
pushf
sti
push
xchg
xor
jp
outsl
or
loope
pop
iret
stos
pop
xchg
push
xor
and
push
adc
jb
lods
and
pop
push
xlat
inc
and
fstl
lods
pop
mov
mov
jns
addr16
xor
pop
int
mov
pusha
pop
repnz
lock
mov
add
add
sbb
rol
pop
add
xlat
xlat
fists
and
jmp
lock
bound
sbb
dec
ret
ret
testb
add
sbb
popa
xor
mov
pop
adc
pop
fildll
lret
jmp
les
adc
loope
pusha
pop
adc
pop
push
push
into
add
xchg
jmp
or
or
cmpsb
dec
xchg
add
and
adcl
test
and
inc
shlb
frstor
js
cs
or
cmpsb
push
flds
mov
hlt
lods
push
push
sbb
ror
je
ljmp
jmp
or
dec
and
xor
jnp
in
inc
aas
cmpsb
xor
scas
adc
mov
sbb
and
inc
fidivrl
fs
jns
inc
aad
dec
lret
and
addb
repnz
mov
cmpsl
mov
stos
into
cmp
xor
clc
push
add
add
outsb
or
leave
pop
or
xlat
xlat
fs
scas
xlat
xchg
mov
ljmp
inc
xlat
mov
mov
sub
fisttpll
out
or
idivb
mov
repnz
lock
mov
imul
fmuls
fsubrs
fimuls
push
cmpl
add
add
je
xor
sbb
adc
jp
add
xor
mov
push
xchg
pop
xchg
or
imul
fsubrs
xchg
add
add
gs
ljmp
adc
push
into
add
jge
add
or
lds
sub
push
lds
enter
mov
cli
push
cmpsl
add
sbb
leave
or
pop
xor
enter
pop
xor
jp
xor
xchg
jge
fs
pop
int3
stos
rcr
shll
test
cmp
jp
dec
fstpt
mov
sbb
ret
xor
push
mov
js
cmpsb
add
std
or
fnstsw
mov
cmp
or
jp
or
cmp
adcl
fstpt
lods
sub
pop
leave
test
mov
fisttpl
fnstsw
fs
jge
notl
ljmp
nop
pop
add
add
popa
je
outsb
pop
pop
or
loope
enter
pop
xchg
dec
xlat
scas
jge
dec
jp
add
push
xor
das
and
dec
pop
aad
sub
aas
adc
dec
adc
lcall
sbb
fisttpll
out
jg
jl
divb
sbb
mov
rorl
jae
in
sahf
or
xchg
or
insl
sahf
or
inc
and
ja
mov
dec
mov
sbb
inc
pop
lret
pop
ds
pushf
add
daa
mov
and
std
jl
add
popa
rol
sbb
adc
pop
jge
mov
imul
adc
loope
enter
pop
dec
dec
into
add
add
fisttps
mov
push
mov
les
mov
lcall
mov
stos
int
fst
push
lret
mov
ret
inc
and
ds
xchg
add
jg
lcall
lods
mov
cmpsl
pop
inc
and
jns
fs
popf
insb
cmpsl
push
fisttps
loop
loop
je
sbb
add
jae
test
mov
fmull
mov
cmp
pop
mull
pushf
outsl
lret
jle
call
push
mov
mov
push
cmp
and
xor
shll
jbe
arpl
cmc
inc
or
pop
dec
lds
add
sbb
popa
outsb
ljmp
adc
pop
xchg
scas
lcall
pushf
sti
push
test
dec
in
lock
aad
outsl
lcall
mov
das
lcall
arpl
push
xor
inc
jecxz
notl
mov
or
inc
mov
mov
shll
cmpsb
xor
scas
dec
xchg
xchg
lock
fcompl
stos
pop
mov
lods
and
push
or
pop
xlat
inc
and
adc
lock
push
mov
xchg
repz
ljmp
bnd
mov
sub
adc
dec
sub
sbb
jl
ret
push
lds
xor
bound
mov
xlat
loope
jmp
jge
call
and
scas
aas
pop
test
mov
mov
mov
inc
mov
std
popa
icebp
nop
arpl
loope
in
mov
adc
inc
jae
add
sbb
pop
ljmp
mov
adc
pop
and
scas
xchg
jmp
or
sbb
inc
fwait
aas
scas
lret
sahf
inc
shll
cltd
clc
or
pushf
sbb
xor
sub
pop
pop
fstpt
rcrl
scas
pop
mov
sbb
push
lds
popa
nop
jns
mov
inc
mov
dec
les
int3
imul
xchg
and
add
sbb
pop
mov
lcall
pop
into
sbb
mov
lcall
leave
mov
into
add
xor
scas
add
xchg
lods
cmp
aad
sub
xor
je
lea
leave
xchg
dec
adc
add
pop
ret
ljmp
pop
adc
pop
into
add
jmp
push
lcall
mov
pop
fdivr
lahf
flds
sbb
popa
gs
mov
xlat
imul
rcl
imul
ljmp
adc
jp
into
add
and
xchg
scas
sti
fs
popf
insb
fcmovne
out
ss
adc
jmp
push
call
sbb
es
imul
insl
fsub
inc
shlb
add
leave
sbb
xor
shll
mov
pop
push
push
into
add
fistps
dec
punpckhbw
adc
lcall
push
call
mov
mov
mov
dec
fdivrl
cmp
dec
lock
call
xor
pop
divl
xorb
cmp
movsl
lea
out
adc
mov
add
xchg
mov
push
popa
nop
jle
movsb
cmp
inc
pop
roll
shll
popl
add
sbb
rol
xor
outsb
popa
jp
pop
adc
pop
and
add
push
call
ret
dec
fidivrs
mov
xchg
or
jb
push
call
push
call
ja
outsl
or
jecxz
push
lret
mov
andl
add
xor
push
cmp
cmp
pushw
adc
call
xchg
jb
addr16
cltd
push
call
imulb
sahf
insl
sahf
cmp
and
adc
sub
js
mov
inc
mov
subl
in
jnp
bound
jb
in
int
into
test
adcb
adc
call
cmp
daa
push
cmc
push
call
xor
cmp
sub
add
mov
push
call
test
mov
es
inc
rclb
mov
test
or
push
call
aam
ret
std
lret
mov
adc
sub
or
aaa
pushf
cmp
pop
insb
or
xor
push
call
xchg
int
frstor
xor
rclb
mov
push
cmp
das
mov
stos
int
aad
hlt
push
cld
sbb
sub
sub
pop
rolb
shlb
and
adc
push
jns
mov
aam
fstpt
cld
jo
xorl
xor
inc
inc
and
ss
push
xchg
repz
sti
outsl
std
insl
hlt
pop
mov
lods
outsl
fimuls
std
jbe
add
mov
jmp
mov
sbb
cmpsl
aaa
push
mov
mov
or
add
add
add
or
xor
outsb
ret
push
jmp
adc
rorl
mov
push
mov
pop
pop
add
into
add
xor
jmp
mov
dec
inc
and
popa
pop
lahf
punpckhdq
es
mov
add
and
fcompl
sbb
into
pop
cmp
add
fcoms
xchg
pop
bound
aad
mov
movsl
int3
aas
aam
mov
jle
push
dec
fistpll
ja
loope
fists
pop
sti
lock
mov
lea
std
or
cmpsb
sub
push
lret
mov
cmp
dec
ret
ret
dec
fnstcw
frstor
insb
lahf
cmp
std
xor
xor
inc
in
loopne
jb
pusha
hlt
push
cld
adc
in
jge
notl
sbb
flds
mov
hlt
jne
arpl
cmc
pop
xchg
or
cli
push
push
pop
mov
js
and
icebp
add
dec
out
jg
jmp
das
fimull
cltd
sbb
cmc
gs
sbb
jnp
mov
push
rolb
sarb
push
pop
jp
ja
mov
fwait
push
mov
es
loope
mov
add
push
mov
ljmp
int
mov
dec
mov
pop
test
fwait
jbe
mov
fildll
adc
add
shrl
jno
jecxz
pop
leave
pop
cmp
and
pushf
xor
push
jbe
je
out
dec
insl
std
test
es
inc
mov
out
out
jo
popa
sti
imul
adc
cmp
jo
sbb
sti
imul
dec
cmc
jae
xchg
pop
mov
xchg
sub
xor
jbe
cmpl
dec
fdivrs
shll
push
cmpsl
and
mov
inc
mov
jp
outsb
or
sub
cmp
mov
pushf
sti
push
testl
mov
cmpsl
das
test
pop
test
lods
sub
rcll
sub
enter
ljmp
or
fwait
ja
cmp
jo
xorl
je
das
mov
sahf
or
in
cld
cmc
data16
xchg
outsb
fwait
loopne
out
jo
fisttps
mov
mov
and
mov
ret
cld
push
pop
leave
pop
cmp
outsb
das
mov
clc
or
mov
add
add
mov
popa
jge
pop
push
into
mov
jge
push
adc
pop
pop
and
into
add
push
fs
fistps
inc
mov
imul
movsb
inc
shll
xor
or
pop
repnz
fs
insl
std
test
add
jmp
xchg
gs
aad
sub
pop
mov
movsb
ret
ds
mov
movsl
mov
cmpsb
mov
les
jne
out
or
mov
xor
sub
sub
cmpsl
aaa
push
mov
cmpl
ljmp
pop
ds
sub
adcl
hlt
jg
mov
mov
mov
and
ss
cmp
pop
sbb
fisttps
mov
xchg
cmc
add
int
enter
std
outsl
lcall
adc
fildl
mov
mov
add
sbb
xor
or
mov
push
adc
pop
into
ret
or
lret
add
enter
pop
jge
into
add
push
scas
add
mov
js
aas
fiadds
mov
out
adcb
cmpb
sub
or
sub
cmc
gs
dec
push
mov
sbb
outsb
in
bound
mov
cmpsb
stos
sub
mov
lret
push
ret
cmpsb
push
mov
es
fs
adc
push
jl
outsl
or
out
sub
ret
dec
fidivrs
mov
add
mov
test
cmp
sub
jle
pusha
pop
repnz
inc
aam
dec
mov
hlt
sbb
insb
loop
je
mov
mov
cs
push
mov
xchg
icebp
add
and
lcall
movsb
cmp
or
fsubrl
mov
mov
jb
dec
roll
sarl
push
lds
jo
sub
xor
js
fimuls
popa
fistps
add
sbb
leave
or
outsb
sbb
adc
loope
or
or
sbb
loope
push
adc
pop
jp
into
add
and
xchg
mov
and
xchg
mov
xchg
aad
les
loopne
jb
ficompl
test
mov
popf
jb
loope
adc
add
ret
fsubs
xchg
gs
dec
fdivrl
ss
mov
je
dec
dec
lret
pop
ds
mov
out
jg
jmp
jg
arpl
lcall
popf
in
loopne
push
lahf
push
xchg
add
loop
pop
loop
cmpsl
xor
test
pop
test
lock
insl
int3
call
adcl
sbb
cmp
fisttpl
fnsave
fwait
or
and
push
xchg
repz
cmpsl
aas
mov
fildl
mov
enter
jns
dec
sub
pop
mov
mov
xor
inc
push
xor
sub
sar
jle
mov
in
pop
hlt
enter
push
mov
dec
fnstcw
repz
mov
xlat
jbe
xchg
testb
mov
aad
sub
xor
pop
iret
stos
pop
orl
lea
xchg
repnz
mov
std
or
cmpsb
xor
int
aam
jae
xchg
test
mov
sbb
out
sbb
stos
pop
test
ja
xorb
push
shll
std
or
jmp
fiadds
mov
out
adcl
test
jecxz
push
in
addr16
outsb
or
dec
cmp
fwait
or
sub
adc
in
sbb
mov
test
push
cltd
fbld
xchg
gs
popf
or
mov
inc
mov
sti
jp
jp
dec
int
and
cmp
lds
iret
sub
das
ret
sbb
add
sbb
pop
or
pop
popa
mov
adc
push
push
and
jmp
xchg
cmp
ss
push
fimull
fidivrl
mov
popl
xchg
repz
loopne
adc
push
jnp
in
or
mov
xchg
jg
mov
jecxz
out
jno
hlt
gs
pushf
outsl
cwtl
add
out
in
jle
rolb
mov
lods
int3
pop
leave
test
mov
rclb
sub
movsl
adc
mov
xchg
adc
inc
in
dec
rolb
shrb
mov
jg
and
mov
mov
pop
ljmp
inc
mov
lahf
push
mov
gs
inc
test
mov
and
cmp
jg
push
xlat
inc
and
aas
add
popa
dec
int
and
cmp
adc
dec
fnstcw
add
add
sbb
rcll
popa
je
add
push
into
ret
or
lret
add
xor
or
fs
push
aad
push
lret
mov
or
sub
xor
inc
movsl
das
mov
insl
std
test
addr16
imul
adc
xchg
or
imul
cli
imul
rolb
shlb
inc
aam
sub
xchg
adc
add
adc
sbb
xchg
addr16
xor
or
in
mov
lods
adc
xchg
add
cmp
adcb
dec
fstpt
stos
into
cmp
adc
bound
in
stos
das
mov
jb
xchg
inc
les
int3
orl
decb
sahf
insl
mov
clc
mov
scas
mov
std
or
sbb
aam
repnz
fs
xchg
push
mov
es
fisubrs
add
add
sbb
je
xchg
pop
push
into
jmp
fcoml
adc
fs
add
push
lcall
push
lret
mov
ljmp
add
sbb
ljmp
or
loope
mov
xor
add
xchg
pop
aaa
mov
or
and
dec
ret
push
shll
cmc
cmpsl
aaa
cmpsl
ret
roll
mov
movsb
inc
roll
sarl
leave
pop
repnz
fs
push
enter
cmp
icebp
cli
push
push
xchg
repz
mov
enter
popa
xor
sbb
mov
movsb
aas
scas
lret
leave
imul
outsl
add
add
sbb
pop
ljmp
adc
pop
into
sbb
in
adc
pop
mov
mov
mov
xchg
add
and
aad
pop
fisttps
fnstenv
and
ss
les
add
sbb
ljmp
xlat
pop
push
into
pop
dec
imul
push
into
xabort
mov
into
add
jge
dec
scas
or
jno
pusha
pop
repnz
fisttpll
out
ja
fs
sbb
or
cmc
gs
sbb
sub
enter
push
mov
mov
insb
or
mov
mov
stc
or
idivb
mov
sbb
lds
add
add
shll
pop
ret
leave
mov
push
adc
pop
into
pop
xchg
lret
xlat
hlt
pop
adc
pop
leave
jp
scas
or
fbstp
scas
mov
jge
pop
mov
jns
push
cmc
gs
adc
mull
icebp
or
outsl
lcall
aam
sar
imul
dec
fdivrl
in
mov
cmp
cmp
repz
cmc
sbb
inc
shlb
frstor
push
and
mov
mov
pop
push
xor
addr16
cwtl
push
imul
xchg
jb
cmp
push
xor
inc
pop
std
insl
hlt
pop
adcb
insl
std
test
xor
pop
lret
mov
push
cld
adc
mov
jmp
std
test
popa
in
sbb
mov
sbb
sbb
mov
loope
loop
pop
loop
in
bound
and
popa
add
sbb
js
ljmp
sbb
push
jmp
xor
sahf
or
cmpsb
gs
int
and
aaa
push
rclb
sub
jnp
mov
lahf
or
stc
imul
mov
movsl
xor
outsb
cld
fwait
jbe
fldl
mov
call
aas
mov
lahf
mov
hlt
jo
inc
daa
rclb
test
pop
test
sub
hlt
jne
mov
frstor
xchg
xorb
and
push
inc
ret
ret
cld
xchg
cmc
add
das
test
loope
cli
popf
insb
test
rolb
add
xor
and
enter
es
push
in
movaps
push
fimuls
addps
dec
mov
fcoml
pop
cmp
dec
sub
inc
popa
add
xor
dec
sub
add
or
push
lahf
push
adc
pop
jb
sub
xor
fmuls
fsubrs
inc
and
ja
jmp
push
in
push
inc
in
push
add
add
pop
sbb
or
xor
push
adc
pop
into
outsb
add
lret
scas
in
adc
pop
mov
mov
mov
lcall
arpl
xchg
cmc
add
and
push
lds
lods
cmp
inc
shlb
xor
and
mov
xor
mov
in
cmc
pusha
out
adc
or
and
imul
add
jne
out
add
gs
adc
pop
into
test
mov
and
in
sub
pop
rolb
shlb
xchg
jb
insl
sbb
mov
add
pop
mov
xor
pop
push
into
xor
imul
ljmp
xor
xchg
add
inc
and
movsb
ret
ds
std
outsb
cld
fwait
jbe
test
scas
leave
cmp
mov
jae
mov
filds
and
cmp
dec
fidivrs
dec
sub
push
ss
inc
mov
rorl
mov
mov
mov
dec
mov
or
dec
sbbl
roll
aad
cmp
mov
test
pop
lcall
lods
cs
rclb
and
repz
xor
dec
hlt
jno
xorb
mov
inc
mov
iret
dec
fdivrs
mov
jne
mov
jnp
popa
add
cmp
push
in
add
jp
ficompl
scas
pop
mov
xor
and
pop
dec
fimuls
push
mull
insb
cltd
setge
jmp
push
in
sub
jnp
in
or
scas
push
lahf
push
pop
int3
inc
and
or
push
xor
stos
add
push
cmc
dec
dec
rolb
sarb
lock
inc
stc
imul
insl
ret
insl
hlt
pop
mov
setg
or
outsl
ljmp
push
roll
shll
les
add
sbb
sbb
popa
je
mov
adc
pop
jge
push
xor
scas
add
xor
mov
cmpsl
ficomps
test
popa
add
adc
inc
and
xor
jns
jmp
out
fs
popf
insb
mov
jb
in
xchg
sbb
stos
and
push
xor
sub
out
mov
ficompl
xchg
add
sahf
push
test
pop
int3
inc
and
aaa
push
mov
std
or
mov
mov
das
iret
mov
mov
and
add
ja
mov
es
loopne
jmp
pop
int3
stos
iretw
mov
mov
pop
leave
test
lock
aas
scas
lret
cmp
ss
mov
add
dec
cli
pop
into
test
fstpt
add
and
push
pushf
sti
push
testl
divb
xorl
andl
xlat
mov
mov
bound
push
mov
jae
xchg
lret
mov
mov
push
shlb
sti
push
repnz
rcll
and
inc
and
aaa
mov
lret
sub
push
push
or
leave
pop
cmp
outsb
push
lret
pop
ds
jnp
arpl
cmc
adc
mov
jmp
in
je
insl
popa
hlt
push
cld
pop
and
xor
xchg
mov
push
mov
sbb
pushf
sbb
mov
sbb
pop
push
into
mov
jge
push
adc
pop
ret
lcall
fs
xlat
xor
scas
or
js
mov
cmpsl
lods
lret
inc
stc
iret
push
mov
mov
into
pop
cmp
jg
and
xchg
xor
int
mov
jecxz
aas
ret
push
lds
mov
cmpsb
shll
and
movsl
and
add
rcll
pop
mov
or
xor
sbb
push
fimull
fidivrl
in
sbb
es
inc
mov
or
xor
jne
mov
mov
std
or
xor
inc
push
mov
jle
jle
nop
push
popa
nop
aaa
add
or
jnp
sbb
xlat
inc
and
aaa
mov
xchg
jb
jle
call
or
dec
insl
sti
imul
push
xor
or
jle
call
xor
jbe
test
jge
and
mov
pop
add
roll
aad
xor
imul
pop
lods
dec
mov
movsl
push
mov
jns
popa
cmpsl
aaa
push
mov
dec
mov
add
mov
je
aam
adc
pop
mov
scas
push
jmp
fistps
mov
test
inc
movsb
fs
jge
notl
scas
cmp
mov
jnp
pusha
pop
repnz
roll
aad
adc
cltd
or
jo
fs
popf
insb
cwtl
data16
push
cld
adc
roll
aad
into
pop
int3
stos
ror
enter
xor
stc
outsb
cld
fwait
jbe
sub
push
lds
sub
push
lds
xchg
cld
paddb
inc
and
imul
mov
jbe
sub
xchg
pop
bound
inc
mov
mov
add
sbb
xor
mov
or
loope
mov
pop
add
into
add
jge
mov
fbld
adc
in
sbb
shll
xorb
pop
leave
test
fisubs
jns
ljmp
stc
loope
mov
jge
xchg
cmc
add
sub
add
sbb
sbb
pop
leave
gs
xor
push
adc
pop
into
shll
imul
ljmp
xlat
or
scas
dec
xlat
jge
xchg
fistps
stos
pop
mov
pushf
xor
inc
in
outsl
lcall
movsb
ret
xlat
hlt
jle
mov
xor
shll
jmp
adc
test
cwtl
decl
out
mov
ffreep
dec
frstor
jmp
cmp
inc
sbb
fs
push
cld
pop
out
in
jle
inc
aad
sub
aas
psubd
insb
addl
sbb
popa
pop
mov
mov
pop
dec
fs
jp
jmp
cmp
or
popa
hlt
push
cld
pop
push
xchg
or
insl
cmp
imul
mov
xchg
adc
pop
mov
fdivl
in
dec
fdivrs
mov
in
sbb
push
mov
js
push
mov
cmpsl
ret
pusha
loope
adc
pop
or
jmp
clc
lahf
push
divb
xorl
fdivrl
roll
sarl
out
lock
bound
bound
int
mov
std
or
push
fdivl
in
inc
lret
lret
sub
push
lahf
push
cmc
js
mov
addr16
imul
adc
dec
das
fisubrl
dec
fmuls
fdivrs
inc
and
sbb
pop
jmp
dec
fisttps
push
rclb
addr16
dec
iret
push
lret
ljmp
xor
or
test
pop
test
adc
sahf
add
cmp
push
mov
mov
cmp
cmp
movsb
pop
aaa
push
icebp
add
sbb
leave
sbb
pop
xlat
mov
pop
fs
jmp
mov
push
dec
push
call
push
ret
ret
jno
xorb
insl
std
test
mov
adc
lcall
decb
punpckhdq
jecxz
out
cs
push
punpckhbw
adcl
lods
mov
in
mov
nop
or
xchg
or
xchg
push
call
xor
call
imul
loope
adc
xor
push
lahf
push
loopne
in
adc
push
call
cwtl
subb
adc
jl
dec
adc
bound
outsb
or
sub
cmp
mov
inc
mov
pop
push
call
pop
lcall
call
test
fwait
decb
jmp
push
call
divl
xorl
xchg
jge
incl
test
jge
bound
mov
sub
pminsw
insb
push
call
push
call
sub
or
xchg
mov
je
lea
add
sbb
or
gs
je
pop
or
loope
mov
pop
push
jge
jmp
xor
scas
xchg
mov
lods
mov
cmpsl
inc
inc
mov
scas
adc
jmp
fdivrl
leave
add
jne
aad
sti
push
call
and
dec
sub
push
rcll
add
mov
scas
jp
decl
das
fidivrl
pushf
or
out
jl
negb
ret
push
les
stos
movsb
adc
jmp
mov
pop
push
mov
xchg
aas
push
nop
in
add
sbb
mov
ljmp
adc
mov
cld
push
adc
pop
jmp
fs
filds
xchg
lcall
lahf
mov
add
push
notl
push
push
cld
push
loopne
in
je
xor
push
call
je
jle
call
testb
lret
pop
xchg
ja
push
call
mov
mov
test
mov
shrb
push
test
push
lret
sbb
xchg
jo
mov
mov
adc
decl
lea
aad
sub
aas
test
nop
testl
adc
push
cmp
sub
pushf
xor
dec
data16
bound
adc
mov
imul
adc
sub
pusha
notb
fdivrs
pop
cmp
sub
pop
lret
scas
pop
mov
gs
pushf
outsl
cltd
rclb
push
mov
push
call
jbe
jnp
in
push
xor
mov
mov
and
push
rcll
and
jl
negb
cmp
sub
ja
cmp
aas
scas
lret
sbbl
jmp
dec
sub
jo
mov
andl
and
jo
xor
stc
fs
popf
insb
fistpl
outsl
or
addb
ret
sbb
mov
mov
adc
loope
xor
push
adc
pop
into
ljmp
push
adc
pop
popa
jge
jge
xchg
jge
fs
or
out
sub
mov
int
or
mov
add
sbb
or
sbb
cld
push
adc
pop
xlat
xlat
xlat
and
mov
jge
or
cld
jns
mov
dec
into
pop
cmp
cmp
adc
call
xchg
add
jnp
jbe
cmpl
inc
aam
dec
jmp
xchg
pop
jb
imul
or
jg
stc
imul
ret
mov
push
movsb
arpl
addr16
pop
data16
imul
push
lock
notb
mov
pop
int
xchg
stc
or
loop
in
jle
rcrb
pop
cld
arpl
outsl
or
testb
je
bound
icebp
nop
arpl
das
mov
inc
mov
xor
mov
xchg
adc
pop
out
inc
out
adc
push
adc
dec
cwtl
pop
fimull
fidivrl
push
mov
scas
lret
sub
inc
xlat
mov
scas
out
push
lahf
push
les
mov
cmpsb
mov
nop
testl
mov
push
imul
xchg
add
sahf
jp
mov
inc
mov
fisubrs
mov
mov
rolb
add
leave
or
outsb
popa
ret
inc
cld
push
adc
pop
or
add
add
xor
xlat
lcall
push
sub
push
mov
xchg
xor
or
pop
mov
ficomps
pop
aas
lret
mov
inc
mov
lret
lods
xor
aad
fdivrl
ja
loope
and
jge
jno
jecxz
sbbl
and
stos
sbb
xor
or
popa
mov
push
adc
pop
into
mov
jp
push
adc
pop
popa
jge
push
and
dec
add
or
out
adc
inc
pop
mov
jg
cmp
out
push
jmp
push
in
insb
inc
les
int3
sbb
add
add
mov
outsb
mov
pop
scas
scas
into
add
xlat
add
push
xchg
sub
add
sbb
mov
popa
mov
pop
and
into
add
lcall
push
jg
jmp
and
jg
push
jb
cmp
push
lds
call
lcall
mov
lret
lea
xchg
repz
test
xchg
pop
push
lea
in
sbb
or
pop
iret
stos
pop
test
sbb
or
ljmp
push
into
rorl
mov
push
aam
adc
pop
xor
or
add
jmp
add
xchg
repnz
dec
les
int3
cmp
sarl
lahf
or
lret
test
lcall
adcb
fimull
fidivl
mov
mov
jmp
push
in
sbb
push
mov
imul
push
push
push
and
add
pop
xor
mov
pop
scas
xchg
xchg
add
add
sub
loop
adc
xor
inc
mov
jmp
mov
mov
mov
push
les
out
jo
mov
leave
mov
shl
notl
or
add
add
mov
xor
pop
xor
into
add
push
jge
scas
mov
add
dec
fnstsw
dec
roll
aad
arpl
je
out
pop
push
fimuls
add
mov
out
cld
fwait
jbe
rcrl
test
mov
sbb
pop
or
ljmp
pop
xor
into
add
jge
push
jp
lcall
inc
fs
xchg
sbb
lods
lret
inc
mov
jmp
push
in
add
xlat
out
in
jg
cli
imul
jecxz
push
in
arpl
push
cld
push
popa
sti
imul
adc
mov
xchg
addr16
popf
fs
xchg
cmc
add
ljmp
popa
icebp
nop
arpl
mov
mov
mov
dec
fnstcw
and
es
mov
adc
pop
pushf
xor
inc
daa
movsl
xor
js
mov
jbe
add
sbb
nop
push
popa
nop
jo
iret
pop
cmp
cmp
inc
mov
test
sub
or
adc
jno
xorb
adc
mov
repz
jne
data16
push
popa
nop
jns
int3
inc
and
sbb
outsb
pop
pop
popa
leave
sbb
jp
push
into
xor
mov
xor
inc
adc
pop
add
mov
pop
lcall
or
jge
add
cmpsl
push
mov
fsubrs
stos
or
divl
rolb
mov
lods
stos
inc
shll
outsl
or
out
cmp
pop
adc
add
sbb
outsb
mov
mov
pop
or
into
add
jmp
xor
inc
mov
mulb
dec
les
fs
jg
mov
aam
fdivrs
jnp
in
pop
cmp
loop
in
je
xor
jg
jmp
mov
lds
lret
xchg
adc
dec
leave
pop
cmp
sub
addr16
sbb
push
mov
xchg
mov
xor
jmp
push
in
add
dec
fnstcw
in
jle
mov
stc
cmp
xor
push
fimuls
add
sti
imul
adc
movsl
xor
push
ret
cmpsb
push
mov
and
leave
pop
iret
stos
pop
rcrb
and
sbb
pusha
and
xor
sbb
pop
rcll
ja
or
sbb
je
pop
xor
mov
pop
fs
add
xlat
and
lcall
loopne
inc
fisttps
fstps
adc
iret
pop
cmp
pusha
pop
adcl
int
and
bound
aaa
xchg
or
sbb
into
in
cmc
pushf
outsl
mov
jbe
cmpl
sbb
test
pop
test
and
or
lahf
punpckhdq
pop
test
les
movsb
push
repnz
repz
gs
out
adc
add
xchg
add
add
or
popa
mov
pop
adc
pop
or
into
add
and
push
jp
pop
rolb
shlb
cmp
mov
xor
lock
sbb
mov
pop
jp
xor
inc
xlat
mov
mov
mov
mov
roll
stc
xor
jg
jnp
in
sbb
inc
and
addr16
fimuls
pop
out
out
mov
sub
sub
fmuls
fsubrs
lock
in
lods
cmp
and
repnz
pop
repnz
and
pusha
add
add
ljmp
enter
pop
xchg
fistpll
fs
filds
lcall
iret
sub
pop
jp
jne
or
std
jp
jp
xchg
adc
scas
aas
pop
test
pop
loop
sub
jnp
popa
add
cmp
stos
inc
leave
pop
cmp
sub
inc
mov
inc
lods
orb
jle
mov
in
loopne
insb
loop
je
xchg
add
test
cmpsl
xchg
or
or
loop
pop
loop
insl
cmc
gs
or
inc
aad
dec
sti
ret
pop
leave
test
lock
add
test
mulb
dec
rep
std
test
mov
cli
pop
into
test
xor
and
in
test
mov
inc
mov
mov
stos
dec
xchg
adc
pop
jecxz
push
in
clc
jl
jne
push
and
ja
xorb
push
xor
imul
inc
mov
cmp
sub
mov
stc
jnp
mov
mov
xchg
repz
cli
inc
xlat
inc
and
aaa
jle
arpl
cmc
push
mov
xchg
mov
insb
cli
push
jb
xchg
mov
mov
and
mov
jecxz
or
sbb
sub
adc
inc
add
add
pop
sbb
xor
mov
pop
fs
add
add
xlat
or
and
popa
add
pop
mov
mov
xchg
add
cmp
pop
int3
stos
rol
imul
insl
in
or
xor
or
cmpsb
jb
mov
ja
gs
sbb
das
mov
in
sbb
add
aam
sub
mov
sbb
inc
rclb
sub
imul
insl
mov
fcoml
pop
xchg
loope
cltd
push
jge
push
data16
pop
ds
loopne
jecxz
jne
cmp
pop
out
adcl
test
inc
and
jns
mov
add
sbb
sbb
pop
or
loope
enter
pop
xlat
xlat
into
add
and
dec
fbstp
push
mov
hlt
stos
inc
shll
dec
fnsave
sbb
push
jns
pusha
movsl
xor
data16
xchg
outsb
lahf
cltd
add
sbb
sbb
sarl
lcall
adc
pop
xlat
xlat
into
add
push
fistps
sahf
push
xchg
repz
cmpsl
and
jnp
mov
mov
mov
sub
add
add
ljmp
push
pop
push
into
ret
jmp
pop
les
adc
loope
insb
pop
adc
pop
mov
into
add
or
dec
xlat
xchg
xchg
jb
imull
lahf
push
or
cmp
mov
aam
in
jg
lea
xlat
push
lret
mov
jnp
or
sbb
jo
nop
push
popa
nop
jo
push
mov
pushf
sti
push
fcoml
mov
jno
jecxz
mov
shlb
add
jp
pop
xchg
adc
fwait
adc
in
sbb
add
xchg
push
mov
es
inc
xlat
mov
cmpsl
cmpsl
xor
int
leave
lds
scas
pop
cld
out
jle
mov
shlb
int
bound
mov
add
add
pop
ret
popa
xor
adc
pop
add
fs
pop
push
into
gs
mov
fs
les
adc
loope
insb
pop
adc
pop
xlat
xlat
into
add
and
xchg
scas
push
inc
aad
sub
aaa
push
lds
iret
and
jno
loope
adc
adc
lods
fildl
mov
call
fisubs
xchg
add
roll
shll
roll
sarl
sub
enter
dec
jnp
dec
sub
pop
addl
je
gs
sbb
jb
push
mov
pop
jb
data16
gs
sbb
inc
test
test
adcl
test
lock
lds
fisubl
fmuls
push
xor
sub
outsl
or
in
dec
fdivrl
or
push
shll
add
jo
loop
dec
fisttpll
out
dec
fisttps
flds
mov
cs
test
jecxz
lods
lret
inc
mov
inc
shll
mov
and
testl
adc
data16
xchg
outsb
fnstcw
adcb
cmp
jg
mov
jg
or
or
dec
sahf
idivb
mov
or
jb
or
dec
fidivrs
and
push
jmp
popf
xchg
adc
in
gs
pushf
outsl
push
fmuls
fdivrs
ret
ret
icebp
popa
add
pop
sub
fdivl
in
adc
push
fisttpll
out
add
jne
cmp
notl
push
les
test
push
cld
fisttps
mov
sub
push
outsb
stc
imul
push
jns
jns
inc
sbb
je
sbb
push
into
mov
jp
push
adc
pop
pop
scas
scas
into
add
lcall
push
roll
aad
fildl
mov
call
ja
push
roll
aad
xor
sbb
pop
mov
inc
testl
inc
loop
pop
loop
scas
xor
push
xor
sub
fs
pop
leave
dec
fidivrs
call
mov
jg
push
ljmp
stc
jmp
imul
fdivrl
xor
push
in
sbb
scas
lret
jno
insb
or
in
out
jg
jmp
iret
cmp
arpl
addr16
pop
lahf
or
in
loope
dec
fnstcw
xor
pop
enter
adcl
inc
xlat
inc
and
aaa
in
out
jo
push
add
xchg
add
daa
dec
rolb
sarb
push
lds
pop
ljmp
mov
subb
sub
clc
outsb
or
jg
popa
icebp
nop
arpl
xchg
adc
in
sbb
data16
push
in
or
sahf
jg
arpl
xchg
cmpl
push
rolb
shlb
mov
stos
int
rclb
xchg
add
jnp
data16
xchg
outsb
mov
add
push
xchg
pop
fcoms
mov
insb
or
loop
push
xor
sub
daa
int3
mov
lds
insl
hlt
pop
in
mov
roll
and
js
insb
loop
je
ljmp
lcall
mov
or
out
dec
fdivl
in
add
pusha
stc
imul
mov
and
clc
inc
jbe
jle
call
cmpsb
push
in
mov
push
jg
add
mov
or
mov
pop
dec
jp
mov
xor
jp
scas
xchg
fisubrs
into
adc
incl
mull
jg
jmp
xor
xor
insb
cwtl
push
call
mov
aad
int3
dec
fisttpll
out
dec
fmuls
fdivrs
sbb
leave
adc
decl
lahf
punpckhdq
mov
and
clc
repz
call
sub
fsts
lcall
mov
xchg
jle
cmp
insb
loop
je
or
ss
in
push
call
add
enter
dec
push
call
rcrb
pop
icebp
lods
xor
int
addl
mov
jo
cmpsb
fcoml
jmp
xchg
testb
xchg
cmp
add
sbb
pushl
loop
push
call
aaa
int
cmc
cmp
push
call
imull
lahf
push
and
adc
mov
leave
push
lahf
push
inc
push
call
sbb
jno
xchg
mov
int
and
xor
jp
iret
add
sbb
mov
or
mov
pop
dec
dec
into
add
fs
and
xchg
sub
adc
or
sbb
imul
mov
push
call
mov
rclb
clc
adc
lock
lcall
nop
push
popa
nop
aaa
pop
rolb
rcrb
nop
pop
fwait
and
std
out
add
jo
ljmp
repnz
ljmp
cmc
adc
call
dec
sub
cmp
jnp
inc
iret
pop
cmp
ds
push
call
popf
push
call
outsb
imul
call
and
inc
and
ss
mov
add
or
lcall
mov
jg
sub
ret
add
ret
push
lds
outsl
clc
outsb
or
adc
repnz
add
jo
xorl
shlb
add
inc
shll
and
mov
sbb
adc
xchg
and
les
int3
dec
int3
add
das
push
add
mov
mov
inc
mov
mov
loope
adc
adc
aad
mov
hlt
and
lock
pop
pop
xchg
add
sahf
jl
xchg
add
jnp
pop
lret
scas
pop
mov
test
xchg
mov
xor
push
add
sbb
mov
or
mov
pop
dec
dec
into
add
mov
dec
xchg
or
dec
frstor
xor
add
sbb
add
mov
inc
mov
fwait
adc
jp
gs
or
jb
in
jmp
out
mov
inc
roll
shll
mov
mull
icebp
sbb
popa
test
dec
sub
push
adc
ljmp
stc
imulb
jge
jnp
in
inc
xchg
mov
es
int3
push
shlb
shlb
fildl
mov
lds
push
cmc
je
lods
and
xor
imul
popa
add
pop
scas
sub
addb
repnz
nop
push
test
push
notl
xchg
add
movsl
xor
stos
cmp
inc
mov
shlb
test
push
mov
jg
pop
push
call
sbb
popa
in
jge
notl
daa
test
pop
test
jbe
push
add
sbb
outsb
sbb
shll
mov
pop
and
or
lcall
lcall
cli
push
cld
xchg
cmc
add
cltd
setg
or
cld
aas
cmp
cltd
push
pushf
sti
push
cld
sbb
jg
mov
jb
jle
call
aam
xchg
lret
push
shll
xor
push
add
sbb
xor
je
pop
outsb
fbld
pop
scas
fs
xlat
fs
ja
xorb
pusha
notb
mov
cmp
dec
fstpt
movsb
ret
ds
pop
rcll
fistpll
je
push
cld
sbb
out
mov
rcrl
cli
mov
cwtl
decl
in
dec
fdivrl
movsb
ret
fcompl
xchg
pop
bound
push
movsb
outsl
xor
and
cmp
dec
ret
dec
ret
mov
outsl
lcall
push
popa
nop
add
into
arpl
xchg
gs
xchg
add
mov
cmp
dec
cs
fmuls
push
mov
hlt
push
pusha
cli
push
dec
fdivrl
cli
popf
insb
lds
sbb
xor
leave
pop
cmp
pusha
les
add
sbb
gs
sbb
mov
adc
pop
mov
jmp
jmp
cli
imul
insl
fcompl
pop
ds
das
mov
inc
mov
jmp
into
lods
add
add
leave
ret
popa
or
je
lcall
into
mov
jge
mov
adc
pop
mov
into
add
and
mov
xor
lcall
rclb
cmpsl
push
xchg
push
ret
cmpsb
push
mov
scas
cmp
mov
cmc
je
lea
movsb
cmp
inc
pop
fimuls
push
sbb
scas
sub
dec
frstor
add
add
pop
cltd
adc
mov
xchg
jb
adcl
and
movsl
push
stos
lea
add
add
sbb
ljmp
mov
or
into
add
and
scas
lcall
mov
xchg
repnz
xor
dec
jecxz
push
in
fistl
cmpsb
push
mov
and
mov
mov
es
outsl
cli
push
lcall
inc
es
inc
fimull
fidivl
loope
adc
pop
push
leave
pop
cmp
pusha
das
mov
inc
mov
cwtl
add
std
or
nop
adc
push
lret
fldt
mov
and
push
add
sbb
insl
or
push
rolb
sarb
mov
fnstcw
ret
push
lds
popf
jb
lds
iret
das
rorl
dec
in
mov
xchg
repz
lds
mov
inc
mov
mov
add
add
or
je
mov
push
into
leave
fildll
lret
or
pop
mov
mov
mov
xchg
js
mov
aas
mov
inc
mov
cmp
pop
leave
test
lods
push
lret
mov
aad
sub
sub
push
lahf
push
mov
jmp
pusha
notb
in
jg
jmp
imul
fstpt
mov
sti
imul
dec
push
xchg
add
sahf
aaa
lock
lcall
inc
and
out
xchg
pinsrw
add
je
shll
mov
pop
push
into
je
imul
pop
xchg
mov
fs
scas
mov
lcall
jg
jnp
jne
out
inc
and
das
dec
mov
leave
cmp
insl
in
push
aad
sub
or
jae
in
lods
xor
mov
lcall
data16
xchg
outsb
mov
mov
outsl
ljmp
das
dec
mov
test
inc
xlat
mov
test
inc
inc
lret
lret
mov
inc
mov
stc
jnp
mov
ficoms
mov
mov
test
jge
jns
and
sub
xchg
jb
insl
stos
cmp
mov
scas
sbbl
mov
mov
and
ss
das
mov
dec
mov
outsb
popf
xor
xchg
pop
lds
iret
fs
mov
mov
sbb
pop
jb
cmp
push
xor
inc
icebp
push
shlb
push
in
add
add
sbb
pop
push
into
ljmp
mov
je
add
add
jge
xlat
jp
xor
mov
adc
js
out
jl
notb
xor
das
scas
aas
pop
test
and
ds
lods
cmp
das
dec
mov
dec
mov
scas
pop
std
imul
cmc
jl
jne
push
stos
cmp
dec
mov
shll
cs
and
xchg
add
jnp
pop
into
test
inc
sub
jp
inc
shlb
mov
sbb
mov
inc
shll
adc
mov
imul
pusha
stc
imul
mov
cs
push
ret
cmpsb
push
in
in
jmp
ljmp
cwtl
decl
mov
aam
sbb
mov
mov
je
lea
cmp
mov
iret
dec
fdivrl
pop
ds
push
mov
clc
lahf
push
push
sbb
fnstenv
sahf
fcoms
mov
push
imul
pop
int3
stos
data16
dec
addr16
test
pop
cmc
pop
lret
lret
addr16
add
sbb
leave
gs
add
push
adc
pop
into
sbb
mov
pop
xor
xlat
into
add
jp
or
dec
push
add
adcb
andb
push
pushf
sti
push
aad
ret
ret
popf
or
dec
fnstcw
jns
jmp
push
int3
inc
and
push
xor
ja
xor
cli
popa
icebp
nop
arpl
insb
repnz
pop
repnz
fs
imul
pusha
pop
repnz
fiaddl
mov
aad
dec
lret
scas
lret
sub
pop
fstpt
adc
or
jecxz
sti
sahf
insl
adcb
sbb
add
or
mov
or
push
adc
pop
into
mov
jp
aam
adc
pop
pop
xlat
xlat
into
add
jge
jp
push
xor
aas
mov
js
xchg
cmc
add
lods
das
mov
gs
pushf
outsl
in
data16
xchg
outsb
leave
sbb
jp
popa
add
pop
inc
int3
inc
and
lods
mov
cmpsl
test
sahf
stc
or
dec
les
int3
cmp
dec
adc
or
scas
pop
ret
push
shll
dec
mov
testl
push
mov
xchg
popa
xchg
punpckhdq
into
cmp
jge
cmp
add
add
ljmp
or
loope
and
push
adc
pop
into
pop
jge
mov
fbld
pop
rorl
into
add
lcall
jg
jne
out
inc
push
lret
lret
into
pop
cmp
jg
jmp
push
in
pop
or
stos
movsb
ret
ds
inc
mov
push
add
sbb
gs
sbb
adc
pop
scas
add
fistps
xchg
popa
nop
pop
jmp
add
add
popa
mov
lcall
pop
into
sbb
imul
ljmp
and
push
jmp
mov
jl
jne
bound
sbb
insl
mov
lahf
cli
or
adc
push
popf
jno
add
mov
ljmp
pop
jmp
jp
mov
and
dec
das
mov
add
sbb
pop
leave
mov
push
pop
push
into
ret
dec
imul
pop
and
into
add
jge
lcall
mov
adc
in
sbb
or
popa
insl
in
sbb
paddsw
xchg
outsb
leave
test
in
pusha
notb
xor
scas
dec
sbb
add
jae
mov
test
mov
in
sbb
add
fs
pop
leave
pop
cmp
outsb
mov
repnz
loopne
jb
xchg
add
pop
lret
scas
pop
mov
outsl
lcall
mov
jo
loop
pop
int
addr16
xor
jle
jbe
loopne
or
and
jae
mov
repnz
std
insl
hlt
pop
andb
lea
inc
les
int3
sub
xchg
add
jo
add
xor
int
fdivrs
icebp
nop
arpl
leave
rcrl
test
mov
or
les
idivl
mov
mov
mov
fists
lcall
or
push
pop
rolb
mov
mov
mov
movsb
cmp
xchg
jb
insl
je
jno
jecxz
and
push
stc
insb
loop
je
inc
fldt
stos
aaa
cmpsl
ret
sahf
push
xchg
repz
cmpsl
jb
jns
jmp
ret
xchg
fs
add
lret
pop
ds
fldl
add
add
sbb
leave
ljmp
adc
pop
xor
lret
fbld
pop
leave
jmp
jmp
mov
xlat
push
scas
xchg
inc
shll
xor
scas
sub
scas
inc
push
xor
sbb
jbe
loopne
out
cmc
pushf
outsl
mov
fisubrs
jle
call
ds
je
add
push
cmpsb
and
mov
inc
mov
test
cmc
adcl
test
sahf
or
cmpsb
dec
xchg
sbb
nop
push
popa
nop
jb
push
xchg
repz
out
adc
in
bound
sub
dec
jg
jge
notl
mov
js
dec
mov
enter
xchg
outsb
test
add
sbb
pop
leave
je
or
enter
pop
dec
dec
into
add
mov
jmp
jp
jl
negb
pop
enter
outsl
mov
mov
jbe
cmpl
cld
xchg
cmc
add
mov
xchg
xorb
push
cmc
inc
add
push
imul
dec
fdivrs
jl
divb
les
int3
sbb
sub
cmp
cmc
add
jno
add
adc
jg
mov
daa
mov
xchg
sbb
push
cltd
adc
push
fldl
add
gs
xor
lcall
add
adc
pop
xchg
or
xor
or
and
jle
imul
pop
std
jnp
mov
mov
push
rcll
pushl
sub
insl
std
test
push
fstpt
xchg
push
mov
es
jmpw
jmp
mov
xlat
data16
imul
push
and
or
test
and
inc
and
cmp
out
inc
shll
adc
jb
xchg
pop
bound
adc
dec
sbb
repnz
loop
je
imul
in
jo
xorl
sti
dec
jno
inc
and
push
adc
push
rolb
rolb
sbb
int3
stos
xchg
test
nop
testl
cmp
sub
mov
stos
cmp
inc
jg
imul
sbb
dec
frstor
push
in
and
push
pop
push
fisttpll
out
or
stc
je
lea
fisttpl
fnsave
rolb
mov
mov
roll
aad
out
in
jg
adc
jmp
adc
outsb
adc
inc
shlb
add
jmp
insb
ficoml
mov
push
out
dec
rolb
sarb
imul
roll
aad
push
leave
pop
cmp
jle
dec
fidivrs
add
sbb
leave
mov
sahf
fs
mov
or
adc
adc
dec
into
add
fistpll
xlat
push
and
mov
mov
sbb
sbb
and
notl
adc
js
outsl
or
in
int3
inc
and
shll
mov
mov
mov
pop
xchg
add
jno
mov
inc
mov
clc
jo
xorl
outsb
cmpb
add
sbb
dec
fdivrs
and
pop
fs
jg
jmp
and
cmp
lods
pop
sahf
push
pushf
sti
push
mov
mov
dec
mov
shll
ret
inc
and
xor
dec
mov
pop
mov
mov
adc
insl
std
test
filds
mov
icebp
inc
fisttps
mull
icebp
dec
sbb
push
jno
sub
xchg
cmc
add
mov
xchg
push
aaa
ret
lcall
pop
jp
jno
xor
icebp
popa
add
adc
loope
push
lahf
push
mov
lods
xchg
adc
add
stos
cmp
or
dec
fdivrl
inc
sub
xor
cmpsl
adc
sub
in
notl
xchg
in
sbb
dec
fmuls
fsubrs
out
dec
arpl
pusha
pop
repnz
mov
lret
pop
repnz
fs
gs
pushf
outsl
test
aaa
sub
nop
or
int3
inc
and
mov
cs
mov
mov
lahf
cli
or
cmp
stos
cmp
sub
inc
call
mov
pop
mov
shrl
mov
jns
push
mulb
pop
cmpsl
aaa
push
mov
mov
stos
test
xchg
xorb
sbb
ljmp
mov
pop
jp
into
add
push
xlat
scas
dec
xchg
and
cmp
pop
into
test
and
adc
push
stos
and
in
sbb
add
je
leave
outsb
or
dec
mov
pop
xor
add
xlat
jge
push
fisttps
flds
sub
push
push
aaa
stos
cmp
inc
xchg
add
outsl
lcall
gs
ds
push
pop
roll
aad
iret
pop
leave
test
mov
leave
pop
cmp
outsb
add
repnz
cmp
cmp
add
cld
inc
loope
in
je
sub
je
lea
or
in
mov
aaa
subb
es
jbe
dec
fstpl
mov
cs
add
rclb
cmpsl
push
mov
sbb
aad
mov
movsl
int3
aas
aam
fisttps
flds
push
inc
and
xor
iret
push
fimuls
add
inc
shlb
dec
adc
adc
pop
roll
shll
push
mov
adc
stc
imul
xchg
icebp
add
mov
mov
sbb
jle
jl
notb
adc
in
sbb
jno
jne
out
setno
xchg
repz
in
mov
inc
mov
out
loope
jae
xchg
push
pushf
sti
push
out
das
mov
test
push
lea
clc
outsb
or
push
dec
fisttpl
adc
cwtl
push
imul
inc
aam
dec
leave
mov
hlt
rclb
mov
or
cmpsb
inc
and
dec
std
jns
mov
movsl
and
ljmp
stc
jmp
imul
aaa
push
mov
jle
sub
fisttpll
out
ss
test
leave
dec
rclb
and
mov
sarb
push
loopne
add
sbb
pop
shll
xor
or
loope
xchg
jp
or
adc
adc
fs
add
and
dec
jmp
add
ljmp
mov
pop
xlat
jmp
lcall
xor
mov
or
push
add
pop
sti
std
call
inc
fidivrl
xor
scas
pop
lods
xor
sub
mov
push
add
xor
std
jmp
mov
dec
fidivrs
popf
in
mov
xor
push
add
adc
std
jns
enter
ljmp
std
jmp
jge
je
xor
fwait
or
sbb
sahf
or
cmpsb
and
push
call
sbb
mov
push
call
fsubs
push
call
aad
lds
scas
pop
mov
out
ficoms
add
add
mov
leave
xlat
fs
push
into
pop
jge
mov
xlat
adc
adc
pop
mov
mov
mov
and
lcall
push
add
test
std
pushl
add
popf
clc
std
pushl
fs
sbb
and
scas
aas
pop
test
sub
add
cmp
pushl
test
xchg
icebp
add
in
data16
xchg
outsb
mov
push
add
clc
std
push
psadbw
add
clc
std
pushl
repz
jmp
orb
ss
push
lds
shlb
push
xor
and
nop
push
popa
nop
je
push
call
xchg
sbb
ja
xorb
and
sbb
cld
jmp
jmp
add
pop
pop
lea
jmp
cmp
sahf
or
in
cld
test
pop
int
and
jb
jmp
aas
jmp
data16
gs
add
sbb
enter
and
mov
leave
pop
cmp
outsb
mov
mov
fimuls
push
imul
add
pop
mov
push
add
xchg
idiv
mov
dec
push
lds
xchg
mov
xchg
and
pushl
sahf
pop
rclb
ja
dec
fstpt
jmp
jmp
xchg
setg
or
xchg
adc
dec
sub
pusha
and
push
call
jmp
pusha
loop
pop
loop
outsb
repz
cmc
adc
lds
inc
lds
iret
das
jle
add
sbb
popa
je
gs
push
adc
pop
xchg
mov
scas
dec
push
xor
leave
sbb
pushl
mov
stos
into
cmp
jbe
arpl
inc
cmc
jo
xorl
cld
inc
jmp
ficoms
pop
mov
xchg
ss
jmp
jmp
jbe
insb
or
int
jmp
pop
aad
sub
xor
pop
loop
add
sbb
imul
push
rcr
sahf
jmp
out
jl
negb
mov
rorl
or
jno
fcoml
cmpsl
jmp
sbb
push
lea
scas
sbb
call
test
pop
xchg
adc
xor
xor
inc
out
out
jo
std
test
sbb
pushl
jo
loop
ds
mov
loope
jmp
imul
add
push
js
jno
jecxz
lcall
xchg
or
push
lea
imul
jo
xorl
and
dec
pop
lret
scas
pop
repnz
rolb
shlb
adc
adcl
sahf
or
ljmp
js
ljmp
cld
jmp
jmp
jle
xchg
testb
fdivrs
dec
leave
pop
cmp
sub
loop
inc
and
add
add
leave
shll
pop
je
push
add
adc
jmp
add
and
jmp
jmp
xlat
sub
cld
incl
push
cmp
and
rolb
shlb
pop
fdivl
in
adc
adc
call
ds
insb
jmp
add
inc
iret
pop
cmp
sbb
test
dec
and
stc
scas
jmp
loope
cltd
push
es
pop
rolb
shlb
jle
pusha
pop
repnz
sbb
jmp
cwtl
insl
std
insl
hlt
pop
in
fs
gs
or
dec
fidivrs
mov
cld
ljmp
and
call
shrl
cli
sbb
dec
fdivrs
ss
mov
add
sbb
pop
pop
mov
add
adc
add
fbld
xchg
jmp
adcl
sub
iret
pop
cmp
popa
push
iret
pop
cmp
jle
stos
fiaddl
jmp
push
jmp
pop
rcll
jle
jbe
cmpl
in
sbb
punpckhdq
out
cld
lcall
sbb
jae
jo
cld
lcall
sbb
fistpll
dec
sub
pusha
nop
xor
mov
xchg
inc
cwtl
jmp
or
cld
jmp
jnp
in
or
pop
mov
adc
dec
dec
fidivrs
xchg
and
decl
pop
and
cmp
cli
lcall
xchg
jmp
lods
push
inc
lods
jmp
jmp
push
xchg
pop
bound
sub
or
inc
aad
dec
movsb
mov
das
xor
push
push
call
mov
xchg
icebp
add
or
push
jmp
mov
cld
cmp
ret
mov
push
xor
sub
mov
xor
pushl
adc
push
cld
pushl
jb
insl
hlt
pop
icebp
push
jae
jmp
and
ret
mov
cmp
push
mov
mov
sbb
arpl
mov
cld
ljmp
out
cld
decl
das
fidivrl
xchg
add
mov
pop
sub
jmp
sbb
pop
jp
xor
and
jle
std
jmp
inc
fldt
mov
mov
stos
cmp
add
push
cmp
jb
jmp
jmp
mov
es
jmp
fadds
mov
out
mov
xchg
mov
sbb
test
lahf
ss
jmp
andb
shll
cmpsl
or
divb
jl
push
inc
jmp
dec
iret
pop
cmp
xor
fs
jmp
pop
fmuls
fdivrs
stos
sub
lock
bound
add
mov
pop
inc
push
mov
mov
add
push
xor
jmp
cld
lcall
sub
adc
or
jp
push
xchg
repz
loopne
push
test
push
negl
addl
add
leave
outsb
or
xor
in
cmp
adc
xor
xchg
dec
scas
xor
jmp
push
mov
gs
jbe
and
jmp
jmp
lea
jmp
dec
ret
ret
std
insl
hlt
pop
into
in
jge
negl
cwtl
pop
les
out
stc
jmp
cmp
pop
jmp
sbb
rorl
mov
cld
incl
jmp
jae
xchg
scas
daa
mov
and
insb
loopne
adc
or
cltd
jmp
shr
jns
cld
jmp
ret
jmp
add
adc
gs
jnp
lret
xor
add
add
shll
mov
cmp
adc
and
fistpll
and
jmp
push
aaa
ret
pusha
cmp
and
lds
cld
decl
dec
adc
es
and
pushl
push
imul
insl
mov
inc
shll
or
je
lock
jmp
pop
repnz
fs
lods
inc
insb
jmp
inc
fisttpll
out
mov
mov
mov
xchg
sub
jne
mov
dec
test
add
inc
or
out
lret
jmp
or
and
sbb
jmp
in
jle
xor
cld
decl
xor
ud2
pusha
cmp
sub
cld
jmp
xor
cmpsl
add
std
or
cltd
sbb
dec
fidivrs
ljmp
std
or
sbb
xor
inc
in
push
lahf
push
lds
in
adc
jmp
jmp
push
jmp
or
mov
ret
sbb
clc
lret
cld
jmp
test
inc
leave
pop
cmp
outsb
dec
xchg
xchg
jmp
movsl
xor
xchg
add
jg
iret
pop
cmp
xor
pop
ret
pop
sub
lea
cld
jmp
gs
cld
incl
adcl
rcrb
stos
data16
dec
rcll
xor
int3
and
push
shlb
pop
adc
jmp
sub
and
add
leave
push
cld
jmp
jmp
jmp
jbe
cmpl
in
bound
stos
sti
repnz
add
sbb
mov
or
or
loope
mov
pop
dec
mov
jp
or
jmp
and
fimuls
mov
test
pop
mov
add
in
xchg
jbe
or
decl
xchg
add
daa
pop
loope
ja
jmp
ja
jge
negl
jb
in
out
ja
xorb
or
cwtl
xchg
sub
adc
lcall
xchg
jb
cmp
bnd
mov
mov
das
dec
mov
stc
jmp
insb
sbb
incl
cmpsl
aaa
push
mov
or
orb
inc
shll
jmp
les
dec
lods
jge
je
addr16
fsubrl
hlt
jno
xorb
inc
jmp
jmp
or
daa
or
call
dec
fnsave
lea
notl
jns
out
or
cld
ljmp
mov
lret
scas
and
inc
enter
sub
lcall
add
add
sarl
or
adc
pop
and
xor
jmp
and
or
and
add
sbb
pop
sbb
or
ret
fisttps
adc
pop
add
add
or
jge
mov
mov
fwait
decb
out
adc
add
push
decl
jmp
jle
bound
jmp
sbb
repz
lcall
arpl
adcl
mov
adc
inc
mov
jmp
push
xchg
pop
bound
popa
insl
jmp
shrl
loopne
jmp
in
jg
mov
test
xchg
adc
in
cmc
outsb
cld
fwait
jbe
fs
lret
cmpsl
push
sti
addl
cld
jmp
cli
jg
ja
loope
rclb
cld
jmp
sbb
mov
cld
call
lcall
test
jge
cmp
imul
push
inc
fimull
fisubrl
and
add
sbb
outsb
popa
sbb
ljmp
pop
jp
fucomip
add
mov
xorb
adc
pushl
xchg
jnp
js
repz
jmp
inc
mov
outsb
jmp
ds
push
loopne
movsl
and
incl
out
jnp
jmp
mov
movsl
int3
aas
jmp
inc
mov
ret
and
dec
fdivrl
jmp
out
jmp
dec
into
pop
cmp
aas
push
fisttpl
fnstsw
xor
dec
int
and
cmp
jmp
mov
rorl
adcl
cmp
pop
cld
jmp
stos
and
movsb
cmp
inc
mov
aam
push
cmp
pop
jmp
mov
js
cld
jmp
aas
jmp
dec
ret
ret
mov
mov
test
out
jg
jmp
jmp
in
jge
je
jo
sub
lds
pop
int3
inc
and
stc
jmp
cld
push
lahf
push
xchg
pop
xchg
repnz
std
outsl
lcall
lods
mov
loop
mov
adc
int
and
and
out
or
mov
decl
dec
inc
mov
jmp
xlat
push
je
lea
mov
add
add
mov
sbb
adc
adc
pop
lcall
xlat
dec
jge
jmp
shlb
push
mov
decl
mov
mov
ficoml
jge
dec
adc
bound
mov
jg
or
into
sbb
jne
xor
mov
cld
jmp
gs
pushf
outsl
mov
jp
xchg
add
jno
mov
inc
mov
mov
cld
ljmp
jle
call
or
call
jmp
sub
cmpsl
jmp
xchg
xchg
lock
leave
inc
shll
pop
cmp
jno
cmp
jmp
sahf
adc
shll
xchg
xchg
jmp
nop
sbb
adc
push
imul
pop
xchg
adc
or
mov
mov
and
jg
jge
notl
mov
or
sti
jmp
sub
pushl
jne
out
adc
ds
aas
pop
test
sub
xor
fdivr
sti
lcall
scas
lcall
test
push
adc
mov
sbb
lock
aam
loope
out
mov
mov
add
add
xor
ljmp
adc
push
push
jp
lcall
jmp
pusha
insb
or
scas
hlt
imul
cmp
jo
mov
push
cld
pushl
stos
cmp
sbb
std
jl
adcb
addb
jmp
out
sbb
mov
cld
jmp
mov
mov
cmp
sub
and
sub
adc
jmp
gs
pushf
outsl
test
sbb
imul
inc
out
sub
jmp
add
imul
orb
cli
or
mov
shl
fdivs
decl
jmp
xor
clc
jbe
cmpl
and
dec
frstor
and
jmp
lods
and
inc
aad
imul
enter
mov
mov
and
sub
stos
cmp
dec
frstor
jns
cld
push
popf
or
and
push
adc
call
push
xor
daa
repnz
pushf
outsl
lret
mov
xlat
mov
jmp
flds
mov
hlt
imul
push
lock
fnstenv
inc
sbb
jae
sti
pushl
sub
sti
lcall
xchg
mov
test
mov
sbb
popa
fadd
pop
repnz
fs
add
add
leave
pop
or
shrl
sbb
adc
pop
scas
add
push
jp
xlat
add
jge
fists
mov
js
andb
shll
cmpsl
mov
mov
stos
jne
push
jmp
pusha
add
sub
sti
call
lds
pop
jp
jno
dec
fidivrs
addb
cld
cmp
test
and
jmp
sbb
jo
lcall
push
aad
sub
aas
pop
xchg
pop
bound
fisubrs
push
cmc
sbb
aam
sti
pushl
jmp
enter
sti
pushl
push
cld
adc
cmp
cmp
jg
gs
ss
jnp
jmp
dec
push
xor
and
push
xor
and
imul
idiv
jmp
fs
sbb
repz
sti
push
jecxz
test
cmc
sti
out
popa
icebp
nop
arpl
loopne
sahf
or
in
cld
das
dec
scas
push
and
jmp
push
gs
xor
jne
and
cld
jmp
into
arpl
xchg
gs
fisttpl
mov
push
cmp
push
or
or
js
jmp
adcl
sbb
fwait
jmp
xor
cli
insl
std
test
rcrl
pop
je
jmp
cld
push
imul
inc
sti
call
in
pusha
notb
nop
testl
jb
xor
repz
sbb
popa
ljmp
adc
pop
adc
jge
push
scas
xor
push
jp
and
add
sub
cmc
hlt
sti
in
pop
loopne
mov
jmp
sti
push
mov
sti
incl
das
fidivl
repnz
pop
repnz
and
in
imul
sub
or
jns
or
inc
ljmp
add
testb
pop
cld
cld
pop
int
loopw
cld
xchg
cmc
add
addb
lock
ss
inc
mov
mov
sti
jmp
rcl
shlb
pop
cld
inc
inc
aad
dec
lods
je
add
push
mov
in
std
ja
xchg
testb
jb
sti
decl
leave
jmp
jmp
stos
and
xchg
add
pop
xchg
pushf
sti
push
clc
mov
mov
sub
lcall
xchg
add
jmp
pop
inc
and
cmp
fcomi
aam
sbb
shl
sti
sti
jne
mov
out
stc
cwtl
imul
ret
push
mov
jmp
jmp
out
adcl
test
insl
std
test
push
popf
or
rolb
shlb
push
jg
jmp
jmp
jmp
insb
stc
imul
xchg
cmc
add
in
out
jo
fildl
mov
mov
repz
call
aas
jmp
adc
and
nop
icebp
push
inc
fdivl
in
faddl
jmp
jmp
sbb
inc
shlb
pop
jb
cmp
dec
das
ficompl
mov
adc
cld
push
push
les
and
gs
inc
add
jmp
sub
push
ljmp
jmp
push
aad
sub
cmp
in
jge
notl
cmpsl
daa
mov
and
xor
and
mov
cmc
sti
in
imul
ljmp
es
inc
push
xor
daa
cmpsb
sub
lds
sbb
and
js
jle
jmp
ficoms
lods
pop
mov
aam
sub
mov
sbb
jb
pop
inc
mov
mov
inc
push
jmp
icebp
adcl
test
sub
jbe
inc
push
jmp
sub
sub
lea
fisttpll
out
insl
std
test
jb
xor
incl
dec
sub
pusha
repnz
inc
push
mov
jnp
in
add
test
test
cmp
pushl
test
imul
jmp
faddl
dec
in
or
mov
mov
xor
fisttpll
jmp
mov
in
fucomip
mov
or
fdivrl
mov
and
push
inc
les
int3
sbb
push
cld
call
xchg
lea
jmp
cmp
or
jl
sub
mov
ljmp
jmp
and
dec
sbb
mov
movsl
cmp
push
lds
scas
xlat
cmpsb
pop
add
add
or
outsb
mov
adc
pop
push
dec
dec
jp
scas
or
jge
xor
jmp
jmp
ret
inc
fidivrl
mov
and
push
roll
sarl
stos
int
lock
loopne
cld
decl
push
xor
and
pushf
sub
idivl
mov
jb
cmp
cld
jmp
gs
orb
mov
jmpw
jmp
imul
pushf
push
cld
call
jmp
jmp
leave
jmp
and
dec
fstpt
push
cmp
push
sahf
or
cmpsb
gs
call
out
cmp
inc
dec
and
cmc
sti
jmp
xchg
add
fstpt
cmp
pop
into
test
push
jmp
flds
mov
out
cwtl
push
imul
data16
xchg
outsb
fstps
xor
cld
pushl
hlt
sti
call
hlt
sti
call
mov
js
and
push
aaa
ret
and
loopne
shll
int
jmp
inc
cwtl
out
and
xchg
hlt
sti
decl
fucom
jnp
test
sti
jmp
sbb
or
cld
outsb
in
jge
notl
sbb
or
data16
sti
pushl
mov
inc
mov
sub
dec
cli
jmp
push
jl
negb
pop
xchg
add
jnp
pop
jmp
loope
stc
cwtl
imul
aad
or
and
jmp
or
test
cwtl
decl
call
hlt
sti
in
notl
shl
jmp
pop
mov
jg
jle
dec
fdivrs
xor
push
push
lds
iret
push
jmp
cs
je
fdiv
sti
jmp
push
jmp
lret
std
add
repz
jmp
jb
xchg
xor
xor
dec
inc
shlb
mov
test
jmp
mov
mov
and
js
adc
sbb
lcall
jmp
adc
js
sbb
and
jmp
cmpsb
jmp
dec
frstor
shlb
mov
or
dec
js
jp
in
inc
out
pop
ss
mov
jmp
add
stc
pop
leave
test
fidivrs
dec
das
ficompl
call
jne
jmp
add
push
cld
sbb
loop
adc
xor
or
sti
ficomps
test
imul
sbb
loope
movsl
ljmp
lcall
jmp
push
rolb
sarb
jb
outsb
or
sbb
jae
xchg
mov
fsubrp
lret
jmp
arpl
cmc
cmp
push
jmp
push
fimull
fidivl
xchg
mov
jmp
repz
sahf
jmp
and
pop
aaa
jmp
and
jnp
jg
jmp
mov
popa
sbb
jmp
mov
jo
sti
cmp
adc
in
bound
xchg
cmc
add
dec
push
lods
jmp
loope
jmp
jge
mov
push
jmp
jmp
repnz
pushf
outsl
lret
out
mov
dec
fisttpl
sbb
sub
stos
jmp
jmp
xor
and
or
lea
data16
xchg
outsb
fchs
jl
jne
sub
stc
icebp
sti
incl
popf
or
popf
or
popa
sub
jmp
sub
icebp
sti
jmp
cld
pop
int
loopw
fisttpl
jp
rcll
mov
push
jmp
mov
or
pusha
ja
mov
mov
pushf
icebp
sti
call
add
jno
mov
daa
mov
in
std
test
adc
ljmp
or
push
lds
scas
pop
mov
pop
xchg
repnz
lcall
jmp
jae
xchg
cld
jo
xorl
pop
scas
sbb
sbb
xchg
jle
add
add
xor
sbb
popa
pop
or
loope
lcall
fs
lcall
push
push
xor
cmp
test
loop
pop
loop
stc
insl
std
test
or
jl
lahf
call
pop
cld
aas
test
pop
test
repnz
xchg
outsb
xchg
push
les
ret
addr16
out
jmp
aas
stos
cmp
pop
clc
popa
icebp
nop
arpl
xor
and
sbb
mov
cmp
cld
jmp
sbbl
inc
bound
cld
pushl
lcall
ret
pop
int
addr16
jne
push
xor
mov
xchg
call
sub
push
and
adc
mov
sbb
mov
xchg
hlt
mov
or
inc
xor
call
pop
cld
jmp
std
cwtl
cmpsl
scas
xchg
jmp
mov
fdivl
rcr
pop
int
xchg
icebp
add
lds
mov
jb
sbb
cmpsb
jmp
mov
lahf
cli
or
divl
xorb
xor
xchg
add
jo
jmp
jmp
adc
nop
sti
ljmp
sbb
sti
incl
imul
arpl
sti
ljmp
jmp
jp
addr16
pop
jge
imul
xor
fs
adc
pause
jmp
pop
jmpw
cld
cmp
inc
inc
rorl
ds
jmp
inc
lods
out
jmp
icebp
adcl
test
jbe
cmpl
adc
in
sbb
dec
fldt
jmp
push
lds
iret
push
popf
or
sbb
add
push
das
clc
jmp
hlt
jmp
mov
fildll
ss
inc
shll
into
test
xchg
adc
push
std
fwait
stos
dec
jmpw
cld
dec
jp
mov
sti
lcall
adcl
nop
push
popa
nop
cmp
or
cs
inc
pop
int
shlb
and
sti
jmp
jmp
movsl
sub
out
call
pop
cmp
jle
push
xchg
repz
mov
xchg
adc
test
jge
or
add
lcall
popa
loop
pop
loop
jmp
sti
ljmp
test
push
popf
or
inc
aam
dec
cmpsl
icebp
jbe
cmpl
jmp
mov
sahf
or
xor
mov
ljmp
daa
out
jmp
ret
fwait
decb
psubd
pop
fisttpl
fnstsw
mov
sti
decl
sti
jl
push
cld
aaa
jmp
jmp
sub
jb
cld
pushl
fwait
sbb
pop
xchg
adc
popf
pop
xchg
adc
stos
push
jmp
jmp
sti
int3
ljmp
lea
and
sub
lret
lret
push
push
lcall
ja
sti
jmp
call
repnz
pop
repnz
dec
sub
or
shll
gs
jmp
sbb
push
xchg
add
ss
sbb
xchg
addr16
or
jmp
xchg
jmp
data16
xchg
outsb
es
imulb
cltd
push
fsubrl
lcall
cld
pushl
jmp
aam
fidivrs
fistpll
std
test
gs
push
xor
dec
jg
sbb
sti
mov
lcall
lcall
loop
je
ds
nop
iret
xchg
aaa
sub
jmp
lods
xor
cmp
mov
lods
cmp
sub
pop
push
js
call
cld
call
lcall
push
jbe
loopne
push
fisttpll
out
dec
lcall
jmp
push
fisttpll
out
pushl
cmpl
inc
aad
dec
test
mov
sti
push
jg
mov
notb
jmp
xor
stos
cmp
pop
jno
jno
jecxz
push
rclb
xor
jmp
leave
pop
iret
stos
pop
rolb
and
sbb
jmp
jmp
int3
pop
lret
scas
pop
in
test
mov
pusha
jmp
pop
lds
iret
fidivrl
call
dec
fdivrl
mov
sbb
cld
ljmp
xor
sti
jmp
repnz
shlb
test
in
push
and
or
mov
mov
or
bound
jmp
aaa
mov
test
int3
into
pushf
pusha
roll
push
inc
cld
ljmp
mov
sub
cld
incl
test
cld
decl
cld
dec
dec
fistpll
cmpsb
shll
nop
push
test
push
neg
pop
into
test
or
inc
inc
xlat
mov
mov
and
ds
dec
mov
jmp
test
jmp
jns
pusha
pop
repnz
inc
roll
aad
les
cmpsb
push
mov
insb
mov
scas
jmp
sub
ret
inc
mov
std
inc
cld
jmp
insb
loop
je
lcall
repnz
pop
repnz
rorl
jecxz
and
cld
call
push
xor
addr16
mov
and
mov
fmulp
mov
jmp
out
jg
mov
imul
jp
roll
cld
jmp
jmp
fimull
movsb
push
repnz
adc
stos
mov
je
stc
jmp
xchg
adc
jmp
jns
insl
gs
jecxz
jmp
sti
imul
inc
and
rolb
shlb
jp
nop
jmp
pop
ret
ret
jmp
jo
arpl
cmc
inc
fidivrs
test
xor
ds
pop
mov
push
cld
ljmp
cmpb
mov
in
pop
fimull
fidivrl
sub
loop
pop
loop
scas
and
icebp
insb
cld
lcall
int3
push
mov
mov
loop
pop
loop
ja
jmp
push
jmp
jmp
int
aad
dec
scas
pusha
jmp
ficoms
mov
adc
pop
jmp
sub
pop
fucomi
pop
push
cld
lcall
inc
and
cmp
in
fstl
mov
cmp
lock
jmp
jp
jle
call
adc
adc
fisttpl
fnstsw
shlb
test
sti
ljmp
mov
sub
and
pop
rcrb
js
arpl
cmc
push
and
sbb
inc
and
and
testl
add
or
in
jge
negl
xchg
adc
or
sti
lcall
adcb
xorb
jbe
test
jmp
ljmp
fisttps
fsts
cmp
lds
iret
dec
push
adc
ret
pushl
jmp
dec
dec
jmp
pusha
daa
push
add
jmp
mov
xchg
sub
push
mov
mov
int3
cs
cltd
jbe
ljmp
shrb
push
cmc
adc
js
mov
jp
jp
xchg
scas
sub
push
fcoml
mov
loope
jae
bnd
jp
mov
push
lcall
or
jne
sub
sub
incl
pop
cmp
sub
cwtl
jp
and
in
lds
scas
jmp
sahf
jl
push
push
ficoms
mov
sub
push
sub
xor
mov
inc
mov
cmp
call
sbb
or
xor
std
outsl
lcall
adc
jmp
insl
clc
outsb
or
pop
mov
mov
sub
hlt
jmp
push
into
pop
cmp
jg
mov
cltd
add
lahf
ret
popa
aam
mov
ljmp
jmp
inc
cmp
jmp
mov
cltd
in
out
mov
xchg
or
pop
iret
stos
pop
loopne
jl
jmp
cmpsl
add
std
or
pop
mov
call
jmp
scas
pop
sar
mov
jmp
mov
pusha
loope
adc
pop
push
xchg
mov
push
loopne
add
jmp
in
sbb
mov
jmp
jmp
add
push
inc
scas
mov
pushf
sti
push
clc
mov
test
mov
jmp
je
addr16
push
repz
mov
lcall
cld
decl
sbb
inc
cmp
push
fisttps
flds
inc
into
pop
cmp
xor
out
fwait
pop
jmp
ja
imul
cld
fwait
jbe
jl
jl
negb
ret
push
mov
lret
xchg
in
cld
jmp
pop
lret
lret
cltd
or
pop
mov
mov
les
lret
cmp
cld
lcall
lea
in
sbb
dec
jns
jno
jecxz
shl
sbb
jmp
push
leave
pop
cmp
jg
push
mov
cs
mov
aad
mov
jmp
call
xlat
std
lock
aad
mov
inc
mov
cmp
icebp
push
jmp
lock
shlb
jmp
mov
shr
dec
je
decl
arpl
cmc
je
pop
int
addr16
imul
insl
lea
mov
popf
push
shl
jmp
pop
fstpt
mov
sub
sbb
cld
incl
mov
jle
bound
xchg
or
jl
mov
push
rolb
sarb
xor
jmp
mov
divl
fcoms
cmpsl
push
mov
mov
xchg
xor
hlt
adcl
test
lcall
and
jmp
fists
mov
frstor
inc
mov
into
cwtl
imul
out
jmp
jecxz
cld
fwait
jbe
in
in
jle
xchg
popl
sahf
jae
lcall
out
mov
out
jge
je
inc
clc
outsb
cld
fwait
jbe
jmp
into
pop
iret
stos
pop
jecxz
in
jg
roll
mov
jmp
std
or
call
pop
jp
and
popf
or
push
lds
in
pop
mov
adc
incl
nop
mov
in
pop
lcall
and
mov
and
push
push
lret
fstpt
xchg
testb
pop
mov
dec
test
mov
jmp
jmp
mov
cmpsl
movsl
and
icebp
popa
add
adc
inc
push
jmp
jmp
ljmp
mov
cmp
pop
pushf
xor
add
jmp
jmp
outsl
in
sbb
es
test
cmp
dec
lds
iret
sub
pop
jmp
mov
scas
lret
dec
xchg
mul
jmp
es
cmp
inc
mov
scas
leave
cmp
ja
jnp
in
add
pusha
notb
popa
int3
jmp
lret
pop
leave
test
in
jmp
jge
sub
pop
pop
int3
inc
and
dec
jb
jmp
aas
test
or
jbe
bound
iret
stos
pop
shll
pushl
test
arpl
push
jnp
aaa
jmp
ja
jg
jmp
mov
testb
sub
dec
imul
jmp
dec
fisttpl
leave
test
ficomps
push
cwtl
push
imul
pop
jmp
popa
jmp
js
imul
cmp
dec
loopne
notl
pop
and
cmp
pushw
jmp
add
xchg
jmp
jp
in
or
std
insl
hlt
pop
jmp
xchg
add
js
lods
lret
inc
movsb
mov
jmp
jmp
movsl
cs
adcl
data16
xchg
outsb
addb
das
data16
incl
pop
jp
jae
std
insl
hlt
pop
out
sbb
aad
int
add
std
or
fucomi
loope
cld
push
lock
bound
mov
mov
dec
fstpl
lcall
es
push
jmp
xor
inc
add
aas
jo
ljmp
or
adc
push
mov
dec
mov
rcrb
jmp
pop
push
xor
aas
mov
imul
jmp
fldl
mov
clc
pop
dec
xchg
xlat
ja
and
mov
inc
mov
das
fisubl
pop
jmp
sbb
sbbb
or
fmuls
fsubrs
pop
jl
into
pop
cld
jmp
push
xor
dec
push
sbb
xor
cld
in
dec
frstor
xchg
gs
int3
inc
and
insl
hlt
pop
in
jmp
jae
pusha
pop
repnz
push
std
ljmp
jmp
pusha
notb
gs
adc
mov
lods
lret
inc
movsb
or
jmp
ljmp
incl
mov
jg
sub
xor
ja
insb
or
call
mov
mov
sbb
mov
xchg
je
mov
jns
push
cld
or
shll
mov
mov
pop
repnz
fs
lret
scas
pop
std
cmpsb
xor
mov
adc
sti
ljmp
mov
adcl
sbb
push
rcll
sub
jp
jp
fstps
fs
call
pop
cmp
cmp
fiadds
jmp
mov
xchg
rorb
mov
mov
ds
cld
pushl
xchg
fadds
mov
out
notl
sti
gs
pushf
outsl
les
std
jmp
jo
jmp
jno
daa
test
pushf
jno
call
mov
xchg
and
dec
fstpt
add
push
jbe
inc
mov
insl
cld
call
fwait
or
dec
jg
xchg
cmc
add
addl
cmc
je
lea
stos
xchg
jmp
xor
test
mov
outsl
lcall
jmp
and
ficoml
cld
jmp
adc
push
idivb
test
mov
mov
ljmp
lcall
pop
xlat
inc
and
adc
cmp
push
push
in
sti
lcall
inc
and
cmp
cmp
jb
lcall
sub
jmp
xchg
lahf
cli
or
sub
jmp
dec
jmp
cwtl
adc
in
sbb
mov
xchg
lock
pop
mov
jle
arpl
jmp
pop
enter
cmp
pop
stc
sub
cs
dec
jmp
cmpsb
xor
mov
dec
mov
enter
add
mov
jmp
in
scas
or
cld
incl
fwait
or
cmp
dec
fdivrl
movsl
jmp
jmp
jge
jmp
sete
insl
pushf
sub
jge
negl
es
mov
mov
inc
jmp
andl
and
js
jb,pt
jl
negb
push
ret
cmpsb
push
in
into
pop
jns
cmc
dec
cld
lcall
or
addl
or
push
cld
out
insb
loop
je
adc
jp
jmp
xor
sub
pop
and
in
sbb
jecxz
jne
and
leave
out
sti
out
imul
or
push
jmp
or
sub
in
xchg
cld
decl
pop
jmp
push
fimull
fidivrl
inc
shlb
push
jno
outsb
mov
scas
lret
inc
sti
jmp
jmp
sahf
pop
xchg
adc
add
mov
jmp
mov
std
or
push
fisttpll
out
jg
arpl
cmc
sbb
ja
loope
cmp
push
jmp
inc
xlat
inc
and
js
push
les
pop
sbb
jmp
add
adc
ja
loope
cmpsl
xor
out
sub
nop
cld
ljmp
std
push
and
test
mov
es
das
mov
dec
mov
popa
cld
filds
mov
icebp
push
lret
lret
test
ljmp
xor
incl
dec
das
fisubrl
gs
pushf
outsl
les
sbbl
jmp
or
imul
cld
jl
dec
adc
movb
cwtl
insb
in
jge
notl
hlt
fbstp
imul
and
lret
lret
test
hlt
push
cld
adc
fwait
jns
rolb
jmp
divb
xchg
pusha
jmp
cs
jmp
jp
out
loop
je
jmp
insb
jmp
test
pushf
sti
push
mov
movsb
cmp
rcrb
test
mov
cmp
lock
in
jmp
jmp
jmp
clc
jbe
cmpl
movsb
cmp
dec
outsl
loope
adc
or
mov
inc
mov
je
jmp
lret
test
mov
sub
jmp
sbb
cld
jmp
cwtl
setg
or
sub
mov
inc
mov
push
push
int
frstor
sbb
insb
loop
je
loopne
adc
fsubr
or
sahf
stc
or
cld
jmp
mov
nop
or
roll
aad
or
out
mov
incl
sbb
out
dec
xlat
inc
and
push
into
aas
jmp
popf
jmp
jnp
jne
out
inc
xchg
mov
sbb
push
shll
pop
mov
mov
call
mov
stc
ficompl
es
add
pop
xchg
or
jp
iret
jmp
stos
sub
cld
xchg
cmc
add
inc
lds
iret
and
dec
frstor
out
popf
cld
decl
cld
lcall
add
and
popa
add
pop
insl
call
or
cs
cmp
or
jmp
pop
out
in
test
or
and
dec
sub
gs
cld
incl
jmp
mov
scas
lret
ljmp
add
push
ret
cmpsb
push
cmpsl
aas
jmp
roll
mov
test
in
cld
ljmp
jnp
cmpsb
jmp
repnz
jmp
xchg
add
adcl
jne
mov
xor
inc
xor
mov
cld
decl
iret
dec
fimuls
push
and
cld
jmp
sbb
ret
jmp
push
insl
hlt
pop
mov
add
adc
sub
mov
pushl
add
leave
test
out
icebp
popa
add
pop
rclb
cmpsb
push
in
ret
dec
jmp
mov
jmp
sbbb
jmp
pop
push
xor
jns
add
sub
aam
pop
jmp
sbb
jno
lcall
shlb
int3
push
sbb
adc
lret
scas
pop
mov
jge
inc
rclb
and
jmp
adc
arpl
je
out
pop
stos
and
sub
insb
jmp
push
outsl
jmp
adc
push
pushf
cld
lcall
push
add
xchg
sahf
stc
or
xor
je
push
aad
outsb
nop
cld
jmp
lods
and
push
shlb
mov
mov
sub
jmp
inc
inc
and
ss
jmp
push
rclb
xor
in
dec
push
lea
xchg
add
jno
out
jg
cld
decl
pushf
xor
dec
je
jbe
loopne
dec
sbb
inc
into
sti
pushl
jo
loop
das
jmp
inc
fmuls
fsubrs
pop
test
jge
cmp
fwait
or
jo
icebp
jmp
cld
xchg
cmc
add
hlt
imul
call
cld
dec
push
shlb
dec
mov
popa
nop
pop
loop
xlat
mov
enter
mov
dec
xchg
cld
jmp
aaa
mov
push
jg
jmp
fisubrs
pop
scas
dec
jmp
jmp
jmp
in
insb
loop
je
aas
mov
roll
dec
scas
add
jmp
jmp
hlt
ja
xorb
daa
adc
jmp
jnp
mov
outsb
jmp
push
in
dec
mov
cs
jle
fs
xor
sub
ja
outsl
or
jecxz
lods
and
push
xor
adc
cld
inc
jmp
jl
add
sbb
aad
xchg
add
sahf
jbe
inc
rclb
ljmp
call
xor
push
jno
jne
jmp
sbb
add
xor
dec
fistpll
sub
test
push
out
lea
ja
jo
loop
fs
dec
xlat
inc
and
filds
dec
cli
pop
popf
or
jmp
lea
jmp
sbb
xor
push
mov
mov
jmp
out
out
mov
ss
aas
pop
test
mov
in
mov
push
jmp
jb
jge
testl
insl
add
sub
enter
iret
sti
ljmp
jle
call
cmp
je
jmp
lret
cmp
jne
je
in
cli
popf
insb
lea
pop
jp
jne
test
pop
test
push
cmpsb
loop
jge
cmp
jmp
cmpsl
and
mov
inc
mov
jp
insl
hlt
pop
in
pop
fisttpl
fnstsw
xchg
mov
push
push
mov
xor
push
cmp
jne
cmp
jne
cmp
jne
xor
pop
pop
pop
pop
ret
jmp
mov
mov
lock
bound
addr16
cmp
in
jge
rolb
add
add
xchg
int3
jnp
xchg
jmp
rcrb
test
sub
mov
mov
cmp
jne
mov
jmp
add
push
xlat
inc
and
cmp
cmp
dec
loopne
lock
jne
xchg
testb
sar
ljmp
pop
mov
push
push
push
push
push
call
add
mov
jmp
push
jecxz
push
in
mov
fnsetpm(287
imul
xchg
loopne
push
jmp
push
mov
jg
arpl
cmpl
jmp
pop
lcall
in
jg
insl
insb
or
rep
add
jmp
ljmp
ret
push
lds
das
mov
push
xchg
sbb
mov
jne
mov
jmp
lods
cmp
inc
and
jns
rcll
xor
andl
shlb
test
cmp
arpl
xchg
gs
gs
pushf
outsl
mov
inc
and
ds
cmpsl
lret
push
ret
cmpsb
push
mov
fnstsw
jno
imul
adc
scas
inc
imul
adc
or
add
add
test
into
inc
iret
pop
cmp
xor
gs
pushf
outsl
dec
rcll
sub
lock
bound
fdivs
mov
mov
sbb
lods
inc
shll
shll
stc
or
push
rclb
sub
jp
in
add
push
xor
imul
xor
jo
in
sbb
movsl
int3
aas
or
shlb
push
adc
dec
sub
dec
jbe
jns
jmp
arpl
push
xor
dec
ja
dec
sub
ds
test
mov
ficomps
dec
das
fidivrl
inc
ret
ret
scas
aas
pop
test
xor
mov
das
dec
mov
in
test
ret
cmpsb
push
hlt
fistl
mov
cmp
inc
sti
jnp
mov
cmp
in
lcall
xor
scas
pop
jl
jl
negb
cli
outsl
lcall
int3
stos
sarw
cmc
xor
popa
add
adc
jle
call
xorb
cs
icebp
popa
add
add
mov
and
mov
aad
jl
jo
loop
jo
push
lahf
out
mov
xor
jp
lcall
ret
or
popa
sbb
xchg
xchg
xchg
sub
sbb
pop
loope
loope
pop
test
add
xchg
pop
add
jge
push
into
pop
scas
imul
imul
gs
or
lret
rcll
mov
into
or
add
lret
add
fs
xor
int
and
arpl
add
stc
rolb
sti
jne
je
mov
xchg
loope
out
mov
jnp
jnp
in
inc
hlt
orb
je
dec
jne
jmp
xor
cmp
push
insb
lock
pop
dec
rolb
shlb
mov
loope
xor
mov
mov
inc
inc
cmp
jmp
mov
mov
aam
sub
in
jg
iret
adc
pop
xchg
add
movsl
xor
cs
xor
ljmp
cld
fwait
jbe
add
xchg
adc
and
dec
ret
std
adc
adc
mov
mov
push
rcrb
adc
add
pusha
pop
repnz
out
or
sbb
jp
mov
loopw
pop
loop
je
lea
cmpsb
xor
scas
or
jp
jp
rcrb
test
mov
dec
fdivrl
xor
inc
lds
mov
push
xor
xor
movsl
xor
adc
mov
leave
pop
into
test
iret
stos
pop
test
xor
sub
addr16
iret
pop
cmp
jo
hlt
push
cld
or
gs
cltd
or
xor
push
std
inc
sti
imul
insl
ret
lcall
push
popa
nop
cmp
fs
dec
pop
clc
outsb
or
jg
push
lret
fldt
loope
push
lds
jge
insl
in
sbb
shrd
fildll
ret
sub
pusha
in
sbb
dec
sub
leave
test
mov
push
repnz
lods
cmp
les
int3
and
outsb
or
sbb
push
les
mov
sbb
fstl
mov
aad
dec
movsl
js
jns
jmp
test
scas
leave
cmp
xchg
inc
shll
out
xor
xlat
jmp
pop
ret
popa
sarl
scas
mov
jp
jp
jp
xor
lret
je
loope
loope
loope
ret
scas
pop
add
lahf
pop
add
mov
mov
scas
imul
mov
or
loope
mov
into
scas
into
add
lret
or
dec
push
scas
and
xlat
mov
jecxz
hlt
test
mov
test
xchg
pop
bound
and
mov
stos
cmp
ds
test
or
punpckhdq
hlt
pop
hlt
mov
lcall
leave
push
mov
es
mov
daa
mov
lds
stos
pop
into
and
push
lds
cltd
push
sub
pop
add
test
int3
data16
adc
invd
pop
jp
jne
xor
aad
sub
cmp
fbstp
mov
pushf
sti
push
js
pusha
pop
repnz
mov
out
inc
enter
es
je
lea
mov
js
imul
dec
mov
sub
sub
xchg
add
jns
xchg
or
imul
popa
push
popf
or
xor
aas
scas
lret
out
jp
jp
or
pop
ret
ret
or
in
mov
ret
push
lds
es
mov
dec
inc
and
imul
cmp
pop
repnz
fs
arpl
xchg
gs
xlat
inc
and
pop
addb
testl
sti
push
lock
inc
divb
mov
mov
ror
push
ret
cmpsb
push
mov
pop
leave
test
mov
ljmp
stc
out
dec
push
xor
sub
lahf
cmp
aad
fs
popf
insb
cmpb
add
adc
push
in
inc
aam
dec
cmpsl
push
pop
out
jl
jne
insb
imulb
sahf
insl
sahf
adcb
out
mov
fwait
or
pop
sti
jae
xchg
inc
rolb
sarb
into
pop
enter
ljmp
lahf
push
movsl
cmp
jnp
jbe
loopne
insl
sti
imul
push
rcrb
pop
fdivs
test
leave
shr
outsb
ret
or
popa
sbb
mov
adc
adcb
pop
mov
mov
adc
pop
add
xchg
fisttps
scas
jmp
shlb
push
call
jmp
test
fadd
inc
aad
dec
lods
loop
hlt
xchg
outsb
cmpb
cltd
cmp
ss
cltd
or
jo
ljmp
add
sahf
cmp
jg
and
je
dec
je
decl
jne
jmp
inc
roll
aad
icebp
js
mov
inc
inc
xchg
jne
mov
push
mov
pop
jmp
pop
mov
gs
and
sbbl
shlb
imul
add
add
mov
pop
adc
test
cli
decl
call
cmp
jne
push
call
jmp
mov
aam
popa
icebp
nop
arpl
adc
mov
pop
mov
mov
jmp
pop
test
jne
je
in
lcall
or
jno
and
xorb
cmp
jne
je
addr16
gs
pop
push
lret
pop
ds
push
nop
push
popa
nop
jb
and
call
test
jne
call
jmp
xor
dec
xor
ss
mov
cmp
outsb
mov
aaa
ret
loop
pop
loop
idivl
mov
mov
mov
pop
in
je
lea
adc
movsb
cmp
dec
loopne
cli
popf
insb
orb
sbb
arpl
shl
adcl
test
push
lahf
push
test
into
dec
lds
iret
sub
dec
fnstsw
shll
xchg
gs
jg
mov
stos
aas
scas
lret
mov
lret
mov
inc
sub
push
dec
fmuls
fdivrs
sbb
dec
fisttpll
out
xor
int
lds
imul
je
outsl
mulb
inc
cmp
xor
or
push
lret
jmp
mov
dec
mov
cld
btl
adc
cmp
push
lds
iret
cmp
call
mov
mov
dec
mov
pop
loop
stos
sub
lds
addb
or
and
mov
xchg
icebp
add
cmpsl
sub
lds
cwtl
adc
mov
jo
insb
or
loop
lret
pop
ds
pusha
in
bound
shll
mov
sub
dec
out
in
jle
insb
add
iret
pop
cmp
xor
push
cld
push
mov
jg
bound
pop
cmp
outsl
or
adc
push
pusha
pop
repnz
test
cmpsl
ret
das
mov
inc
mov
dec
fistpll
sti
sahf
insl
ret
dec
sub
push
jl
dec
sub
popa
or
cmp
out
jl
mulb
or
jo
cmp
jmp
clc
lahf
push
loopne
shrl
popa
pop
mov
adc
pop
sbb
sbb
mov
lret
and
jp
mov
inc
fiaddl
mov
sub
add
inc
add
pop
xor
and
jge
xor
pop
jmp
fs
insb
or
notl
pop
cmp
pusha
fadds
mov
jmp
xor
jmp
popf
jle
bound
repz
mov
add
add
add
add
sti
call
add
cmp
add
pusha
ljmp
stc
mov
push
dec
sbb
repz
stc
imul
shll
pop
cmp
imul
fsubrl
lcall
dec
fnstcw
cs
mov
or
jle
movsb
ret
ds
or
add
jne
int3
inc
and
lcall
xchg
bound
xchg
sbb
sbb
aad
std
jbe
cmpl
jo
xorl
negb
pop
rolb
shlb
xchg
pop
pop
mov
js
pusha
dec
ret
ret
dec
fstpt
mov
and
clc
push
loop
loope
jae
in
jp
jp
imul
inc
aam
sub
push
jns
das
rcrb
pop
stos
sbbl
jmp
adc
sub
push
xor
jo
dec
frstor
push
adc
mov
pop
aas
lret
out
adc
push
sub
les
mov
mov
ret
and
int
pop
int
mov
xchg
cmc
add
pop
fisttps
jo
imul
adc
mov
and
arpl
jns
jmp
pop
xlat
inc
and
xor
pop
into
test
hlt
xchg
outsb
mov
bnd
mov
testb
shll
cld
xchg
cmc
add
out
lcall
ljmp
pop
ss
add
jge
or
pop
or
shll
rcll
inc
sahf
lcall
into
mov
inc
fdivrl
das
inc
repnz
jp
adc
add
add
mov
add
add
xchg
mov
into
roll
push
mov
pop
adc
adc
pop
into
ret
xchg
lret
add
push
add
inc
lret
xlat
lret
mov
xor
jmp
ljmp
call
jmp
loop
in
mov
push
xchg
adc
imul
mov
call
call
call
test
jge
call
jmp
ljmp
sti
imul
sbb
pop
incl
add
add
loopne
dec
gs
push
cmp
add
call
jmp
cli
jl
jne
insl
mov
mov
ffree
fldenv
xchg
gs
aad
mov
pop
jb
insl
mov
xor
pop
enter
rclb
push
pushf
jg
jg
jmp
or
in
repnz
pop
repnz
mov
gs
xor
jb
xchg
lahf
add
std
or
filds
mov
in
jle
enter
pop
testl
loop
in
mov
adc
pop
cmpsl
or
cld
xchg
cmc
add
and
jns
cld
xchg
cmc
add
mov
stos
int
fnsave
fisubrs
bound
pop
jp
ja
sahf
or
cmpsb
dec
cmpsb
and
adc
in
sbb
adc
xchg
pop
pusha
out
jg
jmp
fsubrl
leave
call
popl
aad
into
test
iret
stos
pop
out
jl
jne
jno
rolb
shlb
or
in
xlat
repnz
popf
insb
mov
shlb
and
mov
decb
das
fisubrl
addr16
xchg
cmc
add
ja
jge
negl
sti
sahf
insl
aam
fisttpl
fnsave
fimuls
push
arpl
insl
hlt
pop
lods
out
jmp
adc
in
sbb
pop
insb
or
add
lcall
xchg
fsubl
xchg
orl
std
jp
jp
ret
inc
aad
dec
mov
out
dec
mov
xor
fucomip
scas
and
pop
sbb
or
xlat
xlat
jge
xlat
into
xlat
sub
jbe
sub
imul
lret
scas
int
add
jmp
add
fs
push
into
xor
ljmp
mov
adc
pop
add
jmp
and
lret
xor
xor
mov
movb
scas
into
leave
or
adc
pop
add
adc
adc
pop
into
popa
jmp
pop
les
adc
loope
or
mov
lcall
inc
iret
pop
cmp
sbb
or
mov
test
push
mov
ljmp
shlb
out
mov
popf
pop
xchg
repnz
jecxz
call
int
mov
jecxz
notl
xor
inc
and
cmp
dec
xchg
adc
add
jnp
sub
sub
jbe
cmpl
xchg
or
jle
lock
lds
jbe
loopne
loope
cltd
push
outsb
popf
jg
cmc
gs
pop
adc
orl
insl
std
test
mull
insb
cltd
cmp
insb
add
xchg
add
jae
pop
int
addr16
jne
ja
loope
aam
xlat
mov
call
cmp
inc
lock
jg
jmp
cmp
push
cli
push
cs
inc
mov
lock
loop
je
imull
lahf
push
mov
mov
inc
xlat
mov
enter
jnp
inc
data16
push
in
or
popa
mov
sub
pop
xchg
adc
in
bound
push
aaa
ret
mov
jle
bound
leave
rcrb
test
xor
or
clc
fsts
lods
pop
mov
out
fists
mov
shlb
scas
leave
cmp
jnp
jle
call
shlb
push
les
int3
cmovb
dec
sub
out
jno
mov
rcrb
mov
enter
xchg
aam
imul
xchg
pop
bound
jo
sub
mov
inc
mov
sub
je
jp
call
popa
leave
xor
outsb
fbstp
je
leave
mov
rcll
pop
lcall
push
inc
cld
adc
pop
gs
into
add
lret
add
xlat
xlat
add
and
adcl
test
and
lock
aam
daa
mov
and
in
push
jne
jns
jmp
lods
xor
stos
cmp
add
push
xor
jns
xchg
or
sbb
mov
mov
stos
into
cmp
cmp
sub
pop
cmp
aaa
pop
xchg
add
sahf
jl
rolb
sarb
dec
iret
pop
cmp
aaa
lock
lea
mov
pop
aad
sub
aas
sbb
jb
push
out
adc
add
jle
call
sbb
or
data16
xchg
outsb
xchg
jns
mov
dec
fisttps
fmuls
mov
popa
add
push
pushf
adc
cmpsb
xor
scas
dec
adc
aas
test
inc
aad
sub
jp
int
and
and
loope
adc
push
sti
popa
icebp
nop
arpl
add
push
push
cld
push
fldl
mov
cmc
jo
bound
mov
mov
inc
mov
xor
or
dec
cwtl
sbb
lahf
punpckhdq
pushf
outsl
popl
push
cmp
and
pop
int
test
sahf
or
cmpsb
dec
mov
rorb
jecxz
mov
sbb
bnd
mov
lods
and
add
sbb
out
or
jp
add
ljmp
je
dec
dec
or
dec
jbe
sub
mov
ljmp
lret
jae
pop
add
pop
sbb
inc
dec
jmp
adc
or
imul
imul
xchg
lret
mov
lcall
imul
lret
ret
add
mov
or
loope
mov
lcall
add
or
push
scas
xor
jmp
cld
incl
pushf
idiv
call
dec
dec
shll
pop
ret
jmp
adc
jge
ret
push
lds
add
popf
adc
sub
add
add
call
pop
test
jne
call
add
stos
push
lret
pop
ds
sub
fs
push
cld
pop
mov
add
add
pushf
cmp
jne
je
aaa
cmpsl
aaa
push
mov
test
mov
repz
push
stc
inc
fisttpl
fnsave
ficoms
imul
into
xchg
call
jmp
enter
les
adc
pop
std
data16
call
add
mov
cmc
decl
aaa
add
add
xchg
jb
cmp
dec
sub
dec
fadds
mov
lock
in
push
add
cmp
push
lret
pop
ds
lea
mov
sbb
cld
push
xchg
and
outsb
or
or
xchg
or
sub
jl
negb
clc
outsb
or
push
push
into
pop
cmp
popa
jl
jbe
loopne
repnz
std
test
mov
mov
push
cltd
rcll
mov
add
jne
stos
cmp
dec
push
fisttpl
fnstsw
mov
sahf
stc
or
pop
cwtl
push
imul
cmc
gs
adc
setg
or
sbb
cmp
imul
insl
mov
fnsave
inc
movsl
or
lods
daa
mov
and
mov
lods
mov
mov
adcl
test
pop
test
lods
inc
shll
in
je
inc
test
cmpsl
aam
shll
into
test
inc
and
jbe
xchg
or
insl
out
jnp
mov
mov
xchg
arpl
push
and
and
scas
cmp
mov
push
mov
js
ds
out
adc
imul
dec
mov
jle
insl
sub
aam
lret
scas
pop
mov
add
mov
lcall
or
leave
popa
je
shll
outsb
popa
or
and
or
sub
mov
je
loope
loope
loope
scas
or
add
jle
add
mov
push
into
sbb
imul
adc
loope
lcall
mov
jp
popa
lcall
leave
xor
lret
popa
and
ljmp
sbb
ss
repnz
scas
adc
add
inc
xlat
mov
rorl
mov
push
into
popa
xlat
imul
adc
lret
push
lret
xor
scas
jmp
xchg
mov
adc
dec
add
add
arpl
cmc
pop
xchg
push
pushf
sti
push
mov
xchg
xlat
fidivrl
incl
call
add
call
jmp
in
out
mov
pop
add
mulb
jns
xchg
test
jle
mov
jns
popa
movl
data16
xchg
outsb
adc
shlb
cld
pxor
mov
popa
add
cmp
insl
loope
adc
add
and
sub
mov
jle
jg
in
jge
negl
push
mov
insl
int3
push
popf
or
fdivl
in
mov
mov
and
stos
lods
lret
inc
scas
jecxz
in
jle
push
xchg
or
insl
sbb
sub
in
je
lea
movsb
cmp
add
pop
jmp
test
xchg
es
and
mov
sbb
xchg
outsb
mov
xchg
jb
push
mov
jl
notb
pop
lret
scas
pop
mov
pushf
xor
inc
daa
mov
cmp
push
lds
push
jbe
loopne
mov
fwait
stc
ja
xorb
ret
push
lds
int3
sub
into
inc
shlb
and
jne
out
add
into
cmp
mov
jg
sub
iret
push
lret
xchg
xchg
inc
sub
aaa
mov
mov
sbb
sahf
or
clc
outsb
or
or
mov
mov
pop
sahf
or
cmpsb
sbb
pop
ds
int
shlb
cli
or
mov
mov
xchg
addr16
js
popa
icebp
nop
arpl
or
leave
cmp
ficomps
xchg
xchg
fisttps
pop
and
xor
mov
push
xlat
inc
and
ss
lcall
stc
cwtl
imul
or
mov
gs
jp
test
outsb
gs
fistl
adc
fstl
adc
lcall
add
xor
push
dec
xlat
jge
scas
jmp
pusha
pop
repnz
out
test
es
sti
call
call
jmp
iret
cmp
jae
iret
jae
mov
sub
cmp
add
data16
xchg
outsb
mov
jnp
in
or
dec
ret
mov
mov
shlb
in
mov
ljmp
add
add
dec
add
add
gs
sbb
mov
inc
lds
iret
and
cmp
jne
je
lods
es
cs
pop
rolb
shlb
test
test
jns
dec
rclb
and
push
lds
sub
sub
pop
leave
test
mov
mov
inc
mov
cmpsl
xor
call
inc
inc
aam
sub
movsb
ret
ds
add
pop
int
addr16
and
inc
lds
stos
data16
xor
popf
or
sbb
in
jge
testl
addr16
andb
xlat
and
push
mov
nop
aam
lds
test
stc
imul
cwtl
decl
jecxz
aas
scas
lret
mov
cmpsb
shll
jp
ja
xchg
testb
mov
xchg
gs
aaa
cmpsl
ret
cmp
and
cmp
dec
lcall
loopne
adc
adc
jnp
mov
mov
ror
iret
stos
pop
rcrb
and
push
and
sub
sbbl
or
punpckhdq
jb
jle
loope
adc
push
mov
xchg
push
iret
pop
cmp
push
js
cmp
scas
xor
push
les
push
cmp
dec
cmc
push
les
cmp
mov
or
sti
jns
mov
pop
xchg
mov
in
mov
out
xor
or
xlat
fistpll
outsb
pop
ljmp
xor
scas
scas
fisttps
scas
jbe
sub
imul
lret
cmp
clc
sub
add
jmp
adc
popa
scas
imul
imul
imul
imul
lret
pop
jp
pop
and
lret
ret
add
or
outsb
or
mov
into
jge
add
lret
add
xor
fbstp
lcall
stos
inc
dec
lret
pop
ds
ja
xorb
pop
jp
jle
push
call
mov
pop
pop
cmp
jmp
mov
lods
lret
inc
mov
mov
xchg
jle
sbb
test
sub
ljmp
sub
sti
lcall
cmpsb
idiv
lcall
pop
cmp
jo
and
js
mov
test
and
clc
fildl
add
add
insb
loop
je
inc
shll
jae
je
mov
push
test
push
je
jne
je
jl
testb
xchg
add
sahf
sub
lock
lret
jecxz
popa
mov
mov
add
jmp
scas
xor
jno
jge
negl
punpckhdq
pop
push
xor
dec
rcll
lods
mov
lahf
in
incl
pushf
xor
adc
test
jmp
negl
scas
pop
fmull
stos
cmp
sub
add
sub
jmp
or
enter
dec
test
imul
add
add
popa
loopne
adc
add
dec
sub
push
or
push
stos
cmp
inc
test
test
in
call
fstps
pop
lcall
sti
lcall
rolb
call
call
pop
pop
call
add
push
jmp
sub
jmp
test
mov
cltd
or
jnp
mov
js
cs
aam
inc
dec
sub
jmp
mov
add
test
je
mov
add
jmp
adc
bnd
mov
int
shll
xchg
enter
jmp
pop
leave
pop
cmp
and
mov
imul
insl
adcl
add
dec
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
jne
jmp
push
xchg
pop
bound
lret
inc
scas
out
lock
bound
or
stc
push
mov
mov
add
xor
xor
mov
add
jmp
jg
bound
push
jno
daa
jge
bound
mov
and
je
jne
mull
icebp
sbb
inc
lods
add
fwait
fisttps
mov
movsb
ret
ds
lea
std
data16
xchg
outsb
fdivs
cmpb
adc
and
test
jne
mov
shr
jne
jmp
daa
pop
pop
jmp
clc
notl
std
popa
icebp
nop
arpl
pop
lds
iret
jp
mov
in
push
add
mov
add
test
je
sub
jne
jmp
push
xchg
add
cmp
mov
je
fdivrs
mov
outsl
test
je
test
je
test
jmp
cld
jle
mov
or
loope
cmp
mov
add
lcall
jmp
insb
mov
mov
jmp
add
outsb
jge
imul
sbb
insb
mov
fisttps
test
jl
jne
push
es
cs
sub
push
rorb
ljmp
test
sbbl
in
jle
ficoms
lods
pop
mov
hlt
push
cld
sbb
jo
xorl
xor
mov
mov
pop
pop
pop
ret
jmp
in
push
push
shrb
lods
sti
decl
jmp
outsl
loope
adc
or
jne
mov
movsl
xor
out
push
fbld
add
incl
je
test
jne
mov
mov
pop
pop
pop
ret
jmp
insb
sbb
pusha
out
leave
push
scas
add
neg
sub
mov
std
repnz
jmp
ficoms
cmpsb
push
cmpsb
pushf
or
in
mov
cltd
or
pop
xchg
xchg
add
test
push
movb
add
jne
mov
shr
jne
jmp
pop
out
push
cld
pop
leave
jmp
mov
fldenv
mov
dec
mov
gs
jl
pop
jp
xor
sub
jmp
inc
jecxz
push
in
add
icebp
outsl
lcall
ret
jmp
or
add
into
push
mov
pop
cmp
jg
add
cmp
je
xor
jmp
jecxz
in
mov
sub
pop
mov
xchg
out
mov
add
sub
add
out
cli
popf
insb
mov
jg
jmp
xor
and
jbe
jns
pop
mov
pop
pop
pop
ret
mov
add
sub
je
jmp
int3
mov
jmp
data16
adc
or
and
xor
pushf
xor
dec
push
test
cmpsl
mov
push
mov
pop
call
jmp
and
movsb
xchg
loopne
mov
push
mov
mov
mov
jmp
sahf
adc
in
sbb
lea
xchg
repz
test
xchg
xor
sub
add
mov
mov
jne
out
jbe
mov
inc
inc
test
jne
mov
dec
dec
cmp
je
cmp
jne
jmp
popl
xchg
repnz
repz
jne
sbb
jmp
dec
fdivrs
mov
and
movsl
pop
mov
fs
jmp
dec
push
xchg
out
mov
push
jmp
inc
aam
sub
mov
sbb
mov
mov
sbb
cmp
je
xor
jmp
pushf
test
jne
xor
mov
jmp
out
jp
or
add
xchg
push
xchg
repz
int
dec
xlat
add
push
jmp
cmp
ljmp
pop
mov
push
push
jmp
mov
idivb
cmp
dec
push
push
xor
and
mov
push
mov
mov
push
push
push
xor
cmp
je
mov
cmp
ja
jmp
mov
mov
dec
jne
in
mov
cmp
je
inc
inc
dec
jne
jmp
jmp
and
testb
push
mov
inc
inc
jmp
dec
xlat
inc
and
cs
lock
aam
inc
shll
xchg
movsb
ret
jmp
in
cmp
je
jne
in
je
lea
xor
int
xchg
xor
xor
push
push
push
call
add
mov
pop
pop
pop
pop
jmp
sahf
add
aas
scas
lret
and
adc
mov
shll
xchg
les
push
push
pushl
call
add
pop
ret
jmp
mov
cmpsb
shll
sbb
pushl
sarb
jne
mov
call
jmp
out
insl
std
test
ja
fs
sbb
fimull
fidivl
hlt
xor
inc
inc
cmp
je
dec
jne
jmp
dec
into
pop
cmp
movb
inc
lods
pop
mov
mov
call
pop
ret
jmp
sub
adc
sub
call
jmp
mov
lods
lret
inc
movsb
push
inc
sti
jno
xorb
xor
movsl
mov
jmp
sub
cmp
inc
popl
xchg
repnz
cmp
hlt
push
cld
adc
add
fstl
in
scas
inc
shll
lods
mov
mov
cmpsb
pushf
pop
das
mov
jmp
movsl
cmp
mulb
cmp
ja
fs
xor
mov
andl
push
push
lea
push
push
call
lea
jmp
pop
leave
pop
cmp
and
popa
icebp
nop
arpl
sub
push
pop
mov
mov
jmp
lea
jmp
mov
fidivs
add
xchg
add
jne
jmp
fmull
mov
add
cmp
cmp
fstpt
incl
jmp
sub
fs
popf
insb
jmp
mov
jb
inc
push
call
add
sbb
sti
incl
mov
xor
pop
call
leave
ret
jmp
sub
fs
jmp
mov
loope
popf
call
jmp
ja
imul
das
stc
jp
jp
jp
push
cmp
out
insl
std
test
or
cmp
leave
cmp
jmp
in
lock
bound
push
call
ret
mov
jmp
cs
in
data16
xchg
outsb
mov
into
lods
and
mov
jmp
xor
jns
addr16
xor
add
pop
xor
call
pop
pop
call
jmp
cmpsb
leave
popa
inc
addl
ljmp
pop
cmp
sbb
and
add
jmp
pop
mov
jns
push
lds
iret
and
push
mov
pop
jp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
jmp
cli
adc
jmp
je
je
out
push
icebp
lock
bound
push
repnz
jle
push
mov
lods
pop
loope
rorb
jmp
mov
mov
das
out
iret
pop
iret
stos
pop
test
jp
in
push
daa
mov
inc
mov
mov
shlb
ljmp
pop
into
pop
cmp
jno
scas
cmp
mov
cmp
push
pusha
pop
repnz
sub
fisubrs
rorb
sbb
lcall
loopne
mov
lea
jmp
push
test
push
mov
inc
ljmp
xchg
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushf
popl
mov
lea
movl
mov
mov
mov
mov
movl
movl
mov
call
add
mov
call
add
call
jo
sti
incl
test
jne
test
jne
push
call
pop
jmp
mov
mov
adc
push
mov
push
call
xchg
jg
sti
incl
call
test
je
call
cmp
je
push
call
add
call
test
je
mov
jmp
outsb
int3
inc
and
or
cmpsb
and
lret
cli
jg
mov
or
add
add
jne
call
mov
jmp
push
call
jmp
divl
mov
sbb
arpl
jnp
in
add
out
notb
shl
mov
call
push
call
add
add
add
test
xor
int
shlb
movsb
cmp
inc
mov
shr
dec
mov
ljmp
ds
aas
pop
test
sahf
insl
sbbl
xchg
or
insl
mulb
dec
rcrb
pop
icebp
nop
setg
or
insb
xchg
setg
or
loope
flds
dec
sti
les
int3
dec
pop
insb
or
subl
mov
enter
inc
lds
iret
das
push
nop
push
popa
nop
jns
push
mov
es
sahf
sbb
setg
or
cli
jo
xorl
mov
stos
and
push
pushf
sti
push
clc
in
popa
icebp
nop
arpl
dec
stos
leave
dec
fstpt
inc
sub
sub
mov
js
popa
sbb
xor
daa
mov
inc
mov
movsb
push
mov
push
shll
movsb
push
mov
repz
mov
mov
xor
data16
xchg
outsb
and
jbe
jle
call
or
dec
lret
push
lds
stos
pop
rorb
jg
jmp
jo
push
fstps
test
lea
mov
jo
loop
dec
into
pop
cmp
xor
inc
shll
add
adc
movsl
xor
push
mov
lcall
jecxz
jne
jecxz
stc
cwtl
imul
ja
and
ljmp
stc
in
adc
add
std
or
imul
mov
inc
and
jns
mull
icebp
cmp
mov
or
movsl
aaa
cmpsl
ret
xchg
add
push
lds
cmp
popa
pushf
add
std
or
sub
mov
in
sbb
jecxz
lods
lds
pop
outsb
or
sbb
adc
pop
aam
adc
pop
pop
les
adc
loope
or
xlat
xchg
mov
and
inc
jns
imulb
add
adc
call
jmp
movsb
xor
jo
xorl
shlb
jnp
gs
adc
test
mov
pop
pop
ret
jmp
jp
gs
or
movsl
sti
decl
inc
pop
mov
add
ud2
mov
test
pop
lcall
lods
sti
lcall
shlb
mov
push
jmp
push
ret
ret
fdivl
in
xor
sbb
ljmp
sbb
cld
insl
std
test
xor
or
out
mov
jnp
js
ljmp
pop
pop
ret
jmp
lret
call
gs
std
incl
add
add
xchg
addr16
lods
cmp
add
std
or
dec
push
jmp
sub
js
ret
add
int
insl
std
test
mov
inc
test
je
jne
push
cmc
jmp
je
jl
testb
pop
xchg
repnz
mov
sti
incl
jmp
add
mov
jmp
insb
or
scas
cs
dec
mov
call
push
call
add
call
pop
test
je
jmp
mov
pop
ret
jmp
mov
decl
xchg
add
sahf
aaa
addr16
outsb
or
dec
les
in
sti
incl
mov
test
jne
call
add
fiadds
add
jmp
es
or
cld
xor
jne
call
mov
jmp
lods
adc
mov
mov
jmp
loope
jmp
mov
mov
mov
or
leave
cltd
out
xchg
push
push
call
call
push
call
add
call
pop
jmp
call
out
jmp
aam
in
jg
dec
into
pop
cmp
add
pusha
pop
repnz
and
mov
int
ds
sbb
jo
add
inc
mov
jmp
inc
rclb
cs
cld
fwait
jbe
xchg
push
mov
es
repz
xor
jmp
stos
and
popf
or
cli
push
je
lea
call
pop
mov
push
call
add
xchg
cltd
sti
incl
jmp
les
mov
xor
pushl
call
pop
movl
call
call
ret
jmp
lea
jmp
xor
push
lds
fsts
pop
test
sub
testb
test
sti
mov
add
add
insb
loop
je
mov
fisttpl
mov
jo
pop
ret
jmp
adcb
jecxz
cld
into
pop
iret
stos
pop
lea
xchg
or
push
mov
movb
movb
call
add
push
call
pop
andl
pushl
call
add
inc
cld
call
push
call
pop
mov
mov
mov
test
jne
call
mov
jmp
mov
mov
and
mov
addr16
dec
dec
inc
and
ja
pop
ret
jmp
mov
xchg
mov
mov
pop
leave
test
out
push
mov
scas
stos
test
je
push
push
call
add
rorl
add
add
adc
jne
call
mov
jmp
jno
mov
push
push
call
push
incl
mov
call
call
mov
test
jmp
dec
inc
and
ja
cld
xchg
cmc
add
adc
jo
mov
fs
jmp
xchg
mov
pop
pusha
mov
push
call
jmp
std
jge
je
push
imul
sbb
push
ret
inc
shll
xchg
sbb
call
add
stc
xchg
sti
incl
call
test
je
call
cmp
je
push
call
add
call
test
je
mov
jmp
mov
movsl
rcr
mov
lock
jmp
addr16
adc
push
sub
test
lret
pop
ret
jmp
or
popa
pop
lea
jmp
jb
outsb
or
sbb
inc
and
js
arpl
xchg
gs
popa
icebp
nop
arpl
add
push
push
jmp
xchg
sbb
out
jg
jmp
clc
or
out
daa
xor
push
call
pop
jmp
and
cmp
lahf
call
mov
test
je
jne
cwtl
or
mov
sbb
add
xor
mov
out
movsl
sti
lcall
imul
movl
mov
int3
leave
dec
add
jmp
sbb
popf
or
sub
lds
cmp
jmp
das
mov
test
shlb
cmp
pop
dec
lret
adc
mov
test
je
push
call
pop
jmp
fs
xchg
cmc
add
lods
test
je
push
call
pop
jmp
jnp
and
mov
test
jmp
daa
mov
pop
les
int3
gs
push
xchg
repz
mov
inc
cmp
shlb
dec
movsl
sti
jmp
and
outsb
movsl
cmp
xor
or
test
call
movsl
sti
lcall
fs
decl
stos
cmp
sub
sub
outsl
lcall
leave
xor
sti
inc
add
jmp
xlat
push
les
add
sbb
dec
xorl
add
add
add
add
call
mov
pop
pop
test
je
push
call
add
ret
ret
add
gs
lcall
rolb
ljmp
push
call
pop
pop
call
add
push
jmp
sub
xchg
push
call
pop
andl
mov
test
je
push
call
add
jl
std
incl
je
push
call
pop
jmp
adc
sub
mov
add
add
push
xor
sub
cwtl
push
imul
ffreep
inc
cld
jmp
mov
cli
loope
cltd
push
lahf
push
loope
mov
inc
cld
call
push
call
pop
movl
mov
test
je
push
call
pop
call
add
mov
je
cmpl
jne
push
call
pop
jmp
ret
jmp
lea
jmp
add
xchg
sbb
adcl
test
xchg
test
or
sub
sti
jmp
mov
fmuls
adc
adc
or
aad
push
call
pop
jmp
jns
hlt
adc
jmp
lea
jmp
push
xchg
add
data16
xchg
outsb
mov
mov
aad
jmp
pop
call
je
push
call
pop
jmp
call
jmp
imul
nop
or
cltd
or
push
imul
incl
add
jge
add
push
call
add
add
call
test
je
call
add
lret
add
arpl
imul
or
inc
dec
test
je
push
call
pop
jmp
aas
pop
jmp
pop
les
cmp
jmp
rcrb
pop
fcom
dec
fistpll
out
jno
inc
cld
or
call
sar
add
nop
stc
std
incl
call
pop
call
pushl
call
jmp
or
sub
push
lds
shlb
xchg
mov
test
pop
lcall
divl
add
pop
xchg
sti
incl
jmp
cli
mov
ret
jmp
xor
mov
push
push
call
jmp
roll
inc
xchg
addl
icebp
add
lahf
sbb
movsl
ss
psubsb
sar
add
call
mov
jmp
lds
call
or
call
jmp
push
rolb
shlb
jnp
xchg
testb
pop
mov
push
call
pop
jmp
jmp
jmp
mov
in
cli
jmp
popf
sub
dec
out
out
enter
mov
test
je
push
call
pop
jmp
orl
ret
dec
fnstcw
cmp
mov
cmp
test
adc
push
call
push
jmp
pop
roll
shll
bound
add
cmpsl
push
arpl
jmp
incl
jmp
xor
push
adc
outsb
or
or
subl
jmp
aaa
cmpsb
xor
scas
insl
into
pop
into
test
jns
xlat
aas
push
call
jmp
movsb
xor
dec
fistpll
repz
les
xchg
pop
jmp
push
int3
inc
and
in
call
push
push
call
call
push
push
call
call
call
add
call
add
pop
cli
std
pushl
push
add
imul
incl
add
outsb
ret
pop
into
test
pop
ds
push
test
push
mov
mov
out
ja
xorb
sbb
das
mov
inc
mov
push
mov
jmp
xchg
or
outsl
roll
aad
pop
stc
imul
sub
mov
incl
jmp
push
rolb
rolb
dec
fstpt
les
xor
test
jne
jmp
stos
dec
test
adc
std
jmp
dec
lret
lret
js
mov
fstpl
test
mov
mov
out
incl
pop
mov
pop
ret
jmp
out
outsl
lcall
mov
call
in
push
push
xor
pushl
call
mov
pop
test
jne
call
add
xchg
add
push
call
add
add
iret
xor
incl
jbe
or
jmp
inc
push
xor
and
mov
dec
mov
xchg
push
mov
jle
sub
dec
sub
push
push
xor
push
pushl
pushl
call
mov
add
test
jne
call
add
push
call
add
add
pop
and
and
jg
repnz
pop
repnz
scas
aas
pop
test
pop
stos
dec
xchg
mov
pop
pop
pop
jmp
pop
rolb
sarb
mov
xchg
repnz
arpl
addr16
pop
stc
fwait
test
mov
cmp
jmp
mov
dec
fstpt
push
lahf
push
dec
rorl
repz
incl
jmp
cmp
pop
iret
pop
cmp
cmp
and
mov
cmp
jne
jmp
leave
mov
push
jmp
test
xchg
adc
sbb
push
leave
pop
cmp
cmp
push
in
ret
jmp
daa
loopne
lock
jne
jmp
addr16
jp
call
cs
sbb
add
pop
cmp
jbe
push
mov
pop
pop
pop
ret
jmp
gs
push
mov
lea
call
call
add
jne
call
add
add
add
xchg
shlb
sub
xchg
add
fwait
add
mov
pop
repnz
fs
sub
idiv
jne
pushl
call
mov
pop
pop
test
jne
cmp
je
call
add
xchg
call
and
cld
incl
lea
call
add
xchg
incl
pushl
sub
pop
int
frstor
pop
ret
jmp
ja
push
cld
sbb
jmp
mov
call
pushl
call
call
add
pop
jnp
ljmp
add
add
rolb
jmp
pusha
mov
outsl
stc
lea
jmp
push
aam
sub
inc
cmpsl
pop
lea
jmp
fstpl
test
mov
cmp
sub
push
lods
or
std
jmp
mov
push
mov
push
jmp
jb
gs
adc
rolb
shlb
push
mov
jle
sub
sti
pop
jbe
or
jmp
push
call
pop
ret
jmp
outsl
in
sbb
es
mov
jns
gs
sbb
inc
loopne
xor
loope
sti
inc
dec
fdivrl
ds
test
pushl
xchg
sti
outsl
lcall
call
add
nop
add
adc
dec
mov
incl
test
je
pushl
call
jmp
in
je
or
xor
add
add
mov
xchg
or
cmp
jbe
loopne
movsb
loopne
cld
lea
jmp
mov
aad
or
data16
xchg
outsb
xchg
gs
pushf
outsl
lret
or
mov
pop
pop
pop
ret
jmp
ljmp
and
jmp
lea
jmp
push
enter
cmp
repnz
nop
icebp
inc
sbb
inc
mov
push
mov
push
mov
jmp
pop
lds
xchg
add
xchg
or
pop
rclb
imul
lret
add
jmp
dec
aad
sub
je
fwait
or
sub
rclb
inc
andb
shlb
test
mov
jb
pop
pop
ret
jmp
mov
push
mov
push
mov
jmp
xor
xor
and
rolb
shlb
jg
mov
ret
jmp
lds
dec
scas
popf
sbb
movsl
xor
notl
cmp
call
jmp
add
xor
fistl
mov
jg
jmp
lret
inc
lea
pop
xchg
test
jne
mov
test
je
call
jmp
push
jmp
dec
lea
jmp
and
sti
je
lea
jmp
push
in
add
fwait
mov
jb
jmp
cmp
lock
lock
bound
mov
pop
nop
inc
cmp
add
jmp
rolb
mov
out
lods
cmp
leave
pop
cmp
sub
push
mov
cmpl
jmp
push
rclb
sub
fdivl
test
xorl
je
push
call
jmp
arpl
xchg
gs
mov
fwait
aad
and
push
lret
lret
push
push
call
pop
pop
test
jne
push
call
call
call
add
jmp
les
fs
dec
fstpt
popf
in
mov
ret
jmp
mov
mov
inc
shll
pop
bound
fwait
call
cmpl
pop
je
push
call
jmp
pop
ljmp
stc
addb
cmp
pop
stos
pop
inc
pop
test
je
pushl
call
pop
jmp
mov
hlt
imul
sbb
push
mov
movsl
int3
aas
fcompl
jne
push
cld
push
insb
ljmp
popf
in
cmc
ficompl
stos
data16
add
add
mov
gs
jge
pop
xchg
xchg
add
add
jmp
mov
lods
mov
loop
cmpsb
xor
scas
gs
mov
dec
fistpll
fs
jmp
sti
je
lea
rolb
sarb
xchg
sbb
aad
rclb
cmp
les
jmp
dec
les
lods
pop
test
mov
lea
jmp
outsl
std
insl
hlt
pop
mov
and
nop
push
xchg
repz
in
pop
and
inc
subl
jl
jmp
lods
cmp
scas
cmp
mov
movsl
xor
insl
aaa
mov
push
mov
push
push
pushl
call
add
pop
ret
jmp
pop
loope
call
jno
decl
int
call
stos
int3
sti
call
cmp
push
call
push
call
push
call
push
call
jmp
xor
cmp
mov
mov
xchg
adc
cmp
pushf
sahf
ret
jmp
lea
in
sbb
jmp
xchg
popa
xlat
dec
fidivrs
inc
hlt
pop
xor
inc
ret
jmp
lcall
je
lea
jmp
mov
mov
mov
enter
push
mov
loop
push
push
call
xor
mov
lea
push
call
add
fs
cltd
clc
or
imul
cmp
dec
mov
cmpsl
leave
sti
ljmp
adc
call
add
call
pop
ret
jmp
leave
out
gs
jmp
inc
rcll
and
call
loop
les
push
ljmp
or
inc
cld
jmp
push
inc
and
or
stc
or
add
test
ljmp
call
pop
jmp
cmp
das
dec
mov
inc
mov
xchg
sbb
aad
adcl
sub
adc
or
jmp
les
cmpsb
push
mov
in
mov
scas
leave
cmp
hlt
orps
push
cmp
jb
cmp
jmp
pop
roll
sarl
mov
test
setg
or
imul
popf
jp
lcall
cmp
je
mov
mov
lea
jmp
adc
adc
xor
aas
scas
lret
pop
movl
jmp
jns
jge
notl
mov
lods
lret
inc
scas
mov
adc
jmp
sahf
or
mov
inc
mov
xchg
cmp
push
cmpsl
adc
inc
sarb
je
mov
lea
lea
mov
mov
cmp
jl
mov
jmp
mov
mov
xor
add
fwait
shrl
push
call
pop
pop
test
je
mov
lea
jmp
jmp
iret
insl
icebp
popa
add
pop
mov
repz
fucomi
test
add
int3
push
mov
push
aaa
ret
lret
pop
ds
jmp
nopl
adc
mov
add
int
cld
fwait
jbe
mov
cwtl
decl
faddp
inc
shlb
or
add
add
movb
movb
movb
mov
movb
add
mov
add
jmp
and
pop
jecxz
push
in
push
rolb
sarb
ljmp
andl
andb
movb
movb
andl
movb
add
mov
add
jmp
andl
test
jmp
rclb
pop
mov
scas
aas
pop
test
nop
arpl
jl
jmp
pusha
jmp
inc
into
pop
cmp
sbb
pop
mov
leave
inc
mov
scas
cmc
jns
mov
or
test
inc
add
orl
movb
jmp
daa
test
pop
test
inc
leave
pop
cmp
and
mov
inc
mov
ret
incl
jmp
pusha
repnz
pop
repnz
mov
mov
mov
ret
push
lds
daa
les
decl
cmp
je
cmp
jmp
jbe
jbe
loopne
or
or
jae
push
lds
mov
addl
lea
jmp
cmpsl
xor
iret
pop
cmp
es
pop
mov
shl
add
mov
cmp
je
cmp
je
orb
jmp
cmpsb
inc
shll
mov
movsb
ret
andl
test
jne
push
pop
jmp
sub
lcall
pop
int3
stos
iretw
adcb
push
mov
mov
sar
and
shl
add
mov
mov
mov
mov
mov
push
lea
push
call
pop
pop
test
je
incl
jmp
lods
xor
sbb
xchg
sti
add
mov
pushl
call
add
shr
add
add
xchg
jb
or
push
mov
fidivrs
pop
push
incb
add
mov
test
je
test
jne
push
call
add
add
add
dec
incl
and
mov
cs
pop
add
add
sub
push
call
add
je
test
je
push
call
add
ds
xchg
adc
in
sbb
jne
push
cld
push
and
dec
jmp
jmp
dec
add
movl
jmp
mov
cltd
clc
or
xor
push
pop
insb
shlb
jmp
neg
sbb
add
jmp
and
cmp
jne
orb
jmp
das
stos
cmp
dec
cmp
xor
aad
repnz
mov
fld
incl
inc
addl
cmp
jl
jmp
hlt
jp
jp
in
popf
push
jne
cmp
jne
orb
jmp
xchg
sbb
call
dec
lds
iret
cmp
mov
mov
push
ret
cmpsb
push
mov
lret
rclb
addr16
xor
je
push
push
push
call
jmp
sub
mov
xchg
sbb
or
fmull
add
add
jp
jp
out
jg
mov
pop
addr16
sahf
sti
inc
jmp
cld
push
in
jg
mov
xchg
setg
or
inc
mov
add
add
dec
frstor
pusha
xchg
cmp
stos
repnz
loop
je
cmp
lea
push
call
pop
pop
test
je
incl
jmp
add
data16
inc
mov
add
add
jmp
push
xchg
pop
bound
lock
dec
stc
lret
aam
cmp
jb
pushl
call
andl
jmp
and
adc
roll
inc
xchg
and
jmp
movsb
dec
roll
aad
jge
push
call
in
xor
test
jne
je
add
sbb
insl
mov
cltd
clc
or
jg
outsl
or
out
fcomip
cmpl
jmp
adc
add
pop
xchg
add
jnp
mov
cmp
jl
pop
pop
ret
jmp
lahf
or
shlb
add
push
call
jmp
xor
daa
icebp
jp
jp
pop
aam
sub
cmp
pop
ret
jmp
cmove
mov
push
jmp
cmp
push
sub
cmp
and
push
notl
jmp
int3
inc
mov
test
lret
cmp
cmp
cmp
jmp
or
mov
xchg
rcll
push
xchg
cmpsl
aaa
cmpsl
ret
bound
ss
jmp
ficoml
cmpsb
push
mov
dec
mov
mov
std
push
mov
call
jmp
pop
rcll
xor
bnd
pop
leave
test
lock
mov
decl
mov
xchg
pop
bound
testl
notl
lea
jmp
xchg
push
pushf
sti
push
mov
loope
cmp
or
cmpsb
and
int3
pop
jmp
mov
popf
sbb
push
mov
adc
call
push
pushf
push
mov
es
ret
ret
fisttpl
fnstsw
jge
je
addr16
add
add
cmp
add
fs
pop
loop
push
rolb
shlb
fcomps
fs
inc
aad
dec
movsb
pop
je
call
add
rcr
pop
lret
scas
pop
mov
xchg
ss
popf
or
lds
pop
pop
ret
jmp
test
in
cli
idivb
mov
or
or
cld
cmpb
jne
xor
cmp
mov
sete
inc
mov
jmp
xlat
lret
pop
ds
rclb
pop
mov
and
mov
aam
add
add
add
dec
fidivrs
mov
mov
flds
mov
sti
and
push
add
add
dec
sub
sub
and
jno
jo
loop
mov
incl
test
je
mov
mov
inc
jmp
push
ret
ret
icebp
popa
add
xor
jae
xchg
and
pop
mov
movzbl
push
inc
call
pop
test
jmp
jo
jp
in
add
out
jl
notb
push
out
jmp
mov
jmp
rorl
mov
push
imul
notl
rorl
rclb
mov
mov
movl
cmp
je
mov
addl
mov
jmp
inc
jmp
inc
jmp
mov
xchg
inc
fisttps
lock
aad
sub
dec
jmp
xor
jg
mov
jl
insb
or
sar
jl
jne
in
test
je
movb
jmp
nop
cmc
dec
mov
pop
jmp
mov
fdivrs
fdivrs
psubd
sub
xor
cmpl
je
mov
mov
incl
mov
jmp
jb
imul
sbb
push
popa
nop
jle
mov
rcrb
stos
je
cmp
jmp
ret
dec
fistpll
lock
in
jg
stos
fcmovne
mov
mov
test
je
jmp
and
add
test
pushl
orb
cli
or
aas
mov
inc
mov
sbb
mov
add
add
mov
and
cmp
sub
es
mov
mov
add
pop
push
mov
cmp
jne
jmp
inc
int3
inc
and
and
mov
shlb
leave
icebp
outsb
sahf
sub
add
add
inc
cmpl
je
mov
addl
mov
jmp
incl
mov
add
jne
or
fwait
or
jae
xchg
rolb
add
test
push
jmp
dec
fdivl
in
fisttpl
push
mov
mov
movsb
jne
jmp
lahf
or
mov
inc
mov
mov
in
je
sub
loope
incl
xor
inc
xor
jmp
pop
int
fidivl
fildll
and
call
mov
inc
inc
jmp
dec
roll
mov
leave
je
dec
test
je
jne
rorl
movsb
push
cld
add
punpckhdq
inc
mov
and
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
inc
out
adc
imul
fstpl
stos
data16
nop
movsl
cmp
inc
add
add
jmp
ret
mov
test
jmp
dec
roll
aad
addr16
adc
or
insl
std
test
sub
add
add
inc
daa
shlb
outsl
jle
mov
fstpt
inc
cld
sete
mov
jmp
rclb
mov
aam
dec
cmpsl
mov
cmp
pop
test
jne
mov
jmp
stc
popw
and
adc
add
mov
aad
fwait
or
cmp
mov
inc
mov
aaa
shl
cmp
add
leave
pop
je
cmpl
jne
cmp
je
cmp
jmp
xchg
sbb
sub
notl
or
fisttpl
test
mov
je
call
pop
test
je
jne
mov
scas
leave
cmp
orb
enter
and
call
add
lea
call
add
or
jmp
dec
in
test
jmp
outsb
add
pushf
xor
add
arpl
xchg
mov
add
jmp
mov
pop
call
jmp
cmc
lock
bound
pop
mov
scas
aas
pop
test
add
sbb
shll
mov
jmp
fstpt
je
movb
inc
mov
jmp
rep
lcall
fdivrl
dec
les
int3
cs
and
add
jg
cmp
pop
mov
jmp
incl
leave
ret
jmp
daa
mov
dec
rolb
shrb
aas
scas
lret
stos
xor
int
mov
test
je
andl
jmp
in
jo
xorl
insb
fildl
adc
imul
or
add
adc
dec
cmp
and
and
cmpsl
aad
pop
test
je
inc
incl
jmp
dec
push
push
mov
call
dec
jmp
cmpsl
es
cs
cmp
inc
popf
xlat
push
push
call
jmp
rclb
lods
pop
mov
add
mov
movsl
int3
aas
aam
pop
cmp
xor
push
push
cmp
jne
call
jmp
pop
aad
sub
aas
out
loop
je
lods
and
outsb
in
sbb
add
cmc
mov
mov
mov
incl
mov
inc
incl
jmp
lds
mov
or
cmpsb
inc
add
or
repnz
jmp
fsubrl
sti
push
lea
jmp
sub
xchg
pop
push
ret
ret
add
mov
lea
push
push
jmp
and
xchg
add
jg
mov
scas
aas
scas
lret
lahf
mov
call
add
ret
je
mov
cmp
jne
jmp
jbe
cmp
mov
add
cmp
jae
mov
cmp
jae
jb
adcl
cmp
push
dec
or
push
incl
mov
jmp
xchg
adc
mov
inc
mov
dec
aam
sub
sub
add
pop
pop
pop
jmp
rcrl
addr16
xor
adcb
subb
mov
sub
add
add
add
push
push
lea
call
mov
add
dec
call
call
add
shr
jne
sub
leave
ret
jmp
sbb
sub
cmp
xor
dec
pop
mov
shl
lea
cmp
jb
push
call
mov
pop
cmp
je
mov
lea
jmp
push
aam
sub
xchg
adc
push
rolb
shlb
repnz
add
jmp
adc
mov
sti
jne
call
mov
cmp
jne
xor
jmp
jno
fs
push
or
and
aaa
push
mov
call
add
push
pop
call
jmp
cmp
jl
gs
pop
jmp
icebp
nop
arpl
cmp
add
fldl
add
add
jmp
call
mov
out
push
push
std
dec
cmp
je
cmp
jne
jmp
adcb
out
icebp
loopne
loop
je
ds
inc
mov
ja
clc
add
jmp
mulb
insb
test
stc
fmuls
mov
lahf
ret
cmp
je
inc
inc
cmp
jne
je
sub
hlt
push
cld
push
cmpsl
xor
mov
insb
pop
incl
call
add
cmp
jne
call
mov
cmp
je
call
add
add
add
test
aaa
cmpsl
ret
repz
out
lcall
incl
jmp
cs
popf
add
xor
int
xchg
pop
imul
pop
leave
ret
jmp
ss
cmp
mov
jp
jno
jecxz
sub
mov
xchg
adc
cmp
jne
jmp
or
ss
mov
dec
ret
shll
xchg
add
push
out
push
inc
jmp
pop
fisttpl
sahf
js
mov
jmp
cmpsl
ljmp
and
push
mov
aas
lret
dec
lcall
add
add
add
add
rorb
add
jne
jns
mov
xchg
adc
pop
fimull
fidivrl
xor
clc
jl
call
add
ljmp
pop
popf
sbb
clc
sub
inc
push
mov
jmp
mov
lret
orl
orb
stc
or
pop
pop
xor
jecxz
incl
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
jmp
or
mov
test
mull
icebp
sbb
lahf
push
pop
cmp
jne
je
in
notl
xchg
sbb
popf
or
fimull
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
pop
mov
cmp
je
push
push
pushl
push
pushl
push
push
push
call
test
jne
pushl
call
pop
jmp
icebp
lock
bound
sbb
out
sub
push
call
mov
inc
cmpb
pop
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
imul
testb
push
mov
ret
mov
dec
call
push
mov
cmp
jae
mov
test
je
call
jmp
xchg
and
sahf
mov
push
mov
xor
cmp
push
sete
jmp
pop
xchg
add
xor
sub
jmp
out
jo
sbb
xchg
lea
jmp
cmp
lea
jmp
mov
leave
push
lds
pop
repnz
and
add
cmp
jb
jmp
fstl
add
and
roll
aad
inc
in
sbb
and
xchg
mov
ret
jmp
lret
xorb
call
dec
call
jmp
ds
cmp
sub
lret
lret
jge
mov
add
add
in
dec
fwait
sub
mov
jmp
push
mov
jns
popa
loop
sti
sahf
insl
mov
imul
insl
in
dec
push
test
jne
pop
ret
jmp
push
stc
xchg
call
mov
push
ja
xorb
mov
add
rcrb
scas
pop
xchg
inc
and
loope
incl
jmp
aaa
mov
cmp
pop
push
call
mov
incl
add
pop
mov
adc
and
stos
out
cmp
add
push
jmp
mov
fmul
inc
xlat
mov
mov
call
jne
push
push
call
add
push
call
add
decl
rol
jmp
sbb
fwait
or
fmuls
fcomps
fsubrl
pushl
push
call
add
xlat
pop
pop
jmp
push
adcb
andb
xlat
mov
movsl
mov
mov
shlb
fs
jmp
jecxz
in
jle
mov
call
in
sub
push
push
pushl
jmp
fs
popf
insb
popf
inc
fisttps
fsts
pusha
notb
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
jmp
movsb
cmp
rorb
stos
add
add
jb
jmp
inc
jecxz
push
in
test
movsb
ret
ds
cmp
in
aam
mov
push
mov
mov
push
mov
movb
jmp
jecxz
in
je
sub
mov
call
int
mov
sbb
push
pushl
mov
mov
lea
sub
push
push
push
call
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
jmp
lcall
repz
cmc
daa
or
in
repnz
dec
sahf
jbe
mov
jmp
or
movsl
xor
in
sbb
shll
or
add
add
outsb
cld
fwait
jbe
inc
ret
ret
lods
lret
inc
scas
rdmsr
xor
cmp
push
call
add
mov
call
xor
add
push
push
pushl
call
add
ss
call
add
xlat
add
inc
cmp
jl
pop
jmp
sub
inc
enter
jmp
rcrl
test
mov
cwtl
aas
arpl
jns
jmp
jne
mov
xlat
mov
mov
mov
mov
call
add
addr16
incl
test
jne
call
mov
jmp
aad
mov
testb
jmp
lock
mov
or
pop
adc
popa
xchg
fldl
incl
je
mov
call
add
call
mov
jmp
xchg
sbb
dec
jmp
pop
pop
ret
jmp
or
in
call
jmp
xor
mov
xlat
jp
jg
jmp
cmpb
jne
call
add
fsubs
call
add
andl
movl
xor
pop
pop
jmp
push
mov
xchg
xor
mov
jmp
mov
mov
xor
cmp
je
mov
jmp
hlt
push
cld
push
xor
dec
fimull
fidivl
stc
insb
loop
je
lret
into
mov
mov
mov
jmp
ljmp
ret
push
lds
popa
icebp
nop
arpl
dec
xor
in
cmp
jne
call
push
push
push
push
push
movl
call
add
cmpb
je
mov
andl
jmp
cli
pop
scas
sti
pop
pop
leave
ret
jmp
pop
ret
ret
movsb
cmp
add
inc
mulb
out
pusha
in
jge
jmp
outsl
repnz
pop
repnz
sbb
stos
setg
or
add
or
inc
xor
jmp
ss
in
insb
loop
je
int
ret
mov
mov
gs
jge
and
add
mov
stos
into
cmp
in
cli
adc
ss
mov
mov
push
mov
mov
lea
cmpl
jle
jg
jnp
add
push
into
inc
aam
dec
test
leave
and
mov
test
incl
inc
or
jmp
orb
sti
push
repnz
push
push
fwait
test
jmp
popf
adc
mov
inc
mov
or
push
shlb
in
push
movzbl
push
push
call
mov
add
jmp
addb
sti
adc
mov
inc
mov
inc
shll
out
add
in
adc
xchg
enter
movzbl
movzwl
and
jmp
xor
jecxz
loopne
jb
and
adc
test
pop
inc
jmp
xchg
pop
xchg
repnz
mov
ja
pop
cmp
jne
jmp
mull
xchg
pusha
mov
adcl
test
dec
fstpt
xchg
repnz
enter
jmp
sub
mov
test
je
jne
enter
push
out
adc
or
push
jno
add
add
cmp
add
scas
scas
xor
jmp
scas
mov
sti
sub
incl
insl
lcall
xor
mov
test
jl
cmp
je
cmp
jg
test
jne
je
xchg
or
in
mov
in
insb
into
jae
xchg
or
test
addl
jmp
nop
adc
data16
xchg
outsb
mov
jae
in
mov
cli
std
incl
mov
jge
and
popl
std
jmp
pop
fstpt
insl
stc
lods
cmp
je
movl
jmp
jg
outsl
or
out
addb
insb
or
call
mov
add
add
std
add
add
add
push
pop
inc
and
cmp
xchg
pop
cmp
jmp
dec
les
int3
imul
scas
and
neg
xor
jmp
stc
stos
sbb
pusha
lret
pusha
xchg
inc
or
jns
aas
and
add
add
add
cmp
arpl
xchg
orl
jmp
orb
adc
sub
inc
aad
sub
xor
jne
jmp
jg
mov
pop
push
lret
pop
ds
lret
scas
pop
std
pop
iret
pop
cmp
adc
in
jge
notl
movl
add
add
xchg
dec
inc
pop
lds
test
clc
pop
je
movl
jmp
cltd
push
pushf
sti
push
cld
cmp
sbb
inc
jmp
rcr
dec
dec
test
jmp
mov
shll
movsl
xor
push
sbb
test
incl
int3
jmp
shlb
shl
jne
movzbl
movzwl
test
jmp
sbb
ss
cmp
mov
je
arpl
cmc
dec
xchg
movl
jmp
test
jmp
stos
xor
int
xchg
jecxz
adc
xor
aam
lods
mov
jmp
dec
rolb
shlb
and
mov
xchg
adc
add
add
mov
jmp
sub
imul
jmp
xchg
sarb
sbb
lods
cmp
jae
orl
cmp
jb
jne
cmp
jmp
int
ret
mov
jecxz
push
in
mov
inc
in
mov
iret
jne
pop
cld
jmp
jnp
insl
hlt
pop
jmp
aas
scas
lret
and
push
sub
cmp
movsbl
ja
sub
jmp
orl
cmpl
jne
jmp
push
mov
jle
sub
mov
dec
mov
mov
jne
out
or
test
decl
mov
jmp
pop
rolb
shlb
xchg
pop
pop
inc
and
sub
cmpsl
call
cmp
je
call
add
test
je
call
call
add
mov
in
std
incl
call
call
call
add
fcmovbe
std
call
call
add
aas
aad
call
add
call
call
test
je
push
call
add
push
lcall
shr
xchg
paddd
cmp
je
push
push
call
mov
pop
pop
test
je
push
call
add
stos
or
incl
call
pop
call
test
je
push
push
call
pop
pop
call
add
push
xor
inc
jmp
test
rol
push
les
and
add
add
mov
jae
xchg
out
jg
mov
outsb
mov
jg
rolb
and
rolb
xor
test
add
add
lds
pop
cmp
sbbb
out
sbb
test
jne
cmpl
je
mov
jmp
adc
add
add
gs
or
fs
popf
insb
jp
jp
loope
inc
jbe
jmp
daa
mov
in
call
pop
repnz
rcll
mov
jg
and
add
add
jbe
loopne
xor
sbb
pop
cmp
push
daa
stos
cmp
jg
andl
jmp
xor
ss
inc
mov
xchg
xchg
out
cli
callw
cld
call
add
add
add
cltd
sar
incl
call
jmp
test
jne
je
push
rolb
shlb
mov
stos
into
cmp
in
and
jmp
inc
lds
iret
and
mov
add
sbb
rclb
or
lock
push
inc
sbb
movl
je
orl
jmp
ficoms
lods
pop
mov
push
xor
sub
push
mov
push
xor
daa
cmpl
mov
add
lcall
xchg
add
gs
cmp
jmp
das
ret
push
lds
sbb
mov
xchg
cmpsl
daa
jecxz
add
add
ljmp
jg
add
mov
jmp
cmpsb
xor
repz
jge
add
stos
add
add
pop
jp
jge
dec
fnstcw
int3
stos
shrw
mov
fbstp
adc
fdivrl
mov
jmp
mov
xchg
adc
in
fldt
ljmp
stc
mov
sbb
add
scas
mov
testb
je
negl
jmp
dec
pop
jmp
clc
notl
cmp
adc
sbb
ds
mov
adc
jmp
adc
mov
jns
aas
push
clc
lods
dec
xchg
je
mov
andl
jmp
scas
push
imul
push
xor
inc
fbstp
shr
jb
inc
and
pop
push
test
jge
pop
out
jae
xchg
cwtl
sbb
cmpb
je
mov
andl
jmp
push
jmp
lea
jmp
lcall
cmp
sbb
sahf
or
cmpsb
dec
pop
scas
sub
inc
sbb
push
pop
setne
add
mov
jmp
fidivrl
mov
xor
incl
jmp
add
imul
and
add
dec
mov
test
out
jg
jmp
or
xchg
test
into
adc
jae
xchg
cmc
add
xchg
push
test
pushl
ret
add
add
dec
leave
dec
fstpt
xchg
cmc
add
test
test
push
neg
dec
frstor
test
ljmp
push
adc
jmp
test
insl
xchg
cmpl
jmp
or
pusha
mull
icebp
cmp
repnz
inc
mov
push
push
xor
call
jmp
ret
lods
pop
mov
mov
mov
or
xchg
jmp
adc
and
lock
add
lock
vmovmskps
mov
outsl
or
mov
pop
popf
inc
jmp
mov
mov
je
out
push
sbb
lea
jmp
movsl
cmp
pop
xchg
repnz
pop
hlt
js
mov
push
mov
mov
call
add
call
add
jmp
sub
cmc
mov
push
je
jne
jae
jl
testb
sti
sahf
insl
in
inc
loope
adc
and
or
pop
cmp
adc
fstpl
xor
inc
mov
xor
call
add
call
push
call
push
call
pop
pop
jmp
adc
add
sahf
dec
and
push
push
call
jmp
out
cmc
pushf
outsl
mov
scas
cmp
mov
add
imul
xor
inc
pop
pop
ret
jmp
ret
mov
mov
out
push
mov
jmp
inc
je
mov
and
or
fs
popf
insb
mov
add
mov
pop
xchg
hlt
lds
adc
add
shr
sub
aas
pop
test
sub
add
aad
push
inc
push
call
pop
mov
jmp
aam
int
addr16
jns
jmp
xchg
sti
xchg
loopne
mov
cmp
jne
call
movl
xor
jmp
mov
rorb
push
xor
sub
ja
xorb
xor
fcoml
sub
lcall
hlt
add
add
push
test
jmp
je
outsl
or
repz
or
cmpsb
dec
and
mov
add
add
stc
ret
das
mov
inc
and
dec
enter
add
add
add
add
dec
fistpll
add
xor
call
movl
jmp
and
gs
pop
repnz
push
ret
cmpsb
push
mov
iret
cmp
jne
push
push
call
pop
pop
test
jne
push
call
jmp
xchg
and
mov
mov
inc
mov
or
mov
leave
xchg
mov
jmp
insl
sti
imul
push
dec
jae
push
insl
subl
dec
fisttps
flds
add
int3
movl
jmp
into
push
lds
in
mov
out
mov
inc
jmp
cmp
mulb
dec
jbe
dec
sub
ret
xor
inc
in
fisubl
pop
ds
int
frstor
pop
mov
test
mov
jne
lea
mov
push
pushl
add
call
pop
pop
test
je
jmp
ds
int
insb
push
lea
cmpl
jne
push
call
pop
test
jne
push
call
jmp
insb
ljmp
lods
lret
inc
cmpsb
pop
fisttps
pop
scas
mov
push
mov
mov
jmp
in
notl
and
mov
pop
test
je
xchg
cmc
add
push
lea
jmp
and
sub
and
sti
mov
xchg
cld
incl
pop
pop
jmp
pop
roll
sarl
pop
mov
jg
jle
nop
push
popa
nop
js
roll
shll
call
pop
ret
jmp
fmuls
mov
mov
sbb
mov
mov
les
movsl
add
mov
pusha
notb
mov
call
sbb
iret
int3
ret
jmp
cli
xor
in
push
push
mov
mov
jmp
push
roll
aad
jmp
loope
jae
push
lea
lea
jmp
dec
aad
sub
je
int3
inc
and
notb
or
cs
imul
add
mov
jmp
ss
or
sbb
pusha
loop
pop
loop
je
gs
sbb
enter
mov
add
add
addl
add
filds
push
xor
sub
jae
xchg
mov
rorb
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
jmp
push
rolb
shlb
dec
scas
cmp
or
lea
jmp
int3
dec
fidivrs
mov
and
lcall
mov
incb
add
jmp
mov
scas
lret
mov
cld
cmp
lret
xchg
call
pushl
call
pop
pop
jmp
fisttpll
or
add
add
je
lret
lret
push
shlb
jnp
jg
mov
call
je
cmp
jne
push
call
pushl
call
pop
pop
jmp
pop
rolb
shlb
hlt
sbb
dec
mov
cmp
je
cmp
jne
push
call
pop
jmp
mov
fisubrs
xchg
cmc
add
add
or
cmp
xchg
add
push
adc
incl
add
pop
cmp
je
cmp
jne
push
call
pop
jmp
fld
add
decl
jne
push
call
pop
pop
jmp
mov
mov
cs
fimuls
mov
pop
jb
addr16
add
std
or
jmp
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
jmp
mov
jmp
cmp
xor
scas
pop
fiaddl
mov
stc
xor
sbb
push
xor
jno
pop
pop
jmp
imul
push
std
push
fadds
mov
mov
fwait
or
sub
mov
cmp
je
cmp
jne
mov
jmp
dec
in
jge
divl
rcll
inc
rclb
mov
xor
push
cmp
je
call
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
jmp
cmc
lret
xchg
je
push
call
jmp
imul
sbb
push
icebp
ja
xorb
mov
cmp
daa
lea
movl
call
add
je
mov
test
jmp
fstpl
test
mov
xor
xchg
add
cltd
or
jo
cmpl
je
jne
test
mov
and
je
insl
hlt
pop
mov
clc
xor
lods
mov
test
je
push
call
jmp
lret
mov
scas
lods
stos
loopne
mov
test
push
xor
sub
iret
sahf
adc
push
pop
mov
test
je
push
call
jmp
stos
and
dec
inc
fisttpl
jle
clc
fsts
xor
cld
incl
push
mov
push
call
mov
test
je
push
call
jmp
add
or
cmp
add
decl
jne
mov
add
push
jmp
stos
cmp
xchg
pop
bound
xorl
push
mov
sbb
jmp
and
push
popa
hlt
push
cld
pop
test
mov
mov
xchg
and
dec
fdivrl
call
jmp
pop
pop
pop
pop
ret
jmp
sub
cmp
call
lret
mov
mov
test
je
jne
fwait
cmp
aaa
cmpsl
ret
out
jno
jnp
add
test
inc
add
rorb
jle
add
push
call
jmp
xor
and
mov
popf
je
test
je
push
mov
cmp
je
push
mov
jmp
enter
add
dec
jmp
fstpl
xchg
test
dec
mov
shr
inc
inc
xor
call
push
shlb
fisubrs
pop
ret
jmp
ret
jmp
push
dec
loop
jmp
jmp
int3
dec
fidivrs
lock
clc
sub
ret
adc
dec
or
mov
add
push
call
pop
pop
jmp
call
pop
test
je
push
call
jmp
xchg
jmp
cmpsb
and
jns
mov
add
inc
or
add
add
into
cmp
add
je
mov
test
je
push
call
jmp
xlat
lock
push
std
xchg
mov
call
ret
jmp
into
dec
fstpt
push
call
jmp
dec
popf
or
ljmp
in
daa
mov
and
or
pop
lcall
gs
add
test
incl
call
mov
movl
call
jmp
or
add
arpl
pop
mov
ret
jmp
sub
pop
test
add
je
sub
je
jne
xlat
pop
enter
sub
mov
fs
jmp
cmpsb
imul
mov
ljmp
pushf
jbe
jne
mov
jmp
pop
sbbl
test
scas
leave
cmp
dec
inc
push
push
call
call
mov
call
test
je
cmpl
je
call
mov
test
jne
push
call
pop
jmp
mov
mov
xchg
mov
rclb
add
jmp
cmp
xor
cltd
push
dec
mov
sub
je
dec
je
xor
ret
jmp
xor
jmp
jmp
les
mov
lods
cs
rolb
add
xor
decl
dec
lods
movsb
ret
mov
add
add
jmp
push
int3
inc
and
bound
jnp
in
jmp
lds
test
lock
arpl
insl
hlt
pop
lods
fwait
inc
je
cmpsb
cmpl
pop
jne
call
add
test
call
ja
lcall
insb
std
decl
gs
lods
enter
mov
push
mov
sub
jmp
leave
push
lret
jmp
mov
cltd
cmp
push
xor
lea
push
push
call
xor
movzwl
mov
mov
mov
mov
jmp
aad
lds
mov
mov
xchg
mov
push
push
mov
jmp
jmp
clc
lahf
push
sbb
repz
lea
jae
subl
and
call
dec
jne
je
add
inc
push
xor
ficoml
mov
push
sub
mov
mov
mov
jmp
sub
and
js
fwait
or
jne
outsb
cld
fwait
jbe
mov
loope
or
lea
stos
stos
stos
call
add
lea
jmp
mov
shlb
ljmp
sahf
insl
lahf
sub
inc
jmp
ljmp
xor
mov
jmp
jne
je
out
sbb
test
add
pushf
or
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
jmp
cmpsb
aaa
cmpsl
ret
in
out
jno
add
in
in
je
je
cmpb
lea
push
pushl
call
add
movl
ret
add
inc
shlb
dec
sub
jo
call
jmp
insb
fstpt
test
std
jmp
mov
and
jo
loop
in
test
lea
push
push
push
call
xor
push
pushl
jmp
les
test
out
call
aad
int3
inc
and
mov
inc
mov
inc
test
jne
jmp
xor
imul
pop
fmuls
fdivrs
dec
adc
dec
imul
jbe
lea
pushl
push
jmp
sbb
sbb
inc
push
fisttpl
fnsave
xchg
xchg
icebp
add
imul
cli
lcall
leave
sub
jmp
mov
mov
fimuls
jns
jecxz
arpl
add
enter
sbb
sub
add
push
mov
jle
sub
fimull
ficoml
imul
add
test
add
add
and
pop
jne
imul
xchg
cld
pxor
in
push
push
lea
push
push
pushl
push
call
add
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
xor
movzwl
test
je
orb
mov
jmp
movb
jmp
loopne
loop
je
fsts
pop
test
hlt
sbb
test
je
xor
mov
inc
cmp
jb
mov
movb
test
je
lea
movzbl
movzbl
cmp
ja
sub
inc
push
lea
push
push
call
add
jmp
jnp
jg
jmp
movb
dec
xor
cld
cld
jmp
daa
mov
dec
mov
clc
mov
jb
jmp
push
add
jge
pop
adc
cmp
les
rcrl
rolb
add
cmc
int
mov
test
je
push
call
jmp
adc
xor
pop
int
and
aaa
mov
cli
decl
add
add
lea
cmp
ja
orb
jmp
mov
filds
xchg
add
jp
out
jl
notb
lret
mov
pop
xor
pop
call
jmp
xchg
or
dec
fistpll
push
xor
rolb
add
mov
adc
xor
dec
jecxz
push
lds
xor
ja
imul
add
or
filds
mov
out
push
xor
js
sti
imul
push
je
cmp
jb
jmp
cmpsl
leave
ret
jmp
mov
repz
push
les
cmp
push
xor
sbb
movb
jmp
inc
lds
iret
sub
inc
and
xor
jl
jmp
adc
jle
and
je
lea
mov
add
jmp
addb
or
cmp
xchg
test
inc
jmp
ja
mov
jmp
mov
lods
lret
inc
movsb
rorl
dec
in
out
std
test
adc
call
jmp
int
sub
push
jmp
movsl
xor
les
int3
sub
mov
neg
xor
call
pop
andl
mov
mov
call
add
divb
call
add
cmpl
add
test
call
ficoml
lcall
insl
lcall
hlt
into
lea
jmp
divl
mov
jmp
xchg
sbb
aad
rcrb
mov
js
popa
mov
rolb
jmp
lea
mov
and
mov
jge
notl
inc
add
inc
push
incl
mov
push
call
add
sub
decl
dec
sub
or
outsl
lcall
lods
xchg
inc
mov
push
mov
sub
push
xor
push
lea
jmp
pushf
setg
or
shll
out
adc
xor
jae
mov
test
incl
test
ja
test
jne
push
call
pop
jmp
lock
ja
ss
leave
ret
jmp
push
mov
jmp
jnp
jo
loop
fldl
mov
call
mov
add
add
xchg
jb
clc
je
mov
andl
jmp
or
cmp
add
add
mov
mov
adc
pop
mov
cmp
jmp
dec
fstpt
ss
mov
mov
call
mov
cmp
jne
movl
call
add
pop
cld
jmp
int3
push
ret
cmpsb
push
mov
mov
jns
popa
and
adc
insl
cmp
ja
orb
mov
sub
jmp
xor
test
inc
clc
andl
jmp
sub
call
jmp
fistps
scas
pop
mov
sub
jno
xorb
sbb
add
add
outsb
or
xor
bound
and
lock
lcall
jo
movsb
sub
dec
mov
jmp
std
jo
xorl
fnsave
and
clc
push
sbb
test
decl
add
add
add
add
jmp
jmp
and
jo
loop
in
loopne
jb
and
out
shl
push
jne
movl
call
add
incl
inc
daa
sarb
mov
jne
xor
cmp
je
incl
add
jmp
xchg
add
adcb
xorb
jb
in
and
std
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
xchg
adc
lock
test
add
add
call
mov
add
imul
jmp
pop
ret
ret
hlt
push
cld
push
cmp
sahf
push
mov
ljmp
pop
xor
pop
call
leave
ret
jmp
insb
lock
pop
or
fs
popf
insb
jmp
xor
xor
dec
int3
inc
and
cmp
jbe
inc
jmp
xchg
adc
in
sbb
imul
mov
ret
imul
push
mov
orb
inc
dec
jne
mov
jmp
pushf
sbb
ret
ret
and
cmpl
mov
push
adc
mov
jmp
enter
push
mov
fstpt
jno
push
rcrl
loopne
fsts
dec
sub
adc
data16
xchg
outsb
adc
int
adcl
cmpb
jmp
popl
xchg
lock
ljmp
and
lock
mov
jmp
jge
clc
lahf
push
ja
pop
mov
push
add
mov
test
je
movzbl
movzbl
jmp
aad
aam
dec
mov
dec
inc
jmp
mov
jmp
adc
sbb
sub
data16
xchg
outsb
lods
mov
mov
sbb
cmp
repz
mov
or
movzbl
jmp
scas
aas
scas
lret
ds
cmp
inc
lahf
or
and
dec
cmp
jbe
ja
sbb
push
enter
jle
dec
fstpt
push
cmp
jb
mov
incl
add
jmp
out
out
mov
leave
push
les
adc
sub
call
decl
test
jmp
popa
icebp
nop
arpl
sbb
sub
movb
push
jns
pmaxsw
pop
adc
jne
jmp
mov
cmc
jne
fs
sbb
dec
sub
pop
repz
xchg
cld
orb
inc
jmp
imul
add
test
or
add
push
cmp
push
lds
mov
movsl
xchg
adc
adc
in
sbb
scas
call
mov
jb
mov
mov
movl
call
push
mov
lea
lea
pop
mov
inc
mov
inc
inc
inc
dec
jne
mov
call
jmp
aam
int3
stos
data16
decl
or
mov
add
addr16
xor
ret
jmp
mov
arpl
addl
aam
arpl
js
ljmp
jne
push
call
pop
movl
jmp
test
leave
or
adc
arpl
sti
call
add
add
push
mov
mov
mov
imul
add
jmp
mov
push
or
cli
add
adc
jmp
lret
inc
aam
dec
mov
push
stos
pop
xchg
dec
call
rorb
enter
loope
or
lea
stos
stos
stos
jmp
das
pop
shl
and
dec
jmp
and
pop
int3
stos
movsw
jl
js
ljmp
xor
addb
add
dec
sub
push
icebp
fs
popf
insb
lret
lods
xor
repz
cmp
jb
xor
jmp
xchg
setg
or
and
ret
jmp
lea
jmp
xor
push
popf
or
pop
enter
and
popf
out
or
jmp
mov
sar
jmp
fimull
mov
lcall
sbb
pop
mov
leave
ret
jmp
and
icebp
push
shlb
add
sub
mov
mov
cmp
jmp
and
or
jge
je
addr16
call
in
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
mov
test
jne
push
lea
mov
mov
mov
mov
mov
mov
test
jne
sar
dec
cmp
jbe
push
pop
jmp
inc
test
rorl
cmp
in
pop
incl
add
sti
adcl
test
jne
je
divl
xorl
rorb
inc
es
push
nop
jle
pop
or
stos
add
add
rorl
aas
jbe
ja
fcoml
mov
aad
dec
ljmp
jno
lds
lea
not
and
decb
jmp
ficoml
mov
mov
sbb
and
push
test
push
negl
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
mov
lods
mov
mov
popl
pop
add
fs
ljmp
rclb
hlt
in
jl
jne
and
and
mov
mov
add
mov
mov
mov
mov
mov
mov
jmp
pop
enter
or
sbb
jae
xchg
add
push
lret
pop
ds
and
pop
lods
mov
and
mov
jne
je
popa
stc
imul
popf
in
mov
add
jmp
rorb
mov
into
test
lahf
cli
or
inc
mov
mov
cmp
jmp
jge
jo
loop
mov
xchg
push
ret
cmpsb
push
in
scas
mov
movb
add
dec
fnstcw
and
xor
cmp
cmp
jmp
idivl
jl
fs
int
enter
mov
and
out
or
add
add
add
add
movsb
cmp
add
add
jnp
mov
je
push
cld
sbb
push
mulb
mov
les
add
decb
jne
mov
and
jmp
mov
stos
int
fmulp
push
ret
cmpsb
push
mov
outsl
lea
sahf
mov
mov
mov
mov
jmp
xchg
sbb
xlat
inc
and
rcrb
test
add
or
add
int3
sub
leave
inc
xlat
mov
test
dec
fdivrl
dec
repnz
dec
loopne
out
not
jmp
xchg
sbb
aad
sar
ljmp
iret
cmp
inc
pushf
pop
mov
inc
movb
add
int
lret
shr
not
and
decb
jne
mov
and
jmp
hlt
xchg
cltd
xlat
mov
mov
jmp
inc
int3
inc
and
fdivrs
jns
jmp
inc
lods
testl
mov
jae
dec
xor
inc
shrl
jge
add
cmp
je
jmp
jno
inc
insb
lea
mov
jmp
call
outsl
sub
mov
gs
xor
dec
clc
mov
sar
dec
mov
cmp
jbe
mov
jmp
mov
faddl
dec
das
fisubrl
mov
jmp
leave
push
mov
add
dec
sbbb
jmp
jge
jo
sub
popa
lea
mov
jmp
nop
or
imul
or
push
jmp
in
jle
xchg
outsl
mov
shr
lea
or
jmp
jp
dec
sub
pop
mov
xchg
adc
jg
fisttpll
add
add
mov
or
jmp
pusha
loope
adc
pop
int
ret
cmpsb
push
mov
or
jge
std
push
ret
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmpb
jne
mov
mov
shr
mov
or
jmp
int3
shr
mov
jmp
mov
lds
jp
in
or
sub
lea
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
jmp
imul
or
insb
pop
ja
inc
xor
jmp
sbb
data16
jl
idivb
mov
xor
pop
add
adc
decl
add
add
arpl
cmc
pop
das
mov
aaa
mov
adc
pushl
call
mov
pushl
push
call
add
jbe
cld
incl
mov
jmp
push
fisttpll
out
iret
arpl
xchg
mov
dec
sub
sub
mov
std
cmpl
jne
push
push
jmp
add
stc
push
test
and
xchg
pop
jmp
push
les
int3
es
jge
sti
test
jmp
aad
cld
cld
cmp
jmp
mov
mov
sbb
jne
jbe
loopne
inc
fisttpll
out
addr16
mov
decl
jne
mov
test
je
mov
call
add
inc
add
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
jmp
mov
xchg
adc
hlt
pop
mov
clc
movsb
sub
or
int3
cld
fiadds
mov
jmp
adc
mov
jmp
cmp
adc
adc
lret
add
push
cld
dec
andl
cmp
out
cmp
jmp
push
dec
pop
cli
push
loope
div
jne
xor
jmp
aam
les
dec
das
fidivrl
push
xor
cs
xlat
inc
and
cmp
add
jmp
sahf
sbb
adc
adc
push
les
add
imul
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
jmp
sub
inc
iret
pop
cmp
jo
or
adc
adc
adc
mov
incl
imul
add
push
push
call
add
mov
cld
incl
jmp
or
jns
gs
sbb
dec
fdivrl
outsl
loope
adc
or
mov
inc
xlat
mov
cmpsl
dec
maxps
or
add
push
mov
sbb
pop
xchg
mov
cmp
jmp
lock
xchg
outsb
mov
arpl
xchg
mov
xchg
or
je
inc
aas
cmp
jb
cmp
je
cmp
je
movzwl
push
call
add
idiv
decl
call
add
hlt
ljmp
add
add
call
xor
inc
add
mov
mov
cmp
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
ret
push
les
fyl2xp1
push
cmp
je
push
jmp
push
iret
pop
cmp
rorl
mov
mov
jmp
xchg
je
push
call
jmp
or
ret
jmp
jno
mov
push
push
mov
jmp
jb
jns
jmp
data16
outsb
or
push
adc
sbb
ds
inc
bound
or
sub
es
mov
mov
xchg
adc
pop
fidivl
xchg
add
adc
mov
push
push
mov
push
xor
jmp
jg
xchg
testb
mov
out
jno
xor
add
inc
jmp
lods
sub
lds
out
add
push
push
call
add
add
add
test
sub
pop
popa
in
sbb
add
jo
lahf
push
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
jmp
out
outsl
lcall
and
sub
lcall
mov
incl
mov
orl
mov
jmp
xchg
xor
aad
push
cwtl
mov
inc
lods
int3
sub
jp
add
adc
lds
cmp
pop
pop
leave
ret
jmp
gs
jl
notb
dec
fstpt
pop
bound
add
jmp
mov
fistl
cwtl
push
imul
jbe
push
fimull
fidivl
ficoms
mov
outsb
or
adc
jo
add
roll
mov
mov
adc
jne
mov
pop
inc
in
mov
add
add
add
into
cld
incl
mov
cmp
jne
pushl
push
call
add
ljmp
sti
call
inc
clc
add
lea
mov
mov
lea
mov
mov
jmp
mov
aam
pop
xchg
adc
int3
pop
into
test
mov
mov
test
je
push
call
jmp
popl
add
add
inc
and
jbe
mov
mov
xchg
out
lods
test
add
add
not
and
mov
jmp
cmp
fdivl
shr
or
add
push
mov
push
pusha
aad
rcll
and
dec
cli
mov
cmp
jne
mov
cmp
jae
shr
mov
lea
not
and
jmp
dec
aad
sub
bound
lea
add
mov
add
jl
int3
push
mov
jnp
in
pop
insl
addb
shr
mov
lea
not
jmp
dec
call
lretw
pop
ds
sub
inc
and
or
add
add
jp
push
gs
pushf
outsl
jb
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
mov
cmp
jbe
push
pop
mov
jmp
decb
jne
je
rolb
dec
cmpsl
push
adc
imul
mov
add
inc
test
mov
mov
jne
or
jmp
sbb
lret
movsb
push
mov
lea
out
adc
dec
fs
and
decb
jne
je
cmpsb
xor
scas
add
scas
sub
inc
mov
stos
mov
cmpl
jle
mov
mov
jmp
sbb
add
jbe
leave
pop
cmp
sub
fnstsw
jmp
arpl
jl
testb
fisttpll
out
mov
rolb
ljmp
mov
mov
mov
sub
jmp
cli
push
lahf
push
cld
jae
xchg
fisttpll
mov
mov
and
push
pop
add
inc
fisttpll
in
out
jno
imul
or
mov
jb
pop
or
sar
dec
lea
cmp
jbe
push
pop
jmp
test
test
imul
mov
mov
lea
mov
jmp
je
arpl
cmc
dec
rcrb
iretw
dec
fistpll
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jmp
mov
andb
jge
dec
adc
bound
mov
cmpb
jne
je
cli
js
mov
push
xchg
add
jne
cmp
sub
fldl
cmp
imul
sbb
jns
mov
fs
pop
loop
push
xchg
pop
bound
or
sbb
inc
std
call
dec
fnsave
dec
mov
add
adc
sbb
jmp
mov
xchg
icebp
add
lock
mov
mov
fistpll
jmp
out
notl
cld
jo
xorl
inc
mov
lea
mov
mov
shr
mov
or
jmp
inc
fstp
mov
jmp
pop
leave
pop
cmp
cmp
outsb
cld
fwait
jbe
fisttpll
push
xchg
jbe
pop
and
jmp
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
jmp
stos
cmp
mov
cmpsb
and
adc
imul
lea
lea
jmp
into
pop
leave
test
lods
movsb
ret
ds
xchg
mov
and
or
add
add
pop
jo
lea
mov
mov
jmp
ret
pop
leave
test
lock
push
test
push
mov
mov
lods
push
mov
jmp
gs
push
dec
cwtl
jp
test
stc
or
or
add
mov
shr
mov
or
jmp
adc
out
xor
inc
jmp
fmull
add
add
pusha
pop
repnz
jnp
dec
sub
pusha
pop
add
inc
xchg
mov
shr
or
jmp
inc
int
and
aaa
cmpsb
xor
mov
xchg
and
pusha
add
add
add
add
cld
mov
pop
pop
ret
jmp
pop
fimuls
xor
jle
call
xlat
and
lret
testb
jne
je
jp
imul
mov
xchg
testb
sub
lea
mov
lea
mov
sar
dec
mov
mov
cmp
jbe
push
pop
jmp
out
mov
pop
or
push
outsl
dec
push
mov
add
and
add
addb
repz
loopne
hlt
push
cld
adc
arpl
loopne
jmp
dec
xor
shll
pushf
nop
les
add
decb
jmp
xchg
and
mov
xchg
add
pop
pop
xlat
inc
and
xor
dec
or
lods
push
fimuls
add
loop
aas
scas
lret
dec
rcll
xor
add
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
pop
mov
and
jmp
pop
int3
inc
and
jno
jecxz
movsl
cmp
test
adc
pushl
cli
push
cld
xchg
cmc
add
enter
addr16
pushf
cmp
cld
sar
dec
cmp
jbe
push
pop
jmp
mov
fcoml
cmpsl
jp
jbe
loopne
fimuls
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
jmp
int
les
repz
jne
je
imull
test
mov
xchg
or
mov
mov
mov
jmp
mov
dec
cmp
jmp
inc
fisttpll
out
daa
mov
cmc
push
cmp
nop
inc
jmp
or
cmp
mov
out
fidivrl
sub
adc
hlt
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmpb
jne
mov
mov
shr
mov
or
jmp
loope
lock
bound
ja
mov
shr
or
jmp
das
scas
cmp
mov
mov
lds
mov
mov
mov
jmp
lcall
push
shll
jge
outsb
xchg
and
jne
cltd
xchg
jle
pop
pop
leave
ret
jmp
insb
jmp
push
in
add
xchg
jo
daa
mov
and
xor
push
push
jge
or
shr
orl
jmp
ret
mov
mov
loopne
stc
jmp
inc
aad
dec
stos
push
add
add
add
out
mov
mov
jmp
ja
imul
repz
gs
cmpsl
cmp
add
movsl
pop
icebp
mov
cmp
jb
jmp
mov
add
mov
mov
jmp
mov
mov
dec
fidivrs
sti
add
or
xor
shr
mov
jmp
xor
fstpt
fdivs
je
mov
mov
and
out
loope
jae
nop
or
jne
mov
or
and
and
or
jne
add
jmp
fimull
adc
inc
mov
jmp
mov
mov
rcll
push
out
sahf
add
lea
mov
shr
mov
or
jmp
or
stc
imul
insl
ret
fld
dec
mov
cmp
jb
jmp
jle
jno
jecxz
popf
cmp
nop
xor
jno
xorb
cmpsl
dec
push
mov
and
and
or
jne
add
jmp
leave
outsl
pop
cmp
jb
jmp
and
movsl
sub
mov
xchg
xor
test
jmp
cmp
push
lds
rclb
pop
mov
pop
mov
test
lea
jmp
push
inc
and
xor
stc
les
mov
cmp
jb
jmp
dec
into
pop
cmp
aas
lods
and
push
lock
mov
movsl
xor
ret
xchg
pop
push
call
jmp
stos
and
mov
jle
outsl
jl
popa
add
adc
aad
cmp
jne
call
mov
mov
test
jmp
adc
std
jo
xorl
ja
js
jne
pop
rolb
xchg
add
and
popf
adc
insb
loop
je
pushf
lahf
pop
cmp
jne
mov
jmp
loope
in
jg
mov
jne
xor
jmp
or
inc
and
sub
fildll
enter
dec
add
add
add
sub
xor
lahf
in
cmpl
jmp
fiaddl
mov
mov
push
shlb
xorb
mov
dec
adc
jmp
js
ja
loope
andl
and
lock
adc
std
pop
pop
pop
leave
ret
jmp
loopne
xchg
ds
call
pop
jmp
std
insl
hlt
pop
mov
mov
pop
add
fwait
pop
dec
andl
jmp
xchg
pop
xchg
adc
insb
in
jge
notl
jge
je
bound
adc
pushl
mov
mov
and
and
or
jne
jmp
xchg
sbb
aam
sub
mov
lea
jmp
mov
stos
into
cmp
call
add
sbb
popa
je
jmp
jo
daa
aam
lret
add
add
lea
mov
mov
jmp
data16
bound
out
jno
rcrl
stos
pop
lods
insl
enter
jne
add
jmp
hlt
adcl
test
cmp
out
adc
push
add
fildl
add
add
jmp
icebp
jne
mov
jmp
ficoml
pop
mov
mov
rclb
sub
jno
ljmp
mov
dec
hlt
mov
mov
sub
mov
sar
dec
cmp
mov
jle
jg
pop
fisttpl
lods
lods
lret
inc
scas
repnz
push
jo
dec
clc
push
pop
jmp
cmp
roll
inc
jmp
dec
dec
dec
push
xchg
cmp
je
mov
jmp
xchg
add
std
or
mov
mov
sbb
sti
jae
xchg
movsb
xor
mov
and
and
or
jne
incl
mov
add
jmp
jg
jns
jmp
sbb
test
je
mov
jmp
fiadds
dec
mov
push
push
int3
inc
and
scas
imulb
pop
jmp
andb
cmp
jmp
js
ja
loope
fiadds
mov
jmp
les
mov
inc
mov
mov
test
adc
pop
or
dec
cld
call
clc
add
add
movb
add
adcl
test
aam
sub
frstor
jne
cmp
mov
jmp
mov
movsl
int3
aas
jmp
or
adc
adc
call
in
push
mov
test
je
push
push
call
add
mov
test
je
push
call
jmp
and
sbb
cli
gs
pushf
outsl
fiaddl
add
mov
shrl
add
sub
pop
or
das
ljmp
pushf
div
mov
jmp
inc
rclb
cs
push
nop
sbb
pop
xchg
mov
lea
iret
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
ss
push
lds
pop
and
push
ficoml
mov
test
out
dec
clc
jmp
sub
mov
sar
jb
xchg
outsb
jo
cmpb
jne
lea
mov
jmp
sub
pop
repnz
mov
lods
and
inc
dec
mov
or
out
mov
or
jmp
pop
xchg
add
rclb
add
mov
pusha
popf
add
add
les
mov
test
shlb
mov
lea
jmp
sub
mov
mov
aas
scas
lret
lods
enter
jnp
jmp
dec
fisttpl
fnsave
je
lea
xchg
inc
lea
mov
shr
jmp
test
mov
sbb
or
inc
fdivl
in
stos
cmp
mov
mov
jmp
cwtl
or
rcll
inc
cltd
cmp
mov
jmp
mov
nop
inc
les
int3
sub
imul
insl
mov
inc
fidivrl
xchg
mov
lds
cmp
dec
cld
mov
lea
jmp
rcll
mov
xlat
mov
mov
inc
scas
mov
and
inc
in
and
inc
jmp
mov
lret
ljmp
jmp
mov
lods
mov
loop
ja
xorb
push
pusha
out
jl
notb
and
inc
cld
call
jmp
pushl
xorl
adc
stos
xchg
sti
cmp
cld
jmp
lea
jmp
icebp
popa
icebp
nop
arpl
cld
or
ret
jmp
pop
test
clc
outsb
or
cmp
inc
es
xor
dec
lock
pop
ret
jmp
cmp
ds
test
aas
stos
cmp
or
jns
mov
push
mov
push
mov
cmp
jmp
xchg
or
sti
pusha
notb
fnstcw
push
call
jmp
icebp
push
mov
mov
dec
mov
lock
lea
mov
mov
mov
mov
lea
mov
test
jne
cmp
jne
mov
cmp
jne
andl
jmp
xchg
adc
daa
rcl
mov
movb
add
pop
sbb
jp
roll
aad
out
add
push
popl
add
cwtl
add
std
or
inc
xor
inc
jmp
setb
addr16
and
pop
fldt
inc
es
aaa
mov
jns
clc
add
roll
add
je
lea
mov
gs
sbb
pop
push
call
add
xlat
jmp
stc
pop
mov
jmp
sbb
inc
shlb
or
jne
push
inc
push
rolb
sarb
call
xor
xchg
sbb
imul
adc
cmp
jne
test
je
mov
jmp
sub
cmp
inc
ds
icebp
push
fildl
add
arpl
arpl
cmc
pop
xchg
push
mov
les
lea
mov
push
call
jmp
dec
les
int3
cmp
fcmovne
pop
iret
stos
pop
xchg
rorl
xchg
call
call
add
jg
incl
add
call
push
call
push
call
jmp
pusha
pop
repnz
sub
inc
aad
sub
aas
dec
xchg
or
jmp
xchg
add
inc
aam
dec
cmpsb
jl
jg
jmp
mov
jae
ret
pushl
jg
jmp
push
movsb
adc
mov
push
in
les
loop
fadds
ljmp
jmp
test
mov
sbb
nop
daa
movsl
aas
scas
lret
scas
jae
out
test
jne
jmp
xlat
dec
rolb
adc
arpl
incb
add
cmpsl
pop
jmp
loopne
adc
xor
dec
xor
and
mov
test
add
popa
ss
decl
push
push
shll
pop
lods
sub
pop
iret
stos
pop
mov
adc
pop
pop
jmp
jg
xchg
cmc
add
sbb
xor
inc
pop
fimull
fidivrl
lret
movsl
push
mov
decl
outsl
shlb
jmp
test
hlt
jo
xorl
out
add
lods
sbb
add
cmp
dec
lea
jmp
arpl
jg
jmp
xor
mov
xchg
lock
mov
pop
call
movl
xor
jmp
rcrl
xchg
orl
out
lcall
jmp
mov
mov
push
jmp
inc
enter
sub
imul
sub
pop
jp
jg
pop
cmp
je
pushl
call
pop
test
je
mov
jmp
adc
inc
aad
sub
jp
fisttpll
out
lock
jmp
aaa
cmpsl
aaa
push
mov
cmpl
aaa
cmpsl
ret
lea
push
push
mov
push
push
xor
xor
mov
cmp
je
inc
mov
jmp
out
jns
mov
js
jo
loop
pushf
add
cmp
dec
dec
insl
push
jne
inc
jmp
xchg
push
pushf
sti
push
mov
aas
adcb
sbb
jp
jp
adc
jmp
call
jb
jmp
sbb
push
jno
sub
pop
cmp
popa
lea
fistpll
test
and
or
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
jmp
adc
fnstsw
and
xchg
cld
decl
shlb
inc
pop
adc
push
jmp
in
cmc
pushf
outsl
mov
jnp
in
or
push
cmc
adc
push
push
push
push
call
add
jmp
push
call
jmp
jge
imul
mov
and
mov
push
inc
imul
add
mov
push
push
movb
jmp
push
rolb
sarb
insb
out
adc
or
nop
push
popa
nop
aaa
mov
test
cmp
addr16
je
push
mov
push
mov
push
call
add
test
je
jne
pusha
out
jg
jmp
das
fidivrl
sbb
jo
inc
push
call
add
test
add
add
flds
add
push
jmp
adc
sub
pushl
xchg
int
lcall
add
in
mov
inc
mov
sti
push
lahf
push
jne
test
pop
cmp
jbe
push
call
sub
add
push
mov
push
sub
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
in
jp
jp
dec
fisttpll
out
mov
mov
and
mov
daa
imul
add
test
je
xor
push
push
push
push
push
call
add
jmp
pop
dec
dec
xchg
call
adc
ja
incl
je
push
push
jmp
adc
push
int3
inc
and
sub
ljmp
inc
cld
jmp
cmp
adc
addr16
push
mov
mov
aaa
mov
jl
ftst
scas
cmp
push
push
push
call
add
test
je
push
push
push
push
push
call
add
jmp
push
push
push
call
add
jmp
xchg
push
enter
mov
movsb
ret
xlat
xchg
or
or
fldl
call
cmp
mov
decb
mov
inc
mov
cltd
cmp
push
push
push
call
add
jmp
mov
stos
into
cmp
scas
push
lea
jmp
fstps
scas
pop
mov
shlb
into
pop
push
or
jae
push
call
pop
cmp
je
push
call
pop
test
jne
call
add
je
jmp
xchg
ret
jmp
clc
hlt
lea
jmp
roll
inc
mov
push
out
in
jge
notl
add
push
sti
lcall
shlb
aam
incl
add
jmp
push
mov
cld
add
add
js
ljmp
add
add
jae
lcall
jmp
call
lcall
bnd
mov
sub
xor
jmp
jnp
add
push
fwait
adc
xchg
add
jl
in
jge
notl
jge
mov
push
mov
push
push
push
push
pushl
call
pushl
mov
mov
call
mov
pop
pop
cmp
jb
jae
mov
fcomip
jp
jp
movsl
sub
outsl
jns
sub
ss
pop
push
pushl
push
call
add
int
add
pushl
jmp
in
jle
mov
mov
test
in
sbb
ss
jg
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
jmp
lea
jmp
iret
pop
int3
stos
movsw
push
mov
ficoml
push
lods
add
cmp
jb
push
pushl
call
pop
pop
test
jne
jmp
cmp
jb
push
pushl
call
jmp
mov
mov
and
push
movsb
mov
mov
or
lea
call
jmp
sbbl
jmp
imul
push
xor
jo
nop
pop
pop
pop
leave
ret
jmp
js
ja
loope
mov
mov
call
mov
add
push
call
pop
mov
mov
pop
jmp
and
popf
stc
mov
and
jbe
pop
mov
out
ret
mov
add
add
add
xchg
or
adc
pop
pop
pop
leave
ret
jmp
push
andl
pushl
call
jmp
into
push
shlb
adc
push
mov
popf
xor
adc
sub
push
cmp
jmp
pop
std
insl
hlt
pop
cmpb
jo
popa
add
pop
and
mov
jmp
clc
js
mov
scas
jmp
sub
lea
jmp
aam
divl
and
jmp
jo
add
add
mov
add
jl
xchg
testb
lods
inc
fs
adc
add
inc
and
or
inc
jmp
bound
push
push
jmp
sti
jle
mov
addr16
jo
fwait
or
cmp
stos
cmp
popa
mov
call
in
pushl
call
neg
sbb
neg
pop
dec
pop
ret
jmp
ss
ret
xor
lea
jmp
ficoms
mov
out
jo
adc
stos
leave
lea
jmp
inc
enter
cmp
adcl
loop
idivl
test
fwait
or
pushl
call
add
pop
mov
cmp
jb
pop
pop
ret
jmp
dec
fimuls
and
mov
jmp
mov
mov
les
dec
adc
maskmovq
mull
nop
arpl
pop
mov
movl
call
mov
call
ret
jmp
loop
in
jg
mov
leave
add
cli
lock
lret
adc
test
je
jmp
arpl
fisttpll
das
pop
int
ficompl
push
mov
push
push
push
jmp
pop
pop
jp
ds
fs
popf
insb
push
insb
lock
mov
push
mov
mov
jmp
mov
mov
lret
pop
ds
jmp
xchg
gs
movsb
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
jmp
in
xchg
shrl
mov
mov
mov
jmp
stos
or
rolb
rolb
mov
jle
insl
in
lcall
ret
jmp
mov
mov
int3
mov
jmp
mov
cwtl
decl
jmp
fimull
fidivrl
in
icebp
nop
arpl
sub
add
cmp
jb
jmp
ljmp
mov
dec
mov
add
push
fwait
pop
xchg
adc
sti
fisttps
movsb
inc
int
and
jb
adc
dec
fstpt
push
out
jmp
xchg
pop
mov
jmp
imul
push
in
paddusw
cmpsl
push
mov
inc
fidivrl
xchg
repz
cli
xlat
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
jmp
stc
imul
add
insl
push
sub
push
push
push
call
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
jne
jne
jnp
in
dec
cwtl
setg
or
add
call
hlt
or
rorb
add
add
test
pushl
rcrb
addr16
ljmp
inc
or
adc
incb
add
xchg
add
mov
jle
arpl
jae
xchg
stos
dec
dec
pop
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
jmp
adc
fs
jge
testl
inc
fiadds
sub
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
dec
xlat
inc
and
pusha
pop
rcll
push
stos
push
push
leave
pop
cmp
pusha
lea
rolb
rorb
ret
ret
jmp
pop
lds
iret
jp
push
xor
dec
enter
sub
and
push
orb
add
add
test
push
test
push
lret
jne
out
or
jl
cli
daa
inc
mov
push
mov
mov
mov
jmp
jo
loop
pop
fmuls
fdivrs
lea
cltd
clc
or
xlat
leave
adc
xor
lcall
add
ret
jmp
push
xlat
inc
and
aas
mov
mov
cld
xchg
cmc
add
xchg
and
icebp
pop
pushf
mov
mov
mov
pop
ret
jmp
fistl
mov
xchg
adc
pushf
sbb
pop
jge
add
cmp
jb
jmp
sub
lea
jmp
push
add
test
add
add
fildl
add
pop
fisttpl
fnstsw
or
jb
insb
or
out
icebp
jl
jne
jo
mov
lret
or
dec
or
fidivrs
es
mov
std
jae
xchg
inc
rolb
rclb
adc
mov
call
add
push
add
lret
imul
add
jmp
adc
movsb
xor
adc
out
cmp
pop
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
jmp
clc
jae
xchg
pop
push
xor
aas
jae
jle
call
lea
jmp
adc
sub
fs
jmp
test
xchg
jecxz
call
mov
jg
and
outsb
cld
fwait
jbe
repz
ret
jmp
in
ja
xorb
test
mov
popf
add
movl
xor
fs
jmp
dec
xor
lea
jmp
dec
ljmp
ss
mov
jp
sbb
mov
cmpsl
mov
push
mov
mov
mov
pop
ret
jmp
inc
lds
iret
das
enter
mov
mov
mov
pop
ret
jmp
push
inc
and
aaa
loope
hlt
xchg
outsb
mov
pop
cmp
cmp
lods
cwtl
call
add
test
ljmp
call
pop
jmp
cmp
pop
push
pop
sub
pop
xor
in
mov
jmp
inc
into
pop
cmp
jno
sbb
aad
out
adc
dec
fidivrs
shr
ljmp
xor
inc
mov
xchg
icebp
add
popf
test
add
pop
ret
jmp
ja
rorl
lahf
pop
xchg
xchg
icebp
add
jbe
cmp
push
lds
push
adc
mov
mov
xor
cmp
sete
mov
jmp
or
stc
pusha
notb
pop
ds
cmp
push
call
andl
jmp
loop
loopne
jb
adc
mov
mov
das
iret
loopne
mov
aas
ja
pop
jmp
pushl
jmp
imul
mulb
push
fimull
movsb
push
repnz
mov
testb
add
add
dec
fidivrs
dec
sub
inc
es
cmp
add
inc
cld
decl
xor
inc
jmp
adc
jns
fidivrl
lcall
adc
pushl
call
add
jmp
or
aas
mov
inc
mov
das
sbb
fs
jmp
dec
jmp
jmp
fists
cmpsb
push
mov
out
mov
push
mov
mov
mov
pop
ret
jmp
jecxz
out
jo
into
in
sbb
sbb
cs
add
push
fwait
andl
jmp
push
jg
es
pop
ret
jmp
repz
cmp
stos
inc
shll
shlb
ret
adc
mov
push
mov
pushl
call
pop
test
je
pushl
call
pop
test
je
xor
inc
pop
ret
jmp
or
mov
fs
jmp
mov
test
je
jne
pop
int3
inc
and
mov
mov
call
in
mov
jmp
stos
aaa
cmpsl
ret
mov
mov
xchg
add
cmp
pop
adc
insb
adc
add
jne
push
call
add
cmp
jmp
push
cmp
je
mov
cmp
ja
jmp
inc
fimuls
pop
or
pushf
pushf
fisttpll
ret
jmp
mov
mov
mov
jmp
insl
repnz
pop
repnz
lock
lret
stos
xor
js
add
add
leave
mov
cmp
jne
mov
jmp
les
xchg
outsb
jmp
push
divb
adc
imul
xor
add
shll
xorl
pop
lea
jae
ds
mov
mov
inc
inc
cmp
je
dec
jne
jmp
scas
sub
lds
push
rolb
shlb
js
outsl
or
in
jbe
cmpl
mov
pop
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
icebp
jbe
cmpl
mov
test
add
add
test
add
add
popa
jmp
cld
fwait
jbe
mov
jmp
insb
jmp
jne
lea
jmp
les
mov
and
mov
or
stos
inc
sbb
add
jmp
dec
lds
iret
and
cmpsl
push
xchg
jb
insl
rolb
add
mov
add
xor
xor
add
test
je
mov
test
je
test
je
jne
lock
jne
insl
dec
les
int3
cmp
nop
push
popa
nop
js
out
lea
mov
sub
ret
jmp
cs
push
lds
rclb
push
divl
ja
loope
adc
outsl
lea
mov
sub
ret
jmp
pop
mov
jmp
lret
xchg
gs
pop
int
lea
pusha
xchg
fiaddl
or
push
roll
add
jne
add
lea
lea
jmp
mov
and
mov
repz
gs
aam
test
jmp
insl
hlt
push
cld
inc
mov
lock
lret
add
lea
jmp
jmp
xchg
popa
call
lret
pushf
sti
push
mov
and
jmp
mov
xchg
adc
mov
jne
inc
and
pop
fnstsw
incl
je
test
jmp
mov
movsl
int3
aas
jmp
shlb
stc
imul
mov
call
push
pop
mov
mov
jmp
inc
adcb
push
mov
sub
pushl
lea
call
movzbl
mov
mov
jmp
mov
ror
fdivrl
and
push
inc
jnp
dec
sub
add
rol
mov
scas
xchg
stos
xor
inc
jmp
xchg
xchg
lock
push
rolb
sarb
ficoms
pop
mov
adc
sbb
adc
je
mov
mov
jmp
xchg
sbb
movsb
cmp
inc
jb
xchg
cmc
add
fidivrs
movsb
push
in
sub
ret
jmp
jb
xchg
testb
dec
movsb
and
mov
push
xor
jmp
pop
roll
shll
lahf
cmpb
jmp
roll
mov
cmpsl
fisttps
push
mov
cmp
mov
inc
and
jmp
pop
mov
jns
push
fwait
push
jns
push
adcb
andb
loop
loope
jae
jbe
add
xor
jmp
subb
ficompl
jmp
jae
lea
jmp
test
lods
lret
inc
movsb
das
mov
push
xchg
add
jp
and
push
push
pushl
push
call
add
jmp
add
aaa
mov
rclb
and
push
je
mov
andl
jmp
fmull
push
fimull
inc
and
mov
push
push
push
push
push
push
jmp
in
je
lea
mov
pop
lret
pop
ds
jnp
push
push
jmp
seto
popa
nop
daa
ss
cmp
add
aas
les
xchg
outsb
jmp
sahf
pop
sti
ljmp
mov
jg
or
push
fisubrl
jns
jmp
loopne
andl
add
pop
pop
pop
ret
jmp
icebp
ja
xorb
js
mov
cmp
push
lds
adc
divb
call
pop
pop
pop
pop
ret
jmp
inc
push
xor
cs
sub
stos
and
push
arpl
push
push
push
push
mov
xor
xor
jmp
lret
inc
mov
out
cmpsl
aaa
push
mov
mov
es
mov
aad
add
add
scas
addr16
fs
jmp
rcrb
xchg
xchg
pop
aas
lret
xchg
or
push
xor
inc
sbb
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
push
push
mov
push
push
push
push
push
push
jmp
mov
mov
sbb
lods
cmp
mov
jecxz
mov
ds
pop
pop
jmp
mov
mov
les
pop
cmp
and
push
xor
sub
inc
mov
out
pushl
call
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
jmp
pop
rclb
xor
mov
mov
pop
pop
ret
jmp
pop
ret
ret
fisttpl
frstor
lea
add
sub
add
std
or
mov
push
lcall
mov
push
call
jmp
dec
ljmp
push
mov
push
push
pushl
call
add
pop
ret
jmp
inc
mov
fs
lea
jmp
test
mov
cs
int
aaa
mov
dec
mov
stc
push
shr
jmp
jb
pop
or
jge
or
inc
or
add
dec
fnstcw
add
jo
or
andb
call
in
sub
push
pushl
lea
call
mov
lea
cmp
ja
mov
mov
movzwl
jmp
xchg
pop
xchg
adc
out
lock
bound
mov
or
aam
and
rorb
inc
cld
jmp
sub
lret
mov
mov
pop
jp
jns
dec
mov
and
cmpb
jmp
mov
shlb
xor
inc
jecxz
std
test
fwait
addl
add
add
add
jnp
pop
leave
ret
jmp
mov
jmp
push
mov
js
jge
stos
cmp
inc
cmp
cmp
sub
sub
push
lds
pushf
jp
shr
in
sub
mov
mov
mov
shr
pxor
jmp
mov
mov
and
repz
cmp
add
add
pop
int3
stos
data16
data16
popa
add
push
jmp
inc
je
mov
andl
jmp
sbb
jg
movdqa
movdqa
movdqa
movdqa
jmp
push
enter
cmp
mov
js
aas
lahf
add
leave
scas
outsb
movzwl
jmp
aam
ret
cmpsb
push
in
cli
fs
popf
insb
lds
push
cld
dec
in
inc
xorl
movdqa
movdqa
lea
dec
jmp
pop
ret
ret
cmc
gs
dec
mov
mov
lahf
and
decl
adc
push
mov
sub
mov
mov
cltd
mov
xor
sub
and
xor
sub
test
jne
mov
mov
and
jmp
jnp
outsb
or
push
add
fs
push
in
or
fs
neg
add
jmp
js
mov
inc
lret
pop
ds
aam
mov
mov
cmp
jmp
mov
lods
out
loop
je
mov
xchg
repnz
cmp
fisttps
test
decl
pop
ret
jmp
or
bound
and
or
arpl
push
call
jmp
iret
inc
shlb
sub
push
sub
das
ljmp
adc
ret
clc
xor
mov
jmp
xchg
pop
xchg
repnz
divb
mov
gs
pushf
outsl
xchg
les
mov
mov
jmp
movsl
aaa
cmpsl
ret
popa
orb
inc
or
sub
adc
sarl
sbb
aaa
cmpsl
ret
dec
pop
pop
jo
mov
jmp
fildl
mov
idivb
add
je
lea
xor
add
lcall
mov
jmp
hlt
pop
testl
jmp
and
lea
xchg
adc
jg
xchg
and
rclb
cld
mov
mov
push
pushf
pop
mov
xor
push
popf
pushf
pop
sub
je
push
popf
xor
cpuid
mov
jmp
cmc
push
les
push
cmp
sbb
adcb
xor
outsb
push
mov
sub
jmp
in
sti
sahf
insl
mov
push
xor
sub
adcl
cmp
mov
movsb
pop
mov
jmp
hlt
jo
xorl
xchg
jge
push
test
push
cld
sub
xor
mov
pop
ret
jmp
sub
xor
mov
mov
mov
mov
cpuid
jmp
xor
xchg
sbb
lret
lret
or
scas
mov
xor
mov
mov
rep
mov
mov
mov
add
sub
push
push
push
call
add
mov
jmp
mov
ret
adc
jbe
push
cld
mov
jmp
xor
jmp
pop
int3
inc
and
inc
sub
jp
into
pop
cmp
adc
mov
push
pushl
pushl
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
andl
jmp
push
rclb
and
pushf
xor
dec
xchg
or
mov
push
add
push
xor
sub
dec
sub
ret
pop
leave
ret
jmp
lcall
jmp
fiadds
dec
mov
mov
xor
imul
call
test
je
xor
inc
jmp
mov
test
je
jne
inc
fimull
fisubl
test
jge
and
pop
out
mov
js
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
jmp
inc
cmpsl
mov
call
sub
jge
xchg
pop
bound
mov
filds
ds
call
add
jmp
out
fstpt
fidivrs
sbb
cmpsb
dec
jg
pop
ret
jmp
stos
das
cmp
push
mov
jmp
imul
push
popf
or
xchg
add
sahf
ja
sbb
pop
ret
jmp
stc
jle
mov
cli
or
sbb
jmp
xor
aaa
ret
push
lds
cld
jne
mov
je
xchg
cmc
add
push
mov
call
add
call
pop
jmp
adc
xor
dec
mov
scas
lret
xor
mov
fists
jne
test
je
mov
jmp
outsb
loope
adc
adc
pop
mov
pusha
notb
xor
push
push
call
pop
jmp
and
pop
orb
scas
push
je
jne
adcb
loop
fcoml
jecxz
inc
rorb
pop
pop
ret
jmp
mov
push
mov
mov
test
je
sub
cmpl
jmp
sub
and
pushf
stc
push
gs
pop
jmp
call
call
dec
je
push
call
pop
jmp
mov
call
adc
pop
push
shlb
inc
mov
cs
adc
sub
lcall
popl
add
cwtl
mov
and
pushl
mov
and
xor
fwait
cli
add
mov
call
add
call
pop
jmp
sbb
enter
sub
lcall
mov
jl
dec
aad
sub
push
pop
xchg
repnz
dec
js
xchg
mov
lcall
push
decl
mov
jmp
add
gs
jp
jge
je
add
inc
and
xchg
mov
call
add
test
pushl
test
int3
ja
gs
sbb
xchg
add
jo
sub
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
jmp
jg
mov
pop
fimuls
or
jns
jmp
fs
mov
movb
inc
jmp
lcall
jmp
lea
jmp
mov
shlb
push
xor
data16
xor
scas
gs
cmp
inc
dec
jne
push
call
pop
jmp
mov
mov
push
mov
mov
push
xor
push
push
cmp
je
mov
cmp
ja
jmp
pop
xlat
inc
and
cmp
mov
xchg
je
dec
fstpt
dec
dec
dec
add
test
cld
call
shll
lcall
out
pushl
int
call
push
pop
mov
push
push
push
push
push
call
jmp
aam
aam
dec
cmpsb
push
xchg
add
pop
iret
pop
cmp
jo
jmp
test
jbe
lcall
nop
std
call
inc
aam
dec
lea
jmp
jl
js
ljmp
pop
shll
scas
dec
mov
cwtl
or
add
add
popa
add
sbb
add
jne
je
test
xchg
adc
lds
fwait
add
mov
sbb
test
add
gs
add
jg
jmp
mov
jecxz
cs
pop
pop
pop
ret
jmp
push
insl
jnp
mov
push
mov
jmp
les
scas
pop
repz
mov
jne
out
inc
outsl
repnz
pop
repnz
cmp
inc
or
add
mov
pop
test
je
mov
push
mov
mov
movb
pop
jmp
lret
mov
push
mov
cmp
jne
lea
jmp
inc
out
adc
push
or
mov
mov
push
call
xor
mov
mov
push
push
jmp
jbe
imul
sbb
inc
scas
xor
gs
adc
or
add
add
cmp
dec
xchg
adc
inc
xor
jmp
sub
inc
dec
ret
mov
in
sbb
sti
xor
push
push
push
call
add
rolb
rcrb
pop
rolb
sarb
sub
xor
pop
cld
incl
cmp
jne
je
push
popa
in
bound
aad
aaa
je
mov
jmp
inc
aam
sub
notb
imul
pop
inc
mov
clc
add
test
ret
je
cmp
jne
jmp
xor
outsl
mov
mov
cs
add
or
pop
sbb
mov
add
sbb
pop
int
and
jb
outsb
cld
fwait
jbe
lcall
adc
sbb
stos
es
ljmp
pop
mov
mov
jmp
lea
test
push
test
push
push
pop
mov
jmp
or
xchg
testb
cmp
mov
int3
add
add
idivb
pop
sbb
aam
add
xchg
jns
jbe
loopne
push
push
cld
push
inc
ss
add
jmp
xchg
or
fisttpll
out
cmp
pushf
lods
lret
inc
rcrl
pop
cmp
shr
add
add
jle
call
loop
arpl
xchg
test
jb
pusha
into
call
add
sarb
and
mov
loopne
adc
add
jge
je
insb
pop
fisttps
flds
and
push
std
mov
cmp
ja
lea
cmp
ja
call
jmp
add
pushf
xor
dec
push
lods
imul
je
jne
popf
adc
testb
aas
out
cmc
push
call
jmp
ret
mov
cmc
pushf
outsl
andl
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
je
jne
dec
fidivrs
mov
ljmp
stc
jne
mov
mov
mov
jmp
test
fcomps
inc
es
mov
ja
fsubr
pop
jmp
mov
dec
mov
lea
push
jmp
mov
cwtl
sbb
add
push
out
out
jo
push
inc
mov
mov
cmp
je
movl
jmp
inc
rolb
sarb
scas
xchg
mov
xchg
mov
add
inc
es
fisubs
add
jmp
loop
in
jg
setnp
outsb
popf
push
adc
xchg
jb
es
pop
cmp
je
movl
jmp
sbb
add
insl
and
jmp
insl
hlt
push
cld
inc
mov
mov
adcl
test
pop
sub
test
jns
add
dec
xlat
inc
and
jbe
je
lea
orb
fdivrl
mov
add
js
in
bound
fdivrl
add
gs
pop
pop
pop
mov
xor
jmp
movl
pop
mov
shll
sbb
into
add
add
push
shlb
jae
pusha
lds
mov
test
call
mov
pop
jmp
jecxz
jne
je
stc
jno
xorb
out
jg
jmp
lds
andl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
add
bnd
mov
mov
sarl
fstps
dec
sub
movsl
aas
pushl
call
pop
cmp
jmp
adc
xor
xor
scas
inc
or
addr16
mov
mov
mov
jmp
push
xchg
add
sahf
cmp
dec
ret
xchg
dec
fdivl
in
and
mov
pop
mov
mov
jmp
adc
sbb
test
add
push
push
jmp
push
out
mov
mov
and
sbb
mov
mov
cmp
je
mov
mov
inc
inc
cmp
je
dec
jne
jmp
pop
mov
jmp
dec
aam
sub
fnstcw
iret
stos
pop
fadds
das
fidivl
lea
push
pushl
push
pushl
call
mov
add
cmp
je
mov
jmp
dec
rolb
shlb
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
call
add
cmpb
je
mov
andl
jmp
xor
push
leave
pop
cmp
jle
mov
js
push
push
lds
jmp
fnstcw
jp
pushf
push
mov
es
sub
call
in
sub
call
xor
jmp
pop
test
jge
push
ljmp
xor
scas
dec
ja
sar
out
call
leave
ret
jmp
and
cmp
mov
push
push
xor
push
mov
jmp
xor
jb
fs
adc
jnp
mov
fldcw
pushl
pushl
pushl
pushl
pushl
call
add
test
call
test
lcall
lcall
adc
shlb
movsl
es
push
xor
es
out
mov
add
add
add
jnp
in
or
test
int
cld
incl
jmp
movsb
sub
aas
mov
dec
mov
out
sbb
adc
mov
adc
inc
adc
sbb
insb
add
mov
rclb
lock
fs
mov
sub
dec
cmp
jge
inc
jmp
xchg
add
daa
mov
and
lods
inc
shll
ret
cmpsb
push
nop
mov
inc
adc
dec
xchg
les
lock
jmp
hlt
lock
bound
out
mov
mov
pop
inc
cmp
jne
or
jmp
je
cmp
je
jne
jl
jg
jmp
inc
hlt
rorb
mov
add
cmp
jmp
mov
and
enter
cs
inc
mov
insb
or
scas
rolb
inc
add
add
add
jmp
or
test
pop
clc
cmp
jmp
xchg
or
in
mov
inc
adc
cs
pop
daa
pop
cmp
jne
push
push
xor
inc
push
push
push
push
call
add
decl
adc
mov
sub
lds
fidivs
mov
mov
mov
jmp
out
subl
setne
pushl
lea
jmp
in
cmc
pushf
outsl
mov
adcl
or
or
lods
dec
call
add
sarb
and
cwtl
push
mov
es
fistpl
test
and
jp,pt
lods
gs
shr
add
add
dec
sub
xor
js
ljmp
add
add
hlt
jmp
or
sbb
inc
cli
jno
xorb
fdivl
in
sbb
out
pushl
call
mov
cmp
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
jne
jg
add
adc
push
mov
aam
shll
lcall
ret
je
jne
test
shll
jne
jnp
in
dec
lds
adc
call
mov
testb
or
cmpsb
inc
popf
or
add
jmp
inc
rolb
sarb
ljmp
dec
fidivrs
or
sub
sbb
add
fldl
add
lds
xchg
gs
clc
lahf
push
cmp
xor
or
mov
inc
mov
shrl
add
xor
pop
hlt
je
jne
ss
cmp
add
jne
mov
cwtl
cmp
inc
add
inc
movl
jmp
test
ret
push
pushl
call
mov
pop
jmp
xchg
xor
repz
and
test
mov
sbb
jg
add
add
add
pushl
pushl
push
pushl
call
test
je
call
add
push
pushl
pushl
jmp
shrd
mov
fbld
xchg
gs
xor
inc
and
add
inc
hlt
jmp
xchg
inc
pushl
call
mov
mov
cmp
je
testl
je
jne
addb
testl
inc
mov
movsl
and
xchg
adc
pop
jne
jmp
xor
xor
jne
push
pushl
pushl
pushl
call
jmp
out
outsl
push
mov
sub
cmp
mov
jne
stos
pop
add
add
je
lea
loop
pop
loop
insl
cmp
je
cmp
jg
pushl
jmp
pop
fisttps
mov
std
or
pushf
adc
push
cmp
jle
push
xor
pop
div
cmp
jb
lea
jmp
stc
ja
xorb
jle
mov
xorb
pop
xor
jmp
jl
pushl
jmp
outsb
out
adc
or
adc
fwait
push
test
push
ljmp
sbb
lcall
ret
je
movl
add
jmp
gs
gs
adc
leave
and
jl
jne
and
fstpt
repz
jne
insl
cld
xchg
cmc
add
jle
jle
call
push
jecxz
or
clc
add
add
call
mov
cmp
je
movl
add
jmp
aaa
mov
hlt
inc
mov
or
pop
bound
cmpsb
xor
and
mov
gs
and
lock
jbe
push
loopne
jp
xchg
es
test
xchg
lock
or
push
add
nop
jbe
fwait
push
push
pushl
pushl
pushl
jmp
push
leave
pop
cmp
pusha
and
cmp
or
test
add
add
mov
jmp
lcall
mov
jg
and
pop
lret
scas
pop
in
mov
sbb
jne
jmp
pop
jmp
shll
xorb
adc
push
shlb
pop
ljmp
incl
test
je
push
push
cmp
jne
push
push
jmp
mov
imul
and
test
mov
add
add
add
xchg
push
and
push
push
pushl
call
add
lcall
dec
das
fidivrl
push
adc
xlat
lea
pop
pop
pop
jmp
xchg
popf
sbb
mov
dec
mov
fisttpll
incl
jne
jmp
or
je
addr16
push
orl
icebp
jp
jp
push
mov
mov
jmp
jnp
sbb
pop
jmp
cmp
jbe
sub
inc
mov
rolb
sbb
push
jmp
cmc
jg
mov
sti
jbe
cmpl
rolb
sarb
push
das
push
push
and
mov
mov
mov
jmp
pop
cmp
jmp
push
lret
pop
ds
inc
aam
sub
in
jg
and
sub
pushl
jmp
jmp
roll
mov
movsb
pop
lret
or
mov
add
cmp
ja
jbe
mov
aad
int3
cmp
sysret
mov
and
sbb
je
call
add
pushl
push
pushl
pushl
call
mov
cmp
jne
xor
jmp
stc
lock
aam
into
cltd
push
add
mov
sbb
popf
add
adc
add
jg
jmp
cmp
je
jne
fmull
mov
bound
mov
xchg
je
push
push
lea
push
pushl
push
pushl
call
jmp
test
stos
int
xchg
adc
or
push
xchg
int
jne
pushl
pushl
pushl
pushl
pushl
jmp
add
sub
xchg
dec
enter
or
cmp
je
jne
iret
dec
frstor
push
mov
cmp
aas
inc
inc
adc
ss
lcall
ret
je
movl
add
jmp
xlat
push
mov
loopne
jb
mov
pop
pushl
push
push
call
add
pushl
jmp
lret
dec
fdivrl
lret
scas
pop
mov
test
sub
add
add
adcl
test
das
mov
adc
mov
jmp
ss
or
sbb
jne
pushl
pushl
pushl
call
mov
jmp
xchg
sahf
stc
or
adc
dec
aad
into
test
push
rclb
sub
mov
jno
lea
fs
add
cmp
ja
call
mov
cmp
je
movl
add
jmp
sbb
xor
xchg
jb
dec
jns
jge
notl
cmp
jmp
imul
jle
js
ljmp
pop
jmp
out
jno
jmp
jmp
pushl
jmp
xchg
push
pushf
sti
push
mov
jns
repnz
test
push
outsl
mull
icebp
push
cwtd
jne
xor
jmp
adc
sbb
ds
mov
xorb
xchg
test
mov
sbb
loope
lds
stos
pop
into
jmp
lret
add
sbb
jo
call
pop
jmp
dec
in
bound
push
xor
sbb
out
jns
mov
mov
dec
rcll
cmpsl
push
mov
outsl
or
sti
pushl
push
push
call
add
or
jmp
xchg
sbb
jae
xchg
in
outsl
lcall
xchg
adc
cmp
inc
jmp
call
jmp
divb
xorb
xchg
mov
fdivrs
cmp
add
mov
add
cmpsl
sub
mov
sarb
mov
ficoml
les
push
call
add
loope
cld
incl
jmp
cli
jbe
cmpl
roll
aad
mov
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
movl
jmp
aaa
movsb
cmp
pop
xor
fisttpll
push
xchg
sahf
leave
ret
jmp
mov
mov
sbb
lea
lock
jne
push
call
pop
mov
push
call
pop
mov
cmp
je
mov
jmp
adc
test
jge
fs
xchg
rep
lcall
jne
call
add
cmpb
je
mov
andl
jmp
loope
call
lret
lret
mov
gs
sub
fdivr
pmaxsw
in
dec
mov
in
out
out
mov
jo
bound
adc
ss
stos
xchg
mov
jmp
cld
pop
int3
stos
data16
pop
mov
jmp
sahf
inc
shll
adc
sub
lds
jo
add
adc
cld
call
cmp
jne
jmp
scas
sub
jp
xchg
cmc
add
hlt
jno
xorb
xlat
inc
and
xor
call
leave
ret
jmp
pop
lcall
mov
and
adc
and
and
jg
and
add
imul
hlt
call
pop
jmp
xchg
sbb
add
loopne
adc
add
mov
fsts
ret
jmp
push
lea
jmp
insb
push
xor
cmp
jmp
idivb
mov
leave
pop
leave
test
mov
xchg
add
mov
jmp
lret
scas
pop
std
rolb
call
in
sub
push
push
push
call
andl
cmpl
mov
jne
push
call
add
sbb
pop
enter
or
inc
and
xor
test
xor
shr
add
add
mov
jmp
sub
cmp
pop
repnz
fs
mov
fwait
int
mov
jmp
sbbb
jmp
pop
cmp
mov
mov
incl
push
jmp
sbbb
jmp
mov
mov
adc
mov
cmp
je
cmp
je
push
call
pop
jmp
sbbl
into
pop
cmp
push
repz
mov
cmp
je
jne
repz
mov
int3
stos
data16
jge
je
arpl
lock
mov
call
pop
pop
mov
test
je
test
je
call
test
je
lea
jmp
mov
mov
dec
fnstcw
xchg
repnz
repz
je
cmp
je
push
call
jmp
pop
cwtl
push
imul
fimuls
psadbw
test
je
push
call
call
add
push
mov
call
push
call
call
add
push
mov
call
push
call
call
add
push
mov
call
push
call
pop
mov
test
je
push
push
call
push
call
pop
mov
jmp
dec
push
call
pop
test
je
call
mov
test
je
mov
cmp
je
push
call
pop
test
jmp
sub
inc
leave
pop
cmp
outsb
aad
repz
gs
movsb
cmp
inc
test
add
add
push
mov
je
pushl
call
mov
jmp
adc
or
and
push
rclb
sub
pushl
call
pop
test
je
pushl
pushl
jmp
xchg
mov
sbb
lea
es
cs
test
test
je
testb
jne
jmp
xor
mov
gs
jle
aas
scas
lret
aaa
sub
or
pop
jmp
mov
xchg
sbbl
repz
test
add
add
pushl
call
jmp
mov
mov
int
and
push
lret
jl
cmp
jle
cmp
jne
call
jmp
test
xchg
fiadds
mov
clc
in
out
mov
fisttpll
xchg
call
add
insl
int
aad
dec
scas
sbb
cmp
insl
cwtl
mull
aad
jno
repnz
call
push
push
push
movl
jmp
ret
xchg
addr16
push
mov
mov
leave
std
movsl
and
xchg
adc
mov
jle
sti
cld
jge
je
arpl
in
les
in
jmp
jmp
xchg
pop
fdivl
in
jg
outsl
or
out
xor
push
push
lea
push
push
jmp
daa
mov
bnd
mov
mov
lods
lret
inc
movsb
dec
rol
lock
jmp
pop
mov
outsl
push
jmp
lods
es
mov
jnp
in
and
fistpl
inc
out
aaa
pusha
or
cld
mov
mov
mov
mov
shr
jmp
pop
xchg
pop
bound
ljmp
jge
cmp
call
sbb
stos
adc
ret
mov
scas
lret
sub
ror
movdqa
jmp
insl
std
test
movsl
xor
dec
frstor
mov
incl
jmp
pop
jp
movdqa
movdqa
jmp
aas
test
xchg
add
jns
mov
ret
leave
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
jmp
push
xchg
add
and
addr16
fildl
mov
std
mov
js
cld
incl
mov
jmp
sub
jmp
loop
adc
sub
push
mov
inc
jmp
mov
jmp
out
jb
xchg
dec
jmp
push
lock
ja
insb
loop
je
fbld
jg
push
movdqa
movdqa
lea
lea
dec
jne
mov
mov
mov
pop
ret
jmp
dec
enter
add
fnsave
jge
mov
iret
jne
je
pop
fmuls
fdivrs
setg
or
cltd
mov
jge
mov
mov
mov
mov
cltd
mov
mov
xor
sub
and
xor
sub
cltd
mov
xor
sub
and
xor
sub
mov
or
jne
mov
mov
jmp
test
jle
push
inc
shlb
test
add
add
cltd
or
jnp
jle,pn
add
add
dec
or
dec
in
push
or
push
in
inc
adc
inc
in
push
push
call
add
mov
jmp
cmp
inc
and
jmp
jno
push
std
insl
hlt
pop
into
inc
iret
pop
cmp
cmp
mov
rcll
dec
in
jne
mov
mov
rep
jmp
int
shlb
sahf
stc
or
and
repnz
notb
jne
mov
mov
mov
shr
rep
mov
and
rep
mov
jmp
andnps
push
pushl
call
xor
push
lea
mov
mov
mov
jmp
mov
mov
sbb
ljmp
dec
fistpll
int
in
in
rorb
je
cmpl
jmp
mov
lret
cs
push
xchg
add
jp
cltd
shll
pop
cld
mov
mov
mov
pop
ret
jmp
mov
xchg
ret
dec
and
jmp
or
insb
sbbb
ljmp
stos
add
into
test
je
mov
mov
add
sub
mov
add
sub
mov
mov
mov
mov
rep
mov
jmp
add
jne
push
xchg
add
das
mov
gs
pushf
outsl
jns
mov
lea
jbe
or
mov
mov
cmpl
jne
push
mov
jmp
push
enter
jg
or
inc
aad
dec
lret
in
sub
jbe
jmp
outsl
sbb
jmp
mov
test
cmp
jbe
inc
aad
dec
mov
adc
mov
add
add
add
add
call
mov
call
jmp
add
jmp
gs
sbb
cmp
pop
into
test
ds
test
sbb
xor
inc
mov
add
add
fnop
push
les
ja
loope
inc
rcll
das
cmp
and
mov
cmp
je
sub
push
push
push
call
add
mov
mov
jmp
and
cmpsb
xor
scas
dec
dec
pop
pop
pop
ret
jmp
fnclex
mov
mov
sub
pushl
lea
jmp
jp
addr16
pop
cld
je
lea
stos
cmp
inc
ficompl
and
jmp
ljmp
add
or
call
lahf
adc
mov
push
push
call
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
jmp
adc
iret
arpl
xchg
mov
fs
or
xor
jne
push
push
pushl
pushl
call
mov
mov
add
neg
sbb
and
jmp
mov
push
jmp
sbb
add
xor
ficoml
push
cmp
das
dec
push
pop
xchg
add
add
stos
cmp
inc
sbb
outsb
stc
imul
dec
cld
xor
call
leave
ret
jmp
pop
rclb
xor
inc
loopne
inc
add
add
bound
dec
sub
arpl
cmc
dec
mov
xchg
push
pushl
pushl
push
pushl
jmp
xor
movsb
cmp
push
les
call
in
xor
add
xor
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
push
xor
mov
mov
mov
cmp
je
call
add
call
call
add
jge
add
test
decl
jne
call
test
je
cmpl
jne
mov
movl
cmp
jne
pushl
jmp
jp
dec
sub
pop
icebp
push
shlb
shll
hlt
cmp
jle
cmp
ja
lea
cmp
jmp
mov
xor
mov
add
lea
push
call
pop
jmp
movl
fisttpll
add
add
pop
int
mov
insb
push
push
pushl
call
jmp
sti
jl
jne
fs
push
shlb
ret
xor
and
jmp
sub
dec
jle
imul
pop
fstpl
scas
pop
nop
daa
call
mov
pop
inc
jmp
sub
xchg
icebp
add
lods
xchg
stc
or
shr
mov
add
add
repz
jp
clc
jbe
cmpl
das
inc
call
mov
cmp
jne
xor
jmp
dec
push
xor
sub
cli
rcrb
call
add
add
neg
ret
pop
add
jmp
xchg
sbb
dec
fistpll
aam
dec
mov
cmp
je
movl
jmp
sbb
xor
popf
or
adc
or
lea
pop
pop
jmp
ret
mov
dec
sub
lods
lret
inc
mov
pop
or
add
add
xchg
or
cmp
cmp
add
sub
call
add
stos
sbb
cld
incl
cmp
jmp
jbe
jg
jmp
and
sti
push
mov
mov
cmp
je
push
push
pushl
push
jmp
jne
inc
sub
pop
mov
mov
ja
jo
popa
add
pop
mov
test
popa
add
add
pop
into
test
push
xor
and
cmc
and
pushl
push
pushl
jmp
dec
lret
lret
movsl
xor
sbb
ficoml
inc
cmp
je
lea
push
push
pushl
call
add
push
pushl
pushl
pushl
jmp
aaa
ret
push
lds
mov
popl
roll
mov
jmp
mov
idivl
mov
popf
xchg
call
cmpsb
test
je
mov
jmp
push
xchg
jb
insl
out
inc
es
insl
test
repnz
add
jbe
ljmp
jle
call
cmp
lcall
les
je
movl
jmp
dec
fimuls
adc
or
push
xor
ja
jbe
add
sbb
pop
iret
stos
pop
testl
in
or
test
pushl
lds
lea
push
push
pushl
movb
call
add
cld
incl
sti
ljmp
out
pop
jmp
pop
mov
jmp
inc
inc
and
jns
roll
aad
xchg
push
pushf
sti
push
mov
sub
add
add
and
lret
scas
pop
in
movsb
cmpl
je
mov
mov
jmp
pop
xchg
adc
gs
xor
call
leave
ret
jmp
jl
cwtl
sahf
imul
call
jmp
stos
xor
sbbl
jmp
xchg
xchg
aaa
cmpsl
ret
jg
rorb
lock
cmp
jb
mov
pop
xchg
mov
mov
ret
jmp
out
push
ret
cmpsb
push
aam
mov
dec
pop
daa
test
jmp
mov
sahf
stc
or
fcomps
test
mov
jle
inc
ret
ret
jne
push
push
push
push
push
pushl
push
pushl
call
mov
cmp
je
jmp
mov
mov
in
adc
mov
push
push
mov
mov
shr
jmp
adc
std
jp
jp
xchg
sbb
mov
jecxz
jecxz
fs
jmp
sbb
pop
xchg
add
jno
dec
fstpt
mov
and
dec
mov
incl
add
lock
jne
je
dec
push
xor
and
fs
sbb
cmc
popa
sub
jg
lcall
mov
cmp
je
push
push
push
push
push
pushl
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
pusha
in
bound
jl
testb
xor
movsl
movzwl
jmp
cmpsb
xor
int
aam
push
lahf
push
test
mov
sbb
nop
add
jmp
mov
es
inc
mov
std
push
lahf
push
pop
jl
leave
ret
jmp
mov
push
jbe
pop
iret
pop
cmp
aas
mov
cltd
xchg
push
pushf
sti
push
out
ds
add
sub
jmp
outsb
sti
imul
dec
test
cmpsb
shll
sbb
xor
mov
shl
icebp
movzwl
mov
jmp
dec
cmp
mov
adc
add
test
jge
cmp
addr16
push
jno
bound
add
add
inc
mov
mov
lahf
sub
cmp
mov
sbb
clc
sub
cmp
jbe
decl
jmp
xor
jnp
imul
pop
int
and
push
lods
cmp
add
int
mov
mov
jmp
xchg
adc
or
lds
mov
mov
sub
incl
jmp
movsl
daa
mov
and
push
mov
sbb
leave
int3
add
add
movzwl
imul
imul
or
sub
sub
cmp
jbe
ja
mov
and
push
xchg
push
subl
jmp
rcrb
test
fs
pop
and
add
xor
lea
jmp
and
cmpsb
sub
pop
xlat
inc
and
cmp
icebp
and
call
sub
mov
pop
xchg
add
data16
push
pop
mov
shl
jmp
jmp
xchg
xchg
push
xchg
repz
sti
std
jae
xchg
mov
sub
lret
add
add
inc
hlt
jne
movzwl
jmp
das
cmpsb
mov
shr
sub
test
ja
jne
je
clc
outsl
lcall
lahf
cli
or
add
add
jnp
scas
decl
jmp
in
mov
jge
or
sub
cmp
jmp
fisttps
mov
cmp
or
das
mov
xchg
outsb
movzwl
movzwl
shl
pop
add
mov
pop
jmp
sbb
cmp
mov
xchg
dec
or
mov
shl
or
sub
sub
cmp
jbe
decl
jmp
test
movsb
ret
ds
xlat
dec
fidivrs
adc
mov
aad
cmp
jb
jmp
movsb
aas
scas
lret
jbe
dec
sub
cmpsb
shll
aas
ret
push
lds
and
div
movzwl
jmp
xor
sbb
xor
scas
aas
pop
test
int
fisubs
hlt
jb
xchg
ret
inc
fidivrl
xor
dec
divl
xchg
cltd
inc
xorl
jmp
jge
leave
je
mov
pop
leave
ret
jmp
scas
movzwl
push
mov
push
mov
shr
shr
jmp
popf
adc
pop
aad
sub
jp
mov
inc
mov
add
mov
or
mov
movzwl
mov
imul
imul
mov
mov
shl
or
sub
sub
cmp
jbe
decl
jmp
int3
shr
add
pop
ret
jmp
xor
cmpl
je
shrl
inc
cmp
jb
jmp
xor
fcoml
cmpsl
push
mov
sbb
aad
rcrb
fs
rorb
add
pop
mov
pop
cmp
jae
incl
jmp
iret
jnp
jmp
cld
lea
jmp
xchg
sbb
aad
shrb
mov
pop
xchg
or
imul
mov
movzwl
imul
imul
mov
imul
mov
imul
add
mov
mov
cmp
jae
add
mov
jmp
js
push
lds
cltd
or
mov
push
popa
nop
jns
inc
addl
add
divps
ret
jmp
std
jae
xchg
aaa
cmpsb
xor
scas
insl
and
xchg
loopne
and
xor
jmp
dec
fimuls
or
add
cmp
mov
jecxz
clc
outsb
or
or
cld
add
add
add
xchg
add
add
lock
lods
lret
inc
out
push
lret
lret
inc
push
mov
sub
cmpl
push
mov
jmp
jne
jns
jmp
leave
push
les
sbb
in
sbb
pop
push
mov
jmp
xor
jb
inc
and
pop
fcomps
scas
pop
mov
cmpsl
push
adc
mov
lea
pushl
lea
pushl
call
mov
jmp
test
xchg
repz
call
xor
and
pushf
sbb
sub
push
mov
mov
jmp
movl
cli
fstps
xor
mov
jmp
in
xchg
leave
sub
neg
cmp
jbe
ja
loopew
adc
bndstx
ficoml
mov
pop
cld
or
sub
pop
cmp
mov
sbb
mov
sub
or
pop
mov
jmp
add
xor
cmp
or
je
call
or
ret
push
clc
jmp
js
fs
sbb
push
xor
sub
sub
pop
jge
mov
jmp
rorl
mov
lea
repz
cmc
push
jmp
loop
add
add
decl
mov
jmp
xchg
add
inc
aad
dec
mov
dec
sub
cmp
mov
sti
decl
mov
or
enter
movzwl
and
cmpb
je
mov
andl
jmp
sbb
aas
push
mov
sub
cmpl
push
mov
jne
je
ficoml
cmpsb
push
mov
cmpsb
dec
cld
outsl
lcall
pop
aas
lret
andl
jmp
rcrb
pop
out
in
jnp
mov
sbbb
ljmp
test
pop
jmp
rcrb
iretw
cwtl
cltd
lods
sbb
aaa
xor
jmp
movsl
std
cmp
into
pop
cmp
sbb
sbb
push
add
add
add
add
and
adc
popf
sub
sbb
pop
leave
ret
jmp
rcrb
xchg
xchg
jg
mov
jmp
loopne
inc
push
outsl
cmpsl
jmp
in
jns
xor
jmp
adc
inc
in
sbb
push
aad
sub
or
push
sti
xor
mov
add
jmp
lock
or
inc
sti
call
dec
frstor
push
movsb
adc
ret
jmp
sub
loope
lea
jmp
mov
or
xor
aas
add
add
in
jmp
dec
imul
stc
imul
insl
ret
mov
push
push
js
mov
lea
jmp
xor
jmp
les
pushf
outsl
ljmp
stos
mov
cmpl
jne
jmp
sub
ljmp
mov
cmp
jmp
scas
mov
sub
add
rcll
mov
jne
out
jge
inc
jmp
cmp
push
lds
xor
adc
sti
jmp
jle
jp
pop
ljmp
add
jmp
enter
push
mov
nop
jns
push
les
or
jmp
xor
pop
sti
ljmp
cmpsl
aaa
push
mov
pop
loop
jle
cmp
jb
dec
sub
jmp
or
pop
push
jmp
idivl
je
dec
test
insl
mov
lock
jge
push
cld
adc
and
pop
or
orb
jmp
inc
add
xchg
add
xor
divps
dec
sub
xor
fucomip
add
add
add
push
mov
jmp
out
insb
mov
lods
pop
sti
jmp
aad
leave
test
mov
push
inc
pop
leave
ret
jmp
test
push
push
push
push
push
push
jmp
out
jmp
lods
and
cli
push
notb
sub
andl
push
mov
dec
js
jns
rcrl
fs
rcll
push
mov
push
movsl
jl
bound
inc
cld
jmp
lret
test
lcall
arpl
push
cld
push
imul
adc
jmp
push
les
int3
and
rolb
shlb
gs
pushf
outsl
pushf
cmp
mov
sub
push
lea
mov
jmp
fs
inc
clc
jmp
or
dec
fisttpl
fnsave
out
adc
push
leave
push
lds
pop
pop
ret
jmp
jp
jnp
in
pop
scas
xor
push
lds
dec
or
ret
or
mov
mov
mov
shl
neg
sbb
sub
and
dec
mov
test
jge
pop
jmp
dec
jmp
mov
and
mov
inc
ljmp
sar
jmp
and
jge
jmp
push
inc
and
cmp
push
xor
cs
jno
jecxz
sti
cmp
jmp
cmp
mov
das
test
faddp
cmpsb
xor
jge
jmp
xor
scas
sub
xor
loopne
icebp
sub
andl
test
jbe
push
mov
sub
mov
mov
mov
jmp
scas
es
cs
add
out
pusha
notb
and
mov
sti
jmp
ljmp
scas
cmp
mov
pop
enter
and
aam
rorb
add
add
fbstp
push
mov
push
xor
test
jmp
aam
fidivrl
shlb
xchg
testb
sub
stos
push
xchg
ret
or
mov
mov
mov
shr
neg
sbb
add
and
decl
mov
jne
pop
jmp
fidivs
push
push
mov
push
mov
sub
jmp
clc
insb
loop
je
add
add
pop
cltd
cli
jmp
jmp
out
mov
push
push
push
xor
jmp
mov
mov
imul
cli
push
mov
sbb
leave
ret
jmp
scas
mov
or
jmp
sub
or
test
mov
sbb
lret
sub
mov
mov
or
sub
sub
cmp
jbe
or
sub
jmp
nop
xor
out
stc
dec
cmp
jmp
inc
rcll
adc
push
mov
jbe
cmpl
xlat
inc
and
cmp
fdivrs
fstps
shl
jmp
mov
rcr
mov
jbe
test
jl
jge
cmp
inc
shll
pop
bound
sarb
or
add
add
imul
mov
nop
testl
pop
pop
pop
ret
jmp
xor
aas
mov
dec
mov
pop
test
or
add
add
xor
jmp
test
cwtl
decl
out
xchg
and
mulb
pop
sbb
dec
jle
jmp
mov
roll
mov
test
dec
mov
loop
cmp
leave
jmp
fisttps
mov
notb
mov
pop
leave
test
mov
mov
add
decl
jne
pop
pop
pop
jmp
mov
mov
push
cmp
sbb
dec
int3
push
les
pop
cmp
popa
and
push
ret
test
inc
cmp
jb
jmp
insl
hlt
push
cld
inc
or
mov
jl
popf
jb
xor
jmp
mov
leave
mov
mov
shr
add
mov
dec
test
jge
jmp
push
mov
xor
jmp
xchg
push
pushf
sti
push
mov
repz
shlb
xorl
xchg
push
cmp
movb
hlt
mov
jne
pop
pop
jmp
int
frstor
mov
rol
aas
pop
cmp
jae
push
jmp
popa
out
adc
push
ret
inc
shlb
outsl
or
out
dec
xchg
xchg
push
test
jl
xor
xor
cmp
jae
mov
movzbl
shl
add
or
dec
test
jge
jmp
pop
ret
jmp
dec
ljmp
jmp
jmp
loop
je
mov
stos
insl
call
orl
mov
inc
cmp
jb
jmp
les
mov
fnstcw
sub
lea
xor
jmp
and
inc
lret
lret
je
lea
std
push
js
inc
lock
ss
arpl
jge
negl
sbb
sub
pop
pop
leave
ret
jmp
lret
test
adc
mov
test
adc
adc
add
dec
fimuls
and
cld
push
jo
jne
out
pop
xchg
pop
fisttpll
and
add
push
push
mov
mov
push
call
mov
pop
test
je
push
pushl
call
add
push
pop
sub
mov
test
jbe
mov
xor
lea
rep
jmp
das
mov
sub
das
dec
mov
xchg
outsb
lahf
or
je
das
loope
xrelease
js
mov
lea
jmp
repz
jns
ja
loope
jne
bound
push
rorl
shr
or
add
outsb
cld
fwait
jbe
sbb
cld
pusha
notb
push
call
pushl
mov
mov
mov
lea
call
pop
pop
test
jbe
ja
mov
xchg
jno
inc
and
push
andb
shlb
test
sti
addl
inc
lcall
pushf
xor
jo
inc
fidivrl
mov
push
xchg
adc
push
mov
lea
call
pop
test
jl
jmp
push
mov
lea
jmp
outsb
in
jge
notl
add
out
notb
pop
ljmp
fmuls
mov
jg
fs
or
out
fs
popf
insb
mov
mov
movsl
out
std
test
cmp
mov
idiv
jmp
lret
mov
scas
push
fimull
fidivrl
mov
add
xor
dec
lock
mov
sub
sub
cmpl
jge
jmp
xor
pushl
mov
lea
push
mov
call
pop
pop
pop
jmp
push
mov
lea
push
mov
test
jbe
mov
xor
lea
rep
jmp
xor
test
jmp
sbb
movsl
das
mov
out
jg
jmp
or
call
jne
mov
mov
mov
call
sub
cmpl
pop
pop
jne
je
pushl
xchg
push
mov
add
cmp
inc
push
lea
lea
push
call
pop
pop
jmp
pop
pushl
push
jmp
enter
pop
movsb
pop
pop
jp
jne
jo
xorl
push
mov
sub
pushl
lea
jmp
xchg
and
cli
out
jp
jp
push
pushf
xor
push
add
jmp
and
jmp
dec
rolb
shlb
and
aaa
mov
mov
sub
pushl
lea
pushl
pushl
pushl
push
mov
call
add
leave
ret
jmp
xlat
dec
fistpll
popf
cs
push
mov
sub
jmp
insb
icebp
popa
add
inc
dec
xlat
inc
and
jbe
pop
imul
jmp
mov
mov
adc
mov
jmp
fs
popf
insb
jmp
jle
mov
add
and
cmc
call
jne
lea
push
lea
push
pushl
call
add
leave
ret
jmp
inc
rcll
daa
lret
dec
fnstcw
jb
in
add
xchg
pushl
lea
pushl
mov
push
lea
push
call
pushl
lea
pushl
push
lea
jmp
mov
stos
into
cmp
mov
or
jo
lock
or
lret
lea
rep
jmp
pop
dec
xor
call
add
test
jmp
dec
ret
mov
xor
outsb
cld
fwait
jbe
rorl
dec
cmpsb
loope
xchg
jge
mov
lea
rep
jmp
cmp
arpl
inc
clc
jmp
xchg
sahf
stc
or
jl
add
sbb
and
sub
sbb
push
inc
jbe
mov
xor
lea
rep
jmp
add
xchg
or
adc
sarb
adc
sub
mov
loope
jae
popa
mull
icebp
pop
lods
mov
inc
adc
test
incl
add
add
out
hlt
decl
mov
dec
fdivl
in
adcb
mov
nop
pop
pop
pop
leave
ret
jmp
daa
pop
roll
add
arpl
fs
pop
ret
pop
iret
stos
pop
xchg
jge
je
out
pop
xorl
jmp
es
adc
mov
mov
dec
dec
test
je
test
jmp
es
jp
je
out
inc
and
insb
mov
pop
cmp
jne
mov
test
jne
shl
jmp
inc
jmp
push
in
insb
inc
in
sbb
push
cmp
sub
cmp
pushl
mov
call
pushl
mov
mov
call
pop
pop
mov
test
jbe
mov
lea
lea
mov
sub
mov
pushl
mov
pushl
mov
mov
call
add
pop
add
add
decl
pop
jne
mov
jmp
outsl
in
jge
notl
rclb
and
xchg
mov
lret
jmp
shr
jmp
push
aam
sub
xchg
repnz
ds
push
test
decl
jns
jmp
cmpsb
sub
lds
test
inc
into
pop
cmp
sbb
lea
sub
lea
mov
mov
cmp
jne
mov
mov
jmp
les
cmpsb
push
mov
test
je
pushl
imul
lea
push
lea
push
push
jmp
xor
std
insl
hlt
pop
out
mov
outsb
mov
vmovntdq
decl
jne
jmp
push
rcll
push
pop
pop
leave
ret
jmp
sahf
adc
jge
je
insl
add
scas
cmp
cs
mov
pushl
lea
push
push
push
mov
call
pushl
lea
push
push
push
call
mov
shr
add
jmp
clc
outsl
lcall
sub
pop
test
lods
and
push
mov
test
jbe
mov
xor
rep
jmp
xchg
add
lds
iret
push
insb
mov
mov
and
mov
mov
and
xor
xor
lea
xor
mov
mov
xor
mov
mov
xor
mov
call
mov
mov
mov
shr
mov
and
mov
shr
jmp
dec
xlat
inc
and
cs
insl
hlt
pop
mov
dec
frstor
movzbl
shl
xor
movzbl
shl
xor
movzbl
shl
xor
movzbl
mov
movzbl
shl
xor
movzbl
movzbl
shl
xor
shl
xor
mov
mov
shr
mov
and
mov
xor
mov
shr
and
mov
and
mov
and
xor
mov
shr
movzbl
xor
jmp
push
inc
pop
iret
stos
pop
into
inc
fisttpll
out
aam
inc
loop
movzbl
xor
movzbl
shl
xor
movzbl
shl
xor
movzbl
mov
movzbl
shl
xor
movzbl
shl
xor
movzbl
shl
xor
movzbl
mov
jmp
movsb
cmp
sub
lock
shlb
xchg
decl
lea
rep
jmp
sahf
inc
shll
push
js
sti
xchg
cmp
adc
test
or
pop
pop
pop
ret
jmp
xor
xor
call
jmp
jge
insb
or
loopne
xchg
or
jge
jns
mov
sub
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
jmp
lods
sub
xchg
add
sahf
jle
dec
fidivrs
in
mov
and
mov
and
and
xor
mov
and
mov
shr
movzbl
xor
and
xor
xor
lea
xor
add
jmp
dec
enter
and
arpl
cmc
adc
jne
mov
aaa
loop
add
sti
incl
cld
lcall
pop
leave
ret
jmp
mov
jmp
clc
jo
xorl
xor
lock
mov
lea
adc
cld
jl
mov
jmp
xor
sahf
or
cmpsb
dec
loope
dec
cld
mov
movzbl
mov
add
mov
mov
shr
mov
and
mov
jmp
jmp
hlt
xchg
outsb
lcall
pop
int3
inc
and
clc
add
mov
decl
cmc
imul
insl
int3
sbb
mov
fmuls
movsb
push
mov
add
mov
test
jle
lea
lea
mov
mov
addl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
inc
shlb
and
adc
sbb
aad
aad
lret
loop
rep
jmp
pushf
add
ss
cmp
mov
or
and
and
clc
popa
jb
cmp
jbe
jmp
mov
clc
sub
clc
das
jne
jmp
jmp
aam
test
clc
fs
popf
insb
lds
xchg
add
mov
pop
add
inc
jmp
jp
dec
sub
pop
cltd
cmp
fisttpll
out
and
out
cmp
jb
cmp
jbe
jmp
lahf
jmp
rolb
add
jmp
shr
inc
daa
sarb
mov
iret
pushf
jp
add
jbe
or
jb
jae
lahf
sbb
aad
ret
dec
sub
pop
mov
stos
into
cmp
add
inc
incl
push
jmp
pop
lcall
jb
cmp
jbe
jmp
push
rolb
sarb
jmp
loop
je
and
ss
mov
out
cli
cltd
mov
cmp
jb
cmp
jbe
jmp
aaa
ret
push
lds
out
jecxz
jne
sub
lods
cmp
lea
incl
jmp
inc
xchg
sti
sub
and
push
push
fimuls
add
lret
lret
sarl
jle
cmp
jbe
jmp
je
jne
imul
adc
sbb
fdivrs
fists
bswap
mov
shr
mov
and
mov
and
xor
movzbl
mov
and
xor
movzbl
and
mov
and
xor
mov
mov
mov
mov
shr
mov
and
mov
and
xor
movzbl
mov
and
xor
movzbl
and
mov
and
xor
mov
mov
mov
mov
shr
mov
and
mov
and
xor
movzbl
mov
and
mov
and
xor
and
xor
decl
mov
jne
jmp
jo
jbe
loopne
xor
popl
iret
std
jmp
xor
call
fs
popf
insb
xchg
test
or
mov
add
adc
and
xor
movzbl
and
mov
and
xor
mov
mov
mov
jmp
mov
mov
fimuls
pop
inc
fimuls
push
loope
dec
and
xor
jmp
and
stc
imul
cmc
pushf
outsl
les
cld
lea
pushl
lea
pushl
call
mov
pop
pop
mov
add
cmp
mov
mov
sbb
add
neg
cmp
jae
inc
jmp
dec
roll
shll
pushf
xor
or
sub
cli
das
je
cmp
jne
jmp
cmp
jb
jae
sbb
loopne
adc
addr16
leave
cmp
jb
cmp
jbe
jmp
movsb
lret
mov
test
add
add
pop
add
add
jmp
lret
lcall
adc
push
rolb
shlb
outsb
out
jl
notb
lods
mov
cmp
jb
cmp
jbe
jmp
cs
mov
stc
sub
and
pop
into
test
push
lds
daa
mov
mov
jmp
dec
jno
sti
fdivl
stc
das
je
cmp
je
jmp
push
or
jmp
sbb
xchg
push
mov
les
mov
xor
jmp
dec
lret
pop
ds
sub
xlat
pop
iret
stos
pop
orl
hlt
cmp
jb
cmp
jbe
jmp
adcl
jb
insl
hlt
pop
icebp
movsb
cmp
inc
mov
inc
xor
cmp
jmp
rolb
mov
mov
sbb
mov
inc
mov
cmp
cli
popa
jb
cmp
jbe
jmp
add
ds
aas
pop
test
xor
sub
clc
sub
test
add
add
jmp
imul
and
xor
outsb
roll
aad
pop
inc
aad
add
adc
jbe
mov
sub
push
mov
sub
push
mov
mov
jmp
repnz
or
sti
popa
icebp
nop
arpl
aad
fdivs
cmp
ja
movzbl
add
jmp
in
xchg
testb
mov
pop
inc
xchg
pop
xchg
adc
fiaddl
add
fstpl
sbb
push
mov
xchg
lock
mov
sti
push
mov
sti
sub
test
ds
inc
fisttps
fsts
test
jge
or
mov
inc
mov
pop
inc
push
add
mov
jmp
adc
ficompl
stos
pop
subl
call
mov
add
add
int3
movb
inc
test
clc
das
jne
push
jmp
iret
dec
fidivrs
ja
sub
jmp
sub
ds
test
aas
mov
cmp
repz
ljmp
add
add
push
pop
into
test
loope
jae
and
roll
lcall
inc
and
xor
xor
and
pop
push
add
add
cmp
jmp
imul
dec
push
xor
sub
xchg
inc
movzbl
cmp
ja
add
jmp
mov
mov
and
or
xor
js
add
add
add
adc
sti
pop
jmp
dec
rcll
xor
mov
or
insb
in
mov
iret
sub
jmp
movsl
cmp
push
lret
lahf
mov
mov
and
mov
or
add
add
jp
jp
jno
jnp
in
add
jbe
loopne
lret
repz
jmp
add
test
sbb
sub
pop
push
scas
or
mov
add
inc
and
sbbb
ljmp
cli
sub
test
test
add
add
mov
or
ljmp
push
clc
jmp
iret
push
mov
and
add
rclb
imul
and
xchg
incl
inc
je
or
xchg
add
add
xchg
test
pop
test
add
imul
add
cmp
rolb
xchg
add
add
roll
add
push
jmp
cmp
test
xchg
repz
call
sbb
pop
lods
dec
or
dec
pop
jmp
out
cltd
clc
or
sbb
or
jne
inc
in
cld
fwait
jbe
stos
jmp
dec
add
add
mov
push
aas
jno
insl
subl
cs
mov
pop
lods
inc
dec
lcall
ret
test
jle
jp
jp
mov
popa
nop
jns
cwtl
jecxz
add
add
add
test
int3
test
lret
add
add
mov
inc
mov
nop
sbb
pusha
notb
jbe
loopne
clc
push
mov
add
add
les
stc
das
jne
push
jmp
mov
fbld
repnz
test
jbe
cmpl
aad
ljmp
lahf
adc
mov
mov
jle
sub
test
out
sbb
jge
movsb
arpl
add
add
cmp
movzbl
ja
sub
jmp
int
int
lea
push
or
shl
jmp
jmp
out
mov
dec
fdivl
in
fisttps
mov
in
cmp
ja
movzbl
add
jmp
loopne
cs
mov
adc
xor
pushf
inc
in
sbb
sub
add
add
add
lods
cmp
jae
xchg
and
leave
inc
repz
movzbl
ja
jbe
imul
or
mov
lret
popf
or
or
and
das
jne
push
jmp
into
inc
fidivrl
dec
mov
adc
or
xchg
insl
add
add
add
add
loop
call
add
mov
jmp
inc
or
pop
cmp
jb
shl
or
jmp
jge
mov
mov
shr
mov
cmp
jb
mov
shr
mov
jmp
xor
jmp
js
je
out
inc
dec
aam
sub
outsl
or
scas
dec
mov
cmp
jne
or
jmp
popf
add
cs
mov
lret
add
lds
ret
jmp
sub
adc
mov
dec
fdivrs
adc
xor
insl
pushl
aam
fldt
cmpl
jne
movzbl
or
jmp
rolb
inc
mov
adc
pop
xchg
jb
data16
jb
jge
jmp
movl
or
jg
mov
jne
insl
hlt
pop
out
push
push
push
mov
push
mov
shr
pop
shr
and
and
cmpl
jmp
xchg
and
mov
pop
int3
stos
lods
inc
enter
outsb
insb
or
mov
add
loop
or
jmp
xchg
or
popf
jae
imul
push
in
cvtps2pi
or
push
jno
imul
lahf
xchg
call
aas
jmp
stc
imul
jp
fcomps
cmpl
jne
and
mov
jmp
fildl
dec
sti
push
into
scas
repnz
xor
jb
jmp
add
add
add
mov
shr
and
jmp
xor
out
sub
sldt
cmp
jae
jb
imulb
sahf
insl
sahf
push
lds
sub
add
add
inc
inc
mov
mov
jmp
jle
sarb
enter
lea
jmp
in
jmp
jge
mov
mov
and
adc
or
push
imul
add
or
lea
jmp
dec
cmp
mov
mov
addb
testl
add
dec
sub
jg
nop
push
popa
nop
popa
sbb
or
jmp
lock
mov
inc
mov
setbe
sahf
and
leave
cmp
jae
lea
jmp
xor
cmp
insb
lahf
je
xor
shll
jecxz
add
or
xor
int
dec
inc
jmp
pop
into
test
popf
pop
jge
sahf
pop
movsl
cs
sbb
cld
ljmp
setne
jmp
xchg
or
lahf
punpckhdq
or
dec
out
fstpt
add
add
mov
inc
mov
mov
sbb
add
adcb
data16
sbb
or
jg
outsl
lcall
lea
jmp
mov
and
icebp
mov
mov
xor
subl
add
xorb
ret
cmpsb
push
mov
shrl
push
rolb
jae
lea
jmp
jecxz
jmp
fmuls
fsubs
jne
xlat
inc
and
imul
mov
jmp
gs
adc
add
inc
aad
dec
scas
mov
mov
add
add
add
add
jno
jecxz
sbb
pop
xlat
inc
and
xor
jae
lea
jmp
pop
fisttpl
fnstsw
orb
push
mov
jp
add
add
add
cmc
shlb
cld
jmp
xor
pop
aas
lret
insb
shl
push
ds
pop
push
inc
cmpl
jne
cmp
jae
lea
jmp
sti
ja
xorb
jmp
push
in
dec
divb
sub
lahf
pop
mov
add
add
mov
clc
setne
lea
jmp
aas
mov
jmp
inc
lret
lret
add
setg
or
cmp
mulb
sti
xor
sbb
dec
inc
jmp
dec
fstpt
xchg
repnz
pop
popf
or
or
jae
lea
jmp
cmp
cmp
dec
cld
imul
or
xor
lea
jmp
xor
cmp
jmp
xchg
or
in
in
or
cwtl
push
imul
mov
add
add
pop
ds
cmc
js
cmp
xchg
rorl
add
es
inc
inc
pop
pop
pop
pop
ret
jmp
jmp
leave
std
adcb
jb
jae
hlt
push
mov
shlb
in
stos
in
cmp
jae
jb
je
inc
sub
pop
jns
imul
fs
adc
shll
push
add
inc
add
add
jne
mov
sbb
bnd
lea
repz
clc
popa
jmp
divl
xorl
xchg
jl
mov
fimuls
cmp
jbe
jmp
into
inc
fidivrl
xchg
cmp
jb
jae
ficomps
scas
pop
cld
jo
outsb
or
xor
xor
mov
add
add
xchg
add
ja
ja
clc
cmp
xchg
jmp
inc
rolb
add
pop
jmp
pop
roll
shll
pop
mov
js
pusha
xchg
cwtl
decl
incb
ret
cmp
je
cmp
jne
jmp
pop
fwait
or
jae
lcall
cmp
jb
cmp
jbe
jmp
cmp
jmp
cli
push
lahf
push
sub
xor
inc
sbbl
mov
cmp
jb
jae
xor
mov
dec
mov
mov
cmp
jmp
js
arpl
cmc
push
lods
movsb
ret
ds
lcall
outsb
cld
fwait
jbe
and
cmp
jbe
jmp
jg
je
out
push
je
js
ljmp
pushf
cmc
sbb
push
ja
je
cmp
jne
jmp
mov
mov
cmp
pop
xor
lret
testb
push
incl
gs
jmp
pop
fimuls
xor
lret
xlat
mov
scas
sub
push
gs
sti
popa
jb
cmp
jbe
jmp
outsl
out
jl
notb
ret
ret
mov
and
inc
and
jb
cmp
jbe
jmp
jge
outsb
or
adc
sti
sub
push
pop
aad
sub
aas
mov
xchg
lock
insl
mov
dec
pop
cmp
jb
cmp
jbe
jmp
sub
jp
add
push
cmp
jb
jae
push
cwtl
push
imul
sbb
fs
popf
insb
cwtl
loope
xor
xor
sub
mov
mov
cmpsl
cmp
jne
je
jg
arpl
cmc
sbb
shll
popa
add
push
jp
inc
jb
cmp
jbe
jmp
inc
roll
rcll
stc
insl
std
test
jecxz
por
jbe
jmp
lret
cmp
je
jne
roll
mov
movsb
sbb
push
jns
pusha
int
into
test
cmp
jb
cmp
jbe
jmp
lock
lahf
push
aad
fdivrl
scas
leave
cmp
push
loopne
dec
cmc
adc
jmp
nop
push
pushf
sti
push
mov
gs
test
jge
and
dec
jmp
adcl
test
mov
inc
mov
sub
and
adc
clc
das
jne
push
jmp
jnp
outsb
or
push
fildll
cli
sub
lock
add
push
mov
xor
scas
dec
lcall
cltd
lcall
lock
jmp
pop
nop
push
popa
nop
jo
push
jmp
push
fimuls
add
mov
fidivl
pop
int3
stos
add
add
push
or
cmpsl
addl
je
lea
cli
push
jle
xchg
lock
add
inc
aad
dec
ljmp
out
data16
xchg
outsb
adc
loopne
cmp
ja
jbe
sbb
es
aas
pop
test
mov
mov
cmp
jae
lea
jmp
cmp
jne
je
ja
imul
ret
mov
dec
movsl
in
jne
push
jmp
test
mov
sbb
inc
inc
fimull
fisubrl
mov
add
add
add
add
dec
inc
aam
sub
mov
or
test
add
add
jmp
push
mov
ja
rclb
sub
icebp
enter
add
add
add
add
movsl
sub
aas
jmp
xor
sbb
aad
scas
jns
and
test
push
repnz
ja
jbe
dec
jecxz
push
in
sub
push
lds
arpl
push
cld
push
push
in
enter
jne
pop
rcrl
add
jmp
mov
xchg
fldl
mov
mov
cs
push
push
pop
cmp
ja
sub
jmp
sbbl
call
scas
sti
xchg
inc
setg
or
xor
jnp
add
add
sub
jmp
movups
cmp
jmp
and
dec
rolb
sarb
movsb
cmp
sbb
add
jmp
mov
mov
sub
sbb
add
popa
icebp
nop
arpl
fs
popf
insb
jmp
mov
push
aad
sub
or
xchg
adc
in
sbb
pop
fisttpll
out
adcb
add
or
jbe
rcr
mov
adc
jmp
jg
mov
movsb
stos
sub
sti
jle
mov
sbb
sahf
or
cmpsb
inc
ljmp
lahf
punpckhdq
or
pop
inc
movzbl
cmp
ja
add
jmp
jae
and
add
aad
popa
icebp
nop
arpl
loopne
push
add
add
add
rolb
cld
cmp
int
pop
cld
push
mov
jmp
push
in
add
dec
push
cmp
jmp
stos
and
pop
iret
stos
pop
test
xchg
mov
inc
jecxz
adc
cmp
jne
push
jmp
push
fimuls
adc
mov
inc
mov
out
jmp
jge
fimuls
mov
ja
sub
jmp
jle
jge
divl
fisttps
mov
xorb
outsb
popf
jge
loope
add
sub
jmp
fmull
mov
lahf
cli
or
in
loop
cmp
jne
push
jmp
xchg
mov
loopne
or
shl
or
jmp
or
data16
xchg
outsb
lahf
dec
rolb
shlb
sahf
pop
jmp
or
outsl
mulb
inc
aam
fdivrs
push
xor
ja
xchg
cmp
movzbl
ja
sub
jmp
and
sbbb
sub
pop
cmp
movzbl
ja
sub
jmp
inc
jmp
push
in
insb
adc
sub
push
inc
and
aas
push
ja
out
cmp
addb
add
xor
loopne
or
mov
mov
shr
mov
mov
shr
pop
mov
mov
xor
pop
ret
jmp
stos
pop
cld
mov
xor
out
add
jb
ja
addr16
push
xchg
sbb
icebp
popa
add
pop
inc
adc
add
cs
mov
cmp
jmp
repz
cmpl
enter
sub
js
ljmp
add
add
cwtl
push
imul
sbb
add
cmp
jae
lea
jmp
adc
cmpsb
sub
mov
dec
mov
pop
out
push
shl
or
mov
push
pop
mov
mov
shr
shr
shr
and
and
and
and
cmp
jae
lea
jmp
pop
repz
cmp
jmp
stos
aas
scas
lret
jbe
jnp
in
push
mov
mov
cmpl
leave
std
decl
decl
addr16
lods
lret
inc
movsb
dec
fimull
fidivl
push
insb
mov
cmp
ja
movzbl
add
jmp
cmp
ds
test
push
rclb
addr16
cmovs
cmp
add
jb
arpl
xchg
gs
sbb
pop
int3
stos
iretw
stc
inc
setne
lea
jmp
imul
pop
repnz
ljmp
cmp
mov
int3
jae
jb
dec
xlat
inc
and
push
or
rorl
loope
jae
jne
add
add
push
dec
inc
jmp
and
popf
sbb
aad
and
jbe
cmpl
sub
sbb
jecxz
add
les
mov
scas
lea
sahf
stc
or
inc
roll
aad
xchg
sub
pop
cmp
jae
lea
jmp
scas
and
inc
and
or
add
jb
inc
int
and
push
pusha
out
jg
jmp
test
add
mov
sbbb
cmp
and
inc
and
sub
aad
sarb
add
add
add
add
out
and
mov
add
dec
test
leave
jmp
sub
je
outsl
or
repz
gs
pop
or
lea
jmp
out
cmc
sbb
je
roll
rcll
pop
cmpsl
cmp
jns
add
lcall
add
add
mov
dec
add
clc
sbb
lea
jmp
jnp
jle
call
lahf
push
ljmp
fwait
jbe
dec
fisttps
flds
mov
ret
jmp
pop
jne
push
mov
push
jmp
das
mov
setns
push
lcall
movl
add
xor
sbb
mov
mov
add
add
add
push
xor
jno
xchg
cmp
jae
lea
jmp
lods
xor
lods
and
add
gs
push
aad
fidivrs
ds
lea
jmp
mov
push
out
rol
push
xchg
jmp
add
sub
or
xor
add
dec
inc
jmp
or
lods
cs
mov
jmp
add
inc
lret
pop
ds
and
sub
push
xor
mov
mov
pushl
jmp
enter
push
mov
or
jns
mov
in
mov
xor
cmp
setne
lea
jmp
cmp
jmp
pop
fimuls
psubusw
mov
push
aaa
ret
pop
loop
orl
inc
jmp
push
xchg
add
sahf
push
icebp
pop
pop
leave
ret
jmp
clc
ja
xorb
outsl
adc
push
mov
push
push
jmp
or
je
imul
shlb
rcrl
decl
andl
iret
stos
pop
xchg
push
adc
mov
pop
pop
test
jne
addl
inc
add
cmp
jmp
ljmp
jmp
push
in
sub
inc
aad
dec
scas
pop
mov
mov
jae
lea
jmp
adc
fsts
cmpsb
push
mov
pop
xor
lea
pop
div
xor
test
jmp
inc
rolb
shlb
roll
aad
sub
cmpsb
fidivs
fsubrs
jmp
cs
inc
mov
sub
pop
ljmp
sbb
mov
mov
imul
add
push
lea
lea
call
pop
test
jne
mov
add
mov
mov
xor
jmp
mov
push
mov
jmp
xchg
or
or
add
repnz
mov
sbb
dec
cld
mov
mov
mov
call
addl
add
decl
jne
pop
jmp
add
jecxz
mov
movzbl
movzbl
sub
je
jmp
insl
into
pop
cmp
push
data16
sbb
jns
jmp
fcmove
pop
add
jbe
mov
push
mov
jmp
xor
pop
fmuls
fdivrs
and
fstpt
test
dec
adc
sub
add
mov
shl
add
push
push
call
mov
pop
add
pop
mov
pop
xor
pop
leave
ret
jmp
clc
test
mov
test
jge
or
ret
jmp
jbe
jmp
jle
fs
jmp
imul
add
sbb
sar
jbe
cmpl
cs
jle
xor
inc
jmp
inc
enter
outsl
jne
jne
xchg
cmc
add
orb
sti
push
repnz
test
je
inc
inc
jmp
je
imul
fidivrs
loop
je
in
mov
pop
leave
ret
jmp
cmp
add
or
inc
or
cs
add
jecxz
out
jno
mov
mov
and
pop
enter
outsl
fmull
add
mov
test
je
push
mov
mov
dec
mov
inc
incl
jmp
xchg
add
cmp
xchg
pop
bound
push
mov
mov
sub
push
mov
mov
shr
lea
and
cmp
jae
incl
jmp
xor
ss
mov
imul
in
sub
jmp
sbb
das
int
lds
jbe
xor
aas
dec
lea
jmp
add
xor
or
loopne
jo
jl
negb
test
adc
aaa
cmp
inc
adc
je
push
ret
jmp
push
pop
jp
and
push
cld
push
dec
call
mov
andl
add
mov
jmp
add
mov
mov
mov
adc
test
jmp
imul
icebp
mov
mov
je
mov
jmp
incl
xor
xchg
adc
mov
cmp
je
xor
jmp
js
outsl
or
in
inc
shll
lods
mov
movsl
xchg
or
clc
inc
jne
xor
lea
movzbl
movzbl
shl
or
movzbl
shl
or
movzbl
shl
or
mov
inc
add
cmp
jb
lea
lea
call
xor
jmp
adc
shr
cld
js
mov
divb
xorb
and
movsl
cs
push
mov
jmp
popl
pop
xchg
add
sahf
jo
pushf
xor
inc
movd
jbe
pop
jmp
hlt
jns
mov
pushl
xorb
loopne
adc
adc
mov
test
jne
jmp
pop
iret
pop
cmp
aas
mull
icebp
or
cmpsb
xor
scas
or
loope
mov
jmp
xor
cmp
push
shll
xchg
xchg
adc
jle
shlb
xor
jmp
push
ret
ret
fdivl
in
ffreep
and
mov
mov
add
add
dec
mov
mov
js
mov
jmp
popa
stc
imul
cmpsl
ret
jae
jns
jmp
or
fisttpl
mov
add
add
add
add
xchg
add
sahf
and
push
lret
cmc
push
into
pop
cmp
popa
jmp
add
mov
gs
cmp
xlat
bound
mov
inc
mov
sbb
lods
dec
cmp
jmp
fstpt
mov
rclb
cmpsl
push
xchg
pop
dec
add
jmp
mov
movsl
push
inc
and
cmp
es
cs
scas
or
add
cltd
sub
mov
mov
sar
mov
add
mov
call
test
jne
mov
movzwl
mov
mov
jmp
or
mov
stos
into
cmp
sub
xor
out
adc
or
leave
ret
jmp
in
data16
xchg
outsb
leave
ss
mov
lret
lret
lea
jmp
arpl
arpl
cmc
pop
orb
lret
lret
rclb
xor
aas
fimuls
push
mov
fwait
insb
push
xchg
mov
into
sti
mov
jmp
push
rcll
add
fimull
jae
in
repnz
pop
repnz
jle
lea
jmp
jae
jge
negl
je
out
pop
mov
pop
jnp
fadds
add
add
pop
adc
adc
pop
cld
jle
jmp
loopne
ljmp
ds
leave
or
add
mov
jmp
mov
mov
add
mov
jmp
ljmp
lahf
push
mov
fmull
dec
sub
or
or
mov
jmp
xor
jmp
mov
mov
cltd
or
es
push
xor
lcallw
mov
incl
add
add
test
mov
jg
and
mov
jg
cmp
mov
jmp
jo
inc
and
push
ficompl
test
adc
jmp
sub
jne
imul
sbb
mov
add
movzwl
jmp
ljmp
gs
pushf
outsl
test
cwtl
push
imul
add
jnp
in
add
sbb
mov
xchg
repnz
mov
lahf
pushf
sub
inc
cmp
jle
jmp
add
fists
lods
pop
xchg
push
mov
shll
inc
or
ret
jmp
lret
mov
pop
ds
out
jb
fs
jmp
mov
push
test
jge
fs
add
adc
icebp
repnz
mov
ja
dec
in
mov
add
mov
jmp
insl
xor
jge
mov
jmp
movsb
cmp
jmp
push
in
or
cmp
and
leave
jne
xor
ret
jmp
lret
stos
data16
jno
jne
mov
jmp
hlt
outsb
cld
fwait
jbe
jl
jne
out
pop
aam
ret
std
pushf
or
test
jne
jmp
filds
mov
out
sbb
sbbb
and
sbbl
jmp
xchg
xchg
sbb
jmp
dec
repz
cmc
je
push
ret
cmpsb
push
xchg
lods
sub
jo
fisubs
pusha
mov
jmp
je
lea
ret
push
lds
xor
push
add
ret
jmp
cmp
sub
lods
cmp
push
test
jmp
inc
rcll
and
mov
dec
mov
shlb
mov
rorb
sub
jmp
cmp
push
lds
ret
push
ret
cmpsb
push
mov
sbb
mov
jmp
into
inc
aam
dec
test
fstps
xchg
add
sahf
jp
xlat
test
mov
mov
xchg
mov
dec
jne
test
js
movb
jmp
insl
into
pop
cmp
cmp
pop
cmp
sub
inc
push
fimull
ficoml
xor
add
add
add
dec
lcall
jmp
xlat
pop
into
test
xchg
repz
out
inc
mov
mov
push
dec
mov
push
xor
mov
div
inc
pop
sub
jmp
loope
loope
jae
sbb
aad
shrl
mov
sub
pmovmskb
and
push
add
inc
movl
movl
movl
jmp
fimuls
movsb
push
xchg
jecxz
jmp
jge
adcl
pop
dec
or
test
jne
jmp
sub
sub
rep
pop
test
js
cmp
jae
jmp
mul
mov
jmp
std
outsl
lcall
sbb
sub
dec
fdivrl
push
mov
push
xor
mov
jmp
cmp
sbb
push
les
mov
cmp
cmp
jb
mov
add
cmp
jb
jmp
insb
repnz
pop
repnz
inc
fmuls
fsubrs
lods
lret
inc
out
jnp
je
out
pop
insl
add
pushl
shr
add
add
push
xor
dec
jmp
fidivrs
push
aaa
ret
xor
cmp
leave
cmp
setne
lea
jmp
lea
and
repnz
gs
adc
or
jae
xchg
fcoms
mov
pop
pop
jmp
repnz
cmpsb
mov
mulb
sub
pop
push
push
push
add
xchg
jg
mov
inc
clc
jmp
cmp
aam
mov
jmp
fcompl
stos
pop
mov
js
ljmp
pushf
fstpl
scas
pop
nop
jl
roll
add
inc
in
das
lcall
push
jmp
popl
xchg
repz
loopne
and
into
inc
xlat
mov
lods
pop
mov
add
sti
rep
push
push
push
push
lea
mov
push
mov
mov
mov
mov
mov
mov
and
not
and
or
jmp
lcall
icebp
popa
add
add
cwtl
jo
pop
mov
add
add
shl
pusha
notb
or
aad
out
lea
jmp
push
imul
sbb
mov
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
jmp
or
or
jae
lcall
fdivrl
lahf
sti
jb
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
jmp
rep
lcall
pop
cmp
das
dec
mov
inc
js
cmp
jae
jmp
xchg
or
insb
repnz
pop
repnz
mov
xchg
jmp
pop
xchg
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
jmp
test
mov
sbb
in
pop
add
add
pop
repz
dec
push
cmp
out
sti
out
imul
inc
shll
aaa
jmp
sbb
add
in
add
sub
jecxz
jmp
lahf
adc
out
gs
pushf
outsl
subl
mov
add
mov
cld
call
dec
icebp
sub
shr
mov
jmp
movsb
sub
test
xor
int
aad
cmp
jb
into
icebp
rcrb
cld
pushl
cmpsl
aaa
push
mov
or
or
lods
cmp
cltd
jno
dec
push
call
into
pop
int
cmpsb
mov
jmp
daa
mov
inc
mov
cwtl
or
mov
jmp
repnz
xchg
outsb
xchg
inc
xlat
mov
call
jmp
lods
pop
ljmp
add
jmp
pop
rclb
imul
mov
add
or
cld
lcall
mov
call
pushl
ljmp
andb
hlt
pop
lods
in
jno
xorb
sub
pop
add
fdivrl
cmp
pop
jp
and
jo
xorl
mov
jmp
and
dec
pop
movsb
cmp
sub
add
sahf
dec
aad
les
mov
pop
cld
push
call
pop
jp
fs
pop
add
mov
lcall
sti
dec
int
and
cmp
sub
lds
fcoms
and
sahf
mov
add
insl
jnp
ljmp
push
push
add
arpl
incl
test
or
outsl
lcall
daa
inc
mov
jo
lea
push
call
cmpsl
lea
jmp
push
lea
jmp
xor
or
inc
aad
dec
mov
dec
lods
insb
addr16
xorl
out
jno
mov
xchg
icebp
add
mov
xchg
cmp
add
add
mov
cmp
jecxz
push
in
pop
cld
xchg
cmc
add
pop
fisttps
fnstenv
lret
dec
fidivrs
dec
fnstsw
push
inc
and
cmp
pusha
notb
dec
sub
and
inc
and
sub
pop
lds
mov
push
jns
inc
orl
fcoml
cmpsl
push
mov
jecxz
push
in
mov
xchg
icebp
add
fcomps
scas
pop
scas
add
jle
arpl
cmc
push
xor
aad
fidivrl
add
jno
push
xor
and
loopne
adc
or
xchg
mov
xchg
aad
aad
adcb
xorb
test
pop
test
std
fs
popf
insb
rcrl
movsl
les
test
out
sub
pop
les
int3
jnp
xchg
add
push
pop
std
insl
hlt
pop
add
shll
and
repnz
dec
fdivrl
lret
mov
pop
nop
push
popa
nop
jo
or
jp
jp
adc
stos
daa
mov
and
ss
pop
aad
sub
xor
jns
mov
insl
loop
pop
loop
scas
and
mov
inc
mov
insb
insb
or
out
rcll
push
cmpsl
mov
lea
fstpl
adcb
jecxz
cld
cmp
pop
int
lea
pop
jp
xor
inc
xlat
mov
mov
mov
imul
and
sbb
pop
xor
je
scas
mov
adc
gs
ljmp
ret
add
add
lcall
pop
roll
aad
mov
fbstp
mov
push
cmp
mov
leave
outsb
xchg
pop
adc
pop
inc
adcl
adc
pop
pop
les
adc
loope
les
adc
loope
dec
scas
or
lcall
das
cmp
dec
in
push
pushl
call
test
jl
mov
jmp
push
push
xor
or
and
cmpsb
aaa
cmpsl
ret
pushf
xchg
mov
mov
mov
sub
push
jmp
pusha
hlt
push
cld
adc
insl
std
test
pop
lds
iret
cmp
push
hlt
dec
inc
fstpl
ret
sbb
leave
rcl
lods
adcb
pop
dec
into
dec
into
add
jnp
adc
pop
and
add
inc
pop
les
adc
loope
iret
pop
cmp
popa
jle
je
out
inc
lahf
dec
imul
outsb
ret
or
popa
in
adc
pop
jbe
pop
adc
jge
or
adc
pop
jge
lcall
push
or
mov
cmpsl
aaa
push
mov
mov
out
insl
adc
jmp
jno
jl
testb
push
xor
sbb
xchg
and
mov
mov
add
add
jmp
xchg
xor
mov
mov
cltd
rep
xor
mov
jmp
rclb
mov
sbb
xchg
jo
sbb
out
jg
jmp
push
pop
mov
lea
jmp
cld
jp
jp
in
push
lahf
push
mov
and
std
movsl
repnz
mov
push
mov
sub
test
je
jne
daa
mov
lods
and
xor
jp
nop
outsl
xor
leave
ret
jmp
dec
rclb
or
stos
cmp
inc
dec
push
xor
sub
fstl
or
add
xor
repz
jne
je
and
pop
ret
dec
fdivrl
frstor
pop
jmp
ret
jmp
mov
mov
and
popf
adc
mov
dec
mov
mov
sub
inc
cmp
jb
push
lea
push
lea
push
call
push
pop
lea
jmp
dec
fimull
fidivrl
or
jns
mov
cmovnp
popf
fs
sbb
je
pop
leave
outsb
xchg
pop
adc
pop
pop
adcl
adc
pop
fs
fs
jbe
cmpb
adc
add
add
les
adc
loope
les
adc
loope
or
loope
jmp
jmp
sbb
je
pop
leave
outsb
mov
add
add
adcb
pop
scas
mov
pop
add
add
call
repnz
adc
add
add
mov
or
mov
adc
pop
std
adc
push
push
mov
test
je
cmp
jb
cmp
jb
jmp
setp
outsl
lcall
aad
xchg
add
daa
xchg
movsl
sbb
rolb
ret
jmp
jae
mov
cmp
jae
mov
jmp
ss
cmp
mov
cli
popa
icebp
nop
arpl
lea
and
andl
mov
jmp
sarl
jb
arpl
cmc
inc
jmp
rcr
inc
fidivrl
test
push
cltd
and
dec
or
fucomip
popa
pop
stc
imul
aam
icebp
cmp
add
add
mov
jmp
xor
dec
adc
test
or
add
data16
xchg
outsb
and
push
nop
push
popa
nop
jns
ds
mov
test
je
cmpl
je
jmp
push
inc
and
ds
jae
mov
mov
mov
jmp
mov
aam
dec
fdivrs
pop
bound
push
test
mov
sub
mov
push
lea
mov
call
mov
mov
test
je
lea
mov
jmp
into
dec
fstpt
in
mov
lods
pop
mov
int
and
xor
push
pop
lea
rep
jmp
rcrl
xchg
add
add
push
add
call
mov
test
je
mov
mov
add
cmpl
je
jne
dec
rclb
sub
jae
xchg
dec
jo
inc
mov
and
xchg
je
gs
and
mov
into
and
and
sub
loope
loope
loope
repnz
add
lea
add
or
loope
dec
pop
push
into
mov
jge
mov
mov
lods
inc
and
sbb
lods
inc
shll
sbb
sbb
leave
outsb
jp
adc
pop
sbb
rcrl
pop
leave
outsb
ret
adc
scas
or
lcall
or
bnd
sub
or
loope
fs
or
lcall
pop
xor
shll
pop
mov
pop
les
adc
loope
add
fistps
xlat
lea
test
jne
jmp
loope
in
jle
out
jns
mov
std
push
or
lahf
addl
mov
mov
jmp
in
in
mov
jl
cmp
nop
mov
popf
xchg
mov
cmp
je
mov
mov
lea
push
push
push
push
call
jmp
sbbb
and
outsl
lock
inc
ret
stos
iretw
ficompl
inc
out
or
mov
mov
outsb
or
pop
ret
jge
add
jge
jge
lcall
pop
loope
loope
sub
test
add
or
lret
jge
pop
pop
mov
pop
or
loope
mov
pop
jp
xchg
fisttps
scas
jmp
arpl
mov
jmp
faddl
mov
clc
sbb
fidivrl
mov
std
push
out
mov
jmp
sahf
sbb
aad
lock
mov
jle
insl
dec
roll
aad
pop
daa
push
push
pushl
call
jmp
out
insl
std
test
jmp
pushf
push
xchg
jb
outsl
sub
pop
test
je
mov
test
jns
mov
mov
and
jmp
divb
xorb
mov
sbb
outsl
iret
je
mov
mov
push
pushl
push
push
call
mov
mov
push
push
call
mov
push
call
pop
jmp
lods
and
out
cld
fwait
jbe
movsl
or
sub
out
sldt
add
inc
and
xchg
icebp
add
xlat
push
mov
sbb
xchg
js
mov
xchg
jg
mull
icebp
sbb
inc
loope
aad
sub
push
imul
pop
loop
daa
scas
aas
pop
test
int
fidivs
mov
insl
loopne
adc
adc
mov
inc
mov
lods
cmp
xor
add
dec
fdivl
in
push
mov
pop
cmp
and
cmp
hlt
xchg
outsb
lahf
ljmp
xchg
add
cmp
lea
adc
iret
pop
cmp
pusha
pop
push
xor
loopnew
adc
xor
enter
dec
xchg
iret
push
ret
cmpsb
push
xchg
dec
fidivrs
hlt
xchg
outsb
and
cmp
dec
xchg
sbb
dec
fistpll
add
sahf
jo
mov
lods
es
cs
hlt
jge
je
and
mov
push
mov
xchg
lock
les
mov
jle
call
mov
hlt
xchg
outsb
xchg
mov
cmpsb
xor
scas
or
out
adc
dec
fdivrs
jne
out
add
cld
pop
arpl
outsl
or
imul
ja
xorb
loopne
adc
dec
and
xor
or
pop
xchg
adc
movsb
adc
js
ljmp
out
push
mov
jge
add
gs
je
mov
out
mov
xor
fs
outsb
gs
xor
pop
test
add
and
dec
push
mov
jge
add
xor
mov
or
pop
or
fisttps
or
sub
imul
lret
mov
or
xchg
push
adc
pop
into
pop
add
lret
fisttps
jmp
aam
enter
jns
push
add
mov
add
lea
test
jmp
lret
inc
fidivrl
in
mov
dec
mov
mov
and
movb
pushl
call
jmp
pop
rorl
add
pushl
dec
frstor
push
scas
pop
or
xor
add
fs
push
fstps
mov
jmp
adc
stos
inc
shll
mov
jbe
mov
lea
push
pushl
mov
push
push
call
jmp
jp
jle
call
adc
outsl
lcall
add
add
add
add
cmp
jmp
add
ja
lret
lret
dec
fdivrs
dec
mov
loope
out
mov
jmp
mov
mov
or
in
mov
mov
movsl
and
stc
imul
in
mov
add
adc
sahf
or
cmpsb
inc
aas
mov
int3
dec
fdivrs
add
jb
loop
pop
loop
and
and
fcoml
lods
pop
cli
fwait
adc
aam
sub
lahf
cli
or
sbb
add
jae
jle
mov
lea
lret
pop
ds
push
rclb
xor
stc
mov
bswap
cmpsb
xor
jge
je
outsl
mov
mov
es
jns
bound
dec
sub
sub
stos
cmp
sbb
test
rcrb
pop
fcoms
mov
ljmp
cld
or
pop
int
loopw
adc
in
sbb
insb
out
jl
mulb
push
aad
sub
cmp
lea
ljmp
stc
in
push
mov
es
outsb
out
jg
jmp
push
movsl
dec
mov
in
std
fcoms
cmpsl
push
mov
dec
fidivrs
pop
cmp
add
gs
adc
jmp
mov
dec
popa
ret
leave
mov
pop
mov
add
and
sbb
adc
loope
or
inc
xor
sbb
jmp
cli
pop
ret
jmp
inc
fimull
fisubl
jns
mov
les
test
out
cmp
ss
mov
or
jmp
or
lea
jmp
cld
notl
dec
jmp
lret
lcall
cwtl
dec
fwait
pop
ret
jmp
add
push
daa
xor
lock
movsb
lock
jge
xor
fs
jp
or
je
gs
pop
add
jmp
mov
dec
gs
je
pop
mov
add
mov
pop
push
roll
sarl
in
imul
inc
and
xor
push
testl
jo
jbe
jmp
mov
jmp
push
mov
js
pusha
mov
rcrb
xchg
add
xor
xchg
sub
add
add
push
pop
sahf
or
cmpsb
dec
push
fmuls
fdivrs
mov
mov
add
mov
jmp
enter
dec
scas
orb
sti
push
pushl
mov
mov
outsl
mov
add
jmp
ss
adc
sub
decl
test
or
in
cld
call
mov
rcl
lret
jmp
jae
jo
loop
call
fs
adc
imul
sbb
jmp
and
es
mov
cli
insl
std
test
lcall
loopne
adc
push
pop
mov
mov
cmp
jne
test
je
mov
mov
mov
cmp
jne
addl
inc
inc
test
jne
jmp
les
fs
mov
adc
pop
rcll
jbe
inc
xor
jmp
inc
fisttps
or
mov
push
cmc
gs
jp
in
pop
mov
incl
add
je
fs
sub
mov
fildl
negb
lcall
les
cmp
dec
or
push
jns
data16
insl
hlt
insl
adc
femms
test
je
incl
jmp
out
hlt
xchg
outsb
mov
das
fidivl
ret
mov
cmp
pop
or
sub
decl
xchg
jl
inc
js
ret
mov
test
je
cmp
jbe
mov
cmp
jae
mov
cmp
jb
mov
add
cmp
jae
sub
mov
lea
jmp
and
cld
cmp
jb
jmp
jnp
insl
hlt
pop
jmp
fidivs
das
cmp
in
mov
ret
jg
push
push
mov
andb
fidivrl
shll
xchg
mov
lea
jmp
loopne
clc
lahf
push
xor
aad
repz
gs
push
jmp
xor
jp
popa
ret
leave
mov
pop
test
add
jmp
jmp
sbb
outsb
pop
je
mov
sbb
pop
jp
sub
adc
scas
into
or
mov
adc
pop
je
into
jmp
fadds
idivl
adc
add
add
mov
add
cmp
jae
push
push
call
mov
pop
pop
mov
jmp
sub
push
or
dec
ret
mov
std
stos
cmpsl
fmuls
cmpb
pushl
ss
jecxz
cld
fwait
jbe
pop
iret
pop
cmp
aas
out
sub
mov
sbb
mov
inc
std
call
lea
and
pop
xchg
add
lret
lret
cltd
or
jnp
ret
jmp
mov
push
push
lea
jmp
mov
fidivs
adc
or
dec
fnstsw
repz
push
jmp
mov
xchg
adc
addr16
xchg
cmc
add
stc
notl
ja
leave
je
sub
push
lea
push
push
call
add
lea
push
movb
call
mov
test
jne
mov
jmp
cltd
add
fisttps
mov
sbb
pop
adc
ret
adc
fcomip
aad
int
out
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
not
or
xor
lea
add
rol
add
mov
not
or
xor
lea
add
rol
add
mov
not
or
xor
lea
add
rol
add
mov
not
or
xor
lea
add
rol
add
mov
not
or
xor
lea
add
rol
add
mov
not
or
xor
lea
add
rol
add
mov
not
or
xor
lea
add
rol
add
mov
not
or
xor
lea
add
rol
add
mov
not
or
xor
lea
add
rol
add
mov
not
or
xor
lea
add
rol
add
mov
not
or
xor
lea
add
rol
add
mov
not
or
xor
lea
add
rol
add
mov
not
or
xor
lea
add
rol
add
mov
not
or
xor
lea
add
rol
add
mov
not
or
xor
lea
add
rol
add
mov
not
or
xor
lea
add
rol
add
pop
add
add
add
add
pop
pop
pop
pop
sub
test
jne
add
popa
ret
jmp
sbb
cmpsb
cmp
adc
fdivs
lds
add
add
jg
jmp
inc
mov
int
fdivrl
cli
popf
insb
lea
pop
and
jmp
mov
call
jmp
mov
movsl
int3
aas
fbld
movsb
cmp
inc
dec
scas
lea
dec
call
mov
jmp
mov
push
mov
sub
push
push
push
mov
push
jmp
scas
das
mov
or
in
cli
dec
int3
inc
and
xchg
repz
in
jae
rolb
ljmp
filds
add
sub
adc
xor
outsl
lret
mov
scas
imulb
mov
sti
rep
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
dec
mov
inc
test
jne
call
jmp
ficoms
mov
stc
cwtl
imul
jmp
call
add
dec
add
adc
test
jne
sub
push
sar
lea
mov
mov
push
push
push
call
mov
mov
mov
push
call
push
pushl
push
call
mov
add
push
call
push
push
call
add
imull
cld
incl
pop
xor
pop
ret
jmp
dec
rcll
xor
sub
call
add
add
cmp
jmp
gs
gs
adc
sbb
xor
ljmp
add
mov
movzwl
and
push
lea
push
push
call
add
add
cmp
jl
mov
dec
mov
inc
test
jne
call
movsw
xor
mov
mov
movzwl
and
push
lea
push
push
call
add
add
cmp
jl
mov
dec
mov
inc
test
jne
call
movsw
xor
mov
mov
movzwl
and
push
lea
jmp
rolb
mov
mov
pop
cmp
sub
push
popa
jle
movsl
pop
mov
mov
movzwl
and
push
lea
push
push
call
add
add
cmp
jl
mov
dec
mov
inc
test
jne
call
movsw
xor
mov
mov
movzwl
and
push
lea
push
push
call
add
add
cmp
jl
mov
dec
mov
inc
test
jne
call
jmp
ljmp
cwtl
imul
mov
mov
dec
or
inc
add
or
roll
call
pop
jmp
push
mov
mov
jmp
lds
stos
data16
push
lahf
push
mov
mov
and
jmp
adc
sbb
or
mov
sub
call
movsw
pop
pop
xor
pop
leave
ret
jmp
mov
jmp
mov
sahf
lds
iret
dec
mov
stos
into
cmp
cmpsl
decl
sti
mov
inc
test
jne
je
iret
dec
ret
mov
pop
jp
jbe
mull
icebp
sbb
sub
lock
sub
adc
add
add
jne
out
or
and
ja
pusha
pop
repnz
pop
incl
cmp
je
jmp
xor
dec
lds
iret
push
inc
aam
dec
test
ret
sbb
sbb
mov
test
std
ljmp
cmp
adc
out
cld
push
mov
mov
add
push
push
push
push
push
push
lea
push
call
mov
cmp
je
xor
lea
stos
stos
push
push
pushl
stos
mov
mov
mov
call
push
mov
lea
push
push
push
push
lea
push
push
pushl
call
add
inc
sbb
je
cmp
jae
push
add
push
push
jmp
rcrb
test
mov
inc
and
cmp
movsb
sti
cmp
mov
push
push
pushl
call
pushl
mov
call
jmp
sbb
add
jae
push
sub
jmp
dec
rcll
sub
sarb
mov
sub
pop
leave
ret
jmp
ds
inc
mov
jmp
push
xor
push
movb
movb
jmp
outsb
insb
or
mov
pop
sahf
mov
mov
les
pop
cmp
push
mov
push
lea
jmp
rorl
mov
int
addr16
insl
hlt
pop
hlt
cmpsl
cld
mov
or
jne
call
add
movl
jmp
xchg
aad
xchg
mov
push
jmp
movb
movb
movb
jmp
push
sahf
or
cmpsb
dec
frstor
sbb
pop
icebp
out
inc
xchg
out
and
mov
scas
fists
pop
sbb
add
and
add
lret
add
push
xchg
pop
bound
xlat
ljmp
adc
mov
add
pop
push
xor
or
pushf
sub
push
xchg
mov
jmp
rclb
inc
cmpsl
add
std
or
and
or
dec
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
call
mov
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
lea
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
push
push
call
push
push
pushl
mov
call
push
push
pushl
mov
call
push
push
pushl
jmp
adc
int3
push
ret
cmpsb
push
mov
rcll
sub
push
ljmp
push
ret
pop
leave
ljmp
xlat
into
xlat
sub
jbe
sub
sbb
pop
loope
loope
and
stos
pop
add
fildll
lret
add
sbb
add
dec
pop
les
adc
loope
fs
fs
push
jmp
mov
adc
add
inc
inc
jp
pop
add
mov
add
inc
in
fwait
inc
repnz
sbb
xlat
ret
add
popa
add
pop
mov
dec
adc
pop
cmp
add
inc
inc
lcall
xlat
imul
dec
imul
roll
mov
adc
loope
sbb
or
xchg
add
lret
adc
mov
adcb
subb
jecxz
jne
lahf
push
dec
mov
call
jmp
push
movb
movb
jmp
les
mov
and
mov
fs
test
jmp
imul
adc
sub
je
out
add
repz
mov
movsb
movb
mov
call
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
lea
push
push
movb
movb
movb
movb
mov
call
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
mov
mov
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
push
call
mov
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
cmp
je
mov
mov
mov
mov
mov
add
mov
cmp
je
lea
push
mov
push
add
push
push
mov
call
mov
mov
mov
mov
lea
push
pushl
mov
add
push
push
mov
call
jmp
mov
pushl
test
ljmp
xor
add
pop
ds
gs
jg
jmp
sbb
adc
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
jmp
sub
aaa
push
mov
popf
insb
test
into
jmp
add
out
mov
lcall
je
popa
mov
inc
xchg
xchg
jmp
repnz
add
inc
or
scas
je
jnp
in
sub
shlb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
jmp
xor
aam
shll
pop
cmp
js,pt
adc
inc
push
je
inc
push
jne
inc
push
popa
movb
movb
movb
movb
movb
movb
mov
call
mov
movb
movb
movb
movb
movb
movb
movb
movb
mov
lea
push
pushl
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
jmp
pop
leave
pop
cmp
outsb
cs
dec
mov
outsl
lcall
jmp
test
ljmp
cmp
pushl
movb
movb
movb
movb
movb
mov
call
lea
push
push
mov
call
mov
lea
push
pushl
call
mov
lea
push
push
call
mov
mov
lea
push
pushl
call
mov
mov
lea
push
pushl
call
mov
mov
lea
push
pushl
call
mov
mov
lea
push
pushl
call
mov
mov
lea
push
pushl
call
mov
mov
lea
push
pushl
call
mov
mov
lea
push
pushl
call
mov
mov
lea
push
pushl
call
mov
mov
lea
push
pushl
call
mov
mov
lea
push
push
call
mov
mov
lea
push
pushl
call
mov
mov
lea
push
pushl
call
mov
mov
lea
push
pushl
call
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
lea
push
push
movb
mov
call
mov
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
lea
push
pushl
movb
movb
movb
jmp
dec
aam
sub
jle
call
and
jbe
jne
pop
pop
gs
mov
mov
into
jp
inc
sub
insl
inc
repnz
lock
pop
and
add
inc
sbb
mov
adc
pop
dec
add
jmp
imul
or
jp
mov
or
scas
ret
ret
aam
fnstcw
push
xor
imul
pop
movsl
sub
rorb
pop
jecxz
pushf
add
add
jnp
mov
popf
lods
lret
inc
rcrl
fistps
andb
dec
add
in
add
shrb
push
lods
lods
pushf
popl
jmp
sti
jp
jp
xor
and
pop
popa
out
adc
push
movsb
and
mov
jmp
loopw
pop
loop
out
imul
insl
mov
cwtl
push
imul
add
mov
jg
outsb
jle
addr16
sbb
data16
popf
adc
push
mov
dec
sub
sub
sbb
push
call
jg
jl
divb
jp
pop
into
pop
cmp
cmp
cltd
or
jno
rclb
addr16
int
and
and
pop
jp
and
arpl
xchg
gs
ds
test
cmp
sbb
xchg
mov
sbb
lret
scas
aas
pop
test
imul
cwtl
push
imul
into
pop
cmp
xor
rcll
sub
dec
das
fidivrl
loopew
adc
xadd
dec
movsl
rorb
dec
test
mov
cmp
adc
dec
xchg
sbb
inc
roll
aad
fstps
scas
pop
mov
pop
lret
scas
pop
scas
rolb
mov
test
mov
inc
mov
xchg
add
test
pop
test
or
fdivl
in
outsl
stc
imul
adc
mulb
pextrw
pop
int3
stos
data16
xchg
dec
aad
sub
bound
mov
or
cmp
add
push
lret
fistpl
addb
icebp
add
aaa
mov
dec
mov
mov
movsl
sub
push
mov
jns
popa
outsl
call
pop
adcl
mov
jg
arpl
inc
shlb
mov
stc
jnp
pusha
pop
repnz
in
sbb
dec
das
fidivrl
mov
fmuls
test
mov
adc
jl
bound
leave
test
lcall
rclb
pop
mov
dec
fidivrs
and
mov
push
pushf
sti
push
out
mov
inc
aas
scas
lret
scas
aaa
cmpsl
ret
ret
xchg
gs
push
shlb
mov
fs
filds
mov
ss
adc
inc
sahf
dec
into
mov
or
lret
scas
imul
mov
jmp
push
in
insb
dec
in
jge
divl
adc
mov
leave
pop
fisttps
flds
ds
gs
add
jp
and
jmp
je
pop
ret
rcrl
into
lcall
pop
loope
loope
loope
lds
add
mov
add
jp
push
into
xor
imul
add
jg
xlat
jp
leave
xor
mov
add
add
into
fs
test
repnz
jl
push
adc
add
add
jp
xchg
push
imul
lret
pop
xlat
mov
gs
push
into
ljmp
ret
mov
stos
int
aad
push
lds
xchg
sub
jle
mov
adc
inc
jnp
popa
add
cmp
outsb
or
push
call
mov
loop
dec
fdivrs
fwait
decb
mov
jmp
jge
pop
leave
pop
cmp
outsb
mov
mov
inc
aam
dec
lods
sub
sbb
mulb
nop
arpl
fisttps
mov
inc
and
push
and
sti
lock
push
fildl
dec
sti
testb
out
mul
add
dec
lcall
rol
or
xor
ss
adc
inc
out
xor
jp
mov
sbb
ss
adc
inc
sahf
fs
leave
lock
lcall
jge
mov
or
sbb
mov
pop
loop
pop
adc
jge
xor
pop
les
adc
loope
dec
jge
mov
into
leave
hlt
mov
xor
xlat
add
add
inc
push
jge
movb
pop
ljmp
push
arpl
inc
lret
adc
fistl
mov
inc
daa
rcrb
int
fidivrl
aad
dec
test
lahf
jg
push
add
out
jmp
jge
mov
lret
scas
leave
cmp
arpl
imul
mov
jns
cmc
pusha
notb
les
imul
fdivrs
push
popa
nop
das
fldl
mov
call
add
pop
mov
push
mov
push
mov
mov
outsl
ljmp
sbb
mov
lahf
cli
or
or
lds
mov
test
ja
xorb
cld
xchg
cmc
add
out
imul
mov
orb
cli
or
mov
and
fimuls
add
push
call
and
rolb
mov
test
rolb
shlb
jp
imul
pop
lret
lret
dec
ret
mov
sbb
test
xchg
adc
lret
cmp
test
pop
test
mov
mov
mov
seta
bound
mov
adc
mov
mov
cltd
mov
mov
lods
sub
adc
cmp
outsl
or
loope
repz
cmc
adc
pop
int3
stos
data16
outsl
lcall
cmp
dec
in
outsl
lcall
cmp
inc
cmc
jge
je
addr16
into
pop
cmp
jno
xor
add
rolb
shlb
sahf
pop
xchg
adc
pop
rolb
sarb
in
jge
testl
int3
and
sub
lds
push
jp
sbb
sarl
adc
pop
xchg
fcoms
adc
or
loope
scas
into
pop
lock
or
add
jp
and
mov
gs
lds
add
or
fs
filds
mov
ss
adc
inc
sahf
jmp
outsb
scas
or
movb
adc
pop
adc
dec
mov
pop
insb
mull
icebp
dec
xor
add
sahf
sbb
sub
pop
adc
xchg
push
test
push
clc
pop
fstpt
int
ret
mov
xchg
add
js
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
movb
movb
mov
lea
push
pushl
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
movb
movb
movb
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
movb
movb
movb
movb
movb
movb
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
movb
movb
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
lea
push
pushl
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
movb
movb
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
mov
call
pop
mov
pop
pop
add
leave
ret
jmp
sti
push
inc
cs
mov
fnstsw
xlat
cmp
fdivrl
lcall
jmp
mov
lret
push
jmp
movsl
shr
push
push
call
movsl
xchg
mov
insb
or
in
lds
ffree
pop
add
mov
hlt
xchg
outsb
xchg
in
insb
loop
je
ror
push
call
push
call
sbb
push
mov
jmp
push
jmp
cmc
outsb
cld
fwait
jbe
sub
push
popa
add
dec
xor
push
push
jmp
mov
jmp
loope
in
je
sub
jbe
cmpl
fisttps
movsb
ret
mov
jmp
xchg
aaa
cmpsl
ret
sub
sub
popa
xchg
lds
mov
jmp
aad
test
dec
sub
add
jmp
xor
inc
ret
ret
mov
inc
mov
mov
stos
into
cmp
mov
jmp
je
pusha
pop
repnz
pop
repnz
fs
inc
aam
dec
mov
mov
inc
add
out
cmp
jmp
lret
push
jno
daa
rol
pushf
popl
jmp
jbe
cmpl
push
shlb
shll
call
and
pop
add
mov
jmp
in
pusha
notb
repnz
fs
jmp
sub
or
jmp
aaa
stos
cmp
inc
cmpsl
insb
popl
jmp
rolb
mov
mov
cli
pop
push
xchg
add
dec
pop
arpl
pushf
jmp
rcll
pop
mov
pop
mov
cmp
mov
lods
jnp
jl
notb
mov
not
not
jmp
daa
ret
push
lds
sti
pusha
notb
dec
sub
ret
cmpsb
push
in
sbb
mov
jmp
pop
pop
jp
sbb
stos
movsb
ret
ds
pop
push
xor
js
dec
mov
jmp
lea
xor
and
jns
xlat
mov
jmp
inc
ret
ret
dec
fdivrs
into
test
and
add
dec
lcall
leave
popa
ljmp
mov
mov
into
or
or
sub
sbb
pop
loope
loope
ss
adc
inc
sbb
pop
add
jmp
imul
adc
pop
add
rcrl
or
loope
mov
mov
push
out
push
lahf
push
cwtl
mov
dec
xchg
jmp
pop
sbb
or
ret
adc
inc
or
into
movb
pop
add
roll
into
sbb
into
or
mov
leave
add
scas
into
scas
into
mov
repnz
or
add
add
xor
gs
xchg
add
add
xor
imul
outsb
and
jge
mov
pop
xlat
scas
gs
push
adc
pop
into
or
imul
adc
pop
pop
or
loope
mov
into
pop
clc
mov
roll
mov
movsb
dec
add
scas
add
add
roll
sbb
xchg
je
xor
std
insb
sbb
sbb
ljmp
pop
inc
mov
les
adc
loope
or
loope
pop
or
loope
xchg
pop
lock
incl
into
add
or
hlt
inc
repnz
add
add
adc
adc
pop
pop
or
loope
add
inc
adc
pop
les
adc
loope
xlat
xlat
dec
and
or
fists
xor
pusha
dec
push
call
rcrl
test
xchg
jmp
cwtl
push
test
push
cli
and
std
ja
xorb
cwtl
push
imul
mov
dec
mov
loopne
mov
in
bound
outsb
or
sbb
mov
rolb
dec
movsb
das
mov
add
pusha
stc
imul
sub
push
pushf
sti
push
test
mov
pusha
xchg
es
pop
enter
into
push
shll
add
mov
adc
in
sbb
pop
xchg
or
jp
fimull
fidivrl
std
jl
jne
mov
leave
cmp
scas
sub
notl
push
shll
pop
test
out
fs
popf
insb
lret
ret
dec
fnstcw
xchg
cld
pavgw
xchg
add
int3
inc
and
dec
sub
xor
inc
shll
enter
enter
pop
lods
imul
or
pop
je
jnp
in
sub
cmpsl
aaa
push
mov
sti
push
cld
out
lds
mov
jmp
aad
xlat
mov
cmpsl
inc
fisttpl
fnstsw
pop
and
and
inc
aam
dec
clc
adc
sub
jmp
jmp
jge
dec
rolb
shlb
jl
jne
sub
xor
sub
xchg
cmc
jne
mov
sub
addr16
sbb
or
sbb
jge
je
insb
mov
mov
pop
mov
push
push
fstpt
cmc
jle
mov
pop
repnz
mov
scas
je
leave
adc
inc
jge
mov
jmp
xor
or
ljmp
cmp
pop
pop
les
adc
loope
into
xchg
inc
jno
and
sub
adc
pop
push
add
add
mov
pop
mov
scas
and
or
mov
shll
push
cmp
sub
out
cmp
idivl
jp
mov
ret
jg
jmp
ljmp
pop
sahf
sub
addr16
sbb
push
and
jae
xchg
jl
jne
out
pop
filds
mov
pushf
sti
push
test
jno
sub
ljmp
into
pop
cmp
popa
sub
sbb
loopne
adc
xor
std
push
call
xchg
adc
jno
xorb
sub
mulb
pop
out
push
cmc
ja
xorb
dec
fdivrs
sti
sahf
insl
mov
jp
in
dec
inc
iret
pop
cmp
sbb
and
in
clc
lahf
push
aad
enter
rorb
mov
dec
mov
lret
add
out
xlat
xor
or
mov
or
ret
rcll
inc
pop
into
pop
cmp
lea
mov
shll
jnp
in
dec
push
rclb
add
jbe
ja
loope
sahf
or
cmp
jno
xorb
pop
leave
test
out
mov
mov
mov
xchg
sub
cwtl
push
imul
mov
sbb
ja
dec
fstpl
dec
fstpl
aam
icebp
addr16
sbb
std
test
movsl
and
mov
scas
sub
lock
push
mov
scas
fcoml
mov
or
cmpsb
add
mov
jmp
lock
bound
jle
repnz
pop
repnz
cltd
or
jo
jl
jne
jo
popa
icebp
nop
arpl
jno
push
ret
ret
cmp
mov
xchg
push
xor
and
mov
dec
mov
decl
loop
insl
std
test
lds
xchg
addr16
pop
pushf
xor
adc
pop
enter
movsl
xor
adcl
test
mov
xchg
shll
gs
mov
fs
popf
insb
jmp
dec
fidivrs
adc
adc
loope
adc
add
xchg
jb
insl
movsl
and
test
lcall
pop
xchg
adc
fs
jl
notb
pop
xchg
adc
mov
sbb
sub
pop
mov
add
pop
lret
scas
pop
mov
into
pop
cmp
and
push
test
jmp
jae
jp
in
push
xor
inc
sub
lods
movsb
ret
ds
in
jbe
cmpl
shr
mov
and
xor
fs
sbb
mov
pop
pop
lcall
sub
sbb
pop
loope
loope
ss
add
int
add
jmp
imul
into
leave
add
enter
push
mov
rcrl
pop
leave
ljmp
pop
lret
adc
pop
or
loope
lcall
inc
mov
scas
add
add
xchg
pop
or
or
loope
jge
pop
lock
incl
jp
into
pop
lock
incl
lcall
push
xor
pop
leave
ljmp
push
mov
pop
pop
les
adc
loope
les
adc
loope
dec
into
pop
hlt
mov
adc
loope
mov
pop
pop
xlat
dec
into
pop
lock
incl
add
add
jp
and
or
push
xor
mov
mov
mov
pop
pop
les
adc
loope
les
adc
loope
dec
into
pop
or
adc
loope
mov
pop
mov
lock
incl
add
add
arpl
xchg
gs
dec
fnstcw
or
cs
mov
rolb
shlb
insb
or
adcl
cmp
mov
js
pop
adcl
imul
insl
int3
xor
outsl
inc
mov
mov
xchg
jne
mov
mov
mov
and
mov
mov
cli
lock
lret
adc
and
dec
fistpll
add
cmp
mov
xor
push
popa
nop
pop
adc
pop
enter
lods
sub
lds
xor
add
fdivl
in
cmp
mulb
pop
int3
inc
aam
dec
lods
movsl
cs
fimull
ficoml
push
mov
fsubs
mov
inc
mov
or
sti
jbe
cmpl
rcll
sub
mov
mov
gs
xor
jns
mov
add
ficoml
cmpsb
push
mov
jecxz
mov
xchg
and
repnz
lcall
movsl
int3
aas
xchg
in
je
lea
inc
xlat
mov
out
jecxz
push
in
outsl
icebp
popa
add
pop
cmpsl
cmp
pop
int
loopw
mov
dec
mov
mov
jae
in
adc
popa
loopne
adc
add
scas
cmp
mov
mov
fld
inc
aam
dec
mov
ret
sub
pop
int3
stos
data16
mov
jle
sub
test
ret
ret
pop
iret
stos
pop
sbbl
and
cmp
push
out
pop
into
test
sbb
xchg
jb
jp
pop
repnz
fs
inc
aad
dec
mov
cli
mov
fnstenv
mov
jnp
jl
notb
adc
xor
mov
jbe
adc
pop
sbb
or
mov
xor
xor
pop
xor
mov
add
or
loope
scas
pop
or
loope
ret
pop
fmuls
fdivrs
push
enter
outsb
ret
xor
aad
adc
ljmp
or
pop
adc
pop
lcall
xlat
xor
scas
into
xor
mov
js
jle
and
ret
mov
cmp
adc
mov
jmp
popa
movb
adc
je
imul
ret
imul
xchg
adc
in
sbb
divb
xchg
mov
and
cli
push
pushf
xor
inc
jmp
lds
mov
jns
add
push
outsb
loopne
adc
add
push
xchg
repz
in
ss
icebp
jl
jne
jo
sti
imul
adc
jb
in
mov
mov
xchg
mov
cmp
push
dec
fdivl
in
push
mov
js
jns,pn
jno
jecxz
in
in
mov
dec
mov
jmp
cltd
sbbb
jmp
lods
xor
cmpsb
xor
scas
pop
clc
imul
insl
fcompl
mov
das
stos
cmpsl
sub
pop
xchg
repnz
mov
fsubs
jp
in
push
data16
adc
or
or
cs
add
je
lods
sub
lods
lret
inc
test
pop
xchg
repnz
dec
les
int3
sub
lods
lret
inc
mov
les
int3
and
jne
mov
data16
pop
sbb
adc
mov
js
arpl
push
cmc
gs
pop
mov
xchg
adc
cmp
sbb
mov
filds
mov
icebp
loop
adc
sub
mov
xor
mov
adc
add
insl
std
test
sub
or
jo
adc
sbb
scas
cmp
mov
sub
out
push
lahf
push
stos
sub
clc
jb
xchg
sub
or
cmc
add
mov
shlb
xchg
repz
ljmp
mov
fwait
decb
xor
cmp
dec
das
fidivl
loope
loopne
jb
adcb
out
mov
es
cs
fisubs
xor
mov
outsb
sbb
aam
adc
mov
outsb
sbb
adc
pop
xor
mov
mov
adc
or
loope
into
mov
or
repnz
and
add
inc
xlat
add
pop
les
adc
loope
push
push
and
xchg
jge
scas
cmp
mov
mov
mov
and
add
repnz
pushf
outsl
lret
into
test
sbb
aas
flds
mov
out
icebp
popa
add
dec
aam
fdivrs
shlb
jne
sub
fildll
sbb
cs
add
adc
lret
pop
ds
movsb
call
jo
popa
add
pop
lea
and
repnz
test
nop
testl
sbb
add
xor
xchg
cmc
add
hlt
push
cld
push
jl
jns
jmp
sti
insl
std
test
pusha
sti
imul
pop
adc
imul
lret
push
shll
imul
loope
xlat
dec
fidivrs
ret
cmpsb
push
cli
pop
rclb
ja
push
mov
or
sbb
xlat
inc
and
or
leave
dec
fistpll
and
icebp
add
test
nop
testl
popf
insb
xor
in
jle
jnp
mov
xchg
sbb
test
into
inc
aad
dec
mov
jo
xchg
sbb
or
xor
and
stc
push
lahf
push
mov
xchg
dec
fimuls
and
ret
and
jge
je
outsl
loope
jmp
jge
cmp
aas
pop
test
bound
mov
repnz
test
push
sbb
pop
int
addr16
dec
fdivrl
stos
int
mov
xchg
jb
or
popa
add
jbe
pop
into
test
popa
add
pop
pusha
loopne
adc
add
pop
repnz
xchg
mov
inc
mov
lret
cmpsb
push
mov
fisttpl
fnsave
xchg
jbe
adc
in
sbb
rcrl
test
mov
add
jge
sbb
movsb
cmp
dec
es
cmp
inc
lods
daa
mov
and
dec
mov
lret
jmp
leave
xor
mov
pop
add
imul
scas
jge
add
lcall
popa
leave
mov
jmp
sub
push
sub
loope
loope
loope
xor
pop
add
jmp
add
dec
pop
push
into
je
imul
mov
lock
hlt
pop
in
sbb
aad
lret
bound
xchg
adc
fistl
mov
shlb
in
jg
orl
sti
sbb
pop
cmp
ds
pop
jb
jnp
add
adc
ljmp
stc
mov
adc
out
sbb
adc
out
loopne
jb
int
lds
ret
cmpsb
xor
scas
pop
mov
nop
cld
lock
lret
ja
jle
call
int3
aas
xchg
adc
pop
jp
and
popf
xchg
xor
int
mov
inc
xchg
push
cmovnp
pop
cmp
sub
insb
or
in
popf
or
insb
or
out
dec
fidivrs
sbb
xchg
jg
cmc
gs
pop
stos
daa
mov
and
xchg
pop
push
fisttpll
out
callw
call
xor
and
je
lea
sbb
xchg
pop
bound
sbb
sbb
jns
jmp
int
repnz
cmpsl
mov
aam
das
mov
sub
mov
xchg
push
pushf
sti
push
out
fisttpll
out
rcrb
pop
icebp
sbb
dec
fisttpl
fnsave
pop
repnz
fs
jae
xchg
pop
ret
ret
cmc
gs
jp
leave
pop
cmp
dec
mov
sti
test
xchg
repz
call
inc
scas
push
aad
sub
aas
in
icebp
nop
arpl
insl
mov
in
insb
or
out
inc
iret
pop
cmp
xor
jno
sub
fimuls
or
out
pop
out
and
xlat
fistpll
fs
sbb
ret
ljmp
xchg
sub
imul
lret
iret
xlat
pop
add
out
add
and
push
adc
pop
into
xlat
imul
mov
cmpsb
inc
lock
je
addr16
les
fcompl
ljmp
cli
outsl
lcall
aam
dec
jmp
insl
test
and
jg
jle
call
cmpsb
push
mov
lock
pop
push
xor
or
mov
in
sbb
xor
and
sub
adc
sahf
or
cmpsb
adc
jp
jp
filds
mov
cmc
pop
add
out
jg
jmp
xchg
gs
dec
fnstcw
jge
notl
mov
mull
icebp
push
push
lahf
punpckhdq
clc
or
js
xchg
testb
adc
jae
outsb
or
pop
xchg
sbb
sti
jb
xchg
jl
pusha
pop
repnz
jns
fs
sbb
lea
dec
fstpt
movsl
int3
aas
aad
or
ljmp
cmp
push
push
in
lcall
mov
and
pop
adc
dec
aad
sub
imul
and
sbb
dec
fdivrl
xor
scas
pop
lcall
into
pop
cmp
jg
and
loopne
adc
addr16
shll
ljmp
jmp
das
lods
cmp
lret
pop
ds
lock
cmpl
out
jg
jmp
xor
das
add
adc
dec
push
add
fistpll
mov
ret
leave
xor
mov
add
dec
mov
into
add
add
sub
sbb
pop
loope
loope
in
pop
add
jecxz
add
or
lret
imul
mov
dec
xchg
and
fbstp
or
gs
sbb
adc
rcll
adc
in
adc
pop
pop
les
adc
loope
xchg
into
pop
add
adc
loope
or
imul
imul
je
add
mov
into
roll
ljmp
jp
xor
xchg
xor
gs
lcall
sub
sbb
pop
loope
loope
cmpsl
fistl
add
rclb
add
into
jmp
mov
xchg
xor
add
inc
add
pop
push
into
ret
mov
mov
add
pop
or
loope
add
pop
clc
mov
into
outsb
add
cli
jo
xorl
pop
decb
push
cmp
push
orb
cli
or
inc
into
pop
cmp
xor
inc
xlat
mov
lods
rcrl
xchg
addr16
jge
je
jno
push
xchg
repz
out
sub
xor
add
cmpsb
xor
sahf
or
cmpsb
dec
mov
pusha
pop
repnz
ljmp
adc
js
mov
lds
fs
jl
jne
sub
sub
aaa
ret
sub
adcb
addb
xor
mov
inc
lds
iret
sub
jo
addr16
sbb
arpl
mov
jns
pop
add
psubb
lcall
dec
adc
or
mov
inc
mov
psubd
int3
inc
aad
dec
ljmp
mov
xchg
repnz
int
shll
xchg
lock
lea
xchg
repnz
cmpsb
sub
fs
popf
insb
test
adc
push
push
xor
or
pushf
jle
ret
ret
or
and
cmp
mov
mov
xchg
add
and
lahf
xor
test
jge
xor
dec
sub
jo
fisttps
fsts
lcall
xchg
repz
mov
or
xchg
sbb
dec
adc
xor
shlb
jne
out
or
lods
lret
inc
movsb
loop
cli
popf
insb
test
dec
frstor
arpl
int3
aas
aam
mov
loop
lcall
mov
es
lret
inc
shlb
dec
sub
add
adc
add
jne
mov
mov
shlb
arpl
add
fs
mov
xor
fucomip
leave
xor
mov
scas
int
add
adc
adc
mov
mov
adc
cmp
push
nop
push
popa
nop
jb
test
mov
mov
and
addr16
pop
repnz
adc
adc
leave
push
mov
mov
mov
sub
pop
push
xor
sbbb
aam
xchg
out
fidivrl
mov
and
dec
enter
sbb
sahf
or
cmpsb
inc
ficompl
scas
pop
mov
jns
mov
jl
xor
nop
aas
mov
adc
push
jns
and
pop
leave
test
out
sub
sub
or
add
adc
ret
ret
ljmp
stc
in
cmp
test
mov
pushf
sti
push
clc
mov
movsb
ret
xlat
lock
jp
loope
clc
lahf
push
sbb
pop
sahf
or
cmpsb
dec
adc
lahf
adc
jbe
cmpl
xchg
add
addr16
fbld
leave
repnz
lock
lds
mov
inc
mov
aam
shlb
shll
xor
dec
adcl
mull
icebp
push
pop
rclb
jbe
xchg
or
xor
add
lock
sub
xchg
mov
sbb
nop
daa
cwtl
cmp
dec
fdivrs
frstor
mov
stos
pop
xchg
jl
notb
pop
into
test
or
notl
push
xlat
inc
and
ss
pusha
pop
repnz
inc
xlat
mov
call
jp
xor
orl
into
sub
lods
cmp
cmp
outsl
lcall
aam
dec
mov
movsb
add
push
ret
cmpsb
push
nop
and
and
push
mov
mov
and
fimuls
mov
inc
and
ja
out
adc
pop
pop
mov
gs
and
mov
clc
mov
mov
jge
je
xor
pop
leave
test
lock
inc
out
xchg
push
jge
xlat
outsb
or
mov
ret
outsb
xor
scas
mov
into
xor
xor
sub
loope
loope
loope
sbb
pop
add
add
dec
pop
push
into
popa
xor
lret
and
mov
mov
lods
inc
xchg
xchg
repnz
add
sbb
xchg
pop
lds
mov
xchg
cmc
add
push
test
lret
lret
push
cld
jo
xorl
add
mov
mov
and
enter
pop
lods
xchg
pop
xchg
repnz
jnp
repz
insl
mov
lahf
punpckhdq
int3
aas
aad
cmp
push
lahf
push
mov
xchg
fisttpll
mov
out
out
jge
jp
xor
mov
or
cmpsl
fistl
add
inc
mov
roll
mov
add
into
ret
clc
mov
ret
add
push
lret
jmp
insb
or
scas
aad
fidivrs
xchg
adc
push
rcll
dec
fisttpll
inc
push
xor
sub
push
xor
and
rclb
add
jnp
nop
push
popa
nop
jo
test
inc
ret
ret
push
lret
mov
cmp
in
pop
and
rcrl
xchg
subl
jge
je
insb
lahf
adc
xchg
jb
addr16
aam
sub
frstor
mov
cmpsb
shll
adcb
jmp
push
in
add
mov
inc
mov
adc
pop
pushf
xor
adc
jl
negb
add
mov
dec
mov
add
inc
es
sub
pop
add
sub
push
mov
mov
mov
inc
mov
jo
loop
movb
dec
scas
sub
push
mov
and
pop
jle
imul
ljmp
addr16
xor
test
movsb
ret
rorb
ljmp
push
mov
jg
arpl
pop
int
addr16
jle
bound
push
lds
xor
mov
xlat
dec
or
pop
outsb
roll
add
add
add
add
sub
mov
sbb
loope
loope
loope
loope
add
repz
add
into
or
hlt
push
mov
pop
adc
add
inc
jp
pop
push
into
mov
jp
pop
xlat
lcall
into
je
mov
into
je
mov
ds
adc
inc
adc
into
xor
into
or
mov
or
loope
jp
je
mov
jmp
adc
movsb
adc
into
je
mov
jp
add
movsb
jp
sub
movsb
add
adc
pop
adc
into
je
mov
lcall
and
adc
and
or
inc
adc
pop
adc
add
xor
mov
xor
adc
movsb
add
add
adc
into
je
mov
mov
adc
into
je
mov
and
fs
les
adc
jmp
or
mov
inc
jmp
mov
and
adc
xchg
push
jno
jne
out
andps
push
xor
sub
jb
xchg
pop
int3
inc
and
ja
loope
pop
push
xor
jns
mov
dec
mov
stos
data16
gs
pushf
outsl
les
xchg
cmc
add
pushf
add
ret
push
lds
xor
and
outsl
lcall
sub
insl
pop
jecxz
push
in
sub
ret
mov
mov
mov
rolb
shlb
xchg
sbb
outsb
cld
fwait
jbe
jl
fs
sbb
mull
icebp
pop
sub
mov
scas
lret
in
clc
lahf
push
mov
fmul
dec
fstpt
leave
test
lods
mov
fldenv
out
in
jg
insl
cld
xchg
cmc
add
mull
icebp
sbb
lahf
ja
mov
icebp
fs
popf
insb
lret
dec
ret
movsl
xchg
or
cli
push
xchg
jb
xor
mov
xor
cmp
push
loopne
adc
sub
cmc
inc
pusha
ret
ret
adc
cmp
es
cs
into
cmp
pop
test
cmp
push
arpl
cmc
adc
sti
cmp
push
lds
jge
gs
pop
stos
and
sbb
pop
aad
sub
xor
lret
or
or
popa
outsb
xor
mov
into
pop
lods
mov
lret
in
pop
add
jmp
jge
mov
or
ljmp
outsb
int3
fs
ret
or
jp
popl
cld
inc
repnz
in
adc
add
inc
int3
xor
ret
mov
imul
mov
xlat
imul
jp
sbb
scas
mov
add
add
mov
add
add
mov
pop
fcoml
mov
lods
mov
lods
lods
daa
mov
and
mov
mov
and
xchg
or
jmp
popa
add
xor
xchg
jb
insl
das
mov
out
lcall
dec
ret
popa
xor
outsb
ljmp
mov
into
add
add
sub
sbb
pop
loope
loope
cmpsl
fistl
add
xlat
pop
add
xor
push
adc
pop
into
shll
lret
push
mov
adc
pop
std
outsl
lcall
cmp
or
jb
in
xor
ret
scas
pop
repz
les
int3
jae
setg
or
mov
pop
stos
add
mov
pop
repnz
fs
data16
xchg
outsb
jmp
pop
shll
jo
loop
lahf
sbb
imul
out
outsl
lcall
dec
sub
push
pop
cltd
or
ja
popa
icebp
nop
arpl
xchg
push
jno
daa
rcrl
test
xchg
dec
frstor
jp
add
cli
jbe
cmpl
jo
xorl
loope
xchg
pop
xchg
repnz
lods
inc
shll
jnp
in
sub
inc
fidivrl
inc
and
cmp
ret
cld
fwait
jbe
stos
aaa
cmpsl
ret
inc
fmuls
fsubrs
loopne
adc
dec
jge
add
add
fistpll
xchg
xlat
fs
xor
ljmp
xor
movb
pop
or
outsb
sbb
sbbb
jmp
pop
push
xor
js
stos
cmp
add
jbe
loopne
xchg
mov
push
sbb
jl
push
roll
shll
daa
cmpsb
xor
scas
dec
add
push
add
add
xlat
xchg
mov
jge
mov
sbb
loope
add
das
mov
xchg
add
jg
adc
ljmp
stc
in
mov
inc
mov
icebp
add
push
cld
dec
cmpsb
add
rcll
mov
dec
sub
xchg
cmc
add
pusha
call
lods
cmp
rcll
and
cwtl
jp
inc
xlat
mov
cmpsb
aad
into
test
inc
and
aaa
int
int3
stos
xchg
push
les
hlt
xchg
outsb
lods
stos
cmp
mov
cmpsb
push
ret
ret
je
lea
push
shlb
xor
aas
or
xchg
lret
push
shlb
aam
mov
mov
dec
mov
xchg
fs
mov
cmp
out
push
ret
cmpsb
push
aam
lods
and
pusha
cmp
test
std
or
addb
lock
imul
ret
inc
fidivrl
inc
and
xor
lea
cmpsl
aaa
push
mov
cmpsb
push
hlt
std
jnp
mov
and
add
insl
mov
lods
mov
cmpsl
orl
or
dec
fistpll
or
cmpsb
push
roll
mov
out
mov
sbb
xchg
xchg
adc
stc
jae
xchg
cs
mov
mov
xchg
add
or
push
xor
jno
push
xor
addr16
and
xlat
fistpll
outsb
ljmp
add
push
jge
jmp
popa
or
ljmp
pop
add
outsl
lcall
xchg
adc
in
lcall
cli
popf
insb
cwtl
add
jne
sbb
adc
lea
add
std
or
lds
cmpsl
push
mov
add
mov
xchg
pushf
repnz
fildll
and
mov
add
fistpll
xchg
xlat
fs
ljmp
gs
rcll
add
mov
pop
pop
or
loope
xor
inc
movsb
cmp
popa
ljmp
stc
scas
jg
je
out
push
imulb
cltd
push
std
or
inc
fisttpll
out
pop
lret
pop
ds
int3
outsb
cld
fwait
jbe
loope
shlb
cmp
jge
movsb
ret
fdivs
gs
sbb
jns
mov
inc
les
int3
and
into
cs
lret
pop
ds
xor
mov
rcr
push
lret
sti
push
fimuls
sub
mov
pop
and
xor
hlt
fcoms
pop
mov
push
mov
cmp
add
add
dec
ret
repz
jnp
in
sub
push
shll
pop
ljmp
mov
jns
fs
insb
or
divl
jg
jmp
jne
sub
nop
das
andl
and
jnp
and
mov
dec
mov
sub
outsl
sbb
add
mov
sahf
stc
or
out
insb
loop
je
adc
sub
and
push
divb
xorl
mov
mov
jo
imul
adc
push
xor
and
mov
nop
testl
inc
mov
sub
add
xchg
add
jno
sub
mov
mov
aad
int3
imul
push
xchg
add
sahf
cmp
mov
dec
mov
fisubrs
mov
movsb
push
rcll
je
shll
ret
ljmp
or
lret
fbstp
imul
imul
or
scas
jmp
xchg
mov
sti
outsl
lcall
and
pop
enter
dec
fisttpll
out
cmpsb
xor
sti
imul
adc
std
adc
push
mov
xlat
push
lret
lret
sub
xor
and
or
inc
xlat
mov
out
scas
aas
pop
test
dec
mov
push
mov
pop
loop
gs
push
xor
dec
pop
fimuls
xor
fnstsw
pusha
notb
push
imul
cmp
out
and
or
push
xor
pop
pop
mov
push
push
jmp
sub
push
sub
add
lret
ss
adc
inc
inc
lret
pop
add
jp
mov
dec
imul
pop
clc
mov
xor
xlat
filds
adc
add
test
lods
pop
mov
mov
mov
lcall
jb
cs
lds
iret
das
dec
roll
aad
sbb
cmpsl
and
mov
sub
dec
mov
sbb
aam
repz
lea
stc
orl
adc
or
data16
push
cld
or
push
lret
mov
jg
mov
jge
arpl
cmc
push
dec
fimuls
and
push
test
lods
xchg
add
jecxz
push
in
jbe
bound
shlb
sbb
and
jns
jmp
cmpsl
aas
scas
lret
int
shlb
push
scas
pop
jle
jno
jecxz
btr
inc
mov
xchg
mov
lds
iret
sbb
pop
cmp
xor
inc
aam
dec
scas
movsl
xor
aam
sub
test
cmp
loop
hlt
xchg
outsb
sbb
iret
stos
pop
mov
pop
push
fmuls
fdivrs
cld
xchg
cmc
add
dec
fdivrl
jnp
in
psubq
jl
push
fimull
fidivl
jl
addr16
or
mov
jns
pusha
outsb
add
sub
mov
jg
dec
push
mov
jns
push
add
pop
int
lea
out
sbb
cmp
fildl
mov
test
mov
enter
adc
inc
fidivrl
adc
sub
pop
into
test
mov
and
mov
test
pop
lcall
int3
xor
outsb
out
fs
mov
outsb
gs
gs
scas
mov
jbe
sub
sbb
pop
loope
loope
jp
pop
add
sub
or
loope
fistps
push
adc
pop
into
leave
xor
lret
or
ljmp
mov
cmp
mov
cwtl
adc
xchg
add
sahf
push
in
imul
insl
test
push
ret
cmpsb
push
mov
daa
mov
and
pusha
in
bound
jp
in
sbb
fs
popf
insb
test
cmpsl
xchg
add
add
or
push
add
fistpll
mov
pop
in
pop
add
mov
into
je
mov
inc
mov
rolb
shlb
xchg
jb
dec
pusha
mulb
sbb
hlt
push
cld
push
mov
mov
das
sti
sahf
insl
int3
jp
jbe
loopne
pop
pushf
xor
adc
mov
dec
call
mov
mov
fistpll
and
mov
leave
cmp
pop
fnstenv
jmp
jg
inc
rcll
and
stos
cmp
dec
inc
rclb
sub
jo
xorl
pop
repz
repz
out
in
sbb
mov
ds
test
pop
rolb
rcrb
gs
bound
mov
sbb
clc
jne
mov
stc
jnp
mov
scas
and
cmp
cwtl
or
cmc
gs
pop
cmpsl
movsb
ret
ds
aaa
cmpsl
aaa
push
mov
mov
movsl
fimuls
mov
jmp
jge
cld
data16
xchg
outsb
lahf
cmp
xor
jg
mov
test
aad
fwait
push
push
cld
push
push
lahf
punpckhdq
and
ja
mov
mov
test
xchg
dec
ret
and
notb
cld
fwait
jbe
imul
int
fnstcw
add
jno
mov
sbb
punpckhdq
jo
arpl
dec
fdivrl
xor
fisttpl
fnsave
inc
mov
or
pop
rolb
sarb
shlb
xchg
gs
pop
leave
pop
cmp
and
mov
pop
xchg
repnz
mov
fsubrl
iret
mov
ret
cltd
push
xor
testb
and
aaa
pushf
sbbb
ljmp
in
inc
fmuls
fsubrs
inc
aam
dec
out
pusha
notb
ss
mov
mov
and
test
std
or
mov
movsb
imul
push
cmc
sbb
out
and
push
inc
and
aaa
mov
xchg
repz
in
loop
lcall
das
dec
mov
sbb
sbb
jl
notb
ljmp
in
bound
mov
fiaddl
stc
pop
enter
cmp
sahf
cmp
mov
lret
ljmp
mov
pusha
sti
imul
pop
lds
xchg
addr16
test
jmp
clc
notl
aaa
scas
aas
pop
test
dec
mov
mov
jmp
inc
shlb
sbb
push
cmpsb
or
icebp
popa
add
and
mov
cmp
adc
push
cwtl
push
imul
les
int3
and
insb
loop
je
push
fmuls
fdivrs
xchg
push
mov
cmpl
jo
outsl
or
jmp
bound
inc
mov
mov
xchg
cmc
add
lods
and
pop
add
imul
add
push
pusha
mull
icebp
cmp
sbb
or
or
jae
sub
movsl
xor
and
xchg
jb
cmp
cmp
outsl
or
mov
aad
cmp
sbb
adc
cmp
and
mov
jmp
push
fwait
or
jge
push
lahf
push
nop
pop
xchg
adc
sub
lds
out
fs
fistpll
mov
gs
pop
mov
mov
jp
jp
jp
xor
lret
or
loope
loope
loope
jp
pop
add
and
add
dec
pop
push
into
ret
xor
lret
add
sbb
adc
lea
inc
shll
mov
pop
int3
stos
xchg
movb
inc
test
push
mov
pop
jp
jns
rolb
sarb
adc
scas
sub
les
int3
pop
mov
filds
mov
xchg
jb
push
lret
mov
pop
mov
insb
loop
je
fimuls
push
mov
loopne
pop
lret
lret
mull
icebp
cmp
sbb
lods
cmp
sbb
mov
pop
push
xor
ds
lret
lret
scas
aas
pop
test
push
movsb
sbb
cmpsl
aaa
push
mov
pushf
scas
and
add
jmp
and
lcall
xor
pop
add
cmp
mov
mov
lock
inc
addr16
pop
ds
sahf
inc
shll
xor
ja
sbb
or
lcall
sbb
gs
leave
pop
cmp
sub
clc
or
insl
in
sbb
bswap
inc
shll
mov
stc
imul
cmp
mov
popl
xchg
icebp
add
outsl
loope
adc
or
js
js
ljmp
lret
dec
sub
inc
cs
scas
aas
scas
lret
ret
push
sbb
push
pop
into
pop
cmp
jno
and
fldt
jl
jne
sub
outsl
rolb
xor
addr16
dec
insb
lock
pop
lahf
add
and
lea
lret
lret
aad
sub
cmp
jne
out
or
mov
mov
in
std
inc
push
xor
cs
pop
xchg
adc
push
adcl
adc
in
sbb
pusha
jmp
lods
sub
cli
push
fisttpl
fnstsw
pushl
xorl
jbe
pop
rolb
shlb
xchg
add
jns
lods
cmp
ret
push
lds
xchg
cld
bswap
and
and
push
lock
pushf
outsl
xchg
xchg
or
je
rclb
addr16
add
push
divb
xchg
fildl
mov
call
stos
adc
xlat
jl
jb
xchg
test
xchg
xchg
push
pushf
sti
push
mov
inc
push
hlt
push
cld
jnp
mov
jle
pop
cmp
and
cmp
dec
dec
into
pop
cmp
xor
cmp
cmp
mov
movsb
std
jg
mov
ficomps
test
mov
mov
inc
mov
inc
int
and
jb
inc
shlb
pusha
pop
repnz
jp
jp
mov
xchg
lock
mov
aad
lahf
punpckhdq
out
sti
cs
push
lds
sub
test
mov
sbb
xor
sub
lock
bound
sarb
mov
mov
and
or
or
cmpsl
pushf
add
std
or
outsb
adc
push
and
xlat
xchg
or
outsb
mov
popa
xor
xor
dec
jbe
sub
sbb
pop
loope
loope
xchg
pop
add
add
add
scas
pop
push
into
xor
mov
xor
xlat
into
roll
mov
add
pop
int3
inc
and
gs
pop
push
lret
lret
lods
cmp
push
les
pushf
sti
push
test
aam
ljmpw
stc
mov
mov
xchg
aas
mov
hlt
jg
jae
in
movsl
push
xchg
repz
mov
outsb
or
sub
fwait
or
jge
xor
test
mov
dec
fstpt
xor
scas
dec
in
outsl
lcall
and
pop
add
ds
imul
idivl
mov
ds
fcoml
mov
cmc
pushf
outsl
test
dec
fstpt
and
fmuls
fsubrs
or
fistpl
push
lds
iret
das
add
push
lret
mov
fbld
scas
cmp
mov
mov
lods
mov
stos
dec
ret
ret
or
jbe
cmpl
push
lds
lahf
push
jmp
out
mov
pushf
or
in
mov
jmp
push
in
sub
daa
shlb
mov
fstl
test
daa
mov
and
jg
cmc
outsb
cld
fwait
jbe
call
xchg
add
sub
fnsave
mov
gs
and
jb
xchg
xor
aas
pop
test
jp
adc
stos
cmp
sub
roll
aad
push
roll
shll
or
adc
or
fistpl
test
inc
daa
sarb
xor
int
aad
adcl
sbb
daa
mov
and
orb
cli
or
push
fmuls
fdivrs
lds
iret
das
mov
fistl
sub
adc
pop
aas
lret
daa
mov
and
dec
fimuls
inc
push
les
int3
paddsw
mov
outsl
clc
outsb
or
adc
dec
das
fidivl
push
mov
js
fisttps
mov
pop
jp
and
je
lea
add
xor
sub
and
jbe
jns
jmp
test
jge
or
mov
mov
sbb
push
gs
push
in
or
rclb
push
aam
sub
loopne
jb
in
sbb
add
ljmp
sub
mov
jge
jge
jge
jge
ljmp
lret
cmc
call
add
sbb
add
or
loope
pop
jmp
adc
sub
xlat
mov
mov
sbb
pop
add
arpl
into
xlat
into
mov
jp
inc
repnz
adc
pop
push
add
add
jmp
and
into
add
jp
je
mov
loopne
out
fistpll
or
xor
ret
popa
shrl
lcall
inc
adc
pop
or
je
fimull
fidivrl
ret
inc
shlb
jmp
jmp
mov
lds
pop
jp
ja
cs
xchg
add
lods
cli
add
cli
sti
jmp
iret
pop
shll
in
add
mov
jmp
sub
call
cmp
xor
arpl
dec
mov
mov
jmp
xchg
and
mov
sub
jmp
inc
int3
inc
and
mov
add
pop
pushf
popl
jmp
rcrl
scas
pop
mov
sub
add
mov
shr
mov
jmp
jmp
cmp
adc
jmp
sti
jne
mov
sti
jbe
cmpl
jnp
mov
sbb
mov
cs
call
lcall
fwait
or
cmp
jnp
mov
jp
adc
adc
mov
jmp
jbe
jbe
loopne
imul
cmc
add
jle
call
mov
jmp
add
or
add
cmp
add
jmp
mov
shll
fs
pop
jmp
out
jno
pop
push
xor
js
lret
add
adc
add
mov
fisttps
outsb
gs
pop
mov
inc
out
xlat
and
mov
outsb
mov
popa
shl
add
in
add
inc
add
xor
imul
cmp
outsb
cld
fwait
jbe
fnstcw
xchg
dec
dec
mov
jmp
fs
imul
dec
adc
dec
xchg
push
pushf
sti
push
mov
pushf
popl
jmp
and
shll
xorl
or
mov
movsb
stos
jmp
data16
sar
jmp
sbb
lods
xor
lea
adc
popl
jmp
pop
fmuls
fdivs
in
xchg
push
call
jmp
mov
scas
push
jbe
loopne
mov
scas
leave
cmp
cmp
sarb
sbb
call
sub
add
fcomi
sti
incl
pop
aas
lret
les
int3
sub
jo
aam
mov
sub
jmp
in
repz
push
call
mov
fistpll
daa
inc
mov
clc
push
lahf
push
mov
hlt
push
jmp
test
loopne
cmc
gs
ds
out
xor
outsl
push
add
insl
idiv
fisttpll
mov
mov
cmp
xchg
mov
das
sbb
call
push
shlb
push
daa
sbb
call
push
xchg
or
insl
xchg
or
in
mov
js
xor
fs
push
out
jg
jmp
and
mov
out
xchg
push
jge
or
mov
ret
sbb
pop
add
add
jp
jge
dec
sbb
mov
ficoms
add
mov
pop
popa
jle
jb
in
out
fstpt
aam
dec
lcall
jge
xchg
testb
and
les
mov
stos
dec
int
and
xor
push
clc
push
mov
js
pusha
pop
fwait
or
jns
dec
frstor
mov
mov
ret
stc
jne
mov
outsl
loopne
adc
add
xlat
out
popa
icebp
nop
arpl
cmpsb
dec
adcb
loop
ljmp
and
add
leave
gs
adc
pop
adc
or
dec
dec
into
add
or
pop
dec
add
psraw
or
adc
add
xchg
add
adc
lock
pop
jb
jnp
cltd
or
jno
stos
cmp
pop
out
in
jle
enter
pop
movsb
mov
fbstp
stos
cmp
inc
stos
cmp
jge
jle
call
cld
paddb
mov
adc
in
sbb
jb
jns
jmp
xor
lret
push
lret
jmp
jo
xorl
or
jmp
or
sbbl
dec
or
pop
fstpt
mov
movsl
addl
add
ljmp
mov
test
pushf
sti
push
hlt
add
lret
inc
shll
shlb
push
aaa
ret
cli
push
cltd
or
jo
mov
gs
pusha
test
test
push
notb
xchg
jb
jp
mov
cmp
and
jo
inc
shlb
pop
bound
psubd
lret
xchg
addr16
cli
popf
insb
popf
dec
rolb
shlb
outsl
lcall
sub
add
jg
sbb
adc
ss
pop
xchg
repnz
cmp
out
dec
ret
shll
xchg
roll
inc
xchg
outsb
repz
cmc
adc
das
int3
jo
addr16
sbb
stos
inc
pop
fdivl
in
lods
sub
stos
cmp
inc
hlt
jle
mov
cmp
jo
imul
push
mov
es
cmp
sub
and
repz
cmc
sbb
int
stos
cmp
inc
mov
fistpll
xchg
and
jg
mov
and
sbb
or
ret
je
mov
adc
pop
sbb
sbb
ret
je
pop
adc
pop
jp
mov
adc
or
loope
mov
pop
clc
mov
mov
push
mov
sub
repz
cmc
sbb
sahf
mov
mov
movsl
xor
lods
lret
inc
out
push
test
repnz
pop
repnz
adc
or
roll
shll
inc
shlb
shll
aam
dec
lcall
mov
mov
flds
cmc
sbb
shr
push
lahf
push
cli
jge
je
insb
repz
cmp
add
int
fidivrl
shlb
xchg
repnz
fwait
adc
icebp
jl
jne
jo
push
shll
push
in
add
xchg
test
push
fnstsw
scas
aas
pop
test
xor
loopne
jb
fmull
mov
inc
and
das
test
pushf
add
std
or
sub
out
ja
xorb
sbb
aad
sub
je
push
ret
cmpsb
push
in
mov
inc
mov
int
mov
pop
shll
insb
in
bound
sbb
imul
mov
dec
sub
cmp
xchg
mov
hlt
push
cld
adc
scas
sbb
rcll
ljmp
pop
pop
or
loope
pop
outsb
ret
leave
popa
pop
ljmp
movb
add
xlat
scas
mov
sub
cs
cmp
or
mov
inc
mov
cmp
orb
adc
dec
rcll
and
jne
mov
out
lock
bound
cmp
inc
fisttpl
daa
mov
dec
mov
xchg
cmpsb
fimull
push
mov
out
fs
fucomip
je
xor
pop
add
jp
gs
je
scas
into
add
pop
xlat
pop
les
adc
loope
and
fs
lods
cmp
push
test
push
testb
xor
add
mov
jns
jo
loop
and
push
xor
cwtl
decl
mov
outsb
cld
fwait
jbe
xor
cmp
push
mov
mov
mov
inc
mov
inc
jmp
push
in
insb
lods
or
cmp
sub
adc
hlt
pop
jecxz
inc
shll
push
popa
nop
jb
mov
dec
mov
dec
mov
xchg
mov
popf
or
mov
dec
mov
popa
nop
aaa
bnd
jp
or
sbb
gs
inc
and
cmp
idivl
fs
pop
jno
xchg
cmc
add
rcll
push
mov
decl
repnz
lock
lds
test
push
jnp
add
inc
shlb
sub
sbb
loope
lea
mov
sbb
xchg
add
std
or
adc
std
push
lahf
or
repnz
pop
repnz
jns
ja
loope
scas
movsb
ret
subl
testb
sub
shlb
gs
sbb
data16
xchg
outsb
jmp
or
dec
int3
inc
and
dec
sub
cmp
fmuls
pop
jp
jle
jge
je
rcrl
scas
pop
mov
insl
std
test
movsl
sub
cwtl
adc
imul
add
mov
scas
leave
cmp
cmp
in
lcall
adc
jne
jnp
mov
mov
mov
and
or
mov
cmpsl
data16
or
cli
push
ljmp
stc
out
lods
cmp
fwait
or
push
arpl
xchg
gs
fisttps
sahf
or
cmpsb
sbb
test
pop
test
pop
push
xor
jns
pop
dec
aad
sub
push
push
lds
or
orb
add
cwtl
sbb
nop
push
popa
nop
jb
aam
sub
and
mov
stc
or
in
notb
push
xor
mov
xor
data16
xchg
outsb
andb
push
fisttpll
out
cmpsb
sub
les
int3
cmp
dec
adc
or
jno
and
fistpll
jmp
ret
sarl
sbb
inc
call
fists
xor
popa
pop
mov
je
ljmp
into
xlat
sub
jbe
sub
loope
gs
add
adc
add
jge
push
into
popa
fildll
lret
and
dec
into
ret
add
jg
clc
insl
std
test
popa
sti
je
lea
jle
mov
fldcw
dec
ret
mov
or
lds
scas
pop
cld
lea
aad
out
and
cmp
movsl
aaa
cmpsl
ret
jmp
in
mov
mov
and
dec
fdivrl
xor
sbb
lcall
ljmp
jno
sbb
inc
out
and
fistpll
jmp
xor
rcrl
popa
dec
and
mov
adc
mov
mov
xor
push
test
cmpsl
ret
mov
mov
lods
lret
inc
icebp
into
push
shlb
pop
test
jle
or
sbb
push
mov
repnz
scas
pop
mov
mov
cmp
pop
xchg
jb
data16
pusha
pop
repnz
mov
sbb
cmp
and
mov
inc
mov
sub
lcall
xor
call
mov
fmull
testb
out
sub
xor
jo
xorl
cmp
rclb
pop
mov
and
adcb
jecxz
divb
xchg
xchg
jb
jle
xor
notl
xchg
push
pushf
sti
push
test
jae
or
dec
fisttpl
fnsave
in
jge
testl
loopne
jno
xorb
mov
mov
mov
or
mov
out
push
lcall
outsb
or
je
sbb
pop
popa
outsb
dec
dec
scas
mov
dec
sub
dec
sub
lret
mov
add
lret
jno
sbb
inc
mov
sbb
inc
jge
pop
push
into
mov
jge
mov
mov
das
iret
mov
ret
in
jle
movl
stos
cmp
inc
mov
shll
sbb
sub
sub
xor
push
sbb
gs
pop
repnz
imul
insl
xorl
adc
dec
scas
xor
int
int
nop
push
popa
nop
es
jbe
cmpl
pop
sub
je
jns
jmp
cmpsb
cmp
mov
negl
scas
pop
fsubrl
pop
cmp
dec
cld
jle
mov
jp
inc
rclb
and
inc
sub
aas
aaa
mov
inc
mov
orb
decb
inc
mov
xchg
popa
xchg
iret
sub
or
inc
aam
dec
test
mov
rorb
push
mov
in
jge
notl
in
lcall
push
jno
je
jl
jne
insb
mull
icebp
or
push
xor
addr16
jle
mov
and
aaa
add
add
jnp
lea
jno
xorb
cs
insb
or
mov
stc
imul
stc
cwtl
imul
xlat
inc
and
jbe
cwtl
push
imul
sbb
aad
xchg
inc
out
lcall
jge
outsb
je
sarl
sbb
inc
lcall
stos
cmp
dec
aad
enter
mov
xchg
repz
out
xor
leave
pop
cmp
and
xor
or
xchg
jb
dec
std
imul
cmp
insl
std
test
lds
mov
inc
and
das
ss
inc
mov
mov
mov
ljmp
push
aaa
ret
sbb
aad
xchg
pop
adcl
pop
lret
scas
pop
in
test
jge
or
sub
pop
pop
orl
mov
out
or
add
popa
pop
pop
ljmp
jge
mov
jge
jge
jge
sbb
pop
loope
loope
mov
xchg
adc
add
xchg
push
adc
pop
into
popa
imul
pop
add
jg
xchg
testb
sub
dec
enter
sub
insl
hlt
pop
out
iret
pop
cmp
movsl
and
adc
in
sbb
inc
rclb
sub
xor
sub
pushf
xor
add
lahf
punpckhdq
lea
and
lds
mov
out
mov
or
pop
jb
jnp
lods
lret
inc
scas
or
or
cld
xchg
cmc
add
lock
sbb
sbb
push
dec
mov
loopne
movsl
xor
call
popa
cli
push
sahf
or
cmpsb
punpckhbw
addr16
inc
mov
mov
sbb
xchg
pusha
xlat
push
int
and
jl
push
lret
jmp
dec
ret
sarl
dec
sub
pusha
lret
dec
fistpll
sti
sahf
insl
lea
and
jno
jecxz
in
imul
mov
ja
popa
add
pop
jae
fs
pop
lock
jp
jp
addr16
pop
jmp
icebp
nop
arpl
stos
inc
add
rcrl
stos
data16
outsb
cld
fwait
jbe
jne
outsb
or
or
test
lock
add
je
jae
jo
loop
adc
leave
mov
pusha
adc
pop
outsl
push
sbb
pop
pop
or
loope
mov
xlat
into
dec
into
add
lret
adc
pop
or
loope
dec
dec
and
fs
sbb
leave
mov
adc
adc
add
in
adc
pop
lea
mov
lds
adc
add
add
les
adc
loope
and
jp
mov
dec
lcall
jmp
xor
mov
dec
jmp
adc
mov
jp
je
es
cs
fmull
mov
icebp
nop
arpl
jne
jmp
or
lret
ljmp
imul
xor
adc
pusha
notb
adc
xor
sbb
xchg
adc
lods
and
xor
int
push
les
iret
stos
pop
xchg
xchg
add
jae
mov
dec
iret
pop
cmp
aaa
movsb
and
sti
imul
adc
cwtl
push
imul
in
bound
sbb
fsts
lods
pop
mov
sbb
in
cltd
push
in
loopne
add
std
or
repz
notb
and
adc
adc
sub
test
lods
mov
scas
leave
arpl
xchg
mov
pop
jb
sub
lds
adc
push
je
bound
inc
and
cmp
add
scas
sbb
inc
shlb
mov
sbb
dec
leave
xor
clc
jp
jp
dec
enter
cs
cmc
pushf
outsl
mov
leave
add
add
gs
outsb
pop
cmp
adc
pop
adc
lcall
lret
and
testl
imul
jp
xlat
xlat
fildll
xor
lcall
xor
cmpsb
daa
mov
and
orl
repz
cmpl
int3
inc
and
and
push
aaa
ret
cld
xchg
cmc
add
ficoml
pop
mov
dec
test
pop
in
pusha
repz
cmc
pop
pop
leave
pop
cmp
and
push
les
dec
sub
inc
in
jl
jne
inc
inc
fisttpl
fnstsw
aam
shll
xchg
adc
lea
mov
sbb
xchg
es
cs
test
xchg
cmp
icebp
insl
std
test
outsl
lock
inc
mov
mov
fldt
mov
dec
mov
insb
lahf
sbb
xchg
adc
and
mov
cmpsb
xchg
pop
xchg
adc
mov
stos
into
cmp
das
fidivl
std
insl
hlt
pop
in
insb
out
adc
or
jecxz
push
in
inc
int3
inc
and
add
jge
pop
xchg
adc
insl
loop
pop
loop
aad
iret
stos
pop
mov
jnp
mov
jp
jle
call
add
add
stos
cmp
or
push
xchg
repnz
popf
insb
mov
movsb
cmp
inc
fisttpll
mov
icebp
nop
arpl
sbb
push
mov
sub
jmp
iret
and
adc
mov
lds
iret
fs
fdivl
in
addr16
pop
ds
andl
inc
lret
pop
ds
imul
sbb
push
sub
push
add
outsb
stc
jge
je
insb
rclb
lods
pop
mov
add
xchg
adc
xchg
pop
bound
xor
scas
std
je
lea
aas
scas
lret
jge
pusha
pop
repnz
xlat
jg
pusha
pop
repnz
xchg
mov
sbb
xor
xor
adc
add
add
mov
push
add
fs
pop
outsb
sbb
ljmp
inc
or
xor
mov
mov
fsubrs
ljmp
push
ret
ret
dec
fstpt
xchg
adc
gs
add
lcall
ffreep
outsb
sbb
sarl
sbb
inc
lcall
add
mov
inc
fimull
fidivl
sbb
fwait
or
xor
pop
jp
and
dec
das
fidivl
es
cs
ss
or
sbb
jno
xorb
mov
jle
xchg
testb
iret
sub
out
adc
or
mov
dec
int3
inc
and
cwtl
decl
in
dec
fnstcw
mov
push
shlb
xorb
jbe
cmpl
stos
cmp
dec
sahf
pop
xchg
adc
and
jns
mov
and
and
mov
adc
sbb
xor
add
pop
jno
jne
out
nopl
xlat
inc
shll
lds
sub
push
sub
or
dec
sub
jno
mov
js
ss
xchg
jb
es
mov
push
ret
cmpsb
push
cli
sub
aaa
fwait
or
sbb
pop
int3
stos
data16
roll
aad
loope
lock
bound
popa
loopne
adc
add
mov
jg
mov
push
rolb
sarb
mov
ljmp
pop
popa
cmp
adc
pop
adc
jmp
imul
lret
jmp
xlat
imul
and
scas
jge
dec
jp
jmp
inc
mov
mov
data16
insb
or
scas
imulb
test
dec
xlat
inc
and
jbe
out
adc
pop
add
push
imul
ljmp
mov
popa
loope
adc
xor
out
or
add
xor
leave
mov
je
jge
mov
jge
jge
jge
push
imul
lret
mov
popf
push
sbb
inc
xlat
xor
push
adc
pop
into
pop
lcall
sbb
adc
repz
cmc
adc
mov
in
sbb
and
cli
sbb
jp
and
test
jge
mov
xchg
icebp
add
or
rcrb
scas
pop
xchg
int
fidivrl
dec
adc
add
jne
out
lgdtl
xor
clc
push
lahf
push
sub
xor
jg
jmp
movsb
push
xchg
pushf
or
daa
mov
and
mov
mov
and
cmp
lods
xor
popf
push
xchg
repz
mov
lea
push
popf
or
sub
outsl
lock
inc
out
jno
xorb
add
call
hlt
push
lds
dec
mov
clc
or
rclb
mov
pop
aas
lret
mov
push
inc
and
sub
cmp
push
lds
push
fstpt
nop
sbb
pop
repnz
fs
out
std
test
push
fstpt
inc
cmpsl
inc
iret
pop
cmp
ds
jne
out
sbb
jns
mov
sbb
setge
adcl
test
mov
push
ret
ret
sub
ljmp
mulb
andnps
pop
cmp
pusha
cmpsl
cmp
jne
bound
insl
hlt
pop
lods
dec
fisttpl
jnp
in
inc
dec
xlat
inc
and
push
call
jno
pop
push
xlat
inc
and
or
adcl
lret
lret
jb
xchg
sub
ret
inc
fidivrl
sub
sub
in
aam
sub
out
jmp
mov
xchg
pop
sbb
inc
or
movb
inc
and
movb
ret
adc
pop
les
adc
loope
and
lcall
dec
jge
leave
pop
cmp
outsb
cltd
pop
xchg
adc
imul
mov
out
popa
leave
jp
or
jp
jp
mov
add
lret
mov
sbb
inc
xor
sbb
inc
adc
adc
pop
sub
adc
push
pop
les
adc
movsb
sub
and
add
sbb
mov
add
stos
sub
lds
mov
rcrb
or
cmpsb
dec
xchg
sbb
sbb
aad
addl
xchg
push
mov
es
lods
pop
mov
jp
lcall
jmp
lret
pop
iret
stos
pop
repnz
xor
cmp
or
jns
mov
mov
mov
sbb
mov
mov
and
push
lret
pop
ds
xlat
inc
shlb
pop
jb
jle
in
sbb
pop
sub
mov
xchg
movsb
cmp
in
sbb
pop
adc
scas
xor
notl
adc
add
or
jo
loope
adc
add
push
xor
sub
negl
lods
cmp
mov
rcrb
scas
pop
mov
out
jg
jmp
cmp
outsb
fcoms
mov
in
je
imul
add
cmp
outsb
cld
fwait
jbe
cmp
adcb
loop
ljmp
mov
mov
sbb
adc
lcall
lock
sbb
lods
outsb
hlt
push
cld
or
dec
pushl
jl
negb
pusha
notb
ret
std
rclb
cmpsb
push
in
icebp
popa
add
pop
dec
fnstcw
outsb
or
jg
outsl
lcall
jmp
jge
jmp
mov
push
cmp
sub
xlat
inc
and
cmp
sub
dec
int3
out
fs
lcall
ljmp
sbb
inc
scas
xchg
popa
and
inc
adc
pop
or
pop
call
mov
pop
enter
xlat
clc
out
fists
xor
ret
sbb
gs
jmp
add
pop
pop
outsb
leave
gs
inc
scas
mov
pop
ret
daa
test
add
out
adc
push
adc
and
stos
cmp
fmuls
fdivrs
insb
stc
imul
push
jns
pusha
stos
lods
lret
inc
loope
data16
xchg
outsb
lahf
jg
jp
in
pop
lds
xchg
gs
mov
nop
push
popa
nop
cmp
lods
cmp
push
les
xor
scas
sbb
pop
leave
test
ficomps
xchg
cmc
add
xor
arpl
jbe
loopne
pop
fimuls
pop
addl
rolb
dec
cmpsl
or
outsl
jmp
pop
fimull
fidivl
mov
xchg
lock
push
fmuls
fdivrs
lret
pop
ds
into
inc
aad
dec
mov
call
cmp
sub
fisubrl
stos
cmp
pop
cmpsb
xor
int
aam
roll
shll
lcall
mov
lods
cmp
movsl
xor
mov
xlat
inc
shlb
mov
fistpll
fstpt
fdivrl
xchg
add
out
xlat
and
mov
pop
outsb
sbb
ljmp
inc
jp
jp
in
inc
nop
or
sahf
add
mov
sahf
cmp
mov
ret
mov
xchg
adc
adc
stos
pop
sbbl
inc
and
daa
cmpsl
aaa
push
mov
in
hlt
std
jg
mov
ficomps
test
mov
ret
push
lds
mov
lods
lret
inc
loope
pop
les
rolb
shlb
icebp
popa
add
xor
jnp
bound
pop
jb
add
sahf
cmp
fistpl
test
jge
cmp
pop
ds
js
ja
loope
mov
sbbb
mov
mov
movsl
xor
mov
pop
std
insl
hlt
pop
sbb
iret
stos
pop
mov
rcll
daa
mov
movsb
mov
cmpsl
ret
inc
lds
iret
and
cmpsb
xor
scas
dec
jp
jp
xchg
adc
in
sbb
adc
push
ja
loope
xor
add
dec
ret
ret
and
sub
in
jge
testl
mov
ret
ds
repz
icebp
nop
arpl
ret
mov
pop
ds
push
xchg
jb
gs
rcrb
sbb
sub
sub
in
adc
cmp
jae
xchg
pop
adcb
xorb
push
xor
addr16
cld
xchg
cmc
add
pop
insb
or
adcl
icebp
jno
xorb
lods
lret
inc
mov
mov
pop
test
and
aaa
xor
and
push
cmp
cwtl
push
imul
outsb
cld
fwait
jbe
lock
mov
push
jecxz
push
in
mov
fstps
repnz
jle
in
sbb
daa
inc
mov
mov
mov
and
insl
add
xlat
inc
and
sbb
dec
fidivrs
adc
outsb
dec
out
xchg
jmp
pop
leave
pop
gs
xor
lcall
lcall
pop
loope
loope
lds
add
inc
sbb
inc
and
push
into
popa
jmp
ret
mov
mov
lock
inc
mov
and
jo
xorl
scas
dec
call
test
sub
addr16
sbb
pop
ret
outsb
pop
sbb
push
sbb
pop
or
dec
sbb
mov
into
add
add
lret
adc
push
into
push
into
sub
jecxz
repnz
pop
push
adc
add
add
and
lcall
xor
mov
pop
outsb
pop
sbb
pop
stos
push
sbb
pop
pop
or
loope
in
adc
pop
pop
or
loope
les
adc
loope
lcall
mov
push
adc
pop
into
ret
or
lret
add
sbb
jg
mov
mov
mov
and
aas
lods
and
inc
das
mov
inc
aam
sub
lcall
insl
hlt
pop
out
adc
mov
pop
sti
push
roll
aad
lret
mov
int
addr16
imulb
test
jp
jp
in
inc
insb
icebp
popa
add
inc
test
mov
sbb
mov
jl
dec
sub
popa
pop
insb
or
xor
stos
hlt
jne
mov
in
sti
sahf
insl
mov
ret
addr16
push
loop
sti
sahf
insl
mov
adcl
inc
shll
sbb
push
or
push
clc
ja
xorb
adcl
test
les
int3
cs
fimuls
cmpxchg8b
mov
and
pop
clc
imul
lahf
punpckhdq
mov
fs
sbb
lods
and
pop
inc
rolb
sarb
jo
jnp
in
dec
inc
jecxz
push
in
stos
xor
mov
dec
mov
shll
lahf
aaa
scas
aas
pop
test
popa
nop
daa
sbb
mov
mov
ja
xorb
roll
rcll
inc
aam
dec
lcall
and
jns
outsb
or
sbb
jbe
loopne
push
inc
and
sub
addl
xchg
jb
insl
imul
ja
insl
hlt
pop
into
je
xchg
testb
sbb
pop
fisttpl
fnstsw
mov
fucomp
fs
popf
insb
cwtl
movsb
movsb
ret
ds
inc
aam
sub
adc
and
inc
and
sbb
push
mov
les
dec
sub
or
test
fisttps
flds
push
mov
xlat
push
into
pop
cmp
pusha
mov
and
mov
mov
jmp
jge
lcall
mov
scas
add
scas
jbe
sub
imul
lret
lret
add
dec
sbb
inc
mov
pop
push
into
je
imul
adc
pop
inc
fmuls
fsubrs
ljmp
cmp
and
out
adc
inc
add
mov
mov
pop
enter
fstpt
mov
imul
insl
in
fcomps
scas
pop
mov
pop
int3
stos
data16
push
std
sbb
sahf
or
cmpsb
inc
jl
leave
std
test
pop
enter
mov
lods
lret
inc
mov
fimull
fidivl
mov
mov
and
fsubrl
mov
addr16
cmp
lcall
loopne
jb
sub
push
lds
sub
mov
inc
mov
pusha
stc
imul
pusha
pop
repnz
xchg
push
pushf
sti
push
test
insb
lds
fldl
mov
out
or
rcll
inc
into
jae
xchg
lcall
push
lahf
push
mov
movsb
in
jae
xchg
jg
outsl
or
out
in
icebp
nop
arpl
shrb
inc
and
aaa
mov
aad
cmc
gs
pop
pop
fisttpl
fstl
xlat
pop
int3
stos
data16
jl
jne
pusha
hlt
jns
mov
lcall
xchg
add
addr16
insl
std
test
ret
push
mov
inc
sub
jp
mov
std
imul
cld
xchg
cmc
add
mov
aam
sahf
or
cmpsb
add
jae
xchg
int
les
scas
lret
sub
sub
add
fisttpll
out
xchg
push
pushf
sti
push
mov
push
std
xchg
or
xchg
mov
and
outsl
repz
cmc
daa
loop
notl
xchg
cmc
add
xor
pop
and
js
mov
movl
fwait
or
jb
cmp
int
aam
dec
jmp
jg
or
mov
shrl
movsl
xor
pop
xchg
repnz
mov
std
or
push
lret
mov
dec
fistpll
jae
out
or
lcall
je
mov
xlat
xlat
xor
xlat
jbe
sub
sbb
pop
loope
loope
outsb
aaa
sbb
inc
fadds
add
dec
pop
push
into
leave
imul
mov
aas
aam
rclb
and
jb
xchg
aad
mov
mov
sbb
outsb
jmp
push
in
dec
dec
les
int3
pop
ret
dec
fdivrs
add
sahf
jp
movsl
xor
inc
mov
test
call
pop
stos
inc
push
ret
ret
xor
stos
cmp
imul
es
ret
push
lds
jl
sub
dec
adc
adc
mov
jg
cmp
and
jns
mov
lods
xor
cmp
mov
mov
push
test
push
test
jbe
imul
or
mov
mov
xchg
jb
cmp
sahf
or
cmpsb
paddsw
jl
jns
jne
out
inc
int3
push
shll
das
fidivl
adc
insl
std
test
pop
ljmp
stc
or
ret
cmpsb
push
xchg
mov
jg
insb
xor
in
sti
sahf
insl
mov
cmpsl
aaa
push
mov
repz
out
xchg
pop
xchg
adc
js
xchg
testb
in
push
call
movb
cmp
sbb
lods
inc
ss
inc
lret
lret
xor
repnz
pop
repnz
es
dec
mov
jno
jne
aaa
cmpsl
ret
add
cwtl
push
pushf
sti
push
hlt
cwtl
or
mov
fldl
mov
imul
lds
dec
sub
jno
aad
sub
bound
mov
pop
cmp
jg
movsl
xor
and
jle
mov
shlb
cmpsb
and
cmp
sub
xchg
mov
mov
insl
jmp
sbb
or
jns
ret
ret
inc
and
aaa
stc
jno
xorb
mov
loope
lcall
dec
sub
or
jle
mov
jp
push
gs
sbb
ja
jp
in
sbb
mov
repz
or
js
xchg
pop
bound
xor
sub
lods
mov
into
out
fucomip
mov
or
lcall
leave
or
fs
fs
sub
sbb
pop
loope
loope
lret
add
pop
sbb
inc
and
pop
push
into
popa
lcall
sahf
scas
into
je
mov
adc
pop
adc
dec
mov
mov
lods
sub
loope
adc
in
cmc
pushf
outsl
mov
jle
popa
out
adc
push
lock
xorb
sbb
dec
fistpll
cs
mov
call
js
ljmp
dec
scas
and
cld
jnp
mov
mov
sarb
fistps
sti
aad
into
test
inc
sub
xor
xchg
pusha
int
repz
les
test
out
js
mov
mov
sarb
push
cltd
or
ds
roll
aad
cwtl
add
lahf
mov
jl
negb
push
roll
sarl
pop
inc
and
cmp
in
sbb
dec
push
fmuls
fcoms
mov
fdiv
adcl
test
enter
sub
mov
inc
mov
aad
into
test
scas
lret
mov
rcll
mov
mov
and
jo
je
out
or
test
dec
fstpt
push
aaa
ret
or
in
in
and
fisttpll
mov
int3
stos
data16
movsb
cmp
add
pop
out
imul
xor
pop
ja
dec
fstpl
and
ss
xorb
in
bound
mov
sahf
or
cmpsb
inc
mov
stos
mov
int
mull
icebp
adc
roll
inc
es
or
ljmp
clc
lahf
push
rorl
push
mov
and
adc
sub
xchg
or
je
repz
cmc
push
jnp
jns
jmp
mov
adc
repz
cmc
sbb
das
out
loopne
jb
in
jne
mov
cmp
xor
dec
frstor
adc
pop
popf
add
leave
pop
cmp
jle
lds
iret
fs
or
or
in
xchg
loope
shlb
pop
ds
mov
and
cmc
mov
pushf
sti
push
test
stos
pop
jecxz
push
in
loope
hlt
xchg
outsb
mov
jns
mov
jp
insl
hlt
pop
in
xchg
and
fisttpll
out
sub
cmp
addr16
add
push
test
cltd
clc
or
mov
cmp
push
fucomip
mov
or
leave
outsb
popa
mov
lret
add
or
loope
inc
lcall
xlat
into
pop
add
into
mov
aas
pop
test
daa
shrb
xlat
inc
and
jbe
out
adc
pop
lea
xchg
adc
push
jecxz
jns
mov
jbe
dec
fstpl
pop
and
add
movsb
cmp
dec
lahf
sbb
stos
sub
pusha
notb
add
jae
stos
cmp
inc
imul
xchg
and
jb
xchg
jno
outsl
or
int3
fists
mov
and
lock
jne
or
jb
imul
adc
sbb
lds
lahf
or
xchg
add
std
or
sub
sub
out
mov
push
xlat
xor
or
ret
ljmp
inc
xchg
dec
sub
or
push
xor
daa
rolb
mov
and
in
stc
imul
inc
es
lods
cmp
xor
push
iret
pop
cmp
pusha
pop
lret
pop
ds
aam
fistpll
fdivrs
jnp
in
insb
aaa
mov
push
jg
jmp
scas
pop
mov
sub
pop
jecxz
push
in
jmp
push
in
or
inc
xlat
mov
mov
push
out
mov
loop
lcall
dec
sub
sub
adc
in
sbb
mov
mov
aas
mov
test
pushf
sti
push
mov
lea
mov
add
xor
pop
rorb
mov
imul
xor
push
dec
fimuls
inc
mov
testl
jg
std
insl
hlt
pop
out
dec
fimuls
push
mov
xchg
jo
js
ljmp
shrb
imul
push
jmp
iret
adc
rclb
cmpsb
push
in
lret
lret
inc
fidivrl
notb
push
mov
loop
notl
shlb
pop
lods
dec
std
jns
mov
jne
pusha
pop
repnz
mov
or
mov
push
gs
xor
add
mov
into
add
add
sub
imul
lret
jg
sbb
inc
xchg
add
jp
push
into
ret
jmp
je
jp
add
leave
hlt
mov
into
leave
hlt
mov
je,pt
movsb
lcall
lcall
mov
into
leave
or
jmp
adc
movsb
adc
into
leave
or
xlat
and
push
and
sbb
and
sbb
sbb
lcall
adc
into
leave
or
jp
push
and
add
adc
sbb
push
and
xor
adc
sub
sub
fistps
inc
adc
pop
xor
and
clc
mov
cld
xchg
pusha
adc
adc
add
inc
and
lcall
adc
xor
leave
hlt
mov
mov
adc
into
leave
mov
xchg
les
lcall
pop
cmp
adc
add
inc
adc
pop
adc
into
leave
mov
into
leave
mov
inc
fs
or
into
mov
outsb
xchg
cli
dec
inc
fidivrl
inc
and
xor
mov
sub
jmp
mov
cli
decl
mov
jle
idivl
jp
jbe
push
imul
call
cmp
shlb
push
push
push
pop
mov
lea
rep
xor
mov
jmp
mov
loope
cli
pushl
jne
out
add
imul
xchg
cli
pushl
stos
icebp
jmp
das
mov
mov
notl
push
call
adc
ret
pop
pop
pop
jmp
les
cmpsl
push
mov
sbb
mov
mov
call
push
push
mov
jmp
push
jp
lds
xor
andb
gs
jle
cmp
mov
sub
inc
cmp
jb
push
lea
push
lea
push
call
mov
push
add
pop
lea
xor
repz
jne
push
push
pushl
call
push
pop
lea
mov
mov
rep
jmp
test
loop
push
test
je
jne
fisttpl
mov
nop
testl
imul
add
add
xor
jp
xlat
or
push
pop
shll
je
leave
subb
add
xlat
into
sbb
adc
loope
out
out
sbb
ljmp
jmp
cmp
jb
scas
push
aaa
dec
push
mov
push
push
mov
test
jne
xor
jmp
and
push
or
lcall
push
mov
push
mov
test
je
lea
jmp
faddl
mov
notb
mov
fsts
inc
mov
xchg
mov
push
lea
push
push
call
add
xor
mov
sub
inc
cmp
jb
push
lea
push
lea
push
call
push
add
pop
lea
xor
repz
jne
push
push
pushl
call
push
lea
push
push
mov
call
add
jmp
ret
lcall
jmp
push
aaa
ret
out
call
jmp
loopne
shll
lret
scas
pop
es
cmp
dec
repz
xorb
pop
pop
pop
leave
ret
jmp
sbb
divl
xorb
mov
pop
lods
mov
add
test
je
add
mov
jmp
or
mov
lds
xchg
jb
or
into
out
jno
xorb
inc
data16
add
add
lods
andl
jmp
aas
mov
push
aam
sub
aaa
push
mov
jno
daa
xchg
cmpl
jmp
sbb
enter
inc
mov
bound
out
or
popa
ljmp
aaa
sbb
inc
out
dec
jge
push
jmp
popa
mov
imul
add
pop
jmp
mov
ret
jmp
nop
sbb
sbb
push
popa
nop
jns
mov
dec
mov
imul
test
add
mov
mov
test
je
lea
jmp
push
lret
mov
or
insb
loop
je
std
sti
mov
xchg
inc
add
jmp
rclb
push
pushf
fisttps
mov
mov
adc
in
sbb
pop
icebp
mov
call
mov
call
mov
cmp
je
mov
jmp
cmp
outsb
hlt
push
cld
or
dec
loope
sahf
mov
xor
je
push
leave
pop
cmp
pusha
push
int
and
push
inc
mov
jmp
adc
test
je
mov
push
call
pop
jmp
mov
mov
push
mov
lcall
out
imul
clc
push
push
push
push
call
test
je
lea
push
pushl
mov
mov
push
push
call
jmp
mov
lahf
scas
xor
addl
jne
jmp
jbe
imul
sbb
je
mov
test
jne
je
cmp
jp
imul
shrb
xor
inc
pop
jmp
scas
das
mov
jae
xchg
out
icebp
nop
arpl
out
mov
sbb
ljmp
pop
lods
mov
lret
sbb
sbb
inc
push
dec
sbb
inc
xchg
imul
into
add
rclb
repnz
add
inc
sahf
mov
mov
push
into
mov
int3
fs
mov
lcall
imul
lret
je
add
shll
mov
add
add
mov
add
add
mov
pop
pushf
mov
jmp
lea
sahf
stc
or
sbb
movsb
sub
mov
mov
push
cld
add
mov
cmp
jb
jmp
cmp
rorl
dec
cmpsb
fstl
mov
jae
mov
imul
jmp
xor
in
lcall
nop
testl
push
mov
call
mov
mov
xor
add
mov
cmp
je
cmp
jbe
mov
push
call
mov
jmp
sti
outsl
lcall
test
cmp
mov
mov
das
mov
mov
add
add
pushl
call
mov
jmp
jns
mov
jmp
dec
jecxz
push
in
fimuls
mov
xlat
mov
movsl
sbb
insl
ja
gs
add
gs
decl
hlt
cmp
jne
xor
cmp
jbe
mov
mov
mov
mov
push
pop
xor
repz
je
mov
addl
inc
cmp
jb
mov
jmp
cwtl
mov
mov
mov
jmp
push
lahf
push
lcall
push
mov
movntq
mov
fistpll
scas
or
shll
mov
ljmp
mov
push
sub
push
sub
lret
mov
add
lret
sbb
sbb
inc
xchg
dec
sbb
inc
scas
jge
mov
scas
imul
clc
mov
fucomip
mov
add
dec
jge
mov
je
pop
mov
adc
aad
adc
in
adc
pop
push
into
push
into
imul
pop
sub
add
inc
pop
les
adc
loope
pop
or
loope
scas
into
popa
add
imul
lcall
leave
or
add
into
roll
leave
mov
mov
incl
mov
jmp
arpl
xchg
gs
arpl
xchg
gs
push
jns
aaa
hlt
and
or
push
or
mov
imul
push
push
pushl
call
mov
mov
inc
imul
mov
mov
add
mov
mov
cmp
jbe
mov
jmp
dec
pop
mov
mov
jmp
mov
call
mov
jmp
inc
xchg
pop
bound
and
ja
movsl
movsl
movsl
movsl
mov
lea
movzwl
mov
lea
mov
add
cmp
jb
mov
add
cmp
jae
push
push
call
mov
pop
pop
mov
test
je
sub
jmp
call
int3
movsl
add
ja
dec
sub
xor
mov
mov
lea
add
call
mov
lea
mov
inc
test
jne
push
sub
lea
call
pop
mov
call
mov
mov
inc
imul
mov
add
mov
mov
lea
jmp
mov
mov
jmp
xchg
push
test
push
incl
add
out
and
or
or
pop
shll
aas
sbb
inc
push
call
mov
test
jne
mov
jmp
jle
mov
xchg
and
loope
push
lea
push
push
call
add
lea
push
movb
jmp
push
xlat
inc
and
xor
bound
push
mov
add
out
mov
fistpll
scas
or
or
je
cmp
add
mov
into
leave
lock
in
lea
cmpb
jne
add
push
call
pop
push
jmp
fcoml
lods
pop
cli
sbb
push
js
addr16
adc
lahf
inc
inc
rcrl
xchg
int
push
call
mov
jmp
outsl
out
adc
or
push
int
mov
inc
imul
mov
mov
incl
addl
mov
jmp
cmp
bt
push
movsl
dec
int3
pop
int
addr16
mov
adcl
xor
fs
mov
jmp
outsl
std
insl
hlt
pop
mov
pop
cwtl
push
cmp
fwait
adc
push
mov
push
push
lea
push
call
mov
jmp
cmpsb
std
cmp
jb
jmp
adc
out
jp
jp
imul
push
call
jmp
inc
imul
imul
jmp
cld
outsl
lcall
dec
sub
push
jmp
les
mov
mov
stos
cmp
adc
lock
cmp
jne
push
call
mov
jmp
push
jbe
jne
mov
add
popf
push
add
add
add
jmp
cwtl
push
xchg
repz
cmpsl
js
jne
out
pop
lea
xchg
adc
or
sbb
adc
mov
cmp
jne
mov
mov
push
lea
push
push
call
test
je
mov
mov
push
push
push
jmp
lds
iret
dec
cld
pop
int
loopw
fimull
fimull
xchg
xchg
arpl
or
test
inc
adc
or
add
xchg
sbb
and
scas
dec
xchg
scas
xchg
jecxz
add
mov
push
push
push
call
push
jmp
jecxz
sti
sahf
insl
orb
es
sub
ds
test
push
repz
xor
jmp
adc
push
aad
out
pop
sbb
call
mov
shll
mov
or
in
xchg
aas
push
push
push
push
lea
push
call
mov
cmp
jne
xor
jmp
cmp
dec
fistpll
dec
sub
pop
sahf
or
rolb
jns
cs
mov
faddl
popf
adc
in
sbb
out
lock
add
add
add
add
scas
shl
ljmp
adc
jmp
jns
jmp
in
jge
je
insl
cmp
sub
add
add
mov
cmp
jne
jmp
cld
insl
std
test
fcoms
in
jb
pushl
mov
jmp
xchg
add
sub
and
and
std
decl
or
lret
jne
xor
jmp
pop
sbb
push
loope
inc
dec
sub
daa
inc
mov
mov
add
add
add
dec
fisttps
push
mov
jmp
addr16
pop
repnz
push
into
pop
cmp
daa
aaa
lods
and
add
fucomip
or
xor
call
mov
mov
mov
cmp
je
mov
jmp
cmpsl
cmp
repnz
mov
or
in
rorb
add
add
jmp
seta
bound
pop
lods
sbb
nop
push
popa
nop
cmp
sbb
cmc
std
pushl
mov
mov
push
pushl
mov
call
lea
push
push
pushl
mov
jmp
inc
fisttpll
out
test
jge
or
pusha
pop
bnd
dec
or
jl
cmp
jmp
popa
mov
push
sbb
inc
or
mov
movzwl
imul
add
mov
jmp
mov
in
jmp
cltd
push
cltd
push
adc
mov
push
lea
push
pushl
mov
push
push
mov
call
mov
push
call
mov
call
mov
cmp
jne
mov
push
push
pushl
call
xor
jmp
jns
outsb
or
sbb
out
mov
xor
divl
mov
andl
sub
sub
mov
mov
xor
cmp
jae
jb
test
xchg
lock
enter
push
mov
int
and
cmp
mov
mov
mov
mov
jmp
push
fisttpl
fnsave
dec
lret
pop
ds
xlat
pop
repnz
fs
shl
add
mov
mov
mov
mov
jmp
cmc
adcl
test
leave
pop
cmp
daa
adc
mov
or
rolb
stos
pop
test
jae
xchg
push
fldt
sub
add
pushl
push
mov
sub
add
push
call
movzwl
add
incl
add
cmp
jb
jmp
rolb
mov
test
into
ss
insb
mov
jmp
jnp
jle
call
mov
xchg
repz
int
inc
pop
add
out
dec
jge
push
jmp
leave
ret
je
pop
shrl
sbb
inc
push
call
ds
pop
test
jno
je
out
add
xchg
or
je
push
pushf
sti
push
mov
pop
jmp
lea
xchg
or
pop
push
call
mov
mov
pop
repnz
fldt
xchg
aaa
adc
mov
push
jmp
xchg
adc
push
or
mov
pushl
pushl
call
mov
jmp
stos
or
xor
int
mov
jg
loop
notl
pop
pop
test
jne
xor
inc
jmp
in
sti
sahf
insl
mov
je
lea
sbb
push
sbb
and
ret
jmp
mov
mov
jmp
lea
jmp
les
mov
mov
negl
push
shll
mov
rolb
add
add
cld
mov
lea
jmp
push
fdivl
in
in
data16
xchg
outsb
leave
xor
or
mov
mov
sub
push
push
xor
push
cmp
je
mov
push
call
mov
mov
cmp
jne
push
push
pushl
call
mov
push
pop
xor
mov
rep
mov
push
mov
jmp
pop
xlat
inc
and
xor
dec
sub
sbb
xchg
add
sahf
ja
imul
cmp
jmp
addr16
jle
call
repnz
mov
mov
jmp
call
lea
mov
movsl
movsl
movsl
movsl
xor
jmp
lock
notb
lcall
and
leave
cmp
in
mov
mov
test
je
mov
jmp
mov
rcrl
les
stos
xchg
out
out
adc
sbb
decl
adc
outsb
lcall
pop
leave
ret
jmp
xor
add
mov
cmp
imul
push
std
push
lret
jo
mov
gs
jl
rcll
xor
xor
inc
shll
jae
xchg
adc
sub
adc
pop
push
mov
lea
jmp
add
adc
lret
enter
push
lea
jmp
xor
dec
in
bound
dec
sub
or
push
push
call
xlat
test
je
xor
inc
mov
push
call
mov
jmp
push
inc
and
cmp
xlat
add
inc
cmp
jmp
scas
sub
movb
dec
scas
pop
fdivl
in
loope
add
movsl
mov
pop
push
lea
push
lea
lea
push
rep
call
lea
lea
movsl
movsl
movsl
movsl
xor
xor
mov
jmp
mov
jb
xchg
loopw
pop
loop
cmp
dec
sub
push
xor
addr16
rolb
shlb
lds
iret
sbb
test
push
movsl
inc
push
loopne
inc
pushl
push
jmp
int3
inc
aad
dec
ljmp
sbb
pop
stos
lahf
in
test
call
lea
push
lea
push
push
push
push
push
push
jmp
cwtl
push
test
push
cli
cmp
mov
xlat
mov
xor
push
fisttps
mov
scas
lcall
mov
or
dec
mov
into
or
or
sub
imul
lret
dec
fstl
add
data16
inc
xchg
mov
xchg
rcrl
or
loope
fs
dec
xlat
jge
scas
jmp
bound
add
add
push
lds
xchg
jp
jecxz
add
mov
xor
jmp
xchg
pop
xchg
repnz
push
xchg
jbe
jbe
loopne
sub
push
push
push
jmp
xor
xlat
inc
shll
popa
add
push
adc
mov
call
call
lea
push
lea
push
lea
push
push
pop
mov
call
mov
add
inc
push
lea
push
push
push
push
pushl
call
add
jne
call
add
data16
pushl
jmp
repz
ja
jge
negl
cltd
push
sbb
or
je
mov
sbb
or
je
popa
adc
pop
xor
mov
and
sub
adc
pop
lea
push
lea
jmp
add
or
cs
jno
xorb
jmp
inc
lock
add
call
add
jne
call
add
shll
add
push
aaa
ret
dec
fidivrs
int3
stos
data16
pushl
mov
push
pushl
call
pushl
mov
mov
call
pushl
mov
jmp
daa
movsb
cmp
dec
out
hlt
xchg
outsb
sbb
or
push
in
push
push
add
push
push
mov
call
test
je
sub
push
add
push
pushl
call
add
lea
push
pushl
mov
push
pushl
call
jmp
dec
iret
pop
cmp
ds
dec
mov
call
pop
jmp
push
mov
int
mov
cwtl
push
imul
add
add
mov
enter
xor
and
push
shlb
stos
data16
aam
fs
push
in
or
push
xor
sub
jno
xorb
lahf
punpckhdq
push
mov
mov
pusha
jmp
pop
popf
or
xchg
add
sahf
jo
jmp
push
in
insb
or
in
adcl
inc
and
sub
test
std
outsb
cld
fwait
jbe
fstl
cmpsb
push
hlt
ret
push
shlb
xor
sub
mov
sub
xor
cmpsb
xor
scas
or
xchg
pop
bound
test
lock
xor
sbb
xchg
add
sahf
sub
push
lret
cmc
loop
in
je
xor
mov
xor
ds
and
push
xchg
add
sahf
jg
out
adc
or
jg
mov
lret
cmpsb
push
out
mov
dec
add
push
je
or
shr
popa
fistpl
add
xchg
imul
add
lret
mov
cmc
aad
mov
mov
push
pop
lea
rep
jmp
inc
ret
ret
xchg
dec
cmp
les
mov
scas
shlb
leave
mov
xlat
xor
int3
adc
rorb
sub
incl
clc
sub
push
lea
push
lea
push
call
push
pop
lea
lea
xor
repz
je
mov
push
jmp
jl
fs
sbb
movsl
xor
in
bound
clc
xchg
out
jmp
mov
shrl
ret
or
je
dec
fstl
add
fs
dec
add
push
je
or
shrl
fistpl
add
or
loope
fs
push
fbld
mov
jmp
icebp
nop
arpl
and
out
add
add
sarb
jne
ror
pusha
push
xor
add
add
add
popf
add
add
mov
inc
mov
mov
pop
iret
stos
pop
test
lods
insl
push
mov
push
push
push
mov
call
testl
jmp
mov
fwait
decb
mov
add
jp
idiv
je
setg
or
jmp
cmp
xor
fisttpll
out
add
sbb
aad
shll
cwtl
mov
nop
nop
add
add
pop
jmp
testb
jmp
inc
xlat
inc
and
sbb
test
jge
outsb
imul
cmc
add
xchg
push
mov
mov
mov
mov
mov
mov
jmp
fisttps
mov
xor
push
push
pushf
xor
push
xchg
or
pop
pop
leave
ret
jmp
push
lret
lret
lods
and
or
mov
gs
cmp
dec
lea
movsl
movsl
movsl
pop
pop
movsl
jne
je
rep
loop
je
mov
mov
mov
decl
inc
cld
push
pushl
mov
pushl
pushl
call
xor
jmp
adc
cmp
sub
adc
jmp
dec
repz
cmc
je
pop
xchg
adc
in
outsb
cld
fwait
jbe
vmaxss
mov
add
in
sub
push
xor
cmp
je
mov
cmp
je
xor
mov
neg
mov
inc
cmp
jb
mov
jmp
xlat
push
lds
jb
push
cld
adc
xor
inc
jmp
stos
sub
lds
push
jl
negb
add
imul
cmp
call
add
mov
je
dec
shr
mov
inc
push
mov
lea
push
pushl
mov
lea
call
addl
jmp
or
mov
movsb
sub
lds
cmpsl
mov
or
pop
shr
xor
xlat
adc
pop
int
sbb
pop
mov
mov
les
adc
loope
xor
lcall
mov
jl
add
sbb
add
add
out
pop
pop
leave
ret
jmp
hlt
data16
xchg
outsb
xchg
push
mov
test
je
mov
jmp
sbb
dec
fstpt
cmp
jns
add
aam
lea
push
call
mov
mov
push
pop
add
xor
lea
repz
sete
dec
and
jmp
push
mov
jns
push
mov
push
inc
movzwl
mov
jmp
aaa
mov
push
shll
xor
add
inc
xor
inc
pop
ret
jmp
push
sti
lea
jmp
pop
lret
pop
ds
sub
mov
lea
jmp
sbbb
ljmp
iretw
xchg
adc
sub
sub
neg
sbb
and
pop
ret
jmp
xchg
or
push
mov
sub
mov
jmp
fiaddl
mov
add
insb
loop
je
stc
inc
cmp
jne
mov
jmp
mov
pushf
sti
push
ret
cmc
pushf
outsl
mov
mov
cmp
push
lds
mov
mov
push
push
mov
push
mov
push
call
push
call
mov
pushf
orl
popf
pushf
pop
mov
testl
jne
mov
mov
mov
mov
mov
jmp
and
mov
in
hlt
outsl
jmp
xchg
push
test
push
testl
sbb
test
decl
mov
fdivr
jno
xorb
sbb
aad
out
imul
pop
loop
out
mov
jmp
cmp
mov
inc
mov
insl
pop
xor
rorb
clc
or
ret
mov
add
jmp
dec
push
xor
es
lcall
dec
adc
or
sbb
xor
mov
inc
cmp
jl
jmp
mov
fisttps
orb
or
sub
fdivr
cmpb
jmp
adc
add
std
or
pop
roll
aad
ficompl
adc
add
inc
inc
decl
jne
jmp
inc
pop
jne
pushl
mov
jmp
jbe
jno
jecxz
cs
dec
mov
cmp
jg
roll
movsb
xchg
mov
jmp
call
push
jmp
add
add
lahf
es
xor
jmp
xor
repz
cmc
inc
movsl
aas
scas
lret
pop
iret
sbb
mov
add
jne
lea
lea
movl
mov
jmp
leave
push
lret
jmp
daa
mov
and
adc
jne
jmp
setae
xchg
inc
xor
mov
and
jne
call
mov
add
enter
dec
test
repnz
push
push
call
lea
push
call
lea
add
lea
mov
inc
test
jne
sub
push
lea
push
lea
push
call
mov
add
add
add
mov
mov
lea
push
push
push
push
push
call
add
test
std
call
push
push
pushl
movl
call
add
decl
dec
dec
fdivrs
inc
and
aaa
mov
fcom
push
lds
jne
lea
push
lea
push
call
jmp
bnd
mov
jge
gs
pop
mov
test
cmp
push
push
pushl
call
mov
lea
push
push
mov
call
xor
cmp
jne
mov
push
push
pushl
call
pushl
push
pushl
call
mov
lea
push
push
call
jmp
std
cld
mov
add
pushl
add
add
mov
mov
mov
mov
call
push
call
pop
pop
xor
pop
leave
ret
jmp
mov
jecxz
nop
push
popa
nop
jle
lods
and
push
into
inc
push
xchg
cpuid
mov
mov
add
mov
cpuid
and
and
mov
mov
mov
jmp
mov
leave
ret
jmp
sbb
int3
inc
mov
test
xor
pop
enter
and
cmp
or
xor
call
push
mov
push
push
mov
call
jmp
or
or
aas
scas
lret
xchg
add
cmp
push
mov
push
push
push
mov
call
testl
je
push
pop
jmp
fs
clc
mov
cmpl
jmp
movsl
xor
or
inc
mov
inc
or
or
inc
call
inc
in
mov
mov
add
lea
lea
call
mov
test
jbe
lea
shr
jmp
sbb
test
xchg
adc
xlat
adc
out
inc
sub
jns
jo
loop
jmp
loope
jae
repz
mov
mov
lea
push
pushl
mov
lea
call
addl
decl
lea
movsl
movsl
movsl
pop
pop
movsl
jne
je
add
and
push
lds
dec
fistpll
ss
cmp
add
xlat
pushl
jmp
or
pop
bound
std
or
fs
popf
insb
jmp
gs
pushl
push
call
add
jmp
in
hlt
xchg
outsb
mov
imul
cli
popf
insb
lea
sbb
inc
lret
pop
ds
fstpl
test
mov
stos
push
je
push
push
call
mov
add
push
push
mov
call
pop
pop
jmp
mov
jl
push
mov
jmp
push
sbb
hlt
movsb
cs
fistl
add
add
mov
adcl
loopne
mov
push
call
pop
jmp
push
lea
mov
dec
mov
push
lea
push
push
call
lea
push
lea
push
lea
push
push
pop
mov
call
jmp
fwait
adc
in
sbb
ss
shlb
xchg
gs
cmpsl
cmp
xor
inc
jmp
push
sar
jnp
push
mov
sub
jmp
and
mov
mov
sbb
inc
xchg
pop
and
jne
lea
push
push
mov
push
push
call
xor
pop
jmp
sti
ja
xorb
cmp
and
dec
adc
or
jne
pop
jle
add
jns
lret
pop
leave
ret
jmp
mull
icebp
sbb
bound
fs
je
mov
cmp
je
mov
cmp
je
xor
mov
mov
neg
mov
inc
cmp
jb
jmp
movsl
xor
inc
jmp
sub
das
dec
mov
jns
jns
fldt
notl
aad
imul
add
add
cltd
xor
cmp
test
sub
adc
pushl
call
lea
push
pushl
mov
push
push
call
xor
jmp
aas
punpckhbw
add
push
pushl
call
jmp
xchg
push
pushf
sti
push
mov
jno
imul
insl
in
and
sbb
push
call
pop
jmp
andb
shlb
test
xchg
add
inc
adc
inc
loopne
lea
push
pushl
jmp
ljmp
sub
inc
aam
dec
lods
ljmp
xchg
mov
sub
mov
push
pop
call
add
xor
jmp
dec
int
and
cmp
jbe
cmpl
setg
or
decb
adc
test
pushl
leave
mov
mov
neg
mov
inc
cmp
jb
jmp
inc
iret
pop
cmp
jo
daa
mov
and
fistl
cmpsl
push
mov
push
mov
sub
push
push
mov
jmp
in
stc
cwtl
imul
loop
sbb
aad
int
pop
scas
pop
leave
test
lods
ret
push
mov
adc
pop
pop
pop
leave
jmp
daa
mov
dec
mov
add
push
add
orb
xor
mov
cmp
je
mov
jmp
and
sub
sub
push
icebp
imul
insl
sbbl
jmp
xlat
hlt
dec
cmp
ja
jmp
push
adcl
pusha
notb
test
pop
stos
cmp
cmp
add
push
lea
push
push
call
push
lea
push
push
call
mov
add
jmp
push
int3
inc
and
jno
jecxz
jge
jo
loop
outsl
or
or
hlt
jmp
inc
popa
call
inc
xchg
push
pushf
sti
push
mov
daa
xchg
arpl
adc
add
push
add
jmp
into
inc
into
test
jmp
in
popl
ja
lods
push
push
add
jmp
sbb
xchg
sbb
aad
addl
add
add
add
add
add
xchg
cmc
add
push
ret
push
lds
das
dec
mov
loop
jmp
mov
adc
add
push
add
jmp
sbb
or
call
enter
dec
mov
sti
mov
add
push
add
push
push
call
add
xor
add
jmp
call
xchg
or
jne
mov
sub
out
sahf
cmp
add
jmp
jl
outsl
or
out
imul
adc
or
les
jp
fisttps
adc
add
push
jmp
sahf
push
test
push
aad
jne
mov
fcoms
mov
lcall
push
add
jmp
inc
enter
sub
cmp
lock
adc
call
movsl
jmp
lea
jmp
push
fisttps
hlt
jg
mov
movsb
movsb
ret
ds
in
jmp
xchg
add
test
jmp
lret
pop
jp
push
jmp
cmp
and
adc
push
lds
je
addr16
add
push
add
jmp
pop
enter
and
pop
enter
pop
test
dec
jmp
ja
sub
mov
add
inc
add
add
inc
and
jbe
mov
dec
inc
and
push
xor
ljmp
fs
push
inc
xchg
jb
es
cwtl
push
push
jmp
xor
sbb
dec
loope
pop
repnz
fs
mov
dec
jmp
jmp
xchg
gs
jp
jp
lock
xchg
das
xor
jp
les
sbb
loop
push
push
add
jmp
ljmp
test
cmp
lret
std
aas
mov
add
adc
adc
add
jmp
rclb
mov
mov
and
popf
xchg
jmp
ficomps
test
outsl
or
out
jmp
sahf
mov
push
jmp
mov
lahf
cli
or
jne
insl
hlt
pop
out
or
lahf
xor
loop
mov
xor
daa
mov
inc
in
mov
sbbb
pop
call
stos
and
inc
shlb
sbb
adc
add
inc
fstpl
scas
pop
nop
out
mov
xor
add
rcrl
sub
call
call
add
insl
add
add
scas
cmp
mov
lahf
pop
xchg
adc
addr16
jo
xor
adc
add
push
add
jmp
lahf
adc
pop
repnz
fs
cmp
and
push
call
lea
push
call
jmp
imul
es
inc
mov
std
or
outsb
sarl
insl
add
push
jmp
mov
fiadds
notl
addr16
mov
enter
push
mov
add
push
lea
push
call
add
xchg
add
cld
xchg
cmc
add
pushf
add
fimull
or
add
xchg
decl
adc
lea
push
jmp
mov
out
push
leave
pop
cmp
jbe
push
mov
add
add
pop
and
add
add
mov
sub
push
pushl
lea
push
push
call
lea
push
call
lea
push
call
lea
push
mov
add
push
lea
push
call
add
push
pushl
lea
push
push
call
jmp
imulb
cltd
push
movb
add
jmp
ljmpw
stc
mov
dec
fdivrl
mov
sbb
add
mov
add
add
xor
scas
sub
jb
in
loope
pop
js
add
push
cwtl
mov
add
jmp
inc
lds
iret
sbb
aas
imul
notb
movb
add
jmp
movl
and
push
imul
add
dec
sub
add
jmp
sub
pop
xor
push
xor
insb
incl
add
dec
sub
cmp
test
push
fwait
pop
push
jmp
sahf
push
test
push
aad
push
sbb
aaa
dec
pop
es
test
jmp
lock
je
outsb
loop
pop
loop
cmp
inc
mov
nop
mov
jmp
dec
fisttpll
out
mov
jne
mov
xor
mov
pop
push
mov
pop
push
mov
pop
push
mov
pop
push
mov
pop
push
mov
mov
mov
pop
push
mov
pop
push
mov
pop
push
mov
pop
push
mov
mov
mov
pop
push
mov
pop
push
mov
pop
push
mov
pop
mov
xor
inc
jmp
mov
push
lea
push
push
call
sub
adc
cmp
and
pop
dec
jl
add
mov
pop
push
mov
pop
push
mov
pop
push
mov
pop
push
mov
mov
pop
push
mov
pop
push
mov
mov
mov
pop
push
mov
pop
push
mov
pop
jmp
sbb
js
mov
xchg
setg
or
mov
sub
jns
jne
mov
mov
mov
jmp
push
lret
lret
adc
fwait
or
and
push
lds
daa
shlb
sub
lds
fsubrl
add
sbb
dec
int3
inc
and
mov
mov
gs
jne
cwtl
push
imul
mov
inc
mov
pop
cltd
or
ja
push
pushf
sti
push
ljmp
iret
cmp
pusha
call
les
cmpsb
push
mov
cld
sbb
push
imul
sbb
add
leave
pop
cmp
cmp
andl
test
push
shll
dec
mov
lcall
fnsave
lret
pop
int
lea
jmp
jl
testb
mov
jns
jp,pt
jo
loop
stc
imul
fistpll
and
add
out
inc
push
iret
pop
cmp
pusha
je
lea
mov
gs
adc
imul
insl
mov
sub
imul
sbb
or
pop
cmp
leave
test
mov
roll
aad
dec
int3
inc
and
jo
loop
push
push
push
push
call
push
call
pushl
call
mov
mov
pop
push
call
mov
mov
mov
push
push
push
push
push
push
call
push
call
pushl
call
mov
pop
push
call
jmp
loopne
clc
lahf
push
mov
mov
std
or
xor
cmp
push
dec
rclb
and
lret
mov
std
or
rolb
mov
test
icebp
popa
add
add
xor
dec
fdivrs
in
jle
das
mov
pusha
hlt
push
cld
adc
push
xor
imul
sub
adc
dec
inc
and
popa
loope
in
je
sub
push
test
push
test
pop
mov
pushf
sub
xchg
add
push
scas
or
in
xchg
aas
ret
push
lds
arpl
jbe
loopne
inc
lret
pop
ds
fstpl
xchg
cli
adcl
test
pop
cmpsb
and
repz
cmc
adc
xchg
or
cmp
popa
icebp
nop
arpl
call
testb
insb
mov
fcompl
in
sub
cmp
repnz
pop
repnz
fcoml
cmpsb
push
nop
mov
aad
or
jo
notl
pop
mov
jg
sub
cli
or
jo
sub
ljmp
fwait
decb
mov
and
sbb
xchg
inc
and
push
mov
fcomps
scas
pop
mov
push
les
int3
stos
xchg
xchg
cmc
add
push
fisttpl
fnsave
mov
movsb
and
inc
xlat
mov
cmpsb
push
fimuls
add
jne
inc
jmp
idivb
arpl
test
mov
ret
sub
xchg
pop
xchg
test
add
fistps
test
shll
push
cld
adc
dec
stos
push
inc
sbb
or
push
idivb
je
imul
notb
inc
and
cmp
pop
mov
mov
icebp
popa
icebp
nop
arpl
aad
es
inc
mov
sbb
sub
dec
fstpt
mov
leave
pop
cmp
and
mov
gs
xor
gs
or
pop
jp
and
lahf
punpckhdq
xchg
fnstsw
jno
jecxz
jg
jbe
loopne
loope
adc
sub
lea
xchg
fdivrs
mov
and
fcompl
xchg
cmpl
inc
cmpsl
fsubl
xchg
andl
xchg
xchg
icebp
add
ficompl
stos
data16
sti
push
jbe
loopne
cltd
adc
inc
fidivrl
shlb
xchg
subl
lods
and
pop
aad
into
test
cs
mov
adc
les
scas
leave
cmp
jne
jno
jecxz
push
mov
in
mov
jp
dec
ret
movsl
jns
jo
loop
add
xor
or
cld
inc
jmp
xchg
popa
mov
mov
pop
repnz
fs
pop
mov
mov
lock
in
mov
sbb
rcll
ljmp
pop
sbb
mov
popa
adc
add
push
push
sub
pop
lret
scas
pop
mov
fimull
fidivrl
sub
pushl
xorb
loope
adc
adc
out
outsb
push
mov
jge
push
dec
rcrl
leave
pop
gs
xor
xor
add
xor
jp
or
push
ljmp
subb
add
mov
pop
ror
push
shlb
aam
cli
lea
jmp
jne
mov
jmp
sbb
and
push
lds
aam
dec
out
fdivs
push
mov
cmpl
je
cmpl
jmp
outsb
or
cmc
mov
add
and
sarb
mov
add
iret
jge
fimuls
mov
jmp
cmpl
jmp
test
ret
test
jmp
add
rcrl
call
xor
cmpsb
int
incl
call
pop
jmp
xor
inc
pop
jmp
subb
jmp
and
les
int3
dec
or
mov
adc
cmp
dec
and
rolb
mov
jmp
jmp
push
mov
gs
inc
fcomp
dec
jp
mov
inc
add
dec
and
mov
add
sbb
and
jmp
push
xchg
jmp
or
jo
in
sbb
xorl
pop
int
incl
test
outsb
cld
fwait
jbe
mov
enter
push
mov
sub
adc
cmpsb
inc
or
fcoml
ljmp
fmuls
pop
and
cmp
sub
lds
out
jecxz
jne
imul
je
cmpl
jmp
or
mov
xchg
icebp
add
out
lcall
inc
jecxz
shll
inc
pop
ret
jmp
ret
jmp
rorl
push
mov
xchg
jb
dec
lret
pop
ds
std
insl
std
test
sbb
mov
std
lcall
ja
jae
xchg
dec
mov
mov
sub
jmp
call
fists
sbb
dec
sub
push
lds
in
cltd
lods
out
sbb
sbb
inc
lcall
and
xor
pop
fcmove
scas
push
xor
push
push
cmp
je
mov
push
call
mov
jmp
lahf
or
repz
cmc
sbb
push
rolb
add
add
inc
aad
dec
mov
call
jmp
in
in
je
xor
xchg
add
cmp
inc
and
popa
inc
mov
pop
adc
call
cmp
je
push
call
pop
jmp
xchg
and
push
lcall
stos
into
cmp
rorb
mov
add
xor
inc
mov
jmp
in
dec
frstor
cmpsb
push
aam
push
xor
sbb
jl
notb
xchg
lea
call
push
lea
push
push
push
push
push
push
lea
push
push
call
add
cmpsl
xchg
adc
in
sbb
lret
dec
fdivrs
and
sti
dec
into
pop
cmp
ss
push
call
inc
ret
ret
subb
adc
call
mov
jmp
push
cltd
or
jo
and
mov
lock
jp
fmuls
jle
add
add
mov
jmp
jns
popa
add
adc
js
mov
xchg
and
pop
pop
pop
jmp
lret
inc
shlb
mov
xchg
pop
bound
add
js
pushl
shr
add
add
stos
test
lahf
cli
or
sbb
sbb
or
push
push
push
je
cmpl
jbe
mov
push
push
pushl
call
mov
mov
mov
push
push
call
lea
push
mov
mov
call
add
xor
mov
mov
mov
add
add
shr
push
push
lea
push
lea
push
lea
call
add
test
jne
add
jmp
push
outsl
or
repnz
fimull
mov
daa
inc
mov
cmpsl
sub
lds
rorl
dec
pushf
jno
outsb
or
push
inc
int
and
xor
pop
loop
out
jg
mov
xchg
add
mov
sbb
jno
mov
mov
push
pop
push
lea
rep
pop
mov
push
lea
push
lea
lea
push
rep
call
lea
lea
movsl
movsl
movsl
movsl
xor
mov
add
inc
cmp
jb
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
pop
mov
call
mov
add
inc
push
lea
push
push
push
push
pushl
call
add
jne
call
and
cmp
push
sbb
jge
jno
xorb
pop
int
addr16
push
shlb
jnp
mov
jne
cmp
jb
push
push
pushl
mov
jmp
or
mov
xchg
pop
repnz
rcrl
xchg
mov
push
push
pushl
call
push
jmp
aad
fistpll
movsb
ret
ds
jge
je
add
xchg
jb
or
add
call
inc
lock
call
push
pop
lea
lea
xor
repz
jmp
roll
inc
xchg
addb
lock
mov
movsb
loopne
pop
xor
mov
jmp
mov
and
icebp
cld
jp
jp
ds
jmp
xorb
sbb
or
ljmp
pop
jg
sbb
pop
pop
or
loope
inc
lds
iret
and
loopne
cmpsl
mov
sub
jmp
xchg
sbb
aad
movb
daa
fwait
adc
mov
xlat
pop
int
scas
movsl
xor
push
mov
ret
adc
pop
pop
pop
leave
ret
jmp
adc
popl
xchg
lock
std
jo
xorl
jmp
mov
je
ljmp
jmp
cmpsl
cmp
adcb
xorb
push
xor
push
insb
add
push
mov
mov
and
negl
jmp
mov
mov
mov
lea
rep
xor
jmp
mov
mov
sbb
insl
mov
lahf
push
xor
inc
jmp
inc
inc
and
jns
insb
loop
je
push
inc
jnp
jno
jecxz
flds
ret
jb
mov
mov
xor
mov
sub
inc
cmp
jb
push
lea
push
lea
push
call
push
pop
lea
lea
xor
repz
jne
mov
push
push
pushl
call
push
push
pushl
mov
mov
call
mov
mov
mov
mov
mov
jmp
sahf
add
gs
imul
xor
mov
add
out
lahf
xor
fiaddl
out
call
adc
mov
leave
ret
jmp
outsl
roll
aad
or
jg
xchg
testb
jl
test
mov
mov
push
push
call
mov
push
push
pushl
call
push
lea
push
push
push
mov
mov
push
mov
call
mov
jmp
fwait
sbb
xchg
pop
bound
sub
xor
mov
je
mov
mov
push
push
push
push
push
push
pushl
call
mov
cmp
jne
push
pop
jmp
clc
jge
je
gs
rolb
sarb
xor
adc
xor
add
push
adc
jne
jne
push
jmp
dec
push
xor
imul
mov
cmp
jmp
jae
xchg
testb
sub
iret
pop
cmp
jo
mov
hlt
push
add
add
mov
dec
mov
inc
mov
mov
sub
cmpl
push
push
push
je
cmpl
jmp
sbb
aam
iret
stos
pop
xchg
mov
mov
das
vmovlhps
pushl
call
pushl
mov
mov
push
pushl
call
mov
jmp
xchg
in
sbb
sbb
add
xor
je
out
sub
rolb
add
add
jbe
jmp
clc
outsb
cld
fwait
jbe
mov
mov
sbb
adcl
xchg
mov
inc
in
inc
in
jmp
add
pushf
add
aam
ret
std
pop
lds
iret
jb
je
push
jmp
push
mov
jmp
inc
jecxz
push
in
ljmp
data16
xchg
outsb
xor
xchg
jne
call
test
je
push
call
pop
jmp
inc
andl
movzwl
jmp
sub
jnp
dec
sub
pop
push
roll
roll
sbb
call
jo
popa
add
pop
dec
roll
aad
sub
pop
leave
jmp
divl
cmpl
stos
cmp
inc
ret
mov
lret
add
add
add
push
sub
mov
xchg
pushf
push
pop
jmp
jb
fs
adc
push
xor
sub
xchg
inc
cld
jmp
arpl
jg
jmp
sahf
insl
int3
mov
loope
lods
lret
inc
test
cmp
jae
mov
lea
lea
movsl
movsl
movsl
movsl
mov
jmp
ret
push
ret
cmpsb
push
mov
rclb
and
es
mov
mov
les
sbbb
add
sub
add
ret
mov
int3
stos
xchg
pop
scas
xor
lea
push
mov
call
mov
mov
movzwl
movzwl
imul
add
movzwl
imul
add
mov
mov
movzwl
movzwl
imul
movzwl
add
movzwl
imul
movzwl
add
imul
movzwl
imul
add
movzwl
imul
add
movzwl
movzwl
add
imul
add
cmp
jae
mov
lea
lea
movsl
movsl
movsl
movsl
mov
jmp
mov
data16
fnstenv
shr
add
add
ja
xorb
popa
icebp
nop
arpl
pop
mov
xor
inc
jmp
stos
inc
or
push
jmp
dec
jecxz
push
in
xor
inc
mov
adc
cmpl
push
push
push
je
cmpl
jne
call
test
je
push
call
pop
jmp
test
xchg
adc
movsl
movsl
call
test
je
push
call
pop
jmp
fadds
mov
mov
outsl
lcall
pop
jb
cmp
add
xor
jmp
jg
ja
loope
inc
fdivl
in
jne
out
or
sub
in
jge
negl
inc
and
mov
mov
es
fdivrs
outsb
mov
add
jo
xorl
pop
pop
leave
ret
jmp
push
sti
imul
jl
sub
cmp
je
jne
stc
jns
mov
mov
mov
loop
fisttps
jb
mov
add
lea
movsl
movsl
movsl
movsl
call
test
je
push
call
pop
jmp
addl
push
inc
and
aaa
mov
in
hlt
rolb
mov
mov
push
push
pushl
call
mov
mov
mov
jmp
pop
fisttpll
out
jnp
and
pop
aam
sub
pop
pop
jmp
jo
outsl
or
jmp
add
hlt
pop
out
mov
add
pop
enter
sub
adc
push
jmp
xchg
push
mov
es
icebp
jl
jne
jo
test
pop
test
sahf
mov
addb
add
movsl
xor
mov
mov
lea
mov
mov
sub
inc
cmp
jb
mov
add
mov
mov
push
pushl
lea
push
call
mov
push
add
pop
lea
xor
repz
jne
mov
push
lea
push
pushl
mov
call
lea
push
push
call
pop
pop
cmp
je
xor
mov
mov
jmp
jge
jl
testb
add
std
or
leave
pop
into
test
add
push
call
jmp
cmp
dec
iret
pop
into
test
fidivrl
out
add
jmp
mov
shr
add
add
push
shlb
test
shlb
add
test
std
call
call
jmp
pusha
clc
outsb
or
push
fwait
add
outsl
lcall
and
cmp
jae
mov
lea
lea
movsl
movsl
movsl
movsl
mov
mov
jmp
aaa
test
pop
test
popa
mov
faddp
lods
fsubrp
jno
xchg
add
cmp
mov
out
fidivrl
cmp
add
iret
add
add
jp
jp
popa
loope
adc
xor
lret
das
pop
inc
cmp
jne
je
in
jae
xchg
fwait
sbb
inc
mov
test
int3
sub
mov
jmp
out
push
lahf
push
loope
cli
popf
insb
test
pusha
notb
scas
leave
cmp
jne
mov
mov
mov
jmp
inc
enter
add
lock
mov
add
add
lret
mov
mov
and
add
leave
mov
inc
cmp
jl
jmp
pop
enter
dec
lret
pop
ds
movsl
xor
mov
and
cmp
adc
mov
cmp
je
jne
repz
notb
js
ljmp
aam
mov
mov
mov
neg
mov
inc
cmp
jb
mov
push
push
pushl
call
mov
mov
mov
mov
lea
mov
push
rep
call
cmp
je
push
call
pop
jmp
ja
inc
add
dec
loopne
dec
and
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
das
iret
push
lahf
punpckhdq
sbb
push
dec
pop
jl
lahf
mov
cmp
jne
mov
jmp
stc
insb
loop
je
popa
stc
imul
mov
add
mov
mov
jmp
and
sub
popf
or
inc
mov
push
and
pop
sbb
mov
jne
jmp
mov
in
pop
ret
ret
daa
mov
and
aaa
jle
mov
out
imul
mov
mov
movzwl
add
imul
movzwl
imul
movzwl
add
movzwl
add
movzwl
imul
add
movzwl
movzwl
imul
add
mov
imul
add
movzwl
movzwl
imul
add
mov
imul
movzwl
add
mov
cmp
jae
mov
lea
lea
movsl
movsl
movsl
movsl
mov
mov
jmp
addr16
push
mov
jg
or
xchg
adc
xor
js
add
je
jne
mov
mov
mov
inc
mov
fwait
sbb
xchg
add
mov
jmp
hlt
cmp
je
push
call
jmp
test
nop
testl
popa
nop
jo
in
bound
repz
jmp
mov
lods
xchg
in
divb
popf
aad
and
mov
push
call
mov
mov
jmp
mov
xchg
repz
lds
insb
or
call
add
rcrl
fs
add
call
cmp
je
push
call
pop
jmp
call
jmp
lret
inc
aad
dec
movsb
or
lock
sbb
cmp
jmp
adc
mov
mov
sbb
mov
or
add
cmp
jne
cmp
jne
cmp
je
jmp
dec
andb
adc
jmp
jecxz
loopne
jb
test
and
lock
add
jnp
xor
pop
jmp
adc
clc
sbb
mov
mov
cmp
jne
cmp
jne
je
arpl
gs
adc
cmc
push
icebp
enter
fwait
jmp
jne
jge
testl
push
ja
jge
negl
xlat
mov
lock
dec
inc
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
jmp
xchg
mov
sbb
sbb
je
bound
out
add
xlat
or
xchg
xor
pop
je
pop
outsb
or
sbb
push
push
xor
push
jbe
sub
mov
pop
sbb
pop
loope
loope
data16
add
test
add
fildll
lret
or
sbb
into
jne
cmpsb
mov
repnz
adc
add
add
fs
mov
lret
mov
add
add
lods
and
add
add
sahf
sbb
jb
in
cmp
jne
cmp
je
jmp
push
roll
roll
sub
test
xor
lods
cmp
jmp
mov
test
xchg
lock
fimuls
js
mov
jmp
fwait
sbb
adc
xlat
sarb
jnp
adc
pop
and
into
add
add
rcll
dec
sub
jg
movsb
cmp
addr16
inc
inc
push
push
push
push
push
push
call
mov
mov
push
call
pop
mov
mov
push
call
jmp
jle
gs
adc
into
inc
mov
sbb
faddl
ret
je
push
call
pop
jmp
dec
push
xor
sub
add
jmp
jecxz
loop
je
lahf
adc
lret
cmpsl
fisttpll
jmp
dec
fnstcw
cmc
pushf
outsl
test
ja
loope
jno
ja
loope
es
cmp
je
push
call
pop
jmp
or
or
jmp
adcb
loop
faddl
daa
shlb
cmp
ss
or
cmp
je
jne
cmp
cmc
pusha
notb
inc
and
das
repnz
add
call
cmp
je
push
call
pop
jmp
out
rorl
adc
fadds
add
xor
add
pop
ds
and
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
inc
fmuls
fsubs
mov
inc
mov
popf
add
jnp
xchg
mov
mov
push
push
push
push
push
push
call
mov
mov
push
call
pop
mov
mov
push
call
jmp
cmp
pop
push
je
mov
mov
mov
mov
mov
jmp
cmp
fldt
pop
into
test
mov
mov
jmp
icebp
push
shlb
mov
mov
sub
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
divl
mov
out
cmc
pushf
outsl
or
pusha
repz
adc
adc
and
ret
mov
je
push
call
pop
jmp
dec
roll
aad
or
add
xor
call
mov
mov
mov
mov
mov
rep
jmp
mov
mov
cld
xchg
cmc
add
or
outsl
dec
leave
ret
jmp
ret
mov
nop
testl
ds
out
repz
xor
add
add
dec
fstpt
lds
hlt
pop
in
jnp
addb
lea
jmp
inc
int3
inc
and
dec
sub
pextrw
push
les
inc
add
inc
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xchg
pop
imulb
inc
call
xor
jmp
outsb
cld
fwait
jbe
mov
mov
and
sub
pop
and
push
call
lea
lea
mov
inc
test
jmp
push
lahf
push
push
movsb
jle
jp
in
sbb
and
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
pushl
add
mov
mov
call
mov
lea
push
call
pop
xor
mov
mov
mov
neg
mov
inc
cmp
jb
lea
jmp
pop
mov
gs
and
adc
movsb
ret
adcl
movzwl
inc
add
cmp
jb
jmp
push
call
pop
jmp
add
jmp
repz
xchg
jnp
jp
in
pop
fs
outsb
or
push
pop
mov
jmp
insb
mull
icebp
dec
andl
shlb
test
sub
in
jne
sub
push
lea
push
lea
push
call
push
pop
lea
call
xor
repz
jmp
sub
cmp
mov
xchg
adc
lock
adc
lea
push
mov
jmp
mov
mov
fdivs
mov
cltd
clc
or
ljmp
decl
adc
dec
insb
cmp
je
pushl
mov
jmp
test
fldl
test
jge
xor
and
adc
adc
add
lret
je
pushl
mov
pushl
mov
pushl
pushl
jmp
xor
popa
push
jo
loop
mov
shlb
arpl
xor
pop
mov
pop
ret
jmp
adc
sbb
jo
jle
mov
add
jo
mov
pushl
jmp
call
lahf
pop
enter
and
push
loopne
push
lea
push
call
push
pop
lea
lea
xor
repz
jne
mov
call
mov
push
pushl
mov
pushl
mov
call
mov
mov
mov
add
call
mov
mov
mov
call
lea
mov
call
mov
xor
push
push
pushl
mov
call
mov
add
push
call
pop
mov
xor
xor
cmp
jae
xor
mov
mov
lea
push
mov
push
push
lea
push
call
test
je
mov
lea
andl
lea
push
pushl
mov
lea
push
push
mov
call
jmp
sbb
cld
jae
xchg
pop
xchg
pop
bound
and
add
jne
mov
stc
jae
xchg
sti
outsb
cld
fwait
jbe
in
push
add
push
push
mov
call
mov
mov
mov
mov
mov
mov
jmp
inc
mov
test
je
pushl
jmp
leave
push
shll
lods
pop
jmp
sub
stos
xchg
fndisi(8087
mov
jmp
cwtl
pop
xchg
repnz
jbe
outsl
lock
inc
mov
and
mov
test
je
pushl
mov
pushl
pushl
pushl
call
jmp
adc
pop
jp
and
xchg
inc
and
pop
push
xchg
jmp
inc
and
push
pushl
mov
add
push
push
mov
call
mov
mov
test
je
pushl
mov
pushl
pushl
pushl
call
mov
jmp
nop
adc
adcb
andb
sub
pop
fldl
pop
pushl
pushl
pushl
push
mov
call
jmp
bnd
xorb
cmpsb
xor
scas
inc
test
xchg
lock
jle
push
pushl
call
lea
push
mov
push
add
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xchg
inc
bound
leave
jmp
pushf
pop
cwtl
adc
add
lds
lea
push
inc
push
lea
push
lea
push
lea
jmp
mov
lods
mov
mov
ficoms
dec
sub
cmp
jne
dec
jns
jmp
popf
adc
filds
imul
mov
add
mov
fdivs
mov
jae
xchg
inc
iret
or
lea
push
mov
lea
call
pop
test
jl
mov
jmp
push
call
jmp
jp
jg
jmp
pop
stos
or
testl
mov
add
stc
push
mov
mov
les
add
add
call
add
push
pop
xor
lea
rep
push
pop
movl
mov
cmpl
jne
dec
jns
jmp
pop
into
pop
cmp
cmp
push
les
sbb
cli
call
bound
add
mov
mov
add
shr
cmp
jbe
ja
jo
jnp
in
dec
lea
filds
dec
cli
test
cmpsb
shll
pusha
mov
mov
add
shr
mov
push
lea
push
pushl
call
add
xor
jmp
xor
add
add
sbb
pop
iret
stos
pop
fadds
sahf
or
cmpsb
cmp
xor
sti
pop
pop
leave
ret
jmp
ss
pop
std
insl
hlt
pop
cmpb
or
push
lock
adc
inc
adc
jne
push
lea
push
call
jmp
adc
out
adc
or
jns
jmp
add
dec
fistl
inc
cmp
or
mov
mov
mov
mov
mov
mov
mov
jmp
add
test
jne
cmp
jne
cmp
jmp
test
fwait
decb
jg
arpl
sub
cmp
xor
add
add
jne
inc
cmp
jb
jmp
cmp
jle
call
jmp
lret
ljmp
add
add
add
add
xchg
add
sahf
jo
jnp
mov
popf
adc
icebp
jnp
test
add
incl
rorb
mov
push
or
sub
mov
lea
cmp
ja
push
lea
push
pushl
call
add
xor
jmp
hlt
jge
je
and
test
clc
outsb
or
push
in
popa
icebp
nop
arpl
mov
xchg
repnz
mov
xchg
lock
cltd
or
sahf
or
cmpsb
push
inc
rolb
shlb
jne
push
pop
lea
cmp
jbe
cmpb
jmp
push
popf
or
push
shll
inc
jne
cmpb
jmp
fmull
mov
jbe
loopne
fwait
push
pushf
sti
push
mov
jl
sbb
mov
add
jmp
es
pop
ret
ret
in
sbb
jb
in
push
cmp
je
push
call
pop
jmp
lods
aas
scas
or
sub
cs
jno
jbe
lea
ss
les
ljmp
mov
jle
pop
and
scas
and
movsl
inc
lret
pop
lret
xchg
mov
lock
in
jo
jge
mov
mov
andl
and
mov
dec
xchg
sub
or
pushf
ret
mov
lret
or
add
push
mov
jge
outsl
mov
sti
test
inc
rcr
aam
pusha
push
xchg
int
adc
jecxz
adc
inc
popa
negl
push
bound
out
outsb
or
loope
sub
insl
movsl
jecxz
sub
ja
test
sub
test
mov
clc
in
jg
ds
adc
inc
lret
push
or
push
js
xchg
imull
fists
sub
jno
ljmp
aam
jo
stos
pushf
mov
mov
or
add
push
sbb
inc
push
jb
out
bnd
pushf
jge
fisubs
mov
int3
xchg
or
mov
es
mov
lea
or
add
xchg
pop
sbb
sbb
sbb
mov
xor
mov
mov
jmp
and
aam
daa
cltd
lods
nop
cmp
out
iret
shl
adc
mov
inc
jmp
fs
jo,pt
jnp
inc
mov
iret
popa
cmp
jg
push
shl
repz
mov
test
divl
jnp
leave
es
repz
push
pop
sar
jno
pop
jno
enter
jo
mov
aam
lds
mov
pop
out
inc
mov
xchg
cmpsb
mov
pusha
dec
xchg
mov
pop
leave
mov
xchg
jge
mov
mov
loope
and
dec
adc
in
push
push
jmp
fsubr
push
or
pop
out
pop
cli
pusha
ret
pop
push
xor
xor
fsubrs
lock
xor
or
push
cmpsb
into
dec
stos
add
add
enter
dec
push
jae
sub
pusha
mov
mov
pop
push
decl
rcrl
sbb
sub
xchg
xlat
lret
xchg
mov
pop
mov
mov
mov
push
xchg
sbb
jp
mov
lcall
push
fdivrl
ja
bound
xchg
fisubrl
aaa
push
inc
jae
dec
sub
dec
mov
jnp
movsb
jne
imul
adc
push
jns
mov
fwait
and
cmp
sub
inc
mov
sbb
enter
sarb
addl
rclb
cs
imul
roll
cmp
cltd
add
insb
ljmp
mov
add
sahf
jle
test
adc
out
jmp
push
push
pop
mov
push
xchg
lret
jmp
pop
jne
in
mov
jle
stos
sbbl
stos
mov
cli
das
jge
mov
ss
fwait
pop
out
xchg
and
in
icebp
loop
leave
das
or
jno
dec
inc
dec
cmp
cltd
ret
add
xchg
gs
sbb
jno
bound
ljmp
jg
stc
inc
mov
test
fdivs
dec
sub
sbb
push
pop
int3
out
inc
pop
push
mov
inc
push
and
fwait
cmp
inc
and
lods
arpl
or
or
mov
ljmp
outsl
movsl
lock
and
mov
mov
jmp
and
or
imul
jge
lock
data16
daa
mov
jecxz
cmp
cs
fs
xchg
clc
jae
idiv
and
pop
xorl
inc
enter
xchg
cmpb
mov
push
and
lods
mov
xchg
dec
pusha
ud0
ds
data16
rorl
push
xor
sbb
adc
xchg
das
inc
xor
jecxz
ret
iret
pushf
inc
nop
pusha
xchg
int
pop
pop
pop
push
loope
cmp
cmpl
loop
outsb
fisttpll
mov
inc
int3
in
stos
cltd
test
xchg
in
orb
lcall
xchg
pushf
jmp
mov
add
mov
daa
movups
divl
sub
xor
je
in
xchg
sub
sbb
xor
pop
cwtl
jmp
ja
and
sahf
pop
std
clc
jle
xchg
push
inc
sbb
mov
mov
fstl
sub
icebp
frndint
push
pop
pop
ds
pop
out
and
cwtl
repnz
jae
jae
lret
stc
fwait
xor
pop
pop
fmuls
lea
jecxz
hlt
loopne
mov
pop
jp
es
test
add
pop
xchg
or
pusha
push
fstpt
lods
jb
mov
outsl
xlat
adc
mov
push
pop
rcrb
sbb
fmull
jnp
sti
enter
jmp
xor
into
sub
enter
mov
sub
jge
out
sbb
sar
jmp
lahf
dec
jecxz
xchg
ljmp
aaa
fldcw
mov
test
enter
arpl
hlt
call
inc
aam
sbb
mov
enter
aam
adc
mov
push
stc
mov
insl
imul
out
cmp
sub
rcll
mov
sahf
xor
icebp
sbb
xorb
pop
dec
jle
jbe
push
xchg
fdivrp
sub
xchg
jg
testl
pop
loopne
adc
cmp
cmpsb
sbb
sub
xchg
or
xchg
add
stc
out
sub
lret
std
jp
pop
mov
pushf
hlt
add
cmp
ret
cmp
imul
sbb
cmp
inc
out
imul
or
or
test
leave
fadds
xor
xlat
jne
pop
or
push
call
mov
scas
xor
jnp
mov
lods
dec
lcall
popf
scas
sahf
repz
xor
mov
cmp
cmp
das
pop
lcall
jae
cmp
xchg
adc
xchg
mov
aas
cmc
xor
xor
pop
jmp
or
adc
cmp
pusha
mov
mov
bnd
roll
insb
mov
pop
xchg
mov
aas
jnp
or
mov
out
jnp
and
mov
ret
fsub
dec
push
and
xor
rcrl
enter
les
cmc
sub
pop
jle
cmc
cmpl
push
fcomp
aas
xchg
sarl
cmp
jp
xchg
cltd
in
inc
pop
in
iret
or
inc
pop
lea
jp
les
call
sti
movsb
push
fdivs
hlt
sub
mov
add
pop
inc
mov
xor
mov
cmc
mov
cmp
sub
inc
xchg
int
push
mov
fwait
out
ret
adc
inc
cmp
pop
xlat
xchg
mov
pop
mov
push
sub
jne
adc
aas
sbb
das
shl
pop
iret
test
es
cmp
mov
sar
rorl
pushf
vmovdqa
mov
sarl
ljmp
scas
mov
adc
and
enter
pop
jb
bound
push
dec
and
dec
shrb
test
mov
inc
inc
cwtl
mov
push
shl
dec
mov
mov
cmp
mov
mov
ss
jne
lock
push
pop
sub
sub
mov
mov
ja
push
je
jae
mov
jb
jp
adc
sbb
inc
mov
iret
jo
and
jo
sub
repz
mov
dec
cmp
sub
cld
inc
and
inc
popf
mov
mov
ja
pop
dec
mov
aam
adc
mov
orl
mov
xchg
jnp
xchg
repnz
adc
sub
test
mov
xor
in
aas
pusha
rclb
fimuls
adc
xchg
mov
pop
data16
scas
loop
cmc
mov
xchg
das
pop
inc
gs
adc
sub
pushf
or
sti
insl
push
xchg
in
jmp
mov
inc
popa
push
push
pop
push
pop
je
cmp
iret
add
pop
xor
add
jle
adc
shrl
fs
pop
and
mov
jmp
adc
insl
jp
mov
and
ds
daa
or
shll
je
mov
cwtl
sarl
fisubrl
or
or
dec
ret
into
dec
mov
jl
out
xchg
shll
xchg
mov
mov
fs
lahf
imul
subl
lods
loope
and
xchg
and
sbbl
sbb
imul
fidivs
xchg
nop
push
sub
jl
inc
outsl
inc
cmp
bound
push
xor
adc
dec
xor
inc
ljmp
daa
add
lods
sub
testl
ficomps
mov
jmp
sub
stos
pop
and
or
mov
mov
push
cmpsb
xor
decb
into
and
push
movb
xor
push
popf
lods
jg
sbb
mov
and
dec
outsb
nop
push
or
cmpsl
stc
sub
push
mov
fwait
push
scas
rorl
mov
mov
sub
mov
cmp
les
repnz
dec
jno
in
push
or
cmpsl
pop
andnps
xchg
ds
aad
popf
cltd
clc
mov
dec
filds
or
sub
pop
jae
int
mov
inc
nop
outsl
pop
sub
fwait
test
out
pusha
idiv
arpl
lcall
rclb
or
js
shl
dec
sbb
rcrb
dec
orb
jb
minps
add
mov
xchg
add
daa
int3
lcall
icebp
xor
dec
mov
xlat
jbe
jle
icebp
inc
sub
jle
push
in
xor
cli
outsl
mov
sub
fwait
cmpl
jge
and
scas
cmp
and
fsubl
dec
insb
bound
mov
lock
notl
jecxz
and
stc
repz
or
aas
shrl
out
rolb
push
add
jno
js
mov
lret
stos
movl
sbbl
mov
and
and
adcl
sbb
lret
push
test
lcall
leave
outsb
xchg
mov
sti
push
adc
or
mov
fmul
adc
pushl
cmp
adc
dec
fwait
daa
outsl
jae
hlt
int3
jle
nop
pop
or
movsb
scas
dec
xchg
sbb
or
jae
push
push
cmp
or
cli
and
xchg
push
cltd
js
pop
loope
adc
insl
shlb
mov
std
inc
jo
popf
fldl
data16
or
cltd
or
scas
mov
push
sbb
iret
fnstsw
pusha
adc
cwtl
test
testb
cmp
mov
lds
sub
push
loope
mov
sub
fs
push
inc
add
xor
pop
adc
and
test
push
daa
insl
mov
pop
mov
enter
fsubl
adc
addr16
mov
dec
add
mov
aaa
addb
inc
mov
add
inc
cmp
pop
mov
stos
lds
xchg
xchg
lcall
sbb
xchg
daa
cmc
lds
ror
inc
xchg
xchg
outsb
lcall
loopne
fldenv
mov
test
enter
testb
aas
shr
push
aad
repz
jecxz
sarb
sahf
movsb
rorl
inc
sub
test
push
rol
nop
test
jg
xchg
rcrb
inc
push
js
jp
push
push
mov
xlat
mov
adc
jg
push
jb
mov
psllw
push
xor
mov
je
fs
loop
test
negl
inc
sub
push
ja
aaa
xor
sbb
std
aaa
jne
inc
aad
cmp
xchg
ret
inc
repnz
dec
cmp
add
cmp
dec
adc
xchg
popa
lods
lret
sub
inc
in
sub
adc
out
int3
inc
lods
mov
addr16
mov
push
jns
in
outsb
iret
cmpsl
or
adc
mov
pop
das
lret
cmp
xlat
popf
push
mov
or
jbe
sub
push
fbld
mov
ds
dec
jnp
sbb
push
andb
cmpb
and
pop
enter
cmp
repz
sub
fsubl
ss
loop
jo
pop
sub
pop
xor
xchg
mov
lods
xchg
xor
and
movsl
inc
xor
sbb
mov
in
or
dec
pop
ss
xchg
fcomps
push
xchg
mov
lock
xchg
push
sbb
div
stos
add
daa
jle
es
and
xlat
rolb
add
adc
pop
in
or
inc
dec
js
pushf
ret
pop
push
scas
lods
add
or
or
mov
lret
mov
pusha
or
jbe
jle
xchg
ja
and
mov
mov
mov
les
xchg
ss
cmpsb
ja
sbb
into
lcall
int3
pop
push
cmp
popa
adc
lods
mov
sub
cs
cli
ss
iret
adc
jl
cmpxchg
mov
push
inc
leave
movl
cli
subl
jg
js
stos
test
insb
push
imul
testb
lea
testl
inc
test
add
ret
or
push
test
lcall
jae
cmp
push
jp
add
and
lds
ror
scas
lods
mov
aam
pop
shrb
in
fwait
inc
into
out
es
adcl
add
and
cwtl
mov
lods
push
inc
iret
add
dec
dec
movsb
jo
mov
dec
push
movswl
ret
and
pop
push
xlat
pushf
scas
dec
out
pushf
test
jmp
adc
pop
sbb
cmp
hlt
jnp
sbb
loopne
xchg
mov
xchg
pop
lret
cs
adc
movsl
les
icebp
jle
ret
xor
cmp
dec
fistpll
mov
mov
cmpl
inc
cwtl
or
stos
pop
out
imull
dec
imul
mov
jge
movsb
testl
incb
or
mov
call
jmp
cld
lods
insl
arpl
push
imull
test
hlt
out
xor
dec
ss
and
mov
lock
dec
popa
mov
sbb
loope
repz
fnstenv
add
not
lcall
sbb
push
dec
cmp
mov
lds
mov
add
cmp
ja
cmp
lea
and
jmp
test
out
xchg
push
pop
movb
cmp
movsl
mov
sub
pushf
ret
mov
fs
pop
dec
dec
orb
lahf
pop
arpl
int
dec
lret
push
mov
hlt
xchg
adc
inc
cmpsb
cmp
pop
stc
cmpsb
int3
adc
shl
sti
ja
int
icebp
mov
cmp
jp
ljmp
jecxz
cmp
xchg
xchg
mov
out
mov
std
nop
mov
lahf
lcall
push
mov
mov
xchg
ja
inc
pop
or
xlat
push
iret
cmpsl
sub
mov
stc
scas
shr
jg
jecxz
sbb
lret
repz
cmp
popf
sub
iret
inc
fcmovnbe
xchg
lock
mov
push
int
ror
test
es
ja
pop
or
shrb
pop
jnp
negl
aam
enter
imul
pop
shlb
add
cmp
cli
inc
cmc
push
lds
ds
push
test
cmpsb
popf
je
sahf
xor
add
mov
mov
aad
stos
nop
cmc
cmp
pop
clc
aad
inc
cmp
push
hlt
mov
test
std
mov
fcmovnbe
jg
add
frstor
popa
cmp
test
cs
push
pop
mov
lahf
lods
xor
mov
mov
mov
push
ret
out
int3
test
and
pop
stc
adc
mov
adc
addr16
hlt
test
cmp
jp
mov
hlt
xchg
mov
cmp
mov
cmp
mov
xor
testb
jo
mov
inc
or
popf
inc
xor
sub
rol
cmp
in
and
sahf
pop
shr
and
stos
xchg
test
push
xchg
aam
in
enter
js
sahf
dec
rclb
out
cmpsb
scas
xchg
cwtl
or
fistps
push
imul
in
fcoms
imul
out
sbb
xor
mov
stc
pushf
lret
sbb
daa
lock
lret
jno
inc
fucomp
ds
sub
xlat
cwtl
dec
lcall
out
xchg
mov
mov
cld
fwait
pop
inc
lea
nop
adc
mov
mov
sahf
insb
lds
jnp
add
shrl
xor
sub
xchg
xor
outsb
mov
test
jb
adc
adc
mov
lahf
in
ss
mov
and
mov
xor
sbb
sub
push
cwtl
dec
pop
cmpsl
adc
punpcklwd
adc
pop
lock
mov
frstor
and
mov
dec
push
and
xchg
js
xchg
shr
cmp
xchg
jno
push
shrb
dec
ret
xchg
cmp
push
ljmp
jl
adc
pop
jns
hlt
add
xor
mov
into
sbb
add
std
mov
adc
add
or
inc
into
lock
mov
cmovp
ja
push
pushf
fcmovnbe
leave
mov
push
xlat
jp
sti
or
scas
les
negl
mov
xor
pop
es
test
scas
shrb
mov
sub
sbb
xchg
lods
dec
clc
pop
dec
pop
pop
stc
mov
ds
push
and
rol
push
cli
fidivs
jb
push
lods
xlat
jl
pop
jg
mov
or
dec
test
shll
sahf
shrb
sub
test
mov
or
fldcw
in
ja
int
sahf
adc
fisttps
xchg
out
int3
or
add
xchg
cld
push
add
fiaddl
cwtl
iret
pop
stos
pop
fs
loope
test
sub
xor
jns
or
rcl
mov
add
cmc
out
imul
pop
or
cltd
adc
sbb
jnp
sarl
and
out
pop
xor
sbb
fdivrp
mov
xor
inc
xchg
sub
mov
stc
loop
xor
aad
das
rcrl
fistpl
mov
rcll
xor
and
dec
fcmovu
cli
out
xchg
sbb
repnz
pop
iret
sbb
pop
lret
pop
sbb
pusha
nop
adc
aas
cmp
hlt
sbb
and
sub
int3
cmpsb
jecxz
xchg
jmp
xchg
faddp
jmp
insb
sbb
imul
leave
pushf
or
and
std
pop
cli
ds
rcl
shll
loopne
mov
add
pushf
aas
jne
cmp
push
addb
sub
sarb
mov
xchg
mov
xlat
mov
mov
repz
sbb
in
add
xchg
jl
jecxz
sub
push
cli
addr16
ret
pop
dec
dec
je
dec
push
sbb
lret
adc
mov
test
jo
sbb
and
gs
mov
inc
inc
mov
inc
divb
je
stos
addb
movsl
cmp
dec
movsl
sahf
sub
mov
or
sub
jp
sahf
cmp
movl
rcrb
lods
mov
sarl
ljmp
repz
cmp
push
dec
and
or
xor
ret
xlat
sti
mov
cltd
push
pushf
xchg
xor
sub
into
xchg
jb
add
icebp
lret
fcmovb
pop
pop
adc
lock
test
and
jp
cltd
cs
push
push
cmc
and
inc
push
xor
pushf
arpl
decb
stos
jbe
out
or
jo
cmp
lret
or
push
sub
cmp
cmp
push
lods
jge
outsb
adc
lret
pop
sahf
pop
and
mov
stos
cmp
xchg
pop
adc
push
xlat
loope,pn
jb
loope
jne
inc
es
popf
lods
or
aaa
loopne
ss
sbb
mov
cli
sarl
orl
or
xor
jge
into
and
jbe
xchg
xchg
jle
or
fs
mov
lea
pop
push
jbe
or
jns
xchg
mov
mov
sub
test
mov
ret
cmpsl
call
xchg
daa
inc
fldcw
shll
sbb
out
pop
mov
insb
mov
fs
jb
insb
mov
push
fisubrl
les
ja
cmpb
js
sbb
outsb
sub
jb
ds
xor
es
push
stos
test
lcall
sbb
fsubl
sbb
inc
mov
mov
sti
inc
push
sbb
cmp
in
mov
mov
sbb
xchg
lea
popf
movnti
sahf
cld
mov
jbe
mov
out
and
scas
js
outsb
into
out
dec
jle
ror
cmp
dec
cmpsb
xchg
ljmp
repnz
iret
cmc
lds
pop
in
cs
pop
jne
xchg
scas
add
sbb
das
test
movsl
cmp
jno
ret
mov
adcb
repnz
dec
int
xor
mov
cmp
or
or
mov
jo
push
lret
iret
jge
jg
push
scas
xlat
clc
shll
gs
cmc
pop
hlt
jp
jae
outsb
ret
fdivr
insl
adc
sbb
pop
jl
sub
call
push
adc
lea
or
xchg
push
leave
push
loope
ljmp
xor
loop
sbb
pusha
inc
movl
aas
jae
push
sti
push
pop
mov
pop
add
xchg
mov
cmp
pop
cmp
and
mov
sub
decl
loopne
mov
dec
adcl
loop
sub
pop
push
int3
mov
pop
mov
sbb
in
mov
push
imul
fnsave
mov
movsb
aad
jns
loopne
push
and
inc
mov
cltd
and
daa
test
push
dec
pop
stos
jmp
in
in
mov
roll
and
dec
leave
enter
rcr
mov
mov
shll
test
lods
scas
divb
sbb
xchg
cmpsl
sbb
adc
sub
sbb
sbb
mov
leave
pusha
out
call
jge
push
adc
jp
pusha
xchg
and
jbe
xor
cmp
int
jmp
sbb
fisttpll
xchg
lock
dec
push
stos
fs
in
cmp
push
movsb
mov
pop
xor
cmc
xchg
add
or
ror
xchg
lds
jp
sbbl
adc
stos
outsl
in
and
inc
or
es
add
imul
and
lret
jne
or
lods
jne
add
xchg
js
outsb
cmp
leave
xor
or
mov
cmpsl
mov
fstpt
adc
call
lret
ljmp
or
test
jp
jg
inc
out
addr16
push
mov
inc
xchg
dec
cmc
push
adc
and
sahf
jbe
jo
jecxz
xchg
inc
cltd
push
pop
addr16
ret
dec
ror
cmp
fwait
bound
xchg
sub
sub
dec
pop
pushf
mov
lret
ret
sub
add
and
xor
rcr
enter
movsl
popf
ficompl
or
ds
sbbl
mov
adc
gs
pop
and
out
pop
cs
lcall
das
loope
pop
xchg
movsl
lret
popf
mov
or
scas
cmp
ss
mov
out
scas
ljmp
push
loopne
fstpt
faddp
or
in
inc
pop
pop
cld
inc
push
sbb
lret
mov
ficompl
or
jo
into
lods
cmp
lret
xchg
loop
xchg
sbb
adc
shl
jl
mov
addr16
push
lock
scas
add
fmul
addr16
mov
sub
jg
sbb
xchg
pop
push
lcall
and
or
pop
test
fisubs
outsb
xchg
push
insl
aaa
fcompl
sub
xor
push
or
dec
jne
sti
xchg
inc
inc
enter
adc
mov
inc
arpl
mov
push
mov
inc
sub
fistpl
jle
aaa
das
pop
inc
pop
xor
pop
testb
daa
mov
cmpb
test
hlt
sub
into
addr16
lock
out
lods
in
arpl
inc
xchg
out
dec
aam
mov
stc
push
into
mov
jno
sub
test
jg
shlb
mov
popa
jmp
xchg
out
sub
sub
xchg
mov
pop
ss
mov
es
mov
mov
cltd
or
push
jecxz
sub
jp
es
ret
push
mov
mov
or
test
mov
clc
xor
push
xchg
loope
mov
test
into
push
rolb
adcb
and
xchg
les
adc
adc
pusha
pop
push
outsb
out
icebp
jl
mov
mov
ja
pop
mov
out
sbbb
jbe
cmp
cmc
push
jg
dec
xchg
dec
cmp
fistpl
mov
adc
ror
into
jecxz
push
es
mov
xorb
mov
aam
add
pop
push
lret
mov
and
adc
jo
sahf
pop
inc
es
cmp
xchg
mov
sbb
pop
pop
and
jb
mov
add
mov
hlt
pushf
test
jb
loope
ss
mov
outsl
inc
adc
xchg
mov
mov
mov
jnp
jbe
add
dec
dec
mov
outsb
and
mov
jle
rcl
stos
mov
lret
push
pop
jo
fdivs
and
popa
dec
mov
sarl
jg
jmp
jle
push
pop
mov
popa
subb
pop
jp
and
fs
movsl
scas
push
rorl
or
lret
mov
cs
add
xchg
mov
inc
xchg
scas
cs
repnz
fildll
pop
pop
ss
push
or
scas
into
idivl
dec
rorb
and
and
fcmovu
in
bound
xchg
jo
pop
in
stos
mov
test
adc
aas
sti
mov
add
push
adc
pop
xchg
fwait
jmp
adc
sbb
xchg
xchg
xchg
and
xchg
xchg
out
cmp
jns
pop
jge
sub
gs
in
ljmp
xchg
pop
xchg
adc
sar
in
push
pop
push
push
pop
sub
jbe
inc
scas
loopne
pop
inc
test
xchg
mov
sti
addr16
aas
push
arpl
mov
repnz
xchg
mov
cmp
pop
dec
iret
fisttps
int
ret
mov
shll
pusha
mov
dec
adc
sbb
push
and
or
xor
mov
inc
mov
pop
sbb
lahf
push
add
mov
test
mov
lods
sub
xchg
popa
and
cmpsb
mov
aaa
fisubrl
mov
jne
push
pop
in
push
shl
dec
sti
xchg
pop
jo
callw
add
jo
push
xchg
aas
adcb
mov
bound
push
ja
jge
xor
ljmp
and
xchg
ljmp
inc
sub
loope
add
pop
push
inc
cmpsb
or
fldt
pop
fcoms
dec
sbb
xor
and
out
enter
mov
sbb
cmp
lds
push
fdivl
sub
or
in
pusha
jae
aad
cltd
roll
cmpsl
call
outsb
pop
rorl
inc
xchg
xchg
inc
daa
cmp
pop
sbb
fcompl
nop
repz
mov
pop
xor
push
pusha
cld
xchg
fldenv
add
mov
pop
stc
mov
idivl
push
xor
mov
jae
and
fnstcw
dec
and
push
fstp
aaa
pushf
ret
cmp
add
sbb
xor
cmpsl
in
mov
cmp
mov
outsb
dec
pop
call
cmpsb
push
fistps
jmp
sbb
mov
in
sbb
scas
int
imul
inc
push
js
pusha
jno
cmp
mov
xor
das
call
das
or
cmp
pop
les
ret
sbb
jecxz
mov
std
out
or
cmp
int3
pop
sti
out
iretw
mov
and
dec
sbb
sar
dec
jp
inc
lds
test
xchg
cmp
sub
mov
ret
in
xlat
jl
pop
jns
mov
mov
in
sub
data16
add
xor
notl
shll
xor
ret
fdiv
movsl
sub
mov
dec
mov
icebp
lock
mov
add
cltd
push
cli
lea
mov
ljmp
mov
or
fisttpl
ret
ss
jae
mov
test
jle
xchg
fistps
movsb
mov
push
daa
das
dec
push
xor
movsb
jbe
fucomip
adc
cmovo
xor
and
andb
sar
and
xor
popa
mov
mov
add
mov
jg
test
jge
sbb
ret
cmc
sub
push
insb
sarb
dec
in
mov
mov
jmp
jmp
cmpsl
or
cmp
pop
add
add
mov
xor
mov
movsb
repz
ss
fnstcw
xchg
jno
pop
mov
ss
into
test
xchg
inc
aad
jae
out
test
xor
xchg
bnd
jno
in
iret
aad
repnz
sti
mov
cmc
lock
push
push
mov
dec
mov
adc
dec
and
jmp
cs
sahf
mov
jne
jne
iret
jp
xchg
inc
add
xchg
pop
mov
into
pop
je
cmp
mov
push
dec
xor
mov
outsl
fsub
pushf
push
pop
cmc
push
pop
add
mov
jg
pop
mov
inc
inc
mov
shlb
push
in
roll
pop
cmp
dec
in
fsubrl
cmc
xchg
sbb
cmpsb
sub
test
inc
shll
push
add
inc
dec
jl
clc
mov
xor
xchg
in
loopne
scas
xlat
aad
mov
dec
cwtl
inc
out
mov
cli
popl
repz
push
rcrb
or
js
neg
incl
das
mov
shrb
adc
mov
pop
ret
loope
push
cmp
ret
mov
mov
hlt
push
movsl
in
aaa
jmp
jbe
sub
mov
mov
jo
adc
movsl
sub
je
leave
mov
push
and
loope
out
insb
pop
sub
add
movsl
andl
or
icebp
and
lds
pop
cltd
leave
jb
sahf
andl
enter
ret
mov
cmp
into
and
aam
arpl
mov
jecxz
mov
shl
in
pop
add
sbbb
adc
adc
and
cwtl
dec
inc
or
xchg
and
mov
imul
push
mov
stc
jb
jo
ja
mov
sahf
sahf
sti
sbb
push
adc
xor
inc
jno
ror
fcoms
stos
nop
rcll
mov
push
pop
adc
adc
fisttps
jae,pt
add
test
jecxz
cmc
cmp
mov
mov
shlb
stos
int
aad
jmp
stos
insb
out
cmp
in
shll
sti
mov
aad
daa
push
imul
dec
xchg
in
add
aaa
test
xor
dec
leave
movsl
jo
repz
pop
hlt
xacquire
push
sub
xor
jns
sti
push
lods
cmp
leave
and
xchg
sub
xchg
cmp
cltd
push
fwait
inc
rol
inc
loopne
sarl
adcb
mov
out
cmp
mov
aad
jno
loopne
dec
testb
jge
movsb
in
test
in
in
add
push
xor
xor
or
stos
lret
addl
or
mov
mov
pop
arpl
movsl
in
testb
cmc
xor
popl
nop
roll
dec
jbe
xchg
push
inc
xchg
sub
adc
mov
hlt
insl
stc
push
scas
mov
pop
mov
in
arpl
dec
les
fbstp
out
xor
cs
shl
rorb
sbb
inc
jp
xchg
mov
jbe
stos
fsub
mov
ja
push
test
popf
mov
add
loope
inc
pop
dec
orb
fdivrl
adc
push
mov
jae
in
adc
mov
mov
mov
faddl
cmpsl
es
cmp
mov
inc
cmp
xchg
and
sub
mov
jmp
cli
jbe
loop
lret
mov
lret
xlat
jmp
movntq
addr16
scas
push
or
jmp
pop
xor
cmpsl
scas
dec
mov
test
pushf
hlt
dec
fisubrs
fidivl
xor
fdivr
aad
sahf
data16
jmp
repz
cmp
mov
xchg
cmp
xor
repnz
cmc
jle
dec
mov
add
lcall
cmc
enter
sub
js
ja
or
cmc
dec
aas
pop
sub
mov
mov
or
xor
jnp
rorl
and
adc
jnp
shr
inc
fscale
pop
scas
test
push
push
jle
xor
fucom
jmp
sbb
cmp
or
xchg
test
inc
push
and
mov
in
addr16
push
insl
cltd
or
gs
iret
pop
dec
in
clc
adc
ja
xor
enter
stos
push
incb
mov
testb
xchg
clc
mov
and
andb
movsb
imull
push
fldl
add
jge
and
call
sub
xchg
xchg
mov
popl
pop
xorb
pop
insb
sbb
adc
pop
add
test
sub
and
mov
sbb
sub
mov
push
insb
cmp
lock
adc
orb
adc
jl
out
jmp
test
fists
and
inc
xchg
adc
adc
mov
or
push
fs
dec
xor
add
iret
shr
cmp
outsl
ror
out
stos
xchg
fsts
es
or
cltd
push
jg
sub
addr16
lret
shr
mov
repnz
or
fisttps
shll
jmp
pop
pcmpgtd
dec
or
push
repnz
mov
mov
push
mov
lahf
mov
add
test
lea
push
addr16
test
scas
jns
bound
mov
in
pop
lds
or
pusha
sbb
lret
negl
or
xlat
sub
xor
or
lahf
divb
sub
loopne
cwtl
rcrl
rcrb
cmc
insb
jp
cmp
out
test
push
fdivrs
mov
loope
aad
outsl
gs
push
mov
loop
leave
and
and
fldt
push
mov
sub
push
mov
add
int3
cmp
decl
xorl
add
sub
fdivrs
adc
imul
mov
sub
mov
arpl
popf
shrb
mov
cmp
mov
call
es
mov
pop
cmp
lcall
lds
jno,pn
sbb
stos
loop
jecxz
and
cld
aad
lds
push
cmp
sbbl
in
lea
notb
jp
push
popf
repz
mov
and
insl
rclb
xchg
dec
test
mov
cmp
bound
imul
out
mov
pop
in
bnd
or
inc
outsl
lret
jbe
lock
rorb
out
sgdtl
outsb
push
clc
and
std
int3
cli
jb
ljmp
inc
xchg
sub
fidivrs
cmp
jg
or
cld
sub
and
or
stos
xor
and
out
in
jge
or
add
sbb
addr16
fs
xchg
aam
mov
addl
es
orb
xchg
or
enter
xor
push
dec
rorl
cltd
pusha
out
push
ret
sub
xor
mov
js
arpl
mov
sti
scas
hlt
push
out
push
xchg
lret
xchg
orl
lods
cmp
sbb
mov
and
add
cmc
add
pop
xor
xchg
mov
fnsave
cmp
fwait
mov
lds
and
inc
xor
and
or
push
in
ss
dec
scas
mov
cmp
inc
xor
mov
push
pop
xchg
dec
and
and
xlat
mov
stos
xor
int
push
inc
dec
jns
adc
dec
push
push
decb
sub
dec
in
jo
sub
xchg
decl
ljmp
movsb
lds
pushf
loopne
mov
mov
insb
cld
shll
cltd
subb
rcr
push
fdivr
mov
call
repz
inc
es
cmpsb
test
mov
dec
xchg
mov
pop
pusha
cli
sahf
test
nop
cmp
push
mov
and
push
pshufw
pop
sarb
pop
cmp
int3
insl
int
data16
imul
jno
cmp
sbb
cmp
icebp
mov
lock
or
lret
mov
scas
out
xchg
clc
jecxz
loopne
xor
test
cmovbe
insb
xchg
xorb
and
cmovle
enter
test
popf
inc
mov
js
inc
lahf
popf
cmp
and
into
les
int3
push
xchg
stos
xchg
icebp
pop
adc
icebp
push
xchg
mov
rorl
daa
inc
or
xchg
ror
aas
sbb
push
sti
ljmp
push
imul
push
xor
out
cld
int
xor
push
out
pop
nop
rsqrtps
jle
lret
add
sub
pop
push
icebp
cld
ds
adc
xchg
stos
jmp
xor
or
gs
sbb
bound
mov
and
sub
jno
mov
dec
sbb
pop
jne
loop
or
insl
fsub
cmp
xchg
fcmovne
sti
adc
fisubl
cmp
imulb
sbb
sub
jle
sbb
or
imulb
movsb
orl
js
scas
seta
cmp
mov
call
jb
xor
xlat
inc
lret
lea
scas
aas
sub
and
inc
test
pop
pop
out
loop
mov
or
inc
pusha
pop
pop
shll
jmp
jmp
adc
xor
hlt
xchg
dec
xor
xchg
je
xchg
fs
dec
xorl
bound
dec
repz
sti
in
mov
stc
mov
inc
jb
or
sbb
shr
mov
lock
and
int3
test
jns
pop
xor
pop
jno
mov
sbb
sub
add
lds
xchg
popf
cmp
sub
adc
cmp
push
loopne
subl
sub
and
jmp
iret
lcall
mov
fcomip
pop
fsubrl
jmp
fwait
jge
jnp
cmp
cmp
mov
dec
inc
enter
xor
std
mov
popf
jl
sbb
movsb
mov
push
ret
push
fwait
fs
mov
lret
mov
lds
xchg
lea
neg
or
jns
mov
push
nop
push
jmp
test
scas
pop
and
mov
cmp
cld
bound
outsl
jecxz
into
jge
scas
cs
sahf
mov
popa
mov
fcompl
call
xor
inc
pop
out
xor
mov
leave
jle
lds
mov
jp
mov
sub
inc
imul
bound
inc
lret
push
cmp
lods
cmc
inc
xchg
push
add
sub
jae
shlb
jmp
mov
lcall
sub
jo
shl
dec
pop
out
mov
add
insl
push
xor
and
sbb
push
jl
and
inc
xchg
inc
adc
lahf
aad
fiadds
mov
mov
mov
ja
cmp
and
divl
int3
mov
xchg
cmp
rorb
sub
inc
dec
or
lret
stos
mov
push
stos
inc
sbb
add
and
in
cwtl
mov
dec
jo
out
dec
lahf
pop
ss
stc
subb
sbb
mov
mov
cmp
add
sarl
cmc
cmp
int
test
xor
cmp
stc
mov
inc
sahf
mov
jle
repz
mov
jae
in
movsl
js
vmwrite
cmpsb
jb
mov
es
or
shr
out
das
push
sub
inc
out
mov
push
out
push
int3
cmp
je
sar
imul
enter
or
fs
xor
add
add
imul
push
bound
daa
or
pop
and
inc
outsb
movsl
mov
test
test
dec
lock
into
call
push
nop
xor
mov
mov
push
or
aaa
repz
add
cmp
lret
lahf
test
jbe
push
and
cs
push
popa
in
xchg
leave
dec
test
pushf
scas
push
or
aas
ds
lods
cmp
pushf
insl
lret
stos
divb
jp
mov
push
mov
cmp
xchg
sub
xor
ja
jae
ljmp
sub
pop
call
ret
shl
sbb
in
stos
mov
xchg
lcall
movsl
add
cmp
xor
js
push
xchg
ret
stos
lret
pop
insl
lcall
fwait
lret
test
mov
idivl
fwait
add
insl
mov
mov
out
pop
fdivrp
jp
pop
and
js
es
dec
ds
shlb
mov
aas
adcb
pushl
push
fisubs
inc
lock
dec
adc
in
push
add
add
loope
in
enter
and
mov
mov
push
cltd
fdivs
xchg
jns
jmp
or
jecxz
aas
aas
mov
jae
dec
enter
enter
push
push
inc
mov
out
cwtl
arpl
cli
fildll
xor
pop
jo
sub
push
into
sti
lea
aas
fisubl
es
sbb
xor
in
pop
adc
test
mov
sub
mov
shrb
popf
jl
int3
lahf
imul
aam
mov
sti
mov
dec
je
je
ficoml
andb
pop
loope
sub
adc
and
fwait
xchg
test
xchg
pop
fistl
popa
std
pusha
push
ljmp
pushf
les
adc
dec
mov
add
xlat
xchg
xchg
scas
pop
push
lods
arpl
jb
mull
cmpsl
rorl
loope
fiadds
jbe
mov
outsb
pop
jge
daa
xchg
imul
subl
in
aam
or
stos
bound
divl
and
jle
mov
and
repnz
push
icebp
arpl
sub
cld
jmp
ret
sbb
dec
pop
bound
jmp
cmc
inc
cmp
dec
mov
cmp
cmp
popa
out
scas
push
fs
adc
sbb
shlb
pusha
leave
mov
and
pop
inc
cmp
das
jp
mov
mov
setnp
jle
cld
sub
xor
rcll
loop
sub
mov
xorb
mov
out
lock
push
push
fmuls
movsb
dec
sahf
inc
imul
push
ret
pop
or
push
push
std
push
mov
or
cmp
lds
test
xor
inc
int
adc
ljmp
add
sbb
pop
dec
leave
adc
lea
sbb
dec
inc
or
std
daa
movsb
push
pop
jbe
push
and
inc
notl
dec
xchg
insb
stos
xchg
shll
into
dec
xchg
xor
sbb
into
or
lret
rol
or
addr16
cli
and
mov
or
mov
xchg
jo
push
mov
pop
mov
push
cwtl
sbb
jle
fisubs
xlat
inc
scas
mov
sbb
ds
xchg
popf
daa
xorb
test
aam
adc
inc
mov
stos
xor
fdivrs
mov
or
jge
into
pop
loope
scas
in
ret
mov
jne
icebp
ljmp
mov
nop
dec
xchg
adcb
int
imul
sub
je
gs
push
data16
fsubrs
sbb
dec
jb
jmp
stos
lret
cmpsb
mov
push
cmp
bound
mov
mov
dec
call
daa
sub
js
in
mov
add
mov
in
mov
lea
out
ret
jmp
jno
or
imul
and
jp
xchg
js
lret
clc
sub
push
jge
ret
push
sbb
in
mov
pop
test
rcrb
adc
push
push
xchg
and
rorb
pop
pop
fdiv
lds
sahf
lahf
inc
arpl
sarb
xchg
neg
data16
mov
cmp
jns
enter
pop
add
push
cli
test
sbb
inc
cmpsl
push
jne
lret
sbb
or
sub
bound
xor
lcall
mov
inc
and
inc
lahf
push
out
jl
popa
mov
sbbl
bound
rolb
cld
ds
movsb
inc
in
imul
in
push
cmp
scas
or
lret
jae
scas
sbb
movsl
jl
and
imul
ret
xor
inc
sub
mov
xchg
fsubl
mov
pusha
cmp
mov
sarl
inc
repz
ljmp
xor
cmp
aas
dec
mov
add
mov
outsl
sub
or
xchg
or
inc
adc
inc
dec
mov
scas
sub
mov
sub
xor
call
ror
pop
or
int
jl
pop
xchg
pop
add
inc
jp
shr
int
std
mov
pop
dec
inc
sbb
loope
ret
es
and
inc
pop
adc
push
lahf
outsb
pop
sub
pop
popf
mov
pop
mov
xor
push
movsl
adc
jg
push
dec
pop
xor
cmp
into
incl
out
jns
mov
inc
jle
testl
loope
push
outsl
roll
cmpl
mov
push
test
notl
mov
jbe
aad
cmpsb
shl
nop
insb
or
dec
scas
lahf
cld
jmp
sbb
cmp
lret
mov
aaa
js
fidivrl
add
outsb
xchg
mov
lods
scas
cmpsb
xchg
jo
inc
push
imul
xchg
in
and
cmpsb
jl
jp
jmp
jbe
jbe
mov
push
xchg
push
popf
inc
pop
sub
jge
iret
adc
fst
jno
xlat
xchg
fisttpl
ljmp
ljmp
dec
dec
lock
fnsave
jp
aad
jge
mov
adc
or
daa
sbb
or
or
xchg
sahf
movsl
hlt
inc
aam
repnz
loope,pt
pop
add
stc
out
insb
or
jle
add
std
sbb
xchg
xor
in
in
pop
dec
fprem1
scas
test
outsl
mov
adc
jmp
cmp
push
popf
in
mov
es
mov
cli
cmp
stos
fdiv
leave
notb
jmp
or
adc
mov
daa
int
decl
push
aam
mov
into
movsb
addl
xchg
sarl
cmp
dec
push
push
jne
pop
adc
mov
adc
shll
icebp
sbb
imul
addr16
pusha
test
scas
call
inc
xor
inc
int3
push
xor
fildll
adc
sbb
mov
push
loop
cld
and
push
xchg
fdiv
fdivrs
or
fstps
sub
mov
fstl
outsl
test
mov
sbb
ss
pop
test
mov
aaa
rclb
roll
dec
push
adc
repnz
pop
xor
mov
fsubr
cs
push
xor
out
jp
jecxz
cmpsl
shlb
mov
add
mov
adc
mov
and
in
nop
mov
dec
mov
dec
dec
or
hlt
dec
arpl
or
dec
pop
cld
jge
bound
addr16
lcall
addl
shlb
dec
jnp
add
cmp
or
je
lods
add
mov
fs
xor
jae
xor
sub
add
das
mov
dec
sub
sbb
subb
mov
aad
xor
xlat
mov
in
mov
movsl
inc
lret
add
fs
adc
imul
mov
jbe
inc
xor
inc
and
pop
pusha
jmp
jo
lock
repz
xchg
sbbb
adc
xor
cli
rcrl
and
mov
shll
fidivl
cld
aas
mov
je
cmp
jg
mov
in
or
andl
jb
lods
jae
nop
inc
mov
cmpsl
sub
sub
pop
add
adc
lods
aad
insb
xor
mov
sub
mov
xlat
dec
mov
mov
mov
pop
xor
lea
add
push
addr16
push
stc
outsb
repz
sbb
les
pop
push
pop
pop
ss
push
xor
cmc
xor
sti
inc
and
sti
push
push
add
cwtl
mov
imul
popl
into
and
mov
cli
nop
mov
pushf
push
inc
movsb
jle
in
sahf
push
mov
mov
mov
in
icebp
push
rclb
dec
pop
aas
daa
dec
xchg
xor
xor
mov
flds
js
cs
arpl
arpl
pop
jno
sti
cli
iret
pop
imul
mov
inc
loopne
lret
dec
cmp
outsl
loope
jmp
lock
mov
add
outsb
pop
jmp
mov
int
and
push
loop
inc
mov
leave
das
sub
gs
nop
daa
mov
sub
ss
out
int3
cmpsb
jb
mov
cmp
add
popl
mov
rorb
add
push
mov
or
jle
xchg
inc
outsl
pop
das
push
jp
pop
fdivr
int
jle
call
push
xchg
repz
ds
repz
bound
inc
adc
lock
xor
nop
hlt
cld
fstpl
mov
push
pusha
jmp
fildl
sub
test
loope
xor
mov
push
ja
repz
sbb
mov
imul
pop
xlat
gs
fildl
popa
and
fcmovnu
shll
adc
pop
ret
lds
jmp
fwait
xor
pop
and
inc
test
call
pushf
loop
test
push
inc
push
inc
lahf
jp
cs
jle
es
stos
jl
pop
test
adc
mov
movsb
rcrl
mov
mov
push
fs
sbb
jg
mov
cmp
aas
push
aam
es
push
test
inc
mov
pop
lock
fcompl
jmp
in
pop
or
ret
jmp
jmp
fisttps
push
fcmovnbe
add
jns
push
fisubl
jle
xchg
xchg
pop
into
mov
add
loopne
icebp
in
push
movsl
xor
add
push
test
xlat
out
bound
and
gs
and
mov
adc
fsubrl
fmuls
mov
bound
test
dec
and
add
ja
or
gs
jo
xchg
add
or
orl
outsb
pop
into
adc
pop
aad
adc
clc
xor
addr16
pop
push
mov
enter
int3
fidivl
popa
inc
jo,pt
daa
sub
popa
or
mov
mov
mov
sub
cld
lock
jge
jecxz
bound
inc
mov
jecxz
stos
sbb
jno
push
incb
push
aad
jl
ljmp
stos
cmpsb
cmpsb
jmp
fs
int
add
cmp
adc
adc
mov
scas
in
mov
mov
add
adc
shlb
xor
imul
aas
xor
bound
push
aaa
rcr
test
gs
stos
xchg
or
stc
cmp
mov
ret
push
fbld
jmp
hlt
xor
adc
lock
loop
fstps
scas
loop
cmp
mov
fwait
sub
jecxz
or
int
adc
xor
mov
scas
insl
test
aaa
test
fwait
ja
mov
fimull
cmpsb
insb
pop
xchg
cmp
cmc
out
sbb
xor
sbb
cld
mov
es
lret
push
push
ds
enter
orb
aaa
xchg
and
int3
fwait
mov
je
js
out
push
cmp
dec
scas
pop
and
jp
outsb
iret
roll
mov
popa
sar
sbb
dec
fisttps
add
mov
test
pushf
roll
cli
addr16
fbstp
jns
inc
mov
sbb
rcl
mov
jmpw
push
jmp
and
mov
fs
fwait
mov
out
inc
xor
sub
xchg
leave
not
jne
stos
jnp
or
sti
loop
test
data16
inc
sbb
aas
call
mov
mov
roll
push
cmp
inc
jo
cld
jp
cmpsb
inc
pop
in
xchg
push
xor
mov
or
cld
cmp
and
orb
pop
fisubrl
into
daa
mov
shrl
or
xchg
inc
std
push
sbb
js
jo
pop
js
fs
pop
dec
push
jo
hlt
inc
jo
idivb
popf
dec
stos
sbb
and
cmp
adcb
xor
xorb
ja
ror
stos
lds
dec
sub
sbb
pusha
jb
insb
daa
ds
and
push
sbb
xchg
pop
out
xlat
mov
les
cmp
leave
sbb
dec
xchg
xlat
lods
sbb
sbb
sub
dec
loop
test
and
icebp
ret
xor
jno
and
xchg
loope
sbb
ret
lods
icebp
fwait
mov
sbb
pop
outsb
lods
xchg
adc
or
jnp
mov
insl
pop
mov
sub
lea
imul
xor
popa
pop
sar
fwait
adc
fnstsw
shll
pop
pop
lret
shll
pop
and
xor
lret
and
pop
cmp
adc
jg
xchg
add
push
adc
mov
arpl
test
pop
pop
out
add
imul
xor
dec
sub
and
dec
add
cmp
push
jae
xchg
ss
dec
jmp
icebp
inc
push
rcll
xchg
pop
cli
pop
push
pop
fwait
add
sub
mov
sub
and
in
les
cmc
gs
aam
add
or
pop
xor
es
bound
jmp
xor
test
sub
les
test
pop
addb
fisttpll
inc
sti
fcmove
push
and
mov
in
pushf
inc
pmaxsw
movsl
addr16
adc
pop
xchg
sbb
shlb
je
or
xchg
push
mov
cli
xchg
dec
out
pop
aas
push
push
loope
sub
xor
xchg
sub
cmp
fimull
aaa
shrb
xchg
xchg
mov
dec
jp
stos
mov
cs
mov
push
jl
push
xorb
sbb
mov
outsb
cmp
in
sub
ds
xchg
fisubrs
lods
mov
inc
fildll
ret
inc
or
repnz
test
popa
mov
sub
xor
nop
stc
adc
cmp
outsb
scas
jg
xor
repnz
and
and
jle
rclb
dec
pop
cmpsb
test
dec
jno
pusha
mov
and
mov
push
inc
lret
loop
arpl
add
stc
add
pusha
pop
aas
cmp
mov
lret
jo
mov
jp
lods
sbbl
mov
bound
cmp
out
stc
insb
subl
xor
jne
leave
sbb
pop
ljmp
jns
sbb
jbe
cmp
repz
mov
fcom
add
cmp
pop
loope
test
ljmp
xchg
dec
xchg
and
xchg
xchg
lcall
cmp
inc
add
jae
adc
movsl
pop
aaa
pusha
pop
mov
push
int
dec
int
jb
into
mov
js
push
mov
fstl
mov
add
xchg
mov
roll
sub
es
sbb
test
sbbb
clc
sbb
push
aaa
xchg
and
xchg
ficomps
in
jl
ja
cmp
xchg
jae
test
fs
jnp
xor
mov
stos
sub
jne
in
push
adc
lock
cwtl
sahf
push
mov
push
icebp
mov
scas
push
cld
mov
push
ret
fucomip
iret
cltd
dec
xchg
lahf
fnstcw
scas
inc
or
ficoml
ds
xlat
call
jg
test
out
mov
loop,pn
lds
ror
gs
mov
bnd
in
out
and
addr16
jmp
mov
dec
xchg
mov
pop
pusha
cli
sahf
test
nop
cmp
and
ljmp
in
cmp
aaa
call
imul
xchg
out
out
xchg
mov
mov
jno
mov
and
cld
sbb
push
out
pop
dec
cltd
sbb
adc
fldenv
jne
dec
sub
lods
mov
or
sbb
mulb
pop
mov
adc
test
ss
pop
loop
push
inc
adc
push
int
and
repz
adc
movsb
xchg
add
mov
push
test
mov
dec
jle
dec
sahf
mov
insl
in
jnp
mov
pushf
imul
pop
cwtl
ja
inc
lock
out
push
jnp
jl
insl
mov
xchg
mov
lds
into
push
sub
sarb
cmc
mov
movsb
sbb
sbb
xchg
das
inc
cmp
lret
jno
mov
jle
inc
fmull
mov
mov
pushf
test
in
inc
and
rcrb
ja
rorl
filds
leave
adc
subb
push
dec
lds
push
jae
cli
cmp
mov
push
and
cmc
arpl
pop
push
aad
pmullw
mov
filds
fstps
dec
outsl
mov
test
ret
jno
push
ds
das
xchg
scas
xor
pop
pop
or
fwait
add
mov
adc
rcrl
and
push
add
and
daa
lods
xchg
stc
dec
add
xor
shrl
out
cmp
push
dec
les
mov
add
mov
xor
sub
cmpsl
cmc
addl
sbb
sub
testl
xorl
sahf
mov
or
mov
cmp
sbb
cmpsl
dec
lds
insb
mov
push
mov
mov
and
dec
out
loop
mov
sub
inc
mov
jne
mov
int3
pop
fidivl
ljmp
xchg
mov
movsb
mov
test
push
imul
les
cwtl
push
cmpsl
in
push
jae
mov
mov
cmp
gs
jmp
dec
push
ret
mov
sub
lcall
ljmp
xor
mov
fstpl
push
shlb
sbb
or
fs
and
movsb
cld
pop
in
jbe
xchg
out
bound
mov
cmpsb
xor
sub
dec
dec
test
mov
and
movsl
xor
and
ljmp
movsl
dec
xchg
or
jp
inc
mov
inc
add
sahf
dec
aam
jno
add
push
loop
adc
dec
push
and
jl
mov
mov
mov
and
pop
stc
cmc
mov
cmp
mov
xchg
mov
or
xor
mov
data16
sub
into
imul
pop
ja
aad
pop
test
sub
push
push
lcall
cs
jnp
mov
pop
decl
xchg
pop
jns
jne
pop
jge
or
and
pop
adc
mov
sbb
repnz
mov
or
add
popa
and
xchg
stos
jno
pushf
mov
hlt
js
pop
lods
and
push
dec
pop
jno
sbb
ja
and
pop
or
xor
or
xchg
add
lds
vaddsd
mov
sti
or
jo
fbld
sbb
push
lods
mov
dec
fdivrl
mov
mov
push
push
jns
int
xchg
jl
int3
dec
add
sbb
sbb
loope
in
cmp
adc
xlat
ret
and
sub
aas
mov
mov
das
stos
ljmp
jb
add
sub
xlat
cltd
test
cmp
mov
xchg
adc
pop
fisubrl
mov
loopne
test
cmc
scas
daa
xor
mov
sbb
in
es
pop
shlb
inc
push
and
adc
shr
or
popf
movsl
sbb
rcrl
fs
xchg
test
and
out
shl
jns
pop
jmp
leave
mov
adc
push
lahf
test
lods
inc
cmc
ffree
jge
add
test
fisttpl
loop
pop
into
adc
add
pop
dec
push
jg
imulb
aad
cmp
iret
mov
xlat
mov
add
dec
sbb
inc
mov
subb
sbb
fisubrl
and
movsb
push
push
pop
aad
aas
cmpsl
icebp
imul
sub
push
adc
mov
dec
stc
sbb
xor
and
dec
xchg
pop
cmp
xchg
push
mov
xchg
inc
add
ficoml
popf
pop
push
lea
gs
sub
out
mov
and
fidivs
out
int
mov
xchg
std
and
inc
mov
ds
faddp
mov
push
and
cmp
inc
push
or
inc
xor
and
out
xchg
lea
popf
shrb
mov
std
cli
cmpsb
and
jmp
scas
icebp
gs
movsb
sub
mov
mov
imul
add
pop
bound
repz
sub
jne
inc
push
mov
and
sub
mov
push
cmp
dec
in
push
cmpsl
push
xlat
out
ja
stos
fmuls
filds
sub
pop
jecxz
inc
cmpsl
inc
jg
test
jo
ret
dec
jmp
and
sub
rolb
jno
pop
lret
sahf
outsb
fisubrl
push
int
cmp
sub
mov
and
scas
dec
or
movsb
adc
jnp
sub
xchg
pop
lahf
repnz
aam
mov
stos
cmc
addb
cmpsb
jb
or
jmp
adc
inc
and
pop
out
mov
xchg
mov
mov
cwtl
push
out
jnp
inc
aas
jmp
aaa
xchg
mov
mov
outsb
int3
push
out
outsb
ficomps
je
mov
sbb
sub
adc
jmp
popf
inc
push
jmp
fadd
add
insb
jecxz
jl,pt
cmp
or
inc
addr16
sub
pop
mov
insb
adc
outsl
inc
insl
xchg
ficomps
lret
jl
fwait
or
dec
dec
mov
inc
cmp
jp
mov
imul
movsl
pop
dec
jns
add
mov
pop
nop
lret
push
xchg
xchg
cmp
hlt
nop
in
cmp
cmp
je
push
daa
je
mulb
dec
mov
sbb
sub
mov
adc
imul
subl
dec
pop
pop
into
fbstp
jb
jnp
mov
push
enter
xchg
jmp
lret
and
fbld
cli
shrb
imul
lcall
lods
aad
sbb
in
jle
lock
sbb
mov
pop
arpl
lea
insb
enter
hlt
cmp
push
and
ret
sbb
cmp
mov
dec
in
insb
add
push
dec
xchg
xchg
mov
lret
or
jne
xor
das
fsubrl
out
or
xchg
outsb
xor
jl
adc
cmpsb
shld
mov
rcll
jbe
daa
movsb
jmp
loopne
xchg
xchg
add
jecxz
fsubrs
aam
xor
clc
adcb
cs
in
fdivl
mov
or
and
adc
xchg
sbb
pop
xor
cs
lahf
ljmp
sbb
cltd
in
insl
ret
pop
inc
cmp
arpl
or
repz
aad
sarl
mov
mov
je
sbb
cmc
add
pop
fildll
add
sub
jae
adc
dec
and
push
mov
sub
xchg
xor
imul
cld
shrb
jle
mov
popf
lods
xor
test
mov
arpl
pop
push
cli
scas
rcrl
js
scas
and
jb
scas
sub
outsl
pop
test
xor
add
test
das
mov
lock
sbb
mov
dec
push
je
sbb
sub
test
jne
xor
mov
mov
sti
xor
adc
ds
jns
test
pop
push
mov
cld
or
aam
popa
sub
push
xchg
test
xor
sub
pop
push
flds
cwtl
sub
pop
shll
popa
sub
scas
adc
call
jle
pop
insl
jl
loope
jb
fs
jmp
lahf
or
std
fsubs
xchg
out
negl
test
jnp
mov
sbb
scas
push
icebp
jno
lea
aas
das
mov
iret
imull
mov
in
cmp
into
cmpsl
fisttpll
lds
ja
jp
sub
insl
pusha
rclb
insb
addr16
loopne
xlat
jae
sub
and
daa
ljmp
xlat
das
pushf
dec
xchg
lods
loope
jo
roll
aas
and
imul
dec
adc
jo
enter
mov
stc
add
loop
pop
jge
dec
jg
loop
mov
adc
lcall
push
jb
insl
jae
setb
jecxz
push
decl
xchg
mov
pop
iret
ja
sbb
dec
mov
mov
arpl
sub
pop
popa
mov
lret
mov
in
scas
inc
stos
mov
sbb
dec
and
les
cmp
add
jge
mov
dec
and
scas
inc
cwtl
or
nop
enter
out
xor
or
inc
and
imul
dec
and
pop
add
or
ja
adcb
or
xchg
lcall
aam
mov
or
mov
cmp
cmp
mov
inc
shll
in
pop
lock
mov
sbb
outsl
dec
movsl
fs
jne
test
jne
adc
scas
jl
fisubrs
out
push
inc
sti
outsl
mov
or
in
outsb
mov
mov
xor
cmp
mov
jns
jns
cmc
and
inc
iret
leave
dec
sbb
sub
or
xchg
xchg
hlt
push
mov
js
add
push
add
cld
fs
shrb
daa
jg
aam
jae
cmp
test
enter
jo
sahf
ljmp
xor
jecxz
inc
and
call
dec
bound
imul
inc
mov
out
stos
xchg
xor
cmp
push
mov
mov
fsubrl
movsb
ss
into
mov
ret
test
sub
daa
dec
inc
dec
inc
sbb
cmpb
ja
lahf
test
cmpb
cmp
rcl
pop
popf
insl
lods
mov
inc
icebp
push
sbb
decl
sbb
movb
and
push
adc
xchg
jno
mov
mov
sub
pop
push
flds
cwtl
sub
pop
dec
pop
out
test
xlat
xchg
xchg
add
jbe
sbb
test
fcmovnu
hlt
repz
sub
pop
xchg
cld
or
loopne
inc
mov
ret
sbb
or
movsb
or
mov
pushf
dec
js
les
inc
mov
xor
mov
stc
lds
stos
fisttps
cmp
faddp
cmpsl
add
fs
into
cmp
add
mov
jl
loop
out
xchg
imul
inc
and
int
jge,pt
xchg
sahf
loopne
xorb
lock
dec
rcll
ret
into
bound
subl
jbe
inc
sbb
mov
cs
sub
fxch
push
mov
cmpsl
icebp
das
clc
sahf
sbb
insb
and
adcl
inc
cmp
sbb
in
imul
ficoms
xchg
mov
and
test
into
adc
xor
fimuls
dec
shll
scas
mov
repz
aad
mov
lock
and
push
xchg
and
mov
jnp
jnp
stc
sti
das
xchg
cmp
adc
pop
jecxz
call
push
test
push
daa
or
inc
sub
cltd
lret
bound
xor
je
inc
pop
mov
in
sahf
adc
and
pop
xchg
sub
les
clc
aam
and
shl
mov
and
xchg
ja
inc
mov
insb
xor
aaa
xor
or
pop
lret
xor
push
loopne
lods
push
aas
or
push
pop
clc
cmp
pop
call
or
xchg
jle
test
cmp
mov
lods
mov
pop
xchg
push
dec
jg
rcll
and
jge
rol
inc
inc
filds
div
mov
add
daa
pop
dec
out
inc
inc
aas
mov
pop
sub
mov
mov
add
pop
imull
or
sbb
jnp
jae
pop
inc
cmp
cs
cmc
adc
push
in
inc
dec
pop
mov
push
mov
sub
jne
push
sbb
jno
sbb
imul
fimuls
pop
add
cmp
push
dec
xorl
mov
pusha
ficoml
loope
stos
push
push
xor
test
adc
lock
sbb
fiadds
push
push
push
cltd
movsb
testb
cmp
xchg
mov
test
cmp
repz
int3
loop
ja
mov
or
out
addr16
mov
mov
sti
les
inc
push
mov
adc
jp
dec
cli
jbe
ja
xchg
aas
movl
xchg
insl
dec
dec
xor
push
jo
clc
test
push
and
dec
loop
sbb
mov
mov
push
cld
push
ljmp
cmp
and
movsl
sbb
xor
jns
outsl
pushf
fisubrs
cld
and
loopne
sti
imul
xchg
test
inc
outsb
test
ss
mov
xchg
mov
push
mov
negb
lret
pop
test
push
jns
andb
stos
sub
dec
or
mov
jo
and
dec
dec
fwait
add
outsb
mov
mov
mov
daa
push
ljmp
push
ret
js
out
lods
cmp
inc
xchg
jo
sbb
jo
add
test
ss
or
lcall
iret
lret
xchg
aad
leave
out
dec
xor
mov
adcb
push
fsub
into
nop
sub
gs
jle
out
push
mov
call
or
xchg
jle
pop
dec
loopne
fstp
mov
pop
mov
sub
and
stc
cli
add
fwait
xlat
xchg
inc
je
mov
mov
test
lret
inc
int3
cmp
in
fiaddl
insl
cmp
sti
lret
out
adc
cli
mov
popa
push
out
pop
js
dec
aas
sti
aaa
add
sbb
mov
repz
sub
jbe
xor
cmc
mov
repz
out
pop
push
daa
sub
in
jmp
sbb
push
shlb
mov
insb
repnz
mov
cmp
jle
mov
jb
xchg
icebp
and
loope
test
mov
mov
fcompl
pushf
jl
cmp
mov
jno
inc
sub
mov
loope
dec
loope
or
xor
xchg
aas
inc
mov
mov
imul
inc
ja
aas
cmp
icebp
insl
pop
xor
pop
push
pop
mov
icebp
jb
sub
mov
jb
sub
outsl
sarl
int
movsl
dec
adc
pop
jae
pop
inc
sbb
pop
sahf
mov
xor
outsl
sub
es
std
cmp
ret
pop
jae
sarb
mov
adc
enter
jp
jb
pop
pop
xchg
stos
mov
adc
cmp
jbe
jle
test
jp
test
aaa
pusha
inc
mov
add
sbb
adc
sbb
pop
out
in
cmp
push
push
out
dec
ret
xor
and
shl
dec
fisttpll
dec
test
lahf
aaa
stc
jp
jo
add
or
sub
add
inc
mov
fdivrs
clc
test
bound
lods
lahf
and
jne
mov
inc
xchg
fcomip
das
xor
stos
xchg
xchg
inc
cmp
clc
test
add
loopne
inc
cmp
int3
iret
ret
lea
je
sub
fisttpll
push
cmpsl
xchg
call
stos
mov
fcoml
lcall
lahf
add
push
push
int3
andb
sub
addr16
adc
dec
add
sti
inc
into
mov
push
in
loop
shll
xchg
sub
mov
pop
out
mov
sbb
push
test
aam
int
cmp
xchg
addr16
and
popa
cli
sbb
in
lcall
pop
and
hlt
sub
and
pop
test
push
push
cld
pushf
cmpl
and
cmpsb
mov
pop
inc
pop
add
push
test
inc
cmpsb
bound
push
dec
pop
mov
sub
or
roll
adc
pop
cs
imull
xchg
insb
add
inc
or
jno
jb
popa
adc
push
sbb
lds
sti
lods
xchg
jmp
sub
mov
out
ljmp
cltd
adc
inc
inc
mov
shll
rcr
aaa
jp
arpl
popf
imul
mov
flds
cwtl
sub
pop
pop
test
bound
mov
in
aam
mov
push
lds
mov
sub
mov
arpl
sub
mov
add
inc
cmp
cmp
adc
cwtl
fcoml
pop
cmp
xor
stc
xchg
int3
xor
push
and
mov
shrl
lods
xor
flds
cld
sbb
pop
sub
enter
pop
or
std
dec
ret
cltd
jge
xchg
add
mov
mov
pop
inc
sbb
shrb
mov
insl
cs
jg
mov
cmc
inc
es
add
mov
push
jge
cltd
cwtl
dec
mov
sarl
pop
cwtl
jno
daa
xchg
lods
mov
xchg
jne
and
orl
add
stc
xor
aam
add
sbb
push
add
or
and
loopne
xchg
xchg
lcall
dec
stos
mov
lods
xchg
fadd
pop
xor
xchg
push
popa
sahf
xchg
test
imul
es
sbb
sub
je
sbb
fmul
jne
popa
daa
push
push
push
xchg
dec
loopne
xchg
movsl
push
push
pop
adc
call
jmp
pop
push
sub
sbb
lods
aas
scas
xchg
mov
and
xlat
add
mov
mov
cmp
xchg
sbb
sbb
sbb
out
out
mov
movsb
aad
pushf
dec
aad
and
mov
mov
xor
adc
inc
dec
stos
cmpsl
js
cmp
pusha
cwtl
je
flds
out
push
je
mov
aaa
movswl
repz
out
mov
xchg
push
xlat
xchg
fisubl
loopne,pt
loop
repz
fcomps
or
jmp
stc
je
sub
jne
loopne
add
test
shrl
aad
mov
and
and
jg
and
and
and
jae
lods
push
dec
movsb
cmp
mov
pop
xor
or
fcoms
rcrl
jnp
pop
xor
jl
push
dec
stos
lock
ret
cmp
popa
dec
pop
outsb
andl
movsl
cmp
scas
push
inc
lret
dec
les
sbb
jae
cld
cmpsb
or
xor
or
lea
jns
jns
mov
pop
jp
movsl
in
add
push
popa
std
dec
addr16
mov
inc
test
icebp
mov
pop
mov
scas
jmp
ret
int
xor
sub
mov
fwait
dec
xchg
push
xor
fistps
repnz
push
sarb
leave
xchg
inc
push
push
push
inc
pop
mov
dec
mov
push
mov
std
adc
scas
call
ret
inc
loop
cmp
sub
jns
je
rcrl
and
add
xchg
aad
jl
cld
inc
hlt
sbb
xchg
out
leave
fidivrs
add
cmp
out
inc
mov
dec
mov
test
sub
lret
mov
inc
xchg
dec
jecxz
xor
adc
jle
mov
sub
pop
push
flds
cwtl
sub
pop
xor
mov
dec
and
sub
outsb
aaa
xchg
int3
mov
mov
jp
adcb
cmpl
cs
fs
lret
maxps
cmp
mov
js
mov
mov
push
ret
sub
jp
jb
je
xor
fwait
cwtl
daa
js
std
and
insl
sti
cs
inc
inc
sub
push
sub
cmpsl
mov
movsl
push
fs
aam
push
xchg
lret
adc
pop
adc
jns
pop
fimull
lcall
xor
xchg
mov
call
flds
out
fsin
ja
adc
or
sbbl
dec
cmc
xor
aad
es
mov
jmp
pop
ror
in
call
gs
xor
and
cmp
adc
aam
and
or
sahf
stc
sbb
jmp
jnp
and
push
mov
jle
jecxz
lret
mov
sbb
push
cmpsb
lods
clc
mov
jb
scas
scas
lcall
shr
es
inc
in
idivl
nop
pop
insb
imul
add
sbb
jns
jle
loopne
rolb
add
adc
loopne
sub
jne
insb
pop
lods
mov
fdiv
pop
ss
imul
jns
and
out
stos
test
lret
inc
mov
adc
inc
xor
test
loop
xchg
mov
fs
mov
mov
inc
fistpl
adc
sub
adc
pop
xor
cmc
mov
cmp
imul
cmp
xchg
inc
jae
cmpsb
sub
insl
push
inc
fs
lret
fsts
daa
arpl
mov
jmp
testl
cmpsw
push
xor
push
out
mov
adc
xchg
loop
ds
ret
push
push
das
dec
adc
sti
mov
pop
in
dec
sbb
lods
push
cmp
das
cmpsl
les
pushl
popf
pop
mov
stc
xor
daa
out
jb
je
adc
daa
mov
cmp
mov
scas
mov
ds
push
call
pop
sbb
xchg
stos
ljmp
and
adc
dec
rol
out
enter
das
outsb
sahf
inc
cmpb
sub
loop
xlat
push
outsb
out
call
or
imul
movsb
arpl
mov
pushf
mov
pushf
bound
cmp
mov
ss
add
addr16
pop
in
ljmp
leave
lahf
dec
call
pop
inc
adc
sarl
scas
ja
xchg
jae
scas
test
mov
dec
test
xchg
dec
pop
mov
jmp
xor
cs
out
jno
add
inc
aam
cwtl
xchg
jmp
fstpl
loop
scas
stc
xchg
cmp
bound
lret
in
icebp
lods
xchg
adc
arpl
and
cmp
fimuls
push
test
std
flds
es
sbb
int3
dec
xchg
mov
cli
aam
jp
rorl
add
iret
nop
inc
or
pop
mov
int3
mov
out
hlt
xchg
out
test
sbb
hlt
loop
mov
pop
adc
mov
aad
inc
movb
xchg
cmp
rorb
das
popa
mov
cmp
int3
inc
sbb
xchg
mov
insb
lds
lods
adcb
push
pop
pop
adc
pop
jne
pop
push
test
sarb
js
or
aam
xchg
mov
aaa
test
jecxz
mov
fwait
sub
pop
out
cmp
test
cmp
push
lods
sub
mov
lahf
xor
movsb
dec
push
daa
push
or
mov
sub
clc
out
push
sbb
loopne
and
pop
adc
inc
into
fwait
rolb
mov
inc
xor
adc
dec
xor
test
aas
insl
je
movsb
pop
and
adc
inc
mov
push
stos
cmc
repz
sti
mov
push
mov
mov
push
cmp
push
inc
and
int
cmp
sub
shll
xorb
sbb
loop
push
ss
add
dec
adc
mov
stos
negb
enter
rolb
xchg
jbe
loopne
jno
lea
cmpsb
push
roll
inc
jno
lret
mov
or
or
push
jnp
lds
sub
sbb
jmp
push
mov
dec
xor
repnz
sub
push
dec
testl
mov
movsl
aaa
xor
and
adc
sbb
inc
mov
jle
or
mov
insl
popa
push
adc
sbb
outsl
add
xchg
push
inc
sub
lcall
les
in
mov
pop
lods
gs
lret
mov
stc
cmp
sub
hlt
dec
stos
xor
shll
stos
inc
cmpsb
and
add
lock
xchg
mov
test
xchg
adc
jno
repnz
inc
pop
sbb
popa
or
pop
add
mov
pop
es
movsb
and
js
xchg
aad
pop
push
sbb
test
sub
movsb
dec
mov
xchg
mov
popf
clc
dec
jge
cmp
fcmovne
xor
sub
cmp
sbb
rorb
dec
fildll
inc
sub
movsb
fwait
adc
icebp
xor
push
pop
jb
add
sub
pushf
pop
out
mov
inc
inc
imul
mov
loopne
hlt
or
fildll
fisttps
adc
bound
push
sub
mov
in
stos
jns
daa
dec
adc
mov
pop
xchg
xchg
je
aas
jo
cwtl
mov
out
pcmpeqb
sahf
cmp
scas
mov
out
or
dec
lahf
loopne
cmc
sub
add
pop
lea
inc
lcall
inc
fwait
push
ret
push
mov
int
and
dec
mov
mov
outsb
in
push
cmpsl
sbb
imul
outsb
arpl
mov
inc
in
xchg
rolb
push
inc
cvttps2pi
sub
push
mov
stos
sub
pop
cmp
inc
mov
xor
inc
cltd
icebp
add
test
push
cmp
dec
sub
mov
adc
xlat
sub
cltd
stos
adc
mov
jo
dec
js
int
xchg
pushf
add
jo
mov
inc
sub
lahf
hlt
int3
dec
out
add
aaa
in
lods
jns
es
xor
insl
xor
push
in
push
cwtl
push
addr16
sbb
inc
test
push
aad
push
mov
lods
push
inc
test
ds
xchg
adcl
or
dec
gs
movsl
outsl
cmp
sahf
lods
mov
jg
ret
mov
cwtl
jo
aam
ljmp
cmp
enter
adc
push
out
sub
notb
loop
add
jl
jnp
cli
add
pop
jle
dec
lret
pop
popa
push
out
jno
in
movsb
loop
lcall
jle
mov
lret
pop
dec
enter
xor
xor
xlat
popa
dec
test
and
in
mov
xchg
movsl
jnp
mov
sub
call
mov
hlt
pop
sbb
fdivrs
in
in
cmp
movsb
js
xor
fisttps
mov
stos
xchg
inc
mov
and
dec
inc
orb
into
cmp
fnstcw
dec
aam
enter
sbb
popf
xchg
mov
dec
out
fs
push
and
lahf
loopne
jo
push
cmp
cs
call
xorb
mov
in
xchg
cli
iret
lods
inc
cmpsl
loopne
outsl
push
add
jo
aad
mov
xor
popa
dec
enter
imul
mov
xchg
sub
rcr
sbb
sbb
fistpl
push
test
outsb
or
lahf
lods
or
in
mov
adc
ret
pop
out
pop
mov
pop
lea
icebp
jb
loope
mov
fdivrp
mov
insl
ret
das
pop
xlat
std
imul
push
aaa
arpl
out
pop
sbb
movsl
out
jg
dec
or
xor
test
xor
je
rorl
ret
dec
xor
test
mov
insb
stc
popa
sub
mov
inc
mov
mov
xchg
xor
pushf
mov
xor
inc
mov
call
mov
jno
sub
add
lock
imul
jle
dec
mov
and
jnp
dec
xor
in
push
in
clc
in
adc
aam
fbld
popa
xor
adc
inc
fists
cmp
adc
out
jnp
popa
nop
test
pop
or
jecxz
je
out
sbb
fimull
push
mov
sub
push
stc
ds
shl
jnp
sbb
jno
or
pop
xchg
mov
or
sbb
leave
cmp
jp
jne
fdivs
pop
arpl
lcall
test
or
inc
notb
mov
xchg
cmpsb
insl
imul
mov
int3
nop
lea
fdivr
mov
or
test
in
lret
std
add
je
into
sub
xchg
cmp
out
cwtl
lods
movsl
or
popf
push
xor
ficompl
pushf
enter
pop
push
ret
iret
add
and
ficoms
and
in
mov
xchg
jl
mov
xor
push
add
add
or
daa
push
dec
hlt
add
outsl
add
icebp
adc
rclb
and
jo
xchg
mov
jb
scas
lods
aad
ror
xchg
mov
fistps
mov
addr16
pop
jo
in
mov
sub
fwait
cmpsl
icebp
test
sub
mov
add
xorl
cmp
jb
sub
fs
in
cmp
mov
int
mov
lods
stos
leave
dec
inc
mov
add
or
pop
push
mov
dec
incl
and
clc
rol
dec
stos
inc
cli
iret
or
call
jg
fnsave
xor
loope
and
test
gs
add
js
rclb
push
push
loope
xlat
jno
loopne
sub
clc
pop
xor
push
push
sbb
lods
push
loop
xchg
popf
repz
cwtl
lcall
xlat
or
xchg
mov
stos
inc
out
fldl
cmpsl
xor
test
mov
jbe
xor
push
jnp
jle
mov
nop
outsb
adc
jecxz
mov
jne
push
daa
add
cmc
fstl
enter
lods
and
fistpl
int
icebp
mov
call
lea
push
cld
sub
dec
sarl
xchg
popf
aaa
dec
subb
sub
jp
fcomps
jbe
dec
adc
cmp
hlt
iret
fcoms
and
movsb
xor
sub
aas
fnstcw
xor
stos
jmp
lds
test
push
xor
scas
jb
cld
scas
clc
jmp
jb
xchg
adc
xchg
leave
lcall
jno
test
outsl
aam
mov
xchg
push
add
adcl
outsl
test
and
in
push
shll
stos
inc
lret
cmpsl
test
int
cmp
negb
int3
and
jb
scas
lods
sub
pushl
lds
jp
subl
push
xchg
test
pop
and
jg
or
mov
aas
clc
int
pop
cmpsb
inc
add
sbb
adc
rolb
jg
idivb
cmp
out
sahf
cmp
jns
mov
mov
dec
fistpl
cmp
pop
sub
inc
push
insl
push
iret
call
cwtl
cmp
push
cmp
pop
nop
rorb
stc
push
jle
push
sbb
mov
xor
push
mov
sbb
fdivl
insb
sbbl
add
inc
ret
or
imul
gs
test
sahf
nop
pop
pop
xor
dec
vucomisd
xlat
sub
cld
ja
inc
ja
les
xchg
xlat
mov
pushf
dec
repz
pushf
outsb
add
push
and
sub
mov
push
add
outsl
inc
lahf
and
cmc
cmc
mov
xlat
sub
mov
push
mov
pop
inc
frstor
js
jecxz
in
mov
les
mov
cmp
mov
inc
ret
aas
inc
loopne
pop
cld
leave
imul
push
xor
loopne
or
xor
adc
icebp
aad
push
lods
leave
and
loope
xchg
jg
lods
pop
ss
stos
pop
push
or
xor
cmpl
rcrb
xlat
sbb
cmp
mov
decl
add
movsb
notb
cmp
pop
xrelease
push
fnsave
jp
fimull
adc
pop
mov
mov
jmp
push
fmull
pushl
adcb
xorl
xor
sub
test
cmp
jg
xor
and
push
mov
orl
faddl
xchg
inc
loop
in
mov
mov
mov
ds
adc
pop
cmpsb
movsb
or
out
jns
leave
and
push
xor
gs
cltd
outsl
jge
mov
mov
mov
dec
or
fisttpll
or
jae
mov
mov
add
lahf
inc
cmpsb
and
mov
jnp
stos
and
adc
cmpsb
adc
mov
addr16
pop
sbb
pop
arpl
jle
mov
dec
outsb
lea
cmp
push
push
mov
or
inc
xchg
mov
mov
and
js
add
xor
cld
adc
daa
jmp
cmp
call
pop
sti
jae
bound
ret
dec
icebp
jp
jp,pn
mov
pop
inc
sbb
dec
fcoml
jg
flds
mov
dec
imul
sbb
add
push
negb
xchg
fwait
jno
popa
test
cmc
leave
jl
shrb
out
insl
clc
pop
xchg
jnp
stc
loop
sbb
mov
arpl
out
add
mov
add
in
dec
ljmp
jno
mov
aaa
test
leave
pop
shr
insl
pop
shl
popf
xchg
cmc
pop
pop
int3
push
jno
bound
sbb
insb
stos
push
cmp
push
inc
adc
inc
xor
dec
insb
mov
mov
test
cltd
ds
repnz
inc
mov
and
je
dec
and
dec
imul
ret
pusha
jbe
roll
mov
leave
inc
or
ret
fisubs
cmp
xor
mov
stos
mov
stc
clc
mov
jp
xchg
mov
xor
sub
ret
fnsave
cltd
stos
fldcw
in
in
in
lds
dec
in
aad
aaa
add
loopne
push
testl
lahf
lock
shlb
fwait
jecxz
aaa
sbb
mov
shlb
add
test
lds
out
ret
data16
fnsave
xchg
mov
lea
movsl
cmc
sub
mov
inc
cmp
jae
dec
in
dec
aaa
loopne
lahf
push
mov
sub
mov
mov
das
lock
fcompl
leave
sub
es
jnp
std
xchg
dec
aas
in
inc
add
imull
lret
pop
movsl
stos
daa
fstl
shll
mov
movb
pop
jg
vmwrite
mov
inc
std
sub
data16
mov
pop
enter
jl
js
fxrstor
xor
xchg
lcall
xchg
ss
outsl
cli
iret
loopne
clc
mov
jnp
leave
xchg
pop
mov
cwtl
movsl
fsubs
cmp
add
xchg
in
loop
cmp
add
add
and
or
les
fs
mov
or
cmpsb
cmpsl
mov
inc
mov
cmp
cmpsb
lcall
lods
sub
xchg
fxch
sbb
add
dec
rcrl
jg
pushf
or
pop
dec
lods
scas
pop
mov
xchg
aad
dec
sub
inc
cmp
popa
int
sbb
mov
xchg
push
pop
xorb
fists
inc
inc
test
loop
sub
fnstenv
lods
lds
imul
outsl
ja
adc
ret
orl
dec
bound
and
mov
push
int3
lods
xchg
daa
sbb
xchg
xor
imul
stc
jne
in
int3
mov
jg
mov
dec
lahf
decl
mov
imul
mov
cwtl
push
pop
adc
int3
cmp
nop
xchg
ret
iret
push
out
fnsave
pop
xchg
dec
jl
call
xchg
out
adc
mov
lahf
jb
mov
and
call
inc
adc
jne
sub
cld
mov
mov
dec
xchg
repz
outsb
cmp
push
int
sub
dec
nop
loopne
out
in
push
inc
ss
iret
fidivrs
jae
xchg
inc
jo
jecxz
dec
xchg
insl
fwait
jl
js
xor
sbb
je
enter
test
pop
or
das
repz
mov
mov
xchg
jnp
fldl
sarl
push
aaa
dec
adc
adc
aaa
cmp
add
xchg
aad
gs
fsubrs
push
add
xor
and
xor
iret
sub
jbe
imul
inc
sbb
jns
mov
dec
mov
loopne
or
cmp
push
test
fsubs
xchg
imul
xor
incb
rclb
cmp
xor
or
xchg
dec
xor
and
adc
mov
mov
xlat
popa
sub
popa
sbb
es
scas
lods
adc
push
jb
pusha
jge
jp
fcomps
in
mov
mov
or
dec
and
loopne
lcall
inc
and
dec
push
xor
pop
repz
adc
and
jg
je
daa
mov
mov
mov
ljmp
mov
xchg
mov
xlat
inc
cs
push
cwtl
add
shrb
fs
xchg
jns
cmpsb
pop
orl
loope
push
sti
mov
jmp
adc
cmc
and
das
xor
out
jecxz
into
cmp
xchg
push
jle
cmp
addr16
lock
arpl
les
mov
das
icebp
or
mov
push
add
mulb
sub
push
lret
pushf
inc
sbb
and
pop
add
inc
or
adc
push
fwait
call
sub
test
adc
fst
add
adc
bnd
inc
inc
lods
outsl
orb
jmp
arpl
sarl
add
repnz
pop
hlt
push
fs
outsb
dec
dec
mov
sbb
mov
pop
mov
lret
les
dec
xor
xchg
loop
jno
pop
std
xchg
arpl
sub
pushl
popf
call
lret
cmp
add
jmp
push
jo
jb
jno
xchg
setnp
lret
pusha
dec
testl
inc
lret
aad
lods
pusha
push
stos
popa
aam
hlt
int
sbb
shrl
mov
stos
aad
cmp
mov
pusha
add
inc
fbstp
and
in
inc
out
cmp
pop
and
addb
inc
or
xor
leave
add
dec
mov
push
pop
out
sbb
shl
in
lahf
xor
mov
popf
gs
sbb
fisttps
daa
sbb
bound
roll
mov
pop
xor
imul
in
faddl
shrl
xchg
leave
mov
xchg
sub
dec
addr16
fs
mov
add
push
fildll
stos
push
mov
jl
scas
insb
movsl
sbb
bt
jbe
int
and
sbb
scas
sbb
mov
bound
daa
call
add
jge
in
js
lock
add
sbb
fstl
aam
mov
movsl
insl
and
push
arpl
adc
sub
mov
sbb
xor
lock
add
and
imul
mov
xor
fmulp
jge
cld
xchg
in
out
xor
test
xchg
and
push
push
hlt
scas
sbb
scas
popf
mov
lahf
jb
mov
loope
cmpb
cmp
cmc
mov
pop
test
xlat
push
jbe
xlat
arpl
int
push
sbb
loop
pop
sub
mov
lock
lods
xchg
outsb
ret
movsl
stos
mov
cld
xchg
popl
add
and
mov
sbb
cltd
idivl
inc
cmp
pop
repz
xchg
loop
orl
fs
loop
dec
ds
pop
mov
aas
jne
jp
outsl
push
dec
pop
dec
jnp
stc
sbb
cmpsl
add
xor
outsb
cmpsb
adc
and
std
inc
loope
jmp
xor
pop
dec
and
mov
popf
stos
dec
mov
cmp
jb
test
adc
lret
in
addr16
jl
in
xchg
add
jg
das
jae
test
pop
mov
inc
jmp
out
mov
sbb
cli
cs
call
adc
sub
clc
push
inc
arpl
aas
adc
out
orl
or
xchg
pop
cmp
xor
cmpsl
push
add
inc
sub
into
rol
xor
jno
repz
sbb
inc
add
mov
fcmovnbe
cmp
mov
jmp
int
sub
pop
pop
cmp
dec
fnstenv
mov
xor
imul
push
sub
cmp
inc
out
sub
jnp
lahf
adc
xchg
jmp
pop
xor
mov
sub
ljmp
sahf
push
call
and
out
add
inc
jg
and
mov
jle
jns
movsb
sub
pop
adc
call
iret
in
or
popf
roll
xchg
jne
jecxz
call
stos
sbb
fs
xchg
repnz
xchg
iret
or
in
push
popl
or
test
jns
adc
xor
out
and
and
mov
shl
sbb
sub
movsl
adc
bound
fnstsw
mov
cmp
test
mov
into
jge
shl
int
pop
pop
stos
into
dec
sbb
jnp
and
push
rorb
mov
mov
mov
leave
test
cmc
jmp
xor
xchg
std
jg
mov
ss
js
idivl
or
gs
cwtl
pop
lcall
jmp
cmp
ret
adc
sub
mov
cs
add
fadds
cmpsb
fildl
test
int
flds
jnp,pt
lahf
xor
xchg
jbe
inc
pop
inc
test
shlb
sti
decl
dec
dec
shlb
fs
loop
cs
push
xor
xor
add
sub
call
leave
insb
sarb
cmp
or
dec
add
scas
or
xor
adc
scas
add
icebp
cwtl
adc
ret
popa
je
leave
in
jp
lods
xor
leave
mov
lock
ret
imul
std
test
push
rcrl
xchg
loop
or
pushl
mov
loope
es
aas
pop
sbb
mov
jbe
dec
pop
stos
push
adc
je
int3
out
jo
jnp
mov
test
or
xchg
movsl
xchg
clc
out
dec
subb
adc
movsb
dec
in
gs
stc
pusha
pusha
into
push
jae
out
cltd
in
jmp
xchg
push
dec
push
push
fs
push
pop
xor
adc
aaa
adc
std
push
mov
in
mov
insb
xorb
cmp
gs
mov
mov
insb
push
sub
mov
lret
cld
mov
es
cli
lret
xlat
dec
mov
lds
stc
or
dec
adc
jmp
mov
and
mov
pushl
push
data16
xor
pop
mov
cmp
lds
or
adc
decb
xchg
addps
mov
xor
nop
ss
push
lret
out
outsb
aam
repz
pushf
fnsave
jmp
push
adc
imul
and
add
rcrb
or
sbb
cwtl
aam
outsb
push
push
or
mov
sbb
sub
nop
leave
iret
dec
add
lods
ret
test
insb
mov
xor
int3
loop
xchg
cmpsl
xchg
cwtl
outsl
jg
movsb
push
mov
pop
inc
sbb
dec
xchg
insl
fdivp
fs
mov
in
test
rolb
adc
incl
dec
aas
ss
aam
or
popa
sub
mov
sbb
mov
pop
and
in
sub
movsl
loop
mov
push
xchg
add
addl
js
push
jbe
shrb
pop
adc
sarb
in
dec
mov
ficoml
mov
je
fisubl
xorb
paddq
bt
adc
repz
pushf
add
test
lods
das
leave
xchg
cwtl
cmp
aas
testl
lcall
ss
jp
jne
dec
rolb
mov
push
mov
inc
cmp
add
sub
inc
push
mov
xchg
hlt
insb
or
andl
das
xchg
dec
mov
xchg
mov
pop
mov
rcrl
sub
xchg
push
add
mov
sub
or
lcall
push
lret
iret
adc
nop
fstpt
aad
aaa
pop
test
sahf
in
fs
not
jnp
test
lock
dec
lock
nop
add
iret
push
xor
push
rorb
movsb
test
sar
or
dec
inc
adc
loope
imulb
shrb
pop
std
test
push
leave
out
lahf
push
and
mov
sub
mov
aas
xor
cltd
push
and
push
fistpl
cli
mov
insl
dec
sti
pop
push
pop
and
je
arpl
sub
inc
shr
sbb
shrb
mov
add
mov
jae
jp
cmpsl
jle
adc
mov
outsb
xchg
shl
ret
pop
ja
mov
mov
xchg
popf
mov
mov
cltd
ret
xchg
jne
movsb
xchg
mov
push
daa
in
loop
xor
xor
gs
sbb
jne
loop
push
pop
push
sbb
cmp
imul
xor
pop
or
cmpsl
pop
xlat
push
push
movsl
mov
fisubrl
mov
out
jae
fdiv
dec
bound
inc
mov
fwait
loopne
mov
iret
push
sub
jno
pop
into
sub
xor
mov
test
xor
std
int
pusha
test
fdivrs
shll
iret
inc
xlat
pushf
cmc
test
outsb
or
sub
outsl
in
lods
add
ja
xchg
push
jg
sub
push
repz
add
dec
jb
into
movsl
push
cmp
addb
cs
es
push
mov
add
cwtl
jb
pushf
dec
mov
push
ljmp
mov
adc
mov
xchg
or
add
mull
xchg
stc
pushf
mov
fists
and
out
jae
jl
pop
adc
sub
es
push
popf
clc
sbb
mov
pop
or
and
mov
std
inc
inc
hlt
xchg
call
inc
repnz
mov
jo
sbb
push
lret
xlat
cmpsb
out
adc
lcall
pop
leave
add
pop
addr16
add
sbb
js
pop
int
dec
mov
or
je
fiaddl
sbbb
push
hlt
mov
lret
push
fistps
dec
inc
adc
ficoms
pop
adc
mov
repnz
mov
fs
lods
sbb
imul
mov
pop
sub
ss
aad
cli
push
lods
pop
inc
adcl
xorl
push
mov
out
push
mov
mov
add
aad
dec
sub
out
dec
enter
ljmp
pushf
flds
lret
cmp
sub
sub
push
out
test
imul
jnp
cmpsl
adc
jmp
clc
or
mov
pop
test
pushf
andl
fnstenv
add
cmpsl
orb
mov
stc
mov
aas
insl
loope
sarb
cmp
mov
ret
xchg
sbb
fdivl
pop
pushf
cld
shrd
add
addl
mov
dec
dec
sbb
ljmp
mov
xchg
xchg
std
test
les
aam
data16
fstpt
cmp
rorl
cld
test
fwait
push
in
adc
xor
push
mov
sub
pop
add
or
mov
in
in
inc
adc
lea
cmpsb
xchg
inc
mov
jecxz
adc
xchg
fisubl
clc
xchg
or
mov
push
mov
pop
int
adc
leave
cmc
mov
insl
push
pop
jecxz
mov
pop
ret
in
shll
jns
neg
into
imul
movsbl
loopne
add
jo
jl
adc
int
dec
lea
cwtl
adc
mov
mov
imul
mov
out
test
or
push
xor
or
xorl
add
or
hlt
mov
sar
sub
sub
fwait
ja
fsubrl
mov
jecxz
xchg
insl
stc
mov
cmpl
call
imul
jp
mov
pavgb
repnz
scas
xchg
and
mov
cmovg
bound
mov
push
loope
nop
or
pop
int
aaa
lret
add
js
and
or
push
lods
fs
add
cld
maskmovq
negl
rorb
fwait
inc
scas
sbb
mov
mov
enter
js
ret
xchg
cltd
cmpsl
sbb
push
add
xchg
clc
mov
sarl
jnp
mov
xor
jle
jmp
push
fisttps
mov
mull
ja
scas
out
fucomip
in
out
fwait
xor
mov
mov
rclb
sub
or
lret
or
mov
cmp
les
add
cmpsb
jb
push
jnp
push
mov
lret
sub
dec
cld
jl
sbb
stos
mov
es
mov
pop
in
cmp
sub
inc
mov
mov
mov
mov
seta
cmpsb
xor
out
dec
inc
aaa
sbb
lods
push
xchg
xchg
rcrb
add
movsb
sbb
sub
mov
scas
mov
shl
aam
stos
pop
dec
cmp
subb
mov
andb
gs
not
out
in
enter
and
mov
sub
push
mov
dec
add
insl
lods
aaa
hlt
xor
daa
push
shl
iret
fisubs
loopne
imul
hlt
outsb
lods
lahf
pop
inc
jno
mov
insb
stc
xchg
add
mov
pop
sbb
cwtl
pop
xchg
xor
loope
mov
aam
leave
bound
xor
cmp
adc
test
lock
adc
add
imul
in
stos
shlb
cmp
loope
adcb
jae
int3
daa
push
pop
lahf
ss
test
xor
dec
xchg
mov
push
lds
arpl
rcl
jle
or
lock
mov
mov
cmp
sbb
fwait
nop
cmpsl
add
lret
mov
mov
pop
loop
jecxz
jne
push
jno
xchg
pop
fadds
pop
xchg
hlt
aad
xchg
test
subl
arpl
xor
je
jmp
insb
mov
lock
rcll
pop
bound
xor
fistpll
ljmp
stos
inc
jecxz
aaa
imulb
xchg
or
lahf
mov
push
sbb
sub
mov
xchg
ds
mov
inc
aas
das
mov
ret
jbe
adc
mov
push
popf
lcall
jp
pop
data16
sbb
out
js
scas
cmp
cmp
adc
pop
test
push
lahf
sbb
sbb
insl
adc
jae
hlt
push
pop
xorb
inc
jg
and
fldenv
shl
jno
cmp
jecxz
sarl
cmc
int3
stc
dec
in
out
test
mov
inc
inc
in
xor
fsubs
pop
subl
cmp
call
rcrb
cmp
inc
lds
int3
dec
add
cli
xchg
es
cmp
jge
lahf
jmp
fldcw
mov
fdivrl
leave
cld
icebp
fistpl
sbb
insb
outsl
out
test
jns
mov
roll
jo
addr16
je
and
neg
nop
scas
push
aad
gs
cltd
imul
add
mov
and
in
add
dec
inc
cmovne
mov
xor
mov
nop
lret
shlb
pop
adc
scas
dec
aaa
inc
cltd
xorb
loope
mulb
inc
inc
insl
inc
pop
xchg
push
sub
mov
xor
cwtl
into
sbb
and
out
in
fnstsw
in
jne
inc
jl
movsl
jge
ds
mov
pop
inc
idivb
sub
mov
xorl
test
jno
std
aad
sbb
push
rcll
cmp
insl
cmp
ja
lods
outsb
or
arpl
mov
mov
jns
test
sbb
es
mov
mov
xchg
addb
out
mov
pop
addl
adc
jle
xor
sbb
adc
jle
push
sbb
repnz
pop
enter
sub
mov
and
ret
orl
sti
push
xchg
jmp
pop
xor
xchg
add
xchg
fidivrs
loope
shr
mov
loop
pop
mov
popf
jnp
xor
sbb
xlat
flds
fdivrs
mov
outsl
xor
lahf
call
sub
int3
lahf
popf
je
int
push
mov
enter
movsl
or
int3
sub
dec
ficomps
lret
or
ja
push
arpl
jle
or
out
inc
daa
mov
pop
enter
cmp
enter
mov
out
je
xor
std
push
jle
inc
in
mov
mov
loope
es
mov
ret
cmp
or
icebp
cmp
inc
popa
and
adc
rcr
add
jg
loop
aam
push
std
xor
shr
adc
push
pop
rcrb
dec
mov
pop
jl
fsubrl
clc
hlt
mov
push
mov
add
mov
jge
out
jecxz
aam
mov
xchg
cli
pop
aas
aaa
inc
and
cmp
mov
sub
icebp
jge
aam
dec
inc
loopne
popf
mov
mov
jae
loop
pop
mov
inc
sub
pop
pop
xchg
pop
aaa
add
pop
mov
es
test
mov
dec
jnp
pop
shlb
xor
ss
mov
jo
dec
jne
sub
xchg
jns
pop
mov
in
mov
es
adc
and
popf
xchg
inc
jmp
cmp
cmpsb
decl
jge
pop
mov
in
push
call
shrl
jne
cwtl
mov
pop
lcall
dec
std
push
mov
fisttps
subps
push
jp
enter
xor
xchg
xor
inc
mov
loope
or
mov
adc
sub
dec
dec
test
mov
inc
pop
mov
pop
rcrl
inc
adc
mov
xor
test
jns
in
push
pop
mov
int
mov
jne
xchg
sub
cmp
dec
add
and
xchg
mov
mov
inc
dec
adc
adc
sub
add
fisttpl
add
cld
std
mov
test
xor
loope
sub
xchg
pop
sub
adc
imul
adc
std
xchg
jbe
int3
mov
out
cmp
xor
fwait
lret
daa
dec
les
adc
fbstp
dec
push
and
mov
imul
cwtl
adc
scas
sub
push
mov
push
push
movsl
movd
push
push
lods
and
and
inc
test
bound
fisttps
mov
rol
fsubrl
pop
adc
test
and
popf
adc
es
lret
xchg
cmp
mov
xor
rcrl
xchg
xorb
iret
xor
int3
rclb
dec
xchg
mov
addr16
sub
xlat
xor
gs
inc
mov
loop
inc
inc
adc
iret
ror
mov
lds
cmp
lods
cmc
xchg
xchg
xchg
test
pop
jl
sbb
cs
scas
divl
sub
jmp
sub
cmp
aad
iret
test
mov
es
and
jns
cltd
cli
pop
cmc
adcl
inc
fwait
pop
cwtl
mov
push
xor
arpl
mulb
cmp
lds
sbb
cmp
loop
jmp
fld
dec
inc
inc
rcll
mov
scas
repz
shrb
dec
cmpsb
mov
adc
jno
outsl
das
sbb
mov
inc
pop
pop
fsubl
pop
and
or
mov
gs
or
cmp
add
pop
addr16
imul
movsl
sub
cmp
orl
std
cltd
ret
popa
lds
jb
jg
jg
or
inc
adc
pop
in
std
mov
dec
je
test
pop
daa
or
test
in
insb
or
fstl
xchg
pop
pop
mov
leave
notl
je
pop
xchg
shlb
mov
repnz
pop
push
push
mov
mov
jp
jg
arpl
pop
insb
scas
push
pop
mov
stc
xchg
mov
ja
mov
adc
rcrb
adcb
inc
lods
les
fistpll
les
or
xor
pushf
sbb
in
mov
and
add
mov
cld
add
test
test
test
xor
cmp
cmp
xor
repz
jge
xor
and
pop
push
sbb
dec
lds
aas
repnz
push
test
mov
push
and
shll
xor
std
int
les
je
ficoml
add
cmpsb
dec
adc
push
xchg
repnz
pop
add
jne
std
push
dec
push
pop
cmpsl
icebp
dec
sahf
sti
aas
movsl
mov
lahf
rolb
loopne
fstl
movsb
stos
lea
jmp
sub
mov
in
cs
cmpsb
movsb
ret
lods
jns
dec
sbb
sahf
mov
add
lcall
xlat
push
test
adcb
pop
sbb
dec
mov
insl
in
xorb
into
shlb
push
inc
push
in
les
xchg
test
hlt
xlat
mov
jns
outsb
bnd
jl
adc
hlt
fidivs
cld
mov
jp
mov
cmp
scas
mov
sub
mov
push
sub
js
outsb
dec
jae
aad
stos
xchg
fldl
outsl
and
iret
fidivrl
mov
jae
mov
fwait
scas
mov
sub
cld
ljmp
xchg
lods
pop
sub
sti
and
push
push
and
out
mov
sti
mov
inc
adc
inc
and
icebp
cmpsb
loopne
pop
aad
add
dec
xlat
aaa
stos
popa
mov
xchg
add
mov
mov
aaa
daa
cmpsb
push
cli
nop
push
pop
mov
jns
mov
pushf
inc
insb
adc
push
nop
in
or
inc
out
bound
sbb
sbb
out
ror
testl
cmp
lods
inc
fwait
mov
ljmp
dec
aam
adc
test
cmc
mov
insb
sbbb
inc
fnsave
sub
ffree
ret
lcall
cmp
lahf
daa
mov
sub
mov
aad
push
scas
add
rorl
sbb
pop
sbb
inc
jnp
mov
fwait
xchg
loop
sahf
add
mov
push
mov
sub
je
repz
in
in
jns
and
cld
sub
lcall
xlat
pop
fmull
int3
repnz
jnp
movsl
xorb
push
xchg
pop
mov
push
jmp
mov
idivl
jge
sbb
pop
mov
je,pt
std
movsl
add
mov
mov
inc
xor
jg
out
xchg
mov
ds
cmp
daa
sub
jo
mov
lcall
add
pop
ds
out
orb
mov
dec
out
sub
test
aaa
xchg
add
bound
imul
pop
jp
pop
mov
test
fs
inc
sbb
lcall
cmp
dec
insl
or
xlat
inc
jl
mov
xorl
in
inc
adc
cmp
adcl
icebp
pop
mov
ljmp
testl
mov
dec
or
inc
cmp
idiv
sub
jecxz
sub
lret
addl
or
lea
imul
push
inc
shll
mov
push
mov
outsb
int3
push
out
outsb
ficomps
jecxz
fcoml
loop
aam
sbbl
pop
xchg
adc
adc
movsb
push
rcll
dec
lds
jne
jno
sub
push
inc
xor
mov
adc
mov
repnz
hlt
test
mov
popa
mov
xchg
sbb
into
daa
mov
pop
ljmp
sbb
or
xchg
fnsave
addr16
int
xchg
fcoms
push
mov
and
add
sub
add
or
pop
xor
leave
jns
mov
pop
daa
adc
sbb
mov
and
push
xor
xchg
adc
or
push
movsb
aad
dec
jno
insl
xlat
loope
idiv
in
jge
push
mov
pop
push
mov
sub
sarl
xchg
mov
add
repnz
mov
mov
jmp
popa
sahf
mov
mov
sbb
movsb
pmuludq
pusha
fidivs
sub
push
add
add
es
call
addr16
lods
into
mov
cmp
in
fcoml
andl
cmc
in
mov
sahf
adc
mov
pop
andl
mov
jmp
jecxz
popa
sub
xchg
add
andl
push
cmpl
fstl
xchg
and
testl
in
xor
fildll
jno
leave
mul
aaa
das
xor
pop
test
mov
mov
jg
xchg
stc
jb
test
push
and
jmp
xor
int3
out
idivb
cmpsb
ljmp
push
mov
out
or
dec
push
mov
lods
sub
sbb
dec
ja
frstor
fistps
pop
icebp
in
pop
push
dec
out
adc
cmp
xchg
add
dec
lret
sbb
in
dec
pop
repnz
cmpsl
gs
cltd
fldl
push
jp
lods
xchg
das
clc
xchg
aad
mov
pop
rclb
adc
mov
shrb
mov
xor
pop
popl
push
cmp
xor
sub
notl
add
in
adc
outsb
inc
mov
pop
xchg
or
outsb
sub
sub
cmp
mov
pusha
lahf
vpermi2q
add
dec
lods
jbe
push
js
and
cmp
inc
lea
jecxz
bound
call
icebp
loopne
into
inc
add
or
push
lock
pop
fwait
insb
int
push
sub
push
out
mov
aas
sub
fdivrl
out
xchg
dec
mov
sahf
test
cld
test
call
adc
mov
lods
sbb
add
stos
sbbb
fucomi
je
add
push
xchg
into
notb
mov
enter
lods
jnp
sub
lods
scas
movsl
and
into
or
cltd
xlat
cs
push
adc
ja
jp
jecxz
bnd
testl
stc
pop
aaa
push
cmp
cmp
daa
scas
scas
test
movsl
ret
mov
popa
dec
xlat
loop
jg
push
inc
clc
es
fcompl
push
pop
aam
inc
out
sub
mov
xchg
lea
jne
xor
xor
mov
sub
in
mov
in
xchg
push
std
divl
mov
stos
repz
insb
push
cli
ret
pop
sar
lret
xchg
lods
enter
shl
mov
outsb
repnz
inc
sahf
insl
add
sub
mov
lahf
xor
mov
push
adc
sahf
jns
sbbb
cmp
jb
iret
cmpsl
lock
js
int3
imul
cs
test
dec
dec
das
sbb
dec
jno
cmpsl
aaa
arpl
loopne
or
push
adc
jb
jmp
ror
push
outsl
lcall
add
leave
test
jae
pop
sub
mov
cli
mov
ds
aam
scas
inc
xchg
adc
push
out
push
andl
js
jl
pop
push
dec
test
mov
push
inc
xor
pop
out
pop
pusha
cmp
inc
mov
dec
dec
jb
cld
stos
fwait
xor
imul
gs
lret
xchg
aaa
and
mov
dec
mov
lret
loopne
xchg
fldcw
mov
mov
cmpsb
or
push
stc
into
int3
jbe
testb
movsb
cmp
leave
sub
in
pop
fwait
movsb
mov
insb
jb
dec
adc
test
sbb
mov
mov
xor
adc
mov
fdivl
cs
cwtl
es
out
pusha
mov
ds
mov
mov
cmp
pop
jle
shlb
decb
fstl
jae
pop
jmp
mov
stos
sub
push
dec
or
lock
cs
mov
aad
jnp
cmc
mov
jl
xchg
icebp
in
add
std
addr16
mov
jl
mov
mov
jns
shrb
mov
ljmp
cwtl
push
scas
lcall
mov
mov
xor
push
mov
iret
lods
cmpsb
dec
ret
gs
repz
sub
lahf
jmp
sbb
pop
jecxz
mov
pop
xchg
sub
fs
push
cld
jo
stos
sbb
inc
in
or
sub
pop
mov
xchg
jnp
std
adc
mov
push
dec
cwtl
outsb
scas
gs
fcmovnu
xor
lds
cmp
xor
mov
mov
insb
dec
ret
ror
loopne
sub
cld
mov
ret
lahf
fsubrs
ror
aaa
test
mov
mov
call
push
notb
add
pop
push
cld
push
or
fbstp
sbb
add
popf
repz
or
aaa
xor
jge
lret
push
lock
xor
or
mov
push
icebp
sbb
out
scas
adc
push
mov
jo
dec
mov
test
push
fisubrs
popa
jae
cmpsb
xor
fadds
jns
lea
add
mov
add
and
out
sti
movsb
xor
xchg
test
ljmp
and
loope
adc
loopne
jle
enter
push
pop
xchg
mov
hlt
sbb
ja
push
dec
push
mov
adc
out
xchg
lock
pop
jne
mov
leave
adc
sbb
sbb
iret
jmp
fsubl
or
cmpsl
int3
aas
es
xor
add
sbb
leave
xchg
and
mov
mov
mov
int3
and
push
xor
cmpsl
daa
repnz
mov
outsb
dec
in
in
xor
pop
sbb
sub
push
cltd
outsl
adc
fmuls
push
add
jl
push
pop
jecxz
push
cltd
push
add
lahf
pop
popa
mov
cs
ja
add
adc
enter
stos
jle
dec
push
lahf
imul
adc
cmp
ss
stos
test
sub
in
fbld
faddl
test
fwait
test
pop
or
mov
dec
pop
add
bound
out
dec
xor
mov
and
sysexit
ljmp
sub
xchg
and
repnz
hlt
rcrb
mov
dec
sbb
or
xchg
imul
outsb
out
adc
lahf
jg
lret
shlb
test
inc
pop
rorb
push
ficoms
sbb
lcall
pop
std
cmp
jo
jns
in
lods
adc
xchg
cltd
mov
xchg
xor
aad
enter
mov
aaa
jne
js
imul
arpl
rorb
and
inc
pop
clc
in
ds
jle
data16
icebp
xchg
popf
sub
ret
cmpsl
sahf
lds
stos
xbegin
stos
sub
mov
aad
ret
xchg
dec
mov
mov
adc
test
xor
pushf
pop
inc
pusha
out
xlat
lret
sbb
ss
xor
mov
shlb
fstpl
mov
jnp
ds
pop
movsb
push
pop
pop
cld
add
push
jle
pop
sbb
cltd
movsl
inc
nop
sbb
mov
cmpl
in
mov
mov
enter
insl
xchg
pop
out
inc
lods
push
mov
mov
pop
inc
inc
rcrl
pop
xchg
or
loope
mov
inc
dec
xchg
sbb
cmpsl
icebp
jns
or
jle
sub
fwait
jae
inc
jle
and
ret
mov
mov
lods
lods
gs
add
pop
cmp
std
xchg
fisttpll
sbb
mov
aam
mov
push
xchg
jmp
lcall
lcall
and
sub
jge
or
add
jnp
ret
mov
sub
lret
mov
dec
cltd
mov
pop
stos
inc
push
sub
lods
arpl
sbb
stos
jne
rol
sti
pop
xlat
xor
je
outsb
push
pushf
sti
arpl
lods
addr16
inc
leave
rcrl
jl
adc
push
xlat
jmp
jae
cmp
test
cli
loop
sbb
cmpb
pop
aam
mov
fcmovnbe
insb
sti
icebp
mov
cmp
mov
jmp
mov
dec
movsb
aaa
adc
das
fcmove
mov
adc
or
and
mov
jbe
jle
lods
push
or
inc
xor
add
dec
push
xor
and
and
in
pop
pop
out
xchg
add
cmp
jg
gs
sbb
cmp
cmp
pop
jecxz
icebp
loopne
xchg
jne
popa
mov
adc
insl
mov
mov
jecxz
shll
je
cmc
les
or
shlb
les
add
inc
xlat
mov
mov
cmpsb
fstps
mov
mov
dec
jno
sub
call
jl
pusha
gs
shrl
lds
arpl
pop
in
mov
mov
mov
cmovge
fsubrl
fdivrl
out
jecxz
and
sbb
push
ret
push
sub
dec
data16
loop
or
adc
jo
cs
daa
rorb
stos
or
fcomps
shll
push
clc
jp
dec
mov
out
sarl
or
add
in
insl
pop
xchg
mov
jge
lods
nop
adc
iret
addb
jae
aam
sbb
test
cmpsl
xchg
mov
inc
scas
je
push
cld
imul
jg
and
ss
or
cmc
es
or
and
mov
and
les
ficompl
mov
and
shlb
adc
hlt
aas
mov
xchg
adc
lcall
adc
mov
jbe
lret
je
cltd
adc
cmp
pop
cmp
out
cli
aas
les
push
jge
pop
aaa
fiaddl
sbbb
ds
faddl
push
nop
jno
push
inc
imul
loopne
es
mov
aad
jmp
sub
test
pop
push
jns
mov
stos
mov
jmp
mov
jnp
incb
mov
testb
xchg
clc
mov
cmp
popa
repnz
mov
shrl
lret
or
ret
xchg
test
sub
notl
ret
pop
iret
rorb
cmp
icebp
mov
fsubrs
mov
ret
dec
sub
cld
ret
scas
outsb
popa
jp
in
idivb
mov
popa
inc
sbb
jae
inc
xchg
icebp
adc
mov
leave
out
jnp
ficomps
xchg
add
cmp
lret
jnp
int
in
and
incl
mov
xor
lahf
push
fwait
jb
dec
stos
gs
neg
and
in
mov
xchg
rcl
fidivl
data16
imul
xor
filds
inc
add
sbb
cmp
lock
lods
dec
in
inc
xlat
adc
pop
lds
out
out
in
mov
sub
xlat
nop
ja
push
mov
cmp
popa
dec
fdivr
or
xor
pop
in
adc
push
push
rcrb
jmp
jb
mov
jbe
iret
jb
leave
pusha
adc
mov
and
adc
in
neg
int
in
mov
iret
and
lods
fimull
andl
rorl
dec
out
inc
adc
jge
std
and
dec
mov
aam
out
push
jne
add
shlb
sahf
cld
loop
add
mov
sub
lret
ljmp
sti
sub
dec
fisttpl
stos
ds
mov
gs
xorb
fwait
mov
icebp
sub
pop
pop
jle
jb
xchg
adc
or
adc
inc
mov
fdivrl
roll
xchg
push
cli
rcrb
cmp
subb
jmp
sbb
addr16
leave
aas
add
lock
lds
out
into
hlt
cmp
sub
jae
adc
pop
lahf
push
or
sbb
sbb
and
cmp
push
cmpsb
pop
mov
xor
mov
pop
cmp
xchg
cli
hlt
mov
into
sbb
pusha
dec
push
and
movsl
mov
out
pop
sub
test
jge
mov
push
push
ja
jge
lods
push
mov
xlat
lods
in
in
test
dec
adc
pop
xor
nop
xchg
hlt
test
jecxz
adc
cmp
xor
stos
fstpl
mov
mov
test
jnp
xor
fmul
es
out
scas
inc
iret
jp,pn
push
js
adc
jno
mov
sarb
cli
add
clc
movsl
jno
outsb
cmp
setb
insl
test
sub
cwtl
jmp
shl
lds
sbb
orl
mov
hlt
pop
sub
scas
xchg
dec
push
in
mov
jmp
in
xchg
outsb
jo
enter
notb
push
int
jns
int3
imul
sub
cld
mov
std
insb
in
mov
ljmp
pushf
faddp
js
cs
add
mov
mov
loope
sbb
push
pop
fbstp
pop
mov
adc
pop
js
xchg
cmc
lcall
jno
adc
push
sbb
and
pop
aas
mov
aas
fwait
add
stos
roll
sbb
and
das
ret
inc
pop
incb
jg
dec
add
fiadds
ret
push
stos
mov
adc
pop
mov
inc
push
and
xor
inc
or
rcll
inc
pushfw
movsl
out
enter
clc
inc
lret
jne
inc
add
js
push
dec
out
push
in
and
xchg
movsb
xor
mov
stc
sub
in
imulb
pop
cmpsl
sbb
fiadds
mov
movsl
cli
cltd
idivl
mov
aaa
ds
add
icebp
push
mov
inc
negl
xchg
andl
mov
xchg
dec
pop
sbb
stos
mov
add
orl
andb
adc
cld
roll
push
test
dec
aas
jo
ds
shll
cmp
sub
inc
or
pop
mov
adc
movsl
mov
sbb
movsl
cmp
pop
dec
inc
add
jmp
lods
out
setg
dec
xor
xor
arpl
add
inc
rorb
mov
push
inc
pop
faddl
xor
xchg
cltd
add
pop
pop
jnp
lahf
add
push
stc
push
cmpsl
mov
mov
movsl
adc
dec
or
sbb
inc
xchg
inc
jae
mov
mov
push
sub
insl
sbb
loope
mov
mov
cmp
mov
in
hlt
inc
and
mov
mov
lahf
jecxz
mov
dec
push
vpmacssdqh
popa
push
xchg
mov
jno
sub
addr16
test
mov
mov
test
and
negl
das
cmpsb
cli
add
jno
mov
sub
xchg
ds
adc
cmp
lret
xchg
stc
call
loopne
fwait
sbb
dec
mov
xor
lods
aaa
xchg
and
nop
mov
test
jmp
add
fcomip
shrb
ss
cmc
filds
and
xchg
rol
fisttpll
rorl
pop
mov
into
mov
xor
fcom
sbb
lods
dec
popf
mov
push
jbe
sub
push
push
bound
xor
jp
pop
cmpsl
ret
xchg
sbb
pop
mov
cmpsl
mov
or
xchg
mov
ret
insb
int
push
enter
cwtl
inc
int3
cmp
mov
aad
pushf
clc
pushf
jmp
or
pop
ret
scas
add
cld
add
adc
adc
sbb
xor
dec
mov
jp
pop
sub
stos
sub
outsb
jmp
sbb
aaa
and
inc
mov
fcmovnu
dec
inc
mov
sbb
ds
testl
ret
pushf
int3
int3
cs
inc
add
mov
das
cmp
lods
aas
cmpb
mov
and
xchg
in
pop
push
push
repnz
mov
lret
pop
sub
xor
dec
sbb
in
sahf
dec
xlat
and
inc
test
cs
fnstenv
in
cmpsl
pop
mov
test
dec
jb
sbb
mov
imul
sbb
or
push
lahf
cmpsb
mov
rcr
and
adc
jmp
movntps
jmp
dec
fcomps
mov
inc
adc
scas
jmp
pop
popf
aam
sahf
sub
sbb
cmp
hlt
push
inc
roll
loop
jge
lret
sbb
into
cmc
push
xchg
in
loopne
mov
jb
in
or
cmp
sbb
pop
int
sti
add
pop
jne
and
ljmp
insb
jb
scas
inc
adc
mov
sub
dec
mov
xlat
xchg
stos
jbe
xor
cld
jns
dec
cmp
inc
or
shll
push
jl
movsl
mov
arpl
lret
std
faddl
stc
enter
in
aam
pushf
clc
int3
lock
cmp
xchg
sub
mov
xor
stos
adc
jecxz
jecxz
pushf
add
pop
pop
rolb
lret
in
or
add
sbb
addr16
push
lock
sti
mov
sub
dec
popf
cmpl
inc
out
inc
inc
into
inc
xchg
push
jle
sbb
jae
cmc
rcll
ss
sti
shlb
push
cltd
test
out
bound
imul
je
and
popa
in
fcmovu
cmpb
das
mov
adc
je
shrb
sbb
sbb
hlt
xchg
call
pop
outsb
sub
adc
jl
shlb
fwait
add
dec
mov
mov
xlat
jg
aas
xor
push
aaa
xchg
add
in
sbb
cwtl
cld
adc
or
cmpsl
mov
jo
cs
fs
xorl
add
xchg
testl
mov
add
mov
jnp
in
test
mov
push
and
mul
mov
inc
sbb
sbb
mov
cmp
aaa
out
mov
jp
bound
or
jp
sbb
ja
stc
or
pop
lock
push
push
mov
jmp
hlt
loop
arpl
push
xchg
in
push
pusha
lahf
cmp
fisubl
fiadds
xorb
inc
cmc
aam
cli
outsb
out
adc
jmp
sahf
lock
aam
dec
pop
fidivl
mov
sbb
pop
dec
js
xlat
xchg
pop
dec
push
mov
pushl
lods
sbb
push
leave
stos
aaa
mov
inc
sbb
sbb
xchg
pop
add
jmp
add
sarl
or
inc
imul
pop
cs
dec
ljmp
cli
mov
pop
cld
popf
bound
lock
sbb
mov
insl
in
pop
xlat
push
inc
mov
cmpsb
sub
outsb
sbb
push
insl
cltd
arpl
jno
out
insb
mov
mov
lods
push
or
int
push
test
sarl
xchg
fdivrs
lds
shrl
add
dec
or
xchg
inc
shld
das
dec
mov
in
jne
test
push
mov
inc
cmp
xor
popf
adc
test
adc
test
jle
in
mov
mov
jnp
mov
inc
xchg
dec
dec
lret
or
sub
inc
mov
sub
sub
jns
adc
and
shl
hlt
adc
adc
in
aas
push
arpl
sbb
mov
pushf
je
stc
out
push
rcll
add
bound
pop
push
xchg
imul
mov
mov
push
outsb
pop
sbb
jge
jle
shll
or
sahf
pop
pop
mov
call
psubw
stos
aad
popf
insb
in
jmp
addl
inc
shll
dec
or
dec
push
xor
pop
xchg
int3
mov
jle
inc
lods
bound
out
sub
repnz
scas
mov
loopne
lret
out
ja
pop
loope
jle
pop
adc
enter
loop
addb
dec
or
cmpsb
push
push
orl
cs
mov
sbb
stc
lret
pop
mull
ret
push
mov
xor
clc
repnz
fiadds
mov
cmp
push
or
mov
push
adc
xchg
fnstsw
wrmsr
test
pop
cmpl
push
pop
movsb
jecxz
notl
inc
sahf
pop
mov
cmpl
ficoml
sub
sbb
pop
test
pop
add
jle
fwait
or
dec
jge
mov
mov
test
lahf
mov
mov
int
stos
dec
mov
fwait
imul
movsb
and
mov
and
mov
mov
orl
lcall
shl
out
mov
leave
mov
mov
in
sub
scas
or
push
cmpsl
cmp
jae
out
sub
pop
jg
or
adc
pusha
pop
fnsave
mov
das
push
sti
xor
push
jb
lock
fwait
in
mov
add
in
xchg
sub
enter
int3
das
jae
dec
sahf
in
jbe
in
and
shlb
bound
push
popa
fistl
aad
adc
out
pop
mov
pop
out
or
xchg
js
pop
mov
jo
fsts
mov
andl
test
movsl
pop
lods
and
add
test
sbb
jb
lcall
sbb
iret
jns
sub
and
dec
or
and
add
aaa
lahf
cltd
out
adc
lods
ret
push
sbb
out
adc
shll
jb
loope
outsb
sbb
bound
rcrb
mov
out
test
or
push
xor
or
xorl
inc
mov
movsb
in
mov
mov
push
pop
xchg
add
and
ljmp
lods
pusha
outsl
jmp
addr16
pop
adc
rclb
pop
dec
out
mov
into
int3
mov
rcr
cs
inc
loope
sub
js
pop
jmp
xchg
je
repnz
jne
pop
cmpsl
std
push
jno
mov
xchg
pop
and
movsl
andl
test
or
pusha
clc
loope
test
popf
push
mov
xor
aaa
xorb
jl
enter
mov
dec
out
or
add
mov
shlb
sbb
aam
imul
or
bound
and
lock
sub
rolb
rorl
push
lds
xchg
jecxz
pop
add
add
std
sbb
cmp
sbb
fcmovne
in
mov
adcb
rcll
enter
inc
push
mov
xchg
imul
mov
lret
mov
and
lcall
push
xchg
clc
pop
push
in
dec
addr16
inc
bound
fwait
test
sub
mov
dec
sub
mov
mov
cmpsb
and
and
push
cmp
xor
je
lea
dec
dec
jp
in
cmp
loopne
fmull
mov
mov
dec
clc
jl
push
sarl
push
inc
aaa
fdivrs
push
add
mov
ss
cld
sub
icebp
test
mov
sub
pop
iret
push
ljmp
sahf
jp
clc
inc
pusha
or
jg
test
sub
pop
dec
insl
xor
popa
xchg
jns
or
je
les
fdivrs
or
cmp
clc
xchg
cmc
enter
movb
and
jmp
dec
fcomps
out
scas
adc
jae
add
jp
call
pop
loop
sbb
lret
jge
cmp
mov
call
call
mov
hlt
and
inc
jo
test
push
and
or
pop
adc
fcoms
dec
sbb
or
lret
pop
stos
sti
push
and
mov
pop
push
not
outsl
outsl
mov
test
adc
add
adc
cmp
xchg
and
je
cli
push
add
outsl
in
cmpb
andl
jl
ret
sbbl
mov
pop
jp
repnz
mov
nop
sbb
mov
adc
std
inc
nop
pop
mov
xchg
out
and
int
sbb
jmp
add
aas
in
leave
xlat
xor
add
sub
jae
push
mov
and
xchg
adc
je,pn
pop
stos
xor
stc
mov
stos
das
cli
hlt
in
push
sub
adc
sbb
sub
adc
nop
adc
adc
push
retw
adc
xorb
fbstp
and
or
ret
das
pop
sti
vmwrite
add
xchg
xor
cs
xchg
mov
sbb
stos
rorb
loope
std
add
mov
xchg
loopne
outsl
add
in
pop
addl
ja
inc
les
inc
ret
outsb
dec
mov
push
subl
xchg
mov
push
fstps
mov
add
cli
inc
or
popa
sub
adc
gs
test
sub
or
lock
xor
loopne
stc
xchg
push
sahf
lea
dec
add
and
xor
xchg
mov
ljmp
fldt
fs
insb
fsts
mov
pop
xchg
decb
subl
arpl
aas
jbe
stos
xchg
mov
and
push
jle
dec
pop
mov
pop
adc
fidivrs
mov
cmp
test
fwait
add
cmp
xor
test
enter
adc
mov
bound
gs
movsl
xorl
cmp
jge
call
pop
popf
push
ss
fadd
ds
fistps
popa
out
roll
enter
xor
arpl
mulb
cmp
inc
ret
xchg
mov
mov
jno
pop
cmp
stc
jo
xchg
sub
lcall
or
jge
sbb
adc
xchg
push
xchg
je
xchg
jl
lcall
dec
dec
pop
push
rcll
push
fistpll
and
stos
sub
sub
enter
push
outsl
and
xchg
xchg
test
mov
jmp
mov
pop
xchg
rclb
lret
mov
push
mov
shll
mov
ljmp
movsb
jl
or
enter
xor
imul
or
fs
pop
xor
popf
xchg
and
imul
call
fidivrs
std
test
inc
test
loopne
jge
leave
in
cmpsb
psadbw
loopne
jp
repz
pop
xchg
push
jae
mov
pop
ja
out
sbb
ss
negl
hlt
pop
push
inc
sti
xlat
out
jg
ds
lock
cmp
scas
lock
sbb
push
negl
mov
fistps
pop
ja,pt
addr16
in
cli
mov
lock
lcall
sti
fmulp
aaa
inc
out
loop
aad
clc
scas
xchg
inc
fidivs
movlhps
inc
mull
mov
xor
xchg
push
sub
dec
push
fisubrl
mov
mov
jbe
out
ret
jnp
or
shld
cwtl
and
mov
sbb
sub
sbb
es
sbb
scas
test
dec
das
andb
jb
repnz
cmp
movsb
jno
cmpb
mov
pop
push
xor
test
stos
jne
test
daa
jge
gs
into
xchg
int
in
aas
lods
push
pop
adc
xor
xchg
hlt
inc
cmp
and
ret
lds
xchg
hlt
mov
cmc
loopne
movb
aam
mov
push
int
ret
pop
cmpb
xchg
adc
jmp
xor
mul
daa
int
sub
push
add
cld
cmpsl
das
outsl
aam
push
ds
sti
cli
inc
aaa
loopne
push
xor
movsl
data16
push
nop
sahf
sbb
fsubrl
add
iret
mov
js
call
xchg
pop
movsl
mov
mov
cmpsb
addr16
in
dec
cmp
negb
cwtl
fidivrs
out
aas
imul
mov
and
cmp
add
movsb
sahf
pop
add
push
and
test
sub
or
sahf
add
xchg
pop
sub
je
xchg
jbe
inc
sub
js
hlt
movb
ficoml
das
incl
mov
mov
and
nop
adc
mov
pushf
popa
fwait
or
stos
loopne
push
add
scas
adc
xchg
add
dec
fsubrs
aad
lahf
add
mov
hlt
xchg
aam
xchg
or
in
jbe
bound
mov
mov
sub
push
and
xchg
les
lcall
rorb
out
xor
iret
inc
add
fdivs
lcall
orl
and
xchg
inc
xor
test
cmpsl
jo
jnp
pusha
xchg
fisttps
js
adc
inc
cmp
mov
adc
icebp
ret
cmp
jmp
pop
inc
push
dec
inc
push
cmp
in
cmp
in
fsub
loope
dec
pop
fisttpl
fwait
pop
insb
std
aad
ljmp
jo
pop
aad
ror
push
xor
pushf
stos
jns
in
push
dec
xchg
sbb
es
add
push
push
les
cmp
xchg
cmp
dec
cs
mov
stos
xchg
sbb
out
js
sti
push
jnp
lods
andb
add
test
inc
mov
push
fwait
in
sbb
sub
pusha
add
xchg
test
pushf
imul
test
popa
leave
xchg
xor
enter
addr16
negb
lret
into
mov
out
mov
xchg
mov
orb
push
imul
mov
subl
popa
pop
inc
icebp
rcrb
iret
mov
and
out
andb
test
loope
dec
aaa
sbb
push
and
arpl
xchg
sub
cmp
icebp
pop
mov
aaa
lahf
call
das
sbb
orl
xchg
loop
enter
mov
lcall
aam
pusha
mov
clc
mov
cmp
push
sub
pop
push
flds
cwtl
sub
pop
orb
rclb
jnp
push
dec
movsb
iret
imul
sub
adc
inc
ljmp
jae
ljmp
ja
cmp
ret
xor
leave
mov
jge
aaa
jmp
mov
imul
mov
fwait
cltd
fmuls
pop
xchg
cmp
sbb
rorb
sbbl
mov
bound
cmp
mov
xor
fdivrl
xchg
mov
sbb
lock
lcall
fdiv
mov
pop
dec
repz
daa
fiadds
xchg
push
push
aaa
je
test
ja
pop
jle
sub
arpl
ds
mov
ds
mov
fstps
jg
frstor
addr16
xchg
pop
push
pop
pop
shll
fmul
fisubl
ficoml
and
sarb
push
lods
add
push
xlat
dec
adc
in
pop
in
mov
sbb
test
or
pop
iret
rolb
dec
mov
cmp
data16
and
icebp
add
add
xor
aaa
std
fs
das
or
xor
sbb
adc
cmp
test
jl
mov
scas
jmp
fsubrl
lods
jae
jecxz
repnz
mov
lock
mov
loop
mov
push
popf
xchg
jecxz
sahf
out
inc
sbb
sahf
cltd
xchg
sub
sub
scas
jecxz
sub
mov
adc
push
jle
or
cmp
mov
push
lds
inc
mov
mov
mov
xchg
xlat
mov
lcall
stos
cmp
sub
add
xorb
jo
lret
mov
jnp
addr16
daa
xlat
jno
rcll
cltd
ss
dec
dec
shrb
dec
mov
imul
mov
xor
out
lods
lods
repz
push
lock
test
jnp
icebp
ss
inc
inc
push
mov
inc
pop
ret
mov
pushf
fisubl
push
adc
sbb
sarl
loopne
outsb
movsl
mov
mov
push
aam
adc
push
mov
divb
xchg
add
and
push
cmpsl
sub
adc
push
inc
stos
xchg
adc
sbb
ja
add
loop
subl
les
js
in
lahf
int3
mov
xor
nop
roll
repz
lcall
inc
js
lret
pop
fistpl
aaa
pushf
xchg
dec
mov
add
or
mov
inc
dec
xor
pop
pop
and
out
cwtl
hlt
sub
out
icebp
ljmp
cld
sbb
sub
or
xor
push
andb
push
andl
cmc
aaa
sub
call
mov
rorl
loopne
sar
testl
int3
xchg
inc
xor
rclb
imul
pop
fldl
xlat
pop
lea
or
or
xlat
les
pop
sub
popa
in
jmp
cltd
shrl
fldcw
test
push
lea
lea
xor
aad
ret
inc
aas
sub
cmc
push
gs
popa
xor
add
sub
cs
xchg
sbb
loope
jp
cwtl
push
sbb
mov
push
cmp
jbe
jno
test
ljmp
outsl
and
xor
or
dec
repz
outsl
lock
mov
pop
jecxz
mov
xor
cmp
hlt
xchg
mov
dec
jbe
and
shll
fs
dec
into
out
shl
cs
inc
aam
int3
xchg
xor
dec
std
iret
cmpb
cmc
lea
sarb
ficoms
outsl
loop
icebp
jp
push
add
and
fists
fstps
les
popa
inc
mov
push
fdivrl
in
mov
nop
inc
adc
adc
xor
and
shrl
data16
decl
clc
mov
sbb
fsubl
cmpsl
je
push
inc
xchg
int
stos
frstor
fnsaves
int
and
int
lea
fiaddl
cwtl
cmp
push
outsl
pushf
lds
push
adc
push
inc
or
cltd
cmp
sub
ret
jl
mov
test
jae
mov
and
mov
ficomps
ljmp
hlt
jmp
icebp
mov
and
fwait
test
dec
lret
and
inc
mov
arpl
mov
out
sbb
cmp
sbb
mov
xor
ljmp
in
ret
dec
stos
dec
enter
sbb
inc
bound
int
xor
testl
out
leave
mov
xor
or
jns
inc
cwtl
fldenv
push
pop
xor
ret
jne
jle
sbb
jns
dec
movsl
rol
in
mov
sub
dec
rolb
cmp
in
sub
xorb
div
mov
mov
xor
or
popf
jb
bound
adc
int
pop
es
or
mov
in
or
repz
xor
mov
dec
lret
adc
mov
mov
jg
cmp
pop
cmc
pop
in
jg
push
leave
fidivs
lcall
push
mov
test
xor
dec
ret
jg
sbbb
mov
mov
xchg
jg
xchg
push
inc
sahf
jecxz
jg
scas
xchg
jmp
shl
mov
in
and
js
push
jns
mov
pop
mov
in
outsl
aam
sbb
xchg
out
aas
sub
mov
mov
shr
push
xchg
lods
insl
icebp
fcoms
jmp
sub
xchg
jg
cmp
gs
int
push
push
inc
loop
sarl
ss
or
mov
and
sub
sub
or
stos
jecxz
inc
test
fildl
jl
test
mov
shll
pushw
lock
outsl
push
pushf
lret
cmp
xchg
xchg
xor
mov
pop
pop
mov
insl
push
pop
pop
pop
lock
inc
clc
out
push
or
dec
js
insb
dec
ljmp
popa
std
mov
lods
cmc
cmpsb
imul
lret
mov
mov
je
cs
pop
mov
xor
push
dec
fs
pop
push
jb
and
lds
aad
xchg
mov
dec
push
lcall
imul
iret
pop
scas
pop
out
lcall
into
sub
stos
mov
adc
cmc
and
and
jb
pusha
xor
mov
push
mov
xchg
imul
hlt
clc
sahf
pop
fwait
push
jmp
xchg
jl
sub
xorb
mov
out
add
xor
rcr
xchg
dec
cmc
xor
test
test
jae
in
mov
pusha
in
andl
cmpsl
mov
jo
test
push
or
mov
pop
les
out
loop
out
mov
or
aam
test
inc
mov
or
add
xchg
and
xlat
cmc
push
or
or
shr
adc
inc
addr16
xchg
subb
pop
shrl
out
mov
popaw
pusha
mov
fucomip
cmp
cld
inc
mov
mov
sbb
jbe
fdivl
push
shrb
or
adc
push
jmp
mov
mov
add
lret
sbbb
cs
stc
inc
gs
xchg
push
push
adc
jge
mov
mov
je
xchg
mov
pop
mov
in
sub
clc
mov
mov
mov
sub
adc
inc
xor
push
sbb
jbe
scas
mov
fcoml
mov
stos
inc
jns
mov
jmp
mov
call
movsl
or
lcall
mov
pop
pusha
cli
sahf
test
nop
cmp
btsl
dec
daa
sbb
aaa
xchg
xor
jnp
add
push
hlt
mov
lret
mov
xorl
mov
xlat
and
inc
lcall
xchg
fldt
rcll
push
arpl
push
aad
add
hlt
xor
lods
insl
outsl
lods
xor
fmuls
push
mov
and
or
push
jno
dec
lods
in
mov
mov
clc
out
sub
repz
fwait
mov
je
jb
sbb
ret
dec
mov
cmp
stc
mov
or
movaps
pop
enter
mov
cmp
call
xor
shlb
scas
mov
inc
lea
or
in
sti
cmp
xchg
adc
js
xor
hlt
fcmovnbe
xchg
cmp
pop
fistpl
or
mov
mov
lods
xchg
or
repz
and
push
mov
or
mov
fiadds
sub
ret
mov
add
xchg
dec
push
popa
mov
dec
lret
cltd
rep
les
sahf
inc
cltd
add
ss
or
add
mov
mov
mov
fcompl
fdivrs
aam
mov
aas
jle
int3
or
dec
or
mov
cli
out
in
xchg
jge
mov
jb
arpl
pusha
iret
cmpb
pop
mov
pop
adc
fcomp
add
out
jae
frstor
jne
lcall
sbb
andb
add
repz
les
rol
test
cmp
push
inc
jb
mov
jecxz
iret
add
ds
xchg
ss
sbb
movsl
adc
call
pusha
popf
icebp
cli
fnstenv
in
pop
sbb
out
arpl
ja
push
jmp
movsl
inc
xchg
xchg
mov
jge
fsubrl
ss
cs
sub
sub
cmc
andb
sahf
xchg
push
sbb
and
mov
push
ret
shl
jae
mov
mov
stc
mov
gs
push
pop
adc
insb
data16
cmp
shll
push
jecxz
xor
xor
xor
sbb
adc
adc
jbe
jno
adc
pop
scas
sub
mov
dec
repz
outsl
cmp
cmp
xchg
cmp
dec
push
das
imull
xor
popa
xor
les
fcmovu
les
das
mov
iretw
cmp
in
aas
nop
pop
das
add
xchg
and
dec
ret
mov
push
push
push
divl
shlb
div
loop
cmp
movl
and
inc
movsl
pop
and
push
lock
movsl
pop
insl
movsb
popf
in
loopne
xlat
outsb
je
lcall
push
xchg
ds
xchg
mov
das
mov
cmp
in
adc
sbb
aam
scas
repnz
lods
testb
fwait
into
inc
xchg
test
dec
and
loop
insl
lahf
movsl
push
fldt
jo
inc
lea
movsb
cmc
mov
cmc
data16
fcmove
inc
inc
fmulp
in
pop
movsb
mov
rclb
or
mov
adc
out
mov
add
dec
ss
gs
enter
fprem1
mov
sbb
sub
out
adc
push
mov
pusha
xor
mov
je
out
jo
stc
icebp
stos
loope
push
and
inc
or
clc
xor
dec
gs
loope
sbb
xchg
sbb
bound
jns
fcmovnbe
mov
mov
mov
sbb
or
push
std
aad
or
and
in
xor
fists
cmp
aas
xor
negb
sub
sti
std
xchg
roll
mov
cmp
and
push
jg
mov
mov
dec
lcall
loope
je
dec
lret
fmull
subb
cmp
jnp
pop
mov
adcb
xorl
jle
inc
int3
or
lods
jbe
mov
jl
aas
pop
xchg
fsub
xlat
cmpsl
shl
lret
stos
outsb
shll
add
je
and
lea
pop
jns
les
loope
stos
sub
sbb
popa
repz
and
scas
jmp
push
mov
xlat
test
push
dec
pushf
jne
inc
js
mov
mov
mov
fwait
jns
data16
jl
lcall
or
push
add
xchg
and
cli
enter
cli
push
mov
ja
fdivr
mov
add
sbb
inc
adc
jmp
test
xchg
sbb
mov
imul
sub
mov
lods
xchg
mov
out
sbb
aas
movsl
sahf
push
data16
rcrb
mov
gs
dec
jl
outsl
jne
pop
leave
cmp
adc
roll
mov
sbb
pop
movsb
pop
xor
fldl
pop
inc
push
aas
pop
popa
sahf
in
arpl
cmpsb
cmp
mov
dec
push
pusha
and
xchg
pop
vmwrite
nop
por
movsb
aam
js
jp
mov
cmc
jnp
enter
rcrb
pop
mov
push
or
insl
pop
leave
mov
filds
rcrb
jns
shrl
das
jbe
pushf
mov
shr
sbb
and
bound
repz
cmp
out
jne
inc
or
movsb
sbb
in
loope
ja
push
dec
dec
cmp
sbb
sbb
push
stos
jnp
mov
mov
stos
es
jmp
pop
or
stc
xchg
push
add
sub
jns
sbb
mov
das
imul
cltd
jmp
loope
jmp
or
push
psraw
mov
rcrl
aad
cmp
dec
adc
into
sbb
add
inc
jl
leave
sub
popf
shll
bound
push
rol
test
aad
push
cmpsb
ffree
idivl
lcallw
inc
imul
ret
push
loop
sbb
mov
lods
or
scas
push
sahf
adc
aas
out
sbb
das
imul
jns
cmp
scas
pushf
lahf
call
stos
push
mov
mov
cmp
ds
inc
loop
outsl
rclb
mov
fbld
imul
mov
mov
adc
push
addr16
xor
add
sbb
xchg
cmpb
das
adc
fisubrl
inc
fldenv
rolb
test
lea
scas
js
aas
insl
loopne
or
dec
jecxz
xchg
fistl
mov
loop
int
jl
mov
out
sub
imul
add
lods
out
cltd
outsb
pushl
mov
repnz
mov
stc
int3
jle
push
or
dec
push
jbe
mov
mov
pop
sbb
shrl
xchg
and
mov
cmpsl
cmpsl
in
sbb
pop
retw
pop
call
and
shl
shll
cmpsb
mov
and
push
cmp
dec
mov
push
and
mov
pop
mov
mov
jecxz
in
stc
mov
aam
push
inc
stos
ss
jecxz
and
mov
pop
mov
jne
add
lea
cmp
inc
loope
popf
lcall
fdivrl
mov
js
outsb
inc
jmp
xchg
mov
ret
orb
inc
fwait
mov
pusha
fsts
enter
jns
iret
push
jbe
leave
pop
add
push
mov
aas
or
cmp
sub
xor
rorl
daa
mov
add
in
xchg
xor
shr
bound
jp
lahf
cli
sbb
repz
iret
testl
and
rcrb
push
xchg
repz
adc
jae
add
not
fcompl
mov
sahf
mov
inc
xchg
stc
xor
mov
xchg
lods
fwait
inc
sub
mov
dec
orl
xor
fs
stos
cmp
mov
aad
add
dec
leave
aaa
jg
es
push
fmull
add
imul
in
pusha
cmpsb
push
mov
sbb
outsb
dec
push
dec
push
faddl
pusha
inc
mov
mov
add
add
adc
out
inc
and
dec
mov
stos
push
xchg
stos
cmc
ss
xchg
xchg
jb
ljmp
dec
cmp
and
xor
fsubrs
push
sub
fdivp
add
push
xchg
sti
or
aaa
mov
fs
jmp
pop
mov
dec
and
mov
cmp
loop
dec
xorb
mov
cmc
scas
ret
negl
dec
and
movsb
imul
mov
jle
xor
inc
std
cmp
std
or
lods
jg
mov
pushf
or
xor
adc
push
cmp
lods
arpl
incb
pop
loop
loop
inc
and
mov
jns
jne
pop
jge
or
and
mov
lahf
xchg
movsl
xchg
pop
mov
lret
xor
imul
jae
shrl
push
in
cmp
pop
jae
add
stos
fwait
loop
inc
data16
dec
mov
mov
inc
sbb
fadds
mov
orb
jb
dec
xchg
add
fcoms
aas
fwait
mov
in
loope
aad
icebp
addb
add
push
xchg
jmp
lea
cmc
mov
das
insb
mov
adc
sub
jp
adc
adc
sbb
add
xor
jae
stos
sub
mov
adc
mov
inc
bound
out
sti
or
cmc
sub
xor
daa
sbb
imul
out
movl
mov
int
fsubrs
ds
jge
call
jo
mov
dec
or
jmp
mov
test
divb
inc
xchg
add
xchg
jle
and
xor
daa
mov
icebp
adc
loope
add
loope
cld
lea
cld
lock
sbb
pop
loop
cmc
xlat
pusha
call
xchg
or
lock
cmpsb
inc
add
repz
aam
fs
sti
ljmp
repz
sbb
mov
cltd
xchg
pop
dec
insl
leave
add
addl
insl
les
movsl
in
mov
mov
lahf
cltd
js
sbb
enter
jmp
and
add
push
lea
dec
sbb
stos
in
jae
test
push
int3
leave
js
repz
rcrl
pop
lret
sub
sbb
fwait
pop
or
adc
fidivl
xor
stc
mov
mov
inc
adc
ret
add
imul
stos
jl
ljmp
imulb
pop
lods
sarb
dec
aam
out
mov
fcmovnu
inc
mov
adc
add
ret
out
rorb
popa
int3
movsb
pop
movsl
xor
lea
push
adc
cmc
call
push
sti
ret
xchg
push
aad
xor
push
jo
jp
push
imul
mov
lret
mov
mov
pop
int
jns
aas
inc
push
push
lock
dec
mov
or
in
lret
test
xlat
insb
ret
adc
std
dec
cmp
push
clc
pop
push
dec
add
xor
lret
jae
cmp
pop
mov
xchg
test
sahf
insb
sti
mov
add
cmp
aam
out
pop
rcl
insl
lds
js
mov
inc
sahf
out
aas
xor
lcall
jmp
out
mov
test
xchg
cld
jns
pop
mov
insl
sti
scas
sbb
xor
xor
sahf
push
lods
cs
cmp
sub
mov
mov
push
pop
shlb
not
in
and
loope
xor
push
mov
xchg
inc
push
decl
imul
std
and
jo
cltd
lret
cmc
adc
std
sub
cmp
cld
pop
sub
out
das
mov
mov
jnp
and
hlt
xorb
pop
sub
cwtl
out
xchg
xchg
mov
shl
or
inc
sbb
cmpb
or
sbb
out
pop
push
shrl
sbb
leave
cmpsl
outsl
inc
adc
push
push
lock
jmp
outsl
mov
mov
cmp
add
test
adc
cmpsl
cwtl
sbb
pop
mov
into
xchg
test
stc
popa
push
js
filds
or
sbb
mov
push
cmp
push
mov
inc
enter
enter
pop
xchg
pop
cltd
mov
pop
in
fsubr
inc
inc
cs
push
push
ljmp
sbbl
jl
pop
push
repnz
insb
ret
daa
aas
adc
or
dec
mov
add
xor
add
ss
dec
cld
jmp
fistpl
insb
dec
shll
push
or
inc
lahf
mov
stc
push
and
jo
fidivrs
adc
jmp
loop
les
add
sub
and
ja
jo
mov
bound
pop
in
mov
enter
dec
scas
dec
mov
fcoml
push
adc
push
mov
out
add
xchg
aad
xor
cmp
inc
test
imul
not
dec
fmuls
inc
jb
stc
rclb
jg
sbb
loopne
cli
inc
add
mov
cmp
inc
mov
jp
xchg
test
sbb
pop
fucom
fstl
adc
decl
sub
add
inc
roll
outsb
jle
movsl
ljmp
sub
jb
jbe
jae
inc
push
sbb
inc
mov
aad
dec
pop
cmpsl
pop
mov
add
mov
sub
jo
mov
in
imul
xor
xchg
and
mov
cwtl
scas
jg
jl
loopne
cs
xchg
les
orb
cmp
das
insb
sahf
xor
shrl
insb
pop
hlt
or
imul
lods
jl
loop
repz
cmp
mov
fwait
pop
mov
movsl
xor
mov
sub
xlat
inc
jl
pop
mov
pop
mov
into
test
xor
aam
cmp
lret
int3
mov
sahf
aam
adc
add
aam
add
jecxz
ds
and
push
ja
xor
jb
das
xor
xor
fwait
push
add
push
jbe
fadds
mov
jbe
xchg
enter
aas
sbb
leave
jnp
xchg
mov
fs
fcmovnb
push
sub
dec
imul
jp
push
xchg
xor
sar
dec
arpl
sub
xchg
pop
or
sub
sub
sbb
jae
pop
jmp
das
mov
es
stos
imul
mov
pop
inc
stc
pop
ret
in
arpl
push
xchg
enter
mov
pop
insb
dec
jmp
loope
mov
fistps
push
sub
aas
ret
or
mov
shlb
out
pop
sti
in
aad
outsb
cwtl
popf
cmp
mov
ss
jp
sub
sub
pop
xchg
adc
jge
dec
lock
push
gs
jg
out
je
mov
mov
inc
or
xor
or
stos
mov
adcl
mov
jbe
and
subl
inc
inc
aas
aam
in
imull
push
outsl
stos
sub
scas
jno
push
lahf
inc
inc
pop
sub
scas
pop
jle
popf
jae
sub
das
sarb
ss
scas
lods
and
add
mov
xor
mov
jb
jg
lret
imul
scas
stc
lea
jmp
icebp
pop
inc
jp
xchg
jae
insl
adc
inc
sbbb
aaa
hlt
adc
cmpsl
in
pushf
cltd
sbb
fisubrs
andb
pop
add
mov
dec
stos
cmp
push
in
fistpll
test
loopne
jae
mov
imul
sti
adc
dec
adc
inc
andl
xchg
mov
dec
outsb
push
jmp
adc
push
xor
pop
scas
mov
sar
cmpl
test
xchg
add
push
in
xchg
add
sarb
lea
jb
shll
out
adc
jmp
fcoml
or
ds
lcall
cmp
leave
mov
test
dec
dec
add
pushf
sbb
shld
xchg
push
add
mov
xor
pop
in
pop
pop
lahf
cli
repnz
mov
enter
xchg
inc
push
adc
lahf
js
ret
pop
pop
jne
push
sbb
insl
mov
push
mov
mov
xlat
sbb
lret
cmpsb
test
sbb
gs
aam
cwtl
or
push
lea
jbe
shrb
cmp
ljmp
inc
cmp
cs
add
arpl
jl
in
cwtl
mov
pop
ret
xchg
loopne
cmp
sub
out
test
xor
and
inc
insl
push
inc
test
ficompl
mov
mov
cltd
ss
xchg
aas
test
repz
cld
inc
decl
stos
inc
loope
push
notb
cmp
aad
jmp
and
repnz
push
mov
int3
scas
leave
and
andb
and
or
xchg
xor
mov
xor
addr16
xchg
cltd
pop
rcll
aas
add
icebp
lock
sub
cmp
mov
test
inc
out
jo
push
stos
dec
shlb
push
sub
dec
addb
jae
lahf
bound
cmp
test
inc
or
pop
xlat
push
cs
add
xchg
cmp
or
data16
mov
jns
cmp
pusha
mov
pop
movsb
shl
test
incl
push
mov
shll
cmp
cmpsl
int
lock
je
lods
mov
call
jge
jle
cmc
psrld
loope
loopne,pt
xor
mov
adc
inc
jle
xor
jns
mov
adc
rclb
sbb
xchg
mov
cmp
pop
mov
shlb
lcall
lcall
cmpl
and
xchg
pop
shll
adc
mov
or
test
in
fnsave
lret
sub
mov
out
cli
mov
es
stos
push
lods
jnp
aas
bnd
cmp
push
cli
inc
cmp
mov
xor
nop
adc
add
mov
lea
js
pusha
enter
cmc
mov
jecxz
sub
cmp
sbb
xchg
pop
mov
mov
or
add
nop
out
lret
arpl
gs
cmp
mov
insb
or
inc
jne
dec
sub
dec
sarl
aas
dec
and
xchg
ljmp
daa
fs
in
clc
and
not
loopne
dec
test
out
sub
fcoml
cmp
jecxz
and
xchg
push
push
inc
lds
dec
cmp
repz
cmp
and
in
inc
dec
mov
dec
mov
iret
mov
mov
cwtl
das
jns
enter
xchg
loope
in
hlt
test
mov
sub
fstpt
lahf
pop
lock
cli
jle
add
popf
fistl
pop
insb
sbb
inc
pop
ret
je
sub
test
ljmp
call
popf
cmp
dec
sar
inc
dec
addr16
iret
in
loop
xchg
pop
push
les
and
sbb
dec
aad
lea
daa
stos
inc
inc
mov
sbb
pop
jmp
in
ret
and
inc
ret
cmp
jl
in
cltd
fstp
and
inc
jmp
mov
out
test
or
push
xor
or
xorl
lods
xor
xchg
add
pop
xchg
push
mov
pop
jmp
lcall
daa
pop
push
mov
mov
or
in
and
dec
lret
sbb
mov
and
mov
fildll
inc
pop
test
or
jne
dec
stos
int3
hlt
adc
sub
sarl
xchg
push
adc
push
and
popa
pushf
add
jmp
test
sbb
iret
mov
mov
push
jmp
mov
dec
repnz
stos
pop
je
clc
push
fsubs
stos
cmp
cs
decl
js
pusha
sbb
mov
mov
mov
cmp
roll
mov
cwtl
ss
add
fsubs
es
ss
test
cltd
imul
lea
movsl
dec
orb
cs
ret
mov
mov
ret
push
dec
jp
repnz
fiaddl
sub
jl
or
adc
or
jle
xchg
es
mov
cmpsl
shlb
sbbb
ljmp
out
cwtl
cmp
and
cltd
or
bound
add
lods
mov
add
js
imul
shlb
shlb
xchg
jle
or
xchg
and
mov
fwait
dec
adc
shl
mov
inc
les
fucom
in
xchg
pop
sub
jecxz
fstpl
mov
xor
sbb
scas
push
movsb
scas
dec
imul
dec
cld
dec
es
insb
nop
push
daa
shlb
lods
scas
xchg
sbb
dec
pusha
imul
xor
sbb
pop
data16
cmpsl
sbb
movsb
dec
faddl
lods
jecxz
loope
stos
call
adc
in
or
sbb
ficompl
mov
imul
cmp
push
fs
testl
jl
mov
loop
cmp
lret
adc
mov
jp
mov
cs
hlt
cmp
xor
push
dec
or
pop
and
pop
lds
fisubl
dec
xchg
faddp
sbb
push
and
xor
sub
lds
test
push
mov
lods
xor
cmp
fs
xor
adc
enter
lods
aas
sbb
arpl
aam
ficoms
mov
popf
mov
jo
hlt
inc
or
fdivl
bound
and
jo
inc
out
push
ds
mov
stos
jle
lods
inc
roll
push
mov
loopne
xchg
xchg
cmp
and
rolb
imul
jmp
adc
mov
xchg
pop
lods
roll
cwtl
add
ds
fbstp
in
inc
add
js
xchg
jmp
or
ret
fmull
push
or
insb
aam
push
cli
clc
sub
push
es
inc
xor
dec
jae
add
ror
loopne
xor
mov
out
cmp
int3
inc
xor
pop
jno
pop
dec
adc
pop
outsl
mov
popf
push
adc
inc
adc
sbb
ds
adc
arpl
ljmp
mov
push
add
push
or
xchg
inc
outsb
mov
cmpsb
scas
pop
mov
loopne
sbb
addb
cwtl
push
loop
mov
out
les
xchg
lock
stc
sub
inc
cli
xchg
cmp
sbb
inc
mov
lods
sbb
iret
clc
rorb
jle
aad
stos
iret
cli
xchg
repz
xor
ja
dec
mov
outsb
mov
lds
and
lret
out
dec
rcr
sbb
into
inc
scas
pop
xor
push
jns
fbstp
jle
dec
xchg
add
xor
pop
scas
cmp
outsb
sub
push
and
lods
fsubl
out
sbb
icebp
test
mov
dec
roll
sar
ret
mov
gs
or
mov
cmp
lods
shl
lret
fisubrl
outsb
mov
in
inc
adc
hlt
sbb
sarl
fisttpl
pushl
cmp
cmp
push
dec
aam
in
cmp
insl
xor
mov
scas
int
fwait
loop
fdivrp
dec
fstpt
add
xor
inc
int
imul
ret
mov
shlb
cld
mov
adc
jecxz
ret
mov
cmpsb
insl
fidivl
jnp
lock
pop
fsubrs
xlat
testb
lock
scas
fldenv
test
movb
out
cmp
xchg
outsl
xchg
xor
rcr
test
stos
mov
jle
icebp
pop
or
mov
je
cmp
fdivp
inc
aam
cld
xor
inc
lcall
out
test
into
lcall
fmull
repnz
addr16
adc
xchg
adc
dec
rcrb
subl
adc
outsl
sub
xor
movsb
out
hlt
jecxz
add
inc
xor
call
mov
pushf
mov
fldt
inc
xor
popf
or
jge
jb
and
out
mov
adc
ds
cltd
or
xor
jmp
movsb
and
lock
or
cmp
bound
pop
repnz
mov
mov
lods
pop
aaa
addl
push
js
adc
xor
jg
lahf
mov
ljmp
mov
stos
dec
inc
jbe
stc
push
mov
adc
or
and
sub
push
outsl
sbb
xor
cld
jno
lahf
test
dec
xchg
push
repz
icebp
in
sub
ds
jbe
adc
xchg
in
sub
mov
inc
sbb
ror
orb
mov
lods
and
add
test
icebp
and
cmp
and
sbb
add
enter
or
sahf
loop
popf
insb
ljmp
mov
mov
outsb
xchg
adc
arpl
push
fsubp
sub
pop
mov
mov
push
xchg
cmc
ret
fstpl
or
in
addr16
fidivrs
push
push
sub
rcl
xchg
or
ja
push
jp
mov
addl
ret
sbb
pop
adc
mov
fsubs
dec
push
incb
mov
testb
xchg
clc
mov
cmp
fcoms
pop
and
sub
and
movsb
pop
cmp
daa
push
loop
ja
or
loopne
xor
pop
xchg
sbb
bound
int3
add
or
pop
call
jl
mov
mov
call
jae
jo
inc
pop
push
jmp
mov
adc
push
repnz
adc
push
adc
xchg
inc
xor
sub
stc
jle
cmp
or
ret
and
pushl
sub
test
out
movsb
imul
cmp
arpl
cld
push
push
push
fimuls
jb
lods
fistl
inc
add
sub
push
sbb
into
fldenv
xor
adc
push
inc
loope
jno
xchg
pop
push
inc
stos
mov
adc
idiv
sarb
lds
pop
adc
lret
mov
xchg
out
loope
mov
sarl
daa
sti
movsl
push
xor
jmp
mov
sub
mov
cmp
aas
int
push
xor
imul
out
pop
mov
mov
add
xchg
add
shlb
mov
das
adc
fldl
mov
imul
pop
movsb
mov
xor
popf
mov
and
inc
cmp
jle
adc
sbb
shrl
mov
jbe
pop
scas
data16
add
pop
out
pop
cmpsl
js
test
dec
mov
mov
cmp
lcall
mov
dec
mov
xchg
daa
out
lret
mov
sbb
or
pop
loop
pop
fs
push
es
xchg
test
sub
mov
pop
cmp
cld
sub
inc
pop
cs
and
aaa
xor
pop
push
push
xchg
ja
aad
mov
leave
fcmovu
mov
inc
shrb
cmpsl
adcl
mov
inc
cmpsl
sbb
xchg
cmpsb
sbb
lret
or
je
jecxz
push
in
mov
xchg
mov
xchg
out
pop
jno
lcall
push
xchg
add
jne
mov
test
mov
test
dec
push
or
je
orl
movsl
jle
add
push
pop
sub
pop
pusha
inc
mov
mov
icebp
mov
push
stc
push
inc
pop
pop
int
xor
aam
sub
add
sub
or
xchg
mov
sub
jno
scas
pop
aas
out
sub
cmp
cmp
jecxz
xchg
inc
aam
movsb
rcll
leave
adc
adc
iret
lahf
andl
stos
js
les
xchg
ss
cmpsb
ja
sbb
into
ret
rcrb
in
xor
mov
int
ret
int3
dec
lods
or
sbb
lcall
inc
adcl
in
mov
imul
call
shrb
pop
mov
pop
sbb
jle
adc
out
lods
jle
arpl
adc
jo
loop
sbb
lock
dec
mov
repz
xchg
adc
inc
jne
out
pop
fisubrs
cli
in
pop
popa
mov
adc
sub
push
ret
pop
fwait
mov
lods
adc
xchg
jnp
cltd
mov
inc
add
iret
adc
ss
stos
xor
ds
rcl
push
jb
out
outsl
imul
lcall
scas
sub
cmp
mov
div
push
xchg
push
cwtl
mov
movsl
mov
popa
int
gs
lret
jbe
fcoms
scas
dec
inc
cld
xlat
sbb
sti
jle
adc
adc
or
dec
mov
sti
xchg
push
sbbl
lea
ja
test
pop
gs
cmp
lods
mov
push
imul
xchg
jnp
sub
inc
pop
outsb
inc
int
int3
cmp
leave
push
shlb
loop,pn
mov
test
insb
in
mov
fcmovb
insl
ss
xchg
mov
mov
sarl
scas
jl
inc
out
imul
dec
enter
ja
xchg
jecxz
mov
mov
mov
out
cmp
inc
sahf
cmp
dec
cmp
ret
aas
ja
enter
pop
xor
sti
inc
cmpsb
mov
xlat
or
call
sti
les
jge
and
jge
out
xchg
imul
mov
mov
pop
ja
movsl
sbb
sti
mov
hlt
cmc
dec
push
push
jecxz
subb
ja
adc
jl
push
jge
cmpsl
fstl
add
lock
jo
cs
repz
cltd
cmp
xchg
in
xchg
clc
fildl
jne
xor
int
scas
inc
mov
shrb
sub
add
mov
dec
sub
movsl
mov
mov
or
addl
jns
xchg
and
mov
jnp
mov
and
cmp
sbb
icebp
jge
aaa
pop
dec
sub
packssdw
mov
inc
dec
mov
pop
std
daa
outsb
add
hlt
mov
xor
pop
xchg
in
gs
push
ret
dec
push
dec
outsl
jl
jmp
cli
adc
xchg
xchg
cmp
add
mov
sub
pop
push
flds
cwtl
sub
pop
std
mov
push
adc
xor
mov
jo
out
sbb
pop
aas
inc
arpl
es
mov
cmp
xchg
mov
push
and
dec
pop
mov
int3
icebp
mov
aaa
pop
aas
and
and
fcompl
lods
std
gs
mov
fwait
adc
aad
cmpsl
adc
push
xor
add
lcall
push
repnz
mov
xchg
js
orl
mov
xchg
ljmp
dec
sahf
popf
jnp
popa
add
scas
lea
testl
out
or
jecxz
jl
jb
cmp
xor
adcl
lea
jge
and
ljmp
bound
adc
adc
enter
jmp
xlat
push
popa
push
sub
adc
test
int3
or
push
out
mov
pop
popa
fidivs
xlat
or
jb
out
fcmovbe
jo
jle
xor
int
nop
jns
xchg
and
es
sbb
xchg
xchg
ljmp
ljmp
pop
sbb
movsb
movsb
push
adc
mov
sbb
mov
push
and
sbb
pop
ret
inc
clc
pop
loope
xor
push
bswap
nop
adcb
jnp
cmpsb
adc
jmp
add
pop
sbb
sub
fs
bound
sahf
adc
test
inc
and
xor
rclb
mov
mov
stos
adc
mov
push
into
ja
ds
clc
adc
xchg
aaa
adc
jnp
js
mov
jne
mov
jmp
out
outsl
push
inc
cmpsb
out
cmp
sub
scas
jb
popf
cmpsb
ret
pop
cmp
mov
sarl
jo
mov
xor
xchg
sbb
pop
mov
jno
movsb
pop
hlt
pop
out
dec
push
dec
lret
and
cmpsb
ret
popf
ret
scas
cltd
xor
out
xchg
mov
or
jnp
push
repnz
sub
and
fucomp
dec
cld
jno
cmp
dec
push
jne
mov
int3
xor
adcl
cmpsb
sbb
xchg
inc
add
in
imul
jecxz
sbb
je
xchg
jae
mov
mov
loope
fdivrs
jae
sub
push
and
lret
out
push
add
rorb
hlt
dec
int
adc
mov
cmp
or
sub
jl
jae
jmp
lds
pop
lret
sub
sbb
xchg
xlat
test
xor
rcr
fsts
cmp
decl
ret
repnz
xchg
ret
out
mov
into
lcall
jno
cli
jmp
cmp
pop
pop
rolb
dec
pop
adc
push
sbb
and
pop
push
and
scas
sub
pop
mov
aam
in
pop
cld
dec
call
in
pop
jge
dec
xchg
ja
movsl
dec
bound
roll
sub
test
xchg
mov
xchg
xor
ret
shl
jle
rclb
sbb
orl
stos
push
push
inc
pop
jb
aas
and
sbb
mov
mov
mov
jge
daa
sbb
add
mov
dec
push
lock
pop
push
call
test
icebp
test
leave
or
out
jle
ljmp
inc
js
mov
in
sbb
mov
add
fwait
sub
jp
subps
fs
or
or
call
mov
lods
dec
leave
and
mov
mov
jl
cmpsb
inc
clc
mov
dec
xchg
mov
pop
pusha
cli
sahf
test
nop
cmp
jb
mov
push
dec
dec
or
inc
pusha
insb
pop
inc
lds
dec
or
sahf
adc
push
pop
fs
push
sbb
sub
jp
lahf
mov
sub
je
sub
pop
or
adc
push
icebp
push
std
inc
test
and
jb
sub
sbb
and
jge
mov
sbb
sbb
adc
out
inc
ja
in
sbb
enter
fucomp
jmp
cmpb
dec
push
mov
or
ss
jge
or
test
pop
jecxz
cwtl
fwait
pop
jmp
and
test
xlat
mov
jno
or
insl
int3
jmp
div
and
cli
dec
xchg
retw
in
ljmp
sbb
jl
popa
daa
aam
or
jl
les
pop
sub
pop
lods
movsl
out
fs
lea
xor
xchg
inc
ret
cmp
lcall
push
scas
loopne
xchg
and
adc
mov
sub
inc
out
jmp
ja
sub
mov
cmp
sbb
add
popf
negb
sbb
push
testb
repz
flds
outsb
lret
movsl
xchg
sub
leave
lods
inc
add
les
mov
imul
sub
xor
mov
jbe
or
dec
sbb
cmpsb
jno
daa
mov
out
fists
mov
lock
aad
or
xor
xchg
pop
pop
aam
or
iret
inc
inc
cmp
adcb
mov
enter
stos
pop
into
mov
sub
or
adc
test
mov
rcrl
add
fwait
dec
fildll
mov
add
movsl
jnp
and
mov
rcrb
jp
ret
out
or
hlt
jbe
test
test
in
pop
int
pusha
ficompl
pop
adc
mov
xchg
push
lahf
lods
xchg
pop
fistpll
sbb
nop
add
push
shll
outsb
ja
mov
push
lcall
xor
add
jns
mov
mov
inc
aaa
rclb
cmpsl
push
mov
sbb
mov
sub
mov
cmp
mov
ret
xchg
or
mov
test
in
ror
cmp
test
out
xchg
mov
dec
add
std
pop
dec
les
xchg
pop
pop
adc
fnstenv
leave
mov
js
mov
scas
nop
mov
and
cwtl
mov
fisubrl
in
popa
ja
or
fcoms
jae
cmp
xchg
inc
push
hlt
mov
out
mov
jl
sub
mov
mov
lods
cmp
movsb
cmp
adc
loop
xor
xorb
sbb
sbb
adc
and
arpl
test
rorb
and
inc
adc
jo
sbb
xorb
cmp
jno
xchg
xchg
mov
cli
mov
inc
pop
rorl
dec
or
pop
hlt
sub
push
push
aaa
mov
aad
out
sub
icebp
dec
push
add
addb
xor
rcll
mov
ret
pop
add
rcrl
mov
inc
fbld
pop
hlt
icebp
cmpsl
dec
adc
adc
inc
icebp
loope
lret
lcall
cmp
mov
xchg
push
or
mov
and
es
int
pop
xchg
xchg
pop
sub
mov
fldenv
lret
aaa
std
mov
pusha
and
aad
sahf
jbe
ja
jae
sbb
mov
mov
cmp
mov
sbb
hlt
push
push
js
fnstsw
jmp
xchg
repnz
imul
fnstcw
adcb
icebp
lods
push
jne
sub
aad
das
mov
jb
add
add
fldcw
push
out
addr16
call
cwtl
sub
sbb
rcr
clc
movsb
popf
fmull
push
sub
fs
ljmp
adc
pop
mov
and
push
popf
notb
lds
cmpsb
inc
ret
or
cmp
test
sub
xchg
dec
mov
movb
cmp
push
sbb
leave
inc
mov
ds
push
push
or
cli
add
lea
jae
pop
xchg
or
add
mov
cwtl
cltd
out
fcompl
icebp
jp
test
sahf
jg
rcrl
pop
xchg
imul
and
or
or
xchg
pop
out
mov
pop
shll
mov
inc
mov
pop
and
cld
aam
aad
mov
nop
pop
pusha
jno
pop
shrl
mov
lret
xchg
jns
and
dec
jo
gs
jmp
imul
ss
cmp
cltd
cltd
push
xor
xor
inc
out
jge
insl
mov
and
mov
xchg
jp
xor
xorl
pop
sub
xchg
pushf
test
aas
mov
cmp
popl
xchg
sbb
sub
inc
nop
dec
and
das
inc
jmp
fmuls
hlt
pop
and
mov
add
inc
shr
out
dec
xor
jle
aas
mov
jle
lods
push
add
out
das
xor
inc
add
adc
arpl
popf
mov
xchg
push
sbb
cs
pop
shll
pop
fdivrp
adc
pop
cmpl
sub
push
mov
mov
lock
and
repz
loope
into
sub
dec
adc
dec
adc
in
push
or
incl
loopne
aad
mov
inc
test
cmp
lahf
stc
inc
jae
or
out
push
cmp
fmull
ja
mov
adc
in
jno
dec
test
fimuls
jmp
mov
mov
stc
cmpsl
and
int
scas
dec
jmp
lods
and
stos
lea
inc
xor
mov
sub
and
inc
push
dec
mov
mov
loope
add
cmp
ds
adc
lret
sbb
mov
jl
je
xchg
popf
xchg
cmp
cltd
lea
inc
jge
pop
or
fmull
pop
push
shlb
xchg
sbb
sub
pusha
cmp
add
stos
pusha
cwtl
das
lea
sub
mov
mov
mov
ffreep
shrb
xor
fcmovnbe
ret
cli
popf
xor
ljmp
dec
les
dec
orl
cmp
sub
xor
repnz
in
or
sub
or
movsb
scas
pop
addb
cmc
movsb
sti
jb
cmp
arpl
sub
ret
test
push
mov
or
mov
xor
pop
cmp
and
or
lcall
addl
inc
arpl
sbb
aad
sub
xchg
jecxz
test
lret
mov
test
mov
adc
mov
movsb
enter
stc
ss
in
mov
xchg
lahf
movsb
aas
incl
adc
pop
popf
pusha
sbb
ss
dec
sarb
cmpsl
orb
push
js
popf
pop
sbb
jg
hlt
mov
jmp
in
pop
mov
push
aam
pop
lods
mov
leave
pushf
xchg
pop
es
aaa
icebp
cltd
out
shrb
mov
ret
cmp
bound
push
fsubrs
testb
stc
cmpsl
and
int
scas
dec
jmp
lods
and
sarl
push
xor
sub
sahf
ja
loopne
lea
decb
arpl
or
jb
not
jle
mov
and
jmp
jle
outsl
aaa
mov
lret
lcall
add
arpl
fs
or
int3
sbb
fdivrl
rorl
fsubrs
out
push
xchg
lock
add
fbstp
iret
mov
mov
sbb
and
pop
xor
mov
fnsave
dec
jl
inc
lahf
jne
push
into
lock
mov
dec
aas
xor
shll
inc
mov
pop
sahf
sub
jl
imul
lods
sub
scas
lret
xchg
mov
or
hlt
lret
mov
mov
cli
fmuls
inc
fnsave
nop
xchg
mov
out
test
ret
xchg
nop
dec
subb
add
and
push
lock
push
add
data16
and
enter
pushf
xlat
leave
icebp
out
stc
fisubrl
mov
cli
push
inc
push
inc
and
inc
aam
imul
mov
push
xchg
xor
adc
mov
loop
stos
fsts
aad
jae
lock
or
rolb
lahf
sti
and
lea
xchg
mov
sbb
subl
aaa
push
pop
das
addr16
mov
sbb
jb
mov
idivb
stos
cmp
add
mov
sub
loopne
sub
mov
icebp
add
mov
jns
out
in
test
mov
stos
jae
mov
fbld
stos
and
xlat
movsb
sbb
pop
mov
in
testl
dec
insb
mov
cltd
pop
popf
pop
or
inc
inc
cmpsl
ljmp
mov
sbb
popf
inc
pop
int3
sbb
andl
shll
or
cmpsl
pop
push
int3
xchg
test
mov
out
xor
mov
ss
addb
jb
lea
lock
add
hlt
jl
xor
mov
pop
cli
or
sub
faddl
lret
push
cmpsl
pop
stos
out
enter
roll
pushf
mov
adc
lcall
pop
imul
xor
mov
out
lcall
mov
outsb
int3
push
out
outsb
ficomps
or
push
insl
jge
in
and
or
mov
out
jne
sub
pop
jle
cltd
test
xrelease
cmp
xchg
sub
sub
cmp
push
dec
xor
jne
fscale
mov
cli
push
or
and
fistps
test
ja
adc
aaa
jo
pushf
jmp
and
jo
cmp
sub
jp
shrl
pop
ret
movsb
lret
mov
jg
je
xchg
movsb
cli
inc
jmp
arpl
shr
adc
rolb
mov
mov
and
sahf
fsubl
adc
pop
in
add
sub
cmpl
inc
xchg
aam
jl
imul
int
dec
sub
into
sub
mov
fs
xchg
dec
popf
cmp
nop
sbb
mov
out
fimull
sub
pop
mov
push
xor
mov
arpl
sar
cltd
into
lret
mov
push
dec
cmp
imulb
jle
xchg
in
push
andl
sti
in
cmp
outsb
adc
test
pushf
inc
lret
ss
inc
cmpsl
adc
fisubrl
fcomip
sub
daa
pinsrw
pop
xchg
popf
xchg
sbb
sbb
adc
cmpl
jmp
add
std
ss
scas
cs
mov
mov
sbb
adcb
cmp
test
hlt
pop
xchg
mov
test
insb
mov
mov
lods
pop
repnz
fs
call
movsb
adc
mov
fnstenv
xchg
pop
pusha
inc
dec
pop
dec
xor
add
and
adc
paddq
outsb
ret
aad
mov
sub
adc
push
xchg
jmp
and
stos
pop
fimull
jecxz
dec
outsl
xchg
insb
imul
shrl
mov
inc
iret
int3
sub
fmull
pop
or
or
xchg
inc
sbb
test
push
data16
in
int3
cmpsl
lahf
mov
rorb
decb
or
mov
jl
push
inc
iret
cltd
stos
jmp
and
mov
mov
je
clc
pop
and
psubsw
testl
dec
fmuls
loop
int
pop
repz
test
sbb
in
sarl
jo
or
ret
mov
xor
cmpsl
jge
cmp
loop
and
shrb
test
imul
or
sub
ret
push
jb
jmp
int3
mov
jbe
jb,pt
cmpsb
out
jne
xchg
es
dec
adc
fisubrs
out
mov
fimuls
push
xor
inc
fistl
cmp
rclb
cmc
mov
shlb
inc
mov
int
fisubs
imul
add
push
push
and
fdiv
push
mov
inc
jmp
fnstsw
jo
or
imul
xchg
xlat
xor
rorb
or
cs
es
orl
sub
jne
cmpsl
jp
dec
orl
aam
push
pop
fmuls
xchg
in
in
push
xchg
xor
mov
xchg
dec
xor
push
xchg
or
push
outsb
dec
push
and
imul
jno
ds
dec
stc
dec
lahf
lds
in
pinsrw
mov
es
or
fbld
roll
xchg
in
xchg
and
cmp
mov
and
jo
adc
push
aaa
in
add
pop
test
fisubrl
gs
sub
decb
divb
into
xorl
jg
xor
lock
jp
lds
push
mov
jp
roll
jle
xchg
mov
cwtl
mov
xchg
imul
jne
xchg
icebp
jmp
lea
adc
mov
xor
add
cmp
outsl
dec
dec
jge
mov
gs
loope
popa
xchg
psrlq
jle
lahf
dec
lret
stc
hlt
test
enter
and
mov
or
insb
mov
mov
mov
in
sub
mov
jno
lock
jp
stc
mov
push
push
je
cwtl
daa
cmpsl
aaa
or
mov
lock
aad
mov
dec
jb
jp
sti
cli
xchg
add
push
sub
xchg
mov
rclb
push
inc
cmp
cmp
jno
xor
out
jne
xchg
int
mov
add
in
sahf
or
and
sub
cmp
nop
jns
ja
aaa
jle
add
test
popl
sbb
mov
push
shlb
inc
mov
hlt
stos
fsubs
in
into
xchg
jg
mov
int3
and
jno
test
add
xor
lret
popl
lods
fcompl
test
push
jo
inc
fidivrl
mov
xchg
add
mov
xchg
fwait
ret
mov
or
popf
insl
lret
pop
mov
push
movsl
jmp
cli
rcll
cmp
push
loopne
cwtl
test
fidivs
cmp
mov
pop
or
xor
stos
fidivrl
std
inc
cld
jbe
out
ficoml
adc
mov
bound
dec
xchg
in
push
lret
sbb
jecxz
mul
iret
adc
cmp
jb
and
fsubl
jno
mov
inc
orb
arpl
xchg
push
mov
xor
mov
int
addb
in
xchg
cmp
mov
test
lcall
mov
and
ret
orl
mov
push
mov
ds
and
stos
and
or
sub
or
mov
imul
addb
jno
push
in
mov
sub
cmp
bound
mov
jmp
jno
ds
js
shl
mov
inc
imul
shll
arpl
xchg
data16
sub
lret
add
in
repnz
insb
cmpsl
shll
fwait
add
cli
outsl
pop
adc
add
outsb
call
mov
add
fs
loop
imul
xor
mov
daa
repnz
sbb
ljmp
jno
fistpl
movsl
jmp
in
and
dec
sbb
pop
inc
bound
mov
dec
jb
add
dec
inc
test
sub
xor
ljmp
push
pop
xorb
mov
into
adcl
mov
mov
cmpl
pop
pop
and
cmp
mov
call
es
jnp
jno
int3
lock
mov
push
ret
ret
aaa
fst
imul
push
adc
xor
mov
mov
repnz
stos
add
popf
aam
and
out
cmp
mov
sahf
aad
fdivrl
mov
adc
or
lahf
scas
add
test
popa
call
cwtl
imul
adc
fmuls
popa
push
cmpsb
push
in
sub
sub
pop
inc
adc
dec
fwait
test
jmp
push
xor
cmp
in
push
mov
inc
dec
jbe
mov
loope
scas
adc
rcll
imul
xor
shr
add
add
mov
mov
into
nop
int
stos
jb
cwtl
dec
stos
imul
test
cmp
scas
jg
jg
pop
idivb
imul
sub
dec
pop
push
cmp
adc
data16
ss
es
into
popa
aas
loope
push
mov
push
jecxz
xor
ror
mov
in
sti
movsb
jge
push
insb
popf
push
leave
mov
adc
mov
mov
lock
add
jnp
cld
in
int
xchg
and
test
mov
dec
test
push
jbe
testb
mov
cmpsb
jmp
push
call
loop
rorl
aas
fsub
xchg
jbe,pt
cmpsl
test
in
sbb
xor
xchg
add
jo
sti
jle
xchg
cwtl
repz
bound
pop
push
inc
pop
hlt
add
mov
int3
ljmp
add
or
sub
mov
dec
rolb
in
fcmovb
fistps
push
and
std
xlat
ss
jp
insb
fwait
shlb
add
push
add
testl
in
ss
inc
mov
leave
test
lahf
hlt
pop
jle
cld
inc
or
jg
push
sbbb
cmpl
sub
loop
sahf
mov
sub
push
xchg
dec
mov
mov
sub
subb
adc
adc
jne
adc
push
incb
add
pop
and
outsl
push
inc
daa
and
daa
fbld
leave
imul
add
stos
add
fs
xor
loopne
adc
mull
in
or
daa
xchg
in
sub
cmpsb
jb
dec
push
mov
rorb
jecxz
cs
add
xor
sub
cmp
test
mov
fs
cmp
lret
adc
sub
pop
ds
cltd
xorb
inc
insl
es
ret
je
jmp
mov
mov
fwait
inc
sbb
or
fisttpll
lea
mov
fs
push
popa
mov
push
test
repz
das
lret
jmp
add
push
rcrb
in
mov
lahf
sub
or
mov
shll
push
dec
mov
rcrl
nop
adc
cmp
into
fistpl
pop
insb
inc
dec
repz
mov
mov
icebp
gs
push
sti
xor
cmc
mov
sub
lret
inc
test
fstp
lret
jbe
sahf
mov
jle
cmpsl
xor
add
push
arpl
push
aas
cli
and
filds
mov
mov
js
fwait
jbe
fldcw
push
jb
in
sub
leave
mov
xor
mov
int3
repz
push
in
mov
pop
mov
push
loopne
xchg
cmp
js
mov
mov
imul
aaa
mov
xchg
fsubr
shrb
aaa
aas
lret
lea
or
xchg
mov
clc
ljmp
pcmpeqb
lret
or
pop
test
cli
mov
add
mov
leave
add
nop
nop
imul
jl
imul
fildl
outsb
inc
or
out
jnp
ret
repz
ss
jl
dec
mov
push
mov
mov
int
pop
loop
push
or
dec
test
mov
stc
jno
out
int3
pushf
jbe
pop
adc
and
adc
fiadds
cli
cmp
in
jno
cld
xchg
mov
xchg
dec
sbb
imul
adc
rorl
sbb
jge
je
test
ffree
sub
inc
mov
xor
jecxz
mov
out
and
jmp
addl
xor
mov
repz
js
out
cmp
sub
lods
xchg
stc
imul
addr16
out
sbb
mov
test
pop
mov
jae
lahf
inc
or
inc
stos
adc
mov
mov
jo
lret
inc
mov
ds
sub
imul
fwait
test
mov
scas
mov
in
cld
cmp
mov
or
imul
add
xchg
mov
test
inc
push
clc
mov
pushw
jg
outsb
fmuls
daa
out
jge
stc
sub
mov
mov
push
and
add
das
mov
imul
out
mov
aas
mov
cmpb
int
scas
lods
xorl
jne
scas
adc
lret
add
int
nop
dec
div
fwait
and
cld
xor
je
in
or
lds
aas
clc
xorl
popf
push
mov
jmp
push
stos
inc
jmp
add
ds
imul
mov
xchg
in
sub
fildl
mov
push
push
xor
inc
mov
jne
lea
push
cmp
popf
pop
cmp
rcr
inc
pop
push
pushf
adc
test
add
out
sbb
add
rorl
scas
cmpsl
out
xlat
in
xor
mov
addr16
sbb
jb
pop
shl
sbb
and
mov
dec
in
insl
inc
xchg
push
pop
ret
popa
push
xor
sahf
dec
xchg
lock
cmpsb
test
in
and
andl
xor
jle
inc
repz
dec
cmp
lods
divl
jmp
push
push
ror
cmp
lods
shll
pop
bound
inc
xchg
push
push
out
lock
insl
insl
mov
int
gs
cltd
sub
or
push
sbb
xor
mov
addr16
icebp
lahf
jae
lds
scas
out
mov
dec
movsb
and
daa
and
mov
jle
cmp
cmc
or
mov
pop
inc
outsb
mov
and
mov
lcall
sbb
adc
pop
jmp
shl
add
sti
aas
rcrb
or
or
das
xor
xlat
in
fisubrl
data16
xorps
inc
dec
jl
clc
mov
sbb
cmpsb
add
or
les
cmpsl
add
fs
stos
mov
mov
add
or
sub
data16
into
mov
insb
xchg
sti
mov
out
mov
lcall
push
icebp
cmp
test
rorb
pop
push
aad
orl
push
mov
shr
jl
popf
push
rep
jle
into
fcoms
leave
fildll
fldenv
aad
and
paddusb
psraw
scas
lahf
enter
mov
outsl
loopne
xor
sti
lea
xor
popf
mov
lods
pusha
push
jns
mov
enter
sahf
inc
jo
mov
call
push
andb
sbb
js
mov
fnstsw
das
mov
cmpsb
sub
js
push
repz
xor
scas
mov
ret
mov
mov
fldt
verr
jo
mov
push
sbb
popa
adc
test
ss
jle
add
adc
sti
jnp
and
cwtl
adc
ret
and
dec
xor
inc
mov
dec
icebp
mov
loop
xchg
push
fimull
xchg
dec
test
in
sbb
lock
dec
jns
add
mov
shll
popf
mov
pop
jle
sti
lea
pop
std
imul
ftst
cmpsl
sub
scas
stos
cmp
daa
data16
mov
aaa
add
lods
add
call
or
sti
fstpt
jns
test
pusha
mov
scas
xor
leave
dec
ss
into
sbb
cmp
aaa
sbb
jge
aad
push
push
mov
xchg
mov
adc
xor
push
push
push
test
inc
mov
imul
jne
mov
jg
mov
push
add
mov
shrl
sbb
cli
mov
lock
insb
movsl
push
je
fisttpl
scas
push
nop
inc
pop
into
and
sarl
jne
pushf
push
and
fildl
push
in
cmpsb
jb
stos
dec
xor
mov
out
push
sub
push
popa
faddl
sub
mov
sub
dec
pop
lret
sbb
mov
dec
mov
xchg
or
inc
xor
add
ret
lret
insw
out
aaa
adc
cwtl
or
lea
ret
jns
mov
ds
add
outsl
or
xor
xor
in
fstl
adc
xchg
imul
inc
aad
out
dec
addl
jbe
icebp
lcall
dec
addl
xchg
out
repz
xchg
xchg
dec
clc
movsb
jae
leave
out
mov
mov
call
outsb
popf
pop
insb
add
scas
imul
adc
and
dec
lods
xlat
dec
lods
into
pop
sbb
lret
push
xlat
or
xlat
cmp
cmpsl
xchg
pop
xor
mov
and
sar
enter
fadds
imul
jle
ja
roll
je
dec
jge
lret
xor
cs
adc
rcl
jb
and
xor
and
push
inc
in
inc
out
aam
xor
out
cmc
subb
mov
out
sub
mov
shl
nop
icebp
xchg
inc
fs
cmc
jl
into
mov
in
push
insb
pop
bound
jmp
shl
push
mov
add
cmc
roll
mov
xlat
call
aam
mov
dec
mov
hlt
sub
dec
sbb
sbb
pop
jl
fwait
jne
mov
enter
push
jp
add
daa
xchg
mov
fcmove
jo,pn
scas
pop
sub
sarl
das
sahf
imull
enter
cltd
ja
xor
push
push
sub
sub
out
sub
jns
int
loope
gs
loope
cmp
push
inc
out
mov
dec
mov
mov
dec
mov
gs
pusha
inc
pop
negb
xchg
mov
packssdw
pop
push
inc
mov
or
shlb
or
adc
add
adc
push
mov
ret
clc
cli
dec
lods
fcompl
lret
imul
cmp
leave
mov
sbb
mov
push
mov
push
jns
push
xor
pushaw
inc
jns
repnz
cmpsl
sub
dec
mov
add
out
inc
fmuls
popa
add
mov
ret
push
mov
lret
subb
cs
insb
pop
mov
in
mov
loopne
ffreep
and
and
mov
lds
in
ret
sub
mov
and
jns
lret
and
in
xchg
clc
lods
movb
jno
stos
and
push
insb
push
mov
dec
or
stc
icebp
dec
in
aad
mov
cld
lahf
and
xchg
jg
adc
or
add
pusha
add
push
dec
icebp
cmp
arpl
stos
xor
rorb
jae
xchg
loope
mov
test
inc
mov
jle
fwait
push
push
lret
fwait
dec
pop
xchg
push
repnz
xchg
je
pusha
pushf
add
mov
mov
cli
or
dec
loope
idivl
leave
aad
jmp
in
or
jbe
daa
mov
repnz
mov
hlt
sub
lcall
in
je
into
adc
mov
jp
jo
adc
adc
sub
dec
int3
outsb
jo
fisubs
jge
mov
movsb
jecxz
ret
dec
inc
test
sahf
hlt
push
cmp
sub
inc
mov
xor
push
xchg
in
ljmp
jae
adc
xchg
sbbl
jae
es
gs
sbb
push
inc
cmp
mov
xchg
inc
add
adc
xchg
pop
inc
add
jo
loope
scas
pop
cmc
daa
lret
sub
or
jne
pop
stc
mov
adc
out
inc
or
cmp
test
inc
stc
fldcw
pop
mulb
inc
add
xchg
stos
movsl
arpl
pop
cmp
movsbl
shll
xchg
or
or
mov
cmp
inc
sbb
cs
lret
mov
ret
repnz
mov
sahf
adc
incb
add
push
adc
imull
pop
jmp
ss
sbbb
or
dec
cmp
inc
loop
subl
subb
daa
repnz
sbb
sbb
fs
and
adc
add
shlb
loopne
sub
mov
popa
mov
pop
cmp
pop
xor
sbb
xchg
ljmp
inc
loop
insl
jb
arpl
xor
outsb
sub
sahf
jl
les
daa
xchg
push
or
pop
or
fs
out
lahf
out
icebp
pop
jl
xor
dec
push
adc
mov
lods
mov
sbb
adc
sub
fcompl
jle
adc
or
lret
fsub
cmp
repnz
xor
cmpsl
imul
shll
sbb
mov
pusha
rorb
rcrl
ds
data16
pop
subl
mov
sub
add
pop
in
popa
sub
out
movsl
inc
jne
loopne
dec
add
sbb
and
cld
xor
mov
xor
mov
int
or
lods
or
insb
xor
push
aam
out
dec
add
popf
push
aad
mov
lret
dec
imul
push
inc
and
jo
in
pop
mov
dec
outsb
inc
jbe
insl
cmp
adc
cli
scas
testb
inc
and
push
add
mov
and
scas
mov
cld
test
xchg
xor
jl,pt
push
arpl
inc
leave
adc
mov
pop
test
mov
push
popa
lcall
lods
in
push
lock
lock
pop
push
incb
mov
testb
xchg
clc
mov
int
push
jmp
jge
test
mov
imul
xor
gs
cmpsl
jge
inc
pusha
subb
in
sub
dec
les
mov
cmp
in
lret
out
incl
mov
xor
add
and
sub
sbb
push
lds
int
adc
add
cmpsl
aam
mov
test
int
arpl
clc
addb
xchg
sbb
lret
xchg
mov
inc
rorb
out
sbb
pop
xbegin
sbb
rorl
cmp
sbb
and
ljmp
jge
add
dec
add
xchg
inc
ss
fs
fs
cmp
cmc
push
les
sub
adc
jnp
add
punpckhdq
imul
ja
xor
movsb
pmaxsw
jp
or
jp
mov
loop
add
jle
sbb
fstl
arpl
es
xor
jecxz
add
mov
cmp
cmpsl
xchg
out
fsubrl
cmp
stos
sbb
mov
jnp
add
push
dec
mov
jnp
clc
in
loop
sbb
add
mov
ljmp
xlat
imul
aas
cmpsl
cmpsl
xchg
cmpsb
subl
lahf
movb
mov
in
xchg
das
push
jbe
mov
stos
lret
les
sti
ret
xor
mov
and
mov
inc
lods
mov
sub
inc
push
fwait
push
jo
or
cmc
negl
xor
xchg
js
adcb
jno
cmp
sti
xor
inc
mov
push
and
loopne
arpl
add
inc
and
movsl
push
sbb
out
fdivrs
add
cld
xchg
icebp
call
xorb
cmc
adc
lea
sub
sub
mov
out
pop
push
and
test
addl
inc
lret
cmp
jg
ret
jge
fldl
sbb
inc
iret
inc
jnp
sub
cmp
mov
pop
jne
jbe
sbb
shlb
loop
mov
scas
scas
aaa
out
and
and
add
mov
cli
mov
adc
mov
out
jmp
dec
xchg
sti
inc
push
mov
xor
stc
inc
in
shll
stos
imul
in
add
fucomi
lret
cmpb
in
fcmovne
clc
pop
sub
xchg
aas
in
pop
dec
call
es
cmp
xor
aam
out
lea
lahf
addb
and
mov
addr16
aaa
jp
mov
bound
movsl
data16
ja
aad
mov
dec
out
sub
es
cmp
sti
pop
and
mov
lods
insl
mov
xchg
jbe
lcall
js
add
into
jle
push
add
lahf
jmp
xor
cwtl
imul
adc
popf
in
push
gs
mov
jp
scas
cld
jnp
movsl
add
and
orl
cli
xorl
dec
xchg
jbe
ret
mov
mov
scas
xorl
cmp
mov
push
inc
add
hlt
aas
xor
rorb
inc
scas
daa
adc
sbb
fisttpll
add
xchg
push
jecxz
sbb
test
inc
rorb
fwait
or
test
xchg
add
and
inc
cmp
addr16
jb
out
or
sub
xchg
push
push
lret
out
rol
popa
mov
out
mov
icebp
push
pop
hlt
xchg
sub
rolb
cmp
push
mov
push
push
out
loope
int
ret
adc
cmp
pop
sbb
stos
sbb
lds
sub
jae
fnclex
adc
add
pop
pushf
daa
mov
addb
cmpsl
inc
icebp
loopne
out
inc
mov
fs
mov
sbb
xchg
add
je
mov
and
roll
xchg
adc
fwait
sub
mov
mov
mov
pop
sub
lock
les
call
mov
sub
sar
dec
test
or
ret
stos
jne
or
loop
sbb
push
jle
mov
addr16
cmp
jecxz
loope
cli
mov
inc
cli
fisttpll
push
out
ret
push
jb
mov
sub
mov
ds
rol
data16
lret
jnp
or
stc
mov
ss
inc
test
mov
movsl
fstl
ret
pop
fisttps
dec
fisubrl
and
or
sub
cmpsl
ds
dec
mov
push
inc
loop
aaa
mov
push
fsubr
aad
mov
mov
rcl
sub
pop
in
fisubrs
pop
or
push
sarl
in
xor
jnp
cmp
cmc
sub
stos
lock
outsl
pusha
js
gs
and
push
and
mov
xchg
push
cmp
mov
movsl
ret
jne
push
xchg
sub
inc
inc
mov
cmp
pop
dec
xchg
mov
fmull
pop
insl
sbb
push
mov
jge
sbb
xchg
icebp
dec
pop
jle
sub
mov
cmc
loop
sub
mov
nop
pop
dec
js
outsb
sahf
and
loope
xchg
jo
jo
imul
repnz
xor
or
mov
push
fldenv
pusha
aaa
push
mov
rclb
dec
xor
in
mov
xchg
cld
or
nop
ljmp
mov
mov
xorl
sbb
ds
pop
icebp
jmp
or
lods
cltd
test
imul
mov
int3
stos
or
stc
pusha
mov
dec
cmp
push
fstpl
outsl
and
movsw
roll
insb
cmp
dec
cmpsl
out
outsb
icebp
test
sbb
leave
test
mov
fnop
push
sbb
mov
fadds
repnz
sti
or
xlat
jp
fdivs
mov
xchg
push
repnz
and
lock
mov
lret
inc
adc
outsl
shl
jmp
js
or
xchg
testb
or
dec
jmp
sarb
fwait
cmp
sti
mov
xchg
loop
xchg
adc
xchg
jno
jg
pop
int3
dec
cmpsl
mov
and
popa
fidivl
push
or
mov
xor
inc
sub
faddl
and
jae
sahf
pop
dec
mov
pop
jae
scas
imul
pop
imul
add
xchg
int3
outsb
cmp
fdivr
xor
or
adc
fiadds
lea
inc
dec
mov
ja
mov
sub
cmp
ret
and
insl
mov
push
call
or
push
mov
mov
pop
mov
nop
jp
or
fmulp
add
jmp
mov
adc
data16
push
popa
adc
mov
cs
outsb
xor
jmp
sti
fs
pop
mov
aaa
pop
push
fcmove
mov
repnz
inc
sub
jle
xchg
aaa
add
mov
lcall
and
js
iret
arpl
fsubr
xor
stos
sbb
arpl
rcrb
iret
mov
pop
and
insb
mov
ret
andl
stos
jl
push
adc
pop
arpl
inc
adc
std
or
addr16
add
cmc
out
fwait
dec
lods
mov
push
jge
push
repnz
ss
loopne
mov
push
cmc
pop
test
fiadds
jno
cmpsb
pop
shrl
xchg
jp
insb
sub
jnp
subb
andl
mov
pushf
push
xorl
imul
mov
and
pop
mov
dec
add
insl
sub
mov
jmp
add
sbbl
push
sbb
xchg
push
pop
popf
or
xchg
cmc
mov
jbe
popf
scas
cmp
fucomp
mov
mov
popf
or
imul
jae
dec
push
aaa
int3
mov
lahf
lahf
and
daa
jne
dec
xlat
dec
ljmp
mov
cmp
in
adc
fs
add
sbb
dec
subb
push
lahf
repnz
sbb
sub
out
pop
cld
popf
jecxz
or
mov
ret
cmp
sub
loop
dec
xchg
pop
inc
jb
push
pop
push
in
xchg
and
pop
add
mov
sub
mov
mov
adc
lods
mov
push
pop
mov
inc
xor
mov
arpl
popf
pusha
sbb
dec
sub
jp
pop
adc
push
xor
ficoml
and
rorb
rorb
cmp
mov
xlat
sbb
mov
xchg
inc
divl
clc
pop
ret
sbb
push
vsqrtsd
mov
xor
sbb
add
aad
dec
push
std
pop
sbb
cmp
pop
xlat
repnz
shl
cmp
les
es
push
stc
mov
lret
rorl
inc
stc
sub
cmp
mov
push
and
xchg
fisubs
adc
mov
rcll
mov
push
fsubrl
inc
std
repz
xlat
pop
jne
js
xchg
xchg
pop
scas
fwait
or
scas
enter
mov
loopne
shlb
xor
jp
mov
dec
and
pop
rcl
sub
nop
jle
mov
adc
fcomps
movsb
std
outsl
repz
int
stc
je
pop
xchg
adc
push
mov
out
outsl
fildll
dec
fs
sub
mov
jge
mov
add
jge
aaa
jecxz
mov
js
jns
call
mov
popa
mov
rcll
sub
mov
dec
xchg
mov
pop
pusha
cli
sahf
test
nop
cmp
scas
out
cmp
pusha
fucomip
mov
mov
movsl
and
xchg
lret
call
pop
cmpb
cmp
adc
dec
jb
sub
inc
es
mov
cmc
nop
mov
jns
scas
lods
sub
sbb
pop
xlat
pop
jo
push
jae
inc
daa
cmp
inc
imul
jo
cmpsb
imul
sbb
push
sbb
add
popf
pop
js
xor
dec
ret
andl
jle
test
dec
daa
jbe
pop
mov
jb
lods
aaa
ret
inc
data16
push
pop
das
mov
dec
push
outsb
inc
sub
sahf
xchg
jl
leave
cmp
movsl
mov
shlb
popa
or
cmc
mov
lret
jae
xlat
pushf
jp
adc
adc
js
cmp
lock
push
stc
mov
aaa
out
inc
scas
icebp
inc
ret
pop
cltd
roll
dec
lret
push
mov
mov
aad
rcll
adc
mov
xchg
jecxz
dec
adc
mov
inc
out
stos
int3
int3
adc
jns
andb
aas
cwtl
pop
arpl
insb
out
cltd
outsb
push
jnp
adc
or
adc
mov
out
pop
int
add
out
and
data16
ficomps
adc
mov
push
adc
pop
jo
call
out
lret
mov
fdivl
call
inc
movsl
mov
xorb
jo
mov
xor
xchg
lea
popa
aam
inc
xor
test
lea
icebp
test
aad
push
dec
push
cmp
adc
aaa
rorb
sub
rep
lea
mov
and
mov
cmp
push
mov
jns
xchg
lock
imul
filds
ficoml
dec
sub
lahf
in
mov
push
test
add
roll
and
mov
aaa
leave
adc
inc
sbb
orl
fcmovnu
out
aam
out
add
xchg
adc
int3
cmc
into
loopne
sub
shrb
incb
ficoml
pusha
mov
jnp
ja
dec
add
mov
cwtl
cmp
out
cmpsb
addr16
pop
and
inc
pusha
jns
aad
cli
pop
sbbb
loop
les
sti
or
cmpsb
movsl
pop
pop
mov
mov
enter
sti
pop
inc
lret
pop
xor
imul
cmp
mov
loopne
rclb
and
add
mov
hlt
mov
mov
and
xor
arpl
mulb
cmp
pop
mov
jmp
cmp
inc
jo
lcall
xor
lods
test
jb
repnz
cmp
data16
xor
leave
inc
push
and
ret
movsl
sti
lcall
movsl
push
mov
decb
and
notb
inc
mov
jecxz
sub
or
mov
dec
insl
mov
dec
pushf
out
mov
inc
fwait
shll
inc
ficomps
lock
movsb
inc
lcall
adc
cmp
sub
aad
jecxz
addb
les
mov
or
xchg
add
into
xor
add
ja
pop
push
call
pop
lods
std
out
ds
sbb
push
pop
mov
pop
fbld
mov
insl
sarb
sbb
push
sti
lahf
cli
orb
aam
mov
test
out
push
int3
jecxz
sbb
repz
sub
in
in
push
inc
dec
lods
int
inc
inc
xor
dec
pop
fildll
repz
add
or
rorl
in
dec
lods
and
mov
cmc
out
loopne
and
imul
pop
stos
scas
xchg
pop
pop
xor
mov
adcb
scas
fnstsw
or
fcmovnu
mov
out
jnp
and
jbe
sub
jg
sbb
lret
pop
dec
mov
std
dec
xchg
and
pushf
retw
jns
or
repnz
pop
pushf
push
ja
and
pop
push
stc
cmp
fdivp
pop
scas
fildll
xchg
xchg
lods
mov
cmc
add
and
mov
js
hlt
imul
hlt
arpl
jb
jl
and
xchg
sub
sub
push
mov
out
mov
jbe
mov
add
mov
jge
sti
cld
in
enter
adc
push
lahf
in
dec
sar
add
push
cmp
dec
sub
bound
push
int3
push
sbb
ret
lahf
add
mov
adc
add
adc
int3
mov
xchg
xor
xchg
mov
pop
insl
xor
rcll
mov
mov
cli
add
outsb
ret
rcrb
loop
test
xchg
cmpsl
je
shrl
loop
dec
mov
sbb
adc
ljmp
int
xor
es
in
stc
outsl
or
sbb
incb
mov
testl
popa
pop
sahf
cmp
inc
scas
jge
pop
scas
xchg
into
add
xchg
sbb
leave
sar
dec
decl
and
jo
and
fwait
pop
dec
push
nop
xlat
jge
jns
cwtl
mov
inc
or
fwait
lret
and
and
outsb
adc
dec
cmpsb
mov
fwait
insb
dec
pop
lods
mov
aas
loope
sub
adc
mov
movb
sub
lock
push
or
add
lds
in
dec
jbe
jle
stc
ljmp
add
and
add
jnp
pop
mov
jno
or
dec
addr16
test
xchg
mov
inc
jno
push
pop
dec
fwait
pop
js
fmuls
sub
pop
push
flds
cwtl
sub
pop
imul
pcmpeqb
cwtl
and
test
fidivrs
shrb
loope
cmpsb
popa
stc
jp
cmp
sub
xchg
pop
jl
jp
jl
cmc
les
mov
leave
fs
or
rorl
fwait
mov
fildl
cmp
xor
and
fnsave
mov
mov
mov
dec
test
pushf
ds
sub
stos
cmp
push
mov
xchg
sbb
pop
in
mov
mov
push
adc
shr
shrb
and
cmp
xor
mov
push
push
imul
or
mov
xchg
movsl
movsl
xor
sbb
fcoml
inc
sbb
inc
mov
adc
shlb
fsubrl
incb
notl
mov
jb
sbb
add
adc
mov
push
es
xor
jne
loop
cwtl
xor
sbb
jmp
mov
mov
orl
hlt
pop
xchg
inc
rcrb
and
xor
pop
ljmp
add
pop
stos
dec
cmpsl
mov
decl
push
mov
pop
repz
or
aad
inc
rolb
daa
mov
pop
fdivrs
addl
mov
imulw
test
dec
jl
xor
iret
adc
jne
dec
push
ds
push
pop
repnz
xchg
adc
push
xor
sub
and
and
jge
inc
in
cmp
icebp
addr16
pop
fidivl
jbe
pusha
xor
dec
push
push
mov
xchg
stos
lahf
add
mov
pop
sbb
gs
ret
test
sbb
jae
mov
dec
loop
xchg
shll
xchg
xchg
pop
cmpsb
push
sahf
jo
divl
out
mov
rcrl
hlt
in
adc
add
mov
test
push
or
aaa
mov
xor
inc
popaw
mov
mov
pop
push
dec
xchg
pop
jnp
subb
cli
in
movsl
dec
pop
cmp
sbb
mov
xor
imul
ret
and
scas
jg
ret
out
adc
sub
sbb
push
loop
sbb
rorb
mov
xchg
mov
aam
sahf
inc
xor
fmuls
mov
sbb
je
mov
inc
mov
inc
movsb
idiv
pop
cmp
fistps
out
sub
add
sbb
or
mov
loopne
sub
andb
stc
and
push
pusha
lret
jns
inc
jno
mov
add
mov
dec
pop
dec
mov
addl
add
jbe
rcrl
mov
jle
pusha
push
dec
adc
add
sbb
in
fisubrs
xchg
push
mov
movsb
cmc
and
leave
inc
lock
mov
sarb
sti
jne
push
repz
pop
jle
inc
loopne
mov
cmp
cmp
jle
xor
shll
dec
or
sub
xchg
mov
push
or
and
sub
mov
add
cmp
mov
cmp
sbb
cmp
jle
scas
pop
mov
sbb
mov
imul
stos
cmpsl
xlat
adc
movsl
adc
call
ja
mov
pop
cmp
and
jecxz
dec
dec
in
fsubrl
xchg
fistpll
mov
adc
add
xlat
mov
in
jmp
and
pop
mov
mov
push
fdivl
mov
lods
add
lcall
in
test
sbb
mov
and
nop
insl
loopne
xchg
mov
sarb
bound
mov
das
mov
add
imul
fwait
or
xchg
insb
cld
inc
inc
xchg
test
inc
lahf
adc
mov
mov
iret
out
test
aam
daa
cli
dec
xlat
cmp
mov
out
ret
cmp
sub
adc
lds
fdivl
fdivs
scas
xorb
scas
shll
or
dec
pop
inc
jne
leave
sbb
sti
mov
fldenv
cs
inc
mov
pop
fadds
inc
test
inc
cwtl
pop
sub
shlb
leave
mov
pop
pop
xor
out
and
cli
clc
inc
mov
dec
scas
jge
test
es
mov
mov
pop
ljmp
outsb
mov
std
les
rcr
movsb
push
mov
aas
mov
sbb
xchg
imulb
mov
sub
jl
outsl
int3
xor
and
adc
mov
jno
or
mov
inc
push
inc
pop
and
mov
pop
mov
scas
cmp
mov
pop
fstp
ljmp
or
shrl
jp
mov
loop
sbb
sti
sbb
cmp
jp
jecxz
data16
arpl
lods
push
add
mov
jb
stc
and
push
dec
and
lahf
xorb
xchg
fcomps
and
and
cmp
dec
imul
jmp
push
mov
dec
xor
pminub
rorb
pop
cmpsl
and
cmp
insb
add
xchg
sbb
xlat
lret
out
bound
aas
loop,pn
enter
inc
pop
sahf
rclb
jge
test
shll
ret
pop
test
or
bound
push
gs
cld
inc
cmpb
cmpsb
fwait
sbb
push
stos
cwtl
cli
shll
ret
inc
mov
jge
or
test
jl
pop
mov
dec
jbe
or
ret
add
mov
into
orl
xor
in
xchg
les
push
mov
push
mov
sbb
mov
enter
hlt
lret
mov
add
xlat
push
add
and
icebp
mov
add
jl
dec
xchg
sbb
ret
jg
jb
mov
cmp
pop
add
cmpb
add
or
inc
jbe
sti
lods
pop
in
ret
or
push
jg
movsb
mov
roll
adc
es
adc
inc
cmp
popf
ds
add
jo
insl
xchg
sbb
dec
leave
mov
jp
cmp
int3
cmp
inc
aam
punpcklwd
xchg
stos
mov
pop
subb
sub
rorl
sub
mov
mov
dec
push
inc
movsl
mov
and
test
jp
test
mov
add
addr16
and
sbb
pop
sub
sti
jae
imul
cmp
and
xchg
xchg
mov
jbe
cld
nop
sarl
pop
sbb
xchg
pop
add
dec
push
cwtl
cs
xor
lods
cwtl
push
sahf
xlat
sub
jg
cmp
movsb
mov
mov
mov
fstps
shlb
fsubrs
pop
push
flds
cwtl
sub
pop
adc
adc
iret
inc
in
sbb
mov
fidivs
popf
or
dec
cmp
add
xchg
mov
mov
pop
inc
sbb
lahf
jl
jnp
xchg
cmpb
mov
xchg
jge
cmc
xlat
call
fwait
mov
sbb
xchg
dec
pop
stc
jno
pop
nop
out
or
in
xor
mov
dec
icebp
lret
ljmp
dec
popa
cltd
sub
rcrl
adc
stos
ret
cmp
lcall
or
addr16
push
pop
mov
daa
fists
sti
jp
xchg
cmpsb
ja
push
jb
adc
xchg
sub
jge
jnp
push
inc
sub
scas
mov
repnz
icebp
sub
push
insl
inc
dec
sbb
push
dec
dec
dec
std
fscale
pop
lock
addb
push
lret
clc
xor
aam
push
test
repz
cmp
mov
and
xchg
addb
push
fs
cmp
je
ja
inc
fiaddl
mov
test
jne
jge
jne
loopne
leave
mov
dec
lods
and
jns
xor
test
or
add
je
add
fimuls
iret
enter
test
sbb
jle
outsl
in
inc
mov
imul
push
gs
movb
dec
sbb
outsb
cld
push
jne
scas
mov
outsl
push
lds
jo
and
ja
das
imul
pop
mov
xor
pop
xor
in
mov
push
sub
sub
lock
stos
xor
pop
and
lahf
pop
daa
or
xor
jmp
dec
outsl
addl
push
dec
jo
inc
jnp
in
ss
sub
push
cmp
xor
leave
es
js
xchg
or
mov
ljmp
push
or
std
ljmp
out
test
push
roll
out
adc
inc
add
mov
adcb
insb
mov
dec
dec
push
shll
dec
push
and
add
or
pop
movsl
mov
or
push
popa
mov
pop
fcomp
push
push
jnp
mov
outsb
cli
sbb
push
lock
pop
adcl
or
mov
cmp
sahf
fnstcw
xchg
pop
es
dec
add
mov
xor
cwtl
lods
movsl
ds
iret
mov
mov
add
mov
push
call
cmp
xor
jg
out
in
xchg
or
adc
les
sub
xor
cmp
xor
lods
xchg
fidivs
sahf
fidivl
jmp
sti
dec
push
test
aaa
xchg
mov
sbb
bound
push
sub
cmp
sbbb
xor
push
cmp
adc
mov
and
scas
lods
cltd
sbb
push
loope
hlt
mov
mov
loop
push
shll
icebp
sar
pop
blcfill
sahf
hlt
push
xor
ja
loop
pop
jle
clc
addr16
dec
in
cmpsb
and
ret
bound
sbbl
xlat
sbb
in
out
xchg
inc
push
fidivrl
enter
je
jno
and
stos
lds
std
sar
arpl
sbb
fisubrs
cmp
call
addb
ja
mov
lds
andl
sbb
or
push
jp
loopne
pop
ficoms
mov
lock
fistpl
cmp
cs
hlt
push
iret
jp
dec
jb
pop
push
sub
lahf
and
adc
push
or
mov
jb
push
sbb
mov
mov
mov
movsb
push
rcrb
and
clc
mov
jl
arpl
or
lds
add
cmp
out
cli
xchg
cmpsl
cmp
sbb
test
clc
popl
sub
or
rolb
popf
std
popf
movsl
dec
lahf
inc
sarb
leave
mov
jp
jg
pop
add
clc
xorb
int3
or
sbb
div
je
jb
add
repz
jns
jnp
mov
and
test
inc
xchg
push
dec
mov
and
sarb
andl
push
push
lock
cmc
inc
jo
jle
jno
jns
shll
outsl
hlt
loope
dec
jbe
push
mov
ljmp
pop
and
and
mul
sub
push
jmp
jge
data16
xor
sub
mov
cltd
xchg
add
or
sbb
mov
in
inc
pop
xchg
movsb
imul
mov
mov
aaa
pop
cmc
aad
adc
in
in
int
test
popa
sbb
pop
jns
int
mov
lahf
dec
sbb
insb
or
daa
or
xchg
xchg
nop
add
cmp
push
lret
aad
xchg
outsl
bound
cmp
loop
mov
adc
inc
bnd
cwtl
xchg
in
push
in
hlt
push
xor
es
xor
scas
pushf
push
adc
lret
jge
jae
mov
mov
subl
out
mov
pop
fwait
jo
xor
add
loope
sbb
or
test
addr16
icebp
sarb
sahf
daa
std
loopne
iret
hlt
jo
fwait
repnz
movsb
sarb
pop
mov
arpl
xchg
lahf
stc
pop
movl
mov
cld
movsb
ret
pushf
jne
ret
sbb
mov
mov
dec
mov
push
mov
and
cmp
sbb
aam
mov
pop
popa
cmp
jb
lret
mov
cld
push
idiv
test
mov
int
mov
and
int
inc
pusha
push
mov
ja
fsubrp
in
dec
sahf
and
xor
pop
xchg
in
jbe
pop
inc
xlat
xchg
mov
sub
xor
xchg
push
icebp
jne
lods
pop
mov
movsl
cli
adc
cwtl
imul
jle
out
inc
xor
mov
adc
xor
mov
cld
sub
adc
negl
jb
sbb
lret
cmp
ljmp
lret
cmp
push
icebp
jecxz
ret
jge
pop
mov
xchg
inc
mov
push
loope
subb
lods
jno
stc
sahf
or
push
and
jo
arpl
pop
and
dec
sub
lea
cmp
pop
inc
adc
and
in
icebp
subb
repz
mov
and
nop
inc
mov
call
insl
push
sub
adc
push
jns
cmp
loope
mov
pop
sub
mov
xor
add
pop
fildll
shll
loope
int3
imul
mov
lock
xchg
call
rolb
cs
cwtl
xchg
mov
mov
scas
enter
inc
inc
push
aaa
in
push
jecxz
xchg
push
xchg
dec
loopne
fwait
mov
adc
insb
sub
jg
inc
addl
push
out
nop
andl
ret
mov
out
jle
lahf
loop
mov
inc
loope
xchg
dec
fstpt
add
sbbl
dec
or
les
mov
ret
sahf
push
sbb
jecxz
xlat
mov
xchg
mov
sub
rcll
into
test
push
push
je
push
dec
push
dec
sub
cmpsb
ret
dec
out
addb
push
test
ljmp
loop
mov
cmp
clc
inc
mov
js
lret
jmp
jl
mov
nop
test
inc
dec
stc
or
rcrb
xor
mov
or
cwtl
std
pop
xor
cltd
adc
cmc
pop
jo
dec
outsb
lcall
lods
scas
insl
ss
vsubps
out
out
icebp
pop
fisubrs
dec
fstp
movsb
stos
sub
mov
dec
cmp
les
sub
hlt
loopne
roll
mov
call
cs
fwait
xor
jge
insl
dec
lret
sbb
push
lcall
insl
pop
imul
cmpsl
dec
cmp
push
add
stc
xchg
test
mov
dec
dec
sub
xor
mov
mov
shrb
test
call
ret
in
sbb
ret
mov
arpl
popf
pop
subb
sbb
shl
lret
in
jmp
pop
xchg
sbb
sti
xchg
fcmovb
aaa
mov
mov
jne
mov
mov
and
and
sbb
fs
dec
clc
test
jl
dec
fildl
test
xor
dec
mov
mov
movsb
pushf
mov
cmpb
fnstsw
push
inc
sahf
scas
loope
dec
and
jg
mov
ror
jae
pop
subb
ror
outsl
add
dec
jmp
add
test
jnp
sahf
not
jg
push
cmp
jg
cwtl
jnp
mov
pusha
loopne
popf
mov
mov
cmpsl
aad
mov
xlat
test
int
scas
xchg
fsubl
mov
pop
xor
movsb
jae
imul
inc
or
xor
mov
push
jae
dec
fsubrl
icebp
stos
jae
or
cli
test
inc
inc
bound
or
test
and
xchg
mov
fdiv
adc
pop
lcall
sti
int3
xchg
mov
movsl
inc
out
push
in
lahf
cs
and
mov
fdivl
push
xchg
enter
rcrl
adc
mov
sbb
cmp
mov
idivb
jne
mov
mov
and
adc
outsb
and
sub
push
lcall
jl
pushf
fisttpl
cmc
leave
movsb
dec
popa
movsb
add
or
leave
sahf
xor
inc
das
mov
lahf
or
mov
dec
out
xor
repnz
popf
xchg
mov
jmp
fcomp
adc
jp
inc
jge
push
pop
push
push
xor
outsl
repnz
adc
push
dec
add
and
shlb
jmp
mov
cltd
fdivrp
jno
and
fcoml
inc
ljmp
push
fldenv
pop
jno
and
sub
and
sub
scas
sub
pop
out
or
sbb
push
or
inc
pop
push
add
stos
leave
and
ljmp
cmpl
jp
mov
xor
incl
adc
mov
and
mov
push
mov
ss
add
push
rorl
xorps
inc
dec
jl
clc
mov
cmp
aaa
int3
bound
adc
out
cli
push
add
push
fcmovne
dec
xchg
incl
inc
cltd
mov
dec
pop
lods
push
pop
xor
leave
daa
jp
cmpsb
mov
and
add
jno
ljmp
scas
sub
ljmp
ror
dec
loopne
arpl
pop
xor
je
adc
fiaddl
xor
out
scas
ljmp
dec
orl
mov
and
mov
mov
dec
test
xchg
mov
and
xchg
dec
lds
mov
rorb
scas
lret
mov
ficompl
sbb
lea
add
icebp
mov
mov
aam
shrl
dec
jno
aad
adc
cmp
jmp
fcoml
mov
dec
mov
fwait
addr16
sbb
pop
adc
and
add
filds
add
push
popf
xchg
cmc
push
jle
aam
sub
pop
aam
push
fadd
data16
lds
adc
loop
jne
pop
mov
push
fildll
mov
mov
sub
and
pop
adc
fwait
clc
xchg
mov
jmp
dec
out
and
stos
inc
xchg
cmpsl
call
lods
cmp
andl
or
ficomps
aam
dec
cvtps2pi
sub
xor
gs
adc
adc
int3
arpl
fwait
inc
fwait
mov
outsb
lret
cmc
xchg
mov
scas
pusha
not
fnsave
mov
jge
pop
int3
push
inc
add
pop
pop
movsl
inc
sub
dec
add
outsb
lea
mov
cmp
xchg
loope
leave
jp
cmpsb
push
pop
repz
xor
jl
loope
stos
cmpsb
outsl
std
mov
pop
mov
cmpsb
gs
lods
addr16
add
pushf
fsubl
cmp
push
add
jle
je
rclb
pop
ret
ficomps
cmp
roll
cs
cli
add
sub
inc
sbb
push
jb
mov
daa
enter
xchg
mov
loope
mov
mov
mov
mov
aas
jmp
mov
insl
add
out
aam
xchg
lods
and
loope
jb
dec
inc
sub
insb
xlat
dec
adc
sub
hlt
pop
insb
mov
pop
add
outsb
lods
pop
cli
jnp
imul
push
adc
mov
outsl
aam
ret
pop
pop
out
lret
scas
lock
in
adc
cltd
xor
out
dec
in
jge
scas
or
movb
mov
push
inc
sbb
dec
int3
mov
jb
adc
jno
in
pop
push
stc
xor
jo
push
cmpsl
or
shr
popa
cmp
sar
mov
cmc
xor
cltd
jo
sub
jae
dec
ret
mov
aad
and
je
jge
mov
mov
sub
popf
rorl
jecxz
push
inc
lret
orl
rcrl
or
sub
and
pop
xchg
and
in
mov
cmp
stos
ret
js
push
dec
xchg
pop
mov
aaa
es
or
jnp
je
or
outsl
out
add
fwait
adc
cmp
ret
mov
add
push
inc
push
incl
out
mov
shrl
pop
push
and
leave
pop
subb
fnstsw
mov
or
pop
lcall
mov
fs
into
xor
mov
insb
sti
pop
push
out
rcrb
call
sbb
sbb
lss
add
jge
dec
jmp
cld
sub
in
mov
imul
pusha
sahf
mov
ftst
inc
cmp
pushf
jg
sti
out
out
push
lret
int3
mov
sub
or
ja
push
xor
adc
roll
cwtl
xor
test
repz
inc
dec
insl
dec
mov
cmp
jo
aaa
xor
xchg
mov
mov
jp
or
pop
dec
enter
movsl
lea
push
push
out
cwtl
rorb
cmc
out
sub
pop
inc
into
popa
push
in
idivl
pop
mov
mov
dec
pop
xchg
jl
pop
gs
mov
cltd
bound
adc
jbe
jno
inc
sub
ljmp
push
aad
cmp
mov
aas
ja
lret
mov
icebp
sbb
ret
hlt
adc
mov
lods
and
push
jmp
in
rclb
xchg
sub
lods
xor
cmp
aam
imul
inc
mov
lret
mov
mov
mov
jno
movsb
and
fcmovu
icebp
lret
cltd
pop
ret
stos
stc
fwait
mov
fwait
mov
in
loopne
lcall
int3
arpl
fwait
pushf
adc
push
pop
adc
xchg
mov
ret
jl
fdivrl
sub
sbbb
adc
in
out
mov
out
inc
sub
movsb
push
pop
jbe
shll
cmpsb
add
push
je
and
mov
push
insl
pop
or
int
les
add
ja
adc
dec
add
fmull
rcrl
cmpb
neg
subl
pop
jge
adc
add
sub
add
jne
testb
dec
mov
or
scas
addr16
push
fiadds
cmp
lret
sub
cmp
fistpll
shr
dec
mov
pop
xor
insl
adc
add
sub
test
leave
lret
or
jp
vminpd
ja
xchg
insb
loopne
gs
icebp
sbbl
in
ss
out
in
mov
loop
jmp
pop
mov
das
shlb
mov
cmp
dec
ja
rclb
add
or
dec
pop
pop
mov
bound
lods
xchg
inc
lahf
sub
adc
dec
int
jecxz
fisubrl
pop
movsl
movsl
gs
popl
sub
jecxz
ret
lods
dec
sub
out
jae
mov
dec
xor
mov
pop
and
dec
push
imul
xchg
pop
nop
mov
add
push
add
lock
jb
adc
into
cmp
fisubrl
mov
test
or
xchg
mov
into
adc
nop
mov
shl
test
cmp
mov
inc
sub
scas
mov
sub
in
repnz
ret
pusha
inc
mov
mov
push
std
cmpsb
adc
outsl
iret
lock
xor
dec
pop
scas
sbb
jl
rcrb
cmpl
testl
jb
lret
adcb
inc
lock
and
xchg
shr
pop
pop
mov
inc
stc
aas
push
insl
pop
stos
cmp
sbb
lea
fs
push
push
into
mov
add
cmp
add
push
mov
xchg
jnp
inc
sub
rsm
cwtl
loop
scas
sub
les
cmp
hlt
jle
in
jo
mov
and
repnz
cmp
ljmp
jle
mov
jbe
ret
jg
cmp
imul
enter
fmuls
push
out
std
add
jecxz,pn
mov
scas
cltd
or
jmp
loopne
es
sbb
js
aaa
jb
push
and
sbb
aad
sub
or
inc
inc
cmp
je
push
xor
adc
adc
cwtl
push
fdivs
mov
push
in
sub
sbb
and
in
lcall
pop
fisttpll
es
mov
sub
test
cwtl
jno
lret
call
gs
sub
push
and
xchg
aam
leave
lret
lods
xor
xor
stc
jle
fstpt
loope
push
sbb
adc
pop
testb
dec
cmc
jmp
mov
test
stos
mov
ret
sub
mov
imul
mov
js
jnp
add
fidivs
jl
das
push
ficoms
cmp
fildl
mov
fwait
pop
add
cmp
sarb
add
je
inc
sbb
fs
inc
sbb
and
insl
jecxz
mov
and
data16
adc
pop
mov
cmpb
jb
rcll
cmpsl
mov
pop
out
adc
push
cmp
xchg
loop
pop
loop
mov
icebp
addr16
les
xchg
dec
jno
pop
sbb
jo
and
push
sub
imul
cmpsb
rcl
call
sub
popa
pop
addr16
sub
mov
shufps
nop
fwait
adc
ss
pop
roll
mov
inc
jno
mov
add
sub
adc
popf
add
mov
jecxz
mov
mov
sub
cmpsl
sbb
test
mov
dec
xchg
mov
pop
pusha
cli
sahf
test
nop
cmp
mov
div
mov
mov
cmp
mov
int3
xchg
aaa
add
and
push
dec
mov
add
insb
sub
es
push
mov
or
rcll
call
dec
jno
daa
popa
inc
xchg
out
push
or
fucomi
add
hlt
sbb
xchg
ret
lods
sbb
loopne
add
mov
mov
add
push
sub
or
dec
sti
test
pop
jb
data16
adc
lea
imul
sub
jns
enter
sahf
sbb
dec
fs
push
lods
sahf
int3
iret
pop
gs
out
lcall
xchg
fdiv
das
mov
imul
jbe
pop
hlt
cmp
out
repnz
out
mov
jmp
mov
ds
push
mov
add
aas
ret
jns
sub
pushf
pop
shlb
dec
shlb
iret
lock
push
jecxz
jg
push
or
xchg
xchg
jno
mov
in
sub
adc
adcl
cmc
sbb
and
cltd
mov
xor
ss
sbb
mov
pushf
andb
jno
das
cli
cmpsb
push
aad
test
xor
les
dec
and
sti
sub
sub
sahf
push
dec
push
inc
repz
lret
enter
xor
cmc
xor
jecxz
push
mov
mov
movsl
sub
mov
mov
jae
ljmp
jmp
sbb
hlt
inc
xor
pop
andl
ljmp
js
dec
es
lock
push
mov
push
rolb
ds
sti
dec
cmp
cli
repnz
subl
jns
sbb
sahf
dec
mov
push
fildll
cwtl
sub
cmpl
pop
pop
mov
mov
arpl
arpl
push
mov
mov
scas
data16
pop
mov
icebp
mov
dec
and
or
mov
loop
aam
dec
outsb
dec
xchg
push
push
mov
out
pop
or
jns
sbb
fmuls
sbb
imul
fcoms
add
out
std
xchg
shrl
int3
scas
mov
inc
insl
dec
or
iret
pop
movsb
bound
or
or
jl
pushf
daa
inc
pusha
xor
shrl
les
xor
jns
ds
jecxz
adcl
mov
in
sbbb
hlt
stc
pop
call
test
cmpb
jecxz
pop
lods
mov
sahf
push
clc
sbb
jb
std
rorl
or
mov
fld1
insl
fadds
cmp
addr16
jg
into
stos
adc
movsb
cmc
xorl
mov
add
pop
test
nop
xor
not
inc
test
inc
cmc
mov
sarb
xchg
adc
mov
and
pop
mov
mov
jecxz
inc
mov
fdiv
push
jo
cmp
jle
in
mov
jl
push
lods
mov
jmp
push
mov
ds
fimuls
inc
jmp
dec
lcall
sti
xchg
push
jo
rol
inc
sahf
xchg
or
dec
mov
icebp
shlb
jge
leave
mov
jbe
pop
sub
fsubl
mov
add
idiv
cmp
adcb
in
mulb
xor
ret
mov
xchg
test
int3
repnz
inc
fsts
push
aad
lods
jmp
or
sbb
imul
cmpsl
adc
cmp
xchg
das
movl
jnp
mov
out
jno
fldt
in
imul
xor
lods
shl
mov
jne
aam
div
sub
push
jmp
bound
push
mov
ja
out
xor
xor
add
arpl
cmc
dec
add
ret
in
push
aam
mov
les
jb
shlb
loope
sahf
sub
or
pop
fucomp
enter
lds
jecxz
scas
add
xchg
inc
push
sbbl
xchg
xchg
inc
pop
cli
in
adc
push
repz
sub
js
mov
sti
xchg
das
inc
subl
mov
aaa
pop
sub
dec
inc
jno
stc
jmp
xor
push
dec
loope
aaa
pop
incb
or
add
mov
pop
pusha
cli
sahf
test
nop
cmp
sub
roll
mov
in
enter
adc
in
je
push
ja
pop
lods
push
sar
in
mov
xchg
mov
push
jp
xlat
sbb
scas
xor
lods
jnp
sub
adc
push
or
cmp
add
cmp
xchg
and
dec
test
jge
xor
jl
cli
stos
popa
jge
rorl
jnp
enter
mov
bound
pop
fadd
fscale
cs
sub
push
or
lret
mov
push
sub
xlat
pop
out
scas
lea
stos
std
testl
xor
pop
mov
jge
xchg
xor
aam
pop
sbb
push
and
test
outsb
subb
cli
and
das
fcmovu
ficompl
push
imul
inc
cmp
test
pop
sahf
mov
mov
cmp
add
push
in
sub
jae
pushf
dec
and
jno
jp
xor
cmp
stc
add
jmp
xchg
out
mov
imul
xor
push
dec
sub
mov
decb
iret
outsl
and
jp
mov
and
lahf
and
ljmp
adc
cs
lds
fcmove
lret
cmp
xor
pop
jp
mov
insl
and
sbb
test
pusha
and
cs
sub
lret
ret
fisubs
xor
hlt
sub
pusha
and
sub
or
out
mov
lds
stos
sbb
fidivl
mov
jle
aaa
inc
sub
stc
movsb
cmp
ljmp
push
rcll
mov
ss
outsb
loopne
inc
enter
pop
xor
and
fsubs
das
fsubr
sbb
icebp
movb
xor
insl
jmp
mov
inc
int
jg
mov
fdivl
and
stos
or
shrl
jp
ljmp
test
nop
out
mov
push
cmp
ret
inc
xor
xor
xchg
jb
add
xor
lea
inc
das
leave
mov
in
and
frstor
pop
dec
xor
xor
mov
dec
xchg
mov
pop
pusha
cli
sahf
test
nop
cmp
xchg
pop
xor
push
jecxz
cwtl
subb
movsl
aas
repnz
sbb
xor
add
mov
inc
xor
pop
mov
test
jg
je
pop
or
sbb
pop
jge
jmp
lret
in
aam
dec
pop
ss
or
out
xchg
mov
fisubrs
shlb
jns
ljmp
fistpl
adc
add
mov
movsb
xor
pusha
xlat
xlat
xchg
imull
int
aam
jne
inc
loop
inc
rolb
lea
cli
ret
lret
sarl
scas
leave
out
jle
js
pop
ret
fwait
inc
cmp
dec
xor
push
cli
dec
xorl
lahf
int
dec
loopne
inc
fidivl
or
or
push
jge
in
push
in
in
nop
mov
cmpl
sub
jecxz
push
repz
xor
push
add
push
lods
sti
xorl
add
push
push
addr16
dec
dec
cs
insl
out
aam
fadds
pop
push
jbe
dec
out
jns
pop
lock
in
int3
icebp
test
inc
mov
cltd
sbb
out
hlt
sbbl
or
sub
call
cmp
roll
push
xchg
cmp
adc
push
dec
dec
pop
rcrl
inc
and
adc
out
pop
adc
imul
nop
das
daa
xchg
scas
sub
lret
pop
or
adc
movsl
ja
aam
sbb
fsubrp
fs
inc
xor
lock
stc
jmp
fstl
xor
into
mov
imul
inc
loope
xor
imul
divps
xchg
lods
add
or
in
or
loop
jmp
sbb
add
fldenv
es
ret
and
shlb
stos
inc
push
aas
outsl
rcl
push
mov
sbb
bound
adc
jne
push
stos
jb
movsl
xchg
inc
mov
mov
scas
push
in
bound
es
mov
js
and
cli
ljmp
xchg
movsl
adcl
or
es
leave
cmp
js
sahf
jmp
fmuls
mov
inc
in
cwtl
or
mov
js
and
pop
arpl
xor
adcl
cli
ret
icebp
jle
or
rol
in
aad
inc
add
sbb
push
movsb
in
xor
gs
mov
push
and
dec
push
out
mov
mov
jmp
xchg
loop
loop
mov
sub
orl
idiv
add
ret
loopne
gs
lds
or
loopne
sbb
jne
sarl
leave
popf
test
addps
pop
ror
loop
sub
dec
xchg
mov
lret
jle
mov
push
out
dec
movsb
icebp
cmp
scas
lods
push
mov
hlt
mov
leave
jne
inc
mov
mov
sbb
ret
cli
mov
mov
mov
repz
add
pop
mov
dec
bound
sbb
fwait
add
fildl
lret
add
ret
fmul
adc
dec
daa
jae
and
mov
in
mov
cltd
popa
popl
mov
and
lcall
sub
shl
mov
in
shl
mov
sub
xchg
hlt
mov
adc
xlat
in
xchg
mov
scas
cli
mov
mov
lret
ficomps
pop
push
mov
das
mov
push
dec
test
enter
aad
mov
cmpb
fidivs
js
icebp
sub
jl
and
sbb
push
push
int3
iret
fstpl
fucomi
xor
lock
push
mov
xorl
aaa
sarb
test
ret
scas
dec
adc
pop
cmc
pop
js
lea
pop
dec
adc
push
push
mov
jb
push
pop
cld
and
clc
xchg
sti
lahf
mov
jo
or
pop
sub
inc
pushw
sub
subb
xor
jb
cmp
call
stc
fdecstp
pop
shrb
jae
mov
inc
mov
xchg
lods
dec
dec
cli
mov
js
sahf
push
pop
cmc
rcll
lcall
sub
pushf
cli
sub
dec
ficomps
cltd
cmp
sbb
xor
cmpsb
shr
aam
push
loop
leave
lock
sar
cli
fcompl
pusha
inc
shrb
mov
lret
push
xchg
add
js
out
push
orl
adc
or
outsb
imul
or
nop
or
or
nop
cmp
lds
and
sub
push
roll
sub
iret
cmpl
mov
xchg
xor
add
mov
and
mov
xchg
fildl
decl
sub
mov
mov
push
mov
cltd
cmp
jae
les
dec
lods
xor
test
imul
lock
inc
dec
dec
call
imul
jbe
or
xor
xchg
push
jle
sub
adc
out
xchg
cmp
fcoml
test
clc
out
rcll
xchg
cmpsb
or
loopne
rolb
jb
adc
insb
insl
mov
pop
mov
ss
mov
push
ficompl
push
shll
ja
icebp
inc
sahf
popf
mov
or
xorb
mov
push
push
es
lock
mov
xor
lret
test
ljmp
les
mov
scas
insb
out
or
jnp
cltd
jo
cmc
imul
popa
outsb
and
push
imul
sbb
mov
lock
push
fs
mov
loop
sbb
mov
enter
loope
xchg
sahf
psrlq
stos
inc
cs
flds
leave
fldt
push
fdiv
pop
arpl
decb
lods
fisubs
pop
cmp
ret
adc
add
stos
xor
rcll
mov
push
xorl
lret
inc
or
adc
pop
push
int
or
mull
inc
pop
cmpsl
popa
sbb
aad
xchg
out
jmp
xchg
add
add
mov
dec
sub
dec
addr16
xor
inc
lods
pmulhuw
jae
mov
popf
lods
test
push
pop
stos
js
sub
sbb
out
mov
adc
inc
mov
out
sub
xchg
or
sub
or
aas
lods
pop
jae
ljmp
jbe
in
daa
or
inc
xchg
pop
cmp
mov
popa
push
ret
bound
in
int
loope
insb
inc
sarl
push
and
ret
pop
inc
clc
push
jp
cmp
leave
jns
cwtl
jle
mov
mov
shll
pop
sub
loop
popa
pop
add
aas
mov
aad
std
xchg
xor
add
sub
insl
lock
fs
add
pop
popf
iret
and
mov
mov
mov
mov
nop
jg
pop
test
icebp
cmpsl
cmpsb
adc
dec
in
inc
mov
sub
sbb
out
iret
shlb
pop
dec
push
test
loopne
ja
movsb
jb
sbb
sbb
mov
sti
sbb
add
or
jecxz
lea
cs
or
arpl
sbb
fsts
adc
fcmovu
mov
ja
popa
add
scas
mov
test
jp
mov
xorl
add
gs
clc
lret
int
mov
pop
sub
orb
mov
idivb
pop
fcoml
mov
xor
cmp
sbb
pop
stos
enter
jnp
ds
in
inc
stc
mov
mov
js
dec
inc
lahf
dec
imul
sahf
push
nop
pop
les
jge
mov
mov
test
mov
mov
push
mov
repnz
test
jo
pushf
ret
mov
or
jge
out
push
mov
dec
xor
mov
jmp
or
ds
jne
xor
imul
gs
std
mov
pop
xchg
xor
mov
das
in
xor
loopne
sub
mov
leave
cmp
aad
xchg
xchg
aam
fstpl
xchg
jno
les
lret
jmp
mov
js
inc
bound
and
pusha
add
leave
hlt
pop
lahf
mov
mov
scas
pop
mov
inc
cmc
push
inc
mov
push
xor
push
mov
psubusb
pop
mov
xchg
xor
push
out
ret
fdivr
sub
xchg
repnz
pop
pop
aam
fsubs
cs
lods
enter
mov
jns
clc
es
xchg
sbb
shlb
cs
dec
mull
cmpsb
outsl
mov
inc
aam
lock
cld
scas
push
scas
mov
cmp
mov
loop
pop
clc
adc
scas
mov
stc
jae
cltd
mov
mov
and
or
pushf
insb
sarl
jne
sbb
mov
mov
sbb
stos
and
ret
mov
xor
movsb
mov
adc
and
js
xorb
int
test
aad
sahf
mov
mov
rorl
sti
and
sbb
jne
add
pushf
adc
xchg
repnz
icebp
cmpsb
mov
mov
enter
jae
imul
in
dec
xlat
inc
mov
xchg
mov
xorb
clc
or
dec
push
or
lahf
insl
rcrb
inc
cwtl
mov
add
add
fucom
sub
xor
dec
and
clc
mov
and
es
jecxz
aas
jno
notl
push
pop
loope
clc
clc
push
mov
mov
xor
push
push
add
xchg
and
lcall
stos
and
dec
cmpsl
dec
ss
fsubp
rorb
pop
add
mov
push
outsl
loopne
cwtl
cmpb
ds
aam
add
pop
pop
icebp
and
lds
mov
sbb
sbb
sub
scas
arpl
shr
and
or
cltd
xchg
fmull
cltd
cmc
mov
lods
inc
dec
jno
jns
out
jecxz
push
ss
push
lods
jle
stos
jns
xchg
std
jns
xchg
std
inc
and
cmp
fimuls
xlat
outsb
stc
add
or
mov
into
fnsave
and
cmp
adc
mov
push
sub
xor
xchg
ss
adc
mov
fdivs
in
nop
or
dec
fdiv
mov
add
rcrl
inc
mov
fimull
cli
dec
xor
aad
imul
fmul
sub
std
insb
outsl
cmp
clc
xor
add
out
mov
or
add
mov
clc
xchg
pop
out
outsb
hlt
inc
mov
mov
mov
lods
mov
js
inc
pop
in
pop
and
out
loop
push
lret
dec
enter
jmp
xlat
xor
in
dec
pop
cmc
mov
ds
loope
out
sbb
outsl
sbb
xor
lds
mov
pop
inc
sbb
dec
call
xchg
aas
cmpsl
loope
insl
movsl
loopne
push
cwtl
pop
cmp
push
out
add
jo
inc
loop
or
sbb
out
int
jecxz
mov
lret
arpl
mov
das
and
mov
mov
outsb
pop
shlb
bound
sbb
pop
mov
rclb
gs
ret
pop
add
repnz
repnz
icebp
scas
mov
xchg
aam
mov
ds
mov
scas
mov
es
xchg
leave
aad
sub
imull
push
mov
popf
mov
pusha
mov
mov
mov
dec
shrl
popa
movsb
pop
adc
out
dec
sbb
jo
fnstsw
mov
shll
cli
scas
stc
pop
xchg
daa
mov
sti
sarl
mov
ss
cli
mov
inc
xchg
mov
adc
cmpsl
rcll
lods
cmp
mov
sahf
mov
int
cmp
popf
sahf
push
or
test
lret
push
shll
sub
fucomp
sbb
jae
popf
ret
sbb
dec
jg
pop
jg
push
cmpsb
inc
or
out
scas
mov
mov
insb
jne
jmp
jg
mov
scas
or
jnp
imul
cmp
icebp
movsl
sbb
cmp
push
or
testl
fmuls
ret
add
jno
xor
test
pop
inc
fdivr
xor
xlat
js
push
xchg
xor
xor
jg
mov
mov
cmp
aam
jb
sti
dec
mov
and
lds
xor
mov
int3
cs
inc
mulb
sub
xorl
jae
lret
fst
mov
jns
mov
dec
pusha
fsubs
lahf
jne
push
push
xchg
aam
rclb
nop
testb
pusha
les
sbb
push
scas
mov
data16
mov
adc
xchg
cmp
mov
mov
icebp
sub
mov
imul
testb
cltd
jg
add
push
lcall
jl
pop
outsl
bnd
inc
jg
adc
jns
mov
or
mov
xchg
movsb
aas
mov
sub
mov
jnp
jbe
inc
push
jno
push
jle
mov
jmp
adc
sbb
dec
push
lahf
icebp
jnp
std
aam
cmc
fnsave
sbb
sbb
rcll
push
and
add
push
mov
lcall
aas
jmp
xchg
roll
nop
imul
adc
jnp
fldl
push
pushf
fwait
arpl
js
cwtl
xor
orb
ficoml
rclb
mov
shr
sti
stc
cmp
andb
lcall
mov
jae
xchg
push
scas
rcrl
in
popa
sbb
nop
daa
add
cmpsb
mov
ds
and
push
popf
sarb
push
fimuls
insb
mov
xchg
cli
mov
push
push
int
push
push
dec
push
xchg
xchg
push
stos
or
in
subb
xor
push
es
and
movsl
xor
imul
dec
jmp
jne
movsl
pop
stos
add
lods
inc
mov
xchg
pop
pop
cltd
ds
dec
xchg
mov
pop
pusha
cli
sahf
test
nop
cmp
leave
sub
inc
cwtl
pop
scas
fwait
scas
nop
sub
sar
lcall
pop
mov
andb
mov
xor
test
sbb
data16
xchg
int
xor
cmpsl
test
xor
aam
test
inc
jno
pop
jnp
loopne
js
xchg
sub
push
jl
pushf
ret
notl
aad
sbb
mov
in
sub
and
dec
or
jne
push
sbb
mov
test
and
aad
jmp
mov
outsb
mov
in
scas
push
sbb
addr16
pop
adc
adc
jle
xchg
xor
xchg
mov
mov
pushf
shr
and
xchg
xor
mov
mov
fbld
mov
mov
jl
mov
mov
lret
insl
mov
fdivr
ss
inc
aas
cmp
js
inc
movsb
outsl
scas
mov
sbb
loope
out
mov
pop
in
and
add
fsubrs
xchg
dec
or
jno
pop
and
leave
fistl
imul
sub
mov
add
xchg
ljmp
xchg
pop
pop
push
pop
or
cld
ljmp
scas
and
jp
stos
imul
pushf
rolb
pop
cltd
das
dec
lds
ror
mov
xor
movsl
stc
sahf
ror
pop
jl
pop
inc
clc
imul
jl
in
xchg
je
test
xlat
out
std
jbe
out
adc
cld
ds
xchg
push
shr
add
in
ret
notl
mov
cs
out
cmp
int3
jbe
sti
mov
mov
or
mov
addl
or
pop
scas
mov
pop
xchg
clc
popa
dec
rcl
dec
push
xor
sahf
mov
lods
pop
inc
xchg
call
xor
jnp
mov
pop
ret
or
sub
push
mov
fdivl
test
cmp
pop
lea
in
and
mov
adc
stos
popa
outsl
mov
jg
adc
aam
rcrb
push
or
test
cwtl
xlat
jne
imul
pop
into
push
or
into
lock
sbb
inc
je
mov
stos
or
sub
fwait
mov
jg
adc
psubd
int
xchg
out
stos
arpl
xor
aaa
aas
out
sbb
enter
dec
fsubl
adc
and
xor
mov
adc
dec
mov
popa
xchg
push
repnz
cli
mov
mov
inc
loopne
mov
cli
mov
cmp
out
or
adc
daa
ror
outsl
pop
fidivs
mov
popf
jae
decb
test
iret
or
stos
cli
ds
mov
scas
outsl
fwait
mov
mov
repnz
or
push
lahf
fisubrl
dec
sbb
into
mov
jb
adc
xor
add
or
cld
dec
inc
shrb
jl
sub
push
sbb
jns
loopne
and
aaa
mov
push
mov
adc
mov
sub
sbbl
lods
cmp
into
fwait
or
mov
push
sti
mov
pop
add
dec
out
mov
mul
sbb
movsl
mov
roll
icebp
pusha
shl
data16
sbb
mov
repnz
push
dec
lcall
repz
push
fistps
jg
add
adc
sub
outsb
cmpsl
pop
xor
fwait
int3
pop
xchg
lods
pop
mov
cmp
enter
push
inc
repz
scas
nop
mov
aaa
idivl
jg
ljmp
aam
fldt
sti
inc
sub
rol
ss
cmpl
adcb
mov
xor
ljmp
add
mov
sbb
jno
xor
mov
push
das
pushf
pushf
cmp
sub
push
pop
mov
sbb
test
xchg
das
inc
xchg
inc
pop
pop
test
popa
cltd
dec
mov
idivb
aaa
sub
and
adc
jge
xor
imul
subl
sbb
inc
in
lahf
sub
fwait
push
mov
or
popa
mov
leave
add
cmpsl
adc
rolb
and
scas
push
adc
mov
ficoml
movsl
ds
pop
les
xor
clc
enter
jecxz
in
xchg
jno
xor
les
pop
outsl
or
test
inc
repz
nopl
inc
sarl
fsubl
xchg
jl
push
movsl
jnp,pt
pop
incb
pop
arpl
mulb
cmp
icebp
in
adc
jne
sahf
insb
xor
insl
loop
insl
fs
hlt
add
or
or
cld
and
xchg
or
leave
pop
and
cmpsb
cld
push
and
jbe
dec
mov
jmp
jp
mov
jle
scas
jne
aam
and
push
mov
clc
mov
sub
cmp
sub
cld
mov
gs
mov
fsubl
fwait
cli
or
adc
js
inc
cmpsl
jns
call
xor
popa
inc
or
imul
jecxz
test
add
sbb
jg
std
xchg
jb
popa
mov
inc
je
jmp
inc
adc
fsubp
sub
dec
inc
shrb
jg
cmpsb
sbb
dec
pop
shll
xchg
pop
mov
pop
xchg
lods
pop
clc
fadds
sub
or
jg
jae
cld
xchg
cmp
mov
iret
lock
js
test
sub
jno
inc
mov
adc
xor
leave
leave
loopne
ret
adc
out
dec
mov
aas
or
aad
gs
in
ret
xorb
or
add
xchg
ret
xlat
lea
and
cmp
out
push
jge
jns
sub
sbb
es
jb
out
fnstenv
inc
daa
inc
xchg
and
mov
pop
xchg
xor
ss
jnp
adc
jae
xchg
or
lcall
stc
jp
in
pushf
sbb
loope,pt
inc
xor
jnp
inc
fwait
stos
leave
jb
hlt
inc
and
sbb
fst
sti
popf
in
pop
test
add
xchg
push
dec
dec
ss
shll
push
and
into
lret
test
adcb
lea
inc
ljmp
push
push
sti
dec
mov
mov
cwtl
push
es
mov
rcl
cmp
pop
cld
test
loope
popa
in
call
pop
fcmove
imul
lahf
call
aas
mov
xor
aad
stos
mov
mov
test
shrb
out
and
pop
mov
fidivs
outsb
mov
and
mov
xor
cmp
in
xchg
inc
xor
dec
fwait
xchg
xlat
push
jnp
push
scas
mov
or
ljmp
dec
repnz
rcr
mov
pop
jae
mov
testb
test
or
jge
frstor
cmp
stos
push
fdivl
ja
movsb
iret
pop
popf
out
sbb
fisttpl
fisttps
add
rcr
mov
xchg
jg
lretw
adc
int3
or
add
and
jl
inc
hlt
lods
xor
jae
loope
cwtl
xchg
sbb
hlt
gs
push
lcall
sub
rcrb
push
pop
jmp
or
jnp
mov
ret
dec
push
jo
movb
dec
mov
mov
sahf
sub
cld
sub
or
xor
addr16
or
add
sbb
es
std
insl
mov
push
shr
std
daa
stos
jl
sbb
inc
mov
inc
sahf
in
sub
adc
jbe
cmp
xchg
push
inc
out
aam
negl
imul
inc
fdivrl
xor
jle
cmpsb
cmp
ljmp
lcall
sahf
imul
pop
aam
pop
shlb
mov
aas
stos
in
pop
jo
xor
stc
push
push
call
adc
lea
and
insb
xchg
lahf
adc
dec
lock
inc
lds
jae
or
cld
lods
xchg
ficomps
out
add
imul
aaa
bound
rorb
dec
push
push
mov
inc
ss
das
sbb
icebp
xchg
movsl
push
mov
adc
jmp
ret
dec
sarl
nop
repnz
shlb
inc
adc
sub
rclb
xchg
push
adc
out
shl
sbb
push
xor
xchg
pushf
pop
push
dec
adc
js
ds
arpl
repz
add
cmpsl
add
inc
and
mov
mov
pop
stc
call
shrl
std
jno
xor
jo
ret
out
cmpb
cmp
pop
and
lods
jno
and
push
push
jno
lahf
sbb
jl
out
jmp
es
js
repnz
adc
mov
sbb
push
test
loop
ja
in
or
clc
scas
xor
push
push
mov
test
push
pusha
mov
mov
fs
and
jmp
daa
lds
inc
pop
xor
imul
int3
nop
ret
mov
xchg
es
jl
dec
xor
cmp
sbb
xor
push
stos
and
sbb
inc
mov
pop
sbb
js
mov
js
mov
movsb
cmpsb
nop
push
mov
mov
pusha
loope
cmpsb
je
xor
add
repz
mov
fidivrs
hlt
sbb
adc
test
add
aad
inc
mov
xchg
jne
mov
sub
stos
pop
sub
ret
mov
scas
call
aam
xor
test
popf
nop
inc
addb
add
push
cmp
hlt
push
adc
out
ljmp
test
loope
or
pop
inc
aaa
aaa
mov
out
add
aas
out
mov
out
adc
inc
push
mov
mov
addr16
sbb
pop
push
or
roll
push
dec
loope
sbb
and
pop
fisttps
sti
ret
mov
bound
jno
lds
pop
mov
push
xchg
fiadds
cwtl
or
inc
lock
add
inc
pop
sub
in
cmp
jo
pop
lcall
stos
mov
or
xchg
push
movsl
sub
daa
mulb
xchg
push
add
adc
and
pusha
mov
rclb
fdivr
cmp
mov
push
and
inc
mov
test
adc
orb
add
jp
xor
pop
jbe
scas
adc
scas
xchg
inc
inc
lds
cli
sub
fisubs
das
cmp
and
or
shl
orb
mov
xchg
cmp
ret
pop
xchg
cmpsb
and
testl
xchg
adc
push
fisubrl
jge
mov
roll
xor
and
push
lret
lods
cld
mov
xor
cmc
xor
sub
dec
xchg
mov
inc
cmpsb
xor
push
mov
clc
aam
je
push
fsubl
or
and
adcl
mov
pop
sub
dec
cmp
test
int
inc
pop
add
mov
add
push
das
div
mov
icebp
stos
int3
mov
loopne
pop
xchg
in
movsb
sub
jo
or
xchg
jg
out
fwait
arpl
bound
or
inc
rcl
repz
dec
lds
insb
or
fstl
mov
dec
lret
mov
idivl
rol
testb
sub
fstl
cld
xor
dec
enter
adc
pop
sbb
fildll
sub
inc
and
test
cs
jne
stos
lret
inc
jno
fbld
xor
add
xor
mov
jb
mov
stos
adc
mov
xchg
adc
push
std
pushf
dec
push
pop
sbb
mov
les
lds
inc
mov
je
or
loope
incl
and
out
xchg
xchg
rcr
inc
mov
ljmp
pop
clc
push
fmull
pop
sub
xor
in
inc
rclb
mov
jge
in
in
xchg
std
test
xchg
xchg
addl
arpl
call
xor
xor
notl
daa
imul
push
imul
in
mov
pop
add
cmpsl
pop
pop
jnp
loopw
std
mov
mov
jmp
pop
xchg
loope
imul
lock
stos
dec
push
inc
imul
cli
lods
sub
rorl
mov
push
mov
hlt
sbb
sbb
push
dec
fnstenv
dec
mov
psubsb
cmpsl
rcrb
stos
or
xor
add
add
push
lea
sub
inc
hlt
popf
icebp
clc
dec
faddp
adc
adc
ficompl
loope
or
leave
jbe
pusha
insl
xchg
and
sub
xchg
fisttps
xchg
out
divl
and
jmp
hlt
push
in
dec
lods
pop
in
pop
mov
xor
xchg
stos
inc
int
mov
lret
dec
sub
xchg
loope
cmc
leave
push
popf
loop
pop
or
lds
push
nop
sub
out
arpl
adc
es
push
xchg
mov
mov
or
pop
xor
cmp
xor
pop
jge
aas
push
out
dec
call
lret
sub
mov
sbb
cmpsb
inc
sbb
inc
cmc
scas
dec
xor
cld
test
dec
dec
jae
jmp
jns
fwait
or
sbb
hlt
data16
inc
xchg
in
xor
mov
mov
cld
aam
add
scas
adc
push
daa
fldcw
rclb
movsb
inc
das
or
xor
pop
push
push
and
or
hlt
sbb
mov
cs
jne
ja
mov
xchg
mov
mov
push
into
push
scas
sub
enter
std
stos
push
push
lret
jne
or
lods
inc
mov
vucomiss
inc
aaa
push
cmp
test
xchg
test
push
out
fmul
int3
dec
xchg
adc
popa
sub
in
lret
or
pushf
leave
mov
mov
mul
movsl
mov
xchg
push
adcl
sbb
shlb
inc
fisttps
out
lods
mov
je
mov
mov
pop
ret
cltd
test
mov
jno
outsb
push
and
push
add
xor
mov
xchg
aas
sarb
imul
mov
repz
dec
xchg
icebp
pusha
enter
aaa
pop
inc
mov
aas
cld
and
push
or
scas
lcall
not
pushf
scas
daa
cltd
pop
sub
xchg
and
mov
push
bound
pop
scas
lods
xchg
xor
aas
mov
mov
popa
dec
sub
push
add
ret
mov
push
pop
sbb
out
lcall
into
dec
std
mov
jno
sbb
jmp
test
jb
mov
mov
mov
push
jnp
mov
cmpxchg
jb
lcall
loopne
inc
rcr
jae
mov
stc
push
pop
lock
ss
sbb
or
and
cmp
sub
lds
dec
push
test
pop
mov
and
je
rdmsr
push
and
rorl
push
testb
gs
pop
jnp
push
inc
jo
nop
fisttpll
jl
lds
pushf
jne
or
test
push
push
mov
aaa
pop
bound
sti
ror
mov
dec
xchg
and
dec
adc
pop
iret
mov
enter
repz
inc
jecxz
sbbl
daa
in
cmp
pop
push
mov
dec
or
xlat
mov
sarb
aam
sub
test
push
sahf
mov
aas
xor
pusha
xchg
popa
shrb
popf
aas
bound
ja
sub
mov
fistl
xchg
dec
not
xor
cmc
adc
xor
add
ret
js
adc
test
loope
or
add
imul
dec
xor
cmpsl
mov
mov
sub
jge
pushf
es
xchg
jb
jecxz
push
push
pushf
push
fs
xor
cmpl
adc
pop
sbb
push
fcmovnb
mov
insl
or
cltd
and
inc
fsub
mulb
xchg
push
repz
jecxz
sub
std
mov
xchg
aad
fstpt
adc
imul
cli
xchg
subl
mov
xchg
pop
push
jb
jp
mov
inc
sub
mov
sub
test
clc
mov
insb
sti
pop
out
imul
lds
cmp
rcrl
je
xchg
loopne
aam
dec
mov
nop
loopne
hlt
mov
divl
cli
adc
pop
pop
and
fidivrl
sub
or
xlat
jne
sub
repz
jb
fisubrl
lock
dec
mov
xlat
addr16
cwtl
test
inc
sbb
std
mov
xchg
mov
cmc
mov
cli
into
mov
mov
fsubrl
dec
enter
add
dec
dec
lret
lods
xor
dec
int
out
sbb
mov
add
push
rclb
in
mov
imul
dec
sahf
and
and
adc
xchg
mov
les
dec
inc
gs
jge
mov
xchg
mull
xchg
add
add
inc
pop
mov
ret
mov
mov
pop
iret
outsl
sbb
lea
daa
mov
iret
faddl
inc
fsubrl
out
test
jle
dec
or
mov
push
mov
xchg
rolb
sub
fbld
cld
xlat
in
in
scas
stc
iret
mov
pop
std
mov
arpl
mov
dec
dec
sbb
lret
mov
jl
cltd
lahf
mov
lock
pop
cltd
arpl
push
add
lds
dec
or
loope
orl
js
dec
sub
add
idiv
inc
sub
mov
movsb
fwait
jl
push
pop
mov
mov
arpl
roll
or
loop
pop
xchg
es
xor
adc
popf
or
xor
dec
bound
xchg
xchg
mov
ja
mov
jne
pop
lret
inc
lret
pop
popa
stos
adc
xor
mov
mov
fisttpl
cwtl
in
js
xor
test
mov
jg
xor
mov
dec
aad
adc
adc
lret
iret
in
fisttpll
sbb
int3
adc
xor
dec
lods
std
xor
xchg
xor
mov
xor
adc
shlb
cmp
movsl
movsb
jmp
sub
mov
jns
mov
pop
scas
test
adc
and
and
enter
outsl
sti
sub
pop
out
std
fimull
in
into
push
push
fcomp
inc
xor
push
aad
orl
pop
jo
cmp
mov
ljmp
add
test
xor
pop
pop
pop
push
xor
rorl
lret
dec
or
adc
sub
add
xchg
xchg
xchg
testl
aam
in
gs
frstor
mov
pop
add
adc
jp
sub
rcr
js
sarb
and
repnz
mov
fisubrs
sub
fldt
sbb
pop
lods
cmp
push
imull
adc
mulb
out
test
repz
rolb
inc
inc
enter
imul
hlt
and
cmp
lahf
stos
out
inc
mov
inc
inc
outsb
jecxz
xor
sarb
out
out
gs
in
sarl
pop
adc
xor
cmp
imull
adc
push
jno
adc
adc
jl
movsb
push
push
cmp
adc
cwtl
repz
aad
dec
xchg
push
pop
into
lock
mov
or
popa
jge
dec
or
add
adc
es
xchg
into
ss
xor
jmp
mov
cmpsl
stos
inc
and
pop
pop
jnp
fstp
jecxz
cmp
jge
mov
dec
mov
add
sub
mov
jnp
mov
jmp
sub
add
pusha
and
lret
in
jae
pop
inc
jae
sub
cmpsb
jbe
or
inc
and
cmpl
fstpl
sub
xor
insl
ret
lea
jmp
xchg
movsl
imul
xlat
dec
pop
jle
xchg
sti
mov
or
or
or
xchg
mov
jge
and
fs
pushf
frstor
mov
push
xor
test
xchg
cmpsl
sbb
cmp
push
mov
mov
sub
mov
add
cmp
dec
or
lods
push
xchg
adc
test
push
xchg
mov
aaa
dec
cmp
jnp
shl
mov
jle
inc
and
in
or
xor
mov
fistps
adc
xchg
xchg
sbb
jle
jecxz
fdivrl
jg
or
dec
xchg
movsl
pusha
inc
xor
push
push
inc
imul
pop
ss
add
lods
cmp
ror
or
nop
mov
sub
mov
f2xm1
or
fdivr
pop
sbb
mov
inc
lahf
pcmpgtd
add
imul
pop
dec
lods
or
rorl
jmp
pop
mov
and
dec
enter
dec
decb
xor
mov
daa
sub
idivl
xor
movsb
mov
ss
push
test
add
dec
sub
clc
xor
mov
popf
lret
sbb
dec
scas
mov
add
dec
lock
mov
dec
sub
test
lods
arpl
fs
shl
out
mov
out
dec
insl
push
clc
cmc
lock
mov
out
pop
mov
sub
pop
push
flds
cwtl
sub
pop
push
faddl
popa
push
mov
cli
fcompl
aam
popa
adc
and
dec
jae
pop
sbb
add
or
inc
nop
test
xchg
rcrl
cli
out
mov
pop
cmc
mov
icebp
sbb
jge
popf
inc
data16
fistpll
call
movsb
jae
mov
sbb
xchg
push
dec
decb
insb
jae
jecxz
mov
pop
movsb
ds
bound
inc
xor
lret
jnp
aas
cwtl
and
add
push
adcl
or
scas
mov
inc
push
mov
data16
mov
aaa
push
xchg
cmp
sub
es
fistpll
js
loopne
fwait
xchg
ljmp
pop
cltd
add
dec
jb
sbb
int
aam
lea
push
dec
jmp
xchg
cli
or
icebp
fmull
push
lds
cmp
sub
rcrb
es
and
mov
pop
js
jae
aas
iret
lods
add
in
push
lds
add
negb
cld
mov
outsb
clc
mov
mov
mov
fsub
fdivs
cld
lret
pop
jge
int
push
repz
sub
sub
push
dec
push
xor
mov
sbb
mov
mov
scas
dec
pop
xchg
sub
sbb
loopne
js
or
test
push
adc
mov
arpl
jmp
fsubs
mov
xor
aaa
or
cmp
test
mov
or
test
fwait
inc
testl
mov
and
dec
in
popf
add
bnd
das
sbb
pop
sub
fisttps
dec
pop
mov
adc
scas
push
mov
or
in
adc
ret
mov
sub
jecxz
push
out
in
test
lret
int
lcall
bound
nop
push
sysexit
sub
mov
pop
ss
and
mov
sub
enter
pop
ljmp
adc
adc
cmp
mov
ret
xchg
xchg
jmp
jnp
sbb
sbb
or
sahf
enter
dec
and
xchg
sti
data16
orl
adc
les
cmp
imul
cmp
arpl
shrl
daa
xchg
ret
jl
and
cmp
loop
inc
fstpl
ret
xchg
add
jecxz
shrb
cmp
mov
mov
sub
adcb
movsl
clc
movl
js
lret
mov
cld
icebp
push
pusha
mov
xchg
fwait
jb
mov
popf
dec
aas
inc
jle
adc
popf
or
jno
enter
xchg
jmp
sbb
aam
sub
mov
push
jbe
and
jbe
mov
popa
sub
sub
jno
cmp
jnp
xchg
push
lret
fcompl
jno
or
dec
pop
idivb
fstps
xlat
ret
and
cltd
stos
push
dec
fcomp
xlat
sub
mov
fstps
clc
pop
shrb
daa
lock
test
rorl
movsb
icebp
pop
or
je
jecxz
nop
jp
xor
cmp
push
fstl
dec
aas
repz
push
pusha
imul
das
shll
pop
not
jmp
add
jne
loope
in
or
xchg
jns
pop
jge
mov
popa
cmp
jmp
jne
mov
lcall
lods
jmp
mov
jmp
jnp
add
shr
or
cmp
sub
xor
mov
call
pop
outsb
cmpsb
rcrb
push
out
add
ret
or
mov
pop
lret
pop
dec
sbbb
fs
sbb
xor
and
cli
push
int
adc
sbb
lahf
std
popf
stos
mov
movsl
fistps
pop
mov
lods
out
lcall
aaa
xorl
and
jmp
loopne
sub
pusha
jne
dec
or
pop
stc
popl
and
xor
outsl
popa
or
jb
sub
and
cwtl
xchg
add
hlt
ds
inc
fidivl
stos
xchg
sahf
es
out
adc
and
add
mov
lds
mov
scas
test
fs
jge
push
in
ljmp
push
je
sub
add
rclb
bound
mov
jmp
xchg
xchg
or
das
dec
jns
clc
scas
dec
aam
jo
push
bt
jns
mov
loope
xchg
and
jae
inc
adc
push
inc
js
outsl
xchg
mov
mov
push
enter
mov
sub
adc
lret
jbe
adc
jge
test
ds
mov
out
pop
jle
lret
into
iret
sbb
dec
mov
mov
mov
imul
pop
xchg
scas
test
out
push
pop
sub
jo
jle
fdivrl
mov
pop
mov
xchg
data16
dec
leave
movsb
cmp
fistpll
push
iret
sarl
mov
sahf
lret
sti
loopne
mov
xchg
pop
mov
aaa
dec
dec
add
icebp
mov
outsb
fidivs
cmp
test
xor
adc
mov
lock
arpl
add
push
pop
into
dec
fsubs
fs
add
or
out
pop
lods
daa
shlb
arpl
mov
xchg
jp
xor
scas
mov
fsubr
xor
dec
jp
or
mov
mov
aas
push
mov
fisubrl
icebp
mov
mov
jle
lret
pop
ja
cltd
cwtl
dec
test
cld
inc
aaa
jbe
pushf
jle
rorl
call
repnz
push
add
mov
aas
cltd
into
test
cmp
nop
xor
test
and
mov
xlat
jl
pushaw
cmpsb
jle
sub
decl
and
arpl
pop
hlt
leave
xchg
in
pop
cmpsl
pop
dec
mov
out
popf
jo
cmpsl
aad
movsb
stos
in
pop
sahf
lods
push
sbb
xlat
mov
or
dec
cld
xchg
movsb
and
outsl
and
push
pusha
ja
mov
test
jp
mul
dec
icebp
mov
aaa
outsl
ss
mov
sub
test
js
cmp
xchg
or
neg
mov
push
inc
imul
mov
pop
loopne
popf
xchg
push
outsl
sbb
fnstenv
out
xor
add
mov
cmpsl
mov
mov
dec
and
lret
sbb
or
cmp
imul
or
xchg
imul
popf
mov
jp
fidivl
das
dec
xor
cmp
adc
jne
test
mov
outsl
mov
call
xor
fisttps
cld
mov
xchg
lods
xor
int3
imull
jo
popf
ja
and
mov
adc
rclb
data16
dec
jne
inc
jae
pop
insb
jmp
stos
mov
fcom
arpl
xchg
xchg
cmovo
sbb
out
xchg
inc
xlat
imul
daa
cmc
cs
push
test
shrb
pop
inc
mov
mov
aas
inc
cmp
or
mov
ror
dec
sbb
test
subb
add
jne
pushf
lahf
mov
mov
dec
ror
call
sub
sub
into
mov
mov
in
cwtl
popa
and
lods
movb
leave
sar
push
xchg
pop
cli
into
mov
rolb
push
xchg
test
stos
dec
pop
and
push
cs
imul
push
std
add
stc
sti
fistpl
sbb
rorl
sub
negl
sub
push
imul
pop
div
sbb
mov
lea
push
scas
insl
test
sbb
stos
adc
add
xchg
push
pop
sbb
aas
push
lahf
mov
add
loopne
cmp
jo
into
inc
xchg
sub
jl
lds
jae
je
roll
aas
sbb
ljmp
out
iret
das
jne
cs
inc
xchg
aam
jl
fldt
shlb
inc
rcl
sarl
stos
mov
dec
lahf
xchg
and
push
dec
icebp
adc
cmp
jns
sub
xlat
dec
cwtl
pushf
mov
movsb
xchg
xchg
fwait
pop
dec
leave
sub
xchg
fmuls
xchg
pop
mov
jecxz
push
int3
add
push
jo
adc
pop
int
sub
aaa
xchg
aam
popa
js
add
psubq
inc
add
sarl
jle
adc
popf
sub
in
add
in
lret
mov
mov
push
std
xor
xor
mov
stc
mov
into
pop
mov
push
jp
sub
jge
cmpl
jo
test
jbe
cmp
pop
sbb
shrl
fwait
je
movsb
cmpl
test
push
add
popf
pop
lock
fdivrs
jnp
and
jo
popa
mov
in
repnz
dec
pop
cmp
jns
xor
pop
xchg
cmpsl
sbb
pop
jmp
in
jnp
or
jae
call
sub
xor
loop
aas
insb
roll
pop
mov
incb
je
mov
push
es
leave
xor
adc
adc
rcrb
sbb
mov
xchg
mov
pop
lret
in
stos
das
in
xchg
dec
xchg
arpl
clc
push
mov
mov
lds
adc
jnp
rorb
gs
xor
insb
dec
sub
cmp
pop
xorb
adc
and
hlt
push
aam
les
and
push
int
jmp
ret
mov
jp
xchg
xchg
mov
pusha
mov
push
push
fnstsw
inc
push
clc
and
sub
in
loopne
adc
lcall
lret
ret
and
rcll
loop
dec
mov
test
sti
nop
call
xor
mov
mov
das
push
lret
dec
popa
out
in
lods
jge
rcrb
loop
loop
mov
shlb
rclb
push
sub
push
xchg
adc
imul
xchg
daa
mov
into
cmpsl
enter
xchg
cmp
scas
pusha
mov
cmp
into
jmp
jae
out
fiaddl
lahf
sbb
jb
or
aad
sbb
insl
fwait
mov
jo
fs
aam
add
mov
in
or
push
xlat
gs
leave
xor
and
push
enter
jmp
ss
in
inc
les
mov
cmc
jb
cli
addl
pop
push
test
xor
ret
bound
test
outsl
adc
pop
xchg
push
fistl
adc
mov
stos
rolb
pop
out
sbb
and
loop
mov
ds
xchg
mov
lahf
lret
mov
in
or
pop
mov
and
sub
shr
adc
add
pusha
jb
mov
into
sbb
sub
daa
xor
scas
es
push
xor
addr16
jb
add
ret
in
and
cmpl
cmp
xor
enter
mov
pusha
and
jb
mov
scas
mov
icebp
cmpsb
sbb
xchg
xor
or
addl
cmp
pop
and
mov
jle
inc
stos
int
jge,pt
cmp
xchg
sub
scas
fwait
add
dec
dec
mov
imul
mulb
inc
int3
test
add
cmp
adc
push
shll
mov
daa
mov
mov
jb
pop
jmp
rorl
jmp
push
lock
sub
and
aam
pop
push
xorl
and
mov
test
rorb
sub
sti
jp
lock
mov
lea
inc
add
lds
lods
jo
nop
or
and
mov
inc
xchg
adc
cmp
out
fbld
in
scas
sbb
sub
outsb
cmp
adc
sbb
adcb
repz
arpl
xor
xchg
fs
out
stos
mov
dec
pusha
sub
dec
jno
push
cmp
sbb
sbb
pop
dec
sbb
mov
push
mov
out
addr16
and
xchg
cmpb
jns
mov
dec
or
lods
mov
push
mov
mov
or
jno
in
pop
and
stc
out
inc
aad
mov
jbe
jns
or
sarb
or
jmp
in
and
and
subb
bound
cltd
push
lock
mov
push
lret
repz
sarb
or
inc
inc
icebp
inc
xchg
add
cmp
out
jb
xor
push
or
cmp
je
jmp
mov
rcrb
mov
addl
nop
jmp
pusha
ficoms
iret
leave
into
int
das
pop
and
fstl
pop
push
and
cmp
stos
imul
inc
shlb
xchg
rclb
adc
inc
sbb
mov
adc
adc
push
sub
adc
cwtl
and
lret
int3
push
bound
rclb
cmp
ror
xchg
movsl
aad
adc
mov
mov
insb
cmp
fistps
roll
mov
popf
adc
cmpsl
add
cli
fbstp
jns
adc
inc
jl
insl
aaa
shr
lea
punpcklbw
sbb
into
jne
js
lret
adcl
inc
shl
fs
fbld
xchg
outsb
mov
mov
dec
fucom
cmp
xchg
loop
fldcw
pushf
outsl
cmc
out
pop
xchg
stos
nop
cwtl
sub
jge
and
cmp
les
clc
pop
je
roll
loopne
je
das
dec
nop
dec
mov
cmp
bound
dec
cmp
in
sub
push
movsl
rclb
xor
cmp
nop
cmp
xchg
test
in
and
push
in
cmpsl
mov
xchg
mov
push
mov
sbb
testb
mov
cmp
adc
ret
pop
mov
mov
inc
cmp
repnz
mov
shrl
push
lock
popf
push
jecxz
dec
test
jg
pop
add
cmp
or
jl
or
loope
pop
jbe
pop
xorb
pop
mov
shlb
in
or
xchg
pop
pop
push
jno
xor
xlat
imul
jp
pusha
add
jno
jb
and
xor
jns
sahf
pop
pushf
push
sub
outsl
xchg
mov
test
mov
sub
std
ds
data16
dec
jno
in
or
adc
and
and
jno
jno
and
add
jne
push
sbb
int3
and
icebp
bound
cmpsl
or
mov
and
xchg
inc
and
test
xorb
xchg
xlat
inc
lcall
sbbl
sub
push
or
stos
mov
add
and
push
out
jae
out
scas
out
dec
dec
sahf
pop
adc
in
cmpsb
mov
movsl
and
or
mov
out
jae
test
je
adc
ljmp
pop
inc
or
dec
push
add
int
out
add
in
add
loope
mov
imul
shl
shlb
pop
mov
repz
pushf
jnp
arpl
cmp
loope
jecxz
jb
sahf
in
arpl
xchg
adc
cmpb
or
rcll
mov
jg
fincstp
fdivrl
inc
jae
scas
cwtl
fisubrl
fmull
mov
dec
out
cmpsb
or
sub
leave
loopne
mov
orb
int
mov
daa
fdivr
ds
xchg
sub
xor
push
nopl
sahf
pop
test
and
arpl
sub
pop
jno
popf
outsl
inc
mov
shll
xchg
lods
push
jno
lea
or
bound
icebp
js
insb
push
rcrl
cmp
in
das
mov
xchg
in
popf
in
ds
scas
mov
push
cmp
push
push
fbld
scas
push
sub
xor
cmp
mov
push
and
in
test
loop
testl
mov
push
les
jp
jp
jb
addr16
je
mov
mov
cs
jae
hlt
push
sub
mov
add
lods
xor
rolb
leave
inc
and
daa
imul
out
cld
pusha
push
xchg
xchg
pop
push
push
lcall
and
xchg
in
scas
leave
push
sbb
ds
mov
sbb
insl
addr16
repnz
jne
mov
pop
xor
cmc
jp
in
sbb
mov
iret
cmp
mov
ret
xchg
pop
push
call
shll
fdivrs
xchg
testb
sti
popf
jge
mov
jmp
jo
jg
icebp
test
sub
fs
and
and
sub
and
negb
adc
push
dec
jmp
in
mov
nop
sub
push
cmp
mov
xor
incl
sub
mov
dec
testl
sbb
inc
jl
and
lods
sub
imul
push
or
aaa
xchg
fists
xchg
mov
test
lahf
or
xor
xor
jbe
mov
test
push
scas
into
pop
lahf
mov
mov
sub
pop
scas
adcb
fimull
repz
loope
repz
add
hlt
movl
dec
andb
ss
clc
cmp
mov
jg
insb
xorb
or
insb
or
jo
inc
enter
inc
icebp
lods
pop
cld
lock
mov
stc
dec
fcmovnu
jmp
cmp
cli
cmp
mov
push
and
stos
fs
or
cmp
into
out
test
mov
pusha
mov
push
dec
gs
cld
inc
inc
aad
dec
sysret
sub
aaa
jno
lahf
and
lcall
add
fwait
jb
or
and
movsl
fcomp
cld
and
pop
pop
sub
mov
stos
dec
pushf
mov
jle
dec
jmp
int3
push
lods
fmuls
insb
xchg
pop
add
xchg
icebp
dec
movsb
mov
sarb
pop
iret
pop
ret
sbb
sub
sub
sub
cmpsb
inc
xchg
lds
fistps
and
or
insb
mov
nop
mov
out
add
call
mov
iret
outsl
dec
les
sub
les
sub
push
loopne
icebp
xchg
loope
sbb
sub
xchg
push
cmpsl
gs
daa
insl
shl
fisubrl
rcrl
repnz
xchg
fwait
jl
push
or
add
pop
mov
fisttpl
sahf
in
mov
aad
sub
adc
ficoms
bound
fs
mov
out
sub
jl
aam
xlat
sbb
pop
rolb
outsl
mov
clc
mov
jno
dec
sub
adc
jnp
test
sub
jbe
mov
xlat
or
ud2
imul
ss
fildl
ja
mov
or
in
cwtl
fiaddl
paddq
add
outsb
pop
ss
mov
dec
arpl
adc
add
xchg
jecxz
jp
dec
imul
push
adc
push
jb
lret
js
mov
arpl
mov
adc
cmpsl
or
push
ja
aam
fsubrs
addr16
adc
xchg
test
sub
jns
jae
mov
mov
push
imul
test
loope
mov
je
bound
movsb
movsl
sbb
das
jb
pusha
push
or
nop
in
jl
outsl
daa
mov
loope
dec
loop
fs
andb
imul
pop
mov
repz
push
js
sbb
imul
out
sub
lahf
test
and
jmp
sbb
pop
cmp
jno
test
push
fcoml
pop
lods
popa
outsl
cmp
push
sbb
jns
xlat
loopne
scas
inc
sub
cld
cmp
and
insb
int3
push
loopne
xor
mov
out
mov
xchg
test
cmpsb
mov
aad
jns
mov
fstps
mov
xor
mov
and
add
out
add
sbb
jae
imul
inc
or
outsl
and
adc
orl
scas
iret
sbb
cmp
xchg
add
jb
inc
sub
cmp
bound
rcr
cmp
lods
aad
sahf
xor
insb
cli
lret
fdivl
xor
cmp
inc
movsb
pushf
mov
gs
movsb
ds
aad
mov
or
scas
adc
mov
and
in
adc
les
addr16
dec
add
repnz
je
sub
in
sti
pop
sub
and
icebp
test
lods
xchg
js
sti
sub
adc
sub
popf
dec
add
loope
hlt
pop
sbb
xchg
cli
mov
pop
pop
and
mov
stos
stc
lds
mov
adc
jmp
xchg
jno
cmp
add
das
push
push
jns
jne
xor
outsl
mov
pop
je
data16
xchg
movsb
add
mov
scas
mov
daa
dec
lods
cmp
inc
das
popa
cwtl
ds
push
mov
ja
mov
push
mov
lea
or
pop
inc
mov
mov
inc
leave
cmp
das
jnp
movsl
add
jmp
push
add
fwait
mov
sub
aad
jns
iret
xchg
cmp
jmp
adc
ja
add
jb
negb
inc
adc
dec
push
imul
es
sbb
fsub
out
test
or
dec
into
gs
push
mov
mov
xor
pop
jge
fwait
lods
add
loope
mov
fmuls
dec
fldl
shrb
pop
push
testl
sbb
xor
mov
add
dec
fstp
or
mov
js
adc
jnp
in
mov
inc
pusha
jmp
out
xor
icebp
push
mov
fcom
outsl
and
xchg
xor
or
test
scas
cwtl
dec
test
in
mov
ja
lret
ljmp
and
xlat
sbb
das
dec
shlb
pop
outsl
jb
add
inc
repz
push
mov
call
rep
cld
scas
inc
arpl
and
cmp
sub
pop
mov
push
sbb
lcall
push
shlb
lods
push
mov
cmp
pop
jp
add
or
aaa
in
xchg
sahf
xor
mov
ljmp
rorb
add
pusha
outsb
mov
mov
ja
inc
inc
vsqrtpd
mov
lods
sbb
sar
addr16
mov
mov
into
aam
subl
pop
push
add
cmp
inc
push
arpl
or
fdivr
xchg
and
jecxz
pushf
adc
sti
adc
sbb
hlt
mov
arpl
or
jae
insb
sbb
add
xor
xchg
cmc
push
lcall
subb
test
cmp
rorl
mov
mov
push
sub
jne
and
jb
fidivrs
sub
andb
pusha
std
scas
into
nop
lret
test
inc
cmc
aas
mov
jl
or
pop
and
xchg
shll
push
xchg
inc
mov
aad
mov
orl
out
mov
adc
imul
lahf
pop
sbb
jnp
sub
es
loopne
daa
out
add
adc
mov
jne
sarb
js
jns
xor
aas
mov
jne
lea
dec
notl
dec
sub
mov
inc
ljmp
push
int
ja
mov
or
and
addl
push
mov
bt
sahf
jae
cmc
cld
js
adc
inc
add
mov
push
inc
sbb
lods
adc
les
dec
xchg
je
daa
xchg
mov
into
stos
popa
and
cmp
push
mov
mov
insl
in
dec
ss
ret
push
dec
or
or
divb
iret
cmp
stos
push
stos
dec
pop
outsb
mov
loopne
fistpl
xchg
push
ret
cmpsb
add
out
stos
fwait
xchg
xor
ret
lahf
pop
out
mov
cld
jmp
xor
fcmovb
test
jbe
nop
aad
inc
insb
stc
cmc
pop
adc
inc
add
imul
out
ljmp
pop
xor
es
sub
test
dec
adc
insl
fsubr
jno
es
fldl
push
push
inc
orb
mov
push
aad
cmp
nop
fidivrl
movsb
cmc
in
mov
scas
mov
jnp
ss
clc
fs
cmp
or
pop
pusha
push
xchg
ret
push
push
ret
sahf
pop
ljmp
dec
mov
pusha
jecxz,pt
andl
sahf
lret
mov
imul
inc
mov
inc
sbb
test
dec
and
cmp
xchg
inc
pop
and
aaa
cwtl
mov
cltd
xor
add
mov
xor
jl
aad
mov
and
mov
lods
mov
add
jnp
xlat
cmpsb
mov
mov
or
inc
notl
mov
inc
mov
and
add
ficoms
ja
popa
mov
pop
and
ljmp
insl
mov
jecxz
sub
xchg
dec
aas
push
or
testl
push
inc
xor
mov
idiv
xchg
sub
xchg
cwtl
mov
fdiv
sub
mov
cmp
add
fistl
test
imul
push
cmp
or
out
inc
jno
push
adc
and
cmp
arpl
add
mov
out
lds
jbe
jno
out
xchg
popf
movsb
inc
gs
xchg
dec
dec
ja
xchg
pop
inc
mov
xchg
inc
or
sbb
in
idivb
jbe
dec
les
sbb
or
xor
push
daa
xchg
ret
xchg
dec
mov
test
push
mov
inc
aam
jecxz
mov
push
or
or
jge
mov
mov
jle
sarb
aaa
das
test
pop
dec
cmp
aaa
pop
xchg
aas
mov
xchg
mov
adc
and
mov
inc
inc
loop
mov
lret
mov
dec
ljmp
or
loop
stos
add
mov
xlat
jecxz
enter
loopne
xchg
clc
mov
nop
mov
xchg
xor
out
fstpl
mov
insl
pop
sbb
pusha
insb
outsb
in
cltd
xchg
mov
jo
sarb
xor
loope
repz
ss
xchg
loope
push
stos
and
xor
or
dec
into
andl
xchg
call
cmp
es
int3
arpl
inc
jae
jl
pop
or
pop
inc
mov
loopne
ljmp
mov
mov
jp
ret
add
arpl
lret
pusha
icebp
mov
out
dec
add
insb
inc
or
mov
test
shll
stos
je
fwait
inc
outsl
add
push
stc
ljmp
aas
sbb
and
and
push
pusha
js
mov
add
push
je
jb
imulb
push
ljmp
fwait
inc
ret
popf
adc
rcrl
cli
adc
js
adc
sbb
fcompl
movsl
ret
fs
jo
and
xor
or
rol
pop
xchg
pop
and
test
mov
jo
mov
xchg
enter
mov
ret
jmp
inc
loope
fldenv
ljmp
test
push
or
js
pop
arpl
and
push
push
dec
jne
sahf
mov
ss
lcall
jns
sbb
and
lods
mov
jne
pop
in
roll
add
fisttpl
loope
lret
out
push
adc
push
into
out
mov
mov
adc
cmpsb
arpl
xor
gs
fsubrs
pop
xchg
sbbb
push
lcall
scas
pop
call
scas
mov
jecxz
mov
mov
xor
ret
cmp
cmc
subl
sarl
adc
lret
fcomip
mov
dec
lcall
out
nop
loopne
int
cmp
push
mov
cli
pop
in
ss
jl
add
push
push
sbb
pop
inc
mov
aas
shl
rorl
cmpsl
inc
add
adc
add
dec
into
add
mov
mov
dec
mov
sub
test
xor
in
xchg
enter
gs
mov
mov
cltd
outsb
sbb
fsubs
in
bound
out
mov
or
mov
sbb
push
jno
lods
mov
push
movsb
out
push
xchg
leave
jo
fcoms
iret
mov
mov
mov
xor
sti
sti
imul
insb
xor
push
lock
sbb
adc
push
testb
xlat
push
mov
loopne
es
fsubrl
icebp
loope
lock
fdivl
bound
fdivs
pop
xlat
test
std
jmp
out
mov
iret
push
pop
pusha
sbb
hlt
cld
loop
shll
xchg
lret
lahf
mov
out
jmp
mov
in
bound
mov
rcll
in
cmpb
andb
mov
hlt
scas
rcr
jno
xor
lret
pop
pop
fmuls
add
add
inc
sahf
movntq
jne
test
push
xor
fildll
in
dec
mov
sbb
and
bswap
pop
test
sahf
loop
jmp
xchg
jne
jl
push
xchg
mov
sbb
fistpl
es
in
in
sub
jo
jnp
in
inc
add
sahf
mov
addb
cmp
inc
jb
lock
add
jmp
push
insb
mov
cli
xor
pop
push
or
dec
and
mov
int
adc
test
pop
push
arpl
cmc
and
xor
sub
jne
outsb
jmp
cwtl
leave
mov
fstpl
test
insl
inc
mov
loope
xor
lcall
mov
fptan
jns
xor
daa
xor
xchg
test
inc
lcall
lods
dec
or
xchg
xchg
mov
mov
scas
shrl
das
stos
sti
mov
adc
rolb
mov
arpl
cs
cld
push
and
lret
loopne
imul
mov
mov
inc
mov
jnp
sbb
mov
cwtl
jmp
dec
adc
int3
pop
mov
pop
imul
fisubs
jmp
mov
dec
ljmp
pushf
jno
sahf
pop
mov
mov
mov
add
call
outsb
push
lahf
rorb
sbb
xor
xchg
or
insl
mov
push
sarb
push
inc
out
je
cli
fnstsw
jp
iret
pop
insb
shr
stos
inc
xchg
or
push
call
aad
or
int3
jmp
dec
popf
dec
gs
cmc
cmpsl
push
lods
dec
and
sub
outsl
pushf
adc
test
jnp
or
xor
pushf
mov
inc
sbb
mov
jl
add
sub
or
scas
or
sbb
mov
xchg
pushl
jae
jg
or
movsb
adc
dec
push
and
sahf
repz
mov
pop
inc
sbb
in
push
mov
sbb
arpl
outsb
pop
mov
test
mov
cltd
sbb
gs
daa
jmp
test
jp
stos
jl
xor
push
pop
fnsave
jl
or
xchg
lods
mov
mov
jle
jo
fdivrl
jge
repz
jno
mov
movsl
xchg
mov
xor
cmp
fwait
and
pop
dec
dec
ja
cmc
or
push
cmpsb
jg
sbb
xor
mov
mov
enter
ficoml
scas
negl
cmp
lea
mov
cmpsl
add
sub
jle
out
out
add
int
inc
dec
push
arpl
in
jl
lcall
sbb
lea
lods
cli
iret
cltd
fwait
dec
ljmp
lsl
inc
push
mov
or
xchg
add
lds
cwtl
cmp
fidivs
aam
jo
pop
sbb
dec
sti
sbb
sbb
pop
fwait
cmc
rclb
jne
repz
jns
add
push
les
jmp
pop
lea
cmpsb
push
lret
push
je
ss
in
cli
and
pop
pop
inc
cltd
push
aam
pop
mov
sbb
sahf
cs
sbb
mov
xchg
add
push
and
mov
dec
out
cmp
mov
shrd
xor
rcll
xor
xor
dec
mov
cmp
mov
and
jns
cmc
push
mov
xchg
jge
es
repnz
cmp
xchg
hlt
jmp
in
mov
sarl
shrl
pop
mov
fdivrl
clc
mov
fnsave
cmp
mov
imul
mov
jl
popa
adc
mov
jmp
into
push
jb
movsb
jmp
jge
fs
xchg
cmpsb
dec
insb
lods
test
adc
lahf
arpl
enter
mov
mov
jmp
inc
xchg
dec
pop
sub
push
addr16
add
jmp
xchg
test
pop
dec
or
inc
jo,pn
mov
insb
enter
sbb
daa
jb
lods
scas
pushf
daa
inc
dec
adc
sub
gs
mov
filds
jle
lods
xor
xor
xchg
stos
jecxz
push
mov
in
mov
lahf
jp
inc
stos
cmp
mov
das
inc
mov
in
pop
xor
push
mov
adc
mov
int
imul
int
ret
movsl
arpl
lds
repz
out
add
mov
loopne
scas
push
mov
push
pop
les
ret
daa
dec
cwtl
test
and
sti
pop
jae
sbb
inc
jge
mov
out
mov
cltd
dec
fbld
out
gs
popa
push
loope
pop
aad
push
dec
stc
xchg
in
leave
mov
adc
mov
ja
mov
xor
push
push
testb
inc
or
adc
decb
stos
xor
sbb
out
fdivrl
xchg
sub
push
scas
out
sbb
sbb
sbb
inc
stos
test
and
jge
jmp
in
inc
lock
sbb
sahf
cmp
push
lock
xor
sbb
adc
lahf
mov
cs
xchg
dec
sbb
cmp
mov
add
pop
lea
sbb
fdivrl
push
cmp
iret
mov
cbtw
cmc
adc
js
or
jmp
stos
xchg
jg
mov
stc
sbb
insb
jecxz
mov
and
xor
nop
dec
stos
aad
popa
cmpb
add
mov
push
mov
sub
ret
mov
cli
ficompl
insb
adc
jle
jp
push
je
jge
mov
iret
in
jbe
jge
pop
out
mov
add
xor
stc
mov
pop
pop
mov
sub
and
jo
push
lahf
shll
mov
jns
add
mov
nop
mov
push
sub
adc
cld
fucomip
xchg
push
push
push
push
mov
jp
rcrb
out
cmp
xorb
sarl
ds
les
and
ljmp
popa
adc
pop
jo
out
aad
outsl
orb
test
jb
out
push
cli
jbe
dec
push
outsl
rclb
cmpsl
mov
fdivrp
fdivrs
roll
fistpl
in
mov
pop
test
cli
mov
push
xchg
cmpsl
add
int3
lcall
cmc
mov
call
es
out
cmc
daa
mov
rorl
jle
out
fadd
stc
dec
stos
inc
push
mov
fwait
and
mov
aad
fiaddl
dec
imull
mov
or
xor
or
push
mov
pop
adc
xchg
xor
popa
dec
jno
mov
out
cmp
icebp
addb
js
enter
sbb
sbb
cmp
adc
pop
scas
or
dec
and
cwtl
sub
fucomp
dec
add
sahf
xor
adc
add
jecxz
cmpsl
ficompl
sub
lock
std
and
or
inc
push
ss
adcl
ffree
mov
adc
jle
popf
mov
jmp
push
add
fxch
dec
hlt
fiadds
in
xor
and
xchg
jae
push
sbb
inc
cmpsb
xchg
scas
ljmp
hlt
stos
inc
xor
mov
lock
ljmp
jle
ret
xchg
or
mov
fimuls
cwtl
add
in
adc
xchg
outsb
addb
into
push
fdivs
out
imul
pop
lock
addr16
les
enter
add
sub
pop
shl
sbbl
mov
inc
shll
stc
hlt
adc
adc
and
sub
cmp
mov
shrl
outsl
sbb
cmc
pop
push
push
or
repnz
rcrl
and
loop
test
adc
add
les
or
repz
js
sbb
loop
mov
push
mov
rclb
rclb
mov
pop
inc
mov
mov
cmc
pusha
push
push
mov
cmpsl
push
js
xchg
aad
mov
pop
xor
aad
mov
sbb
or
je
repz
cltd
pusha
out
or
sti
cmpsl
xchg
push
lea
pop
pop
and
sub
rcr
mov
jno
fsubrs
adc
cmp
pop
dec
aaa
pop
adc
cmc
push
test
add
ljmp
jno
arpl
or
cmpsl
out
sahf
imul
push
mov
cmpsb
jle
adc
mov
sbb
mov
inc
outsl
cmp
or
jge
adc
pop
mov
das
sub
orl
xor
push
flds
pop
inc
mov
loopne
cmc
lret
or
push
xchg
pushf
cltd
push
fstpt
jecxz
jno
inc
push
les
push
test
and
add
jne
xchg
push
stos
xchg
stos
xor
sub
imul
inc
push
xchg
aad
cwtl
xchg
push
push
addr16
int3
outsl
leave
repnz
mov
mov
js
sub
or
dec
inc
lock
and
std
fsts
dec
cmp
sbb
xor
jl
aaa
or
out
clc
push
lds
or
cltd
outsl
jl
repz
and
pop
mov
mov
imul
bound
mov
or
fcoml
in
mov
into
inc
jbe
js
or
xchg
je
pop
and
sbb
mov
cmpsl
sub
xchg
aas
aad
pusha
repnz
push
or
inc
jo
adc
aaa
out
outsl
push
or
xchg
popa
aam
mov
pop
pop
dec
orb
arpl
pop
test
and
push
scas
ljmp
loope
movsb
outsl
pop
push
das
jp
shrb
ja
mov
sahf
cltd
std
and
or
mov
pop
int3
lret
cmp
push
adc
xorl
sbb
scas
pop
insb
inc
cmp
or
fcmovbe
roll
test
mov
pop
inc
sub
cmp
adcb
mov
insl
into
cmpsl
or
shlb
dec
push
iret
inc
xchg
mov
mov
sub
mov
jne
ja
enter
pushf
or
into
mov
shrl
test
js
jecxz
push
sbb
dec
lcall
inc
outsb
clc
gs
xchg
fwait
cltd
pusha
pop
lea
scas
and
or
jecxz
jnp
les
jo
inc
fcomp
add
lcall
fprem
outsb
test
fmull
or
subl
cmp
or
jo
stos
repz
cltd
icebp
jae
shrl
mov
xchg
out
testb
test
iret
add
inc
roll
adc
cmp
ljmp
push
call
out
in
mull
dec
mov
shlb
cmp
ficoml
jl
xlat
stos
jge
jb
mov
cmc
sbbb
fdivl
popf
js
std
dec
inc
sti
adc
imul
or
mov
sub
notb
test
push
stos
rcll
test
xchg
cmp
mov
jns
cmpsl
lds
push
xlat
mov
xchg
sahf
mov
int3
and
push
add
dec
dec
idivb
idivb
mov
xor
jg
xchg
sahf
pop
push
xchg
cmpsl
fldt
sarb
sti
xorl
dec
and
es
cmp
jl
pop
dec
std
fnstenv
mov
outsb
dec
stos
add
mov
idivl
sbb
adc
sub
xchg
mov
rorl
sbb
fcompl
push
fs
pop
es
dec
ret
jecxz
xchg
jecxz
mov
gs
fsubrs
flds
ret
fwait
cmp
mov
mov
pushf
xlat
push
dec
mov
mov
pop
data16
jl
sbb
xchg
lahf
and
xor
jo
scas
cli
daa
imul
in
pop
pop
pop
or
out
fildll
cwtl
jo
movsb
sbb
jge
mov
pop
add
ss
outsb
ds
insl
xor
ds
loop
xchg
lock
cli
bound
dec
mov
mov
add
push
xchg
push
pop
test
inc
push
lock
sbb
enter
pop
cmp
mov
xlat
and
iret
fisttps
ja
loope
mov
pop
inc
ds
jle
icebp
jns
pushf
push
mov
into
add
pop
or
lahf
bound
adc
lea
inc
in
roll
stc
insl
adc
pushf
xor
or
dec
add
sti
mov
add
loop
adc
jp
mov
xchg
sbb
imul
mov
dec
sub
ljmp
addl
sub
in
loopne
xchg
fistpl
call
fsubr
and
sar
pushf
pop
dec
stos
fsubl
cli
pop
dec
push
ljmp
dec
add
push
loope
int
and
mov
leave
cmp
sbb
aas
mov
xchg
xchg
push
and
sub
sub
cmp
dec
daa
pop
pop
lcall
adc
lock
jecxz
add
or
test
jle
sub
sbb
cmpsl
inc
pop
add
loopne
shlb
cmp
jle
pop
fistpll
add
adc
aam
xchg
repz
das
adc
lahf
loop
dec
jp
sti
jge
push
xchg
ss
dec
sub
dec
in
aaa
cmp
lds
mov
daa
push
push
fwait
mov
cmpsb
sti
pop
jae
mov
sbb
out
lods
fs
fildll
fwait
push
sub
pmuludq
andb
push
in
das
cmp
adc
fs
and
orb
pop
je
out
negb
sarb
divb
dec
pop
mov
add
sbb
insl
into
mov
lds
xor
sub
repnz
mov
cmp
insl
xchg
lods
or
or
bound
add
stc
sub
and
outsl
push
leave
or
test
movsb
push
test
sbb
movsl
pop
insb
cmp
ret
mov
xor
imul
mov
ja
pop
call
jecxz
ss
pop
movsl
cmc
les
push
lds
push
push
sbbl
mov
lahf
jno
repz
das
sbb
popa
mov
mov
jp
mov
mov
pop
mov
xlat
push
jecxz
jns
popf
lock
loopne
fdivrs
int
cmc
scas
rolb
insl
dec
add
push
fidivl
xchg
iret
or
fidivrl
cmc
cmp
mov
and
pusha
jmp
mov
test
xor
cld
jae
outsb
dec
aam
push
out
fildl
paddusw
xchg
pop
out
das
push
in
les
jge
sbb
jno
xchg
inc
fbstp
jno
testl
out
lcall
lret
sbb
push
inc
dec
or
dec
in
leave
rorl
shrb
push
jle
rcl
movsb
jbe
cmp
mov
mov
adc
repnz
popf
in
or
inc
popa
sub
lock
push
frstor
in
mov
mov
push
dec
mov
fwait
cmpb
movsb
mov
repz
fdivs
fstl
call
out
pop
mov
adc
mov
int
out
rclb
inc
xchg
jns
aad
xchg
inc
jmp
pushf
cmc
outsb
cmpsb
test
inc
repnz
push
cmp
mov
test
mov
cmp
pop
or
add
mov
push
out
das
std
adc
shlb
cmp
jne
push
ljmp
enter
push
add
cmpsl
add
push
rolb
fmul
aaa
in
and
loop
gs
push
cmpsb
pop
push
sbb
add
cmp
out
loope
fcoms
faddp
test
cs
stc
lcall
push
call
andb
sti
and
in
cmc
imulb
sub
cmpsl
stos
or
dec
jecxz
inc
pop
dec
mov
lahf
out
or
dec
and
inc
adc
rep
push
or
test
test
sbb
jmp
mov
repnz
add
add
pop
cwtl
addr16
xlat
out
addr16
cmp
or
mov
inc
mov
adc
int3
xchg
imul
rclb
jecxz
dec
add
xchg
jmp
out
fsubr
lahf
cmp
push
aas
cmpsl
mov
fistpll
push
add
jge
andb
lahf
dec
test
in
xchg
enter
mov
cmp
xchg
imul
fnsave
mov
jmp
roll
lahf
shl
addl
push
jo
xlat
push
fstpt
aas
lret
cmp
sbb
mov
xchg
out
ffreep
push
mov
and
cmpsb
add
ret
mov
arpl
push
xchg
dec
out
xchg
mov
cmc
popf
cwtl
add
cmpsl
push
imul
pusha
pop
pusha
or
mov
jge
mov
shl
xor
cmc
pop
in
mov
movsb
sbb
xchg
outsl
cvtpi2ps
mov
lock
sti
or
pop
push
mov
daa
repnz
pinsrw
imul
xor
insb
dec
mov
mov
js
pop
cmp
stc
and
pop
pop
mov
ja
orl
lea
mov
mov
dec
lds
xor
push
inc
cmp
pop
sub
out
mov
lods
cmpsl
mov
mov
push
nop
enter
xchg
fsubl
nop
or
mov
xor
jo
repnz
push
movsb
shrb
mov
les
sub
xor
xor
in
repz
stos
cmpsl
jae
pusha
out
mov
shrb
push
std
sub
repnz
inc
cmpl
repnz
imul
aam
pop
xchg
adc
adc
cmp
mov
je
push
sub
test
rcl
pop
add
add
loope
sbbb
jg
jge
and
fld
mov
cld
adc
xor
les
sbb
lahf
push
es
push
movsb
int3
stos
mov
ljmp
lds
and
sub
xorb
int
pusha
push
jmp
or
sbb
mov
test
out
add
fwait
addr16
outsl
out
mov
arpl
push
addl
outsb
jb
insl
cli
adc
popa
sbb
out
jl
sub
les
adc
dec
pop
add
jns
adc
push
mov
add
jmp
xor
insb
rcll
pop
mov
fcoms
shlb
cmpsb
sub
pop
out
iret
fs
sahf
dec
jae
sti
fadd
mov
sbb
int
or
leave
sahf
cli
test
jne
and
sar
pop
push
shrb
mov
adc
push
cmp
xchg
popa
fstpt
pushf
ss
in
les
std
dec
outsl
dec
sbb
jg
leave
sbb
sbb
sub
rcrb
push
add
outsb
int
mov
lret
push
xchg
imul
mov
lods
ds
xlat
movl
ror
xchg
push
out
ja
jno
loopne
ss
mov
dec
loope
jbe
lret
inc
es
fmul
pop
add
int
and
iret
push
icebp
scas
inc
jno
jbe
lcall
add
jne
and
sub
mov
sub
pop
dec
imul
out
shll
fwait
movsl
jo
sub
xor
push
ljmp
mov
mov
enter
lods
adc
dec
adc
fwait
sbb
je
ficomps
nop
testl
fsts
in
dec
push
rolb
mov
xor
pop
mov
shll
test
aaa
cmc
mov
mov
fcmovnu
test
movsb
add
aam
sub
xor
mov
addr16
jb
sbb
or
ss
test
jle
mov
xor
movsl
movsb
cmp
xchg
arpl
loopne
cmp
push
rcll
shl
inc
loope
andb
mov
int3
insl
and
jg
mov
jne
std
pop
and
adc
pop
outsb
push
lods
jp
mov
sti
jnp
mov
aad
or
aad
fimull
aaa
push
xchg
mov
stc
lods
mov
ds
pop
and
lahf
dec
notb
jno
sub
shll
xor
cmp
pushf
jmp
and
mov
push
dec
xor
in
orb
arpl
ljmp
or
mov
in
test
pop
push
mov
shrl
sbb
pop
addr16
or
xchg
iret
mov
mov
xor
xor
pop
dec
shll
sbb
dec
sub
sbb
stos
iret
lret
mull
shlb
and
inc
pop
por
in
xchg
subl
cltd
mov
pop
outsl
pop
sbb
adc
xor
and
or
inc
and
jns
out
jo
push
insb
sarb
pop
and
jnp
fdivrs
xchg
mov
dec
jmp
outsb
int3
push
out
outsb
ficomps
int3
push
iret
outsl
mov
scas
fisubrs
mov
sbb
add
xor
daa
jbe
mov
das
loope
xor
lds
xchg
jbe
pop
enter
and
dec
jl
ret
sub
nop
sti
dec
in
fwait
loopne
fcoms
add
dec
xchg
js,pt
addr16
leave
jle
idivl
leave
sahf
xchg
aad
enter
inc
jnp
popf
xor
pop
xchg
cmc
push
nop
shlb
leave
add
and
dec
add
pop
sub
sbb
jno
andb
into
mov
sbb
pop
gs
xor
adc
push
mov
ret
test
dec
or
pusha
add
sar
lds
ljmp
mov
jp
xchg
adc
into
aas
xor
xchg
mov
repnz
cmp
jl
fists
cmp
movsl
ljmp
add
daa
jg
aaa
fdiv
xor
int
clc
fldl
add
dec
je,pn
and
ja
adc
jle
test
es
outsl
out
fsubr
xor
lret
test
repz
push
mov
sub
insb
xchg
cmpsb
jl
xchg
rorb
xor
jae
push
sub
add
pop
shll
sbb
jle
add
jg
pop
inc
movsb
test
sub
xor
popf
das
or
mov
aam
rclw
add
mov
lret
jmp
in
or
js
sub
loopne
call
fimuls
xchg
sbb
fxch
syscall
popf
or
inc
jecxz
inc
mov
add
xor
adc
xor
jno
pop
stos
out
das
jb
inc
adc
push
jnp
shll
aas
mov
mov
sub
movsl
xchg
or
mov
sbb
aaa
adc
xor
insl
insl
mov
mov
jle
inc
hlt
add
inc
fmuls
je
les
mov
rcll
in
sbb
ja
subb
or
jo
popf
shlb
sarb
fisubrs
dec
out
sbb
clc
daa
lods
jbe
outsb
jmp
mov
add
add
popf
and
dec
outsl
sbb
or
dec
into
mov
int
inc
or
sub
jecxz
loope
jecxz
jo
repz
sbb
inc
stc
loopne
cmc
call
dec
fldcw
inc
adc
xchg
inc
cld
add
add
adcl
popa
and
mov
push
xchg
out
push
sti
ljmp
pop
cmpsb
mov
jecxz
daa
jg
scas
jl
pop
jnp
cmp
fst
jbe
dec
aas
negb
addr16
xorb
mov
insl
dec
mov
push
cmp
mov
pusha
push
sti
fisttpll
arpl
rol
hlt
hlt
mov
mov
cmpsb
ret
sub
mov
rorl
lds
push
jb
cmp
es
enter
lds
shll
inc
inc
inc
add
xor
cmpsb
das
pop
inc
inc
inc
loope
dec
cld
lahf
pop
ret
aad
pop
bndldx
in
lret
sub
sbbb
fbld
es
pop
inc
enter
push
push
or
mov
fmuls
test
and
test
mov
and
ret
loope
jae
fisubl
mov
loop
dec
adc
enter
ljmp
dec
pusha
out
push
and
pop
mov
and
mov
xor
cmp
mov
pop
and
push
loope
loope
adc
ds
or
jae
outsb
mov
hlt
ja
sbb
add
out
cltd
sbb
dec
pop
mov
loope
mov
dec
pop
ja
movsb
lods
cmp
cmp
dec
mov
mov
aaa
push
outsl
and
cwtl
pop
lret
sahf
int3
ds
fidivrl
sub
mov
pusha
push
ret
pushf
out
ja
dec
cld
vmwrite
push
je
pop
adc
xor
cmp
or
mov
jo
mov
and
push
cmp
divb
jge
outsl
xor
pop
pusha
jp
cmp
stos
mov
fsubs
fildll
data16
fldt
fisttpl
mov
test
push
jae
call
inc
push
movsl
ret
xor
hlt
jg
cli
xchg
addl
sbb
clc
pop
mov
add
enter
ffreep
sbb
xlat
cmpsl
ret
frstor
stos
inc
sbb
cwtl
mov
fidivrs
jmp
push
and
cmp
pop
lahf
subl
cmp
push
xchg
push
sub
push
outsw
maskmovq
mull
fsubs
out
pop
pop
xchg
cmp
dec
movsl
lahf
push
les
jbe
adc
dec
adc
fucomip
adc
int
fidivrs
push
xor
adc
pop
stos
lret
movsb
xlat
sti
ficomps
out
inc
aas
pop
sub
ja
mov
out
mov
xor
call
ret
jae
pop
jb
fmulp
mov
into
sbb
pop
mov
ja
dec
mov
push
inc
dec
jle
push
loopne
xor
dec
jmp
nop
push
jmp
and
xor
jne
cwtl
pop
aad
lock
mov
call
lret
ret
scas
fdivrs
incb
stos
lret
les
pop
sbb
adc
lahf
fmul
xchg
in
add
push
cmp
sub
cmp
loopne
out
jle,pn
xor
add
sub
aad
sarb
mov
into
mov
aam
orb
push
in
xchg
loopne
jae
push
leave
push
add
ficomps
sub
je
mov
test
push
movsb
jb
pushf
sbbb
leave
inc
jne
xor
adc
cmp
stc
and
lods
sub
or
clc
pop
cmp
inc
into
scas
cmp
mov
mov
lret
push
lds
outsb
sbb
std
pop
js
stos
mov
test
xor
repnz
testl
cmpsb
mov
push
ret
insb
jnp
in
sub
pop
inc
inc
pop
pop
and
cltd
push
dec
jo
sub
dec
dec
pop
jl
jnp
rclb
mov
push
cmp
cmpsb
shll
dec
cmpsl
divl
mov
rcrb
adc
pusha
lcall
push
cmc
dec
sbb
clc
cmp
in
lods
mov
sub
push
nop
jnp
cmpsl
ljmp
sub
push
mov
push
push
popa
pushf
sbb
xchg
push
ljmp
lods
xchg
shrb
dec
pop
adc
mov
test
xlat
adc
in
mov
jns
lret
sbb
aas
xor
inc
ds
int
inc
test
fnstenv
movsb
sahf
pop
pop
cmpsb
xchg
pop
add
fwait
adc
mov
sbb
fnstsw
push
fisttps
pop
call
inc
notl
add
sub
sub
xchg
sub
int3
and
mov
add
rcr
adc
pop
and
jnp
dec
or
mov
push
gs
out
arpl
mov
imul
in
adc
mov
or
and
inc
sahf
lea
jmp
lret
mov
in
and
jns
or
pop
and
cmp
pop
jbe
xor
test
mov
and
mov
add
add
mov
rclb
imul
mov
cmp
mov
push
inc
and
mov
test
push
pop
cwtl
dec
mov
jge
push
inc
sti
sub
nop
fsubs
mov
ret
or
mov
pop
sbb
mov
pop
pop
loope
call
jns
arpl
adc
sbbl
roll
mov
lock
in
repz
xor
jne
sbb
aad
push
fucomp
dec
mov
in
push
mov
mov
out
test
bound
test
adc
clc
dec
fs
into
iret
jmp
pop
stos
mov
and
push
ret
xchg
pop
cld
pop
push
lret
into
movsl
dec
out
sbb
sbb
jb
push
and
push
hlt
jmp
ds
pop
pop
dec
clc
andl
stos
cmp
inc
mov
fisttpl
out
das
fmull
andb
orl
lcall
adc
dec
in
js
push
je
out
xchg
lahf
loopne
lds
sub
daa
cmp
out
call
mov
push
add
aad
aaa
loope
cli
adc
es
push
addr16
ret
push
lods
mov
aaa
bound
cmp
aaa
mov
dec
ljmp
call
pop
xchg
jae
ret
rorl
cmpsl
iret
push
pop
out
mov
call
loopne
xchg
push
mov
push
adc
jae
shr
add
dec
dec
gs
int
sbb
sahf
sbb
cmp
ljmp
hlt
int
pop
pop
mov
out
cmp
mov
or
fistl
pop
jp
rclb
insb
pushf
cmc
inc
ja
xor
adc
and
push
nop
dec
push
test
dec
into
imul
adc
cmp
sub
jp
jle
lods
stos
or
stos
and
sti
lods
scas
cmp
xchg
paddq
pushf
cmp
and
cmc
pop
ret
or
sbb
iret
cwtl
fdivrs
jp
cmp
sub
mov
cwtl
outsl
aas
lods
xor
int3
mov
adc
ds
int3
sbb
movsl
or
add
xchg
push
pusha
xchg
int
repz
push
fxtract
dec
jge
out
mov
das
aaa
sub
cmp
sbb
scas
adcl
sub
pop
mov
xchg
icebp
enter
imul
fcomip
loop
xchg
sbb
lods
mov
or
push
cmp
dec
sar
dec
jb
or
cmp
or
inc
insl
sub
cli
test
and
iret
or
jle
xor
arpl
lods
cmc
out
xchg
mov
sub
addl
xor
out
pushf
xchg
pop
adc
fwait
dec
inc
testb
push
mov
das
lahf
stc
test
out
push
icebp
sub
imul
cwtl
push
mov
inc
lret
push
out
jmp
nop
mov
les
inc
sbb
shr
xchg
fisubrl
imul
or
jne
sbb
jns
adc
mov
incb
inc
pop
mov
pop
jecxz
mov
sub
stos
dec
pop
jo
adc
out
fldcw
dec
data16
je
cmp
jno
addl
lahf
cltd
movsl
jne
pop
push
in
test
ret
inc
lods
test
lret
inc
adc
and
jns
in
sbb
icebp
dec
mov
ljmp
mov
popf
cmp
mov
xchg
lods
mov
xchg
insb
or
fsubrl
fcomp
imul
stos
jbe
out
sub
dec
cli
imul
scas
ret
test
xor
and
sbb
in
push
aas
test
loope
andb
inc
out
xor
lret
hlt
and
movsb
pushf
mov
into
pop
loopne
sub
push
stos
inc
pop
aad
insl
test
sbb
imul
pop
pusha
cli
sahf
test
nop
cmp
jne
ja
and
das
fwait
and
jp
cmp
push
popf
sub
jge
cs
cmpsb
or
and
stos
dec
sbb
xchg
lods
and
mov
inc
xlat
jne
sbb
cmpsb
addr16
int3
scas
mov
out
push
inc
test
add
in
fimull
add
sub
sar
mov
push
cmpsb
inc
insb
inc
dec
jmp
test
aaa
add
cltd
mov
inc
fbstp
add
mov
pop
push
xchg
and
js
inc
mov
push
push
dec
jp
cli
clc
ret
inc
sbb
ljmp
jns
pop
adc
push
movsl
ret
rol
lahf
leave
xchg
std
sbb
dec
mov
lahf
int
lock
inc
and
and
out
cmp
push
arpl
or
add
scas
mov
mov
jb
mov
test
jae
inc
pop
and
sbb
test
pop
fldcw
xchg
scas
movsb
rcrb
lcall
clc
jmp
bnd
add
aas
cmp
cmp
mov
das
pop
in
push
popa
faddl
aam
and
shl
add
das
shlb
jge
fistpll
stc
lret
pop
jno
cltd
mov
sahf
jne
pushf
push
insl
jne
scas
push
je
jae
pop
cli
add
lret
iret
cmp
push
jbe
icebp
xchg
es
in
in
movsl
call
mov
fwait
pusha
aas
mov
mov
add
cmpsl
imul
pop
flds
xchg
cmp
enter
mov
fstpt
adc
mov
cmp
mov
add
scas
push
pop
int
clc
ljmp
insl
dec
adc
lea
es
pop
loop
xor
test
mov
std
xchg
je
mov
xchg
mov
dec
or
cmp
sbb
test
imul
mov
add
and
mov
mov
push
adc
enter
or
imul
add
ds
es
jo
lea
pop
hlt
sub
out
loopne
pop
bswap
pop
sbb
xchg
test
popf
ja
bound
pop
mov
pop
aad
scas
mov
mov
shll
dec
pop
dec
xor
shl
mov
add
enter
xor
decl
icebp
fwait
bound
cmp
push
jg
push
cwtl
cwtl
cld
jg
imul
cmpsl
push
pop
cmp
divb
outsb
push
incl
jmp
cwtl
sub
movsl
popa
jae
mov
jne
add
daa
sbb
shl
in
call
sbb
xor
or
mov
mov
es
ret
jmp
mov
lahf
mov
stos
ja
cmpsl
inc
lcall
pop
sbb
push
cwtl
cld
hlt
imul
arpl
and
xchg
lahf
lahf
xor
leave
jbe
mov
jno
sbb
xor
pop
insl
es
imul
sub
mov
scas
jle
out
inc
es
xchg
mov
pop
dec
lret
dec
aam
xchg
fbld
mov
nop
fwait
inc
shll
jae
int3
insl
mov
mov
cli
pusha
imul
fiaddl
sti
popa
add
add
mov
adc
lret
divl
insb
sbb
or
xor
push
adc
jne
mov
xor
mov
fdivs
shll
fisttpll
mov
pop
sbb
shll
cwtl
test
daa
adc
add
test
jmp
pop
mov
mov
pusha
dec
cs
in
fwait
pop
jae
pop
mov
aad
aaa
stc
mov
xor
in
jle
xchg
lret
pop
sub
test
mov
sub
or
data16
ret
pop
cwtl
push
cmove
inc
pop
loope
test
sbb
push
fsts
xchg
cwtl
push
je
loopne
test
rol
shl
outsl
fdivrl
clc
int3
pop
stos
xlat
aad
cs
in
sbb
xchg
add
push
cwtl
rol
fs
push
je
pop
enter
dec
mov
shl
cld
pushl
push
xor
adc
sbb
mov
lock
jne
imul
mov
out
sub
jg
sub
cmpsl
inc
cmp
xlat
pop
rcrl
xchg
pop
push
sti
mov
or
lahf
mov
ljmp
aad
or
pop
jle
push
jl
std
xor
bound
sub
sti
pop
fbstp
add
loopne
xor
jle
cs
ficompl
mov
inc
js
idiv
mov
cmp
aam
mov
enter
les
mov
adc
adc
dec
xchg
iret
repnz
dec
sub
lret
ja
xchg
out
inc
mov
cmc
shll
dec
fs
daa
add
js
adc
inc
in
xchg
push
mov
jge
fs
repnz
fidivrs
cli
xlat
mov
icebp
adc
adc
mov
addr16
xor
inc
sub
inc
xor
push
xchg
scas
movsb
enter
mov
adcb
inc
pop
sbb
sar
jbe
pop
push
fildl
cmp
je
xchg
jp
fnsetpm(287
cld
inc
les
jmp
xchg
or
rcrb
insb
jmp
xchg
mov
xor
aad
xor
mov
pop
or
mov
or
push
inc
cltd
jge
lret
inc
cmpsb
and
sahf
jo
test
pop
leave
scas
cmp
sbb
hlt
xchg
hlt
inc
adc
inc
ljmp
jg
sub
mov
dec
inc
pushf
sbb
inc
add
mov
sub
mov
daa
sti
sar
js
enter
jmp
and
pop
pop
mov
ljmp
adc
jp
xor
sub
and
nop
inc
imul
mov
xor
adc
add
test
shr
test
mov
aam
push
data16
jno
and
andl
sbb
mov
dec
sbb
sub
imul
pop
cwtl
in
xor
out
cltd
addb
push
dec
rol
fndisi(8087
pop
in
dec
pop
stos
sbb
hlt
sbb
fdivr
mov
je
sbb
sarb
push
pop
sti
push
mov
cmp
or
cmp
xor
sti
add
jecxz
xchg
loope
aam
ss
cmp
nop
cmp
pushf
xchg
in
arpl
push
mov
les
inc
iret
cmpb
or
sahf
sub
hlt
lods
jg
or
xor
xchg
shrb
fimull
mov
es
sub
stc
inc
inc
xchg
mov
push
add
sub
std
mov
icebp
incl
or
fwait
popa
mov
jge
cwtl
or
push
jl
addr16
xor
sub
jecxz
lret
add
outsl
int
mov
enter
dec
iret
pop
push
sub
aam
mov
shr
aam
mov
pop
sahf
mov
lock
mov
adc
cmp
sti
inc
jne
lcall
movsb
in
mov
add
add
or
mov
lcall
sti
ret
stos
int
insl
cmc
push
inc
jle
adc
adc
pop
push
jne
or
jnp
lock
lods
or
daa
mov
hlt
jne
mov
fstpl
mov
xchg
sub
cvtps2pd
adc
ficomps
xchg
scas
unpcklps
comiss
mov
dec
mov
lea
xlat
mov
push
jne
ljmp
jl
fildl
loop
mov
mov
out
mov
mov
sub
pop
xchg
sbb
mov
push
pop
inc
adc
sbb
jecxz
nop
adc
dec
mov
or
cmp
add
ret
push
push
stc
cmpsl
arpl
lcall
test
push
inc
xchg
fsts
push
and
aad
pop
adc
cltd
sub
mov
xor
inc
adc
pop
test
in
stos
cwtl
jle
or
sahf
outsl
nop
outsb
loope
xor
sub
mov
pop
movsl
out
push
mov
mov
xchg
insb
rcrl
cmp
movsb
mov
sbb
movsb
jnp
push
pop
les
dec
xchg
sub
pop
aas
pop
jle
icebp
mov
fbstp
test
fmull
filds
xor
lahf
mov
imul
inc
adc
mov
push
pop
xchg
fildl
in
dec
mov
cmp
adc
popf
mov
mov
jnp
out
int3
idivb
dec
movl
push
lahf
inc
iret
rcll
mov
pop
pop
cmp
push
sub
add
fildl
gs
insb
adc
push
pushf
or
sbb
xor
clc
ja
mov
int
mov
xchg
pop
mov
sub
or
push
leave
and
xlat
and
jno
cmpsl
fwait
out
pop
xchg
and
out
inc
jno
sub
out
lret
repnz
adc
in
cmp
outsl
jbe
push
push
fimuls
test
out
adc
dec
scas
pop
mov
or
mov
ret
mov
push
sub
push
pushf
cmpsb
and
push
add
pop
xchg
shlb
xchg
and
shrl
je
pop
mov
out
jmp
push
xchg
xor
cmp
int3
mov
cltd
sub
arpl
mov
inc
cltd
cs
aaa
dec
lahf
ljmp
pop
push
and
inc
sbb
ds
sbb
sbb
lods
xchg
popf
push
outsl
sbb
ret
pop
ljmp
inc
fdivrl
leave
gs
cmc
push
cs
sahf
lds
sbb
jns
dec
cmp
lret
sbbb
orb
int3
mov
repz
mov
loopne
add
repnz
xchg
sbb
in
ds
cld
or
scas
adc
mov
xor
or
shlb
lcall
cmp
mov
or
jne
xor
mov
fsubs
add
and
inc
out
cli
sbb
cmpsl
fadd
mov
inc
shll
adc
pushl
mov
scas
xchg
inc
mov
cmp
sahf
mov
adc
xchg
pop
icebp
add
cmp
in
xor
adc
mov
popa
inc
stos
lods
sbb
push
in
hlt
inc
mov
and
jo
filds
loope
adc
cwtl
addr16
je
inc
call
das
pop
repz
out
stos
gs
jno
test
mov
xchg
push
sbb
fsubs
inc
ret
pop
cmp
scas
incb
ficoml
mov
mov
mov
sub
add
int3
jno
push
or
test
jge
push
or
loope
mov
movsl
jns
ljmp
adcb
xchg
loope
cmp
cmp
enter
popf
cmpsb
push
out
sahf
aas
mov
pop
mov
in
mov
sti
adc
mov
push
icebp
lahf
fs
xchg
adc
mov
push
push
push
subl
jbe
sub
dec
jle
fistpll
cmc
imul
loop
sarl
rclb
js
les
stos
xchg
sarb
popa
jae
in
or
scas
jmp
movsl
movsb
pop
add
jae
pop
lahf
test
dec
es
test
out
cmp
or
jnp
aad
out
out
test
sub
cmp
cltd
loope
mov
jbe
mov
int3
out
insl
cmc
xor
in
adc
scas
mov
xor
mulb
jp
vpshlw
insb
loope
ljmp
pusha
pop
cmpl
loope
ret
ja
test
cmp
stos
add
mov
pop
pop
or
and
push
dec
pop
imul
leave
lods
stc
jb
js
pop
sub
mov
adc
xchg
sarb
out
mov
mov
mov
stos
xchg
fimuls
pop
xchg
ret
push
sti
testl
icebp
sahf
daa
mov
ror
repz
push
jnp
inc
mov
imul
movsl
mov
cmp
xchg
rorl
ret
lods
push
push
fdivs
mov
test
push
or
adc
jl
mov
push
xchg
popa
mov
rol
js
pop
ja
sti
out
clc
pop
pop
gs
popf
cltd
pop
push
cmc
mov
push
xchg
stos
pminub
mov
int3
test
pop
add
dec
or
mov
cmc
pop
sar
shll
ds
sub
and
push
mov
aad
add
sub
addr16
adc
xor
sub
xor
fildll
int
cmc
insb
sub
push
mov
in
mov
lcall
or
cmp
fimuls
mov
mov
std
cli
clc
xchg
pop
aaa
mov
in
xchg
lret
mov
fsub
cmp
lret
mov
sahf
out
mov
lcall
bound
sub
xor
cmc
fs
and
add
stos
das
xchg
rclb
jecxz
test
xchg
stos
push
xor
mov
shr
mov
inc
cwtl
mov
pop
mov
addr16
pop
xor
leave
gs
fcomp
jo
xor
dec
test
and
mov
xchg
fstl
jae
inc
sub
scas
outsl
xor
popf
mov
das
dec
test
int3
add
movsb
insl
nop
mov
ret
inc
pop
cltd
lret
mov
nop
pop
loopne
hlt
ss
pop
test
in
mov
xorb
jmp
out
or
pop
dec
jl
sbb
hlt
sbbl
lcall
cmp
add
sahf
sbb
mov
movsl
xor
or
and
cmp
mov
or
arpl
lahf
in
add
shlb
mov
ljmp
xchg
mov
test
movsb
xlat
rcl
adc
push
inc
jae
mov
testl
ds
les
les
push
cmp
repz
cmpsl
mov
scas
cmp
lret
loope
push
sbb
fsubs
add
jecxz
add
imul
in
adc
jl
jp
gs
call
xor
shrb
sbb
push
loopne
imul
lea
sbb
addr16
adc
push
les
push
hlt
fidivl
push
mov
cmp
xchg
push
pop
insl
adc
ljmp
cwtl
sub
jmp
lock
in
in
out
dec
sbb
pop
scas
shlb
loope
data16
pop
sbb
pop
adc
mov
jbe
push
mov
cmp
fistl
xor
lcall
xor
sti
or
dec
or
pop
sbb
int
add
pop
push
push
pop
sub
jne
inc
aad
ds
inc
out
es
cli
jge
fcomps
add
in
mov
popa
or
mov
push
loope
xchg
jns
push
mov
mov
mov
incl
push
fnstenv
loopne
pop
adc
push
lock
cld
std
leave
std
addr16
jg
cmp
lcall
leave
out
cwtl
jo
les
out
push
dec
ret
inc
rorl
push
mov
mov
jnp
sub
sbb
xchg
jno
sub
scas
jecxz
das
pop
sub
mov
aam
pop
int
sub
or
mov
add
jo
inc
in
outsb
sbb
sbb
pop
mov
addl
mov
push
pop
sbbb
sbb
xchg
xlat
jg
imull
pop
and
cwtl
es
push
add
pop
test
xor
clc
subl
jnp
cmpsb
inc
xchg
or
sbb
popa
std
insl
outsb
adc
pop
lcall
mov
adc
out
rcl
jno
push
ja
xchg
push
push
mov
mov
add
pop
ja
jno
imul
mov
cltd
sub
xchg
jae
or
ret
push
cmp
roll
loop
repz
or
addr16
cmp
lcall
outsb
iret
cmpsl
insl
adc
sub
data16
in
cmpl
test
cmp
pop
pop
cmp
cmp
mov
mulb
adc
repnz
jb
in
mov
push
in
leave
push
mov
outsl
lret
cmc
aad
add
fldcw
insb
inc
inc
cmpsl
jno
in
insb
rolb
xchg
into
jo
mov
andb
push
cmp
test
into
or
or
or
stc
xchg
inc
push
insl
scas
leave
gs
mov
bound
xor
inc
test
scas
lea
shl
and
pop
lea
outsl
stos
out
sbb
mov
sar
sub
mov
xchg
push
sub
xor
lds
fisubrs
ret
add
cmpsb
sbb
and
mov
jmp
sbb
ss
xchg
xchg
xor
daa
sbb
xchg
jb
sti
ljmp
imul
add
repz
cmpsl
shll
loopne
scas
ja
and
lea
imul
xchg
les
jp
pusha
xchg
adc
lds
test
pop
sub
adc
pop
jbe
cli
cmp
cmp
and
pop
xor
cmp
mov
or
fcomip
leave
adcb
mov
pop
sbb
dec
mov
hlt
pop
xchg
mov
dec
aaa
xor
mov
cmp
lcall
xchg
movsb
mov
xor
rcll
sub
inc
test
adc
in
adc
sub
sub
inc
jno
mov
add
xchg
lea
shlb
shlb
cmp
sahf
test
push
aad
xchg
shll
jmp
xchg
test
push
bound
jne
sbb
sbb
fiaddl
lahf
pop
cld
test
dec
sbb
jbe
cmp
xor
fistpll
push
pop
cmp
les
in
repz
sub
int
popa
cltd
imul
pop
adcl
sbb
cmpsl
iret
jmp
pop
imul
mov
lcall
sub
or
fidivs
imul
and
jg
jnp
pop
inc
fisttps
pop
aas
into
mov
inc
lret
mov
xchg
aam
sbb
stos
sti
rclb
or
fsubr
stos
pop
mov
lret
mov
jg
repnz
test
mov
dec
inc
add
loopne
gs
sub
xchg
jbe
mov
mov
les
inc
rcr
lods
stc
stc
add
in
mov
push
repnz
test
dec
cs
jbe
jns
int3
outsl
out
ret
xlat
or
jae
roll
xlat
fstps
scas
xchg
inc
orl
popa
fwait
pop
test
ss
mov
push
jp
mov
jge
inc
xchg
out
lods
dec
pop
dec
sub
and
mov
inc
pop
ja
dec
popf
mov
ret
or
mov
xor
insb
jbe
je
fadds
test
sbb
std
jmp
push
mov
aas
jge
lcall
mov
fs
xor
insl
insb
sbb
aaa
lea
dec
push
bound
add
cmp
fsub
pop
mov
pop
push
xchg
xor
es
fs
jnp
aaa
xchg
rcrl
fdivr
hlt
into
xchg
sbb
popf
jae
les
xchg
lret
xchg
andl
shrb
ljmp
in
leave
sbb
xor
fistpl
ret
lahf
in
insl
dec
fdiv
lahf
pop
jecxz
dec
adc
js
sbb
sub
xchg
loopne
popf
gs
push
sub
inc
fnstenv
and
lret
pop
adc
mov
imul
leave
leave
mov
mov
fs
popa
arpl
xchg
lcall
andb
subl
inc
pop
inc
mov
inc
pop
mov
hlt
dec
mov
cmp
scas
call
cmc
cld
mov
jge
push
addb
inc
mov
fisubrl
push
std
mov
faddl
push
into
jae
fldl
sub
ljmp
outsb
xchg
xchg
cltd
jg
push
enter
adc
ret
sahf
inc
test
xorl
add
mov
rorl
jno
call
int
mov
scas
mov
std
cltd
test
sub
lahf
adc
inc
aas
mov
fs
add
add
aaa
mov
fadds
jmp
jno
xorl
pop
repnz
enter
addr16
cmp
mov
xchg
cmpb
in
es
lea
dec
xor
fisubrl
cmc
sbb
adc
push
cli
sahf
jl
out
mov
scas
mov
iret
pop
pop
and
xchg
pop
jl
adc
jg
out
dec
aaa
or
lcall
pop
push
inc
mul
mov
jns
push
sbb
mov
adc
mov
out
repz
movsb
mov
out
jl
dec
inc
xor
les
mov
nop
insl
xorb
jg
pop
sub
cmpsl
mov
jne
jbe
cltd
fdecstp
inc
push
scas
fs
push
and
cmp
sub
das
mov
sbb
mov
out
xchg
sub
push
xor
imul
jecxz
inc
mov
outsl
mov
mov
dec
outsl
cmpsl
and
xchg
mov
movsl
sub
out
popf
enter
repnz
xor
lods
in
dec
sub
leave
adc
jbe
lcall
xchg
lods
loope
repz
pop
mov
mov
addb
stos
jecxz
cmp
mov
jb
sbb
push
xchg
rcl
ljmp
push
mov
sbb
lcall
sub
les
arpl
repz
push
cli
sbb
cmp
add
ljmp
orl
xchg
xchg
je
addl
mov
stos
jo
mov
popf
pushf
jb
xchg
test
sarl
movsb
fs
adc
jb
repnz
loope
ret
xor
xchg
loope
sbb
fnstsw
lea
loop
push
mov
inc
fadd
in
lcall
xchg
outsb
mov
inc
mov
outsb
and
cmp
arpl
push
mov
jns
adc
pop
inc
outsl
cmp
mov
push
movsl
or
mov
dec
add
xchg
sub
dec
cmp
out
jb
outsb
mov
pop
sub
pusha
sti
int
negb
lods
aas
popl
cmp
push
push
sub
std
lret
jb
xchg
sbbl
adc
test
fucomi
stos
add
pop
test
add
ret
aas
inc
push
mov
sub
mov
jge
and
sbb
cmpsl
cs
jecxz
pop
xchg
cmpsl
xor
inc
pop
test
fs
mov
xor
aas
sub
push
inc
dec
mov
xor
pushf
mov
fwait
add
and
push
mov
popf
xchg
subb
nop
fstpt
jne
nop
or
pop
dec
push
std
into
mov
dec
push
sbb
paddsw
daa
or
ds
mov
jl
adc
cld
jp
bound
jnp
cmp
dec
mov
mov
mov
mov
inc
add
pop
lret
lock
cmp
dec
imul
add
push
adc
mov
push
jns
mov
mov
je
cltd
add
push
popa
add
dec
push
xchg
jnp
mov
jg
adc
lret
iret
negb
adc
cmpsl
stos
imul
and
xchg
and
fwait
and
daa
or
out
mov
mov
and
or
iret
leave
push
cs
add
add
insb
cmp
inc
and
scas
jno
cmp
stos
stos
enter
fwait
adc
lahf
les
insb
mov
insb
sbb
cmpsb
adc
test
or
ja
adc
pop
in
out
sub
pop
in
or
les
in
mov
push
cmp
in
or
rorb
loopne
out
add
lods
push
shlb
imul
insl
pop
cmp
or
test
fisubrl
mov
xchg
loope
mov
jg
jo
adc
popl
stos
jp
and
into
sub
add
adc
mov
xor
or
cs
mov
pushf
mov
jnp
dec
sahf
mov
mov
jnp
add
cmp
or
scas
lock
ds
xor
and
sub
aas
pusha
pop
and
inc
dec
jle
mov
sbb
or
test
dec
sub
int3
insb
sbb
push
adc
jg
aam
testb
test
jl
adc
test
ret
sub
sub
int3
jg
ret
ret
imul
jg
sbb
jge
jnp
ret
sbb
mov
cmpsb
sbb
xor
inc
add
jae
push
jle
mov
xchg
mov
mov
fbstp
shl
inc
call
mov
loope
and
hlt
push
xchg
loopne
jnp
popf
cmc
cmpl
shr
and
jns
pop
mov
mov
inc
add
jns
fldt
and
dec
in
aas
cltd
and
xor
mov
mov
lahf
push
inc
add
jge
xor
inc
pusha
pusha
add
mov
pop
mov
test
adc
out
add
jge
jge
push
jo
xchg
in
dec
and
and
mov
push
xchg
add
sahf
iret
xchg
daa
enter
cli
push
push
js
cltd
mov
push
dec
xor
mov
mov
lods
cltd
cwtl
pop
ret
cs
dec
jmp
adc
daa
xor
imul
outsl
sub
xor
jle
cld
cmpsb
pop
js
loopne
dec
test
mov
popl
orb
inc
inc
addb
fdiv
push
lahf
ret
push
add
xchg
in
daa
xor
dec
mov
inc
aaa
loope
aam
add
inc
mov
ror
pop
ret
or
aaa
mov
mov
dec
test
les
inc
or
pop
je
mov
icebp
inc
mov
aaa
sub
inc
sti
pusha
sub
repz
dec
xlat
fiaddl
fnstcw
dec
bound
and
ret
inc
mov
adc
dec
ret
insl
cltd
lods
mov
mov
test
jmp
mov
mov
mov
push
adc
mov
adcl
or
and
into
jmp
divl
mov
shll
lret
pop
mov
insb
rcl
push
add
sti
mov
push
or
dec
rcrb
or
cmp
dec
leave
icebp
ret
outsb
xchg
repz
mov
arpl
es
push
clc
mov
das
mov
pop
aaa
daa
cmp
cmpl
outsb
mov
aam
ja
popa
pop
push
je
das
sbb
jl
dec
sbb
leave
movsl
xor
push
into
pop
stos
jecxz
jle
int
sub
rcrl
lds
mov
xlat
pop
mov
xchg
ret
sub
sub
insb
mov
sbb
sbb
dec
xchg
aad
repnz
negb
push
cmp
mov
roll
insb
fcomps
dec
xor
icebp
sets
in
fbstp
int
dec
jns
xlat
push
clc
add
adc
adc
cmc
push
decl
jns
loope
dec
negb
cld
bound
shrl
pop
lods
mov
fsubl
mov
push
lods
and
iret
cli
and
movsb
rorl
out
sub
into
rcr
cmovae
jge
roll
cmpsb
cmp
mov
mov
cld
fistl
pop
pop
push
jb
sti
in
movsl
mov
xor
pushf
xchg
test
pop
lock
sbb
inc
hlt
stc
nop
fidivrl
mov
out
sub
aas
lret
inc
inc
insl
mov
push
lods
push
cld
add
push
xchg
add
add
mov
rorl
icebp
ljmp
popf
mov
xchg
imul
sub
adc
imull
sbb
aaa
imulb
push
imul
cltd
mov
mov
shlb
pop
jge
add
pop
scas
cmp
sub
outsl
addr16
cmp
loop
nop
pusha
roll
xlat
mov
dec
dec
sub
push
repz
cs
sbb
push
ret
bound
push
pop
cmpsl
clc
mov
jo
lahf
or
pop
mov
divb
mov
scas
pop
daa
loope
mov
dec
ja
sti
jp
cmp
xchg
xchg
or
imul
push
cmp
loope
movsl
loopne
jnp
mov
aaa
popf
mov
mov
cld
rolb
repnz
inc
mov
mov
add
sub
push
sti
fidivs
sti
jl
lea
xor
cmp
enter
push
mov
cld
pop
lods
call
sahf
cmp
mov
mov
int
int3
sbb
adc
jo
gs
mov
movsl
add
pop
les
in
je
int3
mov
cmp
inc
inc
and
stos
aam
into
es
adc
movsl
pop
mov
or
movsl
dec
and
inc
aas
xor
out
idivl
pop
mov
sbb
mov
mov
sub
push
adc
or
and
sub
iret
out
sub
test
xchg
mov
mov
cmpsl
cmp
xor
jmp
push
test
test
adc
dec
lea
cmp
in
stos
xchg
hlt
xchg
inc
sbb
shl
leave
ja
dec
jge
cmp
iret
fistpl
das
push
xchg
cmovs
cmp
jbe
out
adc
test
dec
adc
and
shll
and
or
cmpsl
lods
mov
sub
push
rcrb
adc
ficompl
pop
and
inc
adc
mov
inc
out
dec
outsl
push
push
in
mov
sbb
dec
xor
push
push
jae
pop
push
cmpl
and
dec
mov
adc
imulb
sub
xchg
into
push
push
cli
mov
sbb
lea
push
sahf
cmp
dec
fs
sti
popa
and
test
mov
enter
push
cwtl
dec
xor
dec
mov
sbb
roll
out
pop
insb
fldcw
xchg
and
outsl
cltd
cltd
and
movsl
xor
loop
jp
mov
std
sub
inc
push
ja
push
out
pop
negb
xor
pop
and
movsl
scas
aad
mov
and
mov
fwait
dec
push
adc
mov
cli
xchg
lret
cmovb
cld
mov
das
inc
mov
cmp
jbe
pop
xchg
fimuls
je
in
ret
and
sbb
popa
inc
xchg
pop
decb
call
test
pop
sti
or
add
fnstenv
cmp
dec
sub
jne
adc
mov
push
outsl
ret
jns
loopne
adc
mov
outsl
jns
and
and
jge
in
xor
add
pop
mov
sbb
and
fsubrs
rcl
fcomps
je
cmp
or
scas
push
xorb
repnz
jns
mull
das
xchg
out
mov
mov
stos
js
call
std
jmp
and
lcall
data16
and
sub
jle
int
into
int
inc
movsl
add
daa
pop
mov
sti
dec
mov
jmp
dec
push
mov
sbb
das
rorl
xor
mov
inc
inc
jae
test
int3
mov
sbb
push
clc
fisttpl
jb
xlat
sbb
shlb
fmull
into
jne
stc
xor
fisttpl
xor
dec
mov
mov
jno
cmp
in
adc
jnp
or
aad
jno
inc
jbe
imul
dec
xchg
or
outsl
sahf
ljmp
cmp
in
xor
mov
in
pop
pop
cvtdq2ps
cmp
adc
scas
outsb
dec
es
xchg
sbb
dec
rol
movsl
adc
and
mov
push
xor
pop
orl
push
mov
leave
pop
or
das
xchg
cli
cmp
outsb
jmp
call
inc
sahf
ret
in
and
push
pop
call
xchg
mov
pop
mov
adc
pop
lods
lret
sbb
dec
jns
add
jge
dec
rcrb
in
mov
rorl
push
out
test
dec
mov
addl
sub
inc
daa
xchg
xlat
add
aaa
cwtl
loop
cs
push
or
xlat
out
outsl
ret
lods
scas
ss
push
fldl
cli
pusha
dec
adc
ret
popf
push
imul
push
lcall
fisubrs
push
sbb
jp
out
mov
leave
fsubrl
or
dec
clc
jge
ret
pusha
add
in
pop
cmp
push
hlt
sbb
out
hlt
cmp
mov
std
and
cmc
movsl
or
sti
outsl
stos
cld
xchg
jp
leave
repz
incl
mov
dec
fmull
stos
repz
cwtl
in
cmp
inc
pop
rcll
cs
mov
outsb
jnp
cmp
pop
cmp
push
mov
push
addl
call
xchg
jmp
loop
testb
xor
cli
push
or
mov
je
cmpsb
cmp
imul
push
mov
pop
mov
mov
sub
cmp
cmp
outsl
mov
cltd
cli
cmp
rolb
pop
das
push
iret
fcoml
mov
dec
sbb
insl
cld
pop
push
pop
sub
push
nop
xor
int
jecxz
popa
test
fidivrl
and
and
push
push
xor
fstps
mov
push
movsb
les
mov
lock
jmp
mov
mov
stos
dec
add
push
out
pop
push
psraw
cmp
mov
dec
scas
cs
es
and
cltd
inc
lret
ret
cli
xor
xor
fnsave
jge
mov
sarb
rcrb
xor
add
cli
call
mov
mov
cmpb
pop
mov
psrlw
cwtl
fwait
cmp
out
push
push
and
add
sbb
adc
xor
nop
mov
sub
dec
pop
cmp
dec
fldl
jg
adcl
xor
mov
repz
xchg
adc
ret
adc
aaa
ljmp
js
lds
into
xchg
jb
pop
pop
incl
adc
add
loopne
jne
test
hlt
push
test
bound
jne
icebp
popf
mov
adc
fs
sahf
and
je
leave
loopne
cmp
outsl
dec
mov
scas
pop
jl
out
out
scas
sub
jns
popf
pop
cmp
pop
clc
testb
adc
lahf
cmp
dec
shrl
rorl
jecxz
xchg
shlb
pop
add
push
pusha
addb
movsb
test
mov
cmpsb
mov
sti
add
and
test
je
mov
mov
out
out
je
mov
jge
insb
pop
je
bound
jmp
inc
dec
and
fcmovnb
dec
sbb
lcall
faddl
out
ja
decl
jecxz
repz
lods
aaa
inc
call
push
mov
mov
add
or
mov
leave
cli
sub
dec
mov
inc
flds
dec
cmp
mov
adc
sbb
mov
aaa
xor
lahf
inc
aas
aad
mov
out
repnz
cmpsb
xchg
jns
andb
or
aaa
mov
inc
jle
mull
lret
jl
push
movsb
pop
jecxz
xchg
sar
outsl
aaa
cmp
xor
neg
and
out
push
jmp
movsb
and
mov
int3
mov
inc
outsb
add
add
mov
loop
arpl
decb
dec
sbb
cmp
mov
ret
xchg
jecxz
fs
xor
ljmp
imul
std
loop
and
mov
or
into
movsb
jne
fstl
ss
jmp
imul
nop
enter
test
lds
jae
mov
add
enter
pop
lcall
testl
xor
decb
out
cwtl
inc
je
dec
push
mov
fwait
imul
test
js
jne
add
rcl
je
andl
std
das
sahf
aad
mov
xchg
cld
inc
cmp
and
loop
push
push
jmp
hlt
push
repz
loopne
jecxz
inc
lock
mov
add
stos
adc
mov
dec
inc
in
std
xor
pushf
sub
push
scas
push
hlt
into
jle
dec
sub
std
dec
lea
adc
test
and
aam
mov
mov
das
jle
insl
inc
jge
cmpsl
cmp
sbb
jne
or
insl
and
xchg
and
xchg
es
fsubrs
enter
sti
adc
into
xor
mov
fiadds
jle
imul
jecxz
pop
in
scas
pusha
and
lcall
aas
jp
and
mov
pop
rcr
sahf
pop
dec
xor
ret
pop
out
fisttpll
div
das
int
inc
adc
cwtl
movsb
in
xchg
and
dec
or
xchg
mov
xchg
pop
add
jmp
stos
sub
jne
cmc
pop
call
aas
jecxz
nop
and
pushf
fimuls
repz
mov
jnp
int3
cmp
pop
gs
and
out
sbb
inc
add
and
bound
cs
xchg
shll
push
adc
loope
xor
sub
insl
lcall
movsl
or
dec
and
push
add
ds
mov
lret
fldcw
sbb
inc
sbb
js
push
pusha
mov
mov
xchg
adc
and
inc
dec
sbb
adcl
outsb
adc
xchg
jmp
fsubrs
arpl
inc
push
jl
loopne
push
ljmp
mov
stos
cs
xchg
adc
add
mov
jae
cmp
aam
sbb
jnp
aam
rcr
insl
popf
sub
fs
fnstenv
mov
lods
cmp
inc
push
lds
xchg
jno
inc
int
es
jno
xor
movsb
mov
or
lock
jnp
fldl
sarl
inc
mov
cmp
notl
popf
pop
push
daa
roll
imul
or
or
cmp
test
adc
jle
stos
add
std
out
mov
loope
mov
sbbb
cmp
cmp
mov
imul
jg
in
stc
leave
inc
and
sti
clc
jge
pop
popf
pushf
mov
cli
outsl
ds
sbb
jae
inc
jmp
push
mov
movsb
nop
ljmp
xchg
inc
ds
push
jmp
mov
mov
cmc
fisubrl
jp
call
add
pop
xchg
push
add
lods
fdivs
xor
fstpl
push
fistps
aad
and
cwtl
cltd
cmpsb
sahf
mov
daa
or
sti
push
pop
loopne
lcall
lock
sbb
aam
fcoml
push
jl
iret
jmp
jp
mov
lcall
mov
cs
hlt
push
jbe
mov
stc
repz
fcomps
add
ds
adc
notb
iret
xchg
jae
jp
cmp
xor
and
mov
xchg
repnz
or
dec
push
xchg
call
inc
imul
cmp
es
mov
mov
or
ret
mov
and
push
pop
push
cmp
sub
and
push
xor
cwtl
enter
jge
fwait
jno
fldt
ja
jae
sarb
js
adc
cmp
xchg
adc
lock
sub
jb
mov
add
popf
sub
or
cmp
or
push
fcmovnbe
test
movsb
pop
dec
xor
adc
dec
lods
test
inc
fstpt
fstl
movl
push
xor
pop
movsl
push
xor
loop
lods
add
out
push
and
add
xchg
mov
inc
jo
xlat
mov
cwtl
js
jmp
enter
push
xor
cmp
dec
pop
fisttpl
jne
das
sub
addl
pop
mov
jmp
push
fists
mov
into
popa
aam
push
test
cli
or
push
test
xchg
mov
dec
jo,pt
inc
cmp
jb
sub
and
xor
adc
rcl
push
outsl
jge
mov
imul
adc
pop
add
push
clc
xchg
jmp
je
or
sbb
pop
lock
jg
mov
int
or
sub
fisttps
addr16
mov
xor
scas
adc
mov
jae
bound
cmp
jnp
enter
ja
push
mov
mov
mov
out
jb
and
pop
int3
scas
lret
sub
pop
mov
pop
fdivrs
lcall
fnstsw
int3
mov
jnp
xor
aam
aas
inc
pop
pop
mov
fabs
jbe
inc
mov
mov
int
movb
mov
testl
cmpsb
pop
fmull
fdivrl
lods
adc
xor
xchg
test
sbb
mov
pop
sub
int
push
repnz
stos
adc
out
ljmp
lcall
push
jge
inc
cmp
jae
icebp
sub
cmp
mov
pop
jb
mov
jae
dec
push
xlat
into
loop
push
std
stc
xchg
into
in
xlat
test
rolb
into
mov
addl
push
lret
leave
dec
add
inc
pop
mov
jmp
adcb
pop
dec
adc
ja
jle
sti
adc
adc
xor
imul
inc
mov
push
or
test
jo
lea
int3
xorb
pusha
mov
arpl
cmp
lret
lea
movsb
cmp
aas
xor
cmpsl
dec
pop
nop
sbb
or
lret
lods
cmpsl
jg
and
ucomiss
mov
sub
push
pushf
imul
and
add
push
das
pop
int
pop
ja
cmp
cld
jle
or
add
jnp
xchg
stos
movsb
lret
int
fcmovbe
js
cli
mov
dec
cmpsl
mov
das
sub
xchg
pop
dec
ljmp
add
cmp
inc
sub
sub
lds
out
dec
push
ss
push
sub
daa
cltd
mov
and
mov
aas
sbb
outsl
lcall
mov
pop
test
nop
jp
lret
movsb
mov
cltd
jg
xor
and
or
ja
sbb
add
adc
jno
pop
ret
adc
scas
push
fldz
push
scas
fbstp
outsb
js
push
cmp
mov
mov
out
subb
cmp
shlb
and
sarl
fldenv
mov
sub
stc
test
out
xlat
test
dec
hlt
or
mov
negl
push
aaa
bndstx
xchg
outsl
fnstsw
in
adc
or
int
es
imul
xor
lret
iret
testl
in
sub
arpl
mov
cmp
inc
jmp
mov
inc
jnp
in
movntq
ljmp
arpl
mov
andl
clc
enter
sub
pcmpeqb
jno
xor
and
jne
addr16
cltd
ljmp
popa
scas
lea
push
xor
mov
gs
adc
call
lret
xchg
lods
test
sbbl
lret
aaa
fwait
dec
icebp
mov
leave
sbb
xlat
pop
add
movsl
mov
or
fdivr
cmpsb
in
out
test
or
push
xor
or
xorl
leave
cmpsb
aam
cmp
inc
dec
mov
push
add
aam
push
jp
enter
inc
rorb
cltd
cmp
lret
mov
mov
clc
rclb
lods
push
pop
inc
xlat
sbb
push
adc
pop
cmp
int
loopne
lret
fbld
or
cmpsb
mov
andl
sub
fs
idivl
pop
out
jecxz
loop
mov
enter
lea
arpl
pop
pop
cld
insl
int3
shl
aam
jge
mov
push
sbb
stc
mov
int
mov
shrl
pop
insl
pop
stos
fldt
mov
inc
shrl
gs
loope
pop
sti
inc
fdivrl
xchg
adc
inc
push
sbb
mov
jno
push
xchg
or
cwtl
push
ds
mov
xor
pop
stos
push
mov
das
xor
add
dec
inc
cld
test
jl
add
inc
mov
push
iret
scas
push
lods
icebp
lahf
out
dec
cs
cmp
mov
insl
xor
push
data16
lea
stc
push
mov
aaa
or
mov
sbb
xchg
mov
fs
mov
nop
in
loop
cs
popa
jnp
in
pop
enter
xor
and
roll
movsb
add
pusha
lock
cmpsl
pop
pop
push
jmp
das
push
in
push
lahf
test
and
cmc
adc
mov
outsl
popf
cmp
push
rclb
xchg
mov
fadds
iret
in
lcall
jns
pinsrw
cmc
dec
mov
xchg
ljmp
les
fdiv
cmp
inc
xor
pop
loopne
ljmp
ffreep
inc
inc
insb
xchg
jbe
lret
out
iret
cmp
jecxz
lods
sbb
and
mov
sbb
sbb
into
addr16
into
push
cmp
jl
lea
test
std
mov
inc
push
dec
mov
sbb
idivb
int
cld
pushf
push
push
sbb
xchg
or
lock
mov
mov
std
push
jl
adc
and
pop
add
fwait
mov
test
dec
pop
movsb
xchg
add
xor
jmp
int
dec
arpl
repnz
jmp
insb
sub
hlt
in
insl
cmp
mov
xor
or
insl
sarl
dec
fwait
shll
test
js
in
push
inc
or
outsb
adc
jnp
fstl
jno
add
jbe
adc
pop
popa
push
jecxz
mov
add
pop
and
dec
jae
dec
idiv
ret
in
pop
add
mov
pop
lret
mov
int3
jae
add
arpl
mov
pop
or
imul
and
cmp
adc
stos
std
cmpsl
push
imul
js
cwtl
sbb
xchg
add
iret
xchg
push
bound
loope
mov
ret
jno
lods
add
inc
pushl
adc
pop
popf
mov
in
cs
jae
in
jb
cmpb
xchg
xchg
lret
add
sbb
jo
loope
je
cmp
push
mov
les
and
out
out
xchg
in
mov
push
dec
cmp
mov
mov
mov
sahf
or
fsts
inc
shlb
imul
pop
jns
lahf
xchg
jg
fwait
cld
pop
sub
inc
adc
imul
mov
and
inc
adc
xor
clc
cltd
mov
jns
sub
xchg
insb
inc
sub
stos
in
mov
je
loopne
loope
daa
pop
arpl
jmp
mov
ss
shrb
push
adc
fimuls
push
mov
inc
cmc
pop
outsl
pop
push
imul
xchg
ljmp
insl
mov
stos
aas
js
test
mov
cltd
in
sub
inc
enter
push
mov
xchg
xor
cmp
ljmp
xlat
out
push
jb
ror
jle
mov
test
arpl
fnstsw
mov
outsl
aas
pop
mov
cmp
add
dec
lret
xchg
cli
sbb
sbb
pushf
or
xchg
add
shlb
or
mov
into
in
filds
xor
adc
fs
cmpsl
dec
inc
mov
daa
jle
and
sub
jb
xchg
inc
outsb
fidivrl
inc
test
fdiv
loop
pushf
out
sbbl
jns
mov
movsl
notb
adc
mov
enter
addr16
test
push
test
arpl
adcb
push
mov
inc
lds
sbb
add
fldl
dec
mov
sub
pop
mov
adc
mov
and
mov
ljmp
aas
outsl
pop
rcr
sahf
iret
mov
mov
mov
mov
pushw
jb
repnz
mov
push
mov
cmp
in
xor
push
pop
out
adc
jnp
sbb
aaa
in
cmp
push
ljmp
leave
cmp
lods
jge
mov
sar
add
stos
push
cmpsl
lock
into
sub
shrb
mov
sbb
repnz
xor
test
or
clc
push
js
adc
xchg
scas
add
jb
in
ficoml
mov
jns
and
push
cltd
stos
popa
and
and
jmp
mov
ja
shrl
scas
push
cmp
mov
fstl
gs
sub
sti
rorl
les
xor
fisttps
xlat
out
jle
mov
mov
dec
aas
pop
mov
lret
aaa
jg
mov
mov
mov
sti
mov
inc
sub
xor
incl
ss
push
jno
dec
outsl
flds
and
cmpsl
adc
int3
sub
sbb
and
pop
fidivs
les
inc
push
int
cs
and
fstpl
outsb
push
stos
push
sbb
hlt
les
or
jb
mov
sahf
jnp
repz
pop
notl
cmp
jno
and
pop
mov
outsb
jecxz
aam
sub
ret
mov
inc
and
jge
sub
rcl
mov
lds
lret
adc
cltd
fldl
out
pop
push
jl
rolb
pop
adc
jbe
repnz
mov
mov
xor
insb
add
dec
and
xchg
xchg
jl
scas
push
in
adc
aaa
mov
sub
cmc
daa
add
mov
js
jbe
sub
cltd
test
mov
or
xor
fdivp
mov
in
notb
jge
mov
mov
xor
je
or
mov
je
cli
into
sub
lret
or
ret
btc
cld
pop
jno
movsb
std
push
lds
lret
es
mov
push
push
ja
add
mov
mov
jg
lret
mov
xchg
push
std
adc
xor
push
mov
pop
leave
test
push
fldl
ret
xor
ds
jle
lcall
fucomip
xchg
mov
inc
test
insl
pushf
cld
icebp
ljmp
adc
sub
mov
cwtl
jnp
sbb
popa
jns
sbb
mov
jno
mov
xor
pop
xor
test
enter
mov
mov
mov
std
cmp
rol
add
pushf
fmuls
test
cmp
sar
lret
out
xor
add
pop
mov
std
aas
call
in
shll
add
cwtl
mov
pop
fdivrl
jecxz
jg
mov
mov
push
mov
adc
insl
xchg
fnsave
inc
aas
sbb
aas
jns
pushf
jmp
enter
pop
sub
sbb
sbb
insl
mov
sbb
jg
push
flds
ret
push
mov
jp
mov
dec
push
jne
lret
imul
push
push
mov
push
mov
ja
cmp
ljmp
test
fldl
pop
out
xor
xchg
or
dec
pushf
icebp
mov
jne
jle
cwtl
xor
test
xlat
mov
add
inc
test
add
scas
loope
xchg
cmp
push
cmpsb
jmp
out
sahf
mov
pop
pop
fcom
jne
ljmp
sub
sbbl
negb
out
shlb
movsb
lahf
maxps
je
scas
clc
add
lods
add
out
loop
movsb
sbb
cmp
jecxz
fists
cwtl
icebp
outsb
push
outsb
dec
call
ja
fnstsw
shll
pop
aad
dec
stc
shll
rep
push
clc
xlat
mov
stc
out
add
hlt
in
inc
in
call
jecxz
ljmp
sbb
rcl
in
mov
hlt
xor
movsb
gs
in
pop
fs
mov
inc
idiv
lds
pop
inc
jg
fldcw
jg
fbstp
push
filds
lcall
mov
add
dec
push
ds
or
in
stc
push
das
mov
hlt
std
jbe
sub
in
jno
and
add
filds
dec
sbbl
fsubrs
cmpsl
xchg
sub
cld
out
inc
or
fstps
xchg
outsb
push
popa
fnstenv
subl
int
jne
and
mov
stos
and
adc
mov
lahf
or
sub
decb
ds
jmp
jnp
xchg
push
push
sbb
push
lods
cmp
and
inc
pop
sbb
inc
xchg
fdivrl
dec
mov
dec
xchg
ret
xor
pop
out
pop
imul
in
dec
mov
pusha
lret
sbb
fnstsw
cwtl
es
jno
and
sub
inc
push
mov
mov
fsub
push
jl
or
push
pop
loopne
ljmp
xor
pop
or
cmc
mov
inc
addr16
lahf
test
xor
dec
push
pop
bound
cmpsb
sbb
fimull
push
cltd
out
dec
adc
mov
lret
ss
cmp
dec
dec
pop
fstl
xor
stos
cmpsl
mov
shrl
rcrl
in
xor
xor
push
jmp
sar
gs
loop
fdivrl
or
jno
and
jle
add
rcr
cli
popa
imul
pop
adc
sbb
leave
incb
cmpl
lahf
add
ret
push
jmp
stos
add
mov
icebp
dec
stos
dec
pop
sub
lret
test
mov
push
mov
lcall
fwait
xor
cmpsb
outsl
ja
movsb
leave
sub
cmpsl
imul
repz
mov
inc
xchg
or
loope
pusha
xor
es
orb
push
shll
adc
adc
jge
rcl
dec
bound
mul
cs
push
movsl
adc
jecxz
mov
jbe
ret
out
scas
and
loop
xor
int
mov
adc
leave
scas
lcall
mov
lds
test
cmp
repnz
cli
cmp
mov
push
and
add
sbbl
mov
loop
addr16
mov
dec
mov
mov
sub
movsl
insl
xor
mov
jnp
pop
adcb
cli
jno
ret
pushf
mov
xchg
dec
xchg
bound
mov
test
cmp
sub
cmp
cltd
addl
das
out
mov
xchg
or
ja
mov
xchg
dec
mov
ja
ret
lea
push
aad
mov
mov
inc
cmp
mov
ss
ficompl
es
sarb
scas
inc
jle
loopne
pop
inc
adc
fcoms
mov
mov
push
leave
push
inc
iret
out
testl
jl
daa
or
xchg
jno
jge
sub
inc
mov
cmp
fsubs
sarl
jmp
add
pop
popf
enter
or
xchg
imul
fiadds
push
js
mov
pop
mov
leave
adc
sub
xchg
adc
jp
shr
ljmp
adc
repz
inc
call
iret
lcall
dec
lahf
sbb
fisttpll
push
adc
sti
scas
out
cmc
pop
sbb
push
pop
mov
shlb
add
mov
std
and
loopne
add
add
ljmp
out
fs
aad
popf
pop
mov
and
aas
mov
mov
ror
add
clc
js
sbb
imul
ss
fistpll
or
aam
dec
sbb
insl
mov
jno
sbb
loope
xchg
adc
mov
sub
push
xor
std
mov
jge
popa
fsubl
arpl
shlb
jge
xchg
fcmovnb
rcrl
movsb
ds
sub
inc
or
loope
stc
mov
loop
test
cmp
dec
leave
mov
or
iret
inc
aaa
mov
mov
daa
xor
arpl
mov
cmp
sahf
cmpb
das
cmp
test
mov
mov
ficoms
mov
jbe
xor
sub
pop
xor
mov
dec
daa
lret
movl
scas
adcb
xchg
mov
jmp
popa
sahf
mov
fcmovbe
push
cmpsb
pusha
xchg
inc
push
ds
jmp
iret
push
sub
lret
sbb
pop
addr16
movsb
test
and
mov
adc
push
pusha
clc
leave
loopne
cmc
je
sarb
xchg
test
fisttpl
fsubrl
stos
imul
pop
sub
hlt
and
or
adcl
inc
xchg
shl
stos
ret
pushf
int3
int3
cs
sub
pop
jle
ja
rcl
ret
xor
push
fstpt
jp
fiaddl
push
cmp
ljmp
jmp
das
pushf
pop
jae
sbbb
pop
clc
or
out
push
pop
stc
mov
pop
out
jecxz
movsl
sub
jae
iret
into
sbb
shlb
xchg
inc
cli
out
xchg
arpl
mov
jne
scas
inc
or
inc
call
cmc
cld
loope
insl
in
std
xchg
mov
jle
hlt
xchg
das
lret
jae
lods
movsl
out
mov
into
xchg
daa
js
lock
adc
call
mov
stos
xchg
in
bound
jno
or
inc
leave
or
lock
shl
jne
pop
xchg
movsl
cld
out
lahf
je
fucomi
ja
mov
fs
ret
jg
call
cmp
dec
out
sub
lods
clc
sub
ret
inc
mov
in
insb
inc
dec
push
push
dec
in
sub
sbb
or
pop
xchg
fsub
xchg
shr
cld
xor
xor
sti
clc
fsubrl
das
ss
sub
mov
ds
hlt
fbld
cmpsb
mov
mov
add
add
lock
ret
jns
cmp
or
int
mov
cmc
imul
jecxz
ljmp
or
mov
pushf
out
insl
scas
dec
jno
mov
leave
adc
add
add
adc
pop
jecxz
cmp
cmpsl
imul
push
xor
inc
sub
mov
sbb
mov
mov
push
sti
jbe
and
adc
pop
aas
cmpb
bnd
push
mov
sahf
repz
sbb
xor
ret
lea
mov
xor
leave
mov
jo
xor
cmp
outsb
popf
cmpsl
aaa
test
in
jle
push
cs
mov
mov
push
dec
insb
cmp
lcall
stos
mov
testl
cmp
mov
das
dec
mov
sbb
push
pop
mov
cltd
aaa
mov
sub
mov
outsl
sbb
xchg
stc
lods
dec
lret
loopne
outsl
test
pop
stc
or
lock
push
push
lds
in
jmp
mov
cltd
jo
pop
push
mov
movsb
insl
xor
and
and
lds
cmc
add
mov
jno
fstl
scas
mov
pop
mov
mov
pop
outsl
das
cwtl
fsts
sbb
or
ret
rcrb
sbb
inc
popf
and
adc
xchg
aaa
repnz
adc
loop
leave
jp
add
mov
dec
xor
jbe
pop
xchg
mov
adc
push
outsl
sub
shr
insb
in
xchg
push
sub
xchg
addr16
popf
xor
dec
shrl
addr16
xchg
add
and
cmp
push
jg
daa
push
mov
xchg
or
push
xchg
rcrl
lods
or
inc
cli
cld
out
cld
inc
sub
stos
lea
dec
pop
repnz
mov
push
adc
sahf
loope
mov
pushf
dec
mov
gs
pusha
inc
sub
iret
cmpsl
sbb
loop
push
ficomps
or
into
test
mov
cld
mov
push
ja
mov
aad
out
mov
jl
mov
jbe
imul
lds
push
cmp
lock
mov
dec
cwtl
clc
xchg
insb
jae
movsl
push
in
cmp
lock
sbb
mov
loope
lret
stos
rcl
jb
aam
mov
pusha
test
xchg
adc
xchg
loope
andl
aas
scas
sahf
les
jno
push
test
in
xor
in
mov
fbld
inc
sarl
out
clc
pop
sub
pushf
outsb
mov
stos
or
or
mov
adc
add
fnstenv
ret
movb
pop
outsl
leave
add
xchg
daa
in
dec
sub
lret
outsl
xchg
test
pop
test
loop
repz
cmpsb
adc
push
shll
into
adc
sub
test
pop
aam
jnp
xchg
add
push
inc
lods
cmp
aaa
adc
stos
sub
cmp
mov
ja
lds
inc
aam
and
nop
cltd
cwtl
and
push
mov
xor
enter
es
add
mov
outsl
in
lods
stc
aas
scas
xchg
repnz
mov
popf
and
and
lret
pop
aam
or
fdivrs
gs
mov
popf
sbb
mov
pop
mov
enter
mov
xor
xor
push
out
jno
cmp
adc
mov
icebp
fwait
pusha
mov
fisttpl
mov
xchg
jecxz
imul
push
cmp
pop
push
push
xchg
mov
xchg
jo
stc
adc
stos
adc
andb
push
pusha
loop
cs
lea
or
cs
scas
out
push
xchg
xchg
loop
xor
jmp
cmp
dec
into
xor
dec
sti
xchg
mov
push
mov
xchg
sub
fcmovnbe
loop
pop
shl
cwtl
and
dec
xchg
cltd
add
filds
or
lahf
cmp
sub
lret
arpl
inc
adc
das
push
pop
xor
loope
imul
adc
push
or
fdivrs
xchg
adc
fcoms
rcr
je
add
or
mov
fsubr
push
inc
add
adc
push
pop
add
pop
mov
cmp
fwait
test
jp
les
mov
push
xchg
mov
push
sbb
mul
js
xchg
adc
push
sub
mov
je
xchg
repz
xchg
inc
dec
sahf
imul
aad
fidivs
shrb
mov
test
jne
jg
mov
aam
sub
sub
xor
mov
cs
mov
or
adc
dec
push
mov
js
and
push
pop
loopw
into
aam
imull
cmp
push
pusha
movsb
mov
paddq
cmp
negb
imul
repnz
aaa
ds
or
add
test
dec
fdivr
lock
and
shrw
insl
inc
cmc
call
cmp
out
mov
push
je
mov
pop
inc
mov
ss
popa
cmovg
inc
fidivs
mov
ret
bound
pop
lds
loope
mov
call
lret
je
xchg
lock
cwtl
and
add
mov
imul
les
fdiv
cltd
mov
dec
ror
xor
shlb
jno
mov
int
clc
pop
shll
sub
sub
pop
movsl
jno
sub
inc
adc
inc
pushl
xchg
xchg
aam
xchg
push
mov
xor
add
add
cmpb
jmp
lock
rorb
sbb
jg
pop
decb
cs
or
cs
fs
scas
fsubrs
lods
lahf
stos
or
shlb
mov
mov
lcall
cli
lret
mov
mov
jle
and
cmpsb
cmpb
or
es
xchg
pop
data16
and
imul
aad
sub
or
dec
sahf
xchg
and
sbb
or
push
popa
jnp
aaa
inc
and
jnp
jb
fwait
add
into
bound
push
movsb
aad
and
addr16
pop
lret
dec
shl
cld
lret
jns
insl
pushf
sbb
jg
es
and
xor
rorb
mov
movsb
dec
mov
adc
or
lds
mov
lcall
push
sbb
jle
idivb
jno
int3
pop
dec
add
adc
dec
pop
dec
mov
add
test
arpl
gs
nop
mov
out
cltd
call
lret
xor
and
filds
mov
jnp
lea
mov
iret
stc
mov
mov
stc
adc
andl
int
lods
xchg
xchg
testb
mov
jb
pop
cs
pop
shl
mov
mov
mov
xchg
test
es
xor
pop
test
cld
push
cmpsl
dec
push
and
ds
mov
cmp
inc
xor
arpl
lret
mov
cwtl
and
fwait
bound
aaa
adc
xor
psrlw
jmp
or
stos
into
movsb
add
shr
fwait
lahf
sar
xchg
lret
std
push
lock
in
or
mov
std
cmp
scas
push
pop
sub
mov
mov
push
fimull
push
and
xchg
push
ret
mov
sbb
add
lahf
dec
out
dec
pop
aaa
ret
test
xchg
xor
ja
jne
add
shll
movl
outsb
cmpsl
out
mov
and
and
and
out
cmpsb
jmp
cmp
or
mov
pusha
rorb
jne
arpl
cmp
vcvtsi2sd
adc
mov
push
push
sbbl
xor
inc
jp
out
ja
fwait
xchg
js
js
dec
or
mov
mov
xor
jecxz
pop
bound
aam
call
mov
inc
fisubrl
push
pusha
pop
das
ljmp
scas
or
imul
popa
test
cwtl
lds
dec
sub
test
enter
out
inc
clc
test
mov
loope
popa
subl
subl
inc
repnz
insl
push
pusha
push
xchg
pop
push
mov
lret
or
icebp
mov
sub
xor
ret
test
bound
pop
jle
lahf
mov
mov
dec
mov
in
mov
shll
or
cmp
pop
mov
inc
mov
daa
cmp
fbld
sbb
jle
mov
push
sbb
cmp
mov
popf
shrl
das
add
call
jge
lahf
xor
cmp
cltd
cmp
shl
sub
and
cmp
loopne
sub
loop
xchg
or
jl
jbe
mov
push
dec
fs
mull
cmc
sub
loopne
jl
push
mov
lea
scas
xlat
or
sbb
pop
add
xor
clc
dec
outsb
mov
int3
cwtl
int3
inc
lock
xor
push
pop
enter
and
mov
ret
mov
add
shlb
mov
cmp
adc
adc
mov
loop
jbe
inc
pop
xorb
shll
cmp
addr16
roll
push
sbb
or
mov
and
jmp
xor
sti
iret
push
aaa
xchg
lock
int3
pusha
push
inc
loop
aaa
fsubs
lods
outsl
dec
mov
and
test
mov
sbb
mov
cli
test
mov
mov
cld
jp
int
out
mov
out
xor
mov
sbb
cmp
fsubr
xlat
xor
daa
push
insb
adc
mov
ret
pushf
out
adc
test
adcb
popf
jnp
inc
dec
add
jg
jb
insb
std
adc
jl
push
mov
es
push
fstps
mov
pop
jge
aad
cld
out
lods
subl
or
or
jne
pushf
test
sbb
mov
add
pop
or
mov
in
xchg
pop
push
xchg
adc
pop
or
add
dec
inc
inc
mov
inc
and
in
ss
wrmsr
pop
mov
lock
arpl
or
xchg
sar
or
jns
xchg
addr16
je
pop
mov
push
jecxz
xchg
stc
push
mov
mov
aad
mov
sub
and
jle
outsl
ljmp
jmp
es
lock
cmp
push
jnp
push
dec
mov
dec
and
push
sub
or
outsb
xor
fld
adc
fildll
jg
jb
cmpsl
dec
outsb
scas
lahf
scas
mov
mov
dec
mov
std
pop
push
lret
fcmovnb
popa
pop
mov
adc
jp
ss
imul
jo
iret
xchg
loope
cmpsb
in
cs
jns
cli
aam
add
lcall
in
decl
movsb
addr16
pop
je
in
sti
clc
lret
dec
add
ret
ficomps
adc
pusha
shrb
loopne
mov
call
mov
mov
xchg
sub
cs
xor
jnp
jecxz
aam
daa
lods
push
push
lods
daa
push
sbb
out
mov
mov
sub
add
lods
loope
testl
lahf
sub
and
push
dec
fstpt
pop
adc
cmpsb
stos
outsb
adc
shll
daa
jp
enter
fsub
or
cmp
ret
mov
xchg
aaa
cwtl
cmp
test
mov
inc
push
int
shlb
sub
inc
or
pop
subb
icebp
shll
inc
or
dec
xor
xchg
xor
iret
inc
lcall
sub
cltd
repnz
or
ret
mov
dec
sbb
in
daa
cmp
inc
jo
pop
jbe
push
cmp
dec
or
fistpll
bound
repz
filds
clc
test
pusha
jo
fld
adc
sub
pop
cmpsl
jl
jle
jae
pushf
dec
lds
stos
pop
in
lds
ljmp
adc
or
into
mov
lret
cmp
jmp
or
mov
sub
and
lds
jb
into
pop
nop
fisubs
lret
repnz
cli
lcall
xchg
imul
xchg
mov
movsl
imul
sti
mov
andl
lods
imull
scas
mov
xchg
lret
shr
pop
mov
leave
xor
push
inc
and
and
or
out
lods
fdivrp
out
pop
and
loop
daa
into
xchg
mov
mov
icebp
mov
xor
mov
push
subb
sahf
hlt
dec
add
or
fisttpll
push
fldt
cmp
ret
imul
push
in
inc
daa
dec
cmp
pop
push
sahf
mov
call
out
sbb
imul
pop
pop
dec
inc
imul
mov
inc
inc
mov
push
xor
das
xchg
stos
scas
dec
lock
out
fistpl
jo
lock
fsubrl
pop
loopne
ds
sub
lret
push
test
lahf
xchg
inc
add
mov
sar
adc
pop
add
mov
mov
xchg
cmp
stos
dec
out
std
popa
subb
jmp
loope
add
add
push
mov
rorb
fistl
and
pop
or
mov
cld
inc
inc
jecxz
xchg
xor
push
xchg
test
test
push
scas
jle
sbb
scas
xchg
add
es
mov
stc
das
out
jae
push
jo
int
addr16
and
mov
bound
and
stc
xlat
ljmp
in
ret
int3
push
pop
pop
fnstenv
cltd
rorl
or
cmpsb
sub
dec
scas
movsb
dec
cmp
pop
cmp
mov
inc
jg
mov
dec
inc
aas
aaa
push
fs
mov
test
pop
mov
add
adc
les
loop
dec
mov
call
lock
add
stc
nop
mov
inc
cs
inc
adc
and
sub
push
imul
insb
das
push
leave
jl
rcrb
fstpt
push
jmp
sub
ss
add
fstpt
sbb
shr
mov
lock
mov
out
fs
sti
mov
movsl
lock
pop
adc
sub
cwtl
into
test
push
xor
stos
or
mov
xor
sub
iret
and
mov
xor
les
jne
jge
xor
xor
or
and
inc
gs
push
imul
lret
fisubl
into
mov
pop
dec
mov
cli
xor
mov
and
sub
mov
jnp
out
pop
xchg
enter
fisubs
adc
pop
into
xlat
shl
push
mov
mov
inc
and
pop
fcomps
xchg
repz
in
sbb
mov
cld
pop
push
aad
fsub
popa
inc
inc
cmpsb
ret
inc
les
imul
in
push
cmpsb
scas
out
xchg
xchg
xorl
sub
ficoms
push
adc
pop
stos
fstpl
call
push
ret
loope
xor
outsb
stc
mov
mov
orl
rcll
and
cs
adc
jl
dec
push
fistpll
movsb
out
cmp
sub
out
in
dec
repz
mov
fidivrl
insb
popa
bound
adc
xchg
xor
push
stos
jno
stos
push
pop
pop
lret
cwtl
pop
xchg
dec
push
sbb
divl
jle
add
xor
adc
loope
aas
push
xchg
out
ljmp
mov
fdivrs
js
xlat
outsb
in
jb
insl
test
imul
pop
mov
iret
or
adc
pop
jle
icebp
fs
inc
mov
or
stc
jmp
xor
xchg
sub
xchg
dec
and
in
mov
dec
xchg
mov
pop
pusha
cli
sahf
test
nop
cmp
push
and
jl
mov
cmpsb
add
ret
and
add
mov
pop
inc
sub
lcall
call
mov
dec
pop
loop
adcb
pop
adc
in
popa
int3
stos
rcll
mov
dec
lea
dec
jmp
outsl
popf
daa
dec
dec
aaa
pop
mov
out
dec
mov
sub
xchg
add
xorb
fucom
sbb
jmp
pop
dec
shl
lret
adc
js
mov
lret
cmpsb
push
in
mov
clc
sbb
adc
sbb
fsub
mov
into
push
or
cmp
lods
inc
cltd
jae
dec
xlat
inc
adc
test
into
mov
cmp
inc
xor
sub
mov
push
push
add
xchg
bound
cs
je
xlat
clc
jno
sub
sub
jne
jle
lret
mov
int
lea
imul
cli
je
int3
lods
mov
jnp
sbb
movsb
scas
jnp
in
mov
movl
and
cmpsl
lods
inc
es
out
inc
cmp
icebp
insb
cli
inc
and
jne
out
clc
push
lcall
cmp
testb
inc
or
xchg
jns
popf
scas
sub
add
loope
loop
mov
pop
mov
adc
inc
movsb
movsb
data16
negb
xchg
add
into
and
jne
loope
addr16
mov
jmp
aas
out
roll
jo
mov
shlb
cmpsb
xchg
in
leave
jbe
icebp
lret
stc
iret
jmp
sti
fildll
mov
shr
jg
mov
lea
loop
out
cmp
jae
push
jl
sbb
cmp
adc
add
pop
clc
popf
push
divl
ljmp
dec
mov
insb
loop
ss
add
pop
aam
repz
jne
dec
sbb
dec
outsl
mov
loopne
out
jmp
xchg
movl
imul
divb
push
stc
pop
mov
and
cld
sub
push
ret
test
imul
mov
es
dec
mov
loopne
xor
cmp
adc
cmp
or
sub
jmp
or
pop
push
ficoml
adc
jmp
dec
out
adc
push
jb
cmp
mov
mov
dec
adc
repnz
test
adc
dec
adc
test
ret
xor
imul
cmpsl
push
push
shlb
lds
dec
sahf
aaa
mov
jp
pop
pop
sub
jge
jmp
data16
enter
aas
leave
movsl
lea
push
sub
inc
mov
stos
ss
cs
mov
imul
inc
mov
xchg
or
cli
cmp
mov
push
and
push
xlat
xor
sbb
mov
xchg
in
pop
bound
scas
xchg
ret
jbe
cld
lcall
dec
or
loopne
cmpsb
and
mov
out
pop
test
jbe
aas
pop
add
xchg
test
dec
jnp
js
pop
fs
push
mov
xchg
mov
xor
sbb
daa
out
loop
sbb
push
mov
mov
mov
mov
push
aaa
rcll
or
add
out
mov
mov
das
ja
ret
ret
sbb
ret
scas
daa
jle
test
ds
adc
dec
or
test
cmp
add
cli
mov
enter
adc
dec
rclb
lods
stc
lret
shrl
cwtl
dec
es
ret
and
pop
cmp
xor
lods
setno
xchg
pop
idivb
cmp
mov
and
bound
lcall
inc
clc
mov
rcr
mov
int
and
loop
fstpt
fs
cmp
adc
add
or
inc
inc
orb
jns
mov
and
bound
in
pushf
pop
das
push
add
mov
adc
mov
ds
inc
sub
scas
inc
and
and
fisttpll
add
xchg
add
call
add
lds
mov
andl
adc
or
ret
dec
pop
hlt
xor
ljmp
out
ja
test
add
add
mov
sbb
or
pop
mov
xor
lods
push
mov
in
js
or
mov
inc
xor
movsl
jecxz
sbb
push
mov
ret
sahf
add
pop
sbb
cli
rcrb
lods
fimuls
mov
jecxz
cmpsl
insl
in
aaa
ja
mov
jl
addr16
cmp
jg
decl
call
pop
ja
xchg
xor
test
ljmp
cmpsl
jnp
test
adc
pop
sub
int3
pushf
movsb
dec
push
imul
out
mov
loop
insl
icebp
int
lcall
fbld
repz
fwait
pop
push
add
dec
dec
jle
bound
mov
xor
loop
push
fstpl
cwtl
leave
jmp
inc
dec
mov
jecxz
aam
xchg
subb
jb
fdivr
adc
add
push
imul
ds
shll
test
into
push
push
mov
jle
and
jecxz
jge
clc
je
js
cmp
pop
sar
inc
jecxz
test
inc
cmpsl
test
pushf
mov
shll
xor
hlt
cltd
fsubr
cmc
mov
push
and
push
jmp
shrb
adc
sbb
ljmp
mov
and
scas
stos
ret
push
sbb
cmp
lods
fadds
add
test
add
pop
int3
aaa
les
add
push
stos
js
out
arpl
jb
lds
push
or
mov
mov
mov
adc
inc
dec
lea
xor
adc
dec
or
mov
xchg
push
int3
or
shr
out
adc
pop
cmp
or
in
enter
sbb
insb
add
xor
cli
outsl
inc
xchg
pop
sbb
int3
andb
rorl
lds
mov
dec
xor
lods
xchg
pop
clc
mov
cmp
gs
fisubrl
or
mov
pop
mov
or
ljmp
sbb
stc
es
xchg
insl
xchg
ljmp
icebp
xlat
cmp
push
insl
mov
stc
mov
cmpb
lds
cmp
jle
sbb
decb
lcall
pop
sbb
push
mov
lret
loop
adc
add
loopne
test
sub
movsb
or
cmpsb
call
shrb
mov
mov
add
rolb
rcrl
out
xchg
mov
and
or
mov
jne
xchg
xchg
jl
jl
dec
outsl
orl
sbb
scas
adc
lods
jle
pop
push
xchg
adc
dec
pop
rol
bound
jns
and
data16
imul
aad
sub
lods
in
scas
rcl
jle
outsl
cmp
shrl
mov
and
std
sbb
dec
push
lds
sub
lret
mov
sahf
push
mov
dec
fldl
jne
aam
je
inc
stos
cmp
mov
das
inc
mov
xor
sub
imul
gs
add
popa
int
mov
or
jae
mov
dec
insb
int
dec
iret
data16
ret
pusha
add
lods
xchg
pop
hlt
int
push
mov
dec
mov
add
call
loope
fwait
out
cmp
daa
adc
add
popa
adc
fwait
jge
adc
aad
inc
sahf
shlb
sub
sbb
xor
jge
dec
movsb
mov
push
add
sbb
test
xchg
fisttpl
inc
jo
fbstp
jecxz
cmpsb
pop
mov
pop
jl
call
into
aad
aaa
orb
mov
cmpsl
mov
fstl
hlt
push
shl
xchg
pop
or
lods
imul
mov
cmc
lods
add
shlb
ffreep
dec
mov
pop
lahf
test
stos
sub
fcmovb
jne
jb
out
js
call
pop
bound
lods
cmp
fwait
pop
push
fwait
add
push
loope
imul
adc
xor
out
sarl
or
fldenv
adcb
int3
idivl
test
xor
pusha
jecxz
std
repnz
pop
decb
das
xor
fs
fsts
mov
adc
sub
mov
movsl
adc
add
add
and
push
cmpsl
addr16
jb
push
daa
adc
mov
sti
enter
or
lcall
sbb
mov
xchg
mov
div
cld
dec
enter
add
das
xchg
loopne
add
dec
mov
sbb
daa
jmp
mov
push
adc
insb
mov
pop
xchg
stos
lea
xchg
push
js
out
mov
jmp
push
mov
dec
xor
lea
push
inc
ret
inc
shll
or
cltd
movq
adc
push
in
fwait
pop
outsb
jbe
leave
inc
dec
or
jmp
cmp
adc
mov
xlat
testl
mov
sub
out
ffree
cli
xchg
adc
xchg
clc
add
xchg
hlt
sbb
inc
cmpsb
bound
jmp
loope
mov
repnz
rcrb
ja
push
nop
adc
cmp
sub
pop
jne
scas
stos
inc
mov
adc
sahf
cld
inc
in
cmp
cwtl
xadd
fxtract
stos
leave
testl
int
rcll
icebp
test
or
adc
mov
fistl
pop
dec
pop
pop
mov
xchg
fwait
pushf
adc
or
lahf
fldl2e
cmp
pop
loope
test
rcll
lods
inc
push
fsubrs
mov
nop
push
iret
cmp
jl
iret
sarl
dec
xorl
mov
push
lock
jp
xor
dec
xchg
sti
movsl
cmp
pop
fdivr
iret
orl
push
add
mov
dec
pop
mov
in
sbb
jns
pop
icebp
fsub
cwtl
push
xor
ret
pop
mov
rolb
sub
in
pop
cltd
cmp
out
leave
data16
pushf
int
rorl
lods
and
pop
aad
sarl
adc
test
mov
lock
jg
mov
dec
fs
out
jnp
mov
dec
movsb
neg
dec
adc
xchg
jb
or
mov
mov
and
pop
dec
jl
cmp
jnp
dec
or
int3
pop
mov
js
mov
out
rolb
les
repnz
pop
xchg
add
enter
scas
rcrb
out
out
enter
insl
xchg
sub
add
pop
add
js
iret
push
xor
scas
push
push
adc
pop
stc
out
mov
xchg
inc
sti
das
stc
jl
cli
fcompl
add
mov
pop
aaa
test
push
leave
insl
pop
jecxz
cld
jmp
imul
jl
sbb
push
mov
xchg
loope
testl
cltd
jne
outsl
cs
mov
arpl
adc
mov
lods
outsb
fidivrl
bound
cs
xchg
adc
cmc
mov
popa
loop
dec
mov
mov
jle
jnp
test
xlat
sbb
xorl
jne
fimull
out
rorl
fisubl
jnp
cwtl
or
fwait
inc
cmp
xor
fnclex
mov
les
in
xor
xlat
jo
pop
xchg
xchg
sbb
xchg
pop
sub
je
es
leave
daa
shr
cmpsl
mov
stos
cs
mov
sbb
and
sub
scas
pop
sbb
dec
jo
ss
adc
loopne
dec
scas
and
adc
cmc
mov
push
sub
ja
test
insb
adc
leave
xchg
add
icebp
in
loop
imul
in
imul
fs
pushf
test
outsl
push
scas
movsb
push
mov
movsl
ss
dec
mov
cmc
and
push
outsl
and
and
bnd
dec
jns
and
outsl
sbb
jge
inc
and
ret
jle
rcrl
mov
xor
push
push
or
xlat
xchg
dec
sub
dec
push
pop
iret
fwait
hlt
out
jl
outsl
lds
les
pusha
lds
sbb
jo
test
cmc
and
cmp
nop
cmp
sub
sbb
sar
pop
aam
insb
test
cmp
gs
cs
mov
dec
test
fisubrl
cmp
cmp
rorb
mov
sbb
xchg
inc
scas
cli
call
sbb
call
call
lahf
pop
int3
pop
push
xchg
into
inc
movsb
iret
inc
adc
dec
jmp
add
out
loop
cmp
ja
insl
dec
addb
dec
lock
dec
xor
jo
or
loope
sub
sub
pop
push
mov
push
jle
lcall
and
bound
jno
into
dec
cld
in
xor
lods
sub
fadds
loop
addr16
sti
sbb
pop
dec
stos
jae
push
or
xchg
mov
and
inc
jmp
or
fildll
cmp
pop
gs
mov
and
inc
andl
pop
ds
lahf
enter
repnz
mov
shl
test
lods
ret
into
std
and
test
ret
fldcw
les
popf
inc
and
xor
and
cmovns
push
and
mov
jmp
push
adc
dec
pusha
pusha
test
jge
push
add
xchg
mov
sbb
rcrb
push
xor
divl
cmpsl
mov
xchg
gs
push
sar
push
xchg
xchg
xchg
mov
pop
xchg
jl
sbb
xlat
push
cmpsb
dec
insb
jae
and
adc
and
fmul
into
cmpsl
pop
adc
mov
lods
sbb
jnp
push
arpl
das
aaa
test
xor
repnz
aas
dec
daa
test
inc
shrb
test
cmp
outsb
adc
inc
dec
popl
arpl
mov
int3
push
ds
mov
call
xchg
mov
outsl
je
ja
sbb
sar
xor
orl
aam
sub
mov
popf
sub
and
pop
mov
xor
ja
dec
jne
loopne
cltd
mov
and
scas
das
jbe
orb
mov
xchg
xor
xchg
rcll
sub
loop
xchg
push
mov
divb
lds
sti
mov
xorl
inc
out
mov
outsb
scas
jns
and
cld
fdivs
in
mov
add
pusha
push
mov
sbb
inc
mov
push
push
imul
mov
icebp
push
xchg
cmp
adc
sbb
mov
cld
cs
je
push
lds
cmp
lahf
aam
clc
lock
lcall
ss
xorl
test
push
jp
test
fadd
sbbl
test
jmp
repz
adc
sbb
or
inc
or
mov
test
inc
mov
mov
outsb
int3
push
out
outsb
ficomps
outsl
jmp
inc
pop
repz
shl
jle
jl
lcall
adc
mov
jmp
xor
and
mov
sub
pop
jg
repz
out
repnz
arpl
icebp
int
and
clc
mov
stc
pusha
adc
testb
loope
ds
test
jns
mov
rclb
push
inc
pushf
popa
mov
xchg
mov
int3
mov
xor
hlt
cmp
xchg
dec
sub
xchg
inc
xchg
cmc
pushf
fsubs
xor
call
jb
insb
add
dec
hlt
xor
addr16
scas
mov
int
lds
push
outsb
fdiv
lret
pop
jg
cmp
fs
stos
popf
gs
into
push
lcall
addl
rcrl
mov
in
insb
pop
sti
sub
xlat
sbb
sysret
es
add
pop
add
lods
cli
ds
xchg
je
cltd
push
jl
cmp
loop
fstpl
jno
or
stos
jmp
mov
mov
inc
pop
out
pop
jmp
imul
in
add
popa
fnsave
in
sub
sub
adc
js
or
or
mov
mov
shll
pop
movsl
jle
and
push
inc
fwait
ljmp
daa
mov
test
ja
sbb
xchg
iret
test
cmpsl
out
dec
jae
shlb
cltd
mov
xchg
adc
mov
or
dec
push
xchg
sbb
mov
cmpsb
divl
jg
ror
or
mov
mov
push
pop
push
sbb
dec
incb
out
push
loope
push
pop
leave
jo
out
aad
inc
inc
mov
pop
cmpsb
fucomip
and
aas
pop
or
arpl
mov
in
jno
fbld
xchg
add
xchg
icebp
in
push
out
jnp
push
xor
cmp
lods
pop
mov
popf
inc
sti
mov
scas
lcall
aad
mov
jb
or
adc
mov
add
jbe
insb
push
jg
lret
daa
ja
cmp
lods
imul
pop
add
lcall
push
adc
test
mov
test
lock
stos
mov
pop
xchg
in
jle
sub
ret
add
xor
push
pmullw
sbb
aaa
mov
xor
insb
pop
inc
daa
imul
sbb
mov
pop
int
les
add
adcl
fnstsw
sub
or
xchg
ja
mov
push
sub
or
out
xor
push
or
push
fimull
or
test
jp
pop
lds
lret
dec
adcl
cmpsb
in
repz
xchg
xor
xchg
xchg
jo
add
das
neg
push
test
cmc
xchg
sarb
leave
lcall
adc
or
clc
xor
loope
pop
cmp
lahf
ret
outsl
fsubl
aam
cwtl
imul
jo
sbb
push
inc
cmp
mov
and
jge
cld
lock
in
jmp
stos
mov
push
ja
mov
pop
cmp
dec
pop
pop
pop
or
subb
adc
push
repnz
xchg
and
mov
jmp
xor
bound
insl
and
inc
fwait
xchg
popa
ret
mov
xchg
das
xor
add
add
push
insl
fs
int3
insl
and
into
mov
push
outsl
pop
jmp
repz
shrb
or
orl
push
pop
mov
jb
lret
ret
xor
adcl
and
push
adc
xchg
repnz
mov
loopnew
icebp
pop
xor
mov
clc
or
cmp
in
loop
loopne
push
std
imul
dec
xlat
or
and
gs
ja
mull
out
pmulhuw
andl
mov
out
or
lahf
mov
jle
les
mov
mov
mov
lock
cmpsb
jp
mov
pop
je
sarb
stos
or
pushf
mov
test
xor
stos
adc
int
push
sub
call
dec
sarl
jo
xor
inc
jmp
cmc
push
adc
cmp
mov
arpl
fcomp
mov
mov
add
ja
fs
xchg
jmp
in
adc
push
mov
sub
jmp
fidivs
xor
dec
sbb
lret
fisubl
sti
inc
je
aas
pop
idivl
cltd
pop
mov
loope
mov
lds
gs
mov
fdiv
sub
push
loopne
push
iret
xor
cli
sub
ficoml
lcall
sub
jecxz
fsts
sub
das
lds
scas
jg
inc
xorb
das
xchg
es
stc
cmp
mov
add
fistpl
pop
movsb
adcl
test
jg
js
icebp
add
jnp
fldcw
mov
and
adc
fwait
push
andb
or
pop
popa
pusha
and
test
mov
ljmp
xor
imul
pop
pop
cmp
out
imul
sbb
mov
jae
add
xchg
mov
inc
pop
imulb
or
xchg
lods
xor
push
in
cmc
outsb
outsb
pop
pop
scas
jge
rdtsc
and
or
sbb
adc
add
add
jno
cmp
mov
cmp
cmc
inc
add
fisubrl
pop
jl
xor
push
out
sahf
and
inc
adc
sti
nop
mov
jb
lock
idivb
movsl
sbb
popa
arpl
dec
dec
xchg
jmp
xchg
mov
jb
enter
push
xchg
mov
mov
inc
ret
mov
add
lcall
and
inc
adc
cmpsl
mov
rep
cmp
jl
mov
out
out
test
jb
xchg
mov
push
pop
lcall
insb
mov
dec
push
lcall
push
mov
mov
cmc
cmp
xor
adc
mov
sub
pop
test
cltd
jmp
push
lea
sbb
push
or
xchg
jb
add
adcb
and
push
popf
pop
lods
out
xor
jo
cmp
adc
cs
subb
inc
push
data16
arpl
push
adc
dec
cmpb
icebp
sbb
sbb
in
and
pusha
add
dec
insl
addr16
call
jb
dec
jl
lock
das
adc
jns
mov
shrb
popf
mov
xor
pusha
mov
stc
imulb
add
loopne
cmc
jmp
ja
icebp
cmovb
push
gs
pop
les
mov
neg
push
push
cld
les
jl
into
jl
insb
cmpl
add
pusha
mov
pop
ja
xor
dec
or
and
dec
xlat
add
movl
push
sub
imul
sub
xchg
mov
icebp
or
mov
sbb
lea
in
cmp
fdivp
adc
fcomps
sarb
loop
in
push
add
ret
in
pop
subl
xor
fildll
jmp
outsb
push
push
jl
insb
pop
cwtl
mov
adc
ja
clc
outsb
lret
mov
adc
push
pop
scas
std
mov
jno
lods
bound
outsl
andb
repz
ds
vcvttpd2dqx
mov
addr16
roll
mov
clc
push
mov
out
sbb
xchg
mov
maskmovq
testl
gs
jb
mov
lods
imul
cld
pop
cmpl
push
xor
mov
push
sub
lods
push
xchg
xchg
ss
gs
lods
lret
cmc
or
fwait
jo
call
or
out
inc
cmp
shll
outsb
outsb
inc
cltd
faddp
and
xor
sub
cmp
pop
call
dec
adc
hlt
cmpb
or
mov
loop
fs
push
adc
bound
in
lret
divl
ret
loop
cwtl
inc
mov
sub
xor
jne
inc
jno
movsb
xor
inc
fmull
mov
jle
imul
scas
insl
jmp
lock
adc
scas
lcall
adc
lock
sbb
xchg
xchg
sbb
mov
adc
pop
mov
add
sub
mov
test
xchg
fdivrl
scas
je
push
sbb
xchg
cmp
add
push
leave
sbb
loop
cltd
mov
add
and
jecxz
mov
repz
inc
pusha
push
pop
lret
pop
xchg
xchg
into
loop
loopne,pt
insl
push
mov
fidivs
daa
or
mov
jecxz
fisubrl
sub
xor
push
jmp
fmull
xor
scas
arpl
push
incl
adc
mov
xor
add
push
mov
dec
enter
push
mov
outsb
xchg
mov
imul
lock
repnz
push
aaa
add
jle
dec
mov
jne
lret
xor
pop
in
inc
loopne
push
and
sub
mov
rolb
mov
pop
fcomps
mov
stc
lods
pushf
jo
jo
insl
mov
lret
call
inc
icebp
imul
rclb
xchg
xchg
mov
mov
jo
mov
cli
loopne
das
mov
les
and
clc
int
clc
daa
cmp
aaa
adc
mov
outsl
jns
int
inc
mov
ficompl
cmp
mov
call
cmp
pop
mov
xlat
or
dec
stos
ret
ret
pop
out
mov
xor
mov
hlt
inc
mov
jmp
push
movsb
cli
mov
sar
add
sbb
aas
aaa
clc
andb
dec
lods
mov
popf
repz
xchg
jle
cld
adc
sbb
xlat
adc
push
movl
js
jb
test
dec
repnz
int3
in
mov
fcomps
ss
enter
in
int
adc
cltd
inc
pop
addl
neg
mov
out
add
scas
mov
adc
add
scas
sti
test
adc
daa
push
pslld
and
jecxz,pt
ss
mov
inc
add
fldcw
call
fsubrs
test
sti
cmpsl
bound
iret
repz
inc
xor
ficoms
shlb
inc
push
rolb
es
push
sahf
fnstcw
int3
sub
out
insl
hlt
popa
mov
fildl
repz
cs
xchg
pop
mov
push
jbe
mov
mov
and
and
pop
clc
popa
sbb
loope
test
add
insb
nop
repz
add
adc
jnp
nop
sbb
push
ds
dec
orb
mov
into
mov
mov
xor
jo
dec
mov
push
popa
cltd
fldt
cmc
ja
adc
adc
adc
pop
sbb
fs
stc
dec
push
jb
cmc
call
jb
shll
jnp
cmpsb
jbe
jno
jmp
mov
push
push
jnp
mov
repz
pop
aaa
sbbb
sub
arpl
dec
mov
jg
cwtl
inc
mov
xchg
cmp
lcall
call
cmp
xchg
push
inc
mov
ss
adc
dec
and
jbe
sub
xchg
add
icebp
movsb
scas
pop
sub
test
inc
ret
jo
sub
jns
add
out
fisubrs
mov
fcoml
mov
and
dec
xor
je
int
xchg
jg
ficomps
push
cmp
xor
testl
mov
cmp
cs
ss
repnz
fmull
movsb
push
push
ljmp
mov
js
cmp
sbb
in
add
test
out
inc
push
sub
mov
jle
in
and
loope
jno
ljmp
aas
out
xchg
pop
sbb
fstps
shll
add
insl
sti
jae
adc
dec
out
sbb
hlt
jns
xor
sub
dec
xchg
ret
fmull
mov
test
es
jno
roll
gs
dec
sbb
loope
je
sbb
jnp
add
fdivrs
sbb
push
xor
push
mov
mov
lods
fs
lahf
in
pop
xchg
mov
leave
jp
adc
sbb
pop
mov
pop
sarl
loopne
aaa
cmp
xor
or
idiv
out
jle
cli
into
jmp
push
stos
push
rcrb
sti
mov
sbb
mov
loop
outsl
mov
movsl
xchg
pusha
aas
jmp
jl
pop
cltd
cltd
jmp
xchg
or
dec
cmp
test
repz
out
ret
inc
sub
mov
mov
call
xchg
and
xchg
mov
jge
xor
push
push
pop
shlb
loope
sbb
mov
fildll
and
fiadds
mov
jae
in
lods
sub
aad
test
shll
pop
scas
push
leave
fwait
inc
add
test
mov
test
xor
push
inc
jbe
inc
mov
jo
adc
pusha
adc
mov
xchg
mov
aaa
fldt
xchg
cld
fsubrs
insl
rcrl
fcmovu
dec
mov
inc
aas
dec
xchg
add
dec
add
sbb
mov
and
lods
aaa
inc
add
fisttpl
pop
into
cmc
ss
push
in
ljmp
movsl
test
pop
sahf
xor
xchg
stc
cmp
int
xor
imul
xor
xor
dec
popf
push
sub
fsubl
push
cmc
fisubrs
push
mov
add
jl
jae
push
mov
or
or
je
pop
hlt
add
xor
mov
jns
and
push
test
jecxz
cs
pop
dec
mov
sbb
sbb
sbb
xlat
mov
scas
test
rorb
xchg
mov
mov
pop
mov
inc
cli
push
subl
cmp
cmpsb
cld
sub
sbb
jmp
jmp
int
call
shrl
sbb
mov
fadds
xchg
mov
out
fisubrs
jo
test
fwait
cwtl
and
dec
sub
mov
outsl
xlat
cmc
pusha
mov
jge
lret
xchg
jnp
cmpsl
fisubs
add
mov
test
popf
xor
and
rorl
ret
jl
xor
mov
xor
jo
imul
add
out
sub
dec
ficompl
lret
mov
xorb
jae
cwtl
ljmp
push
cmp
fnsave
outsl
sahf
fnsave
adc
mov
lcall
ljmp
sarl
fdivp
jle
cli
adc
cmp
mov
imul
icebp
inc
idivb
mov
pusha
lods
jb
jb
push
pop
mov
push
and
dec
mov
inc
mov
or
jnp
mov
jbe
sbb
stos
sub
xchg
inc
dec
shll
ret
dec
stc
stos
mov
je
fisubl
xorb
paddq
stc
das
and
add
aas
xchg
shr
jecxz
ret
xor
jne
std
in
xor
fildll
loop
adc
lea
movsl
mov
aam
jae,pn
mov
iret
addr16
fsts
mov
daa
arpl
shrl
bound
imul
xorl
test
fnstenv
jecxz
xchg
pop
cmp
sub
fwait
ja
sub
push
sbb
enter
arpl
into
stc
bnd
inc
inc
dec
cltd
cmp
xchg
mov
adc
out
icebp
movsb
gs
sub
xor
scas
cli
stos
notb
sub
inc
add
sub
mov
sbb
xchg
jecxz
or
sbbl
push
or
xchg
fadds
lds
sub
lcall
jno
rcrl
cli
js
in
inc
ds
and
icebp
sub
push
jg
arpl
xchg
and
les
dec
pop
push
xor
mov
or
aaa
add
jae
push
xor
add
push
jp
jge
pop
test
mov
xor
pop
inc
pop
mulb
add
shrl
das
xor
mov
add
in
je
int
leave
cmp
outsl
rorb
xchg
mov
insl
inc
xor
xchg
insl
add
xchg
out
shr
fisttpl
mov
les
sbb
inc
pop
mov
cmc
sbb
scas
call
or
ljmp
or
and
xor
jo
inc
add
rolb
and
gs
lods
outsb
ret
push
mov
scas
xor
ljmp
cmp
jg
mov
xor
inc
aad
inc
cmp
mov
cmp
xor
xchg
pop
xor
jns
in
scas
jo
fld
and
cwtl
std
add
aaa
scas
int
mov
arpl
mov
xor
xchg
fnsave
outsl
lcall
in
mov
cli
mov
test
adc
std
clc
inc
push
or
or
insb
xchg
sub
ja,pt
pushf
cmp
jecxz
jne
adc
cltd
jge
sub
add
mov
inc
and
add
mov
push
push
cmc
fldcw
mov
xor
fucomip
out
mov
loope
xchg
mov
in
mov
sbb
int3
add
or
stc
in
push
sub
mov
sbb
add
shrd
sub
cmp
xor
ds
push
cmc
popf
mov
add
cli
nop
jns
rcll
ror
mov
push
add
loop
push
inc
or
cld
sbb
jl
fwait
inc
nop
mul
xchg
std
mov
pop
mov
push
out
lcall
pop
mov
xchg
add
lods
negl
sub
fstps
mov
std
jecxz
mov
inc
fisttpl
xor
and
jmp
cmp
mov
call
es
jnp
push
mov
fbstp
aad
cld
push
out
pushf
dec
xorb
xlat
mov
xchg
fists
in
mov
idiv
inc
lcall
fs
ficoms
lea
rcrl
pop
mov
adc
in
lea
push
rcr
inc
xchg
sbb
cmp
xor
or
mov
sbb
xchg
das
jo
lcall
popf
fucomp
jle
jecxz
clc
or
mov
inc
es
xchg
mov
sub
sahf
in
outsl
movsl
or
popf
arpl
enter
jl
les
and
mov
xchg
scas
in
xor
mov
js
mov
das
lods
cli
lahf
sbb
cli
jno
jecxz
inc
sub
loopne
ds
cld
mov
push
sub
pushf
cmp
outsl
shll
arpl
sbb
dec
cwtl
push
das
or
sahf
movsl
mov
dec
jmp
outsb
int3
push
out
outsb
ficomps
inc
cmp
sbb
jno
or
into
shrb
add
add
xchg
test
stc
rorl
xchg
mov
cs
mov
data16
arpl
mov
sub
jne
addr16
push
or
shll
jne
fcmovb
xor
xchg
mov
scas
cmp
js
ja
or
lret
adc
pxor
popa
jbe
cmpsb
pop
xor
fsts
pop
jnp
jg
push
sbb
iret
rclb
push
int3
push
insl
mov
adc
aam
dec
fcmovnu
push
cmp
cmp
xchg
lock
fisubrs
jae
or
push
or
ss
pop
pop
movsb
aam
push
imul
mulb
test
icebp
std
test
push
xor
mov
pop
mov
shll
dec
xchg
and
rol
add
lahf
clc
adc
addr16
inc
leave
ds
dec
addr16
cmp
fisttpl
ss
out
and
stos
fnstenv
aaa
cmp
scas
shlb
imul
ficoms
lods
cmp
scas
fstpt
xchg
mov
xor
enter
or
mov
inc
xor
jge
fistpl
mov
sub
popa
call
mov
mov
imul
cmp
push
test
lods
pusha
loope
fidivs
inc
sub
pop
push
jp
insl
sti
or
push
mov
mov
sbb
aaa
inc
jb
cmpsl
mov
sbbl
pop
sti
push
ret
loop
pusha
sbb
bound
hlt
pop
lds
xchg
rcll
adc
xchg
ret
loope
cmp
cmpsl
rcll
lret
and
pop
push
lret
lcall
inc
fildll
jnp
xchg
daa
xor
or
adc
inc
call
js
jl
into
pusha
and
daa
push
fsubl
xchg
test
fadd
movsb
je
or
inc
lds
cmp
jbe
xchg
pop
push
ret
inc
adc
mov
adc
and
js
adc
pop
push
xchg
push
jmp
add
lea
lahf
dec
sbb
cli
jae
pop
out
cmp
fdivrl
push
xchg
sbb
push
add
dec
in
sub
out
jmp
call
outsb
adc
push
js,pn
mov
adc
xchg
cmpsb
imul
jmp
shlb
cmp
fs
push
test
imulb
mov
fmul
bound
js
mov
out
push
lods
je
leave
push
sahf
clc
sbb
lock
push
inc
sbb
je
pop
std
cmp
mov
call
or
hlt
mov
adc
hlt
loope
sbb
jmp
mov
out
je
push
cmp
or
or
leave
mov
das
mov
mov
cli
das
es
js
xchg
jmp
inc
jle
mov
jne
sub
cwtl
jbe
js
in
cwtl
clc
xchg
in
test
testb
jmp
mov
mov
mov
popa
add
jnp
lds
xor
dec
enter
addl
mov
mov
add
add
add
aaa
movsl
mov
sahf
lods
dec
push
aad
imul
dec
fwait
gs
out
jmp
push
das
inc
or
jl
push
stos
mov
sub
insb
xor
mov
cmp
popa
out
aaa
inc
imul
ja
mov
repnz
cmpsb
mov
or
mov
movsb
and
gs
into
aad
jnp
cwtl
jbe
sahf
iret
int3
jno
out
ds
mov
cmp
data16
fidivl
movsl
xchg
xchg
mov
mov
add
outsb
and
lret
adc
movsb
cmp
jmp
push
xchg
inc
push
mov
rcrl
int3
es
aad
sbb
sub
jecxz
push
daa
das
mov
loopne
in
jo
mov
fldl
adc
pop
mov
into
jbe
movw
ficomps
xor
jo
imul
mov
xchg
xor
dec
ret
mov
pushf
ret
jecxz
gs
ret
out
shrb
outsl
hlt
fs
mov
sbb
jns
ds
clc
daa
mov
lods
ja
fisubs
es
xchg
mov
push
mov
add
and
xchg
and
test
adc
mov
add
fidivrs
jns
fiaddl
movsl
mov
std
lcall
push
adc
inc
and
mov
jp
inc
inc
mov
cli
repnz
adc
incb
sarl
in
sbb
cmp
jbe
ss
cmp
sbb
add
mov
adc
mov
sub
sbb
cmpsb
sti
jns
es
add
outsl
imul
aad
jmp
repnz
xchg
es
jns
add
insl
into
mov
lret
inc
dec
in
cmpsb
mov
inc
pop
xor
scas
inc
or
fwait
in
adc
mov
imul
shrl
data16
jo
sbb
xor
insb
lret
leave
xor
or
out
cli
mov
pop
test
lods
xor
mov
shll
sub
mov
mov
test
xchg
test
fstpl
test
push
je
push
mov
xor
iret
stc
pop
and
ja
ss
cltd
mov
std
add
mov
sbb
pop
aas
xor
inc
or
xchg
ss
mov
shl
dec
mov
sarb
pop
test
inc
sub
sbb
leave
cld
jo
inc
adc
adc
cli
dec
add
mov
dec
xor
push
xchg
sbb
out
dec
and
mov
insb
or
lcall
fbstp
daa
outsb
outsl
sbb
mov
pop
sub
lcall
cmp
cmc
push
mov
jo
pop
out
xchg
lds
out
test
stc
pop
mov
mov
mov
jns
sub
mov
mov
in
xchg
mov
rclb
adc
inc
jno
push
mov
rcrb
mov
xchg
test
push
lods
scas
xor
insb
or
push
inc
inc
add
andl
dec
and
stc
dec
push
xchg
sub
fiadds
xchg
and
frstor
negl
int3
and
dec
add
push
decb
call
xor
mov
push
xchg
les
dec
dec
xchg
adc
pop
mov
jne
je
push
pop
test
aam
cltd
pusha
or
and
xchg
scas
mov
sbb
addb
mov
lcall
int
in
repz
mov
cmp
sub
flds
insb
sub
pop
test
sbb
fisubrs
cmpsb
jge
loope
scas
lea
push
sub
mov
sub
dec
mov
gs
or
push
clc
adc
mov
fildl
mov
push
fcom
ljmp
push
fsubrl
push
or
add
cmc
pop
adcl
pop
or
inc
push
or
insl
cmp
inc
aas
sbb
cltd
jo
dec
mov
jp
lret
or
xchg
xor
xor
out
insl
shrb
mov
insb
xor
cmp
negb
add
data16
inc
jmp
push
pop
mov
int3
push
dec
pop
js
xor
mov
testb
gs
inc
mov
inc
push
mov
jo
jbe
adc
insl
jo
test
subb
cltd
inc
aad
movsl
test
cmp
xchg
xor
lret
dec
popf
pop
scas
mov
sbb
add
frstor
mov
movsl
daa
nop
sbb
cli
xchg
inc
loop
cmp
pop
sub
addl
js
jl
mov
int
fwait
lret
sbb
lahf
mov
mov
movsb
scas
out
int3
lea
repnz
cld
arpl
mov
loope
je
out
mov
bound
and
test
push
lcall
lods
push
push
cmc
jmp
outsl
rorb
cli
in
pop
pop
push
cmpsl
ret
or
add
xor
cmpsl
mov
or
push
subb
cmc
pop
push
sbbb
xchg
push
cmp
lods
sub
and
push
sbb
mov
gs
xor
cmc
push
fildll
and
daa
out
jecxz
cmp
lods
daa
faddl
daa
xchg
or
popf
mov
cmp
cltd
cmpsb
mov
mov
aam
nop
outsb
cmpsl
push
dec
sub
lock
cs
ret
mov
out
repz
xchg
vmread
add
push
adc
test
dec
loopne
je
rcl
movsl
mov
fwait
inc
dec
jg
stos
ljmp
xor
cli
cli
mov
dec
iret
xchg
cmpsl
sar
mov
sbb
inc
arpl
or
shlb
inc
push
cli
cltd
sbb
jmp
mov
addb
cwtl
sub
jp
std
mov
mov
int
imul
lock
out
xor
test
ss
aad
pop
dec
cmpsl
mov
fsub
mov
loop
mov
int3
adc
fnstcw
jns
lret
in
mov
repz
mov
add
movsl
addl
in
mov
int
or
movsb
rclb
test
mov
add
hlt
out
test
daa
ss
out
arpl
stos
je
mov
aas
scas
cltd
push
clc
jns
les
bound
call
inc
fiadds
fisubrl
mov
sbb
hlt
mov
out
sub
gs
rcrl
stos
xchg
lcall
dec
jno
and
cld
rorb
inc
cwtl
cmp
jae
adc
mov
pop
in
aas
jb,pn
pop
xchg
xchg
sbb
rorl
pop
xchg
outsl
sti
mov
inc
pop
push
jp
sbb
pop
mov
insb
loopne
cmpb
lods
dec
dec
and
xor
xor
icebp
jp
push
push
mov
mov
sahf
imul
xor
jecxz
push
pop
in
leave
shll
nop
enter
dec
fmull
pop
popf
push
cmp
mov
xor
icebp
dec
mov
push
fdivr
jg
fnsave
adc
lock
sub
pushl
dec
pop
sbb
je
dec
test
mov
arpl
loop
fwait
ss
lock
call
in
fwait
mov
int
adc
pop
lcall
lods
sbb
call
aad
int3
adc
xor
in
testl
mov
jecxz
fdivrs
dec
cs
push
xchg
ficomps
pushf
mov
pop
pusha
sub
outsl
mov
lret
mov
mov
cmpsl
pop
mov
mov
mov
adc
pop
scas
push
jo
or
movsb
cmp
mov
out
pop
fsubs
push
push
xlat
push
mov
sahf
jo
push
rorl
clc
in
xorl
daa
lahf
and
cmp
push
psraw
nop
jg
or
cltd
in
push
call
sbb
or
inc
push
pop
xchg
jne
sbb
xchg
adc
dec
shlb
fisubl
ret
mov
push
fldt
imul
add
subb
loopne
pop
cld
out
jp
mov
nop
fsubrl
pusha
xchg
pop
clc
sub
in
rclb
sbb
sub
jo
push
je
pushf
and
mov
fnstsw
xchg
testb
mov
cmp
lret
add
mov
xchg
hlt
adc
cmp
mov
and
jle
mov
dec
movsl
adc
leave
mov
sbb
stos
pop
cmpsb
out
mov
mov
pop
pop
mov
mov
scas
lret
xchg
and
aaa
scas
mov
popa
push
nop
xchg
add
imul
jno
mov
movsl
andl
cmp
fsubrl
mov
out
mov
mov
cld
lods
dec
jmp
adc
and
es
mov
ljmp
std
or
int3
les
pop
popf
lods
aad
push
orl
mov
inc
dec
or
xchg
sahf
es
xor
popf
es
aad
cmpsb
xchg
xor
jno
inc
xchg
std
and
outsl
jo
push
sbb
add
mov
xchg
dec
into
or
dec
insl
sti
inc
xchg
inc
andb
push
outsl
out
mov
pop
sbbb
mov
sub
xor
mov
sub
dec
lret
pop
jae
in
push
mov
pop
adc
jecxz
cli
out
push
fs
repz
and
pop
mov
cld
shl
mov
xor
mov
xchg
pusha
repnz
cmp
inc
push
into
das
push
sub
sarb
testl
jle
cld
add
inc
pop
fbld
sarl
fmul
push
adc
data16
rcll
add
ret
or
outsb
add
outsb
stos
mov
sub
test
inc
mov
movsb
ss
cltd
pop
xorb
xchg
inc
in
lock
mov
imul
sti
fisttpl
imul
push
or
lock
and
outsl
test
ret
mov
push
jl,pt
les
xchg
cli
test
mov
jmp
inc
pop
adc
aaa
and
hlt
push
dec
adcl
jle
das
mov
push
outsl
add
scas
xor
jl
loop
xlat
mov
shrb
popf
jge
lea
jns
mov
jae
adc
les
mov
sub
sub
jo
lock
xor
mov
jl
insb
lods
jns
imul
dec
adc
decb
pusha
cmpsb
sbb
inc
out
push
ja
in
stos
es
das
movups
jl
rol
mov
push
and
popf
mov
sbb
sub
adc
fwait
mov
ss
jbe
push
mov
add
outsb
mov
or
cmp
pop
cmpl
jae
in
inc
mov
clc
sub
scas
sub
inc
and
sbb
pop
xor
xchg
mov
xlat
inc
outsl
jecxz
adc
scas
rorl
out
xor
xor
or
dec
cmpsb
mov
xchg
imul
shrl
add
jae
pop
icebp
mov
aas
cmp
cltd
cmpsb
movsb
adc
push
jbe
out
adc
or
icebp
push
das
cltd
inc
les
sub
js
lret
adc
cmp
cld
fidivrs
test
mov
je
enterw
and
sub
lods
fildl
out
out
jg
int
popf
cwtl
scas
and
lahf
js
pop
add
sbbl
arpl
cmpsb
pop
mov
jo
je
stos
mov
into
push
fmulp
scas
xchg
sub
out
xchg
imul
push
imul
sbb
cmpsb
sbb
jne
sub
xor
ds
lahf
loop
insb
push
pop
aad
mov
sub
push
lahf
pop
add
loopne
mov
stos
ret
and
jle
or
ds
leave
insl
sbb
mov
lods
lock
std
xor
and
int3
cli
mov
and
dec
fisttpll
shl
ret
lods
dec
scas
and
fadd
mov
pop
xlat
adc
lea
jmp
push
adc
fndisi(8087
orl
rcl
mov
scas
mov
adc
jle
out
repnz
or
or
push
in
aam
inc
shlb
inc
es
fs
xor
dec
and
cmp
push
push
cld
test
mov
stos
mov
push
fisttpl
jno
mov
in
sub
xchg
push
xor
adc
xchg
mov
sbb
add
xor
es
mov
out
push
dec
mov
cmp
pxor
pushf
insb
in
xor
repz
xor
ret
cltd
jns
fs
xlat
mov
pop
insb
mov
rorb
testb
or
adc
loopne
mov
inc
mov
bound
inc
xchg
push
int
fcmovnu
mov
out
jb
jp
mov
lidtl
ds
test
cld
jp
ss
sub
lret
icebp
fs
imul
sub
xlat
scas
loop
jb
repnz
ror
into
cli
lret
push
xor
push
xlat
push
add
adc
scas
fs
push
push
and
mov
int
arpl
mov
pusha
imul
sti
fiadds
cmpsl
mov
in
xchg
xchg
inc
dec
out
movsbl
rcll
mov
push
mov
mov
pop
sub
push
adc
sub
hlt
test
or
insl
rolb
daa
adc
or
cmpsb
aad
pusha
leave
fcoml
push
mov
icebp
test
pop
mov
xchg
push
adc
push
sub
incb
lock
jae
and
cmp
aad
test
movl
mov
lods
loop
clc
add
daa
mov
mov
or
jge
hlt
jne
mov
and
lds
cli
imul
push
inc
outsb
lret
push
mov
shl
mov
cmc
ja
aaa
xlat
jg
sub
shlb
cmp
insl
gs
sbb
cwtl
add
mov
cmp
or
insl
lea
lds
neg
adc
inc
aad
cwtl
adc
xlat
mov
aaa
push
out
dec
xor
push
fidivs
inc
dec
mov
loopne
jbe
mov
xchg
jp
dec
jmp
test
fnstenv
mov
clc
jg
lds
or
xchg
std
push
or
jecxz
xchg
and
addb
add
loop
rorb
or
or
repz
mov
pop
pop
sub
enter
fidivs
mov
dec
mov
cmove
je
jae
out
jb
loopne
fistpl
ds
inc
xor
lods
cmp
sti
cli
stos
push
or
inc
and
pop
filds
lock
cmc
cs
push
xor
xor
mov
cwtl
pop
bound
and
fnsave
push
insl
inc
mov
cmp
loopne
mov
out
jno
mov
sbb
cmp
add
sti
stos
xor
shll
add
stos
decb
adc
pop
aam
inc
sub
imul
enter
fldenv
ja
and
mov
in
lea
cmp
push
inc
add
mov
jns
cmp
push
inc
cmp
inc
mov
xchg
xchg
js
rorl
cmp
lret
adc
push
jnp
mov
sbb
and
cmp
pop
mov
out
dec
arpl
and
je
jmp
add
push
in
aaa
stos
lahf
outsb
daa
push
mov
cmp
and
pop
sbb
shrl
fstl
int3
sbb
sbb
out
ljmp
inc
or
imul
sbb
add
xchg
inc
inc
cmpsl
jno
ljmp
ss
in
xchg
icebp
addb
movsl
hlt
loope
push
repz
mov
jl
ds
rolb
xchg
lds
xchg
dec
aas
in
jp
sbb
fistpl
enter
pop
mov
cmp
or
cmpsb
adc
push
inc
push
addr16
jne
dec
pop
fsubl
cmp
xor
sbbb
adc
outsl
insb
jl
mov
lret
push
test
data16
sbb
pop
add
push
jnp
cs
and
jmp
mov
jecxz
frstor
sub
sti
mov
and
aad
inc
xor
movsb
in
xor
jo
xchg
mov
sbb
mov
inc
cmc
addr16
lret
lock
xor
mov
in
int
arpl
push
inc
cwtl
dec
pop
pop
sbb
push
or
cli
stc
sub
lret
cmp
pop
add
mov
stos
xor
push
arpl
or
js
shlb
xor
xchg
xchg
push
pushf
or
mov
xor
jb
xchg
repnz
and
adc
inc
movsb
jge
lahf
sub
add
mov
ja
mov
ficomps
loopne
sahf
xchg
and
sbb
ret
push
sbbl
or
imul
int3
lea
mov
push
jl
mov
in
popf
sbb
dec
dec
jg
mov
jmp
mov
fnstsw
sbb
inc
xorl
adc
xor
xchg
fiadds
push
ret
je
push
push
jb
mov
mov
lahf
stos
stos
adc
movsl
enter
xor
std
xor
aas
movsb
jno
ret
sub
cli
lock
shrb
lahf
std
mov
cmp
imul
xchg
mov
arpl
std
mov
pop
cmp
mov
in
pushf
push
cmc
out
sbb
scas
nop
out
ljmp
xchg
xchg
out
lea
daa
mov
imul
sbb
ljmp
push
pop
call
outsb
shlb
mov
inc
xchg
scas
out
int3
inc
cmp
sbbb
std
stos
inc
sub
xor
popw
sti
sahf
cmpl
inc
lea
inc
in
pop
mov
test
das
mull
stc
stc
mul
cli
icebp
aad
push
in
sub
cmpsl
mov
lcall
add
mov
xor
cmp
rcll
shl
iret
or
ret
or
push
iret
cmp
xchg
lret
test
xchg
cld
xor
cmp
inc
add
stc
lret
daa
lret
add
aaa
pushl
jge
and
mov
sbb
in
inc
out
jle
scas
lds
pop
xchg
and
xor
mov
test
test
sbb
inc
adcl
mov
addr16
ljmp
xor
in
pop
bswap
cmp
scas
sbb
dec
pop
imulb
or
lahf
mov
mov
fisubrs
fwait
inc
insl
int3
push
mov
xchg
sub
notb
jl
out
lar
jo
xor
push
pop
jno
jno
xor
and
icebp
jp
out
and
mov
dec
jnp
jecxz
das
loop
mov
or
int
inc
sub
hlt
lds
daa
in
fisubs
loope
ret
inc
jne
lock
push
xor
inc
mov
adc
mov
push
sbb
iret
pop
shlb
sarl
sarl
lahf
pop
add
jo
loopne
or
push
imul
mov
sub
pop
mov
mov
xchg
mov
fldl
jmp
lea
ret
ret
rcr
dec
push
neg
test
push
mov
mov
sbb
in
fildll
xchg
or
jmp
xor
bound
pop
shl
lcall
xor
add
dec
cmp
jecxz
sbb
sbb
lret
lahf
std
cli
mov
sub
daa
rorb
xchg
mov
pushl
jne
push
scas
ljmp
cmp
add
pop
mov
inc
fistpll
lahf
orb
stc
sarb
stos
mov
prefetch
lock
repnz
and
and
outsl
or
pop
test
xchg
dec
dec
dec
push
sbb
outsb
mov
push
mov
or
in
dec
sub
jno
int3
sahf
mov
xlat
xchg
addl
push
mov
rcll
push
test
test
jns
clc
xor
jnp
dec
into
ss
leave
shr
mov
movsb
jmp
push
push
jns
adc
inc
mov
adc
push
push
lcall
cmp
rorb
push
scas
stos
xor
movsb
xor
mov
mov
inc
arpl
pop
pushf
stc
cmc
call
inc
bnd
daa
and
out
lods
ja
inc
test
lret
mov
pop
popa
aam
push
lret
or
dec
imul
into
push
ret
lcall
out
cld
xchg
adc
mov
push
mov
add
pop
mov
cld
filds
inc
adc
dec
fs
cmp
dec
insb
cmpsb
xchg
sub
scas
loop
push
pop
sbb
insl
add
dec
pop
or
mov
xchg
inc
sub
pop
inc
sti
adc
lods
hlt
scas
adc
mov
sub
or
repnz
cmpsl
adc
push
rcrb
hlt
pop
ja
jns
imul
mov
iret
adc
stc
xlat
and
pop
dec
shll
out
and
out
fsts
ret
mov
jecxz
mov
and
cli
int3
mov
cld
push
rcr
mov
out
add
dec
lea
insl
pusha
enter
sbbb
ja
sbb
into
jne
dec
in
and
pushf
push
mov
xchg
jo
mov
sub
mov
lods
cmpsb
pop
jg
jg
mov
shlb
loop
js
ljmp
aaa
mov
fcmovb
mov
xlat
or
test
add
sti
lods
daa
stos
adc
out
imulb
aas
jge
add
sub
push
add
andl
pop
jnp
mov
ret
pop
pop
xchg
les
sub
iret
addl
lods
cld
cld
sti
out
sbb
inc
inc
push
mov
enter
xor
out
pop
sbb
out
cs
shlb
fs
adc
mov
pop
aam
mov
push
jecxz
jns
mov
push
pop
jnp
jmp
daa
cmp
inc
decl
out
lcall
sarb
add
fcomp
cmp
sahf
lcall
cmp
xchg
xlat
inc
pop
ret
push
push
add
div
stc
scas
ljmp
jge
and
xor
mov
jae
cmp
adc
mov
push
mov
push
push
adc
cmp
mov
dec
cmc
aas
cmpsb
ljmp
loopne
xchg
mov
push
xchg
mov
and
iret
and
pop
sbb
push
dec
xchg
pop
es
dec
mov
and
shrl
cltd
and
jl
dec
adc
mov
test
aam
mov
pushf
sbb
mov
lods
insl
cld
insb
lcall
sub
push
push
in
ret
roll
push
fsts
pop
lret
and
xchg
fisttpl
jnp
out
adc
push
jmp
or
jl
sbb
test
outsb
adc
add
or
cmp
dec
push
jp
fs
cmpsl
cmp
fdivl
jne
aas
enter
rcrb
imull
mov
jl
or
add
les
inc
ja
cli
push
ficoml
outsb
jl
fs
bound
adc
push
jg
sbb
sahf
shr
add
cmp
js
mov
add
dec
cmp
mov
lods
cmp
in
je
ret
and
cmpsb
add
bound
adc
dec
out
mov
xchg
daa
xor
pop
out
xor
pop
push
mov
das
loop
or
inc
pushl
add
int3
daa
or
adc
pop
scas
call
lret
push
lcall
js
rorb
movsl
and
mov
loopne
lock
jae
cmp
xor
xchg
push
inc
iret
gs
xchg
stos
mov
stos
push
sbb
aaa
ret
dec
test
in
rolb
dec
jl
sbb
dec
sbb
pushf
mov
clc
cmp
add
outsl
lret
add
jne
mov
data16
sub
xchg
fisttpll
fnstcw
inc
fwait
mov
insl
xchg
out
push
pop
mov
cmp
or
stc
nop
push
push
lret
jp
lods
fsubrs
out
test
ret
cwtl
into
call
stos
pop
mov
and
pop
mov
js
ja
and
mov
int
std
shrb
lcall
jl
dec
stc
out
scas
movsl
shll
push
cwtl
mov
mov
xor
sahf
outsb
shlb
int3
cmp
inc
lcall
into
sub
movsb
jbe
fcompl
test
lret
or
fisttpl
adc
push
dec
stc
shll
jmp
std
aad
mov
loopne
test
push
out
push
or
pushf
sub
les
cmpsl
xor
adc
repz
js
in
sbb
jns
mov
mov
scas
mov
stos
xor
stc
addr16
in
pop
jmp
lahf
xor
repnz
push
jbe
sub
pusha
adc
ljmp
xchg
arpl
mov
lret
add
cmpsl
lahf
mov
push
sbb
mov
in
outsl
cmp
jae
aam
mov
std
loop
jns
add
jnp
jbe
and
stc
dec
xchg
xor
fimull
pusha
hlt
push
inc
mov
xchg
mov
pop
sub
xchg
pushf
stos
jl
cld
mov
cmpsl
jnp
pusha
mov
xchg
icebp
daa
cmp
inc
xor
cmc
or
aaa
inc
adc
shlb
cwtl
add
pop
lahf
xchg
jmp
mov
in
add
inc
jnp
repnz
mov
idiv
arpl
inc
pop
jecxz
out
testl
bound
loope
jmp
push
sarl
mov
adc
jp
adc
pop
insb
add
jno
xchg
je
sbb
jnp
add
dec
adc
mov
mul
arpl
xchg
sub
mov
call
es
mov
stc
xor
gs
daa
pop
mov
cmp
xchg
sub
shl
add
inc
sub
inc
mov
cmpsb
dec
and
jns
and
das
shll
fcomps
data16
sub
fnstenv
add
cmp
stos
sub
cmpsl
or
je
push
mov
jecxz
movl
shlb
mov
aam
cmp
push
mov
xlat
int
xchg
out
test
push
decl
xor
adc
xchg
testb
dec
aad
out
jns
hlt
fildl
mov
loopne
pop
and
das
mov
lods
adc
push
dec
hlt
mov
fwait
and
mov
aaa
fcmovu
sti
dec
or
mov
or
add
xor
ret
aaa
dec
sbb
ss
cmc
xchg
fwait
psrld
lcall
lock
and
add
pop
push
xchg
xchg
mov
inc
into
inc
xchg
push
jle
sbb
jae
pop
cmp
push
arpl
icebp
mov
cmp
pop
sub
push
sbb
push
call
push
mov
lret
and
insl
xlat
dec
and
or
dec
int
pop
cmp
and
mov
xchg
lods
enter
jp
cmp
push
mov
iret
mov
ss
jns
and
dec
xor
and
sbb
pop
fimull
test
insl
test
pop
dec
ret
and
inc
push
xor
std
and
movsb
mov
mov
dec
test
ds
enter
mov
bound
sub
das
lock
push
fucomi
lret
imul
push
clc
cli
sti
rolb
rorl
je
mov
cmp
cmp
call
clc
imul
push
cmp
xor
popf
mov
je,pt
push
mov
mov
rorb
ror
jae
fstps
fisttpl
and
iret
sbb
inc
dec
sbb
sub
es
loop
jb
insl
mov
xor
jecxz
arpl
xchg
dec
scas
pop
shr
jbe
push
dec
xor
dec
fldenv
sbb
push
dec
aas
fistpl
lock
rol
and
jp
xchg
dec
loopne
cld
push
fmuls
xor
pop
jo
ficomps
insb
xor
pop
lock
pop
cmc
push
inc
sub
cmp
aad
and
test
push
inc
mov
push
leave
pop
add
jmp
mov
adc
hlt
add
lcall
xchg
dec
int
outsl
xchg
daa
xor
inc
push
loop,pn
jno
iret
ss
std
scas
ja
sbb
cmp
push
xchg
mov
cld
rep
cmc
mov
inc
cmpsl
mov
mov
sub
ds
mov
scas
lock
shl
sub
sbb
mov
push
push
fistpl
lahf
xchg
xlat
pusha
arpl
loopne
hlt
jnp
insl
aad
jg
fwait
imul
gs
xor
iret
mov
add
add
test
icebp
pop
lret
xor
push
scas
mov
sbb
mov
ss
aad
dec
aaa
adc
fildl
out
iret
data16
mov
gs
push
and
dec
inc
lods
je
jne
lahf
mov
or
ds
or
or
jbe
xchg
dec
ret
rorl
flds
push
lods
push
stos
fstl
call
xor
lods
jo
imul
cli
fwait
pop
pop
ret
pushf
pop
mov
out
call
adc
aaa
pop
and
shlb
sub
stc
in
jp
cs
lahf
sahf
fsubrs
dec
loope
insl
dec
les
mov
fstl
fwait
stos
scas
mov
mov
rcr
imul
int3
push
fcmovbe
or
cmc
popa
sub
pop
cmpsl
out
push
lret
stc
jae
cmpsb
sti
int
mov
pop
in
sbb
divl
shll
xchg
subb
mov
adc
push
popf
sahf
cwtl
adc
aaa
ret
scas
cli
mov
cmpsb
jns
addr16
cmpb
or
cld
fstps
xchg
test
add
jno
cmp
xlat
cmp
cmp
andb
cmc
cli
repnz
call
enter
mov
mov
adc
std
pop
movsb
xor
les
jle
push
sub
or
xchg
fsubl
adc
sbb
scas
outsb
and
jecxz
jno
mov
stos
ds
in
out
cmpsl
jae
xchg
test
icebp
dec
push
pop
mov
andl
mov
mov
adc
xor
dec
popf
jne
pop
testb
mov
psubusw
fiadds
mov
fldenv
or
movups
mov
jo
mov
popw
pop
rol
rcrb
sti
out
dec
aam
or
adc
sbb
add
inc
into
cmc
addr16
cmp
pusha
into
or
push
sahf
cld
iret
cmp
repz
cs
rcrb
outsl
pop
cltd
bswap
pusha
out
cmp
mov
and
scas
jmp
das
push
xchg
sub
ss
insl
movsb
inc
adc
mov
pmulhuw
iret
sbb
ds
loopne
dec
imul
aad
jne
lret
fstpt
and
aad
cmpl
mov
push
mov
shr
popf
rcr
repz
push
test
inc
aad
push
or
aaa
mov
xor
mov
cmp
dec
insl
loop
iret
inc
push
inc
dec
push
jns
pop
fwait
lods
inc
jmp
jns
in
rcl
jle
aam
lcall
test
sub
movsl
push
and
mov
mov
lods
cmp
mov
ficompl
xor
xchg
pusha
inc
in
int3
test
test
sti
mov
outsb
popf
jl
cmp
and
mov
inc
je
xchg
cs
and
ljmp
lds
ror
std
xchg
out
dec
enter
mov
xchg
adc
push
dec
or
jbe
test
shlb
sbb
insl
aam
addr16
std
mov
inc
jb
add
or
cmp
fcomps
sti
hlt
xchg
pop
pop
ficomps
sbb
mov
or
hlt
cmp
adc
sub
mov
push
add
mov
cld
sbb
add
xchg
testl
clc
push
and
xor
rorb
out
cmp
add
popf
roll
push
jnp
or
push
lods
jmp
push
sub
pop
scas
push
push
adc
cs
mov
clc
jl
decb
jns
aaa
mov
add
xlat
lds
js
xchg
out
xchg
in
sub
sub
push
adc
fwait
std
leave
push
push
pop
or
daa
xor
das
das
jg
push
lea
xchg
pop
div
jbe
sbb
fildl
xchg
subb
out
inc
mov
inc
mov
loope
iret
ret
out
aaa
movsl
lret
push
call
cs
mov
push
clc
sub
push
xchg
inc
push
mov
mov
fisttpll
adc
cmp
insl
gs
adc
add
movsb
add
test
jmp
rcrl
cmpl
ss
outsl
mov
shrb
mov
mov
cmp
clc
in
jp
jmp
sub
enter
mov
int3
mov
and
or
add
mov
popa
insl
push
jbe
adc
mov
fistl
jo
in
pushf
sahf
add
add
mov
lods
daa
dec
mov
imul
jge
xchg
inc
jmp
pop
pop
iret
es
or
mov
and
out
sti
mov
mov
and
rorl
pop
dec
sbb
pop
cmc
cltd
popf
in
aas
in
dec
jno
adc
rolb
and
mov
das
and
adc
int
clc
inc
sbb
sti
ret
jne
fs
stos
rorb
jmp
sbb
inc
mov
sub
mov
fdivrp
sub
imul
test
sbb
sti
inc
and
rol
mov
mov
loopne
cwtl
out
loop
icebp
fs
add
enter
aas
ljmpw
or
cltd
lret
pop
mov
ret
ret
outsl
cmp
pop
jno
adc
sub
mov
movsb
jle
cwtl
adc
or
xor
mov
aas
insl
inc
jge
fcoml
jmp
lods
outsl
and
out
sbb
pop
dec
sub
pop
jnp
arpl
sahf
outsb
rcrl
out
mov
sub
lcall
mov
push
jge
mov
push
adc
outsb
cli
pop
daa
into
sub
in
xchg
jae
and
inc
inc
mov
or
ret
in
mov
popa
sbb
scas
push
arpl
clc
out
push
mov
movsb
mov
roll
sbb
pop
adc
insb
cmpsl
cmp
inc
mov
fcomp
push
mov
scas
ret
in
mov
push
popa
and
pop
std
jae
mov
xchg
sbb
mov
sahf
cmp
movsl
arpl
insb
push
add
jnp
icebp
push
sub
mov
scas
dec
add
sbb
xchg
jmp
lods
sub
xor
inc
aad
xchg
or
jne
jno
das
jb
inc
ds
xchg
cmp
lea
or
sbb
push
fs
stc
inc
cmp
sub
lcall
push
add
add
cli
mov
cld
xor
mov
rorl
xchg
out
pop
jns
fdivrs
dec
test
push
dec
hlt
pop
in
in
mov
daa
hlt
int
int
faddl
xchg
push
inc
or
mov
imul
cltd
push
adc
mov
aas
mov
jae
cmpsl
icebp
sbb
add
iret
out
pop
xchg
push
xor
cmp
sbb
in
out
scas
dec
decl
lret
imul
push
sbb
pop
adc
movsb
pop
in
rolb
cmp
push
out
lods
mulb
push
jle
in
adc
and
jno
inc
mov
sbb
jne
or
jmp
das
fists
and
loopnew
ret
and
sub
cwtl
movsb
mov
mov
and
in
out
test
or
push
xor
or
xorl
mov
mov
ja
faddp
ja
xlat
push
divl
sub
and
sub
xchg
outsl
sbb
rol
ficomps
lcall
fcmove
push
jp
jp
lcall
cmpsl
xor
inc
jb
les
aaa
ret
addr16
sbb
mov
pop
setge
xor
adc
mov
jo
xor
loop
dec
clc
pop
cwtl
loop
add
fadd
mov
fs
popa
lock
mov
imul
in
push
push
cltd
sbb
dec
inc
inc
test
pop
push
mov
push
call
sub
popf
sbbb
roll
cmp
nop
pushf
hlt
push
mov
mov
subl
fisttpl
sub
adc
lods
inc
inc
mov
pop
ficoms
mov
pop
jecxz
add
xlat
adc
adc
sbb
stos
inc
fbstp
push
and
popa
and
outsl
mov
jo
mov
pop
lahf
int3
scas
pusha
xchg
mov
rcll
outsl
xor
je
cmp
stos
adc
jecxz
leave
cmp
clc
xlat
inc
stos
and
or
mov
leave
pop
shl
vcmpord_sss
mov
sub
les
test
xchg
sbbl
insl
mov
call
ja
lds
daa
scas
xchg
ret
cpuid
mov
push
mov
out
sub
insb
ds
notb
in
and
sbb
orl
dec
in
es
mov
mov
mov
sbb
lock
mov
aas
and
shlb
pusha
inc
cmpsl
inc
mov
ljmp
push
das
roll
dec
mov
push
ljmp
xchg
clc
lods
dec
push
mov
cs
xor
jns
pop
cs
mov
cmp
inc
into
pop
add
cld
adc
xchg
aad
lcall
das
xchg
and
aad
or
fstps
int
notb
adc
jo
stos
idiv
sub
loope
mov
cmpb
fwait
popl
std
ljmp
dec
adc
cli
pop
or
mov
and
xor
cmp
out
sbb
mov
sahf
outsl
inc
pop
imul
pop
xchg
stos
push
xchg
call
push
push
int
push
std
ffreep
cmp
mov
fstpt
lods
das
popa
or
in
pop
sub
out
mov
push
fcoms
clc
push
dec
je
mov
loopne
fdivrl
aas
mov
push
cs
cmp
and
mov
dec
in
sti
mov
outsb
jge
loope
loope
adc
inc
bswap
leave
pop
mov
mov
push
pop
xor
icebp
xchg
hlt
cwtl
xchg
hlt
lods
insl
push
dec
rorl
cld
push
sub
imul
sbb
jge
sbb
mov
jnp
xorb
mov
mov
mov
mov
aad
dec
push
sbb
and
xor
lods
mov
aas
sti
and
inc
push
imul
push
fiaddl
sub
jl
push
add
jg
xor
pop
enter
in
popa
and
mov
sub
inc
lret
aam
fucomp
shr
xchg
jae
sbb
lods
int
mov
les
xchg
int
int
sbb
std
aas
nop
inc
push
or
mov
ret
add
lcall
mov
jle
sub
push
xchg
sbb
mov
mov
sub
test
jle
inc
xchg
in
xor
jbe
ljmp
inc
mov
dec
movsb
sub
enter
jne
gs
lret
jle
add
testb
jns
mov
mov
ret
insl
inc
gs
insl
orps
ja
pop
dec
jecxz
add
test
pop
mov
mov
push
sub
pop
arpl
cmp
push
call
loop
andl
into
into
jbe
pop
mov
xchg
add
and
cs
inc
lret
mov
adc
mov
pushf
push
lret
pusha
inc
outsl
inc
rcr
movsl
test
and
xchg
mov
dec
ret
jnp
cwtl
mov
mov
sti
xchg
shrl
mov
out
push
subl
gs
fwait
sub
add
xor
mov
pop
jg
pop
stos
pop
lds
outsb
sub
mov
into
out
mov
outsl
mov
mov
dec
sub
daa
popf
cmpsb
pop
sbb
add
test
mov
test
and
xor
adc
daa
sub
fimuls
negl
out
in
or
cmc
push
inc
pop
mov
cs
rcrb
popf
cmp
loopne
or
scas
imul
cmc
sub
mov
lea
sbb
lahf
out
ljmp
fstl
test
jge
jbe
jmp
adc
mov
xor
mov
xchg
and
sub
lock
out
ret
cmp
mov
jecxz
lret
sbb
aad
insb
mov
sahf
nop
jb
xor
pop
popa
fstps
cmc
fidivl
cmp
out
dec
shlb
jle
add
cmp
repnz
fs
mov
nop
hlt
mov
and
mov
out
mov
dec
lds
stos
push
aas
sub
movsb
jmp
imul
js
mov
cs
jmp
jp
inc
sarb
xchg
sahf
jns
into
sti
scas
lahf
ret
and
je
xchg
rcrl
push
stos
das
shll
mov
mov
pavgw
loope
test
sub
ficompl
dec
lcall
xchg
pop
jle
sahf
push
insl
cld
popf
jecxz
cmpsb
sbb
js
mov
std
es
shrb
cmpsl
push
ss
adc
lods
stos
pop
adc
push
cmp
jo
shrb
add
push
in
cmp
test
rcrl
loop
xchg
inc
inc
leave
pop
lds
hlt
stc
sbb
adc
lds
stos
arpl
pop
outsl
sbb
xor
xchg
pmaxsw
xor
insb
popa
mov
push
mov
mov
ljmp
inc
dec
mov
cmp
mov
mov
dec
negb
push
loopne
mov
inc
push
push
insb
sti
mov
jmp
outsb
fildl
mov
sbb
xchg
and
jno
shll
lret
jne
bound
imul
imul
pop
enter
xchg
dec
lret
cmpsl
push
inc
push
enter
and
roll
aaa
loopne
push
popa
stos
dec
shlb
jl
pop
lods
dec
dec
push
into
cmpsl
hlt
dec
nop
js
pop
cmc
mov
and
andl
inc
shrb
stos
and
stos
test
aad
inc
add
push
jl
jl
mov
xor
cmp
ffreep
shll
mov
pop
in
addr16
pop
mov
sbb
lods
jecxz
aad
rorl
mov
cld
test
fnstcw
push
pusha
jbe
adc
jne
xor
das
adc
xchg
ret
or
out
jns
inc
ret
popf
jnp
loopne
xchg
loopne
cltd
add
ljmp
cmp
aam
gs
xor
rorb
pop
mov
sarl
cmp
xchg
pop
adc
rep
mov
fimull
inc
bound
out
ret
jl
fisubrl
cmpsb
fisubl
aas
icebp
jno
jge
shl
jbe
or
insl
jns
cmp
std
jnp
stos
out
pop
shrb
fldt
movsl
lods
xchg
add
sbb
push
aaa
push
js
ss
cmpsb
int
xchg
js
xor
push
jle
ss
pop
mov
ds
sbb
mov
sub
cmpsl
dec
dec
mov
mov
pop
aad
mov
lock
mov
and
and
loopne
data16
sbb
orb
jle
fldenv
clc
xchg
clc
mov
popf
dec
outsb
add
jle
lret
movl
hlt
pop
and
or
out
jbe
sbb
daa
pop
cs
iret
int
into
add
nop
sub
fstps
mov
mov
mov
jge
es
xchg
xchg
push
out
sub
aam
pop
addb
add
push
push
push
movsb
xor
fwait
xor
adc
add
aas
xor
adc
outsl
mov
cwtl
add
cmp
fmul
ret
mov
sbbb
and
cmp
dec
lcall
xor
outsb
out
push
cmp
sbbl
outsl
pop
sub
or
add
push
adc
jne
and
data16
sub
icebp
shlb
or
lods
mov
sbb
jle
addr16
lods
add
mov
int
and
or
push
dec
pop
cmp
fstpl
pop
cs
sub
mov
sub
add
and
addr16
aad
orl
lds
outsl
mov
sub
clc
shll
lret
adc
xor
xor
leave
cmc
pop
xchg
cltd
testl
mov
stos
ret
cli
fiadds
mov
aas
nop
test
sbb
repnz
xchg
fcmovne
mov
push
dec
lret
push
mov
mov
cs
movsb
xor
add
jl
clc
add
aad
outsl
outsl
cmp
lock
inc
scas
mov
dec
dec
sub
scas
gs
or
adc
ret
mov
test
push
rclb
sub
idiv
scas
cltd
pop
fs
outsb
mov
fcomps
int3
test
adc
push
jecxz
sub
mov
stos
adc
sbb
popf
gs
xchg
cmpsb
push
clc
loopne
pushf
fs
jg
and
mov
xchg
ret
dec
dec
neg
in
sbb
iret
pop
imul
sar
in
xor
lahf
imul
daa
add
jnp
stos
cmc
cmp
js
test
jo
or
xor
inc
movsb
lcall
lods
jle
dec
rcrb
test
sub
pop
loopne
push
test
out
cs
sub
rol
sbb
addr16
ret
lods
xchg
pop
test
arpl
test
xchg
outsl
out
nop
and
mov
mov
pop
jmp
jmp
add
jnp
scas
mov
lret
lods
jae
mov
add
add
mov
stc
sti
and
pop
int3
jbe
shl
loop
pop
or
add
mov
mov
insb
imul
push
jmp
pop
out
jmp
pop
jae
xor
inc
pop
xchg
jmp
sbb
stc
pop
adc
mov
or
subl
outsb
xlat
popf
cli
lods
rclb
adcl
lret
icebp
fldenv
push
repz
xor
bound
mov
dec
dec
cltd
int
sti
insb
jns
decb
xor
sub
mov
and
add
adc
test
jecxz
hlt
or
lret
idivb
jg
xor
cmp
push
int
xchg
push
cmp
xchg
pop
loopne
gs
dec
jp
sub
pop
mov
add
mov
xor
dec
jnp
dec
loope
jge
or
inc
dec
mov
movl
mov
xchg
bound
or
jmp
push
mov
xchg
xor
cmp
in
xor
pop
fstpt
bound
arpl
inc
dec
repnz
les
and
in
imul
mov
fs
scas
ljmp
pop
cli
sbb
aaa
jp
ds
inc
in
shll
sbb
push
push
stc
cmpsl
sbb
xlat
fwait
xchg
xchg
add
xchg
rcr
add
outsb
lods
loopne
inc
mov
sub
sbb
and
and
out
push
mov
aaa
adc
mov
imul
js
insl
cmp
and
adc
adc
jae
xor
adc
sub
jbe
mov
and
and
push
cmpsl
lea
fdivl
or
jp
rcll
orb
jns
sub
mov
lea
std
inc
hlt
adc
pop
outsl
mov
ficompl
inc
pop
insl
xchg
fsubrp
test
mov
mov
repz
mov
or
bound
xchg
insl
push
mov
rcl
repnz
lcall
jg
in
xor
inc
fcomip
es
loope
push
sub
sub
call
xchg
test
mov
divl
mov
nop
sbb
shlb
and
insb
sbb
mov
out
adc
mov
pop
push
shll
sti
imul
js
or
mov
or
sbb
lods
jmp
mov
jle
xor
dec
pop
add
cmp
sub
sbb
ret
jno
pop
push
test
loope
lcall
push
aad
test
cli
or
mov
inc
inc
shll
aaa
fisubrl
mov
mov
inc
push
add
pxor
mov
mov
or
pop
outsb
xor
std
cmpsl
mov
xchg
pop
lods
cwtl
jne
cmp
add
lcall
cs
push
dec
adc
aaa
dec
xlat
inc
sub
fstpt
xchg
adc
std
jno
jno
incb
dec
decb
leave
xchg
ljmp
cmp
jp
add
adc
lods
mov
pop
xor
dec
popa
loop
ja
push
cmp
arpl
push
std
and
cmc
subl
mov
push
dec
sub
aam
cwtl
adc
and
sbbl
aas
outsl
pop
mov
jle
dec
jns
std
mov
or
or
inc
clc
mov
cmp
adc
pop
push
mov
or
adc
dec
movsb
and
xor
jae
aaa
stos
inc
ds
pop
jl
loopne
fsubs
pop
cmpsb
jmp
and
les
cli
dec
or
and
sbb
out
les
dec
add
into
aaa
inc
repnz
jecxz
daa
jo
gs
push
loop
ja,pn
mov
js
add
sti
mov
adc
outsl
cmp
and
neg
popfw
xlat
jmp
xchg
sub
xchg
pop
lds
stos
fldcw
movsl
mov
push
andb
lret
xor
mov
pushf
xchg
out
xchg
mov
nop
ja
cld
daa
xchg
test
adc
xchg
mov
rol
loopne
das
mov
and
hlt
test
add
push
xor
mov
int
cmp
outsl
ds
nop
inc
pusha
loopne
lret
mov
or
out
cmp
std
mov
mov
repnz
pusha
adc
test
js
jno
out
jg
sub
inc
aam
inc
js
dec
jecxz
mov
push
popl
icebp
or
fs
fldcw
xor
ss
decl
cmpsb
pop
das
fwait
xor
daa
jno
lock
adc
xor
pop
dec
mov
sub
pop
js
push
shl
pop
mov
ss
pop
jl
scas
or
or
fs
in
inc
clc
arpl
xchg
cmp
cmc
mov
in
fstpl
arpl
and
daa
das
aam
in
movsl
mov
add
stos
daa
xchg
ret
test
push
arpl
mov
mov
dec
dec
pop
orb
in
ljmp
mov
adc
pop
sbb
mov
stos
push
and
mov
sub
loope
and
orl
repz
xlat
xor
add
or
pop
add
lds
in
sti
int3
addr16
jle
pop
or
call
mov
adc
out
fbld
or
and
js
xchg
outsb
and
xor
pop
mov
fldcw
fstps
arpl
xor
push
cltd
sub
sbb
insl
mov
jbe
test
test
dec
sub
pop
mov
pop
jae
xor
sub
cmc
xor
iret
movsb
mov
xchg
repnz
xchg
mov
jo
cmp
pop
leave
in
mov
cwtl
push
addr16
outsl
mov
dec
lock
cmpsl
rcrb
push
movsl
pusha
jmp
dec
movsb
xchg
lcall
data16
scas
fildl
je
pop
outsl
lock
inc
arpl
pop
jns
add
and
loop
xlat
xlat
sub
mov
sbb
jae
into
cmpsb
loop
scas
inc
js
push
call
mov
push
das
stc
fnclex
inc
out
addr16
xor
imul
push
or
ret
test
xchg
addr16
insb
jle
data16
sti
fimull
sbb
imull
int3
test
les
loop,pt
sahf
aad
mov
std
negb
jae
movsb
pop
pop
xchg
xchg
mov
cltd
lods
bound
mov
andl
mov
xchg
mov
inc
sub
in
push
sarb
dec
mov
insl
div
cmc
mov
mov
push
rcr
push
cmp
scas
lret
shll
sbb
xchg
movsb
cld
cltd
mov
mov
mov
mov
cmp
ja
jp
adc
push
leave
xchg
lret
scas
andb
and
push
test
int3
cmpsb
mov
in
hlt
fldt
mov
ja
mov
jl
fadd
imul
adc
lret
push
push
mov
lret
add
inc
in
scas
xchg
negb
movsb
gs
cmpsl
cmp
cld
xchg
mov
arpl
sub
cwtl
dec
sahf
inc
push
int
sbb
inc
in
and
cwtl
cwtl
and
addr16
pop
into
sbb
sbb
jo
jno
or
mov
sub
stos
aad
pop
or
cmpsl
ficomps
mov
mov
adc
jmp
sbb
mov
mov
xchg
xchg
call
sti
test
int3
jge
adcl
movsl
sti
insl
add
xchg
loope
inc
jge
add
sub
sahf
lret
push
fiadds
outsl
in
ja
pop
lock
cwtl
std
js
sub
lret
ret
into
lods
mov
scas
mov
push
lods
ss
loopne
jmp
jae
ret
xchg
sahf
push
fdivrl
pop
push
dec
call
ret
pop
push
adc
pop
mov
mov
outsl
movsl
pop
popa
mov
lret
or
sti
jl
and
rcll
mov
jo
popf
and
lea
jns
icebp
lahf
imul
mov
movb
in
jle
xchg
in
pop
imul
dec
cmp
fstpt
mov
outsb
int3
push
out
outsb
ficomps
add
into
jl
call
mov
jge
lods
ljmp
xchg
fwait
aaa
ret
mov
mov
int
cmp
mov
add
push
sub
pop
faddl
or
xor
jg
test
js
cmp
mov
push
and
dec
push
jne
dec
inc
rclb
andl
cmpl
lods
popa
xor
mov
popa
ret
cmc
jb
sbb
ja
mov
pop
cmp
arpl
fnsave
mov
popf
pop
dec
xlat
stc
sub
push
push
add
shr
add
inc
insb
and
xchg
jne
xchg
xchg
lahf
into
stos
popf
xchg
mov
and
loopne
stc
aas
imul
jb
mov
xor
sub
stos
jmp
adc
pop
and
repz
aad
cmp
xchg
loopne
mov
or
add
mov
xor
dec
mov
inc
and
leave
rolb
int
sahf
adc
sbb
push
pushf
and
bound
shrb
out
ja
cmp
fidivl
cmp
pop
enter
add
mov
jbe
paddsb
push
mov
adc
out
cmp
rorb
insl
and
sbb
mov
mov
dec
insb
dec
stos
or
iret
into
cs
nop
aaa
adc
fcomip
sbb
jae
cltd
mov
jg,pt
cmp
popa
ret
insb
sub
notl
jbe
push
aas
in
jno
xchg
repnz
pop
push
jno
icebp
jo
test
push
push
inc
add
scas
xor
mov
xchg
rorl
lds
arpl
scas
fucomi
fisubs
mov
inc
jno
mov
sub
and
scas
dec
fwait
addr16
icebp
add
pop
sub
insb
sub
cld
xchg
hlt
pop
cmp
dec
mov
push
in
add
enter
push
rcll
lcall
fs
data16
ss
and
dec
pop
jl
push
into
sub
loop
hlt
ljmp
cmp
or
xor
xor
xchg
pusha
mov
sbb
insl
xlat
pop
movsl
in
imul
cmp
aad
jmp
imul
cld
jmp
test
std
fs
jne
xor
add
jbe
push
mov
push
test
sbb
in
loopne
dec
dec
stc
jne
xor
cmp
pop
push
push
les
cmc
mov
jge
jnp
sub
in
sub
or
repz
roll
xchg
jmp
das
cli
in
or
cmc
lods
invd
mov
sub
xor
pop
cmc
sarb
pop
dec
loopne
jo
js
je
xchg
test
inc
add
test
mov
inc
mov
popa
xchg
call
or
repz
sub
mov
dec
and
adc
adc
pop
cli
je
dec
mov
das
cmc
cs
cld
sub
push
je
mov
mov
sti
std
cmp
or
int
jecxz
lock
mov
jle,pt
push
popa
inc
add
push
cmp
aad
enter
dec
jnp
aad
xchg
into
fnstenv
mov
ret
pop
push
jmp
push
xor
mov
or
aaa
mov
fldt
mov
test
pop
call
stos
push
add
pop
ds
sbb
pushf
mov
or
mov
cli
imul
scas
outsb
fidivrl
lock
ljmp
mov
in
scas
rol
aam
mov
or
jge
push
push
int
jle
dec
add
adc
imul
mov
or
outsb
adc
jge
jo
loopne
mov
xor
cmpsl
fsts
in
xor
scas
sbb
sahf
and
inc
xchg
insl
daa
mov
pop
bound
add
stos
in
xor
das
and
add
mov
dec
xchg
mov
add
sahf
sub
out
ja
xchg
mov
xchg
pushf
cmpsl
mov
shlb
adc
or
shl
movsb
out
mov
adc
jp
push
stc
dec
xor
into
jmp
cmc
mov
test
js
les
inc
and
and
xchg
add
adc
and
push
mov
lret
inc
sub
shll
mov
mov
int
fcomps
rcll
ds
out
or
mov
out
sub
pop
mov
rclb
xchg
inc
jg
pop
insb
add
sahf
pop
jg
mov
xchg
scas
jb
orb
test
jmp
dec
xchg
sahf
test
mov
mov
sub
aad
lea
cld
cmp
mov
mov
mov
prefetcht1
fldz
loopne
sub
lret
push
pop
or
in
mov
shrl
dec
add
sub
push
sub
imul
mov
leave
or
and
mov
test
jg
jge
jo
shrb
mov
pop
emms
rcrl
sbb
pop
xor
xchg
repz
jl
shlb
loopne
or
xor
and
iret
call
mov
stos
jbe
lcall
popf
cld
xor
and
xchg
sti
clc
repnz
add
adc
adc
fcmovu
lret
cmp
repnz
pop
pop
sub
sub
cmpb
sbb
ret
and
xor
sbb
aam
ljmp
es
les
pop
xor
out
xor
test
sbb
lods
xchg
jbe
lock
int3
xchg
mov
adc
dec
jnp
adc
and
ss
cmpsb
aad
xlat
adcb
mov
sub
aad
pushf
mov
sub
pop
xchg
rol
lods
sbb
nop
cmp
xor
loop
xor
lahf
call
pop
sbb
ss
jnp
lock
xorl
cli
cmc
into
push
mov
jmp
arpl
jne
pop
add
into
addr16
daa
cmp
jnp
xchg
out
pop
mov
repnz
filds
sub
mov
ss
arpl
ss
ret
inc
enter
lret
test
iret
fildll
ret
jb
mov
xchg
scas
out
test
xchg
leave
das
pop
sbb
je,pn
mov
xchg
bound
mov
int
xchg
fwait
xchg
inc
pop
fldt
inc
das
pop
out
iret
int
addr16
adcl
test
test
xor
out
jno,pt
outsb
jge
xchg
outsl
in
mov
mov
fidivl
xchg
mov
das
rorl
ret
lcall
lret
das
mov
dec
fcomip
fwait
mov
negb
push
int
cld
fdivl
add
out
sbb
cmp
jno
cmp
insb
cmp
pop
push
data16
adc
bound
and
dec
movsb
and
rcrl
add
fcoms
xor
nop
lock
subl
mov
iret
cmpsb
lahf
push
or
mov
push
dec
xor
fsubr
or
xchg
pop
fwait
mov
fcoml
dec
into
dec
int3
mov
outsb
push
test
cmp
insb
and
cmp
ret
mov
pop
test
push
push
jmp
enter
cmc
mov
cmp
test
xor
leave
xor
cltd
xor
out
push
ds
dec
mov
jb
shlb
mov
dec
add
dec
add
jg
inc
out
es
xor
adc
movsb
jnp
mov
xchg
cwtl
mov
push
lea
push
hlt
out
mov
stos
fmulp
repz
sbb
add
sbb
sub
mov
xchg
fildll
xor
pusha
push
cmp
repnz
jo
in
movsl
fwait
sbb
and
xchg
xchg
mov
enter
lock
inc
ljmp
adc
dec
cmp
imul
cmp
hlt
pop
cmp
mov
push
sub
sub
mov
and
dec
add
mov
cld
mov
mov
mov
mov
mov
and
cmpsl
daa
jl
push
std
add
xchg
dec
fcom
test
xor
mov
sbb
lock
inc
inc
sbb
jg
cld
daa
aad
shll
inc
out
jecxz
mov
sahf
xor
sbb
in
or
mov
fmul
movsb
cmp
mov
push
out
in
punpckhwd
push
popa
repnz
lods
xchg
pop
xor
pop
xor
sub
ds
insb
xchg
clc
dec
outsl
adc
in
mov
mov
scas
scas
clc
fisubs
inc
sub
push
lcall
mov
fstpl
dec
loopne
cmp
mov
and
push
push
push
and
cmpsl
test
adc
xor
dec
out
lret
sbb
shll
js
adc
pop
rorl
dec
jecxz
push
ret
add
in
pop
nop
shlb
mov
stc
rcrl
negl
sti
dec
dec
outsl
dec
adc
shlb
lds
ss
mov
jg
dec
pushf
dec
fs
mov
mov
push
mov
dec
out
sub
jecxz
push
inc
ret
stos
xchg
xor
mov
pop
dec
addr16
xor
dec
in
mov
int3
xlat
cmpb
jne
and
subl
test
loop
cwtl
cmpsl
or
arpl
dec
xlat
or
adcb
inc
xlat
sub
push
or
pop
inc
sbb
popa
popf
xchg
in
sahf
mov
push
iret
movsb
movb
test
or
stos
mov
loop
fwait
cmc
into
adc
test
mov
mov
cmpsb
pop
pop
jne
stos
outsl
pop
fisttpll
in
or
popa
mov
or
and
movsl
xchg
pop
pop
daa
cli
adc
mov
xlat
clc
fsub
adc
push
aad
sub
hlt
in
cli
lcall
mov
add
push
inc
xor
dec
adc
movsb
loop
mov
insb
imul
pop
popf
xchg
int
add
or
sarl
push
pop
mov
xchg
pop
jnp
sub
out
outsl
outsl
and
jnp
push
aad
and
pop
in
mov
ljmp
dec
jae
mov
sbb
addl
data16
shll
in
leave
aas
cmpsl
dec
leave
aad
test
femms
stos
movsl
inc
xchg
jb
sub
lods
lret
push
mov
xchg
mov
lcall
inc
mov
or
cmpsb
mov
or
repnz
mov
js
add
jle
xchg
cmp
cmc
jle
mov
and
inc
lds
jmp
in
mov
sahf
xchg
sbb
mov
sar
and
mov
jbe
jno
in
jg
mov
push
in
jl
dec
push
test
mov
into
xchg
jb
pop
pop
incl
adc
lods
fnsetpm(287
insl
add
mov
call
lds
pusha
addb
mov
cli
in
shll
or
inc
ret
insl
stc
jle
imulb
push
pusha
rorb
sbb
or
mov
loope
pop
pop
add
jae
out
out
insl
sub
int3
add
mov
in
jns
pop
jp
inc
clc
inc
cmp
and
scas
or
rorb
je
icebp
mov
cld
outsl
jmp
inc
call
aaa
jno
xchg
mov
jecxz
fstps
in
add
gs
push
pop
pop
cmp
cltd
push
andb
clc
mov
int3
out
mov
jge
push
xchg
cmp
ja
insb
out
mov
mov
ds
jmp
mov
mov
mov
cmpsb
shll
and
sub
mov
ret
into
pop
xchg
add
cmp
rorb
jne
andl
data16
sbb
mov
adc
daa
sub
test
push
push
xlat
loope
les
out
push
inc
orb
dec
and
and
sbb
icebp
es
push
jns
fcom
xchg
pop
stos
xor
dec
jmp
inc
inc
or
xor
jge
and
lds
pop
push
clc
and
pop
movsb
or
test
or
ds
xchg
dec
cmp
mov
sbb
xlat
ljmp
or
dec
ror
cmpsb
cli
and
jg
mov
mov
aam
js
repnz
test
out
test
insb
mov
popa
pop
rorl
push
inc
lea
dec
orl
mov
mov
lret
jns
std
and
arpl
mov
xchg
xchg
adcl
jno
cs
cmc
data16
and
xor
xchg
mov
js
cmp
imul
mov
inc
sbb
add
mov
lret
int3
fmull
out
inc
popa
cmp
mov
adc
andb
cmp
cli
jnp
adc
dec
sbb
jl
mov
mov
pop
xchg
jp
pop
inc
inc
out
icebp
mov
push
sarl
push
ljmp
insb
push
movsb
jne
xor
xlat
and
cmpsb
or
rcll
cmp
xchg
ror
test
push
les
mov
dec
dec
wrmsr
mov
je
repz
sarb
sub
in
jae
mov
fisubs
cltd
pop
sti
inc
ret
pop
pop
xchg
and
test
jle
or
test
clc
cli
negl
mov
out
pusha
aaa
aam
enter
jbe
inc
movsb
dec
dec
lods
sarb
in
je
jge
iret
into
mov
xor
mov
leave
inc
jno
add
or
fildll
lds
mov
loopne
dec
arpl
test
mov
and
xchg
jecxz
add
vdivss
pusha
adc
jl
push
add
sbb
mov
mov
nop
xchg
pop
xlat
dec
inc
dec
es
jl
fwait
ds
push
mov
roll
test
test
aam
je
out
stos
jg
popf
cmc
dec
dec
push
xchg
mov
repz
sti
fs
mov
aad
mov
xor
sub
shrl
mov
add
pop
hlt
stos
jge
inc
cmp
xor
pop
xchg
das
inc
add
inc
stos
dec
or
ss
in
outsl
jns
ret
mov
cmp
jnp
mov
sub
inc
sbb
das
rorb
daa
aad
push
xchg
and
scas
add
add
or
sbb
aam
xchg
iret
cmp
mov
mov
imul
adc
xor
mov
jmp
sub
test
ror
add
push
sbb
cli
out
pop
dec
divb
pop
cli
orb
lret
mov
lahf
dec
rcl
dec
mov
jge
adc
sub
or
dec
jle
pop
dec
subb
inc
shl
push
sbb
cmp
fldl
and
in
sbb
stos
cltd
push
cs
cmp
mov
jbe
movsl
cmc
pusha
mov
adc
inc
sahf
sub
jle
mov
sub
adc
mov
testb
imulb
sbb
daa
and
mov
cmp
mov
nop
dec
dec
cmp
jo
outsb
and
bound
pop
int
adc
hlt
xacquire
repnz
sub
fstps
cmp
pushf
mov
sub
ja
sbb
adc
adc
or
hlt
jb
push
shlb
mov
adc
mov
adcl
dec
es
int3
and
jle
xchg
pop
add
pop
jns
push
xchg
push
or
ljmp
clc
mov
and
fnsetpm(287
fistpll
dec
es
push
imul
jne
cwtl
lods
cmp
or
mov
dec
or
inc
dec
inc
bnd
cmpsl
cwtl
mov
mov
inc
inc
pop
xor
into
sbb
shlb
jnp
imul
xlat
xchg
scas
nop
add
std
rcrb
jne
jmp
add
sbb
fdivrs
xor
movsb
inc
outsl
mov
inc
movsb
gs
xchg
insl
and
push
int3
mov
add
cld
jp
push
shrl
push
in
insl
dec
mov
lea
mov
mov
lock
add
test
aam
movsb
divb
dec
cmp
push
mov
push
enter
and
rclb
rcr
lods
jne
fiadds
dec
cs
and
and
xchg
fildll
movsb
adc
jbe
cli
outsl
in
xchg
inc
lods
add
test
sub
pop
xchg
test
inc
add
xchg
cmp
add
dec
mov
call
sbb
xor
sahf
dec
dec
push
aas
jg
adc
imull
test
ret
sarb
mov
pop
ljmp
les
adc
mov
jo
cmpsl
dec
mov
in
pop
pop
cmc
or
jno
mov
lea
add
pop
pusha
push
enter
cmp
nop
push
scas
out
or
test
mov
mov
cmp
jg
jno
ret
in
mov
or
cwtl
and
int3
fidivs
ljmp
inc
push
shl
ret
mov
addr16
and
mov
cmpsl
insb
pushf
cmpsl
ret
mov
pushf
out
cmp
dec
inc
cmp
into
or
into
mov
sub
les
fcomps
out
loopne
xchg
inc
cwtl
mov
sbb
push
mov
push
and
das
fs
xor
pop
aas
jl
ljmp
fcmovnbe
xchg
fsubs
cmpsb
mov
hlt
or
pop
gs
sbb
in
int3
mov
mov
jp
rclb
xchg
jmp
test
mov
and
loopne
jbe
out
inc
push
in
out
arpl
popa
and
mov
repz
sbb
push
popf
les
fbld
cmc
sti
xor
pop
fs
push
xchg
sub
xor
cmpsl
mov
pop
jno
jbe
es
push
aaa
mul
repnz
in
xchg
xor
shld
mov
dec
pop
cmp
mov
sbbl
lods
cmpsb
push
call
in
or
out
or
daa
dec
bound
adc
std
sti
push
push
mov
fsts
jl
lock
bound
scas
add
dec
lahf
jno
inc
popf
add
push
lods
push
jg
adc
addr16
jecxz
push
call
xor
xchg
add
pop
jno
hlt
inc
pop
jecxz
out
add
fistpl
pop
and
mov
push
incb
push
mov
sub
aad
dec
outsl
lods
jnp
and
rclb
sub
jp
jb
dec
xor
mov
fiaddl
pusha
sbb
gs
or
sub
and
movsb
and
push
xchg
icebp
sub
pop
add
ss
into
rorb
inc
scas
clc
xchg
clc
stc
jge
lret
data16
dec
cmp
fs
dec
jecxz
fwait
inc
push
rclb
xor
jb
stc
dec
out
push
or
lret
jae
in
jp
push
cli
sbb
std
pop
inc
pop
push
xchg
in
pop
test
rcll
lods
loope
pop
cmp
mov
xchg
sub
adc
cld
cli
imul
mov
out
xor
mov
jne
and
call
push
cltd
sub
mov
bound
setns
std
stos
rorb
or
loopne
mov
inc
loopne
sbb
jmp
sbb
mov
mov
inc
leave
mov
je
jae
dec
lods
fiaddl
add
les
mov
or
xchg
push
mov
ret
xor
loope
pop
imul
adc
push
mov
repnz
mov
stos
and
pusha
orl
lahf
mov
stos
adc
xor
mov
sub
cltd
les
gs
inc
out
std
in
cwtl
rcrb
outsl
insl
and
pusha
pop
or
mov
insl
mov
daa
leave
mov
stos
push
in
insb
push
addr16
adcb
mov
iret
iret
lds
mov
adc
mov
adc
add
out
das
clc
jne
je
sub
or
out
scas
enter
pop
mov
pushf
mov
pop
fildl
popf
sub
dec
sbb
mov
shll
lods
fldenv
dec
pop
rcrb
sbb
cmp
stc
rcll
or
andl
or
in
push
jb
pop
clc
lods
push
loop
subb
inc
int
mov
out
cmp
sahf
mov
lods
dec
incl
cmp
pop
add
dec
and
andl
scas
xchg
fstpl
or
jns
inc
sbb
and
lea
fcmovbe
cmp
add
mov
dec
test
xchg
adc
imul
fbstp
movsb
push
enter
shr
cmp
hlt
inc
leave
cs
cltd
adc
dec
outsb
mov
int3
xchg
pop
xchg
push
mov
fcomps
mov
mov
and
movsb
fldenv
adc
rorl
push
push
repz
sarl
push
test
fisubs
add
mov
inc
inc
add
stos
test
jecxz
notb
loope
les
or
std
mov
jg
jno
add
sbb
popa
and
ret
push
push
pop
sbb
sub
ja
in
cmp
xor
movsl
mov
clc
xchg
aas
pusha
sbb
popa
int
cmp
ljmp
ss
stc
adc
cmp
xchg
jle
and
int
xchg
fdiv
mov
int3
std
pushf
dec
fldenv
divl
add
lret
notb
push
sub
push
mov
aas
cs
sbb
in
inc
mov
jno
addr16
push
stos
add
sarl
fs
mov
cmp
dec
nop
pop
push
mov
out
adc
mov
icebp
dec
inc
push
xor
or
lret
add
mov
cltd
inc
jbe
jle
sbb
or
scas
inc
or
push
push
lock
push
jbe
pusha
sar
out
sub
cmp
dec
pop
aas
dec
outsl
adc
movsl
ds
loop
int
int3
and
xchg
out
jae
xor
jle
fmull
xchg
je
scas
and
dec
dec
or
xchg
mov
push
notl
xchg
ss
cmpsb
ja
sbb
into
ret
and
xchg
movsb
movsb
add
movsl
pusha
mov
fstpl
dec
std
dec
out
push
stos
mov
fdivs
mov
and
stos
jnp
xchg
popf
mov
xor
sbb
sub
lea
or
aas
pop
cwtl
xor
cmpsb
or
xor
movsl
or
jmp
ret
adc
mov
into
or
in
inc
sbb
out
lods
jne
mov
push
rep
xchg
dec
cmp
sbb
mov
add
mov
icebp
test
push
cmp
lods
add
inc
mov
sbb
ja
and
lret
and
pop
fidivs
call
lods
and
xchg
int3
loop,pn
fs
xor
mov
and
adc
jbe
add
jno
xor
adc
je
dec
sti
inc
popl
push
and
sub
hlt
sar
mov
leave
movsl
rcrl
and
add
lds
cmp
or
mov
add
push
mov
push
cmpsb
ds
ljmp
sbb
out
add
jae
stos
and
push
loopne
sbb
push
scas
mov
cmpsl
push
repz
adcl
xchg
cld
sub
adc
test
jae
ret
mov
cmp
adc
or
sub
in
jb
mov
call
xor
xchg
out
mov
and
adc
insl
aaa
cs
fwait
aad
lahf
in
imul
ror
sbb
pop
push
roll
lods
lods
mov
scas
push
lret
adc
std
push
mov
daa
xchg
dec
adc
inc
inc
call
sbb
fdivl
repnz
into
adcl
fucomip
inc
inc
adc
ret
ret
lock
enter
cld
or
popf
mov
in
cli
popf
mov
shrl
repz
popf
cli
xchg
test
inc
push
aad
stos
ret
cmp
jecxz
push
jb
int3
sub
mov
inc
bound
jae
jecxz
mov
mov
and
sub
int
add
stos
jae
dec
cmp
jns
mov
test
pop
inc
fs
sub
aaa
das
addb
add
jge
clc
clc
dec
inc
dec
test
xchg
mov
mov
gs
rcr
add
outsb
lods
loopne
inc
mov
sub
pop
lret
and
stos
arpl
fs
pop
mov
and
js
int
outsb
ror
fildl
jo
cmp
aam
jns
mov
popa
xor
mov
mov
ja
pop
sbb
dec
stos
or
mov
inc
mov
shrl
mov
jge
and
sbb
or
mov
mov
scas
mov
std
fidivs
fs
mov
les
cmpsl
lret
sbb
ss
ret
pop
scas
scas
sbb
push
and
and
sub
pop
sti
add
jb
mov
mov
xor
in
mov
add
add
lcall
addr16
push
jne
je
loopne
add
xchg
pop
jno
mov
or
stos
aam
rolb
mov
sub
adc
cmpsl
add
and
sub
inc
sub
jno
xor
pop
mov
cmp
negb
cli
test
enter
jnp
mov
dec
test
aad
aaa
cmp
je
push
cmpsb
ds
jge
popa
fcomp
jle
sbb
pop
mov
pop
push
xchg
inc
movsl
add
insl
setnp
xchg
repz
lahf
add
pop
xor
ljmp
sbb
outsb
loop
imul
rorb
stc
xchg
clc
lea
add
out
lock
les
mov
xor
mov
or
lods
outsl
add
and
push
mov
outsb
int
xor
push
mov
in
ljmp
pop
cmp
xchg
insb
mov
call
je
js
fstpl
test
jo
sbbb
and
jg
cmp
lods
aad
pop
and
sahf
cltd
cmc
fwait
js
popa
movsb
push
xchg
push
sahf
mov
inc
addl
dec
cmp
xchg
test
stc
mov
xchg
and
and
imul
sub
movsl
add
inc
sahf
mov
cmc
fs
hlt
das
lea
push
or
mov
adc
insb
xor
adc
stos
jb
mov
repz
sti
fsts
iret
jl
and
xor
test
jno
sbb
imul
fiadds
mov
pop
cmp
push
outsl
xor
loop
rcr
notl
sbb
jne
sub
mov
mov
loope
inc
push
pusha
cli
dec
push
pop
and
mov
sbbl
pop
push
xchg
out
jbe
shrl
das
mov
in
movsb
and
dec
sbb
add
andl
cmpsb
inc
sub
gs
dec
les
xchg
xchg
lret
sub
rclb
leave
lcall
xor
lods
jae
jle
sbb
sarl
je
push
addb
and
jbe
mov
push
negl
sti
xor
push
sbb
cmpsl
js
mov
mov
sbb
jmp
testl
daa
rcl
fincstp
mov
dec
loop
adc
mov
or
or
adc
xchg
aas
or
out
mov
sbb
xchg
jns
pop
xor
sahf
test
xor
pop
gs
xchg
mov
adc
sub
mov
pop
pop
xchg
xchg
scas
add
jecxz
xchg
sub
stos
mov
mov
mov
dec
mov
les
out
bound
sti
lods
jg
je
jno
xchg
fcoms
mov
gs
xor
stc
mov
mov
mov
sbb
push
ljmp
push
jbe
je
roll
push
or
in
popf
das
cmp
les
shlb
cmp
dec
mov
int3
dec
sub
mov
xchg
xor
cmc
ds
lods
pop
cmpsl
push
inc
jmp
mov
sub
je
adc
cli
ja
test
mov
lret
addr16
test
and
shll
and
in
fwait
mov
push
dec
sub
fnsave
push
mov
imul
xor
cwtl
add
xor
sbb
dec
dec
jb
sub
jle
fmuls
jnp
jecxz
dec
insb
push
leave
cmp
cltd
mov
pop
mov
pop
xor
add
sti
mov
mov
lret
arpl
adc
adc
add
sti
jnp
cmpb
inc
and
call
jl
aas
mov
dec
in
add
adc
cmpb
cld
push
jno
out
jl
mov
in
les
insl
xchg
mov
sarb
xchg
jbe
pop
xchg
pop
jnp
bound
sub
push
lahf
sarb
dec
jl
test
xchg
decl
sub
inc
js
das
adc
xchg
lock
or
adc
xchg
scas
mov
arpl
jae
fcmovne
insb
fistpl
cmp
arpl
cmp
mov
sub
insb
adc
sbb
and
mov
cmp
mov
sbb
cmp
mov
and
out
nop
movzbl
push
dec
xchg
stos
sbb
dec
mov
xchg
ds
lahf
mov
into
aaa
dec
rcll
daa
fcmovnbe
repz
int3
cmpsb
adc
jb
loope
xor
ret
das
mov
icebp
mov
outsl
inc
test
jl
test
sbb
mov
dec
fsts
mov
in
push
push
fs
stc
add
ljmp
outsl
std
jne
bound
xchg
jne
enter
stc
mov
gs
or
jp
adc
inc
xchg
xchg
pop
das
dec
inc
inc
bound
push
lea
jp
xor
lret
lret
sarb
xor
jo
outsb
fsts
jnp
and
aad
push
rcl
jg
and
bound
pop
mov
xor
ret
imul
cld
push
sbb
adc
push
js
mov
ficomps
sbb
in
inc
lahf
jge
xor
ljmp
and
inc
jle
test
jle
cmp
arpl
stc
xchg
les
and
xchg
movsb
cli
das
iret
gs
xchg
pop
add
hlt
lahf
lahf
loop
push
pop
or
in
mov
stos
ss
push
jp
aaa
cltd
test
mov
jmp
xchg
test
ljmp
mov
mov
std
bound
int
stos
inc
js
cmpsb
loopne
jno
in
and
xor
subb
jecxz
cli
pop
sbb
push
mov
adc
sbb
addr16
outsl
rcrl
xchg
sbb
les
out
jns
cli
mov
out
dec
aam
sbb
mov
mov
xor
push
rcr
daa
pop
iret
mov
push
push
xchg
dec
xchg
outsl
fwait
ja
fs
pop
sub
push
hlt
dec
fbld
cmc
xchg
mov
sub
xchg
jg
xchg
iret
pop
push
inc
and
push
mov
add
into
scas
mov
sub
dec
jne
and
out
in
es
mov
xchg
add
loope
aad
pop
xor
pushf
sbb
fs
adc
xchg
jb
push
shl
cld
xor
es
rcll
pop
icebp
xorb
lods
movsl
iret
cwtl
repz
and
or
loop
data16
push
rorl
sbb
jge
mov
leave
mov
jne
or
popf
scas
push
orl
add
sti
sub
push
dec
in
sbb
add
jno
pop
adc
int3
ss
mov
jb
scas
xor
in
popf
bound
in
or
add
imul
jg
stos
cmpsb
pop
aad
ss
push
cmp
dec
xor
sbb
icebp
das
mov
mov
cs
jae
sub
cmp
xchg
insb
mov
dec
aam
les
xchg
ss
cmpsb
ja
sbb
into
dec
xchg
in
pop
mov
lahf
addr16
and
imul
or
mov
push
stos
mov
adc
es
dec
lds
aas
mov
idivl
add
pop
popf
dec
or
in
xlat
xor
push
mov
incl
dec
rorb
push
maxps
cli
int3
or
shrl
mov
jecxz
out
pop
jno
xor
sbb
push
andb
mov
inc
loopne
std
adc
jmp
popa
lret
cmpsb
ret
dec
sbb
lock
sbbb
stos
dec
lock
pop
cmp
pushf
xor
push
inc
loopne
push
rol
daa
das
jo
push
pushf
cmp
jbe
dec
scas
xchg
dec
or
jge
or
or
aas
inc
push
mov
aam
aad
std
jo
pop
decb
dec
es
pop
stos
in
movsb
push
mov
cmp
fcomp
shll
sbb
xchg
sbb
ljmp
test
sub
nop
inc
jno
jp
xchg
mov
les
cmp
pop
or
push
cli
mov
sbb
loop
out
sub
dec
sub
push
and
adc
jl
pop
adc
ret
inc
enter
out
jp
inc
jg
mov
pop
jge
mov
enter
sbb
mov
cltd
jmp
test
dec
das
jbe
cmc
imul
mov
and
push
nop
mov
inc
clc
es
mov
adc
mov
lret
sbb
std
cmp
repz
aas
clc
mov
add
mov
pop
int
dec
pop
xchg
std
mov
push
mov
je
aad
add
in
pop
arpl
mov
je
fisubl
xorb
paddq
dec
adc
std
sub
inc
test
jp
push
inc
fs
mov
jnp
xor
sbb
or
xlat
movsb
mov
mov
xchg
daa
idivl
fwait
xor
in
imul
jl
or
sub
clc
jbe
pop
ja
mov
movb
outsl
pusha
mov
push
jg
add
ljmp
movsl
mov
mov
sbb
js
cmp
xchg
xchg
addr16
jbe
mov
cltd
iret
sub
es
xchg
aam
scas
dec
cmp
pusha
dec
cmp
cmpsl
push
xor
jp
fldl
out
cmp
movsl
mov
in
adc
int
outsb
loop
jl
clc
add
negl
sub
sbb
sbb
or
mov
jge
mov
mov
sbb
jmp
mov
mov
jns
addr16
pop
lret
in
jle
pop
daa
shlb
push
lods
stos
cmp
xor
add
xlat
jmp
call
pop
inc
mov
mov
dec
mov
out
add
outsb
xor
enter
and
and
or
and
xor
loop
or
mov
cmp
enter
mov
movsl
dec
dec
shrb
mov
mov
pushf
xor
leave
push
stos
mov
pop
lock
icebp
cwtl
mov
jns
pop
mov
out
outsb
jnp
sbb
pop
loop
fcompp
add
xor
dec
or
or
push
adc
clc
inc
cwtl
push
sub
add
xchg
icebp
outsb
test
outsb
iret
xor
cmp
addr16
cmpsl
adc
iret
jno
sub
mov
call
es
and
inc
lea
or
mov
lods
mov
and
lods
push
bound
idiv
sbb
mov
mov
out
and
enter
add
arpl
add
add
xor
testb
mov
outsb
cltd
add
popf
push
adc
test
inc
fs
cmp
lret
stc
xor
or
in
aam
xor
ret
flds
mov
aaa
mov
out
rolb
or
mov
mov
or
mov
movsb
ret
xchg
sahf
cmpl
jb,pt
jns
push
sub
popf
cmc
sub
push
cs
std
push
mov
jae
fdiv
out
nop
pushf
mov
xchg
rclb
pop
xor
push
inc
sbb
mov
cmpsb
xor
adc
xlat
adc
xor
push
mov
jl
sbb
cmp
and
jns
adc
icebp
jbe
lods
mov
clc
or
cmpsb
pop
ljmp
and
addr16
icebp
adc
mov
or
xchg
pop
test
dec
xchg
in
sub
hlt
leave
aaa
xchg
repnz
nop
push
or
popf
insb
adcl
roll
mov
xchg
mov
and
adc
cwtl
popa
jge
xchg
add
outsb
bound
push
push
insb
push
dec
add
push
add
icebp
sbb
iret
pop
add
aas
lock
sbb
jl
ja
movsb
jae
cmp
xchg
in
and
fisubrl
in
and
mov
and
rolb
and
mov
inc
fs
lods
mov
stos
push
ss
dec
jle
cltd
xchg
test
fsubl
frstor
js
sbb
fwait
aaa
lahf
xor
push
mov
xor
add
mov
mov
adc
fsubs
aaa
sbb
sbb
inc
mov
sti
xchg
sarl
pop
jl
xchg
rolb
jnp
and
mov
push
or
mov
popa
ret
mov
nop
mov
mov
pushf
and
lret
popf
mov
or
xor
or
out
sbb
or
shlb
call
cmp
sti
in
cmp
pop
pop
mov
popf
pop
pop
pop
lds
jge
stos
jbe
fwait
int
cmc
xor
cmp
enter
es
mov
lret
mov
xlat
leave
dec
fwait
repz
sbb
cmp
sbb
xor
pop
scas
movsb
loop
out
incb
mov
int
lret
in
push
xchg
pop
inc
mov
cmp
xor
loope
daa
cmp
insl
out
add
test
cltd
outsl
sti
or
jae
lret
cltd
sub
dec
movl
and
cmpsl
cmp
shrl
xlat
sti
push
stos
xchg
pop
movntq
inc
push
dec
jb
and
fsubl
jg
pushf
xchg
inc
int3
jle
aas
shlb
adc
mov
xor
push
add
mov
cwtl
cli
push
fbstp
lret
mov
inc
jne
mov
lahf
jl
push
pop
inc
sbb
xchg
test
sbb
pop
sti
loopne
aas
popa
loopne
inc
clc
inc
xchg
adc
cmp
xlat
mov
xor
fcomi
add
inc
stos
mov
mov
push
int
enter
int
sub
adc
test
and
icebp
and
scas
rcrl
push
cld
inc
mov
addr16
push
mov
sbb
xlat
jmp
xchg
pop
xchg
cmp
and
std
mov
cmp
mov
notl
in
js
xchg
jbe
mov
mov
jb
push
jmp
xchg
pusha
pusha
push
sub
push
enter
xchg
sub
outsl
outsb
aad
lods
cltd
popf
jp
push
xchg
push
and
push
jmp
cs
jbe
and
lds
and
pop
ljmp
int3
push
hlt
jge
jge
push
je
mov
xor
dec
out
adc
cld
mov
adc
aad
dec
jg
or
inc
enter
pushf
arpl
mov
insb
adc
mov
mov
sub
movsb
sti
lret
call
mov
xor
clc
sub
push
sbb
dec
pop
dec
pop
push
sub
and
roll
aam
adc
lock
pop
idivl
mov
fisttps
or
test
or
lock
repz
sbb
aad
push
sub
sub
in
jb
add
xlat
adc
jnp
cmp
push
out
rcrl
daa
push
pop
rorb
mov
cs
repnz
scas
pop
mov
dec
call
daa
jg
xchg
sarb
dec
inc
inc
or
mov
jp
scas
xor
das
pop
xchg
add
or
mov
pop
mov
shr
and
scas
push
jp
cmc
push
inc
repnz
cmp
jl
and
dec
cs
jg
pop
cmp
inc
mov
test
jp
mov
lret
cs
mov
rcrl
mov
cmp
mov
fisubrs
sbb
data16
icebp
jge
jnp
inc
rcl
and
fisubrl
pop
in
inc
shlb
bound
mov
outsl
inc
push
and
int
call
and
lahf
inc
pop
and
mov
add
pusha
int
dec
pusha
adc
mov
adc
dec
sti
xor
xchg
enter
xchg
or
rolb
outsl
std
push
rcr
pop
mov
fs
fwait
mov
jo
data16
divl
aaa
push
pop
push
jmp
sbb
jnp
sub
pop
pop
pop
sti
jo
shl
dec
sub
mov
xchg
pop
scas
mov
jmp
push
out
std
loope
test
test
ret
cld
fcomip
icebp
xor
fstl
add
pop
jmp
jno
fadds
movsb
ds
stc
shl
pop
pop
clc
cmpsb
roll
jmp
jbe
and
pop
push
xchg
rcll
fidivl
sub
push
popa
lahf
cmp
xlat
and
negl
fs
or
cmp
adc
cmp
push
lock
scas
inc
mov
sbb
into
ljmp
jnp
push
fdivr
push
pop
cmp
jl,pn
cs
push
es
or
pop
push
mov
scas
int
cli
push
jno
dec
outsl
jp
scas
jo
imul
mov
stc
pusha
shr
mov
loop
rcll
xchg
pop
push
mov
mov
xor
jae
fistpl
ss
clc
inc
cmpsb
xor
cmc
add
pop
gs
call
ret
mov
pop
mov
addr16
lahf
dec
inc
int
or
imul
inc
pop
imul
sbb
pushf
pop
and
adc
dec
mov
mov
xchg
pop
jp
imul
adc
ja
mov
or
cmpsl
sub
sarb
lahf
push
fcmovnu
enter
addb
mov
repnz
pop
movsl
icebp
adc
fsubp
mov
fcoms
daa
and
pop
dec
incl
sbb
filds
mov
pmulhuw
fstpl
pusha
and
or
xchg
jno
popa
inc
lock
fstl
add
pushf
clc
mull
sbb
push
test
jne
mov
cs
call
fs
cmp
mov
int3
pop
jae
mov
push
enter
add
jbe
push
sub
jb
add
xchg
idivb
ds
dec
mov
push
pop
or
mov
imul
pusha
mov
lcall
jbe
popa
inc
ss
daa
adc
adc
mov
pop
push
sub
stc
int3
add
jbe
movsb
mov
cmp
pop
sbb
add
iret
ret
fs
popa
hlt
push
int3
inc
das
sahf
push
dec
es
int3
xchg
in
and
iret
sub
or
push
subl
lds
test
push
aas
fmull
cmp
lret
sahf
lods
add
fcompl
xor
aam
xchg
mov
lds
fwait
mov
sbb
xor
repz
jne
ret
sbb
push
cmp
test
sub
int
sbb
fwait
test
int
jnp
mov
push
movsb
sub
xor
popf
shrb
fadds
jmp
pushf
stos
xor
jmp
or
pusha
cli
mov
cltd
inc
add
mov
divb
push
mov
popf
in
xor
jnp
inc
or
push
lock
ljmp
mov
sub
int3
lret
in
lret
lock
cmpsl
mov
cmp
pop
push
out
push
push
call
sub
add
cmpl
jecxz
sub
inc
mov
and
push
into
sub
mov
mov
sub
push
jl
js
mov
xor
jne
cwtl
cltd
movsl
ret
mov
inc
in
fisttps
mov
out
ljmp
leave
dec
negb
xor
out
mov
test
lret
ss
dec
add
aam
pop
mov
push
stc
data16
mov
in
ds
sub
mov
mov
mov
inc
shlb
lds
loope
xchg
rorl
lret
pop
and
adc
stos
jb
mov
lock
dec
push
dec
push
pop
jmp
ss
repnz
mov
mov
sub
es
inc
and
push
clc
mov
dec
loop,pn
fists
lret
out
push
sti
pop
push
fdivr
addr16
outsb
mov
adc
bound
into
lret
je
lcall
popa
inc
xor
and
cmpsl
jp
add
mov
call
shr
out
jne
sti
js
cmp
jns
adc
cmp
sbb
je
jg
mov
inc
mov
pop
pop
add
cmovne
call
xor
ficoms
sbb
in
lcall
jns
mov
pop
daa
jge
insl
test
repz
loop
cld
rcll
stos
sbb
xorps
inc
dec
jl
clc
mov
hlt
or
or
lds
jnp
mov
cwtl
ret
out
xchg
nop
sarl
add
sbb
bound
push
divb
negb
in
cli
lret
lods
pop
jecxz
stos
mov
sti
mov
lds
ljmp
push
cmp
enter
cs
fmull
mov
scas
xor
xchg
mov
lock
mov
call
pop
scas
adc
sbb
in
jno
dec
orl
mov
jne
add
and
dec
repnz
xor
and
out
mov
addr16
push
ss
fincstp
dec
add
es
cltd
es
mov
test
mov
fwait
in
mov
jle
xchg
aas
push
lds
xchg
inc
sub
jbe
ficoms
stos
les
out
negb
in
inc
mov
jecxz
ret
sbb
add
mov
lcall
shr
cmp
sti
inc
rcr
stos
and
shr
ret
arpl
repnz
adc
stc
pop
pop
ja
dec
mov
dec
sub
adc
sahf
mov
cmpsb
fs
bound
mov
jge
and
xchg
daa
adc
cmpsl
in
pop
dec
lahf
mov
loope
test
sbb
repz
jle
dec
ljmp
dec
add
fsts
loop
mov
push
dec
mov
insb
imul
jl
xchg
pop
xor
in
insb
icebp
push
test
jmp
xchg
cmp
stc
pop
je
cmp
ja
mov
and
in
mov
adc
pop
and
fisttpll
sbb
add
repz
xor
fstl
jecxz
push
lcall
into
mov
jo
std
cmpsl
and
arpl
inc
loope
gs
jl
add
test
repnz
mov
xlat
repz
xor
movl
sbb
push
xchg
test
and
xchg
xor
push
mov
xchg
orb
std
out
xchg
mov
aad
idiv
into
icebp
cmc
push
sbb
rol
out
clc
push
jmp
in
mov
xchg
notl
jns
fisubrs
xor
adc
cltd
push
mov
outsl
pop
sbb
outsb
xor
mov
cmp
fwait
das
out
sti
sbb
jne
jbe
jg,pt
in
aam
mov
mov
and
rcr
out
push
sti
inc
aas
shll
stos
mov
push
jmp
loopne
push
inc
mov
loopne
cld
sbb
js
repz
stos
daa
sub
dec
push
mov
ja
mov
les
rclb
loope
push
mov
push
ja
sbb
icebp
repz
int
cmpsb
mov
jo
push
inc
inc
push
sti
bound
pop
int3
out
push
jg
or
xor
dec
xchg
dec
rclb
and
jnp
in
dec
jmp
rcrl
push
fwait
jnp
jno
movsl
mov
or
lret
rcl
mov
xor
pusha
or
and
jb
adc
mov
sbb
call
mov
data16
push
hlt
into
add
shrl
lea
out
push
insl
iret
push
mov
dec
in
daa
add
sti
jl
leave
fbld
in
adc
cli
push
leave
sbb
fs
loopne
xchg
into
mov
fstpt
sub
sub
cmp
icebp
pop
mov
sti
inc
jle
mov
push
pop
js
pop
sbb
fwait
dec
data16
cmc
daa
popf
mov
mov
jmp
mov
clc
enter
push
std
jnp
dec
jge
lea
jmp
cmp
inc
cwtl
test
push
pop
xchg
pop
test
or
mov
jle
aam
sbb
scas
jecxz
incb
jo
imul
aam
int3
push
hlt
pop
int
mov
nop
cld
rorl
ret
fistpl
into
addl
pop
sbb
sub
push
lahf
das
pop
or
sub
call
ret
and
sub
fisubs
pop
jne
dec
and
dec
push
int
sub
imul
stos
pushf
ret
and
cmp
xchg
fwait
mov
add
add
pop
addr16
cmp
hlt
idivb
mov
mov
pop
cmp
push
sub
frstor
add
sub
aam
adc
adc
push
stos
imul
jo
in
jne
or
dec
fwait
mov
repnz
push
repnz
lret
mov
inc
out
lahf
imul
dec
mov
cmpsb
inc
pop
xor
mov
jno
into
jg
es
push
cmpsl
mov
stos
sub
dec
stc
lcall
rcrw
leave
cmp
sbb
lahf
pop
sbbl
ds
pop
scas
jns
nop
mov
inc
pop
aam
je
sbb
or
and
mov
inc
jmp
push
popf
sbb
xlat
lret
pop
xchg
adcb
push
xchg
push
lods
outsl
mov
imul
adc
jmp
icebp
jb
pop
dec
arpl
xchg
sub
fbld
inc
mov
cmp
leave
out
or
or
lods
je
pop
out
lfs
rcpps
mov
repnz
inc
dec
lss
xchg
fisttps
clc
push
cmpsb
xorl
mov
or
gs
jnp
gs
mov
fistpll
mov
jnp
sbb
pop
push
popa
rcr
cmc
mov
mov
psadbw
xor
out
pop
ljmp
cmp
mov
inc
jecxz
jle
sbb
xchg
push
lea
jnp
aam
jge
pop
testl
push
addr16
int
sbb
mov
and
int
push
xchg
xor
pushf
push
or
fildll
mov
lods
lret
in
dec
and
orb
imul
cmpsb
mov
xor
mov
mov
sbb
push
mov
lods
inc
sbbb
sbb
inc
js
fldcw
ja
push
arpl
sub
xor
faddl
mov
add
add
inc
or
xor
mov
shll
xchg
aad
cmpsb
mov
mov
hlt
xor
and
mov
jae
sub
ss
mov
or
nop
jp
push
inc
inc
adc
xor
in
push
fidivrl
dec
bound
pop
repnz
sti
pusha
inc
aaa
sub
jo
or
mov
push
lret
mov
stos
and
inc
inc
push
popa
ss
sbb
xchg
sti
push
mov
test
clc
and
sub
test
xchg
lahf
cmp
sti
adc
push
cmp
add
rcll
shrb
arpl
inc
jg
xor
int3
pop
inc
les
xor
or
pop
and
and
popa
call
sbb
sub
arpl
cld
cmpsb
into
jmp
clc
jns
sub
push
push
loopne
fidivs
insb
xchg
gs
mov
jge
mov
lock
test
dec
outsl
popf
out
cwtl
cmp
push
rcr
fsubs
and
inc
inc
inc
imul
push
jmp
jp
mov
dec
out
xchg
jl
mov
dec
sub
jb
inc
jns
stc
push
mov
mov
and
inc
jnp
fs
add
xlat
lods
fwait
in
xor
clc
mov
lret
aam
dec
test
pop
jle
cmp
js
cltd
cmpsb
jnp
loop
pop
mov
lods
mov
mov
repnz
pmullw
push
sbb
aaa
pop
xchg
addr16
inc
sahf
in
or
jne
imul
sbb
mov
push
jne
mov
mov
jb
cltd
cwtl
inc
shr
ja
mov
andl
xor
inc
mov
mov
mov
pop
mov
pushf
outsb
sbbl
loop
push
mov
daa
pop
push
xor
inc
and
pop
stos
mov
lcall
xchg
outsb
mov
push
push
nop
je
sti
xor
in
xchg
fwait
inc
cmc
inc
xchg
bound
cmc
xor
and
mov
sbb
push
movsl
mov
lret
jbe
repz
frstor
mov
inc
out
imul
sub
movsb
mov
jns
shrb
cmp
addl
xchg
sub
and
cmp
inc
push
push
inc
add
jecxz
add
jg
shrb
nop
mov
mov
xchg
rcr
ret
mov
nop
repz
ficomps
cmpsl
jl
xor
cmp
cmp
adc
jns
sbb
pusha
orl
cmp
les
push
out
cmp
fbld
pop
mov
dec
jns
and
subb
js
xchg
or
scas
ja
jecxz
add
loopne
pop
fbstp
fcom
xchg
push
dec
fnstsw
faddl
jbe
mov
sub
repnz
add
stos
inc
aas
int3
mov
dec
mov
sub
dec
outsl
in
jmp
std
and
push
test
stc
or
pop
in
shl
ret
add
loope
dec
xchg
sub
icebp
mov
or
lods
fwait
xchg
xor
or
sarb
test
outsl
lods
das
pop
sbb
sbb
pop
cmp
out
adc
scas
adc
stc
xchg
or
cld
insb
push
pop
ret
adc
pmaxsw
cmpsb
out
shrl
mov
xchg
adc
stc
xchg
sub
adc
xchg
insl
mov
add
xchg
adc
out
pop
adc
push
push
cmp
cmc
jmp
add
lcall
mov
gs
pop
pop
dec
inc
sbb
sbb
xchg
jns
jb
xchg
andb
xor
ds
icebp
ljmp
add
pop
mov
rcr
scas
push
inc
inc
sub
jno
mov
push
imulb
shrb
sbb
adc
dec
jl
mov
lock
xchg
cmp
ret
fsub
clc
mov
xchg
mov
outsb
lock
pop
sarw
outsl
or
cmpsl
xchg
rcl
dec
xor
gs
or
mov
mov
cmpsl
in
rorl
lods
jns
test
dec
sub
xor
in
sub
outsl
mov
into
adc
inc
addr16
arpl
cmpsb
mov
or
and
imul
ss
faddp
xchg
rcrb
cld
sbb
lcall
mov
adc
out
out
aad
cmp
mul
pop
clc
mov
mov
cmp
dec
push
aad
cmp
mov
jp
pop
inc
fsub
cltd
js
and
dec
xchg
or
les
outsl
sbb
ss
icebp
inc
stos
pop
jg
jg
ja
cmp
out
xchg
imul
mov
mov
lods
sbb
cmp
outsl
push
lods
das
out
popa
outsb
cld
mov
mov
test
fiaddl
rol
movsl
fnstsw
in
add
fnstsw
mov
xor
shl
shlb
lcall
lds
cli
in
shrb
pop
loop
out
inc
mov
or
or
scas
and
lret
sub
pop
fdivl
sbb
xchg
dec
popa
lods
in
ss
jo
or
sbb
xchg
je
jge
sub
mov
int3
and
jg
bound
aaa
and
aaa
push
xchg
fdivs
call
and
scas
jne
or
inc
pop
xor
mov
scas
dec
sysexit
das
xchg
cmp
es
or
pop
mov
or
jae
subl
or
sbb
dec
scas
xlat
cmp
jns
jns
out
mov
mov
inc
cmp
mov
jg
push
inc
cmp
sbb
cmpsl
insl
jne
outsb
int3
dec
int
hlt
dec
dec
lret
jae
or
aaa
lds
into
cld
sbb
push
gs
idivl
aad
lock
xchg
les
xchg
ss
cmpsb
ja
sbb
into
pop
cmc
mov
pop
push
adc
xchg
test
jns
ficomps
das
loopne
in
les
pop
inc
in
mov
repnz
pop
sar
mov
sub
jge
mov
xchg
loopne
pop
adc
adc
mov
jl
inc
inc
test
shll
arpl
insl
stos
lret
dec
sahf
sub
mov
lea
mov
add
or
lea
and
cmp
push
pop
sbb
and
insl
in
rorl
mov
lods
inc
popf
push
lcall
test
mov
int3
mov
or
dec
nop
je
iret
adc
jle
lcall
mov
mov
leave
or
sbb
add
daa
mov
cmp
dec
int3
sbb
cmc
loop
push
roll
sbb
sub
scas
sbb
sbb
xchg
aaa
ds
push
pop
or
icebp
out
divl
xor
lret
mov
shlb
or
fsqrt
pop
push
xlat
mov
and
dec
cmc
insl
cmp
push
cli
mov
enter
pop
andl
xor
pop
lods
ret
lods
push
push
sub
cmp
pop
dec
xor
mov
cmp
pop
mov
pop
mov
sbb
jmp
ffree
dec
add
repz
xor
sub
repz
sub
mov
xchg
push
push
ljmp
lds
lds
lahf
ja
shlb
imul
mov
sbb
int
sub
sti
minps
mov
sbb
xor
cld
adc
jns
add
adc
inc
aas
arpl
mov
cmpsl
sarb
and
jno
pop
pop
ja
push
dec
inc
dec
sbbl
mov
dec
mov
mov
sahf
add
imul
xchg
fs
and
and
out
movsl
push
sub
mov
jl
popa
fsubs
lret
sbb
outsb
cmpsb
aaa
test
add
sub
mov
mov
or
inc
cli
loope
in
cld
out
dec
lahf
xlat
int
orl
mov
aas
xchg
push
mov
dec
mov
into
lret
sbbb
push
adc
mov
add
imul
inc
pop
mov
jne
fists
jp
sub
leave
adc
mov
stc
ret
cmp
ret
pusha
clc
iret
mov
add
dec
xchg
or
test
imul
imul
push
ss
call
repnz
popf
imulb
je
pop
pop
sbb
mov
mov
stos
sahf
imul
mov
xchg
xchg
jb
mov
lret
and
shrl
popa
clc
sbb
mov
cmp
cmp
incb
bound
mov
js
xor
inc
inc
mov
xchg
mov
jle
and
clc
pusha
and
ret
push
sbb
mov
xor
mov
imul
jle
or
dec
dec
repz
dec
js
cmc
fstl
fwait
popf
push
pop
je
out
pop
push
xor
sbb
sbb
adc
outsb
mov
call
ret
cwtl
push
lahf
mov
pop
sub
pop
add
push
adc
dec
and
cmpsb
push
fistps
stc
pusha
test
aas
cmp
popf
pop
js
pop
sbb
push
mov
fdivs
xchg
int
loop
mov
sub
cmp
inc
push
pop
push
sub
push
pop
push
jg
and
shlb
out
shr
jno,pt
ljmp
arpl
jnp
in
mov
rcl
mov
out
addr16
mov
mov
xor
mov
sbb
aam
add
ficompl
lods
jmp
cld
mov
cmp
cmpsl
push
enter
xchg
jp
jecxz
repz
and
push
sbb
imul
jne
jge
sub
mov
arpl
jae
mov
mov
jp,pn
cmp
mov
and
imul
sarb
xchg
add
fwait
cs
mov
ffreep
outsb
jg
jge
nop
pop
ret
pop
and
and
std
add
cwtl
sbb
ljmp
xor
mov
scas
outsl
testl
das
jno
mov
jge
jle
mov
aad
arpl
lods
push
mov
xor
jo
fbld
ds
pop
shlb
movsb
lret
cmp
push
and
call
xor
incb
mov
testb
xchg
clc
mov
call
add
pop
movb
xorl
sub
or
in
xchg
push
rcll
mov
add
nop
mov
add
loope
nop
call
in
sahf
adc
or
push
sahf
push
fsubr
sbb
ret
pop
andb
pop
mov
jmp
in
mov
mov
fldl
dec
xor
fistps
test
das
mov
mov
data16
cmp
mov
pop
ja
cmc
imul
xchg
int3
inc
aam
jbe
imul
lcall
mov
adc
jo
fldenv
ja
push
fsubrl
push
sti
imul
or
imull
fiadds
mov
shl
cli
sub
push
push
cmpsb
imul
inc
rorb
call
mov
movsl
inc
stc
idivl
mov
adc
sub
cli
mov
mov
cld
pop
test
xchg
jo
push
adc
ja
xor
jle
dec
stmxcsr
push
addr16
int3
sub
jmp
in
dec
bound
push
or
sbb
push
pop
inc
ds
nop
adc
gs
lods
in
in
pop
bound
inc
dec
jecxz
mov
mov
loope
popa
repnz
icebp
cld
mov
dec
rol
cwtl
dec
loope
clc
mov
push
jl
icebp
cmp
inc
dec
inc
xchg
push
xor
sahf
cmpsb
xchg
sti
mov
xor
notb
mov
pop
xor
xchg
inc
pop
ffree
jmp
cwtl
repz
rolb
push
sbb
adc
into
inc
lahf
inc
in
shl
popf
or
inc
es
adc
dec
pop
mov
dec
in
das
int
xchg
pop
xlat
pop
mov
ja
pop
sbb
cmp
mov
sub
rcll
jge
push
scas
dec
xchg
add
int
jns
adc
insl
jp
aam
sarb
mov
mov
push
push
pop
xor
mov
lret
mov
fwait
xchg
adc
cli
in
pop
cmp
repz
adc
mov
xchg
inc
shr
jns
sahf
scas
data16
adc
mov
mov
sub
shrb
cmp
movl
leave
jecxz
pushf
imul
subb
lods
ret
cmp
mov
test
xchg
cld
in
arpl
loope
out
cmp
mov
popa
or
movsl
sub
and
pop
push
das
pand
pop
sub
pop
sub
inc
adc
xchg
adc
add
subl
repz
mov
jo
jne
loop
in
add
jge
mov
xchg
xor
mov
ss
cmp
add
lods
shrl
cmp
inc
fs
adc
movsb
arpl
and
inc
push
stos
and
in
fildll
sti
jecxz
imul
mov
daa
xchg
pop
das
and
cmc
test
cli
aaa
cs
push
fildll
sbb
jnp
inc
ret
stos
xchg
mov
and
test
cs
xchg
dec
lock
pop
enter
pop
sbb
popf
pop
scas
sbb
push
div
add
cmp
xchg
outsb
mov
pop
xchg
fisttps
inc
scas
lcall
std
mov
inc
mov
mov
sub
imul
nop
stc
sub
in
mov
nop
jo
cmp
sbb
pop
mov
enter
je
out
stos
aad
lea
in
imul
into
int3
lahf
pusha
mov
mov
in
repz
cmpsb
cwtl
mov
xor
mov
lds
test
into
jg
sbb
daa
push
mull
aas
inc
fsubl
movsl
jnp
jae
mov
lret
jae
test
cltd
data16
jns
jno
call
in
dec
and
imul
cli
frstor
fldl
jl
xor
aad
jno
push
hlt
and
jmp
mov
jmp
adc
push
lcall
mov
mov
fnstsw
or
mov
in
cmp
pop
mov
addr16
popf
sti
jl
lcall
or
xchg
mov
ja
mov
dec
or
inc
mov
sub
xchg
jne
mov
repnz
xchg
jb
stc
inc
xlat
cmpsl
add
mov
mov
jp
movsl
bswap
int
lahf
sub
shll
sbb
jnp
lea
add
mov
push
sub
sbb
fldt
icebp
das
movsl
mov
mov
rcll
and
movsb
stc
add
push
movsl
out
stos
aaa
aaa
mov
test
cmp
push
rolb
lods
sbb
xor
sub
pop
mul
rcrb
adc
sub
sti
std
cmp
imul
add
iret
lcall
mov
aas
sub
inc
mov
adc
insl
shlb
shrl
shl
dec
xchg
inc
jecxz
sbb
xor
add
push
shlb
jns
sbb
imul
scas
xchg
jnp
mov
sti
xchg
imul
arpl
mov
pusha
cmpsl
scas
cmp
mov
cmpsb
outsl
int3
sub
add
xor
mov
adc
add
adcl
stos
daa
mov
fnstenv
adc
jle
xchg
adc
fdivs
add
mov
div
xor
xchg
sub
sub
mov
jl
jne
jnp
js
cmp
pop
pop
loopne
adc
pop
dec
out
inc
lods
inc
or
push
lds
jecxz
dec
push
sub
sub
pop
dec
ss
dec
rcl
and
jge
outsb
loop
sbb
dec
lret
xor
mov
jo
adc
rcrl
fbld
dec
pop
test
push
cmp
inc
mov
scas
sbb
test
ret
push
popf
push
jl
ljmp
dec
pushf
aas
sbb
mov
pop
dec
pop
cmp
mov
imul
cmp
sbb
sub
or
decl
pop
ljmp
insb
repnz
insl
fisubrs
jb
sub
xor
dec
push
out
fists
jbe
dec
pop
fidivs
ficomps
dec
int
and
push
int3
stc
jp
push
sub
mov
mov
xchg
sarb
leave
mov
aam
roll
xchg
cmp
adc
rcrl
cmpsb
movsl
pop
popf
cmp
and
xchg
out
insb
stos
repnz
cmp
in
cmp
mov
std
fistpll
stos
jecxz
pop
shl
fwait
cmp
lahf
addb
pop
push
xchg
imul
jns
push
outsb
ret
fsubr
jecxz
pop
and
in
inc
lret
rol
mov
scas
jne
mov
cmp
pop
adc
adc
push
sbb
push
dec
popa
mov
addb
cmc
lea
call
stos
not
push
add
and
sbb
mul
adc
jmp
pop
cld
pusha
xor
push
sbbb
jp
add
cltd
insb
or
mov
mov
xchg
dec
mov
cs
fsubr
insb
sub
mov
call
es
rcrb
inc
or
in
outsl
aam
rorb
lret
pop
xor
fsubl
jno
cwtl
dec
adc
out
filds
lret
dec
stos
add
ffree
jne
es
xchg
sub
sbb
adc
adc
xchg
mov
aas
pop
xchg
sti
icebp
lods
xor
mov
shr
fldl
ja
data16
scas
imul
fistl
push
out
mov
mov
test
add
stos
inc
clc
pop
ljmp
mov
clc
sahf
push
aas
add
bound
mov
inc
push
jo
push
mov
loopne
push
xchg
int3
push
call
clc
xlat
add
ja
enter
xor
xchg
push
xchg
or
and
js
cmp
std
das
sub
inc
loopne
lock
push
sti
loope
or
loopne
jmp
ds
in
loop
loop
adc
sti
push
pop
adc
loope
inc
xchg
jmp
subb
sbb
es
test
mov
jb
mov
xlat
fwait
cmpb
ljmp
gs
jae
in
fstpt
stos
xlat
add
cmp
aad
in
out
inc
scas
iret
lods
pop
cmc
mov
mov
mov
mov
xchg
in
mov
int3
test
jne
insl
push
or
mov
enter
or
cs
jne
pop
mov
fisttps
mov
fmull
jnp
xor
mov
xor
fdivr
loopne
add
xchg
in
pop
out
xchg
fnsave
rsqrtps
mov
jb
pop
addr16
sbb
add
fucomp
pop
lret
inc
fprem
cld
movsl
popf
adc
sbb
cmp
cli
repz
in
xor
jp
clc
shll
ret
mov
ficoms
vmwrite
pop
jmp
jge
in
push
sub
and
insb
dec
cmp
sub
test
daa
sbb
int
imulb
push
dec
idivl
fdivl
pop
mov
and
jno
es
and
jge
xor
lea
ret
adc
pusha
mov
xchg
sub
adc
pushf
ss
xchg
and
mov
push
mov
push
nop
push
add
bound
xchg
xor
in
push
push
push
push
mov
mov
xchg
jae
cltd
lea
repnz
sbb
daa
nop
mov
subb
jo
dec
inc
sub
push
jnp
mov
add
dec
pop
xchg
add
nop
push
dec
shl
inc
leave
cli
int3
rcll
mov
and
xchg
scas
mov
sub
or
fisttpll
and
xor
jns
aas
ja
xchg
aaa
repnz
jmp
cmc
mov
xor
inc
stos
out
adc
shlb
movsb
jb
jae
jg
fcomps
sbb
jno
clc
js
test
cli
hlt
lcall
lds
or
sub
movsb
jo
add
imull
pop
popa
sbbl
pop
sub
inc
imul
jecxz
push
mov
std
scas
call
mov
adc
mov
je
pop
sbb
xchg
push
sbb
filds
mov
dec
mov
movsb
dec
shl
in
outsb
jne
cmp
enter
or
push
jge
add
lahf
sbb
and
cli
cmp
xchg
int3
inc
mov
hlt
sbb
mov
cltd
ret
jle
out
daa
fcomps
jb
push
xor
and
push
lcall
sbb
loop
push
adc
mov
push
pop
movsb
bound
aam
push
mov
pop
or
jmp
stc
jnp
imul
and
xchg
rcrl
lods
pop
push
fdivl
mov
add
sarb
push
shlb
jmp
cmp
movsb
cmpsl
add
and
insb
inc
pcmpeqw
mov
test
adc
dec
and
lods
xchg
xor
lahf
push
incb
mov
testb
xchg
clc
mov
xchg
and
mov
test
or
out
lock
gs
jle
lret
xor
or
popa
push
iret
es
pop
or
movsl
inc
pop
imul
add
addb
insb
inc
inc
sub
xor
sti
lods
xchg
in
mov
mov
loop
repnz
and
inc
sub
jl
push
addr16
dec
adc
mov
sub
int
hlt
cmp
fidivrs
lods
neg
stos
lret
arpl
push
sarl
mov
insl
jge
or
icebp
sbb
out
adc
lods
add
xchg
inc
loop
decl
or
mov
push
je
idivl
inc
xchg
mov
int3
bound
inc
mov
insl
xchg
add
dec
stos
adcb
mov
loope
sbb
pop
dec
movnti
test
xor
mov
mov
addb
std
jno
mov
cmp
mov
pop
arpl
jge
cmpsl
fistpl
in
xor
ss
or
sbb
sbb
ss
int
push
xchg
or
jmp
insb
movups
cmp
mov
call
dec
cmpsl
cmp
inc
xchg
xchg
loopne
fstpl
xchg
pop
adc
test
icebp
push
xor
leave
les
mov
sub
cs
out
loopne
rorb
jo
add
icebp
cwtl
jne
xlat
pop
ja
scas
or
lock
mov
mov
imul
sbb
cmpsb
cli
pusha
xor
push
push
add
mov
loop
mov
in
js
lahf
inc
add
and
xchg
lcall
jbe
mov
push
out
xorl
std
enter
fistl
or
js
sub
push
xchg
pcmpeqb
mov
adc
in
or
jne
or
cltd
dec
cmp
inc
dec
lods
push
test
mov
lea
inc
pushf
adc
xchg
add
and
cmpsl
lods
jnp
fxch
push
add
call
shll
xor
or
das
jbe
int3
jb
adc
mov
jae
dec
mov
adc
scas
call
jne
mov
das
inc
jb,pt
fldl
pop
mov
xchg
jne
xor
cli
adc
push
or
pop
addr16
daa
inc
cmp
mov
cmpsb
add
pop
leave
jne
int
mov
jg
jecxz
cmp
lods
push
fs
fisubrl
xor
cmp
insl
repnz
cmpb
dec
insb
push
imul
out
push
xchg
aad
cmp
push
cmp
movsl
dec
and
inc
pop
int
sub
lods
jb
or
pop
xchg
stos
sbb
dec
cmpsb
cltd
int
jae
mov
pop
pop
sub
sbb
scas
out
rorb
sub
pop
or
loopne
lock
adc
mov
adcl
mov
cmp
stos
out
dec
lea
pop
push
fwait
sbbb
lock
aas
pop
in
mull
add
cmp
popf
js
js
jp
addb
loopne
out
xchg
std
dec
imul
in
cmc
or
mov
xchg
es
lock
faddl
or
sarl
nop
addr16
je
fs
or
push
ljmp
xchg
out
cmp
jmp
inc
xchg
mov
in
sarl
lea
mulb
and
mov
pop
add
or
adc
inc
push
scas
aas
adc
cmp
pmuludq
jbe
adc
push
mov
cmc
ss
arpl
xor
ljmp
pop
xchg
xor
cmp
jl
rcrb
sub
adc
into
fs
and
dec
push
pushf
pop
jle
into
loope
movsw
stos
pop
jmpw
call
mov
out
sub
arpl
push
test
ret
xchg
bound
cmpsl
mov
icebp
sti
fwait
dec
divb
inc
sbb
mov
outsb
outsl
dec
adc
or
sbb
xchg
shll
xchg
loopne
imul
adc
xchg
aaa
lcall
loope
xchg
fnsave
dec
lods
cmp
test
xorl
mov
or
sub
cmp
push
push
loope
add
jmp
pop
icebp
mov
sbb
pop
or
push
add
sbb
xchg
or
cmp
push
pop
mov
sbb
jecxz
leave
add
clc
lods
mov
stos
ret
lods
push
std
xor
icebp
cwtl
jmp
push
incb
mov
testb
xchg
clc
mov
mov
rep
jmp
and
gs
shll
push
fsubr
arpl
test
loope
inc
sbb
xchg
cmpl
and
sub
xor
aam
fcomp
and
test
inc
stos
fnstcw
and
fmuls
xchg
insl
sbb
adc
lcall
push
dec
fldt
call
les
xor
inc
add
adc
ss
pop
jbe
sti
ret
cmc
jmp
ja
sahf
mov
dec
lret
rcrb
jno
adc
add
xchg
ret
mov
je
cmp
insb
js
ja
fwait
xor
mov
out
mov
dec
cmp
outsl
ljmp
sub
push
add
lods
push
pop
mov
pop
sub
jecxz
dec
jb
bound
pop
dec
xor
std
std
and
inc
sub
arpl
jmp
loopne
jecxz
in
add
out
push
push
fldenv
cltd
in
cld
mov
test
je
jp
sbbb
sbb
ret
stos
and
or
sar
outsb
ljmp
add
call
cmp
mov
movsl
sub
push
push
shl
adc
fnstcw
fisttps
stc
in
enter
cmpsl
or
inc
adc
aas
pop
clc
ds
bound
push
jae
and
mov
repnz
xchg
lods
push
and
movsb
fdivrp
stc
mov
inc
jl
aad
repnz
call
das
inc
mov
mov
loop,pt
movsl
or
cmpsb
jmp
clts
add
jge
test
jae
lret
imul
jno
les
imul
dec
pop
or
out
out
dec
fucom
and
adc
ret
jb
inc
popa
mov
fld
clc
cld
pop
xchg
mov
fldt
shlb
push
insb
xchg
adc
lds
jge
in
pop
loop
lock
pop
mov
sahf
les
jmp
cmp
js
pushf
pushl
xor
sbb
dec
inc
pop
cmp
pop
out
test
call
stos
lea
popa
xlat
fisubrl
xor
lahf
out
aaa
bound
mov
addb
aam
mov
jns
fs
or
mov
stos
mov
scas
pop
jl
dec
add
lock
dec
jecxz
sbb
xor
sbb
cmp
shrl
inc
cli
test
cmpb
cltd
rol
or
push
mov
push
and
jecxz
pop
push
pop
mov
fucomip
scas
pop
out
lcall
hlt
fstpl
rcrb
sarl
out
pop
dec
mov
sbb
lds
or
mov
call
or
int3
ret
cmp
pop
and
mov
dec
fdivrp
pushl
lea
outsb
stc
add
mov
scas
xor
add
imul
hlt
outsb
int3
push
out
outsb
ficomps
mov
or
or
mul
mov
iret
add
inc
dec
stos
add
inc
stos
adc
clc
scas
popf
or
aas
jno
xchg
popf
hlt
xor
fstpl
pop
mov
cld
cld
aad
mov
cltd
sub
and
sub
fbstp
ds
xor
xchg
dec
jbe
ds
repnz
jle
add
inc
outsb
cmp
ljmp
push
push
fnstenv
mov
cmp
aam
sub
sub
mov
lcall
dec
xor
test
mov
pop
xor
mov
xor
sbb
or
mov
aaa
xorl
fwait
cmpsb
out
push
leave
inc
test
add
sub
push
sub
jp
das
or
test
add
mov
fwait
outsb
lcall
cwtl
dec
inc
sti
jg
sti
popa
rclb
xchg
add
pop
mov
push
outsb
pushf
inc
in
add
xchg
cmpsl
cmp
and
mov
lret
scas
xor
push
ds
jle
jg
and
mov
pop
mov
jp
push
mov
pop
inc
rsm
fdivrl
aam
cmpsb
push
rcrb
sbb
sbb
xchg
int
call
adc
flds
fcoml
pop
mov
int3
enter
xorb
xchg
jb
xchg
push
rclb
push
fs
pop
stc
dec
test
mov
push
push
dec
add
mov
insb
push
lods
xorl
sub
and
iret
in
ja
inc
adc
or
fistpl
jp
xchg
stos
push
lods
push
mov
fsub
adc
dec
push
pop
sahf
dec
repz
idiv
mov
mov
arpl
xchg
cld
movsb
jge
movb
mov
adc
cmp
jl
sti
add
mov
sub
subl
mov
xor
sbb
jmp
nop
enter
sbb
imul
add
add
xchg
ror
dec
add
test
push
mov
jge
mov
fdivs
xor
cld
ja
rcrb
dec
stc
int
push
arpl
sarb
adc
jecxz
mov
insl
shl
int
push
ja
push
ss
xchg
jbe
mov
mov
call
ficompl
sub
rol
clc
push
push
or
pop
dec
pop
jo
clc
adc
scas
test
std
popf
ret
add
jne
dec
mov
pop
mov
test
shrl
ja
aam
cmp
ficoml
jl
dec
inc
mov
xlat
inc
cmpsl
and
ja
jmp
xchg
xchg
sbb
add
mov
movsl
xchg
cmpsb
out
jg
iret
hlt
pop
add
pop
shld
mov
bound
xor
mov
call
hlt
pop
repnz
notl
in
jecxz
jg
shrb
sub
xchg
sub
lret
inc
mov
mov
std
shlb
cwtl
mov
loope
inc
fisttpl
jno
xchg
shlb
ret
xor
or
ds
adc
pop
cld
lods
adc
pop
cmpsb
pushf
test
cltd
scas
push
lock
out
in
mov
mov
cs
adc
mov
pusha
mov
xlat
enter
sahf
cld
filds
outsb
xor
mov
xchg
mov
mov
outsb
mov
xchg
jne
lea
in
addr16
int
push
add
pop
shll
call
jnp
outsb
aaa
pop
or
add
pop
popa
outsb
push
inc
cmpsl
pop
lahf
inc
cmc
push
adc
inc
push
mov
sbbb
dec
inc
repnz
push
orb
push
adc
negl
andl
mov
cltd
shlb
pop
adc
out
sub
cmp
adc
mov
push
sub
pop
loopne
fildl
insl
pop
and
mov
lods
pop
dec
or
pop
pop
mov
ljmp
lea
int3
mov
in
lds
sub
pop
movsl
inc
mov
sbb
fcomps
inc
sub
cmp
dec
adc
je
lea
cli
xor
jns
lret
push
outsl
sub
add
lods
aaa
je
dec
or
insb
sub
jl
push
mov
into
test
sbb
xor
jg
rcrb
int
mov
stc
sub
xor
sub
cmp
push
xor
cli
mov
imul
shl
andl
std
pop
fmul
imul
sbb
adc
or
icebp
cwtl
fmuls
sub
cli
pushf
jp
or
mov
or
rcl
push
jae
outsb
pop
mov
aad
jmp
mov
repz
mov
fisubrs
scas
jae
mov
aam
test
nop
jnp
dec
orb
sti
push
sbb
rolb
fwait
rorb
xchg
cmp
mov
popf
or
out
xchg
pop
shll
add
dec
mov
jp
enter
add
adc
imul
jns
pop
inc
aad
push
jb
je
sbbb
xchg
iret
push
lods
push
xchg
inc
shll
push
insl
xor
imul
call
notl
loop
aas
shr
lea
jle
push
jp
sub
jno
pusha
mov
jb
xchg
adc
mov
sarb
inc
adc
sub
xchg
mov
jns
repnz
and
fs
ret
bound
cltd
sub
insb
fisttpll
insb
inc
sbb
dec
or
add
pop
aas
push
jbe
dec
ficoms
cmpsb
cld
cwtl
sbb
adc
adc
fisttpll
in
pop
jo
mov
outsb
xchg
pop
fbld
out
pop
or
das
xor
shll
les
leave
stc
lcall
adc
mov
inc
jge
lea
sub
sti
dec
mov
xchg
jne
sub
push
pop
lods
push
pushf
ds
iret
pusha
inc
cld
andb
mov
mov
movzbl
mov
add
mov
adc
test
in
xchg
loop
jb
lret
icebp
push
cmp
es
inc
aaa
cmp
in
loopne
or
push
inc
sub
test
inc
rol
sub
or
loope
sub
addl
mov
xorb
cld
and
mov
js
filds
push
adc
xchg
push
xor
daa
nop
aas
push
stos
fwait
jge
idivl
hlt
bound
adc
rcrb
shll
aam
jl
fsub
mov
sbb
insb
add
push
xor
pop
in
repz
cmp
jl
lret
cmp
jb
pop
dec
add
insb
mov
xor
dec
add
int
cmp
mov
xchg
into
mov
push
out
dec
ror
adc
lret
out
mov
jge
push
push
sbbl
inc
xacquire
in
sbb
sub
fdivrs
loop
cmc
movsl
fidivrs
sbb
mov
outsl
das
pop
scas
int
jmp
push
and
int3
fstl
pop
jae
mov
hlt
dec
mov
testb
pop
mov
mov
xchg
push
icebp
sbb
cltd
das
push
adc
out
and
test
pop
jp
bound
aaa
mov
push
es
cmpsl
mov
jae
jno
cmpsl
add
adc
sbb
mov
call
mov
icebp
mov
mov
cs
xchg
lods
sbb
xchg
jo
jl
mov
dec
inc
pop
inc
loopne
jns
pop
stos
mov
inc
in
mov
mov
or
in
or
ljmp
xchg
cmpb
insb
int3
rclb
jle
enter
dec
cmpsb
add
cmpsl
arpl
shl
lcall
sbb
jmp
lds
inc
cli
arpl
addl
inc
lahf
lret
sti
mov
adc
add
adc
ret
in
push
xor
sti
pop
adc
out
mov
jae
push
out
push
pop
sub
xchg
push
jae
pop
xchg
add
scas
fsub
lods
xchg
xchg
dec
nop
loopne
inc
xchg
outsb
sub
ret
loope
cmp
jl
cmp
cmpsl
je
push
lahf
pop
mov
or
out
imul
jo
cmp
xchg
pop
pop
and
push
pop
scas
ds
ljmp
shll
clc
mov
inc
stc
rcr
inc
cmpsl
rol
mov
scas
sbb
data16
push
and
push
std
inc
jge
add
pop
cmp
inc
pop
iret
iret
je
ds
add
movsb
xchg
loopne
cwtl
cmp
cmp
pusha
add
sbb
cmpsl
pop
or
sbb
adc
xlat
rorl
cs
xchg
pop
add
jo
mov
mov
arpl
dec
sbb
dec
jp
push
pop
popl
sub
mov
jmp
inc
fsubrl
lods
ja
lret
sbb
sub
mov
and
repnz
add
icebp
imul
mov
ds
jl
xchg
data16
dec
push
cli
push
inc
cmp
and
test
mov
int
lds
pop
ljmp
sub
cs
in
and
cltd
aaa
sub
jg
dec
mov
fadds
divl
test
ljmp
or
and
jecxz
jno
dec
cmp
fnstcw
ss
add
dec
cmc
movsl
push
cmp
mov
clc
es
leave
mov
icebp
dec
lods
out
cmp
sub
je
stos
ja
sbb
and
inc
push
cmp
and
sbb
or
out
and
mov
push
pop
clc
sbb
push
push
pop
and
pop
movsb
leave
stos
mov
ret
mov
mov
cmp
in
mov
mov
dec
pop
ret
dec
dec
jno
push
testb
es
push
mov
mov
push
push
add
push
in
cmp
roll
mov
mov
int
imul
xor
movl
mov
mov
in
inc
mov
pop
hlt
mov
adc
icebp
cmp
sub
pop
push
insl
add
dec
xchg
fstpl
jb
bound
cmpsl
jecxz
out
cmp
add
pop
test
pop
mov
iret
push
les
dec
pop
xor
mov
sub
jp
call
and
lahf
div
mov
test
xchg
loop
cmp
mov
inc
lea
dec
jbe
xchg
in
jnp
sbb
xchg
sarl
sbb
xchg
js
push
jle
andl
adc
sub
jae
lods
add
iret
adc
sub
mov
jecxz
add
pop
sub
add
mov
cs
sub
lods
imul
xor
lods
out
leave
jl
mov
adc
arpl
mov
popa
ret
mov
je
sub
mov
gs
sub
ret
nop
adc
cli
sbb
mov
pushl
or
push
fnstsw
iret
mov
scas
insl
jo
mull
in
shlb
jecxz
inc
jo
adc
fcomp
adc
mov
negb
mov
jno
out
je
push
jne
jmp
mov
push
xchg
mov
cmp
xor
jg
aam
xchg
and
pushf
pop
in
jnp
sbb
jg
sbb
sahf
repnz
or
pop
subb
dec
jg
and
outsl
xchg
dec
cmp
fidivl
lcall
pop
jb
daa
cmp
into
add
in
stc
and
push
cmc
dec
pop
adc
inc
mull
and
popf
and
je
sbbl
lock
add
fiaddl
in
sbb
aad
sbb
push
xchg
push
gs
cmp
jnp
mov
int
je
mov
leave
mov
or
enter
sbb
add
loope
and
pop
inc
js
push
cmp
scas
stc
add
ljmp
or
adc
adc
push
sub
mov
in
fimuls
cmc
ds
or
adc
cmpsb
inc
mov
push
sti
popf
pop
jo
push
and
popa
scas
ss
je
mov
mov
jge
cmp
lods
test
xlat
or
xor
fidivrl
fisubrl
push
mov
cmc
sahf
adc
adc
mov
fisubrs
mov
jnp
jnp
jecxz
pop
repz
sub
mov
mov
push
sti
xchg
xchg
ljmp
outsl
ficoms
mov
imul
pop
jae
decl
cltd
call
dec
xor
inc
roll
iret
in
mov
sbb
enter
or
mov
cmp
jp
loopne
inc
mov
pop
ds
mov
fcomi
imul
arpl
dec
cs
and
adc
adc
push
js
mov
lret
adc
test
aam
adc
ret
mov
insl
clc
lock
dec
mov
or
fadds
inc
jae
jmp
icebp
mov
data16
js
mov
mov
aam
repnz
mov
cmpsb
testl
outsb
hlt
in
inc
jmp
or
jp
pop
sbb
add
dec
mov
lds
movsb
stc
fdivrl
daa
dec
inc
xchg
add
in
cs
lahf
dec
jns
negl
add
pop
and
sbb
in
cld
or
fisttps
and
xchg
jo
loopne
push
sbbb
sbb
cld
into
scas
pop
lods
or
adc
cmp
push
sub
lock
and
or
mull
daa
cmp
mov
push
xchg
push
dec
and
outsl
fimuls
loop
xchg
push
sub
sbb
out
notb
in
andb
mov
cmc
sub
or
repnz
mov
dec
push
les
cmp
dec
sti
divb
mov
rcll
jns
pop
stc
cmpsb
ret
loopne
cmpb
dec
mov
ret
sbb
sbbb
cmp
cs
cmp
jnp
aam
ret
sub
movl
push
mov
push
fdivrl
les
pop
mov
jmp
das
jmp
inc
mov
outsb
ljmp
mov
imul
jmp
xor
aas
inc
imulb
mov
adc
jbe
packssdw
and
pop
ja
adc
test
mov
fists
add
rolb
jl
es
cltd
clc
xchg
fstpt
movl
lods
mov
push
ljmp
popf
cmpsl
xor
jno
stos
sar
push
mov
or
push
sub
jb
in
add
call
add
jae
pop
insb
mov
mov
nop
negl
icebp
cmp
mov
push
stc
inc
lods
fsubr
iret
and
push
fabs
add
pop
jp
pop
sub
or
sub
cmp
cs
xchg
adc
in
daa
mov
ret
add
sti
pushf
outsb
add
testl
in
pop
lahf
popf
mov
lahf
insb
cmc
cli
pmullw
xchg
out
lods
and
cmp
mov
in
inc
mov
repz
jmp
mov
faddl
sub
lret
outsl
les
push
sbb
mov
sarb
imul
mov
fs
pop
fisubrl
sub
jl
cmpsl
lahf
mov
out
xchg
subb
dec
lea
loopne
stos
jno
xor
mov
jo
popl
test
aas
out
push
stos
icebp
push
push
inc
mov
cmp
add
in
sbb
mov
mov
pushf
call
jno
cmp
in
out
es
nop
mov
mov
mov
push
sub
inc
stc
icebp
out
mov
push
and
insb
dec
sub
lock
cltd
test
adc
inc
out
fidivrl
sarb
inc
sbb
adc
jle
fildl
xchg
in
sub
jle
ljmp
gs
cli
insb
mov
test
sub
outsl
dec
push
sahf
nop
xlat
or
sbb
jecxz
push
arpl
notl
pushf
add
cmp
mov
and
notb
cmc
add
xchg
sbb
or
jns
adc
mov
add
dec
stos
mov
cmc
or
sub
into
lcall
outsb
lock
push
dec
pop
pushf
loopne
int
sahf
mov
lods
scas
xchg
stos
mov
mov
dec
or
movsb
ret
dec
cmpsb
insb
popf
test
rclb
aaa
xchg
js
cld
mov
stc
dec
sbb
jge
leave
jno
ret
out
jge
int
jle
sbb
aas
or
ds
lcall
in
fldcw
cmpsl
data16
and
nop
jp
les
lea
adc
lret
movsb
les
sbb
shll
and
jnp
pop
add
or
fwait
fwait
outsb
inc
cwtl
dec
ljmp
cwtl
stos
and
cmpsb
or
sbb
repnz
push
push
or
xlat
mov
shrl
loopne,pn
mov
inc
stos
daa
push
mov
pop
pop
hlt
mov
or
mov
push
arpl
or
mov
xor
ret
sahf
push
into
jp
mov
pop
lcall
out
inc
or
or
mov
in
push
fwait
mov
mov
cmpsb
mov
dec
mull
pop
inc
dec
adc
xchg
pop
push
mov
cmpsl
pushf
imul
cmpb
dec
sarl
or
and
mov
push
push
adc
pop
adc
es
add
repnz
shr
jne
jmp
lcall
mov
scas
dec
test
push
cmc
cmp
daa
xor
jnp
jge
test
dec
pop
std
mov
dec
add
add
xor
arpl
dec
xchg
sti
int3
jecxz
fs
inc
sbb
jecxz
pop
and
imul
xor
clc
out
nop
inc
out
shlb
add
lret
lret
aad
dec
int
bound
stos
nop
repnz
sbb
push
add
fnstcw
subb
lcall
and
or
xchg
adc
imul
lahf
xchg
test
jg
sub
pop
ds
cmp
sub
dec
popa
dec
shrl
pop
testl
sub
jno
or
add
lahf
inc
xchg
push
jo
xor
sbb
cmc
mov
jl
cmpsl
xor
bound
sub
jge
aas
mov
sbb
or
xchg
ret
popa
test
jns
sub
adc
in
test
jecxz
nop
aam
aaa
mov
mov
adc
jecxz
outsl
sahf
mov
pop
dec
enter
imul
sbb
mov
cmpsb
dec
std
test
nop
lahf
clc
push
add
sbb
mov
xlat
inc
imul
arpl
push
lret
mov
push
dec
inc
adcl
fildl
and
adc
out
sub
push
cwtl
cmp
push
dec
xorb
ret
sbb
in
add
daa
hlt
ret
out
std
mov
mov
sub
push
cmp
int3
aas
push
sub
push
hlt
sub
imul
xor
lds
xor
mov
push
xchg
push
dec
es
es
inc
js
mov
stos
icebp
mov
push
imul
ja
inc
hlt
xor
lret
xchg
mov
push
mov
movsb
cmp
shll
mov
mov
movb
xchg
repz
pop
xchg
cwtl
enter
popf
and
lds
mov
jg
stos
mov
imulb
push
or
or
inc
jl
add
mov
push
jl
and
addl
add
popf
mov
iret
mov
les
mov
add
dec
mov
leave
cwtl
jg
dec
inc
push
mov
xchg
rorl
sub
cs
mov
in
fwait
cmpsl
adcb
popa
ja
push
sub
cmp
cmc
inc
push
test
xchg
xchg
sarb
sbb
dec
xchg
insl
popf
add
rolb
jp
in
jg
pop
mov
call
cmpsl
jl
stos
outsl
jp
into
sbb
cmp
adc
hlt
aam
xor
lods
loop
idivl
dec
into
jge
sub
inc
add
and
lret
cli
inc
cmp
cmp
in
push
cmp
pop
lret
ljmp
fmull
lock
ds
popa
icebp
hlt
shl
fcmovbe
add
hlt
mov
mov
xor
in
insb
int3
pop
adc
fsub
rcll
popa
sbb
pop
movsb
test
lods
push
adc
mov
stc
push
pop
js
xchg
pop
pushf
jle
in
repz
cmpsl
xchg
jmp
scas
push
addr16
stc
je
mov
rorl
add
ret
into
cmp
test
jle
or
xchg
add
jle
xchg
mov
cmp
xchg
dec
mov
scas
add
out
jecxz
outsb
lret
call
xchg
mov
sti
mov
clc
stc
aas
sahf
inc
sub
mov
mov
jecxz
xchg
add
mov
mov
jmp
into
jl
jmp
mov
mov
push
lret
sub
addr16
test
mul
cmc
mov
sahf
sbb
jo
mov
push
ret
or
adc
cmp
ficomps
cmc
mov
jg
lock
sub
sbb
sbb
int
gs
dec
hlt
mov
test
in
imul
cwtl
pop
out
add
dec
popf
mov
push
jo
xchg
loop
sbb
mov
adc
mov
mov
std
push
filds
and
fsts
pop
sbb
into
adc
out
xor
jb
push
dec
lret
jl
cwtl
xchg
mov
jns
mov
pop
inc
add
fsub
push
daa
mov
scas
mov
adc
mov
add
shl
cltd
or
inc
dec
xchg
roll
push
movsl
movsl
call
pop
clc
ja
xchg
ficoml
movsb
outsb
aam
imul
or
pop
pusha
push
subl
adc
jno
or
aam
cmp
mov
fstps
push
push
filds
int
mulb
cld
inc
incb
outsb
adc
lods
jle
mov
mov
pop
and
std
pop
push
mov
pop
jne
xor
scas
cmp
jnp
dec
fs
popf
rcll
popa
dec
insb
arpl
mov
cli
add
push
in
sub
xchg
and
and
in
push
mov
test
pop
inc
fldcw
sub
sbb
ss
dec
int
xor
mov
pop
fucomp
iret
cmp
test
call
jnp
or
mov
mov
adc
ret
add
and
jp
imul
dec
iret
sub
cmp
pop
ret
loope
add
shlb
insb
lahf
aas
cmpsb
in
out
sar
enter
dec
and
sbb
ret
push
sbb
out
or
pop
lret
subb
in
push
add
mov
je
and
or
aaa
scas
aad
mov
jmp
lahf
push
out
in
xchg
jmp
jmp
pop
cmc
and
add
rcrl
icebp
mov
dec
les
stos
test
mull
pop
jnp
shlb
or
xlat
xchg
xchg
xlat
cmp
jle
mov
jle
xchg
mov
js
and
dec
mov
test
xchg
jne
out
leave
pop
icebp
repnz
inc
arpl
cmp
mov
sub
mov
cmpsb
call
xor
jle
popf
fisttpll
mov
adc
inc
fidivs
sbbl
into
xchg
scas
or
scas
data16
bound
xchg
call
sub
cmp
jo
adc
and
mov
scas
push
sti
adc
enter
jge
adc
addr16
mov
xor
add
or
insl
xchg
sub
pusha
fcomp
je
shlb
mov
lcall
cmp
mov
pop
inc
mov
push
xor
inc
data16
push
push
nopl
add
ss
scas
dec
ja
xor
and
and
sti
and
test
rcr
scas
cmp
xchg
lock
cwtl
lods
push
push
lds
xchg
jmp
mov
leave
jg
sub
jp
cli
jg
pop
iret
adc
loop
pop
dec
cmp
dec
in
jne
fwait
cmp
cmp
add
cmpsl
push
xor
es
xchg
cmp
int
mov
sarl
cmpl
outsw
xchg
mov
inc
mov
lods
popa
push
pop
adc
jle
sar
dec
fwait
mov
push
pop
inc
cs
stos
jmp
stc
cs
sub
mov
inc
mov
jbe
inc
bound
fidivrs
lret
iret
mov
mov
lds
push
test
cld
je
std
in
jg
aaa
sar
mov
pop
jecxz
fildl
cwtl
aas
xchg
stc
stc
mov
test
adc
mov
stc
sub
xor
add
out
mov
cmpsb
das
test
xor
mov
scas
iret
jbe
jg
push
xor
lcall
and
mov
pop
sbb
pop
jecxz
pop
jle
cli
jg
add
imul
imul
dec
negb
lods
cltd
mov
scas
or
mov
cwtl
pop
jmp
aad
add
or
pmullw
add
pop
shr
push
sub
add
pop
sqrtps
cmp
push
or
mov
loopne
xor
inc
dec
imul
bound
cmp
pop
pop
cli
mov
test
in
es
aam
push
push
mov
testl
inc
xor
mov
or
dec
push
mov
push
dec
jnp
int3
and
icebp
sub
fdivrl
push
mov
mov
xchg
popa
jg
stos
or
ret
outsb
stos
das
add
mov
es
sub
mov
jae
sbb
out
cltd
jbe
add
addl
das
jo
dec
inc
lea
sarl
pop
push
outsb
sub
jge
nop
repnz
cmp
movsl
pop
stos
loopne
scas
fs
add
mov
mov
and
test
leave
xchg
dec
fiaddl
cmpsb
fcmovne
mov
fidivrs
jl
in
adc
or
cmp
aad
dec
and
mov
dec
cmp
fidivrl
cs
movsl
xor
int
mov
pop
and
rorb
and
mov
jb
jg
jg
sbb
mov
push
stos
and
inc
ja
gs
ret
cmp
imul
stos
push
leave
xchg
dec
push
pusha
push
ja
daa
fcompl
fcos
test
push
imul
lret
add
test
push
sbb
add
movsl
xor
test
das
cwtl
stos
adc
jl
push
jmp
orb
inc
es
insb
pop
lods
inc
jo
and
outsb
push
add
std
xchg
push
push
cltd
out
fstpl
and
lods
ds
fisubl
cmpl
cmp
mov
add
test
test
scas
popa
mov
cmpsb
nop
mov
das
jne
jge
outsb
mov
jp
and
cmpsb
push
mov
mul
jno
dec
inc
dec
sahf
or
add
addr16
mov
fstl
push
push
add
out
jns
nop
adc
xor
cmp
mov
cld
jo
push
rorl
xorps
inc
dec
jl
clc
mov
xchg
sub
mov
pop
sbb
adc
mov
jns
and
movb
mov
sub
repnz
lods
jg
sbb
mov
xor
mov
add
inc
cmp
enter
pop
pop
xor
mov
pop
or
jge
enter
sbb
sub
mov
popf
adc
or
inc
xchg
jnp
cs
add
ss
cmpsl
pop
pop
push
dec
mov
int3
sub
mov
pop
lods
adc
mov
sarb
push
test
cmp
ljmp
mov
outsb
int3
push
out
outsb
ficomps
shl
aad
cmpsl
aaa
lods
aad
adc
sub
mov
pushf
gs
rcrl
mov
pop
dec
mov
inc
in
fs
sahf
mov
add
mov
jmp
xor
repz
sub
lea
inc
adc
xchg
lahf
outsb
sti
in
mov
xor
aaa
add
jbe
push
decl
testl
push
jne
cmp
outsl
imul
mov
cmp
aaa
jb
scas
aad
sbb
test
mov
int
pop
shlb
jmp
push
cmp
cltd
sub
jl
movsl
jl
adc
mov
xchg
mov
xchg
and
rcll
out
sti
ja
inc
xchg
loop
sbb
cmpsb
pop
clc
pusha
sub
stc
xor
adc
jl
mov
pop
cld
js
jmp
mov
aam
testb
add
test
adcl
in
cwtl
jle
push
push
add
incl
and
xchg
pusha
add
sub
stc
in
mov
rolb
cmp
jo
mov
divb
ljmp
cmp
or
out
push
mov
stc
imul
shr
std
arpl
sbb
jb
movsl
fstpt
ret
lret
lcall
push
and
lods
cmp
lods
sub
mov
mov
ror
xchg
xchg
push
stos
mov
cld
leave
mov
pop
in
pop
adc
mov
cmp
inc
xor
scas
cmpsb
dec
pop
lods
outsl
jl
in
test
cmp
xchg
cmpsb
mov
andl
sbb
push
mov
push
insl
stc
in
into
jge
xor
leave
clc
mov
fdivl
push
imul
daa
stos
test
xor
sub
mov
enter
sub
lea
stos
imul
mov
fisttps
add
fwait
inc
in
ss
or
decb
std
inc
jnp
fcomp
loop
jecxz
sub
cmp
xor
ss
lcall
lea
movsl
int3
ljmp
int3
mov
ss
adc
fildll
test
jo
jp
push
dec
in
fsubl
jbe
test
cs
sbb
stos
sub
cmp
rclb
xor
xor
fwait
sub
outsl
add
inc
pop
cltd
mov
xchg
push
pop
jno
cmp
cwtl
imul
int
cli
inc
ds
pop
mov
into
mov
mov
fs
cmpl
adcb
ret
and
neg
cltd
cltd
push
dec
sbb
mov
push
insl
roll
or
pop
leave
pop
sbb
push
orb
popf
jbe
int
cwtl
mov
and
stos
pushf
test
out
mov
loopne
idivb
or
int3
enter
jecxz
mov
daa
mov
mov
outsl
push
imul
dec
jo
pop
and
xchg
rorl
adc
stos
ret
xchg
and
sub
neg
mov
inc
mov
lret
xchg
popf
or
not
test
sub
ret
nop
xchg
lahf
adc
dec
jg
dec
ret
fisttpl
dec
lahf
ja
inc
out
out
or
fnstcw
inc
sbb
jmp
sbb
jbe
aam
jne
inc
aad
mov
sbb
mov
inc
and
pushl
test
pop
pop
and
jne
dec
sub
fists
cmp
xchg
inc
push
mov
xchg
mov
icebp
push
and
aaa
shrb
sbb
imul
out
cmp
sub
mov
jnp
jno
inc
adc
movsb
pop
incb
mov
scas
imul
lret
sub
enter
mov
lret
mov
repnz
hlt
movl
mov
test
rcll
xorps
inc
dec
jl
clc
mov
push
mov
xchg
inc
insl
rcrl
push
mov
xchg
addl
add
fidivrl
mov
outsb
int3
push
out
outsb
ficomps
sbb
dec
mov
vpaddw
pop
dec
sti
lret
cmp
mov
sar
push
sti
js
mov
and
pusha
ret
xorl
lahf
test
adc
cmp
or
lods
sbb
pop
daa
inc
mov
dec
inc
arpl
sbb
pusha
dec
pushf
pop
jl
int
addr16
push
push
shlb
insb
jb
movsl
ds
push
cmc
pusha
loop
clc
jg
jb
out
repnz
repz
hlt
inc
fists
xor
mov
inc
aaa
aas
xlat
lods
sub
sub
mov
dec
inc
adcb
mov
inc
sbb
dec
dec
pop
fistpl
push
repnz
in
in
mov
pop
push
mov
sbb
jno
or
add
dec
mov
inc
stos
in
flds
shl
jb
inc
fisttpll
pop
jne
gs
icebp
mov
add
xchg
fstl
add
les
adc
fs
pop
test
rorb
inc
cmp
les
add
sub
test
ljmp
test
or
loopne
scas
dec
cltd
aam
cltd
insl
ds
cld
scas
xchg
dec
ret
mov
mov
or
xor
ljmp
stos
sbb
pop
xchg
in
add
cmp
ds
pusha
inc
inc
std
daa
xlat
or
push
jmp
mov
test
pop
jmp
sbb
pop
push
cmpsl
cmpsb
push
iret
and
sahf
sub
mov
or
dec
mov
test
jecxz
cmpb
int3
pop
lea
push
lcall
in
lods
pop
or
xorl
fmull
pop
push
jne
adc
in
mov
je
out
push
dec
adc
xchg
jnp
fwait
test
cwtl
cmpl
jb
jmp
lea
mov
sbb
sub
mov
call
es
call
jg
dec
sub
pop
cltd
push
rorb
outsl
sahf
cmp
and
push
rorb
sbb
lcall
sub
daa
pop
call
cltd
sub
push
jnp
out
fdivr
jno
fcoms
aad
add
mov
ret
ja
xchg
scas
add
pop
dec
movsb
repz
sbb
dec
xchg
jnp
xchg
lret
call
pop
repnz
inc
sbb
cmp
popf
jb
add
push
push
dec
fcomi
mov
mov
fwait
sub
inc
lods
xchg
sub
daa
mov
std
jge
inc
in
adc
hlt
mov
adc
loopne
or
subb
rep
jo
loope
inc
loop
inc
test
or
pop
jo
insl
pop
or
sub
icebp
cmp
xchg
into
outsl
aam
xchg
cmp
icebp
push
clc
cmc
and
and
lret
push
rcll
fisttpll
jne
pop
inc
jb
cmpb
rcl
jne
sbb
popa
and
mov
push
cwtl
xchg
xchg
xlat
mov
jmp
mov
test
ss
xor
testl
and
cmp
dec
mov
icebp
cmp
outsl
lock
lret
je
or
sub
cmp
jmp
fstl
outsl
xchg
sbb
ja
fcompl
sarl
sbb
es
add
xchg
cwtl
in
ret
cwtl
fsubrl
test
sub
adc
jp
imul
jmp
adc
or
das
mov
imul
xchg
mov
adc
push
jne
sub
xchg
dec
cmp
adc
mov
rclb
pop
pop
ja
imul
push
lret
pop
and
sbb
dec
pop
add
shr
pop
pop
push
dec
repz
mov
jbe
push
fimull
push
mov
and
mov
lret
push
xlat
popf
jg
sbb
mov
outsl
test
stos
push
mov
scas
lods
push
inc
out
outsb
cmp
ret
mov
mov
jl
sub
repz
jmp
popa
sbb
jg
dec
out
jl
cmp
and
jge
movsl
fs
test
icebp
ljmp
inc
jecxz
mov
cmc
enter
mov
enter
pop
and
dec
inc
les
pop
fmul
mov
xchg
sbb
adcb
add
push
in
loopne
stc
xor
sub
xchg
push
aas
mov
sarl
cli
adc
into
lahf
pop
inc
imul
rolb
jge
push
rorl
pop
dec
mov
or
in
pop
xchg
push
and
jae
nop
iret
mov
loopne
lret
and
stos
mov
mov
lcall
jecxz
loope
cmc
xchg
xorw
std
mov
push
add
pop
xor
jno
out
adc
push
push
pop
inc
in
adc
rcll
sbb
jle
mul
mov
inc
sbb
out
test
mov
imull
jnp
in
pop
insb
jmp
xchg
flds
popf
jmp
mov
fxtract
xor
add
dec
and
sahf
arpl
adc
repz
or
xchg
dec
loop
push
iret
dec
pop
sarl
lahf
xchg
flds
adc
leave
lea
lret
insl
sbb
pusha
inc
xchg
loope
push
sbb
and
xchg
mov
je
fisubl
xorb
paddq
mov
je
jecxz
out
push
pusha
xchg
mov
or
lahf
rclb
loop
hlt
je
pop
imul
inc
mov
jmp
cs
dec
shl
push
shll
mov
dec
pop
push
xchg
pop
insb
div
fsubrp
jnp
aad
test
jnp
aad
sub
inc
cmpsl
subb
gs
into
fidivrs
lds
jge
pushf
fnstcw
out
mov
es
mov
cmp
ljmp
je
mov
add
rcrb
adc
sbb
push
lcall
add
mov
loope
cmc
pop
repz
add
add
aas
insb
pop
ret
and
push
xchg
daa
cmp
or
aaa
jl
xor
or
adc
psllq
jl
loopne
scas
lods
fs
subps
jns
sbb
pop
and
aad
push
sub
xchg
sub
mov
pop
xchg
sarl
test
and
gs
sub
mov
inc
inc
insb
stos
int
cmp
adc
rcll
inc
push
dec
push
in
cmp
scas
mov
imul
cmp
out
stc
out
rcrl
sub
outsl
fsubrs
adc
lret
dec
sub
cmp
sbb
in
xchg
in
enter
push
mov
add
lea
inc
xchg
cwtl
mov
bound
push
add
add
movl
mov
int3
push
xbegin
shrl
shll
jns
in
pushf
jmp
jg
jb
scas
adc
das
mov
mov
mov
inc
or
adc
nop
bnd
sub
pop
sub
jns
scas
xor
and
fadds
xor
out
and
push
gs
test
mov
dec
adcl
pop
or
outsb
xor
mov
and
or
mov
and
adc
mov
pop
cmpsl
push
movsb
fstpt
call
or
adc
sub
test
jnp
sar
lret
sbb
add
sbb
or
lret
pop
add
nop
or
sub
or
ficoml
es
ret
mov
fidivrs
cmp
add
cmp
and
xchg
adc
adcl
pop
mov
jno
jg
mov
mov
lods
fucomip
sbb
or
push
push
xor
cmp
je
mov
push
rcll
sbbb
icebp
lret
pop
test
pop
push
and
fisubs
rcrb
mov
fmuls
sar
xor
pop
movsl
std
loope
test
add
and
pop
xor
jns
inc
cmp
xor
rolb
jmp
xor
cmpsl
dec
push
add
mov
jle
add
adc
add
xchg
mov
ljmp
cmp
jle
fistl
std
or
fwait
enter
pusha
mov
add
test
cmc
xchg
xchg
add
inc
subl
mov
and
mov
rorl
mov
inc
test
rolb
xlat
xchg
hlt
sub
adc
lahf
imul
sbb
push
sub
and
xchg
jge
jl
inc
jl
pop
in
cmp
dec
ja
sub
aad
int3
xor
xchg
mov
dec
jae
fisubrl
add
shlb
lods
xor
data16
jns
sti
and
je
movsl
lods
lods
push
inc
shll
loopne
inc
and
jne
sti
sub
jns
mov
mov
sbb
es
or
push
arpl
sbb
inc
jmp
push
xchg
add
popa
mov
sbb
ror
jne
inc
stos
es
add
and
stos
mov
mov
mov
sti
cmp
xor
stos
ja
stc
inc
inc
fiaddl
cmp
lcall
cmc
mov
cmp
aam
mov
cmc
aas
fisttps
and
dec
cli
jecxz
outsl
pusha
pop
and
pop
pop
shl
sbb
mov
pop
cmpsb
and
bound
fistps
mov
shll
subl
xchg
adcb
aaa
pop
insb
xor
dec
mov
lret
ds
rclb
call
inc
jne
push
mov
aam
add
pop
jb
mov
pusha
xor
out
lret
fs
subb
mov
inc
mov
push
aam
jmp
and
out
mov
mov
push
dec
mov
mov
icebp
add
pop
jecxz
push
mov
push
mov
in
dec
not
jns
lahf
adc
clc
stos
pop
pop
pop
add
push
in
cmp
les
int
add
test
gs
loop
nop
jp
popa
ja
pusha
xor
sbb
pop
jge
mov
fldenv
adc
test
mov
scas
in
rolb
outsb
jmp
cld
inc
call
push
push
js
pop
out
in
add
sub
int3
adc
aam
daa
pusha
xor
out
jns
cmp
pop
inc
movb
xchg
fnsave
sbb
pop
out
cmpsl
push
push
or
add
sbbl
fists
repz
lahf
push
cmp
mov
add
push
mov
hlt
ret
push
movsb
xchg
popf
call
xor
cmpsb
xor
lahf
jno
pop
mov
pop
jg
jmp
insl
int3
adc
outsl
repz
sahf
insl
mov
adc
into
pop
daa
arpl
xor
pop
mov
cmp
fistl
sbb
loop
dec
xchg
call
mov
fmuls
sub
adc
mov
xchg
cmpsb
push
and
ljmp
cltd
jo
das
scas
mov
dec
jbe
scas
or
and
cmp
mov
lods
aad
lods
pop
or
pop
fldt
mov
and
cli
cmp
inc
repz
call
add
xchg
and
cwtl
xchg
and
es
dec
js
cmp
insl
in
enter
xchg
mov
aaa
xor
or
ljmp
cmp
cmpsb
add
pop
xchg
mov
push
leave
mov
jo
lods
ss
add
mov
popf
out
icebp
iret
jle
jb
mov
inc
sahf
sti
push
jno
cli
insl
sub
jnp
cmp
repz
push
out
sbb
fstpt
fs
das
dec
dec
sahf
lods
mov
sbb
sti
imul
jno
sub
pop
push
push
in
cmp
jo
bound
push
stos
mov
repnz
testb
aad
mov
adc
dec
ja
pop
pop
lods
bound
sub
lods
cmp
mov
xchg
pushf
lds
lahf
lahf
jge
xor
ljmp
and
cltd
fimuls
or
mov
add
mov
push
je
pop
addr16
test
jo
jmp
mov
aas
ljmp
xchg
in
repz
test
jb
lret
mov
sahf
minps
add
stc
jb
cmp
push
insl
fdivrl
dec
aaa
xchg
divb
mov
xor
fisttps
dec
pop
inc
ds
mov
cmpsl
push
test
pop
xor
pop
mov
dec
pushf
add
shl
and
cli
push
addl
into
subl
inc
ss
fcompl
gs
pop
rolb
mov
pop
jbe
pop
push
cmpsb
cmc
js
pop
icebp
pop
and
inc
adc
xchg
and
push
push
mov
mov
pop
ds
adc
les
xor
cmc
add
inc
lcall
iret
pop
add
jns
jne
pop
jge
or
and
jle
pop
icebp
push
and
push
test
or
cmc
inc
sub
jnp
pop
sbb
arpl
rclb
loope
inc
dec
stos
pop
jmp
dec
test
jnp
adc
cld
dec
stc
or
mov
add
lahf
dec
inc
cltd
pop
das
add
loopne
cld
dec
xor
frstor
daa
mov
dec
repz
movsl
dec
sbb
mov
sbb
test
daa
test
mov
lret
xchg
xor
cmp
jl
lods
fwait
cltd
sarb
cltd
xor
push
or
les
testl
sub
cmpl
test
push
pop
cmp
jae
lret
cli
imul
gs
push
pushf
push
mov
mov
aaa
jge
insb
add
scas
cs
and
add
jb
fiaddl
xchg
or
insb
and
cmc
xlat
pop
mov
and
sub
xchg
fisubrs
pop
fadds
sbb
lahf
lods
pop
shrl
xor
sbb
adc
mov
push
in
push
outsl
jns
test
fsubs
pop
add
mov
dec
push
scas
pop
jno
and
repnz
xchg
and
lods
dec
pushl
stos
dec
mov
fimull
aaa
adc
jecxz
or
pop
call
push
mov
mov
pop
sbb
aas
and
popa
mov
push
and
xor
xor
iret
sub
out
mov
mov
roll
leave
test
jne
cmc
pop
cmp
push
pop
stos
pop
push
mov
cmpsb
xchg
add
pop
pmaxsw
ret
in
adc
or
pop
push
adc
aad
in
ljmp
add
ljmp
pop
pop
xlat
arpl
dec
adc
out
push
incb
mov
testb
xchg
clc
mov
clc
js
stos
push
fwait
addr16
stc
push
into
or
or
lahf
sbb
fwait
pop
mov
xchg
hlt
xchg
push
out
cmpsl
jp
ljmp
and
sub
mov
aas
sub
or
and
fildll
scas
sarb
fs
test
jae
inc
lock
mov
cld
sbb
mov
dec
iret
xchg
jo
sti
in
cmp
cmp
xlat
xchg
bound
jl
jg
test
dec
adcb
cmp
inc
faddl
in
adc
pop
and
repnz
icebp
fdivl
mov
fs
jnp
inc
adc
in
das
inc
lret
mov
xor
adc
lret
insb
dec
sub
pop
jno
or
pop
cmp
or
cmpsl
pop
ja
rorb
and
mov
sbb
push
push
cmp
out
and
jmp
dec
data16
out
loop
mov
insl
mov
push
enter
test
ret
scas
in
cmp
in
shrb
cmp
ret
pop
hlt
mov
sub
shr
jmp
in
or
mov
dec
repnz
mov
push
push
aas
jbe
add
inc
inc
lahf
stos
idivb
xchg
and
imul
call
xchg
sub
lea
stos
cli
and
es
xor
mov
push
jmp
and
in
outsb
out
pop
les
stos
xor
adc
jno
out
jne
mov
test
testb
es
movsl
xor
rcll
sub
imul
mov
jle
and
sub
mov
push
roll
jp,pt
mov
xor
pop
or
jecxz
lods
xlat
cltd
jo
or
jnp
xor
xchg
lock
outsb
cmpsl
jge
add
and
test
add
push
imul
lods
sar
cmpsb
pop
and
xchg
inc
or
lods
adc
xchg
data16
std
sti
fmul
pop
jne
inc
mov
in
or
bnd
gs
mov
sbb
xorb
aas
pop
das
aam
lret
repz
jg
data16
js
or
fldcw
push
popf
push
pop
lahf
pop
scas
cmp
test
pushf
add
cs
jno
push
sub
rsqrtps
mov
lea
pop
cld
jbe
mov
in
std
xorb
out
aas
or
in
movsl
sti
enter
das
sbb
mov
sbb
insl
mov
ja
es
and
addr16
mov
xchg
add
test
jb
or
or
xchg
aam
stos
push
scas
cld
ds
xor
icebp
aad
mov
pop
popf
scas
adcl
xchg
fists
ds
scas
push
inc
or
add
ret
xchg
xor
jnp
std
mov
out
lahf
and
add
xchg
jecxz
cmpsb
leave
stos
and
pusha
iret
mov
cmpsb
mov
jo
cmp
dec
push
xor
outsb
xchg
flds
imul
or
cltd
xchg
addr16
dec
mov
adc
test
pop
mov
scas
aam
shld
out
shll
sub
sbb
jmp
sbb
sti
dec
xchg
mov
and
aaa
push
push
push
in
ret
xor
flds
aaa
or
jne
test
pop
jg
mov
jg
movsl
push
or
inc
ljmp
stos
push
pop
pop
jmp
add
fs
push
ret
mov
pop
mov
adc
xor
mov
fldt
pop
xchg
lret
lock
xchg
sbb
ja
push
pushf
mov
mov
daa
add
jne
jo
inc
jns
rcll
mov
loope
dec
outsl
inc
add
js
out
xchg
mov
movsl
das
lds
mov
lods
cmpsl
dec
inc
mov
sahf
imul
clc
cmc
inc
mov
jo
dec
shll
sti
cmp
dec
and
fmull
fs
bound
pop
xchg
inc
mov
sub
push
pop
fs
cmpsb
cmp
ja
or
add
add
rcrl
sbb
mov
sub
xor
push
jle
aaa
sahf
mov
jecxz
xchg
xchg
popa
stc
dec
gs
cmc
scas
je
mov
enter
pop
adc
dec
icebp
aas
and
ret
mov
mov
pop
fiadds
aam
aam
pop
pop
cmp
or
loopne
pop
out
fmull
out
inc
xchg
js
pop
mov
mov
xor
shrl
fdivs
cmp
mov
jns
adc
pop
jge
xchg
into
xor
sbb
inc
outsb
xor
adc
pop
cmpsl
in
push
push
mov
ljmp
xchg
outsb
jns
imul
mov
pop
pop
psubusw
in
in
out
xchg
insb
push
vsqrtps
and
leave
xchg
push
sub
imull
mov
sar
ss
cmc
les
jae
add
cmpb
daa
cmpl
push
xor
add
fwait
inc
mov
outsl
add
xor
xchg
push
jno
insl
and
jp
pusha
shrl
sub
loop
xor
xor
mov
adc
loopne
xchg
jecxz
scas
cmp
jle
sub
outsb
push
adc
int3
dec
jae
test
loopne
add
mov
les
daa
fnstcw
jo
or
popf
movsl
xchg
xchg
stos
adc
les
cmp
loop
test
cwtl
fcmovu
rcrl
pop
negl
cli
sbb
imul
dec
inc
jae
loopne
jb
sub
sti
mov
stos
push
repnz
stos
inc
sub
outsl
dec
iret
iret
cmp
je
fldl
imul
add
shlb
mov
and
pusha
or
mov
pop
out
ficompl
xor
add
loop
es
into
ret
cmp
hlt
adc
pop
ret
xor
pop
sbb
pusha
mov
or
dec
int3
aam
sub
fdiv
and
jmp
aam
pop
jmp
mov
aaa
push
cltd
mov
in
add
adc
mov
mov
inc
repz
cmp
or
scas
adc
fwait
insb
jmp
add
cltd
mov
loop
idiv
sub
adc
xor
mov
jg
jmp
loop
or
out
inc
jne
aaa
jno
jecxz
icebp
dec
cltd
scas
mov
les
loopne
shlb
xchg
scas
popa
mov
mov
movsl
xor
dec
lea
push
sbb
ret
test
repnz
lret
mov
jne
fninit
fildl
mov
cmp
fnstcw
shl
stc
loope
jecxz
and
dec
push
mov
mov
and
push
fbld
dec
mov
call
test
test
popf
imul
adc
push
add
aad
adc
xchg
and
mov
add
add
jle
push
vpcmpgtd
in
jle
pop
dec
mov
or
sub
popa
pop
push
test
and
mov
xor
out
pop
xchg
pop
adc
and
int
push
or
stos
ds
stos
push
inc
jmp
imul
mov
jle
xchg
add
iret
mov
out
and
mov
mov
fsubrl
xor
jb
cltd
loope
dec
in
mov
loopne
jle
jecxz
icebp
dec
std
sub
movsl
dec
sub
cli
jno
sub
and
clc
adc
push
dec
stc
xor
test
mov
mov
les
lock
pushl
stos
sbb
mov
rorb
in
jno
adc
sub
pusha
mov
inc
int3
adc
push
mov
cld
leave
addr16
lods
scas
scas
lahf
xchg
mov
mov
and
xor
xchg
sub
push
adc
aas
mov
xlat
paddusb
xor
lock
enter
inc
push
movl
pop
xor
jo
mov
out
adc
cmpsb
dec
jbe
add
and
shrb
dec
mov
mov
mov
sbb
stc
in
rol
mov
ret
lea
in
adc
xchg
testl
ret
pushf
int3
int3
cs
sub
or
cltd
xchg
cmp
mov
mov
jecxz
clc
fcoml
dec
mov
sahf
cmpl
out
mov
jg
ret
pusha
fdivrl
fcom
repnz
xor
leave
movsb
flds
mov
jns
push
and
push
sbb
xor
clc
adc
jae
xchg
dec
sbb
sbb
call
pop
jle
aas
out
fldl
fnsaves
enter
mov
jmp
push
mov
add
and
jnp
add
jmp
std
add
scas
int3
idiv
add
push
popa
inc
push
test
jns
jbe
pop
push
daa
out
daa
inc
push
cmp
mov
hlt
ret
sbb
sub
idivl
and
sbb
inc
test
sbb
mov
psubq
push
xor
jge
orb
mov
and
xor
daa
pop
pop
repz
orb
shrl
pop
les
inc
add
mov
push
das
dec
or
orb
xchg
flds
xchg
dec
cs
dec
shlb
xor
inc
push
aam
mov
sub
shll
stos
sarl
xor
testb
test
ss
or
jl
ljmp
sbb
notl
jmp
and
daa
inc
jp
and
push
mov
es
fisubl
fnstcw
mov
lock
ret
repnz
push
aaa
push
pop
sub
push
mov
inc
aas
cld
cmp
insb
pop
xchg
adc
jb
jns
jecxz
sub
push
or
push
call
mov
fcmove
in
fsubs
jb
je
popf
je
ds
repz
cs
imul
cmp
add
xchg
sub
jae
add
cld
cmp
xlat
pop
not
mov
mov
jo
mov
mov
fs
dec
out
pop
pop
mov
je
pop
inc
orl
mov
mov
jne
es
push
dec
mov
je
push
mov
insl
add
sbb
mov
cmp
dec
testb
flds
fcomip
int
and
negb
cmp
out
loopne
xchg
xchg
and
iret
adc
sbb
mov
test
sbb
sbb
nop
outsl
jne
or
mov
icebp
clc
cmpl
jg
ds
mov
xor
and
pop
inc
sbb
pop
mov
dec
cmp
mov
call
loop
fsubrs
pop
push
flds
cwtl
sub
pop
push
mov
push
stos
test
test
inc
fmuls
or
sbb
int3
xchg
mov
dec
sbb
and
imul
add
xchg
imul
mov
fcmovnu
hlt
mov
push
and
jo
das
or
out
scas
leave
xor
jle
rol
cmp
inc
push
lret
imul
xor
sbb
sub
int3
dec
cmp
lea
mov
mov
adc
loopne
cmc
cmp
sub
and
loopne
loope
aam
mov
sub
inc
jmp
repnz
push
pushf
stos
lcall
stc
cwtl
aam
mull
test
mov
lret
add
jmp
pop
mov
fimull
repnz
inc
aam
adc
sbb
repnz
ljmp
dec
shll
fs
sub
mov
cmc
call
stc
ja
push
add
and
dec
push
xchg
adc
aam
rorl
xchg
mov
mov
rclb
xchg
clc
pop
inc
iret
sbb
lods
sbbl
inc
inc
fstpl
or
out
add
xchg
aad
insb
js
imul
mov
loope
xchg
fdiv
jno
cmp
aaa
call
lcall
add
sub
mov
mov
jecxz
pop
or
jle
addl
inc
lods
add
test
mov
jbe
inc
cltd
inc
repnz
adc
push
sbb
and
mov
cmp
lahf
cld
imul
push
sbb
or
ret
push
push
pop
or
fisubs
and
jg
fcmovnb
out
sub
sbb
push
sbb
testl
add
dec
fcmovne
and
push
jns
adc
sbb
mov
in
mov
sbb
pushl
ds
push
sbb
and
mov
and
mov
and
add
in
pop
fimuls
adc
repnz
xor
or
jecxz
pop
add
dec
in
jl
inc
jle
xchg
mov
inc
pop
mov
stc
or
adc
imul
je
mov
adc
jb
rcl
int3
cmp
add
and
inc
sub
push
data16
into
sarb
sahf
insb
es
cmp
aam
les
repnz
dec
and
inc
sar
xchg
add
sbb
or
adc
push
push
cmp
movq
adc
sbb
xchg
nop
add
add
ss
mov
sbb
lret
add
cli
cmp
movb
es
xchg
and
jle
cltd
leave
sub
and
xchg
xor
aaa
filds
adc
xchg
jecxz
sub
mov
sub
shrb
nop
in
sub
shr
shlb
insl
add
xor
cwtl
mov
sub
xchg
imul
cs
inc
push
pop
adc
sub
and
push
jb
pop
mov
mov
xor
and
cmp
xchg
push
dec
cwtl
xor
mov
mov
or
gs
push
and
xchg
movsb
xchg
mov
push
jno
mov
adc
or
push
jg
out
loope
orb
jmp
aaa
push
pop
lret
mov
lods
scas
stos
lcall
popf
nop
adc
fnstsw
push
push
push
or
movzwl
in
movsl
addps
jbe
cmpsl
decb
mov
pushf
jmp
mov
inc
in
ljmp
lea
mov
sahf
shrl
fcmovu
int3
jecxz
sub
ss
int3
outsl
paddsw
fstpt
xchg
pop
scas
cmpsl
mov
push
xchg
pushf
jle
int
nop
jl
adc
ja
jae
sti
adc
mov
stc
push
xchg
or
outsl
xchg
push
or
lea
add
shr
adc
mov
pop
test
scas
inc
mov
sub
and
inc
out
and
push
xchg
cmp
inc
lods
dec
jl
fiadds
mov
adc
mov
cltd
adc
and
push
cmpsl
jb
ret
jb
movsl
cmp
mov
fs
xor
xchg
orb
xor
xchg
push
mov
mov
xchg
xchg
outsl
mov
imul
loop
or
fwait
add
mov
rorb
mov
inc
cmp
inc
xchg
insl
stc
test
xchg
sub
cs
mov
mov
sahf
dec
das
scas
idivl
xchg
cli
int
addr16
into
jmp
cmp
cmpsl
imul
call
jnp
xor
js
imul
icebp
push
out
dec
icebp
pop
jnp
je
test
insl
add
jbe
repz
add
out
mov
sbb
lods
xor
stc
push
jne
lret
fcoms
sub
xchg
sub
xchg
xor
xlat
das
mov
sti
mov
lahf
lock
divb
inc
js
imul
scas
push
cmpsl
sub
ret
mov
add
xor
popa
inc
lcall
mov
popa
loopne
xchg
les
nop
jecxz
outsb
or
xchg
pushf
sbb
dec
push
cli
sub
sar
mov
ljmp
xor
cmpb
xchg
out
mov
fxsave
inc
cwtl
andl
add
mov
ds
addr16
scas
adc
jo
xor
jbe
scas
call
pop
ss
repz
adc
push
xor
cmpsb
jno
and
xchg
dec
dec
in
and
into
dec
mov
push
and
cmp
mov
lret
out
es
std
imul
je
iret
cmp
push
incl
lds
cmpsb
sub
arpl
repz
call
mov
cmpb
mov
lahf
loopne
mov
add
fwait
out
orl
shll
cli
inc
and
push
and
push
jb
mov
mov
sbb
in
imul
dec
loop
inc
mov
cmp
mov
paddd
ret
push
mov
xchg
lock
js
jge
dec
call
fcomip
mov
mov
mov
in
pop
push
push
stos
stos
daa
or
mov
inc
test
cli
jnp
push
jo
and
aas
sti
in
mov
cli
ror
aas
mov
mov
jno
push
bound
addr16
fucomp
shrl
cmp
push
fstpl
subb
push
mov
int
leave
sbb
add
in
xor
sbb
add
jbe
mov
jg
imul
cmp
ret
mov
push
mov
jno
push
idiv
sub
sub
fcoms
icebp
mov
xor
iret
hlt
loopne
ficompl
cmp
xor
stc
addr16
sbb
test
cmp
pop
mov
sub
pop
xor
sti
sub
mov
lea
clc
xor
jmp
push
xor
mov
lea
xor
add
add
sbbl
add
mov
xor
mov
dec
rcl
sub
lcall
mov
xchg
mov
sub
out
aas
jecxz
jno
fmull
roll
xor
and
xchg
mov
xlat
xchg
out
cwtl
mov
shrb
cwtl
xchg
popl
xchg
push
xor
inc
and
cmp
in
mov
and
xlat
into
popa
push
mov
sarb
or
jb
pop
sub
in
push
adc
pop
xorl
xchg
mov
adc
and
sbb
adc
xchg
test
jmp
push
ds
fldt
iret
mov
out
push
fidivrl
test
jl
leave
lret
stos
insb
test
xor
mov
xorl
sbb
dec
nop
sbb
aaa
call
push
sbb
outsb
mov
push
mov
or
in
lds
mov
in
jbe
lods
das
dec
repnz
mov
push
xor
lds
loope
adc
mull
adc
mov
mov
into
out
mov
pop
or
mov
pop
cmp
dec
fwait
jb
jle
lock
add
sahf
rol
mov
hlt
les
add
stos
test
nop
inc
xor
test
sbb
inc
or
testl
mov
xchg
pusha
inc
jmp
ljmp
rcll
fmull
sub
ficomps
lret
xchg
pop
add
dec
sbb
xchg
pop
mov
and
fldt
mov
and
jle
cmp
pop
mov
and
and
pop
xchg
pop
out
pop
lcall
jle
pop
lods
mov
cmp
jg
scas
rcrb
cli
sbb
mov
add
imul
mov
mov
pop
mov
pop
insb
mov
sbb
cli
add
xor
jg
aaa
test
xor
lahf
call
psraw
dec
data16
inc
outsb
and
stc
and
iret
call
mov
stos
sbb
pushf
pushf
pop
xchg
and
stc
cld
jbe
sbb
or
notb
mov
push
dec
scas
cwtl
js
je
xchg
js
cmp
enter
js
xchg
xchg
cltd
cld
mov
scas
clc
sub
add
ljmp
roll
dec
xor
out
adc
clc
xor
rcrl
fsubr
or
sub
icebp
cld
into
pop
fs
xchg
lock
dec
icebp
and
repz
nop
mov
or
xchg
jge
mull
push
push
push
xor
in
roll
and
xchg
icebp
sub
inc
mov
movsb
pop
xchg
popa
enter
int3
or
cmp
lcall
and
lock
add
or
imul
xchg
leave
test
out
xor
pop
fldenv
lahf
test
arpl
sbb
jnp
jbe
mov
xchg
sarb
push
xor
xor
or
xchg
out
into
outsl
sub
cli
cmp
shl
imul
mov
test
push
jmp
icebp
insb
cmp
loope
stc
sub
add
and
jo
sahf
arpl
jno
int3
mov
fimuls
inc
mov
hlt
shl
mov
sub
mov
add
cmp
repnz
mov
pop
dec
jecxz
mov
adc
test
stos
mov
pop
adc
mov
push
adc
xchg
inc
stos
mov
mov
hlt
test
dec
fisttps
and
je
ljmp
popf
adc
cmpsl
or
pop
ds
jl
jae
push
cli
and
out
inc
fdivl
mov
pop
fcomps
enter
xor
ljmp
enter
lcall
jae
mov
add
adc
out
sub
movsl
in
or
dec
jle
stos
xchg
sub
push
pop
stos
ljmp
in
cmp
push
cltd
pop
hlt
xchg
pusha
jg
mov
repnz
sbb
dec
pop
push
pop
mov
in
inc
enter
push
ja
fidivs
gs
xor
jl
fldt
shrl
rclb
sti
mov
sti
loope
pushf
or
push
inc
data16
icebp
in
int
cmpsb
push
scas
shrb
and
or
inc
sbb
inc
push
or
in
in
jns
xchg
jne
aad
sub
push
mov
cmpsb
pop
vcvtsi2sd
call
fisubrs
faddl
push
loop
fdivs
fcomi
xor
fistpl
imul
jge
xor
ljmp
and
enter
aaa
mov
cmp
testb
std
mov
mov
out
dec
jns
push
add
int3
xchg
pop
outsl
jg
int3
cltd
out
mov
repnz
cmc
repnz
mov
add
dec
jge
pop
shrb
sbb
mov
inc
inc
sub
dec
rorb
outsl
mov
scas
cmp
aad
sbb
mov
mov
bound
pop
fidivrl
pop
xchg
xchg
and
adc
jo
mov
aaa
cli
jle
push
lret
and
cmp
cmpsb
lds
mov
sahf
or
mov
jge
xor
sub
cld
pop
mov
dec
into
sbb
aad
out
pop
mov
aas
jge
xchg
out
repnz
sbb
ss
lea
xlat
call
inc
mov
dec
les
push
shrb
cmc
in
leave
sub
sub
dec
rolb
pop
sbb
call
pop
xchg
test
and
out
stos
sbb
imul
push
push
xor
stc
daa
popa
rorl
or
mov
shrb
jge
mov
out
jae
ret
pop
xor
out
repz
xor
arpl
dec
jb
add
xlat
cmp
clc
rcll
mov
or
dec
mov
xor
and
iret
test
inc
adc
push
adc
pop
rcll
and
notl
xchg
dec
pop
jno
jg
test
in
mov
mov
cmc
fldcw
adc
add
mov
cmp
insl
xchg
shl
jb
dec
mov
movsb
and
out
stos
mov
sti
dec
fcomp
jae
leave
lcall
sbb
ljmp
mov
enter
mov
shrb
ror
inc
inc
in
test
daa
push
scas
jo
aad
and
imul
sub
mov
std
leave
jbe
lahf
sbb
or
jg
pop
mov
push
xor
cmp
ljmp
adc
loopne
add
pop
stos
insl
jns
dec
pop
out
mov
jnp
lahf
inc
xchg
test
and
enter
add
pminsw
mov
fldt
into
pop
ljmp
push
xor
inc
pop
adc
sub
icebp
into
in
arpl
fisubrl
mov
das
and
pop
cmp
pop
fucomi
sbb
dec
sahf
mov
inc
cltd
xchg
clc
mov
jno
mov
orb
imul
mov
jno
and
and
es
fsubr
jno
cmpsl
lds
jp
sub
sub
bound
cmpsl
and
ret
imul
jl
repz
bound
clc
out
xlat
mov
das
mov
inc
lret
cld
inc
mov
pop
adc
or
enter
jp
cmp
jecxz
test
or
jl
les
mov
adc
or
xchg
jle
in
outsl
cmp
movsl
mov
orl
cwtl
ja
cwtl
test
lea
jns
dec
sbbb
loopw
push
pushl
dec
jmp
jnp
sub
mov
call
es
sub
enter
and
leave
push
mulb
leave
mov
arpl
mov
mov
out
mov
push
fcomip
je
mov
out
pop
scas
movsb
mov
mov
add
add
lret
mov
lret
lea
insb
or
add
in
dec
rorb
pop
sbb
push
fiaddl
xchg
push
xor
unpcklps
outsb
or
jp
loope
mov
pop
jg
aas
push
dec
ja
add
imul
inc
inc
rcl
adc
shlb
repnz
int3
mov
roll
shl
xchg
outsl
cltd
pop
dec
push
lods
cli
dec
xchg
fists
push
mov
or
mov
xchg
cmp
les
mov
lods
xor
mov
xchg
pop
shrb
shlb
mov
mov
inc
cs
rep
adc
dec
xchg
jmp
int3
cli
call
jo
pop
cwtl
dec
clc
ds
movl
mov
push
shlb
mov
xor
mov
mov
lahf
jl
mov
push
nop
iret
mov
push
movsb
inc
cmp
xchg
ss
xor
sbb
lds
out
mov
fnstsw
mov
sbb
mov
sub
mov
mov
jle
xlat
sarl
inc
pop
mov
repz
out
inc
or
pop
test
fmull
outsb
cmp
mov
and
movntps
mov
enter
jle
mov
jge
insl
enter
jae
cli
sub
cmc
sahf
rolb
loopne
mov
ja
jb
das
adc
lea
test
test
and
mov
dec
push
fdivrp
cmp
out
addr16
mov
mov
movsl
adc
push
add
xchg
ret
pop
jecxz
or
sub
into
jno
sub
jnp
mov
xchg
xor
out
and
stos
leave
fisubs
lods
inc
pop
mov
push
ror
jns
mov
gs
sbb
pop
icebp
push
sub
fwait
into
dec
mov
andb
inc
jl,pt
dec
xchg
shll
iret
jl
xor
test
and
fdivp
push
popf
orl
and
shlb
lret
fdivl
ds
cmc
cld
fnsave
xchg
xchg
mov
insl
mov
loop
decb
andl
orb
pop
or
ret
dec
mov
imul
xor
sbb
cltd
sub
aaa
inc
and
sahf
ficomps
push
rcll
lret
and
repz
jae
imul
jae
push
ror
xchg
add
xchg
testl
leave
adc
mul
mov
insb
xor
ja
fldl
add
loop
pop
movsb
rorb
push
mov
cmp
stc
movb
test
jp
shll
out
sub
add
rep
sub
push
push
in
or
adc
cmp
push
xchg
call
push
push
or
cmp
fildl
jg
or
add
push
clc
iret
or
pop
sub
inc
cld
sub
sub
add
adc
call
addb
test
xchg
push
xorl
jo
ret
jb
hlt
lods
mov
xor
push
outsl
lret
jns
or
pop
imul
ret
xor
mov
lret
cld
aas
scas
mov
pusha
jb
mov
and
ljmp
cld
mov
cmp
or
jnp
jp
popf
dec
pop
xchg
dec
arpl
shl
scas
sti
or
add
jp
jo
lahf
jle
andl
mov
gs
and
popa
pop
push
or
jl
into
daa
sarb
or
jg
mov
in
mov
xor
lret
adc
jl
xchg
out
dec
cltd
popf
cmp
pop
gs
push
aaa
jg
repnz
or
and
testl
divb
andl
lods
or
fcoml
repz
push
mov
add
shrl
fisttpl
jmp
dec
cmp
push
scas
inc
cmp
push
out
fstp
mov
xor
daa
out
or
pop
mov
jg
inc
testb
negb
inc
adc
jnp
pop
cs
inc
inc
inc
stc
inc
lods
shlb
mov
flds
cwtl
sub
pop
lock
adc
rclb
stos
pop
enter
out
shl
or
mov
inc
push
sti
dec
inc
sbb
lods
fcompl
les
data16
jae
lds
std
adc
and
les
jo
and
addr16
and
out
jmp
ljmp
out
or
xchg
push
mov
inc
leave
adc
leave
ss
fs
push
jo
int
xchg
insl
push
jp
inc
jecxz
and
popa
inc
or
xlat
movsb
jp
or
add
insb
sub
mov
cmp
and
sbb
xor
push
out
in
lods
idiv
mov
movsl
add
testl
sbb
jmp
and
pop
imul
sbb
vandnps
cmpl
xchg
ret
out
repz
add
ds
sarb
test
mov
or
push
insl
push
add
mov
clc
hlt
push
outsl
dec
lods
in
inc
jo
push
mov
mov
imul
lods
cmp
mov
xchg
push
sbbb
scas
je
jmp
sub
add
inc
rcrl
ljmp
movsb
mov
ja
packuswb
vmaxsd
push
mov
and
pop
pop
sub
mov
sub
iret
cmp
sbb
repnz
das
xor
mov
lea
xorl
mov
mov
les
sbb
dec
movsb
in
push
and
adc
push
pusha
or
pop
sub
sbb
cli
dec
cli
adc
aaa
pop
lahf
testl
add
inc
imul
mov
pop
mov
mov
shrb
lock
xor
xchg
sbbl
jns
mov
and
loope
adc
pop
xchg
lret
mov
push
sub
jg
xchg
repnz
jno
xchg
dec
add
cmp
incb
mov
testb
xchg
clc
mov
lcall
clc
into
pushf
sub
dec
mov
mov
imul
pusha
inc
adc
daa
pop
or
mov
mov
in
dec
hlt
pusha
inc
fs
pop
fmuls
divb
and
lock
lock
rol
fcomp
outsb
and
int
scas
and
into
dec
mov
cmpsb
cmp
cmpsb
outsb
js
pop
mov
std
frstor
mov
mov
arpl
fimull
in
inc
lahf
lret
xor
shlb
mov
xchg
in
cmp
pusha
ds
sub
ss
hlt
loope
sbb
push
ficoms
stc
divb
and
iret
sbb
adc
mov
fst
faddl
mov
out
bound
mov
out
idivb
jbe
cli
das
int3
inc
xor
lahf
les
cmp
dec
movsl
push
or
push
push
addb
adc
fstp
bound
and
out
dec
sbb
lcall
xchg
ljmp
add
out
add
push
xchg
cmp
mov
nop
sub
xor
repnz
insl
mov
ret
sub
fimuls
or
es
mov
dec
push
scas
or
mov
mov
inc
sub
rcrl
in
js
cmp
mov
ds
sarb
mov
cmp
pop
cmovne
push
scas
add
push
pop
pop
pop
ret
sub
mov
jmp
jl
fldt
xor
lods
int
popa
lcall
push
mov
sbb
jae
ss
test
cmp
popf
repz
inc
lods
loop
fdivrs
mov
cli
sub
bound
xchg
dec
fdivrl
inc
inc
add
mov
jnp
scas
cmp
xchg
sahf
out
sub
or
popa
aaa
inc
sub
push
aas
sarl
jle
push
jmp
aas
lock
xor
dec
push
sti
clc
jle
ljmp
test
test
pop
popf
push
imul
mov
loop
adc
jmp
leave
add
jns
insb
push
ss
hlt
dec
xor
fcompl
iret
insb
aad
cmp
jmp
mov
sti
lcall
cmpsl
push
mov
xchg
popa
jg
inc
es
cwtl
test
push
mov
call
in
mov
ficoms
xor
loop
dec
mov
cmp
xor
mov
mov
adc
or
mov
push
loope
pop
mov
mull
ja
jmp
stos
lds
pop
mov
outsb
out
negb
aaa
out
or
icebp
cmp
std
inc
fisubrs
cltd
sahf
data16
rorb
jecxz
rolb
push
pop
fldcw
jae
ds
lea
adc
sub
cmp
sbb
and
insb
addr16
mov
dec
jl
scas
sbb
jg
cmp
shl
fstps
sbb
dec
lret
cli
into
pop
icebp
out
mov
leave
jne
pop
jo
sbb
adc
sahf
cli
jnp
icebp
adc
fwait
or
loope
std
jnp
ss
mov
pop
pop
cmpsl
popa
mov
andb
xorb
movsl
in
fsubl
lods
mov
push
mov
iret
mov
cltd
arpl
xor
xor
push
das
and
aaa
xlat
scas
mov
inc
subb
aad
dec
add
push
add
mov
jbe
xchg
out
mov
mov
fcmovu
add
pop
js
mov
nop
dec
insl
decl
ror
test
add
xchg
xor
outsb
jmp
std
or
sbb
not
push
jge
add
shll
jbe
inc
cli
mov
inc
mov
mov
and
dec
adc
lea
popa
into
dec
repz
loopne
mov
call
mov
and
xorl
rdmsr
dec
add
jl
and
pop
mov
insw
sbb
inc
lret
mov
pop
int
iret
in
push
movsb
rorb
push
mov
xlat
push
out
cltd
hlt
arpl
mov
adc
rclb
rcrl
and
push
insb
jb
mov
int
jo
in
fildl
out
sbb
iret
xchg
cwtl
adc
sbb
andl
fnstcw
cwtl
push
or
sbb
dec
push
addr16
dec
out
cmpsl
in
in
sti
xchg
push
inc
lock
mov
xor
dec
data16
push
pop
fwait
lods
test
lret
jae
sub
cmpsl
rclb
insb
ljmp
shlb
xchg
mov
mov
mov
testl
sbb
jp
xchg
add
shrl
lret
das
pop
mov
sub
dec
fldenv
mov
mov
fwait
cmp
scas
outsl
ds
mov
xor
sub
popf
iret
repz
pop
inc
inc
leave
push
test
xchg
sbb
and
dec
andb
arpl
ret
push
mov
js
sub
pusha
shlb
sub
dec
mov
sub
mov
lods
lock
push
std
loope
outsl
jecxz
repnz
leave
daa
mov
or
mov
enter
mov
add
pop
enter
lret
or
fsubp
xchg
imul
sbb
jmp
bnd
andl
mov
ja
divl
add
adc
pop
mov
xor
xor
sub
and
jmp
and
pop
jl
divl
stc
xchg
shll
cmp
test
pop
push
das
fistl
pop
xchg
imul
arpl
push
jle
and
or
out
test
jnp
sbb
inc
fs
cmp
arpl
sar
sub
mov
jb
mov
sbb
pop
inc
xor
sbbb
ja
sbb
into
sbb
adc
jle
and
loope
cli
cld
cmp
xchg
shlb
xor
test
mov
fidivrl
jl
adcl
aaa
push
fcmove
lods
lcall
adcb
dec
stos
sub
pop
repnz
dec
icebp
sbbb
xor
xlat
aas
adc
lret
cmp
inc
mov
lock
lret
aad
xchg
shlb
add
sbb
dec
sbb
loopne
movsl
pop
leave
flds
arpl
mov
xor
loopne
es
inc
xor
ja
push
fnstenv
movsb
pop
into
lock
ss
testl
jg
test
iret
repnz
inc
repnz
cmp
fdiv
jns
or
cs
rcll
aas
mov
into
or
pop
leave
gs
and
jmp
out
add
cmpl
shlb
push
or
fidivrl
pushf
popa
in
lock
dec
inc
fcomi
rol
imulb
repz
fcompl
rol
test
or
pop
pop
pop
pop
adc
push
jno
mov
jo
out
add
adc
pop
mov
pushf
jp
pop
cmp
or
sarb
adc
mov
das
sub
inc
inc
lods
lcall
stos
or
lcall
push
xchg
mov
stos
cli
in
push
xchg
loopne
xchg
fmuls
xor
ror
sub
xor
movsb
dec
cwtl
repnz
iret
ljmp
mov
inc
sub
push
cmc
rcrl
pushf
jmp
mov
pop
cmp
outsb
fildl
pop
repnz
xchg
icebp
mov
clc
mov
jmp
sub
adc
push
je
outsb
aas
clc
pop
ror
jecxz
imul
cmp
push
sub
and
imul
pop
push
fstps
cmp
insl
fisttpll
jg
pop
movsb
rolb
sub
xchg
into
push
push
mov
cmp
mov
lods
pop
daa
mov
and
inc
shlb
inc
sub
mov
fisubrs
into
lods
lret
daa
incl
cmp
mov
dec
mov
nop
and
fidivrs
pop
scas
sbb
clc
cmp
lret
adc
sahf
data16
mov
imul
mov
jno
jmp
sbb
mov
push
or
fisubrs
outsl
xchg
mov
subb
ljmp
cld
stc
xchg
sub
out
push
je
push
je
lea
xchg
cmc
adc
shrl
inc
fdiv
bound
stos
jns
pop
mov
xchg
ret
mov
mov
int3
aad
sub
jae
push
lods
aaa
ja
fsubp
push
inc
xlat
inc
and
sbb
add
sub
scas
ret
adc
enter
cld
add
fimuls
mov
cld
push
and
stc
cmpsb
inc
aam
rcll
fisubrl
xor
adc
repz
sbb
mov
aad
cld
push
rcl
xchg
cmp
insl
test
loope
clc
testl
xchg
inc
jle
or
mov
xor
sbb
rcrb
mov
js
dec
jae
adc
cmp
aas
mov
or
xchg
mov
pop
pusha
cli
sahf
test
nop
cmp
fildl
mov
filds
jb
and
sbb
mov
cli
add
insl
mov
ret
fistps
mov
or
rcll
int
lods
sti
inc
insb
pop
and
sahf
addr16
pop
ficoml
cmp
jle
mov
cmc
xor
lret
push
inc
cmp
add
aam
sub
je
mov
fcomi
ss
hlt
call
cmp
add
in
mov
push
fimull
popa
adc
aam
push
xchg
add
in
cmp
xor
movsl
lock
in
iret
inc
fidivl
scas
mov
std
jmp
aaa
xor
or
pop
dec
pop
push
push
sbb
bound
mov
cmpsb
out
inc
arpl
inc
fdivrl
aam
das
lods
dec
sbb
pop
mov
arpl
mov
cmp
loope
xor
out
pop
call
outsb
cmpsb
mov
sti
daa
dec
out
sub
mov
push
lock
jge
xchg
xchg
std
ljmp
in
mov
pushf
pop
or
mov
loope
and
popf
bound
in
mov
rol
mov
xchg
int
jl
mov
xor
lods
filds
xor
xor
push
push
push
fcom
pop
popa
imul
mov
xchg
inc
ficoml
jbe
push
xor
add
andb
scas
mov
xor
sahf
mov
int
out
pop
pop
ljmp
adc
out
aam
out
pop
and
xchg
mov
dec
outsl
leave
ljmp
adc
adcl
inc
sahf
mov
shll
xchg
push
pop
popa
sub
sbb
lahf
lret
mov
jae
int
dec
push
ds
add
test
mov
sahf
mov
jmp
sub
out
mov
inc
mov
gs
les
pop
or
cwtl
add
add
lock
sti
aad
dec
inc
xchg
jmp
or
lret
arpl
add
pop
jbe
and
add
mov
dec
scas
cmpsl
lock
dec
push
and
push
outsl
inc
xchg
add
out
mov
inc
xchg
dec
in
inc
pop
and
adc
xchg
pop
sub
pushf
lds
or
add
insl
xor
pop
out
and
cwtl
fcmovnb
shrb
ljmp
push
inc
repz
outsl
and
test
mov
test
mov
call
push
mov
lock
cmpsb
dec
out
pushf
inc
loop
xlat
out
jb
orb
in
daa
mov
leave
dec
inc
lods
sbb
and
add
lahf
cmp
push
icebp
inc
ss
xorb
mov
fnstcw
mov
push
in
lret
add
fcoml
mov
xor
inc
inc
popa
movsl
dec
dec
lcall
and
inc
ret
lret
push
fbstp
cli
mov
push
jl
in
inc
pop
rolb
add
in
loope
in
aaa
icebp
push
hlt
in
test
mov
pop
lret
cmp
popw
and
fnsave
popf
sbb
mov
mov
sbb
mov
dec
insl
sub
mov
and
inc
sub
loope
repz
testl
mov
mov
ret
mov
lds
roll
in
xchg
imul
adc
pop
add
mov
add
ficoms
mov
jae
or
push
in
sti
sahf
mov
push
pop
je
hlt
bound
rcrl
aas
inc
rclb
sbb
lds
pushf
inc
sbb
or
insb
xchg
ficompl
pop
jle
pusha
add
es
cmp
mov
push
lock
sbb
pop
mov
mov
push
xor
sbb
xlat
scas
lods
or
rcl
repnz
mov
mov
iret
cmpsl
rcll
rcl
test
aam
jp
xchg
decb
nop
out
sub
dec
rcll
add
or
int
aam
jg
xchg
in
lahf
pop
int3
stos
ljmp
lret
out
imul
ss
ficomps
lret
push
frstor
inc
pop
popa
push
les
outsb
int
add
movsl
lods
aas
push
add
xchg
stc
xor
pop
aad
dec
jp
jb
sbb
pop
jb
cmp
imul
aad
ret
adc
mov
mov
mov
repnz
sbb
es
mov
and
hlt
push
pop
add
xor
cmp
mov
ret
ljmp
mov
stos
mov
lods
insl
lahf
add
dec
repnz
xchg
fildl
pop
cmp
and
nop
nop
data16
sub
daa
mov
xor
inc
mov
pop
cltd
nop
sbb
ljmp
outsl
inc
xlat
cltd
inc
cwtl
push
inc
and
dec
shrb
dec
xchg
leave
lret
jp
mov
shl
or
sahf
jg
call
xchg
fdivl
out
push
fsubl
adc
push
test
fs
leave
inc
jae,pt
mov
xor
inc
mov
and
mov
mov
mov
cmc
add
dec
mov
add
rcr
adc
adc
or
sbb
xlat
test
stos
test
cs
in
imull
out
insb
sub
push
jg
pop
xchg
pop
out
sub
in
jae
pushf
gs
mov
xor
sbb
jle
jo
and
xor
ret
dec
dec
jl
test
inc
add
xor
dec
add
sub
mov
fistps
pop
cmpsl
push
mov
cmp
mov
jnp
inc
popf
cmc
pop
adc
rol
jecxz
push
test
xchg
adc
cmp
sti
fisttps
les
sub
scas
fcoms
pop
xor
sbb
pop
lea
loope
daa
and
push
aam
cmp
dec
mov
dec
adc
xor
and
mov
fildl
bound
mov
push
xchg
push
fwait
xchg
and
inc
fs
vaddsubps
xchg
icebp
pop
fidivl
cmp
add
inc
add
mov
push
cmc
inc
cmp
call
push
loopne
out
cs
mov
jle
pop
xorl
gs
lds
imul
fisubrs
mov
into
add
sbb
mov
imul
jnp
cmp
lahf
pusha
xchg
repnz
lods
pushf
sbb
inc
dec
mov
mov
or
retw
fdiv
xchg
lock
fcompp
push
add
lahf
je
mov
mov
sbb
sti
pop
rcrb
mov
adc
sbb
sbb
popf
cmp
pop
cmp
shrb
cmp
inc
pop
jne
mov
mov
scas
jbe
cmc
iret
out
aad
fidivrl
jne
pop
hlt
inc
test
les
jl
push
xchg
iret
mov
into
sbb
inc
ljmp
xor
int3
ss
lcall
jae
pop
or
lret
xor
dec
push
adc
cmp
xlat
add
or
popf
inc
loop
mov
mov
data16
lss
mov
mov
sub
cmpsb
adc
cmc
movd
faddl
push
daa
out
rcl
fidivl
mov
push
add
push
pop
dec
call
insb
aam
push
jge
jae
sub
stc
mov
xor
mov
popf
rclb
mov
fcompl
inc
clc
pop
dec
aas
jmp
aas
ljmp
adc
roll
loop
imul
inc
dec
leave
cmpsl
inc
lret
fxch
xor
loope
mov
mov
push
xchg
loop
xchg
add
push
hlt
loope
pop
arpl
outsb
dec
rclb
mov
lock
les
pusha
pop
pop
mov
mov
jns
ss
es
out
push
mov
dec
jle
into
fmull
cmp
std
lds
push
aas
xchg
push
mov
mov
iret
sub
cmpb
movsl
push
mov
mov
insl
cmp
push
push
adc
mov
cmpb
push
jecxz
add
lahf
addb
pop
inc
adc
push
push
cmp
scas
adc
aad
testl
fstpl
es
add
roll
mov
and
cmc
outsl
adcl
adc
es
xor
sub
pop
push
flds
cwtl
sub
pop
add
cs
mov
inc
rcrl
dec
add
sbb
push
adc
mov
sub
push
lods
pop
cltd
xchg
cmp
idivl
stc
sub
sbb
xchg
mov
ja
push
inc
mov
dec
jnp
das
adc
popa
mov
jge
xor
les
insl
clc
rorl
xlat
cwtl
in
int3
xchg
jbe
add
xor
lock
mov
pop
push
dec
mov
mov
dec
imul
cmpsl
push
push
loopne
popa
or
das
xorb
jmp
sub
loop
cmp
jl
loop
testl
je
outsb
xor
mov
outsl
push
stos
js
gs
and
and
fnstenv
stos
addr16
mov
push
addr16
adc
lods
or
inc
jp
mov
adc
les
mov
adc
inc
sbb
ret
mov
jl
mov
test
cmp
pop
cmp
mov
in
mov
dec
xchg
shlb
pop
push
mov
test
xchg
enter
mov
sti
xor
xchg
cltd
das
sbb
movsb
stc
aad
insb
rcrb
movsl
push
inc
loopne
movsl
outsb
pusha
xchg
jmp
add
xor
adc
scas
mov
pop
lea
jmp
pop
paddd
dec
cmpsb
pop
movsb
sbb
jle
push
mov
test
in
xchg
in
cmp
notl
pushf
or
cmp
sbb
jp
xchg
mov
xchg
lahf
push
and
loop
xchg
and
shll
mov
loop
mov
push
lahf
push
sbb
mov
out
add
inc
clc
les
jae
inc
js
mov
nop
sub
cmp
xchg
mov
jl
add
insl
mov
std
or
mov
pop
movsl
pop
or
cmp
xchg
sti
jle
test
cmp
shlb
adc
stos
mov
xchg
mov
pop
in
mov
mov
fwait
pop
arpl
xor
dec
daa
jbe
adc
loop
ss
mov
movsl
leave
popf
jp
hlt
add
sub
push
add
insb
sbb
xchg
or
int
mov
push
rol
sub
lds
cld
dec
leave
xchg
fdivl
fidivrs
sbb
dec
int
and
test
sub
dec
adc
aaa
xor
aas
or
push
imul
cltd
bnd
lret
add
lret
push
lret
mov
fdivs
in
dec
fwait
rcll
xchg
or
arpl
sub
jns
xchg
incl
into
pop
inc
ficomps
dec
cmp
sub
bound
insb
mov
sbb
test
ljmp
xchg
ror
mov
aam
mov
inc
and
movsb
outsl
je
ds
pushf
popa
das
or
jmp
and
jb
pop
fnstcw
enter
jae
lahf
sahf
cld
push
push
rcrl
adcb
cmpsl
stos
jmp
sbb
inc
ret
leave
out
scas
inc
xchg
xchg
ds
jmp
lcall
jns
push
fwait
pusha
insl
or
dec
fdivrl
pop
in
mov
or
test
cltd
or
jmp
push
mov
dec
xor
mov
adc
mov
stos
cmp
out
stos
out
outsl
mov
test
loope
or
aaa
aad
pop
dec
je
sbb
out
xor
icebp
repz
mov
xchg
mov
cmp
nop
xchg
or
mov
jbe
pop
sbbb
call
xchg
hlt
cmp
cmp
push
rol
cli
sahf
daa
push
shrb
pop
sub
sbbl
adc
mov
sub
call
push
rcll
gs
sbb
adcb
push
test
xchg
cwtl
cmp
xchg
out
cmp
inc
mov
outsl
adcb
jp
dec
aad
push
lahf
gs
mov
sub
lods
jg
in
xor
pop
imul
push
sbb
jge
in
notl
inc
movq
ss
sub
ja
popf
inc
pop
fiaddl
clc
mov
outsb
and
fmull
cmpsl
xchg
or
xor
cmpsl
fcoml
mov
rcrl
dec
jmp
test
pop
push
jmp
pop
cmpl
pop
stc
popf
add
aaa
dec
adc
sarb
xor
jp
jg
cmp
mov
addr16
push
out
jns
sbb
cmp
pop
lret
js
inc
aaa
jecxz
out
xchg
or
xchg
mov
scas
lret
pushf
xor
xchg
js
push
pop
aam
scas
mov
sbb
sbbl
sub
jge
cmp
dec
call
lock
sbb
pop
sar
mov
imul
cmpsb
insl
sbb
or
js
jo
push
lods
mov
jmp
movsb
fcmovb
mov
xor
jb
pushf
sub
int
popf
or
mov
shl
or
in
movsb
roll
mov
cmp
xchg
and
push
add
testl
stc
lret
in
out
xchg
loopne
push
cmp
daa
lds
inc
mov
inc
adc
out
out
xchg
movsl
cli
push
scas
adc
mov
movsl
lret
mov
in
cmpsb
mov
test
xorl
jecxz
and
inc
dec
iret
cmp
roll
cmp
je
test
push
mulb
cmp
jbe
inc
gs
add
mov
mov
lds
out
aad
sub
mov
movsb
mov
add
mov
pop
scas
adc
push
fdivrs
fs
cmpsl
dec
sub
jp
inc
xchg
in
stc
into
fisttps
fisubrl
ror
outsb
les
imul
cmpl
rolb
xchg
dec
stos
push
mov
daa
repz
jae
inc
out
movsb
sbb
jmp
pop
insb
xor
icebp
ja
stc
lahf
test
repnz
lock
fs
repz
das
rcll
push
dec
jo
shll
movsb
dec
pop
fcoml
mov
adc
sub
adc
stos
outsb
ja
icebp
les
and
loope
push
inc
adc
out
cli
std
ret
iret
jno
lods
gs
mov
int
lods
pop
imul
pop
pop
and
cmpsb
ljmp
test
cmp
mov
flds
ret
in
fbld
add
sub
cmpb
dec
and
dec
push
in
aam
xorb
add
dec
or
adc
inc
fwait
cmp
in
cmp
xchg
daa
shlb
cltd
xor
arpl
cmp
std
pop
sbb
jb
call
movsb
cmp
jl
jae
dec
lods
mov
xor
dec
iret
les
pop
arpl
mov
cmp
popf
mov
test
outsb
stos
push
xor
decl
push
call
hlt
cmp
lret
mov
shr
test
xchg
ljmp
lahf
sbb
cltd
push
insl
mov
lahf
lods
dec
test
lahf
rcrb
insl
jl
jecxz
lahf
xchg
rorb
lea
sub
dec
dec
xchg
push
lods
inc
jae
fidivrs
dec
aad
clc
insl
and
out
jg
dec
xchg
lock
pop
add
or
cmp
dec
ja
fldz
add
cmp
pop
xor
mov
dec
sti
push
mov
jg
dec
jae
dec
cmp
sub
dec
adc
jns
cli
jnp
aaa
or
jnp
inc
push
pop
adc
push
lret
ljmp
ljmp
sub
cltd
cmp
pop
xchg
daa
cld
imul
push
in
mov
sub
fsts
sbb
mov
inc
addb
outsb
pusha
mov
cmp
out
adc
or
mov
add
fdivl
cmc
push
ret
mov
adc
jge
pushf
pop
jbe
sub
xchg
cmc
add
bound
cmpsb
int3
cmpsl
xor
push
add
dec
movsb
out
ljmp
fdivs
mov
outsb
dec
xor
inc
push
add
cmp
mov
add
sub
pop
push
jbe
ds
frstor
mov
iret
scas
sub
in
jg
cli
out
jb
mov
popf
pop
cmpb
jge
jle
pusha
lret
pushf
and
daa
mov
aam
incb
xchg
push
out
fildl
add
sub
loop
mov
out
xchg
mov
lock
fcoms
scas
mov
fbstp
cmp
pop
lcall
in
int3
cld
xorl
jge
dec
and
or
movsb
out
stos
insl
jecxz
pop
adc
mov
and
xor
add
ror
add
rcrb
fs
ja
push
sti
mov
xchg
push
ret
aam
outsb
mov
movl
inc
add
adc
stos
cmp
je
int
ss
out
ss
insb
or
or
out
mov
in
lods
pop
mov
xchg
jbe
or
dec
imul
jb
mov
add
decl
je
jne
movb
test
sub
cmp
mov
enter
arpl
fisubl
xchg
add
fwait
movsb
in
unpcklps
rorl
and
lea
pop
xchg
jp
mov
xor
sub
cmpsb
cmp
cmp
or
cmpsb
imul
je
mov
inc
or
mov
mov
pop
sbb
jb
icebp
sahf
push
cmpsl
adc
les
lret
pusha
fimull
jne
dec
lret
jnp
pop
inc
cmp
clc
push
push
pop
mov
mov
sub
outsb
inc
lret
ret
jno
or
daa
mov
adc
xlat
icebp
rorl
fwait
push
jp
and
or
sbb
and
sub
sub
inc
hlt
mov
push
push
loopne
lods
lret
add
bound
aad
lahf
and
mov
mov
aaa
idivl
movsl
jno
mov
add
in
rcrl
jp
in
adc
cs
fbstp
insl
xor
add
pop
jnp
hlt
fucomp
sub
in
in
dec
xor
mov
mov
and
dec
mov
mov
mov
mov
call
cld
adc
out
fiadds
add
mov
pop
pusha
cli
sahf
test
nop
cmp
movsb
adc
push
pop
or
and
iret
add
push
cmp
mov
aam
push
cld
int3
outsb
inc
mov
adc
repz
std
xchg
xchg
out
lock
clc
mov
in
lods
sub
mov
std
xor
ret
arpl
cmp
mov
es
lock
cmp
enter
pop
mov
movsl
cmc
push
addr16
jg
insl
mov
jns
jle
or
dec
and
sub
sub
lock
xchg
pop
inc
inc
dec
aaa
lods
imul
insb
pop
jmp
push
jecxz
mov
ret
das
adc
mov
pop
dec
das
pop
and
mov
iret
mov
loopne
inc
mov
aaa
dec
std
cmp
movl
jnp
pop
inc
mov
iret
lods
fdivr
or
adc
out
adc
les
xchg
pushf
sar
mov
les
pop
int3
testl
sub
sub
sbb
fwait
cld
out
add
push
or
fisubl
movsb
cmc
movsb
loope
stos
inc
mov
bound
mov
add
inc
ss
ds
inc
incl
dec
stos
and
js
adc
sub
outsl
and
dec
les
outsl
arpl
cmpsl
sbb
roll
sbb
pop
imul
mov
loope
subb
cmpsb
test
sbb
push
shlb
mov
adc
lods
bound
lret
inc
sbb
mov
in
out
xchg
loopne
dec
repz
cmpl
jae
stos
in
xchg
in
or
imul
or
ja
adc
adc
insl
sbb
jge
adc
popf
ja
aas
ret
cmp
add
cmp
ja
inc
mov
dec
fcomip
xor
data16
imul
mov
addr16
negl
in
fisttps
call
pop
lods
repnz
movsl
push
inc
pop
mov
xchg
enter
stos
mov
enter
mov
jb
imul
mov
int3
les
push
ss
mov
scas
sub
add
jbe
bound
jbe
lret
jmp
aad
fldcw
in
mov
test
jae
lock
jmp
push
xor
add
and
add
mov
icebp
or
mov
mov
push
ss
xor
push
inc
mov
jae
push
out
dec
inc
arpl
mul
repnz
sbb
dec
xchg
outsl
pop
jnp
call
in
dec
xchg
jb
pop
dec
xor
pop
mov
cmp
sub
test
lock
jnp
add
call
cmpsl
lcall
pop
ficomps
adc
add
cmp
mov
pop
add
mov
pop
pop
std
mov
sbb
scas
stos
popa
cwtl
xchg
cs
stos
adc
lods
push
out
aaa
sub
in
pop
iret
sbb
icebp
scas
xor
and
outsb
dec
jns
ds
jl
cmpsb
in
fstps
orl
mov
push
fnstenv
jl
add
sub
fstps
shl
or
push
push
cmp
ja
push
xadd
icebp
orb
and
or
and
add
insl
xor
enter
pop
fs
pop
push
mov
xchg
cmp
and
fs
orb
mov
ljmp
movsl
inc
sbb
sti
or
mov
mov
xor
lret
pop
aaa
adcl
add
xchg
pop
repz
out
cmp
jg
sarb
sbb
ret
fwait
mov
sub
scas
rorb
xchg
mov
and
lcall
jnp
ja
or
clc
lea
pop
fnstenv
pop
push
adc
xchg
aad
nop
sbb
mov
sub
sub
mov
pop
aad
aad
lds
bnd
jbe
mov
pop
sub
es
stc
cltd
test
xor
dec
sahf
push
imul
enter
adc
lds
ret
bound
outsl
mov
out
cli
sub
bound
lret
adc
push
xor
lods
mov
ss
inc
fmuls
movsb
enter
xor
pop
sub
inc
sub
mov
cmp
and
out
cmp
add
les
loop
or
stos
leave
pushw
push
cmp
and
fistpll
push
mov
test
std
lcall
shll
jmp
shl
mov
fs
aad
movsb
lods
fs
inc
and
cmovl
fsubs
push
or
push
fstl
ds
outsl
adc
dec
inc
scas
std
lock
ss
jns
push
or
rcll
aad
daa
ja
cmc
imul
test
mov
ret
dec
jp
xchg
cltd
shl
das
aaa
std
in
rorb
mov
pop
lds
pop
jnp
out
fsubl
ret
xchg
scas
or
loop
xor
in
jmp
loope
lret
in
fwait
jmp
push
psllw
test
inc
mov
mov
push
push
mov
sub
xlat
xor
pop
dec
pop
mov
adc
enter
inc
mov
notb
or
out
add
lds
push
or
adc
adc
cld
mov
movb
cli
cmp
mov
push
and
mov
or
sbb
jl
loopne
out
ljmp
mov
fbld
sahf
push
add
cs
sbb
pop
jg
xchg
xchg
hlt
stos
xor
sahf
and
lret
repz
jbe
mov
push
cltd
and
push
pop
sti
dec
adc
pop
ret
xor
xchg
les
pop
in
inc
repz
mov
movsb
ret
xor
xchg
xor
dec
add
inc
cmp
add
shlb
ljmp
out
pop
cltd
pop
xchg
mov
sub
adc
push
push
cmp
js
mov
pushf
jp
daa
popl
lds
pop
hlt
pop
imul
repz
ret
in
xchg
mov
fwait
adc
inc
inc
fs
in
adc
shlb
cwtl
lock
inc
std
out
xchg
std
sbb
pop
mov
int3
mov
xor
adc
xchg
lods
daa
adc
inc
out
xchg
xor
and
jecxz
sbb
insl
scas
sbb
rorl
dec
nop
es
xchg
jo
out
jl
xchg
int3
mov
cli
ja
test
jb
int3
test
fldl
or
sub
lret
add
mov
push
fwait
lcall
pop
inc
outsb
mov
data16
into
stc
jne
xor
push
sarb
sbb
or
movsb
and
fldl
inc
jno
inc
push
adc
xchg
jne
in
and
jg
fidivrl
sub
lcall
mov
clc
jb
das
mov
call
das
test
out
cmp
push
mov
mov
imul
or
loop
lods
popa
testb
xor
or
pop
lcall
or
adc
cwtl
mov
and
popf
add
orl
or
xchg
mov
jge
fstpl
daa
xchg
flds
mov
enter
scas
roll
mov
inc
xor
mov
addl
xor
fmull
xchg
mov
movsl
int
pushf
or
pop
das
sub
lea
xchg
or
mov
orl
es
jmp
pop
mov
shlb
aas
btcl
lahf
xchg
sub
int3
inc
jnp
inc
mov
test
cmpsb
out
iret
sbb
mov
mov
xor
insb
dec
jg
inc
jecxz
jmp
das
std
cwtl
mov
mov
cmpsl
and
insl
adc
dec
mov
cmc
sub
in
dec
enter
xchg
popa
pop
lahf
fmuls
mov
ds
into
sar
xor
adc
ljmp
pop
pop
sbb
xchg
xchg
adc
pop
pop
xor
sub
jge
pushf
fdivrl
push
push
scas
mov
in
xor
js
sub
icebp
sbb
cmp
lret
bound
push
mov
or
jnp
and
or
mov
clc
insb
aad
sti
and
or
cmpsl
cmp
lret
addr16
leave
pop
fs
leave
js
push
loope
int
mov
add
ret
mov
fsubs
jp
out
adc
push
nop
loopne
out
in
push
dec
sub
cmp
leave
insb
jle
cmpsl
xchg
aas
pop
pop
add
pop
hlt
pop
aad
push
mov
xchg
test
loop
in
stc
das
ret
xchg
xchg
scas
pop
lea
rol
test
stos
lock
mov
ja
call
fidivrs
mull
std
ror
testb
or
cli
push
mull
push
das
push
pop
push
filds
mov
inc
cmp
cld
push
mov
jmp
cli
jbe
push
pusha
in
xchg
lods
sbb
jne
shl
fdivl
cmp
int
add
sbb
rorb
jmp
xor
nop
bound
mov
test
or
int
xor
out
loope
jae
mov
test
ja
scas
pop
pop
pushf
imul
cmp
les
sti
xchg
in
push
lret
sub
cli
or
popf
add
cs
out
xor
int
sbb
sbb
mov
out
sub
out
and
pop
pop
lret
cld
cmp
aaa
xor
repnz
jbe
pop
jb
loope
dec
sub
aas
cmp
loop
lahf
mov
bound
cmpsl
loopne
pop
out
jle
movsl
js
and
cmp
sub
mov
xor
push
add
cltd
dec
cld
fcmovnb
in
cmpsl
mov
repz
mov
or
and
add
mov
adc
loopne
out
add
and
cmp
mov
aas
mov
jl
loope
test
stos
test
push
add
pop
fwait
aad
xchg
mov
jmp
push
ljmp
out
fsubrp
dec
ja
lods
into
cwtl
movsl
popf
jnp
es
jb
mov
fnsave
shlb
xchg
push
in
adc
push
repz
dec
aam
push
cltd
repnz
flds
cmpb
jbe
fstpl
sbb
je
repz
ds
inc
jnp
mov
jle
sbb
sub
sahf
mov
jge
inc
stc
test
sbb
xor
mov
add
pop
jg
pop
in
xchg
fmuls
xlat
inc
pop
add
popf
mov
push
cli
mov
aaa
and
mov
mov
decb
cmp
jno
cmpsl
fld
or
cltd
dec
or
in
sbb
add
push
xchg
mov
push
xor
outsb
les
aaa
mov
mov
arpl
shlb
cmp
loop
xchg
fldl
inc
push
push
js
test
subl
mov
aam
test
stc
sbb
add
dec
lcall
daa
mov
clc
jmp
mov
shl
and
cmp
movsb
jmp
push
inc
call
bound
cmp
aas
pop
out
sahf
pop
jmp
push
mov
mov
and
fidivrs
or
es
nop
push
push
pop
fists
pop
mov
les
pop
sub
cld
inc
xor
xchg
xor
jns
add
push
sbb
outsl
stos
imul
out
roll
push
cmp
lcall
jge
ucomiss
inc
cmpsb
andl
dec
mov
jnp
cli
or
roll
mov
push
push
hlt
and
sbb
movsb
sub
test
scas
in
jmpw
inc
mov
loop
sub
in
sub
sub
push
dec
sbb
mov
mov
fdivrl
scas
icebp
incb
mov
and
mov
sahf
mov
push
xchg
or
push
cmp
push
mov
arpl
mov
inc
jne
pxor
sub
mov
adc
cmp
loop
mov
xor
add
mov
pop
pusha
cli
sahf
test
nop
cmp
lods
xchg
lock
mov
cmp
mov
xor
cmc
ljmp
testb
pop
stc
int
fstps
out
das
mov
dec
loop
les
cwtl
dec
adc
and
popa
inc
xchg
jp
push
pop
xchg
inc
sub
es
push
aad
mov
jb
cmp
mov
jmp
cld
mov
out
pop
xchg
pop
lock
in
or
jmp
mov
nop
lret
stc
pushf
bound
dec
sti
and
out
out
dec
outsl
arpl
ljmp
pop
jmp
rcrl
lds
mov
pop
out
xor
fisubrl
in
push
xchg
addr16
fidivl
repnz
xor
aas
adc
inc
push
pop
cld
andb
popf
cmp
inc
sbb
jnp
sahf
mov
add
rcll
jle
sarl
mov
call
stos
sub
pusha
jnp
ficoms
adc
inc
inc
push
jge,pn
pmovmskb
fsubrl
cmp
xor
push
ds
xchg
int3
fwait
add
dec
cmpsb
out
nop
jp
add
outsb
in
pop
lea
adc
add
sub
std
pop
dec
adc
je
sub
xor
negb
adc
frstor
test
fimull
cmpsl
pop
sub
sarl
hlt
and
inc
sbb
and
pop
cmp
or
sub
insl
pop
sub
sahf
sti
addr16
aam
lcall
push
icebp
mov
inc
adc
push
into
xor
out
or
hlt
lods
arpl
pop
dec
adc
sbb
aas
and
outsb
jl
mov
and
push
aaa
scas
xchg
sub
or
int
inc
push
adcl
xchg
pop
sbb
lret
or
push
call
and
sbb
imul
sahf
cmpsb
in
out
mov
cmp
adc
sub
cmpsb
inc
dec
mov
sbb
imul
pop
fstl
cmpb
ror
mov
dec
out
jns
pop
add
mov
push
mov
adc
cmc
fistps
mov
push
ds
or
dec
lods
xchg
cmpsl
cmp
push
pop
jg
sub
lcall
test
add
sbb
decl
fstpl
push
cli
movb
dec
cmc
sbb
cs
mov
jp
fld
sbb
movsb
stc
bound
add
mov
mov
push
daa
push
xor
stc
pop
test
out
js
cmp
push
dec
cmp
into
int
lret
and
lcall
scas
pop
fistpll
mov
sub
pop
adc
daa
repz
and
das
push
aaa
xchg
das
test
mov
jp
xor
std
and
pusha
add
pop
insl
fisubrs
xor
lds
cmc
mov
shlb
push
pop
les
xchg
pop
popf
push
push
loop
sub
fcmovnu
mov
lcall
dec
mov
scas
movb
mov
inc
int
push
es
negb
push
lahf
cmp
jno
cmpsb
aaa
stos
enter
aas
sub
loopne
in
jbe
das
pop
mov
push
sbb
std
mov
loopne
push
fisubl
stc
lcall
loope
movsb
sub
push
aaa
sub
jbe
mov
fsubr
mov
cmpsb
pop
movsb
and
loopne
test
mov
pop
sbb
aas
xchg
inc
cmp
adc
je
and
icebp
jno
loop
lret
pop
xchg
ljmp
outsl
xchg
push
ss
jae
mov
into
fnstcw
aas
pop
bound
cmpl
clc
movsb
pop
testb
lret
pop
push
dec
movsl
pop
push
lock
mov
jl
mov
movsl
mov
fdivp
outsb
sub
int3
cmp
cli
popf
inc
movlps
fdivl
sub
in
add
out
icebp
call
push
iret
sbb
jne
lret
les
inc
xor
mov
loopne
mov
scas
jae
sub
push
fidivs
jae
rcr
jmp
cli
sbb
xchg
mov
push
mov
add
rol
jecxz
scas
add
mov
mov
jmp
or
test
movsl
pop
push
cmp
cmpsw
lahf
mov
push
in
xor
pusha
jmp
jno
ja
dec
int
or
cmp
mov
nop
xchg
jb
dec
cli
push
xchg
pop
sub
xor
xchg
xor
cltd
stos
arpl
in
xchg
pusha
sbb
mov
xchg
and
insb
lahf
inc
mov
sub
mov
cmp
mov
push
and
lcall
cmp
inc
sahf
movl
idivl
pusha
insb
sbbl
mulb
lods
sbb
lss
loope
mov
xor
jno
cmp
into
inc
inc
cmpsb
dec
out
mov
push
jo
popf
jg
sbb
repnz
pop
aas
shl
ljmp
cmpsl
sbb
mov
add
into
icebp
xchg
and
movsl
and
xlat
stos
or
and
mov
sub
lcall
mov
sub
jno
and
xchg
or
sub
and
sbb
push
loope
cmp
lret
mov
mov
and
test
mov
imul
es
repnz
mov
jl
dec
addr16
push
mov
stos
mov
in
gs
fadd
or
xor
push
outsb
ficoms
lcall
popf
xor
imul
xor
pop
ret
cmp
inc
pop
sub
add
xor
jns
out
pop
push
addr16
cmpsl
mov
push
ljmp
and
stos
cli
push
mov
pop
or
ja
push
and
lcall
lods
xchg
push
pmaddwd
sahf
out
out
sarl
or
pop
sbbl
xor
data16
into
fiaddl
ret
dec
sub
cli
jb
and
xchg
push
xor
push
sbb
les
leave
jmp
mov
cmp
jno
stc
daa
leave
mov
in
imul
push
addr16
enter
popa
das
xchg
icebp
dec
test
xor
mov
stos
mov
mov
ljmp
sbbb
arpl
xchg
push
lret
xchg
xor
dec
dec
dec
rcrl
pop
std
lahf
int
jbe
mov
push
xchg
test
aam
popa
dec
adc
insl
or
jno
mov
lock
jo
inc
stc
push
out
js
imul
lret
jge
mov
jns
mov
sbb
sbb
cltd
push
sbbb
or
cmp
jmp
test
inc
and
push
pop
dec
cld
push
and
sub
mov
sti
push
add
cmpsb
pop
xlat
jae
pop
pop
clc
in
jb,pn
loopne
mov
repz
mov
adc
sbb
lock
int
pop
and
push
and
jg
mov
jnp
lret
lahf
add
stos
jg
mov
fisttpll
clc
out
popa
lcall
jg
repz
test
dec
sbb
cmp
mov
neg
push
lods
xchg
adc
imulb
jns
fiaddl
mov
lods
cmpsl
adc
mov
shrb
dec
fistl
sbb
imul
and
roll
enter
scas
dec
mov
popf
sub
lock
sbb
int3
cmp
cmp
pop
inc
sbb
xchg
jecxz
ljmp
inc
inc
sub
adc
mov
mov
jecxz
lds
inc
adc
cmpsb
xlat
test
mov
sub
jecxz
sbb
shlb
dec
jmp
jne
sbb
mov
jae
lret
ficoms
sbb
xchg
dec
lret
xorl
sub
or
sub
sbb
push
mov
call
xorb
inc
mov
inc
add
mov
lahf
shrb
mov
mov
sbb
dec
cmpsl
into
and
jge
jbe
popa
test
add
nop
loop
xor
stos
fiaddl
fsubl
jg
mov
add
arpl
or
orb
and
jnp
sub
pop
mov
sub
pop
push
flds
cwtl
sub
pop
push
sub
pop
jge
popa
out
bound
inc
xorl
loopne
mov
je
xchg
inc
xchg
ds
sub
sbb
in
arpl
mov
and
pop
push
inc
and
mov
les
arpl
pusha
in
mov
ljmp
inc
out
cwtl
adc
cmc
mov
arpl
loopne
inc
fwait
testb
ret
xor
sahf
roll
sub
add
xchg
rorl
sub
push
dec
cmp
frstor
cmpsb
cmc
sub
pusha
lahf
gs
insl
adc
dec
push
outsb
pushf
jno
lret
into
jb
cmp
jmp
int3
and
call
subl
or
sbb
adc
pop
lds
sub
cmc
inc
add
bnd
adc
lds
fidivrl
mov
stc
or
and
imul
imul
stc
ds
jns
inc
xchg
dec
xor
mov
fstl
or
xor
cmp
xchg
les
xchg
ss
cmpsb
ja
sbb
into
lods
cmpsb
push
cltd
jp
and
ja
inc
xchg
adc
mov
jnp
mov
daa
or
gs
sbb
js
xor
inc
sub
pop
scas
imul
pushf
lret
mov
pop
movsb
das
out
outsl
out
or
pop
roll
mov
scas
aas
imul
popf
push
stos
push
mov
les
jecxz
or
les
lahf
sub
imul
test
dec
or
push
aad
aaa
jo
adc
scas
mov
fwait
mov
je
fdivl
and
into
mov
sub
es
in
scas
jo
jp
mov
xchg
in
insl
mulb
adc
jge
mov
mov
pop
loopne
xor
pop
rcrl
test
icebp
push
stos
push
jb
and
addr16
jne
in
sub
push
and
out
sbb
mov
jns
imul
icebp
int3
sub
push
mov
aad
outsl
bound
or
clc
xor
mov
repz
insl
push
scas
mov
xor
adc
nop
clc
je
dec
leave
mov
inc
adc
and
dec
lea
rorb
fiaddl
or
mov
cmp
in
mov
adc
mov
gs
icebp
popf
outsb
stc
pop
xor
mov
lods
bound
cmpl
cs
in
addr16
xlat
mov
sahf
or
dec
mov
and
inc
adc
xlat
sbb
xor
cmp
cmpsl
pop
adc
xor
xor
test
das
push
sbb
xchg
in
pusha
lds
jnp
adc
pop
mov
sub
lock
arpl
mov
pop
push
aaa
and
jge
cmp
mov
push
and
mov
sub
loop
add
push
xchg
movsb
push
mov
sbb
xchg
add
push
sti
fisttpl
iret
dec
push
dec
stos
pop
inc
daa
mov
mov
inc
lods
lea
xchg
dec
jnp
mov
test
sub
or
int
in
insl
stos
scas
jo
in
inc
in
sub
out
gs
pop
sbb
js
pushf
sub
mov
sub
shrl
mov
pop
mov
xor
mov
int3
or
pop
clc
cmpsb
lahf
fisubs
and
cmp
mov
or
lret
jge
pop
lock
outsl
mov
cmp
lret
sbb
dec
add
out
out
cwtl
add
mov
xor
mov
pop
inc
mov
xor
icebp
pop
push
pop
xor
xchg
mov
and
ja
test
scas
add
mov
movzbl
or
push
add
out
mov
aam
mov
bound
insb
xorl
out
mov
push
iret
add
xchg
lods
jg
inc
push
jl
movsl
mov
fdivrp
ffreep
adc
add
cmc
outsb
cmpsl
movsb
sarl
jecxz
in
testl
adc
arpl
cltd
mov
mov
or
lock
cmc
mov
and
mov
out
addr16
imul
outsb
lret
push
mulb
xchg
stos
jp
ja
sub
dec
shl
inc
push
adc
mov
mov
inc
les
push
rcrl
movb
iret
ret
push
out
int
scas
sbb
push
xchg
add
add
push
jp
bound
and
sti
xchg
out
int
insl
and
cmpsl
push
imul
rorl
lret
repz
addr16
sbb
outsb
mov
bound
xchg
jae
adc
je
leave
int
sbb
sbb
xchg
cltd
cmp
movsb
leave
daa
mulb
insl
cmc
sahf
shl
stc
sbb
push
dec
mov
pushf
push
mov
rcl
fistpl
hlt
int3
push
rol
mov
xchg
popf
pop
xor
add
push
sbb
cs
js
mov
pop
div
sub
cmpxchg
jne
and
add
jno
push
fnstenv
dec
xor
daa
ret
rcl
cwtl
jne
fyl2x
xchg
call
adc
in
lods
mov
jo
int3
inc
mov
jbe
add
mov
loopne
ret
add
sbb
dec
push
jae
mov
lahf
xlat
in
test
imul
mov
mov
in
data16
adc
insb
cmpsl
cmp
inc
mov
jecxz
dec
scas
mov
roll
pushf
push
mov
add
jne
std
adc
idivl
jl
jns
test
loope
xor
xchg
or
shlb
out
adc
shrl
mov
jae
lcall
es
inc
orl
enter
pop
call
push
mov
cmpsl
in
sarl
cmp
pop
push
ja
clc
add
adc
shrb
jle
add
adc
dec
push
dec
xor
in
rorl
mov
dec
out
or
pop
adc
mov
and
and
cmpl
pushf
jl
scas
iret
mov
mov
push
sahf
push
test
pop
pop
leave
outsl
mov
xchg
ljmp
mov
icebp
pop
push
mov
push
push
scas
sub
rcrb
mov
push
cmp
dec
push
jl
jmp
and
and
loopne
or
sbb
pop
mov
sub
gs
fnsave
push
rclb
cli
fwait
mov
adc
xchg
sbbb
aas
das
inc
jae
pop
imul
sub
aaa
outsb
sub
cmpb
fldenv
jae
mov
aaa
push
outsw
movsb
and
dec
stos
fs
insl
mov
sbb
cwtl
popf
mov
lret
dec
inc
xchg
cs
int
add
mov
pop
and
sub
pop
xchg
cli
hlt
xchg
call
jns
sub
lcall
push
mov
jl
jecxz
stos
dec
mov
or
pushf
cmp
loop
mov
sub
insl
pop
push
mov
jg
outsl
xor
dec
add
pop
lods
adc
lret
adc
jno
push
lods
inc
mov
and
jns
movsl
jg
add
mov
in
cli
sarl
xlat
jae
dec
mov
lahf
outsb
dec
test
mov
les
clc
inc
arpl
fdiv
insl
mov
leave
ss
and
mov
xor
dec
addr16
jne
xor
std
sarb
push
insb
lret
test
pusha
stos
xchg
pop
mov
pop
adc
mov
sub
mov
jle
cmp
sub
fdivs
xchg
sbb
out
lea
in
fistl
arpl
test
sti
rolb
enter
gs
push
cmpsl
test
or
add
pop
cwtl
adc
or
out
cmp
push
dec
push
mov
ds
push
out
pop
jns
and
cs
jo
add
dec
fwait
xchg
sarl
mov
pop
je
shll
cmp
movsl
inc
xlat
jp
loope
daa
cmpsl
js
stos
int
in
jmp
pop
leave
add
lahf
daa
add
mov
adc
adc
mov
sbb
pop
pop
nop
xchg
insb
jnp
xchg
arpl
mov
jp
mov
mov
leave
xchg
jecxz
push
jns
dec
mov
inc
push
or
sti
stos
out
stos
mov
stos
push
fwait
cmp
mov
mov
lret
add
sti
mov
jae
fmull
xchg
push
idivl
cmp
in
sub
pop
lret
lods
test
cltd
inc
cmp
mov
pop
lret
fisubl
scas
mov
add
js
jp
mov
stc
mov
clc
or
jle
shl
daa
fidivl
fcmovu
lock
xor
imul
mov
stos
cmp
mov
lahf
pushf
adc
fdivrl
cmp
dec
jb
mov
ja
mov
pop
leave
loopne
jo
ds
int3
pop
aas
or
popa
lcall
sti
iret
test
inc
sbb
imul
lock
pop
repnz
in
test
jae
mov
dec
aas
dec
jg
dec
pusha
inc
movsb
mov
cmpsb
adc
mov
divl
test
adc
ja
fcmovnb
daa
jmp
xor
mov
sub
and
fs
xorb
out
xchg
fnstcw
xor
jle
lret
orl
push
cmp
in
hlt
rclb
jbe
mov
adc
dec
and
cmp
icebp
ficoml
roll
push
or
jp
mov
aaa
xor
out
das
mov
push
jge
ret
sub
dec
rcrb
push
pop
aaa
mov
push
inc
add
mov
in
adc
movsb
pop
filds
sub
xchg
loopne
popa
cmpsb
mov
mov
sub
fimuls
xchg
test
lcall
sbb
or
inc
mov
add
or
stos
fincstp
es
leave
out
test
aaa
aad
cmp
push
loopne
xchg
dec
mov
fincstp
xor
repnz
lods
mov
xchg
call
cmc
sbb
sarb
cwtl
popf
sub
add
cmp
add
test
aad
mov
sbb
sbb
adc
icebp
dec
cmpsb
xchg
fs
mov
out
mov
inc
inc
xchg
fcmovbe
or
test
shlb
mov
or
out
and
cs
sbb
dec
btr
mov
mov
xchg
or
cmpsl
ret
lahf
xlat
xchg
test
cltd
cltd
es
push
sub
adc
movsb
popa
inc
outsb
mov
xor
fisttps
push
mov
pop
cltd
lahf
mov
pushf
push
xor
addr16
rcrl
fistpll
xchg
pop
cli
and
cwtl
loop
shlb
xchg
jae
loop
sub
insl
push
lret
insl
dec
test
shll
fimuls
sbb
mov
popf
jb
lods
in
out
sarl
lods
mov
or
ror
add
gs
jge
inc
xor
pop
xchg
aad
add
in
mov
jne
xor
mov
adc
sbb
add
dec
imul
push
add
jl
lret
mov
and
xor
dec
cmp
and
imul
ljmp
sub
add
in
push
push
cmp
sbb
push
frstor
sbb
jae
ljmp
arpl
jp
push
or
in
cmp
sbb
push
push
mov
mov
sbb
lret
fcmovne
sahf
imul
call
out
lods
xor
dec
ss
dec
rorb
mov
jnp
notb
xor
xchg
sbb
pop
daa
inc
mov
adc
xchg
ret
jno
std
ficoml
fcomp
push
jmp
in
or
stc
fwait
test
xor
jmp
add
aad
int3
flds
shrb
cmp
fdivrl
into
insl
ret
jnp
xchg
pop
jae
lahf
imul
cs
popa
movsb
movsb
imul
dec
into
fsubrl
sbb
adc
xor
inc
das
ljmp
hlt
mov
push
popf
lods
push
andl
icebp
sbb
lcall
lret
lods
ja
cmp
cmpb
pop
lea
jmp
mov
sub
or
js
mov
mov
push
testl
aaa
or
or
mov
test
jo
dec
sub
test
icebp
pop
dec
xchg
push
bound
jmp
pushf
pusha
adc
daa
lahf
xor
fiaddl
push
aad
add
dec
nop
mov
mov
jnp
repnz
loop
insb
mov
shrl
inc
lret
pop
mov
shll
out
fstl
je
push
lods
or
jnp
jae
bound
pushf
pop
pop
add
ret
mov
mov
add
mov
ret
dec
fsubrs
add
pop
movsl
adcl
sbb
push
roll
inc
fdivr
cmpl
mov
add
mov
fwait
jns
sbb
pop
add
addb
mov
or
xor
outsl
cltd
stos
xchg
and
sbb
mov
fs
and
repnz
add
fsubrp
mov
and
mov
fsubrl
inc
inc
mov
data16
rorb
rorb
pop
je
loopne
je
mov
xchg
test
enter
xchg
lret
sbb
rcll
mov
dec
mov
add
fmulp
sbb
xchg
push
pop
std
mov
push
pop
add
clc
gs
nop
xlat
lds
sbb
mov
inc
leave
mov
dec
fchs
out
sbb
in
dec
shr
sahf
push
stos
sbb
pop
mov
mov
clc
data16
call
popa
out
clc
cmp
fistpll
std
xchg
lds
repnz
and
lods
fs
iret
cltd
push
mov
and
mov
popa
adc
push
adcb
loope
fidivl
inc
jb
mov
xor
mov
enter
gs
imul
sub
ror
dec
rcrb
dec
or
nop
addb
mov
push
inc
push
xchg
dec
xchg
addr16
or
popa
loopne
sub
les
or
pop
rclb
inc
clc
push
fsubrl
mov
inc
cltd
mov
xchg
mov
into
arpl
jle
xor
sbbl
rcrb
mov
arpl
test
push
jge
popa
roll
push
cmp
inc
jmp
sub
pop
cwtl
in
push
cwtl
clc
adc
cmp
inc
int
sbb
les
cmp
hlt
lods
outsb
ss
out
mov
sahf
cltd
cltd
fisubrs
mov
arpl
movsl
dec
into
and
mov
inc
into
aam
mov
sub
and
ficomps
push
scas
and
push
dec
daa
das
dec
insb
shl
scas
xor
addl
std
lds
fwait
cli
adc
jle
out
or
aam
lods
fisttps
aad
int
xor
pusha
jmp
dec
test
mov
iret
push
rolb
aam
negl
shll
aam
mov
adc
mov
fmuls
or
dec
testl
mov
outsb
test
scas
add
xchg
sarb
int
mov
imul
pop
xchg
xchg
movsb
lahf
mov
jne
sbb
sub
xchg
mov
mov
jmp
sbb
lahf
clc
mov
sub
into
mov
in
and
out
fisubrl
es
dec
adc
subb
cmp
fadds
push
jg
cmpb
push
pop
xchg
mov
xor
popa
push
xor
inc
sbb
ds
adc
xchg
sub
cmp
add
mov
out
dec
cmpsb
or
cli
cmp
jb
fcoms
mov
adc
jo
icebp
in
fs
das
incb
aad
mov
xor
lret
push
jge
cmpsb
and
pushl
pop
dec
mov
int
sbb
mov
add
pop
inc
pop
subb
loopne
pop
xchg
lret
xchg
scas
inc
xchg
mov
and
sbb
icebp
inc
push
in
jle
cmp
adc
pop
jns
push
mov
sbb
nop
push
or
nop
mov
ja
stos
test
xchg
into
repnz
fcomip
cmp
mov
xor
or
ds
pop
popf
jl
dec
jno
outsl
add
int3
adc
cwtl
mov
in
pop
ljmp
sbb
pop
shll
fs
sub
inc
shll
ljmp
mov
jmp
cltd
in
mov
ja
imul
ljmp
mov
out
mov
push
mov
and
and
rcrl
adc
cmpsl
cltd
stos
dec
or
aas
cmp
in
repz
push
xlat
fiaddl
adc
test
push
jp
mov
mov
pop
xchg
sub
ljmp
mov
repz
shrl
shrl
inc
jmp
mov
jb
jmp
out
into
sti
insb
subb
pop
jl
cmp
xchg
movsl
mov
clc
sub
or
cmpsl
mov
jecxz
clc
test
ja
imul
shrb
mov
sub
inc
daa
xor
xchg
jl
mov
lret
jge
jae
cmp
mov
imul
imul
lods
add
jle
xor
sti
jb
dec
mov
or
addl
mov
lds
test
js
jno
push
mov
rep
sbb
aam
mov
xchg
mov
mov
sub
xorb
mov
lret
dec
icebp
js
repnz
cmp
js
xchg
aaa
or
mov
dec
imull
inc
sbb
les
inc
or
mov
add
cs
xchg
rclb
fwait
repnz
jbe
mov
xor
movsl
push
dec
test
inc
bound
scas
popf
js
out
push
js
sbb
sti
push
cmp
jns
data16
add
jnp
adc
add
dec
lcall
ror
and
jl
mov
clc
aaa
add
fsubs
enter
paddusb
inc
sub
ja
in
add
fcom
fsubr
add
xor
mov
scas
inc
mov
mov
test
jae
adc
pop
jbe
enter
push
and
mov
pop
shlb
in
popf
fwait
popf
xchg
mov
push
loop
shl
jle
sub
mov
mov
loope
mov
mov
dec
mov
arpl
xchg
addr16
lock
inc
push
ror
mov
mov
test
icebp
and
pop
cwtl
push
sti
adc
jne
filds
cld
out
mov
xor
ret
sbb
loop
xlat
add
insl
dec
mov
and
dec
lret
or
jo
in
mov
dec
cmp
xchg
mov
arpl
rep
outsl
out
lret
push
xor
dec
mov
xor
and
jb
push
jo
imul
mov
lret
sbb
mov
inc
scas
stos
insl
jmp
ja
pop
inc
dec
testl
and
ret
ds
mov
inc
mov
xchg
push
mov
dec
mov
and
test
cs
xlat
cmp
lcall
mov
or
sti
ret
xchg
mov
in
mov
scas
inc
jnp
out
push
pop
dec
enter
mov
xor
scas
out
outsl
mov
rcrl
inc
and
jne
out
dec
push
ror
loop
jo
dec
sbb
inc
aas
sbb
cmp
pop
xchg
push
movsl
fcoms
dec
and
sub
call
sub
add
xchg
xchg
xor
call
imul
sbb
addl
push
cmp
sbb
sbb
jnp
cmp
leave
movsb
jle
adc
into
jbe
mov
idiv
push
movsb
les
bound
inc
lock
xor
push
adc
dec
mov
fistpl
add
sbb
out
int
dec
mov
jl
mov
scas
leave
add
push
adc
inc
sub
inc
jae
mov
pop
pusha
fiaddl
dec
mov
push
scas
xor
push
xor
xor
sbb
mov
in
outsb
aad
cmpl
push
fistpl
in
pop
sub
jns
xchg
push
scas
sbb
stc
jne
inc
inc
jg
in
and
in
xorb
inc
arpl
inc
mov
xor
aam
and
push
gs
in
leave
decb
loope
in
loop
mov
push
mov
js
push
jge
xor
pop
dec
dec
mov
gs
fdivrs
jmp
pop
xor
or
jbe
sub
in
or
pushf
insb
lock
loop
xor
sbb
imul
test
mov
cwtl
jg
out
mov
es
inc
xor
adc
inc
gs
gs
aas
jne,pt
fadds
or
xor
pop
sahf
push
adc
in
pop
cmp
xor
or
lods
xlat
adc
jb
lea
sarl
in
jb
mov
stos
mov
cmp
out
das
dec
jb
call
pop
shrb
inc
cmp
sub
sbb
cmp
in
es
fmul
add
xor
fadds
lods
scas
mov
jmp
xchg
pop
jns
jne
pop
jge
or
and
stc
bound
dec
dec
shlb
aas
in
ljmp
inc
cmp
mov
cs
cld
sbb
mov
jp
je
imul
and
xchg
movsl
aad
out
stos
cmpb
shr
daa
loopne
das
mov
mov
cmp
mov
jne
outsl
adc
jb
in
fsubrl
pop
mov
pop
sub
pop
ljmp
adc
push
mov
aam
jmp
mov
jns
and
mov
mov
negb
add
popf
pop
inc
clc
pusha
jp
bound
lds
int
loopne
fstpl
cwtl
push
mov
add
aaa
dec
stos
test
cmc
mov
dec
mov
cmp
jge
pop
add
int
mov
mov
rclb
in
movsb
test
shl
adc
sahf
sbbl
jb
test
jns
fsubp
mov
mov
gs
xor
push
pop
int3
mov
mov
sahf
loop
insl
rolb
mov
push
sub
repz
mov
pop
into
cltd
test
ret
in
loopne
repnz
loopne
sbbb
ret
xor
sar
hlt
ja
gs
insl
sbbl
cmc
jecxz
pop
inc
xor
xor
std
ffree
push
and
rclb
jne
mov
dec
push
enter
in
pop
ss
lahf
aad
push
or
add
mov
sbb
and
sbb
cmpsb
jbe
jne
sbb
bnd
cmp
loop
test
loop
jg
or
out
inc
xchg
push
add
mov
xchg
mov
mov
iret
aad
xor
push
dec
dec
mov
lret
jnp
push
and
or
in
and
gs
mov
jne
stc
xor
cmp
in
push
aad
stos
jge
or
mov
cli
cltd
cltd
sbb
sub
sbb
loop
push
test
pop
jp
stos
cmpsl
js
sbb
dec
inc
sti
bound
ficoml
js
adc
jne
mov
or
xor
fiadds
loope
push
lods
vpsrld
pop
rcrb
scas
dec
es
push
ljmp
pop
xchg
sarb
dec
cmpsl
fiaddl
daa
into
xchg
jne
mov
out
test
or
push
xor
or
xorl
out
roll
stos
adc
addr16
lahf
pop
in
bound
adcb
outsb
jle
jae
imul
ss
adc
lret
mov
jl
jp
scas
sbb
stc
xchg
daa
or
pop
loope
fucom
rolb
jb
cmp
jle
mov
add
clc
ds
mov
push
or
inc
push
adc
dec
jae
sub
sbb
adc
xor
and
jae
inc
or
push
fiaddl
sti
push
and
popf
pop
repz
adc
in
push
popa
xor
or
out
pop
cmpsl
clc
sbb
neg
jbe
inc
sub
jne
xor
fsubl
loop
push
xchg
mov
imul
mov
dec
aad
fwait
mov
repnz
sbb
add
test
rclb
cmpsl
outsb
xchg
ffree
or
dec
or
ljmp
adc
cli
loope
outsl
mov
stos
mov
mov
sbb
orl
iret
jae
cmp
clc
dec
scas
repz
shlb
xor
add
pop
rcl
pop
shrl
lods
push
inc
mov
sub
test
arpl
andb
mov
jmp
sahf
mov
jle
aad
mov
notl
std
mov
xchg
hlt
dec
xor
outsb
xchg
lock
add
or
call
leave
leave
sbbb
cmp
movsl
rcll
cltd
xor
and
jg
fidivrl
xchg
jge
jne
int
mov
sti
xchg
es
loope
dec
and
adc
fisttpll
dec
adc
lret
xchg
mov
out
mov
pop
imul
sbb
push
cmp
call
in
add
subb
gs
push
jmp
jne
push
dec
movsl
cmp
enter
aad
fwait
jp
stos
ret
pushf
fstpl
push
and
mov
rclb
outsb
add
stos
and
mov
enter
jle
push
xchg
leave
bound
xor
ret
int
sbb
mov
or
push
orb
mov
xchg
movsl
mov
scas
and
lock
out
xorl
xor
incb
inc
js
xchg
push
pusha
mov
enter
jae
or
mov
rorb
xor
mov
fsubrp
inc
call
pop
and
enter
pushf
imulb
xchg
push
inc
dec
pop
push
xchg
imul
jg
xchg
iret
mov
mov
xchg
fcompl
sub
rclb
add
fnstcw
xchg
pop
gs
pop
pop
inc
xor
lds
and
push
xchg
adc
in
fistl
pop
incb
std
ja
mov
ljmp
lahf
sub
dec
mov
dec
mov
or
mov
mov
movsb
add
dec
mov
xor
sub
push
jecxz
mov
dec
popf
shl
ret
imul
mov
test
mov
push
mov
lods
cld
loope
lds
mov
sti
push
in
xchg
mov
and
int3
test
aam
jne
pop
ret
out
mov
das
adc
push
and
mov
cmp
and
jg
divl
fs
xlat
ss
clc
or
cmp
jno
cli
scas
stos
cmp
lea
js
cmc
cmp
jle
gs
stos
cmpsl
xchg
sbb
imul
fcoml
inc
pop
gs
xor
bound
or
nop
imul
ja
jecxz,pt
mov
mov
ret
adc
push
pop
fisttps
cmpsb
in
ja
fildll
mov
lea
arpl
outsl
repnz
push
sub
xchg
lret
cmp
in
dec
adc
jb
xor
lret
pop
faddl
cld
sbb
pop
push
lcall
es
xchg
mov
mov
or
pop
jns
or
xlat
scas
lods
stos
sarl
cs
jnp
mov
inc
jecxz
or
mov
adc
dec
mov
dec
popf
adc
push
mov
mov
xchg
or
xchg
loopne
mov
sbb
jecxz
lea
pop
sub
cmp
mov
out
shll
mov
out
mov
rep
lret
arpl
out
daa
xor
ret
lea
stos
add
lods
mov
addr16
orl
push
std
sub
or
or
push
and
and
mov
jmp
lock
add
sbb
add
jne
xchg
and
jne
mov
insb
sarl
imul
push
aaa
or
jge
shlb
cmpb
inc
in
jl
xchg
cmp
fisttpl
mov
push
in
movsl
fdivrs
add
xlat
cmp
push
dec
jge
mov
adc
sbb
jnp
adc
jns
jl
ss
jge
cwtl
shlb
shrl
xor
test
pop
or
imul
popa
fisubs
out
pop
cmpsb
andb
popa
fldt
xchg
mov
dec
dec
fs
xchg
sbb
push
shr
ljmp
fistps
in
sub
xor
stos
std
cmp
scas
movq
scas
cmp
mov
adc
rcrl
das
or
add
gs
outsb
jle
incl
clc
xor
bound
sbb
or
push
pop
dec
call
ds
inc
dec
rcr
sub
inc
inc
push
cmp
mov
lock
aas
cmp
xor
sbb
cmc
idivl
mov
fisubrl
jbe
cmpsl
bound
repnz
lea
or
xor
rcll
mov
push
outsl
shll
fisubrl
or
push
lods
sbb
push
rdpmc
inc
sub
test
pop
or
sub
ss
stc
dec
mov
cwtl
inc
jb
pop
cmp
xchg
stc
cmpl
lcall
pushf
sub
pop
leave
sbb
pop
test
dec
ret
clc
xchg
sub
inc
jo
ss
insb
adcb
clc
xor
loop
outsb
cmpb
nop
imul
test
mov
push
shrl
addr16
std
inc
cmp
rcrb
lods
ss
aam
jg
dec
push
push
rorb
loop
jmp
pop
out
les
mov
scas
jl
xchg
sub
add
mov
jmp
cmp
lcall
mov
scas
dec
dec
test
aam
and
and
pop
fldcw
fiadds
in
mov
scas
mov
sub
imul
addr16
ret
ds
lahf
jae
mov
roll
mov
sub
xor
or
call
xor
adc
cld
je
dec
int
imul
mov
pop
fwait
xchg
insb
dec
test
and
test
imul
jmp
jae
dec
test
push
fwait
mov
leave
and
dec
jg
mov
or
rorb
inc
mov
pop
mov
xlat
dec
or
xor
push
aam
xchg
test
shlb
in
loope
lds
jb
ret
ret
into
add
pop
test
inc
cld
outsl
cmp
xor
jo
and
idivl
mov
rorl
into
jo
sbb
pop
ss
and
dec
or
bound
ja
add
push
jle
cmp
add
push
jge
cli
cmpsl
lods
mov
into
lods
lods
scas
pop
test
add
fisubrs
lock
add
mov
cmp
mov
pop
inc
jbe
mov
jns
dec
push
icebp
cmp
push
cmpsl
addl
cmp
xchg
in
scas
mov
adc
push
call
lods
and
xor
int
cmp
push
shl
jne
inc
push
jge
test
outsl
xchg
mov
push
pop
mov
pop
cmovns
sbb
jns
or
xor
add
cmc
mov
jo
mov
les
cmpb
cld
dec
test
jne
xchg
mov
ret
mov
inc
aas
sub
jnp
lret
or
push
repnz
inc
or
hlt
dec
push
or
push
outsl
xchg
or
popa
je
pop
mov
adc
jge
cmp
movsb
cmc
test
inc
adc
lcall
fbstp
incl
call
sbb
das
mov
xchg
jp
adc
pop
sbb
cmp
ds
pop
inc
aam
xchg
cmpsb
wrmsr
cmc
idiv
insb
repz
lcall
xor
addb
stos
mov
pop
cmp
sbb
test
jo
cwtl
loopne
sbb
mov
loop
cmpsl
rcr
movsb
mov
mulb
xchg
adc
mov
dec
mov
push
xchg
add
sub
or
mov
dec
push
and
nop
lea
xorb
aam
dec
jnp
cltd
sbb
mov
icebp
in
addr16
cmp
popa
lahf
jge
fwait
jb
fiadds
cwtl
xlat
test
gs
ret
in
ljmp
mov
mov
or
jae
enter
shll
mov
sub
sbb
or
sar
popf
xchg
cmpsl
call
lahf
mov
notl
cltd
int3
sti
mov
rolb
fs
nop
sbb
js
dec
inc
add
lahf
mov
sti
cmpb
cmc
pop
jb
in
jle
imul
inc
pop
xchg
sub
sti
sub
add
mov
xchg
lds
movsl
fdivs
repnz
fadd
sub
orl
dec
jge
sub
cmpsl
ss
inc
xchg
mov
mov
mov
cld
sub
popf
leave
lds
inc
iret
push
cmp
aad
lock
jle
shll
cmc
xor
cmp
inc
test
lcall
jns
lahf
dec
mov
jne
movsb
nop
cmc
and
push
fsubrl
mov
popf
or
inc
pop
fstl
fisubs
fldenv
cwtl
push
mov
jne
jecxz
dec
dec
mov
pusha
loope
cltd
in
cmc
mov
test
dec
mov
mov
xor
enter
push
insb
cmp
stos
mov
adc
xor
push
jb
jae
scas
sbb
and
or
jno
pop
sbb
dec
imul
xor
ja
lahf
cwtl
sub
xlat
arpl
push
int
in
mov
cmp
mov
lods
inc
push
mov
sbb
arpl
test
xchg
push
and
push
add
xor
sub
push
mov
pop
or
mov
or
push
lcall
xor
in
scas
jnp
sbb
mov
rol
rcrb
arpl
aas
adc
ret
fs
fldcw
insb
xchg
daa
test
or
sub
sub
push
push
cmp
sbb
xchg
cltd
and
dec
pop
jg
inc
ljmp
nop
into
subb
xor
popf
inc
mov
push
aad
push
cli
test
xchg
add
push
pushf
shrb
mov
cmp
mov
call
es
idivl
scas
adc
flds
insb
adc
cld
cmpl
fsub
outsb
mov
mov
adc
icebp
inc
fcomi
xor
jo
sub
in
push
mov
call
fdiv
fistpl
pushf
or
dec
xchg
in
push
out
rolb
stc
adc
bound
xor
cmp
mov
sbb
or
insb
push
xor
jge
cmp
xchg
sub
push
mov
xchg
adc
xchg
push
sti
dec
int3
add
xchg
lea
xor
and
fcmovnbe
pop
and
add
mov
xchg
das
cs
or
call
es
mov
pop
mov
jl
out
mov
mov
mov
es
jecxz
andb
je
dec
mov
out
xchg
push
icebp
mov
lods
sti
sub
jno
icebp
inc
xchg
xchg
xor
pop
jle
mov
mov
cmp
daa
lahf
jo
in
add
jbe
mov
inc
mov
add
lods
fmuls
sbb
inc
gs
xchg
ds
fwait
pushl
or
scas
push
and
mul
jno
enter
ja
dec
shll
popa
cmp
lret
or
pop
shrd
enter
dec
out
outsl
faddp
shrb
out
lcall
jb
movsb
jmp
clc
push
push
mov
imul
push
movsl
xacquire
dec
xchg
mov
out
aaa
shl
jnp
xor
sub
enter
push
aas
inc
mov
jl
aas
push
jnp
xchg
xor
xlat
inc
shlb
add
in
test
xor
sbb
ret
rcl
push
cmpsb
aad
sub
and
insb
cmp
xchg
pop
scas
or
stos
jl
fsubr
xor
mov
lret
ds
sahf
in
out
adc
fcompl
lea
aam
cmpsb
lcall
mov
inc
scas
mov
mov
ret
mov
and
idivl
cmp
iret
xor
daa
cwtl
sub
push
jbe
jl
mov
pop
jns
fcoms
xor
jle
out
or
inc
dec
int3
mov
mov
pop
dec
sbbl
cli
test
pop
scas
fs
push
cmpsb
je
sbb
mov
movsl
sub
cs
loope
nop
jno
adc
popa
shl
lods
repnz
push
les
sbb
push
clc
cmp
lds
dec
cltd
aam
je
pop
cmp
das
lock
xchg
fdivl
sbb
xchg
jp
insl
sbb
jg
pushw
mov
ss
mov
pushf
scas
mov
ret
outsb
fmuls
sbb
sbb
xchg
add
test
js
dec
push
inc
fs
sahf
rol
adc
aaa
xchg
xchg
mov
aas
pop
add
ljmp
cmp
aad
cmp
andl
out
aas
jae
xor
mov
cmp
mov
call
es
pop
push
outsl
iret
test
jnp
or
les
dec
dec
hlt
push
pushf
push
mov
sbb
sbb
aam
or
or
push
cmp
aam
xchg
cmpsb
or
xchg
push
push
adc
std
arpl
mov
jecxz
imul
aam
xchg
test
dec
cmp
frstor
sahf
in
jo
stos
mov
stos
sub
sub
out
js
js
test
imul
test
in
sub
outsl
push
or
adc
mov
mov
cs
pop
cmp
xor
adc
sbb
addr16
rolb
mov
sub
dec
push
mov
fldl
mov
int
push
roll
mov
int3
ljmp
mov
ds
xor
xor
outsb
test
or
mov
roll
mov
push
push
enter
int3
xor
mov
pusha
add
daa
mov
inc
inc
inc
mov
sub
jge
pop
jae
inc
add
shrb
ret
sbb
sbbl
mov
repnz
cmp
cwtl
addl
repz
popa
cmp
xor
mov
out
push
outsb
pop
lods
dec
xchg
xor
jle
les
or
loopne
mov
rcl
xor
in
cmp
mov
lret
cmp
cmc
leave
adc
sti
inc
int
lret
cli
shl
mov
inc
fnstcw
dec
sahf
or
aad
and
pop
mov
aad
rolb
cmp
popf
xor
mov
in
stos
scas
push
xor
rol
cmp
jnp
lea
pop
pop
mov
nop
call
aad
cwtl
fsts
out
mov
ret
xor
sti
ja
cmpsl
mov
int3
dec
movsl
pop
lret
mov
inc
nop
stos
adc
jno
sub
jp
inc
pop
aas
inc
jg
test
out
into
nop
xor
push
aaa
fistpll
push
and
mov
cmp
and
imul
pop
or
ret
ss
fst
iret
pop
dec
inc
xchg
enter
repz
cmp
inc
mov
xchg
mov
stos
sbb
out
sub
cmpsl
push
stc
inc
test
filds
sub
mov
aas
push
mov
dec
adc
inc
jb
popf
sahf
stc
es
int
fwait
push
mov
outsl
loopne
mov
adc
ficoml
fdiv
daa
sbb
adcb
mov
fdivrp
fdivs
sub
js
out
or
push
mov
cmp
arpl
in
mov
cmpsb
test
or
aam
adc
inc
xchg
add
mov
adc
push
lret
js
test
dec
scas
ja
lret
negb
pusha
mov
jnp
aaa
in
lods
rorb
mov
xlat
test
cs
cmp
test
ds
xchg
sbb
jbe
sbb
fildll
mov
and
cmp
adc
cmp
push
imul
mov
xchg
mov
test
xchg
test
in
jne
pushf
xlat
push
repnz
in
mov
adc
incb
xchg
aad
sbb
idivb
sub
push
mov
xchg
fadds
es
stos
outsb
dec
push
into
hlt
sahf
inc
pop
in
lock
fdivr
xchg
mov
std
adc
gs
cld
out
xchg
aaa
dec
js
sbb
repnz
movsb
push
fcmovnbe
imul
cmp
adcl
fldenv
ficompl
mov
mov
push
xlat
pop
jae
sar
or
test
inc
sub
pop
in
mov
add
mov
dec
jmp
bound
lahf
outsb
jecxz
sti
out
lret
mov
inc
add
push
mov
xlat
jecxz
adc
dec
dec
add
add
adc
jmp
mov
cmp
or
sbb
data16
sbb
in
push
shlb
nop
xchg
lods
mov
cmpsb
dec
jmp
dec
or
xor
roll
jae
dec
pinsrw
or
xor
out
or
xor
jbe
lahf
cmp
mov
popa
push
lea
loop
aam
out
or
lret
push
jg
imul
xor
cmc
add
loopne
fnstenv
sarb
aam
xchg
pop
sbb
mov
cmpsb
cmpsl
call
or
call
aad
mov
xlat
cmpsl
imulb
fistpl
dec
les
push
mov
sub
add
scas
mov
or
adc
lea
sub
das
inc
sbb
add
mov
and
daa
xor
in
in
add
push
jns
xor
dec
lcall
xor
xor
cmp
js
cmp
incb
cli
pop
or
or
xchg
push
lea
insb
xchg
xchg
mov
in
negb
ljmp
push
clc
imul
fwait
sarb
dec
aaa
jle
cld
pushf
call
fsubr
enter
cwtl
push
adc
sbb
add
shl
pop
xchg
push
out
sti
mov
mov
lret
cmp
es
imul
pop
cmp
loopne
in
cmc
pop
aad
mov
jbe
pusha
cmp
jnp
ret
push
mov
cld
cli
jle
repnz
arpl
mov
repnz
sbb
sahf
mov
es
xor
js
adc
lock
push
xor
mov
mov
or
mov
sbb
and
and
cmp
mov
push
and
test
lea
xor
in
jno
push
sti
test
xchg
or
hlt
and
adc
jl
mov
shlb
pop
enter
test
movsb
pop
pop
std
cmp
sbb
jae
mov
adc
cmp
adc
mov
test
pop
ja
jne
fcompl
shl
fchs
and
push
or
push
xchg
cltd
je
mov
inc
ja
rcll
mov
in
pop
mov
and
scas
bswap
lea
in
lock
cs
out
out
ret
outsl
adc
xchg
mov
fisubs
jl
cmp
mov
scas
arpl
mov
and
out
mov
cli
add
movsb
add
push
mov
imul
insl
inc
mov
push
pop
int
xchg
jl
mov
mov
out
stc
push
pop
inc
iret
add
insb
inc
in
out
cmpsb
test
mov
dec
and
ret
outsb
fldl
pop
inc
ja
pop
loope
jg
dec
movsl
dec
pushf
push
xchg
xchg
mov
push
jl
mov
mov
insb
stos
imul
aad
pop
outsb
jns
mov
divb
jnp
cmp
je
stos
pop
adc
js
sbb
or
fiaddl
push
mov
ds
dec
adc
mov
inc
xlat
mov
popa
in
inc
cwtl
dec
ljmp
cmp
push
mov
sub
enter
adc
push
sti
jp
adc
fcmovne
mov
jmp
mov
mov
mov
stc
mov
cmp
and
in
mov
cmp
out
push
out
in
or
xchg
std
or
fs
fisubs
sbb
lds
js
popa
daa
in
or
loopne
cmpsl
pop
scas
dec
lret
shlb
adc
cwtl
jnp
fiaddl
mov
test
push
mov
adcl
enter
dec
adc
stc
add
js
xor
inc
jno
lahf
jmp
cmp
fadds
fsubrs
add
scas
sti
sbb
ss
popa
movsb
dec
cwtl
fimuls
adc
pop
fists
scas
add
add
lods
aas
outsl
ja
push
add
rolb
jmp
jp
jnp
in
pop
and
mov
mov
jae
call
adc
lds
shl
xchg
jg
faddl
adc
sbb
flds
xor
fcmovb
scas
pop
jmp
les
sar
xor
imul
pop
out
xchg
adc
int
push
lret
inc
in
test
aam
lea
sti
lret
mov
jg
xchg
sub
daa
jbe
add
push
bound
adc
out
mov
xlat
imul
xor
loop
push
xchg
dec
or
icebp
in
adc
lock
inc
add
lcall
add
add
and
or
sahf
outsl
es
js
popa
nop
mov
daa
scas
mov
repnz
xchg
cltd
pop
or
loop
mov
push
push
push
sub
jb
scas
xchg
dec
mov
sub
sub
aas
fiaddl
arpl
cwtl
push
push
jne
cmp
or
into
xchg
cmp
and
or
sub
xchg
xchg
outsl
jecxz
loope
xchg
mov
xchg
pop
dec
pop
and
or
out
js
xor
inc
xchg
lret
lods
xor
dec
jne
pcmpgtw
mov
je
outsb
inc
mov
cmpsb
gs
mov
xchg
adc
lods
mov
sbb
outsl
inc
int3
fucomip
aas
xor
aad
push
cmp
mov
scas
movsl
ds
test
jmp
nop
adc
cmp
mov
inc
or
icebp
adc
dec
xor
jnp
sti
mov
mov
pop
pop
jbe
in
andl
mov
shl
mov
inc
les
ss
mov
adc
mov
xor
mov
cs
outsb
shl
xchg
sahf
jp
lahf
pushf
dec
lods
dec
data16
mov
xchg
roll
js
test
orb
repnz
ja
pop
xchg
adc
out
push
mov
xor
int3
outsl
pop
sarl
push
aas
stos
test
pop
pop
pushw
pop
push
test
andb
add
es
scas
jns
mov
and
sbb
cmp
popa
adc
shl
addb
push
sbbl
push
xchg
mov
sub
iret
cltd
add
mov
aam
fs
sub
mov
add
xchg
aad
push
mov
clc
lods
xlat
mov
lret
add
sub
pusha
push
mov
popa
nop
dec
inc
movsb
into
scas
dec
jne
mov
push
lods
or
mov
int
cld
stos
mov
and
push
push
ds
and
sub
dec
inc
ja
popf
cli
xor
jmp
push
mov
mov
scas
cmp
fldl
gs
cmpsl
fld
add
loope
bnd
imul
ss
cwtl
rolb
out
pusha
test
push
lret
mov
sub
push
inc
jge
in
ss
dec
je
dec
insb
cmp
scas
and
pop
xchg
push
inc
into
out
add
imul
push
cmp
jno
inc
ljmp
out
mov
mov
std
cmp
fisubrs
adc
or
sarl
hlt
jge
cmpsb
pop
cld
mov
sti
scas
jecxz
jle
outsl
outsl
cmpsl
shl
fldenv
out
movsl
mov
movsb
pop
xor
pop
pop
outsl
inc
pop
xor
idivl
or
cli
mov
mov
pusha
stos
dec
cmp
inc
mov
pop
mov
or
mov
mov
lea
into
in
add
push
mov
shrl
inc
xchg
rclb
sub
inc
push
or
adc
iret
push
andb
aam
push
addl
jp
pop
stos
push
sub
aam
inc
ss
dec
popa
ljmp
stc
xchg
pop
xor
int
jmp
lahf
jp
mov
jg
in
adcl
mov
and
out
enter
xchg
dec
sbb
rcrb
hlt
leave
cltd
mov
andb
push
sahf
mov
lahf
in
xor
je
mov
inc
out
rcll
mov
bts
cmp
in
out
push
shrl
xor
sti
and
clc
xchg
mov
jno
sbb
cld
dec
sub
push
jns
mov
std
mov
mov
ds
pop
popf
adcl
in
pop
adcl
adc
dec
into
ret
arpl
mov
pop
xor
bound
mov
sahf
cmpsl
aaa
xchg
lods
cmp
out
cwtl
add
movsl
or
xchg
add
outsb
lods
pop
mov
jl
xor
fidivrs
aas
ficoml
sbb
mov
jo
sub
xchg
adc
gs
pop
cmc
inc
fldt
adc
mov
in
xchg
mov
mov
xor
sbb
push
int
or
pop
and
adc
push
pop
mov
mov
scas
shrl
ss
push
imul
ljmp
aad
ret
push
mov
mov
pop
and
nop
test
mov
or
cmpsb
jae
xchg
sahf
xchg
mov
std
xchg
inc
imul
cld
jno,pn
and
jge
cld
jo
sbb
xor
cmp
adc
add
rcll
mov
pop
into
xchg
jmp
and
ret
jp
mov
inc
cmp
int
ja
add
enter
sbb
mov
aas
ret
orl
cwtl
pop
sbb
int3
pop
mov
push
jmp
xor
xor
test
sahf
frndint
xor
adc
movsb
or
popf
or
lret
jne
mov
mov
mov
push
inc
and
je
sbb
lock
mov
push
sub
push
enter
gs
lret
dec
and
aaa
ret
xchg
mov
sarb
xchg
out
mov
mov
pop
pusha
xchg
jne
rdmsr
mov
es
pop
push
sbb
sbb
cs
or
rorl
push
mov
add
int
or
jns
nop
ss
out
ror
mov
mov
dec
scas
push
adc
sbb
cli
dec
cltd
mov
pop
xlat
push
das
jmp
sti
xchg
sub
jle
es
jo
dec
push
test
scas
loope
dec
in
test
loope
out
int3
jl
jecxz
cs
fisubrl
mov
pop
enter
int3
mov
jne
and
jge
scas
sub
jmp
push
sub
adc
push
test
shrl
inc
mov
push
addr16
cwtl
repnz
lcall
push
or
stos
das
clc
cmp
mov
ja
push
adc
dec
out
inc
xor
adc
adc
xlat
xchg
stos
push
stos
xchg
sti
repz
or
in
xchg
xor
adc
add
in
mov
ret
test
cmp
ja
mov
and
in
xchg
or
inc
or
and
test
xor
cli
or
pop
pop
sbb
les
dec
outsb
and
and
out
gs
adc
sahf
pop
into
or
nop
popa
out
loope
out
sbb
rcrb
jae
adc
sbb
loope
orb
mov
dec
outsl
fnsave
mov
fstpt
inc
out
jb
xchg
jecxz
icebp
int3
lcall
mov
sarb
fsubrs
lods
loop
mov
inc
cmp
sbb
sub
sbb
sub
cmp
out
add
or
out
inc
pop
inc
dec
mov
bound
add
cwtl
sbb
mov
mov
inc
jl
popf
jl
call
mov
out
in
pop
clc
aam
inc
xchg
stos
jnp
adcl
add
push
sub
out
and
mov
test
aam
and
aad
cmp
inc
dec
or
jecxz
mov
fldl
mov
pop
in
insl
jbe
mov
bound
cmc
mov
iret
add
popa
and
fisttpll
int3
stc
nop
add
lods
scas
test
fcoms
stc
fisubl
stos
int3
imul
xchg
adc
das
pop
fbld
movsl
repnz
sti
pop
mov
call
add
xchg
dec
cmc
aad
inc
repz
jne
xchg
xchg
xchg
mov
fmuls
mov
push
push
sub
aas
das
les
lcall
loope
in
or
pop
cmp
mov
xchg
pusha
fcoml
popf
mov
clc
push
jns
sub
mov
inc
xor
daa
lods
jo
and
mov
mov
sbb
jno
push
xchg
inc
jmp
les
inc
paddsw
pop
push
les
xor
fst
out
loop
push
mov
pop
aad
pop
inc
push
sub
jnp
fwait
xchg
sub
jo
mov
sub
mov
clc
cmpsb
jmp
add
pop
xor
lahf
orb
lds
fnstenv
xorl
xchg
push
out
cli
lahf
or
lds
fs
cmp
rolb
push
jmp
into
out
lds
sbb
adc
adc
xor
and
add
xor
cmpsl
je
out
dec
sub
out
or
sbb
inc
xchg
cmc
mov
test
add
fwait
mov
in
jb
push
mov
and
stos
or
cmpsb
pop
mov
in
js
and
inc
insb
push
andb
cmp
mov
dec
negl
or
pmaxsw
imul
mov
jbe
js
fwait
xor
dec
nop
mov
out
js
adc
jmp
imul
flds
sbb
repz
mov
mov
mov
lods
mov
mov
jmp
sbb
adcl
jnp
int3
test
aas
fists
clc
pop
inc
dec
pusha
xchg
loop
popf
lret
inc
jne
lock
int3
lea
popf
int
dec
push
cmp
and
imulb
mov
add
inc
mov
dec
fimull
sub
notb
push
sahf
jno
movsb
xor
dec
sub
imul
jne
sbb
aam
jg
jecxz
sti
mov
mov
xchg
mov
jae
cmp
adc
add
inc
ret
loope
fisubl
sbb
lds
pushf
jecxz
adc
cs
cmpsb
adc
ret
push
push
and
jb
arpl
xchg
loope
pop
divl
or
sbb
lods
int
rorb
dec
lds
or
and
or
dec
push
movsl
rorl
jp
rclb
cmp
cmc
clc
sub
or
or
movsb
into
cli
fwait
and
loop
scas
mov
not
je
dec
stos
cmpsl
push
pop
jle
lahf
pusha
into
mov
mov
cmc
push
pop
ja
shll
and
push
mov
xchg
mov
repnz
lock
xchg
jno
push
test
jle
adc
mov
push
gs
lea
incl
call
or
out
repnz
jecxz
ds
ds
mov
jmp
outsb
stos
mov
push
xor
out
cmp
adc
aad
mov
inc
push
sbb
fldt
push
ret
js
push
iret
inc
jl
aaa
idiv
jl
mov
icebp
jns
mov
lds
data16
mov
mov
mov
daa
inc
addr16
pop
sti
jne
sub
dec
lret
xorl
inc
cmc
xchg
test
lock
push
pop
inc
cmp
sbb
inc
inc
mov
jae
data16
in
mov
pop
mov
dec
mov
mov
sahf
cmp
out
in
jbe
xchg
ljmp
lds
jmp
push
xchg
fs
mov
mov
repnz
mov
cld
cwtl
jge
jnp
bound
mov
cli
xlat
imul
popf
arpl
mov
arpl
push
mov
jg
fistpl
cwtl
scas
push
call
imul
popf
and
loop
adc
mov
mov
dec
pop
mov
pushf
pushf
mov
scas
lods
jmp
test
aaa
inc
das
out
adc
push
xor
xchg
ret
sub
cmp
jne
and
adc
jle
ret
scas
popf
fidivs
sub
lods
xlat
sbb
jge
ret
int3
and
out
daa
notl
push
cmp
cmp
pop
addl
hlt
mov
jno
and
push
movsl
xchg
subl
adc
inc
xchg
dec
out
leave
fldenv
and
movsb
inc
xchg
std
rorb
fcomp
dec
push
ljmp
jne
pop
cmpsb
movsl
dec
adc
nop
sahf
in
data16
sbb
movsb
mov
icebp
add
loop
dec
mov
mov
sub
cltd
ja
dec
dec
inc
and
sub
xchg
dec
scas
fwait
push
mov
orb
popf
xchg
out
push
out
mov
dec
imul
xchg
scas
mov
scas
cmp
aam
xor
insb
in
and
mov
ljmp
pop
lock
int3
sbb
jae
push
mov
mov
xchg
push
movsb
ljmp
enter
push
negl
stmxcsr
in
pop
pop
loope
cmp
outsl
mov
pop
jle
lret
sub
and
and
jmp
inc
mov
js
dec
push
loop
mov
mov
gs
sub
fdivrl
fmulp
pop
sub
psrad
dec
push
push
pushf
call
cmp
xchg
bound
mov
dec
lret
mov
xlat
pop
xor
mov
scas
inc
dec
and
cld
adc
inc
loop
jecxz
in
clc
fs
sar
stc
jae
or
cmp
insl
mov
inc
cmp
push
add
push
pop
nop
inc
ds
mov
rcrb
xchg
cltd
pop
add
imul
inc
into
mov
dec
mov
push
insb
loopne
and
sarl
stc
imul
push
xchg
cmp
mov
repz
sub
xor
sbb
imul
sbb
push
push
lret
sbb
push
jge
dec
stc
add
popf
mov
jmp
inc
clc
and
xchg
scas
testl
sbbl
outsb
push
or
aad
lcall
inc
pop
or
xor
lock
pop
xor
mov
push
adc
cmpsb
fs
sbb
inc
xchg
out
pop
insb
les
xorl
sbb
jl
jmp
mov
sbb
psllw
mov
push
gs
loopne
ficomps
adc
js
push
mov
pop
mov
aaa
cmp
lahf
daa
adcb
divb
ja
jbe
cwtl
cld
add
insb
pop
loop
sbb
add
lret
aas
lret
scas
aaa
jne
inc
arpl
ds
sbb
mov
mov
or
aam
cli
shlb
imul
stc
pop
jl
push
jns
or
mov
mov
shlb
xor
sub
mov
call
jg
cli
push
or
movsb
popa
inc
xor
and
mov
cwtl
push
clc
adc
test
sbb
or
in
mov
icebp
sub
sbb
cmpsb
shlb
pop
lds
push
mov
mov
jb
mov
insb
or
mov
mov
stos
inc
std
pop
inc
insl
or
pop
out
jns
sub
or
xor
or
xor
enter
outsb
idiv
xchg
nop
mov
mov
call
mov
aaa
or
neg
out
jb
insb
push
out
fistpll
xor
or
into
adc
pushf
fs
mov
or
mull
std
shlb
fwait
mov
dec
roll
xlat
sbb
jp
inc
mov
dec
jb
add
stos
and
push
sub
xchg
sub
xor
xchg
fs
out
repnz
addl
mov
add
cmp
aaa
nop
and
jne
cmp
pop
mov
jecxz
jns
mov
lods
iret
sti
xchg
push
mov
arpl
gs
pop
lcall
pop
adc
out
arpl
rcl
sub
stc
jecxz
sbb
insb
xor
pop
aas
pop
sysexit
cltd
jmp
xchg
jnp
stc
cmp
pop
mov
movsb
inc
bound
push
inc
xor
lahf
jne
inc
mov
dec
shlb
scas
scas
adc
adc
dec
nop
sub
setg
xor
dec
inc
sahf
sub
xor
fdivs
xor
cmp
fld
cmp
jl
jnp
inc
ljmp
xor
jecxz
mov
mov
outsb
int3
push
out
outsb
ficomps
mov
ss
add
sub
aam
cmpb
loop
iret
push
xor
xchg
hlt
int3
sbb
jmp
cmpl
mov
inc
test
xor
dec
stc
sbb
pop
sbb
ss
xchg
lods
jle
push
dec
dec
push
jno,pn
fsubr
sbb
inc
push
out
aad
in
pop
sbb
jnp
inc
adc
xchg
dec
xchg
xor
outsl
dec
mov
popf
rorb
popf
xchg
push
imul
dec
sqrtps
out
cmpsl
ss
jl
cltd
mov
inc
and
fisttps
das
test
xchg
mov
rol
rcl
ror
sbb
pop
iret
fsubr
lods
push
inc
lods
out
sbb
adc
loopne
aam
jmp
mov
mov
mov
adc
mov
sbb
push
xlat
xor
push
nop
push
aaa
push
sub
outsl
outsl
jge
or
addr16
out
scas
or
dec
mov
movsl
or
mov
aad
movsb
aaa
sarl
xor
and
repz
mov
xorb
rolb
mov
popa
pushf
jns
dec
negb
xchg
jb
shrb
pop
and
divb
jae
mov
jge
or
jns
xorb
cmp
je
sbbb
mulb
aad
aad
add
xor
xor
push
cmc
cwtl
cmp
jp
repz
stc
adc
push
aad
mov
jne
lret
fs
divl
shlb
inc
sbb
dec
in
jge
fcmovnu
mov
test
rol
jne
nop
adc
mov
lods
inc
dec
addr16
xchg
in
test
sbb
cmp
cmp
sub
sbb
push
pusha
xor
mov
leave
push
shll
push
jmp
popa
rolb
mov
ss
repz
add
gs
mov
sbb
rcrb
inc
in
imul
jle
cmpsl
jecxz
adc
test
xchg
jg
dec
mov
push
je
gs
xor
int
scas
sahf
repz
rcll
inc
or
dec
sbb
iret
mov
mov
push
and
lahf
push
xchg
aas
shlb
gs
sbb
ficoml
lock
cmp
fnsave
sti
mov
outsb
scas
and
ret
cld
ljmp
jne
or
or
and
nop
iret
stc
lcall
and
push
mov
jmp
mov
jns
jecxz
mov
sbb
add
xchg
mov
ljmp
ds
push
out
mov
outsb
xchg
jbe
nop
and
out
ja
dec
xor
or
das
fsubrs
imulb
mov
es
scas
pop
xor
add
dec
mov
stc
inc
xchg
inc
mov
in
mov
sub
mov
je
add
addl
loopne
sbb
jb
les
lock
stos
out
mov
mov
pop
frstor
dec
loop
in
inc
rorl
mov
leave
push
dec
shlb
punpcklbw
cmp
popf
cmpl
mov
add
nop
dec
ret
repz
jo
repz
ljmp
adc
mov
ds
pop
or
inc
add
xchg
xchg
pop
and
jp
pop
cwtl
push
push
jb
cmc
cld
out
in
rorb
or
inc
test
dec
loope
mov
pop
jg
subl
inc
xorl
and
ret
outsl
adc
jae
in
dec
mov
repnz
cmpsb
mov
fiadds
jbe
sbb
jae
cltd
lock
jecxz
push
fiaddl
outsl
add
sbb
push
cmpsb
fwait
or
in
or
sbb
sahf
je
inc
mov
cmpsb
rorl
pusha
fmul
jp
inc
pop
mull
adc
es
dec
sub
mov
jb
sub
in
movsl
fcom
mov
sbb
movsb
sbb
fdivr
add
mov
inc
pop
push
sahf
mov
sbb
sub
pop
mov
pop
enter
pop
nop
lahf
mov
jecxz
push
jae
fwait
jno
cmp
jbe
hlt
jb
sahf
mov
test
xor
dec
xor
push
mov
jne
repnz
jle
xor
enter
mov
sbb
sub
mov
cmp
jo
adc
rcll
xor
cltd
out
in
and
pop
idiv
pop
icebp
stos
and
xor
scas
mov
pop
fdivl
mov
cltd
lods
clc
addl
xor
subb
clc
stc
aad
mov
adc
test
test
insb
mov
lods
pop
icebp
add
testb
int
rorb
cmpb
cwtl
movsb
jne
test
cmc
sbb
outsb
jns
cltd
fwait
repz
sbb
xchg
lea
xchg
sbb
mov
rorl
push
dec
mov
iret
jno
or
adc
nop
xor
loopne
mov
sub
mov
push
adc
jle
jbe
jg
out
dec
inc
std
dec
mov
iret
add
mov
orb
ljmp
leave
jo
lret
sub
xchg
pop
or
push
xchg
pop
roll
push
mov
sub
or
push
pop
mov
loopne
adc
lock
jl
out
sbb
pop
outsl
push
xchg
packssdw
and
ret
sub
sub
ja
xchg
jne
aas
ret
aas
shrw
inc
mov
stos
into
sahf
dec
inc
fwait
xchg
jbe
pop
xchg
inc
dec
pop
in
fwait
xor
in
jmp
adc
jmp
xchg
ljmp
push
mov
sub
cld
adc
scas
shrl
cmp
lret
or
cmp
hlt
aam
es
mov
xchg
xchg
pusha
les
jp
loop
stos
xchg
aam
push
xor
xchg
jne
in
mov
cli
in
jl
pop
ss
sbb
pop
xor
sub
dec
xchg
mov
inc
mov
jecxz
and
mov
push
test
pop
adc
xor
mov
inc
sub
aaa
into
mov
nop
mov
add
loope
mov
mov
lret
inc
jno
fdivl
push
fisubs
pop
stos
inc
ret
out
out
movl
sbbb
out
push
xor
xchg
mov
fisubs
and
loopw
cmpsl
or
push
inc
test
leave
or
lods
mov
and
ret
or
pop
loop
add
movsb
outsl
sti
sti
test
jg
popf
movl
adc
loopne
test
push
mov
inc
jge
insl
fcoms
rep
daa
dec
ror
mov
and
imul
mov
inc
xor
fdivrp
clc
cmp
xchg
xchg
imul
push
sbb
stc
jg
add
repnz
fstl
enter
xchg
sub
mov
movsb
test
sahf
push
fidivs
mov
dec
push
es
cltd
dec
dec
or
adc
add
pop
or
sub
dec
test
cmpsl
pushf
repz
popl
mov
mov
pop
dec
pop
mov
cmp
xchg
aam
das
outsl
shrd
sbb
dec
pop
pop
jnp
call
jl
add
scas
dec
cmpsl
jns
lea
sub
mov
xchg
push
mov
loopne
xor
mov
mov
fcmovbe
sbb
call
xor
mov
jno
jns
jne
sbb
dec
lods
dec
or
out
lret
jp
or
pop
int3
outsb
push
test
sbb
adc
mov
push
adc
stos
stc
and
popf
cmc
cmpsl
push
inc
sub
mov
dec
xchg
fmull
inc
outsb
in
fs
adc
push
cs
pop
pop
jns
mov
cmpsl
cld
out
push
pop
xchg
lea
sub
fbstp
dec
call
int3
xchg
aam
cmp
cmp
add
insb
out
std
jge
mov
cmp
fs
inc
cltd
inc
iret
cmp
mov
int3
pop
loope
xchg
emms
jecxz
int
outsb
les
icebp
or
sbb
dec
cmc
xchg
cmpsl
pop
dec
add
roll
in
dec
js
dec
push
xor
addr16
dec
fwait
out
mov
mov
sbbl
cltd
sbb
movsl
adc
gs
test
bound
fnstenv
test
imul
pusha
ljmp
sub
popf
es
jns
inc
sahf
shr
lods
jns
mov
pop
cmpsl
fstl
push
sbb
inc
xor
mov
cmpsb
in
xchg
test
xor
outsl
jae
and
or
mov
jnp
in
xor
imul
adc
adc
out
push
add
jmp
dec
dec
jle
lret
leave
cmpb
xor
bound
addb
or
ficoms
mov
fst
dec
or
test
adc
dec
xor
push
push
les
loop
jge
pop
xchg
loopne
cmp
dec
fnstcw
gs
mov
or
bound
call
cmp
cmpsl
jmp
mov
push
sub
icebp
les
cli
mov
movsl
xchg
sub
jne
sub
xlat
iret
sub
xchg
call
fisttpl
push
add
inc
sub
xlat
stos
sub
mov
fimull
sub
cmp
mov
pusha
sbb
mov
sbb
jae
or
add
pushf
xorl
lcall
pop
icebp
out
sti
push
sub
push
push
insb
and
flds
jb
add
lea
cwtl
inc
iret
add
push
in
loop
pop
add
test
ja
lds
mov
cmp
cli
cmp
xchg
sbb
outsb
mov
inc
sub
leave
mov
push
mov
dec
sub
sarb
mov
dec
test
sbb
shrb
sahf
xchg
jl
add
xor
adc
sbb
jne
adc
fistl
adc
stc
jmp
sub
mov
out
fnstenv
xlat
inc
std
xchg
lcall
aam
es
push
sub
repz
add
aaa
jle
xor
dec
push
mov
jns
leave
cmpsl
mov
out
aam
andl
movsl
rolb
cmp
jp
mov
jl
mov
pop
cmp
fildll
rclb
popf
mov
sub
add
mov
leave
mov
popa
rorb
notl
lret
shl
xchg
mov
push
movsb
add
into
mov
xchg
add
add
sub
jp
fisttpl
shl
fidivl
adcb
cmc
rcrb
stos
cmp
ja
cmp
adc
loopne
mov
test
shll
jle
cld
xor
and
cmp
push
aas
insb
cld
push
mov
movsb
sbb
loop
js
sub
mov
xlat
pop
or
popa
and
stos
adc
popa
jmp
rcll
inc
sbb
and
push
sbb
mov
daa
push
mov
lds
in
inc
ljmp
and
xor
test
lock
dec
repz
int
mov
in
pop
sub
fwait
lea
fcompl
mov
dec
mov
push
sub
nop
mov
xor
lcall
mov
jo
inc
imul
pop
out
fldl
cmp
or
push
adc
fildl
xchg
lahf
mov
leave
dec
sti
add
cmovb
test
int3
out
sub
mov
movsl
and
je
sub
push
bound
scas
add
fsubr
mov
dec
add
push
mov
jnp
and
mov
icebp
cmc
lahf
xchg
clc
shrl
mov
mov
push
aam
add
adc
adc
mul
push
mov
jb
mov
and
cmp
stc
cmp
adc
sbb
mov
clc
add
mov
adc
pop
add
adcl
adc
cmc
jb
aam
aaa
test
cmp
sarl
inc
pop
jle
out
fld
test
in
subb
icebp
insb
mov
pushf
add
or
jmp
mov
mov
push
test
mov
dec
xchg
sbb
push
mov
cltd
sub
icebp
jle
xchg
lcall
cmp
mov
dec
lret
jns
rcrb
popa
mov
mov
add
push
jge
lahf
daa
andl
lret
jl
outsl
inc
arpl
jge
xor
xor
inc
or
repnz
imul
mov
xor
pop
cmp
dec
stos
inc
fsubl
pop
lods
in
cli
pop
in
mov
and
scas
sub
and
pop
ret
dec
mov
dec
inc
mov
jge
enter
ffree
test
push
sub
xor
mov
insl
dec
jp
enter
push
jecxz
fistpll
and
aaa
push
mov
vpmacssdd
fidivrl
dec
xor
ds
sub
fcomip
fwait
test
pop
mov
adc
ja
jmp
pusha
and
mov
push
mov
es
add
add
movsb
sbb
push
sub
pop
xor
popa
lahf
mov
or
test
mov
sub
xchg
push
jae
adc
gs
mov
pop
clc
xor
and
or
xchg
xchg
int3
fcmovnb
add
repz
jns
jno
ret
sbbl
bound
cs
inc
fsubr
js
sbb
mov
jbe
jl
inc
push
mov
pusha
push
data16
jo,pn
xor
inc
mov
xor
jge
push
jo
imul
cmpsb
scas
pop
push
mov
add
pop
jecxz
jnp
or
rcl
add
adc
ds
out
jns
push
aad
fsubr
push
out
test
mov
push
mov
int
loop
call
mov
and
push
and
inc
inc
out
adc
das
push
jns
inc
xchg
cmc
xor
and
and
out
push
test
out
jb
mov
jp
rcl
and
addr16
data16
mov
xchg
fbld
test
inc
repz
push
outsw
mov
cmp
aas
cmp
lock
cmp
adc
xchg
test
popf
iret
or
mov
adc
lds
incl
sub
inc
add
test
mov
repz
or
addr16
daa
mov
pusha
aas
lds
push
out
adc
push
mov
xchg
add
and
in
bound
jmp
mov
rep
fs
push
scas
ret
idiv
mov
jp
pushl
xchg
push
xchg
jo
push
pop
ljmp
psllw
cs
jae
mov
mov
in
arpl
pop
jge
les
mov
push
call
mov
pop
jge
outsb
js
and
jne
cmp
repnz
sbb
cmpsl
lret
mov
mov
push
xchg
popf
faddl
dec
mov
pop
lock
inc
adcl
es
adc
aam
test
xchg
aam
sahf
mov
les
inc
jne
push
push
xor
test
mov
push
mov
and
or
add
pop
xchg
xor
pusha
add
xor
or
lahf
cltd
xor
xor
rcll
ret
rcrb
and
fimull
sbb
je
outsl
mov
sbb
cmpsl
ljmp
cmp
mov
push
or
stos
out
ret
dec
insb
dec
pop
or
xchg
inc
dec
lock
adc
sahf
cmp
jp
ret
out
lret
out
sti
lcall
pop
xor
popf
stos
push
aas
dec
xor
pop
testb
cmc
fmuls
inc
sub
ljmp
es
sbb
mov
ret
aas
ret
pusha
pop
push
mov
jno
adc
mov
lahf
mov
fldl
addr16
aas
mov
mov
and
cld
int
in
mov
mov
jmp
lret
sbb
lea
scas
push
xchg
cmpsb
fmull
xor
sar
jg
ja
dec
push
jns
popf
shr
sub
pop
cmc
and
out
loop,pt
xchg
mov
ds
sub
fldl
fs
inc
adc
sub
dec
flds
xchg
cmp
xchg
loopne
cmc
adc
test
mov
dec
xchg
daa
inc
sub
adc
lock
scas
movsb
cli
jl
mov
dec
cmp
mov
mov
adc
jp
xor
fistpll
into
sbb
shl
cmp
push
icebp
fsubl
xor
lods
movsl
sbb
shrb
mov
adc
and
cld
mov
jmp
cltd
push
sbb
xchg
jnp
leave
cmp
mov
popa
or
jle
pop
pop
lahf
push
jne
sti
das
mov
mov
out
or
stos
sub
xor
out
movsb
lock
fadd
mov
daa
icebp
sub
and
sub
rorl
insb
movsb
enter
adc
int3
shrb
mov
or
ret
sbb
pop
or
inc
or
lcall
inc
leave
adc
pushf
cs
fistps
mov
pop
das
push
test
jge
bound
ror
outsl
xchg
lahf
cmp
bound
int
rorb
cmp
push
std
data16
cltd
jmp
loopne
sbb
or
ret
aaa
stos
mov
adc
push
mov
cmpsb
mov
add
out
std
repz
xchg
les
roll
into
fldt
aad
xor
pop
das
lds
sti
in
push
cltd
adc
dec
repz
jns
bound
orl
mov
or
mov
mov
mov
dec
sub
jae
popa
xor
insb
xor
lds
mov
sub
and
imul
pop
xor
xor
sub
jmp
sahf
aas
clc
in
adc
jecxz
out
push
cmp
std
fldlg2
xor
mov
pop
jp
mov
jae
xchg
jp
movsb
and
shlb
loope
subb
xchg
inc
xchg
pop
push
push
stos
shll
lea
sbbl
xchg
cmp
inc
jno
push
cmc
push
ds
push
imul
inc
cmovbe
repnz
sbb
push
repz
push
jnp
mov
sub
xor
lock
add
rcr
clc
inc
in
fidivl
leave
jno
mov
mov
sahf
je
sbbl
mov
fmuls
insb
pusha
jae
jne
push
dec
cs
push
icebp
or
ret
das
je
in
insb
sub
movsb
xabort
js
push
or
jle
and
jns
pop
sarb
repz
mov
fdivrp
enter
lcall
movsb
jne
or
gs
nop
pop
subb
sub
je
in
std
add
xor
lret
andl
mov
cmpsl
mov
dec
pop
pop
xor
and
aam
jb
fiadds
out
js
ret
ljmp
or
mov
addr16
inc
stos
add
sbb
jns
loopne
lret
repz
mov
cs
mov
outsl
int3
fdivl
loop
mov
clc
jb
icebp
sub
jo
sbb
xchg
pop
mov
or
push
cld
nop
xchg
pop
cmp
mov
jecxz
scas
pop
scas
shlb
roll
je
push
das
dec
sub
sti
jg
lock
mov
lret
or
leave
and
mov
jae
dec
pushf
pop
xor
sbb
push
and
ds
pop
scas
out
repnz
int3
imul
jns
and
pop
jecxz
push
das
and
lds
xor
lods
push
or
pop
sbbl
or
mov
dec
out
imul
mov
popa
pop
outsb
lahf
or
sbb
jge,pn
mov
rcrl
xorb
hlt
xchg
cmp
mov
or
or
enter
push
add
lds
xor
push
mov
adc
mov
pop
loopne
arpl
pop
mov
mov
jno
push
mov
or
jge
orl
jno
arpl
mov
push
stc
fmull
je
sbb
insl
loopne
mov
sbb
mov
xchg
dec
out
mov
jecxz
imul
mov
mov
in
cmp
filds
mov
push
fdivl
incb
jno
xor
jno
cmp
mov
push
pop
dec
outsl
push
cmpsl
jecxz
lea
mov
cmp
fstpl
orl
fcoms
jnp
dec
adc
mov
cmp
mov
jnp
mov
test
out
andb
push
push
sub
xchg
jmp
aam
push
dec
fstps
mov
imul
dec
lcall
sub
idivb
dec
push
test
test
sub
fcoms
scas
aad
inc
insb
jl
adc
adc
sub
loopne
loop
inc
in
push
adc
lcall
adcb
push
xchg
push
pop
and
push
inc
xchg
or
add
cmp
sahf
cmc
xlat
orb
mov
xor
jl
adc
push
out
jbe
push
or
call
loop
scas
xor
fstpl
stos
inc
fdivr
xor
out
shl
jmp
cmc
dec
jl
popf
sbb
shl
xchg
pushf
add
adc
movsl
pop
push
xchg
or
cmpsl
pop
or
jnp
mov
dec
adc
std
inc
sub
insl
push
ss
icebp
ficoms
xor
cmp
jns
adc
mov
sti
xor
les
decl
xlat
mov
pushf
pop
mov
add
push
inc
mov
cmc
xor
xor
mov
rorl
mov
stos
lods
loope
xor
or
pop
std
test
sbb
in
repnz
push
int
adc
mov
or
mov
fsubrl
mov
mov
jae
inc
jmp
loope
sbb
outsb
stos
xchg
sarb
cmc
cmpb
es
out
data16
sbb
setp
mov
jp
cwtl
push
adc
fucomi
jp
testl
inc
stos
stos
aaa
jmp
lock
and
sbbl
shlb
mov
mov
ds
dec
mov
and
xchg
dec
mov
jno
xchg
adc
dec
jns
mov
sbbb
jle
loopne
and
inc
pop
push
lret
dec
cmp
das
fcomps
ret
in
lods
addr16
shlb
dec
movsl
mov
stos
jno
dec
das
pop
xor
loope
xchg
bound
popa
add
psllq
cmp
call
cld
and
pop
cmp
das
dec
shlb
popa
jl
arpl
push
repz
jecxz
xchg
out
loope
cmpsl
mov
adc
mov
sub
jae
jns
movsl
repnz
pushl
and
jbe
test
les
dec
dec
ret
mov
lcall
jle
ds
push
or
or
pop
sbb
jg
dec
mov
pop
in
xor
in
mov
loopne
movsb
cmpb
and
nop
and
popa
nop
adc
push
cmp
lret
cli
and
xchg
push
jl
xchg
adc
test
js
movb
xor
jno
cwtl
insl
out
movb
dec
or
shrb
loope
js
scas
jl
daa
or
cld
data16
adc
dec
aas
enter
shl
adc
out
mov
jecxz
pop
sbbl
jle
inc
fstps
push
cmp
out
pop
mov
mov
cmp
jecxz
rcrl
mov
adc
popa
adc
adc
or
repz
add
aam
mov
popf
add
out
test
pop
cld
bound
out
mov
jecxz
in
xchg
xor
push
xor
fimuls
repz
pop
mov
cmp
mov
or
mov
sbb
fnstcw
cmpsl
arpl
aas
pop
stc
pop
mov
imul
adc
pop
stc
jnp
and
cmp
ret
cs
mov
push
pusha
xor
fisttps
daa
lods
or
fs
jns
pop
mov
hlt
mov
inc
clc
add
dec
adcb
adc
mulb
or
xor
jmp
or
adc
sub
push
pop
iret
adc
xchg
adc
push
or
clc
adcb
loope
mov
clc
push
xchg
dec
mov
jae
shll
cmp
push
cli
sub
inc
xor
repnz
pop
fwait
xchg
sub
inc
mov
fnstcw
into
pop
fcomps
fldt
adc
int3
das
cli
fistl
out
outsb
in
cmpsb
fcompl
js
shll
or
lock
jge
mov
inc
fadds
mov
mov
movsl
cltd
lcall
cmp
das
pop
sub
add
int
test
popa
push
push
mulb
mov
addr16
and
sub
icebp
stos
pusha
jns
inc
aam
movl
or
sahf
sub
out
xchg
movsb
sti
xchg
fdivl
insb
adc
mov
pop
ret
in
mov
enter
nop
test
inc
out
and
mov
aas
mov
cmpsl
jp
test
push
movsb
xchg
out
dec
ret
pop
mov
lds
adc
add
add
bound
lahf
xchg
mov
xor
adc
xchg
jnp
cmp
jo
rclb
out
adc
mov
cmp
adc
dec
mov
cmp
js
arpl
inc
enter
insl
lods
arpl
mov
jo
mov
mov
dec
sub
stc
nop
cmpsl
loopne
rcrb
sarl
shl
filds
sub
sahf
aad
mov
cli
fildll
or
insb
mov
push
xlat
inc
inc
lods
and
push
fwait
inc
loopne
cmp
or
mov
fstp
nop
sub
data16
mov
sub
xor
aaa
jb
pop
mov
sahf
mov
jge
pop
and
jle
sbb
out
insl
sbb
pop
rclb
jl
sub
cmc
in
inc
xchg
mov
or
xchg
lds
adc
jae
mov
testb
cmc
push
daa
pop
pop
aam
daa
popf
add
mov
nop
sub
out
add
pop
jo
dec
hlt
push
lds
cmpsl
mov
sbb
inc
out
test
jle
aaa
imul
push
int3
insb
stos
cmp
pop
mov
mov
fistpl
sub
out
stos
xor
rcrb
and
xchg
repnz
addr16
sub
fiadds
iret
scas
loop
push
adc
daa
push
ss
jne
sahf
add
mov
loope
out
mov
lret
sbb
lahf
cltd
inc
shll
ret
das
cmp
stos
or
pop
or
pop
sbb
cwtl
jecxz
out
sbb
lock
out
and
rcl
adc
pop
cmp
cltd
dec
repz
xchg
mov
xor
repz
cmp
push
jl
mov
test
and
xorb
add
out
mov
lahf
add
mov
push
enter
dec
xchg
mov
or
scas
mov
adc
call
cmpsl
inc
dec
dec
int3
or
sti
or
xchg
dec
push
aas
push
lcall
shll
or
lock
mov
jae
bound
pop
sbb
addr16
or
scas
sub
cmp
and
imul
js
xor
add
data16
mov
pop
dec
sub
sbb
mov
addl
xor
inc
mov
in
cmp
mov
jp
int3
pop
xchg
out
mov
pop
scas
adc
or
scas
adc
gs
loope
mov
sub
mov
xor
repnz
cs
scas
icebp
cmp
fcmovu
test
clc
push
loop
int
push
stos
popa
add
and
or
aaa
bound
push
cmp
jl
jns
xor
mov
push
cmp
gs
mov
mov
push
mov
push
mov
popl
jp
fidivs
pop
lds
faddl
sbb
mov
lahf
ret
stc
enter
or
or
jle
dec
aam
push
fsubl
pop
mov
pop
sahf
popa
outsb
clc
inc
popa
xchg
imul
hlt
cwtl
inc
mov
jo
jmp
enter
scas
cltd
out
mov
jo
sbb
in
addr16
mov
sti
jecxz
je
xor
test
popa
push
lods
inc
sarl
icebp
outsb
mov
mov
push
mov
xlat
push
cmc
stos
clc
or
xor
mov
cwtl
sbb
xlat
adc
push
ljmp
lods
lahf
mov
cpuid
flds
icebp
push
push
imul
mov
mov
fmull
int
popa
out
jl
rol
movl
fildll
ss
cwtl
jb
repz
imul
or
scas
jmp
cmc
js
leave
push
mov
push
mov
cli
fsts
or
pop
mov
mov
je
pop
cmc
xor
in
and
out
fsubrs
in
ss
sub
nop
sub
push
pop
cs
jns
subb
add
xlat
lds
out
aad
sub
jno
js
mov
pop
sbb
mov
jo
sub
jge
mov
scas
aaa
ljmp
lret
aaa
imul
loop
int3
jecxz,pn
mov
mov
mov
or
sub
cmpsb
sbb
leave
mov
cmp
sbb
ffree
mov
andb
pop
pop
jecxz
cld
mov
aas
cld
sub
cli
and
jne
sti
mov
or
jmp
push
shll
insb
aad
cmp
mov
cltd
bound
mov
adc
ss
sbb
imul
mov
pop
mov
dec
push
xchg
loopne
xchg
inc
inc
aas
push
jmp
or
add
jno
mov
dec
add
mov
adc
xchg
movsb
cmpsl
mov
loopne
in
push
mov
nop
adc
addb
push
xchg
mov
imul
int3
out
movsl
sbbl
test
inc
dec
into
cltd
gs
int
mov
dec
stos
xor
in
dec
jecxz
ljmp
and
loope
dec
decl
mov
mov
iret
push
cmp
jae
js
test
clc
hlt
sbb
xor
test
out
lods
pop
xor
je
icebp
fistpll
cmc
test
inc
pop
mov
bound
lcall
sub
adc
cmpsb
push
mov
pop
pop
add
int
orb
push
js
push
icebp
test
aam
xor
jno
aad
jmp
imul
push
jae
xchg
mov
cltd
jns
pop
xchg
mov
dec
fbstp
in
mov
or
sbb
data16
movsb
cmpsl
shrl
loop
dec
imul
outsl
lcall
mov
jecxz
shll
add
repnz
pop
sbb
insb
cld
lods
jo
cmp
sub
sbbl
rcrl
scas
into
mov
xor
xchg
pop
jg
cs
sub
popf
sub
ljmp
cmp
int3
ja
bound
cmpsl
int
pop
loope
daa
cld
popa
mov
lahf
cmp
sub
sbb
imul
jmp
cmp
imul
jno
add
insl
lods
in
sahf
dec
push
enter
jg
dec
dec
ret
xchg
pmulhuw
mov
add
adc
shll
jne
js
sbb
insb
pop
mov
es
lds
mov
mov
dec
sti
xor
icebp
lret
imul
outsb
lret
mov
ret
mov
xchg
in
push
adc
adc
jle
and
jo
and
dec
inc
jne
push
sub
dec
insl
cmp
test
pushf
inc
shrl
inc
imul
jmpw
xor
jge
in
mov
dec
scas
lret
in
cmp
rcrb
repz
xchg
jnp
pusha
in
sbbb
dec
cmpsb
jge
out
mov
imul
lds
push
sbb
xchg
push
push
imul
pop
jge
xor
and
js
stc
sbb
mov
adc
pop
dec
and
mov
scas
cmp
sub
imul
inc
pop
push
insb
mov
insl
mov
jae
jmp
repz
dec
push
cmpsb
ja
rorl
movsl
xor
mov
loope
mov
xchg
sbb
and
add
shl
das
movsl
dec
int3
data16
andl
fbld
push
push
mov
shr
mov
stc
leave
lret
pop
ljmp
loop
data16
dec
xchg
sbb
rol
and
dec
lahf
dec
jbe
btc
cmp
jl
ret
or
dec
out
push
jg
in
sbb
cwtl
data16
cwtl
aam
jp
aaa
rorl
inc
cld
mov
movhps
hlt
dec
sbb
mov
arpl
adc
out
fwait
jg
mov
ja
adc
cmp
enter
dec
repz
jl
popf
sbb
shl
xchg
pushf
add
adc
push
ds
sbb
mov
cwtl
clc
pop
fcomi
add
xchg
jo
out
ljmp
mov
mov
lock
dec
cmc
pop
mov
and
sbb
xorb
add
cwtl
and
inc
insl
xchg
mov
clc
hlt
movsw
lods
push
push
or
ja
jb
mov
jg
sub
leave
int
lret
jl
loope
ds
jb
pop
scas
add
bound
add
mov
push
movsl
or
pop
mov
mov
pop
push
es
imulb
jno
push
mov
addr16
movsl
jnp
mov
sbb
outsl
fcmovnu
lahf
ror
inc
cmp
add
xor
mov
lods
popf
adc
xchg
sub
or
add
stos
add
jecxz
sbb
xchg
leave
mov
xlat
adc
xchg
mov
pop
inc
enter
js
mov
sub
enter
repnz
push
out
lea
xlat
fsubr
shrl
sub
or
mov
inc
jne
push
push
add
test
fsubrl
pop
jbe
mov
xchg
add
xchg
adcb
pop
cmp
pop
rol
xchg
loopne
xchg
out
fstl
adc
push
pop
sarl
lea
sbb
or
arpl
adcl
sbb
xchg
out
xor
inc
call
rorl
bound
cld
lcall
cmpsl
push
inc
imul
sbb
lds
add
pop
adc
int
lods
callw
inc
and
sub
inc
sbb
lods
cmpsl
jl
lods
lahf
inc
arpl
mov
mov
int3
outsb
jns
popf
stc
shlb
jmp
push
insb
mov
xor
inc
adc
dec
rcrl
or
stc
rorb
xchg
xchg
scas
mov
adc
ret
mov
dec
dec
cs
loopne
lods
xchg
push
mov
inc
rolb
push
mov
add
shr
sub
add
cli
xchg
push
cltd
fsubr
test
movsl
and
xchg
aad
mov
loop
mov
out
cmp
sbb
repnz
addl
pop
push
mov
loop
mov
inc
insl
xor
inc
push
xor
jmp
shrl
and
pop
and
sub
xchg
push
scas
pop
popf
bound
scas
fisttps
pushfw
jle
dec
xchg
adc
daa
in
xchg
mov
xor
arpl
xchg
mov
push
cltd
scas
js
imul
bound
jno
or
sub
stc
add
stos
dec
cmp
sub
mov
mov
repnz
fsts
lods
call
jae
jne
das
mov
leave
iret
pop
push
add
clc
adc
out
pop
mov
push
inc
mov
aas
lock
in
mov
adc
cmp
rorl
lret
xchg
adc
jns
test
add
aas
pusha
pop
and
ja
push
mov
mov
leave
rcrl
lret
hlt
mov
add
cs
mov
jns
in
mov
aaa
jecxz
lods
cmc
mov
insl
fildll
addr16
in
dec
jne
push
or
popa
xor
lret
sub
incl
or
pop
jb
or
imul
adc
mov
neg
loope
mov
mov
imul
fsubrs
shll
lret
sbb
adc
add
adcl
in
pop
jl
or
imul
dec
sbb
mov
pop
pusha
cli
sahf
test
nop
cmp
clc
or
add
fisubl
int3
pop
insb
push
xchg
fstpt
iret
jbe
std
rorb
and
and
dec
adc
cmp
mov
adc
pop
push
mov
inc
mov
lods
repz
sahf
outsl
ror
enter
lds
in
mov
mov
jbe
jg
sbb
pusha
jmp
or
pop
xchg
cmp
movsb
int3
pop
dec
dec
ja
cltd
in
jae
push
in
in
cmp
sbb
pop
imul
pop
jae
sbb
fisttpl
pop
pop
cmp
loope
popa
orl
out
mov
cwtl
xchg
xor
sub
jnp
loop
andl
mov
outsb
mov
and
aaa
out
call
mov
mov
xor
inc
test
mov
in
xor
cmpb
addr16
and
jno
or
lods
arpl
out
lods
cltd
mov
stc
imul
lret
or
jbe
divl
push
aaa
sub
mov
popa
into
dec
idivb
cmc
cmpl
das
lcall
clc
jno
adc
orl
pusha
ret
dec
jo
jns
fistpl
xchg
arpl
aad
cmc
mov
jno
mov
popf
jnp
popa
sub
fisubl
pop
in
mov
faddl
mulb
and
add
mov
jae
dec
pop
pop
or
pop
cld
adc
fiaddl
loopne
ljmp
stos
dec
icebp
cmpsl
imul
daa
arpl
repz
es
in
and
mov
adc
xchg
xor
in
jmp
sub
or
out
test
jne
or
rorb
stos
and
xchg
mov
adcb
mov
dec
inc
or
add
and
mov
sub
pop
pusha
out
cmpsb
jp
call
xchg
sbb
lret
insl
idivb
xlat
mov
lock
sub
push
mov
cmpsl
test
dec
jecxz
sub
stos
add
lock
dec
push
pop
out
movsl
nop
aam
mov
cwtl
or
pop
lock
or
cltd
lds
mov
ljmp
sub
cmpsb
pushf
pop
and
sahf
mov
sbb
sub
outsb
rorl
loop
inc
jb
decl
cmp
scas
clc
in
sub
test
mov
int3
sahf
xchg
pushf
mov
out
mov
and
sti
or
mov
fsubrp
gs
fnstcw
xchg
mov
dec
nop
inc
ss
movsb
sbb
adc
fisttpll
add
sub
mov
jae
pushf
clc
cmp
test
jnp
test
out
dec
xchg
shr
leave
shr
lcall
mov
mov
test
addr16
aas
dec
out
imul
lods
mov
sbb
cmp
sbb
xlat
test
and
cmp
insl
sarb
xor
fld
cmpsl
dec
dec
cmp
fs
or
out
dec
mov
jne
leave
or
push
push
xchg
dec
gs
outsb
jle
xchg
jmp
adc
hlt
or
inc
mov
inc
inc
adc
push
jae
aas
jbe
arpl
sbb
lsl
dec
cmp
inc
inc
sbb
clc
iret
lock
dec
mov
pop
sub
sbb
out
mov
mov
in
repnz
xchg
fildll
mov
mov
mov
adc
ds
cli
lock
adc
cmpsb
and
gs
lods
lods
and
pop
insb
mov
jns
jne
pop
jge
or
and
inc
mov
arpl
in
mov
leave
adc
incb
stos
add
lcall
dec
aaa
pushf
add
mov
xor
movsl
xor
inc
jb
mov
in
dec
ss
inc
inc
cmp
and
sub
into
fimuls
pop
pop
push
aam
adc
popa
add
mov
cmpsb
jb
repnz
test
loopne
mov
lock
jp
sub
push
xor
fidivl
push
mov
dec
cwtl
cld
cld
jmp
xchg
xor
add
xor
mov
inc
inc
shlb
jb
sub
imul
int3
cmp
pop
enter
fs
imul
js
out
aas
or
loop
fildl
mov
sbb
inc
fcomps
or
rcrb
inc
lock
jp
jo
out
decb
lock
or
imul
cwtl
in
xor
out
lods
jbe
fidivrl
pop
fcmovnu
fwait
lret
add
cmp
adc
mov
sti
sti
sti
js
out
sti
jbe
mov
insl
or
mov
inc
cmp
adc
stos
xor
loope
andl
mov
jle
jmp
aaa
das
mov
das
cmp
mov
mov
inc
out
icebp
mov
push
and
mov
mov
faddl
out
inc
fwait
add
add
push
loopne
ret
pop
mov
enter
xchg
xchg
popa
rol
jne
inc
jns
jmp
adc
ds
lock
imul
ret
jo
xchg
xchg
sarl
mov
shr
push
cwtl
inc
outsl
fldenv
cltd
push
faddp
jl
adc
shl
in
jne
rcrb
xor
and
xchg
ja
push
jp
rcrl
repnz
dec
cld
pop
push
add
dec
push
add
std
iret
xchg
xor
pop
negb
mov
repz
jb
aaa
and
sbb
jle
jl
xchg
lahf
mov
inc
scas
add
mov
movsl
mov
or
mov
adc
jae
fmul
loope
out
mov
ss
inc
mov
fdivrl
mov
testb
iret
and
push
mov
stos
fbstp
mov
repnz
or
mov
push
pop
mov
out
adc
or
and
bswap
xchg
jmp
inc
mov
iret
fnstsw
aad
sti
xchg
stos
enter
pop
or
mov
fistpll
push
insl
mov
arpl
push
inc
sbb
fwait
push
mov
ds
mov
or
cmpsb
xchg
pop
xorb
push
push
mov
ret
push
out
add
sarb
or
test
out
out
adc
sbb
imul
fstl
int3
jae
mov
in
adc
dec
jae
pushf
cmp
nop
jge
negb
aaa
mov
xlat
jne
addr16
jo
sbb
lcall
imul
sbbb
mov
cmp
cli
repz
enter
outsb
arpl
jo
jns
cmpsb
stos
dec
outsb
pop
sub
jno
std
jecxz
pop
mov
mov
push
test
mov
cmp
cmp
arpl
mov
shll
fwait
out
scas
xchg
lods
pop
mov
xor
and
pop
adc
stos
cmpsl
dec
in
xchg
shll
adc
jne
adc
jnp
cmpsb
popa
cld
inc
cmp
sbb
or
sub
mov
sahf
inc
xchg
leave
xor
xchg
in
pop
jb
loope
xchg
adc
cmp
sbb
xchg
es
sub
cld
dec
jecxz
jecxz
dec
cmp
xor
dec
in
aad
shll
dec
pop
in
xlat
jg
inc
in
lret
mov
movsl
popf
iret
fwait
cmp
xchg
sti
xchg
aas
lcall
mov
cmp
inc
jno
jae
sub
mov
push
jnp
xor
ja
add
rcl
jge
push
adc
ds
enter
xchg
mov
fnstcw
test
adc
rclb
aam
icebp
cltd
ja
popa
shlb
mov
scas
addl
and
jo
sbb
in
add
dec
adc
cmp
xor
xlat
adc
push
sbb
ljmp
jl
lcall
dec
sbb
into
fs
xchg
add
aaa
lods
es
pusha
jno
movsl
mov
hlt
and
aas
adc
call
adc
js
test
ljmp
sbb
cmp
roll
add
mov
jle
or
xlat
not
push
lahf
fsts
fwait
xor
xchg
je
or
dec
xor
cltd
jae
pop
and
out
sbb
add
leave
int
inc
addr16
mov
in
scas
cmp
imul
cmp
daa
sbb
bound
cmpsb
pop
xor
lock
hlt
loopne
dec
aas
xchg
lods
pushf
subl
mov
xor
sbb
push
outsl
shlb
fidivs
mov
push
adc
sub
in
loopne
test
popa
or
shll
ret
pop
mov
mov
mov
xchg
dec
lock
xor
test
fcompl
lret
insl
xchg
negb
ss
js
xchg
mov
sar
mov
subb
out
pop
add
ja
aad
push
or
sub
outsl
out
scas
inc
gs
pop
xchg
or
sub
push
pop
fisttpl
pop
iret
add
xchg
ljmp
add
ficoms
sbb
or
cmp
inc
stos
jle
mov
aad
adc
lds
sti
lea
notb
cmp
repz
dec
xchg
push
mov
int
cltd
or
mov
jno
sbb
mov
fistpl
cwtl
inc
daa
movsbl
jmp
pop
jae
inc
mov
add
fmull
adc
mov
jl
insb
fcompl
cld
lea
push
mov
in
cltd
sbb
mov
pusha
mov
dec
std
xchg
rcl
fisubrs
mov
jp
in
cmp
inc
dec
and
jl
insl
cmp
mov
xor
xchg
xchg
and
dec
scas
out
es
jne
ljmp
jo
dec
dec
pop
or
add
sub
cmp
out
rcl
mov
cltd
jecxz
and
xchg
and
pop
aas
lods
in
xchg
aaa
mov
sbb
adc
int
sub
cmp
fnsave
test
push
int
lcall
arpl
fldt
jecxz
pushf
mov
adc
icebp
test
aaa
inc
aad
repnz
ret
inc
add
shl
lcall
lahf
and
int3
sbb
xor
cmp
xchg
cltd
aam
xchg
adc
sbb
dec
mov
daa
xchg
les
pop
mov
inc
inc
lret
andl
fs
inc
sub
inc
insl
sbb
jle
leave
mov
out
lods
cmpsl
cmp
inc
cwtl
inc
mov
and
imulb
insb
enter
mov
or
and
xchg
es
hlt
pop
jbe
pop
fildl
fisttpll
cld
out
push
movsb
jg
push
push
adc
lock
mov
adcb
fstpt
inc
push
mov
cmc
add
adc
ficoms
mov
add
in
mov
or
sarl
cmp
cltd
mov
outsb
pop
jbe
xor
xchg
cwtl
inc
std
daa
and
mov
pop
fldt
sbb
je
sub
in
mov
xchg
inc
in
inc
sbb
xchg
jle
or
fsubrs
mov
jns
sti
mov
ficomps
imul
decl
imul
ds
imul
sub
divb
cwtl
outsb
lahf
xlat
mov
int3
cmc
imul
leave
push
das
jnp
hlt
shlb
mov
test
push
mov
jae
out
lods
jg
fwait
nop
xchg
add
push
inc
mov
pop
or
in
add
adc
mov
xchg
cmp
sbb
lahf
cmp
fs
bound
outsb
pop
xor
ret
lea
icebp
sub
sub
push
mov
scas
inc
mov
sub
cmp
aad
or
jg
mov
lret
lea
sbb
inc
add
daa
jl
xchg
pop
adc
fxch
popf
pop
push
mov
jns
lds
mov
sub
and
int3
mov
lret
cs
inc
out
or
sub
jo
sub
inc
lcall
cmp
xchg
push
inc
lret
gs
test
ds
ja
loopne
lods
mov
shlb
add
stos
popa
aaa
sti
test
je
orb
pop
xor
add
xor
in
test
test
xchg
mov
popf
xor
arpl
mov
jl
push
pop
loop
lods
ss
mov
push
pop
das
pusha
xor
das
repnz
frstor
inc
mov
push
add
mov
mov
push
xchg
lret
push
and
es
push
or
ror
mov
inc
xor
mov
movl
push
imul
adc
and
fucom
stos
cmp
cs
hlt
adc
push
addl
adc
gs
adc
iret
xchg
cld
jb
rclb
bound
das
jecxz
dec
cwtl
inc
xor
mov
mov
das
or
mov
icebp
push
loop
and
mov
push
call
push
push
in
mov
mov
ret
lret
lds
pop
xchg
push
clc
adc
sbb
adc
inc
mov
lds
mov
and
outsl
jp
cmp
jg
dec
into
shrb
sub
xchg
flds
jmp
outsb
add
jle
mov
arpl
clc
sub
in
fisubl
push
pusha
test
out
push
hlt
pop
inc
insl
pop
popa
sbb
add
or
mov
out
out
jns
ret
push
or
stos
shrl
repnz
cmc
rcll
scas
cmp
adc
jne
jp
adc
into
ljmp
movsl
shll
dec
inc
inc
pop
sahf
sub
dec
mov
nop
jp
push
cli
clc
push
pop
ja
xacquire
cs
pop
xchg
mov
movsl
pop
and
int
cli
lcall
mov
and
xor
mov
loopne
stos
cmp
enter
cmp
fildl
imul
push
in
add
test
cwtl
push
sbb
inc
mov
fmull
lods
adc
stos
xchg
insb
sbb
loope
lock
bound
sub
sti
adc
lea
mov
sub
pop
push
int
mov
add
aaa
inc
and
iret
cld
or
dec
mov
mov
pop
popa
repz
adc
xchg
mov
sarl
jmp
lahf
les
pop
daa
sub
sbb
les
inc
negl
es
push
cmp
mov
ficoms
sub
jg
pop
jo
cmpsb
jb
push
pushf
int3
push
movsl
cmpsl
xor
mov
popa
cmp
rcrb
icebp
mov
mov
push
pop
sbbl
xchg
fs
fidivs
mov
in
enter
sub
out
ljmp
lock
insl
dec
test
jecxz,pt
jnp
push
push
in
pop
xchg
xchg
lcall
sub
mov
add
lods
les
mov
mov
push
or
xchg
adc
idivl
rorb
push
repz
cmp
ret
lods
fcompl
sahf
push
ret
bound
push
push
scas
fmulp
scas
xchg
shll
push
addl
add
mov
or
adc
sbb
je
nop
xor
je
push
hlt
mov
jle
xor
inc
addr16
mov
mov
sub
lret
ret
into
push
fmull
in
dec
push
push
cwtl
pop
jnp
roll
dec
adc
loopne
fisubrl
or
in
idiv
dec
xlat
lock
mov
inc
adc
ja
xlat
repnz
mov
in
cli
stos
sub
jnp
push
sbb
dec
jns
out
loop
rclb
cmp
inc
xchg
std
and
rorl
out
or
mov
into
std
fstpl
lret
mov
xor
push
xor
cmpsl
lock
mov
cld
mov
cld
sbb
enter
mov
rorl
lahf
push
ss
mov
mov
mov
xchg
scas
pop
push
xchg
jne
lds
sbb
popf
sahf
xchg
sbb
xchg
cmp
mov
jae
sub
out
xlat
dec
jno
xchg
dec
mov
stos
scas
push
xchg
cmpsl
pop
xchg
je
jb
push
out
xchg
mov
cmp
out
mov
mov
test
decl
push
or
mov
pop
icebp
rcll
mov
arpl
loope
or
inc
push
push
jne
inc
cmpsb
imul
xchg
test
test
cmp
bound
jno
out
shll
pop
fs
data16
push
idivb
push
xchg
sbb
and
and
xchg
push
inc
addr16
rorl
add
pop
imul
inc
in
lods
dec
sarl
sbb
add
cs
cld
call
or
xchg
push
loop
lea
aam
repz
push
cmp
add
mov
stos
xchg
scas
mov
popf
and
cmpb
sbb
fcmovne
push
xchg
add
packsswb
or
pop
sbb
inc
xchg
inc
arpl
inc
hlt
imul
mov
or
mov
push
sub
hlt
ss
rdtsc
mov
sbb
cld
sar
aaa
jge
ljmp
add
push
das
sar
jns
and
stc
inc
imul
shrl
adc
pop
mov
pop
jle
mov
lahf
lds
pusha
cmpsb
add
lret
in
xchg
push
rcrl
or
lcall
lcall
sbb
dec
push
arpl
mov
int3
ret
cmp
cmp
test
enter
aaa
ja
mov
rcr
xor
mov
mov
and
cmpsb
bts
mov
aas
pusha
lret
xlat
pusha
ret
insl
gs
cmpsb
insb
adc
xchg
push
mov
call
addr16
push
dec
into
push
jp
add
rcr
push
inc
loop
repnz
jle
ret
icebp
sti
mov
lret
adc
das
sbb
cli
fstpt
mov
jg
cmp
std
mov
pop
stc
ss
and
jnp
sub
mov
jecxz
pop
imul
pop
in
dec
cli
jp
dec
or
add
sbb
jmp
mov
cmpsb
jge
les
leave
mov
gs
std
mov
mov
mov
lods
test
jp
stos
jbe
aam
pop
fdivrp
pop
mov
imul
int
sbb
popaw
add
sbb
or
stos
mov
sub
adc
jge
sub
and
mov
mov
cmp
mov
int3
jp
mov
ss
popa
or
arpl
inc
jge
or
sahf
stos
lret
pusha
rorb
imul
dec
fstp
push
lcall
inc
dec
fwait
gs
jne
dec
lahf
arpl
jb
inc
dec
incb
lret
adc
repnz
lret
add
shlb
and
lods
push
loop
inc
push
sbb
jb
mov
dec
aas
mov
cmpsl
loopne
gs
scas
sub
test
mov
shrb
rcl
jns
mov
stos
sbb
data16
xchg
aam
inc
mov
clc
fcomps
sub
dec
xchg
jns
jecxz
cmp
lods
and
movsb
sbb
les
iret
jbe
addr16
dec
mov
testb
movsl
mov
mov
add
ss
sbb
xchg
jne
push
and
sbbb
jp
rorl
mov
data16
jecxz
in
mov
xchg
pop
pop
sbb
mov
in
jg
enter
lds
adc
jae
movsb
cmp
cmp
push
sbb
dec
push
cwtl
outsb
push
mov
fstl
popa
fcmovu
push
adc
or
leave
mov
push
mov
sahf
shrl
shl
mov
inc
stos
push
or
xchg
dec
push
das
and
out
scas
xor
xchg
fcompl
shll
lock
add
dec
cmpb
mov
popa
push
pop
mov
inc
inc
dec
sub
fsave
xchg
clc
jne
int3
repnz
mov
or
cli
xorb
in
cltd
sub
sub
addr16
addb
jp
sub
mov
mov
pop
fbstp
rorb
int
and
dec
pop
xchg
adc
int
dec
dec
sub
xor
cmp
mov
add
push
cmpsb
shrb
inc
sub
aad
pop
push
in
in
and
mov
daa
icebp
sub
pop
push
push
addr16
push
daa
and
cs
pop
cmp
incb
add
adc
add
mov
pop
and
dec
or
sub
push
shlb
inc
mov
popf
stc
and
in
movsb
outsb
loope
adc
lods
adc
sbb
pop
stos
scas
mov
mov
dec
repnz
cld
pop
inc
int3
mov
sub
jae
xchg
inc
in
sbb
andb
fistl
pminsw
ret
push
mov
mov
iret
gs
iret
xor
ficoml
jp
imul
push
add
pop
cmc
sub
lods
adc
mulb
out
mov
xor
sbb
push
jle
jle
popa
push
loop
movb
mov
pop
push
pop
aam
pop
inc
cmpb
cmp
jl
stc
pop
insl
push
push
aaa
in
lahf
and
setb
movsb
pcmpeqw
lds
out
xchg
lock
mov
in
lret
sub
cvtps2pi
mov
int3
sbb
jmp
test
xchg
mov
lods
movnti
and
mov
call
movl
loopew
sbbb
stos
mov
push
icebp
adc
icebp
lret
mov
rorl
dec
cwtl
push
jnp
scas
into
shrl
ftst
hlt
sahf
je
mov
add
mov
and
ss
test
pop
adc
pusha
jae
jbe
les
cs
cmp
mov
mov
xor
sub
and
pop
ljmp
out
lahf
or
jae
xor
lcall
aas
scas
fcomps
mov
mov
int
jae
imul
cmp
jecxz
jp
mov
or
fs
jg
in
call
movsl
inc
cld
fisubl
adc
xchg
sbb
test
ja
xor
icebp
push
insb
jg
push
in
xor
pop
mov
inc
dec
jge
out
js
clc
push
ja
scas
movsb
ss
add
ja
stc
test
bound
lret
mov
sub
cltd
and
in
add
out
jno
sbb
mov
mov
mov
stos
arpl
push
into
cs
popa
mov
cmpsl
aaa
je
push
sub
lahf
adc
pop
jno
pusha
out
inc
pop
or
cwtl
dec
mov
xchg
adc
push
hlt
cmpsb
pop
and
call
mov
out
pop
inc
rcrb
mov
sub
cmp
jne
push
sub
popf
dec
and
adc
pop
push
or
cmc
xchg
push
dec
push
pop
rclb
arpl
fcoml
xchg
jae
out
cli
js
imul
lret
or
fdivr
aas
jb
xchg
lret
adc
fldcw
sub
pop
out
loope
jne
xchg
push
add
out
lret
in
jnp
xchg
and
dec
rcr
pushf
fmuls
les
rcrb
repz
dec
mov
fwait
fwait
inc
pop
or
rol
push
sbbb
sbb
push
int
mov
push
popa
push
pop
jae
inc
cmpsl
adc
test
push
popa
jmp
repz
loop
notb
scas
jbe
fdivl
xor
dec
cli
int3
ja
mov
mov
add
leave
lods
sub
xchg
push
pushf
or
xchg
sbb
shll
sti
insl
int
sub
sbb
neg
and
and
pop
lea
jecxz
loop
mov
sub
mov
inc
xor
and
mov
adc
call
pop
xchg
add
xor
fnstcw
mov
into
inc
jp
lcall
pop
mov
mov
lock
xchg
rcrb
xlat
inc
push
outsb
mov
and
jno
sub
adc
mov
lret
dec
push
cmpsb
cltd
dec
push
ss
jecxz
pop
xorl
jl
xchg
repnz
in
push
and
push
lea
out
push
fnstcw
xchg
xorl
in
out
outsb
xchg
aaa
jns
sub
push
add
mov
inc
sarl
test
ss
pop
xor
enter
mov
mov
fiadds
mov
jnp
pop
ret
add
xor
dec
pusha
xchg
and
icebp
cs
mov
or
lods
out
cld
rcll
add
pop
pushf
fbstp
lcall
lock
cmpsb
test
push
sti
mov
int
or
cli
aam
nop
push
es
out
push
cmpsl
jnp
push
test
mov
inc
std
sbb
fxtract
mov
popa
nop
stos
dec
push
pop
gs
daa
or
dec
ja
dec
adc
sbb
repnz
insl
sarl
jle
dec
xchg
aam
movsl
and
or
pop
sub
fstl
icebp
ss
js
stos
and
out
xor
sbb
subb
hlt
pop
dec
jo
cli
lcall
scas
sub
pop
rolb
es
and
mov
dec
pop
cmpsl
jns
mov
add
inc
lods
push
insb
dec
pop
push
or
push
cmp
xchg
xlat
mov
mov
addr16
inc
loop
xchg
loopne
and
dec
dec
xor
mov
sub
lods
insl
add
cli
repnz
xor
cld
or
in
mov
test
int
or
call
cmp
push
jmp
sbb
jne
pushf
and
repnz
mov
jnp
jmp
and
xchg
icebp
lret
push
add
ljmp
add
push
pop
jle
push
andl
decl
mov
stos
cmp
mov
adc
or
xchg
jns
mov
leave
loopne
xchg
popf
arpl
out
pop
repz
push
out
pop
sar
inc
repnz
or
dec
int
xchg
in
jns
mov
mov
sub
jmp
adc
mov
in
or
adc
lds
inc
pop
push
cmp
sub
and
stc
mov
cmp
or
shlb
cld
lods
sub
cmpsb
out
mov
push
xchg
push
xchg
test
aaa
scas
imul
mov
inc
enter
dec
jb
call
add
mov
insb
in
and
cmp
add
xlat
and
sub
or
aam
subl
cmp
notb
add
and
movsb
int3
ja
inc
or
add
frstor
mull
mov
push
fs
movsl
pushf
mov
lods
ljmp
scas
xor
mov
ds
in
adc
aaa
pop
or
mov
push
sbb
jbe
std
add
xor
fldl
out
call
mov
inc
out
mov
popa
xor
jmp
leave
test
mov
insl
jmp
xchg
sarb
aaa
cmp
xchg
xchg
xchg
xchg
ror
mov
mov
call
dec
cmpsl
jno
jecxz
and
jbe
testb
stc
pop
cwtl
in
repz
loope
inc
sbbb
dec
in
in
and
movsb
rcrb
in
cld
aaa
add
fidivs
fwait
xor
stos
inc
test
push
icebp
jne
mov
adc
sbb
movsl
xorb
mov
ds
in
lret
bound
push
mov
mov
aas
cmp
mov
jg
shrl
enter
repnz
es
dec
out
std
jle
in
int
xor
xchg
add
loop
and
mov
cmpl
mov
shlb
pop
mov
popf
or
jne
add
movsb
push
add
negl
lret
jl
mov
stc
in
push
jle
data16
sbb
dec
loope
inc
out
testl
and
push
mov
xor
or
cmpsb
orl
loopne
dec
inc
sarb
jmp
fsts
aas
push
ss
pop
jns
adc
adc
xor
idivb
outsb
cmp
push
sbb
xchg
inc
push
in
adc
cltd
sbb
xor
fldcw
jge
call
insb
xchg
inc
mov
cmp
aaa
pop
mov
popf
mov
cld
or
push
mov
add
jecxz
bound
push
mov
push
adc
mov
adc
dec
clc
lea
pop
adc
push
decb
mov
mov
fidivs
xor
xchg
adc
pop
fs
adc
inc
scas
aaa
mov
sti
ret
xor
mov
xchg
out
in
and
push
sub
adc
adc
xor
or
cmp
cld
enter
data16
shlb
daa
cmc
pop
faddl
pop
jp
das
sub
and
xor
add
fs
xor
int3
adc
push
mov
cld
leave
addr16
lods
mov
jge
adc
fwait
dec
aam
out
xor
xor
and
lock
cltd
cmp
cmpsb
or
sbb
fidivrs
cmp
inc
dec
enter
je
push
lods
es
loop
add
nop
call
mov
jle
push
cmp
mov
and
or
out
cltd
lret
cli
loopne
pop
pop
frstor
pop
xchg
loope
loopne
out
shlb
mov
and
into
xchg
mov
jnp
push
xchg
adc
test
xor
rorb
cmp
and
push
fists
mov
movsb
push
fnstcw
cwtl
or
mov
push
dec
or
sbb
in
xor
imul
and
mov
add
aaa
lock
mov
pop
ja
stos
sbb
into
loop
nop
xchg
sbb
stos
inc
arpl
leave
adc
nop
lret
les
dec
pop
cmpsb
adc
fdivrl
or
dec
xchg
mov
xor
data16
sub
lcall
cmp
addb
aaa
orl
test
fcmovnbe
das
or
xor
sbb
test
cmp
dec
and
scas
aaa
xor
in
jnp
movb
cmpsb
inc
clc
fstpt
lret
lock
icebp
push
out
mov
add
add
in
mov
adc
and
push
dec
dec
into
cmp
leave
dec
add
adc
adc
repnz
jnp
push
mov
sti
sti
inc
xchg
xor
test
inc
mov
lock
ss
mov
call
inc
and
fcom
mov
xchg
pop
insb
mov
call
push
jo
push
add
mov
add
int
mov
dec
loope
outsb
popa
and
mov
add
mov
adc
inc
or
lds
jae
xor
or
or
jl
jmp
pop
inc
mov
test
sbb
decb
cld
popa
xor
pop
int
insb
test
scas
lcall
pop
arpl
mulb
cmp
sti
in
dec
loope
dec
cmpsb
cmp
lock
adc
aad
mov
lock
fadd
mov
cld
aam
in
aaa
call
push
cmp
mov
imul
rcrb
xlat
xor
mov
stos
adc
fisttpll
add
js
mov
cmp
mov
xchg
add
inc
jecxz
cld
cmpsl
push
outsl
add
cmpsl
xchg
hlt
daa
push
ds
rorb
popa
cmp
and
ret
mov
ja
lahf
imul
xchg
ficompl
and
dec
aad
in
mov
jo
test
lock
icebp
xlat
push
int
loopne
shrl
ror
lods
insb
fildll
ss
inc
cwtl
outsl
cwtl
call
scas
std
addr16
cwtl
lahf
push
jb
cltd
std
mov
mov
xor
pop
push
xchg
sub
cltd
pop
loopne
jl
lods
cmc
xor
adc
pusha
sub
xchg
js
mov
arpl
mov
mov
cs
mov
mov
xor
push
stos
mov
nop
xor
cmpb
pop
movsb
imul
or
aaa
ja
ljmp
jb
ljmp
jns
mov
jge
test
hlt
or
pop
xor
sub
adc
iret
mov
test
push
dec
out
adc
scas
jg
pop
dec
inc
sti
push
and
sbb
sub
xlat
jg
or
pop
fdivp
movsb
xor
cmp
movl
jp
mov
xchg
sub
orb
mov
pushf
sbb
mov
inc
dec
insb
clc
push
jecxz
into
cltd
call
lock
pop
mov
cmp
mov
jns
jne
pop
jge
or
and
in
lock
into
ret
sbb
loopne
call
in
xchg
pop
js
repnz
repnz
jp
enter
sti
push
mov
movb
cld
popa
repz
cwtl
shrl
rcrl
pop
xor
dec
in
aas
mov
or
daa
stos
aas
loopne
rcrl
or
lods
push
push
test
add
pop
test
in
sti
mov
iret
mov
outsl
mov
xor
sub
outsb
cmpsl
mov
push
sbb
les
xor
jecxz
outsl
xchg
cmp
add
repz
and
gs
xchg
mov
insb
jp
fadds
movsl
xchg
or
cmp
out
nop
lods
rol
hlt
dec
lds
addr16
dec
xor
aas
icebp
lock
popa
pop
dec
jg
inc
inc
sbb
sub
cmpsb
mov
cwtl
sbb
std
jg
push
xor
pop
flds
insb
inc
push
movsl
inc
fs
jbe
repz
jg
inc
or
xlat
loop
leave
mov
pop
hlt
movsl
and
pop
sarb
icebp
insl
bound
mov
pop
ss
push
fcomi
cltd
test
pop
cli
fcomps
loopne
and
shrl
sbb
xchg
andl
xchg
pop
jns
jne
pop
jge
or
and
movsl
jno
jp
loope
rorb
hlt
xchg
outsl
mov
sbb
adc
push
imul
jp
in
cmp
dec
mov
lret
lret
xchg
or
repnz
lods
push
scas
dec
notl
mov
lds
int3
xor
mov
add
pop
mov
arpl
ljmp
mov
pop
scas
mov
inc
fs
lret
fs
je
out
xlat
xchg
test
push
das
push
int3
aas
leave
fildll
sbb
pop
fisubl
cmp
adc
mull
mov
pop
push
lods
mov
lret
lds
repnz
xor
shlb
xchg
cmp
ds
sti
add
fucomi
sarb
mov
mov
cmp
loopne
out
inc
daa
jl
lea
loopne
cmp
mov
jecxz
setg
sub
dec
add
add
lret
and
cmpsl
or
dec
jmp
lock
mov
adc
xchg
repz
cld
in
leave
in
xor
icebp
xor
lahf
lret
mov
test
mulb
lods
sbb
mov
in
int
fiaddl
xchg
loop
lcall
push
pop
arpl
xchg
fiadds
xor
insl
cmp
int3
mov
adc
xchg
jne
cmpsb
pop
ret
mov
outsl
fs
addr16
sbb
das
dec
jb
or
mov
mov
and
xchg
mov
fbstp
fucomi
cmp
lock
push
mov
daa
jbe
addr16
lahf
test
inc
call
loopne
adc
lret
jmp
xorb
aam
pop
hlt
fiaddl
mov
pop
xchg
loop
mov
mov
adc
pop
and
mov
adc
jae
mov
test
cmp
fistps
or
std
sbb
jo
gs
push
xchg
or
sarl
sti
outsl
popa
mov
sahf
sbb
loopne
lret
xchg
push
cmp
lea
sbb
jns
dec
testl
dec
pop
dec
scas
add
daa
ds
jecxz
xchg
das
repz
sub
jecxz
gs
outsb
jmp
adc
cmp
pop
popl
lds
and
xlat
mov
out
ss
inc
dec
sbb
xchg
cmpsl
mov
ja
or
cld
lret
jo
movsb
in
pushf
rcll
in
movsb
xchg
fs
push
push
out
adc
icebp
jno
push
mov
push
jle
cwtl
cs
and
inc
pop
sub
fmul
lods
outsl
outsb
aad
sar
out
nop
dec
jl
ds
push
int
push
and
imul
mov
out
xchg
mov
fcmovnb
into
jne
je
inc
inc
mull
xor
push
pop
je
ret
leave
stc
add
xchg
jb
or
sub
add
pushf
push
pop
incl
xor
jnp
lock
stos
mov
jle
sub
sub
or
push
loope
ror
push
inc
jl
mov
int3
xor
inc
inc
test
ss
cmpsl
xchg
test
mov
adc
inc
jnp
dec
arpl
adc
scas
mov
mov
cmpsl
int3
lods
cli
inc
sub
outsb
mov
jne
ror
adc
in
mov
sbb
insl
loop
bound
mov
mov
stc
and
outsb
std
xchg
movsl
imul
std
or
enter
pop
loopne
pop
xchg
aad
xor
and
jmp
cmp
mov
push
add
cli
imul
cmpb
pusha
in
xchg
mov
shll
cli
cs
pop
mov
ljmp
add
push
into
loop
stos
loopne
cmc
mov
adc
arpl
lahf
jmp
les
ds
push
or
int3
inc
jns
sub
fdiv
js
dec
push
ret
lahf
popa
out
mov
mov
lcall
insb
mov
cs
cmpsl
sahf
inc
or
dec
loopne
fwait
test
gs
enter
pop
xchg
xchg
jl
inc
enter
jmp
jo
or
imul
stc
dec
cmp
mov
in
out
push
repnz
push
adc
xchg
mov
out
popa
xlat
push
enter
dec
sbbl
fst
dec
sub
cld
push
and
sub
enter
scas
mov
mov
in
ss
push
pop
xor
sub
inc
scas
fucomip
sub
iret
pop
inc
mov
jl
test
dec
iret
lods
mov
fmul
out
movsl
pop
loope
cs
ljmp
testb
repnz
adc
pop
stc
fcmovne
arpl
pusha
into
mov
cld
inc
mov
or
xchg
idivl
je
jg
cmp
jge
repz
outsb
pop
mov
adc
cli
and
jge
dec
adc
jecxz
pop
in
xchg
push
mov
inc
sbb
push
sbb
incb
xor
clc
sub
xchg
outsl
imul
lahf
call
leave
mov
out
pop
push
inc
pop
je
xor
cli
roll
adc
mov
inc
into
inc
xchg
push
jle
sbb
jae
cmp
sub
loop
sti
push
dec
sbb
insb
and
stos
fnstenv
and
cmp
sbb
push
test
dec
sub
cmpl
push
pop
mov
and
loopne
xchg
or
inc
outsl
jb
pop
aam
enter
testb
movsl
sub
mov
sbb
lea
je
sahf
add
test
dec
mov
cmpsb
ss
fidivl
xor
push
push
and
test
add
sub
mov
mov
mov
xor
nop
dec
push
and
cwtd
jge
cmpsb
mov
add
inc
xor
adc
cli
pusha
movsb
sbb
dec
outsb
and
fadds
sub
iret
mov
xor
insl
cwtl
cmpsb
cmpsb
adc
es
and
lcall
ss
mov
cmpsl
cmpsl
jnp
sahf
mov
add
iret
xor
int3
ret
sub
pop
push
cld
popf
or
xchg
clc
repnz
insl
and
sub
mov
push
gs
cli
insb
mov
or
push
shl
adc
mov
dec
push
jle
and
leave
mov
es
rdtsc
adc
inc
iret
mov
sti
xchg
cmp
inc
sahf
fwait
mov
mov
sub
test
mov
xchg
inc
mov
lds
jge
jno
mov
aad
sbb
loop
xchg
xor
jge
xchg
mov
mov
outsb
xchg
sti
and
xor
mov
mov
cmpl
mov
inc
mov
leave
addr16
cld
and
notb
outsl
mov
sub
nop
lods
outsb
add
mov
dec
xchg
jb
ja
or
pop
pusha
repnz
xchg
xlat
sbb
xor
pop
shr
push
ss
cmpsb
cmpsb
jg
push
test
inc
int
dec
out
cmp
pop
mov
int
mov
fcomip
scas
loope
movsb
mov
cmp
ljmp
sbb
mov
inc
gs
dec
inc
ljmp
push
bound
cwtl
pop
xchg
xchg
push
mov
sub
rcll
push
and
xchg
dec
xchg
sub
mov
sub
test
pop
clc
add
lahf
push
jns
ret
ret
jmp
mov
shrb
cmp
sbb
outsb
mov
push
mov
or
in
push
xor
xchg
sbb
inc
mov
xchg
cmp
pop
adc
xchg
xchg
add
mov
pop
pusha
cli
sahf
test
nop
cmp
jge
fcmovne
sbb
xchg
sarb
push
fildll
mov
xchg
enter
mov
mov
repz
mov
sbb
cmp
mov
mov
mov
int3
aas
cmpsl
xchg
jg
pusha
push
xchg
or
xor
aas
les
xlat
mov
add
push
xchg
mov
aad
bound
fwait
cmp
inc
andb
xchg
adc
lcall
pop
inc
and
jno
pop
cli
ret
xchg
insb
add
mov
ret
jnp
pop
xchg
add
cmpsl
out
cmp
mov
adc
jmp
out
fldl
test
and
popf
rep
and
sub
adc
jl
sub
cmp
xor
int
fisttpll
cmpsl
sub
sub
ficomps
cmpb
mov
dec
imul
xor
or
jnp
into
jmp
pop
repz
insb
cltd
push
clc
lock
sub
and
adc
xchg
and
push
jns
sub
jge
sbbl
in
jbe
xor
mov
pop
sahf
dec
cwtl
jge
push
and
inc
sbb
adc
stos
ret
cmpb
arpl
xchg
repnz
push
jns
sbb
push
fwait
int3
push
rolb
ljmp
xlat
fisubs
insb
insl
sbb
insl
push
cmpsl
inc
jecxz
xor
dec
movsb
or
pop
int
dec
ret
inc
lods
adc
test
or
adc
add
xchg
add
fwait
add
aad
pop
sub
ret
sub
sbb
stos
mov
imul
jg
push
incb
mov
testb
xchg
clc
mov
cmp
aad
popa
stc
add
or
in
pop
pop
mov
dec
addr16
sub
call
inc
or
cmpsl
cmpsb
fidivs
js
lods
lods
loopne
cli
addr16
sub
cmpsb
scas
mov
mov
mov
ljmp
and
xor
ljmp
lock
xchg
fwait
adc
sbbl
xchg
and
cmp
nop
push
dec
mov
addr16
sub
push
mov
sub
mov
jge
jno
fisubrl
cmc
mov
gs
sub
and
adc
and
mov
jecxz
mov
fldenv
jae
sbbl
fsubrl
jle
xor
mov
mov
shl
leave
pop
daa
dec
rolb
out
sti
fstpl
pop
jle
dec
jle
in
jl
push
fnstcw
into
inc
das
cmp
jb
inc
sbb
sarl
dec
mov
xor
imul
or
mov
out
shll
fbld
fsubrs
xor
and
lret
hlt
mov
aaa
push
in
inc
mov
ret
or
add
jae
popf
sbb
insb
ret
in
mov
xchg
adc
repz
jl
mov
sub
in
push
lods
pop
and
xchg
dec
scas
jmp
sbb
xorb
int
sub
aaa
into
call
jns
xor
iret
popa
outsb
cmp
lock
in
stos
fisttpll
pop
sub
fldl
or
cmpsl
movsl
insl
movsb
popf
in
jo
mov
loope
cmp
inc
icebp
xor
dec
cltd
or
in
cmp
stos
jbe
mov
or
mov
leave
jae
test
sbb
xor
jge
daa
jmp
and
cwtl
jg
inc
fcomip
and
sbb
pop
jg
adc
fcoml
fidivs
pop
insb
jno
ljmp
leave
fsubl
rcrl
shl
adc
and
push
push
sbb
cmp
jne
in
test
lcall
dec
sub
cmp
cmpsl
cltd
repz
and
cwtl
lea
sub
div
movsl
sub
imul
xor
insl
xchg
push
sahf
shrb
movb
adc
test
pop
fsubrl
repz
pop
mov
xchg
inc
sub
lret
add
lods
and
mov
xor
jno
inc
pop
cmpb
push
fisubs
push
mov
mov
test
out
xchg
adc
dec
sti
scas
lds
filds
jp
push
fcmovne
enter
out
push
sbbl
pop
adc
rorb
addb
dec
fiadds
mov
aad
lret
roll
xor
out
pop
cmp
jg,pn
jno
je
mov
aam
ljmp
test
push
inc
xor
xor
add
push
popf
mov
and
in
rorl
inc
jo
add
adc
in
sbb
mov
mov
aad
aas
in
sahf
mov
pop
pop
je
mov
leave
xor
mov
stc
nop
pusha
xchg
fnsave
sahf
or
sbbl
dec
xchg
cwtl
idivb
xor
stos
subb
outsb
mov
imulb
or
add
loopne
push
and
lret
dec
inc
pop
jno
cwtl
xchg
sbb
xchg
cwtl
sbb
cmpsl
pop
das
call
jge
lods
xchg
jo
push
hlt
jg
mov
fildll
out
and
xchg
add
dec
xor
hlt
dec
bnd
cltd
jecxz
test
in
mov
jl
mov
test
ja
sbb
adc
push
int
fadds
mov
and
push
and
fsubrl
lea
fstpl
dec
pop
test
and
shlb
xchg
loope
into
push
xchg
cmp
jle
rcrb
push
jp
insl
jmp
pop
or
ret
cmp
push
out
insl
sar
fisubl
test
sahf
ret
cmpb
je
dec
lds
lahf
mov
call
sbb
clc
cmc
push
insb
fnsave
movsl
aad
les
xchg
repz
mov
jns
inc
jo
int
mov
outsl
xchg
aas
lret
repz
lcall
shlb
aas
test
xchg
push
mov
cmpsb
loop
jno
jno
xchg
addr16
mov
push
pusha
jge
xor
pop
fcom
int
gs
int
cmpsb
test
cmp
outsl
mov
js
jae
xchg
xchg
hlt
mov
outsl
xchg
adc
in
loopne
popf
or
cmp
shrb
cmp
aam
mov
dec
movsb
and
data16
cld
sbbl
shll
iret
xor
and
mov
in
push
adc
mov
jl
fists
xchg
dec
rclb
jmp
loopne
mov
mov
add
mov
mov
ret
scas
inc
adc
xchg
pop
jns
jne
pop
jge
or
and
xor
push
sahf
sbb
xchg
hlt
lahf
imul
outsb
lret
orb
push
les
cmpsb
ficoms
imul
mov
sbb
or
pusha
imul
mov
jbe
mov
add
inc
push
pop
dec
lahf
arpl
stos
dec
adc
test
ljmp
xor
push
into
push
scas
pop
gs
scas
push
in
mov
xor
mov
nop
cmp
cmpsl
hlt
lock
scas
in
subb
cltd
inc
in
negb
jp
jns
nop
in
aaa
vcvtss2sd
lods
icebp
loope
imul
and
xor
leave
or
iret
fnsave
sbb
popa
cld
pop
subl
insb
into
inc
pop
pop
call
dec
lds
cmp
test
dec
subb
fstpl
push
mov
dec
mov
call
iret
stos
cltd
adc
test
push
pop
mov
jns
insl
cwtl
push
pushl
mov
jo
push
add
mov
add
and
shrb
std
movsl
mov
cmp
mov
fstl
xor
mov
mov
lret
lret
add
sbb
pop
xchg
in
popa
xchg
pop
imul
push
cmp
jle
icebp
sbb
add
test
mov
lret
and
sub
xorb
adc
jecxz
sub
xlat
mov
mov
push
and
mov
dec
stos
push
subl
jl
push
sbb
mov
or
rorb
mov
jle
xor
and
scas
test
jge
insb
aam
sahf
adc
out
shl
iret
mov
cmp
pop
sub
xchg
xor
test
xor
shll
mov
pop
adc
lret
lcall
sbb
inc
sbb
std
cmp
dec
xchg
mov
add
daa
subl
daa
aaa
cmp
add
fildll
out
pop
outsl
mov
mov
andl
pop
cmp
les
ficoms
mov
popf
pushf
imul
inc
jmp
lods
push
inc
sahf
or
sub
dec
imul
push
and
xchg
fcoms
jnp
arpl
jbe
mov
jp
daa
mov
rol
ss
sub
decl
xchg
sahf
inc
outsb
cmpsb
ljmp
movb
push
shr
or
sbb
sub
add
jg
outsb
jmp
sub
cmp
jge
mov
loope
inc
xchg
or
pop
imul
sti
add
xor
dec
div
ds
mov
dec
or
jbe
push
sahf
jl
dec
mov
xchg
mov
xor
inc
aam
into
rclb
add
adc
shlb
scas
scas
dec
pop
sub
es
cwtl
sbb
dec
out
dec
aaa
int3
pop
fisttpl
dec
sarb
in
leave
xchg
das
ljmp
test
dec
fldl
jp
imulb
and
fildll
xor
xchg
dec
inc
jae
data16
bound
mov
mov
push
jp
inc
hlt
push
arpl
iret
xchg
mov
jmp
in
xchg
jg
mov
and
mov
aad
sahf
fldl
inc
outsb
lret
mov
adc
test
les
dec
test
pop
fs
outsb
in
dec
inc
std
les
enter
jb
xlat
aaa
cs
push
jb
out
je
ret
push
xor
xchg
loope
rol
mov
cmpsb
sbb
xchg
pop
icebp
leave
dec
int3
out
int3
lcall
jns
ror
cwtl
dec
push
mov
xor
aam
in
fcoml
lret
inc
dec
sbb
sub
mov
add
mov
mov
sbb
cmp
and
jg,pt
es
or
push
cmp
cmp
lret
jg
pop
rolb
fldt
pop
pop
pop
mov
repz
fsubrs
ljmp
lret
mov
xchg
cmp
std
adc
testb
cltd
fdivp
or
jecxz
test
icebp
outsl
adc
lods
jmp
xchg
dec
inc
xor
and
ret
sub
dec
and
popf
ds
jp
inc
ficompl
adc
out
mov
mov
xor
xchg
cmp
inc
cs
ret
add
mov
inc
imul
push
filds
bound
cmp
pop
inc
mov
inc
dec
xor
dec
filds
ss
mov
dec
push
jmp
loope
gs
pop
push
or
jp
lret
sbb
pop
in
fadd
push
mov
adc
xchg
mov
adc
adc
jnp
adc
xlat
adc
xchg
xchg
push
xor
push
push
pop
jle
lods
pushf
add
jno
outsl
mov
mov
test
jle
jge
enter
andl
sub
adc
fisubs
fiaddl
insl
push
and
jg
add
pop
mov
adc
jne
jno
mov
dec
mov
xchg
mov
test
mov
scas
loopne
sbb
push
bound
mov
xlat
cli
lds
mov
pop
xchg
out
adc
stc
les
jecxz
dec
maskmovq
mov
and
sbb
cmpsb
test
mov
in
cmc
sub
xor
sarl
dec
aas
movsl
bound
or
shll
dec
ds
sbb
mov
gs
ret
cmpsb
mov
sbb
out
mov
dec
inc
mov
fwait
add
daa
sub
adc
fisubl
inc
cmp
inc
sub
scas
je
in
repz
scas
mov
cmp
or
rolb
les
jecxz
sub
mov
std
stos
div
cmpb
mov
or
out
sbb
mov
push
and
or
sub
inc
jno
sbb
call
jge
inc
fidivs
movsb
pop
test
repnz
cs
xchg
dec
jae
sbb
test
cmp
and
push
aas
repz
push
cmpb
dec
fcomps
push
je
jl
cld
mov
adc
daa
aaa
pop
aam
sbbl
outsb
jae
es
cli
arpl
sbb
inc
xchg
loop
xchg
cmc
ja
ja
xlat
dec
inc
lahf
int
fcmove
push
sbb
mov
mov
lock
das
loope
mov
iret
jecxz
xchg
mov
xor
and
jno
mov
cmp
les
pop
mov
scas
icebp
cmpsb
test
xchg
jo
aaa
rol
jno
nop
xchg
fs
cmp
xchg
sub
ret
pop
add
pop
pushf
mov
xor
xchg
inc
pop
addl
inc
dec
or
jl
sahf
in
add
scas
add
stos
sbb
push
ss
pop
cmpsb
inc
adc
or
std
loop
inc
adc
sbb
jecxz
mov
cmp
scas
jnp
je
jnp
test
lock
iret
sbb
push
cmp
or
and
cltd
pusha
or
fsubs
fisttpl
inc
sub
outsl
or
stc
lds
xor
stc
out
mov
cli
cs
sub
mov
and
push
add
or
jbe
mov
mov
jno
ror
push
sbb
pusha
jae
rorb
adc
call
adc
pop
in
subl
jmp
mov
and
adc
scas
jbe
movsb
out
shll
loope
mov
pop
rcrb
ret
cmp
ret
xor
in
push
movsb
pop
mov
sub
push
pop
pop
jbe
in
test
pop
movsl
adc
xchg
xlat
inc
cmpsl
adc
in
pop
fadds
outsb
and
imul
shlb
pushf
adc
and
and
add
jge
or
outsl
stos
jg
or
mov
out
inc
jp
ret
jmp
insb
adc
scas
loopne
add
leave
ret
sahf
in
cmp
sahf
mov
lods
cmp
call
mov
incb
adc
and
xor
mov
dec
xor
xorb
fwait
adc
insl
aad
fwait
pop
mov
push
shrl
jbe
mov
mov
xchg
fidivrl
mov
scas
js
cmp
jmp
lock
fs
push
xchg
jns
pop
jae
inc
inc
jmp
imul
mov
movsl
sub
rcrl
cmp
inc
ficompl
add
ret
loop
jb
pop
scas
mov
dec
cli
push
cld
push
fdivp
int
jg
jno
xor
or
adc
ror
or
aam
jecxz
nop
xor
pushf
bound
outsl
cmp
push
cmp
out
popl
mov
mov
mov
cmp
je
ret
outsb
loopne
int
jp
sub
sub
jecxz
int
push
aas
adc
rol
sarb
or
xchg
test
ds
jmp
in
jns
or
sti
aaa
inc
push
xlat
add
mov
faddp
pop
scas
adc
xor
and
lret
pop
push
fdivr
bound
popl
push
sbb
mov
sub
pop
hlt
outsl
dec
imul
mov
sbb
xlat
std
xchg
lahf
xor
out
adc
inc
test
dec
iret
xor
pop
jo
fiadds
push
xor
addr16
lea
test
mov
and
cmpsl
push
pop
das
sbb
adc
fcompl
or
mov
mov
and
jbe
push
inc
xlat
add
push
inc
ss
mov
out
sub
push
and
mov
mov
vmread
inc
pop
fcmovb
cmpsl
push
imul
data16
push
xlat
shll
popa
cltd
movsl
mov
dec
fs
iret
push
sub
push
aaa
out
insl
lods
sub
sub
sub
pop
mov
jl
out
addr16
xor
popf
pop
test
imul
jp
sahf
mov
push
stc
or
in
xor
lcall
push
repnz
repnz
lret
jno
fdiv
mov
int3
loopne
cld
test
add
fildl
aam
sbb
and
mov
push
bound
aad
xchg
sbbl
pop
in
fcoml
test
daa
stos
nop
lea
or
les
push
lods
nop
out
dec
jg
loope
int
cmc
adc
or
shrb
sbb
jle
insb
mov
cmp
aad
push
jbe
lret
sti
sub
daa
mov
popa
push
mov
cmp
adc
scas
push
bound
inc
je
adc
sbb
loope
xor
sbb
in
jecxz
mov
outsb
addb
dec
push
cmp
test
adc
mov
jge
pop
test
push
fildl
sub
xor
test
cli
jbe
jg
or
loopne
sahf
repnz
mov
jge
hlt
aad
add
and
mov
jbe
sti
sar
loop
pop
sahf
testl
xchg
xor
pop
subb
shrl
xchg
xchg
jg
int
cmpsb
aas
icebp
into
jo
arpl
popf
dec
and
out
mov
or
dec
leave
dec
cs
test
iret
mov
xchg
push
scas
sub
je
sub
cmp
add
outsb
sti
int3
add
fisttpl
inc
inc
aas
js
jns
or
cwtl
in
pop
jecxz
mov
push
mov
mov
enter
addr16
or
bound
lret
pop
stc
into
imul
rorb
test
pusha
xorb
in
sub
add
sbb
aaa
push
xchg
inc
dec
ss
xsha1
cmpsb
push
pop
jecxz
adc
cmp
xor
mov
mov
mov
dec
and
test
and
mov
rorb
xchg
cli
fidivrs
cwtl
bound
popa
jbe
cmpb
int3
pop
lret
sub
xchg
daa
dec
icebp
fsubs
cmc
out
cli
jg
outsb
pop
mov
mov
pop
cltd
xchg
mov
aad
sub
cmp
fwait
jnp
push
inc
jmp
and
dec
iret
aam
mov
xchg
mov
les
xorl
mov
int3
test
sti
es
mov
jp
outsb
sbb
dec
and
cmpsl
push
lcall
jp
and
lods
adc
pushf
inc
push
stos
sub
dec
call
push
arpl
into
movsb
lds
mov
call
adc
mov
icebp
dec
pop
sbb
and
int3
outsl
mov
je
adcb
sbb
add
ljmp
cmpsl
daa
inc
loopne
sub
sbb
data16
out
sbb
cld
es
mov
addr16
stos
fisubl
and
inc
dec
jl
jne
jmp
je
fldt
aam
and
repnz
pop
sbb
pusha
sbb
outsl
cltd
pop
lods
je
and
inc
pop
call
push
xlat
pop
push
mov
push
adc
mov
in
mov
mov
lahf
sahf
outsb
add
test
or
loopne
adc
push
jo
pop
cltd
dec
daa
loope
xchg
push
jo
mov
inc
stos
nop
add
pusha
sbb
push
shl
addl
dec
xor
test
sahf
call
test
xchg
je
aas
sub
dec
push
xchg
mov
ret
outsb
push
push
or
xor
pop
pop
mov
repnz
lock
adc
icebp
xchg
out
in
xchg
cmpl
xchg
pop
pop
lret
or
shlb
shlb
jae
int
sti
xor
mov
cwtl
cmpsl
in
test
mov
push
or
addr16
push
outsl
jbe
pop
ds
ds
cmp
imul
scas
lock
or
dec
xchg
lock
fildl
gs
rcr
add
outsb
lods
loopne
inc
mov
sub
iret
lret
mov
stos
test
xor
or
out
mov
daa
into
std
sbb
pop
jbe
pop
mov
bound
rorb
hlt
out
xchg
aad
ret
divl
daa
sub
adcb
rol
sub
or
mov
lcall
popf
rcrb
inc
lret
ja
pop
pop
mov
push
lea
push
aas
sub
sahf
dec
pop
divb
into
push
adc
and
lahf
sbb
sub
hlt
movl
sbb
push
in
mov
aas
mov
mov
repnz
cwtl
push
rcll
clc
arpl
mov
fistl
ret
or
push
sbb
ljmp
sar
add
ror
daa
xlat
movsl
jb
mov
test
and
mov
dec
mov
sub
out
pop
push
leave
mov
repnz
jge
cmp
daa
pop
xchg
pop
mov
aaa
sub
out
xor
ret
roll
dec
fdivl
movl
adc
mov
push
push
sub
sarb
push
cs
inc
mov
mov
divl
fidivrs
stc
push
pop
mov
dec
iret
lds
lret
jmp
add
add
xor
or
xor
pop
fwait
sub
jns
mov
cld
lock
and
imul
sub
fwait
adc
nop
sbb
adc
bound
ljmp
push
mov
inc
cmp
cmp
mov
push
imul
cmpsb
inc
inc
pop
mov
icebp
addb
xchg
mov
cmp
test
je
rcrb
push
push
add
xor
dec
pop
mov
push
and
test
and
rcrl
cld
popf
aas
mov
stos
cmp
je
lahf
je
out
sub
lret
sbb
cmpsb
dec
sarb
iret
fstpl
xchg
ljmp
dec
mov
pop
adc
and
test
add
insl
mov
out
out
inc
lea
xorb
mov
leave
cld
push
sti
cmp
cmp
ja
push
lods
enter
cmc
jg
mov
cmp
mov
or
dec
sbb
add
loope
jle
call
sbb
fcmove
into
rep
cmp
scas
and
mov
or
sbb
mov
test
jo
push
and
add
xorb
sub
out
sub
ja
repz
mov
push
and
mov
jecxz
mov
add
jae
dec
popa
insb
enter
leave
popa
push
stc
pop
out
repz
shll
sbb
pop
ret
pop
add
or
lock
orl
das
into
xor
xor
or
in
shlb
mov
fisttps
aam
inc
in
jecxz
fmull
pop
push
repz
fcmovnu
add
mov
inc
dec
loopne
rclb
push
push
pop
sub
and
add
lret
jae
mov
fdiv
mov
add
icebp
out
push
mov
lcall
sub
mov
fwait
call
ds
xchg
out
or
pop
vunpckhps
cwtl
cli
and
fadd
pop
mov
pop
fmul
scas
inc
pop
repnz
gs
adc
test
push
sub
repz
fsts
mov
les
jl
pop
lock
in
pop
jmp
sbb
sahf
test
ljmp
sub
sbb
inc
aad
in
cmp
mov
xchg
movsb
cli
mov
jae
push
xchg
jle
mov
out
mov
push
dec
cmpl
jp
jo
mov
aad
stos
xchg
jl
aaa
jle
ss
cmp
push
into
jne
or
stos
add
pop
adc
mov
pop
in
sbb
fnstsw
dec
xor
repz
inc
jne
jle
inc
pop
xlat
pop
in
jmp
fsubp
fmuls
push
mov
ds
daa
adc
fnstenv
adc
hlt
pushf
push
ret
mov
inc
or
jb
add
imulb
mov
pop
or
movsb
adc
or
xchg
mov
or
insb
mov
hlt
stos
adc
sub
call
adc
std
sarl
ljmp
jle
ja
jmp
mov
mov
divl
jo
xor
inc
jae
ficoml
mov
int3
push
and
cmp
cmp
outsl
sub
mov
mov
pop
mov
adc
or
imul
mov
fldl
arpl
mov
cld
and
lock
outsb
sub
mov
dec
push
lods
ljmp
pop
test
sub
push
jb
addr16
mov
pop
and
mov
mov
movsl
xor
pop
leave
xor
xchg
cltd
jecxz
aaa
inc
jbe
add
in
pop
lods
outsl
dec
xor
pop
add
inc
aaa
mov
subb
sub
cwtl
xlat
sub
sub
arpl
mov
iret
adcb
fidivs
lods
and
enter
lods
andb
adc
dec
aad
push
cmp
xchg
xchg
add
adc
and
lds
pop
test
in
sbb
lods
hlt
dec
sub
fidivs
cwtl
les
pop
sahf
pop
movsb
add
jmp
mov
mov
repnz
xchg
pop
dec
mov
in
imul
roll
mov
mov
call
pop
movsb
or
dec
loope
out
lahf
mov
dec
scas
popf
xchg
add
mov
ljmp
out
ss
stc
dec
pop
ficoms
add
test
cmp
dec
xchg
rcrl
and
mov
mov
pop
and
nop
mov
ss
divl
jbe
sub
out
insl
lea
shll
js
xchg
or
sahf
mov
in
mov
outsb
push
lods
mov
outsb
jp
cmp
clc
xchg
nop
jp
shll
lcall
movsb
push
rclb
sub
mov
dec
push
push
xchg
icebp
push
sbb
mov
jbe
fwait
jnp
jg
mov
hlt
notl
push
pop
mulb
adc
dec
cmpsb
lea
xor
loopne
mov
and
les
lret
out
inc
scas
push
imul
mov
xorl
punpckhdq
jp
rorl
clc
lret
push
lods
shlb
jbe
pop
enter
mov
cmp
fimull
ss
lock
insb
scas
push
pop
je
addl
aaa
iret
js
mov
cmp
xor
pushf
cmp
out
inc
jl
iret
fisubrl
andb
or
imul
out
pop
push
and
sbb
imul
push
push
jno
pop
cmpsb
dec
pop
ja
outsb
xor
push
cs
pop
sub
mov
rcrl
mov
ss
ret
jge
mov
cli
xor
mov
push
mov
sub
mov
cs
fisttpl
fnstenv
lcall
add
push
dec
pop
mov
decl
mov
iret
sub
xor
xor
lds
and
inc
push
idivl
in
out
push
push
aad
jbe
adc
mov
lret
bound
negl
mov
cmp
xor
sbb
andb
adc
gs
adc
mov
push
or
es
jg
mov
cmc
arpl
lret
adc
add
test
loope
dec
sbb
pop
mov
fnsave
idivl
xchg
ret
push
out
sub
arpl
sub
imul
sti
rcll
fistl
nop
adc
fiaddl
in
xor
lods
nop
mov
push
sbb
push
loopne
add
xor
test
scas
pusha
xchg
pusha
ss
push
icebp
inc
cmc
xchg
mov
je
cmp
mov
jo
aaa
repnz
mov
sahf
mov
cmp
cwtl
cld
or
xchg
xor
inc
jb,pt
dec
call
out
in
jnp
dec
xchg
roll
enter
jg
inc
outsb
in
jns
or
xchg
mov
sub
lcall
inc
stos
mov
and
icebp
sbb
rclb
sti
sub
movsl
loop
out
xor
xorb
mov
add
mov
pop
repz
enter
es
push
lock
out
leave
xor
or
inc
aad
push
adcb
daa
sub
mov
test
pop
dec
pop
adc
sub
dec
bound
gs
test
and
mov
iret
out
mov
ss
test
mov
ljmp
nop
dec
repnz
enter
in
sub
inc
repnz
sahf
sbb
aaa
arpl
xchg
outsb
sti
popf
sub
cwtl
xchg
sub
sahf
jbe
filds
pop
pop
mov
imul
shll
xchg
mov
jae
je
cwtl
sub
rcll
movsl
gs
ja
in
jecxz
out
and
repz
hlt
in
mov
or
adc
addr16
scas
mov
ds
outsb
test
inc
adc
and
fnstcw
ja
pop
mov
and
arpl
scas
lock
dec
rclb
movsb
pop
stos
push
pop
imull
dec
push
xchg
pop
dec
xlat
dec
das
hlt
xchg
ret
dec
cs
cmp
jnp
data16
int
dec
push
stos
adc
push
das
xor
xor
push
sahf
loope
es
push
fmull
adc
xor
int
inc
sahf
cli
xchg
pushf
out
adc
sbb
lds
sarb
out
dec
enter
dec
sbb
dec
push
int
cli
pushf
das
in
mov
sbb
movsb
xor
vpavgw
shrb
sbb
enter
outsl
cmp
inc
lret
jp
mov
adc
cs
add
aas
clc
xchg
jp
adc
jbe
xchg
mov
loopne
pop
in
pop
test
push
test
sub
mov
in
arpl
je
cmpl
out
xchg
jo
cmpl
mov
aad
shl
pop
sbb
pop
xchg
push
cwtl
xchg
test
stc
idiv
jp
les
roll
or
or
mov
in
pinsrw
dec
repz
sbb
inc
push
lds
pusha
aad
jns
mov
mov
and
dec
outsl
je
fcoms
inc
scas
and
jecxz
pushl
and
cli
ret
ja
test
and
out
inc
scas
cld
mov
and
out
jno
cmp
cs
sub
or
push
cmp
outsl
pop
adc
rolb
mov
test
mov
adc
xor
out
mov
cmp
add
cs
mov
push
adcl
dec
ret
inc
pop
pop
fst
mov
jbe
sahf
imul
xor
mov
add
mov
mov
cmp
jge
sub
inc
cmp
enter
or
cli
shrb
hlt
jno
sub
aas
sub
pop
push
flds
cwtl
sub
pop
inc
sub
adc
adc
inc
mov
ja
jp
sub
push
movups
nopl
mov
sub
sbb
aaa
sarb
adc
out
mov
aad
sub
hlt
incb
rcl
pop
xor
imul
pop
push
xchg
xorb
lahf
out
or
nop
pop
add
incl
jno
xorb
test
andl
lds
sub
cmp
mov
mov
mov
fwait
xchg
scas
pop
add
outsl
into
addr16
out
mov
dec
fs
cmp
rcrb
xchg
jmp
roll
rcrb
xchg
push
jnp
dec
and
out
addl
out
cli
push
outsl
loop
ljmp
icebp
pop
mov
bound
in
push
dec
pop
jecxz
mov
dec
xchg
mov
pop
pusha
cli
sahf
test
nop
cmp
lods
push
and
pop
add
imul
inc
cmp
in
nop
mov
mov
xor
jg
insb
das
mov
test
fxch
and
mov
cmpsl
jns
fnstenv
mov
mov
push
test
cmp
repnz
xor
into
cmp
dec
xlat
dec
iret
add
and
sbb
xor
adc
fs
cmp
adc
adc
cmc
sbb
daa
mov
adcl
xor
xchg
shrl
mov
push
pop
adc
hlt
sbb
cmp
clc
shrb
push
cmp
inc
inc
stos
imul
inc
pop
aam
inc
test
mov
test
push
mov
pop
or
mov
jl
bnd
or
and
mov
pushf
mov
add
jp
fcmovnbe
cmp
jne
bound
sbb
bound
push
and
and
mov
ss
sbb
fnstsw
push
pop
ret
jnp
mov
subl
push
out
mov
aaa
sbb
mov
and
mov
or
ljmp
shlb
xor
mov
add
adc
jo
movsl
ret
mov
mov
jl
dec
push
test
dec
negb
ljmp
push
leave
inc
and
out
test
pop
sub
imul
mov
test
iret
rclb
dec
mov
into
sbb
mov
fst
notb
lret
fstps
pop
fs
in
add
pop
nop
jnp
dec
sub
push
ret
test
jmp
sbb
pop
adc
scas
lds
cwtl
into
push
jb
test
leave
jb
lea
mov
mov
xor
dec
ret
fstp
mov
rorb
sbb
mov
push
stc
jo
test
fnstcw
loopne
adc
fbld
addl
push
mov
pop
addl
xchg
mov
push
xor
out
out
dec
push
aas
orl
loop
mov
add
inc
lahf
ret
cmc
shlb
xor
cwtl
rclb
pop
inc
sbb
jo
fldenv
inc
or
pushf
mov
mov
jne
nop
mov
dec
mov
ret
stos
push
push
mov
dec
aaa
jae
mov
inc
pop
cmp
aaa
lret
ljmp
cmp
sbb
jecxz
mov
shll
inc
in
aas
and
jb
sub
arpl
pop
out
jnp
jnp
push
cwtl
push
pusha
sti
and
ret
imul
into
ret
dec
adc
mov
dec
std
and
scas
push
test
mov
mov
add
push
in
dec
addb
outsl
jg
or
add
xchg
repz
mov
daa
xor
jmp
sbb
xchg
lea
lods
push
mov
ds
fsubrl
mov
enter
inc
aad
xor
adc
mov
and
arpl
leave
add
sti
loope
dec
mov
xchg
scas
aad
outsl
mov
dec
sub
sahf
dec
push
xor
sarb
clc
sti
and
jg
mov
out
dec
incl
addl
rol
and
or
jge
inc
push
mov
dec
inc
sub
xor
xchg
popa
jmp
push
sbb
xor
fcom
add
fmull
scas
mov
movsb
cmpsl
loope
imul
xchg
test
std
in
jp
sub
mov
and
or
loopne
scas
lahf
ret
and
mov
cmp
stc
cmp
mov
dec
mov
mov
insl
sbb
inc
dec
xor
lock
outsb
scas
or
loopne
insb
test
rcll
inc
in
push
xchg
aam
addr16
bound
xchg
cli
jno
inc
and
bound
adc
mov
xchg
lods
es
xchg
test
std
stc
pop
mov
xchg
jge
adc
loopne
push
mov
insb
inc
push
cmp
or
adc
mov
ficompl
mov
shlb
fcmovb
ja
and
pop
loope
outsl
push
jns
mov
pop
push
cmp
out
mov
cmp
and
mov
gs
aam
mov
jno
imul
or
pop
lret
fs
pop
cmp
push
addr16
ficomps
mov
sub
mov
mov
pusha
je,pn
jbe
pushf
mov
mov
insl
shlb
mov
xorb
xor
or
icebp
fimull
gs
loope
mov
movsb
test
mov
push
pop
mov
mov
or
inc
cmpsb
or
and
ja
add
jae
psubusb
fwait
xchg
shrb
jmp
mov
xor
cmp
lock
lods
and
int3
or
xchg
add
jge
imul
or
and
bnd
mov
stos
push
xchg
push
cld
pop
xchg
fiadds
xor
aaa
iret
inc
sbb
sarb
adcb
mov
adc
aam
cmpsl
pop
sbb
and
scas
in
imul
test
cmp
imul
inc
ds
imul
ror
mov
fwait
fwait
pushf
cmp
mov
sub
mov
mov
pop
push
movsb
popl
add
scas
insl
pop
pop
ret
push
rolb
test
sub
adc
aas
cmp
mov
pop
nop
out
sub
aam
mov
mov
inc
push
nop
not
out
popf
jge
cmp
lds
inc
cmpsb
xor
and
jns
pop
arpl
lcall
stc
jecxz
cmp
arpl
xchg
push
inc
sub
leave
mov
adc
mov
push
imul
jnp
mov
and
jae
aaa
imul
mov
or
jle
dec
pop
push
cmp
and
mov
mov
mov
cmp
push
ds
icebp
or
mov
add
mov
push
push
call
mov
stc
jnp
dec
or
add
inc
frstor
and
pusha
mov
mov
ljmp
bound
pop
rcrl
xor
sbb
dec
ret
cmp
or
xor
xchg
sub
dec
out
xchg
in
aad
ret
lea
sub
daa
sbb
adc
arpl
inc
mov
adc
adc
inc
lret
lret
xchg
stos
add
mov
inc
es
push
inc
mov
pop
jge
std
xor
loope
xchg
inc
ljmp
lds
in
mov
jle
add
pop
lahf
sahf
icebp
xor
sbb
enter
cld
testb
decl
sub
xchg
mov
pop
hlt
fiaddl
inc
loope
xchg
mov
rolb
repnz
dec
int
cmpsl
add
into
xchg
lods
mov
sbb
je
ja
adc
scas
pusha
cmp
pop
cld
jl
daa
popf
iret
stc
pop
int
or
or
aad
push
out
adc
xchg
pop
adc
pop
inc
movl
test
in
icebp
pop
add
sub
insb
pusha
mov
jecxz
and
xor
mov
in
pop
dec
mov
cmp
add
and
push
jg
sbb
rcll
push
rcl
mov
add
adc
and
test
or
push
jge
adc
jne
jecxz
repnz
addb
std
mov
std
lret
lcall
popf
jl
and
cli
push
inc
or
daa
dec
cltd
add
push
sub
adc
dec
mov
adc
add
xchg
imul
mov
pushf
pop
or
sar
pop
inc
loopne
cmc
and
dec
loopne
inc
mov
mov
cltd
and
pusha
push
adc
dec
cmp
test
xchg
mov
outsb
xchg
aaa
xchg
mov
shl
adc
inc
enter
adc
jp
jne
mov
test
dec
add
mov
mov
add
mov
mov
add
and
cmpsl
pop
cltd
jae
andb
xchg
sub
adc
mov
jbe
sub
mov
adc
or
mov
xchg
mov
sti
stos
or
out
pushf
jae
daa
cwtl
xor
jg
cmp
jnp
adc
scas
pushl
jno
in
adc
and
add
out
jmp
push
xchg
jnp
mov
inc
xchg
ds
jae
mov
mov
jnp
adc
dec
movsb
mov
popf
dec
pop
inc
dec
jg
add
call
lock
jne
mov
push
pop
or
inc
sbb
and
xchg
dec
xchg
jle
not
sbb
rcr
cmp
out
adc
and
xchg
pusha
pusha
icebp
add
std
into
push
jg
icebp
dec
filds
fisubrl
cltd
cmpsl
roll
insl
pushw
rcrb
lods
aam
mov
jl
pop
test
ret
jg
cwtl
ljmp
fistl
xchg
loope
sar
and
jle
xchg
dec
stos
lds
mov
or
loop
mov
out
test
inc
flds
and
stos
loop
xchg
ds
ret
and
pop
insl
inc
lods
aaa
jg
lea
sub
pop
call
scas
cmp
and
pop
jl
lods
push
stos
push
fs
jbe
mov
add
add
xchg
scas
aad
xor
inc
cltd
ja
xchg
outsb
xchg
outsb
xor
xchg
mov
jle
push
mov
and
jbe
out
lret
shlb
popf
je
cmp
mov
mov
jno
lret
inc
ljmp
xchg
add
push
out
push
fidivs
pushf
or
inc
jg
or
sbb
into
dec
hlt
ret
and
lods
roll
jb
cmp
sbb
mov
test
aam
xorb
cs
leave
add
xchg
cmp
int3
cmpsb
sbb
mov
daa
movsl
lods
aaa
jno
or
jle
ss
mov
sbb
mov
or
daa
lds
loope
outsb
or
daa
cmp
pop
rcll
repz
or
dec
dec
out
leave
add
cld
pop
or
cmp
out
push
mov
lds
mov
lret
int
fs
pop
xchg
dec
xchg
in
push
dec
cwtl
cs
movsb
add
into
sub
std
mov
insb
ja
out
mov
int3
sub
add
clc
cltd
push
cmp
repnz
jae
and
scas
jne
or
pop
mov
je
ljmp
and
lcall
add
jno
fs
into
mov
repnz
add
cmp
lahf
gs
pop
ja
mul
push
ljmp
jae
test
xor
push
and
shll
cli
xchg
or
mov
add
jl
pusha
push
daa
and
cmp
nop
js
mov
mov
inc
int3
jg
mov
jnp
scas
mov
call
test
push
nop
and
mov
outsb
shr
sahf
scas
sar
xchg
movsb
movsb
les
outsb
pop
pop
cld
imul
loop
subb
mov
dec
and
xchg
test
xchg
lods
push
jne
add
fmuls
stc
in
dec
leave
dec
lcall
aaa
pop
fildl
and
idivb
mov
stc
xchg
push
sbb
push
insb
add
mov
push
jg
movsl
mov
or
inc
pop
or
adc
insb
cmpsl
xchg
lcall
and
adc
stos
mov
bound
cmc
cmp
inc
adc
push
int3
repnz
sbb
pop
lods
jns
mov
sub
jge
xorb
rcl
jp
idivb
inc
imul
lret
dec
pop
out
jb
or
add
stos
jb
mov
into
fsubl
stc
push
and
pop
movsb
cwtl
dec
pop
outsl
gs
ret
in
mov
popa
xor
insl
fcompl
ret
in
jecxz
pusha
fistps
mov
sub
imul
stos
fimuls
push
dec
aas
push
arpl
dec
add
shl
in
add
repnz
push
stos
lods
inc
push
and
enter
out
imul
jns
shl
xor
sub
mov
lahf
call
mov
lret
adcl
jbe
adc
pop
int
aam
ds
inc
pop
lcall
add
and
cltd
pop
jle
dec
mov
sub
xor
cli
fsubp
je
add
cld
xchg
insl
mov
lods
and
mov
loope
movsb
fnstcw
or
movsb
mov
jbe
fdivrs
mov
leave
jne
jo
in
sti
dec
lea
ret
add
shl
iret
je
push
in
sbb
sbb
ja
and
jns
inc
mov
and
mul
sub
xor
jle
cmp
push
sub
jmp
outsb
lret
push
dec
out
adc
inc
scas
dec
testb
mov
sti
popf
cli
addb
out
cmpsb
or
mov
pop
outsl
or
xor
sub
out
loope
fs
jns
lahf
jbe
mov
lret
das
fisubrs
nop
cmp
pop
push
inc
xchg
insb
lock
mov
in
pusha
sbb
stc
add
cmc
enter
add
mov
push
cs
jmp
adc
lcall
je
add
iret
jle
aaa
cmpsb
scas
dec
mov
mov
push
adc
repz
xchg
xchg
jno
ja
pusha
hlt
sbb
and
ja
jae
lea
insl
fmull
mov
daa
adc
ss
gs
out
imul
mov
scas
lcall
fs
ret
inc
xchg
out
dec
pop
mov
icebp
aaa
sub
pop
mov
sub
push
pushf
lahf
out
cltd
dec
testb
sarl
stos
sbb
xchg
gs
cwtl
in
xor
lcall
andl
push
cmp
dec
cmpsl
mov
xchg
lods
in
push
inc
xchg
mov
push
aas
cwtl
cli
lods
mov
dec
gs
fucomp
mov
dec
shll
aas
mov
stos
fadds
sbb
cltd
push
mov
pop
dec
lcall
jb
and
or
out
pusha
or
rcl
and
loop
repz
in
cmp
in
shlb
mov
das
dec
pop
cmc
push
subl
sbb
mov
call
dec
pop
ret
mov
lcall
idivb
mov
ret
xchg
mov
add
and
cmpsl
js
xor
pop
push
mov
sbb
daa
pop
and
insl
adc
rolb
inc
pushf
mov
adc
leave
push
loop
sbb
subl
xchg
jp
mov
rorb
dec
in
mov
dec
lret
mov
loope
shrl
outsl
xor
in
or
jb
mov
pop
test
pop
pop
mov
out
cld
mov
lcall
rcl
test
addl
mov
lds
or
push
sahf
mov
mov
push
sub
call
enter
mov
icebp
pop
pop
js
xchg
icebp
xlat
sbb
imull
add
mov
fsub
and
and
pushf
mov
cmp
sahf
rcrb
mov
xor
cli
or
lds
jp
fnstcw
push
push
shll
jae
inc
lret
mov
push
das
or
leave
movsb
jmp
or
bound
icebp
scas
mov
fimuls
ret
lods
pushf
aad
push
mov
je
test
push
xor
or
je
inc
cmp
leave
dec
shlb
int
int3
xlat
lret
gs
cmpsb
mov
ret
cwtl
sub
sub
outsb
push
xchg
pop
sbb
sbb
shll
add
fwait
sbb
je
fcomps
imul
mov
data16
or
sbb
iret
mov
inc
shll
rcll
mov
mov
ss
sbb
xor
mov
push
cmp
mov
mov
pop
subl
xor
int
lea
gs
mov
sarl
mov
push
cmc
sub
loope
cmp
jle
jo
pop
int3
movsb
dec
adc
jge
rcrl
outsb
add
insl
lcall
pop
pandn
inc
add
pop
sub
and
fsub
xor
inc
shrb
popf
fsubrl
or
outsl
push
mov
push
dec
jmp
cs
adc
sbb
call
mov
nop
scas
into
push
and
test
addr16
push
xchg
fbld
mov
jns
xor
loop
dec
into
loope
test
xchg
int
sarb
ret
loope
in
lock
ss
lods
mov
sbb
out
pop
dec
mov
jecxz
and
and
aad
popa
dec
rolb
pop
dec
jb
sahf
xor
pushf
sbb
sub
icebp
xchg
cmpsl
andl
sub
push
cmp
andb
cmp
fbstp
imul
rcr
mov
movsl
arpl
nop
pop
mov
dec
pop
orl
jno
push
pop
fsqrt
cmp
push
add
repz
xor
es
dec
sub
add
jne
mov
sbb
xor
or
and
int3
enter
lret
outsb
push
mov
stos
cmpsl
jae
divb
adc
sub
cwtl
fisttpll
aaa
push
mov
jl
scas
mov
cmc
sub
test
dec
pop
jb
cmp
mov
sub
and
jno
and
add
dec
cmpsb
and
cmp
jle
mov
inc
pop
rcr
xor
push
sti
icebp
mov
fwait
cmpsl
jge
jl
orb
mov
lods
imul
clc
andl
int
popf
sub
inc
aam
sbb
std
inc
lods
pop
sbbl
fidivs
lcall
add
xlat
int3
lahf
or
dec
cmp
adc
shr
mov
int3
lds
pop
push
pop
scas
pop
xor
mov
lods
in
or
aas
sbb
ret
lods
sbb
jns
sbb
dec
dec
aam
ds
inc
pop
gs
enter
imul
or
call
and
lcall
pop
andl
lock
xor
popf
and
jbe
out
ds
adcl
pop
inc
or
add
sub
xchg
or
lret
rcll
nop
mov
jno
call
jbe
dec
push
mov
mov
mov
out
and
in
xor
pop
dec
pop
pop
cli
pop
xchg
in
push
adcb
out
mov
ret
xlat
rcll
cmp
test
adc
mov
push
outsl
jno
mov
sbb
cs
add
sub
lahf
cmp
bnd
cmp
das
icebp
sbb
sbb
push
fwait
aam
pushf
pop
lret
faddp
in
xchg
mov
xor
jnp
cmp
rol
add
pusha
iret
push
cmc
cld
inc
dec
xchg
test
repz
push
lods
adc
rcll
popf
and
jp
cmp
into
mov
jl
cmpsb
das
or
mov
cmp
aaa
inc
les
fwait
aad
xchg
jae
mov
cmp
stc
out
pop
jmp
cmpsl
incb
test
or
sbb
add
inc
icebp
mov
scas
test
les
clc
adc
push
loopne
jne
loopne
imulb
pop
cs
movsl
or
adc
jae
rcll
lret
jno
leave
in
inc
scas
ljmp
shll
cmp
inc
ss
inc
pop
cmp
or
or
dec
cmp
js
pop
push
movsb
addb
mov
daa
sbb
jbe
iret
es
cs
fcmovnu
cmpsb
xor
bnd
pop
inc
cmp
out
mov
xor
scas
daa
mov
xchg
stc
dec
shrb
add
mov
jnp
out
pop
add
insb
ficoms
test
jb
jne
fdivrs
rcl
xchg
and
inc
jmp
pusha
aam
mov
inc
hlt
jp
sti
jl
inc
leave
adc
les
inc
jle
lret
inc
popf
inc
add
fdivrp
in
cmp
jg
dec
je
dec
add
mov
mov
fcomip
xor
ss
test
pop
scas
add
sbb
fadd
inc
sub
mov
or
jno
pop
test
push
mov
clc
add
pop
xor
gs
rcrl
push
loopne
call
push
jbe
pop
push
xchg
mov
cmp
and
and
cmc
dec
push
roll
jns
jge
addps
inc
sbb
dec
sub
out
negb
push
rorb
mov
je
fdivrs
test
into
insb
and
add
dec
mov
push
lea
das
add
outsb
push
das
enter
and
imul
stos
mov
and
add
mov
inc
in
xor
pop
dec
andb
xchg
inc
jmp
add
push
dec
add
cmpsb
or
cmpsl
out
or
sub
ljmp
dec
mov
add
out
jl
aas
leave
std
test
add
xor
push
mov
cmpb
push
test
cmpsb
jg
mov
jno
mov
jbe
cmpsb
test
int3
outsl
jbe
popf
or
inc
pop
xchg
jne
cld
mov
ss
lret
scas
fimull
test
call
pop
cmc
fmull
in
xor
pop
cmc
jge
jl
dec
ljmp
js
xor
adc
stc
jo
imul
xlat
jecxz
sbb
daa
lahf
push
pop
fmul
xchg
and
js
test
das
int3
cmp
loop
aaa
xchg
inc
cmc
lods
data16
sub
add
mov
sarb
cmp
xchg
mov
lcall
mov
xor
jge
in
loopne
scas
rcll
mov
jno
or
or
and
pop
jno
popa
int3
and
dec
or
scas
jae
loope
fldenv
lcall
in
push
jmp
js
sub
mov
insb
je
dec
test
in
insb
dec
jp
lret
out
pop
cmpsb
int
aad
adc
or
sbb
xor
and
cld
movsl
push
mov
xor
add
push
mov
inc
adc
rorb
xor
pop
adc
in
cwtl
cmp
sub
out
enter
jecxz
mov
mov
sti
jae
stos
dec
mov
jle
sub
mov
lock
ss
arpl
movsl
stc
xchg
lods
in
mov
mov
add
fnstcw
pop
sti
dec
jle
fucompp
push
xor
scas
movsb
inc
pop
sub
xor
adc
push
mov
ss
jp
int
push
negb
dec
mov
pop
data16
loop
mov
sbbl
mov
cmp
loop
cwtl
add
xchg
adc
push
sbb
in
movsl
mov
mov
mov
enter
sub
inc
xor
mov
mov
jge
fwait
lret
jb
mov
xchg
mov
out
test
int3
pop
mov
fstps
orb
mov
movsb
cmp
test
nop
mov
adc
cltd
imul
daa
mov
orb
adc
int
ja
mov
cmpsb
lds
aaa
lods
push
fldl
lret
gs
mov
mov
movsl
stc
nop
fildl
xorb
dec
stos
add
daa
clc
icebp
mov
jno
lock
jno
nop
adc
jae
ss
xor
subl
push
clc
cmpsl
lret
aad
adc
in
je
dec
pushf
jae
push
xor
ja
mov
cltd
pop
mov
and
sbb
insb
mov
jne
fists
xchg
xchg
decl
push
fdivrl
icebp
mov
popf
in
jno
sbb
mov
cltd
or
je
sbb
sbb
lods
ja
lret
andb
and
cmp
movsl
ljmp
cvtps2pd
sbb
xchg
dec
adc
mov
sbb
pop
lahf
imul
and
lret
hlt
lcall
mov
mov
jmp
out
pop
rcr
pop
sub
push
push
fsubrl
inc
mov
inc
or
xor
pop
dec
mov
out
and
cs
push
adc
in
out
fsubs
adc
inc
sub
imul
and
aas
or
mov
in
mov
int3
popl
shlb
cmp
lcall
aad
mov
int3
cs
test
xchg
cmpsl
push
lea
leave
cmp
int
mov
cwtl
pop
adc
mov
jno
dec
arpl
jmp
xchg
jae
adc
or
and
es
gs
and
sub
sub
mov
enter
jmp
push
popa
xchg
cmp
js
xchg
push
inc
fidivrl
xchg
push
fnsave
and
out
xlat
mov
jae
mov
jmp
ret
xor
jmp
or
fwait
imul
sbbb
icebp
jp
lgs
xchg
and
sub
and
filds
mov
fdiv
lahf
aaa
aas
xor
stc
ss
push
scas
pusha
inc
mov
shrl
cs
nop
pop
dec
ljmp
push
mov
sub
cmp
sub
dec
cltd
xchg
lods
pop
fstps
dec
mov
popa
test
push
jbe
ret
adc
mov
sahf
inc
adc
mov
rclb
mov
fsubrl
lret
repz
mov
sub
in
fwait
sbb
stc
or
ljmp
test
sbb
test
pop
sahf
jne
ret
add
neg
filds
jno
pusha
dec
fsubr
out
in
ret
and
insl
xor
idivb
lds
cmp
push
xchg
adc
xchg
sub
or
or
fists
outsb
xchg
pop
ds
arpl
js
push
mov
pop
cmpsb
pop
into
lcall
push
fstpt
push
in
push
ds
inc
dec
mov
bnd
ret
fwait
aam
xlat
sbb
sbb
xor
adc
inc
rcr
jno
out
xchg
inc
adc
pop
pop
loope
loopne
cmc
scas
call
jb
or
xor
lds
rcrl
subb
mov
ds
jmp
daa
sub
dec
bound
dec
aaa
mov
ret
cmp
cmpsb
mov
cs
js
adc
pop
pop
mov
pop
pop
jge
cmpsl
shr
and
xor
mov
dec
je
or
cwtl
jo
sti
mov
lds
enter
fmuls
mov
test
add
iret
dec
dec
xchg
add
dec
ss
aam
mov
and
loope
inc
sub
pop
fistpl
movsl
scas
jmp
cli
xor
jl
or
fwait
or
pushl
into
sbb
jb
and
adc
jle
lea
push
xor
sub
cwtl
pop
sti
add
adc
adc
leave
jg
add
mov
dec
rcl
arpl
clc
pop
jle
out
xor
ret
dec
iret
repz
mov
pop
push
ljmp
mov
push
cltd
mov
imul
cmp
push
and
inc
in
or
inc
inc
into
stos
inc
push
mov
sub
mov
jecxz
lock
xchg
int
sbb
loop
enter
les
nop
dec
std
je
cmove
sbb
pop
test
pop
ss
inc
dec
lahf
pop
cmpsl
mov
int3
shl
mov
cmc
decl
adc
and
adc
and
inc
push
orl
pop
or
sbbb
cmpsl
add
js
fistpl
inc
into
and
lock
bndstx
xchg
jle
jmp
lods
fbld
lcall
xor
pop
into
pushf
xor
xchg
iret
jmp
xlat
mov
xor
pop
fistl
shl
rclb
daa
fnstsw
xor
xor
jl
cmp
scas
fcompl
ds
stc
or
adc
push
sbb
pop
stos
ficomps
jl
mov
lcall
cmp
mov
fdivrs
and
daa
xor
cmpsl
shl
xlat
incl
out
jp
inc
inc
jb
mov
icebp
lds
jge
in
and
lret
ds
iret
xlat
xchg
lea
pop
mov
pop
push
cmp
xchg
out
xlat
adc
mov
mov
mov
int
rclb
mov
mov
das
mov
or
fnsave
and
cmp
inc
lret
sub
and
mov
repnz
add
enter
shlb
int3
adc
xor
xchg
add
or
dec
cmp
popf
int3
sub
cmpsb
jmp
add
sbb
adc
movl
and
adc
pop
and
inc
cmp
inc
scas
mov
and
jmp
sar
stc
ret
test
out
mov
mov
dec
std
insl
aaa
int
dec
imull
lcall
rcll
in
sarb
jnp
cmp
rcrb
or
rcrb
ret
in
test
push
jmp
push
mov
mov
addr16
fnstenv
arpl
cli
jmp
push
pop
cli
insl
and
sbb
pop
fisubl
in
jo
or
xor
lcall
sub
or
dec
out
out
movsb
sub
or
inc
addr16
in
loopne
mov
je
ds
lcall
and
rorl
jbe
in
or
dec
push
xchg
sub
pop
jb
xchg
pop
or
sub
lea
mov
les
stos
xlat
movsb
xor
pop
int
es
into
das
rorb
roll
cs
fisubs
mov
xor
pop
test
jmp
loope
aaa
mov
or
mov
rcrb
fisubs
xchg
leave
pop
mov
addr16
daa
fiaddl
ljmp
or
xchg
xor
packuswb
sub
cmp
lock
clc
fwait
test
fsubp
rcrl
sbb
lea
lods
mov
jne
enter
adc
xor
adc
mov
sbb
pushf
scas
cmp
sbb
sarb
int3
sarl
aad
and
fldcw
mov
mov
push
or
mov
push
cld
pop
pop
fwait
lret
cmp
ja
lea
test
fdivp
int3
sti
ja
mov
pop
or
mov
pop
movsb
push
adc
popf
imul
aaa
mov
ss
fistpl
repz
add
cwtd
sbb
push
bound
cmpsl
add
movsb
call
outsb
sbb
stc
add
gs
pop
lahf
push
xor
adc
xor
jne
xor
pop
mov
loope
aam
sbb
pop
mov
fstl
push
mov
sub
jno
gs
lea
into
mov
cltd
outsl
repnz
push
mov
pop
aaa
and
dec
lahf
jnp
xor
shl
scas
lods
push
bnd
repz
stos
jb
push
push
adc
cmp
movsb
repnz
pop
cmp
das
dec
out
jae
push
and
or
and
movsl
fmuls
sti
fldcw
fdivl
pop
xchg
shl
sub
xchg
or
sbb
sbb
lods
mov
push
fcmovu
insl
cmp
ja
jne
adc
jl
push
dec
outsb
xchg
inc
mov
ret
dec
daa
push
xor
add
shll
mov
leave
fidivs
sub
push
lock
and
adc
cmp
popa
and
stos
dec
mov
cmpsb
iret
dec
lds
call
bswap
ja
inc
in
fnstenv
cmp
push
pusha
push
cmp
push
lcall
test
pop
leave
or
xor
cli
push
mov
loope
lds
sarb
and
negl
fdiv
enter
add
sahf
lret
out
xchg
stc
xchg
or
mov
mov
push
outsl
mov
pop
out
add
or
sub
mov
aad
imul
rorb
add
sahf
out
mov
mov
cmpsb
mov
mov
pop
lret
mov
adc
jb
push
loope
cli
pop
pop
aam
stos
in
aam
jo
adc
loop
or
mov
jmp
fcomps
dec
sub
int
cld
dec
push
inc
into
mov
aaa
jmp
aas
mov
dec
outsl
xchg
adc
push
out
sub
imul
leave
popf
cli
gs
add
dec
mov
mov
cwtl
fidivl
pop
scas
fidivrl
scas
jecxz
adc
lret
fadds
aad
jo
sti
movsb
mov
jo
dec
pop
aas
jne
xor
sub
or
test
adc
subb
fs
jb
adc
repz
mov
ljmp
sub
adc
sbb
es
push
ljmp
push
mov
pop
push
mov
fld
mov
inc
xor
imul
lret
mov
jmp
notb
cmpl
add
testl
xchg
pop
push
mov
dec
cmp
sbb
adc
inc
jmp
sbb
test
xchg
adc
mov
xor
dec
xor
gs
mov
in
fcomip
xor
idivl
adc
test
imul
inc
arpl
push
xchg
adc
inc
add
pop
ret
lcall
xchg
ret
out
push
fwait
mov
cmpsb
pop
dec
xchg
mov
out
adc
inc
adc
pop
or
xchg
bound
cmc
sub
jge
and
push
jmp
in
dec
cmc
in
fcomip
shll
or
shll
cs
mov
mov
or
cmpsb
pop
xlat
jmp
adc
in
dec
rcrl
pusha
jp
clc
cmpsb
rcrb
rcll
lock
insb
daa
call
aam
add
xlat
bound
pusha
hlt
sbb
xchg
ds
ss
out
popl
cmpb
mov
jae
dec
imulb
lea
cmp
or
rol
test
lock
xchg
xor
pop
fxch
lcall
lret
and
pop
mov
xchg
pusha
lds
inc
mov
shrl
jle
sbb
jnp
sub
fadds
gs
repnz
lods
pop
adc
fsub
jnp
cmp
inc
popf
jl
flds
popf
push
inc
sahf
ljmp
mov
fsubr
mov
sbb
xchg
mov
js
mov
adc
jnp
repz
xchg
mov
add
mov
xchg
xor
cltd
xchg
mov
jae
inc
pop
mov
mov
icebp
and
imulb
cmp
mov
out
mov
loopne
xor
xchg
shlb
cmp
loopne
imul
incb
cmpsl
ret
movsl
push
xor
negl
fs
ror
mov
pusha
xchg
iret
arpl
push
mov
adc
adc
or
ja
rclb
or
repz
sti
mov
test
cwtl
shlb
sarb
pop
inc
test
push
dec
mov
lds
mov
movsb
or
lahf
std
fs
aad
cmp
sub
js
enter
adc
repz
push
loop
aas
es
add
dec
ret
sbb
popa
inc
lcall
loop
xor
pop
jge
stos
push
rcrl
dec
orl
cmpsl
cwtl
sbb
mov
lea
fistpll
int
mov
push
cmp
inc
sbb
test
stc
addr16
cmp
jl
aaa
push
aam
movsb
fisubrs
mov
xor
sub
jle
inc
cmp
xchg
sbb
sbb
pop
in
jns
mov
push
inc
mov
lods
testb
loopne
adc
and
adc
pop
cwtl
adc
dec
pop
dec
loop
pop
cmpl
cmp
mov
push
sub
push
inc
and
sahf
and
filds
leave
sbb
lret
test
push
xor
mov
push
and
xor
into
mov
fldcw
imul
xor
test
inc
arpl
mov
es
mov
fisttpll
inc
fbld
out
jmp
sbb
jecxz
jecxz
ss
mov
mov
xor
fcmovne
and
push
out
sbb
mov
jecxz
aad
jmp
data16
mov
ret
pop
pop
or
ret
andl
gs
lahf
dec
pop
shl
sub
jbe
bound
xchg
mov
mov
stos
jno
fists
add
jge
sbb
imul
pop
pop
or
pop
jbe
repnz
mov
loope
cmp
adc
orl
dec
icebp
das
inc
dec
pop
mov
aas
aas
inc
imulb
or
xor
xchg
mov
int3
daa
fisttpl
mov
loopne
outsb
cld
mov
es
xor
or
inc
call
stos
push
mov
jle
rcr
shll
les
sti
xchg
fnstsw
cs
jl
idivl
add
sti
mov
imul
and
lahf
pop
pop
pop
lods
movsb
fs
mov
pop
pop
ffreep
fdivs
out
arpl
xchg
hlt
lods
adc
int3
pop
cmp
cwtl
aas
or
movb
enter
cmp
and
push
pushf
pop
popw
lods
jle
adc
js
mov
xor
int3
dec
cmpsl
daa
divw
mov
aaa
fildll
add
xchg
lock
jmp
div
cmp
jae
or
pop
inc
test
cli
add
inc
cmc
cwtl
push
sub
or
iret
pop
jbe
ret
daa
fs
jns
mov
out
loop
or
push
or
mov
test
fmul
das
sub
repnz
push
cmpsb
sub
mov
mov
adc
ss
fistps
cmp
and
jecxz
adc
adcl
bound
pop
shlb
in
inc
dec
pop
cmp
sub
dec
and
test
dec
mov
ret
inc
add
jb
adc
dec
adc
pop
adc
ficomps
ljmp
or
adcb
mov
add
push
sub
xorb
es
xchg
jnp
insl
dec
call
enter
sub
push
popa
push
divb
pop
or
pop
fidivl
arpl
in
scas
add
pop
jae
pop
mov
jbe
jo
lods
repz
gs
pop
test
and
clc
sub
cmp
sub
push
iret
aaa
push
mov
iret
movsb
cltd
or
iret
clc
leave
fisubl
shr
jp
je
push
int
mov
stos
sub
xchg
mov
out
fbstp
imul
push
dec
mov
ds
rorb
call
bound
sbb
repnz
adc
cli
push
in
or
jo
push
pushf
push
pop
rclb
sbb
xchg
push
std
fcoms
sbb
xchg
sub
and
adc
push
sbb
addr16
cltd
pop
jmp
imul
lock
sub
ds
mov
or
int3
xchg
stc
jnp
mov
mov
sahf
scas
orb
gs
push
aas
loop
stos
fmull
inc
pop
stc
in
push
rcll
pop
mov
movsl
cwtl
xor
inc
fs
and
les
pop
cwtl
add
rolb
cmp
dec
std
push
dec
call
mov
pop
into
inc
sub
add
pop
jnp
aas
mov
or
and
or
xchg
lret
inc
sarl
pop
out
movsb
ljmp
jo
stc
adc
jo
xchg
shl
lock
ret
mov
arpl
clc
cmpsb
test
mov
test
imul
std
dec
add
jge
jle
and
inc
or
clc
cmc
pop
out
aad
sbb
cwtl
push
dec
andb
or
mov
hlt
add
adc
cmp
enter
cld
inc
ror
shll
aas
adc
lret
insb
inc
push
push
inc
popf
dec
es
pop
inc
sub
xchg
imul
cmp
out
lods
lret
sbbl
aaa
iret
push
mov
push
leave
stos
jg
lret
jp
xchg
mov
sbb
rcrb
popf
push
scas
mov
sub
mov
mov
call
xor
lock
out
stc
arpl
jle
orl
aam
push
jo
xor
dec
daa
fsub
sbb
mov
lret
insb
sbb
xchg
mov
jae
add
aad
xor
push
add
mulb
jg
push
aad
insl
iret
cmpsb
jns
out
jecxz
loop
mov
iret
aad
add
sarb
and
xor
lods
cmp
out
shlb
or
adcl
xchg
scas
test
cmp
pop
sbb
movb
incb
add
mov
fscale
pushf
mov
xchg
xor
fnclex
daa
xlat
dec
fcompl
orb
or
xor
test
test
clc
xor
scas
mov
sbbb
push
xor
leave
aam
cmp
std
dec
add
adc
fiaddl
mov
push
and
ljmp
mov
mov
shll
iret
dec
fldln2
dec
push
pushf
jno
daa
mov
jge
jmp
mov
adc
in
dec
xchg
mov
xchg
mov
outsl
pop
jae
ret
jg
int
mov
mov
cmpsl
enter
fiaddl
insl
mov
adc
pushf
int
ds
add
mov
faddl
test
or
add
lods
aam
arpl
sbbl
mov
popf
dec
sbb
jle
add
aaa
rolb
int3
loope,pn
stos
jns
dec
mov
mov
xchg
ljmp
shl
sub
cmp
mov
loop
mov
aas
pusha
jnp
aaa
or
add
mov
aaa
sbb
clc
adc
adc
icebp
adc
xor
add
jae
in
repnz
push
xor
add
jmp
mov
xchg
mov
mov
not
add
sbb
mov
mov
icebp
add
fsubs
jne
hlt
xor
cmovle
fwait
push
leave
sbb
cmp
xchg
mov
cmp
movsl
mov
in
jns
cmc
xor
xchg
jb
stc
stos
push
lcall
dec
xchg
adc
or
fdivs
xchg
mov
pop
arpl
mov
xchg
shrb
in
stos
jp
pusha
mov
ficompl
xchg
sub
shrb
test
inc
mov
push
inc
pop
push
fists
in
mov
inc
bound
dec
mov
jge
pop
dec
pusha
movsl
and
jne
sbb
cmpsb
or
mov
jo
int
sub
inc
cmc
out
xchg
mov
test
js
repnz
sub
cmp
les
out
cmp
aam
lock
pop
repz
nop
insl
mov
push
hlt
lret
arpl
lahf
add
clc
sti
out
gs
lds
mov
out
imul
xor
mov
aad
xor
push
out
imul
insb
mov
mov
jae,pt
imul
inc
ss
mov
in
in
mov
bound
dec
shlb
dec
popa
pop
mov
mov
sti
xor
jge
sbb
mov
and
popf
push
das
pop
filds
pop
ret
sbb
sub
push
cmp
jecxz
push
rorl
dec
jmp
pop
lret
and
js
fwait
xchg
rorl
ljmp
hlt
xchg
lret
cmp
dec
scas
in
fcomp
stos
test
rorl
sub
jns
pop
mov
or
inc
cs
fwait
jne
daa
pop
outsl
xchg
pusha
stc
movsb
add
xchg
mov
dec
imul
nop
jl
es
cmp
loopne
pop
cmp
stos
mov
cmp
push
sahf
movsb
or
lahf
jnp
mov
sbb
movsl
or
dec
pusha
pop
xchg
lcall
adc
cld
mov
lds
ja
js
mov
and
cld
shlb
or
dec
fwait
stc
in
icebp
lret
jbe,pn
lock
adc
add
aam
sub
movsb
ja
sbb
jecxz
vmread
xchg
jl
mov
adc
and
aam
sbb
jno
test
bound
dec
dec
push
sbb
je
sbb
subb
mov
jecxz
push
call
out
push
cmp
stos
negl
sarb
mov
jns
inc
mov
sahf
fwait
jnp
cwtl
dec
mov
loop
scas
sbb
mov
int3
adc
pop
xor
xchg
push
cmp
lret
in
xor
leave
shlb
and
ljmp
ds
jae
push
out
shll
cmp
clc
xchg
ficompl
xchg
xor
loope
shll
fs
or
incb
mov
dec
push
sbb
outsb
adc
divb
push
sti
stos
dec
sub
fdivrl
movsb
and
notl
inc
test
mov
inc
stos
pop
jp
or
push
add
jmp
dec
xor
cmp
scas
sub
xor
mov
push
and
or
fmulp
into
fbstp
addr16
xchg
ret
inc
sarb
cli
pop
mov
adc
dec
scas
jb
add
mov
inc
mov
or
push
pop
mov
sarl
sub
lods
fldl
push
test
jg
xchg
sub
jl
adc
inc
shr
xorb
popa
subl
pushf
mov
cmpsb
std
sbb
add
lods
xor
and
push
movsb
pop
inc
rclb
stos
pop
mov
stos
mov
mov
mov
test
gs
jg
mov
inc
lea
and
je
mov
add
cltd
dec
push
adc
sbb
enter
test
repz
jecxz
fmuls
lods
jnp
cmpsl
popf
and
fbstp
inc
shll
movsl
addr16
xor
push
int3
movb
mov
out
xor
add
imul
adc
fildl
iret
dec
cmp
sbb
imul
and
out
mov
shrb
ret
popf
or
mov
lods
add
mov
ret
testl
insb
shr
push
js
shrl
mov
mov
inc
mov
pop
jmp
cmpsl
xor
loopne
xor
pop
or
movsb
sub
es
xor
sub
pop
sbb
mov
and
ljmp
push
rolb
push
lret
test
mov
iret
xor
dec
mov
aas
sbb
mov
adc
mov
sbb
jg
mov
xchg
jns
mov
cli
cwtl
add
clc
shl
pop
movsl
xchg
lret
mov
add
adc
sahf
fpatan
mov
repz
inc
mov
stc
mov
push
inc
pop
pop
xor
je
aas
hlt
movsl
cmp
mov
cmpsb
sbb
inc
jne
insb
mov
add
out
int
mov
out
in
mov
sub
mov
or
jmp
pop
cmp
or
pop
or
mul
lret
mov
dec
cmc
test
arpl
imul
pop
outsl
sbb
stos
push
stc
push
imul
cli
pushf
scas
inc
enter
push
scas
cltd
and
sbb
xchg
call
xchg
loopne
data16
and
imul
xchg
inc
mov
push
divb
pop
pop
mov
cmp
stos
imul
xor
ljmp
jns
pop
repz
push
je
icebp
les
xor
and
test
addl
insb
dec
cli
cmp
push
sbb
pop
jl
add
or
data16
test
xor
sub
dec
sbbb
cmp
pop
xor
xor
ret
inc
mov
les
push
out
and
lods
push
dec
xor
or
pop
push
test
ds
rorb
mov
inc
mov
nop
adc
fisttpl
es
jle
mov
sbb
jmp
pop
insb
loopne
rolb
inc
int
sub
inc
incl
push
sub
into
mul
fcoml
shll
dec
adc
adc
add
sbb
fldl
filds
mov
adc
stos
fs
arpl
mov
or
lret
xchg
repz
scas
dec
lods
push
gs
iret
sub
leave
dec
add
xchg
addr16
std
lds
xchg
sub
pushf
xchg
push
ss
iret
test
cwtl
adc
pop
push
adc
popf
in
in
pop
dec
jnp
sub
adc
jmp
shll
cs
or
xchg
fists
scas
cmp
test
xchg
rol
adc
inc
sub
adc
insl
fimuls
in
mov
mov
jle
gs
out
outsb
dec
mov
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
pop
or
test
gs
fidivl
test
and
adc
loope
test
es
mov
sub
scas
sub
xchg
outsl
mov
xchg
out
jae
push
sahf
outsb
add
add
repz
test
add
push
addl
call
jmp
jnp
js
ljmp
add
add
jmp
xchg
pushf
or
xor
cmp
or
dec
fistpll
sub
cmpl
je
lea
popa
cmpl
jne
call
jmp
mov
lret
push
aaa
ret
call
rcll
sti
movl
jmp
ret
test
stos
int
mov
lods
cmp
sbb
loope
incl
push
addl
jmp
das
mov
inc
mov
push
mov
mov
cwtl
mov
inc
aam
dec
out
repz
cmc
inc
push
hlt
push
cld
jnp
aas
scas
lret
mov
sahf
stc
or
aaa
mov
dec
mov
imul
popf
jns
push
shlb
call
lahf
cli
or
inc
rclb
sub
scas
aas
pop
test
inc
mov
or
sbb
inc
xor
push
lds
lods
dec
cmpsl
sub
and
sub
std
insl
hlt
pop
in
xor
sbb
sub
pop
cwtl
push
pushf
sti
push
hlt
les
mov
mov
pop
push
test
jge
jge
insb
loop
je
icebp
outsl
lcall
pop
cmp
cltd
push
cmpsl
push
in
pop
int3
stos
iretw
in
jo
xorl
xor
ficomps
jbe
cmpl
jl
jne
push
shlb
testb
mov
cmp
xlat
inc
and
xor
je
out
pop
jns
popa
add
adc
jl
jne
and
insl
std
test
inc
lret
lret
jae
xchg
dec
push
xor
sub
cwtl
push
imul
mov
inc
mov
inc
aam
sub
mov
sbb
ss
add
add
jo
insb
or
in
or
jns
bound
pop
jp
pushw
mov
jle
cmp
jg
cmp
ret
xchg
fs
adc
pop
repnz
fs
sub
lds
jbe
dec
sub
cwtl
decl
lea
jns
and
out
adc
push
in
sti
sahf
insl
mov
shlb
movsl
xor
repz
cmc
sbb
shll
out
adc
or
xchg
or
cmp
insb
loop
je
push
lea
out
jl
notb
add
sbb
imul
sub
push
sbb
loopne
loopne
jb
clc
imul
adc
int3
inc
and
mov
pusha
notb
and
shll
mov
insl
hlt
pop
mov
es
xchg
movsl
xor
lock
pop
adc
call
add
add
add
add
repz
add
add
add
add
add
add
pop
repz
and
repz
js
jae
cs
insb
add
add
add
sub
sbb
push
jne
inc
insb
insb
dec
outsl
jae
inc
popa
insb
insb
inc
popa
arpl
pop
rcll
push
inc
clc
popf
cmp
sbb
sub
sub
xchg
add
mull
icebp
push
pop
fimuls
add
inc
fidivrl
pushf
sti
push
neg
pop
int3
stos
data16
jne
mov
leave
inc
shll
xchg
repz
test
sti
xor
push
shlb
sub
mov
sbb
or
xchg
add
data16
mov
shlb
adc
dec
dec
fmuls
fcomps
inc
fisttpl
fnstsw
es
inc
mov
rcrl
pop
mov
mov
dec
aad
sub
sub
sub
icebp
popa
add
pop
fiaddl
mov
jmp
aam
fimuls
push
rorb
push
std
insb
mull
icebp
dec
in
aad
dec
lret
insb
or
addl
push
pusha
loope
adc
pop
pushf
sbb
aad
lds
pop
cmp
sub
push
shlb
loop
jg
imul
mov
popf
or
sub
push
xchg
repz
vpunpcklbw
xchg
pusha
mov
lret
int
shlb
push
cld
adc
and
cli
push
mov
mov
sbb
or
add
je
inc
dec
dec
imul
data16
imul
add
imul
inc
insb
outsl
jae
add
pop
addb
imul
push
je
jo
cmp
imul
gs
push
insb
gs
fsubrs
imul
jb
jo
jb
dec
gs
fs
ja
jbe
dec
jne
dec
jo
outsb
add
cmpsl
insl
imul
insl
dec
jne
add
insl
imul
gs
jb
dec
gs
fs
inc
gs
inc
push
add
or
imul
insl
push
gs
popa
jb
add
popa
jbe
dec
jne
push
popa
jne
add
mov
dec
jne
push
jb
je
add
jbe
dec
jne
push
jb
jo
jb
dec
gs
fs
ja
jbe
dec
jne
push
gs
je
jno
or
jbe
dec
jne
inc
insb
outsl
jae
add
gs
jne
push
outsb
jo
gs
jb
dec
gs
fs
icebp
adc
arpl
dec
jne
inc
gs
jne
inc
gs
add
imul
dec
jo
outsb
add
jns
insl
imul
insl
push
jb
jo
jb
jns
dec
inc
push
dec
inc
dec
xor
cs
insb
add
push
push
xor
xor
fs
insb
add
insb
inc
imul
dec
dec
cs
insb
add
je
inc
add
adcb
dec
popa
jae
inc
jb
outsl
jb
cltd
repz
mov
dec
jne
je
inc
jns
gs
outsl
push
imul
push
inc
outsl
insl
jo
jb
push
je
imul
outsl
insl
jo
jb
push
je
imul
je
je
imul
push
add
popa
fs
gs
fs
je
add
popa
jo
imul
je
je
imul
inc
add
inc
popa
fs
jb
je
push
je
add
je
inc
dec
inc
push
add
gs
gs
imul
je
popa
insb
inc
jb
add
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
outsb
xchg
mov
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
jo
je
imul
jae
jb
add
jb
popa
je
add
jle
cmp
dec
inc
dec
popa
jo
je
imul
insb
push
outsb
ja
outsb
fs
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
fsubrs
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
popa
jbe
inc
inc
add
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
popa
je
insb
je
jmp
gs
je
jb
jne
dec
outsb
outsw
inc
add
inc
gs
imul
cmp
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
int
leave
bound
popa
imul
jo
imul
das
push
gs
popa
outsb
fs
gs
outsl
jne
je
rorl
xchg
inc
popl
je
outsl
arpl
push
imul
je
je
dec
popa
outsb
fs
add
je
push
dec
outsb
outsw
add
inc
gs
jns
je
insl
push
imul
inc
jb
outsl
jb
outsl
fs
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
je
jne
jb
outsb
je
push
add
inc
insb
outsl
bound
inc
insb
popa
addr16
push
lret
pop
ds
fwait
inc
gs
jb
arpl
jae
gs
imul
inc
gs
popa
insb
jne
add
inc
gs
imul
inc
outsb
fs
outsl
arpl
jg
gs
jo
gs
jb
jns
insb
jae
jb
insl
jo
inc
add
insb
jae
jb
insl
jo
add
imul
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
arpl
inc
xlat
ds
insb
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
je
outsb
fs
inc
imul
outsl
bound
inc
fs
je
insl
inc
add
popa
fs
imul
bound
inc
imul
inc
add
push
insb
jae
insb
insb
outsl
arpl
push
gs
jbe
outsb
je
imul
inc
gs
gs
inc
je
insl
add
jb
jo
outsb
inc
add
insb
jne
push
inc
jne
data16
add
inc
jne
insb
imul
outsb
fs
gs
and
push
outsb
insb
outsl
arpl
imul
arpl
inc
add
inc
imul
outsl
dec
outsl
arpl
inc
imul
test
insb
gs
imul
jae
gs
push
imul
outsl
bound
dec
popa
outsb
fs
add
je
imul
es
dec
outsl
arpl
inc
jb
add
int3
sbb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
adc
jecxz
push
imul
outsl
dec
jne
je
inc
jns
gs
ret
jb
imul
outsl
arpl
jae
push
imul
push
add
outsb
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
stos
sarl
insb
jae
gs
popa
insb
jne
add
in
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
gs
imul
gs
jbe
js
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
into
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
je
insb
je
jno
gs
jb
imul
imul
gs
gs
jae
push
gs
popa
jo
outsl
jb
add
je
popa
jae
inc
jb
outsl
jb
lret
jno
adcb
je
inc
imul
inc
jb
popa
je
inc
imul
ficoml
push
gs
insl
gs
push
add
outsb
fs
gs
jne
arpl
add
push
popa
imul
je
jo
gs
bound
arpl
dec
push
je
inc
push
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
dec
outsl
popa
fs
gs
jne
arpl
push
les
int3
imul
imul
jae
pushf
push
xchg
repz
jle
gs
jne
jb
outsb
je
push
dec
add
jb
jo
inc
add
inc
insb
outsl
bound
inc
jb
add
rolb
outsl
bound
push
imul
popa
jo
jb
add
inc
gs
outsl
fs
gs
imul
add
scas
inc
mov
dec
gs
inc
imul
jmp
jb
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
dec
outsl
arpl
gs
jne
arpl
pop
ret
dec
outsl
arpl
push
gs
insb
insb
outsl
arpl
dec
gs
jo
gs
insb
insb
outsl
arpl
cmp
jle
insb
outsl
bound
push
gs
insb
insb
outsl
arpl
and
jle,pt
inc
gs
jne
insb
push
popa
je
dec
popa
insl
gs
add
je
jae
jb
gs
jne
je
inc
dec
inc
add
pop
insb
jae
jb
outsb
push
add
dec
sub
insb
outsb
inc
add
xchg
pop
inc
jb
popa
je
push
push
add
gs
imul
int
adc
lcall
jb
jbe
je
push
jb
imul
imul
dec
outsl
popa
fs
imul
add
push
mov
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
mov
je
inc
jbe
outsb
je
add
je
outsb
jne
pushf
inc
insb
outsl
bound
push
outsb
insb
outsl
arpl
inc
push
je
dec
push
add
inc
insb
outsl
bound
dec
outsl
arpl
dec
imul
inc
imul
add
xchg
xchg
je
imul
bound
gs
add
inc
push
xor
cs
insb
add
inc
imul
je
imul
push
jb
arpl
fs
jae
add
inc
jb
gs
imul
aad
gs
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
jb
popa
je
inc
imul
jns
add
dec
gs
jo
insb
insb
outsl
arpl
push
gs
outsb
jne
push
push
gs
jne
jb
outsb
je
imul
jns
add
je
outsl
insl
insl
popa
outsb
fs
imul
fcmovnb
inc
gs
jb
arpl
jae
gs
jo
and
cmp
imul
inc
jb
je
arpl
push
arpl
outsb
add
popa
insb
inc
insb
insb
outsl
arpl
inc
jb
ja
fs
mov
dec
jmp
sti
xlat
movsb
test
insb
jmp
adc
in
jbe
pop
fcompl
stos
repz
bound
xor
mov
incb
hlt
lock
dec
adc
call
je
gs
pop
ljmp
lods
xor
repnz
loop
inc
aas
shr
imul
movsb
aam
fcomip
xchg
pop
jb
dec
in
lfence
sbb
outsl
in
pop
movsb
dec
jmp
cmp
movsb
test
add
add
imul
rclb
int
fdivs
repnz
repz
rcrb
xor
aas
cmp
jns
mov
je
xor
in
sbb
in
rcrb
pop
inc
dec
lea
idiv
jb
hlt
aam
ljmp
dec
repnz
ljmp
push
sbb
inc
popf
cmp
adc
jb
dec
in
imull
xlat
mov
push
push
jmp
sbb
test
imul
imul
jbe
push
fdivrl
stos
repz
push
cmpsl
in
sbbl
sbb
test
in
adc
and
jecxz
mov
loopne
pusha
rcrb
inc
dec
or
mov
stc
sbb
jmp
fisubrs
push
repnz
mov
aas
sarb
inc
popf
leave
adc
jb
pop
in
aaa
stos
ljmp
out
pop
ljmp
test
jno
jno
mov
and
xchg
push
es
mov
push
cmpsl
cmp
mov
sub
sub
and
push
loopne
and
lahf
inc
adcb
or
clc
push
jmp
shrb
repnz
ljmp
js
pushf
pop
inc
popf
lock
jb
pop
in
ja
ljmp
jmp
jmp
add
movsb
test
jo
jno
mov
and
push
push
es
mov
repz
push
cmpsl
mov
cmp
insb
adc
hlt
and
xchg
and
jg
dec
cld
or
loopne
lahf
inc
lods
adcl
or
xchg
push
jmp
stc
lods
xor
repnz
mov
aas
rcl
imul
mov
adc
jb
pop
in
mov
ljmp
jmp
jmp
inc
fsubl
stos
mov
and
pop
push
fmull
mov
push
cmpsl
cmpsb
nop
sahf
aas
mov
mov
lods
adc
hlt
sub
xchg
and
or
mov
adcb
or
push
stc
pop
ret
jmp
popf
scas
xor
repnz
ljmp
jae
sbb
inc
popf
pop
enter
xchg
pop
jb
pop
in
imull
xlat
mov
sbb
test
fisubrs
jno
mov
and
xlat
push
fsubrl
stos
repz
push
cmpsl
xor
sahf
aas
leave
cmp
in
adc
and
jecxz
scas
or
pusha
rcrl
inc
inc
or
out
gs
mov
ljmp
ljmp
jae
pop
pop
inc
popf
test
adc
jb
push
in
aaa
stos
ljmp
call
jmp
ret
fsubl
sub
in
jbe
push
faddl
mov
push
cmpsl
pop
mov
lcall
adc
hlt
mov
xchg
and
or
and
lahf
inc
xchg
addb
and
stc
fld
jmp
sbb
push
repnz
loop
dec
aas
rolb
inc
popf
and
adc
jb
push
in
ja
ljmp
ljmp
add
movsb
test
je
jno
mov
and
push
push
fdivrl
stos
repz
push
cmpsl
sti
mov
pushl
adc
xchg
and
jle
dec
mov
loopne
loopne
lahf
inc
lahf
ja
rolb
mov
jmp
mov
xor
repnz
ljmp
jb
fcompl
stos
int3
adc
jb
push
in
mov
ljmp
ljmp
inc
stos
mov
and
pop
push
fmull
mov
push
cmpsl
sbbl
pop
int
lods
adc
xchg
and
mov
lahf
inc
xchg
scas
push
add
ds
jmp
mov
push
repnz
jmp
rcrb
inc
popf
add
add
int3
adc
jb
xor
in
lcall
xor
add
test
mov
xchg
mov
sbb
ret
repz
mov
mov
cmpsl
stos
mov
inc
cmpb
ja
hlt
sbb
jg
mov
popa
in
sti
push
lods
inc
scas
dec
dec
gs
adc
stc
xlat
cs
push
out
xlat
sub
dec
ljmp
outsl
popf
sub
xchg
lahf
pop
aam
push
popf
push
lahf
add
shr
outsl
jb
xor
push
push
lcall
jl
int
ja
fildll
leave
xchg
xlat
jno
bound
jbe
lock
add
repz
mov
hlt
cmpsb
mov
add
jns
hlt
fnstenv
jg
iret
sub
dec
into
in
inc
push
lods
inc
out
inc
dec
mov
idiv
dec
xor
push
scas
fisubrl
ljmp
mul
and
pop
in
push
popf
xchg
mov
outsl
jb
jge
iret
into
cmp
sbb
out
int
aaa
add
test
or
xchg
dec
add
faddl
mov
inc
sub
pushf
xor
inc
cmpb
js
hlt
cltd
xor
fisubrl
arpl
sbb
inc
cs
dec
gs
mov
idiv
mov
fisubrl
ljmp
mul
push
mov
rclb
pop
mov
push
popf
aad
add
inc
add
jb
jge
iret
or
sbb
push
ds
testl
lcall
xchg
rolb
sbb
cmpb
mov
arpl
pop
lea
repz
arpl
in
incb
outsl
lods
inc
outsb
inc
dec
gs
mov
cmp
cmp
fldt
ljmp
mul
mov
sub
push
pushf
pop
shr
push
popf
adc
add
icebp
iret
cmp
sbb
enter
mov
fildll
mov
xchg
in
add
fadd
jg
rep
shll
sbb
mov
mov
cmpl
addl
xor
and
in
je
lods
inc
scas
inc
dec
gs
mov
idiv
mov
fisubrl
ljmp
mul
pop
mov
pop
mov
mov
jo
cmpsb
jge
iret
es
sbb
mov
add
test
leave
popf
xlat
jno
arpl
jbe
add
mov
std
into
arpl
lock
jp
inc
hlt
fnstenv
and
arpl
stos
jo
inc
out
inc
dec
gs
mov
cmp
enter
scas
fldcw
ljmp
mul
mov
pop
inc
out
push
popf
xchg
mov
jo
data16
iret
out
lcall
mov
int
aaa
add
test
or
xchg
xchg
add
mov
mov
arpl
jo
mov
lds
inc
hlt
cltd
xor
and
fs
jnp
lods
inc
cs
dec
gs
mov
cmp
pop
xor
push
outsl
fldcw
ljmp
mul
add
popf
pop
mov
push
popf
aad
add
std
ljmp
es
iret
mov
jmp
mov
add
test
dec
popf
xlat
jno
push
fdivs
push
sbb
addb
cmpsl
fdivl
mov
loop
mov
test
inc
hlt
pop
xor
arpl
stc
push
inc
outsb
inc
dec
gs
cli
cmp
movsb
cmp
push
das
fisubrl
ljmp
mul
pop
mov
rclb
sub
mov
outsl
jb
jle
iret
lcall
cs
pop
mov
fildll
mov
and
fwait
pop
sbb
ret
repz
arpl
notl
jns
sub
inc
hlt
sbb
arpl
mov
lods
inc
scas
inc
dec
gs
cli
cmp
mov
stc
push
out
fldcw
ljmp
mul
test
popf
pop
in
push
popf
push
mov
jo
cmpsb
jle
iret
pop
lcall
es
fildll
leave
pushf
xlat
jno
push
and
fwait
or
faddl
xorl
aas
sbb
jns
cmpsl
addl
in
fs
incb
add
add
insl
lods
inc
adc
or
ja
jmp
push
jp
ss
jmp
shlb
push
fcompl
popf
and
adc
pop
xchg
pop
jb
cmp
iret
mov
ljmp
out
pop
jo
test
aad
ljmp
fsubr
jbe
push
fdivrl
fldt
cmpsl
imul
mov
lods
adc
and
cmpsb
loopne
mov
mov
or
testb
push
jl
ss
jmp
rclb
inc
popf
add
adc
sbb
pop
jb
aaa
out
imull
xlat
mov
outsb
jmp
test
pop
ljmp
loope
jbe
push
es
fldt
cmpsl
es
sahf
aas
leave
cmp
pushl
test
in
adc
and
jecxz
mov
lahf
inc
es
push
gs
dec
or
sub
jmp
lea
ljmp
jmp
shr
push
pop
pusha
inc
popf
add
adc
fcoml
out
aaa
lods
ljmp
out
pop
shrl
test
jp
jmp
sub
jbe
push
fmull
stos
repz
cmpsl
xor
sahf
aas
or
test
sub
sub
and
test
lahf
inc
popf
mov
or
cmpl
jmp
cmp
push
repnz
fsubr
loop
dec
aas
ror
push
pushf
pusha
inc
popf
movsl
call
pop
jb
pop
in
ja
ljmp
call
jmp
test
pminsw
mov
and
push
push
es
mov
push
cmpsl
ret
aas
dec
mov
insb
adc
and
jl
dec
push
test
loopne
lahf
inc
shll
or
outsb
mov
stc
cltd
jmp
out
lea
ljmp
ljmp
push
push
fcompl
popf
aas
call
pop
jb
aaa
out
mov
ljmp
call
jmp
test
pminsw
mov
and
pop
push
fcoml
popa
push
cmpsl
xchg
sahf
aas
mov
mov
lods
adc
and
test
lahf
inc
imul
ds
xchg
stc
pop
jmp
add
add
cmp
inc
repnz
stos
sub
adc
push
popf
aad
add
add
add
pushf
outsl
jb
xor
ljmp
out
pop
sbb
test
pop
push
ljmp
in
jbe
push
faddl
add
add
arpl
test
mov
mov
add
add
ljmp
subl
inc
test
or
test
jmp
push
mov
ljmp
jmp
rolb
add
aas
push
push
dec
add
sbb
vandps
testb
popf
ja
jmp
dec
inc
rcr
add
test
jns
xlat
jno
push
jb
mov
fdivs
repnz
repz
pop
daa
in
aaa
mov
inc
popf
test
xchg
cmpb
add
add
iret
jbe
stc
jge
dec
ljmp
inc
add
add
rcrl
cmp
xor
stc
push
das
ljmp
mul
fldt
inc
gs
jne
dec
outsb
jne
sub
je
jb
outsl
arpl
fs
js
push
add
inc
insb
imul
arpl
outsb
add
outsb
push
gs
js
gs
imul
gs
outsb
inc
jb
popa
je
dec
outsb
jne
push
push
gs
je
dec
popa
outsb
fs
add
insl
inc
imul
gs
imul
fisttps
inc
popa
fs
outsl
fs
je
add
imul
inc
add
je
insb
addr16
je
insb
dec
inc
add
outsb
popa
bound
outsb
jne
je
insl
add
add
imul
je
inc
arpl
insb
gs
je
jb
popa
bound
add
gs
popa
outsb
fs
add
ja
arpl
inc
js
cmpsl
jns
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
or
jo
outsb
fs
outsb
jne
add
aam
popa
imul
insb
gs
bound
arpl
gs
arpl
jo
jns
jae
pop
xchg
inc
jb
popa
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
pop
mov
inc
imul
dec
gs
popa
addr16
add
rcll
imul
imul
inc
outsl
jb
popa
je
add
push
inc
jb
ja
outsl
arpl
push
arpl
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
fs
arpl
inc
add
imul
outsl
insl
push
outsl
imul
pop
inc
gs
gs
popa
addr16
add
jae
gs
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
dec
jae
outsl
outsl
insl
gs
jae
popa
je
dec
gs
popa
add
fiadds
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
js
push
push
outsb
outsl
ja
inc
mov
sbb
push
imul
popa
bound
add
arpl
add
dec
insl
popa
addr16
add
dec
arpl
imul
je
gs
je
jo
imul
pop
bound
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
gs
je
je
add
repz
gs
imul
je
pop
in
inc
gs
insb
popa
jae
dec
outsb
outsw
inc
add
mov
inc
gs
imul
outsl
arpl
push
gs
jae
addr16
add
inc
gs
gs
dec
outsb
jne
jns
mov
push
imul
sbb
arpl
gs
imul
std
jp
gs
outsl
arpl
add
jo
push
arpl
sahf
inc
gs
insb
popa
jae
dec
popa
insl
gs
add
dec
gs
popa
addr16
outsl
jae
test
arpl
outsb
push
outsl
inc
insb
imul
gs
gs
imul
outsb
add
fs
imul
std
add
inc
push
imul
outsl
insl
push
outsl
imul
mov
jle
xor
inc
gs
jb
jns
arpl
insb
gs
je
jb
popa
bound
rclb
pop
mov
insb
push
imul
je
imul
imul
add
je
arpl
xchg
push
gs
popa
jo
jne
add
dec
outsb
push
arpl
inc
gs
arpl
insb
insb
push
popa
outsb
add
je
jne
jae
jb
roll
inc
popa
jo
jne
add
inc
push
gs
gs
jae
inc
popa
jo
jne
add
je
arpl
insb
insb
push
popa
outsb
add
pop
incb
je
jns
je
insl
dec
outsb
jne
dec
data16
je
arpl
push
repz
gs
jb
jns
arpl
add
je
jb
arpl
arpl
jae
push
jne
outsb
data16
popa
je
push
arpl
ds
gs
ja
imul
gs
jns
inc
outsl
insb
outsl
jb
int3
jmp
inc
outsb
popa
bound
imul
gs
imul
outsb
addr16
add
inc
gs
imul
outsb
addr16
add
cmovp
aaa
mov
gs
jne
jae
jb
outsl
jae
inc
imul
push
arpl
gs
imul
dec
outsl
popa
fs
jne
jae
jb
add
push
imul
jae
bound
inc
gs
imul
arpl
inc
gs
jb
jns
outsb
jne
push
gs
dec
push
xor
cmp
insb
gs
jae
inc
inc
add
dec
jae
arpl
jo
jns
inc
cmc
jnp
gs
outsl
jb
addr16
jne
fs
imul
pop
int3
stos
iretw
into
push
gs
arpl
insb
insb
push
outsl
jae
call
dec
outsb
jbe
insb
imul
je
dec
jae
imul
inc
gs
outsl
arpl
add
fs
popa
je
add
gs
insb
imul
je
sbb
push
gs
popa
jb
outsb
je
fadds
je
popa
jb
outsb
je
mov
pushf
test
insb
imul
je
ss
ffreep
push
jo
popa
je
push
imul
push
ss
gs
outsl
jo
imul
push
outsl
jae
dec
gs
popa
addr16
add
test
inc
jno
popa
insb
push
arpl
add
outsb
fs
gs
popa
addr16
add
inc
gs
jb
jns
jne
jae
jb
hlt
mov
je
jne
je
gs
popa
add
je
insb
imul
inc
popa
je
add
insb
outsl
jae
inc
insb
imul
add
inc
gs
insb
imul
inc
popa
je
add
fs
popa
imul
outsb
inc
insb
imul
add
gs
jne
add
insl
jo
jns
insb
imul
add
je
jb
jo
add
imul
scas
xor
je
imul
js
inc
add
inc
xlat
mov
out
inc
inc
gs
jns
je
insl
dec
gs
imul
gs
imul
js
dec
outsb
addr16
inc
add
je
jb
jo
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
imul
add
jo
xorl
push
imul
add
xchg
inc
jb
ja
gs
inc
add
popa
bound
fs
gs
dec
jne
inc
add
inc
gs
dec
push
xor
lret
inc
push
jo
jb
add
inc
sub
pop
ss
jb
popa
je
inc
imul
imul
jb
insl
inc
add
insb
insb
push
outsb
add
imul
or
je
gs
popa
addr16
imul
jae
jb
jns
imul
push
gs
outsl
jbe
push
jb
jo
add
cmc
cs
gs
gs
inc
insb
addr16
popa
bound
gs
add
je
outsl
jb
addr16
jne
fs
imul
enter
je
imul
popa
arpl
outsb
je
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
popa
jns
je
imul
je
arpl
insb
insb
push
outsl
jae
push
imul
outsb
outsl
ja
gs
popa
addr16
add
push
imul
outsl
outsl
imul
sub
popa
insb
insb
push
imul
outsl
arpl
popa
dec
retw
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
mov
jle
or
int3
inc
popa
insb
insb
dec
gs
dec
outsl
outsl
imul
inc
inc
outsb
fs
popa
add
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
js
mov
aad
push
gs
imul
outsl
outsl
imul
add
gs
je
push
imul
inc
add
inc
jne
jae
jb
outsl
jae
loope
imul
popa
jae
inc
add
or
dec
outsb
jne
je
insl
inc
outsl
jne
je
inc
fs
jae
push
imul
arpl
add
sub
jb
insb
insb
push
imul
add
inc
insb
addr16
je
insl
dec
gs
popa
addr16
add
xor
jo
imul
imul
outsl
jbe
push
imul
inc
gs
outsb
jne
je
insl
dec
inc
add
gs
imul
js
inc
add
insb
imul
jae
imul
jae
popa
addr16
add
je
outsb
jne
je
insl
inc
imul
inc
push
outsb
jne
je
insl
add
outsb
jne
je
je
add
mov
fildl
je
outsb
jne
push
popa
jb
inc
imul
outsb
jae
xor
jae
popa
addr16
outsl
js
add
push
xor
sub
aaa
insl
push
gs
imul
jae
fsubs
xchg
inc
dec
xor
cs
insb
add
push
je
imul
jmp
add
insb
imul
aas
and
outsb
jb
imul
popa
jae
inc
add
jg
mov
pop
dec
mov
imul
je
js
sub
arpl
gs
imul
inc
js
inc
js
xchg
add
dec
push
gs
imul
addr16
js
test
insb
gs
imul
je
js
rcpps
push
imul
inc
js
inc
js
sub
gs
popa
jo
outsl
fs
inc
gs
insb
addr16
je
insl
add
je
gs
inc
outsl
insb
outsl
jb
sub
gs
imul
dec
jb
inc
js
push
gs
outsl
jb
inc
inc
add
je
dec
inc
imul
inc
imul
add
je
push
bound
je
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
je
outsl
insb
jns
imul
push
gs
insb
imul
je
add
push
gs
arpl
insb
gs
gs
repnz
gs
je
push
popa
insb
gs
add
je
imul
addr16
js
inc
jl
gs
imul
je
js
inc
gs
gs
inc
inc
add
data16
je
imul
dec
jb
inc
js
xor
push
imul
and
inc
jb
popa
je
push
outsl
jne
fs
arpl
outsb
add
je
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
into
inc
jb
popa
je
inc
insb
insb
imul
outsb
add
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
gs
outsl
insb
jns
imul
js
mov
jp
jb
popa
je
inc
inc
inc
add
add
inc
gs
je
gs
push
outsl
fs
insb
arpl
push
arpl
int3
imul
gs
insb
imul
adc
inc
jb
popa
je
inc
imul
gs
je
push
outsb
add
inc
gs
imul
outsl
jb
and
dec
andb
gs
arpl
outsb
add
gs
bound
arpl
in
inc
outsl
insl
bound
gs
outsb
add
jbe
push
outsl
inc
js
daa
inc
imul
inc
idivb
gs
je
push
outsl
insb
imul
notl
push
imul
dec
jb
inc
js
dec
dec
xchg
pop
push
je
jb
inc
outsl
arpl
mov
je
arpl
bound
arpl
rclb
popa
jb
push
popa
add
scas
test
mov
popa
je
inc
outsl
outsb
je
outsb
imul
pop
push
inc
gs
jne
jb
outsb
je
bound
arpl
scas
hlt
and
fs
arpl
aad
arpl
insb
add
inc
imul
outsl
jb
mov
je
gs
arpl
popa
jo
add
repnz
pusha
mov
je
imul
sbb
je
gs
inc
js
outsb
je
outsl
imul
cmp
inc
gs
imul
inc
js
inc
js
push
gs
dec
jne
inc
add
inc
js
push
gs
arpl
imul
push
cmc
inc
jb
popa
je
push
arpl
outsb
dec
outsb
imul
dec
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
inc
add
je
gs
dec
jne
inc
add
gs
je
inc
dec
inc
imul
mov
gs
gs
dec
bound
arpl
insb
xor
cs
insb
add
gs
dec
gs
imul
gs
arpl
imul
mov
arpl
jae
bound
cmp
xchg
adc
push
je
gs
push
outsl
fs
dec
dec
push
push
dec
dec
dec
cs
push
push
add
or
je
insb
imul
outsb
push
jb
outsb
je
jb
add
fdivrs
dec
mov
outsl
jae
push
jb
outsb
je
jb
dec
sub
mov
push
dec
xor
cs
insb
add
push
xor
sub
sbb
inc
outsl
arpl
outsb
je
jb
jo
jb
imul
push
gs
jne
jb
push
popa
insb
jne
inc
add
gs
gs
popa
insb
jne
inc
js
add
addr16
jo
outsb
dec
gs
js
add
inc
and
cmp
push
gs
jb
popa
je
dec
gs
js
add
inc
jb
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
inc
dec
dec
xor
cs
insb
add
push
gs
insb
outsl
jae
dec
gs
loop
into
aas
inc
gs
outsl
insb
jne
gs
outsb
outsw
jb
popa
je
outsl
outsb
inc
add
dec
inc
inc
push
push
xor
cs
insb
add
dec
inc
inc
jb
insl
push
jb
addr16
inc
add
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
xchg
and
mov
outsb
inc
dec
push
dec
inc
inc
jb
insl
push
je
imul
insl
popa
addr16
imul
je
outsl
jns
inc
gs
popa
jbe
inc
imul
add
inc
aad
dec
xchg
cmpsl
outsl
sahf
arpl
fs
xor
cs
insb
add
push
inc
outsl
insb
outsl
jb
add
test
out
push
add
push
dec
xor
cs
insb
add
jbe
inc
gs
imul
inc
add
insl
hlt
pop
loope
mov
xchg
je
jo
outsb
inc
imul
add
xchg
cmc
add
mov
dec
insb
gs
outsb
imul
imul
sti
push
call
pushf
xor
push
push
xchg
or
je
pop
xchg
adc
mov
jmp
call
cmp
in
sbb
pop
pop
enter
and
inc
shll
xchg
call
addl
call
push
push
jmp
insb
cmc
gs
dec
cmp
inc
and
stos
pop
std
mov
and
fwait
add
add
mov
push
lret
lret
test
jge
cmp
xchg
or
sbb
mov
dec
into
pop
cmp
add
inc
and
cmp
jl
notb
lret
dec
fdivrs
and
pop
ss
inc
mov
outsb
ljmp
dec
insb
gs
outsb
imul
add
dec
fnstcw
loope
jae
hlt
jge
je
and
mov
loopne
mov
gs
jo
jle
mov
je
insb
inc
roll
aad
pop
into
pop
cmp
ds
mov
xchg
add
sahf
cmp
mov
jg
dec
jne
jno
jecxz
ljmp
cltd
push
jle
arpl
mov
inc
mov
gs
gs
or
in
mov
sarl
jno
xorb
enter
popa
fimull
mov
cmp
add
aas
pop
test
jmp
mov
lea
adcl
xchg
pop
bound
mov
or
jle
aam
sub
frstor
xor
adc
pop
scas
sub
jmp
jnp
popa
add
cmp
lret
shll
add
push
les
xchg
testb
mov
loopne
in
imul
imul
rcll
and
notl
sti
insl
std
test
and
xchg
mov
and
cmp
popa
ja
jge
negl
fidivrl
out
jo
fs
imul
mov
notl
sbb
fistpll
test
dec
iret
pop
cmp
add
dec
fstpt
mov
sbb
add
and
xor
dec
divl
xorl
xor
daa
inc
mov
outsl
jmp
push
in
or
inc
aam
dec
jmp
mov
push
test
mov
inc
leave
pop
cmp
sub
dec
fstpt
or
outsb
test
test
cmp
inc
aam
sub
arpl
cmc
push
out
in
jle
mulb
xchg
pusha
add
lds
dec
mov
jne
and
dec
fdivrs
dec
adc
push
sub
mov
xchg
je
js
ljmp
cmp
pusha
notb
iret
stos
pop
rclb
mov
pop
ljmp
stc
adcb
lret
mov
pop
jp
jbe
rolb
shlb
in
lock
bound
dec
stos
aas
mov
xchg
adc
in
sbb
ljmp
add
lock
mov
cmpsb
sub
dec
fidivrs
xchg
repz
in
sbb
push
fmuls
fsubrs
cwtl
push
imul
xor
int
fwait
or
aas
scas
aas
pop
test
xchg
mov
mov
and
mov
lcall
or
sub
mov
lahf
and
sub
cmpsl
lret
push
lds
sub
outsb
jo
inc
daa
rclb
push
test
push
cltd
cmp
daa
movsb
cmp
dec
cmp
push
xor
push
popa
nop
jb
mov
inc
mov
cmp
push
xlat
inc
and
xor
jl
jne
insl
and
pop
xlat
inc
and
js
lret
lret
inc
shll
pop
cmp
or
dec
fnstcw
icebp
nop
arpl
mov
mov
imul
pop
jp
push
push
les
int3
loopne,pn
in
jg
and
es
inc
mov
out
je
lea
aas
scas
lret
mov
mov
mov
jns
aaa
jno
jge
negl
sahf
stc
or
pop
neg
inc
aad
dec
cli
push
mull
icebp
js
lahf
punpckhdq
hlt
pop
sar
jp
jp
xchg
adc
popa
icebp
nop
arpl
xchg
jge
pop
leave
test
mov
adc
pusha
notb
pop
cmp
sub
xchg
lahf
adc
int
fidivrl
adc
mov
push
pushf
sti
push
hlt
adc
push
imul
scas
cmp
mov
and
and
jp
jp
push
les
int3
nopl
jbe
ja
loope
dec
fisttps
mov
aad
sbb
aad
dec
mov
mov
pop
lret
pop
ds
cs
dec
mov
pop
stos
add
inc
aam
dec
stc
popa
add
pop
lret
scas
pop
in
xchg
inc
loope
adc
data16
and
test
mov
push
mov
es
jg
insb
or
in
es
movl
outsl
rclb
pop
mov
ret
push
lds
inc
iret
pop
cmp
xor
pop
mov
ficoms
mov
dec
mov
and
aaa
inc
int
and
cmp
fimull
fisubrl
adc
rcll
push
cmpsl
data16
pop
add
pushf
or
in
sbb
outsl
or
out
cmc
pusha
notb
mov
pop
xchg
repnz
pop
hlt
loopne
out
mov
cmp
xchg
jb
cmp
inc
shll
sub
or
cmp
cmp
mov
ret
test
xchg
repz
ficoml
inc
and
aaa
addl
lock
pop
fisttpll
out
icebp
jne
mov
push
inc
and
ds
jl
negb
aaa
ret
push
lds
pop
xlat
inc
and
js
fmuls
fcoms
mov
fsubr
notl
push
fisttps
flds
fbstp
int3
in
jle
mov
push
les
int3
imul
rorl
mov
add
jnp
lock
bound
cmpl
leave
push
shlb
inc
mov
pop
lret
pop
ds
enter
pop
idivl
adc
push
adc
push
lret
lret
int3
inc
and
shlb
mov
mov
sbb
mov
mov
pop
lret
scas
pop
mov
mov
cmp
roll
aad
cmp
push
lds
dec
ret
ret
jl
jne
and
je
lea
movsb
cmp
inc
xor
lods
cmp
scas
aas
pop
test
decb
adc
or
lret
aaa
cmpsl
ret
mov
mov
and
cmp
mov
mov
fimull
fidivl
mov
xchg
jl
je
out
pop
push
enter
jle
imul
dec
fstpt
std
test
jae
bound
xchg
repnz
mov
inc
loope
adc
data16
jb
in
setae
xchg
inc
mov
mov
and
push
pushf
sti
push
hlt
or
jmp
push
in
or
shl
lock
bound
adc
shlb
xchg
inc
daa
rcrb
mov
fwait
decb
push
cmpsl
inc
cwtl
adc
mov
fmuls
pop
cmp
xchg
cmc
add
icebp
lock
bound
push
icebp
cs
in
jns
mov
sahf
setg
or
mov
aad
mov
jle
sub
roll
shll
mov
xchg
inc
fimull
fidivl
sub
test
jbe
cmpl
aad
sub
je
cltd
or
cs
int
lods
lret
inc
rorl
add
inc
cld
jge
je
arpl
mov
inc
mov
addl
testl
je
insb
mov
movsb
ret
fidivs
sarb
push
inc
into
pop
cmp
xor
sbb
push
shll
int
rclb
movl
cli
or
xor
das
dec
mov
dec
mov
ljmp
cmpsb
add
jge
divl
cmp
and
icebp
imul
insl
andl
add
push
aaa
mov
inc
mov
push
iret
pop
cmp
popa
mov
mov
inc
and
popa
cmp
lret
push
lret
jmp
test
and
inc
in
sbb
mov
test
jge
pop
push
jg
jmp
jbe
bound
pusha
pop
repnz
pop
ds
ss
inc
mov
dec
lret
lret
outsb
cld
fwait
jbe
add
mov
fwait
decb
lret
inc
lea
out
mov
aam
or
mov
jle
idivb
mov
outsb
cld
xchg
cmc
add
ret
push
mov
jno
jecxz
xchg
add
icebp
popa
add
adc
or
dec
stc
insb
loop
je
mov
and
jecxz
leave
pop
cmp
jg
sti
imul
push
push
int3
inc
and
inc
daa
sarb
sub
cmp
test
outsl
roll
aad
sbb
inc
mov
lahf
cli
or
leave
dec
fdivrs
push
xor
and
mov
inc
mov
add
sbb
xchg
jb
outsl
sub
push
shll
les
xlat
xor
pop
int3
stos
lods
add
jp
in
jge
notl
loopne
xor
xlat
push
push
dec
outsl
je
data16
arpl
inc
add
out
dec
push
xor
adc
add
mov
mov
sbb
loope
out
jno
cltd
or
adc
test
mov
dec
fstpt
lock
add
lock
into
pop
cmp
jg
inc
fidivrl
popf
in
mov
btc
notb
jns
jmp
mov
mov
fimuls
popa
sbb
jno
aas
scas
lret
in
jae
xchg
adc
jle
or
rcrb
scas
pop
mov
and
xor
daa
orl
cli
or
je
insl
hlt
pop
mov
orl
dec
sub
fcoml
cmpsl
push
mov
fimuls
add
and
xchg
add
gs
ret
ret
adc
xor
mov
js
dec
adc
jle
jg
jmp
test
mov
aaa
cmpsl
ret
ljmp
sahf
insl
lcall
or
jne
bound
shlb
lock
lret
out
jb
xchg
xchg
xor
pop
jp
adc
push
lds
lahf
push
lea
and
repnz
sbb
and
pop
in
icebp
nop
arpl
pop
mov
rclb
sub
pop
lret
scas
pop
mov
call
cwtl
imul
push
nop
push
mov
es
fs
sbb
mov
jle
bound
sbb
add
repz
enter
outsl
dec
fistpl
push
cld
imul
mov
jle
arpl
push
shll
ret
ds
cs
inc
jecxz
push
in
pop
ret
ret
mov
dec
aad
sub
push
xchg
add
sahf
aaa
sub
pop
push
mulb
jns
dec
fdivrl
mov
es
add
push
mov
es
and
jo
fs
pop
inc
ret
ret
rclb
cs
jge
je
insb
mov
fnstcw
sbb
add
cmp
clc
jecxz
jecxz
jne
sub
xor
inc
and
ds
test
sub
aaa
push
mov
pop
test
ret
sbb
xor
movsl
xor
rolb
shlb
cli
jae
xchg
dec
jecxz
push
in
xor
scas
xor
int
int
inc
shll
cmp
add
inc
and
outsl
lock
cld
fwait
jbe
and
or
cmp
push
mov
js
ds
pop
int3
stos
data16
in
jge
divl
roll
roll
push
mov
xchg
add
sahf
jg
add
stos
cmp
inc
pop
fisttpll
out
fs
adc
push
fcompl
stos
pop
mov
jmp
mov
stos
and
cmp
inc
and
cmp
dec
fdivrs
mov
lcall
mov
mov
inc
mov
pusha
pop
repnz
rcll
push
xchg
out
js
mov
xchg
or
jl
jne
insb
cmpsb
xor
test
jge
jge
xor
pusha
notb
cmp
adc
test
imul
hlt
push
cld
push
ljmp
xor
mov
mov
fisttps
fnstenv
or
jno
addr16
push
rcll
cmpsl
push
mov
xchg
add
js
movsb
ret
fimuls
pop
cmp
daa
cld
jg
mov
int3
inc
aam
dec
lods
aaa
mov
icebp
jg
mov
aas
mov
inc
mov
sbb
or
and
aas
mov
inc
mov
fcoml
mov
push
jns
pusha
xchg
add
in
bound
mov
and
adc
mov
sbb
push
rcll
sub
mov
test
sbb
movsl
inc
shll
cmpsb
shll
mov
xchg
adc
mov
inc
mov
pushf
pop
xchg
repnz
jo
ret
pusha
notb
sbb
pop
sahf
and
outsb
cld
fwait
jbe
dec
lret
lret
lahf
punpckhdq
nop
arpl
subl
stos
int
aad
mov
js
imul
xchg
or
push
inc
int
and
cmp
adcl
test
push
les
fdivrs
sbb
jle
and
cmp
adcl
test
js
mov
push
rclb
and
fcom
inc
fidivrl
lret
scas
pop
cld
dec
fisttpl
mov
mov
fmuls
fdivs
xor
int
xorl
aas
pop
test
push
movsb
adc
stos
or
hlt
push
les
push
popa
nop
pop
sbb
or
cmpsb
jb
pushf
xor
inc
addr16
sbb
or
push
mov
les
inc
pusha
in
sbb
or
push
call
subb
xchg
lock
mov
nop
testl
mov
pop
roll
sarl
addr16
jg
jmp
hlt
pop
out
fwait
or
jb
mov
js
jge
out
adc
push
popa
repnz
pop
repnz
repnz
lock
lds
xchg
mov
das
mov
mov
inc
mov
xor
ss
mov
cmpl
adcl
test
mov
xchg
and
push
xor
addr16
mov
sub
cmp
repnz
pop
repnz
dec
fnstcw
shlb
and
xchg
cmc
jne
mov
imul
popf
and
jnp
mov
in
imul
inc
and
movl
sahf
or
cmpsb
dec
sbb
inc
int3
inc
and
cmpsl
ret
loop
stc
cwtl
imul
outsl
scas
daa
mov
and
push
fisttpll
out
cmp
daa
inc
mov
adcb
loope
clc
xchg
add
std
or
daa
mov
dec
mov
sub
sbb
mov
mov
sbb
sub
stos
cmp
cmp
xor
scas
pop
mov
mov
and
sbb
push
cwtl
push
imul
test
xor
pusha
notb
xor
and
sub
dec
mov
dec
mov
in
sbb
aas
mov
fisubl
xchg
andl
sbb
stc
cwtl
imul
mov
dec
ret
repz
mov
addr16
jl
negb
pushl
xorb
push
pushf
sti
push
hlt
insb
loopne
adc
or
pusha
pop
repnz
pop
iret
pop
cmp
aas
mov
mov
sbb
sub
sbb
xor
inc
roll
sarl
lahf
or
fwait
or
cmp
insb
or
testl
daa
and
gs
xchg
cmc
add
aaa
scas
aas
pop
test
ljmp
lahf
xor
xor
jge
dec
adc
bound
ror
fdivrl
fwait
decb
cmp
sub
scas
cmp
mov
inc
rclb
sub
xchg
add
sahf
jle
xchg
add
jl
xor
and
adc
adc
pushf
sbb
push
shll
add
adc
dec
sub
push
and
push
ret
ret
pop
int3
stos
xchg
cmp
fisttpl
mov
lcall
pop
lods
inc
cmc
notl
pop
iret
pop
cmp
jo
sub
jo
jns
jmp
pusha
clc
outsb
or
push
mov
mov
in
sbb
inc
sbb
adc
lods
xor
rclb
ja
sahf
or
cmpsb
and
cmpsl
mov
xchg
mov
cltd
clc
or
ds
lahf
push
mov
les
xchg
mov
out
adc
push
ljmp
mov
jns
popa
jae
outsl
or
in
jne
mov
cwtl
adc
int
and
cmp
das
fidivrl
mov
fcompl
cmc
mov
test
imul
inc
mov
mov
call
sahf
or
aad
shll
outsb
or
adc
dec
fstpt
cmp
push
or
insb
push
lret
lret
mov
pusha
ljmp
stc
mov
in
inc
mov
repz
pop
int
addr16
movsb
aas
scas
lret
inc
loop
pop
loop
lds
xchg
outsb
jmp
jmp
pop
fimull
fidivrl
xchg
jb
outsb
rcll
cmpsl
push
mov
in
bound
es
mov
jno
imul
adc
pop
mov
mov
js
imul
sbb
xlat
mov
test
inc
shll
and
std
insl
hlt
pop
out
fs
popf
insb
test
dec
adc
adc
repnz
out
jo
ljmp
test
inc
xlat
inc
and
sbb
push
mov
and
sbb
mov
stos
aaa
cmpsl
ret
cmp
jae
jns
jmp
dec
xlat
inc
and
pusha
ljmp
pop
leave
test
out
in
out
mov
mov
cltd
or
cmp
mov
fdivrs
mov
xchg
adc
daa
movsb
cmp
dec
hlt
je
lea
insb
loop
je
sti
adcl
test
rolb
shlb
jno
imul
adc
and
pushf
push
test
push
cld
in
data16
xchg
outsb
leave
add
inc
into
pop
cmp
cmp
std
in
popa
icebp
nop
arpl
mov
iret
inc
shlb
frstor
test
lods
fimuls
mov
mov
and
push
rcll
and
sbb
add
aas
stos
cmp
or
call
jl
cmp
out
ljmp
cmc
gs
push
jmp
leave
cs
inc
mov
lds
test
mov
mov
inc
les
sbb
xchg
inc
xor
pop
addb
testl
ds
push
rolb
sarb
orb
decb
jmp
enter
push
movsb
dec
mov
xchg
repz
in
testb
mov
jp
popa
add
pop
dec
rclb
and
popa
icebp
nop
arpl
add
sub
cld
outsb
cld
fwait
jbe
pop
lret
scas
pop
scas
in
jl
jne
and
inc
aad
dec
mov
push
outsb
ljmp
stc
in
pusha
hlt
push
cld
adc
repz
cmc
push
jecxz
out
mov
jnp
jbe
loopne
cmpsb
lods
lret
inc
out
cmc
insb
loop
je
aam
fdivrs
dec
sub
outsb
call
aad
cmpsl
aaa
push
mov
mov
iret
insb
loop
je
or
stos
sub
pushf
xor
inc
xor
push
aam
sub
scas
lret
dec
int3
inc
and
shlb
mov
and
inc
int3
inc
and
addr16
xor
jbe
cmpl
rolb
shlb
pop
xchg
repnz
dec
rcll
sub
lock
lock
bound
ret
xchg
add
ss
pop
sahf
or
sahf
or
cmpsb
dec
and
loop
in
jg
push
lret
lret
insb
or
mov
or
data16
xchg
outsb
rcrl
sub
jg
mov
pop
lret
pop
ds
cmp
fidivrs
test
xor
daa
stos
cmp
jg
in
bound
mov
and
lcall
and
and
dec
int
and
cmp
lret
cltd
clc
or
nop
sbb
xor
add
std
or
jmp
sti
sahf
insl
vpshlb
push
in
das
mov
out
popa
icebp
nop
arpl
mov
lds
adc
inc
roll
mov
sbb
stos
mov
xlat
lcall
mov
es
lds
jne
inc
push
push
js
arpl
gs
add
pop
enter
pusha
loopne
adc
add
inc
shlb
js
ljmp
js
mov
inc
mov
rcll
mov
hlt
xchg
outsb
mov
lahf
pop
inc
and
adc
sub
sti
jnp
mov
adc
or
jnp
xor
int
aad
lret
pop
ds
sbb
jge
mov
inc
xlat
inc
and
js
setg
or
xor
insl
cli
push
in
inc
cmp
mov
cmp
fsubs
cmp
je
jmp
inc
aad
sub
xor
cmp
lock
inc
fidivrl
shll
mov
and
push
cmpsl
insb
icebp
popa
add
inc
jl
jbe
loopne
or
ja
dec
fstpl
movsb
ret
ds
and
jnp
outsb
or
push
pop
test
inc
and
cmp
test
inc
mov
mov
mov
insb
loop
je
lea
xchg
sbb
aad
andl
add
xor
cmpw
je
sub
jmp
in
jecxz
jne
mov
nop
testl
jnp
jb
sahf
or
cmpsb
inc
jo
xchg
cmc
add
fwait
push
test
push
ljmp
or
cld
insb
loop
je
push
lret
pop
ds
in
loopne
jb
pop
enter
and
jae
xchg
iret
pop
enter
fldl
mov
fs
dec
scas
movsb
ret
ds
out
in
je
cmp
mov
mov
fwait
mov
test
dec
fidivrs
xor
scas
sub
cmp
dec
sub
or
push
lds
mov
adc
les
mov
stos
popf
sbb
gs
pushf
outsl
xor
push
call
push
popa
data16
imul
outsb
jae
jb
inc
gs
outsl
and
cmp
xor
xor
lea
pusha
mov
mov
mov
mov
mov
push
jmp
push
shll
xor
daa
lret
inc
mov
out
test
jge
inc
ds
dec
mov
adc
or
aam
into
test
mov
nop
testl
aam
rclb
sub
jge
je
inc
cmp
inc
aad
sub
aaa
cld
push
jnp
jl
notb
push
shll
mov
jg
jmp
xor
jp
and
fadds
mov
lahf
cli
or
mov
stos
data16
lock
in
mov
pop
fstpt
sbb
addl
jae
imul
adc
sub
xchg
adc
in
sbb
orb
decl
call
aaa
xchg
cmc
adcl
test
cmp
cs
pusha
notb
shll
mov
sbb
into
pop
repnz
mov
test
jge
jns
jmp
push
in
dec
mov
mov
insl
std
test
outsl
clc
outsb
or
adc
je
out
push
icebp
fs
popf
insb
lret
lret
mov
cmp
sbb
mov
mov
xor
push
inc
repz
fimull
fidivl
lds
iret
jp
cld
xchg
cmc
add
gs
push
xor
dec
dec
int3
inc
and
sbb
xchg
jo
lock
adc
push
ret
cmpsb
push
mov
lods
lret
inc
scas
fistps
test
adc
push
or
cs
gs
pushf
outsl
lret
and
fdiv
adcl
test
xchg
pop
bound
call
out
jno
cltd
adc
in
sbb
pop
into
pop
cmp
sub
jns
jg
jmp
das
ficompl
roll
mov
fdivrl
adc
imul
fsubp
jns
mov
sub
add
or
and
lea
movsb
dec
roll
sarl
aas
scas
lret
aas
mov
fnstsw
mov
or
shrb
stos
cmp
dec
dec
into
pop
cmp
aaa
push
inc
and
cmp
xchg
add
jp
push
lds
and
aas
outsb
jmp
mov
aad
aaa
cmpsl
ret
out
data16
xchg
outsb
movsl
imul
pop
loop
loope
std
test
mov
inc
xlat
mov
cmpsb
push
fimull
fisubrl
fwait
setg
or
sahf
adc
fdivl
in
pop
int
and
push
mov
mov
and
mov
scas
push
shlb
dec
mov
xor
xor
dec
fdivrs
add
sahf
aaa
popf
add
std
or
inc
fisttpll
out
fadds
mov
push
cld
push
xchg
mov
sbb
inc
sarl
xor
and
pop
ds
int3
dec
frstor
adc
setbe
rcll
lods
pop
mov
or
and
addb
pop
mov
test
cmc
gs
ss
out
jg
jmp
ret
fimull
pop
ds
jnp
gs
adc
and
xchg
in
sbb
and
inc
inc
and
jns
ljmp
stc
call
fs
or
pop
repnz
mov
dec
sub
inc
cmp
xor
scas
pop
call
push
iret
pop
cmp
jle
call
daa
mov
xor
inc
fisttps
mov
ss
or
sbb
mov
gs
adc
stc
rcll
mov
ss
mov
call
aas
pop
test
jne
fs
sbb
aad
lret
jle
call
inc
mov
enter
inc
out
mov
jle
inc
pop
roll
sarl
pop
rolb
shlb
movsl
xor
push
les
push
lds
fimull
mov
cs
mov
adc
dec
jbe
jne
out
add
fisttps
mov
jmp
mov
mov
xor
aam
sub
in
je
cmp
loop
adc
xor
mov
ret
pop
int3
stos
rcrw
imul
test
push
cltd
pop
mov
aam
lds
nop
arpl
cs
push
aam
sub
das
dec
mov
movsl
push
mov
inc
lods
lods
es
cs
mov
lods
lret
inc
loope
enter
add
repz
xchg
icebp
add
dec
ret
ret
and
xorb
xchg
add
add
pop
into
pop
cmp
adc
xor
push
lret
pop
ds
jge
jg
jmp
mov
mov
inc
and
push
fidivs
jns
mov
xlat
dec
fistpll
push
jno
aaa
xchg
or
data16
xchg
outsb
fsts
test
cltd
clc
or
cmc
daa
add
sub
cmc
je
lea
jae
xchg
outsb
out
jg
jmp
add
adc
push
shlb
repz
in
je
insl
hlt
pop
mov
lea
jle
mov
loop
sti
rcrl
stos
data16
jecxz
pop
repnz
fs
jmp
out
mov
cmpsb
cmp
jns
mov
rolb
mov
cmp
loop
je
pop
int
and
aas
cmp
outsb
stc
imul
adc
jb
xor
add
les
int3
jae
ljmp
stc
scas
aam
fnstcw
fnstcw
in
mov
je
add
xchg
std
or
pusha
loope
adc
pop
aas
mov
int
ret
mov
fisttpll
out
rcrb
scas
pop
mov
stos
inc
in
sbb
add
dec
fistpll
das
dec
mov
dec
mov
movsl
push
mov
sahf
jp
mov
xchg
je
jns
mov
sub
insl
std
insl
hlt
pop
in
rcll
push
cmpsl
loopne
out
jo
mov
icebp
test
lods
lret
inc
movsb
cmpsb
aaa
cmpsl
ret
mov
ret
mov
sub
imul
add
inc
loopne
out
mov
push
into
pop
cmp
imul
push
imul
dec
stos
movsb
ret
ds
loopne
adc
xor
dec
frstor
cmp
jno
jecxz
repz
xorl
lret
fwait
or
jns
loop
pop
loop
rclb
lods
pop
mov
mov
mov
cmpsl
xor
ljmp
insb
or
int
fs
popf
insb
cmpb
daa
inc
mov
adc
lods
and
mov
bt
push
movsl
dec
les
lods
pop
test
ret
push
lds
pop
cmp
adc
std
sbb
addr16
adc
xor
pop
into
pop
cmp
jno
cs
mulb
dec
or
pop
rclb
jg
aas
scas
lret
mov
mov
call
je
jg
jmp
jno
pop
std
pop
int3
stos
data16
pushf
xor
jo
pop
leave
test
mov
shlb
push
aam
sub
mov
loope
adc
add
push
cmp
and
mov
mov
enter
ret
ds
fcoms
mov
cmp
inc
fcoml
cmpsl
push
mov
dec
fdivrl
xor
dec
leave
inc
fidivrl
mov
and
fwait
or
adc
pushf
adc
jg
mov
mov
sub
cs
mov
cmp
outsb
add
mov
fwait
and
cs
dec
mov
mov
out
sbb
dec
fnstcw
mov
sbb
in
aad
dec
lret
jne
out
push
movsb
cmp
js
repz
cmc
adc
and
fistpl
scas
pop
mov
adc
lock
mov
stos
cli
jge
je
insb
ret
dec
fistpll
arpl
cmc
push
inc
leave
pop
cmp
add
xchg
lahf
cli
or
lds
mov
stos
int
aad
test
pop
test
cwtl
or
insb
loop
je
ds
cmp
mov
pop
iret
pop
cmp
adc
push
mov
push
xor
clc
lahf
push
dec
fimuls
inc
add
pop
rclb
jbe
sbb
fisttpll
out
cmp
cmp
sbb
sbb
mov
mov
icebp
popa
add
jbe
jo
xorl
nop
jbe
mov
out
insl
std
test
dec
iret
pop
cmp
fcomps
xchg
test
loope
loopne
sti
sahf
insl
xorb
or
in
mov
inc
mov
and
xchg
sbb
aad
lret
or
jg
fisttpll
out
ljmp
jne
mov
roll
mov
cmpsl
cltd
or
lahf
punpckhdq
sbb
xor
rolb
shlb
push
lds
iret
daa
repz
pushf
outsl
test
pop
and
jb
mov
inc
mov
jno
js
ljmp
mov
scas
aas
pop
test
mov
or
xchg
setg
or
or
std
jl
cmpsb
xor
scas
sub
mov
aam
lds
fsubrl
int3
cltd
sbb
mov
call
pop
sub
add
push
add
call
call
popa
jmp
repz
mov
push
fisttpl
fnstsw
sub
jo
imul
adc
stos
cmp
dec
nop
sbb
stos
cmp
popa
orb
clc
or
and
adc
adc
int3
inc
and
cmp
inc
sahf
adc
insb
loop
je
stos
cmp
push
test
push
cld
xchg
pop
xchg
repnz
mov
pop
int3
inc
and
and
inc
les
xchg
rorl
inc
and
jbe
mov
push
nop
push
popa
nop
cmp
dec
sub
push
mov
test
pop
jb
cmp
pushf
xor
and
jg
jmp
push
jae
ja
xorb
push
mov
movl
out
push
fstps
stos
data16
cmpsb
xor
scas
inc
and
or
ja
xchg
cmc
add
mov
shlb
add
jg
int
and
xor
aam
lret
lret
insb
or
repnz
push
test
iret
or
popa
lock
xor
jnp
in
or
scas
cmp
mov
hlt
pusha
notb
cli
popf
insb
lret
iret
pop
lret
scas
pop
stos
mov
mov
pop
iret
stos
pop
into
push
lret
lret
xchg
mov
imul
or
xor
or
fsubrs
std
insl
hlt
pop
andb
xor
dec
dec
roll
aad
ds
push
lds
cs
mov
lahf
cli
or
jnp
xchg
testb
pop
mov
xor
xor
pop
rolb
shlb
dec
push
xor
imul
dec
les
cmpsb
push
mov
fdivrs
pop
lret
scas
pop
mov
pop
sbb
fisttpll
movsb
push
mov
mov
lock
push
fwait
or
fisttpl
fnstsw
repz
popf
insb
xchg
nop
or
lret
lret
or
es
xchg
ja
loope
call
xlat
pop
mov
jns
aas
les
test
icebp
nop
arpl
js
dec
das
ficompl
insb
or
and
mov
insb
loop
je
add
push
rolb
shlb
cmp
push
lds
xchg
adc
test
pop
test
out
lock
bound
xor
push
movsl
add
movsl
xor
lret
pop
ds
mov
aad
sub
lds
bnd
mov
push
std
andnps
push
cmp
and
dec
mov
fnstsw
lcall
xorb
repnz
pop
repnz
lret
pop
cmp
outsb
push
mov
gs
sub
jl
jp
in
inc
aas
cmpsb
xor
scas
adc
mov
test
movsl
int3
aas
mov
adcl
test
aas
mov
or
cmp
mov
dec
out
jl
divb
lock
and
mov
mov
mov
add
push
test
push
testl
jbe
jo
xorl
mov
repnz
pop
repnz
or
pop
cld
je
lea
mulb
adc
outsb
cld
fwait
jbe
rcrb
xchg
xchg
js
ljmp
adc
sarb
add
dec
fimuls
and
mov
mov
dec
fistpll
pop
ds
and
xor
rolb
shlb
mov
sub
push
pushf
sti
push
mov
shrl
mov
jns
and
jge
testl
sahf
push
dec
adc
in
cmc
pushf
outsl
mov
push
lds
xchg
dec
iret
pop
cmp
jecxz,pt
cli
popf
insb
mov
test
mov
js
pusha
inc
enter
sub
pop
cmp
jno
imul
insl
mov
in
add
je
out
or
leave
push
lcall
push
cmp
cmp
and
and
mov
dec
mov
stos
movsw
jbe
jbe
loopne
sbb
ret
ret
mov
dec
mov
push
scas
pop
xchg
mov
and
cmp
sub
jns
test
fldt
ret
push
lds
fwait
or
sub
in
sbb
mov
mov
dec
mov
int3
aas
fildl
push
xor
and
lods
cmp
sub
sub
xor
int
rcrb
pushf
xor
dec
cmp
xor
lret
mov
mov
xchg
add
jl
jmp
mov
fisttpll
pop
ds
in
pusha
notb
adc
imul
je
fisttps
flds
jae
xchg
sub
pop
imul
test
stos
xchg
add
outsl
sti
imul
or
cmp
xchg
cmpsb
xor
dec
rolb
shlb
cmp
cmp
adcl
test
pop
xchg
repnz
in
inc
rcll
daa
sub
inc
ret
ret
push
mov
or
jns
add
xchg
mov
out
adc
or
loopne
adc
inc
push
fmuls
fcoms
inc
iret
pop
cmp
cmp
pop
leave
test
mov
shlb
ret
push
lds
pop
rolb
shlb
insb
loop
je
fisttpll
mov
insb
or
mov
ret
add
jne
out
push
mov
pusha
pop
repnz
xor
test
adc
cmp
je
lea
cli
push
add
scas
aas
pop
test
stc
or
int3
dec
xchg
movsb
ret
ds
jno
push
rolb
shlb
popa
icebp
nop
arpl
jecxz
mov
rcr
arpl
xchg
gs
mov
jmp
jge
lock
jp
push
fimull
fidivrl
xchg
mov
dec
fstpt
test
pop
stc
xchg
pop
daa
test
rorl
mov
out
add
cmp
fidivrl
push
ret
cmpsb
push
nop
in
loopne
jb
movsl
xor
jg
mov
mov
mov
mulb
andnps
pop
cmp
pusha
repnz
lahf
push
ret
pop
enter
xor
insb
icebp
popa
add
inc
rorb
push
std
jno
bound
les
nop
testl
mov
adc
mov
in
sbb
add
sahf
jl
ljmp
stc
out
sbb
and
jno
xorb
dec
fdivrl
test
gs
pushf
outsl
cmpsb
cmp
sub
push
mov
daa
test
pop
test
popl
xchg
lock
rcrl
stos
xchg
mov
mov
sbb
xor
mov
xchg
dec
fimull
ficompl
js
jl
notb
nop
push
popa
nop
jp
insb
loop
je
mov
mov
and
sbb
mov
mov
insl
std
test
inc
fimuls
pop
lcall
push
lds
test
push
enter
jg
mov
mov
xchg
adc
adc
or
and
dec
jns
outsb
or
sbb
insb
loop
je
sti
jl
jne
fs
imul
adc
ret
cmp
push
pushf
sti
push
mov
iret
pop
cmp
sbb
or
pop
enter
xchg
sahf
stc
or
jl
add
sbb
jne
mov
cmp
cmp
mov
in
in
jle
push
lds
iret
push
or
add
std
or
cmc
lock
bound
push
mov
mov
in
jbe
cmpl
movsb
ret
mov
mov
mov
xchg
adc
iret
mov
mov
sbb
and
ja
mov
inc
mov
call
int
movsl
xor
sbb
aad
lock
stos
int
ficoml
dec
fnstsw
fs
push
in
or
inc
and
xchg
repnz
xchg
push
test
push
lock
imul
lods
test
jns
addr16
xor
sub
lds
sub
pusha
in
jge
notl
idivl
mov
in
cltd
push
cmp
movsb
xor
push
push
xor
push
jne
int
leave
test
mov
add
fisttps
mov
notb
mov
int
and
arpl
data16
xchg
outsb
push
int
and
push
mull
icebp
push
adc
nop
or
in
mov
push
in
sub
clc
outsb
or
jg
jmp
adc
js
sbb
das
mov
xchg
mov
adcl
pusha
notb
cmc
pushf
outsl
test
dec
sub
cmp
mov
inc
mov
or
mov
rcll
cld
test
int3
inc
enter
and
das
dec
mov
inc
mov
movsb
xor
jmp
jmp
dec
fnstcw
in
jg
pop
into
pop
cmp
cmp
and
mov
xchg
lret
push
mov
dec
sub
int3
stos
iretw
push
enter
ja
out
jl
negb
lock
inc
adc
jno
bound
cmp
insl
std
test
mov
neg
arpl
xchg
test
hlt
bnd
xorb
out
jl
negb
xor
xchg
adc
jns
mov
inc
iret
pop
cmp
xor
jo
popf
sbb
or
test
jge
push
dec
scas
inc
into
pop
cmp
aas
adc
punpckhdq
psubd
and
in
jl
jne
and
dec
sub
and
jb
dec
fmuls
fdivs
setns
push
mov
sbb
pop
stos
or
icebp
outsl
lcall
addr16
inc
pop
xchg
adc
mov
fldcw
add
rorb
scas
imul
mov
in
cmp
sub
sub
and
cmc
jb
xchg
dec
enter
es
roll
aad
jno
imul
pop
cmp
outsl
idivb
mov
fsubrs
movl
xlat
and
jmp
cmc
pushf
outsl
test
bound
imul
inc
sub
sub
jge
je
and
xchg
jge
je
addr16
fcompl
std
xchg
and
sub
aaa
sbb
adc
pop
xchg
repnz
imul
inc
aam
dec
out
adcl
lea
xchg
add
and
push
xor
dec
imul
insl
in
addr16
push
in
aas
push
mov
jge
je
fs
les
int3
divb
xorl
dec
lods
jne
addr16
adc
pop
int3
stos
data16
lea
inc
iret
pop
cmp
jo
ljmp
stos
into
cmp
jle
outsl
rorl
push
mov
mov
jns
popa
xchg
sbb
mov
fimull
mov
jl
notb
and
pusha
notb
stc
cwtl
imul
push
ds
out
je
lea
jb
xchg
mov
xchg
adc
imul
fidivl
fwait
or
sub
cli
push
jmp
push
in
pop
mov
mov
sbb
mov
xchg
mov
jle
pop
mov
cltd
clc
or
add
or
dec
leave
pop
cmp
and
in
or
push
jns
cmp
dec
mov
push
movsb
inc
je
leave
inc
xlat
mov
test
iret
jne
imul
cwtl
decl
call
dec
cmpsl
dec
lret
pop
ds
fmull
mov
push
jno
jne
mov
imul
psubd
aad
shll
fnstcw
sub
push
fimuls
mov
aas
pop
test
shlb
push
int3
inc
and
dec
sub
and
outsl
push
dec
inc
fdivl
in
inc
fldt
jp
jp
js
dec
sub
pop
stos
das
mov
dec
fstpt
stc
cwtl
imul
ja
mov
inc
mov
jp
xchg
testb
lahf
jae
push
lds
lds
jge
fs
pop
daa
lods
cmp
imul
insl
test
sub
pop
aaa
mov
or
sbb
lods
lods
lret
inc
scas
mov
inc
and
mov
jno
xorb
insb
or
in
outsl
stc
imul
add
inc
jecxz
push
in
jecxz
jmp
pop
lret
scas
pop
in
jmp
push
in
inc
mov
mov
cmp
adcl
test
xchg
add
push
stos
or
cmp
cmp
and
lret
xor
inc
aaa
mov
inc
mov
imul
movsl
daa
mov
and
lret
movsb
push
mov
adc
jbe
xchg
testb
ret
or
fmuls
xchg
mov
mov
lahf
adc
loop
pop
loop
push
push
xor
daa
mov
mov
sbb
fmuls
mov
add
push
jbe
jbe
loopne
in
loopne
jb
mull
nop
arpl
xor
add
dec
aam
sub
dec
sub
jno
add
scas
cmp
mov
fiadds
mov
clc
inc
jecxz
push
in
pop
leave
test
out
or
cmp
mov
sti
pop
into
test
add
inc
sub
pusha
loopne
adc
add
nop
push
popa
nop
jb
lcall
and
mov
jae
pusha
adc
orb
decl
call
sub
mov
cld
gs
bound
lock
bound
dec
test
test
jge
gs
fimull
fisubrl
jp
jle
call
sti
push
jecxz
push
shlb
mov
movsb
push
mov
push
shlb
jbe
imul
arpl
xchg
gs
stc
lock
aam
ret
push
lds
outsb
cld
fwait
jbe
cmpsb
cmp
mov
sbbb
and
mov
mov
nop
push
popa
nop
pop
mov
mov
or
adc
les
dec
lods
xor
repz
mov
jl
imul
movsb
ret
shrb
mov
inc
mov
in
data16
xchg
outsb
mov
pop
cmp
mov
cltd
clc
or
or
gs
fnsave
outsl
or
out
cmc
js
mov
mov
shr
adc
jbe
test
jge
sub
pop
cmp
adc
lcall
mov
daa
int
push
les
enter
fldl
mov
clc
push
into
pop
cmp
jg
mov
ljmp
stc
scas
pushf
add
or
adc
sub
lds
aam
les
inc
and
ret
cmpsb
push
mov
out
jg
jmp
add
inc
daa
shlb
xchg
sbb
jae
xchg
xchg
and
icebp
and
xchg
pop
jp
popa
add
pop
scas
and
loopne
adc
add
pop
enter
inc
lret
lret
movsb
ret
ds
mov
fstp
dec
fidivrs
inc
and
adc
mov
jbe
ja
loope
leave
arpl
xchg
mov
mov
mov
js
jno
jecxz
ss
cmp
mov
add
xchg
setg
or
je
inc
fdivl
in
sub
dec
call
xor
hlt
jbe
cmpl
xor
int
ficompl
adc
add
jo
cs
xor
mov
xor
daa
inc
mov
xor
push
fstpt
or
dec
fistpll
push
xor
and
cmpsl
inc
repz
je
insb
jl
addr16
or
or
out
add
je
jp
in
dec
test
in
sbb
sub
mov
mov
es
mov
aad
mov
inc
mov
setnp
outsb
popf
push
push
xor
js
roll
sarl
pop
into
test
int
addr16
imull
cltd
push
shll
sbb
aaa
out
push
ret
cmpsb
push
aam
mov
sub
jbe
imul
sbb
mov
pop
lret
scas
pop
mov
lea
scas
cmp
mov
dec
iret
pop
cmp
cmp
mov
dec
mov
scas
pop
mov
lds
cmpsb
push
cwtl
into
inc
aad
dec
mov
xchg
jb
lods
and
push
xchg
sbb
pop
into
test
shll
fs
or
pop
lret
scas
pop
cld
lods
cmp
pop
iret
stos
pop
test
mov
dec
mov
fsubrl
aam
dec
jmp
shrl
dec
inc
and
push
jle
add
int
shll
fsubrs
sahf
fadds
dec
in
hlt
push
cld
dec
pop
cld
xchg
cmc
add
lods
or
popf
sbb
cmpsl
and
adc
popf
sbb
aad
ss
inc
mov
into
dec
fistpll
sub
push
movb
inc
test
jmp
orl
stc
or
lea
out
adc
add
jmp
hlt
push
clc
je
lea
test
sbb
setg
or
lds
scas
pop
cld
in
jmp
jge
sub
loopne
adc
or
mov
je
ja
loope
xchg
setg
or
sbb
adc
jo
xorl
adc
pop
rclb
imul
loopne
adc
sub
fsts
lret
lret
in
sbb
sahf
stc
or
adc
pop
fimull
fidivrl
loopne
notl
pop
cmp
aas
pop
fisttpll
out
icebp
jnp
mov
mov
cmpsb
shll
pop
fwait
or
jns
pop
mov
cld
pushf
sbb
cs
roll
shll
ljmpw
fstl
mov
in
mov
cmp
and
imul
insl
int3
mov
ljmp
sahf
setg
or
in
js
mov
sub
das
dec
mov
dec
mov
and
out
mov
dec
inc
and
popa
hlt
push
lahf
push
call
lret
jno
jecxz
mov
test
push
test
mov
add
xor
lret
pop
ds
ret
inc
mov
cmpsb
sbb
popa
loopne
adc
add
in
out
adc
cvtps2pd
dec
sub
or
add
sbb
inc
orb
cli
or
jecxz
lods
cmp
push
mov
in
jle
rorb
mov
mov
or
or
cmpsb
dec
pop
int
and
and
jbe
loopne
leave
pop
into
test
push
lds
rcll
pop
mov
mov
inc
mov
sbb
dec
mov
enter
pop
lods
sbb
outsl
xchg
or
rcrl
addr16
dec
fisttpl
or
xor
xorl
cmp
mov
ret
push
ret
push
lds
pop
jb
pop
xchg
adc
int3
inc
and
add
sahf
jl
mov
inc
mov
inc
rclb
and
dec
fstpt
sub
mov
fcoms
mov
pop
cmp
add
je
out
add
jbe
cmpl
fisttpll
out
enter
dec
movsl
ret
movsb
push
mov
jecxz
jo
jno
jecxz
push
sahf
or
cmpsb
add
fs
popf
insb
scas
adc
repz
popf
insb
xchg
jmp
mov
pop
loop
out
je
lea
cmpsl
aaa
push
mov
jne
cmp
nop
dec
inc
and
imul
cmp
sbb
inc
cmp
or
cmpsb
and
jle
call
and
add
roll
shll
popf
and
pop
xchg
repnz
pop
fdivl
in
jmp
push
in
or
push
cmp
push
mov
rolb
pop
cmp
jo
je
lea
mov
inc
mov
mov
fstl
cmpsl
push
mov
xchg
add
mov
jg
jle
pop
leave
test
mov
sbb
mov
inc
mov
xchg
add
std
or
or
jnp
imul
insl
orl
or
aas
arpl
outsl
or
divb
test
insl
hlt
pop
lods
popf
add
std
or
pop
xchg
jb
es
jb
xchg
jo
bound
enter
stc
pop
leave
test
fisubs
push
xor
dec
xor
pushf
sbb
test
mov
movsb
ret
fdivl
fs
pop
push
rolb
shlb
dec
into
pop
cmp
cmp
push
shlb
adc
pop
adc
stos
and
adcl
test
or
cmp
cmp
sbb
pop
lret
lret
movsb
ret
ds
pop
iret
pop
cmp
jo
cmpsl
aaa
push
mov
dec
mov
xchg
mov
scas
cmp
mov
test
xchg
adc
push
out
adc
xor
loopne
push
inc
sbb
sub
inc
xlat
mov
clc
xor
push
xchg
add
es
out
jg
jmp
jp
jae
addr16
sub
dec
fnstcw
icebp
nop
arpl
test
in
sbb
add
sahf
or
cmpsb
inc
mov
mov
add
loop
pop
loop
or
mov
shlb
dec
fnsave
xchg
jne
add
dec
fistpll
lret
scas
pop
scas
int
int
lea
insb
or
repz
jmp
jge
cmp
and
jo
add
push
shll
repz
out
stos
cmp
or
jbe
cmpl
and
pop
repnz
fs
xchg
add
mov
test
push
mov
data16
xchg
outsb
fld
pop
enter
jecxz
in
mov
lock
rcll
mov
sub
inc
lds
iret
sub
aam
sub
imul
adc
inc
fidivrl
stos
int
rolb
jmp
inc
mov
mov
push
repz
popf
or
xchg
mov
push
xor
sub
dec
sub
mov
sbb
xchg
push
mov
sarb
ret
loope
jae
scas
cmp
adcb
loopne
ror
pop
leave
test
mov
in
add
ljmp
adc
sbb
xchg
addr16
mov
fisttpl
fnsave
data16
xchg
outsb
rorl
nop
push
popa
nop
cmp
xchg
in
jo
xorl
push
mov
inc
ret
es
mov
cmpsl
sub
mov
push
fisttpl
fnstsw
push
adc
mov
jmp
movb
sbb
bound
test
rorl
dec
stos
xor
popa
xchg
pop
dec
push
xor
and
cmp
dec
pop
rolb
shlb
add
and
in
jge
je
insl
jl
jge
testl
scas
or
push
shlb
sti
push
hlt
xchg
xchg
adc
insb
clc
outsb
or
adc
jecxz
mov
jae
jle
call
xlat
and
or
fidivs
dec
fistpll
aam
mov
gs
dec
pop
mov
mov
xchg
inc
lret
pop
ds
mov
in
cmc
push
xlat
inc
and
cmp
insb
test
insl
hlt
pop
in
jnp
mov
cmp
das
dec
mov
fs
ja
sub
dec
fistpll
jmp
jge
callw
call
insb
lahf
jg
mov
les
mov
fidivrs
mov
sbb
aad
subl
or
lds
jne
out
syscall
xchg
add
js
mov
js
popa
mov
aad
orl
add
arpl
fwait
or
sub
mov
insl
pushf
and
xchg
dec
aam
sub
cmp
pop
lret
scas
pop
in
fdivrl
mov
popa
nop
pop
outsl
repz
cmc
daa
out
jae
xchg
push
aad
sub
cmp
loope
adc
add
aam
dec
fstpt
add
sahf
jo
or
in
std
and
scas
and
clc
jo
xorl
inc
lods
jg
addr16
sbb
push
inc
shll
lret
scas
pop
scas
out
jmp
jge
fisttps
push
mov
fidivrs
sbb
cld
xchg
cmc
add
xor
fimuls
mov
sbb
sub
test
out
jg
jmp
sahf
insl
ret
or
cmpsb
sbb
cwtl
mov
hlt
shll
gs
xchg
adc
jmp
or
jle
mov
sbb
inc
sub
imul
sbb
or
jae
cmp
divb
xchg
in
sbb
add
push
pushf
sti
push
hlt
jge
fs
pop
les
push
lahf
idivb
je
imul
sbb
adc
mov
dec
ret
ret
adc
lods
and
pop
mov
mov
sbb
rolb
mov
in
add
std
or
es
inc
mov
xor
adc
ret
push
les
xor
push
or
imull
test
filds
mov
icebp
mov
mov
pop
xchg
adc
test
jp
movsl
add
jnp
mov
addb
icebp
add
stos
das
mov
add
jle
mov
mov
cmpsb
aas
mov
mov
jl
outsl
or
out
jnp
addr16
sbb
popa
enter
dec
mov
cmp
daa
sub
inc
rorb
push
mov
pop
int
mov
jae
in
out
ljmp
cmp
cmp
movsb
ret
ds
sub
lcall
fimull
fidivl
pop
leave
pop
cmp
and
or
mov
mov
in
jge
testl
cli
rcrl
pop
out
fisttpl
fnsave
mulb
dec
or
and
cmpps
pusha
out
nop
push
popa
nop
pop
mov
out
adc
js
into
pop
cmp
aaa
sub
and
push
xchg
sbb
lahf
punpckhdq
cli
or
mov
cmpsb
shll
or
mov
dec
rcll
or
stc
inc
lret
lret
mov
inc
mov
inc
leave
pop
cmp
and
jnp
mov
test
test
cmp
sbb
adcb
out
mov
adcl
test
lret
pop
ds
mov
mov
and
xor
push
rclb
addr16
mov
mov
inc
mov
mov
in
sbb
out
jne
mov
leave
push
lds
inc
mov
insb
lock
pop
aaa
stos
cmp
sbb
mov
movsb
push
shlb
mov
inc
mov
dec
iret
pop
cmp
xor
pop
lret
scas
pop
mov
daa
cmp
jb
xchg
into
dec
fdivrs
jnp
in
add
pop
cmp
sub
push
mov
dec
fstl
pop
aam
sub
icebp
nop
arpl
popf
jns
and
push
fimuls
adc
xor
es
push
mov
pop
jb
sub
push
shll
or
fdivrl
mov
fisttpll
out
mov
and
jecxz
push
xchg
repz
mov
aaa
pushf
or
or
and
fisttps
mulb
dec
xor
push
icebp
insb
loop
je
cmp
and
fwait
leave
dec
fnstcw
pop
cmp
das
mov
cmpsl
ret
and
cmp
dec
pop
jecxz
push
in
out
push
out
lock
bound
fdivrp
jo
xorl
lcall
cmpsb
cmp
out
notl
lock
je
addr16
rolb
sarb
xlat
pop
enter
jne
jne
out
add
xlat
and
lahf
punpckhdq
loope
shll
mov
inc
mov
pop
stos
inc
clc
insb
loop
je
aas
stos
cmp
or
paddb
push
xor
jbe
inc
aam
dec
out
add
mov
pop
rcll
jbe
cmp
cltd
or
jne,pn
inc
sub
pop
inc
in
sbb
pop
bound
xchg
xorb
repnz
pop
repnz
ficompl
popf
or
adcl
cmp
jbe
xchg
cmc
add
dec
ret
repz
test
cmpsl
ret
insl
loope
adc
add
cwtl
jp
aam
sub
jb
in
das
ret
push
lds
or
or
xor
fmuls
fcomps
dec
fimull
fidivrl
ljmp
cltd
push
cmp
and
jle
into
push
lret
lods
push
ret
cmpsb
push
in
aaa
cmpsl
ret
xchg
push
pushf
sti
push
test
das
test
pop
iret
stos
pop
sarb
je
out
inc
and
add
mov
mov
mov
mov
cmpsl
pop
fdivl
in
xor
push
pop
mov
in
hlt
aad
mov
gs
adc
jo
xorl
iret
push
cltd
or
push
xchg
sbb
aad
lret
lods
lret
inc
mov
xlat
aaa
add
push
jns
popa
cld
ja
xorb
or
aas
scas
lret
addr16
gs
pop
ret
push
shlb
lods
pop
mov
cld
push
scas
cmp
insb
loop
je
sbb
sbbl
mov
xchg
adc
outsb
rol
pop
int3
stos
iretw
or
sub
es
mov
icebp
insb
loop
je
popa
rcll
inc
test
mov
cs
push
lret
cld
fwait
jbe
sbb
rclb
mov
sbb
sub
lds
xchg
pop
xchg
adc
jp
insl
hlt
pop
in
sub
xor
scas
dec
addr16
bound
xchg
lock
push
add
lret
xchg
sbb
aad
sub
xchg
pop
bound
test
gs
pushf
outsl
cwtl
setge
xchg
add
push
adcb
jecxz
cld
jno
je
out
add
adc
lods
cmp
cmpsb
xor
scas
pop
and
sub
sub
mov
pop
rclb
imul
pop
lds
iret
fs
pusha
notb
jmp
fmuls
fcomps
jnp
mov
aad
les
inc
and
add
and
and
xor
inc
and
xchg
adc
setg
or
in
gs
pushf
outsl
lret
daa
inc
mov
lods
and
loopne
cld
fwait
jbe
daa
test
pop
test
fs
and
test
in
adc
add
adc
add
adc
add
add
imul
add
enter
rclb
add
push
adc
add
adc
add
adc
add
adc
add
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
js
add
test
add
mov
adc
add
mov
add
rcll
add
push
add
repnz
add
arpl
add
ja
add
xchg
pop
add
mov
pop
add
rcll
add
inc
sbb
add
add
je
add
jg
add
cmpsb
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
pusha
sbb
add
add
sahf
sbb
add
sbb
add
sbb
add
add
push
add
jbe
add
jg
add
mov
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
jne
add
ret
add
sbb
add
push
add
jmp
push
add
add
add
inc
pop
add
ficomps
add
out
pop
add
push
and
add
and
add
and
add
and
add
and
add
add
xor
add
dec
and
add
add
dec
and
add
add
andl
add
mov
and
add
and
add
add
dec
and
add
add
andb
nop
and
add
and
add
and
add
cmp
and
add
mov
add
aas
add
dec
add
xchg
add
pushf
add
add
adc
add
push
daa
add
push
daa
add
sub
add
inc
daa
add
push
daa
add
xchg
daa
add
les
add
loop
add
xor
add
inc
sub
add
add
shrb
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
xor
xor
add
add
jnp
add
test
xor
add
xor
add
add
push
xor
add
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
jns
add
test
add
enter
into
xor
add
xor
add
xor
add
xor
add
xor
add
add
xchg
add
xor
add
xor
add
xor
add
cmp
add
dec
xor
add
test
add
sti
xor
add
sub
add
cmp
add
dec
add
jns
add
test
add
shll
add
add
clc
add
sbb
aaa
add
insb
aaa
add
mov
add
repz
add
std
aaa
add
and
add
xor
add
inc
cmp
add
add
jl
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
add
jo
add
jnp
add
mov
cmp
add
cmp
add
add
cmp
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
jae
add
mov
add
jmp
cmp
add
cmp
add
cmp
add
cmp
add
add
jb
add
scas
cmp
add
cmp
add
cmp
add
cmp
add
pop
cmp
add
loope
add
jmp
add
push
add
and
add
xor
add
pop
add
push
add
cmpsl
add
loopne
add
ljmp
add
aas
add
xor
add
pop
aas
add
imul
add
sarl
add
fnstsw
add
add
add
add
push
inc
add
cltd
inc
add
fadds
add
inc
add
add
inc
add
sub
add
add
popa
inc
add
sahf
inc
add
xlat
inc
add
loope
add
add
add
pop
inc
add
daa
inc
add
push
inc
add
pusha
inc
add
popf
inc
add
enter
aam
add
stc
inc
add
and
add
add
mov
add
inc
add
fildl
in
add
or
add
inc
add
sub
add
add
fs
add
mov
inc
add
in
add
pop
inc
add
sbb
add
inc
add
pop
inc
add
arpl
add
inc
add
fildl
add
inc
add
adc
add
inc
add
dec
inc
add
pop
inc
add
xchg
inc
add
ret
add
inc
add
repz
add
sbb
dec
add
insb
dec
add
xchg
dec
add
rorl
aam
add
fimuls
add
dec
add
adc
add
and
add
push
dec
add
pop
dec
add
lcall
add
dec
add
add
add
dec
add
and
add
add
pop
dec
add
cltd
dec
add
lret
add
dec
add
testl
add
dec
add
dec
dec
add
push
dec
add
nop
dec
add
mov
dec
add
in
dec
add
sbb
add
das
dec
add
cmp
pop
dec
add
outsl
dec
add
jg
add
lods
dec
add
mov
dec
add
cs
add
cmp
add
add
outsb
dec
add
jle
add
lods
dec
add
mov
add
hlt
dec
add
and
dec
add
push
dec
add
gs
add
jne
add
mov
dec
add
jmp
add
push
dec
add
and
add
add
jno
add
xchg
dec
add
rorb
in
add
adc
push
add
xor
add
add
push
push
add
cmpsb
push
add
mov
add
out
push
add
daa
push
add
xor
add
add
add
ja
add
movsl
push
add
mov
add
in
push
add
push
push
add
sub
add
add
pop
push
add
outsb
push
add
pushf
push
add
cmpsl
push
add
in
add
rcpps
add
push
add
inc
push
add
push
add
push
add
mov
push
add
push
push
add
and
sub
dec
push
add
popa
push
add
jno
add
lahf
push
add
stos
push
add
out
add
and
add
push
add
dec
push
add
pusha
push
add
jo
add
sahf
push
add
test
push
add
pop
push
add
and
add
add
add
addr16
add
xchg
push
add
mov
push
add
dec
pop
add
push
pop
add
jne
add
mov
add
pop
add
rcrl
add
add
aas
pop
add
lea
add
pop
add
out
add
add
add
pop
add
arpl
add
add
negb
add
pop
add
pop
pop
add
pushf
pop
add
test
pop
add
rcrb
rcrl
add
add
test
pop
add
cmc
pop
add
xchg
pop
add
pop
add
sbb
add
add
lahf
pop
add
in
add
or
add
push
pop
add
jp
add
rcrl
call
popa
add
cli
add
aas
add
insb
add
mov
add
add
daa
push
add
mov
add
add
adc
add
insl
add
pop
jne
add
jbe
add
ja
add
ja
add
ja
add
add
push
ja
add
add
int3
ja
add
js
add
js
add
add
push
js
add
js
add
js
add
js
add
jns
add
jns
add
add
jbe
add
bnd
add
jns
add
jns
add
jp
add
jp
add
jp
add
jp
add
add
and
add
inc
jnp
add
jnp
add
jnp
add
jl
add
add
mov
add
jl
add
jge
add
jge
add
jge
add
jge
add
jle
add
add
jnp
add
mov
add
jle
add
jle
add
jle
add
jg
add
jg
add
add
popa
jg
add
jg
add
jg
add
jg
add
addb
sub
addb
imul
add
mov
add
scas
addb
ljmp
add
addl
add
addl
add
add
imul
add
roll
add
addl
add
addb
sub
add
inc
addb
dec
addb
pop
addb
bound
add
jle
add
test
add
mov
addb
stos
addb
mov
add
sub
add
push
addl
push
add
jp
add
test
add
mov
add
lock
and
add
add
arpl
add
test
add
test
add
test
add
add
insl
test
add
add
stos
test
add
test
add
xchg
add
xchg
add
add
imul
add
mov
add
out
xchg
add
xchg
add
xchg
add
add
jne
add
test
add
mov
xchg
add
add
mov
add
add
insb
mov
add
add
mov
add
mov
add
add
push
mov
add
add
xchg
add
les
add
or
add
aas
mov
add
add
pop
mov
add
add
xchg
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
mov
add
int3
mov
add
mov
add
add
inc
mov
add
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
lea
add
lea
add
mov
add
add
push
mov
add
add
mov
mov
add
mov
add
mov
add
popl
add
add
mov
add
mov
popl
add
popl
add
add
pop
nop
add
push
nop
add
mov
add
mov
add
lret
add
nop
add
or
add
push
xchg
add
adcl
add
xchg
add
xchg
add
out
add
adc
add
pop
xchg
add
pop
xchg
add
lea
add
mov
xchg
add
fstl
add
push
xchg
add
push
xchg
add
cmpsl
xchg
add
mov
add
aam
add
out
add
notl
add
xor
add
xchg
add
mov
xchg
add
repz
add
add
add
cmp
add
jns
add
scas
xchg
add
mov
xchg
add
out
xchg
add
call
add
cmp
add
test
add
mov
xchg
add
call
xchg
add
or
add
inc
xchg
add
adcl
add
pop
cwtl
add
mov
cltd
add
rcrb
add
lcall
fwait
lcall
pop
fwait
add
aaa
fwait
add
inc
fwait
add
bound
add
jnp
add
lahf
fwait
add
scas
fwait
add
mov
fwait
add
push
pushf
add
jae
add
mov
pushf
add
sti
pushf
add
or
popf
add
cmp
add
push
popf
add
fs
add
imul
add
mov
add
les
add
add
add
xor
add
ds
add
popa
sahf
add
je
add
test
add
mov
sahf
add
xor
add
cmp
add
inc
lahf
add
dec
lahf
add
andl
add
mov
add
out
add
inc
mov
add
jp
add
xchg
mov
add
sub
add
mov
add
shlb
add
mov
add
jl
add
aam
add
fisubs
add
sub
add
fldenv
add
data16
add
inc
scas
add
insl
scas
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
das
mov
add
dec
mov
add
arpl
add
sahf
mov
add
mov
mov
add
in
add
clc
mov
add
push
mov
add
cs
add
dec
mov
add
mov
add
outsb
mov
add
sbb
add
lods
mov
add
cmp
add
mov
add
pop
mov
add
je
add
fidivrl
add
hlt
mov
add
pop
mov
add
iret
mov
add
rolb
fld
add
sub
add
js
add
mov
add
ret
pop
ret
adc
add
and
add
jo
add
mov
add
aas
lds
add
movb
int
add
or
movl
add
add
mov
add
pushf
movl
add
movl
add
add
push
enter
enter
enter
enter
enter
enter
leave
add
cmp
add
dec
leave
add
insl
leave
add
xchg
leave
add
mov
lret
push
lret
xor
add
inc
lret
push
lret
or
add
lret
add
add
or
lret
add
inc
lret
add
push
lret
add
or
add
leave
lret
add
hlt
lret
add
add
add
and
int3
add
je
add
fxch
add
sbb
int
add
add
test
add
int
add
int
add
int
add
int
add
into
add
adc
into
add
push
into
add
pop
into
add
fwait
into
add
aam
add
fmulp
add
add
add
adc
add
and
add
push
iret
add
pop
iret
add
lcall
add
iret
add
add
add
adc
add
and
add
push
rolb
add
add
rolb
add
rolb
add
rolb
add
roll
add
add
roll
add
add
rolb
add
add
je
add
test
add
mov
add
mov
rolb
add
roll
add
add
insl
roll
add
roll
add
roll
add
aam
add
aam
add
add
fs
add
add
xchg
add
mov
add
rcl
add
aam
add
aad
add
aad
add
add
adc
add
aad
add
aad
add
add
aas
add
dec
add
insb
add
jg
add
add
mov
add
add
xlat
add
inc
xlat
add
arpl
add
jbe
add
xchg
add
mov
add
mov
xlat
add
push
fadds
add
add
jge
add
nop
fadds
add
fadds
add
fadds
add
flds
add
add
pop
flds
add
add
mov
add
pushf
flds
add
add
in
add
and
add
pop
fiaddl
add
add
test
add
cwtl
fiaddl
add
fiaddl
add
fiaddl
add
fildl
add
add
fildl
add
add
xchg
fildl
add
add
loop
add
in
fildl
add
faddl
add
faddl
add
add
out
add
or
add
sbb
fiadds
add
add
data16
add
fiadds
add
add
push
filds
add
filds
add
add
add
filds
add
filds
add
loopne
add
add
mov
add
mov
loopne
add
loopne
add
loope
add
loope
add
add
outsl
loope
add
loope
add
loope
add
loope
add
add
cmp
add
inc
loop
add
add
test
add
test
add
mov
loop
add
loop
add
add
lods
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
add
addr16
add
in
add
in
add
in
add
add
aas
in
add
add
adc
add
sbb
add
ds
add
add
popa
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
fwait
out
add
out
add
add
push
call
add
push
call
add
xchg
call
add
add
sub
add
jmp
add
out
jmp
add
or
add
test
add
mov
ljmp
pop
jmp
add
jmp
add
add
gs
add
jmp
add
in
add
and
add
dec
in
add
mov
in
add
mov
in
add
cmc
in
add
inc
in
add
pop
in
add
imul
add
add
jg
add
lods
in
add
ret
in
add
int
add
shr
add
out
in
add
add
add
or
out
add
dec
out
add
je
add
xchg
out
add
push
out
add
imul
add
cmpsb
out
add
mov
lock
out
add
jmp
add
sbb
icebp
add
jmp
add
div
add
lcall
add
repz
mov
repz
push
hlt
add
dec
hlt
add
movsb
hlt
add
mov
add
or
cmc
add
jge
add
mov
add
out
add
add
add
shl
add
testb
pop
testl
add
testl
add
clc
add
gs
add
js
add
mov
add
sahf
clc
add
mov
add
sar
add
clc
add
adc
add
and
stc
add
jl
add
stc
add
in
cli
add
cmp
add
inc
std
add
pop
std
add
pop
incl
add
add
add
movsb
incl
add
push
add
push
pop
add
out
or
add
or
add
push
add
jae
add
sti
sgdtl
push
adc
add
adc
add
adc
add
adc
add
add
in
add
out
adc
add
push
add
fsts
add
leave
sbb
add
sbb
add
sbb
add
add
daa
sbb
add
add
pop
sbb
add
add
add
add
dec
pop
add
test
add
popf
pop
add
mov
add
ret
add
and
add
and
add
and
add
and
add
add
and
add
add
nop
and
add
and
add
and
add
push
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
mov
add
lds
add
add
add
adc
add
bound
add
jg
add
lds
add
add
add
adc
add
add
cmc
sub
add
inc
add
pop
add
push
add
stos
add
sti
das
add
cltd
xor
add
add
or
add
add
popa
add
cwtl
add
add
in
add
xor
aaa
add
cwtl
aaa
add
xlat
aaa
add
in
add
cmp
add
cmp
add
add
push
add
popf
cmp
add
cmp
add
cmp
add
add
lret
add
add
jns
add
test
add
mov
add
iret
aas
add
lea
add
inc
add
test
add
inc
add
push
inc
add
sub
add
jge
add
lcall
add
inc
add
sub
inc
add
fwait
inc
add
lret
add
inc
add
or
add
add
dec
inc
add
ret
inc
add
into
inc
add
lea
add
dec
add
gs
add
jo
add
or
add
dec
add
cmp
aam
add
or
add
push
add
pop
push
add
push
add
test
add
push
add
add
add
add
test
add
add
cmc
push
add
sub
xor
add
inc
push
add
jg
add
xchg
push
add
popf
push
add
cmp
push
add
pop
push
add
add
add
push
add
stos
push
add
mov
pop
add
lods
pop
add
mov
pop
add
adc
add
pop
add
xor
pop
add
push
pop
add
xchg
pop
add
mov
pop
add
pop
pop
add
and
add
add
dec
pop
add
popf
pop
add
test
add
pop
add
rcrl
add
pop
add
adc
add
add
mov
add
pop
add
xor
pop
add
call
pop
add
pop
pop
add
xor
add
pop
add
hlt
pop
add
xor
pop
add
sbb
add
add
pop
add
rcrl
add
pop
add
cld
pop
add
pop
pusha
add
jb
add
fwait
pusha
add
mov
add
mov
pusha
add
pusha
add
push
popa
add
dec
popa
add
pop
popa
add
addr16
add
pop
bound
add
add
daa
bound
add
bound
add
add
mov
mov
add
enter
loop
add
in
add
std
add
cmp
add
add
push
add
add
add
and
add
add
out
add
packuswb
add
add
scas
add
mov
add
loope
add
add
add
push
add
pop
push
add
and
add
add
push
add
add
out
push
add
imul
xor
imul
push
imul
mov
add
imul
leave
imul
add
sbb
es
add
inc
insb
add
je
add
jg
add
pushf
insb
add
scas
insb
add
mov
outsb
add
inc
outsb
add
pop
outsb
add
test
add
outsl
add
pop
outsl
add
insb
outsl
add
mov
outsl
add
jmp
outsl
add
or
add
jo
add
add
push
jo
add
jno
add
add
in
add
stc
jno
add
add
jb,pn
add
jb
add
add
jnp
add
xchg
add
jb
add
jae
add
jae
add
add
insl
jae
add
add
fnsave
add
jae
add
jae
add
add
jb
add
mov
shll
je
add
je
add
jne
add
jbe
add
ja
add
js
add
js
add
jns
add
add
pop
jns
add
jns
add
jns
add
jp
add
add
fdivrl
add
jp
add
jp
add
jnp
add
jl
add
jge
add
jge
add
jge
add
add
jle
add
jg
add
add
insl
jg
add
jg
add
addb
sbb
addb
fiaddl
add
xor
add
repnz
add
add
jno
add
xchg
add
add
inc
mov
add
mov
add
mov
add
add
sub
add
jo
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
xor
add
push
mov
add
add
rorl
add
fisttps
add
jmp
add
icebp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
add
push
lea
add
add
jb
add
push
mov
add
add
pop
mov
add
add
mov
add
mov
add
mov
add
add
mov
add
adcl
add
xchg
add
and
add
dec
xchg
add
jo
add
je
add
js
add
jl
add
push
xchg
add
mov
add
mov
add
out
add
ret
fwait
add
pop
pushf
add
dec
popf
add
jl
add
sbbb
add
popf
add
es
add
daa
lahf
add
adc
mov
add
mulb
add
jo
add
xor
add
add
mov
add
lods
add
loopne
add
imulb
add
scas
add
push
scas
add
popa
scas
add
mov
scas
add
loope
add
add
add
jno
add
pop
mov
add
add
icebp
mov
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
mov
add
add
add
dec
mov
add
add
push
mov
add
add
pop
mov
add
add
scas
mov
add
add
adc
add
dec
ret
xchg
add
ret
int
add
daa
ret
add
ss
add
fadd
add
jmp
add
loope
add
lock
add
movl
add
enter
int
add
iret
add
add
add
push
rolb
add
add
add
pop
rolb
add
add
cmpsb
aad
add
add
jecxz
add
push
faddl
add
fldl
add
fldl
add
fiadds
add
jecxz
add
in
add
add
sbb
add
sbb
add
and
add
and
add
sub
add
sub
add
xor
add
xor
add
cmp
add
cmp
add
inc
in
add
add
add
dec
in
add
add
push
in
add
add
pop
in
add
add
jae
add
mov
call
add
test
add
lods
call
add
mov
add
mov
call
add
call
add
int3
call
add
aam
add
fsubr
add
fsubr
add
loopne
add
in
add
call
call
add
xor
add
dec
jmp
add
gs
add
sbb
add
sub
add
ljmp
pop
jmp
add
add
and
add
cs
add
add
pop
jmp
add
jmp
add
jmp
add
jmp
add
in
add
scas
in
add
adc
add
ss
add
cmp
out
add
pop
out
add
gs
add
jb
add
sub
add
out
add
scas
out
add
out
add
push
out
add
insb
out
add
shr
add
repnz
add
xor
lock
mov
add
shl
add
repz
jo
add
pop
hlt
add
xchg
hlt
add
cmpsl
hlt
add
or
add
adc
add
push
cmc
add
pop
cmc
add
pop
cmc
add
pusha
cmc
add
fs
add
push
cmc
add
jo
add
adc
add
daa
testb
inc
clc
add
stc
stc
add
sub
cli
add
cmp
add
add
mov
add
nop
cli
add
xchg
cli
add
mov
cli
add
or
add
mov
add
add
add
add
add
add
scas
pop
add
loopne
add
in
add
call
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
add
inc
push
add
inc
push
add
dec
push
add
dec
push
add
push
push
add
push
push
add
pop
push
add
pop
push
add
pusha
push
add
fs
add
push
push
add
jo
add
je
add
js
add
jl
add
orb
add
add
mov
add
mov
add
leave
push
add
fmuls
add
out
push
add
testl
add
adc
add
push
adc
add
add
lcall
add
add
rcll
add
jecxz
add
push
adc
add
adc
add
add
cmp
add
inc
adc
add
add
adc
add
adc
add
adc
add
add
jl
add
rcll
add
add
add
adcb
test
add
adc
add
adc
add
pop
add
push
pop
add
popa
sbb
add
sbb
add
add
inc
sbb
add
sbb
add
add
push
sbb
add
sbb
add
xchg
pop
add
jmp
add
and
add
push
and
add
add
mov
and
add
sbb
add
and
add
and
add
sub
add
sub
add
xor
add
xor
add
cmp
add
arpl
add
jl
add
daa
add
xchg
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
xor
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
test
add
ljmp
add
add
inc
add
push
add
arpl
add
jp
add
subl
add
lcall
add
add
add
add
and
add
aaa
das
add
dec
das
add
insl
das
add
mov
add
mov
xor
add
add
pop
xor
add
add
xor
add
add
insb
xor
add
add
pop
xor
add
xor
add
xor
add
xor
add
xor
add
add
or
add
add
adc
add
add
mov
add
bound
add
insb
aaa
add
xorb
add
add
mov
cmp
add
cmp
add
add
xchg
cmp
add
add
imul
add
push
inc
add
mov
add
inc
add
jae
add
mov
dec
add
mov
add
dec
add
cwtl
dec
add
pushf
dec
add
mov
dec
add
test
add
lods
dec
add
int3
dec
add
nop
dec
add
xchg
dec
add
cwtl
dec
add
pushf
dec
add
mov
dec
add
test
add
lods
dec
add
mov
add
mov
add
ret
dec
add
add
dec
add
add
orl
cli
dec
add
dec
dec
add
push
dec
add
fs
add
jno
add
orl
fwait
dec
add
mov
dec
add
mov
add
dec
add
fmuls
add
dec
add
and
add
dec
add
xchg
dec
add
repz
add
or
add
push
push
add
adcb
mov
push
add
in
push
add
add
add
pusha
push
add
ret
push
add
lahf
push
add
xor
add
mov
push
add
cli
push
add
xor
add
pop
add
aaa
pop
add
inc
pop
add
push
pop
add
insl
pop
add
jns
add
mov
add
rcrl
add
add
add
mov
add
sbbl
mov
add
scas
pop
add
outsb
pusha
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
les
enter
int3
add
shlb
aam
add
fsubs
fsubl
loopne
add
in
add
call
add
lock
hlt
add
add
add
add
sub
add
inc
add
loope
add
xor
add
add
data16
data16
aam
add
loope
add
repz
add
add
add
add
inc
add
push
add
pop
add
push
add
jp
add
mov
add
add
add
adc
add
push
add
lret
add
imul
add
add
arpl
add
push
add
push
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
imul
xlat
imul
outsb
add
es
add
add
xchg
add
je
add
jne
add
add
aad
add
nop
ja
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jl
add
add
or
or
add
adc
sub
pop
jl
add
addl
add
addl
add
addl
add
addl
add
addl
add
addl
add
addb
add
add
or
add
adc
add
cmp
add
jnp
add
addl
add
add
addl
add
add
and
add
pop
test
add
add
je
add
addl
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
push
test
add
add
jns
add
jecxz
add
add
add
dec
xchg
add
add
sahf
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
mov
add
add
xor
add
cmp
add
inc
mov
add
add
add
jecxz
add
testl
add
mov
xchg
add
jae
add
fstl
add
add
xchg
xchg
add
std
xchg
add
xor
add
dec
cwtl
add
push
cwtl
add
push
cwtl
add
pop
cwtl
add
arpl
add
jno
add
js
add
jg
add
xchg
add
cwtl
cwtl
add
popf
cwtl
add
mov
cwtl
add
lods
cwtl
add
mov
add
mov
cwtl
add
lds
add
rcrb
add
fistps
add
jmp
cwtl
add
repz
add
stc
cwtl
add
add
add
or
cltd
add
sbb
add
daa
cltd
add
sub
add
xor
add
ds
add
inc
cltd
add
dec
cltd
add
push
cltd
add
push
cltd
add
pop
cltd
add
cwtd
add
outsb
cltd
add
jae
add
js
add
jge
add
test
add
xchg
cltd
add
cwtl
cltd
add
popf
cltd
add
mov
cltd
add
mov
add
mov
lcall
jmp
pushf
add
jecxz
add
stc
mov
add
mov
add
bt
add
add
out
add
inc
movsl
add
push
movsl
add
push
movsl
add
pop
movsl
add
movsl
add
outsb
movsl
add
je
add
jnp
add
andb
add
add
scas
movsl
add
mov
add
mov
movsl
add
movsl
add
int3
movsl
add
shll
add
fsubl
add
jmp
movsl
add
rep
add
clc
movsl
add
jmp
add
or
add
push
cmpsb
add
sbb
add
and
add
sub
add
xor
add
cmpsb
add
inc
cmpsb
add
dec
cmpsb
add
push
cmpsb
add
pop
cmpsb
add
pop
cmpsb
add
cmpsb
add
imul
add
jg
add
test
add
cmpsb
add
xchg
cmpsb
add
fwait
cmpsb
add
movsb
cmpsb
add
stos
cmpsb
add
scas
cmpsb
add
mov
add
mov
cmpsb
add
cmpsb
add
int
add
shlb
add
fsubl
add
ljmp
add
cmpsb
add
cli
cmpsb
add
jmp
add
or
cmpsl
add
sbb
add
sub
add
aaa
cmpsl
add
cmpsl
add
dec
cmpsl
add
dec
cmpsl
add
push
cmpsl
add
pop
cmpsl
add
pop
cmpsl
add
cmpsl
add
push
add
outsl
cmpsl
add
je
add
jnp
add
andl
add
nop
cmpsl
add
xchg
cmpsl
add
popf
cmpsl
add
mov
cmpsl
add
lods
cmpsl
add
mov
add
mov
cmpsl
add
lds
add
iret
cmpsl
add
cmpsl
add
fsubl
add
out
add
jmp
add
repnz
add
clc
cmpsl
add
std
cmpsl
add
add
add
push
test
add
add
sbb
add
and
add
xor
add
cmp
add
inc
test
add
add
push
test
add
add
pop
test
add
add
imul
add
jnp
add
subb
add
add
cltd
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
stos
add
mov
scas
add
sbb
add
and
add
imul
add
data16
add
add
lods
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
lds
add
add
add
push
add
xchg
movb
lods
movb
rol
add
add
add
push
lret
pop
lret
add
and
add
inc
lret
add
push
lret
add
adc
add
inc
int
add
add
dec
int
add
add
cwtl
int
add
int
add
int
add
into
add
sbb
add
cs
add
inc
into
add
push
into
add
addr16
add
jp
add
into
add
mov
into
add
into
add
fcmove
add
in
into
add
add
add
push
iret
add
ror
add
xlat
iret
add
sbb
add
mov
rolb
add
rolb
add
rolb
add
roll
add
roll
add
roll
add
roll
add
rolb
add
add
adc
add
rolb
add
roll
add
roll
add
roll
add
roll
add
roll
add
aam
add
add
ja
add
aam
add
aam
add
aam
add
aam
add
aam
add
add
mov
add
add
jle
add
ret
xlat
add
repz
add
loopne
add
add
jns
add
jg
add
xor
add
cmp
add
inc
jecxz
add
add
add
dec
jecxz
add
add
push
jecxz
add
add
pop
jecxz
add
add
fs
add
add
insb
jecxz
add
add
je
add
js
add
jl
add
and
add
add
mov
add
nop
jecxz
add
add
pushf
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
add
or
add
or
add
adc
add
adc
add
es
add
out
add
call
add
inc
in
add
in
add
inc
out
add
xor
add
shl
add
cmc
add
and
add
sub
add
xor
cmc
add
pop
cmc
add
cmc
add
insb
cmc
add
jge
add
test
add
fdiv
add
in
add
adc
add
inc
testb
inc
testb
dec
testb
pop
testl
add
cld
add
fsin
add
dec
incl
add
add
add
add
push
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
mov
add
pop
push
add
jbe
add
insl
pop
add
mov
pop
add
xor
add
pop
or
add
or
add
add
dec
or
add
add
push
add
add
add
and
lsl
cmp
add
rorl
add
in
lsl
lock
hlt
lsl
clc
lsl
cld
lsl
add
add
add
add
and
add
data16
add
adc
add
adc
add
add
add
je
add
js
add
jl
add
adcb
test
add
adc
add
adc
add
adc
add
adc
add
jg
add
adc
add
mov
add
mov
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
sub
add
sub
add
xor
add
xor
add
cmp
add
dec
sbb
add
add
pop
sbb
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
inc
sbb
add
add
add
dec
sbb
add
add
push
sbb
add
add
pop
sbb
add
add
fs
add
add
insb
sbb
add
add
je
add
js
add
jl
add
sbbb
test
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
arpl
add
mov
and
add
and
add
and
add
add
or
sub
add
sub
add
sub
add
add
or
add
fisubrl
add
add
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
inc
sub
add
add
add
dec
sub
add
add
add
je
add
js
add
jl
add
subb
test
add
sub
add
sub
add
jbe
add
xor
add
xor
add
xorl
add
cmp
add
cmp
add
cmp
add
add
sbb
add
sbb
add
and
add
and
add
aad
add
cmp
add
test
add
in
inc
add
lock
add
hlt
inc
add
clc
inc
add
cld
inc
add
add
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
inc
inc
add
inc
inc
add
dec
inc
add
dec
inc
add
push
inc
add
push
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
fs
add
push
inc
add
lea
add
inc
add
and
add
sub
sub
add
xor
xor
add
cmp
cmp
add
inc
inc
add
inc
inc
add
dec
inc
add
dec
inc
add
push
inc
add
push
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
fs
add
push
inc
add
jo
add
je
add
js
add
jl
add
xchg
lahf
inc
add
scas
inc
add
in
add
out
inc
add
movl
add
add
inc
add
inc
inc
add
pop
inc
add
insl
inc
add
mov
inc
add
movl
add
dec
add
mov
dec
add
inc
dec
add
push
dec
add
popa
dec
add
outsb
dec
add
orb
xchg
dec
add
icebp
dec
add
add
add
dec
add
push
add
jae
add
jg
add
mov
add
and
dec
add
test
add
dec
add
and
add
imul
dec
add
xchg
dec
add
rorl
inc
dec
add
mov
add
ljmp
add
push
add
out
add
cmc
push
add
and
add
push
add
scas
push
add
add
add
push
add
xchg
push
add
scas
push
add
hlt
push
add
clc
push
add
cld
push
add
add
add
pop
add
ret
pop
add
fbld
add
add
outsl
add
add
add
jle
add
leave
push
add
insb
add
lahf
jo
add
jae
add
jne
add
jbe
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
add
stos
jns
add
jle
add
add
add
arpl
add
add
sbb
addl
inc
addl
insb
addl
test
add
lahf
addl
mov
addl
cld
addl
aaa
test
add
add
test
add
test
add
add
or
add
faddl
add
xchg
mov
add
add
fmuls
add
adc
add
push
mov
add
mov
add
mov
add
add
dec
mov
add
add
jne
add
jle
add
xchg
mov
add
add
xlat
mov
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
add
xor
add
rcll
add
add
ret
xchg
add
fsts
add
push
xchg
add
imul
add
add
jns
add
in
add
notl
add
jo
add
je
add
js
add
jl
add
sbbb
add
cwtl
add
mov
cltd
add
adc
cltd
add
xchg
cltd
add
insb
lcall
je
add
js
add
jl
add
sbbb
add
add
ret
sahf
add
jbe
add
mov
lahf
add
mov
lahf
add
xor
add
xchg
cmpsb
add
add
add
pop
test
add
movsb
test
add
out
test
add
lock
add
push
stos
add
dec
lods
add
or
add
jle
add
pop
mov
add
add
pop
mov
add
add
add
insb
mov
add
add
je
add
js
add
jl
add
xorb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
movsb
mov
add
mov
add
mov
add
add
repz
add
mov
add
add
stc
mov
add
add
in
add
call
mov
add
hlt
mov
add
cld
mov
add
add
add
add
add
fistpll
add
daa
mov
add
sarl
add
inc
mov
add
cmpb
add
mov
add
xchg
add
inc
rolb
dec
rolb
adc
add
sub
add
push
ret
jg
add
ret
int
add
out
add
jmp
add
pop
lds
add
add
and
add
mov
movb
push
movl
add
movl
add
add
pusha
enter
enter
enter
leave
add
and
add
sub
add
pushf
leave
add
mov
lret
pop
lret
add
sub
lret
add
cwtl
lret
add
mov
lret
add
in
add
jmp
iret
add
repnz
add
sub
add
out
add
je
add
mov
add
enter
mov
roll
add
roll
add
aam
add
aam
add
aam
add
aad
add
aad
add
add
stc
aad
add
fildl
add
add
add
push
loopne
add
add
pop
loopne
add
add
fs
add
add
in
add
std
loopne
add
add
mov
add
repz
add
out
add
ljmp
inc
jmp
add
add
xchg
add
lock
add
add
pushf
out
add
mov
out
add
test
add
lods
out
add
mov
add
mov
add
push
out
add
jo
add
je
add
js
add
jl
add
sub
add
add
shl
add
jne
add
mov
add
push
testl
add
add
inc
stc
add
imul
add
add
or
std
add
cmpsb
incl
add
add
cmpsb
add
loope
add
icebp
add
add
add
flds
add
mov
add
nop
pop
add
xchg
pop
add
cwtl
pop
add
pushf
pop
add
mov
pop
add
mov
add
jnp
add
adc
add
js
add
rorl
add
lock
add
rcrb
add
and
sub
add
xor
add
add
cmp
add
sub
add
imul
add
add
fldcw
add
jo
add
mov
add
clc
xor
push
xor
xor
xor
add
add
arpl
add
add
imul
outsl
xor
add
add
ja
add
jnp
add
jg
add
xorl
inc
cmp
jecxz
add
jae
add
arpl
add
add
push
ds
loope
add
idivb
add
iret
inc
add
mov
inc
add
mov
add
dec
add
testb
sti
dec
add
or
add
dec
add
das
dec
add
aaa
dec
add
mov
add
mov
add
les
add
dec
add
icebp
dec
add
std
dec
add
mov
mov
push
add
mov
push
add
stos
push
add
les
add
push
add
out
push
add
add
add
push
add
daa
push
add
jae
add
lcall
add
add
adc
add
pop
add
icebp
pop
add
std
pop
add
sbb
add
pusha
add
xor
add
add
test
add
add
fs
add
test
add
bound
cmp
add
push
bound
jmp
bound
sub
add
add
fs
sub
fs
je
add
pop
data16
shrl
add
insb
add
cmp
outsb
add
dec
outsl
add
mov
ja
add
jle
add
addb
addl
incb
add
mov
add
imul
add
xchg
add
push
xchg
add
dec
xchg
add
test
add
addr16
add
xor
add
push
fwait
add
mov
add
or
add
lahf
add
stc
mov
add
push
mov
add
je
add
js
add
cltd
mov
add
or
add
adc
add
sbb
add
sub
add
insb
test
add
add
je
add
js
add
jl
add
subb
add
test
add
test
add
test
add
add
pop
mov
add
mov
add
mov
add
repz
add
daa
mov
add
xchg
add
mov
add
cmp
add
or
add
fwait
rolb
roll
ret
dec
ret
retw
sahf
ret
into
ret
add
add
add
jecxz
add
jecxz
add
push
enter
enter
enter
enter
leave
add
inc
leave
add
or
add
leave
add
xor
add
dec
lret
or
add
add
test
add
dec
int
add
add
cmpsb
int
add
add
mov
add
mov
add
fcmove
add
enter
add
add
push
roll
pop
xlat
add
insl
xlat
add
mov
add
arpl
add
enter
neg
add
adc
fiaddl
fiaddl
jns
add
mov
add
xchg
add
push
fldl
or
add
cmp
add
dec
filds
outsb
filds
xchg
filds
stos
loopne
add
loopne
add
loopne
add
loope
add
add
jne
add
jecxz
add
in
add
in
add
in
add
in
add
out
add
out
add
add
add
jl
add
sub
add
add
mov
add
nop
call
add
cwtl
call
add
mov
jmp
add
pusha
ljmp
jo
add
shr
add
add
add
adc
add
jnp
add
sub
in
add
mov
out
add
shl
add
repnz
pop
repz
xor
add
add
dec
hlt
add
pop
cmc
add
fs
add
ret
add
testl
cli
testl
cmp
add
stc
add
or
add
add
add
add
add
add
add
add
pop
add
add
or
add
add
add
add
or
add
or
add
or
add
add
add
push
add
add
adc
add
adc
add
add
adc
add
add
add
add
adc
add
add
pop
add
add
add
add
add
add
sbb
add
add
add
push
add
add
and
add
add
daa
add
add
daa
add
add
add
add
add
add
add
add
aaa
add
add
aaa
add
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
cmp
add
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
add
add
add
add
cmp
add
add
aas
add
add
inc
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
add
add
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
inc
add
add
dec
add
add
add
add
add
add
dec
add
add
dec
add
add
add
add
push
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
add
pop
add
add
pop
add
add
pusha
add
add
pusha
add
add
add
add
pusha
add
add
pusha
add
add
popa
add
add
arpl
add
fs
add
fs
add
add
add
imul
add
add
add
add
add
add
add
imul
add
imul
jmp
add
add
insb
add
add
outsb
add
add
outsb
add
add
add
add
outsl
add
add
outsl
add
add
jo
add
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jno
add
je
add
jne
add
add
add
jne
add
add
add
add
add
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
add
add
jbe
add
jbe
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jns
add
jl
add
jl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
fadds
add
add
addb
stc
addb
mov
add
add
mov
add
mov
add
add
add
mov
add
mov
add
popl
add
nop
add
add
nop
add
add
nop
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
add
add
cltd
add
add
add
add
cltd
add
add
cltd
add
add
lcall
xchg
fwait
add
add
fwait
add
add
add
add
mov
add
add
test
add
add
add
add
add
add
add
scas
add
add
add
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
add
add
mov
add
add
add
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
add
add
roll
pop
movb
mov
add
add
add
add
movl
add
movl
add
movl
add
movl
add
add
add
add
add
add
add
add
add
add
add
xlat
add
add
jecxz
add
add
add
add
add
add
in
add
in
add
add
jmp
add
jmp
add
in
add
add
add
add
icebp
add
add
repnz
add
repnz
add
add
add
pop
push
add
or
add
or
add
or
add
or
add
or
add
push
add
push
add
adc
add
adc
add
adc
push
add
push
push
add
push
push
add
push
add
sbb
add
push
add
push
add
push
add
sbb
add
sbb
add
sbb
add
sbb
add
push
add
push
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
push
add
sbb
add
push
add
sbb
add
push
add
push
push
add
pop
push
add
pop
push
add
add
push
add
pop
push
add
pop
push
add
and
push
add
push
add
push
add
push
add
es
add
es
add
add
push
add
add
push
add
add
sub
add
sub
add
sub
add
sub
add
xor
add
push
add
add
push
add
push
add
push
add
push
add
push
add
push
add
dec
push
add
push
add
push
add
dec
push
add
dec
push
add
push
add
push
add
pop
push
add
pop
push
add
pop
push
add
push
add
pop
push
add
push
add
add
push
add
push
add
push
add
push
add
push
add
imul
shrl
add
imul
lock
sbb
push
add
jno
add
push
add
push
add
jbe
add
add
push
add
jns
add
jns
add
push
add
jns
add
jns
add
jns
add
jp
add
jp
add
jnp
add
jl
add
jl
add
jl
add
jl
add
jge
add
push
add
jge
add
push
add
push
add
jge
add
push
add
jge
add
addl
add
mov
add
mov
add
xchg
push
add
push
add
xchg
push
add
xchg
push
add
xchg
push
add
push
add
cwtl
push
add
cltd
push
add
push
add
cltd
push
add
cltd
push
add
cltd
push
add
cltd
push
add
lcall
xchg
lcall
loop
push
add
fwait
push
add
pushf
push
add
pushf
push
add
push
add
push
add
push
add
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
popf
push
add
popf
push
add
popf
push
add
popf
push
add
push
add
push
add
push
add
push
add
popf
push
add
sahf
push
add
push
add
lahf
push
add
push
add
lahf
push
add
mov
push
add
add
push
add
push
add
mov
push
add
movsl
push
add
movsl
push
add
push
add
push
add
movsl
push
add
cmpsb
push
add
push
add
push
add
push
add
add
push
add
push
add
push
add
cmpsl
push
add
cmpsl
push
add
cmpsl
push
add
cmpsl
push
add
cmpsl
push
add
cmpsl
push
add
cmpsl
push
add
cmpsl
push
add
cmpsl
push
add
cmpsl
push
add
cmpsl
push
add
cmpsl
push
add
push
add
add
test
add
add
test
push
add
push
add
stos
push
add
stos
push
add
push
add
lods
push
add
push
add
push
add
add
push
add
push
add
push
add
lods
push
add
lods
push
add
lods
push
add
lods
push
add
lods
push
add
push
add
lods
push
add
lods
push
add
lods
push
add
lods
push
add
lods
push
add
lods
push
add
lods
push
add
lods
push
add
lods
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
push
add
mov
add
mov
add
push
add
mov
add
mov
add
push
add
push
add
push
add
mov
add
push
add
push
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
push
add
mov
push
add
mov
push
add
mov
push
add
mov
push
add
push
add
mov
push
add
mov
push
add
mov
push
add
push
add
add
mov
push
add
mov
push
add
mov
push
add
mov
push
add
push
add
push
add
add
push
add
add
mov
push
add
mov
push
add
mov
push
add
mov
push
add
mov
push
add
mov
push
add
push
add
push
add
add
mov
push
add
mov
push
add
mov
push
add
rolb
sub
push
add
push
add
add
push
add
add
push
add
add
push
add
add
rolb
rol
push
add
rolb
fadd
push
add
rolb
push
ret
xchg
ret
int3
ret
loopne
push
add
ret
push
add
add
push
add
lds
add
push
add
lds
add
lds
add
movb
js
push
add
movb
mov
movb
rol
push
add
movb
in
movb
sti
movb
add
push
add
movl
add
push
add
push
add
push
add
movl
add
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
leave
push
add
push
add
leave
push
add
lret
aaa
lret
dec
lret
mov
push
add
push
add
lret
push
add
int3
push
add
iret
push
add
push
add
push
add
push
add
iret
push
add
rolb
add
add
push
add
push
add
roll
add
roll
add
rolb
add
rolb
add
rolb
add
roll
add
push
add
push
add
push
add
push
add
aad
add
aad
add
push
add
xlat
push
add
push
add
xlat
push
add
push
add
push
add
xlat
push
add
xlat
push
add
xlat
push
add
fadds
add
fadds
add
push
add
flds
add
flds
add
push
add
push
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
fiaddl
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
fiaddl
add
push
add
fiaddl
add
fildl
add
fildl
add
push
add
add
push
add
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
push
add
push
add
add
push
add
add
faddl
add
fldl
add
fldl
add
fldl
add
loopne
add
push
add
loopne
add
loopne
add
loope
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
push
add
push
add
push
add
jecxz
add
push
add
in
add
in
add
in
add
in
add
out
add
push
add
out
add
out
add
out
add
out
add
call
push
add
ljmp
mov
push
add
ljmp
sub
add
push
add
jmp
add
jmp
add
jmp
add
in
push
add
in
push
add
in
push
add
push
add
push
add
push
add
in
push
add
in
push
add
in
push
add
in
push
add
in
push
add
in
push
add
in
push
add
in
push
add
in
push
add
in
push
add
push
add
push
add
push
add
in
push
add
in
push
add
out
push
add
push
add
push
add
push
add
out
push
add
out
push
add
out
push
add
out
push
add
out
push
add
out
push
add
out
push
add
out
push
add
out
push
add
push
add
out
push
add
out
push
add
out
push
add
out
push
add
push
add
add
lock
add
icebp
push
add
icebp
push
add
push
add
add
icebp
push
add
icebp
push
add
repnz
add
repnz
add
repnz
add
repnz
add
repnz
add
repz
add
repz
add
push
add
push
add
repz
add
repz
add
repz
add
repz
add
hlt
push
add
hlt
push
add
hlt
push
add
cmc
push
add
cmc
push
add
testb
cmp
push
add
testl
add
clc
push
add
clc
push
add
clc
push
add
stc
push
add
push
add
push
add
push
add
push
add
push
add
push
add
stc
push
add
stc
push
add
stc
push
add
stc
push
add
cli
push
add
cli
push
add
cli
push
add
add
cli
push
add
cli
push
add
cli
push
add
cli
push
add
sti
push
add
add
push
add
sti
push
add
sti
push
add
sti
push
add
sti
push
add
cld
push
add
push
add
push
add
push
add
add
add
pop
add
pop
add
add
add
add
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
pop
add
add
pop
add
add
pop
add
add
pop
add
pop
add
push
pop
add
pop
add
pop
add
pop
add
push
pop
add
pop
pop
add
pop
add
pop
pop
add
pop
add
pop
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
pop
add
or
pop
add
sysret
add
sysret
add
sysret
add
adc
add
pop
add
adc
add
pop
add
pop
add
pop
add
pop
add
pop
add
adc
add
adc
add
adc
add
pop
add
pop
add
pop
add
sbb
add
sbb
add
sbb
add
sbb
add
push
pop
add
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
and
add
and
add
and
add
and
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
pop
add
and
add
and
add
and
add
pop
add
sub
add
sub
add
pop
add
pop
add
sub
add
pop
add
pop
add
pop
add
pop
add
sub
pop
add
cs
add
pop
add
pop
add
das
pop
add
das
pop
add
das
pop
add
das
pop
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
pop
add
add
pop
add
pop
add
pop
add
pop
add
xor
pop
add
xor
pop
add
xor
pop
add
xor
pop
add
ss
add
ss
add
ss
add
ss
add
ss
add
pop
add
aaa
pop
add
cmp
add
cmp
add
cmp
add
cmp
add
pop
add
pop
add
pop
add
add
pop
add
pop
add
pop
add
cmp
add
cmp
pop
add
cmp
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
ds
add
ds
add
aas
pop
add
aas
pop
add
aas
pop
add
pop
add
pop
add
pop
add
inc
pop
add
inc
pop
add
pop
add
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
pop
add
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
dec
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
dec
pop
add
pop
add
push
pop
add
push
pop
add
push
pop
add
pop
add
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
pop
add
pop
add
pop
add
push
pop
add
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
add
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
add
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pusha
pop
add
pop
add
pop
add
popa
pop
add
popa
pop
add
arpl
add
pop
add
arpl
add
arpl
add
arpl
add
arpl
add
pop
add
fs
add
pop
add
fs
add
fs
add
pop
add
fs
add
popw
add
popw
add
popw
add
add
pop
add
pop
add
pop
add
popw
add
popw
add
popw
add
popw
add
popw
add
popw
add
popw
add
popw
add
popw
add
popw
add
addr16
add
addr16
add
pop
add
addr16
add
pop
add
pop
add
pop
add
pop
add
pop
add
addr16
add
addr16
add
push
pop
add
push
pop
add
pop
add
push
pop
add
push
pop
add
pop
add
pop
add
imul
add
imul
add
add
pop
add
pop
add
pop
add
pop
add
add
imul
add
imul
add
imul
add
imul
add
push
add
pop
add
push
add
push
add
imul
push
imul
imul
aas
imul
push
imul
pop
imul
jno
pop
add
add
imul
test
imul
ret
add
imul
aad
pop
add
imul
cmc
imul
ljmp
add
insb
pop
add
insb
pop
add
pop
add
insb
pop
add
insb
pop
add
insb
pop
add
pop
add
jno
add
pop
add
jae
add
je
add
je
add
je
add
pop
add
pop
add
pop
add
pop
add
je
add
ja
add
ja
add
js
add
pop
add
pop
add
js
add
js
add
jns
add
jp
add
jp
add
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jl
add
jl
add
jl
add
jl
add
jl
add
pop
add
jge
add
jle
add
pop
add
add
pop
add
jle
add
add
jg
add
jg
add
addb
inc
addb
inc
addb
lahf
addb
call
addb
cmc
addb
cli
addb
add
pop
add
pop
add
addl
add
addl
add
addb
mov
test
add
test
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
add
pop
add
add
pop
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
pop
add
mov
add
mov
add
mov
add
pop
add
pop
add
mov
add
mov
add
mov
add
pop
add
mov
add
mov
add
pop
add
lea
add
mov
add
xchg
pop
add
xchg
pop
add
xchg
pop
add
pop
add
xchg
pop
add
pop
add
pop
add
xchg
pop
add
xchg
pop
add
xchg
pop
add
xchg
pop
add
pop
add
pop
add
xchg
pop
add
cwtl
pop
add
cwtl
pop
add
pop
add
pop
add
pop
add
cwtl
pop
add
pop
add
cwtl
pop
add
cwtl
pop
add
cwtl
pop
add
cwtl
pop
add
cwtl
pop
add
cwtl
pop
add
cltd
pop
add
pop
add
pop
add
pop
add
cltd
pop
add
lcall
enter
ficompl
add
popf
pop
add
popf
pop
add
popf
pop
add
sahf
pop
add
sahf
pop
add
pop
add
sahf
pop
add
sahf
pop
add
sahf
pop
add
pop
add
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
movsb
pop
add
movsl
pop
add
cmpsb
pop
add
cmpsb
pop
add
cmpsl
pop
add
cmpsl
pop
add
pop
add
pop
add
test
pop
add
stos
pop
add
lods
pop
add
lods
pop
add
scas
pop
add
scas
pop
add
pop
add
scas
pop
add
scas
pop
add
scas
pop
add
scas
pop
add
scas
pop
add
pop
add
scas
pop
add
scas
pop
add
scas
pop
add
pop
add
add
pop
add
pop
add
scas
pop
add
scas
pop
add
scas
pop
add
mov
add
mov
add
mov
add
pop
add
add
pop
add
mov
add
pop
add
pop
add
pop
add
mov
add
mov
add
pop
add
pop
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
pop
add
pop
add
pop
add
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
pop
add
mov
pop
add
pop
add
roll
jecxz
pop
add
ret
aad
pop
add
lds
add
lds
add
lds
add
movb
adc
pop
add
movb
xor
pop
add
movb
dec
movb
push
movb
push
movb
outsb
movb
jns
pop
add
movb
xchg
movb
lods
movb
mov
pop
add
movb
int
pop
add
movb
out
movb
movl
add
pop
add
pop
add
lret
cmp
pop
add
pop
add
pop
add
pop
add
lret
fcmovne
pop
add
int3
pop
add
int3
pop
add
int3
pop
add
pop
add
pop
add
pop
add
int
add
int
add
pop
add
into
pop
add
into
pop
add
pop
add
iret
pop
add
iret
pop
add
iret
pop
add
rolb
add
pop
add
rolb
add
roll
add
roll
add
roll
add
roll
add
roll
add
pop
add
xlat
pop
add
fadds
add
pop
add
pop
add
flds
add
pop
add
pop
add
fiadds
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
pop
add
filds
add
pop
add
filds
add
pop
add
filds
add
pop
add
filds
add
filds
add
filds
add
filds
add
jecxz
add
out
add
out
add
pop
add
pop
add
pop
add
pop
add
call
pop
add
jmp
pop
add
out
pop
add
out
pop
add
out
pop
add
lock
add
lock
add
pop
add
pop
add
cmc
pop
add
pop
add
pop
add
testl
add
add
stc
pop
add
pop
add
pop
add
pop
add
pop
add
cld
pop
add
std
pop
add
std
pop
add
std
pop
add
incb
add
incb
add
incb
add
incb
add
pop
add
pop
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
test
or
lahf
push
or
mov
or
incb
or
ja
or
mov
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
mov
or
jns
or
jle
or
decb
or
xor
or
add
adc
add
adc
add
adc
add
adc
add
adc
add
sbb
add
sbb
add
or
insb
sbb
add
or
push
sbb
add
sbb
add
or
outsb
sbb
add
sbb
add
sbb
add
sbb
or
dec
sbb
or
sbb
or
dec
push
or
push
or
sahf
push
or
cmpsb
push
or
negb
or
sbb
or
hlt
and
add
and
add
and
add
or
mov
or
mov
or
inc
sub
add
sub
add
sub
add
sub
add
sub
add
sub
or
imul
add
xor
add
or
xor
add
add
or
or
or
sbb
or
add
xor
add
xor
add
or
xor
add
or
jno
or
lret
add
xor
add
xor
add
xor
add
xor
add
xor
or
out
or
mov
cmp
or
insb
or
lcall
add
or
mov
or
xchg
aas
or
mov
aas
or
ret
add
aas
or
fnstcw
or
jecxz
or
pop
inc
or
sbb
inc
or
cmp
add
or
push
inc
or
pop
inc
or
jb
or
jge
or
mov
add
inc
or
mov
or
mov
inc
or
faddl
add
inc
or
call
inc
or
hlt
inc
or
cli
inc
or
add
add
inc
or
pop
inc
or
cmp
or
push
inc
or
push
inc
or
push
or
addl
xchg
inc
or
mov
inc
or
rolb
add
inc
or
call
inc
or
testl
add
inc
or
sub
add
inc
or
aaa
inc
or
inc
inc
or
dec
inc
or
jp
or
addb
mov
add
or
in
or
stc
inc
or
add
or
adc
add
inc
or
and
add
inc
or
push
inc
or
xchg
inc
or
cwtl
inc
or
sahf
inc
or
movsb
inc
or
mov
or
roll
lret
inc
or
cld
inc
or
adc
xor
or
inc
inc
or
test
or
lods
inc
or
ret
inc
or
iret
inc
or
cmovne
add
or
push
or
xlat
inc
or
in
or
push
inc
or
sbb
add
inc
or
aad
or
fiaddl
add
inc
or
lock
or
add
inc
or
mov
inc
or
mov
dec
or
mov
or
enter
aam
or
decl
sbb
or
dec
dec
or
pusha
dec
or
loope
or
testl
add
dec
or
and
add
dec
or
cmp
add
or
arpl
add
or
mov
dec
or
test
add
dec
or
rorb
testl
add
push
or
pop
push
or
add
add
push
or
pop
push
or
push
or
jo
or
jbe
or
xchg
push
or
lcall
add
push
or
in
or
clc
push
or
add
add
push
or
sbb
add
push
or
sub
add
push
or
test
or
sti
push
or
rcpps
add
push
or
push
push
or
mov
push
or
in
or
icebp
push
or
notl
add
push
or
and
xor
inc
push
or
pop
push
or
jo
or
jnp
or
mov
xchg
push
or
xchg
push
or
mov
push
or
out
or
icebp
push
or
cld
push
or
add
add
push
or
push
push
or
pop
push
or
sub
add
or
cmpsl
push
or
and
add
push
or
inc
push
or
dec
push
or
push
push
or
pop
push
or
addr16
or
jo
or
jbe
or
xchg
add
push
or
test
push
or
lds
add
push
or
loope
or
jmp
push
or
push
pop
or
and
pop
or
inc
pop
or
push
pop
or
xchg
add
pop
or
mov
pop
or
xlat
pop
or
jecxz
or
std
pop
or
or
add
pop
or
sub
or
cmp
add
or
pop
pop
or
bound
add
or
jg
or
xchg
add
pop
or
jp
or
cmp
or
ficompl
add
pop
or
sub
cmp
or
dec
pop
or
jno
or
xchg
pop
or
test
pop
or
in
pop
or
adc
add
pop
or
push
pop
or
jno
or
mov
add
pop
or
icebp
pop
or
or
add
or
jb
or
mov
add
pop
or
or
add
pusha
or
fldenv
add
pusha
or
sbb
add
popa
or
popa
popa
or
jns
or
fwait
popa
or
fsubl
add
bound
add
bound
add
bound
add
bound
add
arpl
add
arpl
add
or
pop
or
jns
or
fwait
or
shll
or
sub
add
or
insb
or
test
or
jmp
data16
inc
data16
jb
or
stos
data16
int3
data16
and
add
or
pop
or
jns
or
cltd
or
mov
or
cmp
push
or
sbb
add
imul
add
imul
add
or
cwtl
push
add
imul
mov
or
leave
imul
jmp
insb
or
sub
dec
insb
or
imul
leave
insb
or
imull
push
insl
or
jno
or
mov
add
insl
or
add
add
or
cmp
or
jb
or
dec
jo
add
add
or
mov
or
shll
add
jb
add
jae
add
jae
add
or
mov
add
jae
add
jae
add
je
add
je
add
jne
add
or
enter
jmp
or
inc
jbe
add
jbe
add
ja
add
or
cltd
ja
add
ja
add
ja
add
js
add
js
add
or
imul
add
jns
add
jns
add
or
mov
add
jns
add
or
fwait
jp
add
jp
add
jnp
add
or
jnp
or
mov
jnp
add
jnp
add
jl
add
jl
add
or
mov
or
leave
jl
add
jge
add
jge
add
jge
add
or
movsl
jge
add
jge
add
jge
add
or
cmp
add
or
jns
or
mov
or
loop
or
stc
jle
add
jg
add
or
jae
or
mov
add
jg
add
jg
add
orb
xor
or
mov
or
inc
test
add
or
jns
or
mov
or
xlat
test
add
test
add
test
add
test
add
or
imul
or
leave
test
add
test
add
or
jns
or
cltd
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
or
mov
or
leave
mov
add
mov
add
mov
add
or
imul
or
cld
mov
add
mov
add
mov
add
or
orl
or
or
sbb
add
or
jns
or
cltd
mov
add
mov
add
lea
add
lea
add
or
pop
lea
add
lea
add
lea
add
mov
add
or
dec
mov
add
or
mov
mov
add
mov
add
mov
add
nop
or
xchg
or
rclb
or
or
or
jb
or
xchg
xchg
or
test
xchg
or
adc
xchg
or
push
xchg
or
jno
or
mov
or
add
add
xchg
or
jmp
xchg
or
sub
or
insb
xchg
or
mov
or
aam
or
jmp
xchg
or
inc
xchg
or
insb
xchg
or
cwtl
xchg
or
les
or
push
xchg
or
and
or
cmp
or
arpl
or
mov
or
mov
or
lds
or
in
xchg
or
add
or
sub
or
push
cwtl
or
insl
cwtl
or
jns
or
test
or
movsl
cwtl
or
mov
cwtl
or
fstps
or
adc
or
xor
or
pop
cltd
or
insl
cltd
or
sbbl
or
mov
cltd
or
cmc
cltd
or
or
or
cmp
lcall
test
or
movsl
lcall
cld
lcall
and
fwait
or
fs
or
jns
or
lea
or
mov
or
int3
fwait
or
in
or
add
add
pushf
or
gs
or
jns
or
test
add
pushf
or
aad
or
jmp
pushf
or
adc
or
push
popf
or
imul
or
mov
or
mov
popf
or
jmp
sahf
or
adc
sahf
or
cmp
sahf
or
fsubl
or
call
cmpsb
or
cld
cmpsb
or
add
or
or
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
inc
cmpsl
or
inc
cmpsl
or
dec
cmpsl
or
dec
cmpsl
or
push
cmpsl
or
push
cmpsl
or
pop
cmpsl
or
pop
cmpsl
or
pusha
cmpsl
or
cmpsl
or
push
cmpsl
or
jo
or
je
or
js
or
jl
or
andb
add
cmpsl
or
nop
cmpsl
or
xchg
cmpsl
or
cwtl
cmpsl
or
pushf
cmpsl
or
mov
cmpsl
or
test
or
lods
cmpsl
or
mov
or
mov
or
mov
cmpsl
or
shlb
add
cmpsl
or
int3
cmpsl
or
shlb
or
fsubs
or
loopne
or
in
or
call
cmpsl
or
lock
or
hlt
cmpsl
or
clc
cmpsl
or
cld
cmpsl
or
add
or
or
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
inc
test
add
add
or
dec
test
add
or
push
test
add
or
pop
test
add
or
fs
add
or
insb
test
add
or
je
or
js
or
jl
or
subb
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
or
or
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
inc
test
or
dec
test
or
push
test
or
pop
test
or
pusha
test
or
push
test
or
je
or
js
or
jl
or
subb
add
test
or
xchg
test
or
pushf
test
or
movsb
test
or
lods
test
or
mov
or
mov
test
or
les
or
int3
test
or
aam
or
fsubrs
or
loopne
or
in
or
call
test
or
hlt
test
or
cld
test
or
add
or
or
or
adc
or
sbb
or
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
or
cmp
or
mov
or
lods
mov
add
mov
add
mov
add
or
xor
or
pop
mov
add
or
lods
mov
add
mov
add
mov
add
mov
add
mov
add
or
push
mov
add
add
or
lods
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
or
or
add
mov
add
or
sbb
add
mov
add
or
sub
add
mov
add
or
cmp
add
or
inc
mov
add
or
dec
mov
add
or
push
mov
add
or
pop
mov
add
or
fs
add
mov
add
mov
add
or
cmp
or
pusha
mov
add
add
mov
add
or
inc
mov
add
add
mov
add
mov
add
mov
add
or
xor
or
pop
mov
add
add
mov
add
mov
add
mov
add
mov
or
cmp
or
pop
mov
or
cmpb
add
mov
or
sub
add
mov
or
adc
or
sbb
or
sbb
or
and
or
and
or
sub
or
sub
or
xor
or
xor
or
cmp
or
cmp
or
inc
rorl
add
pop
or
ficomps
loop
or
out
or
ljmp
add
pop
or
negb
cli
pop
or
pop
or
add
add
pop
or
or
add
pop
or
adc
add
pop
or
sbb
add
pop
or
and
add
pop
or
sub
add
pop
or
xor
add
pop
or
cmp
add
pop
or
inc
pop
or
inc
pop
or
dec
pop
or
dec
pop
or
push
pop
or
push
pop
or
pop
pop
or
pop
pop
or
bound
add
xor
add
or
push
xor
add
add
or
pop
xor
add
or
xor
add
or
insb
xor
add
or
je
or
js
or
jl
or
xorb
add
or
mov
or
nop
xor
add
or
pushf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
or
sbb
or
xor
or
dec
xor
add
add
add
or
les
or
fdivl
or
hlt
xor
add
or
and
or
cmp
or
push
xor
add
add
or
mov
xor
add
xor
add
xor
add
or
xor
or
dec
xor
or
jl
or
xchg
xor
or
les
or
in
or
cld
xor
or
sub
or
inc
or
pop
or
js
or
jl
or
xchg
or
lods
or
les
or
fdivl
or
hlt
or
or
or
and
or
cmp
or
push
aaa
or
jo
or
je
or
mov
or
movsb
aaa
or
mov
aaa
or
in
aaa
or
add
or
sbb
or
cmp
or
cmp
or
push
cmp
add
add
or
mov
or
int3
cmp
add
cmp
add
cmp
add
cmp
add
or
xor
or
dec
cmp
add
add
cmp
add
or
int3
cmp
add
cmp
add
cmp
add
or
sbb
or
xor
or
dec
cmp
add
add
cmp
add
cmp
add
or
in
cmp
add
or
and
or
and
or
cmp
or
pop
cmp
add
add
add
or
mov
cmp
add
cmp
add
or
and
add
or
cmp
or
pop
cmp
add
add
add
or
mov
cmp
add
cmp
add
cmp
add
or
cmp
or
push
cmp
or
je
or
mov
or
mov
cmp
or
or
or
or
or
and
or
cmp
or
push
or
jo
or
je
or
mov
or
movsb
or
mov
or
fdivrl
or
hlt
or
adc
or
adc
or
sub
or
inc
aas
or
pop
aas
or
je
or
nop
aas
or
xchg
aas
or
lods
aas
or
enter
int3
aas
or
in
or
cld
aas
or
adc
or
sub
or
inc
inc
or
pop
inc
or
je
or
nop
inc
or
xchg
inc
or
lods
inc
or
les
add
inc
or
hlt
inc
or
adc
add
or
sub
or
inc
inc
or
pop
inc
or
je
or
mov
add
or
aam
or
in
inc
or
add
or
sbb
or
xor
or
dec
inc
or
push
inc
or
test
add
or
int3
inc
or
in
or
cld
inc
or
adc
or
sub
or
dec
inc
or
dec
inc
or
fs
or
jl
or
xchg
inc
or
lods
inc
or
les
add
inc
or
hlt
inc
or
adc
adc
or
sub
or
inc
inc
or
pop
inc
or
je
or
mov
movsb
inc
or
mov
inc
or
in
inc
or
add
or
sbb
or
cmp
add
or
insb
inc
or
test
add
inc
or
mov
inc
or
faddl
add
inc
or
adc
add
or
sub
or
dec
inc
or
dec
inc
or
fs
or
addb
test
add
or
int3
inc
or
in
or
cld
inc
or
sbb
add
or
xor
or
dec
inc
or
push
inc
or
test
add
or
int3
inc
or
in
or
add
add
or
sbb
or
xor
or
push
dec
or
push
dec
or
insb
dec
or
mov
add
or
lods
dec
or
les
add
dec
or
in
or
cld
dec
or
adc
or
sub
or
dec
dec
or
dec
dec
or
fs
or
jl
or
xchg
dec
or
lods
dec
or
les
add
dec
or
hlt
dec
or
adc
add
or
xor
add
or
dec
dec
or
push
dec
or
jo
or
je
or
js
or
jl
or
orb
test
add
dec
or
nop
dec
or
xchg
dec
or
cwtl
dec
or
pushf
dec
or
mov
dec
or
test
or
lods
dec
or
mov
or
mov
or
mov
dec
or
rorb
les
add
dec
or
int3
dec
or
rorb
add
dec
or
fmuls
add
dec
or
loopne
or
in
or
call
dec
or
lock
or
hlt
dec
or
clc
dec
or
cld
dec
or
add
add
or
or
add
or
adc
add
or
sbb
add
or
and
add
or
sub
add
or
xor
add
or
cmp
add
or
inc
dec
or
inc
dec
or
dec
dec
or
dec
dec
or
push
dec
or
push
dec
or
pop
dec
or
pop
dec
or
pusha
dec
or
fs
or
push
dec
or
jo
or
je
or
js
or
jl
or
orb
test
add
dec
or
nop
dec
or
xchg
dec
or
cwtl
dec
or
pushf
dec
or
mov
dec
or
test
or
lods
dec
or
mov
or
mov
or
mov
dec
or
rorb
les
add
dec
or
int3
dec
or
rorb
add
dec
or
fmuls
add
dec
or
loopne
or
in
or
call
dec
or
lock
or
hlt
dec
or
clc
dec
or
cld
dec
or
add
add
or
or
or
or
adc
adc
or
sbb
sbb
or
and
and
or
sub
sub
or
xor
xor
or
cmp
cmp
or
inc
dec
or
inc
dec
or
dec
dec
or
dec
dec
or
push
dec
or
push
dec
or
pop
dec
or
pop
dec
or
pusha
dec
or
fs
or
push
dec
or
jo
or
je
or
js
or
jl
or
orb
dec
or
mov
mov
nop
dec
or
xchg
dec
or
cwtl
dec
or
pushf
dec
or
mov
dec
or
test
or
lods
dec
or
mov
or
mov
or
mov
dec
or
rorb
dec
or
enter
int3
dec
or
rorb
aam
or
fmuls
fmull
loopne
or
in
or
call
dec
or
lock
or
hlt
dec
or
clc
dec
or
cld
dec
or
add
add
or
or
or
adc
add
or
sbb
or
and
add
or
sub
or
xor
add
or
cmp
or
inc
dec
or
inc
dec
or
dec
dec
or
dec
dec
or
push
dec
or
push
dec
or
pop
dec
or
pop
dec
or
pusha
dec
or
fs
or
push
dec
or
jo
or
je
or
js
or
jl
or
orb
test
add
dec
or
nop
dec
or
xchg
dec
or
cwtl
dec
or
pushf
dec
or
mov
dec
or
test
or
lods
dec
or
mov
or
mov
or
mov
dec
or
rorb
les
add
dec
or
int3
dec
or
rorb
add
dec
or
fmuls
add
dec
or
loopne
or
in
or
call
dec
or
lock
or
hlt
dec
or
clc
dec
or
cld
dec
or
add
add
or
or
add
or
adc
add
or
sbb
add
or
and
add
or
sub
add
or
xor
add
or
cmp
add
or
inc
dec
or
inc
dec
or
dec
dec
or
dec
dec
or
push
dec
or
push
dec
or
pop
dec
or
pop
dec
or
pusha
dec
or
fs
or
push
dec
or
jo
or
je
or
js
or
jl
or
orb
test
add
dec
or
nop
dec
or
xchg
dec
or
cwtl
dec
or
pushf
dec
or
mov
dec
or
test
or
lods
dec
or
mov
or
mov
or
mov
dec
or
rorb
les
add
dec
or
int3
dec
or
rorb
add
dec
or
fmuls
add
dec
or
loopne
or
in
or
call
dec
or
lock
or
hlt
dec
or
clc
dec
or
cld
dec
or
add
add
or
or
add
or
adc
add
or
sbb
add
or
and
add
or
sub
add
or
xor
add
or
cmp
add
or
inc
dec
or
inc
dec
or
dec
dec
or
dec
dec
or
push
dec
or
push
dec
or
pop
dec
or
pop
dec
or
pusha
dec
or
fs
or
push
dec
or
jo
or
je
or
js
or
jl
or
orb
test
add
dec
or
nop
dec
or
xchg
dec
or
cwtl
dec
or
pushf
dec
or
mov
dec
or
test
or
lods
dec
or
mov
or
mov
or
mov
dec
or
rorb
les
add
dec
or
int3
dec
or
rorb
add
dec
or
fmuls
add
dec
or
loopne
or
in
or
call
dec
or
lock
or
hlt
dec
or
clc
dec
or
cld
dec
or
add
add
or
or
add
or
adc
add
or
sbb
add
or
and
add
or
sub
add
or
xor
add
or
cmp
add
or
inc
push
or
inc
push
or
dec
push
or
dec
push
or
push
push
or
push
push
or
pop
push
or
pop
push
or
pusha
push
or
fs
or
push
push
or
jo
or
je
or
js
or
jl
or
adcb
test
add
push
or
nop
push
or
xchg
push
or
cwtl
push
or
pushf
push
or
mov
push
or
test
or
lods
push
or
mov
or
mov
or
mov
push
or
rclb
les
add
push
or
int3
push
or
rclb
add
push
or
fcoms
add
push
or
loopne
or
in
or
call
push
or
lock
or
hlt
push
or
clc
push
or
cld
push
or
add
add
or
or
add
or
adc
add
or
sbb
add
or
and
add
or
sub
add
or
xor
add
or
cmp
add
or
inc
push
or
inc
push
or
dec
push
or
dec
push
or
push
push
or
push
push
or
pop
push
or
pop
push
or
pusha
push
or
fs
or
push
push
or
jo
or
je
or
js
or
jl
or
adcb
test
add
push
or
nop
push
or
xchg
push
or
cwtl
push
or
pushf
push
or
mov
push
or
test
or
lods
push
or
mov
or
mov
or
mov
push
or
rclb
les
add
push
or
int3
push
or
rclb
add
push
or
fcoms
add
push
or
loopne
or
in
or
call
push
or
lock
or
hlt
push
or
clc
push
or
cld
push
or
add
add
or
or
add
or
adc
add
or
sbb
add
or
and
add
or
sub
add
or
xor
add
or
cmp
add
or
inc
push
or
inc
push
or
dec
push
or
dec
push
or
push
push
or
push
push
or
pop
push
or
pop
push
or
pusha
push
or
fs
or
push
push
or
jo
or
je
or
js
or
jl
or
adcb
test
add
push
or
nop
push
or
xchg
push
or
cwtl
push
or
pushf
push
or
mov
push
or
test
or
lods
push
or
mov
or
mov
or
mov
push
or
rclb
les
add
push
or
int3
push
or
rclb
add
push
or
fcoms
add
push
or
loopne
or
in
or
call
push
or
lock
or
hlt
push
or
clc
push
or
cld
push
or
add
add
or
or
add
or
sbb
add
push
or
and
or
cmp
or
push
push
or
insb
push
or
test
add
or
int3
push
or
in
or
cld
push
or
adc
or
sub
or
inc
push
or
pop
push
or
je
or
mov
movsb
push
or
mov
push
or
in
push
or
add
or
sbb
or
xor
or
push
push
or
push
push
or
pop
push
or
pop
push
or
pusha
push
or
fs
or
push
push
or
jo
or
je
or
js
or
jl
or
adcb
test
add
push
or
nop
push
or
xchg
push
or
cwtl
push
or
pushf
push
or
mov
push
or
test
or
lods
push
or
mov
or
mov
or
mov
push
or
rclb
les
add
push
or
int3
push
or
rclb
add
push
or
fcoms
add
push
or
loopne
or
in
or
call
push
or
lock
or
hlt
push
or
clc
push
or
cld
push
or
add
add
or
or
add
or
inc
push
or
inc
push
or
pop
push
or
js
or
jl
or
cwtl
push
or
pushf
push
or
mov
or
rclb
add
push
or
in
push
or
add
or
sbb
or
cmp
add
or
push
push
or
jo
or
je
or
mov
add
or
fcoms
add
push
or
hlt
push
or
or
or
and
or
inc
pop
or
inc
pop
or
pop
pop
or
js
or
jl
or
xchg
pop
or
lods
pop
or
les
add
pop
or
hlt
pop
or
adc
add
or
sbb
add
or
and
add
or
sub
add
or
xor
add
or
cmp
add
or
inc
pop
or
inc
pop
or
dec
pop
or
dec
pop
or
push
pop
or
push
pop
or
pop
pop
or
pop
pop
or
pusha
pop
or
fs
or
push
pop
or
jo
or
je
or
js
or
jl
or
sbbb
test
add
pop
or
nop
pop
or
xchg
pop
or
cwtl
pop
or
pushf
pop
or
mov
pop
or
test
or
lods
pop
or
mov
or
mov
or
mov
pop
or
rcrb
les
add
pop
or
int3
pop
or
rcrb
add
pop
or
fcomps
add
pop
or
loopne
or
in
or
call
pop
or
hlt
pop
or
or
or
sub
add
or
xor
add
or
cmp
add
or
inc
pop
or
inc
pop
or
dec
pop
or
dec
pop
or
push
pop
or
push
pop
or
jo
or
je
or
mov
add
pop
or
les
add
pop
or
in
or
cld
pop
or
adc
or
xor
add
pop
or
cmp
or
push
pop
or
jo
or
je
or
mov
add
or
aam
or
in
pop
or
add
or
sbb
or
xor
or
dec
pop
or
fs
or
jl
or
xchg
pop
or
lods
pop
or
les
loopne
or
in
or
call
pop
or
or
add
or
cmp
or
push
pop
or
insb
pop
or
test
add
pop
or
mov
or
mov
pop
or
aam
or
in
pop
or
add
or
sbb
or
xor
or
dec
pop
or
push
pop
or
jo
or
je
or
js
or
jl
or
sbbb
test
add
pop
or
nop
pop
or
xchg
pop
or
cwtl
pop
or
pushf
pop
or
mov
pop
or
test
or
lods
pop
or
mov
or
mov
or
mov
pop
or
rcrb
les
add
pop
or
int3
pop
or
rcrb
add
pop
or
fcomps
add
pop
or
loopne
or
in
or
call
pop
or
lock
or
hlt
pop
or
clc
pop
or
cld
pop
or
add
add
or
or
add
or
adc
add
or
sbb
add
or
and
add
or
sub
add
pop
or
xor
or
dec
pop
or
push
pop
or
jo
or
je
or
js
or
jl
or
sbbb
test
add
pop
or
nop
pop
or
xchg
pop
or
cwtl
pop
or
pushf
pop
or
mov
pop
or
test
or
lods
pop
or
mov
or
mov
or
mov
pop
or
rcrb
les
add
pop
or
int3
pop
or
rcrb
add
pop
or
fcomps
add
pop
or
loopne
or
in
or
call
pop
or
lock
or
hlt
pop
or
clc
pop
or
cld
pop
or
add
add
or
or
add
or
adc
add
or
sbb
add
or
and
add
or
sub
add
pusha
or
xor
or
dec
pusha
or
fs
or
jl
or
xchg
pusha
or
lods
pusha
or
les
add
pusha
or
hlt
pusha
or
or
or
and
or
cmp
or
push
popa
or
insb
popa
or
test
add
or
int3
popa
or
in
or
cld
popa
or
adc
or
xor
add
or
cmp
add
or
inc
bound
add
add
or
dec
bound
add
or
push
bound
add
or
pop
bound
add
or
bound
add
or
insb
bound
add
or
je
or
js
or
jl
or
andb
test
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
or
je
or
mov
add
or
aam
or
in
arpl
add
or
sbb
or
xor
or
dec
or
fs
jl
or
xchg
or
mov
or
mov
or
int3
or
in
or
cld
or
adc
or
sub
or
inc
or
pusha
or
fs
jl
or
xchg
or
lods
or
les
add
or
hlt
or
or
or
sub
add
or
xor
add
or
cmp
add
or
inc
or
inc
or
dec
or
dec
or
push
or
push
or
pop
or
pop
or
pusha
or
or
push
or
jo
or
je
or
js
or
jl
or
andb
test
add
or
nop
or
xchg
or
cwtl
or
pushf
or
mov
or
test
or
lods
or
mov
or
mov
or
mov
or
shlb
les
add
or
int3
or
shlb
add
or
fsubs
add
or
loopne
or
in
or
cld
or
sbb
add
or
and
add
or
sub
add
or
xor
add
or
cmp
add
or
inc
or
inc
or
dec
or
dec
or
push
or
push
or
pop
or
pop
or
pusha
or
or
push
or
jo
or
je
or
js
or
jl
or
andb
test
add
or
nop
or
xchg
or
cwtl
or
pushf
or
mov
or
test
or
lods
or
mov
or
mov
or
mov
or
shlb
les
add
or
int3
or
shlb
add
or
fsubs
add
or
loopne
or
in
or
call
or
add
or
sbb
or
xor
or
dec
push
or
jl
or
xchg
push
or
les
add
push
or
call
push
or
hlt
push
or
cld
push
or
add
or
or
add
or
adc
add
or
sbb
add
or
and
add
or
sub
add
or
xor
add
or
cmp
add
or
inc
imul
add
or
dec
imul
add
add
or
pop
imul
add
add
or
insb
imul
add
add
or
jl
or
subb
test
add
imul
add
or
mov
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
or
or
add
or
adc
add
or
sbb
add
or
and
add
or
sub
add
or
xor
add
or
cmp
add
or
inc
push
add
add
or
dec
push
add
or
push
push
add
or
pop
push
add
or
fs
add
or
insb
push
add
or
je
or
js
or
jl
or
subb
test
add
push
add
outsb
or
aam
or
loopne
or
in
outsb
or
clc
outsb
or
add
or
adc
add
or
sub
add
or
mov
jnp
add
jnp
add
jnp
add
jl
add
jl
add
jl
add
jge
add
jge
add
or
xor
or
cmp
add
or
inc
jge
add
or
dec
jge
add
or
push
jge
add
or
pusha
jge
add
or
cmpb
test
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jle
add
or
sbb
add
or
and
add
or
sub
add
or
xor
add
or
cmp
add
or
inc
jle
add
add
or
dec
jle
add
or
push
jle
add
or
pop
jle
add
or
fs
add
or
insb
jle
add
or
je
or
js
or
jl
or
cmpb
mov
add
jle
add
or
enter
fdivrs
add
jle
add
jle
add
jg
add
jg
add
jg
add
or
push
jg
add
or
jo
or
cmpb
nop
jg
add
or
mov
jg
add
jg
add
jg
add
orb
sbb
or
cmp
or
inc
orb
push
orb
pusha
orb
js
or
mov
or
test
or
lods
orb
mov
or
mov
or
mov
orb
rolb
add
orb
int3
orb
rolb
or
fadds
or
loopne
or
in
or
call
orb
lock
hlt
orb
clc
orb
cld
orb
add
or
or
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
inc
orl
add
or
dec
orl
add
add
or
pop
orl
add
add
or
insb
orl
add
add
or
jl
or
addb
add
orl
add
or
pushf
orl
add
or
lods
orl
add
or
mov
orl
add
orl
add
orl
add
orl
add
orl
add
orl
add
orl
add
orl
add
orb
add
or
or
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
inc
orb
inc
orb
dec
orb
dec
orb
push
orb
push
orb
pop
orb
pop
orb
pusha
orb
orb
push
orb
jo
or
je
or
js
or
jl
or
addb
add
orb
nop
orb
xchg
orb
cwtl
orb
pushf
orb
mov
orb
test
or
lods
orb
mov
or
mov
or
mov
orb
rolb
add
orb
int3
orb
rolb
or
fadds
or
loopne
or
in
or
call
orb
lock
hlt
orb
clc
orb
cld
orb
add
or
or
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
inc
orl
inc
orl
dec
orl
dec
orl
push
orl
push
orl
pop
orl
pop
orl
pusha
orl
orl
push
orl
addb
add
or
les
or
hlt
orl
or
or
and
or
cmp
or
push
test
add
or
jl
or
addb
mov
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
or
or
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
inc
test
add
add
or
js
or
test
or
mov
test
add
test
add
test
add
test
add
test
add
or
and
or
cmp
or
push
xchg
add
add
or
mov
or
int3
xchg
add
xchg
add
xchg
add
or
sub
or
inc
xchg
add
add
add
or
mov
xchg
add
xchg
add
or
sbb
or
xor
or
dec
mov
add
add
add
or
insb
mov
add
or
je
or
js
or
jl
or
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
or
or
or
adc
or
sbb
or
inc
mov
add
or
dec
mov
add
or
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
or
or
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
inc
mov
add
or
pop
mov
add
add
or
je
or
js
or
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
or
adc
add
mov
add
or
and
add
mov
add
or
xor
add
mov
add
or
inc
mov
add
add
or
dec
mov
add
or
push
mov
add
or
pop
mov
add
or
mov
add
or
insb
mov
add
or
je
or
js
or
jl
or
orb
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
or
or
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
inc
lea
add
add
or
dec
lea
add
or
push
lea
add
or
pop
lea
add
or
lea
add
or
insb
lea
add
or
je
or
js
or
jl
or
orb
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
or
or
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
inc
mov
add
add
or
dec
mov
add
or
push
mov
add
or
pop
mov
add
or
mov
add
or
insb
mov
add
or
je
or
js
or
jl
or
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
or
add
or
or
or
adc
or
sub
or
inc
or
pop
or
je
or
mov
or
mov
or
in
or
add
or
sbb
or
xor
or
dec
nop
or
fs
or
adcb
add
nop
or
nop
nop
or
xchg
nop
or
cwtl
nop
or
pushf
nop
or
mov
nop
or
test
or
mov
nop
or
rclb
or
fcoms
or
loopne
or
in
or
call
nop
or
lock
or
hlt
nop
or
clc
nop
or
cld
nop
or
add
or
or
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
inc
xchg
or
inc
xchg
or
dec
xchg
or
dec
xchg
or
push
xchg
or
push
xchg
or
pop
xchg
or
pop
xchg
or
pusha
xchg
or
fs
or
push
xchg
or
jo
or
je
or
js
or
jl
or
adcb
add
xchg
or
nop
xchg
or
xchg
xchg
or
cwtl
xchg
or
pushf
xchg
or
mov
xchg
or
test
or
lods
xchg
or
mov
or
mov
or
mov
xchg
or
rclb
add
xchg
or
int3
xchg
or
rclb
or
fcoms
or
lock
or
hlt
xchg
or
clc
xchg
or
cld
xchg
or
add
or
sbb
or
sub
or
inc
xchg
or
pop
xchg
or
je
or
lods
xchg
or
mov
or
mov
or
mov
xchg
or
rclb
add
xchg
or
int3
xchg
or
rclb
or
fcoms
or
loopne
or
in
or
call
xchg
or
lock
or
hlt
xchg
or
clc
xchg
or
cld
xchg
or
add
or
or
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
inc
xchg
or
inc
xchg
or
dec
xchg
or
dec
xchg
or
push
xchg
or
pop
xchg
or
fs
or
push
xchg
or
mov
or
test
or
mov
xchg
or
loopne
or
clc
xchg
or
cld
xchg
or
adc
or
xor
add
add
or
insb
xchg
or
jo
or
je
or
js
or
jl
or
adcb
mov
add
xchg
or
cwtl
xchg
or
pushf
xchg
or
mov
xchg
or
test
or
lods
xchg
or
mov
or
mov
or
mov
xchg
or
rclb
enter
int3
xchg
or
rclb
add
xchg
or
fcoml
add
xchg
or
call
xchg
or
lock
or
hlt
xchg
or
clc
xchg
or
cld
xchg
or
add
or
or
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
inc
xchg
or
inc
xchg
or
dec
xchg
or
dec
xchg
or
push
xchg
or
push
xchg
or
pop
xchg
or
pop
xchg
or
pusha
xchg
or
fs
or
push
xchg
or
jo
or
je
or
js
or
jl
or
adcb
add
xchg
or
nop
xchg
or
xchg
xchg
or
cwtl
xchg
or
pushf
xchg
or
mov
xchg
or
test
or
lods
xchg
or
mov
or
mov
or
mov
xchg
or
rclb
add
xchg
or
int3
xchg
or
rclb
or
fcoms
or
loopne
or
in
or
call
xchg
or
lock
or
hlt
xchg
or
clc
xchg
or
cld
xchg
or
add
or
sub
or
xor
or
cmp
or
inc
xchg
or
dec
xchg
or
pop
xchg
or
insb
xchg
or
jo
or
je
or
js
or
jl
or
adcb
add
xchg
or
nop
xchg
or
xchg
xchg
or
cwtl
xchg
or
pushf
xchg
or
mov
xchg
or
test
or
lods
xchg
or
mov
or
mov
or
mov
xchg
or
rclb
add
xchg
or
int3
xchg
or
rclb
or
fcoms
or
or
or
sub
or
xor
or
pop
xchg
or
pusha
xchg
or
xchg
xchg
or
cwtl
xchg
or
lods
xchg
or
mov
xchg
or
rclb
or
fcoms
or
loopne
or
lock
or
add
or
or
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
inc
cwtl
or
inc
cwtl
or
dec
cwtl
or
dec
cwtl
or
push
cwtl
or
push
cwtl
or
pop
cwtl
or
pop
cwtl
or
pusha
cwtl
or
fs
or
push
cwtl
or
jo
or
je
or
js
or
jl
or
sbbb
add
cwtl
or
pushf
cwtl
or
mov
cwtl
or
les
or
fcomps
or
loopne
or
in
or
call
cwtl
or
lock
or
hlt
cwtl
or
clc
cwtl
or
cld
cwtl
or
add
or
and
or
sub
or
cmp
or
inc
cltd
or
inc
cltd
or
dec
cltd
or
push
cltd
or
pusha
cltd
or
js
or
mov
or
movsb
cltd
or
test
or
lods
cltd
or
mov
or
rcrb
add
cltd
or
hlt
cltd
or
or
or
and
or
cmp
or
pop
lcall
pusha
lcall
push
lcall
je
or
js
or
jl
or
sbbb
add
lcall
xchg
lcall
pushf
lcall
movsb
lcall
lods
lcall
mov
or
mov
lcall
les
or
int3
lcall
aam
or
fcomps
or
loopne
or
in
or
call
lcall
hlt
lcall
cld
lcall
add
or
or
or
adc
or
xor
or
pop
fwait
or
pop
fwait
or
je
or
nop
fwait
or
xchg
fwait
or
cwtl
fwait
or
pushf
fwait
or
mov
fwait
or
test
or
lods
fwait
or
mov
or
mov
or
mov
fwait
or
rcrb
add
fwait
or
int3
fwait
or
rcrb
or
fcomps
or
loopne
or
in
or
call
fwait
or
lock
or
hlt
fwait
or
clc
fwait
or
cld
fwait
or
add
add
pushf
or
or
or
adc
add
pushf
or
sbb
or
and
add
pushf
or
sub
or
xor
add
pushf
or
cmp
or
inc
pushf
or
inc
pushf
or
dec
pushf
or
dec
pushf
or
push
pushf
or
push
pushf
or
pop
pushf
or
pop
pushf
or
pusha
pushf
or
fs
or
push
pushf
or
jo
or
nop
pushf
or
xchg
pushf
or
mov
or
mov
or
int3
pushf
or
jo
or
sbbb
add
or
movsb
popf
or
test
or
lods
popf
or
mov
popf
or
rcrb
or
call
popf
or
add
or
pusha
lahf
or
insb
lahf
or
js
or
test
or
sbb
add
movsb
or
xor
or
cmp
or
inc
movsb
or
dec
movsb
or
push
movsb
or
pusha
movsb
or
push
movsb
or
js
or
andb
xchg
movsb
or
cwtl
movsb
or
mov
movsb
or
and
or
sub
or
cmp
or
enter
shlb
or
js
or
nop
cmpsb
or
test
or
shlb
add
cmpsb
or
loopne
or
in
or
cld
cmpsb
or
or
or
adc
or
xor
or
cmp
or
push
cmpsl
or
cmpsl
or
push
cmpsl
or
mov
or
movsb
cmpsl
or
mov
or
mov
cmpsl
or
fsubs
or
loopne
or
hlt
cmpsl
or
add
or
or
or
sub
or
xor
or
push
test
add
or
pusha
test
add
or
jl
or
xchg
test
add
or
mov
or
enter
int3
test
add
test
add
test
add
test
add
test
add
test
or
sbb
or
and
or
inc
test
or
push
test
or
insb
test
or
test
or
cwtl
test
or
mov
test
or
fsubrs
or
cld
test
or
or
or
and
or
sub
or
dec
stos
or
push
stos
or
pop
stos
or
pop
stos
or
je
or
test
or
nop
stos
or
test
or
lods
stos
or
mov
or
les
or
fsubrs
or
clc
stos
or
cld
stos
or
add
or
and
or
sub
or
dec
stos
or
dec
stos
or
push
stos
or
push
stos
or
insb
stos
or
jl
or
subb
add
stos
or
test
or
lods
stos
or
les
or
fsubrs
or
clc
stos
or
adc
add
or
xor
add
add
add
or
push
lods
or
jo
or
test
add
lods
or
mov
lods
or
aam
or
in
lods
or
cld
lods
or
add
or
and
or
sub
or
inc
lods
or
push
lods
or
pop
lods
or
pusha
lods
or
js
or
nop
lods
or
xchg
lods
or
lods
lods
or
mov
lods
or
enter
loopne
or
in
or
cld
lods
or
or
or
adc
or
xor
or
cmp
or
push
scas
or
fs
or
push
scas
or
mov
or
nop
scas
or
xchg
scas
or
lods
scas
or
mov
scas
or
enter
loopne
or
in
or
call
scas
or
add
or
adc
or
sbb
or
cmp
or
inc
scas
or
inc
scas
or
pop
scas
or
insb
scas
or
jo
or
js
or
nop
scas
or
xchg
scas
or
lods
scas
or
mov
scas
or
enter
loopne
or
in
or
call
scas
or
or
or
adc
or
xor
or
cmp
or
pop
mov
add
or
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
or
and
or
sub
or
dec
mov
add
add
add
add
or
xorb
add
or
les
or
shlb
or
in
mov
add
mov
add
or
adc
or
sbb
or
cmp
or
push
mov
add
add
or
jo
or
mov
or
movsb
mov
add
or
shlb
add
mov
add
mov
add
or
or
or
sub
or
inc
mov
add
or
dec
mov
add
add
add
or
xorb
add
or
movsb
mov
add
or
shlb
or
lock
add
mov
add
mov
add
mov
add
or
and
or
sub
add
or
dec
mov
add
add
add
or
xorb
pushf
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
or
sbb
or
cmp
or
inc
mov
add
add
add
add
or
je
or
mov
or
mov
mov
add
or
les
or
fdivs
or
clc
mov
add
mov
add
or
and
or
sub
or
dec
mov
add
add
add
add
or
xorb
add
or
mov
or
les
or
shlb
or
in
mov
add
or
adc
or
sbb
or
cmp
or
push
mov
add
add
or
jo
or
mov
or
movsb
mov
add
or
shlb
add
mov
add
mov
add
mov
add
mov
add
or
adc
or
xor
or
dec
mov
or
pusha
mov
or
cmpb
add
mov
or
xchg
mov
or
mov
mov
or
loopne
or
hlt
mov
or
or
or
sub
or
inc
mov
or
pop
mov
or
js
or
mov
or
mov
mov
or
fdivrs
or
cld
mov
or
adc
or
xor
or
push
mov
or
fs
or
mov
or
mov
or
sarb
add
mov
or
add
or
adc
or
xor
or
inc
mov
or
pop
mov
or
jl
or
cwtl
mov
or
lods
mov
or
aam
or
fdivrl
or
add
or
or
or
sbb
add
or
pop
mov
or
insb
mov
or
xchg
mov
or
mov
mov
or
in
mov
or
adc
or
and
or
inc
mov
or
push
mov
or
jl
or
test
or
cwtl
mov
or
sarb
add
mov
or
hlt
mov
or
add
or
adc
or
cmp
or
pop
mov
or
insb
mov
or
jl
or
test
or
xchg
mov
or
movsb
mov
or
int3
mov
or
hlt
mov
or
sbb
or
sub
or
push
mov
or
js
or
xchg
mov
or
test
or
mov
or
les
or
hlt
mov
or
or
or
and
or
xor
or
dec
rorb
push
rorb
pop
rorb
rorb
insb
rorb
js
or
xchg
rorb
pushf
rorb
movsb
rorb
lods
rorb
mov
rorb
fadd
or
call
rorl
or
or
adc
or
sbb
or
and
or
sub
or
cmp
or
push
rorl
pusha
rorl
jl
or
test
or
mov
or
xchg
rorl
mov
rorl
enter
in
or
in
rorl
hlt
rorl
cld
rorl
add
or
or
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
dec
ret
fs
insb
ret
js
or
xchg
ret
mov
ret
int3
ret
aam
or
fadd
or
in
or
in
ret
hlt
ret
cld
ret
or
or
and
or
xor
or
cmp
or
dec
ret
or
jo
or
jl
or
test
or
nop
ret
or
lods
ret
or
mov
ret
or
fadd
or
call
les
add
les
add
or
xor
or
cmp
or
inc
les
add
add
add
or
jl
or
mov
or
movsb
les
add
les
add
les
add
les
add
les
add
les
add
les
add
or
sub
or
cmp
or
pusha
lds
add
add
add
lds
add
lds
add
lds
add
lds
add
lds
add
lds
add
or
or
or
adc
or
and
or
cmp
or
inc
or
dec
or
push
or
pusha
or
jl
or
mov
or
movsb
or
lods
or
mov
or
mov
or
int3
or
fadd
or
loopne
or
hlt
or
sbb
or
and
or
sub
or
cmp
or
push
or
pusha
or
jl
or
mov
or
nop
or
movsb
or
enter
aam
or
fadd
or
call
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
leave
or
or
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
dec
leave
or
fs
or
jo
or
js
or
mov
or
mov
or
mov
leave
or
ror
or
in
leave
or
clc
leave
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
inc
lret
dec
lret
push
lret
pusha
lret
jl
or
test
or
mov
or
cwtl
lret
mov
or
mov
lret
int3
lret
aam
or
fmul
or
in
or
in
lret
clc
lret
adc
or
sbb
or
and
or
sub
or
xor
or
inc
lret
or
pop
lret
or
fs
or
insb
lret
or
je
or
jl
or
test
or
mov
or
xchg
lret
or
mov
lret
or
lret
or
int3
lret
or
aam
or
fmul
or
in
or
in
lret
or
hlt
lret
or
cld
lret
or
add
or
or
or
adc
or
sbb
or
sub
or
inc
int3
or
push
int3
or
insb
int3
or
js
or
xchg
int3
or
mov
int3
or
enter
in
or
lock
or
or
or
sbb
or
xor
or
inc
int
add
add
add
add
add
add
int
add
or
aam
or
fmul
or
in
or
in
int
add
int
add
int
add
or
or
or
adc
or
sbb
or
sub
or
inc
into
or
dec
into
or
pop
into
or
je
or
or
add
or
into
or
int3
into
or
aam
or
loopne
or
cld
into
or
add
or
adc
or
sub
or
xor
or
inc
iret
or
pop
iret
or
push
iret
or
mov
or
xchg
iret
or
mov
iret
or
iret
or
int3
iret
or
aam
or
fmul
or
in
or
in
iret
or
hlt
iret
or
cld
iret
or
add
or
or
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
inc
rorb
add
add
add
add
add
add
add
add
or
xchg
rorb
add
or
lods
rorb
add
or
enter
in
or
in
rorb
add
rorb
add
or
and
or
cmp
or
inc
rorl
add
add
add
add
add
add
add
add
or
xchg
rorl
add
or
lods
rorl
add
or
rorl
add
rorl
add
rorl
add
rorl
add
rorl
add
rorl
add
rorl
add
rorl
add
or
or
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
inc
rorb
add
add
add
or
jl
or
test
or
nop
rorb
add
rorb
add
rorb
add
rorb
add
rorb
add
or
or
or
adc
or
sbb
or
sub
or
inc
rorl
add
or
insb
rorl
add
add
add
or
lods
rorl
add
rorl
add
rorl
add
rorl
add
rorl
add
rorl
add
or
and
or
cmp
or
dec
aam
add
add
or
mov
or
cwtl
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
or
sub
or
cmp
or
inc
aad
add
add
add
add
add
add
add
add
or
pushf
aad
add
or
mov
or
mov
aad
add
aad
add
aad
add
aad
add
aad
add
or
or
or
adc
or
and
or
cmp
or
inc
or
dec
or
push
or
pop
or
push
or
mov
or
xchg
or
pushf
or
movsb
or
lods
or
mov
or
mov
or
rcl
or
in
or
clc
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
dec
xlat
or
xlat
or
insb
xlat
or
je
or
jl
or
test
or
mov
or
xchg
xlat
or
pushf
xlat
or
movsb
xlat
or
lods
xlat
or
mov
or
rcl
add
xlat
or
in
or
in
xlat
or
hlt
xlat
or
cld
xlat
or
or
or
and
or
sub
or
xor
or
cmp
or
inc
fmuls
add
add
add
add
or
test
or
mov
or
xchg
fmuls
add
fmuls
add
fmuls
add
fmuls
add
fmuls
add
fmuls
add
fmuls
add
or
adc
or
sub
or
cmp
or
push
add
or
jl
or
mov
or
movsb
add
add
add
add
add
fimull
add
or
sub
or
xor
or
cmp
or
inc
fimull
add
add
add
add
or
test
or
nop
fimull
add
or
aam
or
loopne
or
cld
fimull
add
or
adc
or
sbb
or
sub
or
xor
or
cmp
or
dec
fisttpl
add
add
add
add
fisttpl
add
or
movsb
fisttpl
add
fisttpl
add
fisttpl
add
fisttpl
add
fisttpl
add
fisttpl
add
fisttpl
add
fmull
add
or
and
or
sub
or
xor
or
cmp
or
dec
fmull
add
add
or
mov
or
cwtl
fmull
add
or
fmull
add
fmull
add
fmull
add
fmull
add
fmull
add
or
sbb
or
xor
or
inc
fisttpll
add
add
add
add
add
fisttpll
add
fisttpll
add
fisttpll
add
fisttpll
add
fisttpll
add
or
and
or
sub
or
cmp
or
pusha
fimuls
add
add
add
fimuls
add
or
mov
or
mov
fimuls
add
fimuls
add
fimuls
add
fimuls
add
fimuls
add
fisttps
add
or
sub
or
xor
or
cmp
or
dec
fisttps
add
add
add
or
xchg
fisttps
add
fisttps
add
fisttps
add
fisttps
add
fisttps
add
fisttps
add
fisttps
add
or
adc
or
sbb
or
sub
or
push
loopne
add
add
add
or
js
or
mov
or
mov
or
mov
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
or
and
or
xor
or
cmp
or
dec
loope
add
add
or
test
or
mov
or
cwtl
loope
add
or
fsub
or
call
loope
add
or
sub
or
xor
or
cmp
or
dec
loop
add
add
add
add
loop
add
or
mov
loop
add
loop
add
loop
add
or
adc
or
sub
or
xor
or
cmp
or
dec
jecxz
add
add
add
or
xchg
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
or
sbb
or
xor
or
inc
in
add
or
pop
in
add
add
in
add
or
mov
or
in
add
in
add
in
add
in
add
or
sub
or
xor
or
cmp
or
inc
in
add
add
add
add
add
add
add
add
or
xchg
in
add
or
lods
in
add
or
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
or
or
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
inc
out
add
add
add
add
add
add
add
add
or
xchg
out
add
or
lods
out
add
or
enter
in
or
in
out
add
out
add
out
add
or
or
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
inc
out
add
add
add
add
add
add
add
add
or
xchg
out
add
or
mov
or
int3
out
add
out
add
out
add
out
add
out
add
out
add
call
or
sub
or
inc
call
or
insb
call
or
jl
or
mov
or
movsb
call
or
mov
call
or
cld
call
or
and
or
xor
or
dec
jmp
or
je
or
sub
add
or
jmp
or
in
jmp
or
adc
or
and
or
cmp
or
inc
ljmp
push
ljmp
fs
je
or
jl
or
test
or
mov
or
xchg
ljmp
movsb
ljmp
mov
or
mov
ljmp
aam
or
fsubr
or
in
or
in
ljmp
cld
ljmp
or
or
adc
or
sbb
or
sub
or
inc
jmp
add
add
add
add
add
or
mov
or
cwtl
jmp
add
or
enter
in
or
in
jmp
add
jmp
add
jmp
add
in
or
and
or
sub
or
cmp
or
push
in
or
pop
in
or
fs
or
insb
in
or
je
or
jl
or
test
or
mov
or
xchg
in
or
pushf
in
or
test
or
in
or
int3
in
or
aam
or
fsubr
or
call
in
or
adc
or
sub
or
xor
or
inc
in
or
pop
in
or
fs
or
jo
or
mov
or
xchg
in
or
mov
in
or
in
or
shr
or
in
in
or
hlt
in
or
cld
in
or
add
or
or
or
sbb
or
xor
or
cmp
or
dec
out
or
fs
or
jo
or
mov
or
cwtl
out
or
mov
or
mov
out
or
int3
out
or
aam
or
loopne
or
cld
out
or
add
or
adc
or
sub
or
cmp
or
push
out
or
pop
out
or
fs
or
insb
out
or
js
or
xchg
out
or
pushf
out
or
movsb
out
or
mov
or
int3
out
or
fsubr
or
hlt
out
or
add
or
sbb
or
sub
or
xor
or
inc
lock
push
lock
jl
or
test
or
mov
or
xchg
lock
pushf
lock
test
or
mov
or
lock
int3
lock
lock
cld
lock
add
or
or
or
adc
or
and
or
cmp
or
dec
icebp
or
push
icebp
or
fs
or
mov
or
xchg
icebp
or
pushf
icebp
or
movsb
icebp
or
lods
icebp
or
mov
icebp
or
aam
or
clc
icebp
or
add
or
or
or
adc
or
sbb
or
sub
or
xor
or
inc
repnz
dec
repnz
jo
or
jl
or
test
or
mov
or
xchg
repnz
mov
repnz
mov
repnz
in
repnz
hlt
repnz
cld
repnz
add
or
adc
or
sbb
or
sub
or
inc
repz
push
repz
test
or
mov
or
xchg
repz
pushf
repz
movsb
repz
lods
repz
mov
or
mov
repz
in
or
lock
or
or
sbb
or
xor
or
inc
hlt
or
pop
hlt
or
push
hlt
or
nop
hlt
or
lods
hlt
or
mov
or
shl
add
hlt
or
call
cmc
or
or
or
sbb
or
xor
or
inc
cmc
or
pop
cmc
or
fs
or
jo
or
mov
or
xchg
cmc
or
mov
cmc
or
cmc
or
int3
cmc
or
aam
or
loopne
or
cld
cmc
or
add
or
or
or
sbb
or
xor
or
cmp
or
dec
testb
testb
jo
or
mov
or
cwtl
testb
mov
or
mov
testb
int3
testb
fdiv
or
hlt
testb
add
or
sbb
or
sub
or
inc
testl
add
add
add
add
testl
add
testl
add
testl
add
testl
add
or
and
or
sub
or
xor
or
cmp
or
push
clc
or
pop
clc
or
fs
or
jo
or
mov
or
cwtl
clc
or
mov
clc
or
fdivr
or
in
or
in
clc
or
clc
clc
or
add
or
adc
or
sub
or
push
stc
or
fs
or
insb
stc
or
je
or
jl
or
test
or
nop
stc
or
lods
stc
or
mov
or
mov
stc
or
int3
stc
or
aam
or
fdivr
or
in
or
in
stc
or
hlt
stc
or
cld
stc
or
add
or
or
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
inc
cli
or
dec
cli
or
push
cli
or
pop
cli
or
fs
or
insb
cli
or
js
or
xchg
cli
or
pushf
cli
or
test
or
cli
or
int3
cli
or
aam
or
loopne
or
cld
cli
or
or
or
and
or
xor
or
dec
sti
or
push
sti
or
pop
sti
or
push
sti
or
mov
or
xchg
sti
or
mov
sti
or
sti
or
sar
or
in
sti
or
clc
sti
or
adc
or
and
or
cmp
or
inc
cld
or
dec
cld
or
push
cld
or
pop
cld
or
push
cld
or
mov
or
cwtl
cld
or
mov
or
mov
cld
or
in
or
in
cld
or
clc
cld
or
adc
or
and
or
cmp
or
inc
std
or
push
std
or
insb
std
or
je
or
jl
or
test
or
mov
or
xchg
std
or
mov
std
or
std
or
int3
std
or
aam
or
fdivr
or
in
or
lock
or
or
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
inc
decb
add
or
insb
decb
add
or
xchg
decb
add
decb
add
decb
add
decb
add
decb
add
or
sbb
or
xor
or
cmp
or
inc
decl
add
add
add
add
or
test
or
mov
or
cwtl
decl
add
or
fdivr
or
in
or
lock
add
or
adc
or
and
or
cmp
or
inc
add
push
add
insb
add
je
or
addb
add
or
mov
or
int3
add
aam
or
faddl
or
cld
add
sbb
or
cmp
or
pop
add
jl
or
addb
add
or
mov
or
pushf
add
movsb
add
les
or
enter
int3
add
rolb
or
aam
or
in
or
lock
or
or
sbb
or
xor
or
cmp
or
dec
add
add
jo
or
mov
or
cwtl
add
mov
or
rolb
add
add
call
add
adc
or
sub
or
cmp
or
push
add
pusha
add
jl
or
mov
or
movsb
add
mov
or
int3
add
fadds
or
hlt
add
add
add
or
sub
add
add
or
insb
add
add
add
or
pushf
add
add
add
add
or
faddl
add
add
add
add
add
or
xor
or
inc
add
or
pop
add
or
xchg
add
or
test
or
mov
or
loopne
or
in
add
or
add
or
sbb
or
sub
or
xor
or
pusha
push
or
insb
push
or
je
or
addb
add
or
mov
or
loopne
or
in
push
or
hlt
push
or
add
or
sbb
or
sub
or
inc
pop
or
dec
pop
or
push
pop
or
pusha
pop
or
jl
or
mov
or
nop
pop
or
rolb
add
pop
or
aam
or
faddl
or
in
or
lock
or
or
or
sbb
or
xor
or
inc
or
pop
or
push
or
nop
or
lods
or
mov
or
loopne
or
cld
or
or
or
and
or
xor
or
dec
or
push
or
pop
or
push
or
nop
or
lods
or
mov
or
fmull
or
call
or
adc
or
sub
or
cmp
or
push
or
pop
or
push
or
nop
or
lods
or
mov
or
lock
cld
or
add
or
adc
or
sub
or
xor
or
inc
or
pop
or
or
jo
or
mov
or
cwtl
or
mov
or
rorb
add
or
call
or
add
or
sbb
add
or
inc
or
add
add
or
test
add
or
add
or
add
or
add
or
add
or
or
sub
or
xor
or
push
or
or
pop
or
or
je
or
orb
add
or
mov
or
or
cld
or
or
and
or
xor
or
dec
push
or
pop
push
or
pusha
push
or
nop
push
or
pushf
push
or
movsb
push
or
mov
or
int3
push
or
fmuls
or
hlt
push
or
add
or
sbb
or
sub
or
inc
add
or
insb
add
or
xchg
add
add
add
add
add
add
or
sbb
or
sbb
or
and
or
xor
or
inc
adc
pop
adc
adc
insb
adc
js
or
xchg
adc
mov
adc
enter
in
or
in
adc
clc
adc
adc
or
and
or
sub
or
pop
adc
adc
insb
adc
js
or
xchg
adc
pushf
adc
test
or
mov
or
loopne
or
in
adc
hlt
adc
add
or
sbb
or
and
or
xor
or
cmp
or
push
adc
jl
or
mov
or
movsb
adc
mov
or
int3
adc
fcoms
or
hlt
adc
add
or
or
add
or
adc
add
or
sbb
add
or
and
add
or
sub
add
or
xor
add
or
cmp
add
or
inc
inc
or
inc
inc
or
dec
inc
or
dec
inc
or
push
inc
or
push
inc
or
pop
inc
or
pop
inc
or
pusha
inc
or
fs
or
push
inc
or
jo
or
je
or
js
or
jl
or
addb
test
add
inc
or
nop
inc
or
xchg
inc
or
cwtl
inc
or
pushf
inc
or
mov
inc
or
test
or
lods
inc
or
mov
or
mov
or
mov
inc
or
rolb
les
add
inc
or
int3
inc
or
fadds
add
inc
or
loopne
or
in
or
lock
or
hlt
inc
or
add
add
or
cmp
add
or
inc
inc
or
inc
inc
or
dec
inc
or
cmp
add
or
addb
or
or
adc
add
or
sbb
add
or
and
add
or
sub
add
or
xor
add
or
cmp
add
or
dec
inc
or
push
inc
or
pusha
inc
or
fs
or
je
or
js
or
mov
add
or
mov
inc
or
mov
or
les
add
inc
or
fadds
add
inc
or
in
inc
or
lock
or
cld
inc
or
add
add
or
adc
or
sbb
sub
sub
or
cmp
or
inc
inc
or
inc
inc
or
push
inc
or
push
inc
or
pop
inc
or
fs
or
push
inc
or
js
or
jl
or
addb
inc
or
mov
nop
inc
or
pushf
inc
or
mov
inc
or
mov
or
mov
or
mov
inc
or
enter
int3
inc
or
fadds
faddl
loopne
or
in
or
in
inc
or
lock
or
hlt
inc
or
clc
inc
or
add
or
or
add
or
sbb
or
and
add
or
xor
or
inc
inc
or
inc
inc
or
dec
inc
or
push
inc
or
pop
inc
or
pop
inc
or
push
inc
or
jo
or
addb
test
add
or
test
or
lods
inc
or
mov
inc
or
rolb
add
inc
or
in
or
call
inc
or
cld
inc
or
or
or
adc
add
inc
or
and
or
xor
add
or
cmp
add
or
dec
inc
or
pop
inc
or
jo
or
je
or
js
or
test
add
inc
or
cwtl
inc
or
pushf
inc
or
mov
inc
or
mov
or
mov
or
rolb
les
add
inc
or
fadds
add
inc
or
in
inc
or
cld
inc
or
add
add
inc
or
adc
or
and
or
sub
add
inc
or
cmp
or
dec
inc
or
push
inc
or
pusha
inc
or
fs
or
push
inc
or
js
or
test
add
inc
or
cwtl
inc
or
pushf
inc
or
mov
or
les
add
inc
or
in
inc
or
lock
or
add
add
or
adc
or
sbb
add
dec
or
sub
or
xor
add
or
inc
dec
or
inc
dec
or
dec
dec
or
push
dec
or
pop
dec
or
pusha
dec
or
fs
or
js
or
mov
add
dec
or
mov
or
mov
or
mov
dec
or
int3
dec
or
rorb
add
dec
or
fmull
add
dec
or
in
or
lock
or
hlt
dec
or
clc
dec
or
or
add
or
sbb
or
and
add
dec
or
xor
or
inc
dec
or
dec
dec
or
pop
dec
or
pop
dec
or
insb
dec
or
jo
or
orb
test
add
or
test
or
lods
dec
or
mov
dec
or
rorb
rorb
add
dec
or
fmuls
add
dec
or
call
dec
or
hlt
dec
or
clc
dec
or
cld
dec
or
add
add
or
adc
add
or
and
add
or
sub
add
dec
or
cmp
or
dec
dec
or
push
dec
or
pusha
dec
or
fs
or
je
or
js
or
mov
add
or
mov
dec
or
mov
or
les
add
dec
or
fmuls
add
dec
or
in
dec
or
lock
or
cld
dec
or
add
add
or
adc
add
or
sbb
add
or
sub
add
or
xor
add
or
inc
dec
or
inc
dec
or
push
dec
or
push
dec
or
pop
dec
or
push
dec
or
jl
or
orb
nop
dec
or
xchg
dec
or
movsb
dec
or
test
or
mov
dec
or
int3
dec
or
rorb
add
dec
or
in
or
hlt
dec
or
clc
dec
or
or
or
or
adc
sbb
or
and
sub
or
xor
xor
or
inc
dec
or
dec
dec
or
pop
dec
or
pop
dec
or
jo
or
je
or
test
mov
cwtl
dec
or
pushf
dec
or
lods
dec
or
mov
or
rorb
dec
or
aam
or
fmuls
call
dec
or
cld
dec
or
add
add
dec
or
adc
or
sbb
add
or
sub
or
xor
or
cmp
add
or
dec
dec
or
push
dec
or
pop
dec
or
pusha
dec
or
fs
or
jo
or
je
or
js
or
mov
add
or
mov
dec
or
mov
or
les
add
dec
or
fmuls
add
dec
or
in
dec
or
lock
or
add
add
or
adc
or
sbb
add
dec
or
sub
or
cmp
or
inc
dec
or
push
dec
or
push
dec
or
pop
dec
or
fs
or
push
dec
or
js
or
jl
or
orb
mov
add
dec
or
mov
dec
or
mov
or
mov
dec
or
int3
dec
or
fmull
add
dec
or
lock
or
hlt
dec
or
add
or
or
add
dec
or
sbb
or
sub
or
xor
add
or
inc
dec
or
push
dec
or
pop
dec
or
push
dec
or
jo
or
jl
or
orb
test
add
dec
or
cwtl
dec
or
movsb
dec
or
test
or
lods
dec
or
mov
dec
or
int3
dec
or
rorb
add
dec
or
in
or
hlt
dec
or
clc
dec
or
or
add
or
sbb
or
and
add
push
or
xor
or
inc
push
or
dec
push
or
pop
push
or
pop
push
or
push
push
or
jo
or
jl
or
adcb
test
add
push
or
cwtl
push
or
test
or
lods
push
or
mov
push
or
les
add
push
or
aam
or
in
or
call
push
or
cld
push
or
or
or
adc
add
push
or
and
or
xor
or
cmp
add
or
dec
push
or
pop
push
or
pusha
push
or
jo
or
je
or
adcb
test
add
push
or
cwtl
push
or
pushf
push
or
test
or
lods
push
or
mov
or
rclb
les
add
push
or
fcoms
add
push
or
in
push
or
cld
push
or
add
add
or
adc
add
or
sbb
add
or
sub
add
push
or
cmp
or
dec
push
or
push
push
or
push
push
or
pusha
push
or
fs
or
je
or
js
or
mov
add
or
mov
push
or
mov
or
les
add
push
or
fcoms
add
push
or
in
push
or
lock
or
add
add
or
or
add
push
or
adc
or
sbb
add
push
or
sub
or
cmp
or
inc
push
or
inc
push
or
push
push
or
push
push
or
pop
push
or
push
push
or
jl
or
adcb
nop
push
or
xchg
push
or
movsb
push
or
test
or
mov
push
or
int3
push
or
rclb
add
push
or
in
or
hlt
push
or
clc
push
or
or
or
or
sbb
or
and
sub
or
xor
xor
or
cmp
inc
push
or
dec
push
or
pop
push
or
pop
push
or
insb
push
or
jo
or
adcb
push
or
nop
push
or
xchg
push
or
cwtl
push
or
pushf
push
or
test
or
lods
push
or
mov
or
rclb
push
or
aam
or
fcoms
call
push
or
cld
push
or
add
add
push
or
adc
or
and
or
sub
add
push
or
cmp
or
dec
push
or
push
push
or
pusha
push
or
fs
or
je
or
js
or
mov
add
or
pushf
push
or
mov
push
or
mov
or
mov
push
or
enter
int3
push
or
fcoms
add
push
or
loopne
or
in
push
or
lock
or
hlt
push
or
add
add
or
adc
or
sbb
add
push
or
sub
or
xor
add
or
inc
push
or
inc
push
or
push
push
or
push
push
or
fs
or
push
push
or
jl
or
mov
add
push
or
mov
push
or
mov
or
mov
push
or
int3
push
or
fcoml
add
push
or
in
push
or
lock
or
hlt
push
or
add
or
or
add
push
or
sbb
or
sub
or
xor
add
or
inc
push
or
push
push
or
pop
push
or
push
push
or
jl
or
adcb
nop
push
or
xchg
push
or
cwtl
push
or
movsb
push
or
test
or
lods
push
or
mov
or
mov
push
or
int3
push
or
rclb
add
push
or
in
or
clc
push
or
cld
push
or
or
or
adc
add
pop
or
and
or
xor
or
cmp
add
or
dec
pop
or
pop
pop
or
pusha
pop
or
jo
or
je
or
test
add
pop
or
pushf
pop
or
lods
pop
or
mov
or
mov
pop
or
les
add
pop
or
fcomps
add
pop
or
in
pop
or
cld
pop
or
add
add
pop
or
adc
or
and
or
sub
add
pop
or
cmp
or
dec
pop
or
push
pop
or
pusha
pop
or
fs
or
je
or
js
or
mov
add
or
mov
pop
or
mov
or
mov
or
les
add
pop
or
int3
pop
or
fcomps
add
pop
or
loopne
or
in
pop
or
lock
or
hlt
pop
or
add
add
or
or
add
or
sbb
add
or
sub
add
or
xor
add
or
inc
pop
or
inc
pop
or
push
pop
or
push
pop
or
pop
pop
or
fs
or
push
pop
or
js
or
jl
or
mov
add
pop
or
movsb
pop
or
mov
pop
or
int3
pop
or
rcrb
add
pop
or
in
or
hlt
pop
or
clc
pop
or
or
add
or
sbb
or
and
add
pop
or
xor
or
inc
pop
or
dec
pop
or
pop
pop
or
pop
pop
or
pusha
pop
or
insb
pop
or
jo
or
je
or
sbbb
test
add
or
test
or
lods
pop
or
mov
pop
or
rcrb
add
pop
or
in
or
call
pop
or
cld
pop
or
or
or
adc
and
and
or
xor
or
cmp
inc
pop
or
dec
pop
or
dec
pop
or
pop
pop
or
pusha
pop
or
jo
or
je
or
js
or
test
mov
mov
cwtl
pop
or
pushf
pop
or
mov
pop
or
mov
or
rcrb
pop
or
rcrb
aam
or
fcomps
call
pop
or
cld
pop
or
add
add
pop
or
adc
or
and
or
sub
add
pop
or
cmp
or
dec
pop
or
push
pop
or
pusha
pop
or
fs
or
je
or
js
or
mov
add
or
pushf
pop
or
mov
pop
or
mov
or
mov
or
les
add
pop
or
fcomps
add
pop
or
in
pop
or
lock
or
add
add
or
adc
or
sbb
add
pop
or
sub
or
cmp
or
inc
pop
or
push
pop
or
push
pop
or
pop
pop
or
push
pop
or
jl
or
sbbb
nop
pop
or
xchg
pop
or
movsb
pop
or
test
or
mov
pop
or
int3
pop
or
rcrb
add
pop
or
in
or
hlt
pop
or
clc
pop
or
or
add
or
sbb
add
or
and
add
or
xor
add
or
cmp
add
add
or
dec
pop
or
pop
pop
or
pop
pop
or
pusha
pop
or
insb
pop
or
jo
or
je
or
sbbb
test
add
pop
or
cwtl
pop
or
pushf
pop
or
test
or
lods
pop
or
mov
or
mov
pop
or
les
add
pop
or
aam
or
fcomps
add
pop
or
call
pop
or
clc
pop
or
cld
pop
or
or
or
adc
add
pusha
or
and
or
xor
or
cmp
add
or
dec
pusha
or
pop
pusha
or
pusha
pusha
or
fs
or
jo
or
je
or
js
or
test
add
pusha
or
cwtl
pusha
or
pushf
pusha
or
test
or
lods
pusha
or
mov
or
mov
or
shlb
les
add
pusha
or
fsubs
add
pusha
or
in
pusha
or
cld
pusha
or
add
add
popa
or
adc
or
and
or
sub
add
popa
or
cmp
or
dec
popa
or
push
popa
or
pusha
popa
or
fs
or
push
popa
or
js
or
mov
add
or
mov
popa
or
mov
or
mov
or
les
add
popa
or
aam
or
fsubs
add
popa
or
call
popa
or
lock
or
add
add
or
adc
or
sbb
add
bound
sub
or
cmp
or
inc
bound
inc
bound
push
bound
push
bound
pop
bound
push
bound
jl
or
andb
nop
bound
xchg
bound
movsb
bound
test
or
mov
bound
int3
bound
shlb
add
bound
in
or
hlt
bound
clc
bound
or
add
or
adc
add
or
and
add
arpl
xor
or
inc
arpl
dec
arpl
dec
arpl
pop
arpl
pop
arpl
insb
arpl
jo
or
jl
or
andb
test
add
arpl
cwtl
arpl
test
or
lods
arpl
mov
arpl
shlb
add
arpl
call
arpl
cld
arpl
add
adc
adc
or
and
or
sub
cmp
cmp
or
dec
fs
push
fs
pusha
fs
fs
je
or
js
or
mov
mov
cwtl
fs
pushf
fs
mov
fs
mov
or
mov
or
mov
fs
enter
int3
fs
fsubs
fsubl
loopne
or
in
fs
lock
hlt
fs
add
add
or
sbb
add
or
sub
or
cmp
or
inc
gs
push
gs
push
gs
fs
push
gs
js
or
andb
mov
add
or
movsb
gs
test
or
mov
or
mov
gs
enter
int3
gs
shlb
add
gs
in
or
hlt
gs
clc
gs
or
add
or
sbb
or
and
add
data16
xor
or
inc
data16
dec
data16
pop
data16
pop
data16
insb
data16
jo
or
andb
test
add
data16
cwtl
data16
test
or
lods
data16
mov
data16
les
add
data16
aam
or
in
or
call
data16
cld
data16
or
or
adc
add
or
and
add
or
sub
add
or
cmp
or
dec
addr16
push
addr16
pop
addr16
pusha
addr16
fs
jo
or
je
or
js
or
test
add
addr16
cwtl
addr16
pushf
addr16
lods
addr16
mov
or
shlb
les
add
addr16
fsubs
add
addr16
in
addr16
cld
addr16
add
add
push
or
and
or
sub
add
push
or
dec
push
or
push
push
or
fs
or
js
or
jl
or
mov
add
or
pushf
push
or
mov
or
mov
or
mov
push
or
fsubrs
add
push
or
lock
imul
imul
insb
or
adc
and
and
or
xor
or
cmp
dec
insb
or
dec
insb
or
pop
insb
or
pusha
insb
or
jo
or
je
or
test
mov
cwtl
insb
or
pushf
insb
or
test
or
lods
insb
or
mov
or
mov
or
shrb
insb
or
enter
aam
or
fsubrs
fsubrl
in
or
call
insb
or
lock
or
cld
insb
or
add
add
or
adc
add
or
and
or
sub
add
insl
or
hlt
insl
or
add
or
or
add
outsb
or
sbb
or
sub
or
xor
add
or
inc
outsb
or
push
outsb
or
pop
outsb
or
push
outsb
or
jl
or
subb
nop
outsb
or
xchg
outsb
or
cwtl
outsb
or
mov
outsb
or
test
or
mov
or
mov
outsb
or
mov
or
mov
or
les
add
jo
add
jo
add
jo
add
jo
add
jo
add
jno
add
or
adc
or
sbb
add
jno
add
or
cmp
or
inc
jno
add
or
push
jno
add
or
push
jno
add
add
jno
add
or
test
or
mov
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jb
add
or
sbb
or
and
add
jb
add
or
inc
jb
add
or
pop
jb
add
add
add
or
xorb
test
add
or
test
or
lods
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jae
add
jae
add
or
and
or
sub
add
jae
add
or
dec
jae
add
or
pusha
jae
add
add
or
je
or
js
or
jl
or
mov
add
or
mov
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
je
add
or
or
adc
adc
or
sbb
sbb
or
and
or
sub
sub
or
xor
cmp
cmp
or
inc
je
add
add
add
or
push
je
add
add
or
js
or
jl
or
mov
nop
je
add
je
add
or
enter
int3
je
add
je
add
je
add
je
add
je
add
je
add
or
or
or
sbb
add
or
sub
or
xor
add
or
pop
jne
add
add
or
xorb
test
add
or
test
or
lods
jne
add
or
shlb
add
jne
add
jne
add
jne
add
jne
add
jne
add
or
adc
add
jbe
add
or
xor
or
cmp
add
or
dec
jbe
add
add
or
jo
or
je
or
test
add
jbe
add
or
mov
or
shlb
les
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
ja
add
or
adc
add
or
sbb
add
or
sub
add
ja
add
or
inc
ja
add
add
or
push
ja
add
or
fs
add
or
je
or
js
or
jl
or
mov
add
or
mov
ja
add
or
enter
fdivs
add
ja
add
ja
add
ja
add
js
add
or
adc
or
sbb
add
js
add
or
cmp
add
or
inc
js
add
add
add
or
push
js
add
or
push
js
add
add
js
add
or
test
or
mov
js
add
js
add
js
add
js
add
js
add
js
add
js
add
jns
add
or
sbb
add
or
and
add
or
xor
add
or
cmp
add
add
or
dec
jns
add
or
pop
jns
add
or
insb
jns
add
or
je
or
cmpb
test
add
jns
add
or
mov
or
sarb
les
add
jns
add
jns
add
jns
add
jns
add
jns
add
jp
add
jp
add
or
and
or
sub
add
jp
add
or
dec
jp
add
or
pusha
jp
add
add
add
or
mov
add
or
mov
jp
add
or
enter
fdivrs
add
jp
add
jp
add
jp
add
jp
add
jp
add
jnp
add
or
or
add
or
adc
add
or
sbb
add
or
and
add
or
sub
add
or
xor
add
jnp
add
or
inc
jnp
add
add
or
dec
jnp
add
or
inc
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orl
or
or
adc
or
and
or
xor
or
cmp
or
inc
orl
dec
orl
pop
orl
push
orl
je
or
addb
add
orl
pushf
orl
lods
orl
mov
orl
les
or
aam
or
fadds
or
call
orl
cld
orl
or
or
adc
or
and
or
sub
or
xor
or
cmp
or
dec
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
xchg
mov
or
mov
or
mov
xchg
rolb
add
add
add
or
xchg
xchg
pushf
xchg
movsb
xchg
lods
xchg
mov
or
mov
xchg
int3
xchg
aam
or
faddl
or
in
xchg
hlt
xchg
cld
xchg
add
or
or
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
inc
mov
dec
mov
push
mov
pop
mov
mov
insb
mov
je
or
jl
or
test
or
xchg
mov
pushf
mov
movsb
mov
lods
mov
mov
or
mov
mov
int3
mov
aam
or
fmull
or
in
mov
hlt
mov
cld
mov
add
or
or
or
adc
or
sbb
or
and
or
sub
or
jl
or
or
add
or
mov
or
nop
int3
or
xchg
int3
or
cwtl
int3
or
pushf
int3
or
mov
int3
or
test
or
lods
int3
or
mov
or
mov
or
mov
int3
or
ror
add
int3
or
enter
int3
int3
or
ror
or
aam
or
fmul
or
fmul
or
loopne
or
in
or
call
int3
or
lock
or
hlt
int3
or
clc
int3
or
cld
int3
or
add
or
add
or
or
or
or
or
adc
or
adc
or
sbb
or
sbb
or
and
or
and
or
sub
or
sub
or
xor
or
xor
or
cmp
or
cmp
or
inc
int
add
add
or
dec
int
add
or
push
int
add
or
pop
int
add
or
fs
add
or
insb
int
add
or
je
or
js
or
jl
or
or
add
or
mov
or
nop
int
add
or
pushf
int
add
int
add
int
add
or
mov
rorb
rorb
enter
int3
rorb
rcl
or
aam
or
add
or
or
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
inc
rorl
dec
rorl
push
rorl
pop
rorl
rorl
insb
rorl
je
or
jl
or
test
or
mov
or
xchg
rorl
pushf
rorl
movsb
rorl
lods
rorl
mov
or
mov
rorl
int3
rorl
aam
or
or
in
or
in
rorl
hlt
rorl
cld
rorl
add
or
or
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
inc
aam
add
add
add
add
add
add
add
add
or
xchg
aam
add
or
lods
aam
add
or
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
inc
aad
add
add
add
add
add
add
add
add
or
cld
fimuls
add
or
add
or
or
or
or
or
adc
or
adc
or
sbb
or
sbb
or
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
inc
loopne
add
or
push
loopne
add
or
pusha
loopne
add
or
jo
or
js
or
and
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loop
add
jecxz
add
or
adc
or
adc
or
sbb
or
sbb
or
and
or
and
or
sub
or
sub
or
xor
or
mov
in
or
shr
or
aam
or
in
in
or
push
decb
pop
decb
pusha
decb
inc
decl
inc
decl
dec
decl
nop
decl
mov
decl
fdivr
or
clc
decl
adc
or
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
or
add
push
or
add
or
add
push
or
add
push
or
add
pop
or
add
pop
or
add
pop
or
add
or
add
pop
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
push
or
add
push
or
add
push
or
add
push
or
add
or
add
or
add
or
add
or
add
add
add
or
add
or
add
or
add
prefetch
ret
add
prefetch
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
adc
add
or
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
add
or
add
xor
or
add
or
add
mov
lldt
mov
sldt
test
add
stos
verr
lldt
lods
verw
lods
xor
sldt
ltr
mov
add
sldt
mov
add
mov
add
aaa
mov
ltr
mov
lldt
rorl
fcmovb
ltr
sbb
pop
mov
add
sbb
add
add
rolb
mov
mov
nop
push
popa
nop
aaa
adc
in
stos
out
.byte
pop
