mov
mov
sub
call
mov
mov
mov
push
mov
mov
sub
call
mov
or
jne
sbb
or
add
sub
sub
inc
sub
dec
dec
inc
inc
dec
or
sub
or
add
call
mov
push
mov
sub
neg
cmp
jb
inc
inc
test
je
add
dec
test
jne
rol
inc
sub
add
cmp
ja
xor
xchg
cmp
jb
or
add
test
jne
dec
cmp
je
add
add
add
add
push
pop
mov
add
mov
call
lea
cmp
jg
sub
not
or
sub
sub
add
sub
add
sbb
cmp
jb
dec
and
cmp
je
add
add
add
or
test
je
dec
sub
dec
mov
mov
push
push
pop
push
mov
mov
mov
add
push
mov
mov
push
push
pop
mov
add
push
push
pop
push
push
pop
mov
add
mov
call
xor
and
sub
leave
ret
push
mov
sub
push
cmp
ja
movl
movl
add
mov
mov
add
movl
movl
xchg
dec
pop
setb
leave
ret
nop
push
mov
sub
push
and
xor
mov
cmp
jns
dec
inc
sub
movl
sub
bswap
inc
pop
sete
leave
ret
nop
nop
push
mov
sub
push
add
mov
inc
push
push
call
mov
or
jne
mov
push
push
call
mov
sub
inc
pop
setae
leave
ret
nop
push
mov
sub
push
xor
movl
mov
movl
add
push
mov
mov
mov
add
mov
call
cltd
pop
setnp
leave
ret
nop
nop
nop
nop
push
mov
sub
push
xor
movl
mov
mov
push
mov
movl
sub
call
mov
xor
xchg
pop
setbe
leave
ret
nop
nop
nop
nop
nop
push
mov
sub
push
mov
lea
push
push
push
call
mov
sub
bswap
pop
seto
leave
ret
nop
nop
nop
nop
nop
push
mov
sub
push
cmp
jnp
dec
movl
or
add
mov
sub
mov
inc
pop
setg
leave
ret
nop
nop
nop
push
mov
sub
push
mov
add
cmp
jge
mov
dec
add
test
je
or
dec
pop
seto
leave
ret
nop
nop
nop
push
mov
sub
push
cmp
js
add
sub
rol
inc
and
mov
and
mov
dec
pop
sete
leave
ret
nop
nop
nop
nop
nop
push
mov
sub
push
movl
sub
sub
movl
inc
xchg
pop
setno
leave
ret
nop
nop
push
mov
sub
push
sub
mov
mov
push
push
pop
push
movl
mov
push
pop
sub
call
pop
seto
leave
ret
nop
nop
push
mov
sub
push
mov
and
test
jne
sub
inc
sub
movl
test
jne
add
add
pop
seto
leave
ret
nop
push
mov
sub
push
and
add
add
mov
add
mov
mov
movl
add
pop
seta
leave
ret
nop
nop
nop
push
mov
sub
push
movl
neg
lea
mov
pop
seta
leave
ret
nop
nop
nop
push
mov
sub
push
xor
test
jne
mov
dec
movl
rol
mov
movl
movl
pop
seto
leave
ret
nop
nop
nop
nop
nop
push
mov
sub
push
neg
movl
add
add
or
mov
sbb
pop
setp
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
and
and
test
je
inc
mov
cmp
jp
dec
add
xchg
sub
xor
cmp
jae
dec
and
movl
mov
push
mov
mov
movl
add
push
movl
mov
movl
add
push
mov
mov
sub
call
mov
test
je
inc
movl
mov
neg
and
add
add
not
mov
and
cmp
jg
mov
dec
movl
movl
sub
xor
mov
or
mov
add
and
cmp
jae
test
jne
not
rcr
and
movl
add
mov
neg
add
sub
mov
sub
sub
inc
mov
test
jne
bswap
test
jne
sbb
not
sub
mov
xor
sub
sub
movl
mov
mov
add
push
movl
mov
push
mov
mov
movl
sub
call
mov
or
je
inc
mov
inc
mov
dec
add
sub
movl
movl
rcr
add
mov
sub
mov
cmp
jg
sub
inc
test
jne
mov
not
movl
lea
sub
movl
add
mov
inc
sub
not
dec
lea
and
not
and
add
dec
movl
add
movl
add
add
movl
mov
mov
add
pushl
pop
mov
call
mov
test
je
inc
sub
and
add
inc
sub
sub
shr
movl
mov
push
movl
mov
push
mov
mov
add
mov
call
sub
mov
mov
add
mov
lea
cmp
jb
mov
and
inc
add
dec
ror
xor
add
mov
mov
and
mov
cmp
jb
mov
xchg
inc
add
add
setnp
mov
push
push
pop
push
push
pop
push
mov
mov
mov
sub
call
add
movl
mov
mov
test
je
xor
cltd
dec
mov
and
sub
xor
setb
add
add
movl
dec
and
mov
movl
sub
push
pop
add
pushl
popl
mov
call
mov
or
je
mov
dec
sbb
movl
cmp
jnp
add
dec
dec
mov
movl
mov
bswap
movl
test
jne
dec
inc
inc
inc
or
inc
movl
movl
movl
and
add
and
inc
movl
mov
movl
add
push
movl
mov
push
push
pop
mov
mov
sub
call
bswap
inc
mov
and
not
movl
shl
movl
mov
push
push
pop
sub
call
mov
dec
add
add
cltd
add
or
dec
mov
neg
or
mov
movl
add
or
movl
sub
mov
movl
mov
sub
add
movl
mov
not
test
jne
or
inc
mov
dec
neg
sub
sub
mov
mov
push
movl
mov
push
mov
movl
sub
call
add
dec
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
sub
xchg
mov
push
push
call
mov
mov
add
sbb
mov
mov
push
or
lea
push
call
mov
or
jne
add
dec
inc
mov
add
lea
push
dec
push
mov
inc
push
mov
push
call
mov
add
or
sub
push
sub
inc
push
call
mov
mov
movl
mov
dec
lea
push
mov
inc
inc
push
call
mov
or
jne
mov
dec
push
push
mov
or
lea
push
push
call
mov
or
jne
add
mov
add
inc
lea
push
lea
push
push
push
call
mov
or
je
dec
push
push
push
call
movl
inc
push
push
lea
push
push
call
mov
add
sub
inc
push
push
call
mov
lea
push
push
call
mov
sub
dec
push
push
push
push
call
dec
add
or
movl
inc
movl
add
or
add
add
rol
add
movl
and
add
or
inc
push
pop
sub
not
sub
movl
sub
jne
test
je
dec
seta
sub
dec
leave
ret
push
mov
sub
add
movl
sub
sub
mov
mov
and
sub
test
jne
inc
push
push
call
mov
or
jne
xor
dec
and
mov
xor
test
je
mov
movl
dec
dec
leave
ret
nop
nop
nop
nop
push
mov
sub
movl
sub
push
push
mov
mov
add
mov
call
mov
dec
add
test
je
xor
push
add
mov
inc
ret
movl
add
mov
inc
movl
add
movl
mov
inc
leave
ret
push
mov
sub
mov
movl
or
xchg
movl
xor
movl
sub
add
movl
cmp
jne
movl
mov
dec
push
push
call
mov
or
je
sbb
dec
mov
sub
movl
mov
inc
lea
push
call
mov
or
jne
add
or
mov
add
mov
cmp
jns
dec
rol
lea
push
lea
push
push
call
mov
or
jne
mov
sub
movl
mov
movl
add
push
movl
mov
push
push
pop
movl
mov
sub
call
dec
mov
cmp
jp
and
test
je
or
dec
lea
push
add
mov
sub
push
push
call
mov
or
je
add
dec
rol
and
mov
shr
sub
cmp
jb
add
test
je
mov
mov
inc
mov
sub
mov
inc
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
sub
movl
sbb
add
mov
movl
mov
push
mov
xor
add
add
mov
mov
push
cmp
jbe
sub
mov
mov
movl
mov
mov
mov
push
mov
add
movl
popl
mov
movl
ror
push
pop
push
test
je
dec
inc
movl
mov
push
cmp
je
or
add
dec
xor
cltd
push
mov
mov
test
jne
sub
mov
mov
inc
popl
sub
add
neg
add
push
movl
add
push
pop
or
mov
mov
neg
mov
test
je
not
or
cmp
jg
shr
bswap
mov
movl
mov
test
je
mov
dec
mov
xor
inc
rol
lea
and
add
movl
add
and
movl
sub
mov
not
movl
add
add
inc
cmp
jl
sub
mov
mov
sub
dec
mov
mov
int
mov
test
je
add
dec
push
pop
shr
neg
sub
not
mov
sub
sbb
movl
leave
ret
push
mov
sub
cmp
jl
rol
or
movl
inc
add
add
inc
sbb
mov
sub
add
mov
or
mov
mov
cmp
jns
inc
add
cmp
jae
xchg
sub
and
setg
sub
cmp
jge
add
mov
add
sub
cmp
jle
shr
dec
or
mov
not
shrd
sub
mov
sub
shl
cmp
jle
add
dec
leave
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
mov
cmp
jbe
add
dec
cmp
js
inc
not
mov
mov
mov
mov
add
and
add
movl
and
and
add
inc
rcr
sub
mov
and
not
add
push
mov
mov
add
cmp
jg
add
sub
add
mov
and
mov
and
dec
mov
sub
lea
cmp
jge
bsr
dec
add
mov
sub
sub
lods
add
or
mov
mov
cmp
jnp
neg
sub
mov
sub
mov
xor
inc
rol
inc
sub
cmp
js
dec
xor
and
mov
cltd
ror
test
je
dec
mov
sub
movl
test
je
sub
dec
xor
mov
rol
mov
lea
test
jne
xor
add
and
add
xor
xor
add
sub
add
add
movl
mov
add
movl
sub
rol
test
je
and
inc
add
add
movl
inc
sub
and
mov
add
movl
and
add
sub
and
xor
movl
test
je
dec
xor
and
test
jne
not
and
test
je
and
dec
sub
and
bsr
xor
movl
mov
and
cmp
ja
mov
inc
mov
inc
xor
test
je
dec
sub
sub
cmp
jns
xchg
and
xor
movl
mov
add
movl
xchg
xor
lea
add
mov
and
xchg
add
sub
mov
and
xchg
dec
sub
dec
mov
rcl
cmp
jae
inc
movl
add
xor
test
jne
mov
mov
add
mov
mov
mov
test
jne
xchg
sub
sub
add
neg
dec
inc
xor
add
cmp
jl
xor
mov
test
jne
sub
inc
cmp
jle
add
inc
rol
movl
add
sub
mov
xor
inc
stos
sub
and
movl
not
add
mov
movl
dec
cmp
jne
mov
or
cmp
jb
inc
xor
cmp
jge
mov
inc
lea
sub
mov
mov
sub
add
mov
dec
pop
add
test
je
inc
cmp
je
add
dec
dec
pop
leave
ret
push
mov
sub
sub
sub
mov
test
jne
mov
test
je
mov
lea
add
movl
mov
mov
mov
movl
add
push
movl
mov
push
mov
mov
sub
call
mov
or
je
and
sub
mov
cmp
je
cmp
jae
xor
xor
dec
bswap
test
jne
inc
mov
lea
test
je
and
and
test
jne
add
dec
sub
movl
movl
sub
movl
movl
xchg
movl
or
and
mov
mov
add
push
mov
movl
add
mov
call
test
jne
sub
cmp
jb
setne
lea
add
neg
cmp
jge
dec
add
lea
mov
add
movl
movl
mov
mov
add
push
xor
push
mov
mov
mov
mov
sub
call
mov
cmp
js
and
and
neg
add
add
and
mov
add
sub
cmp
js
inc
mov
and
xor
sub
add
movl
add
sub
movl
xor
and
push
pop
push
mov
push
mov
add
push
mov
mov
push
mov
mov
add
push
movl
mov
push
push
pop
movl
add
pushl
popl
mov
call
test
jne
rcr
add
and
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pop
push
push
pop
movl
sub
call
mov
inc
cltd
push
lea
push
push
lea
push
call
mov
dec
push
push
push
lea
push
call
mov
sub
push
push
push
call
mov
or
jne
or
dec
sub
mov
dec
push
push
push
call
mov
or
jne
sub
sub
push
inc
push
call
mov
or
je
dec
xchg
push
pop
mov
add
push
mov
mov
sub
call
mov
or
jne
and
push
push
call
mov
or
je
add
movl
mov
push
mov
movl
add
push
mov
mov
mov
add
push
mov
mov
add
pushl
popl
mov
call
test
jne
cwtl
mov
mov
movl
inc
lea
push
lea
push
push
call
mov
or
jne
dec
push
lea
push
push
call
mov
or
jne
mov
inc
mov
mov
movl
add
push
xor
push
mov
movl
sub
call
lea
push
lea
push
add
push
push
call
mov
or
je
dec
push
dec
lea
push
dec
inc
dec
push
push
call
mov
movl
mov
push
mov
mov
add
push
mov
mov
movl
add
push
movl
mov
add
pushl
pop
mov
call
mov
or
je
shr
cwtl
or
sub
lea
push
push
mov
dec
push
push
call
mov
or
je
setp
inc
mov
mov
push
push
pop
mov
add
mov
call
test
je
mov
mov
add
push
movl
mov
sub
call
mov
or
jne
neg
mov
add
movl
mov
movl
sub
call
mov
or
jne
xor
dec
add
add
mov
push
push
push
call
mov
or
jne
dec
inc
or
add
inc
push
mov
push
mov
push
call
sub
add
inc
push
mov
inc
dec
push
call
mov
or
je
add
lea
push
push
lea
push
push
lea
push
dec
push
mov
add
push
mov
sub
call
movl
dec
or
mov
mov
add
mov
call
test
jne
movl
mov
add
push
movl
mov
movl
sub
call
test
je
or
lea
push
push
push
call
mov
mov
push
push
pop
push
push
pop
push
mov
mov
add
pushl
pop
mov
call
lea
push
call
mov
or
jne
dec
dec
sub
inc
inc
movl
mov
inc
inc
push
call
mov
or
jne
or
xchg
push
push
push
call
mov
mov
push
mov
mov
movl
add
pushl
popl
mov
call
test
je
mov
or
add
push
lea
push
lea
push
push
call
mov
or
push
call
mov
or
jne
add
add
push
sub
push
call
add
dec
add
push
lea
push
push
sub
mov
push
push
push
mov
sub
call
test
je
push
movl
mov
push
mov
mov
push
push
pop
mov
mov
sub
call
mov
or
je
mov
cltd
lea
push
lea
push
push
call
mov
mov
mov
inc
push
push
push
lea
push
call
mov
or
jne
mov
inc
push
pop
mov
add
push
mov
add
pushl
popl
mov
call
mov
or
je
dec
add
mov
sub
dec
push
add
dec
push
push
call
mov
or
jne
mov
mov
mov
push
push
pop
movl
mov
sub
call
test
je
inc
mov
dec
mov
sub
sub
mov
add
push
push
sub
mov
push
mov
dec
push
push
mov
sub
call
inc
movl
sub
inc
or
lea
push
mov
add
or
push
push
call
push
push
call
mov
add
push
call
mov
or
jne
inc
pop
mov
inc
inc
lea
push
mov
inc
dec
lea
push
push
mov
add
call
push
push
movl
mov
add
push
movl
mov
push
movl
mov
movl
add
mov
call
test
je
mov
lea
push
push
call
lea
push
mov
add
push
sub
sub
dec
push
call
mov
or
jne
mov
inc
add
sub
push
push
call
mov
mov
push
mov
movl
add
mov
call
mov
or
je
mov
mov
sub
dec
mov
sub
inc
dec
push
push
call
mov
push
push
lea
push
push
call
mov
or
jne
sub
dec
dec
dec
lea
push
call
mov
or
je
mov
dec
ret
nop
nop
nop
nop
nop
nop
add
repz
xchg
loop
jge
jecxz
nop
pop
scas
mov
or
loop
mov
xchg
popf
lods
mov
xchg
or
jne
xchg
sti
mov
or
jne
mov
jne,pt
pop
int
out
inc
aaa
mov
shrl
mov
aaa
out
pop
fisttpll
or
hlt
mov
imul
pop
pop
mov
xchg
inc
repz
ljmp
or
fsts
mov
pop
push
xor
ret
loop
sbbl
or
icebp
cmp
dec
adc
ret
jne
xcrypt-cbc
cmpsl
xchg
repz
dec
std
mov
ret
jne
mov
jbe
add
repnz
mov
stos
add
sub
mov
or
iret
jp
inc
loopne
pop
sarl
movsb
adc
sub
test
or
and
imul
clc
mov
push
imul
mov
push
fists
push
fistpll
inc
fbstp
jns
js
pop
jne
pop
jl
cmpsb
add
aaa
jae
in
fstl
jo
nop
mov
lahf
adc
sbb
inc
xor
cmpsb
cwtl
fmul
in
pop
shll
xor
xor
push
testb
add
int
cmp
push
idivb
and
dec
dec
adc
loopne
nop
mov
mov
lcall
imul
dec
sbb
inc
mov
hlt
lds
scas
pop
cld
in
in
mov
icebp
adcl
pop
dec
dec
call
int
sub
dec
xchg
lret
out
xor
mov
ljmp
xchg
int
push
notb
push
imul
icebp
jb
jg
and
adc
add
dec
test
mov
movsb
ret
pop
in
inc
push
mov
pop
dec
jns
adc
adc
and
daa
int3
pop
out
inc
jns
pop
movsb
adc
adc
lods
imul
je
xorb
les
imul
fcompl
lret
insb
cs
or
int3
fs
stc
jl
and
pop
jmp
cmp
pop
mov
inc
push
out
ret
popa
test
cmp
daa
pop
mov
mov
push
add
xor
push
idivb
and
dec
dec
adc
loopne
nop
mov
mov
mov
icebp
xor
mov
mov
lods
dec
or
sub
test
or
aad
push
nop
aad
jmp
das
sarl
adc
jns
aad
imul
leave
xchg
jb
xchg
dec
out
inc
mov
xor
sarl
movsb
adc
inc
fstpt
cmp
xor
int
pop
out
inc
mov
xor
sarl
movsb
adc
loope
jl
add
shr
nop
mov
inc
fbstp
stc
pop
xchg
lahf
mov
imul
xor
pop
movsb
adc
pop
xchg
jns
int3
push
pop
loop
or
adc
das
leave
xchg
jb
xchg
dec
out
out
add
adc
sti
dec
jle
cltd
into
pop
out
cmp
int3
pop
out
push
adc
mov
cmp
insl
test
mov
loope
imul
mov
divb
mov
mov
aaa
jae
fistl
notl
xchg
adc
xor
push
testb
add
cmp
xchg
out
sub
mov
or
mov
push
mov
js
mov
jbe
fistps
imul
int3
std
lea
mov
test
imul
sbb
sbb
sarl
movsb
adc
sub
test
or
and
inc
out
sub
imul
cld
dec
dec
adc
loopne
nop
mov
mov
mov
add
stc
pop
pop
xor
push
idivb
and
dec
dec
adc
loopne
nop
mov
mov
dec
je
imul
int3
jbe
and
push
divl
mov
sub
add
jle
push
fistpll
stc
iret
dec
sub
imul
sti
inc
mov
hlt
lds
scas
pop
xchg
or
loop
jle
sbb
mov
imul
int3
xor
scas
xor
int3
push
pop
in
push
pop
mov
sub
mov
mov
xor
imul
sarb
hlt
imul
mov
imul
or
dec
bound
movsb
adc
inc
sarl
xor
mov
inc
push
outsb
dec
lea
mov
int3
pop
mov
push
xor
xchg
mov
inc
jbe
mov
leave
jns
xchg
inc
pop
push
jg
or
mov
xor
mov
adc
mov
mov
call
adc
pop
xchg
or
or
pop
pop
push
or
mov
inc
push
inc
or
stc
pusha
xchg
mov
fldl
cmp
mov
ljmp
adc
xchg
imul
lcall
dec
mov
jae
in
fstl
jo
nop
mov
lahf
adc
sbb
inc
pop
aad
ljmp
std
in
xchg
push
pop
out
cmp
adc
jns
aad
mov
shrb
imul
int3
ljmp
adc
in
aad
xchg
inc
mov
repz
aas
push
mov
adc
jbe
mov
lds
iret
jp
aad
inc
add
jns
or
sub
test
or
int3
add
mov
bound
movsb
adc
dec
icebp
cltd
test
cmp
add
mov
std
adc
outsb
pop
ror
mov
xchg
movsl
or
daa
xchg
test
das
shlb
ficoml
adc
ljmp
int3
pop
out
cmp
xor
adc
sub
sbb
mov
adc
inc
inc
std
movsl
cld
adc
out
jp
int3
xchg
dec
adc
fcomi
sbb
inc
sarl
pop
jmp
push
push
stos
push
aad
orl
lea
out
jns
daa
pop
dec
mulb
inc
std
lods
pop
mov
inc
jns
lcall
adc
out
push
jge
scas
adc
cli
push
imul
in
dec
repz
stc
imul
ror
dec
jae
imul
mov
cmc
iret
data16
lcall
push
loope
pop
cmp
mov
ret
jne
mov
jns
mul
lea
lods
add
xor
add
xor
add
and
bound
push
std
push
scas
xor
icebp
inc
inc
jle
movsl
push
imul
xorb
repz
sbb
mov
inc
fbstp
inc
int
sub
sbb
pop
add
xchg
mov
fsubrs
sarb
das
push
clc
loope
outsl
and
fwait
cmpsl
dec
fst
pushf
fldcw
aam
shl
sub
nop
stos
cs
mov
sbb
adc
leave
jl
stos
xchg
icebp
imul
fsubrs
insl
sbb
hlt
mov
push
imul
dec
and
jl
xchg
scas
jbe
xor
dec
lods
add
push
jl
mov
xor
outsb
mov
sbb
add
and
jnp
jno
lds
int3
or
cmc
inc
leave
jp
imul
mov
imul
cwtl
sarl
push
in
aas
push
orb
lret
inc
das
jecxz
xacquire
fmul
insl
imul
inc
push
mov
popf
rcll
xor
arpl
sub
sub
xor
pop
stos
cld
lea
testl
repz
imul
pop
sti
das
cmc
dec
sbb
inc
mov
rorl
orl
outsb
aam
mov
imul
sub
jno
mov
ret
cmp
or
mov
dec
mov
mov
add
mov
or
in
out
dec
out
movsl
or
imul
movsl
bound
imul
cmp
mov
or
xorb
xchg
mov
jmp
push
imul
loop
mov
out
cwtl
add
mov
out
push
dec
out
mov
sahf
mov
push
push
pop
out
adc
xchg
cltd
jge
sbb
cwtl
lea
fisttps
mov
imul
cmp
adc
cwtl
aaa
imul
inc
adc
inc
and
mov
mov
and
in
dec
adc
rorb
sub
xor
cwtl
sub
mov
sub
inc
out
push
jns
adc
mov
std
cmp
xor
repz
lods
movsl
dec
push
imul
and
mov
dec
out
addr16
pop
jge
xor
out
push
cwtl
je
dec
out
loop
adc
je
push
and
mov
int3
inc
and
sub
repnz
test
cs
std
add
repnz
and
jl
fidivrl
gs
out
adc
cmp
mull
cld
adc
popf
xlat
movsl
ds
imul
mov
mov
xchg
popf
mov
dec
fcoml
shlb
test
sbb
cltd
xorb
adc
mov
mov
push
mov
cmp
xor
mov
aas
mov
xor
push
stc
ret
sbb
push
std
sbb
xchg
das
pop
pusha
cld
sbb
nop
cmp
in
mov
test
jnp
repz
nop
dec
dec
jle
pop
mov
adc
dec
xchg
sahf
imul
lea
shrl
stos
jnp
idivl
push
cmp
in
push
cmp
and
adc
push
dec
clc
mov
out
push
and
fs
push
lea
adc
fs
aaa
fs
cmpsl
and
mov
lds
bound
loop
pop
js
icebp
dec
xchg
adc
xor
sahf
xchg
cmp
out
adc
cmp
and
pushf
jmp
xor
scas
rcrl
pop
aad
cwtl
sarw
jbe
cld
push
add
add
jp
or
cmp
xor
iret
mov
lret
fidivrs
inc
shl
repz
fldl2e
sahf
fisttps
xchg
inc
jp
xor
into
movsl
fs
mov
xchg
push
clc
cmp
int
repz
lock
ret
and
cmp
js
clc
bound
fidivl
adc
out
add
in
dec
data16
xor
shll
xor
aad
cwtl
sub
fcompl
jp
jmp
add
add
add
add
add
test
jne
sub
test
je
add
and
and
add
add
sub
sbb
add
and
add
sub
test
jne
inc
and
and
add
xchg
xchg
and
rol
dec
neg
dec
lret
les
jp
xchg
inc
jl
xchg
dec
adc
ljmp
out
jmp
cmp
xchg
out
fisttpll
lds
loope
xor
cltd
loop
pop
lret
scas
jmp
or
out
adc
mov
bound
sub
bound
aad
and
cld
pusha
inc
fs
or
loope
leave
cmp
fsubl
xor
scas
int
popf
aam
movsl
shl
xor
xchg
aad
xchg
leave
sub
or
outsb
pop
fidivrs
push
lea
sbb
push
xor
repz
cmp
fbstp
ss
test
cwtl
cmp
nop
aad
adc
mov
bound
aad
daa
nop
add
adc
adc
std
movsl
cmp
xlat
in
jmp
sub
sub
lret
add
ds
out
add
sub
sub
je
xor
sub
and
mov
or
add
sub
cmp
je
and
or
and
cmp
ja
ror
inc
test
je
add
inc
bswap
rol
cmp
stos
cmc
fs
or
call
cmp
and
add
idiv
test
loope
fildl
les
pop
in
push
pusha
fs
lret
mov
cmp
mov
cmp
or
jo
fisubl
xlat
add
or
stos
cmp
jl
add
mov
cmp
lea
cmpsl
leave
rorb
cld
lea
ret
sbb
ret
jmp
aad
mov
or
fcomps
test
cld
cltd
ljmp
mov
stc
sub
sub
ret
ret
loope
lds
xchg
sub
fistl
sub
and
int
das
movsb
sti
sub
fidivs
inc
int
lret
inc
js
sar
cltd
cmpsb
sahf
adc
test
sbb
aam
ss
sub
iret
cld
sub
mov
pushf
or
into
jmp
add
add
add
rcr
bswap
xor
movsb
flds
loopne
jb
loopne
add
call
bound
loope
ds
in
fmul
push
and
in
hlt
fcmovnb
rcll
hlt
or
mov
add
cmpsl
out
movl
int3
ret
push
jl
add
in
and
in
shrb
push
bound
dec
popf
hlt
or
xchg
sub
lods
shll
fnstenv
fmuls
movsl
data16
pusha
test
jmp
sub
sahf
push
aaa
xchg
xchg
push
add
test
je
xor
test
jne
add
add
add
xor
dec
cmp
je
dec
sub
sub
cmp
jl
add
add
and
sub
or
mov
dec
test
je
mov
test
jne
not
sub
or
cmp
jbe
xchg
dec
mov
movzbl
sub
test
xor
jl
movsl
hlt
mov
add
ljmp
lea
cmp
or
push
test
pop
mov
cmp
and
loop
cli
cmp
mov
cmp
lock
sub
push
leave
ss
fstpl
aad
cmp
js
pusha
or
in
xchg
sub
lock
fldl
pushf
push
loope
mov
cld
sub
idiv
cmp
repnz
lret
in
roll
add
pushf
sub
fwait
enter
aam
push
adc
icebp
add
shl
xor
into
pushf
or
ficompl
adc
out
cli
js
add
cmc
push
loope
lcall
out
pop
and
cwtl
sub
sub
pusha
jp
and
fs
push
out
stc
insb
xor
cld
mov
inc
sar
dec
in
fcomps
dec
out
fstpl
cmp
xchg
pusha
daa
les
cld
pmaxub
cmp
cli
sahf
pop
jl
or
addl
int
and
cmp
iret
lods
lcall
ljmp
repz
lret
push
xchg
lcall
mov
int
shrl
les
xchg
call
sahf
xlat
mov
sarl
mov
repz
icebp
xchg
xor
cmp
cmp
jp
mov
and
sub
cmp
jb
sub
dec
cmp
jl
and
dec
sub
sub
xor
test
jne
xchg
and
add
not
cmp
jb
add
inc
not
add
add
add
sub
and
add
and
shl
add
add
dec
xor
rcl
add
aaa
shl
loope
jecxz
loope
bound
mov
add
movsl
adc
rcr
and
cwtl
jbe
pushf
cwtl
pop
xchg
xor
mov
xor
icebp
loop
push
and
push
std
sbb
ret
jmp
xor
add
vpblendmq
fnstenv
jmp
hlt
cwtl
hlt
out
cmp
fucom
pusha
or
fdivrp
jbe
xchg
sahf
add
aam
jbe
int3
ret
sub
mov
int
bound
cmp
nop
shrl
cmpsb
xchg
cmp
fcmove
imul
add
or
xor
sub
add
add
and
cmp
jbe
cmp
jnp
sub
inc
and
add
or
add
cmp
jge
inc
and
add
not
neg
push
data16
add
xor
aad
sub
add
cmp
jl
or
and
and
dec
sub
add
rcl
cmp
jbe
not
cmp
jle
mov
neg
not
sub
and
add
add
test
jne
add
inc
and
xchg
ss
mov
cmpsb
out
jmp
movsb
cmp
push
sub
jmp
loop
pop
das
or
xor
cwtl
push
aaa
cld
xchg
push
roll
dec
out
idiv
lds
rcll
xor
int
sub
shll
add
int
xor
cli
or
push
add
fcmovu
or
mov
lds
cmp
mov
insb
loope
sahf
sbb
mov
clc
fs
cmp
faddp
push
int
frstor
or
rcr
aad
xlat
push
nop
sub
aam
add
mov
notl
popf
lcall
mov
and
lock
je
sub
inc
and
sub
and
test
je
xor
dec
dec
add
cmp
jns
and
mov
or
cmp
jae
xchg
or
and
inc
or
add
cli
mov
or
push
xlat
mov
in
add
cmp
push
sub
mov
mov
add
movsb
aad
cmp
mov
xchg
push
adc
out
or
cmp
jne
dec
ror
test
je
dec
and
cmp
jp
add
sub
add
dec
or
add
sub
and
and
test
jne
cltd
sub
xor
add
sub
dec
cmp
jl
xor
or
add
cmp
jge
sub
test
jne
add
and
and
add
lea
sets
