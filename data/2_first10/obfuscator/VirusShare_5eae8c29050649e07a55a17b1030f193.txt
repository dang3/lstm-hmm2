icebp
cmp
sub
inc
imul
cmp
ret
push
dec
out
shlb
aam
inc
mulb
jmp
pop
jg
iret
lea
nop
sbb
jns
in
dec
dec
push
in
dec
clc
dec
lock
cli
jg,pt
xor
mov
enter
arpl
aam
pusha
lock
ja
mov
sub
mov
arpl
in
mov
mov
repnz
sub
adc
inc
int3
movsl
fsts
inc
or
jno
xchg
in
andl
xor
push
mov
call
xchg
enter
daa
inc
mov
ja
push
sub
mov
fwait
push
cld
outsb
add
pop
loop
or
jle
mov
add
jmp
jge
inc
cmpsl
push
xchg
repnz
xor
into
pop
fs
mov
xchg
push
test
in
in
push
scas
fs
sub
adc
add
push
push
lea
je
push
adc
movb
pushf
lea
jmp
pusha
jmp
cmp
mov
rcr
btr
pusha
mov
bts
ror
add
neg
shr
shl
mov
bsr
sub
movzbw
dec
add
jmp
lea
jb
bt
stc
cmc
cmp
push
lea
jae
rcl
rcl
mov
mov
or
mov
pushf
mov
pusha
pusha
clc
movb
xor
cmc
movb
pushl
repnz
jmp
mov
jmp
movl
movl
mov
pushf
pusha
pushf
lea
jmp
dec
je
mov
cmc
bt
cmp
jle
pushf
pushf
lea
ja
pusha
lea
lea
mov
movsbw
mov
pop
xchg
setb
pusha
mov
pushl
pop
mov
lea
jp
pushf
pushf
pushf
mov
push
movw
pushf
call
lea
jae
pusha
pusha
pushl
lea
jne
je
push
stos
pushf
pusha
pushf
lea
jmp
pushf
jmp
mov
pushf
not
pop
mov
pop
pushf
pushl
ret
jne
xchg
xchg
cmpb
or
fildl
addr16
cmp
sub
out
dec
mov
sub
fwait
ret
ljmp
inc
lods
cmpsl
mov
push
pushf
jge
xor
lds
roll
and
sbbl
add
aam
xadd
mov
bts
shr
btc
movzbw
mov
bt
jmp
lea
ret
jmp
add
inc
js
je
jb
arpl
jae
call
push
pusha
adc
call
cld
pop
jae
cmpb
addb
push
arpl
movsb
add
and
sub
add
dec
inc
fsubl
cld
jmp
or
out
inc
test
jl
jl
mov
sti
jg
fdivp
mov
mov
les
xchg
xchg
pop
pop
push
lods
clc
les
fs
mov
or
lcall
out
jg
outsl
xorb
pop
jmp
push
pop
or
into
mov
sbb
or
jmp
je
inc
fisttpl
ret
xor
jp
rcl
insl
leave
shl
je
fildll
adc
insb
push
pop
add
out
sbb
jb
and
add
xchg
inc
add
fucomi
xchg
cmpb
pop
push
mov
iret
aam
je
fbstp
pusha
js
push
pop
lods
test
pusha
pushf
mov
ja
dec
movsl
mov
mov
adc
adc
mov
mov
xchg
ret
and
inc
in
aaa
lods
sarb
sbb
rorb
mov
xor
mov
shl
filds
jns
fstp
add
out
sbb
loop
push
loop
cs
aad
or
shr
outsl
mov
in
adc
jo
sbb
mov
lock
xor
mov
in
dec
orl
lea
sbb
roll
lahf
pop
cmpsl
shl
ret
ljmp
dec
das
mov
or
mov
inc
mov
fwait
mov
ud2
add
add
popa
insb
inc
insb
insb
outsl
arpl
lea
jns
jbe
xor
pusha
clc
btc
mov
pushl
add
pushf
or
shl
ror
mov
stc
add
and
cmc
movl
shrd
shl
rcr
mov
sub
cmc
test
call
mov
cmp
sbb
cmp
sbb
xchg
int
cld
mov
aam
jbe
sbb
roll
pop
xlat
sbb
cmp
xor
jl
out
lea
push
setp
popa
adcl
addb
mov
cmp
loope
jb
orl
jae
adc
and
mov
inc
sbb
and
add
pop
mov
loop
sbb
lcall
imul
xorl
inc
mov
and
sub
or
test
popf
mov
int
loop
dec
insl
xor
shll
mov
lds
add
mov
or
add
dec
repnz
pop
std
sub
mov
sub
inc
pop
adc
in
int
mov
jne
les
mov
mov
pushf
ljmp
cli
fwait
scas
mov
cmp
sbb
pusha
sbb
lcall
mov
test
and
and
in
push
inc
int
and
sahf
cltd
push
xchg
rcl
inc
jb
and
mov
add
mov
or
cmp
push
scas
adc
inc
inc
sub
jns
push
push
push
sub
pop
aas
mov
adc
nop
mov
test
sbb
sahf
jecxz
jne
mov
repz
daa
xchg
sbb
adc
mov
sti
add
rcr
test
push
mov
test
cltd
fucom
imul
pop
dec
push
jmp
xchg
je
scas
add
imul
lods
enter
into
test
test
sbb
lea
popa
mov
inc
cmp
push
inc
inc
push
or
mov
pop
jno
and
and
ficoms
popa
aas
mov
addb
push
out
jae
or
jp
popa
xorb
fisubl
jmp
stc
jno
unpckhps
or
add
je
movsl
aas
inc
sub
outsb
ret
hlt
mov
or
popf
jns
adc
int
add
push
rcrb
das
icebp
mov
push
dec
scas
jbe
or
add
cmc
leave
push
mov
cmp
cmp
and
lods
test
popa
ret
shrl
xchg
or
fcmovb
push
and
mov
jnp
pop
mov
push
shll
xor
or
outsb
push
divl
sub
iret
push
jecxz
mov
fisubl
or
movsb
push
adc
sub
rcll
mov
movsb
mov
stos
xor
aaa
jmp
jns
xor
int
add
add
inc
out
sub
or
data16
sbb
push
dec
movsl
xor
xor
adc
inc
lods
or
call
mov
add
mov
mov
pop
and
and
dec
or
iret
adc
pop
lds
test
loope
mov
jg
push
cltd
push
scas
lret
mov
xor
mov
sbb
daa
jp
stos
adc
loop
ficompl
add
fisttpl
and
hlt
adc
aad
loopne
add
or
cmp
sbb
and
or
jns
dec
jecxz
or
jnp
or
mov
mov
testl
test
cli
jnp
cmpsl
push
inc
jnp
and
adc
popf
sbb
imul
push
out
push
xchg
in
imul
mov
mov
jne,pt
push
ja
flds
fbld
jo,pt
and
xchg
bound
insb
roll
push
sahf
dec
pop
fildll
das
cmpsl
push
jmp
xchg
sub
pop
test
push
out
xchg
jp
cwtl
ret
jle
shrb
xor
fistl
mov
push
mov
pop
outsb
xchg
lret
mov
and
cltd
in
xlat
rorl
lahf
mov
add
xor
shl
cmp
lds
in
sub
insb
xor
cs
and
fdivrs
pop
adc
add
inc
es
dec
ret
xchg
sbbb
mov
jnp
cmpb
sub
std
add
out
or
jge
jg
push
pop
fistps
or
add
jno
add
add
push
rcrb
cli
sbb
pop
sahf
cwtl
pop
out
in
out
pop
jnp
and
mov
aas
xchg
adc
xchg
test
das
xchg
xchg
sbb
sarl
push
sbb
dec
call
cmp
and
cmp
sbb
in
xor
aas
adc
push
dec
mov
xlat
inc
mov
insl
sbb
cmp
test
loopne
mov
sub
xchg
xchg
cli
shlb
mov
stos
add
mov
mov
sti
mov
sub
enter
adc
sbbl
js
sbb
popa
push
cmp
sbbb
mov
jnp
jne
cmp
sub
push
ljmp
inc
stos
or
xchg
mov
es
popa
or
push
push
add
mov
pop
pop
sbb
adc
adc
pop
jae
mov
pushf
pop
cmpsl
adc
push
aad
fistl
outsb
cwtl
mov
aaa
shr
notrack
push
out
or
test
pop
push
loope
push
and
xor
add
or
daa
jns
loope
xorl
in
push
sahf
test
mov
push
push
and
mov
cltd
js
popa
loope
mov
and
jmp
xor
mov
jnp
inc
xlat
add
and
adc
mov
test
inc
popa
xor
cmp
jecxz
push
mov
and
or
adc
or
cld
loopne
and
fnstcw
arpl
or
or
ret
scas
xchg
dec
sub
imul
lea
add
mov
adc
movsb
xchg
sub
sbb
jne
cmpsb
add
lahf
or
push
pop
xchg
sub
inc
in
xlat
dec
ds
pop
loopne
orl
and
stos
dec
mov
add
mov
push
out
lahf
nop
movsl
xchg
testl
mov
into
mov
mov
unpckhps
xchg
jmp
adc
out
adcb
dec
adc
fcomps
ret
in
pop
pop
es
adc
adc
ljmp
and
sbb
mov
pop
or
mov
ds
sub
and
xor
call
pop
mov
pop
add
sbbl
cmp
mov
cmp
or
lds
icebp
jae
icebp
cmp
cli
rcrl
push
outsl
sub
clc
and
fsts
cmp
push
mov
and
push
and
out
int3
in
loop
in
dec
push
sub
xchg
adc
loope
movl
sahf
push
repz
cmp
loop
jns
mov
ret
fdivrs
xchg
sub
push
xchg
adc
cmp
jnp
pop
or
imul
outsl
pop
sbb
sbb
inc
push
mov
mov
int3
in
clc
fldt
jle
or
mov
inc
aam
ljmp
mov
stos
add
rep
lds
rcl
packssdw
ss
xchg
cmp
cmpsl
sbb
cmp
daa
sbb
orb
insb
dec
leave
stc
jo
je
inc
lods
jle
ret
sbb
pop
mov
aam
mov
pop
adc
cli
shlb
stc
mov
addr16
or
mov
inc
jg
shll
adc
jp
arpl
loopne
and
pusha
push
cltd
sub
stos
sbbb
pop
and
jle
adc
and
addb
stc
push
xlat
stos
xchg
xchg
xchg
or
mov
in
push
call
sub
rcrl
dec
iret
rorb
leave
sub
repz
xchg
ja
jle
loope
fs
dec
adc
pop
popf
and
orl
add
sbb
adc
mov
xor
insl
pop
nop
mov
addr16
in
dec
icebp
or
push
or
fimull
dec
ret
inc
add
push
jno
inc
xchg
loop
sti
in
rol
push
mov
out
or
add
insb
call
xchg
and
int3
jmp
jae
mov
inc
push
mov
aad
dec
popf
push
pop
or
xor
dec
lods
ret
add
hlt
mov
ret
sbb
lea
pusha
push
pusha
mov
int3
mov
into
xchg
mov
in
add
adc
jno
mov
repnz
imul
mov
push
repnz
jb
lahf
cmp
fildl
fidivs
test
clc
inc
lods
mov
mov
and
and
adcl
push
push
jae
repz
mov
ljmp
add
sub
mov
xchg
arpl
push
icebp
cli
add
xchg
fbstp
popf
sbb
aaa
outsb
clc
insb
add
sti
clc
adcl
and
xor
test
pop
xchg
movsb
add
orl
pop
lcall
iret
or
add
imul
push
and
inc
test
into
jmp
out
sub
movsl
sub
pop
out
mov
jp
jae
push
add
inc
mov
xchg
jne
adc
js
xlat
pop
push
into
mov
mov
and
mov
test
adc
cli
stos
mov
add
das
jle
xchg
repz
fwait
inc
inc
sbb
or
pop
jo
add
int3
test
jmp
fst
jnp
mov
add
mov
mov
cmpsb
shlb
xorl
hlt
cmpl
test
test
sbbl
inc
add
lret
ds
or
inc
and
nop
mov
adc
or
in
or
pop
adc
dec
or
inc
push
stos
adc
inc
inc
out
and
sub
in
fisubl
mov
inc
add
orb
push
test
inc
sbb
dec
aad
loop
in
and
mov
xlat
pop
or
inc
mov
sbb
pop
mov
mov
mov
jbe
cmp
ret
jmp
push
xchg
push
add
aaa
push
xor
and
nop
cmpsb
test
fisttps
and
push
bound
sarl
pop
add
int3
add
cmpb
and
ljmp
mov
test
xchg
leave
mov
and
shr
outsl
les
pop
xchg
mov
cltd
shr
ds
xchg
push
cmp
sub
mov
lock
ss
xchg
sub
gs
add
cld
in
or
xchg
jmp
pusha
bound
mov
pop
pop
es
aad
scas
addb
jmp
call
add
scas
push
fstpt
cld
in
ficomps
imul
inc
push
dec
into
imul
mov
out
xchg
push
xchg
and
xor
imul
loopne
add
adc
mov
pop
xchg
aad
or
push
int
lcall
repnz
push
and
idivb
pop
pushf
or
iret
sub
xor
add
inc
loope
xor
stc
ja
scas
adc
mov
pusha
mov
and
cmovbe
lea
popa
mov
or
je
test
jbe
cltd
lds
ret
loope
into
jge
pop
getsec
gs
int3
fisubrs
push
add
jno
and
test
lea
mov
adc
add
sbb
mov
cmpsb
mov
and
rorl
jns
push
imul
leave
es
fldenv
sti
test
push
outsl
sbb
and
lods
testb
les
daa
sbb
cmp
add
ja
test
cmp
lahf
xchg
cmp
adc
or
scas
inc
add
faddl
addb
stos
stos
add
pop
int3
inc
sbb
xchg
sbb
add
sti
xlat
aas
icebp
out
arpl
lods
mov
fisubrs
shl
rclb
dec
add
icebp
cwtl
pop
or
call
outsb
mov
pop
push
sbb
fstl
jne
lret
add
gs
mov
in
adc
inc
ret
cmpsb
stos
andl
jmp
repz
pop
xlat
and
pop
add
xchg
icebp
pop
adc
sub
pop
mov
push
xor
test
mov
cltd
repz
lret
ljmp
jb
xchg
es
xlat
xor
inc
inc
mov
loop
lret
test
add
out
mov
xchg
or
popa
or
daa
push
jb
adc
push
in
jbe
or
push
xchg
sub
addr16
ret
push
cmp
add
int3
cmpsb
push
xchg
push
add
pop
out
frstor
adc
push
in
lret
push
push
mov
lret
sub
imul
xchg
and
adc
push
cmp
adc
push
imul
jno
and
adc
sub
test
decb
or
scas
lds
jecxz
inc
pop
mov
bound
test
pop
xchg
rorb
mov
icebp
xorl
fadd
movsb
sbb
mov
andl
icebp
inc
push
add
push
pop
xor
jle
xchg
push
jge
adc
je
inc
or
push
xchg
cmp
sub
fadds
in
add
jp
sahf
cltd
dec
add
xorl
sbb
fsubrl
scas
pop
arpl
dec
pop
loop
fbld
icebp
fsubs
add
ret
xor
push
ja
sub
xchg
sub
int
mov
mov
lds
push
addb
inc
inc
inc
push
lods
insb
adc
stc
sbbb
int3
push
in
fistps
xchg
mov
jb
cmp
daa
inc
or
loop
mov
sbb
push
arpl
xchg
sbb
add
int3
pop
dec
mov
ret
dec
nop
test
stos
mov
andb
mov
mov
add
ficoml
fstps
adc
jge
pop
loopne
ffreep
out
push
jp
jb
lahf
fdivl
dec
push
cmpsl
nop
mov
jp
adc
xchg
mov
subl
hlt
add
mov
add
jns
add
and
loope
into
int3
dec
outsl
jne
sub
or
jne
jnp
cmp
dec
mov
xchg
lds
sbb
push
ret
cmp
lods
push
pop
adc
int
or
arpl
xchg
inc
push
or
jb
inc
and
mov
ds
adc
sbb
mov
jg
call
ds
out
xor
jp
les
fldenv
mov
mov
dec
push
and
sub
sub
inc
mov
xor
jg
and
cmp
dec
xchg
mov
fcomi
jo
lock
push
dec
loopne
push
pop
leave
or
and
sbb
add
fistpll
push
push
dec
or
pusha
dec
daa
aam
push
pop
rcrb
xchg
mov
mov
cmc
pop
inc
sub
cmp
or
arpl
sub
stos
sub
jecxz
repnz
xor
add
daa
adc
or
add
sbb
fmulp
cmp
or
xchg
cli
xchg
out
adc
push
and
insl
sub
sbb
cmp
shrl
add
push
or
dec
or
rcll
orb
or
cld
lea
orb
add
or
push
mov
push
sub
sahf
push
imul
or
adc
test
adc
cmp
inc
mov
loope
adc
adc
or
in
add
sub
lcall
dec
or
ret
or
xchg
sub
cmp
or
insl
mov
adcl
push
xchg
or
pop
inc
adc
or
dec
mov
subl
adc
lret
mov
sbbb
stos
push
testb
push
cwtl
push
test
xchg
add
or
stos
push
mov
cmpsl
push
addr16
or
mov
sbb
push
add
push
push
push
lea
lahf
dec
mov
nop
sub
push
or
xchg
sbb
sahf
pop
cmpsb
or
mov
lea
je
test
xchg
or
das
adc
mov
cmp
adc
push
add
mov
lea
add
mov
sbb
push
xchg
stos
or
pop
adc
cmp
or
lahf
or
mov
cmp
or
cwtl
cmp
or
push
sub
idivl
jge
xchg
subl
mov
jnp
xchg
inc
nop
dec
xchg
lea
adc
jb
and
mov
add
xchg
jb
or
xchg
mov
pop
add
push
push
add
adc
or
adc
xchg
sbb
incl
jo
int3
adc
int3
inc
mov
adc
cmp
sbb
adc
mov
pop
test
jmp
push
sbb
pop
lret
out
or
int
adc
adc
ds
mov
idivb
ret
mov
push
loope
push
in
mov
or
inc
pop
or
sti
cs
cwtl
push
jae
jno
js
jle
adc
jb
bound
jge
ds
rcrb
xchg
adc
or
mov
mov
push
xor
push
aam
cmp
or
pop
ret
dec
sbb
sbb
loope
mov
inc
popa
sbb
fcmovnu
mov
loope
xor
or
xchg
lahf
jno
push
adc
push
leave
lock
xor
fs
or
push
dec
push
jno
mov
add
leave
add
fistpll
mov
cmpl
pop
ret
sub
jmp
scas
xor
xor
fsubs
in
sub
add
mov
add
mov
ret
aad
sbb
cmpsl
mov
popf
pushf
mov
jmp
mov
cwtl
ljmp
sub
aad
pop
cmp
insl
xchg
sbb
pop
jb
xorl
mov
push
stos
hlt
and
mov
loop
andb
xchg
adc
sbb
sbb
sarl
repz
aaa
inc
ret
nop
movsl
mov
jbe
cmpsb
ret
xchg
inc
sub
mov
push
push
in
xchg
push
loope
sbb
popa
and
dec
mov
push
movsb
decb
sub
mov
jecxz
mov
pop
repz
dec
or
aas
sub
pop
pop
inc
repz
popf
lock
stc
mov
pop
add
sub
bnd
sbb
push
in
mov
loopne
xor
cwtl
adc
rep
ds
mov
cs
fistl
mov
rep
adc
xor
cmp
mov
sarl
loop
aas
xchg
adc
out
ret
mov
and
cli
sub
jp
pop
push
dec
enter
mov
mov
aam
pop
inc
fldl
xchg
int3
enter
loope
loop
sti
xor
and
inc
and
aas
adc
push
bound
mov
xchg
cmp
inc
out
xchg
mov
xchg
push
xchg
inc
insb
in
xchg
pop
rorl
cmp
dec
inc
jecxz
push
or
jae
out
ja
sbb
out
mov
lds
xchg
push
inc
sbb
mov
pushf
xchg
mov
notl
xchg
xchg
mov
popa
adc
or
out
xchg
mov
std
loope
push
adc
push
add
push
adc
add
xor
mov
popf
and
out
mov
pop
mov
push
cmpsl
sbb
iret
mov
pusha
rcrl
ret
ds
sbb
pop
popa
adc
adc
out
and
test
add
aas
mov
mov
jl
jg
in
mov
mov
sti
cmp
out
out
leave
cmpsb
pop
inc
cmpsb
cwtl
fcmovnb
push
addb
mov
daa
push
and
out
mov
sub
daa
and
push
out
adc
mov
aas
jno
push
movsl
lds
dec
sahf
or
adc
cld
shll
xchg
pop
cmpl
das
or
imul
dec
adc
jo
xor
dec
inc
or
pop
in
fldenv
mov
lea
pop
loopne
iret
pop
push
sbb
or
mov
out
adc
add
shl
scas
cmpsb
mov
dec
les
imul
gs
shlb
or
mov
sbb
mov
sbb
addl
mov
mov
sub
push
lods
xorb
pop
mov
mov
or
fdivrs
xor
call
popf
mov
cmp
adc
xor
dec
adc
fs
js
in
mov
data16
mov
lret
xor
jp
dec
or
sbb
adc
imul
out
fadd
and
fnstcw
sub
cmp
inc
and
inc
cmp
inc
or
and
fistps
cs
es
arpl
insb
mov
sub
test
xlat
xchg
push
sub
mov
dec
lock
push
in
lcall
mov
stc
addb
xor
push
cmp
push
mov
movsl
mov
xor
mov
push
gs
push
int3
adc
cmp
or
push
int
inc
icebp
iret
xchg
xor
mov
push
add
push
xchg
es
pop
imul
mov
adc
hlt
les
aaa
sbb
ror
arpl
mov
lock
pop
cmc
mov
add
sbb
icebp
iret
cmp
mov
cmp
inc
daa
add
adc
mov
mov
push
inc
jae
xor
mov
fwait
xor
das
mov
test
mov
xor
mov
daa
cmpsl
adc
ljmp
cmp
test
xchg
push
add
and
cmp
dec
in
pop
adc
pop
adc
or
dec
pushf
mov
and
lret
pop
mov
xchg
inc
movsl
loopne
pushf
add
or
xor
sub
push
test
xor
jge
cmp
and
push
insb
xor
jecxz
lea
mov
push
jae
jg
jecxz
sahf
cmpsl
sbb
add
stc
xchg
das
hlt
mov
sub
stos
fisubl
stos
add
sbb
mov
jmp
sub
or
mov
pop
jns
pop
push
or
fdivrs
shrl
push
cmp
loop
pop
dec
scas
repnz
mov
cmp
loop
pop
movsb
push
jp
push
into
pop
sbb
loopne
sbb
cmpl
loopne
lods
test
dec
mov
mov
or
and
mov
fprem1
push
mov
jns
ja
loope
int
jle
mov
jns
cmpsb
pop
mov
mov
xorl
jg
in
fcomps
or
push
xor
mov
jne
add
push
xchg
fsubrl
cmpsl
lea
xchg
pop
adc
lret
push
lret
pushf
das
sbb
cmp
into
sbb
pop
adc
sbb
dec
push
cld
push
cmc
mov
movsl
jnp
mov
out
sub
cltd
dec
jae
inc
push
xor
dec
cmpsl
lods
push
out
xchg
and
inc
loope
xchg
int3
out
jp
and
lock
repnz
add
pop
or
lret
push
loope
mov
add
xchg
add
lret
mov
sub
stos
fistl
in
push
outsl
inc
inc
xchg
jb
adc
lds
ret
inc
pop
aas
lds
inc
jmp
inc
sbb
inc
outsb
inc
and
mov
rolb
sub
scas
mov
mov
or
push
ds
popa
mov
add
push
in
mov
push
xchg
insb
fisttps
jae
pop
mov
out
add
and
xchg
popf
fmull
inc
push
and
push
push
fwait
in
push
subb
jbe
xor
call
popf
mov
or
push
mov
lret
int3
dec
xchg
adc
inc
adc
aaa
fisubl
jecxz
jnp
and
fsts
int3
pop
decb
push
mov
and
dec
pop
sahf
mov
or
clc
ret
ret
jp
mov
sbb
adc
inc
or
hlt
push
add
sub
ljmp
addb
sbb
and
push
jno
repz
adc
aas
mov
pushf
ret
push
push
fsub
mov
cltd
cltd
fistps
pop
jne
repz
stc
lods
mov
inc
cld
jo
adc
and
jns
arpl
cwtl
adc
sub
fs
mov
cmp
stos
aad
rclb
jle
xor
mov
jl
fdiv
push
fldenv
push
pop
inc
jge
push
pop
mov
pop
mov
and
add
and
cmpl
cld
add
ds
pop
insb
inc
jne
inc
aam
call
mov
inc
mov
mov
in
cmp
je
or
mov
mov
add
push
sub
sub
daa
pop
into
test
addb
adc
loope
and
mov
inc
bound
fsub
pop
and
flds
mov
sbb
subl
decl
or
mov
mov
pop
scas
push
mov
pop
in
fwait
and
andb
sub
mov
mov
xor
sbb
dec
mov
xor
loopne
iret
sbb
loope
sub
pop
lret
push
lret
xlat
dec
lea
in
insb
add
and
cmp
or
iret
cld
and
daa
aas
xabort
jp
movsl
rcrl
movsl
sbb
inc
sbb
mov
jb
movsl
mov
popa
jle
pop
push
loope
and
pop
in
std
mov
dec
push
xchg
cmp
dec
and
pusha
mov
test
adc
mov
cld
cmpsb
mov
addb
sbb
fistps
mov
rclb
adc
ficoms
arpl
and
add
mov
andb
xchg
cltd
insl
aas
dec
aas
aas
jg
pop
push
out
popl
cmp
fisubl
cli
and
sbb
mov
fists
repz
push
push
sbb
ljmp
cmp
mov
pop
aam
cwtl
lea
leave
jns
mov
ret
mov
sbb
jp
aaa
sub
shll
or
cmp
cmp
stos
dec
jns
adcb
sub
xor
push
jns
and
push
orl
insl
mov
or
jp
push
pop
jae
imul
push
ljmp
ret
aam
dec
inc
and
out
inc
mov
out
andb
adc
mov
enter
subl
pop
add
mov
in
data16
js
cmp
fsts
xor
jp
jecxz
test
faddp
jbe
insl
cmp
mov
daa
call
and
mov
pop
sbb
lds
testl
inc
orl
insb
dec
xchg
cmp
stos
pop
icebp
out
imul
dec
dec
xor
mov
int3
add
orl
lock
test
into
rorb
loope
std
mov
lcall
dec
adc
iret
sub
movsl
push
fcomps
xchg
in
inc
inc
jg
or
jge
nop
push
mov
sahf
push
push
jns
mov
or
imul
sti
adc
mov
hlt
lock
or
cmp
test
std
and
ljmp
jno
js
inc
popf
adc
add
jne
movsl
push
daa
cmp
stos
rep
fsubrl
mov
xor
xlat
loopne
inc
hlt
lcall
inc
push
sub
addl
mov
sub
inc
xchg
xchg
pop
rclb
sub
bound
repz
push
or
and
xlat
mov
or
aas
mov
push
xchg
sub
sub
jbe
inc
add
loopne
or
stos
sarl
push
pop
mov
xchg
pushf
add
push
int3
dec
mov
push
hlt
mov
push
and
push
addr16
arpl
aas
int3
push
adc
add
mov
sbb
and
out
filds
fldcw
or
push
inc
fstl
cmp
or
fcomps
add
push
mov
out
loope
add
ds
mov
pop
or
push
jno
adc
add
stc
and
shll
lret
mov
nop
sbb
sbb
aas
pop
add
fistps
dec
jb
leave
ljmp
inc
adc
xchg
fcomps
shrl
dec
pop
inc
pop
sbb
inc
insl
mov
add
pop
xchg
add
pop
cmpb
xchg
rcll
add
sub
push
add
and
add
ret
add
mov
cmp
ds
cltd
mov
mov
jnp
addl
mov
hlt
mov
mov
jbe
sbb
dec
loope
jnp
push
and
fisubl
fdivs
push
int3
ljmp
push
fstpt
sub
bound
loopne
dec
cli
sahf
and
and
cmp
mov
dec
add
fldcw
stos
popa
xor
xchg
cwtl
or
cmp
test
movsl
mull
dec
mov
inc
xor
leave
xchg
leave
mov
loop
ja
mov
inc
pop
and
outsb
sub
inc
es
push
xor
and
nop
or
or
or
jo
into
sub
add
inc
mov
xor
ljmp
cmp
adc
pop
jbe
mov
add
inc
int
xor
sarl
mov
mov
and
bound
jmp
addl
xor
adc
rorb
push
mul
mov
cmp
add
jnp
fnstsw
test
rorb
mov
gs
add
push
aad
or
jecxz
push
sbb
adc
mov
jl
and
xor
sub
sub
sbb
mov
mov
add
xor
cmp
orl
ret
stc
imul
inc
sub
in
int
lea
loop
mov
pushf
pop
jg
jl
daa
les
sub
dec
adc
add
xchg
js
addr16
pop
lds
pop
testb
mov
and
andl
push
fisubrs
pusha
xor
repnz
inc
mov
adc
addl
and
movsl
jo
shll
lret
loop
arpl
rcrl
jbe
xorl
outsb
push
arpl
jnp
add
push
add
in
mov
sbb
jbe
jae
cmp
mov
mov
pop
dec
lcall
bound
jnp
mov
add
sub
cmp
movb
and
pop
sbbb
andl
pop
pop
bound
loop
mov
fstpt
and
adc
jg
test
or
or
ljmp
gs
mov
repz
adc
add
cmp
addl
add
sbb
dec
mov
int3
rcrl
xor
aad
or
imul
out
outsb
fisttpl
cs
push
mov
ret
mov
dec
pop
xor
push
or
pop
das
or
jmp
mov
lock
and
dec
dec
roll
fldcw
or
jnp
xchg
mov
xor
mov
and
push
stos
xchg
arpl
imul
mov
fstl
lea
add
test
cmp
jg
adc
mov
in
xchg
push
jnp
fs
loop
adc
fstps
inc
ret
xchg
fwait
dec
adc
inc
or
cmpsb
sub
or
shl
iret
mov
mov
out
imul
mov
push
xchg
push
mov
cwtl
cmpsb
and
sub
out
fwait
push
mov
jns
cltd
addl
mov
ret
push
imul
mov
jb
loope
insl
xchg
fwait
pop
xchg
dec
pop
adc
test
sbb
testb
mov
add
push
popf
xor
call
lock
and
ds
fs
xor
xchg
into
lods
fcmovb
jnp
cwtl
pop
or
fistl
int3
sbb
add
mov
cltd
cmp
pop
inc
lods
cmp
js
call
cs
xchg
xchg
shlb
ret
pop
sub
fidivrl
movb
sbb
jecxz
mov
icebp
mov
pop
aas
ret
cmp
adc
pop
mov
decl
sub
ret
xchg
lret
add
fnstenv
out
add
xchg
mov
ret
adc
cmpsb
mov
push
fistl
adc
lea
sub
xchg
pop
push
mov
ficomps
cmp
or
daa
inc
roll
and
sub
lods
add
cmpsb
adc
mov
test
xor
lods
test
je
fiaddl
cmc
add
popf
xchg
and
jge
cmp
addr16
mov
orb
xchg
lcall
clc
stos
jno
dec
gs
pop
pushf
fwait
dec
mov
jg,pn
popa
xor
sub
addr16
sbb
lret
test
ss
push
push
loop
and
push
test
jb
pop
mov
jae
enter
adc
andl
mov
push
cmp
stos
addb
inc
dec
lret
jmp
cmp
cltd
lods
lahf
mov
pop
cmp
xor
xchg
inc
repnz
mov
jns
dec
sbb
insl
xlat
arpl
jmp
addl
push
out
popf
mov
pop
add
fiaddl
xchg
push
movsb
mov
and
dec
xchg
add
lret
daa
loop
shlb
xchg
dec
sbb
cld
xor
or
and
push
int
daa
adc
sub
push
and
outsb
lds
fidivl
cmp
ds
jp
xchg
mov
cmp
ret
cmp
mov
mov
adc
mov
in
adc
jmp
add
pop
sbbb
xchg
push
jo
mov
push
lret
xchg
mov
sbb
push
daa
mov
pop
xchg
aas
addb
sub
pop
add
inc
ja
movsb
mov
and
mov
je
adcl
imul
cmp
iret
mov
cmp
ret
xchg
dec
jne
or
aad
lret
sub
adc
dec
jmp
mov
xchg
and
arpl
jne
inc
or
cmc
orl
je
xchg
orb
in
jne
ret
add
push
gs
stc
stc
imul
jns
stos
test
lcall
lret
push
ret
int
xchg
lcall
sub
pop
jl
stos
push
mov
lods
aas
sbb
adc
mov
sbb
aas
and
addr16
movsb
or
gs
jo
push
and
dec
std
jmp
jecxz
fidivl
insb
mov
int3
push
sub
mov
xchg
ret
hlt
loope
mov
push
jnp,pn
xchg
sub
push
cmp
andb
loopne,pt
xor
scas
mulb
sarl
xor
mov
push
ret
xchg
dec
jno
lods
jo
cwtl
push
xor
mov
push
test
mov
mov
rcl
mov
ja
ds
aaa
dec
idivl
test
cmp
push
leave
ljmp
sbb
rorb
gs
mov
mov
adc
pop
jnp
ds
mov
push
mov
jno
pop
or
es
inc
mov
inc
push
pop
lret
pop
jno
inc
fwait
scas
hlt
or
xchg
popf
add
add
push
mov
xchg
jp
test
fists
ss
cmp
push
pop
icebp
fstpl
loop
pop
frstor
test
cmp
pop
hlt
push
clc
mov
imul
xor
fldenv
adc
arpl
into
xchg
cltd
cltd
mov
inc
adc
push
fcomi
and
ds
xchg
cs
push
fnstsw
xchg
lock
cli
cmp
or
fbstp
sbb
dec
sti
add
fidivrl
jge
sbb
js
cmpsb
aam
jnp
add
adc
inc
lea
inc
sbbb
dec
xchg
jnp
cmc
add
sbb
mov
fistpll
xchg
inc
push
cwtl
mov
mov
sahf
push
xchg
mov
ds
or
push
xchg
lret
or
into
es
call
push
in
dec
lcall
add
sbb
push
jmp
repz
pop
repz
sub
and
or
aas
pop
pop
xchg
mov
lret
mov
sbb
gs
pop
jae
stc
xor
aam
test
or
push
cmp
fnstsw
test
mov
ret
push
daa
dec
fcoms
adc
pop
push
bound
or
jle
sbb
adc
cltd
hlt
in
or
xor
js
cmpl
into
testb
xor
jno
ja
setae
xor
out
pushf
dec
int
xor
jecxz
loopne
adc
daa
sbb
lock
or
test
adc
xchg
jmp
dec
pop
xor
call
fisubrs
push
es
xchg
pop
pop
xor
icebp
xchg
imul
pop
cli
dec
cmp
xor
cwtl
jp
fstpt
mov
insl
push
mov
and
fisubs
sarl
xchg
add
sub
sbb
ds
sub
shrl
flds
shll
icebp
daa
ja
inc
pop
xor
test
inc
push
cmpsl
lock
nop
add
das
adc
mov
pop
xchg
mov
mov
xor
and
loop
mov
frstor
adc
mov
cmpsl
mov
inc
or
fwait
dec
cmp
into
addl
cltd
mov
lea
push
xor
aam
je
cmp
in
add
push
fbstp
in
subl
xchg
decb
sbb
dec
jbe,pt
test
out
arpl
add
test
pushf
dec
lock
mov
inc
or
lods
push
fsub
mov
loopne
arpl
fisubrl
add
popa
jns
push
sti
js
adc
jmp
pop
inc
and
push
scas
push
sbb
hlt
dec
ficomps
into
add
xchg
adc
std
push
adc
cli
xor
xor
xor
xchg
in
push
xor
cld
cld
push
clc
dec
aam
xor
mov
xor
inc
sarl
sbb
sub
testb
pop
or
inc
pop
mov
sbb
jbe
in
jnp
pusha
push
shll
mov
xchg
sbb
rorl
cld
cmpsb
cmp
push
cmp
pushf
jae
insl
add
nop
xor
lds
mov
jnp
cmp
inc
clc
sub
cld
and
jp
push
or
and
in
and
xor
sbb
pushf
pop
cld
stc
and
sti
dec
pop
push
mov
mov
jmp
rcl
outsl
rorb
mov
and
mov
stc
push
dec
ja
mov
sub
movb
lret
mov
xchg
push
iret
push
dec
pop
adc
mov
ljmp
and
jg
arpl
sub
sub
cli
and
sbb
jb
in
mov
fyl2xp1
jno
and
mov
push
adc
repz
xor
insl
jbe
out
lret
and
imul
int
mov
xor
clc
dec
aas
adc
ret
inc
mov
mov
xchg
mov
fnsave
insb
push
sbb
push
daa
in
imul
cltd
repz
lcall
pop
inc
push
jmp
add
arpl
mov
ja
enter
push
and
nop
loopne
inc
push
and
inc
and
sub
inc
pop
fmull
xor
into
push
mov
sub
das
mov
add
adc
mov
push
bound
jl
sub
adc
nop
daa
push
mov
ss
or
and
jnp
dec
xor
fsts
gs
mov
xorb
push
cmp
sub
arpl
andb
sbb
cmpsb
add
push
mov
xlat
and
mov
inc
sub
fsub
lock
ret
das
dec
fildl
ret
xorl
outsl
push
sbb
add
addl
mov
lret
lds
loop
push
addr16
sbb
lret
dec
jae
out
jbe
bound
outsb
test
inc
cmp
adc
rcll
out
out
dec
ds
inc
ljmp
pop
sub
out
dec
test
fisubrs
push
inc
lret
pop
aas
jb
js
sbb
or
mov
lahf
jmp
pop
lock
mov
dec
cmp
adc
nop
dec
add
push
flds
sub
push
add
incb
test
movsb
ror
inc
loope,pt
test
loopne
jl
arpl
jge
fsubr
mov
inc
pop
xchg
xchg
icebp
pop
das
jns
mov
lahf
mov
sbb
arpl
and
arpl
cmp
lahf
pop
push
aaa
sub
bound
gs
xchg
pop
pop
push
pop
lods
push
lods
in
pushf
push
xor
or
sub
and
sbb
mov
add
std
push
test
movl
sbb
push
sahf
adc
movsb
and
mov
add
pop
outsl
or
movsb
inc
or
and
movl
lds
xchg
or
add
mov
add
dec
dec
adc
push
push
add
mov
adc
mov
add
in
cwtl
pop
fstpt
xlat
mov
adc
and
xchg
imul
mov
adc
fidivrl
or
add
ds
sbb
xchg
dec
push
mov
sbb
sbb
setne
add
push
push
xchg
pop
scas
adc
or
dec
mov
add
push
adc
iret
pop
sub
or
cwtl
aas
add
xchg
or
adc
pop
adcb
push
addb
add
nop
push
sbb
call
inc
xor
adc
sar
xchg
lret
adc
push
xor
add
add
push
add
or
andl
dec
hlt
add
arpl
or
xchg
adc
das
lds
aaa
pop
add
push
inc
cwtl
push
dec
andb
or
stos
mov
mov
cmc
sub
sbb
test
jae
mov
xor
jnp
mov
adc
test
xchg
cltd
push
or
sahf
jmp
add
loopne
jae
add
pop
mov
adc
aad
mov
xchg
xor
sub
and
xchg
test
inc
pop
lea
inc
push
lods
or
dec
xchg
fwait
xchg
lret
xchg
sub
test
xchg
pop
push
sahf
dec
xorb
inc
xchg
jae
pop
std
push
orb
mov
push
adc
call
pop
lds
lock
mov
in
stc
push
bound
adc
cmp
or
xor
jle
daa
subb
jl
xchg
mov
inc
inc
lea
stos
nop
cwtl
jns
das
ljmp
sbb
icebp
or
sbbl
test
add
sti
stos
mov
mov
movsl
adc
mov
adc
imul
ds
dec
mov
pop
inc
cmp
ds
test
cmp
icebp
sbb
nop
lret
icebp
mov
loope
nop
cld
adc
or
ds
shll
sahf
pop
int3
jg
add
sti
sub
mov
add
jb
lods
lods
or
cmp
pop
sbb
adc
les
push
push
fdivrs
nop
and
sub
aaa
clc
pop
in
or
sub
dec
lret
mov
pop
push
repnz
sub
cmpl
and
push
rcrb
mov
hlt
add
xchg
and
xor
inc
fildll
mov
adc
pop
sbbl
mulb
xchg
fiadds
stc
fistps
or
orl
push
fistpl
dec
sbb
out
xchg
inc
mov
daa
mov
mov
add
loopne
pop
or
pop
mov
xchg
jl
or
mov
xchg
cmpsl
pop
lods
add
mov
cmp
in
testb
adc
sbb
imul
cmpb
bswap
repz
mov
mov
std
mov
inc
push
outsb
mov
cmpb
sbb
ret
sbb
fs
sti
mov
imul
xor
addl
jne
aad
mov
pop
pop
mov
jne
xor
roll
xchg
ficoms
subl
push
lcall
hlt
sub
mov
add
jp
mov
ljmp
xchg
ds
fdivrl
push
scas
mov
ljmp
and
mov
cld
jp
xchg
xor
jp
repnz
ret
and
push
cwtl
addr16
or
icebp
cmc
jo
test
ja
in
repnz
or
pusha
lret
pop
jl
call
xlat
popf
rolb
jae
lahf
xorl
inc
xor
push
test
call
dec
cld
pop
fsts
js
imul
dec
cmpsb
and
mov
cmp
inc
ja
arpl
mov
add
sbb
adc
pop
cmpsb
jg
movsb
lcall
pop
adc
scas
lock
sub
cmp
adc
pop
addl
fnstcw
jno
or
inc
push
pop
dec
mov
in
or
fdivr
mov
jns
and
xor
adc
cltd
sarl
les
mov
dec
dec
ds
sahf
mov
xor
ljmp
sahf
xchg
add
insl
ficoms
lahf
sub
sbb
adc
int
clc
and
fcoms
andl
lcall
cld
pop
lods
jne
mov
negl
jge
add
inc
shll
sbb
sbb
add
aaa
or
fwait
test
pop
clc
push
mov
fcoms
or
jmp
or
stos
int
xchg
add
adc
gs
arpl
xchg
fstpl
push
jp
xchg
shl
subb
xchg
in
jnp
cmp
adc
xchg
pop
xor
sbb
adc
mov
in
lds
shrl
shlb
fwait
lcall
nop
sbb
dec
inc
or
aad
cmpsb
xor
mov
fdivl
out
adcl
cmp
jge
add
cld
xchg
add
inc
add
jle
jl
ret
mov
ret
inc
in
ja
cs
and
add
xlat
dec
push
std
cmp
add
fcompl
fwait
mov
inc
loop
adc
push
adc
mov
shll
add
sti
jmp
or
adcb
lret
pop
push
incl
out
or
and
js
mov
daa
adc
shlb
fmul
push
jne
push
mov
push
mov
and
ds
adc
or
or
jb
and
dec
movsl
iret
add
xchg
ljmp
pop
pop
out
pop
ljmp
pusha
pop
fdivl
cs
fsts
lret
xchg
sub
xchg
push
in
sub
sarl
inc
adc
gs
sbb
pop
xchg
inc
sub
out
loope
into
add
sbb
sbb
popa
clc
movsl
js
decb
pop
mov
movsl
mov
push
or
lock
test
icebp
adc
ds
fdivl
cltd
pusha
mov
xchg
inc
daa
sbb
cmp
cmp
dec
sub
ret
cmpb
out
aas
jbe
out
adc
xchg
leave
pop
adc
lea
fildll
lcall
xlat
sub
inc
push
das
notl
pop
rcrl
shll
sub
lret
push
mov
fwait
push
call
pushf
and
mov
cmp
sbb
and
cmp
out
push
dec
jmp
sbb
jno
std
fildl
jno
mov
sub
lea
das
jmp
pop
imul
stos
mov
add
or
add
pop
xchg
pop
push
dec
dec
nop
jge
mov
pop
push
cmpsb
movsl
lahf
movsb
fistl
xchg
out
or
cltd
jnp
xlat
pop
xor
fidivrs
cltd
pop
divps
mov
mov
mov
dec
sub
add
jecxz
fwait
sbb
cmp
fsubs
repz
sub
scas
and
aas
paddsb
mov
popf
push
cld
mov
ds
in
dec
jge
sbb
daa
cltd
fstpt
sbb
cld
sbb
cmp
ret
adcl
sbb
push
insb
rcrl
push
test
jns
xchg
jne
test
rclb
ds
fucomi
cmp
sbb
or
add
repz
add
push
or
push
push
jae
add
dec
push
pushf
shrb
dec
xchg
add
inc
jb
dec
cmp
outsb
or
pop
sbb
imul
mov
mov
subl
and
cmp
shll
mov
jecxz
sti
sbb
in
sbb
jns
and
mov
add
hlt
sub
mov
and
xchg
outsb
iret
xchg
lcall
scas
adc
push
fistps
add
sti
nop
mov
push
mov
pop
push
loopne
mov
popa
popf
fwait
es
pop
jns
push
pop
lods
inc
dec
and
jns
push
add
sub
iret
scas
adc
jns
xor
and
loope
mov
pop
lds
sbb
push
sub
jns
mov
out
jbe
add
das
xchg
rcll
js
push
popf
shl
xlat
inc
jbe
or
mov
push
movsl
inc
mov
xchg
xchg
jmp
je
jge
add
mov
or
push
mov
dec
cmp
push
bound
jno
adc
push
sub
add
mov
add
ljmp
call
push
mov
dec
out
or
mov
inc
fldenv
xchg
movsb
int3
popa
adc
imul
fists
jne
jl
push
add
fldcw
jmp
lea
scas
std
in
sbbb
and
adcl
mov
lret
mov
movsb
sub
push
or
int
and
mov
xchg
call
mov
jecxz
mov
xlat
pop
inc
imul
mov
fimull
in
and
mov
mov
addr16
out
ret
pop
lret
add
push
jg
subb
imul
mov
cmpsb
icebp
mov
bound
mov
fists
shl
iret
daa
mov
out
hlt
repnz
mov
add
lahf
fwait
push
sub
xchg
lahf
cmp
arpl
pop
pop
dec
xchg
lods
cmp
ljmp
lcall
loop
add
or
fldcw
popf
add
push
mov
push
add
sti
sbbl
lea
in
nop
push
push
nop
jnp
subl
jns
mov
xchg
sbb
mov
dec
pop
int3
pop
push
ds
xchg
int
or
pop
jae
fwait
xor
mov
cmp
sbb
push
adc
dec
xchg
and
clc
inc
cwtl
out
insl
sub
jo
inc
mov
sahf
jno
ds
cmc
and
push
jg
movzwl
sub
sbb
movsl
int3
and
mov
fidivl
and
add
sbb
das
xchg
mov
sub
and
ret
arpl
xchg
lods
mov
in
lea
sub
das
add
inc
ret
jbe
pop
daa
fdivl
xlat
lds
rcrb
pop
inc
dec
notb
and
int3
and
and
scas
xorb
or
jae
lahf
sbb
jbe
cwtl
mov
mov
ljmp
cmpsb
push
add
mov
cmpsl
fnstcw
pop
and
dec
mov
mov
jnp
shrb
add
test
es
lods
lret
test
cmpsb
jne
out
je
sub
sub
fsub
or
push
cmp
inc
bnd
test
add
and
mov
or
mov
mov
mov
mov
dec
pop
inc
push
add
pushf
mov
cmp
push
outsl
orl
movsl
mov
inc
mov
outsl
xor
std
push
test
push
jae,pt
lea
hlt
out
xlat
sbb
nop
ds
cmp
or
sub
adc
inc
mov
sahf
cmp
cwtl
xor
and
fs
fiaddl
movsl
and
dec
data16
orl
ljmp
popf
pop
lods
xchg
mov
inc
add
and
int
push
add
movsl
xor
cmp
adc
adc
sar
dec
shr
jnp
jnp
pop
fildl
xchg
or
scas
ds
mov
xchg
icebp
inc
popf
mov
adc
dec
mov
jae
adc
mov
loop
xchg
shlb
imul
ljmp
pop
or
movsl
push
das
jmp
lea
ljmp
cmp
sub
inc
push
xchg
xor
je
cmp
out
fwait
cs
pusha
push
imul
jle
mov
xor
popa
and
movsl
mov
sarb
inc
aaa
cmp
inc
mov
outsl
jle
outsl
ret
imul
mov
jmp
jne
pop
sbbl
xor
jnp
adc
daa
push
add
out
mov
ret
or
inc
push
mov
add
and
shl
push
test
inc
xlat
cmc
aas
dec
xor
imul
ja
sbb
xchg
pop
ret
int3
jle
mov
bound
ret
push
push
addr16
mov
push
in
pop
fincstp
adc
mov
orb
mov
mov
push
insb
xchg
in
adc
lcall
aas
cltd
xchg
jae
or
push
inc
push
mov
xchg
pop
icebp
sub
cmp
push
rorb
lahf
call
loop
fstps
in
dec
int3
sub
ret
movsb
popf
aad
and
int
sub
add
add
daa
shrl
stos
cmc
sbb
cltd
and
ficompl
pop
cmp
lcall
push
or
ret
xor
pop
call
loop
repz
mov
fdivrs
mov
jns
xchg
add
int
cld
or
or
insb
mov
icebp
inc
add
push
xor
sub
test
pop
pop
rcr
lret
dec
sub
and
dec
mov
mov
adc
lock
sahf
xor
lcall
inc
nop
les
push
out
mov
jne
xchg
rorb
test
rorb
cmpsb
sub
push
ljmp
loope
add
lcall
sti
xchg
inc
shrb
rolb
sbb
and
sub
shll
mov
xchg
out
andl
sbb
pop
lcall
pop
sbb
jns
js
cmc
adc
lahf
pusha
insb
sub
int3
dec
mov
lods
lds
pop
pop
mov
xor
cmpsb
or
test
xchg
lret
or
add
or
push
cmp
dec
cs
mov
aas
fwait
add
ret
out
mov
ret
xor
in
sbb
aaa
push
push
and
cwtl
das
mov
cmpsl
or
jae
les
xchg
jg
dec
cmp
or
mov
pop
mov
or
push
add
pop
add
pop
ja
inc
test
shll
stc
movsl
and
sbb
mov
push
sub
mov
or
or
adc
adc
lods
push
jo
mov
push
shll
pushf
xchg
and
push
sbbl
ds
lea
mov
and
bound
xchg
adc
fcmovne
mov
imul
xchg
xor
inc
sti
and
push
cmp
mov
and
loopne
out
add
xor
cmp
cmp
or
cmp
mov
lret
mov
mov
inc
lahf
test
jp
inc
xor
pop
sub
icebp
ja
or
sub
cld
sarb
mov
mov
mov
call
jecxz
int3
cmpsl
pop
add
sub
outsl
cmp
fld1
mov
pop
out
loopne
dec
ret
adc
rcll
cmp
xchg
mov
jmp
pop
bound
sub
loop
cli
sbb
out
div
fwait
pop
in
jge
ja
arpl
mov
jbe
push
test
push
sub
cmp
mov
or
fsubl
lcallw
arpl
fmuls
dec
imul
mov
sbb
jae
fldenv
add
mov
mov
ds
inc
push
in
fstl
adc
mov
xlat
pop
out
mov
cli
jmp
mov
cmp
sbb
sti
inc
sahf
mov
sbb
inc
inc
ds
jp
sub
punpckldq
and
cmp
push
test
or
mov
jne
jb
ret
pusha
xlat
mov
stos
add
es
inc
mov
in
xchg
cmp
xor
ficoml
mov
lahf
mov
call
mov
inc
pop
popf
cmp
mov
cld
inc
inc
data16
adc
pop
adc
int
mov
ljmp
orb
std
scas
out
pop
xor
cmp
imul
cmpsb
sub
lret
inc
mov
push
sbb
push
and
sahf
lcall
loop
imul
pop
cmp
add
sbb
inc
stos
cmp
gs
dec
les
lcall
sbb
mov
rol
ja
into
cwtl
jg
or
and
and
xchg
popa
es
or
xchg
fidivrl
outsb
mov
push
sahf
dec
mov
mov
mov
scas
clc
popf
sbb
mov
dec
xchg
testb
mov
stos
orb
add
sub
dec
xor
jne
leave
fldcw
aam
or
mov
or
xchg
int
jno
dec
js
sbb
or
cwtl
leave
movsl
std
adc
stos
add
inc
shll
inc
push
stc
xchg
jns
pop
ds
stc
pop
mov
xchg
hlt
insb
pop
cmpsb
jnp
ret
jecxz
in
movsb
xlat
pop
cmp
subl
xor
loope
in
push
aaa
loopne
ja
push
xchg
icebp
ss
and
push
cld
xor
addr16
pop
and
xchg
sub
or
or
or
or
in
push
adc
fwait
sub
sbb
mov
sub
adc
sbb
push
add
sbb
ss
xchg
aas
in
scas
in
clc
adc
or
mov
xor
roll
and
cld
mov
rorl
clc
pop
sub
push
add
or
mov
pop
repz
sub
das
add
jnp
mov
dec
mov
pinsrw
xchg
add
sub
and
das
test
test
data16
ja
loopne
orl
add
ds
clc
leave
pusha
ret
mov
out
and
push
lcall
rcll
xlat
fsubrs
xor
inc
ss
cs
pop
cmc
fdivl
add
pop
sub
inc
fadds
sbb
adc
in
es
icebp
sbb
aad
cmpsb
pop
addl
mov
nop
pop
mov
cmp
pop
xor
mov
mov
in
loope
loop
sub
xor
call
jno
mov
cli
mov
repnz
sub
popa
xchg
icebp
fisubrs
imul
mov
daa
movsl
frstor
push
enter
in
sbb
inc
leave
dec
mov
adc
movb
xchg
pop
xor
pop
sbb
lret
add
pop
and
pop
jns
push
xor
cltd
adc
out
ret
mov
sti
jno
pmaddwd
mov
cmp
sbb
xor
insb
iret
add
scas
js
xchg
pop
lahf
or
lea
xorl
push
push
test
mov
lock
inc
test
xchg
stos
jg
pushl
dec
push
imul
or
dec
jmp
xor
ljmp
and
sbb
and
push
and
shll
pushf
xor
push
in
test
xor
jns
and
cli
xor
sahf
or
arpl
xchg
fldl
adc
addb
pop
test
add
push
sbb
or
push
pop
jge,pt
outsl
push
cs
fs
dec
add
xorl
mov
out
stos
or
mov
movsl
add
ja
add
cmp
xchg
nop
dec
jns
adc
into
iret
push
lcall
into
jo
in
and
jo
mov
xor
notl
xchg
inc
mov
adc
xor
push
sti
mov
in
ficoml
mov
call
leave
adc
cmp
cltd
mov
popa
jbe
mov
mov
adc
lret
xchg
or
aas
xchg
subl
dec
aam
push
frndint
jmp
ss
mov
pop
push
cmc
pop
push
push
and
push
sbb
cmp
dec
cld
mov
daa
jne
sub
jle
jmp
fsts
stos
arpl
xor
aas
xchg
push
sbb
bound
rcrb
movb
out
shlb
lahf
cli
movsb
and
push
loope
sbb
mov
arpl
ret
fdivrs
repnz
icebp
xor
rolb
xchg
clc
jecxz
pop
dec
rorl
gs
cs
sub
push
repz
push
or
pop
cmc
mov
cmpb
popf
mov
sbb
adc
and
xor
sub
sarb
pop
imul
jg
or
dec
xchg
adc
push
or
fcmovnb
push
negb
jmp
mov
sbb
jle
call
jb
sbb
dec
jae
or
jl
jmp
push
pop
bound
xchg
jb
cmp
sub
push
test
loope
ja
lock
adc
ljmp
pusha
ja
subb
pop
jb
or
sti
add
dec
jns
inc
in
test
fcompl
dec
jle
shlb
test
lock
cmpsl
loopne
sub
test
pushf
ret
sub
add
shll
ret
push
push
mov
inc
inc
pop
bswap
fwait
ds
int3
lcall
ds
push
xchg
clc
sbb
and
cmpsl
call
jge
sbb
dec
ror
ss
cmp
push
pop
pop
mov
cmp
and
pop
movsl
mov
mov
push
adc
push
xchg
mov
adc
push
lcall
leave
cmp
subb
sbb
mov
pop
or
dec
push
pop
inc
xchg
pop
fwait
arpl
mull
mov
jg
jge
lea
sub
adc
mov
fmull
dec
sub
test
mov
adc
leave
and
mov
xchg
mov
mov
test
scas
adc
sub
adc
test
insl
cltd
push
inc
push
add
add
int3
lock
or
iret
sub
and
orb
repz
popa
add
ficoms
ficomps
push
push
jo
and
rol
add
sub
popl
mov
out
dec
inc
js
cs
and
and
inc
pop
add
pop
xor
mov
and
enter
int3
mov
sub
pop
mov
mov
jo
adc
sbb
cmp
and
shlb
jl
push
lds
fisttpl
aas
in
xlat
out
imul
out
and
xchg
subb
inc
bound
cmova
jl
pop
sub
mov
inc
or
mov
inc
dec
int
inc
inc
mov
movsb
and
xchg
pop
pop
and
sti
jb
adc
out
xchg
cmp
outsl
mov
inc
cmp
inc
pop
push
jmp
insb
arpl
push
push
mov
pop
and
arpl
and
test
or
hlt
lret
dec
mov
jno
push
std
pop
xor
cmp
cmp
mov
jmp
loope
push
aad
xchg
fsubp
xchg
xor
cmp
sti
dec
daa
or
lahf
movsl
and
rolb
cmpsb
sbb
sahf
rol
or
and
mov
xchg
cmp
fwait
jge
fs
adc
fdivrs
fwait
mov
iret
aaa
out
adc
push
add
mov
mov
xor
adc
or
push
inc
ret
pop
test
jecxz
mov
ss
shll
or
sbb
mov
subb
jmp
lea
inc
in
cwtl
lcall
int3
mov
ljmp
fcompl
mov
ficoms
cmc
adc
xchg
bound
push
inc
lahf
xor
xchg
push
mov
lret
sub
pop
fsts
ficompl
stc
out
push
mov
dec
and
push
stos
add
jb
jmp
data16
xchg
lret
fdivs
jns
inc
add
jae
fnstsw
push
mov
xchg
mov
sub
daa
das
out
lret
pushf
pop
push
cmp
mov
pop
lods
inc
push
mov
bound
insb
or
inc
push
ljmp
or
push
lahf
subl
loopne
inc
xchg
jle
jl
aam
js
ss
arpl
lods
shlb
pop
jmp
sbb
cmp
sub
push
cmp
or
dec
and
dec
adc
in
add
xor
mov
and
lahf
andb
into
hlt
ret
rolb
pop
subb
add
fdivl
lahf
fidivrs
inc
test
mov
jnp
fsubrs
jle
or
js,pt
xor
mov
and
cltd
or
stc
mov
movsl
jns
lods
arpl
mov
int3
dec
push
add
sub
insl
jnp
add
inc
add
pop
dec
adc
adc
jnp
mov
or
and
fdivrs
inc
fstps
jne
test
mov
adc
inc
fwait
push
sub
out
lcall
xchg
xchg
push
test
pop
insb
int
inc
daa
or
adc
dec
movsl
or
movsl
mov
mov
mov
pop
aaa
dec
push
popf
mov
js
or
push
ficoms
adc
push
ret
or
ja
jb
mov
clc
orl
jge
daa
ja
arpl
push
jo
xchg
push
rcrl
rcll
cmp
loopne
dec
dec
adc
xor
xchg
dec
lods
mov
dec
ss
lret
test
sti
inc
cmp
or
xchg
push
and
hlt
loopne
mov
xlat
popf
lret
fldcw
test
ds
cmp
ds
or
orl
popa
icebp
mov
or
roll
ret
stos
aad
or
int
int
leave
xchg
mov
mov
mov
xchg
orl
into
add
jp
cld
popf
add
ret
mov
stos
loopne
loope
insb
imul
aam
test
mov
mov
jp
insb
or
xchg
mov
imull
lods
addl
jmp
jge
adc
int3
mov
jp
push
leave
mov
popa
incb
out
mov
xlat
popf
daa
dec
push
and
fcomps
adc
sbb
jne
inc
orb
bound
and
loope
fadd
add
or
popf
test
push
lret
int
and
sub
jbe
loop
cmp
movsb
adc
shll
test
sahf
in
mov
sbb
add
dec
dec
push
and
pop
xchg
mov
notl
jmp
push
sub
sub
pop
test
mov
in
and
ljmp
fdivrs
daa
xchg
add
mov
add
pusha
lods
in
mov
add
mov
in
imul
scas
add
sub
ds
sbb
cmp
dec
popl
fs
dec
bound
andb
dec
pop
push
or
ret
adc
jl
adc
and
adc
jge
es
adc
in
into
adc
popf
or
clc
and
cmpsl
jno
sbbb
aam
imul
iret
bound
jno
mov
xchg
push
xchg
fldt
in
int
dec
add
cmp
pusha
rclb
mov
mov
adc
jno
divl
jle
sub
jb
mov
stc
jb
add
mov
mov
nop
pop
inc
push
inc
and
jb
xor
mov
in
lods
mov
pop
sbb
les
mov
dec
jp
jl
ja
xchg
sbbl
sbb
adc
int
insl
nop
dec
mov
nop
xchg
cmp
aaa
adc
inc
mov
scas
add
add
mov
aaa
dec
jnp
into
xlat
xchg
cmp
xchg
xor
loope
jae
mov
mov
pop
arpl
sbbl
dec
aam
loope
xchg
fmulp
cmp
cmp
jle
push
jne
adc
inc
adc
cmp
push
outsb
xchg
cmp
and
or
and
or
icebp
fsubr
lods
or
fidivrl
xor
pop
out
pop
adc
int3
inc
push
jecxz
cwtl
or
mov
cmpsb
repz
jnp
push
into
stos
push
pusha
negl
pusha
mov
dec
mulb
push
add
adc
imul
push
push
cs
lock
movsb
in
leave
sub
sarl
sub
push
dec
jo
orb
dec
pop
lds
mov
jns
sub
pop
add
inc
mov
push
add
and
stc
mov
cmp
push
cmpl
inc
pusha
push
and
sbb
mov
int
fidivs
clc
int3
push
or
lret
sub
adc
push
mov
cmp
xor
pushf
orl
pop
xchg
and
dec
mov
pusha
add
jno
loope
aam
add
mov
xchg
adc
or
stos
jnp
out
inc
jle
jns
inc
cld
push
cld
mov
mov
push
inc
sub
add
jbe
adc
or
mov
stc
add
inc
jns
or
es
sbb
fnstcw
mov
and
ds
pushf
cltd
jo
jns,pt
jg
mov
and
cld
movsl
push
cmp
push
cmpsl
mov
sbb
and
loopne
stos
pop
cmp
and
cmpsb
push
daa
jge
xor
adcb
mov
inc
fsubs
mov
mov
mov
adc
xor
loopne
in
call
ret
cmp
cmp
jnp
jns
adc
lahf
sbb
fsubl
or
pop
ljmp
cltd
bndstx
lods
xor
inc
enter
push
adc
pop
test
push
fistps
mov
icebp
sbb
jnp
inc
pop
mov
adc
dec
daa
sbb
hlt
lcall
and
in
xor
sbbb
test
dec
add
ja
scas
inc
cwtl
cmp
clc
int
in
ds
adc
imul
pop
es
fsts
in
pop
mov
xchg
jp
jbe
add
xchg
pop
movsl
and
pop
add
push
inc
add
jne
add
cmp
adc
int
mov
cmpsl
mov
jne
xor
pop
sarl
test
int3
and
inc
insl
inc
cmp
or
jmp
mov
pop
and
inc
and
push
sbbb
pop
push
sahf
cltd
repz
sub
cmp
arpl
mov
push
cltd
add
ds
or
jne
cmpsb
push
dec
cli
adc
add
vpunpckhqdq
adc
mov
or
and
aam
xor
mov
push
sahf
int
repz
cltd
jae
cmp
jno
fcmove
dec
xchg
xchg
jg
fnstcw
push
negl
jmp
imul
cmpsb
xlat
sub
sub
cld
in
or
popf
fldcw
loopne
lds
pop
adc
shrb
in
shll
shlb
and
fsubrl
and
cli
xor
jbe
push
lcall
pmuludq
or
aaa
push
aaa
shrb
fwait
dec
and
outsl
push
and
call
lcall
sbbl
and
sarl
pop
sbb
or
in
imul
mov
push
and
xor
outsb
dec
ss
dec
scas
mov
mov
dec
pop
or
mov
inc
mov
pop
inc
dec
test
pushf
cmpsl
ret
movsl
mov
sub
mov
lret
std
xchg
loope
js
lock
ficomps
movsb
xchg
inc
scas
cmp
es
gs
testb
sti
mov
clc
mov
dec
cmp
cltd
inc
xchg
pop
fildll
cwtl
leave
cs
sub
lea
sub
mov
sub
fucomp
add
cmc
push
xchg
shr
jecxz
jb
jg
in
es
loopne
cli
jp
adc
cmpsb
fistpll
sbb
jnp
inc
and
subl
cmc
mov
mov
or
pop
popf
inc
adc
ss
cmp
mov
lea
popf
mov
inc
pop
stos
mov
lds
mov
and
or
lahf
pop
loopne
cs
imul
movsl
sbb
cmp
pusha
or
fdivrs
cli
rclb
mov
mov
or
add
xchg
push
push
dec
xchg
push
adc
pop
sub
push
cmp
pop
test
sub
add
fadds
and
dec
pop
adc
jb
sub
adcl
jmp
shrb
cmp
ret
adc
sbb
push
xor
jmp
jge
es
cmp
xchg
mov
mov
jg
mov
sbb
in
filds
mov
pop
mov
jns,pt
fstps
icebp
bound
mov
ret
loopne
add
mov
push
add
xor
push
stc
pop
stos
cmp
xchg
mov
dec
and
cli
adc
rorl
out
xchg
cmpb
ds
in
dec
sahf
in
pop
lahf
cmp
rcll
arpl
sbb
pop
daa
subl
sbb
in
popa
enter
pop
adc
and
inc
repnz
cmp
aad
out
popf
and
xchg
sub
imul
cmp
add
ljmp
mov
push
test
jecxz
pop
and
sbb
sub
push
or
mov
jae
push
iret
loope
sbb
shlb
bound
popa
dec
push
pop
in
subb
or
fdivrl
lods
xor
sahf
pop
pop
jge
sub
and
pop
pop
adc
adc
xchg
scas
jne
ficoms
insb
lcall
lods
into
aam
jb
xchg
add
ss
mov
xlat
in
push
pop
or
and
ljmp
sub
mov
sti
xor
adc
ss
adc
mov
pop
bound
fwait
mov
jns
mov
adc
loop
push
cmp
inc
addl
jne
pop
add
and
movsl
pop
mov
adc
int3
addr16
push
xchg
faddp
dec
scas
sub
mov
mov
imul
ljmp
movb
xor
push
mov
or
mov
int3
and
xchg
insl
fsubs
push
cld
les
mov
loopne
xor
mov
das
ds
mov
mov
mull
add
test
roll
fsubrp
inc
jnp
pop
or
adc
dec
push
and
push
jp
dec
mov
inc
jle
dec
out
jae
imul
mov
stos
push
es
lret
mov
cmp
std
add
dec
es
or
xchg
cmp
in
sbb
lcall
push
testb
nop
inc
sbb
jo
ljmp
std
in
push
push
xorb
push
mov
and
movsl
cmc
dec
push
mov
stos
xchg
fisubs
pop
movsb
aas
loopne
ficoml
movsl
jno
mov
sahf
pushf
xchg
clc
jb
push
xchg
roll
fstps
insb
push
dec
cmp
dec
xor
shlb
sub
xchg
push
popa
xor
mov
xchg
out
jo
cmpsl
cmc
sub
push
cmp
fnstsw
jnp
fistps
cmc
adc
adcb
out
lods
outsl
shlb
repnz
dec
and
mov
repz
push
adc
xor
out
cltd
outsb
cmp
pop
nop
mov
lods
sub
ret
popf
repz
pop
cltd
cmpsb
add
add
xor
mov
fstl
push
stos
mov
xchg
cltd
or
xor
gs
in
dec
movsb
daa
cmc
pop
jno
jb
mov
cs
notl
adc
jp
pop
mov
jl
movsl
bound
pop
lret
xor
xchg
mov
testb
xor
cwtl
loope
pop
scas
cmp
adc
push
in
and
or
ret
and
pop
ja
repnz
das
sahf
mov
sahf
bound
cmpsb
add
mov
pop
or
cmp
fwait
lock
jae
sbb
cmpsb
pop
ljmp
inc
sub
and
adc
lds
or
movsl
jg
clc
jae
or
pop
cmp
ret
popf
in
mov
adc
pop
cmp
sbb
lret
pop
mov
fst
mov
dec
cmp
mov
leave
inc
jb
in
adc
sub
xor
sti
ja
test
arpl
cmp
adc
hlt
sub
fwait
adc
rclb
jle
push
xchg
inc
out
xor
jecxz
rorl
cmpsb
ds
mov
xchg
inc
sub
mov
add
out
xchg
add
pop
pop
xor
stos
out
push
sub
dec
mov
pusha
inc
and
sbb
inc
gs
or
cmpsl
or
add
popa
add
loopne
cmpsb
ds
xchg
or
cmpsb
sub
mov
fwait
inc
pushf
testb
orl
js
xchg
push
ret
or
mov
pusha
or
mov
std
sahf
cmp
xchg
decb
pop
mov
int
shrb
daa
loopne
mov
sbb
pop
dec
mov
mov
inc
mov
dec
lahf
jne
cltd
pop
sub
inc
xorl
popa
icebp
loopne
sar
pop
mov
dec
jo
rcrl
adc
push
test
dec
cltd
sub
std
sarl
xlat
or
in
stc
dec
xor
xchg
push
fisubs
add
pushf
push
push
mov
pop
scas
cmpsb
mov
cmp
push
mov
outsb
stos
mov
sbb
mov
call
dec
cwtl
push
or
cmpsb
mov
arpl
cmp
mov
mov
sbb
ret
mov
gs
mov
inc
repz
or
xorb
ficompl
jo
jge
mov
ret
jnp
test
jmp
pop
jecxz
dec
cli
imul
cltd
push
or
jp
sub
mov
pop
repz
push
shll
cmp
hlt
push
push
adc
add
jnp
es
and
or
fdivl
push
push
dec
mov
pop
pop
fwait
cwtl
mov
aaa
roll
pop
mov
dec
dec
mov
mov
scas
xchg
fcmove
mov
sub
push
sub
dec
out
pusha
in
push
xor
js
mov
imul
sarl
mov
xchg
xchg
rcll
call
push
pop
frstor
pop
pop
test
out
sbb
cmp
push
imul
xor
pop
jge
mov
hlt
popf
ds
push
dec
pop
bound
jg
sub
insb
mov
jbe
les
dec
pop
sbb
push
movsl
in
mov
jp
rcrb
inc
and
inc
add
dec
orl
push
or
pop
dec
jo
xchg
mov
and
adc
and
out
or
jmp
mov
pop
nop
stos
xchg
iret
int3
ficoms
lcall
rcrl
xchg
sti
cltd
xchg
cwtl
outsl
jns
shl
jne
sahf
imul
rolb
idivl
movsl
mov
fnstenv
xchg
cmp
pop
sti
outsb
push
ret
pop
daa
popf
test
cmp
in
mov
dec
push
add
xorb
push
pop
push
cmp
or
fmull
push
adcb
cld
fidivs
dec
adc
mov
test
and
pushf
sarb
out
lret
or
lea
push
mov
mov
mov
test
mov
sbb
pop
push
pop
inc
jecxz
or
cmc
sub
xor
inc
pushf
xor
jp
inc
movsl
cmpsb
xchg
pop
ljmp
adc
xor
cmp
and
xor
sub
pop
fisttpll
cli
or
adc
in
or
lea
cmp
dec
lcall
data16
pop
repz
popa
xchg
cmp
sub
inc
call
cmc
push
and
xor
xchg
imul
les
xchg
and
lcall
xchg
popf
cmpsb
pushf
jle
call
stc
imul
xchg
and
cmp
mov
inc
nop
movsl
xchg
jle
sub
or
insl
cltd
call
push
rclb
je
adc
cs
inc
subb
jmp
xchg
inc
stc
rcrl
out
add
test
sbb
mov
data16
sahf
ret
sbb
xchg
xchg
sub
imul
lock
dec
xor
mov
jp
out
aad
push
xor
mulb
inc
push
or
std
cltd
lret
jl
incl
xchg
add
add
and
test
adc
out
flds
cs
dec
adc
inc
push
das
les
adc
adc
mov
inc
pop
subb
add
int3
addl
add
and
cmpsb
and
xor
add
cmc
or
pop
or
dec
pop
inc
dec
or
mov
icebp
inc
jbe
orb
lret
mov
push
push
adc
or
cltd
or
hlt
xchg
push
or
push
sub
cltd
xchg
push
pushf
add
xchg
adc
xchg
xchg
jno
push
nop
inc
add
xchg
or
add
push
and
mov
add
adc
push
push
or
add
jae
push
adcl
xchg
inc
inc
xor
mov
and
js
pushf
xor
rcll
subb
sub
mov
lds
sub
lea
nop
orl
xchg
or
adc
add
or
xchg
push
adc
xchg
add
stos
adc
or
dec
mov
or
add
push
test
rcll
add
fwait
and
or
lods
xchg
pop
mov
sbb
dec
add
adc
dec
popl
ja
add
xchg
or
xchg
push
pop
sbb
or
jae
push
sahf
xchg
pop
cmp
adc
lahf
imul
or
nop
add
or
add
inc
or
mov
sbb
mov
jae
xchg
mov
lret
lcall
data16
and
test
add
cmp
sub
out
jbe
add
pushf
push
add
mov
dec
and
mov
jns
add
or
or
push
incb
jge
lahf
or
leave
add
cmpl
fistpl
addr16
inc
sub
pop
xchg
notl
pop
rcr
clc
push
sbb
pop
ret
push
mov
or
mov
mov
pop
xor
add
es
cmp
outsb
test
fcmovnb
sbb
das
aad
inc
lock
orl
push
stos
mov
imul
lods
inc
xchg
pop
or
push
loopne
sbb
push
aam
bound
scas
ret
mov
or
and
lret
or
xchg
cltd
push
arpl
mov
aas
dec
sbb
mov
cmpb
mov
pusha
ds
cs
in
mov
bound
out
inc
push
ficoml
inc
add
fs
dec
jmp
shl
repnz
lods
add
and
mov
dec
ds
xchg
mov
xchg
sub
shll
aas
dec
xchg
cmc
ret
stos
arpl
fstpl
or
in
add
adc
xlat
jb
int
or
add
add
or
jb
cltd
dec
popa
fdivrs
dec
lock
inc
stos
adc
cmpsl
dec
pusha
test
adc
repz
dec
jns
mov
add
mov
xchg
cli
jb
data16
adc
push
hlt
xor
sub
cmp
leave
push
bound
pusha
push
lods
and
sbb
xchg
jne
and
popa
shll
neg
stos
pop
xor
jns
push
pop
mov
inc
pop
stos
add
shll
cmp
and
cltd
lods
push
jae
jmp
cmp
cmpsb
xor
lcall
pop
sbb
rcr
jge
pop
into
xchg
sahf
and
cltd
mov
sbb
stos
push
cmpb
inc
arpl
xchg
in
add
jb
mov
sub
outsl
mov
sti
clc
cmp
out
jae
and
or
sbb
enter
sbbl
and
cmp
sti
arpl
sbb
mov
dec
mov
fs
rclb
push
and
aam
stos
ss
imul
popf
mov
dec
fidivs
mov
shl
in
ret
ds
push
push
push
in
xor
push
fwait
movsl
roll
mov
mov
cmp
push
mov
loopne
mov
xlat
addl
push
cmp
hlt
test
mov
das
mov
xlat
add
or
pop
xchg
xchg
out
lcall
mov
xor
sub
add
mov
pop
js
in
jne
inc
or
sbb
cmp
sub
scas
or
popa
mov
leave
jb
pop
fimull
mov
sub
mov
sub
sbb
fwait
inc
push
fwait
cmpsb
pop
inc
push
clc
lods
frstor
add
js
xor
cltd
mov
push
cmp
push
xchg
mov
scas
inc
pop
imul
sbb
leave
std
fs
lahf
adc
fisubs
cmpsb
fistpll
divl
push
lds
push
push
lods
add
mov
insb
xchg
aas
fldenv
repz
pop
insb
jno
mov
and
loopne
add
and
popf
into
lcall
xchg
in
pusha
rorl
ljmp
mov
imul
xor
lock
add
out
ficoml
mov
mov
repz
xchg
jge
mov
sbb
or
inc
jnp
arpl
ficompl
dec
cmc
out
cmpsb
jae
test
insb
scas
lahf
xchg
imulb
mov
sbb
in
sbb
test
lret
outsb
dec
arpl
outsb
dec
popa
mov
pop
pop
in
xchg
cltd
sbb
pop
sbb
add
dec
lret
xor
jmp
ss
cmc
inc
das
addr16
repz
jbe
shlb
push
pop
popa
scas
enter
lret
add
sub
fmuls
xor
inc
ja
jnp
daa
fstpl
sub
xor
nop
mov
or
and
fstps
or
insb
cwtl
inc
mov
or
subl
add
ds
lcall
mov
inc
push
xchg
andl
add
hlt
out
lcall
movsl
loopne
jp
xchg
ljmp
ret
ds
add
addr16
orl
imul
push
int3
ficomps
ds
pusha
sub
mov
movsb
bound
nop
push
jnp
leave
mov
mov
inc
leave
loopne
push
add
movsl
add
cmp
lea
fdivs
push
and
scas
mov
push
push
insb
add
icebp
lods
xchg
loopne
aam
sti
movsl
arpl
lcallw
adc
push
xor
jae
dec
sub
and
ss
or
fwait
mov
or
and
fstps
inc
sbb
popa
sbb
add
cli
ljmp
push
dec
and
pop
xor
adc
xchg
adc
push
or
pop
push
fstps
mov
inc
sbb
popf
cmpsb
and
iret
xchg
cwtl
add
test
movsl
dec
xchg
repz
in
out
and
ds
mov
fildll
cmpsb
jbe
and
push
pushf
gs
pop
clts
dec
faddl
sbb
inc
dec
loope
mov
inc
mov
inc
aas
dec
lret
or
cli
adc
dec
cli
pop
lret
and
adc
push
call
cmc
cltd
mov
fsubs
es
dec
lcall
aad
iret
faddp
push
adc
sbb
adc
bound
cmp
arpl
shlb
ds
mov
mov
or
shlb
inc
addl
rcrb
lds
jne
test
out
or
mov
xchg
xor
cs
fsubs
push
stos
scas
shrl
push
int3
adc
jle
mov
xchg
fwait
lock
movsl
pop
stos
mov
into
outsl
pop
or
lock
bound
sbb
or
xchg
cmpsb
loopne
or
ljmp
lret
adc
insb
fistpl
jp
lcall
data16
pop
ja
gs
popf
dec
ljmp
lock
shl
sti
gs
std
mov
cmp
popf
cltd
add
add
cmc
dec
and
mov
addl
xor
shll
or
jb
jl
add
push
sahf
ljmp
cmpb
or
dec
adc
cmpsb
dec
xor
fcmovne
lret
inc
cmp
dec
adc
fcmovnu
or
in
xor
or
into
inc
mov
leave
push
lock
decb
loopne
push
sbb
sbb
rclb
popa
xchg
rorb
jb
sbb
inc
pop
je
repnz
mull
orl
out
mov
jmp
lds
shlb
mov
inc
adc
push
les
sahf
dec
mov
into
cmp
out
stc
inc
and
inc
call
jns
mov
fildl
mov
jne
xchg
insl
add
pop
jnp
daa
xor
pusha
ja
add
mov
scas
jb
fstl
addl
mov
jmp
jbe
adc
mov
adc
push
xor
add
mov
lcall
adc
sbb
pop
call
movsb
jnp
xchg
cmc
pop
in
mov
push
ret
mov
xorl
add
pop
add
sbb
mov
pop
add
loope
andl
push
adc
dec
clc
ret
mov
fisubrl
fwait
ret
add
loopne
std
cmp
sbb
je
daa
sbb
stc
in
lahf
in
xor
iret
add
fdivl
lods
lret
sub
dec
jb
cmpl
int3
xchg
mov
cmp
dec
inc
movsl
cwtl
pop
fsubl
xor
cli
cmp
adcl
xchg
inc
ljmp
cmp
xchg
inc
mov
cmpsl
lcall
and
std
test
sbb
jp
js
out
sti
in
fs
inc
xlat
inc
or
xchg
sbb
xchg
push
jmp
sub
xor
lahf
adc
push
scas
jmp
xor
pop
push
mov
fcoml
adc
loope
or
das
das
test
jecxz
and
ficoms
or
mov
lods
loopne
push
mov
addb
ss
femms
adcl
sbbl
add
ljmp
pop
xchg
arpl
push
fnstsw
mov
and
movsl
imul
mov
cmp
add
mov
jns
jecxz
out
daa
inc
or
push
push
int3
hlt
sbb
aaa
shlb
mov
inc
mov
subl
cmp
ljmp
pop
sub
clc
cmpsl
ljmp
adc
adc
fadds
andl
shl
xor
and
xchg
dec
add
pushf
loope
mov
jmp
adc
add
testl
xor
push
repz
and
xlat
mov
pop
sbbl
mov
pop
pusha
sub
sub
aam
mov
decl
push
mov
mov
inc
and
test
dec
dec
add
or
jb
and
push
cli
dec
push
test
pop
aaa
loop
aaa
xlat
lds
add
sbb
xor
fists
mul
negb
scas
les
inc
ret
xor
and
inc
leave
hlt
or
xor
push
sbb
shrl
pop
orl
movl
cld
rorb
mov
push
repz
adc
sub
in
mov
jle
fdivrs
xor
mov
movsl
shrb
dec
gs
arpl
sbb
rol
push
out
mov
jne
insb
cld
or
movsl
xchg
jmp
jnp
dec
dec
arpl
add
scas
fcomps
sub
xor
mov
push
mov
sub
repz
push
push
lcall
sbb
push
xor
fadds
sti
mov
daa
xchg
loop
lcall
mov
sbb
jg
pop
ljmp
pop
mov
cmp
mov
mov
cmp
sub
add
das
push
test
scas
fucomip
fwait
jge
lret
push
inc
ret
jb
inc
mov
jp
and
pop
push
icebp
and
mov
and
and
inc
mov
ret
dec
movsl
into
addb
jecxz
xchg
dec
stos
cmp
inc
xor
mov
mov
dec
mov
cmp
or
test
xchg
cmpb
out
js
or
pop
mov
pop
jno
sub
xchg
iret
test
inc
jno
lret
inc
loop
inc
jnp
push
out
icebp
loopne
sub
pusha
inc
bound
ret
dec
sub
orb
push
in
push
std
ds
rorb
jp
sarb
fnclex
push
call
shll
stos
dec
incb
mov
adc
test
jmp
imul
and
add
sub
mov
sub
imul
sbb
loope
push
jns
cmpsb
jo
adc
ja
movsl
sbb
in
ret
mov
jno
add
mov
add
mov
sbb
mov
mov
lret
xchg
xchg
and
and
inc
fcoml
movsl
test
add
pop
loope
cmpsb
mov
jno
add
rcll
adc
cli
movsl
inc
js
cmp
outsl
xor
insl
mov
cmpsb
outsl
inc
mull
divl
add
ljmp
push
sub
cmp
add
popa
imul
lcall
sbb
lods
xchg
fidivs
dec
rol
and
popa
inc
aad
aad
aad
adc
jns
sbb
mov
sbb
push
popa
xchg
push
xchg
repnz
push
and
jno
mov
sub
and
add
call
cmp
xor
ljmp
ret
pop
popa
mov
hlt
lret
pop
pusha
lea
clc
push
call
jne
int3
and
leave
ja
notb
push
xchg
mov
adc
ds
or
les
mov
mov
andb
stos
add
popa
shll
inc
and
push
cmp
sbb
xchg
callw
lret
mov
push
and
sbb
mov
dec
push
and
je
add
sub
xchg
in
enter
or
mov
ss
sub
jge
or
ja
sub
mov
push
pop
movsb
sub
arpl
push
adc
sbb
xchg
jns
dec
ds
jl
mov
lods
push
mov
incb
jbe
xchg
add
sub
rcr
loop
mov
lds
hlt
mov
pop
sbb
nop
add
dec
das
or
cmp
sub
cmp
mov
decl
mov
push
sbb
loope
push
repz
rcr
bound
or
fildll
mov
cmp
and
mov
int
mov
or
in
and
hlt
or
adc
in
jnp
sti
aaa
adc
sub
in
repz
xor
notl
lea
sbb
or
inc
push
imul
bound
or
int
mov
insl
adc
mov
push
or
popf
ret
mov
lcall
stos
out
or
pop
ret
cmp
loopne
jbe
jbe
and
jl
cmc
movsl
popl
jle
lret
xor
int3
sbb
jo
in
mov
sub
push
scas
popf
mov
sti
pop
cmp
adc
sub
dec
inc
stos
cltd
in
xor
and
xchg
fsubr
adc
push
xor
jp
add
test
dec
fistpl
and
ficompl
dec
incb
adc
mov
popa
sub
sti
mov
sub
andb
inc
bound
fbld
or
out
test
or
std
mov
popa
pusha
mov
jb
mov
and
fsts
jecxz
lock
nop
dec
and
sub
mov
push
mov
sub
adcb
int
cmpsl
xchg
ds
ret
mov
mov
sub
cltd
leave
xchg
fwait
add
jno
sbb
xchg
push
cmp
pop
dec
jne
sub
xchg
jp
int3
pop
sbb
or
xchg
fidivs
test
test
sub
lock
faddl
push
inc
dec
jb
sahf
iret
in
push
push
mov
push
sub
call
lods
or
xor
pop
cmp
or
add
mov
jg
mov
leave
aaa
es
into
insl
daa
mov
xchg
addl
repnz
data16
movsb
jnp
arpl
sub
stos
out
add
cmp
sub
adcl
mov
imul
inc
sub
xchg
sub
cmp
out
aas
shll
test
scas
xchg
nop
push
cmp
jp
stc
push
and
punpckldq
in
mov
pop
enter
xchg
mul
leave
loopne
adc
je
jo
xchg
movsl
aam
clc
pop
dec
mov
arpl
and
cld
push
mov
sbb
sbb
ljmp
cwtl
sti
push
adc
cmp
sub
in
push
or
popa
stc
sub
push
pop
push
mov
shlb
pop
dec
rcll
jo
mov
push
ljmp
lods
inc
or
adc
cmp
mov
shrl
test
loopne
test
xlat
outsl
mov
and
mov
pusha
push
cmpsb
add
mov
and
je,pt
mov
inc
xchg
data16
jg
dec
xchg
sbb
mov
mov
push
add
push
sbb
aas
pop
pushf
lret
movsl
inc
xor
adc
out
mov
or
push
js
lds
ror
jp
and
daa
dec
fdivs
aas
das
mov
or
out
test
xor
lahf
dec
dec
or
insb
and
add
leave
iret
add
bound
push
out
pop
and
leave
inc
push
xchg
jle
jge
fwait
int
fmuls
call
lret
mov
int3
xchg
pop
mov
cmp
arpl
dec
or
or
mov
sbb
mov
adc
or
lock
or
xchg
ds
in
int
jb
push
movsl
aas
cltd
xor
out
sbb
xor
xor
cmp
adc
cwtl
push
not
sbb
pushw
lahf
aaa
xchg
cmpsl
mov
loopne
and
mov
mov
pop
push
in
mov
std
inc
in
adc
in
int3
xchg
and
sarb
push
mov
push
pop
sahf
pop
jb
stc
cmp
cmp
push
add
push
or
cld
add
push
mov
or
sbb
jno,pt
xor
loope
mov
xor
add
pop
or
cmp
adc
ds
sub
sbb
int
xor
and
pushf
mov
mov
mov
cwtl
and
sbb
or
lret
es
testb
xchg
sbb
sbb
mov
cli
or
loopne
lock
add
push
and
out
repz
or
xchg
and
inc
push
mov
scas
cltd
push
dec
dec
int
pop
add
lds
sbb
popa
dec
ret
bound
lret
jo
lds
push
jle
sub
cmpsl
add
lcall
xor
into
jmp
or
idivb
or
jne
mov
dec
push
and
mov
inc
mov
pop
test
and
or
dec
mov
mov
movsb
outsl
in
mov
xor
jae
jl
addr16
push
pop
sbb
mov
push
mov
inc
sarb
or
pop
call
inc
mov
mov
and
adc
stc
push
pop
sbb
xlat
clc
add
jg
push
cltd
pop
or
jnp
dec
xlat
pop
dec
popf
aad
ret
push
and
push
xchg
inc
push
cmp
jmp
lea
in
outsl
inc
fistps
push
sbb
fmuls
lock
mov
iret
cld
in
lods
lahf
pop
mov
ljmp
fcmove
xchg
push
xchg
pop
pop
popa
bound
sbb
sbb
mov
roll
jg
loopne
pop
jns
mov
jg
imul
jmp
loopne
stos
fisubs
xor
xor
aad
dec
jg
inc
add
repz
and
push
shll
adc
jb
push
push
adc
lods
mov
and
call
and
subl
btr
cmp
inc
pop
or
imul
jmp
sbb
test
mov
xchg
add
dec
add
and
sbb
shlb
fld
pushw
stc
ds
mov
stos
pop
scas
dec
add
loop
test
add
pop
movsl
push
jb
cmp
sbb
and
mov
jb
fldl
les
js
add
jns
test
xchg
enter
and
jbe
std
insb
cwtl
inc
sbb
and
jne
cmp
ss
movsl
lahf
dec
out
cld
out
xor
mov
jb
jbe
lahf
sub
xor
push
or
shr
sub
xchg
inc
ja
inc
rcr
or
jno
out
arpl
ja
push
sbb
int3
and
scas
jg
adcb
clc
and
xor
fnstenv
or
std
or
push
clc
inc
lret
jl
pop
jb
fistl
push
mov
pop
xchg
pusha
mov
enter
popf
jp
inc
add
pop
lcall
sub
setbe
lret
movsl
jo
push
jne
and
jmp
mov
sbb
add
pop
leave
sub
push
add
sub
aaa
dec
push
jo
and
fnstcw
adc
jne
loopne
adc
mov
test
cmc
fldcw
jae
xchg
adc
aam
mov
jmp
in
mov
cmp
out
dec
rcrb
inc
push
mov
stc
jne
cld
mov
pop
pop
stos
push
pop
pop
push
mov
push
loope
enter
ds
pop
out
push
test
jecxz
test
push
sahf
pop
loopne
lcall
rorb
scas
fcmovb
es
dec
dec
pusha
mov
adc
mov
xchg
sub
push
ror
and
andl
dec
lea
ds
add
sub
ret
loop
repz
jp
mov
out
addr16
cmpsl
orb
add
pusha
outsl
and
jmp
pop
adc
sub
mov
pop
out
in
out
aas
mov
inc
mov
mov
and
cmp
pop
lods
jmp
xor
cmp
sub
fildll
adc
test
ds
mov
sbb
dec
fidivrl
lds
push
mov
jl
test
inc
push
and
cltd
xchg
add
inc
mov
aaa
or
push
cmpsb
fstps
cwtl
decl
ljmp
cmp
movhps
pop
cmpsl
jge
into
daa
or
ss
std
aas
and
jns,pt
aaa
dec
mov
lods
xor
shl
fbld
in
lock
psubsb
insb
mov
filds
inc
push
fstp
inc
sbb
jbe
sub
cmpb
push
push
or
pop
ds
in
stc
fwait
and
lret
xchg
cmpsl
mov
je
jg
sbb
shl
mov
jle
pop
mov
shl
lds
std
int3
jmp
sub
xorb
fisttpl
sbb
lds
adc
xchg
inc
in
add
test
mov
pop
js
mov
push
sbb
dec
adc
std
cmp
dec
in
aas
mov
es
adc
sub
test
cmp
outsl
mov
jno
xlat
or
pop
out
arpl
insb
xchg
mov
inc
aas
fisttpl
inc
loope
int3
dec
push
and
inc
cmp
and
inc
jne
mov
loop
mov
push
push
push
mov
clc
lock
pop
mov
sbb
loope
mov
adc
js
cmp
push
lcall
jecxz
add
adc
jnp
xor
and
inc
mov
xor
sahf
or
icebp
jl
mov
dec
pop
call
loop
mov
mulb
adc
inc
mov
popa
xor
popa
testb
jnp
dec
shll
out
and
xchg
inc
cmp
mov
movsl
lret
repz
fwait
add
jmp
iret
pop
dec
and
addb
ret
incl
leave
xor
pop
jb
int3
or
nop
sbb
mov
add
loop
jbe
fs
cmp
xor
pusha
dec
pushw
xchg
mov
or
ljmp
mov
pop
imul
nop
sbb
std
mov
sarl
or
ds
mulb
mov
add
dec
sub
jecxz
aaa
xlat
add
fildl
sbb
inc
iret
pop
sti
and
jge
orb
cmp
cmp
mov
mov
popa
push
cmp
lea
icebp
pusha
mov
mov
aam
adc
pop
xchg
mov
mov
xchg
and
push
repz
fiaddl
lret
pop
sub
aas
orb
add
cmp
fistpll
sbb
ja
testl
jo
dec
mov
jno
adc
mov
xor
mov
sbb
mov
movsl
out
sbb
repz
push
add
jg
insl
fwait
in
cmp
hlt
cltd
shrd
dec
cmp
mov
bound
mov
inc
or
mov
and
ds
and
and
scas
mov
imulb
mov
lods
test
inc
pop
dec
sbbb
push
fldcw
or
mov
test
xor
cwtl
ds
cmp
movsl
mov
mov
push
add
test
mov
dec
push
cmp
jge
mov
pusha
pop
cmp
and
xchg
sub
int3
add
cmp
daa
js
mov
mov
inc
or
mov
stos
mov
leave
xchg
xor
mov
xor
mov
fbld
jnp
fwait
ljmp
and
jl
and
fdivrl
mov
sbb
cmpsl
push
adc
push
adc
xchg
sbb
aas
pop
xor
sahf
call
mov
and
pop
inc
popa
lahf
or
add
sub
cld
insb
scas
or
lret
dec
jne
push
out
ljmp
shl
cmp
daa
fsubrs
test
cwtl
sbb
mov
nop
aas
add
push
sbbb
mov
ret
xor
xor
push
xor
cld
push
inc
xchg
jno
aaa
inc
xchg
jge
in
mov
cmc
loopne
sub
std
add
cmp
sub
pop
scas
sub
pop
ljmp
fidivs
mov
bound
mov
test
jne
bound
and
xchg
ror
in
xor
repz
pop
push
sub
fistps
fildl
mov
dec
std
cmp
lret
movsl
call
add
lcall
stc
inc
lods
in
mov
jbe
xor
je
in
or
lea
jns
cmp
fwait
into
push
sub
dec
push
insb
add
and
pop
pop
pushf
icebp
mov
bound
mov
cmp
mov
jecxz
fs
xchg
add
fadds
mov
mov
popa
in
out
push
out
mov
lods
adc
pop
push
sbb
mov
mov
push
fimull
pop
loopne
pop
repz
mov
fistpll
pop
jmp
fcompl
adc
bt
leave
ret
mov
sti
sbb
push
pop
mov
fucomip
push
jmp
ret
fbstp
jecxz
jnp
stos
and
adc
icebp
aas
and
call
andl
mov
adc
and
lods
mov
xor
sbb
js
sbb
shll
aas
cmpsl
pop
ljmp
pop
int3
mov
sbb
loope
pop
and
xchg
xor
hlt
loop
stc
sbb
pop
ja
and
cmp
fmull
leave
andb
int
hlt
adc
loop
sahf
sbb
out
ret
mov
pop
popa
andps
sbb
xchg
sub
push
ret
mov
pop
dec
lcall
dec
shrb
subb
inc
and
fsubp
inc
or
fidivrl
pop
mov
cmpsb
into
and
jb
dec
das
sub
cltd
in
mov
adc
and
ret
push
sbb
loop
rclb
fcmovne
movsb
sub
data16
xchg
jnp
xchg
inc
push
vsubss
adc
xor
xchg
enter
std
sbb
jecxz
movl
movsl
jg
jmp
pop
dec
stos
fistps
pusha
inc
jo
inc
or
int3
mov
push
pop
jmp
pop
pop
dec
or
push
sub
fsts
xor
or
fisubrs
jmp
xor
push
loopne
out
xchg
add
jecxz
jno
movsl
scas
cmpsl
jno
or
sbb
call
adc
jp
loope
pop
enter
bound
adc
sub
push
mov
push
and
call
pop
adc
mov
mov
push
inc
or
or
pop
xchg
stc
add
add
push
pop
out
lret
sub
mov
pop
mov
jp,pt
adc
jo
sub
int
adc
push
in
jo
mov
mov
xor
pop
push
push
adc
lea
out
ss
or
add
pop
push
bound
pop
rcr
sbb
orb
pop
repz
cs
inc
cmp
dec
in
or
pushf
add
out
fistpll
in
sbb
push
sub
kmovb
sbbl
incb
xor
push
arpl
mov
add
pop
inc
movsl
jbe
arpl
pop
pop
cmp
int3
fldcw
pop
sbb
add
add
and
je
or
jb
xchg
pop
pop
or
mov
adc
fidivrl
pop
scas
add
rorl
pop
xor
pop
pop
int3
cmpsb
dec
pop
lahf
mov
ficoms
shll
dec
jns
mov
ljmpw
push
aas
xchg
or
jnp
aam
mov
add
sbb
orb
sbb
out
sbb
push
pop
sbb
adc
bound
pop
push
fwait
lods
and
or
sub
dec
mov
jns
push
xchg
cltd
add
aas
popf
jae
fadds
sub
clc
test
sbb
inc
sbb
pop
push
add
mov
loope
in
inc
xchg
lcall
testb
stos
mov
aad
int3
cmpb
pop
fmuls
movsl
or
dec
push
pop
sbb
gs
mov
xchg
lds
add
sahf
in
ja
fists
hlt
int
rcrl
notl
push
push
mov
shr
fistpll
repz
in
aad
mov
mov
and
lret
inc
call
repz
arpl
push
pop
pop
push
cmp
fistpll
and
arpl
enter
adc
or
add
cmc
aad
fptan
out
int
push
adc
sbb
sbb
lock
pop
insb
add
cmp
add
mov
sub
mov
icebp
push
adc
cltd
imul
loope
add
fnstsw
mov
ret
xor
test
mov
cmp
bound
sbb
cwtl
test
rcrl
scas
push
jecxz
les
lcall
jae
stos
push
dec
sub
icebp
mov
jne
inc
mov
fmulp
pop
in
lds
rcrl
aas
xor
cs
lds
cmpsl
std
sbbl
pop
pop
xor
push
loopne
pop
adc
push
or
mov
xchg
sub
test
xchg
popf
movsl
rcrl
xchg
xchg
add
mov
xchg
xchg
daa
outsl
leave
jge
leave
stos
dec
hlt
and
sbb
fnstcw
pop
jg
imull
ljmp
mov
pop
pop
lcall
es
ds
adc
push
mov
into
stos
push
pop
lret
movsb
push
sbb
cltd
jns
sub
cmpsb
sbb
fcoms
mov
push
sbb
push
inc
push
or
pop
push
fdivrl
bound
mov
xchg
arpl
test
or
mov
pop
inc
pop
fisttpl
aaa
and
call
scas
pop
in
sub
adc
jecxz
in
push
lea
fwait
cmp
add
jmp
mov
sbb
jnp
bound
fcmovb
mov
pop
rclb
pop
iret
add
loope
ds
dec
ss
mov
xor
notb
add
push
mov
add
xchg
int
adc
pop
push
jmp
xor
inc
jl
sbb
push
daa
pop
xchg
ds
inc
call
lret
ds
call
cltd
sub
jp
cmp
repz
push
and
sbb
push
movsb
pushf
adc
cmp
mov
mov
test
out
mov
xchg
loopne
fucomp
push
sbb
and
lret
pushf
xchg
test
dec
popa
out
pop
dec
push
lods
das
push
movsl
xor
mull
insb
jg
cmp
sub
in
out
xchg
hlt
jns
dec
imul
inc
add
sbb
test
repz
out
mov
mov
cmp
jmp
adc
in
int3
lods
cmp
roll
lods
or
data16
sbb
or
mov
rorb
mov
push
pop
push
out
mov
pop
xchg
fsub
mov
cmp
dec
pop
icebp
adc
or
lods
orb
movsl
or
stos
push
cmpl
push
lods
fnstsw
adc
mov
pushl
dec
adc
ret
repnz
rolb
mov
inc
out
and
cmpsl
in
add
mov
xchg
lcall
inc
ds
cmpsb
fistl
push
push
mov
xchg
jbe
push
jo
fildl
movsb
mov
sbb
arpl
xchg
sahf
call
xor
push
xchg
pop
ljmp
inc
test
int
pop
pusha
shll
push
in
and
hlt
out
pop
fucomip
sub
sub
sub
dec
cmp
mov
add
ret
push
popa
fs
scas
call
xchg
fwait
or
mov
cmp
dec
daa
add
add
call
xor
add
inc
sbb
repz
jae
fcoms
popf
mov
sub
into
imul
mov
jp
and
lea
push
lods
xchg
push
or
mov
cltd
arpl
inc
jecxz
jge
ret
sbb
dec
in
mov
jnp
mov
xchg
inc
sbb
movsl
test
test
jo
mov
mov
dec
fidivs
cmp
daa
xchg
dec
imul
test
cltd
push
loopne
dec
aam
add
mov
mov
push
out
rcrl
fldcw
add
push
sti
inc
in
adc
dec
xor
rcrl
or
cmp
popa
adcb
and
ret
cli
xchg
pop
cltd
stc
pop
repz
pop
in
mov
xchg
push
push
jp
daa
fwait
adc
jbe
mov
icebp
add
mov
loop
sbb
mov
and
xchg
sub
jno
add
mov
or
push
mov
das
sbb
push
lret
fcompl
hlt
sub
mov
adc
dec
sbb
jle
cmp
push
js
mov
movsl
testl
inc
in
clc
out
push
bound
in
push
cli
loope
int
and
jo
or
inc
inc
pop
sbb
jns
xor
ret
cwtl
inc
mov
push
mov
std
js
xchg
xorl
das
xchg
ret
bound
call
mov
cmpsb
cmp
into
lahf
cmp
add
cmp
dec
stos
mov
push
mov
xchg
dec
mov
lea
stos
xrelease
push
adc
sub
stos
inc
sbb
dec
hlt
mov
pushf
add
xchg
push
dec
xor
mov
ss
adc
pusha
mov
mov
add
jne
push
pop
call
pop
test
cmp
stos
movsb
pop
fnstcw
and
popa
rcrb
fdivrs
clc
sbbl
dec
add
cmpb
fcomps
loopne
xchg
and
jne
push
xchg
out
in
and
std
lcall
imul
jae
addr16
inc
jns
ret
out
push
sti
xchg
outsl
popf
test
mov
enter
mov
int
ret
sub
jbe
mov
cld
bound
fwait
add
roll
icebp
aam
sub
xor
or
adc
jecxz
jg
ljmp
out
mov
push
push
loop
inc
outsb
sti
leave
push
or
clc
cmpsb
ja
cmp
cmc
iret
xchg
popl
out
jp
xchg
jo
daa
or
lret
push
dec
ljmp
mov
mov
mov
xorl
mov
mov
dec
mov
aad
or
cltd
push
call
aam
insb
loop
adc
les
and
filds
dec
pop
or
cmc
add
pushf
sub
xor
and
xchg
xor
push
and
call
lahf
mov
mov
cld
xchg
xchg
mov
or
mov
cmpsb
jp
enter
dec
push
out
lea
mov
adc
mov
sbb
mov
and
pop
xchg
push
cmp
inc
jecxz
sbb
iret
cmpsl
cli
pushf
test
ja
or
dec
push
jge
adc
push
outsl
pushf
add
hlt
cmp
rcrl
cltd
pop
ljmp
adc
add
sbb
imul
push
jecxz
or
push
stos
sbb
pop
fcomps
sub
fcmovne
cmpsb
fistl
pop
aas
sub
incb
xlat
sti
jp
sbb
lcall
fsts
cmp
lds
rorb
ficomps
adc
pop
add
dec
roll
sbb
push
shlb
and
sbb
jmp
decl
insl
shr
sbb
fbld
sub
xor
mov
daa
pusha
adc
in
add
or
pop
outsb
lods
enter
adc
mov
add
pop
inc
push
pop
sub
mov
es
pop
jae
aaa
dec
cmpsl
leave
dec
lcall
xchg
dec
pop
pop
or
inc
adc
pop
test
and
inc
sbb
sti
dec
arpl
insb
sahf
sbb
ja
in
sbb
jno
lcall
and
mov
mov
xorb
adc
xor
dec
push
repnz
fistps
and
cltd
mov
leave
lock
push
mov
cltd
test
loope
andl
xor
lcall
out
sbb
jne
fbld
adc
jnp
dec
ret
fs
xchg
lahf
or
jmp
sti
cli
popf
jle
dec
sar
out
das
pop
sub
push
cmp
orb
in
xor
xor
repnz
cmp
loope
inc
push
ja
sub
inc
rorl
inc
test
dec
fsts
sbb
and
dec
stos
icebp
loop
mov
insb
inc
call
lds
fidivrl
sub
pop
mov
jmp
and
fs
sub
mov
fcoms
stos
xchg
xor
mov
xchg
xchg
jae
mov
xor
mov
xchg
mov
push
popa
xor
jno
and
pop
push
popf
fld
cwtl
pop
xor
xlat
sahf
xor
inc
imul
in
jecxz
and
fcompl
jl
push
and
ss
add
mov
sbb
xchg
rorl
sbb
mov
cltd
dec
faddl
sub
push
ja
push
insb
ss
mov
sarb
adc
movsb
or
ds
mov
or
out
jg
mov
aam
jo
adc
lahf
mov
add
inc
xor
in
dec
mov
movsl
sub
fistpll
dec
sub
loope
xchg
push
or
sbb
push
into
stos
fistl
out
fwait
mov
jp
mov
push
in
xchg
pop
jecxz
cmp
add
out
lret
push
aam
cmpsb
fwait
outsb
js,pn
inc
inc
ret
pop
cmp
sub
mov
add
cmp
jl
leave
sbbb
sbb
ficoml
rcr
push
add
mov
xchg
xchg
repnz
arpl
sub
xor
dec
dec
lods
dec
in
sbb
xchg
pop
pop
push
push
ret
mov
add
and
sub
mov
ss
pusha
and
pop
ds
sbb
pop
popa
fs
repnz
cmp
es
dec
mov
int3
mov
fdivl
jle
xchg
outsb
or
shll
cmc
cmpb
faddl
fiaddl
jmp
call
mov
adc
das
inc
fstpl
cmp
or
sub
nop
in
sub
sti
and
into
sbb
xchg
cmp
lret
clc
jg
ret
mov
fdivl
push
shll
out
out
sbb
xor
sbb
cltd
movhps
or
and
mov
mov
or
test
inc
popf
jp
xor
jecxz
out
mul
aas
loopne
lcall
xchg
xor
mull
mov
fldt
xlat
ljmp
adc
dec
movsl
loopne
lahf
or
sub
ret
mov
leave
cli
pop
jnp
hlt
adc
es
xlat
add
inc
jnp
out
adc
pop
and
lock
repz
movsl
ds
pop
dec
es
repnz
mov
rcll
cwtl
xor
adc
lret
jl
pop
je
sahf
push
mov
cmp
xchg
push
cmp
cmp
inc
arpl
push
mov
xor
movsb
sub
push
or
pop
jmp
or
and
incb
push
xchg
mov
sbb
xchg
popa
loopne
daa
push
clc
cmp
mov
sti
sti
adc
loop
jns
imul
xor
mov
fnsave
lock
cmp
insb
pop
inc
push
cmp
push
fldl
sarb
fsubl
bound
pop
and
jnp,pt
push
jnp
mov
push
das
add
lods
or
stc
shlb
xchg
jno
jmp
lock
mov
fidivl
in
rep
pop
cmp
pop
mov
jge
test
mov
jnp
in
pop
inc
and
and
xchg
ret
jp
xchg
and
fidivrl
enter
pop
pop
bound
pop
sbb
orb
add
orb
jns
pop
mov
pushf
add
xchg
cs
popf
in
repz
mov
lcall
or
ds
push
mov
dec
dec
testb
movsl
andl
sbb
je
mov
inc
and
popf
pop
test
mov
or
and
xlat
outsb
xchg
out
dec
aaa
ja
lea
push
push
jnp
daa
sbb
cltd
fmul
movsb
push
jns
ljmp
or
push
popa
test
scas
imul
push
enter
rclb
fstpl
test
pop
dec
xor
movsl
ljmp
xlat
inc
test
popf
xchg
jb
sarl
or
mov
arpl
push
test
int3
ds
jns
and
inc
jo
subb
cs
push
push
stc
sbb
sbb
rcrb
push
stc
inc
insb
push
sub
aam
mov
cmp
int
mov
sub
jo
or
sub
push
inc
call
pop
sub
cmp
adc
push
ds
pop
push
in
or
andb
jno
push
push
sub
pop
xor
aas
pop
cmp
test
data16
xchg
xchg
mov
dec
jne
pop
or
imul
xchg
push
or
adc
dec
push
shlb
or
fldz
movsl
lods
xor
jg
subl
adc
jae
movsb
or
mov
push
pop
loope
dec
xor
jnp
inc
es
mov
push
dec
mov
or
daa
pop
pop
stos
inc
dec
push
mov
mov
or
out
mov
jbe
push
add
push
and
mov
movsb
testl
sub
push
cmc
ficoml
push
xchg
jecxz
mov
inc
js
mov
xor
inc
fmulp
lods
pop
or
xlat
lahf
aad
and
cltd
xor
popa
loop
sub
les
sub
movsl
and
add
xchg
mov
xchg
js
pop
push
inc
stos
cmpsb
in
aas
out
dec
push
inc
in
push
jno
fldcw
push
int3
fwait
daa
mov
leave
xor
cld
push
aam
shll
mov
mov
lret
fdivs
jmp
lods
ss
cwtl
xor
ret
pop
mov
stos
fadds
divl
lods
pop
inc
int3
push
xchg
add
leave
lcall
mov
push
cmp
push
sbb
push
movsl
inc
lods
mov
mov
jmp
repz
lds
cwtl
add
call
xchg
xor
lahf
pop
mov
inc
jle
dec
xor
push
in
xor
scas
cmp
mov
mov
cmp
sub
sbb
stos
inc
test
cld
mov
lcall
or
or
negl
lods
push
add
adc
mov
in
rcr
mov
dec
mov
pop
aas
xor
ds
mov
outsb
mov
bound
aaa
sbbl
loop
cli
cmp
mov
inc
pop
sub
sbbb
xchg
out
xor
pop
push
popa
sbb
fldcw
dec
loopne
pop
mov
pop
push
pop
sbb
xchg
fwait
ljmp
fcmovne
cmpsb
pusha
loope
pop
xlat
fmull
fdivl
add
jecxz
mov
rcrl
dec
addl
loopne
pop
xchg
inc
ds
pop
dec
jbe
es
imul
lret
fs
pushf
pop
sahf
add
int3
and
mov
arpl
adc
jp
ret
int
icebp
inc
xchg
arpl
test
adc
sbb
inc
fdivp
inc
in
dec
cmp
out
or
and
inc
jle
pop
mov
pop
fs
std
int
ds
cmpl
fwait
inc
pop
test
leave
andl
sbb
xor
in
fildll
or
ds
dec
in
cwtl
jg
out
aaa
jae
mov
pop
xchg
lods
sub
test
sarb
dec
popa
or
cld
int
mov
mov
rolb
js
cmp
jecxz
enter
dec
inc
mov
pop
pop
lea
clc
xor
cmpsl
cmpl
stos
jmp
dec
and
push
push
push
xor
ss
adc
fildl
fcomip
frstor
sub
and
lcall
std
xchg
cltd
jnp
pop
decb
clc
lahf
fisubs
inc
call
inc
xor
cmp
xorb
lea
sti
xor
pop
fadds
sbb
or
shlb
and
shlb
add
or
mov
out
sub
sbb
push
sti
adc
xchg
sbb
mov
sbb
push
les
decl
adc
cwtl
cmp
nop
jae
sbb
push
outsl
dec
stos
mov
inc
xor
ret
fldcw
inc
inc
decl
pop
mov
bound
stc
sub
jne
jg
push
push
dec
lcall
cld
fs
adc
cmp
lods
ds
repz
sbb
inc
pop
pop
inc
push
mov
xor
push
add
jge
push
adc
xchg
rolb
sbb
fnsave
cmp
or
std
or
mov
xchg
pusha
ds
fcomps
jmp
adc
lcall
adc
mov
std
mov
adc
inc
in
push
pop
jp
ds
dec
fldl
roll
repz
dec
xor
mov
adc
arpl
pop
sub
dec
mov
jb
dec
je
outsl
ret
mov
clc
add
and
pop
push
into
dec
cmp
inc
icebp
cld
push
adc
jne
pop
inc
pushf
jmp
icebp
cmp
push
push
pop
sub
out
jae
imul
pop
and
sahf
jge
xorl
add
adc
in
pusha
gs
inc
cmp
dec
jmp
out
inc
sbb
xchg
dec
mov
mov
movsl
push
mov
test
pop
daa
cmp
mov
in
stos
pop
sbb
js
mov
dec
int3
mov
sbbb
les
hlt
add
add
xchg
jae
fcomip
dec
ret
mov
test
hlt
xor
inc
xchg
dec
scas
sub
movsl
rcrb
and
fstpl
mov
push
and
xchg
in
dec
insl
adc
sbb
loope
inc
xor
iret
mov
or
and
mov
dec
push
pusha
or
dec
add
leave
fcompl
push
push
mov
pop
sahf
out
in
notb
js
add
xor
lret
into
cltd
mov
movsb
imul
or
ret
cmp
jp
out
inc
ja
popa
mov
mov
test
sub
dec
call
mov
sub
je
pop
mov
mov
jg
pop
out
xchg
ret
addr16
or
sub
or
pop
cwtl
jge
sti
cmc
fwait
or
loope
cs
inc
push
bound
or
pop
lret
invd
add
xor
mov
push
fwait
add
scas
in
icebp
sbb
orb
mov
xor
pushf
xchg
push
add
add
mov
xor
dec
cmp
jmp
xor
lods
mov
fld
or
sbb
xor
dec
push
das
cmp
mov
or
lret
cltd
rorb
or
jecxz
flds
call
add
xchg
add
int3
xor
jno
mov
push
cmp
and
ds
scas
adc
jmp
pushf
and
ds
inc
or
jg
push
inc
ret
adc
and
repnz
cmp
cmpsb
pop
add
lds
imull
adc
gs
mov
add
jge
cmpsb
mov
movsb
push
jecxz
ret
dec
lret
cmp
adc
loop
aas
lds
or
and
dec
outsl
mov
sbb
stc
xor
cmpsl
sahf
pop
cmp
mov
pop
cld
cmp
push
ss
test
insb
xor
pop
outsl
inc
loop
inc
xor
and
push
frstor
mov
sub
dec
jle
and
in
insb
mov
sub
mov
lock
std
dec
mov
cmp
ds
fabs
imul
add
inc
add
test
xchg
mov
lcall
decl
cmp
push
sbb
sbb
xchg
adc
sbb
fmull
insb
inc
push
pop
and
cmp
outsb
pop
fiadds
loopne
dec
icebp
mov
add
out
popa
add
push
aad
out
pushf
bound
pop
fsubr
in
roll
jg
std
adc
adc
popf
or
add
dec
subb
icebp
imul
loopne
xor
push
enter
lahf
fwait
add
hlt
pop
cmp
mov
repz
sub
lahf
mov
sub
push
ds
stos
int
aad
in
dec
xor
hlt
push
lahf
jge
test
push
xor
pop
push
push
or
sti
xor
jnp
jmp
iret
andl
sub
cmp
xchg
jmp
in
test
mov
pop
cwtl
insl
lret
pop
insb
aaa
repz
rolb
out
push
cmpsb
dec
incl
notb
cmp
bound
loopne
arpl
cmp
adc
icebp
mov
inc
sbb
sub
ds
mov
lcall
cmp
cmc
cli
sub
in
push
xor
sbb
cmp
xor
pop
jmp
xchg
push
notb
aaa
sbb
rorb
adc
ljmp
call
xchg
popf
xchg
icebp
mov
mov
test
insb
push
and
cmp
mov
loope
lods
movsl
ds
add
mov
xor
lds
mov
add
add
xchg
imul
jne
inc
pop
cmp
jae
xor
push
insl
sub
ds
iret
loop
lods
daa
inc
dec
or
bound
leave
jmp
dec
adc
ror
movsl
movsb
mov
mov
sti
xor
jbe
and
lods
outsl
push
fisubrs
lahf
notl
jg
inc
cmp
add
and
pop
or
lret
data16
lret
js
jge
andb
and
fistps
movsb
sbb
fistpll
loop
adc
dec
jns
pop
fidivrs
notl
arpl
flds
je
pop
ficompl
call
fadds
pop
sbb
add
mov
cld
rcrb
orl
mov
daa
mov
outsl
cwtl
inc
and
jns
ret
and
add
sub
push
lds
bound
sbb
inc
cmpsl
jl
movsl
jle
add
dec
pop
xchg
subl
mov
imul
rcrl
ja
out
mov
sub
daa
lds
push
lahf
push
sub
icebp
cmp
add
adc
ds
sub
add
and
jle
data16
test
and
push
ret
cwtl
mov
push
pusha
jmp
es
aad
mov
push
shll
inc
rcrb
ds
mov
xchg
scas
js,pt
push
xchg
sbb
sahf
enter
and
mov
movsl
mov
add
adc
jecxz
or
adc
push
dec
sub
pop
inc
and
push
ss
das
fldt
sub
roll
test
addl
stc
adc
sub
test
and
fdiv
jmp
jp
fwait
dec
xchg
sub
stos
or
lods
xor
add
into
shll
sub
stos
sbb
mov
pop
adc
inc
popa
clc
mov
xlat
sub
inc
movsl
fidivs
pop
pop
xlat
pop
mov
mov
mov
pop
mov
or
mov
jbe
testl
in
cmp
mov
xor
cltd
and
mov
inc
stos
push
jmp
cmpsb
cmpsb
loopne
mov
pusha
jns
jae
mov
test
ljmp
add
add
ds
pushf
ficoml
test
out
cmp
dec
xor
daa
outsb
mov
and
daa
adc
pop
sahf
mov
imul
lret
lcall
mov
lcall
inc
adc
xchg
hlt
or
in
pop
xchg
mov
test
xor
insb
sub
mov
xchg
inc
iret
stc
stos
iret
mov
sbb
fisubrl
sti
xor
outsl
ja
mov
loop
pusha
movsl
lods
and
jecxz
or
mov
inc
ss
mov
sbb
cmpsb
jo
pop
or
sbb
mov
sub
jb
and
lods
lea
mov
imul
mov
or
mov
add
popf
jp
mov
sub
ret
lods
push
mov
xchg
jle
ljmp
sub
sbb
add
push
out
and
mov
ds
add
push
imul
mov
orl
ficoms
gs
arpl
in
xor
movsl
or
mov
cmp
mov
addr16
dec
xor
loope,pt
dec
push
scas
xor
insl
ss
adc
pop
dec
jg
lcall
les
popa
xchg
pushf
jb
rorb
sub
dec
lahf
xlat
setns
pop
sub
stos
loop
sbb
xchg
mov
rep
lock
aam
or
push
xor
mov
xchg
lods
add
mov
mov
sbb
and
adc
repz
mov
adcl
xchg
stos
pop
aas
push
mov
stos
inc
jae
push
insl
popa
push
popa
xor
mov
lods
sbb
cltd
jnp
out
hlt
bound
movsb
sti
mov
or
shrb
ljmp
sahf
adc
pop
cmpsb
sbb
jae
mov
pop
jecxz
xchg
cmp
pop
jmp
sarl
mov
push
sub
in
pop
cmp
jne
fmull
jle
jb
push
adc
push
into
ret
cmp
ja
jo
mov
or
lea
popf
fimull
xchg
dec
out
arpl
inc
mov
jle
push
add
leave
rclb
jmp
pop
add
cld
jns
cmp
sbb
push
jb
clc
mov
add
dec
sbb
add
popf
pop
sbb
cld
clc
shrb
jl
aam
dec
sbb
daa
icebp
and
stc
cmc
or
add
andb
and
jns
lret
loopne
cmp
inc
ret
jns
andl
sbb
insl
xor
mov
mov
pop
lahf
aaa
push
and
sar
leave
in
loop
pop
add
test
test
pop
pushf
mov
inc
ds
rolb
jg
add
sbb
jecxz
pop
fistl
cld
les
adc
pop
push
loop
mov
ds
add
pop
fdivs
fs
push
sbb
xchg
fsubr
and
lcall
and
or
cbtw
or
movsl
cs
mov
movsb
jae
add
dec
mov
gs
xor
fwait
lcall
xor
pop
mov
cltd
add
xchg
sbbb
add
mov
cmp
add
in
mov
or
or
adc
jp
or
pop
nop
rorl
sub
adcl
jb
hlt
movb
jle
cmp
mov
loopne
test
adc
cmp
or
scas
flds
sbb
xor
inc
wbinvd
test
fimuls
jo
add
in
add
subl
mov
aaa
xor
addb
mov
pop
adc
and
ss
jecxz
addl
or
add
xchg
push
or
dec
cmp
rcrb
test
push
adc
adc
mov
adc
pop
mov
adc
lret
adc
push
addb
addl
xchg
add
pop
fwait
xchg
add
nop
adc
aad
xchg
sbb
sbb
and
sbb
add
push
sbb
andl
or
xchg
push
sbb
sub
add
push
inc
popf
adc
xchg
dec
adcl
xchg
inc
sbb
xchg
xchg
fwait
xchg
or
cmpsl
mov
lea
push
adc
inc
cwtl
cmpb
sbbl
add
adc
push
add
add
xchg
xchg
xor
adc
push
xchg
add
mov
xchg
fwait
push
sub
or
xchg
sbb
mov
es
xchg
cmc
add
rolb
or
lcall
and
push
addl
push
mov
push
fwait
addr16
pusha
orb
pop
mov
fwait
add
popf
xchg
or
inc
add
lds
mov
cmp
sti
add
sub
loop
adc
jnp
popa
sahf
xchg
movl
cwtl
ffree
popa
xor
ja
in
inc
mov
add
mov
mov
xor
je
pop
ds
movsl
sbb
sti
fcoms
lds
adc
cmc
cmpsl
push
or
gs
cli
adc
pop
pop
and
faddp
out
jl
scas
sbb
aaa
xchg
add
pop
or
pusha
bound
pop
pop
cli
ret
ret
pusha
lcall
xor
mov
bound
icebp
setl
pop
xchg
aas
scas
jno
pop
push
push
popf
xlat
negl
mov
push
int
ffree
loop
ljmp
addl
addl
cmp
mov
roll
mov
cmp
arpl
or
rcrb
fcomp
jno
cmp
cmp
cmpl
push
cmc
jns
push
and
fsts
push
pushf
or
sub
in
mov
ljmp
cmp
fsincos
out
xchg
inc
divl
sub
inc
scas
mov
scas
push
inc
fistl
push
scas
inc
xchg
mov
mov
mov
dec
mov
add
jbe
xchg
inc
push
mov
sub
mov
loopne
fidivrs
pop
fsubr
adcb
aad
add
mov
mov
push
movsb
pop
dec
stos
ds
nop
dec
fsubl
sub
add
cmp
jg
bound
dec
cltd
adc
stos
orb
add
daa
aas
dec
into
sub
dec
mov
push
pop
loopne
lret
inc
out
aas
fmull
sbb
roll
jb
fnstsw
xchg
insl
push
mov
inc
jbe
je
jae
inc
ss
lock
pop
arpl
lret
popa
sub
stos
lret
jmp
test
xchg
stc
bound
in
notb
pusha
lret
lcall
out
cli
mov
jnp
jnp
adc
sarl
sahf
add
pop
mov
fwait
inc
inc
rorb
jb
and
xor
mov
loope
and
dec
test
sbb
movb
pop
nop
mov
cmp
push
jns
orl
jmp
sti
sub
push
pop
cwtl
rclb
sub
add
cs
xchg
dec
out
push
mov
xchg
roll
cmp
and
pop
mov
cmpsb
nop
or
jmp
cmovg
js
lea
add
push
clc
or
push
stos
xor
push
cmpb
mov
push
fisttps
lods
jne
test
vmovntps
divb
pop
in
sahf
dec
test
popf
dec
repz
sbb
sbb
pusha
add
movsb
dec
int
pushl
cmp
push
sbb
jns
pop
repnz
sub
and
bound
repz
fldt
push
aad
aas
mov
test
cltd
sbbl
outsb
xchg
xlat
test
inc
insb
iret
xor
sub
and
dec
adc
sub
cli
call
mov
sbb
loopne
inc
push
lahf
cli
pop
or
aam
inc
xor
push
sbbl
push
loop
mov
sbb
hlt
ja
daa
jns
sbb
jae
addr16
ficoms
iret
add
mov
inc
sbb
sbb
insb
jnp
or
cmp
push
in
adc
xchg
xchg
loopne
cli
push
push
int
shll
mov
xchg
fxtract
loop
pop
popa
xlat
jne
rol
jne
lret
rcll
add
pop
mov
repz
fs
or
xor
js
movsl
mov
dec
push
and
mov
mov
jp
in
loop
mov
sbb
mov
incb
pusha
jmp
divl
pop
lcall
pop
adc
push
mov
dec
inc
adc
sbb
pop
loope
mov
xchg
test
push
jge
inc
ds
nop
xor
mov
arpl
inc
pop
jecxz
cmp
push
push
adc
fxch
incb
cmp
loop
negl
fstpt
test
sub
inc
lret
xchg
xor
loop
inc
sbb
in
test
and
or
push
jae
or
or
bound
or
push
lea
cltd
aad
sub
push
imul
int3
xor
jbe
pop
ret
shrl
add
fistpll
mov
push
ret
push
loope
lcall
and
jge
iret
movsb
pop
sbb
adc
cmp
push
pop
lcall
mov
bound
lods
and
ljmp
icebp
in
adc
mov
xor
inc
into
movsl
cmp
mov
adc
mov
repz
je
dec
add
lods
addl
fdivrs
lods
xor
sub
dec
dec
cmp
adc
adc
or
sbb
sbb
mov
call
or
push
add
cmp
mov
cmp
enter
xor
pop
pop
rorl
mov
imul
pusha
es
jbe
push
fnsave
dec
js
or
or
je
sbb
adc
out
push
ret
push
dec
pop
add
push
jge
cmp
pop
adcl
lret
aaa
ret
ja
push
nop
ds
mov
ret
arpl
sub
aam
mov
mov
cld
addr16
mov
clc
sub
iret
and
jl
pop
mov
arpl
mov
cmp
lcall
pop
fsts
inc
lret
xchg
mov
fwait
xlat
mov
loop
xor
in
insl
ja
and
jo
subl
sbb
push
push
mov
push
aad
pop
jno
xchg
inc
push
fmulp
loopne
jne
inc
jmp
xchg
mov
and
std
test
testl
pop
mov
or
mov
push
stos
and
loopne
test
ljmp
dec
arpl
aaa
mov
jl
test
test
inc
xor
js
fs
mov
inc
loop
cmpsl
outsl
sbb
gs
cmpsb
mov
aas
imul
add
jle
cmp
mov
jb
lret
arpl
and
mov
or
jecxz
in
jle
cmpb
ljmp
imul
jg
lock
mov
imulb
cmp
setno
decb
inc
dec
mov
int3
stc
mov
sti
in
std
inc
pop
js
das
inc
xchg
ds
xor
mov
lds
cmpsb
ljmp
movsb
mov
mov
xchg
sbb
roll
adc
adc
out
push
push
out
xchg
sbb
je
sbb
lds
inc
int3
xor
sub
pop
pusha
xor
fwait
jnp
dec
scas
sti
ret
and
cmp
jp
ss
cld
and
test
loope
mov
sbb
or
stc
add
push
push
aad
hlt
js
push
filds
imul
xor
adc
jp
mov
push
mov
jp
fists
andb
rolb
pop
inc
adc
fnstsw
int3
aam
jne
inc
ficoms
frstor
push
fsubl
pop
std
test
mov
adc
jns
mov
stos
test
inc
jl
lea
dec
mov
orb
push
fists
push
lcall
xchg
sti
inc
mov
and
jbe
stos
dec
lret
inc
pop
fstpt
cmp
and
or
sbb
lods
xor
negl
xchg
mov
push
jae
frstor
sarl
xlat
in
daa
mov
sbb
mov
xor
or
outsl
shll
mov
adc
pop
jecxz
test
in
mov
inc
cmpsl
arpl
data16
test
jbe
mov
jp
rcrl
dec
adc
les
adc
frstpm(287
lods
lcall
xor
in
aaa
or
daa
xchg
test
xchg
and
pop
std
push
push
or
push
in
cmp
ds
sbb
hlt
cmp
addl
mov
loope
sub
lods
or
mov
insl
dec
push
sub
push
xchg
negb
sub
leave
jno
lods
mov
sbb
sahf
int
jnp
je,pt
sub
jne
pop
or
movsl
loopne
cmp
ret
call
loopne
in
xchg
sub
addl
or
push
jae
sub
or
pop
pushf
sbb
aas
push
mov
sbb
jmp
and
add
std
cmp
mov
scas
inc
add
mov
fwait
add
icebp
add
push
add
cmpl
mov
add
or
lcall
arpl
inc
pop
imul
or
ljmp
jne
movsb
adc
add
rcl
adc
flds
popl
add
xor
push
push
push
adc
xchg
adc
sub
mov
xor
add
sub
xchg
dec
adc
mov
pop
jno
cmp
cltd
add
insl
loope
aas
pop
adc
lret
add
rolb
xchg
imul
push
push
inc
sbb
mov
int3
test
popf
push
and
pop
mov
popl
pop
push
add
out
or
lret
mov
xlat
dec
pop
mov
dec
int
or
sbb
test
and
lds
pop
sub
mov
lea
lea
sbbl
frstor
inc
inc
in
mov
add
sub
xchg
or
sahf
sub
lds
adc
add
shlb
inc
add
pop
jnp
or
rclb
mov
ffree
adc
out
int
xor
test
ret
xchg
adc
lock
sbb
gs
add
or
xor
adc
push
mov
addb
xchg
cmp
sbb
and
add
add
arpl
leave
or
or
fcmove
add
orl
leave
xchg
sub
fwait
xor
dec
and
adc
and
je
cmpsl
push
int
sbb
sbb
xchg
cltd
sbb
push
out
pop
dec
arpl
popf
sub
idivb
jne
inc
cmp
mov
jo
rolb
mov
and
sarl
loop
testl
dec
and
push
mov
push
xchg
adc
sbb
cmp
fwait
sbb
bound
sub
ja
out
fildll
clc
jb
sub
sub
lea
data16
jmp
daa
mov
lcall
mov
push
and
cltd
xchg
loop
jns
push
xor
negl
imul
add
xchg
je
cltd
arpl
imul
dec
and
push
sbb
dec
adc
jp
push
in
xchg
xor
test
int
add
push
push
push
ficoml
dec
ds
outsb
xchg
div
leave
les
out
sub
fldenv
out
cmp
dec
xor
loop
push
mov
and
and
jg
add
xor
mov
pusha
add
xchg
xor
jne
and
fwait
add
pop
out
jl
push
mov
dec
rolb
push
lahf
shl
cmp
cmpsb
add
lcall
or
clc
das
fstps
jecxz
and
scas
arpl
in
cmp
jae
push
jmp
cli
insl
or
mov
add
push
mov
push
inc
mov
push
add
fs
popa
jmp
ljmp
fisttpll
xchg
std
xchg
ds
repz
cwtl
mov
fwait
movl
int
push
test
lock
cmp
aas
mov
and
nop
cmpxchg
cmpsl
push
jle
dec
jb
popf
imul
pop
dec
sub
pop
gs
arpl
fists
out
push
sbbb
fstl
add
cld
dec
test
divl
dec
add
add
cmp
adc
aas
loope
push
stos
mov
lock
fwait
pusha
stc
cli
movsl
inc
push
movsb
ret
jnp
xchg
inc
imul
daa
add
dec
jg
inc
dec
cmp
repnz
xor
mov
nop
adc
xlat
js
int
adc
mov
push
scas
mov
loop
dec
push
inc
pop
push
dec
inc
stos
xor
in
lods
cmp
orl
mov
mov
cmp
pusha
cltd
mov
xor
adc
dec
out
mov
mov
mov
mov
cltd
mov
gs
cld
pop
jecxz
rcrb
pop
and
loopne
or
pop
and
ljmp
pop
mov
out
inc
inc
push
pop
cmc
push
leave
adc
inc
fimuls
or
add
clc
push
and
inc
shlb
mov
and
push
lret
insl
push
iret
les
mov
repnz
lret
call
imul
jae
pushf
scas
ds
fwait
cmp
loopne
out
mov
stos
sub
incl
stos
mov
arpl
xor
cmp
mov
or
jne
jecxz
daa
jb
sbb
out
mov
add
xchg
xor
outsb
mov
cmp
pop
pop
bound
loopne
lea
nop
pushf
in
lret
jmp
sub
ja
cmp
cmp
or
insl
cld
aaa
subl
hlt
iret
test
andb
nop
sub
mov
pop
cltd
adc
sbb
ja
sbb
dec
cmp
rcr
data16
in
enter
inc
push
sbb
popa
idivl
into
ljmp
ds
ljmp
imull
es
clc
inc
pusha
push
inc
mov
mov
jge
push
out
in
add
ds
or
lret
mov
sbb
testb
sub
mov
xchg
inc
mov
add
push
sarb
sub
push
ss
dec
imul
add
xlat
pushw
out
xor
dec
sbb
push
int
pop
daa
sbb
jbe
jbe
ja
or
out
dec
je
ret
test
mov
xchg
lds
sub
cmp
jl
test
out
cmp
shll
jnp
in
mov
mov
std
xchg
lods
add
shll
rorb
cs
and
test
xchg
daa
cli
les
cmc
pusha
or
inc
sbbl
add
xor
dec
xor
push
xchg
repnz
fs
pop
jecxz
rcll
popf
push
push
sbb
xor
fwait
lahf
jge
adc
lret
xchg
lret
dec
stos
adc
add
push
ds
mov
xlat
or
push
mov
mov
mov
pop
dec
loopne
lods
loopne
pop
mov
pop
cmp
lock
jno
lret
xor
add
clc
adc
pop
inc
lret
pop
mov
fsubs
push
hlt
inc
pop
add
mov
and
cwtl
fdivs
add
cmc
or
bound
lret
jne
inc
divl
mov
adc
mov
mov
cld
adc
cld
mov
mov
xchg
push
xor
lock
das
jb
mov
and
es
dec
in
loopne
jg
cmc
enter
out
mov
inc
enter
addr16
push
loop
lret
push
xor
push
clc
sub
stc
mov
or
and
push
adc
inc
js
cmp
addl
mov
adc
clc
pop
icebp
cmp
sub
mov
jge
out
adc
mov
adc
popf
adc
mov
roll
aaa
inc
mov
dec
dec
cmp
jmp
adc
or
push
out
test
mov
fsubs
scas
xlat
mov
daa
out
out
and
out
mov
and
or
pushf
movsb
clc
inc
aad
movb
dec
sub
jns
jno
sbbl
lock
fcompl
sbb
xchg
int3
imul
jo
das
inc
imul
adc
sti
mov
pop
imul
xor
cmp
mov
add
jmp
sbb
mov
and
and
jmp
mov
rcrl
xchg
in
add
sub
cmpsl
popa
rolb
adc
adc
and
and
enter
push
rclb
sbb
jg
pop
aas
nop
repnz
adc
or
sbb
add
add
add
and
pop
adc
adc
or
repnz
les
in
inc
add
push
lea
sub
seto
rorl
popf
add
adc
ud2
mov
sub
orl
adc
xchg
push
push
add
push
mov
or
push
pop
orl
xchg
mov
addb
push
pop
inc
fwait
and
push
xchg
adc
sbb
add
adc
and
push
sbb
ficomps
adc
or
add
pop
inc
add
orb
jns
or
xchg
pop
adc
cmp
adc
xchg
lret
test
dec
adc
inc
test
or
push
xchg
popf
xchg
xchg
sbb
cmovns
sub
or
xchg
and
repnz
add
lods
fisttps
push
add
push
sub
test
test
xchg
add
dec
add
rclb
push
fwait
inc
add
pushf
add
push
mov
adc
test
sbb
std
adc
add
addb
xchg
adc
orl
add
or
jg
or
push
xchg
add
mov
add
loopne
lea
adcl
mov
adc
jno
and
movsl
cwtl
test
push
add
inc
pushf
mov
dec
add
add
sub
stos
cwtl
sbbl
sbb
inc
sbb
mov
lods
add
xchg
and
or
pop
inc
sahf
adcl
mov
and
xchg
or
xchg
inc
cltd
inc
push
and
leave
pop
sbb
adc
jae
push
test
xor
xor
xchg
inc
add
add
and
adc
mov
push
jg
dec
les
jns
or
push
push
sti
jbe
or
movsl
loopne
mov
mov
jne
sbb
push
jmp
add
or
and
mov
mov
mov
mov
sar
xor
adcb
push
inc
std
xchg
push
sbb
jne
xchg
loop
dec
jns
sbb
mov
jne
adc
sbb
mov
ds
adc
and
shr
and
dec
ds
outsb
inc
xchg
mov
mov
test
and
pop
or
mov
push
jmp
vsqrtps
xchg
mov
lock
jge
mov
imul
lods
pop
divb
add
pop
adc
sbb
or
cmp
aas
outsl
clc
inc
mov
mov
mov
in
inc
aad
mov
pop
jp
adc
gs
das
shll
aaa
cmp
jns
pop
add
push
int
out
push
adc
faddl
loopne
idivl
frstor
loopne
in
sbb
out
mov
mov
cs
fldl
jnp
ret
sub
and
sbb
xlat
sbb
mov
mov
or
fwait
int3
mov
cmpsl
fbld
cltd
out
adc
cwtl
sub
js
lcall
add
inc
add
xor
into
pop
pop
fidivs
pop
loop
ret
lahf
inc
sbb
call
pop
push
test
cmp
add
enter
je
rcrb
mov
adc
fwait
dec
xor
ds
cwtl
sub
cmp
movsl
test
push
pop
lods
lret
add
cwtl
and
les
subb
and
push
and
pop
sbb
adc
push
mov
cmp
pop
addb
xchg
jmp
aad
es
int
incl
js
insb
sbb
addr16
aad
out
jbe
mov
arpl
js
scas
or
cs
lods
das
jmp
push
cmpsb
pop
xchg
popa
push
scas
mov
cld
adc
push
or
mov
adc
pop
lods
add
outsb
pop
sbb
add
xchg
cli
jle
and
mov
cmp
test
push
and
pop
popa
hlt
pusha
mov
lods
shlb
cmpsb
pop
pop
xor
lods
add
sbb
clc
adc
xor
cwtl
mov
push
mov
es
test
jmp
xor
lcall
fadds
das
jbe
mov
push
test
les
rorb
xchg
sbb
movsb
loop
mov
cmpsb
icebp
adc
xchg
sti
or
pushf
out
cmp
dec
out
sub
pop
movsl
addl
pop
sub
ss
lods
pop
xchg
xor
mov
sbb
sbb
icebp
mov
popa
sti
jl
out
mulb
jp
add
cmp
rolb
dec
nop
cld
or
xchg
jno
sbb
push
inc
xchg
dec
and
sbb
repz
inc
mov
push
je
cmp
and
cmp
xchg
mov
lcall
mov
and
or
addr16
jl
fwait
xor
mov
mov
aas
lds
pusha
mov
cmp
jbe
mov
mov
lods
or
loopne
mov
out
sub
push
or
ljmp
pop
mov
xchg
xchg
sub
ret
push
xchg
scas
lods
incl
mov
ds
xchg
fnstenv
sbb
sahf
or
ret
icebp
sbb
jae
sbb
cmp
loopne
cmp
lcall
push
xor
inc
mov
frstor
pop
ss
mov
mov
andb
into
pavgw
xor
testl
es
insl
pop
test
mov
inc
sub
push
and
push
adc
cmpl
insb
cmpsl
and
cmp
add
or
ljmp
pop
inc
inc
loop
push
jecxz
inc
mov
in
scas
sub
add
in
sbb
push
rcr
adc
rolb
pop
cmpsl
sbb
add
fisttps
push
inc
or
mov
mul
jne
scas
inc
mov
inc
out
inc
flds
in
cmp
mov
mov
adc
or
mov
mov
add
adc
cmp
and
testl
out
mov
daa
add
dec
icebp
lock
cmp
and
std
out
cmp
andb
lret
fwait
push
cld
inc
fwait
push
rcrb
xor
call
jbe
mov
sbb
mov
repz
or
and
ss
pop
cmpsb
pop
adc
hlt
rcrb
imul
mov
push
xchg
cmp
mov
push
or
inc
pusha
shlb
and
bound
xor
mov
xchg
shll
mov
sbb
pop
andl
push
out
pusha
js
js
or
jo
inc
and
jns
dec
test
outsb
sub
loop
lods
mov
mov
jae
adc
sub
out
out
sbb
xchg
sub
movl
test
les
inc
xor
and
mov
fucom
cmp
repnz
stos
je
fadds
stos
sub
out
sbb
sbb
lods
stos
push
xchg
mov
dec
es
and
xor
icebp
mov
mov
lret
sub
xor
cli
or
push
in
dec
filds
pop
or
jnp
jg
lods
add
stos
adc
ret
mov
pushf
lahf
fiaddl
outsb
test
aas
adc
loopne
push
aam
sub
stos
orb
mov
inc
sub
jle
pop
lods
jge
lret
mov
imul
xor
cmp
sbb
cmp
or
repz
mov
ds
cmpb
ds
lret
and
xchg
sub
cmp
xchg
out
mov
clc
fwait
popf
pop
out
sub
jae
xchg
xchg
fisubs
cmp
int3
std
jecxz
pop
dec
xor
sub
fsubs
mov
imul
in
or
out
mov
lcall
imul
inc
mov
insl
test
js
inc
add
xor
dec
pop
in
cltd
push
push
mov
lret
adc
cmp
pop
mov
das
mov
mov
addr16
icebp
mov
jge
push
mov
js
sbb
push
out
mov
dec
ret
and
arpl
push
lret
rcll
outsl
jns
push
jmp
nop
jae
dec
lcall
sbb
push
push
add
jecxz
mov
inc
or
bound
add
jg
dec
and
fldt
mov
sub
rcll
mov
sbb
push
dec
ret
mov
and
popf
ss
in
subb
cmp
xchg
mov
incb
cmpsl
outsb
sahf
not
adc
xchg
fsubs
sbb
cmpsb
cmp
imulb
inc
mov
dec
or
ret
hlt
mov
outsl
sub
pop
sub
or
xor
mov
cltd
cmpsl
pop
xchg
int3
mov
imul
mov
js
mov
mov
adc
adc
ficoms
or
decb
cmp
movsb
xor
inc
lret
call
xchg
jl
inc
cwtl
or
jbe
pusha
ds
sahf
lea
stos
inc
cli
in
mov
stos
mov
cmp
mov
bswap
testl
call
pop
inc
arpl
es
or
push
imul
and
pusha
and
out
xchg
outsb
test
pop
in
push
movsl
pop
fsubrs
shr
fcmovne
fcomip
dec
fistpll
clc
inc
enter
pop
jno
sbb
mov
push
and
cmovle
aaa
into
out
push
inc
mov
addl
or
popf
inc
cmp
and
out
imul
arpl
scas
push
cmp
cmp
sub
add
aad
cltd
mov
in
int
sub
leave
test
push
pop
add
pop
or
dec
push
and
leave
inc
sub
lret
push
aad
out
push
pop
or
mov
xor
xlat
cmpsb
xor
lock
flds
mov
add
and
out
adc
jae
push
movsl
xchg
xchg
inc
xchg
aas
lahf
dec
test
xorl
jmp
xor
dec
testl
hlt
cmp
cmp
inc
imul
push
ds
xor
jmp
in
out
imull
filds
cltd
lea
daa
out
leave
jle
loopne
insl
or
pop
xchg
add
lret
pop
aas
out
inc
fcompl
xor
test
pop
adc
movsb
shl
scas
xchg
test
or
sbb
xchg
dec
xlat
mov
push
dec
push
movsl
xchg
dec
test
jecxz
in
jne
sbb
pop
lock
push
push
and
stc
arpl
ficompl
aad
pop
stos
mul
nop
mov
dec
ret
cmpb
pop
push
or
fidivrl
inc
or
shrb
leave
loop
mov
sbb
add
jae
inc
cli
ds
mov
dec
dec
sub
cmp
inc
jnp
inc
je
pop
ds
sub
xchg
inc
pop
ljmp
out
std
mov
hlt
mov
test
add
popf
fistpl
dec
pop
and
cmp
pop
sub
or
adc
ss
fucom
push
jne
stc
push
push
incb
push
adc
loopne
mov
jno
add
std
inc
or
xchg
xchg
in
push
cwtl
or
andb
jb
or
out
mov
stc
push
fwait
mov
ds
inc
xor
shlb
push
out
in
outsb
insl
sbb
inc
inc
inc
cwtl
fwait
addl
pop
add
inc
add
lcall
leave
jecxz
enter
out
insl
and
jmp
mov
movsl
jp
inc
jp
neg
dec
jmp
sub
and
shl
stos
popf
test
and
inc
or
cmp
sub
jne
fildl
sahf
popf
sbb
in
jg
scas
xor
inc
and
adcl
nop
add
adc
jae
or
out
sbb
jns
ds
sbb
or
lcall
cmc
mov
ss
clc
out
mov
sub
ret
imul
inc
in
int3
cltd
push
dec
cmc
jl
pop
call
adc
push
in
in
imul
mov
enter
and
xchg
int
aas
pop
sti
or
stc
inc
adc
push
mov
rclb
subl
iret
add
push
les
pop
ret
cltd
mov
subb
hlt
jo
loopne
loop
mov
into
int
lahf
notl
jmp
cmp
add
pop
addb
daa
cltd
pushf
pusha
and
or
pop
mov
pop
hlt
pop
push
cmpsb
add
pop
jo
xchg
cmp
or
push
mov
in
cmp
jb
ja
fisubrs
inc
pusha
pushf
mov
fs
das
mov
into
stos
dec
mov
inc
lods
dec
movsl
incl
pusha
xchg
sub
xchg
sbb
movsb
movsb
call
fidivs
sbbb
xor
pop
in
cmp
fisttpl
xchg
xchg
add
jae
mov
movsb
mov
repz
leave
dec
lahf
sbb
xorl
in
imul
mov
jg
mov
push
adc
xchg
in
fldl
xchg
inc
out
mov
sbb
push
lcall
cmp
bound
push
sbb
flds
sbb
outsl
cmp
test
cltd
adc
xor
sbb
lret
lds
lret
and
xchg
jno
push
mov
add
add
adc
outsl
pop
xor
js
ret
xchg
imul
sbb
mov
fistl
xchg
mov
js
mov
clc
xor
push
inc
pop
test
dec
addr16
out
lahf
push
or
gs
add
cmp
push
popa
mov
add
fcomp
in
lods
loope
fdivrs
and
push
outsb
aaa
push
push
out
les
rcr
icebp
mov
push
pop
jmp
xchg
mov
in
push
dec
into
inc
mov
mov
xor
inc
cli
adc
aaa
xor
movb
adc
pop
sbb
or
xchg
gs
cs
pop
jnp
orb
sub
pop
xchg
dec
fs
and
mov
lea
and
sbb
or
sub
dec
mov
aad
fwait
mov
inc
mov
or
sarl
sub
dec
mov
je
push
or
lock
jecxz
sub
into
shlb
inc
ret
sbb
jo
mov
test
jne
lahf
sahf
or
pop
mov
out
mov
jg
xlat
negb
xchg
lahf
jmp
xchg
lcall
inc
sbb
and
dec
pop
push
nop
push
mov
mov
push
fidivl
lahf
stos
pushl
aas
mov
cli
xlat
ret
mov
sub
push
popf
call
inc
dec
mov
and
out
sti
push
loopne
add
add
cmp
ja
out
faddl
lock
orl
idivl
dec
ffreep
inc
mov
xchg
push
mov
hlt
push
bound
aaa
mov
pushf
jecxz
mov
insb
repz
int3
xchg
sarb
push
add
fs
dec
inc
jae
cmp
sub
out
cltd
cmp
imul
lret
lds
addb
push
mov
sarl
inc
jmp
or
call
fdivl
subb
jbe
test
mov
pop
xlat
or
add
mov
pop
mov
jecxz
sbb
popa
xor
adc
test
mov
adc
int3
lds
cmp
add
fsubrs
xor
mov
dec
pusha
push
xchg
or
jae
cmp
lds
inc
cmpsb
add
inc
fimuls
fistpll
sbb
xor
into
xlat
sbb
or
xchg
push
sbb
cmpsb
lcall
rolb
and
jp
push
imul
jmp
test
dec
and
test
out
adc
mov
push
mov
add
xor
sub
dec
cltd
lret
movsl
xor
jmp
ds
rcrb
or
mov
lret
ljmp
mov
and
movsb
jb
and
dec
xor
loopne
xor
test
mov
add
popa
js
js
repz
aas
mov
es
xchg
cmp
and
call
adc
push
test
jecxz
in
sbb
mov
xor
mov
inc
sbb
dec
cmpl
mov
mov
test
in
and
insl
adc
xor
bound
jns
pushf
and
sub
cwtl
movsl
fmull
lods
lods
mov
sbb
inc
outsb
dec
das
add
and
sub
push
es
mov
cltd
xor
jb
lret
sub
popa
push
add
inc
std
xor
nop
mov
or
sub
push
movsb
push
xor
xor
jbe
and
jp
cmp
adc
iret
cwtl
pop
adc
push
adc
xor
enter
jne
inc
inc
loop
pop
ret
cmp
orb
inc
xchg
jge,pt
add
test
arpl
mov
in
fildl
arpl
jle
pop
cmp
lock
and
xchg
fmuls
call
adc
dec
push
cwtl
movsl
movsb
mov
bound
shl
adc
add
ljmp
push
mov
je
xor
mov
movsl
ret
inc
movsb
data16
stos
inc
aam
mov
fistpll
aas
loope
jne
in
sbb
ret
stc
enter
fs
xchg
das
hlt
adc
or
data16
push
iret
push
sbb
jmp
in
nop
pop
ret
dec
adc
inc
add
push
and
add
out
int
dec
rcrb
and
adc
or
push
push
xchg
imul
hlt
mov
push
into
inc
icebp
aas
loopne
xor
sbb
pop
ret
movsb
shrl
lcall
pusha
fsub
push
fadds
pop
xchg
int3
jnp
test
rep
cmp
int
cmpsb
out
or
and
mulb
repz
inc
adc
adc
sbb
or
test
cmpsl
or
xorb
jecxz
mov
iret
xchg
xchg
shll
sbb
add
int
cltd
mov
mov
sub
fwait
or
mov
sti
add
mov
cmp
jo
xor
pop
push
insb
cmp
loopne
cmc
xor
inc
ds
mov
ret
notb
push
inc
pop
sub
test
rcr
adc
movsl
push
inc
xor
rolb
cmpl
test
aaa
outsb
addb
ljmp
adc
and
test
push
test
mov
fsubl
xor
fsubrl
push
insl
pop
incb
inc
and
fistpll
and
or
aam
push
mov
decb
stc
cltd
rclb
sbb
dec
in
stos
add
mov
pushf
arpl
pop
and
mov
or
repz
add
sub
or
testl
or
push
sbb
sub
or
push
jnp
dec
add
pop
and
nop
ja
lret
out
and
xchg
inc
or
and
int
bound
xor
add
negb
shrb
sarl
sub
int3
in
and
mov
or
insl
sbb
icebp
cmpb
ds
push
pop
cmpsb
mov
xchg
nop
pop
inc
std
adc
mov
leave
jnp
jmp
in
cli
mov
fadds
add
add
sarl
mov
inc
sub
sbb
dec
cmp
mov
fdivr
aaa
dec
or
sbb
cmp
iret
ret
jp
cmpsl
pop
rcl
ficoms
aas
in
mov
in
pushf
cmp
cmp
pop
pop
xorb
push
aas
xchg
cmp
xchg
jle
lock
mov
inc
fnstenv
sbb
push
mov
pop
xchg
add
cmpsb
xchg
fiaddl
and
pop
inc
and
lds
mov
or
aas
xchg
out
cwtl
pop
fistpll
jae
mov
loope
lds
scas
imul
or
loop
subl
push
mov
fbstp
sbb
gs
imul
xchg
test
cli
dec
sbb
aas
and
xchg
arpl
xchg
mov
jbe
sub
std
jmp
sub
cmp
inc
clc
iret
sbb
jecxz
inc
leave
add
sbb
aas
popa
mov
add
fldcw
cmp
add
pusha
mov
scas
mov
pushf
repz
mov
les
add
cmp
xchg
dec
loope
dec
push
or
fs
std
pop
push
ret
and
add
add
xchg
sbb
add
xor
and
and
xchg
jnp
aas
cmp
orl
mov
pop
mov
sti
outsb
and
pop
out
adc
xor
aam
jmp
adc
cmp
jg
pop
mov
add
pushf
int3
and
add
adc
inc
loopne
push
push
jae
push
lret
arpl
jbe
jae
xchg
jns
cmp
jl
or
insb
icebp
mov
lods
nop
pop
in
ljmp
dec
popf
jp
dec
fwait
lcall
inc
inc
push
inc
ss
cmp
out
adc
sbb
push
cmp
pop
cmp
push
aas
inc
push
push
push
mov
push
or
jg
loope
push
jnp
push
inc
sbb
xchg
mov
push
pop
imul
xor
mov
cli
adc
std
cwtl
pushf
cmp
stos
jg
movsl
xor
and
arpl
and
xchg
pop
mov
sub
pop
test
stos
and
xchg
pop
push
mov
xorps
mov
rorl
in
sub
inc
adc
repz
sbb
shlb
call
or
ds
pop
ret
pop
dec
pop
xchg
and
data16
xchg
push
ret
call
sub
jbe
mov
inc
push
pop
cmp
pushf
imul
push
adc
leave
clc
loope
push
fnstcw
popa
add
cmc
imul
aam
xchg
or
or
xlat
aas
int3
push
lea
xor
dec
inc
push
mov
or
ljmp
lahf
out
mov
sub
jno
push
insl
notl
mov
fsub
pop
xor
out
push
adc
push
stos
cmp
mov
shl
stos
movsl
jp
xor
xchg
fwait
dec
pop
or
xlat
nop
pop
fidivrl
lods
test
mov
decl
mov
add
loopne
cltd
push
orl
xchg
and
test
jg
outsl
mov
add
or
movsl
inc
in
dec
xor
call
stos
ds
jne
adc
mov
or
xchg
repz
fldcw
push
std
dec
cltd
pop
xchg
pop
and
jp
ja
out
sbb
fadds
data16
in
lret
add
push
lea
cmp
pusha
push
add
mov
ret
nop
pop
lahf
lahf
push
or
cmp
or
lcall
sbb
mov
xor
mov
cltd
jb
loope
jnp
cwtl
sbb
negb
xchg
lret
sub
mov
pop
xor
mov
in
cmp
xchg
pusha
in
adc
aam
dec
cmp
jmp
aas
dec
or
insb
lods
pop
test
xchg
push
mov
ror
jno
sbb
push
insb
addb
loop
sbb
fists
mov
xor
fidivrl
pop
adc
xchg
sub
cmpsb
xchg
jecxz
leave
jbe
add
out
out
stc
pop
mov
fbstp
ljmp
and
sub
fwait
or
push
jb
ja,pt
sub
ret
sub
dec
inc
out
or
das
sbb
lret
test
lret
mov
call
xor
mov
bound
cmp
aaa
shlb
xchg
lret
cmp
pop
push
in
and
lret
sub
and
je
cmpsb
xchg
pop
insb
inc
shlb
push
inc
mov
mov
in
xor
cld
sub
addl
int
ja
mov
adc
movsl
push
or
sbb
push
movsl
xlat
rolb
sbb
mov
sbb
cmpsb
bound
sbb
mov
mov
mov
or
icebp
or
in
dec
movl
add
pop
adc
jbe
shlb
test
mov
adc
aaa
xchg
add
xchg
test
add
sub
xchg
pop
xor
jbe
mov
xchg
addb
sti
pop
fiadds
dec
cmp
cmc
rcrb
mov
leave
arpl
pusha
inc
out
fldl
scas
fld1
adc
or
xchg
add
or
sub
xorl
or
aaa
sub
or
push
das
jbe
cmovo
fimuls
rcll
sub
push
or
lcall
push
dec
cld
mov
push
or
add
and
je
jecxz
xchg
jmp
xchg
adc
jg
sbb
mov
xor
xchg
and
je
sti
stos
sbb
or
in
xor
test
mov
popf
bound
jg
lock
push
sub
mov
push
ss
cli
orb
jmp
icebp
aam
inc
in
mov
daa
shl
mov
jo
cmpsl
xchg
faddl
pop
rcl
addl
imul
jae
dec
ljmp
lods
ja
push
jbe
mov
or
addl
push
aam
sub
cmp
out
loopne
fsubs
scas
adcb
stos
or
dec
add
lret
push
roll
daa
js
adc
cld
icebp
push
loopne
sub
outsb
and
push
arpl
jecxz
loop
sbbb
in
scas
add
sub
in
cmpsb
pop
dec
mov
aam
or
es
jmp
pminsw
jg
xchg
mov
out
mov
call
push
adc
pop
loop
and
clc
iret
ljmp
inc
call
or
fistpll
pushl
loope
loopne
inc
fwait
and
mov
mov
repnz
mov
pop
sub
jp
pop
xor
test
ds
dec
ret
rcrb
jmp
aad
push
pop
pushf
xchg
setl
add
sbb
add
mov
and
cltd
pop
cmp
inc
jecxz
fmuls
adc
dec
divb
mov
arpl
dec
cli
push
mov
sbb
jbe
mov
ss
repz
mov
jmp
xorb
adc
insb
lds
sub
mov
ret
pop
js
outsb
and
pop
dec
in
fidivl
pop
into
push
jo
cltd
xchg
mov
movsb
pop
jmp
jmp
sahf
bnd
das
push
jbe
fildl
inc
or
into
mov
call
sbb
hlt
mov
pusha
adc
and
mov
ficoml
adc
sub
and
xchg
mov
shlb
or
cmp
outsb
pop
jne
in
inc
or
add
pop
push
ds
adc
mov
and
xchg
cmp
jns
mov
xchg
inc
push
cld
lods
xchg
cmp
aaa
bound
or
jge
xchg
clc
popf
out
data16
and
or
inc
fsubr
test
push
add
fcmovb
imul
xchg
pop
andl
mov
push
cmp
cmp
les
or
push
ret
cs
or
js
mov
mov
pop
and
xor
xchg
shrl
add
jne
pop
push
mov
orl
pop
sub
sbb
adcl
jns
js
xchg
xor
lret
test
jo
iret
clc
jns
movsl
or
mov
in
push
sbb
rcrb
lds
xchg
idivl
and
pop
sub
push
mov
bound
filds
mov
push
repnz
cmp
add
inc
dec
mov
fwait
movsl
pusha
call
test
sbbl
pop
add
pop
pop
test
inc
mov
push
bound
into
add
sbb
mov
mov
cmp
push
repnz
sbb
mov
int
push
or
sub
mov
sbb
pop
test
lret
adc
int
sbb
js
or
mov
sbb
adc
inc
dec
les
jb
lods
shrl
cli
lret
push
xchg
adc
ss
push
mov
xchg
mov
icebp
jno
fwait
loopne
mov
sahf
js
add
add
stc
addr16
and
ljmp
sbb
mov
movsl
mov
ds
fsubrp
lea
cmp
xchg
mov
xor
sbb
cmc
pop
mov
loopne
push
cmp
dec
sbb
mov
pop
mov
xchg
lea
shll
pop
inc
int3
sub
pop
pop
push
pusha
pop
fdivrl
imull
push
sub
push
jno
ret
pop
push
loope
or
xor
adc
dec
mov
sub
mov
fwait
and
sub
jo
mov
insb
sbb
out
bound
or
and
push
ljmp
xchg
lcall
scas
stc
adc
mov
or
stos
scas
push
jge
sub
cmp
cmp
lret
adc
dec
push
int3
cmp
push
xor
xchg
and
push
sahf
mov
popf
dec
mov
push
xlat
or
test
outsl
xorb
mov
xchg
jle
cmp
push
aad
push
int
xor
cmpsb
pop
pop
xor
ret
int3
adc
filds
popf
mov
sub
adc
daa
outsb
or
jg
xchg
fistpll
out
ss
dec
daa
fnsave
enter
cmp
and
add
xchg
xchg
dec
mov
adc
nop
movsl
add
dec
mov
adc
mov
ud1
arpl
xchg
shlb
roll
jge
push
int
xor
fdivs
push
ficomps
test
out
or
subb
sbb
loopne
ret
nop
loope
jmp
dec
ds
inc
lds
and
xchg
cmp
lods
xor
sbb
fcom
test
xor
mov
or
hlt
mov
dec
imul
nop
testb
decb
or
mov
mov
mov
inc
push
and
xor
cmp
stos
notb
or
clc
xchg
adc
jb
sbb
mov
sub
sub
les
testb
push
aaa
insb
fstp
int3
sub
dec
sbb
cmpsl
adc
adc
inc
cli
sub
push
xchg
jno
arpl
pop
call
push
mov
xchg
int
dec
lret
mov
adc
int3
and
or
cli
notb
add
lcall
sub
data16
cmc
xor
jns
ret
movsl
jecxz
lahf
jge
cltd
push
mov
rcrb
push
add
jg
adc
adc
out
stos
das
scas
ss
dec
adc
nop
lret
pop
imul
mov
mov
jle
push
mov
and
cmp
bound
inc
push
out
push
sahf
add
stos
shll
cmp
bound
xor
mov
movsl
jae
fsubrs
outsl
ret
cmp
pop
sub
jns
js
scas
inc
xchg
sbb
lds
or
inc
sub
mov
pop
int3
xor
lock
aad
outsl
loopne
ret
mov
test
sub
inc
and
and
js
ds
xor
fidivrs
xchg
stos
scas
loopne
ror
inc
xor
push
sbb
mov
cmp
sub
nop
push
movsl
iret
loope
add
mov
pop
mov
and
add
sub
push
inc
sbb
addl
add
push
cmpsb
xor
clc
lret
adc
pusha
mov
clc
aad
int3
and
sbb
jmp
and
adc
lahf
xor
jp
lret
andb
adc
cmp
dec
arpl
and
lock
jnp
sbb
xchg
mov
lds
repz
adc
out
push
sub
aad
jne
insl
fdivrs
es
or
and
sbb
push
add
sbb
add
les
cmp
or
pop
mov
inc
and
xchg
loopne
mov
fsubs
cmpl
sbb
push
mov
rorb
daa
cmp
or
mov
ds
repz
repz
cmp
out
sbb
xlat
scas
add
mov
adc
jle
and
push
inc
sub
ret
pop
test
inc
sub
jnp
test
dec
cmp
mov
fabs
adc
xchg
int
pop
fdivrs
or
call
pop
inc
out
fstpl
inc
pop
push
sub
mov
dec
pop
aad
or
mov
mov
sub
loop
imul
or
ror
xchg
or
mov
pop
subl
mov
push
mov
aas
inc
fstps
pop
sti
cmp
loope
popf
push
push
inc
adc
loopne
fildll
aad
mov
or
dec
push
clc
cltd
les
mov
xchg
push
mov
mov
xor
lods
int
push
jecxz
xchg
xchg
popl
push
out
insl
adc
cmpsb
mov
mov
jmp
xor
ss
mov
jp
cmpl
push
xlat
movsb
pushf
arpl
push
mov
pop
jmp
adc
jmp
rcr
dec
xor
jb
sbb
cmpsb
or
jns
pop
pop
mull
les
pop
mov
cmp
repnz
ss
jne
sbb
aaa
adc
jecxz
cmpb
imul
stos
sbb
mov
outsb
or
pop
lret
xchg
mov
scas
test
sti
adc
int3
sahf
pop
hlt
mov
jp
mov
jo
icebp
test
pop
and
jmp
stos
test
push
fstpl
les
push
mov
in
jle
int3
roll
cmp
dec
push
pop
inc
lods
rolb
ss
movsl
dec
push
add
push
roll
mov
dec
xchg
out
scas
lea
dec
mov
push
or
mov
pop
pop
lods
xor
xchg
xor
imul
mov
outsl
mov
ds
cli
les
lods
push
cltd
jp
js
test
imul
or
jl
rcrb
pop
cmpsl
jno
xor
inc
push
dec
test
loopne
xorl
push
pop
inc
push
mov
mov
xchg
daa
pop
push
inc
arpl
repnz
iret
mov
notb
clc
cs
jmp
add
in
mov
dec
mov
mov
sahf
xchg
inc
cld
repz
fnstenv
mov
pop
or
xchg
cmp
fidivrl
adc
movsl
popa
or
inc
mov
jg
jnp
push
jle
scas
stc
cmp
jbe
imul
mov
icebp
iret
mov
or
in
adc
sbb
jge
movb
pop
out
repnz
out
pop
sti
shr
pusha
or
inc
shlb
or
insl
mov
sbb
push
fistps
arpl
jmp
sub
dec
xlat
lret
add
and
dec
mov
out
pop
outsb
xchg
fs
cltd
arpl
jbe
cmp
add
inc
stc
in
mov
cmp
leave
inc
push
pop
pop
or
pop
cmpsb
jmp
rcrb
cmpl
aaa
pop
test
push
shll
cmp
xor
notl
lds
call
jge
ja
cmpb
add
mov
loopne
outsl
ljmp
f2xm1
cmpsb
mov
mov
xlat
mov
mov
data16
mov
and
call
cli
cmp
nop
out
cmp
mov
sahf
xor
inc
inc
sbb
cmp
add
pop
cmp
sbb
inc
sub
xchg
xchg
and
mov
aam
imul
jmp
test
hlt
aam
movsl
gs
or
pusha
inc
adc
push
shrl
inc
xor
cli
push
xor
pop
mov
mov
pop
andl
sbb
bsf
adc
cmp
loope
mov
inc
inc
lret
fstp
fistpl
push
sub
mov
jno
dec
rclb
push
adc
cltd
mov
movsl
lcall
jns
icebp
or
mov
in
ds
sbb
dec
mov
pop
add
out
out
pushf
fwait
xor
cmp
mov
shr
mov
and
cmp
xchg
aam
mov
jns
repz
jnp
push
dec
mov
xor
sahf
rol
leave
loope
pop
push
mov
lds
je
call
push
add
testl
addl
inc
test
xor
inc
mov
add
orl
adc
ret
daa
or
add
and
add
data16
or
adc
or
out
add
daa
andl
notb
inc
add
cmp
xchg
add
or
lea
and
sub
and
add
inc
notl
add
xchg
xor
push
aaa
mov
add
jne
push
popa
pop
mov
adc
mov
mov
sbb
adc
lsl
add
clc
mov
lea
add
jbe
test
loopne
movsl
pop
sub
lds
fwait
adc
or
int3
lcall
das
mov
adc
inc
sbb
adc
dec
aaa
pop
mov
cltd
push
xchg
or
adc
mov
xchg
adc
sbb
sbb
sub
xchg
adc
inc
nop
xor
xor
inc
addb
dec
ud2
aad
pop
add
or
lea
inc
adc
push
and
stos
nop
daa
xchg
and
add
add
fwait
pop
add
push
xchg
test
add
xchg
dec
and
add
sub
xchg
mov
lds
or
xlat
xor
mov
lret
or
sub
inc
lcall
or
mov
data16
adc
adc
mov
push
and
stos
cwtl
xchg
arpl
dec
xchg
mov
mov
add
gs
cwtl
push
mov
dec
repnz
inc
mov
lea
ret
int3
mov
xor
sbb
add
loopne
cmc
rorl
filds
xor
mov
lcall
cmp
test
push
test
mov
push
xchg
pushf
jp
pop
fsub
and
stos
inc
add
div
cltd
das
dec
lods
adc
pop
add
mov
orb
cltd
add
mov
cmp
push
add
test
add
out
xor
xchg
ds
jnp
dec
mov
dec
add
loope
mov
das
lods
mov
mov
orl
enter
or
dec
mov
push
add
mov
mov
xor
sbb
mov
adc
xchg
xchg
mov
or
mov
aas
xchg
push
sub
cmp
ja
add
mov
dec
push
stc
add
mov
mov
adc
lods
popl
adc
adc
adc
mov
xchg
addl
push
leave
cmpl
loop
hlt
in
addb
orb
push
adc
add
pushf
sbb
es
in
andl
add
push
pop
pushf
scas
pop
and
and
cvttps2pi
mov
xchg
orl
sub
push
out
lds
sub
or
cwtl
movsb
xor
push
or
inc
jnp
add
add
mov
add
xchg
mov
add
popf
lea
movsl
xchg
inc
mov
xchg
push
mov
and
cs
xchg
popl
dec
or
push
pop
sahf
sbb
xchg
movsl
add
lahf
popf
xchg
add
sbb
adc
sbb
add
pop
out
cmp
fisttpll
xchg
adc
push
adc
add
sbb
pop
sub
in
test
pop
pop
dec
mov
mov
add
xchg
cmpsl
push
lea
in
xchg
or
dec
adc
cs
add
ds
add
pop
pop
pop
popa
sbb
pop
xor
bsf
fldt
loopne
cwtl
arpl
push
fwait
pusha
sahf
pop
out
subb
es
cltd
cld
sbb
mov
pop
insb
dec
and
dec
inc
and
idivb
pop
in
lock
f2xm1
push
add
mov
mov
mov
fxch
jbe
mov
enter
adc
add
int3
insb
sahf
cmc
sub
jg
and
loopne
xor
push
push
popf
jbe
sti
add
sahf
icebp
jmp
mov
call
adc
out
cmc
cli
or
sbb
xchg
add
icebp
imul
or
push
add
mov
mov
or
pop
inc
pop
popa
int3
add
push
insb
sbb
arpl
sbbl
mov
push
mov
lea
arpl
mov
mov
lods
or
rcll
pop
cld
fidivl
mov
imul
scas
mov
lea
jecxz
sub
pop
sub
sbb
push
adc
sahf
and
push
jg
in
inc
lret
add
sahf
jp
adc
cmp
lcall
xchg
std
push
mov
pusha
xor
pop
test
movsb
shr
mov
ja
sbb
inc
movsb
in
insl
or
je
mov
pop
pop
sbb
adc
fstps
mov
popf
add
mov
inc
or
mov
insb
stos
lcall
xor
ret
inc
pop
in
sbb
push
jne
pop
inc
sbb
inc
subl
or
sahf
inc
sahf
mov
out
in
daa
mov
mov
in
fsubrs
notb
popf
dec
loope
sub
pusha
add
add
ds
dec
mov
lret
neg
decb
push
fdivl
enter
mov
dec
push
fcmovnbe
sbb
push
out
or
xchg
rcll
xchg
cs
jne
int3
or
sarb
and
pop
cmpsl
jecxz
push
fwait
cmp
dec
cmp
aam
pop
xor
xchg
jb
adc
lds
add
or
cmp
push
lock
inc
push
xor
lock
or
movsl
pop
mov
mov
lahf
test
push
jge
jle
push
adc
aas
int
rep
loop
inc
bound
pop
xchg
xorl
adcl
fs
xor
and
mov
and
inc
mov
sbb
push
adc
mov
jmp
aam
push
out
leave
xor
add
lahf
ljmp
xchg
insl
and
pop
int
and
mov
and
lret
fimuls
fcoml
add
aas
inc
push
mov
lcall
inc
xchg
add
sbb
pop
jmp
or
sbb
xchg
adc
mov
or
mov
mov
xor
mov
mov
push
pop
or
cs
dec
jnp
dec
mov
ja
inc
ds
inc
adc
adc
test
xor
cmc
and
cmp
inc
xor
xor
push
or
push
lods
lret
sbb
or
dec
lods
dec
push
clc
adc
mov
jmp
shlb
dec
ffreep
stos
fistpl
push
pop
xchg
add
repz
mov
fbstp
or
hlt
test
in
les
xchg
pop
jg
inc
add
ljmp
call
push
cld
xor
add
shlb
dec
dec
movsl
hlt
push
mov
rcrb
and
lods
mov
addb
test
jno
and
jge
fiaddl
push
cs
xchg
sahf
shr
push
loop
jne
sub
xchg
inc
mov
sub
add
add
repnz
rcrb
pop
pushf
iret
ret
and
out
sub
test
add
mov
es
push
mov
jnp
in
sub
es
and
stos
xor
xchg
xchg
pop
adcl
lods
sub
or
ss
mov
push
repnz
insb
jp
xor
mov
and
aaa
add
pusha
addr16
add
mov
imul
dec
insb
fadds
dec
inc
and
mov
sub
gs
push
les
pop
js
pop
xor
and
lcall
xlat
jno
add
fucomp
pushf
xor
cwtl
sbb
jmp
sahf
ljmp
sbb
jns
inc
sub
mov
cmp
inc
mov
loope
stos
sbb
or
mov
jmp
fidivs
push
sbb
mov
pslld
lods
clc
fs
jmp
cs
sahf
push
das
pop
add
push
inc
hlt
adc
sub
jo
inc
push
add
scas
in
in
cmp
inc
popf
xchg
cli
sbbb
sarb
iret
pop
xlat
incl
jns
in
enter
orl
hlt
dec
adc
mov
cwtl
stc
sbb
fucomip
mov
inc
cmpsb
arpl
out
mov
testl
inc
repz
imul
mov
inc
cltd
mov
std
pop
popa
cld
lods
pop
jb
shr
xor
mov
push
cmp
bound
pop
mov
mov
ret
aaa
push
movsb
insl
aad
lcall
in
test
cltd
jbe,pt
cmp
adc
movsl
push
mov
inc
push
sar
test
ds
ss
xchg
enter
mov
or
jbe
ss
xchg
xchg
testb
cmp
adc
sbb
mov
mov
negb
pop
push
sub
and
pop
and
cmp
xchg
aam
sbb
loop
xchg
aas
push
mov
pop
adc
sbb
stc
fcoms
cmp
inc
loopne
xor
pusha
ffree
jae
xchg
sbb
mov
nop
add
hlt
cmp
add
mov
or
fs
mov
cmp
sbb
in
push
inc
pop
push
adc
add
cmovs
pop
push
dec
fdivrs
sbb
push
fwait
sbb
sbbb
xor
aaa
add
lret
outsb
arpl
nop
aaa
ss
push
adc
test
or
in
pusha
adc
push
and
enter
lcall
lret
or
jno
xor
mov
xor
jg
sbb
fs
and
sub
inc
fildl
or
and
repnz
roll
iret
or
dec
dec
in
sub
jb
push
adcl
imul
pop
loop
shrl
pop
or
pushf
adc
loop,pn
movsb
xchg
inc
inc
and
out
stc
int3
test
jecxz
sahf
imul
pop
scas
pop
cmpsb
in
test
mov
pop
push
rol
pop
add
lret
and
cmp
loope
pusha
cmp
lods
call
cs
or
pop
cmp
add
xor
sbb
push
mov
push
movsb
cmpsl
add
push
add
ds
push
outsb
lret
in
pop
mov
mov
mov
inc
pushf
jno
push
addb
jns
cmp
fdivrs
sbb
jmp
jmp
pop
cmpl
mov
inc
cltd
xchg
xor
push
dec
addl
push
ja
dec
pop
movsb
stos
cmpsb
sbb
sbb
xor
dec
out
inc
sbb
pushf
jmp
pop
dec
push
jo
hlt
adc
ds
inc
out
out
pop
ret
dec
xchg
and
or
jnp
push
insb
mov
repnz
fcomi
add
inc
ds
push
jbe
movsl
dec
pop
outsb
out
push
xor
in
sbb
inc
fdivl
mov
push
sbb
lret
mov
or
loopne
cltd
mov
and
xor
fnstcw
add
repnz
mov
addl
push
loop
stc
ret
jns
push
mov
iret
and
xchg
notl
cmpsl
lcall
jno
out
inc
sub
sbb
xchg
out
adc
fcomip
dec
fwait
stos
mov
daa
sbbb
dec
dec
imul
scas
jp
xchg
dec
and
pop
xor
movsb
mov
xchg
cwtl
pop
imul
and
lock
dec
inc
push
xor
xchg
jno
and
or
std
roll
cmc
jle
and
or
inc
mov
jecxz
adc
sbb
mov
xlat
pop
jne
and
cmp
jb
pop
dec
fidivrl
loope
fs
push
mov
pop
dec
bound
lret
cmp
and
daa
in
cmp
inc
cmp
shr
inc
jnp
iret
ficomps
int3
ds
negl
pop
loop
mov
lret
lods
and
adc
sub
push
repnz
xchg
mov
sbb
jns
cmpsl
xchg
xor
fwait
push
jp
dec
xor
hlt
enter
cmpl
inc
ljmp
push
daa
pop
adc
pop
out
mov
pop
lcall
ret
xor
std
subb
es
jge
cmp
mov
outsl
stc
xor
inc
out
in
push
lods
sub
jnp
and
inc
inc
xchg
and
push
mov
pop
xor
mov
outsb
mov
push
jecxz
push
and
xor
in
inc
pop
pusha
or
push
push
sbb
xor
inc
int
frstor
int
lock
repz
add
fstl
mov
jp
mov
lret
inc
add
bound
and
ret
pop
cmp
or
fstl
xchg
add
cli
out
jno
xor
or
out
or
sbb
loope
cli
adc
pop
pop
pop
mov
push
mov
dec
jnp
nop
dec
loopne
mov
adc
data16
sbbb
jp
cmp
and
rcr
mov
or
adc
pop
movsb
mov
pop
xchg
lock
sbb
sahf
adc
inc
aam
jno
pop
insb
pop
jns
add
es
test
test
xchg
arpl
push
jp
mov
fistpll
xchg
lahf
inc
cmp
mov
inc
add
lret
int3
fs
push
pop
xchg
out
test
sbb
lock
decl
cmp
imul
and
or
dec
or
or
push
aaa
ss
shlb
add
imul
inc
testl
jae
mov
scas
and
or
bound
xor
mov
bound
mov
push
jp
pop
outsb
dec
inc
lds
pop
rclb
std
inc
push
or
arpl
push
lds
inc
cmp
mov
sbb
icebp
sub
loop
dec
pop
decb
or
pushf
add
mov
fstpt
jnp
lret
pop
mov
mov
push
dec
insl
jl
dec
int3
mov
push
lahf
dec
movsl
adc
rcrl
hlt
pushf
mov
cmp
scas
loope
dec
push
xrstor
ret
xchg
insl
gs
sbb
stc
inc
dec
mov
out
xor
adc
pushl
adc
cltd
adc
xchg
jne
movsl
sahf
inc
add
mov
adc
sub
and
push
scas
mov
pop
shll
push
pop
xor
pop
lea
adc
bound
pop
mov
add
cmp
sahf
push
hlt
xor
scas
add
iret
xchg
repz
inc
out
shlb
and
and
ds
cmp
test
mov
imul
sub
popf
out
xchg
adc
je
mov
mov
adc
and
xchg
mov
or
and
push
out
mov
xor
mov
sbbb
jle
push
push
les
xchg
pop
in
mov
or
and
push
pop
pop
sbb
fistpll
mov
sub
pop
dec
xor
mov
imul
cmp
imul
jae
cltd
clc
sbb
lcall
popf
inc
xchg
mov
push
mov
add
and
nopl
xchg
aad
cltd
add
data16
mov
mov
aam
int3
mov
loopne
mov
mov
cmp
jbe
in
xchg
mov
cmp
jg
popf
sbb
in
dec
addb
les
cmp
pop
pop
in
pop
sbb
mov
data16
inc
jle
sub
negb
mov
mov
stos
mov
sbb
cmp
or
or
fimull
and
xchg
dec
inc
in
js
pop
adc
and
cmp
xor
dec
sub
hlt
pusha
pushl
pushf
fcomps
xor
add
cmp
mov
nop
stos
mov
inc
xorb
dec
pushf
cmp
lcall
insl
inc
movsl
mov
cwtl
out
fldenv
and
adc
dec
jnp
jmp
xchg
stos
lret
xchg
daa
jp
jnp
xchg
inc
pop
movsl
pop
sub
inc
jmp
dec
mov
enter
or
sarb
mov
lret
icebp
cld
dec
mov
or
push
repz
pusha
je
add
mov
sbb
sbb
and
dec
jne
cmp
cs
and
cld
loopne
mov
sbb
dec
mov
clc
lods
pusha
xor
dec
loop
mov
sbb
stos
out
lret
mov
mov
mov
test
pop
ds
and
push
aas
push
mov
jb
mov
scas
add
int3
inc
push
icebp
inc
push
mov
dec
mov
jmp
test
push
jecxz
sbb
jno
ds
dec
mov
shrb
or
mov
cmp
and
pop
fisubs
inc
sbb
jb
addl
push
sahf
shlb
jmp
pop
mov
inc
jne
popf
cmp
adc
cltd
loopne
movsb
jmp
ljmp
daa
scas
push
jge
push
dec
sub
pop
push
inc
cli
cmc
cld
aas
fcomip
mov
cli
js
orl
out
fldcw
and
sub
push
dec
movsb
xor
cmp
jb
sbb
sahf
mov
arpl
jnp
nop
pop
cmp
and
inc
jecxz
pop
mov
mov
enter
loopne
mov
cwtl
addb
clc
push
cmpl
jmp
in
in
sbb
or
andl
jb
popa
shrb
inc
push
out
mov
lods
xchg
push
cmp
movsl
cs
int
hlt
push
or
aas
xchg
adc
fistpll
jg
push
movsb
lods
or
iret
cmpsb
into
xorb
cvtdq2ps
push
pusha
inc
inc
xchg
pusha
fnstcw
inc
push
dec
insb
shlb
cltd
mov
add
mov
insb
lret
sub
xor
pop
push
and
or
sub
xchg
inc
ljmp
imul
rclb
cli
ds
cmc
stc
jge
jnp
jmp
mov
aad
jo
or
sub
or
inc
ret
outsl
dec
jg
test
push
or
decb
mov
out
cmp
lret
out
call
mov
lods
mov
push
or
loop
fucomp
adc
lods
push
pop
in
and
loope
or
loopne
test
sti
jb
jl
mov
loopne
mov
mov
inc
push
pop
bound
push
sub
popf
int3
into
pop
adc
or
jne
xor
out
inc
push
xchg
mov
lahf
add
or
cmpsb
xor
add
pop
fwait
ret
daa
adc
cltd
pop
sub
push
jge
cmpsb
pop
cmp
push
inc
lods
xchg
push
sub
out
mov
test
scas
sub
stos
fstpl
loopne
cmpsb
jae
pop
es
xchg
adc
cmp
mov
fidivrs
pop
ret
ficoml
xchg
xor
pop
add
jb
insb
call
xor
fmull
fstpl
mov
lods
cmp
push
pop
inc
fxch
js
mov
outsl
data16
cmp
mov
mov
cmp
xchg
ret
mov
lret
cmp
or
push
or
sbb
fs
jnp
sub
pushf
jae
repz
xor
jnp
loop
push
jb
dec
sbb
aam
mov
mov
xchg
daa
xchg
movsb
xor
push
jb
mov
xor
lods
xor
scas
stos
xchg
mov
jnp
enter
pusha
sub
sarl
xchg
movsl
addr16
adc
and
loopne
sbb
mov
lret
sbb
cmp
lea
mov
pop
sbb
push
push
mov
mov
jnp
sti
xor
jg,pn
jp
inc
dec
add
insl
xorb
ret
cmp
mov
mov
repz
std
push
iret
outsl
dec
mov
mov
loopne
dec
or
mov
ret
jge
je
bound
add
inc
mov
cmp
mov
push
cmpsb
and
aaa
push
mov
js
cmp
cltd
and
sub
push
stos
jmp
fists
cmpb
push
loopne
mov
pop
mov
pop
addb
push
cmpsl
or
push
mov
and
sub
xor
push
sub
shr
or
mov
pop
mov
insl
sbb
mov
arpl
fsubs
cltd
inc
pop
cld
sahf
jmp
popf
xchg
jl
mov
add
loope
pop
mov
pop
sbb
jnp
xchg
ljmp
jmp
arpl
dec
pop
out
mov
adc
subl
sub
mov
sub
inc
ds
test
shlb
les
cld
sbb
cmp
popa
pop
or
sarl
jecxz
add
xchg
mov
imul
sbb
add
lret
cs
mov
aas
movsb
pop
loope
and
jns
daa
and
imul
in
adc
adc
push
and
pop
lahf
cmc
jne
arpl
arpl
xor
inc
dec
outsb
stc
pop
in
sub
fnstcw
inc
nop
pop
sub
xor
dec
push
jno
and
cmp
orb
cmp
bound
jl
mov
cltd
adc
pop
and
hlt
in
ds
pop
data16
imull
pop
xchg
cmp
jmp
adc
dec
lcall
int3
lcall
or
fcomps
jno
mov
sbb
ret
lret
push
clc
pop
dec
mov
hlt
pop
jecxz
jg
and
idiv
lcall
or
cmpl
ror
sub
jbe
pmaxub
push
and
pop
dec
scas
push
inc
ret
adcl
jno
repnz
xchg
mov
mull
mov
jnp
scas
add
sbb
jl
mov
sbb
mov
pop
or
push
mov
pop
push
sbb
addb
jns
sub
pusha
pop
xor
add
pop
sbb
xchg
in
sub
mov
and
add
mov
push
cli
jecxz
movsl
test
xor
clc
or
sub
sbb
das
mov
mov
and
loop
fwait
mov
lret
lods
cmp
je
jecxz
and
xchg
jg
inc
lahf
fistl
popf
add
push
es
inc
in
mov
pop
xchg
xchg
add
jne
ret
ret
clc
push
add
ljmp
jns
pop
push
jne
xlat
lret
jmp
jb
mov
mov
add
xor
ljmp
pusha
arpl
jne
and
loopne
lods
out
je
pusha
lret
fwait
cmc
cmp
or
adc
mov
or
mov
xorb
subb
mov
push
scas
adc
inc
cmp
xor
mov
loopne
pop
addr16
arpl
sti
sub
and
mov
mov
das
loopne
insb
call
mov
mov
je
jmp
mov
mov
mov
mov
fiaddl
lret
jmp
inc
jb
rcll
dec
sub
or
fnstenv
inc
cmp
subl
xor
clc
dec
in
fisubl
fdivrl
ret
mov
ja
test
lret
insb
imul
lret
pop
arpl
jbe
ds
lret
arpl
jnp
mov
addr16
mov
pop
cmp
xchg
cltd
sbb
pusha
dec
mov
xchg
xchg
sbb
std
sbb
jge
pop
ds
test
jns
fsubl
or
mov
jge
daa
mov
inc
js
mov
or
jb
insl
aas
mov
fistps
sub
sub
ja
popf
enter
push
das
dec
mov
insl
loopne
fwait
sarb
cmp
shrb
mov
clc
or
push
mov
mov
shlb
ficoml
and
cmp
sub
arpl
adc
loope
repz
lock
cmpsb
pop
add
xor
cltd
and
sub
pop
push
ds
jno
mov
dec
push
sti
fstl
pop
aam
cmp
pusha
jg
mov
inc
cmp
sbb
adc
popf
mov
adc
cmp
adc
in
mov
in
xor
repz
inc
mov
out
xchg
jp
push
push
andl
sub
inc
popa
mov
sub
test
pusha
xor
daa
movsl
nop
pop
shll
xchg
jle
sub
push
mov
fucomip
mov
mov
into
sahf
mov
scas
xchg
and
movb
push
adc
dec
pop
xchg
fmuls
pop
decl
pop
pop
cmp
cmpsl
test
ret
sti
xlat
cmpsb
test
sub
stc
xor
adc
mov
fwait
rorl
in
xchg
or
pop
loop
ret
loopne,pt
clc
out
push
push
push
andb
push
data16
iret
roll
outsl
aaa
sahf
push
push
or
mov
lret
in
inc
pop
cld
out
sub
add
xor
inc
jecxz,pn
hlt
fldt
mov
out
test
nop
jg
mov
cmp
rolb
push
inc
mov
js
mov
loope
xor
mov
stos
lcall
cmp
movsl
push
xchg
mov
icebp
idivl
inc
fiaddl
lock
fbld
hlt
push
xchg
inc
mov
je
adc
push
jle
movsl
pusha
test
lahf
add
cmpsb
jae
fimull
dec
movsl
xchg
or
mov
jl
cmp
incb
rclb
cmpsb
mov
mov
sub
adc
or
sbb
mov
or
mov
cld
push
sahf
stos
sub
jno
sti
xchg
cmp
and
imul
push
fs
arpl
test
and
cmpsb
inc
loope
test
out
jmp
push
push
pushf
mov
jbe
mov
pop
mov
mov
push
fxch
dec
mov
stos
out
jns
rcrl
push
sarl
cmp
jae
sbb
sbb
inc
mov
inc
cmp
add
mov
out
ljmp
adc
jmp
ljmp
jmp
arpl
lret
out
popf
aaa
std
clc
adc
mov
push
mov
mov
stos
pushf
adc
sub
sbb
ds
xbegin
or
sub
cmp
repz
popf
cmp
fimuls
pushf
inc
xchg
and
xchg
aaa
pop
cwtl
push
adc
push
cmp
mov
dec
loope
xchg
push
insl
movsb
adc
and
icebp
arpl
mov
cmpsb
mov
adc
mov
sarb
shl
add
cld
push
dec
clc
jbe
stos
or
andb
mov
negb
outsl
cmp
in
dec
subb
mov
inc
fadds
in
pushf
xchg
pop
insb
leave
out
rcrl
push
push
out
iret
add
pop
jns
adc
jne
push
dec
stc
adc
cmpsl
mov
pushf
or
dec
add
mov
ds
sub
push
je
leave
fwait
push
pop
movsl
sbb
mov
sub
sbb
lcall
and
sub
addl
dec
or
bound
mov
jne
fdivrs
cmp
xor
add
and
xlat
enter
cld
imul
pop
fidivrs
xchg
sbb
or
jle
mov
out
insb
or
or
add
cmpsl
cmc
push
mov
or
mov
adc
inc
jo
xchg
push
inc
dec
pop
jae
lea
jae
movsl
rcrb
pop
in
xchg
aam
push
pop
in
imul
inc
fiadds
mov
fcomps
jle
mov
loope
shrb
loop
fs
adc
lock
jbe
mov
mov
sbb
push
cltd
push
sbb
pop
rcrl
call
inc
xchg
or
add
push
sahf
jge
pop
out
mov
nop
xor
mov
jmp
stc
out
inc
adc
rcr
fsubs
pop
pop
mov
pop
pop
test
inc
scas
cmpsl
cmp
test
cmp
shlb
not
pop
xor
cmp
inc
popf
adc
add
aad
addr16
dec
and
mov
pop
movsl
jbe
add
push
stos
sbbb
xchg
jb
inc
push
pop
xor
rol
mov
mov
inc
pushf
mov
or
jns
xchg
sub
std
inc
in
mov
mov
int3
pusha
lods
sub
sbb
pop
push
inc
pushl
mov
xchg
ds
sbb
imul
jno
enter
daa
sbb
repz
popf
adc
sbb
sub
cmc
jp
cltd
and
in
lock
push
iret
cwtl
pop
cmpsb
xchg
dec
sbb
fwait
mov
adc
pop
repz
pop
add
and
stos
fmull
mov
insb
adcl
sub
stos
imul
push
adc
xchg
and
sbb
sbb
push
or
jne
pop
pop
push
lock
xchg
mov
in
decl
and
fistps
notb
push
lret
subl
push
add
xchg
or
movsl
adc
adc
lea
mov
ljmp
jne
push
add
inc
call
cs
test
loop
popf
mov
push
lahf
push
and
stc
movsl
clc
nop
cmp
movsb
push
rolb
push
jg
pop
js
scas
push
mov
mov
bound
int3
out
fstl
lret
and
fimull
mov
push
int
test
cmp
pop
fwait
nop
sar
sub
cmpsb
loope
leave
cli
lret
clc
dec
les
jae
or
push
rcrb
lret
test
jb
jle
popf
lret
pop
mov
push
out
gs
and
ds
mov
adc
imul
arpl
pop
xlat
aas
int3
mov
mov
xor
add
fsubs
mov
mov
jle
jge
push
repz
fisttpl
inc
xchg
mov
cld
push
dec
cmp
in
das
sbb
push
pushf
ss
adc
mov
stc
aam
cmp
in
sub
xchg
sbb
in
je
movl
push
sarl
ret
sub
std
adc
lock
sub
xchg
lahf
inc
mov
bound
leave
cltd
ds
jbe
testl
jmp
fimuls
push
dec
lods
fcompl
adc
pop
addb
mov
arpl
mov
xchg
decl
lods
add
pop
arpl
pusha
adc
or
inc
jb
jmp
or
xchg
aam
dec
vunpcklpd
rcrb
pop
dec
inc
cld
andb
lock
and
cltd
push
push
pop
loopne
jl
xchg
mov
inc
add
sahf
ss
sti
mov
stos
sbb
xchg
addb
xor
sub
or
and
jmp
fadds
scas
push
cltd
dec
cmp
push
mov
xchg
icebp
rcll
add
data16
stos
es
aas
es
sahf
inc
pusha
es
nop
pop
mov
cmp
sub
sub
call
and
xor
lcall
adc
outsb
out
xchg
cld
pop
sbb
in
xor
ljmp
out
aam
ljmp
lcall
mov
inc
xchg
test
jnp
mov
cmp
adc
add
cmp
inc
ficoms
in
sbb
fdivl
jle
inc
and
lcall
cmp
pop
jb
mov
sbb
and
mov
jp
fcoml
and
mov
xchg
adc
loopne
int
or
test
imul
mov
pop
lock
jmp
pop
mov
push
inc
sti
xchg
mov
jbe
insb
rorl
push
movsl
cs
xor
cltd
or
addl
inc
cmp
add
sub
aas
xorl
sbb
add
jmp
push
mov
cltd
push
int3
jmp
jns
mov
and
imul
jnp
and
mov
jb
dec
sahf
sub
enter
aas
pop
mov
add
jns,pt
xchg
imul
das
int
and
and
out
mov
rol
insb
dec
and
or
add
int3
mov
lret
jmp
xchg
aad
mov
lock
xchg
call
rcrl
inc
push
int
jle
hlt
sbb
pop
add
cmp
imul
andb
popa
or
ret
ljmp
lret
add
std
sbb
mov
mov
adc
test
or
mov
arpl
mov
cmpsb
int3
xor
rcrb
ja
mov
push
lahf
or
cmpsb
sub
sbb
xchg
xchg
jns
cmc
inc
inc
xchg
and
mov
dec
arpl
movsb
sbb
loope
adc
pop
imull
loop
fdiv
push
push
push
sub
rcrl
nop
adc
xor
mov
nop
or
sub
mov
xchg
fwait
inc
hlt
xchg
xlat
icebp
loop
shlb
add
jecxz
sbb
out
jnp
or
xor
ljmp
mov
jae
mov
push
push
cmp
dec
push
out
int3
mov
pop
push
mov
sbb
dec
inc
push
adc
testb
push
sahf
xchg
lock
mov
mov
jnp
push
arpl
pusha
lcall
mov
jp
int3
xchg
int
xchg
out
push
xchg
shlb
jae
sbb
stos
jmp
ljmp
subb
mov
sbb
add
je
dec
or
icebp
sbbl
sub
xor
and
xchg
push
adc
movsl
pop
es
inc
lods
push
sub
xor
mov
push
xlat
jae
notl
mov
movsl
pushf
sbb
fcomps
adc
or
dec
mov
add
hlt
test
push
mov
test
loope
inc
insl
fstl
dec
pop
ljmp
mov
pop
jb
outsl
mov
popf
in
adcl
hlt
jno
pop
dec
scas
fs
in
or
ret
dec
or
add
shlb
adc
loopne
mov
in
add
push
jnp
and
or
jno
cltd
movsb
sbb
lcall
je
cmp
and
and
cmpsb
icebp
mov
pop
jae
cwtl
and
fstpl
inc
lahf
data16
fsts
sbb
jns
pop
push
xchg
push
and
pop
mov
push
mov
dec
pushf
movd
idivb
movsl
xchg
enter
inc
xchg
hlt
clc
ds
cwtl
or
test
imul
sbb
xchg
fmul
sahf
dec
inc
push
lret
inc
leave
shl
push
je
icebp
pop
push
and
sbb
mov
pop
loopne
clc
and
dec
mov
nop
mov
sbbl
push
push
mov
push
jnp
testl
sbbl
sbb
jns
imul
mov
cs
in
jge
cmp
sub
jnp
or
jne
xor
std
ret
das
push
jb
push
mov
sbb
pop
mov
fdivrl
inc
ret
sbb
int
gs
cmp
adcb
repz
or
fldcw
cltd
jns
jns
adc
imul
movsb
pop
or
pusha
mov
xor
xchg
adcb
mov
insb
jmp
mov
jle
in
fsubrs
and
sub
mov
es
jae
scas
cltd
and
mov
mov
aad
mov
arpl
jg
and
in
sahf
roll
cltd
lcall
bound
loopne
in
adc
cmp
pusha
scas
lret
xchg
xchg
add
or
adc
jp
add
fwait
add
jle
jmp
jmp
ljmp
or
cli
leave
mov
bound
add
pop
arpl
inc
xchg
jle
inc
jmp
shr
es
pop
aaa
jb
dec
pmaddwd
mov
inc
and
inc
jle
pusha
pop
sub
cwtl
les
fsubr
stos
add
mov
fidivrs
sbb
test
jecxz
cltd
mov
xlat
sub
pop
jne
cmp
dec
and
xor
inc
sti
inc
hlt
cltd
add
in
add
jl
jbe
fldcw
jo
int3
xchg
xchg
mov
cmp
mov
cli
jo
push
xlat
jp
clc
pop
adc
sbb
loope
cld
enter
adc
data16
pop
mov
add
add
push
test
dec
sbb
inc
movsl
pusha
pop
aas
test
mov
mov
pop
xor
arpl
cltd
xorb
sbb
xor
mov
jecxz
jne
add
and
hlt
bound
cltd
out
adc
lret
pop
ljmp
pop
xlat
and
aas
into
or
xor
add
add
push
je
xchg
push
xchg
xlat
sbb
inc
jne
sub
out
arpl
ret
scas
pop
add
push
xor
in
xchg
push
bound
sahf
adc
lcall
sti
push
jecxz
jg
ss
inc
cmpsb
loop
popa
pop
dec
mov
dec
ds
out
pop
pop
rorb
inc
lret
stc
push
cmp
add
popa
or
fstpt
rcrb
mov
popa
and
or
cli
xchg
fdivs
cmp
test
out
arpl
lahf
in
pop
orl
mov
outsb
cltd
bound
add
cmp
jge
push
stos
sub
aas
dec
sub
mov
lods
mov
mov
in
ds
adc
xchg
stos
push
jle
out
add
xchg
pop
aaa
cli
stc
jnp
cmp
add
inc
fiaddl
sbb
xchg
push
pop
repz
imul
sahf
add
xchg
add
xor
add
dec
lret
mov
cmp
pusha
inc
push
mov
jns
push
fucom
fmulp
mov
inc
or
ss
sbb
pop
xchg
xchg
movsl
cmp
fistl
ds
cs
rorb
add
les
fisttps
loopne
data16
jo
mov
jnp
sub
pop
icebp
mov
add
mov
cld
ret
insb
xchg
inc
jg
and
mov
ja
jmp
xor
dec
push
jo
jns
sub
sbb
add
push
push
es
gs
dec
adc
bound
pusha
bound
pop
sub
mov
mov
imull
or
icebp
pop
dec
xor
sbb
dec
imul
pop
dec
xchg
adc
xchg
inc
lods
ds
sbbl
pusha
aad
mov
cmp
int3
inc
insb
inc
add
aaa
sti
adc
repz
sub
pusha
xor
push
inc
repz
popf
aaa
push
push
mov
lcall
jbe
mov
add
pusha
inc
sub
mov
add
jg
out
mov
ja
jnp
pusha
mov
addr16
pop
in
fildll
mov
adc
movsl
cmpsb
fstp
cmpsl
es
mov
push
lods
adc
dec
shlb
xor
mov
lock
pusha
or
and
imul
push
dec
movsl
adc
out
dec
fstp
in
int
add
pop
mov
push
pop
in
scas
shlb
xor
jb
or
pop
mov
xchg
jge
add
andb
dec
xor
test
fprem1
nop
adc
ds
fstl
inc
loop
jle
repz
jbe
push
lret
into
jle
cmpsb
jl
pusha
mov
movzwl
pop
aam
push
test
cwtl
push
dec
mov
std
and
add
pop
lahf
sbb
scas
lret
xchg
and
hlt
ds
dec
fwait
jae
hlt
lret
inc
arpl
adc
jge
and
sbb
mov
movsl
mov
pop
mov
or
and
rcll
lret
cmp
sbb
dec
inc
add
pusha
and
pop
stos
sub
mov
bound
ja
repnz
mov
push
pop
sbb
pop
addl
cmp
or
sbb
pusha
mov
fsts
inc
mov
jns
pop
add
push
stos
nop
push
movb
add
in
mov
loope
mov
xchg
xchg
inc
loop
fnstcw
pop
jo
fmull
cmp
aad
push
xchg
hlt
stos
mov
xor
ret
adc
insb
mov
push
sahf
push
movsl
mov
push
jle
ficompl
push
add
xor
sarb
aas
dec
xor
inc
adc
addr16
xchg
inc
pusha
jb
cmpb
pop
lret
push
push
jp
mov
sub
pop
in
adc
pop
and
adc
lcall
xor
ljmp
stc
add
xchg
pop
mov
sti
lock
inc
int3
jecxz
test
bound
or
add
popa
loop
xlat
lcall
mov
push
test
and
out
xor
hlt
repnz
jge
and
mov
scas
lds
push
jb
sbb
and
or
jmp
pop
ds
mov
lods
cltd
loop
bound
pop
sbb
scas
fwait
sub
nop
js
popa
inc
and
mov
adc
fdivl
and
test
xchg
or
fdivl
jbe
inc
mulb
inc
lahf
rorb
xor
rcrb
movsb
push
in
adc
jecxz
ljmp
and
fistpl
cmp
adc
das
inc
bnd
loope
loop
sbb
pop
mov
sbb
sbb
push
lea
push
call
popf
cmp
int
inc
pop
cmp
push
pusha
lret
movsb
sbbb
add
jecxz
or
fmuls
push
mov
aaa
add
mov
sub
mov
cltd
loope
rolb
pop
push
cs
cmpsb
jmp
xchg
sub
popf
mov
inc
xor
imull
pop
jp
sbb
push
push
mov
clc
fsubrl
cltd
lcall
bswap
lret
ja
movsl
aam
mov
xchg
mov
fst
cs
mov
jns
std
jae
cli
mov
fildll
cmpsb
mov
sbb
or
and
fs
ucomiss
dec
out
lret
call
jge
sar
popf
decl
jae
cmp
mov
loopne
lds
xor
pop
mov
out
or
jne
fldenv
test
mov
andb
sub
sub
addl
into
add
cmp
repnz
pop
mov
in
mov
xor
mov
push
and
loopne
mov
sti
insb
adc
sbb
test
sub
jmp
push
daa
inc
xor
pop
in
lret
mov
or
push
aas
lods
mov
sti
mov
mov
and
and
aad
jnp
adc
dec
mov
push
sahf
cld
jae
cmp
mov
fadd
out
rolb
dec
or
jp
or
loop
or
sbb
push
int3
test
pop
mov
inc
gs
std
orl
outsb
sbb
and
mov
iret
cmpsb
shlb
and
xchg
stos
or
ret
jp
out
movsl
mov
xchg
ds
push
jno
lcall
inc
aam
mov
mov
add
add
jecxz
fwait
xchg
in
lods
movsb
add
lret
clc
jbe
mov
xor
mov
mov
imul
inc
fildl
rol
test
cmp
xor
fisttps
sbb
sub
int3
pop
lock
bound
sbb
mov
hlt
add
sahf
push
cmp
jnp
lcall
cmp
jae
test
mov
sub
xchg
fwait
sahf
call
stos
in
mov
int
push
lds
jns
inc
xchg
aaa
xor
mov
idivb
or
and
aaa
push
popa
adc
sbb
and
mov
mov
pop
int3
adc
or
xchg
in
outsb
rolb
jmp
nop
incl
mov
jge
mov
pop
mov
pop
mov
mov
add
pop
jmp
jns
cltd
mov
mov
xchg
push
bound
adc
pop
popf
push
das
jnp
xchg
shlb
arpl
cltd
dec
in
sub
mov
mov
adcb
cld
adcl
and
mov
mov
test
mov
jo
pop
movsl
dec
push
and
jnp
adc
xor
and
repz
push
pushf
sbb
mov
ds
mov
hlt
mov
push
push
stc
jp
imul
mov
sub
sbb
jmp
mov
or
cmp
add
xchg
fwait
pusha
adc
sub
push
jp
pop
sub
jmp
jp
jbe
mov
bound
cli
pop
lods
sar
cmp
jnp
call
shlb
inc
mov
gs
and
bound
in
xchg
and
adc
ljmp
add
clc
inc
outsb
shl
push
dec
jecxz
jmp
gs
xchg
fistpll
push
pop
adc
dec
and
mov
mov
fistl
cmpsb
mov
fcmovbe
sbb
dec
stos
daa
mov
add
or
xchg
mov
xor
and
cmpsl
mov
repz
arpl
ds
inc
arpl
jecxz
cltd
and
cmp
into
rorl
leave
mov
xchg
cmp
mov
sti
adc
iret
cwtl
test
loopne
add
inc
icebp
in
xchg
sbb
pop
xor
pop
ja
pop
fidivs
lea
fstps
jno
or
mov
add
cwtl
mov
dec
sbb
mov
cmp
push
testl
or
das
mov
cs
sahf
mov
xor
cmp
pop
and
add
ja
dec
pusha
adc
adc
int3
or
lahf
sbb
jle
push
and
aam
cmpsl
mov
mov
in
inc
sbb
lcall
push
jecxz
add
dec
bound
fistpll
sbb
jp
cmp
in
add
mov
loopne
imul
mov
rclb
pop
loop
jno
in
jge
insb
push
sbb
divl
jae
cmp
mov
inc
movsl
jnp
inc
xchg
insb
cmp
pop
mov
pop
xchg
sbb
ljmp
mov
dec
dec
movsl
and
pop
pop
out
push
in
inc
movsb
pop
popa
sbb
pop
aad
xor
inc
mov
lret
push
or
sbb
adc
push
stos
cltd
imul
daa
inc
xchg
pop
fmul
loop
mov
movsb
mov
and
scas
cwtl
xor
loopne
ljmp
add
mov
jno
cmp
jmp
jno
and
mov
and
adc
rorb
and
mov
and
cmp
or
fucom
test
fwait
xchg
cs
and
inc
mov
inc
fwait
mov
call
pop
ret
addr16
orb
ljmp
ret
jb
out
fisubrl
push
mov
mov
xor
ds
lcall
sbb
fwait
rolb
sbb
dec
hlt
pushf
lods
imul
cmpsl
pop
xchg
jmp
movsl
cmpsl
xlat
jg
js
add
inc
sbb
pop
arpl
jg
add
mov
xchg
or
jl
mov
inc
repnz
and
in
stos
arpl
daa
jmp
fnsave
cmpl
mov
mov
daa
sub
sub
jnp
clc
or
pop
add
xchg
push
jle
loope
add
push
mov
jns
cmp
push
add
rcrb
jl
lock
popf
sahf
mov
cmp
js
mov
push
bound
imul
outsb
mov
cmp
pop
es
es
add
xchg
sub
out
push
xor
loopne
mov
stos
xchg
cmp
add
sbb
push
jno
push
repz
pop
add
pop
or
popf
aaa
xchg
xchg
jo
shll
dec
add
mov
push
cmp
aaa
mov
dec
cwtl
bound
loope
pop
mov
lea
ds
ret
rorl
test
add
daa
cltd
sti
aaa
mov
sahf
or
shrl
adc
inc
icebp
ficomps
jns
jbe
arpl
lds
pop
pop
push
int3
mov
dec
mov
ficomps
clc
repz
jnp
imul
sahf
andl
inc
sarb
jno
mov
inc
adc
push
add
xchg
nop
repnz
test
xchg
jg
xchg
popa
movsl
mov
popl
sbb
mov
dec
dec
jnp
mov
addr16
movsb
int3
ret
adc
fwait
out
dec
mov
and
dec
lds
lret
orl
test
bound
inc
test
mov
mov
adc
add
lock
add
mov
or
mov
or
test
mov
sti
loope
jg
dec
mov
cwtl
push
xor
cld
adc
xor
in
mov
les
adc
pop
jnp
movsl
add
cmp
fcmovnbe
imul
or
and
jmp
add
cwtl
aad
and
mov
pop
fbstp
push
clc
aas
mov
sti
fwait
pop
cltd
or
adc
mov
lret
shl
and
movsl
sub
pop
push
add
in
mov
sub
and
inc
fnstcw
jg
pop
and
daa
fcompl
repz
fmul
adc
imul
into
pop
stos
inc
jg
mov
ret
ja
adc
pop
sbb
mov
ljmp
cmp
add
ja
mov
mov
adcb
int3
mov
push
jnp
pop
xchg
add
pop
stos
cmp
adc
push
mov
fidivl
inc
push
jb
dec
daa
push
in
push
xchg
fldt
hlt
and
jge
adc
mov
rcr
lds
jno
ret
push
cmpl
dec
and
fmull
dec
dec
or
cmp
loopne
test
xor
sub
xorl
push
sbbb
push
xchg
cmp
inc
xchg
ljmp
push
rcll
js
dec
mov
jae
test
push
sub
lods
xchg
push
stos
fdivl
jno
shr
inc
jle
xor
adc
cmc
fisttpl
xor
mov
arpl
and
repz
push
inc
cld
pop
add
stos
repz
dec
aam
dec
bound
pop
rcl
iret
sbb
js
add
pop
add
and
sahf
mov
repnz
mov
roll
and
pop
mov
test
inc
xor
hlt
xchg
sbbl
lea
pop
cmp
cmc
inc
lods
dec
add
cmp
into
gs
jb
roll
mov
xor
rolb
push
lahf
pop
dec
mov
ljmp
fisubl
push
es
inc
pop
sbb
and
lcall
jecxz
adc
push
cltd
xor
add
rolb
loopne
push
and
scas
mov
push
in
cmpl
inc
mov
mov
cmp
push
sub
test
mov
call
addr16
jno
and
int3
cmp
push
cltd
and
adcl
in
or
ret
and
add
inc
fcmovnu
push
and
lea
add
and
out
mov
and
or
sbb
adcl
ret
sbb
push
jmp
push
pop
ret
clc
xlat
mov
push
dec
test
or
sub
or
out
mov
push
jbe
adc
mov
adc
lea
xchg
adc
es
inc
mov
xchg
lea
cmc
xor
dec
pop
mov
mov
xchg
mov
loopne
imul
adc
inc
inc
push
jns
mov
xor
mov
clc
dec
jge
adcb
movsb
pusha
pushf
jle
and
mov
push
lock
push
outsb
ret
cmp
add
xchg
dec
or
pop
shlb
adc
and
push
jle
xchg
cli
and
mov
add
jg
std
hlt
fsubl
mov
xor
stc
xchg
sbb
inc
popa
and
cltd
jl
inc
rol
sahf
ret
test
scas
xor
lcall
push
jg
sti
out
movsb
in
loop
insb
es
mov
pop
test
int3
adc
sub
jmp
dec
xlat
pop
loope
jne
scas
lods
and
fld
jb
arpl
js
int
nop
jnp
jmp
js
push
gs
xchg
into
add
xchg
or
inc
mov
cmp
ljmp
and
fnstenv
je
fwait
sti
jecxz
jmp
xor
mov
fucom
push
dec
in
inc
fcmovnb
or
inc
arpl
sbb
cwtl
call
popf
mov
inc
cmp
mov
cmp
sub
int
fildll
or
pop
dec
mov
orb
jb
mov
sahf
lods
inc
push
idiv
ja
out
scas
out
mov
repz
push
aaa
nop
mov
sbb
adc
jne
push
enter
sbb
outsb
dec
sarb
andl
pop
sub
imul
pusha
in
out
pop
por
and
mov
test
jns
push
sub
and
xchg
iret
fcoms
xchg
jne
lock
les
jnp
sti
scas
and
push
push
and
pop
xor
mov
mov
in
leave
cmpsb
std
test
enter
and
rolb
addb
ja
jle
jp
mov
pop
stos
sbb
jge
pop
cwtl
add
fbld
sarb
shll
mov
cmp
pop
sbb
sbb
sbb
sbb
and
mov
ljmp
addr16
add
xor
das
out
and
sahf
inc
cli
sbb
xchg
addr16
fsubs
jp
test
jno
rcrl
clc
xor
push
mov
inc
xchg
or
sarb
mov
mov
add
dec
or
jb
sbb
sahf
jnp
xchg
data16
xor
fiaddl
lock
test
push
repz
inc
adc
xchg
mov
lods
sub
add
or
jg
and
dec
cltd
sahf
add
pop
push
pop
pushf
xor
inc
je
xor
xchg
or
std
ret
and
cmp
ds
es
lcall
xor
add
push
out
out
or
xchg
cmp
adcl
and
out
sbb
mov
jnp
and
push
inc
enter
stos
add
lods
movsw
sbb
js
push
ds
cmp
out
mov
js
bound
cmp
out
jl
jg
mov
es
flds
cmpsl
add
fisttpl
cld
dec
test
mov
paddw
mov
push
out
xchg
mov
test
pop
mov
and
fildl
jno
adc
or
and
mov
fisttpll
and
stos
fnstsw
and
push
jno
jbe,pt
lret
cmp
inc
pop
ret
ror
js
dec
leave
push
cwtl
fnstcw
mov
dec
push
mov
xchg
fdiv
push
ficoml
mov
pop
ret
hlt
fsts
pop
adc
jp
cs
mov
jb
dec
fnstsw
lret
xchg
sub
mov
pop
bound
and
inc
imul
jo
pop
fiaddl
xor
jmp
bound
les
js
push
faddl
mov
mov
jle
out
rcl
dec
ficoms
insl
adc
fsts
sbb
pop
mov
ljmp
stos
push
lret
lock
add
xchg
push
jg
orb
mov
xchg
mov
add
add
and
in
adc
pop
test
fcmovnu
jbe
out
adc
mov
xor
push
mov
fwait
outsb
xchg
into
rcrl
or
push
mov
xor
nop
mov
cmp
dec
xchg
add
pop
and
jecxz
movsl
inc
cmp
ret
add
push
pushf
clc
rolb
fistpll
adc
or
fisubs
push
arpl
fistps
icebp
adc
aaa
scas
and
hlt
jae
test
mov
pop
xchg
xchg
cmp
negb
mov
and
sbb
inc
ja
sbb
mov
lods
add
jg
cld
and
arpl
sub
cmpb
ss
sti
je
mov
das
cs
dec
mov
ds
pop
adc
pop
out
fsubrl
adc
cmpsl
cmpsb
jmp
jo
cmpsb
add
xchg
sbb
lret
dec
add
rclb
sub
push
adc
dec
pusha
mov
fiadds
in
loopne
add
push
test
push
xor
mov
sbb
and
into
daa
and
loope
clc
cmp
rclb
aas
cwtl
adc
jns
lock
jbe
xchg
adc
inc
mov
in
xor
push
xchg
mov
adc
mov
inc
dec
loope
insb
ret
clc
adc
push
daa
sahf
and
mov
fs
stos
add
jo
lods
push
pop
jae
ret
cmp
insb
int
inc
push
cmp
cmp
and
sbb
fcmovnbe
andl
in
dec
sub
or
push
push
stos
loop
xor
sbb
rsqrtps
pop
jns
aas
pop
push
data16
mov
les
jmp
aas
xchg
cld
and
stos
sbb
mov
fidivrl
loopw
sbb
adc
test
mov
repz
sbb
out
pop
add
cmp
movsb
and
in
lods
test
andb
rcll
or
stc
push
mov
add
lret
sbb
xorl
stos
sbb
out
in
movsl
sub
xor
out
mov
xor
adc
fdivrs
addl
jmp
inc
mov
enter
dec
bound
pusha
mov
pop
inc
int3
hlt
ds
nop
xchg
out
sbbl
and
js
mov
pop
mov
push
xlat
inc
aas
in
push
adc
sbb
sbb
jp
mov
adc
arpl
aam
or
bound
ret
push
int
or
pop
push
jmp
outsl
adc
fmulp
jge
repnz
lahf
lahf
add
ja
mov
mov
call
test
cmp
mov
xor
cmp
rclb
jbe
and
mov
sub
and
negl
out
sti
adc
xchg
lds
mov
xchg
xor
movsl
or
out
add
arpl
scas
push
cmpsl
inc
or
fbld
fdiv
lods
and
fdivrp
aad
andl
push
out
mov
dec
jecxz
addb
subl
xchg
jmp
jmp
fsin
adc
loop
push
repz
inc
jno
push
mov
movsl
adc
or
cmp
xlat
pop
sbb
cwtl
push
or
jns
aad
popa
xchg
jl
add
lcall
pop
mov
mov
cmp
inc
and
sbb
arpl
dec
popf
fstpl
sub
ret
push
push
inc
push
shlb
out
xor
pop
ds
sub
ljmp
jmp
xchg
xchg
test
arpl
fbld
pop
pushl
pop
loope
daa
ds
in
loopne
or
xchg
mov
xor
aas
sub
mov
arpl
cmp
add
sbb
xor
fcomps
dec
add
jb
pushf
in
mov
aaa
sbbb
push
xor
adc
fwait
inc
pop
std
test
scas
loopne
in
iret
push
aam
sti
jne
iret
and
lret
mov
add
mov
hlt
sub
xchg
push
mov
aam
mov
xchg
call
inc
xchg
add
divl
in
sti
adc
xchg
jns
and
pop
push
and
inc
mov
call
push
test
pop
icebp
mov
aaa
loopne
inc
cwtl
sbbb
cli
decl
cmp
add
push
xchg
pop
jns
lret
mov
mov
mov
jb
pop
pop
pop
jp
xor
mov
cmpsl
in
fnstcw
lcall
and
hlt
clc
jne
insb
adc
add
out
mov
pop
xchg
mov
in
push
iret
or
rep
fs
cmp
cmc
outsb
mov
push
jg
inc
or
jne
lea
cmp
dec
nop
xor
fists
jbe
pop
pusha
pop
outsl
pop
loopne
mov
mov
bsf
cs
sub
call
mov
add
jmp
ds
pop
insl
sbb
mov
adc
addl
add
cmpsb
mov
repz
cmc
push
lock
cli
in
xor
push
lahf
sbb
inc
mov
dec
sub
jne
icebp
movsb
pop
cli
xchg
xlat
sbb
out
leave
das
lret
or
inc
shl
je
shl
inc
and
and
lahf
xor
mov
test
mov
stos
icebp
test
add
push
loope
dec
cmp
repnz
andb
mov
into
inc
add
ds
pop
or
xchg
jge
or
int
add
fstps
cmp
bound
sahf
popa
cmp
jecxz
jbe
xor
pop
cmp
lods
rcrl
in
sbb
orl
pop
bound
pop
mov
cmp
mov
je
jge
add
scas
push
or
jbe
adc
or
js
movsl
repz
aad
adc
sar
incb
sbb
dec
cmp
and
ljmp
and
or
lret
lcall
mov
js
fs
inc
sbb
pop
inc
loop
stos
adc
cmp
push
sbb
out
daa
and
fdivrs
cld
mov
sub
test
aas
stos
movb
adc
lahf
dec
daa
insb
cmp
data16
loopne
cmp
mov
out
popf
aad
cmp
cmp
xchg
pop
xlat
gs
fidivrs
in
pusha
imul
or
mov
add
in
pushl
jns
scas
into
xchg
sub
sbb
dec
loopne
data16
lock
mov
sbb
push
sub
adc
mov
out
push
dec
jmp
fstl
int3
mov
or
cltd
aam
pop
xchg
int3
fwait
scas
xor
or
ljmp
jns
pop
adc
pop
fmull
add
add
icebp
bound
add
in
shlb
push
rcl
popa
cmpsl
push
out
dec
xchg
cmpsb
hlt
jae
mov
add
push
bound
mov
pop
add
addl
push
jle
mov
push
popa
rcl
mulb
nop
add
lcall
mov
add
lcall
adc
cltd
push
arpl
mov
test
add
cmp
add
dec
fwait
xchg
daa
add
mov
mov
mov
adc
and
test
daa
cmp
push
andl
sub
sti
dec
js
movsb
test
inc
add
and
adc
lret
les
cwtl
mov
inc
add
lret
les
push
es
add
mov
add
jbe
dec
sbb
cli
jns
adc
stos
pop
addl
push
cltd
push
mov
push
cltd
mov
mov
nop
clc
aad
sbb
or
push
dec
mov
addb
or
and
xchg
and
adc
andl
or
mov
push
sub
xchg
xchg
adc
push
adc
add
push
mov
or
imul
ss
test
xchg
adc
adc
fwait
xchg
movsl
xchg
orl
add
jne
pop
pop
and
mov
mov
add
ret
push
xchg
adc
and
adc
and
pop
adc
sbbl
adc
ja
mov
add
dec
push
add
mov
icebp
pushf
xchg
nop
jmp
sbb
mov
xchg
aas
sub
and
add
add
add
adc
adcl
add
add
add
pop
or
fwait
xchg
push
sbb
sbb
das
or
and
or
cmp
cmp
inc
movsl
push
andl
or
inc
clc
mov
hlt
iret
or
pop
fwait
xchg
hlt
sbb
stc
adc
sbb
stos
pop
adc
pop
movsl
jae,pt
push
js
fsubrs
jno
fimuls
push
cmc
lret
jns
out
or
test
dec
adcb
mov
imul
xchg
les
pop
stos
cmp
or
orb
add
cmpsb
imul
push
sbb
fstl
outsl
inc
add
push
cmp
jg
inc
cmp
fs
and
jne
or
int
pop
rcrb
push
push
cmpl
jl
stos
add
loopne
sbb
push
out
pop
inc
pop
or
push
jl
cld
inc
lods
xor
dec
mov
or
xor
sbb
fstpt
mov
testb
popf
ret
ljmp
inc
hlt
mov
or
adc
cmp
xorl
loope
xchg
adc
add
ljmp
arpl
pushf
dec
mov
push
or
movsb
les
sbb
add
add
pop
pop
fldcw
mov
sbb
cltd
pushf
fsubl
rcrl
cmpsl
jp
push
out
rol
adc
in
in
nop
cmp
push
sub
leave
cwtl
xchg
adc
add
push
lods
cltd
mov
xchg
cmp
mov
jmp
stos
faddl
push
frstor
xchg
mov
push
cmpsb
fldcw
das
nop
push
push
mov
lcall
ja
inc
mov
push
push
sarb
jmp
push
in
test
sbbb
mov
pop
in
hlt
add
push
in
mov
aas
xor
fisttpll
dec
jbe
imul
xchg
add
inc
push
sbb
js
in
daa
iret
sahf
xor
mov
and
dec
pop
leave
cmp
mov
mov
int3
xchg
xchg
jne
ljmp
pushf
lods
cmovl
push
xor
xor
dec
or
sahf
popa
mov
adc
sbb
aaa
testl
cmp
adc
or
hlt
stos
and
cmp
pop
mov
xor
shr
xor
dec
scas
xlat
cmpb
or
jp
lods
and
stos
push
clc
rep
mov
add
fwait
out
fcomp
push
add
js
xchg
sahf
cmpsb
hlt
or
in
xor
mov
sbb
push
push
leave
sbb
mov
call
iret
add
jmp
fmuls
sbb
cmp
xchg
mov
or
lret
mov
inc
popa
lsl
mov
out
sahf
out
and
imul
or
inc
fstpt
lret
repz
insl
mov
xchg
pop
jne
xchg
jle
sub
adc
mov
sub
jnp
test
add
adc
mov
mov
push
and
adc
jge
jg
popa
movsl
mov
xor
loopne
or
mov
mov
loop
pop
mov
test
jno
pop
testl
leave
inc
rcrl
mov
rorb
push
fcomp
in
fwait
push
lret
xor
dec
repnz
lret
aad
mov
push
ficomps
mov
lds
mov
ret
and
mov
cld
sub
lds
mov
push
xchg
clc
xor
mov
pop
stos
loopne
push
popf
pop
bound
mov
loopne
xor
xchg
dec
cmp
pop
jo
or
leave
mov
mov
push
in
stos
sbb
in
xchg
inc
call
mov
jb
add
and
outsb
push
int
adc
or
add
jnp
xor
xor
pop
pop
mov
mov
movsb
or
fldenv
shll
adc
imul
ffreep
jae
inc
cli
rcll
cmpsb
mov
add
ret
addb
dec
xchg
add
add
mov
mov
sbb
add
js
iret
fildl
repz
stos
aas
add
addb
orl
pop
or
or
les
add
mov
mov
add
orl
mov
lea
add
push
mov
add
xchg
dec
or
ds
pop
cmp
mov
cltd
jns
mov
rclb
ror
mov
add
xor
popa
add
mov
sarl
fwait
inc
in
dec
mov
xchg
mov
sbb
add
repnz
imul
mulb
imul
add
mov
push
pop
xchg
lea
int
pop
xchg
adcl
sbb
adc
xchg
mov
sbb
mov
xchg
push
or
dec
lret
movsl
mov
mov
push
mov
inc
lea
dec
sub
mov
sbb
xchg
or
pushf
inc
mov
push
or
sbb
add
xlat
and
nop
push
xchg
inc
push
push
push
dec
xchg
or
xor
xchg
fwait
lret
sbb
lahf
sub
orl
cmovl
cmp
push
and
push
adc
and
add
dec
xchg
dec
adc
sbb
sub
adc
mov
push
push
pop
mov
sbb
inc
or
sbb
gs
add
test
mov
add
sbb
lcall
leave
sbb
fwait
sub
or
push
xchg
pop
add
mov
and
xchg
xchg
inc
movsl
push
dec
dec
sub
push
inc
push
jbe
stc
das
sarb
push
negb
add
mov
inc
sbb
pop
sbb
dec
cmp
mov
sub
out
fistl
sub
push
out
sub
nop
xchg
fdivrs
incb
cmp
mov
roll
loopne
xor
cld
jge
cs
dec
insb
in
out
fnstcw
in
decb
ljmp
addr16
cmp
adc
in
jmp
sbb
jae
mov
xchg
pop
cmc
push
jne
jl
call
cmp
xor
or
hlt
cmp
sub
and
stos
push
push
and
outsl
fldt
xlat
xor
leave
cmp
push
or
movsl
inc
loopne
push
bound
add
sub
call
fildll
dec
add
fistpll
pop
add
pop
inc
jne
or
xchg
pop
cwtl
mov
pop
xor
cmc
or
mov
xchg
jns
leave
bound
sbb
pop
pop
cs
pushf
push
in
sbb
pop
imul
rclb
jecxz
ror
push
mov
out
or
cmpsb
mov
lods
xchg
jge
aaa
pop
popa
pop
pop
in
cmp
stos
and
fdivrs
mov
out
clc
sbb
hlt
cmp
push
rolb
dec
jmp
loop
mov
das
fdivr
cmp
sbb
lea
or
push
loope
rcr
test
sub
jecxz
sbb
push
fildll
or
sub
mov
inc
cmp
shlb
push
or
aaa
jge
adc
inc
outsl
and
lahf
xchg
mov
pop
fiadds
lret
xchg
popf
scas
loop
sti
mov
mov
lcall
or
push
pushf
jmp
enter
xchg
adc
add
xchg
mov
or
pusha
lret
jae
push
movzwl
nop
fidivrl
xlat
xor
sbb
pop
dec
ljmp
mov
inc
push
movsl
xor
jg
inc
hlt
das
stos
cmpsb
pop
mov
fsubrp
jae
js
adc
jmp
xlat
stc
clc
jle
rcrl
ja,pt
mov
push
sbb
popa
jl
sub
and
pop
sub
or
fcompl
ficomps
inc
push
jnp
inc
mov
leave
jbe
sbb
mov
inc
push
jp
xchg
out
xchg
sbb
jnp
and
dec
sbb
sahf
jecxz
out
int3
int
dec
pop
jmp
pop
std
mov
push
test
push
mov
imul
movsb
jne
adcl
out
ja
mov
jmp
push
dec
in
mov
inc
xor
mov
cwtl
fdivl
adc
and
add
mov
sub
push
or
pusha
or
sbb
jmp
mov
out
mov
jb
leave
sti
pop
imul
loop
push
ds
jg
and
push
lar
out
mov
stos
enter
xor
push
daa
sbbb
stc
out
ffree
xor
cmp
sbb
add
insb
pop
sahf
sbb
inc
sbb
adc
pop
and
lea
sub
mov
push
mov
or
xchg
jg
enter
popf
mov
sbb
push
daa
je
pop
push
push
repnz
or
mov
xor
stos
ret
ds
push
push
test
pusha
mov
clc
popa
and
lahf
jg
imulb
ljmp
sbb
pop
mov
sbb
orb
cmpsl
and
aas
outsl
mov
xchg
mov
adc
pop
adc
maskmovq
testl
xlat
inc
lahf
lods
aam
jb
int3
fistps
push
mov
dec
inc
cmp
add
loop
bound
adc
pop
arpl
cmp
lcall
movsl
xor
xor
stos
xchg
rorb
jae
sub
int3
aas
divl
das
add
push
jg
push
loopne
sub
gs
imulb
ds
fisttpll
adc
mov
push
ret
ja
rolb
clc
xchg
adcl
adc
daa
dec
xchg
xchg
andb
xchg
lods
ret
ficomps
enter
dec
mov
ja
dec
test
dec
and
sbb
pop
cmp
popf
out
aas
pop
bound
jmp
add
push
push
mov
lcall
cmp
psubd
push
dec
hlt
je
inc
and
sti
int
mov
pop
testb
cmp
ja
or
add
jno
jecxz
jle
cmp
fmull
adc
aam
mov
mov
mov
jg
loopne
sbb
or
daa
mov
inc
ljmp
adc
and
xchg
mov
jmp
mov
gs
dec
push
push
xor
insb
fdiv
into
insl
inc
adc
sti
in
adc
mov
lret
shll
pop
out
das
push
and
or
dec
jge
sub
push
mov
dec
lahf
push
jmp
insl
or
sbb
rorl
and
mov
xlat
pop
jmp
movsl
sar
fbld
add
hlt
cli
push
stos
adc
pushf
mov
out
shl
jmp
insb
cmpl
adc
fnstcw
adc
cmp
mov
lea
in
aaa
test
addb
xor
cmp
adc
inc
ja
jb
inc
je
sub
orl
rclb
stos
sbb
lcall
ficoms
xchg
push
daa
mov
lock
adc
fcompl
add
fsts
xchg
xchg
testl
push
push
jbe
add
mov
xchg
cmp
leave
icebp
int
arpl
push
and
cs
add
pop
int
ret
gs
ja
outsl
xchg
sbb
cld
inc
call
add
adc
inc
in
mov
cmp
xor
ret
adc
and
or
xchg
aaa
ja
inc
jo
add
push
or
aas
sub
inc
pusha
mov
mov
add
push
push
and
lret
sub
adc
push
scas
adc
fmull
mov
es
xor
lret
loop
dec
cmp
pop
jns
fbld
fcmovnbe
lret
cmp
ljmp
pop
mov
cmp
or
sbb
dec
sub
push
sbb
push
lret
ss
rclb
xor
mov
cmp
rcrl
out
bound
mov
xor
decl
xor
loope
add
insb
push
mov
add
mov
movsl
mov
xchg
pop
jmp
xchg
aad
push
and
xor
jae
fwait
xor
ret
push
test
push
iret
sbb
movsl
xor
push
jne,pt
hlt
aas
data16
pop
push
cmpsb
fbld
push
out
outsl
and
add
adc
andb
mov
jg
ret
or
xchg
loope
or
xlat
mov
mov
mov
fwait
lods
xor
sub
cli
pusha
in
sarl
xchg
pop
imul
movsb
xchg
adc
dec
sbb
adc
in
roll
adc
dec
ficoms
test
lds
sub
mov
cli
popf
loopne
pop
add
inc
scas
pop
and
subb
inc
les
sbb
popa
push
sbb
pop
and
sbb
dec
lock
xor
mov
jbe
add
mov
or
jne
mov
mov
cwtl
ret
sarl
xor
add
jnp
pop
ljmp
lret
icebp
cmp
es
inc
dec
add
repz
inc
adc
addr16
clc
inc
adc
rcll
pop
mov
fnstenv
xchg
loop
and
fmull
dec
sbb
insb
rolb
xchg
subl
add
loope
mov
and
mov
add
ss
sbb
inc
and
mov
add
dec
fistps
pushf
mov
or
inc
je
das
test
mov
sti
out
arpl
lock
int3
popa
mov
test
arpl
inc
xor
movsl
sbb
sbb
mov
jmp
les
outsb
imul
cs
std
repz
lret
add
add
movsl
pop
daa
xor
rol
and
roll
mov
mov
add
or
pop
xor
lock
pusha
adc
or
out
movsb
call
outsb
insb
adc
cmp
mov
sbb
bound
cmp
dec
mov
push
sbb
xchg
sbb
add
loop
int
pushf
ljmp
popa
inc
or
rol
jle
inc
jo
loope
int3
jmp
push
hlt
adc
pop
mov
pop
aam
push
int3
mov
movsb
nop
jno
mov
fbstp
lds
das
out
pop
repz
in
or
leave
test
and
sbb
mov
inc
add
daa
in
inc
pop
adc
imul
adc
jp
out
in
mov
call
popf
scas
mov
jl
mov
add
mov
inc
add
sub
xor
mov
and
push
xchg
inc
or
popa
adcb
inc
mov
loope
xchg
inc
and
mov
das
leave
and
repnz
fisttps
lret
and
dec
sbb
sub
lea
out
daa
cwtl
xor
cmc
cs
sub
inc
sbb
push
popf
cmp
pmaddwd
adc
mov
loop
int3
xchg
pop
in
adc
negl
pop
dec
lea
sbb
push
mov
sub
les
jmp
xor
roll
aas
bound
call
int3
popa
sub
sti
adc
or
popa
pop
cwtl
mov
push
mov
or
inc
enter
hlt
add
mov
lods
popa
fstpl
lahf
aaa
nop
negb
inc
mov
setae
fwait
xchg
mov
mov
mov
pop
inc
into
pop
test
loop
bound
rolb
repz
or
test
cli
ljmp
jb
cmp
xchg
popf
daa
aad
hlt
inc
dec
inc
aam
loope
inc
les
cmc
xor
in
sbb
popa
test
mov
sub
popf
jl
popa
cwtl
sub
stc
cs
pop
pop
adc
movsb
mov
int
inc
inc
dec
loop
divb
fistl
mov
jne
mov
add
outsb
add
mov
adc
cltd
xor
inc
cwtl
jecxz
jae
cmp
fisttps
dec
addr16
add
ret
in
sub
in
popf
scas
or
orb
push
adc
loop
mov
mov
jns
aam
stc
add
xor
sub
inc
mov
and
in
pop
jae
mov
rclb
incb
sub
xchg
pop
scas
mov
xlat
adc
mov
imul
sbb
loope
ds
cmp
imulb
lock
mov
and
mov
sub
out
push
adc
cmpsl
scas
sbb
ret
mov
xchg
adc
add
int
fistps
movsb
rcrl
xor
aam
mov
adc
iret
lea
aaa
shlb
insl
lcall
and
or
cmp
popf
or
daa
push
adc
aas
lods
or
mov
stc
or
add
pop
ljmp
mov
push
or
cli
mov
cwtl
pop
or
inc
xchg
adc
dec
lret
in
gs
mov
push
push
lcall
inc
bound
aam
addb
scas
push
inc
cld
sbb
out
xor
in
mov
pusha
scas
test
mov
add
aaa
mov
add
stos
les
xchg
shr
shlb
and
and
fstl
jecxz
inc
pop
jns
jae
cmp
or
mov
cli
inc
rolb
pop
jge
push
xorl
pop
and
test
int
adc
fxch
test
push
mov
ja
mov
inc
sub
test
lock
push
negl
in
mov
xor
sbb
inc
xchg
sbb
or
inc
sbb
ret
and
dec
inc
pop
scas
push
popf
mov
inc
sub
aam
sub
mov
stos
or
lods
into
dec
arpl
test
sti
mov
mov
ljmp
xchg
add
and
lcall
inc
sbb
cmpsb
out
pop
inc
mov
cmp
cwtl
adcl
cmpl
and
jmp
in
ret
pop
mov
in
outsb
inc
test
daa
xor
into
adc
pop
mov
loope
jae
pop
lret
mov
inc
in
adc
mov
mov
popa
mov
pop
push
sbb
mov
inc
adc
movsb
ljmp
call
or
pop
adc
loopne
dec
les
ljmp
rcrl
adc
pop
or
bound
sti
stc
aam
xchg
daa
sbb
stc
pushf
enter
stos
inc
inc
dec
push
out
and
dec
mov
repz
and
jg
lods
aaa
adc
mov
push
int
aam
jns
add
cld
out
jae
or
adc
cwtl
nop
orl
and
out
loope
dec
je
adc
pop
lods
mov
mov
mov
inc
cmp
inc
mov
jge
xchg
rcll
pop
andb
jg
inc
syscall
mov
mov
lock
mov
cmpsb
cwtl
push
in
lock
mov
gs
fnstsw
es
or
cwtl
jo
pop
shll
xor
xor
mov
adc
stos
jns
ljmp
fmuls
sbb
stos
adc
ljmp
and
push
test
or
inc
xchg
pop
popa
push
int
mov
inc
insb
mov
mov
cmp
adc
mov
inc
sbb
andl
lret
lea
mov
popf
leave
xchg
and
fisubrl
lds
xchg
or
je
add
insb
push
aaa
repz
mov
icebp
xor
and
and
out
xor
cmpsl
jmp
cmp
xchg
imul
mov
sbb
push
sahf
stos
cli
inc
icebp
add
mov
cwtl
mov
ror
add
fst
popa
and
jg
addr16
les
and
pop
mov
add
stos
xor
repnz
popa
and
mov
xor
add
aam
repz
test
xchg
or
mov
adc
add
jo
imul
mov
mov
and
sub
jo
and
mov
loop
bound
lods
jno
pop
orl
popf
cmpsb
or
cwtl
ret
jle
shufps
stos
sub
je
xor
test
push
adc
fistps
pop
inc
in
cwtl
cmpb
jnp
ror
xor
cmovle
js
leave
loop
popa
add
dec
jnp
and
pop
lock
aam
xchg
mov
xor
inc
add
cli
mov
and
add
push
popf
insb
pop
pop
inc
jecxz
hlt
pop
loope
dec
adc
out
mov
mov
cmp
repz
mov
icebp
add
imul
pop
out
jp
hlt
adc
cmp
adc
mov
das
rcrl
mov
mov
imul
aam
or
and
leave
inc
cwtl
bound
sbb
gs
dec
mov
fcoms
clc
jo
in
adc
xchg
adc
test
cwtl
loop
mov
mov
imul
mov
fwait
jb
push
inc
push
sub
lret
sub
add
dec
pop
push
add
mov
scas
imul
dec
sub
dec
testl
faddl
inc
and
das
je
rcrl
mov
aas
sbb
dec
std
cwtl
cmp
mov
mov
push
or
jne
inc
jnp
or
rolb
push
pop
sbb
popa
cwtl
ljmp
add
inc
sbb
cs
inc
adc
cmpsl
shrl
xchg
outsl
jmp
fwait
sub
inc
mov
mov
adc
cwtl
sub
fsts
xchg
ljmp
pop
orl
mov
shll
ret
xor
shll
inc
cli
cs
xor
clc
inc
xor
js
jne
add
cwtl
inc
or
addr16
inc
mov
mov
in
mov
in
scas
call
loopne
popf
add
jbe
negl
sub
es
addb
cmc
cmp
std
movl
fcoms
in
xor
fistpll
scas
les
mov
inc
hlt
cwtl
mov
sbb
stos
push
mov
mov
and
fists
inc
mov
cmp
or
mov
and
jl
inc
ficoms
cld
sub
inc
lds
sbb
mov
pop
xchg
inc
push
cwtl
loopne
adc
mov
loope
adc
mov
sbb
jno
mov
test
inc
jno
test
pop
cmc
addl
popf
je
fbstp
addr16
loop
adcl
in
leave
cli
inc
mov
xchg
in
push
int3
sub
adc
jnp
inc
enter
xchg
mov
lds
aad
aas
shll
in
fs
sbb
pop
adc
gs
pusha
and
sub
roll
jecxz
mov
sub
push
mov
adc
or
cltd
daa
lcall
pop
or
jp
ficomps
imul
das
rorl
dec
sahf
dec
test
insl
icebp
call
lods
add
cmpsl
xchg
addl
pusha
push
jns
mov
mov
std
rcrl
inc
loop
xor
pop
jg
sub
pop
sub
mov
inc
fcoml
loop
xor
lds
insb
or
inc
fistl
inc
ret
and
in
jmp
stos
fs
mov
and
or
stos
scas
daa
sub
and
inc
mov
pop
js
aaa
or
icebp
push
mov
or
dec
mov
mov
push
mov
adc
cli
jp
aad
pop
or
test
filds
mov
adc
xchg
jno
cmp
or
mov
jg
mov
mov
test
test
mov
mov
shr
daa
cmp
or
or
or
cmc
sbbb
cli
mov
rorl
pop
adc
cmp
popf
xor
sti
insl
inc
adc
out
fsts
fnstenv
or
xchg
xchg
les
gs
dec
lret
inc
push
loop
xor
cmp
call
mov
ret
int3
xchg
mov
jl
jns
sbb
fdiv
popf
cmc
bound
inc
rorl
mov
aad
popa
loopne
mov
push
mov
or
into
cmp
mov
inc
ret
fiadds
jbe
inc
test
pop
adc
roll
int3
popf
inc
sub
inc
bndldx
mov
popa
cs
sub
inc
xchg
mov
andl
mov
push
int
inc
out
pop
xchg
cltd
mov
xor
and
adc
xchg
insb
shlb
sbb
inc
sbb
lret
jl
jge
std
pop
or
repnz
or
aaa
fisttps
test
and
movb
sbb
icebp
mov
mov
popa
inc
nop
daa
fildll
inc
call
pop
mov
ja
mov
ds
inc
sbbl
rcrb
fldt
push
loope
sub
mov
or
hlt
orl
out
inc
mov
lock
adc
sub
cmp
inc
pop
cmp
adc
jno
repnz
push
cli
arpl
aam
cmpl
mov
bound
xchg
arpl
ss
ret
mov
sti
dec
pop
loope
push
or
and
sbb
fdivrs
mov
xlat
sbb
jno
push
bnd
pop
idivl
inc
add
mov
cmp
adc
inc
movntq
and
popa
icebp
push
mov
push
inc
xor
or
shl
sbb
mov
mov
cmovge
test
sub
ja
fnsave
add
in
xchg
xor
ss
repnz
gs
cmpsb
push
pop
test
pushf
mov
mov
cmc
adc
jns
test
mov
loopne
mov
in
loop
dec
or
adc
repnz
push
sbb
outsb
sub
aam
pop
test
or
xchg
sub
cmp
sub
and
jp
sub
push
jecxz
and
inc
mov
in
icebp
jae
adc
sbb
fstp
inc
inc
or
add
inc
push
pop
pop
rcll
cmovae
inc
jle
rcl
das
inc
add
lret
jne
pop
push
shlb
add
outsb
rorl
or
lret
and
lods
scas
popa
push
hlt
lea
mov
cmp
out
fcoms
lods
imul
lcall
pop
roll
stos
mov
sub
mov
inc
inc
js
inc
arpl
mov
push
loop
mov
sbb
das
xchg
popf
repz
mov
repz
push
rolb
and
cmp
pop
mov
addr16
or
rcl
inc
jae
inc
or
lahf
test
mov
fsubl
pop
in
mov
je
icebp
pop
dec
adc
inc
pop
and
sti
xchg
inc
andl
out
xor
jmp
in
push
sbb
ljmp
dec
loope
lcall
lcall
test
popf
mov
inc
push
adc
out
sbb
push
mov
jb
or
push
cmp
adc
popa
adc
test
clc
addr16
nop
add
pop
mov
push
rcr
in
ret
jg
jo
and
sbb
imul
loopne
pop
xor
popa
pop
sti
or
lcall
mov
roll
adc
fcomp
test
and
inc
lcall
jne
mov
sub
jecxz
loopne
sbb
outsl
jnp
xor
shlb
xchg
inc
sar
xchg
pop
or
xor
add
jl
cmpsl
pusha
out
push
inc
dec
xor
xchg
pop
cmp
or
xor
les
rorl
and
std
mov
xchg
or
xorb
loope
sahf
int
inc
std
adc
sbb
js
nop
les
pop
jae
mov
and
xor
jno
sub
pop
inc
push
dec
or
ret
or
ret
les
rol
dec
jmp
aaa
sbb
test
xchg
mov
adc
scas
roll
push
dec
call
popaw
adc
mov
pop
inc
push
xchg
jo
test
and
lcall
repnz
jp
jbe
enter
jp
orb
inc
pop
or
sbb
or
jne
pop
fimull
fwait
add
dec
jae
dec
bound
mov
into
aas
addr16
adc
outsb
lret
add
icebp
adc
lret
adc
cmp
mov
cmp
or
mov
pop
andb
pop
mov
xor
cmc
aas
add
fidivs
cmp
cli
push
sbb
mov
stos
cmp
jno
jge
fsts
sbb
insl
test
inc
pushf
test
imul
push
pusha
popf
ja
leave
mov
sbb
or
cmpsl
xor
cmp
adc
add
mov
lcall
inc
sbb
jl
and
lock
ss
aad
mov
adc
mov
mov
outsb
push
addr16
add
js
mov
xor
scas
mov
sbb
mov
aad
aaa
sbb
pop
sbb
mov
and
inc
incb
sub
mov
inc
mov
jo
cli
sbb
int
cmp
jne
loope
mov
pop
mov
pop
inc
cpuid
loop
cmp
test
pop
cli
xor
mov
fucom
test
xor
adc
lahf
or
jmp
sbb
fisubrl
test
add
lds
adc
test
or
scas
sbb
pop
cmp
ljmp
les
iret
mov
or
push
dec
and
roll
imul
sbb
and
sbb
lds
mov
inc
test
jo
out
push
jno
sub
push
and
mov
outsl
lds
adc
loope
cld
adc
inc
insl
and
xor
mov
inc
sub
fbstp
sti
cmpsb
loope
cmp
mov
inc
daa
mov
add
mov
je
mov
lds
dec
sbb
push
lret
inc
ficoms
in
orl
or
sbb
dec
lcall
rorl
or
or
pop
xor
and
imul
and
loop
imul
pushf
popf
mov
adc
call
je
test
ficompl
dec
dec
test
and
inc
mov
popa
push
xchg
pop
mov
ljmp
cmp
push
xchg
pop
daa
or
push
or
xchg
dec
popa
mov
rcr
test
ja
bound
inc
xor
mov
pop
addr16
pop
imull
xchg
adc
cmp
test
dec
xor
or
add
shr
rol
mov
in
cmp
push
or
add
rorl
inc
jno
xor
push
cmp
jno
pop
mov
mov
aam
sbb
add
mov
clts
mov
mov
arpl
pop
rcll
dec
inc
mov
pop
bound
inc
add
mov
lods
iret
inc
shll
mov
popf
inc
inc
cmp
out
xlat
sub
ret
nop
imul
scas
loope
pusha
sub
and
and
or
lock
fnsave
mov
xchg
dec
dec
inc
mov
mov
cld
mov
fsincos
int3
pop
es
inc
xchg
or
inc
jbe
sbb
in
and
stos
or
insl
adc
pushf
scas
jnp
je
xchg
popa
std
jno
cs
mov
jl
mov
adc
xor
negl
push
add
or
lods
mov
xchg
loope
jg
xchg
add
in
out
icebp
sbb
push
int3
repnz
loopne
and
pop
nop
jno
mov
or
jo
add
mov
sub
call
jbe
inc
mov
push
popf
iret
lret
in
adc
loopne
and
jne
icebp
movsl
addb
lds
xor
or
stos
jecxz
pop
mov
sub
stc
add
fdivrl
loopne
dec
dec
mov
cli
or
dec
inc
mov
xchg
inc
icebp
push
mov
loope
cltd
mov
add
xchg
lock
sbb
fcmovnu
cmp
adc
negl
mov
testb
xor
shlb
adc
sbb
mov
clc
xchg
dec
mov
xchg
out
xchg
mov
fmuls
in
jge
lods
cmp
jno
or
sub
or
cmp
sbb
and
insb
clc
sub
cmc
icebp
mov
or
movsl
and
xor
mov
out
inc
push
dec
rep
or
xchg
mov
jbe
das
fsubs
xor
push
jp
inc
xchg
xorl
mov
cmpsb
mov
in
aad
mov
int3
push
adc
inc
iret
fdivrl
or
dec
clc
sub
in
icebp
lcall
repnz
in
mov
adc
scas
ret
xchg
or
inc
test
rolb
push
iret
push
adc
int3
or
pushf
ret
test
push
jb
jge
mov
fstl
mov
dec
sbb
add
jno
je
loope
push
add
sbb
pop
jno
clc
inc
sub
lds
clc
inc
sub
clc
or
adc
dec
mov
aam
jg
cmpsl
inc
int
loop
sub
int3
loope
fistps
sub
cmp
inc
add
cmp
out
mov
cmp
adc
jl
push
data16
dec
mov
sbb
repz
mov
aas
sahf
mov
and
mov
shrb
add
pop
adc
pushf
sbb
xchg
sbb
je
js
adc
testb
and
repnz
push
cmc
or
or
flds
inc
mov
push
mov
jecxz
pop
lcall
sub
outsl
sub
add
pop
leave
int3
test
cmpsl
pop
dec
and
or
add
or
ret
inc
in
sub
mov
nop
mov
inc
mov
es
sbb
into
and
adc
mov
add
push
clc
loop
hlt
lea
ja
cmp
fnstsw
pop
adc
inc
shld
or
dec
iret
jl
pop
test
xor
push
setp
inc
cli
or
cltd
sub
jp
sub
ds
lret
xchg
sahf
loope
movsl
jmp
ds
pop
jns
jb
jbe
push
push
inc
xor
dec
adc
test
testb
push
mov
xor
jg
insl
xchg
arpl
jle
push
in
pop
daa
pop
mov
dec
push
xchg
push
sarl
add
bound
cmp
out
push
jns
loop
add
jmp
ds
ret
mov
dec
xor
stc
fmuls
fdivp
mov
pop
daa
inc
mov
inc
xorb
out
xor
dec
dec
sbb
add
mov
push
add
xchg
ja
enter
mov
cs
adc
addb
jmp
nop
sbb
adc
xchg
dec
xor
scas
bound
fsubrl
or
or
xchg
and
ss
adc
mov
mov
xor
or
xor
mov
jb
or
lret
bound
popa
xchg
mov
push
inc
fimull
lret
cli
cltd
pop
push
adc
imul
shrb
adc
add
inc
imul
out
shl
jne
push
sti
imul
jge
adc
or
imul
loope
xchg
push
sbb
add
ret
and
mov
xor
jae
xor
xchg
int
and
out
jge
inc
maskmovq
testl
rolb
mov
out
cmp
mov
test
scas
sbb
cli
imull
mov
prefetchnta
hlt
icebp
adc
mov
sub
mov
enter
xlat
add
dec
fdivrl
test
or
and
jnp
add
mulb
pop
xor
fmuls
or
adc
push
iret
add
leave
cld
jl
push
sub
sbb
and
xor
stos
cmp
jle
loope
xor
pushf
inc
xchg
aam
xor
xchg
jecxz
andb
call
out
jne
or
xchg
mov
adc
fnsave
pop
roll
iret
pop
jge
out
movsl
fiadds
test
mov
or
leave
or
cmp
pop
add
add
std
jae
add
ljmp
mov
ror
mov
jnp
xchg
jmp
or
dec
jecxz
inc
cmpsb
cmp
rorl
adc
add
movsl
xchg
add
add
xor
fwait
out
mov
xor
push
rcrl
xchg
stc
add
andb
add
mov
aaa
scas
cli
xlat
add
push
or
addl
jmp
addb
test
in
xor
stos
add
xor
jo
ret
cmp
faddl
lods
sti
mov
pop
mov
das
loop
cmp
movsl
xor
fwait
test
xchg
xor
xchg
in
sbb
cmpsb
clc
mov
fbstp
mov
push
mov
push
sarb
add
filds
jne
out
outsb
mov
jnp
fiadds
std
jns
cltd
idiv
inc
sbb
cli
mov
push
pop
subb
outsb
cmp
sbb
nop
in
and
xlat
loope
sub
adc
pusha
or
popa
xchg
adc
sti
push
cwtl
shlb
es
cmp
loopne
pop
in
mov
add
loope
pushf
mov
jno
mov
xchg
scas
incb
and
adcb
into
arpl
push
int
test
es
jmp
xchg
sub
ret
add
movsb
mov
data16
adc
ret
bound
and
lods
adc
push
je
add
push
adc
xor
mov
rcll
xchg
cmpsl
out
sbb
fadds
in
sub
push
lods
popl
fxch
dec
mov
xchg
dec
je
and
pop
sahf
add
and
add
sub
pop
into
lods
push
adc
and
adc
leave
mov
aaa
lds
add
cmp
push
pop
add
les
in
add
or
into
leave
pop
push
add
je
cmp
xchg
insb
popa
scas
cmp
stc
sbb
popl
sbb
aas
pop
enter
shlb
outsl
xchg
stos
repnz
clc
icebp
jl
or
mov
outsb
into
pop
adc
jo
add
dec
rorl
imul
mov
jmp
adc
arpl
push
test
loop
les
popa
xor
aas
push
jb
mov
rclb
add
rcll
add
add
std
pop
xor
adc
add
outsb
les
mov
push
mov
int3
sub
pop
movsb
inc
and
outsl
out
add
gs
jge
ja
jae
loope
pop
into
lods
cmp
inc
push
fucomi
jecxz
mov
xor
cmpsb
loope
out
add
dec
xchg
push
mov
and
das
fs
std
inc
xor
stc
imul
add
xchg
add
outsb
bnd
movsl
bound
in
rcrb
mov
jle,pn
xchg
insl
aam
mov
les
push
out
mov
inc
jno
inc
cmp
cmp
push
sahf
xchg
inc
lcall
popa
jge
add
bound
addr16
push
add
xchg
shll
pop
lods
add
jno
jp
cmp
in
mov
fwait
add
in
stos
movsl
out
je
jge
enter
mov
mov
dec
pop
sbb
jle
dec
loope
jb
inc
add
fsubl
xor
push
in
and
or
jmp
pop
imul
gs
icebp
pop
lret
cmp
sti
pop
and
jbe,pt
fwait
nopl
outsb
and
dec
or
lock
add
mov
mov
add
outsl
pop
popa
or
sbb
fisttpll
pop
fildl
pushf
stos
add
insb
xor
in
pop
sub
in
gs
hlt
push
push
mov
push
mov
ljmp
sbb
push
or
xor
dec
stc
add
aas
rolb
sbb
pop
out
and
jecxz
add
jecxz
clc
push
add
mov
pushf
add
cmpsb
outsl
add
ds
sbb
cmpsl
dec
xchg
loope
adc
add
jp
jo
add
out
sub
dec
pop
xchg
popa
negl
sbb
pop
add
rcll
mov
test
daa
popa
xchg
jb
add
repnz
dec
add
xor
cli
fidivrl
inc
pop
jnp
es
aad
mov
stc
test
movb
push
sub
repnz
dec
lods
test
adc
xor
adc
je
sub
mov
jge
add
mov
xor
dec
outsb
incl
stc
ficompl
ret
lahf
cmp
xor
dec
pop
add
push
loope
mov
add
andb
mov
std
add
dec
xor
add
scas
rcll
dec
loop
sub
es
jno
jae
xchg
popf
xchg
jecxz
add
add
ret
jp
add
mov
outsb
push
cmp
lahf
sar
das
out
insb
xchg
lret
add
mov
push
js
add
push
push
mov
mov
pop
inc
andb
js
imul
mov
and
jno
or
and
sbb
test
mov
test
jbe
pop
inc
inc
add
jno
push
les
sbb
cmp
sar
inc
lods
mov
cmp
fisttps
mov
add
xchg
or
add
call
incl
add
inc
pop
aad
jno
sbb
adc
ror
xor
aam
data16
xchg
add
fadds
and
sbb
sbb
fildl
fwait
out
fcmovb
mov
and
loop
sbb
iret
nop
scas
in
and
xlat
xchg
inc
out
test
ljmp
or
cltd
dec
loop
insb
add
sbb
pop
lds
add
and
sti
jno
cld
loop
fs
popf
mov
inc
adc
mov
pop
pop
add
push
jle
and
test
mov
dec
pop
add
loope
cmc
js
or
sub
jbe
int3
or
cmp
fistpll
mov
movsl
pop
and
adc
call
add
mov
loope
and
mov
push
push
or
iret
or
pop
pushl
pop
test
scas
dec
mov
adc
jmp
int3
int
lcall
stc
jecxz
push
rol
mov
int3
enter
xor
sbb
sub
inc
and
mov
sbb
sbb
lahf
xchg
fimuls
icebp
mov
and
enter
pop
leave
inc
cmp
hlt
xchg
lea
xor
push
adc
mov
das
ret
sar
sbb
mov
and
push
mov
loope
stos
in
or
adc
insl
int
ret
outsl
das
mov
sub
add
xchg
cmc
dec
aad
cli
add
in
pop
test
fs
jl
or
je
lret
xor
loope
mov
or
pop
int
dec
push
add
push
sbb
in
mov
dec
lods
add
push
fidivrs
push
inc
lock
sbb
js
sub
flds
cmpsl
mov
aas
sbb
loop
lcall
inc
test
add
lahf
add
add
pop
mov
cmp
insl
add
fs
repnz
ret
adc
les
push
pop
int
dec
add
cli
add
add
sbb
fldl
data16
add
pop
inc
adc
cmpsl
out
fidivs
ljmp
ja
fists
jmp
push
add
iret
sarb
xor
or
jle
out
inc
bound
lea
scas
rcrb
adc
rcrl
cli
cmpsl
int
or
add
cmp
or
dec
ret
shrb
mov
mov
adc
add
cmp
loopne
sub
lea
cmc
lods
dec
lcall
addr16
add
xchg
adc
out
xlat
out
mov
scas
aad
or
push
add
iret
mov
movsl
stc
and
call
mov
cs
faddp
mov
and
mov
sbb
xor
lock
jl
lret
xchg
xlat
in
push
push
ljmp
fs
mov
cmp
les
mov
daa
xchg
or
cltd
enter
aam
int3
mov
mov
add
inc
adc
pxor
mov
mov
or
sub
xlat
iret
mov
in
sbb
sub
inc
and
mov
aam
movsb
push
cmc
ja
mov
or
orb
jae
inc
cs
mov
lcall
or
push
cmpsl
mov
insl
std
retw
mov
mov
mov
xor
mov
fstpl
mov
ds
shll
sbb
push
or
inc
flds
pop
pop
xchg
add
adc
adc
lods
push
sub
push
repnz
repz
push
ret
movsl
or
rolb
dec
mov
loope
push
hlt
push
inc
arpl
ds
std
xor
pop
loope
imul
pop
mov
dec
jmp
add
dec
sbb
add
js
or
test
sub
jne
popa
jle
sub
in
xchg
lods
cmc
push
mov
fmulp
fdivs
test
lret
jns
scas
subb
das
stc
rcrb
sub
cs
cmp
dec
add
je
test
add
movsl
jl
pop
push
cmp
fs
dec
fdivr
into
add
jae
ficoms
and
les
lret
ret
movsb
lods
ja
or
push
addr16
jnp
add
pusha
aas
jmp
xchg
inc
pop
add
lock
add
pushf
data16
cmovne
popa
inc
shrb
or
cwtl
add
fs
mov
sbb
mov
add
repnz
mov
test
fiadds
or
add
xchg
jge
dec
mov
adc
daa
mov
add
mov
notb
test
jo
out
je
mov
pop
mov
mov
or
xlat
std
add
sbb
mov
sub
andl
sahf
adc
xor
stos
int3
jae
jp
test
ljmp
rorl
adc
int3
in
pushf
cli
out
xor
mov
sbbl
adc
push
and
push
inc
movl
into
lods
in
hlt
add
rcr
mov
insb
je
lock
dec
int3
pop
cmp
clc
dec
jg
mov
test
xchg
fwait
loop
pop
mov
adc
fbld
add
sub
and
mov
cmpsb
es
or
mov
aad
shlb
push
outsl
cld
imul
lahf
call
les
xchg
mov
mov
das
stos
xor
add
cmpsl
enter
and
adc
sbb
mov
mov
test
jno
test
sbb
insb
add
inc
and
fisttpll
cmp
adc
inc
and
dec
inc
orb
cmp
jo
sti
push
pop
push
inc
jmp
add
test
mov
in
xor
das
or
loop
pop
mov
adc
adc
rep
inc
sar
imull
mov
in
jmp
xlat
jmp
or
mov
rorl
enter
mov
jae
add
in
sub
ljmp
testb
push
add
inc
pop
or
or
testl
out
or
push
or
inc
xchg
xchg
imul
call
filds
fdivl
push
or
bound
insb
cli
pop
idivb
and
popf
pop
and
cmp
adcl
xlat
loope
jo
in
push
or
scas
out
mov
std
add
incl
loopne
push
or
incb
rorb
mov
in
cli
cmp
aad
repz
ljmp
add
mulb
mov
filds
in
cmp
mov
dec
sbb
xchg
xchg
adc
movsl
rcl
adc
call
xor
jnp
cmc
and
push
insl
aam
sbb
pop
xor
mov
xchg
out
jbe
xchg
jno
in
jmp
rorb
cmp
hlt
icebp
mov
push
mov
add
clc
xchg
imul
jae
enter
xchg
adc
mov
frstor
push
mov
arpl
sub
fbstp
cli
rclb
addb
and
or
pusha
idiv
outsl
fs
aas
fiadds
lock
pop
xor
mov
out
push
cmpsl
fxch
xchg
xor
loop
push
rcrb
add
mov
inc
loope
pop
xchg
inc
xor
xchg
push
mov
adc
cli
sbb
pop
xchg
shl
or
and
or
dec
xor
lret
add
repnz
lock
fildll
outsl
dec
or
mov
icebp
and
pop
mov
xchg
and
cmp
outsl
incl
pop
fsubl
adc
inc
and
jmp
flds
push
cmp
mov
dec
xchg
add
sahf
in
push
daa
inc
fcoms
add
cmp
arpl
lock
or
mov
xor
cmp
incb
int
jg
xor
std
lods
ljmp
popa
jb
and
mov
pop
mov
ss
scas
push
imulb
adc
push
adc
push
add
add
popf
cmp
jbe
mov
add
xchg
cwtl
js
xchg
add
and
mov
jno
pop
sahf
and
jb
pop
adc
pop
adc
outsl
sbb
jb
in
xor
int3
lcall
xor
out
sbb
mov
push
add
adc
mov
xchg
dec
lret
arpl
popf
push
rol
pop
fistpl
das
push
or
and
sti
jle
add
aaa
or
adc
xchg
mov
jb
inc
lcall
jno
fwait
mov
leave
pop
push
add
dec
and
push
or
adc
dec
pop
lods
mov
push
or
mov
inc
in
or
inc
push
pop
dec
adc
cmp
lea
cmp
xorb
stos
fimull
popf
lods
je
push
leave
sbb
mov
sub
sub
stc
call
mov
popf
adc
or
nop
testl
sahf
dec
movsl
fiaddl
int
cmp
sti
inc
pop
mov
sbb
sbb
pop
sub
sbb
aas
sub
mul
iret
pop
mov
adc
andl
roll
xlat
lock
movsb
test
pop
call
gs
adc
xor
fdivrs
sbb
pop
adc
idivb
ltr
repz
lahf
inc
lods
mov
leave
push
and
shll
xor
inc
nop
cmp
adc
inc
inc
push
jl
jecxz
mov
pop
mov
sub
sahf
out
fldl
loop
push
push
int3
jno
shll
or
fstpt
lds
in
lods
shlb
mov
push
mov
addb
and
loop
shl
sub
ds
ds
dec
xchg
ret
ja
lret
sub
gs
inc
out
ret
test
sub
cmpsb
or
jecxz
sbb
mov
push
jb
push
test
pop
inc
add
mov
incb
jbe
fwait
xor
sbb
sub
lret
push
add
lahf
int
mov
scas
mov
pusha
fwait
sbb
xchg
jnp
or
in
add
or
hlt
ja
cmp
or
std
sbb
out
jl
sub
jbe
outsl
movsl
xor
test
inc
add
jp
xchg
dec
sub
add
jno
test
or
push
jmp
mov
bound
inc
sub
pop
icebp
scas
sbb
fistl
repnz
adc
mov
sub
mov
ja
jo
clc
push
pop
push
or
cmp
cmpsb
shrd
sub
in
xor
fwait
xchg
mov
push
push
pop
lret
sti
adc
icebp
or
xor
or
mov
hlt
push
lds
push
adc
loop
adc
icebp
sbbl
imul
sbb
std
es
aad
add
stos
loopne
sbb
fadds
adc
lret
push
and
inc
aaa
cmp
add
xor
mov
dec
sbb
lods
cltd
cmp
add
inc
inc
mov
xchg
lcall
cmp
add
and
scas
inc
sbb
inc
add
test
cmp
stos
ss
adc
add
movsl
xor
push
add
insb
insl
loopne
add
mov
xor
cmp
mov
pop
mov
pop
adc
dec
fs
in
inc
and
mov
data16
pop
insb
push
lcall
sub
out
add
cmpsl
imul
cmp
enter
pop
insl
mov
cltd
sbb
add
mov
incl
shlb
jp
add
icebp
lret
mov
xor
mov
cmpsb
add
mov
daa
fildl
xchg
dec
or
adc
movsb
cmpsb
xchg
adc
add
cmp
shlb
lods
jo
push
arpl
pop
mov
mov
push
push
cmp
ret
add
sbb
xchg
jns
xchg
into
add
jno
jp
mov
loope
out
pop
sub
fidivrl
add
mov
cs
sbb
insb
pop
cmp
adc
dec
mov
and
xchg
js
sub
mov
cs
mov
test
add
mov
enter
pop
push
mov
and
mov
movsb
lahf
pushf
add
loop
jl
mov
jle
mov
shlb
or
aad
add
dec
pop
mov
jmpw
inc
dec
adc
mov
enter
bound
sub
outsb
add
scas
xor
add
xchg
xchg
inc
inc
mov
and
dec
xor
aad
dec
popf
aam
mov
in
xchg
pop
int
sub
adc
sub
and
lods
or
mov
add
or
pop
outsl
lds
sub
adc
pop
je
rcll
push
ja
dec
shlb
fwait
sahf
cli
std
mov
or
jl
sti
jns
and
gs
add
les
lods
mov
add
and
push
out
add
imull
je
dec
mov
loop
add
shrb
pop
fiaddl
insl
cs
mov
add
jge
mov
cmpsl
call
lea
inc
sbb
out
outsb
insl
sub
mov
rcll
and
mov
add
jp
scas
cmp
sub
xchg
call
inc
and
xchg
mov
lret
repnz
mov
mov
je
aas
pop
pop
wbinvd
mov
mov
jmp
inc
xchg
inc
in
adc
cmpb
add
lret
dec
sub
lea
mov
aas
cmpsb
hlt
cmpsl
push
xchg
or
test
sbb
mov
sub
push
paddq
lret
pop
mov
ret
cld
mov
add
and
xor
mov
xchg
imul
int3
lahf
and
orb
pop
add
imull
inc
add
or
ss
mov
mov
fiaddl
adc
push
popf
pop
fmull
sbb
add
in
jo
add
jp
test
sub
in
xor
nop
sbb
sti
dec
cmpb
imulb
mov
stos
xchg
adc
mov
sbb
movsb
fs
mov
add
push
cmc
js
aad
test
out
lds
add
inc
sbb
out
or
iret
add
dec
repz
popa
jmp
push
insl
inc
out
aaa
push
jnp
adc
lds
jno
and
cltd
loopne
add
stc
cld
fadds
ss
in
in
nop
push
add
clc
sub
imul
add
fsubr
mov
mov
sbb
inc
and
jne
es
jp
xor
jno
js
addr16
call
outsb
inc
test
dec
adc
ja
push
dec
loopne
add
filds
mov
fldcw
mov
dec
or
or
dec
pop
pop
adc
nop
adc
loope
xchg
stc
and
and
add
ret
jno
push
fsub
jo
jle
andl
or
ljmp
sbb
es
adcb
cmp
and
dec
in
testl
add
lret
lods
pop
or
call
or
pop
adc
add
test
insb
into
xchg
jae
fsts
divl
clc
mov
push
rclb
xchg
add
das
cs
mov
mov
out
pop
sbb
add
mov
sub
pop
outsb
addl
fisttpll
cwtl
insb
lods
or
negl
sbb
push
stos
movb
or
rorl
or
sub
pop
test
jno
mull
inc
pop
popf
add
sbb
add
pop
or
loope
inc
les
lea
call
add
cmc
cwtl
mov
cli
lock
dec
lds
add
xchg
xor
loopne
adc
loop
and
sbb
bound
mov
ret
push
jno
das
mov
xor
mov
outsb
add
enterw
xor
add
sbb
pop
sbb
and
cmpsl
test
sbb
push
data16
cwtl
sbb
fs
loopne
jmp
cld
out
mov
scas
cmc
in
jbe
sub
pop
cmp
jns
int3
jecxz
sbb
cwtl
xor
jae
cld
xor
add
ret
and
mov
in
cltd
pop
cmp
pusha
sub
cld
jo
cs
pop
jg
inc
in
les
movsl
and
mov
loop
or
xor
ret
jb
cmpl
add
and
push
cmc
add
mov
mov
xchg
cwtl
shlb
popa
push
push
movsl
daa
int3
or
notl
call
sahf
add
popf
inc
jbe
fwait
and
jno
add
cmp
jb
xchg
cli
sbb
pop
je
inc
in
pushf
mov
mov
andl
xchg
shl
icebp
dec
repz
push
mov
dec
popa
adc
es
stos
ja
out
pop
out
cmc
xchg
add
mov
nop
mov
dec
pusha
push
or
add
les
test
xchg
loope
jno
push
jae
pop
outsb
mov
and
andb
push
and
sub
jne
pop
and
add
xor
xchg
repnz
push
or
sub
lea
ret
icebp
lods
add
test
loope
inc
push
dec
and
lahf
pop
popa
mov
adc
adc
dec
mov
andl
rorb
pop
mov
or
addr16
cmp
mov
add
imul
out
add
mov
jae
or
sub
les
push
fcomps
testb
inc
add
jp
stos
or
pop
arpl
stos
mov
mov
cmp
popf
or
je
out
xchg
mov
cmpsb
or
xor
insb
outsl
add
fstps
shlb
add
cmc
sbb
cmpb
adc
cwtl
add
loopne
mov
dec
leave
inc
stos
mov
cmpsb
fcmovnb
lret
dec
mov
loope
add
loope
test
sti
sbb
pop
jb
mov
mov
jno
inc
pop
imul
cmp
ds
sahf
lret
das
add
sahf
dec
popa
aam
cltd
mov
jp
lret
in
sbb
scas
mov
jae
sub
imul
adc
mov
mov
jle
cmp
adc
inc
dec
and
xor
and
mov
data16
mov
dec
dec
es
mov
cli
and
insb
xor
add
sti
orl
mov
lcall
mov
rcrl
push
pushf
fadds
sbb
sbb
inc
xchg
call
dec
mov
fdivl
sbb
xor
cmp
lods
sbb
insl
add
inc
inc
mov
pop
stc
pop
jo
bound
push
std
add
jge
or
imul
add
loope
cmp
sub
push
jae
adc
ret
add
push
or
push
and
cmp
or
inc
shlb
xchg
xchg
sub
mov
add
into
dec
add
rcr
mov
add
adc
rcl
adc
cmc
inc
sub
or
sub
data16
dec
bswap
or
mov
negl
movsb
xor
inc
in
lahf
lods
mov
add
ss
or
pop
cwtl
adc
inc
cmpsb
out
sahf
jae
dec
lahf
add
add
mov
add
adc
add
mov
cs
xchg
fistps
add
xor
pushf
mov
bound
adc
sbb
fistpll
push
jo
pop
mov
mov
push
xchg
jae
outsl
add
xchg
mov
stc
push
ret
fwait
mov
cmp
adc
orl
xor
inc
movsl
mov
xorb
sti
dec
xchg
popf
push
dec
cmp
stc
jle
test
pop
or
sarb
mov
cmp
shl
adc
push
mov
mov
pushf
hlt
fdivl
or
out
push
push
cltd
adc
mov
adc
push
xchg
imul
xor
hlt
loop
sbb
cmp
mov
stos
push
mov
loope
sub
xorl
pusha
lret
sub
push
inc
xchg
push
jno
pop
xor
fnstsw
sbb
test
nop
out
cltd
add
lods
clc
loop
das
xor
sub
out
and
pushf
jg
dec
mov
mov
cwtd
ljmp
lods
nop
inc
adc
dec
mov
jb
mov
shl
clc
jg
inc
icebp
add
add
fdivrs
xchg
xlat
clc
add
dec
mov
sbb
jecxz
xchg
inc
sub
push
lcall
xlat
push
sbb
push
sub
test
ja
adc
mov
mov
xor
adc
daa
or
imull
xor
push
add
xchg
movsl
pop
push
hlt
jecxz
adc
mov
aaa
pop
hlt
inc
or
or
test
mov
adc
andl
push
fs
and
add
inc
add
cmp
push
push
sub
jns
dec
aas
scas
or
inc
fwait
mov
stc
stos
repz
or
mov
jge
mov
rorb
arpl
jmp
sbb
cmp
pop
sbb
stos
daa
add
xchg
sbb
mov
mov
push
sbbb
lods
lods
inc
loopw
inc
or
test
cmp
jb
push
stos
in
fisttpll
xchg
pop
flds
bound
data16
xor
pop
jbe
sbb
ds
lcall
negb
xor
cmp
stos
sub
inc
xchg
jge
sub
mov
adc
inc
mov
outsl
popa
ds
mov
les
and
sahf
sbbb
inc
xor
sub
add
repnz
and
cmp
repnz
les
scas
fstpt
xchg
add
cmpsb
inc
xor
test
dec
push
mov
out
and
cmp
mov
pop
cld
jmp
int
mov
lahf
insl
jmp
ret
jp
inc
jl
add
in
sub
enter
mov
mov
mov
push
push
mov
jns
push
xchg
mov
jle
xchg
xlat
sbbb
call
out
std
cs
add
inc
mov
cmp
xor
dec
dec
xchg
or
jne
into
fists
mov
dec
mov
mov
insl
pop
insl
nop
dec
cmp
add
sub
and
xor
sub
sub
mov
enter
push
sbb
sbb
mov
js
mov
mov
sti
mov
fcoms
lcall
push
mov
xor
xlat
xchg
faddl
lods
add
fsubrs
aas
adc
jmp
stos
jle
dec
fwait
or
xor
mov
dec
add
add
enter
ljmp
repz
and
imul
xor
inc
cmp
sti
pop
loop
add
rcl
push
and
aaa
das
push
ljmp
rcrb
ret
ds
popa
add
lea
icebp
ja
inc
xor
add
popa
and
jb
cmp
jecxz
inc
and
or
mov
or
dec
jno
lds
mov
icebp
pop
fstps
aam
adc
adc
pop
sbb
or
xchg
imul
or
xor
mov
mov
cmp
sbb
in
add
mov
cmpsb
jmp
xor
js
out
xorb
jns
push
movsl
or
mov
push
sub
jmp
fldcw
cmp
pop
sub
jge
enter
dec
scas
insb
or
add
jne
popf
out
sbb
cmp
sub
imul
out
sarb
pop
stos
or
add
adc
push
in
adcb
sub
or
and
ret
jns
out
nop
mov
mov
dec
setg
fsubl
and
mov
jl
repz
and
mov
sti
add
and
stos
inc
mov
sarb
jne
xorl
push
dec
ss
mov
mov
adc
shrl
mov
out
mov
loope
sub
dec
test
xchg
aas
inc
add
scas
lcall
rclb
shlb
push
divl
mov
dec
ljmp
mov
out
xor
pop
in
mov
jne
mov
xchg
mov
mov
cmpsb
xorb
iret
ljmp
cmp
arpl
sbb
out
cmp
ret
xchg
cli
in
push
inc
adc
push
push
mov
int3
hlt
xchg
jns
bound
or
loopne
out
push
sbb
mov
or
pop
jle
xor
fcomps
sbb
xor
lds
ret
ds
push
vmovaps
xor
mov
ja
aaa
pop
sub
cmc
lahf
test
or
into
cld
sub
aaa
jb
ds
xorl
jle
pop
dec
pop
neg
push
cmp
fildl
or
mov
push
cmp
mov
mov
and
rol
sbb
or
xchg
add
dec
movl
mov
lock
jbe
add
addr16
rol
jno
stos
pop
or
lods
stc
jnp
mov
bound
mov
in
add
cmpsl
sti
push
daa
fs
pusha
orb
mov
cmpb
dec
push
mov
shrl
enter
dec
fildll
and
cmpsb
test
cmp
pop
xchg
sbb
lods
test
jbe
movaps
or
pop
testb
mov
hlt
or
xchg
lret
subl
pop
or
in
icebp
ficoms
jecxz
mov
daa
mov
xchg
cmp
add
ja
cmpsb
scas
pushf
sub
inc
or
xchg
js
fdivrs
xchg
ret
jmp
arpl
into
cmp
fists
push
mov
xchg
test
jno
adc
repnz
adc
xorb
pmaxsw
xchg
cmc
orb
push
cmpsb
xchg
mov
hlt
inc
es
cmp
sub
and
clc
pop
addr16
xchg
mov
pop
ss
mov
jle
inc
dec
cmp
dec
rol
lcall
mov
sub
push
push
xchg
lret
testl
jae
out
jecxz
xlat
lea
lods
mov
sub
sbbb
xchg
loopne
mov
aad
push
ds
inc
xchg
in
sbb
xchg
jno
xchg
push
fwait
das
push
and
xchg
pop
pop
loope
push
and
movsl
out
jb
jmp
adc
rcll
jae
xchg
or
cmp
daa
add
dec
lea
cmpsb
arpl
xchg
jae
or
addb
sbb
add
pop
add
mov
cmp
inc
xchg
xchg
aam
adc
punpckhdq
iret
ret
in
dec
daa
mov
mov
das
inc
cmp
or
imul
adc
push
out
lods
sti
xor
sub
cmp
ljmp
aas
adc
outsb
dec
hlt
xor
add
out
xor
push
aas
mov
jmp
mov
movsb
pop
pop
xchg
lods
push
sub
sbb
mov
das
add
ret
cmpsb
sub
sub
pop
lods
sub
or
fwait
sbb
cmpb
leave
and
mov
xchg
adcb
ret
and
pop
xor
push
xchg
imul
sub
inc
stc
aas
sub
add
xor
push
inc
ljmp
xchg
sbb
stos
fistl
dec
mov
adc
in
loopne
stos
hlt
ds
sbbb
and
iret
cmp
jge
aad
lea
imul
ret
inc
pop
or
std
pop
xchg
test
je
pop
xchg
sub
mov
xor
or
jp
das
mov
or
ror
data16
lds
mov
adc
or
daa
add
mov
lret
sub
loopne
xchg
ds
dec
popf
adcb
pop
mov
addr16
jo
popa
inc
sub
roll
xchg
mov
pop
dec
pusha
fs
imul
rorb
iret
jg
adc
sbbl
jge
add
insb
jp
mov
fbstp
cmp
inc
sub
xchg
xchg
mov
cmpl
sar
sbb
lcall
jmp
mov
add
arpl
ret
xor
std
enter
jge
jo
lea
cmp
out
stos
jno
scas
push
push
lea
and
sbb
cmpsl
mov
aam
mov
ds
cmp
mov
mov
nop
xchg
ror
mov
loopne
shll
subb
mov
mov
fwait
mov
inc
push
xchg
repnz
aam
add
cmp
xchg
sar
mov
adc
push
ss
sbb
and
nop
and
in
data16
sbb
add
fildll
push
xchg
jp
inc
mov
das
int
cwtl
mov
mov
and
or
lahf
sete
and
add
push
mov
leave
js
mov
ret
xchg
cmp
fldl
cmpsl
repz
cmp
outsb
mov
dec
ficoml
adc
pop
add
sbb
ret
mov
lds
leave
mov
xor
push
clc
mov
mov
adc
push
push
ja
outsb
std
xor
xchg
rclb
push
add
gs
imul
jp
inc
sub
xlat
add
jne
add
pop
cmp
mov
mov
fdivs
sbb
pop
inc
mov
inc
jns
js
lcall
je
xor
cltd
jne
imul
jecxz
out
mulb
imul
xlat
jo
push
xor
jl
adc
push
and
inc
in
or
mov
repnz
sub
or
pusha
push
sub
push
mov
adc
mov
rclb
icebp
push
add
je
das
add
cli
jns
loop
push
add
and
loopne
add
cmpsl
pop
push
stc
add
mov
xor
sbb
dec
int3
flds
scas
cld
in
adc
xchg
jp
mov
ficoms
or
jae
xchg
test
xor
and
dec
sbb
sbb
and
and
push
fcoml
outsl
enter
pop
mov
and
in
adc
sti
pop
xchg
repnz
mov
daa
push
lret
and
jns
repnz
add
arpl
lret
and
imul
sbb
lret
add
icebp
jp
or
das
sbb
xchg
and
out
dec
sahf
xchg
add
pop
push
pop
scas
lret
and
out
xor
jecxz
add
add
shr
mov
adc
xchg
in
insb
stc
add
fcomip
xchg
out
push
add
fisubs
inc
ds
leave
fists
movsl
add
cmp
inc
inc
dec
jbe
xchg
in
mov
add
xchg
int
cmp
outsl
lret
lds
lods
xor
inc
mov
cli
xchg
mov
or
imul
sahf
cmp
mov
pushf
add
mov
sbbb
cli
fistps
fstl
mov
and
cmp
mov
and
sub
add
jmp
dec
mov
xor
sub
mov
sbb
stc
jecxz
or
pop
loop
mov
xor
add
add
out
push
hlt
inc
shr
xchg
leave
divl
adcl
push
sbb
adc
rcl
lahf
scas
adc
sub
and
jge
and
test
inc
and
cmc
pushf
inc
dec
or
pop
pop
call
insl
sub
inc
lds
stc
lock
mov
dec
push
adc
and
in
cmp
sbb
inc
repz
add
rclb
leave
add
pop
jg
in
mov
xchg
ficoml
mov
or
cwtl
add
sbb
cltd
push
loope
xchg
adc
sbb
adc
cltd
mov
out
sub
je
add
lock
lods
mov
or
and
lret
xchg
pop
fwait
sub
cli
push
or
and
xchg
hlt
mov
and
add
jge
fnstenv
cmpsl
out
and
jp
jb
xor
imul
test
js
out
mov
and
stc
repnz
shll
jecxz
add
loopne
cmp
sbb
dec
call
int3
jp
call
leave
and
mov
pop
fldcw
call
ja
mov
scas
sbb
idivb
jno
push
test
repz
mov
pushf
test
gs
pusha
jo
mov
xchg
inc
inc
add
push
xchg
jg
add
insb
ds
cmp
loop
inc
cmp
das
or
ficoml
inc
mov
pop
popa
scas
xor
push
daa
jmp
les
dec
add
mov
mov
pop
add
adcl
into
lea
ret
mov
test
outsl
stc
inc
or
dec
sti
mov
das
jae
adc
jl
mov
add
loope
add
orb
ds
lods
repz
mov
xor
les
inc
sbb
ret
add
jne
test
std
sub
cli
or
dec
loope
cmpsb
imul
scas
push
xor
pop
ret
sbb
sbb
pop
mov
mov
pop
in
add
pop
imul
or
cld
adc
lret
repz
popa
jecxz
mov
fsubp
add
adc
add
or
push
jo
xchg
in
dec
mov
add
out
dec
insl
jo
fsubl
jmp
sbb
add
cmp
push
shl
jecxz
pop
mov
ret
cli
add
test
xchg
dec
aad
add
mov
cmp
jg
add
les
jo
lock
mov
push
xchg
negl
add
repnz
pushf
sub
nop
adc
cli
inc
cmpl
mov
fnsave
sbb
adc
test
filds
stos
jbe
fcompl
push
cmp
stos
jg
adc
push
jb
adc
cmp
jno
jmp
and
mov
add
add
imul
inc
pop
aad
sti
adc
fbstp
add
insb
daa
repnz
cli
mov
xchg
inc
dec
outsb
push
mov
andl
adc
xchg
shlb
call
outsl
pushf
jmp
faddp
add
adc
jne
andb
pop
movsb
loope
dec
shr
adc
add
insl
loope
or
test
fsubrs
pop
psubsw
inc
inc
sbb
push
inc
add
jge
pop
xchg
cmpsl
mov
add
es
push
add
fidivl
mov
cmp
sub
or
add
mov
inc
xchg
mov
sub
sub
je
pop
jle
jnp
and
sub
stos
xor
adc
mov
add
cmp
sub
inc
inc
inc
dec
and
test
xor
push
push
cmp
fisubrs
sbb
add
jle
loopne
or
rorl
arpl
cmp
mov
or
imul
dec
std
push
push
fcompl
sarl
mov
jmp
push
push
test
stc
add
adc
push
xchg
add
sbb
push
aam
negl
call
scas
or
or
orl
mov
loope
out
aam
inc
cld
aas
insl
cmp
fldl
and
or
add
inc
imul
addl
push
mov
imul
gs
loop,pn
out
xlat
dec
or
add
sub
les
add
data16
inc
sbb
push
sbb
aaa
inc
mov
mov
sbb
cmpl
aam
adc
sub
push
cld
and
add
mov
daa
loop
sbb
test
in
cmp
sbb
rolb
jmp
filds
arpl
ror
mov
ja
in
ss
cmp
xor
add
adc
add
std
dec
outsb
push
negb
lret
dec
jnp
adc
leave
add
insb
out
xchg
in
scas
mov
xchg
and
sbb
ror
add
or
mov
add
cmp
jge
imul
popa
mov
jae
js
xchg
pop
pusha
andl
in
add
mov
xchg
jmp
add
add
adc
test
rorb
add
mov
andl
inc
dec
test
out
jae
cli
out
ret
rol
jmp
or
or
xlat
add
lods
mov
mov
add
out
adc
xchg
fdivrs
or
clc
das
inc
sub
popf
xchg
mov
int3
jb
push
repz
adc
fwait
sahf
adc
out
in
in
and
lcall
xchg
dec
add
sahf
xor
mov
cmp
popa
dec
mov
clc
sbb
js
fsubl
mov
sbb
repnz
mov
mov
sub
icebp
jnp
int
mov
cld
add
mov
daa
lods
pop
ja
cmpsb
xchg
add
outsb
pop
sub
loopne
sbb
jb
and
or
inc
add
clc
mov
popa
dec
xor
and
jmp
xor
sbb
arpl
rcrl
inc
sub
inc
sti
and
lods
out
inc
mov
sbb
sahf
add
stc
daa
aad
test
jne
out
rep
std
xchg
sbb
fisttpll
push
enter
lret
lods
cld
mov
adc
sbb
dec
mov
loope
inc
lods
into
punpckhwd
mov
inc
aaa
in
les
ret
push
xor
add
cld
dec
push
add
ljmp
ficoms
xchg
add
lods
jo
xor
stos
jl
pushf
dec
cmp
add
xchg
pop
call
or
xchg
imul
call
lret
imul
add
shll
daa
nop
jnp
inc
pop
dec
add
push
fiaddl
mov
gs
test
sub
outsb
lock
loop
imul
or
mov
sbb
cli
sbb
and
lretw
out
addr16
pop
test
pop
push
and
dec
ret
testl
add
out
add
xor
add
mulb
pop
mov
adc
inc
add
mov
lock
orw
push
daa
mov
add
push
jns
shl
mov
push
xchg
movl
jae
add
es
push
dec
loope
push
inc
mov
sub
insb
les
add
imul
mov
sbb
aad
and
inc
inc
push
nop
aam
cwtl
and
fiaddl
imul
xor
sbb
sub
adc
mov
cmp
sti
test
dec
inc
mov
fsubs
inc
or
lcall
lea
mov
or
sbb
fistps
xchg
jecxz
subl
test
add
pop
dec
mov
sbb
mov
bound
rcrl
add
lods
mov
add
stos
enter
mov
fs
ljmp
sbb
sub
inc
add
scas
bnd
ja
loope
dec
gs
cltd
jae
pop
ss
pop
adc
adc
or
adc
mov
push
ds
insl
add
and
cmp
jae
sar
lods
jle
lahf
mov
shrl
adc
gs
pop
bextr
imul
dec
sub
rol
push
repz
adc
mov
xor
xchg
shrb
mov
cltd
add
imul
and
popa
test
mov
xor
pop
jl
imul
loop
mull
rorb
xchg
jg
add
test
sarl
ljmp
push
sub
add
push
test
pushf
inc
mov
sahf
add
push
ja
movsl
adc
fs
cmp
xchg
addl
inc
std
stos
add
sarl
adc
mov
mov
call
xchg
dec
sub
jbe
lret
adc
bnd
push
pop
adc
and
xor
fwait
xchg
test
inc
insb
mov
popa
lea
adc
cmpl
jmp
gs
mov
cmp
test
arpl
inc
test
cmpsl
dec
adc
jmp
mov
sbb
add
and
or
dec
cmp
mov
xor
pop
xchg
sbb
xchg
or
daa
sub
add
cmpsl
pop
fisttpl
mov
das
ret
push
imul
test
popf
sti
sub
popa
inc
inc
jae
cmc
add
cmpsl
xchg
popf
popf
sub
loopne
adc
jl
cmp
std
lcall
test
icebp
sbb
dec
xchg
mov
sub
xor
push
pop
adc
mov
hlt
test
out
icebp
xor
idivb
fcomps
arpl
dec
push
loope
push
sbb
pop
sub
mov
daa
lods
inc
nop
jae
jne
aaa
enter
sbb
sub
dec
inc
mov
imul
les
lea
inc
sub
dec
inc
mov
ret
dec
mov
imul
xor
orl
xor
adc
mov
adc
mov
loope
lret
or
or
mov
cmpsl
mov
dec
sub
jp
out
inc
loop
or
or
pop
dec
add
mov
jge
arpl
sbb
test
enter
or
test
loope
xchg
adc
mov
out
lahf
dec
syscall
and
or
inc
jle
std
xchg
in
jmp
inc
enter
mov
adc
insb
sub
add
movsl
sub
inc
lret
mov
jp
adc
addl
cmpsl
decb
push
sbb
xchg
push
icebp
cmc
and
andl
cmpsl
adcb
sub
test
xchg
cwtl
test
daa
push
ret
cmc
or
add
popf
lock
add
mov
in
sub
xchg
dec
pop
popf
mov
test
pop
or
dec
mov
push
dec
cmp
mov
popf
add
push
test
cmpsl
xchg
icebp
out
lret
test
cmp
push
jecxz
pop
and
xchg
cmpsl
sahf
and
push
mov
test
call
arpl
daa
dec
outsl
push
inc
test
test
dec
pop
jp
add
cmp
cmp
shl
std
sbb
push
pushw
inc
test
cwtl
xchg
call
add
pop
jle
addl
sub
int
lds
inc
sbb
scas
call
mov
mov
mov
popf
mov
mov
arpl
or
popf
jl
mov
xchg
ret
repnz
xchg
mov
stc
jne
pop
ljmp
test
and
jmp
cmp
pop
rcrb
test
test
daa
sbbb
cld
out
sub
adc
or
xlat
adc
adc
pop
mov
loopne
sbb
dec
cmc
cmp
push
xchg
loope
cltd
or
cmpl
daa
and
push
popf
pop
ds
push
ficompl
ret
hlt
dec
inc
enter
mov
stos
sti
sahf
add
ret
add
shl
ror
shr
push
mov
mov
ror
not
push
lea
push
rcr
mov
jmp
movl
pusha
pusha
push
lea
jmp
bt
or
pushf
mov
lea
jne
add
shr
add
mov
push
or
jmp
bt
cmp
pushf
pushf
lea
jmp
lea
jb
bt
push
mov
cmc
cmpb
pusha
pushf
lea
jne
movzbw
mov
push
push
add
push
movb
test
jmp
lods
lock
daa
push
xor
mov
adc
add
inc
push
iret
xor
dec
popf
sub
and
xchg
int3
nop
pop
jb
add
test
cmp
int
xchg
out
push
push
or
adc
cmpsl
jle
xchg
mov
sbb
push
adc
loope
ret
outsb
shrb
jns
adc
xchg
fwait
call
rcll
mov
pop
mov
mov
cmpsl
dec
in
fnstcw
dec
aad
aas
jne
inc
add
andb
stc
in
cli
sahf
test
out
in
mov
pusha
mov
pop
nop
adc
pop
sub
inc
insb
cmpb
popf
lds
jecxz
push
xor
mov
xor
lock
nop
push
inc
mov
out
mov
pop
aas
sub
ret
xchg
adc
arpl
pop
push
rclb
aad
pop
out
push
das
and
pop
arpl
ficoms
test
call
mov
setae
push
setle
inc
push
mov
seta
call
jae
jle
cmpb
aas
xchg
inc
fwait
pop
sar
inc
dec
jb
fiadds
cwtl
xor
arpl
call
mov
adc
mov
dec
nop
push
aaa
pop
loopne
mov
fsub
adc
ljmp
scas
movsb
cmpsb
push
adc
sub
fistpll
xor
and
and
xchg
dec
test
jo
mov
lret
fiadds
clc
or
sti
sti
push
adc
out
cmpsb
or
dec
cmp
outsl
or
scas
imul
insb
lds
sub
iret
arpl
in
pop
pop
les
sbb
aaa
pop
mov
xor
mov
jns
andb
int3
sbb
dec
inc
adc
jbe
sub
aad
or
jno
jbe
xor
cli
cmpsb
add
xchg
rcr
in
out
fs
cs
jbe
jmp
mov
aas
and
mov
and
cld
xor
jge
mov
shlb
in
pop
mov
xchg
out
sub
jmp
cmp
in
movsl
mov
icebp
movsl
scas
out
push
cmc
adc
xor
xor
jp
pop
pushf
mov
lea
jns
xchg
not
pop
pushf
push
call
mov
pusha
pushf
mov
push
pushl
ret
movb
movl
jmp
lea
jbe
xadd
lea
movsbw
seto
mov
sub
sub
add
xor
jmp
clc
mov
add
add
pusha
or
pushl
lea
je
bt
test
stc
cmp
cmp
jmp
add
dec
outsl
arpl
inc
jb
add
pushl
mov
pushf
movb
mov
lods
call
dec
inc
push
and
pop
jecxz
stos
pop
add
ret
stos
xor
out
loop
jne
inc
cwtl
ret
sti
xchg
mov
jecxz
add
les
icebp
cmp
imul
pushf
jl
rcrl
into
outsb
mov
pop
jp
cmp
pop
xor
add
sbb
adc
pop
or
push
lock
std
std
mov
xchg
push
push
push
je
push
jle
ret
and
add
ss
popf
iret
sbb
jge
imul
mov
push
iret
add
ljmp
xchg
test
xchg
mov
xchg
inc
data16
in
xchg
push
inc
mov
ljmp
popf
jo
jmp
sbb
movzwl
push
or
mov
call
ffree
fsubl
cmpb
fisttpl
into
les
pop
cli
xlat
inc
push
stos
pop
mov
jns
mov
pusha
fs
xor
adc
mov
je
push
push
ljmp
mov
loop
lret
in
daa
pop
es
in
bnd
aam
jp
jp
jno
inc
clc
pop
jp
pop
dec
mov
push
subl
lcall
sub
adc
sbb
loopne
push
mov
aad
ds
cmp
je
mov
mov
and
es
repnz
mov
cltd
lods
lahf
xchg
ja
mov
sbb
pop
add
mov
cmpb
jne
dec
popf
aaa
aaa
xor
xlat
sub
mov
lds
in
and
pop
pusha
cld
aam
sbb
jl
je
movsl
cmp
hlt
stos
sbb
jo
ffreep
mov
mov
push
push
inc
data16
imul
sub
cmp
lahf
test
sbb
inc
xchg
sbb
test
mov
jb
inc
jne
gs
popa
fs
mov
pop
notb
stos
fstps
inc
sahf
mov
out
stos
ds
es
out
ret
mov
sbb
sub
xor
cmpb
add
mov
adc
push
clc
scas
add
mov
lods
imul
xchg
mov
push
call
mov
das
adc
pop
push
lock
in
es
push
xchg
mov
xor
jle
icebp
dec
out
mov
imul
xchg
pushl
arpl
stos
mov
mov
adc
mov
push
push
daa
mov
adc
mov
adc
icebp
mov
clc
mov
mov
inc
mov
push
outsl
orl
mov
mov
dec
fstpl
inc
ljmp
sub
xor
addr16
jmp
jecxz
fdiv
rorl
mov
outsb
gs
xor
cs
insb
add
add
je
outsl
fs
gs
imul
add
mov
xor
test
jb
push
fimuls
ss
pop
xor
in
mov
add
ja
ds
adc
or
fsubr
hlt
nop
add
sbb
xor
scas
repnz
loopne
add
bt
stc
pushf
test
pusha
pushf
call
sar
stc
shld
dec
mov
cmp
pushf
call
lea
jne
bswap
movb
call
stos
mov
or
out
cmp
sti
cs
push
push
jg
out
in
dec
scas
mov
stos
cmp
sub
push
insl
add
jo
push
cmc
fdivrl
cmc
enter
xor
imul
sar
imull
test
inc
decl
rcrl
cmp
enter
adc
push
fs
sbb
sbb
jg
pop
push
cwtl
movzbw
lahf
lea
movzbw
mov
mov
call
jae
pusha
xor
push
pusha
push
push
lea
call
call
pushl
lea
jae
setbe
dec
test
mov
shl
bsr
adc
rol
mov
adc
bts
mov
call
test
movw
neg
cmp
cmc
clc
stc
cmp
pushl
cwtl
bswap
pop
lea
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
xchg
sub
add
imul
pushf
neg
call
pushf
sub
call
neg
stc
movb
pushf
jmp
call
jae
out
cmpb
mov
mov
movsl
push
pop
pop
jecxz
dec
sbb
fmull
in
ds
fidivl
enter
call
xchg
mov
imul
das
lea
add
inc
cmp
and
mov
mov
stos
outsb
gs
cmp
repz
das
pop
fwait
pop
imul
pop
arpl
inc
rcrl
test
sbb
movb
jmp
sub
jb
push
clc
xor
pusha
lea
jl
pushf
pusha
lea
call
push
call
shlb
cmpb
scas
push
push
repz
inc
xchg
cltd
rol
sbb
fadd
test
adc
aaa
lcall
sub
inc
aad
lret
sub
jmp
es
imul
lret
dec
outsl
jl
pop
mov
and
das
and
je
xchg
sbb
and
inc
dec
adc
pop
int3
dec
imul
fsubl
xor
xchg
movsl
dec
in
or
mov
sub
adc
test
lcall
loopne
nop
adc
and
mov
mov
lock
sub
mov
lea
ja
pusha
inc
adc
push
sub
cmp
test
jmp
not
mov
pusha
movw
mov
not
seta
lea
pushf
lea
jl
push
call
pushl
mov
lea
ja
call
ror
mov
test
stc
cmp
cmpb
jmp
clc
cmp
cmp
neg
test
test
std
std
pushw
popfw
jmp
lea
jbe
shrd
not
pusha
sub
bts
and
cmc
mov
lea
mov
inc
mov
clc
rol
add
add
dec
shr
dec
movzbw
mov
mov
jmp
push
cmc
cmc
add
pushf
movzwl
inc
shrd
bts
bts
mov
cmc
clc
add
test
mov
cmp
jmp
jmp
push
call
lea
jb
cmc
cmp
test
cmp
call
pusha
push
inc
movb
pushf
lea
jmp
dec
in
add
cmpb
cwtl
xor
les
int3
push
add
dec
test
test
dec
pop
xchg
pop
xchg
inc
lret
mov
sbb
push
xchg
jl
stos
mov
adc
movsb
xor
sbb
add
xor
fsub
jmp
daa
mov
mov
mov
pushf
lea
call
call
xor
test
cmc
repnz
jmp
jmp
lea
jae
bt
bt
add
pushf
push
pushf
jmp
jmp
pushf
lea
jne
shrd
mov
bt
call
mov
jmp
lea
jne
setle
pushf
movb
clc
mov
or
sub
jmp
jmp
cmp
inc
cmpb
rorb
cli
push
mov
stos
push
or
pusha
dec
cmc
inc
xchg
pop
mov
cwtl
fcmovnu
call
loopne
lcall
sub
cmpsl
shll
inc
cwtl
add
mov
mov
je
xchg
in
fsubs
inc
lock
cltd
cmp
inc
scas
adc
push
ss
mov
adc
pusha
add
jno
jge
pop
xor
inc
push
movsl
stc
jge
sub
pop
in
cmp
pop
cmpb
rorl
sbbl
xorb
cmp
test
pop
adc
lock
test
xchg
jp
adc
push
jp
mov
xchg
pop
cmp
test
adc
cli
fdivrp
lock
wrmsr
cmpb
fdivr
les
fidivl
movsl
in
sub
out
pop
push
fabs
inc
mov
xlat
dec
mov
mov
pop
mov
pop
jo
push
lods
push
int3
aaa
pop
lods
adcl
int3
pop
test
mov
sbb
sti
stc
movsl
pop
lods
mov
sub
mov
lret
xchg
mov
cltd
outsl
inc
sti
pop
xor
dec
cmp
cs
pop
sub
data16
lods
test
lcall
sub
mov
inc
incl
sbb
enter
cmp
pop
addb
jae
fsubrl
nop
in
cmc
adc
jne
or
cmc
fnstsw
sahf
popf
xchg
jmp
pop
sub
cmp
xchg
push
cli
jle
xor
out
test
int
mov
mov
jle
aas
repnz
cli
out
rcrb
mov
roll
and
xchg
lds
pop
shl
cmp
ja
daa
add
jecxz
xor
lea
movsbw
sete
movzbw
pop
movsbl
call
hlt
out
add
cmpb
dec
mov
sub
into
sub
fdivrs
pop
ret
leave
cs
or
pop
xchg
stos
ja
addr16
testl
ds
cmp
and
dec
dec
mov
jp
xchg
loop
mov
sub
sbb
mov
scas
mov
vpunpckhwd
mov
lea
scas
jl
mov
imul
xchg
xor
repz
cmpb
mov
inc
jg
clc
lahf
mov
pop
adc
scas
jl
sbb
or
cmp
jge
mov
adc
pop
sub
loope
mul
jecxz
mov
insl
mov
sub
nop
push
dec
test
pop
pop
jle
sti
stc
in
outsb
sbb
adc
mov
jg
dec
pop
out
xchg
add
mov
fdivr
arpl
and
sub
jle
nop
fwait
push
jl
sub
and
mov
push
sub
loopne
nop
push
xchg
xchg
xor
mov
push
call
shlb
fsubl
add
mov
sbb
sarl
in
pushf
mov
cmpb
jb
xchg
xchg
aas
movsl
scas
rcll
fistps
or
xor
or
jno
loope
dec
inc
cmpsl
popf
cmp
shrb
lret
jb
add
push
mov
mov
shl
sub
ljmp
add
lret
xor
or
je
xor
inc
loope
jecxz
jecxz
ret
loop
mov
xchg
mov
icebp
xchg
xor
stc
inc
enter
andl
popf
fldenv
adc
cmp
dec
xchg
mov
and
add
add
fcomps
loopne
pop
pushf
lea
setp
mov
mov
pushl
lea
ja
call
stc
neg
bt
mov
push
sub
mov
call
mov
movl
push
pushl
lea
jmp
push
lea
je
cmp
add
cmp
pusha
cmp
pusha
lea
jb
bt
cmp
call
mov
shll
cmpb
pop
mov
add
imul
mov
jp
bound
iret
push
jnp
jne
in
clc
bound
inc
outsl
mov
out
jg
jle
pop
cmp
das
and
mov
inc
cs
xchg
jle
jae
test
fildl
pop
xchg
cwtl
rcrl
push
and
xchg
pusha
mov
xchg
ds
or
xor
fs
xchg
mov
stc
in
or
jmp
aas
mov
rcl
push
or
cs
lcall
addr16
mov
int3
lock
loope
xchg
hlt
push
pop
xchg
xchg
cmpsl
sub
ret
inc
fst
mov
in
mul
and
movsb
lock
xchg
sbb
bt
push
out
addb
jecxz
cmc
and
lret
push
sub
fwait
rcr
addb
scas
mov
in
jecxz
jle
mov
cmpsb
stos
mov
test
lds
push
add
in
sub
aas
mov
outsl
lret
push
ror
loop
xor
popf
sub
sub
xchg
fsubrl
xor
mov
dec
insb
jo
adc
sbb
rcr
cmp
sub
aam
movw
mov
call
lea
jne
mov
mov
push
jmp
pushl
pusha
lea
je
clc
bt
jmp
mov
not
not
lea
bswap
mov
call
dec
inc
pop
xor
mov
pop
dec
negl
incl
pop
fstpt
dec
inc
jle
pop
and
pop
cmpsb
mov
xchg
inc
lods
xor
sbb
js
dec
popf
outsb
test
mull
inc
aaa
lea
daa
ds
fs
inc
lods
mov
jns
mov
dec
in
adc
rcrl
jns
dec
cmpsb
push
mov
out
mov
sbb
pop
shlb
pushf
mov
not
pushf
lea
call
pushf
lea
jae
pushf
lea
jae
stc
sub
push
pushl
lea
call
call
call
dec
scas
les
arpl
movsb
mov
bnd
imul
or
pop
and
sub
js
jo
dec
mov
cli
subl
mov
mov
xchg
cwtl
lea
pop
subl
lcall
repnz
lea
aas
pop
lret
pop
xor
ret
fisttpl
xor
or
stc
jge
add
xor
sub
pushf
or
pushf
pushf
push
mov
lea
je
movsbw
movzbw
jmp
cmp
pushf
jmp
pushl
popl
movl
pushf
pushf
movl
pushl
ret
fld
fdivs
cmpb
sbb
adc
cmp
clc
leave
pop
push
mov
cwtl
xor
pop
call
cmp
inc
andb
sub
pusha
jb
pop
es
dec
cs
ss
xlat
test
push
fldenv
stos
mov
shl
pop
in
xlat
test
inc
jns
sbb
mov
inc
in
jl
xlat
int3
rorl
mov
dec
mov
sarb
out
fcmovbe
in
mov
clc
andb
add
mov
clc
cmp
movw
pushf
lea
ja
pushf
sub
add
sub
push
stc
mov
push
cmp
pusha
jmp
cmc
bt
add
jmp
lods
cmp
bt
neg
jmp
jnp
adc
push
jmp
mov
jmp
lea
jne
bswap
mov
pushf
lea
jmp
cmp
jmp
mov
into
aaa
cmpb
or
leave
add
mov
jecxz
xor
sbbl
dec
inc
stos
pop
lret
pop
mov
hlt
dec
ret
dec
fwait
mov
fwait
dec
mov
andb
cmpsb
test
mov
mov
in
xlat
jne
inc
push
popf
cmpb
mov
add
push
push
cmc
leave
dec
cli
das
in
loope
and
std
jmp
call
jle
imul
jo
loope
mov
mov
xor
bound
xchg
out
xchg
pop
in
mov
leave
xchg
mov
fstps
mov
xchg
inc
imul
clc
bt
bt
repnz
pushf
pushf
lea
jne
clc
neg
bt
mov
clc
pushf
test
sub
mov
pushl
push
lea
jmp
jmp
bt
mov
clc
repnz
push
lea
jg
jne
lahf
movzbw
movb
not
bswap
lea
push
pushf
lea
lahf
lea
pushf
pusha
jmp
call
lea
jne
adc
mov
lea
sar
bsf
sub
push
lea
add
test
sub
clc
pushf
bt
jmp
lea
jne
xor
test
mov
cmc
sub
pusha
mov
lea
jmp
bt
push
das
push
mov
rcl
push
rcl
aaa
dec
push
aad
not
mov
cmp
push
pushf
push
test
call
push
pop
jb
cmpb
fucomip
ret
pop
or
cmp
and
pop
push
add
mov
in
xor
les
in
push
adc
in
inc
adcl
xchg
pop
stos
test
out
mov
jmp
xchg
ljmp
inc
cmp
lea
je
clc
add
clc
cmp
jmp
lods
dec
pop
cmp
mov
insb
clc
insb
inc
mov
dec
mov
lea
jl
imul
into
push
jb
pop
test
cmp
clc
add
adc
imul
xchg
push
push
pop
push
xlat
mov
arpl
sbb
mov
packssdw
mov
movsl
scas
test
sub
daa
mov
sbbl
cmpsl
insb
gs
adc
adc
insl
loopne
dec
cli
add
jnp
dec
outsl
mov
das
out
inc
nop
adc
pop
xchg
adc
int3
xlat
clc
jnp
pushf
data16
dec
push
push
aas
loope
xchg
add
in
popa
jge
or
xor
fdivrs
cmpb
imul
jg
ljmp
xchg
jmp
clc
push
aas
loope
inc
fwait
les
push
addr16
fcmovu
inc
sahf
inc
mov
sub
icebp
in
cld
push
push
negl
rol
adc
xlat
add
inc
sahf
sbb
add
sbb
lret
popa
dec
add
gs
das
xor
jecxz
test
daa
pop
xchg
mov
dec
mov
push
jg
mov
pop
mov
lahf
cmpsl
and
mov
inc
vsubps
outsl
dec
arpl
pusha
jno
ja
inc
or
scas
andb
mov
das
adc
jnp
mov
cmp
add
sbb
icebp
adc
add
dec
clc
test
aad
aaa
fildll
insb
js
pusha
sub
or
add
xor
aas
mov
xchg
pushf
lea
jnp
pusha
lea
jbe
bt
mov
neg
bswap
dec
or
add
setno
movsbw
btc
mov
neg
neg
add
stc
or
bswap
dec
movl
setb
rcl
mov
clc
call
idiv
adc
mov
cmp
insb
fcomps
adc
fs
mov
fdivrs
jbe
xchg
push
xor
testl
mov
push
movsb
xlat
and
shl
sub
adc
enter
fdivr
aam
mov
in
jmp
mov
jle
enter
not
mov
mov
mov
push
movb
pushl
ret
call
pusha
lea
jb
stc
call
adc
pop
cmp
mov
sbb
aam
sbb
and
pushf
and
pop
aam
inc
pop
jbe
shl
cmp
jge
in
jl
fwait
fs
sti
imul
scas
mov
xor
dec
shrb
test
icebp
jb
negb
mov
loope
cli
mov
mov
sub
ret
push
add
push
add
xchg
and
aaa
mov
into
shr
sub
call
in
std
pop
mov
push
add
test
sbb
push
mov
mov
std
loopne
adc
aaa
fldenv
cli
loopne
push
rorb
mov
inc
jbe
shlb
daa
mov
in
and
imul
sub
push
and
shl
cmp
fmuls
jnp
cmpsl
in
call
or
fldl
call
in
adc
push
or
add
out
in
jmp
mov
adc
cs
call
push
inc
mov
mov
hlt
adc
mov
in
dec
les
movsb
in
push
insb
int3
mov
aam
stc
cmpsl
clc
lods
sub
sbb
call
lahf
mov
out
mov
inc
cmpsb
sub
in
test
pop
lcall
incl
out
mov
repz
cld
or
jmp
or
add
jns
sub
call
cmp
jb
add
xor
jno
enter
cmp
push
jg
movsl
jns
sub
push
adc
and
jmp
sub
mov
call
sbb
js
movsb
sub
push
lock
ja
mov
enter
cs
push
mov
incb
movsl
sub
call
loopne
mov
in
dec
adc
ja
mov
movsl
sub
fsubr
outsb
adc
cmc
movsl
in
call
andl
push
mov
mov
loopne
mov
daa
mov
scas
or
dec
cmc
bound
mov
idiv
mov
ficomps
cmpsb
in
call
xchg
daa
sub
test
in
adc
in
cmc
mov
and
and
pushf
bswap
mov
add
jno
call
cmc
sub
test
neg
cmp
cmc
cmc
cmp
setl
movsbw
lea
movsbw
lea
pop
mov
call
neg
cmc
movb
test
clc
cmp
jmp
jl
jnp
cmpb
in
dec
imul
pop
or
leave
sub
test
clc
xor
out
das
cmp
xor
push
out
dec
rcrl
cmp
movsl
inc
pop
mov
xlat
or
cmp
xchg
mov
xchg
mov
jnp
call
movsl
cmp
cmc
jmp
pop
push
icebp
mov
ss
int3
pop
push
jp
add
add
or
add
adc
mov
mov
fwait
imul
push
mov
outsl
gs
lods
cmpsl
stos
and
dec
or
jle
das
mov
xchg
dec
jno
xchg
mov
orl
jns
sub
fisubrl
pop
push
fisttpll
cmp
clc
jmp
inc
lea
mov
pop
sahf
repz
xlat
jge
xor
inc
insl
push
and
fnstcw
inc
fiadds
iret
cmc
xor
add
in
pusha
stos
pop
imul
xor
icebp
cmp
cwtl
sub
lea
xchg
scas
imul
std
arpl
inc
mov
dec
sahf
mov
scas
xchg
scas
mov
mov
pop
push
dec
push
cmp
icebp
push
jmp
das
mov
pushl
push
add
pushf
mov
jmp
lea
jbe
xor
mov
rcr
lea
bsf
sbb
add
sar
shl
mov
and
add
movzbl
movl
btc
shr
mov
jmp
mov
mov
sbb
mov
and
mov
push
push
ds
xor
inc
xchg
pop
cmp
leave
bound
jecxz
push
cltd
xchg
jl
or
jno
jle
pushf
adc
aaa
pop
fwait
pop
arpl
cmp
inc
jg
aas
xor
daa
mov
popf
jg
outsl
dec
sbb
cs
pushf
push
in
or
dec
xchg
jnp
mov
andl
xchg
scas
add
into
or
inc
mov
and
push
insl
mov
xchg
pop
neg
lret
dec
push
jo
popl
ljmp
enter
push
pop
out
lret
jp
inc
addr16
outsb
inc
stos
lods
mov
cmp
mov
bound
in
pop
cltd
aad
popf
mov
cltd
or
or
mov
push
pushf
movl
mov
pusha
lea
jmp
fcom
out
cmpb
xor
mov
sbb
xchg
insl
cwtl
fsubl
or
xor
dec
hlt
add
fcomps
in
or
and
xchg
test
nop
in
xor
jae
or
mov
jno
push
cmpsb
mov
fldl
in
jl
jno
xchg
and
nop
and
mov
aad
push
mov
stc
std
cmp
jno
dec
in
inc
jne
scas
popf
or
add
mov
int
int
std
cld
cmp
and
push
test
fdivrl
je
cmp
sbb
in
orl
cmp
pop
lret
out
addr16
rclb
cli
dec
and
lods
mov
pop
das
pop
mov
jecxz
lret
lahf
jecxz
and
das
jae
out
mov
pop
xchg
lahf
mov
cmpb
rorb
notb
rcrb
mov
xor
loope
adcl
xor
arpl
jnp
sub
jnp
jp
mov
push
jmp
jmp
aas
xor
mov
xor
cmp
aam
hlt
call
dec
cmp
sbb
sub
loope
in
ret
loopne
stc
pushf
mov
clc
test
pushl
pushf
push
pusha
lea
je
push
add
lea
bt
cmp
pusha
call
push
lea
jbe
shrd
bsf
sub
shrd
cmp
mov
cmp
and
mov
cmp
shl
btr
btc
add
movsbl
movzbl
shr
rcl
mov
bsf
mov
lea
add
not
movzbw
movzbl
mov
push
pushf
mov
mov
movb
movb
pusha
jmp
mov
lea
jbe
mov
sub
rol
xchg
sub
mov
movzbw
shld
pushf
mov
test
pop
btc
add
ror
call
cmp
stc
add
cmp
mov
push
cmp
test
jmp
mov
inc
sub
rcl
add
jmp
xor
ljmp
cmp
jnp
stos
push
xchg
dec
jmp
dec
add
orl
jecxz
icebp
inc
mov
jo
xchg
pop
cltd
inc
in
bound
dec
inc
mov
pop
cld
mov
mov
into
cmp
lods
and
push
fdivl
dec
dec
mov
mov
and
inc
add
lret
movb
add
pusha
pushf
lea
jmp
cld
testl
mov
mov
xchg
adc
addl
addr16
lcall
dec
cmpsb
bound
lcall
mov
ret
sbbb
push
adc
jecxz
pop
push
fs
in
fidivrs
repnz
xor
in
cld
push
cli
lods
pop
sub
in
adc
lcall
mov
lret
mov
dec
sbb
mov
jns
icebp
sub
rorl
push
test
sbb
test
into
test
popf
add
lcall
jae
shll
movsb
dec
sahf
mov
pop
aad
aas
cmp
loopne
push
rorb
jg
fs
pop
inc
loopne
loopne
push
dec
jbe
push
push
data16
jb
adc
lret
xchg
xchg
mov
pushf
adc
lea
pushf
call
cmc
sub
movb
lea
jmp
mov
adc
pop
scas
jp
jp
sub
mov
xor
jg
dec
jmp
ret
bts
or
pop
push
mov
dec
out
shrb
cmc
loop
lds
fbstp
rorl
cmc
add
xor
testb
stos
mov
jae
inc
mov
loopne
inc
gs
xor
out
hlt
call
xchg
fdivr
sbb
adc
cmp
fwait
adc
nop
xchg
mov
push
mov
push
outsl
cmc
fcmovu
adc
xchg
adc
mov
icebp
ljmp
insw
testl
xor
dec
gs
mov
add
sub
lds
xchg
leave
in
out
pop
inc
cmpb
imul
inc
dec
inc
sbb
push
ds
xchg
push
sub
icebp
leave
adc
leave
sbb
push
or
andl
fs
pop
in
aaa
adc
sbb
adc
leave
sbb
jno
xchg
mov
jle
inc
xlat
inc
jnp
mov
fsubs
movsb
sbbl
add
mov
insb
fcomp
inc
icebp
push
sub
or
jl
cltd
push
sbb
faddl
shll
cmp
xchg
push
jp
insb
ja
dec
lock
inc
dec
push
dec
ljmp
or
push
lret
push
lret
in
cwtl
inc
dec
pop
jp
imul
ret
int
mov
push
out
cmp
jnp
xchg
pextrw
imul
ja
test
jecxz
test
test
sub
pushf
andb
outsl
mov
xor
loopne
clc
fisttpl
inc
and
xchg
mov
or
sbbl
fistpll
sbb
and
hlt
rcl
push
sub
push
mov
jae
aaa
inc
movsl
mov
pop
popf
add
cmp
cmp
jmp
push
and
xor
call
cmc
jmp
and
mov
cmp
call
call
and
mov
xlat
arpl
sub
roll
fwait
jg
xchg
jecxz
xchg
adc
aad
adc
or
sti
mov
in
or
mov
xchg
mov
add
mov
dec
jg
fs
cld
sub
mov
stc
call
mov
rcrb
pop
pop
inc
xchg
scas
stos
popa
dec
pop
push
in
add
jge
push
movsl
roll
js
inc
push
mov
xchg
loopne
sbb
cmp
pop
push
dec
mov
shr
jmp
add
mov
pusha
movl
call
lea
movl
movw
pop
movsbw
bswap
lea
lea
jae
push
jne
pusha
pushl
popl
mov
movb
pushl
ret
pusha
push
movl
push
pushf
lea
jmp
not
mov
movw
lea
ja
pushf
pushf
push
movw
lea
jb
call
lods
push
neg
movb
rol
pushf
push
inc
cmp
clc
neg
jmp
lea
je
cmc
cmp
cmc
sub
test
jmp
dec
movb
push
stc
neg
test
cmc
sub
call
call
jmp
call
cwtl
cmp
cmpb
or
sbb
int3
push
xchg
inc
add
icebp
or
cmp
sub
cli
outsb
es
dec
jo
test
dec
mov
insb
shlb
mov
stos
inc
test
sub
sbb
add
shll
loopne
mov
xor
mov
jo
push
xlat
sahf
ja
aam
das
add
mov
int
movsl
cltd
int
mov
mov
shrb
mov
call
add
jmp
dec
scas
ret
dec
cmpb
xor
andb
pop
push
mov
cmpsb
or
pop
test
movsl
sti
cmc
cli
nop
nop
mov
sub
push
aam
aad
mov
lea
mov
push
leave
in
xor
pop
sub
xchg
pop
in
fsts
iret
aam
int3
jnp
sub
xlat
adc
cwtl
mov
inc
rcr
in
mov
je
xchg
push
pop
ret
and
dec
push
imul
xchg
ficoms
pop
pop
call
adc
mov
roll
jl
mov
adc
and
jnp
roll
adc
popa
rcr
loopne
and
push
popf
xor
mov
mov
shrb
cs
shlb
mov
loop
adcb
data16
movsb
pop
push
inc
cwtl
adc
push
movw
call
push
pusha
lea
jne
lahf
jmp
jbe
xchg
dec
cmpb
call
cld
xor
or
or
mov
ljmp
fwait
jle
sbb
rdtsc
in
xor
and
ljmp
cs
xchg
pop
rclb
repnz
dec
movsb
nop
mov
add
pusha
call
ret
dec
cmpb
in
or
push
mov
sub
movsl
mov
insb
icebp
push
dec
push
dec
xchg
inc
xchg
pop
xchg
cmp
sti
pop
jbe
xchg
aam
ja
into
or
sub
bts
pop
imul
outsl
and
enter
repnz
popl
cmc
cmp
jmp
push
bt
call
shr
bswap
sub
mov
not
stc
rcl
xor
mov
rol
cmc
sub
call
lea
je
push
pushf
lea
jmp
push
mov
movsb
loopne
mov
fwait
add
in
and
out
fstpl
inc
imul
pop
mov
mov
pop
jbe
or
sbb
stos
ret
cld
repnz
repz
jb
mov
sub
inc
inc
push
leave
and
shrl
dec
outsl
lret
cmp
rorl
lds
sub
insl
dec
dec
jg
shl
test
loopne
stc
mov
mov
das
mov
mov
sbbl
pop
push
push
rcr
aam
or
sub
or
repnz
pop
icebp
ficomps
mov
dec
cmpb
inc
xchg
push
mov
sub
mov
rol
push
je
dec
and
adc
pop
xor
stos
add
push
or
push
push
inc
pop
test
adc
xor
int3
in
or
int3
loopne
call
and
or
push
adc
lret
clc
cmp
cmp
push
movb
pushf
jmp
call
mov
test
test
pushf
pusha
lea
je
stc
pushf
call
clc
mov
clc
add
neg
add
jne
cmc
movl
clc
mov
push
cmp
mov
jmp
orb
test
sarb
add
adc
adc
iret
mov
outsb
add
jle
stos
mov
pop
test
mov
ja
or
sahf
rcr
ret
push
pop
pop
mov
in
push
mov
out
leave
loop
lcall
cmc
icebp
and
bsr
mulb
jno
jno
outsb
mov
lods
mov
imul
mov
mov
and
push
push
out
fmull
out
add
cmpb
mov
inc
dec
repz
xchg
xchg
mov
sbb
imulb
and
and
xlat
jecxz
fdivl
pop
jnp
dec
lret
fisubs
paddusw
add
stos
scas
or
mov
adc
cltd
pop
dec
int3
pop
pop
icebp
add
lret
pop
fistl
pop
sub
pop
pusha
jbe
add
jnp
cmc
out
add
cmpb
lods
and
nop
adc
movsb
mov
mov
push
push
inc
in
test
test
pop
inc
sub
test
iret
aas
in
jae
daa
aaa
popf
jbe
ja
sbb
mov
mov
test
test
jo
pop
jnp
and
pop
sbb
xchg
bound
pop
xchg
lahf
nop
mov
fmulp
jge
insb
jno
mov
pop
xchg
lahf
jl
rolb
jno
sub
int3
fstl
jae
cld
jecxz
idiv
out
sub
xor
sub
psllw
jmp
or
out
in
fidivs
pop
out
push
in
or
cmp
sub
add
mov
push
mov
out
sbb
inc
pop
jae
xchg
daa
stos
das
or
ja
pop
xchg
scas
cmp
inc
and
ljmp
pusha
pushf
lea
je
jmp
jmp
ljmp
pushf
pop
dec
dec
aad
push
lahf
addr16
push
movsl
in
jno
sub
pop
push
or
push
mov
cs
and
int
gs
pop
cmp
les
jo
fsubrs
iret
repnz
call
jmp
push
mov
lea
je
clc
jmp
pusha
lea
jb
pusha
bt
movb
call
xor
inc
dec
cmpb
mov
push
add
out
sbb
imull
add
mov
mov
popa
push
mov
out
adc
iret
cmp
cmpsb
fs
aam
in
pusha
xor
pop
and
mov
iret
sbb
cmc
sub
shlb
dec
cmpb
inc
fisubrs
xchg
push
push
adc
cmp
xor
bound
imul
jl
mov
pushf
xchg
lea
scas
iret
mov
inc
cmpsb
sahf
sahf
mov
jle
lret
push
jge
xchg
arpl
adc
cmpsl
add
push
xchg
xor
fwait
das
jl
lock
test
test
popf
leave
mov
pop
inc
pop
sub
shrl
push
jb
add
addb
add
push
add
add
add
adc
add
aam
add
adc
add
rcll
add
add
add
shrd
add
mov
mov
push
mov
pusha
call
stc
cmp
jmp
inc
inc
sub
push
pushl
ror
xchg
add
shr
mov
bt
and
mov
rcr
mov
stc
bt
stc
call
jmp
mov
pusha
push
movb
pushl
ret
mov
bswap
movzwl
bswap
bswap
movzbw
lea
pusha
mov
movzbw
mov
push
pusha
pushf
lea
call
pushf
lea
jno
jne
not
jmp
movsbw
rcr
add
xchg
shl
btr
mov
and
pusha
rcr
dec
mov
shr
neg
cmc
shld
mov
pushf
or
call
mov
pusha
call
jmp
movl
movw
lea
jb
pusha
movl
push
push
pushf
lea
jmp
call
call
pusha
lea
ja
push
dec
inc
not
mov
jmp
repz
push
push
cmpb
jne
push
push
int3
and
inc
push
loope
mov
jo
out
in
lea
adc
xor
in
fcoml
f2xm1
inc
gs
inc
fcoms
bound
mov
xchg
ds
es
ror
cltd
outsb
fnstcw
xlat
ds
pop
cmp
lret
shr
sub
inc
dec
xor
xor
mov
test
test
je
int
icebp
mov
push
pop
pop
pop
enter
ror
add
cmp
jge
adc
cmp
pop
jae
cmp
test
jmp
push
pushl
lea
call
push
mov
mov
pushf
adc
pusha
pushl
movb
push
lea
jae
jmp
add
add
mov
push
sbb
mov
bsr
ror
bts
lea
sub
movsbl
jmp
sub
jmp
pushf
lea
jne
test
mov
cmp
cmc
clc
push
add
test
push
movzwl
movsbw
rol
call
test
call
push
lea
jb
cmc
cmc
cmc
bt
cmpb
call
jmp
push
jmp
sbbl
cmpl
jg
pop
ret
addr16
sti
adc
xchg
inc
push
loopne
push
push
pop
mov
lea
aaa
adc
movsl
icebp
movsl
lea
xchg
fiadds
sub
adc
cmpsb
sahf
sub
mul
into
pop
jle
sbb
adc
dec
cs
das
ds
or
cmc
stc
test
or
jmp
sbb
neg
xchg
aaa
test
neg
mov
shr
sub
not
shr
mov
clc
pusha
mov
neg
mov
cmp
stc
jmp
movsbw
push
mov
jmp
pushl
jmp
stc
cmp
cmp
push
pushf
lea
jbe
shld
sub
bsf
add
call
pushl
lea
je
test
sub
bt
cmp
push
pusha
lea
jmp
jmp
push
mov
pusha
mov
pushl
push
pushf
movb
pushl
ret
pushf
aas
push
push
cmpb
xor
mov
lock
ror
cli
pop
movb
push
stos
jns
leave
sub
mov
lret
into
mov
jb
inc
xor
pop
ja
arpl
cld
sub
arpl
dec
or
xchg
or
inc
lcall
stc
arpl
inc
pop
jg
loopne
push
cmpb
xor
xchg
sti
pop
movsl
in
ss
pop
jae
out
out
mull
fbld
jmp
mov
mov
inc
inc
ja
ret
mov
iret
lret
dec
imul
mov
dec
roll
dec
and
xlat
jo
in
pop
sahf
movsl
les
inc
ljmp
jl
mov
inc
mov
jbe
rcll
nop
push
int3
pop
mov
xchg
xchg
xor
cmp
mov
repz
rcrl
aaa
cmp
mov
cmp
push
jbe
add
clc
mov
cmc
push
bt
test
call
pusha
push
movb
pushl
popl
pushf
pushl
ret
cmp
dec
push
cmpb
repnz
dec
xchg
xchg
lcall
out
daa
mov
adc
and
cmp
cwtl
inc
pop
jbe
sbb
and
insl
ja
lcall
shlb
iret
ljmp
js
insl
pop
sar
fldl
mov
or
mov
mov
ljmp
repz
lret
das
pop
xlat
inc
pop
sub
or
sbb
and
cmp
pushf
mov
lea
jne
pushf
not
movb
lea
lahf
not
movzbw
mov
pushf
lea
jmp
sbb
sub
mov
pop
pop
cwtl
cmp
xor
jl
adc
fadds
jbe
repnz
dec
scas
push
inc
lea
pop
mull
and
and
and
imul
stos
adc
cmpsl
gs
inc
push
sbb
enter
mov
call
lods
fmuls
out
cmp
push
shl
pushl
lea
je
pushf
pushf
pushf
mov
pusha
jmp
jmp
shr
bswap
pop
jmp
pushf
stc
cmc
add
pusha
lea
jne
call
mov
pushf
pushl
ret
ljmp
xor
fidivl
jle
jbe
xlat
pop
push
imul
jne
cmp
lds
in
add
insb
je
test
sub
cmp
mov
sub
lods
jbe
out
ret
jg
iret
xchg
stos
outsl
dec
pop
cwtl
lahf
jg
jg
stos
mov
pop
mov
push
in
sbb
cli
pop
push
push
push
jne
lds
cmp
adc
cmpsb
jle
test
jbe
out
movsb
dec
dec
aad
adc
jae
sti
xchg
pushf
cmp
xchg
lds
ret
out
fwait
xchg
aas
jnp
arpl
fwait
cmpsl
inc
push
ret
push
jge
repz
div
cmp
sub
stc
movb
neg
call
in
out
push
cmpb
push
pop
clc
in
js
fsts
jecxz
xchg
test
push
rcr
push
xor
je
inc
out
and
cmp
or
mov
pop
les
xchg
inc
jecxz
movsl
xor
inc
mov
pushl
loope
rcrl
sbb
shlb
xor
push
cmpb
mov
cwtl
jo
mov
loop
movsl
sub
enter
scas
push
jle
dec
mov
mov
lea
jae
aaa
pop
dec
push
aaa
add
mov
mov
daa
mov
lock
mul
push
xlat
fdivl
sbb
and
cwtl
dec
inc
pop
and
ds
data16
xchg
xchg
sub
cmc
lock
test
sbb
into
out
cmp
mov
mov
cmpb
cmpb
jmp
outsl
cmp
sbb
test
lret
mov
icebp
in
or
das
in
shrl
lret
stc
sub
add
jnp
sub
cltd
xor
xchg
xchg
or
repnz
jns
mov
pop
mov
addr16
inc
jnp
insb
outsb
jg
aaa
aaa
jecxz
fisttpl
pop
cpuid
sbb
sub
dec
inc
pop
push
push
ret
int3
pop
mov
lods
loope
fscale
shrl
push
cmp
jl
xor
xor
and
pushl
ret
call
lea
call
call
pushf
pushf
lea
jne
push
shld
dec
mov
call
pushf
lea
je
pusha
movl
pushf
movl
pusha
movl
push
lea
jmp
cmc
sub
pushf
jmp
add
push
add
push
add
rclb
lcall
add
add
frstor
add
add
add
je
add
stc
rol
call
pushf
mov
pusha
pushf
lea
jmp
mov
mov
scas
ljmp
pop
movsl
in
in
mov
pop
push
subb
ficoml
ljmp
cmpsb
gs
inc
jl
push
popa
jbe
stc
andb
pushf
rcrl
jne
roll
mulb
mov
mov
and
and
pop
xchg
sbb
jge
cmp
call
fcomi
pop
les
push
xor
mov
aam
add
adc
out
or
mov
or
push
and
cld
mov
loopne
test
mov
push
sbb
jl
mov
mov
inc
push
stos
jg
fildll
jae
sub
dec
jb
in
push
xor
out
sub
addr16
lret
mov
flds
in
loop
stos
mov
sub
js
sub
sbb
ja
repnz
adc
cmpb
mov
sub
negl
sbb
sub
mov
sub
sub
jg
aaa
pop
sti
fwait
iret
mov
push
not
hlt
push
xor
fucomip
adc
sub
inc
hlt
pop
or
les
add
push
rcr
out
daa
xchg
xor
xchg
and
push
lret
je
cmp
xchg
es
dec
clc
repz
inc
hlt
pop
xchg
mov
xor
cmp
add
fistl
ds
push
sub
or
dec
push
ds
mov
mov
lds
es
repz
cmp
insb
mov
stc
call
and
cmp
daa
loop
cmp
adc
mov
pop
xor
shl
mov
xor
cmpsb
imul
addl
out
sub
movb
neg
jmp
test
neg
pusha
pushl
call
pushf
pushf
pushf
mov
lea
jae
not
xchg
mov
mov
inc
not
inc
not
setne
setge
pusha
mov
pusha
call
push
pushf
call
fcmovbe
in
cmpb
fcoml
pop
pop
lds
les
lcall
jb
pop
aaa
and
cmpsl
inc
dec
mov
ret
pop
adc
mov
in
in
dec
fisttpl
sbb
adc
jae
jb
xor
fs
insb
add
xchg
xchg
add
and
mov
pop
lret
into
push
cli
jmp
stos
mov
lds
mov
aas
in
add
mov
or
push
pop
dec
xchg
iret
jmp
dec
pop
aas
xor
sbb
push
call
pop
mov
inc
jne
xchg
in
rorb
jmp
pusha
lods
dec
xchg
inc
and
mov
sub
adc
test
pop
loopne
xor
pop
rolb
cmp
je
jmp
out
sbb
aam
in
rol
setns
bt
movsbw
mov
push
cmpb
pusha
pusha
movb
pushf
lea
jne
add
inc
das
sbb
sub
btr
add
neg
mov
not
add
shl
seta
mov
test
test
pushf
jmp
push
add
adc
fwait
jg
scas
pop
cmpsl
sbb
pushf
call
pop
outsl
popa
jno
pop
sbb
mov
mov
push
adcb
call
pop
push
loop
jge
mov
cltd
popf
stc
int
cmc
cmpl
pop
or
xchg
xchg
movzbw
mov
call
lea
mov
jmp
lahf
cwtl
mov
pushf
pusha
push
pushl
lea
jmp
push
mov
movl
pushf
push
lea
jmp
push
lea
jae
lea
rcr
cmp
mov
pushf
mov
rol
shl
add
mov
cmc
clc
xor
cmc
bt
cmc
repnz
lea
jno
pusha
movl
pushf
lea
jne
or
bts
or
bt
mov
test
pusha
sub
pusha
lea
jmp
jmp
pushl
pushf
call
pushf
mov
movl
pushl
movw
pushf
lea
jmp
pop
push
push
pop
sbb
mov
pop
lret
in
in
clc
in
push
sbb
dec
xor
gs
pop
cltd
sub
test
push
aaa
sbb
adc
jp
ficoml
sbb
lods
pop
add
xchg
and
push
addb
xor
xor
mov
cmpb
leave
jge
dec
pop
ja
mov
insl
mov
rclb
pushf
loop
mov
mov
int3
xlat
pop
pop
lahf
mov
pop
and
mov
movsl
lret
mov
pop
cwtl
inc
clc
movsb
mov
aad
jmp
add
pop
add
xor
xor
int3
pop
mov
fdivp
loop
fisubl
cli
into
pop
adc
sub
xchg
pop
sub
adcl
and
mov
pop
repz
push
lret
jecxz
add
xor
loop
stos
inc
imul
xor
fnstenv
add
cmpsb
shll
loop
jg
jae
negb
out
repnz
lahf
mov
pop
jo
adc
xchg
andl
sbb
sub
inc
mov
rorb
or
aam
push
push
int
jne
xorl
lds
int3
pop
in
adc
popa
in
int
xchg
sar
xor
cld
mov
in
jmp
lods
movl
pushf
dec
bt
test
neg
test
pushf
clc
movb
sub
mov
call
repnz
pushl
jmp
mov
shl
xor
ror
shr
add
lea
pop
sar
movsbl
shr
clc
rcl
cmp
mov
dec
bt
lea
stc
add
movzbw
pop
jmp
jmp
call
add
pusha
lea
jmp
add
xor
mov
jmp
sub
sbb
cmp
mov
scas
xor
pop
xchg
pop
ljmp
outsl
inc
jnp
lods
icebp
mov
jbe
movsl
or
sbb
and
rolb
scas
repnz
fcoml
cmc
movb
lea
jb
cmp
cmp
pushf
call
outsl
int3
loop
cmpb
mov
arpl
add
jecxz
xchg
xor
loope
push
cmc
fisttpl
testl
lods
test
popf
test
mov
test
popf
rcll
fbld
aad
pusha
jnp
popa
cmpb
dec
lock
dec
jecxz
bound
repnz
in
dec
ret
out
xor
inc
in
aad
inc
cltd
sub
pop
sub
adc
popa
xor
daa
enter
pop
das
or
mov
sbb
rolb
stc
bound
mov
adc
jo
mov
xor
jl
shll
inc
add
or
es
or
inc
outsl
fwait
push
in
movsl
sub
ds
das
xchg
xor
fbstp
lods
cmpsb
mov
mov
cmp
or
dec
jno
into
imul
push
idivb
cld
pmullw
icebp
insl
mov
test
jb
mov
pushf
iret
xor
and
cs
mov
sub
mov
jno
xchg
push
jo
push
inc
shr
adc
push
sbb
sub
and
divb
cmpl
and
mov
ficoms
lret
jmp
jle
loopne
inc
pop
bound
bound
xchg
push
or
jecxz
mov
aaa
mov
add
rorl
insl
leave
adc
sub
and
ds
inc
lahf
pushf
iret
sub
cmp
or
cmp
mov
and
and
mov
into
imul
rorb
les
add
sarl
sbb
testb
add
sub
ljmp
cmpb
sbb
mov
adc
mov
jp
jl
xor
cltd
mov
test
ljmp
int3
push
xchg
test
repnz
mov
pop
outsl
lods
sahf
pop
cwtl
xchg
cli
mov
insl
mov
pop
xor
stc
jge
cmp
push
popf
mov
orl
pop
add
js
cmp
dec
inc
xor
stos
fildl
pop
and
push
and
sub
stc
movsl
scas
les
popa
adc
xchg
dec
push
push
push
lea
jae
mov
inc
call
movl
pushl
mov
lea
jmp
call
in
jno
mov
inc
sti
adc
adc
jno
cmp
out
and
add
jno
mov
std
cld
or
dec
je
ljmp
js
xchg
std
pop
mov
insb
cmpb
mov
cmp
xchg
sub
ljmp
cmp
scas
jnp
xorl
filds
pop
mov
rol
adc
lcall
scas
lea
pop
cmp
mov
jne
jno
sti
leave
or
mov
xchg
stos
sub
xchg
cmpsb
add
mov
out
add
stc
cmpb
sahf
inc
xchg
cmp
mov
dec
sti
leave
loop
adc
cmp
in
aad
in
lea
cmp
in
lock
xor
sbb
push
jp
inc
movb
je
stc
add
cmc
cmp
push
cmp
cmp
mov
lea
jb
cmc
cmp
push
lea
jae
pusha
mov
cmp
stc
mov
inc
xor
rcr
push
mov
bt
cmp
clc
xor
cmp
repnz
jmp
lods
movb
pushf
dec
pushf
call
push
lea
ja
pushf
mov
lea
jb
stc
cmc
cmpb
jmp
cmp
bswap
seta
not
lea
bswap
mov
mov
lea
ja
jmp
pushf
call
pusha
pushf
pushl
ret
lods
bt
neg
jmp
cmpb
call
movl
pusha
pushf
movb
lea
jmp
pop
movsbw
movl
call
clc
pusha
bt
clc
xor
pusha
lea
call
pushf
jmp
cmp
push
call
call
pushf
lea
jne
xor
mov
cmp
bt
add
stc
bt
bt
cmc
movzwl
bts
rcr
pushf
and
mov
push
call
jmp
bt
mov
add
mov
movzwl
movsbw
rcr
rol
mov
cmp
test
add
stc
movl
pushl
mov
jmp
jno
nop
data16
addl
icebp
sub
test
xchg
out
clc
mov
cmp
and
xchg
inc
data16
inc
loop
sub
fcomip
jmp
inc
scas
xchg
call
insb
pop
lcall
sbb
je
pusha
int3
fisttpll
ret
sbb
movsb
nop
mov
adc
fs
add
pop
popf
mov
sub
cmp
add
gs
aad
hlt
cmp
mov
mov
fcmovu
ds
not
mov
pushf
mov
pushf
mov
not
jmp
mov
mov
mov
pushf
push
pushl
ret
xchg
lcall
or
or
cmp
sarl
mov
lret
mov
movsb
mov
xor
mov
ljmp
inc
push
sbb
add
ret
int3
push
movsb
inc
aas
pop
sub
mov
mov
dec
movsb
sbb
nop
lahf
fistpl
aaa
dec
xor
aaa
cmpsb
sbb
roll
fnstcw
pop
push
push
aaa
mov
jecxz
sldt
jmp
call
into
vpunpckhbw
orb
push
push
inc
cwtl
xchg
sub
inc
subl
stos
imul
fwait
xor
pop
sub
shlb
sarb
pop
aas
test
inc
call
mov
mov
sahf
fisubl
repnz
xchg
clc
fldl2t
out
add
dec
inc
pop
push
pop
test
jge
pushf
inc
dec
inc
xor
in
aam
pop
lea
inc
neg
sub
iret
sbb
dec
cmpsl
sbb
roll
and
aad
add
jp
cmp
les
out
ljmp
jmp
mov
andb
movsb
mov
test
movsb
xor
mov
mov
xchg
add
ret
sub
out
jg
addr16
push
negb
push
push
add
int
pop
loope
adc
mov
cli
and
and
sti
xor
fs
aaa
shll
mov
loop
outsb
adc
out
xchg
mov
pop
outsb
inc
es
mov
ss
or
movl
push
pushf
movl
push
push
lea
jmp
mov
mov
int3
leave
add
sub
xchg
mov
push
xlat
pop
jbe
mov
incb
push
mov
push
jb
test
push
mov
mov
shll
mov
pop
lcall
mov
out
xor
fisubl
scas
pop
cld
mull
cmp
imul
insl
or
xchg
sbb
pop
je
test
leave
imul
sub
xchg
insb
movzwl
shrd
shrd
mov
jmp
das
and
imul
aad
pop
ret
imul
push
cld
pop
push
push
repnz
mov
fisubs
xchg
xchg
push
add
and
ds
clc
or
repz
or
mov
pop
jae
daa
jecxz
pusha
dec
mov
xor
lea
push
das
js
and
cmc
mov
push
ja
scas
movsb
imul
out
push
pop
cmp
xor
int3
mov
icebp
lahf
sub
cli
out
jle
ss
sub
inc
pop
insl
and
pop
or
dec
jmp
push
cmp
add
bt
call
test
jmp
pop
push
pushw
mov
mov
ss
insb
movsl
in
lahf
sti
loopne
std
pop
push
lcall
repnz
ds
data16
jbe
lock
out
aam
andb
stos
adc
cpuid
cmp
test
mov
lret
loope
repz
mov
and
and
popl
dec
inc
add
pop
xor
loopne
inc
mov
test
dec
sbb
std
cmp
sbb
and
cmp
pusha
pushf
mov
call
dec
mov
call
call
lea
call
in
out
imul
and
sbb
adc
jns
arpl
fiaddl
inc
mov
mov
enter
xchg
daa
or
mov
fwait
das
add
out
mov
out
mov
push
inc
dec
jne
bound
andb
cmc
pusha
cmp
mov
lea
ja
pushf
call
shl
mov
call
lea
call
pushf
pusha
sub
jmp
fdivrl
dec
imul
movsb
inc
cld
push
test
dec
fisubs
pop
bound
inc
mov
pop
xchg
std
jnp
ja
stos
xchg
pop
mov
mov
mov
aam
pop
cmp
pop
add
add
cli
out
push
stc
loop
push
mov
stos
xchg
fisttpl
andb
cs
push
or
jmp
outsl
inc
iret
shl
xchg
cwtl
scas
cmp
xchg
ss
insb
cmpb
sbb
push
imul
ficoms
rcrb
push
test
xor
sub
xchg
xor
fsubrs
ljmp
mov
jns
lock
pop
cwtl
push
mov
xor
rorb
push
jno
mov
or
mov
xor
aam
clc
cld
sbb
mov
xor
cwtl
xor
stc
pop
dec
adc
xchg
aaa
negl
mov
pop
jae
ljmp
push
or
adc
push
jbe
push
ss
fimull
cs
into
mov
xlat
xchg
push
lret
flds
call
sbb
sub
adc
or
andb
sub
cmp
fcomi
pop
aaa
mov
repz
adc
arpl
aaa
inc
popa
adc
repnz
mov
cli
mov
scas
push
out
out
jnp
ja
add
sbb
push
mov
fwait
mov
addl
stc
xor
mov
xchg
xchg
pop
data16
mov
stos
mov
jecxz
test
adc
in
lds
fstl
insl
stc
lods
shl
shll
pop
in
popa
and
into
ljmp
jl
cmpb
mov
stos
mov
sahf
xor
mov
or
int3
fadds
mov
add
inc
loop
rcrb
aad
cmp
cmp
inc
insl
cmpb
ret
iret
sbb
jecxz
stos
push
xor
mov
xchg
iret
push
jg
dec
mov
aaa
cmp
jbe
clc
test
adc
test
in
icebp
pop
mov
inc
rolb
sub
insb
mov
push
add
imul
or
and
pop
dec
mov
lock
push
lret
out
push
sub
push
and
aad
and
dec
pop
pusha
dec
hlt
pop
sti
pop
imul
ja
xchg
jg
jg
push
push
pop
inc
mov
jmp
jmp
call
mov
lea
pop
pusha
pusha
pushf
pushl
ret
push
mov
outsb
cmpb
lret
scas
cmpsl
sub
bound
dec
out
pusha
sub
es
cs
popa
jo
push
sbb
and
mov
jl
dec
inc
ret
sbb
cmp
jno
dec
insl
jno
sbb
addr16
test
movzbw
mov
call
lea
je
clc
or
push
movb
call
lea
ja
push
cmc
sets
or
sub
add
shl
lea
add
movsbw
sar
mov
sub
ror
pusha
stc
mov
cmc
pusha
repnz
jmp
gs
fsubrl
mov
sbb
call
and
and
fdivr
movsl
mov
mov
jns
sbbl
addr16
in
lret
outsl
sbb
inc
fiaddl
cwtl
ret
adc
push
js
movsb
dec
mov
call
hlt
mov
repnz
fs
jae
call
pushf
movl
lea
jne
bt
movzbw
neg
sub
btr
bswap
mov
ror
add
add
pushf
bt
adc
cmc
mov
push
bt
test
call
push
pusha
jmp
cmp
cmc
cmp
call
repz
push
jno
mov
adcl
pop
xor
and
mov
popa
push
push
xor
fcmovbe
or
cli
int
or
pop
xchg
insl
sub
jp
jp
sub
push
dec
or
aad
xor
pusha
pushf
movb
movl
pushf
pusha
movl
movb
pushf
pushf
lea
jmp
push
lea
jne
jge
pusha
inc
call
lea
call
call
dec
scas
les
mov
add
xor
mov
pushf
lea
ds
outsb
ljmp
in
and
mov
icebp
int
sbb
jl
or
iret
ficoml
pushf
fldcw
lock
and
dec
and
cmp
and
inc
xorl
mov
bt
cmp
pusha
pushf
lea
jae
stc
cmp
push
call
push
call
call
popf
xchg
icebp
std
dec
in
test
shlb
sub
pop
xchg
cwtl
pushf
loop
neg
ret
pop
pop
cmpsl
mov
adcl
gs
into
adc
mov
cmp
aam
arpl
loope
sub
cmp
test
mov
sbb
xchg
cmp
enter
jmp
outsl
ret
xor
push
pop
js
in
cmp
jbe
jno
mov
or
sub
test
jmp
or
filds
mov
jb
push
jb
cmc
or
ljmp
mov
jecxz
aad
aad
sub
fcmove
and
mov
inc
sbb
mov
test
inc
push
pop
jno
lret
pop
dec
mov
or
lea
lahf
pop
dec
cmp
or
testb
xlat
lock
cmp
jge
test
aad
fisubrs
movsb
mov
xchg
jp
pop
mov
add
inc
stc
fnsave
inc
or
sbb
push
mov
push
cmp
es
movl
pusha
push
push
lea
jmp
dec
inc
pop
jb
mov
movsl
jno
imul
adc
mov
mov
aas
add
outsl
sub
mov
iret
adc
scas
or
xor
into
sbb
in
adc
shr
xchg
mov
xchg
pop
imul
or
lock
jb
repnz
icebp
lea
and
mov
into
sub
loop
xchg
jle
push
mov
cmpsb
out
xor
lret
hlt
shrb
iret
call
out
adc
out
jno
cmc
rcr
jl
iret
adc
out
adc
cmc
leave
xchg
leave
inc
roll
adc
xchg
out
xchg
mov
bt
pushf
cmp
mov
lea
jbe
sub
sub
sub
sub
call
bswap
mov
movzbl
pop
push
mov
push
pushf
mov
call
or
add
cmpb
mov
mov
imull
sahf
jge
fs
jo
inc
push
aas
lea
jo
addr16
mov
or
and
repz
fsubrp
adc
cmp
jle
lret
bnd
push
cmp
or
jle
icebp
xchg
mov
dec
dec
insb
and
xor
or
shrd
lea
pushf
pushf
sub
cmp
mov
cmc
cmc
pushl
popl
clc
test
cmp
jmp
lea
je
bswap
not
bswap
lea
pusha
lea
jl
pusha
movzwl
pusha
bswap
lea
bswap
mov
lea
jge
call
pusha
jmp
jmp
jmp
cmpb
loop
cli
ss
out
pop
je
mov
dec
mov
inc
lahf
ds
stos
inc
pop
loop
cmp
cwtl
psubusb
xchg
pop
ljmp
sbb
sbb
in
loop
mov
mov
bound
xchg
loopne
hlt
mov
push
sub
push
fs
fcmovnbe
gs
mov
pop
into
jb
sti
rcr
testl
xchg
xlat
mov
fwait
pop
jnp
fidivrl
add
dec
pushf
lea
jne
jmp
pushf
lea
jbe
test
or
btc
bsr
sub
or
bsr
mov
xor
rcr
mov
bsf
mov
add
shrd
bswap
shr
test
inc
adc
mov
add
shl
and
add
bswap
jmp
cmc
clc
cmp
call
andb
jne
mov
loopne
dec
mov
add
jl
jo
mov
xchg
daa
mov
dec
jae
outsb
lcall
push
sub
out
dec
nop
ret
and
pop
push
cmp
mov
sti
xlat
adcl
das
stos
iret
jecxz
sub
push
push
mov
jnp
sub
fs
call
pushf
mov
push
push
mov
pushf
lea
jmp
fsin
stc
add
icebp
cld
stc
or
add
mov
add
incl
mov
add
inc
clc
call
pushf
pushl
lea
jb
clc
pusha
clc
pushl
cmp
push
lea
jae
and
mov
btc
mov
xor
cmc
or
mov
test
stc
cmp
bt
sub
clc
pusha
call
pushf
jmp
pusha
movw
pushl
movl
call
mov
setns
call
jne
push
stos
pusha
push
mov
lea
jmp
bt
pushf
cmpb
push
pusha
lea
jne
test
adc
lea
mov
test
jmp
push
jmp
clc
test
jmp
dec
inc
setb
call
repz
data16
mov
out
gs
fsubp
ds
cld
inc
cmpsl
leave
clc
push
clc
mov
arpl
sti
pop
xchg
mov
jo
aas
ds
jge
lcall
test
mov
xchg
sub
int3
push
mul
push
sub
leave
ret
adc
iret
adc
fidivrl
pop
fdivp
cli
ret
scas
repnz
push
pop
push
jp
jne
std
cmp
and
mov
mov
movw
pusha
pushf
pushf
pushl
ret
movl
push
movl
mov
lea
jmp
jmp
test
jmp
call
cmp
cmp
pushf
call
pushf
pusha
dec
stc
jmp
movl
call
push
cmc
cmp
pusha
push
jmp
lea
jne
mov
mov
stc
bt
bt
pushf
add
bt
push
movzwl
xor
mov
clc
add
clc
test
pushl
jmp
dec
pusha
inc
jmp
call
movl
call
pusha
lea
ja
lea
movzbw
not
xchg
pop
xchg
mov
push
mov
xchg
movzbw
mov
call
scas
dec
pop
js
mov
cmp
push
xchg
or
repnz
push
dec
popa
jge
xchg
call
dec
shll
sub
xor
inc
or
lods
push
js
inc
movsl
pop
lods
leave
insl
dec
insl
sahf
inc
mov
lock
dec
scas
outsl
cs
pop
mov
push
imul
adc
and
ret
fsubr
jns
mov
and
rcr
jnp
jl
in
hlt
out
scas
or
in
rol
fst
dec
icebp
push
inc
mov
cmp
push
sub
scas
pop
pop
call
and
and
and
pusha
test
and
orb
push
sbb
adc
cmp
nop
lret
lret
xchg
sbb
js
shrl
ss
sub
xlat
sbb
lock
push
cmp
mov
push
enter
push
push
jle
fs
je
je
insb
jo
mov
mov
xlat
jmp
mov
or
sbb
ret
mov
test
ljmp
xor
call
iret
jecxz
cmpb
std
xor
leave
or
xlat
adc
pop
jg
mov
lods
sbb
pop
ljmp
negl
mov
daa
push
pop
fwait
cmpsl
fstpt
push
push
lret
mov
mov
out
in
dec
arpl
mov
out
lret
or
sbb
lock
aad
insl
cwtl
shll
pop
jecxz
and
repz
sbb
dec
divl
imul
xchg
jnp
sti
lock
jl
pop
nop
adcl
xor
xlat
inc
jnp
mov
movsl
jns
out
push
cmp
and
test
mov
mov
or
int3
clc
repz
and
sahf
mov
add
jo
cmpb
or
test
sub
cld
push
clc
iret
cmp
xor
xorl
test
mov
jno
cs
xlat
xor
mov
xor
stc
mov
adc
mov
shll
das
xchg
pushf
add
or
test
int3
pop
adc
sub
xor
daa
pop
jnp
aas
xor
push
add
andl
cmp
pusha
lea
jae
bswap
rcl
mov
shl
stc
test
xchg
mov
clc
btc
call
lea
call
jmp
lea
jb
call
popf
rdtsc
nop
pushf
movl
pushf
pushf
pusha
movl
pushf
pushf
lea
jmp
jmp
pushf
movl
push
push
call
add
enter
add
add
add
add
add
add
mov
adc
add
add
add
add
mov
dec
mov
cmpsl
loope
dec
fsubr
sub
mov
icebp
add
je
sub
dec
lods
and
sbb
leave
in
xchg
push
orb
inc
shlb
mov
push
cmp
cli
pop
cmpb
jo
xor
jb
mov
adc
aad
fisubrs
nop
pop
fnstcw
add
pop
ds
lock
xchg
lahf
jp
rcrl
mov
ss
imul
push
push
push
aaa
cs
pop
clc
inc
inc
and
leave
cmp
ss
lods
pop
sbbb
pop
arpl
pop
test
mov
push
iret
dec
aad
dec
mov
ja
stos
sub
outsb
loop
scas
mov
das
mov
xchg
aad
inc
lahf
out
adc
jmp
push
out
test
inc
out
xor
xor
scas
dec
movsl
mov
push
imul
cli
mov
lods
jg
roll
or
popa
cmp
dec
pop
arpl
test
xchg
rorb
pop
inc
aas
ss
xchg
mov
mov
inc
js
lods
xchg
xchg
jge
jmp
mov
pop
orb
sbb
push
stc
pop
dec
mov
add
aad
stos
movsb
rep
sub
push
loopne
push
or
cs
ds
repz
sub
mov
aaa
adc
push
mov
cltd
lret
stc
test
test
lea
jmp
enter
pop
dec
pop
insb
adc
sbb
jae
jmp
int3
movsl
jne
sahf
xor
stos
fmulp
fidivrl
xor
loope
mov
sbb
lahf
orb
sub
or
or
scas
lods
shll
pop
mov
icebp
push
mov
pusha
pushf
div
push
popa
repnz
xor
loopne
leave
mov
orb
add
dec
ret
jne
sub
xor
pop
insl
mov
adc
cmc
push
dec
aaa
fs
xchg
std
inc
cmp
adc
add
mov
lahf
dec
fst
jge
mov
push
push
test
out
inc
cmpsb
lods
and
inc
push
mov
pop
test
sbb
mov
cmc
subl
js
sahf
in
push
inc
pop
jl
add
jle
push
cmp
xor
in
call
rcrb
repnz
mov
sarl
xor
nop
mov
repz
ret
pop
pop
lea
pop
out
jnp
lcall
stos
popf
call
xchg
cld
test
jnp
divl
cld
jno
in
xchg
fdiv
xchg
sub
mov
lret
dec
mov
xor
pushf
push
inc
inc
arpl
lcall
mov
lds
pop
in
dec
fldlg2
ret
das
bound
adc
or
xchg
jg
cmp
popa
stos
xchg
sbb
repz
aad
test
jbe
xorb
gs
out
mov
and
mov
pusha
inc
outsl
sbb
add
cmc
cmp
out
call
inc
mov
mov
mov
add
imulb
push
fdivrs
dec
arpl
repz
cltd
pop
lods
icebp
dec
push
sbb
insl
scas
js
push
mov
and
cltd
mov
push
cmp
push
aas
mov
icebp
arpl
je
call
movb
out
pop
push
je
adc
or
imul
pop
add
jmp
fisttpl
clc
fsts
out
xchg
test
aaa
pop
and
ljmp
ficomps
jl
lcall
repz
cld
mov
ljmp
mov
ret
mov
insb
lahf
xor
shll
imul
call
in
aad
cli
ljmp
ja
cmpsb
sbb
or
lock
vandnpd
fistpl
in
adc
cmp
mov
adc
or
loop
cli
sub
fsubl
ficoms
imul
jne
int
xor
jbe
fcoml
cmp
add
inc
cwtl
or
xchg
mov
xorb
adc
fisubrl
mov
in
pop
outsb
pop
mov
jo
jno
push
adc
movsl
cmp
push
into
jl
movsl
lods
test
mov
or
and
gs
jnp
sbb
test
pop
shll
test
int3
das
jg
test
ds
and
mov
outsb
mov
cmpsb
jo
mov
jg
bound
adc
iret
test
inc
add
push
adc
loop
or
dec
loop
cmpb
pop
sbb
hlt
pop
mov
sub
fdiv
shr
push
xchg
sub
lea
add
pusha
push
inc
scas
xor
jno
xor
loope
sbb
pop
push
push
or
imull
fisubrl
pop
mov
jle
and
push
fnsave
lret
stc
das
dec
test
jmp
cmpsb
xor
call
fcompl
ficoml
in
push
adc
push
hlt
cmp
adc
mov
jg
into
mov
jb
add
data16
aas
xchg
sbb
push
lret
ja
ds
push
mov
sub
dec
andl
mov
cmpsl
out
repz
mov
mov
imul
push
push
adc
sub
in
roll
and
lods
sub
sbb
aaa
adc
js
les
mov
call
ret
inc
mov
addr16
adc
mov
dec
xchg
pop
mov
inc
cltd
cld
dec
sahf
lcall
ficoms
sbb
iret
loop
add
loop
sub
mov
mov
aas
adc
cmp
negl
loope
movsb
std
inc
idivb
lahf
push
es
push
xchg
pop
dec
lods
or
nop
in
xor
arpl
je
mov
stc
cwtl
sub
sbb
mov
lds
pop
lahf
xor
mov
cmpsl
lret
repz
fsts
loopne
dec
and
popf
adc
lock
mov
negl
jp
sbb
fidivrl
sub
and
dec
aad
inc
pop
jae
inc
adc
clc
aad
mov
cmp
mov
sbbb
sbb
shlb
xchg
in
ljmp
cmp
pushf
xor
mov
insb
pop
cmpsb
add
fidivs
sbb
lret
mov
data16
cmp
mov
xchg
into
popf
inc
pop
cmp
xor
test
bound
xchg
pop
xor
ja
and
popa
or
imul
cli
mov
inc
cmp
mov
or
nop
in
inc
mov
jmp
shrb
pushf
repnz
scas
jp
out
clc
mov
aam
int3
in
sbb
lea
sbb
inc
jb
popf
sbb
mov
adc
dec
sub
hlt
in
mov
les
xor
shlb
xor
ret
lcall
outsl
cwtl
movsl
inc
or
add
sbb
cmc
and
adcl
cltd
dec
out
adc
mov
xor
pop
sahf
dec
cmc
roll
sbb
mov
jns
push
cmpsl
loop
daa
stos
fistpll
and
arpl
pusha
sbb
adc
cwtl
push
rclb
mov
push
hlt
cltd
jns
pop
stc
sbb
mul
fs
push
or
mov
push
push
mov
data16
push
insl
pop
sub
mov
arpl
lds
sbb
xchg
mov
xor
gs
scas
dec
dec
test
push
mov
add
fiaddl
ds
and
rcl
mov
in
push
add
out
cmp
out
sub
cmc
mov
adc
cmp
jecxz
jae
inc
jmp
leave
loopne
js
cld
jae
add
sbb
cmp
fdivp
push
push
lahf
pop
sbb
mov
mov
aas
mov
in
pop
mov
test
cmp
mov
fidivrs
aaa
pop
mov
pop
idivl
addl
dec
arpl
cwtl
lds
frstor
fs
nop
cmp
ss
dec
xor
jne
adc
push
movsb
add
mov
inc
and
sub
repnz
iret
dec
adc
jno
addr16
sbb
in
dec
scas
cmp
ss
in
jnp
rep
scas
fwait
in
test
pop
cmp
mov
jns
or
or
lock
ret
in
fildl
pop
mov
add
push
xchg
into
mov
aaa
test
insb
or
xor
ljmp
in
jmp
insl
aas
loope
add
xchg
cli
pop
in
shll
adc
fistpl
sub
dec
jmp
lods
shll
push
out
mov
hlt
jne
sbb
cmp
sbb
arpl
mov
popa
mov
mov
sbb
addb
popf
jp
scas
movaps
mov
mov
lcall
jp
xor
cmpsl
insl
mov
fisttpl
cld
add
xor
and
jb
cmp
mov
scas
mov
jmp
push
imul
mov
mov
cmp
ja
jg
xor
xchg
jae
stos
mov
push
pop
fisubl
dec
aam
lods
lock
push
cmp
pop
mov
daa
scas
stos
cmp
or
je
push
mov
dec
mov
leave
xchg
pop
sub
and
cmp
mov
or
fbld
ficompl
cmc
xchg
in
dec
sbb
iret
arpl
aas
lods
pusha
and
xchg
push
push
test
rorl
mov
dec
pusha
pop
aas
sti
push
lea
add
jp
movswl
call
out
push
imul
movsb
jle
outsb
mov
mov
out
lahf
daa
scas
adc
xchg
jo
mov
mov
xchg
mov
popa
or
adc
inc
or
mov
test
cmp
cwtl
jo
arpl
or
std
push
int3
inc
sub
xor
popa
int3
js
mov
sub
fs
fisubrs
mov
adcl
movsb
mov
clc
adc
gs
aam
cmp
lds
das
out
outsb
push
decl
imulb
inc
into
push
mov
je
sub
mov
add
sarl
inc
inc
hlt
push
pop
loop
sbb
or
aam
pop
lods
into
mull
sbb
outsl
cltd
push
sbb
sti
pop
jb
lret
mov
mov
add
add
inc
clc
add
add
adc
bswap
sub
mov
call
in
cmc
mov
add
repz
hlt
add
incb
or
add
mov
mov
incl
incl
repnz
mov
push
icebp
add
hlt
mov
mov
clc
cmc
mov
or
icebp
std
stc
repz
stc
sti
mov
stc
repnz
add
mov
add
arpl
add
xchg
bswap
movsbl
movl
setl
cwtl
lea
call
jl
mov
imul
insl
mov
movsl
ds
cli
xor
lea
and
lods
pop
sub
inc
dec
mov
and
test
adc
in
stos
xor
fsubrl
sub
dec
xchg
adc
inc
or
cmp
add
mov
cmp
cmc
pushf
cmp
mov
pusha
call
cli
pop
insl
mov
cmp
mov
sbb
xor
xchg
sbb
add
in
or
sbb
mov
dec
jbe
mov
mov
jle
lods
push
xchg
xor
mov
mov
push
cli
push
loop
sub
inc
decb
mov
ret
test
xchg
cmp
stos
lret
mov
dec
pop
jb
dec
cmpsl
add
daa
insb
mov
in
xchg
mov
cmpsb
cltd
out
push
and
adc
cmp
sub
mov
push
iret
mov
sub
insl
std
aam
sbb
stos
test
jb
sub
dec
cmp
and
ljmp
stos
mov
test
sbb
into
ror
mov
lea
xor
shlb
cs
pop
insb
cmpsl
mov
push
leave
and
or
insb
and
xchg
add
subb
mov
xchg
or
les
insb
mov
fsts
cmp
lods
aaa
cmp
in
and
std
sidtl
push
in
insb
sbb
add
loop
xchg
cli
push
shll
xchg
push
xchg
mov
push
adc
cmpsl
push
mov
lahf
loopne
and
ds
rorb
mov
add
repnz
leave
aad
jno
push
mov
add
push
movsl
or
push
add
sub
mov
repz
pop
sbb
lret
pushf
call
mov
pusha
pushf
lea
jmp
pusha
push
movl
pusha
pushl
pushl
jmp
movb
call
xor
pop
leave
outsl
lea
add
and
mov
mov
repz
xor
pop
cmp
sar
int
mov
add
ds
aas
and
and
push
sahf
fiaddl
mov
test
xor
fs
cmp
fmuls
inc
and
inc
loopne
daa
add
mov
or
or
push
into
out
pushf
in
pop
mov
ds
mov
pop
fisttpl
xchg
xor
and
scas
and
nop
test
inc
mov
push
aam
decb
movsb
cmp
jmp
jnp
or
orl
dec
pop
sarb
stc
pop
cmp
in
arpl
mov
or
jae
popa
fistpll
cmp
jge
xchg
loop
xchg
mov
loope
jmp
sbb
outsb
inc
cmpb
nop
nop
insl
mov
daa
nop
out
addr16
dec
cs
xor
lret
add
or
lahf
pop
scas
lcall
or
imul
mov
lret
pop
jge
in
orb
sub
test
or
call
mov
fs
mov
mov
imul
aas
inc
fists
mov
push
add
mov
cmp
lret
mov
cmp
hlt
lret
mov
dec
push
pop
lock
nop
aas
ds
adc
jno
mov
mov
cmp
mov
and
cwtl
xor
cld
dec
adcl
cmp
or
xchg
and
and
and
xchg
and
sbbb
call
jl
jle
jmp
movb
and
sub
mov
add
ret
lret
dec
cmpsl
add
insl
push
ret
lea
imul
inc
loope
add
dec
mov
add
inc
mov
lret
push
test
out
or
int3
add
or
lcall
pop
mov
test
outsb
icebp
xor
pop
push
dec
or
pop
xchg
sbb
arpl
inc
add
push
popa
adcb
add
cmp
lahf
insl
add
add
mov
pop
mov
add
mov
test
jmp
rcrb
jl
inc
pop
mov
ljmp
leave
push
icebp
cs
and
adc
lods
sbb
and
add
jmp
push
add
adc
add
lret
xchg
and
cmp
push
add
push
cli
out
mov
sbb
add
inc
or
add
xchg
popl
fldcw
lea
les
outsl
pushf
or
test
dec
arpl
jnp
fs
add
test
movsb
adc
pop
adc
adc
popa
xchg
adc
adc
mov
rcrl
mov
push
sbb
rcll
dec
sbb
scas
mov
adc
and
xchg
xor
mov
inc
imul
es
fldenv
sub
sahf
mov
add
daa
mov
add
sub
fstpt
and
daa
popf
test
andl
sarl
add
inc
mov
fmuls
add
add
sbb
add
adc
xchg
inc
adc
xchg
or
stos
xor
sbb
pop
and
test
inc
nop
mov
xchg
test
or
xchg
mov
or
adc
adc
cltd
inc
push
mov
xor
or
xchg
and
xor
adc
aaa
sub
aas
lret
cltd
and
xor
sbb
test
and
test
pop
inc
cmc
pop
add
sahf
mov
fmuls
adc
xor
test
cwtl
ret
mov
popf
test
jae
and
and
test
xchg
sub
or
pop
in
sbb
pop
sbbl
mov
or
push
mov
sbb
add
and
adc
add
add
ja
jns
popf
and
add
daa
mov
call
int
or
adc
jnp
sbb
es
add
xchg
xchg
or
insl
xchg
jmp
bound
inc
mov
fmuls
xchg
loop
cltd
lcall
cltd
or
jae
adc
jecxz
add
cmpsl
mov
xchg
sbb
pop
or
data16
pop
mov
inc
xchg
xchg
jecxz
sub
lahf
loop
xchg
lsl
dec
or
add
fbld
fistps
or
cmp
addr16
aas
pop
sahf
rorl
ss
sbb
and
inc
nop
test
inc
popf
movsl
nop
loop
adc
mov
and
add
rorl
mov
lea
xchg
adc
adc
and
int3
or
fdivs
add
cltd
nop
js
xchg
pushf
adc
and
and
test
shll
popa
pop
and
or
xchg
cltd
and
mov
push
popf
adc
setge
push
mov
addl
push
add
add
sti
test
sahf
sbbl
add
jl
nop
cmp
add
add
outsl
lcall
rolb
push
push
sbbb
sub
adcb
cmpb
sbbb
das
adcb
pop
sbb
test
aam
imul
inc
adc
mov
test
inc
mov
adc
adc
pushf
lahf
sub
and
or
adcl
and
pop
push
movd
add
getsec
add
pop
add
dec
jb
test
push
fwait
aaa
add
push
ja
lds
lds
rcrl
fwait
inc
cltd
es
or
sbb
and
add
lods
ret
dec
sbb
xchg
pop
or
sbb
lcall
scas
addr16
dec
imul
sbb
add
or
test
into
sbb
popa
add
mov
add
jno
and
cmp
adc
or
sub
cltd
daa
fcmove
fwait
es
pop
sub
lret
push
xor
enter
addb
les
mov
add
or
or
and
insl
roll
pop
mov
sub
add
clc
add
sbb
xchg
add
add
and
in
rorl
push
mov
popa
adcb
ficomps
pop
movsb
icebp
lcall
popf
sub
pop
or
cltd
add
aaa
popa
sbb
inc
daa
adc
or
xchg
push
fwait
add
xlat
dec
xor
popf
sub
ljmp
push
dec
sbb
movsb
jmp
mov
xchg
mov
or
mov
test
sub
sahf
mov
sub
adc
and
lcall
adc
add
add
jl
mov
popf
adc
and
dec
xchg
adc
xchg
mov
adc
inc
xchg
test
mov
ret
subb
orb
cmpb
sahf
xchg
test
nop
imul
xchg
add
inc
cmp
adc
popf
sub
sbbb
imul
iret
add
push
add
or
hlt
popa
push
and
daa
and
push
sbbl
xchg
aad
dec
xchg
sbb
and
sub
add
add
xchg
sbb
sbb
xchg
and
or
or
add
and
sbb
sbb
xor
and
lahf
pop
inc
mov
dec
adc
xchg
movsl
sub
add
sub
push
sbb
inc
or
stos
add
xchg
cmpsb
movsl
or
mov
add
orb
sub
add
and
mov
pop
xchg
stc
add
or
dec
jp
nop
mov
xchg
jo
nop
sbb
jbe
subb
icebp
cmpsl
pop
mov
and
mov
pop
aad
push
add
inc
inc
add
or
fidivs
insb
and
inc
or
daa
adc
inc
mov
xchg
test
dec
add
xchg
lea
xor
and
inc
iret
pushf
add
ds
sbb
mov
sbb
aas
ret
pushf
push
add
sbb
lcall
add
push
sub
into
rolb
or
sbb
xchg
pop
inc
xorl
and
inc
add
out
sbb
adc
inc
popf
mov
push
daa
and
pop
add
dec
pop
push
and
jns
subl
in
add
fnstsw
cmp
pop
dec
and
add
leave
loop
lea
and
add
shr
push
and
dec
xchg
sub
sbb
or
mov
rorb
cmp
add
add
fwait
sbb
xchg
sbb
pop
mov
mov
jmp
adc
popf
or
lahf
fiaddl
adcl
mov
or
lcall
add
sub
test
or
sbbb
daa
push
test
shlb
sbb
lea
test
stc
daa
nop
and
ret
sbb
fstps
and
add
mov
aas
inc
dec
pop
leave
int3
inc
jmp
scas
loope
loope
shrl
shr
lcall
fisubl
into
add
push
daa
cmp
cmp
jns
aad
jmp
jbe
mov
xchg
dec
adcl
das
or
in
xor
addl
insl
jg
add
outsb
sbb
jmp
push
and
roll
pop
and
xchg
adc
test
out
jmp
jecxz
popa
sub
sbb
mov
xchg
xchg
xchg
add
or
sahf
lcall
pushf
add
inc
sbb
push
sbb
out
sbb
sbb
add
sub
test
inc
adc
mov
xchg
mov
xor
xor
mov
orl
or
and
mov
out
xchg
dec
add
in
inc
out
mov
xor
xchg
and
inc
lcall
mov
adc
mov
lret
xchg
mov
xor
lcall
sahf
mov
pushf
or
or
and
pushf
sbb
leave
add
orl
or
xorb
xchg
ret
or
push
aad
add
insl
addb
xchg
or
popa
cltd
sub
add
push
sub
dec
test
test
push
add
push
push
ret
add
lea
and
and
test
dec
addb
sbbb
test
sub
adc
cmp
ret
push
cmp
xchg
cltd
inc
ficompl
int
inc
adc
and
sbb
es
push
mov
sub
xchg
in
pop
test
or
packsswb
daa
and
cmpl
inc
or
fstps
xor
push
pop
int3
adc
or
jb
mov
or
push
xchg
faddl
sbb
mov
and
dec
push
xchg
aad
pop
and
xchg
and
add
ja
and
and
movsl
frstor
mov
and
mov
inc
xor
add
inc
addl
aad
cmpsb
inc
popf
fwait
adc
das
add
lea
addl
sub
adc
and
and
xor
sbb
bound
mov
and
xorl
aas
or
lahf
pop
ja
seta
xchg
gs
xchg
int
and
fwait
and
push
dec
orl
pusha
mov
inc
and
test
push
and
pop
jecxz
xchg
inc
and
gs
sub
push
inc
stos
and
aas
mov
inc
add
or
xchg
mov
sub
test
test
jae
test
pushf
outsl
mov
pop
stos
roll
push
sbb
setae
icebp
adc
leave
dec
and
aaa
mov
sbb
and
movb
popa
or
xchg
mov
bound
pop
fwait
sbb
fcmovb
sarl
int3
lods
fisttpll
or
or
and
popf
cmp
inc
test
adc
push
jecxz
addr16
xchg
test
subl
addr16
mov
sbb
mov
mov
adc
push
and
mov
and
nop
cmp
adc
adc
push
mov
add
xchg
mov
nop
lcall
mov
addb
int
and
and
sbb
sbb
push
outsb
test
sbb
sbb
pop
xor
xor
and
xor
xchg
dec
lret
setg
sbb
sbb
cwtl
sbb
or
and
xchg
decb
pop
add
jae
sahf
loop
mov
flds
push
daa
addr16
add
lahf
orb
push
or
sub
data16
sbb
sbb
adcb
loop
jl
addb
icebp
xchg
cmpb
jmp
addb
sbb
sub
addb
push
or
sbb
arpl
cmc
push
sar
or
in
push
nop
dec
xor
sahf
mov
and
inc
lcall
or
das
xor
or
dec
fistl
mov
inc
arpl
or
and
sub
xchg
test
sbb
flds
or
adc
insb
rcrl
adc
mov
xor
adc
push
out
orl
mov
dec
cmp
ret
or
gs
out
mov
mov
shlb
add
aaa
jnp
repz
cmc
push
or
mov
xchg
or
sub
and
sbb
data16
js
cld
aam
xchg
outsl
scas
les
push
andl
loop
xor
sub
or
push
add
jg
movl
daa
jae
and
and
xchg
add
inc
add
sti
inc
lea
negb
fmuls
cltd
es
xchg
cmc
add
nop
pop
add
dec
aad
inc
stc
push
scas
lods
push
inc
mov
and
xchg
leave
bound
out
xchg
pop
or
xor
sub
orl
loope
inc
leave
lods
add
jnp
test
xchg
subb
mov
mov
push
into
sti
popa
subl
add
out
sbb
bound
and
or
mov
outsb
jne
or
out
fnstcw
sbb
cmp
test
or
int
cs
aas
sbb
cmpsb
add
mov
lcall
add
dec
and
mov
push
xchg
sub
mov
inc
xor
loope
pop
and
lret
or
pop
mov
or
mov
push
xor
xchg
pop
adc
sub
and
add
or
nop
inc
xchg
test
sub
mov
or
adc
mov
sbb
mov
orl
adc
xchg
or
mov
adc
mov
xchg
xor
inc
lcall
fiadds
mov
pushf
sub
add
adc
popf
adc
mov
jmp
adc
add
loope
or
gs
add
mov
nop
loopne
xchg
lret
add
dec
pop
pop
dec
xchg
adc
scas
or
push
rcrl
push
push
addl
pop
or
imul
adc
sub
ret
in
sbb
sub
add
test
add
popa
pushf
ljmp
or
test
adc
sbbl
int3
or
jbe
rorl
nop
and
add
lahf
mov
lret
lret
adc
cmp
int3
call
and
sub
mov
and
adc
mov
arpl
pop
dec
xchg
cltd
rcrb
push
dec
and
push
add
pop
stc
mov
push
lea
mov
xor
fwait
push
in
add
lcall
inc
pushf
adc
outsl
or
jb
mov
sbbl
xchg
xchg
pop
sbb
pusha
mov
out
xor
or
mov
add
test
mov
or
xchg
xchg
shlb
and
sub
sbb
xor
xchg
cmp
sbb
sbb
and
inc
and
mov
adc
sbb
xor
xor
sbb
popf
and
xchg
or
mov
xor
or
xchg
and
test
or
xor
and
cwtl
and
aas
cmp
add
orl
adc
and
add
pop
inc
inc
or
pop
sahf
lea
and
add
cwtl
mov
and
and
adc
filds
or
mov
add
add
adc
adc
push
imul
es
and
xchg
daa
push
in
mov
sbb
pushf
adc
sub
inc
push
lea
and
adc
add
xor
mov
xor
orb
test
mov
sbb
xor
jmp
popf
sub
or
jnp
mov
add
ret
fwait
cmp
push
add
or
lock
sbbl
aaa
add
ret
inc
addb
jle
adc
ret
imul
decb
fwait
imul
xor
push
xchg
mov
sbb
cwtl
add
or
dec
popa
push
push
sbb
adc
test
sbb
add
xchg
sbbl
sbb
test
int3
xchg
push
sub
aad
inc
orl
mov
aaa
sub
and
lahf
cmc
ficompl
in
and
in
jge
mov
jge
and
mov
test
xchg
sub
push
or
dec
mov
add
xor
xchg
and
mov
fwait
jb
dec
int
mov
pop
cmpsb
orl
and
xchg
jmp
fwait
adc
adc
ss
and
bound
jl
and
and
je
pushf
and
xchg
mov
mov
and
sbb
push
jb
pop
sub
int
and
adc
xchg
xchg
mov
adc
test
call
sub
adc
xchg
add
lcall
add
xchg
mov
xchg
xorb
daa
pop
adc
mov
or
pushf
je
push
fldenv
out
push
and
xchg
or
test
mov
push
add
clc
lods
pop
adc
lcall
popf
js
sbb
insb
add
xchg
cmp
adc
mov
and
iret
leave
push
in
add
rorl
xchg
imul
or
adc
or
adc
add
bound
mov
jno
mov
push
subb
orb
cmpb
adcb
ret
movsb
addb
ret
push
sbb
js
pop
lods
xor
push
push
adc
es
into
popa
xchg
call
xchg
mov
sub
add
and
xchg
and
jb
or
mov
push
add
push
lods
cwtl
mov
popf
inc
fmuls
adc
cmp
pop
or
aas
in
lahf
daa
push
push
mov
lods
pushf
aad
lds
cmp
or
ljmp
jae
fwait
jnp
lea
or
lret
ret
sbb
jmp
push
add
push
adc
lcall
inc
adc
cmc
sub
sbb
mov
sbb
sbb
cvtps2pd
popf
dec
mov
adc
pop
xchg
mov
imul
mov
andl
push
inc
add
popf
ja
or
push
add
and
subb
and
xchg
lods
add
and
adc
add
cld
add
xchg
add
adc
pushf
rclb
push
sarl
lds
add
pop
add
fiadds
cltd
add
rcrl
or
mov
add
mov
add
cwtl
jne
adc
bound
sub
cltd
test
sbb
and
sub
sub
inc
addb
jecxz
sbb
imul
jl
mov
inc
aas
rolb
and
xchg
xor
dec
subb
pop
mov
jmp
mov
add
or
push
sub
sub
cltd
add
das
adcb
sbb
mov
ficompl
or
ret
popa
lea
mov
dec
aad
pop
dec
sahf
mov
add
or
inc
xchg
jne
xchg
inc
daa
xchg
and
mov
or
sahf
aas
mov
popl
xor
daa
sbb
and
or
adc
push
pop
inc
stos
test
push
sbb
sub
mov
aas
cmp
xchg
and
xor
push
sbb
and
or
xor
sbb
popf
inc
pop
es
sbb
or
mov
add
xor
inc
mov
arpl
adc
xchg
mov
test
inc
and
sbbb
xor
lea
adc
mov
sbb
lcall
add
test
xchg
test
or
xchg
xchg
xor
or
mov
xor
dec
aaa
xchg
push
pop
movsl
add
mov
fmull
dec
fimuls
js
xchg
lahf
dec
lret
sbb
adc
lea
xor
and
cmp
inc
pop
test
inc
or
adc
test
or
xor
inc
sahf
cmpsb
inc
and
mov
pop
add
or
or
xchg
or
dec
add
test
pushf
pop
adc
sub
adc
add
inc
mov
orl
orb
into
mov
mov
add
nop
add
add
xchg
and
test
cwtl
movsb
and
add
sbb
aas
mov
mov
popf
dec
inc
pop
cmp
mov
xor
xor
das
orb
sub
outsl
or
and
sbb
sub
mov
icebp
add
icebp
in
or
mov
and
mov
adc
setno
and
test
adc
popf
or
dec
adcb
aas
xchg
sbb
or
ret
lret
xchg
xchg
mov
sbb
or
test
out
popa
xchg
or
mov
add
mov
or
loope
lret
aam
test
xchg
popa
adcb
rcrl
push
or
xor
sbb
sbb
orl
cs
stc
add
jb
cwtl
je
xchg
sbb
push
and
xor
or
mov
das
push
jae
sbb
sbb
dec
in
jecxz
popf
adc
sbb
and
andl
loop
popf
sub
mov
push
addb
arpl
pop
sahf
fstpl
lcall
popa
adc
sbb
push
pop
hlt
adc
orb
out
lea
lods
xchg
roll
sbb
jae
fstpl
mov
push
and
sbb
sahf
fwait
nop
lret
mov
and
adc
xchg
mov
fwait
xchg
add
adc
enter
jle
test
push
mov
mov
add
mov
mov
push
inc
sub
addl
call
lret
inc
mov
popa
popf
stos
pop
xchg
jle
gs
les
gs
and
mov
inc
xchg
pop
pop
adc
pop
cwtl
les
jnp
mov
pop
and
and
xor
mov
xchg
and
lcall
jle
mov
or
adc
leave
push
movsl
xchg
mov
and
sbb
xchg
fbld
adc
cmp
call
or
push
sbb
add
cmc
mov
add
pushf
mov
sbb
inc
or
pop
and
mov
bound
mov
or
xchg
cmp
ljmp
add
lcall
rcrl
add
sub
mov
sub
sbb
jle
xorb
mov
lahf
hlt
xor
sahf
push
insl
sub
and
je
divb
jns
sti
mov
adc
mov
xor
mov
or
repz
jb
dec
jecxz
das
sbb
lahf
mov
push
ljmp
pop
push
or
and
adc
adc
push
xchg
mov
adc
enter
adcl
mov
dec
dec
orl
jmp
push
and
addl
inc
add
push
push
cmp
dec
pop
push
mov
lahf
xor
in
inc
jecxz
adc
inc
inc
and
add
mov
mov
sahf
jb
fmull
xchg
jle
mov
xchg
push
mov
sbb
lcall
add
cwtl
cwtl
and
xchg
lcall
and
pop
lcall
test
pop
inc
mov
dec
pop
or
int3
test
or
and
xchg
ss
and
lds
xchg
and
xchg
and
cltd
and
sbb
inc
or
mov
add
add
popf
or
test
sub
xor
sub
xor
sub
jmp
dec
pop
add
cvttps2pi
cmc
and
rcl
pop
sub
xchg
and
xor
adc
xchg
fldcw
subl
and
inc
and
cwtl
sbb
mov
andl
and
mov
or
inc
adc
xor
das
and
inc
push
test
inc
lcall
xor
or
mov
mov
sbb
jge
test
or
mov
inc
and
sbb
lahf
add
mov
push
inc
xchg
test
or
mov
xor
inc
mov
adc
test
add
xchg
and
inc
pop
cmpsb
addl
push
push
xor
mov
or
test
inc
adc
inc
fwait
test
or
xor
push
inc
mov
inc
xchg
test
or
mov
xor
add
xor
xor
xchg
test
or
xor
movsb
mov
or
cmovne
push
inc
xchg
test
or
sbb
xchg
xchg
or
test
inc
adc
inc
sbb
and
pop
and
and
jmp
add
jno
adc
test
nop
push
imul
push
or
adc
add
pop
roll
inc
adc
popa
mov
add
or
adc
ljmp
push
flds
add
pop
ljmp
and
and
pusha
mov
das
mov
add
ret
push
xchg
push
mov
lea
movsl
std
or
rol
xchg
scas
cmp
mov
push
mov
imul
rolb
mov
and
das
cmc
jo
or
sbb
pop
inc
lods
addr16
dec
mov
xchg
popa
push
int3
sub
mov
add
jmp
mov
push
ds
dec
popa
xchg
xchg
mov
mov
lcall
lcall
sbb
jge
mov
cltd
xchg
out
cli
inc
push
xchg
and
xor
imul
adcb
or
jae
mov
add
pop
pop
sbbl
xchg
loopne
fwait
sahf
rcrl
sbb
mov
subb
add
ret
add
mov
or
xor
and
out
negb
xchg
mov
and
pop
cwtl
mov
or
mov
cmp
lahf
jl
fwait
dec
add
jmp
test
mov
subl
popf
adc
test
mov
inc
loop
xchg
xor
sbb
xor
loope
pushf
popf
mov
loope
or
rol
and
in
shrl
inc
push
and
gs
push
sbb
out
lea
in
or
icebp
inc
je
idivb
sti
inc
jle
ret
das
mov
or
cwtl
sahf
lcall
int3
xlat
pushf
mov
es
xchg
xor
mov
push
push
sub
mov
gs
adc
cld
gs
dec
pop
mov
orb
mov
add
fldenv
movsl
inc
cltd
dec
dec
adcl
sahf
lret
push
rcl
mov
ret
mov
push
outsb
lds
xor
dec
pop
leave
aas
mov
pop
sbbl
push
and
sbb
and
addr16
fwait
lods
and
push
mov
and
and
test
push
cmp
aaa
out
dec
in
push
movsl
dec
mov
sub
adc
mov
add
lret
repz
in
bound
xchg
andl
push
pop
aam
movsl
mov
xor
adc
loop
dec
add
mov
mov
lret
decb
ss
add
cld
mov
and
data16
jmp
mov
daa
jp
shll
and
add
cmp
les
fisubs
sub
push
andl
inc
jne
push
xor
gs
or
and
test
or
arpl
xor
addr16
push
xor
mov
cmpsb
push
and
leave
aad
daa
mov
xor
movsl
addr16
mov
es
stos
xchg
outsl
insl
out
sub
mov
faddl
sub
aam
outsl
int3
lret
ret
mov
cmp
in
leave
and
es
xor
leave
and
or
jns
push
mov
lds
repz
ret
push
push
cmpsb
call
xor
xchg
xor
ret
repz
inc
pop
or
xor
dec
add
push
pusha
or
xor
and
xorl
jo
adc
fs
cmp
mov
stos
ret
repnz
sbb
and
or
pop
or
pop
cmp
andl
fsubrl
mov
xchg
mov
fisubl
popf
insl
cltd
mov
or
jns
dec
add
xor
dec
adc
cs
lods
sub
adc
dec
add
adc
mov
bound
mov
mov
cwtl
or
sub
mov
add
ret
mov
add
lret
inc
stc
sbb
test
cld
or
lcall
aad
xchg
sbb
punpckhdq
or
add
into
mov
push
mov
push
or
mov
mov
test
xor
hlt
add
mov
dec
cmp
mov
inc
je
pop
outsl
enter
lcall
xchg
or
mov
dec
fisubrs
or
dec
push
mov
add
xorb
push
xchg
dec
xchg
loopne
sbb
movsb
lea
and
rolb
add
dec
sub
test
add
psubsb
xchg
xchg
and
cmp
lds
push
mov
inc
packuswb
push
xor
insl
aad
sub
inc
int
in
mov
in
imull
arpl
rorl
push
pushf
xchg
lcall
adc
filds
add
fsubs
data16
xor
add
pop
sub
add
jb
rorb
inc
jnp
xchg
add
lods
pop
or
mov
mov
cwtl
popa
mov
sbb
mov
testl
popf
mov
push
movsb
call
lcall
xchg
cli
pop
insl
xlat
mov
pop
aam
ja
and
cmc
fisubrl
xchg
repz
pop
jno
in
and
daa
mov
adcl
or
xchg
addr16
leave
lods
sub
lea
or
xchg
dec
je
cltd
icebp
xor
sub
mov
pop
xchg
jnp
cwtl
mov
in
adc
mov
jg
and
sahf
mov
in
add
mov
add
or
shll
stc
adc
mov
int
add
and
cmpl
aas
inc
lcall
aas
sub
insl
sbb
cmp
xor
xchg
rclb
out
pop
movsl
pop
push
add
add
dec
std
cltd
jecxz
fs
sbb
xor
mov
scas
rcrl
add
xchg
orl
nop
pop
in
insb
daa
mov
sbb
dec
jno
int
add
adc
sahf
lds
mov
add
sbb
add
add
xchg
pushf
sub
jl
daa
sbb
sbb
sbbl
sbb
dec
mov
add
inc
mov
xchg
add
movsl
adc
or
punpckhwd
scas
push
sub
repnz
jp
fisttpll
xor
add
outsb
inc
adc
add
or
mov
and
orl
les
mov
mov
mov
adc
emms
fwait
daa
sub
xor
aaa
xchg
mov
int3
scas
xchg
sbbl
imul
or
lahf
lods
xchg
sub
mov
push
lea
inc
loop
leave
into
orl
add
gs
xor
inc
outsl
mov
je
testb
ret
or
push
dec
into
push
cltd
andb
adc
into
mov
xchg
dec
lea
xchg
hlt
lea
dec
cltd
cwtl
adc
nop
int3
lret
pushf
adc
jmp
into
push
mov
mov
es
cwtl
test
pop
mov
nop
dec
lea
or
push
jmp
or
sub
mov
xchg
or
cmp
sbb
lea
orl
clc
mov
mov
cmp
xchg
fcoml
adc
and
ret
push
mov
test
in
or
and
out
dec
sbb
sahf
xchg
mov
or
aam
pop
adc
add
cltd
cwtl
dec
jg
ret
sub
leave
rolb
jnp
sbb
inc
nop
fiadds
xchg
push
mov
mov
test
pop
fiadds
test
lea
jl
adc
adc
sahf
test
imul
mov
outsl
inc
and
mov
mov
xchg
push
cld
lcall
inc
fdivrs
cltd
sub
icebp
arpl
mov
push
xchg
push
and
cmp
dec
pop
or
inc
loop
push
scas
pop
inc
jnp
cltd
add
scas
icebp
addl
jp
mov
iret
or
adc
mov
inc
sub
adc
mov
mov
lea
cmpb
out
ret
adc
sbb
xchg
es
sahf
add
jle
add
and
and
inc
push
out
inc
jb
ret
xchg
fwait
ja
addb
movhlps
dec
cmpb
out
das
or
sbb
xchg
mov
fmuls
clc
addl
sbb
push
or
adc
mov
dec
add
popf
mov
pop
das
push
xchg
sbb
lret
shlb
dec
dec
mov
push
dec
sbb
and
lret
sub
sbb
pop
ljmp
adc
mov
xchg
mov
cmp
sbb
in
or
fdivl
push
sbb
ret
and
clc
inc
test
andl
mov
sbb
add
add
lea
or
cmp
sub
add
mov
mov
cmc
aam
cmpsb
sahf
fldenv
ficomps
ficomps
and
jnp
push
gs
push
flds
mov
pushf
fiaddl
xchg
ficomps
int
es
push
jnp
adc
sub
add
sbb
popf
mov
xchg
and
lret
movups
cmp
xchg
push
xor
scas
and
xchg
and
xchg
jb
loopne
sbb
imul
sbb
fcmovne
adc
jle
adc
loop
add
std
add
rclb
addl
or
or
push
mov
dec
aas
push
nop
inc
shlb
and
sahf
mov
mov
add
rorl
mov
adc
aas
mov
daa
lahf
xchg
test
pop
adc
push
pop
adc
add
aas
sbb
ret
or
xchg
sbb
jb
lock
or
bound
mov
cmpl
insb
jns
xchg
and
cwtl
inc
les
dec
adc
adc
test
loop
lods
sbb
add
xchg
jecxz
adc
fwait
add
xor
and
and
xor
dec
adc
cmp
nopl
xchg
and
out
push
adc
addr16
push
and
int
sub
mov
jnp
std
inc
add
sub
out
ret
and
sbb
sbb
pop
xchg
xchg
int3
jmp
pop
and
xchg
cwtl
pushf
cmc
lea
xorl
pop
xchg
or
shlb
sbb
pop
andl
add
jmp
test
dec
jp
cmp
mov
xchg
mov
iret
cmpsb
sbb
mov
sbb
daa
orl
adc
or
loop
mov
mov
std
inc
addl
rclb
adcl
fimuls
push
xchg
sbbl
mov
in
pusha
andl
stos
xlat
fwait
insb
xchg
xchg
icebp
xchg
mov
or
mov
lods
or
jno
cltd
mov
cwtl
mov
jmp
or
mov
gs
js
xchg
addr16
popa
lea
mov
or
and
or
xor
pop
scas
lcall
adc
and
test
xchg
orb
daa
adc
jbe
xchg
ljmp
and
ds
and
xor
fisubs
cs
inc
and
and
insb
xchg
inc
and
ja
cmp
addr16
and
and
mov
and
pop
mov
mov
mov
sbb
add
mov
mov
and
or
push
dec
popf
les
mov
les
mov
imul
mov
lcall
xchg
mov
adc
and
mov
and
inc
add
and
xor
adc
cld
cmp
and
test
inc
xchg
dec
add
ret
pop
inc
sbb
pop
xchg
xchg
or
dec
daa
mov
add
xchg
cmp
xchg
add
or
in
mov
lahf
adc
cltd
inc
mov
imul
add
and
xor
ret
cltd
imul
push
shl
pushf
xor
sbb
loop
or
adc
lea
lea
push
xor
add
rorl
sahf
imul
or
pop
or
inc
xchg
mov
mov
mov
inc
add
rorl
fmull
add
adc
adc
loope
xchg
xchg
in
mov
xchg
xchg
ja
icebp
add
out
xchg
ret
add
inc
or
xchg
cwtl
pop
aas
mov
sbb
shrl
in
nop
or
adc
lahf
mov
or
lret
adc
pop
ror
rolb
lea
mov
sub
xchg
sbb
dec
negl
pushf
inc
repnz
sbb
and
les
repnz
adc
imul
test
or
int
add
lea
mov
jecxz
and
imul
jo
xor
test
adc
aad
adc
rcrl
jbe
sahf
adc
jae
dec
mov
jecxz
lea
add
adc
repnz
pop
xchg
jmp
lcall
cmp
pop
mov
add
repnz
lods
mov
mov
lcall
sahf
sbb
adc
or
mov
mov
lea
adc
push
mov
nop
push
sbbl
mov
adc
dec
inc
pop
or
or
jmp
es
sbb
clc
mov
ret
lret
or
or
pop
dec
adcl
and
mov
orl
movsl
ret
adc
xchg
cwtl
and
int
ja
and
push
add
inc
or
and
xor
push
add
aas
add
pop
and
add
mov
sbbl
pop
or
xchg
sbbl
xchg
test
int3
pop
fstpl
cltd
mov
jb
adc
addb
sbb
stos
xchg
push
das
xor
and
test
out
xor
and
sbb
fists
adc
std
sbb
nop
jp
mov
xchg
cmpsb
mov
pushf
cmpsb
lcall
ds
mov
lahf
lea
pop
arpl
cwtl
push
clc
mov
lahf
add
cmp
or
arpl
popa
enter
daa
add
add
and
sub
subb
adc
add
pop
sbb
es
or
mov
add
xchg
movsl
add
xchg
lds
mov
or
xor
adc
popf
add
fwait
xor
in
ljmp
add
in
pop
outsl
sbb
pop
imul
xchg
mov
mov
mov
imul
dec
inc
jmp
mov
sbb
xor
adc
or
push
adc
test
in
test
cltd
bound
pop
bound
test
push
add
int3
pop
jb
sub
ljmp
rolb
lea
sbb
push
pop
sbb
pop
mov
sbbl
dec
mov
orl
sub
loop
xchg
jle
push
lods
or
pop
sbb
adc
push
pop
clc
lods
or
test
mov
pushf
and
lahf
pop
lea
cwtl
add
sbb
dec
sbb
mov
add
mov
push
inc
loop
sbb
add
nop
leave
mov
mov
popf
push
and
pop
adc
sbb
xchg
popf
mov
mov
or
add
aas
mov
dec
jb
gs
push
and
xchg
aam
ret
adc
add
sbb
adc
in
hlt
jb
and
xchg
sbb
mov
dec
rcrb
sbb
hlt
mov
adc
cmp
pop
and
pop
popf
mov
adc
mov
add
in
and
mov
xor
cld
test
loope
add
inc
imul
or
push
adc
cmp
stc
sahf
adc
test
push
test
lods
mov
mov
xor
add
sub
xchg
bound
or
push
adc
xchg
cwtl
xchg
mov
or
mov
mov
mov
test
adc
mov
mov
jle
xchg
mov
inc
xchg
test
or
xor
shll
lea
xchg
xor
push
scas
mov
or
or
dec
pushf
mov
xchg
xor
add
lret
adc
das
mov
cmp
dec
mov
lret
cmpsb
add
cmp
or
mov
or
mov
xchg
ret
adc
sub
cwtl
jo
mov
mov
aad
pushf
mov
push
pop
jmp
adc
ret
dec
or
adc
mov
mov
mov
ret
dec
mov
lret
adc
jmp
mov
add
lods
dec
ret
and
xchg
orl
push
add
leave
pop
adc
xchg
mov
leave
inc
mov
in
add
dec
sub
popf
xchg
sub
cwtl
rorl
imul
xchg
xor
and
pop
stos
and
nop
pop
stos
push
or
mov
insl
movhps
sbb
and
cmp
or
add
xchg
push
lret
mov
xor
or
add
add
mov
inc
mov
adc
xchg
xchg
cmp
sbb
out
nop
addr16
and
xchg
push
or
sbbl
push
adc
mov
daa
adc
mov
mov
inc
pop
and
sub
call
fistps
sub
mov
pop
fwait
push
adc
adc
aaa
cwtl
arpl
shlb
insb
jmp
push
dec
push
popf
xchg
fiadds
push
adc
xchg
test
pop
xchg
mov
push
push
stos
xor
mov
cmp
adc
mov
out
cld
xchg
mov
and
jmp
lock
add
sbb
or
adc
adc
flds
add
add
daa
sbb
add
add
xlat
mov
flds
pop
pop
test
pop
xchg
jp
mov
sbb
adcb
inc
push
pop
fisttpll
sbbb
push
push
and
test
fwait
or
les
mov
xchg
test
xchg
and
xchg
lret
xchg
out
nop
xor
mov
orb
nop
das
xchg
inc
fcompl
lcall
lahf
mov
sbb
pop
push
test
inc
jb
popl
ret
or
xchg
jg
mov
xchg
lahf
pop
inc
mov
inc
sub
hlt
pop
pushf
lret
nop
sub
dec
scas
mov
lds
in
lods
mov
lea
add
test
push
pandn
daa
pop
stos
add
aad
fs
or
testb
addl
adc
popf
and
xchg
out
aad
test
and
and
sub
mov
pop
fwait
jnp
mov
or
pop
xchg
and
sub
loop
nop
pop
mov
add
xchg
dec
dec
mov
and
sub
repz
and
inc
out
sbb
aaa
inc
xchg
stos
inc
add
adc
mov
incl
enter
pop
imul
pop
mov
cltd
rorl
cmp
jnp
cltd
in
xchg
imul
es
mov
push
push
pop
sahf
sbb
pop
daa
lea
ja
pop
xchg
sahf
add
inc
sbb
gs
andl
adc
les
xchg
and
xor
out
cwtl
or
xchg
add
lret
xchg
inc
adc
dec
lds
mov
xchg
sub
push
sbb
pop
mov
in
pushf
fimuls
or
ret
xlat
nop
xchg
sub
test
cltd
xchg
xlat
and
sbb
xchg
ljmp
and
fcomps
add
bound
lods
xor
addr16
jmp
jno
repz
clc
xor
std
mov
xor
inc
push
in
or
icebp
cmpsb
je
add
cmpsb
sbb
push
mov
and
or
dec
jle
push
sbb
dec
lahf
stc
add
sbb
test
and
mov
cmp
or
sbb
adc
es
or
sbb
lods
xor
imull
lds
aad
sbbb
test
mov
mov
mov
mov
or
pop
add
jecxz
or
push
cmc
repnz
sbb
sbb
sbb
es
xchg
mov
push
add
mov
bound
sbb
mov
adc
int3
mov
aas
push
dec
mov
push
lea
out
adc
mov
xchg
xchg
add
or
js
adc
or
test
adc
push
push
aaa
test
push
push
add
adc
sbb
sub
jbe
or
popf
jg
es
lahf
sti
mov
xchg
xor
in
outsl
das
lahf
or
inc
dec
sub
cmpl
inc
repnz
inc
enter
cmp
adc
aam
lret
lcall
xchg
or
xor
xchg
dec
or
stos
mov
in
lods
or
lret
or
addl
or
lods
mov
das
adc
in
xchg
dec
rolb
lods
lahf
ljmp
mov
or
pop
xchg
adc
xchg
mov
xor
or
sbb
adc
lock
arpl
and
pop
mov
inc
inc
in
shll
popa
xchg
adcl
cmp
xchg
cmp
daa
push
lcall
xor
xchg
sbb
add
ret
xchg
lods
add
ficompl
xchg
aas
sbb
sub
add
add
pop
pop
cmp
test
imul
or
and
mov
sbb
test
out
xchg
cmpb
lods
cltd
or
sub
imul
leave
lods
inc
sbb
add
add
sbb
sbb
inc
sbb
add
xchg
sbb
int
push
or
pop
hlt
cmp
adc
adc
pop
xchg
pop
test
or
mov
pop
shll
sub
mov
pop
and
xchg
mov
mov
xchg
sub
add
add
ret
pop
xor
jecxz
int3
gs
adc
test
or
test
lds
or
sbb
xchg
add
in
xchg
test
loope
mov
or
or
xor
aas
fwait
inc
in
xchg
pop
int
xchg
add
xchg
add
mov
mov
push
add
iret
jmp
sbb
mov
and
pop
or
in
add
add
mov
adc
into
xchg
lret
xchg
or
nop
xchg
leave
ret
or
adc
lcall
push
or
add
test
pop
adc
pop
nop
pop
mov
and
adc
addb
dec
pop
mov
pop
xchg
dec
adc
test
les
cmpsl
add
filds
adc
xor
cmp
adc
movsbl
test
adc
and
adc
aas
pop
les
lret
lds
xchg
or
int3
fcoms
adc
sbb
mov
stc
and
push
add
sbb
sbb
sbb
push
shrd
sbb
mov
mov
push
and
mov
in
cs
int
scas
adc
ret
leave
mov
insl
out
sub
sub
cs
pop
sbb
enter
add
dec
shll
imul
orb
or
adc
dec
lods
jg
icebp
add
int
sub
xor
add
loopne
inc
xor
into
sub
lods
mov
outsl
push
pop
insl
stos
add
dec
push
inc
push
das
mov
imul
adc
push
sub
push
xchg
push
or
imul
scas
jle
jge
mov
jmp
xchg
mov
jno
insl
sub
repz
push
xchg
lods
in
push
inc
les
xor
add
lret
out
or
cmc
rolb
jge
aam
cltd
loop
add
cmpsb
orl
push
or
loop
or
xchg
add
sahf
sbb
cmp
inc
dec
je
ret
cmp
sub
push
addr16
rolb
stc
add
or
sahf
cwtl
pop
jge
lret
xor
cli
and
jb
jnp
mov
mov
pop
addr16
pop
mov
lret
jl
ret
in
imul
mov
int3
imul
xor
lods
scas
addr16
pop
mov
jbe
or
lret
or
add
inc
xchg
xchg
and
out
dec
std
push
ret
mov
mov
test
mov
add
or
add
addr16
mov
cltd
and
dec
icebp
mov
sub
cld
jne
pop
stos
imul
int
daa
int3
mov
cmp
mov
dec
sub
ljmp
loope
psubusw
data16
xchg
and
and
arpl
inc
and
xchg
jmp
imull
xor
adc
xchg
dec
loop
nop
es
dec
add
in
js
add
shll
cmp
mov
sub
and
and
adc
jg
les
and
pop
insb
test
mov
or
mov
mov
push
leave
mov
lods
outsb
inc
jae
jge
cs
dec
daa
inc
enter
cli
data16
add
ja
test
jl
push
pusha
mov
inc
push
mov
push
and
dec
out
ficoms
lea
test
sbb
adc
in
in
and
inc
pop
cld
lcall
in
lea
sub
sbbl
jmp
sahf
mov
out
rorl
add
inc
push
add
mov
out
out
shrl
cmc
int
dec
int
mov
push
insl
mov
sub
insb
mov
pop
pusha
decb
mov
sbb
cwtl
in
addb
adc
nop
and
add
add
xor
dec
add
adc
inc
sti
icebp
test
add
or
inc
hlt
popf
push
leave
cltd
inc
scas
outsl
xchg
imul
or
or
sub
sub
imul
stc
mov
add
add
push
bound
popa
popl
sbb
sbb
add
sbb
test
xchg
adc
or
icebp
and
jno
mov
addb
push
add
ss
push
sbbb
mov
push
sbb
inc
test
adc
jmp
jg,pn
stos
out
ss
adc
cltd
push
lcall
out
push
dec
sub
adc
pop
push
xor
scas
inc
and
or
sbb
sbb
gs
popf
and
jmp
lret
loope
sbb
in
sub
lahf
test
cmp
vmread
push
outsb
arpl
inc
sub
jae
aad
or
or
mov
pop
std
add
inc
mov
or
aas
pop
xchg
mov
mov
ljmp
dec
xchg
inc
adc
scas
lahf
xor
aad
adc
mov
hlt
add
mov
lds
daa
gs
push
xchg
dec
mov
or
and
shll
jmp
or
imul
sub
lcall
xchg
enter
adc
cs
dec
push
lods
addb
jp
pop
or
jp
loop
mov
sub
mov
mov
add
cwtl
imul
imul
add
lea
adc
sbb
dec
aaa
ljmp
jno
pop
es
mov
jnp
push
lahf
or
lcall
or
jae
xchg
and
shl
xor
mov
pop
gs
outsl
bnd
mov
dec
aad
or
adc
enter
mov
inc
das
sbb
mov
xchg
cmp
fs
stc
xor
add
aam
dec
push
outsl
xor
add
xlat
or
xchg
jmp
xchg
or
pop
xor
adc
pop
icebp
and
xor
sub
cmp
or
xchg
adc
mov
xchg
mov
sbb
adc
inc
push
cs
sub
and
movhps
cltd
sbb
lcall
outsl
push
adc
mov
add
mov
sbb
cltd
cmp
iretw
lods
push
xchg
adc
adc
popf
push
sahf
test
adc
push
xchg
push
clc
mov
inc
mov
xchg
adc
mov
dec
dec
sub
mov
scas
das
fwait
sbbb
mov
dec
test
mov
or
dec
mov
or
and
ret
cltd
dec
fmuls
leave
test
test
add
shrb
mov
xchg
inc
or
push
cltd
mov
in
popa
dec
inc
add
add
sbb
stos
les
jl
mov
xchg
rcll
into
sbb
ucomiss
and
sbb
scas
sbb
into
movsb
mov
mov
lret
inc
add
or
mov
push
add
popf
inc
mov
add
mov
add
push
mov
lret
xchg
or
mov
cmpsl
test
push
gs
adcb
and
and
mov
test
andb
dec
sbbl
jge
add
test
mov
cmp
or
test
mov
mov
cmpl
sub
and
sbb
pop
inc
in
stos
popl
add
lahf
cmpb
mov
out
addl
lods
or
and
int3
add
imul
and
cmp
mov
sub
ror
mov
dec
mov
add
test
and
sub
mov
mov
xchg
pushl
xor
pop
jne
mov
sbb
or
shlb
iret
jge
ret
add
xchg
adc
push
lea
push
or
adc
inc
dec
nop
sbb
sub
bound
mov
adcb
and
pop
paddsb
adc
or
addb
sbb
lea
xchg
jns
pushf
ret
mov
xchg
into
add
in
adc
pop
in
jp
mov
sbb
sbb
sub
push
fldenv
dec
insl
pop
test
dec
loop
or
int
je
fidivs
loopne
stc
mov
mov
inc
rcll
sub
or
lods
inc
push
adc
roll
push
imul
add
fildll
iret
leave
roll
and
dec
add
jg
movsb
mov
add
push
popa
and
ds
pushf
jno
test
xchg
or
and
xchg
sbb
loope
outsl
lock
adc
add
xchg
mov
fwait
xchg
jg
push
nop
daa
add
dec
sbb
testb
lret
push
or
add
xchg
iret
and
push
lret
rol
stc
lret
xor
xchg
insb
adc
sub
lea
std
inc
das
mov
and
xchg
sub
jmp
pop
out
movsb
scas
inc
dec
or
mov
or
sbb
cmp
repnz
lods
sbb
sub
pop
scas
out
vmovdqa
xchg
dec
test
movsl
flds
inc
stos
in
adcb
xchg
or
mov
lea
and
jb
sbb
mov
ds
test
fldt
or
or
mov
dec
inc
bound
int3
dec
add
adc
mov
das
or
push
push
jmp
push
mov
xchg
xchg
sbb
fsubrp
sub
mov
mov
imul
inc
inc
dec
inc
ret
dec
xchg
adc
push
data16
xor
cmp
sub
mov
sti
add
ret
movsl
or
lods
pop
in
nop
mov
sbb
push
call
out
push
inc
out
mov
push
add
sbb
mov
pop
cmp
imul
jno
jno
sbb
inc
fldenv
psrlq
aam
jmp
orl
cmp
popa
adc
aad
cmp
sbb
inc
lods
inc
push
mov
push
rcrb
sub
or
sbb
mov
fdivrs
mov
cmc
xchg
xor
fistl
into
inc
test
cs
xchg
sbb
adc
push
dec
repz
xor
xchg
jae
and
push
or
in
dec
push
push
aaa
xchg
cltd
mov
mov
enter
jnp
movsb
mov
leave
cmp
or
cmp
adc
push
mov
jb
mov
inc
add
repnz
sub
pushf
popa
shlb
sub
mov
xchg
sbb
movsb
lds
push
in
fnsave
dec
and
mov
mov
daa
xchg
mov
adc
divl
jno
adc
lods
inc
into
movsb
outsl
sub
sub
add
jo
iret
lea
mov
leave
xchg
sbb
sub
lock
add
pop
push
add
jg
push
xor
or
js
in
push
leave
aas
std
push
scas
add
dec
aas
mov
jmp
das
lahf
inc
pop
and
cltd
inc
subb
out
imul
imul
test
fwait
mov
lea
inc
int3
rcrl
push
rolb
mov
cmp
dec
push
xchg
pop
xchg
fidivrl
inc
addr16
jo
cmp
inc
dec
aad
xchg
jae
jge
imul
mov
push
out
stos
mov
adc
push
sub
mov
add
jg,pn
orl
lds
adc
aas
mov
pop
mov
xchg
add
movsb
mov
cld
outsb
das
pop
sbb
ljmp
in
sahf
insl
popf
jnp
xorl
mov
lahf
jl
inc
lahf
aas
jge
pushf
daa
add
into
scas
mov
call
sbb
inc
xchg
jg
and
push
pop
push
pop
jae
pushaw
sbb
mov
sqrtps
sbbl
add
lea
xchg
push
mov
adc
lea
adc
adc
shlb
sbb
or
dec
add
arpl
push
insb
mov
jae
sub
imul
ret
pushf
dec
or
cltd
pop
lods
lahf
dec
rorl
loop
sub
jno
repnz
adc
in
adc
subl
cmp
repz
or
roll
lcall
xchg
leave
dec
push
mov
or
xchg
ret
das
cmpsb
jns
xorl
mov
xchg
mov
xor
mov
ret
dec
sub
adc
lret
inc
lahf
sbbl
pop
dec
dec
dec
xorb
mov
ret
sub
insl
push
xchg
xor
mov
inc
loop
insb
lds
ret
into
loop
dec
inc
inc
sbb
sbb
mov
xchg
xchg
mov
add
fs
adcl
xchg
adc
inc
dec
or
dec
pop
sub
sub
iret
mov
add
push
and
lods
lock
lea
adc
inc
add
movl
lret
add
adcb
into
mov
dec
shrl
mov
addl
xchg
lds
into
adc
stos
dec
jne
call
sbb
adc
adc
shll
mov
xchg
rorl
xchg
dec
mov
dec
ja
mov
or
xchg
sbb
add
lret
cltd
test
fisubs
sbb
cmc
rclb
xlat
xorb
pop
mov
inc
inc
or
fcmovb
clc
lcall
and
sub
add
jmp
sub
imul
and
test
cmpsb
test
jp
cmp
xchg
add
or
add
cs
xor
fcoml
pop
arpl
fisttpl
add
or
bswap
lret
imul
repnz
cmp
shrl
nop
adc
outsl
xlat
inc
insb
pop
xor
and
xchg
inc
or
unpckhps
lret
fcoms
idivl
adc
and
adc
pmullw
add
pop
push
les
add
xor
roll
and
push
test
mov
xchg
daa
pop
xchg
push
lds
add
dec
and
aaa
pushf
movb
imul
xor
sub
add
int3
push
in
iret
xor
push
or
cmp
lret
mov
lcall
test
in
add
icebp
xchg
std
push
inc
test
sbb
xchg
sbb
xchg
fisubrs
inc
and
ret
mov
stos
pushf
and
int3
dec
sbb
xor
pop
popl
fldl
pop
dec
sbb
popf
lret
lcall
and
xchg
inc
push
push
or
cwtl
sbb
add
dec
bound
push
mov
or
lea
jno
dec
rclb
addb
fcompl
jb
mov
mov
cmp
inc
dec
sbb
mov
lret
dec
adc
dec
inc
faddl
pop
cltd
dec
xor
add
int3
ret
xor
ja
push
lcall
jb
sbb
sarl
ret
push
lcall
inc
sbb
insb
or
pop
cmp
or
mov
int3
lcall
inc
add
ret
lret
stos
roll
popf
mov
jb
add
mov
cmp
outsl
sub
mov
xor
sahf
xchg
or
imul
outsb
cld
mov
xchg
adc
imul
inc
and
xorb
icebp
adc
in
in
dec
into
and
test
mov
adc
enter
dec
outsl
mov
fbstp
sbb
lock
inc
mov
test
add
es
or
jmp
xchg
jge
jne
cs
subb
rcr
sub
mov
adc
adc
int3
mov
sub
mov
sbb
leave
xchg
adc
mov
cwtl
xchg
leave
adc
sbb
sbb
test
mov
jp
lcall
or
cltd
cmp
mov
out
loope
dec
les
adc
xchg
std
mov
mov
dec
cmp
xchg
popf
pushf
push
popf
icebp
and
pop
and
push
mov
jge
pop
or
bound
add
adc
lret
push
iret
dec
and
mov
data16
and
and
ljmp
xlat
add
mov
pop
add
mov
xor
mov
and
and
cmpsb
sbb
and
jmp
insb
inc
xchg
push
push
cmpb
cmp
pop
dec
loope
push
xchg
xchg
dec
mov
sbb
xor
xchg
lahf
mov
cmp
xchg
std
daa
and
push
pushf
dec
fistps
or
loop
sbbb
sub
sbb
xchg
lods
push
inc
or
xchg
adc
inc
addb
dec
add
test
mov
mov
lret
or
mov
icebp
adc
mov
or
dec
push
add
repnz
ljmp
in
ja
hlt
fists
test
mov
xor
test
js
testl
cmovno
dec
out
dec
push
fistpl
mov
or
inc
xchg
daa
inc
imul
incb
test
and
mov
xchg
mov
ret
inc
lea
push
and
push
movsl
sub
or
gs
mov
movsb
fsubr
xchg
lods
mov
cmp
or
xlat
les
xchg
lret
stos
ret
in
mov
cwtl
mov
jno
jnp
js
dec
dec
sub
movsb
mov
and
xchg
aaa
leave
xchg
das
clc
xor
popa
clc
mov
inc
add
call
pop
and
dec
repnz
and
mov
shrb
hlt
xchg
stos
push
outsl
jge
imul
loopne
movd
fstpt
in
stos
mov
and
mov
push
stos
test
mov
popa
xchg
pop
fwait
ljmp
loope
outsb
lods
mov
sbb
add
push
mov
mov
mov
push
mov
into
rorl
insl
pop
aad
mov
adc
outsl
fcmovne
adc
add
push
add
xor
add
das
mov
add
jle
stos
inc
jno
mov
adc
pop
push
xchg
add
xchg
pop
xor
pop
mov
jnp
incl
and
add
inc
adc
add
and
mov
add
sub
jne
xlat
push
and
test
jg
cli
mov
sahf
popa
or
leave
cmp
dec
or
lock
jmp
ljmp
imul
dec
add
inc
sbb
mov
stos
leave
sub
inc
cmpsb
popa
mov
popa
jmp
insl
iret
enter
inc
test
enter
into
nop
ret
jo
xor
lods
inc
add
sub
or
pushl
lret
pop
lods
cmpsb
push
lret
mov
add
inc
xchg
addl
dec
mov
or
test
add
lret
rcr
push
and
dec
jmp
mov
or
orb
test
bound
lea
jmp
and
test
cmp
les
add
sub
pushf
or
mov
xor
lods
andb
mov
mov
adc
xchg
insl
add
enter
test
insb
or
push
pop
cmp
out
push
sbb
outsl
mov
scas
mov
push
inc
push
aaa
adc
add
arpl
add
push
ljmp
fisttpll
and
out
stos
pop
sub
xchg
mov
dec
mov
cmp
xchg
or
test
mov
adc
rcll
mov
xchg
adc
in
imul
rorb
xchg
sbb
mov
xor
insb
cltd
and
or
lahf
mov
ljmp
popf
push
lahf
xor
sub
sbb
insl
fldt
inc
jno
lret
pushf
xchg
cmp
in
fistps
xor
add
sbb
and
aam
mov
iret
xchg
xorl
test
and
pop
dec
cli
rclb
cmp
aaa
xchg
inc
addb
adc
sbbl
add
push
or
lcall
or
push
test
repz
or
cmpsb
test
int
lret
adc
add
lcall
dec
or
test
outsb
mov
add
int3
addb
lods
popf
cmp
dec
adcb
dec
push
insb
adc
push
xchg
scas
clts
sub
xchg
test
xchg
push
test
test
int
nop
mov
add
inc
addb
or
lahf
pop
push
lahf
pop
andb
push
addb
push
dec
adc
hlt
xchg
cs
push
and
add
pop
sub
add
sbb
jg
sbb
pop
das
or
mov
adc
mov
iret
orb
lret
dec
and
ds
andl
orl
or
mov
lods
lods
adc
push
nop
xchg
sbb
imul
in
pop
fcoml
aaa
push
sub
das
in
xchg
cwtl
adc
arpl
les
pop
push
lods
or
int3
xor
mov
adc
orl
pop
frstor
push
pop
adc
pop
outsb
sub
sub
or
sub
mov
pop
adc
dec
into
repnz
test
add
push
sub
lods
in
add
or
lret
mov
lea
dec
dec
dec
xchg
fildll
popf
push
sbb
jp
xchg
xor
adc
adc
lds
or
sub
mov
xchg
or
test
es
lret
or
pop
test
out
sbb
packssdw
mov
cmp
leave
test
cltd
add
sbb
xchg
xchg
outsl
cltd
sbb
dec
sbb
add
or
imul
hlt
or
and
jno
test
test
aas
push
test
lock
adc
mov
push
sbb
cmpb
insl
push
testl
xchg
pop
push
rclb
sub
jne
les
or
enter
xor
adc
cmpsl
nop
andl
ljmp
fisttpll
ret
andb
test
inc
pop
iret
mov
cmpsl
es
xor
sub
addr16
iret
xchg
add
inc
stos
pop
inc
sbb
jmp
or
mov
out
cmp
addr16
mov
pop
out
sub
mov
daa
adcb
push
push
add
adc
add
xor
fcmovne
add
and
inc
push
pop
dec
addb
xor
aad
adc
add
daa
pusha
orl
jne
mov
xchg
mov
in
add
xor
inc
test
and
inc
inc
test
or
mov
ret
add
int
xchg
hlt
sub
js
xor
or
cmp
xchg
arpl
ljmp
xor
pop
sub
leave
inc
and
dec
insl
xor
cmpsb
push
inc
cmpsb
outsb
setns
and
out
cmp
dec
xchg
xor
push
or
movsl
push
rcll
test
dec
inc
sub
mov
cmc
in
dec
push
sbb
movsl
lret
mov
or
lret
dec
mov
cmc
mov
repz
xlat
sbb
sarl
out
sub
sub
add
test
adc
movsb
in
outsl
js
mov
or
fisttpll
inc
lret
adc
inc
insl
or
cmp
clc
inc
pop
addl
and
cmp
leave
imul
pop
test
or
or
inc
or
paddsw
dec
add
les
ror
in
xlat
push
add
dec
daa
adc
cmp
addl
test
adc
popf
xor
push
pop
adc
dec
add
xchg
sub
ret
xchg
popf
inc
add
or
or
add
ror
xchg
add
mov
xchg
lret
xchg
dec
xchg
lods
lea
add
orl
push
sbbl
jmp
ljmp
or
popf
push
xchg
dec
jecxz
xchg
test
adcb
mov
and
ret
or
dec
push
mov
dec
xchg
xchg
hlt
imul
or
dec
and
mov
icebp
and
in
sbb
in
andl
mov
leave
add
push
xchg
and
pop
addl
add
into
lea
push
cltd
xchg
push
add
aad
jmp
or
mov
or
fwait
test
pop
daa
pop
pusha
mov
js
dec
xor
inc
decb
push
add
in
pop
movl
mov
adc
dec
xchg
inc
punpckhwd
out
xchg
xchg
add
andl
mov
xchg
mov
addr16
lret
or
pop
inc
ljmp
enter
dec
inc
xor
pop
aas
insb
dec
dec
or
sub
outsl
andb
lea
mov
inc
add
xorl
adc
mov
sahf
es
xchg
fwait
fwait
push
push
xchg
inc
or
mov
lcall
jp
dec
stos
inc
push
inc
add
jmp
xchg
int
sub
leave
add
test
sub
lods
push
daa
je
mov
adc
inc
ror
adc
add
pop
lods
adc
pop
xchg
enter
mov
pop
mov
add
or
pop
push
adc
pusha
sub
inc
push
arpl
xchg
push
mov
push
shlb
cmovb
dec
mov
mov
test
mov
add
leave
in
push
sbb
mov
xchg
push
xchg
and
pop
outsl
add
adc
jg
popf
lret
xchg
adc
xchg
sub
jb
xor
cmp
mov
rdpmc
add
inc
ljmp
mov
add
xchg
xchg
jb
dec
or
cmovo
sbb
test
mov
movsl
cmp
dec
adc
pop
icebp
shll
ljmp
dec
lret
pop
inc
ss
pop
cs
jp
and
dec
mov
test
into
dec
pop
and
adc
jp
lret
xor
mov
xor
adc
subl
pop
popf
and
shll
jno
sub
dec
std
sbb
and
stos
dec
and
dec
push
mov
mov
mov
sub
adc
in
lds
cmovnp
andl
inc
push
ret
mov
mov
sbb
mov
push
scas
mov
out
jno
or
int
fadds
repnz
push
pushf
cltd
xchg
mov
xor
xchg
inc
and
mov
js
add
adc
cmc
adc
or
aad
ljmp
push
pop
jnp
lcall
push
pop
jnp
lcall
xorb
sbb
add
mov
je
out
dec
imul
addl
xor
xor
int3
std
sbb
push
bound
and
sub
adc
out
pop
sub
shr
pop
dec
sub
scas
cmp
push
mov
popf
xor
sbb
pushf
mov
sub
inc
stos
addl
xor
xchg
test
push
or
outsb
xchg
dec
das
or
mov
test
or
mov
mov
push
jmp
dec
lret
femms
test
test
insb
pop
lret
mov
test
mov
add
test
bound
fsubrp
rorl
insl
push
mov
inc
lods
cmp
or
js
lret
in
cmp
xor
mov
lods
pop
in
arpl
test
xchg
pop
or
test
or
xchg
cli
popa
push
push
lea
jbe
gs
dec
xchg
xchg
xchg
or
and
lea
dec
inc
add
add
pop
xchg
add
icebp
add
or
insl
lods
test
add
in
pop
and
adc
orl
add
sub
xchg
adc
add
or
xchg
and
imul
rcr
dec
lock
les
or
add
rcrl
cli
mov
mov
orb
adc
nop
xchg
mov
repz
or
xchg
xchg
addb
repz
jmp
data16
pushf
xchg
and
daa
out
and
xchg
xchg
es
repz
mov
pop
cmp
jecxz
cltd
pop
addl
cltd
add
adc
jo
sbb
lret
mov
sbb
xchg
or
add
adcb
and
repnz
and
xchg
dec
roll
push
hlt
add
xchg
pop
imul
ret
rcr
xor
inc
rolb
mov
es
jg
and
mov
dec
xor
mov
or
sub
test
outsl
addr16
xor
inc
mov
mov
dec
in
sbb
popa
insl
scas
sub
or
push
pop
xor
adc
cmpl
add
ja
loop
shll
packssdw
sbb
andl
test
cwtl
sub
sbb
enter
adc
push
daa
pop
pop
pushf
jmp
fiaddl
sub
rorl
dec
rorl
inc
in
mov
xor
inc
or
inc
inc
mov
dec
pop
in
sbb
inc
lret
dec
dec
jno
mov
iret
dec
into
or
bound
jne
jo
inc
adc
inc
push
pop
sub
pop
pusha
lock
imulb
pop
push
inc
inc
and
dec
mov
ret
pusha
inc
int
adc
adc
mov
sbb
gs
jmp
jbe
popa
pop
lret
outsl
lret
sbb
test
fimuls
jne
inc
or
rorl
aam
cmp
test
push
aam
inc
sub
xor
dec
add
xor
aad
or
xchg
mov
jb
xchg
mov
cwtl
cmp
add
lods
inc
adc
push
pusha
dec
pop
lret
xchg
mov
inc
adc
xchg
repnz
or
sahf
sbb
test
mov
orb
or
or
dec
test
pop
add
fimull
lods
outsb
andb
mov
or
sbbl
xchg
lcall
mov
xorl
xchg
sub
mov
int
xor
push
or
or
jo
ror
xchg
orb
dec
jbe
cmpxchg
mov
cmpsb
test
push
or
dec
int
test
daa
and
lea
or
lods
daa
test
ja
dec
and
and
pop
push
shr
mov
dec
lods
in
push
subb
xor
push
xchg
dec
sahf
xorb
scas
les
imul
stos
mov
dec
insb
lret
dec
mov
xor
pop
jnp
and
cmpl
shlb
or
or
pop
add
ljmp
mov
or
pop
inc
imul
add
xchg
cmp
stos
aaa
mov
outsb
or
adc
or
test
imul
push
lcall
ret
cmp
add
data16
vmovddup
rcrl
test
push
sbb
int
push
lcall
add
dec
push
fmul
sbb
cmp
cmpsl
cltd
xor
ljmp
popf
mov
test
popa
inc
or
push
test
or
lds
lods
mov
pop
es
dec
inc
lahf
push
dec
imul
and
xchg
xchg
test
xor
add
je
scas
movsl
add
sbbl
lea
add
push
or
pushf
sub
ret
rorl
pop
lret
adc
dec
mull
adc
push
mov
sbb
lret
sbb
jbe
mov
xchg
pop
inc
mov
jl
roll
hlt
aam
outsl
sbb
xor
ljmp
rcll
fldt
sub
mov
adc
in
sarb
and
shlb
sbb
cmp
lock
jnp
xchg
repnz
imul
sti
adc
jg
xchg
mov
mov
add
movsl
rcrl
bound
bound
sbb
gs
sub
outsb
mov
nopl
popf
dec
dec
or
dec
inc
aam
xchg
inc
rolb
testb
lea
imul
in
adc
push
xlat
adc
sbb
mov
in
ficoml
pop
pop
mov
or
mov
or
mov
or
sub
inc
dec
test
std
lods
add
and
add
lea
xchg
test
ret
repz
mov
mov
jo
xchg
mov
loope
adc
mov
dec
inc
in
lds
adc
push
cmp
loop
andl
sbb
orl
or
mov
xchg
pop
inc
mov
adc
xchg
adc
jecxz
mov
subl
addr16
aad
rorl
mov
mov
push
pop
add
dec
and
sbb
imul
imul
dec
filds
push
mov
pop
push
aaa
xchg
sub
cmp
cwtl
xchg
sti
ljmp
in
dec
sbb
lock
int3
mov
shrb
jne
push
dec
scas
sub
push
or
sbb
mov
mov
xor
adcl
mov
or
mov
test
lret
test
sub
lret
cltd
ret
scas
or
add
lods
push
orl
or
xchg
test
add
sub
xchg
int3
or
pop
lcall
test
ret
bound
adc
push
adc
dec
dec
mov
jb
sub
push
add
movsl
xchg
int3
xor
dec
dec
sbb
xor
cmpsl
popf
xchg
pop
xchg
mov
or
inc
cmp
add
push
popf
inc
adc
loop
mov
das
mov
inc
dec
jno
in
rcrl
cmc
dec
cwtl
btc
mov
sub
or
inc
or
fwait
mov
mov
scas
cmp
fwait
xchg
insb
or
test
or
and
mov
lss
add
fnsave
scas
shrl
or
imul
adc
mov
inc
and
add
sub
lret
jmp
inc
loope
scas
outsl
hlt
test
mov
add
xlat
or
insl
xchg
sbb
int3
scas
sbb
inc
sarl
cltd
jb
inc
add
test
adc
movl
iret
add
push
shrl
or
in
aad
mov
subl
dec
repz
xchg
add
aam
mov
and
lcall
lods
dec
lret
inc
inc
in
push
in
jne
ror
lcall
or
aam
push
movsl
push
rcrl
pushf
sub
rdtsc
push
jne
xchg
jb
mov
into
xchg
inc
inc
repz
mov
xor
jno
sbb
inc
pop
sbbb
hlt
lret
imul
xlat
add
dec
pop
ret
xor
lods
in
and
push
in
xor
jns
orl
push
push
das
add
xchg
adc
repz
jno
stos
inc
xor
push
xchg
mov
aam
jmp
push
sbb
mov
fwait
lret
imul
xchg
push
lods
test
cmpsl
rcll
xchg
or
add
adc
cmp
or
lret
sub
int
mov
popf
xor
xchg
add
xchg
push
adc
int3
xchg
stos
lock
pop
test
outsl
push
dec
mov
mov
outsb
imul
xor
mov
xor
fwait
lock
push
sbb
lock
in
xor
loopne
mov
xor
push
xchg
fisubrl
and
push
in
xor
daa
adc
in
xchg
lcall
ja
inc
xchg
and
std
mov
add
aad
dec
adc
lea
xchg
ret
lods
add
or
mov
add
stos
subl
or
xor
into
and
push
push
dec
insl
mov
fisttps
and
add
mov
lods
mov
add
lods
test
int3
jmp
xchg
xchg
hlt
lahf
test
and
xor
test
inc
cmp
or
mov
lret
cltd
sbb
xor
jno
rorb
xchg
call
cwtl
inc
push
into
xchg
mov
xor
enter
test
int
fmull
xchg
mov
sbbl
push
mov
outsb
jno
test
fisttpll
xor
or
inc
add
or
jecxz
or
sbb
inc
xchg
and
es
jno
test
movsl
sub
xor
fldcw
pop
mov
xchg
outsl
roll
repz
addl
dec
fistps
jl
sub
in
lret
and
imul
push
mov
mov
notl
daa
fadds
mov
mov
add
adcl
pop
mov
xor
or
inc
add
dec
loopne
lret
xchg
dec
jne
out
add
adc
xchg
pop
pop
xor
cmp
inc
add
mov
loop
shl
popf
leave
or
adc
mov
mov
adc
cmp
push
js
inc
inc
mov
add
in
aad
lret
loopne
cmp
mov
movl
mov
inc
iret
shl
push
mov
dec
dec
jge
push
addl
fstpl
sahf
pop
scas
pop
pavgb
cmc
dec
xchg
fs
mov
lcall
out
or
xchg
lret
push
pushf
xor
dec
outsb
add
adc
push
insb
test
fwait
xchg
lea
sbb
mov
or
aam
dec
mov
test
cs
push
lahf
test
or
add
scas
cmc
add
push
sbb
xorl
jbe
cmp
lret
add
into
push
pop
test
xor
lret
pop
push
mov
mov
shlb
nop
add
xchg
cltd
mov
mov
add
pop
or
mov
xchg
sub
cmp
insl
mov
mov
xchg
rorb
jle
enter
and
or
scas
or
xor
stos
movsl
sub
mov
push
dec
or
fistps
lods
mov
pop
mov
inc
jae
out
jbe
or
fildl
repz
pop
outsl
inc
pop
popf
jbe
push
pop
notb
adc
cli
xchg
sub
push
pop
xchg
xor
or
enter
mov
adc
imull
fwait
pop
cmp
aad
push
mov
push
ret
and
rcl
fistl
mov
sub
mov
mov
pop
push
sub
iret
push
roll
add
leave
es
stos
addl
movsb
pop
dec
dec
mov
addl
or
mov
lret
mov
mov
xchg
mov
xchg
inc
xor
test
inc
mov
inc
lea
fcmovnu
xchg
rorl
or
jne
push
test
sub
xor
add
dec
inc
scas
addb
xchg
cli
pop
xchg
test
pop
test
cmp
mov
push
stos
push
xor
lea
push
movsl
aad
mov
icebp
sub
jp
push
mov
add
out
imul
or
mov
lds
mov
lsl
add
or
push
add
push
xchg
out
add
fldcw
push
fisttps
lret
lea
lahf
out
cmp
adc
mov
lret
and
or
push
addl
dec
movsl
pop
iret
xchg
cmp
mov
xchg
push
sahf
push
daa
test
daa
int3
sahf
mov
ljmp
add
mov
adc
add
mov
scas
sahf
sbb
outsl
pushf
mov
fnstsw
adc
push
lea
or
sub
mov
imul
lods
leave
in
in
sub
and
mov
fimuls
scas
ljmp
mov
pop
scas
inc
test
xchg
xorl
add
xorl
push
scas
xor
into
stos
pushf
pop
loopne
or
mov
popl
cmp
mov
xchg
cwtl
std
ss
ss
out
movl
push
daa
adc
dec
xor
and
addr16
in
es
dec
orb
pop
mov
inc
push
jne
mov
aas
mov
scas
dec
dec
adc
add
mov
jb,pn
or
add
add
or
imul
xchg
lret
orl
xchg
bound
mov
lods
xchg
sub
add
clc
and
sahf
cmp
dec
mov
test
iret
int
mov
inc
ret
sub
and
ficoms
cmp
mov
inc
insb
loope
test
dec
jne
ss
fdivrs
lds
addl
ja
dec
bound
lret
adc
lret
in
aas
dec
cli
lret
xor
popa
les
add
test
bound
cmp
inc
packuswb
mov
or
cli
sbb
ljmpw
sbb
out
mov
push
adc
push
jb
and
or
inc
shr
and
or
add
push
adc
jmp
stc
or
sbb
sub
xor
rorb
lods
push
mov
roll
loop
and
test
test
or
inc
or
pop
test
and
adc
dec
sub
mov
or
int
or
call
test
rol
out
insl
cmpsb
or
mov
es
jne
sbb
out
adc
bound
inc
rolb
adcb
xchg
pusha
popa
xor
add
cmpsl
call
lretw
popa
jl
push
add
inc
or
in
icebp
push
or
call
inc
pop
sti
jno
mov
call
dec
mov
adc
subb
adc
insl
in
test
addl
ficoml
insl
jle
orl
or
pop
add
mov
adcb
adc
mov
dec
or
or
addr16
daa
outsl
adc
leave
xchg
sbb
mov
push
mov
out
sbb
inc
and
xor
and
fadds
add
jo
adc
pop
xor
arpl
cltd
add
out
xchg
add
rclb
arpl
mov
fwait
inc
jno
inc
adc
cmpsb
roll
fwait
adc
push
popf
and
in
lods
xchg
adc
lds
ret
loop
xorl
aaa
push
push
push
xchg
andl
adc
jg
add
fsts
adc
popa
mov
adc
adc
sbb
add
adc
arpl
addl
daa
jae
add
stos
scas
addl
fwait
and
clc
popa
shrd
rcrb
imul
nop
cmovp
cmpsb
jno
and
xor
or
xlat
pop
lds
rorl
sbb
cmp
sub
les
test
and
or
iret
xor
pop
jecxz
adc
gs
adc
pcmpeqd
cs
and
arpl
push
push
xor
sbb
xor
orl
cmp
test
in
addl
sbb
sbb
jmp
jmp
test
lds
adc
or
mov
insl
inc
push
andb
imul
aam
adc
mov
rcrl
push
add
mov
add
pop
push
mov
subb
cmp
or
popa
xchg
push
andl
add
dec
pop
sbbb
test
jmp
scas
or
pop
inc
out
sahf
or
sbb
inc
mov
arpl
dec
adc
imul
push
inc
negb
mov
call
xor
or
and
scas
or
fwait
lds
adc
jne
rorb
add
lahf
pop
mov
clts
adc
add
inc
arpl
pop
add
enter
jmp
subl
arpl
fildl
or
inc
jno
fcoml
lds
test
iret
mov
jne
and
push
push
xchg
gs
xor
or
rep
ljmp
dec
and
test
adc
jmp
mov
rol
cmp
add
movsb
xchg
add
cmp
inc
lret
inc
add
movb
into
jge
and
cwtl
mov
mov
and
sbb
outsl
dec
cwtl
outsl
adc
aaa
push
inc
add
xor
pop
scas
mov
out
and
pusha
out
test
addl
push
dec
aaa
in
add
cwtl
jmp
lock
bound
xchg
inc
pop
mov
mov
mov
xchg
lods
dec
mov
sbb
loope
test
push
repz
sub
andl
add
ret
stos
jb
fsubrs
mov
jo
inc
fwait
push
inc
xchg
pop
add
push
pusha
leave
push
add
mov
mov
push
sbb
adcb
or
dec
and
pop
xchg
lods
cltd
test
popa
xchg
dec
subb
pop
add
adc
bound
mov
inc
sbb
fidivrs
sbb
sbbb
sti
adc
sbb
cmpsl
jo
clc
adc
or
pop
xor
popa
pushf
mov
fisubrs
adc
nop
add
mov
popa
cltd
xor
adc
scas
call
imull
push
bound
imul
jae
fidivs
xchg
xchg
scas
int
adc
data16
sbb
sbb
fstl
sbb
pop
xor
loope
scas
push
dec
add
adc
mov
das
sub
test
mov
cs
jp
sub
ror
ljmp
mov
mov
outsl
rclb
das
adc
pop
repnz
and
stc
loope
or
push
aas
add
cmp
jge
jle
add
and
arpl
js
sbbl
fidivrl
cmc
imul
daa
das
add
pmullw
in
adc
das
xlat
loope
loopne
aam
in
mov
pop
pusha
in
adcl
and
pop
sti
and
adc
std
test
imul
insl
les
out
lods
sub
mov
or
sbb
mov
inc
add
sub
mov
shlb
ljmp
add
inc
mov
popa
sub
sbb
adc
mov
rcrl
add
xchg
sbb
call
pop
rolb
sub
scas
sub
xchg
mov
repnz
sub
or
or
out
popa
xor
cmpsl
sbbb
adc
mov
inc
xchg
mov
aaa
xor
mov
sarl
sbb
add
pusha
mov
adc
icebp
sbb
mov
inc
inc
xor
in
adc
lahf
mov
jge
and
push
or
adc
test
scas
daa
arpl
push
sub
popa
arpl
popf
jns
les
mov
arpl
dec
push
jp
lgs
or
add
jnp
enter
push
or
push
sti
mov
mov
mov
clc
jg
mov
loope
push
addl
pop
adc
sub
outsb
pop
les
cmpsl
add
loope
mov
sbb
repnz
test
dec
inc
mov
cmp
test
push
into
pop
imul
and
cmpsb
cwtl
sarb
sub
pop
pop
adc
cmpl
xor
fdivs
bound
inc
jb
mov
in
lock
cmpsl
cmpsb
add
ja
add
adc
and
popa
add
xor
mov
jno
test
mov
stos
jb
add
pop
rcl
mov
add
arpl
popa
inc
shlb
pop
mov
cmp
and
or
popa
sub
shlb
sahf
or
lret
test
mov
push
mov
cmp
mov
test
and
jge
push
jns
xlat
scas
cwtl
test
fbld
mov
or
push
fldl
mov
or
pusha
dec
das
andb
or
lahf
ret
jnp
pop
dec
orl
mov
add
push
pop
sbb
daa
popa
lods
dec
subb
rorl
gs
mov
dec
add
into
shr
and
test
jno
sbb
jp
xlat
adcl
and
push
jns
loope
mov
fwait
aas
mov
dec
and
xchg
sbb
jle
cmp
fstpl
add
dec
loope
jo
add
xchg
in
ss
mov
cmp
mov
pop
add
into
neg
aas
and
addb
cmpl
pop
push
sbb
sbb
jmp
or
cmpsb
inc
movsl
fs
ret
out
cmpl
and
add
push
sbb
jns
pop
mov
pop
andl
out
push
pop
xchg
bound
scas
sbb
mov
cld
loope
inc
sub
inc
sub
loop
inc
leave
add
and
imul
cld
jbe
ljmp
das
scas
test
in
repnz
cmp
fisttpll
add
mov
in
xor
loopne
cwtl
mov
and
call
js
and
xor
xchg
out
loop
and
loopne
and
inc
ds
push
ret
adc
popa
add
sbb
mov
aad
mov
loopne
and
and
ret
sub
pop
and
cmp
pop
mulb
push
xchg
adc
bound
cwtl
dec
push
jb
arpl
addl
ljmp
ficoml
movb
sub
inc
lds
idivl
lret
imul
and
test
or
popa
xor
inc
jecxz
cld
das
gs
jge
movsl
mov
in
out
shld
and
clc
dec
ljmp
jmp
or
dec
fs
adc
jnp
mov
adc
movsb
and
push
dec
mov
inc
and
mov
pushf
gs
testl
inc
loop
mov
pop
adcl
mov
enter
loope
cmp
pop
xor
ret
mov
sbb
or
repnz
xlat
imul
mov
mov
stc
andl
cmp
pop
xchg
and
add
mov
loope
dec
xchg
in
jmp
push
sbb
add
cli
notl
xor
push
xor
pop
mov
bound
add
ret
inc
pop
adcb
repz
mov
sbb
jg
cmp
arpl
and
pop
test
mov
lcall
xchg
divb
push
and
and
xchg
xchg
jp
and
dec
data16
mov
jg
xchg
push
sbb
mov
pushf
mov
push
rorl
adc
mov
daa
mov
xorb
movsl
inc
jo
sbb
sahf
sbb
mov
movsl
mov
adc
and
xchg
orb
addb
ljmp
push
mov
xchg
mov
and
loop
adc
mov
andb
sbb
xchg
fsubrs
bound
addr16
inc
add
loopne
mov
and
sub
pop
xchg
dec
cmpl
movsb
enter
push
and
and
inc
bound
sti
fwait
xlat
idiv
ss
mov
ror
inc
xchg
int3
push
stos
inc
popa
pop
mov
inc
and
mov
xor
mov
add
daa
adc
cmp
pop
mov
jg
lea
rolb
cmp
inc
sar
mov
bound
inc
push
xor
add
data16
sar
and
and
lock
cmc
ret
call
out
jnp
mov
mov
sbb
push
mov
loope
xchg
push
or
mov
loopne
pop
scas
cmpsl
or
mov
mov
mov
xlat
fwait
lret
clc
divb
movsb
setno
dec
jecxz
xlat
sub
in
testb
push
xchg
add
adcl
popa
pop
cmp
int
sub
inc
or
mov
sbb
lret
and
sbb
cmpsl
pushf
push
add
dec
xchg
xor
mov
mov
xchg
inc
ss
mov
out
mov
pop
inc
inc
pushf
lahf
mov
int3
aam
mov
lea
adc
testb
dec
imul
imul
test
pop
xchg
cmp
xchg
mull
popa
xorl
fidivl
xor
inc
int3
es
pop
inc
pusha
cmp
orl
and
mov
jno
push
sub
les
leave
pushf
inc
stc
lods
mov
sbb
cmpsl
push
out
jmp
inc
mov
push
dec
daa
push
or
rcll
inc
xchg
mov
inc
imul
push
test
repnz
movsl
nop
add
into
negb
inc
ret
pop
movsb
push
dec
aas
inc
ret
bswap
scas
inc
mov
adc
xchg
and
aad
js
jnp
adc
and
add
mov
aas
mov
and
sbb
add
mov
dec
mov
lds
add
loope
dec
add
jge
addb
shll
lcall
and
sbb
jg
out
or
jecxz
inc
std
je
rolb
andl
mov
pop
pop
cmp
sub
sub
lock
pop
cmpsb
inc
call
sub
enter
pop
push
shl
and
imul
xlat
test
mov
in
and
inc
and
add
sub
inc
xor
xor
cmp
test
dec
push
pop
push
ret
clc
add
movsl
add
inc
xchg
add
mov
or
mov
or
dec
insl
and
cs
pmullw
xor
xchg
mov
shl
adc
push
push
jae
add
push
push
jne
xchg
mov
cmc
push
ss
push
add
mov
negl
cmp
pop
jns
mov
add
jnp
mov
cmp
cmp
fldl
std
push
ds
aas
pop
jg
inc
mov
pusha
push
sbb
cli
push
xchg
pop
in
inc
and
ret
loope
mov
out
xor
sti
add
inc
sub
loope
das
arpl
inc
add
orl
sti
and
addr16
pop
mov
test
jl
pop
jecxz
mov
cmp
sub
push
sub
mov
call
fldcw
enter
cld
mov
pop
add
adc
fildl
mov
test
repz
sbb
or
fcomps
loopne
adc
pop
xchg
out
outsl
pop
add
adc
jmp
and
xor
mov
cwtl
push
iret
out
nop
sub
adc
cmpsl
out
ja
dec
scas
test
outsl
push
add
xor
sgdtl
loopne,pt
adc
scas
cmpsl
fs
xor
ret
sbb
faddl
test
aam
movsl
xchg
in
or
lds
add
push
mov
rorb
mov
or
and
jo
enter
add
mov
and
insl
pop
jle
add
cmp
fildl
in
push
jns
scas
push
sub
add
repz
int
push
cmp
push
xchg
cmp
jns
mov
in
and
cmpsb
loope
mov
dec
mov
adc
sbb
sub
add
les
push
jno
xchg
mov
sbb
add
mov
push
fstpt
or
lods
pop
sbb
pop
jp
jnp
sbb
jl
sbb
les
pop
call
shll
sub
mov
mov
mov
push
les
dec
popf
lds
leave
push
xchg
add
sub
aas
les
xchg
mov
flds
mov
mov
and
pop
sub
or
outsb
add
pop
enter
pop
add
push
sub
cwtl
scas
jne
add
jbe
pop
mov
adc
add
repz
mov
mov
jne
cmpsl
dec
push
sbb
add
xchg
roll
gs
cmpsl
out
popa
add
mov
loope
add
movsl
mul
mov
mov
sub
inc
std
push
incb
mov
push
lea
xor
mov
sbb
fsin
xorl
mov
lock
mov
mov
adc
cmp
sbb
addb
xor
aam
pop
add
add
cwtl
add
jmp
xor
add
in
lcall
fstps
dec
mov
jge
mov
loop
adc
je
ret
in
aas
jne
add
sub
add
push
add
or
or
inc
sar
call
sbb
dec
mov
lock
mov
cmpsb
scas
sahf
pushf
dec
sbb
shll
xchg
jp
cwtl
cmp
xchg
adc
lods
xchg
pop
popa
jo
ja
xor
sbb
fwait
dec
hlt
imul
jge
and
testl
xlat
out
xchg
insb
add
sbb
add
mov
push
shrl
or
jmp
and
cltd
scas
loope
lret
sbb
mov
sub
mov
inc
pushf
cmp
test
add
push
mov
jecxz
popa
mov
lea
imul
incb
xchg
cwtl
sbb
add
in
add
or
dec
push
rcl
lcall
daa
mov
pop
add
in
sahf
inc
pop
icebp
mov
cli
and
bound
ret
add
mov
xchg
popa
xchg
fs
lods
lds
push
mov
arpl
movsb
repnz
and
sbbl
cmp
lods
adc
add
and
adc
push
cmpsb
push
add
mov
lret
cmp
pushf
cmp
sbb
test
mov
or
ret
dec
inc
or
lock
or
pop
enter
adc
add
jg
adc
pop
jecxz
add
test
test
mov
mov
push
es
add
xchg
mov
mov
jae
jnp
out
aas
leave
pushf
cmp
repz
add
fs
and
mov
jmp
jo
push
add
fdivr
push
loop
mov
ja
sbb
insb
lods
xor
add
outsb
sti
popa
mov
adc
movsb
jle
fistpll
mov
mov
scas
hlt
popa
mov
lahf
mov
cltd
test
push
stc
test
and
push
or
inc
add
aad
pop
out
pop
jns
ljmp
nop
popa
push
and
mov
cmc
icebp
mov
push
add
pop
push
test
inc
add
pushf
mov
and
negl
add
jae
add
outsb
pop
add
negl
sub
bnd
push
sbb
xchg
push
inc
sbb
push
cmp
ja
mov
push
shlb
cltd
inc
repnz
or
loope
test
inc
adc
jo
add
xor
xchg
jmp
add
inc
mov
lcall
sti
adc
push
xchg
mov
js
dec
test
xchg
dec
jmp
push
leave
xchg
mov
pop
mov
fisubrs
add
in
push
shl
ljmp
mov
call
data16
add
cmp
mov
push
in
imull
pop
fildl
cmp
cmp
or
fldl
mov
cmp
ror
jle
dec
dec
sub
call
je
fildl
dec
imul
insb
cmp
outsl
add
sub
fwait
mov
insl
movsl
out
cmp
jge
mov
pop
pop
cld
push
add
mov
push
nop
movsb
sub
test
fisubl
outsl
aam
imul
and
loop
mov
rclb
pop
dec
mov
pop
mov
call
aas
lds
or
xchg
pushf
sbb
mov
xchg
lds
lods
add
lahf
push
jne
push
int
add
mov
data16
ror
add
sub
xchg
pop
fwait
sbb
call
adc
lock
mov
sbb
mov
int3
cmpsb
stos
out
jecxz
jg
cmp
enter
das
add
pop
ljmp
mov
pop
mov
push
ds
push
pop
add
dec
dec
cmpsb
inc
cmpsl
add
jmp
dec
leave
mov
adc
xchg
adc
stos
lcall
fwait
loop
jle
or
fiaddl
inc
cmp
in
cmc
cmp
push
add
mov
hlt
push
ljmp
lock
xor
imul
ss
loop
movsl
mov
push
xchg
add
in
dec
mov
mov
pushf
inc
pop
aaa
dec
cmp
sbb
cld
fs
push
addr16
loop
leave
lods
ds
scas
push
inc
sbb
popa
sub
push
push
push
mov
orl
andl
out
sub
pop
out
dec
lea
repz
lret
adc
inc
loop
out
and
dec
imul
mov
and
and
pop
mov
addl
loope
arpl
fbld
or
in
fcompl
sbb
dec
popa
mov
inc
sbbl
lods
das
lds
xor
jae
add
mov
and
dec
inc
inc
flds
test
or
and
jnp
rol
sbb
stos
in
lret
movsl
mov
roll
pusha
add
add
xor
add
imul
rclb
dec
nop
loope
clc
dec
dec
lret
imul
loopne
ficomps
jmp
lahf
movsl
add
push
ljmp
lret
mov
shlb
jne
or
add
addl
jns,pn
roll
bound
popa
sbb
sub
andb
push
add
add
andl
rorl
adc
cltd
inc
dec
or
cld
xor
sub
mov
and
push
jmp
push
loop
clc
dec
add
sbb
imul
and
inc
gs
sbb
or
cld
xor
or
and
and
xadd
sbb
int3
push
pop
lret
pop
dec
and
sbb
movsl
add
jns
arpl
add
mov
andl
ljmp
in
mov
push
ret
repnz
andl
jecxz
push
mov
sub
sub
dec
sub
or
and
dec
and
subl
bound
or
add
xchg
cmp
out
test
push
add
cltd
movsb
lds
les
les
or
and
and
sub
rcrb
or
loope
add
jp
aaa
jne
js
dec
loope
inc
bound
inc
int
mov
push
and
roll
aad
jl
ret
sbb
jnp
shrl
fprem
mov
ss
mov
jg
fdivs
addb
pop
jns
add
push
cmp
adcb
and
pop
push
fwait
popa
imul
in
dec
cmp
add
mov
xchg
jg
xchg
mov
adcb
cmpl
pop
adcb
xor
popf
out
roll
or
aam
sub
mov
out
fwait
pop
mov
imul
pusha
dec
xor
or
mov
sarl
aas
add
adc
xchg
cmp
test
loopne
and
inc
gs
xchg
cmc
mov
xor
inc
and
sbb
mov
test
mov
pop
and
loop
pop
pop
inc
loop
adc
lea
mov
and
icebp
add
inc
imul
cmp
mov
xor
movsl
es
cmpsb
add
lea
xchg
xor
leave
inc
adc
pusha
pop
lret
out
xor
or
cld
ljmp
jb
pushf
mov
roll
lea
jns
mov
sub
out
and
popa
inc
add
outsb
push
sti
repnz
or
and
and
popf
inc
scas
arpl
xlat
leave
push
repnz
shrl
gs
xor
imul
mov
mov
cltd
incb
outsb
leave
add
gs
cwtl
call
mov
push
mov
out
mov
imul
pop
jmp
shlb
jge
outsb
sbb
jo
test
mov
lret
loope
fdivs
add
or
sub
jp
and
push
or
and
stos
cld
mov
add
lock
out
cltd
aad
lea
jecxz
addb
mov
frstor
xor
test
push
es
out
add
jg
and
mov
jmp
lods
pop
xor
cli
push
test
rcl
mov
mov
cmpsl
sbb
out
adc
outsl
mov
sbb
xorl
ja
cltd
andb
fistps
and
xor
pop
in
push
dec
adc
pusha
mov
xor
clc
adc
xor
mov
jle
or
cld
add
sub
push
mov
mov
dec
hlt
mov
ljmp
ret
outsb
add
jecxz
jnp,pt
mov
test
pop
pop
mov
xchg
sub
add
subl
lcall
test
jl
push
jns
sbb
mov
stos
shll
pop
je
dec
fildll
mov
jl
test
enter
cwtl
imul
clc
pop
inc
icebp
testl
nop
push
aas
mov
shll
sub
mov
ja
cwtl
outsb
sbb
push
insb
push
mov
lods
add
cmc
andb
jmp
sub
pop
jle
sbb
rolb
clc
add
add
xor
jae
push
ret
pop
mov
jp
nop
ja
test
sub
call
ss
negl
jne
clc
pushf
adc
test
pop
and
sbb
mov
inc
cmp
ja
sub
jecxz
add
lods
push
lret
test
js
jo
popa
push
add
aas
push
and
xchg
xchg
inc
adc
inc
and
xchg
cmc
das
and
aaa
and
and
inc
out
adc
loope
sub
loope
xchg
mov
xor
daa
stos
add
mov
fisttpl
mov
test
mov
insb
gs
push
jl
mov
mov
repnz
and
jecxz
inc
je
and
rcrb
aas
xor
add
inc
jb
das
mov
mov
cmp
notb
mov
addl
add
xchg
add
leave
mov
push
xorl
and
add
cmpsb
loop
xorb
cmp
shll
xchg
gs
lds
dec
ljmp
add
shll
sbb
popa
das
daa
pop
inc
dec
test
in
and
pop
and
or
adc
fiaddl
in
in
lea
sbb
pop
and
jl
inc
bound
sti
mov
icebp
pop
out
in
inc
dec
in
adc
out
icebp
popf
popa
ret
dec
pop
sbb
inc
loop
lods
fisttpl
out
and
adc
decl
and
inc
loope
pop
in
testb
and
in
mov
jns
jle
adc
ret
cmpsb
lods
das
xor
lds
xchg
pop
aaa
jne
sbb
cli
popa
xchg
pop
test
or
sbb
push
xlat
sbb
movsl
and
rorl
gs
rorb
xor
rorl
bound
add
in
jge
and
mov
and
int3
mov
and
mov
cli
cld
and
sbb
mov
xor
inc
int3
pop
ja
movsl
mov
jns
or
outsb
cmc
fistps
adc
cmpsl
mov
mov
enter
cmpsl
adcl
stc
xor
in
or
and
dec
cwtl
pop
cld
push
or
adc
xchg
sbb
cmp
andl
fwait
test
cmp
in
mov
mov
mov
incl
sti
mov
shl
and
movsl
adc
sbb
or
mov
ret
es
and
int
mov
adc
adc
shl
shll
and
testb
sarb
in
mov
mov
mov
bound
sbb
loop
out
and
push
gs
addl
loopne
mov
test
push
pop
setg
out
mov
subb
repz
iret
mov
aam
dec
hlt
adc
icebp
dec
dec
in
xor
jne
in
and
ret
inc
addl
jle
xor
inc
dec
int3
sbb
mov
adc
push
xchg
xchg
outsl
imull
movsl
mov
add
inc
sbb
divl
mov
pop
ror
into
push
push
js
and
jae
ja
inc
dec
rcr
and
dec
fidivl
or
and
xor
jbe
fimull
jns
sbb
sub
xor
pusha
and
iret
and
xchg
fucomp
pop
data16
loope
mov
ds
int
mov
jb
xchg
test
xchg
imul
sbbl
cwtl
rolb
aas
and
ficoml
fsubl
stc
pop
sbb
sbbb
push
sbb
pop
mov
add
aad
fbstp
dec
adc
and
fcompl
dec
das
inc
mov
mov
and
xchg
cmpsb
push
clc
lods
adc
add
arpl
fcompl
mov
daa
movsb
leave
movsl
aas
push
addr16
add
adc
add
aaa
sbb
add
pop
add
push
pop
movsl
xor
mov
pop
add
scas
or
lds
or
inc
mov
ret
sub
subl
test
cli
aaa
jne
jnp
outsb
mov
push
adcl
gs
pop
mov
push
nop
mov
xchg
push
push
xchg
xchg
or
sahf
add
aad
movsl
or
and
dec
bound
and
in
lret
pop
cmp
lar
jmp
test
dec
inc
leave
in
push
lret
jp
shlb
subb
jge
cltd
inc
dec
push
cmpxchg
cli
add
add
sub
lfs
lahf
xor
loope
jb
xchg
adc
addb
es
stc
loop
leave
inc
js
pop
shll
pop
or
aas
ja
xchg
inc
or
in
mov
daa
sbb
enter
stc
leave
xor
fs
enter
arpl
mov
shlb
cli
xchg
inc
inc
enter
cltd
fmull
sub
call
testl
fimull
xlat
pmuludq
lea
arpl
jae
ret
rcll
inc
push
sub
xor
test
out
cmp
and
cmpsl
inc
xchg
pusha
adc
popf
xchg
ret
ljmp
imul
lcall
jl
imul
mov
mov
in
sti
xor
in
jg
imul
jl
adc
cmp
mov
ret
xchg
mov
rorl
cmp
loopne
fwait
cmp
sub
out
mov
and
int3
dec
inc
scas
lret
push
dec
mov
xorl
xor
popa
scas
mov
xchg
dec
and
add
push
sbb
mov
sub
aam
jecxz
sub
nop
xchg
add
rorl
mov
dec
jecxz
inc
mov
add
cmp
lcall
pop
jmp
lret
ja
jb
inc
mov
loop,pt
mov
fldenv
and
xchg
inc
test
dec
jp
data16
add
xchg
and
out
cltd
push
xor
cli
jmp
cmp
lods
push
ret
rcrl
sbb
inc
xor
xchg
arpl
inc
xlat
daa
roll
add
sub
xchg
daa
sub
mov
mov
pusha
iret
bnd
xchg
pusha
adc
cmp
sti
inc
loop
subl
mov
sti
lret
add
sti
sub
loop
movsl
cltd
ret
cmpl
popf
in
sqrtps
sti
sti
mov
mov
daa
dec
bound
inc
jg
inc
and
sub
out
push
and
ror
pop
lret
mov
out
dec
mov
addl
xor
lret
or
mov
imul
sub
mov
lock
sbb
push
inc
dec
add
jmp
addl
fstpt
push
test
test
mov
push
lods
or
pop
add
bound
xchg
pop
push
ljmp
movsl
es
sar
inc
jnp
mov
inc
pushf
cmpsl
inc
icebp
fmuls
or
pushf
or
insb
cmc
add
inc
imul
xor
dec
ds
jle
or
in
mov
popf
dec
es
mov
cli
lea
xor
inc
pop
and
es
sbb
popl
mov
and
cmp
js
mov
lcall
cli
mov
pop
mov
pop
stos
jne
xchg
fisubs
push
add
aaa
cli
loop
and
std
loop
jmp
inc
lods
in
mov
add
cmp
adc
std
adc
mov
fwait
adc
loop
je
out
cwtl
dec
xchg
xchg
movsb
in
iret
test
jno
out
add
les
sti
ficoml
addb
pop
int
jbe
dec
into
add
sti
push
mov
xchg
pop
xchg
xor
inc
pop
adc
sub
inc
jb
dec
adc
shlb
pop
cs
pushf
pop
xor
mov
dec
js
and
mov
in
sub
outsl
add
ljmp
xor
xchg
in
or
aas
enter
pop
mov
dec
je
negl
xchg
cmpsl
jl
js
cwtl
popa
jb
jecxz
sbb
lea
shll
mov
call
testb
or
int
subb
pop
movsl
lods
xchg
lret
jbe
jle
adc
fcmovne
mov
add
test
pop
add
mov
xchg
adc
shrl
loop
das
xlat
aad
adc
cmpsl
add
mov
loope
mov
cmp
xlat
xor
mov
ss
cmp
sbb
movl
or
fidivl
or
imul
inc
adc
pop
shl
mov
mov
aam
push
or
adc
ja
fsubrl
cwtl
dec
pop
add
or
idiv
lcall
hlt
add
lock
add
js
jb
cmp
es
je
mov
ret
cmp
popf
xor
and
shlb
lock
jno
insl
cmp
enter
xchg
inc
ds
fsubl
mov
add
aas
add
cmp
inc
sub
pop
inc
mov
call
cmp
jecxz
scas
mov
pop
data16
leave
cli
call
adc
in
mov
fisttpl
add
jno
push
cmp
test
adc
add
cwtl
arpl
loop
adc
adc
pop
pop
fcompl
push
filds
add
jp
fiadds
xchg
lods
jg
lcall
push
xor
pop
movsl
add
pushf
loopne
nop
push
in
dec
cmpsl
add
or
cs
fnsave
outsl
aad
lods
les
and
or
jg
lcall
sub
icebp
adc
add
and
jmp
jg
or
pop
add
shlb
push
and
notb
jmp
insb
adc
mov
push
fiaddl
add
mov
outsb
jge
lods
lret
inc
mov
mov
shrd
out
push
std
jns
out
inc
push
pusha
jne
enter
add
xor
jo
nop
push
add
sahf
pushl
mov
jo
push
das
pusha
pop
add
scas
mov
cmpl
rolb
orb
jns
roll
js
fdivs
and
out
cmpsb
mov
cli
cld
push
jecxz
mov
insl
int
add
xchg
pop
fsubs
adc
imul
sub
cmp
jmp
into
lahf
test
xchg
jle
leave
and
inc
xchg
test
adc
fnstenv
sbb
loope
sbb
out
or
mov
mov
sub
lock
cwtl
add
negb
and
mov
jnp
js
push
cs
into
insl
shrl
dec
dec
mov
dec
dec
dec
pop
inc
adc
loop
mov
inc
pop
cltd
pop
push
fidivrs
dec
sbb
ret
add
dec
mov
add
loop
popa
xor
fisubrs
popa
push
mov
xchg
movsl
pop
lods
test
add
push
movsl
lods
test
decl
clc
pop
add
cmpl
js
ljmp
dec
dec
imull
leave
sbb
add
inc
popf
subl
or
test
decl
movsl
sahf
inc
out
add
inc
cs
push
pop
aaa
mov
test
ret
adc
dec
and
add
xchg
mov
int3
mov
or
cwtl
loope
xchg
ss
mov
int3
fistps
sar
xor
aas
or
push
mov
and
rcr
pusha
adc
cwtl
pop
jns
jnp
inc
sbb
fwait
push
clc
lods
in
rorb
adc
and
dec
add
sub
and
xchg
popa
rolb
daa
out
xorl
adc
les
xchg
scas
sbb
pop
dec
jmp
xchg
xchg
popa
and
fsubrp
xchg
dec
or
ret
xchg
lahf
add
pop
jp
fcoml
cmp
repz
and
fistps
notb
psllq
mov
enter
and
or
shl
iret
std
dec
clc
mov
mov
int3
cltd
and
pushf
add
imul
adc
loopne
dec
push
je
pop
pop
loope
andl
sbb
int3
std
inc
push
pop
icebp
dec
mov
dec
sbb
sbb
jl
dec
sbb
mov
in
shrl
out
dec
pushf
sub
cmpl
rcll
psllw
fisttpl
add
mov
or
loopne
ret
rorb
lds
ret
scas
ss
sub
cmpsl
int3
mov
test
sub
jmp
popf
pop
push
fiaddl
sub
push
and
sub
inc
mov
mul
repnz
into
and
loopne
into
add
roll
and
add
pop
inc
jecxz
mov
pop
dec
dec
sbb
inc
adc
bound
jl
out
pop
or
add
sub
sub
in
push
xchg
push
rcr
add
dec
sub
or
inc
sbb
imul
neg
jle
orb
je
lds
test
mov
push
cmp
mov
iret
add
xchg
mov
ss
subb
fisttpll
lcall
add
lock
add
mov
jmp
cmp
mov
ss
or
sbb
adc
add
lock
ret
adc
jmp
rorl
inc
nop
popf
leave
add
pop
xchg
push
mov
data16
sub
adc
out
xchg
cltd
lods
mov
push
loope
xchg
fstpl
add
lods
ss
les
mov
mov
inc
jns
push
sbb
sub
mov
sub
fstl
jo
shll
cmp
pop
adc
lcall
imul
mov
gs
xor
cmc
add
mov
insb
dec
add
mov
dec
pop
idiv
call
mov
or
lret
fs
jl
popf
push
add
fneni(8087
lea
xor
es
dec
mov
out
add
rol
and
add
push
out
and
dec
js
pop
popa
mov
xchg
inc
cmp
test
lods
xchg
push
movsl
xor
test
fiadds
mov
pop
mov
mov
jne
pop
adc
and
push
ficompl
push
xor
jo
jb
data16
or
rorl
test
add
lea
ja
movsb
neg
out
add
cltd
mov
aam
inc
sub
mov
ja
icebp
leave
jo
cmp
popa
mov
mov
mov
add
adc
in
cmp
mov
mov
and
les
mov
or
stos
push
scas
inc
iret
fisubrs
test
sbb
lds
add
add
and
pushf
stos
fbld
jmp
rol
loopne
mov
sbb
push
pushf
addr16
out
jb
xor
into
add
hlt
sub
add
xor
nop
sbb
dec
push
mov
add
repnz
and
nop
test
cmp
test
jnp
sbb
fst
pop
in
cs
xor
lret
mov
incb
iret
pushf
test
or
hlt
out
cltd
call
xor
iret
inc
loope
dec
rcll
dec
xchg
jae
aad
add
pop
lods
mov
decb
outsb
add
and
aaa
or
jbe
sbb
jle
and
push
jae
add
xchg
lea
fmull
ficomps
sbb
imul
sbb
dec
popl
mov
mov
mov
mov
ss
pop
mov
cld
xor
push
add
mov
add
push
xchg
repnz
ja
sbb
rcll
test
addl
push
push
inc
or
xor
jecxz
adc
xlat
test
xor
add
jge
adc
gs
adc
jg
push
or
aas
jmp
les
in
jmp
shll
test
iret
sub
loopne
std
insl
call
in
pop
adc
push
test
adc
jl
sub
sub
sub
int
fisubl
nop
sub
adc
ret
cs
xor
or
ret
mov
loop
mov
sarb
push
movsb
fs
and
js
outsl
cmp
jle,pn
fcomip
loope
mov
repnz
xor
loope
sbb
adc
mov
mov
or
cmp
ret
imul
mov
daa
add
scas
fstl
ljmp
dec
outsb
pop
and
lods
xchg
out
shll
dec
xchg
adc
in
mulb
loop
jo
orps
in
push
sbb
add
pop
fcmovne
mov
es
xor
call
sub
inc
xchg
incl
int
or
push
loopne
pop
call
xor
mov
mov
out
scas
rolb
add
inc
mov
loope
cs
jmp
jbe
and
cltd
repz
rdmsr
sub
pop
aas
adc
mov
popa
dec
add
jbe
cmp
jp
push
pop
jae
loop
test
addb
inc
sbb
add
inc
push
and
shr
loope
and
outsl
clc
or
mov
imul
jle
xchg
inc
into
mov
pop
add
push
cmpsb
leave
mov
adc
dec
lret
pop
scas
add
cmp
flds
pop
adc
lock
adc
imul
filds
and
push
scas
add
loopne
jge
js
add
in
push
mov
scas
arpl
add
clc
mov
cmc
idivb
popa
in
das
cmp
cli
xchg
pop
xchg
in
cld
lock
mov
out
mov
les
repz
insb
jp
or
pop
adc
loopne
test
iret
jge
pop
push
inc
out
jns
and
in
inc
xchg
mov
push
pop
sbb
jg
mov
popa
xor
mov
repnz
loop
pushf
lods
jge,pt
add
roll
mov
rolb
xchg
and
xchg
push
testl
repz
insb
push
pop
jecxz
inc
xchg
cld
loop
cmpl
pop
sub
rclb
ss
js
mov
add
cmp
mov
rorb
popa
mov
cmp
add
in
add
mulb
jnp
ljmp
fnstenv
aad
fsubrs
repz
stc
xor
arpl
mov
mov
xlat
cmp
xchg
cli
jno
inc
arpl
repz
add
icebp
adc
loope
fisubrs
testb
jns
rcll
int
pop
and
or
sub
es
add
pop
mov
xor
mov
dec
xor
jae
aam
pop
sahf
sbb
and
popa
out
in
jmp
xchg
and
les
out
in
jmp
cmpsl
pop
test
mov
dec
adc
insb
int3
or
add
mov
or
pop
sarl
mov
sbb
inc
dec
sbbl
cmpps
pop
in
jmp
jb
in
rcrl
xchg
in
add
mov
add
mov
stc
outsb
test
scas
movsb
push
test
cmpsb
pop
test
shl
inc
and
vcvttps2dq
jbe
scas
cmpsl
mov
and
dec
fcompl
outsb
lea
sbb
lods
cli
add
fldl
imul
jmp
xchg
cld
shl
cmpsb
outsb
pop
jecxz
mov
add
ret
jnp
fdivs
jo
sub
in
jge
ffreep
add
mov
add
shll
fidivs
pop
lods
loop
pop
loope
dec
fisttpl
aas
into
add
call
arpl
out
or
inc
sahf
sub
pop
cwtl
add
and
pop
add
adc
repnz
mov
jg
into
imul
loopne
hlt
add
data16
adc
add
mov
xchg
mov
ja
icebp
stos
aas
add
cmp
bound
in
rorb
lds
dec
add
fwait
mull
stos
mulb
cltd
mov
loopne
inc
mov
push
addr16
pop
aaa
or
mov
test
mov
sbb
xchg
push
cwtl
les
sbb
xor
das
push
loop
aas
loope
mov
add
nop
jnp
push
lret
pusha
rcll
mov
ret
out
or
lods
ds
push
stos
mov
cmpsb
das
mov
add
icebp
jae
xor
cvtdq2ps
ja
test
fucomip
fistl
pop
in
out
add
cmpsb
pop
mov
adc
insb
sbb
cmp
push
fidivrs
jg
jmp
add
lret
add
sub
push
shl
hlt
add
fsubl
js
divb
ret
int3
aam
mov
adc
jge,pt
lret
add
aad
xor
cmpsb
scas
and
fstl
test
cmp
sbb
lds
aas
pop
and
addl
cwtl
pandn
add
jge
icebp
cld
loop
out
sti
cmpsl
mov
pop
testl
mov
mov
scas
adc
pop
leave
xor
add
das
jmp
aad
pop
loop
xchg
loopne
sbbl
jns
pop
dec
nop
out
inc
outsl
jmp
mov
cltd
gs
in
lea
inc
cmp
xor
adc
add
pop
cltd
rcll
jp
hlt
rorl
leave
pop
xor
add
stc
mov
imul
sbb
into
out
xor
add
cmp
ret
push
test
xchg
add
adc
and
mov
loopne
jl
adc
in
add
js
xor
mov
or
fcompl
sbb
rolb
ss
cmp
add
lahf
cld
icebp
les
out
lds
popa
hlt
inc
ljmp
mov
mov
xlat
push
cld
jl
jb
pop
incl
imul
cmp
push
add
mov
mov
and
hlt
movsb
cwtl
mov
mov
fdivrp
popa
xchg
sbb
push
sbb
in
cmpsb
mov
xlat
mov
test
and
lock
cmpsb
movsl
call
js
loope
out
test
adc
add
sub
ret
mov
mov
xor
ret
pop
repz
jns
lock
cmpsl
shll
fwait
icebp
push
negb
add
inc
gs
std
xor
push
sub
in
sbb
out
sbb
loop
xor
sarl
lods
enter
pop
outsl
add
mov
sbb
movsl
dec
add
cmp
sbb
scas
mov
call
and
fsubp
adc
loop
pop
cld
add
repnz
mov
pop
add
std
cmp
orl
cmpsl
push
out
pop
fisubs
push
fcmovbe
popf
cmp
adc
and
movl
push
roll
cmc
nop
pop
iret
icebp
data16
inc
xchg
jmp
mov
add
mov
push
xor
jge
arpl
dec
loop
adc
inc
lea
test
and
dec
jle
fs
push
sub
or
gs
add
jno
aas
outsb
pop
jmp
inc
imul
sti
and
adcb
add
lcall
push
out
lret
xchg
cmpsb
add
or
inc
in
sbb
loope
cmp
loop
pop
adc
fstps
and
repnz
adc
test
ljmp
cmpsb
add
aaa
cmp
movsb
mov
push
or
push
arpl
bound
mov
repz
add
xchg
out
add
mov
mov
add
cwtl
push
pop
lea
push
dec
out
iret
adc
jns
ret
inc
aas
xor
sbb
bound
mov
mov
add
outsb
jb
dec
pop
mov
xlat
add
out
xchg
int3
mov
add
outsl
xchg
and
jbe
jp
sub
fs
add
in
stc
push
cmpsl
test
or
stos
sbb
jp
xor
add
outsl
test
push
cld
insb
sbb
mov
movsb
dec
xor
jns
xor
shl
adc
mov
scas
out
lods
inc
leave
push
sbb
mov
iret
sbb
insb
scas
call
lock
push
inc
loop
push
sbb
popf
sbb
mov
clc
add
rolb
enter
xchg
call
imul
add
stos
fbstp
jne
cmp
xchg
aaa
dec
dec
fimuls
cmp
xorl
movsb
xchg
ss
aaa
and
add
movsl
mov
cmp
and
add
xor
jae
add
rcrl
push
mov
cmpsl
pop
repz
adc
mov
add
cs
out
mov
daa
mov
and
js
jmp
pop
and
orb
dec
mov
lods
ljmp
repnz
add
inc
adc
jle
loopne
fiaddl
bound
pop
cmp
lret
mov
mov
add
movsl
mov
add
or
inc
daa
push
lcall
std
mov
int3
and
lahf
loop
or
ja
cmp
adc
ffreep
xor
jnp
push
pop
or
xchg
inc
add
orb
mov
add
mov
sahf
sti
jbe
adc
jnp
jno
fimuls
cmpsb
and
scas
push
loope
jb
mov
fs
loope
lods
mov
or
xlat
aas
icebp
pop
fiadds
sub
cmp
mov
cmpsb
in
or
jns
dec
jle
jecxz
add
rcr
insb
mov
popl
mov
leave
cs
fnsave
dec
adc
inc
cmpsl
add
and
test
ficomps
push
jle
outsl
arpl
rcrb
jne
pop
pop
add
add
cs
xchg
sti
fists
in
adc
jmp
or
dec
jns
jle
fldenv
das
mov
dec
cwtl
pop
out
adc
adc
bound
inc
push
fbstp
fistps
sahf
xchg
jmp
fwait
mov
call
add
incb
cs
fldt
jne
jecxz
in
inc
xor
jae
nop
add
loope
mov
lock
sub
dec
rclb
add
loop
jnp
lods
in
mov
loop
xor
jns
jp
mov
mov
push
inc
jae
mov
sbb
daa
dec
sbb
mov
stc
ss
mov
js
in
movsl
pop
fiaddl
cmp
outsb
frstor
enter
sbb
mov
sbb
push
and
sahf
add
adc
xlat
test
jg,pn
cmpb
outsb
cmp
popa
mov
xor
fadd
pop
ja
enter
cmp
sbb
add
add
xor
dec
xor
popf
push
adc
addr16
jo
insl
cmpsb
lahf
or
add
jo
add
xor
in
inc
xchg
push
push
popf
cmp
std
orb
lea
mov
ret
jle
icebp
fists
lock
imul
xchg
loop
ds
inc
les
mov
rcrl
in
sarl
repnz
push
xor
das
das
xchg
mov
add
xlat
adc
add
jb,pn
jecxz
jg
add
push
iret
add
cmp
add
ds
cmp
imul
out
aam
sbb
jg
jno
xor
and
clc
arpl
add
xchg
inc
cs
jmp
mov
lods
sbb
test
pop
fucom
mov
add
xchg
and
aam
cmp
popf
add
mov
mov
add
pop
icebp
stos
aas
ret
xor
lock
aad
shlb
xchg
xlat
cli
loope
subb
jp
jecxz
fildll
rclb
or
popf
sbb
or
rol
sarb
or
pop
jnp
jle
and
cmp
in
or
fld
sbb
adc
push
adc
pop
test
add
testl
fcmove
add
aas
ret
push
cmp
pop
movb
test
xchg
repz
push
or
push
mov
test
inc
rorb
sub
jg
pop
sbb
sti
xchg
push
adc
nop
sub
adc
or
cmp
aas
push
pop
mov
push
cmp
lds
cmpsb
fwait
outsb
stc
daa
sbb
and
push
insb
scas
jnp
xchg
cmc
pop
xchg
add
popa
cmp
imul
or
adc
rolb
gs
pusha
add
out
add
cmpsb
imul
insb
fstpt
mov
iret
push
or
outsl
int
mov
and
jl
pushf
and
shrl
inc
add
movsl
cmp
xchg
sub
inc
push
cmp
add
pushf
iret
mov
push
jnp
aam
aam
lock
stos
imul
mul
loope
jb
jno
call
in
dec
sahf
adc
mov
lret
out
insb
jns
cmc
mov
clc
xlat
mov
jg
mov
dec
subl
in
add
push
jbe
mov
adc
dec
or
add
xor
dec
push
pop
jnp
cli
aas
push
jbe
cwtl
fldenv
call
sub
xor
fmuls
lds
sbb
sub
loop
jne
push
ret
inc
shl
fmuls
or
dec
imul
cmpsb
inc
sbb
inc
cmp
rcll
pop
push
inc
cmpsb
loope
adc
loop
mov
add
jge
mov
and
xor
or
loope
popa
inc
arpl
adc
std
addr16
cwtl
insl
xchg
ficoms
adc
pusha
adcl
lea
jbe
pop
loopne
inc
xor
push
arpl
mov
push
and
ret
leave
mov
xchg
popf
adc
inc
sbb
inc
cmp
mov
test
daa
bound
pop
mov
test
fsubs
add
das
lret
jl
or
add
idiv
sar
pop
mov
xorl
enter
xchg
ret
rcr
pusha
jmp
add
push
inc
in
mov
mov
and
sub
dec
js
adc
xor
ja
ret
ret
adc
es
pop
or
insb
and
jmp
es
sub
and
mov
mov
orl
pop
pop
sbb
add
and
popa
adc
sbb
test
and
aaa
jge
loop
ja
cli
in
push
cltd
cmp
popa
or
add
das
sub
aas
dec
inc
push
add
insl
sbb
sbb
aad
mov
arpl
fisubl
xchg
add
sbb
dec
or
mov
jns
or
shll
and
and
sbb
xor
push
inc
clc
cmp
and
push
ja
fmul
sbb
mov
adc
inc
mov
decb
mov
fdivs
adc
mov
das
dec
idivb
jle
outsl
rcrl
and
push
xorl
hlt
jge
pop
pop
out
das
add
out
scas
mov
lods
pop
arpl
mov
sbb
cmc
sub
dec
jmp
sub
in
out
cmp
pop
inc
andl
xchg
or
pop
mov
push
das
adc
nop
mov
adc
popf
and
xchg
gs
nop
push
leave
sub
pop
js
sahf
test
loope
cmp
xchg
cmpsb
bound
ret
fadds
neg
in
xor
or
imul
push
cmpxchg
arpl
mov
adc
and
sti
jge
jg
sbbl
sub
popf
orl
sub
out
and
jne
adc
js
mov
cli
sbb
jmp
lods
xor
jecxz
rcrl
sbb
aaa
adc
stc
sbb
and
mov
ret
pop
out
arpl
fcom
add
sbb
mov
push
mov
cmp
dec
pop
ret
push
lret
outsl
adc
xchg
fdivp
sahf
rolb
orl
jmp
push
pop
insb
xchg
lcall
idivb
xchg
dec
dec
cmpsl
cwtl
in
test
jo
inc
xor
mov
add
or
popa
push
dec
call
fsubs
cwtl
mov
adc
jae
jbe
ja
inc
gs
ljmp
lods
fisubl
jo
addl
or
push
pop
mov
scas
push
adc
lcall
dec
hlt
rol
mov
and
and
out
icebp
xor
add
imul
nop
xchg
adc
mov
adc
and
sar
or
push
mov
cmp
push
test
and
ret
out
mov
sub
fbld
and
xchg
es
addb
imul
cmc
sbb
push
push
loop
loopne
addb
aas
add
and
popa
and
inc
gs
inc
inc
test
or
rolb
jge
pop
rcrb
add
xor
dec
ret
and
test
jb
sbb
mov
pushf
adc
insb
addb
es
and
roll
adcl
cwtl
movsl
mov
mov
mov
stos
push
shll
mov
xchg
xchg
lcall
mov
rcll
dec
and
mov
imul
fsubp
inc
xor
sbb
add
mov
and
mov
adc
orb
out
jle
inc
sar
fwait
adc
pop
cmp
dec
xchg
cltd
enter
cli
shl
aaa
fcomp
shr
loopne
in
sbb
xlat
cmp
xor
xlat
push
push
and
movsb
add
ret
movsl
mov
lahf
sub
and
or
orb
pushl
sbb
jg
cltd
in
daa
sbb
xchg
or
jmp
or
and
mov
mov
pop
js
sbb
fistl
push
mov
or
mov
sbb
xchg
sub
pushf
andl
adc
lret
push
movsb
hlt
mov
inc
xchg
cmp
mov
movsl
adc
pop
xor
and
and
test
in
cmp
ds
pusha
cmp
jns
and
xor
pop
lcall
out
filds
sbb
sbb
jne
pop
pop
sbb
xchg
inc
inc
in
push
ljmp
dec
or
dec
out
ja
pop
xchg
inc
inc
les
and
imul
jne
push
mov
xlat
aam
mov
movsb
pop
lea
loope
gs
xor
or
add
lret
int3
fs
inc
test
fcompl
xchg
pop
push
xchg
and
cmp
push
lds
popf
add
addl
arpl
pop
dec
sbb
out
shr
imul
sbb
arpl
mov
mov
push
add
stc
scas
dec
int3
cmc
dec
scas
js
xchg
push
cwtl
xchg
movsb
mov
xorb
out
ret
movsl
leave
dec
jmp
push
sti
mov
pop
ret
ret
lea
and
jl
pop
xchg
cmpsb
adc
add
jne
jno
inc
std
dec
ficoml
jno
ret
add
dec
cmovb
sub
arpl
adc
adc
jecxz
pop
xchg
adcl
xlat
jmp
arpl
add
and
adc
lret
jo
and
dec
pop
loope
push
cli
fsubs
push
imul
aam
ljmp
stos
negl
add
les
mov
stc
xlat
ficomps
cmp
pushf
mov
jnp
into
test
dec
cwtl
adc
iret
add
add
lds
fisttpl
ja
adc
sbb
xor
enter
jns
jmp
cmp
mov
sub
adc
and
add
clc
xor
cmpsl
fistpll
mulb
sub
mov
push
lods
and
loop
mov
ret
fwait
jbe
add
sub
daa
jb
fildl
pop
pop
fmul
adc
or
adc
loope
fstpt
add
add
mov
popl
jo
push
push
fldenv
sub
sub
adc
and
mov
cmp
pop
scas
les
or
and
clc
jbe
push
sbb
ret
push
fstpl
hlt
add
push
mov
and
adc
sub
loopne
aas
adc
fadd
add
xor
shll
adc
cmpsb
add
jbe
lods
jmp
push
mov
xor
popf
push
sub
adc
test
pop
jecxz
xchg
popl
cmpsb
xor
arpl
sub
rolb
stc
imul
jg
aas
xchg
dec
daa
pop
add
int
cmp
add
push
repnz
add
cmc
ficoml
sub
pop
lods
hlt
lret
in
sbb
sbbl
mov
inc
push
push
adc
lahf
jl
and
roll
jg
imul
xchg
in
sub
sbb
jbe
sbb
scas
xchg
adc
add
push
cmp
sub
nop
repz
cmp
imulb
or
popf
in
sbb
imul
add
push
jns
mov
hlt
scas
jmp
test
cwtl
ficoml
cld
test
shrb
add
add
jge
pop
pop
mov
gs
es
les
and
dec
add
pop
mov
les
mov
sub
or
ret
loope
xlat
fwait
cli
add
inc
cmp
sub
lret
or
movsl
outsl
jge
cmpsb
lods
jmp
orl
bound
pusha
or
or
lods
sbb
je
and
push
mov
mov
dec
sbb
pop
inc
hlt
scas
les
mov
pop
pop
sbb
cmp
test
mov
ret
and
add
push
inc
inc
ret
push
or
and
sub
arpl
dec
lea
loop
add
insl
outsb
std
lea
aam
sub
inc
adcb
xchg
cmp
inc
jmp
ljmp
sub
nop
push
push
add
cmp
or
test
sbb
nop
cld
or
js
arpl
push
inc
in
enter
inc
jp
mov
cmp
pop
loopne
rcrb
push
pop
jbe
mov
pop
hlt
xor
mov
arpl
clc
push
fldcw
pop
test
or
inc
inc
lcall
aaa
xchg
das
adc
mov
pop
or
mov
orl
adc
mov
mov
arpl
fidivl
add
inc
cmp
inc
shl
jo
and
xchg
je
shl
jo
pop
jle
jp
add
mov
out
shl
jp
test
mov
sbb
dec
hlt
mov
stos
addl
jg
cmp
xlat
dec
pop
and
or
adc
dec
adc
inc
fisubl
test
push
fildl
lods
nop
imul
addl
jnp
push
popa
inc
ja
adc
ret
and
lds
out
sbb
cmpb
aaa
mov
nop
outsb
inc
xchg
ljmp
bound
scas
inc
pop
fstp
pop
pop
push
pop
sub
xor
jmp
addr16
xor
and
add
clc
orb
xlat
incb
enter
int3
gs
test
das
jns
dec
push
cli
out
and
clc
outsb
daa
fstl
pop
loop
in
data16
jl
popl
call
pop
sahf
lret
add
into
in
sbb
fwait
jmp
sbb
dec
xchg
sbb
jp
mov
or
adc
push
cmp
pop
loop
push
enter
cmp
mul
es
stos
sahf
sti
dec
fiaddl
dec
loopne
mov
and
add
je
sar
leave
lods
dec
mov
push
movsl
loopne
cmp
scas
adc
add
inc
xchg
movb
mov
and
and
cmpsl
ja
cli
push
mov
into
and
insl
aad
iret
fiadds
scas
shl
ja
sbb
xchg
in
push
add
icebp
add
gs
push
add
xor
lahf
and
test
mov
out
mov
bound
arpl
lea
or
cltd
add
insl
xchg
adc
add
inc
outsb
mov
mov
lods
push
lock
cmp
mov
int
subb
enter
cmp
inc
scas
add
sahf
jo
andb
add
hlt
cmpsl
popa
mov
jp,pt
test
and
cltd
repnz
pop
add
pop
fbstp
mov
cmp
out
test
xchg
cltd
adc
outsl
sub
imul
fcomp
inc
pop
pushf
add
test
xchg
sti
pop
int3
adc
sbb
loope
jmp
shrd
rcrl
into
add
insb
cmp
faddl
adc
bnd
mov
jne
outsb
add
in
jge
mov
int
daa
loopne
push
and
inc
aas
pop
xchg
sbb
mov
cmc
cmp
add
pop
pop
roll
paddsb
test
mov
cmpsb
loope
fstps
adc
and
leave
adc
les
jo
adc
cmp
sbb
fwait
dec
je
and
jo
in
pop
lods
jno
jge
push
xchg
jecxz
push
xchg
imul
adc
pop
and
mov
fwait
inc
roll
ret
int
fnstsw
data16
cli
in
or
lods
pop
and
mov
jmp
mov
or
add
inc
fsubrl
jno
xor
in
mov
pushf
pop
popa
push
mov
and
insb
add
scas
mov
pop
and
jb
inc
mov
cmp
dec
sub
fsubrs
fidivl
dec
mov
add
loop
les
jbe
mov
dec
mov
iret
push
fs
add
out
dec
push
mov
pop
std
add
or
xchg
add
aaa
aad
jo
dec
push
jmp
xchg
jbe
rolb
lret
cld
loope
pop
push
ljmp
mov
mov
daa
mov
push
dec
popa
add
and
xor
pop
pop
adc
sub
repnz
ficoms
test
loope
out
pop
add
popa
mov
sbb
add
push
or
imul
fists
shll
xor
push
pop
das
test
inc
adc
pop
ljmp
js
in
lock
mov
pop
fwait
into
mov
inc
fmull
jp
add
cltd
or
add
and
inc
cmp
xchg
and
push
test
out
loopne
fwait
xchg
stos
arpl
pop
fbstp
inc
iret
mov
dec
sub
cmp
adc
lret
mov
notl
insb
aad
mov
adc
rorb
push
ficomps
adc
add
mov
mov
and
pop
test
les
lret
jns
stos
cwtl
loopne
or
fwait
lods
push
pop
add
xchg
js
mov
mov
stos
test
enter
stc
push
sahf
add
cs
xlat
loop
add
xchg
jns
add
dec
sti
leave
cwtl
push
add
add
movsl
cltd
invlpg
sub
mov
shrl
stc
lcall
sub
pop
int3
loope
out
cmp
lahf
hlt
inc
dec
inc
mov
xchg
pop
test
cmp
adc
push
and
fwait
call
inc
bound
xor
cwtl
cmc
cmpl
ss
add
rcll
scas
out
dec
mov
fnstsw
xor
pushf
repnz
sbb
int3
incl
test
lret
sbb
xchg
mov
filds
mov
xchg
clc
rolb
cld
ret
aas
outsl
sbb
loop
in
pop
or
pop
test
mov
or
ss
bound
add
xchg
movzwl
xchg
jae
add
inc
add
dec
cmpsb
fst
jmp
xlat
xor
popa
dec
inc
mov
rclb
sub
pop
stos
mov
popa
xchg
int3
cmpsl
mov
add
insb
sbb
out
cmpsl
jge
adc
cmc
push
nop
js
mov
outsb
fs
ficomps
mov
jg
aaa
js
add
je
push
adc
xlat
push
sub
cmpsb
iret
movsl
xor
sti
lret
push
xor
pop
icebp
jns
sbb
fadd
insb
mov
and
imul
push
sub
enter
out
dec
ja
insb
cmc
add
lcall
push
lds
cld
mov
rorb
jns
pop
out
pop
subb
adc
test
lock
outsl
lods
pop
jo
int
in
add
pushf
jl
test
add
cltd
repnz
cmc
xchg
movsl
add
jne
cmp
adc
je
test
push
imul
push
mov
ds
aad
xor
dec
popl
adc
cmp
push
sub
xor
lea
rol
nop
and
scas
aas
ljmp
xchg
add
jns
pop
mov
push
cwtl
out
cmc
mov
and
aad
add
jnp
popa
scas
dec
xor
inc
mov
mov
sbb
nop
loope
pop
sar
push
gs
mov
in
jno
lds
push
jg
fsubrl
negl
mov
test
popl
sbb
pop
fxam
lods
mov
pop
repnz
movsl
add
adc
test
sbb
out
cltd
push
mov
ds
movsb
add
xor
imul
pop
lods
loope
cld
in
adc
ud0
imull
cwtl
jle
test
add
orb
add
push
xchg
and
jecxz
popa
scas
mov
pop
xchg
rol
test
mov
adc
fsubrs
xchg
in
roll
mov
pop
inc
mov
pop
cmp
clc
and
stos
shll
jne
xchg
pop
loope
inc
jge
sbb
cmpsb
pop
add
outsl
inc
aaa
mov
outsb
popa
jbe
jne
push
pop
adc
enter
cld
ror
test
imul
mov
mov
or
incb
jb
add
cmpsb
add
aas
sub
mov
push
insb
test
add
pop
bound
jnp
hlt
sub
push
int3
in
add
jns
mov
loope
aas
mov
not
xchg
movl
fs
add
cs
push
sub
pop
sub
sbb
mov
push
xor
adc
mov
orl
sbb
loopne
jns
jle
inc
inc
ret
cmpsl
gs
gs
xchg
inc
pop
test
mov
call
xchg
pop
sbb
cmp
cmp
lret
jb
sub
inc
and
pop
and
shl
cmovae
sti
xchg
stc
and
daa
pop
mov
or
rorl
inc
popf
xor
pop
rolb
andb
or
adc
loope
and
shr
mov
insl
dec
iret
bnd
cltd
lock
jmp
adc
push
jl
and
inc
out
add
jb
imul
gs
mov
cmp
int3
sbb
xchg
cs
sub
mov
cmp
addr16
or
int3
loope
pop
mov
scas
pusha
xchg
gs
or
cld
adc
and
pusha
push
mulb
scas
test
mov
cltd
test
popf
jne
gs
sub
andb
dec
frndint
push
shll
hlt
pusha
dec
pop
push
pop
jp
cmp
pop
lock
sbb
mov
jle
cmp
pop
dec
data16
lret
add
lcall
add
dec
sbb
pop
aad
test
loopne
fcmovnbe
xchg
pop
mov
xchg
ret
js
pop
sub
pop
out
pop
xor
pop
js
gs
mov
mov
add
pop
fmull
add
xor
push
dec
data16
dec
jnp
jae
sub
addb
aas
jns
shll
lret
cmc
das
xchg
xor
fdivs
xchg
and
testl
add
lea
fcmovnb
add
popf
cli
sbb
es
in
xor
add
aad
pop
and
or
inc
mov
add
cmp
dec
in
xchg
and
in
cltd
adcb
out
xor
je
lds
je
divb
and
rcll
into
cmp
fidivl
sub
jecxz
lods
cmp
xor
pop
ds
sub
andl
in
xlat
dec
stos
push
movsl
shll
decb
daa
or
add
cmp
sub
clc
in
sbb
mov
mov
xchg
xor
loope
lahf
cli
jecxz
xchg
xor
pop
inc
xchg
mov
cmp
sbb
jo
xchg
dec
add
pusha
loope
inc
cli
push
mov
mov
js
mov
sbb
shlb
pop
and
push
popf
aaa
and
stos
or
sti
push
and
loope
cmp
adc
les
fwait
testb
test
scas
add
add
push
out
dec
fldcw
mov
add
xchg
js
mov
mov
fmull
and
add
inc
les
xlat
roll
mov
jg
jae
adc
or
pusha
add
push
inc
dec
mov
sbb
dec
sbb
and
pop
and
pop
std
test
outsb
loope
shll
bound
into
fisubs
test
push
sub
mov
xor
xor
lock
data16
xchg
mov
sub
mov
ljmp
or
add
repnz
sbb
add
outsb
push
xor
mov
test
movsl
sub
jg
outsl
lds
inc
es
mov
inc
jne
and
dec
clc
mov
pop
cmp
xchg
jecxz
aad
pop
cwtl
ret
dec
shll
jbe
ss
push
dec
pop
xchg
loope
sub
mov
fxtract
scas
xorl
inc
xchg
push
sbb
loopne
add
aam
fcomip
and
lock
movsb
sbb
stos
jno
int3
test
mov
pop
sti
lret
sahf
xchg
push
mov
faddl
or
pop
cmpsb
sub
fisttpll
push
xor
pop
inc
cltd
mov
xlat
repnz
xor
pushf
cmp
stos
jbe
push
mov
adc
sub
xor
mov
cmp
ss
add
add
aaa
xor
jmp
jno
add
outsl
push
sub
aad
xchg
loopne
clc
shrb
push
aam
in
adc
and
jo
out
sub
push
pop
lds
lcall
add
and
mov
filds
or
out
mov
push
jns
add
cmp
cmpsb
fadds
xchg
mov
or
dec
fstpt
gs
ret
sbb
sbb
cwtl
add
pop
mov
fadds
orl
clc
pop
ficoms
or
rolb
pop
fimull
and
inc
add
fucomip
in
pop
lods
push
sub
adc
add
out
negb
in
and
scas
add
ss
in
das
shlb
or
add
js
int3
iret
repz
add
movsb
sbb
dec
shrb
mov
pop
repnz
push
fwait
clc
out
out
and
filds
cs
lea
jno
push
xchg
add
sahf
lret
mov
lds
hlt
popa
not
sub
stos
ret
mov
int3
push
aas
in
mov
adc
stos
add
dec
jnp
data16
movsl
add
je
shrl
and
inc
mov
cld
lahf
loope
fucomip
xchg
cmpb
or
xchg
dec
mov
out
out
call
pop
fnstenv
add
mov
adc
imul
mov
bound
jb
mov
fwait
push
je
add
loop
mov
sbb
mov
mov
pop
cmp
stc
push
daa
add
fcompl
ja
sbb
mov
loop
add
adc
sti
or
add
rcl
outsl
aas
cmc
or
inc
add
mov
sbbb
mov
push
and
xchg
adc
imul
into
movsb
mov
and
cmp
or
jle
pop
and
mov
filds
mov
pusha
dec
test
movsb
aam
xchg
and
popa
xchg
fnstcw
js
lcall
in
and
mov
or
cld
inc
cs
inc
aas
mov
sub
add
push
xchg
cmp
push
cmp
and
pop
mov
xorb
or
jg
jecxz
xor
mov
mov
jle
pop
out
mov
sub
scas
mov
xchg
icebp
cs
dec
pushl
xchg
hlt
mov
ret
outsb
push
and
push
inc
call
pop
sti
mov
mov
adc
sub
inc
jge
push
cwtl
lods
sbb
cmpsl
and
inc
mov
dec
push
iret
sub
dec
pop
mov
test
xor
scas
add
xor
negb
ljmp
test
lcall
movsb
mov
cmp
dec
push
and
test
sbb
pop
mull
dec
loopne,pn
xchg
inc
mov
or
sbb
bound
aaa
adc
add
push
cmpsl
mov
add
xchg
lods
cmp
jnp
test
fbstp
inc
xor
rol
mov
loopne
and
cmpsl
lock
mov
and
mov
pop
and
and
dec
insb
push
sahf
cltd
xchg
push
inc
push
push
sbb
and
repz
adc
push
sbb
popfw
loop
jp
add
cltd
out
xchg
push
mov
pop
fnstsw
mov
mov
xchg
jno
fsts
movsl
xor
add
push
cli
popl
das
insb
jmp
pop
add
mov
sbb
popf
lcall
mov
mov
dec
adc
addb
daa
mull
movsl
nop
fs
leave
add
push
sub
ret
out
mov
jle
inc
mov
mov
hlt
iret
xor
bound
mov
sbb
loope
clc
xchg
cli
pop
add
ljmp
mov
rcrl
test
iret
ftst
addl
mov
push
add
sub
pop
add
push
pop
flds
pop
jge
push
inc
pop
clc
mov
dec
in
loope
aam
fldl
mov
jmp
in
and
mov
std
orb
fnsave
sbb
dec
mov
insl
xchg
xchg
and
push
bound
pop
push
dec
xchg
fs
mov
mov
push
xchg
and
adc
sbb
addr16
sbb
cmpsb
mov
xor
or
out
stc
loop
mov
push
cwtl
nop
jecxz
nop
ret
inc
add
mov
jns
aaa
sbb
cltd
gs
pop
or
mov
push
pop
cmp
inc
testl
or
imul
pusha
and
and
inc
gs
out
sbb
adc
xchg
xchg
gs
cmpsb
cld
mov
xchg
pop
loope
ja
xchg
and
pusha
adc
popf
aaa
push
inc
mov
sub
notb
mov
idivl
fucomip
das
negb
jp
mov
fstpt
xorl
add
shll
ret
pop
faddl
out
mov
sbb
inc
loopne
shl
jmp
sahf
movb
and
int3
push
out
das
dec
inc
sti
pop
cmp
daa
mov
rorl
out
sub
cwtl
cmpsb
fwait
loope
sub
int3
out
fsubr
ret
inc
dec
or
fiaddl
out
add
and
mov
fsubl
mov
fs
lret
fwait
mov
adc
or
mov
xchg
repnz
push
int3
lods
shrb
cmpsl
mov
lcall
int3
inc
out
test
xchg
stc
clc
fcmovnu
testb
push
int3
push
popf
cmp
addr16
sti
sbb
addr16
mov
add
lea
cmpsb
rclb
xchg
icebp
lret
inc
insb
repnz
icebp
gs
cli
pop
or
or
sarl
pop
lock
fs
fwait
xor
shll
xchg
jecxz
loop
mov
sub
pushf
sub
fnstsw
xchg
jle
push
mov
sub
inc
loop
push
sti
or
dec
in
add
and
idivl
orb
frstor
lea
movsl
andl
and
and
inc
rolb
leave
or
pop
jmp
and
andl
fbstp
dec
inc
arpl
and
std
adc
mov
movsl
adc
and
inc
jnp
jmp
inc
and
add
dec
in
or
arpl
inc
decb
test
ret
shl
xor
dec
shl
push
dec
fs
fildll
dec
add
popf
and
loopne
sarb
dec
repnz
incb
clc
ja
and
inc
negl
test
jne
loopne
cmp
pop
jb
bound
push
std
and
mov
pop
fdivrl
push
stos
outsl
adc
cmc
adc
pop
incb
daa
dec
cmpl
and
jnp
lds
push
or
aas
sbb
jl
inc
adc
inc
out
add
icebp
and
mov
neg
add
movsb
mov
xchg
aaa
stos
andl
inc
imul
mov
cmp
je
cmp
xor
xchg
divb
lock
inc
lds
adc
fistpl
ja
xlat
sbb
xchg
xor
in
sub
inc
mov
mov
ljmp
push
divl
or
xor
rcrb
mov
inc
inc
test
sbb
mov
add
bound
loopne
cmp
and
sub
loopne
add
cmp
test
imul
sbb
xor
jp
mov
mov
dec
push
xchg
dec
test
scas
pusha
mov
xor
out
sbb
push
and
out
or
inc
mov
dec
add
popa
sbb
pop
ret
and
shlb
scas
and
mov
adc
mov
and
negl
xor
loope
loope
mov
lea
ror
shrl
imul
mov
cmp
shrl
cmp
cmpsb
mov
popa
jecxz
dec
leave
outsl
xchg
daa
leave
mov
adc
cmp
push
jmp
jnp
xor
dec
das
xchg
pop
jmp
cmp
push
jo
xchg
sysret
push
add
push
pop
pop
add
or
or
mov
cli
in
rclb
lar
cmp
mov
or
jmp
and
push
cli
xor
imul
sbb
jp
pop
pop
cmc
add
aas
pop
cltd
subl
xchg
xor
bound
mov
cmp
loopne
mov
cmp
andb
xor
call
aam
lret
pop
sbbl
lds
pop
mov
dec
and
mov
push
jle
arpl
sarl
int3
inc
test
hlt
pusha
test
inc
sub
loope
out
das
dec
cmp
sub
adc
pop
rorb
sbb
loop
sub
imul
mov
dec
push
add
pop
mulb
and
inc
fldt
mov
in
mov
jl
jge
and
ret
inc
mov
xchg
es
arpl
sbb
loop
dec
pusha
out
ret
pop
jmp
cmovne
out
dec
jae
xchg
repz
loop
and
scas
mov
mov
das
ljmp
icebp
inc
cli
push
lea
add
mov
test
scas
pusha
add
adc
or
mov
inc
sti
imul
scas
pusha
arpl
and
insb
inc
gs
xchg
loope
inc
sub
scas
std
and
mov
fisttps
andb
add
inc
rorl
mov
cli
pop
xchg
or
inc
lock
adc
xor
shlb
cli
fstps
sbb
dec
mov
jge
cs
cmp
jl
gs
xchg
inc
dec
sub
pop
stos
int3
inc
mov
pop
test
imul
and
jo
pop
push
ret
sti
jo
ds
mov
push
and
aas
subb
lock
mov
mov
ja
leave
and
pop
mov
gs
ficomps
cltd
roll
test
hlt
rorl
xchg
ret
imul
sti
mov
jmp
leave
or
inc
ror
mov
js
cmp
lret
sub
mov
mov
data16
and
in
mov
cmpl
dec
sbb
movsl
lock
clc
mov
push
sub
mov
fidivs
es
rcll
push
xor
sub
fists
addr16
into
js
pop
hlt
std
jg
push
push
daa
scas
dec
sub
icebp
lret
xchg
pop
sbb
popa
pushf
shrl
outsb
dec
sub
orl
imul
cmpsb
mov
dec
sub
sarl
add
add
sahf
loope
xor
inc
xor
inc
add
cltd
fs
lods
mov
add
add
lea
movsb
idivb
sub
les
and
test
mov
jne
push
sub
adc
or
and
imul
push
xor
inc
inc
add
in
gs
gs
push
add
iret
and
lea
mov
sub
and
ljmp
int3
add
hlt
jle
xorb
int
in
ret
push
andl
pushf
lods
xor
adc
adcl
cmc
or
xchg
cmp
inc
inc
jo
cltd
mov
rorl
aas
andl
lods
gs
pop
enter
andb
ss
add
add
sbb
xchg
shrb
data16
mov
xlat
dec
outsl
addl
gs
jecxz
sbb
mov
movsb
cmp
je
test
jl
lock
subb
jo
pusha
pusha
fwait
out
inc
jl
ret
sub
lret
nop
cmp
mov
or
cmp
jle
mov
lea
ret
add
pop
sub
fsubl
mov
add
cmp
mov
and
popf
faddl
xlat
push
pop
aaa
pop
inc
xchg
cwtl
mov
add
or
push
push
fcmove
or
cmp
adc
cmp
scas
sub
sbb
loope
insb
out
fistpll
ret
jecxz
xchg
jp
cld
ret
mov
and
mov
and
dec
and
mov
clc
jp
imul
add
rclb
shlb
adcb
daa
jp
sub
shlb
and
xchg
xchg
inc
leave
mov
sbb
imulb
gs
shrb
arpl
imul
xor
ret
sar
xchg
xchg
inc
add
imul
fstpl
testl
icebp
jne
test
mov
bound
dec
bound
mov
cmp
aas
je
lods
ljmp
sub
arpl
jae
xchg
xor
or
and
fildll
and
dec
cmp
imull
mov
rcrw
rolb
sahf
inc
xchg
vmread
ljmp
and
mov
cmpsl
push
inc
popl
push
mov
icebp
in
fldenv
mov
xor
fnstenv
lret
inc
arpl
pop
sbb
mov
and
inc
imul
fiaddl
pusha
add
cmp
orl
lret
inc
mov
idiv
sub
jne
fiaddl
adc
inc
mov
push
adc
shrl
inc
lea
negb
jp
test
jo
add
jno
gs
mov
and
scas
xchg
mov
sbb
mov
add
or
out
leave
dec
stos
popa
mov
es
sbb
call
lret
imul
daa
shlb
dec
stos
xor
dec
xor
add
adc
cltd
add
lret
adc
divb
mov
popa
in
or
mov
xchg
mov
sti
inc
inc
jae
mov
adc
hlt
mov
and
mov
loop
pop
mov
stos
orl
test
xor
sbb
fs
lahf
movsb
lahf
inc
mov
stos
dec
add
push
adcl
jbe
pop
popa
repnz
inc
popa
push
and
test
inc
push
out
add
pop
push
mov
dec
ja
mov
popa
pushf
inc
inc
test
jecxz
sub
test
xchg
push
shrl
mov
and
ss
and
xchg
cmp
xchg
xchg
xorl
lds
inc
xchg
divb
jne
popa
add
xchg
jae
out
stos
lock
dec
xchg
fiaddl
dec
jmp
mov
ss
std
test
add
loop
ret
and
in
popa
add
mov
mov
xchg
add
insb
jne
popa
add
mov
jecxz
stos
gs
hlt
call
inc
mov
cs
popf
fnstenv
stos
movsb
stos
gs
sub
stos
enter
add
pop
push
mov
movsb
push
gs
xchg
vpshuflw
and
out
mov
repnz
shlb
jecxz
movsb
dec
gs
imul
test
movsl
jae
sub
daa
add
popa
fists
stos
jecxz
movsb
js
pop
adc
mov
inc
movsl
xor
or
stos
loopne
jecxz
es
jmp
mov
xchg
inc
movsl
stos
mov
cmpsl
and
mov
flds
or
fs
adc
mov
mov
add
into
outsl
inc
lods
dec
add
int
mov
and
adc
rorl
mov
push
mov
or
fimuls
addl
sbb
sbb
add
add
sbb
cmp
popf
adc
add
lcall
aas
int
and
ret
xor
xchg
inc
mov
gs
add
enter
dec
and
test
add
lea
inc
icebp
fmul
cmpsb
adc
outsl
xchg
test
mov
dec
shrl
xchg
and
xchg
or
fiaddl
sbb
or
or
mov
lret
jge
inc
mov
arpl
xchg
daa
test
dec
rcrb
pushf
mov
loope
ret
dec
jno
mov
out
shll
sbb
pop
add
lea
es
and
in
push
iret
push
sub
mov
and
inc
dec
pop
pop
mov
aaa
mov
in
testb
loope
mov
arpl
adc
sarl
mov
xchg
mov
mov
loop
or
mov
xor
inc
xchg
pop
xchg
nop
fcoml
xor
outsl
addb
inc
cli
fwait
mov
or
xchg
js
testb
or
testb
gs
jp
lea
jge
or
out
cld
cmp
and
std
ljmp
xchg
into
cmp
test
mov
fmull
aad
loope
int
or
clc
insb
lds
adc
std
fidivl
loope
push
mov
pop
xchg
xchg
add
das
xor
shlb
fistl
sub
lock
push
jp
add
pop
push
mov
movsl
outsb
mov
and
dec
scas
lods
sub
les
add
mov
mov
mov
dec
mov
cs
pop
push
push
icebp
sbb
inc
sbb
add
add
imul
adc
arpl
lret
popl
imul
dec
dec
int3
insl
js
movb
dec
xchg
dec
and
xorl
xor
rcr
or
dec
sahf
mov
sub
sbb
out
fs
ja
adc
xchg
adcl
cld
inc
pop
popa
and
add
jne
addb
data16
into
xor
dec
sahf
xchg
js
cmp
addl
inc
stos
lds
sub
sub
imul
jecxz
add
and
dec
jg,pn
push
mov
ljmp
adc
bound
add
in
jle
inc
dec
and
dec
inc
in
lahf
pop
sub
adc
pop
icebp
frstor
rcll
and
pop
cmpsb
mov
jecxz
out
push
dec
nop
pop
sub
push
mov
lret
inc
push
les
arpl
mov
shl
and
sbb
scas
addb
mov
adc
sti
out
cmpsb
push
pop
dec
nop
sub
sarl
add
fs
int
cld
xchg
xor
jg
scas
or
xchg
inc
fucom
jl
sbb
nop
push
pop
jp
xor
cmpl
push
loop
test
mov
out
cmpsb
lret
sbb
bound
mov
jg
and
mov
mov
es
repnz
add
hlt
sar
aas
lret
xchg
adc
or
mov
sarl
dec
or
loop
pop
xor
cmc
scas
popf
or
iret
lea
ss
sbb
in
and
outsb
int3
add
insb
pop
mov
notl
bound
hlt
jmp
leave
push
ffreep
push
cmp
xchg
mov
fwait
loop
jp
nop
or
leave
add
cli
subb
les
stc
hlt
pusha
mov
std
jns
adc
inc
pop
fldl
mov
test
push
ret
jne
outsl
mov
cmp
out
aaa
add
dec
scas
stos
decb
xchg
add
mov
popa
push
in
add
and
loopne
mov
mov
int3
push
sbb
mov
jbe
outsb
fadds
pop
loopne
scas
mov
xlat
cmp
inc
or
pop
xchg
add
faddl
clc
les
lcall
xchg
jg
lock
or
cli
pop
popa
jmp
pusha
mov
or
cmp
add
adc
addl
sbb
out
jo
xor
push
sarl
pop
dec
and
cltd
out
lock
or
add
fs
lea
dec
sarl
fists
inc
mov
out
push
test
and
enter
addr16
jb
test
and
fwait
ds
push
jp
lea
aas
inc
std
mov
shl
xor
add
and
aam
rolb
and
pop
pop
mov
mull
xchg
adc
and
cmp
dec
enter
stc
int
jnp
inc
add
mov
hlt
and
out
ret
sub
adc
add
out
insb
or
adc
add
jae,pn
cmpb
add
lods
pushf
push
add
shll
and
lret
xor
dec
pop
and
orb
repz
js
imul
shrb
adc
mov
mov
outsl
arpl
add
sub
fimull
jg
add
inc
dec
dec
loope
xor
add
jl
loopne
add
mov
aam
fwait
xchg
lcall
cltd
adc
shll
mov
sahf
pusha
add
hlt
cltd
mov
pop
iret
inc
jno
cld
loop
arpl
cmp
popa
lds
aad
mov
inc
cmp
flds
jmp
fstl
mov
test
xor
pop
adc
lahf
repnz
add
jg
in
mov
dec
test
pushf
popl
scas
testb
aas
sahf
sub
mov
mov
lods
xor
push
div
ret
xchg
add
jmp
xchg
pop
push
push
adc
mov
loope
aad
cmp
sbb
jmp
movsb
fisubl
cmp
mov
and
jo
mov
mov
test
add
cli
jb
cmpsb
cmpsl
inc
add
gs
ja
lods
adc
sub
cmpsb
pop
and
and
adc
enter
aas
ljmp
leave
cmpsb
test
adc
jle
add
jno
lock
mov
lahf
add
repz
lret
cwtl
out
pop
mov
aad
adc
xor
add
fistl
imul
pop
out
insb
fs
pop
outsl
mov
mov
sbb
pop
pushf
add
dec
xor
push
mov
adc
in
test
jno
ja
adc
xchg
pusha
jo
add
lret
fwait
lods
xchg
lock
add
adc
push
insb
sub
test
ss
lds
das
test
add
out
in
dec
mov
dec
pop
add
fsubl
aas
out
imul
pop
lds
pusha
mov
fisttpl
pop
add
xor
aad
cld
test
mov
xor
dec
add
adc
mov
jo
mov
sub
adc
movsb
mov
jmp
loopne
das
push
add
clc
fildl
sub
lahf
and
je
xlat
aas
mov
clc
in
data16
outsb
lock
fcoms
nop
loope
cld
ret
popa
repz
or
mov
ficoms
jp
in
arpl
pushf
and
clc
leave
add
xor
or
rclb
jmp
and
ret
add
pop
adc
movsb
and
mov
mov
jl
push
cwtl
jb
repnz
mov
test
and
pop
add
bound
fsubl
arpl
jecxz
cmp
xchg
jno
adc
pop
xlat
mov
sahf
sbb
cs
rolb
dec
in
dec
int3
pushf
jp
xchg
cltd
fstpt
test
int
std
inc
fadds
out
xlat
sarb
jmp
rcrl
lahf
push
mov
div
sub
cmpl
in
lea
outsl
ficomps
jne
cmp
std
pop
in
add
mov
ljmp
fsubp
aad
out
pop
jl
loopne,pn
push
mov
loope
mov
inc
cli
les
outsb
jp
cmpb
cmp
loop
loopne
pop
negb
outsl
add
sti
into
cmpsb
ret
mov
scas
outsl
xchg
mov
cld
loopne
sbb
scas
cmp
movsb
lds
imul
lock
popw
cmc
adc
add
jb
jmp
push
inc
lahf
push
adc
insb
adc
pop
shrl
test
mov
or
add
out
shlb
out
adc
outsb
ret
mov
add
cld
aad
dec
add
or
jge
test
fstps
nop
sub
cmp
mov
and
push
adc
sub
gs
js
sti
daa
mov
in
adc
loope
loop
xchg
into
add
ret
or
aam
push
inc
inc
sti
mov
sti
and
adc
lret
cmova
out
sbb
inc
insl
dec
dec
fcoms
lcall
xor
and
bnd
xchg
or
add
dec
sbb
mov
int
or
cltd
shl
rol
inc
and
icebp
adc
lret
gs
nop
imul
faddl
arpl
mov
or
rclb
jg
adc
mov
mov
shlb
xor
inc
mov
xorl
leave
jne
dec
sbb
dec
movsl
stos
lods
mov
lods
xchg
mov
jle
test
pop
xorb
test
xchg
roll
push
movsb
sub
lea
in
adc
lds
das
push
shr
andl
push
gs
sbb
fadds
fiadds
sub
pop
xchg
loop
scas
pusha
loope
inc
mov
out
pop
xor
inc
add
pusha
jge
hlt
sbb
js
adc
jnp
negl
leave
shll
adc
pop
sub
or
mov
pop
and
add
or
inc
jns
pop
jle
jge
sbb
rcll
adc
or
out
and
sbb
fsubrs
jl
rcll
inc
insb
mov
loope
lret
jbe
das
adc
icebp
in
test
insl
jle
ror
pop
adc
adc
adc
fists
pop
pop
mov
mov
in
aas
sbbl
call
push
insb
jl
push
inc
daa
xor
add
mov
or
lods
testb
adc
jne
call
fs
loopne
test
in
mov
and
jae
push
push
pop
mov
add
andb
rcr
push
xor
pop
out
add
aad
dec
mov
pop
enter
in
cmp
sub
jmp
scas
jbe
pop
or
dec
sbb
aad
in
add
cmp
push
push
sbb
add
jne
mov
das
addl
cmp
js
adc
in
mov
xor
pop
daa
test
add
xor
shlb
pop
popa
in
cmp
mov
jp
outsl
ljmp
pop
cwtl
xchg
mov
and
cmc
mov
stc
push
testl
in
sbb
dec
inc
ss
sub
rcrb
dec
sub
xchg
aaa
mov
js
lds
lea
shr
stos
loope
stc
add
icebp
cmp
in
and
sbb
nop
and
xor
fwait
add
subb
jbe
mov
xchg
dec
lods
push
sub
and
mov
push
std
sbb
hlt
mov
jno
sar
lret
adc
jnp
sub
movsb
push
add
fiadds
lcall
jecxz
sahf
popa
or
pop
loope
es
dec
out
inc
sbb
add
scas
out
mov
add
outsb
add
xlat
sbb
rolb
aaa
mov
mov
dec
test
mov
es
cmp
pop
loope
repnz
ljmp
and
into
icebp
pushf
pop
sub
pop
fsub
scas
or
inc
sub
add
shll
jno
test
cmp
aam
nop
and
mov
aas
popa
cmp
scas
dec
pop
mov
add
enter
add
imull
dec
mov
lds
push
add
mov
testl
push
loopne
hlt
inc
scas
cli
and
ret
mov
mov
push
out
outsl
lods
sbb
add
mov
leave
pop
add
or
add
push
out
stos
xchg
and
decl
push
outsb
je
stos
leave
cld
lods
les
cmp
dec
dec
adc
add
push
cmp
fidivs
mov
jns
in
pop
paddusb
aas
mov
mov
movsb
nop
add
in
loop
insb
sub
rolb
cld
cltd
dec
stos
fdivs
mov
mov
dec
jmp
dec
push
fadd
sbb
xor
sahf
jo
add
lods
pop
clc
leave
aas
negl
pop
adc
loopne
or
jo
lods
ss
push
xchg
pushf
cmp
jnp
inc
xor
push
loopne
and
adc
ds
adc
loop
lahf
add
jnp
aas
aam
jno
pop
les
mov
add
sahf
faddl
add
xchg
mov
add
mov
iret
addr16
mov
pop
std
add
xchg
xrelease
stos
rcrb
loop
mov
add
add
lret
add
subb
sbb
sub
inc
xchg
fcmovnb
mov
into
xchg
test
jg
xor
out
sbb
push
inc
pop
and
pop
xlat
or
xor
cmpsl
pop
pop
mov
mov
daa
mov
sbb
aam
pop
divl
xchg
and
insb
fwait
mov
aad
outsl
mov
mov
lahf
mov
cmpsb
into
add
pushf
stos
jo
mov
popa
popa
xchg
inc
mov
add
fldcw
jne
jmp
hlt
int3
ret
adc
ficomps
add
dec
fwait
int
mov
xchg
loop
dec
mov
add
pop
jbe
test
pop
xor
cmovns
xor
in
fnstenv
mov
icebp
mov
sbb
movsb
mov
pop
pop
negl
push
sub
addr16
mov
sub
cli
sbb
gs
and
mov
lcall
add
pop
jg
outsb
and
lds
sbb
insb
cmp
cwtl
movsb
mov
pop
sbb
add
adc
test
add
movsb
cmp
pop
ljmp
add
js
loopne
cmc
jp
rclb
popa
sbb
jl
inc
or
cld
ljmp
add
repnz
mov
loopne
add
imul
bound
pusha
adc
sbbl
scas
pusha
bound
stos
mov
add
xor
ljmp
push
add
jne
push
fistpl
cli
sbb
sbb
testl
rcrb
fsubs
addr16
mov
ret
nop
icebp
enter
dec
pop
rcll
jle
jl
decl
into
stc
add
pop
sbb
xchg
js
and
mov
daa
rorl
xchg
popa
mov
sbb
pop
mov
das
or
xchg
or
inc
push
pop
test
xchg
fidivl
sub
cmpsb
adc
xchg
sbbb
ret
fbld
sbb
pop
and
jmp
add
faddl
adc
clc
cmp
gs
sbb
or
or
push
and
inc
or
and
lcall
or
push
sbb
std
cmp
mov
pusha
mov
les
pop
stc
xchg
loop
pop
push
pop
push
idivb
jns
notl
pusha
mov
sbb
jne
xor
pop
cli
pop
test
jo
nop
ds
test
dec
test
mov
inc
loop
in
and
cwtl
mov
or
cmp
movsl
inc
adc
roll
inc
test
ljmp
imul
adc
in
pop
jb
xchg
xchg
ss
ret
mov
or
pushl
icebp
addl
mov
push
shll
cli
in
push
arpl
gs
jno
inc
rcrb
cmp
addr16
or
and
lock
fisubs
or
inc
and
adc
lret
insb
pusha
das
or
popa
inc
adc
bound
jno
test
add
inc
enter
mov
jne
repz
mov
aas
ret
clc
test
cmp
jmp
in
pop
out
add
movsb
dec
pop
fstpl
add
imul
test
cli
add
push
lods
push
test
inc
cmp
or
add
mov
jo
add
xchg
ss
add
sub
push
add
loop
xor
push
inc
loope
test
repnz
pop
push
jge
or
xchg
push
cmp
stos
int
push
add
pop
jmp
mov
add
jnp
loop
ffreep
out
mov
dec
daa
jae,pn
and
and
and
xchg
mov
fimuls
cmp
mov
sarl
xorl
int3
and
sahf
sub
jle
mov
add
inc
shl
add
mov
dec
test
mov
leave
nop
xchg
jae
mov
pop
mov
jl
adcb
nop
inc
add
imul
je
hlt
or
jns
lock
cmp
les
testb
std
adc
outsb
sub
cltd
xchg
adc
fistl
and
xlat
sahf
sub
je
and
cmp
pop
and
mov
test
dec
push
ret
test
jmp
imul
stos
xchg
push
xor
lahf
sub
sbb
inc
insl
outsb
inc
rcrl
imulb
cmp
iret
push
mov
add
push
pop
cwtl
sub
test
cmp
cltd
dec
mov
cwtl
jae
into
dec
inc
xchg
cmp
pop
xchg
data16
mov
sarb
loop
icebp
int3
addr16
adc
cmpsb
dec
jl
mov
mov
mov
test
ret
sub
adc
jmp
test
in
lea
cmp
insb
clc
mov
movsb
cltd
add
mov
mov
imul
loop
xor
aaa
js
push
cwtl
jb
mov
test
arpl
ds
add
mov
or
dec
loop
ret
mov
inc
daa
gs
popa
enter
pusha
loop
add
neg
xchg
push
cmc
mov
cld
xor
leave
and
xchg
pushf
cli
jecxz
jle
mov
xchg
clc
rcr
inc
roll
dec
shlb
or
adc
ret
lret
sub
in
hlt
sbb
imul
add
and
ret
test
orb
sub
cld
jmp
jecxz
inc
or
mov
and
daa
test
icebp
in
xchg
lds
mov
adc
adc
add
ret
cmp
add
fdivr
mov
scas
add
xchg
xlat
leave
push
es
stc
fbstp
aaa
sbb
dec
loop
xchg
repnz
or
add
orl
xchg
add
aad
jb
in
add
aaa
inc
inc
add
fsts
hlt
push
pop
push
sbb
pop
in
mov
jge
test
sub
pop
inc
or
fwait
inc
xlat
movsb
hlt
push
aaa
adc
int3
sub
pop
add
fisttps
cmp
pushf
loopne
add
cmpsb
repnz
flds
dec
add
loop
cmp
mov
adc
jns
loopne
test
or
sbb
aaa
cmp
sbb
mov
repz
xchg
inc
lea
and
mov
cli
lock
add
icebp
loopne
nop
pop
pop
out
aas
or
scas
int
cltd
stos
jbe
mov
jnp
sub
dec
sbb
divb
or
lcall
add
in
into
movsl
xor
xor
xor
jo
add
lock
jmp
dec
jmp
xor
xchg
add
dec
ds
loop
pop
add
das
pop
pop
es
add
cwtl
test
xor
add
aam
xor
dec
fdivrs
mov
sarb
jo
popf
push
insb
add
pop
testl
test
js
add
jmp
inc
movsl
and
loop
mov
into
mov
adc
ficoms
outsb
push
cmp
push
loope
sahf
cmp
add
inc
dec
push
jp
add
inc
add
adc
push
inc
inc
repnz
mov
and
mov
xchg
and
int3
add
xorb
mov
pop
cmp
lret
mov
mov
lea
sub
mov
mov
xchg
add
ret
or
sbb
inc
sbb
pop
jne
add
idivl
sub
fistpl
fisttps
inc
mov
push
stc
adc
jge
inc
and
les
dec
inc
mov
popa
mov
xchg
cltd
push
inc
scas
and
pop
and
and
sahf
cs
arpl
xchg
rolb
add
xor
es
jnp
roll
icebp
push
faddl
inc
loopne
mov
mov
fcomps
pop
loope
pop
and
ret
in
mov
push
bound
cltd
jbe
sbb
and
test
mov
pop
mov
and
rorl
inc
mov
push
imull
lock
push
adc
mov
sbb
and
cmp
mov
add
ds
jne
mov
pop
mov
dec
jns
sbb
mov
inc
popa
hlt
in
mov
mull
add
mov
pop
sub
js
add
dec
jne
icebp
or
mov
pop
inc
call
addr16
pusha
bound
jmp
popa
mov
movsb
cmp
inc
xchg
cmp
movsl
push
shl
adc
in
pop
push
jp
lcall
cmpsb
bound
or
rorb
shlb
js
jmp
inc
add
pop
addl
push
push
pusha
dec
lret
ret
cld
xor
xor
push
jnp
clc
jns
add
mulb
cmp
sbb
inc
mov
sub
sti
fcoml
sub
jecxz
jecxz
xchg
push
and
loope
outsb
xor
mov
inc
movsl
shlb
and
adc
jl
ficoms
test
and
negl
mov
ljmp
inc
aam
popf
add
loopne
dec
sarl
xor
es
clc
xchg
cmpsb
xchg
jmp
mov
mov
fs
pop
out
sti
sub
push
add
and
loope
jns
frstpm(287
das
and
dec
fildl
cmp
jp
aaa
cmp
jo
aas
rclb
xchg
loop
jge
xchg
fiadds
jbe
insb
mov
dec
cs
sbb
lea
jmp
and
add
rcrb
pop
arpl
and
mov
adc
movsl
lock
in
and
sbb
loopne
xchg
push
xchg
movsl
mov
add
idivb
jmp
sbb
mov
cwtl
cltd
jp
xor
xchg
sahf
xor
add
bound
xchg
xor
push
test
scas
bnd
xor
ret
adc
adc
pop
adc
fwait
xchg
sbb
mov
pop
mov
pop
sub
loop
mov
mov
sbb
push
dec
xchg
and
inc
sub
fisubrl
lret
pop
cmp
cmpsl
sub
aaa
pop
push
mov
push
dec
fildl
fcomps
inc
cwtl
inc
ficompl
push
orl
dec
pop
scas
jbe
jbe
dec
xchg
aad
mov
leave
push
add
popa
jns
aad
and
es
ficompl
ja
cmp
clc
lea
loopne
and
outsl
xchg
inc
add
insl
pop
lods
dec
and
dec
sbb
push
ret
insl
xchg
les
aaa
je
mov
add
pop
mov
xchg
les
pop
and
cmpl
lods
push
repnz
fistpl
add
inc
rorl
clc
pushf
scas
dec
stos
fbstp
push
push
and
cmpl
stc
cmp
rolb
add
push
cmpl
cmp
mov
stc
daa
pop
sbb
sub
rolb
add
fdivs
add
cmp
pop
mov
add
aad
dec
aaa
scas
push
xchg
nop
add
mov
sti
cli
mov
mov
inc
mov
cld
xor
and
sbb
aas
rorl
icebp
add
fistpl
push
pop
jns
adcl
js
add
jp,pt
sbb
inc
cmp
mov
mov
and
xchg
sbb
inc
mov
addb
addb
fidivl
xor
xor
inc
out
ret
jl
add
bound
ja
bound
pop
test
popa
call
fs
mov
popa
sbb
xor
pop
pop
gs
aas
pop
add
rorb
and
loop
push
or
cwtl
mov
test
imul
cld
xor
add
enter
push
imul
mov
and
cmp
dec
incb
fucomi
mov
das
in
mov
add
pusha
sbb
shlb
sar
xchg
dec
les
es
push
repnz
push
adc
adc
push
rorl
push
inc
jbe
add
pop
mov
jecxz
push
push
pop
movb
push
jae
add
pop
test
and
mov
sarb
inc
xchg
popa
inc
inc
and
inc
adc
and
jecxz
shll
inc
ret
push
aad
repnz
ds
mov
mov
adc
fistps
push
mov
aaa
pushf
andl
test
shll
ret
in
xchg
pop
ss
arpl
xor
clc
dec
add
jp
dec
leave
hlt
aad
sbb
xor
ret
mov
jo
inc
sub
lahf
cmp
inc
or
cmpsl
je
xor
shll
xchg
pop
push
xor
gs
sbb
push
mov
xorb
loope
loope
adc
pusha
sarb
sub
rclb
inc
or
dec
mov
dec
add
sub
push
push
test
push
push
pop
cltd
add
push
filds
inc
enter
arpl
js
lahf
jmp
leave
ljmp
adc
repz
iret
dec
sub
dec
ja
jmp
das
add
mov
into
iret
testb
xchg
repz
fucomip
mov
sahf
inc
push
mov
mov
jae
add
mov
ret
lret
mov
leave
das
mov
add
int
cmp
push
xor
loopne
mov
cli
sub
lret
pushf
and
sbb
jo
push
je
add
addl
mov
add
pop
aaa
cwtl
popf
and
neg
dec
xchg
and
cwtl
inc
popa
jg
mov
add
or
mov
adc
jb
mov
add
fcmovu
sbb
fidivl
aam
push
add
add
xlat
loop
sti
pop
and
sbb
inc
hlt
icebp
lods
leave
dec
aaa
popa
and
orl
inc
sbb
mov
pop
or
mov
add
adc
loope
add
xchg
sbb
mov
test
and
loope
in
loopne
sub
push
inc
or
pop
sbbb
sbb
loope
hlt
nop
icebp
jmp
xor
or
xlat
lret
push
dec
push
inc
jecxz
jo
ljmp
insl
and
arpl
xchg
and
push
cld
adc
arpl
ss
jnp
add
lahf
movsl
xchg
push
or
loop
je
shlb
int3
pmaxub
mov
pop
dec
in
sub
mov
aaa
add
lahf
and
in
sbb
mov
mov
pop
mov
cltd
mov
push
pop
fidivrl
pop
stos
adc
pop
and
push
sub
pop
dec
fcmovb
gs
sbb
negl
bound
ret
mov
jmp
mov
popa
or
or
cli
lahf
inc
cmpb
test
add
imul
sbb
xor
inc
movsl
ret
push
rolb
addb
mov
arpl
in
mov
sub
out
inc
xchg
loope
test
inc
xorl
mov
adcl
xchg
xchg
iret
xor
das
push
loope
arpl
gs
sbb
mov
imul
cmp
mov
sub
cltd
ret
data16
sbb
test
sub
mov
loope
mov
test
jp
popa
dec
loopne
clc
cli
adc
mov
adc
in
push
mov
lea
test
hlt
adc
inc
xor
bound
movsl
add
xchg
cmp
aaa
mull
lret
ficoms
call
cmpsl
add
daa
xchg
mov
push
lcall
sbb
mov
andl
daa
es
daa
mov
leave
add
fsubrp
aas
jne
addr16
push
and
cmp
data16
fcoms
push
movaps
daa
adc
xchg
jle
dec
push
dec
push
bound
ret
push
lret
movsl
lods
xor
out
cmpsl
add
mov
xor
and
shrl
fdivs
and
add
jae
cltd
movsl
push
cwtl
push
adc
addb
cmc
cmpsb
pusha
mov
pop
fidivrl
in
and
jno
mov
data16
jle
xchg
xor
mov
ljmp
out
or
inc
ret
loopne
arpl
xchg
add
adc
gs
fstpt
jecxz
mov
shrb
add
pop
sbb
jb
cmp
loope
pusha
push
movsl
sbb
push
xchg
xor
or
and
pop
inc
xor
jecxz
in
loopne
cmp
mov
ds
mov
mov
test
adc
aam
or
sub
add
ja
call
dec
ds
cmp
dec
add
loope
cmp
loop
pop
sbb
fisubrs
mov
lret
jle
lret
and
shll
jmp
sub
andb
loopne
and
sbbl
sbb
mov
cwtl
push
sbb
adc
jecxz
xlat
jnp
cli
and
std
cmpb
pop
stc
imul
aas
mov
or
loopne
xchg
and
fnsave
lock
inc
adc
sbb
jle
fwait
imul
loope
xor
add
dec
out
or
scas
inc
dec
sbb
add
fcomp
shll
cmpl
mov
out
inc
cmp
add
loope
bound
clc
or
ljmp
mov
adc
or
cmp
cmp
xchg
pop
push
bound
and
xor
gs
cs
sbb
jl
loopne
repnz
lcall
mov
test
repnz
xchg
jl
bnd
shrl
fwait
mov
fwait
clc
mov
shl
pop
dec
adc
shrl
jnp
push
or
push
jmp
jmp
mov
in
pop
int3
fcomps
data16
lods
clc
ljmp
push
add
cld
iret
or
fildl
inc
fcmovu
ret
xchg
or
xchg
jmp
pop
lea
lea
and
inc
sarl
and
add
outsb
xchg
and
push
dec
mov
cmp
pop
jp
xor
add
mov
jl
xchg
sbb
pop
fistpl
not
rorl
inc
pop
adc
lahf
loop
clc
push
fimuls
imul
test
add
sub
pop
dec
mov
inc
in
ret
cmpsb
mov
movsb
bound
inc
fs
popf
xchg
idivb
mov
or
enter
lea
popl
adc
inc
roll
mov
mov
xor
push
cld
daa
sub
out
fdivrs
subb
inc
pushf
sub
inc
lea
test
adc
insl
in
add
in
inc
and
add
and
in
movsl
cltd
adcl
and
shlb
pop
and
push
loope
sub
in
mov
xchg
movsl
jmp
sub
add
lods
mov
test
fsts
dec
cmp
sbb
cmp
mov
movsb
in
and
bound
rol
mov
mov
cmp
cltd
repnz
cwtl
rolb
add
loope
cmp
xor
aaa
aad
testb
daa
pop
repnz
cli
cmp
pop
xchg
jno
and
dec
and
xor
cmp
pop
mov
jge
cmp
shll
sub
out
popf
sbb
pop
xor
and
or
cmc
pop
out
movsl
xchg
cmc
adc
mov
setbe
jmp
cmp
fimull
and
xchg
sub
andl
sti
pop
inc
iret
arpl
sub
into
sub
inc
dec
ret
popa
inc
cltd
cmc
xchg
mov
repz
and
jne
xor
fidivrl
ret
js
cwtl
mov
cltd
cmp
adc
sbb
xor
push
and
push
cmpsl
pop
cmp
mov
jecxz
je
frstor
cmp
out
xchg
dec
push
inc
lock
test
inc
nop
xchg
stc
sarb
jmp
lcall
push
jecxz
loope
dec
bound
add
add
ljmp
sbb
stos
loopne
popf
inc
scas
pusha
arpl
pushf
sbb
lcall
dec
add
jae
add
pushf
xchg
cmpsb
and
fstpt
xchg
jbe
sbb
dec
inc
add
pop
aas
xchg
jmp
xor
add
xchg
jbe
sbb
mov
lret
shll
sbb
int
adc
xchg
cli
aas
xchg
into
adc
sub
into
xor
das
lea
aad
add
enter
add
aad
inc
push
add
push
popa
cmp
mov
fadds
cmpsb
mov
dec
js
gs
pusha
push
cs
and
inc
gs
sbb
sbb
inc
rclb
and
pop
inc
gs
sbb
out
movsl
mov
add
clc
js
add
sbb
stos
adc
or
insb
hlt
cwtl
mov
pop
insb
and
test
negl
jnp
inc
add
adc
push
cmp
push
sub
dec
loopne
and
ret
pop
sbb
mov
add
adc
and
pop
push
push
out
jnp
cmp
jmp
adc
pop
push
push
das
pop
add
lock
or
inc
xchg
pop
fimuls
pushf
xchg
loop
lahf
sbb
push
lret
dec
adc
push
pop
sbb
fwait
hlt
sub
add
loop
dec
cltd
mov
sub
and
lret
in
cmp
fs
adc
xchg
daa
push
mov
push
popf
xor
jnp
xor
std
inc
rclb
inc
clc
and
call
stos
lret
and
inc
clc
push
imul
mov
icebp
add
inc
xchg
xchg
push
imul
lret
mov
scas
push
ret
ja
inc
jmp
repz
xor
in
xor
jmp
xchg
mov
mov
ret
adc
jnp
cmp
out
push
inc
adcl
stos
pop
inc
neg
sub
mov
xor
bound
sub
push
mov
andb
je
ret
adc
ret
sub
xor
xchg
shlb
cld
pop
data16
or
pop
jl
inc
add
inc
leave
aaa
imul
stos
pop
shrl
test
pop
mov
bound
adc
jl
popa
push
add
and
jbe
cmc
adcb
jl
ret
int3
mov
cmp
push
pop
cwtl
pop
leave
daa
cld
cmc
mov
js
cmpsb
fs
xlat
and
push
test
cwtl
mov
inc
inc
add
cmc
pop
xchg
and
pop
cld
movlhps
imul
and
ja
lret
pop
sbb
xor
pop
jnp
cli
sbb
test
xchg
jno
mov
sbb
sti
dec
mov
adc
int3
cmp
stos
popa
mov
cwtl
xlat
cli
fcompl
fsts
add
ret
sbb
int3
arpl
and
imul
push
lds
xchg
inc
cmpsl
push
jae
ja
mov
bound
nop
ljmp
inc
sub
mov
pop
push
mov
bound
pop
adcb
jne
mov
leave
mov
int3
adcb
inc
inc
adc
int3
xor
dec
pop
ret
and
push
lock
sbb
cltd
jne
mov
mov
dec
adc
popa
mov
mov
scas
pusha
adcb
xchg
loopne
mov
mov
cld
aam
ljmp
dec
es
push
addb
add
inc
orl
out
sbb
cmpl
xchg
and
push
gs
add
add
and
clc
sub
cmp
add
and
negl
or
sbb
mov
addb
and
pushf
mov
fdivrp
push
and
negl
push
movsl
mov
mov
mov
loop
xchg
imul
pop
enter
push
or
add
arpl
icebp
pop
adc
pop
inc
test
fidivrs
out
xor
and
sub
mov
pop
data16
xchg
data16
ret
inc
mov
add
nop
adc
lret
sub
xchg
add
rclb
pusha
mov
test
pusha
mov
dec
notb
dec
inc
shrb
rclb
and
fs
xchg
std
and
adc
bound
push
jmp
filds
hlt
jnp
insl
sbb
ljmp
mov
scas
xor
xor
dec
inc
in
in
pop
roll
pop
inc
mov
adc
or
dec
and
fisubl
sub
movl
cmp
add
or
adc
nop
or
adc
dec
inc
adc
nop
or
lret
out
and
xchg
leave
stos
xchg
or
popf
out
sub
out
jnp
sub
push
jns
es
pusha
bound
xor
cmpsl
and
dec
mov
sbb
mov
cmc
mov
push
sti
push
push
inc
or
sub
cmp
fdivs
mov
cmpl
push
mov
inc
nop
mov
mov
sub
dec
and
lcall
cmp
mov
adc
mov
push
rolb
out
push
jae
fistpl
cli
inc
xchg
xor
push
arpl
pop
adc
adc
pop
mov
mov
aaa
addl
imul
xchg
jl
and
rcrb
push
in
xor
lret
lea
cmpl
and
mov
ficomps
pop
add
pop
inc
sbb
adc
stc
and
add
and
dec
inc
jae
and
inc
negl
movsl
mov
paddusw
call
gs
sub
arpl
mov
mov
adcb
add
je
test
and
push
fs
xor
sub
xor
adc
mov
cmc
movsl
clc
dec
add
popa
sbb
das
add
shl
cmp
shll
cmp
inc
add
stos
jns
cmpsb
jnp
fists
dec
add
mov
ja
adc
inc
mov
sub
test
sub
xlat
xor
dec
sub
lods
xchg
ss
sbb
scas
dec
pop
mov
inc
adc
imul
xchg
popa
inc
push
sub
shll
pop
adc
xor
or
sbb
pusha
xor
and
dec
and
in
hlt
bound
push
jmp
push
sbb
std
jmp
and
test
fcomps
mov
ja
test
inc
pop
mov
ret
movsl
cld
xor
and
sbb
lret
out
jo
xchg
or
scas
pusha
inc
and
push
lcall
clc
sub
or
mov
add
jae
xchg
xchg
mov
add
mov
add
sub
or
cmp
mov
adc
cmp
push
sbb
and
fcomps
mov
cmp
test
or
inc
in
test
mov
push
xchg
repz
cli
jp
cmp
mov
jb
pop
pop
incl
cmp
lcall
push
cmp
lds
or
sbb
sub
aaa
inc
repnz
es
mov
sub
rclb
or
adc
jl
and
mov
mov
andl
clc
dec
push
mov
pusha
and
pop
and
pop
lret
enter
xchg
ljmpw
call
add
and
movsb
idiv
cmp
pop
fildl
js
push
push
xor
lea
fisubl
cwtl
xchg
cwtl
sbb
fisubrl
and
adcl
sar
mov
cltd
add
pusha
je
leave
xchg
inc
aam
and
mov
incl
dec
out
xchg
mov
shlb
xchg
sarl
inc
xchg
jno
fildl
sbb
fwait
pop
xchg
pop
xor
mov
xchg
xchg
cli
sbb
cltd
push
cwtl
xchg
clc
cmp
out
scas
insl
jno
push
mov
jp
movsb
add
test
inc
cld
xor
gs
sti
andb
adc
roll
push
dec
and
push
adc
adc
loope
arpl
inc
loop
xchg
sbb
in
push
mov
shrb
mov
cmp
inc
push
repnz
outsb
sub
fwait
mov
add
popf
fcos
dec
lret
gs
js
cmp
ja
sbb
sub
jl
push
sarl
dec
mov
mov
cmpsb
fcoml
bnd
sbb
mov
test
gs
sbb
adc
insb
ret
inc
sqrtps
pop
jmp
repnz
ret
fs
cld
sbb
arpl
mov
xchg
pop
mov
movsb
jecxz
ja
mov
shlb
out
sbb
cmp
cld
ret
push
inc
rclb
push
popa
aad
jmp
repz
mov
mov
mov
fisubl
inc
insb
inc
cltd
push
cli
pop
add
push
ss
sbb
loope
imul
sub
xor
int
xor
cmp
jae
jge
movsl
sub
push
ljmp
loope
push
dec
xlat
fistpl
or
inc
sub
sub
or
pop
dec
ret
sub
sar
fldenv
ljmp
lods
outsl
movsl
fildl
arpl
adc
loop
and
mov
cmp
push
jb
and
sbb
bswap
adc
cmp
mov
outsl
rorb
dec
inc
es
insb
movsl
push
jne
xor
ret
das
gs
add
pop
std
sub
popa
cmp
into
lret
xor
aas
fwait
pop
sub
cmpsb
in
lea
pop
fcomps
cmp
cs
or
xchg
orb
xchg
pop
push
add
sbb
add
jmp
mov
jge
dec
pushf
xor
stos
loopne
jl
pop
test
leave
cld
xor
scas
std
mov
or
mov
jae
and
push
gs
lcall
icebp
sbb
lods
insb
lock
mov
rorl
mov
or
adc
jg
add
iret
pop
mov
stos
add
pop
ja
cmp
scas
mov
loop
mov
or
es
pop
sti
push
sbb
or
or
xchg
ficompl
mov
mov
xchg
adc
les
add
mov
push
faddl
lods
jo
cmc
push
rol
add
loop
sbb
add
or
les
add
rorl
enter
scas
pusha
and
inc
cmp
test
fs
jl
test
xchg
repnz
cmp
stos
jl
popa
push
add
inc
add
shlb
or
jge
icebp
aam
lods
xor
or
loop
loopne
out
mov
add
and
imul
adc
pop
fld
adc
loope
femms
xchg
es
gs
sbb
pop
lea
add
sti
push
mov
es
xor
clc
sbb
popf
add
aam
adc
adc
cld
add
aaa
adc
or
and
or
push
sub
inc
sub
je
out
sbb
sub
adc
jnp
pop
ficompl
cmp
push
push
push
movsb
push
loop
push
push
push
fldenv
scas
gs
pop
xchg
mov
pop
fwait
inc
dec
push
in
ds
ret
and
stc
sbb
inc
inc
and
in
pop
jns
and
adc
jle
adc
rorl
dec
adc
push
mov
repnz
dec
push
daa
inc
sti
sub
xor
scas
fwait
bound
les
or
push
dec
popa
ret
clc
pop
aaa
out
mov
test
lcall
inc
pop
into
mov
cmpsb
rcl
xchg
out
jno
mov
jmp
mov
sub
popa
and
loopne
sub
push
into
rolb
jmp
jp
mov
in
fcmovnu
lret
ja
cmp
pop
mov
mov
sbb
pop
mov
sbb
arpl
sbb
test
push
sbb
inc
insb
dec
push
xchg
pop
dec
pop
pop
mov
push
cmp
dec
mov
pop
insb
mov
shlb
mov
adc
cmp
ljmp
inc
inc
cli
popa
fs
lret
lret
add
inc
ret
daa
rolb
inc
dec
out
sub
shrl
dec
addb
jmp
inc
rclb
lcall
mov
in
lock
les
mov
gs
mov
stc
mov
and
fs
arpl
sbb
fdivs
rcrb
jbe
pop
add
pop
inc
lret
jmp
pop
and
pop
dec
and
pop
add
out
iret
sbb
aaa
or
mov
addr16
int3
ret
sbb
pushf
insb
pop
data16
das
cwtl
rcll
pusha
hlt
sahf
push
loope
jle
inc
cli
adc
or
aaa
add
das
fsubrs
cmp
push
test
enter
mov
xor
pop
mov
dec
mov
cmp
mov
mov
in
stos
je
lcall
pushf
adc
inc
inc
enter
dec
sub
mov
loop
xchg
mov
scas
cmpsb
push
fwait
call
dec
push
aas
xor
pop
insb
sarl
add
add
mov
add
mov
mov
stc
sahf
loopne
dec
push
adc
pop
out
adc
add
pop
adc
lock
into
mov
fidivs
jno
inc
dec
hlt
lcall
xchg
lods
add
in
xchg
fsub
outsb
push
sahf
jns
sbb
pop
shll
rcrb
dec
sbb
loop
xor
out
jp
xor
scas
in
or
mov
sbb
pop
dec
aad
mov
out
aas
push
jp
add
xor
hlt
test
add
out
shrl
mov
aas
push
negl
mov
dec
adc
pop
fs
movsl
dec
mov
add
ret
pop
in
in
sub
mov
mov
and
lods
xchg
pop
add
xor
roll
lret
dec
out
adc
pop
add
and
jns
cmp
popa
enter
xor
add
mov
push
pop
daa
das
inc
jb
add
dec
pop
jecxz
xchg
xlat
or
shlb
push
add
cltd
mov
ljmp
cmpsl
or
jae
mov
pop
push
add
add
xor
cmp
push
mov
rcl
add
pop
push
push
xchg
popl
sbb
push
add
mov
adc
or
sub
ljmp
xlat
mov
test
pop
cli
xor
push
cld
jnp
add
sbb
mov
cmpsb
pop
pop
fwait
add
mov
scas
add
subb
sahf
in
out
jbe
and
pop
add
push
cmp
push
sub
sub
hlt
fimuls
aas
or
out
cmp
or
and
mov
ret
cs
pusha
loope
inc
fsubl
int3
and
xchg
into
and
je
add
enter
movsl
dec
cmp
testl
mov
and
xchg
mov
jns
sbbl
mov
push
mov
sbb
or
sbb
or
jae
je
lret
ja
add
mov
pop
jl
sti
and
or
push
in
daa
scas
lods
inc
es
dec
jp
and
xor
mov
and
shrb
loop
insl
push
arpl
rorb
adc
cmc
mov
and
out
arpl
loopne
sub
jge
cmpsb
pop
cmp
fdivl
cmp
aam
add
movsl
xchg
fucom
add
out
mov
and
and
and
adc
jg
and
repnz
popa
jmp
mov
pop
sub
hlt
cmp
cmp
mov
and
inc
daa
jmp
filds
xchg
xor
and
pop
add
inc
bnd
jp
stos
sub
fadd
ljmp
jb
xchg
fisttpl
jnp
cltd
mov
xchg
inc
out
cli
adc
xchg
out
mov
dec
jp
xchg
dec
xchg
movsl
imul
xor
pop
cmc
sbb
gs
xchg
inc
ja
je
rorl
push
xor
adc
lea
and
xor
mov
out
or
rcll
xchg
add
sub
lock
rclb
mov
aaa
pop
dec
sbb
sbb
jg
xchg
mov
pop
xchg
aas
jmp
test
loope
add
cmp
xor
std
and
popa
and
inc
gs
pop
xchg
int
inc
xchg
mov
cmp
jbe
gs
pop
xchg
fiaddl
and
std
and
andl
pop
sar
adc
lcall
scas
cmp
leave
and
test
or
push
xchg
sahf
addl
out
insb
inc
or
and
xchg
cwtl
mov
pop
icebp
daa
pop
add
out
add
not
in
inc
movsl
mov
xlat
in
mov
incb
ret
pop
ret
add
rorl
xchg
jle
inc
repz
enter
lret
bound
mov
jbe
clc
fld
add
sbb
and
mov
cmp
shlb
ficomps
and
adc
popf
or
pop
push
xchg
nop
cltd
ret
scas
pusha
and
pop
and
les
out
sbb
nop
jmp
lahf
jge
push
icebp
nop
cltd
mov
popa
shr
rcl
jne
sbb
mov
mov
pop
js
cld
xor
dec
pop
ret
shll
mov
and
cvtpi2ps
xchg
sub
inc
cld
push
es
pop
and
shlb
into
arpl
jmp
mov
dec
add
sarl
adc
mov
dec
lret
test
pushf
and
mov
out
popa
push
ret
add
inc
rclb
dec
push
and
rorb
sbb
sub
add
inc
mov
gs
or
test
sub
jae
dec
add
fwait
add
imul
sbb
movsl
add
adc
adc
jae
das
aam
pop
mov
ror
shrb
and
stos
dec
mov
sbb
dec
sbb
mov
cli
enter
or
stos
adc
inc
add
popf
and
and
lea
add
cltd
add
cwtl
inc
sub
inc
adc
xchg
push
test
popf
roll
es
mov
push
xor
lret
sub
cmc
inc
es
cmpl
cmp
pslld
ss
ljmp
cmpsb
or
scas
xchg
int3
push
out
out
mov
subl
jno
hlt
pop
cld
add
rcrb
cmp
mov
repz
bound
in
mov
loop
add
test
cmp
and
or
xor
enter
gs
icebp
inc
lock
call
jne
pop
rolb
adc
es
xor
inc
mov
cmp
insb
lock
call
sbb
sub
lock
das
lds
inc
cli
pop
pop
xor
lock
lock
leave
lret
test
and
jmp
push
and
inc
lock
fisubl
jb
and
jmp
mov
or
xchg
add
xchg
lret
in
add
stc
cwtl
xorl
lahf
cmpsb
add
mov
dec
add
and
mov
loop
loop
stos
mov
add
and
xchg
cmp
and
push
xchg
lods
rorl
adc
or
dec
or
int3
or
mov
add
and
xchg
cmp
and
and
cmpsl
dec
stos
in
mov
mov
xchg
dec
adc
dec
arpl
fiadds
dec
popf
outsl
xor
jg
dec
outsl
icebp
adc
negl
jl
add
loop
xor
inc
fmull
mov
incb
mov
jmp
xor
adc
mov
ret
aam
gs
mov
rclb
adcl
jl
lds
nop
or
hlt
xor
xchg
incb
loopne
mov
or
mov
in
test
push
push
sbb
imul
or
inc
mov
inc
test
pop
shlb
and
and
pop
mov
sahf
pop
in
add
ss
xor
negl
test
aam
and
add
aam
inc
push
scas
gs
sbb
or
cmp
insb
imul
sbb
imul
shll
sbb
das
cmpsb
and
and
adc
lcall
mov
and
push
jecxz
adc
adc
cmp
pop
fstps
testl
sar
mov
xorb
mov
inc
faddl
xchg
push
les
cmp
imul
aaa
or
push
je
in
add
xchg
sbb
addb
or
and
gs
cld
imul
test
sti
mov
loop
mov
sub
push
and
stos
or
add
dec
repz
or
daa
mov
jnp
scas
mov
and
mov
cwtl
in
shll
fcompl
out
and
mov
sbb
push
jp
and
mov
daa
lods
stc
negb
cmp
rep
lahf
arpl
shrb
pushf
push
inc
daa
faddl
inc
in
adc
daa
xchg
rclb
seta
sub
sbb
jnp
and
arpl
inc
je
and
add
je
add
xchg
jmp
stos
add
add
push
pop
shll
jge
adc
inc
and
lds
xchg
lahf
inc
subl
scas
das
movsl
jae
lock
inc
and
loopne
add
insl
or
xchg
push
mov
and
jmp
scas
mov
aaa
jne
fstpl
imul
ficompl
fwait
clc
pop
outsb
pop
dec
push
lock
and
bound
xor
fldenv
push
sar
or
in
push
nop
dec
add
push
or
ret
adc
in
inc
out
jge
and
or
lods
sti
js
inc
int
cmp
in
mov
add
inc
in
pop
mov
clc
mov
scas
lods
dec
in
daa
js
add
jns
add
mov
push
add
inc
and
insl
test
sbb
cs
insl
scas
dec
lods
daa
mov
test
adc
xchg
jmp
mov
cmp
adc
int
stos
jge
inc
push
xchg
jb
iret
adc
popa
idivl
xchg
xor
dec
mov
pop
push
xor
inc
ret
pushf
pushf
mov
aas
inc
dec
addb
orl
cmp
add
out
dec
lods
add
in
outsl
inc
pcmpeqw
push
jmp
into
cli
inc
out
pushf
loope
pop
daa
jecxz
mov
scas
add
mov
lcall
mov
nop
lret
inc
or
popa
mov
mov
sbb
les
or
mov
add
or
jmp
jl
ret
cmpsb
add
in
imul
push
adc
inc
jl
xchg
fildl
cli
cmc
mov
push
movsb
xchg
loop
loop
sub
mov
and
adc
cmpsb
and
std
jnp
xorl
ds
mov
dec
sub
dec
mov
xchg
jbe
mov
and
mov
aaa
test
cmp
jbe
mov
out
test
mov
andb
and
adc
sub
arpl
andl
mov
xchg
cmp
movsl
add
pop
cmp
add
push
push
jno
mov
add
jecxz
add
xchg
jns
and
xchg
xchg
pmaxub
lahf
mov
mov
lret
int
rcl
aad
xlat
fstp
out
jmp
in
out
icebp
repz
idiv
sti
inc
std
jmp
popf
lock
iret
push
xchg
rorl
cmpsl
jno
and
push
das
inc
arpl
or
mov
sub
push
dec
cmp
pop
mov
dec
shll
loope
cmpsl
pop
pop
push
mov
jecxz
icebp
stos
lods
dec
pop
jno
push
sbb
cmc
jno
orb
notb
cs
push
pop
stos
ljmp
pop
jno
lock
sbb
adc
sbb
sti
popl
fnsetpm(287
or
pop
add
cmp
jne
loope
pop
fsts
movsl
add
pop
in
rorb
or
sahf
cld
cs
or
rorl
jle
jl
loop
mov
mov
repnz
adc
ljmp
cmpsl
shll
in
jmp
dec
push
add
cmp
sahf
insl
fisubs
lahf
movsb
test
jb
xor
popa
cwtl
push
jle
ljmp
push
sbb
int
fbstp
cmp
leave
icebp
roll
mov
jmp
add
fildll
inc
and
lret
inc
mov
aaa
lcall
push
add
rorb
add
pusha
bnd
mov
test
imul
dec
mov
push
lock
icebp
cmpb
out
fsts
jnp
imul
add
push
shrl
outsb
fisubl
adc
loope
fnsave
call
sahf
fisttps
icebp
ds
xchg
loopne
scas
fsubs
jge
dec
out
xor
aaa
mov
int
adc
mov
jecxz
cmp
icebp
pushl
add
add
dec
dec
clc
stos
add
pop
into
imul
aad
mov
shrl
add
sub
add
pop
mov
incl
popf
mov
daa
mov
xchg
dec
inc
data16
cmp
aas
add
fnstsw
inc
loope
div
fdivp
pop
inc
jne
xor
lret
out
jmp
sbb
add
xlat
iret
jno
das
repz
cmp
or
je
xchg
outsl
dec
add
xorb
rolb
outsl
les
push
or
pop
add
cmp
jb
dec
xor
jbe
pop
das
pop
lock
or
mov
in
add
insb
repnz
out
shr
dec
ds
or
adc
cmp
xchg
shlb
insb
jnp
or
cltd
mov
pop
fstl
lahf
insb
sub
add
fincstp
pusha
stos
mov
in
lock
sbb
addl
lret
fstpt
nop
or
sti
pusha
mov
fcoms
aaa
fstpt
pop
push
roll
out
scas
insb
xor
imul
pushf
pop
stc
xchg
fdivrp
andl
jae
mov
das
ljmp
xchg
add
jmp
mov
flds
mov
jp
mov
insl
inc
loopne
test
add
in
fdiv
lods
mov
push
add
mov
aaa
add
mov
enter
shl
cmp
js
sbb
mov
daa
ds
xchg
test
movsb
lahf
punpcklwd
mov
mov
pushf
jl
cmp
scas
or
daa
aam
sub
add
out
pusha
into
add
push
pop
xor
ffreep
lods
sbb
mov
scas
ret
add
pop
popa
xchg
mov
sbb
xchg
jmp
jae
scas
cmpsl
sbb
stc
in
lea
lods
rolb
mov
sti
lods
mov
mov
popa
jae
negb
das
sbb
mov
cmc
jb
xor
xlat
add
mov
rorl
sbb
add
call
add
xchg
in
lods
test
mov
mov
adc
push
mov
bound
pusha
pusha
add
jnp
mov
add
cld
push
mov
repz
push
lods
xchg
and
sti
insl
xchg
xchg
jecxz
sbb
lahf
fcoms
push
push
add
shrb
xchg
aaa
jge
rcll
stc
outsl
loop
test
into
mov
pop
fistpl
mov
xchg
xchg
add
and
push
mov
inc
ret
mov
jnp
pop
pop
pop
and
loopne
cmp
sbb
outsl
or
cmpsl
ret
shlb
dec
sahf
test
add
dec
pop
inc
in
push
insb
xchg
cmpb
xchg
cmp
loope
in
jg
jbe
pop
push
lds
inc
ret
mov
and
mov
js
add
pushf
std
cmp
pop
loop
cmp
out
jnp
call
xor
rcl
xchg
icebp
ret
inc
or
add
mov
out
cmc
add
or
push
std
mov
sbb
mov
mov
int
pop
test
ret
sbb
lods
mov
mov
mov
mov
dec
sbb
lahf
call
in
stos
add
sbb
movl
sti
push
mov
add
pop
push
xchg
ljmp
out
xchg
add
dec
daa
int
scas
dec
sub
xchg
aaa
sahf
add
in
add
jg
imul
or
std
repz
sbb
stos
stc
fwait
inc
das
sbb
push
dec
or
loopne
add
dec
inc
popa
je
popa
cld
subl
or
mov
pop
mov
add
loope
jg
xchg
and
add
push
adc
mov
nop
inc
add
dec
push
jg
mov
popl
imul
add
fcmovb
in
std
adc
xor
cmpsb
or
aam
lock
cld
outsb
inc
or
push
pop
adcb
add
pop
int
insl
test
add
idivb
jp
fistps
mov
mov
sbb
and
icebp
pop
je
adc
mov
pop
stos
sub
call
push
sti
repnz
jnp
cwtl
xor
scas
cmp
xchg
push
dec
cmpsl
out
shlb
or
add
adc
addr16
gs
arpl
mov
cmpsb
fcomp
mov
inc
addl
into
sub
jg
push
jle
add
cmp
pop
cmp
add
cmp
mov
fisttpll
add
imul
clc
test
lods
repz
mov
pop
lods
int3
mov
add
mov
pushf
scas
sub
popa
xlat
call
repnz
sub
cld
lahf
test
xor
popa
dec
mov
sbb
mov
add
adc
mov
int
hlt
add
fists
xor
mov
xor
mov
mov
out
push
scas
xchg
faddp
lcall
pop
jns
adc
inc
pop
in
add
insb
jno
les
fiadds
mov
movsb
out
jle
call
and
aad
stos
push
xchg
fiadds
je
out
mul
jno
mov
scas
adc
fidivs
push
push
adc
push
call
add
add
cmp
fdivrs
in
lret
ss
mov
repnz
mov
stos
enter
movsb
rol
in
clc
inc
or
pop
add
pop
pop
cmp
xor
fld
add
rol
jne
insl
lock
mov
push
adc
scas
pushf
sbb
add
int
mulb
inc
and
add
div
icebp
sbb
mov
xor
insl
jl
dec
pop
sti
call
cld
ljmp
adc
inc
rol
mov
push
add
mov
testb
dec
pusha
test
aad
xor
out
push
adc
out
push
add
push
mov
daa
xchg
mov
sub
ljmp
scas
lret
xchg
shrl
sbb
mov
sarb
or
inc
inc
lods
js
add
shr
xchg
into
add
sbb
push
mov
fdivl
addr16
scas
or
pop
test
leave
mov
fcoml
xlat
gs
ror
cmpsb
jmp
sahf
hlt
cwtl
jo
cmc
call
shrb
jno
push
call
pop
sbb
shlb
js
in
frstor
mov
mov
adc
and
cli
outsl
jb
stos
mov
sub
loopne
mov
sahf
mov
pop
cmpsb
stc
or
iret
into
fbstp
pushf
lock
push
pop
pop
or
test
cmc
adc
repnz
mov
and
cmp
or
int3
mov
roll
loopne
add
and
subl
push
pop
mov
add
cmp
rorl
sar
pop
jl
or
push
inc
pop
outsl
sub
ret
mov
add
add
addr16
jmp
cmp
or
or
or
pusha
mov
repnz
aaa
xchg
push
stc
inc
xlat
add
sar
adc
pop
adc
lret
fincstp
lock
mov
out
push
xor
adc
in
mov
sbb
jg
xchg
popa
dec
cmp
adc
sti
push
add
pop
stc
pop
rcr
and
scas
mov
shl
mov
pop
hlt
roll
repnz
add
outsl
mov
push
repnz
cmp
jae
lods
add
adc
and
xor
jl
xor
sub
cmp
out
lea
loope
lret
xchg
adc
fdivl
loopne
dec
fwait
sbb
ret
lret
or
sti
add
fidivs
add
push
enter
shlb
repz
jb
rcl
pop
mov
add
xchg
fs
mov
andb
mov
pop
lds
clc
add
push
inc
sub
push
pop
sbb
lret
mov
push
out
cmc
scas
clc
jmp
sub
push
xor
mov
add
stc
ret
mov
sbb
andb
cli
mov
pop
cmp
add
or
dec
xchg
rolb
in
jge
mov
test
mov
lock
push
mov
enter
adc
pop
int
dec
or
xchg
xchg
pusha
scas
sbb
fsubrp
add
in
mov
jl
push
scas
sbb
orl
divb
xlat
out
or
adc
pusha
xchg
test
mov
cmp
je
shll
mov
ljmp
mov
mov
mov
stos
dec
rol
loopne
icebp
xchg
jae
test
xor
mov
pushf
mov
lods
xchg
inc
or
mov
and
add
adc
subl
scas
jp
sub
dec
add
mov
add
nop
jae
xor
ja
mov
xlat
pop
mov
mov
enter
stc
xor
add
mov
cmp
add
jge
test
stc
sbb
add
push
dec
into
stos
pop
lret
pop
ja
mov
or
insl
decl
fwait
mov
jne
cs
add
cwtl
add
pop
mov
add
mov
mov
arpl
call
pop
testb
pushf
mov
aaa
add
cmp
mov
cli
add
idivl
pop
lds
mov
and
sbb
filds
bound
mov
sub
inc
jp
mov
fildl
aad
jns
loopne,pn
out
adc
shlb
enter
cltd
ja
popa
insb
mov
das
movsl
push
test
mov
sti
or
sub
insl
push
xchg
popf
pop
add
stc
addr16
xchg
add
out
pop
dec
nop
mov
ja
adc
or
dec
mov
jns
or
popa
in
pop
into
mov
sahf
lret
mov
out
or
movl
pop
mov
mov
mov
jmp
adc
add
ss
into
popa
cmpsb
sub
rorl
push
test
add
cli
and
ljmp
ja
jmp
pop
jns
or
xlat
sbb
adc
das
out
cld
ja
jl
cmp
iret
add
xchg
adc
dec
add
jo
add
loope
fidivrs
movsb
inc
and
repz
mov
pop
sub
js
lahf
test
push
bound
jle
lods
in
add
lods
scas
subb
stos
rol
ret
lock
movsb
xor
in
stos
mov
adc
add
stos
xor
popa
mov
lea
mov
or
popa
push
clc
ds
adc
xchg
dec
popa
rorl
jl
das
popf
push
in
mov
push
lods
add
add
cli
scas
mov
cmc
jl
negl
ficoms
mov
xchg
add
imul
inc
push
sbb
sub
xchg
xchg
sbb
cld
cli
pop
or
and
mov
mov
ret
add
xor
mov
loopne
mov
sbb
adc
stc
hlt
mov
jae
fbld
mov
das
push
xor
pop
jge
mul
lahf
xchg
popa
jl
pusha
adc
pop
rcl
aam
sub
push
in
and
pop
ror
push
das
adc
mov
adc
out
add
jle
out
dec
cwtl
iret
add
data16
xlat
aad
arpl
pop
movsb
mov
cmp
ret
fdiv
adc
js
xchg
mov
lea
mov
mov
mov
add
xor
shlb
push
push
jp
or
out
add
jo
out
lret
sbb
outsb
in
repnz
sbb
add
call
mov
fsubl
adc
inc
clc
add
xchg
lods
sti
jmp
jl
sbb
stos
jecxz
loope
lcall
cwtl
push
loope
rol
mov
mov
fldcw
sbb
and
daa
arpl
imul
pop
push
or
loopne
mov
clc
cmp
mov
mov
and
js
inc
fiaddl
or
scas
mov
and
sbb
sub
outsl
ljmp
or
popa
xor
repz
hlt
jp
stc
mov
sub
push
mov
decl
mov
in
mov
pop
out
loopne
in
xchg
fstl
add
mov
mov
jnp
popa
xlat
daa
clc
cmp
pop
aam
lds
inc
shrb
cmpsl
lahf
scas
and
test
test
sbb
flds
clc
insb
and
cmpsl
ret
stos
xchg
movl
jmp
dec
lods
in
add
mov
pop
in
stos
fcoms
xlat
jl
outsl
into
add
imul
insl
loope
std
sub
decb
popf
dec
add
jb
rolb
ret
iret
jge
mov
in
mov
mov
shl
sub
aaa
pop
adc
cwtl
jmp
imul
movsl
jns,pt
and
mov
sub
sbb
fnstcw
pop
add
add
jl
push
jb
sbb
call
or
pusha
adc
lcall
xlat
sbb
cltd
loop
push
add
pop
mov
enter
jo
and
xchg
pusha
mov
pop
pushf
mov
insb
sbb
add
pop
add
test
cmc
aad
imul
lret
sbb
daa
jg
nop
pop
in
lods
mov
and
dec
stc
or
lock
filds
dec
sub
jp
or
pop
adc
add
gs
mov
pop
xor
jp
or
add
rol
leave
loope
pusha
cmp
fwait
ja
push
jno
dec
mov
scas
pop
pop
mov
pop
cmp
fdivr
or
jne
jle
insl
enter
inc
ja
pop
xchg
sub
add
mov
popa
sahf
mov
pushl
in
in
dec
jg
mov
sar
sti
ret
fwait
inc
push
into
pop
jl
sbb
pop
ret
icebp
fdivr
mov
jg
test
fistpl
je
and
push
cmp
push
sbb
movl
lret
fnstenv
aaa
inc
inc
cmp
popa
add
lcall
loope
xchg
pop
add
out
popa
bnd
ljmp
dec
adc
ret
jge
mov
leave
dec
jnp
fwait
add
ss
je
jmp
lret
fs
loope
jno
push
scas
out
adc
dec
std
cmovae
lea
dec
cmpsl
psubw
jnp
ds
and
icebp
loop
movsb
push
pop
sbb
bound
jp
insl
lcall
hlt
push
aad
push
sub
enter
jmp
iret
pop
into
push
push
add
fisttpll
das
sub
inc
pop
sbb
jno
out
cmp
mov
std
imul
test
shrl
mov
mov
cmp
jl
lock
cmp
cwtl
add
xor
imul
out
mov
cmpsb
pushf
push
xor
sbb
or
leave
das
sarl
es
add
ds
ljmp
sub
cmp
in
xor
pop
shll
pop
pop
jns,pt
daa
sbb
imul
bound
outsl
nop
cs
stc
or
cld
jne
cmc
insl
xor
loope
ret
arpl
adc
add
pop
fstps
sbb
mov
mov
xchg
aaa
adc
call
sarb
daa
repnz
cmp
lret
pop
test
pushf
dec
mov
imul
add
jmp
add
mov
mov
or
pop
push
je
inc
test
rolb
in
adc
jo
aaa
sarl
sub
add
std
lock
push
int3
je
add
sub
dec
add
adc
fcmovb
sub
sbb
stc
in
cmp
sahf
mov
xor
ficoms
add
and
add
clc
add
jb
rolb
adc
lahf
cmc
pop
ja
add
xlat
arpl
xchg
lock
sbb
loopne
cmc
mov
jns
ret
lods
dec
xlat
add
or
sti
lret
add
pop
iret
jnp
in
mov
fildll
fisttps
push
cli
lock
movsl
mov
add
idivl
lds
xlat
sbb
cli
add
cmc
cmp
jl
lahf
je
outsl
out
mov
rclb
cmp
pop
mov
add
fsub
mov
repnz
mov
outsb
sahf
cmpsb
mov
add
mov
mov
jl
mov
dec
xchg
std
shrb
jb
outsb
cmp
add
sub
popa
mov
push
and
jl
pop
xchg
push
shlb
int3
inc
add
fdivl
stos
dec
cmp
insb
aam
roll
mov
jmp
mov
in
dec
leave
aam
dec
cmp
inc
jecxz
jle
cmp
add
addr16
sti
popa
push
mov
in
mov
test
adc
sub
out
ja
cld
add
iret
push
xor
xchg
or
and
mov
sahf
jecxz
push
lahf
shrb
sahf
jmp
shl
jne
sbb
fdiv
outsl
mov
loop
aaa
jns
push
sub
pop
or
fwait
push
sarl
lcall
mov
adc
xor
mov
cmp
es
xor
pop
ror
adc
mov
adc
add
stos
and
add
into
call
test
add
xchg
dec
iret
fidivrs
mov
inc
dec
fldcw
xor
shrb
mov
loopne
mov
sbb
ret
out
aad
popf
add
mov
cld
fidivs
mov
pop
jg
cltd
fcomip
add
cmp
and
clc
loopne
jnp
add
jbe
loop
mov
ljmp
pop
nop
push
repnz
aaa
in
lods
out
cld
repz
adc
nop
jge
mov
lcall
sub
xchg
ss
test
and
repnz
pop
call
push
cmp
mov
add
lahf
push
imul
adc
or
popf
push
popa
pop
pop
cli
jnp
movsl
add
jmp
xchg
xchg
imul
pop
jecxz
in
xchg
or
sti
fmull
jbe
mov
mov
push
adc
cmp
cmp
pusha
hlt
fildll
idivl
jno
js
and
out
add
cld
lock
pop
push
popa
cs
fdivrs
inc
test
jbe
fdivrl
xchg
out
jg
xor
ja
cmc
pusha
lods
sbb
xor
scas
data16
jb
fucom
in
fisubl
shl
add
stc
std
into
fwait
hlt
popf
rcr
inc
xor
push
fs
in
sbb
add
cld
jp
cwtl
lock
enter
and
loop
icebp
popf
pop
add
ficomps
popa
rclb
scas
je
add
mov
mov
push
or
add
fnstcw
pop
jg
inc
jmp
loop
lahf
adc
test
cmc
sub
ja
dec
cs
push
or
jp
lahf
mov
lock
fstl
mov
repnz
cmp
add
imul
jae
sti
jl
xorl
daa
insb
out
rcrb
add
mov
je
add
int3
xor
in
lock
out
jbe
dec
std
pop
lret
loope
jle
xlat
sbb
je
mov
jne
or
dec
out
pop
pop
xlat
push
xchg
lock
jo
sahf
sub
mov
mov
insb
add
mov
orb
fiaddl
movsl
jnp
jle
ss
inc
jb
scas
ret
cmc
mov
xor
sti
mov
shlb
jg
pop
shll
inc
fxch
mov
repz
add
test
add
add
call
pop
mov
mov
in
adc
out
sbb
loop
add
sub
push
or
jg
sbb
icebp
call
cmc
and
xlat
cli
ds
mov
jle
sbb
dec
hlt
mov
jg
mov
pop
iret
or
ret
mov
dec
pop
mulb
in
add
loop
inc
push
dec
push
or
sar
cmc
loop
mov
pop
mov
out
outsl
sub
xchg
jns
movb
or
test
lsl
adc
rorl
mov
vpunpckhwd
mov
adc
pop
push
inc
les
jmp
inc
and
or
or
inc
aad
xor
in
adc
popa
mov
out
frstor
dec
inc
add
dec
rorl
cmpsl
inc
cmpsb
test
mov
orb
add
push
xchg
popf
inc
lahf
add
inc
or
cmpsb
movl
popa
imul
out
in
int3
and
shrl
loope
inc
lret
loopne
imul
cmpsb
xor
jmp
sub
add
ret
mov
inc
inc
in
dec
out
lock
lea
insl
add
daa
push
mov
push
lods
mov
in
jmp
xchg
add
dec
pusha
scas
rcl
icebp
push
dec
imul
imul
lods
jmp
in
mov
and
pop
mov
xchg
pusha
adc
aam
mov
es
sarl
xchg
clc
push
lods
pop
sub
imul
xchg
andl
into
jmp
push
xor
lahf
cmpsb
sbb
inc
add
in
add
scas
rorb
mov
xchg
stos
outsl
in
lods
sbb
sub
imul
pop
ret
das
or
or
stos
mov
jge
mov
add
sbb
push
sub
test
inc
sub
add
xchg
jecxz
in
lea
scas
inc
and
les
out
lret
xor
dec
in
imul
and
icebp
lret
xchg
add
xor
ljmp
repnz
push
sub
ret
pop
xor
pop
sub
add
bound
jge
int3
out
or
or
subb
mov
add
shrl
shrl
and
sub
adc
sbb
daa
sub
loopne
mov
push
and
xchg
lea
test
and
mov
outsl
inc
out
cltd
movsl
repnz
mov
imul
shrl
add
or
cmp
rorb
dec
out
into
outsl
sub
insl
in
scas
aam
mov
pop
or
outsb
inc
lods
popl
test
js
jnp
rorl
stos
pop
sub
imul
lret
test
sub
test
mov
xchg
xchg
test
mov
gs
inc
in
stos
or
cs
or
or
fs
or
out
in
or
imul
scas
movsb
je
je
push
or
push
into
sub
pop
inc
rorb
xor
cli
fwait
adc
or
mov
stos
pop
mov
add
outsl
mov
popw
icebp
add
in
out
adc
xchg
pusha
nop
enter
inc
daa
pop
xchg
cmpsb
sti
sti
mov
jle
lods
jno
dec
insl
repnz
inc
cmp
rol
out
adc
int
push
in
outsl
lods
lods
pusha
add
dec
out
add
pop
push
test
clc
ror
inc
sub
into
fstps
mov
cwtl
test
pop
or
mov
mov
mov
cmp
sub
and
cmpsl
inc
push
sub
mov
and
add
addr16
mov
repnz
xchg
xchg
lahf
jae
mov
dec
xor
add
xorl
clc
inc
clc
rorl
sub
xchg
cmpsl
cs
popa
loop
ljmp
xchg
daa
hlt
jmp
or
inc
push
inc
xor
rorb
jecxz
xchg
sub
sub
or
jecxz
push
maskmovq
jbe
xchg
subb
mov
dec
dec
cmpsl
or
out
data16
add
stos
push
out
lea
inc
sbb
test
out
faddl
call
js
lret
rol
outsb
inc
enter
push
push
xchg
xchg
sub
fldl2e
sar
int3
popf
xor
or
out
insl
scas
jbe
xor
push
mov
insl
ficoms
xchg
and
stos
lahf
outsb
pop
cmp
repz
mov
sti
lods
mov
push
outsl
aas
cmp
fisubrs
dec
int
mov
inc
in
lods
out
dec
bswap
push
push
add
pop
sbb
jecxz
repnz
and
lods
pusha
pusha
jp
das
cmp
outsb
into
psubusw
not
or
or
inc
icebp
add
test
xchg
loope
and
dec
jge
add
int3
mov
adc
rcl
sbb
loope
popa
shll
fucomi
out
mul
enter
inc
popa
loope
idivb
outsb
shll
leave
addb
rcll
scas
outsb
inc
add
push
sbb
sub
mov
add
das
xor
dec
xor
lds
xchg
and
cmp
push
aas
push
push
mov
mov
leave
out
insl
push
clc
pop
or
pop
pop
pop
lea
jae
lods
jne
jns
add
or
jg
inc
sub
dec
and
in
sahf
nop
in
mov
repz
xlat
into
in
mov
dec
loopne
push
lock
int
mov
push
cmp
sarl
and
xor
lock
and
add
xor
add
and
or
pop
jecxz
push
xchg
aas
add
lds
add
jae
xchg
pop
and
xchg
mov
aaa
jg
es
xchg
xchg
xchg
imulb
mov
jle
push
jmp
pop
cwtl
scas
pop
or
add
adc
sbb
sbb
add
sub
sub
xor
xor
cmp
cmp
inc
inc
dec
add
dec
push
push
push
push
pop
jecxz
pop
pop
add
jecxz
add
adc
add
pop
mov
jmp
push
xor
cmpsl
cmp
push
mov
popa
adc
pop
cmp
pusha
jecxz
sbb
sbb
push
aas
idivl
or
inc
pop
add
or
dec
loopne
int
mov
fidivrs
xor
pop
add
ret
add
std
mov
add
ja
or
dec
jle
pop
sub
movzwl
jmp
add
movsb
jb
push
aam
add
xchg
mov
cmp
test
in
push
pop
fbld
jae
add
out
scas
jp
xchg
nop
je
sbb
push
adc
fisubs
adc
sahf
mov
lods
mov
cmpsb
pop
cmpb
sub
aas
outsb
cmp
jecxz
or
pop
add
outsb
sbb
fdivrl
popa
jecxz
pop
sub
push
jb
sbb
stos
lds
adc
nop
loope
addr16
daa
mov
and
inc
sub
jmp
loope
fs
cli
xchg
xor
pop
sbb
xchg
xor
add
mov
sbb
mov
jecxz
cmpsb
pusha
add
mov
call
in
xor
rcr
imul
jmp
lret
fwait
pushf
jo
inc
pop
das
sbb
in
aas
xor
add
ret
out
dec
add
out
sub
scas
mov
lahf
cmpsl
cmp
inc
fwait
and
and
aad
loop
jge
int3
add
jns
sub
jne
jnp
mov
lcall
fwait
sub
add
scas
xor
repz
ds
incl
jp
scas
push
jl
add
dec
sub
hlt
add
outsb
xlat
push
mov
daa
add
jno
pop
jg
add
pcmpgtb
movsl
jb
cmpsl
ret
mov
adc
pop
inc
add
xor
ret
clc
pop
sahf
nop
js
outsb
cmp
rclb
add
and
nop
cli
cmp
add
inc
ds
mov
mov
fwait
or
and
outsl
pop
sbbb
jo
test
xchg
lea
cmpsb
es
add
lds
std
add
cs
mov
push
out
xlat
ja
add
gs
mov
mov
xor
sar
sbb
xchg
push
jl
iret
mov
loopne
daa
jge
rorl
aas
xor
inc
jns
jo
jecxz
out
add
js
ret
aad
cmp
adc
adc
stos
sbb
loopne
xchg
jb
paddusw
adc
add
and
jg
movsb
leave
gs
cli
lahf
cmp
mov
mulb
jmp
inc
ljmp
scas
outsb
jge
mov
popa
dec
mov
repnz
adc
sub
into
insb
or
push
mov
and
inc
xor
movsb
cmp
dec
sti
cmp
loope
pop
jb
jnp
or
add
mov
test
fucomp
enter
bound
add
mov
pop
cmpsl
add
mov
cwtl
pusha
push
lods
add
cmp
movsb
xchg
jl
js
add
xchg
iret
clc
movsl
push
orl
das
xchg
mov
aad
aaa
dec
add
pop
popa
mov
and
jle
pop
adc
inc
cmpsl
fstp
add
sbb
sub
add
out
imul
neg
xlat
add
add
mov
call
out
dec
iret
mov
cli
xor
dec
or
stos
xchg
mov
add
test
xor
push
push
push
data16
sbb
dec
int3
stos
aam
add
and
and
add
mov
jmp
lcall
sbb
or
mov
inc
mov
ret
lods
ja
sbb
add
push
ss
dec
dec
add
mov
xlat
jne
xchg
ljmp
pop
dec
or
mov
jl
mov
lahf
add
sti
inc
fdiv
mull
lret
clc
add
and
ss
loopne
loopne
and
gs
mov
jmp
lahf
ds
sbb
and
adcb
scas
sbb
mov
sub
push
mov
add
imull
popf
xchg
ss
fcoml
icebp
call
or
rcll
cmp
sahf
mov
loopne
pop
dec
shll
mov
sbb
xor
sub
pop
in
adc
sarb
add
push
fs
dec
sbb
mov
pop
mov
or
add
les
repz
add
xchg
or
add
mov
xor
pop
mov
push
outsb
icebp
inc
pop
fwait
vmovupd
loope
nop
adc
push
pop
jl
scas
das
scas
aam
das
test
leave
enter
mov
loope
imul
sbb
adc
cld
out
sub
pop
push
pop
pop
xchg
and
mov
and
cmp
insb
mov
pop
cli
and
mov
daa
std
sbb
fsub
add
xor
in
popa
fnstsw
sub
push
jmp
pop
ffreep
dec
popa
sub
jns
and
nop
negb
ljmp
push
mov
add
rclb
gs
cmp
cmp
mov
add
xorl
add
jp
cld
in
test
js
movsb
push
aad
add
fcomip
mov
clc
popf
mov
hlt
push
testl
xor
push
push
iret
inc
mov
dec
aaa
add
jmp
roll
test
cmpsl
in
cwtl
xchg
add
mov
pop
sub
loopne
push
jecxz
filds
jae
insb
ficoms
cmp
push
rcl
sbbl
jge
adc
mov
roll
push
xchg
ss
test
mov
mov
adcl
push
fidivrs
xor
movswl
pusha
repnz
sbb
aaa
outsl
sub
fldl
mov
stos
xchg
inc
pop
or
mov
and
push
mov
subps
mov
dec
repnz
jbe
jbe
call
mov
xor
insb
mov
ret
lahf
ffree
icebp
push
mov
fisubs
pop
push
test
adc
lods
dec
das
and
cmp
hlt
sbb
add
loope
sub
in
mov
shll
dec
add
mov
fdivrs
push
mov
jl
movsl
rcl
scas
test
mov
fldt
and
mov
test
nop
adc
sahf
cltd
dec
sbb
add
push
ss
add
mov
leave
in
jnp
ffreep
jle
cmp
sbb
add
inc
add
jnp
adc
inc
fcompl
and
add
imul
adc
out
sub
xchg
cmpsl
jns
pop
push
sub
imul
in
les
mov
aas
jmp
std
push
push
dec
out
inc
push
sti
popf
aaa
push
cld
add
push
hlt
and
xlat
and
es
mov
inc
movsb
leave
aaa
sub
sahf
insb
test
ret
divl
pushl
lcall
dec
mov
mov
jg
add
pop
mov
pop
pop
xlat
loop
mov
fidivrs
sbb
xchg
sbb
mov
aaa
add
shrb
mov
aas
push
mull
sub
inc
and
sti
sbb
sbb
add
imul
xor
data16
lret
add
jno
mov
adc
mov
sub
test
inc
into
inc
add
ror
inc
and
push
test
popa
mov
dec
push
data16
add
fs
sub
dec
add
sarl
insl
or
ret
scas
gs
and
in
rolb
push
mov
pusha
enter
mov
cmpsl
cwtl
fnsave
jne
mov
fimuls
add
xchg
rcr
adcb
xor
mov
mulb
andb
add
aam
scas
push
adc
leave
ja
shll
push
repnz
and
cmpl
dec
popf
or
movsb
lcall
ljmp
lahf
lods
scas
popa
je
dec
repnz
cmp
mov
rolb
adc
jno
xor
les
or
orb
iret
iret
stc
add
jmp
dec
mull
lret
nop
iret
lock
mov
negb
addl
xor
outsl
mov
ficoml
mov
sarl
add
adc
lret
das
or
mov
imul
xorb
adc
cmp
ja
cwtl
movsl
add
add
jo
adc
sub
les
out
dec
jmp
iret
add
mov
cmpsl
mov
push
xchg
imul
jp
or
mov
sub
inc
xor
mov
add
adc
ss
fcompl
sahf
lret
jmp
add
aas
sub
mov
inc
add
imul
mov
arpl
sarb
in
cmpsb
outsl
xchg
iret
lcall
add
sub
mov
sub
pushw
mov
insl
pop
mov
popa
add
ja
sub
jbe
jle
in
push
adc
and
ss
scas
outsb
sub
or
push
js
lret
ljmp
fstpt
add
inc
movsl
aam
mov
push
outsl
adc
inc
test
fmull
adc
out
fdivrs
add
inc
lods
dec
leave
sub
lods
push
xlat
stc
mov
icebp
stos
inc
push
dec
sub
sbb
mov
mov
add
mov
push
pop
into
adcl
repnz
jg
dec
fisttpll
pop
inc
sbb
aas
cltd
mov
loopne
add
pop
mov
pop
pusha
dec
or
push
adc
add
mov
in
push
jl
sti
pop
sahf
add
cmove
xor
fldl
pop
pop
add
jbe
int
dec
add
cmp
mov
cld
out
sbb
jl
jbe
inc
iret
sbb
and
jp
mov
std
or
jno
lret
stos
pop
test
mov
pop
push
orl
fildl
in
dec
cmpsl
mov
insb
mov
xchg
shl
sbbb
frstor
jle
jb
in
mov
setnp
sahf
ljmp
add
push
jo
xlat
ficomps
jns
lea
push
sub
or
imul
or
int
repz
add
ljmp
cmpl
outsb
add
and
xchg
or
lea
add
lret
mov
mov
sbb
incb
adc
out
shl
cld
jp
nop
cmp
int
cli
mov
out
jbe
sbb
imul
xchg
mov
int
in
and
loop
xor
inc
mov
imul
cltd
add
lret
loopne
pop
jl
add
lds
sub
rolb
xchg
call
fisttps
adc
mov
imul
xor
not
loope
loopne
js
pop
xor
out
sub
or
add
mov
add
outsb
cld
in
insb
ret
data16
mov
push
cmpsl
or
aam
xchg
pop
ror
in
jmp
sbb
push
inc
mov
test
faddl
dec
sbb
aas
or
push
test
mov
out
fimull
jnp
xchg
and
or
clc
add
movsl
dec
mov
shlb
aam
ds
mov
and
gs
cmpsl
inc
mov
cltd
jmp
cs
scas
popa
jp
cmc
jno
cmp
adc
add
test
push
sbb
dec
ja
cmc
and
jl
scas
jae
xor
andl
cmpsb
add
shlb
or
stc
movsb
add
jle
repz
insl
nop
push
aad
adc
fiaddl
fwait
ss
cmpsl
sbb
sub
pop
inc
inc
push
add
cmpsb
les
mov
shr
stc
cmp
sbb
cs
sbb
cmp
sbb
mov
incl
xor
fnstsw
mov
stc
cmp
mov
sbb
push
les
mov
sbb
jl
xor
mov
mov
test
clc
and
jbe
pop
je
add
mov
push
cmc
aam
add
insl
jnp
sub
stc
out
and
rcrl
je
lahf
ds
popf
mov
add
cmp
movsb
dec
in
clc
test
cwtl
add
fists
loop
rsqrtps
test
mov
cmpsl
push
mov
and
int3
add
or
test
pop
sbb
add
enter
cltd
jbe
fwait
les
mov
pop
mov
inc
out
add
xor
add
sahf
jae
loope
fistpll
fldt
add
cli
roll
sarb
mov
add
mov
add
stos
inc
add
rcll
enter
sti
out
das
lahf
sbb
test
aam
add
or
push
lods
dec
or
imul
xor
push
xchg
test
lock
mov
and
dec
jp
or
enter
or
fbstp
add
ljmp
push
outsl
enter
jns
fidivs
pop
mov
mov
roll
add
mov
lock
stos
outsl
sbb
dec
mov
hlt
std
push
xor
popf
sbb
add
mov
push
cli
inc
mov
add
xchg
dec
jbe
loop
dec
add
sbb
je
out
add
sarl
dec
and
sarb
out
rcr
leave
fsubl
arpl
adc
ja
add
dec
xchg
xchg
popl
stos
add
inc
sbb
xchg
cmpsl
sbb
sti
test
fcompl
jnp
shll
loopne
push
rorb
mov
std
add
aad
add
stc
pop
loop
adc
or
mov
push
adc
mov
xor
hlt
das
mov
out
sbb
xchg
xchg
mov
insb
adc
inc
pop
cld
add
mov
cli
cwtl
pushf
data16
add
scas
lret
sbb
lods
imul
inc
sarl
inc
dec
pop
cmpb
add
cmp
xchg
xchg
add
out
movsl
mov
out
cmp
and
inc
sbb
lods
aaa
mov
sbb
iret
cmpl
leave
imul
sbb
ret
inc
rorl
dec
add
adc
add
xor
add
inc
shrb
lcall
mov
push
in
mov
call
pop
add
out
jbe
out
mov
sbb
and
and
xor
dec
into
and
loop
jge
lret
enter
mov
mov
fcoml
add
mov
movsb
popf
call
sarl
and
xchg
lahf
or
loop
outsl
aam
or
roll
xchg
out
nop
pop
or
rclb
push
je
fiadds
push
pusha
mov
inc
pop
pop
add
sti
push
iret
dec
outsb
mov
cltd
mov
out
inc
daa
adc
sti
mov
xchg
pop
push
cmpsb
sbb
sub
popa
inc
ja
inc
repnz
add
cmc
subb
jecxz
pop
push
add
xchg
loop
push
push
les
hlt
add
stos
mov
imul
adc
int3
push
or
loopne
adc
lret
jno
add
nop
mov
ret
inc
and
pushl
dec
test
add
fnstsw
hlt
fisttps
xor
mov
mov
das
aad
addb
loope
mulb
lcall
stc
lds
add
outsb
loopne
dec
test
in
popa
ja
ret
into
negb
mov
scas
adc
add
adc
sub
mov
add
imul
cmp
mov
xor
repnz
push
xchg
fcomps
lea
jae
mov
inc
and
test
push
insb
jo
cltd
cmpsl
mov
sub
into
movsl
insl
xorl
fwait
jns
outsl
rep
enterw
aaa
stos
insl
xchg
xchg
and
imul
mov
add
lock
loope
mov
jae
pusha
mov
pop
xor
in
jns
jmp
test
clc
push
dec
xchg
add
pop
sbbl
pop
xchg
mov
outsb
xor
flds
cmp
icebp
ror
add
adc
test
xor
cltd
not
xor
fiadds
fcmovnb
mov
enter
in
push
jmp
dec
stos
lea
jecxz
sarb
cwtl
out
inc
test
das
xchg
add
adc
lcall
in
pushf
testb
mov
xchg
js
int
popa
bound
pop
or
and
popf
push
test
add
daa
scas
push
mov
sarl
dec
xchg
pop
ds
jmp
add
push
adcb
inc
push
popf
pop
sub
mov
xor
rclb
add
jge
mov
lds
repz
rorl
inc
or
xor
dec
lock
inc
popl
into
das
adc
adc
leave
or
sbb
adc
mov
rolb
test
lahf
sub
lea
notb
push
xor
and
hlt
mov
cmp
dec
cs
push
add
mov
scas
out
int3
add
dec
lcall
xlat
out
add
repnz
push
add
push
mov
jp
ss
add
shrb
in
test
shl
mov
sub
test
add
jo
ucomiss
push
jae
stos
loope
fstps
sub
cli
rcr
addr16
shlb
iret
in
add
jl
orb
add
ljmp
inc
arpl
add
test
ret
and
jae
into
mov
add
inc
xor
std
rolb
das
or
test
xchg
icebp
aaa
daa
test
add
lock
xchg
sub
arpl
inc
mov
mov
cld
sub
mov
jae
jmp
mov
mov
fs
loope
repnz
pop
adc
sub
add
jae
mov
xor
fidivl
push
pop
js
pop
mov
mov
jo
nop
lock
and
xor
sub
out
aaa
loope
push
lods
insl
in
mov
pushf
push
add
fiadds
lea
mov
and
cmpsb
sbb
call
enter
xor
mov
adc
fs
pop
cmc
icebp
and
push
sbb
clc
dec
and
pusha
xorb
add
xchg
ss
adc
test
in
filds
pushf
xchg
add
in
pop
cmc
inc
movq
and
popa
sub
sbb
xchg
movsl
popa
lcall
inc
pusha
loop
pop
push
mov
xor
je
xor
fmul
inc
xchg
scas
test
stos
aad
daa
pop
int3
add
mov
push
das
xchg
adc
test
pop
pop
outsl
mov
out
bound
std
jge
scas
sbb
or
add
push
mov
add
dec
xor
lahf
ss
add
not
fidivrs
fsubs
mov
ja
xchg
and
loop
rorb
aaa
loope
aam
lock
ja
inc
push
add
call
js
add
fcomip
jbe
xor
add
push
or
outsb
mov
fsubrs
mov
jmp
or
cmpsb
xchg
imul
ja
add
jl
mov
bound
sbb
sbb
popf
add
or
adc
out
inc
popa
sti
fcoml
xor
push
adc
ret
mov
fists
ss
jb
clc
add
repz
pop
loopne
and
push
cli
cmp
or
mov
fnstsw
fdivl
arpl
gs
jnp
ret
cli
pusha
clc
popa
ja
ret
ret
jns
sbb
rolb
jmp
sub
aam
sub
cltd
dec
add
std
xor
xlat
sbb
sbb
lods
loope
repnz
add
test
jge
sahf
mov
and
ja
xchg
lds
popa
aam
xchg
sub
jmp
adc
scas
incb
mov
mov
lret
sarb
add
xchg
aas
fwait
push
cmp
or
mov
push
add
pop
sbb
cli
sbb
rcr
cmpsl
fwait
push
or
fdivrl
lret
loope
shl
add
add
pusha
and
jge
adc
rcr
jbe
pop
test
outsl
add
dec
lea
repz
pop
movsl
pop
cmp
out
mov
fcompl
insl
ret
int
or
les
mov
dec
xchg
jmp
adc
or
dec
pop
and
enter
add
aad
or
or
mov
jle
loopne
add
jl
sti
int3
pop
cmpsl
fstp
nop
loop
pushf
sahf
jnp
pop
sbb
clc
add
outsl
arpl
add
or
add
inc
xchg
lahf
xchg
xor
frstor
mov
stc
mov
xor
popa
gs
mov
iret
cmp
out
adc
or
cmp
insl
movsb
dec
jnp
sbb
roll
filds
out
add
sub
add
pop
jmp
test
ja
sahf
adc
or
adc
sbb
aas
push
subb
sarl
pop
or
cld
call
ds
add
jne
fiaddl
lods
pop
cmp
mov
lods
repnz
xchg
fldcw
sbb
adc
scas
mov
clc
and
sbb
andb
jl
shlb
in
sub
nop
sub
adc
push
movsl
or
lods
ljmp
add
dec
xlat
mov
add
sub
push
into
mov
sub
daa
test
xor
les
call
out
popa
je
mov
pop
and
rorl
fmulp
mov
fwait
or
lods
xor
fists
movb
push
push
scas
mov
jl
and
add
mov
divl
sbb
cs
aam
nop
popl
pop
test
shll
and
sub
pop
and
ja
jno
and
lret
pop
add
sarl
add
push
or
add
xchg
ja
std
lods
loopne
into
mov
fsubrl
add
scas
inc
jp
cmp
xchg
test
cmp
and
test
sbb
shl
sbb
add
cmpsb
lds
iret
fmul
call
scas
inc
cli
loop
sbb
add
ja
xor
fnstcw
add
push
adc
mov
mov
or
sbb
dec
data16
xlat
mov
stos
and
imul
lret
adc
outsl
pop
js
add
cwtl
mov
or
jns
adc
xor
test
sub
pop
adc
or
lret
movsb
mov
aas
lcall
les
fldcw
sub
aas
add
rcll
popa
sbb
subb
sbb
sbb
add
dec
dec
push
pop
mov
xchg
adc
stos
sbb
or
popa
lcall
jg
lret
xor
sbb
cmpsl
and
push
push
xchg
add
stos
sbb
mov
lock
add
pop
mov
add
mov
push
lods
add
andb
sbb
fisubrs
push
inc
add
ss
fwait
test
push
movsb
sbb
cltd
cs
loope
adc
cmp
and
ret
push
or
in
push
mov
pop
or
hlt
jb
pop
sub
adc
mov
test
call
mov
cli
add
mov
in
dec
test
sub
add
mov
jecxz
mov
movups
test
dec
stos
dec
add
mov
shlb
jg
add
orb
add
xchg
pop
dec
les
loope
pushf
jo
ret
xchg
mov
ds
cmovs
fcomp
enter
add
and
and
inc
add
jnp
mov
add
pmullw
or
mov
xchg
xor
aas
and
call
mov
outsb
dec
addl
jbe
loopne
mov
mov
mov
add
mov
add
addr16
mov
inc
cmpsl
movl
imul
ljmp
jns
scas
sbb
cmp
repnz
add
clc
lret
mov
test
sbb
fisubrs
enter
jp
mov
adc
dec
sub
dec
mov
xchg
sahf
in
and
pushf
js
sbb
add
cmp
jmp
daa
add
arpl
push
add
or
shl
xor
cmp
jb
imul
scas
cmp
xlat
movsb
add
push
or
adc
adc
jnp
stc
or
fcoml
loope
push
dec
fwait
sbb
sbb
mov
lods
cmpsb
xor
gs
inc
sbb
and
pushf
and
loop
push
test
popf
xchg
roll
cli
add
push
inc
mov
add
push
and
aas
push
ja
clc
push
out
mov
mov
adc
movsl
scas
lds
dec
shll
orl
cs
add
xlat
pop
add
fwait
inc
jg
mov
fistl
sarl
enter
out
lock
mov
aam
decb
fdivrp
std
pushf
jle
add
sub
dec
ljmp
aaa
in
jno
sbb
push
sbb
inc
xchg
sbb
cltd
xorl
pop
or
fimull
aas
andb
aad
stos
add
xor
shrl
xchg
movsl
sub
loopne
les
cmpsb
xchg
dec
les
mov
or
pop
ret
lods
add
pusha
push
cmc
jl
jnp
push
leave
and
mov
popa
cmp
mov
mov
sbb
mov
out
and
pop
sub
add
mov
xlat
add
dec
aad
jecxz
arpl
inc
add
dec
mull
data16
and
and
add
insl
cmc
sbb
test
add
push
jmp
data16
ja
movsb
scas
out
ficomps
mov
add
jno
dec
bnd
add
cmp
and
mov
xchg
mov
fs
sbb
scas
jne
add
int
fwait
inc
mov
pop
cmp
add
lods
mov
lcall
mov
std
sti
cmp
cmp
sub
lret
add
inc
lahf
push
lcall
out
pop
add
fdivrs
jns
add
xchg
mov
js
add
aad
loope
fists
loop
lcall
pop
push
push
adc
pop
sub
jp
movsb
mov
iret
mov
lods
xchg
xchg
and
fstl
inc
das
add
fdivr
stc
mov
rolb
dec
sub
cmp
pop
xlat
add
andb
xor
pop
cltd
adc
cmp
inc
call
dec
mov
push
sti
add
xchg
insb
aad
pop
pop
std
xorl
mov
movsb
shll
bound
inc
adc
inc
xorb
and
jnp
aam
movsb
add
pop
ljmp
or
xchg
mov
pop
jge
ljmp
add
imul
cmp
pop
xchg
test
loop
cmpsb
fwait
sub
jae
push
dec
sub
loope
dec
jecxz
and
sbb
add
ret
outsl
test
sub
nop
or
shll
xchg
ret
cmc
clc
push
adc
inc
xchg
add
pop
out
jl
sub
bound
xchg
out
sub
push
push
add
dec
pop
jecxz
xchg
test
mov
jle
adc
ror
mov
and
or
cmp
ficomps
aam
adc
stos
inc
not
or
add
lret
mov
nop
lock
pusha
jae
or
cmpsb
dec
rolb
xchg
push
fnstcw
adc
ret
in
push
bndldx
xlat
fadd
pop
and
stos
mov
mov
lds
and
dec
cmp
loop
insl
icebp
dec
fucomi
ficomps
pop
test
add
test
xor
aad
lods
xchg
daa
add
mov
rolb
sbb
add
jl
and
lret
push
bnd
adc
mov
daa
stos
mov
aad
add
xchg
jge
mov
jb
add
sub
sarb
pop
lret
loope
mov
je
jge
add
icebp
inc
add
adc
xchg
ljmp
cmpsl
jl
sbb
mov
and
aad
xchg
out
mov
insl
push
fistpll
arpl
push
sbb
cld
xor
xor
sub
xor
mov
dec
add
mov
lret
rcr
popa
cmc
rclb
mov
data16
xchg
insl
dec
cli
or
rol
ja
dec
sub
push
push
xor
roll
icebp
jns
pop
cmp
stos
add
insl
sti
sub
popa
fmull
jg
add
mov
stos
add
rcrl
loop
add
mov
and
mov
subl
in
cld
mov
push
or
out
pop
inc
cmp
add
pop
jl
test
movsb
xor
push
cmpsb
lret
add
xchg
mov
stc
xchg
lods
movsb
push
fcoml
leave
or
add
add
xor
cmp
pop
add
into
loopne
fcom
add
jmp
inc
stos
stos
mov
mov
repz
loope
xchg
jmp
mov
or
dec
xchg
cmp
cwtl
fwait
add
aas
lea
inc
xchg
inc
ret
mov
dec
and
std
nop
fbld
mov
add
out
jmp
lahf
pop
add
movsw
cwtl
cmp
xchg
sub
leave
push
adc
dec
mov
mov
push
test
adc
and
and
sub
cmpsb
push
shrl
stos
inc
push
adc
loop
insb
imul
fwait
xor
cmp
xchg
call
and
mov
pop
ljmp
hlt
xor
pop
into
cmp
add
inc
sbb
lock
insb
mov
cmp
dec
mov
sti
add
in
mov
xlat
fidivrs
pop
pop
jae
dec
je
adc
inc
push
xchg
das
add
subl
add
mov
jle
xor
out
mov
pop
add
push
jg
or
addb
fldl
mov
out
outsb
js
clc
jnp
ret
cmpsl
fisttpl
ljmp
loope
movsl
mov
sub
lret
pop
cmp
out
pop
into
xor
lcall
imulb
inc
and
or
mov
push
inc
repnz
jecxz
arpl
loopne
fcompl
ret
and
mov
jp
sbb
in
add
add
das
enter
jae
out
xor
inc
jno
mov
jl
add
add
mov
gs
test
rcrb
pushf
and
insl
das
inc
add
mov
dec
in
ja
add
out
and
mov
arpl
cmp
xor
lea
jecxz
xlat
add
std
jle
mov
popf
push
test
iret
sbb
test
pop
add
mov
fmull
dec
stc
sbbl
adc
dec
add
test
adc
fcoms
loope
stos
sbb
ljmp
je
lahf
lods
add
mov
pop
cli
mov
xchg
rolb
dec
push
or
aaa
popa
in
inc
inc
aam
sbb
out
sahf
popa
repnz
jb
cmpsb
mov
push
cs
jp
xchg
shl
adc
add
cli
fisubl
or
add
mov
ret
xor
outsl
pusha
adc
inc
rcrl
mov
cmc
and
int
ljmp
add
cmp
rclb
pop
test
mov
or
cmp
and
mov
add
and
jno
ljmp
mov
xchg
jl
or
or
fidivl
decb
lcall
push
nop
shrb
mov
call
or
cltd
and
and
ficompl
ljmp
ja
pop
and
cmc
aas
lahf
clc
xchg
sbb
lock
add
lret
lahf
jecxz
mov
mov
jmp
cltd
mov
and
xorl
xor
stos
sbb
push
mov
push
insb
add
xor
mov
outsl
add
xchg
push
and
dec
sbb
outsl
mov
pop
inc
xor
xlat
loopne
arpl
pop
aad
jmp
jmp
ja
cmp
pop
into
mov
sub
add
inc
in
movsb
sbb
and
dec
or
pop
ds
xchg
jo
push
add
pop
jp
cli
sub
ret
arpl
push
or
pop
add
mov
add
rcrl
sbb
fidivs
xor
mov
shl
jp
incb
pushf
imull
jns
cmp
adc
scas
xchg
test
mov
gs
xchg
add
sub
pop
xor
imul
out
fwait
scas
stos
add
das
lods
data16
jg
add
adc
inc
or
ja
ret
inc
adc
xchg
pop
jne
add
mov
dec
sbb
add
fldenv
fs
into
sbb
inc
jns
dec
lcall
sbbb
lcall
aas
push
adc
sbb
nop
ds
pop
out
xchg
iret
out
enter
pushf
icebp
jo
add
stc
lods
mov
jl
stos
loop
aaa
lret
adc
jp
mov
pusha
pushf
mov
pop
sbb
pop
add
enter
jne
adc
enter
movsl
mov
test
sahf
add
pop
outsl
ret
cmp
mov
add
scas
fisubrl
gs
or
add
jnp
lahf
fucomp
into
iret
cmp
dec
shlb
lods
cwtl
push
je
and
mov
push
les
pop
jle
dec
mov
cmpsl
test
lahf
rcr
pop
cmp
cwtl
pop
add
mov
sbbb
inc
push
lcall
jno
int
pop
stos
cmp
subb
clc
and
scas
lret
or
add
fwait
addr16
mov
ss
fildll
xchg
out
pop
add
stos
cwtl
ds
pop
leave
or
cmc
loop
dec
pop
rorl
mov
fcmovnu
add
dec
dec
or
movsl
push
mov
add
xchg
test
cld
adc
stc
clc
and
scas
stc
pop
nop
jno
adc
cld
mov
push
mov
xchg
fcomps
add
jae
pop
loop
pop
mov
or
jp
cmp
pop
push
add
aad
add
cmp
add
adc
int3
notl
aam
test
push
das
lret
add
mov
lret
in
push
sub
mov
lods
add
cmp
jb
fisubrl
adc
popa
lahf
das
rcrb
fdivrs
fcmovnu
sbb
test
aad
fldcw
jecxz
outsb
into
test
clc
jno
and
push
adc
and
test
lods
inc
mov
sub
xchg
dec
insl
add
cmp
jg
sbb
scas
add
loopne
xchg
sub
and
in
jecxz
mov
imul
mov
push
add
jo
jns
mov
add
lea
sti
outsl
test
fs
xor
iret
pop
add
dec
push
cwtl
mov
data16
xchg
inc
mov
fs
stos
add
push
stc
fidivrs
leave
out
push
mov
arpl
xchg
cwtl
ja
outsb
push
or
mov
loope
mov
mov
mov
inc
cmc
loop
push
jge
or
xchg
addl
bound
shll
movsl
das
xchg
add
jge
adc
repz
addb
mov
mov
cmp
xor
lcall
addb
xor
ds
mov
add
std
stos
fcmovu
mov
test
andb
mov
xor
lahf
aad
adc
insb
cmp
xor
adc
insl
xchg
sbb
inc
clc
xchg
popa
movsb
jmp
stc
adc
movsb
shl
into
push
decb
outsl
insb
cli
movsb
ret
add
cmpsb
scas
subl
jmp
lcall
inc
adc
pop
xor
out
das
fistpll
xlat
add
insl
push
push
subl
ss
dec
add
push
add
cmp
mov
jg
cmp
js
pop
mov
movsl
adc
imul
pop
mov
enter
and
sub
add
loop
in
test
push
jl
sub
push
add
cmp
repz
outsb
cltd
add
lcall
sub
rorl
ja
jno
pop
faddl
xor
or
sbb
hlt
add
aam
out
in
xchg
pop
add
pop
ds
pop
popa
inc
fstpt
and
add
jno
call
add
rcrb
adc
fbld
lret
sbb
das
andl
mov
add
icebp
inc
sbb
sub
arpl
sub
push
stos
repnz
add
lods
or
out
inc
or
out
dec
int3
jg
push
jp
jne
and
movl
xor
inc
ret
jl
fwait
dec
push
outsb
imul
pop
mov
pop
movsb
outsl
pop
cmp
ret
in
sti
out
insl
enter
cmpsb
popa
stc
test
jle
ljmp
sub
mov
stos
jmp
aas
mov
xor
orl
add
pop
inc
js
aaa
and
sbb
sub
add
fcomps
out
mov
lds
cwtl
or
loope
sbb
sub
jbe
loopne
js
adc
add
jl
pop
mov
sbb
fldenv
lods
aam
xchg
aas
or
adc
jne
add
mov
sbb
popa
xorl
std
jg
loop
outsb
pusha
jle
je
icebp
fistps
pop
in
rorl
push
mov
cld
test
adc
dec
fbstp
sub
add
fs
lret
jl
insl
outsl
add
jne
aas
add
ret
jmp
std
bsf
das
add
jo
sahf
sub
jg
mov
data16
add
mov
jle
loope
lcall
jbe
enter
fnstcw
or
sbb
and
fbstp
pop
push
push
fsubr
xchg
cmpb
push
hlt
fs
add
scas
adc
push
lds
add
into
dec
add
cli
sbb
stos
cmpsb
test
cwtl
or
dec
sub
sbbb
cmp
inc
leave
movsb
push
pop
icebp
add
mov
repnz
inc
jp
fnsave
xlat
push
das
or
or
mov
dec
lods
xchg
inc
pop
cmc
in
push
sub
mov
addr16
cs
pop
in
mov
mov
sti
add
inc
xor
out
add
in
out
add
mov
mov
xlat
xor
jmp
push
imul
das
jb
inc
daa
dec
popa
movb
push
add
adc
jbe
push
jnp
in
movsl
ret
and
mov
inc
adc
loope
inc
xor
clc
sbb
das
dec
test
leave
mov
rol
icebp
add
mov
push
push
add
cmpsb
call
add
mov
push
sbb
pop
or
gs
imul
sti
add
pop
hlt
daa
sar
add
jno
pop
or
mov
cmpsl
or
sub
arpl
adc
inc
pop
std
add
movl
gs
or
dec
pop
adc
insl
sub
add
sub
insb
popa
lods
sti
jns
pop
adc
pop
outsb
sbb
pop
imul
sahf
test
loopne
add
cmc
scas
cwtl
movsb
dec
cmp
sbb
call
loop
rcr
xchg
test
or
add
add
sbb
push
cmp
add
xlat
pop
fs
scas
mov
jne
out
neg
and
dec
add
mov
pop
cmp
xchg
add
mov
popf
mov
add
mov
and
divl
pop
mov
dec
xchg
stos
movb
sbb
call
ljmp
dec
xlat
jb
add
inc
shrb
mov
int
dec
dec
push
pop
sbb
out
and
inc
addr16
lahf
cmpsb
add
sbb
mov
push
jl
xchg
dec
pop
or
jne
push
push
dec
std
sbb
test
inc
jg
ja
sub
and
pushf
pop
faddl
pop
push
movsl
dec
jbe
and
ret
das
std
add
cmp
shll
push
pop
mov
add
arpl
addl
int3
cwtl
push
cltd
mov
repz
out
add
repnz
mov
inc
xchg
add
xchg
or
ret
or
in
repnz
adc
add
mov
insl
fnstsw
lahf
stos
adc
scas
ret
pop
insb
icebp
std
sti
add
inc
cmp
jg
mov
mov
int
sbbb
stos
mov
or
imul
pop
xchg
icebp
push
jns
ret
sbb
or
pop
inc
cmpsl
inc
sbb
or
xchg
add
lahf
or
inc
add
jnp
xor
push
ljmp
lock
call
repz
lahf
mov
loope
enter
shrd
push
add
gs
mov
scas
cmp
sbb
adc
cld
clc
add
out
in
addl
push
test
bound
ljmp
pop
pop
fsub
jge
das
dec
aaa
adc
ret
enter
js
cmp
cltd
smsw
sbb
inc
dec
out
add
xchg
lock
sahf
and
into
pushf
cmp
roll
aad
sbb
movsl
mov
add
data16
add
mov
arpl
mov
adc
push
fldl
push
fcoms
add
mov
add
and
jnp
iret
xchg
add
hlt
sub
sahf
cmp
or
in
push
jmp
test
jle
jnp
xor
sbb
repz
divl
mov
clc
pop
push
sbb
or
pop
sarb
sub
jmp
fistpll
mov
in
push
ljmp
mov
loop
or
std
xor
mov
mov
pop
call
repz
xchg
jecxz
insl
fiaddl
repz
push
dec
push
ret
out
fildl
mov
push
lock
and
push
fs
pop
sbb
cmp
xchg
and
pop
ja
add
hlt
mov
data16
sub
adc
xor
lods
mov
cld
pop
xchg
push
jmp
mov
fwait
inc
mov
and
mov
add
push
hlt
arpl
add
out
scas
inc
jns
lret
lea
arpl
in
add
in
xorb
pop
pusha
in
ffree
aad
faddl
lahf
mov
and
add
in
adc
flds
jmp
push
mov
lock
mov
xchg
push
mov
inc
cmc
add
repz
jge
jecxz
cmpsl
add
fldcw
test
in
ss
iret
cs
icebp
dec
mov
imul
stos
push
adc
mov
jnp
call
dec
ret
lret
add
push
outsl
popa
pushf
insl
lods
cmpsl
aam
adcl
push
jno
fldt
xlat
push
iret
mov
inc
js
dec
mov
pop
sub
mov
sbb
push
add
in
add
add
stos
gs
jne
loope
jmp
inc
mov
adc
jle
sbb
push
and
shl
rorb
xchg
add
xlat
sti
in
fiadds
fcomps
sub
xor
or
pop
adc
sub
mov
loop
jo
pop
or
bound
adc
mov
fwait
call
stc
xor
lcall
loope
xlat
mov
enter
int
push
pop
icebp
scas
pop
xorb
fiaddl
ja
and
daa
add
mov
dec
loopne
out
nop
pop
jae
cmp
outsl
mov
ffree
mov
idivl
out
data16
or
int
fidivrl
and
xchg
mov
mov
cwtl
xchg
aaa
jl
ret
scas
pop
and
adc
xchg
repz
pop
add
cmpsb
lds
loopne
nop
adc
sahf
int3
cli
mov
sbb
inc
pop
xor
pop
movsl
add
out
iret
daa
xor
imul
push
addb
pop
clc
divl
jae
sbb
pop
add
push
leave
aad
or
testb
jl
mov
out
inc
scas
xchg
stc
nop
add
cmpsb
push
mov
lds
xchg
cmp
insl
mov
imul
sbb
cltd
ja
adc
in
jle
mov
aaa
mov
fstpl
jno
xchg
iret
clc
frstor
pushf
xchg
push
inc
lret
mov
bnd
fdivr
arpl
in
out
add
push
testl
and
clc
in
popa
fbld
xor
sbb
andl
je
aas
mov
pop
out
sbb
jl
add
push
repnz
and
loopne
sub
xor
add
aam
ret
ficomps
jg
sub
xchg
cmp
adc
nop
pop
sbb
rcr
push
aam
test
cmp
outsb
shr
ss
popa
pop
fcomps
sbb
add
inc
loope
jnp
xor
mov
fildll
test
clc
xor
lds
cmpb
stos
dec
lea
xor
jbe
loop
les
std
push
lods
jae
adc
push
or
dec
add
mov
shl
sbb
stos
jbe
std
sbb
push
gs
dec
pop
jl
les
roll
loop
bswap
aas
pop
cmpsb
or
jnp
push
adc
popf
sbb
ss
add
jg
mov
rol
jbe
sbbl
sub
jnp
decb
add
push
inc
push
movsb
cmp
sbb
jp
ja
jbe
jg
in
adc
dec
dec
mov
int
mov
fwait
cmp
add
fistpll
faddp
pusha
adc
xchg
sahf
lock
or
fnstsw
xor
iret
shll
nop
dec
dec
adc
out
cli
popa
lahf
stc
lret
push
into
stc
sbb
adc
push
add
gs
dec
or
sbb
push
lds
mov
mov
or
es
inc
stos
sub
mov
sbb
push
cmp
cmp
loopne
mov
push
test
mov
dec
add
loopne
adc
pop
aam
mov
repnz
xchg
fisubrs
ret
scas
repz
test
rorl
add
mov
add
stos
fs
ret
and
inc
pop
into
sarb
das
cwtl
xor
cmpb
ret
sbb
outsl
sbb
sbb
mov
jne
push
or
iret
in
insb
jmp
mov
and
push
xchg
inc
cli
sub
outsb
sbb
add
fimull
push
fldt
push
and
and
pop
shll
daa
pop
mov
loope
pop
sub
mov
mov
sub
mov
cmp
int3
in
aas
fimull
aad
push
mov
lods
dec
or
jns
xchg
cli
lret
nop
je
mov
lock
popa
shrb
pop
cmp
scas
in
xor
imul
jp
mov
in
add
pop
jg
jae
xchg
add
lahf
sub
adc
fiaddl
push
xchg
fwait
ljmp
cmp
jp
mov
outsb
add
cmpsl
insb
and
xor
es
in
or
cmp
adc
add
aas
loope
mov
add
pop
jne
push
out
test
xor
mov
mov
and
lds
movl
nop
mov
xor
aad
push
ss
scas
add
lock
stc
dec
mov
or
cs
inc
movsb
sub
jb
push
pop
in
in
add
jnp
into
dec
jl
mov
pop
rcr
repz
add
aam
inc
fistps
popa
daa
mov
adc
data16
pop
insb
xor
push
mov
pop
fistpl
and
test
and
sbb
dec
cld
sbbl
rcr
cli
mov
fucomi
mov
jl
xor
push
repnz
lret
scas
mov
jmp
xor
cmp
fbstp
sti
sub
dec
inc
call
add
fiadds
das
popf
and
cmp
push
push
jnp
cmp
fildl
sub
and
enter
out
leave
dec
xor
aas
pop
movb
jge
out
mov
xchg
pop
cmp
mov
jmp
loop
or
sbb
repnz
push
enter
fcomp
call
icebp
je
mov
adc
mov
mov
ret
jl
scas
enter
jo
add
lcall
test
sti
inc
adcl
clc
add
jb
jp
mov
enter
adc
in
shr
lret
sbb
inc
add
mov
iret
adc
jp
cltd
pop
repnz
mov
loope
cwtl
inc
and
lock
jb
add
movsb
stos
xchg
add
mov
and
add
int
in
aas
and
add
out
es
aad
nop
pop
jo
daa
mov
push
sbb
add
lea
mov
cmp
pop
fdivl
cltd
popa
or
dec
adc
ret
sub
out
mov
or
fists
movsl
leave
xchg
add
jae
mov
jns
add
lret
add
and
iret
mov
jl
imul
adc
mov
add
push
push
lret
add
push
mov
inc
adcl
sub
jl
cltd
ret
xchg
xlat
les
mov
maskmovq
jl
and
and
dec
loopne
lahf
imull
push
add
jle
sbb
adc
stos
add
dec
adc
add
jle
jbe
mov
xchg
scas
movsb
bound
cld
add
mov
ljmp
dec
push
cmp
mov
dec
insl
sub
mov
xchg
int
mov
push
cld
in
fs
adc
test
rcll
cmp
lods
cmp
shlb
add
inc
push
test
add
movsb
mov
sbb
dec
cmc
dec
adc
into
pushl
stos
sub
mov
shrb
mov
dec
fwait
insl
push
lock
mov
jp
shlb
mov
enterw
inc
loop
fscale
daa
or
outsl
xor
es
into
data16
aad
push
push
dec
add
push
pop
mov
gs
out
cli
lret
adc
notb
fimuls
lods
out
shl
scas
add
testl
bound
lock
adc
aaa
lret
fwait
dec
add
mov
xchg
add
cltd
faddl
or
test
jge
andl
das
inc
push
andl
sub
in
add
push
aam
je
into
dec
add
mov
xor
mov
jp
dec
dec
cs
rcll
mov
adc
jmp
ljmp
scas
data16
sbb
pop
imul
mov
test
sbb
lcall
inc
mov
mov
divl
inc
xor
mov
in
sbb
int3
jbe
mov
bound
add
lcall
adc
mov
adcl
and
adc
loop
sub
sbb
mull
mov
in
xchg
adc
adc
or
add
stc
mov
add
shlb
add
inc
jp
sbb
add
std
ja
lock
scas
xchg
jne
cmpsl
xchg
adc
cmp
sbb
xchg
dec
xor
loop
mov
dec
loope
pushf
pop
adc
stos
inc
fists
cmp
sbb
movsb
testb
or
mov
add
add
xlat
jo
insl
pop
testl
pop
pushf
rcrl
mov
movsb
xchg
or
vpsrlw
jle
adc
popf
push
and
es
fsts
and
or
out
fwait
and
xchg
or
lahf
adc
jne
mov
sub
jecxz
lcall
cmp
inc
push
ja
sahf
mov
sub
cmp
cmp
cmp
popa
scas
pushf
mov
test
adc
mov
pop
dec
push
mov
cmp
jne
clc
loopne
adc
sbb
es
hlt
stc
xchg
mov
adc
or
push
jp
loope
fidivrs
jo
testb
cmp
and
hlt
lret
nop
cmp
jp
test
mov
imul
dec
popa
jb
or
cli
push
ljmp
xchg
push
cmc
adc
test
dec
lea
add
movsb
shrl
test
lahf
inc
aam
push
insl
pushf
pop
cmp
pop
fwait
dec
jmp
inc
out
popa
lret
jnp
or
in
push
lods
jns
xor
sbb
in
mov
xor
push
add
or
popf
ret
mov
push
sbb
stc
or
lret
int
ds
xchg
add
cmc
repnz
add
xchg
fnsave
push
ret
mov
or
pop
add
jae
cmp
jno
pop
ret
push
or
add
xor
ljmp
in
loopne
cltd
adc
loopne
and
dec
or
inc
hlt
push
add
imul
xor
sahf
mov
mov
das
jo
cld
imul
addr16
add
sub
xchg
inc
dec
mov
sbb
pushf
sub
addb
lret
fcoms
xchg
add
fsubrl
popf
insb
add
in
and
jb
aaa
aad
sahf
or
test
loope
add
push
lret
stos
push
std
add
imul
movsb
or
int3
lahf
mov
pop
adc
add
lds
pop
add
cld
in
nop
outsb
add
enter
jo
call
ret
add
jne
adc
pop
mov
mov
mov
fsubs
data16
mov
ds
adc
inc
fdivrp
outsl
or
adc
shrb
add
cmp
adc
shll
mov
pop
test
and
pop
xchg
cmc
or
add
mov
test
xor
mov
sub
fiadds
add
popa
hlt
sahf
pop
and
sbb
sti
xchg
mov
mov
and
les
or
shlb
dec
enter
clc
int
loope
inc
xor
out
mull
sub
ret
into
test
pop
pop
das
sub
jecxz
mov
popa
loope
mov
sahf
outsl
adc
sub
and
add
cmp
iret
loop
mov
dec
push
call
fdivr
cmpsl
outsb
jb
cmpsb
cmpb
inc
and
lods
add
outsb
inc
xor
xchg
daa
insb
fcom
add
inc
jo
sti
adc
les
and
out
ja
or
lock
shlb
mov
popl
lods
jmp
or
add
fnstcw
add
outsb
es
sub
stos
popa
in
jnp
jecxz
clc
js
mov
xor
add
jl
mov
lds
push
add
stos
mov
pop
add
test
push
cmp
jge
xchg
lock
and
imul
movsb
push
inc
dec
jne
adc
call
cmp
jmp
mov
mov
imul
xchg
mov
test
xor
add
cmp
loop
sub
push
iret
test
add
mov
add
add
cmc
pushf
jb
out
into
add
jnp
lods
cmp
bound
test
mov
subl
lahf
jmp
mov
movsb
pop
fldt
add
imul
mov
int3
cld
sbb
and
mov
lret
mov
xchg
add
es
pop
pushf
xchg
inc
add
push
xor
fidivs
and
loope
mov
cmpsb
cli
pop
mov
add
lods
mov
xor
add
imul
add
fistpl
jle
jbe
scas
in
insl
mov
cltd
jge
into
mov
push
test
popa
adc
in
loopne
jmp
ficoml
or
ja
stos
jge
cs
add
sti
cmc
aas
xchg
add
rorl
add
rcrb
adc
lea
loop
call
mov
sub
outsb
add
add
adc
and
lret
adc
or
mov
into
lcall
cmp
jecxz
addr16
inc
enter
mov
sbb
cmpsl
stos
xor
mov
jbe
mov
aam
int
push
aad
test
and
dec
ljmp
cmc
fsubrl
sbb
jmp
sahf
test
mov
in
jno
pop
rcrl
add
sub
in
push
imul
adc
jae
cmp
sub
jecxz
ret
or
adc
stc
pusha
pushf
xor
lock
xlat
push
mov
jae
loop
push
or
add
lods
or
clc
call
les
leave
test
inc
sbb
push
jbe
popf
fcoms
out
lods
xor
cmp
repnz
and
int3
sbb
mov
mov
aam
or
or
and
jns
jnp
loope
push
push
test
insb
add
icebp
mov
push
popa
pop
and
cmpsl
cmp
adc
cli
jne
or
sbb
rolb
mov
in
jo
add
sbb
and
pop
popa
push
imul
xlat
popa
cmp
int3
jnp
cmpsb
xor
sti
in
jb
lock
pusha
sbb
clc
mov
cs
inc
sub
popf
jg
mov
cmp
in
dec
popa
sbb
adc
repz
xor
call
pop
scas
lahf
xchg
mov
pop
cld
add
gs
mov
es
test
pop
popa
adcb
add
leave
mov
jb
stc
add
fistpll
repz
addb
jle
js
add
int3
fisttpll
imul
xorb
or
sbb
mov
xor
mov
pop
push
addr16
ds
pop
add
stc
aaa
pushf
cltd
aas
xchg
push
add
dec
dec
in
pop
pop
ljmp
rclb
les
imul
aad
and
dec
and
dec
xchg
dec
lods
repz
xchg
jbe
idiv
xor
pop
es
sbbl
repz
push
adc
dec
and
mov
mov
pop
jle
mov
mov
push
jnp
pop
or
loope
loop
inc
scas
add
jecxz
cwtl
cmp
mov
popa
adc
in
xchg
adc
out
mov
in
fsubrp
test
jae
jmp
dec
sub
imul
pop
mov
push
ficoms
mov
js
hlt
bound
jl
and
aas
mov
or
lret
insl
push
mov
jnp
sub
lret
or
inc
mov
add
or
daa
popa
mov
xor
insl
mov
popf
je
push
into
js
ret
sub
inc
adc
adc
inc
or
daa
and
xor
jnp
mov
jns
sbb
aas
sti
xlat
popa
enter
cmp
sbb
aad
xor
popf
jbe
negb
xor
movsl
test
in
outsb
jb
cmp
ret
inc
push
scas
ret
xor
lret
pop
dec
mov
xor
push
pop
xchg
fsubs
out
adc
shll
repz
aad
adc
leave
fisubrl
mov
inc
fmuls
mov
adc
lock
movsb
loop
cmpsl
add
jne
add
pusha
icebp
lods
fists
pop
ficoms
jl
mov
ret
jg
add
scas
fnstsw
mov
adc
mov
pop
dec
jp
ljmp
fs
cltd
mov
add
cmp
sahf
popa
fdivrs
clc
xor
push
mov
lahf
repz
jns
clc
aas
in
pusha
cld
cmpsb
mov
jge
fs
and
sub
aam
inc
loop
js
loope
cmp
popf
rolb
add
xchg
add
int
mov
nop
mov
fistps
mov
mov
pop
shrb
int3
insb
sub
out
sbb
out
add
cmp
out
add
xchg
rcrb
lahf
lock
cmp
ljmp
pop
imul
popf
add
lret
or
ss
in
fisttps
ret
add
mov
xchg
jb
xchg
jo
push
fistl
in
cmpsb
sbb
xor
movsb
aas
jle
mov
outsb
adc
lock
add
jmp
adc
pop
adc
jnp
out
je
pop
sbb
push
add
mov
loope
in
icebp
xchg
pop
sti
iret
testl
add
daa
cmpsl
and
insl
imul
outsl
ret
in
out
adc
and
mov
sbb
ficomps
adc
jae
push
xchg
stc
add
ret
or
sbb
sub
xor
enter
shrb
test
inc
dec
add
adc
icebp
jl
mov
add
sub
loope
pop
inc
daa
cld
loopne
adc
add
mov
pop
add
lahf
incl
dec
mov
sbb
mov
push
dec
les
jno
adc
pusha
stos
add
out
xchg
push
outsl
jmp
push
loop
shll
sub
mov
setl
and
and
call
sub
jb
sahf
in
pop
outsl
adc
cmp
push
loop
xchg
adc
enter
or
lret
pop
bound
ret
mov
pushf
pop
and
stos
mov
sarb
jmp
pop
cmp
add
outsl
mov
das
sub
and
xchg
cs
aas
mov
in
fdivp
cmpsl
sub
jne
add
cmp
jle
pushf
mov
add
addr16
loop
xchg
dec
jne
aam
xchg
jge
imul
adc
jl
sub
jmp
inc
mov
mov
push
mov
out
out
add
jl
leave
loope
push
add
or
int
arpl
shlb
inc
test
pushf
mov
mov
pop
sbb
fwait
xchg
in
aas
xchg
push
push
push
xor
push
inc
jnp
outsl
cmp
faddp
xor
cltd
or
sub
cwtl
adc
cmc
mov
or
add
jns
aaa
and
add
daa
int3
aam
das
cmp
idiv
cltd
scas
add
das
and
sub
gs
mov
test
fstpt
xchg
mov
inc
and
jns
push
jg
cmpsl
xchg
repnz
scas
fistpll
add
dec
enter
xchg
mov
pop
mov
in
popa
or
push
push
pop
ret
cmc
inc
add
int3
hlt
enter
fldcw
add
sub
mov
loope
imul
mov
fistpll
jno
cmp
pop
pop
push
xor
mov
mov
nop
pusha
jae
out
je
jle
push
xchg
sub
cmpsb
imul
jmp
mov
adc
or
fwait
pop
rep
adc
pop
adc
add
shlb
divl
lcall
lods
add
int3
pushf
insb
ss
push
dec
jle
divl
pusha
into
test
rcll
lods
sbb
sbb
mov
jbe
and
cwtl
sbb
out
incl
or
xchg
ret
dec
mov
iret
pop
mov
outsl
out
cmp
test
xchg
sti
cmp
loop
nop
or
add
and
movsl
sbb
fsubrp
loop
add
subl
and
out
jmp
or
adc
out
clc
loopne,pn
ficoms
mov
movsl
xor
mov
popa
add
das
fstps
out
mov
idivb
or
push
pop
lock
adc
mov
fsubrs
add
inc
dec
adc
jae
add
popa
jnp
add
into
and
outsb
fwait
push
pop
stos
loop
push
sbb
or
adc
cmp
sbb
pushf
mov
test
pop
inc
mov
pop
xchg
sbb
popa
adc
loope
xorl
outsl
dec
loopne
or
push
add
and
dec
loope
loope
mov
inc
pop
adc
cwtl
add
fwait
and
and
or
and
icebp
cmp
xor
sub
cli
dec
cmp
mov
sbb
mov
or
scas
jp
add
outsl
scas
das
andl
jnp
roll
mov
adc
imull
dec
outsl
call
dec
popa
sub
and
stos
add
adc
and
xor
pop
testl
out
adc
mov
sub
lods
mov
or
pop
add
in
adc
sbb
mov
jg
sarl
lcall
pop
leave
and
mov
stos
cmp
xlat
mov
ljmpw
add
inc
push
jmp
add
mov
sbb
shl
jecxz
adc
dec
sub
daa
adc
cmc
mov
pop
loope
ficompl
lcall
fisttps
stc
or
scas
add
inc
sbb
xchg
aaa
pop
repnz
js
add
xchg
push
xchg
push
add
sub
jg
lret
xchg
enter
adc
repz
xchg
dec
test
in
mov
testb
pop
or
mov
jne
cmpsb
stos
or
lds
jp
insl
dec
and
in
lods
or
mov
inc
rolb
pop
mov
xor
loope
dec
fildll
add
add
out
sbb
sbb
sahf
jg
xchg
idiv
push
outsb
outsl
invlpg
jecxz
mov
add
dec
push
inc
push
inc
insb
add
decl
add
jbe
sbb
or
mov
pop
or
mov
mov
adc
xchg
push
and
sbb
popa
xchg
pop
cmpb
sbb
mov
imul
or
mov
cmp
insl
mov
out
jg
test
data16
lret
loop
push
jne
popa
and
adc
xor
pop
adc
sbb
add
inc
mov
stos
add
push
sub
shr
mov
push
add
or
aas
push
or
add
lock
push
scas
sub
mov
add
cld
adc
adc
pop
imulb
mov
pushf
pop
aas
dec
inc
mov
pop
loope
pusha
imul
pop
int
pop
xchg
pop
ret
sub
xor
mov
movhps
clc
and
pop
mov
test
insl
adc
std
sbb
adc
dec
js
push
inc
pop
pop
mov
mov
mov
push
inc
int
iret
enter
mov
stos
cmp
repnz
mov
xchg
loop
inc
sti
call
fidivrl
add
rol
aaa
sbb
outsb
addb
das
repnz
test
fbld
out
adc
scas
push
add
mov
inc
pop
jecxz
in
sub
adc
add
dec
mov
into
add
hlt
adc
or
push
adc
mov
and
mov
adc
push
add
ljmp
jns
out
lds
cmp
mov
mov
sti
dec
mov
add
ljmp
mov
mov
lods
cmc
in
aaa
cmp
mov
mov
sbb
xchg
add
movsb
cli
fsub
out
ret
mov
filds
movsb
push
sub
and
push
lea
lods
fsubr
loope
cltd
push
pop
mov
out
add
push
pop
adc
xor
pop
cmc
or
arpl
mov
loope
mov
inc
cmpsl
sbb
icebp
in
das
aad
mov
popf
push
dec
cwtl
subb
daa
in
dec
add
clc
std
sbb
outsl
xor
fadd
mov
call
mov
and
inc
lcall
adc
mov
adc
clc
add
mov
enter
xchg
pop
dec
sub
outsl
popa
mov
mov
adc
repnz
faddl
mov
in
fisttps
pop
sbb
aad
lea
fsub
in
jae
stc
jno
add
cmp
les
jge
in
jle
repz
call
testl
jle,pn
cmp
loope
add
pushf
pop
fdivrl
cli
test
xor
mov
push
xchg
daa
or
rcr
popf
imul
sbb
pop
and
je
test
shlb
enter
sub
ds
into
ljmp
sbb
xchg
add
outsb
dec
cmpsb
push
sub
loope
jnp
add
call
inc
cmc
movsb
or
mov
sbb
cld
jb
cmpsb
jnp
mov
mov
xchg
and
cmpb
bound
xor
test
ret
add
stc
icebp
mov
mov
setnp
mov
xchg
adc
in
pop
sub
test
aaa
mov
fdivrs
add
mov
popa
push
jle
adc
sbb
loop
dec
bound
das
sub
stos
pop
xchg
repz
push
mov
stc
jge
pop
lcall
add
add
repnz
xchg
divl
jae
and
into
je
rcrb
cmp
inc
push
ja
sbb
repz
cwtl
daa
insl
xlat
into
sbb
or
mov
ficoms
xchg
inc
test
scas
xlat
push
push
loope
fs
scas
sbb
mov
into
mov
push
popa
fldl
inc
push
pop
xor
pushf
add
push
push
jbe
mov
dec
xchg
jae
bnd
add
movsb
enter
aam
add
iret
mov
test
sub
js
cs
repz
jmp
add
cmp
fsubrp
pop
jecxz
iret
aas
adc
incb
or
jp
js
push
add
adc
aam
lock
mov
test
and
sbb
pop
fidivrl
pop
icebp
lret
fstpl
pop
nop
int3
jo
and
sub
pop
leave
dec
call
das
popa
mov
dec
pop
mov
push
loop
test
add
xor
aam
or
mov
sti
sbb
mov
inc
jmp
push
lock
mov
and
add
add
aaa
and
xchg
call
sbb
aam
and
mov
mov
xchg
adc
mov
ja
add
push
cli
ljmp
xor
and
pop
bound
into
std
mov
xchg
mov
push
mov
and
push
dec
or
push
int3
inc
add
out
ret
sbb
lock
in
cmp
push
sbb
jge
mov
clc
out
pop
popa
cmp
sbb
mov
lcall
popf
daa
and
or
popa
push
sub
pop
jbe
pop
out
testb
xchg
lret
mov
ret
ljmp
loop
dec
and
cld
add
inc
mov
lock
jnp
mov
rorb
push
pop
fisubs
loope
or
jne
add
and
es
adc
sarl
pop
adc
cmp
mov
add
lahf
cltd
mov
add
test
push
gs
push
adc
fstpl
cmp
mov
add
cmp
cmc
inc
jp
repz
and
scas
sub
loope
dec
adc
lcall
movsb
dec
out
lret
jp
add
mov
add
jae
xchg
addr16
add
mov
sub
and
div
shl
xor
add
ss
or
adc
mov
out
mov
and
cmp
in
int
das
ljmp
mov
cmp
xor
jmp
fdivp
mov
xlat
repz
adc
aad
les
enter
cmp
enter
testl
cwtl
cmp
js
pop
addl
and
sub
dec
out
push
sub
sbb
filds
dec
xchg
ret
jae
aam
cmp
mov
sahf
lret
and
adc
push
push
sbbl
dec
hlt
add
mov
lret
or
mov
add
sbb
rcrb
mov
loop
xchg
int
aas
lahf
mov
out
lods
mov
sub
jp
push
ljmp
test
ret
push
inc
adc
pop
dec
dec
insb
add
rorb
add
pop
loope
lods
jp
jecxz
clc
push
add
popf
jge
and
ss
mov
lahf
test
sahf
aam
mov
push
push
pop
loope
pop
mov
jle
lock
inc
hlt
std
ljmp
mov
or
add
push
out
cmpsb
cmp
sarb
xchg
pushf
mov
add
mov
push
pop
jge
push
jg
xor
sti
xorl
mov
inc
insl
dec
aam
add
push
xlat
mov
testb
mov
mov
call
rorl
dec
sub
add
pop
xchg
add
inc
popa
mov
pop
push
add
enter
mul
adc
sti
loop
mov
mov
imul
push
addb
aam
jl
bnd
popa
and
sbb
je
pop
jmp
imulb
mov
dec
cmp
scas
add
sub
cli
pop
add
outsb
test
inc
or
add
lock
mull
je
fidivrl
pop
mov
xor
push
adc
lods
in
ret
stos
testb
pushf
mov
xchg
push
insb
sbb
adc
add
dec
scas
ss
fcmovu
lret
lods
pushf
and
js
into
dec
add
xor
add
mov
add
jl
and
gs
mov
sub
or
sbb
shll
mov
dec
mov
mov
cmp
dec
push
xorl
test
icebp
cmpsl
and
mov
jle
out
mov
aas
popa
xchg
js
sub
or
repz
dec
jl
push
add
fwait
lods
sub
aad
add
mov
ret
sbb
add
mov
jbe
mov
movl
push
sbb
jne
adc
inc
xchg
inc
or
lods
xchg
addl
xchg
cmp
jle
add
mov
jo
mov
add
stos
adc
pop
shrl
pop
and
enter
and
dec
jge
or
add
aad
orl
inc
xor
dec
filds
cmpsb
cmc
mov
out
movq
jge
out
xlat
adcb
scas
addb
cmp
filds
xor
in
push
lret
xor
mov
sbb
pop
pop
push
mov
cmp
push
jno
cmp
push
adc
lahf
pop
out
lods
out
dec
sub
xorl
and
add
mov
add
fnstsw
dec
out
stc
ret
adc
jge
aam
outsb
cmp
mov
mov
popa
aas
mov
aad
inc
add
and
repz
cmpl
insb
pop
push
nop
push
push
popa
inc
punpcklbw
jo
sbb
jg
mov
fdivrl
scas
xor
test
jp
or
in
adc
stc
into
mov
and
movsb
mov
loopne
jecxz
xor
inc
lods
cmpsb
popf
popa
pop
jmp
adc
dec
mov
aas
jno
loope
add
mov
sbb
dec
or
cmpsb
mov
push
out
imul
cltd
push
push
sbb
xor
xchg
rcll
dec
and
out
popa
sub
cmpsl
jnp
jge
adc
lods
cmc
sar
js
jne
add
or
mov
inc
testl
stc
das
lods
imul
and
cli
lcall
stos
pushf
xlat
jmp
stc
push
ret
and
or
paddsw
add
add
cmp
jmp
mov
mov
fmul
push
push
adc
add
push
lock
and
pop
xchg
and
in
repz
or
std
push
rcrb
sbb
in
dec
sbb
test
stos
stc
jmp
movsb
lret
ret
dec
or
cs
jecxz
pop
sbb
add
shrb
push
adc
sbb
add
out
xorl
and
push
test
fsub
mov
scas
cmp
sub
dec
in
mov
stos
int
and
lcall
bound
imul
push
rcl
xchg
rcrl
xor
inc
dec
pop
popa
popa
mov
sbb
jge
ffree
add
and
fwait
add
loopne
and
pop
add
sti
repz
mov
push
or
lock
inc
popa
jg
inc
mov
pop
subl
jbe
mov
cwtl
adc
pop
sahf
les
or
dec
mov
jns
xchg
push
daa
add
jmp
pop
adc
lods
inc
cmp
pop
outsb
ja
cltd
into
imul
aam
mov
loope
xchg
pop
xor
or
jno
nop
xlat
add
push
loope
leave
adc
es
lea
mov
xor
lods
sbb
mov
push
out
subl
sbb
fldt
push
dec
pop
fwait
lods
ret
push
add
pop
into
lds
sbb
mov
popf
sbb
mov
fwait
aas
test
mov
lea
pop
bound
test
stc
pop
loop
mov
mov
flds
dec
out
test
add
divb
mov
mov
iret
lea
loop
sbb
sbb
das
test
popa
fwait
lret
sub
out
mov
ljmp
xchg
add
cs
mov
xchg
xorb
push
ret
jo
fbld
mov
int3
cmp
mov
lahf
popa
sarl
movsl
aam
jae
add
int
sbb
add
rclb
loope,pn
fs
loope
pop
cmp
mov
pop
lock
jb
shlb
lods
std
insl
add
sahf
fists
popa
nop
or
or
leave
add
xor
pusha
jmp
fdivrp
movsb
jl
loopne
pushf
mov
scas
xchg
ret
add
pop
mov
loope
sahf
push
fwait
push
mov
xchg
test
mov
cmpsb
inc
or
sbb
adc
fildll
pop
lods
xor
add
mov
inc
sbb
pop
adc
jno
or
mov
mov
testb
mov
add
insb
add
pmaxsw
mov
or
loope
mov
adc
push
int
movsb
add
jae
imul
loopne
pop
inc
add
hlt
or
add
inc
daa
scas
lds
add
mov
add
cmc
mov
or
add
sti
sub
pop
shlb
imul
mov
inc
test
add
dec
ror
in
push
or
scas
mov
dec
aam
mov
addl
sub
in
pop
movsb
mov
cmp
cmp
sub
jae
add
mov
pop
pop
ret
cmc
out
loope
xchg
rcrl
or
call
xor
mov
add
dec
out
mov
xchg
fcoms
cwtl
mov
enter
popa
jnp
dec
in
stc
and
cwtl
filds
jbe
sub
fsubrs
lock
and
or
addr16
xchg
scas
mov
rcl
sub
repnz
fs
and
add
test
jg
movsl
mov
mov
add
or
in
sub
insb
add
ss
add
stc
push
xchg
xchg
into
idivl
adc
lahf
scas
je
cmp
xor
dec
ret
add
pusha
insb
ss
xchg
add
pop
int
add
sub
les
cltd
repnz
pop
or
pop
lods
and
mov
lahf
sbb
push
add
jnp
addr16
orb
add
sub
sub
add
inc
jae
clc
shrb
jmp
mov
cmp
push
jne
pusha
ret
jp
les
cmp
addr16
jno
xlat
loopne
imul
sbb
mov
lds
lret
stc
jnp
pop
leave
cmpsl
push
pop
xchg
ret
xchg
shl
jge
int
cmp
add
ds
fldenv
imul
pop
fists
jmp
add
dec
cmc
loope
shl
adc
mov
aaa
add
jne
add
push
loopne
outsl
mov
cmc
pusha
or
and
jo
lock
xor
rcl
pop
cwtl
dec
dec
in
or
ret
jnp
mov
inc
fwait
aam
mov
push
mov
lret
in
test
mov
dec
jp
hlt
mov
js
ret
adc
and
loope
mov
sbb
push
enter
push
shl
outsl
sub
inc
dec
fcomps
mov
mov
mov
fistpl
out
mov
add
push
jbe
mov
fwait
or
icebp
movsb
movsl
leave
mov
sbb
add
cmp
out
dec
add
arpl
inc
push
lds
fucomip
xchg
xchg
jmp
out
fld
jmp
movnti
push
aad
out
add
pop
mov
or
sub
pop
imul
mov
xchg
mov
add
loopne
sbb
or
mov
add
subl
xchg
xor
push
add
jbe
jle
enter
fsubrl
js
and
add
cs
cld
add
push
pushf
fwait
sbb
pop
outsl
mov
clc
loop
imul
cmp
dec
int
sbb
push
movsb
adc
fcoms
ffreep
add
inc
out
clc
inc
mov
imul
adc
test
jp
mov
stos
mov
rcl
xchg
add
rcll
sarb
add
out
jmp
mov
jne
lock
stos
cmp
scas
cli
movsb
pop
ret
aam
xchg
js
popf
fsubs
xchg
dec
in
ljmp
mov
sub
movsl
cwtl
subl
sub
loope
outsb
cmp
mov
adc
test
lea
test
mov
popf
sub
push
data16
into
add
pop
fildll
add
cmp
add
cwtl
pop
pop
and
jb
insb
add
fiadds
push
add
int3
pop
jl
out
cld
xchg
add
mov
inc
push
mov
jnp
sahf
rorb
mov
nop
int3
push
push
add
fs
push
mov
add
out
cmp
add
and
scas
cli
cmp
add
mov
push
jae
xlat
shlb
mov
adc
pop
scas
xchg
add
cmpb
mov
mov
icebp
outsl
enter
mov
cmp
xchg
sbb
movl
jb
sahf
loop
js
dec
or
cmp
ss
fcomi
xor
scas
sub
iret
nop
or
jbe
cmp
pop
dec
jge
cmp
inc
mov
iret
popf
and
dec
loopne
push
scas
outsb
and
xchg
mov
add
stc
ret
inc
dec
jne
sub
fcompl
jmp
sub
shll
jno
sbb
xor
dec
fwait
push
mov
push
stc
pop
mov
push
test
xchg
xor
jo
mov
lods
pop
push
das
add
imul
jmp
jp
fmull
lahf
mov
dec
push
ret
push
jg
cmp
cld
mov
dec
pop
add
int3
pop
cmp
mov
jb
sbb
shr
call
clc
and
int
ljmp
sbb
mov
or
pop
add
dec
incb
testl
pushf
add
imul
scas
xor
mov
add
lahf
dec
popf
mov
add
cmp
push
lea
jbe
int
push
loope,pt
pop
sbb
mov
add
jbe
inc
repz
outsb
out
fisubl
dec
scas
loop
test
ja
xchg
xor
or
aam
dec
xchg
adc
or
inc
dec
add
mov
push
stos
add
inc
jo
ja
das
sub
movsl
add
aaa
add
adc
out
xchg
mov
outsb
loopne
adc
lahf
sbb
jle
cs
sub
add
fistpll
jge
ret
add
stos
mov
jno
sub
or
pop
push
add
ret
out
popa
les
fwait
mov
stc
push
adc
pop
test
andb
mov
sbb
add
out
repz
pop
pop
push
mov
movsb
repnz
je
xlat
push
push
and
dec
scas
pop
popa
loope,pn
mov
pop
cli
in
popa
outsb
add
fiadds
scas
insb
jl
lods
loope
pop
rorb
adc
jmp
leave
std
in
lahf
int
stos
push
xchg
sub
loopne
lret
sub
lock
mov
stc
jb
repz
adc
lds
or
inc
inc
test
add
push
push
sbb
lret
inc
inc
sahf
mov
xchg
push
popf
xchg
xor
mov
mov
jae
cwtl
call
pop
ljmp
push
in
jae
jp
test
cmp
in
sbb
hlt
or
fldcw
js
imul
and
out
addl
test
cmpsl
leave
add
fs
jbe
pop
add
pop
ljmp
adc
ss
cmp
mov
inc
inc
jno
test
add
inc
lds
inc
or
loope
lcall
movsb
test
push
out
js
ljmp
jmp
sti
jns
call
stos
pop
add
clc
adc
add
mov
push
add
dec
cmp
loope,pt
loopne
push
shl
cmc
jg
rcrb
add
out
lret
jp
repz
mov
roll
push
ss
or
xchg
mov
and
aaa
outsl
cmp
adc
rclb
jmp
in
les
fisttpl
or
dec
xchg
push
or
fs
int3
xchg
cwtl
loop
clc
ficomps
mov
xor
mov
andl
cltd
stc
dec
into
mov
mov
mov
push
aad
lock
xlat
pop
push
sbb
add
jle
sbb
mov
clc
movsl
mov
insb
shlb
addb
movsb
or
add
or
sub
dec
mov
aam
cmp
xor
mov
sbb
adc
dec
adc
cli
lods
xor
xchg
mov
loop
inc
pop
mov
in
movsl
pushw
sahf
jae
push
mov
pusha
pushf
mov
adc
aam
or
psubusb
mov
sbb
test
shr
movsb
cmpsl
dec
int3
adc
sub
cltd
les
fld
cmp
in
popa
mov
or
add
popf
addr16
jg
mov
into
pop
pushf
test
jmp
fwait
inc
inc
movsb
jge
jo
add
iret
ret
fsubrl
aaa
add
ja
test
push
fidivs
push
mov
popf
push
aas
or
mov
xor
push
and
push
xor
test
jmp
pop
pop
es
mov
fildl
clc
jb
xchg
lock
mov
rcrb
pop
jo
push
push
xchg
lods
adc
ljmp
cmpl
xchg
rcr
loope
mov
lret
test
icebp
adc
xchg
sbbb
add
lods
pushf
imul
xchg
loope
stos
adc
mov
test
pop
loopne
dec
jmp
jge
mov
adc
out
movsb
in
add
adc
outsb
mov
scas
insl
imul
jl
pushf
fldl
sarl
jne
push
jg
add
das
or
idivb
xchg
repz
out
ljmp
popa
or
sti
les
adc
push
inc
lods
test
test
arpl
int3
add
pop
fdivrs
cmp
ret
je
mov
jmp
into
xlat
repz
outsb
arpl
icebp
jp
or
sub
pop
inc
inc
dec
or
cs
xor
jmp
js
mov
outsl
add
fsubs
adc
test
stos
adc
dec
fcompl
test
add
pop
add
jne
lahf
jns
lret
cwtl
popa
and
sbb
aaa
movsb
add
fwait
cmpl
push
test
pop
ds
jnp
stos
xor
dec
je
dec
sahf
lcall
aaa
test
mov
mov
sbb
jmp
movsl
sub
popl
push
jbe
movsb
bswap
pop
xor
shll
add
mov
shll
inc
mov
inc
add
test
add
int
pop
jp
sbb
dec
inc
sub
jge
sahf
cld
pop
loop
push
and
mov
in
das
adc
xchg
add
rcrl
call
add
das
mov
fs
or
mov
paddusw
aaa
das
loopne
sub
add
and
or
fstl
xchg
or
inc
cmpsl
popa
das
fimuls
sbb
add
and
push
je
jl
testl
rorl
push
add
cmp
push
push
push
push
push
xchg
movsb
lods
add
mov
xor
and
ja
shrb
das
mov
pop
and
mov
push
or
pusha
repnz
push
inc
push
roll
loope
test
or
push
adcb
mov
dec
add
repnz
aam
and
stc
pusha
push
negl
jl
sub
or
js
xlat
test
xchg
sarb
test
xchg
inc
jne
sbb
xor
popa
ljmp
ret
xchg
dec
add
in
add
out
dec
sbb
or
and
lock
shlb
add
xor
pop
ss
arpl
in
in
fs
enter
rolb
mov
shll
jne
lcall
jmp
jbe
mov
call
jle
and
adc
cmc
dec
push
dec
mov
cmpsl
add
bound
loopne
or
aam
mov
pop
or
mov
mov
imul
imul
xchg
pop
xchg
aad
xchg
mov
pop
sbb
faddl
gs
add
stc
fisubl
cltd
aaa
and
sbb
rcrl
mov
mov
sub
jns
movsb
les
lods
jecxz
test
or
xchg
add
and
add
inc
loope
sbb
push
fisubs
sub
cmc
mov
add
push
xor
sub
in
inc
enter
mov
add
sti
dec
mov
push
repnz
mov
add
fcomi
out
add
test
add
mov
cmp
sbb
divl
pop
daa
mov
dec
fdivl
sbbl
pop
xchg
jmp
mov
inc
sbb
stc
add
xlat
mov
mov
sbb
push
testb
and
jg
pop
outsl
jge
cld
in
cmpsb
test
lahf
stos
mov
repnz
ss
adc
mov
cmp
icebp
lcall
test
loope
test
mov
pop
adc
pusha
fldl
jl
inc
jmp
and
sbb
rcl
cmp
xchg
mov
adc
std
inc
adc
les
popf
push
sbb
rorb
and
inc
fwait
test
jb
mov
xchg
xlat
ss
mov
cmpsl
iret
in
test
add
std
push
stos
xchg
add
add
movsb
sbb
dec
testb
dec
iret
lods
adc
dec
mov
popa
jns
ljmp
add
push
or
add
or
sti
stos
or
jge
loop
push
xor
add
js
repnz
mov
sbb
enter
rolb
push
mov
and
pop
lret
dec
inc
or
mov
clc
insb
test
dec
stos
into
sub
insl
sbb
popa
mov
out
xor
sbb
outsb
sbb
jp
fcomps
repz
add
cmp
pop
cmp
gs
xchg
adc
add
stos
pop
mulb
cli
es
sbb
sti
or
in
sbb
repnz
std
loopne
repz
sahf
inc
add
jo
add
out
clc
sub
lahf
movsb
into
outsb
or
scas
push
cli
andb
pushl
scas
add
add
fidivl
test
cmp
xchg
add
cs
mov
daa
int3
cmc
mov
hlt
pop
inc
scas
cmp
sbb
pop
sub
cmp
xchg
repnz
mov
movsb
bound
adc
in
fbstp
scas
loopne
mov
sbb
out
xlat
cmp
push
lea
adc
add
mov
pop
add
or
mov
add
rclb
push
inc
push
inc
das
push
loope
insl
xlat
subb
add
dec
rcl
movl
mov
cltd
cmpsb
xor
andb
add
mov
adc
loopne
aaa
lcall
das
cli
sahf
mov
out
jmp
pusha
stc
in
std
out
or
dec
and
nop
cli
addr16
insb
sbb
imul
push
stc
and
cmc
xchg
push
shr
shrb
adc
add
mov
ja
adc
jno
fisubs
xchg
pop
pop
negb
or
jmp
and
dec
mov
imul
movsl
pop
adc
notl
add
out
cli
mov
aaa
xor
fwait
add
pusha
gs
decb
pop
mov
inc
cmp
popf
cs
push
add
shr
les
jl
xchg
mov
insl
movsl
add
lcall
dec
subb
mov
scas
or
inc
rcl
sahf
mov
and
fldl
dec
sarb
sub
stos
repnz
add
daa
cld
in
and
ljmp
fldt
jg
lods
ds
adc
mov
mov
or
adc
mov
decl
sbb
mov
fldcw
sub
add
imul
ss
adc
enter
lods
leave
add
dec
popf
inc
mov
lret
add
mov
mov
ficomps
icebp
dec
les
push
mov
mov
jl
mov
mov
xchg
pop
insl
sub
sbb
scas
mov
jecxz
jp
arpl
ljmp
pop
mov
mov
mov
fildl
mov
sbb
mov
imul
sbb
in
repnz
pop
js
std
enter
cmc
cmp
fnsave
ss
xlat
jp
pop
fst
add
push
pop
sti
mov
add
pushf
mov
xchg
in
lahf
movsb
or
jae
icebp
pop
mov
imul
push
bound
push
adc
mov
lcall
lods
mov
loope
xchg
loope
lahf
add
in
cmc
add
xor
stos
ds
mov
add
inc
push
pop
addb
xor
xor
orl
add
lock
movsb
loope
and
jp
in
mov
adc
add
adcl
loope
xchg
xchg
dec
pushf
clc
cmp
repz
pop
loop
and
xorb
fisubs
mov
pop
cli
add
xor
cmp
push
test
out
add
push
adc
xor
dec
adc
pop
lret
add
cltd
and
mov
fidivs
sarl
rorb
add
dec
sub
add
cmp
dec
jecxz
loopne
subb
mov
push
sbb
shrb
push
mov
cli
add
popf
arpl
hlt
pop
enter
inc
xchg
add
sbb
xchg
nop
add
sbb
add
enter
in
int
shll
mov
test
loopne
sub
push
into
or
scas
outsb
addb
and
push
addr16
enter
push
repz
adc
or
call
xchg
andb
mov
fldl
cmp
pop
and
inc
out
adc
repnz
pop
inc
loope
mov
xchg
jp
cmp
xor
fwait
loop
sub
mov
filds
pop
inc
pop
repz
and
in
jnp
xchg
daa
push
stos
popa
aaa
aad
add
mov
xor
call
pop
push
add
push
cmp
cld
push
jnp
lahf
dec
jmp
push
dec
loop
cld
adc
mov
push
add
es
test
jnp
pop
int3
sub
outsb
test
cmp
push
mov
lahf
test
std
icebp
or
mov
dec
shrl
inc
sbb
iret
arpl
aas
adc
pop
sbb
int
inc
sbb
arpl
adc
mov
ret
sub
imulb
dec
daa
fwait
jae
clc
sbb
mov
out
push
sbb
mov
or
sub
and
mov
jg
push
in
push
loopnew
bound
push
xor
sti
call
repz
mov
add
adc
lods
add
cmp
out
add
mov
shll
add
lcall
inc
insl
inc
mov
push
or
add
mov
add
push
neg
lds
aaa
repnz
pop
adc
popa
lret
mov
pop
mov
mov
push
sub
cmp
and
push
outsl
mov
cmc
sbb
repz
scas
into
fstl
js
inc
dec
jmp
movntps
aam
sbb
push
cwtl
cli
ljmp
xor
sbb
xchg
inc
lds
ljmp
add
cmp
lcall
mov
inc
imul
mov
sub
imul
and
cmp
jle
dec
sahf
dec
sub
stos
cmpsl
and
test
out
faddl
jmp
in
cmp
sarb
mov
imul
sbb
push
enter
xor
aaa
xor
test
ret
loop
sbb
fwait
sbb
insl
imul
fnstsw
and
add
and
mov
sbb
add
mov
xchg
push
jmp
lahf
lock
dec
faddp
add
push
aad
rcrl
or
add
mov
les
inc
lea
sbb
sbb
adc
aam
pop
adc
add
lahf
mov
data16
inc
lea
push
cmp
cmp
je
test
sub
inc
adc
cmp
or
es
mov
in
ja
data16
mov
pop
bound
push
je
not
dec
mov
push
mov
movsl
cmpsl
cltd
sbb
arpl
lret
mov
jecxz
mov
add
pop
jg
rcll
and
test
pushf
add
fdivrl
push
std
and
sub
inc
sahf
or
fildll
call
jp
test
and
sub
nop
sbb
out
rorb
add
jmp
sbb
sub
xor
fs
in
lods
and
insb
and
add
dec
ss
movsl
mov
add
in
das
loope
test
shll
cmp
scas
jno
mov
out
dec
mov
and
inc
mov
test
pop
lods
add
pop
shll
test
sbb
mov
push
sbbb
or
rol
div
dec
adc
stc
ret
push
pop
add
or
jne
lret
ljmp
jo
cvtpi2ps
roll
add
push
cmp
adc
push
cmp
fstpt
nop
pusha
sub
push
insl
add
icebp
sahf
mov
and
jbe,pn
adc
daa
dec
add
adc
mov
sub
dec
xor
sahf
inc
inc
pop
add
dec
xchg
adc
inc
pop
icebp
mov
les
pop
fimuls
jp
add
mov
mov
out
iret
dec
add
add
jge
pop
and
stc
mov
gs
inc
dec
sub
add
dec
xchg
fwait
rcrl
orl
jg
push
mov
add
mov
jle
pop
jbe
inc
ljmp
push
add
stc
jns
add
stos
jb
xchg
faddl
pusha
and
adc
xchg
pop
jecxz
or
repz
pop
jns
loop
lret
sbb
sarb
or
mov
adc
cs
adc
mov
pop
movsb
test
aam
fcomps
aad
inc
outsl
jns
ds
mov
mul
or
shl
jl
sub
cmc
dec
dec
movsb
or
adc
hlt
clc
fdivl
adc
psrlq
addl
sub
test
daa
call
paddb
push
and
dec
add
fs
andb
sub
dec
fwait
adc
mov
rcll
scas
cmp
sub
lods
xor
cmp
test
test
sbb
cmp
cmc
ret
sub
icebp
lahf
sub
mov
loope
add
jge
fmul
in
xchg
mov
adcb
repnz
add
mov
shl
mov
add
int
cmp
shll
jmp
cltd
push
lock
xchg
addb
push
add
in
cli
sub
inc
movsb
and
cmpsl
sbb
lcall
jge
andl
and
push
cmpsb
add
add
int3
imul
jmp
movsb
or
mov
notb
outsl
mov
clc
pop
outsl
loopne
scas
movsb
mov
rorb
mov
pushl
and
or
push
cld
dec
cmp
add
xchg
in
les
push
dec
inc
add
inc
push
es
add
ljmp
call
mov
mov
cmpsl
in
imul
add
fists
loopne
add
in
sub
sub
out
lods
scas
ljmp
inc
lcall
orl
jns
adc
add
push
adc
or
enter
adc
and
fneni(8087
hlt
inc
add
push
loope
sub
shl
test
push
xor
sub
cmpb
add
xchg
add
xchg
mov
jns
pop
push
push
add
mov
add
ja
ret
subl
add
jge
into
je
or
testb
pop
push
sub
call
add
enter
mov
jae
dec
lahf
sbb
inc
loope
pop
cmpsb
sahf
shrl
dec
adc
dec
aaa
cmp
xor
sbb
push
sub
mov
das
fwait
cmp
cld
ljmp
cmc
jmp
test
imul
add
jnp
cmc
and
leave
pop
repnz
inc
push
pushf
inc
hlt
mov
and
rolb
pop
sub
xchg
push
adc
mov
fdiv
jb
jg
xchg
add
push
pop
xor
fidivl
sbb
dec
arpl
pop
aas
add
insl
pop
fbld
jmp
xor
loop
push
push
fwait
sbb
mov
cmp
rolb
test
sub
push
push
xchg
add
mov
pop
pop
push
in
jne
sti
add
mov
push
pop
xchg
push
or
add
pop
dec
mov
aam
cmpsb
add
dec
add
stc
shlb
push
test
pop
add
aaa
notl
in
pop
popa
ret
repz
sbb
lcall
movl
lds
push
adc
mov
jo
lods
add
cmp
sti
sub
aad
pop
cmp
popf
ss
cmpsb
dec
sub
jbe
adcl
int3
insb
bound
and
test
adc
and
and
mov
outsb
addb
mov
jge
jmp
daa
test
adc
in
add
or
adc
add
pop
mov
sti
sbb
pop
jnp
daa
jl
mov
int
jp
mov
add
pop
mov
mov
mov
push
push
add
testl
or
dec
rcrb
jle
loope
rolb
xchg
jl
mov
jmp
pushf
or
dec
mov
arpl
mov
outsl
sbb
loope
or
cld
cmp
ljmp
sbb
add
fidivrl
enter
mov
inc
sahf
add
ret
rclb
xor
inc
adc
xchg
outsb
dec
xor
es
mov
test
ss
and
or
cmpsb
jl
sarb
sbb
jae
test
out
loopne
add
and
scas
mov
cmpsl
add
in
dec
push
lahf
incb
cmp
pop
rcll
daa
adc
xor
jno
test
mov
inc
incb
jns
pop
lock
xchg
and
xchg
std
pushf
cld
add
push
push
fadd
or
push
ret
cmpsl
lds
enter
xchg
cld
pop
push
xor
in
ja
adc
and
scas
xchg
push
jbe
sbb
lds
jae
add
sub
mulb
jmp
xchg
xlat
mov
xchg
cltd
push
sub
jns
pop
and
cli
pop
cwtl
sbb
or
fldl
or
sub
fildl
mov
fdivrl
jo
scas
pushf
add
inc
push
mov
mov
pop
test
popa
inc
adc
mov
add
out
mov
pusha
xor
js
fildll
mov
aad
mov
inc
je
imul
pop
and
mov
xor
xchg
das
sbb
daa
or
jl
orl
loope
std
push
push
sarb
into
int3
add
mov
shll
loope
cmpb
ficomps
push
mov
inc
cli
sbb
in
outsl
imul
add
mov
roll
push
cmp
adc
mov
rolb
popf
out
lea
arpl
jmp
js
addb
orb
jg
pop
sbb
inc
test
je
push
cmp
cmc
add
scas
ds
mov
dec
xor
mov
cmp
lods
add
mov
fadds
push
cltd
mull
insl
sbb
pop
adc
pop
or
gs
lods
add
pop
out
jbe
or
popf
subl
xor
xlat
push
add
test
push
or
sub
movsl
xchg
inc
jno
pop
test
popa
stos
test
insb
jp
adc
jcxz
mov
cs
xlat
mov
cmpsl
add
in
adc
cmp
mov
mov
movsl
pop
sbb
dec
scas
or
loope
add
outsl
sti
ss
pusha
pop
incb
ficompl
pushf
mov
add
pop
pusha
std
mov
mov
xor
outsl
fsub
push
lods
test
xor
push
std
push
cmp
jecxz
or
movsb
adc
adc
push
repnz
lret
hlt
pop
std
cmc
and
sbb
loope
add
daa
test
dec
add
std
in
addr16
cmc
imul
jne
xchg
add
mov
push
loope
idivl
and
leave
and
lds
add
jg
add
addb
add
in
mov
jns
icebp
add
inc
stos
js
xchg
add
paddusb
fisttpll
das
scas
mov
pop
iret
xor
dec
mov
sahf
das
lret
pushf
arpl
sub
sub
or
negb
std
cmp
movsb
pop
pop
jmp
sub
mov
in
in
pop
cmp
cmp
hlt
mov
inc
dec
inc
cmpsb
mov
lock
lods
adc
xchg
imul
lret
out
adc
cmc
jg
lcall
jae
fildll
addr16
add
fwait
push
xor
or
add
ss
pop
call
js
xchg
mov
mov
loope
add
xorl
fildl
rcl
divl
sub
xor
sbb
cli
inc
shl
popa
mov
mov
fs
pop
pop
xchg
ds
or
iret
leave
add
imul
add
popw
fldt
mov
jae
xor
mov
push
add
mov
inc
in
rorb
add
test
add
add
mov
mov
lods
aad
add
push
push
int3
or
or
sub
cmp
mov
enter
push
jmp
inc
repnz
out
push
lahf
cwtl
and
call
iret
cltd
in
insb
lds
dec
jge
js
sbb
push
hlt
test
testl
add
call
mov
add
stc
inc
push
jmp
loop
sub
addb
divb
add
push
cmpsl
addr16
inc
add
pop
mov
add
bound
add
stc
jns
mov
or
push
aam
loope
jg
in
sbb
sbb
and
or
sub
mov
adc
mov
leave
jno
and
jg
fwait
cmp
xor
inc
mov
je
inc
jecxz
ss
dec
sub
inc
in
repnz
outsb
cmp
mov
add
gs
pop
scas
jmp
jmp
pop
sub
cwtl
dec
lock
movsb
std
mov
add
jmp
sub
and
mov
mov
or
mov
xchg
stos
mov
scas
loopne
loop
dec
xchg
jecxz
sbb
clc
out
addb
roll
div
leave
daa
mov
sub
push
ds
inc
pusha
nop
and
jp
xchg
sahf
data16
flds
cs
insb
in
add
gs
mov
rcr
add
jnp
pop
xor
inc
mov
pop
cmpsb
push
mov
dec
test
rolb
mov
xlat
and
aam
shl
mov
sub
add
lret
ljmp
pop
stc
or
push
jmp
inc
lcall
and
movsb
ljmp
inc
push
push
dec
nop
in
in
test
jecxz
insb
popa
add
test
mov
xchg
cmc
aas
sbb
popf
in
rep
adc
xchg
mov
test
adcl
popa
cmp
pop
push
push
loop
xlat
enter
or
mov
cs
sub
repnz
pop
ss
inc
mov
add
xchg
sbb
loop
je
sbb
add
sbb
push
repnz
dec
mov
add
mov
jge
xchg
dec
sahf
push
scas
add
adc
xchg
and
and
imul
add
fwait
or
rolb
pop
mov
mov
xor
mov
adc
stos
enter
sbb
testb
cmp
add
jecxz
add
and
jg
out
ds
sub
leave
loope
jle
shl
jl
pop
stc
or
mov
mov
insl
ficoms
add
mov
mov
mov
mov
lock
inc
test
leave
pop
cld
cmp
and
call
add
or
ret
repnz
mov
lret
ret
ret
push
or
fs
add
mov
enter
pop
fldl
pop
mov
adc
addr16
shlb
xchg
dec
push
lock
cmc
sbb
xor
add
adc
and
mov
cmp
mov
add
xchg
pop
lods
fcmovu
loop
adc
add
hlt
cmc
out
add
or
jmp
lea
inc
ror
add
jmp
or
mov
das
mov
bound
mov
sub
add
add
hlt
mov
aaa
out
or
pop
inc
sub
mov
sbb
gs
jle
int3
insl
and
scas
and
or
in
add
mov
add
push
sub
lods
xchg
rorl
lock
push
test
xchg
in
les
sahf
cli
mov
pop
sbb
into
pop
push
sti
mov
or
subl
adc
bound
ror
hlt
sbb
les
add
push
fstpl
push
push
sbb
sbb
push
push
xchg
insl
mov
cmp
inc
and
cli
add
dec
fwait
popa
add
sbb
test
ljmp
lea
cmp
in
pop
sub
adc
or
shll
jge
add
arpl
adc
cli
imul
add
jns
loopne
pusha
jo
pop
mov
fdivrs
roll
or
lock
call
xor
ret
cmp
lea
lds
inc
and
jge
fildll
mov
add
sbb
dec
or
in
lahf
or
add
sahf
rcl
dec
pop
in
lret
sbb
or
outsb
push
mov
ret
cmpsb
cld
add
jle
xor
rcr
adcl
xchg
nop
jg
stos
add
popa
mov
add
sbb
insb
sub
pusha
test
lcall
rol
addr16
adc
loopne
jne
push
or
adc
sbb
adc
push
loope
mov
jbe
enter
xchg
sbb
jmp
pushf
mov
inc
neg
les
mov
loop
repz
popa
pop
xor
jecxz
fnop
add
lods
idiv
scas
and
scas
mov
fidivs
idivb
sub
dec
std
push
imul
push
mov
scas
fldl2t
or
repnz
xor
lea
cmpsl
mov
test
lret
test
ja
mov
enter
daa
fadd
loope
stos
jbe
adc
mov
mov
add
mov
mov
jns
aad
mov
in
iret
pop
insb
into
add
rolb
pop
adc
shrl
add
push
aam
mov
xchg
mov
je
out
roll
mov
mov
int
fisttpll
sub
add
xchg
enter
and
lds
fistps
adc
add
jg
lods
pusha
loopne
ja
jbe
popa
push
movsb
push
adc
jecxz
xor
cmc
mov
mov
pop
aas
imull
mov
cmpsl
scas
jmp
or
pop
sub
les
icebp
popf
out
repnz
out
xchg
push
pop
ret
sbb
fdivl
test
mov
call
lret
cwtl
push
pop
xchg
mov
shr
arpl
add
and
and
add
xor
imul
xlat
pop
les
das
daa
dec
mov
jmp
xchg
sbb
lods
and
jge
mov
cmp
scas
repnz
lock
int3
arpl
jae
out
push
aad
add
lds
mov
and
ret
sub
push
lds
push
mov
dec
dec
out
fbstp
mov
or
adc
sbb
jle
mov
rolb
fs
cltd
push
xchg
imul
popa
les
adc
jle
add
cmpsb
xor
mov
add
pushf
jl
out
sub
push
lret
pop
push
xchg
xchg
int
sbb
sahf
cmp
add
ficompl
jmp
xchg
roll
out
jecxz
jae
fcmovnb
pop
cmp
or
inc
add
sub
mov
cmp
add
mov
pop
test
adc
pop
adc
popf
add
push
ljmp
add
lods
sbbb
ds
jecxz
imull
add
add
daa
add
xor
adc
fsubl
adc
xchg
lret
add
jecxz
add
adc
imul
add
ljmp
scas
call
jg
sbb
andl
icebp
dec
pop
sbb
mov
out
pop
loop
scas
push
jge
push
xchg
imul
add
ds
push
sub
adc
push
pushf
adc
and
cmp
dec
mov
adc
ss
outsl
pop
add
stos
xchg
aas
push
je
adc
sahf
xchg
test
push
xchg
xor
test
and
and
pop
or
out
add
movsb
popa
inc
dec
add
clc
jmp
add
sub
sbb
int
lock
cmpsb
js
pop
jmp
cli
in
aaa
lahf
popa
mov
sub
add
and
icebp
popa
sbb
ds
add
sbb
sahf
aad
sbb
push
jbe
or
scas
lods
enter
dec
push
push
dec
fmuls
gs
push
push
out
mov
test
add
or
and
xchg
push
push
push
insb
aas
pop
mov
add
cmp
adc
sarl
incb
push
pushf
ret
imul
sbb
mov
lret
fidivrs
lea
adc
sbb
add
mov
lods
push
lret
sbb
or
inc
add
mov
jb
sahf
inc
les
cli
sub
test
or
xchg
insb
es
add
enter
stos
mov
icebp
repnz
fcomps
sbb
mov
cmp
xlat
fstpl
mov
cli
out
sbb
rcl
loope
adc
rolb
ja
sub
push
adc
mov
xor
ret
enter
or
std
xchg
jecxz
aas
sub
adc
stc
insb
sbb
sub
stos
idivb
cmp
clc
cmpb
movsb
add
xchg
cmc
call
or
pop
mov
outsb
push
nop
add
xchg
insl
js
vxorpd
cmc
pmaxsw
add
aam
pop
add
or
shll
add
out
jnp
add
bound
or
test
add
imul
pop
shll
cli
scas
xor
in
or
sbb
ret
pop
call
jg
shll
add
mov
cmp
ret
pop
mov
std
mov
imul
add
test
or
dec
xorl
inc
jle
je
sub
ljmp
lret
jg
pop
outsl
ds
add
cs
lock
and
aam
lds
loop
mov
add
out
cmp
inc
add
int
rcl
jb
add
push
add
outsb
aas
pop
mov
xor
adc
into
test
jl
es
testl
cs
lods
cmpsl
loope,pt
xchg
lret
pop
push
or
xchg
add
xor
aas
jge
fwait
push
cwtl
les
mov
rcr
mov
dec
mov
dec
std
movzwl
out
repnz
sub
sbb
sub
idiv
add
icebp
sbb
cwtl
mov
mov
sub
popa
sti
adc
pop
push
mov
add
sub
lret
stos
jmp
jns
ljmp
jmp
popf
pop
scas
xchg
or
ja
test
inc
add
adc
bound
scas
movsb
sbb
cmp
push
and
orb
push
fsubrs
xor
xchg
mov
pop
pushf
sbb
sbb
or
dec
movsl
cmp
jb
add
add
pop
test
pop
shlb
adc
lret
dec
js
xor
dec
hlt
incb
ret
xor
mov
in
jp
lcall
add
leave
pop
sub
fistpl
adc
jns
les
ss
out
dec
mov
jge
sbbl
lret
les
or
mov
inc
arpl
cmpsl
fisubl
pop
fcmovnbe
mul
insl
std
loop
sbb
mov
fidivrl
dec
lods
jns
fbstp
cwtl
dec
push
inc
or
testl
out
movsl
rcr
idivb
push
repz
pop
dec
push
sub
inc
adc
add
loop
mov
mov
add
stos
outsb
mov
push
push
pop
das
add
out
mov
scas
jmp
adc
add
jo
jp
pop
dec
mov
mulb
sub
cmp
adc
xchg
jbe
in
or
add
mov
incb
hlt
jae
pop
lods
in
sub
out
add
pop
cmc
add
cmp
adc
push
jecxz
xchg
loop
pop
jmp
test
lock
add
aas
or
hlt
rol
sarb
std
jbe
add
xchg
fbstp
int3
push
xlat
and
xchg
pop
insb
push
adc
cwtl
shr
sub
ret
add
roll
arpl
cmp
addb
loope
in
int3
aam
cmp
or
ret
mov
adc
inc
iret
adc
test
ret
add
jp
sbb
xchg
inc
jne
mov
xchg
and
adc
mov
jge
pop
ljmp
ret
adc
xor
aad
es
or
cmpsb
aas
nop
pop
test
and
clc
repz
mov
insl
cmc
imul
in
mov
stos
mov
sahf
jo
add
cmpl
mov
xchg
mov
sbb
mov
imul
mov
scas
outsl
int
cwtl
pushf
jge
adc
pop
ja
movsb
add
bound
sbb
pusha
fldl
ja
andb
push
prefetch
or
divb
adc
lcall
dec
add
xor
push
hlt
bound
insl
ss
test
jl
and
repnz
movsb
divl
into
notb
xor
enter
insb
pop
rorl
mov
fsqrt
nop
jae
iret
clc
shrb
out
test
mov
stc
aam
lock
jae
mov
sbb
cld
js
outsb
add
fistpll
btc
insl
add
orl
and
std
into
pop
popa
inc
mov
lods
adc
movsb
stos
cltd
repnz
mov
add
mov
mov
sub
and
mov
inc
insb
popf
push
adc
inc
cmp
loopne
and
jb
outsl
jge
adc
testb
mov
js
loope
sbb
fmulp
sbb
cmp
pop
pop
int
inc
ret
cld
jbe
push
xlat
push
add
enter
ss
aas
xor
data16
lock
cmp
mov
mov
fnsave
xchg
add
mov
xchg
xor
roll
loope
push
fadds
pop
xchg
ds
cmp
jns
sub
adc
inc
rolb
xor
in
pop
ds
dec
jns
aam
or
imul
mov
repnz
xchg
aad
popf
in
pop
cs
sbb
xor
push
inc
testb
cmp
add
sub
adc
add
push
jmp
stos
rcll
ffreep
cmp
sti
in
test
insb
lret
add
add
in
mov
add
jmp
or
outsb
fimuls
add
bound
pop
fwait
xchg
sbb
shll
push
and
adc
hlt
in
insb
jecxz
pop
xchg
add
push
adcl
stos
mov
clc
pop
sbb
data16
repnz
sbb
inc
push
cld
xchg
loope
rcpps
or
loopne
pop
sar
sub
pop
std
mov
or
lahf
sub
repz
sbb
adc
mov
ja
and
mov
or
and
pop
pop
sbb
int
mov
bound
aam
scas
and
hlt
add
fsub
dec
push
sub
sbb
jo
jbe
ficomps
fiadds
mov
std
ficompl
loop
sbb
sar
repz
out
les
push
xchg
in
in
xchg
jnp
popf
add
dec
inc
sub
dec
jge
outsl
inc
push
sub
mov
fistpll
sbb
cmp
gs
xor
ret
inc
push
adc
loop
sub
jno
sbb
sbb
mov
cmp
sbb
lret
hlt
cmp
mov
xchg
movsb
xor
ljmp
mov
test
fdivl
imul
fldl
and
loope
xor
adc
scas
jmp
pop
test
ja
fcomps
leave
data16
mov
cwtl
dec
loop
sub
and
inc
pop
push
add
or
cmc
lret
lods
mov
push
jecxz
pop
add
jae
lret
popa
outsb
int3
mov
jp
sbb
lcall
in
and
xorl
add
ss
add
or
pop
jb
push
sub
rcrb
mov
je
out
les
fsubl
push
jecxz
pop
roll
and
mov
rolb
sbb
movl
mov
pop
sbb
pop
jle
subl
out
and
dec
call
cmp
add
pop
mov
dec
lock
or
pop
adc
icebp
and
dec
push
cmp
imul
shrb
pop
and
sbbl
pop
add
xchg
inc
mov
mov
mov
xorl
addb
int3
into
mov
adc
push
mov
ljmp
clc
popf
shrb
inc
add
cmpsb
push
rorl
lds
outsl
xor
jecxz
loop
and
into
lods
push
rclb
test
sbb
xchg
addl
lea
dec
movsw
mov
out
inc
sub
sub
push
mov
pop
mov
lahf
sbb
push
push
das
sbb
filds
jo
and
les
mov
ficompl
cltd
fldl
aad
shrb
and
in
lret
xor
int
push
push
push
mov
sbb
test
sub
sub
push
fidivrs
add
inc
aam
out
lock
mov
fsts
ja
fsub
cmp
jmp
and
sbbl
xor
mov
inc
fwait
mov
arpl
cld
call
push
sarl
mov
in
fwait
pushf
cmc
add
xchg
xor
pusha
stos
or
cld
dec
add
inc
jg
out
add
imull
adc
adc
jns
jne
idiv
mov
lret
aad
dec
out
int3
mov
mov
inc
bound
sub
sub
movsb
test
ljmp
mov
add
jp
jns
out
adc
add
ja
sub
sbb
leave
adc
bound
mov
mov
adc
lock
movsl
cmp
ret
jbe
xor
jnp
add
ljmp
scas
fsubl
lods
mov
xor
sti
add
shl
cmp
in
and
mov
ret
mov
xchg
mov
dec
sub
push
sti
lret
les
push
adc
and
cmpsl
sub
xlat
rcll
addr16
ss
adc
fwait
or
inc
adc
pop
jns
sbb
outsb
sub
add
adc
pop
cmpsl
mov
and
test
jbe
in
lcall
push
dec
dec
aas
jnp
push
fwait
sahf
add
arpl
test
add
mov
rolb
push
js
out
insl
iret
stos
ljmp
dec
sbb
mov
out
mov
jmp
push
push
iret
loopne
int
movsb
cs
add
xchg
dec
pop
ret
jno
add
dec
inc
dec
dec
fcmovnbe
aad
or
jle
popa
cmpsb
add
jecxz
jp
pop
or
and
mov
inc
adc
xor
push
and
cmp
cmp
mov
mov
lcall
sbb
imul
mov
xor
jge
les
testb
and
mov
fsts
pop
push
icebp
mov
inc
imul
out
shlb
and
das
sub
pop
or
xor
pop
popa
mov
mov
push
adc
call
lcall
clc
add
ficompl
aaa
sahf
and
fucomi
popa
sub
call
mov
movsl
les
add
mov
scas
je
ss
and
jmp
sbb
add
or
add
fdivs
add
and
dec
mov
nop
in
cld
les
add
hlt
lcall
xlat
sbb
insl
mov
les
aas
jne
int
iret
mov
adcb
sbb
add
add
jmp
pop
add
stos
jl
add
dec
mov
testl
lods
fmuls
jp
cli
mov
cmp
loop
inc
xchg
push
xor
sbb
cmpsb
add
dec
dec
sub
xchg
pop
xor
movsl
inc
push
loope
sub
xchg
adc
lahf
and
hlt
int3
adc
push
dec
aam
xlat
add
lret
orl
repnz
ss
shr
xchg
xchg
adc
out
les
aad
stc
add
jno
xchg
mov
aam
jl
dec
fwait
ljmp
add
mov
stos
push
shll
pop
add
es
add
stos
sbb
adcb
mov
add
jge
lds
nop
out
cmp
mov
js
hlt
add
or
push
popf
sbb
call
jge
add
xor
lods
mul
or
cmp
sub
sub
pop
popf
adc
xor
jnp
adc
push
pusha
scas
add
insb
push
cmp
stc
aas
popa
push
clc
hlt
adc
add
push
sub
dec
sbb
add
out
mov
pop
in
inc
loopne
or
xchg
iret
les
ss
icebp
cs
in
mov
dec
add
cmp
out
sub
ret
mov
inc
mulb
pop
popf
sub
xchg
mov
incl
loopne
sub
movsb
cmc
cs
insb
bound
pushf
or
mov
push
or
ret
sbb
test
sbb
sbb
movsb
cmpsl
add
xchg
jnp
popf
push
loope
add
lea
cmpsl
sub
lret
pop
test
outsl
sti
pop
dec
push
jb
adc
and
or
push
cmp
lcall
mov
lods
mov
inc
push
and
out
pop
insb
std
inc
fiaddl
in
pop
adc
das
inc
mov
loop
and
mov
loopne
jbe
mov
aam
push
and
rorb
test
imul
loope
in
enter
loopne
iret
std
push
sbb
popf
in
mov
add
into
mov
jp
inc
push
pop
out
add
adc
mov
adc
roll
dec
ja
jle
pop
aaa
invlpg
jmp
fwait
add
cmpsb
mov
mov
mov
add
data16
push
dec
sub
adc
dec
or
dec
mov
sbb
ja
lcall
xor
xor
fldcw
or
addb
call
xlat
add
mov
loope
mov
fs
insl
add
je
and
mov
leave
call
add
dec
sub
pop
push
adc
pop
or
sbb
clc
add
scas
sbb
add
cltd
mov
pop
xor
lret
fadds
in
pop
push
subl
aad
dec
inc
loope
inc
jns
repnz
pushf
mov
jl
mov
test
push
add
out
sbb
push
movb
pop
add
xchg
loope
cs
pop
test
jmp
cmp
bound
push
sbb
adc
push
push
enter
je
adc
popf
adc
out
and
daa
cld
mov
or
clc
out
les
mov
ret
movsb
pop
sbb
inc
push
inc
mov
adcl
js
repnz
scas
les
shll
add
lods
xchg
adc
add
cmp
pop
sarl
sbb
xor
sbb
rolb
add
mov
outsl
cmp
std
xlat
movb
insl
fiadds
jmp
add
ret
fistps
les
pop
cmp
test
add
mov
mov
sbb
push
adc
outsb
add
sub
xchg
and
movsb
mov
iret
mov
add
add
jbe
xor
aas
stc
test
push
mov
ja
loop
into
dec
push
mov
ret
and
fwait
xor
mov
loopne
add
mov
add
push
add
mov
inc
mov
icebp
push
shrb
add
data16
add
xlat
dec
mov
push
mov
enter
add
mov
clc
jecxz
xchg
das
xor
js
push
add
jbe
sbb
aad
and
cmp
insl
push
pop
aam
adc
xchg
add
cwtl
add
inc
cld
or
adc
add
hlt
fists
push
dec
add
pop
fwait
mov
mov
pop
sar
sbb
movsb
scas
and
fstpl
jne
loope
mov
leave
loopne
mov
mov
outsl
jl
adc
sub
lret
enter
aad
movsb
je
lods
jmp
mov
sbb
imul
rorl
rcll
add
adc
mov
test
addb
addl
mov
pushf
loop
int3
xor
add
mov
adc
mov
adc
and
fdivrs
add
mov
negl
dec
popa
in
shll
dec
gs
add
pusha
sbb
add
mov
pop
cmp
popa
jb
addb
sbb
xchg
cs
cmpb
rcrl
std
fstpt
test
les
fdivrl
dec
add
out
lock
mov
stos
hlt
ret
ljmp
lea
popa
out
pushl
insb
cmp
popf
int3
call
daa
xchg
xchg
stos
adc
pusha
or
loop
scas
sbb
add
arpl
dec
add
jne
aas
sub
push
fwait
les
mov
test
add
out
in
lock
adc
rolb
sbb
cmp
mov
mov
gs
lods
bound
mov
add
fwait
cltd
cmp
inc
dec
xchg
push
cltd
mov
ds
in
lods
xlat
add
jl
or
add
imul
dec
stos
gs
add
ret
dec
xchg
add
rcrl
dec
std
shr
ja
mov
out
icebp
pop
add
jbe
mov
das
or
les
lock
outsl
lahf
decl
shlb
imul
and
arpl
loop
call
sbb
int
adc
shl
add
std
mov
aam
adc
jo
ja
mov
mov
mov
add
lock
sub
add
fisubrs
ja
mov
cltd
pop
push
jl
sbb
mov
add
or
imul
das
fisubs
add
jmp
sub
shll
sbb
sbb
dec
loop
imul
push
movsb
cmpl
cmp
lock
negb
in
out
fistpl
sahf
stos
adcb
mov
inc
pop
stc
gs
pop
xchg
sub
insl
add
mulb
sub
jb
je
push
test
mov
roll
and
push
cld
and
cmpsl
lahf
sbb
push
sub
mov
pop
inc
iret
movsb
jecxz
fisttpll
js
or
test
leave
xchg
adc
or
sbb
insl
add
lahf
filds
mov
jge
and
xchg
or
rolb
stos
push
ficoms
cmp
mov
dec
insl
out
negb
lcall
mov
ret
aam
sbb
mov
movsb
test
pop
pop
outsb
test
xor
stc
hlt
xchg
mov
or
imul
outsl
mov
fsubr
incb
and
jae
mov
add
pop
push
int
fdivrs
jl
add
shrl
mov
push
ja
push
xchg
into
repnz
push
xor
fstpl
sarb
sbb
insb
or
add
jno
push
sub
in
scas
pop
jns
jbe
shrb
fucomip
xchg
fidivrs
loopne
jmp
sub
adc
movsb
in
ficomps
sti
lds
scas
ret
outsb
dec
out
cmpsl
add
jle
or
xlat
jg
xorl
stos
test
mov
outsb
push
dec
stc
mov
xchg
aas
push
stos
mov
loope
adc
rcrb
cmp
jl
jmp
cmp
dec
mov
mov
stc
out
add
dec
inc
in
or
jl
pop
test
andl
add
xor
xchg
push
xorb
sbb
outsb
mov
add
movsl
jnp
add
jae
cli
mov
outsl
test
iret
push
pushf
or
mov
sbb
lods
cmpsl
xor
mov
in
decb
cmc
sbb
dec
imul
add
xchg
aad
ljmpw
lods
jl
add
ret
and
inc
xor
sbb
popf
loope
aaa
cli
mov
and
test
dec
cld
es
stc
fdivrl
mov
fsqrt
add
mov
xchg
dec
scas
adc
addl
out
push
adc
and
shll
add
cmc
jns
iret
call
sub
mov
stos
add
sbb
xlat
ja
mov
in
dec
repz
lds
pop
nop
out
sub
popa
jb
pop
cmpsl
mov
iret
xchg
add
mov
testl
lea
stos
in
or
mov
mov
sbb
shlb
mov
jle
ss
pop
and
sahf
jbe
aad
xor
add
out
xchg
jp
lock
les
sub
sbb
testl
pop
add
lds
add
push
sbb
scas
adc
add
loope
mov
or
in
loope
stc
or
lret
add
mov
mov
add
das
mov
and
xchg
adc
popa
adc
pop
bound
jns
adc
inc
notb
pop
add
in
scas
shr
lods
enter
inc
fiaddl
sub
add
cltd
sbb
add
pusha
in
and
sbb
or
pop
and
lcall
add
jne
fnstenv
icebp
test
sbb
inc
jge
add
rcrb
repnz
cmp
gs
rcrb
add
mov
cmp
push
add
add
jnp
aam
mov
outsl
mov
out
push
xchg
adc
dec
outsl
inc
add
aam
pop
fistpll
jo
sub
push
lcall
dec
adc
fsubrl
jo
scas
or
mov
pop
popa
pop
lea
cmp
les
mov
adc
and
stc
pop
inc
and
add
js
mov
es
outsl
aaa
add
scas
test
fisttpl
adc
enter
jo
push
push
mov
hlt
out
clc
cwtl
in
lods
sbb
xchg
mov
imul
lock
es
and
xor
loope
inc
fwait
rclb
add
jl
inc
js
mov
movsl
mov
dec
mov
test
subl
or
and
nop
jl
push
ja
or
addr16
sahf
or
fs
jne
sbb
les
adc
add
cmp
jge
lods
pop
add
scas
ja
lcall
add
cli
sub
add
ljmp
and
mov
push
xchg
add
or
xor
dec
add
subl
pushf
xlat
mov
out
int
jp
jmp
mov
imul
lcall
xor
xor
add
leave
test
mov
jo
cli
pusha
cld
int3
arpl
test
movsl
sub
cmpsb
cmp
mov
aas
stc
or
sbb
cmp
cli
or
inc
mov
push
push
and
xchg
popl
push
jl
leave
xlat
push
push
mov
lret
neg
cmc
add
orl
in
lahf
data16
add
jne
push
pop
neg
sbb
loop
int
add
jmp
or
sbb
clc
loope
ds
or
test
jae
mov
jg
popa
test
jl
and
inc
inc
jae
hlt
adc
push
jmp
or
inc
add
repnz
in
loop
test
nop
scas
mov
or
xlat
mov
adc
das
jbe
add
fldl
add
fs
sbb
push
add
xchg
cmp
loopne
jp
xchg
scas
add
mov
ret
mov
fstpt
sbb
cld
in
repz
and
sbb
sahf
mov
inc
add
roll
je
mov
jge
push
bound
jne
pop
push
add
imul
jne
dec
sbb
lock
out
xor
cs
mov
lret
int3
cmp
lahf
mov
mov
push
ficompl
popa
cmpsb
lods
lods
test
push
xor
addl
sbb
and
push
and
jo
into
sti
out
mov
ljmp
stos
add
adc
enter
add
dec
mov
rclb
stos
mov
fwait
lds
push
lock
shrl
pushf
popa
test
push
cltd
sbb
jno
push
or
dec
popf
les
jae
mov
movsb
inc
and
pop
mov
stc
std
sbb
repz
dec
lods
sub
or
xlat
add
pop
add
ja
push
xor
add
xor
repz
lea
pusha
inc
adc
add
das
sbb
in
sahf
lock
outsl
in
call
out
lcall
mov
xor
and
xchg
inc
loope
aam
xchg
xchg
mov
fimuls
cmp
pushf
fmull
add
mov
movsb
push
xchg
xchg
repnz
fcomps
loop
jecxz
loop
jg
in
mov
mov
push
dec
adc
push
leave
icebp
in
pop
xchg
iret
inc
inc
dec
adc
pop
push
pop
add
out
add
mov
aas
add
ss
jle
cmp
out
mov
dec
xor
push
jmp
jo
jno
add
inc
mov
push
imul
push
pushf
aam
xlat
jne
cltd
lock
stos
cltd
mov
ljmp
cmp
les
inc
lea
or
mov
adc
pop
lods
scas
push
repnz
imul
icebp
je
xor
cld
xchg
and
ljmp
cmpsl
shlb
push
sub
js
push
mov
add
outsb
pop
jl
in
fwait
and
cvttps2pi
pop
cltd
inc
addb
test
mov
push
add
in
movsl
mov
mov
add
push
addr16
loope
in
pop
clc
adc
scas
jmp
push
add
dec
enter
addr16
sbb
outsl
lcall
mov
lcall
das
insb
outsl
insl
fcmovne
push
adc
cwtl
iret
and
adc
add
xor
add
scas
mov
jae
mov
xchg
aad
mov
xchg
lahf
loop
sub
jmp
subl
dec
add
sub
insb
and
std
cmp
fmuls
rcrl
popa
ja
mov
outsl
imul
into
loopne
cmp
mov
fst
pop
pop
add
in
sub
mov
mov
adc
mov
pop
fstl
cltd
and
add
pop
push
xchg
dec
push
jbe
mov
sbb
push
inc
adc
cli
push
inc
mov
push
cmpsl
mov
test
mov
aam
cmp
mov
sbb
jg
jne
adc
cmpsb
pop
add
pushf
hlt
inc
adc
scas
pop
xor
mov
pop
jne
mov
fwait
xlat
test
add
cmp
mov
adc
or
push
cmp
into
mov
in
dec
dec
clc
loope
hlt
cltd
ret
jmp
or
sub
mov
outsl
mov
pop
add
lea
je
cmp
cli
adc
mov
jmp
mov
dec
loope
cld
mov
inc
repnz
xor
sahf
add
mov
lret
int
add
jmp
in
push
sub
inc
and
cmp
int
and
mov
pop
fwait
pusha
jbe
mov
mov
ss
testl
xor
pop
popa
popf
adc
into
pop
cmp
sub
pop
ret
lahf
test
loope
out
int3
push
repz
push
push
les
or
cwtl
or
pop
xchg
sbbl
xchg
das
adcb
lods
adc
leave
inc
mov
jbe
adc
xchg
outsb
loopne
push
mov
jb
test
jnp
hlt
pop
or
shll
jae
add
sub
mov
das
dec
je
out
add
in
incl
jp
nop
xor
add
stc
xor
fldl
mov
ja
and
loopne
add
adc
shl
add
fcoms
jecxz
pop
imul
fmull
push
mov
arpl
xchg
jno
add
sub
dec
fldl
aas
mov
stc
lcall
pusha
mov
cmp
adc
cmpsb
fistps
adc
add
jge
shll
icebp
dec
jmp
adc
sub
lret
in
dec
mov
add
cwtl
or
inc
pop
push
repnz
es
cmp
lret
mov
add
dec
ret
dec
fsub
xchg
cltd
sbb
ret
fwait
ss
lret
add
jb
push
sarb
sbb
inc
sbb
pop
or
aam
xor
insl
addb
mov
mov
iret
xchg
sbb
rorl
scas
dec
inc
clc
inc
add
or
add
mov
cmp
lahf
lods
and
jb
pop
sub
xchg
hlt
jmp
popa
bnd
mov
rolb
jo
testb
jg
xchg
mov
or
notl
fcmove
push
mulb
sub
and
add
ljmp
ret
pop
cmc
sbb
sbb
outsb
cmp
jae
das
ljmp
sar
pop
shrl
add
or
stos
push
rorb
mov
push
push
sbb
mov
add
arpl
ret
ret
or
iret
pop
repnz
aad
and
pusha
fistps
clc
je
and
lods
cmp
cmpsb
add
fnsaves
xlat
cwtl
imul
aas
sahf
lahf
add
jae
push
psrlq
mull
insb
mov
and
pop
jno
adc
adc
enter
lret
lods
mov
add
popf
jle
push
jge
ret
mov
mov
cs
or
cmovg
aas
movsb
cmpsl
pop
or
insl
fs
std
loopne
mov
pop
int3
clc
mov
mov
sub
add
push
push
xchg
dec
mov
sbb
push
loopne
add
or
dec
ret
popf
cli
sarb
mov
add
inc
cmp
jbe
fiadds
sti
sbb
pop
popa
mov
adc
cwtl
out
mov
mov
lahf
jnp
andl
push
clc
mov
lock
sarl
add
std
xlat
cs
pshufw
mov
out
sbb
insb
mov
xor
fcmovnu
dec
xchg
xchg
or
lds
push
adc
sbb
inc
and
add
out
ret
fimuls
mov
mov
fstps
icebp
dec
popf
pop
lods
test
ret
mov
les
test
jb
aad
add
dec
push
inc
add
idivl
and
dec
mov
or
stos
or
sub
testb
jg
xchg
and
mov
and
sbb
pop
inc
sbb
leave
xchg
aam
cmp
sbb
negl
push
xlat
add
out
mov
jl
loop
mov
movl
js
xchg
adc
in
push
and
int3
pop
sbb
dec
cmp
jnp
or
das
lea
mov
mov
xchg
aam
jmp
orl
inc
insl
lahf
js
cmpsb
mov
les
inc
push
cmp
sbb
lcall
push
pop
in
mov
and
stc
dec
imul
movb
incb
call
aas
cmc
jp
repnz
add
add
pop
lock
mov
cmp
clc
repz
sbb
gs
popa
pop
les
test
fistpl
outsb
jns
add
imul
mov
sbb
jg
cmpb
cmp
out
aaa
dec
stc
sbb
shl
hlt
aad
shl
aam
mov
push
mov
jl
push
enter
push
inc
in
outsl
sbb
mov
and
in
bound
jmp
push
push
xchg
ret
mov
loope
outsb
add
add
mov
call
out
xor
jle
loope
in
xchg
adc
pushf
cmp
into
mov
mov
adc
addb
or
push
dec
add
scas
into
xchg
mov
stos
add
fmul
xor
sub
add
xchg
xor
loope
cld
pop
push
filds
fiadds
cmpsb
dec
add
mov
sbb
lea
jae
das
adc
sbb
add
sbb
aas
or
adc
rcrl
or
mov
inc
push
adc
mov
jb
inc
jp
popf
into
filds
fisubrl
inc
rcrb
mov
mov
xlat
add
addr16
push
jae
cmp
xor
divl
mov
xor
adc
push
cltd
dec
scas
enter
aad
mov
adc
cwtl
jno
pusha
mov
insl
ficomps
mov
mov
loope
pop
test
adc
xchg
xor
mov
imul
mov
ljmp
fs
push
add
xlat
pop
movsl
enter
orb
jle
and
mov
xchg
sbb
pop
loop
mov
sbb
jne
cmp
pop
add
lods
decb
mov
pop
mov
aam
popa
push
mov
cmpsb
inc
sbb
adc
mov
xor
aam
and
cmp
divl
add
hlt
sub
pushf
ficoml
jle
adc
add
add
jl
js
add
aad
jo
xor
test
cmp
and
push
jno
jns
xor
sbb
xor
jne
dec
fdivrs
jl
ja
fwait
cmp
pop
lods
add
push
push
and
push
push
add
movsb
mov
pop
mov
movsl
out
inc
enter
jl
pmaxsw
and
jbe
les
int
les
push
adc
mov
call
ss
int3
lods
pop
add
push
mov
int
loope
aam
xor
dec
adc
sbbb
xor
jo
add
pop
mov
push
mov
mov
push
add
loope
mov
add
dec
in
in
adc
and
pop
or
add
adc
daa
bound
push
and
in
sbb
cmp
adc
mov
ret
sub
inc
jno
xor
add
shr
data16
out
scas
add
lret
push
inc
push
das
out
add
jl
or
dec
cs
add
add
out
imul
add
push
shr
sub
or
out
adc
scas
testl
jl
jmp
jmp
cltd
aas
mov
jg
add
jne
add
or
inc
dec
nop
pop
pop
notb
out
sbb
enter
xlat
mov
stc
adc
vpunpcklbw
dec
or
test
lret
cmpsb
loop
icebp
xor
adc
vpcomud
clc
pop
push
sub
rcrb
jae
ljmp
ret
mov
add
shrl
jbe
dec
xor
sub
orl
add
aam
imul
or
cmp
lods
aad
sar
sbb
movsl
xchg
das
mov
push
aad
inc
mov
loop
scas
repz
lock
push
xorb
mov
pop
xor
mov
cmp
dec
jne
lret
loope
inc
ja
fsubl
push
lret
pushf
xor
nop
pusha
enter
adc
push
out
les
in
jle
popa
dec
jne
sbb
adc
loop
mov
mov
pop
stos
pop
fimull
js
movsl
jmp
add
adc
repnz
dec
mov
loopne
adc
and
fcomps
jo
lcall
push
sub
cwtl
ljmp
xor
pop
mov
lcall
inc
xor
arpl
add
xchg
clc
ret
imul
je
lcall
push
adc
stos
mov
rcrl
adc
test
xor
push
je
sub
cli
stos
stc
pushf
push
int3
and
sbb
fcompl
fcoml
int3
add
je
mov
inc
mov
cmpsb
and
add
adc
lea
das
add
mov
test
mov
xchg
and
push
ja
scas
mov
xor
sub
fucom
pusha
roll
pop
jo
std
ja
sbb
loopne
mov
mov
jbe
stc
xor
sub
rcrl
in
ljmp
dec
sbb
push
cli
cmp
mov
add
cmpsb
out
rol
movl
mov
jo
add
push
ss
cmpsb
jl
loop
mov
fcompl
pop
pop
cmp
imul
fwait
fwait
add
adc
push
xchg
fadds
sbb
stos
scas
and
lock
mov
les
xlat
aaa
or
xchg
add
push
cmp
aad
push
sub
add
mov
mul
push
je
cwtl
std
pop
out
lret
cld
sbb
jge
imul
and
stc
mov
mov
loope
xlat
adc
add
add
add
lahf
mov
nop
fiadds
adc
dec
add
and
rcrl
int3
sahf
sub
dec
mov
dec
mov
mov
add
jnp
mov
dec
xor
inc
dec
push
xchg
leave
sub
pop
adc
adc
loopne
out
add
scas
jg
jmp
mov
fbld
shl
inc
adc
xchg
adc
in
mov
das
push
int3
or
sub
popa
out
test
adc
pop
das
mov
jo
roll
arpl
cmpl
xchg
add
pop
cmp
dec
pop
faddl
in
mov
daa
xchg
add
je
sbb
fistps
sbb
push
inc
xchg
pop
sbb
push
mov
add
jo
or
aaa
adc
mov
daa
adc
mov
outsb
dec
add
jno
les
add
loope
movsb
add
add
jl
pop
pushf
dec
lods
cmc
add
inc
mov
add
and
and
jne,pn
enter
popl
cmpsl
cli
xchg
andb
sarl
xchg
push
cmpsl
test
xchg
adc
sahf
mov
sub
adc
cmp
jo
pushf
sub
sbb
jns
mov
xchg
sbb
xor
dec
sub
ret
or
in
add
lods
push
pushf
dec
andl
lcall
mov
in
sub
dec
add
daa
inc
add
ljmp
in
mov
lcall
loope
cltd
sbb
mov
xchg
fbld
sbb
ficompl
aad
lcall
call
clc
sar
jecxz
sbb
add
sarl
mov
mov
or
inc
push
push
out
jne
stos
add
jae
dec
fstpt
or
and
push
fcompl
test
adc
mov
in
xchg
mov
fwait
add
mov
and
sahf
xor
push
mov
mov
mov
scas
lods
je
js
loop
popf
in
sub
add
cmp
dec
movsl
lret
leave
out
xor
or
clc
cmp
sbb
mov
nop
and
and
and
inc
sbb
add
mov
inc
outsb
scas
fcomps
cld
insl
add
ds
or
les
nop
add
icebp
xchg
outsl
mov
ss
and
idivl
mov
in
inc
scas
or
stos
nop
cmpsb
fstps
popf
cltd
add
mov
jg
jecxz
mov
push
mov
jnp
shr
leave
push
daa
loop
adc
lods
loopne
dec
add
add
jp
ja
hlt
jo
xor
and
ljmp
xchg
into
inc
lods
xchg
test
adc
adc
cld
adc
repz
mov
xor
push
lds
inc
sbb
jmp
ret
cld
scas
test
push
and
in
pop
mov
aam
in
std
out
add
cltd
pusha
int3
lea
and
ljmp
add
inc
inc
test
push
and
and
add
mov
mov
add
xchg
sub
mov
loopne
lcall
jp
test
fimull
lret
inc
mov
scas
sbb
ss
pop
les
pop
or
jmp
stos
add
neg
mov
lcall
or
icebp
shrl
pop
xchg
add
repz
or
jmp
sbb
push
mov
add
jecxz
pop
pushf
repnz
loop
jge
les
dec
ret
push
jb
dec
lret
rolb
xor
mov
inc
add
cld
jle
loope
decb
popa
sbb
out
and
imul
inc
mov
jne
dec
shl
add
pop
mov
sbb
insl
pop
in
push
call
in
sbb
fnstsw
in
add
push
xchg
in
iret
loope
test
cli
mov
add
pop
xor
add
jo
lcall
pop
sahf
insb
mov
fildl
outsl
dec
adc
and
imul
cs
or
frstor
mull
cmpb
xor
adc
adc
sti
push
add
loope
pushf
insb
std
xchg
inc
mov
jecxz
adc
add
cld
sub
jbe
test
mov
cwtl
lcall
loopne
add
ss
add
pop
test
in
jbe
loope
mov
lds
dec
and
mov
shlb
xchg
scas
add
mov
sub
dec
xlat
or
inc
add
mov
adc
cmpsl
jmp
popa
and
and
dec
jecxz
xlat
int3
in
and
sbb
les
cmp
sahf
mov
les
scas
or
insl
xchg
jbe
cli
add
repnz
pop
xchg
dec
cmp
cmp
shr
or
rcrl
in
add
and
fwait
push
mov
out
out
mul
sub
ret
test
test
js
movsb
imul
jnp
inc
jl
or
movsb
jmp
cs
ret
pop
xchg
push
add
not
add
dec
jl
add
pop
push
pushf
push
in
sub
adc
stos
ret
jne
add
gs
fld
adc
jnp
mov
ljmp
xlat
push
fucomip
add
jge
out
sub
sub
mov
aam
mov
or
push
pop
cmp
int3
sbb
mov
cmp
mov
jge
lea
outsb
push
xor
jmp
or
ret
jno
xor
mov
leave
iret
and
sub
outsb
add
lret
push
push
pop
test
push
out
jge
adc
movsb
ja
dec
or
sbb
dec
inc
and
mov
jecxz
or
xchg
aam
ret
push
ss
mov
pop
and
or
push
ljmp
pop
js
clc
fistps
cli
jne
adc
mov
mov
pusha
add
mov
int
insb
xchg
add
inc
xchg
lcall
xchg
int3
rcr
inc
add
into
insl
je
mov
adc
add
push
pop
push
add
and
sub
jp
cwtl
outsb
mulb
in
pop
or
outsl
testl
out
aas
push
sub
inc
adc
mov
ret
xor
jge
or
loopne
fst
xchg
mov
adc
mov
mov
movl
addb
test
aam
es
inc
pop
scas
mov
shlb
lret
js
rol
or
add
into
test
pushf
fcom
fimuls
adc
mov
add
add
dec
or
push
add
popa
test
sbb
into
ds
ret
in
cmpl
pusha
jo
xchg
xlat
jge
dec
test
jns
stc
fisttps
add
push
inc
pop
jmp
pop
mov
incl
pushf
jle
jp
mov
pop
fmulp
sbb
sti
adcb
scas
mov
xchg
dec
daa
add
pushf
xor
add
cmc
push
imul
xchg
push
test
adc
movsl
mov
lock
enter
insb
fidivrs
pop
scas
push
add
pop
and
imul
fidivrs
popa
cs
mov
iret
jl
mov
mov
repz
adc
or
xchg
or
or
jne
mov
add
arpl
pop
pushf
inc
cwtl
popa
ret
test
das
aad
out
and
sbb
fildll
cwtl
mov
dec
hlt
popa
fstl
xor
inc
stos
or
icebp
sbb
mov
ret
scas
out
sub
adc
inc
push
or
sbb
hlt
popa
in
stc
sbb
mov
sbb
mov
jge
cmp
add
xchg
add
and
enter
mov
mov
jb
add
scas
inc
pop
aaa
and
out
or
push
push
pop
fdiv
enter
cmpsb
jl
aaa
dec
aas
jnp
jge
pop
inc
jbe
pop
lods
add
pop
into
lods
sbb
mov
jne
pop
das
fsubrl
and
mov
push
mov
xchg
les
jb
sbb
xor
add
ss
add
pandn
lock
test
loope
mov
pop
adc
jge
shll
or
in
je
arpl
adc
scas
inc
test
and
jge
or
xchg
inc
inc
outsl
cmpl
nop
js
dec
rclb
push
jnp
ret
lods
and
xchg
lahf
in
jnp
add
ss
int
xor
sub
fwait
mov
fiadds
jbe
mov
dec
mov
lds
loope
movsl
cmp
fidivrs
jge
mov
aas
mov
adc
push
jno
mov
add
or
push
testl
xchg
push
imul
inc
sbb
or
popa
outsl
ffreep
sarl
scas
adc
lods
add
sub
lcall
jle
jl
push
mov
pop
push
add
fdivs
jae
out
mov
xchg
rcr
out
sbb
add
out
ret
pushf
xor
cltd
lods
hlt
xchg
sbb
or
and
lods
cs
clc
pushf
mov
add
les
sub
add
repnz
movsb
stos
add
rorb
mov
and
rcl
push
xor
add
cmpsb
pop
data16
cli
insb
add
dec
int
arpl
cmp
add
in
ja
or
jmp
xor
das
shlb
push
sub
add
push
mov
inc
and
inc
add
cmp
push
pop
dec
sub
aad
xor
popa
jp
cld
jge
mov
outsl
mov
lds
add
fsubl
add
add
imul
lret
mov
sub
sub
sub
cs
fcomps
stc
pop
pop
insb
add
cmpsl
mov
les
orb
add
sub
jge
mov
repnz
sbb
pop
mov
jns
les
test
inc
xor
mov
fdivs
aam
movsb
call
cmp
xchg
cmc
cmp
ret
push
enter
test
test
or
addl
addr16
push
xadd
xorb
out
test
sarl
imul
mov
ljmp
cwtl
inc
add
insb
sbb
add
sub
cmpsb
adc
bound
adc
les
sbb
push
out
mov
in
add
sub
add
add
dec
sbb
into
add
leave
iret
test
mov
fbld
lds
and
adc
idiv
jl,pt
sub
shrb
dec
cmp
jp
and
mov
add
dec
loopne
cmp
jno
adc
xchg
stos
rcll
popa
cmp
clc
out
hlt
jl
jo
pop
frstor
outsl
xor
dec
add
out
xchg
xchg
popa
dec
into
inc
xor
fadds
roll
aad
loopne
call
push
nop
and
cmp
mov
outsb
inc
xlat
sbb
movsl
xchg
sub
lret
sbb
in
add
outsb
into
xor
lods
in
mov
dec
push
and
icebp
add
outsl
stos
std
sbb
inc
popa
rorb
out
insb
push
lods
push
fildl
mov
pop
or
into
lea
imul
add
xchg
mov
add
pop
pop
insb
test
aam
rclb
mov
mov
bound
mov
fldt
xchg
add
jp
mov
mov
add
pusha
fcmove
shlb
test
fwait
mov
push
loope
mov
int3
sbb
dec
lret
adc
jge
mov
add
std
shl
mov
lcall
cmp
test
mov
aaa
pop
out
shll
scas
insl
iret
adc
test
mov
xor
inc
shrl
sbb
test
add
dec
mov
cwtl
ror
mov
jecxz
cmp
addl
jae
sub
add
mov
xchg
in
xor
popf
jne
lret
jle
add
mov
dec
add
cmp
in
in
outsb
movsb
out
stos
les
outsl
iret
ret
xchg
add
fwait
lcall
nop
rorb
or
es
ss
test
mov
mov
push
pop
shl
xor
sub
out
in
fidivs
inc
add
jle
sbb
sti
dec
add
inc
lods
ret
cltd
cmp
mov
pop
pop
add
push
xchg
and
insb
cwtl
mov
inc
out
out
pop
mov
add
mov
cmp
bound
bnd
loop
nop
in
xlat
add
clc
aam
or
add
and
aad
in
clc
mov
add
adc
divl
pop
pop
scas
or
xchg
ret
pop
mov
popf
stc
add
pushf
mov
test
les
inc
jno
test
mov
add
dec
ljmp
jne
aas
xor
cmc
faddl
mov
in
pop
push
out
rcrl
and
mov
add
pop
pop
inc
adc
pop
dec
sahf
rorb
sub
ss
mov
add
int3
cmp
push
mov
roll
cmp
pop
or
xlat
pop
and
sbb
negb
lret
insl
dec
repnz
mov
pop
stos
xlat
js
popa
jecxz
add
add
outsl
into
add
inc
insb
cmpsb
add
addr16
test
lods
adc
mov
and
add
push
in
lock
xor
mov
loope
mov
in
mov
inc
add
push
daa
outsb
cmp
pop
cs
rcrb
xor
cmpsl
mov
popa
lcall
xor
mov
cltd
out
ret
fsts
imul
xchg
add
enter
cmp
mov
testl
sbb
jb
loope
movsl
test
adc
pushw
pop
insb
add
in
mov
pop
fldt
clc
push
dec
repnz
lods
addr16
mov
push
pop
mov
xor
sbb
xchg
xor
mov
jns
adc
out
mov
and
lock
jmp
pop
mov
xlat
sahf
pushf
sbb
fucomi
test
cmp
popa
mov
push
cltd
loope
mov
inc
bound
add
sbb
sub
cli
cwtl
divl
lods
subl
fistpl
add
imul
aas
mov
add
cmp
aad
iret
shrb
movsl
push
rcrl
sub
push
cmp
sbb
or
das
adc
or
or
aad
hlt
or
movsb
sti
xor
adc
scas
xlat
mov
or
mov
test
cmp
and
movsb
loop
sbb
loope
mov
in
hlt
add
in
leave
outsl
popf
aad
fadd
shr
jp
sbb
push
push
push
or
add
push
aad
gs
jns
add
iret
jne
in
lret
add
push
jge
mov
add
and
jl
and
fsubs
sar
arpl
add
xorl
add
stos
inc
or
pop
push
inc
dec
push
sarb
or
sbb
mov
pop
pushf
mov
aaa
sbb
and
inc
cmpsl
add
es
or
pop
dec
sbb
mov
mov
lret
mov
add
stos
sbb
int
inc
mov
sbb
pop
push
mov
push
jmp
movl
mov
push
jno
loope
sbb
xor
pop
push
inc
jo
add
sbb
and
ljmp
pop
adc
sbb
and
jae
jp
pop
xchg
loop
lcall
sbb
dec
incb
jg
shlb
push
add
and
imul
loope
inc
mov
sbb
mov
fidivrs
cmp
scas
dec
xchg
add
sahf
cmp
push
inc
cmpsl
js
in
nop
xchg
xchg
xchg
xchg
sbb
ficomps
lret
add
or
stos
push
test
cmp
jbe
ljmp
mov
movsb
jb
shr
outsl
cld
ficomps
popf
add
jl
fs
mov
add
mov
roll
in
inc
jmp
fsub
jo
cmp
adc
push
xor
mov
mov
daa
mov
pop
add
mov
lret
rcrb
bound
push
popf
addr16
pop
mov
push
mov
xor
pop
lods
hlt
ror
mov
mov
jne
and
xor
ss
or
mov
pushf
sub
ds
cmp
and
dec
imul
mov
mov
push
mov
sbbl
test
add
dec
jne
mov
nop
sub
ljmp
mov
adc
inc
in
or
inc
js
xor
cmpb
and
cltd
or
and
stos
and
insb
movsb
lcall
add
pop
inc
sarb
xor
cld
scas
fadds
cmp
lcall
push
jno
inc
mov
mov
das
jge
cs
mov
sub
or
rclb
jg
sti
sbb
sbb
test
fwait
test
jl
sbb
lea
outsl
add
pushf
inc
leave
push
jo
sub
incb
dec
push
add
movsb
insb
out
popa
loop
mov
scas
divb
add
mov
je
add
mov
fwait
mov
jno
cmp
repz
out
cmp
jbe
loopne
sub
sub
js
int
imul
pop
add
or
loopne
mov
pop
jbe
push
mov
mov
mov
scas
pop
scas
movsb
jo
fwait
add
xchg
loope
rolb
pop
dec
add
adc
inc
xchg
sub
add
insb
xorl
stos
jnp
xchg
and
or
dec
clc
or
adc
fimuls
sarl
nop
jmp
insb
ret
out
adc
into
notb
xlat
mov
insl
push
call
mov
or
flds
into
out
push
mov
outsl
jnp
and
and
pop
mov
stos
outsl
mov
scas
mov
and
aad
dec
add
mov
mov
mov
dec
call
clc
loope
int
or
add
loopne
sbb
mov
mov
mov
mov
jg
xor
jmp
test
and
or
mov
mov
jae
add
insb
pushf
mov
cltd
xchg
xor
arpl
dec
mov
fnstsw
add
stos
jns
adc
cmpsl
lret
dec
add
in
sar
or
cli
sbbl
test
inc
pop
or
psrad
and
imul
push
rcrb
or
in
add
and
xor
add
push
or
pop
insl
jnp
in
nop
cmp
push
mov
in
mov
test
repz
filds
jb
sub
imul
mov
dec
aaa
popf
jbe
aam
jno
es
pop
leave
mov
push
test
push
or
push
test
or
xchg
pop
aam
jp
push
lods
jne
ljmp
js
dec
ficompl
dec
cmp
jb
mov
push
jnp
or
outsb
lahf
imul
aam
rorb
mov
out
push
add
je
sbb
cmp
sbb
add
adc
aas
jmp
inc
sub
push
add
fisubrl
xchg
add
and
adc
test
mov
and
xchg
popa
sbb
adc
popa
loope
les
loop
push
pop
sahf
push
dec
std
mov
pop
jp
push
and
mov
push
cltd
adc
idivl
fsubrl
mov
aad
cmp
pop
aam
add
dec
clc
out
sub
inc
repnz
xlat
rcrl
inc
fadds
aas
xchg
and
rcll
aad
lahf
add
xchg
loope
repnz
xor
jl
fyl2xp1
jp
add
into
push
lea
nop
imul
sarb
movsb
push
bound
mov
pop
sarl
frstor
out
lock
mov
and
enter
fstl
add
or
xor
pop
imul
pop
mov
lea
inc
popa
cmc
push
ss
stc
pop
adc
repnz
adc
xchg
mov
add
aaa
test
push
add
push
sbb
inc
jns
stc
cli
inc
dec
add
dec
fsubs
dec
mov
mov
leave
pop
and
jecxz
outsb
add
in
and
scas
fnstcw
mov
and
cmc
pop
cmpsl
sub
and
or
add
cmp
dec
jg
push
add
les
int3
dec
cmp
enter
add
pusha
mov
and
pop
adc
pop
cmc
fwait
aam
bound
iret
fstpt
or
xchg
adc
ret
adc
sbb
add
testl
jo
fwait
or
jl
cmp
loopne
stos
repnz
enter
ljmp
lret
mov
pusha
ss
xchg
adc
or
cmp
ficoms
lea
ja
xlat
jl
adc
xchg
or
xchg
mov
add
daa
xor
rcr
xor
jne
mov
mov
or
fstl
jnp
mov
push
xchg
jbe
popf
jp
lea
push
aad
inc
fnsave
add
out
dec
and
ja
sbb
pusha
or
mov
andl
and
xor
out
lods
ffreep
jecxz
adc
or
or
cmp
jmp
dec
mov
les
xchg
hlt
test
xor
pushf
in
push
pop
cmp
sbb
push
add
mov
movsb
add
pop
enter
mov
or
insl
add
enter
popl
pop
mov
xor
mov
addb
cmp
imul
ret
mov
inc
sub
push
dec
or
or
and
jmp
outsb
pushf
hlt
add
or
negb
sub
in
xchg
pushl
xchg
sub
shll
orb
pminsw
cmc
mov
push
or
pop
dec
ds
aaa
jle
add
cmp
push
xor
repz
or
mov
pop
insb
mov
fists
imul
add
stos
call
stc
push
adc
cmp
inc
pusha
fiaddl
jnp
js
and
loopne
les
cli
jns
aam
xchg
adc
dec
mov
movsb
xchg
lcall
mov
xchg
mov
push
add
stos
jge
jb
add
jae
testl
lock
xchg
jmp
mov
push
and
in
pop
inc
pop
out
xchg
sti
add
lret
loopne
scas
mov
push
repz
in
inc
inc
adc
fbstp
mov
xchg
popa
mov
les
shrl
imul
jmp
xchg
shlb
jl
repnz
jle
arpl
jmp
push
sbb
in
add
and
shl
fidivrl
dec
sbb
mov
adc
add
stos
cmc
mov
smsw
addb
xchg
jmp
int
or
daa
adc
mov
mov
das
bound
hlt
push
lods
add
out
popf
ret
sub
cmp
stc
add
pop
inc
inc
dec
mov
and
or
hlt
cmp
pushf
pop
push
add
pop
fld
dec
into
sbb
sub
or
xchg
shlb
sbb
enter
dec
lea
mov
sbb
ds
xchg
dec
dec
and
sbb
ja
sahf
mov
jnp
lods
adc
add
orb
cmp
jae
mov
or
inc
lcall
lret
dec
subl
push
mov
xchg
add
lcall
std
xor
iret
fimull
push
testl
aam
lods
inc
push
jbe
mov
cmp
fs
dec
fucomip
sub
lock
clc
sahf
stos
xor
addb
ljmp
sbb
or
mov
inc
loop
cmp
cmp
inc
test
push
stos
stc
jo
scas
flds
or
or
sbb
inc
dec
inc
sahf
mov
push
add
mov
iret
ret
xor
jbe
and
in
jge
push
pop
mov
jae
je
scas
out
dec
and
mov
jg
adc
xchg
pop
popa
jo
cmc
ja
rclb
imul
jp
test
add
jg
es
dec
fs
std
push
add
scas
xor
pusha
shlb
int
fcomps
xor
sbb
mov
in
loop
dec
sub
mov
je
sar
imulb
inc
jno
aaa
cld
xor
dec
clc
dec
add
push
jne
push
aas
dec
iret
shl
adc
icebp
xor
inc
pop
aad
add
pop
pop
out
das
iret
push
mov
xorb
notl
loop
ret
jns
or
repnz
adc
int3
and
into
pop
mov
stos
mov
loop
inc
or
sbb
add
dec
and
mov
cld
or
ljmp
lods
std
pop
push
jo
mov
pop
sbb
not
add
inc
and
adcl
xchg
les
and
fmulp
mov
sbb
jp
xchg
sbb
adc
lret
add
xor
adc
xchg
pop
mov
add
jge
shlb
lods
jl
cwtl
fistpl
pop
lods
out
cltd
push
sahf
mov
insb
sub
add
popa
push
xchg
mov
sbb
pop
or
neg
jno
fildl
xchg
and
mov
push
cmpsl
inc
fwait
mov
mov
cld
test
rcr
sbb
xor
popa
inc
sbb
cpuid
sbb
xchg
les
jae
mov
and
loop
add
ja
in
popa
arpl
call
sbb
cmp
gs
fadds
loopew
rcll
push
lods
cmc
aam
pop
jnp
inc
fmuls
movb
pop
int3
fldt
inc
add
shl
movsl
jne
dec
add
scas
lods
int3
or
add
lcall
movsb
add
jo
jae
cmp
add
dec
push
fadds
inc
pop
inc
arpl
inc
aam
xor
dec
xchg
and
pop
cltd
push
repnz
call
xchg
mov
and
add
mov
sbb
imul
dec
ret
jmp
add
orb
mov
shll
xor
imul
popa
add
push
gs
mov
mov
decb
lcall
popa
add
loopne
pop
js
cmp
inc
push
es
mov
notl
xchg
pusha
repz
and
mov
ljmp
xor
movsl
loope
int3
pop
add
rcr
out
js
add
loopne
clc
add
mov
mov
outsl
mov
lock
loopne
out
or
add
mov
repnz
call
ds
cmc
cmp
ret
push
mov
cmp
or
jecxz
gs
lahf
incl
scas
inc
adc
adc
cs
jp
xor
jae
inc
fsts
mov
cs
fs
and
or
xchg
scas
cmp
and
scas
inc
inc
pop
int3
add
sub
mov
add
out
rep
sub
jle
rcrl
lcall
shlb
and
loope
cmp
add
sub
mov
lret
add
sarl
and
mov
sub
scas
cmp
fcomps
inc
add
sub
dec
call
pop
scas
mov
ss
loope
sarb
mov
push
leave
add
ljmp
scas
pop
jge
pushf
out
fiadds
fnsave
xchg
xor
leave
mov
pop
mov
mov
cld
fdivl
add
inc
sub
and
push
mov
jb
mov
dec
push
add
mov
push
testb
addb
pop
rorb
insl
ja
in
dec
push
dec
lahf
pop
test
call
out
and
insb
add
sub
lret
cmp
add
dec
lea
shr
xlat
mov
inc
pop
sub
iret
loope
cli
js
sbb
repz
out
mov
xorb
mov
loopne
jbe
fs
pushf
sbb
ror
push
ret
add
xchg
insl
cmp
add
sti
nop
jle
out
js
das
lock
pop
and
sbb
sbb
jmp
xor
cmpsb
mov
adc
pop
leave
add
out
and
jmp
sub
add
std
stos
ret
lcall
mov
fildl
cmp
je
insl
testl
test
scas
add
add
daa
or
loope
pop
lahf
stos
mov
das
je
sbb
add
add
dec
sub
dec
imul
cmp
inc
cmp
add
or
scas
andl
insl
xchg
adc
fiadds
popa
mov
inc
enter
mov
fwait
subl
inc
cld
mov
jne
js
mov
shl
and
pusha
mov
adc
push
or
shlb
ss
or
dec
add
aaa
leave
add
mov
xor
xor
cmp
aam
inc
int
enter
pushf
dec
mov
in
xor
cmp
add
aas
int
lea
addl
and
add
mov
cwtl
gs
inc
adc
add
enter
cld
push
add
lods
add
jle
mov
sbb
sub
or
sbb
setns
mov
mov
call
xlat
ja
push
jle
sar
push
jns
cmpl
mov
push
xchg
fwait
sub
lea
lcall
jns
pop
xorb
pusha
loope
inc
js
mov
das
sahf
inc
jl
clc
bound
loop
cmp
loopne
sub
add
sub
pushf
pop
popf
push
add
or
mov
pop
sub
xor
stos
add
mov
jmp
sbb
movsb
loope
sub
test
jo
add
pop
add
into
pushf
jae
leave
mov
push
inc
mov
popa
adcl
jo
xlat
add
aaa
loope
insb
scas
popf
mov
pop
xchg
mov
add
ret
insb
push
adc
lods
jae
ret
sbbl
mov
adc
add
ja
loope
js
cmpsl
clc
jns
push
sbb
sahf
pusha
lock
add
or
mov
xchg
lahf
jo
into
imul
xchg
std
dec
cmp
or
cli
adc
cmp
imul
loope
roll
rcrl
sub
or
ret
jge
jno
and
adc
iret
in
mov
insb
je
adc
inc
add
lods
add
and
es
int3
scas
jne
mov
and
loop
out
mov
mov
es
sbb
addr16
fisubrs
repz
mov
iret
mov
xchg
jle
mov
add
lret
aaa
sbb
cmp
cmp
inc
adc
outsl
mov
or
bound
and
xor
in
cld
or
lea
jecxz
push
movb
cmp
add
mov
pop
pop
adc
addr16
add
and
jle
fistl
outsl
push
out
sbb
cmp
xchg
test
jnp
leave
push
push
dec
scas
or
cmp
and
leave
jns
mov
test
mov
icebp
add
jl
jae
pop
add
fucomip
jmp
dec
sahf
lods
dec
cmp
outsb
scas
mov
sbb
push
pop
loopne
popa
ss
fldt
rol
and
data16
cmpsl
std
inc
mov
nop
dec
xchg
jg
cmp
jne
or
push
cmpsb
in
out
aad
mov
dec
pop
xchg
inc
lods
mov
aam
test
add
dec
fsub
add
test
lret
xlat
mov
or
insb
lea
sbb
and
movsb
jge
add
idivl
xor
inc
mov
and
out
adc
or
xchg
incl
hlt
loop
jo
outsb
imul
cld
mov
push
repz
xchg
fnstsw
mov
jmp
xchg
push
add
pop
rcrb
mov
push
jl
in
inc
fsubl
pop
hlt
inc
pop
pusha
add
aam
sub
fisttps
mov
inc
push
mov
icebp
add
jmp
jns
add
das
lea
xchg
leave
add
xchg
add
fwait
popa
cltd
push
popf
add
sub
out
gs
jb
insb
test
jmp
ds
add
mov
cmp
or
inc
cmc
dec
add
test
add
and
call
testl
rdpmc
or
mov
push
mov
jge
mov
dec
mov
sub
sub
js
insl
or
sahf
clc
ret
dec
fmuls
dec
popa
popf
pop
fsts
mov
jge
jg
push
sbb
jecxz
and
pop
mov
push
jb
lcall
lahf
fwait
je
xchg
or
push
arpl
lret
shl
loope
dec
adc
sbb
imul
out
add
mov
cmp
and
outsl
sbb
or
inc
and
inc
pop
ss
pusha
cmp
mov
jnp
jl
adc
rcrl
push
stos
add
scas
inc
or
pmullw
mov
hlt
lock
ret
fwait
pop
mov
ret
loopne
add
cmp
fwait
popf
aaa
jl
dec
movsb
push
sbb
xlat
scas
mov
stos
jo
test
jo
xor
cmp
cld
lret
push
loope
add
pop
les
call
loop
lods
insl
out
push
and
sub
shrb
testb
and
imul
push
mov
lcall
fdivrl
movl
jmp
or
into
adc
dec
add
adc
xchg
add
add
repnz
loop
pop
out
iret
sbb
js
mov
stos
sbb
mov
ret
sarb
nop
in
adc
sub
jg
xchg
fnstcw
fwait
mov
fiadds
push
clc
rol
bound
imul
popa
or
mov
sqrtps
pop
mov
shrb
sbb
add
add
stos
int3
movsl
aad
inc
dec
inc
inc
inc
stc
jb
sbb
nop
jno
mov
movsb
lock
xor
lahf
add
adc
sub
jo
cltd
pusha
xor
lds
roll
jnp
lret
fstl
add
add
xor
daa
push
jae
jge
fisttpl
stos
jmp
push
movsl
xchg
pushf
popa
cmovs
add
jnp
mov
das
rorb
stos
jecxz
sbb
in
push
add
popa
nop
or
jo
xchg
fsubl
test
lock
mov
stc
gs
and
leave
xchg
sub
sub
xor
dec
lahf
test
lahf
sbb
jno
loope
shr
pop
add
dec
dec
negl
aam
lock
sbb
and
add
cli
sbb
sti
fs
in
pop
lods
adc
jns
pop
and
xchg
mov
lea
sub
mov
and
xchg
ss
sbb
push
inc
add
push
xor
das
notb
cmpsb
xor
xchg
popf
jge
add
mov
pop
adc
sbb
jne
shl
sbb
mov
push
cltd
nop
pusha
jecxz
add
pop
jns
push
pop
dec
ret
xlat
add
mov
adc
in
mov
push
movsl
lds
and
loop
inc
sbb
sar
sbb
les
movsb
add
jne
pop
xchg
dec
insb
add
repnz
pop
cmpsl
fwait
imul
xchg
insl
add
imul
adc
lock
rcr
cmp
notb
testl
jmp
stos
mov
fstpl
imul
and
add
es
push
inc
cltd
fdivs
sub
push
in
jno
loopne
pop
dec
xchg
xchg
xchg
scas
loop
or
sbb
xchg
outsl
call
and
adc
ljmp
inc
loope
push
add
cmpb
dec
jl
popa
xlat
outsl
js
dec
mov
cmp
lods
movsb
xor
aas
loope
enter
inc
pop
movsl
cmpl
and
es
mov
inc
scas
fwait
jp
add
push
pop
ret
fdivr
test
test
adc
sti
ljmp
out
sbb
push
or
pop
sbb
push
nop
inc
cmc
outsb
pop
or
xor
xchg
aaa
sbb
popf
add
mov
pop
dec
add
iret
add
mov
aaa
xchg
jno
icebp
and
clc
pop
fwait
pop
dec
add
sub
adc
push
mov
loopne
push
sahf
cmpsb
test
xchg
aas
xchg
lea
ret
sbb
cs
adcb
mov
xchg
cmp
sbb
sbb
mov
cmp
insl
or
xor
mov
arpl
mov
add
rcrb
jns
aam
loopne
ret
imull
mov
push
inc
shlb
add
call
adc
add
loope
enter
sub
inc
or
fcomps
and
jp
repz
mov
add
or
daa
or
add
inc
pop
leave
or
push
ja
shrl
or
testl
mov
popa
vpmaxub
sub
add
pop
mov
inc
test
cwtl
loope
adc
es
aam
jbe
lods
call
cmp
xchg
sbb
outsb
push
dec
sub
jp
inc
or
lods
lahf
mov
cmp
pop
xchg
mov
daa
repnz
push
pop
push
or
cltd
mov
loopne
fsubs
add
out
push
jo
add
dec
fidivs
lods
xor
aad
or
adc
out
jl
push
loop
and
push
pop
loop
xor
pushl
sbb
test
mov
xchg
push
testb
testl
xor
adc
sbb
mov
fldl
dec
ror
cld
out
xor
or
jl
into
loop
jne
push
add
int3
adc
icebp
movsl
call
int
xlat
xchg
insb
aam
mov
subb
cmp
lods
cmpsb
ret
in
movl
mov
mov
pop
ds
daa
sub
in
sub
js
pushf
cmp
ficoms
ret
pop
or
mov
mov
pop
cmp
add
xor
add
mov
push
test
gs
pop
sbb
loop
repnz
push
sbb
shrd
sti
outsl
cmp
mov
and
addr16
push
lahf
cltd
test
jle
add
mov
aaa
or
stc
inc
pop
sub
push
sbb
loopne
pop
add
into
sahf
mull
push
stos
stc
inc
repz
pop
sub
pop
jge
test
adc
or
pop
adc
jg
add
fucom
fiaddl
mov
aad
cmp
cltd
push
dec
inc
les
dec
mov
jnp
add
stc
int3
add
ret
test
ja
push
popl
jecxz
in
in
jnp
sub
add
data16
add
sarb
orb
cmp
das
cvtpi2ps
dec
jl
adc
push
scas
mov
cmpsl
pop
jge
xorb
add
lahf
mov
xor
mov
cmp
lods
movsb
iret
in
es
dec
pop
mov
xchg
pop
loopne
push
and
add
cmc
cld
mov
out
in
sub
stc
jnp
xchg
gs
mov
push
mov
or
lahf
in
ret
ljmp
xadd
mov
dec
incl
scas
into
pop
mov
pop
jl
scas
sbb
mov
mov
cs
insl
mov
cli
sahf
out
pusha
add
jb
in
into
int3
or
add
push
jo
ret
cmpsb
add
fimull
add
lods
mov
mov
pop
scas
in
xor
fdivl
ret
popa
aad
xor
adc
scas
xlat
mov
add
pop
pop
out
push
dec
sub
add
cltd
mov
xchg
add
repz
dec
push
and
mov
add
aas
ljmp
cmp
xor
divl
aaa
dec
jle
js,pn
in
mov
subl
aad
dec
les
mov
loop
sahf
test
inc
shrl
mov
nop
popa
fcoms
adc
mov
loope
inc
push
test
pop
enter
add
lods
dec
nop
in
std
jle
push
mov
insl
clc
adc
cltd
movsb
add
mov
data16
enter
mov
fistpl
nop
xchg
or
fwait
add
lea
jns
dec
dec
test
cmpsb
test
dec
loope
xchg
ljmp
std
pop
lcall
add
fwait
push
lds
sarb
mov
jge
add
insl
in
shl
je
sub
sbb
shlb
out
inc
icebp
das
jge
inc
or
pop
sub
addr16
mov
cmp
jo
add
andl
loop
pushf
inc
jae
js
stos
inc
imul
sbb
repnz
add
lret
push
and
inc
jae
aam
jns
sbb
mov
and
mov
scas
loope
lds
mov
sbb
popa
xlat
out
insb
mov
fwait
add
push
sti
push
ficomps
movsl
add
icebp
and
imul
mov
cmp
add
gs
in
shl
push
jle
daa
push
cmp
or
add
in
movsl
lcall
out
pop
hlt
inc
and
mull
cmp
call
jae
out
sbb
pop
ret
jg
loopne
push
into
lahf
mov
cmp
iret
push
mov
pop
stos
lret
inc
movsl
lock
mov
jle
mov
lds
push
jbe
add
ret
je
push
sbb
int
or
jmp
rol
outsb
add
iret
mov
lcall
insl
fistpll
add
repz
adc
jns
or
jle
or
testl
xchg
jg
jae
insb
ror
test
inc
push
fs
or
fnstenv
xchg
scas
and
inc
push
movsl
pop
fcompl
invlpg
adcl
add
sbbb
jae
mov
mov
inc
xchg
inc
popa
and
lock
fwait
or
push
xchg
cmp
sub
imul
pop
pop
add
mov
clc
outsb
add
jne
jnp
mov
pop
dec
add
pop
mov
jge
loope
and
fdecstp
jnp
test
ret
or
add
fs
cli
push
fucom
jb
std
movsb
push
rcl
insb
add
push
add
xchg
test
jp
add
repnz
sbb
xchg
dec
ret
sub
test
cmc
xchg
sahf
fstpl
add
xor
stos
inc
mov
sub
test
shlb
add
movsb
std
adc
push
dec
xchg
stc
imul
fistpll
sub
adc
adc
sar
adc
add
cmp
mov
fisttps
xlat
jns
and
jle
inc
xchg
push
and
icebp
mov
jge
into
pop
arpl
add
cmp
lahf
sahf
inc
pop
sbb
mov
jmp
enter
inc
add
mov
fdivrl
shrl
dec
stos
dec
lea
mov
pop
cs
fnsave
fcompl
sar
lret
or
movsl
out
push
add
fisttpll
pop
popa
mov
fstps
faddl
bound
movsb
test
pop
pop
enter
sub
add
mov
dec
bound
dec
aas
mov
dec
xor
sub
pop
add
repz
ds
jmp
add
scas
je
xchg
pop
adc
mov
loope
test
repz
ret
mov
or
jg
loope
cli
jp
sbb
xor
push
adc
shll
push
test
les
push
fsubl
jmp
sbb
sbbb
xchg
pop
add
or
xor
push
loopne
mov
aas
sbb
add
mov
mov
test
adc
mov
mov
jmp
jbe
test
push
push
xor
clc
adc
jb
adc
xchg
pop
cmp
dec
mov
push
dec
test
xchg
pop
out
das
inc
push
add
mov
in
pop
sbb
movsl
lret
fldl
sub
jg
into
inc
das
sbbb
loope
loope
sahf
test
test
sarb
or
fildl
adc
push
sti
mov
dec
outsl
and
repnz
mov
cmp
ret
mov
lea
add
inc
mov
adc
pop
in
aas
fildll
popf
ds
add
mov
ret
add
loope
dec
or
lods
out
add
int
in
add
inc
shll
dec
std
iret
mov
xlat
loope
test
push
ja
sahf
mov
or
and
push
pop
and
sti
lds
ficompl
jle
or
mov
inc
dec
les
ret
insl
aad
add
and
jle
sar
rolb
fs
lock
decl
mov
sarb
lret
add
aad
xor
mov
or
push
add
add
xchg
xorb
jnp
jno
inc
sbb
clc
pop
jle
sbb
lods
add
ljmp
scas
pop
iret
adc
scas
add
sub
add
xorb
test
enter
pop
insb
push
and
cmpsl
popa
mov
inc
pop
in
cmc
add
cmp
pop
lock
add
stos
xchg
fs
push
cwtl
add
xchg
push
push
enter
add
or
pop
testl
outsl
movsb
sub
add
cmp
repnz
out
enter
jo
jg
fimuls
lcall
fucom
lods
mov
xchg
lods
in
mov
inc
inc
xchg
mov
stos
mov
dec
or
add
clc
xor
sub
jne
lret
loop
cli
dec
bound
flds
popf
clc
push
xlat
xchg
mov
push
ret
xchg
ljmp
add
testl
pop
popa
test
cld
sbb
outsl
push
in
xchg
sub
adc
mov
push
lahf
imul
xor
cmp
xchg
sub
lcall
dec
dec
cmp
or
mov
aas
jb
in
or
call
lahf
cmc
add
mov
add
test
rcll
outsl
mov
sahf
fiadds
mov
sbb
add
pop
cltd
mov
or
inc
outsl
push
pop
jge
add
fsubp
sbb
loopne
insb
imul
jo
push
adc
cmpl
loope
xchg
mov
pop
fwait
jbe
jne
mov
jle
jmp
arpl
popa
xor
dec
pushf
sbb
xchg
montmul
cmpsb
add
push
leave
xchg
and
push
test
aam
daa
in
mov
andl
vcvtss2si
shrl
jp
or
fwait
int
push
arpl
rolb
jg
fwait
outsl
mov
scas
xchg
mov
movsl
cmpsl
daa
xor
mov
jae
mov
cmp
jg
add
fistpll
sub
lahf
and
and
sub
xor
rorb
mov
pop
sti
add
scas
mov
mov
xchg
lea
pop
add
push
jecxz
dec
loope
stos
add
mov
imul
push
push
scas
cmp
sbb
int
add
inc
pop
stos
push
movsb
jle
xlat
inc
aaa
lahf
adc
add
fisubs
fisubrl
or
add
ret
enter
push
ret
shl
pushf
sbb
jle
shll
push
add
add
cmpsl
jg
pop
std
loopne
loope
mov
adc
insl
loop
das
mov
sbb
inc
add
mov
cmpsl
dec
push
test
cmp
add
xchg
into
xor
scas
adc
fcoml
adc
dec
dec
dec
mov
dec
inc
loop
out
add
jne
mov
dec
sbb
clc
fdivrs
into
movhps
or
lret
jno
cwtl
stos
and
fisubrs
sbb
je
enter
pushf
fcoms
adc
add
push
shll
roll
mov
add
scas
fsubr
xchg
pusha
jle
and
in
adc
mov
mov
and
inc
adc
jns
fwait
rclb
lahf
aas
insl
scas
stos
push
pop
das
xchg
add
sbb
cwtl
add
in
sbb
inc
mov
xchg
jl
dec
pop
dec
sbb
mov
outsl
mov
jns
dec
lea
leave
xor
push
mov
xchg
cmp
out
lods
fsub
adc
xor
mov
hlt
push
push
arpl
and
sbb
test
mov
dec
scas
sub
mov
nop
sbb
fs
jno
or
cmpsl
add
xor
add
clc
lods
ljmp
mov
adc
xlat
add
js
xor
insb
scas
fisubl
repnz
lahf
sbb
inc
ret
shll
cmc
mov
lahf
fsub
sub
cli
push
mov
in
add
sub
adc
mov
xor
movl
cmp
cmc
js
push
cwtl
testl
push
push
test
in
mov
scas
pop
ret
js
adc
mov
pop
xlat
cmc
mov
xchg
loope
jl
data16
mov
out
test
fiaddl
xchg
cld
fwait
and
nop
int3
into
ja
pop
push
add
movsb
mov
xor
add
pop
fnstcw
testl
sub
push
dec
or
sbb
jl
jo
add
push
adcl
add
and
and
jae
mov
push
cmp
mov
push
push
lea
outsb
mov
adc
mov
push
xchg
mov
pop
in
add
imull
in
test
pop
add
outsw
testb
jg
lods
xchg
lods
popa
push
push
dec
xchg
xchg
das
ja
jge
pop
jmp
sub
out
add
loopne
cwtl
sbb
sub
hlt
add
test
inc
dec
mov
or
bound
jge
movsb
and
shll
loope
fidivl
ret
add
mov
out
inc
mov
in
fs
out
or
mov
cltd
inc
add
ds
mov
sub
loopne
into
push
adc
add
pop
ljmp
add
enter
inc
add
imul
push
fcoms
shl
fisubs
mov
adc
pop
leave
dec
or
fmull
sahf
mov
jae
xlat
push
into
or
add
push
sub
ret
push
push
jno
xchg
les
add
add
ja
into
ret
cltd
faddl
adc
mov
ret
push
xchg
add
mov
out
sbb
push
fs
je
cmp
into
lock
add
jns
inc
les
lcall
or
das
je
dec
sbbb
pushf
mov
add
xchg
pop
in
fwait
xchg
cld
cwtl
inc
push
bound
sbb
clc
mov
repnz
adc
imull
dec
xor
lea
dec
leave
out
stc
inc
jns
scas
add
ja
test
es
andb
enter
loope
lcall
mov
add
jmp
jae
xchg
push
dec
fcompl
jb
int
jno
pop
add
fadds
cld
repnz
clc
add
lret
fucomp
pop
scas
das
cmc
add
je
cwtl
add
pop
cmpsl
pop
adc
jns
jae
sbb
jne
mov
push
mov
mov
and
adc
sahf
inc
jo
mov
adc
lcall
push
cmp
and
and
xchg
sub
add
ss
scas
cmp
je
pop
jge
sti
cmp
movsl
xchg
pushf
adc
xor
xchg
jne
fistl
stos
ret
out
or
pop
add
add
dec
pop
movsl
jo
add
sarb
stos
add
aaa
pushf
mov
rorb
push
cmpsb
mov
xlat
cld
nop
outsb
into
mov
ss
xor
push
hlt
sbb
iret
inc
fnstsw
cmp
jnp
not
push
sbb
mov
add
inc
xchg
lahf
add
das
xchg
out
jns
jmp
xchg
adc
fldcw
cltd
mov
loopne
outsl
icebp
cvtdq2ps
inc
fwait
scas
adc
fcomp
jg
nop
cmp
dec
ret
add
js
push
dec
mov
adc
andb
hlt
ljmp
push
mov
cmp
mov
add
je
xchg
cmp
dec
and
mov
sub
add
adcl
mov
sbb
push
inc
add
fiaddl
sbb
mov
fs
test
xlat
jb
cmpsl
call
add
lcall
add
push
test
stos
mov
mov
pop
cmp
or
cmp
test
fists
pop
cmp
adc
imul
divb
out
insb
inc
add
dec
fwait
or
push
add
adc
sbb
jne
sbbl
pop
pop
inc
jnp
jno
pop
nop
push
faddl
mov
add
mov
add
push
or
sub
push
mov
cmpb
roll
arpl
popa
int
loop
out
out
sbb
jae
or
cmp
mov
test
clc
cmp
jp
add
outsl
sub
add
stos
ljmp
jno
std
sbb
insl
ja
add
in
scas
add
mov
out
add
seta
pop
sbb
das
mov
sbb
xchg
or
subb
add
sbb
in
icebp
movsl
fsub
fisttpll
pop
jns
divl
out
dec
mov
add
xor
sub
test
mov
and
mov
xchg
push
xchg
and
lcall
dec
push
adc
jo
clc
add
or
mov
scas
test
pop
xlat
fstpl
or
mov
adc
xor
xchg
lcall
mov
dec
lcall
rorl
jecxz
add
dec
add
xchg
popa
inc
sbb
inc
xchg
sbb
pop
in
scas
sub
mov
xor
xchg
jmp
inc
and
aad
add
gs
addl
mov
call
out
sahf
sub
dec
pop
mov
jns
orb
mov
enter
dec
dec
dec
push
loope
cmp
xchg
imul
cld
idivl
mov
xor
dec
out
lds
ret
cmpsl
jl
mov
shl
mov
test
inc
or
adc
outsl
pop
mov
jo
addr16
xlat
fs
pop
add
mov
enter
jecxz
addl
adc
jecxz
out
testl
push
fucomip
mov
xor
mov
pop
xor
loopne
sub
sar
add
dec
sub
inc
aaa
add
stos
sub
inc
es
cmp
add
and
jne
jecxz
dec
hlt
pop
dec
mov
add
xchg
add
push
cmp
add
sahf
add
and
add
ds
pop
fsubs
fisubrs
sbb
mov
fcmovb
mov
addr16
mov
xchg
call
mov
add
out
out
cltd
lret
sahf
fidivrl
insb
cld
mov
pop
adc
pop
out
inc
sti
scas
or
movsb
ljmp
std
or
xlat
pop
jae
stos
popf
inc
in
imull
outsl
sti
ret
fwait
sub
ds
xor
add
mov
lea
loop
jl
std
add
jo
sub
mov
add
aaa
adc
test
bound
stos
sub
fnstsw
loop
sbb
es
subl
jle
cvtpi2ps
add
and
adc
js
testl
lods
mov
rcrb
enter
add
mov
jp
loope
mov
fmuls
gs
add
mov
dec
adc
pushf
add
mov
cmp
sub
cmpsl
adc
lds
mov
dec
xlat
cltd
mov
mov
loope
test
int3
stos
cli
in
loop
sbb
aaa
rolb
and
mov
or
pop
add
jl
addb
adc
dec
dec
pop
and
and
or
enter
sub
lcall
loop
stos
inc
iret
aam
push
aaa
scas
fwait
cmpsl
stc
lods
or
popa
mov
outsb
mov
and
mov
xor
sbb
ds
outsl
fmulp
movsl
add
dec
pop
push
sbb
loop
or
sti
pop
nop
in
sub
jo
jecxz
pop
add
scas
xchg
mov
push
hlt
call
or
mov
pop
dec
mov
or
xor
jge
ljmp
mov
and
test
inc
lods
xlat
and
pop
loope
xchg
roll
rcl
std
fwait
mov
clc
push
mov
js
mov
fisubs
scas
sbb
test
push
pop
sbb
jne
aad
sbb
dec
add
pop
fistpll
call
inc
lahf
enter
cmp
lods
adc
daa
sbb
and
test
std
add
inc
rcr
mov
jl
popf
ljmp
pusha
insl
add
mov
fsubrl
cmp
popa
call
fs
int
mov
popa
xor
sti
lea
sbb
loopew
xchg
aas
lahf
dec
inc
inc
imul
loope
addr16
ss
adc
fists
out
xor
or
dec
adc
mov
outsl
cmpl
roll
repnz
and
into
and
and
dec
adc
jge
mov
push
add
sub
fldt
mov
in
fwait
adc
inc
andb
inc
mov
push
dec
jns
fists
imul
fidivrl
or
pop
xchg
in
pusha
scas
mov
add
in
lret
nop
push
pop
jmp
sub
push
dec
iret
add
rcl
mov
mov
pop
stc
or
sbb
and
pushf
jecxz
in
lds
jmp
pop
add
mov
and
test
lcall
xchg
out
lret
push
jno
pop
and
sbb
inc
mov
mov
pop
sbb
outsl
loop
popl
arpl
mov
xor
leave
push
cmp
into
add
mov
std
inc
loope
dec
aam
sti
loopne
xchg
add
pop
out
das
stos
sarl
out
add
sub
iret
jg
movsl
filds
and
rorl
pop
and
mov
mov
pop
es
pop
or
and
repz
nop
ja
aad
sarb
sbb
add
cmc
cmp
fwait
loope
mov
aad
ret
cmp
out
lahf
mov
repnz
sub
popf
addl
push
pop
xor
je
cmc
adc
inc
test
lock
cmp
cmp
mov
push
add
enter
sbb
add
shr
test
cmp
jl
dec
sbb
scas
xchg
push
stos
mov
adc
sub
fstpt
add
out
loop
loope
jb
sbb
mov
inc
test
mov
pop
lret
dec
add
xor
in
sub
fwait
loop
clc
xlat
out
mov
sti
cmc
add
push
mov
dec
icebp
inc
lock
adc
add
xchg
shll
rcr
add
pop
outsb
notl
dec
mov
add
mov
sub
out
jns
idivl
outsb
push
fldl
lock
aam
pop
and
sbb
cmp
mov
test
into
mov
sahf
adc
jne
push
xlat
or
sarb
sub
neg
movsb
leave
sub
pop
pushl
movsb
add
es
sahf
call
and
sub
add
push
sub
xchg
test
lds
add
cli
xor
jae
mov
imul
add
loope
sbb
dec
xlat
stos
ret
int
fidivrl
add
pop
sbb
punpcklwd
xorb
mov
xor
inc
add
cmp
add
ret
sbb
and
push
adc
mov
in
add
mov
mov
rorl
adc
and
add
inc
ljmp
arpl
in
push
imul
das
adc
add
cmc
push
adc
andl
sbb
stos
cltd
or
and
mov
dec
push
ret
mov
or
movsl
add
jmp
mov
add
mov
mov
jae
cmp
loope
cld
dec
in
add
pop
or
iret
movsb
mov
repz
ret
imul
push
jns
movsb
pushf
and
mov
ret
andl
call
xlat
popf
arpl
mov
add
cld
pushf
cltd
adc
xchg
jecxz
sbb
mov
add
xor
loopne
lahf
test
test
scas
je
push
dec
call
pop
into
rcrb
and
popa
sub
adc
and
and
pop
andb
pop
or
add
lcall
popa
jmp
sbb
loopne
adc
inc
and
gs
add
push
pop
call
mov
stc
mov
js
fadds
xchg
andl
mov
fwait
add
lods
inc
push
ja
ss
add
movsl
xchg
les
addr16
mov
jl
test
jno
jns
sbb
or
je
bound
add
inc
es
js
lods
add
push
or
push
popf
mov
fcomps
or
cmp
mov
aas
dec
add
jno
out
add
inc
and
popa
add
mov
add
stc
jae
stos
cmp
movsb
inc
jo
jecxz
add
mov
inc
mov
shl
and
and
in
addr16
out
leave
and
push
stos
rorb
cmp
xchg
loopne
hlt
mov
cmp
in
add
outsb
pop
into
or
add
cs
adc
xor
call
loope
mov
js
fsubrp
in
lods
and
fs
jge
and
add
rorb
xor
data16
mov
inc
ret
test
lea
lods
imul
sbb
and
and
adc
sbb
or
mov
xor
push
into
pop
mov
fcmovnu
sbb
add
sub
out
addl
add
adc
xor
dec
or
pop
mov
movsb
mov
push
lret
jo
adc
mov
add
fadds
into
dec
scas
movsl
mov
xchg
push
xor
or
stos
ljmp
jg
mov
sub
pop
add
xchg
mov
bound
daa
xchg
sub
mov
fabs
ljmp
inc
push
add
fcompl
push
dec
cmpb
push
inc
out
or
mov
pop
sbb
mov
jg
into
lods
and
loope
jae
inc
adc
adc
jl
test
and
jle
test
frstor
std
add
pushf
lcall
loope
jl
out
push
dec
add
lods
and
or
je
loopne
add
negl
addr16
pushf
fists
add
and
cmp
test
adc
imul
pop
stos
enter
and
fadds
rol
sub
test
mov
jp
push
adc
cmp
sbb
scas
push
jmp
js
sbb
push
add
fidivrl
shrb
sbb
sbb
pop
addl
sub
sub
out
mov
lock
mov
adc
in
add
sub
imul
loop
es
jecxz
and
sbb
outsb
add
fisubrl
mov
and
xor
inc
aas
sbb
bound
ja
aad
lahf
in
push
add
push
or
scas
dec
adc
cmp
add
push
jne
lret
ljmp
movsl
aas
loope
movsb
sub
mov
outsl
or
add
js
mov
in
dec
push
inc
dec
pop
mov
lahf
stos
push
sub
orl
mov
sbb
add
inc
push
pop
xchg
and
jle
jmp
add
pop
cld
inc
je
add
aas
ja
push
pushf
mov
add
fistl
js
jno
leave
pop
mov
mov
inc
adc
fsubr
outsl
call
out
mov
push
roll
gs
jle
cmp
push
add
inc
mov
mov
mov
sbb
add
jge
pop
cltd
sbb
cmpsl
mov
mov
cmpsb
sub
fildl
outsl
divl
adc
daa
bound
std
fld
ret
sbb
mov
or
loope
mov
sti
lret
clc
adc
pop
scas
sbb
jne
mov
xchg
ljmp
outsl
xor
dec
mov
mov
ss
lods
insb
add
jmp
jp
add
mov
lods
add
pop
pushf
sub
loope
push
out
rcr
sbb
cmp
ret
rcll
jg
sbb
clc
loop
shrb
push
or
fs
aas
add
cmp
adc
mov
imul
iret
aam
jo
insl
push
fst
mov
or
mov
pop
inc
adc
add
xor
insl
scas
das
xchg
fsts
in
pop
loope
test
add
out
ret
jle
cmp
cvtdq2ps
out
or
out
inc
cmp
andl
push
and
cwtl
add
mov
mov
add
rsm
push
jns
js
shll
shl
lock
shl
divl
jo
mov
aad
mov
icebp
pop
pushf
xchg
rclb
test
push
sbb
jp
loope
jmp
bound
mov
ja
add
sarl
addr16
repz
dec
inc
push
push
push
add
nop
std
fisubrl
add
mov
cs
add
dec
jge
sbb
fsts
shrl
bound
fsts
lret
add
push
in
stos
lock
loope
inc
icebp
decb
addr16
sbb
in
add
outsl
cmp
xchg
add
jmp
add
enter
pusha
cmpsl
push
add
pop
mov
jns
dec
push
cmp
or
or
adc
dec
lcall
cmp
popf
inc
add
push
outsl
add
jmp
or
inc
cs
call
pop
adc
std
jl
loopne
xchg
gs
pushf
xchg
int
cmp
lea
add
sarl
add
add
sti
sbb
sarb
iret
std
jbe
fwait
pop
xor
inc
add
jl
sub
dec
sbb
lahf
pop
mov
or
das
divb
xchg
aad
push
test
mov
imul
inc
ret
sub
movsb
push
jnp
cmp
ja
ret
les
jne
mov
int3
cmp
stos
sbb
loope
mov
mov
mov
aam
call
xchg
sbb
imul
subl
add
in
pop
push
pop
cmp
jmp
cmpsl
pop
cmc
out
imul
sbb
push
add
jno
push
jg
hlt
cmp
xchg
fnstcw
or
jne
mov
sub
add
aam
pop
push
add
data16
sbb
xchg
cwtl
cld
add
in
mov
lds
add
loopne
mov
ror
popf
and
push
push
pop
push
sub
inc
cwtl
scas
pop
pop
mov
and
or
loope
add
adc
mov
mov
sbb
lods
test
rcrb
add
insl
pop
adc
xor
shl
dec
push
sbb
lds
inc
int
push
sbb
in
leave
mov
xchg
push
inc
repz
xchg
in
or
sar
pop
xchg
lock
pushl
fildl
mov
popf
or
mov
dec
dec
fwait
sbbl
pop
cld
add
pushl
frstor
jecxz
jns
push
pop
imul
mov
mov
and
in
mov
xchg
add
inc
jmp
dec
out
adc
std
inc
lock
mov
and
in
out
in
or
bound
mov
bound
call
aaa
add
cmpsb
jne
pop
loopne
scas
add
xchg
insl
imulb
enter
call
pushf
mov
je
push
push
cltd
shr
and
fsubrp
cmp
loopne
aaa
pop
mov
xchg
ret
xchg
enter
adc
cmp
imul
cmp
mov
or
xor
clc
cwtl
add
mov
out
add
test
arpl
pop
and
xchg
repnz
adc
call
cmpsb
loopne
cmpsb
data16
dec
rolb
mov
pop
sbb
rorl
mov
jp
aas
aaa
ret
notb
xor
stc
rcrb
push
imul
aaa
cli
std
loope
xor
cltd
nop
out
lret
jb
and
dec
stc
cmove
les
pop
mov
jle
mov
repz
lds
ja
jb
fistl
xchg
sbb
mov
mov
lock
adc
vmovupd
push
in
xor
rolb
and
mul
mov
in
dec
into
adc
out
push
loopne
inc
test
hlt
push
cmpsl
xor
cmp
adc
loopne
jge
in
shlb
pop
testb
pop
adc
das
lods
and
out
out
test
stc
lock
push
int
sub
in
sbb
bound
mov
and
jae
sub
test
in
out
jl
aam
push
out
aaa
arpl
fidivs
popa
and
adc
add
jle
lea
testb
or
xor
out
cwtl
jo
xor
add
pop
xlat
mov
dec
lret
push
jecxz
cmpsb
push
sahf
add
stos
fimuls
in
add
outsl
lret
int
dec
iret
arpl
fs
jp
dec
inc
fwait
jnp
push
add
mov
cmp
pop
cmp
adc
stos
mov
and
lods
xchg
sub
push
insb
pop
inc
jo
outsl
add
out
sbb
lds
push
adc
icebp
add
inc
mov
popa
or
add
loop
push
dec
aam
ret
in
outsb
pop
sbb
push
out
add
loop
test
fdivl
test
xchg
push
and
fdecstp
dec
sub
add
sbb
xchg
push
stc
fnsave
mov
jl
stos
cmpsb
mov
ljmp
sbb
mov
mov
loop
dec
jp
adc
test
and
fiadds
lods
cmp
repnz
mov
jne
es
push
or
gs
ds
movsb
sbb
bound
mov
inc
and
pop
aaa
jge
xor
dec
clc
add
mov
mov
or
aas
movsl
loop
mov
inc
sub
mov
and
outsl
xchg
aas
xlat
pop
sbb
pushf
xchg
jecxz
sub
ret
adc
cmp
out
xchg
sar
push
adc
mov
push
call
xor
jno
clc
sbb
scas
mov
add
rolb
shlb
jmp
icebp
mov
cmp
xor
mov
cmp
fs
sub
sahf
addl
adc
push
push
or
jge
shlb
and
imul
int3
dec
fnsave
adc
iret
pop
push
filds
fldt
cmpsb
push
mov
add
xor
aad
sbb
stc
pop
inc
jae
int
jns
fiadds
bound
xchg
lds
pushf
push
dec
sar
sbb
loop
aad
adc
mov
fdiv
sbb
in
push
inc
inc
add
cmp
popa
pop
inc
jmp
test
xor
call
fnsave
repz
dec
push
cmp
pcmpeqb
iret
lds
adc
mov
les
leave
sub
or
lret
add
dec
adc
xchg
pop
xchg
mov
call
lahf
add
dec
icebp
push
mov
aas
lock
add
lds
jp
int3
jmp
stc
in
and
and
fnclex
xorl
mov
mov
mov
ljmp
jb
mov
sti
sbb
pop
insb
push
lods
loop
inc
adc
sbb
cltd
ffree
mov
loope
push
sub
jmp
pop
inc
adc
daa
into
mov
nop
lret
add
jecxz
mov
xchg
xchg
inc
aas
adc
push
add
lods
xchg
jmp
adc
and
pushf
and
inc
outsb
sbb
xchg
or
push
add
mov
cmp
push
jo
sbb
pop
scas
or
xchg
fcoml
mov
add
outsl
into
xchg
add
jge
sub
addb
push
push
add
and
pop
jo
ret
clc
outsl
lahf
add
inc
cmc
enter
addr16
sti
xorl
sti
sub
outsb
imul
push
lret
push
dec
sti
popa
or
adc
test
add
mov
insb
in
jne
push
addr16
incl
sub
sbb
imul
fdiv
cmpl
xchg
mov
popa
inc
out
rcrb
ret
xchg
gs
mov
xchg
mov
add
or
imul
mov
fdivrl
push
not
pop
arpl
add
adc
jp
xchg
dec
or
xor
fs
jbe
imul
mov
pop
cmc
jo
daa
cmpsb
es
outsb
test
xchg
mov
pop
xor
and
inc
imul
leave
xchg
cmp
popa
mov
sbb
jb
add
js
outsl
add
pop
daa
sbb
aaa
add
add
ds
jp
sub
xchg
jle
xor
fidivrs
mov
dec
int
fcomps
add
jl
xor
negl
sbb
shl
in
xchg
add
test
out
jb
sarl
xor
sbb
sub
inc
dec
rolb
into
stc
add
and
pop
and
push
ja
jle
cmp
out
sahf
popa
jnp
xlat
mov
pop
xor
inc
inc
mov
fwait
ret
bound
inc
ja
mov
and
pop
pop
lock
add
mov
popa
push
mov
jno
or
cmpsb
mov
ficomps
xchg
sti
repnz
add
aaa
mov
inc
mov
enter
pushf
pop
jbe
jmp
pop
shll
adc
jecxz
dec
pusha
jl
imul
cs
sbbl
rcrl
nop
dec
inc
jp
dec
sub
cmp
cmp
js
mov
cmc
mov
push
cltd
and
push
nop
jl
movsl
dec
fwait
adc
add
cmp
lret
dec
jecxz
inc
dec
out
mov
adc
imul
loope
repnz
jp
loope
dec
sub
test
mov
jb
inc
sbb
loop
ljmp
pop
dec
add
or
jl
add
sub
xchg
std
lds
add
jne
xor
mov
addb
add
xlat
cmpb
es
data16
adc
insb
aas
pusha
mov
sahf
incb
sub
pushw
dec
in
loop
add
cmp
inc
out
dec
or
xlat
orl
scas
notb
mov
dec
scas
sbb
sarb
test
mov
add
jmp
das
mov
lret
add
insl
xlat
fdivrs
inc
adc
add
call
adc
movsl
and
mov
scas
dec
fs
mov
jmp
push
inc
sbb
lock
add
jne
push
push
jl
cmp
pop
add
ss
jmp
bound
sbb
movsl
daa
inc
mov
add
scas
loopne
jp
add
bound
lret
fldl
fidivrs
jmp
xchg
xor
pop
mov
push
cmp
or
xchg
das
scas
add
xchg
mov
mov
test
sbb
loopne
lcall
add
loop
push
mov
dec
aas
out
fidivrl
add
mov
add
std
cmp
xor
filds
aam
jp
xor
pushf
das
popa
lret
popf
fstpl
adc
xor
mov
mov
lds
faddl
adc
in
inc
adc
xchg
push
dec
cmp
add
insl
add
sbb
inc
enter
inc
fisubrs
xlat
or
or
mov
xor
adc
mov
adc
add
mov
or
aas
loope
jns
xor
outsl
dec
out
cmpsb
movsb
mov
mov
inc
test
xor
sub
testb
imul
add
push
icebp
andb
lods
cld
xchg
sbb
dec
cli
fisttps
popa
mov
xchg
adc
out
mov
adc
aam
outsl
add
negl
aad
pop
adc
inc
outsl
jge
faddl
cmpl
and
negl
aaa
xor
wbinvd
ret
ret
aas
inc
or
jg
leave
popf
mov
nop
adc
ret
mov
cmp
inc
inc
outsl
cwtl
sbb
shrb
jecxz
or
incb
ss
mov
or
rcrb
dec
sub
je
icebp
fs
cli
adc
mov
mov
cmp
stos
xchg
and
test
push
mov
cmp
xor
xchg
leave
loop
or
push
dec
lret
sbb
fdivs
loope
adc
test
cmpsl
movsl
pop
lds
sub
or
sbb
fstl
bound
fs
mov
ret
mov
lock
orb
mov
push
adc
lahf
decl
sub
inc
out
jg
add
mov
add
test
stc
add
shlb
icebp
ret
xlat
into
or
js
or
pop
cmp
cmp
loop
repz
jl
jb
js
scas
mov
xor
jge
push
push
flds
jnp
pop
dec
mov
jb
add
push
add
and
fstp
popf
decb
jecxz
jmp
add
out
les
add
xchg
xor
fbstp
push
push
add
sub
sti
add
jmp
mov
add
fildll
test
insb
popa
mov
add
lock
inc
sub
mov
lret
and
push
xchg
push
js
push
test
push
or
adc
in
cmp
cmpsl
movsb
int
lods
cli
repz
pop
jl
add
jp
dec
iret
loopne
add
mov
stos
push
mov
add
ret
jb
dec
add
mov
sub
adc
sbb
pop
movl
adc
leave
or
or
add
xchg
inc
adc
mov
sti
and
in
sbb
jl
add
cmp
sub
rolb
sbb
inc
inc
add
shll
xchg
int3
std
add
sti
pop
push
arpl
faddl
inc
mov
scas
outsl
fmulp
cwtl
add
cld
mov
pop
add
imul
stos
sbb
mov
loope
data16
xchg
mov
pop
lock
enter
sub
mov
xchg
add
xor
stos
push
int3
pop
inc
push
push
push
add
add
loopne,pn
pop
sahf
adc
pop
pop
xchg
ja
xchg
xchg
xchg
add
xor
mov
pushf
sbb
in
jns
fs
pop
add
loope
jb
add
push
xchg
pop
imul
sbb
mov
daa
xchg
adc
lahf
shrb
enter
loope
push
pop
adc
mov
adc
pop
enter
push
add
pop
push
loop
jg
fildl
rolb
cs
outsb
jp
lods
pop
adc
mov
jo
add
fistpll
addr16
scas
xchg
movsb
mov
add
mov
sub
add
and
cmp
aam
es
add
xor
fneni(8087
pop
arpl
fdiv
mov
std
repz
cmp
jo
dec
ss
cltd
add
xchg
add
fsubrp
or
mov
add
or
push
mov
inc
jo
fadds
mov
add
xor
sti
loop
inc
faddl
cwtl
sbb
fistl
cmp
inc
sbb
mov
inc
repz
sti
lea
ret
jnp
mov
jno
stos
pop
das
loope
dec
sbb
insl
dec
cmp
cs
lret
loope
js
lods
sub
je
lcall
xor
cmp
push
and
cltd
cmc
popf
xchg
add
inc
add
test
pop
loop
jl
jle
das
xchg
add
sets
inc
sbb
cli
pop
test
lea
sub
imul
lock
out
push
pop
push
lmsw
jne
xor
fisttpl
push
loope
cmp
mov
rolb
cmp
out
add
push
fisttpll
das
or
push
cmp
fsubrl
lods
stos
sbb
pop
xor
inc
xor
or
dec
pop
xchg
test
and
fisubs
mov
sbb
jg
test
inc
or
xor
add
es
lods
pop
lock
push
add
in
shrb
adc
test
add
inc
sub
popa
cltd
adc
push
dec
adc
lret
ret
push
jle
push
add
adc
shrl
jno
adc
push
mov
add
test
add
lret
movsb
xchg
dec
imul
or
xor
sti
xor
sub
push
mov
incl
mov
and
into
xchg
movsb
jmp
mov
add
call
je
pop
std
nop
into
inc
stos
jno
jae
imul
adc
pop
sbb
sub
rorl
sbb
xor
roll
lods
push
dec
subl
lods
iret
in
jbe
fiadds
dec
fiadds
pop
mov
add
sbb
dec
fwait
aas
xor
push
pop
push
mov
stos
adc
cmpsl
ss
ja
out
adc
add
inc
test
stos
add
mov
xor
adc
sbb
into
jbe
loope
mov
adc
add
lahf
sarb
hlt
call
and
mov
add
lret
adc
or
xor
xchg
adcb
sbb
push
push
daa
stos
pmullw
xor
test
or
sahf
mov
inc
mov
in
rorb
add
xchg
push
sbb
dec
add
adc
imul
add
shlb
jae
cltd
push
mov
jp
incl
mov
imul
and
ds
sub
cmp
add
dec
shlb
insl
jl
jmp
add
xchg
inc
sub
add
out
fmulp
bound
jmp
cwtl
int
mov
add
and
inc
call
dec
add
es
mov
inc
push
roll
test
stos
add
xlat
push
ss
jbe
arpl
adc
fsubrp
push
add
mov
inc
dec
xor
inc
mov
es
adc
push
mov
mov
repnz
loop
jbe
cwtl
std
mov
mov
shl
add
lea
add
sub
lahf
add
js
lret
xor
idivb
aad
add
xchg
pop
mov
and
hlt
mov
aam
adc
mov
stc
jmp
add
je
push
testb
and
stos
and
sub
lds
and
mov
push
or
add
adc
outsb
add
out
mov
aam
fnstsw
add
or
add
shll
jmp
xor
mov
xchg
jno
xchg
add
test
push
adc
setle
in
fbld
into
inc
push
mov
mov
pop
push
cmp
sahf
xchg
loop
mov
popf
or
imul
inc
roll
dec
lds
push
movsb
shl
inc
xor
pop
fs
dec
imul
cs
and
adc
pop
pusha
popf
inc
xchg
pop
xor
or
jo
fmuls
in
andb
mov
inc
mov
sub
sub
add
add
jae
arpl
aaa
cmc
add
fdivrl
adcb
gs
popf
sbb
or
sbb
jnp
and
mov
adc
fnsave
stos
push
adc
hlt
and
jb
sub
push
lahf
sti
or
adc
mov
or
adc
xor
hlt
or
fcmovu
inc
test
ret
xor
adc
test
and
shlb
jg
adc
jno
call
add
aas
push
fldt
pusha
dec
add
in
xchg
outsl
pushf
push
push
jo
add
inc
repnz
loopne
iret
aam
rcrl
int3
jne
xchg
inc
xchg
cmc
mov
pusha
or
mul
loope
mov
pop
mov
outsl
add
dec
popf
ret
mov
jb
jmp
jbe
cli
idivl
sti
xor
mov
lahf
clc
rorl
repnz
mov
pop
sub
xor
mov
pop
sbb
iret
outsl
and
pusha
pop
test
mov
out
pop
sbb
adc
popa
in
cli
add
mov
out
les
jge
push
test
lds
add
jle
popa
test
lret
jmp
test
push
add
fucom
add
popa
fnstcw
xchg
and
and
jmp
fwait
push
lret
add
xlat
hlt
in
add
xor
add
rcrb
popa
je
mov
pop
jnp
adc
sbb
data16
js
or
mov
add
in
push
push
cmp
sbb
push
push
pusha
add
adcb
jnp
xchg
jmp
cwtl
clc
sahf
cli
es
jecxz
add
mov
sbb
ljmp
lock
imul
cli
in
daa
enter
jo
clc
sahf
pop
add
frstor
testl
pop
dec
push
sbb
les
jl
mov
add
xchg
pushf
push
dec
loop
cli
sbb
idivl
popl
pop
mov
mov
adc
lds
mov
sbb
dec
and
rol
inc
imul
sub
mov
add
stc
scas
fsub
cmp
gs
sbb
sbb
inc
push
ljmp
es
adc
int3
imull
or
icebp
add
push
outsb
pop
or
ljmp
mov
jo
push
rolb
int3
movsl
jg
push
or
or
and
push
xchg
push
fcoms
push
jne
mov
sbb
sbb
push
fnstsw
add
fisubrl
push
push
push
out
je
and
jne
dec
data16
inc
filds
enter
lock
cmp
push
pop
pop
and
add
mov
mov
lahf
mov
inc
rcrb
pop
push
xor
mov
add
sub
imul
dec
mov
push
mov
adc
xchg
sbb
push
mov
adc
shrl
out
loope
cmpsl
mov
ja
and
loop
pop
in
cmp
std
push
insl
sahf
pop
add
out
sete
inc
push
add
mov
inc
push
mov
push
add
push
nop
or
mov
cmp
je
in
pop
jmp
dec
ret
jp
ljmp
push
inc
xchg
stc
call
adc
sub
cmp
pop
jbe
add
cmpl
in
out
nop
mov
test
enter
cwtl
add
imul
sbb
mov
out
mov
shll
stos
mov
cwtl
jle
add
push
pop
call
sbb
test
or
aas
and
xchg
scas
test
sbb
sub
xor
jb
sti
push
mov
notb
dec
test
int3
xchg
stos
sub
jle
sub
jns
pop
and
mov
sub
stos
loope
mov
adc
cmp
sbb
jbe
cmp
fdivrs
mov
stos
jge
add
lock
jne
lea
es
inc
xchg
insl
pusha
sbb
adc
shll
ficoms
add
das
jno
dec
data16
popa
mov
test
adcb
cld
pop
insb
push
jno
loope
imul
pop
loop
push
subb
sub
lcall
xchg
or
sbb
dec
add
or
mov
cltd
mov
or
cmp
jp
inc
arpl
aas
clc
js
ret
aad
fmull
lahf
mov
mov
into
jle
sub
sbb
lcall
pushf
sti
pop
adc
or
lods
lret
icebp
movsb
mov
xor
ret
lahf
je
mov
call
fadds
movsl
adc
pop
in
inc
pusha
loop
lods
imul
out
data16
add
in
in
add
jge
push
out
into
pushf
add
cmc
mov
mov
stos
sub
push
mov
mov
mov
rcrl
pop
stos
mov
imul
xor
sbb
xchg
stc
mov
hlt
movsl
xlat
sbb
sbb
and
mov
sbb
shll
dec
sbb
adc
mov
lock
ja
xchg
test
mov
ffree
add
cs
push
mov
dec
cmp
cmp
call
dec
sub
or
imul
ljmp
in
sahf
pop
mov
sbb
scas
pop
cwtl
add
jbe
stos
enter
mov
xor
add
inc
jp
cmp
add
add
imul
jbe
jne
and
dec
sahf
lcall
xchg
into
clc
arpl
sub
lahf
shlb
jle
test
push
sub
mov
daa
fwait
or
jbe
pop
lds
sar
insl
pop
pop
cmp
mov
aad
inc
sub
mov
subl
ja
addr16
dec
fsubp
in
sahf
xor
add
jl
dec
pop
inc
pop
test
dec
xchg
repnz
lock
add
sbb
pop
and
xor
sahf
cmp
and
push
mov
ret
popf
sbb
stc
insb
dec
mov
xchg
sbb
movsl
add
stos
pop
scas
idiv
rclb
cmp
sub
sub
add
jg
push
add
push
inc
inc
add
xor
bound
add
loop
icebp
jbe
pop
add
mov
mov
imul
cmpsl
lea
loop
pop
jmp
sbb
test
add
inc
xchg
cmp
adc
loop
mov
fimuls
cmpsl
mov
lds
xor
jno
cmp
jl
add
sbbb
and
call
push
insb
pop
loopne
add
into
jnp
les
xchg
add
je
sbb
add
push
dec
ds
adc
add
cld
cltd
loop
ds
es
adcl
sbb
cmpsl
orb
add
insl
lock
fsubrp
mov
sar
xlat
push
lea
enter
rol
cmc
and
flds
cmp
sbb
cs
dec
jl
daa
or
out
mov
out
or
mov
rcll
repnz
inc
shl
test
aaa
adc
add
imul
mov
ret
sbb
lea
scas
in
or
push
add
dec
outsb
fpatan
jo
nopl
fstpt
inc
outsl
lock
jp
insl
out
cmp
dec
or
and
add
dec
and
push
jno
pusha
mov
or
insb
into
or
jnp
leave
add
stc
mov
mov
add
mov
push
fildl
aad
add
je
sahf
cwtl
sub
push
sub
and
adcb
mov
daa
jb
mov
inc
repnz
mov
xor
lret
sub
hlt
lds
call
icebp
jg
add
cmc
imul
add
cmp
into
add
inc
test
sbb
pop
lahf
adc
dec
add
add
jle
outsl
sub
js
jnp
lods
jp
cmp
scas
fists
test
inc
xlat
leave
jae
or
fldcw
loopne
arpl
enter
in
lret
insb
negl
push
out
das
cmpsb
add
mov
icebp
pop
and
add
push
repz
adc
aam
mov
mov
jno
test
cmp
mov
test
pop
add
sti
jp
inc
shll
xlat
pop
loop
add
mov
outsb
popa
jns
sti
rep
stos
pop
xor
movb
inc
lret
xchg
pop
rorb
add
lahf
cli
stos
mov
xchg
les
fdivr
or
lods
jl
loop
sahf
test
pop
out
stos
cmc
jge
jo
add
pop
push
roll
dec
jl
xorl
add
dec
inc
mov
imul
or
int
repz
rcrl
jns
je
cwtl
push
pop
fndisi(8087
cmpsl
push
call
mov
inc
xorl
jl
sub
lcall
pop
add
es
icebp
or
test
adc
push
push
and
jbe
jnp
call
mov
outsl
push
add
fidivs
repz
sub
out
mov
push
mov
adc
cmpsb
sbb
add
daa
faddl
getsec
fistl
add
in
insb
push
pop
inc
loope
pop
cli
pop
mov
dec
add
loope
aam
push
mov
xchg
add
mov
jl
out
insb
mov
dec
dec
and
inc
dec
test
lods
and
icebp
not
jmp
gs
adc
in
push
jns
ret
push
xchg
or
hlt
sbbb
jnp
loopne
jb
mov
and
sub
and
cmp
out
gs
popf
ljmp
enter
daa
pop
fdivrl
stos
jmp
and
pushl
jl
mov
popa
pushf
mov
adc
rcll
loope
and
cmp
inc
dec
jp
pusha
or
jge
cmpsb
lahf
clc
cmp
mov
stos
outsb
cmp
sub
leave
in
add
enter
pop
hlt
in
add
js
add
dec
pop
push
rolb
and
in
call
inc
sbb
sbbl
add
mov
icebp
lds
ljmp
mov
sahf
pushl
adc
outsl
cmpsl
add
cmp
testl
jns
loop
cmp
or
sbb
mov
mov
cltd
mov
ret
lock
mov
xchg
add
jo
and
leave
cmpsl
sub
mov
push
inc
mov
shlb
movsl
arpl
notl
jmp
and
adc
jge
call
shrl
outsl
imul
and
push
push
dec
push
outsl
jno
shll
adc
push
mov
nop
popf
aam
repz
add
cld
jl
push
inc
jp
mov
adc
or
mov
cmp
frstor
cmp
cltd
jl
les
scas
testl
mov
bound
fists
daa
xchg
dec
sbb
das
cmp
mov
jmp
fildl
out
mov
fnstenv
test
ficompl
rorb
je
scas
neg
xlat
js
adc
scas
sbb
push
shr
data16
sbb
mov
pushf
jo
out
icebp
js
add
push
sti
fnstenv
xor
scas
fs
mov
and
pop
add
dec
lret
push
es
jns
fisubl
pop
jge
mov
cmc
jp
sbb
ja
addr16
fwait
xor
clc
mov
add
cmp
dec
fisttpll
mov
xor
ljmp
mov
xchg
sarl
add
sub
and
pop
data16
inc
loopne
sbb
shlb
add
pop
ss
mov
fwait
aas
sbb
js
mov
sbb
inc
imul
adc
lret
arpl
test
adc
mov
in
add
adc
mov
stos
pop
pop
icebp
cli
adc
pop
mov
fwait
inc
cmpsl
faddl
nopl
sub
stos
mov
jbe
jnp
or
push
popf
test
push
movsb
dec
mov
fucomip
paddw
stos
adc
mov
mov
jne
loop
adc
or
push
les
cmp
sbb
xchg
fimuls
mov
pushf
addb
mov
sbb
push
adc
dec
popa
pop
lret
cmpsl
test
or
add
fadd
sbb
cld
mov
je
push
sbb
mov
lret
adc
add
pop
imul
and
xor
data16
cmp
mov
aam
adc
xchg
ljmp
rorb
xor
iret
loope
into
test
fildl
or
xor
pop
ret
add
add
sub
inc
outsb
repnz
mov
cmp
stc
into
inc
shrl
add
sbb
add
enter
push
dec
rol
add
adc
add
jle
test
inc
call
mov
hlt
cli
pop
in
not
ja
iret
shll
or
repz
jp
adc
bound
xchg
mov
mov
add
test
js
mov
pusha
mov
jno
adc
sbb
popa
push
or
add
fwait
adc
push
out
iret
xor
out
pop
mov
cmp
loope
int
xchg
loop
or
sbb
adc
add
popa
cs
mov
pop
inc
sub
sar
loop
mov
pop
and
scas
ret
out
add
pop
mov
cmpsl
fs
lret
fwait
sti
fisttpl
popf
ss
sub
aas
mov
pop
shll
call
ja
int3
pop
dec
mov
sub
movsl
mov
adc
test
xor
cmp
adc
cwtl
sbbb
push
cld
nop
dec
sub
addb
lods
or
xchg
fstpt
gs
div
add
inc
adc
jae
imul
jg
std
scas
or
pop
dec
das
jo
or
add
mov
add
rorl
test
int3
popa
repnz
jae
shll
xor
fistpll
or
aaa
test
mov
leave
jne
mov
push
lcall
sub
add
jns
ret
cmp
lret
jmp
popa
scas
cmp
sbb
mov
loop
roll
or
jl
test
sub
mov
loope
sub
push
pop
pinsrw
add
mov
jb
mov
addl
pop
and
pop
pop
push
add
mov
mov
mov
sub
inc
scas
sbb
in
sbb
and
fucom
sbb
jae
xlat
pop
pop
sub
add
push
jb
cmc
out
out
mov
fdivrl
daa
out
add
and
add
mov
dec
sti
loop
int3
and
cmp
sbb
aaa
fs
jae
outsl
test
insb
popa
and
daa
data16
mov
sub
dec
xchg
sti
add
sbbb
idivb
xrelease
cmpsb
gs
clc
add
push
sub
push
xor
repnz
mov
push
add
adc
repz
lcall
push
test
add
mov
test
sbb
fwait
insb
jge
iret
icebp
mov
cmpsb
mov
stos
sar
stos
scas
xchg
aas
cmp
pop
mov
mov
pop
cltd
push
lret
pop
cwtl
adc
or
loope
mov
ret
mov
adc
fsubr
fnstsw
into
out
or
aam
cmp
mov
daa
out
add
inc
pop
popa
dec
shr
sub
cwtl
in
push
adc
fyl2xp1
popa
xor
bound
rolb
pop
or
jmp
mov
adc
xor
add
fdivl
cli
scas
sti
sbb
rolb
inc
jl
xlat
mov
js
adc
cmc
cmp
mov
shr
or
jmp
andl
cli
sbb
cmp
mov
pop
addr16
faddp
inc
adc
add
nop
xor
and
incb
push
or
mov
xor
push
in
cwtl
push
mov
mov
push
rolb
insl
fdivr
aaa
push
adc
xchg
loope
cmp
add
in
push
add
scas
aas
xor
pop
xor
popf
fcompl
sbb
add
mov
cwtl
mov
decl
scas
sbb
add
cmp
push
cld
scas
add
cmp
and
pop
out
mov
xor
dec
pop
jnp
ficoml
gs
sub
cmpsl
jns
mov
and
xor
jo
lcall
cmp
mov
lret
dec
add
pop
mov
lods
xor
mov
adc
jp
xchg
mov
clc
mov
lods
rol
adc
cmpsl
jae
inc
add
mov
popa
ret
mov
mov
mov
pop
adc
mov
cli
mov
jae
fstps
scas
popa
sahf
lcall
movsl
xchg
add
ret
sbb
xchg
subl
inc
stc
repz
cmpsl
test
xor
cwtl
inc
xor
test
sub
mov
xchg
push
cmpsb
sbb
add
or
hlt
add
dec
call
scas
ret
adc
lret
insb
push
xor
inc
ret
mov
ficompl
xor
or
adc
add
or
lret
js
cmp
pop
mov
movsb
mov
fisttpl
mov
inc
loop
xchg
fsubl
cmc
outsl
sub
push
pop
shll
repz
add
sub
test
decb
pushf
or
stos
pop
pop
fldt
push
sub
push
jno
adc
or
sahf
xlat
jle
das
sub
lods
push
pop
test
inc
and
loope
pop
stos
adc
or
ffree
nop
add
xor
jno
jl
popa
es
mov
add
test
xor
or
arpl
add
enter
inc
outsb
sub
pop
pop
shll
jnp
xor
or
add
jne
pop
dec
sbb
or
push
lods
add
xchg
cmp
inc
fsubr
insb
mov
jp
gs
adc
sti
push
loop
notl
xor
fldcw
mov
or
lock
jbe
lret
xlat
hlt
push
scas
loopne
pop
jge
sbb
enter
jno
icebp
add
pop
clc
loope
dec
xchg
add
pusha
adc
or
pop
loop
or
adc
jecxz
sbb
mov
add
int3
mov
test
insl
or
add
in
cmc
pop
or
dec
mov
stos
les
outsb
mov
inc
xor
add
xor
popf
cmp
lea
adc
stc
mov
or
movsb
push
fsubp
push
mov
imul
adc
and
cmc
sbb
in
add
cld
jg
daa
mov
frstor
sbb
adc
mov
push
popa
inc
jecxz
push
je
jae
bound
sbb
mov
call
test
mov
ljmp
pop
into
stos
add
arpl
stc
add
push
repnz
push
mov
fst
xlat
ret
adc
sub
lahf
adc
lret
cld
lea
jl
pusha
rcr
faddl
and
inc
mov
out
adc
popa
std
in
not
lcall
mov
mov
xchg
mov
xchg
sbb
jg
lret
xor
pop
add
jp
and
and
hlt
sbb
jo
out
in
ret
sbb
aas
add
ljmp
add
pop
hlt
outsb
mov
add
jae
sub
jmp
pop
cld
in
xor
ja
sbb
inc
ret
add
fstps
add
jle
fadds
mov
clc
mov
nop
sbb
fidivs
cmp
inc
xchg
andl
xor
stos
int
enter
rolb
cmp
rcrl
enter
adc
in
mov
leavew
mov
add
mov
jne
push
pop
jle
push
xchg
orb
nop
aas
mov
sbb
stos
pop
sbb
jg
in
inc
add
xor
push
data16
aas
in
sbb
mov
int
lods
lock
das
mov
add
mov
add
outsl
ljmp
inc
aaa
jl
sub
shr
aas
jmp
adc
inc
mov
xor
test
dec
sbbb
movl
dec
ja
into
add
dec
in
add
pop
pop
add
scas
xchg
sub
lret
inc
in
pop
push
add
mov
mov
repz
dec
shlb
adc
ja
pushf
in
cs
mov
add
or
pop
add
mov
scas
je
dec
hlt
or
sub
ret
rolb
pop
addr16
enter
add
jbe
xchg
subb
add
scas
lret
rorb
leave
mov
loop
iret
pop
and
xchg
sbb
sub
add
imul
or
in
popa
idiv
cmpb
out
adc
cli
cmp
rolb
popf
cltd
movb
out
xlat
add
xchg
test
add
imul
cmpsl
xchg
xor
add
leave
ret
lods
dec
mov
xchg
insb
out
loop
js
inc
sarb
add
push
in
adc
or
jne
addr16
cli
push
add
js
jg
pop
les
dec
sbb
mov
jl
test
lcall
sahf
movsl
add
mov
mov
cmp
pop
aas
jle
inc
xor
push
pop
mov
shll
inc
imul
dec
jmp
sbb
mov
and
add
mov
jmp
outsb
add
inc
jl
dec
push
leave
loop
adcb
mov
jb
call
push
andb
prefetchnta
repz
in
add
jo
mov
push
jns
in
cli
add
jl
test
insb
pop
inc
clc
shll
pop
push
push
cld
lods
loope
jno
into
push
sbb
mov
std
xchg
cmp
adc
or
outsl
adc
pop
dec
adc
cmp
stc
adc
sbb
jmp
jmp
cs
pop
inc
push
fadd
scas
enter
insb
mov
xchg
in
sbb
adc
add
and
push
in
nop
popa
pop
movsl
push
jl
addl
fs
popa
jns
iret
xor
lods
adc
and
lock
add
aaa
fdivrl
lock
add
movsb
mov
adc
mov
orb
and
pusha
roll
gs
cs
movsb
push
or
or
xor
repz
inc
cmpl
into
popa
and
jecxz
mov
fs
sub
push
rep
push
add
push
mov
inc
jbe
movsb
loop
mov
add
push
dec
xchg
pop
cmpsl
inc
xchg
ror
les
xchg
xlat
adc
cmp
add
test
test
push
addr16
mov
test
repnz
pushf
insb
fstpt
out
int
dec
cmpsb
aaa
jno
jbe
mov
mov
ljmp
sub
icebp
nop
pop
das
and
push
cltd
dec
or
test
push
loopne
imul
xlat
mov
jmp
dec
adc
add
adc
pop
inc
data16
loope
inc
std
cmp
jmp
ja
or
insb
pop
pop
testl
mov
push
push
pushf
inc
int
jns
outsl
lock
add
lret
jbe
add
xchg
cwtl
or
in
jae
or
jl
dec
add
dec
loope
mov
inc
mov
mov
push
jo
fwait
lret
and
jmp
jae
popa
ljmp
movzwl
add
dec
iret
fdivr
out
mov
lods
jae
stos
pop
add
arpl
add
shrd
jecxz
stos
call
sub
mov
sbb
and
adcb
stc
pusha
negl
push
xchg
xchg
add
pop
xor
adc
stos
loope
addr16
sbb
repz
dec
and
pop
mov
xor
repnz
pushf
cs
pop
lcall
out
stc
fsub
add
cmp
enter
add
scas
stos
imul
fstpt
lods
add
mov
xchg
scas
add
insl
das
arpl
outsb
and
mov
mov
and
xor
cmp
add
push
repz
inc
clc
sbb
inc
rolb
push
jp
sub
and
pop
add
ds
ja
xlat
fmuls
jb
inc
out
mov
cs
add
jae
into
mov
add
dec
pop
push
dec
inc
stos
push
or
aad
in
push
pop
sbb
add
mov
xchg
add
push
inc
xchg
call
movsl
lock
icebp
filds
sti
add
mov
incl
fmull
add
jno
lret
jbe
adc
std
add
add
jo
pop
push
js
shll
or
sub
aaa
mov
cmpsb
mov
and
mov
aam
push
sahf
mov
add
lretw
shrl
xchg
dec
add
js
mov
add
out
sarl
in
add
cld
mov
subl
mov
and
fwait
mov
mov
rolb
add
jg
mov
push
shrb
inc
and
push
sbb
pop
jbe
mul
hlt
cmp
cld
shlb
sbb
hlt
nop
pop
fwait
test
push
adc
xchg
jmp
or
add
daa
cmp
add
mov
xor
test
add
lahf
dec
out
dec
add
mov
into
insb
mov
loopne
add
inc
pop
xchg
add
jnp
ret
jbe
adc
sbb
outsl
add
ja
jmp
xor
jg
xor
cmpsl
daa
add
inc
pusha
popa
test
stos
add
sbb
adc
inc
pop
fadd
xchg
and
jge
cmp
shlb
js
xor
add
sub
pop
add
jge
xor
mov
mov
clc
mov
inc
xchg
or
mov
adc
fisttpll
add
stos
sub
add
ja
pop
out
leave
jge
pushf
inc
jg
adc
rcrl
pop
fisttps
adc
inc
jae
mull
mov
add
imul
or
mov
pop
add
loop
cmc
push
dec
mov
cmp
cmp
cmpsb
inc
push
inc
cmpsl
mov
dec
mov
ret
sub
test
scas
pushf
iret
add
and
mov
rorl
lret
push
fimuls
add
jae
scas
lea
cltd
negb
push
push
ret
xor
or
mov
loope
ja
jmp
dec
or
mov
mov
in
mov
ret
fiaddl
pushf
popl
add
sahf
cli
test
xchg
mov
aaa
int3
into
dec
aas
sbb
jne
out
mov
cltd
pop
add
xchg
mov
rcll
xor
jo
fmull
mov
and
das
roll
dec
mov
punpckhwd
ret
xor
clc
add
jns
popa
popa
sbbl
bound
test
and
and
leave
adcl
push
and
add
push
jno
add
add
inc
and
push
pop
out
xchg
leave
push
faddl
es
inc
mov
add
sbb
add
arpl
sub
add
pop
gs
sub
inc
push
inc
les
rorb
mov
in
das
insb
push
test
add
repnz
dec
and
or
and
and
sbb
lods
or
xchg
out
loop
and
loopne
and
pop
fildll
sbb
xor
loope
mov
movsb
and
and
xlat
add
jb
sub
and
mov
pop
sti
clc
xchg
and
add
subl
mov
in
sti
adc
mov
sbb
add
adc
adc
jp
lcall
mov
and
sbbl
push
in
and
daa
add
ret
rorl
add
into
lods
cld
das
mov
cmc
mov
sti
scas
movb
jno
popa
stos
and
andl
popa
xorl
ss
lea
rorb
daa
or
dec
sbb
daa
loop
sub
sub
enter
imul
mov
shl
add
add
loope
xor
gs
out
and
pop
xchg
cmp
in
mov
jmp
fstl
ret
jo
add
and
loope
repnz
mov
ret
push
sub
cli
or
sub
sbb
pop
and
cmp
push
mov
repnz
dec
mov
icebp
insb
addl
sub
mov
int3
ds
test
or
inc
xor
mov
ljmp
imul
pop
leave
jb
pop
movsb
outsb
andl
mov
scas
sti
xlat
and
inc
mov
pop
cwtl
jne
insl
inc
movb
and
jmp
je
dec
jl
nop
es
scas
cltd
sub
orl
loope
sbb
add
jmp
fistpll
add
outsl
dec
cmp
loope
pop
sbb
add
shlb
jae
loop
jbe
lods
adc
jne
and
or
filds
ja
xchg
roll
cmp
das
das
mov
mov
add
adc
test
xor
inc
bound
add
mov
popa
sti
xor
push
inc
dec
sbb
add
insl
out
addb
subb
mov
mov
xor
inc
xchg
sub
mov
xchg
push
xchg
push
arpl
arpl
mov
add
adc
lods
aaa
iret
icebp
fcomps
add
clc
xchg
sti
ficomps
pop
and
jbe
fldl
into
dec
or
rcll
mov
imul
loopne
dec
cmp
add
and
pusha
mov
inc
fbld
inc
and
sbbl
sub
mov
push
loope
gs
in
and
add
out
test
leave
adc
xor
mov
lods
pusha
lcall
pmulhw
xor
pminub
insb
add
test
sbb
xchg
and
sbb
loope
add
adc
addr16
in
push
loopne
mov
or
cwtl
sub
or
sbb
lock
jge
jg
out
pop
xor
cwtl
inc
adc
push
popa
or
int3
adc
das
inc
pop
cli
lret
test
add
pop
mov
popa
xchg
mov
scas
pop
enter
dec
sbb
cmpsb
xchg
jmp
jp
xor
xlat
or
mov
inc
cmc
enter
lods
faddp
stos
inc
xor
and
jo
and
loopne
cli
das
push
ret
es
push
je
xchg
popa
int
and
aas
rolb
lret
cmp
repnz
sbb
jo
arpl
loop
add
jg
inc
add
test
out
and
andl
and
lahf
subl
mov
aas
cltd
push
repz
mov
dec
or
clc
add
mov
call
daa
sub
arpl
add
inc
xor
add
cmp
test
dec
push
xchg
push
ret
clc
inc
and
movsl
or
out
sub
mov
sub
mov
sub
insl
lea
sbb
scas
repz
jnp
xchg
lods
lahf
mov
lahf
sti
dec
push
jne
lahf
cmp
push
ja
lahf
jl
pop
jns
lahf
mov
lahf
cld
sub
pusha
pop
pop
aas
pop
jg
mov
mov
out
cmp
or
test
pop
loope
mov
out
xor
sti
add
inc
sub
loope
das
arpl
inc
add
orl
sti
and
addr16
pop
mov
test
jl
pop
jecxz
mov
cmp
sub
pusha
mov
pop
aas
and
mov
add
or
sahf
outsl
pop
lock
dec
out
addb
pop
iret
in
fidivrl
loope
jo
fidivrs
shrb
test
in
push
and
ret
jb
push
test
int3
xor
xchg
lcall
or
cmp
jns
lods
inc
jg
jle
sbb
aad
loope
out
lea
sbb
stc
jecxz
pop
dec
call
fildl
push
mov
stos
ljmp
cmp
add
dec
enter
gs
sahf
add
xchg
add
pop
cli
aam
movsl
adc
add
inc
in
and
out
mov
shlb
loopne
jg
mov
movsb
aam
je
clc
fmull
leave
stc
jl
mov
cld
lahf
dec
jg
xchg
sbb
in
mov
ja
rcll
movsb
lret
pop
dec
and
and
sub
adc
xchg
adc
stos
fimull
in
rorb
out
dec
push
mov
js
add
dec
add
add
lret
push
cmp
arpl
xor
orb
add
xor
enter
mov
pop
out
sub
jns
dec
enter
add
add
mov
and
add
scas
inc
sub
adc
push
jge
mov
lods
pop
or
push
cmc
jbe
cld
inc
jnp
fdivs
push
xor
fiaddl
sbb
adc
add
sub
push
and
loop
jne
in
aaa
mov
sbb
jae
ffreep
repz
inc
pop
outsb
sbb
pop
lods
pop
rcrl
cmp
fs
add
rcrl
push
int3
lods
sub
cmp
adc
adc
ret
sti
iret
push
xchg
xorl
sbb
test
ret
ret
push
inc
mov
inc
mov
mov
mov
fwait
add
lret
and
xchg
sub
push
push
push
pop
pushf
out
scas
loopne
call
jg
aam
daa
jge
and
stos
mov
and
push
mov
ret
sbb
add
mov
pop
sub
bound
sub
push
es
xor
ret
push
push
adc
and
mov
mov
sub
or
addl
rorb
ret
adc
jp
mov
add
mov
pop
and
mov
add
insb
xlat
mov
mov
jbe
arpl
jb
std
add
subl
ret
int3
sub
test
add
addr16
loopne
cmp
adc
sbb
fisubrs
mov
add
adc
and
add
mov
fwait
cmp
fimuls
add
ja
cmp
lahf
xor
lret
lods
dec
out
popa
push
lret
pop
fwait
scas
inc
incl
add
lcall
jb
cmp
lods
add
mov
and
add
gs
aam
fdivrp
sub
cmp
repz
cwtl
adc
dec
popf
dec
lds
dec
outsb
adc
bound
push
add
push
cmp
insb
inc
cmp
test
repz
mov
loopne
push
popl
lods
mov
sti
lea
divb
icebp
in
insb
push
dec
in
and
shrl
sahf
cltd
dec
mov
outsb
test
add
fs
popa
je
in
xchg
fsub
sbb
jns
fwait
sahf
mov
movsl
mov
and
xor
sbb
ret
cs
or
dec
add
js
cli
nop
mov
addb
mov
rclb
outsb
add
mov
insb
loope
mov
xchg
das
and
ljmp
sbb
jmp
pusha
clc
pop
and
outsb
cmp
adc
jl
mov
and
or
xlat
in
into
lret
xchg
aam
cmpsl
test
lods
cli
mov
xor
ret
dec
out
test
dec
arpl
jecxz
mov
pop
and
fcompl
andb
ret
add
out
or
stc
cmp
xorb
or
in
mov
shr
and
aam
out
mov
sti
push
adc
mov
xor
push
lea
jmp
es
inc
push
lahf
inc
test
inc
mov
cmp
push
fnstcw
inc
mov
iret
xor
pop
jl
sahf
sbb
int3
sbb
addr16
xchg
imul
add
popa
ror
sbbb
adc
imul
and
bound
pop
jmp
xor
mov
cmp
fs
or
adc
loope
pusha
add
test
in
mov
subl
inc
or
xchg
mov
or
mov
shll
adc
or
bound
imul
sub
cwtl
pop
adc
or
rcl
cmpsl
and
inc
popf
sbb
aas
push
xor
mov
pushf
jno
xchg
ljmp
mov
cvtdq2ps
xchg
out
rcll
dec
adc
push
dec
gs
cmp
cld
and
addl
adc
shr
mov
lds
addl
adc
adcb
xchg
clc
push
sbb
loope
cmovl
push
add
or
fidivrl
inc
inc
pop
add
dec
nop
fidivrl
xor
dec
or
inc
add
and
subl
dec
rcrl
jmp
sbb
fcomi
sub
inc
adc
stos
es
pop
test
inc
outsl
jmp
jge
mov
and
nop
pop
fmuls
imul
push
dec
into
xchg
pusha
ljmp
cltd
mov
inc
cmp
push
mov
sti
cmp
sahf
jle
loop
daa
or
jg
xlat
push
cmp
adc
adc
test
sbb
out
andb
push
bound
fld
inc
sbb
into
sahf
gs
or
sbb
cmp
es
ret
push
push
loop
loop
scas
xchg
stos
in
push
mov
lds
sub
xor
test
mov
test
jae
repnz
push
push
cmp
out
push
outsb
fwait
and
ret
lods
loope
repz
mov
mov
inc
daa
aam
cs
and
pop
stos
jp
sbb
xchg
leave
mov
sbb
xchg
and
adc
sbb
sbb
or
dec
lea
inc
shl
mov
mov
mov
dec
and
and
mov
inc
adc
adcb
mov
and
repz
add
fmull
or
push
shl
mov
or
movsb
dec
xchg
inc
jge
rolb
movsl
gs
lock
es
xchg
cmp
xor
fidivl
stos
bound
sbb
or
test
rorl
sbb
arpl
es
adc
fisttps
adcl
test
xor
popl
and
dec
mov
inc
sbb
lea
cmpsl
push
rorb
push
or
rcpps
test
es
or
or
cltd
push
dec
lock
cs
mov
xchg
pop
mov
pop
sbb
sbb
imul
cli
add
mov
adc
das
inc
test
shlb
loop
mov
pop
and
xchg
adc
les
mov
xchg
sub
adc
aad
test
mov
fwait
adc
les
dec
xchg
sbb
adc
jnp
imul
adc
mov
nop
int3
xor
daa
mov
adc
loopne
arpl
aas
xchg
test
les
add
roll
and
jae
fwait
int3
jge
add
scas
cwtl
dec
lret
cltd
mov
pop
out
mov
xor
adc
arpl
mov
in
xchg
mov
gs
orl
shrl
stos
sbb
adc
orl
and
mov
pop
ds
and
fs
inc
xchg
xchg
out
andl
rclb
dec
sbbl
cwtl
or
xchg
mov
fisttpl
xor
add
push
out
mov
mov
leave
mov
and
adc
popa
mov
add
push
mov
leave
stc
ss
test
mov
lock
es
bound
cmp
sbb
and
add
xchg
jae
into
pcmpgtw
mov
adc
and
push
sbb
mov
inc
inc
inc
rolb
hlt
adc
daa
mov
add
lea
into
scas
movsl
inc
adc
dec
or
xchg
sub
jnp
sbb
mov
popa
and
loop
imul
mov
pop
jg
push
popa
jle
cmp
mov
push
pop
addl
scas
inc
aad
leave
les
inc
cmpsb
out
bound
pop
mov
bswap
cwtd
adc
add
loop
loopne
add
mov
push
add
sbbl
mov
adc
or
cs
inc
xchg
adc
or
jg
dec
lock
imul
inc
xor
rolb
das
xchg
mov
andl
insb
push
adc
inc
arpl
mov
xchg
push
jecxz
lock
or
sahf
xchg
fimuls
push
das
cmp
movsl
leave
inc
gs
pop
addl
xchg
pop
inc
xor
mov
pop
jl
test
ret
ss
mov
bound
add
mov
push
add
mov
xor
jecxz
sub
push
or
sub
mov
pushf
xchg
fs
bound
mov
lds
arpl
inc
pop
pushw
and
xchg
xor
bound
cltd
jae
add
and
xlat
scas
ret
orl
mov
cmpsl
ret
xchg
xchg
add
add
xchg
jg
mov
out
cmpsb
inc
popf
sbb
jmp
sbb
imul
movsb
sub
int
mov
in
pusha
mov
daa
ret
hlt
dec
inc
adc
mov
icebp
add
packuswb
int3
inc
mov
jg
and
push
adc
pop
push
mov
mov
or
mov
add
dec
sbb
test
inc
andl
int3
xchg
leave
inc
inc
cmpsl
inc
jg
bound
xchg
pop
out
add
mov
cltd
and
adc
fs
andb
shrb
test
mov
and
test
test
popf
lea
or
mov
cmp
xor
and
arpl
add
test
lahf
shr
dec
pop
popa
in
insl
into
mov
and
pop
outsb
push
test
sbb
mov
mov
cmp
jbe
inc
ljmp
lcall
les
lds
addl
sbb
dec
mov
xchg
incl
cwtl
vandps
xchg
xchg
mov
or
or
fisttpl
test
xchg
leave
call
xor
push
sti
test
dec
mov
or
inc
or
subb
push
in
add
popa
inc
mov
inc
sbb
push
ret
test
add
or
pop
xor
add
mov
ret
and
xor
fadds
or
ret
mov
xchg
out
push
adc
xchg
cmpsl
pop
and
cwtl
addl
ret
jne
push
loopne
xchg
lret
pop
leave
std
jp
and
push
cmp
inc
addl
inc
fdivs
pop
or
ljmp
inc
push
cmp
negl
cmp
xchg
fwait
or
and
and
das
sbb
test
cmp
call
movsl
mov
and
pop
mov
and
loopne
sbb
xor
inc
arpl
adc
dec
add
push
andb
mov
in
xorb
fidivs
inc
cmpl
and
add
pslld
mov
arpl
das
jl
shll
add
test
push
mov
or
movsl
orl
mov
shr
cmovg
aas
cltd
xchg
xor
add
mov
popf
xchg
imul
fs
imul
mov
lods
outsb
push
and
xor
cmp
pop
mov
lcall
mov
sbb
sbb
in
add
and
mov
jae
lds
pop
loopne
test
xchg
add
ret
jp
or
sub
push
cmpsb
pop
push
in
mov
sahf
sub
inc
lock
loop
cmpsb
ds
xchg
in
mov
push
mov
or
shl
pushf
test
pusha
into
les
add
fcmove
arpl
cmp
test
shrl
lds
fsubs
push
in
les
and
cmp
shrb
xor
xor
mov
mov
mov
sub
inc
das
lea
pop
add
mov
ret
sbb
push
arpl
ret
xchg
jno
xor
mov
add
adc
mov
pop
mov
mulb
sbb
adc
test
imul
inc
test
aad
aas
xor
dec
cmp
rorb
in
insl
enter
mov
push
inc
or
cmp
or
mov
inc
mov
ret
xchg
insb
mov
or
into
xor
inc
test
ret
mov
mov
or
jae
shrl
inc
mov
or
adc
rorl
add
sbb
dec
jnp
xchg
xchg
scas
popa
push
and
imul
or
or
sbb
adcb
inc
cmp
sbb
push
loope
test
std
lahf
xchg
icebp
int3
popa
loop
mov
or
sbb
mov
shlb
push
mov
or
mov
fadds
roll
test
flds
test
mov
sub
inc
mov
ficoml
outsl
ds
push
mov
adc
add
add
adcl
push
mov
sahf
sbb
xchg
or
adc
in
pop
dec
push
and
mov
sub
rcr
pop
testl
mov
lahf
push
fwait
lahf
adc
push
sbb
lea
lds
and
inc
add
shll
add
paddusb
roll
sarl
les
inc
add
lods
or
in
fldl
jnp
cltd
dec
adc
es
sahf
mov
enter
sbb
lret
into
inc
mov
outsb
adc
daa
and
test
roll
inc
push
xchg
addr16
orl
adc
inc
or
iretw
adc
test
mov
xchg
xchg
int
movb
and
shll
repz
sbb
lds
pop
scas
ljmp
wrmsr
test
imul
in
mov
out
and
testl
leave
test
test
add
or
mov
das
inc
incl
stos
imul
ljmp
push
xchg
mov
pop
pop
dec
mov
jl
popf
jno
jno
fdiv
cmp
in
lea
imul
lea
fstl
mov
and
or
mov
cmp
cmp
sub
and
int3
inc
sub
hlt
and
dec
add
nop
jae
mov
repz
xchg
jl
cltd
pop
sbb
mov
inc
icebp
stc
push
fs
loope
xor
in
arpl
dec
xchg
lcall
push
int
mov
negb
lea
sub
push
mov
test
or
inc
jle
xchg
lds
es
xchg
iret
mov
and
cmp
xchg
mov
pop
push
or
or
push
nop
lds
adc
mov
inc
push
or
jno
mov
xchg
dec
adc
fbstp
daa
sbb
lcall
mov
mov
imulb
inc
call
out
les
cmp
xchg
sub
pop
es
loopne
pop
and
xchg
call
nop
dec
les
xor
inc
cwtl
mov
inc
xchg
sbb
push
inc
jecxz
sbb
cmpsb
xor
add
inc
fwait
adc
les
push
sbb
out
mov
add
loopne
icebp
dec
cmp
mov
cwtl
adc
and
fs
loopne
aam
int
je
nop
jp
xorl
and
repz
lahf
das
inc
pop
rorb
jge
mov
xorb
in
shl
rolb
push
mov
mov
je
movl
mov
cmp
rolb
lret
jae
sbb
or
or
lahf
adc
or
pop
arpl
jae
mov
and
std
dec
cmp
xchg
cmpsl
xchg
clc
add
mov
jg
ret
les
jg
sbb
xchg
mov
mov
cli
imul
hlt
adc
and
insl
cmp
out
out
push
ret
scas
sbb
lods
es
stos
les
xchg
das
xor
stos
imul
jne
push
push
mov
adc
lahf
lea
std
pop
dec
pushf
mov
ret
ret
pop
mov
test
sbb
dec
repz
int
jle
lea
sbb
xchg
pop
outsb
push
icebp
adc
mov
lods
ficoml
les
or
inc
iret
or
bound
cmp
and
jl
ret
inc
mov
xchg
ret
jae
test
sbb
and
sub
inc
fsubl
inc
inc
fs
xlat
and
push
data16
aam
popa
and
ffreep
leave
mov
sub
add
mov
add
jl
add
lea
mov
inc
xchg
xchg
adc
xchg
pop
add
sub
sbbb
mov
adc
std
or
and
orb
or
adc
add
in
xchg
jo
inc
xchg
roll
outsb
xchg
mov
inc
repz
test
or
test
and
lcall
sbb
cmp
js
or
mov
iret
and
and
push
push
xchg
and
das
xor
push
push
inc
xor
lea
sub
repz
mov
movsw
mov
fistpll
and
loop
jnp
mov
in
arpl
sub
rorl
jo
sub
xchg
cmc
pop
lods
addr16
lods
pop
test
push
mov
adc
std
mov
imul
jne
ret
roll
bound
stos
data16
and
inc
dec
mov
inc
or
loopne
or
jmp
push
daa
xor
jb
add
ja
dec
rorl
adc
pop
push
popf
outsb
int
push
aas
pop
adc
out
inc
cmpsl
mov
add
add
hlt
loopne
adc
and
xorb
jbe
rorl
jecxz
popf
push
mov
mov
sub
pop
lea
test
loop
add
inc
roll
stos
dec
cmpsl
mov
mov
pop
dec
divl
mov
inc
out
or
rolb
test
and
inc
movsl
push
adcl
sub
xor
orl
push
xor
dec
fs
inc
sub
addl
loop
jmp
cmc
mov
xchg
mov
in
inc
mov
sbb
sub
push
mov
push
ds
sar
aam
pop
push
mov
xchg
adcl
ficoml
ljmp
addl
mov
lret
add
add
adc
cmp
and
push
mov
sbb
sub
fs
xchg
add
imul
inc
push
lea
push
test
les
sub
cltd
cmpsb
test
cmpsb
push
les
adc
push
mov
mov
popa
mov
adc
cltd
int
and
sub
test
fs
xor
mov
nop
cwtl
xchg
jle
mov
add
out
les
lret
push
lcall
fs
mov
bound
orb
lea
and
push
imul
paddw
mov
mov
pop
xchg
mov
cmp
mov
lea
add
icebp
pop
movsl
or
mov
cmpsl
add
inc
fs
jnp
addr16
or
nop
mov
shll
pop
dec
pop
jo
insl
xchg
loopne
add
dec
mov
or
dec
or
add
jne
movl
cmc
mov
sbb
sbb
rorb
pop
push
orb
xchg
pop
in
and
aaa
dec
adc
or
cmp
arpl
adc
push
xor
pop
les
mov
jo
sub
jno
lret
rolb
cmp
jae
cmc
xchg
mov
lea
mov
test
jb
test
subl
mov
cmp
dec
push
add
xchg
shlb
cmp
add
mov
pop
je
movsl
add
or
mov
lea
enter
sti
pop
imul
mov
push
out
mov
mov
or
push
adc
and
jge
ret
mov
std
sbb
lock
loopne
in
loope
xchg
movsl
mov
jl
cmp
icebp
movsb
dec
inc
addb
pop
rol
mov
stos
das
out
movsl
daa
jno
jecxz
lea
inc
jo
cmpsb
cmpsb
insl
scas
dec
xchg
fcomps
fstl
sbb
jmp
repnz
and
jmp
orl
xor
push
sbb
lods
xchg
leave
nop
shl
dec
push
into
leave
xchg
data16
add
loop
adc
xchg
gs
aaa
cltd
adc
xorl
pop
inc
sbbl
push
lods
lea
cwtl
lahf
icebp
pop
sbb
mov
fs
sbb
lock
xchg
and
lcall
mov
adc
lret
arpl
sarb
orl
in
xor
scas
xor
inc
testb
mov
xor
lahf
lcall
cwtl
xchg
ljmp
cmc
push
shll
bswap
push
add
dec
stos
rcll
test
pop
std
xchg
dec
ljmp
inc
mov
cld
add
sbb
jo
pushf
jp
xchg
mov
sub
or
xor
add
xchg
xorb
outsl
fisttps
and
pop
mov
cmp
sub
repz
sub
mov
adc
inc
mov
dec
cmp
pop
push
and
jg
ret
xchg
push
lea
adc
adc
int3
sub
adc
outsl
xor
pop
pop
out
fs
test
les
sbb
adc
dec
addr16
mov
mov
fcompl
rcrb
mov
popf
jb
es
repnz
fidivs
push
sub
lods
sub
adc
lahf
subb
stos
or
fs
in
in
and
cmpsl
mov
data16
test
pop
xor
test
xchg
sub
imul
scas
inc
push
add
iret
pop
mov
sub
stos
mov
or
push
or
cmp
push
and
repz
xor
int
xchg
test
shll
jp
or
ret
mov
movsl
xchg
addb
mov
fcom
pop
cmpsb
shl
aas
push
inc
sahf
push
out
sub
dec
daa
test
adc
mov
lea
cltd
cmp
mov
arpl
mov
pop
adc
nop
dec
hlt
jne
adc
popf
push
lock
les
clc
or
sub
cmp
test
jp
and
into
fbstp
mov
dec
mov
push
xchg
cmpl
push
iret
xor
jns
jno
and
xlat
outsl
pop
inc
mov
mov
sarl
cmpb
jae
dec
mov
cmp
dec
adc
inc
bound
mov
inc
popf
mov
in
mov
dec
or
push
testl
fisubl
ret
arpl
or
xor
ja
mov
adc
push
add
es
les
mov
xor
mov
out
and
ss
insl
lahf
pop
push
ret
adc
sbb
inc
adc
mov
in
rorb
adc
pop
sbb
push
inc
scas
bound
push
xor
fstpt
outsb
dec
pop
mov
cmp
into
out
movsl
dec
sahf
sahf
push
xor
cmp
cmp
movl
fisttps
lods
sbb
je
ret
adc
pop
dec
aaa
sbb
mov
andl
pop
sub
out
sub
mov
mov
ffreep
cmp
imul
test
add
sub
pop
out
cli
cs
ja
jecxz
mov
test
leave
cli
ret
dec
incl
or
xchg
mov
or
jne
push
jne
jno
test
leave
cmpsb
adc
dec
mov
xchg
bound
sbb
sbb
les
inc
mov
ret
adcl
push
loopne
ss
and
lods
insb
subb
push
pslld
push
lea
stos
sahf
xor
sbb
inc
lea
aad
inc
fs
aad
adc
jo
and
or
data16
es
or
mov
mov
pop
cmp
or
cltd
rolb
add
inc
cltd
xor
andb
roll
int
lods
mov
int3
inc
add
roll
and
out
jle
ss
push
adc
movsl
sahf
out
cmp
rol
and
adc
cwtl
adc
adc
add
pop
jg
and
sbb
dec
subb
lret
pop
or
imul
inc
and
outsb
xchg
sti
lods
int
mov
dec
sbb
nop
jb
mov
cltd
scas
jbe
jmp
mov
xor
psrlw
xor
xchg
test
inc
ret
push
cwtl
mov
xorl
int
cltd
dec
cmovae
pop
or
fidivs
icebp
aad
mov
into
or
mov
in
xor
lods
lahf
lods
inc
or
and
sub
call
jge
mov
push
xchg
add
sahf
in
sahf
sub
xor
sbb
ficompl
pop
push
add
dec
in
and
scas
sub
xchg
inc
mov
pop
jnp
repz
pop
xchg
jle
aaa
pop
push
mov
int3
outsl
push
push
daa
dec
std
es
scas
in
aam
pop
lahf
loop
sbb
je
inc
jge
gs
and
add
jno
or
out
inc
or
cmp
rclb
in
and
lret
jl
stos
cld
push
mov
add
push
lds
xor
adc
out
movsb
test
add
rolb
and
rorb
inc
les
push
push
mulb
cltd
push
dec
arpl
popf
xchg
rcrb
sbb
mov
jg
lea
and
arpl
or
popf
dec
adc
mov
xchg
inc
sub
mov
cltd
fcmove
ljmp
lods
mov
test
sub
call
addl
xor
loop
call
jecxz
mov
in
sub
mov
or
xchg
dec
push
cmpsb
scas
cmp
sub
pop
movl
and
xchg
fpatan
enter
ss
push
test
test
or
rcrb
pop
sub
cmpsb
rol
mov
das
jmp
and
dec
sub
mov
aad
push
xchg
adc
mov
mov
out
xchg
test
push
xchg
outsb
sbb
lods
inc
pop
int3
lods
lahf
sbb
test
inc
pop
pop
adc
inc
popf
popa
movsl
dec
outsl
call
xor
mov
cmp
outsl
push
or
push
inc
mov
rcll
mov
xchg
inc
add
inc
or
cltd
rorl
xor
sub
imul
subb
lds
sbb
fwait
test
cs
cld
xchg
adc
test
sbb
aaa
ss
push
sub
mov
xor
push
mov
mov
push
or
push
out
push
lret
add
shrl
cmpsb
xchg
mov
call
scas
mov
mov
adc
repz
xor
shr
aad
mov
movsl
bound
dec
daa
xor
enter
mov
xchg
adc
call
and
mov
out
or
xor
es
or
xchg
in
cmc
jmp
lret
or
jmp
daa
test
in
xchg
rclb
sub
or
shlb
or
in
enter
inc
lods
andb
sbb
in
xchg
jnp
and
popl
fwait
loope
fs
mov
sub
jne
or
mov
pop
push
add
mov
mov
jl
inc
cmp
aad
call
sbb
test
testb
addl
negl
popl
dec
jle
js
movsbl
push
sub
fldln2
test
addl
xchg
ljmpw
enter
cld
ret
pop
add
mov
mov
iret
sub
or
mov
add
push
test
pop
xchg
mov
mov
mov
sbbb
lcall
popf
push
mov
in
mov
pop
lret
ss
mov
cs
filds
addr16
adc
shll
cmp
add
mov
test
or
fiadds
adc
pop
adc
mov
fs
xor
xchg
lret
fwait
xchg
sahf
daa
pushf
sbb
lcall
lock
hlt
xor
popf
stc
lea
aad
add
push
pop
pop
fwait
mov
pop
movsl
in
sbb
stos
inc
inc
mov
iret
sahf
hlt
movsl
or
sbb
scas
mov
mov
dec
cmp
gs
popf
cltd
mov
movsl
imul
or
adc
movsl
or
xchg
xchg
pop
cwtl
push
xchg
sbb
lea
inc
les
cmovle
push
pop
nop
aas
call
or
mov
fnsave
imul
pop
inc
adc
dec
pop
stos
int3
inc
add
jbe
or
xchg
and
dec
xchg
fildl
mov
in
int3
inc
mov
sub
cmp
push
mov
pop
adc
imul
and
cli
adc
popl
mov
std
adc
stc
movb
loopne
or
in
subl
add
push
push
mov
xchg
add
rorb
lret
sub
ret
jmp
int3
inc
and
adc
dec
es
cmc
add
inc
in
push
loopne
mov
ljmp
dec
or
push
mov
adc
adc
popa
xchg
lods
cmpl
cltd
lahf
mov
push
jae
push
repz
cmp
in
add
inc
and
sub
in
dec
or
js
mov
popf
jecxz
push
add
lret
repz
add
xor
test
jbe
addr16
das
xor
sub
into
push
data16
stos
or
sub
ss
and
mov
dec
xchg
push
hlt
cltd
or
sub
xchg
mov
adc
or
shl
popf
mov
adc
xchg
push
test
xchg
popa
sub
sarb
and
and
or
int3
and
lds
xor
inc
or
dec
mov
push
stos
or
dec
or
pop
test
inc
or
xor
int3
jp
lock
push
dec
mov
add
ljmp
arpl
into
or
sbb
xchg
cmp
mov
mov
dec
movsl
xchg
push
fs
out
mov
inc
inc
int3
aaa
out
inc
mov
add
ror
popa
adc
xorl
mov
mov
inc
ja
roll
mov
out
sbb
adc
pusha
into
xchg
and
hlt
mov
push
cwtl
xor
and
inc
test
rorl
dec
push
icebp
adc
pop
shll
xchg
les
add
add
and
sbb
idivb
xchg
xlat
subl
xchg
aad
lods
mov
lds
xchg
loop
cmc
decb
mov
xor
fs
dec
mov
stos
xlat
adc
push
out
hlt
or
push
and
dec
shll
loopne
add
or
bound
cmp
mov
jbe
orl
cltd
mov
jne
cmpsb
xchg
mov
and
add
les
inc
add
push
sahf
add
sub
adc
jle
pushf
test
pop
ret
push
pop
jge
inc
mov
mov
in
icebp
ret
push
frstor
mov
imul
xchg
shrl
jo
out
mov
and
sub
jnp
pushfw
ret
or
mov
and
test
xchg
jge
fwait
xorl
les
fwait
out
setbe
xlat
in
loopne
addl
push
leave
sbbl
inc
adc
mov
lcall
add
xchg
xor
int
int3
inc
add
sbb
testl
cli
test
xchg
stc
dec
and
dec
cmpsb
mov
test
xor
mov
mov
in
movsl
movsl
sbb
movsl
mov
inc
pop
cmp
rorl
dec
clc
or
test
int3
sub
clc
lods
test
inc
mov
cltd
rcrl
ja
push
fs
pop
mov
xor
mov
aaa
and
or
or
mov
pop
jecxz
iret
add
push
movsl
pushf
leave
push
loopne
insl
dec
loopne
lret
add
adc
ret
test
out
loop
xor
shl
adc
add
or
mov
or
fistpll
fwait
paddsb
mov
and
into
cmp
sbb
xchg
push
subl
int3
popf
sbb
add
cpuid
lret
push
or
and
movsb
mov
mov
mov
lret
test
sbb
pop
mov
or
cmp
shr
mov
cltd
pop
cmc
mov
iret
sbb
push
into
lcall
jns
or
pushf
jne
ret
and
inc
mov
je
jnp
pushf
inc
mov
xor
cs
add
cmp
lret
or
fdivp
or
test
ljmp
popf
addb
imul
icebp
popa
dec
mov
adc
xchg
and
mov
or
out
fcomp
std
testb
notl
mov
sub
out
mov
js
xchg
in
jecxz
push
xchg
repz
mov
mov
mov
outsb
aas
lret
pop
int
push
or
push
sar
sti
adc
and
mov
bound
mov
push
loop
add
and
jno
dec
test
sub
inc
jle
xchg
mov
inc
dec
add
lds
ret
test
push
out
sub
out
enter
test
push
pop
or
into
add
icebp
fstpt
or
push
jp
jl
pop
xchg
add
stc
mov
or
cmpb
sbb
jp
sbb
sub
sub
out
pop
cld
ljmp
popa
xchg
inc
jno
imul
xor
imul
dec
stc
mov
pop
insb
fwait
pop
xchg
mov
test
jmp
sub
scas
sbbl
sub
scas
sbbl
sub
scas
sbbl
sub
scas
sbbl
sub
scas
sbbl
sub
scas
sbbl
sub
cmpb
loop
and
or
xchg
cmpsb
adcl
push
imul
inc
das
mov
jnp
mov
clc
lods
cli
hlt
dec
and
pop
movsl
out
in
fcoms
rolb
xor
leave
mul
rolb
and
xchg
adc
fs
push
inc
inc
je
cmpsb
add
loope
iret
bswap
ret
push
sub
pop
and
addr16
in
iret
xchg
dec
lret
sbb
shlb
mov
add
into
and
cs
xor
dec
je
ret
or
adc
inc
ja
pop
inc
add
ja
and
popa
test
sbb
jge
cli
les
out
adc
sub
mov
mov
xchg
repz
or
adc
test
mov
insb
movsb
movsb
mov
or
mov
mov
pushf
sub
ret
cmp
inc
or
dec
in
add
xchg
or
dec
or
jns
pop
clc
add
repz
sbb
test
lret
dec
add
cltd
sbb
cs
cmpsl
ret
ret
lods
bound
movsb
inc
push
notl
sub
and
ja
mov
in
stc
xor
popa
cmpsb
xor
inc
mov
inc
adc
pushf
roll
add
out
adc
or
fs
push
iret
and
ljmp
jp
inc
add
test
test
ss
scas
pop
inc
pop
loop
add
imul
or
cmp
push
and
cmp
add
mov
or
xor
adc
leave
out
pop
dec
in
rorl
push
pop
jmp
pop
cmp
popa
add
or
push
jge
xchg
mov
mov
add
sub
sub
std
shrl
xchg
scas
insb
rorl
mov
lea
cmp
mov
mov
mov
in
sbb
hlt
lahf
scas
sbb
adc
pop
stos
cmp
dec
push
pop
sbb
jmp
inc
dec
mov
or
inc
sbb
cmp
pop
movsl
adc
add
push
xor
loopne
inc
xor
notrack
mov
hlt
imul
mov
add
imul
ficompl
les
test
sbb
addl
test
das
add
dec
adc
mov
add
xlat
lahf
arpl
rorb
push
xor
push
mov
xor
enter
adc
das
or
sbb
mov
inc
test
sub
sbb
lds
int3
in
push
xchg
mov
add
das
or
ja
cli
mov
mov
leave
imul
dec
push
dec
adc
scas
andb
daa
jecxz
inc
or
push
popf
ret
fs
icebp
dec
mov
fisttpl
in
imul
orb
and
sub
add
ret
enter
sub
jg
and
aas
ljmp
test
push
mov
scas
shr
dec
jge
dec
out
stos
imul
or
pop
and
jg
std
inc
mov
adc
cmpsl
inc
jno
add
add
adc
jg
mov
into
add
sbb
aad
es
jb
into
wrmsr
imull
pop
adc
mov
clc
cld
jne
mov
sbb
mov
push
das
mov
inc
sbb
outsl
pushf
push
or
mov
aam
mov
add
cmp
das
xchg
dec
andl
shrb
xchg
int
push
and
or
lahf
iret
cwtl
xchg
mov
loop
das
mov
jle
xchg
mov
lret
adc
jle
or
lods
add
push
xorl
popa
inc
inc
xor
mov
adc
mov
and
test
xchg
lcall
dec
pushf
push
in
adc
lahf
bound
mov
enter
stc
jle
cmp
cltd
xlat
cmp
bound
xor
and
xor
inc
sub
xor
out
adc
popf
jnp
cmp
pop
add
mov
int3
stos
cmc
sub
cmpsl
inc
jl
pop
sahf
jl
mov
mov
or
pop
cmpsb
push
enter
fstl
inc
lret
sub
pop
ret
mov
cmp
lahf
adc
lahf
ret
ljmp
or
jo
ret
lea
and
pop
in
daa
add
xchg
xchg
and
push
or
popf
repnz
ret
cmp
call
cwtl
push
test
test
js
adc
out
inc
shrl
iret
scas
push
or
xor
fisubs
stos
pop
inc
fistps
or
xor
das
mov
sbb
filds
or
rorl
lahf
rcr
rcrb
mov
xchg
dec
inc
aad
in
sub
leave
pusha
lock
xchg
pmulhw
cltd
hlt
cmp
pushf
adc
leave
into
test
cld
test
ljmp
push
addb
test
lret
sti
fbstp
loopne
enter
push
cltd
mov
ret
or
test
pop
mov
inc
roll
outsb
in
lea
xchg
jnp
xor
mov
das
add
stc
push
in
xor
xor
sbb
sub
and
stos
int
xchg
pop
sahf
adc
movsb
jmp
adc
cmpsb
push
jl
cltd
or
fcoml
fwait
xchg
gs
jne
ret
mov
push
js
mov
sbb
sub
mov
mov
les
xchg
arpl
or
pop
movsb
add
icebp
into
sar
int
mov
out
add
dec
and
inc
push
inc
scas
jb
arpl
scas
movsl
loop
fwait
cs
sbbb
dec
rcrl
mov
xor
sub
and
pop
xchg
mov
int
ret
shrl
movsl
adc
adc
mov
sub
out
sbb
lods
or
popf
and
mov
and
fiaddl
pushf
divl
fwait
adc
mov
outsl
xorl
test
and
inc
or
rorl
xor
clc
test
hlt
push
push
cmpsb
cmpb
into
sbb
fadds
xchg
sub
int3
inc
cltd
es
loopne
roll
xor
rcr
pop
and
cltd
les
insl
mov
xchg
inc
inc
mov
test
arpl
push
pop
adc
xchg
xchg
sahf
jno
cmc
mov
call
and
lea
cmpsl
add
jecxz
in
cmp
insb
jecxz
adc
orl
ret
fidivrl
push
or
or
xchg
or
mov
and
jp
pop
mov
dec
mov
xchg
push
push
jnp
pushf
push
jg
mov
xor
sahf
ja
push
adc
lods
or
ds
aam
or
addr16
test
add
call
lock
mov
cmovne
mov
rorl
lock
sbb
xor
pushf
and
pop
test
sub
add
daa
sub
or
and
lret
not
js
sub
mov
ret
and
sbb
dec
cmp
dec
dec
pop
lds
pop
scas
ljmp
xor
sbb
sub
push
and
dec
stos
loopne
push
mov
mov
or
sub
or
rorb
loope
mov
sbb
ret
cmp
clc
xchg
or
mov
lods
cltd
mov
or
popf
push
inc
movb
out
andb
in
mov
xchg
sbb
into
lods
arpl
jle
lds
cltd
cs
scas
loop
add
addr16
inc
test
rorl
push
mov
ljmp
outsb
push
ret
cwtl
sbb
mov
imull
into
test
sbb
jbe
outsl
clc
pop
xchg
dec
xchg
inc
inc
inc
mov
inc
ljmp
negl
inc
in
mov
push
sbb
inc
inc
int3
cmpsb
mov
aaa
lahf
xchg
cmp
pop
mov
xlat
lcall
das
test
dec
add
mov
mov
enter
pop
add
imul
inc
inc
imul
movswl
and
fsubl
daa
and
in
xor
pusha
pop
ja
cmp
inc
sub
mov
stos
sbb
xlat
pop
cmp
or
inc
mov
addl
ret
add
dec
pop
xchg
les
and
push
fdivrl
in
movsb
ja
movsl
rorb
bound
pop
and
out
cmpsb
mov
cld
jecxz
lea
sbb
bound
cs
sub
xchg
xor
push
or
lea
mov
push
sbb
movsb
lahf
add
mov
mov
cltd
in
roll
or
mov
xchg
xchg
or
mov
sbb
subl
push
mov
xchg
lds
and
mov
mov
sub
mov
inc
adc
mov
dec
mov
aam
xor
add
add
and
loopne
mov
cmpsb
jnp
mov
add
sarb
and
orl
sub
dec
pop
sarb
ljmp
cmpsl
or
pop
popf
clc
int
shll
ficoml
ss
xchg
adc
xor
out
lret
ljmp
xchg
cmp
add
loopne
popl
int3
dec
insb
jecxz
mov
arpl
jnp
inc
insb
jae
mov
cmp
add
adc
push
stos
push
jb
xor
loopne
aas
les
cmp
push
xchg
push
ss
out
outsl
aas
adc
inc
clc
lods
adc
ds
and
lods
jbe
mov
andl
mov
dec
or
test
cmp
add
sub
inc
push
out
mov
adc
imul
or
inc
mov
and
aam
xchg
ljmp
test
and
push
insl
iret
dec
xchg
fs
int3
push
pop
cmp
cltd
mov
adc
enter
scas
xchg
push
inc
sub
and
ficompl
pop
cltd
ret
test
out
in
xor
jmp
pop
test
into
inc
pop
mov
inc
mov
sbb
pop
sahf
into
popf
add
imul
ret
mov
and
cmp
pusha
lahf
sbb
or
mov
or
adc
es
mov
arpl
adc
lahf
xchg
cmp
and
and
lret
xchg
pusha
mov
add
lret
push
push
jecxz
dec
addl
dec
jp
psrlw
cltd
in
jmp
jo
dec
or
mov
dec
inc
push
or
popa
add
dec
les
repz
xchg
fcomps
lods
jae
lods
mov
jae
mov
xchg
fwait
mov
sbb
mov
xchg
fists
rep
add
out
imul
in
inc
mov
xchg
mov
sub
xchg
cld
mov
inc
xchg
roll
xor
sbb
enter
sub
dec
and
cs
call
dec
inc
out
rcr
rcrb
add
popa
into
dec
mov
mov
lahf
leave
add
loope
lret
inc
popa
test
push
and
xor
sub
fcoms
and
xchg
in
ret
rol
or
push
xchg
es
in
mov
scas
dec
xlat
enter
arpl
inc
and
add
or
xchg
fdivr
fwait
dec
or
and
or
test
ljmp
fdivrp
mov
popa
dec
inc
push
std
inc
lea
xor
cli
jmp
xor
cmpsb
test
adc
lcall
test
dec
cwtl
add
adc
int
mov
push
or
cmp
dec
cmp
cmpsb
mov
and
or
mov
xchg
jne
dec
push
loop
xchg
xor
push
fwait
jae
mov
hlt
aad
in
mov
xchg
pop
cmp
test
mov
mov
jne
jne
addr16
xor
mov
xor
mov
dec
or
lret
mov
iret
pop
mov
push
popf
mov
mov
sbb
and
pop
and
mov
or
cmpsl
decb
les
movsl
dec
rorb
insb
arpl
lcall
xchg
lcall
fwait
mov
stos
add
inc
and
das
push
stc
add
lret
mov
add
dec
xor
popf
ret
dec
fs
ljmp
pop
out
jmp
push
xchg
inc
push
in
ja
into
inc
or
dec
or
pop
lcall
iret
je
imul
inc
rolb
lea
neg
mov
mov
adc
pop
push
fildl
dec
dec
jo
rorl
bound
bound
idivl
ljmp
lea
aam
in
ret
mov
add
repnz
test
daa
cmp
jne
inc
mov
add
or
add
in
mov
fisttpll
inc
sub
adc
js
subb
leave
repz
xchg
gs
add
lcall
xor
xor
test
mov
xchg
test
add
sub
hlt
cmpsb
movsl
sub
and
lret
dec
mov
out
rclb
xor
fwait
xor
enter
inc
jo
int
push
pop
dec
scas
jecxz
lds
repz
sub
loopne
or
push
jns
rcrb
add
push
mov
clc
xlat
test
jle
lods
in
lret
push
push
xor
jmp
xor
sub
fists
jg
xchg
enter
mov
fimull
add
xor
add
or
enter
push
sub
imul
jo
dec
and
dec
and
hlt
inc
insl
enter
push
push
xchg
inc
xchg
adc
popf
add
pop
scas
mov
iret
mov
mov
fidivs
insb
cld
push
int3
jge
sti
mov
movd
adc
jbe
outsb
mov
xchg
ja
pop
bound
mull
negl
cmp
ja
dec
fnstenv
sbb
pop
inc
add
xchg
popa
lds
addl
dec
adcl
mov
add
mov
or
xchg
call
in
incb
adc
xor
mov
out
stos
ret
jle
adc
iret
lods
jb
push
sbb
cwtl
pop
in
clc
inc
xchg
imul
lea
cmp
iret
repz
cmc
pop
cwtl
fistps
fadds
mov
fwait
mov
lret
jo
repz
stos
sub
and
inc
orl
popa
lods
xor
loop
add
add
add
loope
xchg
add
or
cmp
imul
and
fisubs
bound
bound
push
lret
icebp
cltd
add
jmp
js
add
ds
push
push
orl
mov
push
lret
divl
les
xchg
in
rcrl
inc
and
dec
icebp
pop
xor
dec
jnp
and
or
in
xor
mov
pop
xchg
loopne
cltd
xor
jecxz
dec
push
sub
into
ret
lods
xchg
adc
add
mov
mov
push
mov
inc
stos
insb
mov
fcoms
int
inc
loopne
mov
and
xchg
or
push
test
paddsb
dec
add
cmc
add
jbe
dec
test
xchg
and
dec
in
shlb
xlat
test
mov
or
and
loopne
cltd
shll
add
sub
movsl
addb
jb
sarb
mov
jmp
out
xchg
mov
daa
push
xchg
cmpsb
cmpsb
and
fstpt
xchg
sub
dec
dec
dec
hlt
dec
orl
clc
mov
push
testl
adc
xchg
sbb
das
adc
sub
pop
push
les
inc
inc
adcl
dec
add
dec
ljmp
push
adcl
inc
xchg
dec
scas
add
iret
mov
add
mov
xor
adc
xor
mov
testb
js
adc
dec
and
add
orb
and
jl
or
sub
in
testl
mov
and
out
adc
test
aaa
std
cli
xchg
cmc
fwait
nop
sub
pop
xchg
mov
pop
neg
test
enter
mov
mov
addl
and
mov
das
bound
mov
fnop
cwtl
jne
movsb
std
out
cmp
inc
in
cmpsl
movsl
mov
and
lahf
shll
mov
ret
arpl
push
and
and
mov
rcr
mov
mov
test
lahf
loopne
jecxz
add
and
mov
add
xor
clc
sub
outsb
fwait
xchg
mov
pop
cld
daa
mulb
jns
jns
xor
xor
push
or
ss
xchg
cmp
cmpsl
inc
inc
popa
in
jecxz
add
mov
shl
add
and
adc
cltd
jae
xchg
nop
or
add
cmpsb
andl
jns
jmp
or
add
stc
or
popa
out
fistps
inc
jecxz
add
push
and
dec
dec
push
mov
add
adc
push
inc
rorl
push
mov
cmpsb
lea
popa
gs
movl
daa
mov
and
pop
ret
mov
sbbl
mov
and
pop
repz
xor
push
add
inc
xor
inc
mov
out
add
mov
mov
in
inc
and
sbbl
addb
fucomip
outsb
jb
cmp
mov
loop
mov
popf
adc
dec
pop
mov
ror
lods
ljmp
push
dec
sub
lods
push
pop
mov
or
scas
test
int
insb
mov
inc
inc
and
pop
cld
or
push
ret
and
pop
cwtl
lods
add
xchg
out
dec
shr
pop
xor
inc
ret
inc
inc
hlt
push
or
sbb
shrl
sbb
mov
inc
xchg
or
cmpsl
xor
xorb
imul
mulb
add
movsl
lods
push
rorl
fcoml
dec
mov
out
popl
ret
xchg
cltd
testl
inc
fbld
mov
adc
or
adc
enter
in
sub
gs
jae
mov
adc
dec
test
mov
ret
inc
test
xchg
mov
test
add
mov
frstor
jmp
inc
or
data16
adcb
lret
adc
and
dec
cmp
lock
jae
mov
lea
adc
xor
push
decb
das
rcr
or
push
cmp
into
inc
aad
sub
cmp
xchg
push
imul
adc
dec
aad
insb
mov
ds
jbe
int
bnd
and
cltd
mov
add
mov
push
popa
call
lcall
addr16
xchg
sub
sar
inc
mov
cmp
sbb
call
dec
mov
mov
addr16
inc
loopne
imul
lock
adc
mov
outsb
adcb
cwtl
pop
inc
inc
lock
je
and
sbb
mov
mov
imul
ds
mov
and
lret
insb
cmp
or
repz
mov
or
or
jns
push
cwtl
leave
out
sub
mov
push
mov
clc
scas
jns
pop
das
repz
imull
movsl
cmp
jg
shr
inc
rcrl
call
popf
adc
stos
or
cli
cmpsb
add
cmpsb
sub
cmp
mov
lcall
cltd
adc
test
xchg
xchg
mov
xchg
jl
aad
add
mov
sub
xchg
mov
push
sahf
dec
push
xchg
mov
mov
clc
bound
sbb
mov
xchg
pop
push
cld
adc
popa
mov
fcoms
pop
rcrl
test
push
lahf
sbb
xor
dec
loope
mov
mov
push
inc
mov
mov
mov
lods
js
mov
int3
bound
add
nop
and
mov
rolb
sbb
pop
pop
cmp
les
lret
mov
sub
es
mov
mov
mov
and
push
mov
dec
and
lock
pop
xchg
cld
push
push
xchg
dec
adc
pop
adc
std
lea
adc
push
pop
push
aaa
mov
ret
aas
arpl
popf
js
pop
adc
gs
cwtl
mov
aas
out
xlat
test
xor
call
in
or
mov
push
loopne
lds
pop
pop
mov
leave
shrd
or
orb
or
push
xchg
test
mov
xchg
imul
std
inc
outsb
sub
iret
aas
fisubrl
cmpsl
dec
xchg
cmc
mov
xor
or
sbb
jle
scas
fldl
and
test
xchg
adc
dec
lea
pop
mov
rolb
xor
pushf
jb
mov
test
jl
dec
scas
cwtl
pusha
push
cmpsb
test
jg
mov
and
pop
mov
and
inc
and
jb
push
pop
pop
mov
mov
sbb
or
imul
xchg
push
les
inc
mov
mov
or
adc
lods
pushf
cmp
mov
xchg
sbb
add
add
pop
movsl
or
ja
cltd
mov
add
enter
xor
into
inc
fmuls
movb
fisttps
stc
adc
push
ret
mov
incl
leave
sbb
repnz
push
leave
repnz
sahf
and
arpl
jecxz
pop
jmp
xor
movsl
pushf
sub
add
repnz
dec
test
repnz
sub
loope
pop
ret
or
xchg
xchg
push
push
mov
mov
xchg
out
add
fs
jne
cmp
rorl
or
pop
push
dec
push
bound
dec
xorl
mov
mov
mov
jnp
pushf
pop
mov
subl
add
test
mov
pop
dec
xor
mov
or
subl
sub
inc
les
data16
adc
or
and
inc
std
push
pop
arpl
idivl
inc
add
shr
sbb
bound
and
pop
scas
das
inc
mov
stos
or
imull
mov
bound
xor
lret
inc
inc
mov
mov
xchg
push
pop
mov
stos
cmp
cmp
lret
mov
push
aaa
hlt
xchg
iret
es
pop
ds
pop
lds
sub
andb
rclb
add
pandn
dec
add
mov
and
lret
dec
xor
inc
pop
ljmp
jo
inc
add
mov
sub
inc
lret
adc
imul
xchg
pop
in
push
insb
in
aaa
cmp
dec
ret
push
jl
jno
inc
mov
ljmp
arpl
adc
jnp
mov
mov
andl
icebp
loopne
or
ds
and
pop
push
out
lcall
dec
jne
adc
inc
mov
and
decb
push
inc
mov
mov
lea
enter
call
pop
cmpsl
jmp
cmp
stos
jae
add
jmp
mov
insb
insb
ret
std
out
add
mov
leave
imul
shlb
je
pop
and
in
sbb
inc
or
jp
and
inc
pop
ret
mov
arpl
mov
repnz
push
ret
test
lea
adc
leave
aad
xchg
adc
xchg
cmp
cmc
inc
and
xchg
leave
push
adc
in
pop
jns
aam
lret
icebp
scas
and
sbb
and
jo
movsl
bswap
xchg
jp
repz
and
push
cmp
xchg
or
add
cld
xchg
pop
hlt
nop
or
or
dec
jge
and
add
cltd
btl
add
test
cmpl
and
sbb
popf
push
dec
popl
popf
xchg
or
orb
sahf
or
popf
mov
add
scas
dec
into
scas
imul
pop
in
cmp
lea
jo
daa
out
mov
jns
mov
xchg
mov
adc
mov
gs
adc
cmp
xchg
test
lahf
xor
xchg
sahf
fisttpll
and
push
or
pushf
fiaddl
pop
and
and
and
loope,pt
add
sbb
rorb
or
pop
sub
icebp
mov
sbb
dec
cli
outsl
leave
into
lods
test
pop
sahf
or
add
dec
test
mov
dec
or
sbb
mov
push
sbb
push
xchg
inc
insl
stos
jb
xor
out
push
push
negl
orb
push
add
leave
xchg
pop
xor
sbb
leave
cmpsl
into
mov
push
adc
mov
mov
push
setns
std
sbbl
sbbl
lea
dec
adc
dec
aam
or
shll
movsb
cmc
pusha
ret
cmpsb
mov
mov
cmpsl
in
or
pop
sub
mov
xchg
dec
mov
adc
addl
and
ret
xchg
mov
mov
xchg
repz
sti
inc
adc
push
mov
mov
cmp
pop
sub
lcall
adc
xor
jge
dec
out
jl
xor
and
and
ljmp
pop
or
lea
outsl
add
lea
mov
ficomps
inc
orl
jmp
jecxz
pop
cs
jecxz
pop
scas
stc
idivl
jl
cmpsl
xchg
test
fisubs
inc
or
cs
jmp
cmpsl
dec
imul
setno
sub
outsl
xor
iret
dec
cmp
aaa
add
pushf
or
mov
adc
iret
mov
outsb
or
ret
pop
push
fldcw
adc
inc
push
push
sbb
add
cltd
andl
arpl
or
pop
in
arpl
jp
ljmp
add
mov
insl
xchg
fmuls
jl
les
inc
and
and
imul
lret
and
jmp
and
xchg
mov
out
push
es
push
inc
cs
and
inc
and
das
out
addr16
mov
xchg
adc
orl
pop
jp
push
pop
add
aad
dec
arpl
nop
idivb
hlt
dec
mov
addb
pop
out
mov
and
adc
scas
repz
cmc
dec
push
cld
add
mov
mov
mov
pop
test
test
dec
dec
leave
inc
add
and
rcrl
jmp
shll
pop
test
pop
test
xchg
adc
mov
adc
mov
ret
or
adc
rorb
stos
push
jge
gs
sbb
cltd
mov
ljmp
lea
out
andl
mov
or
mov
cmp
cmp
or
mov
scas
dec
mov
sbb
cmp
gs
xor
iret
pushf
sbb
xor
inc
mov
pushf
fistl
xchg
sub
add
leave
bound
aaa
test
jo
mov
divl
test
mov
lcall
out
int3
pushf
adc
push
repnz
sbbl
aaa
out
lds
data16
into
lahf
call
ret
sub
sub
mov
mov
dec
mov
sub
sbb
enter
mov
ljmp
jecxz
cmp
xchg
mov
push
push
add
push
push
into
outsb
add
je
jp
in
sahf
inc
push
mov
mov
mov
and
sub
xor
fs
ficoml
xchg
loop
in
gs
mov
dec
addl
int
dec
xchg
mov
adc
mov
or
subb
int3
and
test
sub
or
gs
idivb
cmp
sub
push
cmp
push
mov
ss
dec
xchg
std
push
ret
inc
adc
mov
lret
sub
mov
adc
iret
ret
rcl
test
or
sti
movsl
stos
or
loope
mov
mov
jb
pusha
or
jmp
mov
adc
sbb
push
adc
out
or
shrb
ljmp
int3
in
sub
mov
or
cwtl
mov
out
mov
push
mov
jae
popa
leave
push
cmp
adc
push
jp
aam
in
or
or
mov
add
mov
in
clc
dec
and
scas
out
fiadds
dec
icebp
mov
pop
cmp
add
aad
jmp
insb
sarb
lods
add
inc
or
push
or
or
sbb
add
xchg
cmpl
test
mov
xor
push
lds
push
add
add
loop
repnz
and
push
push
loop
push
cmp
cmp
cmp
add
mov
xchg
dec
add
filds
leave
test
push
rclb
lock
push
mov
repz
lods
xchg
loopne
add
leave
dec
popa
add
adc
mov
mov
sub
cmpsl
sub
ficompl
inc
mov
testl
roll
or
xchg
aad
sbb
sub
mov
xchg
xor
jae
dec
sbbb
dec
test
cmc
lods
cs
jle
push
mov
sbb
add
das
add
dec
loopne
sahf
gs
cmp
mov
pop
cwtl
and
imul
movsl
or
mov
popl
and
push
test
or
dec
test
hlt
nop
pop
or
sbb
gs
cltd
or
repz
push
or
jp
mov
out
push
mov
fs
or
repz
and
and
dec
sub
sbb
out
shr
mov
icebp
je
add
adc
or
mov
cmpsl
adcl
xchg
sbb
sbb
xchg
adcl
and
dec
arpl
imul
fisttpl
decb
inc
xor
pop
inc
aad
insl
mov
mov
sbb
push
jg
imul
mov
or
gs
pop
loopne
aam
outsl
jle
dec
dec
es
push
xor
cmp
mov
mull
push
adc
jb
subl
adc
repz
push
or
adc
stos
push
orl
mov
pop
xchg
cmp
ret
push
and
fsubp
sbb
or
ficompl
jecxz
ja
jae
outsb
fisttpl
mov
push
push
add
inc
pop
mov
addl
iret
xor
mov
add
lahf
adc
xchg
bound
rsm
push
mov
jne
sti
loop
pop
psrad
push
sti
pop
arpl
push
out
arpl
and
mov
test
mov
mov
inc
add
call
adc
out
lcall
push
pop
cmpsl
push
jecxz
xlat
xchg
lret
or
out
out
xchg
jp
fmuls
inc
adc
or
adc
jmp
sbb
xor
dec
loopne
movsl
mov
aas
inc
repz
push
push
jo
push
test
out
mov
arpl
xor
sub
xchg
clc
or
add
xor
lret
test
shrl
mov
bound
js
in
into
lahf
inc
pop
fwait
test
sbb
mov
dec
les
jae
addr16
iret
stos
sub
inc
les
fiadds
sub
lahf
inc
dec
ljmp
jmp
or
push
clc
pop
mov
jmp
dec
stos
and
sbb
arpl
lcall
adc
jne
cmp
scas
xchg
xor
das
mov
xchg
popf
clc
pop
bound
xor
mov
or
mov
sbb
or
jp
cwtl
stos
cmp
divb
cltd
addl
mov
inc
and
mov
push
mov
or
pop
fwait
clc
test
std
push
push
movsl
les
es
mov
adc
mov
mov
sub
in
mov
nop
xchg
inc
mov
adcl
adc
inc
hlt
mov
xor
push
push
enter
loop
loop
sti
popa
dec
test
mov
movsl
add
arpl
mov
pop
cmp
les
loop
repz
add
arpl
jg
cmpsb
ret
sub
or
xor
inc
sahf
push
stos
aam
push
cmp
lock
cld
lods
addb
mov
jmp
out
bound
xorl
push
repnz
ds
inc
lcall
leave
or
add
add
sbb
sahf
psrlw
lods
leave
inc
das
and
inc
push
cwtl
or
sahf
and
iret
orb
mov
push
cltd
outsl
xchg
xchg
pop
push
pop
push
inc
movsb
xor
dec
lock
pop
in
test
lret
stos
iret
into
es
add
push
sbb
les
dec
iret
fucompp
int3
in
fcomps
outsb
lret
xchg
ds
cmp
sub
andb
shlb
imul
xor
xor
ror
sub
fistpll
mov
cmpsb
adc
jp
aas
cmp
mov
lret
mov
xor
jmp
sub
or
out
xchg
or
push
dec
xchg
or
sti
lcall
mov
push
addl
or
cltd
xchg
mov
negl
pop
or
push
xchg
pop
mov
mov
imul
cltd
cmp
repz
jg
loope
xlat
mov
test
out
mov
cmp
sbb
mov
add
sbb
aam
leave
mov
sbbb
stos
movsl
mov
in
out
xchg
and
push
cld
inc
subb
out
push
xor
cmc
or
add
out
mov
test
push
into
adc
outsb
cmpl
sub
outsl
mov
daa
xlat
push
dec
les
sbb
push
xor
std
cmp
and
arpl
or
and
lea
pop
xor
imul
cltd
jo
cmp
cwtl
test
add
or
int3
call
xchg
in
imul
mov
inc
cmp
nop
mov
xchg
and
and
test
rorl
scas
cmp
mov
outsb
decl
or
rcrb
cmp
or
inc
adc
push
push
test
mov
addr16
sbb
sbb
add
or
xchg
lea
mov
ja
lock
inc
push
repnz
jle
ja
inc
inc
sbbb
lret
fwait
and
outsl
cli
jecxz
dec
jns
or
cli
adc
adc
xchg
xchg
adc
xor
xchg
adc
mov
in
xchg
add
test
mov
rcrb
xor
dec
mov
orb
push
bnd
sub
movsl
and
dec
and
out
mov
inc
cmp
jp
or
mov
dec
cmp
int
lds
dec
add
iret
inc
sbb
sbb
inc
popa
mov
movsb
daa
add
push
sbb
xchg
int3
mov
cmp
bound
stos
or
add
adc
lea
or
mov
orb
add
dec
xchg
mov
dec
or
and
xchg
sbb
and
xchg
enter
dec
lds
or
movsb
cmp
add
or
sub
shr
insb
sub
inc
cmp
jecxz
stos
hlt
sbb
out
xchg
jae
addb
icebp
fstps
add
jecxz
lods
jg
out
pop
scas
rcrb
or
mov
enter
add
add
push
mov
push
xchg
jmp
mov
xchg
jb
sahf
loopne
adc
cmp
xchg
cltd
dec
test
es
out
jbe
sub
sahf
pop
push
aad
outsb
movl
xchg
in
int
sbb
or
ja
outsb
inc
jecxz
lcall
sahf
sub
stos
stos
loope
inc
imul
push
inc
jecxz
mov
adc
push
cwtl
or
xorps
stc
xchg
fs
mov
fcmovbe
dec
add
imul
cmpsb
fldenv
adc
dec
mov
sbb
jo
movsl
pusha
test
enter
push
aas
jl
ret
or
repz
test
std
shlb
fcompl
mov
mov
jmp
sbb
stos
adc
jbe
inc
xchg
mov
inc
jae
in
mov
jns
xchg
xchg
mov
jle
add
xor
xor
ja
jmp
mov
ja
repz
test
mov
lahf
imul
mov
fcompl
mov
xchg
mov
jb
insb
jl
call
lcall
rol
fidivrs
jecxz
mov
cmpsl
push
popf
dec
loopne
addb
cmp
and
push
inc
mov
dec
inc
hlt
or
sbb
push
xor
cmp
popa
inc
pop
sbb
dec
mov
sub
jmp
loop
out
add
add
inc
cmp
add
mov
jl
pop
push
cmpsl
sub
test
and
or
dec
bound
mov
adc
pop
inc
sti
push
inc
add
loopne
popf
icebp
shrb
push
xchg
jmp
ret
dec
pop
xchg
outsl
inc
mov
and
inc
xchg
roll
inc
rcrb
aaa
pop
scas
lret
lds
mov
mov
push
arpl
loope
adc
rcll
leave
mov
inc
inc
aad
xchg
icebp
dec
out
cltd
add
andl
adc
mov
xchg
int3
fstl
jo
cmp
test
in
xchg
and
mov
loopne
mov
mov
or
sub
aad
cmpsb
lock
addb
inc
clc
jge
inc
ret
dec
arpl
push
daa
addb
ret
inc
testb
int3
pop
lea
popa
sbb
adc
and
add
xchg
xlat
sbbl
test
push
jo
push
xchg
and
cmp
enter
add
cwtl
jmp
gs
adc
rcrb
push
ds
mov
sar
ljmp
or
fdivrl
pop
and
dec
movsb
and
imul
imul
pop
and
bound
icebp
lods
nop
test
lock
add
adc
adc
mov
mov
jno
shlb
inc
inc
daa
dec
mov
push
lock
dec
movsl
mov
adc
inc
dec
mov
add
scas
xor
sub
xchg
into
pop
jg
or
jle
mov
nop
xorb
out
dec
aaa
loopne
add
lea
add
jnp
test
and
ljmp
xchg
cmpsl
cmpsb
inc
push
add
cmp
adc
jge
lahf
dec
fs
and
mov
add
jl
lods
dec
cmp
rol
push
mov
mov
add
mov
bound
fucomp
outsl
mov
pusha
or
imul
fs
les
adc
cmpsl
fsubr
or
or
sub
lea
das
inc
sbb
insb
call
ret
imul
mov
jno
adc
add
aad
or
sahf
stc
aam
push
mov
add
rcr
xchg
in
cmp
cs
les
test
imul
and
cwtl
or
sbb
mov
xchg
cmpsl
ffree
dec
inc
jl
dec
sahf
iret
xchg
fildl
cs
inc
ret
lcall
xlat
insl
or
adcl
xchg
push
popa
testb
punpckhdq
pop
mov
dec
pop
and
mov
push
mov
or
loop
fdivrp
test
pop
and
lods
adc
lods
in
mov
pop
mov
hlt
sbbl
pop
ret
test
daa
shlb
mov
mov
das
and
orl
pushl
das
dec
repz
inc
jmp
sbbl
push
addl
cmp
cmp
fsub
subl
frndint
adc
sub
pop
daa
dec
push
test
or
les
adc
es
lods
xchg
sub
inc
imul
or
xor
rcll
sbb
lea
mov
subl
cmp
or
movsl
outsb
xchg
jge
xor
xchg
add
lret
cmp
add
jmp
inc
fs
cmp
lret
out
jae
mov
ret
mov
out
mov
push
jecxz
aaa
ret
or
icebp
sub
das
cmpsb
add
call
mov
add
xor
inc
and
loope
daa
inc
jne
jge
mov
push
push
dec
jo
add
xchg
jmp
imul
push
out
mov
mov
les
inc
or
push
mov
push
test
mov
int3
xorl
or
pop
arpl
adc
jmp
xchg
mov
mov
fldenv
loope
out
loopne
sub
cmc
dec
out
adc
push
dec
imul
orw
cmpsb
sub
inc
and
daa
mov
out
mov
pop
rorl
shr
dec
xchg
mov
movsl
shlb
stc
pop
sub
stc
push
cltd
cli
data16
in
add
icebp
mov
adc
push
mov
cmp
addl
push
push
mov
cmp
xchg
ror
out
inc
or
roll
jnp
add
lods
adc
push
jp
and
pop
add
sub
fbstp
sub
or
sub
es
push
test
sbb
mov
movsl
mov
filds
clc
in
ja
gs
push
push
inc
jecxz
cmc
inc
or
ror
sub
sub
adc
mov
or
imul
popa
dec
mov
in
dec
call
and
inc
fimuls
popf
push
les
xchg
dec
loopne
aas
sbb
inc
jae
and
cmc
enter
or
in
add
xchg
icebp
lods
mov
inc
xchg
pop
arpl
imul
in
sbbb
cmp
fs
mov
sbb
cmp
orb
enter
mov
mov
and
xchg
into
mov
cwtl
loop
or
push
mov
mov
into
pop
sbb
inc
mov
and
enter
lea
and
pop
es
inc
enter
cmp
sub
xchg
pop
movsb
add
add
pop
cmpsb
adcl
push
mov
pop
pop
adc
jge
add
push
repnz
mov
add
mov
ret
fs
adcb
ds
inc
les
cmp
enter
shlb
pop
sbb
sbb
add
mov
xor
stos
pushf
or
mov
cs
test
rol
jp
dec
fstpl
mov
shll
in
add
faddl
out
sti
push
test
int3
test
or
cs
adc
fwait
sbb
in
stos
movsl
aaa
push
cmpsl
xchg
les
shl
ja
xchg
cmp
orl
push
mov
clc
mov
mov
push
add
loopne
fldcw
repz
jle
fucomi
sbb
inc
testb
or
jp
leave
inc
and
mov
add
mov
jle
js
mov
mov
sbb
mov
mov
and
stos
loop
gs
ret
test
inc
loop
mov
push
call
fs
xor
mov
mov
or
add
dec
and
scas
insb
xchg
rclb
add
pop
test
xlat
xchg
stos
arpl
push
or
dec
inc
stos
insb
pop
cmc
jg
sbb
mov
push
and
xor
push
ljmp
popa
adc
push
daa
adc
or
push
push
mov
mov
repz
or
enter
push
push
sarl
and
push
out
inc
jae
mov
jne
lods
popa
dec
and
sub
and
mov
mov
insb
leave
dec
ret
and
insl
mov
shrl
mov
or
enter
add
or
cmp
xor
cmpsb
ss
inc
xlat
movsl
mov
incb
jle
mov
pop
outsb
test
adc
repz
les
add
and
les
jnp
loopne
mov
cmp
lock
mov
int3
inc
sahf
test
ret
xor
xchg
and
loope
inc
xor
ret
out
pop
notl
mov
jo
repz
sbb
out
inc
mov
add
push
inc
call
movsb
rcr
or
es
jae
pop
stos
inc
in
fadd
push
and
ret
out
jae
xor
gs
and
sub
push
js
fmull
inc
cld
pop
subb
and
addw
sub
test
cmpsb
iret
add
ds
dec
or
popf
push
loopne
cmp
xor
test
in
shrl
mul
int3
push
mov
into
push
leave
push
inc
mov
fs
in
pop
dec
repz
or
or
add
push
sbb
jo
and
icebp
pop
lret
xchg
dec
stos
test
fwait
pop
pop
sub
add
xchg
in
add
imul
pcmpeqw
mov
test
sub
add
or
add
xchg
mull
cmpsl
and
cmp
lds
adc
xorl
push
pop
test
ds
fisubl
shlb
xor
mov
cwtl
sub
xchg
leave
add
mov
imul
pop
and
push
inc
and
les
adc
test
stos
gs
push
arpl
or
nop
adc
sub
lea
adc
notb
lock
cmc
and
add
pop
orl
hlt
xchg
adc
mov
pop
mov
xor
add
add
orb
mov
movsl
adc
in
and
inc
sbbb
dec
iret
dec
lock
aas
sti
outsb
xchg
fcoms
daa
insb
out
jb
adc
cld
xor
test
fmuls
inc
xchg
es
test
push
lea
bound
sti
xchg
cmp
les
insb
aad
adc
imul
push
lods
sub
outsl
mov
lahf
addl
pushf
call
adc
mov
bound
lock
and
arpl
cmpsb
sub
into
int
lea
ljmp
enter
push
aad
push
xchg
push
push
xchg
fwait
shl
or
cmp
mov
lcall
sbb
inc
adc
sbb
ret
lods
cmp
and
daa
add
sti
mov
testb
dec
fisttpll
push
sahf
xchg
bound
aas
xchg
dec
or
add
mov
in
push
aad
inc
adc
sub
pop
in
lock
ds
scas
xor
fcomps
cltd
ret
js
push
xchg
push
ret
sbb
inc
mov
out
add
test
test
mov
aas
fcomi
xchg
test
add
mov
leave
stos
rorb
mov
mov
imul
push
or
jbe
lock
push
add
or
and
ds
push
enter
pusha
in
hlt
cmp
lahf
xor
es
fadd
negl
jo
xchg
xchg
and
dec
jmp
ret
adc
imul
cmp
cs
jmp
cmpl
xor
mov
pop
xchg
or
nop
dec
testb
mov
or
dec
cs
das
add
sub
mov
loopne
aas
mov
mov
cs
pop
dec
and
in
mov
jnp
jecxz
ret
test
test
mov
out
inc
ret
push
test
lds
sub
cmp
pop
xchg
cs
mov
sub
int3
sub
addr16
mov
pop
inc
and
pop
xor
inc
mov
out
xchg
pop
xchg
adc
cltd
mov
lock
leave
nop
aam
xchg
push
daa
xor
mov
es
adc
cmpsl
dec
xchg
push
les
ljmp
outsl
int3
push
imul
pushf
xor
stos
nop
mull
or
jnp
xchg
push
xchg
lahf
and
movsl
es
pop
pop
adc
push
push
lea
shll
jno
mov
jmp
cmc
add
add
push
push
jmp
rorb
sub
lahf
clc
sub
mov
movl
inc
inc
bound
push
aad
icebp
cltd
addl
and
nop
mov
or
popf
sti
xor
mov
cld
push
into
fnsave
cs
data16
data16
adcl
mov
mov
cmpl
jecxz
popa
adc
add
dec
dec
push
and
inc
adc
adc
adcb
push
mov
ret
inc
adc
lea
popa
and
addb
inc
daa
mov
mov
and
iret
mov
ret
inc
mov
add
sbb
js
and
pop
mov
cmpsb
inc
mov
jmp
inc
and
or
dec
test
inc
adc
lea
and
stos
rorl
push
lret
inc
adc
cli
inc
and
fcoms
sbb
inc
int3
sahf
inc
jmp
or
int3
jecxz
imul
adc
cltd
test
test
push
test
cmp
xchg
jbe
push
add
bound
sub
imul
inc
xchg
jo
scas
mov
in
scas
pop
iret
cmpsb
sub
inc
mov
xchg
stos
add
addr16
loope
mov
loopne
jns
pop
sar
mov
mov
cmpsl
mov
leave
pop
test
int
inc
and
jl
ror
sub
inc
mov
mov
iret
add
inc
xchg
inc
mov
xchg
and
push
stos
or
mov
xchg
movsb
enter
adc
jb
popl
dec
adc
shrd
shll
gs
push
add
add
sbb
sbb
push
ret
xchg
push
dec
inc
inc
stc
mov
sbb
add
repnz
pop
or
dec
notb
push
sub
cmp
xor
mov
adc
das
lahf
add
pop
and
adc
in
sbb
push
mov
xchg
movsl
sbb
ret
in
inc
push
lret
push
lock
adc
mov
out
dec
dec
rcrl
push
push
mov
into
add
jle
pop
in
lods
into
mov
cld
and
imul
out
sbb
pushf
jle
xchg
jg
xchg
dec
add
daa
mov
pushf
jno
pop
sbb
out
add
mov
dec
sahf
mov
inc
and
xor
push
loope
xchg
and
jne
add
leave
ss
and
xor
and
imul
out
cmp
inc
mov
popa
clc
test
pop
gs
out
dec
add
mov
mov
shrb
gs
gs
inc
xor
int3
ror
push
adc
in
adc
jne
and
fwait
and
call
inc
les
sub
mov
mov
or
add
jle
test
xchg
movsl
mov
mov
cmp
xor
mov
xchg
test
cmp
and
adc
ud0
fucomip
mov
or
sub
mov
lea
cmc
sbb
or
or
push
dec
orb
rdpmc
add
and
in
adc
add
pushl
movsl
dec
popf
push
scas
mov
daa
xchg
or
faddp
adc
push
jmp
dec
add
ret
mov
and
cltd
or
dec
lret
adc
stos
les
or
or
or
push
adc
mov
xchg
fsubrl
mov
lret
lods
fcoms
adc
stc
add
dec
pop
lods
dec
hlt
cmpsb
outsb
inc
or
xchg
pop
lea
xor
int3
out
sub
test
add
cltd
xchg
mov
sti
jb
inc
xchg
rclb
sbb
test
sarb
and
inc
cmpsl
lahf
sbbb
test
add
xor
out
pop
and
imul
inc
sub
orb
inc
inc
dec
lock
sbb
cmpsb
inc
into
jmp
cmpsl
jbe
mov
lea
sbb
push
fdivrl
fcomip
lret
das
cmp
leave
ljmp
or
in
mov
or
and
in
mov
push
cmp
mov
sbbl
addl
or
xchg
xlat
test
sbbl
jmp
mov
adc
xor
sbb
add
add
aas
addl
mov
popf
and
mov
inc
sahf
or
jmp
adc
test
lahf
jge
jmp
mov
fcomps
roll
or
ret
in
dec
lcall
mov
pop
cs
pop
data16
fldt
daa
stos
sub
test
add
push
lods
mov
test
xchg
imul
lahf
or
dec
xchg
pop
dec
push
or
mov
adc
fstps
pop
jg
mov
insl
dec
mov
lahf
dec
inc
fwait
lods
daa
and
popa
les
xorl
or
fisttps
pop
sbb
inc
shll
mov
in
inc
push
mov
xchg
add
cmp
and
sub
cmp
add
inc
xor
or
pop
andl
or
xchg
insl
mov
clc
dec
xlat
xchg
xchg
fmuls
mov
sbb
les
test
in
jl
mov
xchg
sbb
in
and
gs
mov
mov
fdivr
addb
jo
dec
xchg
push
and
sub
imul
cmpsb
adc
push
xchg
sbb
dec
cwtl
sbb
ret
test
or
xchg
pop
fisubl
jo
pop
lret
and
mov
test
or
fs
nop
inc
ds
iret
pop
andl
cltd
dec
pop
add
inc
jle
inc
or
fiaddl
int3
mov
inc
lahf
fs
mov
lea
sbb
lea
cwtl
loope
roll
movsb
popf
add
sbb
insl
incb
repz
add
xchg
lods
push
and
adc
in
ret
sbbl
dec
inc
fs
testb
pop
sub
add
out
jno
adc
add
stc
or
add
cmp
jmp
jp
pop
imul
xbegin
inc
jl
cltd
add
push
add
lods
push
cmp
les
xchg
inc
notb
xor
mov
ret
push
shlb
iret
xor
movb
pop
jo
mov
in
adc
sbb
sub
icebp
sub
mov
cmp
cmpsb
push
shlb
mov
pop
mov
pusha
out
dec
mov
xlat
imul
stos
mov
xor
cmpl
bndldx
call
cmp
inc
lds
mov
and
mov
rclb
add
add
gs
lahf
loope
fs
dec
jmp
test
pop
in
adc
inc
lock
jmp
sbb
popa
inc
xchg
pop
fmull
mov
lock
pop
mov
add
jb
cld
xchg
dec
mov
mov
sub
pop
sub
int3
les
test
test
in
aaa
push
mov
dec
mov
dec
and
loope
test
push
pushf
nop
inc
lret
fwait
arpl
ret
shrb
cli
add
or
and
dec
cmp
sbb
cli
adc
dec
adc
mov
mov
pop
clc
es
jge
or
into
push
adc
or
sub
pop
ret
sbb
movl
popf
pop
lahf
hlt
aas
and
sahf
mov
test
pop
movsl
test
rcr
adc
sbb
lea
fwait
xchg
pop
sbbl
in
dec
sahf
and
sbb
arpl
ret
mov
movb
mov
ljmp
out
subb
aas
push
mov
inc
sbbl
xchg
pop
lds
cmpsb
popa
xchg
sbb
xorl
xchg
enter
push
into
lahf
rcll
pushf
cltd
test
in
orl
cmp
sbb
lret
jge
jno
inc
mov
add
repz
cmpsb
cltd
inc
mov
insb
mov
ret
mov
mov
fistpl
cmp
sub
add
xchg
pushf
or
mov
mov
mov
pop
pop
lock
jle
mov
lea
and
or
xor
inc
push
mov
push
xor
adc
sub
pop
xchg
mov
adc
movsl
decb
xchg
mov
jne
inc
orl
gs
ret
and
dec
adc
lret
add
add
cwtl
or
int3
mov
repz
dec
mov
rorb
test
and
push
movswl
adc
add
xchg
aad
mov
outsb
xchg
repnz
mov
push
sbb
xor
loopne
leave
fwait
sub
aad
adc
inc
add
stos
ret
sbb
fldenv
leave
xchg
addr16
lds
in
hlt
fucomi
test
scas
dec
int
xlat
or
dec
movsl
pop
lods
ret
xor
adc
cld
lds
fiadds
and
inc
stc
imul
and
lcall
xchg
push
mov
lahf
jle
mov
or
addb
inc
and
jo
cmpsb
jecxz
and
xchg
xchg
sbb
ffreep
repz
loopne
xchg
aas
inc
subb
or
ljmp
shr
push
dec
out
jne
xchg
dec
out
dec
test
out
jne
xchg
dec
out
dec
push
loopne
insb
add
xor
call
jmp
or
cmp
or
xor
sub
push
test
sub
loop
add
test
lods
xchg
push
lret
mov
inc
das
or
loop
lcall
adc
xlat
or
sbb
sbb
push
or
popa
or
test
out
pop
sbb
and
cltd
or
mov
in
dec
inc
bound
test
add
inc
fwait
bound
jmp
dec
arpl
pop
enter
fwait
test
sbb
add
orl
and
or
stc
jbe
mov
sub
mov
add
lret
popl
ss
in
fstps
mov
or
push
xor
inc
or
cmp
mov
imul
pop
mov
xor
out
addl
sbb
mov
das
inc
aad
icebp
push
addr16
fnstsw
lock
data16
or
xchg
xor
xchg
adc
flds
push
ljmp
dec
jno
addb
out
and
popa
inc
adc
aaa
adc
dec
cltd
fucomip
push
inc
cmp
or
fisubs
lea
mov
iret
push
add
outsb
int3
inc
dec
sub
shlb
jmp
sbb
dec
ficompl
cmp
orl
imul
jae
push
push
or
mov
ret
jecxz
cwtl
lea
xchg
inc
xchg
cmp
test
imul
jne
jb
xchg
jnp
cmc
mov
dec
inc
push
mov
in
ja
lds
mov
inc
popf
and
and
out
xor
bound
mov
ja
jb
lahf
sbbl
sub
push
and
mov
or
dec
push
dec
add
sub
cltd
xchg
or
xchg
xchg
push
xchg
rcr
fadd
mov
add
mov
jle
lods
inc
dec
add
sti
jne
and
outsl
mov
outsb
xchg
add
les
mov
or
add
or
add
dec
test
add
daa
test
in
or
filds
mov
repnz
jns
mov
pop
int
mov
fldl
call
jmp
inc
es
mov
dec
rorb
test
icebp
push
es
pop
inc
lods
adc
das
out
popf
cmp
outsb
and
seto
inc
movl
rol
or
and
mov
or
lods
roll
les
add
aas
xchg
mov
adc
sbb
int
xor
adcl
out
inc
incl
mov
or
lods
pop
or
mov
and
xor
lret
xchg
adc
imul
shlb
rolb
dec
cmp
mov
jge
jmp
or
jbe
outsb
mov
icebp
or
sub
cmpsb
add
enter
cs
jl
cmpsb
or
icebp
icebp
adc
xor
pop
int3
repz
cmp
pop
xlat
inc
bound
out
pop
xor
int3
imul
add
divb
aas
and
fwait
adc
pop
or
movaps
popa
xor
les
cwtl
negb
xchg
jns
add
ret
loop
clc
mov
outsb
push
mov
dec
and
movsb
cmpsl
in
je
mov
leave
xchg
insb
mov
dec
xchg
out
push
ja
cld
mov
mov
call
ds
jg
inc
push
ret
jbe
jecxz
inc
mov
fmulp
pushf
adc
push
mov
stos
dec
ret
push
and
add
inc
push
shl
stos
nop
xor
push
add
shr
test
inc
xorb
cs
push
mov
xor
mov
lea
repnz
fs
test
xchg
inc
negl
pushf
xor
sub
testl
adc
xchg
enter
xor
lret
mov
sub
xchg
inc
xchg
leave
sbbl
jmp
jg
rcrl
inc
pop
mov
cltd
mov
xchg
sub
or
aad
sbb
ror
prefetch
or
adc
les
jl
lret
sbb
push
sahf
and
popa
push
push
mov
xor
sub
das
or
or
cwtl
dec
aad
mov
orl
add
adc
test
add
fildll
lahf
ret
mov
std
repz
mov
add
add
andb
xchg
xchg
xchg
fptan
sbb
aaa
cli
pop
psubsw
add
xchg
movsl
inc
out
movl
cltd
stos
clc
push
mov
xlat
jb
inc
popf
push
icebp
cld
inc
adc
cmp
push
decb
cmp
push
repz
add
pop
popa
mov
mov
pushf
push
in
repz
mov
xchg
popf
movd
ljmp
roll
bound
popa
pop
mov
mov
ret
mov
mov
ret
sbb
xor
lds
pop
cmpsl
and
and
pusha
mov
in
push
lock
inc
xchg
movsb
dec
mov
inc
mov
push
pop
fsubs
push
sarb
cmp
popa
repnz
cmovbe
xchg
rcrl
pop
loop
and
and
test
jecxz
xor
fmuls
shrb
data16
or
sahf
loope
repz
fldz
testl
push
add
out
stos
gs
lret
bound
cld
sahf
jno
cmpsb
lock
push
add
xlat
or
hlt
adc
or
call
inc
in
mov
and
cmpsl
mov
mov
adc
inc
xchg
or
pusha
es
aam
inc
inc
sub
rcr
ret
dec
daa
popa
mov
movsb
lock
in
movsl
subl
mov
adc
and
push
push
adc
jge
pop
aam
dec
sub
out
or
inc
and
xchg
orl
add
cmp
add
and
pop
int3
xchg
shll
mov
clc
sub
push
pop
movsl
iret
mov
inc
nop
jbe
jge
dec
mov
loope
inc
dec
aas
mov
jecxz
xchg
dec
sahf
into
push
lock
cmpsb
jg
or
mov
dec
subb
lods
lea
test
cmpsb
ds
int3
and
sub
mov
ljmp
pop
out
jecxz
and
int3
bound
mov
push
dec
dec
cmp
movsb
xchg
shr
cmp
out
test
test
push
cwtl
imul
in
inc
data16
fdivl
int
pop
js
pop
inc
sar
or
popa
bound
add
mov
in
or
inc
jnp
loop
or
call
xlat
call
arpl
adc
jecxz
inc
pop
sbb
cmp
lods
sbb
stc
or
rolb
daa
pop
test
jmp
sub
dec
bound
fstpt
cmpsb
inc
fwait
pop
outsb
lods
ljmp
enter
or
test
jg
xor
dec
dec
sub
sub
aad
popa
sbb
or
and
mov
in
pop
push
shrb
and
push
std
and
jg
cs
shrl
in
inc
in
inc
test
out
add
adc
adc
out
fmull
and
in
data16
inc
aaa
push
andl
sbb
add
nop
loopne
jl
les
les
mov
jnp
jmp
lods
sub
ficoml
js
jle
inc
mov
loopne
rcrl
ja
push
xchg
sti
aas
lods
xchg
aam
flds
inc
sub
aam
fwait
dec
inc
pop
out
popa
adc
inc
call
aas
psrlq
fs
adc
add
cwtl
out
sub
cli
xchg
jae
movsb
jbe
outsb
dec
int3
jle
les
or
ja
xchg
cli
mov
add
adc
mov
cmp
daa
and
add
jo
inc
push
xchg
addr16
sahf
jmp
jo
iret
ja
rcrl
scas
dec
cmp
mov
mov
sub
cli
inc
add
inc
aaa
ret
fadds
arpl
pop
push
fistpl
cld
or
push
mov
movq
inc
sahf
dec
repnz
adc
mov
test
push
mov
mov
lcall
int
or
lods
test
subl
mov
mov
sbb
enter
insb
loope
mov
push
or
clc
fbld
sub
push
lsl
xorb
cmp
and
and
push
sub
andl
movl
mov
inc
jg
movsb
jle
clc
fdivrl
test
roll
loope
mov
fstpl
mov
nop
or
mov
in
adc
mov
and
jg
test
pop
insb
lret
or
andl
pop
mov
cmp
xor
mov
inc
pop
inc
and
popf
push
inc
ja
or
push
or
push
mov
rcrl
mov
xorb
and
mov
addl
add
xor
addl
fbld
das
testb
movsl
fucomp
cmp
xor
and
decb
hlt
ret
cwtl
jg
pop
out
enter
arpl
and
cmp
dec
dec
push
add
pop
loopne
sbbl
mov
and
gs
test
repz
fs
int3
out
dec
scas
ficompl
test
mov
pop
fiaddl
fcmovb
outsl
into
jp
xchg
inc
xchg
rcr
les
sbb
rcr
dec
test
sbb
ret
pop
lock
stos
icebp
leave
and
inc
mov
clc
bound
ret
sub
adc
sbb
icebp
fisubrl
xor
outsl
leave
les
xchg
dec
mov
xchg
inc
call
xor
adc
mov
dec
inc
insl
pop
cmpsb
dec
jo
aam
ja,pn
inc
inc
vmovhpd
in
dec
fwait
sub
test
fs
fnstenv
cltd
cltd
xor
xchg
push
lahf
mov
jmp
pushf
dec
imul
loopne
sbb
lcall
cltd
sahf
es
jle
or
and
mov
loop
mov
popw
push
and
pop
mov
adc
scas
daa
lret
leave
add
xchg
bound
mov
testb
inc
push
orl
int3
or
sub
dec
mov
fiadds
inc
outsb
dec
cli
cltd
call
pop
push
movlps
rorb
inc
xor
sahf
stos
fsubp
sti
mov
aad
ficompl
inc
les
mov
adc
andl
mov
fcoml
data16
incl
jl
mov
lea
data16
test
sub
dec
movb
push
xchg
jge
inc
sub
adc
adc
xchg
pop
inc
adc
or
insb
mov
flds
mov
iret
cmpsb
mov
xchg
or
push
push
test
cmpsb
enter
out
xchg
dec
jmp
push
dec
inc
lahf
mov
xor
mov
hlt
test
xchg
mov
mov
popa
push
adc
imul
adc
inc
mov
push
xchg
and
add
dec
mov
push
daa
mov
xchg
imul
and
mov
subps
jmp
dec
mov
xchg
mov
and
rorl
mov
lods
int
dec
xchg
mov
or
pop
sbb
inc
push
push
cwtl
dec
xchg
push
sbb
popf
data16
repnz
adc
dec
sbb
repnz
mov
cmp
and
pushf
and
add
mov
bound
cmp
lods
pop
repz
lods
or
dec
inc
mov
jne
adc
testb
push
adc
push
push
fisttpll
andl
test
pop
stos
sbb
dec
or
nop
mov
loopne
addl
sbb
sahf
jnp
inc
pop
or
pop
sub
jae
sbb
bound
enter
pop
mov
or
aaa
fsubrl
sub
inc
mov
mov
mov
mov
adcl
cltd
inc
mov
xchg
movsb
pop
test
out
adc
xchg
and
inc
sub
cltd
mov
xor
int3
sub
xor
mov
cwtl
dec
mov
out
out
dec
dec
test
inc
xchg
and
mov
insb
and
aas
into
mull
dec
inc
xchg
aam
xor
pop
adc
mov
fimull
cmp
mov
stos
push
fmul
pop
rorl
dec
sub
in
cmp
and
xor
push
lret
sbb
iret
push
repz
cmp
jnp
sub
sbb
mov
dec
sub
adc
inc
andb
ljmp
lea
adc
out
sbb
insl
out
cs
sbb
out
test
fisubs
pop
cmp
add
mov
cmp
cmpsl
loopne
subb
push
arpl
mov
dec
inc
and
inc
shrb
fildl
ss
stos
fwait
cltd
insb
mov
icebp
call
into
mov
or
xchg
popa
mov
push
fidivrs
out
das
push
stos
inc
inc
jl
lods
push
xchg
stos
repz
mov
mov
lcall
int3
push
out
outsb
mov
mov
insl
sahf
je
mov
pop
outsb
adc
pop
enter
mov
add
xor
scas
mov
add
push
test
mov
jne
call
fldl
cmp
or
adc
or
mov
out
push
mov
mov
dec
and
push
lret
inc
sub
sub
adc
sbb
mov
pop
mov
fiadds
jg
cmpsb
cltd
jo
mov
sbb
or
addr16
cmpsl
dec
lds
pop
and
test
ds
jns
repnz
sbb
in
inc
jmp
mov
xchg
orl
ret
push
xchg
lds
clc
xchg
gs
inc
ret
push
jl
adc
xlat
push
iret
dec
sub
xchg
leave
ja
cmp
sub
mov
subb
pop
dec
mov
mov
adc
or
leave
adc
sub
cmpsb
add
jns
in
ljmp
push
popa
xchg
ja
lea
lcall
add
lods
mov
test
popa
jne
test
lods
ficompl
pop
into
clc
dec
add
pop
xlat
dec
inc
xchg
push
popa
cmp
test
enter
add
xchg
bound
push
dec
mov
ret
xlat
or
and
xor
or
xor
adc
jbe
xchg
pushf
arpl
xchg
in
push
sub
clc
xchg
sub
in
jl
cs
repnz
stc
jne
push
bound
inc
mov
clc
push
mov
dec
aaa
sub
pop
push
cld
sub
xchg
inc
test
inc
call
sbb
dec
lds
mov
mov
adc
xchg
jecxz
sbb
lahf
imul
add
shrb
add
add
mov
mov
call
shlb
dec
insl
scas
scas
ficompl
mov
jmp
dec
movsl
sbbw
pop
mov
das
stc
jbe
cmpsb
mov
ret
inc
mov
iret
mov
mov
fdivs
adc
inc
in
jns
cmpsl
lahf
push
jns
test
data16
inc
xchg
out
lahf
insb
jbe
leave
shlb
cltd
popa
daa
adc
sbb
mov
xlat
loopne
test
cmp
in
cmp
mov
dec
ds
nop
xchg
mov
add
xlat
and
or
and
outsb
add
pop
inc
rol
push
cmpsl
cmc
mov
xchg
sub
lea
xchg
jle
push
xchg
xchg
or
sbbb
repz
xlat
xchg
test
popa
lahf
dec
les
push
mov
lea
out
sub
adc
xchg
adc
loop
mov
adc
pop
inc
add
nop
add
xchg
rclb
sbb
sbb
push
cs
inc
jg
mov
popa
jbe
ss
jle
and
mov
pop
xor
add
xchg
push
and
lcall
xchg
push
stos
sar
mov
data16
inc
mov
push
rorb
xor
add
pop
xchg
sbb
adc
sub
scas
dec
mov
pop
mov
jnp
movsl
fists
test
push
scas
dec
mov
sar
nop
int3
loope
fnsave
adc
cmp
mov
dec
sub
push
or
xchg
fsubl
mov
adcl
and
push
and
or
xchg
ret
fldt
inc
xchg
ss
cmp
jecxz
outsb
cld
outsb
xchg
push
fcomi
call
push
das
mov
xor
xchg
adc
and
lret
push
and
das
jmp
push
jge
push
xor
add
ret
test
xor
xor
subb
popf
imul
cli
mov
std
jnp
jge
sbb
lods
or
mov
imul
cmp
rcrl
or
addr16
push
sbb
mov
jns
inc
dec
add
inc
cmpsl
mov
addr16
xor
popa
data16
push
adc
repnz
movsl
mov
cmpsb
add
xchg
mov
cli
mov
pop
je
icebp
movsb
movaps
subl
icebp
push
push
hlt
jae
out
push
sti
je
leave
inc
adc
dec
mov
mov
stos
rcr
jnp
icebp
orl
addl
mov
les
mov
dec
popa
mov
xor
and
mov
dec
or
test
push
and
loope
push
and
mov
adc
or
mov
inc
cmpps
stos
shll
loop
loope
sti
lea
dec
inc
cli
int
std
pop
out
sub
add
pusha
idiv
ret
lock
or
and
inc
inc
dec
add
insb
aaa
clc
and
push
add
xor
psrld
sbbb
push
mov
or
xchg
daa
and
nop
xor
xchg
and
cmpsl
int3
pop
sub
out
dec
or
pop
daa
gs
loop
inc
push
add
cwtl
imul
cli
dec
testb
mov
add
and
adc
xchg
repz
jne
inc
and
cmp
mov
pop
dec
icebp
cmc
inc
dec
in
mov
nop
or
lea
push
pop
or
adc
rclb
test
pop
out
inc
sub
fsubrl
and
test
xchg
adc
lds
adc
mov
xchg
inc
mov
jle
adc
addb
andb
xlat
xor
mulb
mov
dec
mov
cli
insb
and
and
mov
daa
cmp
mov
inc
xlat
fcomps
pop
add
mov
adc
add
jo
push
adc
test
and
addr16
iret
insl
clc
in
gs
nop
hlt
push
jmp
fisttps
inc
lea
hlt
dec
mov
sbb
out
add
pop
out
inc
mov
enter
popf
jmp
xlat
ret
pop
add
mov
out
push
iret
dec
adc
test
cmpsb
dec
inc
mov
lret
lret
mov
xchg
in
leave
or
les
and
or
notb
xor
push
or
sbb
inc
les
adc
jecxz
and
add
popa
popf
fldcw
and
cltd
shlb
xchg
cwtl
lds
mov
push
adc
pushf
pop
test
push
popa
aad
nop
and
addb
scas
aas
mov
xchg
jbe
push
push
lea
jb
jnp
pop
fs
int3
das
cmp
mov
xor
and
scas
cmp
movsl
sub
add
or
mov
add
pop
mov
dec
fimuls
xchg
adc
cmpsl
addl
push
cltd
push
rcrl
jmp
cli
bound
scas
cmp
in
push
jnp
sbb
cld
out
andb
pop
shrb
add
dec
push
ss
loop
jg
push
sbb
les
bound
inc
add
sbb
cltd
subl
sbb
inc
lods
movsl
mov
adc
loopne
inc
fcom
aad
add
popa
jg
insl
lods
lds
inc
push
and
and
jnp
addl
sub
jns
adc
add
jae
and
mov
sbb
mov
inc
ficomps
sbb
fs
push
mov
dec
adc
into
cmp
loopne
in
lahf
pop
mov
daa
xchg
icebp
lea
inc
ss
fs
mov
inc
fs
add
push
mov
inc
sbb
adc
pop
andl
mov
in
popf
mov
rcl
pop
jnp
adc
jns,pt
ja
inc
mov
fcmovnb
add
and
add
out
sub
icebp
add
and
xchg
inc
lea
dec
popa
call
add
and
pop
movsl
mov
addr16
xor
ljmp
push
ret
mov
testl
jne
and
hlt
jg
andl
or
sti
xchg
sbb
mov
lret
adc
lcall
mov
ret
ret
sbb
cmpw
pop
sub
pushl
push
cwtl
rol
fidivs
outsb
add
inc
xchg
inc
sbb
sub
jno
add
xlat
fcmovbe
jl
mov
xor
sub
pop
pop
pop
xchg
pop
ret
mov
test
adc
cmpsl
or
into
ljmp
cmp
jae
stos
pop
lahf
or
or
daa
inc
push
cltd
add
ljmp
int
mov
fs
addl
add
push
iretw
outsl
mov
popa
pop
push
cmpl
and
or
jecxz
rcll
mov
faddp
sbb
test
orb
cmp
mov
xor
mov
inc
adc
push
pusha
in
jno
push
jnp
add
mov
and
cmp
pop
add
jle
shll
mov
push
cltd
lods
xchg
imul
test
push
pop
fisubrs
mov
sahf
notl
push
cmp
add
and
andb
adc
mov
xchg
mov
imul
inc
in
mov
jle
add
mov
popa
push
fs
xchg
xchg
shlb
les
sub
mov
cmp
fcmovnu
mov
adc
dec
jl
dec
pop
in
jl
in
xchg
push
repnz
subw
sbb
repz
outsb
cld
mov
mov
fsubl
push
in
cmp
dec
inc
es
sbb
bound
push
insl
push
xchg
movb
inc
pop
lock
xchg
sbbb
jno
inc
enter
mov
ret
mov
fldt
sub
add
dec
jo
icebp
push
push
sbb
mov
adc
test
jb
test
repz
or
inc
fisubrl
cltd
adc
sbb
xor
into
out
nop
int3
lea
pop
add
cltd
mov
fs
popf
xchg
pop
pop
mov
mov
stos
cmc
dec
xor
incl
outsb
vpcmpgtw
lcall
dec
fs
dec
outsb
pop
add
int3
or
sub
pop
sbb
popa
xor
mov
mov
add
stos
pop
pop
cmpsb
movsb
xchg
iret
loope
outsl
psubusb
add
xchg
mov
ja
inc
outsl
adc
and
loope
dec
shlb
int
mov
mov
movb
les
imul
inc
mov
mov
jg
int
mov
sbb
fistl
loop
add
cmpb
or
sub
ss
or
dec
gs
dec
and
leave
jbe
insb
jmp
sub
xchg
in
insl
xor
sbb
sbb
jmp
sub
fbld
xor
push
or
mov
sub
sub
fs
mov
and
bound
pop
push
lea
xchg
inc
subb
fs
mov
and
inc
ret
fs
loop
cltd
testl
sbb
push
and
and
sbb
add
xor
gs
outsb
inc
int3
cmpl
xchg
or
dec
mov
jmp
push
into
and
inc
cmp
loop
and
pop
mov
shl
adc
lahf
add
push
scas
pop
add
gs
cmp
jp
mov
xchg
and
pop
outsl
and
xor
and
sbbl
scas
inc
push
mov
nop
insb
shll
fwait
xor
push
out
and
inc
or
xchg
xorl
sub
les
xor
inc
fistpll
lea
add
dec
jo
xor
lret
jl
mov
push
sbb
mov
call
add
addb
add
inc
and
lcall
filds
push
fcomps
test
ror
movl
or
xchg
dec
imul
cmp
push
and
or
mov
daa
test
inc
sub
lock
add
adc
xlat
cli
add
repnz
adc
pop
dec
xchg
stos
and
mov
inc
stc
test
in
loopne
mov
test
push
fiadds
cmpsb
test
inc
sub
sti
sub
loope
mov
mov
push
or
mov
dec
xchg
data16
adc
and
pop
out
sarl
int3
imul
jmp
loope
push
xchg
test
mov
jo
out
addr16
mul
or
loopne
fstpt
sbb
add
test
dec
adc
jnp
movsl
mov
clc
lea
inc
call
fs
or
aam
dec
push
les
repz
pop
stc
mov
movb
inc
cmp
fwait
jmp
scas
sbb
aas
cmpsl
loopne
fistps
lret
sub
popf
js
shlb
adc
cltd
pop
inc
add
imul
inc
popa
ljmp
test
loopne
test
aaa
in
add
icebp
mov
xchg
mov
mov
andb
and
mov
mov
ret
jne
jno
inc
and
ss
aam
adc
movsl
cs
push
int3
test
sbb
mov
daa
push
pop
in
mov
enter
jnp
mov
stos
rorl
pop
adc
insb
xchg
imul
pop
xchg
ret
icebp
jge
dec
imul
ljmp
mov
gs
jbe
pushf
or
xor
xchg
adc
fwait
loopne
xchg
adc
lods
cld
sbb
dec
xor
subb
cli
iret
push
sbb
das
xor
xor
movsl
xor
mov
and
les
push
cmpsb
xchg
cmpsb
mov
jg
push
stos
add
loop
sbb
sbbl
add
mov
and
mov
and
insb
repnz
out
out
popa
mov
add
outsb
adc
mov
in
int3
mov
orl
nop
mov
xchg
in
dec
cmp
loop
popa
subb
loop
pop
int3
inc
pop
jecxz
mov
add
inc
das
lcall
les
out
gs
xor
dec
clc
sub
pushf
xchg
adc
or
vmread
jo
sbb
mov
adc
sbb
add
imul
ucomiss
push
stos
xorl
mov
add
leave
movsl
inc
jmp
jle
xchg
sub
sbb
sbb
push
xor
or
push
cmpb
outsb
mov
shrb
faddp
fs
push
jl
xchg
inc
enter
les
arpl
add
jmp
sub
push
stos
mov
xor
dec
vcvtpd2psx
sub
leave
xchg
lds
adc
add
insb
add
rol
mov
add
iret
and
ret
fs
movsb
fwait
pop
ret
aad
or
test
push
daa
lea
lea
loopne
inc
lods
jg
xchg
mov
adc
pop
dec
and
inc
hlt
les
add
cmp
push
ss
shrl
cmp
je
lahf
subl
mov
mov
or
add
inc
xchg
sbb
std
inc
insl
sbb
dec
xchg
jg
inc
mov
mov
test
add
dec
jmp
test
jo
push
dec
das
and
or
pop
adc
test
cli
lcall
sub
push
adc
into
and
out
add
xor
popf
das
inc
xorl
shll
xchg
mov
fsubl
mov
fnstcw
dec
test
mov
or
dec
aad
inc
cmpsb
dec
mov
arpl
test
out
xchg
test
or
add
adc
orl
icebp
in
add
inc
push
mov
rcll
fiaddl
jg
push
ret
inc
es
inc
jbe
dec
adc
xor
dec
pop
and
dec
or
sbb
lea
es
sub
ja
xchg
and
mov
xor
sbb
xchg
adc
mov
adc
sub
data16
loopne
mov
adc
ret
dec
add
bound
pusha
in
outsl
mov
mov
push
mull
sbb
dec
mov
loope
push
inc
popf
int3
sahf
xor
xchg
outsb
testb
adc
inc
int3
sbb
inc
add
pop
rcrl
push
pop
inc
xchg
sbb
popl
dec
jl
mov
adc
mov
jmp
mov
rcll
inc
add
loopne
cmpl
loope
push
jp
stos
or
and
jg
cmpsb
lret
add
jecxz
and
pop
and
fcmovnb
mov
icebp
xchg
xchg
mov
adc
pusha
xchg
push
adc
leave
test
cmpb
fsubl
mov
mov
pop
jns
adc
xchg
leave
lea
mov
mov
push
les
push
call
gs
jp
fiaddl
adc
cltd
enter
xchg
mov
xchg
inc
leave
adc
inc
mov
or
adc
mov
mov
addb
in
mov
popf
and
sbb
and
fimuls
dec
inc
inc
adc
xchg
gs
mov
lea
xchg
jbe
les
add
ja
add
push
pop
xlat
fistpl
dec
dec
pop
adc
and
and
fnstsw
pop
push
cmp
cltd
cmp
push
cmc
add
adc
cwtl
fldcw
jge
rolb
mov
in
stos
aas
mov
nop
arpl
or
popa
sub
sbb
dec
and
es
rorb
adc
test
test
dec
sbb
xor
cs
icebp
sub
mov
roll
xchg
inc
adc
or
jne
inc
add
adc
test
or
lea
add
or
mov
push
xor
or
adc
add
mov
mov
adc
mov
repz
pushf
fs
pop
into
andl
and
loopne
push
ja
mov
mov
mov
cs
lea
xchg
in
xor
mov
add
mov
dec
leave
jmp
push
lret
jo
iret
inc
lock
mov
test
mov
mov
ror
movsl
sarb
jge
insl
xchg
pop
data16
gs
popf
clc
adc
mov
stos
fsubrs
and
mov
and
and
arpl
loopne
test
add
xchg
in
mul
dec
add
movsb
dec
pop
lret
inc
fildl
pop
lret
mov
bound
push
cmp
bound
mov
loope
add
push
mov
addr16
mov
out
mov
push
mov
mov
mov
xchg
test
mov
in
mov
mov
outsb
and
in
mov
sub
mov
or
std
mov
xor
xchg
cmpsl
push
jg
hlt
insl
lea
movsl
inc
mov
rclb
sub
push
mov
inc
mov
les
pop
cmp
add
lea
fwait
push
dec
test
or
mov
and
and
push
or
xor
inc
and
test
aas
loopne
add
enter
iret
std
jo
cmp
into
mov
push
mov
scas
xor
inc
and
into
push
cmc
cld
cmp
into
jae
mov
push
in
decb
ljmp
xchg
ret
xchg
sub
and
jb
mov
add
pop
movsl
mov
mov
mov
or
or
insb
int3
int3
test
popf
rorb
arpl
lahf
loopne
ret
loope
xor
lret
or
mov
pop
inc
mov
add
popf
push
or
int3
mov
dec
jb
rcr
and
cmpsl
mov
cltd
jecxz
test
in
test
inc
and
adc
test
test
add
pop
lock
pop
or
sbb
popf
pop
bound
shrl
push
in
lahf
add
sbbl
addb
sbb
pop
rolb
xorb
xchg
or
mov
jle
xchg
mov
pop
jp
in
mov
push
divb
and
mov
dec
push
and
inc
add
or
adc
and
inc
std
sub
dec
add
pushf
and
cmpsb
mov
clc
mov
sub
fisubrl
lcall
xchg
out
push
in
xor
es
jl
iret
dec
test
mov
mov
lret
jl
inc
xorl
gs
out
push
mov
in
lods
mov
add
cmp
sub
inc
in
inc
iretw
push
ret
and
push
and
out
stos
xchg
push
sub
xor
addr16
pop
jno
xchg
into
out
std
pop
movsl
dec
sbb
and
out
xchg
test
or
in
test
push
xchg
scas
adc
cmp
aam
push
hlt
xchg
dec
jbe
mov
and
mov
mov
dec
xchg
jmp
inc
popa
mov
cmp
add
outsl
xchg
or
xchg
lods
and
flds
movb
ljmpw
jp
daa
and
hlt
and
push
mov
pusha
sahf
push
jae
rcrl
add
fwait
add
dec
rcrb
add
sub
jns
movsl
clc
es
call
rcrl
mov
cmp
inc
rcll
outsl
andb
ret
mov
adc
scas
ret
sahf
subb
into
rcrl
scas
icebp
pop
test
mov
shl
ficoms
clc
mov
inc
shlb
pop
mov
pop
and
xor
inc
int3
es
add
xchg
mov
push
test
cmp
popf
inc
dec
iret
xchg
xor
cwtl
test
push
pop
daa
xor
shlb
push
inc
sbb
inc
mov
add
lock
xchg
das
fs
scas
xchg
cmp
cmp
inc
inc
or
and
popa
cmpsl
sbb
popa
mov
xlat
outsl
or
out
xchg
rorb
add
outsb
mov
insb
xchg
cmpsb
out
cmpsl
je
mov
inc
or
push
adc
sbb
mov
and
inc
hlt
cmpb
cmpsb
cmp
imul
fs
mov
fiadds
call
adc
hlt
into
mov
addl
and
test
test
icebp
and
mov
fadd
paddq
aad
scas
and
adc
add
push
call
add
arpl
and
dec
push
inc
imul
add
sti
fcomps
dec
inc
xchg
lahf
int
mov
jmp
and
inc
xchg
inc
test
push
push
sub
out
insb
mov
fisttps
outsb
ljmp
arpl
xlat
les
inc
inc
add
xor
dec
dec
sarb
sbb
mov
roll
or
pusha
and
inc
and
addl
cmp
inc
leave
jo
xchg
xchg
test
andl
push
xor
xor
sbb
pop
mov
in
jmp
and
mov
lret
into
subb
inc
inc
imul
lods
mov
mov
cmp
ss
and
stos
jne
les
fxam
movsl
mov
loopne
bound
das
fmuls
jbe
fadd
xchg
insb
clc
dec
lock
ret
lds
stc
add
loop
dec
nop
inc
lahf
loopne
ja
cmp
lret
aaa
fxch
pop
cmpsl
addb
and
inc
stos
inc
xchg
sbb
sub
inc
stos
jae
sbbb
mov
popa
ds
fwait
lret
xchg
loopne
xchg
scas
mov
leave
fwait
ret
popf
xchg
ror
fadds
dec
mov
lds
jb
adcb
lret
xchg
mov
cmp
mulb
adc
pop
into
daa
arpl
push
mov
popa
notl
sub
sbb
jmp
dec
add
jbe,pt
jno
popa
or
jbe
in
out
xor
adc
addl
or
jmp
dec
adc
sarl
inc
sub
in
or
xchg
cmp
andl
jecxz
out
data16
push
sbb
mov
test
shlb
inc
popf
dec
push
jno
xchg
shlb
stc
lret
mov
test
lret
and
pusha
je
cmp
loopne
daa
add
mov
outsb
jnp
mov
stc
sbbl
mov
sub
aam
xchg
jecxz
jne
fmuls
fdivrl
xchg
xor
mov
add
sbb
hlt
cltd
add
clc
mov
test
mov
cld
fistpl
sub
adc
mov
add
mov
jp
inc
xchg
mov
and
test
or
fwait
dec
sub
out
and
inc
sbb
sub
in
sub
movsb
sbb
loope
jbe
loop
out
std
das
xchg
gs
and
fstps
dec
add
orl
or
cmc
lds
or
adc
xchg
or
mov
ja
dec
popf
fimuls
stc
mov
mov
andb
cmpsb
adc
or
ss
fisubs
xor
and
pop
or
dec
test
loopne
addl
orl
lods
sbb
in
mov
pop
leave
imul
cmpps
pushw
adc
xor
loopne
sbb
gs
cwtl
int
adc
lret
jae
iret
iret
mov
dec
adc
mov
ret
xchg
loopne
lret
popa
idivb
fsubrp
dec
push
mov
mov
lcall
popf
dec
ret
ds
orl
cmp
inc
ret
mov
popa
mov
or
lcall
movsl
push
loopne
dec
inc
imul
inc
mov
add
leave
sbb
movsl
xchg
into
pusha
push
scas
ret
ja
dec
mov
adcl
push
mov
pop
and
mov
dec
sub
and
lret
stos
sbb
xor
jb
into
js
xlat
pop
imul
sbb
insb
pop
sub
cld
mov
xchg
mov
jb
add
mov
add
pusha
je
mov
fmul
dec
mov
dec
aam
xor
mov
mov
xchg
inc
jp
cld
or
or
in
mov
mov
je
mov
push
cmc
loopne
cmp
nop
pop
or
fcomps
test
movsl
fists
pop
inc
pop
and
sti
daa
fwait
mov
sbb
mov
daa
xchg
filds
outsl
xchg
ror
and
hlt
iret
mov
inc
add
mov
aas
adcl
adc
xor
movsl
lahf
fst
and
sahf
out
pushl
push
xor
mov
es
repnz
adc
and
push
inc
add
push
push
rclb
test
out
mov
sahf
xor
or
xchg
cwtl
out
jnp
sub
push
fcmovne
dec
jmp
pop
push
mov
pop
and
adc
pop
xchg
test
mov
pop
lea
in
xchg
clc
std
cmp
movsb
or
xor
push
and
stos
pop
push
jmp
ss
dec
xchg
push
dec
test
outsl
push
rorl
addr16
test
stc
fimull
jo
push
xlat
xor
cld
out
cmc
into
xchg
out
jmp
cs
out
pop
sbb
jle
pavgb
iret
icebp
pop
jp
leave
bound
adc
lret
cmpsl
jno
pop
test
dec
mov
out
push
popl
pop
shlb
mov
or
add
jg
mov
mov
push
or
lock
orl
insb
int
inc
insb
jmp
jp
pop
sbb
les
mov
pop
data16
adc
shr
jge
inc
xchg
add
or
sbb
cli
or
or
repz
or
jle
or
lods
aam
repz
inc
xor
and
orl
cmp
mov
mov
mov
mov
cmpsl
js
sahf
in
dec
and
xchg
xchg
cs
fs
out
dec
and
and
andl
mov
jecxz
sub
test
fsub
test
dec
and
push
jle
mov
mov
fisttpl
sub
rol
insl
mov
xor
inc
mov
ss
cmc
cld
inc
mov
into
sbbl
in
mov
mov
bound
sbb
inc
add
jno
and
add
push
push
xchg
out
adc
dec
push
push
loopne
jae
mov
fwait
lahf
call
sahf
dec
cli
sbb
add
and
xor
cmovnp
call
inc
push
adc
sbb
test
and
push
lcall
inc
add
pop
fcompl
mov
sbb
adcl
in
add
xchg
loop
jp
jae
rcrb
xchg
adc
shl
cmp
ret
fadds
insb
push
repz
push
cwtl
mov
movsl
leave
mov
outsl
push
cld
scas
xor
mov
imul
lods
fsubl
adc
adc
lock
and
xor
mov
stos
inc
and
sbb
sub
repz
in
pop
jecxz
add
stos
sbb
sbb
lods
sbb
les
sahf
pop
mov
inc
imul
xchg
sub
mov
inc
or
mov
dec
push
push
sub
lds
arpl
gs
push
aas
cmp
inc
dec
dec
ja
push
sahf
adcb
int3
xchg
pop
inc
push
xorl
xchg
lds
inc
cmpl
mov
xchg
xor
or
inc
add
negl
add
fistpl
aas
adc
mov
pop
adc
stc
sarl
jp
adcb
dec
mov
movl
imul
jg
ljmp
mov
cltd
loopne
xchg
inc
sbb
xchg
jb
std
cmp
xchg
sub
ss
fwait
insl
mov
cltd
sbb
movsb
pop
test
test
jle
xchg
inc
or
fwait
sti
lcall
sub
int3
cmp
and
into
cmpsb
aaa
pop
incb
rorl
sbb
mov
push
mov
or
lret
subl
mov
mov
xor
mov
jp
dec
jo
or
mov
mov
or
add
rorb
mov
mov
imul
cmp
pop
adc
nop
idiv
out
pop
inc
loop
push
xchg
lods
jo
adcl
sbbl
lods
mov
dec
mov
cmpsb
aam
add
add
mov
pop
fmul
pop
loopne
add
cltd
out
mov
or
cmpsb
call
and
adcb
fsubrp
xchg
mov
js
hlt
push
sahf
mov
pop
xor
push
leave
adcl
mov
mull
out
sbb
xorb
scas
add
outsl
xlat
daa
in
icebp
imul
mov
into
adc
and
mov
loopne
aas
mov
bound
test
aam
negl
mov
push
les
lods
add
aaa
pop
inc
stc
andl
ja
addb
in
pushf
add
fcoml
sbb
std
mov
push
push
push
test
inc
add
push
sub
sti
xor
xor
ret
cmpsb
cmc
popa
scas
ret
cmp
leave
sahf
arpl
or
sahf
cltd
ljmp
es
inc
adc
sub
jle
add
mov
add
and
lret
mov
push
mov
inc
cmp
test
lea
jne
jnp
mov
inc
sahf
popf
sahf
xchg
mov
sbb
mov
dec
push
addl
cmp
leave
sub
bound
inc
es
mov
orl
loop
mov
push
pop
pop
fucomi
cwtl
fstps
or
mov
bound
test
and
push
mov
cmp
lret
loopne
add
adc
mov
dec
in
mov
dec
sub
push
xor
cmpsb
in
dec
ret
mov
adc
cmp
dec
pop
sub
xchg
decb
in
rolb
enter
iret
shl
push
add
adc
push
insl
sbb
pop
sub
loope
dec
or
addr16
popf
inc
jo
test
or
iret
out
leave
or
dec
jo
xor
mov
mov
jne
add
cmpsb
push
inc
mov
enter
dec
inc
decl
pop
jge
popa
jg
rcr
push
imul
fsubl
int3
sahf
sahf
push
popa
icebp
add
sbb
inc
mov
ss
sbb
pop
inc
out
pusha
adc
popa
adc
xchg
lret
popa
and
adc
int
pushf
cmp
mov
iret
out
sbb
sbb
cld
jecxz
in
js
loopne
sti
inc
xchg
push
int3
inc
sahf
addr16
adc
cmp
icebp
xor
int3
or
cld
sarb
pop
jmp
add
adc
addr16
push
arpl
push
mov
stc
sbb
in
xchg
lock
or
adc
and
push
icebp
add
lock
or
outsl
add
out
sti
xor
mov
dec
mov
dec
xchg
inc
dec
mov
lahf
dec
cmc
cmpsl
popf
push
stos
enter
imul
test
and
in
les
lahf
rorl
adc
xor
lock
or
and
cs
lret
push
xlat
test
sub
in
or
pop
outsl
bound
ljmp
mov
fisttpll
push
jmp
mov
cmp
push
lahf
cmc
xor
push
dec
dec
inc
xchg
jmp
sbb
inc
mov
leave
lea
adcl
shlb
inc
les
inc
in
sbb
mov
inc
and
and
rcrb
movntq
setne
cmp
inc
les
popa
xor
add
push
shl
push
adc
shll
je
pushf
or
repnz
xorl
fsubl
adc
loopne
dec
cmp
push
jmp
pushf
loopne
out
sbb
rdmsr
fwait
add
push
or
and
inc
jns
or
pop
negb
in
xchg
xchg
dec
in
pop
mov
dec
mov
inc
in
fistl
shl
cmpb
clc
lcall
fsubr
xchg
int3
popl
or
lret
data16
shl
push
adc
add
xchg
mov
mov
mov
add
lock
shrb
xor
sbb
add
cmc
sbb
pushf
gs
mov
or
sbb
adcl
in
and
and
add
mov
dec
sahf
stc
rorb
push
aas
shrb
sbb
jno
inc
push
nop
mov
sub
xchg
dec
popa
lods
adcl
or
mov
mov
or
outsb
cld
and
repz
inc
fmuls
or
mov
in
push
pop
int3
es
andl
adc
ret
dec
mov
test
adc
cltd
inc
lds
fwait
scas
outsl
sahf
push
sbb
fnstcw
lock
or
cmovnp
enter
push
dec
sbb
inc
in
sar
in
insb
jb
mov
add
mov
push
jno
dec
movsb
shrl
mov
sub
add
sbb
jl
scas
lds
inc
fiadds
das
mov
aaa
inc
mov
push
inc
pop
test
and
roll
rcr
jge
add
les
test
inc
call
mov
adcb
cmp
add
out
xchg
imul
rcll
mov
lret
and
jge
imul
pusha
dec
adc
mov
add
and
data16
mov
repz
inc
fdivrl
in
inc
test
imul
mov
cs
xor
loop
pushf
dec
mov
jmp
dec
mov
pop
inc
movsb
and
ror
leave
arpl
jne
nop
negl
fstl
xor
lea
sbb
std
sub
in
ja
mov
dec
test
mov
fldcw
push
add
jg
out
xchg
and
les
in
leave
sbb
pop
add
testb
lret
xchg
les
out
lods
jp
dec
jno
pop
out
sub
inc
data16
push
cmc
pop
adc
inc
dec
testl
jb
push
mov
inc
sbb
repnz
add
push
frstor
push
inc
insl
ret
mov
stos
ret
dec
lods
xchg
xchg
push
sti
xor
setno
lds
mov
xchg
mov
jl
jae
std
add
popl
fwait
mov
xchg
push
loopne
cmpsb
sbb
loopne
test
fsubl
test
arpl
inc
adc
dec
mov
sub
mov
mov
mov
out
push
adc
and
stos
adc
add
int3
test
jno
xchg
xchg
dec
iret
ftst
sbb
out
xchg
fmuls
push
mov
pushf
mov
popa
sbb
xor
adc
ljmp
shll
dec
shll
clc
outsb
fprem
fcomp
xor
jae
mov
bound
push
cmp
movsl
mov
aas
fwait
sub
add
std
int3
dec
out
cltd
mov
mov
pop
rcrb
inc
inc
cmp
dec
mov
mov
add
adc
mov
test
jp
into
add
or
in
adc
and
adc
sub
mov
lahf
xchg
pop
test
dec
outsb
in
mov
ficoms
adc
sbb
lods
subb
xchg
jno
add
jmp
mov
push
pop
sbb
inc
push
mov
aam
insb
xor
mov
add
xchg
testb
mov
insb
or
add
les
cmp
outsb
or
pop
jle
inc
or
call
mov
mov
into
or
loopne
sbb
mov
and
data16
ljmp
shll
outsb
lds
mov
mov
mov
leave
into
inc
fstpl
or
push
jo
fs
js
lcall
xor
mov
cmp
addl
mov
or
add
cmp
lds
out
ret
shl
and
or
call
out
sbb
orl
out
sbb
xchg
ret
xchg
add
in
jecxz
orl
or
popa
xchg
hlt
fbld
mov
outsb
or
mov
add
add
pop
and
inc
daa
int3
mov
inc
ret
mov
lds
inc
aam
int
dec
into
inc
test
add
mov
dec
iret
popa
es
jge
lsl
fldenv
dec
push
sbbl
adc
imul
arpl
mov
sahf
jecxz
dec
jns
mov
arpl
push
dec
add
lret
call
test
iret
dec
jo
add
outsl
shr
add
testb
fiaddl
push
jecxz
andl
mov
mov
or
subb
push
and
addl
xchg
int
xor
dec
mov
sti
outsb
lahf
cmp
or
jle
shl
cltd
or
xchg
adc
dec
popf
test
data16
push
xor
addl
xchg
pop
mov
iret
scas
int3
pop
push
jbe
rcrb
bound
mov
sbbl
xor
into
xchg
imull
rcrl
adc
addr16
jle
je
add
pusha
pushf
push
stos
xor
sub
test
stos
push
adc
or
xchg
in
cmp
and
or
pop
cs
rol
lahf
loope
xor
movsl
scas
inc
add
fstp
xchg
les
es
andb
sarb
inc
popl
mov
mov
and
xchg
jge
dec
ss
leave
rorb
cmp
and
imul
dec
leave
ds
jmp
jmp
xchg
xlat
in
mov
xchg
or
addr16
and
push
jmp
push
xchg
cmpsb
jge
out
das
mov
ret
out
jp
dec
pop
dec
out
adc
mov
sbb
pop
inc
into
mov
sub
data16
adc
bound
sub
sub
push
cli
outsb
ja
scas
fbld
sub
adc
sahf
mov
lcall
mov
cmc
aaa
cmc
mov
sub
jmp
addr16
ficompl
lret
mov
inc
bound
add
mov
xor
movl
push
imul
ja
movsl
push
pavgb
adc
pushf
mov
mov
lds
or
movsl
xchg
iret
xchg
cmp
data16
xor
mov
xchg
push
xchg
fsubrl
inc
bound
and
or
or
mov
xchg
mov
push
and
idivb
sub
mov
xchg
pop
test
xchg
or
or
jle
add
adc
test
int3
xor
jmp
popa
subb
addr16
popf
or
mov
lcall
cld
mov
lock
in
mov
sbb
in
cltd
loopne
ficompl
outsl
adc
push
adc
insb
lret
rorl
sbb
out
lret
test
int3
mov
sbbl
xchg
movsl
pop
push
sub
mov
imul
lret
clc
mov
jmp
inc
dec
sahf
xor
jbe
sarb
fs
pusha
cmpsl
sbbb
push
and
repnz
cmp
mov
sbb
fsubr
adc
imul
movsl
scas
inc
iret
dec
in
xchg
inc
cld
pusha
adc
sub
loop
in
popa
mov
loope
repnz
cltd
lea
inc
adc
mov
xchg
sub
jb
push
js
pusha
sbb
popa
push
aaa
cmc
push
mov
or
xchg
adc
jl
lock
inc
or
mov
adcl
mov
mov
mov
movsl
or
loop
or
movsb
pusha
sub
or
jno
dec
mov
pusha
adc
inc
and
push
sub
movsl
push
nop
pusha
mov
sub
andb
inc
test
loope
jb
es
inc
add
fs
dec
bound
ljmp
shlb
aad
hlt
add
xchg
test
sbb
dec
mov
and
adc
hlt
nop
sbb
xor
add
fmuls
and
adcl
data16
sbb
pop
fwait
jae
xlat
test
mov
mov
clc
bound
jmp
pop
repz
rorl
loop
add
mov
repz
xor
dec
daa
mov
loope
lcall
out
popf
popf
sub
push
cmp
or
or
sub
call
leave
mov
xchg
in
inc
lret
xchg
add
sub
mov
fidivl
dec
inc
daa
jb
pop
xchg
rclb
mov
arpl
pop
sub
mov
loopne
cmpsb
sbb
jg
push
jbe
mov
adc
loopne
add
sbb
adc
adc
xor
iret
setp
push
mov
mov
leave
push
mov
add
ja
mov
arpl
xor
dec
xor
mov
movb
adc
les
enter
fistl
xchg
xor
or
and
or
push
add
xchg
mov
icebp
sub
pusha
repnz
add
imul
cmp
mov
cmpsb
mov
sub
push
lock
rcll
jg
push
orl
mov
dec
stos
push
lods
jl
or
mov
aaa
add
leave
add
push
ret
pop
out
xor
xchg
mov
adc
adc
inc
add
mov
imul
push
in
pop
repz
push
jge
adc
addl
sub
arpl
add
test
cmpsl
std
mov
mov
xchg
gs
hlt
sbb
inc
andb
or
push
arpl
mov
das
or
mov
push
pop
mov
push
loopne
fidivl
shlb
loopne
add
mov
repz
jecxz
call
and
into
xorb
lcall
dec
mov
in
mov
push
ret
pop
out
xchg
dec
pop
mov
xorl
add
fiaddl
and
testl
out
pop
inc
into
out
fldcw
lds
or
jno
mov
mov
jg
mov
aad
push
loopne
ret
xchg
push
xchg
loop
lret
add
add
ret
dec
imul
fs
cmc
sbb
adc
dec
cmc
sahf
cmp
movd
pop
test
cmp
jae
clc
jge
xchg
add
adc
paddusb
das
mov
sbb
and
popf
and
or
adc
cmp
mov
pop
cmp
sahf
pop
sub
xchg
fdivs
clc
or
adc
lret
adc
xchg
inc
inc
mov
inc
andl
arpl
icebp
cmp
inc
mov
mov
leave
xchg
jbe
shll
loope
orl
mov
jp
in
mov
xchg
loopne
mov
xor
cs
xor
lahf
roll
shrl
and
mov
test
push
inc
hlt
or
inc
scas
sbb
or
test
ret
or
sbb
insb
testb
orl
sub
gs
lea
bound
bound
or
adc
push
dec
movl
cmc
push
mov
les
inc
shrb
inc
int
add
rolb
outsl
push
jb
iret
xchg
sbb
xchg
adc
loop
or
aas
add
cmc
sbb
cmc
inc
je
sub
bound
les
and
fcmove
int3
cmp
or
in
in
jp
push
fbld
push
cwtl
loopne
or
pop
test
xchg
inc
lcall
adc
js
adc
add
sbb
sub
inc
sti
mov
out
ret
mov
or
adc
ljmp
daa
cmpsl
mov
sti
jo
pop
insl
inc
scas
push
and
dec
push
and
imul
dec
adc
cmpsl
and
xabort
xchg
and
push
test
adc
sub
adc
jns
xchg
sub
fistpl
sub
rol
mov
xchg
add
pop
mov
jecxz
pop
insl
jns
outsl
sub
rep
divb
or
call
sub
orl
and
dec
arpl
adc
jo
dec
scas
rolb
scas
mov
aam
add
outsl
lods
lahf
add
ds
jb
fwait
push
aas
mov
mov
cmp
mov
orl
leave
mov
out
iret
pop
sbb
cltd
push
jle
movsl
mov
fsubs
and
pop
mov
dec
sar
inc
daa
xchg
add
es
leave
ja
test
movsl
jl
cmp
jbe
pop
mov
push
xorl
pop
dec
stos
bound
out
mov
push
mov
test
mov
in
std
fnstcw
xchg
outsl
push
mov
xchg
rcll
inc
fldt
test
mov
inc
add
push
fsubrl
mov
xchg
mov
and
test
dec
or
sbb
fsubrl
push
mul
lods
and
push
ljmp
das
mov
popa
pop
inc
les
stos
jmp
in
xor
test
lods
xor
inc
add
insb
add
sbb
inc
lahf
add
xchg
push
je
gs
lahf
and
push
pop
push
pop
push
sub
loopne
filds
ret
cmp
adc
stos
sbb
add
cs
out
xchg
mov
xchg
mov
or
or
inc
stos
adc
test
mov
push
sbb
inc
fildl
ja
mov
arpl
je
dec
fcompl
pushf
in
cmpsb
xor
mov
mov
sbb
and
arpl
inc
push
cmp
or
cmp
and
mov
scas
test
mov
roll
lahf
xor
loope
and
aam
in
dec
inc
lcall
mov
push
fisubrl
cmp
shrl
int
cmp
rep
in
mov
dec
repnz
inc
cmpsl
inc
loop
pop
or
cmpsl
gs
outsb
inc
mov
push
divb
js
xchg
and
fs
add
adc
roll
sbb
scas
dec
popl
lods
mov
dec
and
xlat
sbb
add
pop
jmp
pop
sbb
jmp
jmp
or
add
adc
sbb
repz
test
ljmp
and
dec
mov
xchg
xchg
lea
push
pushf
jne
adc
or
dec
push
push
gs
fsubrl
andb
sbb
lcall
mov
mov
test
or
lea
test
dec
and
adc
ret
mov
popa
inc
xchg
or
pop
popa
mov
adcl
popa
decl
jmp
mov
mov
cmp
repnz
shll
add
int3
inc
in
fs
mov
rolb
push
movsb
xchg
testl
mov
lret
fsubl
cmp
push
jne
repnz
mov
pop
mov
cltd
lahf
sbb
repz
hlt
fs
scas
jle
inc
or
mov
jl
nop
ljmp
cwtl
ror
pop
push
cmp
pop
orl
xorl
cmpl
out
jnp
cmpsb
mov
dec
sbb
iret
pop
daa
sub
mov
mov
out
jg
push
or
shrb
subb
cltd
in
adc
inc
gs
int
movsl
mov
add
sbb
out
aas
in
adcl
cs
sub
in
push
lea
lods
dec
test
lods
xchg
cmc
dec
and
inc
dec
bound
dec
int3
dec
out
pop
dec
jecxz
lock
in
xchg
mov
inc
test
lret
dec
in
or
and
clc
js
test
cmp
int3
je
packssdw
inc
test
shll
push
jle
lcall
inc
dec
xor
mov
ja
roll
lret
aam
lods
sbb
mov
out
test
cmp
imul
shr
xchg
adc
add
inc
enter
add
adc
push
adc
popf
or
and
sbb
add
outsb
cs
pop
pushf
or
pop
jge
test
dec
imul
nop
ret
add
mov
out
pop
rcll
mov
addb
aaa
cmp
pop
out
mov
mov
enter
gs
fmulp
sub
repnz
or
rorl
mov
movsb
arpl
mov
xchg
cmpsb
adcl
xchg
rorl
pop
scas
loope
and
incl
jl
mov
or
xchg
test
mov
mov
inc
out
test
call
or
lahf
dec
es
mov
fbld
filds
aas
jo
mov
pop
out
mov
orl
lret
cs
mov
push
leave
jecxz
leave
nop
sbb
imul
bound
ficoml
pop
idiv
xchg
or
mov
jecxz
cmp
jno
xchg
xchg
inc
lahf
ds
leave
movsl
xchg
clc
xchg
mov
pop
insb
jbe
imul
inc
sbb
push
jo
inc
ds
popa
lock
leave
mov
or
iret
cmp
stos
and
sub
dec
pop
adc
dec
lds
mov
mov
hlt
mov
mov
mov
and
shll
lea
orb
stos
filds
push
sbb
jle
sbb
mov
ds
cmpsb
test
aam
hlt
pop
mov
loopne
test
cmp
loop
imul
mov
fwait
sbbl
pop
or
ret
ja
inc
inc
popa
cmpl
in
sti
cmpsl
pop
jne
cmp
in
xchg
fldt
lods
jne
lds
xchg
xchg
sbb
xabort
enter
push
jae
jp
adc
adc
mov
mov
fimuls
imul
loope
or
cmpl
sahf
dec
test
fimuls
in
push
jmp
fs
into
add
cmp
inc
sbb
add
daa
sbb
mov
mov
or
mov
daa
xchg
mov
xor
test
popf
hlt
in
aas
cwtl
hlt
mov
lahf
jbe
xor
ret
test
bound
in
loope
sahf
mov
mov
andb
aad
imul
cmp
sbbb
and
jmp
les
inc
and
ja
dec
sti
ret
jb
mov
mov
pop
fucomip
loop
or
sbb
mov
divl
xor
lods
xchg
dec
inc
xor
out
xchg
pusha
pop
in
mov
les
sbb
or
jb
sbb
xchg
push
fs
fldt
sub
sbb
adc
bound
sub
sbb
loope
out
mov
repz
test
and
addr16
test
lahf
jne
sbb
clc
leave
mov
xchg
rcrl
or
xchg
aam
sbb
inc
pop
fmul
cmp
add
jecxz
mov
lahf
jecxz
inc
test
mov
popa
dec
daa
gs
adcl
addr16
gs
or
rcll
mov
mov
cmovae
sbb
mov
lea
loopne
cmp
mov
mov
mov
roll
push
inc
mov
mov
mov
les
cld
mov
xor
mov
stos
les
xchg
sbb
mov
loopne
jne
push
pushf
pushf
ss
or
inc
sub
test
add
mov
and
scas
sub
fucomip
std
pop
cmc
mov
pop
mov
adc
cltd
outsb
dec
add
sub
and
mov
or
enter
out
aas
aas
cmc
sub
out
test
mov
cmpsb
mov
movsl
lahf
cmpsb
jle
fldenv
mov
xchg
jae
inc
popf
pop
dec
ljmp
ljmp
shl
mov
jno
in
add
dec
outsb
repz
cmp
mov
ret
or
ret
and
mov
jns
sbbl
xlat
inc
mov
lea
pop
jl
jno
dec
mov
and
mov
or
mov
lock
sub
test
and
insl
mov
test
or
popf
xchg
add
push
fldt
rolb
adc
jecxz
in
fcmovnu
xchg
gs
mov
push
xor
imul
xor
lcall
cltd
push
gs
mov
testl
enter
mov
cmp
push
jae
popl
xchg
push
mov
mov
mov
and
push
sub
mov
jb
shll
pop
adc
lret
lahf
xchg
das
xchg
lahf
xchg
mov
and
call
xchg
and
cmc
dec
xorl
data16
adc
lock
dec
add
test
mov
add
into
xchg
cwtl
test
dec
mov
xlat
inc
cmpsl
inc
jle
clc
rorb
push
subl
loope
adc
in
xor
repz
fists
cmpsb
add
ss
shll
xchg
fwait
add
cmp
lods
sahf
in
sub
popa
xor
add
loop
enter
inc
cs
sub
test
pop
mov
into
pop
stos
dec
pop
call
data16
push
dec
jge
inc
iret
dec
lods
pop
xchg
mov
push
scas
jecxz
jne
xor
dec
adc
or
sbb
adc
mov
sub
cltd
sub
leave
icebp
add
xor
xchg
cmpsb
shll
and
popf
shll
roll
add
adc
icebp
je
xchg
xchg
out
adc
int3
xchg
sti
or
leave
inc
push
push
leave
inc
out
icebp
dec
xchg
dec
add
adc
sbb
adc
sahf
add
add
xchg
adc
popa
xchg
jle
lea
imul
out
adc
mov
leave
adcl
shrb
xchg
jnp
adc
pop
mov
ficoml
push
lea
mov
in
lahf
pop
and
mov
dec
lock
jns
test
pop
add
mov
popf
jae
cltd
add
iret
inc
loop
adc
es
add
jnp
enter
out
xchg
xchg
or
mov
std
xor
xorb
add
sarl
sbb
addl
dec
test
daa
inc
push
cmpsl
dec
int
lods
add
push
xchg
shll
frstor
bound
mov
sbb
and
cmpsl
test
add
and
cmpsb
ret
les
loop
add
or
push
out
daa
xor
xor
mov
mov
popa
jb
push
test
jecxz
cwtl
fwait
inc
into
lret
adcl
pop
nopl
mov
xchg
incl
lock
in
loope
jo
add
pop
inc
add
mov
shlb
inc
inc
xchg
aam
ret
icebp
mov
push
jg
movsl
lret
mov
dec
or
loopne
jbe
int3
mov
fs
lea
out
xchg
mov
xchg
push
ret
lods
or
lods
add
imul
or
and
mov
test
mov
orb
inc
xchg
lret
mov
sub
mov
adc
xor
test
mov
mov
xchg
adc
ret
xchg
cmp
ret
mov
stos
out
adc
xchg
inc
cwtl
push
push
push
mov
lods
sub
xchg
call
leave
add
and
xchg
jmp
popa
gs
mov
jmp
cld
adc
and
xchg
pop
imul
leave
mov
or
fldenv
test
mulb
mov
adc
sub
add
cmpsl
test
xchg
call
sahf
popf
cmc
mov
mov
fadds
mov
incb
test
sub
loop
es
cmpsb
movsb
cmc
sbb
mov
sarl
fistpll
mov
xor
sub
in
cmc
dec
cli
repnz
push
je
fs
subb
xchg
add
test
arpl
shl
push
cltd
push
pop
xor
push
or
pop
neg
pusha
arpl
dec
ret
pop
dec
paddsb
push
sub
or
mov
out
push
pop
out
lock
jnp
outsl
lods
out
popl
mov
mov
mov
call
fmulp
aad
les
loope
int
bound
push
cs
int
jnp
int
pop
dec
push
dec
and
fistl
adc
sbb
jbe
sbbl
adc
mov
sbb
jnp
cmpsb
lret
add
or
lods
loopne
sub
push
jp
test
push
xchg
lret
popf
pop
lea
mov
add
cmovg
mov
adc
addr16
mov
push
cmp
xchg
ljmp
jo
sub
lahf
out
jae
pop
pop
ljmp
in
inc
fwait
mov
mov
aam
leave
inc
arpl
fdivr
and
stc
mov
jno
mov
push
int3
test
mov
mov
xor
push
inc
into
adc
adc
mov
and
cmp
cmp
jo
ret
into
pop
sbb
jo
out
pop
clc
jo
gs
fbstp
jo
push
shll
inc
mov
jmp
push
and
xchg
adc
outsb
lds
jb
jg
cltd
dec
adcb
adc
xchg
pop
sbb
dec
repz
pushf
fists
notb
ret
icebp
mov
es
lahf
fwait
push
xchg
ja
pushf
sub
cmc
cld
push
mov
mov
arpl
setae
jmp
sbbl
es
mov
cmpsl
lea
adc
lcall
jno
cmpsb
mov
mov
push
stos
test
add
mov
mov
adc
xchg
popl
or
into
xchg
lret
rcr
adcl
outsl
and
add
test
cmp
fldcw
add
outsb
lods
jecxz
xchg
repnz
shl
gs
shll
ss
xor
push
notl
xor
les
dec
test
incl
mov
xchg
test
cmp
les
sub
inc
aad
adc
jnp
cs
mov
sub
add
stos
mov
gs
loope
lea
add
fidivrs
shll
xchg
outsb
or
xor
into
ds
adc
add
add
repnz
cmp
or
jle
pop
jmp
jecxz
adc
sub
add
aas
sub
or
sbb
adc
scas
and
pusha
dec
xchg
idivl
inc
add
das
lock
mov
loope
insl
dec
fistpll
push
sub
pop
xchg
sti
push
leave
inc
test
xchg
rorb
shll
clc
mov
int
add
mov
add
xchg
es
cwtl
test
pmaxub
movsb
les
imul
shlb
xor
mov
lret
xchg
push
xchg
adc
sub
inc
scas
cltd
es
test
mov
adc
inc
mov
cwtl
notl
ret
sub
add
jg
xchg
ficoms
stc
mov
mov
xchg
sub
outsl
shr
xorl
sahf
lret
add
cmp
mov
pop
and
dec
andl
scas
dec
inc
mov
xor
out
or
pushf
cmp
jle
adc
mov
test
mov
dec
enter
jmp
xor
loopne
popf
xchg
cmp
in
push
push
imul
adc
sub
rorl
lds
repz
inc
es
pop
or
sbb
aaa
xchg
dec
pop
int3
in
inc
or
add
xchg
mov
addb
adc
mov
outsb
cmp
std
out
lea
jmp
jne
popa
pusha
sub
inc
inc
popa
ret
aad
jl
pop
leave
pushf
jbe
add
sbb
mov
xchg
lea
jmp
das
mov
lcall
add
xor
ds
cld
lods
dec
in
pop
mov
jo
mov
pushf
popa
les
mov
int3
push
mov
push
addr16
adc
notl
or
sbb
mov
movsl
push
add
mov
and
sbb
jecxz
mov
inc
ret
add
jle
add
ror
xchg
cmpsb
xchg
jb
dec
mov
or
inc
xlat
pop
pop
orl
aad
ljmp
jle
inc
or
pop
or
sbb
or
mov
mov
mov
out
bndldx
fsubrl
add
mov
adcb
cltd
sbb
orl
popf
iret
cmp
and
out
push
mov
mov
iret
repnz
decb
cmc
pop
inc
lods
sarl
and
mov
jns
fs
and
fwait
mov
mov
enter
add
into
add
sub
loopne
enter
inc
adc
jle
repnz
dec
fxch
sbb
test
jb
lret
pop
mov
add
pop
jmp
mov
and
daa
fbstp
lock
test
mov
and
inc
out
sbb
test
popa
pop
mov
inc
dec
sub
rcr
lret
inc
push
adc
adc
idivb
lds
xor
stos
rcl
mov
popf
cmovb
filds
add
es
and
shl
pop
jne
inc
ficoms
push
test
mov
xchg
into
jo
lock
int3
stos
outsb
dec
sbb
jge
add
movsb
push
sbb
adc
inc
into
push
xchg
adc
mov
into
push
mov
push
cli
adc
por
lahf
test
inc
xor
scas
cmp
mov
mov
ss
movsl
pop
fwait
mov
and
sbb
mov
sub
mov
test
and
sbb
sbb
cmp
loope
inc
test
inc
addr16
shll
pop
sbb
add
mov
testb
mov
roll
in
fstl
pop
push
dec
push
push
dec
scas
arpl
rol
enter
lret
dec
std
sbb
stos
jb
shll
xchg
pop
icebp
int3
cmp
add
fists
lret
in
lahf
and
imul
clc
popf
cmp
dec
cmp
test
hlt
or
jp
xor
sbb
dec
sbb
mov
lea
sti
ret
lahf
fwait
or
dec
mulb
mov
lea
mov
pop
js
sbb
xor
mov
ljmp
fidivs
lret
dec
mov
ljmp
ss
lret
pop
mov
jae
daa
ss
fbstp
bound
ss
cs
mov
inc
mov
dec
psubb
inc
add
shr
pop
movl
add
andb
test
inc
adc
jb
int3
sub
leave
push
fcompl
sub
dec
out
adc
pop
ja
adc
or
addb
add
xchg
sub
mov
push
lahf
or
lods
pop
inc
lahf
movsb
lock
ljmp
inc
push
pop
mov
add
pop
and
cmpsl
lcall
fsubs
jb
lret
int3
inc
or
and
addr16
lea
mov
push
sub
mov
gs
cmpsb
sahf
test
je
pop
loopne
sbb
or
imul
pop
lds
insb
dec
and
cld
jo
jmp
test
das
push
adcb
xchg
hlt
hlt
in
sbb
int3
cld
dec
icebp
call
sti
popa
jae
adc
add
sahf
add
sub
mov
jecxz
and
test
insl
and
inc
dec
stos
incb
or
aad
pop
jmp
ret
inc
adc
fldl
imul
out
lahf
mov
and
loope
push
and
add
xor
lret
xor
ljmp
jns
lahf
arpl
pop
inc
hlt
xchg
in
mov
adc
loope
add
shlb
bound
das
mov
gs
movsl
push
dec
or
mov
stc
bound
lea
mov
cli
lret
outsl
pop
add
sbb
and
shll
xorl
mov
adc
pop
or
or
dec
lds
fbld
mov
enter
mov
or
bound
rclb
push
mov
jno
mov
lahf
cmp
mov
push
arpl
aad
pop
enter
lods
push
or
sbb
testl
test
mov
fsubs
lea
std
filds
xlat
loope
daa
mov
popa
mov
mull
mov
movsl
sub
cs
aaa
dec
mov
mov
add
aad
out
xchg
insl
jmp
sub
into
inc
jnp
mov
mov
mov
cmp
ficoms
mov
xchg
cld
inc
cmpsl
xchg
imul
gs
pop
cmpsl
and
pop
popf
xchg
in
mov
movb
repnz
test
jle
mov
out
sti
xchg
push
sbb
mov
addb
xorb
imul
lds
dec
lcall
pusha
jge
aas
andb
test
aaa
movsb
popf
push
imul
lahf
test
mov
rolb
pushf
inc
xchg
aaa
mov
adc
mov
xchg
or
sbb
jnp
cwtd
shll
loope
inc
inc
sar
insb
out
aad
shll
into
sub
inc
push
sbb
ja
shll
and
mov
into
pop
xor
fsubrs
es
std
jb
sahf
mov
fwait
loopne
jl
cmp
out
je
push
add
or
xchg
adc
jnp
addr16
mov
test
stos
test
jmp
cltd
fimuls
ss
dec
rorl
lcall
xchg
imul
push
ret
sti
outsb
scas
jge
popf
lock
dec
add
pop
dec
fisubrl
add
bound
in
cmp
lcall
loope
pop
pop
mov
and
mov
mov
cwtl
loopne
sub
fdivs
dec
and
add
pop
sbb
arpl
mov
icebp
out
fmuls
out
mov
lock
int3
negb
inc
sbb
or
outsb
orps
lret
xchg
xor
add
fcoml
cmp
in
jo
cs
push
sar
lret
rorb
push
pushf
push
jo
popf
or
add
jno
aad
iret
sub
xlat
sti
add
shrb
add
push
sbb
xor
push
jne
es
mov
adc
lea
or
adc
inc
mov
mov
push
shrb
mov
add
and
mov
ret
adc
jnp
test
and
and
ss
pop
jge
ss
add
add
mov
test
stos
daa
jno
lods
rcr
adc
jg
dec
sti
lahf
cmp
xlat
push
bound
mov
mov
inc
out
into
imul
inc
mov
dec
inc
js
imul
sahf
and
jmp
adc
aam
jmp
adc
inc
nop
pusha
xor
or
shll
inc
loopne
adc
jbe
dec
popa
add
gs
icebp
mov
xor
ficoms
cs
xor
dec
push
sti
cmp
push
paddusb
push
inc
pop
subl
or
adc
xlat
push
add
pop
jecxz
dec
cwtl
pop
push
dec
push
enter
pop
out
inc
mov
mov
loopne
push
pop
mov
cmp
jae
cmp
pop
add
sbb
cld
cmp
out
mov
add
xchg
leave
adc
jnp
clc
ljmp
pushf
lret
mov
mov
pop
add
lock
adc
pop
dec
enter
push
push
mov
xchg
insb
adc
ljmp
sbb
ret
test
shl
mov
lret
sbb
mov
test
mov
outsl
xor
es
dec
xchg
xlat
sub
push
movsl
lds
aas
and
inc
inc
loope
data16
adc
sub
adcl
addr16
fidivrl
call
push
addr16
cltd
in
enter
pop
nop
inc
scas
mov
pop
cmp
mov
scas
shrl
dec
pop
scas
or
push
mov
xchg
adc
in
pusha
or
cli
mov
adc
and
mov
cwtl
arpl
shll
lea
add
sbb
xchg
mov
aaa
fwait
push
xlat
add
lcall
ficoml
inc
dec
sbb
add
scas
gs
push
bound
stc
mov
xorl
test
pop
imul
mov
cmpsb
loop
ret
mov
inc
mov
pop
mov
cmovb
inc
int
cmp
xor
pop
les
es
inc
loop
and
pop
fdivr
push
mov
or
pop
xchg
movsl
and
and
out
mov
jle
sbb
add
lfs
jge
xchg
adc
in
mov
inc
es
mov
add
and
lea
out
mov
jmp
in
xchg
xor
je
in
inc
inc
jecxz
data16
inc
mov
pop
and
loopne
jne
sbb
movsl
adc
add
cltd
and
shlb
lods
mov
mov
jle
xor
ljmp
in
add
stc
cltd
mov
push
int
inc
mov
lret
ljmp
push
fisubl
lret
dec
or
adc
stos
cmp
clc
movsb
adc
add
mov
test
mov
mov
jmp
ds
scas
imul
les
loop
clc
int3
mov
add
ss
inc
mov
insb
loopne
arpl
xchg
test
sub
ljmp
jne
sahf
sub
push
popf
add
xor
mov
in
mov
cltd
xchg
or
cli
ja
or
shrl
js
test
fistps
jle
les
lock
mov
testb
call
fcomps
xor
mov
cwtl
negb
in
dec
repnz
push
mov
loope
and
pop
hlt
inc
mov
shll
xorl
cld
test
movsb
jg
cs
aas
mov
push
jp
les
insb
pop
ljmp
cmc
add
mov
ds
add
ret
ljmp
mov
je
or
add
outsl
lods
or
inc
mov
lods
xchg
rcrl
inc
mov
gs
and
sahf
mov
leave
mov
sub
loopne
lret
mov
lret
repz
mov
and
insb
out
popa
jmp
sub
div
xchg
ljmp
push
shrb
and
sar
dec
or
dec
fdiv
and
mov
jmp
and
cltd
mov
das
stos
fcoml
xor
cltd
mov
mov
jnp
mov
adc
xor
xor
lds
mov
add
add
lret
sub
mov
daa
add
mov
idiv
stc
pop
and
dec
inc
aas
repz
add
and
cltd
lea
or
lods
outsl
imulb
call
dec
lea
sbbl
xor
push
ret
inc
stos
call
cltd
inc
pushf
dec
mov
push
cmpsl
mov
sub
or
mov
xor
inc
cli
mov
popa
in
and
and
xlat
jae
insl
popa
std
add
pop
inc
cwtl
test
add
mov
add
inc
pop
sbb
push
mov
cmp
pop
hlt
cmp
push
xchg
out
and
sub
add
add
loop
inc
pop
jge
lahf
rclb
xchg
push
xchg
sub
xor
dec
int3
and
int3
add
rcll
dec
add
stos
test
clc
lahf
push
inc
in
dec
and
addb
and
pop
cwtl
mov
ja
push
ljmp
jge
imul
lods
in
or
mov
out
or
mov
in
add
loope
jb
mov
inc
cmp
clc
es
call
cmpsb
inc
iret
and
cmp
push
sub
loope
inc
push
outsl
inc
ja
in
jnp
mov
xchg
aaa
dec
xor
or
mov
mov
xor
mov
jp
rcll
jmp
jne
jo
pop
pop
loopne
incl
mov
dec
mov
and
ljmp
mov
xchg
mov
sub
sub
ret
cwtl
sbb
fwait
adc
popa
cmp
mov
add
fdivs
mov
inc
push
outsb
or
sub
or
add
mov
cwtl
imul
pop
bound
pop
xchg
xchg
dec
rclb
roll
add
add
and
scas
xor
jecxz
jnp
inc
push
add
jl
and
add
mov
inc
fs
lds
in
int3
sub
daa
push
das
pop
dec
mov
lock
and
out
lock
mov
insb
and
int3
movsl
testl
loop
dec
js
test
add
sbbl
mov
fld
in
repnz
dec
daa
mov
add
mov
pop
sub
leave
or
pop
scas
pop
and
inc
outsb
cmp
bound
roll
les
stos
adc
and
mov
fwait
inc
jecxz
subl
xor
pop
add
and
out
pop
sbb
lds
xor
stos
int3
and
jecxz
testb
pop
and
addl
dec
jg
add
jns
sub
adc
test
test
mov
test
cmp
push
pop
aam
lahf
clc
int
std
scas
rclb
addb
mov
dec
daa
mov
and
rolb
push
inc
mov
sbbl
xlat
mov
outsb
lods
fildl
push
mov
gs
inc
loop
adc
mov
subb
scas
xorb
xor
out
in
mov
fs
xchg
jg
cmp
jle
mov
push
mov
mov
enter
add
shrl
mov
cmpsb
fs
xor
mov
dec
jnp
out
repnz
movsl
or
cld
add
and
test
push
dec
sub
dec
in
jle
jmp
mov
inc
aad
lea
pop
test
jmp
xor
sub
js
add
cmp
inc
or
dec
pop
xchg
subl
push
shl
and
je
stos
mov
cmp
and
mov
decb
test
mov
sub
out
xor
jg
and
dec
test
mov
es
sub
inc
enter
xchg
inc
push
mov
enter
imulb
jb
mov
adc
fs
sub
adc
bound
sub
add
xchg
jle
dec
mov
dec
mov
sub
pop
push
subl
or
push
in
xchg
jl
popa
ficoml
sti
bound
or
jnp
cmp
in
cmp
push
mov
cwtl
mov
jae
fiaddl
test
inc
sub
ret
movsb
add
jp
xchg
lods
sub
xchg
rol
mov
inc
js
dec
mov
or
sub
mov
pop
into
dec
data16
fidivs
dec
add
rcr
sub
loopne
add
sbb
jae
xchg
add
lods
fwait
call
inc
add
push
push
fiaddl
mov
and
adc
add
loopne
push
popa
mov
mov
pop
test
xor
hlt
rcll
rorb
adc
sbb
sbb
and
mov
and
inc
add
sbb
mov
lea
les
sbb
ret
addb
inc
les
xor
lods
inc
loop
jl
adc
push
pusha
sbb
repz
and
xchg
stos
add
ja
mov
add
cltd
add
mov
js
xchg
into
fmuls
loopne
lods
aaa
rol
inc
and
dec
stc
jecxz
and
add
in
test
lds
test
mov
cltd
repz
andl
adc
inc
lds
fs
stos
movsb
inc
mov
cmova
stc
pop
and
arpl
cmc
movsl
xchg
repnz
and
lcall
aas
sub
subl
fcmovb
or
adc
iret
jae
and
ja
sub
movsb
jecxz
sbb
adc
and
inc
push
pusha
xchg
add
pusha
inc
xchg
popa
scas
mov
in
xchg
mov
add
insl
arpl
out
movsb
sahf
call
in
outsl
sbb
sbb
pop
in
dec
sbb
push
daa
mov
or
jmp
fdivr
sbb
cmpsb
cmp
test
out
test
sbb
adc
mov
mov
cmp
cltd
outsb
adcl
sbb
pop
and
adcl
dec
sbb
lds
mov
sbb
mov
inc
mov
xchg
xchg
xor
pusha
mov
xorb
subl
sbb
loopne
xor
mov
rcll
mov
fdivs
push
xor
adc
mov
pop
mov
mov
cwtl
dec
mov
adc
cs
cmp
or
and
ret
add
repz
loope
inc
mov
sub
xchg
xchg
bound
jne
enter
push
ljmp
mov
andb
stos
std
push
xchg
lods
orl
jbe
test
push
jle
fwait
movsl
xchg
mov
xor
test
and
jne
andl
and
call
movsl
push
xor
jl
cwtl
pusha
xlat
add
adc
mov
cmp
inc
enter
das
and
fwait
test
cltd
mov
adc
xchg
jnp
test
out
stos
push
adc
addr16
pop
or
shl
loope
mov
sahf
sbb
add
and
jnp
cmp
inc
or
inc
dec
xchg
ret
xor
mov
and
nop
shlb
mov
mov
in
xor
or
mov
clc
jb
adc
push
sbb
xchg
aad
repz
popf
movsb
in
and
xlat
xlat
add
mov
mov
shr
lret
hlt
or
xor
jb
scas
dec
pop
int3
out
das
lret
enter
push
es
bound
lock
mov
sub
dec
push
mov
xorl
mov
inc
sub
sub
sbb
mov
popf
movl
lock
outsb
push
and
jae
nop
mov
or
out
and
imull
jns
sub
xchg
cmp
push
adc
xchg
and
mov
add
add
inc
push
inc
aas
addb
andl
repnz
test
lock
dec
scas
arpl
pop
pop
lret
cmp
insb
pop
sbb
repz
mov
xor
or
stos
ficomps
scas
add
and
orb
inc
leave
push
stos
ds
or
pop
inc
add
test
out
int
xchg
aam
or
sarl
arpl
inc
and
push
cmpl
mov
pop
out
and
jbe
in
push
jo
ja
aas
stos
cmpl
int3
dec
inc
jmp
adc
mov
ss
pushl
jne
cmp
pop
push
adc
and
sbb
jno
mov
or
xchg
sbb
jbe
mov
sub
inc
sti
dec
adc
lods
xor
lea
mov
xor
sub
and
ret
mov
dec
jb
js
enter
pushf
daa
dec
sarl
and
cs
loope
cwtl
dec
and
mov
push
lret
adc
fstpt
add
mov
loopne
insl
add
mov
out
test
cwtl
and
add
sub
adc
in
cmpb
mov
mov
scas
minps
test
insb
in
jb
add
xor
mov
and
movsl
leave
jae
add
mov
popf
push
call
mov
lea
shrl
ret
inc
sbbl
lock
test
out
xchg
call
cld
jmp
and
les
iret
mov
mov
int
punpcklwd
and
cmp
aam
lret
sbb
xchg
add
jo
test
rolb
push
clc
mov
lock
fdivl
bswap
adc
and
imul
xchg
add
les
and
rclb
push
arpl
push
dec
xchg
adc
dec
dec
xor
mov
adc
xchg
xor
loopne
add
pop
orl
push
aam
dec
jno
fisubrs
dec
mov
push
xchg
addb
hlt
cmp
add
adc
lret
push
mov
notb
jb
xchg
mov
adc
dec
add
mov
and
xor
and
adc
inc
cmpsb
add
test
loop
mov
jb
or
clc
roll
cmpsb
push
mov
popw
dec
adcb
icebp
scas
mov
jne
dec
xchg
les
inc
add
fwait
push
cltd
push
jno
sbb
hlt
rcrl
dec
mov
dec
fsubr
loopne
or
dec
jns
rorl
mov
repnz
jecxz
pop
test
leave
mov
xor
fmuls
mov
push
shll
aaa
cmp
icebp
loop
cmc
lea
and
test
repz
dec
push
xchg
es
dec
lea
mov
in
lock
cs
sbb
mov
xor
push
shll
add
int
insb
arpl
fmulp
or
leave
xor
adc
aad
sbb
mov
cmp
loop
int
xorb
xor
sbb
cltd
in
das
lock
dec
sub
fs
std
test
es
jo
pop
xchg
nop
leave
mov
xchg
ljmp
xorb
sbb
cmp
add
xor
orb
cmp
out
leave
negb
adc
outsl
adc
dec
dec
push
lods
dec
or
mov
xor
jle
ret
push
jp
sub
xor
inc
push
rorl
fisttpl
leave
aaa
sbb
mov
sahf
test
push
xor
dec
and
movsl
and
inc
mov
outsl
mov
pop
adc
push
gs
in
pop
sbbl
jno
int
mov
dec
xchg
inc
pop
mov
popa
xchg
enter
cmc
js
mov
test
and
arpl
push
daa
dec
das
xlat
fs
mov
xchg
mov
jno
testl
jecxz
adc
cmpsl
lret
sbb
inc
and
test
and
mov
adc
icebp
add
pop
push
test
adc
das
xchg
add
lods
xchg
mov
ret
popf
aaa
imul
mov
xchg
ret
and
pop
testl
loope
imul
xor
pop
mov
cwtl
mov
xchg
or
adc
fcoms
and
clc
sarl
mov
dec
xchg
mov
and
or
and
test
xor
pop
mov
adc
imul
xor
push
ret
mov
push
xchg
test
mov
push
sti
xor
ljmp
pop
ret
sbb
popa
lods
mov
push
xor
mov
xlat
test
ret
arpl
jb
ret
push
adc
cmpsb
imul
dec
cmp
inc
push
and
mov
mov
mov
popa
jmp
shlb
add
mov
sbb
or
sub
mov
xor
and
or
or
add
jmp
lea
mov
int3
push
repz
adc
xchg
mov
imul
xchg
pop
inc
shl
push
mov
or
clc
pop
cltd
in
lcall
test
push
int3
add
mov
orl
xchg
push
hlt
inc
xlat
scas
adc
test
jne
dec
ret
testb
dec
mov
popa
push
mov
sub
and
xor
andl
add
cli
mov
and
cmp
in
and
or
test
les
popf
sub
movsb
xchg
dec
add
shrb
iret
rorl
cbtw
lds
loope
xchg
push
inc
adc
mov
mov
testl
in
in
xor
sub
bound
jne
rcrl
add
test
in
imul
push
popf
fs
in
xor
loop
mov
and
in
popa
rcr
imul
lea
mov
pop
mov
xchg
sub
into
push
int3
xchg
xchg
inc
rcrl
jne
repz
or
insl
mov
imul
xor
divps
outsb
rorl
movsb
xor
and
and
sbb
mov
sub
push
popa
mov
xchg
add
xchg
fstp
out
mov
loopne
sub
mov
add
xchg
jae
ffreep
sbb
popa
lods
andb
pop
movb
in
add
gs
fildl
add
adcb
cmpsb
nop
push
es
sub
inc
adc
and
xor
adc
push
mov
xchg
dec
xchg
daa
push
mov
ret
test
pop
in
mov
mov
arpl
push
das
fdivrs
mov
les
in
xor
dec
xor
loopne
xchg
cmp
push
iret
stos
mov
and
mov
in
cmpsb
jmp
neg
inc
push
rorl
mov
dec
mov
insl
or
rorl
shlb
xchg
push
mov
add
orl
or
test
dec
xchg
les
outsb
pop
cmpsl
lea
pop
or
insw
test
roll
xchg
and
adc
bound
addb
add
aaa
movb
or
cltd
jecxz
out
das
out
mov
xchg
test
and
pop
fs
jmp
in
es
rorl
xorl
xchg
push
push
bound
jns
dec
nop
aaa
repz
or
pop
pop
addr16
outsb
inc
xorb
outsl
pop
pop
adc
aaa
cltd
push
jae
enter
add
push
mov
fsubr
rorb
in
dec
mov
dec
inc
es
outsl
or
ja
and
mov
les
loopne
xchg
aad
add
push
inc
test
imul
iret
adc
pop
loope
aas
mov
xchg
xchg
adc
outsl
or
addl
inc
inc
pop
mov
int3
xor
dec
leave
jne
xor
out
fstpl
inc
cld
test
add
lret
xchg
push
sarl
mov
lea
in
data16
mov
adc
fisttpll
jle
or
xchg
lahf
adc
cmp
jmp
mov
sbb
and
data16
cmp
xchg
or
inc
and
and
jg
jg
lret
add
clc
es
and
loopne
test
dec
and
mov
push
or
mov
sub
xchg
sbb
es
clc
notl
mov
mov
popa
call
and
das
jns
pushf
ret
inc
jecxz
ret
fistps
test
test
in
inc
adc
imul
pop
test
sbb
movb
add
push
xchg
ficomps
test
mov
adc
dec
in
test
xchg
xchg
sub
shll
cmpsl
or
cltd
inc
jle
sub
xchg
dec
hlt
push
inc
sbb
mov
stos
add
pop
or
int3
xor
mov
mov
insl
push
subl
stos
cltd
enter
scas
push
stos
jns
pop
jecxz
inc
add
lahf
notl
xor
rcrb
lcall
pop
jge
jbe
add
arpl
and
pop
lock
or
push
and
sub
and
pop
arpl
mov
push
add
rolb
push
and
repnz
gs
jle
ret
mov
mov
push
and
les
mov
and
fldt
ret
dec
sti
das
and
mov
popa
jmp
jo
dec
popa
movsb
pop
imul
loopne
fsubrp
in
dec
sbb
pushf
loopne
sub
cli
mov
pushf
imul
and
testl
js
pushf
loopne
push
pop
out
or
das
pop
push
les
mov
ds
test
fisttpl
icebp
outsl
dec
push
orl
ret
add
and
xchg
push
sub
xchg
or
sbb
pushl
cmpsl
lret
test
mull
inc
mulb
add
mov
ds
ret
dec
ror
cmpsb
inc
rcrl
mov
shrl
xor
push
jmp
or
sub
loop
push
inc
ror
sbb
lds
or
lea
adc
nop
nop
and
mov
sub
mov
movsb
xchg
dec
popf
test
push
pop
cmp
test
add
int
ret
push
mov
pushf
pop
xchg
cld
adc
push
xchg
gs
adc
cmp
xor
xlat
push
test
sub
xor
xchg
imul
cmpsb
and
cld
and
enter
mov
and
push
and
imul
std
out
push
or
lcall
hlt
sbb
dec
sub
push
and
hlt
mov
gs
sahf
jmp
mov
pop
dec
push
and
cmp
inc
adc
movsb
bound
and
les
das
cwtl
ljmp
pop
cwtl
dec
das
cld
sub
pop
sti
cmp
mov
loope
xchg
dec
notb
mov
mov
ss
xchg
push
or
pop
or
adc
xchg
cltd
cmpsl
movsb
pop
rep
cmpb
mov
sahf
leave
xor
cld
mov
leave
dec
mov
push
mov
mov
lret
cmc
icebp
stos
mov
pusha
daa
int3
and
movsb
mov
sbb
or
andl
or
cmp
movsl
pushf
shlb
data16
mov
inc
ret
shlb
pushf
xchg
add
sbb
jb
rcr
dec
cltd
push
xchg
mov
negl
into
mov
inc
mov
add
and
and
xchg
pushf
inc
inc
and
mov
fld
adc
iret
testl
fisubrs
pop
sub
add
sub
outsb
incl
enter
les
mov
adc
les
movl
test
inc
cmpsl
push
xchg
rol
adc
push
push
pop
mov
nop
testl
daa
ljmp
cmp
cmc
lods
cltd
adc
lahf
sub
les
lret
incl
test
aad
notb
adc
les
jp
and
push
shll
aad
test
mov
test
mov
push
sti
sub
in
jl
mov
call
mov
xchg
jmp
jle
popf
cmpsb
or
dec
xchg
int
push
in
int
stos
lods
jecxz
sub
add
ret
push
lods
stos
mov
imul
sub
and
push
jle
mov
mov
repnz
and
push
xor
add
sbb
jb
dec
dec
lock
dec
movsl
xor
mov
daa
mov
mov
mov
test
arpl
inc
popf
xchg
mov
lret
xor
inc
inc
and
push
mov
out
popf
cmovl
scas
adc
mov
out
ret
xchg
cmc
xor
in
leave
pusha
cmp
loope
dec
mov
in
inc
inc
test
pusha
out
adc
adc
lret
or
rcrb
pushf
out
cmp
mov
jecxz
cmc
lds
orl
and
push
addr16
push
cltd
lock
xor
xchg
mov
in
and
inc
mov
mov
lds
or
jp
loop
cmpsl
cs
hlt
ja
outsb
inc
inc
leave
mov
sbb
sub
pushf
mov
and
push
inc
rcll
mov
lea
sti
sub
enter
loopne
add
cs
mov
push
ljmp
inc
sbbb
sbb
ret
inc
push
xor
in
sahf
loopne
clc
pushf
inc
cltd
xchg
xchg
mov
cld
loope
movsl
dec
xor
mov
stc
xchg
in
ficoml
insb
xchg
push
ret
and
add
add
sbb
mov
ljmp
inc
pop
lret
xchg
lret
pop
and
test
int
jbe
mov
and
iret
int
cmp
or
mov
cs
xlat
ret
out
dec
sub
and
push
pop
mov
add
pop
in
push
mov
std
mov
fmull
dec
inc
mov
mov
inc
mov
loopne
ljmp
in
icebp
movups
add
in
lcall
pushf
dec
or
or
mov
mov
and
test
sub
pop
movsl
lcall
sbbl
mov
movsl
xchg
test
test
dec
mov
xchg
mov
ds
or
lahf
fistps
pop
jecxz
outsl
adc
xchg
mov
inc
lea
cltd
dec
push
inc
jg
icebp
add
leave
inc
push
adc
mov
mov
cwtl
sahf
mov
loopne
or
add
pop
jmp
dec
mov
and
mov
mov
out
addr16
add
and
cwtl
imul
xchg
cs
enter
mov
daa
mov
xchg
pop
loopne
dec
or
or
or
pop
adc
outsb
pop
int
add
or
push
shrb
and
out
outsb
cmp
xor
lea
loop
xor
inc
out
xchg
push
push
movl
das
dec
mov
jl
add
test
mov
das
popf
loop
bt
popa
sub
faddl
test
jns
mov
pop
fwait
movsl
inc
daa
mov
push
imul
lret
pop
lds
push
idivb
aad
clc
pop
sarb
popa
cmp
decl
adc
jae
stc
sbb
sub
mov
jnp
fsubrs
and
cmc
std
stc
sbb
cltd
mov
jae
stc
push
rorl
subb
inc
and
xchg
push
ja
mov
les
aas
pop
bound
enter
test
fwait
inc
pop
mov
dec
enter
xchg
dec
jae
xchg
gs
adc
insl
cltd
sahf
out
orl
pop
and
pushf
mov
xchg
dec
sbb
adc
lcall
daa
lea
mov
daa
shl
les
xor
push
sub
and
mov
sub
push
cmpsl
call
inc
ss
add
mov
addr16
jae
dec
adc
adc
lea
xchg
shrl
lret
cld
inc
sub
pop
mov
and
mov
xor
push
in
dec
test
push
jmp
fdivl
xchg
inc
mov
dec
movsl
mov
push
push
repz
aam
mov
lock
call
imull
push
add
cmp
pushf
imul
mov
popf
bound
addl
and
xchg
sbbb
ss
popa
mov
push
or
fs
inc
sub
test
test
inc
pushf
daa
pushf
sbbl
adcb
outsl
jmp
and
popa
jp
test
in
xchg
sub
cmp
mov
daa
test
inc
jle
mov
adc
and
cltd
push
mov
mov
rep
test
test
andl
and
in
das
jge
and
mov
jo
inc
push
xor
ljmp
roll
sahf
imul
popf
fs
stc
and
sbb
les
repz
filds
mov
xor
add
push
inc
dec
pop
jl
inc
lret
jle
lock
pop
in
loop
rclb
ret
data16
seta
push
add
xor
or
pop
mov
lcall
dec
or
call
popf
loopne
cmpsb
sub
or
ljmp
les
xchg
adcl
dec
cs
adc
dec
and
movaps
add
add
push
mov
pushf
enter
add
dec
jge
movsl
push
jnp
and
sbb
insb
imul
loopne
xchg
xlat
or
test
addr16
inc
and
lods
iret
mov
adc
or
and
inc
add
mov
mov
fcomps
adc
outsb
enter
add
cmp
ljmp
adc
faddl
xchg
dec
xchg
jmp
inc
scas
and
add
mov
daa
and
leave
xchg
jmp
inc
dec
add
adc
fsubr
adc
push
mov
cwtl
faddl
xchg
setno
xchg
adc
xchg
inc
and
add
adc
faddl
xchg
jmp
inc
out
and
adc
andb
cwtl
adc
xchg
inc
test
test
out
adc
mov
inc
or
adc
xchg
and
out
ret
movsb
adc
stos
out
and
push
scas
adc
iret
gs
cwtl
mov
sarb
inc
mov
cltd
or
and
mov
adc
sbb
and
push
outsl
adc
sub
nop
cwtl
mov
sarb
inc
mov
cltd
or
and
mov
adc
sbb
and
push
adc
add
nop
cwtl
mov
sarb
inc
mov
cltd
or
and
mov
adc
sbb
and
push
or
xchg
and
nop
cwtl
mov
sarb
inc
mov
cltd
or
and
mov
adc
sbb
and
push
lret
and
nop
cwtl
mov
sarb
inc
mov
cltd
ljmp
pavgb
scas
dec
lret
movb
cmp
jle
testb
ljmp
out
and
loop
and
sub
cli
sub
cmp
xor
inc
std
inc
cmp
sti
inc
cmp
inc
cmp
inc
ss
cmc
inc
xor
repz
xor
inc
xor
inc
cs
in
inc
sub
jmp
sub
inc
sub
inc
es
in
and
jecxz
and
sbb
pop
call
pop
and
pop
loop
and
adc
adc
adc
adc
adc
adc
adc
lods
orb
testb
mov
mov
mov
mov
mov
pop
mov
sahf
lret
mov
xchg
in
pop
xchg
loopne
or
mov
dec
pushf
push
xchg
mov
decl
or
or
or
or
bswap
mulb
rolb
stos
test
mov
mov
mul
gs
add
inc
loope
push
cwtl
gs
or
dec
xchg
out
das
lods
mov
in
test
lock
adcl
iret
and
sarb
in
hlt
add
pop
adc
or
aam
add
lret
ljmp
adc
adc
ja
pushf
inc
sub
stc
mov
mov
xchg
inc
in
mov
fcoml
cmp
mov
mov
stos
andb
inc
mov
popa
inc
pop
popa
mov
adc
inc
stos
mov
and
imul
jne
test
or
sbb
inc
xchg
sbb
mov
sub
lods
jg
pop
push
pusha
mov
push
inc
in
ret
hlt
lret
push
dec
or
mov
xor
push
dec
push
sbb
dec
mov
mov
inc
inc
push
test
rol
inc
vmaxss
or
and
jb
mov
add
adc
jl
and
jo
flds
xchg
fdivrs
sbb
pushf
ja
add
sub
mov
mov
and
or
int
mov
orl
jnp
lods
xor
sahf
inc
pushf
mov
xchg
xor
xchg
test
xor
sbb
test
jb
in
inc
inc
jecxz
fsubrs
jb
int3
dec
and
fsubrs
jb
in
inc
inc
jecxz
fsubrs
cmpb
adc
test
jb
in
inc
inc
jecxz
fsubrs
jb
or
test
jb
in
inc
inc
jecxz
fsubrs
jb
in
inc
inc
inc
inc
xor
jb
in
inc
inc
jecxz
fsubrs
jb
in
inc
inc
jecxz
fmuls
inc
inc
jecxz
fsubrs
jb
in
inc
inc
jecxz
fsubrs
jecxz,pt
fsubrs
jb
in
inc
inc
jecxz
fsubrs
inc
daa
inc
inc
iret
jb
or
xchg
jns
addl
lret
ja
add
call
insb
lea
sbb
dec
das
gs
cwtl
mov
gs
cwtl
mov
scas
inc
and
push
mov
sbb
mov
aas
inc
xchg
cltd
ljmp
sub
out
daa
repz
movsb
pop
movsl
frstor
cltd
cwtl
mov
aad
aas
inc
xchg
subl
and
mov
cltd
test
adc
andl
lahf
mov
popf
xchg
sub
push
sub
cltd
sarb
inc
xchg
subl
adc
dec
push
lea
add
orl
hlt
insl
cwtl
cltd
lahf
cwtl
out
cltd
popf
out
adc
fwait
adc
cltd
aad
aas
inc
xchg
orl
xchg
add
and
lea
add
orl
addl
hlt
insl
cwtl
cltd
lahf
int3
pusha
addr16
popf
cltd
int
jb
and
faddl
xchg
sub
xor
movsb
pop
test
out
adc
mov
xor
movsb
pop
test
fmull
lahf
inc
int
adc
lea
into
inc
cltd
push
repz
xor
xchg
and
lea
add
subl
addl
hlt
insl
cwtl
cltd
lahf
dec
and
push
add
cltd
out
adc
xchg
and
inc
or
adc
popl
and
add
mov
adc
test
aas
inc
addl
daa
jecxz
lcall
push
add
cltd
out
adc
xchg
and
inc
or
adc
adc
fcmovu
fs
dec
les
sub
push
daa
out
and
loop
and
add
incb
cmp
add
aaa
testb
repnz
fcompl
mull
ss
and
repz
and
and
and
and
and
and
jmp
sub
jmp
and
and
and
jecxz
and
inc
push
call
push
std
cmp
sti
lods
xchg
sbb
loop
and
cltd
cmp
cltd
cli
cltd
cmp
negb
xor
lock
das
cltd
out
cltd
sub
cltd
ljmp
notb
mov
xchg
test
and
cld
jbe
std
bound
sti
bound
stc
bound
mull
loope
mov
push
xchg
loopne
dec
inc
lea
andb
ret
or
int
inc
popf
jge
in
xchg
into
and
mov
mov
jo
lds
adcl
xor
push
push
incl
fs
mov
out
test
xchg
sub
xor
fadds
push
add
fmull
push
cmp
std
push
stos
lret
mov
dec
movsb
dec
xchg
inc
testl
mov
cld
insl
cmpsl
xor
jne
ret
roll
xchg
push
inc
mov
or
add
rclb
scas
pop
mov
jno
sub
subl
ss
ret
sub
pop
push
repnz
fs
inc
mov
pop
and
add
sbb
and
test
xchg
mov
movb
xor
mov
push
int
ret
les
ljmp
adcl
call
push
push
xor
enter
enter
mov
push
mov
std
andb
push
mov
add
lahf
dec
adc
inc
movsb
add
out
xor
das
in
adcb
mov
inc
js
sbb
mov
push
xchg
ljmp
pop
pop
or
sub
xor
fs
or
nop
mov
inc
sbb
jmp
adc
mov
sbb
jecxz
pusha
jl
inc
fwait
and
xor
lea
mov
test
inc
adcl
aas
jecxz
fsubrs
jb
in
inc
inc
jecxz
fsubrs
xor
pop
out
nop
jb
in
inc
inc
jecxz
fsubrs
jb
in
inc
test
nop
jb
in
inc
inc
jecxz
fsubrs
jb
in
inc
inc
jecxz
xor
jb
in
inc
inc
jecxz
fsubrs
jb
in
inc
inc
jecxz
fsubrs
inc
aas
jecxz
fsubrs
jb
in
inc
inc
jecxz
fsubrs
xor
jecxz
cwtl
test
jb
in
inc
inc
out
add
mov
cmp
and
mov
inc
mov
test
stc
sar
movl
jno
bound
jnp
mov
call
adc
mov
bound
mov
dec
mov
sub
out
jge
lret
in
xor
sarb
ja
outsb
daa
mov
shrb
sbb
dec
jmp
lret
dec
mov
ret
jnp
out
inc
lcall
es
dec
lea
cltd
pop
xchg
add
xor
or
or
lea
jae
outsb
ret
inc
xor
cltd
xor
cmpsl
xor
jecxz
jbe
mov
mov
or
inc
mov
push
sbb
mov
outsl
xchg
or
inc
inc
dec
shlb
movsl
push
imul
sbb
jmp
push
jbe
into
and
mov
sub
movsb
pop
push
lods
push
pop
dec
push
sti
xchg
adc
ds
sub
in
test
mov
jp
lahf
in
add
stos
and
dec
fs
mov
or
sbb
fisubs
and
jne
dec
sbb
jg
shrl
iret
in
repnz
cwtl
inc
xor
inc
adc
xorb
mov
or
shrl
cmp
adc
loopne
add
jno
shll
sub
pop
and
mov
mov
adc
mov
push
pop
push
mov
loop
push
push
fsubl
gs
jmp
shll
pop
shrb
lods
sbb
xbegin
xor
inc
test
mov
inc
push
popa
adcl
movsl
mov
in
xchg
mov
stc
mov
cmc
sub
xlat
sub
pop
cmpsb
bound
lods
cmpsl
out
dec
jnp
subb
and
dec
xlat
mov
jg
out
pop
xchg
xchg
jecxz
or
push
cmp
mov
bound
loope
jge
pusha
test
mov
push
sahf
cmpsb
insl
mov
sbb
pushf
xchg
push
addb
es
aaa
mov
or
ret
pop
leave
xchg
sub
xchg
inc
xchg
subb
or
inc
dec
loopne
mov
jne
push
push
pop
pushf
lds
movsl
jle
je
orl
movsb
adc
popf
das
jl
add
insb
cs
inc
stos
into
adc
and
mov
into
xchg
loope
fs
push
or
mov
xchg
inc
xchg
jbe
test
and
xchg
cmc
and
ljmp
mov
mov
sub
mov
jmp
lea
sbbl
subl
sub
lahf
fs
loopne
daa
dec
fs
inc
mov
add
imul
xor
imul
lea
dec
scas
sub
push
pop
cmp
or
cmp
adc
ror
clc
cmp
andl
adc
lcall
outsb
jae
push
shl
push
jmp
fnstsw
add
orb
scas
rcrb
dec
cmp
insb
jl
daa
adc
lahf
and
push
fs
bound
dec
pop
sub
test
dec
sbbb
inc
daa
jg
adc
dec
in
xchg
loopne
repz
and
mov
sbb
jecxz
shrl
jg
enter
mov
popf
or
outsl
lods
add
pusha
xor
push
mov
adc
inc
dec
add
inc
sbb
xchg
dec
jle
comiss
cld
push
mov
leave
out
ljmp
bound
sub
lret
and
stos
mov
rolb
and
subl
jbe
or
test
mov
adc
or
stc
in
or
and
add
and
and
mov
test
mov
mov
and
sahf
adc
dec
shll
repz
push
and
adc
add
pop
icebp
and
stos
adc
andb
and
mov
add
inc
xchg
sub
inc
push
mov
lds
cmpsb
lock
xor
je
adc
push
add
jmp
insl
and
adc
dec
loopne
jb
sub
or
xchg
inc
popa
or
lret
and
mov
ret
inc
test
xor
les
dec
mov
and
mov
mov
mov
leave
and
push
or
mov
jb
lret
fsubs
repnz
rolb
call
pop
lods
aam
dec
adc
jb
scas
add
mov
mov
popa
nop
clc
mov
pop
pop
and
mov
xor
iret
or
adc
mov
outsl
iret
cmpsl
pushf
inc
or
add
iret
gs
mov
imul
in
add
iret
popf
jbe
and
adc
ljmp
arpl
nop
rcll
xchg
popa
or
shll
insl
mov
test
pop
rcl
mov
jae
mov
outsb
imul
mov
adc
push
loope
push
sbb
add
fbstp
loope
movsl
loope
adc
sti
das
leave
fisubs
es
add
loope
add
loope
inc
lcall
sbb
je
das
fwait
dec
notb
je
or
add
test
movb
pushf
lea
mov
lds
xor
xchg
xchg
loop
xchg
dec
add
ret
xchg
jecxz
notl
inc
test
adc
mov
test
andb
pusha
and
xor
fisubs
dec
xor
lds
in
xchg
xchg
in
xchg
xor
push
xchg
aam
dec
hlt
scas
sub
and
and
mov
adc
insl
jecxz
inc
inc
lret
mov
enter
xchg
push
or
dec
sbb
xor
push
add
shll
test
fs
mov
and
mov
pop
in
sub
aam
jne
jne
out
bound
jne
data16
inc
pop
int3
cli
and
xchg
push
sti
insl
sub
bound
push
cmp
outsl
add
cmp
push
fwait
mov
orb
jecxz
add
data16
dec
aad
adc
leave
dec
sbb
dec
scas
subb
and
shll
and
add
push
outsl
and
pop
lds
ret
mov
jne
imul
push
sbb
outsl
and
xchg
push
mov
mov
sbbb
xchg
pmuludq
xchg
inc
push
ret
rorl
cmp
inc
jne
sbb
out
loopne
dec
lock
cs
add
push
push
push
test
xchg
push
inc
and
cltd
mov
mov
xchg
mov
fisttpll
jb
pop
movsl
loop
sti
xchg
cmp
inc
sub
dec
js
icebp
cmp
in
sti
xlat
or
lcall
mov
mov
mov
mov
dec
insl
pop
popf
xchg
int3
mov
push
addl
push
jnp
push
cmp
inc
push
insb
daa
push
adc
pop
loope
or
jle
sti
imul
push
in
mov
mov
dec
sbb
xchg
mov
enter
cld
cmp
cmpsb
loop
roll
cmp
xor
adcb
xchg
out
addl
inc
pop
aas
testb
xchg
push
movsl
adc
add
loop
mov
pop
push
sub
sub
and
xchg
cmp
je
lcall
adc
mov
out
cmc
pop
add
push
popf
xchg
ds
pop
ss
out
sbb
ss
push
pop
ficompl
roll
das
xor
outsb
pop
std
or
aam
out
mov
xchg
mov
xchg
lret
test
sti
out
mov
cmp
mov
lret
push
outsb
mov
insb
mov
loopne
push
das
mov
cs
mov
dec
out
out
cmp
pusha
pop
and
inc
lea
les
dec
addr16
sub
negb
sbb
jno
fsave
mov
inc
jp
bound
in
rorb
popa
fwait
outsb
es
movsl
iret
pop
pop
das
shrl
or
or
mov
test
sbb
push
jne
cmp
lods
push
pushf
sub
hlt
jl
push
pushf
mov
xor
bound
lahf
repz
sub
sub
xchg
pop
cmp
cmp
js
stos
push
cwtl
ja
push
push
ret
fucom
dec
mov
lcall
push
leave
bound
cmp
inc
ds
dec
enter
bound
movsl
std
fisttpl
inc
aam
sbb
add
sarl
jne
sbb
fcomps
mov
lret
add
pop
clc
and
js
xchg
xchg
or
iret
jae
push
outsl
mov
aam
in
mov
bound
jge
test
fidivl
outsb
inc
cmc
les
push
mov
sub
neg
out
js
jmp
outsb
xchg
scas
and
loope
pop
ret
loop
mov
cwtl
pop
pop
daa
outsb
ss
loop
inc
inc
jbe
jno
xchg
fstl
jae
and
sub
mov
movb
fstpl
shrl
movsl
rclb
mov
ret
scas
add
fwait
ss
dec
lret
push
sbbl
jno
adc
inc
xchg
int3
pop
mov
xchg
inc
in
lahf
sahf
or
xchg
dec
xchg
inc
xor
lock
lea
subb
pop
or
les
push
fisubl
mov
lret
and
into
xor
fcomps
sahf
jnp
mov
dec
scas
into
out
imul
enter
test
shrl
mov
sbb
and
xor
inc
loop
bound
adc
bound
fmuls
jno
push
sahf
mov
rcll
or
mov
scas
in
data16
jmp
insb
dec
stos
std
sbb
out
add
ficompl
pop
test
addl
mov
push
jnp
ficoml
inc
enter
cmp
cmp
and
std
xchg
aad
lea
inc
and
adc
pop
cld
jne
roll
lods
fidivrs
cmc
mov
pop
adc
lea
sbb
sbb
popa
push
inc
sbb
ret
popa
jb
sub
cltd
inc
movsl
cmp
test
sub
cmc
add
jmp
xchg
mov
add
mov
xchg
mov
mov
ss
adc
orl
dec
movsb
adc
test
mov
mov
push
in
leave
ret
mov
dec
out
loope
add
sub
inc
and
mov
push
mov
pop
les
shrl
setge
mov
cmc
inc
in
ss
push
dec
pop
push
test
lea
lahf
inc
daa
dec
or
mov
pop
cmpsb
cmp
push
in
mov
sub
pop
mov
ret
add
mov
sbb
add
loopne
xchg
or
rcr
les
loope
arpl
inc
gs
ds
popf
inc
cmp
inc
push
ret
cmpsl
movsl
mov
out
push
rcl
sub
add
push
or
loope
rorb
loopne
test
rorl
and
pop
add
pop
dec
and
fisubrl
bound
lds
inc
mov
adc
adc
pop
inc
jl
lea
popa
dec
lret
aas
push
scas
out
pop
and
cwtl
push
push
insb
ja
sub
inc
pop
pushf
sbb
les
lret
lods
cltd
inc
addl
sbb
dec
gs
pushf
hlt
or
inc
idivb
ds
pop
cmp
adc
cmc
push
test
cltd
sbb
add
and
adc
sub
dec
ret
ljmp
fs
sahf
in
scas
in
out
in
vmovshdup
push
mov
repnz
lahf
push
and
mov
test
mov
bound
and
mov
pop
and
sbb
add
mov
imul
mov
sub
ret
lea
inc
cmpsl
sbb
lods
sub
cwtl
push
sarb
adc
js
mov
mov
push
mov
int3
jg
xchg
sub
fstpt
stos
or
cmp
add
subb
push
mov
stos
andb
add
sbb
mov
pop
pop
sti
das
adc
daa
dec
aaa
decb
leave
aaa
and
test
fcomi
sub
inc
ret
cmc
and
mov
xchg
orl
cli
or
mov
mov
add
sbb
adc
cs
outsl
mov
fisubl
ljmp
mov
test
cmp
dec
mov
movsb
and
dec
icebp
sub
jl
and
loop
pop
in
das
jbe
jge
subl
xchg
ss
add
inc
sti
sub
or
icebp
adc
mov
jg
lret
or
dec
insl
lret
or
pminsw
and
add
or
or
mov
and
imul
or
jbe
mov
pusha
jge
stc
pop
loop
ficompl
push
and
sub
idivb
movsl
add
repz
dec
leave
dec
push
pop
dec
mov
jb
dec
add
add
test
push
pop
enter
mov
cmc
xchg
fisttps
or
in
dec
xchg
push
or
call
dec
cmpsb
leave
aaa
iret
dec
movl
out
inc
arpl
xchg
mov
dec
push
cmp
int3
insb
push
jmp
dec
pusha
data16
or
xchg
loopne
pop
or
cmp
pop
lods
mov
sub
jmp
mov
xor
or
int
repz
rorl
loop
inc
inc
add
mov
bound
addb
jae
add
mov
mov
and
into
mov
loopne
jle
lock
xchg
mov
jae
std
out
pop
in
arpl
mov
test
cmp
or
and
in
and
xchg
and
add
xchg
jmp
ljmp
dec
clc
in
pop
mov
pusha
push
push
push
xchg
sub
mov
cs
enter
cmpsl
add
seto
loope
rclb
xchg
movsb
xchg
popa
push
and
stos
imul
mov
iret
mov
ret
fidivl
xor
data16
lcall
popf
dec
xchg
ret
or
pop
subl
scas
jmp
loope
bswap
lret
les
jp
adc
popa
add
mov
add
or
mov
das
loopne
mov
bound
outsb
push
movsl
mov
pop
jmp
xlat
popf
pop
xchg
adc
dec
cmc
hlt
sub
and
add
rclb
inc
inc
shll
or
sahf
push
test
roll
xor
and
fsubrp
pop
jge
and
inc
fcoml
loope
sub
adc
pop
adc
adc
ljmp
ret
mov
daa
add
dec
push
jne
add
addr16
movswl
pop
pop
add
add
add
and
add
pop
push
nop
movsl
bound
in
fisubrl
pop
push
icebp
hlt
or
rcl
testb
stc
push
loop
xchg
les
dec
pop
inc
adc
fwait
inc
cmp
cmp
ss
test
jnp
lret
xchg
test
add
bound
psubusw
or
test
subl
cmp
cltd
mov
aam
mov
jmp
or
pop
mov
dec
mov
pop
adc
push
pop
lahf
loope
mov
ret
pop
inc
cmp
pop
push
pop
hlt
ljmp
dec
aas
push
rorb
inc
xor
jnp
add
shlb
xchg
out
pop
enter
test
add
xchg
ljmp
xchg
mov
jecxz
push
in
sbbl
pop
out
imul
push
loop
fwait
mov
imul
push
sub
and
sbb
sub
fnsave
clc
push
adc
test
or
jecxz
popf
test
aas
or
sti
pop
or
sbb
xchg
adc
lea
cli
fimuls
testl
daa
xor
adc
fldcw
and
les
and
push
and
out
or
pop
lcall
mov
fstl
incb
lcall
add
cmp
clc
cmp
std
gs
fmul
and
and
test
mov
and
orl
jg
stos
add
pop
test
mov
ret
sti
pop
cmc
dec
sub
or
idivb
mov
loop
cltd
sahf
and
lods
pop
int
push
std
add
repz
addr16
stos
leave
mov
cmp
cmp
roll
add
push
mov
and
cli
lahf
daa
data16
mov
cmp
push
add
outsl
xor
add
lods
add
aas
xchg
repz
adc
ret
dec
sub
cmp
cmp
inc
add
dec
sub
sbb
add
cli
das
mov
add
jnp
clc
xchg
iret
test
xchg
and
ret
bound
icebp
fs
mov
adcl
push
push
test
insb
lods
test
add
dec
sbb
push
push
inc
sbbl
dec
mov
cmp
adc
adc
inc
mov
dec
es
rcl
mov
xlat
push
inc
repnz
xor
enter
imul
adc
out
mov
orl
popa
ljmp
sbb
mov
in
and
loope
sub
lret
imul
cmpsl
or
push
ljmp
aaa
enter
in
adcl
stos
or
sbb
cmc
cmp
adc
add
jbe
fwait
shrl
dec
xchg
out
dec
xchg
sarb
sub
xchg
lods
int
adc
gs
sbb
adc
mov
je
xor
test
xchg
lret
xchg
jmp
sar
pop
loopne
sub
loopne
rcll
mov
xlat
inc
cmc
outsb
adc
outsb
add
add
xor
and
inc
cmp
mov
shll
inc
add
inc
movsl
sti
ret
data16
shrl
add
cmpl
push
std
repz
out
mov
jecxz
fwait
adc
inc
adc
inc
int3
lret
bound
xchg
and
adc
popa
inc
test
xor
pop
dec
dec
pusha
and
jne
aam
xchg
je
mov
xlat
fsubrs
xchg
gs
adc
inc
icebp
inc
pause
gs
inc
jmp
mov
rorb
js
fsubs
repz
je
add
cmpsb
hlt
adc
inc
ljmp
pushf
lea
loop
or
bound
add
add
pop
dec
pop
mov
outsb
and
leave
adc
lea
xorb
cltd
mov
call
jmp
mov
pop
inc
inc
and
dec
fwait
mov
loop
sub
dec
lahf
mov
sub
inc
stos
add
xchg
insb
dec
clc
movsl
push
pop
push
and
mov
add
push
mov
adc
mov
mov
popf
test
inc
push
xchg
mov
bound
test
adc
jae
sbb
mov
jne
mov
xor
push
mov
popl
inc
outsb
xor
rclb
cmpsb
mov
and
mov
sub
aaa
aaa
mov
inc
sub
xor
add
ja
fistps
cwtl
call
rcrb
mov
xor
lea
popa
mov
data16
push
mov
mov
in
adc
pop
sbb
iret
leave
push
add
loope
fwait
xor
xchg
add
sti
lods
nop
outsb
mov
lret
dec
or
pop
xchg
mov
pop
repz
adc
add
in
mov
inc
cld
sub
pop
inc
cmpsb
xchg
inc
xchg
push
sub
ret
test
mov
jb
or
mov
cmpsl
inc
or
mov
push
dec
mov
mov
aam
leave
in
setno
sbb
icebp
sub
addb
arpl
sub
out
jecxz
shrl
inc
or
insl
mov
add
sub
inc
mov
xchg
orl
call
mov
pop
cs
faddl
lock
repz
stc
adc
cld
and
push
mov
xchg
dec
arpl
cli
stc
pop
dec
mov
and
sub
and
cltd
mov
test
test
adc
push
push
jmp
pop
enter
lods
or
and
and
add
shr
push
push
arpl
pop
sub
dec
into
or
and
out
pop
popf
xor
add
inc
pusha
cmp
and
push
push
adc
xor
push
mov
setno
sub
push
fildl
xchg
mov
mov
loope
sbb
adc
rcrb
mov
je
inc
leave
rcll
outsb
repz
imul
adc
adc
leave
or
xchg
or
xchg
sub
mov
rdtsc
invd
mov
jg
jnp
lds
xchg
add
dec
cmp
lcall
add
rclb
pop
pop
arpl
add
sbb
fcomip
push
sbb
test
xchg
pop
and
lret
popl
or
test
or
dec
mov
jno
dec
orl
shr
repz
dec
xchg
das
pushf
jg
addb
mov
int
xchg
xchg
sbb
push
and
mov
scas
and
shrl
dec
inc
rcrl
es
xor
lret
push
cltd
add
testb
fistpl
addb
add
lahf
popf
and
rclb
ret
les
sub
or
jb
jnp
enter
lret
pop
inc
fldl2e
cli
mov
mov
or
inc
sub
rclb
shlb
add
rorl
bound
mov
lock
mov
cmpl
xchg
stos
into
cmc
sbb
inc
loop
loop
test
loope
push
fwait
insl
xor
push
mov
inc
test
mov
in
ret
movsl
mov
mov
lock
in
inc
fwait
xchg
les
mov
es
add
loope
xor
add
dec
inc
inc
push
push
fimull
stc
xchg
into
out
dec
cltd
sbb
les
xchg
insl
lea
mov
fldcw
mov
loope
daa
pushf
mov
cltd
sub
dec
ss
xorl
jmp
cs
mov
mov
sbb
cltd
push
dec
aam
ds
jae
sbb
and
cmp
or
loopne
aas
add
mov
xchg
hlt
push
xchg
cmpsl
testl
popf
and
push
mov
or
mov
pop
or
inc
imul
repnz
repz
xchg
lret
add
lea
xor
cltd
fidivrl
cmp
dec
pop
gs
lret
clc
xlat
inc
mov
rorl
xor
cli
add
cmp
test
stos
das
cltd
scas
mov
and
add
or
add
js
stc
sahf
mov
loop
mov
std
sbb
xrelease
add
test
or
adc
mov
std
cmpsb
lret
cmpsb
popf
testb
adc
xchg
sbb
outsb
push
push
adc
mov
in
push
adc
mov
sub
pop
xchg
push
or
test
fwait
inc
inc
ds
jp
in
int
lea
sbb
lea
daa
or
orl
xor
and
inc
sbb
fwait
xchg
cmp
rcr
xchg
out
pushf
xchg
cltd
pushf
dec
adcl
bound
movsl
xchg
fimull
orb
xchg
sbb
les
imul
add
add
leave
add
mov
inc
sub
clc
push
xchg
adc
cmpsb
repz
dec
and
sub
stc
pop
popa
fldt
jl
inc
int
xchg
outsl
or
adc
mov
shlb
inc
outsb
enter
mov
test
adc
ds
jne
push
inc
push
sub
ret
or
cmc
lret
pop
pop
popl
inc
sub
push
dec
pop
mov
inc
xchg
or
fistl
cmpsb
mov
add
loopne
sar
shrd
outsb
cs
mov
movd
in
in
sub
dec
dec
add
xadd
sub
mov
push
adc
add
daa
out
or
loopne
adc
enter
les
or
add
pop
inc
fs
adc
jnp
es
push
out
ret
sub
nop
call
sbbl
leave
xchg
mov
dec
sahf
insl
dec
popa
fdivl
popa
inc
popf
mov
loope
je
xlat
movsl
or
gs
add
ret
inc
add
mov
add
cmpsl
mov
and
xchg
outsl
leave
sbbb
sub
or
movl
orl
sbb
sbbl
nop
cmc
mov
mov
ficoms
pop
adc
cwtl
jp
aaa
dec
shll
ficoml
addb
dec
orl
mov
test
xchg
lods
sub
bound
pop
add
test
sahf
das
leave
loope
rorb
add
cmovb
and
jg
mov
sub
mov
xchg
hlt
leave
mov
ficompl
hlt
ffree
icebp
out
push
dec
mov
dec
xchg
jmp
adc
in
dec
inc
aam
daa
test
mov
fdivrl
inc
and
pop
mov
movsl
jecxz
and
repnz
sahf
push
stos
push
ss
lea
push
adc
mov
sbb
pop
xchg
inc
icebp
and
xor
stos
push
in
jecxz
mov
in
gs
aas
and
jb
add
js
dec
in
loop
jecxz
xlat
addr16
shl
add
dec
mov
sub
dec
jle
test
bound
shll
mov
mov
pop
adc
mov
out
inc
xor
dec
jns
and
hlt
mov
loope
dec
inc
mov
inc
movsl
sub
loope
sub
in
push
inc
iret
mov
add
jno
inc
dec
addl
addr16
add
gs
mov
and
cmp
in
adc
inc
lret
add
jbe
test
movsb
bound
shll
sbb
cmp
cmpsl
inc
mov
test
decb
lods
leave
popf
xchg
pusha
sbb
xor
or
imul
test
mov
cmp
pop
mov
jp
xchg
dec
inc
pop
or
pop
sar
add
popa
arpl
adc
inc
dec
lahf
xlat
or
stos
or
cli
bound
mov
stos
subl
aas
popf
lret
dec
pop
std
push
je
mov
dec
pop
dec
imul
test
adc
xchg
loopne
stos
jo
out
push
mov
movsl
stos
jg
dec
arpl
or
mov
mov
orl
rcll
xchg
sahf
xor
mov
das
adc
sbb
or
not
daa
inc
mov
outsb
push
push
adc
mov
cmp
inc
jb
lahf
push
push
adc
pop
and
jmp
xor
sub
scas
leave
sbb
mov
call
sbb
and
cltd
pop
popa
sti
mov
fisubs
mov
inc
movswl
sbb
and
mov
push
and
sbb
fdivs
inc
mov
and
lods
test
pop
scas
and
test
cmpsl
add
ja
jmp
dec
and
xor
jle
add
and
movsl
sbbl
jbe
into
popa
fwait
js
mov
shlb
arpl
rolb
sbb
mov
lret
fwait
leave
or
dec
fdivrl
xor
sub
jo
push
cltd
inc
add
pop
repz
push
and
jo
push
out
scas
add
int
cmpl
js
jne
jbe
out
mov
out
fwait
dec
inc
scas
push
jnp
or
fimull
and
sbb
repz
dec
sbb
in
rolb
mov
add
cs
fwait
sub
and
dec
loope
xchg
xchg
xchg
dec
sub
jmp
bound
leave
cwtl
mov
fiaddl
call
push
sub
rolb
cltd
std
shlb
mov
xchg
jmp
dec
jns
outsb
clc
pushf
push
inc
scas
hlt
mov
push
ret
jb
les
loop
outsb
mov
pushf
mov
mov
jb
mov
test
xor
lods
add
add
add
pop
mov
pop
mov
cwtl
add
mov
inc
jb
sub
out
push
cmpb
loopne
sub
shrl
fnstcw
out
rcll
cs
jmp
test
sub
out
in
push
add
rcr
xor
xor
into
and
out
inc
push
and
jb
inc
out
sahf
icebp
or
inc
bound
test
adc
daa
ret
ret
test
add
mov
stc
add
fwait
add
adcb
mov
jo
mov
lea
or
mov
jmp
and
mov
rorl
hlt
and
into
rcl
mov
lea
jb
inc
out
mov
ret
sbb
ret
lahf
inc
adc
ret
adcb
imul
pop
loope
fucom
or
pop
xchg
push
test
addr16
insb
xchg
push
push
out
inc
xchg
imul
rcll
inc
fldcw
test
mov
add
scas
es
mov
lods
clc
lahf
push
clc
mov
xchg
les
movsb
cmpsl
or
sbb
add
pop
pop
test
xor
add
repnz
iret
sbb
sbb
fmull
aad
mov
and
mov
out
inc
sbb
mov
adc
ljmp
test
adc
lahf
and
adc
lea
test
add
call
lcall
dec
and
add
xor
adc
xor
ficoml
mov
fs
stos
out
stos
xchg
mov
xchg
mov
gs
lock
andl
add
sub
jo
cmpsl
clc
pop
fimull
push
xor
test
adc
repnz
mov
js
ljmp
push
aad
mov
mov
cld
sub
add
mov
out
fisttpl
mov
fdivl
push
sti
pop
dec
orl
in
shr
jp
jmp
jp
mov
xchg
adc
mov
cmp
and
push
push
insb
gs
cmp
or
out
and
push
xor
movsb
mov
pop
cli
and
sbb
lret
push
mov
xor
cmp
inc
loope
and
dec
test
test
push
fcmove
roll
sbb
repz
pushf
fwait
xchg
sbb
or
adc
das
dec
cwtl
gs
xor
test
jae
and
add
xchg
out
loope
mov
roll
stos
mov
ficoml
test
or
mov
xchg
imul
jmp
pop
xor
sti
inc
bswap
out
xor
pop
icebp
ljmp
and
xchg
mov
mov
adc
and
mov
dec
cmpsb
int3
pop
ret
and
mov
jae
out
xor
inc
icebp
add
ss
jno
push
push
mov
fs
fwait
int3
pushf
xchg
popf
dec
push
out
shll
imul
mov
test
inc
pop
mov
rcll
xchg
shlb
jne
pushf
lock
dec
rolb
fcompl
adc
adc
mov
lcall
out
push
in
fisttps
roll
outsb
push
out
xchg
mov
inc
pop
cmp
cmpsl
push
adc
add
xchg
jo
pop
sbb
sub
mov
inc
int
movsl
imul
mov
into
dec
imul
and
in
scas
cltd
mov
ja
add
bound
jge
popf
test
adc
mov
dec
addb
and
mov
push
xchg
test
call
inc
pop
ret
sub
pop
dec
enter
dec
sub
imul
in
test
xor
ret
mov
mov
pop
int
inc
fisttpll
push
dec
mov
int3
js
jae
jecxz
repz
jmp
jae
jecxz
add
xchg
sub
test
or
enter
push
mov
xor
push
stos
xor
ret
cld
mov
add
fs
sbb
mov
jnp
lds
xor
xor
pop
sub
cmc
adc
jmp
test
xlat
jb
xchg
inc
xor
mov
lods
xchg
pushf
adc
mov
lahf
push
pop
cmc
adc
icebp
and
test
loop
mov
inc
mov
inc
mov
add
aam
xor
pop
jno
adc
fdivrl
sbb
and
add
mov
fs
call
jae
loope
add
stc
pop
sbb
rcl
push
imul
fwait
loop
inc
and
and
pusha
out
dec
lret
mov
adc
pusha
xor
test
xor
add
add
bound
addl
js
out
jae
and
jns
dec
push
add
jnp
push
jnp
add
pop
push
or
loopne
xchg
xchg
adc
aam
pushl
and
jecxz
mov
dec
and
ficoms
gs
fs
bound
push
loopne
cld
lods
xchg
xor
out
aam
imul
dec
mov
adc
sub
cmpsl
add
cmp
pop
mov
dec
jbe
inc
sbb
aaa
mov
outsl
jbe
xchg
in
inc
fs
cmpsl
add
shr
rcll
cmpsl
push
adc
or
and
ret
push
cli
xchg
jg
mov
cmpsl
int3
pop
cmp
subb
test
pop
sbb
ret
leave
sub
mov
xchg
xlat
cld
loop
decb
mov
subb
cmp
and
out
fsts
jg
negl
jae
inc
xchg
push
mov
mov
lock
add
orb
xchg
pop
pop
mov
lcall
lret
seta
push
lahf
insb
pop
cmp
jb
and
inc
pop
add
add
adc
loopne
add
jae
sbb
and
movsb
pop
test
add
mov
adc
adc
adc
and
or
mov
shr
or
xor
test
aas
jecxz
add
xchg
and
int
jb
cmp
push
lods
out
xor
inc
sbb
sub
adc
and
inc
or
dec
xchg
jmp
inc
out
and
movsb
pop
in
cmp
popf
out
adc
outsl
add
mov
nop
xchg
xchg
imul
xor
inc
insl
and
movsb
pop
test
and
mov
xor
inc
push
and
ljmp
sbbl
out
adc
in
xchg
jo
xchg
cmp
adc
fsubr
adc
push
into
and
faddl
push
daa
xchg
jmp
mov
and
jmp
sub
or
insl
xchg
jmp
daa
push
and
push
add
nop
sarb
addl
push
lods
adc
and
adc
adc
sub
gs
xor
inc
or
pop
xchg
jmp
inc
and
pop
movb
adc
and
aas
jecxz
daa
xchg
stos
sbbl
add
mov
adc
adc
adc
gs
test
or
and
movsb
pop
out
dec
lcall
dec
test
and
push
add
mov
aas
jecxz
daa
lcall
inc
push
adc
cltd
or
add
adc
and
push
lret
pushf
es
cwtl
mov
inc
in
add
push
dec
outsl
gs
test
jmp
sbb
and
push
push
xor
faddl
push
dec
xchg
jmp
addl
or
enter
cwtl
mov
xor
or
aas
inc
push
xor
add
pop
movb
or
xlat
and
pop
aam
push
shrb
enter
xor
xor
sub
test
sub
test
sub
test
sub
test
sub
cmpl
cld
cmpl
jecxz
and
decl
ds
or
sti
or
or
or
or
or
or
or
repz
or
or
or
or
or
or
jmp
sub
jmp
inc
adc
rcrb
out
pop
sub
pop
ljmp
pop
out
and
pop
loop
and
dec
aas
dec
decb
dec
cld
xor
xor
xor
xor
xor
mov
push
repz
repz
mov
adc
icebp
adc
cmp
or
or
inc
push
out
pop
add
and
push
mov
jns
jnp
jge
jg
jg
mov
pop
adc
dec
sub
cmp
inc
js
outsb
fistpl
and
roll
pop
cltd
test
neg
jge
leave
and
mov
add
sbb
or
out
outsb
testb
sbb
inc
fdiv
sbb
add
dec
mov
movsl
dec
add
xor
or
sbb
xor
jg
adc
bound
mov
sub
xchg
aas
addb
inc
subl
data16
mov
test
push
ljmp
add
lods
mov
push
js
jp
inc
aam
mov
or
in
mov
arpl
psrld
sbb
adc
fcoms
mov
popa
aad
testl
inc
enter
test
imul
ret
and
mov
xchg
mov
mov
mov
push
popf
bswap
mov
arpl
outsl
cltd
mov
mov
nop
jle
mov
test
mov
addb
sub
inc
dec
sahf
shlb
lds
or
leave
repnz
mov
push
xor
jbe
subl
cltd
lds
dec
arpl
cmpsl
ljmp
fistl
or
adc
jns
in
or
ljmp
adc
dec
std
lods
mov
push
js
add
icebp
dec
sarb
xor
imul
dec
fmull
xchg
movl
outsb
dec
inc
sub
pop
cs
pop
dec
insb
ljmp
insb
lds
lock
rclb
cmp
hlt
inc
sbbl
inc
mov
dec
jnp
sbb
add
add
lods
add
repnz
bound
push
add
sbb
rolb
daa
xchg
test
leave
inc
lds
push
test
add
mov
in
pinsrw
cmpsl
adc
mov
pop
xor
test
push
push
and
mov
push
cmp
sub
enter
dec
lret
push
inc
push
adc
les
push
inc
add
xor
or
cmpb
ror
cmp
pop
jne
arpl
mov
inc
add
fists
push
pop
test
or
scas
mov
sub
add
mov
imul
mov
or
inc
inc
xchg
jle
sbb
adc
call
inc
mov
iret
or
sbb
insl
xchg
filds
and
inc
push
and
sub
sub
test
adc
fmuls
test
xchg
fisubs
sbb
scas
lahf
idivb
iret
xor
push
add
mov
lahf
sbb
add
addb
or
in
jmp
adc
cwtl
imul
rcrl
or
inc
stos
mov
shll
push
out
das
add
repz
xchg
jae
mov
adc
or
adc
mov
inc
add
or
lcall
and
xor
in
inc
inc
jecxz
fsubrs
jb
in
inc
inc
jecxz
fsubrs
inc
aas
jecxz
fsubrs
jb
in
inc
inc
jecxz
fsubrs
xor
pop
out
nop
jb
in
inc
inc
jecxz
fsubrs
jb
in
inc
test
nop
jb
in
inc
inc
jecxz
fsubrs
jb
in
inc
inc
jecxz
xor
jb
in
inc
inc
jecxz
fsubrs
jb
in
inc
inc
jecxz
fsubrs
jb
in
dec
inc
jecxz
fsubrs
jb
in
inc
inc
jecxz
fsubrs
inc
aas
jecxz
fsubrs
jb
in
inc
inc
jecxz
fsubrs
and
arpl
mov
adc
ret
popa
test
pop
addr16
add
lahf
popa
dec
movsb
mov
data16
std
roll
push
movsb
and
bound
ljmp
inc
xchg
add
arpl
cmp
inc
cmpsl
xor
inc
call
adc
inc
bound
mov
test
xchg
inc
jnp
les
pop
push
jl
or
lret
pop
jb
add
jno
notb
loop
mov
hlt
std
mov
fimuls
adc
jo
rorl
dec
xchg
shll
ret
std
dec
sbb
es
or
rep
in
sahf
sti
and
lahf
and
test
jno
and
and
cmp
xor
mov
fwait
shlb
push
insl
inc
shrl
mov
and
xor
lods
mov
inc
adc
ret
mov
stc
gs
adc
xchg
jle
pushf
dec
sbb
arpl
jbe
jle
jp
jmp
mov
call
xchg
loope
lea
pushf
negb
and
mov
sbbl
int3
mov
and
cmpsb
add
in
pop
sbb
mov
or
inc
or
lgs
mov
or
std
test
imul
and
sbb
sub
add
aaa
loop
jne
push
mov
stos
mov
or
pop
mov
and
inc
mov
loopne
ret
xchg
push
movsl
stos
leave
lea
int
sahf
adc
orl
pushf
jp
pop
in
imul
and
mov
xchg
push
cltd
push
pop
es
xchg
cltd
dec
mov
cmp
inc
or
push
cmp
push
test
popf
les
leave
pop
pop
and
cmpsl
or
in
test
rcr
cmp
fcmovne
mov
xchg
test
and
and
les
lea
pop
std
mov
ret
jnp
inc
scas
lods
mov
leave
adc
xchg
inc
mov
andl
xchg
cmp
addl
xor
addl
and
mov
aas
gs
insb
pop
mov
pop
cmp
jmp
js
push
jne
loope
insl
mov
fidivl
lods
mov
mov
fnstsw
add
jb
xor
movsb
les
cmpsb
insl
and
insl
movb
mov
dec
xlat
xchg
ja
sub
xor
lahf
loope
jle
lods
test
mov
add
mov
mov
xor
sbb
ljmp
ljmp
xchg
in
sub
inc
pop
mov
mov
cmpl
in
cmovne
mov
and
and
arpl
sub
mov
insb
mov
bound
mov
test
test
xchg
xchg
psrlw
mov
cmp
pushf
push
push
fld
pop
test
mov
lea
xchg
sub
xchg
out
push
pushf
test
rolb
adc
inc
lods
add
adc
jnp
push
dec
adc
adc
xchg
dec
imul
or
hlt
and
xchg
push
mov
lea
push
adc
jb
mov
outsl
push
out
and
sub
push
dec
dec
sahf
pop
imul
movsl
jb
cmp
push
dec
add
aaa
sahf
and
inc
sti
inc
jmp
aam
cmp
adcl
add
xor
xorb
mov
jp
pop
jl
bound
cmp
hlt
fdivrl
push
outsb
xchg
les
ss
add
pop
fiaddl
popa
std
or
lds
arpl
or
add
adc
or
fistl
cmp
cwtl
movb
jbe
cmp
das
xchg
push
int
sub
lock
mov
sub
andb
pop
into
mov
mov
xlat
testb
push
dec
push
das
ret
inc
es
inc
ret
xchg
mov
les
mov
dec
cmc
xchg
xchg
sub
idivb
test
mov
arpl
pop
xchg
add
je
cld
sbb
pop
inc
jae
pop
mov
lds
cmp
xchg
mov
mov
jp
and
rcl
scas
sub
and
or
out
sub
clc
push
lcall
mov
in
sbb
ds
jns
sub
mov
pusha
push
stos
addr16
mov
mov
mov
xchg
inc
cmp
orb
arpl
inc
xchg
insl
mov
ja
adc
bound
test
mov
lcall
pop
cli
movsb
pop
dec
lahf
repz
aam
ja
test
adc
andl
in
xor
pop
add
dec
fs
lret
jae
inc
movsb
test
mov
fisubrl
mov
or
cmp
push
mov
popa
mov
or
or
fwait
cltd
push
fidivrs
or
scas
pushf
xchg
int
and
inc
or
xor
xchg
mov
push
push
jge
mov
mov
adc
addb
mov
fisubrs
push
in
gs
inc
fsubrp
xor
cwtl
pop
inc
mov
jmp
enter
sarb
inc
mov
mov
push
push
stc
test
jp
leave
fimuls
mov
xor
in
gs
inc
fsubrp
and
cwtl
pop
inc
mov
inc
in
gs
inc
fisubrs
test
or
xor
xchg
faddp
cmp
push
dec
enter
pop
xchg
ljmp
fisubrs
loop
mov
nop
leave
int3
pop
cmpsl
fisubs
mov
mov
mov
aas
inc
xchg
daa
push
test
mov
or
gs
push
mov
cwtl
and
xor
adc
fimuls
mov
mov
repz
mov
mov
push
fidivrs
adc
cwtl
mov
leave
pusha
int3
pop
xchg
addr16
pushf
popf
lods
jle
fmulp
sbb
pop
mov
adc
faddl
mov
cwtl
mov
mov
cli
xor
inc
inc
in
add
sbb
pushf
sarb
inc
lcall
dec
xchg
push
nop
out
adc
mov
mov
and
hlt
mov
lods
fs
ret
and
sbb
in
pushf
sbb
leave
fidivs
xchg
mov
in
xchg
sbb
stos
ficoms
gs
lods
jle
fisubrs
test
adc
jp
leave
fdivp
shr
pushf
adc
lcall
sub
nop
push
mov
adc
mov
inc
and
test
into
mov
into
jp
stos
fisttpll
jnp
out
cmpsl
fstpl
shll
out
cmpsl
fnstsw
test
cwtl
sub
pop
cmc
adc
mov
sub
cmpsl
test
in
jg
push
mov
data16
cmp
ss
or
inc
xchg
orb
gs
inc
daa
je
out
int
in
lea
or
pusha
dec
push
sub
mov
clc
aam
dec
lahf
pop
pop
pusha
pop
push
jmp
inc
leave
mov
cmp
xchg
mov
bound
test
mov
ja
lret
imul
test
call
out
add
movsl
and
test
add
shl
dec
dec
ret
cmp
jo
push
xchg
subb
xchg
iret
aas
mov
sub
add
add
add
mov
ret
lcall
loopne
fisttpl
outsb
ljmp
jge
or
les
loop
mov
je
adc
mov
movb
loop
stc
pushf
int
inc
inc
push
push
or
addl
lea
lock
sbb
imul
mov
dec
add
fidivs
mov
sar
or
inc
imul
arpl
add
bound
add
xor
gs
scas
dec
or
push
xor
push
mov
fcoml
inc
insl
int3
jmp
adc
mov
xchg
inc
iret
sub
ret
and
cmpsb
mov
lret
mov
mov
rclb
xchg
aas
rcr
lea
rcr
mov
mov
imul
les
push
inc
mov
lret
pop
sub
sbb
mov
pop
or
aaa
daa
rorl
leave
les
push
imul
loop
mov
outsb
ljmp
and
push
pusha
and
mov
lds
inc
xchg
mov
loopne
ljmp
or
mov
xchg
les
imul
mov
enter
and
scas
mov
loop
jno
or
and
sub
dec
cmp
sbb
bound
jb
sbb
sub
ret
adc
or
inc
mov
mov
roll
ljmp
rsqrtps
mov
mov
pop
add
addl
test
sbb
add
addb
pop
aaa
xchg
and
dec
mov
xchg
inc
pop
jg
rorb
mov
and
adc
or
inc
sub
std
paddusw
subb
and
jo
cmpsl
or
and
loopne
pop
rol
push
inc
icebp
inc
das
loope
adc
push
sbb
pop
int
jno
lods
int3
jge
or
mov
in
jmp
mov
ds
and
xor
mov
lret
dec
adc
test
adc
in
mov
or
lahf
imul
or
mov
aad
imul
add
pop
inc
test
push
inc
dec
iret
add
arpl
xchg
push
and
insl
push
add
dec
clc
ret
lea
popa
mov
add
inc
aad
inc
fbld
or
inc
cltd
xchg
loopne
pop
arpl
xor
add
ret
pop
jecxz
or
add
and
aaa
imul
movsb
repnz
mov
pop
push
dec
pop
xchg
loope
stc
add
repz
popf
adc
adc
jo
mov
mov
adcl
lahf
mov
js
pop
xchg
jecxz
xchg
data16
xor
add
pop
inc
jecxz
gs
mov
movsl
pop
lds
icebp
and
fcom
and
inc
cld
xchg
and
inc
adc
into
cmp
adc
addb
pop
cltd
adc
pop
rorb
jg
popf
lock
cli
pop
push
pop
xor
jae
outsb
icebp
sbb
mov
pushw
xor
das
cltd
xchg
out
xchg
mov
and
adc
xor
cmpsb
ret
or
add
std
sbb
mov
fsubp
cmp
imul
das
mov
add
call
adc
adc
adc
sbb
out
popf
adc
adc
addl
pop
cmp
xor
xchg
lods
icebp
das
cmpsl
loop
xchg
out
popf
xchg
push
call
out
push
mov
imul
adc
and
clc
and
cmp
and
pop
call
mov
xchg
pop
or
imul
add
rorl
add
mov
pop
imull
adc
inc
mov
dec
push
int
loopne
fwait
adc
push
outsb
and
push
test
cmpsb
jae
mov
xor
sbb
adc
inc
test
cmp
sti
imul
inc
iret
pop
hlt
loopne
jnp
mov
dec
xor
mov
shll
xor
enter
out
cmpsl
or
inc
dec
add
inc
icebp
xor
sub
inc
clc
andb
shlb
inc
int
push
dec
sti
bound
push
out
jecxz
xchg
ja
or
in
xor
cs
lcall
jno
xchg
stc
imul
xchg
mov
and
mov
out
or
shll
or
mov
shll
mov
xchg
in
shl
scas
cmp
rep
ret
outsl
jmp
sub
fdivs
pop
mov
mov
cmp
test
fcmovu
xor
push
or
sbb
pop
mov
sahf
ljmp
mov
data16
ret
sub
in
dec
pop
bound
cld
pop
adc
inc
xor
mov
inc
mov
jne
loop
mov
arpl
lea
sub
flds
xor
sub
inc
in
in
scas
xor
subl
bound
xor
add
gs
ret
int3
imul
aaa
inc
or
lock
sub
xchg
dec
sar
sub
lret
or
dec
in
mov
mov
xor
add
xor
addr16
mov
dec
pop
push
jmp
dec
dec
in
sbb
loope
mov
inc
jle
mov
nop
or
int3
outsb
xchg
xchg
aad
cmpsb
inc
inc
scas
xor
add
test
lea
sbb
insb
aaa
jg
lds
insl
int
push
add
and
jl
test
cs
mov
iret
and
ds
shrb
into
mov
adc
test
add
cmpxchg
and
sub
pop
mov
test
push
mov
cmp
mov
sbb
lds
sti
aas
push
leave
push
sbb
dec
les
idiv
lret
test
or
dec
mov
sar
inc
outsl
mov
scas
jae
cltd
es
mov
xor
jge
loope
xor
add
bound
and
test
mov
inc
xlat
loope
mov
ja
bound
les
push
inc
rcl
cli
test
in
and
fstpt
je
dec
inc
inc
mov
rcl
push
bound
mov
dec
pop
iret
adc
ret
les
add
dec
pop
inc
out
mov
jp
xor
jl
addb
leave
add
cltd
mov
test
cmp
test
pop
test
pop
arpl
or
inc
mov
sub
xor
fstpl
les
sbb
test
shll
inc
dec
and
shlb
test
in
sub
scas
jmp
call
mov
sbb
mov
jbe
sub
mov
mov
es
enter
out
popl
or
out
hlt
ret
push
out
fwait
cmpsl
cmp
mov
sub
stos
xchg
out
aaa
es
jecxz
mov
in
cwtl
jbe
adc
xor
xor
mov
mov
clc
mov
mov
jb
xchg
push
xor
es
or
lret
lods
sahf
xor
add
test
dec
or
test
cmpsb
xor
sti
mov
std
insl
and
xchg
or
sub
sub
xchg
inc
sub
stos
add
imul
stos
cmp
push
icebp
adcb
test
or
lahf
push
loop
adc
cmp
ret
in
shlb
sahf
addb
mov
cmp
dec
pop
add
cmc
mov
mov
or
imul
out
mov
out
mov
aas
push
movsl
lods
inc
jbe
in
push
xchg
mov
dec
les
stos
in
xchg
loope
rorl
dec
mov
xchg
repnz
movsl
jg
mov
stc
adc
adc
clc
pop
sub
and
adc
add
jp
cmp
dec
aas
es
fdivrs
insb
sbb
les
stos
test
and
push
pusha
xchg
fidivl
repnz
push
and
bound
lock
stos
iret
cmp
ds
mov
jnp
nop
pop
dec
pop
dec
int3
sub
xor
pushf
xlat
push
jo
adc
ret
int3
sub
mov
scas
xor
and
push
push
cwtl
gs
adc
in
nop
loopne
jle
and
cmpsl
mov
test
out
stos
jno
mov
mov
jle
adc
jmp
and
es
shll
test
sahf
and
icebp
js
sbb
inc
and
mov
sub
fisubs
les
dec
or
iret
xchg
xor
pop
mov
mov
je
mov
sub
in
mov
lret
inc
add
movl
or
movsl
inc
mov
pop
cmp
rorb
data16
fsub
jle
addr16
test
mov
pop
sbbb
mov
push
aam
or
arpl
inc
jb
mov
repz
iret
sti
xchg
cli
loopne
inc
inc
leave
test
rcrb
push
push
sub
push
les
out
jne
xchg
mov
pop
movsl
imul
in
adc
lods
ret
loop
dec
aas
shlb
aas
lds
dec
dec
mov
sahf
and
mov
mov
push
and
arpl
or
mov
lahf
mov
les
xorl
sbb
outsb
push
dec
sub
dec
daa
icebp
addb
lcall
std
std
adc
mov
jo
cld
test
mov
add
lods
pop
cwtl
pop
ds
cmpsb
mov
and
imul
shlb
xchg
mov
stos
lea
sbb
pop
movsb
mov
xor
sbbb
xchg
bound
aaa
sbb
fwait
xlat
jnp
ds
jp
jecxz
or
dec
mov
cmp
mov
inc
test
les
test
mov
dec
and
das
loope
std
jmp
mov
sub
lret
inc
cltd
ret
xchg
repz
sbb
push
out
inc
mov
mov
mov
das
pushf
jae
clc
push
sahf
pop
pusha
std
mov
mov
sbb
cmpsb
mov
mov
inc
insb
add
and
push
xchg
jg
movsl
test
mov
loopne
lea
jle
mov
cmpsb
mov
inc
pusha
mov
sbbl
ret
adc
pop
or
ret
cmp
sub
movb
arpl
xchg
xor
mov
push
outsl
push
mov
ret
out
and
lahf
sub
or
in
mov
movsl
outsb
mov
rolb
jb
bound
pop
dec
lahf
loope
icebp
shrl
cltd
jmp
mov
movsl
add
hlt
push
stc
inc
add
inc
dec
add
cltd
jno
bound
test
xorl
fptan
leave
mov
in
adc
mov
inc
movsb
jne
cmpsb
aam
enter
dec
pop
pop
bound
cmpsb
jae
sti
notb
inc
movsb
in
mov
test
or
sub
add
sub
pop
inc
mov
and
xchg
add
fldl
lods
cmc
pop
mov
sbb
push
daa
loopne
push
inc
cmp
dec
mov
andb
test
or
add
lahf
fidivrs
cmp
sub
fs
movl
xchg
inc
push
xchg
xor
cs
mov
lods
inc
jmp
inc
dec
push
dec
in
les
xchg
insb
xchg
nop
mov
test
mov
push
outsl
mov
lock
es
das
lahf
inc
sub
arpl
shll
mov
nop
cmp
adc
or
jl
fs
sbb
mov
sbb
lahf
loop
test
dec
cltd
or
mov
loop
lahf
lods
js
xchg
dec
iret
imul
mov
in
cmp
pop
or
and
pop
mov
arpl
or
lahf
xor
scas
nop
aad
icebp
mov
lds
cli
bound
inc
jmp
stc
insl
cltd
test
and
add
xor
pop
leave
cmpsl
mov
push
mov
add
sub
add
and
icebp
sbb
test
andl
call
scas
xchg
sub
inc
dec
hlt
adc
insb
and
push
and
mov
rolb
add
push
mov
inc
fs
imul
icebp
lods
inc
enter
pop
jmp
lahf
rorl
ret
rol
lahf
inc
mov
pop
test
in
push
sub
add
jmp
icebp
cltd
mov
sarb
inc
mov
mov
mov
mov
rcrb
mov
pop
sbb
or
mov
arpl
lret
xlat
cmp
pop
sahf
cmp
lret
sub
or
sub
push
lods
dec
push
sub
mov
ret
roll
mov
enter
rcrl
push
in
in
dec
movsl
gs
adc
lea
mull
lock
loope
sbb
data16
push
xor
movl
ss
pushf
outsl
push
or
mov
jmp
mov
stos
popf
loopne
in
rcrb
outsl
pop
mov
mov
ret
xchg
out
test
sbb
ljmp
inc
adc
sub
inc
jle
add
loope
stc
or
fsubrl
gs
cmp
les
push
shr
adc
insl
loop
inc
cmp
popa
inc
push
bound
sub
sub
xchg
jmp
xor
mov
out
jecxz
lret
imul
insl
xchg
xor
lods
les
bswap
mov
mov
pop
imul
loopne
dec
and
cmpsb
xchg
xor
ret
xor
or
inc
jge
pop
sub
sbb
dec
add
sub
xor
cmp
jg
dec
iret
cltd
data16
xchg
aad
mov
sbb
sti
fisttpll
and
cmpsl
mov
mov
and
ljmp
add
pop
test
cmp
in
test
xor
mov
jae
cmp
mov
sbb
cmp
push
int
insb
adc
mov
cmp
mov
sbb
mov
jl
sbb
int3
jae
punpcklbw
movl
mov
mov
dec
shrl
or
dec
xchg
mov
dec
stos
mov
pop
leave
mov
leave
mov
dec
mov
sub
popl
gs
lea
es
dec
popa
aam
popf
andl
aam
xchg
mov
xchg
mov
or
pop
dec
cmpsl
pop
ffree
in
lcall
mov
aad
and
pop
addl
icebp
dec
jecxz
push
cmp
jmp
adc
imul
fisubs
add
push
xor
sbb
and
hlt
xchg
cmpl
push
lock
cmp
bound
test
add
fiaddl
data16
pop
orl
into
cmp
lcall
popf
push
cmp
xchg
pop
sar
scas
pop
pop
mov
test
inc
mov
dec
sahf
pop
dec
in
pushf
push
les
mov
and
xlat
ret
pop
sbb
mov
arpl
or
fisttps
test
xorl
mov
daa
pop
shrb
push
in
mov
mov
xchg
jnp
aad
mov
sub
clc
pop
outsb
inc
push
jae
inc
test
sti
cmc
xor
pop
je
lds
leave
push
mov
jne
mov
loopne
push
dec
iret
push
out
sub
dec
add
inc
fwait
loopne
mov
pop
xchg
in
xor
adc
fistl
or
mov
adc
dec
mov
mov
arpl
mov
addl
xor
mov
and
or
or
mov
mov
dec
ret
lea
pop
aam
lret
aas
fadds
or
or
dec
rcrl
jae
jne
inc
out
jecxz
mov
add
lds
int3
test
push
dec
jb
or
addl
rorb
adc
out
rorl
ffree
pop
mov
jmp
sub
add
aad
cmp
cltd
scas
xor
push
adc
sub
or
stos
rorl
cmp
fs
and
add
in
inc
out
mov
inc
loop
ds
shlb
out
jmp
out
aam
mov
aas
mov
sub
and
in
inc
add
add
and
daa
rol
push
inc
in
arpl
into
rcll
push
jmp
dec
mov
mov
xor
arpl
pop
mov
out
pop
or
sbb
test
jmp
sbb
enter
and
push
into
paddb
push
pusha
push
out
pop
cmc
int3
fsubrl
roll
jo
and
sbb
ljmp
popa
stos
jecxz
inc
or
addr16
es
dec
addr16
xchg
push
nop
movsl
cmpsl
or
sbb
adc
nop
shlb
cwtl
popa
icebp
loopne
mov
scas
aas
shlb
data16
adc
mov
and
add
mov
cmp
pop
out
fldt
andl
xchg
outsb
test
add
mov
cmp
es
loopne
add
loopne
mulb
stos
repnz
pop
mov
bound
push
jl
and
add
dec
lahf
shr
faddl
add
push
ret
in
cs
movsl
and
hlt
out
outsl
movsl
xor
cltd
rol
push
add
test
pop
orl
push
mov
lret
imul
fiadds
notb
and
adc
pop
loopne
sub
in
gs
mov
lea
rcll
nop
imul
push
idivl
ja
icebp
add
fcoms
add
xor
pop
ja
push
ja
mov
loopne
ja
dec
push
and
loop
ret
adc
dec
ja
aas
inc
or
mov
jae
push
adc
pop
adc
mov
and
sbb
mov
add
sbb
push
mov
ret
mov
aaa
call
cmpsl
js
pop
bound
mov
jg
dec
add
popa
pop
push
mov
push
sbb
mov
dec
pop
pop
push
cwtl
popa
mov
fld
mov
xor
sub
add
sti
sbb
adc
ret
aam
jmp
mov
cltd
ret
arpl
or
jecxz
popf
fisttpl
rorl
fstpl
inc
movsl
mov
pop
lcall
pop
dec
ss
fistl
adc
adc
and
enter
rclb
lret
mov
out
mov
xchg
lea
jmp
out
mov
fmuls
lret
inc
add
ror
dec
js
fsts
mov
dec
and
push
ss
adc
add
adc
mov
mov
push
sbb
mov
test
stos
iret
pushf
test
push
mov
xor
or
lret
xchg
xor
daa
js
pop
lods
test
push
pop
dec
out
pop
inc
outsl
test
dec
dec
jb
push
pop
inc
imul
cs
rorl
out
mov
dec
adc
or
mov
icebp
nop
mov
or
es
test
lahf
dec
inc
imul
jecxz
jae
imul
xor
mov
andl
div
dec
dec
clc
dec
dec
or
add
mov
imul
jnp
add
shrb
pusha
jle
jle
bound
xor
and
inc
adc
aas
out
lcall
mov
pop
adc
lcall
outsl
cmpsl
sub
mov
lcall
mov
xchg
jle
std
dec
cmc
cmc
sub
fnstcw
sbb
paddsb
adc
cmpl
es
sbb
xor
jmp
insb
aam
fucom
cltd
popa
loop
dec
nop
mov
mov
lret
or
pop
repnz
mov
cmp
test
adcb
jle
cmp
sbbb
cmp
jmp
jne
inc
icebp
xchg
add
mov
shlb
jmp
outsl
arpl
mov
cmpsb
leave
mov
and
loope
pop
lret
jmp
add
int3
lret
testl
and
rcll
das
adc
or
test
out
bound
or
rclb
xchg
lods
jg
movsl
sbb
bound
adc
inc
test
andl
sar
aad
inc
roll
inc
int
pop
ljmp
stos
jae
popl
aad
xchg
jb
inc
lret
jmp
adc
mov
jp
movsl
mov
flds
lret
mov
dec
cmpsl
inc
dec
pop
scas
int
or
test
pop
addr16
in
rolb
inc
arpl
repz
xchg
es
xor
fwait
xor
arpl
or
push
shlb
ret
mov
pusha
inc
and
add
lret
fiadds
cmpl
fadds
scas
xchg
outsb
mov
jle
test
loopne
lea
loope
ret
leave
dec
mov
test
xor
js
orl
and
inc
inc
push
push
add
dec
pop
push
lret
mov
test
outsl
lret
test
jbe
loope
push
mov
inc
repnz
jno
repz
loope
sub
dec
push
mov
int3
fs
imul
cmc
faddp
xchg
adc
movsb
cli
pop
iret
repnz
testb
add
mov
mov
inc
mov
sub
in
jecxz
sub
cmp
sbb
sbb
out
sub
pop
and
ret
movsl
mov
mov
sarb
loope
lret
adc
loop
sub
out
lret
icebp
sbb
ss
ds
inc
insb
test
loop
int3
or
fdivl
jp
mov
loop
gs
popa
xchg
je
out
cs
ljmp
dec
cltd
fcmovb
fs
pop
aaa
mov
enter
cmp
and
in
or
subl
inc
mov
mov
movsb
or
push
les
inc
mov
dec
mov
rorb
cmp
loopne
cmpsl
mov
rorb
in
adc
jmp
mov
mov
dec
arpl
cmp
or
pop
mov
mov
add
in
repz
loop
pop
adc
loopne
jmp
in
jg
cs
cmp
enter
in
mov
push
in
decb
xor
mov
icebp
inc
std
es
addb
push
xor
mov
sbb
les
and
cmpsl
or
xor
push
mov
and
inc
lret
dec
pop
cmp
sbb
pusha
pop
jnp
mov
and
lahf
ror
push
test
stos
adc
xor
pop
bound
pop
pop
xchg
xchg
dec
in
mov
loop
mov
rcrl
xchg
jle
insl
inc
outsb
std
jo
lret
in
or
ret
lea
dec
jecxz
test
lahf
arpl
adc
inc
dec
jge
jo
mov
int3
in
jecxz
arpl
orl
repz
jmp
fisubl
cmp
fisubs
mov
hlt
and
xchg
and
push
mov
jecxz
adc
dec
xchg
shll
incl
and
or
outsb
sti
fwait
jae
loopne
leave
push
xchg
mov
jo
push
lret
outsb
cmp
push
pop
mov
adc
adc
jbe
adc
pop
push
mov
xchg
ret
pandn
das
lea
sti
xchg
xchg
cmp
divl
shrl
divb
insb
decb
xchg
mov
and
add
sahf
jo
mov
cmp
add
or
popa
repz
xor
inc
cmp
add
adc
hlt
gs
call
lock
hlt
jge
and
jne
popa
or
jg
or
loop
bound
and
mov
jg
or
inc
and
enter
repnz
inc
repnz
arpl
call
lock
repnz
jecxz
sub
mov
mov
mov
mov
dec
test
sub
mov
push
add
arpl
subl
lds
stos
push
arpl
lds
stos
push
and
adc
sbb
lds
stos
xor
adcl
add
stos
xor
or
stos
popf
in
arpl
xchg
stos
shlb
xor
stos
arpl
dec
stos
arpl
and
stos
mov
xchg
inc
xchg
stos
scas
arpl
lock
arpl
add
add
dec
and
cmpl
add
dec
movsb
adc
xchg
mov
xor
mov
in
inc
gs
add
xor
inc
lcall
nop
cwtl
call
dec
jl
dec
pop
cmpsl
sub
inc
shrb
xchg
mov
jecxz
adc
cmp
test
test
fildll
stos
fsts
adcb
sbbb
popa
mov
push
loope
xchg
dec
sti
in
or
rorl
xor
mov
inc
sbb
cmpsb
mov
or
jl
lea
mov
dec
xor
push
lret
and
stc
push
and
aad
dec
gs
or
add
jmp
popa
inc
jno
fidivrl
sahf
sub
or
loop
nop
mov
push
inc
add
icebp
jmp
arpl
and
loope
xor
add
cs
and
idiv
mov
sbb
test
insb
add
fdivr
shlb
push
andb
in
mov
adc
andb
shrb
xor
loop
and
sahf
and
fbstp
mov
imul
and
cmp
mov
or
dec
int3
lds
ret
xchg
enter
or
xlat
xor
mov
test
fildl
mov
inc
push
imul
mov
gs
xor
and
inc
xor
cmpb
push
and
and
sbb
sbb
add
mov
add
mov
andb
mov
inc
adc
mov
cmp
out
in
icebp
cmp
inc
xor
inc
mov
adc
orl
lret
sub
push
les
fildll
icebp
test
lret
lods
inc
adc
mov
or
lret
stos
inc
popf
push
addl
inc
repnz
mov
or
or
cli
fsubrl
cmp
inc
xor
push
inc
cmpsl
inc
sets
fsub
lea
je
orb
or
xor
inc
xor
push
shll
in
and
sub
fwait
cmp
sbb
jl
mov
loop
and
nop
push
in
gs
or
fistpll
es
inc
shll
repz
inc
inc
test
lret
adc
jbe
xor
sub
push
rolb
subl
mov
dec
shll
sub
lods
gs
sahf
popa
mov
push
lcall
xor
push
and
mov
lea
dec
sub
sbb
fwait
in
fldl
xor
loop
mov
add
in
cmp
push
add
imul
bound
cmpsl
mov
inc
inc
xor
sti
inc
loop
and
jle
dec
xchg
xchg
inc
les
mov
cmc
in
aad
dec
mov
lret
lcall
cwtl
mov
cmp
mov
or
mov
mov
mov
sub
loopne
adc
sub
cwtl
pushf
shl
shlb
or
pop
and
or
jge
push
jbe
or
push
push
movsl
mov
adcl
mov
mov
and
push
into
rolb
cmpsb
add
push
or
scas
scas
fnsave
das
in
xor
cmp
cmpsl
xchg
lds
dec
push
mov
bts
dec
popf
cmc
push
mov
jg
adc
hlt
inc
mov
xor
mulb
and
jle
shll
add
into
out
dec
ljmp
std
dec
fistpll
lea
inc
xor
insl
mov
repz
add
ljmp
cltd
jmp
into
lret
mov
pop
pusha
test
into
js
outsb
pusha
cmc
mov
inc
or
or
add
fs
imul
dec
or
subl
mov
clc
jmp
test
mov
adc
unpckhps
xchg
popa
daa
mov
mov
mov
test
jns
loop
scas
int3
scas
imul
add
sti
dec
mov
adc
mov
lds
dec
or
andl
or
sub
inc
or
or
or
test
jo
les
std
push
data16
jmp
adc
sbb
popa
mov
and
pop
lea
jmp
sbb
loopne
xor
or
test
push
sub
dec
mov
ret
or
push
lds
dec
out
and
mov
sbb
scas
add
sbb
pop
mov
xor
push
or
mov
adc
and
pop
jne
push
ret
shll
push
movsb
repz
imul
inc
push
add
es
shr
leave
rolb
sbb
loope
inc
gs
inc
sbb
xchg
fiaddl
adc
mov
or
push
mov
es
inc
push
call
inc
inc
mov
addl
and
xor
xchg
mov
test
roll
pop
dec
imul
std
jmp
mov
or
sub
sbb
mov
cli
imul
dec
icebp
ds
stc
stc
pop
bound
push
loopne
push
adc
mov
sbb
imul
adcb
shl
mov
xchg
pop
dec
test
cmp
adc
push
mov
mov
adc
mov
mov
add
pop
fs
lea
loope
cmp
jle
ret
xor
dec
sahf
mov
cltd
call
cmpl
roll
test
lock
push
lret
push
sub
inc
sbb
push
nop
cmpsb
test
inc
nop
leave
cmpl
cmpl
mov
inc
inc
adc
mov
add
out
aas
cmp
outsb
cmp
add
sti
ret
test
out
icebp
insb
add
loop
push
aad
add
ret
loope
fcomip
adc
pop
popa
je
pop
test
loop
fs
mov
mov
stc
or
stos
das
jmp
jmp
mov
cmp
mov
inc
dec
mov
das
mov
jmp
mov
add
add
pushf
adc
cmp
push
push
push
dec
or
mov
xchg
pop
sub
adc
test
and
or
inc
and
push
out
inc
inc
push
popf
or
push
rep
popf
mov
sahf
xor
stos
sbb
mov
lods
inc
sbb
dec
test
cmovae
test
test
imul
cmp
stos
pop
bnd
leave
cmc
push
cwtl
sysexit
lret
jp
cmp
loopne
push
shrb
shrl
aaa
inc
shll
xchg
jnp
xchg
or
cmp
dec
ret
scas
arpl
test
roll
inc
mov
loopne
sbb
xlat
fsts
xchg
mov
xchg
inc
ficompl
gs
ss
outsb
mov
bound
std
adc
sub
lret
and
push
inc
mov
mov
sbb
sub
xlat
out
jo
xor
mov
fs
test
pminub
mov
inc
mov
sub
jno
dec
xchg
and
dec
lahf
mov
mov
cmp
subl
ret
or
and
imul
ret
push
inc
or
test
sub
push
ret
mov
pop
les
jl
push
scas
aam
adc
rclb
dec
dec
nop
test
mov
sub
push
cmpl
mov
xchg
sub
jge
or
adc
lds
mov
jmp
les
xchg
push
rcl
stos
and
mov
mov
mov
mov
mov
mov
push
push
xchg
mov
push
ljmp
mov
dec
or
sub
ds
bsf
adc
xchg
incb
mov
xchg
jnp
inc
test
sbbb
push
test
inc
xchg
mov
mov
mov
add
push
mov
sbb
inc
xchg
mov
mov
xchg
test
cmp
fwait
insb
sbb
sbb
xchg
push
ja
sahf
inc
lret
test
jp
test
in
add
ret
and
arpl
sbb
add
add
pop
pop
ss
sub
dec
inc
and
mov
jmp
inc
add
sbb
jns
shrl
popa
in
les
xchg
rdmsr
jbe
test
ljmp
add
and
dec
ror
xchg
and
test
addl
cltd
and
push
or
cmp
test
cld
add
lock
ljmp
pop
adc
loope
inc
pop
loopne
and
add
popa
aam
sbb
shll
push
pop
mov
jns
cmp
test
and
cmp
xchg
mov
aas
lret
pop
aam
in
out
movsl
lcall
pusha
push
cmp
fldl
popa
stc
cmp
fidivs
rorl
mov
dec
inc
into
and
or
es
stos
loopne
or
movsl
xor
xchg
and
inc
call
inc
mov
mov
pop
jp
xor
mov
inc
mov
xor
mov
mov
add
sbbb
pop
shl
arpl
inc
in
pop
adc
push
hlt
mov
lcall
mov
xchg
clc
test
iret
stos
bound
fisttpll
movl
pop
and
fldcw
or
lock
inc
lods
adcl
pushf
mov
or
testl
fs
jl
mulb
inc
and
fs
xchg
push
inc
cmp
xor
pop
movsb
inc
add
xor
movsb
out
orl
je
jg
lea
add
and
cvtps2pi
cltd
cld
addr16
cmpsl
addl
sbb
push
mov
dec
mov
hlt
push
sbb
fs
pop
sbbb
sub
imul
push
bound
and
xchg
in
nop
out
movsb
mov
enter
outsb
into
cs
lods
sti
fs
add
inc
and
pop
cmp
xor
and
xor
test
adc
dec
xchg
xor
shrb
and
dec
xchg
xchg
pop
xchg
sbbl
pop
add
cltd
dec
sbb
sarb
pop
mov
sub
pop
xchg
inc
repnz
andl
icebp
jp
add
push
shll
in
mov
sarb
or
lods
dec
shrl
shlb
ret
mov
outsl
push
loop
loope
adc
jmp
push
cmp
cmp
dec
sub
int3
movsb
ret
decb
or
adc
inc
in
pop
sbb
push
loope
pmulhuw
ds
adc
sarb
adc
or
cmp
ja
push
pusha
adc
lea
aad
lds
stos
std
inc
inc
xchg
and
mull
or
xchg
and
nop
stos
and
mov
jmp
jmp
or
pop
mov
mov
repnz
sub
enter
pop
es
dec
arpl
xor
lahf
mov
cs
mov
add
mov
push
fwait
push
push
orl
jb
xchg
mov
mov
inc
ror
xchg
xacquire
les
les
aaa
push
fsub
jno
jg
mov
bound
sbb
and
pop
stos
aas
lret
sbb
jnp
lahf
sub
cwtl
rdtsc
mov
push
daa
xchg
roll
test
mov
stc
shlb
insl
add
aas
cmp
jno
out
add
adc
hlt
sahf
mov
shl
pop
add
dec
cltd
int
xorb
pop
incb
push
mov
imulb
cmp
mov
mov
xchg
mov
xor
cmpl
xchg
add
add
xor
loope
lods
dec
mov
mov
sub
pop
enter
imul
cltd
xorb
subl
push
movb
out
pop
jns
sbb
in
leave
es
test
mov
push
and
lea
stos
mov
add
jnp
mov
xchg
sbb
mov
lahf
xor
loop
ret
jp
xor
inc
bound
pop
lcall
icebp
cmp
subl
dec
add
inc
cmp
jg
xor
cmc
mov
scas
cmpsl
adc
emms
notl
mov
orl
das
push
inc
mov
notl
enter
and
out
inc
in
fdivrs
cld
mov
into
dec
cltd
or
sub
xchg
jmp
lea
ja
ret
xchg
xchg
add
pop
loop
rclb
fiaddl
int3
xor
sub
jnp
jg
cmp
daa
test
sbb
and
ret
adcb
push
mov
jns
sbb
jb
jl
in
addr16
lea
test
cld
pop
and
arpl
fwait
rcr
and
adc
mov
jecxz
pop
outsb
dec
incl
sub
leave
mov
sbbl
sti
push
dec
imull
xchg
lret
mov
ljmp
test
nop
cltd
mov
fistps
inc
fwait
call
mov
add
hlt
les
add
ret
mov
aam
inc
cmpsb
xchg
ret
loope
inc
cmp
lock
aam
mov
mov
mov
push
jp
or
outsb
mov
stos
jle
or
bswap
sbb
pop
roll
shll
mov
dec
add
mov
je
inc
cmp
fstl
aad
mov
pop
push
daa
cwtl
outsl
mov
sbb
sub
shlb
gs
sub
adc
daa
cmp
shll
ret
dec
outsl
int3
or
and
jae
std
mov
lahf
int
inc
or
mov
xchg
shrb
leave
push
addr16
mov
cmp
leave
adc
cmp
stc
leave
adc
add
and
rcrb
or
inc
push
and
add
jge
aad
cmp
dec
lahf
inc
and
es
bound
shrb
mov
lea
jecxz
roll
lret
pop
hlt
dec
mov
fiaddl
xchg
mov
addr16
adc
test
push
add
lds
sub
shll
mov
imul
and
lds
cmp
jne
sahf
pop
and
arpl
div
test
in
cmp
jb
and
cmc
in
and
push
or
cmc
add
loopne
xor
mov
movsb
mov
inc
and
mov
outsb
lahf
mov
xchg
cmp
dec
or
popa
stc
xchg
lods
adc
test
fs
jno
mov
insb
fisttps
inc
andb
inc
pop
shrb
btc
pop
jns
inc
cmpsl
call
push
and
and
fucom
jecxz
fstpl
inc
adc
and
roll
add
mov
leave
sbb
and
arpl
ja
out
lcall
arpl
xor
sahf
rclb
and
aam
add
lea
add
mov
ja
add
adc
and
add
andl
shll
sub
test
lret
xor
inc
add
inc
ret
xor
jecxz
imul
or
push
mov
stc
inc
and
and
in
or
lea
or
mov
mov
lea
and
lods
and
inc
outsb
test
inc
xor
push
test
loope
jno
sbbl
repz
adc
and
ds
fcmovnb
add
inc
mov
lock
jne
mov
mov
xchg
ds
enter
flds
and
outsl
inc
xor
inc
jl
test
in
and
inc
cs
xchg
adc
test
loop
jb
jp
jnp
push
scas
or
xchg
jb
mov
ja
and
pop
jnp,pt
ret
xchg
mov
push
orb
pcmpgtb
add
jmp
sub
clc
neg
cmp
cmc
cmp
movsbl
setg
pop
lea
not
mov
movw
lea
ja
pushf
pushl
call
mov
push
mov
movb
pushl
ret
pushf
pushf
movl
pushf
mov
pushl
popl
mov
movw
pushf
pushl
pushl
ret
movb
cwtl
push
cwtl
lea
call
bt
add
pushl
pushf
pushf
push
lea
jmp
pusha
ret
xlat
pop
xchg
inc
out
pop
xchg
lcall
xchg
inc
sahf
sbb
sbb
mov
out
xchg
pop
push
std
mull
mov
sti
les
jmp
lods
adc
xorl
mov
in
movsl
sub
adc
mov
push
xchg
test
inc
add
add
xlat
clc
sti
jmp
movw
pushf
lea
jb
push
movw
pushl
ret
je
xchg
pop
xchg
leave
xor
add
push
fstps
xor
and
xchg
pop
cwtl
inc
sub
sub
test
cltd
cmc
test
or
sbbb
dec
lret
pop
outsb
cmp
inc
ds
xchg
fsubrp
outsb
adc
hlt
sti
lcall
call
jmp
movb
lea
ja
and
sub
sbb
add
shr
mov
stc
push
call
sbb
adc
mov
cld
and
cmp
in
sbb
mov
arpl
movsb
mov
cmc
lahf
adc
fwait
aad
pop
shlb
sahf
jecxz
and
pop
push
ss
mov
and
subb
jle
data16
mov
insb
xchg
repnz
int
stos
push
pushf
pushf
lea
jmp
cmc
add
pushf
pushf
lea
je
push
pushf
pusha
add
movb
movb
mov
lea
jmp
int3
popf
pushf
movl
push
call
and
call
movb
lea
jb
call
call
push
adc
mov
dec
mov
inc
xchg
es
cli
sahf
xchg
pop
das
pop
xchg
xchg
pop
cmpsb
push
adc
fwait
or
or
ds
push
enter
jno
in
xor
mov
push
testb
repnz
jmp
fisubl
mov
fwait
lahf
cmp
rcrl
jecxz
fildl
jecxz
mov
dec
loope
jo
lods
aaa
xchg
pop
mov
sbb
cmp
test
jb
pop
int3
sbb
addr16
and
imul
outsl
and
fsubr
jne
repnz
loope
xor
pusha
pusha
lea
je
push
pushf
call
lea
call
call
pushf
lea
jne
push
pushf
movb
cwtl
pushf
mov
movzbw
setne
not
movsbw
lea
mov
pushf
pushf
call
ss
xchg
dec
ljmp
pusha
fidivrl
int3
mov
cmpsl
push
aas
fwait
ss
hlt
and
insb
fsubl
out
sbb
cmp
inc
mov
xor
inc
in
xor
mov
stos
daa
mov
arpl
in
cmp
cmp
push
sub
adc
sub
inc
sub
inc
popa
xchg
ret
push
cs
xchg
shrb
js
xor
or
add
aam
xlat
fildl
sbb
push
mov
ss
aaa
sub
aad
and
mov
movsl
shll
dec
mov
cli
lahf
jmp
add
loop
adc
jle
iret
insb
stc
pop
repnz
daa
cmp
push
rclb
mov
aaa
inc
xchg
mov
add
sbb
dec
push
fistl
repz
dec
jno
test
add
and
nop
repnz
dec
pop
sbb
lods
cmpl
leave
mov
sub
js
inc
call
mov
pusha
lods
pushf
dec
cmc
neg
test
cmc
call
movl
pusha
lea
jmp
iret
aam
bound
shrl
and
adc
sarl
inc
fcmovne
in
int3
dec
jns
cmp
jno
pop
adc
lahf
movsb
cmp
out
sub
shl
sbb
and
data16
leave
push
nop
add
lcall
fdivl
mov
cmp
pop
cmpsl
mov
loope
push
jecxz
inc
in
pusha
mov
shl
sbb
mov
rcrb
pushfw
mov
lods
loopne
loopne
rolb
rorb
fildll
fisttps
push
hlt
sti
call
insl
data16
xchg
xor
rol
rcrl
mov
clc
sbb
jmp
sti
lock
jb
mov
mov
test
push
fucom
test
popf
test
call
push
jmp
movw
pushf
lea
je
pushf
setne
test
and
add
shld
sar
mov
bt
stc
pushf
pusha
add
push
clc
stc
cmp
mov
pushf
shl
mov
push
mov
cmp
jmp
outsl
je
arpl
xor
sbb
fcmovne
arpl
imul
pushf
inc
in
lcall
mov
test
push
hlt
cwtl
xchg
std
sub
jne
pusha
ret
mov
mov
sub
sub
cmc
daa
ss
jl
pushf
movl
jmp
ror
arpl
cltd
inc
mov
sarl
rcr
arpl
xlat
dec
ja
push
or
jp
add
in
jnp
rol
add
push
and
or
mull
lods
orl
xor
insb
sbb
clc
adc
cltd
lea
jle
fstl
xor
sub
scas
mov
lcall
leave
es
inc
cmp
mov
sahf
fs
scas
ljmp
jmp
pop
jb
out
and
ljmp
mov
rorl
cmp
mov
and
es
mov
inc
pop
or
imul
jno
in
and
stc
pushl
sub
mov
pop
mull
iret
sbb
push
xchg
gs
push
jae
dec
dec
lods
subl
je
dec
cmp
inc
sub
repnz
jb
faddp
cmp
and
ret
fidivrs
mov
pop
icebp
or
addl
xchg
sbb
mov
adc
dec
cmp
add
das
or
push
dec
movb
jecxz
pop
xchg
in
or
mov
jbe
push
outsb
ret
mov
mov
pop
std
popa
rorl
jl
or
mov
stos
ds
push
lods
roll
push
jbe
mov
mov
pusha
lea
je
clc
bt
call
lret
rcl
xchg
pop
popf
xchg
test
jns
pop
lds
add
or
jnp
bound
cmp
and
imull
sbb
movb
xchg
sbb
test
lahf
add
out
dec
data16
cwtl
mov
fwait
scas
push
dec
in
jbe
and
push
cwtl
lods
mov
fsub
mov
lret
inc
icebp
loope
lcall
daa
and
add
ja
xchg
add
in
or
je
sub
and
mov
std
notb
xchg
pop
fisubrl
imul
idiv
inc
cld
test
popa
aad
in
pushf
or
loopne
insb
shlb
xor
mov
and
mov
mov
les
in
pop
insb
imul
in
ds
js
push
lret
cmc
xor
fsubl
push
mov
mov
jb
and
sbb
scas
jns
dec
xor
inc
xor
jmp
lcall
xor
inc
lea
dec
pop
cmpb
and
cltd
mov
jo
mov
data16
xchg
les
call
arpl
ja
out
rolb
add
mov
and
cmp
mov
fmuls
jmp
jno
popf
fs
xor
in
notl
cs
inc
imul
cltd
mov
cmp
fs
inc
jbe
les
xor
or
xor
jno
inc
xchg
jmp
mov
sahf
jl
in
movsl
or
mov
xor
in
push
xorl
outsb
jnp
xchg
inc
cmp
out
or
daa
push
lock
jg
sbb
sub
lock
and
ret
lcall
or
xchg
pop
cwtl
dec
ljmp
inc
das
addb
dec
adc
stos
xor
fsubl
adc
aaa
pop
mov
sarb
dec
cpuid
push
out
adc
cmp
xor
cli
iretw
and
mov
sbb
add
sub
sti
xchg
pop
pop
pop
xor
xor
lods
fdivr
addl
mov
pushf
lea
jb
pusha
pusha
pushl
ret
clc
cmpb
push
pushf
mov
lea
jne
bswap
shr
cmc
inc
mov
stc
push
add
stc
bt
clc
pusha
movzwl
sub
xor
sbb
mov
push
mov
add
ja
add
bt
call
cmp
cmpb
mov
jmp
jmp
inc
dec
bound
mov
rcrl
mov
fldcw
mov
sub
loope
cs
ret
sbb
movsl
cltd
jnp
fwait
or
xchg
cmpb
enter
fwait
imul
xchg
mov
jge
pop
or
jo
push
jo
cmpb
cld
or
imul
data16
mov
movsb
mov
test
pop
sbb
xlat
xor
mov
or
mov
pop
push
inc
ljmp
jp
cltd
mov
sbb
subl
mov
outsl
dec
in
shlb
sbb
in
xor
arpl
testb
mov
jno
xchg
inc
in
adc
rclb
sub
cmp
jecxz
pushl
mov
mov
xchg
pusha
fidivrs
cmpsl
sbb
insl
mov
cmp
clc
lea
subb
test
out
ficomps
pop
jb
negb
lret
das
add
or
jbe
repz
jne
adc
test
shrb
incl
into
lds
mov
push
mov
dec
aad
sbb
sub
cld
push
mov
cwtl
mov
sub
fadd
add
or
repz
aad
or
negl
mov
sub
mov
hlt
in
imul
jb
push
push
adc
inc
mov
fidivrs
xchg
push
pop
and
test
aad
cmc
jno
or
sbb
lods
xchg
pop
shl
mov
and
stos
es
push
pusha
lea
jmp
imul
call
unpcklps
push
mov
xor
xor
dec
ja
lock
sub
rcr
dec
push
enter
and
in
or
ror
dec
pushf
cmp
mov
movsb
sub
repz
and
sbb
das
jl
frstor
test
clc
shlb
push
aaa
xchg
xor
call
push
mov
sbb
cwtl
mov
mov
sbb
das
dec
lods
cmpsl
jmp
lods
mov
xor
mov
mov
repnz
push
test
stos
xor
jg
mov
inc
mov
stos
cmpsl
jmp
ret
stos
push
lds
test
ja
dec
pusha
and
vcvtpd2dqx
pop
in
lock
jecxz
es
movsl
add
in
lret
xor
cltd
push
daa
push
in
mov
mov
loopne
lock
xor
test
sbb
es
or
movl
pushf
lea
je
pushf
pusha
mov
jmp
pusha
pushfw
popw
xor
shr
stc
mov
call
inc
test
clc
cmp
mov
cmp
bt
cmc
pushf
add
mov
bt
test
pushf
jmp
pushf
mov
inc
pushf
clc
bt
neg
cmc
push
pushf
shr
jmp
mov
rep
mov
mov
pusha
movb
lea
jmp
cmp
mov
lea
jbe
xadd
sub
call
lea
jne
bswap
mov
pushf
pusha
movw
lea
jmp
call
pushl
lea
jb
jmp
lea
jae
pusha
pushl
clc
stc
sub
mov
pushf
mov
lea
call
pushf
lea
jnp
pushf
pushf
lea
jae
call
movb
lea
jb
test
call
mov
shrl
hlt
negb
jp
sbb
add
rorl
inc
in
je
mov
push
in
repz
push
pop
xchg
dec
xchg
push
inc
inc
and
addr16
out
clc
cmpl
pushf
mov
les
fiadds
test
lods
jo
movb
pop
or
cmpb
mov
add
sbb
pop
push
mov
aad
fisubrl
ret
mov
repz
sti
mov
mov
lret
call
je
shr
dec
cmp
add
bsr
sar
mov
clc
call
add
clc
jmp
fcom
out
xchg
mov
ficomps
push
ret
cs
scas
mov
insb
dec
push
test
pop
mov
sbb
sbb
and
out
loop
jle
loope
iret
sbb
out
repz
pop
imul
mov
push
jns
repnz
cmp
call
pusha
stc
test
call
not
not
mov
push
pushl
lea
call
jmp
dec
bt
call
call
call
jmp
jg
repnz
xchg
jb
sbb
aad
push
sbb
jne
mov
and
inc
movsb
pop
hlt
and
xchg
pop
fwait
add
push
imulb
je
fcoms
enter
cltd
mov
cltd
pop
negb
stc
call
mov
popf
cmp
mov
movsl
adc
fnstsw
push
sbb
push
mov
cmpsl
and
repz
and
outsb
add
in
sbbl
cmp
inc
cmpsl
cmp
jmp
push
dec
outsl
push
dec
jl
push
pop
mov
js
push
xchg
inc
imul
pusha
fadd
or
test
mov
negb
pushf
idivb
jne
in
adc
loope
test
mov
mov
and
jne
pushf
mov
mov
pusha
movl
pushf
pusha
mov
jmp
xchg
adc
and
test
lock
decl
mov
shl
add
not
and
mov
clc
test
call
pop
inc
pop
outsb
xchg
out
sub
scas
xchg
sbb
jmp
sub
loopne
stc
and
arpl
rep
sbb
mov
cmp
mov
subb
mov
mov
adc
xchg
adc
cmpsb
xchg
dec
fcmove
ss
push
lret
cld
xchg
sarb
xor
add
cmc
xor
mov
fsubrs
and
push
cmp
push
fucom
and
fcom
jmp
and
sbb
fisubrs
es
mov
out
dec
repnz
push
jb
and
inc
fdivrs
out
jae
mov
fisttpl
out
scas
sti
mov
inc
dec
adc
shr
shl
fs
jae
btc
mov
bts
mov
bts
rcl
mov
pushf
cmc
clc
call
repnz
jmp
inc
in
outsl
xchg
sub
hlt
xor
add
dec
aam
and
dec
shll
adc
or
movl
ja
cmpsb
into
shrl
fsin
mov
in
movsb
sub
dec
add
sarl
cmp
lret
inc
cmp
lret
add
test
lret
jecxz
les
test
jmp
sbb
pushf
inc
push
cld
cwtl
int3
lock
and
in
add
repnz
dec
clc
aam
test
loopne
mov
push
movl
pusha
pusha
lea
jmp
in
cmc
mov
add
stc
icebp
cld
mov
add
cld
hlt
mov
incl
repnz
mov
push
icebp
add
hlt
mov
mov
clc
cmc
mov
or
icebp
std
stc
repz
stc
sti
mov
stc
repnz
add
mov
add
ja
cmc
push
imul
clc
movl
add
push
pushf
lea
jmp
bsf
neg
bswap
mov
xor
cmp
add
rcr
add
pop
pushf
pop
pusha
mov
movb
pusha
pushf
jmp
call
cmp
bnd
mov
xchg
imul
inc
enter
xor
push
add
icebp
adc
sub
mov
movsl
cmp
cld
enter
lock
je
je
cwtl
or
sub
insw
dec
jns
push
adc
insb
ds
xor
sbb
xchg
sbb
xor
pop
cmc
add
cli
ja
push
push
push
clc
sub
sbb
in
push
test
addr16
adc
mov
mov
sbbb
ds
xor
imul
ss
hlt
cltd
mov
shld
out
or
xlat
lock
mov
xchg
movsb
push
movsl
lret
fisubl
pop
push
or
mov
cmc
fnstsw
push
imul
scas
and
lds
lahf
movsb
lds
aaa
stc
frstor
xchg
cmp
xor
mov
xor
mov
frstor
jle
pushf
sub
test
mov
gs
bound
ror
fnsave
mov
pop
mov
lock
jbe
in
jecxz
mov
cmpb
and
add
hlt
loope
add
mov
pop
scas
mov
cmp
lods
push
movsb
shlb
je
mov
ljmp
xlat
popf
cmpsb
mov
adc
in
std
cmpps
call
movsl
cltd
in
imul
push
shll
xlat
dec
mov
inc
inc
add
insb
xor
cmp
cmp
popf
mov
push
and
lods
scas
inc
jns
mov
jae
aad
add
add
fisubs
gs
stc
mov
push
xor
add
mov
ret
mov
gs
push
insb
jge
mov
jo
xchg
mov
cmp
pop
push
add
insl
cs
or
add
in
pop
sbb
mov
popf
mov
scas
sub
pop
adc
repnz
movsl
mov
in
pop
xor
lret
aad
das
mov
inc
pusha
mov
mov
addb
push
mulb
push
out
pop
clc
and
lods
inc
jmp
mov
scas
jo
cmp
shlb
std
inc
add
mov
in
in
cmp
xor
decl
scas
dec
fists
and
mov
arpl
out
sub
push
iret
nop
adc
inc
mov
add
pusha
xchg
jnp
push
mov
mov
outsl
call
arpl
out
shr
call
test
mov
push
pop
xchg
das
ret
pop
jecxz
push
cmpsl
mov
jne
dec
pop
rcll
aaa
add
addr16
xchg
pop
je
cmpsl
mov
popa
ret
sub
pop
int
in
mov
jge
insl
stc
test
jmp
pusha
jmp
rcl
pushf
rol
dec
not
push
inc
inc
bt
shr
sub
neg
push
pushf
stos
jmp
jbe
xorl
sub
xchg
adcb
std
aaa
or
gs
xchg
pop
push
ret
fwait
rolb
cwtl
out
and
xchg
fnstcw
mov
arpl
pop
cmp
iret
stos
negl
repnz
mov
shl
je
mov
test
les
ror
or
lods
xchg
adc
fmul
int3
jo
push
mov
dec
lods
mov
cwtl
lcall
or
mov
fwait
inc
test
mov
outsb
xchg
out
xchg
stos
jbe
xor
les
fs
aam
out
pop
push
sub
mov
push
add
data16
mov
dec
icebp
ljmp
leave
ret
adcl
icebp
in
mov
popf
roll
test
movl
call
mov
push
call
not
setl
shl
bt
mov
pushf
cmpb
push
call
push
pop
outsl
jne
mov
cmp
mov
and
xchg
adc
es
pop
test
pop
ja
scas
jae
mov
jb
mov
out
sbbb
test
loope
stos
dec
mov
into
out
pop
xchg
jecxz
adc
sub
fidivl
or
dec
pop
jb
sahf
inc
aad
es
ss
jp
mov
dec
outsl
jmp
xor
outsl
pop
and
mov
movl
lea
jne
pushf
movb
pushf
movl
pushf
movw
lea
jmp
call
adc
jmp
neg
call
mov
jmp
jmp
push
lea
jne
sbb
stc
cmc
sub
cmc
mov
dec
add
add
mov
pushf
pusha
test
jmp
inc
call
lea
jp
push
push
pusha
push
lea
jmp
lea
ja
pushf
call
pushl
popl
pusha
pushl
movb
pushl
ret
adc
and
mov
mov
mov
mov
add
out
ret
iret
sub
subl
pop
jmp
mov
mov
fldenv
cmp
pop
daa
pop
dec
adc
clc
addl
xor
mov
mov
loopne
pop
and
dec
inc
popf
pop
mov
std
mov
mov
mov
jnp
xor
fbld
xlat
mov
rcr
add
pushf
mov
rol
sbb
add
shld
btr
not
movl
rcl
rol
mov
test
bt
test
bt
cmp
call
movzwl
bswap
add
sbb
mov
clc
bt
jmp
lea
jle
push
lea
jbe
or
adc
mov
add
rcl
xchg
bts
add
call
pushf
jmp
pop
call
js
mov
andb
lcall
push
xchg
dec
xor
jmp
sbb
divl
daa
and
sbb
pop
fidivrs
out
xchg
lcall
testl
movsb
sub
cmp
ret
pop
jne
push
and
and
shl
and
in
js
movsl
push
in
xchg
fcomps
inc
pusha
jg
outsb
ret
aaa
test
sub
jecxz
arpl
adc
outsl
je
clc
mov
or
mov
ss
into
rcrb
ficompl
imul
push
pop
je
xchg
adc
push
int
jne
lea
jmp
xor
fstl
js
lcall
mov
sub
shlb
inc
sub
push
jns
popa
in
sub
xchg
add
inc
mov
mov
ds
pop
je
xchg
sub
pop
mov
movsl
mov
leave
ret
lea
dec
xchg
xchg
scas
mov
push
fcmove
push
xchg
stos
dec
mov
repnz
dec
stos
cmp
xor
test
fistpll
dec
push
cltd
mov
xor
rclb
push
dec
jbe
adc
scas
movsl
mov
out
jnp
dec
inc
push
jns
mov
rcll
test
fmull
mov
xor
dec
xchg
xchg
scas
or
xor
add
or
gs
out
jne
lods
jns
lcall
in
inc
or
jge
gs
push
jns
sub
pop
std
std
mov
lahf
ret
js
push
or
enter
adc
cltd
adc
pop
scas
ss
push
lahf
dec
int
jne
in
cmp
add
aam
pop
lds
call
cwtl
push
aaa
test
in
fwait
popa
rcrl
inc
inc
data16
in
xchg
push
push
test
mov
xchg
jmp
mov
push
fisttpl
mov
lea
call
lds
jp
mov
orb
jb
test
lods
insl
or
xor
cmp
xor
lret
ja
iretw
pop
mov
movsl
rcll
je
repz
in
pop
dec
out
filds
es
lret
dec
repz
lcall
out
sub
int3
aaa
and
cli
add
mov
add
jmp
and
mov
out
and
cmpsb
mov
sbb
out
subb
pop
mov
push
and
outsb
jne
lds
shrb
sub
pop
bswap
jmp
test
stc
cmp
pusha
lea
jmp
lea
jne
jmp
clc
sub
clc
pusha
pushf
cmp
lea
call
out
add
mov
fiaddl
ljmp
out
mov
ljmp
inc
adc
shr
shrb
ret
ljmp
imul
ljmp
jno
fdivrp
fistpl
andl
jbe
pop
mov
mov
cmp
pop
out
in
into
sbbb
bound
fcmovnb
mov
mov
push
jb
or
add
jmp
xchg
xchg
in
xchg
mov
test
inc
add
pusha
push
cmp
push
add
push
inc
sahf
lcall
into
loop
repnz
ljmp
xchg
xor
push
and
cmp
add
sti
adc
add
imul
adc
dec
cmc
imul
add
mulb
scas
js
sbb
cmp
inc
imul
sbb
push
push
test
pop
xlat
fadd
negl
pushf
push
mov
adc
mov
inc
cs
add
jns
mov
sbb
decl
fs
jmp
push
push
pushf
lea
jmp
pusha
call
push
cmp
lea
pusha
jmp
jbe
cmpl
and
or
insb
nop
fs
outsb
std
ja
leave
jae
repz
aad
aam
jb
and
es
adc
push
loope
dec
std
call
testl
inc
pop
repz
gs
push
loope
loopne
shll
clc
cpuid
lea
test
mov
cmpsb
ficoml
push
jle
xchg
and
dec
jg
inc
push
or
xor
out
or
fwait
mov
stos
xchg
mov
xchg
lds
and
lds
pusha
push
bt
sub
stc
pushl
repnz
mov
lea
jne
pusha
lea
pop
pusha
mov
push
lea
jmp
lea
ja
dec
mov
inc
setno
inc
dec
pushf
and
xchg
dec
mov
sbb
shl
neg
or
mov
cmc
test
push
mov
adc
ror
mov
bt
pushf
call
pushf
jmp
jb
in
xchg
clc
mov
adc
subl
cmp
out
inc
out
sahf
add
ret
xchg
test
aad
sub
add
inc
mov
push
pop
addb
xor
jae
test
stos
xchg
ret
ja
fdiv
in
cli
sti
addr16
xor
idivb
pop
bound
mov
push
sbb
jo
mov
dec
ljmp
or
icebp
jnp
arpl
pop
mov
movsb
push
pushf
fadd
mov
pushf
push
cmp
dec
imul
mov
cmp
stc
cld
pusha
pop
loopne
loop
in
dec
test
push
pop
mov
jl
sti
ret
daa
jmp
repz
lret
pminub
xor
mov
test
jl
mov
imul
sub
push
add
inc
addl
jo
ss
dec
pop
arpl
pop
push
pop
xlat
aad
test
sub
imul
push
dec
dec
dec
jmp
adcb
in
jge,pn
mov
cmp
pop
xchg
in
add
mov
mov
nop
jbe
fsubrp
movsl
mov
or
out
adc
jns
js
int
pop
mov
fcoml
and
stos
lods
cmpsb
test
pop
int3
sahf
xor
push
sbb
sbb
mov
les
and
ds
out
xor
xlat
or
or
or
enter
mov
fiaddl
ljmp
movsb
fs
cmp
sub
inc
aad
daa
or
add
adc
call
push
std
sbb
mov
mov
jp
out
sbb
pop
mov
mov
jno
xchg
push
mov
pop
aaa
bound
sub
mov
mov
add
inc
mov
cmp
clc
sbb
orb
xor
mov
arpl
arpl
mov
jmp
fcmovnbe
cmp
gs
imul
fcomi
mov
pop
or
dec
or
out
push
dec
outsb
lea
jae
call
pop
pushf
push
pusha
jmp
jmp
clc
repz
addl
sahf
lcall
pushf
lret
es
loope
xchg
push
fwait
ss
mov
lock
inc
mov
cmp
das
mov
icebp
push
jns
xchg
lret
mov
and
sbb
into
xor
jb
test
loopne
outsb
stos
mov
or
push
repnz
dec
out
data16
sti
xchg
sub
and
nop
jp
jle
push
cli
adc
add
and
out
dec
cltd
mov
jp
or
in
ret
ds
pop
mov
mov
pop
mov
call
je
cmp
push
lods
into
shrl
lds
cmc
and
fstp
jl
mov
mov
mov
lock
lods
pop
jp
dec
push
scas
sub
es
bound
add
push
add
pop
jmp
mov
mov
jl
cld
fstpt
xlat
fcompl
int
fisttpll
outsb
sbb
jae
xor
fcmovnu
adc
add
sbb
push
je
inc
cli
xchg
subb
rcll
lds
pop
js
enter
jns
in
nop
xor
test
add
mov
cmpsl
inc
pop
inc
les
and
lret
sub
or
test
lret
pushf
adc
scas
xor
cli
sub
pop
push
sub
data16
xchg
or
out
jp
out
add
cmp
ret
insb
and
push
pushl
ret
adc
and
mov
dec
mov
or
and
mov
inc
pop
jne
or
xor
pop
shr
in
xlat
das
sub
sub
inc
xor
jbe
xor
rcll
or
jns
xchg
inc
cmpl
cmp
mov
xchg
loopne
sbb
sbb
lock
insb
stos
xor
cld
notl
mov
mov
pop
cmc
fldl
cmp
imul
adc
adc
inc
popa
sbb
addb
pushf
xor
js
clc
ds
mov
sbb
pop
in
dec
mov
xchg
ret
imul
leave
or
test
lds
je
jb
mov
pusha
shll
sbb
roll
stos
xchg
sub
jnp
pop
fildl
adc
jns
rcrb
push
mov
pusha
jne
cmp
dec
scas
or
rcr
or
jbe
jecxz
fldl
stc
int
fisubrs
les
adc
fistpl
mov
and
xor
frstor
pop
stos
mov
data16
orl
xchg
jg
add
les
xor
adc
movsb
push
add
or
add
inc
adc
je
and
jne
inc
mov
bound
xor
jmp
enter
xchg
ret
repnz
mov
into
out
jecxz
lds
aad
adcl
pop
js
sub
fsub
fdiv
pop
inc
mov
and
outsl
push
fists
and
cmp
mov
pop
push
push
push
cmp
test
mov
dec
mov
push
cltd
xchg
or
mov
push
sahf
mov
pop
inc
xchg
sti
push
nop
ja
cmc
xchg
and
add
aad
test
and
outsl
andl
pop
outsb
test
mov
mov
and
sbb
subl
mov
push
sub
aas
xchg
dec
outsb
test
lock
fnstsw
push
sahf
mov
popf
inc
cmpsb
call
mov
mov
inc
shr
or
jbe
mov
push
jo
dec
je
hlt
js
movsb
scas
dec
mov
and
test
push
repnz
add
ss
in
insb
es
neg
jb
dec
imul
jmp
xchg
je
hlt
pusha
pop
test
xchg
adc
push
mov
add
testb
push
ret
xlat
call
xchg
popf
aas
in
lods
inc
lods
mov
inc
jnp
add
add
out
or
pop
lock
adcb
jp
mov
test
and
xchg
push
out
and
js
lods
inc
add
popf
sub
pop
outsb
lods
mov
or
pop
jp
add
xchg
mov
xor
dec
sbb
pop
xchg
sbbl
lods
jmp
inc
call
cmpb
call
pushf
lea
jae
jmp
jmp
pushf
pushf
call
clc
push
neg
bt
test
call
cmp
add
push
pushf
pushf
bt
mov
cmp
call
shr
pusha
cmp
pushl
pushl
cmp
pushf
movl
lea
je
clc
pusha
push
cmp
pushf
lea
je
pushf
pushf
test
movw
cmp
pushf
pushf
call
and
rcr
dec
mov
stc
pushf
push
jmp
sar
movl
inc
sub
mov
pusha
pushf
call
pushf
pusha
xchg
mov
dec
call
sub
jmp
sub
mov
mov
and
mov
jp
fsubl
stos
jp
add
vdivsd
inc
lods
push
popf
push
and
add
jnp
cmp
lcall
push
arpl
and
sbb
jecxz
pop
fs
insl
popa
lea
call
fdivrs
aam
pop
or
ljmp
push
ljmp
mov
ret
mov
int3
sbb
mov
ss
pop
mov
mov
pop
std
aam
outsl
pop
sbb
pop
loop
stc
pop
hlt
dec
nop
xorl
adc
mov
sbb
outsb
or
sbb
int3
mov
and
les
push
and
mov
add
pusha
movb
pushl
ret
jle
mov
sbb
in
insl
icebp
fst
ficompl
arpl
xchg
pop
lock
mov
inc
repnz
ljmp
inc
std
xchg
adc
stos
loope
jb
cmc
cmp
insl
mov
dec
pop
imul
imul
jmp
lods
ret
xchg
inc
push
leave
mov
add
pushf
jmp
push
call
mov
not
jmp
push
pushl
stos
pushf
lea
jmp
add
clc
sub
movl
xor
adc
neg
bts
mov
pusha
test
bt
cmp
pusha
pushf
movw
lea
jbe
shl
test
stc
cmp
sub
test
mov
or
rcr
inc
rol
mov
btc
add
sub
adc
lea
shr
bsf
pushf
push
mov
xor
adc
add
not
push
movzbw
not
mov
mov
pushl
movb
mov
mov
not
lods
jmp
push
sbb
mov
movsb
dec
mov
out
dec
addr16
mov
xchg
aad
es
fistps
cli
es
dec
outsb
xchg
movl
ss
js
pop
dec
subl
neg
lea
pop
xor
test
test
scas
in
fisttps
inc
mov
and
mov
cmp
dec
adc
fmuls
popf
fprem
pusha
jnp
mov
pop
enter
fisttpl
sub
mov
sub
out
pusha
and
repnz
mov
das
out
inc
mov
test
mov
sti
xor
jns
in
pop
jns
xor
mov
xchg
pop
pop
inc
scas
inc
cs
outsl
pop
pop
xchg
mov
and
pop
mov
adc
mov
adc
push
sub
mov
sub
add
aad
mov
testl
mov
faddp
aaa
loope
pop
leave
sub
mov
jns
jno
xor
je
add
mov
add
cmp
push
call
cmp
xor
imull
or
fisubl
mov
pop
fwait
nop
xchg
aad
or
stos
mov
movsl
push
jg
lahf
lret
scas
mov
jecxz
fisttpl
mov
inc
inc
xlat
stos
mov
add
in
mov
insb
test
clc
jl
leave
pop
jae
cmpsb
aad
mov
fildl
inc
inc
loop
shlb
adc
sub
cli
sbb
jge
jne
and
xor
repnz
mov
clc
push
cmc
bt
cmp
cmp
movw
call
pusha
sub
jmp
cmp
call
mov
mov
lea
lea
pushf
call
jmp
call
mov
mov
movsl
leave
int3
push
insb
call
in
xlat
int3
mov
pusha
push
lret
xor
in
loopne
rcrb
pop
loopne
or
cmp
nop
mov
fists
xor
bswap
mov
popf
push
sub
jmp
movsl
or
pop
shll
pop
cmpsl
pushf
mov
sahf
es
notl
outsl
push
out
pop
hlt
in
scas
adc
mov
ds
pop
push
mov
dec
jno
xor
dec
leave
lea
cmp
lret
call
xchg
out
sub
loop
stos
push
loop
loop
cmp
jg
jns
inc
xchg
pop
lods
push
dec
imul
sbb
test
inc
dec
in
sar
sbb
outsl
cmp
mov
jae
pop
addr16
pop
mov
test
repnz
mov
mov
out
jnp
fldt
lret
aaa
sub
xor
lret
das
aad
fnstenv
insl
xchg
pop
aad
cmp
mov
push
dec
mov
adc
sbb
repnz
loop
mov
scas
ficoml
jno
xchg
mov
loop
cmp
test
sub
pusha
test
repnz
call
jmp
lea
jne
pusha
pushl
lea
call
pusha
pushf
pusha
lea
jmp
mov
pushf
lods
pushl
dec
cmc
cmp
jmp
add
mov
lahf
pop
nop
cmp
cld
xor
push
add
push
pop
scas
cs
lea
lea
stc
cmp
leave
fdivr
push
pop
scas
sub
lods
add
xchg
pop
decl
push
or
mov
cmpsb
jne
mov
cmp
cmc
pop
xor
pop
push
sub
dec
jnp
sub
sti
scas
rcrb
test
add
jmp
fbld
fildl
dec
cld
btr
neg
sub
jmp
call
pusha
lea
jae
shl
sar
cmp
bswap
mov
add
mov
clc
clc
mov
adc
mov
push
movb
sub
clc
pushf
movb
repnz
call
call
call
jmp
jmp
dec
inc
push
mov
dec
dec
in
push
int
lods
dec
pop
test
add
sub
inc
push
lds
xor
adc
iret
dec
pop
into
sbb
test
lret
jmp
lret
xchg
xor
xchg
int3
jmp
clc
cmc
bound
mov
leave
pop
push
jl
mov
fcmove
popa
mov
ljmp
and
rcll
mov
out
sub
mov
fwait
jmp
xor
inc
mov
pop
mov
arpl
aas
imul
mov
in
add
out
jnp
in
shl
sub
lea
jae
push
xchg
aaa
fildl
mov
mov
mov
insb
jle
shl
shrb
cmpsl
push
movsl
sar
inc
gs
mov
xchg
mov
lahf
pushf
inc
sarb
and
add
fcompl
loop
iret
xchg
and
sub
xchg
and
dec
clc
in
enter
and
xchg
outsb
fdivp
mov
sub
les
and
pushf
lock
lock
sbb
out
dec
cld
call
lods
or
mov
pop
push
scas
dec
pop
testl
mov
and
out
xchg
and
or
sub
cmp
scas
in
fcoml
jg
mov
outsl
adc
dec
push
xchg
mov
stos
mov
xor
mov
call
add
pop
mov
push
add
or
pop
jle
out
pop
loopne
gs
dec
mov
jl
xchg
pop
jno
mov
mov
pop
xchg
xor
mov
inc
mov
subl
pop
and
sub
cmp
sbb
add
lret
inc
lods
enter
mov
jg
jg
sbb
and
imul
inc
push
jge
dec
push
dec
or
pop
xchg
xor
or
mov
test
mov
add
sahf
imul
inc
lods
mov
fwait
lahf
inc
mov
sbb
inc
outsb
ret
jge
sbb
pop
cld
mov
in
inc
or
inc
pop
roll
shlb
xor
sub
push
push
push
rep
movzbw
mov
pushl
lea
jmp
jmp
pushf
bswap
mov
jmp
pushf
pushf
lea
jae
jmp
pusha
movl
pushl
push
call
clc
test
cmp
pushf
mov
lea
ja
setbe
inc
push
call
nop
mov
and
test
ficoml
cmpsl
and
dec
popa
lods
test
fnstenv
sbb
sti
inc
mov
mov
lahf
ret
dec
movsb
test
or
std
icebp
sti
cmc
and
push
inc
pop
adc
cmp
or
leave
push
jns
fadds
lret
shrb
decl
iret
arpl
les
aas
xor
sub
jae
neg
arpl
fnstenv
sbb
pop
push
adc
test
xlat
jmp
stos
das
jae
arpl
mov
xchg
scas
rcr
out
mov
rorl
nop
xchg
xor
out
cmp
sarl
add
call
ret
jmp
ret
iret
arpl
dec
xchg
jecxz
stos
iret
pop
cmp
jb
xchg
pop
mov
repz
pop
cltd
push
mov
shl
mov
push
sbb
sbb
out
jbe
je
mov
clc
jl
or
xchg
push
sub
adc
mov
cmc
sub
bt
pushf
pushf
movw
cmp
push
pusha
lea
jae
pusha
pushf
push
lea
jmp
add
push
nop
xchg
mov
sub
roll
jmp
lret
loope
mov
jae
vmptrst
adc
adc
hlt
fucom
ret
pop
sbb
push
outsb
lcall
dec
cmp
lods
mov
inc
pop
pop
adc
in
cld
push
cmp
movl
pushf
push
pushf
lea
jmp
call
pushf
pushf
lea
jb
cmp
test
pushf
pushf
cmpb
call
seta
mov
lea
call
lea
je
pushf
push
stc
sub
jmp
str
call
out
add
fisubl
ss
loop,pt
and
andb
push
fwait
shll
mov
pop
sub
push
bound
pop
imul
fstpt
and
les
pushf
xchg
xchg
scas
rcrl
add
mov
xor
aaa
imul
insl
mov
sti
sbb
decb
cmpb
pushl
lea
jne
rcl
push
stc
or
mov
stc
call
sar
bts
mov
pushf
bt
cmc
stc
and
stc
pushf
call
lea
jae
pusha
sub
call
movsl
mov
pop
in
jno
dec
inc
mov
rcrb
mov
imul
push
mov
pop
jns
xor
je
push
xor
je
fisttps
add
cmp
push
cmp
and
mov
adc
lods
rcr
cmp
gs
jns
push
jns
xor
lods
stc
repnz
xor
inc
popa
movsl
mov
pop
mov
dec
xchg
xor
test
fcom
iret
sub
lods
shlb
sub
out
pop
jns
cmp
dec
sti
fisttpl
in
jbe
mov
test
jne
aam
clc
or
or
lock
pop
int
mov
mov
or
cmpsl
mov
push
pop
popa
sub
incb
sub
pop
dec
jne
sub
stos
jle
ljmp
mov
in
and
add
lods
lods
call
lea
pop
lahf
dec
arpl
ret
out
out
ffreep
dec
inc
pop
fadd
mov
cs
jmp
pusha
call
pushf
pushf
movl
pushf
pushl
popl
push
pushl
ret
and
fcoml
aaa
fildl
lret
outsl
repz
lret
das
xorl
cmp
sbb
pop
cmc
jle
sbb
ds
arpl
arpl
iret
pop
lods
mov
addb
stos
mov
jne
and
aas
xor
sub
les
addr16
enter
mov
mov
jl
mov
mov
ret
jmp
aam
scas
pushf
ds
mov
xor
jl
add
lods
lahf
xchg
fwait
ljmp
cli
jbe
jmp
icebp
in
xchg
mulb
xchg
pop
lock
stos
nop
int3
cli
xchg
inc
popa
or
imul
addb
sub
aad
insl
mov
or
lea
outsb
xchg
shll
jno
sti
jg
and
cld
pop
pop
and
sub
fdivrl
decb
ja
ja
jno
inc
in
mov
rcrl
dec
div
and
lods
dec
xchg
cmp
out
add
xor
xor
mov
xor
jo
jp
dec
mov
push
adcb
mov
jns
vpunpckhwd
negb
nop
xchg
push
dec
inc
pop
jnp
fistpl
cmpb
dec
add
fcom
push
test
pop
xchg
xchg
sub
repnz
cmp
dec
scas
mov
gs
sahf
xchg
fists
stc
sarl
cmp
jns
xchg
frstor
push
xor
and
push
setg
sbb
rol
mov
bts
btc
push
pushf
bsr
xchg
inc
shld
push
btr
push
add
mov
call
ja
sub
not
not
xor
sub
btc
bswap
adc
add
cmp
pusha
btr
mov
or
mov
push
bt
stc
test
repnz
pushf
lea
jne
lea
movb
push
call
dec
or
leave
xchg
mov
lret
test
add
mov
adcl
imul
push
xor
aas
adc
sbb
mov
in
popa
xchg
and
fld
jb
dec
addr16
test
test
mov
adc
daa
xchg
adc
lahf
rclb
ret
mov
outsb
repnz
enter
adc
push
xchg
dec
adc
inc
and
in
sub
or
push
mov
jne
jbe
aad
adc
sub
adc
lods
int
mov
popa
xchg
adc
jae
clc
adc
push
outsb
in
pop
stos
lret
or
daa
push
mov
mov
into
sub
iret
lock
adc
push
ss
inc
repnz
adc
xor
jne
push
xchg
stc
adc
hlt
push
add
iret
in
push
sub
mov
pop
ss
mov
mov
je
shl
jge
insb
jmp
pop
sub
push
mov
push
hlt
xor
add
icebp
adc
outsb
in
lods
pop
int
dec
jg
repnz
xchg
mov
rcll
jno
outsl
iret
roll
mov
xor
shrl
add
inc
push
adc
pop
jns
outsl
into
outsb
sub
aad
shll
inc
ret
add
adc
xor
inc
hlt
imul
loopne
xchg
icebp
ret
dec
mov
or
mov
shll
daa
mov
and
mov
adc
orl
push
je
gs
jl
lahf
push
mov
ret
sahf
je
repnz
in
insb
out
dec
pop
adc
add
mov
jbe
jne
bnd
rdtsc
or
dec
lods
sub
je
xor
sbb
outsl
pop
iret
pushf
pusha
leave
ret
fstl
xor
and
mov
push
ret
push
mov
roll
repnz
add
mov
mov
cmp
and
movsb
xchg
push
mov
test
in
mov
aad
and
mov
mov
and
and
xor
mov
dec
lea
rclb
xorb
xchg
mov
xor
dec
je
stos
pop
stos
movb
mov
mov
adc
mov
push
out
jb
aam
test
out
adc
pop
mov
push
xor
into
lods
lods
or
jmp
and
clc
xor
inc
dec
mov
push
sbb
ret
xor
xchg
add
enter
push
leave
push
push
dec
sub
xor
inc
lock
das
sub
in
add
sub
mov
ret
push
orl
push
ret
inc
adc
mov
lods
adc
xchg
ret
or
dec
and
ja
xchg
dec
lods
or
push
jne
xchg
sbb
mov
sub
ret
pop
leave
mov
inc
loopne
test
push
xor
inc
jbe
jge
inc
pop
jbe
ret
push
dec
js
mov
add
lods
mov
or
inc
ret
xchg
sbb
adcl
jbe
lahf
jb
sub
lods
and
mov
mov
ret
mov
or
scas
jmp
xchg
adc
jmp
xchg
ret
adc
mov
jmp
xor
push
ret
xor
xor
addl
mov
mov
or
inc
add
shll
dec
mov
call
lock
daa
inc
mov
xchg
push
xchg
dec
cs
mov
mov
mov
mov
jae
xor
or
push
jno
aad
mov
js
insb
dec
outsl
or
jnp
ret
fwait
sbb
adc
into
jmp
mov
mov
adc
aas
shlb
mov
jmp
jae
test
inc
push
ljmp
stos
push
jno
scas
inc
int
pop
scas
sub
adc
scas
or
je
jns
scas
dec
push
sub
add
mov
mov
push
pop
in
push
mov
xchg
sub
dec
jb
jmp
call
jb
inc
call
ja
xor
mov
aaa
push
xor
daa
jno
sub
test
jb
adc
xchg
xchg
incl
orl
jle
adc
adc
es
and
dec
loope
pushf
es
adc
and
dec
scas
xchg
ret
sbb
jmp
xor
lods
jmp
jns
scas
mov
xchg
jno
xchg
xor
adc
mov
popf
call
mov
scas
sub
pop
mov
jno
insb
in
jae
inc
xchg
jno
push
push
push
xchg
int3
pop
jns
jno
andl
and
test
scas
or
push
mov
or
jnp
sub
ljmp
mov
jno
scas
sub
or
xchg
pop
arpl
pop
shrl
add
dec
pop
orl
push
lods
xchg
or
ss
jno
and
dec
jno
mov
lods
dec
dec
push
stos
xchg
cs
daa
dec
mov
xchg
push
scas
jno
jae
jmp
mov
test
scas
or
dec
shll
outsb
add
mov
lods
scas
jae
dec
pop
sub
push
jb
stos
jecxz
insb
jno
sahf
scas
xchg
jno
lea
ja
xchg
pushf
movsl
sub
inc
hlt
ret
or
jmp
or
sub
xor
sub
mov
sub
outsl
stc
xchg
mov
xor
cmp
test
mov
test
shl
movsl
xorl
mov
jno
xor
pop
lock
sub
and
and
mov
adc
orl
xor
xchg
push
jno
insb
adc
sub
mov
mov
test
dec
push
or
dec
test
push
xor
xor
dec
xchg
sahf
inc
xor
daa
jnp
jno
xchg
cmpsb
mov
scas
es
push
pop
pusha
icebp
shll
or
js
and
icebp
xor
mov
dec
jno,pn
jmp
shll
xor
mov
imul
xchg
inc
and
sbb
test
inc
jno
mov
xor
repnz
jno
in
and
add
adc
pop
jmp
jno
cmp
adc
cs
xor
xor
jecxz
xor
iret
inc
sub
repnz
pop
push
btrl
xchg
icebp
or
pop
push
sub
aad
sub
sbb
xchg
pop
inc
push
aam
dec
mov
icebp
pop
pop
mov
mov
xchg
inc
sbb
shll
mov
fstl
inc
sub
adc
add
gs
mov
cmpsb
push
pop
ret
pop
xchg
icebp
push
cld
xchg
sub
pushf
pusha
pop
scas
mov
ja
inc
das
mov
iret
shll
push
push
ret
sahf
repnz
mov
jmp
jl
dec
and
inc
jge
mov
rcll
jno
lea
dec
jno
ja
shr
mov
xchg
mov
cmpsb
xor
xchg
ret
cmp
sub
inc
je
clc
sbb
or
xchg
arpl
lret
inc
mov
jno
je
movsl
inc
jno
xchg
mov
pop
int
sub
adc
scas
iret
shll
inc
mov
out
jno
dec
insb
jp
adc
out
jno
je
ja
scas
push
mov
jno
negb
sub
jg
push
xchg
jno
je
call
jno
icebp
and
xchg
push
data16
sub
inc
push
mov
pop
adc
push
fadd
cltd
mov
jno
movsl
pop
pop
shll
lods
jno
xchg
ror
jge
push
shrb
mov
lock
adc
push
xchg
cmpxchg
ja
fwait
movb
adc
xor
adc
jb,pt
jge
mov
pop
sbb
jno
insl
cmp
mov
testb
sub
ret
cpuid
mov
mov
jns
das
ss
sub
and
dec
paddsw
mov
or
cmp
outsb
or
sbb
dec
scas
xchg
jno
mov
xchg
pop
adc
pop
push
scas
mov
xchg
inc
cmp
cmp
push
push
insb
jno
into
pop
andb
push
iret
test
mov
pop
adc
jmp
lock
sub
jns
xor
push
ret
fisubrs
ret
aam
sub
mov
jge
xchg
push
roll
jmp
pop
aad
scas
mov
test
sub
mov
xchg
jmp
fcmovb
inc
push
leave
testb
jmp
pop
fldcw
xor
jno
xchg
push
xor
test
pop
icebp
aaa
shrl
shrb
or
shll
popa
lret
dec
push
xchg
xchg
push
push
popf
sbb
sbb
xchg
and
pop
inc
or
nop
xor
adc
popa
cmpsl
jno
icebp
xor
inc
adc
xchg
inc
shlb
iret
push
and
jg
daa
mov
jno
mov
xlat
dec
jae
scas
adc
fidivrl
push
nop
jae
es
mov
and
pop
rclb
and
nop
mov
daa
pop
mov
daa
test
jns
inc
inc
mov
or
xchg
adc
rcrb
dec
movlps
popa
xor
prefetcht1
das
sbb
pop
enter
mov
mov
push
cs
outsl
add
xor
scas
cmp
jnp
inc
dec
lods
jle
scas
sti
shl
ljmp
mov
mov
stc
js
pop
ss
enter
stc
add
lret
inc
xchg
in
or
enter
add
in
mov
shrl
mov
add
xchg
xor
and
xor
bound
and
push
in
shrb
push
or
inc
inc
shll
sbb
cmpsb
sbb
inc
call
or
add
loope
cmovns
insb
and
adc
xchg
popf
test
andl
and
cmp
xchg
xor
sub
fildl
adc
adc
nop
loop
jne
add
adc
rol
dec
mov
push
inc
jp
mov
cs
aas
ss
in
inc
push
call
dec
or
inc
sbb
push
sahf
addr16
push
inc
movsl
mov
dec
push
add
imul
inc
and
fadds
cmovns
and
sub
scas
xor
addr16
xor
lret
jb
xchg
or
and
pop
xor
int3
add
add
cmp
or
sbb
outsl
push
popa
xor
mov
mov
repnz
push
fnstenv
adcl
add
orb
xorl
jmp
jno
ret
mov
dec
push
xchg
and
lock
lea
add
adc
or
mov
mov
add
xor
fimull
daa
and
cmpl
jmp
rclb
dec
rorb
mov
test
xchg
test
jmp
cmp
dec
or
pop
movb
jb
icebp
sub
cmp
or
adc
mov
and
idivb
xor
push
jl
cltd
xchg
inc
dec
mov
mov
mov
sahf
xchg
adc
lcall
cltd
jb
loop
lahf
and
or
stos
loopne
adc
and
or
and
addr16
lret
jmp
push
xchg
and
jb
xor
push
pusha
jbe
add
mov
out
rorb
xor
aam
pop
iret
subl
test
das
std
ficompl
dec
test
movsb
arpl
cld
test
mov
fdivrs
cmpb
outsl
and
mov
mov
xor
push
pushf
out
and
xchg
jne
ret
cmpsl
std
mov
adcl
mov
cmp
add
test
mov
and
xor
vmovshdup
orl
push
imul
int3
int3
sub
sub
xor
cmc
mov
lahf
popf
repz
sub
mov
mov
mov
jecxz
push
sahf
out
push
sub
or
stos
jb
andl
xor
jb
test
fists
sbb
add
mov
loope
dec
push
shl
mov
pop
mov
push
popl
mov
jecxz
outsb
sub
and
or
mov
sbb
lahf
and
stc
sbb
adc
cmp
sbb
test
dec
and
sbb
gs
stos
inc
and
and
addr16
mov
test
adc
xor
sbb
and
rorl
lahf
mov
cmp
jmp
mov
test
mov
ljmp
cmp
cltd
or
pop
int
jb
subb
mov
lret
and
sbb
mov
xchg
aaa
lret
inc
mov
push
push
xchg
cmpsl
xchg
sub
mov
xor
cmpsl
bound
subl
pop
pop
lods
or
cmc
lock
mov
adc
mov
lods
loope
sbb
xor
add
push
int
test
or
adc
sbb
in
xchg
enter
popf
mov
add
xchg
movsl
or
push
xchg
imul
test
inc
pop
xor
rolb
jmp
cmpsl
sub
inc
pop
or
sub
cwtl
mov
or
mov
mov
sbb
or
orb
mov
push
test
or
inc
shl
add
inc
stos
push
adc
sbb
jge
or
shll
jecxz
hlt
add
arpl
or
ret
cs
adc
add
fstps
jmp
xchg
jne
mov
cmpl
inc
inc
push
lahf
fstpt
les
and
sbb
lret
mov
fisubl
push
cmpsl
shl
push
cld
push
pop
push
sbb
stos
add
cmp
popa
jb
xchg
sarb
repz
mov
mov
cmp
flds
jle
scas
fisttpll
pop
xchg
xlat
jne
into
dec
mov
ret
dec
stos
xchg
adc
or
sbb
push
add
adc
scas
adc
adc
push
sbb
mov
adc
push
icebp
sbb
xchg
rclb
sbb
inc
frstor
test
stos
add
cmp
add
push
mov
sub
clc
xchg
fs
sbb
xor
ds
dec
mov
cmp
jmp
andl
hlt
or
cmc
sbb
shll
enter
sub
cltd
adc
mov
cmp
add
xchg
xor
xchg
outsl
out
add
scas
sbb
or
jle
jp
xchg
imul
sub
into
jge
out
inc
or
sbb
adc
aaa
sahf
jns
and
xor
push
repz
inc
arpl
dec
in
shl
inc
out
add
jle
add
mov
fdivrl
orb
xor
stos
add
sub
or
lret
push
inc
push
sub
and
and
mov
mov
adc
xchg
add
sub
imul
inc
jmp
adcl
and
addr16
mov
scas
mov
test
jmp
cmpsb
mov
cmpsb
sbb
and
add
push
insl
arpl
dec
popa
inc
or
sbb
popl
pusha
xor
int3
push
adc
mov
out
std
mov
pop
inc
sub
push
lret
movsb
push
mov
push
sub
xchg
enter
dec
loopne
cmp
test
pop
cmc
and
push
jmp
jae
daa
test
pop
sbb
lea
jne
xor
lods
push
jb
and
dec
sub
gs
outsl
xor
ljmp
test
push
sub
or
je
iret
mov
out
cmp
mov
adc
adc
test
lret
das
je
or
cmpsb
lcall
cmp
popf
mov
sbb
je
sti
lock
sbb
xor
lea
xchg
sbb
rclb
mov
mov
mov
mov
scas
in
or
add
js
inc
int
dec
jnp
rorl
add
and
add
or
pop
ja
pop
test
xchg
and
pop
add
shlb
and
pop
adc
test
add
addl
xorl
sbb
jmp
jmp
mov
sub
lret
sbb
adc
mov
roll
popf
popa
repnz
ficompl
sbb
jbe
add
stos
rcrb
jp
pop
xorl
lcall
push
rcll
cmp
push
in
push
add
dec
imul
setbe
dec
jmp
pop
imul
push
repz
pop
shll
and
sub
push
and
sbb
inc
push
jg
dec
pushf
lea
dec
test
sbb
out
xchg
jg
mov
test
cmc
add
xchg
repnz
sub
cmp
or
imul
dec
pushf
sbb
scas
insl
lahf
inc
xchg
mov
test
lcall
or
sbbb
adc
stos
pop
mov
push
flds
adc
das
push
dec
sub
jl
xchg
xchg
sti
or
mov
lcall
fwait
adc
xchg
fcmovnb
push
sub
xor
push
subb
loope
stos
jae
push
mov
add
data16
xor
pop
jno
pop
shll
cmp
and
jmp
xor
bound
xor
push
dec
mov
add
jnp
and
scas
add
imul
in
push
adc
in
loope
pop
scas
mov
test
jno
dec
pop
scas
or
push
xor
out
gs
fldt
mov
fisttpl
mov
push
iret
push
dec
xor
shl
lds
and
scas
inc
jg
cmpsb
ds
push
xchg
jb
int
repnz
jmp
insl
sub
cmp
inc
cmpb
push
pop
add
sbb
mov
and
inc
ret
int3
xor
pop
jmp
loopne
pop
in
push
xor
jle
imul
rol
inc
inc
push
sti
aaa
ret
push
orl
add
add
repnz
inc
lds
fidivrs
xchg
sbbl
mov
ds
leave
addr16
cmp
inc
or
jmp
orb
mov
mov
daa
push
mov
inc
sub
dec
jb
lea
and
test
loop
addr16
xchg
push
push
jb
mov
cmp
rclb
cmp
add
and
es
aaa
mov
xchg
stos
mov
jg
xchg
fildl
jp
push
dec
push
mov
jno
aas
cmc
addb
pop
sbb
mov
pushw
jae
xor
dec
pop
dec
rcll
int
scas
std
push
ja
jle
pop
cwtl
push
mov
add
push
xchg
xchg
push
cwtl
mov
les
jns
cwtl
ja
movsl
sub
mov
data16
scas
icebp
push
lock
mov
lret
loope
xor
pop
cwtl
loope
push
cmp
lcall
and
cmp
push
subb
fwait
rol
fildl
int
push
vphaddbq
stc
xor
dec
add
mov
lods
fs
and
add
test
add
pop
pop
icebp
repz
sub
inc
into
mov
inc
jmp
xlat
cltd
push
jp
lds
xor
push
adc
and
mov
mov
psraw
flds
and
cltd
into
sub
push
pop
xchg
fwait
xor
xor
popa
shlb
ja
and
and
xor
ret
jb
jecxz
pusha
mov
in
jns
popa
xorb
mov
fbld
add
leave
orl
sbb
mov
sbb
test
adc
push
aas
int3
test
lret
and
sub
test
or
push
arpl
out
inc
cmpl
sbb
subb
fcmovb
dec
jno
add
arpl
sub
in
movsb
fldcw
sbbl
ret
jle
leave
xchg
cmpsl
sahf
sub
rcrl
sbb
iret
and
popf
arpl
or
sbb
jnp
add
sbb
stos
add
arpl
cmp
ja
shrl
test
test
adc
loop
inc
sbb
jp
stos
adc
adc
jle
sbbb
out
clc
jae
jno
mov
dec
add
or
addr16
xorb
add
jb
test
popl
inc
enter
rol
mov
xorb
lret
or
imul
xchg
pusha
sub
arpl
mov
inc
pop
addl
stos
mov
bound
push
orl
or
lods
addl
xchg
insb
xor
cltd
adc
jb
lods
iret
adcb
nop
adc
xlat
add
ret
pop
stc
sub
loope
aam
cmpsl
jle
ficomps
imul
or
push
insb
jbe
cmpsb
jne
insl
andl
jno
lds
add
nop
fldl
call
xchg
lds
in
andl
dec
cs
mov
shll
mov
add
xor
xchg
int
sbb
mov
enter
xorl
lock
inc
fsubl
jle
xor
inc
scas
sub
xor
gs
subl
pop
std
dec
push
nopl
ljmp
hlt
arpl
xor
push
lahf
mov
sub
sbb
jecxz
push
pop
xchg
das
mov
sbb
icebp
jno
xorl
push
pop
xchg
ds
loopne
sbb
popa
adcb
inc
or
adc
dec
inc
sub
jnp
sub
xor
mov
mov
mov
pop
inc
loopne
xchg
xor
xor
fisubrs
fadds
or
fldenv
imul
nop
xor
pop
inc
or
fstps
inc
push
dec
sub
inc
fwait
push
fildll
aaa
lds
inc
out
sub
and
mov
mov
xchg
inc
cmpl
sub
add
and
mov
rorl
and
pop
ret
pop
pop
sub
int3
jnp
imul
addb
ljmp
push
or
add
mov
add
movsb
andl
and
xchg
mov
imul
xchg
pop
cmpsb
mov
xchg
test
sbbl
mov
mov
cmc
stc
cmpsl
mov
push
xor
sbb
add
and
push
shrb
pop
fstp
in
mov
adc
mov
push
push
imul
push
pop
and
jno
test
pop
imul
lea
fisttps
lret
xchg
jne
jnp
lods
mov
das
jno
mov
or
lock
mov
push
adc
jae
rolb
cld
cld
xchg
mov
pushf
jb
mov
sub
mov
add
lcall
mov
sahf
add
mov
xorb
pop
push
loop
sub
xchg
push
lahf
imul
imul
test
leave
or
popf
xor
outsb
sub
lds
mov
push
or
mov
push
cltd
dec
adc
mov
lret
mov
add
daa
cmp
xor
mov
ds
push
lods
or
push
ljmp
cmpsb
dec
aas
add
or
ret
or
arpl
mov
ret
sbb
cmp
add
push
mov
sbb
sub
leave
fbld
lds
adc
inc
push
pop
lock
sub
xor
stc
or
cwtl
and
pop
shl
inc
sbb
cmpsb
xorl
loope
fcoms
shrl
mov
inc
dec
or
imul
test
or
lds
loope
test
imul
or
inc
jns
pop
cmp
jle
xor
inc
jno
add
inc
pop
and
nop
pop
dec
inc
loopne
test
pop
cmp
and
mov
in
mov
popf
add
xor
xor
lock
cltd
push
push
sub
or
test
lds
jbe
xchg
cmpsl
mov
jne
ret
push
xchg
test
dec
inc
xor
sbb
inc
out
inc
jb
data16
mov
or
xor
mov
inc
jno
add
mov
mov
ret
jecxz
adc
inc
xorb
or
scas
jmp
or
inc
dec
add
push
das
adc
or
lcall
call
mov
inc
xorl
mov
jnp
ja
repz
les
jl
ds
int
lahf
rorl
pop
add
leave
adc
add
rorl
ljmp
stc
dec
sti
cmp
in
shr
hlt
inc
xor
stc
pop
and
jle
add
cmpb
inc
cli
mov
leave
sbb
or
lock
mov
lea
sbb
sbb
es
push
idivb
push
add
add
or
jmp
inc
mov
or
and
mov
out
leave
mov
or
stos
dec
xor
fwait
and
ds
les
stos
andb
fildll
or
imull
and
in
inc
and
jb
sbb
inc
add
sub
test
icebp
inc
int
scas
out
xor
xor
mov
mov
and
inc
shl
lds
adc
cmp
scas
leave
and
iret
lahf
dec
mov
lods
cmp
test
shll
and
xchg
fs
addl
sbb
sub
push
xchg
mov
jp
test
xor
lret
push
sbb
xor
or
adc
pop
inc
test
unpcklps
mov
push
sbb
push
scas
jnp
mov
push
sub
dec
mov
add
inc
and
addb
adc
add
pop
and
inc
arpl
mov
adc
imul
jno
pop
cmpsl
addb
or
push
push
aas
negl
int
cmc
adc
fiaddl
roll
int
roll
dec
cld
lret
mov
mov
stc
pop
sbb
mov
and
divb
sbb
icebp
loop
cli
mov
pop
pop
mov
push
insb
sbb
adcb
jno
or
arpl
mov
jno
out
xchg
cmp
enter
xor
movl
add
xor
xchg
adc
mov
rcl
mov
and
inc
dec
or
pop
clc
jb
cmp
push
ret
popa
fnstcw
cmpsl
ret
add
pop
push
gs
arpl
lcall
loop
test
jle
pop
jle
lds
jo
mov
cli
fucomp
and
xor
addr16
test
mov
test
ret
mov
jle
xor
pop
imul
dec
test
enter
inc
dec
xchg
jg
sub
inc
add
scas
xor
mov
push
arpl
repnz
jns
push
das
or
jg
fisttpl
add
sub
dec
inc
outsl
add
icebp
or
popf
rcrl
pcmpeqb
xchg
mov
add
push
add
cli
or
scas
pop
xor
dec
add
and
mov
or
sbb
popa
stos
push
xor
pop
insb
jle
lock
lcall
add
xorl
mov
xchg
adc
or
jg
jle
sbb
jmp
mov
mov
orl
pop
fimuls
add
push
and
fnsave
cmp
jle
or
inc
xor
insl
outsl
scas
sbb
inc
lock
add
rclb
testl
mov
loop
push
jae
daa
movaps
popl
push
inc
sarb
sbb
shll
or
jae
in
enter
popf
or
pop
inc
mov
sub
rcll
arpl
jmp
jp
sub
test
push
sub
cmpl
adc
mov
rcrl
stos
movsl
ret
fiaddl
repnz
lods
xchg
and
movd
loopne
in
push
inc
push
sub
xchg
lcall
jno
sbb
scas
lret
and
lret
cs
cmp
inc
jle
repnz
sub
testb
mov
xchg
addr16
cmp
inc
and
add
push
add
pop
sbb
add
clc
pop
lods
test
xorb
sbb
jns
mov
das
jge
js
inc
push
push
mov
sub
sbb
jecxz
pop
and
cltd
pop
cmp
rcrb
aas
jb
inc
and
add
je
sub
xrelease
or
lret
js
push
xchg
lods
mov
mov
in
inc
push
xchg
loopne
nop
fs
gs
and
ret
pop
arpl
sub
fstp
jnp
inc
xlat
push
mov
inc
or
or
dec
orb
scas
lret
mov
mov
jp
jno
sbb
jle
lds
je
loope
xchg
ret
mov
inc
mov
or
addb
jle
and
pusha
sar
add
cli
mov
and
jle
ret
mov
in
pushf
mov
and
and
jbe
test
xor
and
fiadds
lret
push
adc
aas
fstps
add
rsqrtps
adc
int
inc
jo
adc
lcall
insb
xchg
dec
inc
mov
mov
nop
shrb
mov
add
sbb
push
dec
sub
orl
cmp
inc
fs
xorl
jp
and
jb
mov
mov
xor
and
sub
lcall
add
sub
adc
js
loop
and
sbbb
shll
sub
aas
scas
popa
and
jns
xchg
mov
pop
jle
movsb
push
jne
rclb
lea
or
mov
inc
lock
sbb
cwtl
imul
cmp
add
jno
sbb
shll
add
push
mov
das
imul
add
or
loop
pop
call
push
dec
lock
dec
adc
ja
add
popf
shrl
mov
xchg
inc
xchg
xchg
and
jecxz
mov
xchg
rcrl
lcall
sbb
movsl
push
mov
cwtl
fildll
adc
inc
and
ljmp
pop
push
imul
test
jno
push
inc
cmpsl
outsl
sub
mov
int3
xor
shlb
imul
jae
test
cmp
and
jb
hlt
and
xor
fs
mov
mov
fs
mov
sbb
cmovne
sub
inc
cwtl
and
mov
and
pop
mov
stos
adc
mov
mov
shl
pop
xchg
bound
push
pop
xchg
and
fistl
sbb
cmpl
xchg
cmp
in
dec
loope
and
out
jo
cmpsb
loop
dec
dec
lods
push
call
mov
dec
ss
adc
cmp
and
lcall
rcrl
ds
outsb
out
cmp
lret
popa
push
mov
call
cli
jmp
sbb
pop
inc
add
push
std
sbbl
test
lock
fs
lds
pusha
inc
inc
xchg
outsb
lret
push
inc
jb
mov
or
dec
push
pushl
jb
add
inc
pop
mov
add
mov
scas
ds
mov
push
les
ds
lds
push
shrl
nop
jb
lret
shrl
inc
in
leave
jo
and
stos
inc
push
mov
add
out
mov
sbb
dec
mov
and
scas
ret
imul
sbb
add
adc
scas
movsb
adc
and
hlt
cmp
mov
and
pop
xchg
shll
movsl
cmpl
add
scas
dec
mov
add
in
inc
mov
cltd
lods
mov
and
pop
sub
cmp
test
push
ljmp
adc
push
xchg
xlat
jo
mov
imul
xchg
xor
push
arpl
stos
loope
and
repnz
pusha
push
xchg
mov
adcb
arpl
popl
mov
push
mov
add
pop
add
movb
or
sub
cld
inc
mov
or
movsb
bound
mov
stc
xor
mov
in
and
jge
imul
xor
dec
lds
dec
jno
sbb
lea
add
or
inc
push
nop
inc
sbb
andl
mull
jb
shll
mov
mov
xchg
push
sahf
and
cmp
aam
mov
and
push
add
lret
mov
pop
inc
sub
loop
in
pop
shlb
arpl
adc
es
jmp
roll
cmpsl
jnp
loope
subl
or
jae
xchg
mov
cmp
xchg
testl
cmp
pop
data16
dec
mov
pop
adc
lret
ds
pop
add
add
lock
xor
cmpsb
rolb
das
inc
into
mov
and
sub
dec
lock
testl
rolb
jb
xchg
dec
mov
jnp
or
inc
inc
out
xor
sbb
dec
ret
stos
or
bound
aad
subl
insl
inc
inc
mov
decl
lea
ss
imul
sbbl
movsb
in
imul
sub
adc
iret
loop
xor
call
fldcw
pop
movups
idiv
add
cwtl
push
push
es
jb
inc
push
sub
xchg
inc
add
out
and
inc
xchg
insl
mov
lods
inc
xchg
outsb
or
cmp
dec
imul
les
xorl
rcrl
daa
xor
adc
scas
imul
imul
and
cli
xor
inc
sahf
test
test
dec
push
xchg
movsl
mov
add
popa
loopne
jp
testl
outsl
xlat
mov
jmp
outsl
stc
or
shl
inc
nop
lahf
add
inc
xor
stos
push
dec
and
fwait
and
xor
inc
inc
inc
ds
inc
mov
xor
filds
popa
add
inc
cmc
ret
and
jns
bound
and
andb
dec
pop
movsl
adc
lock
nop
mov
lcall
pop
cmp
stos
mov
pop
leave
and
sahf
into
xorl
cmp
xchg
fs
jb
in
jns
andl
int
ljmp
or
lock
cmpsb
ss
mov
dec
or
jecxz
pop
and
orl
adc
ret
mov
fxch
xor
cmp
lea
ficoml
sub
lock
aaa
cwtl
fcomps
pop
or
sub
aam
shll
data16
mov
aaa
pop
enter
sub
or
xchg
add
and
mov
push
mov
ss
and
cmpsb
in
add
jle
in
in
in
inc
sub
repz
sbb
inc
sbb
loope
subb
lea
mov
jno
mov
push
stos
mov
xchg
add
cli
add
lods
jmp
pop
and
dec
inc
mov
int
cmp
out
test
or
in
movsl
lahf
orl
aad
inc
scas
push
sub
aas
lret
stos
lahf
push
aas
xchg
pop
mov
scas
mov
jle
dec
in
arpl
push
or
mov
dec
nop
xchg
adc
lahf
test
pop
inc
and
in
ret
mov
mov
subl
das
and
adc
lea
xchg
test
cmp
cmp
mov
fisttps
cld
pushf
in
adc
sub
mov
out
add
inc
fiaddl
outsb
xor
sub
push
adc
aas
out
sub
mov
mov
repz
pop
dec
or
sbb
mov
mov
cmpsb
jne
fdivl
cmpsl
mov
adc
sbbl
adc
test
add
or
dec
sbb
jb
adc
inc
rclb
lcall
inc
and
lds
test
or
rcrb
loopne
inc
jb
rolb
add
mov
push
mov
mov
mov
adc
and
test
or
fldt
dec
daa
pop
add
test
or
adc
lods
nopl
out
dec
mov
mov
mov
loopne
sub
lret
jb
and
and
jb
mov
mov
dec
fucom
imull
fwait
xchg
sub
push
mov
fnstenv
hlt
or
cmp
add
imul
sbb
dec
cmpsl
jmp
jb
in
bound
push
adc
outsl
andl
push
and
mov
sti
sbb
mov
in
lds
xchg
imul
enter
out
mov
and
push
adc
add
das
and
xlat
push
inc
stc
shl
fsubl
popa
loop
in
mov
xor
push
pop
mov
or
lods
and
or
jg
aas
push
inc
out
jb
push
lret
jmp
aad
mov
xor
test
mov
or
shl
mov
test
dec
je
pop
and
pop
add
push
sub
dec
push
lds
lret
and
cmpsb
in
pop
cmp
stos
jno
dec
fstl
gs
pusha
mov
popa
jb
cwtl
push
loopne
pop
mov
fbld
mov
rol
sub
enter
loop
int
stos
sbb
push
cmp
repz
test
lock
ljmp
jmp
jno
js
push
loop
sahf
lret
movsb
mov
stc
pop
cltd
push
cmp
xchg
shll
movhps
jecxz
scas
inc
jecxz
sbb
push
dec
out
mov
adc
push
push
or
xchg
jno
cld
pop
push
loope
sub
sti
inc
ljmp
ds
and
xchg
pop
adc
sbb
imul
xor
add
push
cmp
jae
inc
scas
pop
frstor
stc
in
das
or
adc
push
xlat
push
stos
test
add
dec
fisttps
and
cmpl
dec
push
test
and
mov
imul
lcall
sub
inc
and
icebp
and
gs
mov
flds
inc
pop
mov
or
test
jmp
pop
lds
ljmp
test
aam
movl
jns
mov
int
jge
push
rorl
mov
mov
pop
fwait
pushf
test
loope
movsl
sub
cmp
jo
mov
out
addr16
inc
pusha
dec
sub
filds
mov
roll
rcl
subb
lahf
xor
bound
xor
and
dec
gs
out
inc
xor
push
into
and
xchg
decl
xchg
xlat
push
mov
lods
dec
pop
mov
int3
out
dec
dec
adc
sbb
arpl
ds
xchg
and
push
out
cmp
roll
push
inc
cld
xchg
mov
ret
add
shl
scas
push
ds
inc
test
scas
or
cli
daa
addl
pop
xchg
inc
jb
xchg
addl
lcall
mov
decl
in
mov
mov
out
aas
or
pop
dec
add
es
loopne
cwtl
pop
dec
push
push
fiaddl
push
mov
loopne
add
sbb
push
xchg
ja
xchg
xchg
and
subb
mov
push
pop
loopne
stos
data16
push
sbb
jae
push
add
add
mov
jl
mov
xchg
mov
out
pop
xorl
ror
outsl
pop
and
loope
ss
mov
add
or
insl
push
add
jo
arpl
adc
stos
and
mov
or
mov
mov
arpl
pop
push
jno
nop
or
mov
sti
fmull
mov
or
pop
mov
jb
push
fldl
repnz
xlat
call
lahf
or
cmpsl
mov
into
out
push
addl
andl
or
loop
in
shr
inc
dec
js
incb
cmpsb
rcl
imul
or
andb
push
xchg
and
sbb
jb
cmpsb
shl
pop
lock
and
jo
fwait
daa
scas
push
xchg
mov
or
inc
dec
data16
cltd
and
mov
leave
or
movl
mov
xor
xchg
inc
xchg
inc
xlat
and
gs
and
push
gs
lds
repnz
das
test
pop
mov
push
mov
mov
push
faddp
xor
ss
xchg
xchg
sbb
jb
loope
jns
mov
xchg
add
mov
pop
fwait
sub
leave
andl
inc
xchg
nop
fcmovnb
pop
inc
mov
xchg
pop
mov
xchg
or
jl
and
mov
bound
xchg
loopne
dec
xor
lods
cs
imul
orb
mov
in
sub
cwtl
scas
push
mov
add
mov
lods
inc
shl
aaa
mov
test
out
test
scas
and
int
xchg
pop
mov
mov
ficoml
dec
sub
call
ljmp
push
pop
scas
add
fs
mov
xor
fsubrl
xlat
xchg
out
and
mov
xor
movsb
push
pushl
sbb
sub
mov
and
and
add
sub
push
popl
inc
lret
add
pop
test
adc
insb
mov
repz
pop
data16
lret
jmp
fisubs
push
adc
or
jecxz
jl
push
ret
inc
scas
mov
jl
daa
stos
jno
inc
jg
call
dec
or
cltd
int3
mov
adc
and
rcrb
adc
test
add
stc
xchg
mov
cmpsb
arpl
loope
xor
mov
sbb
push
xor
fucomip
xchg
adc
xchg
negl
mov
lret
imul
mov
fstps
test
loope
outsl
scas
ret
int
pusha
and
jns
mov
jns
add
jo
mov
sbb
sahf
cmp
and
cmp
fadds
lock
mov
push
xchg
leave
in
mov
xchg
inc
in
lret
imul
out
adc
inc
cli
xor
arpl
daa
jmp
jb
jno
push
jmp
cld
loopne
and
test
and
inc
xor
shlb
sub
frndint
add
ds
int
in
js
leave
mov
ds
dec
ret
int3
iret
mov
shrl
xor
mov
pushf
adc
movsl
push
pop
dec
fcomps
sub
mov
stos
mov
imul
ljmp
sbb
movsl
pushf
jne
fildl
xchg
cmc
adcb
leave
cmpsb
xor
imul
pop
jnp
movsb
cld
xchg
jb
mov
ret
xchg
insl
insb
ret
cmp
subb
outsl
mov
xorb
sarl
out
addl
bound
push
popf
and
inc
push
addb
dec
xchg
adc
push
and
push
xor
jns
add
jmp
scas
mov
andb
arpl
scas
sub
and
cmp
imul
sti
jno
enter
mov
dec
insl
xor
pop
jns
pop
mov
adc
xchg
sub
lcall
or
sbb
mov
dec
fldt
jns
js
fdiv
testb
or
xor
xchg
out
or
and
push
loop
adc
fs
loopne
ret
roll
out
xchg
call
jg
or
insb
mov
or
hlt
int3
adc
inc
push
movsb
mov
adc
das
movsl
push
mov
rolb
pop
mov
or
out
dec
cmp
push
fwait
sbb
push
daa
pop
rorb
xchg
sub
push
sub
jecxz
fimuls
out
mov
pop
or
or
xchg
clc
test
cs
or
add
jmp
out
push
and
es
shlb
frstor
cmp
std
sub
and
stc
out
and
call
mov
dec
push
mov
test
inc
psadbw
sub
pop
test
dec
ss
out
scas
arpl
sar
adc
inc
mov
cmp
sbb
xchg
daa
jle
push
mov
bnd
mov
add
inc
pop
xor
gs
sub
es
xor
int3
sub
mov
add
pop
repz
xor
push
adc
mov
adcl
adc
xchg
sahf
push
ds
loopne
jge
adc
cmp
dec
daa
add
push
xchg
mov
cmp
icebp
fbld
les
pop
xchg
dec
dec
and
cmp
jecxz
mov
dec
inc
push
or
enter
cmp
imul
sub
test
add
daa
insb
les
icebp
push
and
mov
ss
icebp
push
pop
pushl
xor
test
dec
mov
lcall
xor
arpl
add
jle
into
inc
imul
jo
in
int3
push
jne
movsl
loopne
jge
xor
and
das
out
and
add
rcrb
adc
pop
addr16
push
and
mov
and
sub
rorb
in
adc
scas
outsb
jo
ss
fstpt
js
pusha
jle
outsb
es
stc
mov
fnstcw
sbb
call
adcb
push
xchg
mov
outsb
fidivs
es
mov
mov
push
inc
dec
xchg
imul
add
push
or
mov
test
in
sbb
repz
push
lock
cmpsb
sahf
and
inc
adc
push
jno
mov
jb
outsb
mov
push
or
xor
sbb
inc
cltd
mov
cmp
arpl
sub
and
push
jo
jmp
mov
mov
or
and
cmp
inc
sbb
and
cmpsl
scas
dec
add
ljmp
dec
addl
sbb
outsb
imul
pop
cmp
push
jmp
push
sti
gs
scas
out
push
daa
jle
scas
cmp
jle
add
les
push
sbb
pop
inc
inc
or
imul
add
mov
xchg
lret
repnz
xor
cmp
fists
xchg
cmp
inc
into
jae
test
or
sub
imul
sbb
and
adc
mov
mov
or
inc
xchg
das
pop
dec
cmp
sbb
lahf
jnp
adc
pop
sbbl
xor
shr
push
or
faddl
ss
aas
xor
dec
out
loop
lret
and
ret
lods
cmpsl
shlb
pop
jmp
mov
and
fwait
or
lcall
and
cmp
imul
adc
fmuls
cmp
ret
fs
pop
jb
fists
push
loopne
loopne
fsts
lret
aaa
and
add
sti
cld
cmp
adc
cmc
leave
sbb
push
inc
inc
add
mov
cmp
dec
pop
cmp
fwait
out
mov
cmp
lods
add
adc
ss
inc
xchg
push
enter
add
xchg
sbb
mov
pop
cmp
cmpsb
sbb
sub
xor
aas
sbb
jle
in
fildl
outsl
ja
adc
jns
lods
xor
mov
and
shlb
out
nop
stos
mov
push
lret
xor
xor
testl
sbb
pop
dec
or
jb
cmp
movsl
mov
jnp
jno
or
mov
lret
mov
mov
mov
addr16
dec
xor
fisttpll
add
fistpll
enter
stos
fadds
fisttps
push
and
fisttpll
adc
int
xchg
loop
out
clc
shrl
cmp
lea
hlt
mov
test
sub
mov
jmp
testl
cwtl
mov
and
aaa
cltd
dec
or
std
lea
and
cmc
es
movsb
cmpsl
fsubs
mov
xor
fmuls
mov
inc
push
bound
mov
push
lea
scas
int
lret
mov
sub
jo
mov
adc
xor
adc
adc
xchg
add
lods
push
lret
cmp
int3
jns
repz
ret
or
push
mov
mov
adc
pop
sub
ds
push
out
xchg
fwait
and
pop
loope
ja
sub
xchg
push
jno
leave
mov
cmpsb
xor
dec
lock
add
rcl
adc
sbb
add
shrb
ret
ret
xchg
add
adc
xor
nop
lds
push
fstl
push
enter
repz
outsl
inc
test
int3
push
jae
mov
loopne
outsb
out
bound
mov
jns
jb
arpl
or
lret
out
inc
and
jmp
gs
or
push
lret
cltd
sti
popa
int
out
dec
outsl
subb
sbb
add
sub
insb
mov
inc
cmpsb
adc
sbb
mov
xor
lock
sub
push
adc
sub
inc
repz
sbb
loop
xchg
and
imul
in
orl
lea
add
xchg
leave
mov
and
adc
cltd
mov
xchg
leave
sahf
inc
mov
jl
out
jle
sarb
and
xchg
shl
xor
push
add
dec
imul
adc
sbb
mov
gs
dec
fadds
pushw
push
inc
daa
adcl
dec
mov
scas
inc
jb
lds
add
fwait
push
stos
inc
lret
clc
add
loop
or
clc
out
orl
scas
or
xchg
sbb
mov
xchg
hlt
push
insl
or
dec
sub
movsb
mov
adc
xor
fldenv
or
lret
jb
aas
fcmovbe
loop
inc
xchg
inc
adc
jbe
pop
cmpsl
sbb
setb
push
ljmp
inc
jne
int
test
inc
mov
adc
adc
notb
cmpsl
test
es
mov
mov
test
xchg
xlat
dec
stc
mov
xchg
jbe
jno
inc
mov
mov
in
out
out
and
js
gs
aaa
addl
mov
movb
dec
add
rorl
and
jno
scas
hlt
sub
mov
lods
push
cmp
jns
inc
sub
inc
lret
push
mov
aaa
mov
jb
sub
les
xchg
pusha
push
add
xorb
loope
movsl
push
cmc
loopne
ds
jmp
ja
push
sub
mov
in
xchg
add
lahf
pop
push
xchg
mov
push
data16
lods
xchg
test
pop
push
inc
dec
xor
sbb
dec
fst
dec
sub
jecxz
sub
cmp
pop
mov
add
sub
gs
xchg
pop
pop
jbe
cmp
stc
jmp
pop
orb
fdivl
sub
inc
std
xor
or
adc
in
lds
es
push
imul
jecxz
aas
rclb
inc
sub
mov
adc
daa
lcall
adc
je
xchg
nopl
rcll
cmp
subl
jbe
inc
imul
mov
cmp
add
push
or
add
adc
or
or
sbb
mov
mov
bound
xor
sub
cmp
or
mov
and
mov
js
rorl
and
or
push
scas
inc
rclb
ret
movsl
dec
call
cli
add
lcall
and
imul
pushf
push
xor
xchg
cmp
popa
jnp
adc
out
inc
xor
lret
xor
rorl
dec
sahf
and
scas
pushf
pop
pop
sahf
sbb
and
incl
out
and
mov
stos
dec
into
in
mov
mov
push
ret
and
in
addr16
scas
mov
ret
movsb
sbb
ret
lods
dec
movnti
push
mov
bound
in
dec
ds
push
xchg
add
and
in
jns
pop
mov
mov
sbb
sub
andl
testb
dec
jp
and
and
fstpt
cmpsb
aam
fistl
dec
push
ja
add
add
fisttps
test
rcrl
add
roll
xor
cs
stos
add
push
test
mov
push
cmp
xchg
sbb
add
jb
imul
mov
out
xchg
mov
and
cltd
rcrl
loope
mov
sar
xchg
sub
imul
nopl
dec
jp
subb
dec
cmp
sbb
jo
test
in
xor
imul
outsl
pop
dec
lahf
insb
in
lret
sbb
mov
pushf
sbb
imul
jg
adc
cmp
and
dec
aas
daa
movsl
leave
bound
divb
cvttps2pi
push
mov
dec
push
test
out
inc
popf
xchg
sub
sahf
stos
jne
out
lret
pop
lcall
stos
cmp
push
or
jno
and
jbe
or
cmpsl
movsl
arpl
in
pop
inc
scas
pop
lahf
ja
loop
xchg
sub
add
pop
dec
aad
pop
adc
bound
or
adc
jmp
mov
enter
jns
stos
or
jmp
cmp
jns
cld
xchg
jl
inc
lods
lea
adc
and
pop
rclb
in
icebp
lcall
enter
jg
cmpsl
jge
and
frstor
dec
xor
and
inc
leave
sub
mov
fisttps
and
in
adc
test
leave
xor
or
sbb
stc
test
ds
jecxz
mov
mov
inc
mov
loopne
dec
aas
lcall
add
jno
loope
jmp
loop
and
push
add
push
cld
addr16
sbb
and
popa
xlat
addr16
pop
ds
pop
rolb
sbb
inc
adc
mov
scas
sbb
insb
xchg
cmp
jp
mov
and
cmc
pop
lret
xchg
fcoms
cltd
adc
movsb
xchg
repz
xchg
inc
xor
cmpsl
outsb
adc
js
loope
or
scas
popa
add
stos
fistl
loope
or
sbb
push
mov
sub
dec
dec
xor
dec
adc
cmp
inc
mov
and
in
nop
rcl
pop
pop
mov
mov
subl
xorl
dec
inc
push
sbb
xchg
lret
out
js
xor
push
addr16
sub
icebp
jg
lret
fistpl
adc
adc
jno
adc
or
jle
mov
push
inc
xor
int
xchg
js
or
in
stc
int
in
adc
movsb
ret
inc
xor
pop
xor
stc
jle
pop
and
dec
jmp
inc
fs
dec
inc
iret
ret
and
inc
std
lcall
addr16
nop
or
scas
pop
push
add
test
mov
or
or
test
or
cmp
lds
dec
mov
les
cmp
popa
mov
push
cmp
adc
mov
xorl
fwait
cmp
gs
sbb
and
sbb
sbb
pop
fsubs
fldcw
cmp
mov
stc
loopne
dec
aas
or
lds
lret
mov
mov
cmp
hlt
pop
fs
mov
jne
xchg
in
adc
inc
lods
in
jns
or
pop
mov
xchg
scas
and
xlat
test
je
shlb
sbb
sbb
iret
mov
cmc
lods
stc
add
enter
push
int3
mov
in
insb
neg
inc
xchg
pop
adc
movsl
jns
mov
adc
push
repz
pop
cmpsl
push
bound
leave
sbb
lret
mov
dec
mov
jge
test
sub
outsb
jl
jno
lcall
ficoms
sbb
cmp
int3
jl
jbe
pushf
ljmp
xor
mov
pop
and
and
faddl
xor
or
xchg
jl
inc
aaa
mov
pusha
sbb
jg
scas
adc
inc
push
cmp
aaa
rclb
loopne
lea
adc
in
add
popa
cld
xor
push
in
rorb
popa
jmp
stc
leave
fwait
ds
mov
dec
add
add
test
xor
xchg
sub
test
inc
and
mov
push
xchg
add
test
push
roll
ret
push
inc
loope
push
jmp
push
jnp
push
sbbl
mov
repz
add
jg
adc
mov
movsl
mov
adc
andb
loop
lods
and
add
clc
lret
js
cmc
mov
mov
in
cmp
jne
jmp
and
and
loopnew
add
int3
in
cmp
add
fmull
pop
dec
xchg
mov
push
ljmp
cmc
ret
sbb
sbb
sbb
sub
loope
in
mov
bound
lahf
sbb
movb
xchg
shrl
decb
aaa
cltd
es
bound
cmpsl
pop
sbb
inc
jno
pusha
orl
popa
data16
cmp
adc
pop
adc
and
add
xchg
loope
imul
pop
rol
jbe
dec
inc
push
and
jns
mov
mov
movl
adc
out
clc
in
cmp
int3
gs
fdivrp
stos
dec
mov
rcll
dec
les
popa
aaa
add
adcl
aaa
out
mov
lahf
xchg
shl
bound
jle
aam
aad
pop
pop
ja
or
inc
push
adc
mov
clc
les
mov
jne
pop
adc
lods
mov
leave
cmp
pop
lods
sub
mov
imul
jb
lret
fmuls
jno
jno
mov
or
ss
cmpsb
lahf
enter
adc
stos
xor
andl
add
test
imul
xor
add
xchg
fdivrl
arpl
scas
push
xchg
sbb
dec
movsb
dec
les
or
pop
sub
inc
imul
andb
stc
jle
dec
jb
test
mov
xor
mov
sub
dec
inc
push
sub
int
or
push
fldenv
mov
add
inc
pop
jg
insb
pop
ss
ret
enter
fiaddl
nop
add
cmp
pop
push
pop
dec
and
jl
push
push
and
or
ret
cmp
add
enter
dec
movl
or
test
or
adc
xor
sbb
dec
lds
inc
inc
pop
and
sbb
sahf
lods
sub
mov
sub
xchg
es
mov
pop
loope
or
fnstenv
adcl
dec
push
andb
pop
mov
or
jmp
rol
xor
nop
xor
ret
mov
stos
xor
loopne
xchg
jmp
ds
xor
stos
and
fistpll
add
ficoms
in
xchg
or
icebp
aaa
push
add
add
sub
cmp
xor
scas
xor
jb
mov
lea
mov
data16
add
sbb
psignw
jnp
lock
popl
lods
xchg
scas
clc
arpl
mov
sub
stos
out
dec
addl
xchg
pop
adc
sbb
rcl
push
and
fprem1
sbb
adc
mov
les
cmp
add
cmp
dec
loope
rcrl
jo
mov
push
shlb
pop
in
ss
sti
and
mov
push
add
jle
aaa
mov
sahf
fmull
or
xchg
dec
jnp
inc
std
popf
cmp
arpl
in
sbb
shlb
add
sbb
jp
lahf
mov
pop
ljmp
jo
lret
sti
xor
imul
movsl
sbb
xlat
stos
data16
lods
and
lock
sub
data16
mov
movsb
adc
xor
sub
ja
add
icebp
jb
mov
cmp
in
sub
pop
insb
enter
adc
bnd
pop
push
mov
jle
outsb
mov
and
lods
ret
add
mov
jle
dec
sti
movsw
sbb
mov
pusha
pop
orl
sub
loope
push
push
clc
nop
cmp
mov
add
inc
sub
shrb
or
add
mov
call
out
inc
arpl
pop
das
dec
lahf
jno
cli
add
cli
rclb
les
rclb
xor
xchg
test
push
lock
shl
iret
fidivl
dec
sbb
xchg
dec
ljmp
add
mov
into
dec
push
aaa
jno
jns
shlb
ja
mov
xor
xor
dec
push
out
sub
dec
adc
sbb
and
xchg
adc
inc
mov
inc
push
lds
leave
inc
out
xchg
or
scas
movsb
and
and
dec
fsubrp
sub
add
es
sub
call
adc
mov
inc
push
mov
fwait
and
xor
cmp
hlt
xchg
mov
sub
inc
out
mov
rclb
stos
hlt
xor
sub
ret
orl
int
lcall
pop
dec
fs
es
push
add
aad
sarl
inc
sub
mov
add
bound
stc
mov
hlt
and
rolb
add
es
push
and
scas
adc
sbb
push
js
jmp
test
pushf
es
in
cmp
mov
or
xchg
arpl
pop
xor
xchg
imul
inc
mov
ja
mov
movsl
mov
enter
and
hlt
or
bound
arpl
pop
popa
pusha
lea
dec
sub
fsts
mov
push
lahf
xchg
lods
sub
add
ljmp
dec
jae
mull
or
test
mov
adc
popa
popf
sub
jecxz
pop
cld
out
imul
add
inc
stos
loopne
cmp
inc
test
push
loopne
adc
cmp
inc
add
add
lods
shrb
fs
dec
jbe
insb
das
xor
into
fbld
push
add
adc
xor
iret
dec
mov
mov
lret
xor
dec
dec
jmp
test
insb
or
xor
push
sub
or
movsl
ds
add
movsl
fisubrl
push
ja
jb
fiadds
lea
pop
or
mov
push
test
ja
sub
xor
enter
add
xchg
loop
ficomps
add
andl
push
call
mov
in
rcrl
and
add
popa
mov
push
xchg
xchg
jns
test
popl
inc
sub
cli
dec
dec
lcall
pop
inc
xor
cmp
push
and
dec
xor
mov
mov
stos
push
inc
cwtl
pop
sub
inc
arpl
sbb
pop
push
xor
jne
or
cmpsb
scas
lds
scas
sub
or
imul
sbb
stc
lret
push
lahf
push
fdivs
bound
int3
pop
sbb
in
aas
sub
scas
stos
and
mov
sahf
add
int
xlat
and
xchg
fsubrl
add
fbld
mov
orl
mov
add
mov
dec
je
cs
stos
int
jg
or
inc
dec
jnp
mov
cmp
bound
out
aas
repnz
push
andb
pop
cmpl
and
dec
pop
shll
add
jle
dec
stos
and
mov
inc
fildll
movsb
add
push
push
imul
dec
jb
out
out
xor
mov
andb
cltd
jb
pop
rcr
lods
mov
stos
pop
or
xor
out
out
xor
mov
or
jns
mov
mov
scas
cwtl
ds
pop
jmp
inc
or
jle
std
cmp
lret
sbb
enter
stos
imul
mov
mov
sbbl
sub
xlat
dec
gs
adc
and
sub
mov
notb
mov
scas
ljmp
in
aam
sub
in
test
sub
inc
cmp
gs
inc
and
add
dec
lcall
xchg
adc
arpl
iret
inc
jo
ret
sbb
add
jle
test
sbb
pop
fld
push
cmpsl
pop
leave
jmp
adc
xchg
xor
jle
es
push
pusha
xchg
outsl
test
push
xchg
cltd
xor
cs
jne
push
fdivrs
mov
and
mov
mov
dec
cltd
inc
xchg
roll
gs
dec
cmpl
call
push
ret
sub
mov
shlb
xchg
jp
inc
push
call
jns
lods
pop
aad
xchg
sbb
adc
mov
mov
xor
mov
mov
xlat
xor
xchg
aad
sub
movsl
lods
mov
push
or
subl
subb
in
jmp
jmp
iret
fs
dec
adc
and
push
cmp
fs
inc
dec
les
push
loopne
mov
cwtl
or
or
add
dec
lock
aas
addr16
inc
xor
dec
mov
or
inc
add
cmp
and
dec
out
fisttpll
jp
cwtl
adc
sbb
dec
jge
xchg
js
push
pop
in
mov
or
bswap
lods
dec
in
test
andl
add
jne
add
push
dec
dec
add
es
mov
imul
sub
es
or
and
stos
push
push
iret
repz
loope
filds
or
push
and
jb
ja
movsb
adc
mov
fs
xchg
orb
inc
and
inc
jle
push
mull
mov
add
xor
xchg
int3
pop
bound
sub
dec
mov
mov
xchg
js
mov
pop
jb
and
push
sub
or
lods
sbb
pop
add
push
movsl
loopne
shlb
mov
int3
xor
inc
fmull
test
mov
add
xchg
mov
xchg
inc
xor
loop
xchg
lret
or
test
push
push
scas
cmp
pusha
popa
stc
dec
jns
loopne
xchg
iret
stos
inc
sarl
add
inc
cmpl
cli
insl
mov
test
or
clc
or
mov
rolb
cmovs
shlb
mov
jbe
inc
cmp
push
add
insb
data16
adc
adc
add
ljmp
or
mov
shrb
xor
push
cmpsb
jmp
dec
fisubrl
sbb
sub
dec
call
adc
lea
or
dec
lahf
push
mov
fstps
mov
mov
mov
gs
cmp
popa
push
cmp
mov
add
mov
sahf
cli
xor
xchg
lret
mov
fs
nop
int
mov
mov
cmp
jl
imul
shlb
lods
in
loop
imul
arpl
mov
cs
sub
test
mov
test
popl
ret
shll
jle
and
add
loopne
out
jle
fsts
jmp
leave
sahf
mov
jp
hlt
add
jb
adc
ret
xor
and
andb
xor
ret
mov
out
pusha
inc
push
ljmp
enter
sub
dec
pop
inc
mov
div
test
jge
repnz
js
push
mov
movsb
jno
lock
and
jb
push
nop
enter
dec
cmp
cmc
lods
insb
mov
and
or
sub
mov
jns
loopne
lret
push
jle
movsl
xor
push
jb
out
push
fbstp
sbb
pop
cmp
test
sub
mov
std
inc
aam
push
popa
xor
xor
stc
mov
shll
adc
gs
inc
mov
sub
dec
andl
cmp
dec
push
jmp
movsl
out
ret
out
pcmpeqd
xchg
push
imul
sbb
outsb
mov
lea
popf
add
jns
addb
pop
jecxz
push
std
xor
sub
je
bts
or
in
cmp
add
inc
mov
xor
add
arpl
mov
imul
push
jne
cmp
pslld
xchg
dec
adc
fdivp
cli
popa
mov
ret
inc
inc
pop
adc
sub
cmpsb
mov
ds
jmp
inc
popf
pop
repnz
cmp
adc
mov
sbb
popa
jle
push
leave
mov
dec
enter
sub
push
adc
push
jmp
aas
lods
jle
push
sub
cmp
sbb
arpl
cmp
push
jno
jb,pt
je
imul
in
popa
jp
shll
subb
add
or
jb
push
or
mov
cmp
testl
movsb
adcl
fistpll
shrb
sub
les
loopne
cmp
sub
push
inc
imull
nop
movsb
outsl
into
ja
daa
push
jo
jle
push
sub
or
jno
jmp
ja
push
xchg
push
call
xchg
stc
test
sbb
xor
sti
jbe
iret
dec
in
push
push
cld
mov
fwait
popf
mov
jmp
ret
push
add
pushf
cltd
and
mov
jne
cmpsb
cmp
add
dec
cmpb
jno
arpl
and
or
mov
addr16
scas
dec
iret
push
aaa
inc
outsb
stos
repnz
jbe
inc
test
stc
pop
and
push
mov
test
ret
mov
inc
xor
pop
push
or
push
xchg
push
inc
mov
pop
xor
jae
add
mov
add
add
inc
dec
and
or
hlt
sbbb
or
push
inc
test
and
mov
push
mov
das
adc
pop
jmp
leave
setno
mov
xchg
xchg
add
imull
insl
pop
dec
cmp
ret
add
sub
pop
push
mov
xor
movsl
dec
inc
add
imul
sbb
sahf
and
dec
inc
jle
fmuls
mov
push
dec
aaa
push
push
sub
dec
rcrb
xchg
mov
lahf
mov
push
in
sub
cwtl
push
arpl
loopne
out
test
int3
inc
js
push
pop
cmpsb
gs
loopne
and
test
add
push
fwait
into
fs
jg
xlat
repnz
outsb
jg
pop
mov
mov
enter
and
add
fs
outsl
sbb
mov
test
adc
pusha
sbb
lcall
inc
push
std
arpl
ret
and
jecxz
add
mov
fwait
movsb
jb
adc
lods
inc
xchg
adc
shrl
mov
out
cmc
sbb
mov
or
dec
dec
add
jmp
lock
dec
mov
jno
inc
xchg
xchg
push
movsl
jo
in
lcall
push
outsb
add
adc
stos
add
lock
sub
push
cmp
cmc
or
pusha
icebp
xchg
mov
stos
or
sbb
pop
mov
shl
leave
jo
and
test
fwait
mov
jns
adc
fwait
sub
sbb
jmp
lods
and
in
ss
fimull
jg
jns
out
sub
pop
mov
mov
iret
cmp
dec
and
loope
test
lahf
xchg
jg
leave
dec
mov
shl
loopne
arpl
push
mov
add
adc
leave
adc
mov
test
push
dec
jecxz
fisubrs
add
and
and
pop
imul
stos
emms
cmp
jmp
mov
and
shlb
les
sub
push
scas
jecxz
xor
xor
addr16
push
out
and
sbb
pop
shlb
fs
and
or
push
lock
movsb
cmpl
dec
loopne
ret
jne
addr16
adc
and
bt
sbb
xchg
xchg
xor
repnz
int3
sti
mov
mov
sub
lods
lcall
push
and
cld
aad
ror
mov
and
sbb
add
and
push
inc
shlb
in
jae
mov
add
jb
add
inc
inc
call
clc
in
cmp
mov
insb
out
pop
add
push
sub
inc
fwait
insl
or
movsl
cmp
dec
jle
mov
and
xor
and
sarl
push
in
insb
int3
cmp
out
cmp
push
push
jp
push
and
dec
add
dec
sbb
cmp
mov
leave
js
lcall
xor
imul
adc
scas
xchg
inc
sbb
xchg
test
or
and
popa
sbb
cmp
lahf
int3
test
or
push
jb
mov
popf
rcrb
test
mov
mul
add
lock
and
dec
rcrb
ds
xor
lock
adc
adcl
test
pushf
xor
and
test
xor
popa
lock
fs
ljmp
xchg
jle
cmp
sub
out
sub
loop
int
xor
inc
mov
rcrl
fwait
inc
loop
jmp
push
or
mov
jb
aas
or
jb
xchg
adc
add
sub
ror
dec
push
xor
jo
cmpb
and
lret
rcr
mov
movsl
mov
add
subb
jmp
lret
shlb
addl
xorb
inc
outsl
subl
mov
add
mov
repz
dec
fildl
jno
cmp
in
xor
sbb
scas
pop
mov
push
nop
loopne
cmp
in
push
dec
sbb
repz
mov
movsl
loopne
mov
in
xchg
jb
sub
movsb
stos
adc
xor
out
bound
dec
add
loope
aas
fstps
mov
and
mov
add
add
cmp
addr16
movsl
mov
mov
jl
pop
and
cmp
or
mov
ret
sub
add
and
int
lds
lea
pop
rol
jae
daa
pop
lret
cmp
jecxz
sub
and
scas
and
out
add
or
fldcw
iret
lods
inc
and
push
xchg
pop
xchg
inc
cltd
mov
pop
ret
jo
call
push
and
in
inc
sub
jo
int
stc
xchg
dec
mov
pop
mov
jg
loope
test
adc
or
jno
orl
inc
mov
mov
scas
ret
add
add
sbb
or
cmp
jmp
mov
add
int3
lcall
push
lds
and
test
jno
push
stc
mov
int
loop
and
inc
push
test
pusha
popf
xor
pop
mov
pop
mov
pop
mov
pop
popf
jmp
and
add
and
repnz
inc
icebp
adc
orb
inc
inc
inc
xchg
inc
pop
push
loop
cmp
nop
sub
mov
test
mov
aas
adc
add
cmp
dec
jo
aad
mov
and
dec
xchg
repnz
adc
xchg
xor
sbb
sbb
call
xor
adc
pop
push
insb
insb
leave
xor
fisubrs
fcmovbe
push
fwait
push
jge
es
ja
iret
in
mov
mov
and
mov
lea
inc
mov
test
mov
pop
mov
pop
mov
lret
test
push
xor
sbb
add
popf
sub
aas
cmc
jne
push
jno
sbb
arpl
out
jb
adcl
fs
ficoms
sbb
movb
push
or
jae
test
mov
lret
jnp
mov
insb
sub
icebp
ja
and
mov
int3
mov
xor
dec
mov
mov
movsl
in
xchg
push
add
out
ror
shlb
popf
test
pop
xor
jmp
xor
enter
xorb
xor
nop
loopne
inc
jge
stos
repnz
test
push
jnp
and
int
mov
adc
popl
add
adcl
xlat
and
xor
fimull
inc
add
repz
push
mov
push
push
aad
daa
sbb
and
sub
ds
pop
lock
je
pop
and
or
movsl
fnstenv
sbb
movsb
jae
dec
xor
test
or
push
inc
rclb
adc
loop
pop
dec
sbb
ljmp
inc
push
inc
shr
mov
push
in
stos
sbbl
add
jle,pt
and
andl
andl
mov
cmp
add
jmp
xor
lahf
jns
push
and
pusha
movsb
outsl
cli
scas
add
sbb
xor
inc
movb
rolb
insb
mov
xchg
bound
and
mov
inc
pop
xchg
imul
add
rcll
or
xor
adc
sahf
repz
inc
ret
popf
push
dec
sub
cmpsb
and
xor
mov
adc
bound
push
iret
hlt
jb
mov
repz
fcoms
scas
lret
cmp
add
sub
outsl
mov
dec
push
lods
orl
sbb
push
mov
mov
add
jg
sub
push
incl
inc
push
lret
sbb
sub
outsl
ret
movsb
addb
jecxz
cmp
test
pop
mov
inc
mov
inc
das
pop
sub
adc
xor
stos
xlat
inc
mov
xchg
jns
cmp
jp
or
cmpl
sub
shl
jle
sbb
insl
inc
inc
outsl
scas
pop
sbb
jnp
movsb
xchg
in
xor
test
xor
in
mov
xor
dec
and
cmp
adcl
jae
sahf
or
hlt
cmp
test
dec
mov
mov
mov
cmp
out
repz
xor
sub
leave
or
adc
fwait
shll
sbbb
cltd
jne
aaa
orb
inc
dec
xchg
fs
jp
pushf
sub
pop
push
xchg
testl
fistpll
rcrl
pop
cmp
xor
and
clc
xlat
fs
push
imul
jle
mov
scas
rorl
int3
sbbl
xor
xchg
aas
insb
test
loope
icebp
jge
out
push
adc
in
sbb
adc
or
fadd
or
push
fwait
or
mov
add
sahf
fldl
pop
push
lock
mov
mov
add
cmpsb
iret
movsb
dec
mov
and
or
xor
cwtl
add
mov
jae
add
imul
sbb
jmp
ret
or
add
stos
xchg
sbb
daa
mov
dec
jae
dec
or
pop
ja
mov
mov
sbb
insb
ds
aas
outsl
cs
mov
imul
jae
mov
inc
push
xlat
push
pop
dec
stos
xchg
cltd
pop
fwait
mov
addl
inc
nop
adc
mov
or
pop
xor
shlb
and
sbb
inc
dec
or
push
jno
fwait
xor
mov
gs
repz
sbb
push
sbb
pop
add
jne,pt
pop
or
std
adc
sbb
pushf
jp
mov
arpl
or
pop
add
xchg
movsl
dec
or
or
and
les
mov
pop
test
mov
out
push
sbb
test
jbe
xorl
xchg
adc
adc
jae
cmp
sahf
ss
jne
mov
in
lds
les
add
fwait
loop
and
inc
out
and
insl
pop
roll
fwait
jge
shrb
mov
inc
dec
mov
out
in
insb
or
add
std
cmp
aam
dec
mov
jae
mov
or
mov
out
stos
sbb
mov
xchg
adcb
scas
in
movsl
loope
rcll
ljmp
pop
xor
repz
jle
dec
mov
scas
clc
adc
and
movsl
or
jnp
nop
add
inc
pop
dec
xchg
push
sub
dec
and
adc
inc
xlat
test
addr16
add
sub
popf
lods
test
insl
popa
sub
and
push
xchg
push
icebp
mov
movsl
sbb
dec
sahf
or
notl
leave
into
xchg
mov
pop
pop
pop
push
fwait
xorl
bound
jns
subb
cmp
sbbb
inc
repnz
push
dec
pop
pushf
sti
gs
lcall
jle
int
or
leave
dec
and
cmpl
jmp
imull
cs
in
fnstsw
cmpsb
data16
or
sbb
cli
cmp
or
and
rol
sub
andb
add
test
jb
xor
mov
repz
sub
pop
sbb
pusha
orl
dec
sbb
push
push
js
pop
add
outsl
and
pop
jnp
xorl
and
and
and
or
inc
ret
xchg
sbb
icebp
sub
scas
xlat
mov
or
popa
std
xor
dec
inc
stos
aaa
test
pop
repz
iret
test
sbbl
scas
add
xor
push
adc
out
int3
lods
pop
pop
das
test
or
jnp
popa
mov
daa
jle
mov
sbb
leave
out
add
pop
sub
lret
lcall
popa
mov
cmp
push
add
loope
cmp
sub
jnp
aaa
insb
cwtl
lods
mov
scas
or
adc
arpl
test
lea
ret
cmpsl
jmp
jle
and
xorb
jmp
sub
insb
lea
and
xchg
xor
and
popf
mov
pop
push
pop
insb
add
shrb
inc
push
sbb
xor
sahf
cmpsl
imull
cmp
enter
cmp
adcb
fsubrs
add
xchg
add
and
stos
add
enter
movsb
jno
xchg
adc
cmpsb
and
imul
push
push
adc
and
pop
inc
lods
sub
test
xlat
cmpsb
arpl
xchg
std
jne
test
clc
lds
or
sub
orl
ljmp
mov
ret
scas
add
sub
mov
add
dec
test
insb
push
add
mov
pop
in
add
aad
out
or
ss
jmp
sub
adc
movl
adc
mov
push
out
sub
mov
adc
leave
fisubrl
mov
pop
cmp
cltd
xor
xchg
mov
cmc
inc
pusha
iret
cmp
ficoms
lret
mov
mov
mov
mov
mov
xlat
jl
lea
call
cs
dec
xchg
pop
inc
dec
add
mov
sbb
add
inc
dec
scas
lahf
mov
jb
sarb
dec
cmp
dec
pop
dec
mov
mov
jbe
and
repz
cmovl
adc
arpl
imul
andb
jmp
and
mov
insb
sahf
mov
mov
xor
and
loop
or
loop
or
xor
scas
jp
jb
xacquire
inc
cmc
add
or
into
arpl
or
out
mov
cmp
cwtl
arpl
fstpl
adc
dec
xchg
popa
aad
adc
popf
pop
xor
adc
sbbl
jecxz
repnz
sbb
dec
scas
pushf
cmp
sub
add
cmp
pop
jle
pop
ljmp
push
in
test
iret
loop
stos
mov
std
test
jno
repnz
movsl
adc
cmp
xchg
addl
jecxz
in
jns
xchg
bound
sbb
push
mov
push
and
pop
in
test
xchg
adc
mov
and
shl
cmpsb
xor
add
data16
sti
fidivrs
sbb
cmp
sub
decb
test
or
inc
cmp
push
in
out
sub
jmp
leave
loope
arpl
pop
add
and
inc
or
sub
test
pop
xchg
mov
dec
mov
jmp
ds
inc
mov
sub
pop
pop
jle
in
test
inc
inc
and
mov
cs
sbb
push
out
sbb
mov
into
mov
adc
loopne
add
push
jnp
int3
fistpll
ja
enter
mov
loopne
fisubl
pop
inc
rdmsr
ret
adc
cmp
movsb
scas
mov
inc
pxor
scas
push
rsqrtps
popa
pushf
mov
loop
or
ret
aas
cmp
arpl
jo
or
pop
ss
es
or
mov
inc
and
gs
fiaddl
loop
push
dec
movsb
cmp
ret
jmp
lret
cmpl
cmp
and
mov
outsl
jecxz
cmp
aam
sub
xchg
lret
jmp
mov
icebp
fiaddl
jnp
cmp
mov
popf
pop
add
dec
cmc
add
in
mov
imul
push
in
sti
nop
lods
and
add
add
dec
out
push
add
jb
adc
aas
insb
jle
jmp
sbbb
mov
daa
shrb
test
cmp
lea
mov
adc
sbb
push
dec
cmpb
imul
mov
mov
test
cmp
dec
inc
xchg
out
nop
xor
gs
or
cli
movsl
scas
es
arpl
inc
or
sub
or
add
mov
adc
hlt
imul
fisubrl
jbe
add
sub
mov
push
jmp
inc
cmp
out
stos
inc
rolb
add
sbb
xor
jb
inc
sub
mov
xor
shll
es
arpl
or
mov
mov
and
pop
loopne
inc
bound
enter
adc
mov
scas
bound
jmp
int3
lret
and
outsl
shl
jge
inc
add
xchg
dec
xchg
and
pop
adc
int3
sbb
bound
rorl
jne
jns
cltd
jo
dec
and
mov
mov
jle
lds
jg
jbe
xchg
sbb
fsubrs
cmp
int3
bound
inc
cmp
call
lds
imul
enter
push
out
out
adc
cmp
add
arpl
lds
mov
jmp
pop
add
outsl
sub
pop
movsl
mov
loopne
lods
loop
in
loopne
pop
movsb
scas
cmpsl
hlt
test
insl
inc
xchg
fsubr
in
les
add
lahf
jle
inc
sub
add
nop
cmp
xchg
out
jno
ret
aas
adc
adc
inc
adc
sub
nop
push
push
jp
push
nop
insb
rcll
lahf
inc
fistpll
shrl
ret
cmp
mov
movsl
movsb
sub
jmp
jno
sarl
test
cltd
inc
lret
mov
insb
lods
mov
sub
jnp
scas
in
and
inc
xor
movsl
mov
popa
xchg
mov
scas
test
mov
nop
aas
push
mov
cld
test
inc
shlb
xor
jg
clc
push
out
stc
jno
xor
cmp
mov
push
or
xor
inc
outsb
pop
jg
ret
mov
pop
lods
jne
scas
popa
cmpsb
or
sbb
pop
daa
sub
add
or
cmpb
jae
mov
sbb
aaa
mov
sub
aad
mov
inc
or
sbb
andl
test
and
es
or
lcall
inc
or
mov
jb
mov
insl
pop
add
inc
in
add
pop
loop
jno
mov
inc
dec
sub
testb
test
mov
stos
ret
push
cs
jb
cld
pushf
lret
mov
imul
pop
pop
cmp
or
add
push
aas
jns
fwait
mov
outsb
fldl2e
fildl
shlw
hlt
roll
xor
aas
sahf
xor
jmp
or
mov
mov
mov
jb
xor
mov
out
fwait
movsl
or
cltd
outsb
jle
xchg
xor
orb
movsl
pop
getsec
push
faddp
jae
enter
cwtl
lea
mov
popf
inc
push
mov
push
iret
clc
add
push
sti
dec
sbb
scas
and
fsts
lcall
cltd
or
xchg
cltd
jmp
jmp
clc
lds
pop
outsb
popa
stc
and
test
sbb
adc
mov
lret
xor
inc
cmp
jmp
push
add
mov
push
fldt
imul
jno
bound
scas
jb
mov
and
fwait
inc
ret
or
inc
jno
loopne
mov
dec
enter
push
lret
in
or
pop
test
hlt
and
jno
or
or
in
add
push
sub
call
xchg
pop
adc
xor
push
sub
inc
add
loop
dec
mov
in
dec
sbb
in
jb
bound
dec
adc
fstpl
in
jmp
pop
mov
add
mov
mov
mov
mov
push
fdivs
xor
jb
jb
sbbl
pop
mov
jno
sub
frstor
imul
fcomps
ljmp
fs
xchg
push
lds
mov
xchg
or
dec
and
lahf
sub
out
jne
mov
sti
xchg
inc
and
mov
insl
scas
mov
fisubs
or
xchg
in
es
cmp
sub
es
jb
or
adc
inc
sub
and
sub
add
mov
mov
pop
add
sub
sbb
sub
inc
and
add
xor
pop
or
dec
mov
and
cmpl
imul
sub
std
addr16
rorb
scas
out
cltd
rcl
movsl
xor
dec
stos
inc
push
sbb
mov
dec
push
jnp
fsubl
adc
xchg
rclb
push
inc
gs
in
sub
push
arpl
insl
xchg
scas
xorl
lea
insb
sub
cvtps2pd
int3
mov
sarl
mov
outsb
arpl
test
leave
or
sbb
jb
mov
shll
inc
sub
pusha
inc
sub
sbb
mov
add
and
mov
pop
loopne
js
leave
jmp
xchg
imul
xchg
dec
pop
sbb
and
int3
xchg
dec
push
andl
sbb
ds
jg
cmp
cmp
mov
imul
jno
xchg
xchg
cmp
or
add
rol
lds
add
sbb
dec
pop
sbb
jl
sbb
and
cmp
nop
jmp
add
inc
or
adc
mov
inc
popa
fidivrl
ret
fstp
xchg
pop
inc
xchg
pop
inc
push
rorl
das
inc
push
stos
mov
cmpsb
ret
cmp
aas
sub
pop
mov
push
loope
jns
fldlg2
mov
cmpsl
arpl
andb
es
lock
jle
push
popa
mov
movsl
mov
pop
dec
cmp
into
call
dec
insb
sub
jmp
mov
and
and
inc
and
int3
or
push
sbb
xchg
push
sub
lds
sbb
in
inc
daa
out
mov
push
or
adc
inc
push
push
inc
test
add
adc
mov
data16
push
jle
insb
int3
push
fucomip
out
pop
xchg
insb
cmp
fcomi
decb
addr16
leave
xor
mov
jge
and
loopne
cmp
mov
push
and
xchg
mov
pusha
insl
push
scas
das
ret
lock
jo
mov
pushf
and
shlb
arpl
push
add
jns
inc
push
lcall
mov
xchg
mov
cltd
loop
ret
add
add
and
es
xchg
add
lahf
mov
test
pusha
cmp
in
test
imul
cli
mov
imul
and
pop
cmp
test
and
stc
push
out
inc
dec
subl
mov
outsl
repz
sub
push
cmp
cwtl
dec
sbb
loop
xor
test
imul
cmp
adc
pop
fs
testb
popf
pop
mov
sbb
popa
xchg
sbb
xorb
imul
cltd
mov
leave
in
outsb
ljmp
push
and
and
jmp
and
and
loop
xor
jo
xlat
inc
dec
out
inc
mov
mov
in
xor
rorl
in
inc
jecxz
clc
cmpsb
push
adc
or
mov
mov
stos
add
xlat
cli
iret
sbb
sbb
lcall
in
jge
xchg
pop
xlat
outsb
iret
rcr
push
ds
sbb
xor
call
sub
inc
and
out
cs
adc
leave
cmp
test
out
lea
jnp
mov
pop
in
arpl
adc
and
mov
int3
add
mov
inc
and
push
sti
pop
inc
mov
test
inc
mov
add
add
add
popf
add
scas
or
dec
jns
push
cmp
mov
pop
mov
mov
xchg
test
or
push
lea
or
sbb
ret
jne
xor
mov
push
test
ds
xor
arpl
push
mov
fs
inc
xor
push
push
movsb
jge
inc
xchg
fldt
aas
es
lret
sub
dec
cmpsb
sbb
cs
dec
mulb
push
mov
mov
in
imul
mov
add
xor
xchg
mov
lahf
scas
or
jo
aaa
lret
jmp
cs
sti
jb
inc
sbb
xor
data16
dec
test
mov
cli
xor
mov
jmp
cmpsl
inc
mov
adc
mov
gs
jmp
add
je
clc
aas
push
adc
scas
mov
imul
jle
mov
jno
push
stos
movsl
mov
push
sub
push
bound
adc
scas
lret
ja
jae
addb
iret
mov
cld
insl
ret
sub
outsl
mov
hlt
adc
clc
loopne
sub
std
adc
cs
inc
pop
fists
push
and
inc
or
addr16
outsl
test
ja
cwtl
or
add
mov
cmpsb
out
mov
aas
cmp
inc
and
pop
push
lret
and
rorb
subl
add
lea
arpl
mov
add
repz
mov
sub
cltd
xchg
repz
push
push
pop
and
sbb
jecxz
ficomps
iret
or
mov
fstpt
scas
inc
dec
xchg
mov
lcallw
orb
hlt
add
and
sbb
es
js
sbb
arpl
or
in
fisttps
mov
sub
dec
ja
and
dec
mov
setae
mov
xor
dec
ret
mov
and
sbb
insl
pop
pop
inc
or
inc
add
pop
fisubrs
fsts
mov
cwtl
jb
data16
lahf
and
push
mov
imul
sub
jbe
movsb
in
xor
sbb
movsl
addb
add
inc
adc
sub
lahf
clc
or
test
sarb
or
push
xchg
or
sar
ljmp
push
push
outsb
test
mov
jecxz
in
jne
or
outsl
push
push
es
mov
in
mov
push
jmp
sahf
mov
fnstcw
push
in
push
inc
jmp
imul
data16
mov
subl
mov
fsubl
outsl
out
sbb
push
sub
pop
pop
loop
mov
xor
jecxz
aaa
or
cmpsb
or
jne
daa
cmp
shll
movsl
dec
jne
or
mov
mov
or
and
insl
test
dec
dec
jge
mov
xor
push
cmc
push
xor
stos
testb
push
fwait
lds
jno
adc
lcall
and
rclb
push
jbe
mov
out
xor
dec
mov
or
clc
or
mov
adc
fwait
ret
or
loope
insb
mov
fstl
lret
loope
leave
pop
or
dec
adc
jbe
xchg
mov
enter
mov
into
or
addl
andb
movsb
sbb
cmp
jo
cmpl
mov
into
cmp
mov
jno
in
mov
and
pop
mov
bound
in
or
pop
xor
add
lea
imul
in
out
cmp
inc
jne
icebp
mov
mov
jnp
lods
push
add
dec
mov
adc
xchg
rcrl
loop
mov
fwait
data16
or
subb
dec
fdiv
push
xor
sub
inc
xchg
fcomip
xchg
rcl
push
movsl
clc
hlt
xor
sub
adc
mov
arpl
xorl
dec
xchg
inc
push
ja
dec
jle
xchg
orb
inc
jbe
jbe
inc
inc
subl
jmp
or
mov
scas
fstpl
out
mov
sub
mov
pop
inc
int3
js
jmp
xor
push
jle
push
dec
in
movsl
rcrl
push
loop
cmp
stos
imul
mov
and
dec
loope
fwait
push
xor
test
xor
adc
mov
and
ret
sbb
or
push
inc
sub
scas
popa
clc
jbe
loop
xchg
sub
sbb
xchg
aam
cwtl
loop
cmp
inc
mov
mov
jg
sub
mov
mov
cmp
xor
mov
data16
pop
test
adcl
cmp
dec
sbb
fs
push
cmpsb
xor
lea
jle
mov
mov
movsb
dec
out
pop
jle
addb
adc
hlt
xor
inc
mov
add
int3
rorl
dec
push
mov
cmpl
data16
popa
sub
sbb
fsubrs
adc
test
movsl
push
nop
mov
mov
inc
or
or
pop
cmp
sub
mov
lods
in
xor
mov
pop
xor
loope
orb
pop
lock
ret
imul
outsl
aad
into
add
call
pop
xor
out
sbb
dec
adcb
cld
jno
ja
pop
push
out
and
jge
scas
das
mov
bound
xorb
rorl
mov
sahf
sbb
xchg
push
cmp
xor
in
inc
sub
fisubs
mov
xchg
pop
das
pop
int3
or
xchg
push
xchg
or
jb
cmpsl
push
add
dec
loope
cmp
loop
les
push
jle
sahf
pop
outsl
sbb
mov
jns
and
mov
or
mov
dec
jle
inc
unpckhps
lods
xor
jne
dec
fcmovb
jmp
mov
popa
cwtl
fcmovbe
out
subl
inc
std
dec
cmp
or
andb
dec
mov
enter
jle
mov
movsb
in
sub
icebp
sub
jle
imul
test
cs
xchg
aas
shlb
adc
clc
cltd
ret
adc
xor
cmp
lods
icebp
xor
xor
inc
insl
int3
xchg
xchg
dec
flds
sbb
aaa
ljmp
mov
mov
outsb
ret
lahf
les
sub
jle
sbbl
out
xchg
and
sbb
mov
jle
inc
push
aad
mov
pop
mov
push
fiadds
clc
out
lret
xlat
pop
je
stos
stc
adc
mov
sbb
jnp
push
cwtl
sub
imul
fnstenv
stos
sub
inc
loopne
mov
dec
inc
leave
inc
push
in
adc
mov
out
adc
mov
and
adc
jl
add
xor
data16
mov
or
mov
mov
roll
jecxz
jb
cld
sub
xchg
sub
push
nop
inc
addr16
push
shrl
mov
pop
dec
adc
fcmovne
cmp
rclb
shl
jnp
fucomip
xor
ja
inc
leave
mov
xorl
push
fiadds
rcll
and
scas
bound
fwait
jle
mov
inc
bound
lock
nop
xchg
outsl
outsb
imul
add
mov
or
popf
jg
xchg
or
cmpsl
pop
dec
shl
imul
push
and
out
and
jb
mov
gs
jno
mov
fildll
sbbl
cmpl
outsb
jge
dec
push
dec
pop
xlat
jecxz
imul
stos
dec
loopne
cld
sbb
fwait
popf
push
jbe
daa
adc
add
jae
or
cmpsl
or
xor
divl
mov
and
xor
jmp
push
or
adcl
xchg
leave
jmp
out
cmpl
testb
movsl
sarl
add
add
out
or
adc
orl
pop
dec
scas
ret
lcall
clc
or
pop
loopne
jnp
notb
xchg
lahf
xor
mov
jb
inc
adc
int
mov
das
test
push
jle
xchg
pop
stos
in
psubw
adc
shlb
lahf
push
mov
mov
bound
xchg
les
sub
push
or
mov
push
mov
xchg
add
orl
sub
enter
adc
flds
add
mov
loopne
lret
push
mov
movsl
es
imul
mov
scas
mov
and
subl
sub
inc
push
hlt
xchg
jge
xchg
shlb
ret
xor
andb
ret
test
jp
xchg
pavgw
mov
test
cwtl
int
jno
fbstp
enter
xor
inc
add
aas
pusha
fwait
jns
lahf
adc
or
cmp
mov
xor
add
mov
jns
xor
mov
jl
jno
and
sbb
mov
lods
or
imul
adc
pop
or
sbb
ret
jecxz
sub
call
loop
popa
ljmp
add
cwtl
out
mov
int3
sbb
js
sbb
fld1
enter
lods
xor
add
push
loope
dec
jg
add
mov
mov
pop
aad
adc
dec
push
cmc
add
sbb
jecxz
mov
imul
jmp
rolb
or
cmp
mov
sbb
xor
pop
test
push
cmp
imul
nop
push
add
arpl
add
out
mov
and
push
arpl
pop
pop
xlat
xor
jmp
fisubs
fisubs
jle
sub
subl
inc
daa
flds
adc
mov
inc
lcall
or
lds
mov
xor
pushf
js
or
cmpsb
push
mov
xchg
sarl
push
adc
mov
lods
sbb
or
js
sbb
sub
stos
iret
sahf
push
pop
mov
sub
mov
les
test
pop
in
ds
add
pop
jecxz
cmp
mov
cmp
outsl
jae
mov
pop
jle
pop
ret
ret
jno
jecxz
add
mov
pop
mov
xor
or
test
ds
sub
push
mov
lret
aad
subl
xchg
mov
inc
je
cwtl
or
mov
insb
inc
stos
orl
mov
sub
shlb
rclb
movsl
rcr
adc
lds
test
xchg
cmpsb
xor
cs
test
and
pop
mov
arpl
imul
test
lds
cmp
ds
push
sahf
imul
flds
push
mov
es
pop
cmpsl
ds
xor
dec
sahf
mov
pushf
jle
add
les
sub
fadds
adc
sub
push
pop
jge
ret
sub
lods
inc
push
dec
icebp
dec
sub
clc
pop
mov
cmp
xchg
cmp
ret
mov
cmp
mov
push
jb
jo
dec
rolb
and
lret
or
aas
dec
in
test
dec
fcompl
ja
int3
pushf
mov
xchg
bound
jle
jmp
es
rcl
xor
ss
dec
int
jp
xchg
or
sbb
scas
loope
into
push
jns
jle
mov
inc
pop
movb
repz
sbb
mov
inc
imul
popf
mov
dec
sbb
inc
dec
les
test
adc
pop
jb
enter
push
and
pop
lock
in
mov
loop
push
bound
inc
imul
mov
xor
mov
xchg
push
dec
movsl
in
and
fstpt
add
lods
sbb
gs
mov
xchg
lret
jmp
xor
xchg
mov
pop
push
add
les
lods
in
pop
mov
sbb
xor
test
or
jp
and
push
dec
icebp
ljmp
dec
push
push
mov
pushf
push
stos
hlt
nop
jmp
jbe
xchg
in
add
xchg
test
xchg
and
jmp
mov
cmp
dec
jb
mov
sub
cmpsl
xchg
std
scas
jge
pop
xor
xchg
int3
in
push
adcb
dec
xchg
pop
or
mov
sbb
xor
lret
mov
sub
push
mov
jl
push
mov
sbb
dec
and
iret
into
sti
push
shl
push
add
jg
repz
sub
scas
stos
push
or
add
out
loopne
lds
add
sbb
jno
dec
subl
mov
sub
xor
mov
mov
rorb
ljmp
sbb
and
mov
leave
pop
xchg
mov
sub
shll
cmp
inc
sub
mov
push
sbb
or
jmp
sahf
sbb
mov
xchg
aas
sub
movsb
adc
repnz
or
push
lahf
dec
dec
mov
arpl
or
mov
mov
fiadds
rolb
sub
xchg
sub
add
or
jp
fbstp
mov
fiadds
xchg
inc
pop
iret
setbe
xchg
push
loop
mov
sahf
xchg
push
sub
clc
or
movsl
or
lret
cmpsl
mov
js
roll
mov
fimuls
dec
xor
add
xchg
repnz
pushf
das
cmp
je
sbb
sub
jb
xor
add
jle
xor
and
dec
sbb
or
sub
dec
pusha
mov
or
xor
adc
and
in
sbb
push
mov
test
lea
adc
adcb
push
cmc
fsts
popf
pop
cmovge
sbb
mov
add
cmp
lahf
push
ret
stc
sar
pop
sarb
inc
pop
pop
dec
jge
mov
imul
xor
inc
lea
push
inc
xchg
inc
push
daa
scas
add
mov
pushf
dec
mov
out
xor
scas
je
jge
lahf
mov
cmpsb
add
ljmp
jbe
cli
push
jno
inc
sahf
rclb
sub
das
push
jb
push
mov
cmpsb
arpl
inc
cld
push
xor
adc
fwait
adc
imul
jecxz
scas
arpl
xor
divl
sbb
xchg
mov
push
inc
mov
adc
pop
mov
imul
xchg
andb
stos
inc
dec
fcompl
jle
movsl
movsb
or
mov
rcrl
loop
mov
fbld
lock
mov
jl
sahf
lods
jle
addr16
lds
or
or
repz
and
pop
add
cltd
mov
arpl
arpl
jno
mov
cs
ret
push
sub
test
es
mov
mov
mov
ds
sub
jo
ficoms
std
rorl
repnz
sti
xchg
sahf
into
fwait
aaa
xchg
insb
xchg
mov
cli
gs
gs
push
xor
cmp
cltd
add
jbe
and
push
xchg
mov
sbb
loopne
cltd
push
call
pop
hlt
xchg
dec
jno
pop
jmp
fstpt
adc
dec
mov
aas
mov
cmp
push
cmp
fnstsw
xchg
add
stos
scas
dec
cltd
jecxz
lcall
push
xor
imul
xorl
xlat
mov
test
or
stc
add
adc
data16
test
xchg
xor
jecxz
fs
inc
cmp
inc
add
inc
add
add
inc
cli
addl
push
mov
loopne
jne
rclb
cmc
add
pop
jl
xchg
jp
adc
js
add
cmp
jbe
rcll
std
mov
pop
adc
add
xchg
adc
pop
adc
adc
add
xchg
packuswb
xchg
lea
and
cmp
or
adc
imul
aam
add
jp
add
pop
mov
bound
orl
fisubs
adc
sbb
xchg
and
pop
and
push
mov
sub
shrl
or
daa
mov
push
sbbl
mov
inc
imul
or
inc
xor
test
and
test
sub
gs
add
push
xor
cltd
xorb
add
inc
dec
popa
loop
cmp
test
movswl
mov
or
ljmp
ret
fdiv
add
xor
mov
xchg
mov
das
lcall
and
es
inc
mov
adc
addl
out
aam
mov
fnstenv
jne
outsl
fidivs
cmp
ficoml
mov
add
adc
xchg
pop
xor
cmp
test
push
push
sub
mov
jnp
in
mov
rolb
add
dec
fwait
inc
les
and
js
hlt
fwait
xor
ds
sub
cmc
lea
adc
fisttpl
imul
push
sub
andl
das
xchg
push
imul
mov
addr16
popa
xor
push
add
adc
push
popa
sbb
cmc
push
movsb
std
mov
outsb
loope
adc
sbb
adc
popl
or
test
std
daa
ja
pushf
and
int
jmp
push
cmpsb
mov
adc
in
add
adc
fwait
pop
xor
orb
mov
leave
add
scas
cmp
out
fadds
das
stos
mov
loop
jno
sub
dec
add
cmpb
xorl
jb
cmp
mov
lea
xchg
mov
mov
fimuls
mov
fsts
lret
mov
sub
xchg
mov
sub
push
jmp
xor
test
hlt
inc
cwtl
jns
inc
nop
cmp
lock
imul
sbb
and
jecxz
sahf
stos
adc
xor
pop
cwtl
lock
jb
xor
inc
mov
jle
adc
stos
jmp
jo
mov
fiadds
push
jecxz
xchg
dec
and
test
repnz
xchg
flds
or
push
loope
mov
gs
inc
or
dec
add
arpl
and
into
int3
or
or
sub
aaa
xchg
repnz
sbb
xlat
jp
xor
lret
test
push
nop
nop
fadds
fs
fstps
cmp
cld
adc
out
lea
add
pop
pop
outsl
mov
add
in
push
in
clc
movsl
sbb
aaa
push
ljmp
lcall
insb
lods
cltd
loop
sbb
popa
cmp
sbb
xor
in
inc
push
push
clc
ljmp
sub
xor
out
push
fst
data16
push
lds
push
and
data16
movsl
sub
popa
fstps
inc
fwait
or
lret
pop
cmp
mov
test
pushf
pusha
mov
mov
xchg
movsl
sub
mov
pop
shlb
js
ret
xlat
pop
or
sbb
and
shll
loop
or
lret
lret
add
mov
ljmp
sbb
push
into
lahf
iret
jb
rorb
je
in
negb
mov
rcll
jg
xor
pop
and
mov
xor
pop
and
xor
sbb
jb
addr16
dec
jno
loop
loope
jl
jbe
pushf
ljmp
jb
lock
ret
arpl
mov
out
mov
mov
adc
jnp
int3
cmp
add
sbb
lds
pusha
insl
imul
push
mov
inc
add
popf
test
faddl
ret
and
sub
push
mov
dec
jle
inc
out
push
or
inc
enter
pop
popa
push
stos
dec
test
adc
dec
mov
mov
ljmp
pushw
mov
or
xchg
repz
jl
or
xchg
std
push
pop
and
inc
push
push
cmp
inc
fxch
pusha
bound
les
lock
add
sub
jbe
sub
xor
pandn
or
or
sbb
jle
xchg
fimuls
xchg
inc
push
sub
dec
insb
or
pushf
bound
stos
cwtl
lods
and
popa
out
ja
popf
push
push
fsts
repz
jns
mov
xor
cmp
jecxz
int
mov
pusha
lahf
das
mov
shrl
rcrl
add
xchg
orb
fimuls
stos
xchg
and
xchg
pop
push
scas
ljmp
xor
jns
repnz
cmp
sahf
rcrb
push
roll
xor
subb
push
xor
add
pop
rcrl
sar
xchg
ja
jb
in
dec
es
test
pop
xor
and
push
cltd
mov
aam
dec
lock
iret
out
jmp
xor
es
out
sub
jnp
cmp
add
mov
lds
in
lret
pop
adc
mov
pushf
push
call
cltd
push
je
popf
xorl
enter
mov
xor
cmp
or
mov
out
outsl
movsl
loop
loopne
mulb
xchg
push
sti
in
push
cmp
popa
out
xchg
lods
adc
xor
xor
sbb
or
dec
ljmp
test
pop
test
hlt
int3
test
mov
mov
cmp
out
std
cltd
push
sub
daa
and
gs
push
mov
ret
jmp
mov
sbb
imul
loop
mov
test
add
inc
inc
add
arpl
push
inc
mov
out
pop
mov
mov
addb
xchg
push
dec
repz
lret
clc
jp
es
mov
sub
sbbl
pop
int
bound
push
add
push
sub
addb
and
xor
inc
sbb
js
dec
pop
dec
mov
test
aaa
adc
fnstenv
xchg
pop
adcb
sbb
jns
hlt
add
xchg
adc
lcall
xor
xchg
xor
sbb
add
lcall
sbb
add
into
and
lea
in
loopne
and
add
mov
xchg
pusha
lret
fwait
nop
adcb
call
mov
in
dec
xor
xchg
cli
mov
sub
jge
sbb
lahf
or
pusha
rclb
sahf
out
cld
inc
inc
jb
int3
repz
stos
pop
dec
or
sub
mov
mov
out
adc
pop
dec
push
push
mov
sub
cmp
cltd
shld
loope
push
dec
sub
add
xor
pop
jns
cmpsb
fsts
lods
dec
jecxz
push
jbe
loopne
sbb
mov
cwtl
aad
jbe
pop
and
dec
lcall
jmp
or
or
mov
orl
dec
ljmp
movsl
mov
int3
add
mov
pusha
mov
mov
addr16
aaa
insl
aaa
adc
xchg
out
xor
lcall
adc
arpl
and
mov
push
adc
sub
xchg
inc
xchg
data16
cltd
cmpsl
mov
xchg
xor
stc
addl
jmp
cltd
or
shrl
gs
call
orl
jae
and
push
xor
ljmp
dec
jg
clc
push
ret
mov
dec
fisttps
push
inc
sub
and
test
xchg
imul
test
fbld
adc
and
stos
or
xchg
gs
push
adc
movsl
lods
outsb
cs
arpl
add
ds
inc
stos
mov
dec
push
jnp
push
hlt
xchg
imul
ljmp
ficoml
rorb
inc
jge
xorl
push
loope
mov
imul
cltd
jl
pop
movsb
cmpsb
int3
stos
mov
xchg
fbld
push
xor
or
cwtl
cli
jb
out
jnp
cmp
ret
fdivl
pop
xchg
gs
movsb
pop
lret
push
shrb
scas
xor
mov
mov
jb
mov
cmp
and
xchg
ret
adc
stc
push
jecxz
sarl
mov
mov
nop
flds
enter
push
dec
jecxz
cmp
pop
scas
mov
push
fisubl
cmpl
mov
xchg
mov
call
insb
sahf
mov
xor
add
jne
arpl
ret
jns
xchg
adc
push
hlt
outsl
in
repz
ficompl
mov
add
repz
cwtl
cwtl
adc
inc
stos
and
sub
stos
aaa
cmc
push
sub
ret
test
out
fwait
pop
pop
lea
subb
in
cs
and
xchg
pop
arpl
and
and
sbb
loopne
aam
das
imul
bound
xchg
mov
imull
ja
xlat
dec
add
popf
adc
xchg
inc
imul
dec
std
dec
pop
test
inc
int3
fstp
popf
mov
bound
bound
mov
cmp
popa
mov
add
popa
dec
inc
cmp
cmp
das
add
and
mov
adc
and
pop
add
cmp
inc
test
stc
sub
push
adc
xor
jge
stos
sub
pop
addr16
ror
stos
pushf
fisttps
lcall
mov
call
cmp
mov
sti
adc
int3
jno
aaa
push
or
btc
xchg
call
add
into
fwait
outsl
mov
sbb
push
repnz
push
mov
leave
inc
shrb
lahf
in
imul
sbb
shll
stc
vpmadcsswd
setl
out
js
bnd
push
iret
ja
out
cmp
mov
ret
int3
clc
xchg
mov
rorl
negb
bound
inc
lret
xor
jae
bound
pushf
mov
imul
xchg
cld
cltd
or
pop
andl
mov
movsb
lds
lret
aam
xchg
sub
out
es
stos
test
lds
dec
stos
jle
mov
mov
mov
and
hlt
cmpl
out
sbb
sub
or
add
and
popa
cmp
ja
out
push
adc
loope
xchg
push
mov
push
movsl
lahf
mov
cltd
mov
cmc
mov
mov
jne
mov
or
movsl
push
add
dec
int3
pop
mov
inc
int3
push
adc
outsb
mull
lea
and
sub
mulb
inc
dec
xchg
xor
cli
xchg
add
sub
mov
jmp
cmp
adc
inc
clc
iret
or
and
jmp
push
dec
inc
inc
jno
imulb
and
mov
xor
xor
test
cwtl
push
in
fnsave
jecxz
mov
sti
popa
sbb
xchg
imul
xor
lds
mov
and
xor
loope
add
xchg
mov
ret
and
ret
cmp
xchg
mov
mov
xchg
adc
sbb
rorl
inc
cltd
pop
ficoms
inc
lcall
push
ljmp
push
lahf
into
push
pop
or
push
cld
pop
inc
jl
pop
jb
mov
leave
adc
rorl
push
ja
jno
jle
leave
mov
lret
xchg
push
sub
scas
aas
movsb
test
or
pop
pop
xchg
inc
cwtl
pop
and
push
rorl
adc
inc
cmp
inc
int3
or
fsubrs
and
aas
mov
mov
mov
clc
or
int
into
or
mov
test
pop
loope
inc
lods
iret
addb
inc
loope
jb
or
pop
andb
pop
push
imul
dec
and
scas
and
pop
inc
or
dec
adc
fistps
int3
mov
cmpb
pushf
and
sbb
into
fsubl
or
cmp
and
pop
sbbb
inc
js
jg
mov
mov
dec
pop
xchg
jle
and
cmp
jp
stos
leave
fs
cmc
inc
pushf
subb
mov
xchg
xchg
pop
call
mov
rclb
xchg
andb
inc
mov
in
mov
stc
pop
lods
loopne
jmp
mov
dec
dec
stos
sub
popa
push
insb
fsubl
icebp
aaa
jo
inc
lret
sbb
in
mov
lcall
adc
ds
sbb
shlb
or
pop
pusha
xor
nop
dec
sbbb
add
les
cmp
frstor
dec
cmpsb
pop
adc
popa
jp
sbb
xchg
sbb
xorl
cmpsb
jno
scas
rcr
sbb
push
loop
add
leave
inc
inc
aam
add
test
jo
push
cmp
or
jnp
mov
outsb
mov
lods
xor
sahf
xchg
lcall
pop
dec
imul
mov
shrl
and
xor
cmpsb
leave
pop
adc
dec
repnz
fiadds
in
jb
and
inc
rol
filds
mov
sub
pop
scas
loop
xchg
sahf
push
inc
or
push
hlt
push
dec
lds
rolb
sub
push
mov
fwait
hlt
dec
sbb
push
add
ss
loop
add
cmpsl
sub
cmp
sub
lock
fisubs
dec
out
dec
mov
fwait
adc
xor
push
sub
or
movsb
push
stc
xchg
sbb
xor
adc
jle
pop
and
mov
inc
sbb
jnp
out
shl
cmp
imul
mov
mov
int3
aaa
push
pop
popa
andl
popf
dec
mov
popa
xor
jb
dec
add
scas
push
xchg
dec
int3
xor
mov
push
shrl
sbb
mov
push
lds
aaa
test
lahf
cmp
mov
fsubp
repz
lcall
sbbl
dec
ret
imul
adc
xor
lock
addl
adc
incl
adc
inc
push
xor
push
scas
ds
jns
adc
or
pop
xor
pop
daa
test
int3
and
sbb
xchg
leave
adc
scas
in
hlt
int3
cmpsl
je
cmp
cmp
sbb
cmpsl
ds
cmpsl
lahf
cmp
adc
mov
inc
jb
add
add
int3
or
jl
sub
lods
sbb
movsb
jns
sub
cmp
inc
lahf
inc
adcl
jle
test
sub
sti
xchg
mov
jle
cld
shlb
inc
pushf
push
mov
jb
or
sbb
push
test
adc
fadds
jb
subl
setg
or
push
stos
std
mov
decb
iret
inc
popa
jns
shlb
cmp
adc
push
sbb
int
enter
out
lds
mov
push
nop
sub
and
mov
mov
and
or
dec
push
jo
jb
loope
loope
jns
stos
xor
loopne
test
or
jbe
int3
xor
inc
xchg
push
jo
hlt
aad
or
jbe
fwait
push
xchg
aaa
xchg
inc
jnp
push
in
push
lds
jnp
add
imul
adc
cmpb
fisubrs
leavew
jle
inc
hlt
or
movsb
arpl
pop
push
xor
lea
imul
dec
lret
ja
mov
pop
mov
cmp
bound
pop
nop
lock
adc
mov
push
push
rol
dec
in
inc
dec
add
mov
mov
pop
inc
inc
mov
sbbl
ficomps
ficomps
outsl
add
inc
lret
call
cmpsb
movsl
pop
xchg
out
xor
xchg
jne
fscale
inc
iret
mov
push
outsb
dec
mov
mov
fadd
icebp
test
jae
loope
mov
fdivl
imul
push
insb
or
repz
pop
gs
cmp
xor
pushf
and
cmp
lahf
jecxz
and
inc
jb
push
insl
inc
test
adc
scas
dec
iret
dec
aaa
fldenv
enter
dec
jle
fs
push
lret
mov
pusha
and
fucompp
dec
push
and
sub
imul
mov
in
or
idivb
pop
sub
nop
xchg
js
sbb
inc
fadds
xchg
inc
xchg
ret
stc
rcrl
cmp
xchg
fwait
lods
or
inc
jne
add
inc
cmp
sbb
orl
pop
les
xor
xchg
cmp
cmpsb
xchg
xchg
cwtl
loope
inc
push
loope
rcrb
loopne
inc
sbb
xchg
and
lret
test
test
sub
xchg
push
xchg
call
call
sbb
lods
in
inc
cli
mov
scas
aaa
shl
pop
stos
add
ljmp
and
pop
inc
sub
leave
lds
es
and
out
inc
xor
bound
fimull
cwtl
xchg
and
popa
mov
mov
xchg
movsl
add
or
mov
or
int3
mov
in
mov
pop
jns
add
xchg
push
shrb
mov
mov
inc
test
inc
cmp
outsb
add
repnz
pop
pusha
cli
xor
aad
out
ds
mov
aas
inc
std
and
add
iret
daa
cmp
aaa
mov
shlb
loope
mov
push
jb
cmpsb
push
nop
lret
inc
xchg
out
mov
mov
pop
arpl
jmp
ret
sbb
lea
loopne
outsl
fistpl
jno
lahf
roll
sub
data16
xchg
andb
or
rcrb
dec
popa
or
out
xchg
imul
cmpl
lea
xor
or
mov
cmp
mov
imul
xlat
push
dec
andl
mov
adc
repnz
ds
add
repz
adc
xor
adc
out
ret
push
mov
or
insb
and
rolb
lods
push
jg
fdivrs
jmp
pop
sub
sbbb
dec
lock
jg
add
nop
inc
adc
cmpsl
lret
mov
jno
sub
enter
push
add
lcall
sti
in
ror
lds
jbe
push
test
sub
pop
dec
rcl
arpl
lret
jmp
aad
sbb
xchg
popa
test
dec
shll
or
cmp
aam
movsl
popf
add
cld
push
sbb
mov
jle
int3
lock
fdivrs
ljmp
loopne
cmp
mov
and
popf
inc
mull
jb
sbb
sbb
stos
cmp
call
push
or
fcmove
adc
cmp
pop
cmp
xor
xor
jp
or
and
jne
cli
xor
mov
movsb
mov
cmpl
decl
lret
cmp
addr16
fwait
mov
or
jb
mov
int
push
mov
pop
add
sbb
imul
inc
mov
cmpsb
arpl
sbb
lock
and
aaa
inc
xchg
xchg
dec
cmc
gs
into
adc
cmp
mov
jmp
decl
dec
pop
jno
pop
pop
dec
andb
nop
push
or
pop
test
add
and
mov
dec
inc
int3
cmp
outsb
adc
sbb
leave
add
imul
into
inc
ljmp
push
lahf
push
adc
inc
add
inc
sbb
inc
icebp
pop
aad
aam
in
push
dec
jns
ficomps
arpl
shrb
pop
inc
daa
cld
jg
test
bound
fdivs
movsl
or
scas
push
add
bound
mov
adc
pop
fs
and
sarl
cmp
sub
in
out
roll
or
mov
mov
lock
roll
xor
aam
push
shll
inc
mov
andb
cld
scas
in
add
sub
inc
inc
nop
lahf
test
ds
dec
or
dec
popl
or
mov
jno
lar
xchg
cmpsl
push
sahf
mov
cmp
ret
pop
in
xor
movsl
mulb
add
jno
sbb
xlat
dec
in
xchg
sub
jnp
jnp
fcomip
and
loope
insl
je
add
add
lcall
mov
leave
cmp
pushf
imul
shll
push
pop
xor
sub
cmp
dec
xor
jne
inc
xchg
lret
sbb
test
dec
adc
daa
popa
pop
xor
lret
icebp
ret
imulb
inc
cmpsl
lds
iret
and
dec
and
push
loopne
outsl
loope
lcall
and
sbb
cmp
mov
mov
and
jno
mov
cwtl
add
ret
jg
sbb
and
xor
data16
dec
lods
lds
ds
shlb
xchg
out
push
mov
movsb
push
sub
pop
lret
xor
sbb
into
mov
add
sti
shrb
mov
mov
fidivl
stos
pop
sub
ss
bound
sti
ljmp
out
cltd
aad
push
popa
sti
and
xchg
cmp
std
dec
and
dec
and
push
xor
lea
cmpsl
fistl
cmp
aaa
inc
push
stos
outsl
test
mov
push
push
divl
int
rcrl
sahf
mov
add
adc
add
sub
push
les
pop
popa
ret
jmp
cli
or
fcompl
mov
aas
jb
sahf
dec
pop
sub
das
mov
cmp
and
push
pop
hlt
loop
movzbl
mov
jmp
adc
push
adc
xor
xor
sbb
sbb
jmp
ficoml
fnsave
adc
ficoml
movsl
out
adc
mov
mov
xor
bound
mov
out
jge
and
cmp
cmp
or
bound
stc
pop
jb
lods
sbb
pop
out
jbe
inc
mov
jle
pop
test
and
mov
mov
lret
sarb
movsb
cmp
or
mov
or
sub
mov
or
push
nop
mov
fstps
mov
adc
adc
add
leave
jns
jmp
adcl
xchg
sbb
xchg
or
adcb
add
xor
subl
sbb
shll
outsl
xor
xchg
push
inc
mov
cmp
pop
jmp
adc
dec
jle
ja
adc
inc
icebp
lods
out
lret
jbe
or
ds
xchg
inc
add
rcrl
dec
jle
xor
dec
das
decl
imul
and
data16
movsb
or
mov
lods
pop
jns
jle
imul
rcll
fsubl
mov
adc
xor
dec
adc
dec
cmpsb
out
cmp
loop
rcr
hlt
loope
rolb
fldcw
dec
pop
lods
mov
shll
xor
xchg
dec
movsb
scas
jmp
or
add
adc
xor
xor
mov
lock
or
inc
loopne
addl
lea
data16
or
xor
or
mov
xchg
jmp
and
es
dec
loop
fists
dec
bound
les
mov
jle
mov
in
xorl
into
jb
mov
ret
int
inc
xchg
xchg
mov
out
in
add
xor
ds
add
adc
ret
loope
and
add
push
pop
adc
inc
xchg
mov
push
ja
jle
rol
sub
dec
jmp
in
xor
mov
xchg
xor
adc
pextrw
xchg
add
rorl
sub
jmp
addb
inc
dec
fsubrl
inc
xor
clc
mov
fadds
and
loopne
outsb
jge
xchg
pop
pop
add
xor
cmpl
jge
leave
cmp
cmp
pop
xchg
bound
dec
mov
fs
mov
mov
es
xchg
cmp
lahf
mov
cltd
push
mov
jmp
adcl
inc
lcall
push
or
add
xchg
popw
test
test
mov
inc
aam
test
jle
xchg
xchg
jecxz
sub
mov
imull
sub
mov
rcll
cmp
sub
pushf
jl
cmp
xchg
xor
flds
sbb
mov
popa
jno
mov
loope
adcl
jns
cmp
sbb
int
sub
dec
ret
mov
ljmp
lods
shl
imull
push
or
addr16
fwait
rcrl
mov
cmpsb
aas
pop
test
and
mov
roll
int
lret
jno
mov
adc
sarb
inc
hlt
movsb
fcomps
call
xchg
mov
popa
cltd
ds
cmpsb
lods
push
fstps
inc
dec
ljmp
repnz
add
lahf
aad
inc
fidivrl
jle
or
imul
outsl
sbb
ret
sbb
sbb
mov
sbb
cwtl
cmpsb
push
mov
mov
divb
mov
mov
sahf
roll
stos
pop
mov
and
pop
push
sub
inc
mov
aas
dec
pop
and
out
mov
nop
loope
push
inc
icebp
scas
adc
adc
or
cmp
adc
xor
pop
inc
sbb
out
jb
pushf
stc
add
outsw
scas
sbb
sbb
push
in
jmp
fisttps
cld
aas
les
or
xor
lods
lock
jecxz
mov
jb
jge
je
pop
popa
fcmovnu
push
and
pop
xor
pushf
ja
adc
popf
cmp
bound
js
cmp
lret
inc
mov
pop
ret
mov
adc
jb
adc
jp
out
imul
adc
fneni(8087
fcomi
ds
pop
xor
addl
or
out
pop
dec
jle
jne
iret
ret
inc
pop
sbb
adc
sbb
adc
cmp
out
fldenv
sub
lret
stos
dec
out
push
jle
int
jb
bound
aad
mov
sbbb
jle
test
into
fisttps
or
inc
andl
push
test
jmp
lcall
push
scas
nop
stos
pop
cmp
xchg
test
bnd
inc
sub
inc
and
xor
test
fwait
or
adc
xchg
pop
insl
loop
jmp
jp
inc
and
roll
fldl
add
mov
and
cmp
in
inc
dec
test
or
xor
leave
bound
mov
mov
mov
loopne
sbb
add
sub
dec
mov
leave
push
inc
sbb
pop
sub
pop
fldcw
cmp
fwait
inc
mov
sbb
cmp
pop
addb
or
aam
dec
stos
adc
or
inc
cmpsb
jle
mov
cs
push
and
inc
jmp
push
mov
xchg
out
sbb
orl
adc
lret
popa
outsb
and
sbb
insb
imul
ds
call
dec
in
hlt
in
int
adc
add
adc
movsb
or
movsl
sub
arpl
loopne
es
fldcw
imul
xchg
lds
mov
iret
lods
fistps
mov
inc
es
pop
xchg
jbe
adc
mov
lcall
pop
jb
cmp
cmp
stos
ret
movsl
cmp
mov
add
test
jns
stos
ja
pop
cmpb
add
movsl
push
fwait
clc
sbb
stc
stos
sbb
jl
data16
in
fstl
pop
cltd
loopne
or
sbb
sub
lods
jecxz
rclb
inc
jae
andb
push
in
push
mov
mov
dec
cwtl
cmp
movsl
jb
dec
or
bound
roll
fsts
pop
and
or
lahf
jne
jge
adc
addr16
xchg
in
xor
sbb
add
ficompl
inc
mov
inc
daa
adc
sahf
jno
xchg
push
mov
add
fcoms
loopne
mov
pop
out
add
or
push
rcrl
xchg
data16
fiaddl
jmp
and
mov
fldt
add
sub
addl
xchg
and
inc
push
fistpl
sub
push
popa
mov
lahf
mov
mov
stos
xchg
xchg
adc
es
mov
lret
clc
sub
or
nop
inc
movsl
push
in
ficompl
and
xchg
mov
jno
or
cwtl
leave
jge
jbe
add
shlb
stc
xchg
add
pushl
cmpsb
dec
in
lahf
loope
cmp
sbb
movsb
bound
pop
mov
insb
pop
xor
aaa
add
mov
jecxz
jo
adc
pop
and
in
adc
xchg
inc
fsubp
bound
clc
aad
adcl
pop
or
push
test
les
imul
mov
add
adc
iret
mov
sbb
push
in
ss
mov
jo
jle
inc
add
mov
pop
xchg
adc
jbe
add
loope
mov
mov
mov
xor
cltd
and
inc
fistps
inc
mov
sbb
jb
lea
aas
push
rcrl
push
iret
inc
pop
bound
shll
xor
jae
mov
stos
lret
add
fs
jp
cmp
xlat
sub
mov
ds
jb
and
inc
xor
arpl
inc
sub
addr16
add
sbb
adc
push
inc
xchg
mov
dec
xchg
add
push
cmp
sbb
sbb
pop
stos
mov
cwtl
mov
adc
jmp
mov
test
inc
pop
dec
cmp
cwtl
push
sbb
jge
adc
lock
xchg
cli
xor
xor
fstps
shll
bnd
pop
das
xchg
inc
pop
int3
test
aaa
or
pop
inc
mov
pop
mov
inc
mov
and
bound
mov
dec
pop
pop
and
aaa
push
xchg
scas
xor
lea
adc
and
pop
xchg
aaa
lea
mov
test
adc
sbb
popl
popa
push
or
lock
test
popa
and
inc
add
push
ds
mov
cld
ret
in
and
xor
fiadds
xor
fwait
mov
add
adc
and
cmp
or
dec
bound
lret
xchg
es
fwait
cwtl
xor
sbb
and
fdivl
fldl
mov
rolb
jmp
movl
xchg
in
xchg
pop
jno
mov
and
adcl
scas
mov
stos
push
pop
mov
sbb
mov
addb
or
sbb
fidivs
jg
push
xor
xchg
repz
inc
cli
cltd
ss
shrl
cmp
jecxz
mov
mov
jnp
cmp
and
scas
dec
push
enter
sub
sbb
cwtl
push
outsl
mov
cmp
push
fsts
mov
dec
mov
faddl
iret
adc
pop
adc
pop
stc
popf
fldcw
push
sub
push
popa
js
sub
mov
push
popa
pop
adc
cmp
pop
pop
pop
adc
rol
add
popa
inc
sbb
adc
mov
or
mov
adcl
arpl
iret
pop
dec
fbstp
in
mov
jne
cli
stos
orl
test
pop
mov
or
sbb
lcall
inc
filds
jns
faddl
roll
sbb
inc
inc
and
inc
and
add
add
bound
jp
cltd
and
lret
fcom
jae
mov
ret
push
pop
bts
jle
push
insl
ret
addl
subb
shll
or
mov
int3
or
adcl
rcrb
mov
push
js
sbb
ret
arpl
add
and
clc
push
repnz
jb
pop
fdivs
xor
inc
jp
add
add
in
cmp
jecxz
adc
add
cmp
cmpl
or
mov
aas
hlt
pop
je
pop
xchg
imul
dec
add
and
jb
push
dec
add
add
add
icebp
shll
jne
and
lahf
lret
inc
fadds
xchg
cmpsb
popl
jecxz
sti
sarb
inc
inc
cs
sti
jge
inc
in
inc
jbe
out
sbb
dec
inc
inc
subl
gs
mov
adc
out
sbb
popa
inc
cli
xor
cmp
sub
pop
adc
mov
fstps
cmp
aaa
cwtl
fs
xor
push
imul
cmp
aad
add
xchg
shlb
call
cmc
enter
lods
lock
push
mov
xchg
fiaddl
mov
cmp
daa
inc
jle
add
and
dec
in
mov
sbb
andb
inc
rolb
or
movsb
pop
push
and
add
cmpsb
sbb
lock
mov
cmp
xchg
stos
push
push
cmp
pop
xchg
shlb
jne
lcall
sbb
pop
adc
ret
negl
or
push
pop
js
fidivl
jno
cmp
cmp
jmp
jne
jnp
jb
ret
fwait
fwait
shrb
inc
mov
es
imul
pop
test
mov
ds
and
ds
movsb
xor
js
sahf
inc
pop
push
scas
dec
dec
jmp
cmp
mov
mov
mov
xchg
pop
pop
add
aas
mov
ja
lret
xor
xchg
jno
lret
ror
mov
or
repz
pop
xor
mov
andl
aad
push
inc
jg
aad
pop
fimull
shrb
lods
sti
mov
movsl
scas
push
and
fists
les
or
lea
adcb
loop
sub
dec
jp
mov
xor
lods
mov
and
pop
imul
mov
pop
ret
add
sbb
call
mov
pusha
pop
or
dec
les
stc
fdivl
loopne
adc
inc
or
xor
fadds
pop
adc
pop
push
lods
jno
pop
rorb
inc
mov
pop
stos
cli
test
fs
mov
jb
xor
adc
mov
inc
mull
loop
popf
lods
mov
adc
or
cmp
pop
add
cmp
cmp
cli
mov
mov
orl
test
dec
and
mov
rclb
mov
add
mov
bound
lret
test
sti
xlat
xchg
dec
push
les
mov
lods
or
shll
push
inc
cltd
sbb
int
bound
or
push
push
lret
fbstp
jne
or
jge
pop
push
bound
jmp
dec
xchg
movsl
pop
dec
jnp
clc
in
sub
mov
jp
jns
and
nop
sbb
adc
aad
cwtl
mov
popf
xor
mov
xchg
inc
and
xchg
test
or
ret
inc
mov
dec
xor
or
mov
pop
inc
mov
xor
test
xor
inc
lret
mov
nop
xor
xchg
test
add
or
mov
xor
mov
inc
sbb
inc
and
sub
inc
xor
mov
inc
push
test
inc
sbb
pop
mov
les
test
or
test
and
xor
push
and
jp
sbb
adc
dec
clc
subl
xchg
dec
jmp
xchg
cmp
sub
and
push
or
mov
test
stos
mov
cmpsb
or
add
mov
sub
mov
ret
push
push
sbb
mov
add
popa
mov
pusha
popa
cld
add
mov
pushf
adc
add
loope
test
pop
int3
jmp
out
add
fwait
or
inc
adc
jp
popa
pushf
test
loop
mov
into
insl
ret
lods
or
cs
dec
and
shrd
mov
push
push
sub
mov
lods
xchg
mov
repnz
push
add
imul
lock
icebp
xchg
sub
sub
mov
xor
adc
or
lods
outsl
outsl
add
inc
adc
adc
and
bound
movsb
test
mov
shrb
sbb
xor
loop
xor
adc
inc
popa
andl
mov
and
andl
inc
test
inc
test
es
data16
daa
inc
xchg
or
sub
mov
sub
add
leave
jmp
push
stos
lret
sub
imul
dec
in
mov
jle
or
call
add
mov
and
scas
in
adc
push
jo
pop
mov
jl
jecxz
xchg
adc
add
push
cmp
mov
push
and
or
in
sahf
jmp
or
mov
xor
into
scas
inc
mov
mov
and
loope
pop
cmpsb
out
shrl
scas
and
jp
icebp
push
cmp
scas
mov
mov
imul
inc
ret
mov
lret
or
ljmp
dec
movl
sub
add
cs
ja
out
enter
outsl
test
cmp
inc
daa
repnz
fadds
mov
add
cli
imul
jge
fisttpl
mov
movb
iret
push
or
flds
into
in
stos
scas
xlat
int3
cmpsl
or
jl
add
mov
sbb
add
xchg
cmp
dec
jne
pop
and
stc
xlat
xchg
push
inc
fisttps
xor
lea
mov
sub
mov
pop
pop
push
in
push
inc
mov
inc
push
lea
jae
fsubrs
and
iret
xchg
jne
jle
push
fucomp
adc
outsb
lods
sbb
jns
fs
int
xor
scas
clc
dec
xchg
lea
add
push
test
out
push
dec
es
jne
cltd
mov
adcb
cmc
mov
pop
xchg
test
shll
mov
xor
inc
in
fucomip
fimull
lods
inc
hlt
inc
push
and
psrad
dec
xchg
fidivs
daa
mov
mov
dec
mov
mov
push
xor
pushf
mov
sub
mov
push
sub
inc
dec
or
andb
xor
adc
inc
out
popf
cmpsl
out
pop
mov
inc
or
dec
jmp
lea
xchg
cmpsl
xchg
inc
imul
xor
jae
imul
in
cwtl
lret
mov
add
mov
mov
shll
adc
sahf
call
pop
xchg
and
rorb
push
push
lea
test
bnd
sub
sahf
push
imul
outsb
testb
add
cmpsl
mov
sbb
in
sub
lods
mov
scas
aad
std
mov
cmp
adc
jmp
lahf
aaa
cs
arpl
mov
dec
sub
out
or
js
cltd
das
leave
sub
inc
jbe
sub
jae
lcall
cli
pusha
scas
mov
outsl
dec
or
and
mov
setnp
cmpsl
stos
lea
inc
stos
leave
pop
pop
xor
lret
ss
imul
mov
lods
movb
rep
daa
into
into
jnp
imul
push
enter
test
mov
in
dec
add
add
push
cmpsb
pusha
mov
jo
xchg
push
xchg
xor
and
xor
inc
inc
mov
daa
mov
push
test
and
dec
and
inc
cld
ds
mov
pop
sub
inc
mov
adcl
inc
loop
and
fdiv
pop
addl
push
adc
mov
push
flds
shl
adc
push
jb
add
push
jae
add
push
je
add
jne
add
push
jbe
add
push
ja
add
pop
js
add
pop
jns
add
pop
jp
add
pop
jnp
add
pop
jl
add
jge
add
pop
jle
add
pop
jg
add
pusha
andb
es
mov
es
dec
add
adc
pushl
lahf
dec
add
or
dec
scas
les
leave
xor
add
and
pushf
popa
inc
add
ret
xor
and
lret
test
cmp
bound
movq
sub
scas
in
mov
in
add
mov
add
lods
xchg
subl
jmp
push
and
scas
test
repnz
inc
into
bound
sub
mov
or
mov
xchg
inc
daa
pop
inc
fst
mov
fcoms
inc
mov
pop
lds
insl
jmp
fisubl
mov
mov
and
movl
or
add
add
out
bnd
out
imul
outsl
adc
dec
bound
sub
loope
mov
and
and
or
lock
and
aaa
sbb
mov
imul
mov
sub
test
aam
xor
pusha
stos
and
stos
movsb
stos
test
inc
mov
out
xchg
icebp
stos
mov
addl
jbe
lret
jo
outsb
ror
add
sub
dec
mov
xor
lret
jl
or
xchg
inc
mov
scas
out
mov
dec
sbb
movsl
in
sub
or
add
add
int
shrl
push
leave
rcll
adc
dec
inc
pop
addr16
mov
ret
xchg
stos
add
dec
pop
dec
repz
jge
adc
imul
sub
xor
cltd
sbb
andl
shlb
or
jne
add
pop
sub
outsl
jl
jo
mov
or
filds
test
fwait
xchg
rorl
cmpsl
daa
enter
pop
add
sub
imul
fdivl
sbb
and
cmpsl
add
jecxz
inc
mov
paddusb
ret
hlt
push
add
jae
nop
sti
daa
add
push
clc
xchg
aaa
leave
xchg
adc
jne
sub
lret
jmp
ja
mov
repz
sub
andb
setle
sbb
or
es
push
fwait
and
add
pop
shlb
or
dec
add
out
pop
mov
xchg
adc
mov
adc
jae
testb
lcall
ja
imul
test
test
lods
sbb
push
pop
imul
sbb
cwtl
lea
and
jmp
and
mov
out
dec
or
jne
xchg
add
nop
or
mov
adc
xor
and
jmp
or
xchg
adc
adc
repnz
test
and
nop
mov
aaa
push
and
mov
or
pop
es
jae
das
int
sub
push
sbb
or
cwtl
or
or
push
rclb
mov
adc
cmp
xchg
mov
into
and
test
cs
mov
add
cmp
out
fisttps
push
xchg
add
orl
aas
add
sbb
inc
loope
mov
dec
sub
push
sub
aas
scas
jb
and
inc
imul
sub
imul
stos
hlt
jne
dec
xor
int3
imul
push
sub
jmp
cmpsb
or
dec
sbb
pop
cs
and
stos
mov
pop
int
das
mov
insl
call
add
outsl
and
lea
repz
mov
and
imul
push
in
lea
aam
push
in
popf
jns
lret
ljmp
xchg
sbb
popa
cmp
stos
into
push
cli
mov
and
jecxz
adc
loop
mov
lret
movsl
jnp
pop
inc
dec
mov
add
out
ret
loope
in
rorl
cmpsb
cmpsb
orl
xchg
jnp
shll
jp
ucomiss
leave
jnp
and
in
cmp
push
rcr
adc
jp
pop
lcall
dec
outsb
mov
sub
xchg
incb
xor
add
push
popa
dec
lock
cltd
out
sbb
enter
or
and
imul
sti
and
shlb
xor
xchg
les
les
sub
test
sbb
adc
and
adc
pop
and
xchg
or
addl
xchg
inc
inc
les
inc
xchg
jb
inc
lcall
xchg
jecxz
jge
mov
test
push
lea
mov
test
dec
aam
dec
xchg
test
outsb
sub
ret
mov
scas
xlat
gs
push
cwtl
xchg
push
xor
inc
cmp
ret
add
outsb
dec
test
push
or
je
sub
pop
inc
and
add
inc
mov
inc
inc
ret
mov
imul
fs
daa
xchg
or
add
mov
sub
or
xor
mov
push
mov
ljmp
mov
pop
add
and
in
pop
test
ja
push
jae
mov
fs
pop
addb
push
arpl
ljmp
pop
lret
xchg
lea
arpl
shll
popa
rorl
lret
fisttpll
mov
pop
xchg
push
test
and
mov
jp
push
or
cmp
lcall
mov
add
mov
or
lock
dec
pop
int
and
pop
dec
mov
sub
inc
pop
popa
push
mov
ljmp
xchg
seta
xchg
test
push
popa
ja
leave
cmp
inc
int
xor
jmp
test
pop
decb
inc
jnp
sub
and
mov
push
push
ficoml
xor
pushf
test
scas
xchg
roll
aam
cmp
and
imul
push
movsl
sub
sub
xchg
and
sbb
fs
cwtl
cmp
pop
jbe
mov
xchg
inc
and
mov
aaa
and
mov
or
popa
inc
add
or
and
loope
andb
inc
mov
sbb
es
xchg
add
sbbl
cmpsl
add
sub
xchg
add
aad
imul
es
xchg
mov
scas
xor
dec
xchg
imul
adc
push
add
xor
xor
movsl
aam
add
pmaddwd
jmp
adc
sti
cmp
movsl
add
add
ret
cmp
and
mov
pop
jns
sbb
and
popa
adc
test
add
fimuls
test
xchg
jmp
and
pushf
es
icebp
add
add
add
leave
jle
add
in
sbb
sti
xlat
mov
mov
pusha
js
inc
adcl
stos
mov
inc
inc
addl
push
xor
and
cld
add
xor
sbb
rclb
adc
sub
jae
or
loopne
imul
es
iret
jmp
cli
push
popf
xchg
inc
movsb
mov
mov
adc
test
pop
int3
ja
in
ja
pop
inc
jecxz
jnp
fcompl
or
cmpsb
xchg
mov
mov
add
pusha
repz
push
or
test
and
add
out
dec
daa
add
lods
rcrl
push
pop
inc
add
sbb
or
lea
test
clts
les
mov
xor
in
arpl
cltd
xor
xor
test
lds
test
lcall
or
out
inc
and
inc
adc
test
push
or
xor
xor
lret
dec
ljmp
and
movsb
lds
xchg
pusha
xchg
and
test
pop
inc
and
sahf
or
mov
cltd
xor
inc
cwtl
test
or
mov
xchg
xor
or
xor
adc
xor
inc
push
mov
or
xchg
test
sub
and
mov
sub
stos
and
add
orb
das
popa
pop
mov
adc
push
bound
aas
das
pop
xchg
or
hlt
sbb
or
cltd
cltd
in
xor
and
mov
test
dec
cwtl
add
xor
cmp
sbb
lret
leave
xchg
mov
xor
inc
xchg
test
pop
xor
inc
out
stos
mov
scas
adc
add
and
xchg
and
adc
in
adc
adc
add
add
adc
sbb
xchg
pusha
add
xchg
or
xchg
adc
adc
mov
add
cmp
xchg
xor
pop
enter
add
pushw
loop
mov
lods
shlb
and
jno
das
sar
add
es
and
clc
adc
repnz
popa
aad
add
in
nop
push
add
fstps
jmp
sub
in
mov
nopl
rcr
inc
mov
jle
push
add
imul
xchg
xor
sbb
add
push
dec
and
icebp
jge
cltd
pusha
sbb
fwait
jg
incl
cmp
test
xor
aad
adc
leave
mov
xor
lcall
dec
popf
cmc
jae
popa
push
imul
mov
lahf
jb
les
add
aad
xor
mov
out
cmp
jb
popf
sbb
movsl
lods
xor
in
push
mov
and
clc
push
sbb
mov
cmp
push
inc
dec
inc
or
imul
test
sti
jne
pop
and
dec
add
repz
inc
enter
jns
xchg
jecxz
cmp
adc
loop
xchg
jmp
mov
aad
mov
mov
sbb
dec
push
mov
std
and
rolb
sub
jbe
and
add
fcoms
mov
imul
mov
and
add
pop
xchg
sub
cli
and
cwtl
sbb
push
inc
sbb
aaa
imul
add
out
rcr
mov
out
mov
cmp
in
in
push
inc
add
lea
nop
leave
sbb
rcrl
xor
xor
push
insl
movsl
imul
and
push
jmp
sti
push
add
jge
aad
popa
add
xchg
test
scas
add
jl
dec
addr16
test
add
sub
dec
sub
icebp
popa
fcomps
jmp
mov
sbb
inc
add
push
and
dec
hlt
mov
sub
insl
add
xchg
ljmp
sub
xchg
add
fcompl
sbbb
les
aam
adc
mov
add
jno
add
push
dec
adc
popa
repnz
mov
add
cmpl
cmpsb
adc
xchg
pop
inc
add
and
dec
add
inc
xor
bound
orl
add
sbb
idivl
fmul
loope
inc
scas
dec
in
dec
outsl
insl
push
in
push
inc
cmpsb
push
mov
dec
inc
adc
inc
add
divl
insb
shll
pop
popa
enter
push
mov
dec
lret
or
inc
or
xor
scas
movsl
outsb
push
outsb
inc
or
iret
pushf
mov
dec
movsb
test
cmpsl
test
call
mov
fsub
icebp
mov
pop
loope
sub
inc
shlb
mov
sbb
out
mov
shrb
or
pop
and
or
sub
test
and
pushf
hlt
test
lahf
adc
loope
in
pushw
scas
sahf
rcrb
negb
daa
ljmp
lret
xchg
insl
loop
ljmp
cmp
sbb
cmp
jns
rclb
xchg
popf
dec
push
ficomps
cmpsl
ljmp
lret
dec
sub
test
enter
out
lret
jbe
stc
loop
jmp
dec
rorb
cli
xor
mov
cli
sarb
push
jae
jne
ja
jns
jnp
sbb
mov
setle
and
mov
xchg
mov
adc
xchg
mov
push
mov
xchg
mov
jp
mov
mov
mov
inc
dec
imul
enter
call
mov
lcall
shr
cli
push
add
icebp
enter
repz
xlat
push
sbb
inc
lret
nop
cli
adc
daa
fists
jle
in
sub
nop
push
repz
icebp
ret
cmpsl
cmp
sbb
movl
xor
jg
jg
aas
or
btcl
sahf
aas
jg
sbbb
sbb
loop
ret
cli
movsb
loop
ljmp
hlt
dec
hlt
lret
hlt
in
hlt
hlt
dec
hlt
hlt
mov
adc
call
pop
call
fucomp
and
pop
sub
jns
dec
fs
jne
ja
jns
jnp
jge
jg
jg
pop
inc
push
movsl
sahf
xchg
or
jno
xor
dec
and
test
ret
jo
je
js
gs
outsl
ja
jns
jnp
jge
mov
mov
aas
xchg
cmp
sub
fwait
dec
sahf
ret
insb
lret
mov
lcall
popf
cmp
fistpl
cmpsl
dec
adc
jno
out
jae
adc
push
stos
xchg
or
lahf
daa
mov
xor
daa
fcmove
mov
jo
pop
or
jmp
outsb
mov
cltd
mov
inc
mov
aam
arpl
imul
xor
jns
jnp
sbb
test
or
sub
dec
cmp
cmp
dec
sub
inc
icebp
add
push
repz
loop
shr
mulb
hlt
mov
jo
xor
xchg
push
adc
ficoml
cli
std
cli
jg
inc
jns
mov
jns
jns
pop
imul
inc
mov
pop
xor
mov
test
dec
dec
push
aam
xlat
call
and
in
jns
loop
in
movsl
cmp
cmp
cmp
dec
inc
cmovo
push
inc
mov
push
inc
push
inc
pop
inc
testl
inc
pop
inc
cmp
faddl
sarb
inc
or
pop
mov
mov
test
stos
hlt
dec
hlt
lods
rorl
dec
push
cli
icebp
cli
mov
je
push
cli
sbb
fidivrl
pop
popa
nop
daa
lds
jne
ja
jns
jnp
jge
lahf
jno
and
cmp
dec
cmp
lea
push
shlb
sarb
inc
addr16
adc
sbb
xor
push
rclb
sarb
sarb
ds
test
xchg
scas
movsb
push
aam
les
push
enter
mov
movsb
or
adc
push
hlt
pop
in
hlt
add
add
fs
std
cmp
pop
lea
adc
jb
push
pop
call
insb
lret
aad
mov
pop
ljmp
and
in
out
adc
push
int3
inc
push
lea
mov
mov
repnz
mov
popf
stos
push
insb
sahf
data16
jg
jl
jle
pusha
out
cs
cmc
inc
testb
sbb
mov
dec
jne
aaa
pusha
sbb
mov
dec
out
dec
mov
dec
enter
call
lcall
cmovno
adc
jne
jne
ja
jns
jnp
jge
pop
xchg
cmpsl
ficompl
dec
mov
mov
test
enter
out
push
sub
lock
xchg
cmp
jmp
movsb
call
mov
mov
sahf
lret
push
ret
cli
lods
loop
ljmp
cmp
jnp
fnstsw
inc
sub
jne
ja
sbb
addr16
popf
pop
push
mov
mov
repnz
push
nop
pop
sarb
rcrb
shll
aam
les
sub
push
hlt
jae
xlat
icebp
jo
mov
pop
push
add
jnp
sub
or
sub
scas
xchg
test
adc
movaps
decb
sub
orl
inc
adc
adc
xchg
sub
add
adc
xchg
call
push
call
lret
call
jno
adc
xchg
ljmp
shrb
xchg
in
and
mov
jge
filds
or
adc
xchg
rclb
rclb
mov
jecxz
les
inc
inc
mov
shlb
sbb
xchg
test
cmpsl
icebp
and
inc
in
test
or
lock
fildll
lea
add
dec
and
sub
sbb
pop
outsb
mov
je
aad
xchg
mov
sbb
fisubs
and
enter
inc
vmovlps
sub
or
stos
push
inc
insl
inc
lods
pop
popa
cwtl
push
jg
pop
add
adc
jle
and
adc
cmpsl
into
popf
iret
push
adc
jbe
cwtl
lahf
cmp
jmp
insl
xchg
sbb
out
popf
adc
dec
cmp
mov
inc
jae
jne
idiv
loop
push
jno
sub
jae
push
adc
lcall
mov
test
test
push
jp
test
test
popf
cmp
sbb
xor
dec
ret
loop
cwtl
loop
ljmp
outsl
jne
ja
mov
jno
adc
cmpsl
scas
mov
test
adc
test
call
push
adc
push
dec
jae
push
mov
adc
cmp
roll
or
jnp
push
les
inc
xchg
jno
fnstcw
pop
arpl
les
pop
pop
cld
lahf
roll
aam
jne
movhps
dec
std
arpl
ret
lret
jb
push
loop
ljmp
lret
and
cmp
enter
sbb
aam
or
je
loope
pop
lea
orb
sub
sub
popa
sbb
inc
fdivrs
jp
jne
dec
mov
push
inc
cwtl
and
lea
rcr
and
push
mov
or
cmp
pop
mov
adcl
sbb
push
fwait
sbb
pop
ret
mov
sub
sub
sbb
push
push
sbb
lcall
cmp
cmp
or
mul
mov
faddl
mov
loope
cmpsb
jb
shr
push
ret
pop
lret
shlb
loop
jecxz
test
add
repnz
cli
xor
adc
xchg
cli
adc
jp
in
xchg
popf
loopne
adc
push
adcb
push
loop
xchg
mov
pushf
daa
sbb
mov
call
xchg
or
mov
or
mov
or
mov
push
jnp
xchg
jg
pop
xchg
push
pop
addb
call
nop
lods
rorb
xor
lock
mov
xchg
mov
sbb
sbb
mov
call
loop
mov
push
push
or
cltd
mov
pop
jns
out
jae
jne
ja
jns
sbb
or
inc
sbb
mov
push
jmp
mov
rol
les
or
emms
jns
jnp
pop
xchg
cs
inc
push
inc
repz
xor
pop
push
shlb
rcrb
loop
popl
cmp
and
outsb
mov
loope
xchg
inc
jmp
shll
dec
dec
xchg
sti
sarb
sahf
imul
dec
daa
popa
inc
and
cmp
sub
xchg
cmpsl
and
lcall
aam
sub
sahf
sahf
xor
push
rorb
inc
call
notl
js
clc
nop
jns
stc
sarb
cli
sarb
sti
dec
popf
xchg
add
mov
imul
mov
inc
rcll
adc
test
jae
jne
out
add
dec
or
adc
cmp
sbb
push
xchg
roll
add
or
push
adc
pop
xchg
aas
sbb
inc
and
inc
test
push
cmp
pop
lea
pop
mov
dec
xchg
pop
lcall
pop
rcrb
dec
or
adc
test
enter
call
add
or
or
adc
fwait
hlt
sbb
inc
or
push
push
roll
jno
xchg
push
cmpsb
loope
nop
xchg
adc
xchg
push
add
push
ljmp
cli
cwtl
cli
sbb
cltd
cmp
inc
fwait
inc
pushf
inc
popf
inc
sahf
inc
lahf
inc
mov
add
test
test
loop
xor
mov
inc
mov
in
cld
nop
hlt
xchg
xchg
cwtl
jecxz
movsb
les
hlt
adc
lret
fsub
pop
xchg
cli
sbb
cmc
pop
cltd
std
sbb
lcall
pushf
or
dec
popf
loop
sahf
cli
pop
cli
lahf
cmp
mov
popl
mov
nop
add
test
add
rolb
ret
mov
fisttpll
cli
mov
or
mov
or
cli
mov
or
or
dec
mov
stos
dec
sub
test
dec
add
orl
lds
fsub
inc
xor
in
js
nop
inc
lea
add
clc
shll
test
cmpsb
popa
sahf
in
mov
sbb
cwtl
test
dec
mov
push
sub
fs
adcl
pop
sbb
sbb
mov
ret
xchg
ficoml
flds
jmp
dec
add
push
les
jne
std
cmp
addr16
adc
sti
lds
lahf
jbe
pop
stc
test
insl
popf
negb
adc
js
pop
aaa
sbb
push
test
cmc
ja
or
stc
jle
cli
pop
fwait
sbb
pop
addr16
add
pop
push
std
xor
adc
mov
jle
add
xlat
or
mov
inc
les
arpl
cmp
inc
imul
leave
push
sahf
addr16
dec
sub
fucomp
cltd
hlt
insl
mov
push
das
scas
lea
test
cli
scas
jb
out
mov
jno
fdivl
aas
and
pop
loope
and
dec
mov
dec
iret
test
mov
dec
dec
in
lock
pop
mov
xchg
dec
cmpsl
out
jecxz
out
push
sub
xor
xor
inc
jnp
mov
and
imul
sar
mov
pop
add
es
and
and
fs
mov
movsl
cs
push
mov
mov
cmc
mov
cmp
mov
push
jmp
icebp
das
test
dec
and
pop
ljmp
or
lods
or
in
cmpsb
mov
roll
int
xor
push
and
out
mov
loopne
stos
mov
test
scas
mov
dec
inc
jg
stos
cld
sub
and
cs
inc
and
xor
add
mov
add
dec
pop
sub
fimuls
aad
mulb
lret
stos
mov
push
data16
jmp
outsl
mov
mov
xchg
xchg
and
inc
int
cwtl
add
xor
lds
xchg
lcall
cmc
or
and
mov
mov
addr16
stc
xchg
in
fcomps
add
xor
addl
xchg
pop
movl
adcb
test
ljmp
mov
clc
stos
push
outsb
int
cmpsl
call
sbb
xchg
pop
sub
add
jne
mov
ds
rcl
shlb
sub
fwait
mov
xor
jecxz
leave
cmp
inc
or
mov
movsl
push
enter
add
and
enter
cmpsb
mov
and
cli
sbb
mov
sarl
divb
imul
dec
daa
sbb
cmpsl
testb
daa
or
adcl
push
cmp
adc
sti
mov
mov
jns
imul
and
cvtps2pi
xor
xchg
les
enter
inc
movl
stos
mov
xchg
bound
int
in
shll
push
mov
add
xor
mov
out
out
imul
movsb
test
das
mov
arpl
test
or
push
mov
leave
test
and
push
sbb
push
push
movsl
mov
out
fs
pop
cmp
lret
test
notl
or
or
dec
data16
jle
jno
push
fisttpl
ret
cmpsl
test
pop
push
in
jnp
repnz
imul
lahf
call
pop
inc
sub
les
in
jne
dec
bound
pop
sub
or
adc
enter
sbb
inc
loopne
ljmp
dec
push
imul
xchg
test
rol
dec
sub
imul
push
or
add
lahf
loop
mov
test
cmpsl
gs
mov
pop
pop
push
cmpsb
leave
das
sub
out
orl
rcrb
and
or
pop
in
mov
inc
jp
lret
fcmovnu
mov
insl
out
outsl
into
cmpsl
push
add
js
mov
xchg
cmp
mov
cmc
xchg
push
lea
imul
lds
dec
aas
sti
inc
int
or
cmp
sub
push
int3
outsb
jmp
lods
repnz
dec
outsl
test
imul
movb
lods
das
mov
arpl
test
leave
sub
orl
pop
mov
scas
aam
push
or
int
cmpsl
dec
leave
test
adc
mov
jmp
rcrb
pop
jne
push
cld
cs
mov
jnp
push
stos
cmp
stos
in
and
sahf
int
mov
out
pusha
mov
push
dec
add
lret
cmp
icebp
leave
and
sbb
mov
out
inc
sub
test
vpmacsdqh
adc
int
out
pop
mov
dec
and
push
scas
and
ret
inc
frstor
out
les
movsb
dec
inc
add
pop
xchg
lea
add
jno
mov
out
jecxz
popf
xor
xchg
add
xchg
aad
sarb
lret
push
fcomi
or
dec
iret
adc
sub
fs
in
cs
and
dec
jmp
cmpsl
loope
inc
push
aam
mov
in
lock
xchg
fdivrl
clc
stos
push
jno
stos
out
lret
enter
ds
loop
push
mov
adc
rorl
aad
fildl
jnp
insl
mov
dec
jecxz
fsubs
pop
jl
jo
push
and
mov
pop
movsl
push
dec
cmp
ret
roll
in
dec
push
test
clc
sub
out
or
adc
pushf
sti
mov
outsl
cld
pushl
inc
sub
push
or
pop
push
cmpsl
pop
data16
mov
inc
xor
daa
jbe
jae
mov
movsb
imul
xor
mov
iret
cmp
or
cwtl
lods
jmp
lret
in
cwtl
or
cwtl
lods
inc
mov
subb
andb
mov
icebp
fidivs
dec
pop
push
cld
stos
repz
int3
and
test
add
fwait
add
leave
loope
mov
loope
ret
and
fdivl
xchg
jmp
movsb
mov
mov
test
xchg
pop
sub
add
pushf
mov
or
push
xchg
mov
lret
xchg
cltd
dec
dec
xchg
test
test
xchg
pop
or
loop
js
cld
pop
or
xchg
test
mov
dec
dec
add
repz
jnp
pusha
xchg
adc
jge
push
cwtl
and
in
loopne
inc
mov
and
cmpsl
mov
xchg
outsb
leave
fs
push
cmp
cmp
lret
cmpsb
clc
add
in
stos
mov
jb
adc
movsb
xchg
into
scas
clc
mov
ret
mov
int
sbb
loop
or
je
xchg
lea
and
add
int
stos
adc
scas
cmp
add
fwait
cmpsb
dec
push
xchg
mov
sub
mov
push
inc
test
sub
or
xchg
inc
dec
imul
or
sub
movsb
push
insl
adc
movsb
lret
shrl
jo
mov
clc
cmp
lea
mov
xor
add
dec
inc
push
in
jns
mov
dec
jecxz
out
sub
pop
out
dec
lock
ret
xlat
pop
or
pusha
scas
ret
mov
sbb
mov
test
les
test
pusha
lret
scas
fmul
out
xor
xor
add
dec
or
xchg
sarl
lds
push
fs
test
jge
mov
bound
push
stos
xor
fs
add
inc
dec
subl
dec
fs
cmpsl
jb
movsl
adc
mov
lods
imul
arpl
jne
lods
pusha
aad
mov
jp
push
push
mov
xchg
aad
repz
hlt
ds
xchg
xor
xchg
test
imul
and
or
xchg
inc
out
adc
hlt
mov
sub
dec
push
mov
movsl
test
push
push
sbb
testl
daa
mov
pop
add
es
icebp
or
xchg
cmpsb
repnz
and
xchg
movsl
test
add
lods
inc
in
out
pop
popa
sub
pop
jge
nop
mov
push
iret
xlat
mov
rcrl
pop
add
cltd
adc
dec
mov
lods
cmpsb
cltd
imul
jb
fld
cwtl
lods
orl
ret
xchg
cmpsl
mov
and
call
pop
adc
repnz
pop
mov
aaa
outsb
lods
ret
sub
data16
sub
fsubr
xchg
shrl
int
push
scas
lahf
mov
das
sub
in
aas
and
mov
addr16
maskmovq
negl
or
mov
inc
jns
jmp
scas
scas
cmp
pop
inc
daa
ljmp
data16
sub
sub
and
mov
mov
push
sub
idivb
jne
push
das
mov
int
or
mov
pop
call
lret
mov
test
jmp
in
dec
scas
push
scas
inc
pop
or
test
xchg
dec
outsb
mov
xchg
jge
dec
sub
hlt
es
in
loopne
test
dec
shl
lea
shll
mov
adc
dec
dec
movsb
in
inc
fcomps
fadds
jg
cs
daa
mov
inc
add
rorl
pop
lcall
mov
cmpsl
pcmpeqw
xchg
movsl
bound
cwtl
mov
jl
ret
add
setp
ljmp
dec
fsubrl
frstor
std
and
push
adc
stos
shl
pop
fs
push
xchg
scas
call
imul
scas
pop
adc
mov
jge
cmpsl
mov
or
cmp
or
shrb
push
or
mov
push
lret
sbb
stos
dec
addr16
shrb
cmpsl
or
jne
push
push
lea
mov
jle
mov
mov
dec
cwtl
cli
daa
dec
inc
push
push
and
mov
mov
shlb
mov
jae
aad
adc
or
sbb
or
cwtl
test
lahf
pop
repnz
cmp
imul
ja
mov
subl
mov
scas
jmp
incb
test
and
inc
movsl
push
push
xchg
inc
cltd
cmp
pop
jl
fdivl
sub
ds
test
adc
mov
das
jbe
push
mov
aad
xor
push
cmp
jb
addr16
and
hlt
jbe
add
or
push
push
add
push
out
xchg
add
jbe
add
fs
inc
dec
sub
sti
mov
test
stos
data16
es
cmp
mov
xchg
cwtl
inc
int3
out
push
push
xor
jo
xor
pop
mov
mov
pop
imul
roll
out
testl
hlt
jbe
call
sub
cld
cli
mov
xor
dec
mov
sub
fcomps
out
mov
mov
andl
shll
jl
mov
in
call
repz
ljmp
es
mov
pop
push
addr16
pop
jp
sub
cmpsb
inc
out
aas
ret
inc
pop
out
and
pop
imul
test
pop
xchg
pop
pop
out
in
das
pop
jp
out
jge
mov
jge
sub
je
xchg
sti
cs
ss
loopne
popa
fldt
xlat
sbb
push
aad
dec
xchg
nop
mov
daa
lds
rorb
add
aam
out
sahf
sub
leave
xor
popl
lods
sub
test
sarl
cmp
xchg
out
mov
dec
dec
call
fcoms
push
add
in
mov
cmp
xor
sti
out
ja
push
ss
in
pop
mov
dec
mov
lahf
shll
fstpt
push
push
push
or
cmc
and
out
ffreep
jge
sub
and
icebp
fdiv
repnz
jo
or
push
and
xchg
minps
in
movsl
out
push
nop
jecxz
sub
pop
dec
mov
or
repz
fs
clc
js
faddl
fimull
shll
jbe
dec
addr16
test
push
leave
int
rcrb
leave
add
outsl
je
movsl
inc
daa
xchg
mov
push
out
mov
or
cmpsb
imul
lret
add
jle
call
xor
dec
jle
push
repz
cmpsl
pop
int
dec
out
dec
out
iret
imulb
dec
mov
push
jne
imul
les
push
ss
dec
dec
and
cmp
pushaw
lods
push
mov
aas
push
jmp
andb
and
das
xor
sub
cmp
jl
jo
pop
mov
mov
dec
lods
mov
out
in
xchg
in
sbbl
scas
jae
push
mov
data16
lret
sbb
cld
data16
movsl
in
lret
fwait
dec
inc
fucomip
mov
lahf
cmpsb
and
ja
push
gs
pop
movsl
cmp
jnp
dec
bound
mov
mov
xor
std
daa
jle
pop
cmp
mov
jmp
negl
adc
dec
lret
jle
aas
test
movsb
mov
pop
sub
mov
or
xchg
sub
rolb
dec
imul
movsl
out
test
or
adc
cmpsl
ret
sub
dec
popa
xor
shlb
push
mov
sar
add
imull
cltd
xor
rclb
jae
push
aad
cmp
inc
in
popf
cs
loop
ror
mov
stc
popf
jg
lret
mov
in
out
fisttps
xor
add
fistps
ljmp
cli
sbb
pop
xlat
jae
inc
pop
fists
aaa
inc
fstp
scas
mov
aad
mov
insb
sbb
jle
push
out
xchg
pop
sahf
dec
lahf
int
mov
mov
ds
pop
aad
mov
mov
ret
int3
scas
cld
cltd
sub
rorl
fildll
sub
data16
sub
sub
ljmp
lahf
aad
cmp
rclb
cmpsb
mov
shrb
ds
and
push
jnp
std
gs
mov
mov
cld
ss
aam
mov
sbb
sbb
mov
lret
push
dec
test
gs
adc
rep
aas
mov
push
fcomi
lods
or
jbe
xchg
add
insl
shlb
sub
les
movsl
insl
mov
or
rcr
mov
out
fbstp
or
mov
add
or
add
dec
xor
sbb
mov
add
dec
ljmp
mov
xor
shrb
add
push
jae
inc
dec
pop
shl
lahf
mov
mov
adc
call
xor
lret
mov
in
rolb
repz
push
sti
push
ret
dec
cmc
outsl
fildl
mov
insl
jnp
sub
ret
insb
aas
cs
cli
js
and
or
mov
or
cmpsl
mov
pop
jge
fisubrl
dec
xchg
int
rep
cmpsl
sub
pop
and
push
imul
dec
sbb
test
sarb
arpl
in
jmp
stos
xchg
mov
out
lods
xor
sbb
mov
dec
imul
rcr
fstpt
xchg
pop
xchg
lds
mov
in
push
repz
inc
mov
stos
inc
xchg
pop
insb
lret
cmp
pop
repz
mov
dec
mov
stos
push
fisubs
mov
inc
push
cmp
loope
cmpsl
lret
cmp
jnp
push
or
dec
dec
sbbb
cs
filds
push
dec
repz
jb
mov
or
dec
mov
inc
iret
lea
outsl
iret
outsb
shrl
int
xchg
lods
mov
inc
mov
stos
inc
push
xchg
add
cmp
mov
mov
dec
lahf
or
xchg
pusha
movsl
call
push
lret
dec
ljmp
jge
sub
lret
push
test
sub
imul
leave
ret
inc
insl
or
dec
pop
and
dec
outsl
xchg
sub
dec
test
daa
out
xchg
int
sbb
jmp
sub
mov
mov
sub
outsl
test
sub
sbb
lea
out
ret
dec
or
out
dec
addr16
dec
push
mov
xchg
xchg
jmp
jecxz
dec
sub
dec
out
or
and
test
fcom
test
mov
adc
inc
rcrb
ja
das
stos
insl
mov
sub
std
sbb
stos
daa
sub
fists
int
mov
loope
jmp
out
lret
stos
sub
imul
sbb
dec
test
cmpsl
imul
sub
cmp
data16
jne
jnp
jo
or
outsb
add
push
or
scas
stos
aaa
out
or
pusha
jno
daa
in
popa
add
sub
sub
jmp
scas
adc
xor
ljmp
or
dec
adc
iret
pop
loope
adc
leave
test
outsb
daa
outsl
mov
int
mov
xor
stos
in
lea
or
or
push
jmp
in
daa
dec
mov
stos
and
sub
push
dec
std
or
scas
or
outsl
sub
stos
cmovno
xchg
push
pop
les
lret
sbb
mov
dec
pop
cmp
loope
sbb
push
xchg
inc
lods
mov
mov
jle
sbb
mov
cmpsl
adc
xor
cmp
lahf
out
pusha
or
int
stos
into
lea
dec
sbb
test
in
add
lods
dec
lea
sub
pop
mov
loopne
stos
bswap
into
cmp
push
add
insl
lret
xchg
sub
pop
ljmp
das
dec
jmp
out
or
xor
leave
jmp
or
int
orl
push
or
daa
sub
pusha
push
add
mov
imul
lods
pushf
or
fwait
or
js
hlt
pop
dec
imul
or
or
int
xor
sub
sbb
dec
loopne
movsb
imul
sub
dec
leave
jmp
or
dec
inc
inc
out
imul
daa
dec
sub
stos
and
push
stos
out
dec
and
or
into
xchg
or
imul
inc
out
insl
or
iret
jge
pop
jmp
ljmp
adc
push
imul
rcll
dec
in
xor
jae
outsb
and
add
sub
dec
stc
stos
push
inc
das
outsb
xchg
repz
pop
sub
dec
out
or
sub
loope
sub
sbb
pop
cmpsl
mov
pop
or
push
outsb
out
addb
lret
mov
mov
mov
or
rorb
dec
dec
into
leave
scas
or
lret
xor
out
sub
mov
add
hlt
call
mov
or
test
xor
stos
lret
jne
push
sub
jbe
pop
fimull
scas
out
mov
stos
or
sub
sub
leave
dec
xchg
test
cltd
dec
iret
orl
adc
popl
iret
pop
inc
out
push
js
inc
push
daa
stos
or
or
sub
test
sub
stos
out
dec
pop
cmp
arpl
or
and
out
or
rclb
imul
iret
out
lret
clc
loope
int
fadd
int
call
adc
aad
test
pop
add
addr16
mov
mov
dec
sub
ljmp
inc
jecxz
stos
insl
mov
sub
loope
sub
pop
pop
or
pop
jno
repz
dec
cmp
loop
mov
mov
or
xchg
pop
xchg
or
sbb
scas
lret
jmp
rcrb
mov
cmpsl
sbb
jmp
out
movl
push
sub
mov
mov
xchg
adc
push
or
xor
out
sti
sbb
add
mov
xchg
sub
or
clc
movsb
sub
iret
pop
stos
addr16
sub
add
or
mov
out
mov
test
xor
fadds
push
mov
movsb
mov
mov
add
stos
dec
dec
iret
or
pop
cmp
scas
adc
in
mov
loope
or
dec
ljmp
jl
pop
js
cmp
inc
outsl
inc
ud2
lret
data16
sub
test
adc
test
dec
in
aam
fidivrs
popa
outsb
dec
mov
movsb
xchg
dec
push
jmp
and
or
pop
dec
pop
push
aad
dec
hlt
out
int
les
dec
and
fcomps
test
rcrl
inc
dec
jmp
push
mov
cli
dec
cld
addr16
insl
movaps
xchg
test
repnz
lret
lods
push
lea
push
je
or
sub
dec
dec
sub
add
cmc
pop
xchg
xor
or
sub
jmp
outsl
arpl
sub
inc
or
loopne
push
adc
clc
xchg
out
nop
adc
dec
stos
lret
inc
popf
dec
das
sub
mov
subb
shrb
stos
outsb
sub
inc
push
in
int
or
mov
das
or
cltd
imul
lahf
insl
mov
push
dec
int
gs
lods
mov
inc
dec
out
in
shrl
sub
iret
sub
ljmp
dec
imul
sub
adc
add
or
inc
xor
out
xchg
or
and
adc
test
sub
dec
imul
add
xchg
int
loope
sub
push
xchg
or
scas
lods
stos
and
dec
outsl
inc
add
cmpsl
mov
cmp
data16
mov
push
push
or
jmp
dec
out
sbb
push
mov
cmpsl
shrb
sub
or
es
jmp
xlat
test
pusha
addr16
dec
sbb
dec
fisttpll
int
cmpsl
imul
or
rolb
mov
or
and
or
lret
call
inc
xchg
pop
out
push
or
sub
shrb
xchg
leave
vpshad
pop
imul
pop
or
test
dec
or
daa
into
lahf
push
pop
dec
bound
inc
mull
jns
mov
rcll
inc
ds
sbb
into
dec
adc
mov
daa
jno
sub
pop
sub
scas
or
jle
loop
call
scas
or
sub
imul
xor
xor
dec
fsubrl
and
lods
sub
iret
aas
mov
inc
sub
ror
outsb
push
sub
sbb
dec
into
sub
sub
dec
into
pop
jg
out
or
ret
push
add
mov
xor
mov
imul
ljmp
out
sub
jae
pushf
test
out
or
push
mov
cwtl
loop
xor
insl
scas
adc
jg
popw
lret
ret
daa
sub
or
out
sub
mov
sub
pop
outsb
lods
dec
mov
adc
xchg
fwait
or
inc
scas
mov
mov
lea
mov
add
into
sub
mov
pop
ljmp
xchg
mov
cmpsl
test
jg
imul
outsl
jbe
mov
or
bound
sub
and
push
imul
into
sub
jmp
push
scas
sub
imul
sub
or
sub
inc
sub
dec
cli
mov
adc
sub
xor
mov
clc
adcl
pop
bound
add
push
lods
and
pop
scas
rcr
xor
cmp
dec
out
punpckhwd
jecxz
lret
les
ds
mov
mov
xchg
lret
sub
sub
loope
mov
xchg
or
daa
sbb
lret
in
adc
cmpsl
or
xchg
jnp
pushw
loop
jns
lods
xchg
mov
dec
mov
mov
cmpsb
inc
stc
dec
lea
inc
cmp
jns
cmp
das
adc
lods
cmpsl
outsb
sub
cmovns
mov
or
outsl
movsl
xchg
xchg
mov
pop
pop
pop
mov
mov
and
inc
cmovno
dec
pop
xchg
adc
adc
std
out
dec
ljmp
test
movsl
fists
pop
push
mov
mov
sub
cmp
or
loop
dec
xchg
mov
lea
adc
adc
or
dec
push
inc
push
imul
imul
outsb
out
stc
fldt
cs
mov
or
pushf
mov
mov
out
mov
or
outsl
cmpsl
push
pop
in
mov
popa
scas
mov
adc
jp
cmc
push
out
imul
inc
dec
test
dec
out
inc
shl
fs
or
or
adc
aaa
mov
or
sub
add
sbb
ret
sub
adc
pop
pop
into
mov
add
or
les
fidivrs
mov
xchg
adc
push
lcall
push
mov
xchg
xchg
inc
enter
sub
jmp
frstor
dec
xor
daa
mov
lret
pop
out
or
mov
addr16
pop
mov
push
ret
lret
stc
mov
scas
es
popa
mov
or
or
movsb
leave
into
movsb
out
in
cmpsl
or
dec
mov
arpl
loope
scas
int
push
rorl
les
mov
imul
mov
xchg
push
test
mov
inc
das
into
out
push
and
out
repnz
sub
imul
dec
sbb
pop
push
pop
imul
mov
lea
pop
dec
cmpsl
mov
mov
sbb
or
push
or
pop
xchg
xor
das
ljmp
jmp
mov
cmp
inc
clc
ljmp
sub
mov
std
mov
dec
jns
dec
pop
dec
jns
loop
imul
lret
lea
scas
cmpsb
lret
iret
or
add
push
sub
cmp
imul
in
ljmp
int
or
div
cmpsl
out
lds
dec
ret
dec
sub
out
xor
arpl
les
js
fimull
std
pushf
pop
jmp
test
fcoms
mov
adc
fimuls
lret
mov
jae
push
out
dec
sub
wbinvd
int
sub
xor
dec
pop
pop
stos
pop
insl
das
xor
ljmp
mov
scas
into
bnd
mov
or
dec
loop
mov
pop
dec
pop
xlat
ret
lea
cld
xchg
xor
out
stc
test
cmp
mov
jne
cmp
or
xchg
out
xor
das
iret
or
movsl
in
lods
fadd
lret
in
sub
pop
sti
out
leave
sub
adc
sub
adc
xchg
pop
or
dec
cs
inc
mov
push
mov
jmp
imul
test
mov
jbe
pop
pop
stos
adc
cs
xchg
push
xor
in
and
cs
dec
xor
sbb
lods
lret
test
enter
mov
sub
into
jecxz
scas
cltd
cmp
sub
push
mov
lret
loop
test
or
or
int
adc
push
push
cmp
inc
push
insl
dec
add
jmp
push
mov
daa
xor
out
sti
cmp
scas
and
movsb
cmpsw
scas
mov
into
xor
xchg
xchg
lea
imul
push
shlb
dec
mov
ds
jb
sbb
mul
mov
inc
adc
and
ljmp
pop
mov
inc
lods
xchg
out
add
imul
into
imul
sub
mov
mov
imul
dec
out
cmpsl
lret
push
aas
test
rolb
dec
xor
popa
sub
out
push
pop
lret
fadds
imul
int
pop
ret
jmp
icebp
or
push
fwait
enter
lea
mov
adc
or
push
in
sbb
adc
dec
dec
out
and
ret
inc
dec
cmp
pop
mov
push
dec
imul
dec
test
addr16
std
mov
dec
ret
in
dec
daa
in
repz
or
or
xchg
out
ljmp
pop
sub
push
imul
inc
lods
dec
mulb
add
mov
scas
scas
into
test
frstor
jne
stos
sub
or
cmp
xor
mov
insl
push
mov
sahf
push
lahf
jns
incl
out
loope
lods
scas
adc
out
push
stos
repnz
arpl
sbb
mov
scas
outsl
sub
or
movsb
in
pop
lret
iret
dec
nop
mov
out
xchg
imul
ljmp
pusha
dec
stos
jo
mov
repnz
or
sub
test
popa
mov
stos
outsb
sti
out
insb
loop
cmc
in
scas
inc
and
leave
dec
pop
lods
inc
add
into
jg
dec
xchg
inc
cmpsl
or
dec
movb
in
lea
ja
outsb
xchg
roll
jo
dec
arpl
addr16
dec
jge
mov
sub
and
dec
pop
pop
lea
xchg
movsb
mov
leave
jmpw
xchg
inc
or
loope
cs
fdivs
testl
sub
pcmpgtd
adc
mov
lods
out
xchg
cli
push
or
or
iret
or
dec
int
leave
push
lea
sub
shrb
das
ret
out
xchg
and
dec
ret
dec
ret
das
mulps
sub
and
and
sub
push
out
int3
iret
popa
out
or
mov
dec
adc
adc
mov
sub
adc
aas
scas
ljmp
push
arpl
jecxz
les
shrl
jle
mov
out
out
scas
jns
dec
sub
jbe
dec
dec
pop
xor
mov
dec
insl
mov
cs
lds
xlat
out
popf
inc
pop
iret
pop
sub
dec
int
movl
mov
inc
repnz
call
iret
sub
scas
push
test
pop
sbb
mov
xor
mov
out
pop
push
mov
pop
int3
addl
pop
adc
outsl
sub
lret
bound
or
adc
or
mov
inc
mov
lea
or
sub
pop
ret
adc
xor
adc
add
push
pop
lahf
pop
add
cs
jmp
je
adc
mov
int3
test
lret
lret
test
mov
xchg
lods
mov
dec
ljmp
stos
add
jmp
outsl
mov
sub
dec
cmpsl
mov
push
dec
dec
xor
scas
scas
inc
sub
iret
lahf
sub
lea
and
push
in
or
pushf
ret
ds
inc
stos
sbb
sub
adc
or
adc
stos
out
out
leave
pop
or
push
enter
mov
ljmp
in
dec
dec
lea
insl
leave
mov
mov
mov
das
or
add
scas
dec
sub
pop
sub
cli
test
mov
xor
out
mov
stos
pop
shrb
out
pop
mov
or
mov
and
jbe
ret
enter
or
fwait
xchg
sbb
ljmp
dec
jmp
daa
cmpsb
or
mov
in
popa
adc
xchg
sub
lret
and
ret
dec
sub
or
inc
dec
fists
repz
int
out
cs
pusha
daa
jno
push
test
loope
dec
sub
icebp
loopne
int
into
inc
outsl
out
jmp
inc
sub
pop
dec
stos
push
rcll
mov
adc
outsl
das
out
or
lcall
rdtsc
imul
nop
pop
jmp
in
and
or
pop
cs
popa
iret
test
add
insl
sub
into
out
push
addb
jg
mov
or
jbe
dec
lret
pop
mov
mov
bound
sub
mov
outsl
imul
lds
jmp
inc
imul
scas
cs
dec
mov
insl
cld
idivb
in
nopl
outsb
adc
lea
xlat
out
sub
sub
cltd
stos
in
xchg
pop
adc
or
pop
cwtl
cmp
mov
or
std
or
leave
daa
push
in
lret
cltd
lahf
ret
push
inc
or
cwtl
out
pop
dec
cmp
lea
test
adc
cmpsl
or
dec
pop
push
lret
dec
mov
or
push
xchg
js
outsl
push
popa
cs
out
stos
lret
scas
mov
popa
outsl
into
adc
fistl
lret
dec
sub
mov
sti
iret
or
or
adc
scas
stos
ljmp
dec
imul
mov
mov
or
pop
out
lret
stc
lods
test
enter
loope
mov
or
or
lods
dec
jmp
mov
mov
out
mov
cmp
std
pusha
sub
loope
daa
paddw
mov
push
or
or
test
sub
mov
inc
daa
outsl
scas
or
in
sub
sub
icebp
test
mov
xor
sub
pop
adc
sub
xor
xchg
popf
stos
push
xchg
pop
iret
xor
imul
outsl
pop
pop
sub
lahf
pop
mov
or
mov
mov
lret
cmp
mov
or
arpl
adc
addr16
push
xor
loope
stos
sub
int
imul
outsb
sub
dec
ljmp
adc
leave
pop
popa
lret
scas
xchg
out
test
push
xchg
or
push
mov
inc
lea
inc
add
scas
cmp
pop
push
mov
ljmp
and
adc
lret
jno
xchg
outsb
leave
mov
jmp
mov
sub
pop
int
or
daa
das
sbb
add
xor
cs
lret
stc
mov
stos
sub
aad
and
dec
push
dec
ret
loop
adc
dec
mov
xchg
mov
jmp
das
adc
dec
mov
lea
std
adc
cwtl
xchg
popa
or
int3
jecxz
stos
adc
insb
sbb
dec
in
sbb
cmp
and
xor
cmpsl
push
sub
push
dec
dec
add
loope
out
cmp
xchg
rclb
movsl
out
imul
int
inc
xor
scas
das
sub
jmp
fldenv
jns
sub
imul
dec
jl
push
or
dec
dec
daa
stc
insl
xor
or
cmovs
sub
stos
outsl
dec
mov
enter
dec
bound
icebp
jmp
out
and
shrl
dec
cmpsl
insl
jle
inc
jle
addr16
repnz
shrl
dec
mov
jle
movsl
inc
sub
outsl
or
fwait
xchg
inc
out
bnd
scas
and
sub
cmpsl
ljmp
repnz
inc
ljmp
out
lods
int
xchg
lea
test
ret
add
imul
or
cs
out
into
int
inc
sub
or
cmovae
arpl
out
test
dec
sub
mov
outsl
push
jnp
pushf
inc
leave
int
dec
mov
and
lret
loopne
in
mov
fcmovb
adc
out
or
sub
out
mov
lcall
or
lds
jo
cmp
in
or
shrb
sub
and
dec
lret
dec
add
insl
jg
jno
out
std
icebp
sub
out
leave
pop
sub
sbb
scas
es
push
xchg
or
int
addr16
lahf
lret
mov
ljmp
or
mov
outsl
imul
scas
ret
add
iret
adc
or
cs
scas
or
add
stc
sub
push
or
mov
pop
hlt
adc
adc
sub
dec
setge
or
rep
dec
test
dec
inc
test
icebp
sbb
cmc
lret
jae
imul
in
add
adc
or
push
aad
dec
repz
inc
je
ret
fsubrl
out
dec
push
cmpsl
lret
xor
iret
mov
xor
push
es
scas
das
pop
rcll
mov
test
pop
data16
mov
movsb
add
sub
test
push
popw
data16
pop
inc
push
dec
xor
adc
ljmp
mov
jns
push
ret
mov
add
dec
sub
xchg
push
das
dec
out
lods
mov
das
daa
add
fldt
and
lret
scas
into
imul
lods
outsl
outsl
mov
lods
push
repnz
or
bound
push
scas
pop
inc
cs
pop
in
sti
outsl
and
inc
testb
xchg
push
iret
imul
sub
mov
mov
push
shl
push
fisubrs
dec
lea
sub
out
add
mov
xchg
mov
xchg
movsb
leave
stos
out
in
add
mov
lea
int
das
aas
inc
jmp
push
scas
aas
mov
add
xor
dec
jmp
dec
add
out
pop
lret
jp
adc
mov
scas
dec
or
xor
imul
cmp
dec
ror
outsb
into
push
outsb
sub
loope
mov
push
out
out
cmp
mov
jmp
mov
in
frstor
aas
inc
add
scas
xor
test
or
pop
push
push
int
adc
xchg
pop
mov
sub
xor
lea
ljmp
pop
cwtl
adc
dec
or
aad
sub
imul
cmpsb
inc
scas
and
stos
xor
int
daa
adc
add
lret
or
leave
scas
data16
pop
dec
shl
popa
and
int
inc
ljmp
mov
sarb
daa
mov
dec
ljmp
or
fistps
sbb
lea
icebp
mov
out
jl
mov
ret
daa
or
sub
push
rorb
int
fldt
sbb
imul
dec
into
paddsw
push
cmpsl
stos
dec
pop
jecxz
cltd
sbb
aaa
mov
push
rolb
in
aaa
cmpsl
push
mov
out
lods
pop
xchg
or
pop
subb
pop
or
lret
inc
mov
jp
stos
push
mov
adc
out
popf
mov
or
jp
not
adc
sbb
repnz
in
or
mov
and
pop
pop
xlat
dec
and
arpl
dec
dec
dec
sbb
out
sub
mov
pop
les
cmp
repz
sub
or
inc
xor
in
push
punpckhwd
mov
and
sub
stos
adc
fisttpll
lods
imul
pop
lea
inc
add
dec
mov
push
inc
rclb
mov
js
movsb
out
inc
adc
lret
lsl
ret
sub
loope
sub
pop
mov
dec
dec
test
or
out
test
out
adc
mov
cmp
xor
enter
lea
mov
daa
out
or
xchg
int
dec
pusha
rcrb
inc
dec
xor
dec
and
fiadds
jmp
pushl
out
scas
dec
imul
data16
jmp
xchg
ret
sub
adc
add
cmp
inc
pop
out
ljmp
sbb
mov
fwait
popa
testb
jecxz
sub
and
sub
inc
sbb
icebp
subl
lret
adc
mov
testl
out
int
ljmp
mov
mov
lds
loop
inc
imul
int
push
or
xchg
mov
dec
cs
or
fildl
fisubrl
adc
daa
adc
cmc
sub
xchg
jge
lds
mov
sub
sbb
xchg
pop
into
sbb
leave
sub
lret
add
iret
mov
and
out
xchg
imul
stos
imul
fistps
xor
ds
fldt
shrl
mov
cmpsb
or
mov
inc
inc
lods
loop
test
insl
andl
lds
cmpsb
and
movsl
cwtl
subb
xchg
sub
sub
xchg
push
sub
cs
or
inc
adc
das
xor
dec
or
daa
pop
ror
xchg
int
bound
cs
enter
and
arpl
hlt
dec
loope
mov
jmp
push
jmp
dec
add
xchg
les
stos
push
xchg
scas
data16
repnz
add
sub
push
dec
mov
mov
std
xor
leave
lret
dec
dec
ret
xchg
mov
rcl
sbbb
addr16
inc
loopne
jne
sbb
pop
push
cmp
stos
lret
fiaddl
or
push
icebp
sub
sub
or
dec
cmp
dec
or
xchg
cmp
sub
fnstsw
stos
pop
xchg
push
pusha
movhps
dec
dec
or
insl
lretw
out
out
outsb
insb
lea
and
cs
pshufw
daa
adc
and
push
sub
jmp
dec
leave
iret
adc
imul
arpl
jle
sbb
pop
dec
push
stc
out
sub
xchg
data16
dec
outsb
mov
subb
popa
leave
lods
cwtl
add
jecxz
dec
les
dec
into
cmp
or
mov
mov
xchg
enter
dec
xchg
xchg
dec
mov
sub
imul
insl
bound
add
in
cmp
dec
ret
into
cmp
iret
in
add
or
adc
lea
and
icebp
push
outsl
das
dec
dec
push
pop
adc
sbb
or
scas
sbb
daa
cli
add
dec
dec
or
and
into
daa
xor
push
daa
lods
fnstsw
xchg
icebp
mov
out
xor
sub
out
add
mov
daa
fucomp
aad
dec
xor
or
adc
test
add
imul
dec
sub
mov
xor
scas
sub
lahf
lea
nop
addl
scas
movsl
stos
mov
cmp
outsb
jg
or
fldcw
mov
mov
jb
inc
pop
rorl
mov
test
mov
scas
adc
outsb
in
cli
into
lret
jle
sbb
fisttpll
scas
out
mov
leave
dec
pop
push
push
cvtps2pi
daa
jecxz
xchg
sbb
inc
out
inc
jmp
dec
shll
dec
cmp
cli
dec
and
push
adc
test
sub
out
sbb
or
dec
popa
or
add
movsb
cmpsl
jmp
bound
ss
push
adc
jmp
push
scas
leave
test
data16
push
jbe
or
or
mov
mov
inc
adc
movsb
mov
cli
test
jmp
dec
pop
nop
les
lea
push
push
arpl
mov
xor
cmp
lret
mov
in
or
cmp
dec
sub
or
dec
xchg
scas
adc
das
mov
shrl
or
rorl
mov
jmp
lahf
leave
sbb
sub
mov
fcom
inc
lods
ljmp
adc
jecxz
dec
or
fiaddl
adc
inc
scas
cs
cltd
mov
lock
popw
adc
pop
out
adc
lods
jns
ret
outsb
dec
shll
xor
sbbb
int3
or
leave
adc
jno
xchg
out
adc
addr16
sub
push
out
push
cs
aas
mov
add
test
dec
dec
repnz
jno
sub
dec
xchg
inc
loop
jnp
dec
les
hlt
sub
adc
mov
mov
leave
pop
and
sub
sbb
int
insb
adc
fcmovnb
ret
int
test
icebp
xchg
shll
adc
mov
sub
stos
call
sub
les
mov
movntq
cmpsl
xor
lods
sub
cmp
add
sub
out
das
ljmp
addr16
cmp
mov
mov
dec
push
or
clts
out
outsl
mov
cmp
dec
in
packsswb
cltd
test
push
dec
lret
sub
sbb
movb
jecxz
inc
inc
dec
or
into
jns
or
in
or
xchg
pop
dec
or
test
inc
pop
push
rorb
fcompl
ret
dec
push
mov
or
adcl
xor
ljmp
in
dec
push
lds
dec
bound
iret
das
and
adc
push
mov
stos
inc
sub
outsl
inc
sub
cmpl
adc
jno,pn
data16
mov
popa
push
lods
jmp
jmp
xor
imul
outsb
dec
test
int
dec
xor
sub
pop
mov
pop
in
outsb
dec
add
das
lret
adc
les
inc
mov
lret
sub
mov
cli
inc
mov
scas
and
ret
lahf
sub
push
rol
punpckhwd
stos
popf
add
aad
dec
ds
sti
in
ljmp
inc
outsl
out
insl
or
or
adc
roll
aaa
xchg
std
stc
dec
jge
and
inc
inc
ljmp
js
pop
jmp
outsl
in
mov
add
mov
repnz
add
fisubrl
daa
jae
sub
dec
outsb
mov
aad
dec
test
push
adc
xchg
adc
loop
dec
or
sbb
icebp
sub
insl
in
loopne
cld
inc
jmp
cmp
data16
or
ret
dec
cld
call
pop
movsb
ja
les
test
pop
or
in
leave
jns
pop
mov
push
iret
sub
dec
inc
mov
sbb
popl
mov
subl
or
xchg
mov
xor
mov
mov
sub
mov
mov
out
daa
cltd
outsb
push
sub
pop
out
loopne
xchg
out
and
and
xor
loope
mov
add
imul
clc
daa
sub
mov
dec
leave
lcall
push
sbb
adc
cs
xchg
stos
paddsw
dec
mov
data16
mov
out
dec
cmpsl
out
into
test
pop
pop
sbb
cltd
ret
xor
insl
mov
push
pop
adc
dec
sub
lock
shrb
ljmp
in
adc
addr16
push
sub
sub
mov
jb
outsl
ret
push
pop
mov
dec
inc
or
sbb
sub
movsl
roll
add
add
pop
mov
xchg
rol
sub
mov
leave
dec
loope
xchg
xor
fnstcw
jecxz
daa
pop
les
xor
lret
shlb
push
xchg
sub
out
push
mov
orb
test
adc
push
cmpl
push
cmpsl
sub
dec
mov
adc
insl
daa
jg
lods
out
movsb
dec
or
xchg
outsl
mov
jo
sbb
pop
xchg
orb
leave
push
popf
jns
xchg
jnp
adc
es
mov
or
mov
outsb
add
jg
and
stos
cmpsl
lods
insl
add
or
int
test
test
dec
xchg
mov
push
loop
out
xchg
popl
les
xor
test
cmpsl
mov
das
scas
lea
or
scas
dec
sub
cmc
mov
mov
mov
imul
sub
sbb
ljmp
movsb
jne
inc
out
sub
xchg
pop
fldt
notl
stc
xor
or
aas
sub
dec
sbb
aam
mov
cmovae
movsb
insb
sub
jl
ljmp
push
xchg
cld
shlb
loopne
out
push
fwait
les
pop
adc
xchg
xor
dec
push
mov
lahf
lds
in
adc
scas
jmp
outsl
in
push
xor
movl
out
adc
in
out
mov
imul
push
jmp
fmull
bound
xor
add
dec
or
andb
out
into
push
lret
pop
shl
lods
out
mov
dec
pop
mov
mov
ds
dec
and
cld
push
dec
jmp
or
xchg
ljmp
scas
mov
pop
subl
lret
in
test
pop
jae
xchg
inc
lret
or
fisttpll
icebp
push
out
pusha
in
dec
xor
iret
into
dec
dec
jge
sti
inc
stos
das
sbb
lahf
subl
insl
shll
stos
push
push
sub
or
pop
dec
jae
dec
or
xchg
sbb
shrb
daa
out
imul
jp
jno
loopne
fwait
sub
stos
pop
arpl
imul
inc
ret
out
loop
or
adc
mov
jno
jmp
movlps
push
sbb
lods
or
into
adc
jmp
in
daa
cmp
sbb
sub
dec
and
sub
out
scas
mov
test
outsb
shr
mov
dec
or
cmp
clc
cmp
mov
test
push
daa
jl
mov
cmpsl
xor
dec
jae
fcoml
dec
and
lret
scas
mov
dec
push
xchg
outsb
cld
jno
xchg
mov
mov
dec
les
push
lea
sti
fisttpll
adc
dec
int
jp
add
mov
mov
fwait
lea
nop
or
xor
and
dec
aam
jl
lea
adc
sub
sbb
or
mov
daa
icebp
mov
and
out
sbb
in
push
mov
ret
into
loopw
dec
xchg
xor
mov
xor
add
imul
push
pop
adc
xor
xchg
dec
scas
adc
ljmp
dec
iret
inc
push
pushf
dec
lods
sub
in
or
dec
sub
lods
ljmp
iret
pop
add
xchg
daa
adc
mov
or
sub
pusha
sbb
sub
dec
inc
push
or
sub
pop
stos
mov
imul
divb
iret
sub
ljmp
jo
scas
inc
movsl
stos
dec
and
ljmp
sub
iret
cmpsl
into
fisttps
pushf
inc
out
arpl
out
jmp
lds
push
daa
sub
mov
in
mov
mov
xor
lods
icebp
arpl
imul
into
lods
arpl
push
cmp
loopne
dec
mov
cs
mov
iret
stc
push
stos
das
cltd
and
sbb
stos
push
out
stc
loop
mov
or
lret
imul
loopne
dec
mov
bound
out
cmp
jmp
xchg
lret
addr16
sub
loop
outsb
in
dec
mov
sub
or
push
or
es
xchg
mov
dec
out
mov
outsb
xor
daa
xor
adc
pusha
out
xor
push
sbb
sub
jp
int
xor
lods
sub
cltd
mov
or
adc
lret
test
mov
cs
dec
outsl
lea
jmp
or
jmp
out
add
dec
in
pop
mov
add
out
sub
popa
outsl
scas
cs
dec
mov
pop
dec
andl
or
inc
scas
lods
pop
pop
sbb
jmp
push
lods
fisubs
data16
into
adc
or
dec
pop
lret
ret
sbb
or
xor
dec
push
leave
out
fcoms
mov
inc
dec
stos
into
das
sub
inc
leave
out
test
dec
pop
les
jmp
in
loope
scas
int
pop
xchg
adc
stc
mov
adc
dec
imul
push
scas
sub
mov
and
mov
lock
xchg
cmpsl
lea
mov
cs
jno
scas
cmpsl
xchg
cltd
insb
ret
out
sub
and
xor
stos
mov
stc
dec
or
mov
movsl
fsts
inc
fwait
xchg
adc
lret
bound
mov
loop
mov
push
imul
dec
outsl
jmp
push
lret
mov
sub
xor
cli
add
nop
mov
mov
in
hlt
outsl
test
fst
and
pop
mov
lahf
mov
inc
push
out
dec
xchg
loop
test
xor
pop
lods
cmp
fistpll
ret
mov
popf
sub
lods
rolb
stos
inc
mov
push
outsl
leave
dec
xor
dec
or
movups
jg
lea
dec
cmpsb
stos
scas
or
jno
xchg
sub
test
pushf
xor
scas
jmp
daa
xor
fdivrl
and
lods
dec
xchg
insl
pop
jecxz
aas
das
aam
or
sub
leave
sarb
jmp
sbb
sub
mov
mov
out
or
or
outsb
push
sbb
fiaddl
push
sub
imul
inc
cmc
ret
enter
das
xchg
sub
out
dec
mov
nop
jmp
stos
aad
ret
lea
dec
or
or
mov
data16
or
outsb
cs
out
daa
test
mov
movsb
test
pop
sub
cs
pop
lea
xchg
push
fists
insl
xchg
mov
sbb
and
arpl
push
dec
or
out
leave
aas
sti
adc
dec
mov
push
addr16
cmp
or
cmp
lret
stos
adc
pusha
rdpkru
lods
xor
lret
jmp
test
dec
sbb
or
xchg
and
mov
loope
sub
out
pop
or
pop
roll
stos
mov
sub
int
inc
jmp
paddusw
pop
pop
push
sub
add
into
stos
ret
out
xor
mov
outsl
test
daa
test
or
sub
sub
lret
mov
push
push
or
cmpxchg
daa
ljmp
fimuls
dec
adc
add
add
push
mov
fidivl
xchg
mov
mov
test
mov
inc
stos
lods
sbbb
test
mov
and
addb
lret
lahf
outsl
inc
fimull
mov
jmp
inc
or
loope
cmpsl
leave
add
int
test
dec
jecxz
and
outsb
inc
adc
push
push
mov
inc
add
mov
lods
mov
les
in
sub
and
or
xor
xchg
in
mov
lds
mov
movsb
sub
sbb
iret
push
xchg
jo
sub
dec
loopw
leave
push
jno
inc
stos
shlb
iret
imul
adc
push
int
lods
fnsave
adc
lea
mov
daa
sbbl
push
xchg
push
inc
dec
sub
dec
cmp
shrb
lock
sub
mov
daa
mov
insl
out
sub
mov
jecxz
outsb
sub
sbb
mov
iret
push
mov
cld
adc
daa
cmpsb
push
cmpsb
sub
push
rcl
lods
aam
shll
inc
scas
out
and
subb
cltd
stos
das
jecxz
imul
ret
pop
mov
leave
ljmp
jmp
mov
movsb
adc
out
dec
mov
dec
daa
push
jbe
dec
cs
repz
xor
jge
addl
out
xor
lret
dec
xor
ud2
sub
fiaddl
mov
mov
dec
pop
sbb
jmp
cmp
dec
cmpsl
das
pushf
sahf
out
sub
rorl
pop
out
sarb
jmp
push
test
jnp
in
pop
lea
mov
and
fwait
outsb
or
das
cli
cmp
fildll
or
fs
and
scas
jmp
lods
jmp
outsl
scas
adc
inc
shrd
popa
cmp
xor
or
sub
lods
test
vphsubwd
cmp
pop
sub
sub
dec
dec
arpl
popf
test
fidivrs
dec
ljmp
or
push
inc
adc
dec
or
out
or
sub
scas
jmp
push
jmp
movsb
daa
push
insl
xchg
mov
pushf
xor
leave
or
and
mov
mov
mov
cmpsb
loop
push
jecxz
pop
jmp
cs
arpl
lret
adc
ficoms
cli
pxor
fimull
jmp
dec
sti
loope
into
jns
sub
data16
in
leave
inc
push
bound
daa
xor
push
mov
jne
mov
xchg
mov
lret
pusha
mov
bound
push
dec
ret
push
dec
adc
scas
inc
or
sbb
and
inc
add
das
push
push
das
data16
xchg
popa
mov
sub
dec
mov
mov
mov
dec
or
in
pop
add
mov
xor
sub
sub
outsl
arpl
out
and
sub
mov
iret
sub
jmp
push
data16
dec
ds
xchg
into
adc
adc
adc
sub
push
in
das
ljmp
sbb
inc
int
sub
out
sub
push
push
lea
add
adc
adc
inc
pop
cs
out
out
mov
mov
dec
inc
push
lods
or
lock
int
test
in
testb
dec
out
adc
stos
into
mov
enter
dec
adc
lods
cmpsl
mov
dec
sub
adc
jns
dec
mov
dec
push
in
sub
push
out
xchg
lret
xchg
jne
ljmp
das
ret
daa
lea
jmp
lods
mov
mov
mov
or
dec
das
xchg
loopne
push
xchg
adc
inc
into
test
pop
lods
nop
mov
in
dec
sub
in
into
in
and
lret
in
pop
push
adc
sub
subl
loop
daa
adc
dec
imul
insl
jmp
sub
pop
imul
mov
dec
cmp
push
or
inc
inc
cmpsl
daa
and
mov
in
and
dec
or
gs
xchg
mov
add
bound
out
mov
ljmp
inc
mov
test
xchg
jmp
in
mull
or
xchg
adc
adc
ljmp
push
sub
inc
lods
lea
push
dec
or
jl
push
insl
or
imul
enter
cltd
iret
pop
xor
cmp
add
pop
scas
adc
adc
or
sahf
dec
or
jmp
mov
out
cmp
dec
mov
imul
xchg
mov
mov
jmp
and
or
pop
sub
stos
sub
insl
dec
mov
faddl
out
dec
imul
aam
cmpsl
dec
icebp
sub
leave
mov
shrb
scas
add
int3
das
movsb
add
lea
push
mov
icebp
and
sub
cmpb
and
and
mov
in
cltd
in
push
add
mov
or
ljmp
daa
dec
jno
outsl
sbb
mov
adc
add
sub
in
ficoms
sbb
xchg
pop
or
cmovge
adc
sub
dec
adc
adc
push
mov
mov
int
out
out
subb
xor
aam
dec
dec
lret
push
sub
adc
dec
dec
repz
jl
pavgb
pop
bound
call
inc
mov
inc
xchg
xchg
scas
sub
stc
in
pop
inc
push
inc
jmp
xchg
lret
punpckldq
icebp
mov
push
pusha
iret
test
ret
jp
out
inc
sub
xor
into
outsw
mov
leave
add
adc
outsb
sub
xor
or
mov
cmpps
sbb
push
sub
mov
dec
inc
sub
inc
outsb
sub
imul
dec
sub
jmp
int
push
arpl
inc
stos
pop
and
jecxz
jmpw
xchg
icebp
popa
jmp
jg
dec
loop
int
lret
push
loope
daa
cmp
xchg
stos
pop
out
push
dec
lret
push
das
dec
inc
cwtl
sub
cmp
fisttps
sub
sub
jmp
add
orb
push
incl
imul
lret
adc
shrb
mov
cmp
or
adc
and
test
lret
sbbb
popa
mul
out
push
je
or
sub
out
ja
vmovups
or
mov
shr
dec
mov
stos
or
andl
ret
cmp
dec
ljmp
aad
loopne
ret
cs
push
out
scas
nop
jmp
daa
dec
sub
out
xchg
xorl
sub
xor
das
inc
subb
dec
out
sti
in
daa
xchg
out
add
jge
or
push
cmpsb
dec
adc
mov
sub
or
stos
adc
aas
pop
xchg
sbb
bound
pop
jno
scas
movl
sub
lahf
dec
jns
dec
mov
and
mov
or
push
lret
or
xor
dec
mov
sbb
ljmp
icebp
sysenter
cmpl
testl
sub
data16
dec
jno
outsl
or
mov
aaa
push
pop
xchg
orl
xor
stos
or
mov
fnstenv
ljmp
and
scas
push
and
mov
sub
adc
mov
cs
rorl
push
arpl
ret
inc
pop
jmp
jecxz
aaa
mov
fcoml
mov
out
mov
push
iret
mov
push
or
or
out
lret
xor
mov
lcall
sbb
lret
movsb
test
dec
mov
sbb
insl
cs
out
and
repz
push
push
push
mov
xchg
stos
jmp
or
mov
lea
sbb
outsb
adc
aaa
dec
pop
push
or
scas
lea
or
stos
adc
std
jnp
into
lret
mov
ja
pop
addr16
out
push
mov
mov
fsubr
sub
dec
push
enter
adc
mov
imul
or
insl
sub
add
mov
pop
adc
scas
out
ljmp
jp
movd
mov
mov
sub
out
addb
jns
jbe
cmp
jmp
mov
out
outsl
iret
or
sub
movaps
aam
scas
or
dec
ret
add
or
sub
ljmp
in
lds
dec
pop
int
sub
outsb
testb
jno
data16
outsl
stos
lret
lea
and
scas
mov
outsl
sub
adc
or
inc
outsl
nop
push
cld
add
leave
dec
sub
or
and
sub
into
dec
jmp
dec
addr16
out
int
sbb
adc
and
scas
push
mov
jne
lret
sub
xchg
mov
sub
sub
pop
mov
xorl
inc
pusha
mov
lds
xor
in
dec
adc
inc
sub
out
or
loopne
or
dec
jg
cmpl
stos
int
mov
xchg
pop
fisubrs
and
dec
push
scas
sub
ds
or
adc
xor
cmpsl
or
icebp
or
ljmp
loope
incb
xor
mov
jne
test
lods
outsb
adc
pop
in
leave
out
pop
or
mov
lret
or
push
inc
xchg
cmpl
lods
sbb
dec
sub
movsl
movsl
outsb
xor
and
cld
subb
and
cmp
or
jnp
imul
out
fmulp
push
pop
clc
jno
cs
adc
mov
in
mov
xchg
and
inc
loope
push
in
das
sub
sub
adc
leave
dec
push
mov
js
pop
adc
or
cmp
or
dec
dec
enter
inc
retw
test
clc
rcr
pop
cwtl
push
or
xchg
sub
addr16
push
sbb
sbb
xchg
push
add
outsl
int3
sub
or
aas
or
or
lds
out
and
lret
ljmp
and
insw
sbb
sbb
scas
inc
pop
loope
xor
jmp
mov
push
stc
arpl
out
ds
ret
sub
pop
lcall
xchg
stos
leave
add
test
ljmp
push
mov
jge
lahf
popa
icebp
pop
dec
out
jmp
in
in
jnp
adc
loop
scas
out
push
jae
stos
inc
sti
imul
scas
data16
out
leavew
or
or
lea
mov
sub
enter
lret
jle
loop
sti
ret
xchg
jecxz
stos
push
icebp
adc
out
pop
sbb
lret
sarl
je
cs
out
fisttpll
or
mov
or
cmp
jmp
daa
je
pop
or
popa
dec
daa
test
outsl
fucomp
mov
scas
call
pop
clc
loop
push
aas
cmp
push
imul
and
mov
test
outsb
pop
mov
or
daa
fwait
sbb
pop
shlb
lret
mov
xor
and
daa
sub
dec
mull
inc
jl
or
or
add
clc
dec
pop
jmp
xor
outsl
or
jge
xlat
dec
int
sub
lret
push
and
int3
mov
xchg
out
mov
inc
ret
sub
sub
dec
sub
sub
xor
leave
cs
stos
adc
in
out
xor
dec
jmp
lods
fildll
pusha
mov
adc
shl
xor
or
ljmp
das
or
mov
lret
les
cmp
jno
cs
push
mov
insl
add
sub
out
leave
jno
sub
dec
push
xchg
adc
sub
sub
push
cmpsl
jge
cwtl
mov
mov
adc
inc
or
stos
dec
das
pop
movsb
sbb
dec
out
or
loope
or
std
dec
loope
mov
push
xchg
or
pop
lret
adc
cmp
xor
or
mov
push
daa
pop
add
outsl
lret
sub
mov
mov
mov
mov
mov
sbb
out
mov
test
and
sub
imul
loope
enter
mov
stos
out
pop
scas
test
outsl
leave
xchg
or
fmull
mov
pusha
xorl
mov
lods
jmp
sub
outsb
in
or
mov
lea
sub
dec
add
mov
or
ljmp
pop
pop
or
or
sbb
sub
aas
dec
push
mov
adc
movb
mov
ljmp
outsb
call
sbb
negl
cmp
cs
stos
les
imul
imul
lret
data16
int
and
leave
pushf
test
pop
dec
or
inc
dec
shrb
dec
test
inc
xchg
adc
data16
pop
scas
scas
outsl
or
adc
push
pminsw
xchg
dec
imul
sub
or
pop
push
outsl
lods
adc
sahf
addr16
mov
orb
cbtw
sub
xor
mov
out
or
inc
dec
imul
mov
mov
scas
dec
adc
insb
stos
pop
xchg
cmpsl
rolb
push
or
or
in
xchg
dec
sbb
lret
out
xchg
lret
leave
stos
xchg
push
movsb
insb
lods
scas
pusha
xchg
addr16
xchg
out
in
test
imul
into
loopne
lcall
outsl
jge
loope
iret
out
cmpsl
xchg
ret
add
int
mov
lret
xor
decb
xchg
inc
lret
push
out
aas
clc
pop
js
arpl
sub
rolb
imul
dec
ljmp
insl
loopne
sub
cmp
or
rorb
xor
xor
jbe
stos
or
sub
push
ljmp
lret
or
dec
or
dec
mov
in
leave
and
lea
orl
jg
test
push
outsl
dec
mov
in
scas
shrl
test
pop
cwtl
insl
pusha
pop
imul
xchg
int
inc
daa
stc
hlt
jb
jecxz
jno
scas
cmp
out
pop
mov
add
mov
lea
mov
or
xchg
adc
loope
ljmp
inc
stos
or
or
iret
sbb
outsb
push
outsl
dec
dec
stos
or
pop
test
and
daa
scas
pop
les
scas
push
leave
movq
shl
loop
scas
outsl
into
xchg
pop
dec
pop
test
push
shrl
and
addr16
xor
imul
dec
jmp
insl
mov
and
or
xchg
ret
inc
subl
adc
jmp
mov
daa
inc
popa
data16
xor
into
or
rclb
das
fistl
ljmp
push
mov
inc
out
shrl
sbbl
addr16
sub
dec
fisttps
jae
lret
sbb
push
mov
sub
scas
or
out
or
mov
int
xlat
mov
inc
fmull
and
daa
adc
jne
cmp
or
leave
sbb
or
lret
lret
mov
xor
in
or
or
adc
push
imul
jmp
pop
pop
sbb
sub
cli
xchg
adc
ret
repz
mov
push
addr16
insl
xlat
and
cwtl
int
es
nop
sti
repz
mov
sub
or
jl
fs
test
ljmp
int
dec
push
and
data16
and
test
lea
outsb
and
jns
jae
mov
leave
icebp
inc
push
or
int
out
mov
ljmp
imul
jl
mov
add
loopne
bound
jnp
leave
sbb
mov
xchg
adc
daa
in
test
pop
lea
and
ret
outsb
and
leave
nop
outsl
mov
stos
int
insl
stc
pop
push
sub
adc
inc
imul
pop
lret
add
xor
ljmp
and
dec
jb
sbb
mov
mov
imul
out
int
pop
andb
das
pop
dec
pop
sbb
outsl
adc
dec
mov
push
pop
adc
pop
mov
iret
xor
test
cmpl
mov
sub
jp
jne
pop
ret
imul
xchg
outsb
fadd
or
ret
and
test
jl
dec
cmp
pop
cmp
sbbl
cli
test
into
pop
fsubrp
push
lods
outsl
push
adc
sub
dec
xor
xlat
push
xor
xchg
push
scas
sbb
into
stos
out
lea
js
into
push
in
xor
mov
sub
sub
das
scas
or
xchg
lds
jecxz
sub
outsl
daa
sub
add
xor
imul
jmp
insl
inc
out
sub
ss
adc
std
ja
pop
mov
inc
pop
iret
movntq
cmp
or
pop
ret
sub
push
dec
enter
or
out
scas
adc
daa
das
negb
icebp
mov
ret
lret
and
outsb
push
addr16
adc
mov
adc
mov
pop
lds
mov
xchg
and
add
int
das
outsl
dec
xlat
cld
inc
insb
iret
mov
test
or
cltd
clc
icebp
adc
jg
or
xchg
dec
xchg
inc
adc
mov
push
andnps
jne
lods
imul
dec
pop
dec
leave
dec
or
pop
jle
and
int
push
movsl
and
into
outsl
stos
add
lock
mov
dec
and
out
or
gs
das
or
int
cmc
push
lret
out
cmp
lea
or
jbe
xchg
out
or
xchg
add
subl
push
or
or
cltd
test
clc
leave
or
fsubrp
or
jge
outsl
lods
ret
push
sbb
loop
pop
xchg
dec
mov
pop
out
dec
fcoml
xchg
mov
xor
loop
stos
js
mov
in
out
inc
mov
das
inc
cmc
in
fmull
insl
lret
in
in
or
mov
dec
and
xor
or
shrb
sbb
sbb
addr16
iret
int
test
les
xor
lahf
adc
lret
fsubrs
insb
inc
das
lret
lods
push
imul
inc
add
jle
andl
scas
dec
aam
mov
ljmp
sbbl
adc
int3
or
in
fmulp
fwait
push
scas
mov
aaa
test
mov
les
jb
or
push
int3
stos
sbb
mov
in
xchg
cmpsl
outsb
test
or
sbb
out
jecxz
sub
into
jge
lds
out
sub
dec
test
iret
jmp
out
and
inc
fiaddl
leave
and
jle
aam
mov
or
out
push
dec
fisubrl
es
lods
loop
mov
lret
lea
adc
mov
mov
mov
xor
dec
leave
scas
jmp
gs
outsb
push
and
out
add
jmp
cmp
enter
inc
and
dec
xor
or
push
sub
push
xor
dec
stc
cmp
ljmp
sub
leave
into
mov
cs
push
jmp
mov
dec
dec
loope
movlps
dec
into
icebp
subl
add
lret
cmpl
inc
adc
dec
adc
test
xchg
jmp
mov
mov
add
hlt
shrb
das
mov
dec
pusha
sbb
dec
mov
or
or
lea
aas
fcmovnbe
arpl
in
and
lret
sub
xcrypt-ofb
cmpsl
outsb
out
push
dec
iretw
lret
sub
lret
xchg
sub
dec
cltd
sbb
popa
xor
sub
sbb
push
cmpsl
dec
dec
popf
loop
iret
clc
repz
cmp
inc
push
hlt
and
or
in
add
cs
lahf
push
and
mov
fsubs
in
addr16
test
stos
daa
into
mov
sub
imul
dec
ljmp
jge
mov
dec
dec
jmp
scas
pop
popf
lds
sub
scas
test
pop
dec
sbb
dec
adc
idivl
push
insl
mov
fwait
pop
xchg
outsl
icebp
into
xor
addr16
mov
lods
stos
out
dec
push
pushw
aad
out
pusha
or
lea
mov
sub
test
sub
sbb
sub
out
inc
lret
xchg
xorb
orl
inc
fildll
outsl
or
mov
push
push
cli
test
imul
shrb
mov
or
or
cmc
mov
sub
mov
mov
sub
test
mov
sub
sub
mov
push
outsl
inc
adc
dec
outsb
or
jmp
push
sub
adc
push
movsb
leave
push
stos
addr16
sub
orl
mov
jb
sbb
pop
pop
and
or
lret
in
cmp
fisttpl
sub
push
sub
adc
pop
cmp
daa
outsl
mov
dec
jmp
ret
stos
lods
test
sub
into
sidtl
xor
dec
pop
mov
push
scas
bnd
imul
outsb
jmp
sub
sub
ljmp
stc
dec
scas
or
in
adc
test
lds
jg
xchg
addb
sub
adc
inc
ja
pop
imul
dec
lods
psllw
lret
in
out
ret
jl
aaa
xor
xchg
inc
aad
mov
int
leave
lret
xchg
iret
test
mov
mov
into
push
lret
dec
out
dec
mov
ljmp
mov
mov
lret
sub
daa
roll
dec
pop
xor
call
das
js
fcmovne
mov
sahf
mov
out
sahf
cmpb
out
or
and
sub
iret
adc
push
dec
cs
daa
mov
mov
mov
push
push
cs
enter
pop
xchg
or
push
dec
imul
pop
out
loope
out
mov
stc
in
imul
out
sub
and
loope
imul
jmp
mov
push
jle
iret
movl
jns
imul
daa
jle
fxch
lock
lret
sbb
in
dec
add
sahf
test
xchg
out
or
lret
or
aas
push
jns
dec
sbb
or
xor
testl
inc
stos
xchg
ljmp
clc
cmp
lret
sub
dec
xor
or
iret
incb
lretw
aam
out
cmpsl
dec
jl
mov
shrl
or
lcall
jmp
pop
or
outsb
push
and
cmpl
cld
xor
sub
dec
jne
pusha
adc
jns
push
outsl
dec
add
das
in
dec
xor
dec
or
nop
insl
adc
out
dec
pop
pop
jns
mov
arpl
mov
push
iret
or
popl
dec
ljmp
shl
mov
mov
dec
dec
movsl
mov
lret
enter
inc
jmpw
sub
sbb
or
xchg
daa
push
push
stc
push
xchg
into
or
add
push
dec
fwait
xchg
ret
dec
out
or
xor
mov
dec
add
jmp
out
pop
dec
dec
in
js
cmc
cmpsb
mov
pop
imul
dec
rdtsc
dec
nop
mov
push
or
mov
test
mov
xor
dec
psadbw
push
insl
dec
cwtl
pop
push
or
scas
rolb
adc
lea
lret
sbb
sub
add
mov
inc
jae
outsb
jmp
jmp
test
jecxz
pop
lcall
in
jge
cmp
outsl
lahf
sub
out
lret
sbb
adc
push
or
stos
inc
push
dec
mov
sub
add
sub
jnp
xor
jnp
sbbw
or
cmpsl
dec
dec
pop
stos
out
push
and
imul
sub
shlb
fbstp
out
mov
lods
or
lea
jp
aas
test
mov
pop
sbb
or
dec
xlat
and
adc
inc
stos
pop
lods
test
cld
pop
shrb
adc
or
jmp
lock
popl
pop
insl
stos
clc
loop
cmp
push
daa
cmpb
loopne
jmp
mov
mov
push
lret
out
add
stos
mov
xchg
or
test
sbb
lea
int
jmp
sub
fcmovu
and
addr16
dec
sbb
cs
dec
push
adc
or
lods
dec
sub
and
into
or
and
sub
or
jo
lds
sub
inc
iret
ret
addb
push
stos
sub
ficoms
cld
pop
dec
lahf
dec
test
imul
mov
jl
adc
out
out
nop
push
jg
cmpsl
jmp
lret
jno
outsl
aam
mov
push
out
push
jge
sub
sbb
and
scas
and
mov
popf
stos
dec
xchg
scas
and
out
imul
std
icebp
sub
or
outsl
sbb
xor
pop
in
into
pop
int3
adc
push
mov
or
xchg
mov
xchg
adc
shrl
pusha
sub
mov
cmp
in
cli
js
daa
scas
or
loope
clc
or
out
das
adc
dec
imul
jbe
or
jle
dec
mov
pusha
sub
sbb
outsb
pop
mov
pop
mov
xor
adc
dec
imul
out
pop
mov
movlhps
inc
out
dec
jns
idivl
aaa
adc
mov
std
lock
or
data16
xlat
cmpsb
inc
xchg
loope
lea
mov
outsb
mov
bound
or
dec
test
stos
paddq
adc
lret
pop
daa
pop
and
mov
adc
jle
icebp
test
mov
aaa
dec
test
sub
adc
xchg
lods
mov
dec
xchg
or
subl
out
dec
and
push
out
in
insl
lret
mov
sub
rol
lea
imul
mov
lret
dec
test
sub
inc
into
inc
mov
mov
push
into
ljmp
or
add
mov
xor
pop
xchg
nop
lock
inc
sbb
aas
sub
cmpsl
lods
daa
add
in
xchg
insl
xchg
addr16
out
jnp
xor
jmp
mov
adc
lret
sbb
stos
in
scas
les
and
add
sub
dec
scas
orl
loope
dec
dec
or
lret
adc
pop
repz
adc
dec
test
jmp
aad
mov
or
imul
mov
in
psubq
cwtl
les
int
mov
loop
or
out
or
or
ja
in
and
xor
out
stc
rcll
outsl
or
dec
or
push
or
lret
xor
das
imul
dec
pop
lahf
into
pusha
xor
daa
subl
das
cld
adcl
fsubs
and
dec
outsl
jne
mov
icebp
shl
leave
or
ljmp
or
mov
ljmp
stos
xchg
lret
insl
shlb
xlat
enter
add
or
inc
std
imul
sub
out
out
daa
and
addr16
into
dec
dec
int
jns
pop
or
mov
jmp
mov
into
sbb
jmp
adc
cmpsl
decb
inc
das
loope
sub
out
dec
or
sub
cmp
mov
xor
leave
or
leave
stos
sub
push
or
icebp
insl
bound
out
mov
repnz
cmp
jb
push
xchg
out
inc
dec
mov
dec
dec
scas
in
xchg
jne
cs
dec
lods
data16
xchg
push
addr16
loop
lea
sbb
lahf
das
pop
stos
xchg
jmp
sub
sub
out
xor
sub
dec
push
in
push
shufps
call
or
adc
jno
daa
pop
in
cmp
shll
sub
loopne
xor
sub
add
inc
testb
cmpsl
lret
sub
les
pop
xor
test
daa
ljmp
out
adc
test
repz
pop
adc
dec
push
mov
lds
mov
scas
lret
in
sub
push
daa
push
sub
inc
arpl
mov
pop
or
sub
loop
stos
push
mov
test
mov
ljmp
inc
addr16
dec
xchg
mov
xor
xchg
mov
into
adc
iret
int
mov
stos
sahf
insb
mov
pop
push
les
pop
sub
cmp
sub
adc
insl
adc
xor
jbe
pop
scas
dec
jmp
ljmp
xchg
xor
es
jmp
mov
enter
dec
out
inc
sub
pop
dec
andb
lret
xchg
or
sbb
dec
sbb
xor
adc
int
scas
push
jecxz
aas
add
dec
or
shll
iret
outsb
sub
sbb
cvtpi2ps
dec
inc
lret
pop
daa
adc
xchg
push
bound
add
add
in
or
dec
or
out
adcl
mov
rorb
mov
inc
lret
ljmp
or
pop
inc
mov
inc
inc
lods
imul
orl
out
xchg
cltd
or
cld
into
push
or
dec
jle
cmp
stc
lea
inc
push
pop
test
inc
out
insl
sbb
adc
lcall
int
xchg
andb
mov
aas
dec
lret
popf
out
jge
int
dec
cmpsl
in
testb
inc
add
add
dec
dec
into
jmp
inc
lods
stos
lea
outsb
aaa
fs
xor
xchg
addl
repz
dec
mov
lcall
in
insl
notb
cmp
inc
lret
shrb
mov
xor
mov
pop
sti
dec
jmp
inc
lods
sub
out
ret
xchg
dec
cmp
stos
inc
les
or
stos
xchg
sub
mov
pop
ds
out
scas
xchg
iret
lret
insl
sub
out
mov
mov
pop
xchg
jle
loope
sub
into
out
data16
int
add
mov
pusha
fcmove
inc
into
scas
jbe
jmp
iret
lret
pushf
shll
stc
xor
das
or
popw
fs
and
jmp
in
xor
xor
mov
adc
mov
insl
nop
ljmp
adc
dec
cmpsl
fsubrp
sbb
popf
stos
jo
adc
sub
stos
movsb
into
push
dec
or
xchg
dec
dec
xchg
mov
sub
lret
and
add
adc
sub
stos
pop
adc
adc
out
xor
sbb
jns
mov
movsb
fisttpll
jnp
fildll
das
sub
popw
outsb
arpl
ljmp
xor
inc
mov
add
push
dec
shrl
mov
and
pop
push
stos
sub
insl
dec
pop
push
out
loope
sbb
ret
into
jmp
loop
rorl
xlat
in
lret
adc
jp
insl
adc
out
scas
jmp
lcall
or
dec
aas
and
pop
lret
jne
popf
aas
fwait
or
sbb
pop
in
jg
sub
ljmp
jne
dec
andl
loopne
add
out
cmp
nop
adc
pop
iret
lcall
jbe
fimuls
into
scas
das
outsb
adc
push
mov
iret
or
or
adc
nop
push
or
sub
and
scas
push
shlb
mov
inc
ds
pop
cmp
mov
lret
loope
jmp
lea
adc
outsl
stos
stos
or
iret
loop
into
or
xor
pop
jecxz
popa
mov
rclb
xchg
ret
movups
or
daa
inc
popf
sub
jmp
pop
jo
lds
push
lret
jbe
sub
and
xor
imul
dec
sbb
adc
in
nop
or
ret
movsb
mov
sub
imul
sub
das
sub
inc
pusha
out
inc
cs
mov
xchg
fadds
out
int
sub
push
add
insl
jg
mov
pop
loopne
push
pop
push
shll
push
pop
pop
dec
scas
push
in
sub
dec
dec
pop
adc
outsb
cwtl
mov
cmpl
lret
aaa
and
enter
inc
mov
ror
pop
jo
or
dec
and
daa
loope
mov
inc
xor
sub
rorb
adc
xchg
into
pop
loop
scas
add
stos
pop
or
std
dec
xchg
push
cmp
inc
das
pop
loope
jp
inc
out
push
into
ljmp
bound
loop
jo
add
or
sbb
scas
int
or
dec
imul
test
stos
or
xor
sub
push
shrl
outsl
mov
daa
mov
sub
and
mov
jmp
lret
or
adc
out
pop
and
dec
or
mov
jmp
or
add
push
sub
sub
out
cs
adc
sbb
data16
lret
inc
sbb
fimull
cmpsl
ds
push
fstpl
dec
loop
cmpsl
mov
push
loope
dec
sub
insl
lcall
out
shrb
stos
mov
cmp
data16
jg
mov
dec
loop
jmp
dec
mull
fyl2x
in
mov
das
cs
insl
hlt
cld
lods
imul
lods
insl
xchg
inc
sub
or
stos
or
or
dec
xchg
mov
dec
sub
daa
inc
iret
fisubrs
leave
arpl
stos
aaa
xchg
or
mov
in
dec
dec
ret
leave
loope
sub
in
sbb
or
imul
or
mov
add
or
cmp
mov
cmp
add
cwtl
test
sbb
or
hlt
lds
cwtl
mov
into
loope
je
adc
scas
leave
sbb
cmpsl
mov
scas
dec
pop
dec
les
or
lods
mov
cmp
test
xor
pusha
mov
mov
jo
jg
xlat
xchg
mov
daa
cmpsl
and
adc
dec
or
lods
cmpsl
cwtd
pusha
jno
mov
stos
lret
mov
xchg
in
adc
push
adc
cltd
dec
iret
dec
push
xchg
sub
xor
adc
cmp
setne
stos
adc
cmpsl
xchg
or
icebp
and
or
pushw
adc
das
test
das
jo
dec
outsb
mov
push
iret
pop
lahf
ljmp
push
enter
lods
test
sub
lret
stos
loopne,pn
or
pop
or
imul
subb
insl
or
xchg
dec
xchg
jl
out
pop
arpl
hlt
jp
scas
sub
nop
push
xor
jns
test
lods
test
mov
xchg
xor
sub
or
das
in
imul
and
mov
cmc
pop
dec
aam
or
ret
xor
xor
insl
push
imul
sub
adc
jno
jge
das
lods
cs
or
outsl
out
dec
out
mov
in
pinsrw
jne
jns
into
dec
subl
or
cmp
mov
jle
cmovp
insb
repnz
jmp
inc
or
test
dec
or
or
inc
push
out
and
je
stos
movsb
vpackssdw
cmpsl
iret
xor
xchg
add
icebp
push
lods
or
cmp
or
push
mov
or
or
mov
adc
lret
out
shlb
scas
sub
sub
cmp
pop
adc
mov
ret
test
cld
ljmp
in
and
out
sbb
xor
sub
ljmp
repz
mov
mov
lods
xor
outsb
or
pop
sub
int
push
outsl
insl
dec
mov
push
sub
inc
xchg
std
add
stos
leave
lock
loop
in
outsb
popl
punpckhdq
shl
inc
mov
adc
mov
cmp
dec
inc
bswap
cmpsl
faddl
push
les
adc
outsl
dec
sub
out
test
lock
out
movsl
stos
mov
loop
dec
icebp
daa
test
or
out
xchg
push
mov
insl
aam
xchg
aad
lahf
or
and
insl
dec
lret
sub
dec
dec
clc
sbb
or
mov
out
mov
jae
and
dec
jle
dec
lods
sub
jle
scas
sub
in
out
loopne
adc
dec
fstl
xchg
icebp
fwait
jo
xchg
imul
mov
ret
dec
dec
push
dec
into
pop
inc
imul
or
imul
cwtl
dec
lds
test
add
adc
xchg
js,pn
mov
or
inc
lods
dec
stos
das
sub
pop
sub
mov
or
dec
dec
sbb
out
rclb
mov
dec
inc
pusha
addl
push
loop
push
icebp
aas
out
fldl
dec
and
rclb
dec
or
cld
repnz
lret
mov
flds
or
cmc
dec
loope
test
mov
xlat
and
jg
pop
das
adc
lock
cmpsb
outsb
stos
pop
loope
pop
cmpsl
insw
rcl
enter
int
jp
xor
jne
sub
fcoml
ljmp
leave
sbb
imul
lods
cli
dec
pop
js
mov
or
push
clc
or
mov
mov
jno
stos
dec
mov
adc
in
or
test
das
jl
mov
ret
push
subl
mov
adc
ffree
adc
mov
aad
sbb
lea
sub
scas
or
cs
mov
mov
sbb
out
dec
aas
outsb
pop
aas
or
sub
cmp
insl
out
xchg
insb
push
xchg
dec
or
test
ret
xchg
cmp
or
xchg
and
sbb
xchg
imul
out
sub
push
subb
scas
adc
mov
in
int
stos
and
out
cmp
dec
dec
imul
mov
mov
pop
dec
or
or
mov
nop
add
sbb
sub
pop
jbe
loope
out
dec
scas
clc
movl
imul
addr16
push
xchg
xchg
or
sysexit
pop
pop
ja
mov
push
sub
xchg
xchg
aad
in
sub
sbb
loop
sbb
mov
repnz
push
dec
jns
adc
sub
movsb
inc
push
pop
out
lea
or
or
test
inc
or
dec
cmpsb
sub
outsb
xchg
pusha
dec
cmp
cmpsl
iret
repz
punpckldq
and
out
cli
dec
out
sbb
mov
cltd
icebp
push
mov
jns
faddl
and
xchg
cltd
jle
test
or
sub
mov
mov
stos
sub
adc
fisttps
outsl
pop
ret
xchg
lods
imul
daa
mov
push
dec
sbb
subb
dec
push
js
pop
xchg
jle
sub
mov
lea
rorb
or
or
sub
jmp
cmpsb
xor
shl
sub
lea
imul
into
mov
lods
inc
out
daa
test
sbb
xor
lret
jns
sbb
cs
inc
or
dec
mov
icebp
lcall
imul
test
or
or
xorl
dec
ficoms
daa
pop
ret
das
cld
xor
mov
pop
imul
out
enter
xchg
les
and
lods
scas
cmpsl
sub
shrb
pop
mov
insb
cmp
int
into
or
cmp
pop
scas
test
cmc
lret
lock
or
out
push
jmp
je
mov
imulb
fisubrs
scas
cmp
jmp
mov
pop
dec
mov
sarl
xchg
pop
dec
clc
or
outsb
mov
jle
sub
inc
xchg
push
ret
sub
outsb
lret
adc
inc
lods
dec
dec
sbb
sbb
mov
add
js
lret
lods
scas
loopne
pushf
imul
pop
or
jb
add
xchg
call
decb
xchg
lret
push
push
push
jno
pop
xor
or
iret
lea
xchg
jmp
push
xchg
outsl
cmpsl
mov
sub
ljmp
movsb
dec
adc
femms
or
leave
adc
pop
sub
add
sbb
stos
add
ljmp
dec
rclb
add
pop
sub
inc
outsl
push
popa
mov
lret
inc
jmp
das
mov
fimull
out
ret
dec
push
cmpsl
sbb
rolb
outsl
js
jnp
bound
cltd
adc
icebp
sub
sub
out
aas
add
shl
iret
pop
inc
jmp
inc
ret
inc
add
push
out
lret
mov
push
push
int
add
or
stos
sub
sbb
sti
lahf
jno
test
sbb
lret
sub
loop
sub
scas
sub
mov
daa
xchg
sbb
test
stos
mov
mov
ret
ljmp
pop
int3
adc
leave
jmp
dec
mov
push
stc
std
popw
sbb
pop
insl
cmp
sbb
int
out
dec
test
jmp
inc
lret
outsb
cmovge
sub
jmp
scas
push
pop
imul
imull
dec
add
push
rolb
gs
addr16
xchg
shrb
stc
sbb
sub
sub
into
daa
add
push
test
lea
dec
fcmovne
push
and
data16
sahf
das
rol
jmp
dec
bound
push
aam
dec
xchg
stc
cwtl
enter
add
jns
addr16
push
or
scas
pop
ret
in
lret
adc
divl
xor
int3
mov
xchg
in
jmp
push
xlat
sub
push
shlb
lds
loop
das
filds
sbb
pop
mov
or
outsl
dec
sub
xchg
cs
fwait
lret
les
daa
and
enter
adc
pop
jle
pop
xor
insl
sbb
ret
push
in
jmp
push
push
pusha
lret
or
dec
or
sub
jmp
subl
xchg
movsl
pop
in
lret
or
push
lods
jmp
cmp
stos
daa
fsubr
sbb
xor
jg
imul
push
or
subl
aad
sub
mov
xchg
lret
iret
jmp
cmp
jnp
or
dec
add
sub
mov
dec
dec
xchg
add
push
sub
or
pop
inc
hlt
insl
push
xor
das
dec
out
imul
stos
mov
lret
out
xchg
inc
mov
stos
dec
mov
add
or
mov
push
in
leave
int
push
stos
cli
and
imul
fs
dec
and
sbb
xchg
aas
out
pusha
pop
or
mov
lods
leave
mov
xor
mov
sub
dec
daa
pop
push
fistpl
bound
fildl
stc
into
cmova
test
out
cmp
sub
mov
or
xor
sub
jno
mov
pop
jmp
cwtl
outsb
std
repz
xchg
out
mov
test
out
imul
push
inc
sbb
stos
or
insl
ljmp
loopne
sbb
cmpsl
pop
inc
pusha
das
adc
int3
jne
pushl
mov
loope
dec
out
ljmp
test
inc
es
outsb
or
mov
adc
xchg
imul
movsb
subl
sub
cs
xor
xor
mov
ljmp
ret
and
stos
mov
scas
imul
sub
out
stos
xchg
adc
int
ds
jmp
adc
leave
push
or
xchg
ljmp
lds
test
lret
outsl
jmp
dec
or
fldenv
mov
or
icebp
pusha
arpl
sub
sub
pop
or
dec
mov
and
push
or
sub
push
clc
lahf
cwtl
dec
xchg
iret
hlt
and
into
push
out
mov
xor
scas
cmovnp
out
add
or
adc
adc
jmp
inc
or
jb
dec
rclb
test
aam
cltd
out
or
pop
stos
dec
icebp
jnp
xor
lret
pop
add
dec
dec
sahf
hlt
or
xchg
in
daa
xchg
packuswb
mov
cmp
das
cmp
scas
fimuls
jmp
inc
or
out
ljmp
lea
pop
mov
decl
mov
les
push
icebp
ss
inc
cvttps2pi
fsubs
stos
sub
jecxz
out
jecxz
push
or
out
jne
fwait
jle
mov
inc
lods
leave
pop
jb
fwait
jmp
or
pop
stc
mov
addr16
dec
shlb
imul
xor
loope
adc
mov
out
scas
or
lahf
sub
or
xchg
sub
or
push
sub
push
lcall
lods
sub
movsb
pop
inc
or
mov
lods
jecxz
adc
sub
xchg
cld
push
push
jle
fpatan
sbb
stos
mov
dec
cmp
dec
push
data16
orb
out
sub
rorb
nop
bound
xor
mov
imul
mov
adc
fisubrs
test
or
push
pop
insb
jmp
in
ss
sub
jmp
cli
add
mov
addr16
lret
lret
inc
dec
or
pop
xchg
dec
ret
lea
das
xor
push
imul
sub
out
push
sub
dec
test
movsb
dec
pop
pushf
popa
xchg
xor
dec
das
into
sub
jmp
mov
dec
cld
push
pop
dec
mov
test
xchg
pop
lea
stos
scas
sbb
out
scas
pop
cmp
inc
mov
pop
add
daa
pop
jmp
or
loope
out
loop
sub
mov
int
cmp
movsl
loope
sub
add
iret
daa
aam
lret
pop
xchg
out
hlt
and
sub
dec
cwtl
pop
push
andl
call
cwtl
xchg
movsl
push
push
and
ret
test
push
out
and
imul
pop
xor
sbb
imul
ljmp
test
xchg
fcoml
jp
lahf
sbb
cs
push
aad
adc
stos
leave
mov
in
pop
adc
xchg
jmp
das
inc
lahf
cs
int
push
xchg
jle
outsl
jb
mov
push
adc
lds
pop
jp
fisttpl
mov
loop
outsb
lea
jmp
loope
push
addb
push
notl
test
mov
or
dec
xor
and
dec
sub
js
and
frstor
decl
push
scas
dec
ret
pop
rcrl
or
adc
sub
push
push
out
push
dec
ljmp
lea
sub
adc
dec
aam
xor
sahf
adc
or
cmpsl
push
add
add
inc
loop
xor
dec
dec
sub
sub
inc
popf
inc
adc
repz
imul
xchg
lods
fucomip
sbb
outsl
stos
adc
data16
mov
sbb
or
rorl
insb
adc
fildll
mov
push
push
adc
lret
or
test
dec
and
iret
mov
lods
sub
enter
adc
in
dec
xchg
les
fdivl
scas
jmp
fsubr
jbe
jle
dec
pop
dec
shll
jno
jmp
pop
sub
mov
mov
adc
inc
outsb
lods
lret
mulb
xchg
insl
and
aas
push
adc
and
outsb
outsl
or
and
iret
daa
bound
push
jmp
push
xor
mov
popa
lret
sub
or
imul
scas
add
xor
mov
subl
out
ds
das
mov
repnz
ljmp
push
dec
addr16
jp
sub
addl
fwait
les
or
adc
sub
insl
outsb
subl
jns
xor
dec
xchg
fwait
lods
inc
inc
add
adc
imul
das
dec
ficomps
pusha
xlat
adc
adc
pop
outsl
push
adc
test
sub
ja
out
jmp
lea
mov
mov
mov
loop
leave
movsb
xchg
outsl
or
dec
xadd
in
or
sbb
jmp
sbb
out
lea
sub
hlt
xchg
adc
ret
in
push
jae
insl
dec
mov
push
or
lea
lock
das
lret
adc
daa
lahf
pop
in
mov
jmp
xor
cs
lods
push
sub
imul
jmp
push
or
sub
cmp
cmpsl
lahf
arpl
aas
jg
lret
enter
inc
pop
xchg
lret
jns
out
pushl
and
adc
fwait
arpl
into
lods
in
or
push
or
sar
insl
xchg
popa
sbb
sub
mov
or
inc
push
psubusb
pop
xor
push
dec
jns
cmp
lret
sub
lods
or
inc
out
push
xor
out
inc
cwtl
loopne
leave
test
mov
or
imul
in
repnz
xlat
add
dec
dec
adc
sub
outsl
dec
jmp
or
xlat
or
sub
xor
cmpsl
xchg
dec
jmp
jb
sbb
adc
dec
push
in
lods
mov
sub
jl
mov
cmp
pop
in
data16
iret
and
mov
out
mov
add
pop
inc
mov
fsubs
mov
inc
lcall
sub
scas
stos
in
mov
daa
pusha
dec
loopne
xchg
xor
push
js
or
stos
or
outsb
mov
insl
jmp
mov
popf
push
daa
lret
subl
out
pushf
sub
pop
add
sub
inc
jo
fcoml
push
lea
das
cs
clc
repz
out
loop
imul
pop
mov
sub
dec
vcvttpd2dq
inc
mov
insl
dec
or
xor
dec
and
ljmp
fbstp
hlt
sbb
dec
xor
test
out
or
jmp
lods
sub
sahf
push
das
test
nopl
imul
clc
add
insl
pop
into
lret
pop
stos
dec
pcmpeqw
rolb
mov
out
inc
jp
or
stos
into
in
push
int
sbb
pop
test
lods
inc
pop
or
sub
cmp
bt
sub
jmp
dec
sub
mov
mov
add
or
movsl
iret
es
dec
into
dec
out
decl
daa
or
cwtl
or
dec
or
repz
dec
test
or
or
enter
mov
adc
jecxz
stos
cmpsl
or
ret
int
lret
in
minps
sub
out
pop
pop
pop
sub
in
dec
aaa
lret
daa
xor
xor
sub
rcpps
sbb
jecxz
movsb
pop
rep
push
std
sub
mov
xchg
popl
sub
or
hlt
push
dec
stos
leave
pop
sub
fisubs
sub
mov
mov
cmp
das
addr16
dec
test
out
bound
stos
in
loope
or
iret
icebp
imull
mov
imul
mov
out
adc
sub
jno
int
cs
in
sub
cmp
loopne
out
lret
scas
stos
int
push
dec
call
fbstp
test
insb
scas
dec
adc
ret
mov
movups
aas
in
imul
or
or
sub
dec
inc
add
cmp
loop
mov
xchg
stos
outsl
pop
sub
or
mov
cmpsl
out
dec
test
sub
dec
adc
dec
pop
cmpb
push
out
and
jno
adc
outsl
mov
imul
out
add
pop
inc
daa
or
mov
or
into
int
or
leave
repz
imul
enter
enter
cmovge
or
hlt
or
sub
xor
or
pop
jmp
bswap
push
out
adc
push
and
mov
icebp
test
sbb
cmpsl
adc
test
push
les
aad
xchg
jl
cmp
lea
lods
mov
pop
out
mov
sub
mov
icebp
test
dec
and
push
test
pop
insb
stos
popa
cli
jbe
jge
sbb
sub
scas
out
daa
lea
lret
insb
test
jmp
or
int
mov
dec
push
push
lea
sbb
out
imul
xor
das
jns
sbb
leave
repz
push
dec
mov
sub
out
js
daa
mov
inc
sbb
das
data16
xchg
stos
test
out
sub
sub
lea
mov
ljmp
dec
push
mov
sub
push
or
adc
or
add
test
mov
or
pop
xor
mov
imul
ret
sub
dec
inc
aam
out
stos
repnz
xchg
scas
loop
iret
push
repz
inc
inc
addr16
sub
arpl
pop
mov
dec
lret
push
inc
lret
movsb
test
jb
das
shrl
int
adc
lds
roll
scas
dec
adc
push
mov
out
dec
sbb
das
lea
mov
dec
push
or
pop
addr16
sub
data16
dec
mov
nopl
mov
sub
rcrb
sub
xchg
fcoml
in
lret
and
mov
push
dec
mov
push
adc
dec
lods
add
outsb
in
inc
or
sub
ljmp
repnz
imul
mov
fcoml
sub
call
inc
xchg
or
jl
lahf
imul
rorb
mov
jmp
xchg
dec
mov
jmp
sub
jbe
pop
imul
mov
pop
imul
jmp
imul
scas
push
push
dec
xor
imul
cs
add
loop
mov
mov
dec
push
fbld
sub
int
or
dec
in
negb
pushf
push
cmpsb
lahf
shr
push
arpl
dec
pop
imul
or
xchg
cli
in
sub
setno
lret
mov
and
pop
outsb
pop
add
dec
dec
filds
jmp
int3
jns
lcallw
cltd
sub
mov
push
test
push
pop
push
bound
nop
jmp
xor
repnz
push
or
push
out
mov
shr
ljmp
dec
cs
pop
xor
sbb
pop
dec
sbb
xor
int
mov
mov
mov
leave
lods
shrb
bound
scas
and
mov
daa
xchg
and
dec
xor
das
xor
ljmp
mov
sbb
in
sub
dec
mov
cmp
notl
ljmp
jmp
mov
or
adc
or
mov
repz
push
das
sub
sub
push
loopne
imul
sub
daa
es
aad
xor
push
pop
rorl
ffreep
out
pop
sub
iretw
daa
inc
insl
outsl
lret
mov
dec
dec
inc
in
imul
fucomip
insb
test
ljmp
add
stos
int
xlat
or
pop
add
in
iret
pop
bound
xchg
cmc
imulb
shrl
xor
jmp
imul
dec
in
pop
mov
dec
adc
cmpsl
scas
pop
or
sbb
into
jmp
int
cltd
cmp
das
xchg
mov
fildll
sbb
or
jne
scas
lret
fadds
sub
jmp
outsl
xor
sti
and
and
ljmp
dec
cmp
lcall
dec
xor
mov
inc
das
orb
adc
scas
push
popa
dec
outsb
push
push
call
cmpsl
setg
mov
inc
mov
sub
stos
out
adc
sar
xor
out
test
int
daa
into
sbb
xor
popa
lcall
dec
pop
xchg
out
sub
add
push
push
sahf
jg
aad
and
movl
sub
ud2
dec
test
cmp
jmp
imul
adc
das
dec
jmp
scas
test
inc
sbb
leave
xchg
or
cmpsl
stos
pop
mov
xchg
dec
jg
out
les
inc
pop
jecxz
out
xor
fcoms
or
sub
das
cmpxchg8b
bound
or
arpl
leave
incb
xchg
iret
sbb
dec
hlt
jb
inc
sbb
test
addr16
mov
out
dec
fildll
and
jmp
mov
add
outsl
sti
mov
jmp
push
adcb
inc
inc
cmp
dec
or
outsl
cs
cmp
out
xchg
scas
adc
adc
ret
dec
imul
or
sub
dec
test
ret
cmpsl
imul
dec
cs
cld
in
out
sub
dec
inc
xor
sbb
out
scas
outsb
and
std
push
ret
inc
insl
push
outsl
sti
sbb
stos
push
jb,pt
lret
int
xor
pop
sub
int
adc
iret
xchg
or
test
sbb
or
xor
push
pop
imul
dec
jmp
test
xacquire
jns
xor
test
push
lds
cmpsb
dec
iret
push
cmp
lods
push
xor
or
cli
jl
cli
fwait
sub
mov
sub
push
dec
and
dec
jmp
in
scas
or
out
mov
outsb
push
imul
add
inc
test
xor
xor
stos
pushf
xor
adc
daa
retw
or
sub
push
outsl
pop
mov
xor
icebp
ja
popf
xor
cmp
or
mov
inc
stc
lea
iret
dec
cmpsb
or
test
das
adc
das
outsl
push
dec
sbb
daa
mov
sbb
push
pop
arpl
dec
sbb
sub
jle
fldenv
aam
cmp
mov
daa
outsb
shl
pop
push
mov
and
cltd
iret
sub
loope
scas
xor
or
fsubs
mov
jns
into
push
addr16
leave
mov
cs
sub
ftst
repz
ret
mov
lea
adc
test
daa
cmpsb
dec
or
lcall
dec
mov
aaa
mov
loope
out
lret
ljmp
cmpsb
mov
or
and
or
mov
pop
mov
or
out
scas
dec
sub
jb
add
mov
dec
scas
or
xor
lret
outsl
popf
sub
pop
xor
or
iret
daa
lea
ret
or
mov
xor
xchg
icebp
jle
jmp
jns
sbb
daa
insl
repnz
add
lods
mov
pop
bswap
xlat
or
jmp
sub
sub
mov
insl
orl
out
mov
pop
loope
out
pop
fisttpl
fisttps
mov
adc
scas
dec
sbb
push
sub
pop
or
por
imul
cmp
xor
dec
xchg
stos
xor
xchg
out
popf
sub
out
inc
outsb
stos
push
pop
jo
xchg
js
scas
sbb
daa
or
pop
mov
adc
into
iret
jo
adc
adc
or
loopne
pop
inc
or
enter
insl
scas
out
cltd
add
test
out
pusha
ljmp
inc
inc
out
dec
push
pop
imul
or
sbb
scas
xchg
xchg
xor
xor
or
inc
or
jecxz
shr
adc
xor
xchg
out
sbb
cs
adc
xor
fldln2
and
mov
stos
mov
lret
xlat
loope
or
or
in
and
jmp
and
push
enter
repz
into
and
jmp
push
push
in
xchg
div
push
popa
out
scas
ljmp
lcall
and
xchg
mov
adc
pop
push
push
add
mov
and
cmp
dec
stc
xor
push
sbb
mov
or
dec
pop
adc
mov
pop
or
out
push
or
int
cltd
daa
lret
push
lret
test
enter
mov
dec
mov
pop
jae
lret
in
xchg
sub
movsb
push
mov
sub
xchg
jecxz
mov
arpl
test
jl
cmp
adcl
arpl
test
push
dec
scas
dec
das
xchg
in
jle
cli
daa
dec
rorb
sub
dec
or
xor
imul
in
dec
test
xor
dec
jno
push
mov
inc
inc
mov
les
testl
jg
iret
lahf
or
les
test
orb
outsl
or
pop
push
sbb
test
inc
aas
jbe
test
mov
add
xlat
dec
cwtl
mov
icebp
adc
xchg
ret
push
xor
pop
push
add
pop
add
jb
push
loopne
in
outsl
cmp
leave
mov
sbb
lds
lret
cmp
or
dec
shlb
dec
imul
sbb
iret
cmp
xchg
scas
sub
loop
in
int
dec
mov
jno
or
inc
scas
out
xchg
adc
lea
push
sub
push
popf
inc
mov
xchg
imul
xor
sub
jb
mov
shl
lods
mov
stos
iret
daa
out
test
cmp
or
xchg
ljmp
mov
inc
in
sub
inc
leave
daa
cmp
adc
jl
xchg
dec
jmp
rorl
lcall
lretw
sub
cmpsl
in
dec
mov
push
dec
and
call
pop
in
loop
cmpsl
sti
loope
sub
int
lods
outsb
loope
dec
pop
or
dec
stos
dec
or
outsl
stos
aas
sub
mov
or
and
mov
stos
pop
shl
cs
xor
and
push
inc
inc
test
sub
arpl
add
pop
dec
dec
or
insl
popl
or
jns
jne
sub
outsl
std
pop
push
dec
pop
jns
sbb
or
mov
jl
sub
outsl
scas
iret
mov
sub
data16
xor
lret
iret
or
movsl
adc
dec
sbb
imul
mov
test
xor
add
mov
imul
push
pusha
inc
lods
sub
test
lea
cs
dec
iret
jbe
stos
mov
daa
adc
or
lea
cmp
dec
stos
imul
xchg
lds
mov
dec
xchg
mov
adc
int3
push
inc
lcall
js
xchg
xchg
popa
int
das
sub
push
dec
jns
sbb
cmpsw
sahf
ljmp
popf
xchg
leave
adc
aas
orb
or
dec
xor
or
das
or
lcall
dec
ljmp
out
iret
pop
addr16
aaa
dec
mov
lret
dec
pop
pop
outsl
sbb
cmpsl
or
dec
orl
dec
scas
test
pop
or
fld
mov
xchg
ret
dec
and
shrb
add
pop
lods
cltd
mov
add
and
test
jmp
int
dec
sub
add
aaa
lret
shrb
mov
adcl
out
dec
jne
sbb
out
or
cld
daa
xchg
xor
xchg
addr16
pop
bound
stos
inc
push
out
xchg
sbb
out
lret
jp
int
bound
dec
cmp
add
xor
sbb
lea
add
stos
int
mov
rclb
dec
imul
and
stos
jmp
xchg
adc
lahf
jmp
push
fisubrs
sbb
outsl
sarb
into
bound
or
push
cwtl
push
and
and
sub
lret
loop
pop
and
sub
fistps
bound
jns
sti
test
push
xchg
or
jo
insl
scas
cmpl
dec
lea
fists
and
out
jge
popf
and
xor
xchg
mov
dec
arpl
or
push
inc
xchg
inc
pop
rcl
cmpsl
fxch
or
stos
addr16
push
cmp
adc
daa
outsb
scas
adc
adc
xchg
inc
stos
test
or
rorl
addr16
dec
mov
bound
add
out
bound
daa
mov
test
pop
outsb
xchg
or
xchg
mov
scas
pushf
or
outsb
sub
push
push
dec
lods
lea
pop
ret
jb
cmp
outsb
insl
insb
pop
jns,pn
sbb
stos
dec
cmp
xor
jge
adc
aas
leave
rcl
in
rorl
je
push
pop
repnz
mov
arpl
loope,pn
imul
mov
add
int3
popa
xor
mov
jae
fildl
cmpsl
in
out
jp
das
pop
test
and
inc
mov
rcrl
or
lret
insl
xchg
arpl
add
inc
into
mov
jecxz
mov
push
mov
sub
shrb
sub
or
cmpb
popl
push
outsb
sbb
out
les
push
sbbl
cs
jp
imul
adc
daa
and
fsubrs
adc
dec
cs
sbb
jns
imul
push
imul
adc
add
push
sub
movl
sub
lds
sarb
psrad
xor
loop
inc
fadds
inc
push
dec
stos
sub
mov
cmovp
pop
test
sub
das
sub
sub
aas
mov
adc
or
jg
iret
nop
jo
jl
jns
scas
xchg
sbb
jns
sub
sbb
leave
xchg
pop
inc
adcb
lea
clc
mov
popf
or
leave
outsb
movsl
ljmp
dec
fucomip
enter
movsl
sub
shlb
lret
pop
test
clc
xchg
out
repnz
cmp
mov
mov
jno
xor
bound
sub
loope
pop
fmuls
mov
ret
pop
xchg
mov
xor
cs
pop
arpl
out
icebp
push
lea
in
xchg
xchg
mov
test
jae
lcall
jle
stos
sahf
daa
in
scas
sbb
sub
push
lods
out
dec
push
dec
mov
nopl
inc
out
pop
mov
into
aas
negl
data16
inc
inc
push
iret
les
mov
or
jge
dec
fidivrs
mov
pop
clc
sbbl
jns
sub
fidivs
shl
into
mov
cltd
insb
xor
outsb
cltd
adc
pushf
push
inc
push
adc
test
pop
add
xchg
into
pop
stos
push
sbb
outsl
iret
ljmp
pop
int3
in
out
loop
pop
jne
ljmp
sahf
sub
add
and
sub
mov
jmp
cs
in
sub
add
adc
into
cmp
sub
pop
ret
or
inc
sub
mov
loopne
movsl
stos
xchg
or
movsl
out
push
ljmp
pop
dec
icebp
jbe
cld
jnp
int3
divw
push
mov
loope
sub
cmpsl
test
cmp
lods
sub
imul
cld
femms
cmp
out
mov
repnz
xchg
xorl
out
insl
mov
pop
push
mov
cmp
cs
out
xchg
and
stos
and
rcr
pop
imul
mov
lret
out
std
pop
in
dec
arpl
aad
or
jmp
mov
scas
push
dec
sub
lret
sbb
rsm
aam
sub
or
xor
cmpsl
test
inc
cld
sbb
into
adc
adc
insl
out
out
adc
outsl
inc
loopne
popa
dec
stos
int
dec
mov
out
daa
sub
inc
mov
lret
jge
push
lods
pop
xor
adc
sub
lret
or
mov
loope
sub
inc
loope
ljmpw
fadds
mov
imull
lods
daa
test
mov
add
pop
ljmp
ljmp
lea
iret
sbb
cmp
ljmp
cmp
addr16
adc
push
sub
insb
push
and
sub
loopne
or
mov
jns
out
outsb
xor
inc
outsl
and
testl
or
xchg
jmp
insl
pop
fldcw
or
pop
loopne
adc
int
pop
mov
mov
addr16
iret
loop
fsubr
adc
rorl
leave
orl
ja
cltd
addr16
orb
push
xor
pop
jmp
imull
cltd
out
lret
shll
dec
in
pusha
or
adc
push
xchg
ret
stos
loope
lret
push
ljmp
or
stos
out
sub
pop
dec
or
filds
das
dec
mov
stos
addr16
rcrb
data16
outsl
in
lods
xor
stos
out
dec
nop
xor
push
les
or
repz
fildl
jbe
lock
enter
arpl
stos
sub
lcall
and
jmp
fwait
cs
dec
jo
or
rorl
clc
pop
sbb
pop
sbb
out
into
cmpsl
xchg
out
push
iret
pop
leave
lret
loop
out
out
movsl
int
and
or
inc
jns
dec
inc
push
stos
pop
dec
and
out
notb
and
sub
xchg
pop
sub
scas
and
ljmp
data16
push
cwtl
aad
dec
lret
or
and
mov
imul
sahf
mov
xchg
push
mov
out
add
lret
mov
mov
mov
insl
ja
or
lcall
test
dec
inc
fldln2
daa
inc
adc
pop
dec
or
dec
nopl
or
out
jnp
loopne
je
into
cwtl
filds
imul
push
or
mov
lea
scas
push
mov
out
leave
cwtl
push
lret
ret
data16
mov
in
mov
xor
push
mov
mov
bound
aaa
pop
jecxz
pop
cltd
xchg
arpl
cs
loope
xor
dec
pop
scas
insl
mov
imul
daa
aas
std
adcl
push
cltd
xchg
sti
and
dec
adc
shlb
and
iret
dec
cmp
add
cmpsb
fldcw
stos
dec
lds
cs
mov
data16
arpl
add
dec
sti
insl
into
dec
push
xchg
jle
lods
arpl
out
orl
lret
jmp
test
jae
outsl
sub
mov
fmull
imul
enter
pushl
imul
dec
daa
xchg
mov
sub
pushf
xchg
pop
mov
jno
sub
sahf
sahf
mov
inc
in
xchg
inc
dec
sub
push
arpl
loope
push
iret
mov
mov
inc
cmp
lea
cmp
int
add
and
sub
push
sub
sub
fisttps
cs
or
sub
scas
mov
pop
and
jmp
mov
inc
imul
outsl
mov
push
shrl
sub
repnz
add
lret
sub
int
mov
mov
sub
push
enter
lods
call
push
adc
lahf
sub
or
bound
scas
jge
in
mov
mov
jecxz
dec
arpl
pop
sub
aas
push
daa
push
jb
add
into
dec
test
repz
pop
insl
sub
sub
ret
imul
out
adc
sbb
dec
mov
repz
sti
pop
inc
scas
icebp
push
lret
or
in
movsl
sub
or
jp
lret
xchg
push
lea
out
mov
std
call
mov
cld
ret
loop
scas
dec
sub
sub
lock
or
dec
xchg
jno
or
and
int
dec
jmp
mov
nop
push
cmpsb
imul
and
adc
pusha
in
popf
scas
cmp
scas
push
dec
inc
adc
cli
sbb
mov
mov
popf
jmp
pop
insl
pop
sub
loop
xor
mov
push
or
or
lock
into
or
cs
dec
dec
mov
mov
imul
mov
stos
mov
bound
inc
outsb
insl
sub
int
adc
sub
leave
mov
jecxz
cmp
jbe
sbb
sbb
sub
dec
push
push
pop
imul
mov
aaa
xor
in
lock
mov
pop
stos
daa
add
loop
ljmp
xor
repnz
ret
cli
adc
lret
inc
sbb
pop
xchg
cmpsl
pop
outsb
push
leave
or
pop
jg
xchg
pusha
mov
jmp
jle
insb
sub
into
pop
in
fistpl
lods
dec
lret
dec
ljmp
lds
lcall
push
xchg
push
jmp
imul
inc
xor
xor
jg
push
push
ret
mov
mov
fst
or
lret
out
adc
cmpsb
nop
mov
enter
cmpsl
mov
sub
dec
stc
es
imul
out
xchg
outsl
adc
jo
insb
test
sbb
mov
or
jl
popl
outsl
stos
mov
loop
popa
das
insl
xchg
pop
fadds
test
xchg
nop
cltd
xchg
fwait
inc
lret
mov
or
call
int3
subl
adc
jmp
pop
aaa
pop
dec
push
cmp
or
push
sub
pop
xchg
adc
lea
or
add
sub
imul
loope
or
out
fs
sarb
test
dec
push
mov
jmp
pop
or
dec
dec
mov
scas
cs
xchg
mull
or
jno
adc
push
lods
enter
pop
ljmp
xchg
sub
or
pop
xlat
ljmp
lods
stos
add
or
in
cs
dec
int
nop
adc
jae
add
mov
insl
arpl
cmpsl
ret
mov
or
popl
enter
pop
js
out
fs
iret
pop
ret
push
dec
cmp
mov
adc
xchg
inc
xchg
sub
es
ret
xchg
mov
ret
lret
call
inc
into
outsl
ljmp
subl
push
loop
dec
out
fmul
imul
add
jns
outsb
imul
icebp
mov
leave
iret
mov
cmp
int3
dec
cwtl
insb
or
xchg
adc
sub
imul
mov
fdiv
jbe
dec
jns
mov
aaa
sbb
repnz
pop
enter
lea
int
jo
adc
push
loopne
ret
cs
push
ret
cmpsb
dec
sub
xchg
inc
mov
loope
adc
pop
stos
dec
cmp
xchg
pop
out
inc
cmpsl
stos
out
daa
into
ret
std
lret
pop
outsl
test
and
cmp
mov
test
out
jmp
or
mov
mov
pop
ljmp
jp
xchg
sub
outsl
xchg
lret
nop
scas
dec
imul
int3
mov
jg
int3
inc
pop
or
push
test
xchg
pop
cmp
outsl
daa
sub
inc
push
inc
or
test
arpl
sub
arpl
add
mov
lcall
decb
or
in
stos
sahf
add
xchg
mov
xchg
orl
xchg
inc
inc
ret
xor
outsb
sub
sub
stos
iret
out
out
dec
cmp
adc
int
pop
or
leave
sub
ss
stos
sbb
in
daa
lret
int
or
lods
das
dec
xchg
jle
repnz
dec
fimuls
mov
cs
dec
or
test
out
or
pop
push
pminsw
into
jne
clc
add
and
lret
out
push
add
dec
sub
lods
push
jp
mov
add
push
xlat
sub
pop
mov
stc
movsl
sarb
popa
pop
out
sub
out
lret
pop
jns
add
jecxz
scas
addr16
scas
pop
jmp
lcall
ljmp
int3
mov
iret
jmp
or
les
pop
xorl
rorl
movsl
push
out
fcmove
or
xor
dec
loope
dec
pop
adc
daa
scas
repz
addr16
or
dec
adc
mov
sub
repz
mov
ljmp
bound
mov
or
lea
dec
aas
mov
push
fstl
sbb
adc
sub
push
leave
jns
jmp
stos
imul
test
dec
outsb
inc
mov
sub
int
lahf
lret
xchg
imul
or
dec
loop
scas
pushf
mov
xor
lcall
pop
xchg
mov
in
outsl
mov
jmp
mov
adc
addr16
into
xor
leave
lcall
mov
out
mov
push
cmp
leave
lea
inc
lods
dec
roll
xor
ljmp
pxor
rcrb
mov
lret
sub
test
add
sub
out
mov
push
popf
mov
fsubrl
dec
mov
or
sub
cs
bound
mov
pop
sbb
in
scas
outsb
mov
or
addr16
adc
in
jmp
das
bound
and
cmpsl
and
mov
pop
imul
mov
out
dec
stos
sahf
mov
and
or
fsubrl
leave
dec
or
scas
push
lret
cmc
lds
sahf
inc
mov
and
test
xchg
stc
jnp
or
incl
inc
jmp
adc
or
inc
or
arpl
xor
push
ljmp
or
cmovl
loop
adc
in
out
inc
mov
or
out
and
loope
fcmovbe
sub
fnstenv
daa
outsb
inc
xlat
xor
fs
stc
mov
xchg
outsb
mov
mov
cli
lods
repz
lret
mov
sub
leave
sub
add
stos
push
daa
fiaddl
xchg
dec
jmp
sahf
das
repz
into
stc
les
dec
mov
or
inc
test
imul
fidivrl
inc
imul
jno
xor
or
sub
pop
orl
cmp
das
out
imul
jg
cmp
cmpsl
xchg
mov
testb
out
jmp
mov
iret
mov
insl
pop
test
loop
das
shrl
dec
jne
or
lret
test
cmpsl
pop
xchg
fwait
sub
lret
enter
pop
fbld
push
sbb
or
icebp
adc
loop
incl
sbbl
or
popa
push
out
lret
xorl
loop
dec
outsl
cwtl
jmp
mov
test
add
out
loopne
orl
or
gs
push
push
les
cmpsl
aam
inc
xchg
insl
fistpll
repnz
lret
push
daa
leave
das
dec
imul
daa
movb
xor
inc
orb
imul
out
mov
sub
pop
xchg
push
inc
cmp
mov
rol
out
addr16
pop
out
inc
data16
or
ret
mov
mov
add
scas
lods
pop
jmp
stc
ror
xchg
test
rorl
out
push
and
test
and
sbb
dec
push
pop
add
pop
inc
mov
test
pop
sub
adc
mov
daa
pop
pushf
scas
or
push
push
xor
out
dec
lret
or
fsubrs
imul
sbb
add
and
sub
jge
test
xor
insl
sub
mov
int
push
gs
pop
fimull
push
scas
push
testl
sub
mov
cmovle
jns
sub
imul
mov
sub
lret
sti
jmp
leave
sbb
xchg
into
iret
sarl
and
ds
sbb
pop
movsl
ljmp
scas
out
or
movsb
dec
sub
add
out
icebp
testb
iret
insl
outsl
iret
push
js
mov
or
push
cwtl
xchg
sub
insl
push
pop
jmp
xlat
pop
jno
dec
into
fildl
dec
sahf
push
push
int
rclb
xchg
adc
dec
sub
xor
adc
lods
sub
mov
adc
xor
pop
out
xchg
inc
scas
scas
jmp
mov
dec
fistpl
sub
add
out
cmp
sub
fsubrp
addr16
shl
cmp
dec
pusha
dec
xor
pop
rol
imul
scas
mov
imul
addr16
pop
xchg
in
sbb
dec
mov
icebp
in
xchg
lret
mov
loope
jbe
cs
mov
mov
insl
fdivl
jae
push
add
das
adc
sahf
sub
sbb
push
mov
pop
xchg
out
adc
and
leave
cmp
inc
cs
loop
stc
imul
ja
sub
pop
stos
fucomip
push
adc
xchg
push
out
xchg
lahf
in
dec
cmpsb
push
scas
str
or
lods
sub
and
sub
cmpsl
lds
or
adc
dec
mov
pop
inc
adc
std
pop
dec
xor
dec
sub
xchg
scas
jmp
or
dec
test
sub
ds
mov
hlt
or
push
lock
popf
adc
push
pop
repnz
mov
adc
push
int
daa
mov
xchg
loopne
xchg
xchg
ficomps
mov
out
dec
sbb
xchg
fmull
or
xchg
imul
and
sbb
inc
or
cs
jne
dec
wrmsr
lea
loope
imul
mov
dec
sahf
dec
test
js
dec
pop
pop
out
out
sub
push
cld
sahf
xorb
pop
test
or
mov
daa
ljmp
add
xor
lret
adc
dec
leave
pop
push
cld
dec
mov
or
jl
mov
add
pushf
lock
packuswb
inc
add
push
or
push
cld
in
adc
stos
imul
dec
filds
adc
sub
sub
or
lret
mov
jg
aaa
dec
push
out
xor
insl
dec
scas
sbb
or
sub
sti
adc
test
daa
les
les
cmpsl
sbb
or
xor
dec
or
outsl
xor
movsl
dec
ljmp
push
pop
mov
sub
dec
iret
popl
lea
jmp
sub
jns
stos
ds
addr16
mov
xorb
xchg
adcl
leave
dec
ret
sub
data16
idiv
outsl
adcl
sub
int3
adc
mov
or
push
sub
xchg
push
scas
lock
scas
out
mov
mov
adcb
push
in
sbb
and
jmp
imul
xor
or
out
into
inc
insl
sub
cmp
cmp
or
dec
xchg
cwtl
scas
icebp
mov
sub
out
leave
push
push
xchg
sbb
mov
insl
jmp
dec
stc
dec
mov
adc
mov
jo
scas
mov
dec
loopne
adc
adc
shrb
jbe
loope
testl
daa
popf
add
pushf
stos
inc
lods
sub
jmp
inc
ljmp
int
out
addr16
daa
dec
inc
mov
pop
dec
mov
xor
lret
or
sbb
in
iret
sub
lds
addr16
or
jle
cmp
out
fwait
loopne
pushf
or
shl
push
jno
sub
lret
rorb
dec
jno
lret
lods
jmp
aas
dec
js
test
inc
outsl
jmp
shlb
sub
xchg
mov
imul
icebp
xor
jmp
inc
adc
push
fsubrl
adc
sbb
inc
adc
inc
data16
mov
lods
push
dec
fistpll
imul
pop
repz
faddl
or
rolb
sub
icebp
aas
ljmp
inc
dec
sub
or
fwait
mov
push
jg
pop
ffree
loope
dec
jp
or
mov
pop
out
push
lods
jne
dec
adc
xchg
xchg
stos
std
sbb
mov
or
or
adc
test
subl
dec
pop
pop
das
imul
inc
scas
ret
or
xor
ljmp
ficoml
or
sub
shl
cmpsl
add
shrl
out
or
iret
scas
adc
adc
dec
stos
pop
pop
cld
loop
sub
popa
mov
sub
mov
pusha
lods
int
pop
cltd
and
out
xor
subl
das
int
inc
sbb
and
lods
or
lret
push
dec
test
rclb
in
stos
imul
mov
pop
inc
pop
fcompl
icebp
ljmp
push
test
loope
insl
jb
xchg
add
in
fwait
adc
clc
push
sbb
adc
dec
dec
jmp
xchg
lret
add
pop
xchg
xchg
int
iret
mov
inc
outsb
out
test
add
insl
out
sub
sbb
mov
loopne
adc
test
or
sub
scas
or
into
les
out
lret
loope
iret
int
pop
dec
xor
sub
pushf
mov
adc
dec
dec
outsl
inc
sub
or
pushf
outsb
fcmovne
and
add
scas
or
jbe
mov
mov
out
loopne
test
mov
scas
push
push
lret
mov
push
dec
imull
add
iret
dec
scas
dec
xchg
das
mov
movsb
xor
xchg
out
iret
sub
pop
or
dec
jmp
insl
leave
push
adc
jp
in
and
rolb
test
jecxz
inc
addr16
adc
int
jns
mov
dec
inc
add
sub
dec
popa
lret
push
outsb
out
mov
dec
std
sub
inc
mov
push
lcall
add
adc
mov
imul
push
daa
nop
pop
movsl
lret
das
cmpsl
xchg
out
xchg
bound
daa
jb
fwait
and
lea
add
sub
mov
jns
shlb
adc
xor
clc
imul
scas
push
daa
or
pop
inc
xchg
mov
stos
subl
push
into
or
mov
ljmp
or
pop
push
arpl
andl
sbb
or
arpl
les
sub
add
dec
cmp
add
add
xchg
or
lock
sub
hlt
loop
mov
push
push
xor
scas
mov
cmpsb
or
mov
inc
cmp
mov
enter
dec
mov
insl
mov
rcll
popa
adc
mov
bound
scas
and
jge
shlb
js
cmpsb
sarb
sti
mov
imul
lret
in
pop
jp
test
cmpl
mov
pop
add
and
std
pop
insl
pop
icebp
mov
jle
cmc
ja
lret
movsl
lret
leave
and
je
lods
jg
int
mov
insb
insl
iret
rcl
and
imul
lret
or
data16
imul
jge
insl
sub
add
xchg
adc
mov
pop
fiaddl
out
xchg
out
ljmp
xchg
inc
leave
xorl
cmp
mov
sub
fcoml
add
out
sub
and
and
push
dec
mov
insl
inc
xchg
adc
test
movsl
xor
lret
lahf
push
subb
repnz
sbb
xlat
aad
stos
test
daa
arpl
inc
fsubp
lea
test
lea
movsb
imul
sub
in
jge
bound
push
sbb
inc
jge
les
addr16
or
mov
bound
lret
popa
sbb
push
dec
mov
sbb
in
inc
push
lock
jmp
icebp
fisttpl
or
arpl
ret
repz
xchg
push
scas
imul
inc
scas
int3
das
in
fisttps
pop
int
rorl
out
loope
outsl
je
test
jmp
mov
mov
daa
lret
or
arpl
inc
sub
push
dec
int
imul
int3
out
ret
dec
pop
dec
lds
push
aam
and
mov
mov
cmpsb
pop
dec
xchg
push
movsb
add
xchg
insl
push
dec
mov
rorl
jmp
mov
jns
testb
shrb
mov
push
bound
ljmp
push
dec
adc
stos
mov
mov
xchg
mov
mov
mov
cmp
xor
imul
pop
enter
ljmp
rclb
std
sub
rep
maxps
jge
nop
aam
out
scas
das
adc
mov
outsl
enter
pop
pushw
shrl
out
or
cmc
insl
push
xor
ror
cld
addr16
lea
sub
cmp
outsb
cmpsl
das
sub
and
lret
dec
push
fsubrl
test
inc
add
and
adc
push
push
sbb
jp
sub
stos
inc
and
rcr
lods
add
aas
mov
inc
sbb
sub
iret
push
jle
add
inc
out
add
and
dec
ljmp
repz
inc
out
into
sub
jae
leave
adcl
pop
lock
push
nop
std
addr16
pop
or
or
adc
sub
gs
or
sahf
sub
iret
jns
into
or
pop
out
xor
stc
jp
jg
push
push
or
jno
pop
dec
aam
xor
scas
add
add
out
sbb
add
or
push
and
xor
out
outsb
scas
cmp
scas
xor
ljmp
sbb
jbe
mov
xor
mov
sahf
das
testl
sbb
adc
sub
sub
notb
lret
xchg
js
aas
sub
lods
nop
cs
pusha
add
pushf
imul
outsb
in
imul
cmc
daa
cs
shlb
mov
and
stos
or
or
or
call
les
into
movsb
dec
xchg
or
pop
jl
adc
lds
or
cmp
sub
xor
sub
mov
jmp
dec
adc
mov
cmp
jns
mov
mov
xchg
xor
lds
out
scas
out
stos
xor
cs
lahf
sub
dec
enter
out
push
cltd
into
mov
fsubs
cmovge
or
insw
or
xchg
scas
pop
adc
push
cmpsl
inc
loopne
pop
adc
into
loop
int
adc
add
out
addr16
push
push
jo
out
or
shll
xchg
xchg
outsl
jbe
cmp
das
in
dec
xchg
push
rcl
data16
fsubrs
dec
push
xchg
xchg
sub
jmp
fcoml
insl
popf
loop,pn
pop
and
inc
and
xorl
sahf
push
int
cs
or
add
ljmp
jns
fisubrs
sub
lods
mov
aaa
jle
fistl
pop
dec
mov
push
xor
cmp
dec
mov
mov
push
add
mov
dec
or
and
adc
push
sub
add
adc
hlt
lret
lea
jae
mov
les
aad
xchg
lock
adc
cmp
sbb
mov
dec
pop
dec
xchg
into
insb
lea
push
addr16
lea
stos
xchg
mov
sub
mov
xchg
xchg
stos
pop
mov
stos
cmpsl
and
ljmp
add
xchg
mov
cs
dec
push
push
dec
fwait
mov
xchg
test
fisttpl
and
ss
loop
mov
fstl
test
xchg
cmp
repnz
dec
in
sub
mov
ficoms
adcb
je
les
and
jnp
xchg
mov
push
xchg
leave
adc
xchg
jg
xchg
dec
scas
push
xchg
mov
popfw
lahf
fwait
xchg
fnsave
in
popf
aad
mov
dec
popf
iret
mov
mov
stc
decl
xchg
pop
je
add
jmp
addr16
sub
adc
rorl
adc
out
cli
aaa
cmp
mov
and
lret
imul
daa
or
shrl
jmp
in
dec
sahf
ret
pop
mov
test
sub
loop
imul
lret
or
insl
pop
xchg
or
push
outsl
lea
sub
mov
cs
lret
testb
jb
cs
and
packsswb
stos
push
sub
mov
sub
leave
loopne
cwtl
dec
les
push
xor
pop
out
lahf
rol
xchg
movsb
push
bswap
xor
leave
dec
repz
sub
lds
cmpsl
les
or
aam
popl
pop
je
dec
or
subl
and
dec
shlb
or
lea
aas
sarl
xchg
mov
sahf
xchg
stos
outsl
mov
repnz
cmpsl
dec
sub
icebp
out
inc
mov
or
ljmp
daa
test
or
fisttpll
inc
lea
adc
push
adc
cmpsb
lods
mov
inc
push
lret
das
or
sarb
add
sub
cmp
dec
lret
data16
daa
stos
fimuls
and
jb
dec
leave
xchg
mov
xchg
imul
scas
das
add
push
imul
icebp
adc
imul
das
push
adc
mov
sub
push
dec
xor
subl
repnz
or
in
iret
outsb
xor
test
into
sub
lods
or
arpl
mov
loope
out
orb
pop
inc
jle
xor
data16
scas
push
mov
cmovg
push
aad
push
push
mov
popa
leave
stos
lds
in
test
inc
lahf
dec
mov
loop
jmp
out
call
loopne
lea
imul
insb
and
push
out
dec
lock
sbb
mov
and
imul
lock
ds
lods
outsb
cmpsb
fwait
sahf
rorl
out
add
sti
lock
addr16
jl
jno
outsl
scas
iret
fadd
lods
push
xchg
stos
sub
adcl
or
adc
scas
dec
sub
jae
daa
push
sub
sub
and
sub
mov
mov
dec
arpl
mov
iret
dec
sub
dec
mov
mov
dec
pop
mov
movsb
sub
lods
test
nop
hlt
xchg
pop
add
adc
lret
dec
sahf
into
out
or
lea
rolb
js
lods
in
sub
mov
xchg
adc
popa
insl
out
leave
iret
das
je
or
pop
sub
pop
or
dec
in
test
ljmp
inc
mov
sbb
test
aas
loope
int
call
or
pop
mov
push
in
mov
mov
mov
out
cmp
addr16
in
aam
lret
xchg
and
lods
arpl
inc
dec
add
dec
in
pop
adc
xor
sub
aad
out
sub
daa
call
jno
lea
lods
or
adc
test
into
arpl
loope
sub
push
dec
dec
inc
int
out
arpl
add
imul
xchg
jns
dec
sarl
pop
sarb
mov
lret
sbb
mov
lea
cmpsl
daa
cs
arpl
push
mov
sub
mov
or
inc
add
sub
or
fistps
sbb
scas
pop
rolb
jg
push
lret
bound
push
push
imul
hlt
jmp
inc
call
into
imul
or
cmovg
rolb
xor
sub
dec
sub
mov
addr16
scas
dec
push
rcl
faddl
dec
xor
cli
fmull
lret
sub
or
xchg
cmpsb
loop
cmp
sbb
insl
dec
jecxz
imul
sub
daa
divl
call
pop
loop
cmpsl
sbb
das
lret
adc
and
out
scas
fwait
sub
adc
jmp
or
inc
inc
movsb
mov
out
dec
adc
lods
mov
xor
or
pop
int
push
pop
sbb
imul
stos
sub
scas
scas
fmulp
inc
xchg
push
jns
xor
out
imul
test
lea
jns
lret
push
iret
sbb
dec
imul
dec
xor
mov
data16
outsl
arpl
inc
rorb
lret
imul
shll
rsm
pop
insl
adc
negl
scas
lahf
dec
dec
pextrw
faddl
xorl
popa
mov
or
das
shrb
jne
cs
dec
cmp
xor
push
xchg
mov
adc
or
movsb
dec
stos
out
sbb
or
jmp
ss
test
mov
cmp
mov
fs
dec
stos
fsubrp
sbb
shlb
sbb
adc
xor
adc
bound
lods
sub
leave
jb
roll
mov
or
cmpsl
and
out
lea
sub
mov
movsl
dec
fdivrl
enter
das
xor
mov
shrb
pop
xor
insl
mov
dec
outsb
adc
mov
xor
sarb
shl
pop
dec
push
jae
sbb
dec
fimull
xor
pushf
dec
in
mov
mov
xchg
adc
adc
ljmp
xor
push
jp
inc
sarl
pop
into
out
dec
push
add
pop
or
jb
adc
ds
and
xchg
call
das
stos
pop
sub
mov
sbb
lcall
int3
dec
jge
mov
mov
loop
scas
ret
inc
mov
push
pop
cmp
mov
add
adc
lds
jge
rcrl
scas
imul
mov
mov
loop
jae,pn
and
lret
or
add
inc
pop
pop
sbb
mov
sub
test
xchg
mov
sbb
push
sub
xor
adc
out
sub
addr16
mov
cmpsb
jmp
sahf
or
push
scas
in
mov
adc
insl
iret
lcall
xchg
add
xchg
stos
sbb
or
pop
stos
out
dec
xlat
or
and
sub
lret
jo
repnz
mov
lret
pop
lock
enter
out
dec
into
lret
fisubrl
and
jmp
xchg
sub
pop
add
or
mov
mov
jmp
jp
sbb
dec
pop
arpl
or
cmp
out
push
jg
cmp
loopne
jp
outsb
adc
test
push
pop
test
icebp
push
out
testl
adc
lahf
stc
or
sub
out
subb
adc
dec
scas
insl
mov
push
das
cmc
sub
cs
push
arpl
movsb
adc
imul
mov
pushf
stc
pop
jb
dec
bound
xor
maxps
jp
out
xor
jg
pusha
jnp
xor
xchg
push
and
fsubrs
cmp
orl
pop
sub
mov
out
rorb
orl
inc
aas
add
sbb
mov
or
cs
xchg
adc
mov
and
dec
inc
and
movsb
cs
pushf
and
sbb
mov
dec
arpl
push
jecxz
ror
xor
xchg
pusha
dec
xor
dec
or
test
mov
inc
lret
mov
frndint
ficoml
push
or
nop
fs
das
mov
sub
cmovl
xor
xor
cs
jge
inc
dec
jmp
or
push
dec
xor
mov
shrb
insl
jg
xchg
sub
movsb
inc
mov
ljmp
ds
jmp
out
icebp
testl
push
or
mov
adc
or
dec
lock
xchg
jns
imul
push
sub
inc
mov
jo
jmp
daa
icebp
or
inc
inc
xor
or
sbb
daa
ljmp
pop
add
mov
sbb
testl
fsubs
xchg
into
fdivl
insl
out
inc
or
or
adc
pusha
sub
outsb
pushf
mov
sub
mov
adc
adc
or
dec
push
out
lods
insl
test
inc
jmp
in
hlt
xor
or
data16
jmp
inc
test
out
outsl
ret
rcr
or
int
shll
mov
dec
or
sub
add
imul
jne
fcoms
das
cmpsl
hlt
cvtpi2ps
test
pop
bound
out
imul
daa
leave
loopne
and
icebp
sub
out
outsl
inc
mov
stos
xchg
in
cmp
dec
loop
pushf
rcr
mov
lret
dec
movsl
imul
xchg
push
push
cmpb
dec
scas
inc
out
sbb
data16
pop
test
insl
movsb
cmp
xor
out
sbb
daa
or
data16
and
lods
jmp
or
or
inc
adc
test
test
xchg
bound
dec
nop
adc
dec
sub
adc
mov
nop
pop
xchg
sub
fisttps
nop
xor
fstps
outsb
jmp
repz
inc
jmp
fsubl
push
mov
jno
lods
lds
fcoms
pop
xchg
test
enter
sti
or
adc
popf
repz
jbe
cmp
and
popa
loop
jmp
sub
pop
andl
loope
push
das
test
lods
sub
icebp
pusha
iret
dec
int
icebp
inc
scas
repnz
outsl
pop
jbe
mov
cmp
shrb
sub
subl
jmp
iret
dec
ljmp
adc
pop
sbbl
sub
jb
lods
dec
xchg
mov
scas
out
scas
stos
jmp
mov
and
fwait
js
sub
and
cli
cld
sti
test
xchg
addr16
int
jb
cmp
dec
call
inc
daa
push
lret
aaa
subl
insb
cmp
scas
iret
inc
push
pop
lret
sub
sub
sahf
pop
out
lock
notb
xchg
or
cmpsl
testb
test
adc
subl
stc
inc
out
stos
mov
sbb
sub
mov
ljmp
push
cmp
out
or
and
sub
jmp
cld
ljmp
ud2
mov
or
dec
or
mov
lea
and
add
sbb
xchg
dec
cli
das
loop
sub
in
mov
mov
or
out
inc
add
mov
pop
imul
in
iret
push
sub
cwtl
rolb
arpl
mov
mov
dec
dec
push
add
push
push
aaa
mov
inc
cli
jmp
fadds
iret
lods
bound
bound
ljmp
mov
mov
dec
lret
aas
das
daa
adc
xchg
adc
cmpsb
mov
and
dec
bound
fdivrl
icebp
sub
mov
stos
cmpsl
push
push
sub
push
cmp
mov
or
add
imul
or
pushf
add
js
iret
addr16
or
lods
sub
pop
mov
clc
mov
push
jmp
dec
or
or
dec
nop
int
fadd
xchg
dec
into
push
jmp
out
cmpsl
fidivl
std
mov
inc
dec
test
fsubrs
ror
lret
iret
mov
es
mov
in
jne
jnp
xchg
pop
out
cmp
fisubrs
dec
pop
loopne
or
outsl
cld
ret
cs
adc
dec
leave
sbb
dec
das
unpcklps
or
lret
dec
arpl
mov
push
dec
sarb
sub
push
sbb
flds
scas
pop
mov
or
cmpsl
mov
xlat
push
mov
test
xchg
in
xlat
cs
mov
dec
dec
loop
pop
int
mov
fisttpl
or
arpl
inc
outsb
adc
push
lret
stc
dec
mov
push
inc
shrl
xor
out
scas
into
dec
outsl
xchg
push
test
imul
inc
das
dec
mov
insl
jo
sub
mov
mov
and
pop
out
out
mov
sub
stc
pushf
push
les
pop
push
ret
xchg
mov
dec
cmp
out
jae
stos
xorl
in
dec
push
mov
movl
inc
sub
in
adc
dec
push
outsb
lret
jecxz
jne
dec
insl
in
addr16
xor
hlt
bound
test
adcl
or
jae
addr16
pop
int
cmpsl
fcompl
pop
test
mov
xchg
lret
fwait
pop
js
mov
stos
sub
pop
sub
in
idivl
sub
adc
pop
ret
and
xchg
std
pop
adc
sbb
dec
sub
sub
add
int
outsl
imul
or
or
dec
xchg
lret
mov
mov
dec
push
mov
jb
aas
dec
inc
mov
and
lret
stos
pop
pop
xlat
outsl
adc
ds
xor
popf
sub
inc
mov
fwait
cmpsl
xchg
xor
or
xor
or
inc
mov
inc
sbb
dec
xchg
or
dec
pop
fcmove
mov
cmpsl
push
jmp
mulb
js
dec
in
cmp
cs
shll
dec
dec
addr16
mov
mov
or
es
jb
popa
push
xor
push
mov
mov
outsl
shlb
dec
sbb
sbb
inc
mov
dec
mov
in
pop
pusha
bound
outsb
and
lret
add
push
push
sub
mov
insl
push
push
or
orl
mov
shll
adc
adc
pop
push
xor
or
addr16
pop
inc
fmull
stos
or
sub
xchg
cmpsb
imul
out
or
xchg
mov
mov
sub
dec
data16
mov
orl
jns
mov
or
imul
int
add
sbb
das
leave
pop
push
addb
pop
dec
nop
dec
sub
push
sbb
gs
stos
xchg
jnp
xor
xchg
jno
ljmp
imul
mov
or
lea
data16
les
dec
stos
mov
dec
out
sub
cmp
xchg
xchg
jae
fstp
or
mov
shll
mov
xchg
cmpsb
dec
lcall
dec
rclb
or
dec
in
push
jge
insl
jne
mov
push
dec
test
fxch
or
adc
pop
lret
cmc
mov
in
int
xchg
daa
or
ror
stos
dec
shrl
xor
add
out
lret
into
lea
dec
sub
mov
scas
out
mov
movsl
and
jo
lret
inc
mov
addr16
into
xchg
imul
lea
xchg
adc
movsl
sub
ficompl
iret
pxor
jmp
push
clc
andb
scas
xor
fimuls
xchg
test
dec
scas
inc
pushf
push
mov
and
lods
xor
sub
push
cmp
jmp
jae
pop
movsl
or
mov
sub
or
aas
stos
lret
les
test
into
or
adc
pushf
lret
jmp
inc
inc
xlat
insl
cwtl
inc
lea
nop
stos
pop
mov
outsl
sub
cmp
pop
lods
insl
scas
dec
sub
ss
sub
fmull
mov
sbb
dec
xchg
ret
dec
jnp
arpl
pop
out
dec
std
cmp
or
inc
sub
popa
insl
xchg
sub
cli
fucomip
or
mov
pop
xor
lds
pop
or
iret
repz
fsubrl
or
lret
daa
sub
push
dec
pushw
pop
add
mov
xor
push
outsl
jecxz
dec
daa
test
fldt
adc
xor
and
iret
mov
jl
xchg
sub
cmp
inc
popa
xchg
dec
or
cmp
dec
cmpl
sbb
addr16
push
push
mov
xchg
lods
inc
lds
jge
sbb
insl
das
lock
divb
popf
mov
cld
xor
lahf
les
in
xchg
pop
dec
stc
xchg
inc
es
lods
cmp
dec
popf
leave
pop
mulps
outsb
mov
stos
xchg
inc
and
fistps
jno
test
stos
fcoml
imul
decl
lret
push
movsb
or
stos
jno
les
dec
shll
insl
orb
outsb
mov
das
mov
dec
jb
mov
out
mov
push
mov
or
jo
out
cmp
out
jae
mov
cmpsb
mov
xchg
scas
nop
xchg
movsl
cltd
lds
shlb
and
cmpsl
dec
sbb
pusha
lock
xor
in
sahf
je
decb
inc
xchg
leave
outsl
adc
dec
jecxz
das
insl
movsb
ss
enter
cs
in
xor
mov
in
dec
jmp
sbb
outsb
xchg
divb
incl
pop
mov
imul
adc
push
pop
lock
mov
xor
mov
scas
cmpsl
mov
inc
dec
sub
dec
bound
out
push
xchg
sub
jnp
dec
imul
inc
sub
jmp
out
inc
and
pop
fsubrl
ljmp
scas
pop
mov
dec
mov
dec
xlat
add
xchg
lods
sub
scas
movsl
out
jmp
adc
adc
xchg
dec
fistl
xchg
ficoml
or
or
mov
gs
arpl
jge
aam
aas
pop
adc
pop
das
lret
cmpsl
mov
and
adc
sub
or
or
or
dec
cli
mov
scas
sub
dec
pop
imul
lods
shl
andb
loope
push
push
push
push
pop
dec
jno
or
cmp
push
cmp
sbb
adc
jecxz
das
addr16
mov
cwtl
dec
dec
test
int3
lods
mov
out
lds
jle
dec
ss
sub
bound
push
push
mov
insl
ljmp
js
lea
sub
cltd
inc
mov
out
jmp
sub
inc
xchg
lods
orl
mov
jbe
mov
iret
dec
xor
pop
dec
push
dec
xchg
bound
push
test
daa
sbb
mov
xchg
lret
stc
xchg
fcomps
dec
mov
mov
std
mov
jge
out
movsb
bnd
test
in
xchg
cmpsb
xor
movsl
test
dec
hlt
pop
pop
adc
stos
jo
lahf
sub
insb
fcoml
cmpsl
cmpsb
mov
adc
xchg
mov
cmp
xchg
pushf
mov
sbb
rclb
sbb
out
dec
add
scas
jne
xor
mov
daa
cld
fst
xchg
xchg
pop
mov
push
jp
push
xor
sbb
popa
mov
mov
pop
ret
ljmp
stos
enter
xchg
mov
pop
insl
inc
fldenv
ret
mov
push
lea
dec
pop
sub
sbb
les
ffree
xchg
je
jle
dec
xor
dec
outsl
sub
mov
xchg
sub
xchg
loop
imul
arpl
sbb
imul
stos
movsb
cmpsl
sub
arpl
inc
mov
push
enter
cmp
pop
sahf
push
push
mov
clc
scas
leave
div
loop
jmp
ret
adc
cmpsb
cmpsl
or
push
fsubrl
sub
cmp
bts
cs
loope
mov
sbb
in
sub
dec
orl
add
scas
outsl
push
or
mov
hlt
sub
sub
cmpsl
stos
mov
xor
or
pop
sbb
or
adc
cs
stos
jg
sahf
fidivs
rorb
cmovs
sbb
dec
add
mov
push
inc
mov
mov
add
pop
dec
sbb
mov
daa
dec
dec
ljmp
stos
imul
ljmp
sbb
jmp
outsb
pop
outsl
and
imul
sub
dec
xchg
jmp
addr16
xchg
push
mov
fldl
sbb
cmpsl
sbb
push
std
and
lds
sub
dec
sahf
stos
inc
insl
into
cmp
ficoms
mov
add
iret
or
mov
xchg
mov
lea
jmp
in
mov
movsb
outsb
outsl
jb
dec
jno
scas
imul
or
call
adc
fildll
outsl
rcr
int
icebp
cltd
test
or
lea
inc
pop
imul
xchg
sub
fldcw
add
outsb
mov
jmp
inc
lock
or
dec
adc
adc
mov
rorl
lret
cmpsl
or
in
cmp
sub
mov
or
sub
packuswb
fisttps
jne
loopne
sub
in
mov
iret
jb
dec
pushf
mov
jo
jge
addr16
repz
aas
inc
scas
dec
pop
sub
dec
daa
arpl
int
and
jle
cmp
xor
rcrb
stos
out
dec
dec
in
nop
mov
sub
jmp
adc
std
popf
sub
push
sub
jl
inc
or
in
fcomps
or
cs
dec
ljmp
pcmpeqw
lea
dec
pop
sub
call
push
adc
sbb
pop
and
pop
or
insl
outsb
jmp
cmp
fisubrs
dec
or
xchg
fldln2
inc
jmp
cltd
dec
sbb
jge
inc
sub
iret
out
nop
stos
adc
adc
lea
imul
lods
dec
inc
adc
dec
arpl
fsub
scas
pop
subb
sbb
inc
dec
dec
xchg
hlt
out
xchg
outsl
xlat
stos
mov
cwtl
stos
sub
scas
cs
insl
mov
je
sub
pop
das
or
out
popf
lods
mov
xchg
dec
loope
into
mov
mov
xchg
pop
dec
mov
cmpsl
dec
ret
gs
adc
mov
jmp
sub
push
or
lea
in
dec
dec
or
push
mov
ret
lret
fndisi(8087
and
dec
iret
test
xchg
xchg
pop
movsb
ljmp
sub
scas
dec
lret
call
test
jmp
shr
xchg
mov
xor
cmp
push
les
dec
dec
xchg
or
mov
dec
mov
push
imul
xor
jl
sbb
sbb
jmp
packssdw
cmpsl
outsb
in
mov
sub
out
ds
adc
orb
cmpsl
dec
dec
mov
les
jmp
or
lods
pop
insl
test
into
pop
test
pop
or
cmpsl
int3
or
addr16
dec
out
stos
enter
push
jno
cmpsl
mov
in
scas
sub
mov
push
sbb
sbb
scas
pop
inc
or
jg
test
repnz
hlt
jecxz
int
insl
into
sbbl
pop
sbb
cmp
or
or
sub
lea
inc
scas
in
aad
ret
ja
sub
ret
sub
je
daa
cmpsb
adcl
cmpsl
ret
sub
dec
stc
out
dec
in
mov
mov
icebp
add
mov
xchg
or
xor
mov
stos
data16
jmp
mov
xchg
xchg
jno
ss
dec
sub
dec
insl
fcoms
out
adc
pop
mov
sahf
outsb
lret
fisttpl
iret
or
sbb
cs
push
push
pop
mulb
jge
sbb
xlat
scas
sub
or
jmp
lcall
mov
cltd
out
add
lea
out
dec
xchg
scas
lret
movsb
pusha
push
scas
loop
cs
push
push
sub
adc
sub
push
fldl
sbb
pop
push
mov
lods
push
mov
cmp
xchg
test
lods
dec
subb
insl
stos
sub
scas
out
and
loop
sub
les
int
test
insl
or
fisttpll
decl
mov
loopne
mov
test
xor
sub
pop
or
imul
add
inc
push
ljmp
and
inc
loopne
outsb
sub
or
dec
insb
out
orl
mov
mov
or
pop
sbb
mov
jmp
adc
dec
mov
ss
or
xchg
js
add
push
or
pop
out
int
mull
arpl
adc
loope
or
out
cmovno
and
ljmp
push
imul
or
dec
xor
lret
or
pop
pop
push
adc
dec
outsl
and
adc
add
dec
push
dec
dec
cmpsl
inc
sbb
imul
outsl
out
cltd
ficoms
mov
in
or
push
sbb
test
inc
jmp
inc
imul
push
sub
cmp
sbb
inc
test
mov
outsl
push
pop
mov
inc
xor
int
daa
push
aaa
jle
sub
xchg
out
xor
adc
nopl
out
sbb
mov
decb
lret
and
pop
pop
xor
adc
lds
xchg
mov
rdtsc
lcall
lahf
jecxz
imul
mov
push
sahf
dec
insl
shl
mov
outsl
daa
cmovno
add
sbb
inc
push
jns
dec
fstpl
lods
into
out
iret
adc
dec
sub
push
lret
or
mov
pop
mov
sbb
inc
data16
cli
cmpsb
dec
ret
cwtl
dec
int
dec
jb
jns
cmp
minps
dec
mov
or
lea
int
or
and
xchg
orb
dec
daa
inc
lret
jmp
sbb
inc
mov
dec
outsl
or
dec
decl
aaa
mov
insl
fisubs
iret
dec
mov
stos
mov
or
sbb
into
lods
mov
repnz
cmp
int
and
scas
into
mov
sbb
ret
iret
out
rorb
mov
xchg
out
or
out
add
lret
in
sub
out
xor
in
rcll
imul
jge
orl
dec
dec
insl
lods
lcall
inc
jmp
and
dec
push
pop
shrb
jmp
lds
jnp
push
out
pusha
cmp
aam
dec
mov
roll
push
sbb
inc
mov
ret
fwait
xor
cwtl
dec
mov
mov
mov
stos
lds
lret
jne
outsl
xchg
movsb
dec
repnz
mov
mov
adc
sub
or
pop
cli
pop
pop
ljmp
or
sbb
dec
mov
rcll
add
dec
sahf
xchg
or
and
in
lea
imul
xchg
jle
jns
scas
xor
mov
dec
or
cmp
sbb
cltd
mov
sub
and
xchg
xchg
dec
pop
cmpsl
pop
push
scas
iret
dec
or
inc
enter
xchg
push
add
xchg
inc
lret
dec
mov
push
add
out
hlt
sub
packsswb
dec
outsb
sbb
iret
int
lret
inc
cld
push
adc
lcall
stc
sub
xchg
ficoml
xchg
sub
or
lods
out
cmp
cmpsl
icebp
decb
shlb
xchg
in
test
mov
imul
push
adc
lds
sti
data16
xor
mov
ljmp
inc
das
out
adc
dec
or
stos
negl
repnz
or
stos
xchg
and
stos
cmpsl
in
dec
sub
or
out
or
scas
test
xor
dec
mov
jmp
xor
mov
sub
shlb
out
fcompl
leave
push
cmp
push
scas
push
dec
pop
and
out
imul
cmp
mov
fdivrs
dec
fdivr
pop
sub
dec
fdivrl
jae
add
mov
sbb
adc
adc
imul
mov
and
sqrtps
out
jge
push
push
sbb
xchg
mov
outsl
fld
sub
inc
fiadds
xchg
cmpsl
ljmp
lea
test
inc
or
and
das
push
lret
fldcw
or
aam
and
inc
iret
lret
mov
pushf
insl
rclb
in
push
imul
movaps
xchg
push
add
xor
inc
int
jmp
dec
jns
push
dec
cmpsl
pop
stos
sbb
mov
and
xor
lods
stos
outsl
insl
sub
mov
mov
adc
in
int3
cmpsb
in
mov
push
ljmp
dec
imul
cs
mov
mov
inc
mov
inc
out
inc
scas
mov
loopne
test
mov
or
das
sub
sub
mulb
scas
pushf
pop
shrl
shlb
mov
adc
sub
sub
and
pop
inc
dec
sbb
arpl
inc
mov
popf
ret
outsl
ljmp
ret
out
xor
or
or
pop
ret
sub
out
test
sub
lds
cmpsl
pop
loop
jmpw
lods
adc
sete
sub
out
mov
fs
mov
stos
or
push
insl
arpl
dec
addl
and
or
sub
mov
movsl
mov
adc
movsb
or
xchg
pop
call
cmpsl
stos
fidivs
adc
out
xchg
lahf
adc
adc
dec
stc
cld
cltd
outsb
push
pop
lret
cld
or
pcmpgtd
push
push
dec
ret
adc
or
shl
dec
jno
dec
je
mov
pop
push
push
ret
call
xlat
into
mov
push
mov
negb
test
jbe
movsb
leave
lods
or
jno
dec
imul
std
cs
in
pop
mov
mov
imul
into
inc
test
cmpsl
fwait
sbb
subl
jae
push
out
adc
push
ja
xchg
mov
xchg
cmp
pop
or
in
and
lea
sub
int
cmp
dec
dec
ja
sbb
out
jmp
js
cmpsl
dec
jno,pn
outsl
loop
ljmp
mov
stos
pushf
xchg
lcall
xchg
lret
dec
or
dec
sub
out
lock
dec
sub
out
dec
mov
test
in
xor
sbb
push
leave
mov
inc
pop
adc
mov
rolb
lds
lods
or
mov
repnz
inc
fisttpl
pop
sub
cmp
or
mov
dec
ret
xchg
cmp
xchg
mov
test
arpl
inc
and
popa
loopne
stos
imul
push
into
insl
stos
test
dec
mov
ljmp
sarb
adc
jno
leave
push
pusha
dec
insl
imulb
adc
mov
lcall
test
add
aad
xor
jmp
or
dec
iret
stos
leave
getsec
imul
loop
mov
jne
sub
test
push
pop
mov
sub
imul
push
imul
xorps
arpl
lret
jns
rorb
mov
out
mov
pusha
fimuls
scas
mov
outsb
in
push
xor
dec
leave
sub
or
or
stos
xchg
sarb
lea
sub
imul
jmp
insl
iret
mov
cs
xchg
push
cmp
cmp
sbbl
insb
mov
andl
xchg
jmp
sbb
imul
insl
jg
les
mov
pop
fimull
or
repnz
sbb
sub
fldcw
mov
dec
sub
repnz
dec
outsb
inc
jo
cmpsl
out
lock
dec
stos
inc
fmul
mov
sbb
jge
imul
or
inc
ret
mov
dec
pop
sub
add
and
stos
rorb
dec
adc
pop
scas
ret
outsl
xor
jno
lea
sbb
lods
repz
dec
ss
clc
test
lret
ret
enter
mov
mov
cs
cltd
adc
mov
mov
outsl
xchg
adc
mov
inc
or
mov
jno
stos
pop
insl
dec
sti
or
test
jmp
aaa
outsl
out
daa
or
test
push
hlt
inc
jmp
ljmp
std
lret
sbb
addb
iret
sub
cltd
cmp
outsl
lods
push
lea
sub
iret
and
stos
or
adc
push
ret
lret
push
jp
and
dec
pop
rorb
test
inc
add
mov
adc
int
dec
sub
outsb
or
outsl
xchg
cltd
fnstsw
addr16
icebp
ss
xchg
dec
adc
imul
setnp
xchg
pop
fcomps
sub
imul
hlt
test
loopne
lds
mov
adcl
inc
pop
int
dec
jmp
pop
dec
cmp
jmp
out
xchg
mov
cmp
cmp
jmp
sub
addl
add
xchg
repnz
inc
add
insb
in
add
imul
inc
or
sub
sub
shrb
add
mov
jno
mov
push
push
gs
xchg
sub
insb
lret
or
dec
jmp
shrl
ret
ljmp
pop
or
insb
pop
pop
dec
lret
sbb
add
stos
inc
xchg
cmpsl
push
bound
and
in
outsl
mov
xchg
jg
iret
cs
adc
inc
leave
dec
lds
sub
outsl
cs
pop
cwtl
std
adc
out
das
into
out
push
push
jbe
add
fdivp
sbb
mov
inc
and
sbb
or
inc
xchg
out
into
addr16
lret
dec
icebp
shll
or
outsb
mov
or
sub
ds
mov
or
dec
dec
stc
out
inc
pop
imul
mov
mov
adc
and
push
push
mov
data16
sub
cmpsl
test
imul
or
punpcklbw
mov
in
pop
pusha
arpl
xchg
lds
and
ljmp
inc
adc
and
mov
sub
adc
inc
stos
out
in
xorl
lret
adc
mov
cmpsl
das
sub
sub
mov
mov
movsb
jmp
shlb
dec
cmpsb
xchg
les
ljmp
leave
or
addr16
sti
mov
test
lds
in
or
scas
or
sbb
inc
mov
pop
cltd
cmp
or
xor
iret
xchg
xchg
add
sub
fldenv
xchg
ljmp
mov
mov
mov
mov
and
or
inc
ljmp
imul
inc
imul
push
lods
push
or
fistpll
dec
or
adc
out
xchg
lret
push
jg
int3
adc
pop
jle
addl
pop
fsubs
and
mov
jbe
loop
mov
aas
sub
ret
push
push
or
and
dec
ljmp
aam
xchg
push
icebp
rclb
lods
iret
lret
mov
and
sahf
addr16
sbb
add
out
or
lea
mov
cmp
add
mov
cvtpi2ps
hlt
rorb
lcall
add
push
lods
lret
daa
mov
rolb
jle
sahf
lret
mov
call
popa
icebp
cmpsl
xchg
push
jmp
add
repz
fists
xlat
fs
adc
adc
cmpsl
adc
pop
cld
sub
lahf
sub
push
test
mov
dec
shrl
in
mov
xchg
xor
dec
outsb
out
jae
inc
push
sub
bound
repnz
out
shll
xor
xor
ds
outsb
mov
in
scas
dec
lahf
sub
dec
mov
lods
dec
jns
shl
pop
and
jl
push
xor
imul
test
dec
cs
addr16
adc
pop
inc
jmp
push
test
rclb
lods
clc
fildl
jmp
rorb
pop
pop
push
inc
or
pop
out
int3
ret
js
stos
dec
mov
dec
mov
mov
add
out
btr
int
and
into
sub
sub
jge
bound
lods
xor
stos
mov
inc
cmp
cmp
iret
dec
dec
lods
mov
out
aam
lea
inc
sub
sbbl
out
pop
sbb
inc
xchg
or
push
and
or
loop
mov
das
mov
add
xchg
cmpsl
pop
stos
test
cmc
mov
push
add
sbb
lea
sbb
sub
test
ret
push
inc
sbb
sub
test
enter
push
pop
das
or
push
movmskps
adc
push
dec
scas
push
lret
nop
leave
rorb
adc
nop
shrl
lret
dec
in
dec
pop
xchg
mov
inc
jmp
sti
inc
ja
prefetcht0
imul
pop
dec
aas
fisttps
dec
stos
sub
lahf
out
mov
fisttps
lret
mov
sub
addr16
inc
jmp
stos
inc
pop
inc
nop
sub
inc
sbb
shrb
adc
pop
xchg
mov
into
sub
and
sub
mov
into
cltd
mov
int
lods
sbb
push
lods
ret
pop
mov
xchg
adc
or
push
xlat
call
rclb
sub
dec
mov
xchg
push
rorl
push
jns
ds
jmp
push
stos
push
dec
jae
xor
imul
pop
dec
sub
dec
lret
or
lea
in
out
cs
cltd
imul
outsb
scas
xchg
push
add
cmp
dec
pop
sub
daa
cmpsl
push
fists
sub
sub
jle
mov
insl
push
adc
sub
sbb
lahf
mov
dec
cmpsl
out
dec
ficomps
mov
xchg
or
mov
jbe,pn
push
outsl
lea
addr16
popl
lret
dec
or
or
lea
les
dec
out
cmp
or
stos
ss
xchg
and
add
xchg
dec
shufps
repnz
dec
push
lahf
adc
cmpsl
push
in
sub
loope
push
sbb
mov
aaa
pop
xchg
sub
ret
stos
int
jno
test
pop
imul
in
pop
dec
mov
or
or
xor
imul
in
lret
scas
lea
out
insl
push
movsb
stos
dec
push
in
mov
sbb
mov
lods
ljmp
sub
stc
and
jns
sbb
dec
subl
adc
dec
jbe
sub
imul
mov
push
mull
xlat
jmp
and
mull
cltd
pop
sub
adc
outsb
popl
insb
into
push
and
jge
and
lods
sub
loope
leave
data16
sbb
iret
out
stos
push
loope
popl
repnz
stos
into
xor
inc
outsb
cs
adc
outsb
daa
mov
jle
or
gs
fbld
mov
outsb
in
movsl
xchg
lcall
sub
xor
lds
push
fwait
xchg
fwait
push
cmp
lret
or
sub
and
outsl
repnz
movsb
ret
lret
andl
out
js
push
jbe
ror
arpl
out
cld
push
aas
aaa
movb
aaa
in
sub
lods
push
call
movsl
add
jns
imul
stos
adc
mov
add
inc
pusha
stos
loopne
pop
dec
lea
int
or
repnz
fsubl
cmp
outsb
or
lock
mov
imul
shlb
jecxz
xchg
sahf
test
inc
rclb
add
in
cmp
lods
pop
sub
imul
dec
sub
dec
or
mov
dec
mov
inc
adc
mov
in
cs
popf
inc
loope
lea
or
push
ljmp
mov
in
inc
or
mov
jge
xchg
or
sub
xchg
insl
imul
popf
dec
sbb
and
cwtl
sbb
mov
iret
loopne
enter
mov
or
call
std
xchg
adc
bound
lret
pop
xchg
test
cli
loope
pop
adc
sbb
lods
or
pop
inc
pop
jmp
push
add
insl
dec
mov
fldcw
je
or
sti
popf
jge
or
out
out
mov
cmp
pop
stos
add
out
dec
push
outsl
push
loope
mov
js
xor
xor
add
dec
daa
mov
shr
push
loop
scas
sbb
mov
stc
push
outsb
cmp
dec
shl
pop
mov
push
push
outsl
inc
mov
add
dec
lcall
push
dec
jg
xor
dec
sti
pop
gs
orl
bound
lret
add
test
sub
jmp
xchg
jle
adc
scas
out
xchg
mov
dec
xor
dec
mov
mov
mov
les
dec
sbb
sub
xchg
sub
prefetcht1
sub
dec
push
fildl
out
xchg
out
sub
push
int
mov
add
dec
pop
sub
lea
icebp
xor
jle
in
adc
dec
bound
iret
cltd
sbb
jmp
mov
jae
sub
int
or
xchg
arpl
testb
loope
inc
std
arpl
scas
dec
dec
pop
or
pushf
dec
xchg
addr16
outsl
mov
xchg
pop
int3
and
into
iret
or
cmp
jae
dec
mov
push
scas
test
ss
mov
loop
insl
imul
or
les
das
jge
jb
add
cmp
or
out
out
dec
lret
outsb
rclb
rcrb
in
xchg
popl
pop
stos
lods
jns
xchg
jns
or
data16
cmp
sbb
push
jmp
xor
mov
push
test
movsb
daa
inc
cmpsl
jmp
dec
or
aad
fistpl
pushf
stc
xchg
jo
or
scas
mov
cmpsl
inc
sub
sbb
mov
shrl
daa
xchg
xchg
daa
lds
mov
mov
mov
std
bound
call
leave
fbld
out
outsb
lods
xor
mov
inc
sti
pop
xchg
les
clc
adc
scas
or
lea
fidivrs
outsb
into
sbb
or
cwtl
dec
add
jmp
mov
cmpsl
xchg
cmp
xchg
mov
scas
mov
pop
inc
in
xchg
icebp
mov
sub
jno
das
cwtl
adc
adc
mov
nop
adc
int
in
jmp
sub
push
loopne
sahf
or
or
or
imul
jmp
dec
add
mov
jmp
mov
push
sub
push
add
or
das
cmovp
outsl
cmp
lock
sbb
jbe
xchg
out
or
das
or
pop
fs
into
sbb
cmp
inc
insl
sub
icebp
pop
cmp
test
mov
out
or
pop
arpl
mov
and
scas
popa
or
scas
or
jmp
sub
mov
mov
movsl
popl
scas
or
cwtl
mov
mov
and
push
loopne
imul
mov
or
in
or
out
cs
into
stos
test
dec
sbb
jmp
movsb
rorl
or
out
ljmp
arpl
popa
push
or
sub
bound
and
test
cli
insb
loop
jmp
pop
sahf
sbb
sub
xchg
cmp
stos
scas
ljmp
dec
dec
dec
push
push
outsb
inc
sub
bound
in
ret
inc
or
cwtl
jmp
jge
cltd
imul
lods
dec
or
mov
xchg
imul
xchg
push
pop
adc
imul
shl
stc
outsb
gs
fcompl
mov
sub
mov
jle
push
out
lods
mov
pop
dec
fimuls
sub
xchg
xchg
loope
aam
adc
shrb
das
dec
mov
dec
mov
push
and
dec
mov
jl
mov
sub
bound
in
or
or
jns
jp
xlat
xchg
mov
sbb
pop
lret
popf
sub
xchg
jnp
stc
push
sti
push
leave
and
cs
pop
into
ljmp
rorl
out
push
mull
dec
add
jge
add
dec
add
mov
int3
filds
packssdw
dec
in
loope
push
cmp
dec
lock
push
dec
pop
test
push
cwtl
xor
movaps
or
dec
sbb
sub
outsb
outsl
sub
out
ret
xchg
xchg
pusha
fimuls
jmp
dec
out
lcall
arpl
inc
inc
leave
stos
iret
stos
xchg
addb
or
dec
outsl
jmp
sarb
call
test
dec
xor
pop
mov
jns
popa
xchg
sub
or
loopne
aas
and
push
ret
mov
les
dec
cmpsl
addr16
mov
in
dec
mov
cltd
aaa
stos
mov
xor
cs
inc
cmpl
ljmp
int
pop
mov
scas
scas
andl
ret
outsb
push
sbb
imul
outsl
push
and
dec
lea
mov
dec
pop
jno
stos
and
mov
call
mov
mov
jmp
push
pop
mov
iret
hlt
sbb
pop
insl
test
push
sub
cli
out
mov
fwait
add
arpl
cwtl
sub
cmpsb
inc
sub
jb
lea
sub
ret
insl
jmp
movsb
inc
pop
mov
icebp
xor
les
stos
mov
jle
test
pop
xchg
sub
xor
pop
insb
push
or
sub
test
mov
pop
cs
inc
mov
pop
xchg
iret
or
push
rclb
push
dec
aam
mov
xor
int3
cli
imul
cli
out
mov
xchg
rorl
int
pop
iret
mov
dec
sub
jecxz
test
jnp
aad
ret
dec
mov
lods
cmpsl
data16
daa
scas
into
xchg
int
adc
leave
or
imul
dec
xor
xchg
scas
jmp
lret
adc
lret
lds
adcl
scas
xchg
dec
xorl
dec
or
lea
or
or
or
repz
jmp
adc
clc
sub
iret
sub
addr16
dec
scas
or
lret
mov
lea
push
sub
pop
xor
jns
shlb
in
leave
pcmpgtd
sub
mov
scas
push
push
les
arpl
dec
cmpsl
and
ror
lcall
add
or
dec
ljmp
push
das
jmp
sbb
push
pop
call
in
lret
bound
leave
xor
jnp
sub
adc
stos
lret
or
rcrb
lret
xchg
sub
jnp
cs
mov
jmp
pop
lds
dec
adc
imul
into
dec
dec
jp
cmpsl
inc
mov
iret
adc
pusha
scas
inc
xor
int3
dec
cmp
cmp
rorl
lods
push
push
xchg
fwait
dec
mov
pop
clc
cmpl
xchg
mov
cmp
test
pop
lret
adc
adc
jmp
imul
dec
sub
ffreep
pop
into
iret
out
dec
xchg
sahf
or
dec
out
push
outsb
rolb
inc
inc
and
lahf
inc
sub
lea
outsl
dec
addr16
pop
ss
test
dec
scas
les
sub
out
arpl
jecxz
ss
outsl
xchg
scas
xchg
mov
arpl
jge
or
in
mov
pop
fmull
arpl
inc
popa
inc
mov
sbb
cs
fsubrp
daa
sub
xor
pop
adc
into
movntq
inc
in
xor
loop
test
mov
xchg
out
scas
stos
mov
xchg
popl
loopne
sub
fsubr
loop
icebp
iret
dec
jecxz
call
push
push
push
mov
imul
lea
lret
cmp
lret
dec
xchg
dec
lcall
jle
xchg
mov
aad
arpl
pop
mov
lret
mov
mov
sub
loope
iret
jmp
out
inc
pusha
int
or
sbb
cmpsl
bound
out
or
mov
jne
outsl
test
xchg
push
xchg
lret
aam
lods
scas
sub
outsb
arpl
jmp
sbb
scas
or
jl
pop
outsl
pop
add
pop
stos
push
sub
insl
pop
mov
dec
adc
lds
inc
or
fadd
sahf
inc
inc
mov
sub
inc
stos
xor
leave
dec
or
mov
insl
pop
popa
clc
or
mov
sbb
ljmp
popa
subl
or
or
sub
mov
in
cmc
dec
cmp
cli
mov
ret
fsub
or
imul
pop
pop
subb
lea
pop
sbb
dec
scas
ret
loop
sbb
lods
xchg
ds
cmp
sub
or
push
adc
cmp
enter
repnz
repnz
icebp
scas
in
jb
mov
mov
repz
mov
lret
ret
loope
ljmp
pop
dec
into
or
sub
outsb
mov
or
jnp
fwait
and
sub
out
mov
lock
ret
out
imul
cs
mov
loope
mov
pop
stc
leave
out
lea
sub
jl
orb
into
lret
push
or
or
mov
push
std
pop
dec
cwtl
scas
sub
scas
mov
cwtl
cs
rorb
lret
inc
ja
lret
xchg
mov
add
jns
in
pusha
jae
jmp
push
push
cmp
push
push
push
sub
mov
ljmp
fisubrs
loope
data16
xchg
inc
outsl
repnz
loope
outsb
scas
and
in
pop
mov
sub
bts
xlat
fcompl
jb
imul
leave
inc
cwtl
add
xchg
xchg
or
pop
orl
bound
or
insl
push
mov
push
ret
adc
out
jmp
inc
iret
lcall
adc
push
adc
xchg
insl
push
sub
aad
pop
ret
outsb
daa
sti
push
xchg
mov
mov
pusha
inc
lea
pushf
das
test
dec
outsb
jge
xchg
movb
lret
mov
sbb
push
das
xor
push
push
test
cmpsl
sahf
cmp
and
loope
out
in
ss
xchg
push
dec
adc
daa
das
adc
xor
lret
loop
jmp
out
loop
dec
pushf
repnz
imul
repz
aas
dec
dec
xchg
pop
cmpsl
scas
cmp
jmp
insl
pop
loop
outsb
add
ret
int
dec
or
sub
adc
or
push
or
loop
xor
lret
xchg
adc
out
push
sub
popa
inc
pop
inc
dec
inc
pop
sbb
scas
push
push
adc
pop
stos
sbb
jne
fimull
mov
push
jno
lss
sub
inc
jne
fwait
push
lret
scas
pop
inc
repnz
push
push
aad
sbb
adc
push
das
cs
les
sub
and
test
sub
sbb
mov
or
push
or
lea
sbb
daa
int
dec
mov
sub
sub
imul
sub
inc
fisubrl
add
fwait
or
sub
jl
xchg
mov
xchg
add
cmpsl
sbb
das
test
mov
xchg
pop
add
inc
sub
decl
pop
sub
lods
ret
dec
jg
adc
push
lods
ljmp
ss
nop
pminsw
adc
xchg
cmp
or
or
mov
lea
dec
data16
sahf
and
ficoms
stos
int
pop
in
int
jmp
push
outsb
enter
out
add
xchg
pop
or
stos
adc
clc
lods
lret
into
enter
pop
mov
push
out
pop
lret
test
inc
add
or
dec
into
in
xor
adc
pop
aad
pop
and
mov
sbb
pop
in
mov
cmpl
xchg
pop
add
das
enter
lds
dec
into
mov
cli
out
inc
test
cli
jge
iretw
div
jmp
addb
jmp
push
loopne
mov
xor
push
mov
jns
or
je
or
adc
test
sub
imul
rorb
adc
pop
adc
sub
or
das
jmp
sub
imul
outsl
sbb
dec
pusha
outsb
adc
xor
out
test
arpl
pop
rorl
sub
xchg
dec
dec
mov
test
dec
sbb
mov
ljmp
ljmp
or
pop
push
lea
lret
outsl
dec
jmp
pop
scas
jmp
add
addr16
addl
insl
fwait
repz
xchg
in
or
movsl
out
pop
push
data16
lret
imul
std
arpl
mov
dec
dec
btrl
jg
test
sub
sbb
sub
femms
sub
xor
repnz
push
stos
lret
cmpsb
lods
mov
sbbb
inc
imul
inc
mov
or
pop
xchg
xchg
or
dec
pop
call
pop
das
push
aas
mov
push
sub
add
fwait
pop
lods
sub
push
icebp
stos
mov
pop
jnp
insl
lret
in
imul
add
lahf
lds
scas
and
pop
icebp
movsl
pop
mov
out
scas
scas
mov
dec
lea
out
sub
popa
mov
lret
cmpsl
pop
pop
insl
jo
std
jge
sub
dec
push
adc
mov
insl
lahf
jne
sbb
lret
xchg
mov
ret
mov
push
bnd
loope
sub
pop
loop
dec
in
leave
ja
xchg
ja
jge
or
adc
shrb
add
or
leave
pop
and
push
jp
aaa
jmp
and
push
cs
popa
sub
mov
push
jo
cmp
inc
push
ud2
dec
imul
pop
adc
mov
shrb
jmp
mov
sbb
dec
mov
shll
or
mov
mulb
jge
dec
xor
lods
xchg
into
xchg
or
and
lds
mov
cwtl
iret
rcrl
push
sub
inc
dec
mov
mov
xchg
or
or
popa
lods
daa
lret
out
fists
mov
out
mov
dec
push
xor
jecxz
out
push
mov
adc
into
data16
adc
jo
pop
mov
sub
stos
sahf
icebp
ret
leave
inc
push
daa
or
jb
cld
icebp
xchg
mov
ret
fsubrl
push
dec
sub
sahf
xchg
cmp
mov
rorl
insl
addr16
mov
loope
int
lret
cmpsl
or
add
jbe
loop
sub
jmp
scas
das
xchg
adc
rcl
test
and
outsl
mov
sub
or
out
adc
jle
dec
cmp
mov
push
into
scas
or
lret
pop
or
push
out
push
jg
addr16
mov
scas
or
sub
sub
imul
icebp
int
dec
lods
or
mov
insl
dec
repz
into
xchg
pop
or
imul
hlt
stc
stos
pusha
std
orl
out
sbbl
dec
out
out
add
lret
or
and
and
mov
lahf
adc
add
jbe
mov
lea
or
rorl
push
xchg
insl
imul
lret
jg
cltd
inc
jl
out
xor
int3
mov
inc
scas
dec
mov
or
popf
xor
movsb
push
xchg
leave
cltd
or
adc
or
or
cmpsb
sub
jb
sbb
jmp
adc
addr16
fdivrl
mov
cltd
add
push
mov
lret
fcmovb
lods
in
insl
cld
lret
in
stc
adc
sub
inc
or
add
jecxz
push
dec
dec
or
adc
add
dec
or
xor
and
mov
test
test
test
pop
sub
pop
lcall
lods
cs
push
mov
stos
push
test
scas
push
fimull
jmp
int
inc
or
test
inc
out
sbb
das
mov
scas
push
enter
sub
sub
scas
fidivl
dec
mov
rol
lods
push
xchg
or
and
aaa
shll
mov
addb
addr16
or
dec
dec
cmpsl
pop
dec
jle
fs
icebp
mov
sub
adc
aam
dec
clc
pop
into
fsubrs
sbb
adc
push
adc
cmpb
repz
mov
sbb
pop
push
out
test
outsl
push
add
lret
dec
mov
jmp
shrb
daa
sub
add
movsb
cmpsl
lret
movsl
fwait
je
pusha
fisubrs
inc
popa
out
stos
in
iret
data16
out
lret
test
ret
jmp
or
mov
adc
lret
mov
test
and
push
xchg
sbb
add
mov
loop
adc
or
addr16
mov
pop
daa
lods
lods
dec
xor
pop
stos
lcall
cld
imull
or
std
mov
mov
jmp
xor
cld
out
jp
outsl
stos
add
jmp
push
push
xchg
mov
rorb
imul
mov
lea
imul
or
callw
lods
stos
cmpsl
push
out
adc
sti
push
icebp
rorb
sub
bound
dec
dec
lods
inc
jo
lea
aaa
je
sub
pop
hlt
outsl
cmpsb
jmp
pslld
dec
dec
or
or
mov
jecxz
data16
inc
test
ret
out
or
or
stos
repz
mov
add
adc
adc
movsl
xchg
orl
aas
out
insl
xor
push
lret
sub
imul
out
cmp
dec
sbb
inc
push
imul
scas
lock
cwtl
lods
out
rolb
xchg
insl
dec
orb
pop
out
outsb
dec
sub
aaa
mov
rclb
or
inc
pop
into
push
push
fimull
scas
dec
pop
add
addr16
sub
pop
lret
sub
adc
int3
dec
paddw
data16
leave
arpl
out
mov
jno
add
imul
mov
aas
xor
ljmp
out
pop
sub
dec
sub
push
sub
cmp
cmp
shr
cltd
mov
mov
sbb
hlt
mov
dec
sub
inc
adc
aas
pop
inc
out
or
out
sbbl
lods
jmp
jno
sub
dec
dec
push
cmp
ficomps
imul
out
icebp
cmp
aas
scas
daa
paddusb
adc
repnz
adc
insl
push
sub
xchg
mov
lret
orb
das
lods
jmp
sub
cli
fsubs
addr16
cmp
cmp
sbb
xor
prefetch
scas
adc
mov
and
bound
out
mov
shll
xchg
adc
sub
mov
aam
les
insl
imul
or
dec
or
jmp
cmpsl
syscall
lret
push
jge
mov
or
or
clc
and
pop
fidivrs
pop
lret
subl
add
lods
imul
test
mov
jns
ljmp
fmulp
and
adc
sub
inc
bound
xchg
pop
dec
dec
or
jo
push
insl
pop
lock
xor
mov
idivb
jmp
sub
xor
jmp
dec
pmuludq
lea
in
dec
data16
xchg
sub
leave
adc
out
fisttpl
or
imul
decl
adc
or
enter
mov
daa
scas
lcall
jns
cmc
jl
cs
fildl
push
cmp
int
jno
stos
out
sub
lea
test
scas
mov
dec
push
test
sbb
ret
hlt
bound
push
movsb
lea
fists
andl
repz
cs
jno
dec
movzwl
inc
imul
add
dec
outsl
fsub
mov
cmp
jno
push
in
fcomps
out
sub
das
mov
sub
repnz
mov
sbb
pop
mov
into
dec
movl
out
insl
pop
and
or
loope
dec
xor
aaa
out
pop
mov
outsb
dec
rorl
movl
out
mov
inc
into
test
leave
ljmp
dec
idiv
popa
decl
inc
push
sub
stos
jns
lret
mov
cwtl
imul
adc
bound
scas
pop
add
mov
outsl
inc
mov
lds
push
dec
mov
scas
adc
mov
inc
push
inc
cmp
imul
jg
adc
dec
insl
fxch
push
loop
pop
daa
mov
out
testb
shrl
xchg
les
mov
pop
mov
or
adc
push
and
adc
push
pusha
pop
xor
dec
add
sub
pop
mov
mov
bound
push
sahf
xor
dec
push
push
push
divl
insl
jb
bound
or
sub
cmp
into
add
push
les
sub
test
das
sub
push
sub
xor
sbb
cmpsb
or
leave
imul
lahf
test
mov
iret
or
insl
sub
dec
mov
sub
pop
sahf
imul
add
or
pop
dec
in
or
mov
sub
and
xchg
out
sub
ja
loop
pop
imul
out
repnz
call
rol
je
inc
add
adc
push
push
shrb
insl
xor
mov
dec
ss
movsl
inc
sub
out
addr16
out
jmp
mov
movsb
mov
jl
or
paddw
sbb
jo
inc
iret
sub
and
or
xor
push
xchg
pop
imul
dec
bound
xchg
lret
ljmp
stos
sub
and
mov
mov
lret
xchg
add
call
shlb
out
pop
or
dec
popf
das
das
or
movlps
cmp
cmp
in
dec
and
mov
ja
dec
mov
pop
sbb
sub
sub
les
mov
mov
sub
stos
push
addr16
or
sub
xchg
adc
data16
fs
inc
pop
das
pop
iret
dec
aas
shrb
add
inc
insl
outsl
pop
jecxz
sub
jecxz
xchg
in
mov
push
mov
in
mov
inc
jo
pusha
mov
mov
int
mov
incb
dec
or
lret
pushf
shll
bound
lret
push
nop
fmulp
adc
adc
add
mov
xchg
dec
sbb
das
imul
jns
outsl
popf
testb
outsb
stos
sub
sbb
cmpsb
insl
push
pop
aaa
or
adc
addr16
leave
dec
ljmp
arpl
loope
scas
push
data16
imul
loope
sub
jp
cltd
aad
imul
popa
dec
push
sub
add
out
cs
dec
mov
scas
or
inc
add
push
push
stos
insl
dec
bound
cmpsl
dec
mov
cltd
cmpl
imul
xchg
pop
out
adc
cmpsl
popa
lret
iret
repz
ja
jp
ljmp
jmp
mov
cmp
dec
and
lcall
orl
lret
jae
adc
pop
ja
iret
mov
imul
outsb
dec
inc
dec
inc
or
leave
pop
mov
lods
or
push
xor
pop
dec
loopne
mov
cmc
outsb
pop
mov
stc
xchg
sub
xchg
data16
bound
sub
cmpsl
pop
sbb
cs
addr16
jnp
xchg
loopne
mov
dec
inc
iret
adc
adc
or
aaa
or
dec
xchg
das
cmpsb
lret
mov
mov
jl
imull
scas
loopne
mov
and
pop
es
jmp
jl
lea
icebp
jge
sub
jmp
faddl
pop
push
adc
sub
mov
sub
ficoml
test
sub
and
adc
movsl
mov
xor
push
pop
mov
lahf
out
add
xchg
mov
xor
in
ret
sub
pop
adcb
leave
pop
subb
dec
testb
cmp
or
movsb
mov
jae
inc
leave
sub
in
mov
les
out
outsl
popa
pop
dec
adc
int
ret
daa
out
sub
or
or
aam
sbb
adc
out
in
stos
xchg
or
dec
pusha
outsl
cmp
loopne
mov
mov
stos
int
sub
mov
inc
fisttpll
aad
test
insl
in
jnp
ljmp
mov
sahf
push
shlb
jl
fcoml
das
cmovns
iret
scas
lock
mov
push
bound
sbb
enter
ljmp
ret
cmp
and
mov
mov
les
nop
cmpsb
lret
imul
addr16
fdivrl
mov
add
pop
dec
or
mov
dec
ljmp
cmp
arpl
pop
lea
shll
xor
mov
sbb
dec
ret
mov
ds
dec
adc
leave
xchg
outsb
sub
arpl
or
adc
addr16
ds
int3
adc
mov
ret
xchg
out
jg
jo
jne
lret
testb
push
xchg
or
int
xor
jo
int
mov
out
jmp
lret
enter
xchg
dec
xchg
dec
add
repz
mov
fs
int
and
inc
dec
cwtl
rcrl
dec
adc
ret
push
dec
dec
aas
mov
icebp
andb
das
addr16
or
movsl
or
jne
jmp
stc
repnz
cmp
scas
pop
jb
mov
imul
sti
xor
lea
lret
dec
mov
inc
and
outsb
add
das
out
mov
mov
aam
push
fadds
dec
and
add
cmp
imull
mov
sub
or
stos
or
or
dec
int
mov
or
jo
fildl
lret
loopne
repz
imul
stos
fdivp
in
jmp
sub
jno
dec
outsb
or
or
jb
push
dec
or
or
or
out
inc
test
mov
stos
pop
and
dec
jp
ds
xchg
dec
cltd
pop
mov
push
cmp
outsl
out
jb
mov
pop
shl
jmp
inc
dec
dec
popa
test
mov
xor
test
in
outsb
mov
test
loope
in
movl
jb
daa
or
or
cmpsb
sub
scas
ret
loopne
sub
decb
push
xchg
xchg
push
loope
dec
sub
and
jae
loop
or
dec
add
sub
addr16
mov
sub
xor
sbb
and
daa
sub
out
aam
int
dec
add
and
out
test
jge
pop
dec
pop
jp
cmp
push
loope
dec
xor
scas
add
adc
push
addr16
sub
out
dec
jbe
addr16
add
push
mov
iret
dec
lea
or
arpl
inc
das
imul
sbb
dec
lea
inc
into
push
lods
pop
fildl
insl
or
sub
out
or
movsl
or
dec
clc
jge
fists
out
lods
or
int
push
dec
addb
adc
subl
stos
pop
in
fisttps
mov
outsb
mov
leave
fcmovne
inc
cld
arpl
in
aas
sub
iret
sub
sbb
pop
test
mov
imul
cmp
dec
add
and
ds
pop
jl
adc
or
loop
lret
out
int
scas
xchg
push
pop
inc
vphsubbw
pop
dec
jl
add
or
sub
popf
inc
cmp
or
stc
push
cld
int3
add
outsl
dec
lret
lea
lret
or
xor
stos
cmp
movaps
push
dec
pop
mov
outsb
imul
subb
jns
lods
cmc
pop
cmp
insl
and
pop
pop
nop
mov
int3
push
das
repnz
call
sub
call
adc
outsb
cmpsl
add
or
inc
out
lret
ljmp
lret
jae
orl
mov
pop
stc
mov
push
jle
lret
sub
scas
leave
ljmp
out
dec
daa
repz
pop
insb
out
jmp
sub
dec
nop
int3
mov
inc
and
lods
pop
jp
or
outsb
leave
fwait
sbb
or
insl
dec
xchg
stc
push
fcmovu
push
lret
sub
outsl
mov
mov
jne
ror
out
adc
fwait
sub
loop
lret
iret
push
arpl
sbb
cmpsl
data16
adc
add
xor
in
jmp
dec
or
sub
imul
or
out
push
stos
mov
psllw
xor
or
lret
ds
mulb
mov
cmpsl
add
ljmp
pop
push
push
scas
adc
adc
sahf
lods
scas
mov
push
arpl
lret
out
out
pop
inc
and
push
lahf
stos
pop
or
dec
sub
lret
mov
xchg
jno
insl
out
mov
scas
out
mov
xchg
sti
xchg
dec
xorb
or
mov
or
jl
dec
fsubs
sub
or
daa
pop
dec
ret
lea
add
xor
imul
jge
idiv
jmp
cmp
cs
add
in
insl
paddq
inc
sub
sub
mov
mov
push
out
test
push
pop
inc
sub
pop
dec
outsl
sub
mov
arpl
cmpsl
fadds
and
adc
out
iret
leave
lret
adc
imul
fimull
out
test
dec
mov
pusha
xchg
cli
add
dec
repz
lds
nop
fistpl
xchg
inc
push
jmp
iret
int
lret
test
mov
dec
mov
cmc
pop
scas
aaa
adc
in
xchg
fwait
push
int3
push
mov
inc
sub
cmpsb
iret
add
dec
inc
xor
lret
ljmp
dec
subl
inc
dec
cs
mov
mov
add
data16
cli
and
iret
jmp
dec
data16
sub
sub
pop
sysret
shrb
out
pusha
outsb
xchg
js
cltd
xor
inc
pop
mov
cmp
and
mov
pushf
dec
outsl
xchg
ja
pop
imul
sub
aad
cmpsb
push
cld
mov
movsl
sub
lods
addr16
pop
imul
daa
in
jge
mov
add
imul
arpl
mov
sbb
call
push
daa
fsubl
into
mov
iret
sub
cs
out
push
inc
xchg
aam
xchg
dec
push
jmp
lds
cwtl
sub
or
stos
std
add
jg
dec
mov
daa
das
sub
or
pop
lret
rclb
insl
sub
mov
jns
mov
fbld
push
adc
sub
sbb
and
mov
jle
imul
jp
and
in
outsl
jb
loop
xor
dec
and
and
mov
push
fisttpll
mov
push
out
mov
lods
mov
mov
jne
pop
push
mov
mov
insl
sub
js
pop
or
das
pop
std
mov
mov
xor
pop
pop
xor
das
sub
push
dec
dec
test
adc
outsl
enter
ljmp
mov
imul
fsubrs
mov
dec
add
or
sbb
sub
jae
jb
dec
shr
or
dec
sub
sbb
pop
mov
xchg
sub
inc
stc
mov
sbb
push
decl
in
sub
int
xor
add
addr16
pop
imul
addr16
lea
sub
movsl
stc
sub
mov
push
jp
xor
loope
dec
xor
mov
leave
daa
sbb
out
mov
cmp
lds
push
ljmp
dec
mov
icebp
mov
add
rorb
cmp
fcompl
cld
dec
dec
stos
pop
mull
mov
cmp
das
pop
imul
lock
rcrl
or
cs
sbb
mov
arpl
mov
and
jno
in
xchg
jge
push
lret
iret
sub
out
shrb
pop
sub
push
hlt
shlb
ds
loopne
cmp
outsb
ret
xchg
arpl
cmpsl
nop
cs
adc
adc
out
movsb
adc
dec
mov
mov
lds
and
pop
sub
dec
pop
ret
out
push
out
fimull
sub
leave
cmpsl
ljmp
dec
in
xchg
arpl
cwtl
xchg
or
imul
push
xchg
adc
test
dec
addr16
ret
dec
sbb
into
outsl
ret
out
add
push
lds
pop
movsl
mov
mov
mov
loope
dec
addr16
adc
es
jmp
sti
add
inc
daa
or
jle
cmp
shll
or
pop
int3
and
out
dec
inc
sbb
push
push
imul
aas
rorl
cli
fwait
cs
in
jl
xchg
ret
imul
paddw
outsl
mov
aas
inc
pop
xor
or
jb
adc
int3
mov
lret
jns
out
dec
scas
adc
jne
iret
std
fdivrl
jmp
sarb
outsb
push
adc
mov
scas
mov
dec
add
mov
stos
iret
and
or
mov
mov
and
das
pop
xchg
push
test
sub
sub
inc
call
addr16
or
insl
pop
push
lods
dec
dec
push
ds
fs
dec
and
push
outsl
sbb
icebp
into
outsb
xor
cmp
and
or
fmulp
inc
mov
sub
or
sbb
outsb
movb
pushf
ret
das
dec
sbb
push
call
adc
pop
bound
sti
cltd
mov
dec
cltd
jp
repz
daa
mov
or
nop
mov
xor
repz
xor
fwait
ret
sub
or
or
xchg
daa
inc
sub
out
add
int
insl
sbbl
push
lea
sbb
dec
test
cmc
subl
adc
cli
fwait
inc
out
insl
test
mov
mov
faddl
aas
lret
stos
scas
mov
or
or
sysexit
mov
xor
adc
xchg
pop
stos
mov
fbld
jb
das
sarl
xlat
adc
lods
mov
inc
xchg
cltd
push
fs
clc
cmp
and
call
or
mov
loope
lret
scas
push
rcrl
sub
ret
testl
daa
push
inc
mov
jae
cs
stos
add
in
or
or
adc
lock
pop
aam
stos
mov
jl
adc
mov
out
or
jb
nop
incl
das
outsb
loopne
or
popa
jecxz
push
cmpsb
inc
mov
cmp
xchg
shll
lret
nop
mov
imul
and
push
sub
dec
push
or
in
add
pop
mov
mov
lea
push
leave
into
sub
ror
inc
xchg
adc
data16
xlat
pop
pop
into
pop
mov
sub
adc
adc
std
xlat
adc
stos
sub
inc
sbb
ficompl
iret
cs
sbb
pop
adc
test
or
sbbl
pop
xor
or
dec
push
xchg
mov
add
push
ret
movsl
push
xor
adc
or
xchg
cltd
push
mov
les
aaa
enter
push
imulb
xchg
pop
pop
xchg
dec
inc
enter
push
es
pop
dec
mov
cmp
sub
idivb
dec
mov
stos
xchg
dec
push
mov
aad
xchg
mov
dec
aad
cmpsl
xchg
inc
push
xchg
aad
dec
xchg
push
stos
es
fwait
xchg
push
push
imul
ss
push
mov
aad
stos
xchg
lret
or
int
scas
push
stos
out
sub
lahf
es
iret
mov
dec
dec
sbb
aas
add
jg
int3
iret
mov
mov
bound
outsb
pop
aaa
data16
scas
mov
push
lret
cmpsb
dec
mov
mov
jmp
lea
jo
push
ljmp
cmp
movsl
or
jp
push
mov
iret
adc
loop
cmpsl
out
lret
xchg
mov
out
daa
addr16
push
jmp
sbbb
imul
lret
mov
fbstp
loopne
jp
data16
push
ja
mov
in
dec
enter
out
pop
lret
in
jl
sub
addr16
sub
aaa
idivl
dec
jmp
into
inc
imul
pop
ljmp
lahf
enterw
cmpsl
stos
sub
lea
hlt
bound
cld
repnz
nop
cli
push
mov
xchg
push
les
xchg
enter
dec
sub
testl
test
in
out
mov
dec
jmp
out
lea
sbb
outsb
xor
loope
dec
stos
lret
adc
and
or
addr16
scas
xchg
and
pop
or
adc
dec
imul
sahf
push
test
lret
or
dec
push
daa
mov
addr16
cmp
xor
inc
cmpsl
outsb
aas
mov
adc
das
ljmp
dec
jo
into
or
test
add
or
lea
adc
inc
sub
and
imul
jp
ret
outsb
adc
js
jmp
push
in
dec
clc
mov
test
out
shll
and
mov
repz
test
dec
out
iret
mov
dec
cmp
lods
xchg
test
adc
out
dec
insl
adc
xchg
dec
or
sub
sub
out
nop
mov
and
out
or
out
dec
lds
push
das
push
dec
int3
or
adc
mov
sub
into
pop
push
sarb
dec
mov
rcrb
leave
imul
push
push
pushf
enter
push
cmp
push
int
add
or
or
ret
test
xchg
stos
cs
scas
imul
lcall
push
test
or
shr
inc
imul
addb
mov
stos
push
outsl
dec
scas
into
xor
adc
push
xchg
scas
mov
in
add
adc
loopne
mov
movsl
lods
call
push
cmpsl
sub
andl
mov
out
fisttpl
sub
lret
adc
imul
and
push
out
sub
in
and
adc
or
pop
cmpsl
stos
bound
scas
xchg
test
into
pop
mov
fabs
int
adc
out
test
sub
subb
out
cs
mov
imul
xor
stos
adc
or
add
inc
iret
outsb
xchg
out
sub
sub
arpl
test
imul
dec
loopne
jge
popa
dec
cmc
push
outsl
rcrb
jmp
pop
loop
dec
testb
into
outsb
dec
pop
sub
out
mov
sbb
jmp
sub
adc
pop
adc
sub
out
mov
and
daa
and
int3
cmp
mov
iret
xor
data16
lods
add
int3
ljmp
sub
insl
cmp
dec
lret
call
int
imul
popf
lret
pop
push
and
stos
dec
daa
cs
sub
ljmp
add
iret
scas
push
cmc
subl
dec
xchg
wrmsr
or
pusha
lods
dec
out
dec
cmp
xchg
inc
test
shrb
mov
adc
adc
loope
or
sub
sti
insl
jecxz
pop
xor
jo
imulb
out
push
leave
ljmp
sub
sbb
dec
sub
inc
insl
inc
or
or
imull
fsubrs
mov
das
jmp
das
stos
sbb
scas
das
dec
pop
add
sbb
sbb
pop
sub
mov
dec
adc
sub
stos
out
dec
lods
sub
pusha
push
lea
iret
orl
xchg
repnz
loopne
ret
movsl
scas
mov
dec
sbb
dec
add
cltd
outsl
sub
mov
push
scas
dec
or
adc
sub
lods
cs
rorb
cld
mov
push
shrb
inc
cmp
adc
lret
push
leave
shrb
mov
mov
loop
lret
sub
imul
cmpl
mov
int
loope
int
cmpsl
out
xchg
sbb
xchg
or
xchg
daa
dec
jmp
test
add
push
pushf
out
test
inc
lret
ljmp
jecxz
push
and
ret
sub
pop
sub
popa
dec
iret
or
adc
or
lahf
imul
or
or
push
or
xchg
sub
dec
out
mov
sub
lret
out
mov
js
sbb
or
imul
push
dec
dec
push
sahf
dec
dec
pop
mov
xor
add
push
insl
out
jmp
or
inc
outsb
sub
xchg
jnp
outsb
jb
nop
xlat
js
dec
shr
pusha
pop
outsl
insl
leave
into
out
mov
jmp
lock
arpl
sub
imul
xchg
ret
push
cmpsl
popl
inc
xor
insb
int
sahf
imul
xchg
add
cli
lret
shrb
push
mov
or
das
mov
in
adc
dec
scas
jmp
jmp
xor
adc
outsl
fildll
lahf
dec
adc
mov
nop
faddp
lods
xchg
or
or
inc
mov
xor
addr16
or
lea
xchg
cmpsb
in
push
sub
scas
cltd
lret
sub
arpl
push
mov
mov
out
pop
int
dec
xchg
sub
and
and
inc
shr
lea
add
test
sub
inc
scas
add
dec
or
icebp
daa
scas
or
dec
mov
das
push
xchg
pop
imul
stos
jg
cld
mov
int
addr16
cmpsl
mov
mov
scas
lods
nop/reserved
xor
call
push
push
adc
add
pushf
dec
jmp
daa
fisubrl
test
popf
pop
lea
xchg
sub
or
lods
pinsrw
out
imulb
imul
insl
dec
leave
dec
or
addl
ficompl
sbb
push
test
cmpsl
ret
outsb
ret
aam
sbb
leave
xchg
pushf
jmp
mov
push
jmp
jae
cmpl
iret
fs
sub
dec
addr16
push
outsb
out
push
hlt
cmp
lods
mov
in
push
adc
iret
into
adc
in
mov
dec
popf
sub
cmpsl
lock
or
or
sub
xor
data16
mov
lret
cmpsl
out
loop
dec
in
mov
or
xor
daa
or
pop
xchg
add
or
jmp
stos
insl
daa
inc
or
cmp
aam
das
sub
cmp
add
rorl
out
adc
mov
arpl
sub
dec
jmp
mov
test
bound
push
xor
xchg
in
bound
out
mov
dec
icebp
arpl
jecxz
pop
ret
mov
fsub
cmpsb
lods
sbb
outsl
scas
push
stos
push
subb
nop
and
enter
adc
pop
lea
add
mov
or
push
fwait
dec
inc
dec
out
xor
leave
add
push
sub
sub
lret
adc
or
arpl
or
sub
int
daa
imul
or
fldcw
or
subl
fiadds
lock
out
and
adc
mov
fldt
fwait
out
fildl
repz
dec
out
lcall
mov
dec
out
lea
mov
imul
daa
push
mov
and
inc
fisttpll
mov
dec
sbb
jmp
test
iret
xchg
xor
into
pop
subb
push
movsb
out
out
pop
pop
daa
ljmp
outsl
scas
cmp
dec
push
push
xchg
and
je
addr16
push
mov
leave
pop
mov
dec
in
das
dec
xchg
inc
mov
pop
adc
lds
mov
loop
sub
test
adc
dec
lret
adc
fcoml
and
mov
out
lea
repnz
fisttpll
jmp
cmc
lods
sti
jge
push
sub
icebp
hlt
incl
mov
cmpsl
imul
add
sub
lods
sub
adc
sbb
daa
adc
dec
pop
dec
push
mov
std
inc
sub
add
out
pop
dec
loopne
jg
daa
jmp
lahf
adc
leave
jae
sub
dec
in
inc
sub
sub
pop
das
xor
inc
pop
dec
adc
comiss
fstl
adc
or
push
out
mov
test
pop
imul
pop
lret
sub
mov
cs
andl
setae
pop
sub
incb
mul
into
and
lret
out
in
nop
mov
stos
mov
add
prefetchw
or
adc
fildll
insl
das
sub
loope
outsl
and
xor
aam
ljmp
daa
dec
scas
xchg
fdiv
cs
imul
add
inc
xchg
push
insl
jmp
in
jns
mov
repnz
or
enter
imul
push
repz
pop
cmp
test
out
ret
jbe
xor
lret
dec
leave
sub
push
xchg
mov
fmul
ljmp
mov
ljmp
bswap
addr16
fcoms
or
add
das
pop
or
cwtl
outsb
dec
out
ja
add
dec
fisubrl
sub
xchg
mov
sti
lods
lea
aaa
mov
or
bound
and
lods
sti
push
sbb
sbb
mov
mov
mov
mov
or
cmc
xor
inc
xchg
dec
int3
and
das
or
cmp
adc
out
mov
dec
xchg
sahf
out
into
call
add
or
mov
pop
int3
in
or
stos
lret
out
dec
dec
adc
stos
adcl
imul
scas
lcall
cmpsb
jmp
jno
dec
push
mov
ret
dec
jmp
loope
leave
lea
mov
jae
mov
mov
sub
das
hlt
add
ud2
insl
out
nop
xor
pop
lret
sub
dec
cs
out
pop
push
sbb
xor
sub
cmp
xchg
stos
push
pop
push
jmp
mov
mov
xchg
mov
jmp
inc
sub
dec
dec
ljmp
xchg
jno
jmp
cltd
pop
push
test
dec
into
ret
repnz
bound
lods
sub
mov
mov
dec
insl
dec
arpl
into
out
daa
repnz
scas
push
push
cs
or
lods
push
subl
negb
out
mov
sub
xchg
add
imul
adc
push
xor
or
mov
call
or
mov
cmp
sub
or
ret
addr16
lods
mov
pop
or
std
in
das
dec
pusha
in
pop
and
xchg
push
out
mov
aaa
sub
call
mov
loopne
dec
pop
mov
mov
pop
xchg
xor
into
and
cmpl
mov
stos
sarl
or
mov
and
jmp
sub
popa
jae
scas
mov
arpl
clc
arpl
inc
mov
jns
push
dec
or
and
sub
jno
cmpsl
inc
xchg
sub
cs
insl
sbb
inc
stos
leave
in
push
dec
mov
cmpb
inc
adc
int
int3
hlt
pop
or
int3
faddl
push
jecxz
lea
cmp
or
add
fsubrs
popa
pop
sub
pop
cmp
std
leave
in
lret
repnz
mov
pop
insb
add
sub
mov
push
mov
mov
xlat
cmc
fists
leave
dec
adc
ja
popf
xor
jge
xchg
pop
addr16
stos
aad
outsl
ret
inc
mov
jp
mov
das
mov
imulb
xor
pop
mov
dec
cltd
mov
cli
bound
add
xchg
pusha
insb
cltd
les
fucomip
pxor
ds
push
dec
dec
cs
jae
stos
sub
sub
iret
adc
leave
xchg
mov
inc
bts
outsl
incl
xchg
or
imul
shll
pop
mov
xchg
push
scas
dec
xchg
xchg
lcall
cmp
cld
adc
mov
add
jp
ljmp
lea
test
imul
sub
loopne
movsl
dec
addb
mov
sbb
ret
inc
mov
outsb
pop
popa
sub
xor
insb
out
pop
sub
adc
imul
sub
iret
out
pop
inc
scas
sub
and
in
sub
or
in
outsb
sub
dec
add
mov
or
test
pop
mov
decl
insl
les
imul
hlt
adc
inc
or
pop
aad
ret
orl
mov
pop
lods
lret
fs
cmc
sub
in
sub
mov
mov
fwait
and
bound
popa
imul
out
cwtl
cs
mov
out
pcmpgtd
jmp
hlt
imul
jno
addr16
nop
mov
in
into
adc
les
out
or
sub
jge
fimuls
imul
and
shld
cmpsl
or
ljmp
jns
inc
cld
arpl
add
pop
push
inc
sub
pop
xor
push
pop
mov
adc
les
mov
shrl
enter
sub
orl
cmpsl
sub
cs
push
push
out
push
mov
jmp
outsb
lods
sub
ljmp
repnz
ffree
dec
xchg
xchg
ret
int
inc
cmc
scas
lods
sbb
pop
mov
or
push
xor
jmp
lret
jbe
dec
dec
icebp
decb
es
loop
push
push
test
into
pop
mov
xor
xchg
rorl
xchg
test
loop
iret
outsl
or
in
wrmsr
out
sub
sahf
or
scas
dec
loope
addr16
pop
adc
adc
mov
dec
or
imul
in
enter
das
sbb
inc
dec
stos
adc
jne
popf
cltd
or
imul
in
leave
sbb
mov
jg
jns
xchg
icebp
push
out
movsb
jl
arpl
into
jecxz
pop
arpl
adc
mov
inc
dec
hlt
lea
scas
js
mov
sbb
push
and
fcoml
cmp
sub
fwait
jmp
dec
lea
pop
aaa
in
scas
pop
push
incl
lret
xor
enter
pop
lret
leave
test
cltd
cli
inc
icebp
xchg
js
insb
mov
mov
lret
aas
mov
pop
adc
lea
or
push
push
xor
xchg
pushf
addr16
dec
in
jecxz
sarb
stos
bound
mov
xchg
add
sub
lods
out
mov
inc
dec
iret
xor
xchg
jns
jle
div
mov
mov
and
cmp
dec
sub
das
dec
loop
mov
sub
xor
adc
adc
aam
or
mov
clc
xchg
dec
outsb
and
cmp
loope
mov
outsl
loop
sub
daa
sbbl
pop
push
andnps
fmuls
push
test
pop
clc
adc
xor
rdtsc
xchg
xchg
in
imul
inc
dec
mov
dec
or
stc
push
mov
dec
inc
push
loopne
shlb
fadd
mov
xchg
adc
repnz
or
iret
mov
pop
or
dec
bound
out
mov
or
scas
scas
sub
xchg
enter
push
fimuls
and
sbb
scas
mov
or
shlb
rorb
sub
leave
adc
in
push
xor
xchg
into
push
fmuls
push
aam
cmp
inc
dec
pop
mov
stos
xchg
les
outsb
xchg
push
sub
test
loope
or
or
lock
sub
outsl
cmpsb
cmpsl
stos
pop
mov
pushf
dec
cmp
lret
rcrb
js
clc
and
dec
sbb
daa
or
jbe
arpl
mov
int
sahf
dec
mov
adc
data16
lret
rorb
aam
mov
sub
sub
pushf
lret
mov
sub
sub
xor
test
push
dec
daa
xlat
or
out
mov
pop
pop
sbb
and
sub
rorl
xchg
hlt
outsl
dec
mov
dec
or
sub
int3
push
xchg
mov
xchg
fdivs
ret
xchg
mov
dec
out
cmpsl
xchg
dec
test
int3
cmp
xchg
push
stos
and
push
ss
xchg
push
stos
or
outsl
dec
xchg
push
push
imul
dec
test
fwait
xchg
push
push
adc
fstl
xchg
aad
dec
jmp
int3
mov
leave
int3
cs
mov
pop
addr16
mov
xchg
mov
mov
xchg
mov
pusha
mov
clc
sub
xchg
inc
jmp
int3
cmpsl
xchg
pop
inc
rolb
lahf
ret
dec
inc
cmp
or
sti
mov
mov
test
scas
inc
sub
es
ds
push
or
mov
mov
fadds
imul
sub
mov
adc
or
cld
and
daa
leave
in
dec
pushf
popf
xchg
xor
out
movsb
out
sub
insl
dec
inc
add
and
mov
sti
std
das
fcompl
sub
fcomip
xor
shrb
lods
shrb
mov
push
scas
insl
add
daa
out
pop
ljmp
or
shld
dec
rorl
repz
dec
mov
mov
fisubl
push
adc
enter
or
enter
iret
inc
popa
ljmp
xchg
hlt
jns
sbb
mov
in
or
daa
cmpsl
sub
movsb
and
aam
push
and
test
or
inc
das
cmp
inc
jg
addl
push
mov
dec
sub
ror
or
mov
cmpsl
scas
daa
out
lods
mov
push
je
cmpsl
dec
out
scas
add
mov
shl
movsl
int3
dec
in
mov
dec
or
sub
jmp
out
push
ljmp
out
int
arpl
gs
pavgw
and
sub
add
or
mov
mov
insl
andl
mov
or
jmp
xchg
push
fs
mov
jo
subb
lea
test
adc
sub
xor
or
sub
dec
test
mov
dec
dec
scas
sub
in
sahf
or
sbb
std
outsb
push
jmp
dec
mov
sbb
dec
daa
push
insl
out
sub
adc
pusha
jns
cmpsw
mov
imul
sub
jmp
faddl
dec
filds
add
ljmp
sub
inc
daa
das
sub
ja
pop
lods
fistl
test
dec
xchg
sub
adc
dec
out
or
out
dec
and
out
ret
ret
lea
or
mov
cmovne
or
outsb
out
add
ret
out
loop
jmp
movsb
lret
adc
or
mov
lahf
cli
bound
add
rorl
inc
mov
sub
jmp
lret
adc
dec
dec
xchg
sub
cs
sub
test
sbb
filds
loop
or
stos
test
push
mov
rorl
push
sbb
test
imul
mov
stc
daa
cmp
add
stos
push
mov
ficompl
jmp
add
xchg
lretw
hlt
pop
cmp
std
dec
outsb
pop
push
orb
dec
sbb
fsubrl
mov
adc
testb
subb
dec
jne
adc
dec
mov
das
xchg
sub
repz
adc
mov
ret
cs
sub
sub
adc
popa
or
xchg
lret
test
add
aas
loope
rorl
rclb
or
ret
dec
rorb
cmp
mov
sub
stos
fwait
leave
dec
adc
inc
bswap
addr16
fadds
and
adc
outsb
xchg
xor
dec
mov
scas
or
mov
popa
dec
cs
cmpsl
in
sub
aad
arpl
ret
fisttpl
dec
dec
jle
loop
sub
lret
les
pop
call
arpl
dec
nopl
cmp
add
dec
dec
push
ljmp
lret
or
cmpsb
arpl
arpl
ret
sub
int
lea
outsl
adc
or
out
push
inc
scas
sub
push
scas
orl
push
add
dec
dec
adc
or
and
mov
loopne
bound
scas
or
push
addr16
adc
xchg
dec
mov
inc
lret
mov
ret
adc
jecxz
cmp
pop
or
add
sub
aas
cs
loope
daa
dec
stos
or
sub
outsb
pop
rolb
lock
shl
imul
cmp
or
icebp
push
aas
ret
in
lea
and
test
xor
hlt
mov
mov
or
push
push
and
or
sub
iret
bound
push
enter
into
inc
sbb
fiaddl
scas
std
loopne
dec
and
pusha
imul
and
and
cld
mov
movsb
lret
cmpsl
jno
jmp
mov
cmp
sub
out
lea
test
test
xchg
or
stos
sahf
cmpsb
insb
lods
adc
pop
or
outsb
into
out
push
out
or
adc
or
aad
jbe
ljmp
mov
sbb
or
xchg
int
mov
ret
insl
sub
fbstp
fimuls
inc
mov
sbbl
data16
daa
xor
into
mov
jmp
scas
pop
imul
inc
or
bound
sahf
push
test
mov
sub
sub
insb
stos
push
lock
mov
push
outsl
dec
xor
pop
mov
loopne
scas
sbb
adc
out
in
mov
insl
repnz
push
add
cmp
xchg
addr16
fdivl
pushf
out
sub
ja
xor
mov
incl
in
push
rorb
dec
aas
mov
mov
mov
or
or
pop
xchg
movsb
jmp
or
loop
out
lret
js
das
incb
and
or
lock
leave
inc
add
cmp
xchg
inc
ljmp
jmp
lret
scas
aaa
dec
push
or
pop
sub
decb
inc
imulb
cmc
or
push
dec
loop
out
bound
sbbb
or
dec
dec
int
sub
xor
daa
into
sbb
pop
fistpl
enter
outsb
cmpsl
loop
xchg
cmc
push
xor
dec
fwait
sub
mov
repnz
test
out
pop
xchg
jae
jno
push
imul
sub
stos
out
data16
sbb
out
addr16
int
and
int
fldt
loop
in
imul
mov
lret
ja
xchg
or
xchg
orb
or
test
lret
mul
insl
xor
into
ds
movsb
mov
out
add
lret
sbb
push
cs
test
test
out
xor
mov
imul
sub
mov
and
jmp
dec
out
lret
inc
pop
loope
lret
psllq
pop
mov
or
arpl
and
imul
test
inc
dec
out
sub
jnp
std
scas
sub
or
subl
mov
jle
dec
imul
sub
fildll
jmp
outsb
xor
pop
call
xchg
fldl
stos
mov
adcl
sub
push
sub
aas
cmp
xchg
imul
orl
pop
cs
les
das
out
jmp
scas
mov
adc
dec
sub
fs
push
xor
push
das
or
lock
mov
fnsave
sub
lods
push
mov
sub
iret
out
dec
out
aaa
adc
push
syscall
fwait
out
adc
pop
push
lret
push
bound
dec
stos
cmc
mov
outsl
pop
ljmp
cmp
mov
or
or
test
or
iret
dec
jecxz
sub
pop
in
cs
pop
sub
inc
push
pop
push
call
xchg
jmp
stos
and
xchg
jl
jne
sbb
out
iret
pop
in
imul
sbb
leave
loopne
cld
add
xchg
jmp
iret
dec
add
out
pop
loop
outsb
mov
push
mull
mov
in
cvtpi2ps
sbb
inc
mov
sub
and
mov
or
xor
lods
pop
out
orb
dec
adc
and
mov
inc
lods
outsb
dec
adc
sbb
dec
sbb
mov
inc
or
dec
or
out
test
dec
or
sub
ljmp
dec
or
outsl
cmpsl
repnz
repnz
test
or
or
ljmp
sub
bound
jne
imul
adc
push
scas
push
daa
mov
dec
sub
imul
scas
data16
push
sbb
mov
in
int
loope
sub
lret
insl
psubd
sbbb
fsubl
mov
xor
xor
xor
movsb
push
dec
loope
lret
imul
inc
push
nop
shrb
fisubrl
into
sub
sbb
lea
stos
das
arpl
cmpsl
out
add
dec
popa
outsl
outsb
or
das
sub
jns
sub
mov
das
mov
iret
rorb
out
test
mov
jns
xchg
push
or
dec
pop
mov
iret
lea
sub
aaa
out
leave
xorl
push
iret
dec
dec
jns
out
scas
scas
sbb
xor
lret
shrl
or
nop
das
add
movsl
xchg
or
addl
jmp
push
or
sub
outsb
ficomps
leave
inc
and
loop
inc
cs
cmp
sub
or
dec
imul
add
stos
sbb
xchg
scas
adc
sub
addb
dec
shlb
mov
mov
bound
xchg
push
xor
or
dec
in
mov
mov
push
jno
inc
stos
inc
mov
stc
lea
or
in
cwtl
loope
mov
sub
or
mov
pop
jne,pn
stc
xlat
dec
xchg
daa
sub
daa
sub
lret
out
dec
xlat
les
push
pop
xchg
addr16
out
vphaddubd
xchg
mov
outsb
sub
push
dec
imul
sbb
xchg
sbb
cmp
bound
popa
mov
dec
data16
pusha
into
jge
pop
sub
pop
cs
rorb
and
outsl
lea
dec
out
adc
push
test
out
leave
pop
jge
sti
push
out
sub
pop
mov
seto
mov
add
rorb
xchg
jmp
pop
sub
push
lretw
push
pusha
or
lret
and
int
mov
inc
out
imul
push
cli
stos
push
cmp
stc
jnp
aam
outsl
sbb
icebp
mov
enter
inc
push
mov
dec
push
test
xchg
addr16
leave
mov
pop
or
sub
stos
or
xor
in
dec
adc
rcl
enter
test
fcmovb
in
push
mov
call
sub
and
clc
dec
and
cmp
mov
xor
inc
adc
movsl
xor
ret
dec
or
xor
dec
mov
mov
xchg
mov
inc
or
dec
mulps
imul
ljmp
orl
dec
sub
fisttps
in
das
mov
mov
or
out
jg
sbb
inc
mov
mov
out
jmp
in
sbbb
sbb
psllq
jns
xor
int3
loopne
mov
out
dec
pavgb
cmp
push
mov
dec
enter
adc
cmpsl
out
ljmp
push
je
or
jle
xchg
sub
imul
sbb
or
inc
addr16
inc
mov
or
mov
adc
test
mov
test
dec
rcl
push
insl
or
xor
xchg
xadd
jge
je
js
hlt
imul
lret
jbe
repnz
out
sub
sub
mov
enter
leave
xchg
pushf
xlat
inc
lret
lods
push
or
dec
dec
hlt
insl
leave
fmulp
xchg
push
or
lcall
dec
arpl
and
adc
or
lds
xchg
rsqrtps
daa
sub
mov
stos
push
or
imul
push
clc
fisubrl
pop
mov
dec
jno
addr16
adc
or
add
push
sahf
outsl
mov
sub
mov
or
out
mov
sub
push
mov
jge
pop
stos
sbb
or
insb
dec
add
into
xchg
mov
or
push
ret
into
and
out
inc
out
inc
lret
sub
loope
dec
adc
pop
repz
int
outsb
dec
sbb
pop
dec
push
push
or
push
adc
xchg
cld
dec
sahf
inc
or
dec
xchg
stos
out
ss
mov
sahf
cltd
lds
stc
xchg
xor
xchg
daa
inc
pop
or
push
iret
or
dec
adc
inc
xlat
mov
inc
sub
xchg
sub
adc
insl
and
mov
scas
icebp
jecxz
icebp
cmp
dec
icebp
dec
popl
scas
dec
sbb
push
dec
arpl
sbb
cmp
mov
xor
stc
out
ljmp
mov
ja
mov
adc
das
sub
test
push
adc
out
mov
xchg
pop
inc
mov
and
and
cmp
iret
sub
test
sub
dec
or
xchg
insb
inc
jae
inc
fsubs
ret
push
loope
dec
lret
insl
ljmp
xchg
mov
adc
or
out
mov
and
insl
dec
lods
icebp
adc
out
scas
xor
sbb
les
or
mov
sub
pop
arpl
imul
push
mov
sahf
cmpsl
ljmp
inc
dec
mov
ret
incl
and
sub
arpl
fisttps
insl
lea
subl
aad
mov
pushf
and
dec
pop
dec
scas
movsb
or
and
stos
cmp
leave
loop
lret
sub
add
or
loop
or
sub
add
cmp
outsl
addr16
inc
xchg
iret
dec
push
sub
out
scas
xor
inc
fsubs
bound
sbb
adc
arpl
push
decb
push
lods
xchg
dec
xchg
mov
dec
jns
mov
rclb
out
adc
pushf
jnp
push
mov
loope
sub
or
pop
sbb
push
push
insl
push
jmp
or
mov
dec
lods
pop
dec
pop
out
imul
xchg
addr16
stos
stc
mov
scas
lock
xchg
push
xchg
jmp
xchg
mov
daa
mov
lea
sub
outsb
jmp
lret
sub
cmp
lods
insl
sub
push
dec
inc
pop
das
push
rcll
or
imul
leave
adc
sub
aas
outsl
shll
xchg
iret
lret
iret
out
inc
cltd
fisubl
imul
push
inc
in
or
ficoms
pusha
loope
dec
push
cmpsl
outsb
lock
lahf
dec
adc
lea
xchg
xchg
subl
lock
fwait
push
loopne
fimuls
and
lret
jle
push
das
shlb
sbb
scas
les
dec
arpl
dec
hlt
cs
and
int
or
daa
sub
xor
lea
lahf
outsl
or
lret
lahf
imul
sahf
test
test
sub
orl
pop
lock
adc
fs
push
sti
stos
pop
sub
repnz
pop
push
xor
lods
scas
pop
dec
dec
push
ret
outsb
por
jmp
xor
or
daa
imul
or
xor
sub
xchg
out
scas
pop
repz
into
dec
add
popa
or
out
rcll
out
push
lea
movsl
loop
pop
into
sub
mov
imul
shl
scas
hlt
sahf
enter
addr16
je
dec
outsl
jge
or
inc
cs
add
inc
push
dec
fisttpll
pop
cmp
adc
or
xor
or
mov
orl
das
xor
adc
xor
int
adc
mov
outsb
sub
or
or
and
cmpsl
dec
into
jp
stos
xchg
leave
dec
xchg
dec
push
add
cs
dec
push
adc
sub
mov
cwtl
dec
and
dec
sub
lcall
xor
or
outsl
scas
or
insl
sbb
mov
xchg
or
push
pop
and
andb
test
mov
xorb
sub
cmc
push
mov
dec
pop
mov
sub
pop
mov
in
scas
xchg
movsb
dec
mov
imul
leave
cltd
out
sub
popa
jecxz
data16
and
jmp
jl
pop
lea
ret
adc
xor
pop
imul
push
dec
inc
out
jmp
push
add
cmpsl
lea
pop
and
sbb
push
push
data16
sub
sbb
xchg
dec
xchg
or
dec
dec
jecxz
or
in
in
adc
daa
adc
adc
xchg
push
adc
adc
call
or
orl
scas
loopne
jne
pushf
cmp
scas
add
aaa
adc
enter
jns
jns
iret
shrb
leave
imul
mov
in
sub
lret
inc
mov
pop
aas
cs
outsb
mov
call
dec
jge
mov
dec
lret
dec
outsb
sbb
pop
pop
imul
popa
or
push
int3
setle
mov
mov
dec
call
test
into
out
rcrl
daa
push
ljmp
cmp
sub
adc
inc
jns
repnz
inc
in
lds
xchg
ret
dec
loop
lret
sub
sbb
adc
scas
leave
and
adc
ret
push
sub
jno
iret
push
stos
lds
push
mov
sub
dec
ljmp
ret
dec
mov
sub
inc
lods
cld
mov
sbb
test
adc
mov
xlat
stos
repnz
sub
outsl
pop
and
push
hlt
mov
lods
lret
push
imul
inc
leave
jl
dec
mov
or
xchg
fisubl
imul
and
in
push
sbb
sbb
daa
lods
jge
je
mov
jns
xor
add
in
outsb
iret
mov
jo
cs
scas
dec
or
or
xor
mov
mov
pop
xchg
lret
dec
insl
push
out
cmovno
scas
dec
stos
jp
cmp
das
sub
int
lods
dec
or
push
mov
or
popf
sub
out
dec
dec
xor
scas
or
sahf
arpl
mov
add
subb
xorb
adc
mov
or
std
xor
outsb
and
or
pop
push
shrl
jns
sti
imul
sub
mov
negl
sub
or
jle
out
lret
fwait
push
loop
sub
and
cmpps
fwait
dec
mov
lahf
xor
or
fbld
mov
jmp
and
adc
mov
pusha
fwait
sub
inc
mov
movsb
lret
rclb
or
scas
into
insl
adc
add
xchg
dec
out
lods
outsb
mov
xchg
xor
inc
std
imul
cmc
das
and
sbb
leave
or
xor
sub
cltd
sbb
into
adc
cs
leave
nop
push
das
push
inc
scas
out
lcall
sub
mov
out
cmp
sub
adc
mov
jb
dec
jmp
dec
dec
adc
ret
call
sub
int3
xor
pop
in
push
popf
out
pop
push
mov
fldcw
addr16
pop
push
out
adc
sub
loopne
popf
imul
in
mov
sub
movsb
sub
lret
inc
les
arpl
bswap
setb
cmpsb
imul
cmpsb
ret
ret
mov
and
lret
mov
xor
pop
and
adc
ret
stos
mov
dec
push
rol
iret
ret
adc
fldcw
adc
dec
out
pusha
add
dec
imul
mov
addr16
or
push
lods
leave
scas
pop
rorl
or
sbb
bswap
inc
insl
dec
stos
mov
or
in
les
lea
shr
test
mov
xor
sbb
lods
loopne
xchg
xchg
std
test
imul
or
test
jno
mov
pop
in
scas
adc
or
mov
xchg
push
jl
xchg
pop
insl
das
mov
ljmp
pop
dec
out
inc
fisubl
pop
das
das
xor
sub
in
dec
jmp
and
lea
cltd
sbb
adc
mov
xor
dec
mov
push
add
insl
insb
mov
ret
dec
push
sub
adc
jmp
jmp
iret
ds
push
xor
shlb
sub
ljmp
dec
fwait
shll
pop
dec
pop
test
xor
sti
inc
mov
cwtl
outsl
jmp
mov
shufps
movsb
xchg
out
or
jecxz
int
das
scas
imul
test
xchg
out
fbld
sub
imul
shrb
jge
out
loope
or
adc
mov
push
daa
das
fsubrl
leave
add
sub
adc
adc
insb
ret
dec
jmp
adc
and
ljmp
stos
cmpsl
xor
cltd
mov
lods
scas
sub
lds
test
sub
sbb
adc
stos
into
add
loop
jmp
jge
dec
out
pop
push
bound
and
cmpsl
addr16
mov
popa
daa
mov
jbe
pop
ljmp
notl
xchg
or
pop
inc
ljmp
out
daa
jmp
repnz
es
and
mov
lret
out
ljmp
xchg
cs
sub
lcall
or
jbe
shrl
out
ret
cmpsl
and
xchg
xchg
inc
lods
or
daa
pop
xchg
imul
jecxz
iret
sub
push
pop
sub
scas
mov
xchg
int3
stc
cmp
xchg
fsubrs
nop
mov
pusha
dec
out
cmpsl
push
mov
outsb
stos
sub
aaa
mov
sub
daa
push
inc
ret
out
and
inc
dec
lea
sbb
pop
xor
sub
cmp
into
fwait
mov
xchg
or
dec
insb
xor
mov
stos
test
outsb
mov
xchg
or
push
pop
pop
test
insl
pop
cmpsb
rclb
mov
or
or
lret
stc
imul
jmp
test
adc
fimuls
sbb
ret
or
cmpsl
shld
push
out
lret
xor
pusha
dec
sbb
les
outsl
scas
push
sbb
add
mov
adc
cld
adc
sub
sub
pop
mov
pusha
push
dec
jb
mov
mov
sub
xchg
ds
adc
int
pop
push
xor
scas
or
flds
sub
inc
mov
cli
mov
cltd
pop
ds
pop
loope
mov
sub
sub
mov
or
jb
mov
add
sub
dec
lret
dec
xchg
or
inc
and
leave
movsl
fsubl
or
fsubrl
adc
inc
int
or
loop
or
mov
push
push
pop
xchg
test
dec
movsb
and
adc
out
mov
pop
pop
adc
xor
sub
imul
dec
sbb
orl
jmp
and
loope
out
xorb
imul
mov
les
rorb
or
imul
cmpsl
iret
xchg
adc
test
in
and
lods
xor
bound
pop
in
mov
stos
pop
xchg
or
pop
ljmp
lods
dec
insw
xchg
pop
lock
inc
cwtl
xchg
dec
imul
out
shrb
or
or
inc
stos
and
xchg
pop
daa
mov
imul
scas
mov
sub
sub
in
leave
mov
add
popa
lea
mov
push
dec
pushf
test
mov
xorb
fsubrl
jne
insl
inc
outsb
dec
xchg
jns
cmpsb
rorb
mov
inc
imul
xchg
pop
dec
sub
in
fisttpll
adc
mov
inc
dec
stos
sub
cmp
mov
out
adc
xor
daa
dec
enter
add
xchg
mov
arpl
mov
ljmp
faddp
mov
cmc
inc
push
int
pop
add
mov
inc
shrl
addr16
push
icebp
dec
test
sbb
negl
jne
xchg
pop
inc
out
cltd
mov
jbe
sbb
xchg
ljmp
dec
xchg
test
enter
scas
xor
and
out
pop
or
lock
fimuls
jle
adc
add
jo
scas
daa
dec
and
and
cmc
out
out
sub
dec
into
pushf
movsl
mov
push
iret
push
xor
daa
inc
or
movsl
dec
dec
pushf
ds
into
addl
insl
js
pushf
out
xchg
movsb
scas
nop
movb
fstl
push
mov
loop
push
cli
scas
jecxz
arpl
jecxz
jecxz
sahf
cmp
push
sub
fistpl
jb
jl
inc
lret
dec
sbb
sub
sub
mov
daa
int3
enter
rcll
inc
dec
dec
test
sbb
mov
sub
xor
xchg
or
fsubrl
fimull
mov
mov
push
cmp
dec
cmp
loopne
inc
and
out
push
aad
cmpsl
inc
sbb
dec
mov
imul
mov
dec
mov
sub
pop
sub
lahf
ljmp
jmp
sbb
inc
pop
paddsw
sub
dec
push
test
nop
test
cmp
outsl
sbbb
pop
sbb
xor
push
lods
xchg
sub
sub
adc
or
hlt
adc
adc
lahf
out
cmpsb
and
inc
jns
lea
sub
rorb
int
test
or
mov
fildll
and
sub
or
cltd
test
push
xchg
orl
pop
lea
sbb
or
push
fldt
int3
mov
or
pop
mov
or
ss
inc
adc
cmp
in
int
dec
les
pusha
or
pop
in
adc
orl
jge
push
pop
test
mov
add
inc
inc
mov
push
fcmove
sub
out
mov
push
mov
xor
jmp
ss
xor
mov
mov
pop
dec
leave
jmp
dec
jae
and
pop
icebp
mov
int3
lahf
fimuls
pop
addr16
dec
scas
test
in
pop
and
add
dec
or
loope
dec
out
int
adc
aaa
dec
fstpt
dec
push
jmp
out
stos
jp
xor
ret
int
daa
std
jmp
lea
sidtl
fmul
fsub
movsb
outsb
lret
pop
iret
sub
xchg
lea
mov
int
fmuls
loope
in
xchg
ror
nop
jmp
aas
xor
iret
or
push
daa
mov
or
ds
loopne
mov
scas
scas
dec
mov
iret
jmp
arpl
mov
popf
and
scas
push
idivl
hlt
cli
mov
xor
out
xchg
into
xor
mov
mov
out
sub
imul
sbb
or
push
mov
test
mov
outsb
cmp
or
stos
out
or
orl
loope
xor
inc
xchg
in
cmpsl
mov
mov
sbb
lret
mov
push
fsts
sbb
cli
jmp
fucom
sub
lret
in
push
lock
xor
loope
adc
lret
mov
sbb
inc
inc
inc
inc
or
scas
popl
out
leave
lea
outsl
stos
or
imul
ret
push
pop
daa
dec
cmp
dec
addr16
lret
adc
das
mov
mov
icebp
nop
mov
and
test
push
jmp
cmpsw
bswap
sbb
stos
push
fsubrp
xlat
int3
out
inc
ret
xor
rcrl
adc
or
fisubrs
lea
dec
cmp
push
mov
les
lods
jecxz
adcb
dec
inc
addr16
inc
ja
sub
or
in
jmp
xchg
cltd
xchg
mov
push
mov
xor
stos
imul
sub
sub
jne
mov
ret
negb
repnz
ljmp
out
subl
cmp
insl
int
dec
stos
dec
je
sub
sub
popf
das
cmp
out
data16
outsl
das
ljmp
or
or
or
xor
inc
scas
push
mov
lret
adc
xchg
adc
add
mov
fadd
loope
push
dec
or
xor
subl
sbb
leave
and
dec
fldcw
test
int
xchg
or
push
cmp
lods
shlb
lret
push
dec
lret
jae
mov
loop,pn
jge
jmp
int3
mov
inc
mov
lods
sbb
std
sti
outsl
insl
ljmp
pop
outsl
lea
imul
sub
jne
mov
push
dec
jecxz
daa
adc
inc
sbb
pop
rcr
xchg
xor
das
cli
subb
sbb
dec
fsubrp
bound
push
or
mov
adc
or
das
pushf
inc
inc
movd
mov
in
stos
call
sub
aas
leave
add
push
movsl
out
out
jmp
dec
das
dec
subb
dec
lds
add
push
imul
insl
ss
sarb
adc
mov
stos
js
mov
lcall
or
lret
test
test
in
and
paddb
arpl
scas
push
stos
mov
in
or
into
cmpsl
rcr
dec
test
inc
out
adc
nopl
sub
dec
push
sub
inc
test
out
loop
out
sahf
outsl
adc
and
mov
lret
outsb
jmp
cltd
bound
add
inc
lods
dec
pushf
mov
movsb
sub
lret
repz
mov
outsl
ljmp
cmc
dec
push
or
out
ficomps
scas
sub
daa
mov
aaa
push
daa
iret
mov
and
pop
lret
arpl
arpl
fs
loop
into
outsl
dec
out
insl
dec
pop
dec
dec
jg
or
mov
test
outsl
leave
or
test
lods
out
push
dec
sub
out
addr16
dec
mov
sbb
or
ror
mov
mov
scas
push
sbb
bound
push
bound
inc
or
xchg
sub
push
or
sbb
das
daa
insb
dec
push
dec
loop
test
cmp
sbb
add
mov
jb
shlb
push
sbb
pop
std
mov
cmp
pop
adc
inc
mov
dec
or
lods
sub
jecxz
push
imul
rol
add
roll
rorb
adc
sub
jb
scas
mov
mov
cmp
or
popa
inc
out
scas
out
sbb
aas
or
ljmp
inc
jb
loope
out
mov
or
repz
and
loope
dec
jae
int
inc
push
pop
sti
cmpsl
or
nop
inc
push
push
cltd
fcomip
dec
push
sub
pop
lret
dec
repz
fcomps
subb
imul
mov
pop
or
mov
ret
lea
insb
mov
sub
scas
or
mov
and
in
mov
mov
xor
lret
hlt
xchg
dec
cmpsl
xchg
stos
adc
or
aas
push
lret
enter
mov
out
ljmp
jmp
cmpsb
dec
sub
fwait
in
inc
test
leave
das
dec
dec
stos
pop
sbb
push
pop
pop
loope
push
and
daa
push
dec
sahf
lret
movlps
lret
or
pop
sub
or
or
dec
dec
dec
fdivs
into
sbb
das
ljmp
movsl
adc
mov
jmp
sti
dec
cld
xor
xor
repnz
dec
lods
and
xchg
mov
into
hlt
es
ljmp
jno
dec
sti
cwtl
jb
mov
jle
jp
mov
jbe
adc
pop
iret
bound
aad
mov
jle
lods
ret
add
addr16
inc
jl
xchg
or
daa
int
mov
sbb
mov
leave
ret
out
aaa
adcl
ja
shrb
dec
pop
mov
sub
ja
or
into
sub
inc
xor
mov
sub
inc
dec
jmp
xor
cmp
jge
out
dec
push
push
pop
adc
sarl
adc
dec
repz
scas
out
cmp
insl
sbb
in
dec
mull
mov
push
xor
rolb
frstor
sub
inc
adc
push
lods
mov
lret
pop
repnz
inc
sub
mov
inc
andb
jb
or
ret
sub
and
sub
or
std
lock
daa
rcll
xchg
push
or
rdtsc
lea
call
into
or
jle
dec
rorb
xchg
mov
mov
push
imul
insl
jp
in
iret
into
dec
push
imul
mov
ss
rorb
out
cld
andl
dec
adc
cmpsl
dec
jo
xchg
into
sbb
cmpsb
push
sub
push
jb
icebp
in
mov
push
das
outsb
sub
lea
stos
cmp
or
das
int
adc
imul
js
cs
fwait
pop
rorl
je
dec
ret
outsb
leave
lret
sub
shl
dec
ja
adc
test
in
sbb
hlt
or
jp
and
and
jns
iret
popf
dec
pop
je
stos
adc
xchg
sbb
pop
or
subl
loopne
sub
sub
jmp
outsb
into
jmp
imul
mov
dec
cwtl
imul
imul
test
pop
pop
and
movb
or
pusha
sub
in
leave
dec
leave
push
sub
push
test
jmp
test
sub
shrb
add
dec
das
out
mov
adc
adc
mov
pop
orl
test
incl
inc
xchg
in
test
scas
imul
mov
rorl
scas
sub
cmovno
pop
dec
test
or
enter
mov
sub
jmp
inc
or
dec
ljmp
std
in
shrb
loope
iret
daa
daa
dec
sub
or
out
mov
cmp
push
sub
xchg
sub
mov
mov
push
out
dec
or
lret
adc
aas
add
dec
xor
pop
sbb
cmp
sarb
cmp
into
add
or
mov
pop
lret
xchg
filds
scas
sub
add
orl
adc
pop
out
leave
lahf
ljmp
stc
test
out
jg
sbb
xor
in
pop
popa
xor
data16
dec
insl
mov
jge
jnp
push
test
orb
decl
push
xor
or
mov
loopne
inc
insl
or
test
sub
sub
out
fcomps
adc
out
adc
pop
addr16
add
sub
mov
orl
loop
xor
sub
rorb
aas
call
out
out
fsub
sbb
ret
lock
stos
cmpsl
or
lret
fcoml
sub
data16
sbb
lret
daa
dec
pop
scas
int
dec
dec
jmp
push
dec
dec
and
sbb
rcrl
cltd
add
xchg
test
cmc
dec
and
dec
or
call
or
or
adc
inc
sub
sub
cmpsl
mov
mov
lahf
lcall
push
mov
xchg
outsl
cwtl
and
sub
dec
fcos
movsl
push
and
cmpsb
bswap
loope
mov
ficomps
mov
push
lea
pop
sbb
adc
outsb
dec
loopne
pop
pop
lods
sub
adc
test
in
pop
adc
daa
stos
mov
cmp
xchg
sub
lock
clc
or
out
loop
sub
sub
leave
sub
xchg
fmulp
repz
out
sub
pop
inc
sbb
pop
loopne
lock
dec
mov
or
jmp
out
imul
jmp
mov
sub
push
dec
add
shrb
mov
dec
clc
pop
mov
lea
test
cli
cwtl
stos
push
push
xor
push
pop
roll
leave
stos
dec
mov
cltd
mov
push
scas
data16
sub
cmpl
sub
cltd
xchg
and
mov
jmp
rolb
dec
ret
into
imul
push
dec
icebp
and
stos
shrb
scas
pop
je
icebp
repnz
pop
cld
repnz
mov
mov
jo
imul
sub
inc
cmpsb
lods
int
inc
ljmp
or
lods
scas
dec
aaa
adc
mov
int
xchg
push
in
fisubs
loopne
sub
lret
jbe
lods
call
adc
push
sub
pushf
inc
pop
inc
inc
fadds
in
lret
xchg
mov
dec
adc
sub
or
iret
sbb
mov
out
push
push
mov
cmp
push
int
fisubs
xor
inc
dec
insl
or
pop
in
adc
popl
adc
iret
sub
imul
stc
shr
or
sub
stos
push
mov
sub
mov
inc
push
cmp
jmp
pop
cmp
lret
or
or
int3
cmp
imul
push
fdivr
cli
adc
scas
dec
push
shr
ljmp
out
out
sub
sub
das
push
ficomps
lock
add
mov
dec
xchg
push
inc
or
mov
out
mov
and
sbb
jmp
pop
push
mull
push
adc
lret
lea
xor
scas
scas
imul
das
and
pop
cmpsl
adc
or
or
movd
scas
jmp
test
mov
in
dec
or
icebp
add
xchg
inc
cmp
dec
push
pop
pslld
mov
lea
and
or
mov
fsubrl
aad
and
out
xor
les
or
cs
inc
sub
and
mov
push
movswl
adc
sbbb
sub
lods
mov
ljmp
xchg
rep
scas
bound
mov
into
les
xchg
cmp
mov
cmpsl
scas
or
dec
inc
cwtl
bound
dec
dec
sub
jne
mov
inc
pop
mov
fcmovb
movsl
call
imulb
out
pusha
cmp
das
pop
pop
faddl
inc
jns
nop
pusha
aas
shrb
lods
jmp
iret
and
mov
or
std
mov
mov
sbb
inc
in
outsl
xor
jle
xchg
mov
lea
pmaxsw
xor
cmp
fcompl
sbb
jle
lret
or
ja
sub
leave
cmp
into
or
cmp
iret
xor
jne
sub
out
leave
das
into
dec
int
inc
and
push
loop
jp
loope
mov
jmp
fimull
in
sub
and
call
dec
mov
out
jge
out
or
push
icebp
mov
and
outsb
and
dec
loop
jae
outsb
inc
inc
aas
jb
scas
das
icebp
mov
insl
adc
stos
sub
sbb
aas
ljmp
or
jecxz
sub
cvtps2pi
das
inc
mov
adc
sub
jmp
call
adc
shrb
cmp
scas
ds
mov
in
out
ret
pop
and
dec
cltd
mov
pop
mov
mov
daa
or
push
add
dec
test
sbb
push
cmc
or
xor
outsb
dec
inc
les
movsl
sbb
mov
cmpsl
dec
push
in
stos
push
jnp
andb
lds
jmp
push
cmpsl
or
mov
lea
stos
addr16
sbb
push
test
imul
arpl
cmp
adc
adc
push
mov
push
jns
cld
xor
ffree
ret
outsl
andl
mov
jg
adc
cmpsl
ljmp
adc
mov
adc
mov
ljmp
inc
sbb
dec
in
sbbl
jo
addr16
cmp
sbb
clc
jb
movsl
pop
push
cs
mov
jnp
jne
push
xchg
imul
dec
or
arpl
imul
dec
dec
dec
or
pop
hlt
pop
add
inc
sbb
jno
sti
repnz
shlb
jl
sbb
mov
dec
hlt
out
imul
in
imul
fldz
aad
xchg
adc
push
push
push
push
inc
les
sbb
dec
adc
fisubrs
and
pop
stos
pop
fucomp
pop
lret
ret
inc
fsubp
mov
lods
pop
cmp
ss
in
mov
push
jge
jmp
dec
pop
pop
movsl
mov
push
push
pop
sub
pop
or
stos
add
dec
jecxz
xchg
lahf
xchg
out
adc
sub
std
test
leave
bound
adc
dec
or
or
jno
push
adc
das
push
cltd
das
lfs
xor
aad
hlt
test
lret
test
stos
dec
lcall
xchg
adc
push
outsb
pcmpeqw
sbb
sbb
in
push
xchg
or
xchg
stc
pop
loopne
addr16
cmpsl
xchg
lods
sub
cwtl
pop
daa
adc
sub
aaa
jb
inc
lea
and
dec
dec
out
pop
or
mov
dec
jecxz
imul
into
mov
adc
inc
pop
jmp
xchg
das
and
cmpsl
mov
or
dec
or
stos
inc
mov
iret
ret
popa
sbb
push
or
adc
sub
das
or
and
cmpsl
pop
xor
in
imul
jmp
xchg
or
dec
repnz
js
lret
repnz
adc
in
mov
mov
das
push
dec
push
movsl
popf
mov
xchg
mov
or
repz
jnp
push
jp
push
stos
sub
mov
xchg
outsb
repz
adc
push
out
or
push
adc
nop
mov
ja
enter
push
and
mov
pop
shrl
mov
rorl
jmp
js
or
push
int
adc
daa
xchg
imul
pop
dec
mov
out
scas
popf
or
mov
sub
push
iret
cs
out
mov
mov
cwtl
and
movl
arpl
pop
sbb
jbe
insb
pushw
sub
ret
add
xchg
push
dec
xchg
cmp
jb
lret
dec
adc
inc
or
into
loope
lods
stos
adc
out
dec
arpl
or
inc
cmc
lds
outsb
pop
push
jle
dec
test
stos
push
sbb
scas
sbb
cmpsb
or
jnp
adc
or
dec
outsb
mov
outsl
pop
imul
insl
sub
into
push
popf
out
fwait
or
jmp
stos
sub
mov
into
call
and
leave
enter
cmp
out
jmp
arpl
loopne
fbstp
adc
xchg
dec
scas
pop
push
mov
sub
in
dec
leave
sbb
lahf
addr16
cmovge
out
dec
sub
lods
or
dec
add
xor
test
and
sbb
dec
imul
outsl
adc
push
rcrl
repnz
test
iret
dec
cwtl
aam
insl
dec
cmp
out
scas
mov
sahf
fcmovnb
clc
push
or
and
jecxz
insl
icebp
les
adc
repz
fisttps
cmpsl
push
leave
sti
sbb
lea
jbe
ja
fimuls
lods
dec
arpl
and
add
popf
or
sub
scas
or
in
lret
dec
mov
xchg
xchg
fs
xchg
push
cltd
or
ljmp
pop
sbb
add
and
stc
imul
pop
imul
lret
and
lret
push
xor
push
lahf
scas
inc
adc
stos
push
outsl
or
loope
out
or
sub
adc
iret
xor
adc
repz
imul
into
adc
in
jmp
dec
stos
xchg
loope
sub
mov
mov
bound
xchg
mov
mov
jns
sbb
int
daa
outsl
inc
mov
inc
mov
ret
push
or
or
mov
or
mov
lahf
lret
clc
and
insl
pushf
sbb
shr
stos
cs
pop
pop
or
into
push
sub
dec
jecxz
or
add
mov
jns
aas
mov
jo
inc
dec
jmp
popf
outsb
shll
stc
jbe
cs
in
scas
sub
push
jge
jae
pop
pushf
xor
stos
fdivr
int3
leave
cmpsl
or
lds
dec
sbb
dec
dec
inc
mov
push
sub
fidivrs
ud2
dec
lahf
outsb
ljmp
mov
lahf
rorb
scas
or
nop
fildl
or
add
shrb
cli
xchg
push
rcrl
fsubrs
scas
dec
jns
call
sub
outsb
pop
out
push
or
imul
xchg
inc
out
sarb
dec
rolb
and
pop
pop
push
push
stos
push
adc
test
push
mov
mov
fldt
or
xchg
jb
in
push
jo
addr16
xchg
daa
imul
out
cmpsb
pop
stos
and
js
testb
sub
movsb
jb
filds
lea
lock
cwtl
adc
xor
dec
enter
push
mov
leave
pop
cwtl
fs
loope
push
mov
sub
in
pop
ret
xchg
scas
inc
or
mov
push
mov
packssdw
dec
sbb
lods
orl
out
push
inc
dec
sub
pushf
add
or
lea
mov
into
or
inc
cmpsb
jmp
push
push
adc
jecxz
dec
shll
sbb
outsb
sub
xchg
lods
and
imull
pop
out
inc
push
aas
lret
daa
jmp
and
mov
lahf
push
cltd
pusha
dec
push
or
sub
sub
jge
and
xor
adc
inc
xchg
int
or
mov
mov
test
in
dec
sub
imul
dec
pop
mov
imul
stos
movaps
sub
in
mov
int3
out
out
mov
xor
dec
icebp
sbb
jo
ljmp
scas
jle
dec
fstpl
loope
dec
lret
imul
inc
adc
cmp
dec
inc
push
and
call
sub
into
cmpsl
mov
cmp
and
cmc
sbb
or
sti
dec
nop
inc
sub
ret
shlb
xchg
and
xchg
ror
or
mov
outsb
outsl
lret
push
adc
mov
out
test
das
dec
sub
and
lahf
sub
adc
lds
add
push
sub
mov
incb
jmp
xchg
push
adc
cmpsl
dec
stos
jne
inc
jmp
sub
das
js
sbb
adc
xchg
scas
lods
orl
adc
or
stos
fmuls
out
fadds
dec
cmpsw
addl
mov
push
jmp
cmp
shr
jp
add
or
cmp
outsb
add
cmpsb
xchg
sbb
sub
pop
cmpsl
sub
ret
addr16
out
rclb
jmp
jne
xchg
lret
pop
lods
or
ljmp
hlt
in
fldt
dec
dec
mov
daa
icebp
mov
xchg
lods
leave
iret
xor
pop
dec
ret
les
push
imul
fwait
mov
das
push
jmp
mov
leave
xchg
cmp
rclb
fmuls
imul
dec
sub
rol
popa
dec
jmp
aaa
ss
xchg
or
push
cmpsl
dec
adc
sbb
mov
decb
adc
imul
or
out
shrb
cmpsl
xchg
lahf
fisubs
imul
dec
sub
scas
xchg
daa
add
sub
adc
scas
leave
imull
scas
pop
mov
mov
mov
sbb
cs
mov
mov
mov
mov
out
pop
sub
inc
push
mov
or
mov
adc
in
sub
sub
daa
or
ljmp
dec
movsb
and
movups
mov
das
push
movsb
or
sub
shl
inc
sub
test
xor
pop
mov
scas
das
lcall
arpl
orl
pusha
dec
into
push
push
rorb
xchg
push
adc
mov
push
or
jo
mov
xor
outsl
clc
adc
imul
push
stos
dec
das
ljmp
mov
inc
insl
out
das
jb
mov
mov
mov
stos
mov
mov
sub
aas
test
js
pop
push
dec
cwtl
mov
lret
mov
cs
lcall
dec
scas
mov
imul
lret
dec
xchg
mov
dec
stos
cmp
push
pop
mov
sbb
dec
or
shrl
arpl
outsb
push
sahf
dec
dec
adc
popf
mov
pop
cmp
test
push
and
cmpsl
jb
push
inc
rcrl
pmaxub
lcall
push
scas
or
or
lret
stos
xchg
adc
incl
cmpsb
dec
push
push
int3
ret
popw
inc
pop
or
stos
insl
mov
stos
sahf
lahf
leave
leave
call
cs
mov
push
jl
sbb
in
or
dec
dec
bound
jo
negb
adc
mov
lods
mov
lret
dec
mov
repnz
movsb
mov
push
dec
cmpsl
adc
cmp
dec
mov
dec
enter
sub
mov
and
sbb
push
dec
fcomip
inc
pop
int
mov
fsubrp
sub
xchg
dec
xchg
loopne
lcall
and
sub
addl
subb
xor
mov
cltd
outsb
test
or
aas
add
mov
xchg
ljmp
test
cwtl
adc
dec
int
sub
imul
adc
mov
mov
sbb
inc
out
rorl
and
test
adc
das
xor
push
scas
sbb
xchg
xchg
push
or
das
pop
push
arpl
pop
cmpsl
roll
push
shrl
leave
sub
aad
jbe
cmp
iret
in
mov
into
leave
xchg
pop
pop
loop
roll
aas
or
sub
test
loop
dec
paddusb
daa
mov
lea
mov
aam
test
inc
dec
arpl
sub
xchg
push
sahf
xor
orb
loope
jecxz
sbb
adc
mov
sub
sub
inc
fldt
add
xor
dec
xchg
mov
ja
sti
inc
mov
out
adc
das
sbb
insl
out
fmull
out
sbb
imul
push
mov
out
mov
sub
lods
insb
xchg
iret
push
pop
adc
xchg
out
dec
lds
push
jae
lods
xchg
loopne
jmp
jecxz
lcall
stos
adc
das
sbb
fistpl
data16
daa
movsl
scas
sub
insb
insl
icebp
shl
sub
popa
divl
dec
sahf
push
ljmpw
rcrb
dec
dec
inc
les
or
imul
test
insl
mov
fwait
stos
pop
ret
mov
adcb
repnz
pop
or
lret
xchg
fsubs
scas
xor
sub
jge
iret
push
mov
arpl
mov
dec
scas
testl
fimuls
fnstsw
or
sar
leave
test
ficoml
dec
out
or
jmp
outsb
insb
inc
out
inc
insb
out
loopne
sahf
mov
xchg
sub
test
int
scas
or
jecxz
loop
push
dec
in
stc
imul
cmpsl
cmp
into
mov
in
or
dec
inc
imul
stos
out
repz
into
in
les
scas
xchg
es
pop
push
mov
push
movl
xor
push
or
and
fdivrs
or
sub
or
xchg
or
int
and
pusha
inc
jb
or
inc
ljmp
lods
mov
add
leave
sub
inc
sub
int
dec
out
mov
sub
int
push
sub
rolb
daa
xchg
adc
push
aaa
sbb
add
scas
stc
insl
test
pop
lret
insl
or
or
test
inc
and
adc
out
or
into
or
dec
dec
dec
inc
dec
add
stc
push
scas
add
pop
sub
sub
orl
push
add
dec
adc
mov
paddsw
push
mov
push
lds
pushw
mov
mov
xor
lods
pop
sub
inc
sub
movsl
imul
jle
mov
in
sub
scas
xchg
dec
in
loop
outsl
ss
push
test
pop
push
push
lods
sbbl
enter
and
outsb
xlat
cmpsl
int3
loopne
dec
add
jmp
mov
stos
rorl
pop
xchg
inc
cmpsl
push
mov
adc
mov
addr16
scas
push
sub
pop
loop
int
mov
cltd
mov
test
push
add
jmp
mov
sbb
test
inc
movl
pop
pop
sub
lock
xchg
stos
sub
or
dec
sub
lods
jns
mov
jmp
imul
mov
or
sub
pop
addb
shl
fidivl
loop
dec
in
stos
jnp
movsl
sahf
inc
xchg
inc
popl
sub
lret
leave
test
jecxz
push
bound
iret
mov
pop
sbb
dec
pop
sub
popa
push
or
out
jns
jp
in
push
dec
mov
mov
test
pop
cmp
in
sub
out
adc
out
dec
mov
sub
sub
xchg
pop
cmpsl
dec
dec
and
pop
outsl
test
inc
or
or
xchg
and
xchg
enter
movsb
pushf
sub
fdivr
les
pushf
jecxz
into
arpl
mov
sbb
outsl
call
or
lods
out
adc
mov
int
je
xor
cmp
mov
outsl
mov
fsubs
xor
push
ret
add
lret
test
inc
cmpsl
stos
outsb
xchg
dec
lret
call
inc
aad
cmp
imul
into
sub
pop
shlb
or
or
xchg
xchg
cli
xchg
pop
imul
stc
std
hlt
inc
outsl
aas
bound
icebp
imul
sbb
dec
in
or
pop
or
fwait
scas
into
out
push
imul
test
pushf
subb
inc
int
or
xor
mov
pop
shl
pop
loop
fadd
hlt
sub
mov
bound
lods
push
out
test
adc
out
push
inc
insb
pop
mov
sub
sbb
test
push
mov
pop
jp
mov
in
int
insl
xchg
test
or
bound
rclb
add
pop
imull
or
arpl
or
in
mov
or
aas
cmc
or
push
mov
or
stos
push
imul
mov
or
lea
bound
out
xor
int
daa
je
aad
or
push
imul
jbe
sub
sbb
xchg
mov
in
adc
sub
popl
xchg
or
lret
pop
decb
lret
or
ret
int
into
dec
xchg
dec
sub
add
adc
repnz
push
hlt
out
and
or
or
rol
sub
adc
mov
imul
or
lea
jl
pop
mov
mov
cmp
inc
adc
iret
jg
and
push
xchg
jno
das
movsl
mov
mov
outsl
pop
cmp
or
aad
pushf
mov
je
push
dec
adc
sub
outsb
or
pop
inc
iret
cmpsl
out
test
fisubs
mov
lock
add
mov
test
mov
jl
cs
rol
out
adc
adc
pop
daa
or
int
call
test
or
lds
dec
pushf
hlt
scas
inc
addr16
sbb
scas
bound
pushf
into
and
add
lock
js
jmp
imul
add
sub
add
pop
push
xor
out
adc
sbb
rdmsr
lea
xor
cmpsb
insl
and
rorl
fimull
ljmp
lea
xchg
xchg
mul
das
mov
loope
icebp
daa
jle
loop
or
in
popa
test
push
pop
outsb
lahf
push
cmpsl
and
push
out
pop
sti
scas
adc
in
dec
pop
pop
and
lods
jmp
jbe
add
cs
int
nop
movsb
or
out
xchg
sub
jecxz
out
subl
pop
mov
mov
adc
popf
xor
jmp
out
out
jbe
je
or
mov
ljmp
push
or
mov
bound
data16
mov
insl
sti
mov
adc
xchg
into
adc
pop
imul
stos
push
popa
insl
xor
out
xor
jmp
ljmp
push
sbb
imul
stos
iret
add
dec
insl
dec
cmp
into
movsl
cmp
xor
das
or
or
lret
or
ret
nop
adc
push
fdivs
mov
stc
pop
sub
test
test
mov
push
or
sub
out
lds
sti
cmp
sub
out
and
mov
adc
sub
jge
imul
data16
cmpsl
push
jmp
pop
ljmp
test
les
push
iret
mov
iret
sbb
xor
xchg
sbb
in
mov
scas
or
push
push
lea
jnp
pushf
add
movsb
push
jb
dec
xor
inc
mov
sbb
dec
jae
insl
pop
ret
std
les
mov
lea
dec
jmp
int3
test
xchg
dec
negb
cmpsl
sbb
lret
outsl
lods
pusha
sub
lret
out
aas
jo
mov
jnp
sub
pop
cs
daa
and
into
cld
in
lahf
add
dec
push
dec
imul
xchg
lret
add
inc
sub
pop
and
cmpsl
cs
or
out
dec
mov
pop
push
aad
sbb
out
jp
data16
push
pusha
popa
adc
lret
pop
dec
xor
cmp
fwait
pop
clc
imul
push
gs
inc
dec
sbb
adc
imul
mov
out
adc
imul
aaa
arpl
test
inc
sarl
mov
nop
push
adc
xchg
outsb
dec
xor
dec
imul
sbb
push
dec
pop
xchg
daa
cmp
lret
sub
adc
lock
dec
insl
addl
movsb
sub
jmp
call
pop
sbb
sbb
fwait
outsb
enter
add
stos
lea
popf
out
adc
fildll
dec
insl
inc
in
int
das
nopl
push
or
stos
inc
js
in
jo
xor
or
gs
xor
adcl
sub
std
dec
lods
dec
jno
or
pop
iret
mov
xchg
sbb
sbb
outsl
jmp
xchg
in
pop
mov
cmp
push
cmp
imul
pop
dec
xchg
lea
jle
popa
dec
jmp
lds
in
xchg
sub
adc
xchg
adc
cli
in
imul
push
xchg
dec
dec
fisttpl
push
out
jg
lea
push
adc
dec
lock
das
dec
aaa
sub
push
mov
dec
jno
lret
lcall
imul
pop
aas
clc
mov
add
fmuls
lds
jne
pop
or
xchg
inc
and
dec
dec
int
jmp
lods
mov
mov
sub
aam
push
scas
push
jmp
or
or
jge
rcrl
ret
addr16
mov
ror
dec
iret
outsl
ret
xchg
std
sub
fs
pop
or
into
popa
daa
lret
das
sub
dec
sbb
inc
inc
and
ret
lret
lret
jecxz
dec
jb
lret
incl
push
sbb
sub
scas
sub
stos
pop
xor
jge
adc
ret
fwait
in
out
roll
jl
ret
loop
into
into
addr16
into
sub
push
int
sub
imul
inc
cmp
dec
xchg
pop
adc
mov
out
push
adc
outsl
iret
push
push
shl
sbb
jmp
inc
sbb
test
fwait
cld
dec
pop
sub
add
out
or
mov
pop
nop
xchg
push
cmpsb
adcl
call
fistpll
call
cmpsb
mov
lret
sbb
insl
jmp
jl
ljmp
dec
movsl
shll
cmpsl
xorl
sub
or
push
lods
pop
mov
sub
stos
cmp
outsl
outsb
rclb
ljmp
pop
aaa
sub
lods
loop,pt
outsl
enter
movhps
mov
arpl
das
xor
jns
es
in
dec
shrb
ret
lret
mov
dec
test
mov
inc
insl
cs
push
mov
loopne
lret
cmp
mov
addr16
mov
sbb
imul
or
push
clc
fnstcw
rorl
sub
ret
adc
scas
mov
pusha
or
and
das
test
mov
sub
mov
or
dec
xchg
sub
add
mov
jns
cmp
add
push
leave
popf
jge
out
sbb
outsl
int3
pop
ffree
dec
lret
adc
pop
scas
sub
jne
cmpsl
sub
xchg
add
pop
mov
lahf
sub
daa
int
int3
xor
out
jg
xor
stos
lret
call
jmp
xchg
pop
xchg
push
stos
insl
in
mov
mov
data16
cmp
jmp
test
dec
bound
mov
test
dec
leave
test
mov
or
mov
adc
cmpsl
push
shrl
test
push
lea
arpl
ret
dec
out
les
push
sbb
iret
jmp
insb
mov
call
add
add
stc
jmp
fisttpl
push
adc
mov
xor
scas
fisttpl
iret
sahf
or
dec
iret
push
jb
jb
dec
mov
sbb
sub
dec
das
jno
cmp
decb
pop
leave
cmp
mov
imul
xor
ds
popw
dec
or
or
scas
pop
arpl
mov
mov
push
stos
add
aas
movsl
mov
mov
addr16
bound
into
sub
push
sub
das
ljmp
lret
sbb
xchg
mov
mov
test
xchg
outsl
add
xchg
in
fwait
enter
cmpsl
xor
daa
xchg
and
add
stos
xchg
ljmp
sbb
dec
insl
movl
iret
mov
xchg
rorb
outsl
mov
les
mov
adc
dec
inc
mov
jmp
sub
push
subl
ucomiss
scas
lret
mov
icebp
dec
in
or
iret
xor
adc
mov
cmp
int3
std
sbb
push
inc
daa
xchg
and
sub
dec
pushf
mov
add
jno
stos
pop
in
or
push
or
xchg
lods
lret
push
fmull
inc
jnp
dec
mov
xchg
leave
sbb
jns
sbb
push
das
cltd
test
jg
addr16
jmp
cmp
in
daa
sar
xchg
add
push
xor
add
sbb
and
sar
push
xor
push
or
push
sub
push
jmp
lea
dec
sub
and
mov
cmp
out
leave
in
sub
dec
inc
dec
lea
outsb
cs
mov
xor
and
idivl
inc
adc
test
scas
dec
das
adc
mov
push
pushf
xchg
repnz
out
stc
dec
pop
fwait
mov
sub
xchg
mov
dec
mov
xor
out
sub
push
pop
inc
push
xor
inc
sub
sub
push
int
pushf
dec
stc
lahf
repnz
dec
mov
ret
lods
popa
and
mov
xchg
adc
bound
sub
pop
orb
push
jne
loope
data16
pop
add
dec
mov
mov
mov
lea
inc
jle
shr
into
in
xchg
addr16
jno
xchg
cs
jl
popa
adc
scas
or
push
outsb
jmp
imul
addr16
cmp
outsl
pop
mov
or
add
xchg
sub
mov
jmp
xor
inc
imul
pop
stc
pushf
push
repnz
jmp
push
cmpsb
mov
dec
out
pop
pop
inc
sub
sbb
loope
out
pop
repnz
inc
in
mov
push
jg
mov
aas
sub
and
outsl
loope
sub
icebp
je
call
repz
mul
dec
loope
push
mov
iret
out
xchg
iret
jmp
jno
test
xchg
ret
ljmp
sub
or
or
or
mov
inc
mov
test
ror
mov
cmpsb
sub
push
daa
stos
leave
xor
xchg
inc
lret
inc
dec
dec
pop
push
int
dec
cltd
mov
rcll
dec
xlat
popf
sbb
or
mov
ljmp
pop
ret
addr16
shl
push
or
sub
iret
mov
or
dec
jno
test
sub
out
or
imul
jmp
shlb
pop
ficoms
out
xchg
mov
sbb
inc
dec
inc
add
push
mov
loope
adc
inc
and
and
leave
push
mov
ret
sub
mov
push
mov
das
cmpsl
add
imul
sub
or
mov
fwait
xchg
dec
push
pop
add
or
or
jle
pop
fistpl
loop
cmpsl
outsl
std
push
sub
stos
sub
aas
addr16
push
or
dec
dec
dec
pop
jmp
mov
out
bound
ljmp
or
roll
or
sbb
int
popa
or
adc
imul
cmp
push
sub
sub
dec
xor
mov
xchg
jne
fwait
adc
mov
lods
das
stos
and
enter
outsl
lea
add
sahf
roll
out
mov
adc
lds
lods
dec
imul
cltd
mov
outsb
icebp
push
lea
and
mov
mov
dec
popf
sbb
sbb
dec
jmp
daa
orl
iret
dec
in
les
addr16
dec
push
mulb
xchg
lods
sub
test
sub
mov
into
out
xchg
les
outsl
loopne
loope
dec
dec
or
leave
mov
aam
fldcw
into
mov
jb
sti
xor
out
jnp
adc
dec
imul
ljmp
mov
lret
jb
stos
lea
sub
out
cmp
jns
push
addr16
jmp
insl
out
mov
dec
push
lar
clc
sub
addr16
es
fdivr
dec
xor
dec
imul
sub
push
lret
scas
sbb
push
lock
pop
subl
bound
stos
bound
or
or
mov
in
pop
cs
dec
dec
insl
ret
sub
dec
adc
in
repnz
int3
fcmovnb
cmp
stos
outsl
das
ss
shlb
mov
dec
sub
mov
mov
xor
adc
movsb
imul
repz
xor
fxch
dec
mov
or
mov
pop
ffree
xchg
aaa
xor
ret
inc
mov
out
mov
mov
lods
mov
cmp
scas
and
sub
mov
sub
push
paddq
jo
cmp
add
push
or
sub
mov
daa
cmp
loope
sub
mov
enter
jle
addr16
out
mov
pop
sbb
or
pop
subl
outsb
jmp
insl
dec
inc
out
stos
mov
sub
loopne
inc
lds
fistl
mov
sub
ja
cwtl
sbb
dec
out
sub
lret
dec
scas
pop
sub
sub
sub
scas
push
inc
scas
sbb
dec
adc
jp
psraw
and
orb
cmpsb
push
jb
addl
or
popf
dec
insb
sub
push
scas
mov
out
mov
sub
cli
push
test
or
sub
pusha
dec
sub
jg
push
lods
xchg
jb
lret
xchg
pop
aam
leave
popf
dec
mov
outsl
xchg
mov
push
push
data16
xchg
adc
mov
xchg
mov
push
inc
sub
mov
sbb
les
roll
pop
push
xor
jp
or
push
movsl
cmp
ds
xor
jecxz
dec
out
arpl
mov
mov
xor
cmp
sub
jno
mov
movsb
dec
sahf
xor
outsb
in
cmp
sbb
inc
es
scas
lods
cwtl
gs
adc
idivl
das
mov
out
or
test
bound
sub
ss
mov
sahf
dec
stos
or
mov
pop
loope
daa
out
dec
sub
sub
cmp
inc
adcl
xchg
jecxz
mov
push
pop
dec
sbb
or
movsl
fildl
add
data16
mov
test
stos
outsb
or
leave
ljmp
lea
mov
pusha
rorb
scas
sub
lret
repnz
or
pop
loop
leave
mov
push
rolb
dec
dec
lods
or
addr16
dec
loope
dec
xor
sti
and
filds
mov
xor
sbb
out
shrb
add
mov
in
jmp
lds
and
sub
out
iret
sbb
das
enter
jmp
inc
or
adc
scas
add
or
jo
enter
les
imul
push
xchg
xlat
dec
xchg
das
or
dec
out
push
jle
pop
pop
sbb
into
mov
add
stos
adc
outsb
pop
xchg
cmpsl
cmpsl
or
bsf
dec
scas
lret
sub
stos
imul
shufps
in
cmp
aas
dec
pop
clc
sub
in
cmp
outsb
cmpsl
dec
scas
cwtl
imul
rol
arpl
leave
pop
xchg
in
or
jle
pop
inc
test
lret
xchg
adc
xor
decb
in
inc
imul
outsb
push
jmp
pop
dec
cmpsb
jno
xchg
sub
into
cmc
rorl
repz
stc
cmp
out
daa
sti
aaa
fstps
mov
or
iret
xchg
xchg
pop
outsl
xchg
pop
mov
fscale
mov
sub
addr16
fisubrs
into
dec
out
fstl
dec
adc
dec
or
std
or
arpl
daa
dec
into
xchg
cwtl
xchg
mov
mov
xchg
or
push
dec
mov
mov
cmpsl
scas
adc
ror
mov
loope
leave
insl
lea
adc
dec
psraw
cs
sbb
xchg
and
mov
adc
sub
arpl
das
adc
ret
inc
bound
and
sub
cmp
daa
outsl
lds
enter
sub
scas
insb
subb
rclb
sub
jmp
xchg
sbb
imul
pop
addr16
int
addr16
stos
icebp
push
or
or
repz
rcr
inc
xor
lret
inc
xchg
roll
lret
ret
adc
addr16
inc
jle
cmpsl
lret
jmp
jmp
iret
iret
push
arpl
lret
sub
daa
adc
sbb
dec
dec
fisubs
mov
xchg
ret
dec
popa
lret
lret
cmpsl
sub
sub
data16
or
cltd
xor
pop
iret
sub
pop
fisttps
test
xor
iret
repz
mov
loop
jg
add
cmpsb
mov
insb
xchg
call
lret
daa
mov
es
lret
xor
int
in
add
imul
mov
or
int
xchg
inc
das
mov
les
inc
dec
cmp
aad
scas
add
in
lret
inc
stos
or
into
in
mov
sbb
or
pop
addr16
add
scas
adc
out
out
rol
or
in
ljmp
out
incl
or
and
xor
cmpl
sub
test
push
in
mov
in
dec
data16
adc
jge
out
fdivr
mov
mov
dec
push
lea
and
int3
cld
fwait
out
add
dec
repnz
xorl
sbb
lcall
push
ret
xchg
into
loop
dec
inc
pop
lret
scas
mov
mov
sub
in
sub
hlt
or
dec
ljmp
daa
stos
and
in
leave
sbb
dec
pop
int
int3
push
ret
outsl
rclb
dec
enter
sub
xchg
pop
add
out
enter
mov
mov
arpl
fisubrl
lcall
dec
mov
cs
jl
xchg
nop
cmp
push
push
xchg
movsb
nop
sbb
cmp
dec
jmp
jge
inc
or
mov
fcomps
push
and
mov
add
mov
in
ljmp
lcall
out
test
add
std
xchg
cmp
sub
sbb
loopne
fildll
sub
lret
dec
jmp
inc
adc
sbb
or
leave
shr
enter
out
outsl
pop
int3
adc
adc
mov
adc
push
in
jnp
and
scas
mov
mov
xor
repnz
xchg
enter
xchg
call
aaa
out
cmp
stos
adc
pop
sub
negl
sub
pop
into
push
pop
pop
inc
inc
daa
push
movsl
jne
dec
outsl
pop
adc
sti
adc
aas
jmp
push
add
loop
and
stos
into
pushf
out
in
xor
popf
pop
or
out
xchg
daa
iret
out
adc
in
dec
or
mov
arpl
mov
das
sub
movsl
nop
cmp
dec
stos
loopne
and
add
add
movsb
sti
sbb
scas
out
outsl
test
stos
sub
pshufw
dec
fwait
push
push
xchg
hlt
xchg
and
sub
and
mov
or
push
dec
daa
xchg
ss
imul
push
xor
das
mov
adc
lret
or
inc
push
repz
scas
xchg
cmpsl
sub
lcall
repz
int
sbb
imul
shlb
test
mov
aam
mov
lods
icebp
pop
insl
cld
push
jne
or
jecxz
pop
outsl
dec
sbb
lcall
dec
jmp
mov
iret
lret
into
sub
adc
and
adc
stos
cmp
movsl
adc
inc
nop
dec
xor
jns
sbb
and
xchg
pop
fimuls
sub
adc
scas
pop
outsb
addr16
adc
jmp
movsb
dec
dec
stc
sub
sub
outsl
add
ret
adc
dec
adc
pushf
jb
scas
cmpsl
jecxz
add
or
dec
mov
cwtl
ret
out
lret
sbb
sub
repz
es
mov
add
dec
jo
fwait
inc
shl
scas
insl
mov
sub
dec
mov
aad
and
or
pop
or
add
dec
sub
or
pop
outsl
das
fs
mov
icebp
xor
repz
cmp
out
fistps
fiaddl
or
outsl
bound
out
iret
popl
adc
into
jb
and
pandn
sub
sahf
mov
or
lds
outsl
fisttpl
push
aas
movsb
push
or
and
repnz
ljmp
dec
mov
sub
adc
leave
outsl
stos
rclb
ljmp
xor
sub
dec
xchg
or
in
sub
outsb
ljmp
sbb
dec
jne
aas
or
jo
mov
xchg
int
add
sub
or
mov
pop
sub
mov
dec
out
lods
add
out
push
addr16
cs
scas
mov
popf
pop
or
adc
subb
inc
dec
sub
jnp
jns
sub
sahf
mov
xchg
icebp
mov
or
or
int3
dec
jmp
mov
aam
dec
scas
outsl
sub
sub
cltd
stos
lea
mov
jae
bound
and
cmp
push
sbb
lock
xor
movsl
mov
lret
in
jecxz
inc
mov
mov
pop
dec
imul
out
cld
fadd
scas
push
cmp
rol
sbb
outsl
fldt
mov
call
leave
pusha
and
aas
jno
je
mov
data16
sbbb
loope
sub
imul
fcoml
movsl
pop
imul
dec
or
cli
push
ljmp
aaa
ret
xchg
ds
test
add
pop
les
lret
and
xchg
scas
pop
inc
and
dec
out
cmp
or
cmp
popa
sahf
or
cmc
sbb
out
dec
nop
dec
xor
xchg
xchg
inc
mov
dec
in
dec
cs
lds
add
sub
push
or
or
imul
jmp
push
xchg
or
pop
or
or
sub
xchg
ljmp
scas
scas
jmp
in
sub
psubusb
imul
sbb
adc
arpl
movsb
bound
cltd
lret
dec
xor
movsb
dec
movsl
in
idivb
xchg
loopne
and
push
leave
daa
mov
xchg
stos
mov
sahf
xchg
dec
dec
mov
or
adc
push
or
cltd
push
add
ljmp
mov
verw
gs
xchg
data16
pop
daa
or
loop
push
mov
dec
adc
xchg
dec
lds
into
mov
imul
hlt
dec
lea
sub
or
jmp
into
inc
movsl
outsb
test
jp
or
and
pop
dec
fcomps
addr16
outsl
imul
nop
mov
lret
scas
dec
popa
faddl
ret
sbb
mov
dec
xchg
dec
sub
mov
push
sub
lret
add
lahf
sbb
sub
subb
pop
mov
sbb
push
insl
lods
and
sub
push
in
adc
push
daa
movsb
pop
xor
add
loop
jmp
pop
xor
cmp
push
sub
pop
out
dec
into
lea
dec
int
xchg
pop
mov
push
insl
out
cld
cmp
rclb
xchg
popa
push
iret
dec
or
push
jmp
rcrb
inc
imul
mov
cwtl
or
jno
lret
sub
in
lea
mov
inc
leave
insl
rcl
out
sub
andb
push
xchg
sub
das
or
enter
mov
aaa
hlt
in
xchg
xor
mov
pop
andb
movswl
insl
add
insl
into
jmp
xchg
xchg
scas
adc
adc
mov
aaa
sbb
mul
xchg
loope
stos
addr16
sub
movsb
popf
pop
ret
dec
add
fucomip
out
test
rorl
arpl
sbb
push
stos
loope
sub
and
lahf
jp
adc
sub
push
sub
adc
in
data16
scas
arpl
cmovg
das
pop
pop
push
shlb
std
addr16
fsts
ds
loopne
or
int
xor
sub
or
dec
dec
push
icebp
das
test
mov
mov
cmpsl
fldcw
or
mov
arpl
icebp
in
out
dec
pop
add
imul
stos
repnz
lock
and
out
mov
cmp
out
and
mov
inc
sub
push
arpl
daa
inc
jb
loope
mov
push
sub
push
je
rorl
dec
shr
cmpsb
imul
test
pop
enter
mov
mov
jnp
pop
adc
insl
outsl
nop
xchg
xchg
xchg
jmp
loope
lret
orl
faddp
mov
sarl
pop
push
jmp
dec
sub
sub
cmp
clc
mov
in
lea
into
pop
adc
mov
out
sbb
dec
sbb
stos
imul
das
repz
push
or
pop
or
xchg
and
adc
loope
wbinvd
lret
xor
push
mov
inc
mov
sub
sub
daa
aas
dec
jnp
leave
or
ficoml
daa
pop
jmp
push
xor
dec
mov
mov
ret
xor
adc
mov
xchg
subb
adc
testl
fwait
jle
loop
push
or
int3
jnp
sub
das
test
push
xor
mov
jecxz
lret
pop
imul
into
pop
test
loop
scas
stos
jp
loop
xor
and
in
scas
dec
imul
call
xor
cwtl
leave
pop
dec
or
out
test
test
lea
bound
mov
lods
xor
jne
push
inc
sub
sub
loop
mov
jae
fsubrs
call
inc
or
sub
cmp
dec
pop
nop
cmpsl
mov
pop
fcompl
lock
stos
dec
push
popl
repnz
and
loope
addr16
fmull
pop
out
jmp
or
or
adc
iret
lea
popa
jecxz
sub
push
sub
pop
mov
jecxz
sub
xchg
in
lret
scas
add
shrb
dec
cmp
dec
addr16
into
and
out
scas
fucomip
test
inc
fistpll
ret
jg
mov
push
jle
ds
sub
pop
add
scas
inc
jg
pusha
mov
or
xlat
add
inc
ja
test
adc
test
or
mov
fstl
xor
adc
dec
or
mov
sbb
imul
push
and
test
mov
add
in
sub
or
in
push
xlat
sub
out
scas
into
inc
je
sub
or
jae
stos
mov
dec
adc
inc
mov
sub
mov
daa
pop
movsb
or
cmp
mov
mov
push
push
sub
sti
jge
das
sbb
cmovl
pop
int
scas
dec
inc
lret
and
fmull
inc
insl
dec
sahf
inc
iret
dec
jb
xor
mov
into
insl
rcll
dec
jne
push
addr16
or
ret
inc
push
add
pop
int3
loop
outsb
mov
scas
cmp
adc
dec
test
pop
rorl
imul
loop
and
xor
cs
leave
rorb
xor
lds
rorl
pushf
orl
cmp
jg
push
xchg
or
mov
daa
mov
int
lret
inc
add
jecxz
das
cwtl
push
dec
xor
sub
push
into
sub
pop
in
mull
mov
cmpxchg
pextrw
or
cmpsl
sub
push
or
jge
sub
ds
loop
sub
xor
ljmp
and
sub
xchg
dec
scas
iret
pop
sbb
push
inc
xchg
push
call
into
loop
mov
mov
mov
pop
jmp
adc
stos
insl
insb
push
aaa
mov
or
inc
or
sub
addr16
int3
lock
in
lods
out
insl
test
out
aas
ret
sub
int3
xchg
cmp
out
ja
enter
cmpsl
mov
imul
repnz
fisubrl
out
xor
adc
adc
pop
dec
mov
sub
cmpsl
inc
xor
xchg
xchg
mov
pop
stos
jbe
shlb
or
dec
push
and
dec
and
dec
jmp
enter
xchg
inc
loop
imul
mov
or
pop
emms
dec
mov
push
das
xchg
pop
jge
js
popf
xchg
call
into
inc
mov
sub
test
out
ljmp
or
mov
arpl
sub
cltd
mov
jp
inc
or
jle
decl
jbe
lods
outsb
push
xchg
arpl
leave
icebp
mov
shrl
xchg
das
push
xchg
mov
adc
faddp
out
movsb
add
jle
xchg
leave
out
in
daa
mov
loop
or
outsl
scas
sbb
sub
ljmp
mov
imul
in
or
mov
iret
dec
or
mov
xchg
aad
jae
sbb
lock
ret
push
xchg
out
iret
ljmp
stos
orl
push
pop
or
sbb
scas
imul
test
pushf
mov
cltd
js
sbb
cs
xchg
shrb
cmp
inc
icebp
sub
sbb
popa
lods
sub
mov
test
ret
imul
mov
dec
mov
mov
fsubp
test
and
aad
lret
sub
out
xor
out
mov
fists
cltd
xchg
test
imul
aam
cs
push
inc
lret
enter
cmpsl
dec
and
or
or
test
out
dec
insb
imul
add
mov
add
scas
push
int
cmpsl
in
sbb
or
aam
lods
arpl
daa
lret
lret
mov
adc
pop
test
dec
imul
stos
xchg
xchg
js
xchg
or
dec
xchg
cmp
or
leave
arpl
fisubrs
outsb
mov
pop
testb
lods
clc
xor
sub
sahf
adc
fmulp
adc
movsb
or
rdmsr
sub
lods
dec
and
and
dec
inc
sbb
pop
mov
bswap
jmp
faddl
dec
out
push
sbb
loope
lret
dec
jae
mov
sbb
adc
mov
push
dec
sbb
out
jmp
lcall
pop
jp
jmp
push
pushf
pop
adc
inc
cmp
ja
stos
cmp
or
sub
adc
or
mov
mov
lods
les
add
mov
dec
stos
adc
dec
pop
inc
dec
lea
fwait
das
test
out
inc
inc
dec
xchg
dec
inc
pop
mov
rol
jp
add
loop
sub
cmpl
ljmp
lret
xor
movsl
adc
inc
or
sahf
xchg
or
in
or
mov
in
into
mov
mov
stos
or
sub
stos
in
dec
js
mov
jmp
popf
push
xchg
adc
or
daa
movsl
or
sub
push
loop
inc
test
dec
push
jge
mov
sub
imul
dec
or
dec
push
push
int3
lea
stc
loopne
sub
jne
data16
out
ljmp
mov
push
mov
imul
push
push
xchg
mov
or
push
dec
lods
push
loop
or
mov
fidivrs
leave
dec
mov
lods
pop
inc
add
into
repz
add
sub
mov
out
xor
xor
imul
aas
dec
bound
cmp
lock
cmpsl
fwait
ljmp
scas
add
xchg
cli
ret
repz
mov
arpl
dec
and
and
mov
inc
mov
push
xor
jo
adc
ret
ret
iret
add
out
loope
xor
lcall
mov
sbb
jecxz
outsb
cs
jo
dec
push
push
call
dec
mov
sbb
ret
mov
xchg
data16
mov
xor
add
out
mov
sbb
mov
ret
enter
adc
push
imul
out
movsl
xchg
out
dec
dec
popf
lea
dec
scas
imul
test
jg
dec
or
test
inc
mov
movl
test
mov
add
or
inc
pop
addr16
test
adcb
fnstcw
dec
das
cmp
jmp
sub
adc
clc
sub
adc
ljmp
or
pop
jns
pop
das
or
cs
cmp
test
cs
inc
pusha
xor
jg
mov
insl
outsb
xchg
xor
jmp
or
pop
or
cs
out
scas
call
inc
mov
push
out
mov
xor
sbb
adc
pop
mov
lret
fisubrs
addr16
das
in
and
fwait
xor
adc
lret
dec
hlt
or
adc
sub
scas
stos
imul
dec
mov
out
daa
frstor
ret
sub
or
mov
sbb
outsb
fadd
scas
jp
lods
ret
dec
sub
sub
stos
ds
rorb
mov
and
dec
or
jmp
push
imul
mov
gs
scas
out
xchg
inc
mov
popa
mov
mov
inc
mov
int
mov
mov
cs
lret
cli
inc
dec
out
inc
or
bound
add
mov
out
out
mov
pop
dec
and
daa
push
or
jmp
xor
test
dec
filds
ffree
mov
lds
imul
or
mov
pop
add
gs
es
inc
ret
rcrb
jmp
cmpsl
pop
dec
jecxz
dec
or
addb
jno
inc
clc
les
xor
pop
dec
out
mov
or
adc
insb
inc
xor
pop
pop
int
insl
loope
fidivl
adcl
mull
or
test
loop
out
ret
ret
test
inc
cltd
arpl
testb
dec
mov
pop
adc
mov
rorb
or
sbb
dec
sub
movsb
in
dec
xchg
test
inc
mov
jns
mov
dec
or
dec
in
bound
mov
inc
dec
iret
push
mov
loope
sub
scas
push
jbe
pop
jge
in
test
dec
pop
or
or
or
or
nop
pop
push
adc
dec
dec
pop
scas
imul
or
jbe
pop
mov
sbb
out
idivl
daa
xchg
sub
mov
push
rcl
popf
push
xlat
sbb
sub
inc
lods
inc
lahf
dec
pusha
imul
mov
mov
ss
xchg
mov
iret
inc
test
mov
mov
push
in
dec
addr16
test
imul
iret
out
xchg
outsb
fbld
stos
or
dec
movsb
iret
mov
loop
sub
push
push
xor
or
cmp
sbb
pop
inc
pop
add
dec
repz
add
mov
imul
mov
imul
stos
sub
push
scas
in
dec
jno
lods
pop
sub
sub
in
pop
popl
data16
lods
in
leave
push
lret
or
sub
cwtl
xor
ds
cmp
and
mov
into
in
shrl
test
sbb
xchg
hlt
pop
or
or
sub
xchg
scas
push
xor
pop
dec
pop
cltd
cmp
xor
sub
in
jg
xchg
data16
cmp
dec
into
push
stos
and
dec
push
out
cmc
mov
ds
sub
adc
cmp
outsb
lea
inc
adc
out
push
lods
dec
loop
dec
ljmp
mov
hlt
push
daa
int
xchg
add
out
lret
imul
dec
cmpsl
fisttps
mov
subl
cld
or
cld
mov
pop
out
test
xor
or
leave
rcl
jmp
arpl
and
or
mov
adc
ret
stos
xchg
mov
fcompl
or
imulb
xchg
nop
outsb
icebp
cld
sub
sbb
int
or
addb
dec
pop
mov
pop
adc
dec
sbb
ret
incl
clc
mov
jmp
sub
mov
pushw
stos
decl
addr16
sub
cmc
sbb
dec
imul
mov
sub
stos
pop
xor
push
push
xchg
mov
imul
mov
mov
in
mov
jns
mov
and
stos
dec
and
repz
dec
out
lret
cmp
jmp
in
fmull
xchg
daa
int
ret
into
xor
outsb
dec
xor
sub
cmp
or
pop
sub
and
lea
sbb
or
out
popaw
ljmp
aam
jle
in
popf
cltd
pop
cmp
inc
dec
cwtl
incl
lods
out
cmp
scas
imul
jmp
sub
sub
jnp
repnz
jle
repz
pop
lea
push
adc
sub
mov
dec
orl
adcb
sub
int3
push
or
or
imul
sub
push
outsl
out
inc
ret
jmp
jecxz
aas
xchg
rcll
imul
mov
dec
sub
jmp
addr16
inc
or
cld
cmpsl
lret
pop
ror
hlt
pop
rclb
dec
lea
int
sub
push
or
lods
mov
movsl
jns
pop
in
repnz
loop
dec
sbb
push
into
inc
repnz
sub
xchg
adcl
stos
sub
out
stos
orb
addr16
mov
mov
inc
dec
sub
pushf
lret
dec
sbb
daa
dec
ret
out
imul
jmp
rcrl
imul
out
pop
bound
adc
pop
adc
pop
xchg
lret
inc
addl
mov
std
subl
outsl
fmulp
clc
rorb
mov
lret
mov
sub
mov
inc
dec
mov
pop
les
in
pop
fmull
sbb
ljmp
clc
jne
dec
add
lret
test
dec
push
mov
dec
mov
inc
add
mov
adc
test
outsb
arpl
lret
jmp
or
ja
or
arpl
insl
shl
sbb
into
clc
js
cmpsl
xchg
leave
int
or
ljmp
xor
data16
out
das
dec
mov
imul
push
popa
sub
adc
rorl
jmp
out
push
lret
adc
subps
xchg
sub
into
ja
sbb
fnstenv
add
adc
pop
outsb
fwait
cmp
clc
add
or
adc
pop
lea
out
icebp
adc
cmp
fisttps
or
adc
lret
ss
lea
dec
out
test
cmp
mov
sub
or
bts
push
out
mov
fmul
lods
dec
push
jge
stos
popa
mov
mov
mov
mov
lahf
out
int3
or
sub
mov
sub
and
dec
jbe
jno
outsb
stos
daa
xlat
or
xchg
xchg
xchg
add
mov
inc
dec
mov
pop
roll
inc
sub
pop
xchg
lcall
lds
iret
pushl
sub
out
in
daa
jle
pop
popa
scas
sub
out
xchg
xor
dec
push
inc
into
iret
cmpsl
js
lods
ret
imull
fstl
add
inc
sahf
lods
and
or
and
inc
lahf
push
push
daa
push
cmp
add
push
je
int
iret
insb
sub
cmpsb
adc
test
lret
cmp
pop
daa
out
dec
jle
add
mov
inc
testl
xor
iret
lret
dec
xchg
push
add
rep
xor
out
mov
push
jbe
dec
in
lret
sub
mov
add
pop
adc
mov
movl
jmp
lret
xchg
jmp
int
sbb
out
test
mov
lea
loop
inc
and
push
into
out
daa
jb
sbb
dec
or
add
into
out
pop
icebp
jg
sbb
sub
sub
cmp
test
mov
jmp
sub
adc
lahf
out
test
push
or
jmp
xlat
inc
xor
clc
pusha
pushf
loopne
lret
ljmp
sub
incb
js
jmp
sbb
in
das
mov
lret
jno
sub
pop
clc
fcmovne
popa
ljmp
dec
int
inc
push
and
pop
addr16
stos
repnz
add
outsl
jg
push
rep
mov
out
jns
pop
inc
out
pusha
fs
sbb
popa
outsb
dec
dec
out
repz
popa
jno
ds
fists
mov
daa
dec
ror
ret
dec
sbbl
and
sub
add
nop
rcrb
das
shrl
sub
sub
and
jg
stos
roll
lret
outsb
dec
mov
push
push
in
xor
test
rorb
mov
loop
out
pop
inc
dec
lds
daa
xor
bnd
sub
into
push
pop
sahf
lock
adc
and
test
inc
inc
lods
loop
into
into
lods
es
xor
out
leave
xchg
pop
xor
add
dec
or
loopne
mov
icebp
dec
push
xorb
ss
mov
sub
or
lods
push
cwtl
dec
and
pop
enter
lahf
xchg
pop
out
dec
pop
pop
jp
lret
adc
int3
pop
pop
sbb
pop
jl
mov
cmp
cmp
adcb
mov
sub
adc
cmp
loopne
fst
cmpsb
sub
popf
adc
dec
sbb
and
xchg
repz
test
cmp
jp
sbbb
daa
sub
dec
out
jmp
ret
or
iret
mov
insl
scas
pop
xor
daa
fmull
mov
iret
jmp
popf
insl
jmp
cmp
stos
push
pop
jns
pop
jne
imul
cs
jns
lret
pop
pop
jmp
push
push
push
or
mov
adc
jo
pusha
inc
pop
or
ds
fistl
push
xor
cmpsw
out
mov
into
dec
adc
jle
add
inc
adc
jmp
or
xor
or
lods
in
sbb
lea
lods
jnp
dec
paddq
or
xchg
call
or
xchg
hlt
iret
adc
outsl
int
jne
xor
mov
sub
pop
insl
int
ljmp
aam
stos
shrl
cli
and
out
ljmp
addr16
imul
sub
insl
fwait
adc
leave
cmp
sub
or
scas
bound
jmp
pop
dec
out
and
xchg
pop
mov
not
pop
xchg
add
outsl
in
shll
sbb
data16
xchg
pop
lret
in
jg
shl
out
push
pop
push
fsubrl
repz
adc
cmpsb
dec
sub
add
push
and
imul
sub
iret
dec
inc
lahf
add
subb
cmpsl
xor
outsb
imul
mov
add
lret
mov
ret
clc
pop
flds
data16
popa
mov
jne
sbb
adc
hlt
repnz
cmp
movsb
sub
shll
int
lea
and
xlat
xchg
mov
dec
cld
dec
out
pop
ljmp
add
dec
ret
push
test
push
dec
imul
ret
pop
jle
stos
pop
mov
sbb
xchg
add
inc
or
dec
outsl
adc
mov
in
pop
shlb
mov
arpl
and
daa
lret
shll
jae
lret
xchg
pop
sub
dec
push
aaa
and
aaa
add
aaa
cs
mov
sub
jb
negl
push
jno
scas
sub
test
lods
pop
cmc
jo
das
fmulp
addr16
out
mov
ss
rol
adc
loopne
jg
mov
jecxz
bound
push
stos
test
dec
test
jo
out
out
push
mov
sbb
rclb
lsl
or
cli
das
inc
or
loope
lret
and
inc
inc
cmpsb
lods
lret
mov
mov
lea
and
addr16
std
mov
push
pop
push
adc
jbe
sbb
xchg
ja
int3
push
xlat
pop
aam
dec
mov
outsb
out
sub
fsubl
or
daa
jns
lahf
popf
aam
push
dec
or
packuswb
inc
in
ja
sub
iret
cmpsl
dec
mov
dec
cmp
push
adc
enter
or
fdivs
lods
lahf
andb
mov
in
cwtl
dec
dec
push
into
mov
mov
or
loop
cmpsl
mov
dec
push
or
call
adc
or
dec
xchg
inc
xor
dec
loopne
push
jb
fwait
push
mov
sub
out
adc
pop
mov
adc
xchg
out
mov
repz
cli
ljmp
imul
push
jp
pop
stc
lret
out
int3
int
imul
ret
xchg
push
leave
inc
testb
xchg
in
xchg
imulb
cltd
ret
cmp
leave
cmp
das
mov
mov
faddl
movl
inc
test
daa
out
stos
int
and
dec
fucomip
sbb
xchg
les
or
or
ret
repz
outsl
scas
push
add
xor
repz
mov
int3
imul
cmpsb
out
iret
lds
inc
std
pusha
jae
int
mov
and
mov
inc
fisttps
adc
mov
mov
repnz
inc
sub
bnd
mov
cmc
insl
mov
and
push
mov
dec
pop
decb
add
push
clc
lret
mov
mov
mov
pop
repz
call
into
and
mov
mov
xchg
or
xlat
xchg
mov
es
xchg
js
or
mov
xchg
xor
xchg
outsl
stos
lret
out
repnz
hlt
leave
jae
add
push
push
enter
xchg
or
inc
jmp
pop
rclb
mov
dec
shl
lea
sbb
decb
mov
inc
repz
pop
push
xor
mov
push
enter
dec
mov
je
cs
or
pop
inc
mov
adc
add
shlb
mov
std
inc
dec
add
imul
adc
mov
sub
dec
in
xchg
sbb
mov
mov
cs
xchg
mov
fisubrl
sub
adc
fucomip
js
and
ds
mov
cmp
or
imul
enter
outsb
push
aad
xchg
insl
mov
pop
sbb
dec
leave
sarl
xchg
mov
xchg
inc
repz
fwait
xor
pop
xchg
inc
cmp
fistpll
filds
loopne
dec
xchg
or
dec
add
mov
int
cs
ret
iret
dec
lret
aaa
ljmp
das
lods
pushf
fldcw
out
addl
into
pop
leave
xchg
in
cmpsl
inc
xor
dec
push
cmp
les
ds
mov
dec
pop
out
not
mov
lret
iret
sub
add
aad
jle
mov
ficoml
data16
cmc
sub
pop
sub
es
test
mov
fnstenv
test
scas
dec
aaa
and
push
or
mov
ret
mov
xor
add
and
sbb
push
sahf
pop
jmp
or
imul
in
outsb
mov
jge
lock
sahf
cmp
lret
dec
sub
sub
push
loop
iret
mov
addr16
and
sub
adc
dec
jmp
stos
out
cmp
cwtl
jecxz
outsl
fsts
xor
les
repz
scas
add
or
frstor
cwtl
adc
imull
out
adc
inc
or
loop
loopne
lret
jbe
inc
dec
xor
sbb
testb
cwtl
fsub
lods
scas
jmp
int3
dec
loope
iret
insl
push
int
call
cmpsl
push
jns
or
test
dec
clc
fmuls
insl
and
stos
ljmp
popa
and
sub
lods
pop
scas
or
out
test
lds
orb
imul
sbb
sub
pop
cmp
pop
pop
push
dec
into
xchg
test
add
pop
inc
stos
dec
insl
iret
out
leave
jbe
rclb
or
adc
or
inc
out
sub
jmp
add
cmp
pop
jle
lret
sub
push
add
sub
das
push
out
sub
dec
mov
sbb
outsb
fildll
int3
sub
push
xor
in
popl
jmp
jmp
iret
arpl
ret
cld
cmp
dec
outsb
imul
mov
mov
dec
popa
int
mov
pop
mov
or
adc
xor
push
xchg
or
lods
mov
enter
jmp
lock
or
push
xor
push
scas
lods
lock
iret
sub
jge
push
pop
out
push
push
cld
sbb
imul
push
in
nop
mov
popa
clc
pop
insb
and
sub
cltd
or
push
into
stos
pop
sbb
mov
imul
mov
adc
dec
jne
and
jmp
xchg
iret
mov
cmp
or
sub
test
popa
out
mov
imul
adc
lock
adc
mov
xor
ljmp
jmp
imul
movss
or
jmp
adc
dec
bound
out
mov
and
inc
lea
and
jo
mov
sbb
adc
std
cld
jne
enter
mov
inc
test
push
jmp
mov
into
xchg
sub
cmpsl
sub
push
lret
addr16
scas
adc
inc
mov
dec
fld
out
add
add
cmpsl
in
in
out
dec
enter
clc
insb
cmp
cmp
daa
xchg
mov
icebp
and
lea
insl
add
scas
inc
xlat
stos
out
out
dec
adc
hlt
adc
lea
cs
jmp
out
jno
pop
or
stos
stc
test
mov
sbb
push
lods
jmp
cmp
test
cli
xchg
sbb
outsb
or
test
dec
je
inc
loop
push
popa
scas
imul
lret
fs
mov
mov
push
adc
push
scas
sub
je
or
mov
cmpsb
lock
sub
lea
dec
push
add
or
mov
dec
mov
lret
popa
jmp
lret
stc
cmp
jle
or
xor
mov
add
sbb
insl
out
push
sub
stos
addr16
or
hlt
mov
inc
leave
dec
in
cld
mov
sub
push
ss
push
scas
jmp
insl
cmp
or
or
ljmpw
testl
jmp
lcall
fwait
and
rcl
push
push
sub
cld
pop
cmpsb
jmp
sbb
dec
or
inc
sub
insl
addr16
or
jmp
mov
push
loopne
inc
imul
lret
filds
imul
jg
xchg
sub
xchg
lea
in
or
int
jne
mov
div
dec
in
dec
xor
mov
jnp
jo
inc
test
lahf
jg
cmpsl
dec
jmp
push
sub
xor
out
cmpsb
xchg
popa
or
int
or
adc
test
mov
pop
mov
push
inc
sub
fisubs
xchg
or
lods
mov
repnz
hlt
xor
lea
or
daa
sub
jmp
cli
xchg
out
pushf
jo
dec
stos
lret
out
and
daa
xchg
push
aam
sub
sub
test
mov
push
andl
popf
sbb
push
pop
scas
sub
mov
mov
movsb
pop
clc
jb
int
andb
adc
in
dec
xchg
add
pop
dec
daa
cs
enter
xor
jnp
hlt
ret
inc
mov
inc
or
mov
sahf
lods
aam
cmpsl
mov
sub
shl
mov
fs
int
pop
mov
repnz
cwtl
cmp
adc
sub
sub
push
shl
addr16
xor
pop
sbb
jno
mov
push
jmp
cmpsl
xchg
dec
stos
js
add
dec
out
test
push
lret
dec
hlt
or
pop
cmp
or
in
mov
out
push
push
jnp
jae
sbb
stos
dec
add
mov
test
enter
out
dec
mov
fldl
imul
jmp
das
loop
push
cs
das
insl
or
sub
sub
lods
xor
adc
dec
xchg
lods
psrld
je
sti
cli
in
or
test
cmp
mov
pop
mov
mov
jo
pop
leave
mov
out
int3
outsb
lds
push
ret
or
push
stos
mov
jg
icebp
xchg
xchg
cltd
gs
mov
or
das
jnp
movsb
dec
and
sbb
push
js
lret
or
jmp
je
push
sub
cmp
cwtl
ret
sub
and
das
out
das
andl
scas
add
lret
mov
int
loop
lea
outsb
and
inc
mov
or
mov
dec
test
aam
push
sarl
sub
sub
or
jle
inc
dec
addl
stc
hlt
jbe
jecxz
dec
popw
dec
sub
dec
test
xor
lods
sbb
mov
test
fwait
xor
outsl
out
ljmp
cmp
cltd
imul
dec
cs
js
mov
pop
dec
cmpsb
or
in
scas
outsl
aam
clc
or
ret
iret
push
fs
iret
and
xchg
dec
in
scas
int3
mov
mov
mov
or
outsb
xchg
loop
stos
jle
jecxz
movl
sbb
scas
lea
dec
xor
stos
leave
xor
outsb
dec
xchg
idiv
int3
enter
cli
data16
and
jp
iret
imul
inc
dec
int
fildll
sbbl
in
adc
mov
mov
sub
hlt
mov
sub
or
push
scas
xor
lret
or
push
sub
mov
jge
dec
test
and
pxor
sub
dec
or
in
outsb
loope
imul
jae
cmp
loop
mov
popa
lock
pop
dec
sub
ljmp
pop
jno
stos
sub
mulb
mov
scas
out
xchg
dec
fists
ds
lods
or
out
jg
scas
dec
dec
pop
in
out
fsubs
xchg
outsb
in
lret
mov
ss
pop
test
out
cs
mov
in
cwtl
cs
inc
shl
push
sub
cmp
mov
nopl
add
pop
ret
jnp
popf
bound
icebp
cmc
inc
xor
outsl
scas
outsb
cmp
cmp
repz
ljmp
jbe
imul
xchg
xor
pop
sub
push
and
xor
jmp
ljmp
outsb
or
or
xchg
mov
ret
leave
scas
xchg
sub
in
das
adc
cmpsl
stos
lret
pop
sub
push
push
sub
inc
or
mov
fisubrl
ud2
inc
or
jmp
pop
jl
mov
dec
sub
sahf
bound
mov
mov
outsl
mov
outsb
in
sbb
imul
pop
iret
jnp
push
mov
xchg
sub
sub
jl
and
mov
or
lods
data16
and
iret
push
lods
mov
imul
test
movsl
sbb
popf
sub
test
scas
pop
or
sub
sub
fmulp
repnz
jb
and
subl
xor
sbb
out
lods
aam
inc
imul
scas
pop
fld
rcrb
repz
jb
dec
out
sub
mov
sub
in
ljmp
cmpsl
int
test
outsl
imul
jp
popf
sub
or
sbb
roll
xchg
or
xor
inc
lea
out
das
test
daa
nop
test
adcl
push
aad
insl
mov
jne
testb
or
pop
sub
sahf
incb
and
push
and
xchg
orl
mov
into
dec
test
and
sbb
in
mov
js
or
loop
imul
xchg
dec
xchg
jmp
int
iret
out
or
jge
add
cs
pop
fwait
leave
pop
js
fdivrp
inc
out
mov
mov
sub
mov
inc
pop
sbb
cmp
enter
jnp
dec
sahf
das
add
cs
dec
das
dec
bound
mov
lea
das
lret
das
cld
fidivrl
push
iret
jg
stc
push
dec
fiadds
push
sub
push
jl
addr16
das
cmc
and
in
into
sbb
movsl
outsb
mov
add
leave
dec
or
scas
inc
lea
add
inc
rorl
push
inc
xor
das
jmp
loope
outsb
adc
cmp
mov
inc
mov
fmul
or
loop
or
adc
mov
out
pop
adc
jl
or
enter
out
aas
push
mov
push
cmp
xchg
insb
cwtl
adc
stos
jmp
out
jae
lea
imul
lods
dec
outsl
daa
push
cmp
ds
sub
lret
loope
jmp
cs
sbb
adc
data16
aam
mov
inc
add
dec
xchg
or
outsl
dec
jl
inc
mov
pusha
dec
daa
cmp
dec
and
icebp
stc
xor
push
scas
jmp
or
pop
test
orl
imul
jmp
sbb
cmpsl
into
ljmp
dec
pop
pop
sub
negl
cmpsl
movsb
or
mov
add
and
xchg
mov
and
dec
and
mov
ret
mov
dec
push
repz
xor
out
jge
fisttpl
in
push
das
dec
dec
pop
sub
mov
jle
jb
int
jns
pop
lret
dec
and
lea
movsb
jno
outsl
stos
outsb
xor
xor
out
les
dec
fldt
arpl
lret
cmp
les
dec
insl
int
pop
das
dec
mov
cs
addr16
pop
adc
sub
sub
lahf
iret
in
jecxz
inc
push
loope
stos
pop
out
out
jno
int
data16
cmp
mov
sbb
ljmp
inc
inc
insl
imul
pop
scas
mov
mov
push
stos
icebp
imul
shl
mov
stc
dec
out
js
inc
loope
test
cmp
sbbl
fisubs
or
mov
xchg
add
mov
movsl
fmuls
cs
outsl
out
mov
lret
pop
pop
dec
iret
adc
popf
imul
sbb
or
jo
inc
dec
das
mov
dec
sub
sub
lea
or
cmpsl
or
adc
cwtl
and
cmp
fstpl
dec
dec
adc
dec
push
test
push
xor
add
loop
xchg
cs
pop
mov
mov
and
jmp
das
mov
mov
pop
addr16
push
mov
dec
inc
lret
sub
pop
push
bswap
push
xor
addr16
lods
sub
pop
xchg
aaa
adc
add
mov
xor
inc
and
or
test
inc
ret
aam
mov
xor
or
fs
jne
movsl
xchg
or
pop
mov
mov
push
push
or
in
or
mov
sub
mov
add
dec
adc
push
fcmovnbe
jecxz
sbb
retw
or
sahf
outsb
push
or
lock
or
stos
jl
cmp
cltd
adc
insl
mov
jns
inc
mov
pop
mov
outsl
jmp
enter
das
add
and
daa
or
adc
mulb
sbb
xlat
mov
out
or
add
movsb
cmp
xchg
stos
sub
sti
shr
scas
int
out
mov
iret
or
or
cmp
test
lcall
cmp
popf
in
sub
mov
shrd
movsb
add
or
or
or
pop
mov
and
jge
push
dec
sub
mov
aas
das
mov
out
xchg
bound
xchg
pop
pop
iret
arpl
insw
inc
jo
sbb
scas
mov
imul
xchg
adc
fisubrl
sub
orb
and
sub
test
ret
xlat
aad
sub
sub
bound
add
out
mov
pop
std
out
dec
push
call
test
int
dec
movsl
sub
rcrl
jmp
mov
enter
mov
inc
jb
mov
push
mov
test
sub
cmc
div
cmpsl
xchg
jnp
test
mov
dec
mov
stc
or
imul
or
pop
ret
out
movsb
lret
mov
out
pop
aas
mov
xor
jno
lea
jo
popa
movl
sti
sarb
sbb
pop
or
mov
sbb
xchg
cmpsb
loope
sub
cmp
cmp
pop
mov
push
addr16
push
cltd
outsb
inc
or
je
sub
push
cmc
mov
lea
dec
popf
pop
test
push
daa
jmp
aam
cmp
sub
dec
inc
mov
loopne
add
dec
push
arpl
scas
pop
loope
iret
stos
mov
leave
scas
push
pop
mov
mov
or
mov
jmp
iret
sub
dec
dec
scas
adc
sub
xlat
cmp
out
jns
xor
sbb
sub
jge,pn
and
cmova
lcall
jmp
in
lret
cs
shld
test
dec
ljmp
repz
add
decb
mov
xchg
cmp
sub
sub
ljmp
cmp
or
pop
arpl
repz
mov
lea
push
pop
ret
out
add
leave
mov
repnz
pop
dec
sub
test
fisttpl
inc
inc
loopne
jns
xchg
xor
dec
or
or
adc
inc
inc
xchg
and
out
into
mov
jmp
test
mov
int
outsl
dec
lea
sub
add
das
sub
adc
int
mov
push
or
in
iret
loopne
mov
sub
das
sub
pop
dec
xchg
in
shr
sub
addb
stc
add
xor
sub
push
push
das
mov
stos
mov
cli
stos
sbb
sub
dec
pushf
mov
stos
imul
leave
mov
aam
sub
mov
movsl
adc
dec
pop
adc
test
jmp
iret
push
sub
ss
out
inc
movsb
cli
and
or
out
pcmpgtd
sub
iret
inc
xchg
fildl
ss
stos
push
adc
jne
stc
lock
icebp
lea
sub
and
inc
bound
lods
enter
out
mov
lcall
push
scas
shl
cmp
or
roll
sbb
ljmp
mov
xor
pop
cmpsl
or
outsl
hlt
or
daa
cmovno
push
loope
das
jmp
subb
out
sti
mov
sub
inc
pop
ret
lret
insl
push
movb
sbb
in
push
stos
or
mov
jg
or
jns
out
cs
lods
cmp
imul
fwait
push
pusha
mov
int
imul
cmp
dec
jno
outsb
stos
repz
daa
add
lret
lock
das
ljmp
aas
jmp
adc
sbb
das
insl
lcall
jecxz
out
cs
jecxz
xor
cvttps2pi
into
jmp
lea
or
loop
dec
sti
arpl
jne
scas
insl
lods
out
xchg
inc
sbb
test
mov
xchg
das
mov
sbb
xchg
mov
js
in
jnp
and
test
pop
outsl
adc
adc
setno
xchg
sub
mov
inc
cmp
cmp
movb
out
bound
bound
popa
mov
mov
testl
xor
imul
int
das
sub
lods
or
adc
ret
add
cld
push
sub
dec
loop
sub
les
and
leave
xor
mov
ret
dec
lods
dec
inc
cmp
adc
shrd
mov
mov
push
add
test
call
iret
mov
cmpsl
cmovs
arpl
pop
dec
out
stc
and
sub
cmpsl
add
sahf
rorb
ret
imul
dec
out
cmp
out
cs
repnz
test
push
jmp
push
pop
or
inc
add
outsb
lea
mov
lods
sbb
adc
jno
mov
push
into
lret
or
and
inc
das
imul
and
shrb
in
jb
inc
aad
xchg
xor
cmp
pop
fnstcw
push
cwtl
xchg
in
inc
inc
ljmp
ret
or
mov
loopne
enter
and
jb
loope
iret
mov
adc
int
out
dec
mov
sub
adc
or
mov
leave
mov
inc
clc
adc
sbb
nop
xchg
out
xor
ljmp
addr16
loope
inc
cmpsl
jmp
mov
mov
or
sbb
stos
add
mov
test
jo
lods
out
stos
cmp
add
sbb
scas
dec
jb
xchg
jmp
cmpsl
xchg
or
dec
loopne
sbbb
imul
sbb
outsl
adc
add
xor
out
outsb
call
sbb
psubsw
xor
or
jmp
sbb
outsb
orl
scas
sub
sub
iret
jo
mov
je
xchg
imull
lds
or
dec
xchg
lcall
bound
pop
rorb
and
xchg
scas
dec
lret
dec
pop
mov
inc
sub
or
and
dec
iret
dec
addr16
pop
push
sub
mov
xchg
mov
mov
movsl
dec
or
xor
cmp
aad
inc
lds
stos
jecxz
inc
dec
dec
xor
bound
cmpsl
or
ds
xor
adc
insl
adc
inc
out
cmpsl
stos
loop
lea
mov
sub
das
pop
adc
xchg
push
push
shrb
mov
sbb
dec
sbb
pop
js
orl
push
xor
mov
push
dec
or
das
mov
sub
cmpsl
xchg
push
sub
sub
insl
mov
jg
ja
mov
pop
shrl
adc
xchg
xor
xchg
daa
scas
add
xlat
or
fstps
imul
dec
cs
sub
push
test
roll
das
sbb
jmp
mov
lds
ljmp
icebp
clc
out
shrl
push
pop
jmp
ret
cmpsl
test
in
mov
movsl
les
insl
add
inc
dec
fisttpll
push
mov
dec
xorl
into
xchg
inc
stos
sub
andl
ds
xchg
dec
sbb
sub
into
push
outsl
popf
scas
adc
adc
jb
les
mov
in
ret
mov
dec
push
fisubs
in
out
lret
jmp
add
mov
jmp
sti
into
ja
dec
xchg
or
or
dec
loopne
leave
jnp
sbb
sbb
lret
ret
mov
mov
xor
pop
or
mov
iret
jno
cs
jbe
ret
pop
sub
or
dec
pop
dec
sub
sar
jns
xchg
sbb
or
ds
mov
testl
nop
sti
jge
mov
imul
leave
or
lcall
jmp
and
pop
sahf
imul
out
pop
popa
dec
mov
addr16
into
mov
jb
sub
cmp
add
dec
out
pop
stc
outsb
das
mov
iret
imul
cmc
xor
dec
das
imul
pop
xchg
dec
test
cmpsb
loop
mov
dec
mov
daa
add
or
cmpsb
sub
sahf
pop
add
adc
or
out
or
je
mov
ljmp
xor
popa
dec
dec
data16
jge
repnz
shrl
divl
fldl
jp
and
xchg
cmpsl
stc
add
or
aam
into
test
stos
outsl
ljmp
sbb
out
test
out
cmp
popa
add
ljmp
sbb
arpl
outsl
andl
jmp
or
lds
dec
pop
out
out
lahf
xchg
insl
int
or
shr
push
mov
rcrl
ret
cmp
repnz
xchg
jno
iret
cltd
sahf
jne
data16
test
cs
stos
daa
dec
or
mov
jns
inc
fildl
cwtl
lret
icebp
add
add
fwait
and
lods
loope
sub
push
mov
xchg
mov
sbb
dec
in
sub
out
insl
cmp
adc
mov
leave
icebp
mov
insb
movsb
insl
out
mov
out
pop
sbb
adc
pusha
std
sbb
test
scas
lods
movsl
dec
and
lret
mov
jne
cmp
or
cld
pop
das
or
dec
mov
lds
adc
and
leave
out
scas
lret
data16
mov
cmpb
push
sub
js
bound
arpl
inc
test
ficomps
stos
in
pop
sbb
cmp
xor
iret
push
dec
outsb
scas
imul
lret
push
pop
or
mov
lahf
stos
push
mov
daa
bswap
subb
std
loopne
jns
or
pop
cmp
pop
ret
push
sub
dec
das
mov
aad
xchg
xor
mov
and
mov
sahf
leave
out
test
jmp
sub
pushw
push
adc
out
bound
pop
lahf
orl
sub
jle
xchg
movsl
imul
cltd
lret
das
mov
xor
or
push
les
arpl
xor
in
mov
inc
pop
xchg
lds
loop
xor
pop
int3
sub
scas
and
stos
sub
cs
out
sub
xchg
aam
pop
or
iret
fimull
imul
mov
daa
push
nop
xchg
loope
in
ret
sub
mov
in
sub
dec
sbb
fists
loop
sub
aad
test
push
arpl
mov
dec
fnsave
mov
dec
nop
jb
iret
addr16
repz
push
pop
in
out
imul
push
es
sbb
scas
test
into
add
xchg
xchg
sub
adc
mov
pop
sub
inc
xchg
out
out
jb
or
insb
lods
cltd
adc
shrl
dec
lret
dec
outsl
xor
push
lret
adc
xlat
adc
or
shrb
sbb
adc
push
push
push
out
leave
fcos
mov
mov
dec
sbb
xor
outsb
test
daa
or
mov
rcrl
xchg
lds
enter
push
cmc
cmovp
or
negl
and
sub
sub
mov
push
lcall
imul
mov
test
mov
xchg
cmp
dec
dec
mov
int
dec
ljmp
or
ljmp
xor
jb
mov
lds
in
pusha
and
fisubrs
cmp
jnp
or
sub
mov
push
das
dec
push
test
out
mov
mov
sub
dec
adc
mov
jle
filds
mov
test
out
outsl
in
out
mov
aaa
dec
cmpsl
mov
pop
add
jb
inc
mul
inc
mov
pop
dec
dec
rcrb
pusha
leave
dec
lret
jg
inc
in
ljmp
in
sub
mov
xchg
sub
xor
push
xor
xor
mov
push
mov
inc
lock
into
ljmp
mov
pusha
sub
inc
scas
dec
int
aam
lods
in
sbb
scas
clc
sub
leave
cwtl
test
mov
xchg
add
sahf
imul
sti
cmpsl
xlat
pop
adc
pop
dec
imul
ljmp
jecxz
leave
fs
xor
lret
xchg
arpl
stos
ret
add
mov
outsl
xorl
dec
into
inc
or
inc
dec
pop
mov
stos
fmulp
pop
mov
daa
outsl
dec
mov
xchg
imul
sbb
sub
or
arpl
ret
dec
sub
icebp
ja
repnz
movsb
fidivs
add
or
dec
iret
dec
fimull
sub
ucomiss
mov
mov
adc
aas
inc
enter
sub
pop
add
out
fmuls
incl
ret
dec
push
dec
sarl
jne
dec
dec
xchg
mov
mov
push
popf
lods
or
mov
int
scas
sub
mov
push
inc
lods
pop
shrb
iret
out
pop
enter
xchg
lret
and
dec
pusha
insl
pusha
lds
and
outsb
or
sub
sub
daa
in
or
lahf
adc
ret
fdivl
scas
pop
mov
and
sbb
notl
insl
sub
ds
orl
cmp
and
xchg
sub
out
sarb
dec
rol
dec
push
out
lds
sub
or
scas
xor
sbb
pop
push
dec
invd
xchg
lret
mov
inc
pop
sbb
ss
test
jns
pop
or
push
lret
mov
mov
ja
movsl
jp
aaa
pop
in
push
adc
andl
orl
into
sbb
xchg
clc
sub
sub
pop
outsb
ror
arpl
inc
lods
add
orl
or
lea
sub
loop
ja
dec
and
push
out
mov
xchg
jae
test
ds
leave
or
les
test
sub
xor
push
jmp
dec
adc
out
scas
cmpsl
pop
push
lock
pop
int3
mov
ljmp
dec
jae
out
or
into
or
insl
push
insb
push
out
sub
jns
imul
call
cs
pop
sbb
addb
into
or
push
icebp
sub
dec
push
stc
push
test
fcoms
jae
scas
mov
cld
ljmp
jne
jge
cmc
jp
push
sub
mov
fcompl
sub
lret
dec
or
sub
clc
xor
mov
imul
lahf
mov
cs
test
dec
psubb
outsl
leave
or
add
das
fdivs
mov
rorb
mov
scas
leave
push
add
add
scas
or
in
lret
sub
add
addr16
int
lret
jbe
mov
pxor
icebp
jle
or
pop
mov
inc
shrl
leave
cmp
or
push
xor
call
xor
stos
sub
jmp
into
leave
dec
fisubrs
mov
rorb
or
stos
data16
xor
ja
lcall
fisubs
outsl
or
cmp
call
sti
sbb
pop
lea
dec
or
adc
in
daa
leave
hlt
icebp
mov
into
xchg
stc
cltd
outsb
adc
cmp
pusha
dec
pop
pusha
pop
or
jmp
ljmp
jmp
data16
outsb
xchg
iret
scas
xchg
imul
xorl
xchg
sub
lret
pushf
mov
xor
push
inc
lods
inc
popf
sbbl
movsb
sub
cmp
repz
arpl
xchg
pop
arpl
mov
out
bound
inc
in
test
mov
nop
adc
or
xchg
cmpsb
or
and
fdiv
sub
lahf
push
dec
sbb
jno
or
wrmsr
pop
xchg
out
pop
mov
int
lds
test
inc
pop
sub
mov
inc
jb
dec
test
scas
fildl
movsb
dec
std
rorb
test
xor
mov
or
mov
or
sub
pop
mov
pop
or
lea
xor
add
and
scas
and
xchg
shrb
movntps
ljmp
jmp
subl
mov
into
outsl
scas
scas
push
mov
test
dec
pop
mov
pop
sub
or
sub
cmp
scas
mov
dec
daa
push
mov
dec
dec
movb
test
out
jmp
test
mov
or
xor
lods
or
daa
dec
ffreep
or
cwtl
movsl
iret
add
out
or
inc
scas
das
repz
test
mov
sub
mov
sub
cmpsb
and
dec
dec
pop
in
mov
push
jmp
test
or
enter
lret
in
mov
inc
cs
xlat
movsb
or
addr16
lret
sub
insl
scas
push
loop
into
jmp
data16
mov
in
dec
mov
das
ljmp
mov
dec
xor
out
mov
jns
stos
sti
jnp
lods
fwait
or
int3
lds
mov
inc
lret
add
int
mov
jbe
pop
add
scas
aad
mov
jmp
jge
xchg
sahf
jp
xor
dec
or
ljmp
mov
add
pop
iret
test
out
jo
jmp
xchg
dec
push
insl
ret
xor
and
or
dec
lea
insb
mov
inc
inc
mov
ret
stos
ret
iret
inc
fwait
loope
jmp
add
sub
sbb
push
scas
xor
jmp
lods
mov
mov
leave
mov
fdivrl
popf
sbb
in
stos
outsb
out
outsl
and
mov
adc
mov
mov
das
mov
jbe
shr
cs
adc
push
lret
adc
pop
sbb
add
cmp
xor
ss
addr16
dec
mov
mov
dec
scas
or
enter
dec
jo
out
jmp
pop
test
sbb
ret
dec
lea
or
mov
or
into
dec
sub
pusha
mov
ljmp
rcll
cmpsl
and
jne
stos
cmp
mov
stos
out
pushf
iret
popa
outsl
mov
out
xchg
push
outsl
sbb
dec
popf
and
sub
push
jbe
iret
pop
pop
push
or
sub
adc
dec
or
insb
ljmp
scas
outsl
push
daa
cmovb
movsl
data16
mov
lea
inc
fsubrs
add
jmp
add
or
test
outsl
dec
out
inc
mov
and
sub
sub
jle
xor
jno
scas
or
mov
shrl
imul
fidivs
repz
fwait
sbb
call
mov
push
lahf
jae
imul
pop
cld
or
js
push
sub
dec
ljmp
jecxz
fs
call
stos
push
xchg
dec
imul
add
bound
dec
leave
dec
jne
push
into
sti
or
sub
mov
aas
femms
pop
movsb
iret
scas
xchg
add
outsw
dec
lret
pop
rolb
push
stos
out
les
mov
xchg
popa
dec
iret
outsb
and
lea
dec
or
les
andps
leave
test
xchg
in
push
outsb
mov
and
sub
int3
orl
push
sub
into
scas
popl
sub
das
ljmp
and
sub
sbb
bswap
ret
dec
test
dec
jmp
test
jbe
pop
jmp
sub
dec
lret
out
shrb
scas
fimull
mov
js
or
mov
addr16
out
or
daa
shlb
mov
stc
test
adc
test
in
into
jb
inc
lods
popl
fsubr
sub
adc
sub
jp
pop
ljmp
xor
adc
mov
adc
test
out
pusha
and
stos
or
dec
repnz
je
arpl
stc
aas
gs
ljmp
adc
push
clc
bts
mov
or
adc
and
jmp
ljmp
inc
mov
stos
inc
into
pslld
sbb
xchg
or
jge
cs
loope
adc
dec
sub
sub
pop
xor
sub
jecxz
insl
les
in
movsl
mov
test
jecxz
ret
push
adc
adc
les
loop
xor
sub
jmp
out
mov
scas
dec
or
outsb
loop
iret
arpl
sub
sub
mov
mov
jne
sbb
xchg
sub
movsl
insl
lods
popl
sub
xor
or
push
adcb
and
insb
sbb
ljmp
sub
cs
sub
and
and
bound
mov
lods
sbb
xchg
fiadds
jmp
or
stos
repz
lret
jmp
sahf
or
insl
js
mov
push
or
sbb
aaa
jns
arpl
and
dec
movsl
daa
outsb
adc
test
nop
lret
sbb
jno
lods
in
xor
pop
dec
or
out
movsl
mov
imul
scas
lret
dec
lcall
dec
mov
xchg
enter
mov
mov
sub
icebp
push
jl
loop
ret
mov
pusha
sbb
mov
cs
popa
mov
les
daa
push
sub
sbb
js
xchg
into
mov
out
or
int
sub
cmp
jb
dec
scas
shl
out
ret
adc
cmpsw
sbb
outsl
out
lret
sbb
push
dec
cli
aas
adc
cmp
outsb
pushf
lret
lea
popf
xor
or
or
mov
push
jmp
xchg
lods
movsb
daa
pop
sbb
movl
xchg
adc
adc
hlt
xor
xchg
fisubrl
fldcw
cmpsl
push
sub
popf
or
stc
mov
inc
sub
mov
cmpsl
or
lea
popf
or
jmp
xchg
stos
or
movsl
out
test
int3
inc
ljmp
scas
mov
out
pop
cmp
nop
or
leave
pop
insl
xchg
out
subl
imul
outsl
pop
dec
jp
or
punpcklwd
sub
ret
xor
incl
loop
outsb
jmp
push
imul
cmpps
daa
sub
cmpsl
cmc
daa
mov
stos
inc
or
cmp
or
add
xchg
scas
sub
push
daa
sbb
xchg
test
dec
dec
addr16
cmpsl
ret
push
pxor
std
lret
jne
sbb
js
or
push
and
iret
push
ret
in
bound
sub
and
dec
ljmp
repnz
ss
mov
stos
or
enter
outsl
pop
add
pop
mov
and
stos
shrb
movsb
pavgw
bound
popa
test
stos
xchg
adc
dec
das
mov
insb
ret
mov
pop
dec
dec
aas
jp
int
fidivrs
cld
stos
lock
xor
pop
ljmp
push
or
into
imul
scas
rorl
out
mov
mov
pop
or
fdivr
and
sti
inc
xchg
push
adc
dec
xchg
xor
data16
or
push
cmpsl
sub
xor
iret
sbb
in
sub
push
int
sub
arpl
cs
xorl
sub
sbb
enter
mov
dec
push
fcmovb
sub
adc
pop
scas
pop
clc
or
scas
or
dec
andl
lods
xlat
dec
mov
jecxz
test
push
aad
jecxz
daa
lret
dec
bndstx
or
outsl
fildll
ret
dec
sub
loope
scas
pop
and
out
movsb
sub
mov
enter
outsl
out
add
ss
pxor
or
add
out
ljmp
bound
sub
andb
xchg
or
shrl
pushf
lret
sub
xor
sahf
inc
or
mov
stos
mov
xchg
iret
movb
mov
shrl
scas
call
mov
out
jle
inc
jb
or
dec
dec
xchg
adc
push
sub
rol
rorb
aam
stos
sub
aas
inc
xor
sub
faddl
clc
push
adc
push
mov
lea
inc
pop
loop
jg
jno
aam
or
pop
rolb
xlat
cs
arpl
sub
push
stc
adc
mov
andb
inc
leave
sub
in
insl
sarb
push
movsb
inc
and
xor
pop
rorl
mov
fwait
das
or
inc
cmpsl
sub
xchg
insl
das
lods
adc
out
pop
or
jp
inc
or
mov
push
mov
mov
mov
pop
stos
mov
dec
sbb
imul
lret
das
add
popa
mov
mov
jecxz
mov
lods
sub
push
inc
cwtl
jns
mov
rdpmc
insl
push
pop
test
enter
xchg
aam
loopne
inc
dec
sbb
test
adc
hlt
adc
mov
daa
shlb
insl
add
lock
dec
xchg
scas
push
adc
nop
sbb
in
xor
sbb
or
xchg
xchg
repz
in
jmp
xor
adc
out
dec
sub
stos
inc
xchg
mov
and
sub
sbb
daa
out
cmovnp
push
jmp
mov
mov
fidivrl
add
lea
lea
xchg
and
pop
test
lods
fwait
call
lds
cmp
or
mov
add
stos
lods
and
mov
jne
xchg
fnstcw
in
push
jns
and
sub
pop
mov
mov
mov
out
bound
lock
add
lret
in
in
nop
jmp
xchg
stos
sub
sub
shll
pop
call
and
adc
subb
mov
jl
scas
insl
adc
hlt
adc
xchg
dec
pop
imul
popa
sbb
pop
out
lret
xchg
pop
xchg
aad
sub
xor
rorl
daa
jbe
pop
bound
xor
repnz
fwait
outsb
stos
adc
outsl
ucomiss
push
jno
out
out
dec
pop
pop
jnp
or
dec
inc
ljmp
or
data16
stos
ljmp
and
or
mov
pop
inc
insl
jge
lods
lea
scas
mov
mov
jmp
mov
sbb
out
lret
fsubs
lods
sub
add
push
sbb
dec
adc
dec
adc
sbb
or
movsl
or
adc
pop
mov
push
push
add
sub
cs
push
in
mov
mov
inc
lea
jmp
adc
lret
test
test
outsb
test
or
mov
pop
and
les
or
enter
roll
push
dec
jp
in
stos
mov
mov
ljmp
bound
jmp
addr16
sub
orb
add
add
xchg
jmp
out
ret
in
lea
push
dec
push
or
jmp
daa
or
mov
xor
iret
into
xor
jp
jb
bound
data16
out
mov
pusha
dec
mov
jno
pop
and
pop
mov
sub
lods
sbb
fs
sbb
fldt
mov
out
jmp
adc
fimull
xchg
aad
test
aad
add
sub
cs
test
das
cld
dec
repz
loop
dec
sub
bound
xchg
into
inc
mov
xor
xchg
add
inc
jp
icebp
push
fildll
imul
dec
data16
xchg
or
sub
push
or
pop
sub
fs
cmp
and
mov
push
clc
and
iret
mull
adc
imul
sub
xadd
das
mov
mov
push
repnz
push
jg
push
bound
pop
rorb
outsl
cmpsl
sub
dec
scas
in
iret
dec
dec
jo
aam
daa
cmp
pop
pop
nop
lods
or
jns
stos
in
scas
jg
jecxz
stos
dec
pusha
ret
or
insl
adc
push
xor
sbbl
jae
movsb
xchg
mov
lea
std
or
mov
or
or
iret
fisttpll
adc
pop
outsl
enter
outsl
ljmp
les
leave
mov
mov
and
or
insb
in
mov
push
scas
cs
bound
ljmp
cmp
mov
dec
xchg
stos
sub
outsb
mov
jo
rolb
xchg
fadd
int
jmp
mov
jecxz
or
sbb
mov
loope
sub
ljmp
push
imul
push
mov
out
inc
outsb
outsl
xchg
loope
or
dec
dec
mov
push
test
out
loope
outsb
stos
decl
test
and
xor
xchg
dec
stos
sub
dec
sub
jmp
inc
test
in
scas
iret
jae
push
inc
loope
lret
stos
pop
insl
addr16
js
imul
fninit
push
jno
sub
sbb
scas
mov
sub
enter
xlat
mov
lret
lea
ret
dec
push
repz
mov
adc
loop
dec
sub
stos
inc
jo
test
adc
test
in
and
push
bound
icebp
lods
dec
xchg
ljmp
orl
arpl
and
mov
in
adcl
test
in
mov
cmp
dec
sbb
dec
adc
mov
das
mov
or
arpl
lret
xchg
and
mov
pop
out
jge
sbb
scas
iret
outsl
dec
jg
push
test
push
mov
into
or
scas
stos
shr
sbb
pop
mov
lahf
cmp
push
lcallw
std
fdivrl
sub
bound
mov
push
sub
inc
test
inc
pop
push
pop
popa
scas
out
jmp
ljmp
sub
lds
and
or
out
or
cmpsl
dec
ds
pushl
mov
mov
or
xchg
daa
lret
cmc
jmp
or
xor
out
outsl
fnstcw
ljmp
or
dec
cmp
stos
jmp
sbb
enterw
pop
sub
fs
cmpsl
mov
or
hlt
dec
xor
rdtsc
das
adc
shrb
lea
outsl
scas
data16
outsb
push
pop
add
and
lods
dec
adc
bound
dec
mov
xchg
pop
pop
leave
in
dec
mov
scas
jbe
orb
das
int
stos
mov
jl
insl
lds
mov
xor
jle
fldenv
dec
xor
push
prefetch
popa
test
test
lods
scas
sub
or
add
imul
jne
or
push
sbb
sub
dec
leave
pushf
and
push
daa
loop
sub
test
js
flds
inc
scas
push
ljmp
inc
push
fwait
mov
pop
push
popf
bound
lea
iret
das
out
or
lcall
adc
adc
pushw
inc
imul
lahf
das
pushl
push
sbb
fwait
push
movsb
out
dec
rorl
out
lahf
inc
mov
add
cmpsl
cs
iret
rcr
out
xchg
sahf
mov
or
dec
inc
aad
sbb
cwtl
or
lds
jae
inc
into
push
inc
mov
or
sbb
leavew
xor
cwtl
or
lds
shlb
or
ja
mov
das
pop
jge
push
push
out
sbb
or
fbstp
jo
lds
lahf
in
xchg
xchg
jmp
popl
data16
daa
sbb
icebp
cmp
jle
jecxz
daa
sub
cmpsl
iret
dec
repz
and
dec
loope
int
std
push
data16
pop
dec
push
pinsrw
dec
sub
push
out
sbb
outsl
cmpl
dec
pop
cmp
shlb
sbb
pop
cmpsb
xchg
insl
mov
pop
jecxz
lods
ret
pop
lock
mov
pop
test
daa
test
xchg
outsl
or
pop
jecxz
pusha
sub
test
xchg
pop
arpl
fsts
xor
fs
dec
out
sbbl
and
mov
or
dec
out
inc
adc
lret
jmp
in
sahf
jbe
sub
lahf
lea
test
outsb
out
loop
hlt
push
aas
xchg
add
xor
pop
inc
push
sub
push
pop
loopne
sub
xchg
xlat
jmp
sub
dec
xchg
xor
ja
xor
les
scas
shr
mov
mov
repz
ljmp
dec
out
lret
xchg
outsl
pop
push
cwtl
daa
jecxz
add
dec
inc
out
add
sub
dec
ret
sub
dec
ljmp
dec
inc
adc
imul
or
adc
fbstp
mov
xorl
mul
dec
js
pop
cmp
addr16
sub
rorb
cmpsb
dec
jmp
cmpsl
xor
scas
iret
in
mull
lret
lea
xor
pop
xor
add
sub
sub
push
or
sbb
xor
daa
in
mov
mov
xor
outsl
imul
adc
and
lret
mov
xor
add
dec
mov
xor
fdivl
mov
xchg
out
inc
call
lods
cmp
cmp
and
mov
in
call
mov
out
pop
push
daa
dec
mov
jae
insl
scas
sub
mov
xchg
in
mov
inc
ret
pop
jmp
xchg
inc
test
cli
out
clc
xor
sub
or
aas
mov
add
inc
cmpsl
lret
and
cmp
xchg
lret
enter
sub
inc
test
dec
int
loop
loopne
leave
cmp
sub
iretw
rorb
jo
sub
sub
dec
dec
sub
pop
xchg
das
punpckldq
test
jecxz
movsb
das
movsb
or
adc
jns
dec
mov
and
outsl
sbb
cmp
std
fsincos
jns
lds
dec
or
scas
popa
imul
push
ljmp
xchg
sbb
jl
dec
scas
dec
push
sub
lret
out
pushaw
xor
xor
sbb
in
iret
jmp
out
sub
pop
add
xor
mov
push
out
dec
dec
cmp
add
mov
stc
aas
das
sub
adc
add
pop
push
cmpsl
sub
mov
jne
stc
jmp
insb
adc
in
out
sar
xor
mov
stos
fs
sbbl
imul
pop
adc
xchg
xor
out
test
mov
xchg
nop
das
mov
iret
mov
cwtl
dec
or
out
out
jl
mov
dec
and
xchg
jbe
cwtl
out
imul
xchg
fcompl
dec
hlt
mov
out
popl
sbb
xor
pop
lret
adc
mov
mov
imul
sub
jmp
out
dec
jle
aad
push
push
mov
dec
inc
pop
jbe
jmp
into
sbb
push
iret
loopne
int
mov
ret
rolb
stos
addr16
dec
mov
repnz
mov
insl
lret
in
sahf
test
fidivrs
sysret
les
lret
sbb
sbb
xchg
jmp
cmpsl
aas
out
sbb
xchg
mov
adc
fildll
ljmp
push
jmp
inc
invd
sbb
outsb
loop
imul
add
das
out
pop
ret
or
insl
scas
sarb
mov
lret
push
test
por
xchg
popf
mov
mov
jbe
movsl
mov
pusha
addr16
adc
xor
hlt
sbb
fisttpll
jno
cmc
sbb
jmp
lret
out
or
out
cmp
inc
cmpsl
cmp
wbinvd
xchg
pop
rcr
pop
sti
popa
lret
das
scas
out
mov
out
sbbb
aas
fimuls
sub
inc
dec
in
jmp
fldt
inc
add
leave
shll
push
dec
xchg
cmpsb
jno
imul
and
jmp
dec
pusha
dec
test
dec
mov
das
inc
mov
or
sub
in
bnd
push
dec
sub
sub
aaa
popa
popa
sbb
cwtl
mov
loope
dec
inc
into
jmp
out
stos
or
lret
adc
daa
jne
or
sub
jg
loope
xor
pop
inc
mov
sub
or
dec
sub
adc
vpsrad
jmp
xor
leave
sub
repz
adc
dec
outsl
jp
ret
data16
filds
or
inc
or
jnp
fildl
popf
cmpsb
sub
in
sub
aaa
push
adc
sub
add
mov
leave
repz
test
xor
stos
scas
repz
xor
les
dec
das
xchg
mov
cmp
scas
or
stos
push
orb
jg
outsb
lea
das
push
xor
xchg
dec
dec
adc
imul
pop
add
insl
sub
sub
addr16
inc
and
xchg
outsl
dec
inc
das
dec
jge
hlt
insl
push
insl
mov
lret
mov
in
imul
or
stos
sbb
dec
insl
ds
call
xchg
lret
pop
dec
ljmp
mov
in
xchg
push
pop
adc
push
ljmp
test
xchg
dec
jne
dec
jbe
mov
outsl
adc
imul
ljmp
leave
sbb
test
or
sub
inc
ficoms
mov
lods
sub
aad
sub
invd
cwtl
sbb
dec
clc
mov
mov
jmp
jg
dec
mov
mov
test
inc
stos
iret
fmul
pop
fmull
jnp
add
dec
das
in
lret
dec
dec
scas
adc
imul
jb
pushf
andb
imul
push
test
push
push
movb
jns
fucomip
repz
lcall
pop
lret
out
or
mov
bound
sub
mov
pop
add
outsl
dec
lcall
fld1
cli
sbb
mov
push
out
dec
inc
xor
lret
dec
loop
or
loope
or
xchg
dec
sub
addr16
shr
out
shl
ljmp
or
mov
mov
stc
es
pusha
mov
mov
icebp
stc
jmp
es
mov
dec
movsl
adc
stos
rcrb
cmpsl
xor
loop
das
xor
leave
out
lock
or
mov
mov
stos
scas
subl
xchg
mov
or
pop
mov
dec
lods
or
cmp
xor
dec
xor
mov
js
pusha
and
hlt
sub
push
ds
jb
mov
push
or
ret
scas
sbb
int
lret
daa
scas
lods
fisubs
cs
inc
mov
stos
imul
hlt
sbb
outsb
push
dec
sub
push
imul
movsb
push
adc
mov
xor
ds
adc
mov
sub
xchg
scas
imul
insl
pop
cmpsl
sbb
ret
out
imul
cs
push
mov
bound
lret
mov
mov
call
sahf
cmp
imul
sub
adc
nop
loope
mov
push
dec
imul
insl
cmpsl
loopne
jae
out
addl
outsl
stos
xor
sub
dec
sti
cmp
stos
das
sbb
jge
xchg
pop
fldl2e
dec
cmpsl
sbb
imul
sub
jb
jmp
push
push
add
xchg
push
jmp
mov
mov
imul
or
push
dec
stos
dec
sarb
mov
sub
daa
lcall
pushf
out
add
mov
cmpsl
push
outsl
lock
pusha
outsb
jecxz
lret
nopl
xchg
bound
in
jo
push
fisttpll
cmpsl
ljmp
test
push
pop
scas
dec
cmp
out
aas
sub
sti
scas
dec
lret
das
addr16
xor
out
sbb
cmpsl
in
xchg
loope
imul
movsb
cmpsl
ljmp
out
nop
shlb
sub
bound
adc
lret
into
or
sub
outsl
and
arpl
jmp
sbb
sub
filds
xor
fadd
scas
sbb
lret
lods
adc
pop
es
mov
ret
or
loopne
adc
daa
in
pop
sub
sub
mov
lds
jmp
into
in
outsb
xchg
mov
pop
lret
out
ret
mov
mov
adc
inc
or
push
adc
mov
push
dec
imul
mov
cld
push
inc
jbe
mov
test
jp
dec
ret
adc
dec
scas
addr16
cs
cs
mov
sub
xor
or
lret
ficomps
jno
out
shl
lods
leave
int
xchg
pop
and
testl
loop
xstore-rng
cmpsl
pop
into
outsl
fbld
dec
mov
inc
xchg
clc
mov
sbb
mov
lods
inc
sub
sahf
jp
dec
insl
leave
lahf
faddl
inc
xlat
ret
and
scas
inc
out
mov
dec
dec
out
jb
mul
testl
sub
adc
cmp
mov
push
adc
loopne
adc
int
mov
aaa
sbb
inc
dec
in
out
dec
test
or
iret
out
jge
push
int
sbb
stos
adc
pop
push
mov
dec
sub
adc
sub
imul
mov
lahf
popf
and
lret
subb
sub
les
pushf
cltd
mov
iret
or
mov
iret
mov
outsl
mov
test
and
jno
mov
xchg
sbb
jmp
shl
dec
sub
sub
push
push
cmp
cs
dec
pushf
push
cld
xchg
sub
jg
mov
in
inc
repz
push
andl
mov
sbb
push
push
jno
mov
dec
out
mov
mov
xchg
or
iret
adc
int3
mov
and
xchg
and
mov
enter
add
mov
dec
mov
aam
jmp
or
cwtl
push
adc
xchg
jp
into
dec
ret
or
jno
pop
movsb
lret
loope
mov
testb
lret
inc
lods
inc
xchg
sub
out
cmpsl
stos
xchg
cmp
and
mov
cli
pushf
outsb
repnz
int3
loopne
inc
xor
scas
sbb
rorb
repnz
mov
or
test
sbb
leave
test
mov
push
pop
inc
lea
out
adc
dec
pop
repz
mov
dec
dec
lret
xchg
scas
ret
jecxz
js
aad
iret
stc
pop
cmp
dec
out
imul
shrb
addr16
mov
daa
dec
enter
mov
pop
sub
leave
sbb
outsl
sub
cltd
aam
xchg
lds
sub
push
ds
jmp
cmpsl
into
cmp
out
dec
xchg
addr16
mov
push
leave
sub
outsb
mov
out
pop
dec
adc
adc
mov
stos
scas
iret
das
icebp
jle
into
mov
adc
and
fwait
bsr
add
mov
mov
outsb
xchg
sub
inc
lahf
push
push
arpl
int
push
ljmp
sub
fdivrs
or
mov
stos
jb
filds
xor
sbb
ljmp
dec
popa
cmc
mov
dec
pop
test
cmp
lret
cmp
pop
dec
clc
lret
or
idivb
stos
stos
data16
xlat
pop
orl
ds
loopne
sub
cmpsb
and
daa
adc
xor
jmp
scas
dec
pop
mov
into
out
mov
or
push
lret
adc
iret
movsbl
xchg
loopne
pop
adc
pop
sbb
test
sub
sbb
scas
pop
orb
xchg
btr
stos
repnz
movsb
fldt
push
movsl
mov
xchg
sub
adc
or
pop
dec
dec
push
leave
loope
int
mov
into
sub
push
and
subl
xchg
outsb
loopne
add
daa
or
dec
shlb
add
outsl
test
sub
mov
stc
lret
jmp
push
add
mov
hlt
xor
lret
push
sysretw
jmp
insl
rep
or
sub
push
daa
adc
scas
mov
test
dec
ret
and
loope
mov
adc
iret
lods
imul
lret
inc
push
sub
jge
je
adc
int
imul
call
sti
insl
sub
lahf
in
or
mov
scas
or
pop
xchg
sbb
out
int3
popa
cmpsl
xchg
or
out
lea
mov
out
cmp
stc
leave
stos
add
cmpsb
push
imul
and
rol
adc
scas
pop
nop
out
jecxz
push
in
push
adc
cltd
gs
dec
push
loope
imul
dec
mov
iret
inc
sub
mov
xchg
outsl
imul
pop
jno
sub
or
aam
inc
sub
js
and
jb
dec
orl
bound
sub
cmp
xchg
adc
imul
push
pop
mov
loopne
xchg
add
pop
fimull
iret
inc
outsb
inc
aas
into
mov
mov
mov
inc
in
or
rcl
dec
lds
push
jb
dec
sub
xchg
lret
or
dec
shl
sub
iret
jno
mov
daa
or
stos
mov
mov
test
outsl
scas
ret
sub
test
sbb
mov
and
adc
out
insl
into
pop
cs
push
lret
and
or
jg
shlb
dec
jns
jecxz
xchg
arpl
lods
out
inc
pushf
jnp
das
adc
stos
xor
ficoml
jae
dec
sub
imul
out
jmp
mov
inc
subb
push
das
push
repz
jl
pop
pop
cmp
scas
and
adc
daa
dec
pop
xorl
scas
lret
pop
and
in
xchg
fwait
pop
outsb
push
dec
hlt
insl
inc
push
sub
mov
aam
or
or
sub
jmp
inc
ljmp
inc
dec
sub
or
inc
dec
imul
mov
cmp
sbb
add
sbb
cmp
or
or
pop
or
fbld
or
pop
or
dec
or
stos
mov
scas
cmp
repz
push
scas
cmpsl
jmp
js
je
in
fneni(8087
or
sbb
xchg
lea
mov
mov
xor
dec
and
cli
push
adcb
sub
cltd
test
out
subl
test
add
mov
dec
ret
mov
push
dec
orl
adc
test
and
xchg
xchg
and
cmp
bound
adc
sub
loope,pn
das
imul
iret
mov
adc
dec
sub
or
xor
sub
adc
loopne
in
mov
add
jnp
pop
test
and
lods
lods
jns
ret
xchg
sub
or
or
lds
jle
mov
mov
rolb
mov
pop
arpl
or
popa
mov
scas
leave
push
add
testl
addr16
lods
dec
mov
enter
add
stos
int
into
sub
pusha
push
in
push
dec
or
ret
test
fcomp
ret
add
mov
sub
test
iret
bound
loop
out
mov
lea
movsb
inc
mov
xlat
aad
inc
int
das
dec
mov
or
or
dec
mov
pop
or
imul
lret
cmp
push
pop
sub
cmpsb
in
sub
pop
ljmp
cmp
sub
push
pop
sub
mov
clc
cmovno
push
imul
in
std
or
mov
jmp
out
into
dec
ret
test
mov
xchg
insl
sarb
sbb
cs
push
stos
dec
scas
push
xor
in
outsl
daa
or
or
das
arpl
cmpsl
inc
dec
in
pushf
lret
push
dec
mov
icebp
push
out
out
inc
jmp
mov
stc
mov
ds
push
fmull
push
arpl
int
xchg
call
and
push
dec
cs
sbb
in
shll
and
in
jg
scas
cmc
cmp
movsl
imul
in
dec
sbb
out
pop
and
sbb
cmp
popf
push
movsb
push
dec
xor
inc
jno
inc
lods
sub
lea
dec
dec
ret
or
push
ret
lret
shl
mov
pop
push
adc
push
sbb
movsl
or
mov
out
lea
das
stos
jno
out
imul
sbb
dec
sub
dec
into
lods
lods
xor
mov
sub
sub
out
ljmp
out
or
add
xchg
push
stc
jecxz
push
inc
int
add
add
dec
lods
jge
sbb
mov
sub
aad
test
out
mov
outsl
sub
add
scas
adc
mov
mov
mov
ss
cld
and
adc
stos
or
imul
cmpsb
xor
and
sbb
mov
sub
sub
xchg
pop
mov
xor
lret
ret
ljmp
push
jo
mov
lea
xorl
addr16
sahf
push
cwtl
int
add
movsb
mov
imul
fwait
mov
push
aad
das
adc
adcb
outsb
dec
dec
push
push
mov
jae
or
mov
rolb
outsl
rcrb
jmp
jne
push
jmp
inc
imul
aad
popf
loope
xor
insl
int
test
xor
rcrl
mov
jmp
icebp
in
test
test
sbb
outsl
push
jmp
or
pop
dec
scas
adc
mov
sub
icebp
cmp
sub
inc
test
dec
stc
add
out
cs
jnp
lods
xchg
or
or
dec
seto
jle
js
xchg
pop
int
dec
notb
test
sbb
dec
sub
and
mov
adc
jo
or
repnz
dec
out
mov
pop
jns
stos
dec
outsb
cmc
adc
daa
lret
or
loope
dec
mov
mov
adc
adc
sub
stos
dec
sbb
and
popa
xchg
stos
dec
push
das
dec
mov
mov
sahf
sub
mov
or
dec
ds
rclb
test
scas
fwait
sub
les
loop
test
mov
sub
imul
popa
sub
sub
or
or
push
outsl
mov
inc
fnstsw
sahf
jbe
xlat
mov
xor
repnz
push
das
stos
test
or
mov
aas
lds
out
jp
dec
pop
rcrb
mov
gs
xor
scas
int
icebp
leave
push
adc
movsb
shlb
cs
jecxz
pop
push
insl
add
jp
pop
js
mov
jg
into
shrb
mov
ss
icebp
lock
jb
xchg
or
jmp
stos
sub
scas
test
xor
aaa
call
sub
sub
dec
jg
sub
sub
imul
xchg
push
sbb
out
out
or
xor
xor
mov
mov
addl
dec
inc
loope
outsl
jmp
dec
sub
leave
setnp
xchg
insl
sbb
inc
mov
inc
add
aam
dec
jge
lret
dec
lds
bound
add
dec
pop
sub
lods
sub
mov
mov
xchg
mov
out
lea
int
sub
push
in
inc
adc
movsb
dec
mov
pop
leave
pop
lea
in
pop
jecxz
loop
into
and
dec
sub
outsb
mov
xchg
adc
cwtl
loope
daa
imul
xor
call
loop
xor
or
ret
notl
mov
loope
mov
movl
loop
in
or
sbb
bound
push
fwait
pop
iret
sahf
data16
or
push
call
call
cmp
adc
lods
pop
push
adc
out
pop
sub
ret
in
dec
mov
sbb
xor
sbb
out
jmp
mov
cmpsb
cmp
sbb
pop
adc
lret
add
cmpsl
jmp
xchg
sub
in
das
add
sahf
in
insl
jmp
loop
imul
dec
stos
and
and
lods
in
or
ljmp
dec
cs
bound
push
mov
or
stc
test
dec
das
xchg
dec
jecxz
ljmp
fst
decl
and
loope
dec
dec
in
es
bound
jb
xchg
inc
sbb
repz
sbb
inc
and
imul
mov
jno
sub
mov
scas
test
push
xlat
dec
sub
jge
sbb
dec
mov
in
test
aas
jecxz
and
into
outsb
and
xor
or
xchg
and
test
fcomps
sub
dec
data16
sub
jg
sbbb
xchg
cmp
test
mov
dec
sbb
sub
out
scas
jns
in
mov
jmp
xchg
dec
das
mov
dec
pop
bound
imul
xchg
repz
testl
cltd
into
jno
pop
cmp
or
leave
in
push
push
jmp
dec
test
insl
in
pop
sub
jg
outsl
das
shrl
lods
mov
sub
cmpsl
repnz
repz
pop
outsl
mov
and
adc
ret
xchg
lea
push
dec
cmp
insl
into
shr
xchg
or
jmp
dec
cmp
out
xchg
loope
push
data16
enter
imul
adc
pop
std
pop
add
sbb
fcomp
mov
pop
cmp
cs
push
xchg
dec
stos
into
test
pop
pop
ljmp
scas
jmp
and
dec
stos
pop
xchg
or
mov
xchg
ret
sbb
lret
out
out
test
or
inc
or
jmp
pop
adc
call
xchg
sub
jge
cltd
xchg
cwtl
inc
andb
scas
xchg
jmp
out
sub
lret
into
icebp
scas
adc
inc
mov
les
or
or
fldcw
sbb
xchg
loop
scas
push
and
insl
adc
out
out
and
mov
push
outsl
mov
lret
jmp
xor
sub
insl
sub
dec
daa
test
lods
dec
push
push
xlat
iret
adc
add
or
sub
out
das
mov
in
cmp
mov
fdivl
dec
inc
scas
femms
insl
mov
repnz
lret
stos
movaps
pusha
jnp
in
or
or
aam
outsb
adc
and
int
fsubrp
jge
jmp
sub
and
mov
or
in
jge
addr16
or
mov
cmpsb
fldcw
or
sub
push
lret
imul
mov
int
adc
addr16
inc
dec
sub
sub
fmuls
jmp
xchg
mov
sahf
mov
outsb
std
imul
leave
fldcw
movsb
inc
dec
pop
sbb
lret
adc
adc
outsl
mov
or
stos
lret
leave
mov
inc
xchg
dec
mov
fcmovnb
push
stos
adc
push
out
sub
pop
cmpsl
or
arpl
xor
ret
pop
dec
stos
sub
and
add
dec
mov
lret
and
roll
fsts
out
out
or
or
stos
test
push
out
xchg
jno
inc
std
push
sbb
cmp
dec
mov
in
int
add
cmpsl
lods
imul
jmp
dec
cmp
pop
mov
iret
adc
jecxz
jmp
add
cwtl
dec
sub
mov
pop
mov
dec
lret
xchg
loop
or
dec
scas
out
fnsave
jmp
das
ret
aas
daa
enter
ss
dec
xorps
pop
dec
adc
cs
dec
outsl
xchg
xchg
orw
icebp
lods
inc
pop
cmpsl
dec
ljmp
fmuls
in
into
imul
dec
or
sub
mov
test
jo
dec
and
outsl
imul
xor
dec
mov
scas
subb
out
push
in
arpl
into
out
or
sysret
mov
dec
dec
mov
out
aad
movsb
popf
cmp
add
int
scas
ret
stos
or
and
ljmp
jno
imul
mov
push
add
add
or
ret
and
inc
fmuls
into
xchg
cmpsl
addr16
sub
rol
icebp
cwtl
xchg
stos
loop
pop
dec
mov
adc
ret
xor
outsb
pop
and
loope
bswap
or
loope
dec
sarb
lea
insl
or
enter
xor
jg
scas
adc
or
mov
das
ljmp
mov
inc
mov
sub
add
test
pop
out
jmp
cs
adc
lea
push
xchg
dec
jne
sbb
mov
lret
outsl
pop
or
in
push
jl
test
inc
add
push
ljmp
leave
dec
xor
bound
xor
or
out
scas
out
sub
dec
adc
adc
into
jecxz
dec
retw
pushf
pop
mov
iret
dec
lahf
inc
mov
push
push
insl
xor
adc
jmp
in
das
retw
std
stos
sub
rclb
fidivl
dec
jae
int
sbb
push
or
lock
and
rclb
cli
push
pop
and
xchg
xchg
pop
adc
insl
dec
hlt
mov
loop
cmpsl
inc
push
add
lds
push
or
imul
inc
add
or
cs
cmp
xchg
push
pop
mov
hlt
mov
push
mov
mov
das
outsl
sbb
data16
sub
cld
vmwrite
fwait
dec
or
lods
jae
push
movsb
enter
adc
das
daa
xchg
add
pop
add
push
inc
leavew
mov
test
dec
in
inc
imul
mov
lret
or
mov
push
xor
mov
dec
sub
sbb
mov
push
jmp
stos
dec
xchg
sub
cltd
out
lea
or
pmaxsw
adc
adc
sbb
dec
out
jecxz
and
xor
lret
cs
repnz
dec
out
stos
scas
xor
sub
sbb
insl
sbb
in
xchg
imul
dec
mov
pop
mov
in
or
inc
ljmp
cs
pop
inc
aam
push
push
jne
outsl
adc
lcall
fwait
popf
cs
push
int3
out
dec
lahf
mov
orl
les
push
sub
roll
loope
in
int
pop
or
adc
cmpsl
sub
xlat
aas
fnstcw
cs
sub
add
bound
insl
dec
adc
adc
mov
andl
jmp
push
into
push
lds
dec
cwtl
and
out
popa
xor
incl
outsl
stos
jg
ds
shl
mov
outsb
shl
iret
loop
xor
mov
pop
test
lods
pop
inc
rolb
push
pop
push
sbb
jo
mov
mov
jns
leave
cmp
comiss
push
hlt
popa
dec
xor
cmpsl
sbb
sub
mov
leave
clc
jns
sub
jns
jnp
inc
scas
xchg
iret
test
sub
sbb
dec
bswap
or
xor
int
sub
imul
addb
or
xor
das
or
xchg
adc
clc
inc
push
test
imul
sub
dec
dec
or
in
jmp
pop
xchg
adc
out
adc
xor
lret
lahf
or
imul
cmpsl
movb
fmulp
adc
inc
daa
or
jo
xor
or
rorb
in
lret
loop
inc
inc
cld
loope
stos
imul
and
or
in
xchg
icebp
or
push
stos
pusha
out
mov
out
mov
jle
inc
sub
pop
ret
xchg
imul
sub
insl
or
pop
jmp
push
imul
test
mov
insl
or
xchg
dec
icebp
mov
lret
adc
push
mov
adc
pop
mov
or
dec
xchg
enter
mov
inc
adc
out
mov
add
setl
push
inc
sub
mov
sub
repz
sub
mov
mov
popa
inc
outsb
int
fisttpll
rolb
sub
or
push
xchg
xor
into
xor
dec
add
pop
add
sub
cmp
sub
mov
inc
jmp
fxch
cmovae
and
pushf
stos
out
sub
mov
mov
out
loop
into
pop
cltd
xchg
xor
insl
sub
adc
pop
ret
adc
push
movsb
push
lods
and
fucomip
pop
mov
mov
lds
insl
loope
insl
push
aam
xorl
mov
adc
inc
add
xchg
push
dec
add
arpl
and
shrl
xor
cld
movsb
dec
shl
popa
pop
dec
addr16
adc
mov
or
inc
adc
or
mov
dec
fdivp
test
ds
inc
jb
inc
into
adc
outsb
stos
scas
repz
lahf
daa
adc
les
lret
movsl
outsb
cmpsl
adc
iret
sub
outsb
daa
ljmp
inc
call
out
xor
into
lret
sub
cmp
and
and
or
mov
sti
cltd
xor
scas
stos
sub
pushf
ljmp
in
daa
out
xor
rorb
adc
scas
shr
xchg
adc
adc
pop
adc
in
mov
push
push
movsl
mov
mov
daa
fnstenv
cmp
pop
xchg
adc
mov
or
out
mov
icebp
dec
sbb
jge
lods
or
xor
xchg
dec
xchg
imul
sub
xor
lret
invd
pop
push
mov
mov
je
data16
loop
out
sub
cmp
lahf
lret
mov
into
iret
and
lods
orl
sub
mov
adc
mov
out
lods
out
mov
scas
dec
sbb
mov
sub
xor
addr16
dec
mov
xor
adc
das
push
dec
or
push
dec
push
mov
sub
jno
or
xor
dec
addr16
outsl
dec
inc
inc
or
sub
sbb
leave
ljmp
cmp
sub
xchg
dec
das
dec
pop
fsubrp
sub
and
das
movb
out
mov
leave
leave
sub
dec
mov
pop
daa
out
or
stos
mov
push
ret
sbb
rol
test
adc
lret
sub
push
mov
das
aam
xchg
dec
mov
sub
mov
mov
mov
aam
jb
lret
hlt
push
push
jbe
mov
xchg
and
mov
jno
inc
cmp
outsl
outsb
add
xlat
lret
stos
nop/reserved
cwtl
pop
in
and
clc
and
in
xor
and
nop
lcall
mov
out
dec
iret
pop
xchg
mov
pop
xchg
fdivp
cmp
hlt
scas
jmp
jge
dec
cmp
sub
aaa
mov
sub
imul
mov
imul
cwtl
sub
mov
out
lds
dec
jo
lret
or
outsb
imul
jmp
insl
cmpsl
dec
pop
stos
in
adc
cmp
or
ds
dec
out
scas
iret
orl
out
sbb
out
adc
push
out
pop
cltd
daa
outsl
sub
lret
mov
jmp
mov
mov
dec
push
inc
fwait
out
xchg
pop
sub
daa
add
push
int
sbb
stos
or
cltd
lret
scas
out
adc
out
repnz
pop
push
mov
popa
adc
push
cs
pop
ret
ljmp
jne
mov
dec
into
jmp
xchg
mov
enter
jmp
xchg
xlat
lods
xchg
ret
stc
into
shr
popf
mov
lods
stos
or
jns
stc
cmp
lods
jo
into
in
jb
jno
sub
cld
je
test
stos
roll
or
pop
and
mov
stc
cmc
call
and
cs
loope
das
jmp
sub
outsl
inc
push
mov
dec
out
dec
cmp
jmp
mov
imul
mov
lret
andl
addb
cmpsb
sbb
push
stos
sbb
add
das
in
ja
test
orb
ja
mov
push
fld
popa
pop
movl
sub
mov
outsb
std
push
mov
or
imul
dec
lret
iret
sub
enter
sub
dec
or
out
dec
jmp
inc
sub
outsb
icebp
stos
dec
dec
push
push
cwtl
inc
adc
mov
jbe
jg
daa
sti
lret
add
mov
adc
or
inc
push
pop
or
jmp
dec
imul
adc
sub
mov
jg
ret
mov
fisttpl
sub
sub
jmp
test
lret
xchg
xchg
icebp
sub
sub
das
sbb
lret
mov
pushf
add
push
mov
jmp
int
xor
out
into
testb
test
stos
inc
sub
sub
rcrl
jne
test
hlt
and
and
mov
outsb
pop
sbb
adc
inc
subb
fidivrl
add
inc
dec
lret
inc
push
xor
mov
in
sub
push
mov
stos
imul
out
pop
mov
mov
dec
pusha
jge
cwtl
mov
out
rorb
xor
dec
das
loop
sub
pusha
dec
sub
or
repnz
out
mov
dec
push
pop
inc
or
and
inc
lret
mov
mov
mov
test
or
lret
adc
xchg
adc
and
int
inc
pop
bts
or
popa
enter
sub
push
inc
out
sbb
into
pushl
jns
cmpsl
mov
in
inc
push
dec
stc
push
jmp
sub
mov
rorl
push
adc
aas
jmp
pop
jl
hlt
pop
lods
jnp
mov
das
push
dec
sub
dec
jmp
int
jge
push
xchg
ds
mov
adc
xor
inc
dec
mov
popf
or
jmp
int3
or
mov
repz
int
mov
comiss
pop
leave
inc
xchg
pop
jle
mov
stos
pop
roll
testl
out
roll
pop
adc
add
adc
jnp
push
mov
sbb
test
mov
out
fucom
or
cmpsl
iret
mov
scas
inc
rcl
adc
dec
jle
ds
mov
lret
pand
push
xor
add
pushf
sub
dec
push
in
nop
cld
mov
cmpsl
cs
sub
mov
insl
daa
das
mov
lret
test
ljmp
sub
sub
xchg
movsb
int
xchg
cwtl
daa
addb
inc
inc
lretw
lock
pop
ret
jmp
push
and
xchg
sbb
das
outsb
inc
sub
ljmp
pop
pop
loop
outsb
leave
lea
adc
sub
inc
stos
int3
das
mov
insl
xor
dec
sub
inc
mov
inc
push
fidivl
adc
dec
imul
mov
pop
pushf
fadds
movups
push
ljmp
sub
inc
mov
lret
and
mov
rol
icebp
dec
sbb
xchg
push
cld
inc
into
inc
aad
sahf
scas
icebp
xor
call
sub
dec
arpl
or
addr16
test
add
sub
sub
setle
push
sbb
orb
in
pop
test
pusha
pop
pop
inc
imul
sub
scas
mov
mov
sub
ss
dec
cltd
pop
push
mov
or
popa
movsb
mov
bound
jb
and
fcom
outsl
xchg
push
scas
out
aaa
xchg
or
sub
imul
cmpsl
iret
xor
or
shr
ret
sub
imul
and
sub
arpl
pinsrw
or
popf
lahf
pop
adc
dec
inc
or
or
inc
bound
xor
dec
adc
inc
sub
sub
lret
adc
lea
sti
xor
add
or
scas
out
mov
js
mov
sub
sub
daa
out
pop
inc
ljmp
sub
xor
sarb
lret
in
and
mov
or
lret
popf
insb
mov
jb
lret
lea
sub
lcall
jmp
rcrb
sub
or
pop
imul
lods
push
adc
xchg
jl
daa
lret
dec
xchg
scas
mov
mov
arpl
ret
xacquire
pop
insl
out
dec
daa
push
lahf
stos
out
pop
cltd
ljmp
dec
popa
out
inc
pop
scas
xor
dec
outsb
daa
pop
pop
xor
jae
imul
cmpsl
cmp
aad
out
lret
insb
jmp
or
pop
push
jmp
mov
jne
bound
dec
lea
inc
sysret
cmpsl
push
mov
dec
dec
adc
shr
cwtl
jge
stos
fmulp
push
lcall
add
xchg
rorl
shrb
sbb
gs
imul
or
or
popl
pop
pop
leave
mov
xorb
jg
iret
das
shll
dec
in
ret
or
xchg
cwtl
xor
out
push
mov
arpl
inc
popf
jmp
mov
data16
aad
add
out
xor
inc
outsb
icebp
jge
xor
in
test
out
adc
dec
hlt
adc
lea
test
sub
add
jbe
push
sbb
mov
sbb
sub
push
push
lahf
lea
movsb
and
dec
scas
mov
daa
outsb
or
dec
popa
leave
jmp
xchg
jns
or
xchg
mov
stos
xchg
cmp
lret
sbbl
int
loop
or
int3
out
push
dec
cmc
jl
dec
push
inc
fbstp
scas
in
shrb
dec
pop
pop
or
inc
fsub
push
lea
rorb
ljmp
outsl
in
testb
or
test
out
push
test
das
ds
fimuls
loop
mov
insl
cs
loopne
fmuls
lods
or
loope
push
dec
dec
pop
push
mov
mov
or
imul
imul
pop
stos
out
stos
mov
insb
or
pop
repz
jmp
sbb
xchg
insl
outsb
das
cld
out
sbb
stos
pop
inc
lds
bound
jg
mov
out
add
sub
lds
lea
push
or
pop
jge
cmovg
mov
int
fisubrs
jle
mov
scas
jge
stos
daa
mov
pop
sub
sub
testb
out
rclb
jo
data16
scas
gs
or
data16
xor
add
dec
dec
sub
sbb
or
sbb
pop
fcoms
outsb
cs
pop
mov
outsb
adc
sub
aaa
adcl
mov
xchg
loopne
in
mov
mov
popa
jno
mov
sbb
xchg
cmp
inc
sub
pop
mov
sbb
dec
mov
out
cmpsl
ljmp
push
arpl
pop
and
int3
mov
andl
in
and
in
jmp
lea
repnz
add
imul
pop
inc
ret
data16
in
loop
fistl
dec
xchg
pop
xor
fsubr
test
test
inc
sub
adc
dec
xchg
fwait
xchg
leave
divl
sub
xchg
fmull
xchg
add
mov
mov
inc
cs
mov
out
rcll
adc
popf
ljmp
andl
mull
rorb
or
scas
stos
lret
mov
adc
sub
dec
into
or
pcmpgtd
or
mov
and
lods
adc
xor
fiadds
pop
out
push
mov
mov
imul
push
daa
mov
or
push
into
out
mulb
mov
xchg
lea
mov
lcall
insl
out
inc
lock
repz
sbb
jg
sbb
dec
or
and
in
mov
jmp
out
pop
dec
imul
inc
ljmp
pop
xchg
sub
dec
lret
mov
add
and
add
xchg
jmp
and
cmpsl
outsl
daa
and
lds
daa
dec
and
bound
add
cmpsl
or
mov
clc
mov
or
mov
pop
out
dec
mov
jecxz
and
dec
addr16
dec
ret
or
cld
push
mov
outsb
imul
bound
or
fimull
dec
lea
jg
lods
lret
sub
mov
loop
out
ret
ljmp
sub
fbstp
add
fmuls
in
adc
daa
jmp
into
cmp
lret
repz
inc
push
stos
jbe
jns
xchg
out
sbb
mov
mov
popa
xor
mov
xchg
jle
sbb
jmp
lret
outsb
and
loope
or
pop
test
out
jmp
dec
and
dec
outsb
sub
xor
sub
mov
mov
test
jl
test
cmc
add
dec
push
dec
out
sbbl
cltd
sub
cwtl
repnz
adc
ret
xchg
dec
inc
stos
leave
xor
jecxz
sub
shll
lock
sbb
mov
xchg
push
dec
sub
or
nop
and
aas
test
stos
xchg
mov
sub
enter
xor
arpl
xchg
out
or
dec
imul
rcrb
ljmp
popa
push
out
xor
insl
inc
btc
lea
jae
sub
out
scas
in
pop
mov
dec
adc
mov
mov
int3
or
pop
dec
imul
ja
test
sub
pop
sub
lcall
cld
inc
pop
or
mov
shr
mov
lea
in
inc
insb
inc
enter
scas
out
jno
inc
stos
sub
jl
xlat
ljmp
out
scas
cltd
or
jge
mov
push
rcrb
fcmove
dec
movd
xchg
clc
subl
dec
das
dec
test
mov
movsb
sub
inc
mov
and
rcll
out
outsl
xchg
xlat
ljmp
xor
pop
sub
jmp
inc
jmp
pop
xchg
or
in
and
or
divl
shr
dec
jno
out
mov
imul
or
nop
fcomps
scas
sub
jg
push
in
dec
paddw
lahf
out
sbb
in
lret
sub
pop
mov
mov
sub
icebp
fcmove
popf
imul
scas
jmp
adc
pop
sub
fistl
adc
cs
mov
mov
scas
inc
stc
dec
aaa
jmp
dec
fiadds
out
cmp
sbb
dec
test
ljmp
in
mov
nop
popl
mov
aaa
mov
mov
in
dec
out
jmp
sub
xor
dec
daa
xor
xchg
scas
and
inc
notb
out
and
pop
or
cmp
inc
fistpll
or
mov
out
cmpsl
movl
popa
scas
insl
mov
xchg
sbb
mov
dec
or
sub
adc
or
ret
or
add
subb
mov
out
mov
adc
adc
adc
sbb
or
sub
xchg
scas
jns
lahf
rorb
add
jmp
jae
lods
or
dec
test
fiaddl
faddl
stos
loop
out
hlt
ror
fadds
out
std
aas
sub
xor
xor
scas
test
pop
lret
mov
aaa
std
pushf
jmp
mov
sarb
filds
sbb
mov
out
push
mov
jmp
inc
jg
shrl
adc
and
dec
inc
fbld
out
jno
pop
lods
pop
add
or
pop
mov
mov
scas
inc
ljmp
subl
push
xchg
jnp
ret
jbe
cmp
scas
jmp
push
mov
test
pop
int3
outsb
out
addr16
push
pop
stos
imul
push
sub
dec
push
sub
stos
or
add
test
andnps
add
add
mov
xchg
lret
add
addr16
in
rol
dec
mov
repz
jmp
push
sbb
sub
push
cmp
xor
sub
cmpsb
or
mov
pushf
mov
fbld
test
faddl
outsl
out
push
into
fisubrs
out
add
cltd
out
or
mov
in
into
sub
stos
iret
or
push
dec
lahf
mov
or
adc
enter
and
sub
dec
push
arpl
ret
cs
loop
pop
sti
sbbl
shlb
negl
pop
push
cmpl
xor
js
jecxz
das
sub
pop
sub
es
dec
mov
lds
out
inc
pop
js
daa
sub
out
arpl
arpl
jo
pop
and
push
pop
and
mov
in
sub
repnz
push
stos
lods
outsb
sbb
cmpsl
outsl
or
dec
adc
loope
mov
bound
sbb
pop
leave
cmpl
and
imul
sahf
xor
xchg
fiadds
les
ret
add
pop
mov
sub
lahf
or
or
pop
sub
inc
lret
stos
sub
test
ret
movl
lret
or
daa
dec
and
mov
imul
daa
fisttpll
daa
mov
sbb
lods
nop
das
aas
fisubrs
test
jge
xor
adc
out
out
or
pusha
cs
inc
adc
dec
inc
xchg
xor
iret
sbb
adc
cwtl
push
xchg
daa
fchs
or
sub
pop
push
pushf
scas
or
icebp
cmp
jle
add
or
bound
inc
sub
dec
push
test
lea
cmpsl
dec
imul
pop
icebp
pop
jno
jmp
lods
adc
test
mov
adc
in
lods
lods
xor
push
lret
push
sub
out
or
inc
mov
adc
dec
in
or
daa
stos
cs
adc
mov
mov
out
or
cli
mov
inc
push
jo
sahf
addr16
inc
test
sub
lahf
in
mov
and
das
pop
scas
sub
or
pop
mov
cmpsl
mov
add
xchg
enter
xor
in
adc
into
cld
adc
jmp
cmpsl
or
icebp
lods
dec
je
or
mov
adc
dec
arpl
pop
sub
and
dec
jb
mov
or
sub
mov
or
xchg
lret
sub
outsb
cli
lods
ret
pop
push
push
sbb
loop
sub
pop
dec
cli
fucomi
loope
sub
sub
insb
inc
testb
cmp
mov
pusha
mov
addl
in
pop
mov
daa
outsb
fdivrs
mov
xchg
and
loopne
xor
pop
mov
push
lcall
xor
sbb
dec
push
pusha
arpl
xchg
sbb
push
out
jmp
xor
subb
dec
xor
mov
pop
sub
jns
adc
cmp
int3
movsl
push
bswap
in
ud2
cli
enter
in
lret
outsl
pop
shrl
jns
rolb
mov
dec
cmp
cmp
xor
stos
bound
dec
push
adcl
stc
push
icebp
inc
jmp
mov
insb
ljmp
push
mov
cltd
rorl
or
dec
dec
arpl
pop
test
shrb
mov
dec
and
inc
xchg
inc
sub
or
adc
or
mov
dec
bound
scas
insl
or
xor
pop
imul
xchg
enter
loop
stos
adc
leave
lods
ljmp
cmp
mov
xor
leave
mov
jecxz
inc
insl
in
scas
test
jmp
or
out
or
outsb
int
inc
jo
mov
in
sub
add
push
dec
or
out
pop
pop
cmp
insl
outsl
addr16
sub
lret
inc
jg
pop
mov
add
and
andl
ret
inc
mov
mov
data16
push
inc
imul
addr16
push
paddd
mov
pop
iret
aad
insl
mov
mov
sub
add
nop
mov
or
push
adc
jl
adc
inc
or
stc
xchg
lea
jmp
in
rorl
lods
mov
sbb
mov
pop
push
out
adc
das
jge
inc
arpl
ret
jb
nop
bound
lret
adc
fisttps
leave
sti
ret
addr16
ret
gs
mov
aas
das
loop
jne
or
cmc
cmpsl
cs
jmp
addr16
outsl
int3
int3
fld
inc
add
mov
repz
lret
loope
addr16
inc
lret
popf
jmp
pop
push
fdivrs
dec
leave
scas
sub
jge
pushf
out
push
daa
and
cmpsl
lods
dec
pop
add
adc
push
jmp
stos
arpl
dec
sbb
push
or
lret
jle
xchg
xor
xchg
scas
sbb
or
das
test
and
fcomip
push
into
test
in
xchg
call
or
xor
outsb
negl
pop
shl
ljmp
jmp
outsl
cmpsl
je
jp
rcrl
jmp
bswap
lahf
push
lret
dec
jnp
aas
outsb
fists
push
sub
inc
lret
out
inc
stos
cmp
fldt
psrld
dec
pop
scas
push
dec
fsubr
pop
dec
xor
out
addb
pop
and
addb
jno
in
into
sbb
lret
pop
sbb
push
sarb
dec
sbb
ret
cmpsl
scas
imul
adc
in
dec
movsl
inc
or
dec
xchg
icebp
xor
prefetch
out
test
sub
js
aad
or
dec
data16
cvttps2pi
adc
test
dec
pop
jle
dec
sub
stc
outsb
dec
xchg
call
or
ret
test
xchg
dec
out
das
or
mov
pop
popa
jmp
mov
dec
adc
inc
loop
dec
sub
push
popw
or
mov
dec
mov
xor
jp
mov
or
sbb
out
add
test
or
dec
shl
out
outsl
add
inc
mov
test
cmpsl
imul
and
cmp
lret
lea
sub
cltd
xchg
mov
pminsw
dec
movsl
sub
xchg
or
dec
dec
stos
lcall
push
or
mov
shrl
out
fmull
cmp
jge
loopne
outsb
jnp
mov
in
lds
and
out
or
sub
sub
ret
mov
pop
cli
shll
dec
xor
test
scas
imul
arpl
loopne
add
arpl
sub
push
mov
mov
sub
leave
pop
sbb
in
sbb
inc
push
mov
sub
lods
sbb
or
test
cmpsl
sbb
mov
out
inc
inc
loop
mov
into
jno
leave
stc
inc
dec
mov
repz
or
icebp
out
xchg
outsl
adc
or
fmulp
lret
inc
arpl
cmpsl
icebp
push
sub
pop
mov
lret
xchg
mov
xchg
sub
imul
dec
pop
jmp
pop
lea
sub
out
mov
bound
in
inc
test
push
xchg
mov
pusha
mov
sub
sub
movsl
cmpsl
sub
icebp
daa
inc
xchg
mov
jbe
popf
jmp
adc
into
cld
cmp
mov
lahf
in
xor
test
mov
movsl
inc
or
adc
adc
pop
daa
adc
pop
dec
sub
ljmp
push
or
cmpsl
sbb
xor
cmpsl
inc
jno
stos
sarb
outsb
adc
or
inc
add
mov
lahf
nop
shrl
mov
dec
pop
adc
pop
xor
sub
das
clc
arpl
dec
jmp
rcrb
lret
xchg
sub
dec
xchg
ljmp
leave
out
cld
andl
lret
or
mov
out
daa
out
sub
stos
into
cmp
sub
jb
sti
xor
and
faddl
push
adc
subb
sbb
push
mov
shl
jle
xchg
mov
sahf
inc
das
pop
aad
test
xchg
subl
iret
push
test
fidivrl
dec
lock
or
mov
imul
cli
out
int
or
inc
mov
sbb
bswap
bound
imul
dec
mov
or
lea
dec
shlb
outsl
inc
dec
sub
mov
pop
mov
imul
addr16
sbb
mov
dec
cmp
adc
out
push
or
mov
fldenv
mov
cmp
call
cs
int3
loope
push
mov
push
cmpsb
or
stos
lret
xchg
push
scas
in
mov
adc
lock
push
mov
inc
pop
jne
divb
jg
xchg
repnz
in
mov
scas
pop
in
shlb
les
mov
ret
mov
inc
movsl
sbb
out
outsb
shrb
push
in
jmp
cmpl
sub
imull
or
xchg
sub
pop
adc
jns
divl
inc
in
push
jp
lea
adc
xor
out
push
aas
leave
dec
scas
jmp
jno
or
push
cs
pop
leave
dec
pop
push
ljmp
leave
test
mov
test
popf
or
bound
jno
test
sub
sub
lret
out
ljmp
das
and
mov
pusha
sti
cmp
or
aam
mov
mov
data16
jmp
lds
dec
xchg
enter
loope
movl
in
jg
into
push
sub
aam
out
jmp
in
xchg
adc
and
out
cmpsl
push
cmpsl
outsb
cwtl
sub
push
sub
sub
jb
dec
in
mov
rcrb
ljmp
cmp
and
pop
nop
loop
or
sub
mov
inc
mov
push
jmp
bound
roll
scas
in
inc
outsl
leave
loop
stos
lret
daa
or
mov
and
mov
pop
insb
xor
push
adc
and
or
xchg
mov
adc
sub
daa
push
or
xor
dec
or
dec
mov
mov
pop
jp
jmp
sub
fisubrs
sbb
scas
mov
dec
ret
in
std
jmp
or
in
xor
ds
jecxz
mov
sub
xchg
std
pop
in
daa
sub
inc
push
sbb
outsl
test
enter
dec
leave
jmp
lea
push
sub
out
pop
mov
loope
ljmp
pop
fiaddl
push
sub
out
cmp
adc
loop
lods
das
xor
or
dec
dec
jmp
lcall
loop
push
daa
outsb
std
lret
lock
out
sbb
dec
ss
fildll
test
cmp
test
outsb
mov
mov
leave
add
iret
or
jmp
inc
lret
push
leave
dec
outsl
sbb
push
pop
mov
pushf
out
lds
sub
scas
xchg
mov
enter
out
mov
pop
cmp
dec
push
stos
out
fbstp
out
sub
mov
cmp
lea
mov
scas
sbb
dec
sub
jg
xor
mov
andl
rolb
cmpsl
inc
aas
adc
das
dec
or
loop
mov
scas
jmp
cmp
iret
dec
mov
and
mov
cmp
cmpsl
push
push
mov
mov
inc
jnp
icebp
in
bound
dec
pushw
iret
addl
mov
jne
outsl
sub
daa
movsl
daa
test
loopne
mov
in
sbbb
lock
jp
push
xchg
out
cmp
or
or
outsl
lret
xchg
call
sysret
testb
sub
push
jne
mov
into
imul
jb
or
in
lods
in
rorb
jmp
add
jae
mov
or
dec
clc
addr16
pop
test
pusha
out
shrl
xchg
mov
enter
out
dec
stc
mov
jmp
insl
fs
mov
into
mov
out
dec
add
xchg
stos
imul
xchg
call
shlb
lret
dec
out
push
out
jmp
push
xchg
fildll
arpl
or
in
lret
inc
push
mov
xchg
pop
imul
adc
shl
loope
out
icebp
lret
push
jl
jns
push
mov
or
ljmp
dec
or
adc
mov
or
sbb
adc
inc
aaa
push
mov
or
jmp
out
ret
mulb
stos
cmp
cs
sub
lar
jp
psrad
lods
stos
out
icebp
jecxz
das
bound
or
jge
sub
ss
push
out
out
daa
dec
stos
sahf
fsubrp
sbb
mov
test
out
lret
push
outsl
cltd
stc
mov
ret
mov
xchg
addb
cs
lret
subl
fdivl
imul
pop
xchg
or
push
outsb
adc
mov
out
add
mov
sbb
psraw
inc
outsb
dec
cmp
lcall
in
push
xchg
iret
mov
aaa
or
sbb
pop
pop
push
dec
xchg
sbb
dec
jmp
stc
dec
sub
sbb
sbb
lret
in
iret
or
mov
dec
sbb
or
mov
push
mov
mov
adc
mov
daa
inc
sub
pop
or
leave
xcrypt-ofb
cmpsl
test
das
add
stos
dec
sub
stos
sub
sahf
fs
push
outsl
or
leave
dec
push
xor
adc
add
jmp
outsl
jno
test
cld
insl
inc
ret
addr16
xchg
push
and
outsb
mov
leave
cli
adcl
sbb
and
mov
out
adc
adc
sub
stos
sub
repz
or
add
movsl
cmpsb
dec
das
adc
in
orb
sub
adc
in
cmpsb
dec
dec
sbb
xor
out
stos
dec
setns
inc
dec
adc
dec
dec
mov
xchg
sub
mov
mov
inc
jb
push
inc
shr
addr16
into
imul
in
xor
scas
imul
xchg
and
enter
out
mov
xchg
in
jns
scas
loopne
adc
repnz
data16
scas
mov
xor
bound
dec
test
add
out
scas
dec
adc
mov
jg
cmp
jmp
jp
int
inc
jno
stos
sub
comiss
ret
push
jmp
sub
dec
sub
aaa
push
and
adc
cltd
rolb
or
das
sbb
dec
dec
mov
jg
outsl
or
or
or
wrmsr
sub
mov
out
stos
jg
enter
push
iret
loop
push
sub
fisttpll
sbb
cmp
sbb
scas
into
pop
cmp
push
into
dec
repnz
fucom
mov
stos
xor
lret
ret
and
mov
fdivrs
pop
subl
rorb
or
sbbl
cs
fldcw
lret
test
fldt
je
dec
outsb
into
out
test
or
dec
adc
xor
xchg
jb
aaa
xchg
fisttpl
sub
mov
mov
in
leave
inc
negb
sub
outsl
ret
stos
das
ret
iret
stc
stc
cmp
imul
mov
and
adc
jmp
dec
or
cs
ljmp
mov
dec
stos
mov
adc
pop
sbb
arpl
imul
fisttps
or
int
fisubrs
pop
mov
outsl
xor
cmp
stos
outsb
addr16
sub
pusha
mov
lock
or
pushf
mov
loope
lret
lea
push
int3
icebp
add
ret
mov
add
jmp
or
ret
sub
dec
or
push
or
push
lret
outsl
or
push
jb
sub
add
pop
pop
mov
jge
pop
pop
daa
pop
lcall
jp
mov
ret
sub
mov
cmp
icebp
insl
sub
xor
aam
push
adc
lcall
pop
lahf
pop
call
test
test
cmpsl
into
pop
cli
xor
xchg
push
loope
out
ja
imul
sub
push
lret
cmp
dec
lret
inc
dec
dec
cmp
add
imul
mov
adc
scas
sub
aam
aad
or
imul
cmp
out
das
or
dec
mov
jp
adc
iret
out
sbb
add
imul
mov
push
js
ds
jmp
and
testb
mov
pop
sbb
pop
ljmp
cwtl
out
outsb
ror
movzwl
xchg
dec
mov
or
scas
push
dec
in
or
packssdw
xchg
icebp
mov
in
data16
sbb
xor
dec
cltd
mov
mov
scas
test
jb
lret
sub
or
in
pop
xor
sub
mov
das
orb
shr
push
data16
add
xor
push
outsb
leave
out
xor
stos
dec
fwait
xor
mov
scas
sub
mov
es
popa
pop
out
iret
mov
scas
add
outsb
roll
icebp
fmulp
das
cltd
jb
jbe
out
dec
sub
or
xchg
outsb
push
mov
sub
or
test
xchg
insl
mov
dec
in
nop
out
outsb
loopne
sbbb
in
add
jecxz
cltd
xchg
sbb
jo
pop
dec
lret
xchg
jl
lretw
sbb
call
mov
int
dec
stos
das
inc
sahf
push
das
or
adc
sub
cltd
outsb
call
out
daa
jbe
xchg
sub
jmp
adc
lret
out
imul
mov
pusha
add
mov
dec
addr16
add
scas
daa
dec
xor
or
mov
out
xchg
mov
ljmp
daa
dec
stos
or
mov
shl
nop
dec
and
dec
or
leave
mov
dec
in
mov
test
sbb
inc
out
sub
mov
cmp
push
sub
mov
sub
and
iret
scas
bound
lock
sbb
and
insl
adc
mov
addr16
lods
fmul
mov
xor
mov
repnz
xor
ret
add
test
add
push
out
in
mov
lahf
fiadds
mov
orb
push
outsb
scas
add
and
adc
pop
mov
mov
lea
push
mov
mov
insl
jp
pop
dec
fdivrl
push
push
and
mov
sub
inc
leave
sub
loope
mov
and
test
subl
mov
leave
pop
pop
push
jg
sbb
dec
mov
or
xor
jmp
ret
rolb
sub
inc
dec
or
ljmp
mov
adcl
mov
or
testl
push
ret
jmpw
leave
inc
insb
out
sub
cli
out
adc
sub
pop
sub
lods
pop
pop
out
outsb
into
cmp
xor
dec
insl
adc
test
repnz
out
clc
xchg
das
leave
mov
push
fmuls
cmp
inc
ljmp
push
rolb
imul
jno
outsb
loopne
mov
fwait
lds
test
dec
std
sbb
sub
mov
fistpl
mov
mov
dec
push
arpl
outsb
test
daa
imul
jecxz
outsl
in
shr
xchg
and
scas
cld
sbb
mov
shl
or
dec
sub
pop
sub
sbb
arpl
sbb
and
sub
jmp
call
mov
stc
sbb
pop
cs
stos
cmpb
shlb
pop
out
or
hlt
jns
pop
cmpsl
sbb
imul
mov
test
mov
test
insl
or
test
jp
mov
or
negl
and
cmp
dec
sub
ds
sub
xchg
stos
sub
push
mov
push
sub
mov
lret
dec
adc
pop
sub
fistps
push
scas
shlb
stc
stos
sub
xlat
ds
sub
sub
je
inc
pop
lea
mov
ficompl
lock
femms
add
or
push
jns
ss
das
xor
push
into
test
insl
repz
lret
dec
fcmovnb
push
ss
xor
adc
ret
ja
add
test
arpl
cmpsb
push
or
popa
stos
outsb
cs
pop
or
cmp
cmp
sub
and
nop
adc
dec
or
mov
sub
in
add
sub
mov
into
into
xor
xlat
and
sub
push
int
mov
pop
movsl
adc
hlt
sub
jle
in
push
iret
outsb
aas
aas
mov
inc
daa
lahf
mov
push
adc
pop
hlt
mov
dec
xchg
inc
shll
dec
cmp
sub
fnstsw
push
or
and
adc
aam
sub
push
dec
or
out
sub
lret
adc
dec
push
adc
test
adc
mov
imul
imul
iret
jmp
fisttpl
adc
in
or
sub
pop
loopne
insl
loop
dec
inc
aaa
in
fwait
addr16
daa
or
out
dec
bound
stos
add
addr16
scas
es
pop
mov
mov
dec
mov
jmp
mov
sbb
testb
sbb
sbb
dec
push
mov
push
push
leave
mov
popa
cmpsl
scas
out
adc
add
outsb
xchg
or
sub
scas
sahf
iret
sub
je
ss
out
fmulp
lds
in
dec
fimull
or
lret
imul
mov
out
addl
icebp
insl
mov
adc
mov
stos
jbe
push
and
sbb
addr16
inc
sub
fildll
lcall
outsl
pop
subl
clc
loop
push
push
pop
add
arpl
rsm
ret
outsb
out
imul
mov
or
das
pop
lock
fldl
movsl
dec
sarb
stos
adc
cs
jmp
mov
cmpsb
out
movsl
loopne
inc
out
in
xchg
scas
int
in
inc
push
cmp
and
sub
lret
cld
adc
or
loop
dec
and
dec
stos
addr16
or
sbb
imul
iret
loope
data16
sti
push
cmp
xchg
ret
bound
jmp
cs
out
frstor
test
sbb
daa
lea
repz
std
mov
or
out
into
dec
rorb
out
jmp
or
outsb
stos
lret
sub
push
and
or
roll
push
daa
xor
jecxz
push
pop
stc
jecxz
mov
in
sbb
xor
jmp
pop
add
sub
mov
mov
xchg
les
pop
stos
push
xchg
test
dec
and
dec
in
dec
bound
out
aas
mov
js
lds
xchg
ljmp
sub
pop
in
out
or
out
lea
pop
les
xor
inc
sub
ret
addr16
test
pop
dec
inc
ljmp
lods
icebp
adc
jmp
aaa
jmp
fnclex
dec
push
out
iret
pop
movsb
lret
in
jp
das
and
lret
xor
imul
lret
push
sub
xchg
dec
divl
mov
adc
stos
or
xchg
cmp
cmpsl
lock
xor
pushf
push
lods
mov
shll
dec
lea
push
or
leave
add
sub
daa
pop
inc
sub
test
jnp
inc
mov
xor
in
iret
sub
dec
mov
stc
cwtl
push
lods
sub
test
pop
outsl
push
or
lret
sbb
sub
and
sub
sub
xchg
or
cmpsl
scas
das
out
out
or
imul
mov
movsb
scas
or
push
mov
loopne
xchg
inc
cmpsb
cmp
out
and
hlt
pusha
adcl
insl
test
pop
push
stos
iret
scas
or
mov
mov
add
lea
je
pushf
xor
xchg
inc
outsl
and
scas
cmpsl
sub
adc
int
in
dec
xor
dec
xchg
adc
mov
xchg
jecxz
into
movsb
xchg
orb
inc
or
js
imul
inc
lret
inc
push
dec
mov
xchg
out
scas
int3
adc
pop
xchg
push
push
test
adc
jle
xor
addr16
pop
adc
xor
sub
lret
notb
push
mov
mov
ret
dec
stos
fisubl
sub
test
std
push
dec
add
xchg
adc
pop
add
in
repz
leave
dec
xchg
push
xchg
mov
push
add
pop
sbb
outsl
imul
cmp
leave
decl
pop
fmuls
jns
push
das
sub
mov
fwait
and
imul
sbb
into
nop
loope
inc
outsb
ss
cmpsb
arpl
int
inc
sbb
aaa
push
into
xchg
and
stos
dec
mov
cs
or
dec
sub
or
mov
mov
push
dec
adc
sub
inc
out
push
dec
stos
dec
dec
sub
out
or
pop
and
mov
inc
adc
decl
xlat
outsl
icebp
out
push
or
and
outsb
or
adc
movsb
insl
mov
pop
or
pminsw
insl
push
mov
pop
dec
mov
push
jmp
dec
sbb
push
or
aas
cmpsb
dec
and
xor
sub
mov
repz
jne
lret
ret
in
scas
sub
pop
lods
or
imul
fisttpl
or
inc
jp
sub
pop
xor
or
std
jne
mov
jl
and
clc
cs
sub
into
out
in
stc
push
dec
lods
sub
cmc
arpl
lret
pop
scas
or
or
std
jecxz
xchg
push
cmp
insl
jl
lret
or
dec
movaps
iret
sbb
xor
push
and
fsubp
jmp
loope
in
sub
or
dec
out
nop
js
pusha
faddp
loope
in
inc
cmpsl
out
inc
mov
into
sbb
mov
mov
sub
pop
sbb
mov
addr16
loop
leave
add
dec
ljmp
cwtl
dec
int3
pop
shrb
and
cs
rclb
inc
pop
sub
out
dec
in
mov
or
outsl
jnp
mov
bound
popf
shll
sub
inc
jmp
add
fstl
sub
adc
lret
lock
lret
or
sbb
out
and
adc
push
jle
in
fsubrl
insb
push
pop
dec
xor
or
inc
mov
out
out
cli
stos
data16
loop
fisttpll
push
outsl
adc
loope
pop
iret
enter
mov
push
xchg
adc
sub
insl
dec
dec
cmp
in
lret
movsb
das
lods
outsb
sub
cs
lcall
fmull
bound
sarl
or
repnz
dec
sub
or
mov
sub
mov
iret
add
dec
or
test
push
adc
sub
dec
jne
sti
push
inc
or
mov
or
fwait
pop
lock
lods
push
or
push
or
ljmp
jg
sbb
inc
xor
outsb
dec
sub
ds
inc
push
cli
inc
mov
daa
sub
xchg
repnz
mov
add
sub
pop
sbb
mov
lret
cmpsl
xchg
in
test
or
lret
xchg
xor
out
nop
cmpsb
sbb
jnp
loop
dec
cltd
outsl
cs
jo
and
jns
dec
pusha
scas
scas
adcl
dec
movsl
arpl
movsb
insl
aad
movsb
dec
popf
pop
add
mov
push
push
out
inc
lds
dec
and
push
push
in
cmpsl
insb
iret
pop
pop
push
jmp
jge
out
sbb
lock
mov
ljmp
mov
iret
dec
push
dec
mov
or
sub
mov
test
daa
mov
xchg
and
adc
sbb
sub
or
aam
mov
dec
push
sub
or
cmp
or
push
mov
inc
or
outsb
dec
adc
test
jmp
scas
lods
filds
adc
in
or
addl
aad
out
adc
call
mov
sub
test
rorl
cmpsl
pop
fs
dec
fnstenv
lods
call
dec
jecxz
sub
sub
jb
cmp
jno
out
mov
ljmp
mov
jns
lret
sbb
pop
lods
inc
xchg
scas
sub
loop
out
mov
sub
mov
mov
bound
addr16
decb
inc
mov
jno
push
pop
push
mov
sahf
clc
out
test
dec
inc
inc
adc
xor
inc
inc
daa
out
or
ljmp
dec
movl
add
cld
lret
or
out
adc
mov
aas
adc
stc
ljmp
btc
push
nop
hlt
inc
mov
dec
mov
or
das
aas
lea
inc
out
or
dec
xor
std
xor
push
loope
pop
out
xchg
outsb
adc
jle
fdivl
and
scas
jb
loopne
adcl
xor
ss
adc
cmp
or
pop
gs
sbb
mov
lret
lret
out
ljmp
add
mov
fsubs
repz
mov
sub
cld
push
or
outsb
fcomps
xchg
cmpsl
push
xchg
movsl
out
jns
mov
cwtl
xor
leave
dec
fists
mov
push
daa
nop
or
pop
add
mov
bound
das
dec
into
sub
lret
xchg
and
movsl
mov
push
mov
or
shll
pop
add
dec
or
scas
xchg
or
bnd
pusha
loop
xor
scas
push
mov
inc
imul
sbb
iret
and
pop
mov
leave
daa
sub
out
sbb
rcll
shr
clc
fidivrl
xor
dec
movsl
addr16
addb
sub
or
stos
sbb
int3
imul
ss
sub
outsb
pushf
imul
fwait
jne
pushf
sbb
imul
or
mov
out
scas
dec
repnz
xor
stc
sub
bswap
sub
or
push
out
fdivrl
jmp
cmpsb
cmp
shrl
dec
dec
adc
sub
in
or
dec
mov
pop
inc
into
imul
dec
cmp
insl
xchg
push
pusha
sub
inc
in
sub
mov
dec
sbb
and
lock
ret
xor
ficoml
or
test
test
out
push
ret
outsb
orl
arpl
pop
das
pop
push
and
xor
mov
dec
add
leave
lods
push
test
sub
outsb
jmp
nop
dec
ret
sub
subl
test
daa
mov
fstps
push
das
lea
xchg
int3
sbb
lret
stos
scas
cmp
lret
cs
gs
xor
ret
or
ja
test
or
xchg
test
in
cltd
movsl
or
movsb
push
jmp
fldenv
sub
jae
addr16
lret
jmp
in
andb
test
mov
inc
lcall
rcr
sub
xor
stos
icebp
push
sub
dec
outsl
dec
push
pusha
inc
hlt
add
ret
shlb
mov
and
icebp
sub
outsb
jge
cld
xchg
dec
xor
scas
mov
nop
fimull
jns
imul
xchg
dec
arpl
adc
add
lretw
daa
or
or
jno
imul
jb
sbbb
dec
mov
pushf
std
pop
fmuls
sub
mov
sub
lahf
fldenv
pop
and
lahf
xchg
xor
dec
inc
stos
adc
push
imull
push
lods
xchg
sub
sbb
dec
or
stos
outsl
scas
pop
sub
addb
dec
int3
outsb
cwtl
inc
inc
lret
outsl
or
repnz
les
pop
cmpsl
push
inc
ret
sub
imul
int
adc
dec
imul
das
pop
push
out
arpl
mov
out
fadd
adc
loop
out
dec
sbb
or
lret
daa
leave
jb
add
ljmp
in
je
push
push
mov
mov
mov
clc
pop
cmc
push
pop
inc
xchg
lret
xchg
call
mov
sti
or
push
loop
ret
pop
jecxz
clc
popa
loope
dec
or
out
sti
pop
or
jae
dec
lret
push
pop
mov
loopne
outsb
scas
adc
into
out
mov
les
push
mov
or
or
mov
into
inc
sub
addr16
pusha
lods
push
jmp
adc
xchg
mov
mov
dec
repnz
outsl
add
bound
mov
push
stos
mov
and
sbb
js
fucomip
mov
adc
les
mov
mov
stos
sti
inc
jno
inc
pop
sub
lret
pop
or
mov
les
inc
adc
pop
push
fimuls
call
outsb
cmpsl
iret
or
pop
or
rcl
int
hlt
sbb
in
pop
lods
fisubrs
and
leave
dec
into
pop
daa
push
aaa
das
mov
rcll
lds
addr16
jb
mov
push
dec
cmp
add
or
sbb
sbb
sub
inc
test
xchg
stos
setns
cmp
add
mov
dec
sub
das
fnstcw
jnp
xchg
icebp
scas
sub
push
add
push
clc
mov
mov
mov
shrl
or
push
das
ljmp
sub
addr16
pop
pop
nop
dec
dec
pusha
rclb
popf
scas
sub
xchg
shrd
xchg
inc
dec
orl
test
rolb
stos
insl
daa
iret
in
xor
dec
adc
dec
das
dec
or
pop
push
jmp
sbb
pop
out
cmpb
stos
or
lahf
lret
lock
loope
xor
mov
cltd
mov
xchg
xor
or
lret
popf
dec
xor
inc
mov
push
adc
mov
sbb
aam
sbb
leave
inc
sub
or
enterw
or
adc
loopne
cltd
shl
cmpsl
cmp
mov
fistpll
aaa
dec
inc
mov
iret
out
mulps
or
dec
inc
scas
xchg
sub
sub
sub
arpl
punpckhbw
cmc
test
bound
inc
xor
add
loopne
mov
into
lock
adc
sbb
jns
adc
jmp
push
mov
pop
imul
cwtl
xchg
int3
stc
dec
cmp
and
rclb
cld
outsl
mov
xchg
cmpsb
outsl
mov
out
jmp
popw
sbb
mov
stc
adc
sub
ret
sub
push
dec
or
lock
out
sub
and
inc
cld
mov
nop
pop
ljmp
push
inc
pop
lods
dec
lea
iret
dec
leave
cmpsb
test
out
orl
jge
mov
notb
sub
pop
inc
adc
hlt
sbb
scas
mov
sub
out
or
adc
mov
dec
lea
data16
or
leave
in
lret
or
icebp
sub
mov
lret
dec
sub
add
jmp
stos
dec
jbe
rol
add
testl
jmp
in
inc
xor
ret
jecxz
mov
outsl
mov
push
xor
push
sub
add
lret
jmp
scas
cmpsb
cmpsl
push
mov
mov
cmp
add
fldt
dec
cmpb
or
lret
sub
scas
jmp
cwtl
cli
push
adc
mov
adc
sbb
scas
dec
out
adc
adc
xor
daa
lret
pushf
sub
out
pop
dec
stos
stos
inc
or
cmpsl
mov
add
cmpl
dec
adc
dec
sub
mov
pop
call
das
dec
push
inc
xor
mov
or
addr16
and
jl
push
xchg
fistps
sbb
or
mov
dec
xor
unpcklps
xchg
shlb
out
pop
xchg
into
push
cmp
dec
fdivrl
dec
iret
or
lods
mov
mov
dec
dec
scas
ud2
filds
xchg
mov
sbb
xor
cs
mov
sub
inc
jae
jbe
xchg
pop
cs
jno
addr16
mov
lods
dec
sbb
or
sub
and
adc
sub
mov
add
imul
mov
inc
mov
mov
cli
lret
xchg
pop
test
mov
jmp
sub
xlat
test
dec
xor
dec
insb
xchg
std
fisttpl
filds
jmp
es
daa
cmpsl
jno
dec
fists
addr16
jg
out
sub
rorb
adc
sub
ljmp
insb
mov
ret
enter
dec
jle
nop
cmpsl
test
lret
sub
out
test
dec
add
or
fld1
inc
pusha
fisttpll
daa
ret
sub
inc
sub
les
lock
or
pop
xlat
pop
jb
mov
sub
pop
loope
pop
test
popa
or
sub
mov
mov
sub
pop
push
jb
inc
cmp
arpl
in
inc
ja
xchg
iret
lea
cltd
push
inc
sub
xor
pop
addr16
in
mov
shrb
sub
fldt
add
or
and
dec
or
mov
ret
stos
loop
inc
aad
dec
xchg
hlt
sbb
imul
ljmp
incb
lods
add
xchg
jmp
sub
dec
cmpsl
dec
scas
outsl
xor
adc
test
sub
xor
inc
dec
sahf
mov
and
cs
push
jp
mov
lahf
sub
mov
mov
sbb
cmp
cs
push
jg
push
call
mov
inc
das
pop
dec
add
or
out
push
imul
inc
ljmp
in
mov
int3
leave
push
cmp
or
test
mov
out
in
psllq
mulb
cwtl
xchg
jno
inc
cmpsl
pop
dec
sbb
lods
sub
add
push
test
repz
fimuls
xchg
rorl
sub
or
imul
pop
stos
and
dec
mov
push
sbbb
adc
int3
or
adc
dec
add
or
sub
sub
bound
and
push
arpl
in
or
stos
test
call
movsb
mov
aam
xchg
bound
rclb
dec
dec
ret
iret
ror
push
jmp
stos
outsb
xchg
das
das
push
add
out
daa
lret
and
sbb
int3
jmp
loope
xchg
mov
xchg
xchg
push
popa
sbb
lret
cmp
adc
dec
repnz
xor
mulps
or
out
outsb
pop
mov
or
ret
stos
into
mov
mov
icebp
xchg
scas
jl
xor
jle
lods
arpl
popl
sahf
sub
int
stos
call
dec
mov
pop
insl
lock
or
fldenv
out
or
xor
dec
sub
das
cmc
sub
scas
into
sub
inc
dec
outsl
jno
dec
sti
sub
cs
lock
jmp
imul
aad
icebp
fsubr
and
pop
sarl
sub
in
leave
outsb
lret
dec
pusha
or
sub
call
insl
push
push
add
mov
iret
mov
sub
aaa
lret
imul
push
test
dec
mov
jbe
sbb
stos
or
mov
sbb
push
lods
out
imul
ret
loopne
adc
pop
loope
outsb
ret
cmp
das
sub
push
dec
loop
into
repnz
ljmp
dec
dec
or
xchg
int3
sub
dec
push
stos
cmp
xchg
loope
mov
daa
adc
xor
push
mov
loop
dec
data16
out
addr16
outsb
push
aam
or
out
and
or
daa
push
mov
imul
leave
addr16
lcall
int
dec
mov
cmp
repnz
dec
jmp
fsubl
rcrb
scas
pop
movups
dec
stos
push
lret
jmp
ja
dec
cwtl
dec
shl
iret
dec
outsb
out
imul
shll
xchg
lret
add
cs
mov
lods
dec
xor
mov
cltd
in
mov
sbb
sahf
lret
int
pop
pop
cmpsl
mov
mov
jnp
scas
dec
sub
sar
fimuls
inc
ret
pop
pusha
in
push
lcall
daa
into
lea
ljmp
das
enter
push
insl
fimull
out
or
or
arpl
fs
fdivrs
push
pop
lret
adc
xor
sbb
iret
js
mov
iret
out
lret
test
push
jle
xchg
testl
xchg
sbb
sub
iret
adc
aad
cmp
push
sub
sub
scas
or
popa
arpl
sub
mov
jecxz
leave
dec
loop
lret
addr16
stos
dec
push
adc
scas
dec
dec
sub
xchg
and
mov
jbe
pop
icebp
or
pop
sub
or
scas
loop
push
cmpsb
dec
scas
rcr
dec
insl
xor
mov
dec
adc
adc
adc
imul
pop
leave
imul
ret
sub
push
imul
les
insl
in
push
inc
sbb
pop
mov
sub
push
movsb
mov
iret
testl
lret
addb
sub
pop
adc
and
sbbb
adc
scas
sub
loopne
in
mov
dec
in
out
cmp
xchg
mov
ret
push
push
inc
or
sub
sbb
test
mov
lret
lret
data16
lds
xchg
mov
jmp
test
sub
dec
inc
data16
add
sbb
inc
lea
cli
mov
or
in
sub
or
adc
iret
popa
mov
dec
adc
push
test
sub
pop
inc
jmp
add
add
cld
out
je
outsb
stos
lcall
pusha
and
or
push
xor
outsl
mov
lret
mov
les
int
lds
xchg
or
adc
adc
es
repnz
pop
sbbl
push
xchg
jl
push
movsl
das
cs
pop
mov
sub
sbb
or
aas
pop
push
or
insl
mov
icebp
es
xlat
or
add
dec
adc
push
das
repnz
int
adc
or
xor
js
or
or
ljmp
sbb
cmpsl
stos
lahf
loope
out
push
jns
lods
adc
insl
or
xchg
mov
lret
clc
sub
out
and
fdivl
push
inc
or
or
xor
lret
enter
and
pop
lods
mov
dec
sbb
stos
or
lret
aam
out
sub
pop
lods
addr16
arpl
adc
mov
cli
xchg
mov
rcll
mov
adc
fldl
push
xchg
xchg
or
or
sub
push
sti
loop
out
add
inc
ret
dec
add
mov
sub
outsb
imul
cmp
mov
add
dec
mov
lods
or
shrb
jo
xchg
rolb
cmpsl
mov
dec
out
mov
inc
fwait
push
out
dec
push
stos
dec
xchg
into
stc
mov
ljmp
in
or
lret
lret
pushw
xor
sub
mov
fwait
into
mov
inc
stos
ret
cmc
popa
adc
dec
out
pop
xor
lret
test
or
stc
ds
fwait
insl
dec
jns
and
out
outsl
stos
jmp
ja
in
icebp
or
or
adc
outsb
out
icebp
mov
movsb
jbe
shrl
lods
inc
mov
lock
adc
int
in
mov
sub
mov
adc
mov
xchg
lret
jmp
outsl
inc
int
xchg
into
cwtl
push
out
jge
mov
stc
daa
clc
inc
or
mov
out
fstpl
shrb
lods
xor
loopne
test
ja
repnz
scas
paddb
xchg
out
in
jmp
or
mov
out
leave
pop
sti
imul
jmp
adc
mov
or
pop
inc
in
mov
gs
mov
lods
sub
sub
pop
es
mov
xor
or
enter
cltd
ret
add
fucomi
jmp
lahf
out
imul
iret
push
xor
cmpsb
cmpsl
out
bound
push
cwtl
out
jge
cmc
into
negl
lret
jne
pop
lea
pop
lret
pop
sarb
clc
pop
out
add
iret
add
out
sub
push
in
and
sub
dec
pop
pop
pushf
mov
push
xor
das
mov
adc
mov
scas
insl
lea
test
mov
sub
repz
stc
adc
scas
das
ss
push
push
leave
dec
les
fisttpl
push
mov
test
jno
sub
leave
jb
popf
mov
in
xchg
in
fcomip
mov
cmpl
addr16
daa
or
adc
mov
stos
mov
ret
out
out
or
loopne
insl
xor
or
push
xchg
xchg
in
ror
les
bound
orl
pop
lahf
pop
pop
stos
mov
dec
iret
ljmp
dec
into
in
mov
dec
lret
or
pop
jmp
mov
push
insl
in
or
out
mov
or
lret
das
fiadds
push
lea
dec
mov
out
aaa
aaa
jge
lds
push
xor
mov
dec
sub
out
or
pop
cmp
sub
pop
lock
loopne
adc
xchg
push
ret
outsl
push
add
jmp
orb
imul
mov
push
outsl
or
daa
adcw
sub
lahf
out
mov
popf
pop
es
mov
lods
xorl
inc
xchg
movd
xor
insl
loopne
sub
mov
fildll
add
mov
xor
jb
sbbl
dec
lret
test
cmp
mov
add
daa
xor
cs
pop
repnz
out
call
les
pop
dec
pop
push
mov
dec
xor
test
xor
mov
adc
ret
mov
adc
sub
mov
out
inc
jmp
out
pop
ds
push
dec
imul
leave
out
dec
cld
xchg
jp
xor
or
dec
mov
out
dec
inc
sti
mov
imul
pop
scas
xchg
cli
xchg
js
lea
or
into
or
or
adc
and
mov
out
pop
enter
movl
iret
pushl
mov
or
xor
dec
icebp
fucomp
xor
ljmp
scas
fxrstor
out
ss
rorb
into
pop
and
psubsw
sub
xchg
outsl
or
int
lods
into
nop
xchg
mov
scas
push
lods
mov
and
out
fldt
aas
dec
pop
pushf
iret
and
addr16
or
mov
and
into
jmp
lea
repz
std
daa
pop
or
lahf
test
loope
dec
mov
icebp
adc
sbb
or
add
lock
dec
or
lret
cmp
dec
push
mov
sub
das
cmovl
outsb
or
imul
and
into
or
ret
sub
mov
add
outsl
or
imul
sub
movsl
lods
dec
mov
sub
das
mov
cmp
dec
loopne
test
jns
iret
dec
out
pop
lea
nop
lret
adc
dec
nop
cmpsl
adc
mov
adc
push
outsl
mov
pop
jmp
sub
push
leave
imul
jno,pn
sub
sub
dec
pushl
outsb
sbb
cli
icebp
jno
mov
add
xlat
sub
adc
cltd
out
push
test
push
and
jne
iret
test
mov
jle
mov
out
imul
or
out
adc
xchg
jmp
fsubl
inc
loop
cmp
adc
cs
sbb
out
jmp
and
cmpsl
test
mov
xchg
jecxz
inc
mov
pop
stos
sqrtps
out
or
sub
shrl
or
xchg
dec
pop
sbb
dec
xchg
or
jno
jno
sub
sbb
mov
data16
pop
lret
sub
ljmp
or
cvttps2dq
in
push
popf
imul
andl
pusha
mov
xchg
les
push
push
mov
xchg
push
imul
xchg
sub
xchg
sub
pop
lods
or
cmp
out
and
insl
out
cmpsl
push
out
sub
shlb
leave
icebp
and
push
adc
cmpsl
lods
jmp
sub
fldcw
inc
adc
lods
sub
shl
enter
mov
add
icebp
leave
andb
scas
inc
inc
nop
stos
adc
lods
adc
mov
leave
out
scas
and
ret
xor
ljmp
pop
loopne
xchg
sub
sbb
cs
cmp
mov
in
dec
xchg
jb
and
out
push
out
sbb
or
xchg
mov
in
xor
mov
sbb
lret
call
sar
fwait
enter
cmp
xor
push
lret
test
and
addr16
or
aad
push
lds
daa
stos
sub
aam
insl
das
pop
enter
xchg
inc
outsb
pop
or
stos
jp
data16
inc
test
sahf
xor
dec
sub
lret
sub
pop
xor
repz
adc
push
outsl
sahf
es
mov
in
ljmp
sahf
lret
int3
out
dec
daa
out
mov
out
sbb
adc
mov
mov
pop
push
mov
mov
mov
leave
scas
xor
or
pop
dec
rolb
sub
inc
in
or
xchg
cltd
xchg
jnp
movsb
cli
pop
imul
and
lods
sub
add
shr
ror
addl
adc
lea
into
loope
in
movups
and
daa
ljmp
imul
scas
fcoms
push
cmova
jmp
imul
lret
stc
int
iret
sub
out
fisttpll
xchg
jmp
daa
push
dec
push
or
mov
xchg
add
out
sbb
sub
sub
dec
inc
dec
jmp
and
ljmp
or
adc
ret
dec
or
mov
test
lock
addr16
icebp
out
jg
sub
lea
xchg
push
jmp
scas
roll
push
iret
dec
xor
fdivs
je
stc
mov
dec
outsl
das
inc
mov
das
push
scas
jecxz
imul
lret
pop
sub
jmp
call
outsl
xorl
jmp
and
test
sub
push
jg
repnz
scas
test
ret
hlt
mov
cmpw
test
rclb
dec
loopne
lret
adc
sbb
jb
adc
or
lea
xor
data16
imul
outsb
jmp
dec
in
pop
push
push
dec
pop
or
sbb
add
adc
push
test
mov
or
inc
or
push
loope
push
jl
xchg
jmp
inc
test
mov
sub
leave
jg
outsl
or
jmp
sbb
sub
ret
enter
add
push
or
out
mov
bound
add
sahf
subl
pop
pop
sbb
jmp
or
sub
inc
sbbl
lock
lret
mov
stc
adc
dec
enter
dec
and
mov
in
dec
lods
jge
pop
insl
mov
sahf
enter
jge
pushw
adc
mov
sub
jne
mov
inc
mov
add
leave
dec
test
inc
pop
mov
mov
pop
sub
shll
adc
sbb
jbe
mov
leave
lea
mov
shrl
enter
mov
out
insl
mov
dec
stos
sub
fists
popa
out
adc
sbb
in
outsb
lret
xchg
cs
push
scas
pop
mov
and
mul
add
leave
cs
test
in
repnz
inc
faddp
negl
cmpsl
xchg
mov
in
sub
fwait
mov
inc
stos
sub
dec
lock
sbb
jns
in
push
ljmp
sub
imul
in
push
pop
stos
icebp
sbb
jecxz
iret
sbb
adc
mul
mov
sub
push
out
outsl
scas
sbb
inc
xchg
push
inc
pop
pop
sbb
mov
shrl
jmp
mov
jns
dec
popf
mov
mov
insl
imul
push
daa
imul
ret
sub
lret
icebp
push
and
dec
sub
or
mov
cmpsb
xchg
cmp
and
mov
ret
xor
xchg
das
scas
das
inc
out
add
ss
into
or
pop
inc
lea
dec
xor
outsb
sub
or
mov
js
movsl
adc
cmp
sub
and
mov
mov
test
or
push
stos
inc
ds
lret
jno
lods
scas
xchg
mov
or
in
cmp
jg
mov
cwtl
push
push
sub
or
sub
pop
fmuls
rorl
sub
dec
out
ret
sub
test
lods
pop
ret
rorb
or
rolb
subl
pop
pop
leave
movsl
iret
int
lods
cmp
jo
pop
sbb
sub
hlt
and
sub
inc
dec
push
inc
push
dec
ljmp
stos
or
lds
pop
fsubp
sub
dec
stos
daa
jns
mov
dec
mov
dec
dec
scas
or
inc
push
add
sub
scas
or
loope
cmp
cmp
pop
add
jns
or
dec
or
in
shll
daa
inc
outsl
cs
adc
mov
xor
popa
insl
sub
das
or
pop
mov
or
out
mov
fwait
or
loop
xor
addr16
mov
sub
loop
das
jge
imul
mov
adc
push
sub
add
loopne
mov
and
dec
popl
outsb
popa
arpl
daa
mov
mov
les
push
insl
iret
or
out
dec
shrb
sub
xchg
cltd
sub
push
cli
movsb
mov
stos
xor
icebp
mov
jmp
sub
outsb
or
sub
and
inc
int
or
sbb
mul
lret
push
jmp
or
bound
dec
or
outsb
orl
or
and
iret
sub
lret
push
mov
cmpsl
ffreep
cmp
cmp
or
sub
push
ret
or
rolb
push
adc
or
inc
out
sub
mov
inc
scas
mov
into
arpl
movsl
cmp
mov
into
pop
popa
dec
adc
push
insb
cwtl
js
out
pop
xor
sbb
test
xchg
or
dec
sub
iret
and
sbb
lods
dec
mov
dec
xchg
imul
into
adc
jmp
das
clc
sub
das
xchg
mov
adc
sbb
lret
mov
mov
outsl
sbb
add
into
loopne
in
daa
push
xor
ret
jnp
mov
out
jno
cltd
jno
dec
mov
xchg
int
in
mov
mov
loopne
xlat
mov
cs
sub
scas
clc
jno
insl
sub
out
cs
imul
cmpsl
sbb
xchg
out
cmpsl
enter
fcmovnbe
and
pop
or
or
jp
je
das
mov
xor
push
lret
sub
xor
and
rorl
sub
stos
lods
push
cmp
sbb
out
int
dec
or
add
rorb
das
jle
push
sbb
mov
and
adc
xchg
jle
sbb
dec
mov
les
lea
pop
dec
cmpsl
adc
adc
fidivs
fmull
pusha
mov
idivb
sub
or
stos
push
jmp
sub
mov
scas
lds
into
out
aam
or
ds
cwtl
imul
mov
mov
dec
iret
or
add
push
out
push
sub
loope
icebp
addr16
mov
mov
mov
sub
jmp
in
out
repnz
out
or
call
cmp
loopne
jnp
mov
fists
sub
mov
iret
out
sub
icebp
jne
or
mov
pop
push
test
in
btc
dec
out
mov
imul
sar
jnp
mov
sub
and
sub
dec
cmp
dec
or
push
lret
in
test
mov
ret
xor
outsl
adc
rolb
dec
ret
scas
jmp
cltd
sub
xchg
dec
cmp
add
das
out
sub
int
and
cmp
or
push
xchg
xor
jmp
pop
dec
daa
fildll
jecxz
in
adc
sub
stos
ljmp
loope
int
mov
insl
cmpsb
in
loopne
sub
into
icebp
jl,pn
pushf
das
lret
xor
or
dec
fcmovnb
subl
mov
xor
daa
scas
cmp
sub
in
ja
out
mov
leave
hlt
pop
or
popa
les
pushf
mov
leave
mov
or
cmp
scas
dec
cmp
xchg
dec
dec
jle
loop
jle
shll
and
mov
mov
shr
or
or
mov
mov
pop
pushf
dec
push
or
test
lret
mov
test
stos
movsb
adc
or
sbb
out
stos
mov
daa
adc
or
call
ret
dec
dec
jge
pop
push
xchg
ret
les
pop
arpl
sbb
das
push
pop
fimuls
jmp
repz
bound
arpl
lret
mov
xorl
mov
or
mov
dec
inc
or
sub
clc
mov
aam
into
stos
ret
inc
xchg
or
sbb
push
pop
jecxz
int
inc
movsl
inc
fmul
in
pop
arpl
push
mov
movsl
mov
test
mov
out
pop
and
loope
mov
mov
dec
lea
push
dec
adc
imul
dec
add
sub
arpl
adcl
pop
popa
out
outsb
inc
inc
inc
dec
outsw
dec
in
inc
jo
or
or
das
into
jne
xor
adc
bound
leave
iret
xor
xchg
jno
stc
inc
fs
dec
std
imul
es
out
jmp
push
das
jmp
jbe
xlat
dec
sub
fisttps
and
test
mov
inc
and
out
loope
mov
iret
movq
outsl
xchg
out
cmp
add
in
imul
dec
inc
xchg
sub
test
push
push
mov
lock
dec
out
sbb
pop
ljmp
xchg
loope
adc
and
jmp
lds
les
sbb
fst
cltd
loop
dec
dec
imul
or
into
jge
or
or
mov
mov
ds
push
ljmp
out
xor
adc
xor
sub
test
push
pop
test
test
or
or
iret
arpl
sub
pop
loope
jnp
lret
dec
cs
jp
inc
adc
push
and
lds
jge
adc
cmc
dec
pop
and
inc
out
int3
scas
mov
loopne
stos
or
and
sub
fnstsw
mov
pop
arpl
mov
xlat
fldt
fs
movaps
dec
dec
pop
xchg
xchg
cld
or
pop
bound
not
outsb
adc
pop
or
jb
scas
sbb
or
or
addr16
pop
in
lret
sub
out
mov
pusha
dec
mov
dec
add
cmova
imul
fildll
or
enter
mov
vmovdqu
ss
jb
jle
scas
sub
les
ja
mov
out
fxtract
cmp
test
lret
push
ret
push
iret
adcl
mov
out
dec
int
mov
add
pop
scas
cs
push
pop
sbb
in
push
insl
mov
dec
dec
inc
lret
test
sub
mov
xor
loope
lret
mov
pop
push
addr16
orl
or
out
outsb
pop
pop
data16
cmpsl
adc
sub
outsl
mov
mov
sub
fwait
dec
call
in
stos
sbb
or
lods
pop
jmp
inc
lock
sub
pop
pop
outsb
lcall
out
push
fsubrl
cmp
iret
jno
adc
xor
lods
cmp
das
subl
xchg
aaa
jmp
xchg
fld
loope
push
dec
int
sub
nop
cmpsl
adc
dec
inc
inc
or
outsl
sub
push
adc
or
sub
lret
addr16
fisubs
popa
out
dec
test
or
jmp
xchg
mov
add
push
pop
stos
push
daa
bound
jns
push
jmp
mov
xchg
cltd
icebp
icebp
fwait
aas
out
cmpsl
jmp
leave
insl
or
sub
imul
push
mov
popf
jae
push
push
or
pop
bound
filds
adc
lock
int
arpl
pop
test
and
dec
sahf
shrb
ljmp
popf
imul
sub
or
or
push
shrl
pop
out
leave
push
push
sub
push
lret
bnd
scas
dec
out
unpcklps
mov
in
or
sbb
int
pop
in
js
inc
push
stos
cmc
push
leave
dec
sub
bswap
out
push
or
sbb
aaa
ror
xchg
cwtl
lcall
scas
sub
jo
mov
xchg
iret
filds
hlt
lea
pop
nop
jmp
sub
mov
push
fsubs
data16
mov
sub
insb
outsl
pop
lods
stos
test
sub
or
cwtl
out
jnp
add
jbe
repnz
mov
lods
jecxz
lea
mov
mov
push
div
or
pop
mov
es
mov
sbb
stos
pop
lahf
int3
sub
sub
sub
dec
das
imul
jmp
jns
mov
fisttps
fiadds
test
sbb
mov
ret
daa
sub
sub
xchg
mov
dec
dec
out
push
sbb
sub
adc
out
test
lret
out
xchg
loopne
ret
dec
inc
adc
ljmp
leave
punpcklwd
or
in
or
xchg
xor
dec
out
ljmp
inc
test
repnz
in
and
out
out
dec
sbb
mov
dec
adc
pop
gs
leave
ds
or
rol
outsl
fadds
sub
pop
stos
enter
clc
pop
lods
outsb
xor
xchg
fmull
cmp
jl
ficoms
stos
xor
push
enter
mov
das
inc
imul
stos
leave
scas
or
ljmp
xchg
das
test
jp
dec
sarb
dec
test
dec
lods
jno
out
mov
push
das
lahf
dec
inc
sub
mov
cmovbe
sahf
lret
out
jl
data16
adc
aas
sete
mov
sub
clc
push
pop
pop
or
add
imul
lods
sub
or
mov
cs
leave
cmp
add
sub
or
pop
repnz
into
jle
movsl
dec
dec
fwait
jge
cld
aaa
enter
xchg
mov
xchg
mov
pop
int3
jmp
pop
or
test
dec
or
xchg
dec
cmp
lods
aad
inc
or
dec
dec
mov
ljmp
outsb
mov
xchg
jmp
push
out
clc
or
sbb
xchg
into
dec
sbb
movsw
push
shlb
push
sub
lods
les
lea
xchg
jnp
sub
leave
jbe
in
inc
push
lock
popf
xor
rclb
lret
pop
outsl
xchg
inc
push
stos
arpl
test
wrmsr
or
xchg
pop
sbb
out
dec
sub
inc
cmp
daa
dec
xchg
mov
dec
out
out
push
inc
push
or
sbb
dec
or
mov
test
das
inc
arpl
add
sbb
int
adc
dec
addr16
movsl
outsb
or
push
xchg
stos
sub
icebp
dec
insb
adc
popl
jle
loop
movsl
daa
imul
iret
add
xor
in
add
lods
push
pop
loope
iret
pop
je
clc
mov
push
dec
sub
scas
stos
add
mov
cwtl
out
cmp
dec
adc
sbb
jp
sub
inc
ret
ret
les
cmpsl
and
and
fmuls
push
mov
cmp
stos
fimull
mov
and
cmp
cld
insb
mov
test
dec
or
lods
xlat
pop
xor
fwait
imul
xcrypt-ecb
cmpsl
dec
jmp
or
lods
cmpsb
dec
pop
push
lock
jae
pop
bnd
and
test
or
mov
data16
shrb
pop
faddp
sub
out
inc
dec
xchg
xor
and
orl
test
sub
inc
mov
inc
mov
lods
pop
call
stos
push
or
test
insl
into
iret
sub
out
hlt
or
outsl
inc
and
movsb
jmp
dec
cmpsl
pop
sub
dec
fmuls
mov
shrb
sbb
or
dec
loope
or
addr16
sub
dec
lret
and
xor
das
jno
push
lea
inc
add
dec
outsb
dec
dec
pop
push
mov
inc
mov
xchg
and
mov
lods
push
scas
subl
sub
aas
add
test
out
adc
out
scas
jb
fcompl
int
cltd
icebp
xor
sub
scas
add
mov
mov
stos
push
mov
lods
jecxz
jbe
xchg
sub
mov
cmp
sub
sub
jo
addr16
out
dec
or
repz
adc
fisttps
pop
push
call
in
out
std
fists
sub
mov
sub
sub
mov
aas
out
add
or
mov
or
inc
add
les
xor
scas
sub
imull
sub
cmpl
mov
dec
daa
push
mov
pop
sub
js
fmull
or
ret
push
lea
loope
das
lret
orb
xchg
out
out
nop
inc
in
js
popl
mov
xchg
and
cmp
cmp
sub
lds
mov
mov
out
scas
fcoms
leave
or
das
or
jmp
ljmp
and
sub
fisttpl
fwait
sbb
fwait
orl
daa
inc
in
popa
dec
mov
lcall
movsb
ja
dec
sbb
inc
or
mov
xor
or
inc
packuswb
scas
out
stos
sbb
test
rolb
dec
icebp
hlt
adc
popa
xchg
sub
cmpsl
lahf
sbb
das
out
ficoml
outsb
dec
adc
jmp
dec
pop
dec
jge
and
insl
or
ds
inc
scas
ret
in
stc
loope
push
push
mov
sbb
dec
xchg
xchg
or
das
adc
sbb
mov
xchg
lods
adc
adc
int
dec
mov
push
shrl
jne
cmp
xchg
mov
daa
inc
shll
shrl
or
sti
rep
push
enter
dec
push
out
fs
sarl
imul
bound
std
ret
test
and
outsl
ljmp
mov
add
mov
sub
inc
out
push
stos
jns
popf
xor
dec
or
std
mov
mov
sub
loope
dec
repz
push
sub
dec
lea
and
cmp
shlb
test
int
adc
mov
sub
insl
jmp
call
lods
mov
cs
pop
jb
rorb
pusha
cmp
mov
xchg
inc
iret
ljmp
out
in
enter
jmp
scas
mov
pop
sub
xchg
imul
into
addr16
in
bound
call
sub
cmp
lds
pop
jle
testl
sub
lock
hlt
and
cmp
setae
mov
sbb
cmova
scas
cmp
into
mov
sub
loope
popf
stos
mov
jno
sub
rolb
push
into
xchg
movsb
adc
sub
jle
or
or
ret
daa
xchg
push
insl
jns
out
lret
xor
and
in
dec
xchg
and
ret
dec
scas
aaa
clc
jg
fcomps
mov
mov
xor
mov
repnz
push
das
add
data16
outsb
dec
or
add
dec
mov
aam
cmp
push
sbb
daa
stos
outsl
mov
inc
pop
sub
imul
insl
dec
push
arpl
push
sub
pop
cs
out
addr16
in
sub
mov
fsubrl
mov
or
lret
cs
sbb
or
jns
in
cmpsl
and
or
ret
in
lea
inc
cld
loope
jmp
jb
subl
data16
das
outsl
inc
adc
mov
out
sub
or
adc
jp
pop
int
imul
dec
sub
jge
std
adc
adc
jns
or
scas
inc
cmp
lea
ret
imul
dec
push
addr16
push
iret
dec
push
xor
fmuls
xchg
push
enter
jp
or
bound
push
or
pop
push
iret
xchg
stos
mov
mov
das
leave
sahf
inc
pop
nop
in
addr16
sub
ret
dec
ljmp
imul
jmp
out
loop
pop
outsl
imul
pop
clc
adc
mov
imul
stos
and
sbb
pop
lcall
mov
dec
sub
cmp
sub
inc
pop
pop
and
dec
icebp
into
sbb
outsb
sub
xchg
or
xchg
into
scas
dec
test
stos
dec
std
lods
push
mov
push
imul
ror
out
dec
movl
stos
test
or
loop
lret
lret
lods
lret
pop
mov
imul
daa
lret
bound
ljmp
dec
ret
sub
dec
out
int
or
mov
les
pop
dec
xchg
sub
jne
mov
popl
rorl
dec
adc
inc
or
stos
push
outsb
mov
bnd
out
add
jns
in
cmp
inc
xchg
scas
das
sbb
out
or
lret
cltd
ja
fisubrs
pop
arpl
push
cmpsb
iret
mov
lret
out
lods
leave
add
xlat
daa
adc
sbb
mov
pop
or
or
in
idiv
out
aaa
push
lret
mov
outsb
jne
pop
xchg
test
iret
mov
pop
js
insl
div
es
lock
data16
jmp
repz
test
ljmp
dec
mov
scas
push
jecxz
jbe
jnp
test
pop
stos
iret
scas
cs
imul
ss
fwait
or
pop
shr
sbb
ljmp
sub
sub
adc
adc
dec
emms
loope
sub
outsb
lret
sbb
pusha
push
or
es
cmp
out
mov
lret
jecxz
testb
cvtpi2ps
dec
sbb
out
cs
nop
inc
aam
out
scas
pop
aad
or
xor
mov
in
adc
stc
pop
js
jmp
jg
adc
push
outsb
and
xchg
or
sbb
add
xchg
jmp
lret
frstor
and
dec
int3
iret
dec
into
sub
add
push
stos
xchg
dec
roll
xchg
inc
jno
addr16
mov
jmp
cmc
popl
pop
push
adc
out
xchg
push
into
lret
mulb
out
lea
icebp
test
mov
and
repnz
push
mov
mov
pop
pop
js
mull
adc
js
pop
daa
scas
add
ljmp
mov
xor
or
repz
mulb
cmpsb
mov
dec
xor
lret
dec
pop
or
dec
psraw
lea
pop
pop
pop
xchg
loopne
adc
adc
fcmove
lret
jnp
in
andb
add
xrstor
sub
inc
in
mov
mov
pop
adc
dec
pop
test
imul
dec
sub
insb
aam
pushf
mov
stos
xchg
mov
notb
mov
xchg
das
out
repnz
mov
mov
add
xor
dec
ds
cld
or
shlb
push
or
ret
lods
sub
pop
imul
mov
data16
xchg
stc
fisubrl
das
imul
push
cmpsb
dec
rcrb
les
out
sub
loope
shld
jne
in
dec
sub
ss
das
aam
rcl
fwait
xchg
testl
or
imul
aad
imul
push
jo
clc
in
pop
cmp
aad
or
xor
push
adc
aad
cmpsb
sub
incl
shlb
push
cmp
dec
dec
push
or
sbb
or
jmp
jne
xor
add
mov
sub
push
mov
inc
or
xor
ds
stos
jle
aad
repz
xor
out
pop
push
dec
dec
xor
es
xchg
pop
ljmp
xchg
mov
rcrw
xor
or
imul
aam
adc
jne
xchg
or
pop
xchg
mov
dec
sti
jg
adc
and
mov
aad
pop
scas
fwait
xchg
stos
das
movsl
shll
mov
into
out
scas
push
xchg
bound
xchg
dec
aad
sub
xor
inc
adc
xchg
lahf
mov
xchg
xchg
mov
loop
arpl
mov
sub
xor
push
jg
xchg
dec
fldt
jne
xchg
xor
cmp
mov
es
pop
in
int3
mov
test
sub
xor
in
mov
call
aad
fwait
sub
xchg
cmp
xchg
decb
jg
xchg
jo
sti
mov
xchg
xchg
test
cmp
or
scas
rcll
int
push
xchg
fdiv
push
adc
imul
jg
int
fcomps
xor
sub
test
mov
repz
and
mov
inc
jmp
ss
xchg
inc
shlb
pop
js
mov
mov
call
pop
xchg
hlt
int3
fwait
mov
xchg
cmc
push
int3
push
imul
xchg
out
cmpsl
jbe
arpl
push
sub
cmp
jmp
insl
call
mov
sahf
outsb
ret
dec
iret
int
fwait
sub
stos
push
cmc
iret
mov
mov
ds
pop
es
loope
imul
or
out
loope
sub
hlt
adc
adc
adc
jg
outsl
andb
cs
add
cmpsl
dec
or
xor
out
notl
fisubrl
imul
scas
cmp
daa
lcall
data16
arpl
lret
dec
add
dec
or
iret
push
clc
sub
xor
cltd
dec
cmp
mov
push
imul
sub
dec
leave
or
or
pop
push
les
dec
scas
or
imul
testb
mov
jmp
jecxz
iret
lea
std
push
sbb
jmp
cmp
cmp
and
add
iret
add
sub
adc
int3
cmpsl
cmp
dec
leave
std
mov
inc
lods
dec
inc
or
push
mov
mov
int
dec
sub
mov
dec
or
or
dec
add
mov
cmpsl
ljmp
dec
sub
outsl
xchg
dec
pop
mov
movb
sarl
ret
mov
sub
jae
addr16
sub
fldt
xchg
scas
xor
xor
out
pop
inc
xchg
pop
mov
cmpsl
daa
xchg
pop
scas
fdivrl
outsl
push
lods
xchg
inc
int3
insl
int
lret
or
inc
or
cmp
and
fwait
cs
cmpsl
sbb
loope
xor
out
mov
les
iret
inc
sub
pusha
test
pop
repnz
fisubs
and
ljmp
cld
mov
push
adc
jmp
mov
cmpsl
aad
pop
or
test
xor
data16
negb
xchg
data16
push
out
std
push
and
ret
mov
mov
out
xchg
sub
push
mov
repnz
aam
mov
xchg
push
adcb
mov
mov
jmp
lea
push
filds
into
or
or
xor
dec
or
in
aad
icebp
lods
mov
inc
repz
jne
dec
push
mov
mov
test
sbb
lea
adc
cmc
add
inc
fwait
mov
xchg
jnp
fwait
leave
insb
inc
xor
pop
mov
or
dec
out
ljmp
xchg
xchg
ljmp
push
cmp
xor
stc
das
and
xchg
ror
pop
data16
xchg
pop
inc
or
xorl
xchg
je
mov
test
stos
inc
mov
int
xchg
iret
mov
das
mov
pop
sub
add
inc
jo
xchg
xchg
sahf
leave
ss
sarb
or
xchg
pop
out
rolb
cmovle
mov
in
sub
stos
adc
dec
lret
sub
or
xchg
mov
dec
jmp
xor
cmovl
out
push
test
shlb
dec
psubsw
xor
inc
cmpsl
dec
std
je
cli
lock
imul
xor
or
mov
stos
loop
pop
dec
shlb
jmp
push
test
dec
bound
addr16
pop
dec
jmp
pusha
into
call
mov
lods
mov
pop
and
repz
pusha
cmp
dec
addr16
jge
arpl
out
popa
mov
dec
pop
dec
sbb
dec
push
cltd
dec
les
mov
das
stos
sub
or
dec
imul
jo
push
mov
mov
mov
out
movsb
ja
dec
data16
pop
mov
fidivl
or
or
push
push
popa
ljmp
stc
mov
lret
xchg
push
xor
dec
rorl
mov
outsl
movsb
stos
in
dec
movsb
test
int
loop
iret
lret
stos
syscall
addr16
mov
dec
sbb
leave
into
dec
inc
and
punpckhwd
push
adc
lods
sub
cmp
in
outsb
sbb
lods
lods
adc
std
sub
push
test
jmp
insl
bound
icebp
je
adc
out
into
outsb
mov
test
int
mov
jae
test
mov
loop
lret
cmc
fistl
cmpsb
daa
sbb
scas
stos
adc
adc
dec
adc
test
out
leave
cmpb
xchg
ret
dec
push
call
pop
sub
movsb
or
nop
out
fsubrp
dec
popl
or
cs
rolb
scas
into
dec
cmpsl
or
dec
xchg
std
hlt
xchg
or
jno
in
or
scas
xchg
mov
dec
jae
pop
test
nop
push
lret
adc
dec
inc
imul
out
add
adc
jle
mov
scas
jno
or
test
jmp
inc
loopne
out
jle
clc
sbb
push
dec
insl
orl
or
sub
jcxz
pop
orl
iret
dec
stc
or
outsb
jl
popa
push
imul
inc
xchg
loop
popl
or
imul
dec
test
pop
out
sub
sub
das
mov
or
or
imul
sbbb
fsubrl
sub
in
or
loope
cmpsl
dec
daa
sub
shr
sub
mov
outsl
into
incb
lods
outsb
pusha
lock
add
lea
dec
imul
push
out
pusha
ret
inc
mov
loop
mov
dec
xor
out
and
dec
imul
pop
outsl
mov
push
push
scas
cmp
rolb
test
add
in
pop
xchg
push
dec
xchg
dec
sub
add
mov
imul
outsl
pop
lds
or
int3
xor
xor
scas
stos
or
out
xchg
cmp
or
push
dec
cmpsl
sahf
testb
outsb
ljmp
das
adc
or
push
dec
and
cs
jmp
or
in
mov
dec
jns
cs
push
sub
iret
jbe
in
mov
adc
xor
add
cmpsl
cmovns
or
mov
mov
inc
lods
insl
lret
push
mov
lea
xchg
or
lcall
xor
sbb
gs
outsb
testb
xchg
icebp
call
jno
leave
pop
imul
lret
xchg
dec
sub
dec
outsb
in
movsl
mov
xor
outsl
dec
adc
sbb
bndstx
scas
daa
loop
mov
dec
push
rcll
xchg
out
push
jae
loop
scas
add
out
cmpsl
ljmp
lret
inc
adc
shr
cmpsl
mov
jo
xchg
bound
adc
loopne
fs
pop
cmp
out
push
cmp
push
outsl
cmpsb
out
outsb
sub
push
push
pop
add
incl
xor
ret
ds
xor
cmpsl
data16
push
das
mov
mov
loopne
or
push
test
movl
aas
sub
xchg
xor
sbb
iret
mov
adc
cmp
adc
sub
lret
adc
mov
ja
out
xlat
push
scas
aas
ret
aam
out
xchg
pop
mov
adc
aas
repz
mov
dec
das
xchg
es
in
sbb
dec
mov
pop
pusha
int3
out
imul
daa
stos
sub
scas
jo
push
sub
sub
inc
adc
sbb
ljmp
jge
imul
jge
pop
dec
bts
pop
cmp
mov
popf
dec
in
dec
dec
sub
out
les
stos
lret
ljmp
or
mulb
and
xchg
sub
stos
stc
jp
lahf
addl
cmp
adc
decl
jmp
pop
sub
out
daa
adc
scas
pushl
dec
adc
adc
loopne
or
in
lods
adc
mov
sub
in
lret
cs
add
mov
ret
jmp
dec
orl
mov
out
lret
packuswb
mov
imul
or
mov
jg
jns
adc
sub
popf
mov
or
loope
or
mov
dec
sbb
dec
fiadds
mov
jmp
loope
push
daa
mov
stc
mov
cmp
pop
inc
out
js
mov
data16
xchg
das
or
add
inc
dec
cltd
jb
in
or
jmp
sbb
or
bound
outsb
sub
sbb
scas
or
aaa
dec
stos
ret
out
pmaxub
cwtl
ret
loopne
mov
ja
or
adc
or
xor
xchg
mov
das
enter
ret
inc
push
ljmp
in
jne
sub
jg
addr16
sub
dec
std
push
push
dec
cmpsl
nop
and
dec
int
or
mov
sti
and
dec
push
mov
push
out
in
push
mov
cmpsl
mov
jb
sub
movsb
in
packsswb
or
addr16
xchg
movsb
stos
out
pushf
dec
into
xchg
and
imul
test
xchg
or
int
clc
sub
mov
push
out
ret
lret
pop
loope
sub
dec
stos
or
mov
ljmp
adc
adc
lds
repz
pop
movsb
sub
inc
scas
sub
iret
and
push
cmpsl
xchg
dec
mov
dec
fisttpll
lcall
xor
xchg
out
adc
stos
dec
and
mov
xchg
popa
mov
mov
adc
adc
scas
mov
iret
and
dec
movl
lret
ret
out
imul
add
add
add
iret
out
mov
ljmp
movsb
xor
adc
adc
dec
nop
sub
int
or
cmpsb
pusha
mov
mov
addr16
lods
cwtl
pusha
adc
andl
or
movl
mov
jp
daa
xor
rcll
xchg
out
std
sub
push
push
mov
insl
outsb
incl
or
stos
or
icebp
in
lret
imul
pop
push
lret
sbb
xchg
jge
mov
int3
sub
aam
push
xchg
les
dec
jmp
cmp
or
lea
dec
sub
imul
mov
iret
and
int
and
sub
into
mov
stos
sub
lea
and
cs
scas
mov
mov
into
ret
dec
mov
das
out
sbb
xor
insl
xor
or
mov
les
and
cs
out
push
adc
fs
imul
sub
mov
cbtw
jbe
fwait
sub
or
pop
fistl
and
inc
pop
or
ffree
aam
call
in
pushf
out
pusha
fninit
jmp
mov
dec
adc
cld
xor
dec
lea
hlt
dec
test
pop
jae
dec
cmpl
or
ljmp
dec
lods
sub
and
pop
lea
imul
jmp
jno
outsl
test
sub
sbb
add
or
out
addr16
out
or
hlt
test
pusha
mov
add
adc
in
or
jnp
sub
ret
sub
push
adc
lret
daa
outsb
mov
mov
mov
lods
mov
sub
adc
test
ljmp
ds
jmp
add
out
or
dec
pop
outsb
out
and
dec
dec
das
mov
cmpsl
fdiv
loop
sub
xor
push
dec
scas
lds
dec
or
loop
outsb
imul
add
jmp
and
jbe
call
mov
push
xchg
dec
lods
pusha
xchg
fs
movntq
outsb
outsl
decl
dec
mov
movsb
or
dec
xchg
mov
adc
and
jg
dec
ret
cli
scas
push
fnsave
sub
imul
dec
stos
out
pop
jge
cltd
stc
sub
in
repnz
pop
pop
dec
adc
add
mov
je
jle
ss
xchg
or
xor
leave
or
lock
out
xorl
adc
dec
rsm
loop
xchg
iretw
daa
movb
stos
out
data16
push
ljmp
sub
lcall
xor
mov
insl
in
daa
rclb
add
adcb
pusha
fdivs
les
inc
out
or
stos
sbbb
mov
lret
into
cmc
pop
daa
mov
adc
sub
jge
jmp
push
out
aam
mov
stos
jge
push
dec
in
pushf
mov
fwait
loop
jmp
adc
out
jmp
daa
lahf
pushf
lods
dec
mov
popa
in
scas
cmp
outsb
cmp
aam
push
xchg
xchg
aas
pop
push
int
sbb
dec
scas
scas
push
hlt
out
cmp
xchg
loop
pop
into
je
jbe
out
or
xchg
push
dec
mov
lcall
scas
dec
and
into
repnz
outsb
inc
bound
and
imul
mov
jns
outsb
mov
andl
xchg
cmpsl
ljmp
mov
shufps
pop
inc
mov
xor
jmp
ret
stos
jbe
rcrb
mov
stc
mov
push
popf
or
cs
jb
and
sub
push
movsl
dec
fistpl
lods
jmp
data16
push
xor
xor
or
les
iret
shrl
movsb
into
scas
in
sub
insl
test
xchg
scas
pop
iret
lods
daa
lret
or
and
or
mov
mov
ds
mov
js
sub
sub
lods
sbb
inc
lea
sub
out
and
xchg
xor
out
add
or
test
rorl
fstpl
adc
cmp
jg
pop
jmp
sub
sub
stos
adc
push
xor
ud2
mov
and
sub
xor
sbb
out
jmp
into
nop
mov
arpl
pop
mov
dec
or
dec
or
ds
mov
aaa
ds
cmc
inc
fcompl
and
mov
sbb
sub
loopne
add
sub
or
daa
test
dec
test
outsl
repz
xchg
mull
dec
int
sbb
dec
insl
leave
or
scas
rolb
or
pushf
out
outsl
dec
lret
adc
sub
push
loope
das
addl
ror
sub
jg
mov
test
sub
mov
or
stos
daa
out
mov
roll
and
insl
lods
sub
add
scas
or
leave
iret
insb
stos
push
ror
adc
mov
and
xchg
jmp
push
test
orl
movb
inc
ret
xchg
xchg
loop
lret
out
arpl
loope
mov
dec
lahf
retw
das
adc
daa
shlb
imul
jmp
mov
lods
in
outsb
and
ljmp
sahf
mov
fs
iret
ret
sbb
dec
adc
dec
out
push
outsb
scas
minps
out
sbb
inc
outsl
test
cmp
leave
mov
inc
rcll
and
lods
daa
arpl
loope
cs
jmp
add
lock
cmpsb
sub
or
movsb
adc
lret
clc
ret
lea
mov
scas
or
pop
hlt
jns
mov
xor
aam
dec
cmpsl
or
stos
dec
int
pop
adc
les
in
call
sub
push
jne
dec
xor
xchg
jns
rsqrtps
fwait
lods
push
inc
stos
lock
or
adc
imul
lcall
xor
loopne
mov
inc
jno
or
jle
pop
pop
scas
imul
pop
add
addr16
pop
or
push
fsubs
fwait
push
inc
scas
out
insl
enter
rcrl
addl
or
aaa
test
in
or
aad
adc
test
sub
xor
insl
inc
mov
in
cmp
pop
add
inc
iret
scas
icebp
sahf
lods
divb
lret
popl
sub
addr16
cmp
sub
mov
stc
lds
sbb
push
sub
push
ret
ljmp
push
inc
scas
xchg
fildll
or
lret
jno
imul
scas
ja
in
sbb
int3
pop
dec
stos
loop
mov
sub
mov
or
scas
pop
lret
mov
adc
adcl
push
sub
mov
xor
or
test
stc
call
mov
bound
push
and
stos
push
mov
out
pop
scas
adc
mov
adc
mov
adc
dec
adcl
mov
aaa
sbb
mov
lea
add
shr
add
pop
or
stos
dec
test
lret
push
movb
push
or
cs
and
cmp
mov
or
mov
add
mov
or
jl
xor
daa
outsb
and
clc
jns
or
jge
cld
cmp
or
dec
add
sub
jo
inc
pop
push
das
lods
adc
adc
out
inc
dec
dec
sbb
dec
sahf
outsl
orb
das
sub
in
scas
xchg
cmp
lret
ror
or
stos
outsl
adc
jecxz
or
pop
fldl
jne
js
repnz
mov
dec
or
pop
pop
and
jmp
ja
dec
leave
push
mov
xchg
mov
ficoms
inc
mov
jmp
fildll
movsb
fs
xchg
and
mov
outsb
mov
das
jecxz
sub
lret
xor
sub
movsl
stos
stos
inc
mov
cmp
insl
int3
push
scas
lret
loopne
or
lea
stos
out
ljmp
lds
leave
lret
pusha
test
stc
loope
sub
lock
mov
out
out
in
nop
test
data16
mov
ljmp
push
add
negl
jno
sub
sbb
sub
lods
inc
or
xchg
js
xor
das
in
daa
and
or
rolb
cltd
mov
inc
fwait
sub
test
insl
into
sub
das
outsl
lea
adc
daa
or
jmp
out
ljmp
shll
or
scas
dec
aas
xchg
dec
pop
loope
push
iret
sub
sub
dec
shlb
cmp
lret
inc
or
ficoml
or
out
xchg
dec
xor
outsb
sub
pop
mov
mov
mov
fidivrs
lea
in
test
sbbb
outsl
mov
dec
movsl
sbb
xchg
iret
pop
push
fsubrl
jmp
xor
dec
sub
push
or
mov
add
adc
daa
dec
push
aas
rcll
ljmp
lret
pop
mov
mov
into
lret
in
clc
ficomps
pop
inc
lea
jns
ja
mov
push
aaa
sub
mov
push
sbb
sub
leave
or
add
xor
sub
lods
leave
in
pop
inc
nop
adc
jg
shl
insb
adc
jo
pop
lret
das
adc
adc
ret
dec
dec
mov
adc
dec
cwtl
shlb
dec
sub
or
dec
subl
push
fimuls
sbb
scas
popf
ljmp
dec
outsl
xchg
aam
out
imul
cmpxchg
lret
push
psllw
xor
frstor
pop
adc
cli
xchg
imul
cmp
jae
daa
or
mov
shr
sbb
jle
pop
pop
outsb
dec
imul
inc
scas
out
dec
add
mov
addr16
xchg
cmpsl
xchg
out
inc
and
cmc
fmuls
sub
mov
add
pop
pop
or
jmpw
mov
pop
sbb
sbb
movsb
xor
decb
push
imulb
das
dec
dec
ret
dec
mov
xor
fsubrp
mov
pop
push
mov
add
lods
mov
adc
dec
mov
inc
adc
jecxz
scas
movl
ja
mov
adc
in
movsl
loop
mov
aad
mov
lea
jb
and
rcll
adc
into
mov
stos
jecxz
pop
adcl
loopne
bound
insl
data16
daa
pop
mov
inc
scas
sub
iret
adc
lds
lds
daa
hlt
xor
fistl
xchg
mov
aas
subb
in
fsubr
add
scas
out
sub
sub
jmp
sub
or
lea
adc
add
xchg
mov
dec
das
scas
pop
mov
insl
push
cmp
pop
mov
adc
adc
xchg
xchg
call
outsb
xchg
sbb
stos
push
out
out
or
adc
insl
jmp
lahf
sub
mov
or
jb
leave
iret
sbb
mov
jo
sub
jle
pop
stos
lahf
pop
ret
pop
or
mov
adc
imul
mov
adc
ret
or
add
dec
mov
push
jne,pn
loopne
sub
sbb
mov
test
pop
xchg
push
jp
inc
adc
stos
iret
sub
data16
or
lods
dec
sbb
stos
xor
into
mov
pop
or
xor
loope
dec
pop
jae
pop
imul
lret
dec
std
or
lods
mov
cmpsb
mov
mov
sub
cmpsb
cmpsl
pop
test
fists
dec
dec
daa
sub
cmp
in
inc
xor
bound
outsb
cli
dec
in
out
or
cwtl
xchg
add
lret
and
shlb
jno
out
insl
xchg
add
or
aam
cs
int
lds
mov
andb
lock
out
jmp
mov
xchg
fwait
cmpsl
push
cmpsb
stos
dec
clc
cmp
or
jmp
imulb
mov
into
out
cmpsb
fstpt
int
xchg
jnp
or
dec
or
or
xorl
push
outsl
popf
mov
leave
inc
sub
rcr
mov
cmp
mov
loopne
adc
mov
xchg
pop
lods
pmaxsw
pusha
nop
xlat
mov
pop
out
popw
xorl
lret
fisttpll
jne
inc
movsl
stos
test
rolb
inc
lret
out
mov
cmp
push
xor
dec
daa
shlb
mov
mov
incl
push
incl
push
lret
inc
in
mov
stc
sub
push
jmp
or
out
int
addr16
xchg
in
hlt
push
or
sub
and
orb
out
or
xchg
ret
leave
dec
push
cmp
add
adc
enter
mov
xor
xor
loop
int
sub
mov
push
mov
xchg
test
pop
daa
xchg
sub
pop
rorb
dec
adc
or
arpl
popw
or
in
sub
pop
and
or
int
xchg
shll
rcrb
out
addr16
pop
mov
cmp
daa
xor
or
nop
out
mov
mov
inc
pop
add
icebp
ss
jns
cmpsl
cltd
sahf
jecxz
adc
decb
rorl
push
dec
stos
cwtl
shll
mov
mov
cmp
stc
fnstcw
xor
mov
adc
stos
push
lret
sbb
xchg
into
inc
out
ret
movsl
outsl
mov
cmpsl
push
xchg
xor
rcll
das
scas
sub
das
dec
pop
dec
push
xchg
faddl
enter
dec
dec
add
pop
in
hlt
fcomp
xchg
sbb
sub
pop
addr16
out
mov
cmp
sub
roll
dec
dec
das
dec
sub
mov
push
int3
shrb
mov
cmpsb
add
or
inc
mov
aas
sub
lret
push
ljmp
adc
fldcw
xchg
mov
pop
daa
push
cltd
push
pop
xchg
mov
lret
or
das
iret
int3
into
push
ljmp
jns
and
enter
aaa
sbb
xor
pop
inc
imul
add
test
mov
pop
inc
sahf
lret
ss
test
pop
rolb
std
mov
leave
pop
inc
jle,pn
jne
scas
icebp
jo
je
cmp
mov
mov
enter
add
stos
cld
jp
sub
and
dec
adc
out
sti
and
inc
add
out
stos
adc
es
cwtl
faddp
or
push
pop
les
cmovs
hlt
inc
imul
stos
negb
cmpl
daa
adc
std
fistl
pop
out
adc
daa
push
cmpsl
push
dec
rcrb
stos
push
mov
lods
push
cmp
mov
sub
or
insl
sub
stc
or
out
scas
test
lods
push
dec
out
jne
sub
jne
mov
xor
xchg
fwait
inc
mov
maxps
out
ljmp
adc
sbb
aam
movl
repnz
sub
xchg
xchg
mov
cs
xchg
xchg
push
xor
pop
cmp
repnz
jmp
jmp
pop
pop
cs
addr16
adc
or
mov
aam
repz
sub
cmc
xchg
out
sbb
fbld
or
dec
pop
cltd
lahf
xor
xor
ljmp
push
jmp
icebp
jmp
sub
fdivs
lret
data16
call
lods
test
imul
sub
lcall
je
fwait
adc
inc
into
jecxz
sbbb
pop
and
lea
cmp
sbb
insl
mov
in
cmpsl
or
push
mov
into
or
lock
mov
sub
repz
in
sbb
and
int
mov
dec
dec
jp
push
xor
in
outsb
stc
cmp
out
test
popf
test
xor
adcb
in
jmp
pop
lretw
inc
pop
dec
cmpsl
or
sub
xchg
stos
adc
test
ficoml
aad
or
mov
stos
std
dec
fstl
push
movb
add
xchg
test
push
jo
xlat
repz
lods
xor
inc
sub
fcmovnbe
push
xor
out
rorl
fistl
push
cmc
pop
fistpl
xor
pop
mov
xlat
xchg
sub
fildl
mov
xchg
es
jmp
fcomip
in
mov
xor
pop
mov
mov
imul
xchg
stos
pop
int
and
ljmp
mov
sub
ds
data16
jno
lret
sub
jge
sub
or
clc
jecxz
sbb
jns
std
cmp
cmp
cs
pop
push
push
pop
adc
pop
ret
dec
cmp
xchg
lds
test
into
ss
ljmp
xchg
bound
hlt
or
dec
push
sbb
push
addr16
sub
ds
cmpsl
push
push
dec
ret
imul
jge
mov
lods
dec
cmp
out
sub
fisttpl
cs
les
lea
jmp
push
jo
xchg
cmpsb
push
push
mov
jo
ljmp
xchg
jne
adc
adc
add
dec
lret
mov
xchg
push
loop
jns
imul
pop
xchg
push
mov
mov
fsubrs
lods
mov
xchg
iret
jl
xchg
bound
xchg
mov
dec
cmpsl
adc
adc
scas
icebp
xchg
xchg
push
fistl
adc
dec
adc
dec
jo
xchg
jno
into
addr16
out
push
shr
rorl
sub
out
mov
fstl
dec
sub
insb
pushf
cmpsb
lea
adc
mov
adc
mov
lock
or
gs
xchg
inc
lcall
or
mov
into
lahf
dec
adc
pop
mov
xchg
int
xchg
xor
lods
xchg
xchg
xchg
xchg
ret
stos
or
pop
mov
iret
xchg
loopne
push
or
ret
mov
xchg
cmp
in
jnp
mov
mov
xlat
sub
mov
mov
popf
out
aas
stos
imul
out
aas
test
mov
lock
sub
cwtl
inc
insl
push
sahf
lret
in
sub
aas
jge
out
sub
xor
je
mov
add
and
pop
mov
mov
fimull
jl
arpl
inc
cmpsl
orl
insl
xchg
mov
inc
jbe
mov
sbb
add
sub
and
adc
out
popw
and
xchg
cli
push
dec
mov
enter
in
jmp
or
cwtl
or
mov
inc
sub
out
out
dec
cmpsl
fsubrs
mov
out
dec
and
lret
xchg
mov
mov
test
sub
iret
scas
into
or
ret
repz
leave
int
push
sub
mov
imul
repnz
sbb
outsb
mov
movb
or
push
rcl
pmuludq
cmpsl
int
xor
dec
pop
dec
imul
popa
adc
cltd
cltd
addr16
mov
imul
imul
lods
pop
subl
cmpsl
xor
das
pop
insl
lds
push
or
push
dec
leave
fmuls
push
sub
loopne
jae
insl
jns
xchg
scas
push
addr16
imul
adc
lods
leavew
sub
ret
pop
enter
mov
jmp
mov
inc
inc
test
add
lret
dec
or
daa
sbb
stos
adcb
popl
push
xor
sub
add
movsb
or
test
sub
int
jmp
cmc
cs
jns
stc
into
fsubrp
jne
addr16
fiadds
adc
or
sub
in
sbb
movsl
hlt
or
clc
pop
inc
mov
iret
test
and
sub
scas
dec
pop
push
out
ljmp
push
outsl
loopne
mov
mov
pop
leave
icebp
insl
or
inc
adc
out
add
lea
pusha
cmp
lret
subb
inc
cmpsl
sub
or
stos
sbb
lea
sahf
lret
adc
sbb
dec
xor
jle
or
cmpsl
ljmp
aad
bound
sbbl
lret
sub
rcrb
sub
or
in
push
mov
mov
btr
hlt
std
xor
in
scas
imul
or
mov
jge
sbb
int
in
adc
das
mov
ljmp
jo
lret
ds
lock
lds
out
call
outsb
fisttpll
mov
cmp
or
ds
cs
sub
dec
xor
popa
jb
imul
xchg
adc
push
lcall
xor
sub
jmp
out
xor
out
or
and
cwtl
in
cwtl
mov
sub
pop
das
mov
pop
daa
popa
imul
lods
stos
and
inc
dec
adc
cmp
mov
cmp
int
dec
outsb
xor
xchg
or
jb
cld
inc
mov
sub
pop
lods
sub
imul
rolb
xor
sub
daa
bound
std
ljmp
out
pushf
cmp
lret
iret
out
sub
scas
mov
push
imul
sbb
cld
inc
or
jae
out
cmp
lods
fsubrl
das
out
or
adc
lret
scas
sbb
sub
inc
dec
mov
scas
insl
pop
or
icebp
mov
shrl
out
pop
pop
lret
dec
or
imul
pop
jge
or
mov
push
push
insb
iret
cwtl
push
in
sbb
pop
jo
mov
adc
daa
sub
dec
push
dec
in
dec
or
out
in
sub
cwtl
repnz
adc
dec
cs
ljmp
mov
mov
pop
daa
das
xchg
rorb
jno
mov
or
or
pop
sub
and
sub
mov
cs
das
adc
adc
xchg
or
ficomps
jle
xchg
scas
push
or
add
dec
dec
pop
sub
dec
lret
pop
push
dec
mov
pushf
daa
mov
ret
or
lret
xchg
dec
inc
mov
mov
in
outsb
cs
mov
pop
sahf
mov
xor
movsb
leave
iret
loope
mov
adc
data16
sub
xor
adc
inc
dec
ret
dec
scas
loop
xchg
lret
pxor
into
repnz
or
adc
cmp
addr16
pmovmskb
out
pushf
dec
push
ficoms
mov
push
sub
scas
push
fwait
jae
cltd
dec
or
push
mov
imul
push
jmp
in
adc
dec
mov
xor
pop
cli
lock
and
sub
bound
loopne
jmp
xchg
das
lods
dec
or
dec
jmp
and
loope
sub
mov
mov
pop
repnz
je
push
or
mov
notl
mov
dec
stos
sub
sbb
jmp
sub
push
out
outsb
fwait
push
pushf
mov
lods
sub
test
hlt
dec
cmp
or
push
sbb
pushf
mov
lcall
lds
incb
sub
cmpsl
pop
in
bound
inc
and
out
data16
jae
mov
lret
lret
cs
bound
dec
mov
jmp
xor
cmovs
push
aas
or
ret
or
ret
in
and
data16
data16
pop
xchg
lea
pop
sbb
repnz
loopne
pminsw
scas
dec
sub
imul
loop
orl
cmp
scas
and
mov
cmp
dec
test
mov
sub
fcom
imul
dec
mov
repnz
out
and
mov
arpl
test
push
mov
bound
dec
sub
add
push
adc
jecxz
sub
stos
lea
ret
dec
pop
inc
into
dec
dec
or
or
jl
dec
lods
jmp
cltd
sub
or
push
lret
push
faddl
out
aas
and
test
mov
out
les
sub
inc
sub
pop
mov
bound
imulb
push
mov
sahf
dec
adc
adc
xchg
int
xchg
or
in
jb
loope
outsl
out
cltd
ljmp
mov
ret
cwtl
mov
test
jae
xor
mov
test
and
leave
xor
insl
lods
dec
xchg
push
ret
pop
cmpsl
sub
test
shl
lods
lods
and
and
out
or
daa
xor
pop
lds
movsl
lea
rcll
or
mov
je
dec
sbb
call
and
xchg
inc
ja
xchg
ljmp
js
pop
inc
loop
xchg
cmp
insl
mov
sbb
inc
iret
in
rcl
popa
mov
adc
in
addr16
sub
jb
mov
dec
imul
mov
or
out
lods
or
mov
or
sub
lods
outsb
pop
lea
mov
dec
test
lret
dec
jbe
insb
test
mov
push
jno
push
or
sbb
dec
popw
dec
loopne
or
push
inc
insl
pop
cltd
pop
mov
cmpsl
push
shll
jmp
xor
sbb
or
leave
push
dec
stos
test
inc
cmp
sbb
les
movsb
inc
mov
pop
mov
xchg
imul
adc
dec
into
xchg
in
or
adc
inc
leave
mov
shl
out
push
imul
sahf
or
shl
adc
or
xor
or
lds
lcall
das
xchg
iret
sbb
jmp
lea
sbb
cwtl
pop
and
leave
cs
icebp
out
out
mov
dec
add
xorb
jo
jne
push
xchg
mov
dec
or
fisubrs
jecxz
dec
dec
inc
and
xchg
and
mov
sub
sub
outsl
mov
xchg
xchg
mov
test
cli
mov
xchg
add
out
adc
jne
iret
iret
clc
test
mov
jecxz
outsl
shll
popf
subb
push
lods
into
stos
cs
mov
inc
inc
fneni(8087
aaa
adc
xor
mov
imul
pop
scas
sti
sbb
xor
sbb
dec
and
push
push
int3
or
lods
int
iret
sbb
mov
push
scas
icebp
push
mov
push
int
dec
lock
arpl
movsb
ret
scas
xor
add
inc
lret
push
sub
mov
shll
sub
cld
es
adc
mov
sub
cmc
adc
sbb
ret
lods
push
leave
out
loop
outsb
scas
movsl
mov
cmp
inc
jmp
adc
fisubrs
popf
dec
pop
push
test
das
dec
sub
cmp
inc
cs
clc
sub
stos
push
jns
push
je
int
pop
sub
outsl
icebp
xlat
test
mov
out
mov
es
daa
xchg
jge
out
push
xchg
dec
pop
pop
imul
repnz
rorl
lret
pop
daa
pop
sub
push
dec
cwtl
pop
push
in
push
or
pop
sub
out
mov
imul
sub
sub
mov
dec
insl
shr
jns
mov
ss
lret
dec
imul
js
cs
ret
adc
push
out
data16
outsl
sti
xchg
xchg
mov
cmp
movsb
sub
sub
add
push
dec
fldenv
dec
mov
addr16
lret
aam
lret
cmp
mov
sbb
jmp
mov
pop
daa
push
adc
das
xor
sahf
pop
rorl
push
dec
mov
adc
mov
sub
sbb
mov
xor
data16
pextrw
sub
add
lcall
inc
scas
jmp
aaa
add
lea
out
sub
stos
jle
int
mov
sub
or
add
xchg
test
stos
pop
jb
pushl
in
into
adc
hlt
cmp
fists
lret
flds
push
sub
mov
cmpsb
sbb
rcll
push
push
call
pop
or
pusha
add
addr16
daa
ljmp
push
outsl
imul
movsb
out
ljmpw
push
test
xor
int
or
cmp
jbe
pop
or
inc
or
mov
iret
dec
in
data16
jb
loop
jecxz
mov
fwait
jmp
dec
mov
push
or
push
in
adc
adc
mov
out
dec
mov
adc
push
adc
iret
xchg
dec
mov
pop
rcrl
int
sub
fwait
dec
fdiv
dec
int3
out
scas
gs
jp
out
mov
icebp
jns
inc
lods
adc
pop
inc
test
mov
mov
out
cs
mov
lods
cmp
or
cmp
adc
sub
add
inc
jmp
daa
imul
js
or
int
je
sbb
mov
test
cmpsb
bound
inc
out
out
cmp
pop
mov
out
iret
mov
test
mov
ss
dec
jl
gs
mov
rcrb
jge
and
cmpl
fwait
push
arpl
in
cmp
fidivrs
scas
inc
mov
xchg
push
pop
mov
lret
cs
test
sub
stc
or
push
xchg
popf
adc
imul
mov
adc
xchg
or
or
cmp
or
add
jns
ljmp
jecxz
mov
jne
cmpsb
jmp
lods
mov
mov
or
mov
fbld
mov
inc
imul
jmp
push
push
sub
test
inc
imul
lret
stc
movl
mov
cmp
inc
imul
dec
mov
push
or
sbb
popl
add
pop
mov
mov
or
push
inc
daa
data16
rorl
loop
bound
andb
and
cmp
imul
xchg
hlt
xor
sub
jno
or
cwtl
adc
out
stos
ds
out
cmp
dec
adc
sub
scas
mov
push
inc
xchg
daa
or
xchg
test
fildl
jecxz
xor
out
aas
inc
repz
sub
arpl
fs
imul
xchg
xchg
adc
popa
push
sub
adc
lods
iret
xchg
cs
imul
mov
arpl
cmp
mov
dec
and
test
lods
into
mov
mov
sbb
int
mov
cmpsl
mov
sarl
or
push
sub
push
movsl
test
mov
dec
xchg
mov
ret
jg
add
mov
xor
jns
out
out
dec
lock
inc
loop
lret
arpl
les
dec
or
or
push
push
jecxz
xchg
jle
loope
dec
mov
cli
ffreep
rorb
fdivs
sbb
in
jmp
push
lock
stos
lcall
jge
int
jmp
push
sub
mov
in
mov
outsl
leave
fsubrs
push
out
imul
das
data16
push
lds
dec
lcall
xchg
enter
xor
sti
pop
pop
pop
dec
xor
xchg
cmp
adc
lahf
push
mov
test
inc
fsts
sbb
pusha
push
pushf
push
out
jl
xcrypt-ecb
cmpsl
lret
inc
sbb
mov
ficoms
stos
fistpll
test
or
pop
imul
dec
outsb
add
flds
sub
cs
push
test
aam
dec
mov
daa
jmp
inc
sub
cmpsb
iret
adc
movsl
pop
mov
in
sub
xorl
lock
imul
mov
mov
add
and
outsl
popl
pop
out
inc
push
or
pop
dec
in
leave
cwtl
ret
popa
out
jmp
xor
test
dec
insl
dec
push
clc
sub
sbb
popl
jp
dec
fistl
jecxz
or
stos
inc
add
cmp
data16
lcall
loop
push
pop
imulb
mov
dec
dec
arpl
or
stos
xor
fidivrl
sbb
ljmp
insl
mov
fstpt
imul
in
xchg
cmpsb
inc
stos
cmpsl
inc
call
xchg
mov
in
neg
xor
ds
sub
popw
movsl
outsb
xor
pop
or
adc
inc
cmc
mov
cmp
lea
dec
adc
ljmp
mov
dec
pop
sub
inc
xchg
out
pop
dec
ret
mov
ret
xor
inc
sub
sub
ja
pop
xchg
lods
shrb
leave
xchg
dec
push
dec
adc
pop
or
or
jae
out
stos
or
inc
push
sub
pop
sub
popa
jo
arpl
lret
or
jmp
clc
in
push
sub
imul
or
scas
lret
mov
cmp
btc
dec
nopl
or
cwtl
adc
sahf
push
dec
jmp
stc
push
and
mov
into
jp
mov
push
repz
jmp
mov
js
ds
cwtl
sbb
dec
vmwrite
push
outsl
andl
and
xchg
or
inc
push
push
push
test
aam
daa
popf
out
xor
lock
pop
mov
sub
int3
jo
dec
or
dec
loop
dec
sub
into
daa
lcall
inc
das
jno
outsl
fadds
adc
wrmsr
mov
dec
loopne
nop
arpl
cmp
subb
xor
cmpsl
push
ljmp
sub
pop
movsl
cmp
hlt
subl
mov
aad
dec
daa
imul
lret
push
fisttpl
add
imul
into
adc
and
sub
jecxz
sub
xor
scas
das
pop
mov
dec
insb
into
fldenv
dec
jecxz
jmp
ret
cld
add
adc
or
nop
push
sub
or
mov
mov
outsl
mov
test
frstor
dec
jnp
add
sub
lods
dec
pop
sub
mov
scas
mov
cli
sub
arpl
push
mov
mov
dec
pop
add
jge
mov
sub
adc
aas
mov
adc
std
sbb
or
filds
loopne
dec
dec
out
mov
stos
pusha
clc
push
mov
out
add
xlat
into
mov
iret
xchg
sub
lret
push
dec
pop
jae
stc
in
lret
jmp
loop
dec
jg
jp
xor
adc
ret
or
mov
or
imul
or
mov
mov
test
aad
call
dec
out
jns
into
fwait
icebp
in
inc
jb
mov
mov
push
cld
shlb
into
lods
sub
ret
jmp
push
jle
cmpsl
mov
cmp
jmp
cmp
pop
rol
or
leave
ret
test
inc
or
mov
dec
fdivrs
or
mov
sub
out
pop
pop
lock
popl
in
sub
ret
add
scas
daa
int
or
fucomi
jg
xor
mov
fimuls
adc
jno
dec
mov
dec
push
jae
call
mov
icebp
or
sub
ret
adc
xchg
outsl
jp
outsb
mov
mov
orl
sub
sbb
dec
out
xchg
in
dec
ret
in
inc
xchg
aad
icebp
inc
arpl
pop
faddl
sub
push
out
mov
adc
sbb
adc
enter
int
int3
mov
stc
pop
sbb
mov
scas
cmpsl
outsl
pop
add
addr16
mov
sbb
lahf
test
insl
and
pushf
fs
adc
popa
cmpsb
adc
iret
sub
outsl
test
ljmp
pushf
pop
sbb
pop
cs
pop
mov
mov
addr16
mov
arpl
out
xorb
dec
sub
stos
and
push
andb
and
push
lahf
mov
pop
sub
or
pop
cmpsl
pop
cmpsl
add
pop
cs
xlat
dec
jmp
lret
loope
test
sub
insl
cmpsl
dec
dec
xchg
push
out
dec
push
pushf
lods
lock
or
mov
sub
dec
sub
sub
scas
mov
inc
outsb
iret
out
or
adc
dec
lret
mov
in
leave
dec
or
push
push
movb
outsb
imul
mov
in
lods
loop
outsl
inc
lds
cmc
scas
repz
and
mov
mov
or
pop
andl
push
decb
mov
sbb
call
and
or
out
lods
lahf
lods
and
jbe
mov
imul
psraw
sub
jmp
xor
mov
dec
popa
mov
lret
xchg
mov
or
shl
cmpsb
jo
mov
xor
lret
xchg
adc
aaa
movsb
and
jmp
shrl
push
shll
dec
dec
data16
cs
sub
or
psllw
xchg
ret
xchg
or
dec
or
lds
outsl
and
scas
dec
xor
jg
jmp
mov
stc
dec
cld
push
sbb
test
or
iret
mov
imul
adc
mov
mov
xchg
lretw
test
adc
xchg
xor
lods
inc
imul
pop
mov
daa
add
lret
out
dec
das
stos
lods
sbb
xchg
push
or
stos
pop
dec
or
int
cs
inc
cmpsl
xchg
dec
sbb
mov
das
or
out
push
inc
xor
dec
and
sub
mov
push
test
rcrl
xchg
das
inc
xor
stos
or
mov
iretw
popf
dec
stos
mov
or
dec
mov
jmp
sub
repnz
or
adc
int3
push
cwtl
fimuls
std
mov
lods
sub
dec
adc
dec
sub
movsb
scas
into
or
dec
or
and
cmp
pop
test
cmpsl
insb
push
cmp
jmp
cmp
jl
push
or
push
rcrb
xchg
in
sbb
push
das
inc
lret
sub
fcomps
dec
sub
mov
xor
push
mov
pop
push
cmp
push
mov
jmp
stc
cmpsl
inc
xor
into
sub
daa
sub
sub
ljmp
pop
or
mov
dec
imul
add
inc
das
adc
add
sahf
sub
sub
sarl
or
dec
mov
and
sub
movsl
jecxz
push
punpckldq
cmp
mov
ret
aam
sbb
lret
iret
xchg
mulb
inc
loop
jne
out
movb
pop
int
lds
xchg
mov
outsb
xor
loope
stos
das
js
ficoms
loop
and
mov
stos
push
out
sub
push
and
iret
test
lcall
bound
dec
out
cmovs
inc
sub
daa
inc
jmp
fbld
lods
stos
out
out
int3
scas
push
jbe
out
mov
cs
bound
xor
aam
rorb
push
pop
mov
roll
pop
int
ljmp
mov
xchg
mov
or
pop
fwait
imul
aam
test
icebp
push
lret
and
or
push
or
sbb
dec
stos
out
dec
push
cmp
dec
xchg
cs
orl
inc
ret
dec
lret
adc
imul
pop
sub
pusha
inc
in
add
adc
outsb
out
adc
mov
imul
dec
sbb
or
mov
rorl
dec
add
iret
das
int
test
ljmp
and
mov
or
dec
xor
pusha
int
add
xchg
xchg
cltd
test
ret
insb
adc
aas
mov
sbb
das
outsl
fucomp
test
dec
add
testb
scas
iret
inc
shll
dec
lret
xchg
dec
int
push
imul
pop
and
outsl
jmp
xlat
sub
pop
or
jno
sub
dec
aad
mov
pop
inc
add
sbb
fidivl
and
icebp
mov
cmpsb
jecxz
lret
ret
push
call
out
ljmp
mov
out
and
addr16
and
or
push
in
xor
pop
test
pushf
mov
int
bound
leave
lods
mov
fists
inc
outsb
stos
add
insl
or
push
out
dec
or
addr16
outsl
stos
imul
cs
mov
or
push
int
sub
jmp
jo
fstl
adc
inc
dec
pop
dec
or
mov
push
pop
xor
and
cmpsl
cmp
pop
test
outsl
lahf
pop
mov
push
icebp
add
xor
pusha
loop
das
pop
push
xchg
out
xchg
in
faddp
in
in
aad
push
cmc
aam
out
sar
scas
or
pop
lea
int
mov
sub
outsl
mov
bswap
cmp
daa
fs
mov
xor
cs
icebp
cld
or
sub
out
fwait
pop
inc
mov
adc
push
in
popf
mov
inc
shll
scas
push
cmp
dec
pop
shrb
dec
test
push
xor
push
jp
js
xchg
icebp
mov
mov
ja
sub
sub
cmp
subl
or
xor
imul
out
adc
in
jmp
sub
mov
lahf
ds
sub
ljmp
test
pop
or
ret
outsl
xchg
out
dec
test
leave
sub
scas
push
and
lds
stos
ss
movl
gs
inc
int
mov
out
ljmpw
sub
xchg
xor
sub
orl
cs
outsb
stos
das
jg
fistl
xchg
cld
int3
sbb
push
or
out
dec
ss
mov
daa
mov
mov
repnz
xor
enter
push
popl
dec
sbb
or
xchg
pushf
adc
mov
daa
mov
stos
pop
loope
dec
mov
lret
sub
arpl
push
insl
push
ret
movb
adc
mov
mov
xchg
inc
stos
aam
dec
mov
jge
jb
adc
stos
repz
ds
iret
ret
pop
jmp
ret
dec
loope
out
movl
outsl
adc
loopne
jge
ret
inc
out
test
add
clc
mov
rorb
adc
lea
insl
daa
ret
std
xchg
inc
push
lret
leave
scas
bsr
sub
push
scas
mov
or
dec
mov
aam
imul
jmp
pop
pop
lret
out
push
bound
popa
and
cmpsl
sub
push
sub
out
test
rcl
test
sub
in
add
and
mov
packuswb
push
pop
fistl
stos
dec
out
sbb
scas
ljmp
dec
mov
test
or
mov
mov
test
mov
xchg
jo
lds
push
movsb
adc
scas
sub
hlt
fsubrs
out
outsb
add
adc
dec
outsb
push
stc
inc
add
dec
popf
mov
mov
sub
sub
dec
stos
cmp
scas
dec
xchg
in
arpl
and
xadd
les
dec
sub
insl
stos
out
sbb
adc
das
inc
out
or
mov
lds
and
jmp
sarb
or
or
test
xchg
mov
aaa
push
mov
ud2
adc
sub
adc
mov
add
pop
cli
mov
icebp
push
mulb
push
jae
inc
fbld
xchg
enter
cwtl
ljmp
or
sbb
pop
adc
mov
or
lods
iret
sub
nop
push
sbb
lret
or
out
lds
xchg
addl
or
mov
aas
jp
mov
out
mov
sti
bound
jmp
cmp
xorl
out
push
jbe
inc
mov
pop
pop
adc
inc
adc
daa
jns
or
out
aam
adc
adc
stos
adc
test
in
bound
lret
mov
jb
out
ljmp
shrb
add
out
outsl
pop
leave
addl
cmpsl
loope
scas
pop
ljmp
test
dec
out
out
movl
pop
sub
or
sub
dec
pop
mov
enter
int3
outsb
add
nop
in
mov
sbb
add
mov
mov
sahf
das
add
daa
push
dec
shufps
sub
cs
push
lods
fsubrs
xor
leave
xor
jne
jbe
addr16
pop
sub
in
out
sub
dec
add
sub
pop
das
jmp
imul
aas
pmuludq
sub
out
dec
cwtl
push
dec
ret
into
cmovg
loope
leave
lea
scas
addl
or
inc
test
test
add
or
lahf
push
dec
inc
ljmp
xchg
and
xor
out
fs
pop
cli
insl
sbb
cs
and
or
fwait
lret
mov
popl
lret
or
out
imul
dec
jg
mov
cmpsl
add
ret
dec
and
into
and
cmova
or
mov
dec
mov
sub
iret
pop
hlt
or
leave
ss
or
ja
xchg
sahf
je
outsl
iret
int3
data16
in
jmp
adc
dec
into
dec
scas
push
lea
jnp
mov
add
or
and
jmp
lods
jnp
neg
inc
dec
bswap
cs
mov
dec
decb
sub
mov
arpl
add
cs
dec
in
out
cmpsl
push
movsb
sub
or
pusha
movsl
stos
mov
orl
push
shl
xchg
adc
or
xchg
inc
mov
leave
mov
cltd
cltd
fs
mov
test
cmpsb
int
shlb
or
iret
out
mov
outsb
dec
stc
hlt
loop
jnp
mov
mov
dec
lcall
xor
jg
dec
out
sbb
and
mov
dec
dec
nop
mov
inc
xchg
add
ret
scas
mov
scas
mov
jns
test
out
out
or
into
popa
inc
daa
iret
lret
addr16
mov
jmp
outsl
punpckhbw
popf
pop
loope
scas
sub
clc
sbb
adc
pop
jl
adc
jne
pop
stos
or
or
mov
mov
cmp
jle
stos
cltd
cltd
stc
add
cmpsl
mov
dec
mov
or
aas
inc
into
mov
sub
mov
dec
inc
dec
or
daa
cmp
cld
cld
mov
icebp
icebp
jns
scas
mov
ds
adc
dec
out
sub
and
int3
or
std
lods
mov
int3
out
aam
das
cmp
daa
incb
xor
adc
dec
pop
push
pop
jmp
xchg
scas
xor
loop
ljmp
mov
jnp
mov
jl
push
sub
outsb
sbb
push
jne
dec
mov
std
and
xchg
push
jnp
sbb
sub
lahf
jmp
mov
push
jmp
imul
daa
jbe
test
sub
rcpps
mov
adc
test
test
in
push
int
inc
aas
adc
jecxz
sub
cmp
mov
test
fisttpll
cmp
dec
ds
lcall
ds
aam
into
xor
ljmp
fdiv
sbb
mov
dec
and
xchg
sub
pop
xor
mov
inc
or
sub
jmp
iret
int
dec
pop
pop
out
call
dec
jmp
bound
lods
sbb
stos
sub
cs
xor
cli
xchg
imul
test
jp
pop
stos
shrb
in
cmpsl
imul
xchg
pop
sbb
jne
dec
outsl
jecxz
xor
test
in
mov
or
sub
xor
pop
fnstsw
inc
out
loopne
cmp
adc
pop
dec
sub
data16
dec
sub
sub
imul
sub
js
push
dec
stos
mov
mov
out
sbb
outsl
or
adc
sahf
sub
fldenv
lods
add
jmp
or
lea
stos
pop
adc
or
pop
or
cmp
sub
inc
insl
mov
test
pop
out
leave
lods
or
push
cmp
jno
mov
cs
or
sbb
lea
sub
dec
arpl
test
or
scas
out
andl
or
mov
xor
cmp
ss
shrb
cs
mov
out
or
jecxz
or
aam
int
adc
sub
mov
lret
test
out
addr16
arpl
aas
ljmp
push
mov
cmp
shrb
adc
stos
sub
iret
lds
add
dec
inc
lret
or
test
lea
or
xchg
dec
mov
or
push
mov
xor
xorl
insl
mov
or
xchg
push
mov
scas
add
inc
sub
sub
in
out
jo
das
mov
psrlw
mov
fs
add
or
xchg
inc
jmp
movsb
jmp
push
addr16
cmp
popa
mov
sub
ljmp
push
xchg
xor
dec
cmp
mov
pop
leave
push
or
push
arpl
pop
movsl
jmp
lods
scas
test
xor
mov
das
stos
fucomp
pop
repnz
fldt
arpl
ss
and
or
pop
stos
sbb
ftst
das
or
jmp
cmp
out
mov
bswap
adc
fisttpll
adc
cs
testl
std
mov
and
cltd
int3
cwtl
clc
or
and
mov
dec
sub
out
mov
or
cmp
push
or
or
imul
adc
mov
dec
loopne
push
repz
jo
push
out
out
pusha
scas
mov
jmp
dec
or
dec
xchg
or
push
and
int
cmpsb
xor
enter
fs
xor
out
in
out
int
inc
scas
xchg
imul
das
lret
mov
jno
or
shl
push
in
dec
push
rdpmc
into
pop
aam
gs
xor
pop
test
or
dec
pop
ds
mov
inc
imul
adc
adc
pop
fisttpll
sbb
loope
jmp
fisttps
ret
es
fistl
and
out
or
insl
mov
in
and
sbb
jnp
loopne
inc
lret
out
cmpsl
out
sub
repz
jbe
imul
das
lods
lock
sub
imul
ret
out
outsb
or
dec
out
inc
int
xchg
imul
mov
inc
inc
sub
arpl
or
xchg
mov
mov
loop
jg
inc
pushf
sub
inc
push
push
adc
dec
out
out
xor
subl
cltd
inc
icebp
sub
jae
sub
adcb
push
dec
hlt
lahf
pop
xor
sbb
mov
cmp
clc
cmp
sbb
dec
adc
mov
cmovl
loope
sub
mov
bound
imul
daa
sub
push
jg
mov
fnstenv
cltd
loopne
movsb
or
inc
inc
mov
test
jo
xor
jmp
arpl
mov
dec
aam
adc
mov
test
loopne
arpl
stos
sahf
cmp
dec
inc
jecxz
push
jb
mov
int3
dec
out
mov
shrb
push
outsb
daa
das
jge
jmp
stc
pop
xor
xor
mov
fmull
out
or
inc
pop
xchg
adc
icebp
out
lods
push
test
sub
dec
out
sbb
sub
dec
stos
scas
xor
and
adc
sub
sbb
insl
mov
or
push
push
push
out
das
insl
pop
pop
or
repz
cmc
push
cmp
xchg
dec
cmp
adc
cwtl
lret
loop
enter
enter
das
outsb
push
cmp
test
leave
dec
or
in
inc
outsb
lret
leave
fists
iret
jecxz
push
adc
insl
fidivs
xor
push
shlb
fwait
into
jae
insl
mov
out
sahf
lods
and
push
dec
sub
dec
jmp
dec
add
or
nop
or
call
sbb
xchg
jno
pop
int
data16
add
inc
dec
lods
sub
mov
and
mov
out
les
sbb
push
sub
pop
test
mov
or
inc
outsb
dec
stos
pusha
inc
addl
xchg
xor
push
lds
out
leave
movsb
or
iret
test
daa
dec
pop
stc
imul
push
fucomp
push
in
sti
and
shlb
dec
mov
cs
lcall
in
test
test
and
insl
xchg
imul
xor
add
iret
xor
shll
sub
sub
addr16
in
std
mov
stos
xchg
arpl
or
mov
dec
sahf
pop
cmp
mov
dec
lds
int
sub
sub
sub
or
cmp
push
or
cmp
push
mov
xchg
or
mov
xchg
sahf
lret
dec
scas
or
test
sub
rsm
fists
xorb
sub
adc
les
in
xchg
sub
ljmp
dec
sub
adc
jo
pop
pushf
mov
xchg
push
fimull
iret
arpl
dec
mov
xchg
mov
cmp
dec
loope
pop
dec
lret
in
cmp
sub
cld
into
push
and
scas
stos
push
lods
addr16
xcrypt-ofb
cmpsl
imul
int
mov
add
or
mov
or
int3
cmpsl
repnz
cli
inc
adc
mov
xor
dec
pop
repnz
lret
sub
jns
lods
aad
pop
sbb
mov
scas
fildl
pop
adc
dec
out
lods
or
in
xchg
mov
ret
lret
les
pusha
ret
push
adc
pop
inc
or
or
lahf
cld
test
and
pop
xlat
or
inc
and
imul
ret
imul
xchg
test
mov
fcomps
or
loopne
imul
or
sbb
ret
jmp
scas
xor
loopne
mov
jno
or
mov
mov
cmpsl
xor
popl
xchg
ljmp
pop
ds
mov
mov
fmulp
dec
orps
rorl
sbb
push
push
test
ljmp
inc
and
xor
cmpsl
prefetch
inc
ret
push
in
xchg
jns
xchg
push
push
loopne
aaa
and
pop
sbb
addr16
fwait
test
dec
or
mov
dec
loope
push
sub
mov
in
adc
pop
fisttpl
into
lret
fisttpll
jb
push
mov
jmp
out
inc
pop
aam
ret
sub
jno
das
push
cwtl
divl
daa
jle
or
push
inc
arpl
lock
lret
add
sub
xchg
or
dec
imul
adc
or
mov
mov
xchg
enter
dec
sub
xchg
and
mov
enter
and
sbbb
stos
aas
sub
movsb
iret
jns
outsl
scas
pop
adc
push
jmp
movsb
or
scas
loope
dec
cwtl
bound
adc
iret
push
scas
outsl
jbe
aaa
test
mov
test
pushf
cmpsb
sub
cmp
and
or
or
jns
test
sub
outsl
out
out
scas
push
push
sub
cmp
data16
and
jge
sahf
lods
adc
pop
push
adc
pop
fildll
dec
jmp
sub
cs
or
lods
insl
lds
test
lds
andl
pusha
je
out
fld
pop
fldcw
cli
clc
dec
in
inc
sub
inc
push
inc
lret
adc
push
leave
push
mov
pop
mov
out
in
or
xchg
shrb
hlt
shll
lret
imul
out
icebp
in
in
lret
ljmp
ret
fcoml
int
or
xor
in
push
or
push
jb
fmul
icebp
js
xchg
lret
jg
push
or
adc
dec
sub
lods
leave
icebp
cmp
imul
add
cmp
jno
lret
cwtl
ljmp
aam
les
test
addr16
out
xchg
jmp
inc
dec
leave
jno
data16
mov
xchg
stc
in
push
inc
xor
cmovg
adc
lret
addl
lret
fwait
or
cld
test
rol
pushf
enter
xor
dec
push
dec
scas
pop
push
lds
stc
repnz
cmpsl
in
mov
push
cltd
or
aam
mov
rcll
push
pop
dec
dec
adc
push
das
adc
dec
jne
mov
daa
pop
pop
into
sub
or
test
leave
push
test
hlt
xor
shrd
or
pop
sub
subl
mov
or
push
sub
mov
sub
jo
pop
cs
or
or
outsl
sub
cvttps2pi
imul
lock
jmp
int3
or
mov
jo
push
mov
xor
pop
xchg
ret
sub
mov
adc
das
lea
adcb
inc
lret
loope
sub
stos
in
xchg
out
leave
cmp
ljmp
pop
pusha
xor
pop
cld
test
jae
js
movsl
or
pop
sbb
dec
mov
imul
test
xchg
xchg
imul
dec
flds
and
das
pop
dec
push
push
mov
mov
fbld
xor
mov
push
or
push
outsl
stos
or
mov
or
dec
mov
dec
adc
subl
sub
lods
dec
sbb
insl
in
in
les
bound
and
adc
faddl
cmp
out
pushf
jmp
out
out
dec
adc
ret
xor
lea
or
push
mov
imul
cmpsl
test
or
ds
stos
jmp
cli
or
outsb
rcrb
inc
in
stos
dec
sbb
xchg
call
xchg
shrb
rol
xchg
in
arpl
movb
push
lods
in
sbb
scas
das
mov
jg
mov
dec
or
arpl
push
push
fisubs
data16
sub
or
mov
sub
cmp
sub
ss
mov
sbb
pushf
sub
mov
cmc
sub
or
arpl
and
leave
mov
cmp
mov
mov
xor
xor
cmp
int
mov
mov
nop
or
pop
mov
xchg
cmpsl
jecxz,pt
bound
icebp
cmp
mov
adc
push
aam
ror
outsl
sbb
mov
inc
pop
aad
xlat
enter
scas
scas
movsl
or
int3
mov
mov
pop
mov
adc
xor
scas
mov
sbb
dec
out
dec
mov
lcall
addr16
sub
inc
dec
ljmp
pusha
nop
fwait
xchg
sbb
lret
ss
adc
ss
imul
xor
mov
scas
ljmp
imul
into
stos
movsb
psubsw
inc
leave
sub
sub
dec
dec
sub
mov
pop
arpl
mov
jmp
inc
sub
sub
mov
push
push
insl
ss
dec
xchg
sbb
xor
lods
daa
jo
mov
adc
push
mov
pop
inc
add
inc
lea
and
pop
popa
cmp
jmp
xor
mov
popa
pop
clc
jecxz,pn
dec
sub
imul
sbb
inc
sbb
out
scas
ljmp
into
sub
adc
dec
ljmp
imul
inc
rorl
data16
arpl
mov
push
imul
sub
test
in
mov
fcomip
bound
shlb
jmp
faddl
dec
adc
sbb
dec
adc
pop
mov
push
and
or
lret
adc
xchg
imul
leave
dec
add
mov
stos
arpl
mov
push
ret
je
xchg
or
or
test
mov
orb
jmp
bound
std
pop
shrb
or
out
imul
or
inc
les
mov
cmp
rorl
shl
scas
loop
outsl
mulb
icebp
sub
out
imul
dec
cli
movsb
das
or
int
mov
stos
lret
cmp
inc
push
adc
lret
sbb
icebp
pop
dec
or
addl
xchg
test
xchg
neg
jo
popf
and
rclb
lods
test
int
into
in
or
sub
mov
out
cmp
shll
jo
pusha
sub
in
out
stc
lcall
dec
je
push
mov
xor
scas
dec
faddl
sbb
pop
inc
mov
jmp
mov
loop
insl
fmul
leave
dec
mov
iret
arpl
xchg
mulb
mov
shlb
shld
jl
sbb
int
mov
and
lcall
imul
xchg
xchg
mov
out
xchg
inc
lods
or
mov
insl
push
jo
push
xchg
sub
imul
or
cmpsl
xchg
jecxz
or
dec
arpl
ret
mov
dec
aam
dec
sub
aaa
dec
movq
dec
mov
or
lds
push
mov
jno
or
in
mov
lret
dec
fmull
dec
add
movsl
subb
mov
or
or
sbb
stos
dec
out
jmp
ljmp
or
dec
arpl
dec
out
mov
daa
lods
adc
pop
xchg
iret
les
mov
push
sbb
cmpsl
mov
mov
push
sub
jmp
sub
jge
cmp
mov
sub
xchg
outsl
cmp
mov
fldenv
sub
outsb
jnp
fisttps
hlt
nop
mov
push
loope
dec
stos
leave
mov
push
lret
mov
sub
push
sub
mov
or
out
cmp
outsl
dec
test
scas
push
pop
subl
xchg
xchg
adc
loope
outsl
sub
fxch
outsb
and
iret
bound
bound
test
in
clc
xor
mov
in
addr16
iret
jo
sub
dec
mov
lods
sub
push
mov
orl
sub
lods
in
dec
in
cmc
psubq
ljmp
sbb
icebp
lea
js
or
and
mov
sub
in
outsl
push
mov
out
mov
test
inc
add
add
mov
sub
call
lods
pop
push
ret
ret
lcall
push
xchg
sub
push
sub
lret
lds
roll
and
addr16
and
scas
out
jmp
int
lahf
push
mov
xchg
imul
lret
dec
jns
mov
jno
into
jecxz
ficomps
stos
or
sub
sub
jmp
jae
in
pop
nop
outsl
stos
xor
pop
adc
dec
iret
adc
or
sbb
lret
dec
sbbl
cwtl
pop
into
popa
fnstsw
sub
sub
or
dec
or
cs
arpl
les
fsubs
out
mov
pop
stc
jmp
daa
das
scas
xor
and
out
cmpsl
shl
decb
push
out
test
ljmp
xchg
or
lods
or
cmpsl
repz
mov
lret
mov
loopne
les
ljmp
mov
gs
pop
cltd
cmp
outsl
dec
pop
adc
cs
cmpsl
lret
lahf
mov
orb
mov
xchg
dec
and
jns
cmp
adc
and
or
sub
mov
popa
insl
sub
dec
add
iret
stos
daa
jmp
mov
xchg
out
into
ljmp
outsl
or
fsubrl
cli
push
adc
out
dec
cmp
cmpsl
rcr
mov
mov
ret
popl
sbb
in
test
adc
dec
mov
pop
add
incb
mov
xchg
bound
adc
dec
sub
inc
lods
out
mov
inc
mov
adc
scas
or
dec
sub
push
dec
out
fiaddl
xchg
sub
dec
fsubrl
cmp
daa
cltd
repz
outsl
femms
adc
inc
jmp
out
cltd
sub
out
outsb
subl
stc
mov
loope
mov
lock
shll
or
jb
loop
test
outsb
icebp
mov
or
cmp
mov
icebp
mov
shll
mov
gs
dec
mov
outsb
movb
push
lds
ret
dec
ret
jbe
dec
cmp
jp
pop
dec
sub
or
rol
scas
stos
sbb
mov
xchg
dec
inc
xchg
xor
ss
in
xchg
jmp
repnz
hlt
mov
or
stos
jo
or
sbb
add
scas
pop
and
iret
add
addr16
imul
xor
or
test
dec
shll
les
push
mov
xor
dec
sbb
mov
cmp
sbb
or
cmp
cs
dec
scas
pop
icebp
arpl
out
call
adc
popw
out
push
shr
jmp
inc
lods
dec
frndint
pop
clc
lock
inc
dec
push
inc
pop
daa
cmpsl
push
stc
roll
jmp
outsl
pop
adc
dec
addr16
test
iret
in
hlt
into
mov
movsb
test
cmpsb
lea
mov
imul
clc
sbbl
add
xchg
pop
adc
aas
pushf
das
in
dec
popa
or
sub
or
mov
push
data16
insb
popa
xor
imul
dec
sub
lcall
jb
dec
addr16
leave
lret
call
inc
pop
or
mov
lock
or
lret
jae
pand
addr16
dec
imul
sub
dec
popa
lret
leave
scas
imul
ljmp
movl
xchg
dec
and
addr16
out
sub
inc
cmpsl
and
imul
cs
sahf
dec
push
unpcklps
cld
adc
mov
out
ret
pop
andb
adc
aas
fimull
lcall
inc
pop
into
cwtl
or
or
dec
inc
sbbb
cmovbe
push
mov
iret
dec
in
mov
sub
jmp
cmp
fld
xchg
shrl
test
mov
push
xor
mov
dec
out
lock
scas
pop
inc
mov
adc
ja
vfrczpd
daa
adc
out
ljmp
insl
dec
or
orl
bound
or
pop
std
leave
aad
arpl
sub
stos
xor
sbb
dec
mov
sbb
movsl
mov
mov
arpl
sub
sbb
in
xor
mov
out
mov
push
sub
mov
divb
jmp
inc
push
pop
dec
inc
adc
dec
inc
dec
or
dec
mov
push
cwtl
or
or
xchg
push
or
mov
push
jbe
sbb
pop
adc
or
mov
mov
aad
nop
inc
dec
push
aam
das
imul
scas
out
lods
addr16
xor
jmp
fistps
push
iret
sub
test
stos
fisubrs
jge
bound
imul
mov
pop
push
aaa
sub
sub
scas
test
mov
shrl
push
clc
ret
dec
push
sbb
or
call
pop
jae
out
cwtl
add
dec
outsb
adc
jo
sbb
enter
inc
lods
fildll
dec
sti
or
outsb
mov
or
dec
or
ljmp
inc
nopl
daa
out
fcmovne
and
sub
xchg
mov
out
subps
scas
aaa
call
fistl
arpl
sub
mov
push
imul
imul
xor
ljmp
and
cwtl
scas
sbb
call
scas
loop
ljmp
adc
or
sub
add
mov
lret
push
xchg
insb
xchg
jl
es
cli
or
int3
cwtl
lret
pop
or
mov
push
sub
ret
pop
mov
sub
iret
sub
jb
adc
stos
xor
lcall
cmp
jmp
fildll
test
pop
in
and
inc
lea
imul
leave
inc
push
dec
in
js
pop
or
ljmp
daa
or
stos
sub
loopne
mov
fldl
and
xorl
cmpsb
outsl
scas
dec
or
add
iret
bts
adc
adc
sbb
adc
mov
dec
push
inc
mov
pop
add
mov
bound
add
mov
xchg
das
dec
ss
sbb
jl
daa
pusha
and
ret
in
out
push
leave
mov
lret
movsb
aad
push
mov
fmulp
inc
out
out
into
and
stos
lods
mov
sub
lods
adc
or
mov
aam
xchg
sub
adc
xchg
loope
mov
pop
cmpsb
cmp
dec
es
stos
call
dec
pop
out
sub
mov
mov
in
adc
or
cli
lret
pop
in
setae
jecxz
iret
js
out
jmp
or
mov
sub
sbb
scas
out
push
sub
mov
dec
sub
pop
ret
ss
lahf
icebp
subl
int3
dec
mov
push
adc
outsb
cmp
dec
xchg
lds
dec
dec
lahf
loopne
orl
jmp
lea
xchg
adc
xchg
inc
scas
outsl
and
pop
and
mov
outsb
stc
popf
mov
imull
dec
mov
dec
xchg
jo
stos
mov
adc
sub
jmp
lret
incb
movb
rorb
in
cmc
loop
insl
mov
or
fnstenv
addr16
outsb
sub
sub
sub
imul
sub
ljmp
sbb
leave
scas
loop
mov
lret
sub
sub
stos
or
xor
loop
data16
or
jns
push
daa
dec
mov
scas
xchg
mov
subb
and
scas
ror
out
dec
popa
mov
and
lcall
int
jp
lods
int3
aad
dec
repnz
xchg
inc
push
out
movsb
xchg
or
or
and
pop
fildll
dec
iret
jne
std
push
jmp
mov
jmp
addl
xor
frstor
into
rorb
sub
sti
adcb
aaa
in
sub
addl
imul
adc
mov
pop
adc
dec
sub
das
push
loope
popf
into
xchg
dec
jno
scas
out
dec
sarb
imul
dec
into
sub
bound
jmp
mov
std
daa
sub
adc
mov
cmpl
lahf
cltd
inc
sbb
cmp
outsb
lods
int
adc
push
pop
cmp
mov
mov
lret
pop
cmpsl
lret
shl
ljmp
xchg
mov
xchg
insb
adc
push
push
rcll
je
test
or
jle,pn
jno
pop
mov
enter
nop
dec
call
out
mov
mov
jns
test
js
or
pop
addr16
sbb
pop
push
xor
addr16
fwait
mov
aas
push
push
js
outsl
mov
sub
mov
adc
movsb
pushf
popf
mov
lds
iret
and
pop
loop
xlat
mov
lods
sbb
testl
or
dec
lret
lea
scas
pusha
pop
jbe
js
mov
ljmp
cs
sub
lea
shrb
fstl
dec
lods
pop
mov
or
jbe
mov
adc
das
jbe
cmc
scas
or
cmp
repnz
mov
invd
adc
outsl
in
shrb
jge
mov
orb
arpl
data16
push
and
or
sbb
scas
iret
push
into
or
test
std
in
repz
addr16
pop
pop
in
test
lret
jbe
adc
push
and
js
pushf
inc
dec
dec
sti
fidivrl
sbb
scas
out
cmpb
push
dec
popf
add
dec
mov
movsl
test
in
or
pop
insl
or
fs
xchg
daa
pop
repz
aaa
addr16
cwtl
jp
pop
or
imul
pop
out
loop
loope
int
iret
push
into
dec
push
inc
movsl
imul
clc
and
add
jle
fwait
jns
mov
mov
or
test
out
movsl
pop
mov
xchg
dec
dec
lret
pop
shr
mov
loopew
into
data16
lds
negl
adc
dec
dec
int
inc
lret
test
out
or
lods
pop
mov
data16
push
inc
hlt
adc
sub
out
jge
scas
loope
dec
in
notb
daa
sub
imul
ss
cs
fisubs
jmp
or
sub
iret
int3
xchg
ljmp
or
push
or
adc
and
stos
sub
dec
clc
inc
popf
lea
sbb
mov
or
imul
sub
add
dec
mov
fistl
scas
in
daa
movsb
imul
arpl
mov
and
sub
repnz
dec
pop
cmp
adc
mov
inc
inc
mov
cmovne
int
sub
adc
daa
pop
mov
scas
pop
lods
jg
shlb
nop
jo
negl
fistpl
jecxz
in
dec
sub
push
out
or
imul
mov
jmp
sub
mov
inc
pop
fildll
outsb
adc
pop
imul
pop
mov
cmpsb
mov
fwait
and
sub
dec
into
sbbl
imul
push
inc
lret
lods
insl
das
or
push
pop
lret
rorb
repnz
std
cwtl
and
out
or
cmpsl
xchg
icebp
setno
enter
outsl
lods
das
lock
push
hlt
nop
aas
and
sub
inc
outsl
sub
pop
pop
jmp
in
loop
jae
dec
fwait
dec
shrl
dec
rdtsc
fldt
pop
dec
dec
mov
mov
sub
out
hlt
mov
xor
add
adc
leave
outsb
mov
pop
adc
push
dec
mov
js
adc
pop
jl
push
int3
dec
insl
jge
pop
das
insl
inc
or
push
jg
scas
or
scas
mov
adc
mov
ret
sub
jae
push
push
stos
dec
cmpsb
and
ret
scas
data16
sahf
stos
xorb
outsb
scas
inc
in
fs
cltd
mov
add
fsubp
lret
mov
dec
inc
sub
ljmp
or
out
mov
push
sub
out
fwait
push
sbbl
popf
outsl
movsl
cmp
cmpsl
or
pop
pop
inc
cmp
xchg
mov
xchg
cwtl
movsl
lahf
ffreep
iret
pop
mov
test
cmp
or
mov
lret
dec
or
or
lods
cmp
adc
out
pop
xchg
fisubrs
mov
repnz
pop
adc
in
aas
dec
pop
push
cli
push
mov
xchg
arpl
outsb
int3
cltd
add
test
adc
mov
or
sbb
or
push
adc
or
xor
add
out
movl
or
xor
stos
subl
dec
nop
cmp
xchg
mov
mov
imul
push
in
push
lock
imul
in
pop
daa
mov
sub
addr16
adc
stos
data16
and
and
dec
mov
les
stos
inc
aaa
xchg
sub
fisttpl
adc
ret
lret
bound
dec
lods
adc
push
xchg
cmp
dec
enter
int
pusha
outsl
add
push
shl
ljmp
loope
push
jnp,pn
or
out
add
sub
into
stos
movlhps
arpl
jmp
outsl
outsb
mov
xor
loope
test
scas
mov
cmp
mov
insl
mov
or
jmp
ljmp
sahf
pavgw
cmpsl
ret
jb
in
fldl2e
ss
das
data16
mov
jns
xchg
inc
adc
insl
dec
jmp
mov
push
push
xor
pop
and
pop
push
jmp
xchg
fst
dec
test
mov
leave
fsub
pusha
dec
out
lret
inc
and
movsl
inc
in
pop
out
cmpl
jp
mov
outsl
clc
shlb
outsb
mov
dec
out
shrl
orb
data16
mov
loop
pop
cwtl
mov
mov
test
adc
mov
cltd
inc
out
das
inc
sbb
mov
loope
leave
cmpsl
xchg
dec
xchg
insl
or
inc
pop
aam
cmp
jbe
adc
dec
adc
jle
mov
xchg
mov
repnz
lods
push
addb
leave
in
cmpsl
outsl
dec
xchg
push
adc
and
pop
imul
push
or
inc
in
scas
or
push
lods
loop
dec
push
jmp
repnz
negl
std
jno
mov
push
subb
out
lods
mov
loop
dec
mov
dec
icebp
jecxz
and
xchg
scas
pop
dec
out
daa
cmpsb
scas
outsl
iret
ja
lea
mov
dec
fadds
push
or
lods
push
sub
xor
stos
in
push
push
cmpsl
clc
bound
dec
inc
push
fiadds
les
in
testl
cmp
jmp
adc
rorl
dec
mov
ret
mov
scas
dec
mov
xchg
xor
out
pop
movsl
push
or
pop
pop
rol
out
push
data16
loope
leave
cmp
inc
or
in
dec
sub
pop
push
and
push
das
insl
or
lods
arpl
sub
dec
xor
daa
in
pop
cmp
jmp
cmp
sbb
in
sub
mov
out
mov
xor
mov
in
shll
xchg
pop
daa
sbb
adc
mov
push
pop
push
int
inc
test
cmp
dec
stos
sub
or
inc
inc
jmp
shl
testl
insl
mov
and
pop
ror
test
mov
jmp
xchg
cmp
adc
pop
mov
mov
mov
test
push
lds
push
add
jne
pushf
mov
andb
mov
adc
loope
xor
push
outsl
outsb
dec
aaa
out
sub
mov
push
ret
fcmovb
popf
stos
iret
sbb
mov
sub
mov
addr16
push
pushf
imul
dec
mov
jnp
and
mov
lods
cs
jg
push
xchg
fwait
int3
inc
repz
inc
pop
inc
lods
dec
push
and
jmp
or
push
push
int
dec
addr16
xchg
push
sub
scas
arpl
jno
out
repz
pop
arpl
lret
pop
inc
push
repnz
lods
lea
push
adc
stos
or
sub
jmp
test
fisttpll
out
pop
or
sub
loop
mov
cvtpi2ps
sub
xor
xor
or
lods
cmp
jp
iret
insl
int
sub
lods
lea
rcrb
jecxz
and
mov
iret
push
inc
stos
daa
or
in
roll
in
imul
lahf
scas
jb
mov
daa
lods
loope
xor
lea
in
mov
cmp
scas
xchg
mov
into
lods
xchg
lods
inc
xchg
test
out
dec
or
mov
call
sbb
ljmp
dec
or
adc
repz
les
dec
aam
push
ljmp
mov
lret
pop
pop
and
loop
scas
cmpl
pop
arpl
sbb
jmp
or
rol
jge
dec
imul
out
push
push
lds
xchg
lds
stos
out
decl
shrl
inc
insb
dec
xor
arpl
mov
jne
int
or
pop
popa
cwtl
scas
in
cmp
mov
pop
hlt
cmp
cmp
outsb
push
rcll
sub
outsb
pop
mov
lcall
sub
clc
and
xchg
ret
dec
sbb
sub
sub
outsl
push
scas
push
pop
cmp
add
jmp
xchg
dec
push
mov
shlb
dec
scas
xchg
ret
dec
inc
xor
add
dec
cmp
xchg
add
xchg
dec
ss
push
xchg
clc
cltd
or
xchg
les
lret
xor
lods
xchg
out
in
outsl
dec
in
loop
cmc
dec
mov
scas
cmp
in
int
hlt
mov
push
fsubrs
mov
or
dec
lret
pop
adc
idivb
or
jns
pop
push
or
or
or
mov
pushf
mov
mov
out
insl
dec
adc
add
out
cs
ret
into
scas
sbb
dec
sub
jmp
test
dec
rorb
fmulp
mov
leave
cs
sub
scas
dec
rcrb
jp
dec
or
cmp
stos
pushf
or
loop
jmp
mov
imul
cmpsb
push
dec
sbb
movb
mov
push
or
sub
sub
roll
das
mov
in
jecxz
xchg
add
xchg
mov
mov
aas
ror
mov
mov
or
dec
dec
and
xor
dec
dec
sub
stos
cmpsl
stos
dec
inc
movsl
leave
loopne
inc
adc
sub
and
push
andb
daa
out
xchg
jle
push
sahf
loopne
bound
dec
pop
ljmp
or
je
call
jecxz
xchg
pusha
dec
imul
out
add
stos
movsl
sbb
dec
outsb
mov
stc
aam
xor
mov
mov
mov
in
push
sub
in
insl
and
mov
shll
int3
ljmp
into
movnti
pop
aad
lret
in
xchg
push
pusha
pop
and
lods
into
es
sub
leave
loopne
mov
popa
mov
sub
rclb
movb
xchg
sub
xor
cltd
sub
mov
push
adc
mov
scas
iret
mov
clc
cmp
xor
mov
lock
mov
cmp
lea
dec
or
jb
push
or
fisubrs
movsl
vmptrst
aad
pusha
adc
jmp
push
push
or
shll
or
lods
or
inc
sub
cmp
sbb
mov
das
sub
int
movsl
test
sub
mov
and
add
gs
hlt
cs
das
xor
xor
aad
mov
lret
into
int
or
icebp
scas
incb
pop
cs
lret
and
mov
dec
xchg
daa
or
into
dec
push
sub
push
jnp
out
outsb
lahf
sub
imulb
cmp
addr16
ret
or
adc
inc
scas
int3
push
adc
mov
out
rorl
push
sub
jns
out
sbb
inc
andl
insl
ret
cwtl
cmc
dec
add
stos
jnp
jmp
pop
call
repnz
repnz
jne
rcl
mov
imul
data16
sub
scas
jns
dec
mov
sub
jns
xor
mov
xchg
into
in
ljmp
mov
xchg
les
xor
adc
ljmp
out
lods
daa
sub
ror
mov
lret
push
and
mov
and
pop
in
stos
sbb
std
cmc
xchg
xchg
insl
sub
call
mov
sub
ret
loopne
lea
push
lods
pop
cmp
or
loop
cmpsl
mov
xor
or
cmp
ljmp
popl
imul
mov
dec
cmp
lea
sub
add
call
xor
push
icebp
outsl
or
data16
lret
aam
lret
bound
adcl
adc
inc
bswap
jmp
push
stos
xchg
imull
cmp
push
sbb
or
iret
addr16
ret
lea
sub
leave
addl
or
sub
das
mov
pushf
xchg
bound
xor
push
push
xchg
xchg
add
dec
pop
ret
adc
imul
cmc
pop
push
lea
jmp
fldt
push
sahf
dec
jmp
add
dec
scas
insl
mov
test
pcmpeqd
scas
iret
push
in
mov
lea
push
and
mov
xchg
or
or
adc
sub
sub
inc
outsl
loop
or
shlb
addb
daa
in
or
inc
pop
and
sbb
scas
push
sahf
daa
insb
sbb
mov
inc
imul
ljmp
incb
fisubrs
cltd
push
into
imul
outsb
popf
inc
leave
scas
das
roll
loopne
sahf
mov
sub
cmp
or
dec
out
fwait
mov
and
out
sbb
dec
rcll
or
lahf
iret
ljmp
xor
adc
daa
adc
into
cs
mov
or
add
mull
add
bswap
stos
mov
mov
insl
lods
outsb
inc
add
xchg
test
xchg
sub
jnp
cmp
push
imul
sub
adc
pop
dec
dec
lods
aas
pop
jmp
insb
sbb
or
int
mov
mov
outsl
inc
movsb
xor
outsb
fmull
test
sub
roll
xor
pop
xchg
sub
pop
mov
movb
arpl
jne
sbb
loope
mov
shl
sub
fmull
pop
popf
pop
sub
clc
pop
inc
das
orl
fildll
dec
leave
outsw
pop
addr16
mov
xchg
sti
xchg
xchg
jl
sbb
enter
movsl
popw
or
sub
jb
mov
xor
dec
sub
mov
shrb
inc
push
adcl
fwait
xchg
cmpsb
push
mov
dec
adc
aad
xchg
or
bound
test
add
inc
test
push
xor
lret
sub
dec
lds
mov
outsb
adc
cltd
push
sub
je
test
or
pop
dec
push
push
inc
insl
lret
loop
ljmp
in
jge
cli
clc
mov
push
or
xor
or
adc
xor
push
or
add
inc
outsl
int
in
mov
sub
xchg
shrb
push
das
inc
mov
into
xor
ljmp
nop
out
icebp
jecxz
push
adc
push
aad
pop
inc
sub
lea
mov
adc
push
or
inc
outsl
iret
mov
fincstp
inc
js
sub
push
jmp
push
dec
mov
jg
mov
sub
push
bound
sub
xlat
out
cmp
cmp
adc
sub
xchg
xchg
xchg
xor
arpl
out
xor
jmp
mov
adc
pop
xchg
add
push
testl
jg
xor
lea
mov
inc
outsb
push
dec
add
or
lret
sub
cmpsl
pop
sti
clc
dec
cmpsb
mov
dec
jecxz
inc
gs
add
insl
dec
cld
ret
xchg
jno
mov
jae
dec
push
cld
jle
mov
scas
in
xchg
push
in
xchg
xchg
add
sub
mov
dec
jmp
lret
out
mov
cmp
out
jle
sub
xchg
dec
pop
xchg
push
cld
add
and
lret
push
fwait
mov
cwtl
mov
or
jmp
test
mov
mov
xor
lret
adc
mov
fldcw
or
orl
out
test
jae
xor
sub
jne
push
lods
test
xchg
aas
push
xor
sub
dec
xchg
push
jge
cmp
push
inc
outsb
lea
sub
inc
pop
insl
shrl
daa
dec
push
pop
and
mov
mov
out
xchg
and
lret
movsb
pop
hlt
mov
dec
xor
inc
xchg
js
dec
stos
iret
xchg
push
dec
mov
lcall
sub
cmpsl
push
pop
or
mov
mov
sub
xor
or
sbb
sub
mov
sub
out
movsl
lea
icebp
das
dec
addr16
jge
mov
pop
das
stos
test
dec
stc
adcb
dec
adc
les
mov
sahf
out
add
pop
out
daa
adc
dec
mov
pop
test
insl
mov
pop
mov
out
push
mov
daa
mov
mov
insl
mov
pop
sub
sub
jo
mov
scas
mov
dec
iret
push
bound
jno
insl
sub
xor
jg
sub
jp
or
out
jno
sbb
sbbb
lret
stos
mov
scas
out
test
shlb
xor
adc
jg
dec
scas
out
pop
or
mov
or
jecxz
dec
sub
lret
push
leave
cwtl
add
scas
push
sub
push
dec
jmp
cmp
xchg
mov
inc
pop
dec
sbb
imul
and
test
xlat
or
rcrb
mov
add
int
outsl
repz
cmpsl
lret
jmp
iret
or
test
lods
mov
addl
int
jmp
dec
call
out
add
or
lret
mov
push
dec
sub
push
and
mov
stos
sub
orl
jle
xchg
ret
out
leave
addb
or
push
daa
mov
push
pop
inc
dec
and
or
jmp
cmpsb
sub
mov
lea
or
cmp
hlt
sbb
aam
ljmp
jb
sub
xchg
mul
push
cmp
subl
loopne
imul
push
ret
sbb
or
mov
out
sbb
xchg
dec
outsb
cmpsb
data16
lcall
lret
dec
lret
push
inc
addr16
imul
int
sub
mov
and
out
cmp
or
stos
movsl
xchg
xchg
or
dec
lret
out
dec
pop
movsl
or
popa
shrb
lret
leave
add
int
push
pop
fs
outsb
hlt
sub
ljmp
lret
dec
sbb
out
xchg
mov
shl
rcpps
in
dec
or
outsl
mov
iret
add
dec
ljmp
inc
xchg
out
fistl
cltd
imul
sub
xchg
inc
push
arpl
iret
inc
mov
leave
psadbw
dec
stos
addr16
out
or
push
sti
ror
orb
imul
xchg
jecxz
int
ds
or
mov
dec
iret
dec
in
test
jge
mov
gs
push
sub
lods
lret
xchg
xchg
pop
cmpsb
lret
xor
rcrb
xchg
adc
dec
sub
iret
iret
outsl
dec
lods
popa
inc
push
dec
jp
add
dec
invd
dec
int
xchg
lcall
test
push
xchg
out
xchg
and
jno
sbb
outsl
leave
jg,pn
adc
movsl
insl
or
in
pop
cltd
sub
je
insl
fsincos
mov
rclb
inc
or
pop
pop
sbb
adc
inc
cld
enter
pop
xchg
stos
jl
mov
dec
clc
or
int
mov
push
imul
addr16
ja
pop
sub
push
adc
in
jmp
stc
push
push
out
cs
adc
mov
jmp
dec
test
leave
dec
in
lock
fwait
sub
push
adc
dec
lret
or
or
xchg
push
mov
dec
sub
sbb
out
cmp
or
popf
and
in
xlat
adc
addl
repz
stos
daa
xchg
jg
inc
test
movsl
jnp
sub
or
jl
mov
push
lds
das
dec
pop
scas
push
jmp
nop
aam
jle
hlt
or
jmp
out
popa
or
or
lods
sub
xor
movsb
sub
mov
outsb
int
or
mov
loopne
or
xchg
dec
push
loop
dec
iret
jbe
dec
out
jne
testb
dec
adc
insl
das
inc
mov
imul
jle
int3
or
mov
dec
or
pop
sub
mov
cltd
mov
xchg
lret
or
lods
xchg
mov
sub
pop
lret
iret
dec
xchg
adc
or
das
sub
or
lock
lahf
pop
decb
push
mov
lods
int
or
or
mov
pop
push
sub
dec
stos
adc
mov
fisttps
pushf
rorb
cmp
inc
fildll
xchg
sub
or
cmpsl
sub
nop
or
cltd
scas
mov
je
push
pop
xchg
movsl
pop
sahf
cmpsl
dec
iret
rol
iret
adc
push
daa
add
dec
dec
jno
cmp
ss
push
inc
daa
jecxz
scas
stos
adcl
xor
sbb
push
sub
pop
shlb
imul
jmp
aaa
jnp
or
scas
mov
imul
mov
enter
and
pop
inc
jp
dec
ss
sarb
orl
aad
imul
int
cmpl
loopne
loopne
dec
ljmp
pop
xchg
iret
mov
cmp
or
push
push
cmp
mov
or
test
dec
or
leave
or
lea
or
sbb
adc
push
test
add
outsb
outsl
insl
stos
dec
out
dec
imul
fstl
dec
fnsave
push
in
sub
ret
cmpsl
outsl
xchg
jbe
xor
adc
ljmp
push
jecxz
sbb
daa
shlb
xor
sub
mov
out
mov
bound
in
dec
ret
sub
in
jecxz
and
fwait
daa
outsl
addb
outsb
scas
push
test
dec
lahf
mov
sti
jo
scas
or
sbb
mov
inc
or
adc
into
les
lret
dec
ljmp
jge
sub
lret
push
test
in
pop
leave
stos
imul
inc
test
call
pop
push
adc
sub
push
cltd
adc
xor
lods
mov
int
in
loopne
xchg
dec
arpl
inc
jmp
imul
inc
dec
into
mov
outsl
js
shrl
imul
mov
sbb
jecxz
test
lea
call
jle
dec
adc
dec
in
lret
leave
dec
pop
or
out
xchg
jmp
scas
xorb
pop
and
addr16
loopne
jno
sub
mov
loopne
push
mov
lgs
lret
or
mov
push
iret
into
std
xchg
stc
addr16
cmpsl
stos
movd
sub
std
adc
insl
data16
adc
dec
sub
sbb
in
iret
dec
stos
imul
clc
inc
int3
push
movsb
loope
cs
es
mov
ret
jecxz
daa
hlt
imul
repnz
std
outsl
imul
dec
jmp
dec
sub
sub
stos
lret
sbb
scas
or
shrb
cmpsb
mov
pop
xor
insw
popa
out
outsb
sub
xchg
sub
scas
icebp
sub
pop
jp
sbb
and
cltd
sub
lods
andb
push
imul
adc
test
aam
sbb
incb
dec
das
cmpsl
outsb
jno
jmp
dec
into
mov
cli
bound
popa
out
outsb
or
sub
jp
sub
int
xchg
sub
add
mov
lret
loopne
push
hlt
lods
in
out
dec
ret
dec
dec
jmp
and
dec
ljmp
mov
sub
leave
sub
adc
das
ljmp
mov
lock
scas
iret
test
mov
cmp
dec
push
jmp
sub
xchg
mov
dec
fildll
pop
and
and
xor
push
or
addr16
sub
test
sub
ffreep
faddl
sbb
sbb
adc
out
movsb
sub
or
sub
leave
out
sbb
mov
inc
dec
pop
int
loop
cvtps2pi
iret
jmp
pop
lahf
lds
stc
mov
jge
push
pop
jp
icebp
fsub
push
cmp
cmc
or
cs
adc
lret
daa
sbb
and
push
in
into
imul
adc
xchg
jmp
movsb
leave
into
adc
push
add
cs
mov
stos
push
outsb
and
dec
and
lea
inc
sub
lcall
lods
dec
xor
in
push
push
or
insl
pop
add
or
addr16
pop
sub
pop
pop
cmp
iret
dec
xor
cmp
int
mov
lcall
or
mov
scas
xor
into
pop
adc
pop
addr16
inc
cmp
daa
ret
or
scas
outsb
sub
xor
leave
mov
sub
dec
adc
sub
cmpsl
or
in
sahf
dec
loopne
subl
jb
imul
jnp
leave
sub
pop
xchg
imul
jno
ret
dec
js
ja
dec
mov
and
notl
pusha
adc
pop
sarb
cld
adc
daa
subl
cmpsl
test
mov
sub
xchg
pop
mov
outsb
pop
adc
cmpsb
or
data16
mov
mov
clc
loopne
movsb
sub
lret
pop
popa
sbb
dec
sbb
sbb
jg
xor
sub
outsl
loop
loop
jmp
out
scas
jmp
xchg
ret
aas
ret
outsl
push
inc
add
into
push
inc
out
sub
dec
pop
or
scas
mov
das
jb
aam
cmpsl
sbb
xor
mov
mov
jbe
push
int
and
sbb
adc
shrl
push
mov
inc
jge
mov
insl
cltd
dec
loop
sbb
inc
imul
popa
cmp
sub
imul
mov
pop
or
jmp
dec
addr16
and
mov
sub
scas
dec
out
in
int
fldenv
jmp
xchg
jp
mov
popa
lea
or
sub
ljmp
sub
movsb
jmp
mov
iret
sub
sub
pop
lods
sahf
or
sbb
adc
fisttpll
push
seto
lock
dec
sub
push
pop
cmp
push
jle
sub
mov
mov
jg
into
add
ljmp
push
outsl
scas
pop
mov
cwtl
mov
into
cmp
jno
mov
dec
add
shrb
lods
mov
les
or
pusha
out
loope
mov
dec
daa
data16
inc
int
into
mov
mov
mov
les
mov
in
and
jmp
inc
mov
push
loope
out
cmpsl
lret
mov
mov
loope
scas
or
dec
push
mov
mov
mov
lcall
dec
pop
rcl
jmp
lcall
lret
pop
pop
push
push
push
or
push
push
pop
mov
lahf
inc
into
sub
adc
mov
ficoms
punpckldq
out
lret
test
insl
and
mov
into
mov
or
or
lcall
insl
or
into
leave
adc
push
pop
adc
int
push
mov
ds
dec
bound
mov
divl
stc
pop
mov
imul
cmp
jecxz
mov
ret
dec
mov
cmp
aas
iret
dec
aas
scas
imul
or
mov
into
add
out
or
test
or
imul
in
imul
add
xchg
lret
dec
enter
ljmp
jb
mov
lea
daa
jmp
xchg
add
sub
jmp
lods
or
push
lret
les
pop
dec
sbb
test
aad
cmpsb
push
daa
call
sub
scas
loope
imul
inc
mov
mov
push
jmp
subb
imul
sub
xchg
pop
in
test
loopne
pop
sub
mov
pop
mov
sbb
inc
movl
sub
sub
mov
sbb
xor
mov
or
sub
out
mov
das
ja
cmp
pop
mov
insl
sub
daa
test
pop
in
insl
adc
adc
mov
jnp
lds
inc
sub
mov
fwait
into
add
xchg
dec
sbb
data16
nop
daa
inc
out
push
or
imul
out
dec
arpl
push
dec
and
or
sub
and
leave
lret
or
xchg
out
inc
out
jne
imul
out
aas
pop
xor
mov
getsec
jg
dec
popa
mov
sub
mov
or
cmp
jmp
out
mov
or
mov
stos
into
cld
mov
insl
pusha
loop
dec
les
xlat
sahf
pop
push
fmulp
sub
lock
dec
pop
loope
outsl
sub
ljmp
test
loope
push
ljmp
sahf
popf
push
dec
popa
imul
push
dec
sub
cmp
mov
ljmp
push
into
dec
rol
add
pop
and
inc
or
adc
mov
repz
insl
add
or
ror
dec
imul
dec
cmp
leave
aad
ret
inc
mov
imul
inc
adc
dec
dec
outsl
sub
int
fsubrs
and
movsl
dec
jmp
xor
out
stos
sub
push
and
into
ds
add
dec
mov
cltd
xchg
xchg
loopne
pop
mov
sub
dec
out
xchg
roll
iret
orl
xchg
nop
ljmp
dec
sub
into
dec
cwtl
addr16
js
out
nop
arpl
inc
sti
mov
cmp
cmpsl
xchg
mov
mov
scas
icebp
es
sub
mov
pop
outsl
test
add
xchg
inc
xchg
rclb
lea
out
bound
enter
cltd
das
cs
sub
sub
adc
int
in
xor
add
dec
mov
pop
sub
pop
cli
ljmp
cmpsl
xchg
cmovl
in
out
imul
dec
stc
imull
jae
sub
outsb
or
or
call
inc
daa
mov
push
push
outsl
loop
out
out
popf
lret
dec
pop
lds
lret
lret
push
fcmovnb
adc
and
jne
mov
sbb
or
mov
ds
jns
std
gs
out
insl
das
and
adc
scas
dec
or
push
sub
in
and
push
std
sub
jno
fildll
pop
mov
or
scas
cmp
xchg
add
sub
testl
fnstenv
push
in
push
jns
or
insl
add
outsl
lds
sbb
insl
jmp
fs
pop
dec
sub
fld
iret
mov
fcomip
cs
ljmp
wbinvd
fmull
mov
add
jg
loopne
adc
mov
pop
ret
lods
imul
push
daa
fs
in
cmp
sub
push
in
dec
sbb
orl
insl
std
jb
mov
lret
mov
or
iret
sub
shr
fisttpll
jl
cs
sub
movsb
or
push
hlt
mov
xor
dec
cmpsl
pusha
insl
insl
jecxz
daa
mov
pop
enter
inc
jmp
fistpl
and
xor
xchg
cmp
scas
dec
sti
push
jo
sub
xor
movsb
dec
fidivs
adc
jecxz
mov
in
les
or
push
push
dec
daa
enter
adc
xchg
push
cmpsl
pushf
jl
leave
ret
out
arpl
mov
scas
dec
inc
inc
call
add
or
lret
stos
into
sbb
test
nop
popl
popl
adc
pop
mov
push
dec
or
lret
xchg
dec
cmpsl
rorb
lds
lret
xor
test
inc
out
sbb
loope
lea
sub
or
or
cs
push
mov
sbb
inc
lea
enter
fimuls
adc
cmp
movsb
icebp
fwait
test
xor
outsb
jns
out
sbb
js
clc
stos
fwait
pop
out
outsl
sub
xor
clc
jecxz
into
arpl
and
pop
adc
daa
mov
and
imul
in
adc
and
lret
mov
push
jmp
and
push
or
push
lds
leave
adc
stos
xchg
dec
in
scas
pushf
sub
sub
sahf
das
push
arpl
out
arpl
arpl
clc
cli
sahf
cs
inc
dec
subl
or
scas
pop
jmp
orl
or
dec
mov
push
jno
iret
xchg
pop
pusha
jbe
or
daa
inc
out
push
adc
push
and
mov
mov
xchg
mov
ljmp
loope
int
inc
arpl
inc
rorb
or
stc
sbb
sub
mov
push
dec
or
push
sub
inc
orb
dec
mov
pusha
or
dec
data16
lcall
nop
es
xor
add
sub
outsb
pop
fildl
shl
das
loopne
addr16
pop
daa
test
sub
mov
scas
dec
cltd
xchg
in
inc
daa
mov
out
lods
cs
or
xchg
sbb
sub
jle
imul
and
dec
or
enter
cmp
out
je
test
xchg
inc
clc
push
pop
shrl
sub
dec
xchg
scas
cmp
mov
mov
out
enter
inc
dec
arpl
stc
cwtl
jno
dec
add
test
das
in
nop
cs
cmpl
lret
mov
sub
dec
imul
push
in
xchg
mov
movsb
mov
jns
loop
adcl
test
cmpsl
or
lods
test
ret
push
inc
stos
in
outsl
mov
stos
mov
or
adc
or
push
ret
leave
loop
sub
pop
rorl
into
or
jmp
adc
dec
outsb
rolb
arpl
js
mov
xchg
mov
inc
pop
test
sbb
jmp
cli
push
or
leave
dec
or
imul
iret
or
dec
movsb
inc
hlt
jmp
dec
or
pusha
adc
add
xchg
rcll
mov
lret
or
sub
mov
repz
xor
lods
add
popl
leave
cmpsl
test
and
push
cmp
int3
xchg
test
test
lea
out
outsl
or
inc
out
ret
jmp
test
lret
push
sub
lea
out
and
mov
fidivs
out
lret
or
inc
mov
mov
in
int
mov
xchg
inc
pusha
mov
mov
das
mov
outsb
in
sbb
scas
iret
jg
fdivr
cmp
movl
or
scas
ret
loop
inc
jg
or
or
bound
sub
ljmp
mov
xor
in
pop
cmc
add
dec
outsb
sub
or
and
out
dec
loope
scas
lretw
sbb
stos
daa
insl
or
dec
xor
pushl
add
leave
out
stos
xchg
jo
mov
push
or
pop
or
call
das
call
sub
sbb
xchg
arpl
outsb
or
pop
mov
push
and
sbb
xor
pop
orl
inc
add
mov
sub
out
jp
push
imul
push
jnp
and
xor
dec
mov
imul
pop
or
pop
outsl
lock
mov
push
loope
imul
popa
mov
dec
out
mov
ret
xchg
lea
add
add
add
mov
or
lea
dec
adc
into
setle
test
int
int3
fwait
ret
out
incl
push
sahf
dec
or
sub
shl
dec
outsl
dec
jb
dec
outsb
add
xchg
cs
int
inc
das
data16
add
adc
xchg
push
mov
xchg
jae
dec
jns
pop
pop
sbb
imul
out
into
cs
sbb
outsl
push
lock
xor
in
imul
imul
dec
mov
dec
movsb
lea
adc
outsl
das
out
mov
adc
scas
imul
cs
loope
sub
adc
jmp
inc
jmp
in
and
scas
and
sub
or
sub
or
push
jo
lock
mov
sub
lcall
inc
stos
out
sub
pop
pusha
fildll
les
or
lods
mov
in
dec
imul
cwtl
xchg
aad
inc
outsl
dec
outsb
or
cs
add
dec
test
orl
in
cmp
scas
loop
or
or
sub
out
add
xchg
push
and
adc
dec
add
adc
stos
lods
inc
scas
loop
mov
adcl
cmp
dec
mov
insl
outsl
lea
out
fcoms
sbb
lds
jp
cmpsl
test
jo
and
dec
dec
xchg
mov
lock
adc
in
sub
in
movsb
lahf
add
insl
jb
lret
dec
popa
int3
or
jae
aas
mov
adc
iret
aad
imul
sub
movsb
dec
jg
insl
mov
add
pop
sub
out
pop
and
pop
jecxz
sub
dec
test
ljmp
inc
sti
sub
out
adc
ljmp
lret
lods
sbb
or
sbb
xchg
out
mov
push
clc
cmp
xchg
fildll
push
dec
sbb
push
xlat
dec
cmpsl
inc
push
push
mov
mov
or
jnp
add
mov
xchg
cld
popa
xchg
push
movsl
sub
sub
adc
mov
or
inc
pop
inc
scas
and
adc
out
mov
dec
setge
mov
gs
lods
and
scas
sub
hlt
or
in
push
iret
or
orl
adc
insl
shl
cwtl
push
push
and
imul
cmpsb
data16
pop
mov
call
outsl
dec
lea
bound
sbb
into
push
fsubrp
shlb
dec
dec
sahf
lret
pusha
stos
scas
mov
incb
push
addr16
subb
into
pop
dec
mov
daa
sbb
orb
add
xor
xchg
dec
rep
mov
jmp
repz
lcall
sub
sub
push
stc
dec
test
lock
loop
lods
int
iret
int3
push
cli
mov
iret
dec
andb
shrb
daa
in
push
pop
movsl
roll
or
xchg
mov
sub
popf
push
or
sub
fwait
pop
das
adc
scas
out
pop
sub
lret
leave
adc
stos
sub
add
mov
daa
out
jmp
add
push
scas
out
xor
jnp
add
outsb
dec
jmp
mov
or
imul
jge
push
cmovns
and
das
outsb
cmp
icebp
or
mov
pusha
or
leave
loopne
fwait
xchg
popf
jmp
adc
pop
cmpsl
and
mov
imul
jmp
loopne
xchg
xor
aad
adc
shll
out
xchg
or
nop
das
mov
lret
addr16
pop
data16
xchg
pusha
cmp
xor
ljmp
int
jle
dec
lret
cmpsl
adc
test
sbb
out
sbb
mov
lret
test
mov
xor
ljmp
pop
pop
in
test
mov
push
lods
clc
mov
or
js
xor
dec
jmp
mov
rclb
xor
adc
arpl
sbb
shll
jmp
cmpsl
lea
stos
push
sbb
out
jmp
mov
sub
hlt
out
jns
ljmp
cmpsl
sbb
pusha
daa
test
sub
inc
les
dec
out
sbb
out
sahf
stos
adc
or
xor
push
push
xchg
das
out
sti
add
iret
xor
or
jmp
pop
lods
sbb
test
or
push
outsl
adc
or
call
sub
mov
xchg
dec
jns
lea
iret
xchg
sub
sbb
jecxz
daa
out
pop
inc
ljmp
cmpsl
stos
ror
mov
xchg
add
icebp
jecxz
push
les
arpl
dec
arpl
inc
test
lret
std
push
cmpsl
lret
lret
ss
xor
fisubs
orl
out
mov
sub
mov
popf
sub
jge
pusha
inc
shl
cli
lea
mov
xor
sub
dec
mov
loope
lods
or
pop
and
jns
inc
out
or
mov
imul
push
jo
cltd
in
fnstsw
sahf
lahf
or
dec
fimull
jnp
jae
outsl
and
in
scas
push
das
sub
xor
stos
xchg
pop
push
sub
fcmovnu
pop
fmuls
daa
lds
arpl
bound
mov
iret
xchg
inc
jmp
mov
push
ret
enter
sub
lods
lea
das
jp
fildl
pop
cld
cmp
sbb
mov
addr16
push
scas
ljmp
mov
test
xchg
bound
sub
mov
outsl
dec
lret
cmpsl
outsb
jae
imul
stc
in
cmp
loope
jmp
popf
insl
push
xlat
adc
out
or
sub
sbb
push
inc
pop
leave
dec
lea
or
jge
jp
sub
sub
or
xor
cmpsl
sub
outsl
or
scas
ljmp
cmpps
cs
mov
in
lds
pop
add
and
and
inc
ljmp
mov
and
mov
jmp
xchg
icebp
dec
mov
sub
gs
test
imul
sbb
push
imul
push
outsb
mov
loop
sub
out
mov
cmpsl
fldcw
popf
mov
int
imul
adc
sbb
in
dec
mov
lods
imul
mov
ljmp
mov
shl
sub
dec
or
in
cmp
ljmp
push
outsb
cmp
sbb
xchg
rorl
sub
popa
out
mov
jo
ljmp
mov
test
pop
sbb
int
or
cltd
pop
int
pop
or
xchg
push
scas
inc
sub
mov
cltd
lds
or
mov
mov
stc
sub
loop
lea
sbb
mov
sbb
ds
sbb
outsb
ret
xlat
js
xor
leave
jmp
mov
leave
xor
dec
or
lds
or
dec
pop
mov
arpl
push
fimuls
sub
icebp
dec
test
lahf
ret
imulb
cltd
comiss
es
into
cmpsl
sub
push
test
outsb
out
mov
pop
sub
or
in
in
or
push
insl
sub
dec
dec
xchg
idivb
jle
cmp
pop
into
adc
pusha
sub
pop
jnp
ret
jnp
sbb
cmp
dec
adc
adcl
dec
lock
jb
mov
dec
lret
stos
mov
sbb
leave
movsl
das
sbb
in
dec
xor
fucomip
adc
jmp
cmp
fsubrs
arpl
loope
dec
lods
pop
das
insl
dec
leave
jmp
out
dec
and
cmp
or
xor
int
test
jo
mov
or
lods
dec
das
iret
insl
cmp
cmp
call
into
and
push
mov
adc
push
test
push
sub
add
or
imul
xor
cmp
mov
xor
xchg
call
fisubrs
dec
mov
lods
shlb
cld
ljmp
push
arpl
dec
jns
push
dec
lret
xchg
adc
aas
ljmp
stos
shrl
vpmacssdqh
and
or
mov
sub
loope
in
push
cmp
xor
lea
push
pop
scas
jmp
decl
add
sub
cli
and
dec
sub
mov
mov
xchg
mov
subb
dec
push
pusha
or
fcompl
pop
sub
or
add
iret
test
jo
sub
ret
stos
push
jmp
mov
negl
shll
pop
daa
orl
push
sub
pusha
xlat
pop
out
daa
wrmsr
dec
or
rclb
cmpsb
fisubrs
std
sub
int3
mov
xor
or
jmp
or
out
insl
adc
repz
repnz
lcall
inc
dec
lret
int
in
shl
sbb
cmpsl
xor
das
or
pushf
push
push
pop
adc
arpl
dec
mov
jecxz,pt
add
imul
jmp
inc
pop
loop
dec
and
mov
inc
inc
test
cmp
or
ret
sub
arpl
cwtl
xchg
or
or
mov
push
pop
or
das
push
push
pop
mov
xchg
xor
lods
lret
or
or
aaa
out
add
cvtpi2ps
stos
or
xchg
jb
sub
xchg
mov
mov
lret
orl
xor
pop
dec
iret
xchg
xchg
xchg
pop
mov
popl
out
dec
push
test
popa
int3
or
das
sbb
or
lods
ficoml
or
or
fwait
ret
push
sub
inc
test
out
and
or
subl
out
and
mov
in
pop
cmpsl
pop
adc
sub
sub
jmp
xchg
dec
adc
addr16
cmpsl
push
in
add
push
push
out
repz
jg
jno
adc
xchg
cmp
mov
das
push
add
push
mov
cmp
cmpsl
sub
lret
sbb
das
sub
sub
dec
imul
or
adc
pop
adc
bound
jne
or
outsl
insl
push
add
movsl
imul
inc
pop
scas
push
sub
xor
push
adc
mov
roll
jmp
mull
push
sahf
repnz
dec
in
adc
lods
in
or
leave
mov
push
sub
mov
sub
inc
dec
out
data16
xchg
pop
ud1
imul
sbb
idiv
mov
jae
or
or
adc
lods
in
sub
iret
fimull
das
or
mov
imul
call
add
out
outsl
scas
in
or
adc
pop
mov
dec
test
cmpsl
test
inc
arpl
in
out
jb
pusha
rorb
or
out
sbb
mov
imul
sub
fdivrl
xchg
inc
mov
add
sub
pop
xchg
cs
icebp
out
jmp
sbb
lret
mov
loopne
xor
loope
or
fs
out
scas
arpl
popl
and
inc
or
insl
out
or
fdivrl
shrl
jmp
imul
call
test
mov
mov
sub
adc
dec
stos
cli
into
ffreep
shlb
xchg
je,pn
add
cmpsb
lret
jmp
lds
ret
call
cli
icebp
lds
pop
in
or
gs
push
loop
sub
leave
rclb
bound
or
pop
and
sub
in
test
push
dec
lods
jmp
out
pop
mov
loopne
dec
imul
push
orl
inc
loop
mov
jb
lea
int
or
sub
dec
dec
jae
imul
lock
in
pop
mov
insl
adc
imul
in
sub
aad
out
out
in
jecxz
test
sub
dec
dec
pop
dec
vfrczsd
pusha
mov
dec
out
aaa
or
sbb
mov
iret
out
out
and
sub
repz
and
inc
xor
push
adc
daa
sub
int
fldcw
lods
loop
dec
add
ljmp
sub
dec
pop
fmull
les
addr16
test
cs
lods
mov
inc
cmpsl
jmp
xchg
out
into
sbb
jecxz
and
dec
dec
dec
cltd
loop
or
lods
push
stos
xor
push
ret
xor
mov
popf
xor
imul
jne
imul
xchg
cmpsb
lret
fisttps
xchg
testb
ljmp
cs
jbe
cld
add
sub
dec
adc
sub
dec
push
inc
dec
add
xchg
mov
es
out
sbb
scas
out
mov
push
xchg
push
lret
push
into
in
dec
pop
sub
adc
cs
jle
sbb
bound
ret
sub
loopne
push
jg
sub
outsl
dec
icebp
rcl
orb
adc
fisttpll
xchg
data16
mov
pop
in
mov
mov
adc
adc
cmpsl
dec
push
xchg
or
cs
int
cltd
sub
pop
sub
sub
arpl
sbb
cltd
inc
mov
sub
xor
addr16
into
imul
adc
scas
pop
ljmp
int
movsl
lea
out
pmullw
dec
lods
int
loop
pop
jmp
push
pop
imul
mov
pop
out
in
inc
daa
shll
sbb
xchg
pusha
and
out
xchg
in
pop
lods
jg
jbe
int
ret
daa
dec
leave
loope
outsb
movl
jns
cs
sub
cltd
push
pop
lret
daa
jecxz
scas
lret
sbb
xchg
or
insl
sub
lahf
jmp
sbb
int3
mov
scas
mov
sub
xchg
mov
cmpsl
sub
aaa
loop
cs
popa
xor
inc
out
xor
subb
stos
push
leave
in
out
sbb
notl
xor
jno
or
push
mov
sub
rcr
adc
leavew
sub
loop
jecxz
sti
jge
daa
ljmp
xchg
cmc
dec
bound
mov
dec
pop
or
mov
mov
or
dec
mov
add
or
das
sbb
aas
or
or
jb
pop
mov
cli
lret
cltd
outsb
ret
rcl
mov
jae
imul
cmp
int
pcmpgtd
fs
stos
mov
outsl
and
loop
imul
cmpsl
dec
pusha
jno
jnp
sub
sub
inc
jmp
ret
mov
data16
cld
cmp
out
std
sub
out
hlt
or
ds
cmp
dec
lret
mov
mov
bound
lret
or
dec
scas
or
pop
sub
icebp
pop
fcomps
sub
sub
out
test
and
imul
out
in
dec
sbb
lea
mov
sub
flds
imul
dec
shl
adc
adc
inc
bound
into
sbb
cmpsl
in
int
cs
iret
sbb
clc
out
mov
in
and
or
or
and
jmp
sbb
mov
mull
pop
jecxz
outsl
ljmp
loopne
repnz
add
ljmp
sub
sub
xchg
fwait
icebp
repz
adc
adc
pushf
pop
imul
out
ljmp
add
lods
dec
into
dec
das
or
test
lods
jge
call
inc
dec
inc
arpl
xchg
xor
jmp
lods
imul
psubsb
pop
frstor
shr
jnp
cltd
jno
out
int
fmul
jge
dec
xor
pop
push
jg
jns
cltd
mov
js
sarb
lock
jnp
imul
enter
xchg
xchg
or
loop
out
leave
insl
test
jmp
icebp
fwait
movsl
stos
mov
js
cmp
jle
add
mov
test
add
xor
sub
mov
int
ret
inc
mov
mov
daa
dec
scas
sub
jae
dec
addb
xor
xor
data16
inc
mov
pop
or
adc
dec
sahf
push
inc
into
imul
rclb
out
xchg
and
dec
sub
sbb
pop
dec
repnz
dec
xor
jmp
int
je
mov
cmovp
rclb
or
movsl
jns
adc
cmp
into
shl
insl
dec
xchg
arpl
and
test
pop
xchg
pushf
inc
dec
lret
pop
in
aas
arpl
cmc
clc
xor
in
push
pop
icebp
fmull
or
push
aaa
mov
adc
ljmp
das
inc
dec
dec
inc
mov
out
dec
adc
lds
mov
stos
leave
movsb
outsl
lret
and
pmuludq
sub
adc
in
inc
sub
mov
push
das
and
push
adc
test
leave
pop
or
jmp
mov
dec
adc
scas
jae
mov
popa
pop
mov
push
lret
pop
push
mov
out
cltd
cs
jecxz
test
outsl
adc
sub
or
mov
dec
ljmp
aas
adc
pop
pop
movnti
or
xor
dec
or
iret
or
dec
xchg
sub
lods
outsl
mov
xchg
cmp
jne
scas
dec
repz
ljmp
sbb
jmp
test
scas
inc
fs
dec
mov
dec
mov
stos
sub
sbb
xchg
or
push
bound
or
lret
prefetchw
or
adc
call
stos
lret
sub
leave
jp
mov
mov
push
sub
mov
insl
inc
repnz
addr16
mov
mov
jo
cmp
dec
add
les
or
mov
scas
xchg
push
sub
in
mov
sahf
inc
lds
lods
add
imul
sub
push
sbb
iret
jle
sub
mov
imul
lds
ljmp
stos
cs
pop
push
or
jo
into
jl
xchg
sub
xchg
and
xchg
data16
adc
cvttps2pi
adc
adc
xchg
scas
iret
sub
outsb
sub
outsl
leave
xor
or
push
insb
inc
jle
cli
push
cs
lea
enter
mov
icebp
fidivrs
and
or
lfs
subb
push
ror
push
push
stos
lods
notl
lock
bound
jnp
lahf
mov
push
gs
adcl
mov
stc
dec
out
push
jmp
out
cltd
pop
bound
add
lret
sbb
mov
shlb
adc
ds
rcll
loopne
pushf
popf
je
xchg
add
iret
add
xchg
push
dec
mov
scas
add
insl
test
sub
sub
sub
push
pushf
add
test
cmpsl
inc
adc
push
insl
bound
sub
stc
xchg
movb
mov
out
scas
push
or
pinsrw
push
int3
mov
popf
pop
data16
sub
mov
ret
insl
int3
test
xchg
ret
outsb
sub
ret
xor
jmp
add
sub
out
movsl
add
test
push
ljmp
xchg
stos
pop
mov
int
sub
out
test
shr
stos
bound
mov
xchg
pop
mov
lock
dec
std
push
add
aas
inc
imul
sub
out
push
cmp
ljmp
insl
stos
dec
lcall
loopne
xor
dec
ret
leave
or
ret
mov
dec
sbb
xor
jle
lea
idivl
or
adc
mov
dec
dec
inc
stos
dec
mov
push
mov
in
stc
add
sub
data16
mov
xchg
outsb
outsl
and
testl
pushf
repnz
dec
cld
push
push
repnz
mov
fiadds
ret
cmp
inc
scas
daa
sub
or
push
xchg
jo
xchg
scas
xchg
push
fsubrs
lea
imul
xchg
or
sbb
add
xchg
rcll
movb
dec
sub
das
shr
loop
mov
out
sahf
mov
xchg
adc
dec
dec
xchg
rcr
sub
mov
jmp
lret
imul
cmp
outsb
inc
pop
iret
cmp
pop
adc
popa
sub
in
sub
or
or
lds
or
dec
inc
cmp
pop
in
call
pushf
fadd
mov
mov
out
scas
outsl
outsl
or
and
out
out
sub
int
sti
gs
cs
int3
adc
lea
sub
adc
dec
or
or
mov
fxsave
les
test
add
lods
out
dec
mov
jmp
scas
sbb
sbb
or
or
stc
or
imul
inc
sbb
or
add
jb
in
adc
cmpsl
fldl
push
or
mov
dec
pop
imul
adc
leave
mov
xchg
mov
xchg
scas
xor
add
cmp
movsl
xchg
jg
pop
ret
es
shrb
xor
iret
adc
das
or
scas
setp
cli
loop
sub
lods
nop
popl
imul
daa
inc
push
scas
ljmp
cmpsl
add
mov
loopne
in
adc
das
sub
dec
cltd
imul
push
inc
shll
loope
dec
outsl
outsb
mov
lret
pushf
mov
xorb
xchg
dec
mov
push
hlt
seta
mov
icebp
sub
push
data16
or
jle
sub
stc
inc
outsl
das
and
add
push
xchg
in
lds
imul
ret
daa
push
pop
rcll
or
sbb
or
adc
sub
pop
jmp
sub
add
out
ljmp
xchg
sahf
movd
dec
lcall
fisubrs
inc
xchg
out
sbb
push
dec
jl
mov
lret
adc
leave
mov
mov
xor
inc
sub
or
shr
loop
xor
xor
sub
scas
mov
dec
movb
cmp
jno
lods
jb
cmp
int
or
imul
in
sub
sub
push
xor
sub
bnd
or
scas
das
outsl
out
dec
imul
xchg
jp
daa
incb
inc
push
sub
inc
inc
outsb
adc
into
dec
nop
or
test
mov
or
rclb
loopne
and
ljmp
into
in
dec
xlat
dec
mov
dec
test
xor
sub
cmp
sub
jb
or
mov
dec
fisubrl
fs
adc
imul
loope
cmpsl
mov
or
dec
daa
je
cmp
test
dec
imulb
in
lret
outsl
sub
push
stc
sub
mov
pop
sub
or
out
lds
push
sub
xor
testl
adc
mov
iret
orl
stos
jg
mov
fwait
jo
lret
clc
cmpsl
icebp
xor
cmp
cmpsl
repz
imul
cmp
lret
xchg
xchg
insb
xchg
push
mov
add
neg
jnp
dec
mov
data16
out
jae
imul
push
outsl
sub
dec
into
push
jmp
sbb
inc
dec
outsb
cmp
pop
mov
mov
in
inc
sbb
clc
dec
inc
pop
add
cli
in
sub
mov
loope
dec
in
jbe
xchg
jmp
push
test
or
out
add
xchg
push
jecxz
ret
mov
out
cmp
int
test
imul
or
xor
pop
stos
loopne
aas
test
pushf
cmp
push
or
sbb
adc
pop
sub
or
out
cwtd
rcr
ljmp
mov
cmpsl
or
mov
xchg
add
dec
sub
adc
insl
or
outsl
mulb
push
pop
mov
push
jl
or
outsb
xor
inc
movsb
sub
dec
or
out
adc
adc
test
jae
mov
push
dec
imul
push
test
out
int
xor
push
loop
addr16
cli
mov
lea
cmp
xchg
int3
das
subb
data16
pop
mov
aas
or
jne
out
in
xor
int
and
mov
cmpsl
sub
and
mov
mov
mov
or
sti
sub
test
sbb
xor
aas
adc
sbb
add
dec
sub
int3
mov
bswap
or
push
inc
test
pop
inc
dec
lret
xchg
inc
xor
test
dec
sub
nop
or
iret
or
mov
jle
jl
xor
xor
hlt
mov
in
push
addr16
ret
test
inc
dec
cs
lea
ficoms
and
inc
dec
jmp
scas
mov
fnstsw
cmp
sub
out
mov
xlat
sbb
sub
sbb
pop
daa
mov
lea
mov
xor
add
push
dec
or
add
adc
inc
push
lret
pop
repz
dec
outsb
jmp
dec
iret
dec
pop
inc
adc
xchg
adc
or
ja
inc
sub
ret
dec
sub
arpl
dec
or
and
or
stos
stos
xchg
dec
dec
arpl
sub
inc
dec
jmp
imul
in
fmull
jae
cmpl
cs
loope
lret
je
loop
dec
inc
ds
adc
dec
mov
inc
lret
sub
sbbl
lods
pushf
dec
dec
adc
je
iret
xchg
movl
popf
pop
outsl
aas
lcall
or
xchg
test
xor
bound
bound
jecxz
mov
mov
adc
subb
adc
mov
xchg
pusha
sub
insl
mov
leave
add
sub
sub
adc
les
in
or
inc
outsl
sbb
imul
add
xchg
lret
xchg
daa
xchg
pop
dec
or
pop
lret
fimull
insl
adc
xchg
jmp
in
mov
mov
xchg
mov
jb
push
inc
imul
mov
rorl
stos
or
dec
jne
push
inc
pop
scas
repz
mov
pop
push
pop
push
and
scas
adc
imul
decl
lea
bswap
fisttps
and
jl
push
jnp
pop
jns
inc
iret
int
xchg
jmp
add
add
add
adcl
inc
enter
shl
cs
leave
imul
ret
andb
inc
or
add
push
aad
inc
dec
xchg
xor
xor
test
mov
das
iret
adc
cmp
cmp
adc
xor
push
xchg
in
cltd
xor
push
or
add
mov
es
adc
dec
add
jge
cmp
sub
pop
in
mov
loop
cli
cmp
xor
iret
shll
insl
pushf
jmp
loope
dec
imul
stos
pusha
iret
pop
push
xor
inc
and
push
or
mov
xchg
dec
scas
or
or
lds
orb
rorl
mov
and
test
add
lods
stos
xchg
mov
pop
cmpsl
dec
in
dec
xor
out
out
sub
push
scas
repz
or
leave
repz
outsl
jnp
out
loope
loopne
bound
mov
int
xchg
das
lds
shl
adc
xor
out
pop
dec
sub
hlt
imul
daa
cmp
dec
mov
xchg
and
loope
dec
or
adc
sbb
or
movsl
lahf
pop
add
test
loopne
je
push
lds
scas
sub
or
dec
jmp
or
in
adc
insl
mov
xchg
loop
mov
cmpsl
jmp
sbb
push
leave
bound
mov
mov
pop
clc
dec
add
dec
imul
cs
pop
jmp
inc
dec
ds
ficoms
mov
and
jmp
jnp
xchg
icebp
xor
movsb
out
sar
inc
xchg
lret
outsl
xor
and
fisttpl
out
mov
dec
add
cs
jmp
sahf
cmpsb
or
fmuls
sbb
or
adc
subl
stc
cs
jl
test
mov
mov
in
in
dec
in
jbe
pop
loop
iret
mov
fstps
movsb
sub
das
in
push
dec
pop
push
sub
jae
mov
aad
shrl
xchg
scas
outsb
sub
jo
stos
out
mov
mov
dec
das
or
push
movl
and
or
out
ljmp
test
data16
rolb
ret
ret
and
or
outsb
stos
cwtl
je
sub
add
das
or
sbb
cltd
dec
lea
push
or
out
push
test
loope
out
out
mov
or
test
pop
sbb
dec
scas
iret
pop
dec
insb
push
mov
pop
inc
insl
mov
repz
adc
mov
jge
xchg
mov
sbb
aad
addr16
outsl
andb
cs
mov
int
sub
xlat
push
sbb
pop
test
cli
dec
sub
push
loop
hlt
jns
mov
iret
sub
repnz
imulb
test
jmp
jo
fstps
int
pop
into
xor
xchg
loopne
repnz
lods
mov
imul
in
sub
cwtl
ret
test
test
push
xchg
push
cltd
ret
lret
dec
lcall
hlt
cs
mov
or
pop
jle
or
movl
out
dec
bound
pop
scas
and
cltd
out
insl
inc
jmp
and
ljmp
push
cwtl
lds
inc
xor
pop
dec
dec
enter
test
xorl
leave
das
stos
bound
iret
or
orb
inc
inc
sbb
push
sub
mov
pop
clc
adcl
push
loop
dec
out
hlt
push
jmp
inc
mov
outsb
stos
movsl
imul
dec
add
inc
nop
rol
mov
xchg
cs
mov
scas
in
push
cmc
adc
push
hlt
dec
jmp
push
add
or
jecxz
sub
mov
xchg
or
fs
scas
inc
int
push
sub
mov
or
scas
xchg
les
xor
dec
ss
jne
stc
dec
jecxz
js
cmp
aaa
dec
adc
stc
inc
lret
scas
bnd
jbe
adc
outsl
movsb
leave
movntq
out
xchg
arpl
pusha
stos
dec
push
cwtl
orl
sti
adcb
jmp
or
dec
aas
iret
into
sub
ret
jg
dec
scas
lret
xor
cmpsl
sub
int
sbb
cs
ljmp
jo
imull
or
cld
int
or
pusha
and
dec
nop
lahf
xor
jb
inc
por
ret
scas
dec
enter
rolb
and
mov
test
mulb
out
imul
pop
mov
sub
sbb
push
pop
pop
pop
shrl
mov
scas
jecxz
in
mov
inc
leave
or
push
xor
lea
mov
add
pushf
dec
pop
mov
jl
repnz
xchg
lret
xor
out
out
mov
mov
sub
imul
or
cmpsb
fistl
ss
comiss
mov
or
out
dec
or
mov
mov
or
daa
sbb
out
sub
iret
push
cmp
out
dec
inc
cs
outsl
mov
cmp
daa
into
sub
repz
in
sub
mov
push
loope
sub
push
sbb
or
mov
or
dec
jg
in
subl
jno
test
outsl
lods
sub
mov
xor
inc
sub
lea
daa
pusha
mov
mov
xchg
mov
dec
inc
icebp
xor
cmpsl
hlt
outsb
mov
add
add
iret
out
or
rcll
outsl
or
push
loopne
out
popl
cs
dec
xchg
push
add
aas
jge
sub
xchg
mov
scas
xchg
out
mov
repnz
lea
popa
outsw
cmpsl
aaa
dec
or
pusha
sub
cmp
and
adc
insl
xchg
sub
in
sbb
or
or
adc
and
stos
test
sub
pop
in
inc
adc
mov
adc
push
mov
ucomiss
stos
out
cmp
add
lods
sarb
add
fisttps
dec
or
dec
pop
xchg
mov
icebp
insb
out
xchg
scas
adc
dec
inc
mov
insl
dec
outsb
or
jmp
dec
dec
hlt
sub
sub
iret
jge
aam
fcmove
mov
pop
outsl
pushl
scas
mov
into
push
and
mul
sbb
pop
movsl
inc
in
sbb
insb
dec
sbb
adc
bound
stos
fsubrs
lret
lea
push
dec
lods
lods
xchg
imul
leave
dec
mov
push
imul
mov
push
data16
push
dec
mov
in
add
bound
out
sub
and
push
ds
xor
imul
aam
outsl
pfmax
dec
daa
scas
push
xchg
pusha
and
inc
shlb
addr16
in
mov
xchg
dec
fisttpl
push
xchg
out
xchg
ret
aam
sub
lea
sub
dec
daa
xor
pop
in
pop
clc
sti
sub
daa
pop
lahf
test
es
or
sbb
push
fwait
or
inc
xchg
adcl
mov
xchg
iret
sub
cmpsl
add
test
enter
sub
repnz
cli
push
dec
add
out
int
or
ret
or
push
loope
or
mov
insl
xor
or
out
mov
mov
dec
sub
pop
push
xor
sub
outsb
scas
bnd
or
jnp
inc
mov
inc
loop
int
dec
pop
ss
sub
ljmp
mov
mov
xor
push
std
in
cwtl
jge
xor
fistl
cmc
test
dec
xchg
into
xchg
sti
popl
movsb
sub
xchg
push
jno
adc
inc
shrl
mov
or
push
imul
push
adc
push
xor
dec
int3
outsb
ret
jecxz
mov
xchg
pop
inc
iret
mov
adc
lods
stos
mov
das
popf
ret
xchg
stc
dec
push
cmpsl
mov
adc
mov
shl
push
test
xchg
popa
sub
pop
dec
sub
outsb
xchg
nop
call
xchg
addb
pop
icebp
mov
xor
testl
out
push
xchg
push
inc
test
sbb
sub
lods
or
out
jmp
enter
sub
testb
or
aam
scas
jmp
inc
mov
inc
daa
in
adc
mov
bound
xor
lret
pop
sbb
addr16
les
cmpb
mov
hlt
lock
jle
repnz
dec
dec
sbb
lock
adc
add
lods
outsl
inc
xchg
shlb
sbb
inc
dec
mov
cmpsl
sub
shlb
int
insl
daa
scas
push
pop
in
out
adc
sbb
subl
lock
sub
ljmp
xor
or
cs
addr16
xchg
dec
dec
aas
imul
push
push
jbe
int
stos
test
or
mov
dec
enter
mov
fildll
xchg
sbb
test
or
jp
lea
imul
jmp
iret
outsl
pop
jns
sbb
mov
adc
xchg
jb
sub
xchg
adc
push
aas
mov
or
leave
sarb
cmp
pop
nop
or
pusha
xchg
dec
jg
dec
in
imul
mov
jmp
lret
loopne
aaa
pop
pop
cmp
dec
repnz
test
lret
loopne
lods
lret
dec
icebp
test
lds
leave
adc
imull
sub
outsl
les
push
popf
sbb
cmp
scas
aam
mov
add
addr16
out
cli
adc
mov
dec
push
sub
adc
sub
or
mov
imul
dec
xor
pop
mov
out
xor
jmp
adc
test
mov
dec
or
xor
out
lret
dec
popl
imul
xchg
pop
mov
cmp
mov
test
cmpsl
cmp
ret
into
iret
add
lods
int
sub
xchg
enter
adc
adc
imul
lds
or
lea
outsb
cs
loop
inc
sub
mov
mov
sub
adc
stos
dec
or
insl
addr16
and
out
scas
inc
into
hlt
lret
pavgw
mov
inc
mov
dec
mov
icebp
clc
xor
outsb
xor
sbb
int
cs
leave
ds
or
cmp
xchg
testl
xchg
push
cwtl
or
adc
inc
xor
xor
outsb
ljmp
dec
aad
sub
adcl
pop
icebp
dec
fmull
popa
mov
or
lret
iret
sub
jne
mov
mov
mov
add
dec
adc
out
adc
test
les
cmp
out
movsl
pop
pop
dec
mov
xor
or
in
fst
push
push
subl
sub
iret
sub
shl
or
out
mov
scas
leave
pop
and
loop
inc
push
dec
addr16
add
mov
imul
xchg
cwtl
loope
inc
sub
cld
jge
fimuls
sub
xor
dec
inc
mov
or
or
sub
cmp
xchg
stos
mov
scas
test
packuswb
dec
add
dec
test
bound
das
pop
in
inc
jbe
bound
sub
inc
dec
jmp
mov
call
or
ret
addr16
xor
xchg
push
imul
mov
sbb
out
and
das
cld
inc
xchg
jbe
insb
scas
cwtl
jnp
mov
adc
mov
sub
imul
mov
sub
sub
or
test
cmp
lods
sub
pop
into
hlt
sub
cs
outsb
and
or
mov
mov
insl
inc
add
cmp
cmovae
loop
push
shl
clc
dec
xchg
xchg
xor
mov
xchg
shrb
mov
arpl
lret
sub
mov
fnstenv
dec
xor
or
mov
in
push
and
dec
shll
leave
sub
iret
dec
sub
test
add
int
add
mov
xchg
mov
hlt
or
sbb
ljmp
rcr
xchg
lds
push
and
das
xchg
mov
mov
bound
loope
lods
lret
sub
subl
or
in
das
dec
mov
push
push
mov
nop
outsb
sub
movaps
les
sub
dec
fmuls
inc
and
lea
sarl
pop
popf
dec
push
fadds
adc
stos
into
int
loopne
mov
out
adc
xchg
adc
mov
lds
mov
in
mov
out
fwait
jmp
pop
xchg
push
dec
jo
fidivrl
inc
iret
imul
rorb
push
int
adc
das
bswap
cmp
dec
out
sub
push
mov
jmp
dec
inc
jne
outsb
pop
sbb
cs
cs
xor
ljmp
jo
out
lea
into
dec
dec
sub
sub
sub
test
fwait
stos
aaa
push
out
int
pop
sbb
lret
movsl
repnz
mov
dec
adc
int
incb
mov
icebp
clc
or
lods
add
test
outsl
or
mov
dec
and
fwait
scas
xor
sub
fldz
mov
dec
jmp
push
push
sbb
jmp
mov
addr16
xor
dec
and
pop
inc
mov
sub
pop
out
das
push
lods
push
mov
into
push
sbb
comiss
in
daa
dec
lret
xchg
dec
adc
dec
sub
mov
js
stos
pop
out
dec
mov
mov
adc
pop
cmp
sbb
mov
push
jno
ljmp
mov
orl
shl
fs
xchg
jne
inc
or
stos
inc
xchg
xchg
test
enter
push
mov
push
mov
sub
jnp
or
pop
adc
mov
insl
test
or
push
inc
daa
fxrstor
adc
adc
pop
icebp
inc
or
xchg
adc
jge
mov
movsb
sub
loope
lods
daa
shrl
shl
or
lods
mov
stos
fiadds
xor
addr16
jmp
repz
imul
xchg
xchg
in
sti
bound
lahf
or
xor
adc
ljmp
out
sub
paddsb
pop
add
mov
daa
loop
xchg
leave
in
stos
lock
pop
nop
incl
adc
xor
dec
adc
push
lock
or
adc
in
fdivr
push
test
das
dec
mov
scas
lret
imul
add
loop
leave
dec
mov
lret
out
jnp
xor
sbb
sbb
stos
push
scas
ds
outsb
aas
sub
lret
leave
adc
adc
mov
dec
icebp
add
orl
sub
out
scas
iret
dec
mov
or
inc
xor
loope
sub
out
out
dec
loop
add
sbb
push
jnp
insl
pop
popa
cs
lret
testb
shrl
stc
adc
lea
sub
xchg
xchg
sbb
scas
dec
leave
mov
iret
xchg
jns
das
or
adc
cs
rclb
movsl
inc
icebp
sub
sbb
and
sub
ljmp
pop
ret
jo
pop
clc
cmpl
dec
clc
les
test
dec
dec
movsb
scas
cld
imul
outsl
inc
cwtl
loop
outsb
sbb
adc
pop
ljmp
stos
test
iret
jne
cmp
das
sub
in
sub
mov
js
inc
sub
sbbb
arpl
push
dec
pop
cmp
imul
and
xchg
aad
fdivrl
push
or
data16
xor
out
push
leave
test
sbb
push
into
daa
push
xorb
sbb
adc
push
sub
push
fcom
cmpsl
mov
leave
sub
push
mov
cmpsl
adc
int
or
lcall
dec
jmp
or
dec
pop
mov
mov
lods
scas
jns
push
pop
dec
lods
dec
out
es
adc
icebp
lds
and
or
pop
or
adc
adc
call
lret
jge
stc
fidivs
push
in
movups
mov
pop
adc
sub
xchg
icebp
stc
or
mov
insl
out
mov
jmp
jp
pop
xor
xor
int
scas
fisttpll
xor
daa
pop
jo
in
scas
and
loope
in
outsb
sub
or
int
iret
pop
mov
dec
jae
xchg
cli
out
iret
leave
dec
lret
sbbb
cmc
jo
lds
fiadds
outsb
sub
data16
scas
push
jg
push
iret
or
pusha
and
xor
outsb
loopne
add
cmpsl
jg
add
icebp
sahf
sub
dec
sbb
aas
cvtpi2ps
or
lret
ljmp
jmp
adc
jmp
sub
xor
dec
mov
outsb
scas
jb
loop
add
scas
arpl
out
hlt
sub
jle
leave
sub
adc
xor
cmpsl
stc
lods
xor
in
pop
in
push
rclb
jge
sbb
sbb
or
popa
lret
lods
test
loopne
pop
push
add
out
loop
or
iret
test
inc
pop
sti
bound
pop
data16
push
rorb
xchg
cltd
dec
mov
inc
pop
lds
int
pop
sub
movb
or
lock
cld
jo
pop
pop
dec
mov
adc
push
push
out
repnz
dec
bound
or
xchg
mov
leave
jmp
ljmp
pop
insl
sub
hlt
scas
xor
loope
leave
iret
loopne
loop
mov
mov
push
xchg
subb
out
fbld
out
into
inc
es
lds
mov
xor
and
cld
and
or
icebp
pop
mov
insl
paddusb
jmp
test
test
push
xor
or
sub
scas
pop
lret
adc
les
imul
cs
psubd
orl
push
outsl
adc
dec
iret
sbb
sbb
mov
mov
in
dec
sti
test
mov
aas
scas
lret
pop
adc
lds
adc
scas
dec
out
sub
mov
test
into
pop
mov
mov
push
dec
dec
imul
das
or
loopne
push
scas
adc
xor
pop
jne
mov
jg
movsb
push
lea
dec
or
data16
out
push
xor
mov
dec
dec
mov
cmp
or
xchg
out
jecxz
push
andl
iret
jnp
inc
das
lret
lods
les
mov
dec
imul
dec
push
dec
stos
pop
movsb
leave
push
rol
xchg
jp
out
push
movsl
imul
push
leave
movsl
das
imul
test
loope
leave
dec
sub
jmp
xor
push
scas
or
repz
data16
adc
pusha
loop
outsb
ret
arpl
arpl
sub
cld
loop
lea
shll
mov
pop
shll
icebp
outsl
jns
int
or
enter
mov
outsb
daa
pop
pop
cmpsw
adc
jecxz
imul
cltd
lahf
cltd
sbb
dec
lret
dec
mov
out
or
shr
mov
ror
bound
into
push
inc
out
sbb
mov
mov
or
sub
outsb
daa
adc
push
out
dec
or
adc
mov
cmpsl
test
sub
lret
imul
stos
pop
outsb
xchg
scas
pop
mov
mov
lods
out
inc
jl
push
out
sbb
push
pop
jbe
inc
pop
sbb
cld
xor
or
loope
cs
xchg
pop
xor
data16
sub
pop
addr16
das
sub
mov
push
dec
rcr
dec
sbb
jno
cmc
imull
xor
insl
leave
sub
mov
iret
pmaxsw
or
cmp
insb
in
repz
and
iret
aad
rcrb
orb
sbb
sub
or
scas
stos
fndisi(8087
insl
das
stos
rclb
dec
adc
fs
mov
les
out
loop
xchg
mov
pop
ret
out
arpl
or
xchg
inc
stos
into
mov
out
lcall
mov
sub
mov
lds
test
sarb
dec
push
hlt
out
sub
nop
int
cli
dec
dec
loop
jmp
cmpsl
cli
inc
jb
int3
test
jno
ljmp
outsl
insw
inc
lret
imul
and
out
cmp
xchg
dec
mov
or
push
pop
outsl
jecxz
lea
and
mov
sarl
adc
mov
fwait
push
popa
ljmp
or
sub
mov
or
dec
push
inc
loopw
jle
add
jbe
mov
loopne
scas
test
pop
jno
sub
outsl
cltd
or
xor
stos
int3
das
mov
add
scas
lret
cs
or
mov
pop
and
ja
sub
movsb
push
lds
scas
enter
int
sub
daa
in
xchg
and
dec
push
mov
dec
lock
leave
adc
ret
mov
jbe
dec
adc
iret
jo
jp
fadd
aam
orb
sub
inc
data16
loopne
outsl
jnp
xor
dec
stos
jge
cmp
mov
xchg
orb
xor
adc
outsb
inc
pop
xor
adc
jno
insl
pop
outsl
in
sbb
in
arpl
jmp
push
cmp
dec
das
adc
jno
rcll
push
out
inc
mov
stos
outsl
bound
pop
das
popa
popf
adc
cmc
mov
imul
dec
jne
mull
xchg
mov
mov
or
lea
adc
rcl
pop
dec
arpl
jae
out
shrb
push
push
cwtl
and
fwait
cs
push
jno
xchg
dec
add
dec
jne
mov
out
lds
inc
dec
aad
add
jle
loop
mov
pop
mov
xchg
mov
lret
imul
mov
sbb
mov
leave
ret
mov
imul
add
daa
or
out
add
lea
pop
lods
jge
push
or
orb
iret
add
out
or
in
pop
push
adc
loope
mov
dec
push
sti
sub
pop
repnz
jne
or
adc
adc
adc
in
daa
push
fdiv
pop
xchg
mov
mov
xchg
jb
sbb
inc
sub
das
cmp
pop
lret
xor
adc
inc
imul
mov
jmp
fsubrl
and
pop
add
sbb
fildll
mov
cmp
dec
adc
xchg
insl
bound
cmp
and
loopne
and
cmpsl
loop
lea
pop
xchg
negl
or
das
in
cs
jmp
pop
sbb
ficompl
dec
jge
or
xchg
out
out
inc
aam
imul
mov
jle
sub
enter
scas
out
loope
dec
fsubrs
and
push
loope
inc
pop
mov
xchg
outsl
xchg
or
int3
and
sbb
repz
stc
sub
adc
imul
adc
cwtl
push
test
arpl
lods
push
dec
or
lods
push
jle
ret
lret
pop
push
insl
dec
fstps
mov
loopne
daa
xor
stos
or
xor
loop
das
mov
lea
sub
out
sbb
sub
into
fisttpll
or
int
cmp
lretw
jno
cmp
dec
or
sub
mov
add
nop
sub
arpl
aaa
dec
sbb
leave
add
xor
pop
nopl
sbb
pop
push
and
sub
out
mov
mov
lret
sets
stos
or
xchg
mov
mov
adc
push
jo
or
push
mov
fs
rolb
push
add
cmpsl
jbe,pn
push
ljmp
lret
add
push
or
or
outsb
push
lods
push
cmpsl
sub
push
pop
sub
push
scas
adc
and
mov
lret
lcall
sub
mov
mov
lea
dec
pop
bound
inc
data16
mov
ret
jle
popa
cmp
adc
dec
outsb
outsl
daa
sbb
into
sub
mov
pop
incl
push
out
adc
sub
jecxz
addl
cmpsl
and
dec
add
sub
nop
sbb
add
inc
lret
addl
jo
ljmp
or
les
dec
sub
sub
or
pop
dec
ljmp
fwait
cs
push
dec
or
xor
and
or
aas
or
out
adc
adc
mov
in
inc
mov
out
lods
sub
out
movsb
psubsw
imul
sbb
iret
xchg
in
movsb
mov
pop
jno
lods
push
inc
sbb
mov
mov
outsw
sub
sub
and
lea
iret
sub
insl
fstpt
bound
xor
imul
orl
xor
or
pop
jns
cltd
clc
lret
fsubl
mov
add
dec
xor
mov
jmp
out
xchg
outsl
pop
insl
or
scas
or
inc
popa
or
scas
lret
iret
movsl
movsl
sub
test
popf
scas
or
in
cmp
ss
lods
jmp
rolb
inc
push
or
sbb
dec
jmp
sub
out
dec
sbb
mov
test
push
dec
cmp
xor
fwait
arpl
mov
in
mov
insl
or
push
cmpsb
scas
data16
push
push
adc
cmp
sub
leave
sub
shl
orb
scas
mov
hlt
mov
cmp
or
mov
dec
in
dec
fisttps
mov
iret
loopne
push
sub
daa
loopne
imul
and
mov
or
cwtl
dec
jl
mov
xchg
xchg
outsl
lods
dec
sarb
jns
xchg
cltd
insb
cmpb
out
in
lret
push
scas
pop
or
fwait
push
adc
mov
aad
jecxz
jb
add
or
bswap
pop
add
pop
pop
fwait
xchg
daa
popa
push
sub
sub
subw
cmpsl
ljmp
mov
stos
mov
xchg
lds
lret
sub
leave
mov
pop
mov
scas
push
cmc
les
or
punpckhwd
das
xor
dec
cmpsl
lea
and
push
add
mov
push
outsb
scas
or
aas
mov
out
mov
xor
dec
in
sti
mov
and
push
iret
imul
or
cmpsl
mov
xor
dec
addr16
imul
mov
jecxz
fwait
sarb
xor
out
or
sbb
fisttps
add
pop
sub
in
add
out
stos
push
lret
pushf
stos
push
or
inc
iret
pop
pusha
popw
lahf
pop
ja
das
sub
inc
ljmp
repz
outsl
xchg
xor
adc
adc
sub
into
mov
inc
inc
jle
cmp
mov
and
dec
dec
int
out
cmp
adc
add
out
or
mov
clc
jno
das
mov
pusha
cmp
sbb
xchg
icebp
add
loopne
inc
or
push
xor
xchg
outsb
sahf
dec
and
nop
dec
fmulp
and
ror
mov
dec
or
lods
stos
sub
pop
add
aam
inc
daa
mov
mov
popf
andl
pushf
outsl
dec
loopne
or
in
out
and
das
test
pop
insl
and
lods
cs
sub
push
mov
dec
and
out
jmp
mov
push
mov
dec
lds
cmpsl
or
sub
adc
sub
inc
into
sub
inc
fisttpl
in
nop
sbb
rcrl
popa
stos
in
stos
addr16
jg
out
adc
imul
das
outsl
adc
sub
jmp
lret
sub
data16
push
hlt
xor
sub
shld
int
stos
or
xor
sbb
fisttpll
dec
std
daa
xchg
pop
adc
pop
or
ffree
inc
sub
lods
loop
mov
dec
xchg
and
sub
shrb
cmp
imul
adc
into
dec
mov
daa
mov
imulb
cmp
lock
push
ret
cmc
leave
mov
inc
mov
jns
cld
scas
fiadds
dec
lret
cmp
aad
stos
ljmp
mov
dec
mov
pop
push
sbb
or
aas
and
lea
add
loop
mov
scas
add
mov
sahf
push
int3
mov
rcll
push
in
mov
or
add
mov
jmp
dec
out
mov
xchg
imul
push
popa
jge
adc
cli
nop
push
xor
mov
push
mov
dec
cmpsl
dec
xchg
mov
jge
addr16
sub
jae
dec
or
pop
fs
dec
push
stos
jnp
aas
mov
dec
test
pop
inc
dec
lret
adc
cmp
loope
push
cs
das
or
or
sahf
mov
and
push
arpl
adc
dec
inc
les
ljmp
fisttpl
das
dec
mov
adc
stos
addr16
dec
and
rclb
out
sub
sub
leave
sub
out
imul
fwait
test
xor
and
int
outsl
cmpsl
sbb
pop
xlat
lea
mov
in
lock
scas
xor
fisubrl
and
pop
rol
out
daa
push
flds
int
std
loop
lret
repnz
movsb
dec
lret
out
xorb
iret
jg
lret
inc
sub
or
imul
data16
and
adc
sbb
sub
sub
push
out
pop
stc
in
loopne
push
out
sub
and
mov
sub
pop
jecxz
add
or
mov
xor
and
cmp
xor
and
jmp
dec
push
enter
sub
mov
frstor
daa
pop
or
subb
out
pop
cmp
test
or
jmp
jmp
sub
xor
sbb
outsl
or
xlat
sub
in
dec
push
fidivrs
and
arpl
orl
loopne
add
out
test
dec
cmpsl
pop
and
out
jge
pop
or
out
cmpsl
dec
call
xchg
sub
mov
or
aam
movsl
scas
fdivl
mov
and
xchg
sub
push
dec
dec
inc
adc
jmp
dec
outsl
mov
dec
int
xchg
or
sub
iret
sub
hlt
inc
popf
xchg
cmpsb
int3
sbb
insb
xchg
imul
out
int3
into
daa
adc
daa
add
fldl
sub
sti
xchg
or
loope
das
adc
pop
in
loopne
xor
inc
out
mov
inc
jo
push
ljmp
adc
jmp
inc
lret
das
push
pusha
xchg
enter
mov
xchg
xchg
out
dec
inc
bound
and
lret
test
inc
pop
dec
adcb
mov
cmc
or
dec
and
sub
insl
addr16
sub
pop
xlat
fildll
pop
scas
out
or
jmp
or
outsb
xchg
icebp
dec
hlt
fildl
xor
cs
daa
ret
in
or
xchg
leave
mov
pop
push
fmuls
mov
iret
jmp
imul
mov
inc
data16
test
dec
lahf
fildll
adc
pop
jmp
push
adc
stos
push
or
fisttps
aam
xchg
dec
fucomi
movsl
insl
sub
pop
cs
dec
sbb
adc
out
mov
movsb
inc
imul
xchg
insl
sub
cwtl
cmp
stos
sbb
mov
iret
push
pop
xor
adc
scas
sub
jle
mov
outsb
push
lret
dec
dec
mov
adc
orl
scas
shlb
or
sub
adc
movsb
insl
sub
dec
sub
cmpsb
dec
lods
or
push
sbb
into
sbb
in
jmp
pop
les
jb
xor
mov
fucomip
cmp
pushf
out
push
push
mov
or
or
sbb
test
sub
adc
mov
cmp
dec
push
icebp
test
sub
pop
and
lcall
popa
imul
iret
jmp
sub
ja
ficomps
pop
leave
inc
imul
adc
jmp
mov
sahf
pop
or
pusha
test
and
loop
dec
movsl
xor
add
pop
mov
jmp
loop
ss
inc
pop
lea
pop
lret
mov
adc
dec
scas
push
mov
into
cld
xchg
hlt
icebp
adc
add
out
cmpb
push
outsb
insl
lahf
pop
or
cli
movsl
out
sbb
or
out
daa
mov
add
xor
or
loop
outsl
bound
dec
iret
imul
sub
mov
out
scas
lret
mov
into
sbb
xchg
int
xchg
loope
stos
ljmp
xor
outsb
adc
inc
test
jle
int
cli
popa
ljmp
into
lods
outsb
adc
cmpsl
dec
sub
ret
sub
cli
adc
sub
xlat
jmp
and
mov
loop
xor
push
lret
into
xor
jmp
ret
filds
ds
dec
int
or
sub
push
addr16
scas
and
lods
stos
mov
subb
jmp
or
push
mov
or
jmp
subl
push
ret
jmp
sbb
out
sahf
fildll
jg
lea
adc
les
loope
mov
mov
outsb
push
or
clc
or
imul
push
leave
adc
je
repnz
xor
arpl
jns
int
add
mov
lcall
fnsave
setg
ljmp
stos
outsb
cmpsl
mov
lock
xor
xchg
movsb
mov
outsb
dec
sub
iret
adc
bts
inc
das
cmp
das
stc
or
mov
push
aad
inc
sub
insl
decb
jnp
add
les
out
lods
aad
jbe
imul
arpl
xorb
xchg
in
iret
mov
scas
icebp
sar
out
icebp
xor
sbb
push
adc
out
test
shll
dec
dec
das
roll
sub
imul
popa
outsl
jmp
out
lock
mov
cmpsl
sub
pusha
jb
sub
pop
mov
test
arpl
mov
aas
mov
adc
mov
lods
lret
fucomp
out
jp
dec
adc
mov
dec
jmp
dec
leave
dec
or
iret
into
push
jb
push
repnz
loopw,pt
jnp
and
rorl
ss
sub
leave
dec
popa
xor
out
pop
imul
imul
in
outsl
adc
and
or
pop
lret
or
outsl
pushf
out
addb
mov
or
sub
out
jo
xor
xchg
cmp
inc
push
xor
dec
cmpsl
lea
femms
sub
ljmp
cmp
mov
sub
lret
sub
cltd
arpl
sub
das
jl
jb
cmp
mov
stos
pop
sub
cmp
adc
int
dec
mov
dec
das
sub
mov
daa
out
fistpl
iret
mov
or
xchg
sub
test
push
sub
dec
shl
jns
fdivs
outsb
sub
sub
lea
lret
enter
mov
inc
mov
mov
lret
ret
lods
iret
and
lret
mov
shl
pop
mov
subb
test
cmpsl
sbb
enter
into
sub
fwait
int
and
sub
or
sbb
in
rorl
cmpsl
or
imul
out
push
mov
stos
test
dec
xlat
iret
dec
xchg
int
jmp
pop
dec
sahf
push
popf
lea
lock
rorb
and
fnstenv
dec
lahf
in
out
shrb
adc
fisttps
inc
addr16
jmp
sub
sub
push
movsb
sbb
shl
movsl
out
mov
adc
jp
enter
xchg
popa
sub
push
push
inc
or
adc
cmp
mov
jg
js
jbe
jg
adc
sub
bound
add
dec
out
ret
xor
and
scas
pop
movsl
lahf
adc
dec
mov
xchg
comiss
aam
ret
ljmp
fwait
imul
lods
andb
push
adc
dec
stos
or
dec
mov
push
cld
pop
popf
mov
loope
mov
and
loope
into
jns
dec
adc
sub
ds
out
or
stc
xchg
repnz
jecxz
and
xchg
dec
or
cmpsl
dec
imul
mov
ljmp
xchg
clc
icebp
dec
aas
inc
out
push
add
jp
leave
sahf
stos
roll
adc
pop
dec
and
leave
sub
push
mov
sub
fsubl
fs
jns
mov
mov
mov
insl
mov
push
ljmp
or
adc
dec
stc
bound
test
xchg
insl
xchg
call
jmp
push
inc
les
scas
sub
addr16
cs
or
orl
push
fidivrs
xchg
sbb
lret
or
dec
test
or
or
sub
sbb
mov
or
inc
cmp
loop
repnz
mov
jmp
xchg
mov
dec
pop
sub
cmp
sub
bound
mov
sbb
test
rolb
leave
test
out
sbb
daa
sub
mov
mov
or
cmp
imul
pushf
sub
imul
out
mov
push
adc
into
mov
mov
movsb
and
sbb
daa
xchg
push
or
into
adc
push
jns
hlt
imul
mov
out
scas
int
and
mov
insb
dec
test
daa
add
or
das
fcompl
mov
dec
or
or
mov
push
sub
dec
dec
adc
add
mov
ret
xchg
arpl
mov
cvtps2pd
outsl
out
mov
scas
or
pop
subb
bound
jmp
fdiv
dec
jecxz
test
or
push
arpl
mov
adc
mov
test
xor
xchg
mov
stos
sbbl
mov
adc
adc
into
out
aad
scas
xchg
adc
out
mov
and
enter
into
das
cmpsl
in
dec
rolb
lret
dec
xor
dec
ljmp
dec
inc
pop
xchg
sbb
test
sbb
enter
outsl
xchg
dec
test
sbb
inc
stos
xor
push
sub
mulb
xchg
and
mov
push
or
inc
and
or
jmp
xchg
addr16
loop
out
push
adcb
push
test
adc
cld
shr
mov
and
scas
rolb
cmp
das
dec
imul
lcall
xor
stos
shlb
mov
cmp
fistpl
cltd
or
repnz
adc
subl
pop
divb
and
pop
adc
incl
or
pop
sub
das
push
dec
push
fld
out
rorl
adc
mov
scas
or
push
dec
out
jecxz
lret
jb
mov
or
ficoms
jg
pop
int3
add
mov
xor
add
addr16
xchg
loope
lods
xchg
or
into
lret
dec
fcoml
or
pop
out
stos
bswap
imul
repnz
mov
mov
add
das
jae
imul
dec
int3
push
scas
xor
or
pop
pop
xchg
dec
sbb
mov
adc
movsb
mov
cmp
or
enter
mov
pop
or
pop
xor
dec
pop
inc
xor
incw
lea
mov
imul
dec
push
dec
sbb
or
notb
mov
jmp
xor
xor
cwtl
ficoml
inc
int
mov
into
xor
sub
loopne
cs
mov
out
xorl
dec
pop
stos
leave
imul
les
xchg
adc
sub
dec
push
jbe
or
add
xor
in
addr16
mov
call
out
iret
popf
xchg
pusha
push
dec
loope
dec
push
imul
ljmp
scas
movlps
pop
and
pushf
push
data16
insl
bound
pop
daa
push
push
cmpsl
mov
and
lds
jecxz
arpl
movsb
add
push
mov
insl
dec
in
sub
dec
push
mov
es
add
leave
das
iret
mov
jnp
fisubrs
pop
sub
push
dec
or
jp
sub
loop
out
out
int
fmul
xchg
repz
mov
orl
sub
lea
bound
sub
mov
ds
imul
pop
and
adc
scas
push
ljmp
mov
pop
lahf
lea
adc
stos
sub
dec
sbb
ja
xor
stos
sub
popa
fidivrl
jmp
rorl
bound
dec
dec
adc
mov
daa
outsb
mov
sbb
shrl
fistpl
dec
cmp
aaa
or
cs
add
lea
or
stos
or
cmp
cmp
popa
adc
inc
push
push
pop
xor
insl
int
rorl
imul
fld
and
or
scas
out
mov
xchg
int3
fbld
adc
loope
dec
adc
bound
dec
leave
mov
xor
shrb
scas
adc
cmpsb
imul
bound
lods
cs
stos
outsl
or
movsb
imul
or
iret
sub
sbb
out
sub
cmpsl
imul
pop
outsb
insl
lods
sub
adc
mov
fimuls
imul
push
mov
push
lds
jno
lea
sub
or
dec
je
in
adc
out
in
lret
or
pop
xchg
insl
cmp
adc
pop
sahf
or
sub
pop
and
stc
mov
and
inc
push
cmpsl
data16
repnz
imul
dec
dec
adc
or
cmp
jmp
inc
xor
sub
and
xchg
dec
jmp
or
mov
cs
dec
dec
sbb
sbb
cmpsl
sub
stos
push
mov
mov
push
inc
arpl
xchg
push
loopne
out
xchg
pushw
push
mov
cmc
loopne
daa
imul
call
jo
xchg
pop
outsb
mov
jno
push
scas
adc
pop
sbb
imul
jb
add
popa
or
xchg
pop
lret
or
dec
dec
pop
daa
ds
stos
and
jb
dec
mov
add
fld
sub
ja
dec
jg
cmp
pop
push
pushf
push
flds
mov
lcall
mov
mov
test
orb
pop
imul
pop
mov
fnstenv
movsb
rcrl
dec
sub
outsl
lret
push
out
test
lds
or
les
out
ret
lahf
js
pushl
insb
or
test
cs
pop
jae
sub
cwtl
jno
cmp
packssdw
push
sub
pop
dec
mov
jns
pop
xchg
fwait
mov
xchg
mov
jl
pop
xor
out
and
lds
push
sbb
mov
cs
cwtl
add
bswap
stos
leave
out
iret
sub
scas
dec
dec
xchg
aam
and
lods
push
je
daa
bnd
push
inc
das
lret
int
cmovns
test
loop
sub
stos
adc
addr16
out
push
cmp
and
and
aad
fmul
iret
pop
dec
arpl
lret
rclb
ljmp
fistpl
xorb
ret
dec
dec
inc
mov
outsb
or
leave
pop
insl
dec
dec
xchg
cltd
ss
testl
dec
hlt
sbb
adc
into
lahf
inc
out
leave
or
loope
lretw
cmp
pop
int
das
repz
adc
scas
sub
sub
mov
xchg
and
adc
clc
sbb
lret
xor
lahf
sub
or
or
jecxz
das
jno
sub
sub
dec
movsl
out
stos
cmp
int
mov
pop
and
lods
int
pop
lods
mov
sub
mov
lret
pop
into
cmp
dec
loope
insl
cli
or
arpl
or
jl
or
dec
adc
push
and
daa
int
call
push
or
inc
pop
and
scas
sub
mov
xchg
imul
mov
jnp
stc
sub
sub
jle
sub
jno
and
jmp
sub
ret
aad
loop
sub
jecxz
adc
sub
mov
add
jo
mov
lret
outsl
xchg
loope
out
enter
push
in
scas
iret
mov
leave
push
xchg
inc
cltd
dec
mov
or
xor
out
pop
movl
xor
xchg
xchg
das
movsb
mov
sub
xchg
lea
pop
shrb
in
test
and
daa
dec
out
into
lea
or
push
push
cmp
stos
outsb
jmp
imul
shll
int3
call
dec
nop
inc
or
sbb
pop
pop
jns
push
cmc
and
push
sub
test
or
or
insb
xchg
fsubrp
out
push
inc
dec
sub
sbb
dec
mov
ja
aam
fcomi
in
nop
icebp
inc
out
adc
jge
dec
outsb
dec
xchg
aas
jmp
mov
xchg
xorl
adc
pop
xchg
cmpsb
out
or
scas
push
lret
data16
add
leave
xor
jecxz
adc
or
in
out
pop
push
out
add
das
cltd
daa
loope
pcmpgtd
mov
lods
sub
int
inc
inc
sub
sub
out
rcll
jbe
or
or
jno
test
in
pop
test
sub
sub
pop
out
pop
fwait
dec
cmp
inc
aaa
call
lea
mov
je
pop
dec
fwait
loope
packssdw
mov
stos
lea
mov
pop
xchg
inc
daa
sahf
push
movsl
adc
pop
or
std
mov
sub
sbb
adc
adc
loope
leave
dec
in
cmpsl
aaa
mov
sbb
dec
dec
sub
mov
fsubrs
dec
stos
movsb
pop
sbb
push
imul
dec
stos
jbe
test
stos
les
sub
inc
lods
sub
adc
stos
mov
dec
mov
adc
inc
inc
out
mov
ss
xchg
iret
bound
sub
arpl
mov
mov
and
adc
or
imul
inc
int
in
xchg
fidivrs
inc
push
outsl
out
fwait
cmpsl
sub
inc
jo
jns
add
push
jae
push
ss
lret
pop
sub
jg
lock
mov
xchg
sub
adc
daa
cmp
dec
jno
pop
pop
dec
subb
mov
fdivl
sbb
imul
push
xlat
ret
cmp
push
hlt
hlt
sbb
pop
popa
pop
das
mov
xchg
dec
imul
adc
jmp
out
fisubrl
mulps
mov
pop
pop
ljmp
mov
adc
out
fcmovnbe
xchg
addr16
lds
aaa
inc
leave
inc
jo
mov
sbb
sub
psadbw
scas
push
inc
push
sub
adc
lret
inc
pop
ljmp
jmp
loopne
xlat
xchg
add
mov
out
testl
insb
pop
xchg
stos
mov
mov
out
test
daa
lds
or
xchg
and
mov
lret
sub
int
leave
push
and
inc
inc
cmc
push
mov
cltd
pushf
or
out
ljmp
out
push
pop
scas
adc
lea
out
adc
mov
or
outsb
sub
adc
mov
dec
vmwrite
dec
lret
inc
add
loopne
or
ret
sub
enter
loope
out
daa
movl
push
movb
sub
imul
or
test
out
or
push
adc
mov
inc
daa
dec
lock
inc
sbb
xor
scas
scas
int
sub
stc
or
mov
adc
cmc
lds
xchg
sbb
sub
out
cmp
js
rorb
mov
jmp
imul
das
xchg
stc
dec
mov
push
and
outsl
mov
xor
test
or
leave
das
inc
pop
mov
xchg
adc
mov
cmp
loope,pn
jmp
sub
in
das
cwtl
repnz
imul
adc
push
orl
sub
loop
aam
sahf
mov
js
not
inc
inc
les
addr16
xchg
lret
ja
adc
lahf
icebp
or
cmpsl
dec
mov
bound
out
daa
push
or
stos
sbb
iret
insl
adc
in
cmpsl
sub
mov
sub
and
insl
stc
rolb
jmp
and
stos
sbb
jne
out
mov
fildll
ljmp
loopne
add
sub
sbb
cli
sub
test
imul
cmp
jmp
sub
stos
imull
loope
outsb
mov
testb
jecxz
adc
adc
jns
inc
push
adc
das
addb
adc
iret
pop
lock
in
dec
mov
sbb
sub
test
scas
jecxz
pusha
in
sub
sub
je
jne
scas
addr16
movntps
xor
adc
pop
xchg
push
inc
pop
movsb
test
dec
stos
or
outsl
int
xchg
enter
test
pop
bound
outsb
lock
repz
pop
sub
adc
dec
outsb
adc
outsl
insl
clc
iret
outsl
inc
sub
inc
stos
lea
push
mov
lret
push
fwait
or
ja
orl
fiadds
fisttpl
adc
jmp
mov
dec
insl
dec
push
into
or
lahf
out
add
mov
ret
push
in
lret
out
add
or
icebp
cltd
dec
xor
mov
shll
xchg
ret
int3
ljmp
sub
std
out
pop
sti
lock
mov
jp
sbb
stos
jge
xor
or
xor
lods
out
int3
lea
sarb
pminub
out
jmp
xlat
test
leave
push
cwtl
cs
pop
loop
lahf
jmp
fs
push
ds
pop
jns
pushf
fdivrs
imulb
adc
adc
popf
mov
adc
sub
loopne
into
push
or
dec
outsl
xchg
outsb
mov
int
fmull
fwait
out
imul
insl
xchg
ds
or
pop
mov
pop
adc
add
cmpsl
leave
adc
lret
jmp
mov
insl
movups
xor
push
dec
jno
outsl
nopl
das
leave
mov
jae
push
or
add
sub
add
inc
gs
ja
or
or
cmpsl
scas
jmp
hlt
shlb
scas
mulb
pop
ret
mov
psadbw
jmp
outsl
loop
out
push
dec
scas
or
cld
xor
xor
and
ljmp
nop
iret
or
out
stos
mov
sbb
adc
and
push
xchg
lcallw
nop
cs
loop
push
loope
scas
pop
sub
sbb
push
ljmp
lds
test
popf
shl
test
leave
push
out
ret
inc
arpl
inc
push
stos
cltd
ljmp
pop
or
das
outsb
mov
inc
ret
out
outsl
jmp
xchg
loope
int
stos
inc
lcall
jmp
outsl
and
mov
xchg
into
sub
sub
xchg
test
daa
imul
fcmovu
sbb
out
xchg
lret
jbe
pop
sub
repz
loop
mov
in
fistpll
inc
int
pop
in
loop
dec
or
xchg
adc
dec
jmp
sub
mov
js
sub
cli
and
rolb
pop
int
out
dec
lea
aas
sahf
or
or
dec
out
sbb
and
into
leave
mov
jmp
outsl
imul
outsb
adc
outsl
jg
add
out
leave
fwait
dec
cmpsb
loopne
popa
popl
or
imul
fwait
sahf
mov
daa
adc
pop
hlt
jns
sbb
cmp
lea
xchg
or
lods
mov
xchg
loope
dec
cmpsl
das
adc
or
cmp
fldenv
or
ljmp
jmp
icebp
mov
shlb
ret
pop
sbbl
mov
mov
jmp
adc
and
sub
sub
insl
jle
xchg
jp
or
jbe
pop
lea
pop
dec
pop
cmp
mov
repz
or
loope
push
daa
int
in
and
dec
jge
dec
sub
inc
mov
or
nop
outsb
pop
mov
add
scas
mov
sbb
sub
adc
sbb
mov
loope
xor
mov
mov
ljmp
or
dec
xor
adc
add
inc
sub
stc
xor
imul
mov
insl
dec
out
das
mov
jecxz
imul
lods
dec
cmpsl
xchg
mov
jl
sahf
mov
imul
or
movsb
sub
mov
adc
test
sub
inc
or
add
jl
xchg
mov
cmpsl
pop
leave
into
out
mov
loopne
xchg
sbb
imul
sub
or
sub
sub
out
or
pop
xchg
push
jg
imul
pop
movsb
mov
daa
dec
push
mov
mov
enter
fisttpll
mov
sub
mov
out
adc
push
insl
clc
inc
outsl
adc
or
clc
aad
dec
xchg
sub
dec
or
mov
jge
cmpsb
stos
or
outsl
or
mov
jbe
dec
push
or
and
dec
or
out
mov
ljmp
ficoml
iret
int
sub
lock
lahf
test
and
sub
or
std
push
pop
popf
stos
sbb
dec
daa
mov
xor
int
fprem1
sbb
loope
icebp
loopne
andl
or
cmp
dec
insb
jecxz
movsb
pushf
xor
dec
and
jmp
mov
jmp
leave
bound
jg
xchg
shl
xchg
mov
cmp
pop
test
fiadds
stos
adc
lds
xor
ljmp
enter
icebp
xchg
push
leave
xor
leave
ljmp
dec
cs
xor
lea
aas
dec
or
int
mov
mov
lret
out
ljmp
adc
loopne
add
mov
sub
adc
fwait
pop
cmp
adc
jmp
test
jno,pt
jmp
adc
notb
push
int
dec
stos
mov
loope,pn
daa
jmp
cli
cmp
inc
ret
jae
stos
out
push
jno
paddw
jns
stc
out
in
and
mov
cmp
xchg
dec
out
push
sbb
or
xor
outsb
sub
add
ljmp
mov
addr16
dec
xor
into
lret
bound
cwtl
loop
mov
jb
sti
cs
movsb
hlt
and
sub
xor
sub
pop
push
jbe
dec
sub
dec
lods
int
ret
data16
or
sub
and
or
orl
sub
mov
into
and
dec
pop
mov
mov
out
lods
scas
inc
xor
in
or
or
or
jns
xchg
inc
inc
scas
cwtl
popf
dec
out
push
into
mov
loope
mov
mov
push
inc
or
test
sub
movsl
daa
iret
push
mov
or
xchg
sub
daa
adc
out
mov
out
das
movsl
leave
sub
nop
fisubl
or
aaa
in
test
iret
push
ja
ljmp
hlt
test
jno
int
out
icebp
dec
lods
inc
icebp
aas
popf
or
out
addr16
cmpsb
dec
sub
test
push
pop
loop
mov
iret
add
cs
out
push
xchg
test
sub
dec
jb
and
jbe
lret
lret
inc
in
je
pop
mov
dec
in
jmp
or
dec
or
test
addr16
loopne
cli
loopne
dec
adc
ljmp
shrl
xor
mov
sub
or
adc
test
xor
sbb
hlt
jge
mov
scas
sub
das
adc
pop
push
divl
push
and
cmpsl
push
jmp
stos
lock
lret
cmpsl
ret
outsl
dec
ret
push
mov
or
sbb
mov
clc
icebp
push
lret
cmp
add
cs
cmp
dec
push
mov
or
lret
inc
inc
jno
repz
bound
cmp
sub
or
daa
and
lds
jecxz
lret
sbb
mov
imul
mov
insl
inc
rorb
cmp
roll
jmp
inc
subl
push
icebp
xor
or
xor
cs
mov
loop
outsl
ja
leave
iret
imul
sbb
int
mov
mov
sub
adc
lcall
outsl
out
xchg
in
lret
pop
ldmxcsr
out
or
test
imul
data16
aam
lret
out
dec
daa
in
dec
cmp
xchg
dec
mov
orl
outsl
lods
outsb
ljmp
push
scas
lret
sbb
jne
stos
test
lods
cld
adc
jmp
sub
pusha
push
popa
sahf
dec
insl
lock
mov
cmp
xchg
pop
int
int
stos
daa
stos
sbb
xor
in
push
dec
aas
jnp
adcl
lods
addr16
sti
cltd
sub
adc
das
xor
lds
add
dec
jns
inc
pop
lea
cmp
jne
scas
imul
push
push
push
pop
lahf
add
jge
dec
sarl
push
out
sbb
aas
out
scas
cs
iret
sbb
xor
mov
leave
dec
mov
ficompl
addr16
iret
insl
outsb
pop
int3
fstps
cmpsl
or
cmp
dec
sub
adc
dec
adc
and
into
pop
dec
adc
xchg
pop
or
cwtl
lds
push
or
jno
scas
out
jp
mov
lods
testl
lret
cmp
cmpsl
enter
leave
mov
mov
or
loop
sbb
and
dec
bound
loope
lods
fldt
mov
cltd
push
cltd
movsb
testb
aad
ret
arpl
cmp
enter
ljmp
leave
push
test
sub
xor
push
sub
mov
shll
stos
lret
xor
sub
jb,pn
rcrb
and
movsl
dec
out
pop
test
in
cmp
mov
unpckhps
sub
scas
adc
push
cmp
mov
pop
and
sub
xchg
push
or
sbb
adc
rorb
outsl
mov
lretw
dec
mov
sbb
in
sub
dec
out
ret
clc
xor
mov
sbb
or
stos
sub
or
in
or
ret
or
bound
mov
dec
cmp
cmpsl
stos
das
sub
inc
lock
mov
scas
mov
xchg
rorl
sub
bound
mov
sub
mov
fistps
mov
cmpsb
outsb
lret
rorl
ljmp
stos
insl
dec
or
dec
inc
fisttpl
ljmp
mov
dec
adc
push
test
ret
dec
lret
pop
push
mov
push
xchg
jmp
cmpsw
setge
lret
jmp
ret
dec
addr16
out
das
sub
leave
or
adcl
jns
sub
aaa
sbbl
sbb
cmpsl
adc
inc
cmp
xchg
ljmp
sbb
mov
mulb
inc
out
int
jge
cmc
aas
xchg
or
leave
sbb
out
fisttps
imul
test
pslld
sahf
xchg
out
cmpsl
stos
add
mov
sub
dec
icebp
cwtl
insb
jns
adc
mov
scas
or
push
mov
dec
jp
in
jns
pop
dec
sub
sub
into
pop
aad
jns
pop
or
xor
add
int
dec
cmpsl
imul
popa
mov
sarl
outsl
scas
mov
or
and
or
inc
sub
jmp
dec
pop
mov
or
outsl
mov
aas
jecxz
insl
addr16
por
push
das
iret
and
pop
adc
push
push
jle
inc
pop
into
lods
mov
ljmp
dec
punpckldq
push
jge
push
andb
sbb
sub
jmp
or
push
ret
out
or
adc
or
or
repz
pop
xor
dec
pop
mov
ljmp
adc
push
out
mov
push
gs
stc
adc
mov
xchg
cld
call
popa
lahf
stos
cmp
call
fistps
cmpsl
shrl
aas
mov
leave
imul
xchg
das
or
out
jo
cmpsl
pop
lock
jae
xlat
adc
mov
dec
or
push
or
sbb
dec
out
and
out
dec
pop
xchg
sub
loope
movsb
adc
int
sub
or
or
imul
imul
or
scas
adc
dec
push
xchg
and
jns
out
aas
cs
xchg
xchg
imul
push
or
or
adc
or
xor
outsl
mov
adc
dec
out
xchg
stos
inc
cmp
inc
ljmp
inc
sbb
or
mov
pop
mov
or
xchg
adc
bound
adc
sub
pop
mov
xor
sub
dec
mov
les
pop
loope
mov
or
push
and
lds
test
xchg
dec
inc
icebp
lods
iret
dec
adc
pop
dec
insl
int
cli
adc
enter
aas
add
sub
push
sbb
xor
cvtpi2ps
das
sub
rcl
dec
leave
movsl
imul
or
outsb
cli
mov
sub
pop
mov
jo
cwtl
dec
jecxz
lea
cmc
test
das
inc
add
sub
iret
xchg
into
test
scas
mov
subl
jmp
mov
and
lods
sbb
out
out
xor
add
mov
or
cs
int
daa
mov
inc
dec
sub
mov
xchg
xor
cmp
lret
sbb
scas
ds
iret
lret
int
pavgb
pop
sub
dec
int
mov
sbb
movb
fadds
or
sub
iret
insl
out
stos
and
scas
push
xchg
dec
sbb
or
stos
pop
inc
cmp
iret
lods
mov
add
fisttpll
mov
dec
and
ret
outsb
lea
aad
daa
sub
inc
push
ret
imul
dec
jecxz
stos
ljmp
xor
in
daa
or
sbb
daa
push
int
dec
out
insl
pop
inc
iret
xchg
imul
pusha
lret
mov
or
push
cwtl
aam
popa
cmpsl
mov
sub
inc
adc
js
lcall
jmp
dec
push
dec
dec
sbbb
outsb
int3
stos
sbb
or
clc
push
inc
and
das
dec
dec
mov
out
xchg
push
or
mov
ljmp
iret
pop
cs
aas
jp
sub
xchg
fwait
sbb
sub
cmpsl
lea
repnz
ror
in
jns,pn
outsl
test
xchg
pop
test
out
popa
inc
dec
sub
lea
cwtl
fldcw
fistpl
add
das
sbb
stc
dec
jo
mov
or
es
mov
addr16
and
add
lret
ret
or
enter
cltd
sub
outsl
dec
hlt
sub
or
into
pop
pop
shrl
imul
popa
mov
loope
pop
dec
mov
push
bound
rsqrtps
pop
add
push
push
pop
xor
adc
inc
or
dec
fcmove
jns
sub
dec
stos
pop
pop
sub
ljmp
das
imul
int
jmp
push
xchg
xchg
adc
inc
or
inc
arpl
push
add
dec
sub
stos
mov
xor
xor
sub
inc
lret
ret
dec
lret
mov
cs
inc
sbb
cmpsb
pop
out
imul
lret
push
cmc
sub
pop
mov
bsf
lret
xor
sbb
xchg
lods
dec
pop
jge
dec
mov
ljmp
addr16
dec
stos
sub
cmc
push
out
dec
inc
daa
dec
sub
add
insl
lods
lea
fwait
sub
std
pop
ret
dec
test
out
scas
push
ret
or
in
push
dec
lods
insb
ljmp
sub
adc
xor
outsl
or
fmul
sub
ja
imul
dec
lret
shl
sub
dec
iret
fisubs
xor
mul
and
and
or
cltd
mov
out
sbb
mov
push
push
and
movsb
sub
aad
inc
daa
pop
xchg
rol
iret
sbb
sub
mov
imul
mov
mov
les
and
stos
lock
scas
jmp
mov
arpl
arpl
dec
pop
data16
repz
sub
and
daa
icebp
arpl
cli
xchg
movsb
dec
insl
inc
data16
xor
les
xchg
leave
sub
cmpsl
test
es
jle
pop
stc
or
out
or
push
dec
and
out
adc
add
xor
or
movsb
sub
sub
dec
addr16
dec
sub
sbb
mov
movsl
outsl
or
push
pop
shl
shlb
testl
cmp
or
insl
mov
js
scas
inc
lock
mov
cwtl
xor
int
or
mov
or
mov
mov
call
lods
mov
aas
xchg
sub
into
out
inc
or
pop
lcall
out
push
dec
sti
add
int
xchg
push
cmp
out
sub
cmp
add
inc
or
push
or
dec
adc
pop
scas
jb
lret
adc
mov
push
mov
jb
cld
jno
sub
jle
cmp
jmp
push
arpl
jecxz
clc
popa
inc
xchg
jge
mov
aad
mov
ret
cs
fisttpll
loopne
jmp
sub
daa
insl
mov
mov
jl
addl
out
stos
mov
and
aaa
test
jp
dec
int3
rcrl
sub
inc
gs
dec
in
ret
push
sahf
sbb
loop
xor
lods
in
add
or
mov
mov
das
xor
pop
out
mov
cs
dec
jo
jnp
lods
outsb
pop
out
sbb
xor
sub
popl
daa
ljmp
or
pcmpeqw
xchg
int3
add
bswap
data16
lea
aam
stos
shll
push
xchg
pop
cmp
stc
dec
popf
cmpsl
push
dec
enter
xchg
sarl
mov
sub
mov
out
dec
mov
stc
mov
mov
loope
imul
mov
mov
cmp
mov
adc
sub
cltd
data16
lret
and
sub
dec
dec
lea
or
mov
pop
in
fmul
stos
inc
fisubs
test
xor
lret
scas
inc
icebp
xchg
xor
xor
arpl
stos
icebp
test
jmp
dec
push
inc
adc
add
das
rcl
dec
test
xchg
inc
out
sbb
adc
mov
int
push
push
iret
sub
lods
or
sub
test
xchg
das
jge
cltd
loop
push
or
out
jmp
jmp
dec
popa
push
dec
pop
out
xchg
sbb
push
loopne
out
imul
subl
and
sub
lock
loop
test
cmp
mov
sub
add
lret
dec
xchg
or
or
sub
das
mov
pop
leave
sub
or
xor
cmp
stos
jmp
dec
addr16
add
movaps
int
shlb
scas
xchg
daa
xor
xchg
mov
jle
movsl
out
popa
iret
cmpsl
jle
add
push
mov
mov
or
jg
lret
xchg
mov
dec
jno
jmp
and
in
lret
xlat
dec
push
arpl
inc
and
int
push
xchg
adc
addr16
mov
in
lock
pop
out
jmp
in
mov
lret
clc
repnz
test
rol
dec
xor
mov
nop
ror
pushf
pop
cs
cwtl
rolb
add
dec
sbb
ljmp
cmp
jmp
xchg
in
test
cs
xor
pusha
xchg
add
bound
xor
push
ret
pushf
cltd
out
sub
aas
jb
or
xchg
mov
iret
out
inc
dec
mov
cld
pop
push
orb
fstl
mov
jmp
jmp
movsl
imul
or
adc
scas
sub
sub
or
xchg
ljmp
adc
daa
mov
ret
cs
dec
and
or
data16
in
push
pop
sub
dec
or
jge
jmp
xchg
sbb
xchg
test
sub
pop
call
cmpsl
stos
add
stos
or
jno
stos
ljmp
push
les
dec
ds
xchg
cmp
pop
int3
push
outsb
cmp
test
push
lret
stos
fildll
cmp
mov
rcll
adc
imul
repnz
dec
insl
in
mov
xor
jmp
xchg
into
mov
mov
jb
push
inc
fldcw
lock
or
add
inc
stc
sbb
imul
repnz
jg
inc
jnp
orb
push
xor
mov
rorb
or
xchg
iret
insl
cltd
outsb
push
in
imul
adc
dec
sbb
or
dec
add
or
out
lods
incb
js
loope
data16
cmpsl
xchg
xchg
pushf
xor
insl
adc
jae
mov
sarb
sbb
addr16
lret
sbb
pop
fneni(8087
bnd
pop
sub
rorb
push
scas
mov
mov
push
or
dec
sbb
insl
add
pop
mov
push
sti
xor
in
mov
cmpsb
sbb
mov
xchg
stos
jnp
sbb
out
mov
adc
push
aad
stos
or
sbbl
data16
int3
scas
pop
jle
daa
add
and
sub
xchg
cltd
adc
into
mov
scas
pop
icebp
movsb
dec
daa
out
lret
cmp
xchg
add
dec
dec
and
mov
push
icebp
out
imul
xchg
lock
movsl
insl
cmpsl
fwait
dec
les
fimull
or
ret
mov
or
dec
imul
cmp
js
mov
out
mov
pop
fwait
mov
pop
inc
pop
mov
sub
push
fsubrp
xchg
mov
jp
cmpl
sbb
insl
stos
push
xor
sub
cld
push
sub
fimuls
sub
push
lds
test
imul
subb
xor
mov
pushf
test
mov
xchg
jno
insl
leave
adc
sbb
test
cmpsl
outsl
jecxz
loop
or
mov
enter
sbb
or
add
imul
int
push
out
mov
in
out
or
lods
inc
xchg
arpl
pop
push
push
or
dec
outsl
into
scas
xor
in
orl
push
push
jmp
push
push
mulb
out
mov
dec
imul
scas
lock
push
mov
inc
test
out
push
jecxz
outsb
dec
sbb
inc
mov
sbb
sub
push
xchg
jmp
or
push
jl
cmpsl
dec
inc
mov
mov
and
loope
lods
pop
sub
sbb
sub
inc
mov
aam
ret
push
mov
inc
lret
add
sub
insl
int
or
scas
fwait
scas
fimuls
pop
xchg
clc
inc
aaa
and
out
daa
lea
adc
rcll
or
ljmp
dec
call
push
mov
leave
or
pusha
jmp
andl
sub
lret
iret
pop
cli
or
cmp
stos
das
dec
stc
sub
and
nop
jmp
por
jg
xor
sub
mov
push
cmp
cmp
mov
test
iret
inc
movl
ror
call
xchg
negl
out
sub
data16
jbe
stos
in
int
inc
dec
jno
sub
das
sub
lock
or
or
sub
out
mov
repz
jns
dec
push
int
sub
cmp
or
lcall
mov
outsl
sub
dec
outsl
sbb
test
pop
ficompl
push
into
adc
ret
jle
ret
test
cwtl
add
mov
mov
adc
mov
mov
in
and
adc
scas
popa
mov
add
push
inc
insl
scas
push
sub
fisttps
push
sub
lret
es
iret
and
add
xchg
or
push
in
fdivs
mov
ficoml
scas
dec
dec
lods
clc
aas
adc
repz
das
mov
imul
sub
mov
std
sub
scas
sub
sub
mov
daa
sbb
cmp
dec
jmp
es
inc
inc
shll
loope
bswap
imul
inc
jmp
sub
arpl
and
sub
outsb
xchg
mov
cs
inc
stos
pop
dec
unpcklps
out
int
or
cmp
rorb
xchg
pop
imul
sbb
sub
movl
push
vmwrite
cmpsl
pop
lea
arpl
dec
std
lock
ljmp
int
mov
dec
into
dec
pop
jbe
and
cmp
pushf
leave
test
mov
cwtl
push
bound
jne
stc
pop
dec
xchg
lods
sub
fistps
dec
insb
leave
and
dec
xor
repz
or
jno
pop
dec
lods
adc
adc
push
stos
pop
xchg
imul
cmp
scas
popf
int
mov
data16
ret
in
inc
loope
lret
xor
mov
cmpsb
sub
rolb
out
cmpsl
push
xor
sub
sbb
in
and
sub
sub
sbb
or
jmp
pop
xor
data16
inc
sub
pop
pushf
out
mov
ret
sub
movsl
dec
scas
addb
in
mov
dec
lods
movsb
sub
or
push
or
xor
dec
push
xchg
adc
jmp
xchg
pop
movsb
out
rorl
imul
aad
xchg
arpl
rolb
inc
or
push
dec
das
add
adc
sti
mov
pop
movsb
cwtl
cmp
jb
lahf
fxch
clc
xchg
mov
fisttps
sub
push
push
stc
movups
cs
lods
dec
push
insb
and
outsb
sub
and
cmpsl
or
aam
sub
lret
stc
push
adc
fcmovne
test
rorl
roll
in
mov
and
outsb
leave
mov
jne
dec
mov
mov
sbb
dec
shlb
ret
movsb
bound
sub
push
or
cmp
xchg
add
mov
adc
cmp
lea
mov
into
iret
mov
addr16
fld
or
loop
imul
ljmp
dec
cmp
movsb
mov
call
jno
pop
dec
scas
iret
jo
pop
sub
arpl
push
fnsave
sarb
or
sbb
orl
fstpt
adc
mov
mov
xor
sahf
xor
out
out
or
lds
fsubr
ret
lods
adc
mov
data16
dec
into
inc
jns
sbb
scas
push
xchg
push
adc
cli
test
cs
imul
inc
clc
or
imul
sub
sub
inc
dec
mov
sbb
leave
ljmp
lods
pop
into
dec
or
or
or
add
out
mov
inc
das
dec
or
push
sub
or
dec
mov
test
jp
jmp
test
hlt
call
movl
test
lods
dec
dec
sub
mov
jbe
dec
add
das
cli
fisubrs
or
or
stos
adc
sbb
ret
xchg
movsl
dec
push
pusha
into
jmp
xchg
outsl
int
cltd
jmp
mov
cs
adc
sub
xor
pop
lods
mov
aas
push
inc
xor
mov
lahf
sbb
cmpsl
out
dec
out
outsl
or
add
dec
daa
hlt
popa
ljmp
adc
jle
xchg
sbb
out
fucomip
add
xor
sub
cwtl
in
adc
mov
jmp
leave
or
mov
cmovs
stos
and
stos
xchg
loop
lret
std
or
pop
in
mov
test
dec
out
insb
popa
scas
ljmp
cmpsl
mov
outsb
sbb
lods
mov
mov
pop
iret
cmp
ljmp
sub
into
or
push
sub
push
push
ljmp
add
dec
jmp
leave
or
push
sub
cmp
pop
and
or
lods
ljmp
out
loope
dec
test
scas
in
das
mov
enter
imul
aam
dec
cmpsl
jge
pushf
daa
mov
imul
mov
adc
dec
xchg
mov
mov
cltd
out
stos
imul
arpl
ljmp
in
in
dec
in
push
and
pop
push
dec
in
cmp
jecxz
les
xchg
cmp
divl
mov
dec
adc
incb
pop
out
lret
dec
cmp
xchg
inc
mov
sub
data16
outsl
fadd
test
ret
repz
and
insl
xor
inc
lret
sub
xchg
jecxz
andl
repnz
cmp
sub
pop
xchg
ds
xor
bound
rorl
adc
scas
sub
push
push
bound
scas
dec
scas
and
or
push
js
xchg
pop
inc
pop
mov
sbb
lock
aad
repz
lret
into
or
xor
fdivl
lock
cmp
inc
sub
dec
repz
inc
mov
add
mul
xchg
xor
dec
outsl
mov
pop
cld
mov
mov
and
rolb
stos
cmpsl
inc
pop
das
pop
or
popf
mov
mov
test
fwait
mov
aas
push
jge
enter
sub
imul
sub
cltd
loope
aas
jle
mov
cmp
adc
nop
outsl
sub
jl
out
out
packuswb
xchg
mov
pop
inc
lret
out
out
mov
push
xchg
push
add
or
daa
lock
fucomip
rcrl
ret
push
xchg
or
loopne,pn
mov
lret
mov
add
stos
pop
adc
or
dec
sub
std
mov
lret
and
pop
pop
outsb
sbb
sub
sub
pop
xchg
out
xchg
push
xchg
inc
sbb
imul
dec
in
out
cmc
push
adc
sbb
pop
push
cs
sub
dec
or
dec
dec
imul
inc
mov
outsl
popf
stos
ret
jmp
xchg
sbb
lea
jo
xor
push
adc
scas
das
jmp
mov
lret
dec
xor
loope
das
leave
stos
imul
adc
insl
xor
fwait
movsb
dec
stos
lods
pusha
mov
push
add
mov
dec
out
dec
inc
jns
rorl
ljmp
imul
sub
push
push
dec
mov
cmovp
push
or
mov
jge
leave
daa
lret
cli
xchg
imul
mov
mov
mov
mov
sbb
dec
out
lea
lods
adc
adc
mov
push
push
cmp
cs
dec
int
sbb
mov
push
sub
ret
dec
xchg
mov
fildll
lret
shr
scas
push
or
dec
cli
jbe
faddl
in
pop
or
insl
pop
sub
outsb
dec
cltd
add
and
pcmpeqd
lret
inc
arpl
push
scas
int
mov
jle
clc
js
push
dec
xchg
adc
xchg
push
adc
or
test
pop
aad
lods
sbb
lds
stos
scas
pop
imul
mov
into
ret
pop
adcb
dec
or
cmpsb
push
sbb
iret
aas
xchg
shrl
lds
xchg
or
sbbl
sub
pop
jnp
scas
outsb
or
xchg
movq
jp
stos
sub
iret
dec
inc
enter
out
repz
adc
out
pop
stc
jbe
insb
stos
scas
fadd
in
mov
mov
sbb
int3
push
sbb
or
int
pop
or
popa
sub
clc
ret
int3
test
das
je
mov
repz
cld
mov
adc
clc
adc
adc
movsl
mov
or
das
pop
push
scas
lea
pop
fadds
fisubs
pop
mov
cltd
lahf
cmpsl
or
ret
outsl
in
mov
das
dec
add
dec
stos
out
aas
and
mov
hlt
push
dec
cmp
iret
dec
imul
sahf
into
mov
movsl
sbb
xchg
scas
test
ret
scas
add
cmp
and
pop
adc
mov
sbb
aaa
cmp
sub
test
xchg
dec
rcrb
lock
lock
xchg
stos
xchg
push
pop
bound
ror
ret
inc
bound
insl
xor
mov
dec
dec
jns
lret
mov
pop
scas
push
ror
dec
jb
and
push
stos
das
pop
jge
sbb
imul
mov
adc
insl
sub
fs
and
push
xchg
push
js
or
xchg
pop
test
pop
mov
push
or
xor
mov
cs
orl
lea
and
into
dec
or
addl
test
pushf
or
xchg
sub
into
sub
dec
das
xchg
push
imul
and
inc
mov
into
xchg
dec
cs
mov
leave
rcrl
sbb
jmp
or
arpl
xor
out
sub
sub
stos
or
inc
stos
test
mov
shll
xor
pop
push
mov
out
adc
stos
or
or
xchg
dec
out
cmp
lret
push
addr16
sub
mov
jge
and
leave
out
pop
les
sub
dec
sub
aaa
sub
out
dec
cmp
xchg
mov
mov
cmp
popf
insl
out
xor
push
popa
popf
sub
sbb
je
std
outsb
pop
nop
fisubrs
dec
mov
and
dec
outsl
out
jg
or
lret
xor
mov
jns
push
xchg
out
testl
jp
mov
or
pop
lock
jns
pusha
ljmp
push
or
pop
push
or
dec
lock
dec
mov
jo
adc
ret
out
clc
in
movsb
imul
scas
insl
cmp
pop
cmpsl
movd
push
bts
loop
xor
jge
loope
dec
sub
sbb
iret
dec
aam
test
xchg
jo
pop
aad
or
pop
mov
andb
cmp
out
in
das
dec
imul
out
lcall
sub
lret
sub
jmp
cltd
inc
testb
mov
mov
dec
imul
lret
sbb
or
loope
stos
out
data16
imul
pop
jle
loopne
les
sub
xor
test
ljmp
outsb
jg
arpl
jno
pop
xchg
jmp
pop
out
pop
jp
mov
push
and
fistl
enter
in
sbb
xor
sub
dec
dec
mov
cmpsl
inc
push
sbb
daa
out
clc
mov
shrb
iret
mov
into
iret
push
xchg
adc
push
stos
mov
jle
adc
adc
sub
imul
adc
fisttpll
push
xchg
popa
popf
dec
pop
scas
sub
dec
push
inc
fisttps
add
mov
int
daa
dec
lret
stos
adc
dec
sub
bound
push
sub
or
aad
inc
xlat
or
sub
mov
fadd
sbb
sub
xchg
dec
out
or
pusha
jmp
sub
cs
lds
data16
mov
pop
and
jne
pop
xchg
shlb
push
and
adc
scas
outsl
push
enter
xchg
out
scas
inc
and
and
lods
pop
jo
sub
lds
ret
pop
test
xchg
or
mov
fsubr
std
or
ret
lea
push
dec
into
mov
mov
lret
fisubrl
sub
jge
mov
cwtl
ret
leave
add
fimuls
or
jbe
ror
add
lods
scas
stos
or
sub
xlat
pop
mov
out
insb
pop
addb
sub
dec
mov
lea
xchg
lea
push
xor
jp
aam
orb
jmp
sub
dec
cmpsb
scas
dec
xchg
hlt
xchg
or
dec
ljmp
int
loope
stos
dec
or
sub
icebp
dec
imul
sbb
cs
lret
push
xor
loop
stos
into
insl
int
push
nop
fwait
loop
out
sub
jb
loop
in
mov
adc
jle
das
xchg
ret
sbb
inc
mov
dec
out
subl
scas
or
stc
es
dec
sub
sub
sub
cmp
dec
cltd
sub
jns
dec
imul
adc
insl
lret
filds
adc
xor
sub
push
inc
or
or
jg
push
pop
imul
fbld
daa
leave
imul
lret
scas
dec
pop
in
daa
nop
andl
mov
jmpw
lea
psllq
pop
sahf
stos
setno
or
sahf
xchg
out
sub
arpl
test
dec
loope
lret
lods
adc
push
or
xchg
adc
push
dec
mov
add
sub
daa
pop
sarb
pop
sub
or
xlat
jecxz
push
jbe
pop
daa
lret
add
test
clc
fcoms
daa
outsl
das
sub
or
or
or
loopne
mov
subl
add
mov
mov
imul
or
repz
std
out
jmp
outsb
or
lret
dec
into
mov
inc
mov
mov
dec
inc
sub
mov
dec
or
clc
cmpsl
or
add
lret
xor
mov
pop
in
sbb
or
sub
popa
into
imul
inc
cmpsl
or
dec
adc
and
cs
aaa
pop
in
mov
dec
fucomi
mov
out
iret
fwait
test
in
test
dec
sub
int
outsb
push
aas
insl
out
loope
lret
jp
lret
lods
xchg
xchg
out
int
dec
sub
sub
out
pop
xor
cvtpi2ps
and
fcomps
dec
sub
add
out
sub
jo
jnp
inc
or
push
dec
into
dec
lret
adc
lret
inc
stos
imul
daa
adc
push
sbb
sbb
leave
or
ret
push
or
cmpsl
outsb
out
sahf
outsl
aaa
pop
fcmovbe
insl
in
jge
pusha
frstor
addr16
pop
cmc
dec
mov
clc
jmp
cs
fwait
dec
push
sub
mov
cmovs
insl
pop
fwait
into
and
or
into
jo
sbb
scas
cmp
inc
in
push
lret
stos
xchg
jecxz
mov
scas
lds
outsl
jmp
jecxz
out
out
mov
out
cmp
pop
int
test
jmp
xor
sub
dec
lds
bound
and
adc
outsb
or
dec
jns
and
lret
and
adc
mov
cmpsl
pushf
mov
pop
adc
outsl
mov
pop
ljmp
mov
bound
scas
loope
out
aam
ret
int
add
xor
dec
aaa
push
lcall
fwait
adc
and
push
dec
mov
or
and
addr16
test
mov
adc
ret
or
les
jle
test
fnstcw
mov
cmp
inc
sub
test
in
jmp
xchg
add
sub
sbb
test
int3
ret
mov
jne
jns
inc
push
mov
hlt
enter
sahf
mov
push
inc
sub
and
dec
push
in
fisubrs
int
cmp
inc
daa
outsb
and
push
test
or
sub
adc
sub
adc
jge
pop
mov
repnz
int3
lret
test
xchg
iret
stos
dec
mov
sub
int
stos
cmp
dec
adc
movsl
das
or
sub
leave
cmp
lock
mov
sbb
dec
dec
in
jae
in
xchg
ucomisd
add
outsb
adc
inc
push
in
sbbb
je
decl
mov
fldcw
cmpsl
leave
lea
aad
dec
mov
sbb
insl
pop
ljmp
out
mov
lcall
leave
jg
cmp
imul
or
cmp
daa
jle
lcall
lret
inc
scas
adc
repz
aam
scas
xor
sub
and
or
add
sbb
push
push
xchg
rol
fnstenv
orl
into
filds
ret
iret
fisubrs
int
xchg
or
arpl
dec
sub
jmp
xchg
movsb
arpl
or
cmpl
pop
pop
ljmp
or
push
out
jecxz
ret
cmp
out
daa
stos
cmpsb
push
dec
xchg
mov
push
aas
iret
mov
aam
in
jmp
xor
or
push
subb
sub
sbb
dec
and
add
xchg
or
adc
inc
lea
lret
loop
dec
dec
cltd
xorl
ljmp
dec
sbb
rorb
and
iret
pop
outsb
and
ror
mov
adc
or
dec
mov
mov
jno
dec
push
iret
jge
cmp
or
data16
stos
adc
into
imul
pop
dec
dec
leave
sub
das
out
notb
adc
test
arpl
dec
mov
out
sahf
or
or
pop
cmpps
int
ret
mov
push
out
mov
push
lret
lods
js
adc
push
ret
dec
xchg
imul
daa
xchg
mov
lahf
dec
cli
adc
out
pop
adc
mov
xchg
adc
pop
dec
or
stos
lea
xor
iret
arpl
cs
sbb
dec
daa
pop
iret
scas
xor
dec
sub
xchg
lret
add
in
push
testl
xor
fsub
fwait
pop
ror
in
mov
add
test
lods
sbb
dec
iret
or
jae
mov
push
adc
aam
jo
sbb
push
sub
test
mov
fs
xchg
or
pop
aaa
xor
mov
scas
mov
sbb
or
inc
add
test
imul
sub
into
popa
xor
fdivrl
test
dec
adc
mov
rorl
mov
cld
dec
sub
dec
dec
stc
popl
dec
sbb
imul
leave
sub
stos
in
das
int
arpl
bound
fwait
stos
lret
dec
sub
shlb
rcl
pop
call
sub
repnz
sbb
pop
xchg
sub
lcall
aas
scas
test
push
in
test
xor
repz
jmp
push
inc
adc
push
pop
pop
daa
inc
imul
out
push
insl
sbb
or
jmp
pop
push
lods
inc
andb
call
stos
arpl
mov
inc
loope
cmp
jp
jmp
insb
jnp
and
dec
stos
cs
out
call
test
iret
or
dec
mov
xchg
mov
pop
cli
ficoml
push
fisubrs
dec
or
pop
inc
or
into
or
sub
loop
sub
loop
or
sub
fisttps
or
xchg
xchg
scas
fldl
ret
int
fistl
and
sub
dec
lret
test
lea
scas
stc
and
ret
dec
in
pop
out
jl
outsl
out
xchg
movsb
in
imul
dec
ret
push
xchg
inc
js
out
out
xor
lods
sbb
adc
outsb
int
scas
dec
imul
icebp
jg
xchg
daa
lret
dec
popf
scas
cmp
push
and
cs
in
addr16
out
add
cld
inc
outsb
pusha
cmp
int
or
popf
out
in
mov
sub
or
dec
cs
repnz
xchg
mov
and
and
or
mov
popa
fisttpll
dec
xor
daa
adc
outsl
lods
inc
out
lea
popf
cmpsl
mov
pop
pop
dec
jnp
inc
adc
mov
push
sbb
or
fisttps
lds
jecxz
sbbl
add
push
repz
sbb
adc
daa
fistpl
dec
fwait
jmp
jmp
mov
cmp
addr16
mov
iret
lea
iret
mov
in
movsl
cmp
cmpsl
scas
dec
mov
cmp
fwait
push
lea
sub
insl
cs
pop
xchg
mov
arpl
addl
dec
mov
outsb
pop
mov
leave
mov
ret
add
lea
scas
lock
lods
pop
outsl
xchg
sahf
rorl
push
call
mov
cmpsl
adc
imul
loope
mov
jmp
out
outsl
out
mov
jecxz
rcl
xor
pop
imul
das
sub
ja
jmp
sub
sub
into
cmp
adc
lods
mov
or
dec
insl
cwtl
adc
dec
subb
or
mov
adc
inc
mov
sub
jne
repz
xchg
jo
adc
test
out
hlt
dec
and
pop
mov
cli
in
mov
xor
cmovns
push
testl
ret
pop
insb
mov
outsl
sub
xchg
rcrb
cmpsl
dec
insl
pop
nop
adc
pop
cs
scas
pop
rorb
adc
jle
movsb
pop
fmull
rcrl
out
cs
lds
out
fisubl
xor
out
xor
fisubrl
shll
mov
enter
sub
cwtl
jns
int
es
xor
iret
outsl
dec
xchg
adc
iret
fstl
mov
push
mov
cli
cmp
pop
push
pop
imul
or
push
xchg
mov
and
sbb
call
js
jp
stc
dec
cld
add
bswap
dec
out
jno
dec
cmp
pop
sub
ljmp
iret
mov
dec
loop
or
into
movsb
imul
add
roll
cwtl
aam
sub
cs
dec
leave
maskmovq
imull
push
cmpsl
cmp
add
insl
dec
and
mov
arpl
mul
pop
cs
jmp
clc
repnz
test
sbb
das
clc
xor
mov
adc
pop
xor
jmp
pop
pop
int3
psllw
dec
int
inc
gs
jecxz
sbb
mov
push
xchg
out
jle
xor
xchg
push
or
pop
loop
addr16
in
mov
test
sbbb
lock
fsub
mov
pop
sti
add
sub
into
lods
out
test
xor
stos
jp
cwtl
add
push
cs
ljmp
inc
test
cmp
add
adc
sub
pushf
lahf
adc
or
xchg
dec
cmpsb
lods
lret
jmp
mov
or
out
jnp
stos
xchg
cmpsl
lret
dec
mov
pop
subl
out
xor
addr16
dec
xor
test
jp
mov
pusha
xor
mov
xor
jl
mov
xchg
inc
in
dec
sub
and
sub
or
lods
jge
pop
pop
mov
or
jno
adc
dec
mov
dec
or
testb
sbb
pop
xor
sti
rorb
sub
push
fcoms
imul
mov
adc
push
scas
xchg
sbb
mov
insl
out
setne
lods
pop
or
test
lea
in
push
outsb
push
xlat
bound
iret
loope
push
mov
jmp
cmovns
mov
xchg
fildll
jbe
adc
outsb
ret
in
cwtl
push
sub
scas
mov
and
xor
add
push
cmp
scas
push
xor
pmaxub
lret
bound
push
mov
ljmp
jmp
jg
jnp
loope
out
sbb
out
test
dec
out
stos
sub
nop
or
cmp
repnz
pop
cmpsl
or
icebp
adc
repnz
stos
sub
sbb
xor
jb
popa
cli
scas
jmp
jno
test
imul
inc
xchg
jmp
mov
mov
jle
pop
push
cwtl
movsl
dec
sbb
dec
push
and
push
fwait
stos
insl
out
sbb
lret
pop
jmp
stos
neg
push
fsubp
jp
ljmp
or
iret
xchg
inc
mov
push
mov
lcall
or
dec
cltd
out
or
imul
iret
push
addl
test
andb
repnz
sub
lcall
mov
sbb
or
pusha
loop
data16
mov
add
orl
in
push
push
out
jb
rolb
cmp
xchg
cmpl
scas
iret
sub
outsl
inc
sub
notb
out
in
sub
pop
imul
xlat
test
dec
xchg
shl
stc
cltd
mov
add
das
push
inc
test
lods
mov
cmpsb
mov
ficoms
push
jmp
cmp
data16
out
sar
bound
into
inc
adc
mov
imul
xor
test
xor
cwtl
rcrl
sar
pop
inc
mov
pop
pop
jns
maskmovq
testl
jmp
sub
sub
adc
push
xchg
fs
cwtl
push
push
es
test
insw
sbb
mov
dec
xorb
test
into
mov
dec
mov
adc
adc
dec
sbb
lret
mov
fsubrs
and
mov
enter
pop
pop
out
inc
in
imul
shrb
ret
mov
and
mov
push
fwait
dec
stos
bound
ljmp
dec
adc
out
sub
pop
pop
or
in
xchg
stc
add
jmp
inc
aaa
repnz
cmp
inc
sub
hlt
lods
into
inc
dec
push
les
andb
imul
fistps
iret
dec
cltd
aad
sbb
dec
or
bound
ljmp
fisubrs
xlat
outsl
sbb
mov
mov
mov
inc
out
jmp
sbb
outsb
out
pop
cmpsl
sub
jmp
ljmp
clc
xorl
or
dec
mov
cmp
add
dec
xor
dec
data16
sbb
lods
mov
ljmp
loop
mov
jmp
lds
imul
xchg
movsb
imul
push
lods
jge
ja
stc
sub
jp
fiaddl
jmp
outsl
push
inc
or
fmull
sbb
push
rcrl
or
jl
xlat
and
dec
dec
add
mov
mov
lret
jne
jle
or
imul
and
jb
dec
mov
push
gs
fsubp
dec
dec
das
movsl
or
dec
push
iret
test
andb
or
orl
daa
or
push
out
dec
pop
movsl
lahf
inc
test
dec
out
test
mov
sbb
pop
sub
out
inc
or
or
push
inc
iret
daa
sub
clc
fisubs
ret
pop
add
push
lods
imul
inc
stos
push
mov
ret
adc
lea
and
fs
dec
or
adc
adc
mov
pop
mov
push
mov
ret
pop
or
aad
sub
fcomps
adc
inc
lods
out
outsl
pop
loopne
adc
sbb
scas
mov
imul
lods
xchg
pop
iret
xor
lret
lods
dec
pop
xchg
mov
dec
mov
pop
xor
push
imul
xor
push
and
jno
mov
dec
lea
and
mov
push
into
mov
pop
ret
inc
out
jmp
fildl
xchg
sub
dec
jae
dec
adc
stos
dec
sub
mov
addr16
mov
ljmp
xchg
in
scas
pop
inc
imul
push
adc
repz
movhps
mov
jmp
mov
adc
outsl
imul
test
ja
mov
subl
dec
leave
or
clc
pop
loop
ljmp
aam
mov
mov
lret
imul
jmp
int
or
nop
xchg
arpl
mov
add
jno
sub
stc
pop
dec
lret
test
dec
mov
mov
out
addr16
or
lock
mov
and
push
dec
sub
fistl
mov
add
pop
scas
stos
lock
or
aad
insl
test
lds
mov
fadds
lea
outsl
sub
add
sub
cmp
dec
das
les
push
inc
sub
imul
or
movsb
lods
scas
into
mov
ss
xchg
push
addr16
lret
xor
jle
sbb
pop
mov
push
mov
push
int3
repz
lahf
push
outsb
sbb
mov
cmp
imul
sbb
scas
fwait
dec
fisttpll
popf
inc
jmp
dec
popa
xlat
stos
sub
mov
sbb
dec
mov
mov
jnp
mov
pop
xchg
or
cmpsl
pop
or
mov
decl
test
or
movsl
adc
adc
out
inc
data16
js
sbb
cmpsb
jno
leave
pshufw
add
or
addr16
or
sub
adc
push
pop
add
push
pop
out
sbb
sbb
sub
ja
push
arpl
cmovno
scas
in
lea
cmpsl
leave
loope
scas
lret
xor
repnz
sub
cmp
call
scas
sbb
or
stc
daa
dec
mov
mov
or
nop
outsl
or
xor
dec
scas
pop
pop
int
push
mov
insl
dec
or
imul
xor
adc
xchg
sub
xorb
or
rolb
nop
lcall
mov
push
nop
les
dec
xchg
lret
jae
pop
leave
mov
out
ret
pop
loop
sub
and
dec
mov
dec
loopne
jne
pop
out
stos
andb
and
xchg
adc
jns
leave
push
lea
or
lds
shrl
das
pushf
sub
or
cmp
out
cmp
adc
sub
mov
inc
or
sub
mov
or
loope
or
mov
icebp
dec
pop
in
dec
cmp
scas
cs
pcmpeqd
or
leave
push
mov
fisubs
mov
ljmp
mov
push
lods
adc
cmp
daa
ja
sub
shl
dec
dec
bound
push
sub
jmp
or
push
repz
or
mov
jo
sub
imul
imul
icebp
leave
repz
mov
bound
insl
loope
lret
out
fisubs
dec
push
jl
addr16
js
and
lods
into
xchg
push
lahf
movsb
imul
loop
dec
sub
cli
lret
sub
imul
xchg
sub
dec
push
cmovns
or
cmc
ljmp
mov
leave
dec
out
push
out
add
scas
push
mov
jge
lret
push
add
dec
mov
cmpsl
inc
adc
sub
dec
jmp
test
dec
ret
adc
popf
mov
popf
push
lret
shrb
fildll
iret
dec
mov
push
rclb
mov
fbld
loope
out
inc
loope
lea
ret
cmpsl
daa
insl
jmp
pop
or
or
fsubrl
push
mov
or
or
pop
add
sub
aam
dec
aad
test
push
jecxz
lret
cmovae
rcrl
and
imul
cmpsl
sbb
xchg
adc
dec
mov
loop
dec
cmp
mov
mov
in
sub
xchg
outsb
pop
push
ret
sbb
dec
loopne
into
inc
bound
jo
ret
loopne
scas
sub
or
xor
cmp
cltd
outsl
fcomps
pop
stos
sub
or
pop
pop
leave
cmp
btc
inc
mov
or
clc
out
mov
or
cmp
mov
pop
lret
dec
inc
cs
jmp
push
mov
mov
mov
push
add
mov
inc
out
scas
mov
arpl
mov
mov
mov
sub
dec
dec
pop
stos
cmp
test
loop
xor
lea
fs
inc
shrb
dec
mov
mov
jo
dec
bswap
insl
xchg
pushf
das
jmp
sub
leave
dec
xor
setge
sub
popa
cmpsl
out
pop
or
pop
imul
packuswb
or
mov
or
mov
add
cmpsl
ds
cld
push
lret
int
mov
ljmp
daa
leave
outsl
into
mov
lock
sub
lret
icebp
rorb
das
imul
rcrb
ret
or
popa
scas
mov
sub
or
std
incb
in
movaps
mov
aam
dec
add
inc
out
scas
mov
dec
push
dec
add
jecxz
arpl
xchg
arpl
loop
int3
and
push
loop
iret
jmp
outsl
inc
das
addb
jle
xchg
cmp
mov
iret
cltd
mov
inc
inc
mov
pop
xor
pop
xlat
outsb
jns
aas
inc
lea
fcoms
push
push
ljmp
push
dec
mov
into
mov
pop
sahf
push
jmp
xchg
push
pop
jecxz
xchg
or
loopne
sub
add
es
lret
sbb
or
scas
xor
pop
test
push
bound
cwtl
inc
call
int3
add
sub
xchg
lea
loope
mov
stos
outsl
adc
mov
mov
call
inc
lea
dec
mov
or
int
or
lret
mov
fsts
push
fsubp
daa
jmp
xchg
arpl
sub
dec
out
incl
sub
lahf
push
sub
cli
movsb
xor
cwtl
inc
xor
dec
adc
mov
sub
into
and
push
scas
push
stc
inc
push
lock
scas
adc
setle
xorb
loopne
dec
add
lods
fsubrs
loope
insl
sub
daa
push
inc
ficoms
xchg
add
add
lret
out
lahf
rsm
lds
leave
ret
inc
sub
mov
mov
sbb
in
lret
scas
mov
shr
ljmp
stos
into
movsl
sub
or
or
notb
add
dec
imul
push
pop
pop
add
lret
dec
push
adc
inc
or
or
cmp
es
jne
cmpsb
scas
dec
pop
xor
xor
mov
shr
mov
call
xor
xorb
stos
iret
mov
outsl
or
adc
insl
xor
lock
ljmp
sbb
lret
mov
mov
in
cmpsl
jno
inc
movsl
xchg
addr16
xchg
sub
dec
sbb
sub
xchg
or
rsqrtps
or
icebp
mov
adc
adc
sahf
dec
mov
add
add
insb
in
or
mov
jo
rolb
add
push
dec
lods
scas
dec
sub
cs
outsb
cmp
aaa
aad
add
adc
dec
jmp
ret
and
sub
or
xchg
mov
out
outsl
insl
jbe
test
inc
loope
inc
adc
dec
por
out
out
pop
push
mov
inc
push
sub
scas
sub
dec
adc
out
dec
dec
outsb
push
pop
mov
dec
hlt
int
jno
push
sub
jl
mov
enter
clc
cmp
cwtl
inc
rolb
dec
dec
sbb
adc
scas
xchg
pop
outsl
inc
dec
test
in
andl
out
movsb
push
jo
je
inc
or
or
push
inc
sub
test
fidivs
test
rcl
push
out
dec
test
push
sub
push
xchg
nop
mov
sbb
popf
iret
adc
dec
lret
dec
int
pop
enter
or
popl
scas
repnz
shl
iret
loop
scas
sti
pop
arpl
adc
stos
dec
dec
pop
cwtl
mov
cld
or
add
iret
adc
insl
addr16
in
outsb
jnp
adc
xchg
or
iret
mov
xchg
mov
jae
stos
dec
cs
add
shl
lret
fisttps
jno
dec
cmpsl
pop
dec
ja
mov
les
mov
adcb
test
cmp
sahf
mov
sub
inc
in
or
pop
ljmp
cmpsl
ljmp
dec
mov
inc
ret
sub
dec
insl
push
or
psubq
cmp
jmp
out
lods
sub
lahf
ljmp
test
mov
dec
iret
mov
test
sbb
dec
lret
pop
dec
enter
testb
scas
insl
ljmp
ljmp
push
inc
xlat
xchg
or
mov
or
imul
test
cmpsl
in
push
push
jmp
stos
pop
fldenv
push
xor
ljmp
adc
xor
push
mov
or
leave
add
push
outsb
outsl
int
sub
inc
and
ljmp
jge
mov
in
scas
call
das
push
fisttpl
rcrl
sub
out
and
inc
outsl
add
mov
sub
dec
loop
in
xor
nop
sbbb
xchg
or
mov
scas
lret
imul
lret
xor
ret
das
iret
lea
data16
pop
jae
inc
pop
test
sahf
scas
loope
lret
dec
insb
mov
xchg
ss
lret
ljmp
stos
in
aaa
or
xchg
sub
xor
dec
daa
and
or
int
iret
into
popa
jp
sub
sbb
repnz
jecxz
and
pop
fmulp
std
bound
pop
sub
mov
push
enter
cmovl
test
sahf
mov
data16
out
ljmp
hlt
cld
mov
lods
sub
outsb
ud0
inc
inc
das
int
dec
xchg
add
lods
sub
lret
stos
dec
das
adc
inc
daa
outsl
test
jle
mov
ret
sub
xor
or
cmpsl
mov
mov
insl
dec
leave
mov
xchg
movsl
dec
xor
mov
inc
daa
xchg
test
pop
mov
xor
stos
adcl
test
out
inc
jge
in
cmp
lods
pop
lods
sub
push
mov
ret
jmp
push
xchg
clc
jecxz
bound
stos
mov
lea
cmpsl
das
mov
push
movsl
insl
lret
fsubrl
orb
lcall
pop
dec
loope
lods
ds
and
lock
pop
and
out
sub
xor
mov
or
mov
sub
ljmp
pop
or
out
popl
in
dec
mov
or
daa
das
popf
in
movsb
xchg
lret
jno
dec
lret
lcall
addr16
out
or
iret
jbe
xor
lret
and
leave
in
dec
out
cli
or
lahf
push
inc
das
dec
add
outsb
test
outsb
adc
jne
popf
sbb
imul
daa
insl
dec
adc
pop
cmpsb
jno
popf
cmp
sbb
imul
dec
xor
repnz
jmp
and
mov
lret
movsb
or
js
cmpsl
int
popa
inc
out
or
xor
icebp
inc
stos
mov
push
mov
mulb
pop
ret
dec
xor
jle
push
push
inc
adc
push
or
and
lret
sub
jecxz
sbb
or
sub
pop
add
cs
or
lods
imul
out
in
dec
xchg
xchg
jnp
out
sub
lds
mov
arpl
adc
je
inc
dec
lea
push
dec
jno
out
jmp
mov
jge
xchg
sbb
xor
lea
imul
xchg
jmp
mov
rol
push
add
or
mov
lds
cs
aas
mov
sub
pop
xor
jmp
imul
sbb
leave
sti
and
imul
in
sbb
das
fimull
push
movsb
xchg
clc
xchg
or
lret
enter
or
lret
sub
jae
popa
into
stos
or
push
daa
or
add
adc
out
outsb
das
scas
or
mov
and
dec
xor
adcb
ret
xchg
loopne
leave
dec
int
dec
sub
outsl
inc
or
push
lahf
jle
mov
pushl
pop
leave
imul
dec
sarl
push
lods
imul
fisttpl
inc
stos
sbb
sub
out
and
dec
sub
adc
aaa
mov
mov
iret
and
xor
stos
lods
arpl
lods
jmp
cmp
or
negb
jo
mov
lret
ret
int
add
stc
dec
inc
int
or
bound
sub
mov
mov
test
mov
dec
inc
dec
loope
push
dec
scas
outsb
into
dec
mov
dec
add
push
or
call
stos
lret
imul
pop
push
iret
movlps
sbbb
out
pop
enter
int3
mov
sub
sbb
mov
aas
pushaw
cmp
scas
rclb
ljmp
stos
or
and
or
repz
enter
sbb
das
mov
insl
cmp
or
fld
ss
push
mov
inc
push
adc
xchg
mov
stos
xchg
insl
mov
subl
mov
dec
leave
pop
jl
jp
sbb
data16
popa
push
or
push
xchg
cltd
inc
adc
dec
adc
dec
jmp
loop
out
roll
dec
outsl
sub
sti
fcoml
stos
pop
sub
xor
dec
sub
jmp
addr16
dec
sub
lods
sub
int3
sub
add
aad
ret
pop
out
pop
dec
setge
stc
orb
pop
orl
sub
or
out
sub
mov
scas
decl
sub
jmp
cli
jae
sub
sub
das
fadds
int3
push
xor
xchg
dec
bswap
or
out
jns
arpl
lea
fcomps
xor
sahf
xor
pop
lcall
mov
push
insb
out
je
stc
sub
cs
pop
sbb
dec
ljmp
dec
sub
ret
stos
outsb
sub
jmp
or
lea
mov
push
sub
fistl
mov
or
daa
ljmp
lea
xor
adc
les
sub
xchg
out
sub
mov
nop
mov
stos
pop
cmpsl
jmp
sti
mov
repnz
jmp
je
inc
aas
ljmp
dec
and
xchg
call
ds
btl
out
adc
in
loop
dec
add
inc
lea
pop
sub
sub
jmp
mov
imul
out
jle
movntq
ljmp
dec
add
dec
imul
scas
inc
les
or
fstl
cli
jg
or
push
test
dec
jp
dec
and
lods
pop
out
int
mov
iret
xor
lds
sbb
leave
sub
pop
dec
pop
jb
mov
inc
pushf
test
push
dec
insl
loopne
and
add
cmc
in
dec
dec
iret
push
dec
stos
xchg
adc
dec
sub
fldcw
jecxz
stos
add
adc
out
jmp
inc
adc
outsl
mov
cs
stos
mov
scas
sub
fisttpll
adc
iret
jmp
push
lock
lret
cs
and
or
adc
leave
test
in
andb
stc
pop
in
sub
sub
pop
add
push
ficomps
or
lea
sbb
cmpsl
sbb
jmp
cli
and
loope
dec
add
in
imul
xchg
fisubs
ljmp
data16
fldl
jmp
jl
cmp
stos
mov
subb
push
cli
addr16
test
mov
bound
add
iret
fstps
sbb
cmpsl
enter
mov
add
pop
dec
jmp
insl
loop
out
inc
mov
daa
shrb
stc
pusha
sub
push
xchg
hlt
arpl
or
lds
mov
daa
dec
cmp
jmp
adc
xor
out
sbbl
imul
outsl
lcall
leave
mov
stc
push
sub
jnp
sbb
sub
out
adc
mov
std
mov
icebp
dec
outsl
sub
out
adc
data16
xchg
xor
icebp
dec
or
sub
in
lods
cmc
dec
fsubrl
pop
adc
jmp
sub
sub
jmp
push
adc
dec
ret
out
stos
dec
clc
popa
mov
or
adc
dec
scas
mov
pushf
pop
mov
sti
pop
sbb
mov
popa
movsl
dec
das
jne
outsb
xchg
adc
out
inc
ret
jns
popf
fiadds
leave
and
out
popa
outsb
inc
cs
rcr
sub
imul
dec
pop
out
movsb
das
xchg
sub
or
out
stos
add
cmp
imul
outsb
pop
ret
insl
sahf
ljmp
jmp
push
int
int
in
inc
push
pop
jmp
les
jl
loopne
aaa
data16
add
push
and
dec
dec
adc
dec
mov
pushf
sub
adc
mov
ret
inc
or
scas
cmpsl
dec
mov
adc
mov
repz
shl
ret
cli
cwtl
fwait
or
popa
push
and
scas
rol
mov
jmp
sbb
or
sub
femms
jno
and
lahf
stos
shl
inc
sub
and
xor
sub
mov
lahf
outsb
in
cmpsl
stos
lret
dec
inc
das
push
pop
lret
sub
push
into
or
mov
xchg
stos
insl
push
push
or
movsb
dec
lea
lret
dec
dec
loop
outsb
jmp
xor
mov
daa
dec
daa
sti
scas
insb
icebp
orb
mov
mov
lret
sbb
mov
sbb
or
dec
dec
les
sub
mov
std
sub
mov
add
xor
ud2
dec
inc
add
lret
mov
jae
fucomp
ret
jmp
je
sbb
mull
addl
push
push
lock
jns
inc
iret
cmpsl
add
or
lcall
jns
iret
xchg
call
dec
scas
sub
adc
mov
lret
xor
mov
dec
sbb
imul
fwait
and
outsb
out
mov
into
adc
in
or
mov
sub
inc
lea
pop
xchg
cwtl
inc
mov
adc
pop
int
cmp
adc
sub
popf
cltd
stos
sbb
insl
mov
pop
adc
in
push
dec
jecxz
and
sub
pop
mov
inc
or
loopne
push
mov
loope
mov
xor
in
out
pusha
dec
adc
or
les
cmp
dec
dec
popf
int
pop
rorl
mov
mov
jmp
or
jo
pushf
loopne
sub
out
cld
and
dec
mov
adc
stos
outsb
sub
imul
adc
adc
or
mov
jb
lcall
or
cmp
add
test
daa
pop
call
pop
ret
cwtl
mov
adc
in
scas
out
or
pop
mov
adc
adc
out
mov
jb
and
xchg
test
or
or
dec
test
arpl
and
push
mov
das
dec
adc
in
or
andl
ds
mov
sbb
out
addr16
fwait
inc
sbb
sbb
push
mov
lods
pop
cwtl
mov
sbb
pusha
or
dec
mov
rolb
out
mov
push
or
ret
or
lea
outsl
and
sub
loop
mov
sti
dec
and
or
cmpsb
lret
dec
leave
das
scas
xchg
in
sbb
dec
std
fs
jl
push
mov
dec
or
mov
inc
scas
or
jg
adc
scas
leave
jnp
dec
lds
vpsrad
xlat
pusha
arpl
insl
pop
in
popf
jle
scas
sub
lcall
cvtps2pi
mov
sbb
into
dec
cmpsl
sub
push
adc
lds
scas
shr
and
xor
fmull
in
rorl
lods
dec
pop
dec
insb
sub
mov
xchg
int
sub
push
ret
subl
dec
cld
cmp
dec
xor
test
lret
adc
lahf
sub
pavgb
lret
addr16
lret
sbbl
dec
xor
cs
or
sbb
test
cwtl
fimuls
movsl
sub
or
add
out
ds
loope
or
call
out
out
or
push
mov
xor
lea
insl
jnp
std
push
loop
adc
mov
mov
scas
popa
push
jmp
sub
xchg
adc
dec
cs
negl
dec
adc
pop
dec
mov
dec
daa
stos
mov
push
fsts
mov
or
or
lds
xorl
pop
sub
dec
inc
or
mov
cmpsl
rcr
mov
sahf
fisubrl
xchg
mov
orl
cmp
pop
cmp
sub
rcrb
push
cmpsl
pusha
dec
mov
sub
mov
inc
cmp
pop
pop
or
leave
and
mov
dec
inc
fldpi
iret
inc
sub
sbb
dec
outsb
dec
lods
dec
arpl
push
xchg
enter
into
daa
jge
pop
leave
dec
dec
ret
loope
pop
scas
rorl
outsl
mov
xor
insl
or
into
int
arpl
cs
sub
mov
ret
pusha
cmpb
sub
sbb
xor
fwait
and
in
dec
ret
lret
or
pop
sub
adc
mov
dec
or
xchg
int
pop
fs
push
insb
pop
inc
push
sbb
mov
cmpsb
imul
xchg
out
popa
push
or
sub
sub
inc
pop
mov
das
movb
sbb
scas
cwtl
test
cmc
jge
xchg
push
jle
sbb
adc
call
dec
aam
in
adc
or
sub
ljmp
icebp
push
lret
into
ja
inc
add
dec
cmpsl
adc
stos
adc
push
add
or
clc
cltd
sub
fidivs
orb
lods
test
or
mov
mov
or
adc
jmp
or
movsl
push
lds
push
mov
inc
popa
and
into
inc
stos
mov
daa
outsl
in
loop
dec
jp
adc
ror
ret
out
dec
push
andb
out
or
std
mov
out
pushf
ja
cs
test
push
mov
aad
sub
lret
push
mov
stc
popf
stos
outsb
xchg
add
sub
in
adc
dec
adc
xchg
repz
popf
pop
cmp
or
and
or
dec
and
iret
stos
and
inc
and
sub
mov
leave
test
dec
in
mov
cmp
dec
xor
imul
ret
pop
scas
dec
pop
enter
fsubl
addl
jmp
das
shrl
bsr
sub
cld
push
daa
iret
xchg
popa
mov
cmp
pushf
push
push
lea
out
test
sub
out
mov
mov
into
imul
adc
int3
jmp
ljmp
test
lret
push
loopnew
push
out
mov
ret
xor
add
pushf
sub
push
push
fcoms
popf
or
push
sbb
outsl
scas
adc
mov
cmp
cmp
jno
stos
cmp
imul
push
sub
pop
outsl
dec
into
sub
out
movb
loop
push
out
imul
mov
xchg
mov
mov
sbb
dec
out
or
movsl
int
xchg
inc
or
and
and
imul
iret
test
inc
lret
mov
loopne
lahf
inc
adc
inc
pop
adc
arpl
insl
loope
out
mov
imul
ljmp
shrl
mov
cmp
in
mov
inc
xchg
insl
into
cmp
jmp
or
into
adc
out
pop
xchg
adc
pop
add
lahf
xor
jmp
js
xchg
mov
sbb
test
jns
pop
or
sub
out
das
and
dec
ret
in
les
sahf
mov
insl
test
shufps
ljmp
sub
aas
std
sbb
iret
stos
jo
loop
or
fisttpl
out
or
or
or
lret
inc
iret
addr16
and
or
dec
xor
or
pop
inc
inc
sbb
inc
dec
lret
mov
adc
notl
clc
push
lret
inc
outsl
test
sub
scas
push
or
pop
mov
outsb
fadds
popa
dec
dec
out
adc
aam
xchg
jmp
xchg
addl
test
leave
loopne
sub
or
rol
jmp
into
pop
das
mov
jno
cs
mov
arpl
and
push
sub
cs
lea
dec
add
stos
cltd
mov
lods
xchg
hlt
repz
pop
sub
jp
mov
sub
and
or
call
in
daa
mov
sbb
mov
and
cmp
data16
ds
mov
jo
sarl
sub
call
out
popa
or
or
jb
out
das
or
sub
mov
dec
ficoms
enter
stos
xorb
nop
push
dec
dec
ret
xor
mov
push
adc
das
push
out
stos
mov
or
sub
adc
inc
outsl
xchg
out
lds
and
sub
adc
fimuls
cmp
lret
orb
out
iret
sub
outsl
jmp
pop
out
out
enter
or
push
out
sub
or
xchg
pop
xchg
in
imul
into
xor
and
rcrb
inc
push
daa
dec
mov
mov
xchg
lods
dec
mov
adc
or
stos
sub
pop
das
dec
dec
or
pop
add
ret
scas
add
data16
jns
pop
testl
or
popa
inc
dec
imul
ljmp
insb
dec
sub
mov
inc
adc
insl
cmpl
pop
int
cs
lods
add
outsl
xchg
push
in
push
lret
push
loop
lretw
in
scas
jmp
ljmp
or
ror
sub
pusha
push
sbb
xchg
dec
inc
pop
loope
xchg
jp
orb
lock
mov
xchg
out
dec
aaa
dec
fwait
sub
lret
push
sub
mov
das
fwait
sub
or
out
or
fwait
inc
inc
or
mov
adc
cmovl
clc
iret
shld
sbb
dec
daa
pmulhuw
mov
arpl
xchg
int
xorb
mov
loop
cmovb
out
movsb
outsb
aad
and
pop
adc
cmovg
inc
inc
cmc
in
outsl
imul
pop
imul
xchg
daa
ljmp
ja
push
fwait
sub
push
or
js
aad
cltd
test
nop
cmpsl
loope
insl
or
outsl
jl
leave
sub
sahf
scas
loopne
fimuls
mov
mov
out
in
insl
bound
inc
pusha
adc
orl
sti
out
dec
dec
das
stc
test
in
nop
or
or
sub
add
lret
lea
iret
dec
or
dec
xor
in
sub
out
pop
lcall
dec
mov
or
aaa
mov
js
mov
cmp
dec
push
cs
mov
mov
dec
pusha
xor
out
push
lods
in
or
sub
das
out
add
or
mov
ret
hlt
ret
test
and
pushf
inc
or
movsl
dec
clc
jno
mov
cmp
cwtl
xlat
and
dec
pop
or
into
dec
lds
das
psubusb
outsb
in
jb
xor
or
lret
dec
movsb
sbb
imul
push
or
scas
hlt
lahf
push
add
cltd
mov
das
sbb
sub
out
jmp
xchg
push
test
outsl
jns
push
jg
call
loop
into
stos
fbstp
cmpsl
or
mov
orb
and
das
jmp
pop
sbb
scas
sub
lods
notl
sbb
cs
dec
xchg
cmp
xchg
jle
ret
out
dec
sbb
out
or
addr16
xchg
testb
dec
into
in
out
and
xchg
xchg
dec
sub
sub
push
pop
inc
sbbb
adc
push
sbb
or
inc
sub
dec
int3
lds
mov
fmuls
xrelease
sub
lea
adc
xor
rcll
jae
pop
ljmp
call
ljmp
adcb
test
stos
pop
or
xchg
ljmp
cmp
ljmp
repnz
xchg
lret
and
stos
add
mov
dec
insl
pop
push
fimuls
shrb
aas
leave
sahf
dec
xchg
or
or
cli
imul
sbb
scas
push
and
adc
es
sbb
sar
negl
mov
sbb
outsl
dec
push
dec
mov
pusha
and
or
mov
iretw
or
ror
imul
lods
int
nop
popfw
mov
test
xchg
lds
sub
aaa
push
out
scas
mov
or
das
imul
test
push
outsb
in
ljmp
push
or
lahf
dec
or
push
inc
int
xor
bound
dec
in
sub
or
or
out
out
imul
fisubrl
nop
mov
adc
scas
outsb
sub
daa
xchg
imul
xchg
inc
lea
cmp
bound
and
test
into
addr16
lret
das
cmp
sub
test
inc
outsl
add
popa
pop
or
scas
cmpsl
in
adc
sbb
push
push
nop
push
inc
jmp
iret
sub
incl
lret
or
or
dec
out
jmp
adc
fildll
sub
pop
lret
scas
stos
mov
aad
int
pop
cs
ds
or
add
or
leave
push
lods
mov
add
lret
mov
sub
dec
dec
cvtpi2ps
lret
out
test
pop
int
leave
and
int3
scas
dec
lcall
or
movsb
dec
dec
test
sub
dec
push
or
lret
or
scas
out
dec
jmp
dec
test
dec
or
insl
push
dec
movsb
sub
inc
dec
mov
sbb
mov
movl
les
out
aad
dec
push
pop
in
push
fisubs
ljmp
pop
addr16
mov
out
ret
cmp
fisttpll
ljmp
mov
pmaxsw
mov
lods
sub
dec
or
mov
sti
jmp
repnz
mov
sub
inc
sub
subb
pop
dec
dec
movsb
insl
lea
pop
jmp
loope
or
push
cmpsl
out
stos
mov
cmp
mov
mov
push
pop
xchg
or
mov
movsl
stos
dec
or
mov
dec
dec
and
xor
mov
loopne
test
dec
sub
les
lods
jmp
fldt
repnz
into
jno
dec
pop
sub
imul
jns
imul
out
ret
lea
dec
and
lods
or
mov
add
lea
mov
dec
dec
cli
dec
inc
stc
out
lods
out
ljmp
dec
mov
push
cmpsl
lods
xor
iret
lods
jp
push
xchg
hlt
or
xor
pop
sbb
dec
and
dec
cmpsl
stos
inc
mov
mov
adc
cmp
rclb
dec
shll
adc
dec
daa
dec
enter
jmp
sub
or
push
jmp
fildl
pushf
sub
lret
mov
mov
int3
xor
lea
ljmp
or
and
test
addr16
and
dec
outsl
dec
and
mull
sub
pusha
cmpsl
sub
filds
push
push
xor
fadds
arpl
iret
or
push
repz
pop
sub
or
out
lahf
dec
stos
lock
sarl
mov
or
fmull
mov
addr16
or
push
lea
xor
leave
mov
mov
inc
dec
push
jg
xchg
and
in
xor
cmpsl
iret
out
adc
adc
push
dec
sub
in
out
cld
dec
sub
lret
sub
and
arpl
pop
jno
insb
leave
xchg
push
inc
push
out
insl
jmp
push
imul
push
iret
rorl
xchg
xor
daa
mov
mov
dec
out
jmp
insl
inc
pop
and
mov
pop
shrb
xor
mov
or
int
jmp
repnz
scas
fadds
das
sub
in
nop
cs
out
pop
push
and
dec
addr16
int
mov
lods
ljmp
sub
insb
mov
inc
lret
addl
addr16
stos
cmc
adc
pusha
sub
jmp
dec
stc
fisttps
and
or
mov
sbb
inc
scas
or
cmp
inc
push
scas
iret
stos
cmp
jmp
jae
outsb
test
mov
dec
popa
pushf
push
mov
xchg
iret
pop
sub
daa
jge
mov
aam
mov
scas
lea
push
sub
xchg
adc
daa
inc
insb
jmp
cmp
cli
insb
and
stos
out
or
rclb
mov
sub
mov
out
ljmp
icebp
xchg
scas
jns
jbe
cli
dec
ljmp
lcall
les
dec
stos
aaa
dec
or
pop
cmpsl
sahf
jmp
lea
dec
mov
or
pop
sbb
mov
inc
in
mov
and
xchg
dec
inc
push
std
jl
push
in
sub
dec
lea
cmpsl
cwtl
and
dec
pop
mov
out
cltd
out
scas
shlb
pop
daa
sub
subb
dec
das
addr16
jnp
xchg
mov
dec
sub
sbb
scas
mov
add
sub
arpl
ja
loope
push
das
data16
sub
out
add
or
fistl
xor
pop
iret
pop
xchg
int
xchg
inc
dec
ret
out
sub
and
jns
lcall
and
jmp
sub
outsl
mov
xchg
mov
int
outsl
icebp
lcall
sub
dec
das
lcall
push
shrb
sub
inc
icebp
dec
int3
sub
xchg
outsl
scas
popl
dec
cld
orl
cmp
cmp
mov
push
or
or
xor
imul
and
mov
xchg
popa
into
cs
cmc
mov
xchg
mov
cld
push
rorb
test
mov
adc
dec
in
mov
lods
imul
dec
adc
sbb
mov
sub
fwait
or
xchg
mov
mov
repnz
dec
sub
dec
insl
xchg
mov
jge
clc
or
mov
ret
jmp
loope
mov
test
insl
sbb
outsb
sub
test
loope
cmpsl
dec
mov
add
sub
aam
inc
das
outsl
insl
imul
sub
and
push
out
dec
mov
das
stos
pop
dec
fmulp
decb
fisubrs
mov
iret
cmp
mov
mov
sar
add
insl
mov
and
add
or
daa
pop
addr16
cmp
adc
call
ds
mov
pop
scas
lret
outsb
jmp
dec
int
dec
push
xor
mov
cs
ja
jae
sub
dec
ljmp
insb
or
xor
sub
movq
idivb
cmc
sbb
add
loopne
sub
iret
out
sub
jne
lea
adc
stc
dec
or
dec
add
addr16
out
pop
inc
addl
xchg
push
sbb
clc
movnti
imul
dec
stos
stc
movsl
clc
adc
dec
mov
insb
and
iret
mov
outsb
notb
ja
mov
les
stos
sub
push
xor
scas
dec
sub
jno
inc
mov
xchg
int
enter
scas
out
push
jg
or
out
xchg
outsb
int
sbb
das
xor
enter
xchg
adc
xchg
inc
fwait
mov
nopl
scas
imul
out
sub
jmp
dec
sahf
lods
out
or
pop
mov
lds
lret
and
sbb
sub
mov
sub
sub
push
cmp
sub
add
cli
out
pop
xor
insl
push
mov
daa
push
les
out
or
jmp
test
and
jb
and
xor
cmpsl
into
scas
test
xchg
inc
iret
mov
sti
sbb
sahf
jbe
movsl
out
bound
imul
dec
cmpl
dec
mov
clc
adc
fdivl
cmpsl
xchg
loopne
mov
inc
jmp
mov
xchg
inc
bound
lret
push
cs
push
xchg
pop
lods
add
bound
sub
imul
mov
jo
cmpsb
dec
or
or
and
dec
imul
lods
jle
sub
iret
movsl
out
sub
fs
sahf
mov
add
dec
jo
dec
or
or
fisubrs
jno
mov
roll
daa
test
iret
pop
fs
lcall
jecxz
insl
outsb
rcl
jmp
ffreep
mov
pop
lret
mov
and
lcall
leavew
or
add
mov
outsl
adc
mov
daa
hlt
and
cmp
xchg
adc
cmpsl
lock
sub
mov
or
mov
mov
inc
test
adc
pop
sub
dec
sub
push
setno
lret
lods
lret
sbb
sub
sub
scas
or
mov
dec
ret
sti
mov
fs
aas
addl
dec
inc
sub
nop
push
testl
roll
test
mov
pop
outsl
leave
pop
dec
into
pop
dec
sbbl
and
jmp
push
loope
aad
data16
sub
or
dec
test
add
push
pusha
test
cmp
mov
pop
in
das
sub
or
push
dec
jno
fwait
loop
sbb
pop
nop
ja
test
cs
in
dec
sub
dec
inc
jl
pop
or
cs
lret
push
sub
dec
shll
cs
mov
lret
dec
cmpsb
jmp
push
lret
pop
aam
mov
gs
push
adc
xchg
sub
sub
add
mov
imul
cs
xchg
sub
adcb
out
inc
data16
dec
jmp
mov
add
push
clc
bound
adc
sub
mov
sub
lea
ljmp
pusha
fldt
adc
mov
leave
lahf
popa
or
enter
cmp
adc
jb
mov
bound
mov
sbb
adc
sub
inc
xchg
adc
dec
hlt
pop
or
xchg
ljmp
pop
mov
push
mov
ficoml
jo
lahf
daa
vmwrite
inc
sub
lcall
mov
out
jb
xchg
lock
dec
aaa
fbld
cmpsl
dec
stc
cmp
adc
mov
insl
mov
xor
xor
in
dec
sub
dec
adc
mov
mov
sub
cmpsb
sbb
stos
cltd
sub
scas
loopne
cmp
out
lret
cli
sub
sti
verw
sub
lods
dec
into
jmp
out
fwait
jmp
stos
gs
xchg
dec
dec
sub
out
adc
cs
dec
lea
leave
xor
jo
pusha
dec
jnp
popa
cmpsl
jmp
stos
loope
sub
out
int
or
in
daa
popl
pop
es
sahf
dec
dec
in
sbb
outsl
addb
pushf
dec
jmp
mov
or
sub
outsl
push
cmpsl
and
rorl
cmovg
lret
inc
mov
pushfw
sub
sub
xchg
or
addr16
insl
loopne
outsl
pop
and
or
imul
dec
daa
sahf
fisttpl
int
mov
fnstcw
xchg
cltd
sub
jo
popf
mov
or
orl
fstp
enter
jb
add
push
outsl
setbe
shrl
xchg
stos
in
lret
mov
pop
scas
xor
inc
std
jge
in
cmc
mov
or
lret
sub
sub
push
movl
dec
clc
test
data16
push
imul
sub
mov
mov
dec
jecxz
iret
dec
fisubs
fstps
or
pop
fs
call
imul
loopne
data16
dec
pop
xor
loop
ds
sbb
or
lds
shr
sub
adc
mov
fimuls
insl
sub
push
add
test
dec
stos
inc
insl
adc
push
dec
clc
mov
loop
dec
je
sbb
jp
out
daa
scas
xchg
pop
imul
cmp
mov
adc
arpl
cmpsl
add
nop
add
or
push
push
sub
or
or
push
arpl
hlt
mov
cmp
movsb
jmp
insl
mov
imul
pop
xor
repnz
fisttpll
dec
mov
jg
stc
test
outsb
aad
ret
loope
dec
or
lahf
add
sub
jge
cmp
xchg
cs
jmp
mov
rolb
and
insl
lret
xchg
mov
dec
and
push
adc
daa
dec
inc
lret
js
adc
scas
rcl
mov
push
loopne
sti
pop
out
imul
int3
sahf
test
cmp
lret
outsb
push
shr
xor
pop
ljmp
push
dec
pop
insl
cmpsb
sub
cmp
imul
outsl
jno
imul
and
sbb
outsb
sahf
lret
subl
mov
inc
fbld
arpl
push
mov
aas
sbb
sub
out
daa
das
mov
in
aad
sub
cwtl
ret
dec
mov
fimuls
cltd
push
mov
ret
inc
js
mov
outsl
push
mov
dec
mov
in
cmp
or
or
aas
outsl
insl
xor
xchg
pop
insb
sub
rorl
repz
adc
mov
enter
pop
mov
je
dec
sub
xor
das
adc
popa
or
loop
lret
pop
sub
insl
out
mov
stos
adc
clc
sar
test
popl
mov
imul
out
stos
jmp
xor
scas
stos
imul
mov
cmp
mov
push
test
push
bound
imul
push
mov
inc
test
xchg
dec
xchg
cld
or
test
popa
mov
scas
dec
cmc
mov
cld
xchg
pop
mov
shrl
imul
mov
or
cltd
fsubrp
dec
lret
cmp
jno
pop
iret
mov
adc
or
test
mov
ret
inc
ljmp
pop
jp
inc
mov
add
ljmp
adc
test
and
jne
xchg
test
mov
test
pop
pop
dec
dec
dec
insb
repnz
push
add
test
and
test
mov
bswap
sub
dec
lahf
out
adc
hlt
or
cmp
test
adc
or
stos
sub
add
inc
cmpsl
iret
out
lea
lret
push
xchg
cwtl
enter
scas
xchg
jno
push
push
adc
mov
or
pop
lret
outsb
xchg
pop
mov
lods
ret
out
test
leave
dec
je
push
and
mov
int
mov
sbb
outsb
cmp
out
iret
inc
lds
mov
insl
dec
and
aad
lret
sub
sub
hlt
sbb
mov
adc
lock
imul
stc
inc
lods
test
dec
push
ljmp
sbbb
in
jno
scas
scas
idivb
sub
lock
insl
das
int
data16
dec
sbb
pop
sbb
dec
mov
out
jnp
mov
xchg
data16
sbb
sub
cmpsb
lods
nop
push
arpl
inc
add
mov
push
jo
test
lret
into
cltd
rclb
out
test
into
or
adc
inc
leave
rolb
rclb
mov
mov
cvtps2pi
inc
or
roll
push
xor
inc
cs
push
jae
in
je
ljmp
fdivr
add
inc
dec
popl
cmc
lds
sub
xor
sbb
dec
iret
fsub
cmp
dec
inc
in
fsubrs
daa
stos
cld
xchg
lcall
or
add
pop
xor
out
inc
ss
cmpsl
push
sub
sub
daa
fnstsw
sub
lret
pusha
push
mov
adc
mov
jmp
sbb
mov
outsl
aam
adc
or
sbb
push
lea
mov
mov
add
mov
or
dec
pop
mov
ret
mov
or
outsb
push
fnstsw
cs
pusha
or
mov
or
stos
lock
cltd
nop
jns
or
fwait
in
jno
dec
test
outsb
inc
scas
lret
adc
iret
mov
mov
sub
loop
clc
loop
or
arpl
xchg
mov
dec
mov
xorb
imul
dec
add
sub
jno
stos
mov
fwait
outsl
lcall
or
sub
mov
dec
pop
pusha
int
mov
sub
movsb
enter
pop
inc
fwait
and
mov
pop
pop
jns
mov
movntps
loope
test
mov
addr16
xor
lcall
dec
shrb
stos
outsl
fcoms
imul
test
mov
jmp
or
out
ds
dec
xor
xchg
mov
mov
cmc
adc
cli
mov
adc
aam
movsb
out
repz
mov
enter
pushf
xor
iret
call
dec
stos
dec
sub
data16
jmp
or
push
adc
dec
iret
into
adc
push
sbb
sbb
daa
test
pop
or
into
and
das
daa
or
xchg
pop
xor
imul
or
xchg
in
cs
cmp
das
or
mov
or
pop
sub
loopne
push
out
in
xor
dec
mov
push
inc
jmp
loopne
cmp
imul
cwtl
xlat
mov
pop
fildll
das
pop
mov
xchg
out
mov
aad
mov
adcb
sub
push
adc
scas
cs
sbb
or
nop
inc
push
mov
dec
andb
cmp
addr16
imul
adc
or
imul
pusha
jmp
pop
andl
lock
mov
leave
lds
test
jmp
ja
scas
or
mov
fsubs
insl
adc
dec
jmp
add
int
lahf
outsb
push
inc
dec
outsl
adc
lret
cmpsl
push
adc
daa
jle
and
lret
mov
icebp
dec
mov
adc
or
xchg
pop
lret
push
int
mov
idiv
outsb
jo
ret
jb
iret
mov
or
push
stos
pop
push
sub
push
or
adc
leave
jle
adc
mov
pop
jo
and
bound
in
movsb
out
out
mov
adc
inc
pop
out
or
xor
push
dec
sub
jp
call
dec
or
leave
cs
xor
or
fildll
sub
dec
out
and
sub
sub
lahf
outsb
bound
lret
push
dec
das
pop
movsb
daa
mov
iret
ljmp
imul
leave
insb
arpl
ljmp
inc
in
and
scas
sub
jnp
test
add
sub
mov
daa
movb
lea
xor
mov
adcl
shrb
pop
or
lea
cltd
ret
imul
or
cwtl
add
jne
repz
dec
inc
ret
mov
scas
outsl
jnp
arpl
loope
in
lea
fsubrs
scas
imul
stos
popf
push
dec
sahf
jmp
dec
adcb
cmp
fisttpll
scas
fadd
mov
mov
cmpsl
xchg
out
subl
jg
pop
leave
das
jmp
sub
and
hlt
cmp
or
std
adcb
dec
dec
xor
insl
inc
lcall
lea
push
jmp
lods
mov
fidivs
dec
scas
lahf
dec
pop
add
jmp
test
add
push
stos
inc
sub
sub
dec
dec
lods
dec
stc
and
daa
or
sbb
sub
int
push
icebp
dec
or
adcl
mov
mov
add
jge
xor
xchg
jle
xor
leave
out
dec
xchg
test
xor
test
xchg
addr16
push
push
ret
mov
out
es
dec
push
xchg
jg
add
pandn
outsl
pushf
sbb
stos
stos
or
dec
in
jp
out
shlb
ret
lret
dec
push
sahf
mov
daa
cs
leave
addr16
or
dec
loop
sub
dec
adcl
jp
or
or
mov
inc
lea
xor
mov
cwtl
pop
xchg
scas
or
xor
cld
inc
mov
and
sub
push
cmp
icebp
adc
adc
or
lret
pop
push
sbb
push
int3
adc
inc
xor
push
bound
sub
jo
outsb
iret
mov
sbb
out
das
jo
sub
mov
jno
insl
std
gs
xor
lret
out
rorl
outsb
jb
pop
lea
enter
or
and
mov
dec
iret
popf
mov
dec
test
dec
sub
sub
xor
insb
jmp
adc
cmpsb
lret
shrb
push
mov
fisttps
into
scas
sahf
loope
mov
push
jnp
dec
shlb
out
sub
dec
mov
inc
sub
xor
xor
or
inc
inc
daa
das
and
jmp
adc
outsl
or
in
aas
fisubrs
ljmp
jecxz
mov
insl
addr16
wbinvd
aas
leave
push
fistpl
and
add
das
and
push
mov
in
fimull
mov
pop
daa
lahf
sub
dec
and
outsl
dec
xchg
test
ljmp
sub
inc
mov
ret
pop
aas
inc
cmp
jl
adc
or
pop
cmpsl
ret
dec
push
mov
sbb
sub
xchg
imul
lods
cmp
and
mov
push
jmp
sbbb
int
add
push
xor
inc
and
dec
bound
xor
fisubrl
imul
push
mov
fstl
or
das
inc
scas
imul
ja
jmp
repnz
loope
test
icebp
inc
xor
push
outsb
or
lret
inc
je
in
scas
sbb
dec
mov
imul
dec
inc
or
in
push
pusha
fs
xchg
xchg
cmp
fisubrs
adc
idivl
stos
or
das
or
imul
dec
cltd
rcr
loopne
in
sub
mov
aaa
out
nop
ljmp
sub
mov
imul
mov
into
mov
inc
into
mov
mov
aas
jo
sbb
cmp
jo
dec
or
xchg
stos
push
xor
je
inc
adc
dec
ret
cmp
lock
push
mov
jbe
sub
stos
adcb
or
fld1
xchg
xchg
jecxz
test
mov
enter
sub
lea
jmp
pop
add
xor
scas
mov
stos
out
xchg
pushf
dec
jae
xchg
adc
test
xor
test
or
orl
jmp
push
sbb
mov
int3
and
ja
cs
jmp
test
pop
insl
dec
popa
or
jmp
jno
outsb
mov
sbb
push
fwait
xor
popf
das
adc
xchg
mov
pop
xor
sbb
dec
stos
sbb
dec
mov
outsl
hlt
bswap
mov
xchg
push
lret
test
sbb
push
btc
dec
lea
imul
mov
dec
inc
std
cltd
sahf
sbb
scas
push
or
xor
and
rorl
push
lds
test
xor
mov
loop
dec
es
push
push
lret
dec
sbb
sub
dec
leave
sub
iret
inc
lds
dec
add
mov
or
mov
or
ficoml
or
dec
stos
adc
sub
add
out
fstps
jns
or
lret
cmp
add
std
dec
sub
fcomi
jecxz
mov
aad
dec
iret
shll
xchg
adc
lret
lret
cld
popf
outsb
dec
loopne
and
cltd
xchg
stc
sbb
shl
pop
outsb
xchg
or
dec
or
bound
sub
xor
loopne
cwtl
cmpsl
jno
sub
adc
stc
inc
stos
lret
mov
mov
dec
ds
jmp
mov
dec
dec
imul
xchg
in
shlb
or
or
sub
imul
daa
mov
mov
cmpsl
cmp
xchg
int
out
mov
mov
mov
push
dec
xchg
mov
xor
loopne
test
push
pop
fadds
cmpsb
dec
in
mov
dec
dec
inc
fimuls
mov
adc
push
mov
sbb
outsl
jmp
xor
aam
push
xor
xor
cmp
stos
sbb
push
jmp
in
dec
hlt
pusha
test
outsl
or
aas
sar
fsub
dec
or
sub
das
aad
jmp
cmp
out
mov
pop
sub
data16
mov
cmp
ret
mov
lds
or
ret
orl
mov
sbb
outsb
icebp
xchg
faddl
pushl
lret
imul
push
dec
shlb
lret
mov
stc
fucomip
mov
mov
or
cmp
or
cld
addr16
adc
subl
and
ret
scas
sub
lock
pop
leave
sub
rclb
dec
xor
ficoml
int3
stc
pushf
popl
jno
scas
mov
leave
cld
call
test
cli
inc
dec
ljmp
push
out
adc
sbb
push
sbb
ljmp
lds
jns
sbb
pusha
movsb
mov
out
in
fwait
or
or
mov
adc
lods
push
pop
sbb
dec
xchg
or
das
xor
lea
dec
movsb
pop
stos
out
cmp
or
add
push
scas
mov
or
xchg
xor
mov
sub
out
mov
adc
fildll
mov
pushf
mov
xor
adc
movsb
or
push
out
sub
lea
adc
lds
mov
ljmp
loopne
and
dec
add
sub
inc
imul
ljmp
inc
out
sub
xor
sub
mov
outsb
inc
icebp
out
jmp
bound
mov
into
sub
adc
adc
or
data16
or
jmp
js
mov
dec
mov
adc
mov
sbb
dec
adc
mov
call
mov
mov
or
into
push
cmp
scas
cmp
and
and
scas
or
cs
and
mov
or
lret
out
xor
adc
fwait
into
mov
and
or
popf
mov
outsb
int
lret
jle
scas
arpl
in
lea
lods
dec
cmc
les
ret
dec
push
push
das
insl
dec
inc
and
jmp
inc
lock
dec
xor
and
inc
dec
jno
insl
sub
pop
pop
imul
js
out
add
loope
lea
hlt
insl
out
pop
outsb
adc
cs
dec
mov
les
int3
or
sub
sub
or
or
aas
mov
xchg
sub
iret
mov
imul
jecxz
cmpsl
or
arpl
cmp
add
cvtps2pi
dec
in
and
dec
push
mov
xchg
and
or
ljmp
in
loop
or
mov
dec
pusha
cmp
add
pop
test
pop
imul
stos
dec
or
push
clc
xchg
clc
pop
adc
out
imul
aam
pusha
xchg
push
inc
test
mov
and
cmpsl
test
jp
in
xchg
shrl
sbb
into
stos
lret
rorb
aas
sti
sbb
lea
push
sbb
inc
push
xor
test
push
lret
mov
icebp
cld
mov
les
mov
dec
or
int
mov
out
rorb
xchg
xchg
cwtl
mov
das
incl
cs
mov
jl
push
stc
pop
daa
lcallw
insb
xor
popa
or
cmpsl
lret
pusha
xor
sbb
add
add
nop
pop
loope
dec
sub
ret
imul
enter
sbb
sub
dec
inc
and
hlt
cld
dec
fisttpll
adc
inc
or
ljmp
xchg
or
mov
imul
shll
mov
or
out
cs
in
or
fcoml
ljmp
xor
mov
clc
movsl
data16
adc
or
push
inc
enter
movntq
out
adc
out
outsb
dec
lret
sbb
sub
iret
cmp
mov
out
xchg
scas
dec
inc
lahf
daa
dec
pop
mov
in
add
or
nop
push
pand
popa
inc
dec
sub
insl
sti
sbb
fcomip
mov
out
loop
sbb
insl
movsb
inc
scas
sub
sub
inc
jecxz
mov
add
lcall
or
das
out
cs
scas
notb
dec
and
or
das
mov
dec
xchg
hlt
push
loopne
and
dec
adc
sahf
lods
enter
or
or
sbb
or
dec
sbb
mov
inc
stos
sbb
adc
pusha
sub
cs
dec
imul
cs
lds
aad
xchg
mov
das
in
sbbl
imul
adc
lret
dec
jo
xchg
imull
mov
push
xor
or
movsl
sub
xchg
pusha
sub
push
dec
mov
cmp
xchg
sub
mov
into
lcall
ja
test
or
es
lods
mov
jno
push
lcall
jmp
cmovae
sub
pop
push
outsl
lret
mov
sub
iret
or
sub
or
dec
dec
mov
mov
in
lods
push
xbegin
adcl
out
nop
mov
out
add
outsb
stos
mov
sub
add
in
pop
mov
lret
dec
add
scas
test
fldt
xchg
out
bound
iret
fists
cmp
pop
out
sub
cmc
or
sub
iret
adc
in
jmp
cltd
popa
push
out
dec
das
or
xchg
push
int
jp
xchg
cmp
into
pop
outsb
in
jle
aad
xor
xor
mov
dec
and
xor
dec
jnp
fxch
mov
and
loopne
mov
adc
stos
lret
outsl
xchg
outsl
pop
lret
dec
dec
out
imul
inc
mov
cmp
out
lds
psubusw
adc
outsb
pop
sub
lcall
repz
scas
pop
in
stos
push
sbb
testl
push
stc
jne
imul
mov
ret
dec
add
or
sbb
test
sbb
jg
cmpsl
inc
pop
and
mov
mov
mov
add
rorl
clc
pop
imul
mov
in
stos
adcl
inc
outsl
pop
add
scas
adc
xchg
int
dec
insl
pop
xchg
jno
cmp
out
rorl
std
das
out
testb
ficomps
push
dec
out
in
sub
push
lret
data16
bound
mov
ret
iret
sub
imul
dec
in
lret
dec
jmp
outsb
out
data16
imul
fwait
lret
scas
pop
clc
and
lret
roll
push
mov
sub
shl
pop
in
in
lret
out
sbb
test
sbb
adc
dec
lret
fsubs
jl
imul
outsl
lea
xchg
lods
mov
fnsave
xchg
pop
pop
testl
scas
fsubp
test
push
out
test
pop
inc
push
loopne
add
cmpsb
sub
mov
dec
bound
dec
ljmp
jge
mov
xor
lahf
add
push
cmp
push
or
mov
and
ret
inc
jno
nopl
xchg
test
sub
lret
iret
dec
test
fisttpl
ret
cli
dec
xor
das
mov
loope
xor
xchg
lret
into
daa
xchg
imul
or
incb
loope
push
sub
xor
add
adc
adc
mov
push
or
enter
stos
sub
cld
lods
leave
push
dec
ret
or
push
loope
outsl
inc
insb
rcl
mov
nop
lret
jno
dec
into
adc
pop
data16
cs
ror
out
dec
xchg
push
mov
sub
out
int
jp
clc
sub
fstps
dec
fcmovne
inc
inc
orl
out
mov
xchg
fisttpll
jb
jmp
icebp
and
loope
iret
push
mov
insl
xlat
clc
fcoms
out
dec
pusha
dec
das
push
mov
sub
and
lret
test
sub
jb
mov
dec
into
addr16
cmp
loope
lcall
push
xchg
cmpsl
adc
sub
in
push
cmpsl
in
aam
push
jmp
or
in
out
cltd
popa
scas
out
punpckhdq
inc
test
test
lods
lret
jnp
ljmp
push
insl
movsl
xor
pop
jg
aad
in
cli
out
dec
xor
adc
pop
jle
xor
dec
sub
mov
push
imul
dec
dec
shrb
jp
out
lods
adc
loope
das
cs
sub
mov
or
pop
imul
add
mov
jno
or
mov
andl
jo
mov
sbb
push
mov
dec
subb
das
sbb
or
orl
xchg
imul
rcl
pop
dec
mov
mov
out
shrb
mov
xor
outsl
dec
xchg
dec
sbb
andb
out
and
loopne
cmp
into
cmp
cmpsl
jmp
fwait
pop
push
insb
das
pusha
sub
imul
dec
push
sub
insl
outsl
cmp
dec
adc
out
out
std
sub
inc
mov
loopne
iret
sbb
push
mov
mov
adc
or
mov
sahf
jnp
cli
mov
jmp
push
and
ljmp
imul
sub
insb
push
sti
or
aad
mov
stos
leave
shrl
out
push
pop
pop
jmp
pushf
inc
bound
jmp
cld
into
inc
pop
cmpsb
in
cmp
cmpb
jle
lret
or
cmp
or
stos
cmpsl
sub
rol
or
in
loop
jmp
add
es
inc
imul
cmp
lret
cltd
daa
adc
mov
ret
xchg
or
outsb
mov
inc
jo
dec
dec
sub
aad
andb
xchg
pop
jo
xchg
iret
xchg
cwtl
xchg
or
or
mov
and
ds
insl
pop
pop
adc
stos
sub
mov
stc
inc
dec
xchg
xor
mov
hlt
or
xchg
pop
in
and
inc
test
out
lock
lock
pop
fwait
jge
mov
sub
dec
inc
test
aad
addr16
sub
pop
jnp
push
and
movsl
sbb
lcall
mov
std
lret
jo
lret
lea
or
mov
nop
push
mov
cs
iret
push
xchg
js
lret
add
cs
cs
leave
inc
jp
adc
call
mov
orb
sub
popf
jo
adc
fcmove
jp
loope
push
out
dec
jns
sub
test
xchg
push
imul
iret
dec
sbb
movsl
cmpsl
mov
lods
dec
iret
loop
es
sub
sub
fwait
sub
push
jnp
scas
nop
mov
and
fildll
xchg
xor
mov
dec
xchg
icebp
push
xor
dec
sub
push
mov
mov
pop
cmp
lock
xor
sub
sub
xor
mov
adc
adc
or
popa
in
dec
mov
dec
cmp
pop
lret
jmp
test
mov
sbbl
jb
lret
ds
sub
inc
fwait
and
push
out
sti
lods
scas
pushf
sbb
jmp
and
repz
leave
test
inc
add
pop
aad
testb
cmp
mov
jns
adc
push
sub
aam
push
paddd
lods
rcll
push
inc
mov
inc
loope
sbb
leave
push
or
xchg
or
aad
jmp
cli
pop
xchg
sbb
dec
repz
subb
loopne
clc
scas
xor
cmp
out
repnz
pop
add
imull
pop
cmpsl
out
sub
jnp
sub
sub
dec
fisttps
lcall
add
pusha
imul
pop
loopne
out
into
and
scas
mov
stos
push
lret
mov
adc
xchg
packssdw
lds
dec
ljmp
addr16
test
cs
dec
imul
dec
punpcklwd
and
sub
mov
fdivrl
nop
arpl
lret
jo
ljmp
je
cmpsl
jmp
push
cld
out
rol
adcb
lret
lret
in
fwait
adc
ljmp
jle
pop
or
addr16
lret
and
lds
xor
sub
jmp
scas
andl
lock
pop
ja
mov
dec
sub
bound
popa
inc
inc
dec
mov
jmp
jg
mov
mov
adc
push
jle
cmpsl
sbb
or
jo
or
jmp
in
pop
jp
into
sub
xor
pop
jge
cmp
mov
nop
push
adc
inc
pop
out
scas
mov
push
enter
inc
xor
push
adc
rclb
int
imul
or
or
jmp
and
iret
out
icebp
out
jmp
or
sub
orl
clc
subl
out
cs
add
adc
xor
out
mov
fisubrl
daa
test
or
push
clc
imul
iret
loope
dec
out
mov
sub
mov
loope
xchg
insl
cmp
cmpsl
inc
daa
cmp
sub
leave
dec
inc
cmp
adc
dec
inc
paddd
call
and
mov
jno
adc
push
cmp
or
loope
iret
imul
mov
jge
xor
jbe
sti
pushf
xor
dec
xor
lahf
scas
sub
jmp
rcrl
lods
pop
pop
dec
sbb
mov
or
fsubrs
adc
lret
sub
nopl
loopne
or
add
ret
dec
out
mov
mov
push
daa
mov
sub
jl
sub
jecxz
and
in
dec
test
sbb
shrl
outsl
or
dec
shrl
dec
dec
ja
mov
daa
sbb
and
or
pop
stos
loop
mov
push
or
or
arpl
sub
xchg
push
adc
lret
dec
test
outsb
xor
js
or
pop
inc
or
adc
jmp
jno
cs
das
sub
mov
dec
inc
sub
imul
jmp
cmp
or
mov
adcl
dec
pop
decb
adc
xchg
and
cwtl
cmpsb
sub
insl
shlb
popa
std
das
xor
push
dec
dec
sub
fimuls
xor
pop
insl
icebp
clc
outsl
cs
call
loop
sub
ja
loope
test
lock
push
push
xchg
inc
pusha
mov
sub
scas
lret
or
fdivrs
xor
cs
xor
mov
add
lods
dec
mov
jp
lret
mov
mov
xchg
jecxz
js
xchg
sbb
test
sub
or
dec
lods
adc
mov
sub
or
jl
stos
fildll
int
out
push
cmpsl
out
sub
inc
stc
fidivl
leave
iret
dec
push
ret
or
ljmp
cmpsl
mov
stos
xchg
lea
int
ljmp
jmp
sub
mov
iret
fldcw
xlat
mov
jno
pop
outsl
addr16
ss
mov
lret
in
adc
jo
jp
jl
idivb
cmp
push
cmpsb
adc
pop
lret
das
push
inc
fmulp
mov
das
dec
lods
xchg
xor
outsl
pop
xor
sub
adc
adc
mov
xor
stc
faddl
stos
adc
push
jb
pop
xor
in
sub
lret
adc
insl
xchg
in
pop
ljmp
sbb
mov
mov
shrb
scas
or
mov
push
dec
pminsw
adc
stos
out
jbe
or
xor
push
adc
iret
test
addr16
dec
fildl
adc
ret
adc
test
out
lret
stos
icebp
into
and
or
and
pop
ljmp
bound
adc
mov
jnp
movsb
gs
xchg
inc
or
pop
stc
or
adc
nop
leave
mov
andb
push
dec
push
xchg
or
or
arpl
dec
mov
xchg
test
mov
add
or
in
or
xor
pop
pop
or
sub
sahf
ds
test
push
outsb
sbb
leave
dec
inc
mov
pop
jmp
xchg
dec
cmp
or
pusha
fwait
cltd
xchg
pop
dec
nop
adc
jmp
sahf
imul
nop
ror
push
mov
imul
or
mov
loopne
mov
mov
or
shl
push
sub
and
insb
and
mov
push
jno
out
mov
mov
inc
sub
dec
sub
stos
jns
lret
inc
xor
mov
lcall
into
aas
fsub
jne
and
cmp
out
mov
popl
dec
cmp
jbe
cmpsb
lea
xbegin
sub
inc
insb
leave
and
cs
push
pop
daa
xchg
inc
outsb
out
mov
push
and
or
dec
test
jp
lret
adc
add
jmp
xchg
data16
pop
cmpsb
push
xchg
pop
nop
addr16
je
repz
iret
and
loop
jne
dec
outsb
xchg
icebp
push
stos
sub
adc
stos
mov
scas
fimuls
sbb
mov
sub
rorb
nop
inc
sbb
mov
and
leave
dec
insl
xor
test
shl
outsl
dec
loop
sbb
push
mov
mov
dec
push
scas
adc
insb
das
icebp
mov
addr16
adc
lods
xor
out
mov
mov
jmp
sub
ret
hlt
dec
fisttpl
lock
pusha
repnz
aad
mov
inc
mov
sbb
bound
fimuls
addr16
push
push
pop
or
outsl
jbe
dec
scas
sub
jg
dec
int
jge
xchg
mov
addb
fsubs
or
jmp
sbb
add
lret
xchg
mov
jno
insl
sbb
scas
stos
loopne
arpl
popa
dec
sub
mov
xchg
fdiv
leave
cmp
movntps
sub
sbb
stos
iret
xchg
popf
mov
loope
push
or
ljmp
popa
sbb
xchg
sub
dec
xor
popf
adc
outsl
sub
jns
push
jmp
fistl
outsb
dec
jb
iret
xor
xchg
dec
icebp
dec
call
mul
mov
mov
into
push
mov
lret
jne
ja
arpl
icebp
scas
scas
adc
or
push
int
sub
jmp
cmp
stc
lahf
xor
inc
adc
and
dec
iret
fld
popf
mov
stos
outsl
aas
lea
mov
cltd
stc
xchg
int3
jbe
inc
xchg
ljmp
adc
call
imul
outsl
sub
das
arpl
dec
loope
xor
sub
repnz
ja
rclb
sub
ljmp
into
lret
outsl
or
and
or
movb
addr16
add
imul
lret
ljmp
mov
adc
jp
lret
lock
lods
adcl
push
inc
or
clc
andl
out
imul
hlt
jmp
jb
xor
or
out
dec
int3
push
sub
adc
jne
cld
inc
mov
or
cmpsl
faddl
add
inc
cmpsb
lods
imul
out
jmp
dec
into
inc
xchg
in
inc
lret
push
sbb
and
iret
cld
inc
imul
ret
dec
sub
sahf
pop
pop
insb
xchg
popa
mov
sbb
into
test
dec
pop
sbb
out
adc
mov
pop
or
pop
imul
pushf
imul
int
xor
xchg
xchg
insb
push
sub
sub
sbb
ljmp
icebp
xlat
mov
insb
mov
mov
hlt
out
lret
sub
cld
and
cmpsl
es
adc
cs
scas
cli
repnz
in
aad
cmpsl
pop
push
or
jb
jmp
lret
adc
jb
lret
push
or
rol
addr16
out
xor
sub
dec
fwait
adc
scas
outsl
lret
out
es
pop
sub
jb
cmovle
cmpsl
lret
sub
mov
pusha
mov
sbb
outsl
dec
sub
add
xor
fisttps
or
push
inc
mov
outsl
cmpsl
jp
push
cs
mov
or
insb
pop
push
das
jecxz
or
movsb
lds
enter
movsl
pop
stos
push
das
lahf
sub
mov
int
in
mov
out
aaa
mov
xor
or
dec
inc
outsl
stos
rorl
adc
add
into
pop
addb
jb
or
sub
add
loopne
dec
out
push
bound
stos
stos
cmpl
mov
leave
das
add
mov
sub
pop
inc
filds
mov
insl
rcll
pop
rcr
pop
add
cmpsl
test
lret
sub
ss
add
out
sub
in
adc
jnp
subb
lock
adc
or
cmp
in
in
sub
cmp
ret
iret
pop
dec
dec
das
scas
jg
cmpsl
xchg
xor
out
cmp
pop
xchg
das
adc
outsb
dec
imul
sub
adc
push
lret
sub
push
fwait
out
aas
pushf
cmpsl
pop
mov
addr16
out
xchg
fs
lea
scas
or
ret
dec
dec
inc
xchg
scas
ljmp
dec
and
or
cs
sub
xor
jg
lahf
adc
or
das
out
jae
addr16
lods
or
or
pushf
xchg
dec
mov
imul
and
stos
lds
lret
and
dec
daa
cmpsl
push
pop
mov
ret
push
inc
xor
mov
loope
out
push
mov
cmpsl
sbbl
or
adc
das
scas
popl
jmp
iret
dec
roll
xor
arpl
sub
rorl
pop
insl
outsl
out
mov
jnp
mov
jo
mov
in
cmp
sbb
int
out
sbb
pop
imul
test
jmp
sbb
sub
adc
sub
fimuls
or
xlat
dec
lret
ret
dec
dec
sub
dec
dec
imul
lock
xchg
jmp
ret
popf
pop
mov
adc
push
dec
lret
xor
scas
sub
jnp
dec
test
cmpsl
jmp
sub
outsb
loope
iret
mov
or
xchg
inc
cs
cmp
enter
lret
int3
push
cmp
inc
adc
decb
or
or
stos
and
lods
sub
mov
imul
or
mov
test
loopne
lea
add
outsb
stos
data16
push
fbstp
sub
push
insl
faddp
mov
faddp
or
push
test
mov
dec
dec
adc
adc
loop
dec
pop
and
xchg
or
scas
stos
adc
mov
pop
pop
out
cmp
rorl
pop
vmovd
lret
dec
xor
or
jne
pop
imul
cmp
movsl
das
or
dec
mov
cmpsl
adc
outsb
mov
and
std
and
shl
addr16
cld
xchg
jno
out
into
xor
jmp
xchg
mov
rcrl
push
jg
pop
fcoms
subl
in
les
dec
stos
and
adc
dec
dec
or
mov
sbb
test
out
lea
adc
dec
out
mov
pop
in
shrl
movsb
sbb
push
pop
lret
dec
mov
outsl
stos
imul
loope
dec
dec
jmp
push
pop
add
lret
dec
jmp
outsb
sub
sub
fwait
int
push
imul
daa
insl
pop
xrstor
popf
lahf
dec
in
popf
sub
sbb
movq
test
dec
push
add
or
jne
negb
arpl
ret
and
cltd
fsts
dec
arpl
bound
sbbb
push
or
nop
ss
in
pop
or
or
mov
push
outsl
data16
xchg
mov
sbb
or
pop
push
lds
xor
out
dec
mov
mov
hlt
inc
mov
data16
in
imul
or
in
dec
or
scas
ret
pop
lods
fs
outsb
push
shll
lret
add
push
push
scas
outsl
adc
int3
out
xchg
ds
mov
clc
push
in
in
out
xor
nop
setnp
adc
cli
out
fisubrs
adc
rolb
sub
ljmp
pusha
xor
in
lea
dec
pop
movb
or
xor
adc
iret
in
or
push
sub
pop
in
js
push
sub
dec
push
jno
les
out
cmp
sub
mov
sub
out
jmp
outsb
push
cmpsl
sbb
int3
pop
dec
adc
popf
insl
xor
setnp
hlt
loopne
call
outsl
or
sti
add
adc
rorl
lretw
iret
add
repz
adc
sub
pop
fsubrl
lock
pop
jmp
inc
pop
mov
ss
xlat
xor
push
dec
mov
pop
bound
insl
rolb
popa
mov
bound
std
lea
std
mov
or
fisubrl
xor
imul
dec
cmp
sbb
dec
sub
pop
cmpl
pop
add
sub
or
add
jmp
lea
sbb
leave
cwtl
push
and
sub
mov
fwait
sub
or
inc
or
lea
dec
mov
pop
mov
mov
push
dec
push
push
mov
push
sub
cs
mov
lahf
sbb
fwait
hlt
add
out
adc
add
je
sbb
xchg
lods
cs
stos
add
addr16
mov
daa
xchg
mov
outsl
mov
mov
lods
int3
leave
sbb
lods
mov
jecxz
rolb
add
pusha
dec
dec
and
or
push
and
sub
and
inc
data16
jno
outsb
sub
mov
popa
das
dec
mov
xchg
xor
or
xchg
pop
call
mov
loopne
imul
lret
movsl
or
stos
mov
mov
movsl
sub
imul
iret
lds
mov
outsl
sub
test
rorl
pop
jo
lea
jmp
dec
dec
lds
ret
jns
cmp
or
fiadds
dec
out
test
stc
iret
sub
icebp
iret
cmp
dec
sub
das
jecxz
mov
inc
add
lret
xchg
and
jb
and
inc
les
jmp
nop
out
jb
stos
in
iret
pop
ret
sub
push
pop
xor
mov
in
add
jmp
mov
cmp
stos
mov
roll
sub
lods
scas
xor
pop
fldt
inc
jmp
iret
jle
lcall
roll
xchg
adc
das
xor
mov
or
dec
sub
push
pop
or
int
psubsw
aam
jmp
ljmp
mov
ja
test
iret
loope
push
mov
jmp
or
pop
push
std
sub
insb
add
movsl
pop
adc
mov
sbb
push
push
sub
test
orl
inc
or
scas
dec
or
mov
sub
daa
ret
adc
or
dec
jecxz
out
lods
jne
or
mov
sub
test
in
cmp
hlt
cwtl
shll
test
xlat
out
sub
stos
sub
pop
pop
adc
adc
out
das
adc
dec
mov
push
sarl
into
pop
daa
or
fildl
cmp
cs
test
insl
in
and
lahf
hlt
xchg
mov
imul
mov
or
nop
or
sub
decb
xchg
addr16
out
add
loope
sub
ljmp
pop
xchg
scas
xchg
and
scas
stos
xor
int
insl
adc
addb
daa
int
dec
test
xchg
inc
or
xchg
icebp
mov
sub
or
test
mov
out
cmpsl
stos
adc
sub
inc
fildl
dec
pop
les
arpl
bound
and
and
push
addr16
pop
lock
fcmovnbe
and
xchg
xor
into
and
xor
testb
and
cmpsl
dec
mov
pop
ljmp
imul
xor
mov
adc
dec
or
xor
or
pop
add
or
test
sbb
dec
iret
imul
lods
lds
cs
inc
mov
lea
add
stos
or
dec
pop
pop
outsl
out
jle
clc
add
divb
dec
addr16
stc
popa
inc
or
xchg
mov
insl
lods
jnp
in
push
jo
adc
push
leave
or
and
jno
mov
test
loop
in
incl
push
pop
or
jmp
rclb
insl
outsb
xor
mov
sti
mov
in
loope
leave
jo
stos
ret
imul
push
xchg
repz
dec
pop
arpl
add
adc
out
jmp
or
sub
adcb
pop
pop
repnz
xchg
stos
pop
pop
add
sbb
dec
fadds
loop
sub
pop
push
mov
lret
push
ret
pop
lret
pop
test
mov
lret
dec
loop
iret
shll
jecxz
inc
mov
imul
scas
data16
out
push
jge
push
cmpsl
dec
int
sub
dec
push
or
test
sub
inc
sub
mov
out
insb
push
fisttpl
xchg
out
je
cmp
lret
and
sbb
aas
push
scas
scas
adc
sub
mov
adc
les
out
sub
imul
mov
and
lock
into
xchg
xor
jmp
pop
lods
ljmp
rol
cli
scas
xor
sub
dec
sub
test
imul
pop
icebp
pop
daa
data16
xor
or
aas
mov
loop
push
in
mov
push
mov
xchg
or
lock
in
sbb
outsb
pop
mov
lret
cltd
test
clc
sbb
dec
pop
stc
pop
jp
rorl
push
arpl
mov
das
xchg
add
push
dec
dec
mov
cmp
xor
scas
inc
ficompl
xchg
iret
mov
cmovne
inc
xchg
out
rdmsr
aas
and
lret
or
and
insl
pusha
ds
ljmp
dec
imul
in
clc
les
outsl
xor
or
push
xchg
xchg
and
mov
pop
sub
pop
push
adc
into
cmp
jmp
ret
cmpsl
insl
jp
lock
sub
into
in
out
xchg
xchg
fsubs
cmp
data16
mov
lret
or
nop
lcall
adc
outsb
xor
mov
sub
divl
dec
or
xchg
stos
xchg
out
test
out
ljmp
cs
dec
lods
iret
inc
andb
xchg
ret
adc
sub
mov
outsl
icebp
cmc
pop
dec
scas
stos
imul
adc
lods
jmp
in
test
aad
repz
inc
lods
rcrb
in
adc
outsb
shlb
test
or
stos
sti
insl
test
sub
int
imul
dec
pop
cmp
mov
sbb
cli
pop
scas
push
jo
push
fcoml
int3
pop
and
cmpsl
or
sub
fdivrl
lret
push
out
outsb
sbb
push
mov
fsubrl
pop
mov
lea
or
int
push
push
jecxz
lret
loop
mov
mov
push
leave
cs
adc
xchg
popf
push
or
dec
ljmp
adc
insl
xchg
dec
daa
inc
cs
add
xlat
inc
or
mov
sub
mov
sub
inc
pop
push
lret
mov
push
and
call
stos
xchg
lcall
pop
inc
push
insl
mov
xchg
pop
inc
out
lea
sbb
pop
mov
int3
cmpsl
dec
icebp
idiv
dec
cwtl
mov
dec
rep
cltd
sub
or
adc
xchg
jg
sbb
insl
cmpl
jmp
sub
cmp
sub
lea
int
loope
or
lods
sub
xor
iret
or
cmc
fistl
shll
arpl
add
addr16
data16
or
xchg
xchg
bound
out
inc
jle
leave
imul
sub
cltd
xchg
loopne
pop
inc
dec
orl
or
fs
test
cmp
push
out
leave
dec
and
inc
stos
cmpsl
sub
sub
cltd
scas
imul
mov
xor
call
addr16
cmp
jb
int
loop
or
mov
add
outsl
xchg
data16
jp
cmpsl
dec
bound
cltd
add
add
xchg
lret
sub
andb
or
or
cs
mov
cltd
mov
out
das
sbb
mov
sub
data16
cmp
outsl
mov
mov
and
lret
leave
mov
adc
xor
ret
sbb
outsl
dec
pop
f2xm1
mov
lret
scas
sub
pushf
loopne
xor
sahf
jle
pop
dec
lret
push
jmp
scas
lret
jp
leave
sub
or
out
dec
out
mov
into
or
jo
nop
addr16
test
inc
leave
int
jne
out
das
pop
cltd
out
push
lods
lea
and
insl
dec
push
jo,pn
mov
dec
sahf
decl
movsl
outsb
and
les
stos
mov
insl
dec
xor
xchg
test
cmpsl
rclb
test
lods
inc
into
fcoml
mov
cmpsl
pop
inc
xchg
dec
cld
inc
or
mov
sbb
xchg
mov
lahf
push
lods
popa
xchg
or
pop
leave
pop
push
sub
adc
in
dec
or
loop
cmc
mov
jle
dec
mov
in
outsl
addr16
imul
out
lea
or
dec
test
or
addr16
bound
lret
jmp
sti
add
cwtl
iretw
dec
jno
push
out
sub
in
xor
jge
sub
pop
les
cmp
scas
mov
test
test
inc
out
pop
bound
sub
push
call
stos
jmp
inc
sub
in
cwtl
mov
das
sbb
mov
mov
or
dec
or
inc
call
sub
mov
xchg
push
or
daa
sbb
or
mov
lea
sub
cld
test
movsl
pandn
dec
and
pop
sarb
add
fadd
stos
ret
inc
pop
mov
xor
inc
imul
jmp
jb
mov
adcl
mov
cmp
add
scas
ljmp
jecxz
mov
and
icebp
jmp
and
shl
bound
dec
loope
addr16
ss
jo
bts
int
or
adc
sbb
into
dec
addr16
sub
inc
mov
test
out
dec
daa
push
movsl
fwait
push
out
pop
adc
fisttpl
je
lret
stos
xor
mov
outsb
iret
dec
loope
dec
sub
test
clc
pavgw
dec
jmp
mov
cmpsb
push
xlat
xchg
push
dec
xchg
jmp
push
into
or
aas
and
test
mov
sbbl
out
inc
dec
push
or
es
sub
dec
aad
imul
sbb
jo
adc
dec
divb
lds
stos
jmp
cs
cwtl
or
xor
dec
sbb
mov
xchg
shrl
and
es
mov
fs
jge
jp
adc
outsl
or
lahf
mov
cmpsl
or
push
test
adc
loop
mov
jle
add
out
xchg
pop
jae
jle
ljmp
lods
sbb
xchg
popa
popf
jmp
inc
je
aaa
mov
lret
push
pop
test
pop
in
mov
lret
jne
test
inc
pop
xchg
push
cmp
lret
out
sub
xor
sub
es
mov
sub
or
push
imul
or
add
sbb
xor
imul
fistl
sub
stc
dec
cs
sbb
lods
sub
dec
pop
lret
jg
mov
in
dec
fs
add
dec
add
mov
dec
outsl
imul
xchg
mov
dec
sbb
dec
dec
int3
xor
int
outsb
imul
cmp
in
dec
popf
imul
sub
sbb
into
insl
out
repnz
mov
push
pop
scas
jno
lret
or
cmc
lods
in
or
jmp
cmp
sub
mov
and
or
sbb
in
in
or
daa
movsb
adc
or
and
mov
mov
icebp
dec
cs
outsb
cmp
sub
test
imul
adc
jecxz
push
mov
ret
sahf
mov
dec
mov
mov
aas
push
pop
dec
sub
pop
pop
pop
xchg
nop
or
insb
sub
daa
and
iret
or
jmp
sub
sbb
sub
sub
dec
out
inc
mov
mov
pop
inc
or
ljmp
xlat
mov
insl
mov
push
mov
mov
mov
lea
xchg
sti
add
sbb
pop
mov
sub
mov
dec
sub
data16
ret
test
mov
orl
and
lret
inc
enter
dec
push
mov
sti
pop
enter
lods
mov
daa
outsl
insb
scas
ret
pop
js
mov
cltd
xor
mov
jmp
daa
pop
scas
fisttpl
movsl
dec
jmp
dec
sub
xchg
ret
adc
jp
push
push
sub
dec
sub
rcl
sub
mov
popa
ret
xchg
iret
jl
jl
adc
testl
jno
dec
sbb
imul
lret
pop
lock
daa
test
mov
jne
inc
cmc
xchg
aam
aam
add
ljmp
mov
and
ljmp
adc
sub
arpl
lret
dec
sbb
ret
daa
dec
std
aam
out
dec
int
sub
sub
pop
inc
dec
sahf
icebp
dec
cli
pop
jmp
cmpsl
out
pop
push
push
scas
sti
ret
pop
mov
adc
dec
movsl
ljmp
loopne
push
mov
or
stos
enter
xchg
andl
movsl
mov
fidivs
xchg
rclb
xchg
in
enter
fidivs
xchg
dec
inc
sub
lret
insl
insl
xor
xor
fldt
dec
cmp
mov
and
cmp
das
aad
or
scas
xchg
dec
callw
jmp
in
aaa
sbb
dec
imul
push
mov
into
mov
aaa
jmp
outsb
lods
arpl
inc
sub
pushf
cs
es
scas
dec
push
xchg
outsl
scas
mov
or
nop
push
xchg
push
dec
inc
call
shrb
out
dec
xchg
movsb
nop
xchg
xor
pusha
mov
pusha
pop
push
xchg
shr
and
fists
pusha
ds
fisttps
xchg
fbstp
loop
aad
jae
mov
pusha
repz
lea
lret
stos
icebp
arpl
lock
movntq
mov
out
sbb
push
jmp
dec
xchg
cld
ja
out
imul
inc
in
cmp
push
mov
xchg
mov
cmp
adc
lea
pop
inc
adc
into
loope
mov
shlb
xor
out
mov
adc
daa
mov
dec
push
mov
xor
jns
jo
mov
js
push
pop
inc
daa
sub
outsl
lods
xor
push
push
cmp
push
adc
xchg
pusha
ljmp
loop
mov
stos
jp
adc
int
movd
pop
into
test
daa
test
cld
mov
sub
jmp
scas
and
cs
outsb
test
mov
leave
dec
push
stc
lret
in
jmp
lahf
cmp
ret
out
and
adc
inc
or
push
sub
adc
ret
out
call
sti
test
jp
adc
sub
popa
into
inc
dec
ljmp
clc
cmc
insl
imul
lret
sub
or
sub
out
mov
adc
scas
cld
or
adcl
movsb
js
jmp
outsb
daa
imul
push
dec
xor
push
pop
in
or
mov
iret
scas
cmp
outsb
pop
and
dec
dec
dec
out
scas
push
push
pusha
imul
pop
dec
sub
xor
pushf
push
mov
dec
xchg
sub
dec
or
movsl
mov
fdivs
push
xor
dec
data16
push
pushl
sti
mov
or
push
outsb
sub
mov
rolb
test
addr16
and
leave
into
push
lods
out
ss
xor
dec
pusha
or
insl
pop
adc
rclb
dec
pusha
push
xlat
shll
int
dec
ljmp
jmp
lret
push
into
mov
add
inc
mov
lds
pop
cli
scas
gs
mov
popa
or
mov
jns
or
push
push
in
xchg
fwait
int
pop
jmp
cs
mov
sub
movl
cmp
or
lods
inc
sub
dec
dec
sub
test
test
jmp
sub
imul
lock
pop
adc
push
out
lods
sub
sub
xor
jmp
test
sub
sbbb
scas
dec
dec
jmp
lahf
mov
lret
bound
bound
sub
fsts
xor
and
cs
popa
insl
cmpsl
or
mov
mov
das
or
or
int
mov
inc
mov
clc
adc
or
iret
or
xor
jmp
leave
ja
inc
inc
mov
cld
dec
sub
xchg
in
and
sub
leave
cmp
aas
sub
or
dec
mov
jne
mov
or
cmp
shl
sti
test
incb
ljmp
jl
cs
out
adc
dec
sub
dec
sub
dec
inc
cmp
xor
sub
dec
ljmp
in
andl
push
cld
test
insl
add
jle
subl
out
rol
dec
leave
sbb
adc
or
sub
mov
lret
in
adc
xchg
pop
adc
or
mov
shlb
mov
cmp
inc
sbb
or
stos
jno
in
cmc
push
aad
inc
test
push
cmp
xchg
dec
mov
stc
xchg
insb
test
sub
int3
mov
push
iret
inc
lcall
ja
mov
bound
lea
adc
outsl
out
dec
scas
lea
out
jno
mov
cmp
mov
ret
bound
inc
inc
lods
xchg
push
fimull
sub
cs
pop
mov
ljmp
daa
std
cmp
or
lds
ljmp
jns
or
or
mov
pop
int
jmp
outsl
jno
sub
xchg
xor
dec
dec
stos
sahf
inc
outsl
scas
out
rcrl
ljmp
movups
mov
push
sub
mov
sub
mov
test
das
and
lret
stos
or
orb
scas
scas
dec
mov
imul
in
int
into
add
stos
mov
iret
pop
cmpsb
out
jmp
adc
fcomps
sub
ret
pop
xchg
out
xlat
mov
mov
lds
lret
inc
push
out
test
push
mov
out
dec
push
xor
daa
xchg
sub
mov
or
mov
cs
and
lods
addr16
or
leave
mov
fs
sub
out
mov
lret
sub
aas
lods
sub
daa
add
pop
pop
stos
dec
cs
and
sub
push
lret
sub
sbbb
stos
orl
or
sbb
outsb
and
outsl
sub
adc
leave
call
inc
and
dec
xchg
pop
inc
outsl
push
inc
xor
xchg
and
and
mov
in
jmp
lret
lods
sub
sbb
imul
push
outsb
pop
push
cmp
and
testl
andl
push
adc
lret
jo
mov
or
insb
mov
push
pop
inc
inc
lahf
dec
mov
inc
xchg
into
mov
mov
dec
daa
dec
sbbl
jge
cs
stos
lea
or
imul
inc
addr16
pslld
into
push
or
scas
lret
adc
push
push
jmp
aad
imul
cmpsb
popa
in
das
stos
mov
or
orl
adc
lea
inc
out
imul
dec
xchg
sub
pusha
dec
xchg
shlb
dec
sahf
imull
sarl
stos
mov
in
jmp
pushf
in
sti
mov
or
iret
pop
mov
stos
lret
pop
pop
orl
sbb
or
lea
dec
push
into
divl
sbb
lret
loope,pn
imul
sub
pop
vandnps
xor
pxor
or
outsl
push
dec
jnp
sub
dec
arpl
fimuls
rolb
lahf
xchg
add
dec
mov
jmp
sub
mov
xchg
call
lea
imul
adc
lods
into
inc
or
mov
push
jecxz
sub
xorl
test
in
lds
sub
leave
pop
jge
or
imul
imul
cs
in
xchg
jns
lods
mov
jne
mov
or
push
out
xor
in
mov
xchg
ljmp
out
repnz
insl
dec
push
mov
push
aad
test
xor
stos
mov
repz
imul
dec
dec
rcr
sub
das
mov
jmp
mov
sub
out
mov
xchg
bswap
pop
test
stc
pop
sub
bound
dec
lret
imul
das
lods
push
mov
mov
xor
js
xchg
imul
cmpsl
jmp
push
dec
lret
pusha
sub
cmp
or
xor
out
das
bswap
int3
sub
inc
pop
mov
ret
cmp
dec
mov
lods
jmp
out
iret
dec
jg
lret
or
adc
stos
das
sub
cmp
movsl
adc
mov
cmp
xor
out
ss
or
out
or
push
dec
bound
rorb
testb
inc
mov
movsb
lret
jnp
testb
aam
scas
adc
inc
dec
xor
outsl
stos
pop
lret
addr16
daa
mov
sbb
and
test
dec
or
jmp
imul
mov
mov
push
mov
sbb
rol
dec
stos
or
sub
shufps
lods
out
popa
adc
push
sub
xor
pop
dec
pop
cmpsl
scas
mov
scas
dec
add
pop
lret
data16
and
mov
xchg
dec
jmp
dec
cmp
test
cmp
pop
mov
mov
jns
dec
mov
cmp
lea
scas
mov
lds
out
scas
imul
test
call
daa
out
out
ret
jnp
sub
leave
dec
loope
or
jmp
inc
lahf
dec
xchg
les
mov
js
insl
dec
vmwrite
push
or
inc
sub
mov
push
xchg
stos
jmp
cmpsb
int3
fiaddl
ljmp
sub
inc
mov
ds
xchg
mov
xchg
dec
xchg
pop
das
push
pop
out
dec
cmpsb
bound
psubusw
dec
aam
movsl
sub
pop
mov
lret
ja
jb
sub
add
enter
adcb
mov
fimuls
mov
dec
cltd
adc
cwtl
dec
iret
or
xor
and
add
mulps
pop
cs
push
sahf
rol
push
dec
icebp
fsubs
jle
adc
mov
dec
dec
or
loope
sub
stos
jno
mov
scas
jmp
cwtl
out
or
dec
or
pop
lds
dec
dec
ljmp
xlat
mov
inc
or
cmp
into
adc
cs
cmpsl
cli
ret
push
dec
or
pop
mov
data16
je
lcall
lea
xchg
sub
stos
dec
sub
adc
xor
sahf
xor
daa
mov
or
push
adcl
dec
pusha
iret
inc
lret
sub
movmskps
sbb
dec
xchg
movsl
mov
ret
mov
out
xor
jno
insl
out
pop
test
stos
subl
mov
xchg
or
or
or
mov
outsl
stos
das
push
xchg
xchg
and
lea
sub
adc
decl
push
stos
xchg
dec
mov
mov
out
dec
fucomp
das
jmp
xchg
int3
outsl
ljmp
push
ror
dec
mov
push
sbb
out
pop
data16
or
inc
sub
sbb
scas
dec
or
test
add
stos
push
dec
adcl
dec
imul
push
pop
dec
sub
or
icebp
stos
scas
addr16
and
out
sub
jg,pn
insl
sbb
xchg
adc
enter
outsl
push
daa
or
sub
stos
jge
xchg
mov
test
test
lea
and
pop
in
sbb
inc
addr16
sub
xchg
push
icebp
test
xor
hlt
out
push
shlb
push
das
sub
out
loopne
and
jno
dec
mov
cs
aas
pop
sub
sahf
xlat
push
insb
or
xchg
repnz
lahf
inc
enter
clc
push
mov
dec
jge
mov
inc
pminsw
fildll
mov
inc
jecxz
addr16
stos
sub
int
mov
mov
xor
jl
pop
icebp
push
repnz
leave
push
subb
jg
mov
ret
jg,pn
test
and
lock
or
or
sub
dec
pop
fldt
imul
xor
xor
int3
in
xchg
into
scas
lods
mov
in
push
mov
fwait
pop
jmp
insl
dec
or
or
dec
mov
mov
into
pop
push
mov
or
fcom
cmpsb
iret
xor
or
mov
pop
push
cli
adcl
pop
pop
jo
popf
in
add
xchg
inc
or
mov
push
mov
lds
outsl
push
loop
scas
testb
ret
iret
pop
aaa
xchg
push
inc
pop
xchg
adc
std
enter
jno
das
faddl
push
xchg
or
nop
pop
or
adc
adc
mov
out
sbbb
cs
outsb
inc
sbb
pop
and
jmp
divb
mov
sbb
sub
jnp,pt
clc
push
cwtl
ljmp
ljmp
xchg
cmp
or
push
mov
dec
bound
adc
into
mov
sbb
cmpsb
sub
nop
xor
and
repz
dec
or
imul
popf
push
out
pop
daa
adc
or
jg
push
push
cmpsl
adc
and
ror
or
outsb
loopne
test
into
jmp
xchg
and
adc
sub
addr16
adc
insl
sarl
xchg
stos
cld
mov
xchg
mov
mov
push
dec
mov
push
pop
sarl
sbb
and
ss
jae
push
popf
ret
jnp
lods
mov
cltd
sub
mov
mov
inc
xor
arpl
mov
das
sub
iret
mov
insl
mov
stc
mov
push
roll
mov
insl
sub
dec
and
xor
or
or
scas
pop
and
scas
ljmp
aas
daa
mov
mov
and
jne
mov
xchg
dec
dec
into
and
inc
sub
dec
cmp
mov
aam
adc
mov
lea
dec
rorl
or
js
scas
and
push
out
dec
jae
xchg
in
mov
xchg
push
test
push
stos
das
iret
adc
stc
popf
pop
lret
xor
xorl
adc
fsubrs
mov
stc
mov
leave
pop
daa
in
into
lret
mov
scas
outsb
push
adc
push
or
dec
or
cmpxchg
bound
out
leave
and
out
push
sbb
scas
dec
dec
leave
push
in
xor
fstl
xchg
adc
test
jo
aam
xchg
cmpsl
in
mov
or
push
nop
xor
lods
das
mov
movsl
lea
daa
cmpsl
adc
das
mov
icebp
out
mov
dec
mov
das
dec
cmpsl
pop
inc
mov
xor
mov
lret
std
inc
sub
fisubrs
dec
aam
std
cmpsb
sub
mov
adc
or
dec
push
test
sbb
mov
das
adc
add
adc
push
scas
dec
pop
ret
cs
in
insl
icebp
push
outsl
mov
popf
stos
mov
test
sbb
popa
pcmpgtd
fucomp
adc
and
mov
imul
cmc
ja
fwait
addr16
jae
repnz
xor
jmp
test
jae
outsb
mov
imul
push
lods
stos
lret
sub
stos
insl
dec
sti
sahf
div
cmpsl
imul
pop
ret
sub
bound
fdivl
xchg
jo
iret
das
test
mov
dec
xchg
jle
jmp
pop
test
add
mov
leave
fldt
das
inc
add
add
scas
lret
cmp
push
test
xchg
mov
movsl
pop
adc
std
pop
sti
mov
outsb
ljmp
inc
add
das
xchg
or
mov
mov
outsb
cmp
push
test
dec
leave
sub
mov
in
adc
into
imul
mov
ds
lea
dec
adc
insl
push
push
out
or
sub
scas
pop
mov
stos
sub
sbb
les
sub
inc
repnz
das
pop
les
adc
fdivrl
scas
scas
rorb
inc
dec
mov
arpl
loope
out
pop
daa
dec
dec
or
mov
mov
loope
test
aaa
popf
mov
data16
lret
bound
arpl
xchg
outsl
stos
leave
addr16
adc
add
mov
out
insl
in
push
mov
or
out
push
push
sub
lcall
or
repnz
es
lods
icebp
shlb
dec
je
jmp
popl
outsb
or
lods
dec
sub
insl
outsl
pop
jl
xchg
sbb
sub
xor
inc
dec
sub
iret
sbb
scas
inc
sub
sub
lods
mov
lea
daa
adc
sub
scas
sbb
scas
inc
lahf
or
or
bnd
xchg
out
insw
incl
pop
stos
xor
push
xlat
pop
push
imul
mov
in
dec
jo
push
push
out
stc
pop
insl
data16
mov
notb
jno
jmp
out
adc
adc
push
pop
xchg
test
adc
dec
movsb
dec
daa
loopne
scas
mov
imul
loop
lods
pop
jae
push
roll
insl
test
rorl
leave
ficoml
lret
repz
xchg
daa
outsb
mov
stc
icebp
int
inc
inc
xor
pop
popf
dec
adc
pop
dec
push
inc
inc
cmpsb
and
xor
or
mov
cmpsl
mov
mov
bound
and
sbb
out
faddl
test
inc
imul
cld
add
js
lcall
fdivl
add
pop
inc
sub
push
jmp
adc
xchg
dec
dec
inc
out
out
adc
dec
inc
pop
fsubr
pop
jbe
dec
sub
cmpsl
iret
cmp
addr16
insl
in
lds
push
nop
lret
xchg
push
adc
push
adc
addr16
cltd
loopne
cld
adc
sub
retw
cmp
xchg
or
hlt
mov
lods
shl
adc
movsb
push
lret
les
in
out
sbb
or
movsb
dec
dec
mov
in
or
ds
sbb
pop
subl
arpl
das
and
mov
ss
mov
lea
xchg
or
aaa
xchg
pop
dec
or
add
dec
jmp
imul
sub
sbb
push
push
dec
mov
dec
das
movsb
or
dec
mov
sbb
xor
xchg
das
daa
push
jmp
pop
push
or
and
test
and
sbb
sub
rolb
and
out
imul
mov
loop
movd
dec
inc
fsubs
lret
sbb
adc
pusha
dec
stc
xchg
mov
mov
fisttps
jmp
lea
fnsave
cmpsl
push
and
pushw
stos
dec
daa
outsl
cmpxchg
insl
adc
jns
out
inc
dec
outsb
sub
lock
pmulhw
jo
push
rol
lret
sbb
pop
sbb
cmpsl
stos
loop
push
dec
sub
jp
mov
adc
adc
jmp
lea
and
jns
jp
popa
push
mov
cltd
es
xchg
pusha
in
mov
or
mov
bound
sub
out
out
mov
loope
mov
jo
add
jmp
pusha
bnd
jmp
lds
jmp
iret
stos
outsb
fidivrs
test
stos
das
ret
daa
mov
in
arpl
dec
test
lret
daa
mov
lret
fwait
scas
sub
or
inc
out
testl
xchg
sub
lcall
jae
popa
sub
xchg
out
lret
ficompl
addr16
push
xor
into
ljmp
dec
dec
adc
out
sub
test
incl
lock
inc
jp
dec
leave
cmpsl
sub
and
scas
pop
inc
out
std
pop
sub
jb
jmp
sub
imul
mov
mov
push
push
or
sub
mov
cmpsb
lods
pop
and
ljmp
push
jmp
or
mov
sbb
out
insb
mov
loop
addr16
arpl
add
sub
push
test
in
outsb
movsl
sub
int
int
and
mov
push
pop
xor
out
dec
cld
je
push
xchg
setb
out
lods
loope
jmp
mov
and
ljmp
lret
imul
aam
fisubrl
pop
sar
mov
outsb
iret
xchg
xchg
dec
sbb
out
leave
sbb
out
testb
int
pusha
test
lds
xchg
stos
nop
lret
das
mov
imul
outsl
push
add
mov
dec
out
mov
dec
and
jae
int
inc
pop
scas
out
xor
inc
inc
scas
outsl
out
aam
push
sub
adc
in
imul
adc
repnz
addb
jnp
test
stos
sub
and
scas
dec
out
orl
sub
stc
adcl
mov
cs
loope
lods
outsb
push
loope
jmp
sahf
jle
btc
imul
inc
lods
arpl
sub
pusha
test
sbb
adc
jmp
lret
jbe
inc
mov
sbb
cmp
sarb
insb
xchg
inc
pop
leave
addr16
add
into
daa
mov
popa
cld
in
scas
daa
pop
dec
es
mov
mov
pop
mov
in
push
fwait
pop
cmp
test
xchg
lds
adc
imul
mov
scas
push
sub
ret
adc
out
adc
jg
shll
jl
into
sub
std
pusha
jmp
sub
jecxz
out
arpl
movsb
jecxz
sub
insl
dec
leave
jmp
sub
mov
or
orl
push
test
jecxz
pop
or
push
pop
dec
lahf
mov
mov
adc
mov
jmp
stos
mov
mov
cmp
mov
into
out
jmp
adc
daa
dec
dec
outsl
lds
in
sub
lods
xchg
xchg
subb
mov
jns
push
dec
pop
sbb
sub
data16
mov
mov
sub
stos
loop
into
mov
mov
fucomp
push
and
rcl
popf
stos
cmp
sub
outsb
jg
sub
dec
stos
lods
xchg
sub
leave
movsb
out
mov
mov
push
dec
ret
jmp
xchg
movsb
jo
nop
jmp
sub
mov
push
xchg
or
dec
cmc
jae
test
inc
mov
push
push
or
fsubp
das
dec
stos
jg
test
sbb
pusha
test
inc
dec
int3
fwait
mov
mov
xchg
stos
test
sub
jmp
add
aam
xor
mov
dec
scas
icebp
stos
lret
ds
fcoms
adc
jge
lea
lahf
or
out
mov
adc
or
or
or
and
in
shr
xchg
add
pop
insb
pop
daa
in
sbb
inc
pop
xchg
lods
insl
push
roll
xchg
orl
dec
xchg
jle
stc
jno
call
sub
in
sub
or
insl
jnp
orl
out
sub
fsub
cmpsl
iret
addr16
dec
dec
insl
push
daa
aam
sbb
xchg
mov
sbb
lret
xor
les
lret
sub
push
xchg
fcmovne
repz
sub
dec
dec
jmp
outsb
lea
scas
mov
out
and
cld
or
int3
cltd
out
divb
rorb
loope
out
inc
or
out
sub
insl
or
sub
pop
mov
imul
and
daa
lret
or
or
ljmp
push
arpl
dec
sub
or
dec
bound
adc
stos
bound
mov
cmc
stos
pop
jmp
in
jne
dec
jg
cld
inc
leave
sub
xchg
add
xchg
test
ret
xchg
ret
fisubrl
or
in
inc
imul
mov
adc
or
push
dec
xchg
out
adc
mov
inc
dec
lret
mov
mov
aam
stos
dec
fdivs
mov
sbb
xchg
loopne
out
mov
pop
inc
or
xchg
je
loopne
repz
lret
push
push
scas
dec
sub
scas
adc
mov
dec
or
in
dec
sbb
out
push
dec
xchg
bound
nop
xor
push
stos
or
dec
fmul
xchg
mov
imul
jp
cs
dec
sub
insl
sub
push
add
xor
jb
inc
les
lods
fsubl
test
and
imul
adc
into
sub
fnstsw
jmp
dec
or
dec
jne
int
mov
lea
xchg
mov
push
xchg
push
icebp
add
ljmp
mov
aas
dec
mov
mov
loopne
iret
ret
orl
out
leave
dec
in
mov
xchg
pop
sub
inc
ret
mov
xchg
xchg
lret
jge
pop
iret
sub
xor
inc
sbb
comiss
lds
nop
xchg
pop
xchg
pcmpgtd
cmpsl
lcall
lahf
mov
inc
sub
cs
jb
enter
dec
stc
pusha
outsb
out
inc
jmp
sub
xchg
shll
ds
xchg
adc
dec
out
adc
push
fnop
mov
push
daa
dec
cmp
test
fwait
scas
mov
inc
sbb
mov
xchg
ret
xchg
inc
or
rorb
inc
ljmp
lret
repnz
xchg
out
cmc
imul
fwait
clc
mov
jle
push
sub
pop
lock
stos
insl
ljmp
fisttps
inc
xchg
and
add
lds
and
mov
adc
mov
dec
mov
outsl
sbb
pminsw
dec
and
out
arpl
mov
cmp
imul
cmc
and
adc
xor
or
add
cwtl
jno
in
lods
jns
in
sub
daa
int
inc
das
dec
sbb
leave
jns
sub
imul
addr16
xlat
lret
popa
dec
sub
ret
adc
xchg
jmp
in
xor
into
cli
leave
test
push
out
mov
cmc
test
lahf
lret
mov
push
outsl
pop
adc
outsb
mov
pop
sbb
jmp
iret
jbe
xchg
jbe
jmp
imul
push
sub
or
sub
into
or
outsl
dec
adc
adc
sub
test
mov
gs
mov
in
imul
dec
pop
scas
jns
adc
daa
or
iret
sub
test
jmp
dec
push
loopne
das
adc
sub
iret
dec
outsl
and
and
and
scas
xor
mov
aas
fsubrs
iret
jmp
out
mov
out
inc
jge
in
dec
filds
push
sub
popf
data16
push
insl
inc
das
jmp
bound
cmp
cmpsl
jbe
fldpi
lahf
push
inc
inc
sub
push
in
mov
stos
roll
sbb
movsl
outsl
adc
mov
lahf
outsb
cs
iret
ret
dec
or
leave
lods
insl
inc
inc
in
sub
push
push
mov
fmul
mov
daa
ret
push
movsl
sub
pop
lock
push
and
pop
sub
jo
mov
int
mov
test
lods
scas
les
lds
sub
or
in
daa
les
push
dec
nop
mov
adc
imul
mov
jl
xchg
dec
or
inc
stos
outsl
lret
push
add
outsb
scas
sub
push
or
hlt
or
mov
clc
pop
sub
xor
jb
or
sub
aam
push
in
dec
iret
inc
push
xor
daa
jmp
stc
xchg
dec
popl
inc
sub
fs
fnstsw
jmp
dec
lds
cmp
scas
stos
pushf
sahf
je
dec
lods
mov
data16
ret
imul
lock
mov
mov
data16
sub
dec
push
enter
das
iret
sub
iret
icebp
fidivrl
jb
cmp
stc
out
push
movsb
sub
mov
pop
testb
dec
adc
mov
insb
aas
sbb
dec
bound
dec
scas
loop
sub
imul
xchg
inc
jmp
sbb
jmp
scas
out
addr16
nopl
dec
xor
lret
pop
js
xor
std
pop
iret
imul
leave
test
pop
nop
push
pop
cld
adc
or
pop
dec
dec
test
sub
xchg
leave
into
sub
icebp
jne
mov
test
jne
cmp
stos
mov
fwait
orl
pop
mov
dec
pusha
das
or
daa
adc
rorl
call
stos
imul
cmpsl
mov
mov
sbb
dec
in
out
pushf
sub
adc
and
xchg
push
pusha
lret
clc
cmovnp
sub
ljmp
add
dec
pop
xor
popf
pop
push
adc
dec
imul
ljmp
mov
or
addr16
insb
jne
dec
jmp
in
pop
iret
push
cld
shr
xor
scas
xor
in
loop
fcmovnb
popf
std
cs
sahf
jmp
rorl
das
test
or
fisttpll
test
cmovae
int
jle
cmp
sub
jle
pop
iret
or
das
dec
xchg
ss
xchg
lret
sub
fmuls
retw
mov
inc
imul
sub
stos
daa
test
push
das
inc
jp
inc
test
stos
in
out
sbb
sbb
test
mov
sub
mov
cs
cmp
mov
mov
inc
sub
inc
shl
into
out
mov
fmull
pop
daa
arpl
inc
ja
push
ljmp
insb
adc
push
mov
iret
stos
test
sub
hlt
daa
int3
adc
out
xchg
test
lds
out
dec
cs
das
scas
jmp
mov
mov
ret
and
xor
push
add
scas
iret
mov
xor
adc
pop
dec
dec
cltd
sub
outsl
sub
nop
mov
xchg
jo
jp
or
adc
pop
or
jbe
lahf
pop
out
sub
or
push
or
dec
cmpsl
in
hlt
iret
ljmp
xchg
push
fistl
testb
mov
insl
jmp
push
dec
xchg
movsb
cmpsl
mov
out
cwtl
add
or
push
pop
mov
push
lea
lds
leave
adc
jp
int
add
lret
xor
add
mov
addr16
iret
outsl
push
lods
jnp
test
pop
out
popl
dec
cmovns
pop
add
adc
jmp
sub
xchg
sti
ret
into
scas
push
sbb
mov
cmp
jne
xor
push
imul
push
cs
sahf
sbb
test
xchg
mov
add
sbb
push
ror
mov
in
cltd
fadd
xor
test
test
std
adc
push
sbb
jne
mov
jmp
daa
push
push
pop
sub
xor
or
shrb
into
xor
orb
out
pop
inc
out
int
jmp
dec
lea
test
add
nop
and
mov
lret
xchg
sbb
dec
stos
ret
ret
inc
push
sbbl
lcall
xchg
or
mov
cmp
test
iret
das
xor
mov
shlb
das
adc
mov
mov
or
pusha
popa
cmp
mov
push
stos
arpl
outsl
pop
les
xor
dec
sbb
adc
dec
cmpsl
adc
in
mov
pop
inc
or
popf
insl
or
xchg
or
and
arpl
dec
dec
push
push
push
shlb
dec
lret
out
out
jmp
pop
test
dec
jno
scas
mov
int
jmp
int3
fwait
sub
and
lock
rcll
mov
lcall
xor
bswap
mov
mov
or
sub
mov
or
popf
in
scas
or
pop
sub
xchg
insl
push
mov
jae
dec
or
insl
cmp
lea
fmulp
jne
and
dec
mov
xchg
xor
dec
jae
fiadds
push
addr16
pop
fldcw
xchg
fwait
push
in
sbb
cmpsl
fsqrt
in
punpckhwd
xchg
out
popf
out
xor
insl
sub
or
adc
dec
or
pop
adc
mov
ljmp
dec
shll
movsb
lds
lods
xor
lcall
ret
mov
push
pusha
jecxz
mov
ljmp
cli
popa
in
push
jmp
insl
test
or
or
cltd
dec
pop
scas
inc
pop
or
arpl
mov
repnz
icebp
push
daa
adc
xchg
sub
or
sub
xchg
jns
xor
pop
addb
outsl
daa
dec
dec
sub
lea
in
dec
imul
pop
xchg
imul
push
cs
and
sub
dec
out
or
outsb
mov
xchg
ret
aam
inc
lret
xlat
jbe
lds
loopne
ret
imul
dec
sub
inc
mov
fucomp
cmp
dec
out
jmp
xchg
cmp
sbb
insl
xchg
lret
out
jge
orb
addr16
adc
adc
pop
clc
jecxz
or
leave
shrl
sete
sub
mov
in
out
jns
mov
testl
inc
mov
lods
cmpsl
cs
arpl
pop
xor
jmp
daa
leave
xor
retw
mov
sub
mov
dec
loopne
rolb
xor
sub
arpl
mov
jns
sbb
dec
jp
jo
iret
lret
xlat
lret
lea
inc
in
dec
imul
cmp
aad
or
mov
cmp
or
dec
aad
stos
mov
dec
int
loop
adc
into
mov
lret
cmpsb
outsb
pop
and
sub
test
lahf
cmpsb
lahf
mov
and
into
leave
push
in
jmp
jmp
in
loop
and
movsl
or
mov
fsub
push
scas
iret
cmp
leave
adc
or
lea
jno
das
push
outsl
sarb
mov
orl
movsb
cmpsl
dec
movl
out
or
sub
push
fsubrs
xchg
inc
ret
lcall
das
jmp
ret
lret
test
aad
test
arpl
loopne
dec
cmpsl
stos
stc
lea
mov
imul
sub
lcall
adc
dec
dec
adc
int
leave
pop
or
xor
mov
sub
ljmp
sub
imul
dec
cld
lret
les
cmp
cmpb
or
push
lea
cmpsl
addb
out
outsl
data16
sub
ret
das
mov
mov
popa
or
loop
lea
pop
ja
cmp
mov
mov
pop
mov
mov
jnp
das
push
sub
iret
and
jmp
das
mov
add
hlt
and
pop
iret
pop
scas
shrb
mov
inc
pop
sub
out
data16
or
and
das
sbbb
into
pusha
or
test
icebp
subb
jmp
icebp
and
xchg
les
fisubrl
lods
or
xor
shrl
scas
mov
dec
insl
stos
dec
in
rorl
cli
adc
or
imul
popf
push
mov
fsubrl
sub
cli
jne
dec
fwait
jle
jo
jmp
xchg
jne
inc
push
bound
sub
xor
dec
pop
lods
ljmp
sub
push
test
and
lretw
fisubrl
sub
mov
je
outsb
adc
call
adc
dec
idivb
imul
movsb
mov
pop
out
into
mov
jge
mov
in
xchg
push
add
jmp
bound
or
xor
repz
lret
outsl
out
lahf
out
xchg
test
or
sub
adc
or
sub
dec
repnz
int
leave
ret
sub
ljmp
in
sub
orl
arpl
loope
daa
in
mull
cs
repz
lret
cli
lods
xor
xchg
xchg
xchg
ret
daa
arpl
jns
or
mov
pop
dec
sub
popf
lods
mov
pop
movhps
call
imul
iret
decl
icebp
and
add
and
lret
or
lahf
pop
sub
cld
dec
inc
xchg
stos
into
sub
fcoms
in
mov
jmp
inc
leave
pop
ret
mov
pusha
xchg
fidivrl
cmpsb
sub
mov
adc
imul
loop
cmpsl
mov
and
in
dec
stos
or
mov
or
push
cmp
in
and
adc
test
dec
dec
pop
out
pop
dec
mov
das
movsb
scas
add
or
sahf
aaa
push
in
xchg
cmovae
popa
shrb
test
sbb
sti
pop
mov
jle
lret
bound
mov
icebp
mov
dec
stos
in
or
mov
sub
mov
adc
xor
dec
das
dec
sbb
sub
cmpsb
sub
cli
pop
orl
mov
jae
sub
sub
adc
adc
dec
mov
aas
int
or
xor
movsl
mov
dec
xchg
int
jbe
or
xchg
stos
in
scas
xchg
outsl
iret
sbb
pop
and
mov
add
push
sahf
sti
sub
daa
outsl
sbbl
jle
repz
fwait
andl
out
scas
dec
jecxz
ret
xor
push
pop
setnp
adc
movsb
ret
jmp
jne
insl
inc
pusha
arpl
movsl
int
scas
xor
test
imulb
cld
fcmovne
push
push
test
inc
inc
jmp
dec
dec
shrb
add
ljmp
adc
enter
aad
xor
leave
dec
xor
out
pop
jbe
popa
push
push
out
scas
pop
scas
mov
scas
sub
adc
insl
into
jmp
inc
push
sbb
sub
push
seto
xor
mov
sub
rorb
jecxz
cmovns
adc
sub
adc
dec
lret
inc
sub
mov
mov
jp
sub
add
scas
mov
imul
lcall
ret
ljmp
test
or
into
lds
outsl
mov
or
test
dec
stc
or
insl
pop
into
stos
mov
cmp
dec
jg
jp
lcall
insl
mov
sub
rcll
lret
xchg
dec
pushf
inc
daa
loop
dec
loopne
sub
stos
out
or
lret
ja
ret
jns
sub
mov
adc
addr16
jg
or
mov
cs
repz
pop
das
iret
fiaddl
repz
lret
test
push
int
cwtl
mov
cmp
leave
insl
xchg
clc
sbb
imul
insl
push
test
push
lods
adc
mov
or
add
lret
mov
xchg
js
test
fsubs
outsl
ret
jne
imul
xchg
imul
out
stos
out
out
rolb
or
adc
pop
in
lea
cmp
cmpsl
out
gs
scas
loop
iret
ljmp
mov
jmp
leave
fisttps
sbb
out
lret
lahf
or
mov
jecxz
cmpsl
test
sbb
pusha
lods
lret
scas
jns
cs
xlat
icebp
mov
push
shrb
sub
or
jmp
testb
cmp
sub
test
out
dec
adc
pop
ret
sub
das
jb
lahf
fisubrs
outsl
push
fdivl
push
dec
std
lds
test
test
scas
rorb
imul
fwait
out
mov
outsl
push
mov
lret
pop
add
test
mov
push
ret
adc
outsl
sub
lds
loope
or
rclb
jle
out
cmovp
out
adc
pusha
ret
sub
daa
lods
imul
sub
dec
adc
mov
push
mov
imul
scas
rcrl
test
sub
xor
pop
push
fisttpl
push
int
shrl
daa
mov
cmpsl
inc
jl
ret
or
jns
ret
push
xor
xchg
lods
or
adc
out
sub
cmc
es
pop
std
xor
pop
dec
out
loope
stos
or
stos
mov
icebp
push
ja
pslld
addr16
push
push
jno
jecxz
insl
ljmp
arpl
lock
fwait
push
mov
sub
mov
inc
push
push
or
push
imull
outsb
dec
xor
mov
rorl
dec
outsb
das
lea
or
jnp
aam
stos
je
and
andl
add
lds
lds
icebp
sbb
loop
scas
mov
js
push
fimull
xor
paddd
stos
in
dec
sub
sub
mov
scas
xorl
out
retw
or
dec
pop
int
inc
lret
loope
scas
push
cs
mov
sub
mov
or
sub
pop
or
push
ljmp
cmc
xchg
dec
les
pop
mov
lea
push
ljmp
push
pop
inc
lret
inc
sub
xchg
mov
cs
add
or
mov
mov
leave
scas
lret
push
icebp
xchg
push
out
cmp
int3
dec
and
pop
sbb
adc
cmpsl
lret
xchg
xor
push
pushf
push
xchg
add
nop
sub
dec
shrb
jb
ds
setge
or
mov
pop
out
femms
jmp
mov
adc
xchg
out
stos
add
dec
sub
xchg
cs
ret
dec
sub
and
dec
out
cwtl
push
or
popa
mov
mov
cld
mov
lea
lret
imul
jns
jmp
mov
mov
iret
mov
pop
add
cmc
add
es
xchg
mov
push
dec
decl
mov
or
das
fldt
dec
outsb
push
out
stos
cwtl
mov
lahf
mov
or
rorb
dec
iret
adc
mov
popf
and
or
inc
push
ud2
cmpsl
lods
jge
ret
insl
jmp
movsb
sbb
mov
pop
adc
out
or
and
pushf
ljmp
dec
popf
testl
shr
xchg
lahf
adc
hlt
or
dec
sub
jecxz
dec
pop
out
sub
subl
rorb
cmp
lahf
out
dec
mov
cmp
stos
fidivl
fmull
mov
popa
xchg
icebp
imul
mov
adc
push
lods
dec
push
and
xchg
faddl
sub
test
repz
aaa
cli
call
sub
mov
jns
imul
lods
dec
and
sarb
and
iret
cmp
imul
jbe
imul
pop
mov
notl
push
std
daa
mov
ja
lret
or
das
pop
push
dec
fisttpl
popf
jmp
filds
inc
xchg
cmp
push
pop
sub
stos
das
cmpsb
or
imul
leave
or
dec
dec
lcall
stos
jmp
and
outsb
jb
inc
daa
push
fs
stos
adc
popa
mov
test
rcrb
jne
dec
push
inc
dec
stos
pop
xchg
dec
rorb
sbb
dec
mov
fmuls
dec
lea
scas
push
mov
dec
mov
inc
cvtps2pi
dec
pop
or
mov
clc
dec
aam
fisubl
or
xor
mov
scas
outsb
sbb
push
testl
jmp
xor
dec
pmaxsw
ret
sub
xor
imul
sub
mov
push
mov
fwait
ret
in
lcall
pop
mov
jle
cli
sub
mov
cmc
jns
test
cmp
arpl
xor
jmp
repnz
test
out
aad
push
sub
inc
cs
sub
jmp
lret
or
cmpsl
imul
jns
jns
sub
sub
out
or
dec
dec
in
fsubrl
push
outsb
mov
lods
push
dec
cs
jp
xor
nop
test
adc
outsb
insl
push
cmovae
mov
or
ret
or
or
push
dec
js
sti
ja
cld
cld
inc
js
jmp
sub
cld
je
mov
cwtl
pop
scas
pop
xchg
out
adc
and
sub
outsl
out
jmp
push
push
out
mov
or
pop
bound
shlb
and
data16
pop
xchg
test
jecxz
out
iret
and
sbb
addr16
jge
and
outsl
int3
lods
adc
lea
popa
dec
jmp
leave
mov
loop
sub
jmp
stos
fisubrs
dec
add
or
mov
dec
stc
adc
cmpsb
or
cmpsl
pop
movsb
in
popl
ja
sub
inc
or
in
dec
or
push
lea
imul
sub
fldl
sbb
sub
test
popf
rol
sbb
sbbb
or
adc
sub
xor
inc
or
push
dec
xchg
pop
arpl
sub
pop
xchg
out
sbb
adc
in
movsl
mov
cld
daa
pop
sti
sbb
ljmp
dec
inc
pop
push
xchg
jp
mov
out
sub
jo
push
sarl
mov
lea
adc
jmp
and
pop
jne
mov
lds
pop
int
sbb
scas
mov
sub
sub
and
stos
sub
addr16
inc
jbe
lods
adc
mov
insl
or
or
dec
xlat
mov
nop
movsb
dec
inc
sub
pop
cmpsl
lahf
mov
sub
lea
push
jge
test
dec
mov
iret
dec
xor
cmc
out
inc
fcompl
mov
das
adc
add
pop
inc
in
mov
imul
push
mov
ds
daa
inc
out
xor
test
data16
inc
ret
movsl
jmp
xor
pop
int
sti
movb
aas
push
pop
mov
in
inc
inc
out
dec
test
das
push
jmp
cmp
das
sub
or
lods
push
lret
test
movsl
add
ja
inc
in
jecxz
fwait
jg
adc
arpl
nop
mov
lock
daa
dec
flds
and
xor
xor
sub
daa
xor
or
sub
mov
cmpsl
push
push
add
inc
test
mov
mov
comiss
dec
dec
bnd
lret
aas
xor
xchg
sbb
inc
out
out
sbb
adc
push
lea
sbb
dec
fisttpll
mov
cmpsb
and
insl
dec
adc
imul
and
ljmp
push
pusha
mov
insb
movsl
or
jmp
in
cmpsb
nop
pop
dec
fmul
orl
jno
das
inc
fldenv
pop
mov
stc
mov
fisubrl
pop
ljmp
leave
mov
das
inc
daa
add
das
es
mov
das
sub
adc
insl
push
push
in
jns
lods
sbb
dec
push
pusha
sub
mov
xor
cltd
je
stc
mov
scas
stos
js
ret
lods
out
mov
sub
mov
jae
xor
mov
jnp
insl
or
popa
out
stos
dec
into
or
cmpb
dec
and
ret
popa
cmp
adc
call
pusha
mov
push
dec
ljmp
sub
xchg
sub
daa
sahf
adc
ret
sub
pop
mov
stc
inc
adc
popa
out
data16
bound
cmovle
iret
imul
das
ljmp
in
out
idiv
adc
xchg
inc
push
mov
inc
iret
popf
popl
xchg
add
repnz
ljmp
xchg
call
test
test
scas
in
xchg
icebp
add
sub
ljmp
sub
mov
adc
das
sub
or
xchg
and
dec
call
outsl
pop
pop
inc
mov
lea
aaa
imul
sub
aas
lock
orb
insl
sub
add
and
mov
mov
mov
dec
or
push
inc
stos
mov
icebp
sub
push
aaa
mov
xchg
scas
or
mov
scas
dec
jg
out
pop
add
xchg
loope
cs
repnz
mov
cs
enter
xchg
xor
lret
adc
out
int
iret
pop
mov
dec
dec
adc
push
xchg
rcrl
push
ds
daa
mov
sub
xchg
outsl
dec
mov
mov
js
inc
pop
cltd
adc
loope
daa
xchg
xchg
shll
sahf
push
loope
mov
sbb
stos
sub
dec
inc
shlb
pushf
inc
push
int
or
push
push
loope
cmpsl
daa
stos
insl
dec
jo
imul
inc
call
pop
lock
mov
or
adc
iret
lret
stos
aas
lahf
adc
pop
lea
inc
cs
push
outsb
loope
sub
testb
pop
or
fisttpll
scas
push
insl
aaa
cld
int
pop
pop
push
dec
iret
jecxz
adc
aam
enter
push
mov
popf
push
roll
stos
mov
lret
cmp
insl
inc
jl
mov
clc
loope
dec
out
inc
out
pop
jge
mov
lret
sub
jmp
mov
cld
mov
push
imul
add
outsb
leave
xor
imul
xchg
test
sub
sub
push
shrb
push
sub
xchg
push
push
ret
or
shll
sub
fimuls
xor
and
or
lahf
jmp
dec
sub
shr
outsl
das
scas
dec
add
xchg
sub
roll
mov
out
inc
jl
pop
add
dec
leave
clc
jns
mov
jnp
sti
insl
stos
push
into
sub
imul
fucomi
test
loopne
cltd
ret
xor
out
pusha
stos
xor
lods
dec
iret
cmpb
xor
loope
insl
or
add
and
cmpxchg
adc
jecxz
pop
fs
adc
xchg
aam
mov
stc
push
and
mov
jge
push
push
or
sbb
scas
inc
dec
mov
dec
sar
mov
xor
lea
imul
in
push
mov
xor
mov
aas
lret
addr16
outsb
imul
arpl
dec
xor
sbb
bound
xchg
xor
mov
test
cs
and
lock
pop
into
mov
jne
lahf
or
jns
mov
leave
sub
xchg
rorb
cmpsl
push
add
pop
arpl
outsb
add
iret
stos
das
bswap
in
xor
scas
push
sub
cmpsl
outsl
subl
arpl
arpl
flds
sub
mov
imul
ljmp
test
inc
dec
mov
flds
rorb
lret
aas
call
lcall
jge
das
dec
daa
ljmp
jnp
fsub
and
inc
ror
sub
rorb
outsb
mov
stos
jmp
mov
insl
xchg
in
movsb
das
xchg
mov
shrb
jmp
cmp
xchg
sub
call
enter
stos
mov
xchg
out
and
or
adc
push
pop
or
cmpsl
xchg
outsl
mov
mov
or
sbb
ror
mov
lds
repz
and
stos
popa
lret
stos
dec
ret
shll
loop
jno
or
std
mov
arpl
pop
dec
out
mov
gs
in
mov
lods
lea
aas
iret
push
and
sub
insl
mov
pop
lret
les
arpl
pop
and
push
lret
popf
mov
xorb
sub
mov
cmpsl
out
mov
dec
or
xor
lea
xor
stos
push
and
imul
dec
testl
lds
add
das
adc
push
dec
mov
rorw
movsb
nop
dec
mov
sub
scas
jmp
cmp
dec
call
int
push
sub
push
push
cmp
clc
pop
or
or
mov
sahf
sub
mov
xor
jge
push
leave
ljmp
cmp
add
lcall
adc
or
or
loope
cs
pusha
aad
jecxz
movsb
jb
inc
push
sub
cs
and
or
jmp
jno
dec
sub
inc
dec
movl
les
loopne
mov
dec
pop
mov
sbb
or
mov
ret
pop
sub
dec
pop
pop
dec
test
test
dec
int
jmp
fwait
or
out
inc
mov
lret
into
mov
sub
stos
push
xchg
push
outsl
mov
jmp
sub
mov
mov
shl
scas
out
or
data16
xchg
or
or
cs
inc
pop
movswl
in
or
push
loopne
std
or
repz
insl
pop
sti
sub
dec
or
loope
mov
es
imul
cmpsb
rcl
xchg
stos
pop
ds
roll
mov
mov
inc
rorl
xor
cmp
lea
into
xor
add
rorl
ljmp
xchg
pushf
out
adc
scas
add
xchg
xchg
stc
sbb
dec
scas
and
pop
dec
shr
movsl
dec
adc
and
das
out
xchg
fucomip
cmp
sub
adc
adc
lods
scas
imul
xchg
icebp
adc
dec
inc
sub
test
add
inc
jb
stos
int
and
push
scas
cmp
sub
subb
aaa
or
lds
sarb
lea
inc
adc
addr16
xor
or
and
push
outsb
loope
out
push
out
jge
or
ret
push
scas
sbb
ret
ljmp
mov
imul
mov
cs
mov
sbb
jnp
outsb
jle
out
cmc
adc
adc
pop
dec
mov
dec
push
inc
das
das
sub
dec
out
sub
add
cwtl
mov
mov
out
das
mov
outsb
inc
push
stos
lcall
adc
lret
add
daa
dec
bound
cmpsl
inc
subb
lret
jmp
stos
into
inc
idivb
mov
dec
xor
adc
and
mov
push
mov
inc
addr16
out
xchg
leave
rorb
fwait
lea
xchg
dec
jmp
xchg
sub
and
inc
bound
lret
xchg
popa
mov
jp
or
scas
dec
popf
cs
data16
dec
in
inc
pop
call
pop
stc
scas
mov
xor
push
push
inc
pop
in
mov
cmpsl
jbe
pusha
daa
sahf
dec
scas
scas
push
movb
mov
sbb
inc
dec
in
pop
int3
xchg
mov
aad
into
dec
popf
xor
scas
arpl
cld
mov
push
adc
push
or
stc
or
inc
sub
leave
sub
fsubp
ret
imul
mov
xchg
das
sub
enter
mov
xor
iret
xor
mov
dec
lret
iret
lods
jno
mov
dec
fiaddl
push
dec
mov
out
cmp
addr16
dec
sbb
jno
iret
lret
sub
fmuls
dec
xor
das
sub
shlb
addr16
loope
dec
sub
repnz
xor
sahf
mov
pop
inc
in
int
cmp
adc
sub
sbb
daa
imul
sbb
loopne
jmp
lret
stos
jecxz
pop
dec
shrl
imul
das
test
sub
lea
scas
jmp
xor
cwtl
sti
lds
push
cmpsw
daa
imul
jmp
xchg
addb
icebp
mov
lret
stc
test
nop
hlt
sub
clc
or
inc
mov
cmc
push
hlt
scas
sub
mov
push
pop
lret
push
sbb
add
jg
dec
push
inc
pcmpgtw
inc
das
pop
into
in
lea
xor
pop
leave
add
adc
lret
push
cmp
dec
arpl
das
sbb
cmc
mov
and
out
iret
imul
sbb
mov
in
rorb
clc
jnp
arpl
and
xchg
shll
adc
mov
imul
sub
push
fldt
sbb
jmp
daa
dec
dec
addr16
and
lea
aam
xchg
xor
and
inc
pusha
sub
mov
in
push
or
nop
and
lret
out
leave
sub
outsl
out
pop
nop
mov
out
and
cmpsl
fsubp
lret
push
sbb
and
mov
jmp
pop
test
out
fcompl
call
test
imul
sub
dec
int3
dec
push
test
outsb
test
dec
insl
xor
sub
inc
test
subb
push
sbb
or
jns
push
sbb
push
dec
scas
sub
push
out
scas
dec
jmp
outsb
xchg
daa
lahf
push
or
dec
mov
incl
sbb
dec
lea
sub
inc
push
inc
pop
sub
dec
push
mov
nop
in
into
and
scas
inc
test
mov
or
addr16
sub
mov
cs
adc
cmc
mov
sub
aad
xor
and
out
jecxz
pushf
jmp
orl
dec
jae
sbb
les
add
jecxz
xor
inc
push
popf
sub
aaa
inc
scas
pop
cmpsb
leave
jecxz
imul
xchg
subb
lret
and
addr16
sub
outsl
test
ds
pop
rolb
loope
or
scas
sub
lock
mov
dec
push
adc
pop
mov
dec
and
inc
cmpsb
popa
xchg
dec
sub
in
add
push
insl
test
fidivrl
dec
scas
or
dec
in
insl
daa
cltd
pop
inc
leave
sbb
mov
mov
inc
dec
out
xor
sub
mov
cmp
xchg
push
xchg
in
frstor
in
adc
xchg
insl
scas
adc
pop
movsl
sahf
adc
and
out
lock
imul
loopne
jle
sbb
dec
sbb
repz
cltd
jle
rcr
mov
mov
test
and
mov
sub
push
sub
iret
shl
adc
xchg
inc
xor
xchg
lods
int3
jp
mov
sub
cmpl
cmpsl
sub
shlb
lods
das
adc
out
push
into
or
and
imul
push
mov
sbb
and
vpcomuw
cmp
mov
sub
or
dec
push
pop
cli
mov
std
rcrb
bound
mov
or
xchg
dec
imul
pop
mov
shl
ljmp
or
fwait
outsb
insl
or
sub
dec
pop
daa
rorl
test
cmp
repnz
pop
movsb
jmp
push
dec
push
pop
sub
mov
push
add
das
int
jns
out
mov
scas
sub
lahf
in
test
jecxz
sub
aaa
das
in
jge
pop
int
jmp
jge
or
arpl
stos
or
daa
scas
dec
ret
sbbl
sub
fwait
scas
pop
adc
push
push
mov
and
or
mov
scas
or
xchg
mov
out
xchg
push
aas
push
or
inc
iret
scas
ljmp
jecxz
loope
data16
in
sub
out
inc
jg
out
sub
int
outsl
out
sub
movsb
rol
int3
ret
pop
movsl
push
lods
fcoml
push
or
mov
jbe
mov
adc
dec
fwait
jmp
movb
cmpsl
scas
clc
loop
scas
xchg
dec
lret
test
repz
test
xor
push
cmc
push
scas
cmp
hlt
push
sub
xor
jmp
dec
call
mov
xchg
dec
jmp
into
subl
push
xlat
pop
movsl
mov
jmp
stc
fcmovu
pop
out
ficoml
rcl
outsl
jecxz
dec
or
insl
or
imul
or
lret
mov
mov
and
shlb
stc
add
lea
push
outsb
sub
and
push
xchg
pop
pop
sarb
outsl
imul
pop
testb
das
out
subl
dec
adc
leave
ja
xor
cs
scas
push
adc
pop
out
movsl
iret
dec
popa
adc
ds
rolb
sub
outsl
out
adc
fwait
sbb
or
push
push
dec
orl
jp
mov
mov
cs
imul
xorl
xor
pminub
dec
mov
pusha
mov
imul
or
mov
out
jg
xchg
adc
sub
insl
cs
add
push
fwait
adc
or
out
lea
int
pushf
or
adc
adc
mov
mov
out
jmp
stc
xchg
test
aad
stos
push
push
or
dec
pop
sbb
lret
or
imul
mov
arpl
mov
int
mov
mov
dec
out
pop
inc
mov
push
inc
cmp
sub
lods
or
scas
dec
shl
stos
and
arpl
fcomi
call
jge
xchg
icebp
xchg
es
sub
ljmp
or
mov
xor
dec
insl
or
sub
adc
rolb
lret
sub
pop
ret
adc
cmp
into
push
xchg
push
iret
dec
xchg
ret
int
stos
bound
dec
mov
ljmp
data16
dec
jecxz
and
inc
shll
cmovge
ljmp
and
cmpsb
sub
jmp
xor
popf
or
or
sub
cmp
and
leave
jecxz
imul
sahf
or
shl
push
adc
sub
outsb
dec
fbld
mov
cmp
mov
insb
inc
and
stos
ret
iret
repz
cmp
pop
dec
sbb
push
enter
cld
xor
sub
inc
inc
popa
cltd
mov
dec
mov
and
pop
add
dec
xor
mov
cmc
in
dec
or
mov
rol
sub
test
sub
js
push
mov
sbb
cmpsb
mov
daa
fmull
lea
imul
dec
adc
or
push
and
lods
subl
push
or
sub
and
loop
out
push
inc
out
daa
mov
sub
data16
imul
in
rcl
ret
ds
jmp
mov
lret
movsb
dec
ficomps
cmpsl
sahf
push
sub
mov
push
and
dec
insl
xor
pop
sahf
xchg
loope
dec
cs
dec
cmpsl
pop
ss
pushf
jne
popf
inc
pop
jmp
or
mov
or
fdivl
xchg
or
and
out
int3
inc
mov
mov
daa
loopne
insb
imul
mov
fadd
jns
pop
push
mov
cmpsl
and
adc
stos
mov
and
or
outsl
insl
jne
clc
testl
push
xchg
inc
sbb
ja
or
mov
mov
das
imul
imul
xchg
pop
jecxz
pop
inc
inc
jmp
sub
out
out
pop
add
lahf
ret
lea
ret
push
dec
push
clc
add
sti
pop
xor
sub
out
sbb
mov
aam
cs
pop
faddl
xchg
and
jecxz
push
xchg
inc
les
int
jmp
int3
mov
fistl
xor
addr16
adc
dec
sub
sub
jg
scas
and
inc
sub
sub
movq
ljmp
adc
or
cld
cmpsb
dec
sbb
mov
fmuls
jmp
pop
les
or
lds
xchg
add
dec
stc
push
dec
ds
cmc
in
dec
int
jmp
xor
leave
daa
ljmp
dec
adc
dec
ss
outsb
cmpsl
test
jecxz
jbe
adc
cltd
mov
sti
mov
incl
int3
dec
test
mov
in
fmull
lahf
xor
dec
ret
outsl
cltd
inc
adc
lds
mov
xchg
daa
cmpsl
adc
imul
call
sbb
pop
scas
mov
adc
push
lea
sub
into
cltd
push
xorl
mov
xor
mov
das
push
pop
xor
sbb
dec
out
pop
mov
sub
lcall
dec
iret
inc
shr
imul
dec
stos
sub
pop
scas
out
or
jmp
aad
data16
mov
dec
xchg
xchg
sbb
xchg
ret
cmpsb
cmp
imul
inc
cs
mov
cmp
iret
imul
mov
sti
xchg
pop
cld
mov
cmpsl
jbe
mov
cmpsl
xchg
add
leave
outsl
mov
ljmp
lea
jae
rcl
imul
in
add
mov
outsb
out
push
incb
scas
dec
insl
xor
mov
imul
inc
pop
push
jmp
mov
add
mov
dec
add
jmp
repnz
out
ret
cs
mov
dec
fwait
push
mov
push
fstl
sub
push
mov
rol
push
push
xchg
out
mov
jmp
or
ror
out
lret
or
dec
sub
shrl
dec
sub
mov
imul
repz
cmp
mov
nop
sbb
sbb
xchg
icebp
nop
dec
call
nop
xor
jbe
dec
fwait
mov
mov
push
dec
xchg
dec
mov
xchg
push
xor
xchg
test
pop
xchg
pushw
xchg
int
xchg
icebp
nop
add
sahf
mov
jl
dec
xchg
mov
bound
xchg
movsb
nop
sbb
sbb
xchg
icebp
nop
dec
call
dec
adc
jbe
dec
fwait
mov
mov
push
cs
mov
or
xchg
test
cmp
int3
jb
inc
vpcmpgtd
xchg
mov
pop
xchg
fwait
inc
loopne
iret
scas
jmp
push
jmp
pushf
sub
movsb
test
pop
dec
or
out
sbb
jmp
in
xchg
decl
xchg
add
leave
les
sub
daa
outsl
lea
lods
lret
jmp
sub
outsb
loop
sub
mov
xor
cmp
jmp
sbb
imul
in
sub
pop
movsb
cmpsl
fwait
dec
cli
xchg
adcb
lock
test
push
rclb
dec
sarb
sub
xchg
mov
out
or
or
adc
test
pop
loopne
push
loope
movntq
out
or
addr16
das
in
ds
data16
lds
push
sub
mov
es
jo
pop
sub
mov
xor
mov
out
push
and
sub
dec
xchg
adc
movsb
int
aas
cmpsb
sub
or
lea
mov
iret
out
or
adc
insb
negb
repz
adc
xchg
mov
push
xchg
add
je
xchg
push
flds
or
pop
push
cld
rcrl
popa
xchg
pop
scas
dec
call
iret
stos
mov
inc
loope
add
mov
and
adc
jle
aad
adc
sub
popf
clc
mov
push
leave
popf
rclb
repz
dec
inc
insl
ljmp
dec
out
imul
add
sti
decb
stos
push
subl
or
xchg
xchg
aaa
aam
scas
and
xchg
push
xlat
test
mov
jo
rorb
cmpsl
adc
aad
adc
pop
fcoml
pop
push
addb
out
fists
loop
adc
xchg
repz
fisttps
das
mov
test
xchg
xchg
jle
xchg
mov
sub
dec
test
push
ds
mov
xchg
sbbl
popfw
pop
aam
xor
je
stos
xchg
xchg
test
ds
int3
pop
xchg
scas
daa
adcl
out
push
xchg
mov
xchg
int3
sbb
mov
xchg
test
push
adc
xchg
test
jg
movl
out
xchg
outsl
jnp
push
popf
jmp
xchg
dec
aaa
int3
dec
les
mov
scas
fisttpll
xchg
jb
xchg
arpl
xchg
ret
dec
test
mov
dec
lock
push
xchg
mov
xor
mov
xchg
mov
icebp
das
dec
out
xchg
mov
lods
push
dec
dec
pop
ljmp
xchg
or
sbb
or
mov
xchg
sub
das
jle
push
adc
mov
pop
dec
ret
pop
or
outsb
int
insl
sbb
in
cmp
iret
popl
adc
lret
jle
mov
or
adc
scas
xor
inc
jecxz
clc
or
insb
pusha
call
test
lock
mov
fcmovnu
mov
scas
inc
insl
cmpsb
cmovg
test
dec
fisttpl
aam
jo
push
out
jb
push
insl
push
xor
test
scas
jno
cmpsb
or
addr16
out
test
mov
cmpsb
or
les
lock
int
fstpt
enter
lods
adc
inc
enter
mov
pop
and
pop
leave
jmp
jns
dec
push
int
or
inc
sbb
push
imul
movsl
fneni(8087
lcall
mov
sbb
repnz
stos
mov
inc
push
mov
data16
inc
sub
mov
pop
aas
inc
lock
pminsw
into
in
out
mov
push
loope
shrl
lods
cpuid
fimull
and
sbb
dec
daa
push
inc
mov
mov
cmpsl
and
out
sbb
lret
dec
sub
dec
xlat
dec
mov
lea
jne
addr16
xchg
cmpsl
dec
or
or
out
or
push
sub
or
pop
subl
pushf
xor
sbb
inc
shl
addl
cwtl
out
or
sub
int3
dec
pop
adcl
adc
pop
jecxz
xchg
out
out
or
sub
cltd
xchg
pop
adcl
and
and
sbb
int3
dec
or
mov
andl
addr16
dec
xchg
push
int3
dec
pop
or
repz
test
pop
subl
sbb
dec
xchg
jecxz
dec
pop
out
repz
push
es
subl
sbb
dec
addr16
xchg
adc
or
test
subl
je
movsl
mov
xchg
orl
or
daa
lods
dec
cltd
daa
push
mov
sub
or
sub
das
xchg
xchg
leave
xchg
push
mov
or
adc
inc
push
leave
pop
sub
inc
test
pop
xchg
ds
or
imul
dec
push
ror
xor
in
push
lret
mov
iret
mov
sub
cmc
sub
mov
push
mov
push
xchg
push
int
push
lea
or
or
inc
xchg
push
lret
push
inc
hlt
les
xchg
dec
mov
dec
mov
dec
sub
sub
dec
add
imul
aaa
inc
dec
mov
xchg
mov
inc
dec
mov
xor
dec
lods
and
repz
dec
lods
fidivrs
repz
lds
lods
fwait
cmp
lcall
lods
cwtl
cmp
sbb
xlat
mov
dec
lods
push
cmp
pop
test
stos
and
in
insl
lock
mov
pop
out
pop
scas
jbe
sub
gs
fmull
mov
jb
cmp
stc
push
imul
mov
pop
test
pop
jae
mov
mov
scas
inc
pop
pop
daa
test
fisttps
lahf
cmp
adc
and
bswap
or
xchg
push
sbb
mov
mov
int3
dec
or
jecxz
or
inc
lds
int3
mov
pop
mov
xchg
out
or
fldenv
or
pop
rcrl
daa
cwtl
pop
nop
aaa
pop
jmp
xor
scas
cmc
stc
pop
fisttps
pop
pop
jecxz
pop
clc
pop
daa
jecxz
daa
cwtl
daa
mov
daa
out
daa
xor
fs
and
mov
lret
dec
cmpsb
mov
inc
mov
inc
push
jnp,pn
push
xchg
cmc
mov
jle
xchg
lods
daa
pop
xchg
mov
xchg
jle
mov
push
mov
inc
fisttpl
pop
pop
jecxz
cmpsl
cwtl
cmpsl
mov
adc
pop
mov
test
or
pop
jmp
xor
pusha
jmp
lods
lea
push
inc
xchg
lods
dec
jo
out
into
sbb
cmpsl
aad
mov
jp
xchg
cmp
int3
mov
cwtl
inc
xor
xor
dec
adc
cmpsl
cwtl
cmpsl
icebp
lea
mov
xchg
push
cmc
stos
push
jp
push
lods
dec
shlb
pop
test
shrl
push
clc
adc
je
adc
ficoms
mov
and
scas
push
les
pop
nop
lea
daa
push
lods
divb
mov
cltd
sahf
inc
xchg
push
lods
xchg
repz
mov
repz
mov
sbb
movsl
daa
mov
dec
mov
cmp
popl
shll
push
ret
jnp
paddsw
cwtl
push
pop
mov
pop
push
ret
jecxz
jnp
push
fisubs
fdivrl
enter
push
rolb
mov
fwait
mov
push
xor
jmp
mov
add
lret
xor
out
push
xchg
gs
ret
in
nop
and
push
push
dec
lcall
push
rolb
dec
or
sbb
sub
adc
adc
xor
push
inc
pop
nop
xchg
movsl
xchg
or
dec
jns
insb
lock
lret
mov
pusha
jmp
enter
mov
sub
in
xchg
add
cmp
inc
aas
lret
jmp
jmp
sbb
xchg
sub
in
or
jmp
imul
pop
dec
daa
xor
stos
push
pusha
movl
xchg
aam
popf
mov
dec
in
mov
xchg
and
jo
add
scas
sbbl
mov
addr16
xchg
ret
inc
jno
into
icebp
lods
mov
sub
daa
ret
push
nop
out
mov
dec
and
sub
dec
aad
jae
xor
cltd
push
or
xor
sub
adc
movsl
and
pusha
aas
mov
mov
loope
aad
mov
adc
dec
dec
push
aam
or
stos
or
or
insb
mov
test
jmp
inc
ja
dec
cmpsl
nop
xchg
daa
xchg
jb
sub
sub
lret
adcl
xchg
cmp
mov
sub
lods
add
push
in
dec
xchg
addr16
inc
stos
daa
xchg
add
ja
xchg
mov
ljmp
or
mov
cli
jnp
dec
dec
sub
cmp
xor
pop
mov
sahf
xchg
test
or
outsb
fmull
into
push
mov
push
xchg
dec
enter
leave
out
ret
mov
mov
xor
and
fisubrl
jbe
mov
push
ret
cli
push
test
ficoml
adc
sahf
dec
dec
inc
sub
or
mov
xor
lods
adc
pop
or
xor
orl
stos
or
xor
popf
xor
aad
xchg
ljmp
inc
imul
repz
mov
lahf
stos
sbb
or
dec
enter
mov
lret
mov
sbb
sub
add
sub
pop
jae
lods
sub
mov
nop
xor
addr16
push
dec
jbe
test
pop
push
inc
or
mov
push
vucomiss
cmp
pop
test
faddl
push
in
iret
mov
cmc
push
pop
xchg
pop
shll
pop
mov
and
hlt
aaa
xlat
mov
mov
es
fcmove
stos
xchg
xchg
xor
adc
mov
pop
or
rcrl
dec
ret
imul
or
adc
movsl
mov
leave
fcomi
pop
lret
sbb
js
adc
fcmovnb
fldl
xchg
and
or
xchg
push
pushf
mov
push
dec
sbb
push
imul
jae
or
sbb
or
dec
mov
aad
iret
jae
xchg
ret
xor
data16
or
mov
dec
aam
daa
add
sub
or
or
push
cmc
adc
add
mov
add
sub
mov
sbb
push
sarb
inc
sub
jmp
sub
or
xor
popa
xor
jae
xchg
aad
dec
push
sbb
sahf
icebp
dec
add
or
mov
xor
lret
push
scas
cmp
outsl
leave
shrb
lret
adc
xchg
mov
sub
subl
push
inc
sub
inc
or
pop
aaa
or
dec
pop
js
jae
push
xchg
and
xchg
or
shlb
xchg
int3
xor
xchg
xor
int
shll
lds
dec
push
push
rcl
jae
andl
ss
inc
mov
xchg
add
push
mov
xchg
nop
or
xchg
cmp
xor
adc
adc
out
inc
fldenv
push
inc
mov
daa
jbe
mov
sub
repnz
fs
lcall
mov
push
dec
and
imul
sub
ret
push
adc
es
push
lods
dec
stos
addr16
nop/reserved
xchg
mov
dec
pop
mov
mov
xchg
dec
xchg
push
aad
orl
inc
out
nop
outsl
ffree
pop
scas
fsubl
inc
lods
pop
mov
xchg
or
stos
push
xlat
movsbl
jnp
test
mov
popf
in
pop
or
lds
repz
or
sub
scas
psubb
mov
xor
xchg
mov
sub
jo
in
ret
push
cmpsb
cmp
xchg
sub
leave
lds
dec
mov
iret
xlat
popl
mov
xchg
cmp
jp
lret
pop
adc
sub
mov
mov
adc
mov
adcl
sahf
leave
dec
push
pop
push
mov
or
movsl
pop
insb
push
inc
dec
and
push
pop
push
xchg
out
push
and
fidivs
cwtl
mov
test
push
pop
fisttpll
mov
sahf
mov
imul
out
insb
sahf
mov
das
iret
lret
sbb
scas
mov
mov
mov
lahf
ja
in
addl
dec
int3
bound
popf
pusha
add
add
cwtl
popf
mov
dec
lds
push
in
push
dec
aas
fst
xchg
xchg
xor
fstl
push
jbe
push
inc
scas
test
repz
hlt
push
cs
ret
sahf
xchg
into
data16
scas
les
push
push
or
sub
add
push
je
stos
dec
dec
add
or
les
or
mov
lret
aas
sahf
fists
out
scas
adc
xchg
dec
movsb
lahf
adc
into
cmpsb
rcr
mov
mov
fmuls
push
xchg
mov
out
jecxz
push
xchg
scas
push
das
aas
xchg
xchg
int3
lret
fimuls
mov
xchg
ficoms
cmp
push
adc
sbb
lea
add
ret
fmulp
push
jbe
xor
and
push
enter
cmc
int3
sti
jb
or
inc
mov
add
dec
lea
leave
int3
dec
xchg
aad
int3
pop
or
sub
mov
xchg
call
or
sbb
dec
or
sarl
xor
inc
sbb
sarl
push
inc
or
mov
pushf
shl
int3
in
jb
mov
sub
pop
jmp
push
sub
jne
adc
adc
pop
addr16
sbb
ljmp
mov
fdivrs
sbb
test
fimuls
shrl
mov
push
cmp
sahf
dec
xchg
leave
inc
in
stos
loopne
or
mov
adc
push
test
inc
ret
in
ljmp
pop
pop
push
push
jecxz
bound
aam
leave
ds
ja
push
sub
xchg
adc
rorl
in
add
jns
movsb
fcomps
or
loopne
bound
fmul
dec
cmpsl
lods
sarl
inc
es
ret
mov
cwtl
mov
lock
cmpsb
or
outsl
test
ja
push
out
pop
scas
test
je
push
leave
inc
roll
cmc
test
xchg
inc
sbb
cwtl
pop
pusha
or
rcll
jae
mov
test
stos
push
out
pop
push
or
push
dec
jl
push
out
sbb
iret
sbb
mov
pop
dec
lods
andl
sub
inc
aas
sbb
aad
lret
push
in
bound
paddsw
pop
shll
jnp
add
pop
jno
insb
adc
add
pop
orb
push
mov
jecxz
sbb
sub
xchg
mov
shrl
push
fdivs
fcompl
mov
pop
lea
adc
lods
sub
xchg
cmp
add
cmpsl
inc
pop
push
mov
adc
pop
fisttpl
sahf
aam
lods
cwtl
adc
lods
andb
inc
scas
ret
inc
or
push
mov
pop
leave
mov
fstl
cli
inc
sub
dec
dec
sub
inc
fsubrl
es
scas
or
mov
ljmp
mov
xchg
dec
test
inc
pop
push
xchg
jbe,pt
sahf
push
mov
je
outsb
arpl
or
testb
ret
xchg
inc
imul
mov
jnp
sahf
xor
xchg
mov
pushf
cmp
js
mov
stc
test
mov
xchg
insl
pop
pushf
in
lret
enter
sub
mov
dec
pop
sbb
enter
add
pop
inc
jp
pop
or
add
xchg
aaa
push
enter
bound
xor
stc
pop
pusha
orl
iret
sarl
ds
ret
dec
or
negl
pusha
ret
in
bound
dec
inc
cmpsl
rcl
sub
mov
push
xlat
add
fstl
mov
pop
leave
stos
pop
arpl
je
xor
push
and
int3
out
imul
mov
jo
enter
push
into
scas
dec
mov
in
enter
jne
sbb
insb
lret
xchg
push
dec
stos
ret
imul
enter
mov
scas
mov
jb
stos
cwtl
mov
fisubrs
jns
cmpsb
pop
lret
ret
movl
lods
inc
dec
shl
into
push
int3
out
repnz
push
dec
or
mov
push
or
aam
xlat
rcr
int3
push
fwait
xchg
push
inc
shrl
xchg
add
repnz
jnp
pop
push
or
int3
scas
xor
into
out
or
dec
push
mov
lret
inc
aas
fbstp
int
xor
sbb
jb
subb
cmpsb
sub
mov
shl
inc
adc
xor
mov
dec
fmuls
cmp
adc
mov
jmp
fwait
push
adc
mov
insb
cli
int
daa
pop
xchg
roll
repnz
outsl
shl
ret
rol
cmpsb
xchg
xchg
fcoms
adc
outsb
popa
lret
insb
xchg
xor
lods
out
push
cmpsl
cmp
mov
sbb
data16
popf
push
add
lret
fldt
nop
shlb
and
in
mov
sbb
mov
or
or
push
mov
in
jp
daa
mov
adc
ficompl
push
out
fcomps
outsb
imul
inc
mov
dec
adcl
sub
adc
sub
in
shll
xlat
push
sub
push
loopne
push
or
iret
test
dec
xchg
das
es
mov
sbb
inc
bound
popf
xchg
sub
pop
outsb
std
popf
arpl
int
cmp
mov
filds
lcall
xor
sub
pop
pop
xchg
jg
and
mov
xchg
pushf
xchg
ror
stos
or
scas
in
mov
pop
inc
xchg
or
aad
or
mov
xor
insb
jg
jp
cmp
push
inc
test
test
pusha
imul
cmpsb
inc
adc
sbb
aam
sahf
adc
sbb
push
dec
jl
push
cmpsl
shlb
mov
add
add
or
scas
jge
adc
jp
lds
mov
jne
xchg
add
xchg
and
mov
inc
xor
dec
cmp
inc
outsb
popa
lahf
repz
push
sub
jae
notb
dec
mov
adc
ljmp
xor
addr16
sub
int
or
hlt
lret
stos
fldln2
adc
jnp
mov
popf
movsl
cmp
cmp
test
xor
adc
sarl
xchg
int3
push
dec
repz
insb
pop
dec
and
xchg
pop
add
mov
loope
into
mov
sub
adc
jg
stos
pusha
into
inc
nop
in
imul
iret
push
jno
xchg
ds
pusha
imul
aam
dec
adc
or
pop
ja
js
push
fwait
in
lods
pop
or
jg
xacquire
mov
adc
pusha
lret
adc
and
adc
xchg
or
dec
inc
in
and
mov
inc
mov
and
in
jae
pop
sbb
pop
les
lds
mov
add
xchg
lret
dec
out
dec
test
mov
inc
sbb
or
push
mov
mov
cmp
movsl
test
das
dec
int
xor
fbld
punpckhdq
es
pop
mov
add
es
mov
aas
push
or
ljmp
movsb
jae
jno
in
repz
push
push
add
sub
mov
dec
pushf
das
push
stos
and
lcall
into
leave
stos
or
int
repnz
dec
sub
sub
push
push
mov
roll
inc
into
sbb
sub
cmc
or
and
xchg
cmp
repnz
add
jecxz
mov
mov
push
scas
mov
mov
or
and
pop
adc
adc
mov
neg
movzbw
bsf
add
sub
cmc
adc
or
add
neg
mov
pusha
mov
bt
bt
jmp
lea
call
in
jmp
jmp
pushf
lea
je
pushf
add
jmp
lea
lea
mov
pushf
pushf
pushf
pushf
pushl
ret
sti
lock
orl
leave
jge
xor
mov
shlb
decb
imul
pop
sbb
xchg
mov
cli
sbb
inc
insl
cmpsl
test
ret
inc
pop
bound
adc
adc
mov
adc
sti
out
hlt
mov
pop
mov
push
inc
test
clc
pushf
sbb
sbb
pop
jae
ss
rcrb
insb
add
pushf
lea
jae
lea
mov
cmc
rol
mov
inc
sbb
shl
mov
pusha
call
call
mov
mov
pusha
mov
adc
adc
sub
mov
add
and
jl
xchg
pop
lret
jne
jo
rdpmc
ss
inc
push
pop
mov
pop
pusha
ret
cmpsl
sbb
jns
adc
pop
and
add
lcall
sbb
pusha
lea
jae
call
push
movb
push
mov
movsbw
pushl
popl
lea
mov
movsbw
jmp
mov
mov
and
rol
fldl
insl
adc
ret
add
lret
add
jne
jae
mov
loopne
sbb
popa
push
push
je
sbbb
dec
icebp
int
pop
mov
addr16
dec
inc
addr16
ja
lods
ss
jl
inc
and
inc
fcmovb
int
dec
clc
pop
loop
stc
not
pop
inc
adc
cmp
pop
dec
gs
adc
jnp
xchg
stos
lret
add
mov
adc
inc
or
pop
pop
sbb
outsb
jb
or
dec
nop
sahf
mov
jnp
add
cmp
mov
fcmovnb
or
dec
xor
inc
jno
or
mov
clc
aad
sbb
or
pop
mov
adc
and
jb
jb
sbbl
xor
ljmp
inc
push
out
add
dec
fwait
add
test
mov
mov
fcmovnbe
icebp
mov
cmp
push
xchg
rorl
cmovae
sub
and
into
enter
or
push
hlt
dec
jo
in
xor
jmp
cmp
dec
movsb
mov
jp
jnp
mov
cmp
xor
inc
push
insb
dec
loope
je
hlt
jmp
jmp
sbb
idiv
repnz
mov
jno
push
mov
xorb
sbb
inc
add
xchg
lcall
sub
scas
mov
andb
ret
clc
mov
arpl
clc
iret
add
or
xchg
add
pop
push
xchg
jge
gs
fisttps
les
int3
dec
inc
adcl
lds
movsl
lock
xor
xchg
imul
sub
movb
pushf
les
mov
xchg
mov
ds
movsl
lahf
sbb
and
mov
xchg
loopne
in
jne
inc
mov
popa
jp
jge
lret
aaa
lods
mov
xchg
pop
bound
sbb
notl
mov
ret
in
sub
and
or
cmc
cmpsb
bound
jle
loopne
cmp
int3
bound
aad
inc
cmp
xchg
adc
dec
add
jno
daa
sbb
adc
bound
fcmove
sarl
mov
add
xor
sbb
sbb
sub
aaa
jmp
jbe
in
daa
mov
add
dec
jmp
test
xchg
cs
daa
mov
sbb
ret
ss
mov
jns
loopne
cwtl
nop
mov
fadds
cmp
rorb
pop
mov
adc
pushf
arpl
inc
fwait
nop
mov
mov
ja
sub
int
or
jge
push
into
and
call
aaa
pop
jae
fiadds
test
mov
jnp
fisubrs
vmovq
push
int
cmp
loop
rorl
push
or
adc
call
push
push
adc
repz
outsl
dec
push
stos
jbe
mov
aaa
cmp
stos
or
push
lahf
xchg
pop
imul
xor
inc
pusha
adcl
cli
fmull
mov
lods
loope
jb
movsl
mov
pop
push
mov
insb
dec
aam
mov
push
sbbb
mov
int
pop
outsl
dec
pop
addb
testl
lret
cmp
sbb
dec
push
hlt
cmp
lret
icebp
stos
mov
mov
insl
jno
bound
fistps
lds
inc
dec
jnp
das
add
fcmovbe
ficoms
inc
filds
add
ss
fnsave
pop
push
pushf
xchg
ljmp
das
and
es
push
cli
jmp
cmp
int
jb
test
push
mov
cmp
xor
sub
or
jecxz
cmp
adc
sbbb
cmp
int3
add
loopne
out
mov
cs
inc
or
xor
leave
push
pop
jns
cmc
adc
lea
mov
jbe
in
cmp
lcall
sbb
adc
push
ljmp
imul
sbb
add
in
ja
xchg
cli
xchg
nop
orl
cmc
dec
inc
fiadds
xchg
mov
sbb
fcoml
mov
push
lret
insb
mulb
cmp
sbb
xchg
xchg
jg
into
fwait
adc
mov
sbb
and
daa
adc
mov
jne
sbb
jg
jno
dec
scas
mov
pop
cmpl
cld
push
data16
xlat
dec
push
pop
or
push
dec
aad
dec
lret
in
les
das
imul
mov
movsb
mov
gs
push
das
mov
xchg
fwait
xchg
or
popl
mov
or
ret
pop
xor
cmpsl
mov
out
adc
icebp
dec
notb
vpaddsb
lret
sbb
lret
jmp
jne
loope
add
lds
pop
popa
push
aam
mov
pop
sbb
insl
pop
dec
mov
lods
inc
dec
pop
xlat
sti
lea
mov
lods
mov
jno
adc
push
sbb
mov
enter
dec
jmp
insb
enter
imul
fs
xchg
scas
sahf
pop
mov
inc
cmp
addr16
fnsave
xchg
xchg
lret
add
xor
dec
pop
sbb
incb
test
push
insb
jecxz
jne
adc
and
scas
dec
pop
out
jne
inc
lea
jns
icebp
push
pop
repnz
scas
int
cmp
xchg
xchg
jb
idivb
scas
sub
dec
push
pop
es
lahf
mov
pop
adc
lea
call
test
push
mov
cmp
movw
pusha
lea
jae
cmc
ja
cmp
pusha
lea
jo
pusha
lea
jae
jmp
mov
pushf
xchg
mov
movzbw
mov
push
pushl
ret
lea
call
push
adc
movb
mov
lea
call
jns
push
pushf
push
lea
jb
pusha
push
pushl
ret
pusha
pusha
push
movl
push
pushl
movl
movw
pushf
pushf
push
lea
jmp
lea
ja
call
shr
bsf
lea
call
test
pushf
push
jmp
jmp
stos
mov
mov
mov
push
outsb
ljmp
sahf
lret
pop
gs
push
mov
movsl
test
mov
cwtl
aaa
cmp
movsb
lahf
pop
ja
mov
sub
bound
es
add
mov
mov
mov
xchg
cmp
shlb
adc
jo
add
loope
nop
out
add
push
ljmp
add
pop
enter
outsl
adc
cmp
xchg
inc
push
mov
fwait
push
dec
aaa
test
jae
in
xor
mov
sub
es
dec
pop
cld
lret
jbe
scas
fiadds
cmp
loop
js
pop
jmp
imul
insb
rolb
add
dec
sbb
xor
add
sti
das
jmp
dec
mov
aaa
inc
imul
in
imul
addr16
xor
sub
fldl
popf
jae
mov
aad
andl
mov
and
push
push
adc
pushf
mov
icebp
dec
lea
das
mov
bound
sbb
loopne
xor
ret
aad
sbb
xchg
mov
neg
jae
lock
mov
pop
mov
cmp
xchg
je
adc
std
shrl
mov
lret
pop
add
or
faddl
mov
das
adc
inc
push
ds
out
or
cmpsb
xchg
daa
test
sub
jmp
dec
aaa
cmp
call
dec
inc
call
or
cmp
aam
in
lock
test
inc
aad
sbb
and
jne
pushf
mov
mov
push
pusha
lea
jmp
xchg
pusha
movb
call
mov
lea
jmp
push
pushf
pushf
lea
jne
cmc
cmp
lea
shl
mov
not
sub
shld
sub
mov
mov
stc
cmc
sub
bt
cmc
pusha
pusha
pushl
popl
push
pushf
cmp
push
cmp
jmp
push
call
bsr
mov
jmp
push
pushf
jmp
adcw
fdivl
int3
rol
lods
mov
mov
jge
push
scas
mov
xchg
imul
and
in
fiaddl
jbe
out
or
cld
lock
insb
add
rcl
push
fmul
sub
sub
outsb
or
push
push
pushl
mov
outsb
inc
xchg
nop
push
adc
in
les
stos
out
cwtl
cld
cmp
sahf
loop
aas
sub
mov
dec
xlat
mov
or
sub
sbb
inc
inc
fdiv
in
out
dec
or
sbb
or
sub
mov
pop
imul
mov
adc
dec
arpl
add
lea
cmc
sbb
inc
inc
inc
fdiv
sub
nop
popa
leave
sbb
jb
aaa
jle
loope
inc
sub
arpl
imul
aas
mov
pop
dec
jmp
sbb
cmc
push
jge
dec
addr16
jns
jns
xchg
mov
test
stos
test
mov
dec
pop
popf
cmpsb
xbegin
out
dec
jle
push
inc
inc
out
repnz
repnz
xchg
daa
mov
xor
cmp
lret
push
xor
sahf
ljmp
out
cmc
inc
push
inc
push
and
call
jmp
movl
jmp
lea
jb
push
pushf
movb
cmp
call
mov
add
push
repnz
adc
push
repnz
outsb
jp
xor
gs
jg
sti
rcll
movl
addr16
daa
xor
outsb
dec
xchg
xchg
pop
mov
dec
dec
out
ret
sahf
repnz
add
ja
stc
in
mov
xor
mov
push
pop
mov
sbb
jecxz
imul
jecxz
mov
and
inc
dec
or
call
xchg
sub
lock
call
hlt
mov
sub
mov
add
addb
add
push
add
add
add
adc
add
aam
add
adc
add
rcll
add
add
add
setbe
lods
call
lea
jne
daa
sub
sub
xor
shl
rcl
bswap
mov
stc
add
ror
cmp
stc
mov
test
pushf
clc
test
call
movl
movb
mov
pusha
lea
jmp
pusha
jmp
lea
jbe
pusha
pushl
lea
jbe
add
lea
lea
mov
mov
clc
pusha
add
bts
call
jmp
call
movl
jmp
push
lea
jae
pushf
pusha
lea
jne
pusha
pushf
stos
movb
pusha
pushf
lea
jmp
add
dec
outsl
popa
fs
imul
add
movsb
mov
movb
add
mov
clc
mov
pusha
pushf
pushf
cmp
test
pushf
mov
mov
lea
je
clc
clc
add
jmp
jmp
push
jmp
jb
call
call
mov
pusha
push
pushf
pushl
ret
cmc
mov
jmp
call
stos
push
lea
jmp
push
clc
cmp
pusha
push
pushf
mov
lea
jmp
shl
mov
call
jmp
cmp
pusha
jmp
jbe
xchg
nop
mov
adc
fmul
pop
pop
std
push
mov
or
jp
into
cmp
sub
adc
js
push
mov
push
leave
adc
arpl
rcr
and
pushf
jnp
mov
rcll
jmp
add
ja
addr16
sti
iret
fiaddl
cmp
xchg
mov
jmp
pop
lret
jecxz
sub
sub
std
cmpsl
mov
and
in
pop
jo
and
lock
clc
cmp
and
add
sub
jl
and
sub
fdivl
adc
add
add
fildll
xor
hlt
call
cwtl
xchg
cmpsl
xchg
mov
fs
fs
cmp
cltd
xchg
scas
in
int
xor
cld
andb
fcompl
in
jl
lds
addb
aam
arpl
mov
and
xor
mov
sub
jmp
push
jbe
shrl
stos
aaa
or
out
or
adc
push
inc
push
push
mov
mov
jae
mov
ja
sti
lock
iret
je
xor
cltd
addb
js
pop
and
les
adc
popa
push
jo
dec
jb
jmp
rcr
lock
mov
xor
mov
pop
rcll
nop
mov
pop
test
sbb
call
lret
push
out
loop
cwtl
xchg
ja
sbb
gs
insl
or
test
pop
js
repnz
jg
and
sub
mov
sbb
mov
imulb
fisttpl
pushf
xchg
xchg
sub
sbb
xor
push
sbb
jne
jne
fdecstp
cmp
repnz
xchg
fcoms
das
xchg
out
xchg
stos
dec
outsl
sbbl
test
jg
push
pusha
stc
push
jmp
pop
into
xor
push
popf
inc
test
pop
sbb
pushf
mov
popa
push
mov
in
fdivrs
pop
scas
gs
loope
popa
sbb
test
dec
pusha
mov
insl
dec
or
xchg
mov
jno
in
inc
popf
xchg
call
pop
push
daa
gs
mov
push
loop
push
mov
adc
repnz
add
cmpsb
ret
clc
adc
sub
or
mov
pop
push
jb
andb
jge
sub
sbb
inc
addb
cmpsb
lods
push
jne
dec
inc
lods
test
and
rclb
mov
sub
mov
adc
adcb
xchg
test
repz
les
cld
enter
pop
ja
xchg
test
imull
sahf
bound
lea
je
pusha
push
movb
call
pop
or
xchg
mov
xor
sbb
negl
scas
in
sub
loop
gs
mov
xchg
mov
jle
mov
pop
cmpb
mov
xor
jge
pop
stos
xor
sbb
iret
dec
inc
aad
mov
jnp
enter
dec
sbb
in
fcomps
adc
pop
inc
add
push
add
ljmp
es
ja
fs
jb
push
mov
pushl
mov
pushl
ret
call
xchg
popf
mov
mov
sti
movnti
aaa
xchg
lahf
fwait
das
pop
rcrb
mov
into
icebp
mov
outsw
xchg
pop
pop
pop
dec
jo
inc
fcomp
pop
je
stos
out
adc
loop
sub
pop
std
sbb
inc
mov
mov
int3
call
movsl
shl
lods
cmp
adc
add
loopne
fs
pop
push
sahf
mov
stos
xor
xor
in
ret
mov
cs
mov
stos
inc
push
into
cmp
enter
in
ret
imul
repz
les
orb
pop
dec
leave
ljmp
push
mov
ja
das
daa
add
in
xor
push
inc
inc
notl
out
pusha
out
pop
inc
jp
decb
mov
push
lcall
stc
fisttpl
lcall
add
push
add
push
pushf
lea
jmp
mov
sub
rol
loope
stc
rcll
in
cmpsl
rcr
lcall
rorb
mov
sahf
and
and
push
inc
gs
mov
into
outsl
sub
into
add
sbb
in
xor
outsb
fld
or
xchg
add
inc
pop
mov
outsb
inc
hlt
loope
push
mov
sbbb
cmp
lods
loopne
mov
icebp
es
pop
pop
in
pop
jns
xchg
lods
and
leave
pop
popa
and
cltd
mov
or
enter
sti
lret
call
and
lea
je
cmp
call
pushf
lea
jne
test
aad
sub
xor
rcr
xor
stc
mov
shl
add
ror
sub
sbb
adc
mov
cmc
pushf
movl
bt
test
pusha
pushf
call
mov
cmp
push
lea
ja
push
mov
mov
not
xchg
pop
mov
jmp
bound
adc
hlt
push
int3
add
inc
cmpsb
lods
clc
mov
jb
push
call
inc
and
fwait
das
fildl
jmp
xchg
xlat
int3
mov
pushf
xchg
lret
lea
fs
and
int3
call
adc
jo
mov
sar
btr
mov
and
mov
clc
mov
jmp
leave
ret
mov
mov
stos
inc
mov
cmp
jecxz
add
lret
jl
inc
xor
arpl
lea
shl
in
imul
pop
subb
loope
outsl
add
cmp
sbb
outsl
cmc
jle
push
loop
js
sbbl
andl
mov
or
push
mov
and
out
fcmovbe
in
add
inc
movsb
loopne
out
inc
and
shr
fpatan
cli
decl
push
inc
push
dec
xor
inc
dec
dec
add
icebp
cmp
mov
jmp
lea
pusha
cwtl
mov
cwtl
jmp
push
sub
push
pusha
pushf
lea
jmp
lea
jne
pusha
pushf
mov
and
sar
movsbl
sub
call
movl
jmp
rcr
out
cwtl
mov
stos
scas
jb
xchg
cs
dec
dec
sar
and
add
jmp
jmp
pop
aas
mov
lahf
or
inc
adc
fbstp
stos
mov
sbb
mov
movsl
cmp
mov
dec
imul
xchg
mov
aam
sbb
daa
cmp
cld
adc
cmp
xchg
mov
ficomps
je
in
scas
insb
mov
mov
inc
loopne
sti
cmc
lock
and
addr16
dec
popa
mov
and
jae
inc
cvttps2pi
mov
data16
ds
sahf
out
sbb
arpl
xchg
out
cmp
xchg
push
loop
fisttpl
dec
hlt
sub
lock
adc
mov
jae
sub
xchg
repnz
sub
mov
or
aaa
inc
aas
or
sbb
js
outsb
push
pop
movsl
icebp
int
jmp
mov
dec
push
jmp
mov
adc
push
push
jmp
jecxz
cltd
mov
sbb
xor
test
sbb
out
adc
test
dec
push
fisubrl
inc
loop
pusha
mov
mov
repz
pop
lret
aas
jnp
dec
iret
mov
aas
add
sub
bound
cmc
mov
test
add
cmp
bt
clc
pushf
mov
stc
cmc
push
test
movb
pusha
jmp
jae
pushf
movl
push
movl
pushf
pushf
lea
jmp
pushf
movw
jmp
bsr
lea
mov
pushf
cmpb
jmp
pushf
call
call
bsf
mov
lea
shr
bts
shr
mov
bts
sbb
add
add
xor
push
pusha
adc
shr
test
xor
test
xadd
mov
ror
add
call
movl
jmp
pusha
movb
pushf
lea
jne
aad
sub
push
neg
shr
mov
sub
and
rcr
mov
add
add
mov
cmp
pushf
pushl
test
mov
pushf
lea
je
pushf
cmp
mov
stc
sub
jmp
daa
shl
stc
dec
push
aam
xchg
movsbl
mov
daa
bswap
btc
sub
sar
cmp
jmp
call
push
bts
shr
bsf
push
bswap
ror
push
inc
mov
aaa
bts
xor
pusha
lea
pushf
push
mov
pushf
mov
lahf
mov
pusha
push
lea
pushf
mov
push
call
push
call
call
mov
lea
jae
dec
not
jmp
lea
movsbw
setbe
mov
lea
ja
pusha
pusha
lea
ja
jmp
push
call
jmp
mov
les
sbb
xor
loope
xchg
nop
cltd
mov
mov
pop
add
push
push
orb
adc
std
ret
xchg
pop
lods
xchg
jmp
sbb
adc
imul
lea
ja
call
pushf
jmp
cmp
call
push
pushl
lea
jge
je
xchg
bswap
mov
cmp
add
bts
lea
mov
jmp
mov
call
xchg
jb
pushf
mov
jnp
add
scas
in
sbb
shrl
gs
mov
fwait
das
xchg
jg
fwait
aaa
jecxz
mov
mov
pop
xlat
inc
ja
sub
or
xor
pop
mov
jmp
mov
lea
je
shr
shrd
xor
cwtl
mov
jmp
pushf
stc
test
pushf
lea
jne
je
cmp
pusha
test
cmc
add
call
shl
mov
cmc
test
test
add
push
movzwl
cmc
rcl
mov
lea
jns
push
stc
add
clc
jmp
pusha
xchg
adc
and
fisubrl
scas
dec
imulb
push
cmp
add
ss
jmp
mov
jge
lods
lret
fidivrl
cmpsl
les
shl
nop
inc
pusha
or
mov
call
add
mov
lahf
pop
movsb
push
jbe
lret
sub
ss
mov
inc
js
mov
dec
mov
idiv
movl
lea
jae
setg
mov
lea
shld
mov
inc
adc
shr
ror
mov
jmp
pusha
cmp
call
pushf
mov
pusha
call
sub
xchg
cmp
in
lret
cs
cli
es
lcall
mov
inc
cmp
adc
jle
xlat
push
dec
into
add
and
leave
repz
aad
mov
std
dec
movsb
test
mull
aas
add
jno
and
cwtl
jnp
mov
add
js
scas
mov
jecxz
mov
int3
sbb
cltd
mov
sbb
sub
insl
push
add
clc
sbb
lock
mov
clc
add
pushf
test
cmc
mov
movw
test
call
jmp
fcomps
adc
testl
movsl
or
call
js
movsb
enter
push
movsb
inc
cld
and
and
xor
fisttps
cmp
scas
rcl
dec
loop
mov
cmp
xor
push
lcall
ljmp
into
mov
push
in
out
rcrb
add
pushf
push
lea
jne
setle
add
mov
cmc
jmp
pushf
not
call
push
call
cmp
inc
sahf
mov
cmp
into
add
cmp
movsl
inc
mov
dec
mov
out
add
loop
repz
cmp
out
rol
jae
psllq
push
sti
sub
mov
in
cmp
xor
adc
xchg
push
lret
out
xor
sbb
andb
pop
nop
stos
lret
mov
insb
inc
mov
enter
push
nop
or
leave
rol
jmp
mov
xlat
in
pop
dec
popa
lea
pop
aad
lds
mov
add
shll
mov
jne
call
movl
push
pusha
lea
jmp
pop
inc
push
lahf
mov
push
mov
mulb
cs
aaa
push
push
add
scas
xor
inc
jb
sahf
mov
xorb
push
inc
pop
mov
nop
lods
fisttps
mov
loope
sub
shl
cli
mov
stos
loop
xchg
into
jb
xchg
dec
mov
push
jns
adc
xor
inc
pop
not
jmp
jmp
pushf
jmp
orl
cmp
cmp
sbb
lcall
inc
mov
faddl
jno
inc
popf
sub
add
stos
mov
cmp
mov
pop
ds
lahf
sar
xchg
mov
jnp
int
dec
xchg
gs
mov
push
fmulp
sbb
fsts
or
pop
lock
mov
test
popf
jns
add
sbb
push
inc
lcall
orl
sub
in
jge
aam
out
imul
jne
cwtl
sub
fnsave
add
cmpsb
movsb
dec
inc
sti
mov
jae
mov
sbb
jecxz
outsl
stos
test
mov
jb,pn
or
jbe
and
mov
xchg
movsl
shl
xchg
stc
insl
sub
cmp
shrl
pop
add
je
add
neg
clc
movb
rol
movb
jmp
movsbw
mov
xchg
push
mov
movzbw
call
setl
not
mov
pushl
push
call
mov
push
inc
pushl
jmp
pushl
jmp
repz
pusha
jmp
lea
ja
bt
adc
sub
shrd
shld
adc
add
movzbw
cmp
pushf
pusha
mov
rol
setp
not
cmc
mov
cmp
call
inc
dec
pop
mov
lock
test
xchg
mov
add
fiadds
scas
in
aas
add
lret
push
repnz
sbb
add
sbb
repnz
push
inc
ficompl
stos
and
flds
jae
cmc
jecxz
push
jno
scas
je
mov
mov
inc
stos
add
dec
stos
ljmp
jge
xor
ret
jmp
push
fisubl
ljmp
pop
movsb
das
jbe
into
cli
icebp
adc
jae
push
shl
rcrl
das
arpl
sbb
clc
push
out
xchg
sbb
pusha
jmp
pusha
movl
mov
pushl
lea
jmp
mov
addr16
inc
stc
in
loope
orl
inc
pop
push
inc
xchg
lret
mov
nop
enter
rclb
cmp
insb
test
lock
pop
xor
in
test
fsubs
sbb
jl
std
popa
pop
xchg
mov
mov
insl
jl
enter
cld
mov
decl
stos
cmp
and
test
imull
and
popa
sarl
call
sub
dec
jmp
or
das
mov
out
out
mov
jecxz
add
imulb
jl
sbb
fsubs
rclb
add
dec
stos
mov
test
push
cmp
add
sub
test
call
pusha
movl
call
sti
lock
movsb
mov
dec
jp
jne
fistpll
mov
push
insb
cs
gs
jle
loop
sbb
adc
push
mov
dec
mov
jo
inc
pop
adc
scas
bound
andl
outsb
pop
shll
lret
fisubl
add
in
pop
loope
cmpl
push
mov
inc
dec
pushf
cwtl
adc
xchg
adc
sub
scas
sbb
andl
aas
repz
jnp
or
daa
inc
cmp
pusha
jbe
xchg
xchg
lcall
movw
lea
je
pusha
clc
movb
mov
add
clc
cmp
jmp
adc
pusha
pushf
call
mov
pushf
cmp
pushl
lea
jb
bt
pusha
cmp
pushf
jmp
call
pushf
movw
adc
call
push
push
movl
jmp
add
jle
adc
add
add
add
rcrb
add
add
add
add
add
push
add
add
add
add
add
push
add
pusha
pushf
inc
pushl
movb
movb
lea
jmp
mov
lea
jae
inc
mov
pusha
mov
add
dec
mov
stc
pushf
stc
stc
xor
call
add
dec
gs
popa
addr16
outsl
js
add
add
push
bt
pushl
popl
pushf
call
pushf
inc
pushl
call
add
add
movl
call
lea
jne
jmp
btr
ror
mov
btr
jmp
in
dec
movsl
mov
icebp
push
test
cmp
in
out
loopne
and
mov
xor
leave
clc
fxch
dec
popa
lods
dec
movsl
push
int
aad
std
negb
mov
pop
dec
pusha
mov
or
insb
dec
xlat
sti
pop
sbb
push
lret
outsl
and
fstpl
or
jns
cmpsb
push
sub
inc
mov
and
mov
adc
movsl
push
mov
dec
pop
mov
adc
in
js
and
dec
push
insb
adc
das
and
mov
or
jb,pn
stc
clc
pushl
popl
jmp
movsbl
not
lea
mov
pushf
mov
jmp
or
daa
movsl
mov
jp
and
cmpb
out
cmp
sbbb
lahf
inc
pop
xor
das
sub
paddusw
lcall
test
sub
imul
sbb
repz
inc
dec
adc
loopne
scas
mov
mov
nop
mov
pusha
push
mov
loope
mov
jge
pop
inc
xor
or
lock
cmp
pop
stc
xchg
mov
mov
cli
pushl
jg
mov
lret
cmpsb
sar
inc
dec
add
push
call
push
xchg
adc
loopne
mov
call
int3
aas
fadds
mov
test
addr16
imul
dec
test
std
mov
inc
pop
jae
sub
outsl
fs
fwait
xor
fdivp
cmpsb
mov
jg
mov
push
pop
dec
dec
test
mov
sub
adc
sbb
inc
jge
add
adc
es
repz
or
call
fnstcw
sbb
mov
add
xor
jnp
xor
in
call
fwait
hlt
or
out
fs
es
stos
outsl
cmc
lock
inc
mov
call
aaa
fwait
out
jne
jnp
jg
jg
and
sub
fwait
push
daa
rcl
lret
mov
xor
add
pushf
pushf
lea
jmp
shld
add
add
movzbw
bt
mov
sbb
mov
cmp
push
bt
repnz
jmp
shrd
mov
xor
push
lods
sbb
mov
mov
dec
nop
xchg
pop
movsb
push
dec
jo
scas
xor
mov
call
loop
fwait
cmp
add
pushf
bound
push
pusha
or
aam
and
xor
stos
shl
and
sbb
lea
ja
push
lea
jne
shld
stc
jmp
lea
jne
stc
stc
xadd
mov
cmp
sub
call
rep
bswap
not
not
pusha
mov
movw
movw
pushf
movb
lea
jmp
jmp
call
add
movw
mov
pushf
call
pushf
mov
pusha
jmp
mov
pushf
movb
lea
je
jmp
not
push
sub
jo
add
test
jne
cmp
sub
push
push
clc
movw
neg
test
sub
mov
pusha
mov
cmc
sub
jmp
movb
cwtl
cmp
stc
sub
pushf
call
mov
movb
movb
movb
push
mov
jmp
mov
mov
test
bt
push
cmp
add
movb
lea
jmp
rcr
bt
ror
test
mov
rol
seto
seta
mov
cmc
add
push
pushf
pusha
mov
mov
pushl
push
lea
jmp
jmp
pushf
repz
popl
mov
mov
call
stc
jmp
push
call
inc
not
bts
neg
add
rcl
dec
and
lea
shrd
ror
sub
xchg
mov
sar
ja
mov
lea
rol
cmc
add
lea
xchg
mov
dec
movzbl
inc
btc
xor
dec
and
add
neg
movsbw
push
pushl
dec
sar
bt
neg
rol
xor
call
pushf
pushl
mov
pusha
pushf
mov
lea
jne
pusha
movb
pusha
mov
jmp
lea
ja
mov
push
movl
lea
jmp
pushl
popl
jmp
or
pushf
mov
shr
add
mov
jmp
movb
mov
jmp
not
clc
not
jmp
cmc
jmp
pusha
mov
jmp
pusha
call
pushf
pushl
popl
pusha
pushf
pushl
lea
jmp
call
mov
mov
mov
pushl
pushf
push
pushl
popl
jmp
sub
movb
div
movw
pusha
mov
call
mov
push
call
pushl
popl
pushl
pushf
lea
jmp
bswap
mov
pushf
mov
jmp
mov
pushl
jmp
jmp
movl
pushl
popl
pushf
lea
jmp
mov
push
call
pusha
call
mov
pushf
mov
pusha
pushf
lea
jmp
sub
mov
stc
stc
bt
mul
pusha
movb
call
call
pushf
pushf
popl
pusha
pushl
popl
pushf
mov
mov
pushf
lea
jmp
mov
pusha
jmp
add
not
bswap
test
mov
bsf
mov
test
cmc
call
neg
shl
mov
pusha
clc
add
pushl
push
lea
jmp
pushl
popl
movw
lea
jmp
pusha
mov
pusha
jmp
pusha
mov
jmp
mov
mov
mov
pushf
movb
push
pushl
lea
jmp
lea
jne
or
rol
neg
or
mov
test
call
pushf
pusha
jmp
ror
neg
movzbl
pushf
clc
sub
pusha
neg
test
xor
call
pushl
push
pushl
popl
pushf
call
jmp
mov
mov
movsbw
jmp
movw
mov
pushf
mov
call
movw
pushf
pushf
popl
push
jmp
push
pushf
popl
jmp
bt
clc
push
shl
pushf
movb
jmp
ror
clc
call
pushf
mov
pushf
mov
push
pushl
popl
pushf
pushf
movb
movl
pushf
lea
jmp
pusha
neg
mov
shl
rol
mov
call
pusha
push
pushf
pushf
mov
pushf
push
pushl
mov
pushf
push
mov
call
bt
add
push
pushf
jmp
neg
xor
lea
cmp
pushf
movb
cmp
push
push
jmp
movw
call
call
mov
call
call
xadd
inc
mov
shl
cmc
or
mov
add
setl
not
mov
push
jmp
lea
call
mov
pushf
push
seto
mov
movsbw
setbe
push
pop
mov
lea
mov
pushf
pushl
pushl
pushl
ret
sub
jmp
xchg
bsr
mov
pushf
pushf
inc
add
lea
not
mov
not
setns
movzbw
setg
inc
rcl
xor
cmc
neg
pusha
movsbw
dec
rol
mov
shrd
lea
neg
not
shr
xor
ror
call
jmp
ror
sbb
ror
inc
sub
and
shld
ror
btc
pusha
mov
clc
pushf
add
jmp
pushf
popl
pushf
push
pushf
pushl
popl
pushf
mov
lea
jmp
jmp
pusha
sub
lea
jge
shr
push
movl
pusha
jmp
mov
push
pusha
mov
mov
lea
jmp
add
add
jmp
push
mov
jmp
ror
pushf
cmc
add
pusha
stc
mov
movl
movw
pushf
sub
pushf
movw
jmp
mov
neg
rcr
shr
sub
movsbl
rcr
call
mov
movb
lea
jmp
sub
cmp
pusha
neg
mov
call
mov
jmp
pushl
popl
movb
pushf
mov
call
btc
rcl
mov
cmc
test
sub
bt
jmp
cmp
stc
add
pushf
lea
jmp
mov
mov
call
pusha
sub
movb
lea
jne
pushf
stc
xor
pushl
push
pusha
xchg
pushf
jmp
pushl
popl
pusha
lea
jmp
bt
pushf
add
pusha
movw
lea
jmp
push
cmc
pushf
sub
cmc
push
cmc
cmc
neg
bt
add
push
movb
stc
sub
jmp
neg
bswap
add
aas
mov
bt
call
repz
popl
mov
pushf
call
pushl
popl
push
push
call
shrd
jmp
call
cmp
xchg
movsbl
ror
mov
bt
shl
mov
jmp
pusha
xor
jmp
pusha
pushl
mov
push
jmp
mov
call
inc
shl
bsr
mov
test
cmp
test
add
call
push
mov
push
mov
sub
call
inc
mov
bt
rol
bt
mov
cmp
push
add
pusha
push
mov
mov
pushl
pushf
lea
jmp
bsf
rdtsc
cmc
pusha
sub
movb
movl
mov
pusha
movb
jmp
push
lea
bswap
pushf
repz
popl
lea
jmp
pushf
call
mov
mov
lea
jmp
mov
jmp
movl
mov
pushf
pushl
lea
jo
push
push
call
sub
not
shr
push
mov
rcl
mov
pusha
bt
sub
cmp
clc
cmp
shl
mov
call
pusha
mov
pusha
mov
push
lea
jmp
mov
jmp
sar
mov
push
bt
jmp
and
mov
not
mov
test
cmp
cmp
cmc
add
call
pusha
movl
jmp
repz
popl
pushf
mov
call
jmp
xadd
shr
shl
mov
and
push
sbb
mov
mov
or
mov
stc
call
add
clc
rol
rcr
movzbl
cmp
add
call
bt
test
stc
sub
stc
neg
pushl
call
pushf
sub
test
sub
pushf
jmp
push
mov
pushf
pushf
lea
jmp
lea
jg
not
bswap
ror
clc
add
clc
mov
stc
add
push
call
mov
pushf
mov
call
aas
bswap
push
aaa
mov
shr
mov
cmp
clc
mov
pusha
mov
cmc
cmp
cmc
jmp
lea
pop
pushf
sub
jmp
xchg
bt
jmp
mov
stc
stc
jmp
call
pusha
mov
jmp
pushf
mov
pushl
pushl
popl
pushf
jmp
pusha
sub
pushf
pushf
call
rol
bt
bt
add
push
pushf
pushf
mov
pushf
pushl
ret
mov
movl
call
mov
call
lea
jb
push
pusha
mov
mov
push
push
mov
pusha
pushl
popl
mov
jmp
pushl
popl
push
lea
jmp
movb
mov
call
call
movl
movl
mov
lea
jmp
bt
jmp
call
pusha
pusha
mov
pushf
mov
call
pushf
push
mov
movb
jmp
pusha
cld
pushf
jmp
mov
push
pusha
push
movb
lea
cpuid
test
sub
pusha
movb
pushl
cmpl
call
inc
jmp
mov
mov
pushf
pusha
lea
jmp
jmp
sub
bts
mov
mov
clc
cmc
jmp
mov
mov
pushf
mov
mov
pushl
push
mov
call
shld
add
call
movb
mov
pushl
call
not
sbb
adc
test
mov
test
call
pusha
pushf
push
mov
call
call
sub
stc
movb
cmp
stc
sub
bt
clc
mov
movb
sub
pushf
jmp
stc
cwtl
jmp
pushl
mov
call
pushf
jmp
call
pusha
pushf
pushf
pushf
mov
pushf
mov
mov
push
mov
push
pushf
call
push
mov
mov
pushl
push
lea
jmp
mov
pushf
mov
call
push
pushf
movl
mov
pushl
jmp
pusha
mov
pushf
lea
jmp
jmp
pushl
inc
cmc
pushl
not
pushf
clc
call
pushf
popl
call
jmp
jmp
pushf
stc
call
mov
movb
call
mov
mov
mov
pushf
mov
call
mov
call
pusha
mov
movb
pushf
mov
jmp
mov
movb
pushl
lea
jmp
pushl
call
pushl
popl
jmp
sub
cmc
call
jmp
pushf
pushl
popl
pushl
movl
mov
pushl
pushf
mov
lea
jmp
push
movl
pushf
movb
pushf
lea
jmp
rep
push
mov
mov
dec
mov
bt
pushf
movl
pushl
popf
movw
movb
movb
mov
lea
jmp
call
pushf
call
xadd
rcl
movzbl
xor
ror
add
push
inc
pusha
jmp
mov
call
jmp
mov
jmp
mov
pushf
pushf
movl
pushf
popl
pushl
jmp
call
jmp
add
cmp
stc
xor
cmc
sub
clc
cmp
cmp
cmp
mov
pushf
mov
movb
sub
pushf
lea
pushf
push
mov
pushl
mov
pushf
movb
lea
jmp
call
pusha
mov
mov
call
movl
push
pushf
movb
push
lea
jmp
stc
test
cmc
xor
jmp
lea
ja
pushf
lea
jmp
movl
movb
movb
lea
jmp
movb
mov
pushf
movb
jmp
sar
mov
stc
mov
bt
clc
add
pushf
lea
jmp
add
inc
jmp
mov
push
call
repz
popl
jmp
pushf
popl
mov
pushl
popl
pushf
lea
jmp
mov
mov
mov
call
mov
call
add
jmp
bswap
not
lahf
push
setns
jmp
lea
jnp
pushf
mov
jmp
mov
pushf
pushl
repz
popl
movb
jmp
pushf
popl
movb
call
jmp
pushf
popl
jmp
movb
mov
jmp
mov
pushf
pusha
lea
jmp
not
and
mov
dec
test
ror
add
btr
jmp
bt
bt
add
push
cmc
shld
pushf
pusha
lea
js
pushf
mov
jmp
push
mov
stc
pusha
add
pushf
movb
push
lea
jmp
sete
jmp
lahf
bsr
mov
push
rol
mov
stc
mov
stc
clc
test
not
clc
not
cmp
cmc
sub
clc
cmp
clc
stc
and
mov
mov
call
movb
mov
mov
mov
mov
pushf
call
xchg
push
push
not
movsbw
mov
bswap
push
pushf
pusha
mov
inc
pusha
jmp
bt
add
call
call
mov
xchg
movw
mov
mov
jmp
pushf
pusha
pushf
popl
pushl
pushf
push
pushl
popl
pushf
pushf
movb
push
lea
jmp
push
call
cwtl
mov
test
mov
stc
add
pusha
pushf
mov
mov
pushf
mov
pushf
lea
jmp
repz
popl
pushf
movl
pushf
movb
mov
call
mov
pushf
call
repz
popl
call
pushf
movl
movw
mov
pushf
lea
jmp
movl
push
lea
jmp
call
jmp
mov
push
push
repz
popl
call
push
mov
pushf
pushl
popl
pusha
push
jmp
call
mov
pusha
lea
pusha
mov
pushf
pushf
lea
jmp
mov
pushf
lea
jmp
jmp
mov
pushl
pushf
mov
pusha
pushl
mov
call
movl
mov
movb
lea
jmp
mov
pushf
lea
jmp
lea
jae
pusha
pushf
movl
pushl
pusha
pushl
lea
jmp
pusha
mov
mov
push
pushf
movb
lea
jmp
pushf
pushf
push
movl
push
mov
movl
mov
lea
jmp
movl
pushf
movb
push
pushf
lea
jmp
jmp
pushf
jmp
pushf
popl
pushf
jmp
jmp
mov
pushf
pushf
push
mov
call
call
pushf
pushl
popl
pushf
mov
lea
jmp
mov
jmp
btc
btr
mov
not
jmp
jmp
bsr
shl
mov
clc
jmp
mov
mov
pushl
jmp
push
push
pushl
popl
pushf
mov
jmp
mov
pushl
pushl
push
pushl
lea
jmp
das
mov
call
pushf
mov
push
pushf
call
mov
pushf
pushf
lea
jmp
mov
call
push
pushf
popl
call
pusha
clc
sub
mov
movb
mov
movb
lea
jmp
push
mov
pushf
bt
jmp
call
rol
test
clc
pusha
add
pushf
mov
pushf
movw
pushl
ret
call
lea
mov
mov
mov
push
mov
push
push
pushf
movb
divl
movb
mov
push
jmp
push
pushf
mov
mov
push
pushf
movw
lea
jmp
jmp
jmp
jmp
shrd
btr
sar
mov
sbb
test
mov
bt
sub
stc
movb
bt
clc
shr
call
pushl
popl
pushf
lea
jmp
cmp
mov
bt
ror
cmc
mov
pusha
cmc
stc
sub
stc
cmp
pusha
shr
push
movb
jmp
mov
pushl
pushf
lea
jmp
pusha
movb
push
push
mov
call
pushl
pushl
popl
lea
jbe
push
push
lea
jmp
push
mov
movl
movb
mov
jmp
pushl
popl
movb
lea
jmp
jmp
not
rcl
movzbl
rcr
rol
bt
call
xchg
mov
cmp
bt
mov
bt
add
pushf
push
call
push
mov
push
pushf
pushf
pushl
mov
lea
jge
push
pushl
push
mov
jmp
movl
pushf
pusha
lea
jmp
pushf
popl
pusha
pusha
pushf
pushf
pushl
popl
mov
mov
mov
lea
jmp
pushl
popl
pop
mov
movl
lea
lea
inc
bswap
mov
not
mov
jmp
mov
pushf
popl
pushf
pusha
pushl
popl
pushf
pushf
pushf
lea
jmp
pushf
add
pushf
movb
movw
lea
jmp
call
pushf
mov
pushf
lea
jmp
mov
push
pushf
mov
pushf
mov
jmp
jmp
push
pushf
popl
call
mov
push
lea
jmp
mov
pushf
call
call
jmp
pushf
mov
movb
pushf
push
lea
jmp
mov
pushl
pushf
popl
pushf
jmp
bt
sub
movw
jmp
call
mov
jmp
movl
movb
pushf
push
mov
pushl
mov
pushf
pushl
ret
pushf
movb
jmp
add
movw
mov
pusha
push
lea
jmp
mov
call
pusha
jmp
mov
mov
pushl
call
push
pusha
mov
jmp
shr
test
and
mov
sbb
lea
ror
clc
sub
shl
cmc
neg
shl
mov
clc
xor
btr
rol
rcr
stc
rol
sub
sub
neg
shl
pusha
movzbl
bt
mov
cmp
cmp
pushf
or
jmp
jmp
push
lea
jne
pushf
mov
pushf
pusha
push
mov
lea
jmp
call
pushf
bt
and
add
bts
inc
mov
bt
sub
push
mov
call
cmp
pushl
pusha
lea
jne
bsr
test
sar
not
xorb
bswap
pop
pushf
lea
jmp
call
mov
pusha
pushf
popl
pushf
movl
pushl
popl
mov
pusha
lea
jmp
mov
pushl
movb
pusha
pushl
mov
lea
jge
pusha
mov
movb
call
movl
push
mov
movb
lea
jmp
add
call
mov
pusha
pushf
movb
lea
jmp
movw
movb
pushf
pushf
popl
mov
call
call
bsf
clc
sbb
mov
test
jmp
sub
jmp
or
test
mov
cmp
sub
pusha
push
push
cmc
and
pushf
call
clc
push
shrd
lea
jb
mov
push
jmp
setne
and
cmc
lea
push
bsr
sar
shr
and
bsf
shld
lea
bsr
sub
pop
pushf
lea
mov
mov
pushf
not
pushf
popl
movsbl
push
movsbw
mov
push
pop
mov
mov
mov
lea
pushf
pushl
pushf
xchg
cld
pushl
mov
push
call
jmp
pushf
repz
popl
pushf
push
mov
pushf
pushf
mov
movb
pushl
call
jmp
call
push
jmp
mov
push
push
jmp
sub
shl
sbb
movzww
test
bt
pushf
sub
cmc
lea
jne
xor
test
sub
push
neg
clc
stc
add
cmc
clc
push
sub
bt
call
push
mov
pushf
ror
shr
inc
not
add
movsbw
mov
clc
add
pusha
mov
movb
lea
jmp
call
mov
pushl
popl
movw
movw
movl
movb
lea
jmp
repz
popl
push
jmp
sub
pushf
pusha
lea
je
pushf
mov
pushf
pushf
lea
jmp
jmp
test
mov
jmp
pushl
mov
pushf
pushf
push
pushl
popl
mov
pushf
call
mov
call
jmp
mov
jmp
call
mov
push
movb
repz
popl
jmp
call
cmc
sub
mov
cmc
movsbw
mov
sub
clc
ror
ror
add
rcr
xor
clc
sub
jmp
test
shl
pusha
movb
cmc
shr
test
or
test
bt
bt
pushf
xor
pushf
call
clc
clc
add
push
mov
push
pushf
movb
pusha
lea
jmp
rol
mov
pusha
sub
call
pushl
pushl
popl
push
lea
jmp
cmc
bsf
shr
mov
mov
clc
clc
stc
cmc
sub
cmp
clc
pusha
cmp
lea
jmp
pusha
mov
pushf
pushf
repz
popl
mov
jmp
jmp
pushf
pushf
push
pushl
popl
mov
lea
jmp
mov
movb
mov
call
pusha
pushl
popl
jmp
call
sbb
stc
pushf
shl
mov
cmp
stc
add
pusha
lea
jmp
pushf
mov
movb
call
call
movl
movl
movb
mov
mov
movw
lea
jmp
bt
bt
clc
rol
clc
bt
test
jmp
jmp
jmp
lahf
xchg
mov
cmp
rol
dec
mov
cmc
cmc
sub
cmp
test
shl
jmp
pushl
mov
lea
jnp
push
mov
pushf
pushf
popl
pushf
pushl
popl
movb
lea
jmp
and
bt
mov
call
call
push
jmp
inc
mov
push
add
pusha
pushf
movw
pushl
lea
jmp
sub
mov
mov
pushl
pushf
lea
jmp
pushf
popl
push
call
decl
mov
jmp
jmp
call
add
push
pushf
push
mov
push
pushf
mov
mov
movb
pushf
lea
jmp
jmp
pushf
mov
mov
jmp
pusha
pushf
pushf
pushl
mov
push
lea
jmp
bsr
lea
cmp
neg
movsbw
sub
rcl
pusha
ror
and
jmp
movl
pushf
lea
jmp
pushf
jmp
jmp
shr
aad
mov
test
mov
cmc
pusha
jmp
aaa
rol
mov
btr
dec
dec
mov
rcl
clc
shl
mov
test
add
pusha
jmp
mov
pushl
pushf
repz
popl
push
mov
push
movb
mov
jmp
movzbl
rcl
btr
btc
mov
pushf
call
cmc
bt
pushf
add
pusha
mov
jmp
mov
pushf
pushl
lea
jmp
mov
mov
mov
mov
push
pushf
repz
popl
call
inc
clc
add
push
testl
mov
add
testl
or
testl
or
add
xchg
add
fdiv
add
cltd
testl
loopne
testl
clc
lret
testl
ror
testl
ror
testl
loopne
testl
mov
add
xor
add
inc
clc
add
jne
add
ret
or
add
test
add
adc
add
imul
add
testl
mov
add
aaa
clc
add
clc
add
aaa
clc
add
clc
add
jle
add
stc
testl
mov
mov
add
xor
add
nop
testl
adc
clc
add
jbe
add
inc
clc
add
jle
add
push
testl
lock
clc
add
ds
add
inc
clc
add
nop
testl
js
testl
adc
testl
lock
clc
add
pop
testl
lock
testl
clc
shl
add
testl
rolb
enter
mov
testl
call
mov
add
cltd
testl
add
add
cs
add
mov
add
adc
add
cltd
testl
js
testl
enter
clc
cmp
add
adc
add
xchg
testl
sbb
add
into
testl
enter
call
outsl
clc
add
outsl
clc
add
xchg
testl
push
xor
add
inc
clc
add
mov
add
insl
testl
nop
xchg
add
mov
add
pop
testl
lock
clc
add
sub
testl
mov
test
clc
add
testl
nop
inc
clc
add
inc
clc
add
aad
add
mov
add
ds
add
insb
testl
enter
call
shl
add
clc
add
push
testl
fadd
testl
enter
call
mov
testl
call
js
add
clc
add
imul
mov
xchg
testl
fdivs
clc
add
xor
add
testl
loopne
clc
add
popa
testl
xor
add
clc
add
testl
adc
testl
rclb
add
ds
add
testl
loopne
testl
call
pop
testl
rcl
testl
mov
testl
and
add
push
testl
xor
add
inc
clc
add
xor
add
clc
add
jnp
add
inc
clc
add
ds
add
sbb
add
clc
add
js
add
testl
nop
cltd
testl
fsubs
add
popa
testl
loopne
testl
rorb
testl
fmul
testl
lock
loopne
testl
mov
add
sbb
add
testl
xor
add
cmp
add
pushf
testl
adc
add
testl
clc
imul
mov
push
testl
pop
xor
add
clc
add
insb
clc
add
xor
loopne
testl
adc
clc
add
sub
testl
sbb
testl
call
xchg
testl
rclb
add
inc
clc
add
inc
clc
add
insb
testl
pop
not
rcl
push
mov
stc
cmc
mov
bt
add
pusha
pushf
lea
jmp
aaa
xor
or
mov
sets
rol
bt
mov
cmp
add
call
xor
clc
sub
cmp
jmp
call
mov
jmp
pushf
mov
pushl
popl
jmp
sub
mov
lea
adc
bsr
add
mov
stc
call
mov
mov
push
jmp
jmp
mov
push
pushl
call
jmp
movb
movb
mov
pushf
call
cmc
stc
shr
pusha
jmp
rol
shl
not
bsf
mov
bsf
lahf
pop
shl
aad
test
add
pop
ror
pop
add
movzbl
das
pop
aas
aaa
bt
inc
pop
shrd
shl
bt
pop
btc
pusha
pushl
popf
mov
lea
jmp
lea
mov
cmp
clc
jmp
bt
cmp
sub
cmc
neg
push
clc
stc
xor
bt
rol
clc
sub
clc
pushf
cbtw
stc
test
add
pusha
pushl
stc
cwtl
bt
test
mov
clc
sub
call
push
pushf
mov
pushf
mov
call
cmp
rcl
sbb
notl
add
call
call
mov
push
pushf
popl
call
cmc
stc
pushl
popl
pusha
clc
bt
add
cmc
pushl
popf
movb
movl
movb
pusha
lea
jmp
pushf
movw
pusha
pusha
mov
pushf
mov
movw
jmp
pusha
bswap
pop
mov
test
jmp
push
mov
mov
pushf
pushf
mov
call
jmp
movb
call
push
movl
pusha
lea
jmp
mov
pushl
mov
pushf
pushf
lea
jmp
bswap
bswap
mov
stc
cmp
jmp
mov
mov
call
neg
clc
sub
pushl
sub
mov
jmp
movl
push
movb
pushf
lea
jmp
pushl
popl
pushl
pushf
movb
mov
lea
jmp
mov
mov
movw
mov
lea
jmp
test
and
pushl
pushf
mov
call
push
call
pushf
mov
pushf
jmp
dec
bt
call
lea
lahf
movsbl
movzbw
mov
push
movl
mov
pushf
mov
pusha
call
movl
mov
pushf
mov
pushl
mov
mov
jmp
pushl
popl
call
