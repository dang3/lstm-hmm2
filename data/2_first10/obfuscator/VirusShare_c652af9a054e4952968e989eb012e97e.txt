inc
push
mov
add
imul
sbb
xchg
outsl
add
imul
add
add
outsl
add
or
jp
add
xchg
add
dec
jno
inc
and
into
lods
lds
xchg
mov
xchg
add
in
or
mov
xchg
ja
incb
push
popl
or
inc
outsl
cmpsb
push
popl
subl
push
popl
ljmp
sahf
ljmp
les
push
popl
xchg
xchg
mov
lea
push
sub
add
sub
add
jp
popa
jns
cmp
and
into
mov
jns
xchg
mov
jmp
jmp
jmp
aad
inc
inc
mov
push
lods
xchg
lock
add
inc
sub
xchg
lock
add
add
xchg
mov
jns
mov
push
xchg
ret
push
add
das
sbb
mov
fwait
in
mov
add
mov
mov
mov
mov
push
popl
jns
das
mov
subl
popl
das
mov
in
icebp
mov
xchg
ljmp
adc
jp
add
inc
test
stc
push
popl
das
sub
jbe
mov
shlb
out
inc
jbe
mov
cmpb
add
cmp
into
orl
mov
inc
xchg
mov
sbb
popa
fdivrl
jmp
jmp
jmp
jmp
jmp
scas
inc
push
or
cmpb
add
adc
add
add
stc
xorl
push
imul
insl
fisttpll
stos
jp
mov
xchg
add
add
push
popl
jp
outsl
lock
popl
jp
aam
cmp
push
popl
xorl
xchg
cmp
push
popl
xorl
cmp
ljmp
add
push
add
imul
aam
cmp
add
add
mov
add
mov
add
jle
push
popl
subl
jp
xor
popl
xchg
jmp
xchg
adc
xchg
add
mov
add
mov
add
add
xchg
add
jno
jmp
sbb
arpl
fs
inc
jno
jmp
sbb
arpl
fs
cmp
mov
mov
jp
ja
xchg
add
test
lods
fs
xchg
fildll
loop
fiaddl
push
mov
out
sti
lods
fwait
fwait
jp
mov
xchg
add
mov
subl
cmp
inc
ja
rolb
mov
pop
pop
into
inc
adc
jp
scas
cmp
cmp
cmp
movb
add
lods
add
pop
pop
into
jns
into
into
jp
sub
xchg
add
out
.byte
xchg
push
mov
dec
fstl
test
sub
sub
jecxz
sub
pop
insl
sbb
sub
add
fstl
mov
inc
sub
movsl
mov
rorb
pop
jno
sub
sub
xchg
pop
sub
sub
sbb
xchg
or
cmp
ss
sbb
pop
sub
sub
pop
ficompl
sub
xchg
outsl
sub
or
dec
loope
cmp
sbb
inc
cmpsl
cmp
pop
out
cmp
sub
xchg
push
loope
ss
push
sub
rcrb
sub
outsb
outsb
pop
dec
sub
cmp
or
sub
sub
fnstenv
cmp
pop
fs
sub
dec
sbb
movsb
rorb
sub
lret
sub
into
sub
cmp
or
pop
lahf
stos
sbb
sub
sub
rcrl
mov
mov
push
mov
vmread
sahf
mov
dec
scas
add
mov
mov
sbb
mov
into
or
movsb
shlb
notb
cmpsl
cmp
das
mov
scas
or
das
dec
das
imul
pop
fs
outsl
sbb
loope
fstl
loope
fstl
das
push
popf
jge
cmpsl
pop
push
cmp
sub
ret
cmpsl
leave
pushf
cmpsl
pop
cmpsb
jmp
sub
pop
sub
cmpsl
pop
cmpsb
in
pop
icebp
cmp
sub
jo
iret
stos
cmpsl
pop
cmpsb
lods
pop
add
sub
das
fcomps
int3
cmpsl
pop
cmpsb
pop
cmpl
or
mov
pop
sbb
pop
inc
ja
cmp
add
sub
das
stc
dec
sbb
cmp
stos
pop
lock
sub
xchg
ja
cmpsb
repz
inc
orb
sub
das
xchg
cs
cmpsl
pop
cmpsb
pop
pop
iret
cmp
sub
mov
pop
cmpsb
xchg
pop
mov
push
jae
fsubs
add
mov
pop
cmpsb
xor
sub
das
dec
mov
cmpsb
add
sub
sub
mov
stos
or
dec
stos
rorb
mov
ss
adc
add
mov
add
dec
dec
ds
sub
or
loope
ss
mov
cmpsl
or
in
pop
add
mov
loope
mov
or
push
sbb
sub
or
scas
pop
add
mov
pop
jnp
ja
adc
sub
sbb
outsl
dec
sbb
push
scas
lahf
mov
adc
shrb
andb
jnp
mov
sbb
rorb
pop
mov
add
sahf
sbb
mov
jnp
fs
add
jnp
dec
into
sub
inc
in
pop
add
jnp
cmpsb
push
dec
sbb
add
mov
sbb
cmpsb
jnp
cmpsl
pop
xchg
dec
mov
sbb
sub
pop
outsl
dec
enter
sbb
sub
add
loope
mov
or
pop
xchg
pop
dec
pop
faddl
pop
fmul
pop
dec
pop
fstl
mov
or
fstl
mov
sbb
lock
cmpsb
xchg
or
push
rorb
orb
fstl
sub
sub
xchg
or
sub
mov
repz
or
outsb
fstl
sub
sub
xchg
imul
sub
repz
or
outsb
fstl
sub
sub
fsubrl
fstpt
dec
sub
rorb
orb
fstl
sbb
mov
cmpsb
jnp
jle
add
int3
sbb
xchg
add
fs
sbb
sub
add
loope
fstl
sbb
lods
mov
sbb
fstps
cmpsb
or
fstl
sbb
or
sbb
sub
cmpsb
pop
or
fstl
sbb
fisttpll
sbb
push
sbb
fstps
jnp
pop
sbb
pop
dec
push
frstor
sub
dec
cmpsb
frstor
sub
or
loope
movsl
sbb
add
jnp
cmpsb
xchg
or
in
pop
fmul
sbb
sbb
sbb
sub
repz
or
outsb
fstl
loope
fsubrl
faddl
dec
jnp
mov
cld
or
outsb
fstl
sbb
cmpsb
jnp
fs
sub
sub
cmpsb
frstor
sub
or
loope
fstl
sbb
add
jnp
cmpsb
xchg
or
sbb
sarl
in
sub
jnp
sbb
loope
fstl
sbb
jnp
mov
sbb
mov
repz
or
outsb
fstl
sbb
sub
mov
test
jbe
sub
test
sub
xchg
add
and
cmpsb
mull
add
fstps
cmpsb
xchg
sbb
xchg
add
jnp
cmpsb
xchg
or
sbb
dec
sbb
in
sbb
loope
ss
sbb
loope
mov
add
sbb
repz
xchg
sub
sub
xchg
stc
cld
or
xchg
cmpsb
outsl
in
sub
or
mov
sbb
outsl
sub
into
sub
sub
add
or
sub
mov
sbb
sbb
sub
sub
sub
fmull
cmpsb
push
sbb
loope
pop
cmpsb
fsts
dec
sub
into
scas
cmpsb
add
or
pop
imul
or
sbb
dec
sub
or
push
sbb
add
lret
rorb
fstps
add
cmpsb
outsl
or
int3
sbb
fisttpll
ja
test
movsb
mov
sbb
cmpsb
jnp
fcmovne
sub
cmpsb
inc
sbb
sub
sbb
xor
add
sub
xor
stos
sbb
sub
xor
repz
or
sub
xor
pop
outsl
sub
sub
xchg
mov
sub
xor
sahf
sub
sub
xor
sub
mov
scas
sub
sub
sbb
dec
sbb
mov
cmp
sbb
adc
mov
pushf
xchg
out
scas
sbb
lea
cmpsb
push
das
sub
sub
repz
sbb
cmp
sub
sub
sub
sub
sub
pop
xchg
sbb
loope
xchg
cmp
jbe
ljmp
ss
ljmp
cmpsb
add
sbb
pop
repz
jnp
cmpsb
into
sub
or
inc
test
mov
shlb
sbb
sub
sub
sub
inc
sub
sub
jmp
lret
push
sub
mov
jnp
sbb
mov
or
fisttpll
jo
shll
fmull
dec
push
mul
or
or
test
cmpsb
jnp
sbb
push
sbb
add
ja
sbb
jmp
jne
mov
sbb
cmpsb
push
or
outsl
rorb
cmpsl
sahf
pop
add
loop
cmpsb
jnp
fcompl
fmull
fsubrl
or
cmpsl
xchg
push
or
outsl
rorb
cmpsl
dec
rorb
sbb
sbb
cmpsl
cmp
scas
sbb
jbe
sub
sub
into
sbb
sub
pop
faddl
sub
add
sub
sbb
sbb
fnstcw
or
fucom
xor
sub
in
sbb
add
inc
push
loope
fstl
scas
mov
or
pop
cmpsb
xor
xchg
mov
sub
sbb
push
or
loope
sub
sub
or
or
push
pop
out
jnp
add
in
sbb
push
sbb
xor
lock
loope
ss
scas
mov
faddl
pop
cmpsb
jnp
jnp
inc
outsl
scas
pop
fdivrl
cmpsb
jnp
sub
add
pop
int
sub
mov
adc
or
jnp
add
add
sbb
or
pop
inc
cmp
cmpsb
jnp
sub
fcmovne
sub
dec
into
sub
add
cmpsb
push
sub
dec
fnstcw
or
fstl
in
sub
into
sub
cmpsb
into
movsb
shlb
push
pop
es
jns
nop
test
sbb
sbb
push
shrb
shrb
jnp
sbb
ss
test
jnp
cmp
imul
lock
or
cmp
cmpsb
jnp
cmpsb
jnp
imul
jnp
or
cmp
mov
jo
sub
cmp
push
or
mov
xchg
notb
sbb
or
test
add
adc
mov
cmpsb
into
idivb
shlb
test
gs
add
sub
in
outsl
ja
pop
sub
sub
adcl
or
ja
sbb
push
xor
outsl
ja
das
push
sbb
sub
xchg
cld
or
sub
mov
cld
or
cli
sbb
and
sahf
sub
dec
sub
or
push
loope
pop
cmpsb
push
fsubrl
sub
rorb
pop
cmpsb
push
fstl
dec
or
cmpsl
xchg
add
cmpsb
push
pop
jmp
sub
sub
sub
out
jnp
out
outsl
or
cmpsl
push
dec
sub
sub
push
or
push
pop
cmpsb
outsl
sbb
lret
rorb
cli
sbb
cmpsl
cmp
adc
scas
cmp
pop
push
pop
adc
pop
sar
pop
cmp
push
sub
ss
cmp
or
cmp
or
outsb
xor
or
outsb
sbb
loope
ss
sbb
add
xlat
mov
rorl
mov
loope
fmull
cmp
or
add
jbe
movsb
outsl
sbb
shlb
sub
xchg
jmp
call
jmp
mov
in
cmp
lret
sbb
sbb
js
sbb
sbb
loope
imul
loope
ss
push
fldcw
ss
sbb
sbb
mov
scas
add
mov
jnp
or
push
ss
into
sub
out
dec
imul
mov
or
adc
fincstp
xchg
sbb
sbb
scas
mov
aas
sbb
mov
mov
andb
sub
loopne
inc
sbb
mov
andb
mov
pop
cmpsl
sbb
mov
sbb
das
xor
or
or
das
lcall
add
gs
das
movb
scas
add
pop
lea
pop
or
das
jbe
sub
scas
add
pop
ss
sbb
lea
jmp
add
imul
lea
pop
sbb
pop
jnp
shrb
dec
mov
sub
or
mov
andb
dec
jbe
iret
add
jmp
sub
cmpsl
dec
rorb
or
fdivrl
mov
sbb
pop
es
test
cmpsl
cmp
mov
push
push
push
sbb
outsl
push
push
mov
inc
rcrb
or
outsl
outsb
pop
or
mov
cmpsb
xchg
rcrb
or
out
sub
sub
sbb
mov
cmpsb
xchg
rcrb
or
cmpsb
outsl
sbb
push
ss
sub
insb
movsb
add
shl
xor
mov
inc
sub
ja
imul
lcall
mov
scas
jge
pop
repz
lods
pop
cmc
fdivs
scas
stos
scas
xor
mov
scas
push
ror
ret
addr16
xor
mov
das
adc
mov
movsl
scas
cltd
lock
cmp
jecxz
or
out
fisubl
fs
inc
fcoms
sbb
sub
idiv
lock
out
fisubrl
xchg
jne
cld
leave
imul
mov
idivl
aaa
test
add
aam
outsb
push
in
mov
push
mov
dec
sub
outsb
rol
lret
icebp
iret
sbb
add
pop
jbe
dec
test
clc
call
mov
aam
push
ret
xchg
aad
sahf
dec
fidivl
insb
outsb
ret
and
lret
cmp
dec
movsb
push
push
or
pop
aam
lds
mov
inc
dec
outsl
lahf
clc
outsl
pushf
pusha
jo
dec
inc
ljmp
and
push
stc
mov
push
pop
subl
jle
inc
ss
loop
adc
mov
or
ja
aaa
jo
mov
in
inc
iret
or
test
cmp
push
repz
rcrl
cli
mov
sahf
jecxz
aaa
mov
mov
in
fisttps
rcrb
ret
leave
and
pop
pop
xchg
push
pop
inc
sub
movsl
notl
dec
mov
cs
scas
inc
arpl
mov
test
sbb
fsubrl
mov
ljmp
aaa
sub
outsb
sarb
pop
xchg
xchg
mov
stos
loop
xorl
lods
xchg
mov
push
bswap
cld
push
rcll
jecxz
addl
fcmovne
push
and
dec
stos
js
hlt
or
push
or
adcl
mov
xorb
movsl
push
shlb
jbe
dec
xor
cmp
fstpl
insl
ret
cmpsb
mov
or
ss
dec
cwtl
out
adc
sbb
cmpsb
ljmp
or
push
push
fcomps
xorl
sub
and
jo
aaa
jae
dec
mov
inc
insb
and
test
cmp
mov
aas
adc
dec
xor
in
pop
mov
xor
inc
repz
cmp
cltd
push
lcall
mov
loop
fs
ljmp
cmc
dec
cs
dec
mov
out
pop
mov
ja
mov
or
out
and
sbb
sbb
aad
jno
lret
fiaddl
lcall
mov
inc
push
or
out
xor
adc
pop
ja
ljmp
jns
insb
xor
pusha
jns
popf
add
lret
dec
push
inc
mov
and
idivl
jns
rorl
aas
push
repnz
mov
cmp
adc
sbb
movsl
mov
fnstsw
mov
and
out
loop
movsb
mov
dec
data16
subb
pop
lods
xchg
lea
daa
sub
mov
outsb
inc
pop
mov
xchg
push
pop
shrb
xchg
dec
adc
sbb
or
lods
dec
enter
jge
dec
ret
in
add
and
xor
jne
jl
dec
lods
xor
xchg
mov
roll
adc
int
xchg
pusha
xor
mov
jbe
dec
pushf
testl
fisubs
xor
call
es
repz
sbb
adc
out
jns
stos
fstl
xchg
pop
sub
sti
pop
sub
xor
add
pop
pop
loopne
js
inc
addr16
pop
cmp
pop
xlat
mov
daa
lret
xor
bound
jns
in
dec
cmpsb
cmp
dec
xor
add
sbb
jecxz
pop
cs
push
mov
cld
jle
fiadds
xchg
mov
mov
les
orb
sub
out
mov
lock
cmp
cmpsl
push
xchg
cld
jl
cmp
popa
mov
stos
aam
dec
movsl
call
aas
stc
es
push
mov
test
div
sti
dec
pop
cmpsb
add
and
mov
mov
pop
xchg
xor
xor
mov
lcall
cmp
xchg
push
xchg
xchg
sahf
fsub
push
cmpsb
jb
push
stos
jg
repz
mov
cmp
leave
ffree
out
js
adc
push
xlat
mov
shll
mov
dec
inc
xor
lahf
inc
add
call
andb
clc
pop
aad
jp
iret
scas
scas
inc
add
mov
cs
pop
xchg
jno
test
xchg
stc
sbb
push
dec
insl
es
xor
mov
out
in
cmc
test
mov
push
jecxz
ret
push
test
cmp
ds
je
xchg
icebp
aam
dec
psubd
cmp
dec
jne
sub
pop
xchg
mov
dec
jo
loopne
je
insb
rorl
movsl
cmovge
mov
mov
add
fildll
mov
test
mov
mov
jbe
sub
add
sbb
ljmp
ss
fbstp
sbb
mov
jl
and
mov
xor
push
imul
jle
iret
leave
xlat
xor
mov
mov
ja
cmp
into
adc
add
pop
mov
das
push
sub
mov
loop
test
dec
cmp
mov
outsl
idivb
mov
pushf
jnp
xchg
cli
jae
mov
aad
dec
mov
mov
and
inc
das
sbb
pusha
xor
lock
pop
jnp
pusha
hlt
aad
cmp
and
gs
inc
mov
nop
rcl
xchg
insl
adc
pusha
test
fbld
lods
push
sub
jmp
fnstcw
inc
lods
insb
mov
or
jae
push
fmull
les
jbe
adc
inc
xor
test
and
dec
les
mov
adc
pop
add
xor
enter
jp
rcr
loope
add
outsl
sub
adc
lea
testb
leave
cs
push
and
je
mov
scas
or
fcomip
ljmp
add
pop
pop
and
fldl
pop
call
add
std
rorb
sub
sbbl
je
push
lods
push
xchg
setb
add
inc
loope
ret
mov
mov
jecxz
push
mul
fldl
push
and
fcomi
mov
inc
and
push
inc
xchg
sbb
xor
pop
push
add
cmp
inc
push
pop
adc
jg
mov
into
sbb
add
jno
adc
and
cmpsl
or
or
push
push
cld
fsts
leave
cwtl
sti
mov
sub
hlt
pop
or
push
and
int
test
fldcw
mov
sbb
int3
dec
scas
mov
mov
aaa
add
es
pop
into
fwait
adc
sub
dec
movsb
loop
fidivs
mov
stos
cmp
mov
outsl
testl
add
test
sbb
xchg
negb
xchg
insb
outsb
xor
pop
cmp
lods
repnz
cmp
push
enter
or
jae
sbb
dec
jnp
mov
jne
into
sub
mov
pusha
outsl
aad
cmpsb
sti
add
jns
sub
cwtl
stc
into
sub
xor
push
fs
pop
mov
dec
mov
cmp
sbbl
into
mov
cmp
ret
test
pop
stos
cmp
mov
cld
add
push
stos
insb
dec
jmp
push
mov
addr16
push
mov
xor
cmpsl
adc
push
aas
fisubl
stc
bound
xchg
mov
test
hlt
pop
cwtl
rolb
xchg
cmpsb
cmp
loope
gs
mov
push
adc
mov
or
mov
mov
inc
xchg
aas
outsl
xor
rorb
mov
add
or
adc
sbb
outsl
jne
jbe
vmovdqa
jno
jmp
cs
shr
mov
or
addb
jge
sub
xor
test
or
dec
shl
lea
adc
jl
inc
repnz
pusha
dec
xlat
fs
lods
sarl
ja
sub
mov
mov
mov
rorb
sbb
cld
shl
pushl
scas
mov
bound
cli
push
xchg
testb
test
cmpsl
mov
test
or
shll
pop
repz
push
inc
lods
fwait
icebp
xor
out
fstps
add
dec
mov
enter
ret
adc
jmp
add
mov
int3
xbegin
add
arpl
cs
addb
xorb
lods
ljmp
ret
and
enter
pop
in
push
mov
jo
xor
adc
bound
adc
mov
mov
out
xchg
loopne,pn
loope
data16
adc
scas
js
cmp
add
dec
clc
push
cmp
aad
dec
sub
in
arpl
cmp
sahf
mov
sub
add
scas
jmp
jno
xchg
adc
jne
jae
mov
fstl
cmp
cwtl
andb
inc
mov
shrl
push
sbb
add
push
outsl
pop
ljmp
in
filds
pop
mov
xor
adc
incl
fldcw
inc
cmpsb
dec
mov
mov
mov
in
test
icebp
cmpsl
cmp
xor
lea
gs
mov
pop
repz
adc
in
testl
sub
mov
aam
mov
pop
sbbb
sub
fdiv
mov
imul
nop
pop
or
insb
jg
jns
lods
inc
xchg
adc
add
mov
jno
push
in
test
xchg
push
push
mov
add
pop
ret
ret
fnsave
das
push
ss
bound
jbe
dec
repz
sbb
into
rcl
mov
pop
ror
mov
xchg
cltd
cmpsb
mov
xchg
adc
daa
adc
adc
scas
dec
dec
mov
arpl
mov
rorb
inc
push
mov
push
inc
add
out
mov
repnz
cli
jns
cmp
popf
popf
out
mov
scas
push
sub
ds
dec
pop
out
fnsave
jns
insb
cld
xor
cmp
gs
mov
cltd
rorl
and
push
pop
push
bound
std
push
imul
cmp
scas
and
lahf
push
jecxz
sub
out
jle
lods
pop
dec
mov
das
mov
xchg
ret
aam
sbb
sbb
xor
gs
lahf
popf
enter
hlt
pop
cmp
xchg
xor
sbb
mov
sbb
sub
packsswb
jae
sahf
cmp
xlat
pop
gs
repnz
gs
adc
mov
xor
inc
pop
sahf
mov
sub
in
adc
jmp
cltd
pushf
mov
rcrl
inc
lea
nop
fwait
cs
in
icebp
shrl
push
pusha
cltd
or
or
mov
test
sbb
outsl
jl
sbb
mov
test
or
shlb
jecxz
pop
stos
pop
cmpsl
mov
in
sbb
inc
add
in
cmp
cmp
scas
xor
shr
es
inc
and
ja
movsb
adc
add
out
rcrb
jns
mov
xchg
hlt
cmpl
out
mov
fildl
insl
mov
mov
mov
mov
call
ret
daa
dec
scas
js
js
mov
out
mov
jge
push
nop
xchg
lea
dec
addl
adc
sub
mov
sarl
or
imul
dec
and
repz
push
push
shl
jae
js
popf
push
fs
mov
jbe
push
add
jne
and
mov
add
jmp
xchg
adc
ret
inc
shrb
stos
jmp
shr
imul
scas
or
scas
push
fwait
lods
inc
repz
and
ds
movsb
out
rol
test
dec
xchg
mov
inc
ud0
adc
int
stos
js
fdivr
jb
fidivs
rcrb
sti
and
outsl
xchg
mov
add
cmp
lret
and
jbe
push
popa
mov
adc
das
cmc
dec
xor
and
xlat
jl
test
arpl
daa
sbb
mov
push
ret
push
jecxz
cmp
lahf
cli
jge
dec
sahf
scas
out
popa
adc
cli
sarb
jp
cmc
mov
inc
stos
push
sub
cli
adc
xchg
fsubr
and
mov
dec
sbb
repnz
mov
out
mov
pop
mov
xchg
imul
mov
inc
lods
not
fsubl
jl
push
ret
ja
sub
push
les
daa
push
scas
adc
mov
push
jnp
jae
mov
sbb
push
xchg
fcomp
lea
jbe
lods
dec
add
lods
pop
aam
mov
sahf
out
ss
outsb
mov
mov
mov
jl
jns
pop
dec
and
push
iret
int3
inc
jb
stc
and
jno
cmpsl
pop
stos
inc
cmp
dec
fldt
inc
jmp
lret
inc
push
sub
enter
pop
mov
andl
pushf
or
in
jb
push
or
daa
das
pop
pop
rcll
imul
loop
xchg
loope
dec
pop
imul
dec
gs
test
cmp
fisttps
cli
xor
out
push
mov
pusha
inc
pushf
mov
ret
xchg
mov
dec
add
in
lock
inc
cmpsl
dec
hlt
pop
insl
test
test
pop
insb
inc
add
jp
rorb
xchg
div
ljmp
cwtl
lcall
filds
shlb
mov
jo
mov
out
ss
cld
xor
jp
imul
mov
js
inc
into
lds
and
push
inc
inc
dec
cs
and
and
dec
push
xor
mov
aad
decl
xchg
pop
call
mov
inc
adc
into
inc
push
rorb
push
or
pop
dec
dec
jb
inc
push
or
dec
sti
mov
add
out
pop
pop
inc
daa
nop
divl
ss
jmp
leave
pop
cltd
add
cmp
jns
jbe
xor
daa
pop
shlb
les
out
clc
cld
add
xchg
xlat
xor
packsswb
aas
nop
jg
mov
xor
lahf
sbb
add
out
dec
push
sub
shl
mov
pop
enter
mov
cltd
xchg
test
sub
or
daa
ret
xchg
fdivp
push
imul
push
mov
xchg
mov
adc
mov
pop
scas
arpl
push
dec
daa
cmpsl
leave
mov
push
mov
and
movsb
mov
aam
arpl
mov
test
scas
jl
pop
mov
rol
inc
popf
lock
ljmp
push
out
movsl
data16
fidivl
jns
push
popa
gs
test
and
ret
mov
iret
add
cs
add
insl
pop
pop
xchg
nop
sbb
inc
test
xor
pop
mov
das
cmpsb
mov
and
adc
jno
mov
xchg
xchg
mov
je
add
xchg
lock
out
mov
mov
stos
pop
fdivrl
adc
jnp
shl
jno
ret
push
mov
mov
adc
les
or
shll
rolb
jmp
sti
mov
cmp
push
inc
jg
sbb
fwait
leave
scas
pusha
sub
pop
int3
ds
sub
fmuls
push
ds
mov
out
jp
sub
push
push
mov
mov
adc
insb
sbb
cld
or
ds
test
popa
out
ja
adc
leave
push
jge
jmp
xchg
bound
dec
in
imul
cmp
movsb
jl
repnz
cmp
adc
sbb
rorl
push
out
jmp
scas
stc
pop
pop
test
push
dec
mov
pop
sti
mov
shlb
inc
or
dec
shlb
pop
stos
enter
adc
in
fwait
cs
pushf
mov
and
int
ret
out
int3
adc
out
arpl
testb
xchg
xor
lds
pop
int3
bound
adc
ljmp
inc
inc
cltd
aas
pop
mov
and
push
andl
or
pop
jp
xor
mov
cwtl
jg
push
inc
test
hlt
fsubr
mov
adc
shlb
clc
push
jg
cmp
pop
or
icebp
js
xchg
xchg
or
xor
adcb
int
jecxz
jne
jbe
call
fcomip
xchg
mov
sahf
xchg
nop
lret
fisubs
sub
mov
inc
pop
xchg
jb
mov
adc
push
adc
stos
rcrb
jle
rorb
andb
inc
or
adc
incl
dec
mov
movsl
mov
sub
xchg
dec
sti
mov
movsb
andl
mov
fcoms
add
sbb
adc
xor
stos
mov
sub
xchg
sub
lea
shr
mov
sarl
pop
inc
xor
mov
je
cltd
pop
xor
xor
jge
adc
mov
jp
add
xchg
dec
mov
out
out
mov
cwtl
pop
gs
push
aas
or
pop
mov
daa
aas
xchg
dec
pop
add
mov
xlat
xchg
gs
fcomip
test
push
arpl
sbb
jnp
lods
add
decl
lret
into
lret
adc
jp
jb
daa
or
hlt
es
dec
sub
mov
jg
mov
outsl
scas
insl
xchg
scas
roll
dec
sub
iret
clc
sub
mov
and
xchg
fcomps
adc
stos
jae
hlt
xor
inc
add
imul
cmp
dec
ljmp
push
mov
xchg
cmpsb
fbld
lds
cmc
fsubs
notl
pop
sub
or
mov
inc
orl
out
push
mov
test
adc
sbb
dec
ret
dec
mov
ds
jg
shlb
adc
jns
mov
aad
cmp
loopne
cmp
lods
or
cmpsb
jge
sub
sbb
std
pushl
mov
push
sbb
lods
mov
pop
mov
dec
push
in
jno
lret
inc
cmp
aas
dec
xor
cmp
lcall
lret
popf
insl
addr16
add
push
lret
mov
jne
lock
lahf
sbb
aam
jge
mov
lret
jp
outsl
pushf
ja
shlb
scas
aam
push
inc
ret
mov
sbb
daa
xchg
pop
lret
jle
neg
in
div
dec
insb
mov
aad
les
leave
les
aas
pop
jmp
dec
fcmovnu
clc
jl
mov
pushf
xor
cltd
push
rcrb
jo
sbb
dec
inc
stos
sub
sbb
mov
enter
mov
sbb
jne
or
pop
mov
int
dec
dec
sub
lahf
mov
js
clc
mov
clc
pop
adc
icebp
adc
xchg
imul
pop
push
dec
add
mov
scas
loopne
fstpt
or
test
insb
push
add
inc
hlt
fisttpl
into
mov
mov
lea
insb
into
add
pop
movsb
stos
cmp
sahf
dec
xchg
cmp
inc
js
repnz
ljmp
or
mov
cmc
pop
mov
add
adc
inc
fdivrs
push
adc
pushf
dec
inc
cmc
out
pop
popf
adc
inc
dec
cmpsb
jp
loop
insl
inc
or
mov
ljmp
pushf
pop
icebp
jp
mov
jmp
insb
scas
jae
in
scas
nop
jo
pop
mov
xor
mov
xchg
iret
cmp
dec
int3
jecxz
mov
adc
or
es
dec
rcrl
add
mov
insb
jnp
inc
pop
push
push
loop
and
cmp
loopne
sbb
aaa
fsubrp
loopne
push
sbb
mov
js
in
rolb
sub
outsl
adc
adc
jle
std
jno
push
mov
mov
sbb
clc
mov
inc
aam
mov
dec
jp
mov
ds
hlt
xchg
mov
stos
outsl
xlat
bound
cwtl
mov
adc
cs
cmc
int3
lds
sar
data16
sti
or
push
xor
cmp
cld
loope
or
mov
icebp
cmp
adc
aaa
inc
jmp
arpl
mov
cmpsb
cmp
sbb
dec
sub
shlb
pop
lods
jne
das
jbe
lods
arpl
jns
orb
sbbb
and
roll
inc
mov
mov
pop
inc
and
sbb
int
je
sbb
aam
cmpb
cs
insb
out
mov
into
inc
cli
xor
push
mov
sbb
out
jo
inc
and
pusha
xor
adc
jbe
idivl
icebp
ret
mov
leave
jg
adc
add
and
loopne
mov
ror
inc
and
adc
or
bound
mov
push
mov
push
js
mov
jmp
iret
jne
push
jns
mov
adc
xor
sub
sub
in
loopne
lret
mov
dec
jp
ja
loope
and
jbe
pushf
pushf
das
inc
push
cwtl
add
xchg
into
mov
add
sub
sbb
push
push
push
sub
cmc
shrb
pop
push
in
jnp
call
sub
push
jmp
inc
jne
xlat
int3
iret
sbb
dec
dec
xor
test
and
push
xor
dec
stc
fwait
sub
xor
cmp
roll
loop
lahf
fsts
filds
mov
dec
cmp
arpl
sti
xchg
movsl
loope
and
xor
mov
cmpsl
jnp
dec
aad
push
ds
negb
int3
std
dec
mov
jp
cmc
fisubl
mov
call
icebp
cli
inc
divl
or
aas
out
or
das
dec
dec
lahf
aad
pusha
xor
ss
cmpsb
loopne
or
pushf
stos
adc
movsb
imul
stos
lret
rclb
xor
push
fisttpl
test
fidivrl
addb
mov
notb
push
adcl
sbb
adcl
out
aaa
dec
ss
pop
arpl
in
mov
mov
pop
imul
or
out
inc
xor
sub
xor
push
sahf
repz
xor
ss
cld
imul
or
jae
popf
and
mov
pop
out
addl
test
add
jmp
dec
fsub
into
sbb
add
ret
or
inc
pop
hlt
inc
jbe
jnp
ficoml
ficoml
gs
aaa
inc
mov
mov
inc
scas
lahf
sub
jns
and
es
xchg
jo
sub
fcoms
xor
bound
sub
sbb
in
out
sarb
push
rorb
pop
movb
aas
fidivrl
stos
sar
popf
jecxz
xorb
in
pop
stc
jbe
add
xchg
xchg
in
adc
add
insb
mov
dec
loop
mov
scas
jle
and
mov
jmp
loopne
pusha
jb
inc
lcall
pop
inc
outsl
std
icebp
xchg
push
mov
pop
jmp
and
jl
cmp
adc
iret
mov
lock
lahf
xlat
sbb
cmp
int3
xchg
faddl
movsb
xchg
pop
add
arpl
fld
out
rol
xchg
cmp
mov
push
in
test
pop
ret
cld
ja
in
aaa
rorb
jl
lock
xchg
mov
sub
aam
loop
scas
std
or
repnz
sub
hlt
xchg
or
ror
orl
shl
lods
loope
sub
fldl
icebp
out
fisubrs
cs
mov
out
cld
cmp
push
rorb
pushf
sbbb
enter
jbe
cmpsl
jo,pn
pop
adcl
push
pusha
mov
inc
mov
mov
fidivs
pop
mov
push
and
mov
subl
jmp
pop
pop
bound
sbb
in
mov
inc
push
sbb
cmp
movsl
xchg
jp
mov
jp
jge
xor
add
insl
outsl
int
jae
in
jb
loopne
scas
or
mov
mov
sbb
adc
cmp
cmp
sbb
mov
jbe
fwait
pop
or
notl
fcoms
sbb
mov
les
sbb
aaa
xchg
pop
ret
dec
test
sbb
sub
sub
or
push
dec
imull
inc
hlt
xchg
lret
mov
add
push
and
jns
dec
subb
add
cmpb
inc
sbb
ja
mov
or
lcall
mov
mov
sbb
jg
mov
jl
inc
mov
mov
mov
cmpsb
into
mov
roll
dec
and
xchg
mov
dec
movsb
pop
fiadds
out
mov
adcl
pop
hlt
out
push
outsl
subl
aaa
pop
lahf
ror
dec
push
or
push
xor
imul
and
sub
in
jp
pop
add
and
dec
adc
shll
iret
dec
cmp
pop
es
adc
cmp
leave
pop
mov
scas
mov
dec
movsb
mov
push
add
sbb
xor
add
and
push
js
scas
repz
inc
jnp
imul
mov
add
subl
jg
cmp
inc
pop
pop
dec
in
les
in
push
or
mov
cmp
fimull
cmpsb
sub
std
dec
mov
lahf
xchg
push
dec
cs
test
stc
jno
mov
push
fisttpll
fiaddl
mov
subl
sub
jl
pop
pop
mov
xor
jl
out
inc
cmc
push
cltd
negl
daa
outsl
gs
ds
cmc
insb
jo
aas
xchg
or
cmp
mov
test
mov
xchg
mov
mov
ja
pop
sub
loope
push
data16
xchg
xchg
cs
or
sarl
dec
cmc
fwait
ljmpw
lods
mov
xor
pop
jnp
cmpsb
xchg
adc
test
pop
or
cwtl
push
mov
imul
or
mul
inc
push
idiv
mov
dec
negl
mov
mov
rcrb
test
data16
mov
add
test
inc
mov
pop
fists
es
out
in
mov
jmp
xor
sub
pusha
aad
push
mov
pop
sbb
jp
fidivrs
int3
aad
sar
sbb
add
push
ffreep
or
aad
daa
adc
jecxz
mov
jo
sbb
push
sbb
inc
push
inc
sbb
adcb
lret
jae
ss
push
ret
or
pop
jle
nop
out
sbb
and
cmp
and
js
ljmp
pop
xor
movsl
mov
insl
int
add
sbb
sar
sub
std
fnstsw
lock
adc
inc
std
push
mov
shl
aam
cmp
dec
shll
xor
mov
lret
insl
aam
cmp
outsl
add
add
movsl
jb
shrb
push
mov
mov
in
sbb
out
cld
mov
xor
jp
pop
sbb
jmp
dec
fldt
arpl
cltd
pop
mov
pushf
iret
or
add
and
cmc
push
out
or
in
add
ficoml
dec
jl
cmp
out
adc
insb
subb
cli
sti
std
lea
fs
into
fisttpll
or
dec
shr
inc
jns
xor
scas
test
inc
mov
ds
int
or
je
inc
aas
lcall
pop
movsb
lret
idivb
ja
adc
xchg
pop
daa
or
push
xchg
pop
cvtps2pi
lods
cmovp
popa
xlat
popa
outsl
mov
int
aad
mov
sub
mov
in
xor
cmpsb
sub
divb
xchg
push
pop
or
test
pop
in
shlb
enter
mov
jge
jmp
and
lods
inc
roll
mov
push
clc
fisubl
jg
insb
shl
repnz
inc
lcall
push
push
ds
sub
xlat
and
je
adc
aas
jbe
sub
cmp
and
mov
scas
aas
and
mov
pop
pop
cmp
and
pop
fistl
mov
add
repnz
cltd
stc
push
sbb
jb
mov
xchg
out
movl
add
aaa
pop
and
bound
jne
add
inc
addr16
loope
fnstsw
xor
add
jle
fistps
add
sbb
cli
out
out
jp
out
loopne
fwait
pop
int
sbb
push
jmp
mov
fwait
cmp
icebp
scas
mov
sbb
cmp
rclb
sub
ja
sub
mov
xchg
lock
pop
mov
push
outsb
add
imul
aas
leave
cmp
sub
add
ljmp
pop
sub
fbld
subl
mov
mov
push
mov
in
mov
shrl
fidivrl
mov
inc
dec
push
xor
jg
in
push
cltd
inc
mov
out
sahf
outsb
mov
les
xchg
fdivrs
adc
shl
jns
mov
int
movsl
mov
out
outsl
outsl
iret
mov
das
xor
movsb
imul
jg
lcall
mov
cmp
bnd
fwait
push
rcr
mov
faddl
push
and
rol
fstpl
scas
popf
cmc
dec
cld
stos
or
lcall
in
pop
fxch
xchg
iret
fimull
sbb
sub
ss
pop
out
xor
movsl
fdivl
xor
xchg
int
orl
mov
dec
lahf
add
sbb
cmpsb
sbb
test
fnstcw
jle
pop
jl
or
inc
pop
test
dec
in
fsub
btc
and
popf
cwtl
push
test
das
mov
dec
mov
sub
std
mov
out
out
mov
ret
js
jmp
test
je
sub
cmp
mov
loope
scas
inc
cltd
cmp
in
aad
ret
sti
xchg
ja
or
pop
and
into
sub
and
scas
repz
mov
pop
add
je
fmulp
dec
in
add
sahf
icebp
cmp
add
fimull
push
cmp
cmp
aas
lret
xchg
jge
movsl
and
nop
add
push
sti
mov
mov
xchg
push
fidivrs
das
popa
mov
int
pop
inc
out
and
pusha
add
cmp
ljmp
adc
jbe
mov
sbb
add
sbb
arpl
fstpt
fstl
mov
fbld
hlt
lcall
add
sub
or
jo
pop
fidivs
dec
mov
pop
adc
test
xor
sub
mov
xchg
xchg
jno
adc
or
andb
push
or
push
push
cs
jnp
xor
fstl
ret
pop
inc
int
fmull
push
mov
mov
les
mov
adc
es
push
cli
setb
jbe
push
dec
js
sub
inc
xor
inc
mov
mov
push
mov
clc
das
imul
xchg
data16
ljmp
lods
or
fwait
add
jns
and
pop
jmp
ret
mov
xchg
pushf
pop
fcomps
flds
pop
ret
outsb
test
dec
push
dec
fisubrs
add
daa
mov
ret
jnp
cmp
fildll
xchg
lock
xlat
mov
cli
scas
pop
and
test
pushf
lods
mov
mov
cli
mov
out
xor
jb
sahf
push
push
dec
inc
pop
mov
stos
jae
mov
int
jae
daa
jo
xor
jno
dec
fwait
cwtl
cmc
pushf
lods
push
sarb
dec
and
or
inc
and
loop
loope
jg
pop
test
add
ja
adc
mov
lods
xchg
outsl
negl
dec
xor
jle
push
cli
inc
push
or
xchg
bound
mov
cmp
ret
add
leave
lret
sub
push
or
adc
leave
mov
in
das
mov
pop
ja
sbb
outsb
cmp
shrl
cld
ret
mov
es
push
in
pushw
mov
mov
sbb
xor
pop
sub
pop
or
sbb
cmc
mov
aas
add
enter
xchg
addr16
jp
xchg
adc
mov
jmp
jl
adcl
mov
sub
pop
dec
adc
pop
sbb
jnp
hlt
dec
out
ret
sti
stos
jns
jle
jo
xor
sub
mov
cwtl
in
lahf
nop
adcb
test
cmc
lcall
mov
fisttpll
hlt
loope
mov
xchg
xor
stos
inc
push
dec
cltd
ljmp
pop
or
mov
push
repnz
leave
cmp
adc
inc
imul
int
cmp
imul
jle
sub
push
insl
rcll
imul
aaa
mulb
or
add
jp
jne
fsubl
stc
dec
call
fstpl
jl
movsb
scas
inc
cs
adc
push
xchg
fcomps
push
and
imulb
aaa
and
imul
outsb
inc
test
xlat
pusha
enter
pop
not
scas
loopne
cmp
dec
fdivl
sbb
pop
cs
aam
xchg
push
push
shr
mov
adc
in
scas
movsl
and
adc
xchg
ja
mov
lods
data16
jo
xor
faddp
stos
jmp
jmp
sti
pop
and
loope
inc
jmp
and
and
push
xchg
loopne
rcr
aam
addl
fld
dec
outsl
lods
mov
addl
push
adc
loop
dec
adc
adc
out
cli
xchg
mov
rcrl
sub
mov
jns
shlb
hlt
add
insb
fiaddl
mov
dec
sti
jl
in
outsb
fldt
xchg
into
mov
popf
out
jge
mov
mov
shll
or
dec
xor
sbb
xchg
push
enter
dec
push
icebp
pop
xchg
bound
push
testb
and
inc
or
xchg
jns
ljmp
and
xor
push
filds
outsl
dec
pop
jle
mov
adc
into
push
outsb
sub
pop
or
mov
imul
sbb
scas
push
scas
cmc
xchg
imul
or
sahf
pushf
fnstenv
outsb
pop
jle
xchg
cmp
xlat
ret
aas
cld
sarb
mov
fwait
cmp
sub
and
loop
sub
mov
dec
aaa
mov
inc
push
xchg
subl
sbb
fnstsw
sbb
push
inc
subb
add
mov
or
mov
faddl
push
fcompp
jns
mov
int
jecxz
inc
mov
and
and
ds
fninit
adc
sbb
push
and
lock
jno
cmpsl
movb
xchg
out
push
add
sub
inc
and
jp
jmp
pop
mov
outsb
xor
pop
inc
dec
inc
insb
int
xor
or
cld
lret
inc
in
xor
jbe
out
icebp
adc
rcll
mov
jns
pop
pop
add
repnz
cld
sbb
cmp
pusha
mov
sbb
xor
dec
cltd
lret
int3
and
cmpsl
into
loop
lahf
mov
sarb
sub
jo
jnp
das
jno
mov
stc
in
ret
inc
lds
mov
cltd
add
outsb
fldt
pop
lret
lret
insb
sub
fmull
enter
xlat
data16
jg
pop
lret
mov
stos
push
jmp
aas
aas
adc
maxps
dec
bound
sub
cmp
rolb
sbb
mov
in
jge
movsl
cmp
push
movsb
mov
xchg
test
out
jmp
cmc
push
cltd
lcall
subl
test
mov
sbb
repz
call
mov
xchg
mov
xchg
and
fucomi
scas
mov
xchg
fildll
mov
ret
sub
dec
fwait
iret
dec
cmp
pop
cmp
fnstsw
test
mov
inc
jp
fcompl
jle
sbb
lods
loopne
stos
outsb
mov
or
ret
stos
fsubs
adc
mov
faddp
cmpsl
test
xor
in
sub
xor
shlb
sub
sub
sbb
or
pop
cmp
cmp
jne
std
fcoms
fwait
sahf
loop
arpl
mov
push
cmp
mov
sbb
or
test
jbe
pop
addl
adc
add
adc
cmp
daa
sbb
enter
es
cltd
inc
xchg
mov
popf
mov
fmull
pop
xchg
movsb
add
ret
dec
sarl
jle
and
jmp
jmp
fimull
jge
xchg
mov
cld
push
sbb
lods
lcall
leave
leave
pop
cs
sti
sub
dec
fstpl
ds
js
dec
jecxz
in
push
xchg
cmpsb
std
popf
pop
xchg
loopne
sbb
adc
mov
mov
outsb
stc
imul
jbe
mov
jns
bound
lds
xchg
cli
cmp
sub
movsl
sub
push
fnstcw
push
je
inc
cmpsl
push
rclb
idiv
sub
in
and
dec
les
xor
push
orb
mov
test
stc
popa
daa
and
dec
add
lahf
cmp
jae
pop
lret
inc
or
xchg
cwtl
scas
fisubrl
mov
mov
fiadds
push
fldcw
inc
sbb
sub
jg
push
pop
jo
add
lret
adc
adc
fcomip
pop
pop
stos
jl
push
stos
dec
jne
cld
jo
in
fldcw
ja
mov
int
mov
pop
inc
lret
test
shrb
add
mov
in
outsb
mov
leave
jmp
xor
mov
lret
ret
mov
popl
repz
lahf
jp
je
std
imul
aaa
ret
js
push
or
xlat
cmp
jl
out
push
testb
outsb
xchg
lahf
arpl
jl
imull
pop
mov
and
xchg
icebp
lds
stos
ds
pop
mov
inc
xor
xchg
xchg
and
xorb
mov
xor
addl
cmp
push
movb
sbb
rcll
or
jge
jp
add
repz
loopw
lock
cmp
mov
lret
cmp
pop
cmp
sbb
popa
ret
pop
cmpsl
jge
out
out
lods
mov
mov
xchg
dec
aaa
ret
ljmp
mov
out
mov
cmpsl
push
imul
ja
mov
sub
xor
movb
sub
push
sub
movsl
inc
test
mov
and
lahf
fs
cmpsb
popf
inc
int
test
sbb
sbb
push
pop
dec
leave
cmp
imul
mov
xchg
mov
push
stos
ja
mov
or
shl
push
ss
or
push
push
mov
bnd
cwtl
inc
movsl
mov
push
rcr
mov
ret
mov
lcall
pop
push
push
inc
cld
and
mov
add
cwtl
jg
int3
inc
jne
jg
fistpl
rcrb
loopne
mov
fdivrs
lahf
sub
sub
mov
jp
push
shll
cld
jmp
shrl
and
push
fldenv
jge
mov
lret
bound
xchg
mov
jo
pop
sarl
and
and
mov
sub
movsb
sub
jl
mov
xchg
outsb
cmpsb
rcrb
in
pop
pop
and
dec
pop
mov
adc
add
inc
cmp
push
in
pop
pop
add
movsb
dec
sub
shl
mov
icebp
sbb
push
addb
jge
int3
add
xor
pushf
aaa
xchg
nop
jae
inc
aad
movb
push
mov
enter
jle
cmp
cmc
push
ret
xor
outsl
sub
std
mov
mov
or
sbb
insl
lea
leave
and
push
push
mov
adc
js
and
pop
imul
js
push
imul
dec
pushf
out
lcall
inc
xchg
xchg
xchg
pusha
jnp
sbb
shlb
insb
cmp
jae
and
inc
fdivrs
ja
repnz
js
ret
repz
nop
or
dec
mov
xor
mov
call
jne
std
aam
iret
out
imul
adc
orl
add
or
nop
mov
lods
aas
cmp
add
scas
fidivrl
into
push
xlat
mulb
push
push
push
adc
add
jmp
in
shr
jmp
cmp
pop
push
pushl
xor
xor
fidivrs
inc
std
enter
loop
or
ror
icebp
mov
insl
jo
xchg
repnz
dec
pop
dec
shlb
aas
in
mov
je
and
inc
xor
test
fs
out
or
sbbb
xchg
mov
je
imul
inc
aas
loopne
sub
arpl
inc
jnp
dec
int3
dec
pop
adc
loop
shll
out
jnp
fidivs
fs
adc
inc
pop
in
popf
mov
lock
or
out
sub
mov
xchg
icebp
cs
imul
jnp
outsb
pop
xchg
lcall
push
inc
jno
sbb
cmp
jo
js
jns
push
pop
add
dec
inc
xchg
leave
movsbl
mov
sahf
aam
cltd
scas
inc
mov
sbb
fwait
sub
cwtl
sub
xchg
push
mov
and
dec
sar
inc
jg
cmp
in
pop
cmc
ds
xchg
cmp
les
mov
xchg
fbld
into
ret
loope
inc
pusha
pop
push
out
jecxz
pop
sub
push
push
enter
adc
xchg
push
and
loopne
sbb
cmp
and
jbe
pop
ljmp
std
ficoml
pop
scas
adc
or
cmp
shlb
mov
sub
inc
rcll
xlat
mov
mov
cmpsb
iret
int
sbb
daa
dec
lahf
and
cmp
sbb
clc
sbb
cmp
aas
imul
or
sub
pop
sahf
push
rcll
ret
aam
ja
incl
mov
pop
out
test
jmp
jne
xchg
and
pop
es
jl
xor
in
shrb
ds
loopne,pn
lret
cmp
pop
mov
enter
and
pushf
sbb
gs
or
pop
jecxz
cmpsb
add
push
popf
out
ficompl
and
pop
scas
mov
dec
jo
movsl
enter
lea
jae
adc
shll
rcl
push
dec
outsl
push
in
fs
pop
jnp
pop
dec
xor
jg
push
mov
jno
cmp
xchg
push
iret
mov
push
pusha
flds
xor
lea
mov
aam
mov
cld
pop
dec
cmp
fisttps
jp
sbb
xchg
pop
sub
ret
add
es
jo
jle
sbb
lret
leave
lahf
xchg
insb
push
dec
lock
jns
adc
aam
leave
cld
push
sub
and
nop
add
fnclex
out
popf
iret
das
dec
div
pop
jo
adc
xchg
sub
into
xor
xor
adcb
cmp
ret
xchg
and
sbb
inc
mov
jb
subl
mov
lds
adc
add
push
mov
sbb
push
mov
pop
cmpsl
divb
inc
loopne
xchg
and
pop
rcr
dec
mov
sub
mov
test
repnz
lcall
and
inc
fimull
ficoml
and
sbb
jmp
pop
mov
sahf
push
addr16
sbb
mov
xor
out
sarl
stos
xchg
sbb
mov
lods
mov
adc
and
jb
dec
dec
xor
mov
fbld
push
lds
xor
and
lods
cmp
dec
insl
mov
mov
mov
xchg
mov
dec
cmp
push
dec
ja,pt
mov
xchg
jmp
cmp
call
std
out
loope
ret
push
mov
sub
sbb
xor
loopne
std
test
jg
jecxz
sub
or
movsb
xchg
and
push
out
fucomp
add
pop
cltd
push
mov
xchg
sub
mov
push
das
jle
or
mov
leave
js
movsl
sub
dec
xor
aad
xchg
pop
xchg
hlt
sub
fldt
mov
push
or
sarb
negl
jmp
imul
test
int
and
or
in
lock
inc
inc
or
fs
dec
sub
xchg
jnp
inc
nop
sahf
arpl
push
dec
pop
movl
cmp
mov
bound
pop
imul
icebp
lcall
mov
dec
jae
lock
jl
mov
js
sub
das
shlb
adc
shlb
mov
pop
cld
popf
push
ljmp
inc
cs
cld
nop
jns
subb
or
inc
push
cmpb
adc
push
lcall
push
pop
xchg
mov
mov
jno
push
and
push
outsb
test
mov
cli
into
movsl
push
fs
frstor
loope
or
xchg
pop
sub
movsb
mov
mov
or
mov
test
sbb
xlat
jae
decl
mov
mov
jg
cmp
mov
sub
lds
aaa
scas
cmpsb
insl
push
loope
std
frstor
dec
aam
push
lock
int3
mov
popa
xchg
ret
aas
xlat
stos
insb
xchg
test
jno
dec
lea
push
push
ficoml
out
scas
and
xchg
cs
pushf
sbb
fistpll
and
pop
pop
out
mov
fisubrs
push
jnp
inc
add
mov
cltd
xchg
mov
xor
sbbb
cs
mov
fdivrl
aaa
xor
es
push
sub
add
mov
push
mov
repz
pop
xchg
ss
mov
mov
sbb
shlb
outsb
jge
or
push
cmc
xor
push
xchg
data16
arpl
aam
sahf
stos
mov
adc
ret
mov
sbb
mul
mov
ffree
or
add
mov
cmp
mov
mov
out
xchg
ret
out
ja
xlat
cmpl
decb
sarl
xorl
bound
call
hlt
test
and
loop
mulb
sub
mov
mov
cli
mov
dec
or
xchg
sti
pop
dec
and
pop
cwtl
push
cld
punpcklwd
cmp
push
test
pop
out
fidivrl
jns
lds
sbb
pop
cmpsb
add
fadd
push
jmp
mov
jmp
jmp
add
dec
insl
in
cmp
mov
sbb
push
test
pop
inc
outsb
dec
lea
sub
pop
sub
clc
data16
jne
add
imul
lods
add
add
rolb
sbb
insb
dec
mov
ret
jg
inc
add
hlt
jmp
adc
jb
mov
inc
xchg
mov
nop
pushf
fstl
ss
or
lret
or
sbb
out
mov
aam
or
int3
inc
daa
inc
enter
adc
shrl
insl
xchg
or
sti
jge
pusha
cltd
sbbb
push
dec
loopne
sbb
xor
leave
cmpsl
repz
loope
outsl
and
rcll
dec
mov
clc
inc
sub
movsb
jl
rclb
js
inc
test
xchg
sub
cmp
rcrl
or
jge
js
movl
xor
jb
xchg
or
inc
mov
jp
pop
xchg
inc
dec
call
fisubl
call
lods
fcmovnb
pop
stos
and
in
fiadds
lahf
stos
aaa
std
jnp
in
sarl
sti
xchg
repz
je
add
cli
ja
jmp
int3
xor
sub
mov
pop
daa
pop
xchg
or
rcrl
les
sarl
sahf
popa
mov
cwtl
pop
pop
rolb
out
xor
cmp
fadds
sbb
aaa
jl
lahf
test
shrb
popf
fyl2xp1
xchg
dec
add
lret
add
out
sub
sub
jge
xor
sub
sti
scas
mov
out
in
dec
jl
lea
or
fmulp
adc
xlat
xlat
ss
repz
mov
and
jg
aaa
stos
insl
cli
mov
scas
push
xchg
mov
mov
cmp
sub
and
push
iret
pop
arpl
push
loopne
mov
or
xor
sub
into
jno
fdivrs
fbld
xchg
mov
cmp
inc
bound
clc
mov
mov
xchg
fsub
imul
jb
adc
daa
inc
test
leave
adc
testl
jmp
jmp
mov
push
enter
notl
push
jle
into
pop
test
cmpsl
repz
pop
out
inc
stos
movsl
call
push
adc
mov
mov
mov
pusha
cld
push
and
popa
in
jge
add
negl
adc
cmp
adc
adc
and
pop
cs
fs
in
mov
movsb
xchg
aam
scas
cmpsl
sbb
push
pop
loope
xchg
add
test
pop
mov
fistl
daa
fst
ja
fstp
cltd
jo
das
inc
sbb
cmp
out
jl
loopne
data16
loopne
pop
mov
add
imul
ja
daa
outsl
sub
movsb
or
repz
mov
push
shll
roll
add
mov
xchg
mov
jae
fwait
int
dec
cmp
out
cmp
mov
test
sarb
or
in
sahf
add
lods
arpl
xchg
sub
mov
cmc
xchg
adc
mov
cmp
cs
jl
or
sub
aaa
daa
std
jno
test
xor
repz
cmp
add
mov
test
ret
jecxz
lods
jns
divb
adc
aaa
inc
xchg
into
je
jno
push
push
sarl
or
jge
mov
pushf
jge
push
lods
sbb
xor
insl
test
mov
push
push
mov
das
jo
xor
aam
sbb
int3
cmpb
lret
sub
sub
inc
pop
jae
lahf
imul
or
imul
sarb
das
jno
xchg
jle
fsubr
data16
xchg
out
pop
popa
arpl
xor
pop
jae
popf
loopne
aam
pop
mov
sub
push
jo
cmp
xor
out
enter
inc
cmp
sahf
add
mov
cmp
movsl
or
or
sbb
xchg
lods
jge
std
outsb
sarl
adc
xchg
push
std
mov
loop
std
cltd
pop
dec
out
in
push
mov
lret
add
adc
dec
fldcw
cwtl
jno
mov
push
jp
imul
enter
inc
movsl
imul
in
outsb
or
lods
and
out
fstps
mov
idivb
xor
sti
add
cmc
cmp
repnz
outsb
rcr
int
jno
lcall
arpl
aas
stos
les
lret
loope
cltd
hlt
mov
mov
xchg
and
ljmp
mov
add
bt
cmp
jbe
pop
cmpsb
pop
out
sub
ret
cmpsb
inc
inc
sub
movsl
fists
sub
jne
mov
xor
imul
mov
sub
dec
shl
out
inc
fsts
and
push
lcall
clc
push
ret
rorb
insb
dec
test
out
sbb
inc
xor
dec
mov
clc
pushw
sbb
loope
push
jae
pop
push
and
inc
pusha
mov
adc
lods
iret
mov
adc
rorb
movsb
test
pop
push
cmp
jmp
inc
xor
mov
pushf
xchg
test
loope
fsubrs
test
ficoms
xchg
out
xchg
mov
and
lahf
adc
cld
sub
sahf
testl
insb
cs
jbe
testb
mov
push
inc
xlat
inc
test
adcb
in
rcl
data16
sbb
pop
or
dec
cmp
xor
xchg
pop
jmp
imul
inc
xchg
or
mov
rorl
imul
cltd
mov
std
dec
scas
fistpl
leave
mov
push
cwtl
xor
add
mov
mov
dec
rorl
or
add
in
fstpt
lret
sub
dec
sbb
loope
loop
or
cli
push
cwtl
test
lahf
data16
out
shl
int3
jne
jbe
xchg
int3
popf
int3
std
rcrl
push
xor
call
jl
jp
sub
cmp
push
mov
sub
pop
rcll
rcrl
inc
int3
aas
cmp
movb
sub
mov
mov
hlt
out
jmp
add
or
mov
adc
sbb
loop
xchg
jge
xor
cs
into
adc
hlt
daa
out
and
dec
ret
sub
fisttps
lods
mov
out
add
pushf
xchg
jl
sub
or
mov
xor
cltd
sahf
ds
ficomps
sbb
xchg
jl
test
insb
and
dec
in
push
push
adc
imul
pop
inc
and
ficompl
shl
and
js
jno
mov
mov
mov
aas
push
enter
data16
ja
outsb
js
pop
mov
data16
je
dec
dec
aad
cmp
sub
stc
pop
lods
mov
xor
sub
mov
pusha
mov
pushf
adc
and
outsb
pusha
iret
outsl
push
sbb
or
cmp
lahf
jge
cmp
int
lret
addr16
cltd
pushf
xchg
mov
scas
int
loope
sbb
pop
mov
xor
adc
pop
inc
inc
or
inc
aam
in
jle
negl
jb
std
xchg
sbb
jge
add
add
test
adc
pop
jne
fidivl
ret
mov
dec
adc
add
icebp
nop
xorl
daa
mov
rcr
and
pop
out
stos
adc
jecxz
stos
inc
or
jne
pop
jae
sub
push
mov
jg
shll
push
negb
mov
jno
xchg
js
pop
xor
movsb
je
dec
xchg
out
ja
xor
out
std
sub
jne
hlt
fdivrl
ljmp
nop
push
neg
adc
push
xchg
loopne
repnz
pop
shrl
mov
or
sub
and
xor
imul
addb
sbb
in
aam
cmp
lods
or
sub
rclb
xchg
mov
mov
inc
push
push
pop
negl
and
xlat
jmp
fcoms
into
xorb
mov
xchg
nop
cs
jns
push
push
xchg
incb
fwait
popa
repnz
ds
popf
jge
imul
mov
xor
mov
dec
mov
pop
push
mov
jecxz
xchg
inc
or
scas
or
sbb
cmc
push
int3
addb
jnp
adc
sub
mov
sub
jecxz
push
push
clc
mov
xchg
push
ret
mov
iret
dec
xor
lcall
push
mov
fistl
aas
inc
sbb
xchg
xchg
xor
cli
or
mov
add
call
pop
sbb
pusha
loop
dec
and
insb
push
add
stos
inc
pop
adc
ret
stos
add
dec
into
daa
push
push
test
stc
in
mov
or
bound
sahf
xor
outsb
cmp
stc
mov
ljmp
sbb
push
xchg
push
pop
sahf
and
pop
dec
aam
pop
insb
mov
cmp
and
pushl
adc
rcll
jb
aaa
stc
and
jbe
sub
dec
jb
xor
adc
repz
stos
mov
mov
fmuls
xchg
adc
mov
int3
ljmp
jno
push
loopne
mov
out
pusha
xor
int
addr16
imul
daa
and
sub
clc
cltd
sub
sti
cmp
pop
xchg
fistpll
shr
or
inc
je
dec
mov
cmp
mov
jge
adc
out
dec
jne
jmp
jmp
pop
ja
or
imul
xor
iret
es
cmc
inc
and
mov
mov
or
mov
sbb
cmpsl
popa
insb
js
mov
cltd
xor
mov
jmp
notl
or
add
cwtl
fdivrs
cwtl
add
jg
test
sub
inc
in
pop
mov
sbb
aaa
push
repz
cmp
jmp
loope
mov
leave
sbb
cmp
shlb
clc
jns
insl
ljmp
outsb
icebp
gs
lods
cmc
inc
lock
and
mov
xorb
bound
pop
mov
sbb
inc
cmp
in
jl
sti
sub
mov
or
ljmp
mov
jle
insl
mov
stc
aas
out
fisubl
inc
adcb
orl
cmp
mov
out
or
or
enter
jge
jo
xchg
sbb
or
mov
stos
push
jle
divl
insl
or
sub
sub
push
sub
dec
lahf
data16
push
push
push
cmp
roll
fsubl
imul
cmp
adc
aad
in
push
int3
xchg
xchg
or
enter
jmp
test
xorl
dec
cld
xorl
in
bound
insl
js
cmp
sahf
dec
addr16
arpl
shll
shll
xchg
test
xor
pusha
fwait
fwait
mov
sub
push
popf
stos
imul
pop
call
cmpsl
dec
mov
shl
out
adcl
lds
aad
xor
mov
cmp
cmp
cwtl
or
push
testb
cmc
dec
aam
mov
lods
int
dec
cmp
fs
pop
cmp
cmp
fiadds
xchg
call
clc
orb
jno
sub
or
sub
into
fisttps
sbb
subb
inc
jg
pop
dec
sahf
stos
push
stos
or
cmc
xor
dec
jb
andb
cltd
fistl
push
leave
push
inc
mov
cmpsl
out
jp
cmc
loop,pt
mov
adc
lods
add
add
mov
push
aaa
sub
ljmp
cltd
dec
outsb
xchg
outsl
inc
pop
orb
xchg
push
jns
add
xchg
and
cltd
scas
mov
jns
dec
cmp
jl
bound
jmp
mov
test
sbb
fldenv
push
and
popf
dec
ficomps
pop
xor
and
mov
lea
negl
jle
mov
aam
mov
sti
addb
int
push
pop
mov
push
inc
in
or
jecxz
leave
repz
leave
mov
lods
sub
push
dec
inc
cmp
push
or
ret
mov
mov
in
jecxz
gs
scas
cmpsb
imul
insl
inc
xor
rcrl
push
cmpl
add
sub
les
xlat
mov
lret
mov
sub
bound
rcrl
fsubr
ftst
ret
mov
mov
xor
pusha
jge
sbb
adc
pushf
push
xor
mov
mov
fistpll
push
inc
in
inc
rorl
jno
in
les
mov
scas
add
icebp
fdivl
jne
test
jb
and
inc
lods
ds
mov
cmp
xor
xor
arpl
and
cmpsl
add
mov
mov
sbb
mov
jmp
sbb
pop
sub
sub
mov
sbb
xchg
mov
jl
scas
nop
shlb
adc
push
popf
addr16
mov
mov
mov
in
ja
es
sbb
in
not
lret
dec
push
dec
ret
nop
loop
dec
push
xchg
lret
das
or
cmp
icebp
scas
sbb
push
js
xor
cmp
imul
loopne
jmp
jecxz
insb
notb
and
lret
xchg
xor
xlat
push
lds
std
fsts
jge
mov
mov
imul
inc
sti
imul
fs
cmc
insb
int
xchg
scas
int
daa
insl
push
mov
mov
imul
mov
fs
pop
adc
mov
xor
repnz
adc
les
cmpsb
push
pop
xor
daa
mov
mov
in
bound
mov
aam
or
and
das
test
outsl
insb
mov
pop
sbb
add
fstps
fs
ret
sbb
test
mov
xorb
shll
movsb
jnp
mov
int
inc
scas
and
in
stc
push
push
and
clc
daa
nop
inc
cltd
or
fistpl
add
cwtl
int3
ret
add
cltd
pop
inc
scas
lds
push
lea
cmpsl
cmp
test
or
in
add
loopne
shll
ljmp
repz
and
fidivl
cs
mov
out
in
scas
adc
sbb
std
and
cmp
and
adc
adc
xor
adc
and
pop
mov
in
cmp
mov
and
mov
fadd
or
icebp
popf
in
lret
nop
xlat
mov
sahf
or
adc
ljmp
xchg
in
push
dec
and
out
outsb
push
adc
jle
pop
test
mov
jne
test
sbb
in
pop
xor
maskmovq
lret
aaa
in
call
sbb
pop
das
jmp
push
out
lahf
adc
orb
pop
enter
sarl
adc
cmp
imul
inc
lret
push
test
sub
bound
cmp
push
xchg
ret
loop
cmp
push
lds
ror
test
push
shll
fstpt
mov
loopne
inc
cmp
nop
lcall
pusha
mov
push
notl
ret
int3
mov
mov
insl
subl
loop
fnstcw
pop
fwait
ss
mov
icebp
mov
push
loopne
mov
and
xlat
cwtl
pop
and
xchg
mov
inc
cli
mov
pop
inc
fwait
mov
adc
add
mov
or
adc
std
addr16
dec
repnz
sarl
mov
add
or
dec
ljmp
or
cmp
xor
sub
adc
or
loopne
sub
andl
pop
sub
subl
call
sbb
cwtl
into
mov
stc
push
xor
adcl
jnp
sub
in
xor
push
fsubr
repnz
or
fstl
loop
add
in
jmp
mov
hlt
mov
pop
sti
mov
dec
mov
in
imul
inc
repz
je
xrelease
inc
out
cmpsl
ds
add
repz
cmc
bound
mov
nop
sub
sbb
imul
cmp
mov
push
adc
inc
dec
jno
scas
or
sahf
sbb
sbb
ficoml
addr16
repnz
hlt
cs
bound
fidivs
mulb
cmpsb
pop
addb
pmaxsw
mov
jbe
jne
in
decl
addl
icebp
mov
das
and
in
lea
lret
test
xor
xlat
mov
dec
movsl
pop
add
sbb
xchg
adc
imul
bound
out
jns
xor
cmpsl
and
and
pop
jecxz
pop
adc
test
push
adc
pop
bound
mov
jae
cmpsl
mov
cld
bound
je
das
inc
mov
inc
ret
loopne
mov
les
cmp
and
jnp
inc
cmp
das
mov
xchg
nop
xchg
loope
jle
mov
gs
inc
xchg
jl
fdivrs
outsb
adc
and
fnstenv
pusha
popf
sbb
mov
lret
inc
push
nop
hlt
inc
loop
daa
xlat
sbb
rcrb
data16
ret
ss
mov
lcall
cmp
jmp
test
and
daa
loope
dec
int
movsb
test
and
in
fldenv
es
and
pop
mov
idivb
notb
test
cmp
loopne
push
stos
cs
push
insl
and
lret
sahf
ret
dec
shrb
aaa
pusha
or
push
dec
jae
jae
sub
adc
and
sarb
arpl
xchg
mov
mov
outsl
icebp
rclb
lods
sbb
dec
pop
sti
pop
aas
add
repz
cli
cli
movsl
arpl
push
outsl
cmc
rcll
je
dec
ds
and
xchg
xchg
call
xor
push
and
fbld
je
cmp
decb
add
or
pop
xchg
pop
iret
mov
mov
inc
and
mov
out
stos
repz
fists
jae
adcl
mov
xor
push
inc
mov
push
dec
cmp
jmp
lds
pop
xor
fcoml
out
cmpsl
and
in
add
mov
mov
idivb
inc
repz
out
xor
and
fstpt
shrl
iret
adc
mov
jb
int3
out
in
xchg
filds
mov
pop
sarb
inc
hlt
cmp
imul
sub
push
cli
cmc
mov
cmp
push
notb
in
ret
inc
xor
popa
or
hlt
repnz
xor
rcl
adc
ljmp
inc
aas
xor
imul
bound
mov
add
sahf
es
lret
das
add
lret
cs
xchg
mov
xchg
xor
push
fs
xchg
xchg
fstpt
ret
and
inc
lock
cmp
xchg
mov
int3
ret
imul
test
dec
xor
xor
jo
push
leave
and
and
push
sub
jmp
push
jae
fadd
mov
pop
push
cld
mov
cs
fldcw
push
push
out
push
xor
sub
fiaddl
daa
push
mov
into
jp
sti
enter
add
inc
pop
lret
into
ds
cltd
dec
fs
out
xchg
xor
loope
popa
cmp
fsubs
sbbl
imul
ds
mov
xchg
pusha
xor
icebp
mov
dec
cmp
or
lret
lretw
lahf
jnp
push
lds
mov
inc
test
cmp
loop
and
ret
mov
fnsave
and
inc
xlat
dec
mov
add
jnp,pn
adc
sbb
dec
push
and
xor
xchg
in
pushf
xchg
dec
sbb
fwait
jmp
xchg
dec
xchg
clc
xlat
fiadds
xchg
pop
bound
stc
inc
lds
in
popf
clc
icebp
rcrl
mov
push
sub
js
jl
outsb
aad
inc
gs
adc
lcall
jb
repnz
sub
pop
jae
ja
cmpsb
daa
or
int
cltd
sahf
lods
fildll
fistpl
movsl
repz
aam
xchg
cmp
hlt
ficompl
and
and
sahf
sub
pop
shll
and
mulb
and
dec
xchg
scas
jl
cmp
jge
mov
insb
jbe
in
testl
fcoms
loopne
mov
jp
lret
aam
out
jg
xor
fcompl
insl
adc
or
outsl
rcrb
dec
cmp
dec
lea
push
jbe
pop
sbb
repz
mov
orb
adc
pop
inc
mov
jge
jae
adc
and
notl
les
dec
in
ss
mov
push
imul
pop
fcmovu
out
fwait
mov
add
push
mov
cmpsl
arpl
imul
and
cmp
fldenv
dec
in
das
xor
pushf
mov
cwtl
jns
pop
xor
push
add
cmpsl
daa
test
pop
add
stos
lods
sbb
xor
enter
ljmp
xor
dec
in
push
sbb
cmp
mov
fnstsw
dec
adc
decb
push
clc
in
out
nop
inc
sti
hlt
push
adc
inc
cmp
aaa
in
sbb
sbb
or
loopne
dec
sbb
sub
pop
mov
sbb
cwtl
xor
mov
lret
mov
dec
pop
adc
clc
insl
mov
stc
sbb
loope
dec
lahf
ds
xchg
and
insb
cmp
xchg
call
push
dec
cli
cmc
leave
inc
pop
outsb
jmp
xchg
xlat
mov
clc
xchg
cmpl
add
rol
cmp
arpl
add
cld
mov
jge
pop
add
xchg
inc
aad
movsl
xchg
add
popl
push
xor
rcll
add
sbb
inc
xor
test
add
add
jmp
test
sub
nop
pusha
int3
pop
ljmp
jne
in
inc
leave
fisttpl
push
inc
pop
lahf
repnz
ja
dec
adc
es
pop
aad
scas
lret
ficompl
mov
outsb
xchg
mov
mov
xor
enter
fwait
lahf
push
test
cmp
pop
mov
pushl
jnp
pop
cmp
std
xor
pop
xchg
test
les
pop
sahf
sub
scas
rcl
clc
jge
test
or
fs
sub
dec
push
out
mov
in
pop
addr16
jno
dec
repnz
mov
movsb
xor
xor
mov
mov
push
dec
and
repnz
in
xchg
mov
push
and
outsb
xor
divl
mov
js
daa
imul
sbb
subb
mov
pop
push
sub
mov
pop
repz
and
jae
out
rolb
adc
repnz
jl
add
pop
sub
test
cwtl
xorb
ret
sub
jmp
adc
outsl
or
lods
or
movsb
adc
fstpt
loope
cmp
sbb
mov
add
repnz
jge
cltd
mov
je
jl
adc
or
jl
adc
or
sbb
std
ljmp
sub
adc
and
jno
mov
ds
mov
and
dec
in
jge
add
insl
sub
mov
stos
xchg
jns
xchg
dec
fadds
int3
push
cmc
mov
dec
test
lret
sar
sub
loope
xchg
addb
loope
push
jmp
mov
aam
jns
lea
int3
cs
sbb
add
mov
addr16
cs
mov
dec
pop
test
push
loopne
mov
xchg
mov
push
jp
mov
xchg
sub
push
push
sbb
aam
add
wrmsr
aaa
sbb
jge
leave
pop
lahf
pop
xor
mov
pushf
mov
mov
in
cmp
sarl
xchg
push
push
and
lea
add
cmpsb
add
mov
mov
adc
xlat
xor
aam
sub
pop
or
notl
ret
sub
adc
xchg
mov
shr
inc
mov
mov
dec
and
or
rcrl
fwait
popa
mov
test
dec
das
fsubrs
cmp
inc
sbb
sbb
sti
test
test
outsb
ljmp
jnp
ficompl
jp
sti
sub
iret
fsubs
pushl
aam
xchg
cmp
fidivrl
and
and
fimull
mov
cld
scas
jnp
push
jmp
cmc
frstor
divl
test
outsl
jns
das
xor
jns
nop
mov
add
loopne
or
mov
push
add
test
push
add
icebp
inc
pop
push
in
inc
and
mov
xor
icebp
sarb
push
or
and
mov
cmp
out
adc
shrb
ja
lahf
lahf
pop
mov
dec
and
movsb
inc
or
cmc
outsb
jle
int3
mov
mov
pop
mov
lods
mov
inc
into
gs
jge
aaa
inc
sub
sahf
dec
mov
repz
cltd
shll
icebp
fistpl
hlt
repnz
test
das
cmpsb
daa
mov
cmp
jae
xchg
lcall
jge
out
in
xchg
popa
sub
jae
and
sahf
lea
or
jg
imul
mov
js
sub
in
icebp
or
xor
insl
cmpsb
ret
adcb
rcr
ljmp
dec
shl
sub
dec
out
inc
stc
out
jns
cmp
inc
lret
xorl
mov
jb
sbb
ret
mov
dec
daa
imul
jo
mov
or
clc
out
jg
test
cwtl
cmp
jmp
add
bnd
insl
sti
push
int3
sub
cmp
xchg
cld
cmp
push
icebp
push
xlat
pushf
call
fists
mov
outsb
int3
inc
icebp
cli
push
ja
push
sbb
in
inc
add
mov
pop
dec
push
test
push
pop
add
xor
popf
addr16
add
call
iret
shrl
je
add
inc
sbb
bnd
xor
std
ja
xor
inc
and
out
aaa
mov
imul
sbb
pop
negl
sbb
push
inc
das
xchg
adc
fs
push
pop
adc
ljmp
mov
inc
sti
mov
xchg
jne
test
popa
push
jp
jb
mov
jge
mov
out
add
adc
xchg
nop
loopne
lock
fsubr
mov
lods
test
in
popf
fstpl
into
dec
fwait
xor
pop
pushl
in
and
jmp
mov
sub
push
scas
daa
add
or
xchg
repz
gs
pop
pop
or
push
shl
add
mov
into
das
sbbl
mov
mov
push
call
add
jmp
lods
dec
or
and
dec
je
jne
repz
scas
loopne
mov
out
or
xchg
xchg
je
jb
push
cmc
psubusw
jbe
loop
pop
lds
in
adc
sbb
inc
mov
lock
fwait
js
xchg
add
mov
sbb
loopne
push
loope
pop
xor
jo
stos
xor
aas
jo
inc
cmp
pushl
jne
lahf
gs
aad
adc
and
pop
pop
mov
cmp
stos
push
pop
jne
lahf
insb
outsl
push
inc
rcr
inc
push
addb
sbb
jns
sahf
and
std
cs
add
cld
je
data16
in
push
out
inc
adc
cmp
loopne
xor
pop
mov
imul
lcall
roll
and
je
or
scas
ficoms
shrl
arpl
out
pop
mov
mov
inc
add
push
insb
imul
mov
lea
and
jbe
jmp
fsubl
pop
mov
insb
mov
add
dec
xchg
mov
mov
lahf
iret
subb
adc
push
fistps
add
fmuls
fstp
push
fldcw
push
es
pop
xchg
fadds
das
inc
xchg
dec
xchg
mov
sub
xlat
mov
fs
pop
add
sarb
xor
ret
ss
pop
xchg
ficoms
andb
mov
insl
fiaddl
or
inc
xor
xchg
shrl
lret
adc
add
mov
sbb
sbb
inc
push
mov
cmpsl
faddl
mov
pusha
push
and
aam
stos
pop
sbb
dec
push
cld
and
loopne
mov
dec
push
into
xor
outsl
in
ret
push
cmp
js
cmpsb
mov
lods
test
pop
adc
jo
lret
cltd
sahf
andb
jo
push
jmp
mov
cmp
adcb
xchg
loop
and
mov
lods
mov
cli
in
push
sti
enter
fimuls
jl
enter
xchg
mov
into
loop
inc
cmp
cmp
cmp
xchg
push
fidivl
or
icebp
out
sbb
idiv
into
sbb
dec
mov
dec
pop
or
arpl
push
shrb
popf
mov
pusha
in
push
jb
jb
je
jns
cmp
adc
outsb
fstpl
mov
sahf
fdivrs
data16
flds
cli
xchg
dec
rcrl
xchg
xchg
cmpsl
add
int
cld
pushl
add
pcmpgtw
xor
shll
ret
inc
adc
insl
mov
mov
pop
popf
and
sahf
fwait
out
cli
imul
xlat
pop
int3
and
mov
out
popa
add
mov
xor
mov
ds
push
call
out
inc
adc
sbbb
mov
sbb
xchg
int3
aad
xor
push
stos
mov
movsl
mov
loope
push
bound
push
or
insl
dec
cltd
inc
inc
mov
xchg
fcmovnu
lods
int3
jp
push
mov
hlt
stos
mov
hlt
in
sub
sbb
bound
xlat
mov
push
sbb
xchg
or
shlb
mov
call
sahf
cmp
mov
inc
push
and
push
es
dec
cmp
inc
jmp
iret
shl
inc
cwtl
enter
mov
or
pop
out
nop
nop
js
imul
dec
scas
mov
jl
roll
outsl
pop
pop
mov
lods
movsl
jo
xor
sbb
nop
xlat
push
push
lods
js
pop
loop
hlt
sub
scas
mov
rcll
enter
xor
ds
stos
int
mov
adc
test
mov
xor
aaa
xor
lods
imul
jp
rcrl
cwtl
gs
dec
in
test
pop
pop
xchg
out
or
lods
shlb
xor
jecxz
in
jmp
and
fcomps
mov
les
mov
dec
inc
sub
xchg
shlb
insb
mov
stos
iret
add
lret
dec
cwtl
add
pop
mov
ljmp
andnps
loop
das
pushl
push
lret
add
or
repnz
fdivr
movsl
jmp
sub
mov
pop
in
dec
dec
add
aam
xor
xchg
jge
pushl
insl
mov
adc
push
loop
xchg
inc
push
in
leave
lahf
sbb
cmp
insb
bound
lcall
in
outsb
xchg
testb
jne
imul
pusha
inc
jns
popf
dec
pop
leave
shrl
mov
aam
in
mov
xchg
sarl
sti
ret
rcrl
es
and
out
jnp
mov
sbb
dec
lods
stos
scas
push
outsl
xor
mov
xlat
dec
push
sti
lock
cs
nop
cmpb
jle
lods
lods
jnp
cmp
test
test
fstl
mov
pop
pop
call
jmp
aad
inc
sub
sbb
por
popa
in
popf
xor
adc
test
scas
rorl
xchg
lahf
mov
xchg
cmp
negl
xchg
insb
xchg
ficompl
in
outsl
fisubrs
xchg
les
insb
mov
xchg
xor
push
sub
jne
stos
mov
or
mov
sarb
iret
stos
mov
mov
fldt
dec
add
and
jae
bound
jl
jmp
sub
call
subb
test
or
repnz
ds
int3
inc
pop
test
xor
and
adc
mov
mov
xchg
and
inc
xor
hlt
pop
xchg
dec
fisubrs
add
sbb
test
mov
xor
outsb
cld
loope
scas
mov
push
cwtl
mov
pop
pop
adc
clc
cltd
test
and
jbe
adc
sub
notb
xchg
enter
ljmp
push
nop
add
hlt
adc
lods
in
mov
mov
sub
and
pushf
dec
inc
add
sbb
test
cwtl
xor
jns
pusha
inc
inc
lcall
sbb
rcrb
ret
cld
adc
push
push
repnz
ret
jnp
cmp
lods
push
adc
add
cwtl
pop
inc
lods
int
push
sub
push
leave
xchg
nop
jae
jns
fidivs
sub
aas
dec
pop
cmc
sbb
loop
add
repnz
sub
enter
mov
jb
pop
out
push
mov
jmp
and
outsl
mov
xchg
decl
hlt
inc
sti
sub
jo
pop
cmp
cmp
orb
fdivrs
lds
mov
xor
repnz
push
pop
stos
pop
mov
clc
xchg
fwait
or
shll
adc
push
inc
fsts
mov
mov
dec
sbb
shll
js
pushf
xchg
and
lcall
hlt
cli
scas
mov
xor
sbb
roll
push
mov
pop
enter
jl
sub
xchg
mov
sti
and
push
inc
sub
std
add
sub
pop
lods
pop
cmp
xchg
cltd
xor
orl
add
fldl2e
jne
pop
in
leave
loope
jb
out
xchg
fcoms
xchg
cmc
lods
arpl
insb
push
data16
pop
or
cli
stos
ljmp
and
xchg
out
inc
mov
into
lret
pop
dec
dec
imul
loop
pop
mov
add
mov
rcr
adc
std
cmp
pmovmskb
in
shrb
pop
mov
dec
push
inc
mov
lea
fisubrs
cmp
notb
jne
or
lods
inc
sbbb
mov
mov
outsb
in
or
cli
ja
xchg
inc
xlat
mov
pop
sbb
push
imul
jae
insb
outsl
adc
fistl
pop
pop
fistpl
pop
das
out
nop
jae
out
test
sbb
ja
ss
sarb
xchg
repnz
nop
mov
stc
scas
insb
aam
scas
or
mov
add
iret
cmp
insl
inc
mov
test
popf
jne
popa
push
lods
insb
jg
pop
mov
jno
fsubl
mov
add
data16
insb
mov
adc
jmp
jb
jecxz
cmc
cmp
and
insb
and
dec
sub
out
push
push
cmpsb
push
pushf
hlt
cmp
pop
clc
cmp
sti
adc
repnz
leave
mov
jmp
push
pop
push
pop
test
jecxz
cmp
xor
rorl
sub
mov
sub
inc
inc
cmpsl
mov
or
add
enter
cs
rcrb
enter
adc
push
or
inc
add
lods
mov
stos
je
pop
pusha
xchg
shl
ret
xchg
inc
popf
mov
popa
mov
pop
test
mov
sbb
fisttps
cmc
mov
int3
push
outsb
pop
mov
add
inc
push
insl
mov
jnp
ficoms
push
pop
repnz
outsb
add
xchg
mov
mov
and
leave
pop
stos
movsl
scas
addr16
mull
cmp
jae
dec
repnz
inc
mov
in
clc
fistpll
out
add
movb
test
dec
adc
sbb
adc
xor
aad
xor
cmp
sbb
xchg
pop
sahf
adc
test
dec
cmp
in
inc
rol
inc
jl
shll
push
push
sub
insl
mov
cmpsb
lahf
cmp
dec
sbb
cmp
mov
and
fdivs
out
loope
push
push
mov
jns
fld1
jbe
cmp
or
out
pop
dec
sbb
data16
into
dec
je
outsl
je
push
icebp
mov
cmp
jo
popa
shl
inc
in
and
sub
in
rol
call
mov
cmpsl
cmp
js
adc
pop
cmp
lods
loope
addl
daa
hlt
mov
mov
sbb
lcall
mov
sbb
xlat
adc
or
fidivs
pop
xor
xchg
inc
ret
push
mov
js
push
push
pusha
sbb
mov
pop
push
ja
icebp
shlb
xor
and
add
jp
push
cmc
dec
pop
clc
pop
and
ja
imul
pop
or
dec
stos
xor
jns,pn
out
stc
inc
hlt
out
or
or
clc
fcoms
out
mov
fistps
mov
sbb
xlat
movswl
imul
cmp
and
cmp
add
out
jae
fildl
test
push
adc
aaa
in
sbb
cs
insb
leave
mov
rolb
sub
mov
shlb
pop
mov
or
jb
sti
shlb
cmp
dec
stc
ss
pop
inc
pop
mov
nop
aas
jle
sub
add
jge
sub
and
insl
icebp
sbb
data16
addb
mov
xor
or
sub
outsb
inc
fbld
aam
dec
testl
orb
stos
std
aam
inc
jge
sbb
les
clc
loop
mov
mov
addb
lock
js
lods
xor
mov
and
stc
outsl
mov
sub
add
out
repnz
xchg
fisttpll
xchg
dec
sub
pop
sub
rorb
pusha
push
in
push
push
xor
add
imul
cs
and
aas
out
adc
xchg
hlt
lahf
insb
push
ret
scas
xchg
mov
out
loopne
or
sarb
xchg
cmp
xchg
dec
fcmovnb
mov
add
inc
shlb
push
rcrl
popa
je
loope
mov
fcompl
fistps
rcrb
add
repnz
mov
aaa
cmp
sbb
fldcw
or
ret
and
mov
aad
fnstenv
enter
sar
imul
movsb
out
movsl
int
pusha
pop
pushf
lret
add
js
icebp
xor
outsl
sbb
test
adc
pop
jmp
dec
dec
push
es
mov
out
xchg
ljmp
mov
dec
sbb
cmpsl
dec
stos
xorl
mov
nop
xchg
push
inc
mov
mov
mov
jmp
cltd
xor
xchg
pop
mov
in
rcll
pop
sub
add
sub
test
stos
call
push
mov
fldt
pop
adc
inc
adc
adc
inc
and
pop
xchg
sti
xchg
mov
imul
cmp
pusha
jne
or
rcrb
adc
int3
cli
mov
sbb
sbb
mov
mov
sbb
or
push
out
add
xor
cltd
cmp
daa
xchg
jbe
iret
adc
xorl
jecxz
mov
mov
sbb
loop
aaa
xchg
add
loopne
and
xor
pop
das
lret
pop
pushf
insb
rorb
aad
sbb
fiaddl
add
xor
das
jns
sbb
dec
jmp
popf
cmc
and
push
jle
das
adc
xor
mov
add
sbb
les
pop
pop
cs
icebp
add
std
insb
mov
fiaddl
je
test
jecxz
cld
inc
add
aad
popf
inc
in
pusha
out
add
pop
mov
jmp
repnz
or
icebp
arpl
xchg
jae
aaa
sbb
mov
xor
stos
ss
int
fmull
loopne
dec
mov
cmpsb
mov
pop
cltd
mov
push
push
shlw
outsl
dec
pop
mov
and
adc
xchg
icebp
lcall
inc
jo
lock
fwait
and
fidivrl
xchg
test
or
push
xchg
xchg
cmpsb
imul
test
movsl
mov
es
push
sbb
mov
ss
push
inc
test
sbbb
sti
out
loope
xor
or
cmpsb
push
inc
pop
sub
pusha
mov
mov
xchg
push
loope
sbb
nop
jg
pop
stc
lcall
cltd
repz
inc
push
lret
xor
pusha
mov
sbb
or
push
mov
add
add
mov
sbb
ret
jg
std
lea
mov
cmpb
jp
push
jae
or
xchg
fstps
call
sub
mov
push
mov
mov
insl
test
lock
movsb
push
scas
sbb
ficompl
adc
jno
add
and
adc
stc
adc
or
out
mov
mov
bound
imul
daa
fnstcw
insl
aad
fldl
shl
xor
pop
aas
inc
imul
test
inc
adc
iret
adc
pusha
das
adc
sub
fimuls
loop
in
repnz
push
xchg
btc
clc
jg
movsb
xor
xchg
js
shr
xor
leave
inc
jle
add
out
inc
ret
sbb
jl
mov
mov
es
inc
xor
fsubrl
mov
mov
xchg
aam
out
jle
push
cwtl
ret
pop
es
adc
ret
ret
clc
lcall
jnp
stos
add
cmpsl
ret
inc
fbstp
aad
mov
dec
add
out
test
inc
fimull
shll
popl
or
cmpsl
jno
pop
add
test
push
test
adc
pop
shll
and
popa
outsl
gs
outsl
pop
dec
arpl
out
push
push
jno
loop
xchg
fstpl
adc
test
aas
dec
jns
int3
xchg
lods
aaa
jns
orb
xchg
lea
in
movsl
rorb
sub
and
and
shlb
cltd
das
push
mov
and
outsb
int3
pop
fs
sbb
setns
iret
lock
mov
nop
out
mov
in
fidivrl
xor
lahf
jg
sar
dec
sub
pop
jecxz
popa
shll
pop
loope
jno
shlb
in
inc
ret
inc
incb
or
loope
shlb
cmc
add
popa
sub
cmp
or
lock
cli
lods
ret
mov
aam
cmp
cmp
jne
push
mov
jns
adc
pop
mov
mov
mov
add
mov
int
push
js
mov
inc
and
push
sahf
pusha
mov
cmc
push
push
hlt
das
xchg
mul
lods
ljmp
mov
gs
cmp
test
sub
xor
sbb
out
lret
cmp
pop
loop
rorl
jp
ret
fnstcw
repnz
mov
in
pop
cwtl
orl
or
lods
adc
ficompl
jp
lcall
mov
push
adcl
and
cld
inc
mov
inc
push
shl
push
hlt
in
fcompl
xor
div
popa
lret
out
cmp
sub
xchg
cmc
add
mov
pop
ret
push
xor
ljmp
mov
lea
in
adc
out
push
cwtl
adc
and
arpl
pop
cltd
mov
cmpb
push
push
pusha
rcl
enter
ss
pusha
push
ret
cwtl
dec
stos
test
ljmp
stos
push
fbstp
out
pop
std
js
frstpm(287
out
pop
movsb
sbb
cmc
ret
sbb
or
mov
push
test
int3
pop
fcomi
orb
add
mov
adc
xor
out
mov
inc
mov
mul
gs
cltd
jno
push
jecxz
jns
sbb
push
dec
mov
sub
jl
scas
loop
lea
les
or
xchg
clc
sahf
inc
rcll
lea
or
lds
cmp
mov
jbe
loope
fldenv
inc
jl
aam
dec
xchg
ss
loop
insl
into
xor
bound
xchg
or
add
mov
into
push
sbb
bound
roll
inc
sub
or
scas
popw
push
dec
or
jl
aad
sahf
dec
in
push
sti
stos
dec
ss
xchg
sbb
and
test
sub
push
call
push
adc
mov
xchg
inc
js
jecxz
mov
jge
mov
outsl
jp
hlt
pop
dec
cmp
sahf
xchg
repz
sbb
fcoms
push
jnp
imul
lret
loope
repnz
jp
outsl
imul
lds
xor
add
and
and
push
jne
xor
pusha
mov
outsb
pop
out
ss
inc
pop
lods
int3
jmp
imulb
stos
add
ret
sbb
sahf
loopne
push
dec
je
cmp
shlw
mov
xchg
pop
xor
inc
dec
outsb
ss
xchg
into
push
mov
cmp
push
jno
or
add
sub
stos
out
pop
xor
addl
das
cmpl
mov
inc
mov
xor
insl
mov
inc
and
sbb
out
ljmp
xchg
mov
or
ret
in
andb
sub
and
xchg
mov
mov
or
test
xchg
lds
lcall
sub
scas
push
loopne
rol
scas
sub
pop
icebp
scas
mov
push
mov
mov
inc
cmp
nop
cmc
gs
insb
pop
lahf
or
inc
out
fisubrs
xor
dec
imul
jnp
jno
hlt
cmpsl
or
or
jbe
repz
jl
ret
jo
mov
inc
mov
andl
and
ja
fiaddl
sub
scas
inc
mov
cli
xchg
mov
test
adcb
jne
mov
jno
sub
popa
jnp
adc
push
lahf
in
out
adc
push
lret
or
jne
jmp
in
jb
jmp
jl
rclb
push
stc
mov
movsb
sub
and
nop
insb
outsl
rorb
fcmovbe
clc
pop
or
push
xchg
icebp
sub
std
push
rcl
push
jl
or
movsb
jb
into
shlb
dec
lcall
test
xor
popa
test
movsl
inc
jnp
jnp
shrb
add
jbe
decb
ret
in
mov
jge
push
mov
and
cs
insb
mov
xor
add
adc
stos
repnz
push
jle
cmp
dec
xor
imul
pop
std
icebp
xchg
sbb
jg
pop
test
adc
inc
scas
stos
fisubs
aad
dec
aad
sub
sub
fsts
xchg
scas
pop
and
mov
insb
sub
shlb
test
mov
xchg
js
mov
jp
mov
out
inc
sar
test
mov
jge
dec
xorb
dec
cmpsl
movsb
push
or
sub
xchg
ds
sub
mov
cltd
lcall
cmc
in
es
sbb
fdivrl
and
cmp
dec
mov
mov
jmp
or
xchg
nop
mov
js
push
mov
test
out
pop
cwtl
bound
jmp
sbb
xor
shll
imul
sbb
aam
xchg
test
inc
mov
jp
sbb
addr16
push
mov
mov
adc
and
imul
mov
xchg
jo
cmp
xor
and
insb
mov
add
sbb
les
imul
jno
jp
mov
loopne
push
sbb
push
sub
push
jno
out
add
or
xor
sub
jmp
cmpb
jl
decl
pop
push
test
cltd
jmp
push
jno
xor
int
xchg
addr16
jo
cmp
dec
xor
shlb
mov
fxch
jge
adc
mov
dec
pop
fldt
mov
les
lret
and
mov
dec
xchg
inc
pop
outsl
addr16
inc
pop
cmpsb
mov
sahf
xchg
push
inc
push
inc
jle
cmp
out
clc
loopne
cmp
lds
jb
fs
icebp
ret
shrb
fimull
in
popa
xchg
jae
mov
xchg
call
add
pop
and
add
dec
lret
dec
push
adc
or
std
loop
adc
lret
jae
push
ret
pop
test
movups
outsl
sub
mov
inc
imul
jmp
dec
js
sbb
dec
add
or
dec
jo
cs
fisubs
in
aad
lds
xchg
push
scas
cmp
jbe
roll
fisubl
lods
movsb
or
mov
out
xor
add
pop
mov
das
sub
aad
adc
xchg
cld
dec
addr16
push
fstps
jmp
lea
stos
pop
inc
lods
xchg
mov
call
ret
lods
xor
sub
js
loope
in
fs
jmp
aaa
mov
cmp
into
pusha
xchg
lea
inc
push
xchg
cli
mov
fnstenv
jne
jge
ds
sbb
push
testl
mov
ret
cld
bound
push
test
jecxz
in
mov
icebp
outsb
dec
jl
sub
xchg
sbb
inc
jns
jb
push
popa
pop
popa
stos
je
and
outsb
mov
mov
dec
mov
sub
ljmp
es
in
xchg
jae
pusha
cmc
pop
pop
test
fs
cmp
fyl2x
jecxz
repnz
push
xor
lahf
pavgw
shl
cli
iret
ss
adc
inc
pop
or
xchg
add
jp
test
and
push
rclb
xlat
ja
push
sbb
jo
pop
insl
or
int
sbb
popf
fsubrl
sbb
xchg
mov
or
int
rcrb
lock
push
aas
fpatan
lock
sbb
test
in
daa
rcrb
loope
and
cs
outsl
lcall
xor
sub
and
insb
movsl
jns
or
jl
test
and
push
lahf
in
or
ja
mov
xchg
mov
cmpsl
arpl
sbb
lret
jns
pop
sub
jnp
aaa
fnstcw
add
push
pop
sbb
mov
pushf
lods
aaa
cld
mov
xchg
xchg
addl
mov
mov
xchg
sub
mov
and
xlat
hlt
cmpsl
dec
stc
sub
cmp
hlt
mov
lods
loop
sub
call
popa
aas
inc
mov
in
and
jl
xchg
mov
cwtl
repnz
leave
in
mov
loope
das
mov
add
fcomps
pop
enter
or
nop
or
mov
jns
frstpm(287
dec
sub
lcall
mov
inc
jns
gs
insb
and
and
stos
sbb
outsb
test
xlat
add
aam
cld
mov
in
cwtl
cmp
sub
into
sbb
je
dec
leave
loopne
adc
in
or
nop
and
out
jecxz
hlt
inc
pop
pop
nop
adcb
adc
pop
or
inc
mov
sub
cli
es
adcl
jae
movsl
out
mov
jmp
cltd
mov
push
iret
shll
or
pusha
test
outsl
add
in
pop
sub
pop
and
push
or
push
ljmp
push
fwait
cmp
mov
mov
nop
fsubrs
lds
add
jne
mov
ret
or
inc
fs
or
leave
call
stos
or
shrl
adc
rorl
js
or
xor
out
add
inc
ret
sbb
mov
clc
pusha
xchg
dec
addl
dec
iret
scas
mov
in
and
sub
mov
arpl
aas
adc
lods
sarb
fidivrl
jnp
add
add
cmp
popa
adc
jecxz
cs
dec
mov
sub
lret
xorb
jmp
push
ret
aaa
sbb
sub
sarl
mov
mov
sbb
pop
push
jmp
push
mov
sub
loope
data16
mov
push
mov
sub
ret
or
push
test
out
mov
mov
pop
xchg
es
cltd
lea
outsb
shlb
push
popf
frstor
fisttpll
pop
push
xor
repnz
cmp
sub
push
jecxz
mov
loop
stc
je
xchg
std
rorl
clc
fistpll
aas
pop
fistpll
mov
mov
and
sub
jne
shll
sbb
push
cmpsb
int3
dec
addr16
aas
sub
iret
mov
pop
loope
mov
xor
shrb
jg
mov
pop
ljmp
sub
mov
push
out
push
idivb
mov
ljmp
jo
imul
pop
jg
sbb
jno
pop
sti
xchg
repnz
in
dec
test
bound
ret
pop
ret
sub
sbb
pop
sbb
cld
subb
mov
js
mov
jne
push
pop
repz
xchg
pop
pop
cmp
and
mov
or
jle
cmp
sub
icebp
mov
jge
dec
imul
fistps
mov
xor
aam
scas
add
mov
ljmp
xchg
jne
addr16
aas
and
lret
fmull
sti
dec
test
push
leave
sub
xchg
fxch
aas
pop
aad
and
mov
pushf
outsl
mov
xchg
pop
data16
push
push
das
aad
push
bound
cwtl
pop
dec
xchg
mov
lds
jge
mov
mov
lea
pop
xor
push
out
bound
sub
pop
mov
dec
fcmovb
out
xor
cli
mov
push
xor
out
test
mov
add
add
cmpsl
ja
pop
scas
add
inc
addr16
mov
sub
add
mov
pop
cs
ljmp
outsb
mov
data16
cmpsb
dec
xchg
in
das
push
jle
cmp
xchg
pop
push
test
mov
push
popa
mov
sbb
xor
mov
loopne
cmpsl
adc
mov
stc
ror
or
inc
push
or
or
add
xor
in
or
adc
mov
adc
dec
pusha
mov
sahf
mov
aaa
insl
lret
push
push
xchg
jnp
jl
fcoml
jns
std
lret
xchg
ss
clc
and
sub
pusha
inc
mov
xorb
and
xor
and
sbb
lahf
shr
xchg
inc
xor
sarl
nop
int
inc
stos
mov
nop
test
test
sub
dec
sub
or
test
xorl
adc
fsubs
lret
lods
inc
cmp
fildl
out
dec
lret
mov
xchg
xor
adc
call
xchg
pop
scas
dec
cmpb
daa
sub
test
push
mov
and
int
sub
push
push
movsb
pop
in
repnz
iret
cwtl
cltd
lahf
andb
mov
jb
xor
outsl
je
mov
jg
out
test
cmp
mov
mov
push
cld
mov
cltd
and
or
cmp
xlat
xchg
out
leave
xchg
jno
out
inc
test
pop
and
ds
dec
add
jg
pop
pop
sub
imul
push
xchg
aaa
iret
lock
dec
pop
vmovdqa
jb
jb
inc
pop
mov
dec
push
mov
shll
mov
push
in
ja
sarl
cmc
inc
pusha
imul
pop
or
pop
add
rorb
jp
lret
roll
pushf
shll
fwait
push
xchg
xchg
jl
loopne
in
ds
cmp
arpl
xchg
push
pop
pusha
jmp
sub
jae
repz
cmpsb
aaa
enter
std
jbe
in
or
push
lret
hlt
into
jno
xchg
fadds
out
loopne
call
jae
enter
xor
cmp
cmpl
icebp
cmp
orb
mov
pop
notb
outsl
mov
sbb
inc
mov
or
in
in
mov
test
inc
xlat
ficomps
sub
in
out
ljmp
mov
pop
test
scas
stc
jle
push
js
popa
bound
ret
pop
rol
lds
lea
adc
xchg
dec
in
and
or
es
inc
adc
cmc
mov
scas
insl
add
pop
jmp
cltd
push
cmp
add
pop
cmp
leave
cmp
push
lcall
pop
test
div
dec
jno
pop
mov
out
add
ss
inc
fimuls
sbb
lods
cmp
outsb
jno
mov
sbb
pop
xchg
in
dec
jmp
inc
sub
dec
inc
cwtl
and
add
enter
pop
adc
push
aam
jl
mov
jge
push
xorb
aas
push
aad
rcrb
dec
cmpsl
icebp
jge
xchg
dec
pop
mov
movl
adc
fisubl
popf
leave
iret
lds
and
adc
mov
insl
ljmp
cltd
lret
and
xchg
sbb
divb
je
or
pusha
aad
dec
adc
or
cmp
pop
mov
roll
push
outsl
xorb
dec
adc
jge
adc
cmc
setl
mov
push
rclb
adc
mov
inc
cmpsb
inc
push
test
jecxz
ficomps
dec
push
pushl
push
push
xchg
ds
xchg
cld
xchg
adc
fdiv
mov
adc
cmpsl
mov
int3
sub
fidivl
js
leave
int3
negb
inc
mov
lahf
dec
sbb
pusha
mov
subb
jno
and
cltd
inc
loop
movsb
ret
xchg
leave
add
inc
inc
ret
xor
repz
push
cmp
xchg
jb
mov
test
adc
and
inc
xchg
dec
int
je
or
movsb
movsb
xor
aas
mov
and
lea
pop
fiaddl
mov
jb
icebp
nopl
adc
imul
movsl
or
lret
or
dec
or
shlb
or
gs
inc
data16
pop
pop
loop
cmp
push
xchg
popa
ds
pop
jae
sbb
gs
jno
sub
in
daa
inc
cmpb
mul
cmpsb
movsl
aad
and
adc
or
mov
rcr
jae
xchg
jp
xchg
into
xchg
xchg
xchg
lods
push
and
cmp
mov
inc
dec
push
aaa
push
xchg
std
leave
jg
pop
int3
icebp
adc
cmp
cld
add
add
into
ss
leave
aam
addr16
sub
shlb
adc
jl
and
rclb
push
mov
aad
js
mov
lock
or
repz
ret
outsb
bnd
loop
sbb
int3
pop
je
lret
sbb
xchg
sub
out
arpl
loopne
out
inc
stc
mov
xchg
adc
test
sub
in
and
xor
lods
mov
dec
icebp
pop
imul
cld
ljmp
mov
sbb
ret
and
pop
mov
xchg
cltd
inc
je
mov
push
adc
iret
aas
mov
arpl
ficoml
aam
cwtl
fstpl
xchg
daa
xor
sarl
cmp
fldt
sbb
dec
dec
pusha
sub
add
stos
scas
outsl
jp
das
mov
lcall
xchg
add
cmp
sar
mov
out
cli
lret
les
and
xor
mov
neg
mov
cmp
fstpl
inc
gs
rorb
push
adc
mov
insl
jo
fs
add
das
mov
test
leave
aam
sbb
test
push
inc
sahf
daa
repz
shl
clc
mov
imul
and
inc
dec
inc
aas
mov
cltd
stos
mov
push
lret
movb
dec
icebp
scas
std
mov
or
es
and
and
jo
or
push
mov
or
adcl
iret
or
fwait
lret
in
cs
push
mov
sbb
outsl
inc
in
int
push
ret
pusha
std
push
aas
jmp
decb
and
sti
cmp
mov
add
push
ss
dec
pushf
inc
push
jae
cwtl
in
add
cmp
mov
loope
mov
cmp
lret
and
mov
cltd
sbb
dec
jbe
pushf
out
fmuls
or
scas
sub
xchg
add
jp
inc
add
fldenv
ss
mov
mov
sbb
adc
andb
fdivs
ret
pushf
push
fisubs
fisubrs
cmp
adc
scas
push
in
lret
inc
mov
mov
and
popl
jb
inc
and
xabort
xchg
adc
mov
flds
dec
jmp
clc
sub
jae
mov
and
aad
stos
lcall
fdiv
sub
push
sub
bound
jbe
jns
or
mov
dec
dec
push
or
clc
pop
dec
cltd
dec
adc
mov
sub
mov
dec
add
in
adc
jle
stos
push
xor
and
push
fwait
mov
scas
sub
out
ja
sarb
shrl
xor
inc
add
adc
add
call
lods
fsincos
jecxz
pop
jo
mov
pop
cli
mov
test
push
xchg
popa
xor
mov
call
xchg
das
xchg
test
push
sahf
cmp
mov
xchg
mov
aad
inc
sti
clc
je
and
repnz
mov
jae
xchg
cmp
cmp
popa
out
cmp
scas
xor
ljmp
repnz
add
mov
cmp
gs
mov
cli
daa
jmp
add
add
sub
jmp
sub
mov
mov
mov
pop
pop
pop
or
and
stc
inc
cli
imul
and
mov
clc
lods
scas
push
shll
out
pop
outsb
dec
add
cs
orb
mov
stos
mov
xchg
sti
icebp
add
jecxz
pop
out
cld
fdivp
inc
jnp
dec
add
pop
xchg
sbb
out
inc
cmp
sbb
dec
arpl
sbb
testb
loop
add
cmp
iret
loopne
sbbl
aad
and
or
les
insl
loopne
sub
add
xor
outsl
sub
arpl
dec
lds
bound
push
in
mov
lock
jge
outsb
dec
int
shll
add
test
cmovs
mov
arpl
xchg
pop
addr16
push
sahf
aad
xchg
repz
mov
icebp
xchg
jecxz
inc
and
pop
sbb
and
push
cmp
add
jno
xor
push
sbb
cmp
sbb
push
pop
and
loop
pop
int3
mov
xor
aad
in
dec
xchg
jg
or
jns
daa
xor
mov
add
jl
fisttps
add
pop
jns
cmp
cmp
inc
jl
dec
popf
das
push
fld
mov
push
push
adc
mov
mov
dec
ret
xor
sbb
lret
sbb
push
xchg
mov
std
adc
cltd
loopne
jae
ror
ja
bound
mov
add
ss
push
and
jge
add
mov
data16
stos
sub
sub
stc
int3
and
sub
icebp
jl
jne
mov
cmp
push
jmp
fnstsw
mov
jecxz
mov
iret
jge
lret
pop
add
std
aaa
mov
and
mov
ficompl
cs
je
daa
fcomps
cmpsb
imul
sbb
js
insb
cmp
xchg
mov
inc
ds
repz
and
fistl
sahf
sbb
repz
jae
jbe
addl
dec
push
fwait
inc
icebp
imul
push
in
aam
mov
sub
pop
inc
and
mov
pop
sub
movsl
sub
xchg
dec
xchg
and
cmpb
arpl
mov
out
mov
cmp
sub
cmpb
fs
mov
fucom
adc
ficompl
movsl
call
movsb
xor
mov
mov
testb
outsl
adc
leave
cmpsb
push
sub
mov
mov
dec
cmc
ljmp
ds
shrl
inc
mov
es
mov
cmp
pop
sbb
insl
mov
inc
add
push
add
ljmp
or
cmp
and
fists
cmp
ljmp
jo
or
loope
pop
enter
stos
je
xchg
fcom
mov
cld
and
or
xor
mov
daa
push
in
scas
aas
incl
sub
aad
xor
mov
mov
push
out
insb
add
lcall
xchg
xlat
mov
pop
cld
pop
sub
jg
in
in
sub
fdivrs
sub
outsl
cld
dec
jae
cmp
sbb
sbb
out
pop
pusha
pop
cmp
adc
xchg
pop
jbe
xchg
push
fcomps
insl
jecxz
jg
sti
in
fmul
or
into
add
sbb
jl
jle
inc
mov
aas
add
test
out
dec
fmull
fs
push
dec
or
jne
xchg
cmp
or
test
cmpsb
std
or
or
clc
jl
lcall
sub
lahf
bound
rcll
cli
leave
mov
fistl
xchg
add
mov
and
fsubrs
fbstp
xor
or
lea
shlb
push
repnz
cmp
sbb
repnz
setno
fstpt
mov
inc
xlat
mov
sahf
mov
jp
jg
aad
jp
or
xchg
rclb
jns
mov
lea
std
jle
outsb
pushf
shll
sarb
idivl
push
fsts
dec
jbe
inc
cmp
clc
xchg
sub
out
cli
xor
cmpsl
cs
mov
pusha
imull
mul
sub
dec
std
sbb
enter
arpl
dec
fdivl
aam
fsubs
cmp
xor
fwait
dec
lds
push
cmc
cmp
cltd
jnp
loop
pop
stc
push
rcr
shlb
mov
andl
ret
mov
movsb
cli
cmp
jmp
leave
jecxz
or
sub
fwait
or
adc
addr16
pop
mov
add
mov
gs
add
punpckldq
mov
add
mov
push
lods
mov
insb
enter
ret
pusha
inc
or
sbb
movsl
stos
imul
arpl
mov
sbb
mov
pop
mov
jne
bound
inc
xor
adc
lea
push
add
mov
add
inc
loopne
movsl
sub
adc
sbb
aas
dec
pop
xchg
aam
or
insl
push
fbstp
fistpl
push
cmp
pop
in
mov
bound
xchg
dec
adc
jle
cs
jbe
imul
or
mov
clc
scas
jle
push
or
nop
pop
add
enter
xchg
nop
sbb
adc
aas
popf
add
ds
mov
aam
fdivrs
pop
mov
sbb
jnp
xor
sub
pop
mov
jnp
pop
sub
repnz
pop
jnp
mov
scas
adc
dec
outsb
out
lcall
jb
popa
sub
fs
pop
and
inc
movsb
sbb
adc
out
stos
in
add
mov
dec
push
es
add
incl
cmpsb
push
add
sbb
jle
xor
or
jno
pop
inc
add
out
les
inc
popa
lea
jp
lock
xchg
inc
sbb
mov
lock
push
sarl
add
bound
dec
ljmp
dec
xor
pushf
das
jne
cmpsl
ljmp
push
out
aaa
outsb
insb
inc
and
in
add
stc
xchg
in
movsb
xchg
mov
jno
adc
xlat
jno
ss
adcb
inc
xor
mov
leave
clc
lret
jmp
scas
sarb
movzbl
adc
das
xor
jne
out
in
pop
mov
dec
mov
hlt
sub
xor
outsl
mov
addr16
cmp
xor
sub
xchg
mov
xchg
ja
mov
loopne
mov
xor
adc
mov
cltd
cmp
enter
pop
dec
daa
or
mov
lock
popf
inc
mulb
pop
and
and
shrb
or
sbb
repnz
jmp
xchg
shl
orb
outsb
mov
insl
dec
fcomip
test
popf
push
push
fwait
push
dec
fstp
lahf
and
fwait
push
out
das
xor
dec
xor
sub
xor
dec
xlat
and
jnp
push
mov
out
aam
pop
push
mov
cwtl
push
mov
addb
xor
dec
stos
lock
leave
into
mov
loop
pop
jl
add
inc
mov
dec
push
jp
jg
sub
out
je
lods
xchg
dec
inc
xor
dec
mov
push
scas
inc
outsb
movsb
pop
adc
icebp
push
dec
rcll
push
add
lods
mov
into
in
pop
cltd
stos
leave
iret
mov
mov
sahf
ret
add
and
int3
lods
out
sti
xor
xchg
ss
inc
flds
call
cmp
testb
out
cld
in
clc
mov
add
enter
daa
xchg
mov
jmp
inc
pop
ljmp
mov
pop
in
jecxz
cmpsb
pop
sbbb
adc
xor
mov
xchg
dec
adc
add
cmc
les
dec
ret
sbb
sbb
add
outsl
pushf
sti
dec
ljmp
pusha
into
cmp
or
sti
out
jge
lds
xchg
mov
movsb
jno
xchg
mov
push
and
pop
sub
pop
popf
inc
push
pop
in
and
or
loopne
lret
and
leave
mov
mov
dec
push
fsubrs
pop
stc
fnsave
out
out
xorb
stos
fisubrs
int3
mov
inc
pop
das
adc
or
adc
cmp
sbb
je
outsl
sub
xchg
mov
fdivrl
inc
lds
jb
jge
add
xlat
stos
sub
inc
mov
and
inc
lods
add
mov
jle
scas
mov
mov
jb
or
iret
imul
or
adc
lret
mov
int
lods
fbld
stos
and
dec
shlb
jae
sub
shll
cmp
test
cmp
push
imul
out
mov
jo
sbb
imul
shrb
xlat
aad
loop
loopne
cmc
mov
xchg
lcall
pop
adc
cli
out
pop
xchg
or
sbb
movsl
repz
pop
ss
jae
dec
jecxz
and
call
outsl
push
xchg
or
ds
out
repz
lret
cmp
jbe
inc
ret
add
stos
ret
lret
add
mov
push
pop
stos
pop
addl
xor
cmp
or
insb
sbb
aad
xchg
sub
add
in
mov
movl
sbb
pop
insl
insl
int3
in
lret
icebp
sbb
inc
inc
inc
cltd
push
shr
jns
ss
popa
sti
cmp
dec
loopne
xor
mov
jb
jo
into
int3
sub
cmpsl
jnp
push
jne
pop
inc
lods
push
sbb
xor
fstpt
sub
ss
jmp
cld
push
or
rcr
aad
into
jno
leave
or
shrl
int3
xchg
xchg
ds
xlat
scas
fisubs
sahf
lret
gs
in
xlat
fimull
gs
xor
pop
lock
xor
fistps
adc
mov
int
fwait
sbb
out
outsl
and
mov
adc
jl
int
sub
js
je
dec
cli
aam
pop
adcl
cmp
push
mov
popf
out
in
jg
xor
pop
sbb
mov
inc
and
xor
movsb
mov
mov
push
mov
lods
inc
ljmp
je
mov
insl
adc
or
pop
inc
jne
jg
je
xor
out
fcmovnu
dec
pushf
jl
jmp
test
test
ljmp
mov
dec
mov
adc
xor
inc
sbb
xor
lock
lds
fistps
hlt
stos
adc
jno
daa
cltd
in
cwtl
dec
cmp
enter
loopne
scas
mov
mov
dec
or
insl
fwait
das
addr16
shr
je
push
jmp
sti
inc
in
adc
fdivs
nop
jae
lds
mov
cwtl
sub
je
testb
out
sub
cltd
or
add
sub
pop
dec
ret
mov
mov
bound
xor
inc
push
push
ret
add
test
imull
dec
ret
or
jecxz
lds
jo
in
sub
in
jne
cmpsb
aas
dec
inc
lcall
mov
mov
scas
stos
sbb
push
push
xlat
push
jg
mov
nop
pop
shlb
std
cld
mov
push
fwait
pop
xchg
or
mov
fsubl
mov
push
rolb
in
or
dec
mov
cmp
xor
les
sbb
add
nop
push
jae
cmc
sub
lcall
xchg
push
cmc
pop
adc
sub
cmp
pop
sbb
xchg
push
adc
mov
leave
inc
das
js
dec
cwtl
cwtl
pop
orl
dec
icebp
insb
pop
pusha
jne
add
adc
sahf
dec
inc
bound
test
inc
mov
scas
not
std
mov
je
lds
out
mov
jnp
adc
out
je
and
ror
pop
lock
jl
nop
ds
sahf
xchg
xor
mov
adc
sub
add
pushf
cmp
add
stc
jne
stc
mov
adc
aaa
push
push
or
mov
inc
add
inc
xchg
ljmp
icebp
movsb
sbb
pop
or
es
scas
mov
lcall
or
adc
mov
das
loopne
adc
add
jmp
ret
or
cld
mov
leave
cmp
pop
pop
in
ljmp
cmc
icebp
call
cltd
mov
fbstp
shr
xor
enter
add
sti
pop
loop
mov
clc
orl
dec
lahf
jb
sarl
movsb
nop
dec
int
decb
addr16
cmp
mov
fidivrl
stc
pop
pop
aad
imulb
jecxz
loopne
and
gs
push
aam
pusha
lods
fsubrs
gs
and
adc
push
ljmp
inc
and
and
bound
push
daa
xchg
fwait
cmp
andb
jmp
insb
pop
movsw
fcoml
iret
sbb
push
xor
lahf
lods
mov
repnz
inc
cli
dec
jno
push
pop
jne
pop
xor
inc
mov
test
in
pop
push
mov
mov
jb
sub
in
ficoml
add
out
movsl
iret
icebp
movsb
cmp
dec
repnz
fldenv
or
and
pop
sarb
int
xor
pop
cmp
dec
test
xor
lret
and
pop
adc
gs
dec
cmpsl
loopne
lods
pusha
outsb
inc
aad
lret
pop
xchg
cli
int
lds
dec
xlat
lcall
addr16
lds
inc
lret
js
aaa
cmpsl
and
inc
jecxz
orl
clc
pop
and
jmp
mov
xchg
fnstcw
pop
insb
xor
call
scas
push
andb
sub
fnstsw
pop
popf
adc
lock
lods
stos
lods
pop
imul
sbb
loopne
mov
outsb
aaa
into
cld
pop
punpckhbw
and
jp
dec
cltd
jae
out
pop
jno
jmp
inc
sti
and
pop
mov
push
mov
inc
xor
jae
mov
pop
mov
in
cli
jg
jae
int3
cmp
adc
pop
and
mov
sbb
inc
mov
add
dec
mov
cmpsb
push
stos
xlat
pop
loope
add
adc
mov
jns
inc
and
pop
ds
cmp
pushf
mov
push
push
pop
movq
sbb
or
sbb
xchg
push
stos
insb
xor
adc
insb
cmc
jns
sub
nop
lods
inc
push
pop
outsb
subl
bound
xlat
out
add
and
cmp
mov
int
sarl
cmp
xchg
mov
ja
shrb
jbe
pusha
testl
loop
fiaddl
sub
daa
arpl
mov
je
mov
je
add
loopne
sahf
cmp
fwait
xchg
push
test
mov
repz
xchg
pop
test
mov
dec
hlt
jg
scas
push
loop
sub
sbbl
sbb
mov
mov
mov
hlt
in
xchg
bound
arpl
jne
les
out
add
mov
lods
mov
aad
lock
dec
scas
rol
and
fstp
imul
ret
xor
jno
sbb
vmwrite
jns
test
adc
imul
add
dec
mov
mov
lea
inc
movsb
mov
hlt
cli
test
sub
jecxz
pushf
mov
or
test
cmp
and
std
repnz
mov
jo
push
xlat
push
dec
jno
sbb
sbb
adc
push
add
and
xchg
dec
add
dec
stc
cmp
jnp
mov
mov
test
jmp
rorl
int3
xchg
jno
das
rcll
pop
push
mov
pop
lret
push
dec
add
sub
je
jb
xchg
xchg
mov
sbb
mov
roll
sbb
into
nop
insl
movsl
rorl
outsb
cltd
ret
stos
sbb
pop
mov
dec
xchg
push
ret
and
sarl
sbb
lret
test
bound
cld
and
or
pop
inc
ss
xor
and
or
and
ffreep
pop
rorb
test
aad
dec
lea
mov
dec
cmp
xor
lcall
fs
jo
test
dec
lahf
adc
jns
fcoms
imulb
out
aad
xor
cs
loopne
ljmp
and
jg
mov
fildl
test
mulb
mov
push
jge
ja
scas
jmp
mov
sbb
iret
mov
addr16
fsubrs
push
and
scas
stos
repz
adc
xlat
sub
push
xchg
or
add
sub
lcall
jmp
mov
dec
mov
cmc
adc
aam
inc
add
and
out
ficompl
mov
clc
scas
jle
imul
lret
mov
jge
jne
lahf
rorl
pop
stos
inc
shrl
loop
cmc
xchg
pop
stos
sahf
sub
imul
into
inc
mov
in
imul
cli
fnsave
lret
out
mov
iret
ficomps
ficompl
rcl
or
bound
aam
hlt
pushl
inc
repz
mov
xor
mov
jg
lret
dec
fwait
hlt
mov
lods
or
mov
jnp
sub
loop
dec
sub
adc
mov
cmp
jecxz
cmp
xchg
shlb
fidivrl
scas
push
repz
bts
rcrb
push
adc
mov
and
pop
jecxz
scas
lret
pop
icebp
lcall
scas
lcall
or
repz
pop
push
xor
iret
out
cmpsb
sub
sahf
push
mov
push
dec
data16
mov
lret
mov
mov
stc
out
mov
mov
sub
jge
jg
jmp
fistps
hlt
sub
sbbb
cld
out
mov
mov
mov
icebp
dec
xor
int3
pop
stos
pop
movsb
jge
sbb
jns
push
stos
decb
sbb
repnz
cmp
loopne
and
inc
or
mov
inc
int3
std
inc
movsb
int3
push
lods
xchg
leave
and
jb
adc
add
jno
nop
imul
rcrb
xchg
pop
dec
jne
in
jae
roll
or
testl
jns
mov
mov
cmp
mov
lret
mov
jb
and
and
inc
dec
mov
movsb
jl
add
movb
mov
and
or
add
test
adc
or
sub
out
jo
pop
jbe
pop
sbb
clc
test
cmc
dec
sbb
xchg
repz
pop
daa
dec
lods
repz
pop
dec
xchg
push
lret
push
hlt
lret
test
pusha
test
sti
jb
xor
cmp
mov
push
or
or
adc
hlt
stc
adc
xor
jne
mov
cmp
push
outsb
fdiv
push
mov
mov
sub
fnsave
add
in
leave
sub
mov
lds
shll
jb
icebp
adc
and
cmpsb
inc
cmp
pop
lret
call
xor
hlt
adc
xor
and
sti
jl
and
int
mov
xchg
or
in
add
enter
leave
notb
xorb
lret
lods
pop
adc
pop
leave
imul
mov
addb
mov
mov
xor
hlt
push
jle
test
or
xchg
fnstsw
mov
xchg
stc
adc
add
outsb
mov
or
scas
cmp
mov
mov
js
and
mov
nop
sbb
cmp
sbb
pusha
xor
cli
gs
lods
icebp
sbb
and
mov
into
fisttps
mov
xchg
xor
subl
call
stc
mov
fstps
popa
mov
jp
sub
fmuls
and
lret
cmpsl
sbb
sub
in
mov
jns
popf
stos
push
mov
leave
fcomps
call
out
push
scas
xor
pop
daa
mov
pop
mov
pop
sti
es
ret
test
lret
test
jmp
stos
and
mov
inc
pusha
xor
mov
test
mov
imul
sub
sub
mov
xchg
lods
leave
xlat
lcall
pop
xor
ret
mov
push
in
pop
xchg
or
decb
pop
push
mov
sbb
and
jns
ljmp
frstor
stos
daa
or
jns
mov
lea
xor
aas
es
mov
sti
mov
pushf
push
orb
data16
adc
jae
scas
mov
outsb
rorl
dec
add
pop
outsl
push
ljmp
mov
push
lods
inc
xor
sbbb
aas
fcoms
and
das
sbb
fucomp
xchg
in
cmp
lock
xchg
jb
adc
dec
inc
or
insb
or
mov
sahf
test
dec
popa
into
xchg
and
add
push
scas
ja
pop
jp
add
push
je
pushf
and
roll
or
dec
xor
ficoml
bnd
fimull
sub
mulb
add
pop
cmp
sbb
imul
pop
sub
lds
loopne
inc
std
in
pusha
cmp
jb
repz
cltd
adc
lods
in
mov
cmc
fisttpll
loop
cmp
addl
addl
dec
sbb
enter
and
stc
xor
cmpsb
cmpsb
loop
mov
test
pusha
add
xchg
imul
dec
cmp
repnz
lock
out
dec
sub
pop
or
lock
and
inc
pop
pop
lret
repz
push
cmpsb
movsb
insl
add
and
xor
sub
sahf
adc
ds
sti
xchg
out
sti
lods
insl
push
mov
sbb
out
scas
fmuls
test
mov
lcall
imul
sbb
les
stos
lock
scas
lds
and
pusha
push
lock
lods
ss
lds
out
pushl
xor
daa
ljmp
adc
sbb
adc
out
xor
jb
inc
pop
iret
and
xchg
inc
push
cmpsl
dec
cwtl
sbb
add
jo
in
mov
dec
sub
scas
les
and
mov
xor
in
int3
stos
sbb
xlat
call
push
push
gs
aas
xor
xor
mov
mov
and
dec
mov
pop
into
mov
jbe
in
mov
dec
call
pop
cwtl
lds
push
imul
jg
or
cmc
ret
jo
cmp
jp
jg
or
stos
xor
jae
aas
sbb
jno
mov
push
cmovge
inc
sub
push
outsl
lcall
insl
mov
jmp
cmp
pop
jbe
sarb
add
push
pop
dec
pop
negb
imul
add
sti
in
leave
outsl
xchg
rclb
inc
leave
cmp
shl
mov
les
jns
repnz
mov
xchg
ja
popa
js
inc
push
sbb
jg
fcoml
ss
andl
inc
stc
cli
adc
inc
or
lret
lock
dec
fcmove
cmpb
and
cmp
shld
hlt
xlat
insl
pop
jb
out
xor
movsl
jg
dec
jb
mov
lcall
mov
rcrb
lret
test
or
imul
pop
mov
gs
lods
adc
dec
and
add
lcall
aas
xchg
xor
sbb
popf
pushf
imul
add
xor
push
sbb
xchg
call
loopne
xchg
adc
and
outsl
js
fcmovnb
das
sbb
xchg
fsubrs
pop
pushf
mov
in
repnz
cmp
outsb
jbe
mov
inc
call
jecxz
mov
cmp
mov
jl
out
stos
inc
leave
in
and
loop
mov
jl
xor
fstps
js
adc
dec
cmp
mov
xor
push
ds
syscall
test
lods
in
mov
pop
fsubrl
mov
cltd
push
imul
add
push
call
fsubl
fwait
and
fdivrl
test
into
movsl
test
adc
fisubs
fdiv
jns
clc
sub
aaa
ja
mov
jno
enter
fildl
cmpsb
mov
hlt
cs
jp
dec
inc
fwait
incb
pop
pop
addr16
dec
inc
mov
add
inc
fucom
and
mov
add
xchg
mov
push
pop
inc
and
xor
je
repnz
xchg
xchg
imull
pop
sub
fwait
mov
sub
dec
push
and
xchg
lods
outsb
mov
mov
mov
popf
fildll
mov
lods
sbb
or
rol
std
pop
movsb
pop
push
adc
test
or
mov
xor
push
cld
out
clc
add
loope
out
mov
cmp
cmp
adc
call
push
xor
inc
pop
cmpsb
iret
dec
xchg
and
aaa
pop
add
xor
flds
or
inc
fisubrl
push
sub
scas
adcl
data16
add
incb
outsl
xor
sbb
pop
gs
nop
sbb
jmp
sub
cmp
out
scas
test
mov
xlat
jge
push
sti
add
xchg
xchg
cld
xor
xor
xchg
pusha
subl
cmp
test
les
fadd
jp
add
adc
lcall
pop
dec
lcall
xor
cmp
aam
aaa
adcl
dec
ficoml
xchg
mull
into
and
dec
es
fisttpll
mov
mov
cmp
sbb
les
dec
xlat
cltd
js
pop
rcr
mov
rolb
inc
pop
dec
out
rcrb
xorb
int3
sbb
sbb
mov
xchg
add
aaa
adc
cmpsb
xchg
or
mov
enter
insl
loopne
sbb
bound
into
jecxz
inc
adc
out
xor
outsb
std
test
ss
add
inc
jp
scas
cltd
test
test
mov
loopne
xor
aaa
icebp
frstor
and
or
popa
jle
aas
xor
fldenv
mov
and
aad
mov
sub
repz
pushf
inc
dec
sbb
jne
out
fisubs
mov
dec
mov
negl
inc
push
jae
incb
ja
pop
aad
xchg
xchg
ffree
mul
push
and
or
jbe
les
aaa
in
call
repz
jbe
xchg
mov
mov
ret
andl
in
movsb
stos
das
loope
inc
mov
mov
aad
fs
cmpsb
mov
jge
popa
jbe
jge
or
arpl
stos
add
xor
cltd
xchg
mov
push
rcrb
sub
movsb
lds
pop
ja
push
pusha
jo
and
xchg
icebp
leave
jmp
sub
and
sbbb
fdivs
outsl
daa
sbb
jae
leave
arpl
inc
xchg
add
pushf
xchg
ja
repz
sbb
hlt
clc
or
push
inc
adc
adc
aad
stos
pusha
loopne
es
cli
andl
nop
mov
aas
pop
pop
push
sub
cmp
jne
in
scas
es
pop
test
into
cmc
in
xor
or
leave
add
test
testl
into
test
out
push
mov
xor
inc
cwtl
add
push
mov
cmp
pop
ljmp
pop
mov
jmp
jb
cmp
add
int3
cmp
insl
jg
shll
inc
or
into
cltd
insl
xchg
mov
mov
jo
test
mov
adc
mov
fxam
cmpsb
push
lea
ret
cmp
cmp
fucomi
jb
cmp
clc
mov
jno
sbb
push
cmpsb
mov
or
fildll
or
adc
subb
adcb
std
push
cmp
xlat
stos
cmp
ret
add
emms
pop
lods
jmp
push
ja
out
fnop
in
mov
pop
jge
and
inc
push
pop
data16
sub
nop
mov
pop
leave
mov
jo
movsb
pop
push
cmp
cmp
stos
sub
xchg
mov
sub
add
shll
or
push
add
push
mov
subl
adc
std
int3
pop
xor
xlat
rol
jle
mulb
adcl
jbe
inc
daa
pushl
enter
sahf
enter
push
addl
pop
sbb
mov
xlat
push
xchg
push
imul
loop
in
push
test
pop
rorb
jns
shlb
and
insl
mov
clc
iret
mov
iret
ret
ds
lret
push
pop
cs
mov
adc
cmpb
int3
dec
mov
add
sub
gs
mov
addb
ret
xchg
rcll
ret
jns
add
scas
dec
sub
jbe
mov
pop
mulb
lret
inc
cmpsl
test
xor
lock
stos
or
decl
push
mov
sbb
repz
mov
addr16
push
lret
sbb
and
fwait
cmp
insl
stos
or
ret
ret
adc
jbe
and
pop
mov
out
aad
lods
sti
sub
lret
mov
rol
sar
dec
inc
xchg
xor
lcall
mov
push
arpl
add
mov
or
push
mov
mov
dec
imul
enter
ss
movsb
aaa
sbbl
fldl2e
and
xor
mov
xchg
es
test
lods
jmp
pop
jge
test
adc
aas
mov
movsl
mov
call
adc
ja
stc
in
or
scas
imul
xchg
push
xchg
mov
mov
inc
xor
outsb
cmc
outsb
xchg
mov
push
test
lods
mov
sbb
xlat
push
mov
pop
or
and
das
mov
popa
mov
ret
sti
jle
stc
enter
add
cmp
test
popa
mov
inc
out
repz
xchg
movsl
xor
dec
stos
shl
push
jno
je
pop
sbb
cmp
arpl
aad
add
stos
adc
xchg
movsb
push
push
push
insb
cmc
movsl
add
xchg
sti
and
outsl
pushf
fsubrs
cmp
out
scas
out
aaa
inc
mov
inc
je
or
test
cmp
dec
clc
in
mov
test
hlt
adc
dec
sub
cwtl
cmpsl
ds
roll
js
div
test
addr16
add
test
ret
sub
into
xchg
aaa
repnz
xchg
mov
pop
pop
mov
scas
iret
jne
jo
push
jl
pop
imull
jp
xchg
fistpl
stc
andb
sub
inc
mov
sbb
jmp
add
daa
les
dec
or
jmp
adc
push
sarl
insb
sub
je
sbb
in
repnz
imul
dec
aad
or
test
imul
test
pop
jb
fnstenv
aad
pushl
jnp
mov
pop
mov
das
out
mov
lods
aam
xor
das
and
loop
xchg
cmpsl
ret
mov
xchg
sti
les
pop
sbb
in
stos
pop
test
cmp
lock
jno
and
fldcw
movsl
jno
into
xchg
pop
enter
sub
add
mov
inc
jge
inc
xchg
test
jbe
lret
stos
test
push
icebp
jg
mov
mov
in
lods
and
adcb
push
adc
popa
dec
cwtl
adc
stc
cmpsl
push
or
mov
data16
enter
or
mov
xchg
shrl
jmp
xchg
scas
cmp
sbb
ss
sub
mov
call
lcall
mov
xchg
aad
fcmove
shlb
out
mov
std
and
mov
adc
aam
faddl
xchg
stos
inc
push
cmc
lods
sub
and
mov
shrb
push
xchg
cmpsb
iret
aaa
in
stos
mov
inc
push
xchg
ret
adc
xchg
inc
fninit
inc
push
mov
stos
pause
std
cmp
sbb
cwtl
adc
xchg
repnz
mull
sahf
lret
ds
jp
je
fucomi
fidivrs
jo
aam
aas
repnz
js
mov
xchg
daa
mov
in
inc
dec
cmpsl
mov
push
addb
sti
test
and
jb
out
mov
es
lret
mov
sti
ja
cmp
dec
out
jns
xchg
je
sbb
daa
mov
enter
pop
sbb
cmpsb
cmpsl
in
jle
jnp
jb
and
dec
out
lret
out
sub
sbb
adc
push
in
cmp
insb
lds
push
pushl
adc
inc
cmp
movsl
popa
xchg
xchg
lods
pop
xchg
sbb
icebp
mov
push
out
mov
std
fbstp
pop
lcall
fs
loope
das
inc
push
es
ljmp
or
outsl
js
cmp
decb
ret
mov
pop
jl
sub
mov
aaa
xor
outsb
mov
mov
jnp
inc
sbb
cmp
mov
inc
jecxz
insb
ljmp
sbb
sahf
add
xor
mov
adc
test
jmp
push
xchg
insb
mov
mov
and
aas
sti
iret
sbb
add
es
fdivrs
inc
les
add
cld
test
fnstsw
adc
xor
jg
rclb
imul
cmp
or
adc
ds
aam
icebp
xchg
xchg
pop
jno
jnp
dec
pop
inc
fisubrs
cmpsl
inc
repz
test
movsb
push
mov
sbb
or
pop
adc
out
lods
data16
jge
ljmp
sbbb
jecxz
scas
mov
sbb
cmp
pop
ds
push
ds
test
pusha
ds
mov
outsl
add
xchg
cld
in
xlat
sbb
scas
aas
sbb
dec
inc
xchg
lret
outsb
xchg
std
mov
rorl
into
sbb
push
popf
cli
xchg
mov
xchg
lcall
adc
adc
scas
mov
mov
cwtl
js
add
in
lds
data16
arpl
iret
cmp
adc
jp
sub
andl
mov
ss
lods
sbb
lret
inc
push
xor
sti
mov
call
gs
jnp
ljmp
and
sub
aas
fiadds
lods
sbb
push
jnp
aaa
add
mov
test
xor
movsb
or
call
push
add
and
inc
stos
jbe,pt
jne
adc
jbe
xchg
pusha
jecxz
repnz
dec
push
add
adc
jmp
jg
push
mov
jecxz
idivb
add
push
outsb
push
sub
scas
mov
rolb
rorb
jb
mov
mov
out
out
lea
fwait
adc
adc
ds
test
xor
cmp
jno
add
or
fnsave
pop
xchg
scas
pop
subl
lods
add
test
rorb
das
ffreep
fadds
cli
into
mov
pop
mov
cmp
js
jb
push
inc
inc
cwtl
lahf
bound
fsubs
outsb
pop
mov
mov
fstpl
fcmovbe
mov
addr16
loopne
cld
jl
jecxz
lea
pushf
push
aad
push
sbb
scas
sub
int3
sahf
pop
loop
mov
idivl
xor
popf
mov
cli
dec
sub
cwtl
push
cwtl
pusha
outsl
xchg
xchg
out
lods
jnp
pusha
insl
mov
ret
sti
inc
push
jecxz
fdivs
mov
mov
scas
sbb
xor
ljmp
mov
dec
std
push
adc
xchg
mov
xchg
push
xchg
fisubrs
jg
xor
mov
jecxz
push
rorl
dec
xchg
push
xchg
pop
cs
movntps
leave
xlat
cli
or
add
lds
and
into
add
roll
lahf
cmp
dec
xchg
pop
mov
pop
or
fistl
push
add
mov
push
stos
adc
mov
xor
push
jno
adc
cmp
mov
adc
cmp
scas
das
push
in
mov
cmp
loopne
jl
and
loop
and
inc
sti
scas
mov
pop
mov
dec
cmp
pushf
in
cmp
push
sub
pop
lahf
ss
cld
decl
ja
in
inc
mov
ljmp
test
add
in
adc
cli
and
sub
sbb
jb
xchg
xchg
inc
lock
mov
popf
xchg
push
adc
add
stos
icebp
clc
scas
stos
cli
sbb
icebp
lock
sbb
dec
xchg
adc
mov
in
inc
push
xchg
push
repnz
lahf
popa
cltd
or
ficompl
lock
in
pop
dec
push
jbe
pop
lahf
stos
mov
sbb
push
call
push
pop
xorb
mov
pop
sar
adc
mov
je
repnz
cltd
cwtl
xorl
ret
dec
sbb
outsb
push
mov
leave
cmpl
std
dec
loope
outsb
popf
mov
and
push
cmp
aad
and
mov
in
enter
inc
out
push
and
je
adc
mov
pop
mov
fs
aas
movl
xchg
test
fldt
inc
sbb
hlt
cmp
out
xor
sub
test
mov
dec
mov
call
mov
dec
scas
movsb
les
add
cmpsl
dec
add
scas
mov
sub
pop
xor
mov
mov
test
fsubs
add
mov
lea
fidivs
leave
push
mov
xor
pop
cmpl
xchg
in
ds
push
mov
rol
push
outsl
dec
out
mov
mov
gs
sub
sbb
push
xchg
loop
rcll
push
mov
data16
mov
lods
inc
inc
sub
insl
dec
loop
in
sbb
dec
pusha
pop
xlat
inc
cmp
jns
faddl
loope
sub
mov
cmp
fisubrl
aaa
pop
shl
dec
test
imul
sbb
cmp
cwtl
and
mov
mov
cli
lcall
xor
mov
movsb
jo
sbb
shl
loopne
test
outsl
push
adc
mov
cmpsb
insl
fisubs
mov
xchg
sahf
inc
mov
xor
sbb
repz
cmp
bound
loop
daa
scas
xchg
mov
out
mov
pop
mov
push
test
scas
adc
popf
mov
or
inc
clc
pop
adcb
in
enter
dec
xor
lcall
pop
pop
and
cmp
inc
decl
add
cmp
test
shrb
adc
pushf
inc
add
cmpsl
or
xorl
or
in
lret
jno
test
add
and
in
xor
sbb
push
xor
sahf
lcall
cwtl
push
sbb
push
sub
filds
adc
adc
shlb
dec
es
sub
pushf
adc
jecxz
mov
cmc
xchg
ret
inc
in
aas
jns
out
pusha
xchg
jl
js
cmp
into
or
movsl
fstpt
or
xchg
shrb
sub
push
cmpsb
ja
popa
addb
jns
xorb
mov
pushf
arpl
insb
or
xor
xchg
popf
repnz
mov
add
sub
outsb
inc
enter
out
adc
dec
jo
cltd
nop
xor
mov
fadds
stos
gs
in
push
jle
cmpsb
inc
mov
sbb
sub
test
and
or
scas
ds
mov
ret
adc
cmp
out
pop
out
xlat
pop
sbb
sub
pop
inc
mov
in
aam
sbb
fstpl
imul
push
fcmovnu
and
adc
or
sub
jne,pn
in
hlt
sub
xor
fwait
shrb
cwtl
dec
push
adc
xchg
lods
int
push
je
aad
cmp
sbb
test
dec
mov
ret
and
mov
xchg
repz
test
mov
xchg
jecxz
js
ss
imul
imul
das
xchg
and
mov
mov
mov
data16
cs
out
adc
dec
mov
xor
sbb
dec
jmp
push
es
xchg
add
lret
scas
test
xlat
stos
add
std
mov
inc
mov
cmp
ljmp
cmp
imull
mov
shll
pop
out
add
add
pop
mov
daa
push
pop
ds
je
frstor
mov
adc
cld
add
jnp
pop
push
lcall
add
xor
and
stc
xchg
mov
sub
xchg
aas
mov
lods
dec
xchg
cmp
inc
pop
cltd
lock
nop
adc
scas
xor
scas
ljmp
in
jecxz
cmpsb
ss
aas
jb
test
push
sbb
shll
call
mov
mov
jg
rorb
push
and
fs
jno
sahf
orl
adc
lods
aad
push
or
cs
push
push
pop
ror
rorl
enter
scas
bound
jb
xor
fidivl
dec
in
sub
adc
push
push
cmpsb
test
push
and
icebp
shrb
jne
outsl
daa
test
cltd
pop
mov
test
int
sbb
jno
mov
cmp
insl
stos
push
xchg
sub
pop
data16
push
fistps
pop
jb
ljmp
mov
sahf
paddq
rclb
xlat
mov
cmc
jp
or
pop
mov
xchg
aam
pop
mov
ret
and
push
pop
stos
jne
mov
pop
jnp
inc
add
jae
push
adc
fdivp
lods
add
adc
push
or
push
inc
or
cmp
fimuls
mov
cmp
mov
sub
ret
sbbl
lahf
js
push
int3
jbe
mov
inc
lret
test
lcall
call
outsb
add
call
jmpw
xchg
ljmp
xor
or
int3
sub
fnstcw
clc
pop
in
fwait
and
repnz
inc
and
lcall
jne
adc
rorl
lahf
fwait
daa
mov
and
cmpl
push
adc
xchg
mov
cmp
xor
inc
lcall
mov
add
sarb
mov
rcrl
pop
ret
aas
jg
incb
jp
inc
mov
xchg
mov
inc
aaa
pushf
xor
push
fwait
mov
imul
jle
mov
xchg
dec
pop
adc
mov
mov
mov
std
fucom
inc
movsb
out
lahf
decl
pop
push
jo
rorl
adc
test
pushf
mov
lret
scas
and
sbb
sbb
iret
add
addl
or
jg
dec
pop
jae
xor
js
arpl
imul
enter
stos
mov
jno
or
jl
cwtl
push
sbb
addb
push
jns
add
sub
aad
inc
cmp
clc
sahf
popa
lods
call
cmpb
pop
fisubrl
jg
push
into
cmp
int3
mov
fidivl
push
xor
ret
mov
sub
insb
faddl
stc
sbb
or
inc
outsl
jbe
shl
cmp
xchg
arpl
dec
frstor
mov
fs
dec
inc
shl
inc
xor
ret
popa
or
xor
jle
xchg
subb
mov
enter
sbb
movsb
aad
fwait
xorb
jb
push
aas
movsl
push
and
cltd
mov
xchg
dec
push
sbb
out
stos
jp
mov
gs
sbb
sub
push
mov
xchg
leave
push
and
inc
popl
jbe
mov
inc
lods
out
ja
test
ret
sbb
scas
dec
movsl
iret
aaa
stc
repnz
ljmp
xchg
add
lahf
gs
dec
jmp
dec
inc
ds
iret
push
pop
jp
jle
xchg
pop
pushf
pop
shr
mov
sahf
jecxz
push
sbbl
rolb
add
jb
push
and
sbb
xchg
in
es
loopne
ds
pop
push
imul
aas
sub
test
repnz
push
mov
xchg
and
mov
fcmovnu
and
sbb
scas
insl
mov
xchg
lods
add
sub
mov
jb
test
mov
in
call
sub
and
in
inc
mov
mov
rcrl
xchg
lret
pusha
lods
jcxz
fdivrs
bound
add
mov
mov
jnp
mov
pop
aam
fadd
mov
xchg
test
jl
mov
and
inc
add
or
pop
lret
cli
cmpb
inc
add
mov
push
ja
pop
pop
scas
fwait
cmp
sub
cmc
pop
or
in
push
inc
xor
ret
int
fstps
daa
std
mov
xor
out
lret
inc
and
xchg
push
pushf
xchg
fisubrs
sub
dec
jns
xchg
fstl
test
fcoms
nop
xor
jmp
mov
divb
insb
xor
sub
repnz
hlt
sbb
or
pusha
ja
mov
and
cmc
stos
dec
fstpt
lods
arpl
daa
dec
and
fwait
fs
pop
pop
movsb
adc
push
inc
rolb
aas
pushw
xchg
movsl
enter
sbb
xor
js
pop
cmp
jp
aad
roll
loopne
bound
jns
test
jbe
aaa
lcall
in
fcompl
xrelease
xchg
sbbl
and
or
subl
cld
inc
cmp
aas
iret
xor
shll
icebp
dec
push
or
mul
cwtl
in
out
imul
out
mov
fdiv
add
adc
in
push
lahf
push
sub
or
rorb
or
sahf
sub
xor
lds
mov
fcoml
movsb
mov
rorb
dec
cmp
adc
insb
inc
sub
shlb
sbb
rorb
daa
push
cmp
and
arpl
push
mov
sbb
dec
fsubrs
push
add
mov
xchg
test
not
mov
and
jecxz
or
cli
jne
jp
faddp
cmp
mov
pop
int3
fmul
sub
pop
data16
pop
pop
enter
jne
mov
pop
mov
jae
std
add
xchg
mov
xchg
adc
rcrl
xlat
add
outsl
outsb
pushf
xchg
inc
cmp
subb
sub
add
aas
aas
jnp
je
lahf
insl
xchg
jo
push
js
adc
cmp
test
inc
ja
ljmp
imulb
push
cmpsb
ja
and
nop
incl
dec
cmovle
xchg
ja
jge
jl
cmp
jmp
mov
lret
lods
jno
pop
movsb
lods
frstor
hlt
addr16
insb
insb
imul
sbb
pushf
dec
adc
std
push
cs
cmp
pushf
jmp
scas
aad
sub
les
mov
inc
pop
push
fs
jmp
push
bound
dec
add
fiaddl
test
xor
jbe
dec
mov
dec
movsl
imul
ja
loopne
inc
scas
inc
cmp
sti
and
pop
ds
sahf
dec
ljmp
push
mov
stc
lods
jecxz
ret
xor
fs
es
mov
out
decl
jbe
mov
rcrb
and
jb
gs
cmp
pop
iret
icebp
inc
xchg
inc
and
test
and
xor
cld
mov
sbb
aad
add
lea
insb
jbe
ljmp
mov
adc
mov
fadds
xor
add
aaa
popa
ficoms
mov
push
cmpsl
outsl
adc
popf
push
lahf
dec
popl
fidivl
mov
push
lcall
or
icebp
jno
xor
inc
push
fwait
outsl
or
xchg
push
popf
jno
jns
data16
add
dec
out
ljmp
cltd
notl
jae
add
stos
fsubl
pop
stos
loopne
loopne
cmc
mov
aam
gs
mov
cmp
push
cmp
jl
pop
jp
js
je
lret
sub
fcoml
sbb
mov
jmp
xchg
xchg
daa
add
in
ljmp
or
push
or
iret
sub
mov
push
cmp
loop
pop
das
mov
and
outsl
xor
cmp
sub
popa
andb
jp
aam
push
and
ja
mov
cmp
push
xchg
shrb
jae
cmp
jl
sbb
jg
xchg
lock
mov
jns
sbb
xor
out
in
add
out
test
hlt
inc
cltd
lret
pop
fstpl
jmp
or
jo
loopne
sti
jmp
aas
adcb
loop
pusha
fwait
in
jo
sbb
pop
hlt
int
mov
jns
inc
inc
mov
leave
scas
and
cmp
ret
fwait
push
pushf
repnz
aaa
popa
jno
xor
mov
and
stos
jl
push
in
rcrb
fsubrs
add
int3
push
add
movsb
mov
jbe
cld
das
rolb
hlt
in
push
sahf
movsb
cmp
movsl
and
js
sbb
ds
test
roll
sub
ljmp
das
imul
dec
mov
in
mov
es
ret
insb
gs
clc
addr16
icebp
ja
fsubrl
iret
xor
push
sbb
nop
sbb
add
pop
out
notl
xchg
lret
ljmp
into
jl
mov
lret
dec
mov
sbb
adc
popa
dec
and
into
jle
out
pop
add
fnstsw
sub
lcall
mov
pop
je
cltd
inc
stos
xlat
mov
push
mov
in
and
xor
fistpll
popa
dec
ljmp
out
mov
not
xchg
jmp
jl
std
clc
mov
push
insl
or
gs
sub
sub
out
jbe
negl
ror
and
in
test
mov
pushf
pop
insl
add
loope
pop
fnop
pushl
out
lods
cwtl
inc
insl
out
pop
int
sbb
jbe
enter
loope
cwtl
test
or
mov
insb
nop
pusha
ror
sbbb
aad
jecxz
sub
out
shll
jae
fisubs
mov
and
push
mov
test
sub
xchg
incl
test
pop
incl
pop
mov
faddp
ret
xchg
maxps
jo
testl
cld
jmp
decl
mov
mov
xlat
das
fildll
xchg
pop
xor
cmp
jnp
add
push
lcall
cmp
lds
testl
gs
jae
or
jne
inc
inc
das
pop
or
push
or
rcrl
imul
adc
mov
push
xchg
and
adcl
and
decl
fsts
mov
gs
pop
fisubs
scas
out
lods
sbb
data16
pushf
int
mov
int
scas
ss
hlt
es
test
mov
fadd
sahf
and
and
xor
mov
add
data16
inc
gs
sub
int3
out
pop
jnp
fldl
lods
cmp
mov
jmp
fldl
test
or
inc
cmpsb
cmp
and
push
insl
push
jne
idivl
lahf
imul
ljmp
pop
mov
mov
mov
test
mov
mov
jns
wbinvd
cli
add
and
stos
cmpsb
dec
mov
call
test
push
lods
ret
adc
cmp
push
jns
pop
pop
sub
fxch
and
insb
lahf
jg
out
ud1
arpl
add
call
mov
and
es
vpaddusb
fwait
hlt
jb
hlt
add
das
xor
pop
mov
add
dec
mov
sub
pop
leave
popf
stos
dec
int
fildll
inc
cmpsl
cmp
dec
les
mov
or
jb
push
shll
xor
lcall
and
pushf
scas
sub
es
sub
jb
jp
xchg
je
adcb
and
fbld
daa
xchg
xchg
adc
outsl
lods
int
test
lahf
pop
pop
sbb
bnd
cmpb
pop
xchg
dec
pusha
shl
inc
cli
shlb
dec
scas
lcall
add
mov
addb
or
cli
jmp
cmc
sti
mov
mov
or
mov
and
loope
cmp
shlb
shr
sub
cltd
and
xadd
insl
hlt
les
data16
inc
test
xchg
les
ja
orb
pushf
test
icebp
inc
xor
xchg
mov
nop
cmp
test
mov
add
in
add
lea
lcall
out
or
push
cli
lcall
cmpsb
cmp
sahf
xchg
push
cmp
inc
push
and
outsb
stos
mov
fisubrs
pop
in
lret
les
ljmp
push
inc
cmp
cmpsb
cwtl
jle
lahf
and
jbe
jg
cli
cmp
imul
pop
cmp
jae
inc
mov
pop
imul
sbb
sti
sbbb
sub
stos
movsl
into
cmp
mov
dec
sub
adc
shlb
pop
decl
adc
orb
mov
jecxz
or
inc
xor
add
loopne
pop
cmc
xorl
push
mov
arpl
push
sub
pop
push
stos
push
adc
into
mov
js
les
dec
dec
sub
mov
sbb
dec
adc
mov
sub
adc
inc
loope
xlat
inc
out
pop
loop
mov
dec
jge
out
inc
mov
jmp
jno
pop
adc
inc
outsb
sarb
pop
lea
xchg
nop
ds
shll
xor
xchg
mov
lock
add
mov
sti
fs
adc
lods
outsb
xchg
xor
sub
xchg
inc
push
mov
jnp
cmp
sub
xor
repnz
mov
dec
aas
cmp
out
push
daa
dec
sbb
xchg
rorl
repz
js
cmc
sbb
push
jne
and
xor
sbb
cli
cltd
inc
pop
incb
fidivrl
aam
aad
jmp
push
in
pop
outsb
jo
adc
mov
mov
imul
pop
es
in
fistps
pop
in
push
push
les
sbb
js
cwtl
test
sarl
mov
mov
inc
push
cmpb
sub
cmpsb
mov
in
add
insb
mov
xchg
mov
inc
inc
vhaddpd
sbb
mov
out
aam
push
test
xchg
into
or
fdivrl
jne
test
dec
xchg
xor
fstl
mov
jo
lock
arpl
rorl
and
addl
in
inc
daa
jae
mov
adc
push
and
xchg
pop
jl
add
inc
cmp
or
and
aad
inc
repz
cld
jo
and
insb
lods
scas
push
xor
sub
imul
scas
mov
push
mov
push
pop
call
les
loopne
call
lds
push
adc
aam
test
adc
aaa
fidivrl
jnp
dec
test
out
or
lahf
dec
sbb
cmp
hlt
shl
adc
iret
add
cmpsl
xchg
shlb
loopne
jp
fisubl
sbb
icebp
ds
push
faddl
xor
sub
les
jmp
push
push
jp
mov
out
dec
lods
jb
cmp
inc
pop
in
mov
cmp
inc
pop
hlt
mov
sbb
iret
fstl
push
xor
aad
jb
int3
sub
lods
sbb
addr16
cmp
in
rorb
repnz
cmpsl
hlt
aad
mov
aas
push
imul
imul
xchg
mov
xlat
cmp
je
lahf
mov
cmp
fnstcw
dec
sbb
xchg
out
outsb
js
pop
add
sbb
pop
jo
aad
jecxz
je
xor
lds
mov
call
sbb
or
sub
pop
xchg
fwait
push
rcll
lret
jne
xchg
or
lret
bound
adc
or
inc
or
scas
push
add
inc
mov
jmp
in
inc
cwtl
jnp
daa
pop
pop
mov
into
and
shll
xchg
fldl
fwait
dec
adc
ds
and
lcall
sub
jno
data16
cmp
out
les
outsb
ret
or
mov
lds
inc
xchg
insl
push
pop
sahf
stos
inc
mov
movsb
fsubp
xor
sub
cmp
mov
dec
sub
push
xor
mov
mov
dec
jmp
cltd
mov
fiaddl
adc
aaa
mov
pop
xor
sub
bound
xchg
jecxz
mov
mov
jne
pop
add
stos
std
xchg
xlat
lahf
mov
and
or
ret
jmp
jae
sahf
in
icebp
mov
mov
and
sbb
dec
and
in
push
insb
repz
adc
sahf
popf
mov
mov
popf
shrb
pop
xchg
cmp
rdmsr
push
outsb
fwait
cwtl
into
ficoms
fwait
popa
shll
push
pop
rcll
lcall
xchg
in
out
xchg
sub
daa
arpl
sub
push
sub
lret
into
or
mov
xor
ret
sub
jnp
and
std
jbe
test
scas
jp
sbb
cltd
adc
pop
pop
or
test
pop
jae
mov
inc
sbb
iret
movsb
fcmovne
jmp
out
shlb
ja
inc
jmp
imul
mov
out
inc
mov
pop
repnz
xorb
mov
sbbl
add
mov
xor
out
jns
pushf
mov
mov
adc
jmp
mov
addb
repz
adc
icebp
leave
and
jl
ljmp
mov
les
mov
lods
call
add
dec
imul
cmp
sbb
and
movsb
stos
lods
cltd
sbb
mov
push
mov
xchg
loop
jnp
jmp
jo
dec
pop
push
dec
xor
mov
cmp
xchg
inc
adc
mov
add
xchg
jecxz
imul
pop
sbb
cmpsl
push
pop
ficoms
sbb
fcmovbe
mov
mov
push
pop
pop
dec
bound
ja
sbb
jnp
or
lret
sub
cmpsb
xor
xchg
jle
enter
sahf
iret
iret
test
aas
cltd
mov
jp
clc
idivl
or
xchg
xchg
mov
into
daa
stc
dec
xchg
dec
lods
repz
add
sbb
ret
cs
cwtl
daa
xor
and
das
lcall
mov
mov
push
sbb
jbe
and
xchg
rol
loope
mov
dec
cld
mov
dec
sahf
sbb
and
jg
movsb
cmp
cmc
adc
sub
cwtl
mov
fistpll
push
push
fcmove
mov
pop
jbe
pop
inc
lret
fs
inc
mov
sahf
xchg
or
ficomps
outsl
sbbl
inc
cmp
mov
xorl
cld
xchg
mov
push
cmp
and
and
lcall
cmp
pop
xchg
push
mov
adc
ljmp
adc
wbinvd
and
test
fucomp
or
sub
addr16
arpl
cmpxchg8b
iret
stc
mov
leave
stc
pop
push
ja
es
inc
loopne
mov
adc
dec
cmp
in
push
gs
lock
mov
xor
movsl
js
xchg
jle
add
and
sub
xchg
mov
call
fsubrp
pop
xlat
inc
cs
xchg
xor
cmp
scas
jne
push
add
cmp
bound
shrb
gs
hlt
ficomps
xrelease
pop
iret
push
mov
and
mov
arpl
push
push
adc
ret
inc
mov
subb
xchg
lret
xlat
lcall
dec
fidivl
stc
and
scas
ficoms
stc
pop
int
in
ffreep
inc
mov
push
into
push
movsl
in
adc
gs
push
dec
sbb
sbb
push
cltd
mov
enter
lea
jp
out
pop
mov
dec
call
lret
arpl
jle
test
mov
lcall
addr16
ss
push
push
dec
push
push
or
jecxz
dec
adc
or
xlat
dec
dec
loopne
lods
jle
sbb
jle
into
lods
bound
mov
jle
pop
sub
jmp
pop
mov
dec
inc
mov
xor
add
dec
mov
inc
sbb
jp
mov
or
push
mov
sbb
movsl
xchg
adc
sbb
mov
push
mov
je
adc
add
stc
and
test
fbld
out
lds
inc
daa
push
aaa
or
out
and
repnz
les
and
push
dec
xor
js
sti
lods
lahf
jno
add
and
into
in
pop
in
adc
pop
test
clc
call
test
mov
lret
enter
and
mov
lcall
mov
aas
xorb
rcr
add
adc
push
sbb
ljmp
clc
adc
push
bound
popf
shlb
cmp
and
sub
sub
outsl
cld
call
mov
push
movsb
push
rolb
test
mov
pop
test
cmp
mov
lds
push
stc
jl
pop
mov
sahf
mov
sbb
lret
lret
sub
stc
jl
jnp
sub
cmp
mov
adc
popf
pop
ljmp
and
sahf
xchg
push
add
pop
es
mov
jmp
mov
int3
pop
leave
ja
jno
mov
lods
mov
ret
aad
insb
mov
jmp
xor
and
in
lods
inc
adc
mov
fisubrl
sub
inc
pop
add
dec
sub
cmp
push
dec
popf
roll
test
xor
decl
lds
into
inc
xchg
imul
jg
push
mov
xlat
inc
stos
repnz
in
xor
loopne
adc
hlt
pusha
mov
jb
daa
or
jbe
cmp
push
adc
test
shlb
sti
icebp
cwtl
jb
fwait
jmp
push
sub
fnstsw
addb
pop
push
iret
into
sbb
sbb
xchg
lret
jl
outsb
cli
je
sub
stos
adc
xor
inc
int
lret
cmp
aaa
xlat
inc
arpl
mov
mov
inc
enter
jmp
std
pushl
cmc
add
dec
popa
sarl
xchg
lock
cli
shlb
mov
lods
cld
pop
pop
pop
push
push
cwtl
scas
mov
das
or
stos
pop
adc
xchg
and
out
nop
arpl
adc
xchg
push
dec
popf
cmp
add
push
mov
mov
cmp
iret
jno
bound
sti
icebp
inc
dec
jle
mov
ret
push
nop
fwait
xchg
cmp
jmp
jl
hlt
and
xlat
dec
into
mov
add
xor
iret
mov
mov
sbb
in
mov
xchg
xadd
mov
xor
mov
inc
or
rorb
ja
fsubrs
ja
cltd
and
pop
mov
bswap
cmp
sarl
push
dec
cmpsb
mov
mov
cmp
xor
call
sbb
stos
mov
jmp
into
mov
testl
sbb
sbb
mov
bound
lea
and
insb
popf
xlat
lret
es
lea
in
and
pop
rorl
jb
aas
decl
lea
sub
add
incb
jp
mov
rcl
add
mov
push
sarl
or
pop
push
cmp
jmp
or
xor
fnstsw
das
leave
xchg
div
jne
jne
pop
mov
push
mov
and
push
gs
pushf
xchg
jp
xor
outsl
mov
scas
add
cmc
andb
sub
dec
and
out
xchg
push
fsub
xchg
push
or
test
arpl
sbb
repz
cmp
sbb
outsb
jmp
inc
push
fstp
repz
pop
mov
fmull
pop
xchg
orl
adc
jmp
and
mov
out
je
out
dec
push
or
push
loopne
mov
pop
xorl
pusha
mov
aam
icebp
int3
cmp
mov
mov
and
int3
xchg
fiaddl
cmp
add
popf
dec
or
popa
out
push
dec
push
rolb
dec
scas
fwait
or
call
dec
jecxz
add
ret
outsb
notb
and
ret
mov
dec
ja
dec
in
adc
dec
out
pop
sbbb
mov
adc
test
icebp
inc
clc
fs
fdivl
mov
hlt
mov
sbb
cmp
sbb
lods
aam
imul
sbb
pushf
push
aam
and
xor
inc
into
mov
cs
ljmp
jnp
xchg
xor
pop
or
cs
filds
pusha
mov
je
rep
sbb
gs
mov
jbe
call
push
dec
fwait
iret
adc
push
je
inc
lods
dec
add
out
add
xchg
movsb
mov
fiaddl
shlb
das
mov
in
mov
adc
and
stos
add
movsb
icebp
lds
sahf
pop
inc
mov
sbb
dec
mov
out
dec
gs
mov
ss
nop
mov
or
or
add
dec
rorb
repz
and
js
jo
jge
pop
jmp
xchg
sbb
mov
dec
lods
inc
lret
cmp
mov
lcall
xor
add
fs
mov
mov
xor
lea
in
push
aad
add
jecxz
and
lahf
movsl
cmp
addr16
fwait
jge
adc
aas
xor
shl
or
jb
xor
outsb
jle
inc
sti
push
shl
and
rcll
cmp
les
pop
lahf
testb
sahf
in
aam
push
insl
ljmp
insb
and
push
pop
fstps
popa
test
repnz
sbbl
add
cmc
xchg
cmp
movsl
jle
pop
jg
in
xchg
ss
or
mov
loop
stos
fistl
mov
inc
aad
pop
popa
ret
jo
and
jae
jne
dec
add
shrb
and
jo
loope
adc
lods
mov
pop
or
and
imul
std
addr16
mov
mov
jne
jbe
sbb
js
daa
cmc
or
jae
cs
jb
jp
cmpsl
lret
mov
es
adc
mov
jb
in
mov
xchg
sbb
pop
aad
out
mov
in
jp
imul
sarb
xor
fs
outsl
daa
pop
or
inc
cmp
sub
add
scas
xchg
sahf
das
sbb
adc
inc
fdivs
add
inc
out
adc
inc
das
in
push
cmc
sbb
push
sti
lds
sbb
mov
subb
xor
sub
push
fmuls
ret
push
shrl
jae
mov
negl
sbb
scas
cld
lock
call
sarb
sbb
lcall
scas
shll
add
sub
ljmp
cltd
movsl
and
xor
mov
sarb
mov
loopne
cmp
xchg
fstpt
shll
lcall
test
fcompl
inc
and
add
jb
movsl
mov
out
shll
fsubrl
xchg
add
ss
cli
arpl
into
xor
aaa
punpckhbw
fs
enter
xlat
mov
into
inc
lahf
insl
shrl
cmp
in
pop
aam
pop
imulb
xchg
and
sub
mov
jo
lods
jp
mov
in
mov
dec
adc
jg
jge
clc
es
mov
or
aad
fwait
or
cmp
pop
mov
add
cltd
xchg
inc
sub
leave
mov
jns
sub
sbb
cmpsb
inc
push
pushf
fwait
loope
push
cmp
and
into
insl
push
cmpsb
rcl
push
aaa
das
out
xor
cmp
daa
cltd
cmp
rorl
sbb
push
popa
imul
and
xchg
stc
adc
sub
lret
sub
inc
imul
jecxz
sub
cli
xchg
and
and
mov
inc
jbe
and
imulb
add
mov
pushf
setnp
and
test
negl
shr
pushf
call
ret
clc
dec
adc
jae
sub
xor
lods
iret
sbb
fisttps
xor
ds
and
pop
aas
push
or
cmp
cltd
adc
cltd
xor
adc
rclb
out
cmp
shll
ds
sub
xor
sbb
rol
decl
sbb
jne
mov
popa
jo
push
or
loope
inc
xchg
incl
inc
jp
jge
jae
add
adc
leave
pop
mov
dec
std
scas
in
cs
test
xor
ss
je
dec
stos
mov
cli
cmp
or
ret
cmpl
roll
add
push
cltd
mov
sub
jl
hlt
imulb
int
jne
dec
in
pop
xor
jg
movb
jae
xor
test
inc
aad
orb
adc
mov
sbb
push
dec
pop
test
push
cmp
psadbw
cmp
jbe
jo
aad
jb
int
icebp
mov
fldt
pushf
scas
loope
leave
dec
add
inc
mov
xchg
jne
ret
shlb
addl
divl
sbb
pop
fdivs
pop
pop
xchg
add
push
in
testb
xor
pop
aaa
cwtl
orb
xchg
leave
movsl
lret
sub
cmpsb
and
mov
sub
mov
and
add
sbb
pop
enter
mov
sbb
sbb
in
sarl
out
int
addr16
ror
dec
sahf
cs
hlt
sub
das
neg
add
xor
nop
dec
sbb
sbb
fdivrs
mov
jmp
jle
xchg
fs
or
stos
mov
xchg
add
mov
pop
add
js
mov
xchg
shll
leave
addb
and
mov
stos
ds
xchg
mov
xchg
xchg
xchg
push
or
call
push
enter
add
jmp
mov
andb
stos
mov
scas
add
pushf
push
jle
mov
jae
gs
push
in
ret
xchg
mov
cld
pop
int3
addr16
orl
jo
daa
sub
clc
mov
sbb
inc
mov
mov
jo
inc
cs
inc
jge
ds
scas
shl
adc
dec
add
sbb
sub
nop
push
and
push
sahf
movsl
bound
loopne
repz
push
adc
mov
loop
push
fwait
jge
mov
mov
pop
jl
cmp
into
push
xchg
lds
shlb
jmp
subl
dec
inc
push
jnp
add
out
sahf
loopne
orb
pop
inc
pop
jmp
ljmp
popa
out
add
pop
in
stc
rcrb
dec
fstl
sub
rclb
or
jle
adc
test
daa
sbb
sub
cmp
lods
xchg
xor
dec
cmp
adc
adc
sarl
es
xor
aas
into
adc
int3
insl
nop
or
jae
insb
mov
sbb
fcoms
xchg
add
out
int3
lea
wrmsr
lock
cvttps2pi
fisttps
lcall
push
shrl
mov
ss
and
mov
jge
add
rcl
push
fsubrl
adc
sub
jg
jp
xchg
test
pop
push
loope
jnp
jne
aas
push
insl
movsl
xor
inc
insb
mov
add
xor
sub
jge
sti
mov
push
push
sarl
rcl
mov
dec
imul
xor
movsb
inc
cmp
xchg
mov
or
inc
movsb
sar
adc
leave
inc
cs
sbb
push
ds
leave
xchg
add
out
mov
mov
shr
dec
or
sub
insb
sub
xchg
xorl
cmpsl
repz
into
sbbb
xchg
lcall
out
hlt
mov
jb
push
popf
roll
push
enter
std
xor
and
xchg
jae
cmp
sbb
add
xlat
xchg
or
mov
testb
imul
in
movsl
add
rcrl
mov
xor
fidivl
mov
xchg
or
sub
or
ja
push
cmpsb
cmc
sbb
push
scas
pop
xor
sbb
push
pop
loope
cmpsb
mov
lret
es
xor
mov
or
das
or
cltd
dec
ja
test
xchg
scas
jmp
cli
inc
scas
mov
popf
or
dec
mov
addb
insl
and
mov
and
loop
mov
lcall
aad
xor
dec
add
add
sbb
imull
aas
int3
aad
mov
scas
shll
inc
insb
orb
push
mov
scas
loope
push
clc
orl
jecxz
xor
push
mov
ja
mov
mov
stos
jbe
pop
cmp
les
ss
jmp
les
and
lahf
inc
xor
lret
call
jg
movsl
enter
lcall
jmp
mov
add
jle
imul
pop
fucomp
popf
pop
inc
adc
fnstsw
andl
push
adc
or
pop
xchg
mov
sbb
mov
inc
inc
out
jnp
jl
loopne
or
adc
mov
or
daa
push
lret
outsb
pop
dec
dec
scas
lea
ljmp
nop
push
das
fldenv
mov
scas
pop
fwait
sbb
mov
xor
pop
push
scas
movsb
push
or
mov
imull
sahf
orb
call
jae
test
fmuls
inc
call
and
add
inc
jnp
jmp
mov
xchg
or
jne
je
mov
mov
fimull
xor
movsl
xchg
push
xchg
aaa
mov
jno
cld
popf
stos
insl
pop
jl
mov
mov
xchg
fcmovne
cld
jp
push
sbb
adcb
add
call
sbb
repz
dec
ret
jbe
fwait
int3
xchg
stos
push
add
add
add
outsb
add
add
add
add
add
and
push
pop
sub
mov
pop
cmp
cmp
mov
push
pop
mov
mov
mov
mov
push
pop
push
pop
push
pop
mov
push
pop
push
pop
jne
mov
lea
cmp
cmp
push
pop
jmp
push
inc
push
pop
mov
sub
push
pop
sub
mov
sub
mov
pop
push
pop
add
ret
jmp
pop
not
push
pop
je
lea
mov
push
pop
xor
sub
and
push
pop
not
sub
mov
pop
not
jmp
cmp
js
mov
inc
sub
push
pop
xor
inc
sub
jns
test
push
pop
sub
mov
sub
jmp
mov
push
pop
cmp
push
pop
sub
mov
mov
add
lea
xor
xor
add
cmp
push
mov
add
mov
sub
cmp
sub
mov
mov
add
push
jmp
lea
mov
mov
mov
and
push
pop
mov
xor
push
pop
push
pop
dec
cmp
mov
mov
mov
cmp
mov
add
xor
cmp
sub
mov
mov
add
push
pop
lea
lea
sub
mov
je
dec
cmp
inc
cmp
xor
mov
sub
xor
mov
jnp
mov
add
mov
push
mov
add
inc
xor
xor
dec
add
cmp
jnp
cmp
jmp
and
mov
cmp
push
mov
jmp
push
pop
mov
sub
mov
pop
push
pop
jmp
sub
mov
cmp
mov
mov
sub
mov
pop
cmp
cmp
sub
cmp
xor
pop
sub
mov
pop
push
pop
dec
sub
mov
mov
jns
xor
push
pop
not
pop
mov
push
pop
je
cmp
jmp
and
push
pop
and
xor
dec
xor
lea
xor
mov
push
pop
push
mov
add
push
pop
mov
not
ror
jmp
mov
jmp
push
pop
inc
add
cmp
push
pop
and
jae
jns
push
pop
add
add
xor
mov
mov
lea
mov
push
pop
sub
mov
mov
add
lea
jmp
jp
jmp
mov
cmp
inc
mov
test
push
mov
add
push
pop
cmp
add
xor
cmp
push
pop
jmp
inc
push
mov
add
jne
mov
sub
xor
push
pop
cmp
sub
mov
pop
mov
mov
jmp
pop
mov
push
pop
cmp
mov
not
jmp
mov
add
jnp
dec
inc
push
pop
jmp
cmp
mov
mov
jl
push
mov
add
xor
mov
jae
push
pop
not
push
inc
not
mov
and
jbe
sub
not
push
pop
xor
dec
xor
lea
je
jp
push
pop
push
sub
mov
push
pop
sub
and
xor
test
mov
mov
xor
jne
add
not
jmp
mov
jmp
dec
xor
pop
push
pop
jmp
mov
js
push
pop
sub
mov
pop
mov
add
sub
push
pop
jl
lea
cmp
mov
cmp
mov
mov
lea
mov
push
pop
push
pop
jl
push
pop
jmp
push
pop
mov
mov
jne
js
jmp
lea
sub
jmp
jmp
sub
mov
mov
mov
mov
xor
lea
cmp
mov
mov
push
pop
not
jae
mov
push
pop
push
jmp
add
lea
sub
cmp
not
not
add
inc
dec
push
pop
lea
push
pop
add
and
mov
add
xor
sub
mov
jmp
xor
jns
mov
cmp
cmp
mov
mov
jno
ja
not
push
pop
push
pop
mov
push
pop
jne
jmp
xor
cmp
sub
cmp
add
jo
mov
not
ja
mov
mov
mov
jle
jb
dec
not
xor
dec
and
lea
call
xor
xor
jmp
addr16
dec
scas
pop
mov
push
add
loopne
add
add
test
pop
add
add
jo
fldt
sahf
cmpl
jns
sbb
dec
sahf
cmpl
ja
fsubrs
aad
adc
add
add
bound
repz
orl
inc
insb
incl
add
lea
mov
ja
fs
mov
ja
pop
pop
inc
mov
add
add
add
and
add
dec
aas
jo
rolb
adc
add
add
sbb
add
lret
push
add
push
push
sarl
add
ljmp
out
dec
lcall
sub
xchg
xchg
push
in
mov
xor
push
cmp
push
movl
ret
push
push
mov
cmp
jne
insb
adc
loop
pop
dec
adc
mov
and
mov
push
out
cmp
jle
push
insb
xlat
sbb
push
cmp
jnp
jae
xchg
lods
in
push
out
subl
clc
lret
xor
loop
lahf
pop
mov
jne
jb
lahf
mov
pushf
rcll
mov
mov
sahf
mul
call
xchg
enter
add
ficomps
adc
mov
sbb
std
add
repz
add
popa
or
jmp
jecxz
neg
cmc
sarl
aad
aaa
je
dec
out
int3
es
cwtl
mov
cli
movsl
cmpb
inc
push
ret
or
inc
fdivl
inc
lea
jns
faddl
add
add
add
pushf
pop
cmc
addr16
xchg
gs
shrb
xchg
add
lahf
rolb
add
jnp
add
nop
lock
xchg
sbb
add
add
add
fiadds
jnp
cmpl
jg
add
add
xor
jp
jp
add
push
mov
sbbb
push
in
lcall
imul
cwtl
add
add
imul
jg
xrelease
add
sbb
jmp
xchg
out
cld
pop
outsl
in
add
test
inc
or
ja
xor
gs
out
lret
jnp
mov
mov
dec
int
xchg
and
mov
inc
ror
sarl
add
fildl
cmc
lods
add
shr
lret
xlat
in
pop
stos
xchg
sbb
mov
mov
in
push
jns
xchg
cmp
imul
xchg
push
pop
jns
hlt
popw
fstpt
jns
xor
gs
call
mov
fidivl
dec
cmp
movb
ja
xchg
ja
jns
in
popw
fstpt
jns
xor
gs
call
mov
fidivl
dec
add
jmp
push
mov
ja
jns
in
pop
fstpt
jns
xor
gs
call
mov
fidivl
dec
add
inc
xchg
push
ja
jns
sub
pop
fstpt
jns
xor
gs
call
mov
fidivl
dec
das
shlb
jge
push
or
ja
jns
xor
pop
fstpt
jns
xor
gs
call
mov
fidivl
ror
fisubs
nop
xor
gs
bound
outsl
sbb
out
pushf
insb
in
pushf
insb
in
jnp
je
xor
add
mov
call
jge
jbe
pop
xchg
push
es
mov
fidivl
sbb
gs
mov
push
sub
inc
sarl
popw
fldt
push
jge
jbe
pop
xchg
sub
dec
mov
fidivl
sbb
gs
mov
push
test
add
cmpsl
jg
loopne
mov
imul
incb
add
xchg
sbb
xchg
cld
lods
xchg
jns
cwtl
add
add
jae
pop
xchg
fsubs
movsb
fidivl
movsl
cwtl
ja
pop
fisttpl
hlt
add
cld
add
rcr
add
loopne
jge
jbe
pop
cwtl
ja
pop
fisttpl
add
add
fbld
add
jne
add
add
jg
cld
mov
adc
fdivl
add
add
xchg
add
jle
xor
ja
add
add
pushf
mov
test
dec
pop
into
sub
addl
sbb
ja
pop
call
fdivl
add
add
jg
cld
mov
cmp
out
add
lock
jns
sbb
sahf
jg
out
sahf
shll
cmp
add
jns
cmovno
rol
subl
push
jne
jbe
pop
xchg
xor
bound
push
jnp
add
mov
xchg
clc
add
loopne
or
ja
lcall
mov
popf
les
fistl
out
hlt
ret
jge
push
add
add
ret
jge
push
add
add
mov
dec
jbe
pop
xor
mov
ja
pop
dec
or
pop
jne
popw
fndisi(8087
gs
jl
gs
mov
push
dec
mov
gs
mov
push
mov
mov
test
push
jne
jbe
pop
pop
xchg
mov
stc
pop
pop
in
std
jmp
andl
or
add
jns
test
pop
incl
sub
jbe
pop
dec
or
sub
push
push
add
add
fisttpl
out
cmpsb
pusha
mov
push
cmp
mov
jnp
cld
addl
andl
push
xor
bound
addl
imul
andl
cmp
or
in
cmp
push
bound
add
sbb
in
xor
mov
mov
mov
gs
stos
loope
inc
mov
pop
add
or
test
fildl
jae
fidivl
lret
jge
popw
fcomi
dec
mov
andl
push
sbb
xchg
jbe
pop
incl
sub
jbe
pop
dec
sub
push
add
jg
test
mov
mov
fidivl
add
cmp
xchg
add
inc
imul
jge
popw
fcomi
dec
mov
sarb
lea
dec
jle
fdivrs
inc
pop
call
shlb
jbe
pop
cmp
jnp
fidivl
sbbl
jmp
xchg
push
pop
fildl
gs
add
add
iret
popf
addl
in
icebp
jnp
test
pop
fildl
lret
or
jbe
pop
xor
iret
lret
mov
lret
cli
adc
mov
jge
in
mov
shr
add
mov
or
subb
push
add
sbb
shlb
pop
jbe
pop
xchg
jge
in
and
xchg
pusha
add
pop
add
pop
mov
shlb
fidivl
stos
cmpsl
imul
inc
or
mov
subb
push
pop
xchg
add
cmpsb
xchg
add
add
jno
popa
and
add
sbb
cwtl
popw
fildl
mov
jnp
pushf
popw
fildl
ret
or
xchg
add
sar
pusha
gs
in
jmp
fucomi
push
pop
push
jo
dec
enter
jg
insb
add
adc
js
gs
call
push
add
cmp
movsb
jbe
pop
call
push
push
cmp
ja
cmpl
int3
sbb
sub
sub
xor
add
sub
sub
add
xor
ret
add
cmp
pushl
das
add
lods
das
add
iret
xor
add
inc
xor
add
aaa
add
in
aaa
add
push
cmp
add
jle
add
pushf
cmp
add
imul
insb
add
xor
add
xor
add
add
dec
xor
add
add
add
jbe
add
xchg
add
xchg
xor
add
add
lret
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jb
add
test
add
xchg
xor
add
add
sbb
xor
add
xor
add
add
dec
xor
add
add
add
jbe
add
xchg
add
xchg
xor
add
add
lret
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jb
add
test
add
xchg
xor
add
add
mov
inc
gs
gs
inc
inc
add
gs
dec
bound
arpl
add
je
insb
je
dec
add
je
imul
add
inc
gs
gs
arpl
popa
jo
add
dec
popa
jo
outsl
fs
dec
bound
arpl
xchg
add
je
bound
arpl
jo
add
dec
bound
arpl
movsl
add
je
je
arpl
bound
arpl
add
je
gs
inc
outsl
insb
outsl
jb
mov
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
inc
gs
gs
inc
js
outsb
je
outsl
imul
sub
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
inc
add
add
outsl
inc
push
add
add
gs
je
inc
inc
inc
add
add
jae
outsl
jb
inc
inc
add
add
jbe
inc
inc
add
add
insb
arpl
push
arpl
add
je
imul
add
add
je
popa
jo
outsl
fs
push
gs
gs
inc
outsl
insb
outsl
jb
aas
add
je
imul
dec
jb
inc
js
inc
add
je
imul
addr16
js
cmp
inc
jb
popa
je
inc
outsl
outsb
je
outsb
imul
cmp
popa
je
inc
outsl
outsb
je
outsb
imul
imul
gs
xor
cs
insb
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
pop
xor
add
add
jne
add
mov
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
cmp
add
dec
xor
add
push
add
jp
add
mov
add
movsb
xor
add
mov
xor
add
icebp
xor
add
xor
add
inc
add
pop
add
jbe
add
test
add
pushf
add
lods
add
mov
add
add
icebp
add
or
add
sbb
add
sub
add
inc
aaa
add
pop
aaa
add
outsl
aaa
add
xorb
add
aaa
add
mov
aaa
add
aaa
add
loope
add
add
add
cmpsl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
pop
xor
add
add
jne
add
mov
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
cmp
add
dec
xor
add
push
add
jp
add
mov
add
movsb
xor
add
mov
xor
add
icebp
xor
add
xor
add
inc
add
pop
add
jbe
add
test
add
pushf
add
lods
add
mov
add
add
icebp
add
or
add
sbb
add
sub
add
inc
aaa
add
pop
aaa
add
outsl
aaa
add
xorb
add
aaa
add
mov
aaa
add
aaa
add
loope
add
add
add
jg
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
je
push
imul
jne
inc
js
mov
inc
imul
push
dec
imul
popa
insb
insb
jae
xchg
add
je
jb
jb
je
arpl
push
arpl
outsb
add
popa
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
insb
gs
imul
jae
gs
push
imul
imul
jne
arpl
add
add
gs
imul
testb
gs
inc
push
add
add
je
jne
jb
outsb
je
jb
arpl
jae
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
inc
jne
jb
outsb
je
push
add
add
je
jne
jb
outsb
je
push
dec
add
inc
gs
popa
jae
inc
jb
outsl
jb
imul
gs
outsl
arpl
gs
outsb
outsw
inc
add
gs
outsl
fs
gs
imul
add
inc
gs
outsl
fs
gs
imul
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
js
add
push
jns
je
insl
dec
outsb
outsw
add
add
je
jns
je
insl
push
imul
insb
gs
imul
gs
push
dec
outsl
arpl
gs
add
je
imul
je
fldl
inc
gs
gs
imul
gs
gs
imul
filds
inc
gs
gs
imul
xor
inc
insb
outsl
jae
dec
popa
outsb
fs
add
jo
insb
insb
outsl
arpl
pop
add
popa
jo
jb
popa
je
add
add
popa
jo
gs
jb
jns
or
dec
gs
jo
jb
add
add
popa
jo
imul
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
sbb
dec
outsb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
sbb
gs
outsl
arpl
fs
js
push
add
add
je
jb
outsl
arpl
fs
js
push
inc
fs
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
daa
add
inc
popa
fs
gs
fs
je
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
gs
jne
arpl
push
add
imul
outsl
jne
arpl
pop
add
jo
imul
insb
add
dec
jne
je
inc
jns
gs
outsl
push
imul
xchg
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
cltd
add
imul
jo
imul
gs
popa
jae
inc
jb
outsl
jb
push
add
gs
je
inc
imul
outsb
addr16
add
add
je
outsb
push
gs
js
gs
imul
gs
inc
add
jp
outsl
push
gs
jne
arpl
dec
add
insl
imul
outsl
arpl
jae
pop
add
push
gs
js
gs
imul
gs
pop
add
insl
popa
jo
imul
insb
add
push
imul
insb
insb
outsl
arpl
scas
add
jb
insl
jo
push
add
jb
jo
outsb
push
add
jb
outsb
inc
add
jb
outsb
push
add
xor
cs
insb
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
mov
add
pushf
cmp
add
cmp
add
cmp
add
cmp
add
add
push
cmp
add
cmp
add
cmp
add
add
insl
cmp
add
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
mov
add
pushf
cmp
add
cmp
add
cmp
add
cmp
add
add
push
cmp
add
cmp
add
cmp
add
add
insl
cmp
add
add
add
outsl
push
popa
jae
dec
gs
inc
jb
add
inc
outsl
push
outsb
imul
imul
jb
popa
je
inc
imul
xchg
add
gs
je
push
je
gs
insl
dec
outsb
dec
inc
insb
outsl
bound
add
gs
jb
jo
popa
jb
popa
outsb
je
jb
popa
jns
adc
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
adc
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
fildl
dec
imul
jae
inc
imul
popa
insl
add
add
outsl
jo
popa
jb
popa
outsb
je
insb
gs
jb
xor
push
je
inc
jb
popa
je
push
jb
jo
je
add
add
addr16
jo
outsb
push
jb
jo
je
add
push
je
imul
inc
dec
push
dec
inc
add
push
je
imul
inc
push
dec
inc
xor
cmp
inc
outsl
dec
insl
jo
jb
outsl
outsb
popa
je
inc
insb
imul
inc
outsl
dec
outsb
imul
inc
js
cmp
inc
outsl
dec
outsb
imul
push
arpl
imul
push
imul
popa
jae
dec
bound
arpl
add
push
dec
inc
inc
jb
insl
push
je
imul
outsl
inc
fs
gs
gs
gs
jb
arpl
jae
pop
add
push
gs
jb
push
outsl
push
gs
data16
inc
outsl
push
gs
imul
popa
jae
dec
bound
arpl
add
push
jne
jo
outsb
fs
insb
popa
jae
dec
bound
arpl
arpl
inc
outsl
push
popa
jae
dec
gs
inc
insb
insb
outsl
arpl
outsb
je
insb
insb
cs
insb
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
cmp
add
cmp
add
add
add
add
push
jne
jb
dec
outsb
outsw
jb
popa
je
outsl
outsb
push
outsl
imul
mov
push
je
inc
outsl
outsb
jbe
jb
push
imul
outsl
fs
je
imul
je
inc
outsl
jo
push
imul
dec
outsb
addr16
push
imul
