sar
test
add
lcall
out
movsb
xor
scas
leave
pop
xchg
dec
mov
loope
mov
cltd
push
adc
cmpsl
mov
mov
into
sti
hlt
add
loope
mov
sub
loopne
out
mov
add
dec
cmp
push
sbb
fwait
pop
xor
imul
and
and
lods
push
aam
jne
xor
fistpll
gs
xor
mov
sbb
pop
fnstcw
in
cld
insl
inc
add
inc
push
mov
jo
jb
cmp
shr
and
xlat
jbe
pusha
clc
mov
adc
xchg
inc
sbb
enter
mov
mov
sub
push
divl
pop
lahf
add
test
pop
add
sub
nopl
mov
imul
mov
test
shll
stos
push
sub
jp
leave
inc
xchg
add
call
rep
not
not
pusha
mov
movw
lea
jmp
pushf
pushf
pushl
lea
jne
clc
shl
shr
cmc
mov
bsr
pusha
clc
sub
not
sub
lea
cmc
cmc
test
pushf
sub
cmc
push
pushf
pushl
popl
jmp
mov
imul
clc
loope
push
sahf
push
leave
jno
sbb
or
cmp
repz
lea
lods
jne
inc
js
leave
push
mov
loope
mov
push
mov
mov
cmpsb
xor
sbb
adc
push
xor
out
sarb
jle
xchg
out
nop
iret
adc
movl
fwait
xlat
clc
mov
jbe
xor
inc
leavew
jae
lcall
leave
push
jg
fs
aaa
daa
mov
fwait
imul
test
xchg
call
pushf
mov
push
pushf
pushf
lea
jmp
jns
xchg
dec
imull
out
mov
rcr
mulb
shr
out
adcl
cmpsl
add
mov
rclb
fistl
xor
shll
adc
push
mov
mov
jb
adc
decl
cwtl
sub
and
jne
bswap
pushf
pop
setl
movb
mov
pushf
mov
mov
lea
jmp
call
hlt
imul
mov
insb
xlat
orl
cli
cmp
shr
xchg
inc
add
in
pop
loopne
cmpsl
cwtl
popa
sub
xchg
mov
dec
lods
xchg
push
xor
xor
movsl
jne
daa
jg
jmp
xor
jne
daa
or
pushf
cmpsb
mov
int3
sarl
or
or
adc
xchg
mov
rorb
push
notl
int
xor
jg
inc
repz
jle
xor
inc
and
push
loopne
add
jo
adc
bt
mov
push
shld
mov
call
push
jmp
pushl
jmp
push
push
adc
pushf
pusha
pushl
lea
jmp
push
lea
jbe
rol
add
neg
sub
bt
xchg
sbb
xadd
mov
xor
movzbw
mov
pusha
ror
add
jmp
and
cmpsl
dec
imull
sahf
or
jo
shlb
into
dec
int
and
in
andl
mov
fildll
sub
cmc
popl
scas
add
ja
mov
shlb
mov
repz
test
popl
pop
sbb
and
sub
adc
imul
fstl
fimull
push
cmp
add
cwtl
sbb
in
std
cltd
pushf
sbb
int
inc
rep
fdivrp
lret
add
movsl
cli
daa
fmulp
out
push
hlt
rcrl
and
das
gs
adc
cmp
lahf
adc
inc
shll
push
inc
outsl
hlt
shll
sbb
jecxz
into
sarb
jb
cmp
and
pop
xchg
pop
inc
cmp
repz
sahf
daa
add
jne
sbb
sbb
jae
ljmp
test
sbb
insl
movsb
sti
in
or
repz
xchg
xchg
popl
cmpb
mov
fldl
or
or
inc
mov
pop
test
cmp
jmp
bt
cmc
push
pusha
add
push
mov
lea
jne
setl
pushfw
neg
test
rol
mov
stc
jmp
jmp
inc
jmp
stc
pusha
add
jmp
movl
jmp
pusha
jmp
icebp
push
repnz
imull
popa
imul
hlt
outsb
out
aad
imul
cmp
nop
in
jg
pop
mov
fldenv
adc
sub
cltd
push
aas
mov
pop
sub
fcomi
not
mov
mov
shlb
sbb
xor
and
std
int
adc
imul
lock
dec
imull
shr
mov
insl
mov
nop
outsb
jp
adc
or
std
push
push
dec
pop
cmpsl
lods
mov
xor
cmp
sarb
inc
int3
inc
mov
xchg
sub
pop
xorb
es
xor
push
push
imul
or
cmp
jnp
inc
in
dec
cltd
int3
cld
sub
roll
lds
mov
sbb
mov
jmp
lods
push
test
sub
call
dec
bt
cmc
clc
stc
shl
push
pusha
jmp
repnz
pusha
mov
lea
jne
bts
mov
shr
mov
movsbw
sub
mov
mov
push
call
add
inc
gs
outsl
fs
gs
imul
add
mov
add
test
add
movsb
out
add
test
jmp
add
movw
mov
pushf
lea
jmp
xor
push
stc
movzbl
mov
shl
dec
push
bswap
shl
push
not
movsbw
cmp
push
dec
xchg
push
xchg
bts
ror
push
push
bsr
btr
mov
mov
mov
jmp
lea
movb
not
push
pusha
movsbw
lea
mov
call
mov
lods
xor
lock
lock
std
sti
or
add
cmpsl
lods
pop
call
xor
ret
jp
test
xchg
outsb
xor
int
notl
test
lcall
or
inc
adc
inc
idiv
stos
mov
xor
pop
pop
rol
mov
jge
cmp
je
pop
or
aas
mov
and
jle
cmc
and
nop
and
cmc
add
jmp
cmc
repnz
pushl
jmp
stc
shll
sarb
test
mov
sbb
adc
push
test
into
push
cmpsl
lods
mulb
outsb
mov
pop
push
sub
out
mov
and
xor
out
ss
add
jns
pop
mov
addr16
push
fstps
xor
out
out
sahf
rorb
xor
mov
pminub
les
inc
pop
or
enter
sbb
and
roll
fcmovb
mov
mov
cmp
sub
mov
inc
and
mov
in
lret
xchg
mov
popf
cwtl
xabort
push
add
aam
cmp
xor
mov
adc
and
adc
pushf
pusha
aam
out
mov
js
push
cmp
loopne
stos
pop
push
enter
mov
push
xor
mov
cmpsb
das
push
cmp
push
dec
mov
dec
inc
xchg
adc
add
add
sbb
and
shll
jae
cmc
call
xor
mov
imull
jmp
pop
mov
lock
and
xor
pop
lods
dec
or
jae
stos
adc
push
pop
xor
push
push
push
jb
mov
xchg
bound
push
call
shrl
inc
mov
sbb
fwait
xorl
test
push
icebp
jnp
out
enter
in
add
push
inc
jb
das
mov
cmpb
shr
and
add
mov
stc
test
cmpb
pushf
lea
jmp
adc
cs
imull
jmp
cmp
sub
adc
adc
add
xchg
mov
xor
pop
mov
mov
and
in
pop
and
aad
dec
cmp
dec
and
jo
in
fmulp
daa
pop
fisttpll
push
mov
cli
loopne
mov
sahf
mov
mov
xor
dec
cmpsb
jge
pop
mov
xchg
lret
push
xor
push
lods
sahf
mov
movsb
int
mov
push
push
cmp
push
clc
xor
add
xchg
mov
sbb
rorl
xchg
and
sti
scas
mov
ja
stc
and
out
adc
adc
imull
je
or
jp
in
aaa
and
jne
xorb
add
add
out
add
push
fcmovbe
stos
hlt
shlb
pop
adc
call
cmpb
jbe
aaa
mov
pop
mov
push
mov
add
jo
jno
jns
jle
add
aad
mov
movsl
push
out
int
iret
pop
icebp
and
mov
push
sub
jmp
cmp
adc
mov
cmp
cmpb
pusha
call
mov
xor
lods
mov
mov
cmp
adc
lods
or
push
push
push
sti
xchg
jno
out
cmp
repz
add
insl
shlb
xor
mov
std
cli
adc
push
fistpl
mov
scas
sbb
test
pcmpeqw
ljmp
cmp
test
xor
push
cwtl
cmc
movsb
pop
lea
imul
mov
jl
mov
mov
xchg
mov
sbb
or
leave
cmp
pop
mov
push
and
sahf
fidivrs
pop
add
add
jecxz
xchg
ret
sub
bt
xor
stc
rol
neg
sets
add
pushf
pushf
not
pushl
stos
jmp
push
lock
std
std
xorb
gs
movsb
ret
jne
movsl
ror
pop
outsb
loope
mov
pop
arpl
xor
iret
cmp
jge
cmp
popa
pop
dec
inc
cmpsb
and
aam
pop
ret
loopne
es
test
mov
mov
inc
in
arpl
xchg
push
xchg
mov
xchg
push
mov
dec
rolb
nop
enter
fisttps
sub
in
idivb
daa
xor
mov
cmp
hlt
mov
mov
fisttpll
jns
imul
aad
fists
std
cwtl
in
sbb
dec
sahf
sbb
cmp
adc
setge
out
pop
fs
inc
cld
push
pop
pop
jmp
popa
push
xchg
xchg
mov
popf
mov
das
shl
sub
cmc
or
insl
es
push
push
imull
iret
sbb
dec
mov
addr16
push
dec
call
jmp
and
cwtl
mov
push
cmc
bound
dec
xchg
repnz
sub
fimull
movsb
in
stos
fidivs
push
fwait
push
push
dec
jp
add
mov
push
cmp
out
jge
loop
addl
jno
bound
jae
aad
insb
out
cltd
and
packuswb
push
dec
cmpsl
repnz
std
jae
lods
cld
pusha
jg
hlt
cli
lcall
js
or
dec
psraw
pop
lahf
fsts
mov
cs
mov
xchg
lcall
pop
inc
inc
jo
outsl
cmp
call
xor
fistps
shl
inc
cmc
xor
inc
and
and
mov
add
adc
sbbb
xchg
repz
cmc
inc
add
inc
and
daa
mov
int
mov
push
popa
xchg
out
fwait
push
test
std
mov
into
pop
adc
cld
popw
push
cmp
out
rcr
iret
enter
pop
dec
stos
ret
cmp
out
lret
cmpsb
jne
pop
adc
lods
or
add
mov
adc
ss
loopne
cmp
cmpb
mov
lcall
push
in
dec
fwait
dec
pop
lock
int3
xchg
mov
mov
inc
and
jo
fldcw
adc
test
xchg
test
cmp
mov
jmp
jmp
setno
call
movzwl
bt
mov
call
inc
mov
shrb
movsl
push
pop
in
push
aas
stos
xchg
lods
mov
adc
bound
sti
es
dec
mov
mov
hlt
dec
mov
sbb
xchg
xor
stos
push
sbb
add
dec
stos
mov
gs
push
dec
decb
jb
push
mov
call
imul
pop
xor
das
ds
or
enter
pop
mov
mov
fsubrs
mov
and
lock
fs
je
test
call
push
add
push
movb
jmp
and
lods
cmpsl
sub
bound
inc
mov
jp
imul
lock
and
jbe
stos
xchg
add
add
aaa
sti
leave
xchg
sub
test
pop
flds
sbb
dec
cmp
lahf
adc
lds
dec
pop
aas
mov
mov
fs
jne
cwtl
jmp
mov
not
call
lea
jne
jmp
lea
je
add
sbb
add
add
not
xor
mov
push
push
add
pusha
add
jl
clc
pushf
mov
movsbl
rcr
lea
mov
pusha
pushf
clc
cmp
pushl
mov
lea
jbe
rol
mov
not
add
bswap
sbb
mov
btc
add
ror
pusha
pop
movl
shld
mov
mov
pusha
mov
test
cmp
pushf
call
call
and
mov
jg
div
mov
cmp
xchg
clc
jg
sahf
mov
sub
cmp
movsl
mov
pop
mov
cmp
stos
arpl
or
jecxz,pn
lahf
fidivl
and
ret
push
xor
enter
das
jg
inc
jb
idiv
daa
int3
test
imull
fcoms
je
loope
cli
cwtl
xchg
jae
xchg
add
aas
outsl
pop
add
ror
pop
test
push
dec
stos
xchg
pop
xor
mov
or
outsb
xlat
ss
push
test
fxch
xor
mov
out
aas
mov
adc
xchg
sub
stos
jl
stc
repz
push
fildl
rcl
mov
sub
inc
adc
mov
cmc
pushf
call
lea
call
call
lods
lock
pop
sub
jb
push
in
je
add
out
and
mov
mov
fwait
jmp
imul
jb
add
mov
and
mov
push
loope
jge
shrl
cmpsl
jl
xchg
mov
jecxz
add
fistpll
mov
pop
jecxz
inc
pop
shrb
mov
sub
das
aam
cmp
pop
xlat
sbb
jno
dec
mov
cmp
lret
inc
dec
aad
jecxz
arpl
pop
mov
xor
cli
sub
mov
cmp
xchg
xor
loopne
mov
cmp
aad
out
insb
subb
mov
js
pop
ss
xor
repz
xchg
nop
mov
dec
xchg
sub
mov
and
jle
cs
leave
popf
adc
inc
bound
sub
pop
adc
jge
sub
das
sub
pop
arpl
int3
ficoms
push
cmp
add
push
cld
decl
and
je
inc
inc
add
dec
xor
mov
inc
mov
test
push
add
call
out
pop
imull
pop
mov
jl
push
pop
mov
xchg
add
mov
xchg
js
mov
out
cmpsl
lods
push
pop
test
fimull
movsb
pop
call
bound
shll
arpl
aas
cs
scas
push
scas
popa
lcall
push
dec
ja
pushf
repz
xor
jl
xor
cmpsl
cltd
dec
mov
aam
pop
inc
mov
mov
push
scas
loopne
pop
loop
pop
sahf
loop
sbb
arpl
pop
lea
jne
xor
dec
mov
mov
bt
stc
push
call
push
bt
repnz
pushf
call
btc
xor
test
bt
bsr
shr
mov
jmp
stc
test
mov
push
jmp
jmp
xchg
setne
setp
dec
mov
movzbw
setg
mov
call
push
lea
jae
stc
bt
bt
call
push
lea
ja
or
sbb
sub
not
shr
neg
add
shld
btc
call
xor
add
adc
mov
pushf
test
pushl
lea
je
clc
cmp
test
sub
pushf
pusha
push
cmp
call
and
movsbw
adc
ror
mov
cmc
pusha
bt
pusha
cmpb
push
pushf
lea
jne
inc
stc
sbb
sbb
sub
rol
mov
or
ror
add
ror
neg
and
mov
bt
test
pushf
pusha
lea
je
call
dec
jl
pop
imull
movsl
mov
add
cltd
shlb
push
mov
rcrb
call
mov
push
fists
cmp
fstpl
mov
cltd
ds
mov
xor
in
or
jnp
data16
imul
insl
scas
push
pop
in
pop
ds
jno
pushf
movsb
clc
stc
sub
cmpsl
and
push
je
hlt
sti
push
and
jl
pusha
adc
das
pop
dec
inc
pop
leave
mov
push
inc
pop
imull
dec
fcmovnb
or
mov
fldl
cltd
cmp
call
cmpsl
lods
pusha
js
pop
insl
push
add
mov
sbbl
sbb
scas
sub
sub
std
push
dec
inc
incb
in
mov
sbb
iret
sbb
pop
jnp
mov
sub
mov
ja
add
push
scas
mov
jp
mov
movsb
jecxz
push
movl
fs
call
jne
pushf
pusha
test
cmp
jmp
jmp
push
call
or
pushl
movw
pusha
lea
je
pushf
or
push
lea
je
push
xor
aas
aas
sub
aas
mov
xor
shl
mov
and
shl
adc
shr
sub
bts
shld
mov
pushf
test
clc
or
mov
push
lea
je
lea
lea
add
cmp
sub
dec
pusha
shr
ror
pushf
mov
ror
add
inc
clc
add
sub
movsbw
pushf
cmp
bsf
mov
test
shr
pusha
test
cmp
pushf
movb
movb
call
fiadds
imull
js
stos
jb
inc
xchg
pop
into
daa
lcall
loop
sbb
sarb
lods
pop
divb
insl
push
sti
cli
mov
jae
xchg
mov
add
sub
stos
xor
jecxz
scas
rcr
dec
scas
lea
dec
sbb
flds
mov
scas
fidivrs
lret
dec
fbstp
adc
mov
add
stc
mov
add
or
and
add
test
add
add
mov
into
mov
sar
dec
push
movsbw
sub
btr
dec
ror
lea
cmp
mov
stc
cmc
sub
bt
jmp
jmp
jmp
call
movl
pusha
jmp
daa
xchg
pop
imull
mov
leave
icebp
fldl
cmpsl
mulb
or
int3
or
mov
lods
sbb
aam
sub
push
xlat
and
ja
cmp
jns
cs
cmpsb
lcall
jmp
dec
xlat
sbbl
scas
nop
stos
leave
xchg
mov
aad
ja
jnp
pop
scas
and
mov
and
dec
xchg
pusha
pusha
call
test
cmc
cmp
mov
bswap
lea
jo
pusha
lea
lea
jo
pop
call
pusha
pushf
mov
pushf
push
pushf
pushl
ret
pusha
jmp
rcr
mov
movsbw
sub
cmc
stc
stc
mov
cmp
bt
test
clc
sub
cmp
jmp
lea
je
cmc
pushf
stc
sub
stc
bt
test
cmp
pushf
lea
ja
push
imul
cmc
pusha
jmp
mov
pusha
mov
call
xchg
jp
pusha
imull
cmc
mov
in
fsub
mov
es
xor
add
or
xor
dec
xor
lcall
sti
iret
xchg
or
push
in
xchg
mov
inc
pop
mov
sbb
sbb
mov
sbb
mov
xor
jl
dec
jmp
cmp
and
test
imul
add
pop
loopne
lds
mov
stc
mov
clc
pushf
mov
pop
clc
bswap
adc
mov
jmp
push
cmc
xor
lea
push
xchg
pushl
mov
pushf
push
mov
pop
lea
call
lea
je
push
pushl
test
pusha
add
clc
jmp
pusha
movw
mov
push
pusha
pushf
pushf
lea
jmp
lea
call
pusha
push
cmp
pushf
call
call
repz
out
popa
imull
lods
mov
mov
and
push
test
jnp
scas
jle
pop
xor
sarb
xor
xchg
mov
fiadds
shrb
insl
fcoms
xchg
add
popf
in
add
or
pop
add
enter
loop
movb
rol
call
inc
jmp
pushf
jmp
add
pusha
cmp
call
mov
adc
lods
pusha
sub
cmp
jae
push
lds
daa
pop
pop
ljmp
inc
lods
cmpsl
ret
xchg
stos
adc
dec
decl
mov
sub
cwtl
xor
sbb
xorl
mov
movb
out
xlat
dec
icebp
sub
jb
xor
adc
outsl
inc
aam
push
mov
movl
jmp
mov
lods
pop
or
pop
lds
pop
push
or
sbb
sub
mov
sahf
mov
mov
pop
xor
les
cmp
stos
adc
xchg
and
or
add
pop
loope
inc
pop
cmpsl
js
cld
stos
dec
lock
mov
sbb
imull
sub
pop
movsb
or
addr16
cmpsl
das
faddp
ret
sarb
xor
jge
lcall
daa
xor
fsubl
xchg
or
js
lahf
inc
add
mov
aam
pushf
jle
ds
ds
in
hlt
push
pushf
sub
sub
push
push
hlt
xorb
xchg
gs
and
dec
subl
nop
mov
flds
rcrl
push
aas
push
adc
mov
dec
sbb
bsr
mov
jmp
pushf
lea
jne
mov
ror
mov
bt
call
bswap
mov
mov
lea
jmp
fs
arpl
lods
jmp
shrb
scas
cmp
sbb
mov
sbb
dec
mov
or
lods
loope
clc
pop
shr
das
or
sarl
orb
jo
mov
in
xlat
bound
mov
jo
addr16
outsl
pop
fwait
xor
sub
pop
sahf
pop
and
jnp
shlb
fisubrs
inc
jb
aad
cltd
mov
dec
imul
shl
rol
movzbw
mov
cmc
adc
rcr
inc
add
shr
mov
cmc
bt
mov
push
jmp
jmp
test
add
mov
call
add
jmp
jmp
insb
sbb
imull
mov
push
sbb
xlat
push
inc
mov
cmp
daa
fs
push
jae
jns
into
mov
bound
cmpsl
push
inc
cmpsl
sbb
lea
inc
cld
adc
ljmp
mov
inc
fs
fldenv
fldcw
mov
jb
xor
imul
dec
push
stos
fisubl
pop
inc
push
cmp
jmp
bt
add
pusha
test
pusha
call
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
add
add
add
clc
cmc
test
cmp
pushl
pusha
lea
jae
call
test
mov
pushf
cmpb
pushl
pushl
jmp
clc
push
repnz
pushl
call
shrl
imull
sahf
inc
adc
push
xchg
and
dec
pop
pop
and
fidivl
rorl
fadds
lods
test
mov
or
sahf
push
mov
or
sbb
sub
cmp
idivl
fstps
mov
push
push
repnz
dec
outsb
mov
cmpsl
ret
xchg
cmpsl
pop
dec
pushf
dec
fnsave
stc
mov
lcall
jmp
adc
imull
sub
jb
ret
or
jmp
jp
mov
push
push
in
loope
cmpsb
lods
dec
inc
andb
mov
dec
nop
scas
or
push
out
dec
xlat
ret
sub
adc
aas
loop
enter
sub
mov
mov
scas
dec
cmp
iret
ds
adcl
fiaddl
mov
xchg
fadd
inc
and
inc
hlt
data16
roll
add
push
aas
or
pop
lcall
cmp
in
ss
push
jp
iret
cwtl
and
lock
jbe
cmpsl
lods
adc
mov
xchg
dec
push
pop
rcr
sub
xchg
dec
cmp
movsl
push
sbb
pop
in
push
pop
scas
lcall
lds
sbb
and
or
shrl
out
or
jge
sub
dec
push
stos
pop
iret
shll
mov
add
ja
aad
nop
pushf
jmp
pusha
xor
pushf
rol
lea
jge
cmp
add
push
pushl
pushf
push
not
jmp
lea
jb
jmp
mov
movzbl
jmp
pusha
cmp
push
pusha
lea
je
test
cmp
pushf
pusha
lea
je
pusha
push
push
pushf
lea
jmp
lea
jb
jmp
pusha
pushl
lea
jb
stc
cmpb
pushf
pusha
mov
push
lea
jne
neg
shr
movsbw
sub
mov
stc
pusha
clc
call
cmp
neg
mov
cmc
clc
cmpb
pushf
lea
jmp
int
add
lods
xorb
xor
movsb
int3
xchg
lahf
daa
push
jns
out
sub
mov
scas
adc
xchg
jnp
adc
lret
lods
je
aaa
imul
icebp
jns
push
sub
rcrl
cmp
ja
dec
mov
adc
daa
scas
out
sub
insl
pop
add
cmp
mov
popa
fildl
fistps
popa
outsb
xchg
mov
rorb
je
xchg
dec
sbb
jecxz
pop
inc
jnp
gs
xor
imull
dec
pop
add
mov
xlat
fcomip
adcb
in
cltd
or
inc
mov
dec
cmpsl
sub
aaa
out
rorb
ret
dec
jle
loop
ficompl
and
and
pop
flds
cmpsb
jle
mov
nop
cs
xor
sbb
and
sbb
mov
lods
iret
subb
test
loop
pop
or
filds
fdivs
test
sbb
loop
mov
dec
out
pop
frstor
test
jb
stos
dec
push
mov
xchg
test
xchg
or
dec
clc
inc
jmp
movb
lea
jg
ja
stc
sub
btr
rol
pushf
add
add
inc
sub
sub
mov
and
cmp
mov
jmp
lea
ja
pusha
jmp
mov
mov
lea
jmp
jb
cmc
stc
cmpb
pusha
jmp
cmp
pushl
lea
jbe
not
shl
cmp
xchg
mov
mov
rcl
sub
shld
add
bsr
bts
shl
not
mov
adc
add
sbb
movsbw
movl
bt
test
pushf
btc
mov
test
cmp
lea
jp
push
lea
jbe
shrd
xadd
shld
stc
sub
xchg
neg
mov
xchg
rcr
mov
shld
bts
sbb
add
inc
shr
clc
mov
adc
rcr
call
jmp
cmpl
std
in
fadd
sub
sbb
jge
sub
jne
jecxz
jl
jo
or
push
xor
xchg
cmpsl
add
repz
loopne
and
xchg
not
and
add
xor
push
mov
sub
insl
inc
repnz
pop
popf
cltd
push
cld
pusha
jmp
lods
jmp
pushf
mov
movl
jmp
jnp
push
push
lods
cmpsl
icebp
frstor
pop
push
pop
aad
rorb
push
fistps
jge
sbb
jnp
push
push
push
sub
addr16
in
fcmovbe
adc
cmp
adc
cmp
and
sub
sarl
fiaddl
jp
mov
arpl
jl
xor
out
aad
sti
adc
negb
or
adc
sbb
add
push
mov
adc
loop
xlat
xchg
xorb
mov
xchg
cmp
pusha
call
lea
jne
rcl
mov
test
jmp
movl
jmp
pusha
clc
cmc
pushl
popl
test
push
mov
cmp
lea
jb
pusha
mov
pushf
lea
ja
cmp
inc
sub
cmp
pusha
bt
add
add
shld
mov
rcr
not
cmc
mov
pusha
bt
repnz
pushl
pusha
lea
jne
cwtl
cwtl
movb
movzbw
not
not
push
mov
cwtl
lahf
movsbw
lea
jbe
push
pusha
movl
push
pusha
push
mov
pushl
pushl
pushl
ret
cmp
call
cmpb
nop
cwtl
cwtl
or
push
adc
fstps
push
ret
test
cltd
ffree
sub
lret
inc
dec
fadds
sbbb
les
push
loope
sub
pop
sub
adc
mov
stos
add
cli
mov
sahf
cmp
inc
push
pop
jle
sbb
rorl
insl
jo
lds
fadds
sbb
sub
push
push
pushf
out
call
in
dec
cmpsb
out
sbb
mov
inc
gs
push
jmp
push
sub
push
xchg
in
lret
mov
test
aad
cli
sub
call
addr16
jb
cmp
push
jmp
call
pushl
lea
js
inc
push
sete
call
call
pusha
lea
jae
jb
pushf
cmpb
push
call
cmp
pushf
call
setns
setg
setb
mov
lea
pushf
lea
call
pusha
adc
push
lea
jae
pushf
lea
jne
jmp
enter
imull
leave
jno
fs
pusha
imul
and
icebp
inc
fwait
lock
mov
rol
cmpsl
add
cmpsb
pop
inc
cli
push
pushf
push
adc
xchg
es
push
mov
and
dec
mov
mov
push
mov
sbb
and
and
sahf
jmp
sub
bts
call
add
test
pushf
test
mov
movzwl
sbb
cmp
inc
pop
mov
cmp
call
cltd
mov
xlat
lret
jl
cmp
lds
pop
outsl
add
aad
mov
bnd
cmc
add
rorb
mov
push
xor
xchg
stos
sub
pop
cli
les
jb
je
jbe
jns
andl
mov
cmp
enter
enter
xor
dec
js
and
daa
dec
data16
imull
mov
mov
enter
pop
icebp
adc
mov
scas
pop
gs
ss
hlt
sbb
fbld
or
inc
xor
xor
xor
add
inc
cli
or
ret
ds
jp
mov
fisubrs
leave
ret
add
pop
pop
pop
sarl
insl
testl
jg
jle
movsb
pop
repz
inc
out
loope
fldenv
test
sbb
mov
pop
or
ss
and
dec
jns
icebp
cmp
pop
cld
pop
scas
or
inc
adc
pusha
pop
add
lahf
stos
xor
jecxz
inc
call
mov
pop
add
cmp
in
pop
mov
jl
mov
adcl
xlat
xor
scas
or
mov
add
inc
adcl
mov
lods
xchg
xchg
fldl
outsb
jecxz
lret
mov
fs
jae
clc
cmp
pushf
xor
pushf
call
aad
jno
imull
arpl
add
mov
mov
js
and
and
mov
dec
jbe
sub
dec
dec
in
push
fdivs
ss
mov
mov
jae
ja
add
movsb
inc
mov
or
leave
sarl
ret
mov
or
test
fsubl
mov
jg
imull
js
pushf
into
xchg
mov
lret
call
and
popa
int3
push
std
inc
scas
cwtl
jecxz
cmpsb
dec
sbb
mov
and
xchg
mov
mov
xor
mov
push
and
or
and
inc
ja
mov
orl
and
add
cmpsb
xor
dec
outsb
xor
xor
adc
lret
cmp
adc
pop
mov
sbb
aas
rol
xchg
pop
lea
pop
xchg
pop
lea
movzbw
lea
pop
pushf
pushf
pushl
ret
mov
jo,pn
lods
scas
bound
frstor
clc
adc
int3
in
dec
cmp
movsl
xlat
add
pcmpeqb
sub
push
jge
out
hlt
int3
add
push
xor
scas
jae
fwait
push
shlb
repz
cmp
stos
lcall
push
jno
repnz
jl
sahf
lret
inc
pushf
lods
xor
and
fsubrl
gs
ja
pop
cmp
addr16
rcrb
inc
jmp
or
jg
cmp
mov
and
popf
lea
inc
cmp
test
stos
out
and
mov
adc
clc
xchg
push
push
xor
sub
jle
outsl
lea
test
jp
rclb
fbld
popa
inc
inc
loopne
imull
scas
lcall
dec
int3
xlat
xor
jb
mov
mov
push
cmp
jae
dec
orl
mov
mov
adc
out
push
push
dec
mov
cmpsb
sbb
mov
dec
mov
sub
jns
fists
data16
ja
adc
imul
cmp
cli
mov
aam
iret
stos
inc
jne
cltd
je
inc
out
adc
mov
ss
rorl
add
cs
cmp
adc
dec
push
mov
test
xchg
in
pop
pop
fistpll
inc
jne
repz
idiv
and
incl
scas
pop
ror
es
push
inc
lahf
cwtl
mov
lahf
or
jmp
in
popf
and
or
and
outsb
push
mov
xor
mov
add
xlat
movsl
imul
jp
add
and
push
fxch
mov
mov
jno
frstor
cmp
pusha
push
mov
movw
pusha
push
mov
pushl
ret
cmp
repnz
pushf
push
jmp
fwait
xchg
divl
lods
ja
push
mov
dec
flds
fcompp
adc
xchg
xorl
lods
cwtl
cld
push
cli
cmpsb
lods
add
adc
mov
push
in
or
icebp
scas
arpl
and
push
not
mov
xor
dec
bswap
jbe
outsl
xor
jge
shrl
outsb
or
out
loopne
adcb
popa
mov
iret
pop
hlt
lea
ja
pusha
movb
lea
jb
jmp
lea
jbe
shr
test
push
mov
sub
pusha
add
setle
dec
and
shl
mov
bsf
and
or
shrd
add
or
movzbl
lea
movl
shrd
shld
pusha
mov
sub
bt
test
pusha
cmp
pusha
movb
jmp
bswap
lea
pusha
pushl
mov
movw
movl
movb
pushf
lea
jmp
dec
not
call
bt
mov
adc
and
mov
bswap
mov
bt
test
xor
cmc
stc
stc
repnz
call
sub
jmp
into
out
je
lods
leave
jle
and
outsb
lret
and
add
xor
xchg
fisttps
xor
call
mov
cli
cmp
js
and
aam
xchg
xchg
lods
pop
inc
or
mov
lcall
push
push
mov
push
aaa
lods
sbb
xor
adc
xchg
cmp
loopne
pop
jmp
inc
arpl
mov
or
pop
jo
mov
cmc
inc
frstor
push
sti
sbb
inc
lret
jecxz
sbb
inc
imul
popf
iret
jno
mov
mov
lahf
dec
ret
sub
decl
mov
or
xor
cmp
lods
pop
adc
pop
iret
nop
xchg
mov
enter
adc
jge
push
cmp
or
stc
sub
push
js
xor
data16
mov
pusha
fistpl
inc
add
movsb
jp
mov
insb
fildll
mov
cmpsl
lahf
xor
testl
push
rcrl
xchg
lcall
xor
sub
shl
in
je
inc
jp
mov
in
mov
clc
pop
xchg
icebp
lea
sbbb
sbb
mov
jle
or
aas
dec
and
leave
fimull
push
fbstp
mov
inc
repz
cmp
jmp
pusha
pushf
lods
test
bt
bt
mov
sub
stc
ror
push
mov
jmp
sub
pushl
mov
mov
rep
pop
pushl
lea
jb
pop
pusha
pusha
lea
jmp
jmp
xchg
push
jmp
lea
call
pushf
bt
cmp
pusha
lea
jae
call
adc
jbe
lods
mov
lea
mov
and
sti
ljmp
xchg
fnstcw
mov
hlt
out
inc
and
stos
xor
pop
or
int3
lahf
outsb
add
add
jg
dec
cmp
cmpsl
and
scas
stos
rep
push
sbb
mov
sub
jecxz
cmc
addr16
sub
lods
add
shl
notb
xor
mov
icebp
rep
push
ljmp
nop
ja
mov
lahf
sub
sub
adc
movsl
dec
gs
ds
pop
or
ficoms
push
mov
out
fnstenv
pop
sti
mov
out
repz
ret
in
addr16
pop
sub
insb
jbe
xor
repz
and
inc
shr
mov
lds
pop
dec
or
popa
aam
lods
and
pop
add
mov
xorb
jl
add
mov
jp
mov
xchg
ja
lods
out
sbb
lods
cmp
jno
add
pop
lret
add
add
mov
push
mov
xor
inc
pop
mov
les
or
xor
jo
js
jno
aas
jo
lret
loop
jne
jns
adc
jns
push
mov
or
sar
fists
xor
sbb
adc
xchg
lea
jae
call
call
call
pushf
mov
mov
call
sub
inc
ja
lods
mov
dec
mov
test
pop
jecxz
clc
pop
jo
lcall
pop
cmpsl
popa
inc
icebp
cmpsb
lods
sub
int
mov
lea
dec
lods
sbb
dec
loop
dec
pop
push
test
outsl
dec
out
fisttpl
imul
or
insl
inc
inc
xor
inc
push
mov
add
fs
dec
cmp
popf
out
loop
movsb
push
jmp
and
dec
in
rorb
xchg
add
not
lea
pushf
lea
add
sar
mov
pushf
bt
mov
push
mov
clc
repnz
pushf
movb
movb
lea
jne
push
movb
pop
pushf
mov
lahf
call
ret
js
lods
imul
fildl
jle
es
pop
sbb
push
rcrb
sbbb
std
imul
je
and
sbb
and
dec
mov
insb
mov
fisubl
lret
push
test
xor
sbb
shlb
cmpsl
and
cld
jecxz
ret
or
jns,pt
in
test
imul
mov
pop
sbb
fs
ja
jmp
cmp
cmp
jmp
test
movb
pushl
lea
je
bt
cmc
call
pusha
lea
jae
ror
mov
or
mov
sar
movzbw
mov
jmp
mov
jmp
lahf
call
cmp
jmp
pop
int3
test
imull
add
mov
dec
jo
xchg
bound
add
pop
inc
pushf
xor
lods
inc
lret
mov
or
jb
sbb
adc
mov
sbb
xchg
or
leave
imul
test
and
fs
jnp
lea
cmpsb
pushf
loopne
cmp
subl
in
jnp
cwtl
mov
mov
js
jle
and
and
jno
push
cld
or
sub
adc
call
lea
call
jmp
and
jp
lods
fcomp
cmpsl
rcrb
xchg
ds
lds
lcall
cmpsb
lods
adc
pop
jnp
dec
xor
xchg
lds
or
fwait
push
mov
pop
jno
shrb
subl
xor
in
mov
jne
shrb
movsl
loop
cmpsb
push
mov
xor
xchg
test
and
xor
incl
jmp
movb
pushl
mov
push
movzbl
lea
lea
movw
pushf
pusha
movl
movw
mov
pushf
pushf
push
pushl
ret
lea
jne
setp
lahf
jmp
mov
lods
and
mov
out
sbb
jne
sub
xor
mov
adc
leave
rolb
mul
cmpsb
lods
lahf
clc
or
stos
sub
jnp
inc
in
int3
pop
cwtl
dec
sti
jecxz
push
jle
pop
mov
imul
push
lods
xchg
push
add
cs
pop
in
sub
jmp
xchg
das
mov
ret
pop
cmp
hlt
js
daa
xchg
cli
push
lds
cld
cs
and
and
mov
xchg
in
push
jne
push
movw
stos
pushf
mov
push
pusha
lea
jmp
jmp
xor
clc
mov
rol
movb
jmp
jle
jp
imull
dec
xor
push
pop
lods
xor
sbb
lods
pop
inc
mov
add
pop
xor
into
cmpsb
fwait
add
test
imul
push
fiadds
xchg
push
gs
push
jmp
bound
mov
add
arpl
add
add
add
aaa
add
add
add
shll
test
xor
mov
xor
mov
aaa
add
add
add
cmp
stc
clc
bt
pushl
test
push
mov
jmp
pushf
pusha
adc
lea
pusha
jmp
mov
lea
je
call
lea
ja
call
push
lea
jae
jmp
mov
lods
mov
mov
inc
cvtps2pd
jne
cli
inc
inc
ljmp
and
cmpsl
xchg
lods
outsl
xor
dec
addr16
test
push
icebp
insl
dec
pop
ret
or
int3
mov
dec
aaa
insb
cmp
inc
loope
test
fst
leave
cmpsl
adc
jp
loope
dec
popf
sbb
das
pop
movsl
pop
mov
adc
sbb
jle
fimull
pop
leave
mov
mov
jl
jge
lods
pop
rcrl
sbb
sub
loopne
adc
leave
or
mov
jns
mov
pop
outsb
push
fdiv
ds
cmp
jl
sub
and
sub
ss
testl
fs
jmp
or
xor
loopne
lcall
mov
je
sahf
sti
or
repnz
bound
sub
mov
sbbb
mov
sub
dec
imul
or
inc
dec
cmp
fcmovu
inc
xor
fistpll
add
pop
mov
mov
mov
loop
lcall
shrb
push
outsl
xor
push
movl
arpl
xlat
and
push
into
fs
jnp
xchg
sub
mov
xchg
xchg
lea
or
sbb
je
pop
aaa
rcl
fistps
stos
xlat
mov
xchg
xchg
and
push
push
iret
push
jo
mov
jbe
movsb
pop
mov
add
mov
test
add
xchg
inc
and
pop
lds
lcall
rorb
xchg
pop
and
inc
push
adc
and
sub
jmp
xor
in
mov
js
dec
mov
stc
test
call
adc
inc
sbb
adc
aaa
andb
jle
xchg
jl
xchg
int
addr16
jno
clc
cmp
add
xchg
stos
test
ret
jl
es
jmp
stc
push
xchg
cmc
sub
stos
mov
jbe
repz
pushf
rcrb
addb
ret
mov
pop
mov
mov
push
call
js
add
jo
xchg
mov
inc
inc
jmp
bswap
mov
movb
call
sbb
lods
gs
mov
movsl
and
in
arpl
mov
jmp
mul
add
sti
fildl
daa
cs
add
clc
xchg
mov
push
mov
dec
out
out
add
fisubrs
fs
dec
in
repnz
out
cli
std
cmc
push
jbe
and
loope
das
mov
loopne
xor
mov
addl
push
aaa
ss
std
mov
pop
mov
stos
pushf
daa
loope
popf
pop
adc
and
js
xchg
mov
scas
mov
fwait
xchg
inc
mov
jp
repz
xor
fcoms
imul
pop
and
cmp
or
adc
xchg
xchg
or
push
dec
arpl
rorl
movsl
repz
mov
pushf
lahf
testl
sahf
push
jecxz
pop
jbe
mov
icebp
sbb
add
in
movl
fs
jae
cmc
rcr
jmp
pushf
mov
not
pop
push
pushf
pushl
ret
add
pop
pop
jbe
popa
inc
jb
gs
bound
imul
xor
int
test
mov
out
lret
imul
or
or
xchg
addl
movsb
lock
pop
xor
mov
mov
int
mov
sbb
js
fidivl
sub
jmp
dec
push
enter
imul
fisttpl
sbb
sub
pop
lds
shll
fnsave
inc
push
mov
add
sbb
repnz
sbb
and
pushf
call
rep
not
movsbw
pop
push
push
pushf
lea
jmp
push
cli
in
inc
cwtl
fsubs
loopne
ror
loopne,pn
cwtl
shlb
cmc
mov
repz
inc
fcomps
xchg
orl
inc
cwtl
shlb
jp
popa
xor
mov
adc
fsubl
in
inc
adc
leave
lods
push
adc
sub
inc
mov
cs
adc
inc
test
gs
lret
dec
gs
cmp
loopne
fdivs
arpl
out
fidivl
bound
fldl
test
leave
xchg
and
mov
or
aam
push
jl
sub
fs
dec
mov
fldl
sub
xor
in
inc
cwtl
cwtl
imul
mov
mov
int
mov
in
inc
mov
xchg
test
inc
cwtl
mov
xchg
sub
in
inc
fadd
push
push
outsb
or
mov
lock
pop
fldl
cmp
shrb
loope
inc
test
gs
dec
mov
in
inc
or
fs
les
push
inc
cwtl
cmp
aas
fld
fdivr
fsubr
inc
test
fs
cmc
sub
daa
ret
sub
inc
mov
fs
xchg
loop,pn
push
pop
leavew
dec
addr16
fucomi
inc
cwtl
or
sub
and
cwtl
fs
test
int
pop
out
in
inc
enter
jmp
fldl
js
leave
adc
xor
nop
adc
inc
mov
addr16
shlb
fldl
mov
idiv
dec
cmc
in
inc
mov
and
inc
enter
cmp
mov
push
inc
mov
sbb
scas
ja
fldl
andl
push
or
inc
enter
mov
sbb
inc
fdivr
addr16
mov
xor
fs
repz
inc
mov
jg
movb
gs
push
pop
in
inc
mov
loopne
mov
or
push
or
pushf
sub
pusha
mov
pushf
movb
lea
jmp
mov
lods
les
inc
or
sbb
in
int3
push
add
and
and
mov
lock
ja
push
sbb
cmpsl
rcrb
sbb
out
out
mov
mov
popaw
repz
stos
push
call
daa
fucomi
pop
mov
rolb
pushf
lcall
popa
pushf
movw
push
mov
lea
jb
bt
cmpb
jmp
bt
test
jmp
cld
push
mov
imull
push
mov
ret
sub
sbb
loope
lods
push
cmp
ja
fisubrs
dec
arpl
cmp
or
cmpsb
mov
pop
cli
call
stos
pop
pop
push
adc
bound
mov
mov
mov
xor
pop
mov
stos
fsubs
out
mov
push
popf
and
pop
dec
add
das
and
fwait
mov
cs
push
and
je
ja
clc
pop
sub
xchg
imul
bt
clc
cmp
sub
mov
pushf
ror
pusha
dec
cmc
push
push
rol
jmp
stc
cmp
push
lea
jb
stc
cmp
push
call
lea
jne
call
lea
jno
pusha
mov
call
pop
call
pop
xor
test
lods
pop
out
divb
add
xchg
neg
and
rcr
mov
add
mov
inc
push
mov
dec
in
sub
jge
add
shll
jp
mov
xchg
enter
fs
ja
call
ret
test
lods
aas
mov
das
mov
mov
in
data16
sub
fwait
dec
jnp
fsubp
test
or
xor
or
repz
xor
push
or
inc
jge
js
and
loop
divl
inc
mov
xchg
lcall
jmp
dec
ret
icebp
lea
push
mov
mov
sub
ret
mov
scas
mov
pop
mul
mov
rorl
sar
repnz
pusha
jmp
jmp
loopne
fwait
test
lods
cmc
mov
or
test
cld
in
cmpsl
sbb
adc
psllq
insb
je
and
test
int
cmp
dec
xor
aaa
out
rcl
jge
mov
xchg
mov
push
call
movsl
das
icebp
das
inc
and
xchg
dec
and
scas
cmpsb
fnstsw
or
int3
out
ret
ret
out
ja
arpl
fldcw
lcall
scas
nop
outsb
aad
adc
popf
jno
sar
je
or
inc
and
push
shr
pushf
lea
je
jmp
jmp
call
pusha
jmp
call
mov
pusha
lea
call
sbb
mov
movb
movl
jmp
call
lea
mov
pushf
jmp
mov
call
das
xchg
xchg
lods
adc
js
sub
scas
push
nop
mov
int3
gs
mov
sbb
mov
jb
test
pop
out
sti
push
xor
imul
enter
popl
push
or
cwtl
inc
mov
add
imull
jb
inc
adc
inc
test
push
ret
push
inc
jne
repnz
in
loope
test
test
mov
xor
popa
cld
arpl
stos
jmp
push
jns
movsl
lcall
pop
pop
adc
aas
add
adc
icebp
xchg
nop
mov
xchg
mov
insl
jmp
fsubp
mov
mov
hlt
inc
mov
dec
mov
mov
int3
and
fidivl
cmp
cltd
fidivrl
mov
sbb
mov
cltd
sbb
mov
mov
mov
fidivrl
mov
pop
sti
pop
fistpl
xor
mov
jnp
xor
fwait
int
cmp
clc
cmpb
pushf
pusha
pusha
movw
lea
jne
bsr
bsf
sub
shr
pusha
shr
mov
rol
shl
pushf
add
rcr
pusha
shr
mov
bt
cmc
jmp
lea
call
pushf
lea
ja
jae
pusha
jmp
stc
cmpb
lea
pusha
jmp
pushf
mov
jmp
stc
mov
jmp
movb
test
push
pushf
pushf
lea
je
call
sub
clc
ror
pushf
dec
jmp
pushf
pushf
call
lea
jne
dec
mov
push
jmp
pop
shll
imull
mov
imul
cmpsb
imul
stc
jle
push
push
xchg
mov
out
movsb
xor
js
cmpsb
call
sub
push
xchg
push
sahf
pop
outsb
stc
sub
nop
dec
jp
mov
and
dec
insl
lret
inc
enter
shlb
push
push
sub
pop
aaa
push
mov
enter
cli
arpl
adc
arpl
jae
fldcw
outsb
pop
cmp
ficomps
iret
add
fcoml
add
xchg
adc
push
bt
imul
movw
bt
movb
add
pusha
movb
lea
jmp
pushf
movl
pusha
lea
jmp
popf
js
mov
lods
pop
dec
xchg
and
repz
sarl
cmp
popf
pop
push
mov
test
dec
mov
xchg
in
lods
rolb
push
aad
add
aaa
test
xor
or
repnz
loop
pusha
jo
pop
push
shl
out
shlb
aas
popa
mov
mov
pusha
pop
loop
sahf
pop
jecxz
sbb
adc
jnp
mov
popa
sahf
mov
icebp
pusha
lea
ja
jge
pushf
lea
jb
pusha
cmpb
push
pushf
lea
jne
or
mov
cmp
clc
bt
add
pusha
bt
test
movzwl
lea
push
pusha
mov
pusha
bt
movb
add
stc
call
not
lahf
push
movb
not
pushf
not
bswap
mov
not
mov
movzbw
pop
lea
pusha
pushf
movl
push
mov
mov
pushl
ret
lea
je
pusha
sub
pusha
pushl
pushf
movb
lea
jmp
dec
mov
lods
leave
cmp
cs
push
jge
xor
push
scas
ret
push
push
orl
xlat
xor
push
icebp
add
arpl
mov
jb
popf
or
mov
and
je
mov
cmpsb
out
clc
inc
mull
and
movb
pusha
lea
jb
cmc
jmp
rol
pushf
add
pushf
not
call
call
jmp
pusha
nop
pop
mov
lods
push
and
sar
test
cli
in
xchg
loope
push
jp
inc
add
jmp
and
cmp
mov
sbb
lods
test
cmp
sbb
in
dec
and
iret
pushl
push
inc
cltd
mov
push
jb
inc
add
pushf
push
inc
sar
seto
bt
xchg
or
bsf
bsf
neg
mov
pusha
mov
pushf
mov
mov
sar
bt
mov
stc
sub
jmp
jmp
movzbw
movsbl
movsbw
mov
call
bt
add
call
pushf
add
lea
movsbw
movl
lea
mov
pusha
jmp
test
call
mov
mov
imull
lret
mov
mov
sub
imul
test
test
stc
xchg
data16
repnz
inc
scas
sub
sbbb
jp
repz
add
rclb
jg
fs
test
add
les
inc
and
or
test
aam
xchg
xchg
rol
scas
or
imull
push
push
lahf
or
jle
nop
pop
enter
sub
test
test
push
ds
pushf
dec
xor
mov
push
mov
sub
jmp
pop
daa
push
cmpps
int3
daa
mov
sbb
or
out
jmp
mov
psraw
insb
lcall
jo
repz
scas
popf
out
sub
jne
dec
inc
hlt
enter
das
xchg
movl
movb
lea
jmp
sub
cmp
push
pushf
jmp
pusha
lea
jne
jmp
insl
sub
lea
movsl
xor
fistps
pop
push
xchg
dec
imul
lods
rcrl
ja
insb
xor
in
jl
out
addr16
les
inc
xlat
sub
lods
imul
loope
cwtl
jno
pop
cmp
sub
or
cmp
inc
add
pop
out
or
in
pop
iret
arpl
fs
xchg
nop
subb
add
stc
mov
or
movzbw
movsbw
bsf
add
lea
bswap
call
pushf
call
jecxz
ds
imull
xchg
rorb
in
mov
adc
add
mov
inc
xor
fdivrs
fldcw
pop
ds
xor
add
daa
push
pop
mov
sbb
xchg
xor
in
jo
pop
popa
sub
aam
mov
mov
cmp
fadds
inc
aad
jno
push
das
sbb
arpl
out
dec
mov
add
push
lcall
cwtl
jmp
call
pushf
lea
jne
movsbw
mov
add
test
bts
sub
not
shrd
mov
pusha
sub
call
mov
cmp
pusha
pusha
lea
jae
rcl
and
rcl
push
mov
mov
mov
shld
movsbw
shl
setg
mov
bt
sub
stc
repnz
pusha
lea
jne
cmc
mov
sar
sub
ror
test
mov
clc
sub
call
lea
jne
mov
call
lahf
movsbw
lea
movb
bswap
not
mov
jmp
pushf
mov
mov
jmp
mov
push
sub
pushf
ror
push
dec
clc
rol
jmp
lahf
jp
imull
insb
testl
fld
sbb
sahf
nop
shl
push
outsl
stc
les
fisubrl
pop
pop
lret
push
int3
es
test
sbb
pop
sub
jns
outsl
pop
cmpsb
insb
lea
loope
mov
adc
mov
mov
and
enter
push
cmp
xchg
scas
sarb
dec
lock
scas
cmp
imul
mov
cltd
int3
sbb
mov
xor
je
movw
call
lea
je
stc
jmp
lea
je
push
bt
cmc
sub
jmp
jmp
and
imull
sub
cld
fiadds
dec
or
mov
jne
push
pop
add
pop
outsb
ja
or
xchg
test
jns
sub
xchg
in
jg
mov
gs
nop
imull
sti
test
stc
inc
sub
orb
rorb
out
mov
and
pop
sahf
cwtl
cwtl
add
ret
sbb
or
mov
lret
xchg
add
dec
cwtl
dec
fildl
sarl
mov
mov
adc
insl
sahf
sar
sub
fbstp
std
xlat
cmp
pop
add
push
push
test
cmp
push
cld
xchg
xchg
fidivrs
jb
adc
mov
mov
inc
push
scas
lahf
dec
cmc
cltd
scas
dec
xlat
leave
mov
inc
cld
imul
mov
shr
add
fcoms
out
daa
xchg
nop
lcall
out
mov
fnstenv
dec
jo
aaa
push
stos
loop
lret
rcl
xor
iretw
cltd
add
mov
stc
xor
mov
pop
ljmp
mov
ljmp
outsl
jmp
mov
pusha
cmpb
push
lea
jne
ror
mov
stc
add
push
call
lea
pop
call
call
xchg
loope
xchg
imull
addr16
out
clc
add
mov
outsb
nop
ficoml
mov
mov
test
dec
xor
inc
lods
cmp
push
adc
in
pop
xor
pushf
push
xor
cmp
push
sbb
lods
or
push
pop
cli
and
jb
inc
fnsave
decl
sarb
fistl
mov
daa
push
iret
dec
fwait
scas
cmp
pop
daa
sbb
frstor
popa
sti
dec
xchg
xchg
imull
xlat
inc
jmp
fildl
rorl
or
push
in
fucomip
sbb
mov
xchg
pop
iret
sub
push
lock
inc
cltd
dec
push
or
add
xchg
mov
mov
xchg
jae
add
jp
or
dec
fst
out
enter
dec
lahf
push
jp
dec
sbb
adc
jg
daa
or
aas
xor
or
movsl
push
dec
jns
jge
push
in
add
out
mov
stos
aad
add
data16
int
adc
adc
push
mov
cmp
jmp
movw
lea
je
jmp
pusha
pushf
test
call
test
movb
bt
cmpb
pushf
pushf
lea
jne
rcl
rol
mov
bt
push
bt
add
pusha
movl
stc
movzwl
btc
bts
rcl
mov
push
cmc
cmp
cmp
add
pushf
cmp
mov
jmp
fiadds
imull
mov
scas
xlat
lahf
call
filds
adc
lcall
mov
shrl
ljmp
fstl
ss
mov
fmull
mov
pushf
and
repnz
push
mov
xlat
orb
out
cmp
xlat
inc
push
sahf
in
lret
jle
sub
inc
cmp
lock
jae
into
test
mov
sub
mov
or
sub
xchg
je
inc
dec
in
cmc
rorl
test
jp
fcmovbe
mov
clc
sbb
lds
movsl
push
xchg
shlb
inc
aad
or
je
rorb
pop
nop
and
sub
mov
xchg
imull
push
test
pop
pusha
dec
xchg
jmp
fs
mov
jo
or
lods
xor
pop
push
xchg
dec
xor
shlb
in
push
adc
shll
ds
cltd
cli
cmp
lds
dec
xchg
idivb
mov
mov
das
scas
or
aad
push
lods
mov
or
je
adc
ja
cmp
mov
addr16
mov
cli
xchg
and
cli
aam
xchg
imull
xor
arpl
xlat
mov
inc
icebp
cs
aam
imul
aaa
aas
dec
add
int
lods
lret
test
loop
lods
jb
stos
fwait
or
xchg
push
pop
je
ret
pushl
sub
push
mov
sbb
icebp
pop
jo
jb
ljmp
inc
adc
imull
mov
xor
push
jp
mov
dec
xor
or
mov
movw
pushf
add
clc
mov
mov
movb
clc
test
mov
lea
je
pushf
pushf
add
stc
clc
stc
stc
cmp
jmp
mov
jno
imull
jg
xchg
dec
sti
adc
fldl
sbb
ljmp
aam
test
mov
fsubrl
scas
test
paddb
shlb
pop
mov
xchg
xchg
jb
jle
adc
xchg
mov
in
xor
psubsw
imull
pop
xor
in
jns
adc
xchg
lahf
sti
sub
loope
lcall
outsb
mov
or
xor
add
and
xor
sbb
xchg
stos
insl
inc
or
insb
jae
push
movsl
je
out
xor
and
pop
fwait
notl
cmp
cmp
cmp
pusha
cmpsb
scas
pop
sbb
fdivl
cmc
notl
dec
pushf
insl
popf
roll
adc
pop
psrlq
mov
rcll
mov
add
dec
daa
push
mov
sub
push
mov
sbb
mov
movsb
sub
subl
xor
jge
daa
adc
add
jmp
adc
jno
sbb
ljmp
xchg
outsb
xchg
imull
push
pop
jno
fisubl
test
aad
or
adc
sbbb
fs
cltd
shlb
dec
stos
ja
xchg
cmp
pop
mov
stc
pop
cmp
mov
pop
orb
jno
iret
test
sbb
add
scas
in
xor
imul
add
outsl
aaa
shll
mov
jno
adc
aaa
push
fildll
xor
mov
iret
and
in
xor
daa
inc
daa
inc
into
test
mov
mov
sbb
int
add
push
lods
inc
mov
or
hlt
scas
outsl
mov
xchg
fistpll
inc
cmp
lods
outsl
or
lds
inc
cli
sbb
cmp
jg
jl
and
sbb
out
mov
add
lods
out
shr
mov
or
mov
scas
dec
push
scas
jb
sub
shll
adc
test
xchg
cmpsl
lea
jnp
ret
mov
cmpb
sbb
sub
jle
xchg
mov
and
lret
sbbb
out
hlt
cs
or
add
insl
sbb
and
adc
fstps
jge
popf
push
mov
repnz
inc
push
or
push
cmc
mov
sbb
jb
mov
rolb
pop
pop
sbb
flds
or
or
sub
pop
hlt
gs
jo
add
jl
xorps
pop
push
enter
iret
add
rcrb
xchg
out
cmp
stc
mov
adc
jnp
lea
or
xor
lods
jnp
xchg
in
jnp
mov
js
sbb
mov
rcl
jae
xor
shlb
adc
jp
cmp
mov
xor
pop
outsb
dec
test
sbbl
add
inc
sub
mov
movsb
xchg
jae
ror
jns
sbb
lods
push
divl
mov
xchg
mov
sbb
pop
pop
mov
mov
dec
cmp
aas
cmp
mov
add
sbb
inc
gs
add
sub
hlt
outsl
fildll
or
dec
mov
or
cltd
add
lods
xchg
pushf
lea
jae
call
pop
mov
cltd
imull
stos
push
add
cmp
inc
adc
dec
mov
shrb
js
sub
xor
rep
adc
movsb
cmp
insb
ret
dec
jae
sub
xor
pop
cli
and
dec
aam
pop
xchg
dec
cmpsb
in
or
push
pop
incb
and
int
test
test
push
sbb
jge
xor
cmp
cmpsl
dec
daa
xchg
or
fs
mov
xor
sbb
daa
outsb
movb
lea
jae
call
movzwl
shl
mov
mov
add
pusha
pushf
stc
mov
stc
clc
stc
call
clc
add
stc
movzwl
sar
push
bts
mov
call
rep
mov
pusha
call
call
pushf
push
lea
call
pusha
adc
call
push
cmp
call
pusha
lea
jb
jmp
sub
ljmp
iret
mov
push
or
push
inc
xchg
sub
test
xlat
ret
cwtl
dec
xor
dec
cli
xlat
and
dec
loop
adc
adc
loop
pop
lods
adc
fcomp
push
movsb
loop
shlb
ljmp
mov
sti
loop
gs
cs
clc
mov
push
iret
add
or
fistpl
mov
inc
imul
gs
xor
cs
insb
add
push
lods
fwait
imull
mov
stos
xlat
and
sub
sub
mov
or
push
xor
out
jnp
add
push
dec
inc
pusha
fistl
int3
fcoml
test
in
add
push
stos
hlt
ud0
xchg
es
stos
mov
adc
pop
rorl
and
lea
call
jmp
mov
mov
setne
lods
clc
clc
sub
pusha
cmp
jmp
movl
jmp
stc
pushf
sub
bt
pushl
popl
bt
bt
cmp
call
mov
mov
pushl
ret
push
lea
jae
shl
mov
shl
stc
pusha
sar
mov
xor
not
btc
mov
mov
pusha
sub
movb
movb
lea
jmp
pushf
pusha
pushf
lea
jb
clc
stc
bt
cmpb
js
jne
rcl
cmp
test
or
mov
call
cmp
clc
or
test
mov
bt
jmp
cmp
sbb
subb
pop
enter
out
testl
push
inc
enter
push
mov
lret
icebp
cmp
fstpt
lock
loope
and
popa
enter
cmp
ja
popa
push
in
mov
add
push
push
out
repnz
push
cmp
dec
fwait
dec
mov
pop
cmc
push
cmp
pop
in
jo
xor
push
xor
clc
loope
enter
mov
pushf
imull
std
cmpsl
adc
sub
ficoms
out
jecxz
test
shl
or
sarb
cmp
dec
pop
orb
fistpll
lods
dec
pop
cwtl
jnp
fnstsw
adc
mov
lea
jecxz
xchg
sub
rcll
cmpsb
je
rep
push
xchg
out
jp
push
repz
ret
cld
or
shll
dec
shlb
ds
mov
imul
fisubs
jg
push
sbb
mov
and
cmc
ljmp
dec
inc
mov
cmp
cmp
ret
inc
jecxz
movsl
stos
lods
rorb
jge
mov
mov
mov
insl
fbld
jb
dec
push
mov
sub
ficoms
dec
iret
jne
or
xorl
adc
nop
mov
pop
std
push
arpl
loop
jge
fimull
jmp
push
cmpsl
call
fsts
cmp
out
sub
jge
adc
push
shl
and
sub
mov
mov
fcmovb
outsb
hlt
enter
sub
cmc
mov
cmc
call
dec
inc
loopne
jecxz
mov
inc
cwtl
cmp
sub
mov
pop
xchg
jl
dec
or
std
xor
sub
xchg
dec
in
jl
mov
fcmovb
mov
xor
clc
test
int
adc
push
mov
and
cmp
push
int3
xchg
push
mov
in
cmpsb
clc
dec
cmp
pop
icebp
popa
push
fs
jle
out
scas
adc
int3
cld
lds
lods
clc
in
xor
ret
lods
mov
jbe
jge
jge
and
fadd
cmp
fadd
push
or
test
je
sub
dec
xor
mov
es
sbb
adc
ss
and
loop
shl
lcall
mov
dec
cli
in
mov
jmp
cmp
sbb
clc
cltd
lods
push
cmp
or
and
mov
in
mov
xchg
jg
xor
adc
and
inc
and
pushf
movw
movl
pushf
pushl
ret
sbb
stc
sahf
imull
mov
ljmp
sub
mulb
stos
sbb
add
stc
xchg
jb
test
pushf
xor
adc
xchg
rcll
mov
pop
out
lahf
push
pop
aam
and
imul
clc
and
movsl
jecxz
add
es
jle
xchg
jno
fnstcw
test
pop
dec
mov
fstpl
inc
fists
repz
adc
outsb
add
jg
je
shlb
lea
jae
jmp
jle
pushf
pusha
movb
dec
mov
shl
seto
pushl
jmp
inc
inc
sar
dec
rcr
xor
xchg
aam
jmp
jmp
pushl
popl
call
in
icebp
jg,pt
mov
adc
mov
jmp
icebp
notrack
mov
xchg
loope
push
jg
fimull
inc
ljmp
push
push
out
add
out
adc
pusha
mov
mov
movw
pushl
ret
lea
ja
mov
add
ror
sub
movzbl
movsbw
movzbw
add
or
rcr
mov
shl
mov
pusha
push
mov
mov
repnz
pushf
push
mov
call
jmp
pusha
lea
jne
shl
adc
not
call
call
test
push
lea
je
pushf
add
clc
test
stc
cmp
movb
jmp
jmp
mov
inc
and
pushf
mov
clc
xchg
not
clc
movsbl
mov
cmc
sub
pusha
rep
lea
jmp
inc
stc
clc
pushl
cmp
movsbw
cwtl
pop
lea
pushf
cwtl
cwtl
lea
mov
call
mov
lods
mov
repz
lret
mov
notb
nop
and
mov
pop
sub
fwait
movsb
outsb
xchg
ror
and
push
mov
cmp
cmc
into
adc
jnp
mov
decl
loop
daa
pop
push
scas
mov
mov
jne
xor
cmp
add
push
push
pushf
pushl
ret
mov
jmp
bt
rol
cmc
jle
add
test
not
bt
shr
pushf
pushf
pusha
pushf
lea
je
pusha
push
adc
pushl
pushf
mov
lea
jmp
mov
xchg
pushf
cmpsl
icebp
fldenv
adc
lds
jmp
fcoml
stos
popf
test
lret
int3
test
jbe
shl
adc
mov
jp
cmp
mov
mov
and
mov
enter
jecxz
movsb
sub
pushf
mov
pusha
ficoms
sbb
xchg
hlt
fiadds
aad
in
shlb
and
movsb
mul
push
dec
fisttpl
jno
xchg
aam
lret
pop
pop
arpl
mov
add
imull
adc
ret
lods
hlt
and
xor
xchg
call
mov
push
add
test
insl
mov
mov
aas
mov
cld
mov
mov
mov
pop
mov
int
xchg
xor
xor
sbb
sbb
cmpsb
ficoms
pop
mov
loope
shrb
jae
repz
sbb
mov
ljmp
add
mov
mov
divb
push
popa
mov
lock
call
push
call
add
add
cmp
mov
insl
xchg
pop
sarb
filds
and
orl
inc
sub
scas
loopne
sub
ret
frstor
mov
test
pop
add
add
subl
xor
int3
out
add
ret
xchg
or
outsl
sbb
je
adc
jmp
in
cld
jae
imull
mov
movsl
dec
pop
pop
lret
mov
or
jnp
xchg
cmpsb
push
push
int
test
test
pop
add
outsl
cmpl
lret
negl
jo
mov
jl
idivl
pop
mov
jbe
and
dec
sbb
jge
lret
jmp
push
mov
icebp
mov
xor
enter
xchg
mov
mov
jp
sbb
inc
enter
imul
lea
jne
inc
rcr
sub
shl
xor
neg
mov
mov
add
cmc
dec
mov
push
test
jmp
lea
jb
cmp
cmp
push
pushf
call
js
pop
movsb
imull
clc
and
cli
inc
or
mov
mov
stc
cmp
mov
daa
inc
shrl
test
xor
and
pop
out
mov
sbb
popa
mov
adc
xor
jle
lds
out
and
mov
xlat
sbb
cmpsb
leave
gs
pop
jp
cld
dec
inc
rolb
mov
aad
popa
push
cltd
bswap
setno
movsbw
call
inc
and
pop
inc
sub
jmp
pop
aad
mov
test
fst
jbe
mov
cmp
xchg
sbb
jnp
sub
cld
xor
cmp
mov
mov
add
mov
push
ret
ret
hlt
xor
add
add
or
push
xor
loop
loopne
aad
mov
push
and
xor
rorl
push
icebp
shll
xchg
clc
push
cmpl
push
add
fs
inc
mov
add
jecxz
fs
jae
bt
ror
bsf
mov
pusha
mov
sbb
shrd
mov
clc
pushf
pusha
movl
sub
test
repnz
jmp
pushl
lea
je
stc
cmc
add
cmp
cmp
push
movb
lea
jb
test
pushf
cmp
call
stc
cmp
mov
lea
ja
sar
pusha
sub
rcl
add
add
btr
mov
dec
not
mov
test
bt
repnz
call
lea
pop
not
mov
jmp
lea
jae
clc
cmp
cmp
push
pusha
mov
pusha
lea
jae
bt
cmp
cmp
pusha
lea
ja
push
inc
pushf
jmp
bts
xor
mov
clc
and
pushf
jmp
inc
test
add
sbb
mov
pushf
push
test
jmp
push
pusha
pushf
lea
ja
dec
sub
bts
push
sub
add
sub
btc
xor
mov
rcl
and
sbb
rcr
mov
stc
cmc
pusha
repnz
call
pusha
mov
mov
pusha
pushf
pushl
ret
pusha
mov
pushf
mov
pushl
push
pushl
ret
mov
bswap
rcl
pushf
test
add
not
movsbw
call
clc
cmp
jmp
pusha
cmp
jmp
mov
shlb
jnp
dec
shrb
movsl
das
cli
and
sbb
adc
lret
add
aas
jmp
lods
lcall
xchg
iret
outsl
cmc
cs
xchg
std
sahf
sub
xchg
mov
jb
addr16
and
std
or
mov
jge
cmp
repz
daa
mov
inc
stos
inc
inc
jno
dec
add
lods
push
jle
add
insb
clc
loop
in
cmp
inc
jno
add
mov
pusha
jmp
inc
cmc
cmp
bswap
lea
pop
bswap
pop
mov
movw
jmp
jmp
stc
stc
repnz
pusha
call
jae
cmpps
mov
jl
mov
or
into
sbb
cmp
cmc
xor
cmp
lods
imul
mov
mov
stc
push
or
fnstenv
adc
pop
mov
mov
xchg
dec
mov
stos
mov
addr16
jbe
adc
xchg
jae
add
or
outsb
pop
xorb
push
andb
shr
fistps
dec
sbb
mov
sbb
daa
int3
inc
out
mov
lods
sahf
jns
adc
add
add
add
add
aaa
add
add
add
shll
test
xor
mov
xor
mov
aaa
add
add
add
pushf
cmp
pusha
cmp
pushf
pushl
lea
ja
pusha
lea
jmp
jmp
or
lods
mov
xor
orl
add
cmp
test
adc
mov
pop
inc
icebp
sti
mov
xor
or
mov
jl
insb
sub
inc
stos
fistps
dec
xor
sbb
jbe
call
rcr
pusha
add
xor
lods
in
xchg
or
test
insl
addl
and
cmpsl
jae
jnp
pop
sub
mov
jmp
and
xor
pop
pop
adc
mov
dec
push
and
and
scas
sbb
xlat
je
or
mov
sti
cmpsb
xorb
sbb
mov
adcb
cmp
es
push
aaa
xlat
aaa
test
adc
cmpsl
push
sbb
int
loopne
mov
xor
dec
sub
popa
sbb
push
inc
or
sbb
cmc
jmp
cmpsl
jge
xchg
adc
push
fsin
cmp
and
inc
int
adc
outsl
sub
mov
stc
sbb
in
jp
data16
scas
xor
mov
sbb
test
pop
push
cwtl
aas
aam
jecxz
jle
and
mov
lahf
out
pop
test
mov
inc
inc
xchg
inc
sub
mov
xchg
add
test
add
scas
inc
imul
ss
xor
and
jmp
test
repnz
jmp
jmp
aad
add
push
test
iret
push
std
ss
fucomi
mov
bound
lahf
cmp
ret
pop
shlb
clc
mov
call
pop
or
adc
test
cmp
pusha
lea
ja
dec
inc
jmp
stos
sti
jb
imull
inc
or
mov
push
insb
mov
clc
popa
sub
stos
push
and
lds
mov
lods
push
lret
jle
sbb
aad
pop
or
dec
fbld
bound
pop
xorl
sbb
mov
mov
jnp
cmpsl
pusha
jb
leave
mov
jecxz
into
sub
adc
jbe
fwait
lods
lahf
jg
lea
mov
and
test
jp
in
push
lcall
notb
sbbb
loope
andnps
sbb
out
leave
or
lods
sbb
cmc
jne
data16
test
push
mov
lock
jmp
push
rcll
jp
lods
jbe
fsubr
fsubrl
mov
jle
aad
push
fnstsw
data16
rcr
scas
push
sti
add
sbb
cmc
lock
sbb
lods
push
pop
daa
rcrl
addb
and
neg
mov
sub
loopne
fdiv
shrb
fcmovb
lods
pop
or
clc
mov
dec
out
iret
daa
xchg
xor
outsl
pop
sub
stc
push
imul
pushl
cmc
call
jmp
pushf
lea
jae
and
xchg
dec
rcr
mov
dec
mov
lea
and
mov
clc
pushf
test
sub
test
pushf
call
mov
pushf
test
mov
pushf
lea
je
call
push
int
imull
pop
dec
mov
arpl
outsl
sahf
jg
sub
xlat
mov
js
in
pop
and
scas
int
shr
stos
dec
rclb
aad
enter
sub
pop
and
or
sahf
or
lock
lock
or
mov
aas
mov
fcompl
mov
sub
sub
aad
jo
mov
dec
add
mov
xor
sbb
xchg
dec
cli
lods
mov
xor
mov
inc
add
test
shrb
xor
adc
add
imul
imull
es
push
mov
out
mov
ljmp
outsb
mov
test
lods
repnz
jp
lret
and
xor
sar
jmp
js
inc
clc
xorl
pop
imul
cmp
jo
xor
cmp
cmp
xor
and
xchg
xchg
inc
mov
push
popf
and
push
push
and
insl
movsl
inc
and
sbb
out
mov
inc
xchg
iret
mov
jbe
jns
popf
das
fists
test
test
and
cmp
stos
or
imull
sub
cmpsb
cs
mov
jo
loope
xor
adc
test
adc
sbb
xchg
pop
inc
jo
rolb
jae
xchg
xor
pop
or
sahf
mov
shlb
push
mov
lock
xor
std
or
inc
or
mov
jns
sbb
xor
faddl
dec
cmp
int
scas
imull
imul
mov
subl
loopne
imul
adc
dec
sbb
nop
pop
xor
fwait
je
add
inc
push
cs
xchg
push
mov
inc
and
add
cmpsl
push
mov
test
cmc
movsl
mov
stc
lods
jle
or
mov
and
lea
jmp
ja
aas
scas
imull
out
pop
inc
dec
push
mov
js
add
jb
bound
push
daa
lahf
cmp
pop
jb
xchg
add
hlt
aas
xchg
sub
pop
rcrb
std
out
aam
adc
cmc
push
xchg
add
xchg
jg
lret
jl
mov
aaa
jl
insb
xchg
out
insb
jno
stos
cs
icebp
xor
cs
leave
shll
add
out
mov
sub
or
hlt
fdivp
fstl
into
add
xorb
pop
movsb
mov
cmc
push
jp
pop
or
cld
pop
scas
or
fmuls
scas
imull
and
je
jnp
adc
sbb
xchg
cmp
data16
ss
jmp
cltd
ret
push
insb
inc
popa
stc
jmp
push
cmpsb
aad
xlat
ljmp
xor
add
pop
mov
xlat
outsb
test
cmp
or
cmc
mov
push
imulb
xchg
scas
imull
scas
scas
jnp
or
cmc
loopne
mov
sbb
cs
out
in
dec
ljmp
mov
and
aad
mov
mov
pushf
ja
cmp
adc
fcoml
fdivs
in
pushf
push
mov
ss
cmpsl
push
add
xor
repz
push
mov
xchg
cmpsl
mov
clc
lods
aas
mov
lret
lahf
iret
and
sbb
fs
clc
mov
add
push
cmp
pop
or
shl
std
jge
pop
mov
fdivs
xor
lea
pushf
mov
bswap
add
js
pop
cltd
dec
jge
les
or
scas
add
sbb
jno
jno
fadds
xchg
or
sbb
mov
sbb
add
dec
xchg
hlt
xchg
and
mov
out
mov
clc
jo
repnz
or
arpl
popa
mov
movaps
imul
mov
lcall
into
pop
inc
mov
lret
and
jmp
mov
push
mov
in
lret
jne
repnz
pop
dec
mov
insb
or
pop
mov
xor
lods
iret
imul
adcl
mov
mov
sbb
int
xchg
dec
adc
lret
mov
pop
cmp
in
jg
mov
xchg
jle
pop
aaa
xchg
rcrl
pop
mov
outsb
pop
fnstenv
jge
in
and
mov
mov
sbb
pop
pop
aaa
bound
or
jle,pt
ss
jp
fidivs
aaa
jb
aas
test
inc
push
sarl
jle
mov
sbb
ja
pushf
mov
lcall
push
xchg
mov
mov
aaa
pop
sub
mov
jl
push
xchg
dec
pop
pushf
sahf
bound
mov
std
repz
jno
mov
sbb
fcoml
arpl
aaa
je
jbe
push
rorl
pusha
sbb
push
fstl
fs
push
lcall
into
mov
xchg
shr
pop
xchg
loope
cld
pcmpeqd
ds
cmp
dec
add
jp
mov
pop
cmp
das
aaa
pop
js
mov
sahf
sbb
mov
pop
cwtl
cli
and
dec
fs
fbstp
add
mov
mov
dec
fdivl
ja
leave
mov
imul
jmp
stos
popf
aaa
test
mov
push
ss
push
aas
push
cld
dec
sahf
and
adc
fistpl
stc
popa
out
fstl
push
roll
mov
jp
pop
or
jo
cmp
scas
stos
xchg
int
scas
loope
sbb
mov
mov
jnp
xchg
xchg
loope
out
inc
pusha
outsl
push
jns
shll
das
mov
xchg
loope
adc
fisttps
xchg
outsb
bound
enter
pushf
xor
addb
sub
addr16
pushf
cmp
cmp
sti
add
jae
mov
neg
mov
jmp
sti
or
sti
mov
jge
push
cld
push
xor
std
sbb
pop
or
pop
rcrl
inc
add
mov
ror
fisttpl
cmp
insl
push
or
gs
push
pop
xor
inc
pop
pop
inc
mov
adc
jbe,pt
fmuls
aaa
sarb
pop
or
xor
imul
add
xor
sbb
jmp
jle
aaa
mov
cmp
mov
sub
mov
adc
pop
sahf
aaa
xchg
test
cld
jae
and
xor
mov
mov
adc
popf
adc
jge
mov
pushf
and
fistps
adc
pop
cs
jge
lcall
sti
test
and
out
cltd
pop
mov
jmp
mov
insb
push
lock
pop
pop
inc
in
inc
cmp
or
pop
mov
popf
in
jp
out
negb
fcoml
sub
or
sbb
mov
loope
aaa
iret
in
out
out
jb
inc
push
add
shlb
push
dec
je,pt
popf
sbb
js
push
ret
bound
ljmp
inc
mov
or
pushf
aaa
pusha
fstl
jo
jle
sbb
push
and
push
and
test
int
xor
sub
mov
and
xor
cld
pushf
and
loope
inc
popa
sub
and
bound
xchg
mov
fistps
xor
popa
mov
cmpb
dec
jge
and
pop
and
pop
cmp
std
repz
shlb
xor
pop
sbb
pop
jnp
fidivrs
jmp
xchg
pop
iret
and
xchg
cmp
mov
in
sbb
aas
cld
mov
insl
mov
je
pop
addr16
pop
cmp
mov
bound
mull
mov
les
or
popa
hlt
aas
ja
icebp
or
sbb
mov
jge
orb
sti
inc
mov
mov
bound
inc
inc
sbb
inc
lahf
jno
lock
ds
push
sti
push
std
bound
pop
push
and
jle
adc
push
pop
loope
sbb
popa
pusha
mov
cmc
sti
inc
push
and
punpcklwd
pushf
cmp
aad
adc
loope
subl
pushf
jb
lock
std
pop
sbb
mov
fildl
insb
bound
bound
aad
addl
mov
add
repz
mov
pop
in
loop
fistps
loope
icebp
fnstsw
adc
dec
pushf
bound
inc
sub
loope
jbe
in
cwtl
mov
pushf
das
insb
repz
pop
aaa
sahf
push
add
jnp
int3
inc
cltd
sub
aad
cmp
cmpsb
lods
jbe
pop
push
or
rorl
pop
pushf
fstpl
outsb
bound
aaa
data16
or
les
outsl
mov
pusha
movsb
cli
and
pushf
adcb
jecxz
mov
add
imul
jno
aad
mov
pop
movsl
sbb
ds
sub
add
or
iret
pop
adc
pop
int
ret
mov
cs
pop
cmp
mov
pop
xor
enter
inc
xor
loope
cld
sti
movsb
orl
or
hlt
lahf
sarl
cmpsb
fistps
adc
pop
pop
int
inc
orb
aaa
jge
subb
pop
jno
pop
mov
lahf
ljmp
std
mov
sahf
mov
aaa
mov
mov
sbb
dec
inc
pop
xchg
aaa
in
mov
repnz
adc
sahf
in
outsb
sbb
mov
push
aad
arpl
jmp
out
stos
aaa
adc
push
call
ss
mov
jne
xchg
popa
lds
std
sbb
pop
adc
and
and
xor
dec
sbb
pop
jp
inc
and
jae
std
xlat
mov
xchg
lods
fdivrp
sbb
cmp
shlb
lret
or
pusha
dec
push
test
ss
jp
popa
loope
jbe
push
xchg
cmp
xorb
fsubrs
jle
mov
push
jp
xor
ja
pop
xchg
sahf
xor
push
sbb
outsl
idivl
sub
push
xchg
cmp
mov
out
mov
mov
xor
jmp
hlt
push
push
inc
and
or
inc
cmpsb
je
in
ja
adc
xchg
sti
and
ffreep
test
in
xor
out
out
and
stos
lock
xchg
ds
jge
and
repz
cmp
lods
jp
push
cli
jb
xor
sbb
aaa
fmull
pop
xlat
xchg
mov
sbb
jb
jp
pushf
push
or
sarl
loope
lahf
test
cmp
jae
xlat
scas
out
pusha
or
mov
mov
lahf
pop
push
sbb
dec
and
push
jbe
shll
push
test
ljmp
pop
stos
add
in
das
ret
fabs
add
aaa
mov
hlt
and
cs
jo
mov
xor
fs
jb
imul
loopne
push
xchg
sahf
hlt
pop
pop
mov
sbb
int3
arpl
repz
adc
in
sbb
sbb
add
std
cmp
cmp
push
dec
iret
push
add
stos
aam
lock
outsb
sub
xor
aaa
mov
push
adc
adc
bound
pop
pop
mov
shr
jle
test
scas
cmp
pushl
int3
and
rorl
dec
xor
pop
pop
mov
lock
pop
jb
jp
in
mov
movsb
sti
fwait
xor
cltd
or
inc
ljmp
mov
test
test
dec
ret
xchg
sbb
xor
sti
sbb
or
cld
insl
rcll
dec
scas
ja
jmp
mov
lds
inc
cmpsb
out
and
jne
fs
pushf
fisttpl
jbe
std
loop
dec
inc
dec
or
insb
in
outsb
cmp
jl
aad
aaa
xchg
imul
dec
add
and
lock
fidivrs
cmp
xor
pop
in
sbb
out
in
arpl
sbb
pop
es
mov
das
mov
out
add
mov
popa
insb
mov
repz
push
testb
pop
mov
cmp
pop
mov
pop
in
cmp
pop
shlb
sub
sti
cmp
xchg
mov
or
das
aad
mov
pop
ds
leave
cmpsb
xchg
fildll
pop
sub
push
les
and
cs
jne
dec
mov
in
hlt
sbb
cltd
mov
push
imul
push
ret
pop
dec
pop
cmp
stc
cmp
xor
cmp
sbb
loop
shrl
mov
xchg
data16
push
inc
aad
add
fisttpll
int3
pusha
fisubs
push
div
mov
push
fcompl
jae
jge
ret
dec
js
loopne
adc
out
sub
pop
pop
mov
jnp
mov
andb
inc
add
pop
dec
repz
sti
int
mov
adc
fnsave
mov
pop
or
in
scas
or
dec
jle
aaa
sbb
adc
pop
fcmovne
and
movsb
in
stos
jle
and
cmc
rclb
jge
outsl
jmp
mov
sbb
mov
int3
cli
arpl
fisttps
jle
cld
xor
dec
pop
jecxz
and
mov
jnp
int
ds
lods
icebp
jae
out
les
aam
or
lcall
loope
aaa
mov
jp
cmp
rcrb
enter
add
pop
sub
imul
pop
push
sahf
dec
and
sub
in
testb
lock
in
push
pop
cld
andb
push
fucom
shll
xor
xchg
fldt
inc
and
sahf
mov
adc
mov
inc
sbb
pop
push
xlat
sbb
jnp
test
push
cwtl
cs
pop
jp
mov
lret
lcall
bound
je
jo
xor
subb
xor
sub
pushf
xor
sahf
mov
fisttpl
mov
jbe
jmp
jl
in
jnp
bound
enter
pop
flds
sub
inc
pop
stc
mov
push
sbb
xor
cmp
popa
jg
jno
push
and
bound
in
es
mov
xor
lahf
imul
pusha
mov
xchg
jbe
push
sbb
pop
nop
in
clc
dec
inc
test
or
popa
sbb
mov
sub
cmp
adc
sub
jle
sahf
pop
and
mov
xchg
test
and
popf
fbstp
fsts
push
cwtl
fcompl
cld
xchg
lea
cmp
mov
das
or
mov
dec
jmp
inc
mov
jmp
std
xor
inc
pop
sti
adc
inc
jns
pop
adc
and
xlat
jge
or
aaa
ds
les
ss
cmp
aas
jo
fistpl
and
jmp
sbb
repz
cltd
hlt
std
js
in
pop
jmp
mov
out
or
cs
aaa
fcompl
sti
cld
dec
and
outsb
sbb
sub
jecxz
dec
cmp
insb
ds
loope
loopne
mov
movb
pop
out
jbe
pop
inc
fistpll
imul
push
lahf
aaa
cld
loope
fistpl
push
ja
in
sbbb
loope
jne
shrl
sbb
ret
cltd
popa
mov
sti
stc
sub
data16
inc
mov
in
pop
popf
xchg
movsb
push
ss
das
shl
mov
sbb
inc
xlat
lock
sub
jno
rorb
in
loope
jle
mov
cmp
int3
jnp
jno
loope
jb
pop
cmpl
pusha
icebp
ljmp
movsb
ss
divl
pop
jp
daa
jecxz
mov
mov
push
sbb
jmp
in
arpl
add
ljmp
lcall
adc
lock
mov
out
jge
cs
mov
outsb
in
pop
fisubs
out
adc
and
inc
sub
lret
push
shr
sub
push
and
std
lahf
xor
sub
pop
or
cltd
rcrl
outsb
sbb
sbb
pop
xor
pop
adc
jl
pop
jmp
out
out
fnstcw
nop
cmp
pop
mov
pop
int3
loop
in
cmp
pop
mov
in
pop
jnp
fdivl
cmp
fistl
fwait
aad
movsl
stc
test
inc
popf
rcr
addl
jnp
xchg
mov
xor
push
imul
in
inc
xchg
xchg
cmp
add
test
mov
std
pushf
mov
sahf
aaa
cmp
jmp
jl
mov
mov
sub
jns
mov
xor
fisubrs
lret
into
jo
repz
adc
bound
sbb
inc
popf
idivb
rcrl
ss
jo
mov
mov
lea
mov
pusha
out
fsubr
sti
sbb
jb
dec
stos
xchg
xchg
out
dec
sbb
inc
loope
mov
mov
sbb
mov
cmpsl
bound
dec
cmp
mov
ja
and
dec
push
ja
stc
jne
insl
insl
xchg
xor
ret
pop
icebp
fs
adc
mulb
loopne
pop
je
mov
jle
aas
es
mov
sbb
push
movsl
xorl
js
int
arpl
bswap
xchg
dec
fistpl
aaa
adc
flds
hlt
stc
jg
fistpll
ds
inc
jge
xchg
lods
insb
mov
aaa
cmp
dec
out
imul
repnz
jb
add
cli
repz
insl
or
jbe
sahf
cld
or
jo
pop
jp
inc
jb
push
mov
sub
push
pushf
jae
jge
outsb
cs
push
aaa
les
in
mov
jo
sbb
mov
fs
inc
in
push
push
xor
inc
dec
xchg
push
fcomip
mov
cmp
rorl
ds
daa
jbe
xchg
push
hlt
pusha
mov
shl
mov
fnstsw
ja
std
js
jb
dec
pop
sub
jb
pop
iret
sub
popf
xchg
push
cmp
enter
mov
mov
inc
idivb
jbe
mov
mov
xchg
mov
pop
pop
xor
sub
cmp
lock
jne
sbb
mov
jecxz
stos
rcrl
and
mov
pop
inc
ja
popa
fldl
orb
lea
out
cs
mov
inc
div
fldenv
or
adc
lret
add
imul
es
outsb
xor
rorl
test
pop
sahf
mov
addb
dec
dec
bound
pop
mov
mov
jmp
dec
rcl
lret
push
lcall
sahf
insb
mov
cmpl
dec
sti
add
sub
jae
mov
ds
out
jo
sbb
addr16
mov
js
loop,pn
incl
jb
scas
pop
js
mov
imul
stos
add
push
push
outsl
cmp
fnstsw
cmp
lahf
sbb
push
xor
outsl
sub
in
clc
xor
xor
adc
or
jno
in
out
fisubrs
enter
adc
inc
and
test
adc
aam
jmp
ret
pop
jge
mov
jge
imul
movsl
pop
xor
push
mov
add
sub
out
or
je
sti
dec
jmp
cmpsb
inc
testb
fisubs
bound
jmp
scas
aam
jo
and
int3
inc
cmpsb
sbb
adc
push
lods
fwait
pop
sbb
dec
mov
jmp
mov
outsl
imul
pop
insl
sbb
rcll
adc
pop
pusha
decb
repnz
loopne
aam
mov
loopne
in
cmp
cmpsb
cltd
cmp
xchg
jp
lret
mov
or
xchg
scas
inc
and
inc
pop
sub
add
icebp
ljmp
cld
fsubrs
and
mov
push
std
mov
mov
push
fcompl
cmpsl
rorb
sbb
add
lcall
push
xchg
test
add
jbe
aaa
outsl
push
stc
xor
sbb
xor
fisubs
in
insl
fs
xchg
insl
test
out
data16
mov
cmp
sti
aaa
repnz
or
adc
fbld
add
pcmpeqb
and
jae
fwait
in
or
shrb
pop
xchg
outsb
pop
sub
fstps
mov
mov
mov
and
aaa
in
fadd
int
push
popa
pop
pop
stos
mov
stos
arpl
test
jnp
fldcw
aas
outsb
loop
jbe
dec
stos
pop
cs
pop
rcl
adc
pop
mov
popf
cwtl
sub
mov
lds
add
push
xchg
pop
fstpt
cmp
in
and
push
fisubs
push
in
int
adc
xlat
es
cld
sub
pop
fadds
shlb
cwtl
push
mov
loope
xchg
fstpt
shr
mov
mov
fistpl
xchg
cmovp
cli
xor
mov
mov
pop
mov
xchg
or
push
or
pop
mov
mov
cmp
cmp
mov
add
mov
pop
popa
sbb
sti
filds
mov
js
adc
in
sbb
and
and
sti
mov
cmp
jmp
popf
and
icebp
rcrl
loope
pop
xor
mov
aaa
pop
movsb
es
and
loope
aam
add
sarl
mov
and
gs
inc
rcrl
loope
xor
pushf
fldenv
xchg
mov
mov
movsb
pop
sub
fistpl
push
or
sub
adc
push
xor
bound
imul
roll
mov
int3
fstpt
cs
lcall
pop
stos
add
mov
cmp
mov
push
lock
push
adc
cmp
jb
push
mov
ljmp
icebp
cmp
sub
inc
pop
test
test
sbb
in
bound
mov
xor
push
outsb
notl
aas
and
mov
sbb
jo
jl
cmp
daa
movsl
jo
insb
int
mov
jbe
and
out
mov
sar
sub
rcrl
jp
inc
repz
xorl
nop
stc
and
pushf
sbb
nop
jbe
sbb
jmp
inc
ds
jge
mov
or
shr
int
lea
aas
and
mov
pop
insb
xchg
pop
add
aaa
mov
rcrl
nop
std
or
lret
mov
add
push
add
fwait
jo
jo
inc
je
movsb
and
ja
and
sbb
sub
imul
jne
outsb
lds
add
cltd
orl
outsb
fxch
and
xor
push
and
lods
aaa
icebp
pop
push
add
pop
dec
inc
test
adc
fndisi(8087
addr16
and
sub
mov
or
xlat
hlt
xor
mov
cmp
push
adc
jp
sbb
and
sub
inc
mov
inc
xchg
xor
loope
ret
push
test
mov
pusha
adc
sub
nop
setle
jg
or
aaa
aad
jl
add
cmc
rolb
je
or
fsts
mov
cmp
hlt
in
inc
pop
insl
jl
sbb
in
inc
aad
lds
das
int
in
mov
xchg
cmp
in
call
xor
scas
or
jne
notl
add
jb
aaa
out
mov
fisttpll
lds
push
mov
sub
dec
scas
push
cld
bound
mov
fidivrs
sbb
scas
mov
inc
dec
jno
stos
push
outsb
cmpsb
cmpsl
loop
int3
popf
and
mov
lea
decl
mov
jecxz
fisubrs
icebp
jo
mov
std
mov
push
xchg
vmwrite
push
xor
test
jmp
cli
cld
xchg
mov
in
stos
sahf
lcall
fs
mov
push
push
adc
pop
mov
cmp
push
inc
lret
scas
sahf
inc
jae
cmp
pop
cmpsl
cwtl
popl
call
std
leave
lcall
xchg
jle
outsl
leave
mov
sub
push
jmp
in
arpl
aam
pop
jo
push
mov
mov
popf
push
sbb
lods
cmc
iret
jp
mov
fsubl
mov
jne
inc
sahf
push
jge
jmp
dec
fnstsw
ljmp
cs
pop
or
pop
pop
dec
sbb
int
mov
imul
jbe
mov
insb
int
bound
rcrl
aaa
pop
push
sti
lret
cmc
jge
lfs
sar
add
mov
test
sub
cmpsb
xchg
mov
jp
adc
loopne
mov
aaa
lods
pop
test
sbb
cs
and
push
mov
aaa
cmp
jbe
int3
add
sub
bound
loop
pop
cmpl
cs
aad
mov
sbb
mov
inc
test
pop
cmpl
std
fnstcw
lret
das
std
add
lods
sub
stos
adc
bound
mov
mov
lods
arpl
xchg
mov
ljmp
cld
dec
rcrl
test
mov
sbb
dec
icebp
mov
add
xchg
jl
test
mov
icebp
xor
or
icebp
push
cmp
fisttps
jne
aaa
push
jbe
movsl
dec
shr
mov
sbb
ret
mov
and
add
cwtl
into
test
in
aaa
mov
xchg
mov
sub
call
scas
push
pop
sub
lock
xor
adc
addr16
clc
pop
loopne
in
inc
or
adc
std
rcl
sub
sbb
and
scas
mov
fbld
popf
xor
loope
inc
lea
fdivrs
add
sarb
lret
cmp
push
add
pop
sahf
mov
sbb
leave
xor
jl,pt
sub
nop
push
out
mov
pop
cmp
cmp
inc
cmp
mov
cmp
and
cmpsl
ss
xchg
ficompl
pushf
jp
arpl
jecxz
sbb
cmpsl
or
hlt
int3
test
cmp
sbb
xchg
jb
jmp
pop
cmp
and
out
pushf
fisubs
lret
sbb
in
lods
cmpsl
or
push
mov
jle
sbb
jo
insb
pop
adc
sbb
pop
repnz
push
dec
mov
inc
adc
push
out
sbb
rcrl
push
sbb
adc
mov
mov
test
pop
fchs
sbb
xlat
je
popa
arpl
es
ds
xor
jl
shll
jl
ss
ja
inc
xchg
jo
jle
xchg
xchg
cmp
aam
pop
add
push
mov
xor
sub
shl
pop
out
enter
pop
roll
test
icebp
add
mov
or
push
and
sbb
aad
add
adc
jnp
ds
jbe
fmul
pop
dec
xor
and
mov
lea
movsl
or
jge
adc
or
push
loopne
fnstcw
mov
xchg
lods
sbb
add
sbb
mov
dec
lcall
insb
xor
xchg
pop
jb
pusha
es
cmp
adc
cltd
xchg
jno
subb
js
adc
cld
pop
inc
mov
cmc
int3
adc
out
clc
outsb
cmp
jl
or
push
lcall
jae
pushl
fistl
outsb
out
xor
outsb
xor
mov
and
fdivrs
fwait
shr
xchg
cmp
loopne
sbb
adc
sub
inc
dec
cmp
roll
mov
rcrl
out
jle
repnz
lea
aam
inc
fisttps
cld
sbb
inc
dec
es
cli
push
popa
jmp
mov
clc
loopne
mov
sbb
stos
cmp
cltd
and
push
sahf
je
push
addl
aaa
ret
push
push
aad
aas
jp
jne
pcmpgtd
pop
adc
push
and
cmp
enter
mov
mov
rol
les
aad
es
push
icebp
daa
mov
cmp
bound
scas
sbb
sbb
adc
cmpsb
outsb
lret
rcrl
into
cmc
es
push
push
notb
stos
mov
mov
xor
pop
lea
lock
inc
sbb
adc
icebp
cmp
or
in
pop
adc
sbb
dec
pop
cld
lret
pop
pop
push
adc
aas
mov
inc
popa
mov
mov
push
popa
adc
mov
lods
xchg
pop
mov
mov
sub
and
fsub
sub
jne
int
push
dec
leave
cmpsl
mov
mov
lods
adc
cmp
adc
sbb
xor
sbb
pushf
inc
cmp
sbb
in
or
test
js
les
out
sahf
add
popf
xchg
cmpsb
inc
popf
jg
xchg
push
jg
fdivrl
jmp
sbb
shlb
push
std
sarb
std
cltd
xchg
jge
leave
je
jo
push
ror
xlat
int
out
push
aaa
push
arpl
fwait
and
es
jae
aam
xor
pop
dec
rcl
xchg
mov
insl
cmpsl
fsubl
push
and
sub
push
std
cltd
sub
jbe
leave
xor
mov
out
push
in
in
arpl
repz
mov
subl
dec
adc
mov
aad
mov
pop
jge
addr16
fnstcw
mov
sahf
dec
sub
in
add
jl
sbb
sbbb
addb
dec
mov
xor
lahf
cmp
sti
fsubr
adc
lock
or
jo
sbb
cmp
cmpsb
adcb
outsl
ja
les
fsubl
xchg
clc
ss
in
dec
and
pusha
inc
sti
jo
js
sub
pop
pop
xor
aam
insl
lahf
dec
imulb
loop
xor
mov
fdivr
and
push
daa
pop
fnstcw
fadds
push
lods
mov
xchg
repz
sub
xor
aam
inc
outsb
add
sarl
in
ret
dec
in
movsl
ljmp
cmpsb
imul
mov
jnp
sbbl
add
sub
or
add
mov
ret
popf
shrl
add
lea
loop
aaa
push
sbbb
ja
jnp
ja
addb
sub
mov
fmull
sub
pop
cmp
rorl
jns
pop
push
jmp
mov
frstor
out
ss
or
out
push
loopne
lahf
repnz
sbb
jmp
bound
loopne
repz
pop
add
loope
aam
push
int
push
and
cltd
int
inc
sarl
lea
outsb
je
mov
mov
jns
push
mov
jb
xor
push
cli
lahf
call
cmp
sti
jbe
stos
mov
sub
cli
pop
mov
stc
pop
fnsave
out
ss
pop
jmp
mov
outsl
stos
xchg
adc
lds
mov
pop
out
and
mov
pushf
pop
movsb
jnp
add
push
aam
cmp
cltd
lods
fstpt
or
pusha
cld
in
sub
sbb
fisttps
in
mov
jge
pop
jge
icebp
xor
sub
inc
mov
or
mov
int
aaa
rcll
xchg
pop
int
inc
stc
sbb
xchg
sahf
cltd
cmp
stc
jecxz
mov
sti
ret
sahf
push
ja
pop
inc
test
lea
es
enter
mov
cs
mov
add
pop
shrb
cmpb
push
mov
aad
jp
ficoml
sbb
insl
mov
jbe
cmp
jle
loop
xor
add
pop
repz
insl
aam
jnp
test
add
aad
aaa
jne
int3
sub
es
push
sahf
xor
xor
std
jnp
leave
fcompl
insl
dec
test
lock
adc
push
scas
mov
inc
xor
cmp
cltd
aaa
mov
in
bound
xor
fistps
add
in
push
sbb
pop
sbb
int
imul
pop
push
sbb
cltd
or
in
jno
test
in
lds
xchg
push
lahf
mov
popa
imul
xchg
insb
out
loop
sub
jbe
pushf
fwait
cmp
stc
cmp
bound
mov
popa
push
bound
pusha
xlat
js
outsb
pop
cmp
pop
stos
xor
add
pop
inc
in
mov
adc
dec
dec
adc
push
divl
adc
xor
inc
dec
icebp
test
jle
or
ja
cli
cwtl
jbe
or
sub
xchg
sbb
mov
jmp
unpckhps
sbb
sbb
fxch
add
xchg
xchg
inc
mov
mov
int
jnp
pop
in
in
iret
out
insl
or
sbb
ds
mov
movsb
in
divl
dec
scas
adc
mov
ret
pop
out
aaa
lcall
loop
jns
pushf
in
ss
cmp
fildll
mov
or
subl
jl
add
stos
mov
out
push
adc
xlat
dec
cmp
or
insb
addl
fldl
outsl
fs
cmp
mov
xchg
and
cmp
cmpsl
out
pusha
mov
aaa
int3
mov
or
mov
ds
jl
sbb
andl
xchg
mov
push
add
ss
in
aaa
pop
dec
jp
loopne
scas
movsl
jg
pop
or
faddp
sbb
add
in
mov
cmc
js
xchg
dec
jl
lods
cli
push
cmp
iret
push
lods
pop
sub
subl
testl
fisttpl
enter
sbb
in
and
cmp
shrl
in
aad
jmp
popa
rcrb
ss
inc
pop
and
xor
mov
and
addb
cmp
sub
adc
rcll
fstl
pop
sub
pop
jecxz
scas
mov
std
cli
xor
adc
push
ss
pop
mov
imul
aaa
loop
in
mov
fstps
xor
pop
adc
orb
jo
inc
ficoms
sbb
mov
mov
icebp
loope
loop
and
jl
nop
mov
push
add
das
cmc
loop
lock
mov
jbe
sarb
pop
pop
pop
or
mov
inc
pop
loope
cmp
mov
enter
add
pop
add
cwtl
mov
cmp
aaa
adc
push
cld
sahf
mov
imul
push
roll
xchg
sbb
daa
push
loopne
mov
jae
cmp
dec
dec
fmull
aaa
outsb
sbb
sub
outsb
lods
js
test
sbb
push
repnz
mov
push
es
leave
push
arpl
hlt
fnstenv
lret
sbb
je
outsb
add
push
lret
in
and
jbe
mov
jge
or
fstpl
or
sbb
imul
testl
sub
in
or
add
popf
jecxz
inc
inc
cmp
in
xchg
mov
mov
in
arpl
dec
fistpll
push
cld
int
jb
sbb
xor
push
scas
movsl
aam
xchg
jae
in
mov
mov
in
mov
xchg
outsb
out
pop
in
and
std
and
aaa
sti
repz
fdivr
std
adc
js
add
mov
hlt
xor
out
outsl
mov
leave
les
pusha
xchg
sbb
or
cltd
jae
push
imulb
jno
loopne
pop
mov
mov
orb
icebp
push
mov
push
mov
sub
and
ret
in
xor
ds
testb
add
fstl
sbb
jle
fbld
dec
xor
inc
push
pushf
push
shr
sub
add
insb
jp
xor
int3
fs
lret
imul
mov
xor
pop
jle
aaa
pop
lds
insb
arpl
outsb
mov
cmp
sbb
fdivp
mov
orl
push
test
in
loop,pn
cwtl
in
ljmp
insl
test
mov
adc
cwtl
xchg
and
int3
js
push
shlb
roll
icebp
stc
loopne
out
inc
iret
sbb
lods
inc
cmp
lock
and
sub
pop
ret
lods
cmp
jle
push
inc
sbb
push
loope
cmp
mov
dec
pusha
xchg
insb
mov
rep
aaa
out
pop
ficomps
adc
jp
dec
and
mov
call
sbb
cmp
daa
dec
cmp
jecxz
add
and
push
inc
lcall
jb
stos
and
aaa
lock
mov
popf
jbe
pop
pushf
jle
mov
mov
pop
adc
inc
mov
jmp
mov
loop
testb
pop
sar
jp
add
xlat
fucomip
and
cld
cwtl
outsb
scas
repz
adc
mov
loope
leave
call
out
shlb
mov
push
xor
jle
fs
sub
mov
jne
xor
mov
movsl
fs
stos
clc
cmp
jge
cmp
mov
and
sahf
inc
loope
arpl
pop
fmuls
sub
out
hlt
xchg
scas
cwtl
pop
aad
push
sbb
rorb
aaa
adc
pop
push
dec
jp
inc
icebp
popa
xchg
and
mov
fcomps
cmp
sub
cmp
cmp
in
xchg
add
dec
andb
push
test
or
push
stc
repz
out
sbb
sbb
sub
xor
pop
or
or
pop
dec
negl
fwait
mov
fdivs
imulb
sbb
mov
frstor
cmp
push
imul
sub
les
add
aaa
xchg
mov
adc
fldl
cs
and
leave
and
les
test
data16
in
inc
cs
adc
insb
pop
addr16
push
inc
or
lcall
int
mov
fisubrs
aam
pop
mov
fwait
enter
cmp
rcrl
jl
add
or
cld
or
add
pop
loopne
ret
mov
sti
aas
mov
cmp
pushf
jbe
es
mov
inc
jnp
ss
pusha
call
cmp
sarl
aaa
mov
pop
or
add
jl
aam
cmpb
xor
bnd
mov
xchg
pop
out
jle
jb
jb
push
and
mov
mov
mov
sub
addr16
lret
inc
pop
jmp
jp
add
into
dec
sbbb
sti
lcall
add
add
lea
mov
inc
in
jns
in
mov
lea
pop
pop
fcmovne
es
or
filds
sub
pushf
push
jle
add
ret
fistps
jg
add
push
and
and
mov
orb
ljmp
jl
aaa
cmp
push
adc
mov
or
adc
stos
push
int
xchg
cmp
mov
jo
in
icebp
cwtl
das
sar
adc
aam
dec
in
rcrb
std
mov
pop
xchg
cmp
adc
or
loope
adcb
or
mov
mov
outsb
data16
fldln2
push
mov
in
insl
lea
and
cli
jnp
mov
xchg
xchg
je
mov
mov
ret
jle
dec
inc
jb
mov
push
cwtl
jb
xor
out
pop
adc
jae
or
pop
dec
fmull
sbb
mov
push
add
std
sbb
pop
sti
add
sbb
rcrl
fst
push
int3
or
cmp
inc
mov
xchg
or
cld
imul
pop
or
ja
xor
lret
and
aas
xchg
or
hlt
outsb
jmp
xor
cmp
int3
std
popf
jno
fdivl
push
mov
and
inc
mov
pop
mov
repnz
pusha
loope
xchg
pop
lock
aaa
icebp
test
stos
bound
icebp
mov
andb
das
dec
sbb
jbe
mov
push
fs
sub
add
pop
enter
ss
sbb
pop
sub
lea
es
cld
das
lods
imulb
mov
xor
dec
aam
mov
mov
adc
in
popf
arpl
jo
add
push
push
push
std
jbe
sbb
pop
aaa
fsubr
jle
dec
nop
ja
jecxz
loope
pop
adc
lcall
or
dec
pusha
dec
inc
jmp
mov
aas
div
ficomps
jge
jne
filds
repnz
lret
popf
pop
shlb
inc
ljmp
pop
pop
mov
mov
pop
cmp
je
push
sbb
in
mov
or
mov
adc
cmp
in
std
jg
add
push
ja
in
mov
aaa
in
ja
pop
insb
call
cmpsl
pop
mov
cwtl
pop
mov
cli
sub
jmp
fnsave
movsl
pop
int3
jns
lea
clc
or
inc
inc
jns
aaa
mov
sahf
fmull
sbb
xchg
add
sahf
dec
fbld
ja
dec
pushf
sub
dec
data16
dec
dec
aad
dec
xor
sub
inc
inc
aam
xorb
es
pop
stos
cld
push
rorl
sbb
clc
outsb
jns
sbb
les
inc
pusha
sbb
jbe
enter
jo
push
in
mov
inc
cmp
and
mov
cmpsl
enter
inc
sbb
mov
xchg
cmp
xchg
inc
sti
pop
cmpsl
jl
sbb
pop
test
aaa
rcr
inc
dec
mov
or
rcl
test
aaa
xchg
out
fistpll
dec
or
int3
jle
xchg
lret
repz
in
aaa
cwtl
and
xor
decl
pop
int3
std
test
mov
test
jae,pt
mov
add
std
outsb
jo
aaa
mov
push
pop
movsl
sub
add
pop
xor
shlb
adc
outsb
cwtl
adc
leave
cld
dec
cltd
shlb
insl
xchg
or
inc
fwait
and
fnstcw
lret
dec
pusha
push
rolb
popa
ss
lahf
mov
sbb
fdivrs
and
aaa
mov
pusha
fnstcw
les
ret
sti
and
mov
or
pop
nop
and
frstor
rorl
mov
mov
test
lock
stos
cmp
mov
pushf
or
xchg
sub
adc
xor
dec
mov
or
scas
pop
dec
aad
or
scas
push
stos
pop
sub
stc
pop
nop
jb
movsl
dec
and
out
mov
and
popa
aaa
push
inc
adc
adc
push
push
jl
and
mov
arpl
stc
loope
and
xor
adc
into
dec
cltd
cmp
ss
sbb
add
inc
aam
push
cltd
adc
push
xlat
sbb
ss
adc
rol
sahf
push
jecxz
mov
jbe
sbb
push
adc
aas
mov
loope,pt
lret
xchg
ret
sbb
or
je
mov
mov
jle
push
pop
aad
sbb
pop
sbb
clc
cmp
pop
fwait
inc
shlb
mov
stc
pushf
sbb
pop
cmp
cmpsl
pop
sbb
loopne
xor
lcall
fsubrl
and
inc
pop
jb
out
push
mov
xor
mov
stc
ds
dec
add
sbb
das
push
mov
fistps
cs
dec
imul
push
lds
call
mov
mov
dec
faddl
imul
in
xor
or
aad
pushf
fnstcw
add
mov
shll
and
xchg
xor
cs
lret
mov
in
cwtl
jo
jg
das
movsb
fcmovnb
and
popa
pop
adc
icebp
inc
nop
ja
int3
out
cmpsb
push
aad
andb
les
cmp
int3
jp
pop
or
push
cmp
scas
inc
lret
sbb
imul
add
dec
pushf
or
pop
aas
push
xor
add
lods
jnp
and
inc
and
push
jge
push
test
dec
xchg
clc
imul
sub
popf
push
aaa
lret
inc
add
cmp
aad
pop
cld
cmc
jle
mov
pop
xchg
jmp
sub
adc
fnsave
cmp
xchg
adc
aaa
jne
ret
xor
cwtl
sbb
decb
out
xor
sti
inc
inc
nop
mov
sbb
dec
mov
mov
inc
test
lret
jbe
sti
lea
repz
adc
jl
cmp
insl
push
std
or
push
dec
add
loope
ss
and
shrb
jle
ljmp
pop
cmpb
test
fstps
cmp
das
shlb
and
inc
and
das
pop
pop
sub
xchg
outsl
cwtl
idivl
in
xor
and
jp
pop
mov
in
push
xor
mov
out
dec
jle
xor
xchg
in
mov
leave
inc
sub
aaa
adc
mov
aad
in
sbbl
in
in
sbb
xor
sahf
sahf
ss
xchg
jne
add
mov
shl
ljmp
lret
xchg
mov
pushf
es
daa
cmp
ss
mov
lods
add
insb
jecxz
cmp
pop
jp
push
xor
ret
mov
xlat
cmpsb
mov
aaa
jae
add
shrl
idivl
daa
repnz
push
cld
push
or
sbb
xchg
xor
sbb
mulb
pop
repz
sub
pop
dec
repnz
bound
ret
jg
pop
nop
clc
inc
ss
mov
adc
fdivrl
cs
sti
iret
jp
sbb
push
fwait
sub
push
stos
mov
loope
xchg
push
add
jb
mov
rcrb
xchg
loop
sbb
sbb
mov
cli
sub
or
hlt
repnz
mov
inc
and
pop
push
and
dec
out
stos
test
and
ds
scas
add
rcrl
cltd
pop
mov
stos
push
push
xchg
mov
daa
and
jp
fstp
fdivrl
lret
sub
inc
sub
jno
cltd
or
adc
pop
testb
pop
stc
aaa
push
loop
aam
xchg
adc
pop
pop
aad
cltd
int
dec
cmp
jl
test
mov
test
stc
xchg
sbb
mov
outsl
int
mov
push
fcoms
mov
add
add
aad
mov
es
lock
inc
aaa
push
arpl
mov
xchg
rorl
outsb
pop
fisubl
out
sbb
ss
stos
cli
repz
xor
dec
movsl
cltd
ss
lcall
sbb
movsl
lods
call
mov
add
test
push
cmp
inc
test
pop
fcomi
dec
push
dec
rorl
sbbb
xchg
inc
push
gs
cmp
outsb
sub
aam
loop
add
out
stos
jb
pop
push
mov
insl
rcr
cmc
and
sbb
nop
int
xchg
cmp
flds
add
mov
inc
std
movsl
pop
es
aad
ficoms
jle
cwtl
dec
and
loope
adc
orl
out
pop
arpl
fneni(8087
mov
movsl
xchg
aaa
stc
xor
shlb
push
pop
insb
sahf
cmp
or
cmp
loope
cmp
into
jecxz
iret
push
pop
inc
cmc
add
push
insb
sub
push
cmp
ds
sub
xchg
lea
movsl
lods
push
js
invd
pop
inc
xor
jecxz
sbb
xlat
push
inc
sahf
sti
add
xchg
loopne
mov
sub
pop
mov
add
cld
inc
mov
frstor
mov
repz
fistpl
ljmp
push
loopne
addr16
roll
adc
jp
mov
mov
pop
cmp
ret
adcb
xchg
cltd
icebp
pop
fwait
push
negl
fsubl
ds
pop
mov
daa
dec
das
test
jae
push
scas
lahf
mov
into
popa
test
fidivrs
fstl
xchg
sub
mov
icebp
mov
lods
jae
lret
fwait
out
jne
shll
inc
jge
or
arpl
aaa
mov
mov
lock
mov
insl
mov
or
or
pusha
dec
aaa
outsw
mov
shll
mov
outsb
mov
cmp
lds
data16
or
sub
and
mov
outsl
mov
bound
xor
inc
fbld
mov
mov
pop
push
imul
out
adc
mov
xchg
mov
and
and
add
js
mov
cli
sbbl
dec
les
sub
xor
inc
cmc
js
jnp
pop
add
data16
stc
push
iret
mov
pop
int
or
loop
stos
jg
mov
and
cmp
push
scas
mov
scas
pop
add
inc
dec
sub
and
mov
mov
mov
loopne
inc
popa
or
sub
sub
pop
aam
repz
fwait
pop
data16
or
gs
add
jno
push
testb
pop
aad
dec
jo
jae
sti
push
xor
xchg
mov
call
gs
sbb
pop
mov
jle
leave
cltd
stos
or
loope,pn
rcrl
add
or
cmp
pop
dec
pop
fnsave
push
js
mov
lods
or
sub
push
jp
sbbl
jg
push
in
and
ret
int
xchg
cmpsb
xchg
sarb
in
repnz
les
outsl
aam
mov
add
lret
int
add
jg
jg
push
lods
pop
push
idivl
cli
mov
mov
pusha
lods
mov
jp,pn
in
bnd
jge
imul
inc
sbb
lret
je
fisubrs
popf
xchg
push
dec
push
test
pop
pushf
rcrl
imul
dec
push
mov
sub
mov
filds
sub
push
aaa
sbb
clc
mov
pusha
xor
xchg
mov
imul
push
test
mov
ret
and
jp
int
push
sbb
icebp
and
mov
sbb
imul
out
or
push
xor
stos
push
lea
inc
mov
xlat
cmp
mov
xchg
aad
and
pop
and
adcb
js
inc
sbb
and
push
xchg
leave
cmpb
mov
pop
sbb
sub
adc
shll
out
jae
test
lds
subps
inc
aad
je
sar
jl
cmp
sub
jbe
cs
test
push
mul
or
mov
jle
and
nop
add
mov
cli
add
in
mov
xchg
imul
outsb
jne
jle
cmp
imul
mov
jbe
sbb
inc
inc
mov
adc
insb
cmp
outsl
out
stc
and
push
outsl
je
pop
loopne
ss
jmp
and
jmp
pushf
test
and
jnp
cli
adc
push
dec
fdivs
pop
loop
shll
outsb
mov
and
inc
pop
pop
lea
jbe
inc
pushf
out
flds
int
mov
mov
fs
stos
sbb
inc
test
pushf
sbb
pop
push
fsubs
arpl
negb
ficomps
jl
jbe
insl
cmc
push
xchg
pop
clc
pop
xor
je
int3
cld
int
jg
in
pop
pop
aad
push
adc
xchg
loope
inc
ret
sti
rol
add
mov
fbld
test
pop
in
cmp
mov
test
ret
mov
cmc
mov
and
lods
jge
push
fdivr
aaa
cmp
push
leave
movsl
sbb
aaa
jmp
movb
or
sub
dec
jns
xchg
sbb
mov
adc
push
aam
push
stc
test
mov
cmp
addr16
jae
aaa
mov
sub
and
rcrl
inc
pop
inc
test
mov
nop
sub
out
jnp
fwait
add
jbe
dec
mov
sub
and
mov
repnz
movsl
mov
pop
mov
cmpsb
lods
or
mov
jmp
nop
xchg
and
lahf
sub
cmpb
cld
pop
repz
fdivs
xchg
leave
xorb
inc
push
arpl
and
cmc
popf
cmp
and
sbb
push
mov
add
mov
sar
inc
repz
mov
imul
push
fldenv
or
repz
sti
add
outsl
push
stos
std
jo
test
pop
mov
inc
loope
xor
data16
sarb
ss
sbb
outsb
sub
out
mov
in
sub
sbb
adc
fdivs
dec
sub
mov
jle
pop
push
repnz
sahf
jmp
sbb
es
ds
stos
add
popf
daa
sub
sbb
sbb
push
push
mov
push
in
lds
das
aam
cmpsl
ss
outsl
fisubl
cmp
pop
push
jnp
mov
out
dec
test
jbe
fstps
fstpl
sbb
and
dec
lret
arpl
shlb
lea
sub
cmp
int3
pop
inc
adc
fistpl
int3
add
orl
sub
in
dec
filds
cwtl
cmc
mov
inc
cmp
sbb
mov
andb
inc
adc
mov
mov
pop
jns
ficompl
bound
pop
inc
shrb
and
sub
and
mov
jmp
stos
jbe
or
call
scas
mull
fdivrl
sub
sbb
dec
mov
inc
outsb
movsl
shl
rcr
inc
lret
sbb
pop
lea
lret
jl
pop
add
pop
pusha
ret
nop
jno
push
aas
pop
stos
arpl
icebp
nop
lahf
add
cmp
lock
rcl
pop
fnstenv
cmpsb
push
pop
enter
add
inc
jbe
add
loop
xchg
jnp
outsb
inc
pop
or
leave
ds
ret
sbb
movsl
jl
push
ficomps
and
ds
xchg
fwait
add
and
std
lods
loop
push
xchg
addl
adc
lea
cmp
sarb
and
mov
loope
push
and
jb
and
pop
mov
inc
mov
and
int3
push
imul
xchg
pop
inc
jae
inc
jb
lods
mov
outsb
xchg
test
lahf
jl
subb
dec
arpl
into
outsl
xor
out
xlat
lods
in
ds
in
aaa
outsb
cli
js
add
imul
xor
lea
lret
je
pop
std
dec
rorb
fstpl
fwait
in
sbb
outsl
ljmp
sti
mov
out
and
int3
hlt
jecxz
cltd
cmp
loope
and
jmp
adc
mov
push
lods
popa
pop
sub
jmp
add
inc
flds
jp
sbb
mov
cmc
push
test
xchg
push
mov
repnz
pop
cmp
add
outsb
sbb
mov
and
lret
jnp
mov
orl
sarl
xlat
mov
hlt
shr
in
pusha
xor
in
mov
outsb
outsl
mov
push
aaa
mov
pusha
cmpsl
icebp
jns
sbb
arpl
push
je
xorb
fisubl
jnp
mov
dec
pop
push
sti
dec
test
xchg
ficoms
prefetchwt1
lcall
hlt
sarl
shrl
and
rcrl
aaa
inc
lods
adc
and
outsb
enter
mov
outsl
mov
outsl
pusha
add
xor
icebp
loopne
jg
mov
imul
pushf
sub
cli
pushf
mov
popf
ljmp
cwtl
insl
addr16
pop
aaa
mov
add
jp
dec
inc
inc
pop
icebp
jns
sbb
ss
push
and
and
push
pop
imul
sbb
pop
sti
sbb
cs
pop
cmp
rclb
and
pop
mov
xor
inc
fidivrs
aaa
mov
push
and
insl
add
lock
lret
xorb
out
outsb
jb
adc
pop
out
jl
dec
lock
fisubl
sub
inc
into
add
push
ds
mov
popa
cmp
imul
int
sbb
mov
mov
mov
inc
push
aas
pop
stos
push
and
iret
dec
pop
shl
add
in
or
jo
sti
lret
lret
rep
sub
out
testl
movsl
loopne
outsl
add
xor
lods
xorb
sti
and
lods
mov
sarb
sbb
mov
inc
lods
pop
std
cwtl
js
insl
xor
dec
mov
sub
pop
xor
out
bound
xchg
and
cmpsb
enterw
hlt
jo
sbb
mov
and
stos
nop
adc
jne
xchg
jmp
aam
adc
dec
aaa
fldcw
into
mov
cltd
jg
or
lahf
and
lret
addb
and
stc
inc
testl
lahf
jnp
pop
or
push
pop
sbb
adc
push
jecxz
in
mov
pop
in
jg
pop
push
dec
fcomi
xlat
dec
test
inc
jp
leave
std
repz
jb
shll
dec
out
cmc
jo
mov
je
repz
sbb
lods
aam
jmp
sarb
cmpsb
sub
cwtd
andb
pop
and
xchg
pusha
popf
xor
loope
xchg
inc
xchg
add
div
pop
fsts
jbe
inc
fsubl
movsl
aaa
rcr
decl
mov
mov
js
mov
sub
pop
push
in
mov
in
rorl
mov
xchg
test
imul
cmp
pop
xor
pop
dec
fstp
in
test
shll
iret
push
xchg
xor
or
push
aaa
dec
rorl
push
mov
sbb
cmpsl
cmp
sbb
rcl
mov
and
adc
sbb
insl
push
jae
pop
inc
sbb
push
xorb
jb
push
push
push
add
repnz
mov
ficoms
scas
pop
add
dec
fdivl
int3
mov
std
cmp
imul
es
outsb
outsb
mov
cmpsb
mov
fsubrl
aam
cli
jo
fisttpll
aad
or
lret
xchg
cmpb
jmp
pop
inc
add
les
les
and
les
into
and
jb
aaa
out
cs
inc
aaa
cmp
lock
sti
jns
sbb
or
lret
sbb
pop
pop
jae
push
lock
or
dec
cmp
mov
xor
lods
fxch
cmp
push
sti
in
lcall
xchg
cmpsb
mov
or
arpl
mov
pop
pop
cltd
ret
jae
imul
dec
cmp
inc
aas
inc
mov
dec
jne
pop
cmpb
adc
in
mov
jp
les
or
ret
adc
pop
pop
xlat
ljmp
aad
cmc
test
adc
into
divl
aaa
jp
push
lret
out
ss
jo
xor
pushf
ljmp
in
test
mov
push
jecxz
into
enter
pop
sarb
xchg
jns
out
add
jl
das
sti
jecxz
sti
ss
adc
insl
sbb
je
pusha
cld
shll
jb
sub
loop
sub
inc
rolb
repz
lods
mov
add
js
push
inc
or
jne
clc
pop
push
mov
insb
or
lds
sbbl
mov
lock
mov
imul
pop
cmpsl
mov
adc
ficomps
dec
sbb
jle
jg
leave
fcompl
pop
aaa
sub
rcrl
adc
pop
jg
sti
jmp
pushf
mov
jmp
adc
jmp
insl
jno
stos
dec
imul
lock
fstps
flds
sbb
loop
lods
int3
popa
sub
pop
out
fldl
cmp
fwait
mov
pop
inc
in
std
imul
sub
pop
inc
jle
bnd
pop
lods
dec
sti
xchg
and
insb
pop
nop
adc
jae
lret
mov
jbe
lret
lret
dec
push
xchg
out
xor
mov
call
mov
clc
jp
hlt
ret
lods
and
sti
jb
call
std
stos
pop
xchg
insb
sub
lea
enter
imulb
and
pop
testb
dec
push
push
stos
xor
pop
int3
push
cli
gs
das
in
inc
or
in
and
js
cltd
or
mov
mov
test
sbb
icebp
push
loopne
std
and
sti
dec
add
mov
cmp
xchg
xlat
popf
es
mov
mov
test
aam
inc
or
cld
push
lods
rclb
mov
loopne
cld
in
aas
ss
mov
push
popf
pop
push
iret
add
inc
je
xchg
sti
jnp
inc
cmp
mov
add
adc
dec
mov
popf
popf
std
popf
popf
aaa
js
in
ror
daa
icebp
cmp
mov
sbb
and
mov
in
jl
lea
jle
sub
dec
in
ss
xorl
xor
and
pop
negb
jg
fcmovnb
push
push
aaa
jmp
mov
test
lcall
in
andb
lea
xchg
ds
xchg
dec
xchg
imul
xchg
test
cmp
push
sub
insl
sbbb
inc
lea
daa
mov
std
jne
movsb
ror
jl
ss
sarb
pop
sti
mov
pop
sbb
mov
jge
outsb
out
add
jb
aad
cmpsl
push
rolb
fildl
jo
repz
and
mov
aad
insl
int
dec
ficoml
cmpsl
les
stos
jo
mov
mov
cmp
test
and
jle
cs
dec
jnp
scas
je
sti
aaa
outsb
pop
in
xchg
sbb
xor
cmp
fsub
lock
sub
stos
cmp
add
xchg
cmp
jge
sahf
push
pop
mov
js
faddl
cmp
leave
popf
negl
stos
push
movl
test
arpl
rorl
pop
fcompl
pop
inc
loopne
lds
nop
outsb
rcrl
or
adc
pop
pop
roll
or
pop
data16
in
xorb
shrb
or
dec
dec
out
add
add
fdivl
jae
repnz
sbb
stos
cmpsl
push
pop
or
mov
push
pop
sbb
adc
mov
test
jp
cwtl
popa
add
pop
aas
add
mov
mov
bound
xchg
popa
pop
in
pop
testb
test
xor
mov
pop
xor
jb
aaa
mov
js
push
inc
pop
test
sub
pop
sub
mov
adc
sub
int
and
sub
aas
xchg
jl
jne
sahf
xchg
sub
lea
aaa
pusha
pop
int
lahf
xlat
pop
push
mov
add
sbb
jl
stc
pushf
pop
or
test
les
sbb
xor
mov
xor
sbb
dec
mov
xchg
inc
lret
in
popa
or
pop
in
icebp
dec
cmp
xor
jnp
cmp
sub
lods
popa
and
or
sub
mov
sbb
es
lret
jae
mov
pushf
inc
data16
out
icebp
or
ds
int3
jp
in
mov
jo
icebp
xchg
xchg
jne
pop
inc
fcmovnb
and
test
xor
jl
jmp
out
mov
add
insb
mov
nop
mov
shll
loope
loop
aad
call
sbb
or
and
xchg
pop
push
int
xchg
add
fwait
imul
shll
mov
adc
fstpl
and
ss
xlat
push
loopne
orb
in
repz
ret
jb
adc
mov
or
mov
xchg
jmp
fstpt
int
incb
lods
cld
lahf
xorb
xchg
cmp
mov
lret
insb
pop
ror
test
call
push
add
ficomps
dec
mov
push
xor
push
jno
fstpl
divl
insb
outsb
xor
lds
aaa
and
loope
movsl
jg
jl
mov
mov
rcrl
jb
fimull
dec
or
aam
dec
add
insl
movsl
pop
mov
fstpt
rolb
dec
int3
pusha
shll
sub
inc
pop
dec
icebp
std
dec
aaa
faddl
pop
inc
jg
cs
inc
cmpb
sub
fisttpl
mov
lret
xchg
adc
dec
pop
xor
mov
push
sbb
std
dec
adc
and
imul
jmp
sahf
mov
rcll
imul
popf
pop
push
cmp
inc
clc
ret
xchg
clc
fnstsw
mov
or
jge
clc
sub
fcoms
add
sarl
sub
loope
jbe
lahf
arpl
push
sbb
mov
ds
fwait
bound
popa
pop
jnp
sbb
mov
sub
xchg
cmp
mov
lods
pop
dec
add
lret
popa
inc
lcall
ss
or
mov
stos
pop
repnz
fdiv
pop
bound
fiaddl
pop
inc
ljmp
xchg
xor
inc
lret
lret
repz
sub
daa
out
in
and
lods
popa
mov
dec
and
pop
cmp
sub
fisubs
rorb
cmp
inc
xchg
pop
sub
adc
pop
and
shll
add
std
push
test
xor
adc
loopne
arpl
cmp
sbb
fimuls
imul
in
int
int
stc
lret
testb
insb
add
sar
clc
mov
sbb
mov
and
xchg
es
test
inc
inc
pop
adc
pop
xorb
cmp
jmp
and
outsb
cs
test
fucom
add
fadds
mov
ret
fs
pushf
cmp
mov
mov
in
aaa
dec
fstps
rcll
arpl
adc
rcll
lcall
sbb
jns
mov
aam
mov
out
adc
dec
ja
insl
push
subb
inc
push
andl
pop
dec
sbb
out
cwtl
clc
xchg
jmp
jl
mov
fwait
sbb
xchg
mov
outsl
lock
int3
pop
jmp
std
mov
les
roll
sarl
dec
and
xchg
hlt
ret
addr16
cli
imul
ficoms
mov
pop
push
inc
push
adc
cmp
imul
or
in
adc
stos
int3
sbb
jle
sbb
insl
cmp
push
ss
shl
inc
mov
imul
sti
lahf
mov
ss
pop
and
ja
bound
dec
pop
popa
mov
in
sbb
fnstcw
pop
lcall
in
pusha
cmp
pop
push
das
shlb
test
jnp
xor
out
jle
adc
aaa
add
mov
push
repnz
inc
jmp
jnp
adc
popf
into
xlat
pop
mov
cmp
outsb
je
jle
sahf
cmp
sbb
add
aam
insb
je
and
int
fs
in
movsl
dec
add
mov
push
ds
or
fdivrs
je
mov
aaa
lret
jecxz
imul
xor
fmull
int
and
test
pop
hlt
sub
adcl
push
loope
inc
hlt
dec
mov
sbb
adc
aaa
sub
stc
leave
call
inc
stos
pop
shll
cmpsl
dec
inc
dec
mov
xchg
jle
push
jne
or
sbb
jns
ds
sarb
cmp
lds
push
lret
in
mov
dec
cmc
cmp
xor
xor
aaa
push
adc
xchg
fistpl
out
lods
fsub
pop
frstor
aam
adc
les
and
icebp
and
and
loope
sahf
mov
lret
js
pop
jno
in
and
mov
insb
sub
jb
adc
cs
bound
jnp
test
aaa
lods
add
out
ret
outsb
sbb
push
or
pop
cmpsb
mov
movsl
enter
or
in
outsb
or
jno
jmp
pop
jmp
mov
imul
xchg
aam
push
fidivrs
fisttps
mov
cmp
push
xor
ljmp
push
adc
aaa
test
cmp
adc
aad
mov
add
fcoml
cs
xor
dec
shll
mov
pop
xlat
xchg
in
mov
jno
lcall
lock
mov
sbb
imul
xchg
pop
lods
insl
sub
mov
in
xchg
sti
outsb
pop
mov
jo
js
jl
dec
push
out
call
add
mov
movsl
jmp
xchg
adc
out
xor
mov
ret
pop
movsl
fnstenv
mov
lea
cmp
aas
cmp
jno
loopne
push
xchg
and
cmp
mov
jne
mov
xchg
ret
dec
gs
fwait
jbe
push
xor
das
xchg
pop
cltd
cmc
aaa
mov
sbb
cltd
pop
mov
xor
add
fisttpl
outsb
cld
sbb
out
mov
dec
mov
cmp
or
add
jge
xchg
das
in
mov
mov
cmp
not
bound
xor
push
clc
into
jne
pop
loop
ficoml
jmp
outsb
std
test
pop
pop
hlt
push
repz
or
inc
inc
sbb
sarb
sti
and
jbe
cmp
fisttpl
leave
push
sub
les
bound
pop
out
dec
es
jb
and
out
add
cld
adc
stc
cli
mov
sarb
loopne
cmp
inc
adc
stos
js
ret
pop
icebp
addl
repz
int
mov
pop
push
fwait
ret
mov
fs
mov
push
cld
jp
dec
xchg
pop
add
or
mov
pop
pop
and
aaa
out
push
jmp
call
mov
shl
mov
cwtl
movsb
inc
pop
out
imul
aaa
fs
es
aaa
xchg
pop
lret
adcb
fs
pop
lea
ficoms
jle
popf
movsl
pusha
in
push
xor
add
loope
sti
in
mov
xor
jne
pop
jg
mov
adc
inc
cmp
outsb
inc
dec
fadds
loop
jns
insl
pop
xor
lret
bound
jle
icebp
sbb
daa
or
mov
adc
xor
jle
out
ds
sbbl
push
xchg
jl
hlt
imulb
out
push
and
xchg
lahf
insb
jb
insb
adcl
mov
mov
pop
loopne
incb
xchg
and
add
rcl
insl
jle
and
or
mov
mov
pop
out
or
out
dec
aas
es
xchg
outsb
add
mov
mov
cs
xchg
push
dec
out
lods
mov
aas
mov
es
inc
add
cmc
adc
mov
pop
cmp
pop
adc
pop
roll
push
cwtl
and
push
jb
dec
pop
mov
pop
jns
ds
sub
sahf
mov
bound
mov
sbb
push
inc
inc
xchg
ss
and
test
add
dec
adc
repz
adc
mov
xor
movsl
dec
pop
pop
mov
xor
rcrb
sti
add
add
lock
arpl
fists
jp
fnstcw
jnp
mov
fcompl
mov
pop
pop
int3
lahf
int3
dec
cmp
scas
mov
jae
xor
mov
stos
adc
pop
mov
adc
and
jecxz
movsb
xchg
sbb
fistps
rcrb
mov
xor
sub
pop
push
mov
xlat
xchg
jp
in
cmp
sarb
pop
in
push
in
icebp
jl
and
mov
and
fs
fisubrl
popf
adc
aaa
push
cwtl
mov
mov
xchg
call
mov
popa
inc
cmp
add
sti
jno
ret
mov
pop
sub
fwait
sbb
scas
mov
xchg
sub
nop
punpckhdq
xor
lds
jne
es
mov
fwait
std
in
cmpsl
rcrl
std
xchg
loope
leave
hlt
pop
dec
aam
outsl
dec
inc
clc
sub
cwtl
mov
cmpsb
hlt
lret
sbb
xchg
imul
lahf
mov
jne
in
test
call
inc
add
dec
sbb
push
inc
inc
jno
sbb
pop
out
xchg
loop
leave
mov
adc
outsl
push
mov
out
sbb
aaa
push
add
dec
add
push
fdivrl
push
cmp
loope
adc
inc
pop
add
mov
lahf
or
jbe
adc
mov
inc
mov
sbb
cmp
sub
or
movsl
dec
aaa
lods
inc
stos
ss
jno
lcall
mov
rolb
xchg
ja
sarl
pop
push
push
arpl
sub
mov
in
push
lds
bound
pop
inc
cs
out
lock
jle
pop
inc
dec
dec
int3
sub
jo
fwait
hlt
pop
scas
fstps
out
in
loope
inc
daa
push
pushf
mov
jecxz
lock
or
mov
jg
ss
cmp
mov
mov
mov
jo
sub
mov
out
std
inc
insb
or
pop
repnz
adc
stc
sub
jae
fstps
add
ss
int
inc
daa
inc
pop
shrb
jge
push
in
mov
nop
jnp
mov
mov
pop
add
aad
mov
leave
aaa
or
mov
pop
std
clc
nop
leave
outsb
cmp
xchg
testl
ds
shlb
and
loope,pn
xor
popa
xchg
push
arpl
fldcw
pop
cltd
clc
mov
sbb
jg
in
fwait
shrl
jmp
fbld
inc
sub
jno
stc
xor
sbb
shl
adc
or
fldt
cs
roll
dec
mov
out
lea
mov
ds
dec
sbb
cmp
cmp
jnp
cmc
subb
das
push
out
inc
inc
add
rolb
jp
cli
inc
xor
sbb
jp
sbb
pop
jg
ror
or
adc
popw
adc
xchg
les
out
mov
xchg
sub
cwtl
fnsetpm(287
inc
pop
inc
adc
addl
mov
xorb
outsb
push
push
jbe
cmp
pop
ret
mov
test
out
int
sub
pop
fnstenv
enter
repz
fs
hlt
int
cwtl
mov
out
repz
enter
pop
outsb
sbb
jmp
mov
int
int3
dec
in
sti
cltd
pop
in
mov
adc
xchg
adc
pop
mov
jge
push
pop
jo
gs
pusha
js
popl
mov
repnz
push
fwait
xor
sahf
fists
sbb
roll
lret
movsb
push
cmp
push
dec
lret
and
out
inc
push
push
int3
out
push
in
adc
ficoms
ja
cmp
sarl
aam
mov
push
jbe
or
sub
outsb
loopne
mov
pop
std
push
ret
outsb
outsb
call
ffreep
jecxz
outsl
fldt
pop
and
stos
aad
jns
aas
mov
ljmp
push
ljmp
mov
adc
arpl
xchg
jmp
cmp
mov
fistl
sti
outsw
xchg
or
cmp
jg
sti
pusha
xor
sbb
push
jo
fmul
nop
mov
mov
and
aas
outsl
xchg
ds
jb
adc
or
fcmovbe
mov
xor
fcomi
adc
jp
iret
jg
sub
push
popf
loope
movsl
ret
cwtl
adc
pop
xchg
aas
push
and
imul
test
imul
add
mov
xchg
enter
inc
or
push
lods
jl
dec
sbb
pop
pop
jp
js
pop
mov
cli
pop
movsb
fidivrs
and
nop
pop
pop
jns
mov
jmp
push
push
mov
mov
add
jle
ret
sub
push
pop
push
int3
aaa
jmp
add
or
movsb
adc
jo
rcll
aaa
and
inc
loopne
sahf
sbb
xor
jbe
fs
xor
xor
in
addr16
shr
sub
jmp
xor
jne
or
into
clc
into
jmp
push
aaa
add
daa
cs
cmp
loopne
int3
adc
in
gs
jo
repz
and
pusha
add
fs
inc
out
xor
xchg
adc
mov
sbb
aam
jo
cmpsl
repnz
pop
call
cli
outsl
loop
mov
mov
xor
test
add
rorl
inc
adc
mov
icebp
xor
xorb
add
adc
sbb
shl
insl
mov
jo
or
xchg
repz
in
stos
rolb
sti
ret
mov
pop
in
mov
jbe
xor
sbb
jo
bound
sbb
sbb
pop
outsb
sbb
sub
aam
push
ss
ret
inc
les
in
add
test
je
jl
adc
pop
fsts
imul
shrb
mov
divl
ja
jb
popa
mov
pop
outsb
sbb
loopne
inc
rcll
repz
aam
insl
sub
sbb
aam
std
pusha
cs
jle
mov
js
xor
jg
inc
jmp
push
sbb
in
in
arpl
aaa
xor
xor
scas
inc
pop
cmc
or
xor
pop
out
jnp
inc
jb
or
push
inc
in
cwtl
jbe
arpl
push
shll
fwait
and
out
mov
xor
push
jp
in
push
sub
push
xchg
and
cmp
ret
cmp
pop
out
add
dec
sbb
jp
rep
or
sub
sub
jbe
fisttpl
jne
push
out
in
xchg
aaa
cwtl
mov
sti
push
xor
jns
add
arpl
mov
cltd
pushf
adc
fwait
jmp
mov
loop
stc
xchg
std
insb
hlt
mov
xchg
push
dec
fcomps
push
mov
je
and
pop
aam
fcompl
cmp
dec
lret
ficomps
sub
jg
sbb
mov
pop
jnp
sub
push
loopne
outsl
add
cmp
and
cmp
and
insl
jp
mov
pop
sub
mov
pop
in
int
pop
cmp
lock
dec
pop
bound
insl
push
cmp
ficomps
xchg
jecxz
and
fsubs
mov
add
jl,pt
rcll
sbb
mov
andb
mov
sub
sbb
loope
push
push
aad
repnz
rcrb
scas
mov
icebp
xchg
mov
pop
and
xor
cli
pop
adc
rolb
cmp
mov
test
mov
loopne
jg
add
pop
cmpsb
fcmovnbe
mov
jae
mov
movsl
aaa
adc
xchg
sub
pop
and
jmp
cmp
popa
stos
and
jbe
push
cmp
dec
sti
xchg
and
aaa
pusha
lods
or
cmp
icebp
cmp
add
push
out
movsl
dec
es
xchg
mov
inc
bound
sbb
out
outsb
imul
inc
push
pop
xor
push
inc
orb
jns
js
lret
and
or
bound
cmc
scas
lahf
leave
movsw
aaa
mov
pusha
or
xor
mov
cmpsb
data16
lcall
and
mov
fidivrs
negl
call
sub
outsb
mov
mov
mov
adc
iret
fneni(8087
imulb
push
pop
bsf
pop
ljmp
jge
pop
add
scas
ret
insl
nop
push
jecxz
cmp
rcrl
mov
repnz
inc
pop
leave
xchg
jmp
add
jno
addl
mov
push
push
iret
arpl
add
push
scas
jnp
int
pop
iret
fadds
pop
xchg
cmp
aaa
pop
and
in
push
mov
ds
xor
jge
ret
insl
push
fldl
loop
xchg
loopne
mov
pop
mov
rclb
sbb
sbb
push
fildl
mov
into
fsubs
sti
sub
repnz
mov
insb
testb
fnstcw
mov
fdivr
nop
lods
out
mov
aaa
int3
jo
cwtl
std
icebp
loopne
ja
test
mov
jae
lods
and
xchg
cmp
sub
and
sbb
call
inc
push
dec
cmp
js
cmp
repz
mov
jl
sbb
dec
inc
fisubs
popf
mov
adc
xchg
popf
aaa
lret
mov
jmp
xchg
clc
or
inc
jge
arpl
je
jns
mov
inc
inc
and
loopne
push
mov
add
ss
bound
mov
pop
dec
aad
adc
xchg
mov
sub
mov
and
push
pop
pop
push
sbb
add
movsb
jle
scas
xchg
aad
mov
shl
adc
inc
jp
cmp
push
fst
andb
rclb
inc
push
pop
in
sub
aad
jno
leave
pop
xchg
adc
stos
lcall
popa
inc
sbb
std
sub
icebp
aaa
je
push
out
into
mov
loope
inc
enter
push
das
pop
mov
lods
loop
cltd
or
pop
mov
push
and
adc
pop
push
shl
push
adc
dec
test
sub
lahf
cmp
daa
add
in
mov
cld
aaa
scas
and
andl
xchg
fwait
mov
or
push
push
and
or
mov
inc
cld
and
mov
jle
xor
push
jae
add
cmp
mov
pop
cmp
in
pop
inc
push
outsb
add
xchg
test
cld
adc
push
push
add
stos
lret
adc
ss
cli
hlt
mov
pop
jb
jae
loop
and
fwait
sbb
and
and
loopne
call
pop
decl
jp
cmc
test
mov
sbb
mov
add
xor
es
imul
movsb
in
mov
cmp
inc
fidivrl
mov
ja
pop
das
icebp
cmp
mov
xchg
mov
iret
out
mov
push
enter
out
push
push
push
jns
mov
jge
push
in
fstl
inc
sbb
aaa
cmpsl
sbb
lret
pop
pusha
pop
lea
mov
sbb
lods
rorb
sub
push
enter
je
cmp
adc
leave
in
dec
sub
cmp
xor
mov
inc
jb
jmp
inc
jle
in
and
movsb
push
jmp
and
sbb
pop
inc
repnz
cmpsb
aaa
fstpl
outsb
mov
loope
loopne
jmp
cmp
lods
inc
jmp
icebp
insl
shlb
loope
dec
inc
lock
pop
lods
repz
jecxz
cmpsl
sar
mov
in
fcmovne
test
mov
mov
and
ss
jb
test
bound
mov
lods
je
xchg
inc
or
hlt
pop
stc
push
addr16
inc
int
and
xor
lock
cmp
and
add
ret
jo
hlt
xor
loope
push
fscale
pop
ss
cmpsl
add
inc
jbe
fadds
cmp
into
out
lcall
add
dec
add
js
mov
mov
pop
mov
pop
stc
inc
popf
pop
mov
add
push
pushf
fwait
cmp
aam
mov
fnstsw
lods
test
fcomps
pop
sbb
jb
std
enter
lods
pop
sahf
sbb
cltd
flds
arpl
faddl
bound
mov
jp
mov
lods
adc
data16
sbb
add
mov
xchg
ljmp
stos
mov
sub
cmp
add
pusha
aaa
or
fcompl
scas
pop
stos
xlat
ret
adc
jne
dec
insl
loope
jg
push
lock
jb
aaa
popf
adc
insl
sub
or
arpl
adc
inc
mov
push
pop
sub
xchg
rorb
xchg
dec
inc
rorb
bound
mov
push
pusha
and
inc
push
fcomip
pop
jle
mov
lahf
inc
pop
xchg
dec
cmp
sbb
sub
mov
xchg
shlb
les
sub
inc
add
ja
xchg
cmp
mov
mov
stc
cmc
mov
cmp
cwtl
xchg
icebp
inc
mov
aaa
lahf
pushf
cmp
push
jge
sbb
mov
outsb
mov
fidivl
lahf
inc
inc
mov
add
stos
mov
movsb
pop
sahf
shll
fldenv
sub
cmp
fsubrl
jle
pop
sbb
jp
jb
imul
leave
jl
daa
inc
jle
and
add
jno
xor
inc
push
sub
jbe
mov
cmp
sbb
aas
jmp
mov
cmp
add
add
movsl
pop
stos
or
jo
sbb
xchg
dec
shll
mov
push
push
mov
sub
push
out
sahf
and
cld
rep
bound
pop
cli
xor
movsl
out
xchg
ret
lret
jb
dec
or
mov
xchg
std
lea
in
xor
mov
test
in
rep
aaa
andb
int
mov
jb
mov
adc
mov
cmpsb
in
pushf
xor
mov
sbb
mov
in
xchg
test
cmp
pop
push
fstps
inc
pop
out
ja
aaa
sub
ja
ret
int3
sbb
jge
popf
repz
add
lds
out
pop
dec
dec
sub
cmp
cmc
adc
add
push
cmp
repz
sbb
sub
jne
jae
jl
inc
negl
jp
xor
lcall
jo
fildl
aaa
addr16
mov
aam
cmp
push
mov
and
jae
dec
xchg
mov
imul
push
pop
push
enter
sbb
movsb
xchg
loope
pop
ljmp
jne
mov
or
dec
inc
pop
or
rcrl
sbb
rcll
cwtl
dec
sub
sub
aas
jg
shll
and
sbb
jne
dec
dec
stos
pop
fisttps
jb
jae
mov
call
fsts
rclb
and
pop
pop
loope
mov
ds
je
xchg
shl
loop
stc
loope
outsb
jle
xchg
mov
jno
pop
sti
out
ss
jnp
jbe
int3
cmp
sarb
out
fwait
mov
fwait
xlat
aam
shl
or
xchg
jno
push
lret
lahf
in
sub
insl
out
bound
lods
hlt
dec
int3
pushf
loope
aad
push
lods
insl
pop
cli
mov
sub
into
out
cmp
cld
in
and
orb
rcrl
dec
inc
pop
filds
xchg
xchg
lret
sub
sbb
pop
sahf
sbb
jecxz
cmpsl
pop
pusha
int
jo
lret
mov
notb
mov
out
pop
and
addr16
or
pop
scas
enter
mov
pop
cmpsb
or
cli
jbe
sbb
cmp
add
sbb
pop
dec
fldcw
dec
add
xchg
xor
mov
jnp
cmp
pop
lock
std
lahf
pop
sbb
cmp
addl
lea
mov
sbb
pop
pop
aas
repz
pop
repz
inc
fldl
rcr
inc
int
adc
mov
mov
jne
int
push
pop
ljmp
inc
push
dec
push
je
negl
inc
in
sti
inc
es
sbb
push
and
popf
pop
in
in
shl
jnp
sbb
xchg
mov
mov
lods
add
inc
cmp
jmp
lds
lret
leave
push
mov
testb
scas
ret
xchg
pop
out
inc
adc
sahf
mov
int3
outsb
inc
cmp
and
fnsave
movsl
and
and
test
mov
xor
popa
add
inc
add
jnp
pusha
mov
push
notl
pop
push
pushf
cmp
xorb
pop
mov
mov
aad
or
orb
jns
sub
pushf
inc
aaa
lret
fcmovnb
xor
stos
lock
jmp
cmp
sti
jne
pop
aaa
cmpsb
xor
pop
in
xchg
mov
ljmp
dec
lods
add
jp
mov
add
xchg
mov
add
int
sbb
pop
inc
xchg
stos
aad
cli
pop
aas
inc
dec
mov
nop
icebp
dec
repz
xor
lods
cltd
loopew
ror
lret
imul
jno
mov
lea
sahf
push
and
fdivrl
adc
js
or
xor
imulb
fildll
setns
dec
movb
jo
in
in
hlt
dec
dec
jo
lcall
out
leave
mov
jae
in
pop
sub
call
jo
mov
lds
jne
dec
fstpl
ss
pop
add
add
in
jnp
inc
jno
adc
xor
addr16
and
sbb
adc
mov
testl
jmp
repnz
sbb
mov
pop
dec
xchg
nop
lods
and
pop
pop
sahf
push
repnz
xor
popa
pushf
jnp
in
aaa
and
jno
mov
push
jno
cmp
aas
xor
scas
xor
popf
sbbl
jge
pop
loope
xchg
pop
mov
adc
mov
cmp
pop
push
mov
jmp
sub
mov
inc
and
pop
adc
and
pop
int
aaa
ret
xchg
or
mov
cmp
adc
push
fidivrs
in
jecxz
es
sahf
inc
inc
aaa
das
xchg
mov
sbb
mov
rep
punpckldq
imul
or
push
popa
mov
pop
jnp
fstpl
cmpsl
ss
or
jle
adc
popf
push
fists
outsl
imul
fdivrs
daa
es
pop
out
out
mov
and
decl
mov
mov
xchg
movsl
or
pusha
cmp
pop
push
aad
cmp
pushf
xchg
sub
jbe
fwait
sbb
mov
loopne
cmp
and
mov
mov
and
int
pushl
pop
sbb
mov
loopne,pt
gs
clc
out
sbb
adc
and
test
cs
jp
imul
stc
pop
test
rorl
lea
push
fnsave
xrelease
pop
dec
xchg
loope
pop
pop
sbb
outsl
aas
cmpsb
push
xchg
inc
cmp
mov
mov
ss
pop
loope
insl
pop
or
mov
mov
lock
repz
add
mov
lods
cmc
push
subb
mov
cmpsl
jp
pop
andb
fldt
jl
jo
sahf
cltd
sbb
mov
jae
rcll
inc
sbb
cltd
and
test
push
mov
mov
pop
xchg
lcall
and
inc
test
in
nop
dec
inc
push
movl
fwait
jnp
xor
clc
mov
cmpsb
icebp
test
andb
adc
stos
movsl
addr16
jle
ret
loope
aaa
jb
ret
xchg
pop
into
push
ret
sbbl
aad
pop
xor
andl
mov
and
outsb
sbb
stos
xchg
dec
lcall
xor
sti
shrl
mov
mov
cld
adc
aam
jnp
sbb
mov
jmp
ficomps
cmp
repnz
pop
jns
lock
xor
icebp
lcall
inc
shlb
xchg
push
pop
mov
mov
push
out
cmp
out
pop
or
add
xor
inc
or
dec
pop
bound
loope
es
xchg
bound
sarl
mov
int
cmp
loop
dec
add
ss
in
gs
lcall
cld
ror
cli
lds
pop
jecxz
pop
add
in
shl
jle
aaa
inc
mov
and
fdivrp
repnz
aam
insl
mov
add
dec
dec
push
pop
aaa
push
add
test
repnz
cmpsb
and
test
arpl
adc
ret
add
scas
push
fisttpl
cmp
mov
enter
xor
or
icebp
sbb
jbe
imul
int
fnstsw
sti
lods
jae
cwtl
stc
pop
int
sub
sbb
aaa
dec
sbb
or
sahf
mov
jb
stos
sbb
rorl
lods
je
mov
fwait
outsl
jle
or
mov
push
mov
lea
sub
adc
insb
mov
pop
sbb
outsb
pop
jnp
test
mov
cs
aad
in
enter
jno
lret
stc
sub
mov
aam
shll
inc
jno
ret
jp
iret
aad
pusha
adcb
insl
popa
adc
push
addr16
ja
cmc
pop
and
add
pop
and
add
pop
in
and
shr
pop
loope
das
and
cmpsl
or
cmp
jae
es
and
sub
loopne
sub
pop
mov
pop
outsl
dec
les
adc
fs
and
leave
sbb
data16
stc
in
sti
fdivrl
rcrl
cmp
fistpll
jbe
mov
push
fcompl
cmpb
insb
jo,pt
lcall
rcrb
mov
sbb
cmpb
pop
adc
lea
sbb
sti
movsb
cmp
mov
les
and
ror
and
sti
insl
xorl
add
loope
sbb
push
sub
ljmp
shl
les
xor
lds
insl
cli
in
and
int3
aad
and
jg
icebp
mov
mov
xchg
std
mov
mov
loopne
loop
mov
aam
jmp
sti
arpl
stos
add
jnp
out
arpl
loope
hlt
lret
test
mov
out
push
jge
push
mov
stc
push
int3
fwait
jle
push
out
ljmp
stc
lea
inc
cmpsl
std
jno
test
notl
test
andb
cmp
mov
dec
imul
insb
jmp
and
xchg
sbb
sbb
outsl
in
shll
mov
push
jg
out
jb
lret
and
sub
sbb
hlt
jb
fdivrs
cmpsl
jnp
jle
xor
scas
pop
jo
mov
xor
adc
jle
push
jge
pop
into
cmp
dec
ljmp
pop
mov
lret
jns
fisttps
icebp
xor
js
or
in
dec
jne
jbe
hlt
jl
cli
mov
inc
dec
mov
lea
divl
incl
inc
cltd
inc
shll
xor
push
out
mov
jecxz
and
pop
in
jbe
es
incl
in
jnp
insl
pop
mov
ljmp
dec
aad
lcall
cmp
jmp
sbb
in
and
pop
sahf
jp
sbb
jle
iret
inc
jo
or
xlat
addl
pusha
sarb
mov
jmp
lea
repz
jg
int3
mov
jne
jns
ficoml
iret
jo
adc
jne
mov
aam
mov
insb
xorb
data16
and
mov
es
rcr
sbb
add
add
or
dec
inc
adc
mov
adc
dec
and
xchg
dec
aaa
popa
pop
sbb
mov
xchg
sub
es
xor
inc
push
fstpl
jo
inc
popf
into
push
dec
in
pop
xchg
ret
repnz
jbe
sti
lret
fisubrs
cmpb
popf
mov
sub
aas
dec
cmp
jle
dec
aam
test
cmp
xlat
addb
jg
aam
cmp
pop
loop
adc
pop
jle
pop
push
and
xor
sub
adc
xchg
sbb
aas
out
imul
or
pop
lcall
dec
inc
out
into
fwait
int3
aas
sbb
imul
into
mov
inc
dec
jl
pushf
pushl
loop
sarl
jecxz
fdivrp
sub
fs
jp
xorb
rcl
jle
mov
stos
push
pop
testl
or
cmp
mov
data16
sbbl
addr16
fsubrs
adc
aaa
dec
scas
popf
cwtl
xor
mov
test
xchg
outsl
inc
sub
scas
out
sti
sbb
ret
xlat
xchg
jle
add
scas
testb
push
adc
fwait
add
inc
inc
imulb
push
lahf
sbb
in
dec
jmp
jmp
inc
jae
in
sti
test
add
jns
jo
cmp
inc
pop
inc
lock
lea
jns
pop
adc
aaa
xchg
cwtl
adc
and
sbb
ret
nop
lods
lds
add
ss
lods
shll
fs
pop
bound
push
leave
loope
dec
fstl
mov
mov
xor
jmp
xchg
sbbl
jle
loope
sarb
stos
shll
pop
cmp
xchg
cmp
sbb
fadd
popa
es
ficompl
pop
mov
enter
loope
xchg
or
in
aaa
pop
in
mov
adc
insb
mov
push
mov
cmp
xchg
ss
das
mov
inc
add
sub
movsb
nop
dec
mov
ret
popa
pop
cmp
shr
lea
xchg
std
mov
jo
mov
je
xchg
xor
aad
aaa
pop
push
arpl
push
pushl
cmp
gs
sahf
add
mov
cmp
outsl
jl
not
jg
loop
dec
and
into
cmc
and
push
imul
pop
sub
lahf
ret
jg
and
movsb
out
inc
push
ds
mov
aas
aas
jo
and
pop
sbb
scas
pop
mov
repnz
loope
pop
xchg
mov
je
fists
mov
xor
inc
add
push
mov
insl
test
sbb
and
incb
je
adc
mov
lds
les
push
push
test
sbb
insb
ret
mov
cmpsb
aaa
inc
pop
insb
cs
shll
leave
sub
test
frstor
push
pop
test
inc
frstor
and
aam
lahf
jl
cs
jp
push
fs
lcall
js
sahf
xchg
test
sub
dec
xor
add
jle
ror
dec
jnp
xor
inc
das
sbb
movsl
in
ss
popf
ss
ss
sarb
pop
jmp
cltd
fwait
mov
push
mov
xchg
push
roll
fcmovne
aad
repnz
mov
and
push
imul
adc
imul
cli
jecxz
fistps
cld
in
stos
sti
cmc
ror
fs
mov
out
adc
int
data16
xchg
jg
fstpt
sbb
mov
mov
adc
scas
int3
lret
mov
bound
sub
and
dec
movsl
fs
fildll
cmp
pop
mov
sbb
xor
inc
push
call
or
push
adc
inc
notl
xor
repz
xchg
es
add
mov
pusha
popf
aaa
inc
xor
inc
rorb
in
imul
xchg
mov
fcmove
sbb
rcr
es
mov
push
xlat
mov
lea
outsb
lahf
aam
jns,pn
mov
icebp
push
dec
insb
mov
pop
cli
push
imul
mov
enter
sub
outsl
cwtl
cmp
mov
in
mov
sbb
add
sbb
adc
xor
add
jo
pop
outsl
ss
es
sbb
out
lret
cmp
add
pop
inc
loop
add
xor
sub
adc
push
xor
push
or
or
mull
push
rcl
adc
cld
dec
or
push
xchg
lcall
hlt
inc
lahf
cmp
push
xchg
dec
fsubs
fcmovnbe
movsb
adc
push
mov
arpl
adc
mov
test
movsb
in
dec
inc
idivb
pop
jg
imul
mov
add
add
aaa
test
mov
sbb
jle
cwtl
xchg
rcr
ds
in
jecxz
cli
push
inc
addr16
hlt
push
xchg
arpl
pop
cmpsb
scas
cs
xor
cmp
jno
cmp
cmp
or
iret
add
loopne
xchg
mov
cmp
std
call
inc
data16
dec
pop
jae
lahf
fdivrl
dec
icebp
clc
sub
jle
push
push
push
int3
mov
aas
mov
repz
adc
push
inc
adc
push
arpl
sub
mov
mov
sbb
pop
js
xchg
in
adc
push
in
fs
mov
jbe
movsl
xlat
in
and
iret
test
fisttps
push
add
bound
and
pop
addr16
adc
stos
mov
sbb
decb
ds
in
xchg
fnstcw
xor
imull
insl
rol
inc
add
sti
mov
cmp
int
or
std
jne,pt
in
mulb
push
cmp
aaa
rcll
jnp
lods
fisttpl
pop
iret
ss
int3
sbb
cmp
sub
mov
lds
stos
jp
sbb
pop
mov
addl
fndisi(8087
and
jb
pop
repnz
addb
mov
outsb
pushf
aaa
xchg
addr16
cmp
sbb
cmp
aaa
add
daa
aam
nop
mov
cs
adc
sbb
jl
mov
dec
out
push
pop
mov
inc
pop
mov
cs
outsb
jno
arpl
ficoml
pop
test
cs
push
dec
lea
adc
mov
sub
adc
jle
jmp
out
xchg
ret
pop
mov
popa
testb
mov
lods
movsl
pop
popf
push
insb
jb
addl
add
mov
adc
xor
subb
ja
lcall
fcomps
xor
xchg
mov
sub
fnstenv
mov
inc
dec
std
cmp
sbbl
popa
insb
lea
mov
lret
jb
mov
jl
sub
xchg
mov
jb
pop
scas
add
fcompl
ds
std
insb
add
mov
das
and
fldt
imul
data16
mov
inc
iret
jb
sbb
mov
repz
or
sbbb
and
ds
ret
in
jbe
pop
mov
xchg
jns
cmp
test
inc
frstor
imul
out
inc
pop
add
mov
sub
pop
mov
lock
test
sub
aaa
jp
cwtl
mov
inc
rolb
jne
jle
arpl
fisubs
das
int
mov
rorl
sbb
gs
arpl
fistpl
or
ret
pusha
push
sub
lret
ds
cmp
out
insb
call
dec
mov
xlat
push
pop
repz
mov
aaa
sub
test
pop
adc
pop
iret
test
sbb
sbb
mov
out
sbb
pop
paddd
sti
rclb
adc
aam
dec
inc
and
lret
sbb
test
inc
cld
das
jp
icebp
cmpl
jb
arpl
je
mov
inc
cs
xchg
call
xchg
push
sbb
int
jp
orb
xchg
xchg
jbe
pop
sti
aaa
mov
pop
dec
and
or
das
cmpsb
xchg
outsb
sbb
push
fiadds
lds
pushf
mov
cmpl
ss
movsl
out
cmc
fsubrl
and
adc
cli
jno
xlat
jbe
adc
loopne
dec
inc
push
das
call
outsl
stos
mov
nop
pop
popa
rclb
sbb
cli
and
in
push
jbe
addr16
gs
push
pop
arpl
pop
pop
mov
mov
bound
jle
mov
lahf
lea
fucomp
scas
outsb
jns
push
mov
push
lods
aam
repz
mov
jg
adc
pushfw
add
mov
lcall
mov
nop
hlt
jne
mov
cmpsb
in
push
lcall
scas
xchg
mov
shlb
ds
insl
mov
mov
jb
fwait
pop
in
je
rcrl
push
das
pop
pop
fisttpll
mov
and
mov
fistpl
nop
movsb
ret
sub
sub
lcall
mov
sbb
add
pop
ds
mov
in
adc
mov
mov
pushf
mov
xor
mov
pop
mov
int
test
jmp
cmp
jge
jns
test
repz
push
push
sub
xchg
fwait
push
arpl
xchg
adc
loope
in
popa
jg
cmp
subb
sub
fildll
add
jno
aaa
stc
lcall
jbe
pop
push
in
mov
gs
cmpsl
jb
add
push
xchg
fucomi
cmp
mov
mov
ror
dec
xor
test
aaa
jns
push
dec
or
jg
ds
pop
ret
leave
sbb
sub
hlt
adc
pushf
sarb
jno
test
push
jnp
jg
pop
jle
sub
xchg
add
jmp
ds
std
pop
hlt
mov
arpl
nop
push
ljmp
test
xchg
into
stc
imul
lret
cmp
push
clc
arpl
inc
aaa
ja
lret
adc
mov
xchg
inc
test
dec
insl
sbb
pusha
add
cmp
push
and
adc
sub
rcl
pushf
mov
xor
imul
jl
dec
fstpt
mov
sub
jbe
mov
lea
fs
mov
xor
sub
adc
pop
lret
movsb
fldenv
pop
jl
xchg
outsb
divb
mov
stos
popf
insb
fsub
sbb
xor
and
aaa
adc
and
dec
inc
dec
int
pop
jbe
adc
xchg
inc
in
pop
repnz
and
cltd
add
mov
loope
pop
imul
cs
orl
aas
imul
aam
in
out
aas
imul
orl
mov
adc
mov
insb
mov
sbb
sbb
std
pop
mov
leave
and
pushl
out
stos
outsb
dec
icebp
pop
mov
push
mov
leave
sbb
jmp
mov
cmc
jo
cltd
ljmp
pop
adc
loope
adc
std
pop
mov
jnp
fimuls
xor
dec
out
dec
test
fcompl
cld
sbb
push
pop
repz
mov
jnp
sti
lcall
pushf
aaa
push
cmp
fldl
cmp
xchg
mov
repz
cltd
loopne
pop
ret
test
fisttps
xchg
out
jns
in
iret
mov
dec
sahf
sbb
fxch
repnz
lret
fsubl
sbb
sub
insl
jmp
stc
enter
mov
fwait
int3
inc
fsubl
jae
mov
pop
mov
adc
aaa
aam
ds
adcl
loop
jb
inc
test
in
ret
in
lahf
add
scas
cmp
pop
fimuls
lods
sub
push
push
fwait
imul
repnz
push
jae
in
xchg
mov
xor
outsl
pop
lds
xlat
pop
repz
sbb
lods
orl
pop
test
aaa
mov
mov
add
imul
imul
dec
mov
sub
or
clc
adc
cmpsb
dec
ret
mov
push
add
pop
adc
outsb
mov
inc
mov
pop
mov
dec
shlb
adc
iret
cmp
shll
sub
or
outsl
aaa
pop
popf
fldcw
lock
rclb
sbb
sub
ret
jae
push
aaa
dec
in
sub
int
std
out
repnz
xor
fcoml
mov
ja
addr16
leave
arpl
jb
jo
pop
into
mov
std
data16
outsb
mov
andl
push
repnz
loope
xchg
pusha
sbb
movsb
lock
fisttpll
sbb
inc
pop
adc
sbb
sub
shrb
mov
pop
cmp
bound
aad
mov
bound
cmp
push
js
fcompl
loope
xor
ret
dec
pop
and
dec
xchg
push
pop
mov
and
repz
out
adc
dec
mov
pop
std
daa
loop
mov
sbbb
ffree
and
sbb
inc
push
mov
xchg
sbb
mov
rcrb
cmp
aas
fiadds
or
or
in
sbb
jecxz
add
shrl
ja
lcall
incl
stc
mov
jmp
push
cmpb
xchg
pop
insl
imul
jmp
cmp
cltd
cli
out
lods
pop
xchg
loope
sub
je
and
negb
jmp
add
fwait
lret
in
sbbb
add
repz
xlat
dec
enter
call
pop
aad
push
fucom
inc
movsl
lret
bound
add
add
lea
pop
popa
xchg
xlat
in
or
insl
xchg
sub
fs
aas
cmp
pop
and
mov
dec
in
std
push
add
and
cwtl
jbe
test
cmc
and
dec
cld
inc
push
ss
aaa
xchg
inc
jno
mov
pushf
shll
xlat
in
loop
sbb
and
imul
xor
add
stos
shl
ljmp
sbb
es
mov
pop
add
sti
xor
mov
stos
cmp
lahf
cmp
scas
out
ret
push
pop
pop
sbb
aad
lock
in
mov
xchg
shll
jnp
push
fucom
and
jge
loope
daa
and
pop
bnd
mov
sbb
xchg
jbe
in
subl
xchg
out
pop
jecxz
sbb
fwait
mov
pop
loopne
sbb
adc
in
or
pop
mov
adc
cmc
mov
cmpsb
nop
gs
or
adc
xor
inc
push
mov
push
dec
dec
pop
push
pop
mov
jp
sub
add
stc
push
xor
mov
ds
jo
pop
lahf
or
mov
test
shll
and
bound
push
pop
jb
cltd
cmovl
gs
push
jl
mov
imul
stos
push
aas
inc
jg
pop
call
out
sbb
pop
aaa
leave
outsb
aas
xchg
cmp
jp
mov
sub
das
pop
shll
mov
fs
add
push
fidivrs
xlat
xchg
cmpb
orl
insl
cmpsl
cmp
push
inc
mov
mov
or
insl
mov
lock
aaa
cmp
cmp
mov
inc
cmp
fldt
mov
imull
and
imul
pop
dec
or
shll
insb
xor
mov
xchg
jno
jnp
cmp
push
add
ds
dec
incb
test
scas
push
andl
cmp
out
jp
cmp
jecxz
not
xorl
mov
sbb
push
jae
add
mov
sbb
pop
adc
or
test
pop
scas
sub
xchg
cmpsb
pop
aam
repz
sbb
fsubr
push
cmpsl
or
add
nop
aas
fsubrs
aaa
aam
bound
nop
jl
das
and
mov
ret
fnstenv
cmp
pop
jl
push
push
idivl
in
pop
test
push
test
fcoms
xchg
notl
and
dec
aaa
or
scas
mov
xchg
xchg
cmp
dec
jl
adc
stos
lret
stos
cmc
inc
and
mov
push
xchg
push
sbb
mov
or
push
mov
and
adc
in
pop
inc
jne
push
insl
pop
mov
lods
ss
mov
sub
xchg
adc
jns
fldl
adc
or
or
sbb
arpl
rcrb
add
jb
repnz
scas
fadd
sub
cmpsb
pop
loope
hlt
fildl
xchg
icebp
ret
les
mov
pop
lret
add
mov
jg
repnz
add
xchg
lret
dec
cld
lret
jg
pop
faddl
pop
push
aaa
sub
xchg
rorl
cmp
or
pop
in
loope
push
jl
in
mov
pop
pushf
and
jp
push
jbe
popa
jns
cmp
mov
adc
push
pop
add
push
cli
push
xchg
inc
test
in
mov
stc
pop
jnp
pop
jge
xchg
bound
cmp
cmc
ja
adc
sbb
dec
mov
rcr
mulb
and
fsubr
dec
xchg
sbb
push
adc
mov
inc
aaa
xchg
cwtl
out
hlt
movsl
mov
lret
ret
push
popf
in
adc
loop
nop
fsubrs
mov
mov
ja
fnstsw
cmpsb
pop
push
popa
dec
aad
cmc
subb
or
adc
mov
xchg
rorl
adc
pop
iret
scas
jo
icebp
jae
sahf
sub
mov
aam
repz
repnz
sbb
icebp
aam
outsb
loopne
imul
jns
ljmp
aaa
out
in
cmp
loopne
sbbl
mov
pop
fcoml
mov
repz
sbb
pop
mov
xor
dec
sbb
fwait
sti
lea
idivb
sbb
add
aam
sub
xchg
jg
loope
mov
fwait
aaa
adc
fmul
loopne
inc
jae
mov
mov
les
lahf
scas
and
shll
mov
lea
xchg
into
adc
or
pop
dec
adcb
pop
insb
ret
sbb
cli
fsubl
mov
aaa
daa
add
sahf
jg
cli
stos
call
int
mov
cld
xor
pop
mov
jb
xor
and
adc
mov
cmp
pop
cmc
lds
les
and
fildll
aas
jg
dec
pop
mov
test
cltd
jae
add
gs
aaa
rcr
aad
mov
fsub
movsb
xchg
lea
or
bound
lret
xchg
int
mov
repnz
jb
cltd
sub
aas
hlt
xchg
adc
enter
push
and
imul
jb
mov
cmp
je
aaa
leave
out
dec
cmp
fs
xchg
outsb
push
pop
mov
hlt
pop
pop
inc
inc
or
push
das
lds
inc
jp
mov
or
mov
ss
push
jno
pop
xor
arpl
mov
std
bound
jge
add
sub
gs
sbbl
int
test
cmp
imull
popf
mov
ret
dec
inc
jmp
mov
std
ret
sbb
ret
stos
loopne
call
cmp
push
jle
fstps
ret
add
sbb
sub
xor
mov
sbb
aad
in
sub
mov
mov
push
stos
jg
rcrl
mov
icebp
mov
and
mov
in
jb
add
iret
repnz
sbb
cmpsb
imul
adc
xchg
pop
ss
sahf
jbe
cld
decb
sti
adc
dec
sub
xor
sub
pop
add
push
push
mov
add
mov
fwait
mov
stos
pop
adc
pop
push
mov
or
insl
out
xor
pop
sbb
std
jns
pop
and
cmp
sub
ja
ljmp
mov
movsl
jo
loope
pop
aaa
dec
je
lods
push
and
inc
adc
insb
lock
fstpt
inc
adc
test
cmp
push
push
aaa
and
lret
iret
fstpl
popf
out
jle
or
cld
jle
dec
add
mov
lods
sub
pop
xchg
mov
shrb
add
data16
je
cmp
iret
out
arpl
cmp
mov
add
pop
movsb
sbb
mov
sub
nop
fsubrp
ds
notl
outsl
shll
pop
cmp
jge
sub
aaa
lcall
test
mov
mov
or
or
jl,pt
add
pop
movsl
cmp
sub
push
and
jbe
loope
mov
loopne
sbb
lret
mov
add
out
pop
repz
sbb
int3
sub
pop
pop
or
cmp
dec
sbb
jl
pop
mov
inc
out
cmp
sbb
pop
sbb
pop
xor
out
cmp
cwtl
test
mov
or
stos
sbb
or
outsb
push
icebp
rcrb
notb
or
lret
aaa
sub
sti
mov
sub
fnstcw
adc
inc
or
fsubl
mov
and
pop
test
or
loope
cmp
icebp
lock
ds
jo
push
jno
pop
cmp
in
shll
sahf
cmpl
xchg
jbe
cs
xchg
inc
and
sbb
mov
dec
popf
adc
cmp
subl
mov
xchg
aaa
ret
lea
lahf
sbb
lods
push
inc
ret
iret
push
xchg
add
push
fsubs
sub
data16
lea
les
stos
in
testb
lds
test
std
add
fdiv
sub
ss
sub
mov
lods
push
ret
int
loopne
orb
adc
in
shr
add
inc
aaa
xor
push
es
sbb
fsubrl
jnp
xchg
add
dec
rcrb
pop
or
fsubl
cmpsl
and
sti
xor
xchg
lret
sbb
sbb
mov
add
push
out
xchg
cmp
insb
loopne
popa
rorl
mov
subb
adc
and
ret
insb
inc
mov
ss
sub
and
aas
add
and
pop
and
cli
inc
xchg
scas
adc
mov
jle
adc
mov
stc
lds
xor
ss
sub
outsl
mov
in
push
and
dec
rol
movsb
dec
fs
lret
and
icebp
mov
out
mov
loop
nop
fildll
inc
lahf
shrl
cwtl
scas
jecxz
add
push
and
sbb
jae
pop
sub
adc
pop
add
pop
mov
aad
popf
pop
push
movb
mov
and
cltd
cmp
fistpl
popf
loop
mov
inc
inc
and
imul
pusha
cli
loope
outsl
pop
daa
mov
aam
jnp
pop
xchg
shrb
sub
ss
jbe
lock
xchg
imul
popf
sub
push
arpl
dec
mov
inc
cli
fdivs
call
je
cmp
arpl
push
pop
add
cmp
add
mov
ds
outsl
jmp
inc
sub
mov
push
fwait
mov
add
arpl
out
mov
pusha
push
enter
jnp
dec
dec
shll
testb
cmp
in
mov
data16
and
mov
xchg
ficompl
outsl
cmp
push
push
mov
fimuls
pop
shr
sub
inc
or
mov
sbb
sub
ss
pop
xor
cwtl
bound
in
mov
dec
cmc
cmp
xor
lock
and
push
lods
js
stos
push
add
mov
xchg
and
push
imul
loopne
jmp
cmp
mov
mov
mov
pop
scas
xlat
pop
jne
jns
ficoms
pop
or
outsb
mov
aaa
pop
mov
cmp
ljmp
mov
sbb
dec
add
enter
sbb
pop
or
leave
fwait
and
xchg
outsl
xchg
push
fwait
mov
lcall
cs
xchg
mov
sub
pop
int
jo
jno
out
test
adc
fildl
sbb
mov
fsubl
fs
repz
sbb
pop
icebp
fwait
push
ljmp
pop
adc
cmp
cmpsl
outsb
adc
aad
jbe
pop
sub
pop
std
imul
inc
lahf
sub
aam
push
pop
and
stos
pop
and
add
mov
out
mov
adc
shll
loopne
loopne
loopne
lret
add
inc
cmp
aad
pop
clc
inc
and
scas
lret
sti
mul
or
push
or
cmp
mov
shl
and
adc
push
les
jb
or
fldt
lds
sbb
dec
insb
sbb
aad
jno
dec
inc
jge
ss
and
push
push
add
mov
mov
inc
ljmp
arpl
add
loopne
sub
sub
fcoml
cmp
aam
insl
lea
test
cmpsl
pop
ljmp
fmuls
xchg
scas
stos
and
imul
aam
je
movsl
jl
in
sbb
adc
enter
jge
rclb
sub
cmp
int
xor
lret
adc
cmp
mov
in
in
ret
sti
sub
out
repz
inc
xor
push
jl
in
mov
sub
xor
pop
loopne
jecxz
rolb
pop
lock
push
test
js
loopne
inc
test
or
jo
mov
in
pushf
add
sbb
iret
arpl
add
push
pop
pop
std
aaa
mov
adc
pop
pop
test
lret
fisubs
adc
bound
xor
mov
in
add
xchg
sbb
flds
sbb
pop
bound
hlt
mov
mov
pop
push
fsubp
pop
sbb
dec
ja
test
hlt
inc
mov
aaa
div
jo
pop
push
jbe
enter
jb
pop
lods
outsb
dec
sbb
repz
jno
pop
or
pop
sbb
add
or
cmp
arpl
hlt
arpl
sar
xchg
cs
jo
jecxz
aaa
push
push
push
imul
movsb
ret
popf
cmp
sbb
fs
mov
push
inc
adc
mov
pop
sub
jo
xor
cmp
das
sahf
push
stc
adc
jmp
dec
inc
cs
ret
stc
inc
jnp
test
inc
mov
mov
in
sahf
push
outsb
sahf
imul
or
push
mov
adc
shl
jo
icebp
push
inc
icebp
or
lock
std
push
xlat
ljmp
or
cld
xchg
insb
dec
pop
xor
mov
mov
scas
in
jo
negl
seto
jmp
mov
push
lahf
inc
loopne
lea
insb
mov
mov
and
fstpl
ds
pop
loopne
inc
enter
test
out
leave
cmp
add
dec
or
pop
in
mov
nop
inc
pop
jo
push
push
ds
add
mov
pop
jnp
pop
push
push
jno
fwait
les
mov
or
test
mov
xchg
sbb
cmp
shrb
mov
mov
cs
mov
pop
hlt
jb
out
dec
loope
inc
dec
push
push
xchg
pop
push
aaa
add
mov
aam
and
ja
jbe
adc
repz
aaa
pop
aas
bound
ja
and
pop
sbb
imul
jo
loop
mov
mov
add
loop
aaa
xchg
sub
in
out
mov
decb
loope
mov
andl
subl
jge
sahf
add
mov
sbb
adc
mov
shrb
sbb
or
fmul
repz
sub
jbe
mov
pop
pop
out
es
dec
mov
data16
sbb
pop
and
mov
jp
popa
cmp
in
out
jbe
pop
sarl
or
aaa
and
lea
pop
outsb
cltd
ret
jg
xchg
sub
loop
add
or
mov
in
sbb
scas
sbb
xor
das
fstps
test
and
hlt
lret
sub
xchg
fcmovne
mov
testb
mov
mov
mov
addb
loopne
jo
or
xor
gs
sbb
jmp
add
lods
addr16
lods
mov
cmpb
jbe
shll
sub
sub
cmp
sbb
jl
enter
mov
insb
adc
enter
inc
xor
fists
mov
mov
arpl
sub
fbstp
repz
popa
jo
test
add
sti
adc
mov
sbb
icebp
dec
pop
call
pop
mov
pop
fnstcw
push
popa
imul
mov
or
es
jle
sti
jle
pop
sub
cs
mov
sahf
sub
xorl
roll
flds
pop
push
sub
test
rorl
sbb
stc
push
cmp
push
pop
out
jl
pop
sti
add
loop
cmp
je
inc
cmp
test
push
mov
mov
js
nop
aas
je
stos
es
sbb
dec
std
dec
ss
jne
inc
pop
jo
outsb
imul
aaa
into
loop
pop
jo
xchg
adc
sub
push
lret
shrl
cmp
scas
inc
jg
ss
or
pop
aad
fldt
push
adc
mov
insl
mov
inc
int
xor
jae
frstor
adc
adc
aas
jle
ljmp
sbb
call
sti
jne
pop
and
sbb
rcrb
jmp
testb
jne
aaa
push
out
jb
mov
xchg
sti
fdivrp
jb
es
addr16
arpl
sbb
sbb
add
jle
movd
adc
bound
insb
lds
sbb
xchg
mov
fcomp
scas
push
cmp
repz
fsubl
xor
mov
pop
or
lea
push
xor
or
inc
inc
or
jge
adc
cmpsl
jl
nop
arpl
je
cld
pop
jbe
pop
jle
rorb
popa
push
movsl
shll
test
shl
lea
mov
cmpsl
loope
mov
or
mov
loop
cltd
adc
sub
and
cltd
pusha
xchg
mov
mov
lods
push
sub
outsb
xchg
rol
mov
in
cmp
pop
mov
cld
and
ret
push
jle
fdivl
outsb
jb
push
fwait
sub
fcomps
cmpsb
popf
sbb
add
pop
fs
add
mov
scas
xor
arpl
mov
jmp
icebp
insl
jo
fmull
jecxz
mov
addr16
pop
adc
in
pop
imul
hlt
cmp
or
loope
insb
call
jne
cmpsl
out
or
ficompl
lock
aam
lahf
jmp
sub
enter
mov
stos
loope
and
xor
jecxz
inc
faddl
xor
push
cmpsb
into
jle
jae
aam
push
daa
mov
nop
ds
inc
add
fcompl
cmp
push
cmpsl
mov
xchg
cmp
jnp
jle
out
aad
jns
or
in
fidivs
push
mov
ja
mov
lcall
or
cmp
int3
gs
bound
out
or
neg
sbb
adcl
aad
xlat
cmp
aas
test
movsl
outsl
pop
sub
or
inc
pop
mov
nop
je
dec
es
std
pushf
adc
mov
outsb
movb
push
pop
mov
and
mov
push
inc
mov
push
insb
xchg
sub
or
mov
jecxz
ds
int3
sahf
test
mov
and
fmul
inc
test
inc
call
icebp
hlt
cld
out
dec
in
fnstsw
sub
pop
jl,pt
cltd
mov
xchg
xor
mov
lcall
xchg
orb
cmp
movsb
dec
mov
ds
aas
repz
aaa
sub
getsec
inc
pop
leave
adc
mov
mov
lea
xchg
fbld
pop
stos
test
xchg
mov
outsl
mov
sbb
pop
sbb
stos
fsubl
xorb
or
pop
data16
fnstcw
std
rcrl
pop
mov
mov
ror
js
pop
cmpl
int
pop
sbbl
jge
mov
mov
sub
out
mov
std
add
jle
add
sbb
movsl
ss
ret
pop
repz
loope
push
dec
aaa
repnz
push
push
cltd
push
decb
rcrl
imul
lahf
and
stos
decl
xor
aas
jp
mov
shrb
incl
aam
loope
jle
jo
xchg
jb
inc
repz
and
cmp
fldl
sub
push
lods
cmp
das
adc
mov
imul
cmp
cmpsb
rcr
lahf
adc
pop
loop
and
pop
js
xchg
push
cmp
pop
sub
fnstenv
push
lods
mov
imul
pop
adc
aaa
fiadds
push
adc
push
sub
rcr
test
cwtl
mov
aam
sub
stos
mull
push
imul
xchg
imul
scas
stos
sbbb
sti
int3
nop
test
pushf
sbb
sbb
out
push
jle
ffree
push
cmp
xchg
pop
xchg
fwait
imul
sbb
bound
pusha
rcrl
outsl
inc
in
ss
leave
lcall
and
call
cld
mov
xchg
xor
sbb
mov
adcb
cli
push
mov
pop
cld
jl
les
xchg
sub
fndisi(8087
sbb
je
jne
inc
fmuls
in
mov
enter
jl
mov
in
ss
gs
dec
push
mov
jle
push
xor
inc
cmp
aaa
lods
xor
outsl
lcall
mov
lahf
out
mov
imulb
jle
in
icebp
mov
out
add
mov
mov
in
ljmp
mov
js
outsb
and
mov
stos
mov
es
and
in
push
jmp
in
jo
icebp
lret
jo
xor
es
jb
push
enter
aaa
pop
mov
jnp
mov
pop
pop
jbe
mov
jl
outsb
arpl
imul
xchg
fistl
in
add
xor
add
mov
scas
mov
push
pop
cmp
insb
inc
pop
insl
mov
pusha
xchg
inc
sub
mov
arpl
lahf
addb
ljmp
test
sti
sbb
lcall
inc
inc
mov
es
sbbl
rolb
cmp
or
jo
xchg
cmpsb
push
int
pusha
pop
cltd
unpcklps
mov
mov
dec
lret
in
fisttpll
lock
dec
dec
xor
int3
xor
dec
or
inc
mov
sub
pushf
aad
int3
sbb
jb
pop
pusha
xor
in
and
scas
int
ss
xchg
stos
mov
or
enter
inc
in
mov
lods
add
mov
fidivrs
add
sub
adc
mov
sbb
inc
nop
fbld
and
inc
out
sbbb
movsb
loope
int
lock
orb
aaa
ret
nop
sbb
xchg
popf
adc
ss
adc
cmp
sahf
out
out
cmp
or
xchg
ss
orb
lock
popa
dec
lret
ljmp
inc
fidivs
sbb
pop
testl
or
out
mov
test
sbb
mov
pusha
test
xchg
lret
clc
out
fbstp
jns
stos
jle
sbbl
inc
int
jo
int3
bndldx
push
xor
push
or
stos
xchg
imul
fwait
mov
es
cmp
inc
cmpsb
clc
pop
jle
cltd
pop
arpl
jns
push
xor
add
adc
inc
adc
in
cmp
mov
mov
pop
or
and
fcomps
pop
or
jb
xor
test
sbb
popf
test
sarl
idiv
xchg
mov
outsb
aaa
lods
stc
es
popa
xor
in
sbbl
popa
pop
cmp
mov
popa
sub
xor
mov
call
outsb
mov
xor
js
ja
mov
mov
outsb
dec
add
loope
push
out
out
nop
add
sbb
popf
xor
lea
andl
push
push
cwtl
xchg
cmp
pushf
rcrb
sbb
xchg
xor
aaa
xor
push
inc
xor
pop
imul
iret
outsl
repnz
std
jecxz
cmpsl
inc
cmc
mov
push
out
stc
ja
jle
or
cld
pushf
ret
dec
dec
mov
pop
push
pushf
push
sbb
xchg
adc
ds
cmp
repz
ds
sub
mov
adc
jo
shll
lods
fldt
pop
or
inc
push
and
aaa
mov
in
xlat
jnp
cmp
sbb
pop
sub
fcompl
jle
iret
pop
xchg
xchg
adc
lods
inc
fadd
sub
push
popf
enter
and
data16
cmp
stc
mov
dec
test
shrb
mov
cmp
subb
sarl
and
pop
adc
je
ljmp
pop
int
scas
loope
in
outsb
jne
mov
cwtl
in
jmp
xlat
cmp
icebp
bound
mov
in
mov
lods
dec
aaa
loop
and
mov
js
push
xlat
ljmp
inc
imul
mov
in
inc
mov
je
aaa
shrl
jecxz
aas
pushf
pushl
dec
xchg
std
fdiv
lock
imul
aaa
adc
std
enter
repz
fistpll
ds
mov
and
sbb
cmp
and
inc
xor
adc
pop
ja
loop
cmp
ljmp
ret
cmp
inc
decb
test
adc
icebp
ljmp
inc
fsubrs
cwtl
je
aas
aaa
xor
add
adc
cmp
push
xlat
lret
dec
hlt
mov
dec
shrb
push
inc
pop
push
loopne
pop
fbld
mul
fdivr
push
sbb
push
or
leave
cmp
std
push
add
adc
pop
pop
and
add
jno
or
imul
pop
and
aam
lret
incl
pop
sbb
insb
push
adc
sti
std
and
mov
mov
sub
scas
cmp
cld
inc
out
in
ja
stc
jno
adcb
cmp
jbe
cmovb
jl
sbb
push
andb
mul
push
sbbl
dec
in
inc
gs
sbb
pop
cmp
out
inc
push
adc
repz
nop
imul
dec
cld
enter
cs
mov
pop
fsubl
cmp
lret
push
jecxz
jle
push
aaa
mov
pop
push
orb
ret
mov
add
cmp
add
das
adc
mov
popl
sbb
sahf
clc
and
jns
lea
pop
inc
js
sarb
sarb
sub
enter
pop
xor
adc
push
cmp
inc
xchg
stos
jb
pop
fnstcw
and
enter
test
repnz
pop
aaa
sub
cmp
xchg
inc
int
ss
icebp
pop
aad
sbb
shl
iret
lcall
sbb
xor
aaa
jg
mov
xor
jl
adc
scas
xor
mov
or
ds
xor
lret
xchg
push
mov
adc
popf
outsl
imul
in
scas
lahf
inc
test
jle
or
push
cmp
das
pop
jl
jae
dec
mov
aaa
out
es
dec
lret
ret
mov
mov
insb
and
inc
pushf
enter
dec
push
sub
inc
jg
leave
fldl
lret
rcrb
sbb
dec
aam
rorl
or
mov
adc
mov
mov
divb
and
cmp
fnstcw
sbb
out
push
pushf
lcall
mov
in
ficomps
sbb
in
es
mull
cmp
scas
popf
pop
jne
pop
cltd
jae
insb
jno
mov
mov
divb
lods
xor
mov
imul
fisttpl
pop
jp
in
xchg
es
jg
leave
dec
out
int
leave
sub
cltd
sub
pop
sahf
clc
xchg
push
jae
pop
jle
xchg
outsb
sbb
int3
test
into
mov
mov
imul
dec
sbb
aam
testb
adc
imul
jne
enter
fcompl
jns
rcr
jmp
pop
mov
int
sbb
sbb
iret
add
cmp
mov
dec
xchg
das
pop
aas
imul
push
sbb
in
das
test
fcomps
mov
push
ficoml
enter
sbb
mov
pop
xor
shll
into
ja
cmp
cmp
rorb
jno
cmp
jge
xchg
imul
or
sti
pop
jge
lods
dec
stc
jno
es
jl
das
and
aaa
jp
rcrl
lods
outsb
sub
loopne
pop
dec
pop
aaa
mov
in
nop
scas
andb
repz
mov
shlb
sbbl
jecxz
xchg
in
aas
aaa
loop
bound
push
jmp
dec
inc
and
jg
arpl
dec
xchg
aaa
adc
idiv
mov
or
jnp
add
jae
in
push
adc
pop
outsb
dec
push
js
jb
movl
pop
pop
inc
and
es
jnp
dec
imul
jmp
pop
je
faddl
nop
sub
movsl
jp
ret
pop
sub
xor
cmp
mov
sub
outsl
pop
xchg
sbbl
fwait
add
xchg
push
add
and
pop
mov
pop
pop
push
int
repz
leave
mov
std
out
ljmp
mov
inc
add
xchg
push
pop
clc
sub
cmp
cmp
pop
pop
pusha
and
cmp
and
testl
rcrl
sahf
cmp
add
movsl
jecxz
jbe
and
lock
dec
or
aam
aam
push
insl
sti
or
leave
adc
mov
stos
add
in
daa
inc
popa
mov
inc
int
jb
jp
xor
pop
sub
pop
add
adcb
mov
push
fs
popf
push
out
das
dec
fcoms
inc
clc
pinsrw
pusha
jl
push
int
lcall
mov
or
adc
and
inc
xchg
and
icebp
movsl
aaa
gs
daa
dec
movsl
and
sbb
lret
mov
mov
jnp
fstpt
in
sub
sbb
ss
add
add
mov
faddl
aaa
dec
rcl
dec
mov
cwtl
outsb
lods
movsl
repnz
cmpsb
loopne
ret
jno
mov
das
icebp
push
mov
push
add
leave
and
mov
jbe
jnp
jbe
movsl
repnz
and
sbb
mov
rcll
jno
es
push
jecxz
rorb
sub
pop
fidivl
pop
mov
pop
sbb
int3
shrl
fistpl
push
icebp
cmpl
xor
mov
pop
mov
fs
xlat
push
cmp
in
pop
inc
je
mov
cmp
pop
scas
adcb
lock
sahf
xchg
imul
cmp
xchg
in
sbb
imul
jle
add
sbb
adc
push
rcrl
aad
push
jg
lods
aaa
xor
mov
adc
jge
pusha
xchg
cmp
mov
xor
cli
inc
and
or
push
xchg
push
das
xlat
adc
and
ss
imul
dec
stos
inc
test
mov
test
mov
repz
jns
fildll
mov
mov
sahf
jo
stos
inc
negl
or
imul
mov
lea
push
jbe
mov
psrad
rorl
ret
mov
lcall
mov
lea
pop
dec
xor
mov
or
cwtl
ficoms
jno
out
lods
aas
enter
data16
je
popf
xchg
jns
sbb
cs
icebp
andb
icebp
fstpl
repz
popa
xor
imul
mov
and
icebp
dec
aam
jno
pop
push
xor
ss
negl
dec
and
mov
ret
aas
lcall
dec
pop
sbbl
stc
mov
jl
sub
aas
adc
cld
pushw
add
lret
add
inc
cmp
andl
hlt
lods
out
fdivrl
pop
push
aaa
sub
outsb
sbb
rolb
jo
stos
mov
mov
inc
sbb
ss
sub
icebp
sub
orl
pop
je
push
in
and
ljmp
and
or
outsb
imul
fstcw
sbb
xchg
mov
mov
mov
pushf
or
rcr
pop
mov
mov
mov
mov
nop
test
inc
icebp
xor
mov
es
imul
out
lcall
add
les
stos
js
xchg
jle
enter
dec
jge
and
js
ljmp
lcall
pop
or
inc
sub
mov
repz
inc
sub
mov
iret
sub
fs
mov
xchg
ficoml
mov
lea
push
pop
push
adc
mov
dec
cltd
fisttpll
sbb
sahf
outsl
les
icebp
adc
xchg
pop
lret
lret
mov
mov
inc
sbb
adc
sbb
je
cmc
sahf
cltd
shll
scas
movsl
push
jbe
sub
outsb
xlat
nop
mov
inc
fcmovnbe
fsubl
test
mov
pusha
popl
xor
ret
or
shl
push
push
sbb
jg
adc
ss
call
mov
pushf
sbb
movsb
dec
sub
bound
fbld
push
or
cmpsb
mov
pusha
dec
out
sbb
mov
add
mov
es
int
sbb
xchg
mov
add
xorb
dec
dec
mov
clc
sub
gs
in
sbb
xor
cmpsl
popf
sub
fnsave
outsl
ss
pushl
and
into
push
dec
inc
fldt
cltd
imul
data16
das
inc
gs
ds
cmp
mov
std
jmp
adc
out
cmpsl
inc
pop
in
mov
loopne
push
js
ss
jmp
pop
push
xchg
inc
loope
pop
fdivrs
push
sbb
movl
push
mov
pop
push
aad
pushf
imul
pop
mov
xchg
mov
loopne
sbb
and
adc
push
xor
xchg
repnz
call
or
push
jg
sub
shl
mov
gs
jle
sti
fstpt
jge
or
sbb
sahf
sbb
lea
or
jbe
or
mov
mov
push
and
fwait
mov
outsb
cmpsb
lods
jmp
push
lds
test
movsb
adc
aas
data16
call
jo
out
add
divl
inc
sub
loop
pop
jg
sarl
std
push
adc
fdivs
aaa
xchg
push
add
mov
or
push
pop
mov
add
adc
int
add
jle
adc
loope
cmp
push
xor
je
orb
xor
ja
sbb
cmp
js
cmpsl
jns
and
sbb
iret
stc
push
pop
fwait
push
mov
inc
dec
insl
lods
jle
mov
sbb
test
add
test
dec
nop
bound
addb
sub
leave
mov
into
xchg
mov
cmp
sub
sarb
mov
stc
xor
gs
xchg
lea
xor
aas
mov
xchg
leave
mov
pop
aaa
mov
cmp
xor
jb
aad
sbb
cmp
sbb
jns
add
es
shrl
mov
sbb
loopne
mov
pop
adc
inc
repnz
lahf
popa
pop
mov
and
arpl
lahf
inc
js
xor
xchg
pop
xchg
and
xchg
and
push
je
in
jle
or
jne
gs
subb
add
cwtl
rcl
lahf
lods
cmp
or
scas
enter
cltd
jle
xchg
xchg
mov
cmpsl
ds
mov
jecxz
shrl
and
or
mov
clc
jp
push
aas
add
jp
aas
clc
mov
pop
push
aaa
xor
push
inc
pop
xchg
mov
loopne
sbb
sti
loope
sbb
es
insl
fidivrs
movsl
shll
sarl
sub
ret
adc
icebp
test
xchg
push
pop
mov
jno
mov
lcall
cmp
pop
mov
sbb
cmc
jge
cmp
pop
add
clc
loope
or
aas
loop
cs
repz
push
sbbb
testb
cmp
pop
fs
inc
xor
rcrb
sar
jecxz
pusha
fcomps
pop
cs
ret
ss
jp
mov
aaa
mov
and
test
icebp
push
and
cmp
pop
sbb
mov
sub
rolb
cmp
aam
pushl
jge
jbe
cmp
pop
sbb
pop
or
ds
mov
testb
mov
and
jecxz
pop
jns
aaa
jno
xor
cmpsb
add
mov
std
ds
ret
popf
mov
sti
adc
sub
pop
add
movsb
les
jl
ja
xor
int3
dec
stc
push
cmp
fdivl
sbb
push
cmp
adc
sti
cmp
aam
cs
int3
dec
xchg
jne
sub
jle
pop
test
add
into
mov
cwtl
dec
mov
sbb
fstl
fcompl
xor
les
subl
xlat
adc
arpl
jbe
and
out
mov
mov
in
call
adc
pop
sti
mov
aaa
adc
pop
jmp
ret
push
xchg
cltd
movb
jp
fstpl
out
cmp
jle
sahf
rclb
or
test
aaa
and
add
dec
loop
aad
lds
jge
cmp
adc
push
vxorps
and
js
pop
test
mov
in
add
pop
lea
cmp
int
imul
mov
add
mov
push
pop
es
fistpll
mov
push
jmp
and
jecxz
test
xor
filds
mov
loop
repz
mov
fistpl
jae
ds
repnz
jle
xchg
mov
xchg
mov
xorl
enter
negl
pop
add
and
cmp
and
jnp
enter
out
bound
or
imul
pop
push
push
aaa
mov
cvttps2pi
mov
cmp
in
sbb
xor
test
scas
xor
add
ja
scas
arpl
call
das
test
or
mov
ljmp
mov
inc
xchg
das
out
adc
xchg
dec
in
mov
pop
dec
pop
sub
cmp
mov
das
cwtl
in
nop
inc
xor
pop
ss
aaa
add
push
jle
jmp
lea
adc
jo
push
fwait
hlt
push
jl
lock
into
mov
push
mov
inc
aaa
and
es
fistpl
iret
pop
xor
pop
ficompl
aaa
add
jno
pop
mov
mov
into
mov
xchg
and
testl
jns,pt
iret
sbb
xchg
dec
out
divl
push
mov
xor
push
or
mov
rcrl
cmp
scas
rol
dec
ljmp
fistps
out
mov
out
das
cld
inc
or
into
outsb
sub
xchg
mov
bound
pop
enter
push
jae
ficomps
mov
add
fstl
mov
push
sbb
dec
push
push
addb
ljmp
push
push
mov
int
jo
je
xchg
jmp
sub
push
cmp
push
mov
je
out
in
jb
shlb
jmp
push
rcrb
dec
xchg
sub
out
in
mov
add
dec
xor
out
inc
out
mov
pop
out
lods
pop
scas
insl
push
xchg
sti
pop
sub
jbe
sub
cmc
jmp
cmpsl
call
hlt
pop
in
into
or
push
mov
pop
scas
mov
jbe
lock
sub
fsts
rorl
add
mov
mov
fstp
mov
lods
push
push
scas
enter
sarl
roll
icebp
inc
pop
cmpsb
pop
cmp
std
pop
xchg
push
sahf
pop
pushf
jecxz
xor
sti
loope
adc
aam
outsb
imul
jle
leave
pop
jns
mov
in
or
bound
pop
iret
std
pop
out
loope
push
sbb
loope
mov
jb
jns
cld
jmp
dec
push
mov
xor
packsswb
mov
mov
add
cltd
or
pop
jecxz
fildll
sub
fistps
incl
pop
lret
jge
xlat
cli
inc
stos
inc
aam
push
jmp
lret
and
jp
adc
add
xchg
ffree
imul
pop
xchg
iret
lock
jne
jmp
pop
lods
repnz
dec
xor
out
call
push
jne
insb
subl
movl
aam
xor
arpl
outsb
cltd
lahf
lods
sti
pop
inc
mov
inc
jns
mov
or
sbb
dec
mov
cmp
and
pop
fst
xor
and
movd
pop
test
and
mov
jp
clc
icebp
mov
incl
pop
in
loopne
mov
loope
vcvttsd2si
xchg
pop
outsb
iret
xchg
adc
fdivs
mov
or
aad
sbb
mov
rcrb
mov
mulb
fisttpll
cmp
fsubs
popl
cmp
cmp
enter
add
pop
jno
int
lcall
dec
or
dec
add
jo
add
imul
lcall
add
jl
sti
xchg
loopne
addr16
loopne
inc
and
jb
data16
das
push
push
dec
aaa
xor
mov
dec
fs
in
js
cltd
mov
outsl
mov
pushf
sub
pop
or
repnz
xor
mov
sbb
add
fcompl
ror
outsb
lret
cmp
in
addl
xor
jg
push
mov
ljmp
jae
popa
jge
push
arpl
and
and
add
movsl
jp
mov
je
add
lret
push
lea
fyl2x
push
push
xchg
jl
adc
ret
int
lahf
and
cmp
arpl
loopne
pop
aaa
dec
adc
in
and
rorb
insb
sub
xorps
fwait
pop
aam
aas
stc
cli
and
xchg
mov
insb
mov
mov
aad
fstp
imul
pop
jge
push
out
jno
pop
out
inc
incb
add
pop
test
sbb
jle
mov
dec
idivl
js
mov
int3
adc
and
cmp
pop
call
fsubr
cmc
xor
jle
push
and
push
mov
jmp
sbb
jecxz
sub
insb
outsb
sbb
push
mov
lahf
and
sub
int3
fisttpll
movsb
push
sbb
mov
in
stc
jo
outsb
adc
std
mov
das
cmc
add
ror
push
lea
mov
rcr
mov
lds
push
sub
outsb
jae
cld
push
outsb
sbb
mov
movsb
inc
cs
mov
popa
pop
push
inc
test
xchg
or
popa
data16
sti
sbb
push
and
pop
imul
cmpsl
mov
jmp
xchg
inc
lea
popa
push
sbb
in
scas
sub
fcomi
cltd
mov
sbb
or
insb
rclb
sbb
xlat
xchg
push
into
xor
inc
dec
std
mov
sub
es
push
test
jb
pop
jne
in
je
pop
jmp
dec
jno
add
pop
jo
test
in
scas
out
aas
sahf
xchg
bound
add
sbb
push
push
out
mov
loopne
xchg
popf
aad
call
push
imul
addr16
and
rclb
pop
xlat
sbb
sub
add
mov
jo
mov
xchg
std
in
mov
add
xchg
aam
insb
gs
jle
jo
add
mov
sbb
lcall
aaa
push
sub
or
adc
cmp
jp
mov
pop
mov
pop
repnz
add
sbb
aas
mov
inc
cwtl
ficoml
pop
xchg
sahf
xchg
sub
lods
dec
pop
mov
aaa
inc
fnsave
sub
lcall
jg
mov
mov
push
aaa
jae,pt
std
sbb
mov
xor
stc
mov
sbb
jg
jbe
fsts
out
arpl
mov
sub
dec
push
rcrl
rcll
rcrl
repz
sub
inc
aad
mov
dec
popf
imul
ja
cmp
adc
cmc
pop
jnp
test
mov
orb
inc
cmp
in
add
je
aaa
xchg
imul
lret
dec
fbstp
test
bound
fnsave
mov
aas
and
cld
cmpsl
hlt
push
sbb
pop
movsl
rcrb
fsubl
cmp
into
xor
adc
out
cmp
loope
dec
shlb
aaa
test
pop
jp
and
push
lea
mov
dec
pop
mov
cwtl
xchg
push
or
loop
lds
jbe
cmpsl
lock
cli
sarb
cld
xchg
test
fwait
outsl
dec
or
adc
pop
cld
scas
pop
adc
stc
xchg
cmp
inc
add
add
pop
ss
ss
hlt
fidivl
sbb
mov
cld
pusha
pop
cmpsl
sbb
test
in
ss
call
xor
mov
cmp
std
test
jecxz
jp
push
gs
imul
movsl
pop
inc
fcompl
aad
sti
pop
call
mov
inc
ds
into
pop
mov
es
lods
inc
stos
orl
fstps
mull
enter
sbbl
loopne
icebp
and
pop
mov
jmp
xchg
mov
pusha
push
je
shr
cmp
adc
dec
in
loope
hlt
sbb
push
leavew
sbb
push
fxam
std
and
adc
rcr
adc
mov
push
aaa
cmp
push
ror
pop
loop
idivl
stos
scas
in
mov
fs
add
loopne
into
xorb
xchg
sub
mov
outsb
pushf
bound
scas
sub
dec
imul
jecxz
adc
hlt
jb
rcrb
repz
xor
pop
and
cwtl
pop
inc
arpl
movsb
int
lods
sti
stos
or
aam
jne
mov
jl
fwait
pop
inc
test
in
lds
xchg
jno
jp
cltd
mov
lahf
jge
call
push
mov
and
push
pop
inc
xchg
in
loopne
andl
rolb
mov
cmp
sti
dec
pop
mov
mov
mov
push
sub
insb
lods
btc
aam
lcall
in
fbld
sbb
fsubrp
mov
in
and
movsl
dec
mov
popa
lahf
adc
pop
mov
sti
loope
jnp
adc
dec
jnp
push
sbb
lret
test
out
shlb
clc
repz
or
sub
cmp
push
ret
jge
pop
cmpl
push
push
xchg
cli
cmc
call
shl
jbe
sub
jo
inc
in
xchg
mov
jmp
dec
push
jnp
pop
gs
mov
rol
pop
dec
call
in
arpl
and
pop
xchg
and
imul
push
aam
jle
cmp
dec
push
or
pop
fbld
imul
shll
in
ss
outsb
mov
sbb
pop
ss
add
xor
jg
push
push
aaa
adc
test
lods
and
ss
je
jno,pn
lahf
push
aaa
lea
pop
jbe
jb
pop
cltd
arpl
cmpl
stos
int
sar
mov
push
filds
out
test
dec
pop
shrl
loop
and
jl
loope
lret
cs
fwait
sarl
adc
cltd
push
das
sarb
jb
insb
cmp
pop
push
sbbl
mov
adc
lods
iret
aaa
fstl
insl
push
push
mov
test
add
sub
adc
jbe
or
jne
int3
and
pop
mov
push
pop
in
aad
pop
roll
sub
rcrl
ds
test
adc
ja
lahf
push
pop
and
je,pt
fsubrl
adc
push
jb
mov
lahf
jecxz
or
pop
jecxz
push
mov
sbb
jnp
pop
stos
mov
push
inc
pop
push
js
sbb
xchg
repz
sub
out
and
shl
and
vcvtss2sd
imul
fistpl
mov
pusha
inc
push
mov
add
into
aam
push
adc
subb
mov
and
push
sub
cmpl
mov
test
inc
mov
jb
loope
dec
adc
dec
outsb
pop
ljmp
icebp
and
push
imul
int3
shrb
js
sbbb
xchg
mov
jb
stc
sub
sub
mov
mov
jne
sbb
push
std
inc
ss
dec
mov
mov
lds
mov
insb
enterw
hlt
lds
xor
push
lahf
ret
out
adc
test
mov
sarl
mov
movsl
ret
add
mov
pop
mov
jp
popa
push
jp
lret
xchg
mov
aam
js
inc
in
in
fscale
pop
jbe
push
xlat
add
pop
and
jmp
sub
aad
adc
in
mov
dec
fnstsw
ds
mov
cmp
pop
pop
mov
negl
cmp
fwait
sbb
shrb
pop
je
xchg
in
cwtl
out
mov
pusha
out
les
lret
popa
mov
lods
or
pop
iret
mov
cmc
js,pt
adc
xchg
mov
add
pop
sti
int
outsb
test
cltd
outsl
push
add
adc
xor
inc
outsl
addb
mov
add
or
pop
jne
test
ret
sbb
fldenv
pop
push
push
lret
scas
bound
orl
jnp
push
aam
dec
divl
in
aam
call
ss
mov
divl
lahf
andb
cmp
jle
and
ret
loop
push
sarl
aaa
imul
and
dec
jmp
jns
jmp
sbbl
repnz
neg
inc
jmp
pop
pop
pop
int
outsb
cmp
inc
fidivs
ficompl
aam
xchg
stos
lock
arpl
incl
shll
xor
sub
sub
sbb
clc
pop
sbb
cmp
inc
sub
dec
xchg
pop
xor
xor
aaa
mov
inc
test
cli
push
imul
push
and
int
fldt
sbb
push
jnp
jge
sub
push
popa
pop
andb
adc
clc
stc
add
pop
pop
inc
les
mov
jmp
xor
adc
jle
mov
lods
pop
subl
sti
xchg
imulb
rclb
pop
imulb
adc
mov
das
lret
aad
adc
sbb
fnclex
cmp
ficoml
push
js
aaa
out
scas
push
pop
adc
cltd
orb
and
stos
and
shr
shl
pop
lahf
sub
xchg
aaa
ja
jnp
and
movsl
inc
inc
inc
call
jb
jo
cs
xlat
push
fistpl
sbb
dec
fnstenv
and
fbld
popf
and
hlt
stc
movsb
outsb
lds
add
lds
xchg
inc
jle
mov
add
fcomp
or
shrl
push
pop
push
shlb
nop
arpl
cld
movsl
pop
test
je
jg
mov
pusha
dec
dec
push
ja
aad
fwait
je
add
lds
cmp
xchg
andb
aas
inc
fiadds
pop
mov
shrl
sbb
mov
movsl
inc
push
js
lcall
clc
int3
sub
lock
inc
push
inc
adc
adc
jbe
cld
pop
daa
insl
repnz
lods
mov
aaa
lock
pop
lock
enter
and
out
xor
out
mov
jl
imul
mov
fnstcw
test
cs
push
adc
stos
jb
out
xchg
mov
push
roll
aaa
fistl
movsl
pop
stos
or
adc
fnstcw
stos
in
jo
xchg
shll
sarl
sub
aaa
mov
in
mov
hlt
jnp
pusha
ljmp
clc
ds
mov
pop
sbb
je
cld
mov
jecxz
mov
sub
pop
xchg
adc
lea
pop
je
mov
out
cmpsl
loop
mov
jle
or
or
imul
out
daa
pop
push
push
cli
mov
call
ret
push
scas
int
sub
hlt
cmp
pop
push
lahf
mov
fsubrp
ret
cmpsb
into
jle
xor
pop
pusha
call
out
cmp
jl
pcmpeqw
push
mov
aaa
sbb
int
jno
ret
sar
dec
aaa
pop
dec
or
push
mov
nop
adc
sti
loope
pop
test
nop
dec
in
rorl
mov
roll
pop
cmp
jle
jge
cmp
xchg
adc
cmp
dec
inc
mov
gs
cmpsl
pop
aaa
stos
adc
fldenv
and
sub
inc
pushf
dec
cmp
inc
mov
mov
packsswb
insl
sahf
xor
ljmp
inc
and
xor
add
and
push
mov
insl
mov
iret
mov
std
aaa
leave
or
cwtl
mov
dec
adc
dec
jno
shrb
stc
sti
pop
in
clc
aaa
mov
mov
ret
mov
das
gs
fists
js
pop
out
ljmp
or
int3
or
insb
daa
sbb
xchg
jle
sub
fsubrl
sub
fwait
in
and
out
test
push
and
cmp
test
call
push
stc
and
rorl
cmp
ss
iret
sbb
ds
sbb
xchg
cmp
loope
xchg
sub
cmp
into
jno
insb
fucomip
int
sub
aaa
mov
out
ds
push
lret
bound
stc
insb
data16
mov
xchg
jnp
jge
insw
loop
pop
pop
movsb
sub
lcall
gs
dec
aas
test
in
xchg
mov
stos
inc
aaa
ret
fwait
ds
mov
stos
add
and
jp
mov
sbb
and
cltd
out
sbb
mov
pop
or
sti
jbe
xchg
call
and
dec
xor
jnp
test
shrl
iret
arpl
xor
mov
es
nop
andb
in
icebp
dec
insb
dec
pop
test
je
mov
adcb
repz
stc
mov
call
mov
fnsave
cli
jo
mov
ffreep
push
push
idivl
ss
mov
inc
jle
nop
std
cltd
loope
ds
loop
adc
aaa
outsl
jle
push
rcrb
sbb
in
or
js
mov
mov
outsl
ret
mov
fisttps
in
mov
stos
es
lock
mov
add
mov
sbb
repz
inc
xchg
mov
push
and
pop
jle
push
fimuls
mov
sahf
pushf
enter
mov
jmp
js
pop
mov
and
xchg
lahf
mov
sub
jp
or
dec
fmuls
xchg
mov
pop
repnz
clc
in
dec
and
jp
xor
clc
cmp
scas
cmp
adc
mov
enter
je
push
pusha
fldl
pop
insl
lcall
and
adc
jp
inc
jbe
in
push
ja
lahf
outsl
in
mov
stos
pop
inc
aam
xor
dec
je
cmpsb
lods
js
jg
addb
pop
out
cwtl
ljmp
std
test
push
xor
fidivrs
adc
mov
addr16
pushf
mov
pop
popf
mov
add
jnp
cltd
lea
repz
fisubrl
mov
sub
mov
inc
std
mov
js
stos
shlb
mov
jge,pt
aad
adc
int3
mov
icebp
ret
test
push
aaa
in
jg
jb
lods
jg
adc
sub
or
aam
cvtpi2ps
push
adc
insb
ds
jp
pop
xchg
pop
cltd
gs
pusha
rcrl
jl
jg
mov
in
sub
dec
pop
pop
mov
xchg
imul
insl
xor
aaa
pop
xor
sbb
lods
fisubl
repz
movsb
loop
jb
cwtl
mov
adc
stc
sarl
or
cmp
jae
fdivr
pop
mov
sbb
mov
movsl
adcl
push
jb
scas
sub
sbb
bound
and
add
mov
xchg
push
mov
rcll
fwait
add
ss
fdivl
pop
mov
jp
jle
push
xor
push
arpl
pop
push
loope
aaa
ss
lahf
dec
imul
inc
nop
push
in
lcall
stos
xchg
sahf
xchg
lret
sbbb
dec
mov
inc
hlt
mov
push
xchg
push
jmp
xchg
rcl
dec
add
out
and
add
xor
cmp
jns
xor
out
ud0
push
push
imul
jp
jne
call
lds
outsb
cmp
add
dec
mov
loopne
clc
push
addr16
js
push
cmp
pop
mov
mov
pop
ds
fldcw
cmc
or
and
mov
jmp
pop
lock
push
les
cmpsb
adc
push
cmp
mov
adcb
mov
or
ret
incl
inc
in
pop
dec
jg
mov
ss
sub
adc
push
subl
sbb
cmpl
mov
jo
data16
outsb
mov
cli
popa
aaa
popf
test
int
xchg
call
testl
loope
push
mov
orb
pop
xchg
iret
mov
adc
lcall
movsl
push
cmp
insb
xor
repz
aam
arpl
jg
sub
mov
pop
pop
outsb
add
test
mov
push
aad
xor
push
fdivrs
sbb
pop
jbe
pop
mov
cs
inc
std
das
mov
sbb
pop
rcrl
xchg
dec
xor
mov
ret
dec
adc
lds
mov
jnp
mov
pop
lret
ret
shll
push
pop
jmp
mov
fcmovnb
mov
jecxz
outsb
aas
mov
insb
scas
sub
jle
xor
imul
and
adcl
outsl
jmp
cltd
sbb
mov
sub
inc
xor
lock
loopne
xchg
inc
or
shrb
cmp
or
cmpsl
cmpsl
and
scas
inc
push
cmp
in
inc
dec
lea
std
pop
mov
mov
test
pop
test
rolb
stos
in
xchg
dec
mov
mov
std
jne
jno
cmp
loop
jecxz
and
mov
out
push
dec
fistpl
loope
clc
jmp
rcrb
test
pop
mov
add
es
loope
jle
das
lock
mov
push
dec
aaa
and
push
cli
xchg
fs
daa
into
jle
mov
inc
mov
cld
imul
addr16
int3
cmpsl
rcll
fisttpll
lcall
cmpsl
push
pop
cmpl
mov
push
outsl
fstpl
pop
std
push
pop
cmp
add
icebp
adc
xor
sbbb
sahf
lods
and
icebp
add
outsb
lds
movsl
out
jno
sbbl
sub
in
cwtl
mov
cmp
out
inc
xchg
inc
fndisi(8087
sbb
push
push
and
pop
pop
mov
lods
push
loope
sahf
pop
lret
sbb
add
push
pop
sbb
clc
inc
push
shlb
nop
inc
jo
cmpsl
mov
mov
sbb
fisttpll
mov
lea
pop
cmc
das
pop
test
fstpl
mov
mov
fisttpll
xor
popa
pop
sbb
lods
ret
push
cs
scas
out
sbb
jmp
add
mov
loop
mov
mov
adc
xlat
fdivr
negb
or
xor
popl
push
add
lock
xor
mov
mov
or
sbb
popf
inc
push
mov
or
and
lcall
out
cmp
push
mov
mov
xchg
sbb
rolb
sub
push
pusha
aam
sti
cmp
sti
mov
roll
pop
cltd
cs
mov
add
xor
pop
xor
cmp
xchg
stos
push
ret
popf
xor
pop
jns
pop
out
lret
mov
pop
jnp
notb
adc
lcall
in
mov
mov
out
imul
jmp
push
sub
inc
pop
sarl
cmp
mov
lret
jo
mov
adc
cmp
jle
out
outsb
inc
pop
imul
and
or
mov
enter
cs
or
ss
repz
mov
popf
dec
jb
mov
adc
iret
jae
add
jle
mov
mov
out
cmp
rcrb
adc
mov
out
out
rcrb
xchg
pop
dec
pop
pop
orb
adc
std
push
xchg
arpl
out
repz
int3
ljmp
pop
and
and
ficompl
mov
stc
adc
mov
sub
pop
std
ds
adcb
mov
push
mov
sbb
add
movsb
jo
aaa
jp
repnz
xor
in
xchg
fwait
incb
hlt
arpl
inc
loope
lds
adc
outsb
pushf
sbb
pop
inc
fiadds
rclb
pop
xchg
jb
cmc
sbb
pop
je
sbb
call
aas
pop
add
mov
data16
inc
and
outsb
fmull
jp
repnz
aad
adc
lods
scas
inc
fsubr
aaa
pop
cmp
and
dec
mov
ljmp
add
mov
mov
mov
call
jno
out
mov
xor
in
jmp
xor
jle
aaa
adc
push
push
aam
sub
pop
mov
std
inc
es
push
outsb
push
sbb
loopne
mov
dec
mov
xor
sub
push
add
mov
movsl
and
mov
xchg
push
xchg
sbbl
inc
fadds
sbb
pop
push
arpl
sbb
jne
jnp
aas
out
popf
cmp
inc
inc
push
inc
fidivs
ss
aaa
sbbl
sub
xchg
jle
notb
jecxz
inc
or
and
pop
in
stos
pop
call
outsb
insl
fisttpl
bound
stos
mov
jae
out
sub
icebp
lea
adc
and
ja
mov
mov
jp
push
mov
jnp
aaa
cwtl
mov
fistps
sar
bound
lds
and
ja
push
popl
pushf
sbb
jno
shlb
cmp
test
push
push
xchg
sub
push
dec
mov
fisubrs
mov
dec
pusha
push
dec
aaa
push
push
add
sub
or
fimull
fwait
inc
mov
out
sti
call
jg
outsb
sbb
push
xor
loope
pushf
fcomps
dec
sbb
xchg
or
daa
clc
mov
mov
add
les
cmp
pusha
testb
add
aam
cs
mull
shll
inc
sub
mov
mov
enter
pop
jecxz
mov
roll
repz
stc
add
aam
clc
push
ds
outsl
mov
ss
xor
push
icebp
fsubrs
push
jmp
loopne
and
shl
fnsave
xor
or
mov
js
ret
push
jp
add
mov
pop
dec
adc
leave
push
cmp
into
add
inc
xchg
cmp
and
lds
sub
rcrl
mov
mov
sbb
mov
sbb
jg
loope
xlat
jo
push
adc
scas
lahf
idiv
imul
out
out
loopne
loope
dec
aaa
or
mov
inc
mov
bound
jecxz
jne
mov
ds
mov
jmp
stos
jae
fmulp
jnp
rcrl
addr16
stos
shrl
std
pop
mov
enter
test
cmp
add
aam
xchg
jne
movsb
jo
repnz
xchg
adc
nop
inc
dec
inc
dec
aam
psubusw
and
loop
outsb
sbb
adcb
mov
dec
push
or
xor
push
adc
mov
xchg
cmp
imul
jecxz
imul
test
pop
int
xchg
sub
test
adcb
fisttpl
xchg
sbb
ja
jge
out
popa
sbb
fwait
xlat
adc
hlt
mov
movsl
mov
sbb
xchg
testl
ds
imul
lds
xor
sahf
arpl
das
push
outsl
dec
mov
shlb
cmp
add
lcall
call
mov
insb
xor
xor
xor
mov
loope
or
aaa
mov
loop
pop
int
pop
sub
xchg
cmp
and
test
aaa
xchg
lcall
cmc
mov
jmp
stc
lea
jg
mov
push
inc
fidivs
shlb
outsl
mov
xor
data16
les
mov
and
nopl
inc
pop
mov
rolb
ds
pop
sbb
test
pop
inc
ja
pop
cli
loop
and
into
xor
test
aam
adc
mov
sbb
sar
add
in
outsl
mov
pop
aaa
fs
mov
iret
or
pop
lock
fisttpl
pop
in
sbb
jmp
outsl
out
pop
ret
mov
fsts
popf
mov
fwait
divps
in
outsb
mov
jecxz
push
xchg
sbb
mov
inc
push
call
into
aas
cmpb
fstpt
and
mov
push
xchg
adc
and
push
je
sbb
xor
test
movsl
mov
xor
push
sbb
inc
push
nop
push
sahf
pop
push
loopne
loop
pop
jne
mov
aad
mov
insl
lods
push
cmp
mov
xchg
pusha
pop
repz
shr
and
enter
pushl
jp
sbb
jecxz
mov
jle
cmp
fisubl
cmp
sbb
into
inc
lea
int
xchg
icebp
fcompl
jp
into
or
icebp
pop
push
pop
push
inc
sub
adc
outsl
mov
push
ds
or
movsl
cld
outsb
xchg
jecxz
mov
lahf
lods
dec
mov
mov
repz
xchg
jae
movsl
aaa
fcomps
pop
pusha
pop
jo
fcmovnbe
xor
sbb
pushf
bound
xchg
lods
inc
sub
mov
movsl
ja
pusha
insl
pop
bound
in
sub
loope
mov
sahf
ss
or
jle
pop
bound
enter
lret
dec
mov
sbb
push
cmp
push
add
dec
mov
inc
aaa
jnp
mov
mov
pop
cmp
jb
aaa
add
lret
and
cld
mov
cwtl
sub
add
icebp
pop
mov
fs
outsb
aaa
inc
in
jbe
in
xchg
pop
pop
sahf
out
stc
loop
inc
dec
mov
stos
sbb
mov
popa
out
fsubrs
pushf
inc
push
fwait
arpl
rcpps
aad
aaa
pop
push
in
arpl
in
dec
mov
arpl
imul
or
push
inc
testl
shlb
mov
and
and
push
fwait
testb
bound
das
dec
mov
stos
adc
scas
aam
frstor
repnz
cmp
pop
and
and
cmpl
movsl
pop
jg
outsb
fdivl
outsl
cltd
jp
js
in
js
push
jp
add
lahf
dec
mov
adc
sbb
pushf
dec
cmpsl
popa
mov
adc
adc
loope
inc
je
xchg
mov
negl
sbb
mov
adc
ljmp
loope
push
pop
push
fsubrs
outsl
cld
inc
jle
xor
mov
sub
mov
rclb
mov
popa
pop
pop
es
aam
mov
insl
push
loopne
sbb
shrl
dec
cmp
jno
mov
add
jge
rcl
xor
jle
lret
mov
sub
test
xchg
pop
jno
or
sub
xchg
inc
push
shlb
shll
push
adc
ds
mov
push
imul
bound
push
mov
pusha
xchg
aas
inc
jg
sbb
inc
jg
fs
aaa
sub
jle
adc
xor
in
sbb
cmpsb
inc
shlb
fstpl
sbb
dec
shlb
imul
test
adc
dec
push
adc
std
aaa
stc
outsl
repnz
int3
and
call
enter
test
loopne
arpl
clc
pop
or
leave
lcall
inc
pop
pop
xchg
mov
stos
cmc
outsl
fwait
dec
gs
aaa
ret
ja
imul
add
inc
sbb
stos
inc
inc
cmp
pop
loopne
arpl
xor
sbb
and
lea
repnz
jne
jl
push
jo
add
out
sbb
ds
loope
cmp
mov
rcrb
imul
outsl
lock
shll
push
mov
aam
test
jecxz
mov
pop
pop
pop
add
arpl
mov
xchg
push
and
push
sub
mov
add
loopne
ds
f2xm1
push
rorb
adc
incb
pop
push
std
loopne
fmuls
jmp
rcll
nop
xor
mov
std
testb
sub
or
sbb
je
push
add
lea
cmp
push
in
adc
sbbl
call
sub
rolb
mov
sbb
xchg
push
push
and
push
lea
pop
dec
dec
in
mov
sbb
push
cmpsb
xor
aas
push
rorb
pop
leave
jns
stos
test
dec
pop
xlat
imul
aaa
push
sbb
outsb
sbbb
leave
pop
mov
int3
xchg
arpl
jb
lcall
fwait
mov
adc
pop
gs
add
sub
test
xchg
adc
in
or
add
mov
in
sahf
inc
mov
jbe
icebp
fidivrs
push
pop
pop
jne
std
push
add
out
jl
mov
sti
or
jl
jle
in
push
xor
mov
call
dec
jge
push
stc
pop
icebp
lock
stc
hlt
push
sbb
cmc
clc
std
mov
sub
jl
shll
sub
adc
scas
adc
jle
push
insb
add
icebp
test
je
sub
int
scas
mov
test
adc
test
nop
mov
enter
xor
mov
xor
jmp
std
xchg
test
inc
in
imul
cmp
rcl
sbb
push
movsb
stc
or
cmp
pusha
hlt
pop
sub
sahf
xadd
imul
or
adcb
enter
sbb
dec
in
cmp
jl
loope
adc
in
pop
mov
fisubs
fnstsw
inc
cltd
pop
dec
fimuls
add
sbb
inc
ret
dec
inc
outsb
sbb
loope
cmp
cmpb
mov
mov
sub
pop
sbb
leave
lret
lret
xchg
sbbb
xchg
xor
push
push
inc
pop
pop
sbb
fidivrl
addb
adc
and
outsw
mov
pop
in
jmp
push
ljmp
jb
dec
enter
imul
sub
addr16
lods
pop
test
loope
mov
or
arpl
inc
cmp
imul
add
jbe
iret
aaa
daa
pop
test
sbb
adc
cmpl
subl
pop
aas
aaa
roll
aad
arpl
mov
jge
into
pop
sahf
gs
scas
add
in
or
cmp
dec
sbb
pusha
mov
fldt
fwait
cmp
dec
shr
mov
push
mov
cltd
sarb
adc
mov
pop
stos
lock
pushf
stos
cs
mov
sub
js
cmpsl
push
jbe
xchg
repnz
mov
bound
mov
in
aam
lea
jle
outsb
outsb
pushl
sti
xor
ret
mov
mov
mov
fildll
pop
cmpsl
jnp
adc
jb
pop
xchg
fwait
mov
mov
lods
add
add
or
pop
jp
out
sub
in
pop
adc
pop
dec
push
mov
popf
inc
sub
js
pusha
inc
cmp
pop
lea
push
jmp
cld
addr16
cmp
inc
in
std
cmp
dec
sti
mov
pushf
mov
gs
inc
sub
push
dec
in
lock
ss
pop
cmp
enter
arpl
out
pop
fisubrl
adc
outsl
mov
xchg
popa
push
dec
jne
jmp
test
cmp
imul
aaa
jns
sbb
pop
ret
sarb
jns
shrl
int3
rcrl
or
rolb
notb
or
popf
dec
adc
xchg
icebp
sub
push
cmpsb
sub
push
push
adc
in
adcb
lds
cwtl
mov
dec
ror
pop
cli
dec
movsl
rcrb
mov
lds
inc
mov
scas
das
aaa
stos
mov
jmp
add
ret
or
dec
sti
daa
pusha
frstor
repz
adc
loopne
aaa
in
mov
dec
outsb
imul
push
inc
push
jle
jmp
les
movsl
jle
and
cltd
cmpb
pop
out
roll
inc
jae
subl
jbe
fsubl
movsb
sub
sbb
call
sahf
xchg
push
pop
push
lret
push
fdivr
mov
jle
hlt
fbstp
enter
popf
push
ror
sbb
lea
movsb
lret
insb
ds
or
or
mov
xchg
fsubrl
mov
jmp
inc
shll
fucomp
mov
stos
push
pop
pop
push
jae
pusha
or
mov
out
fdivs
pop
inc
sar
and
adc
mov
cmp
mov
test
mov
mov
rcrb
xchg
or
mov
js
stos
out
jo
xor
rclb
inc
mov
loopne
jmp
add
int3
xchg
fistpll
pop
adc
movsl
push
arpl
outsl
andb
xchg
dec
and
inc
push
jle
test
dec
roll
in
sbb
push
xor
adc
fwait
mov
in
or
push
or
inc
std
ja
dec
idiv
sbb
jns
pop
mov
leave
adc
imul
rcll
xchg
out
decb
adc
mov
pop
mov
test
push
ret
mov
lea
push
dec
and
test
pop
mov
and
les
adc
sar
sub
mov
mov
inc
fdivrs
xor
jbe
push
test
into
inc
sub
and
lods
out
sub
push
lcall
jp
addps
xchg
cmp
pop
iret
sbb
push
push
js
enter
aaa
into
sbb
cmpsl
push
lds
jo
and
pop
insb
jno,pn
pop
or
shrb
icebp
mov
aad
fs
sbb
inc
cmpsb
sbb
inc
fdivp
ror
data16
cmp
xchg
pop
inc
add
jbe
mov
scas
lret
push
fstps
pusha
movsl
out
push
sub
out
test
mov
and
xor
ret
outsb
sti
in
je
push
push
out
xchg
mov
pop
test
pusha
and
jmp
fldl
icebp
sbb
cmc
xchg
jl
jno
lahf
xor
jb
insb
cmpsl
out
xchg
outsb
out
mov
dec
rcll
std
sti
ss
lods
push
inc
dec
and
das
cmp
lods
sahf
push
jno
xor
mov
in
and
mov
outsl
fistl
push
jne
xchg
cmp
ds
lcall
fiadds
sub
push
arpl
pop
cmp
cmp
dec
pop
dec
sub
push
mov
pop
adc
mov
popf
sbbb
mov
sbb
test
jno
in
fadd
scas
fnop
pop
in
pop
xchg
push
adc
xchg
sub
cmp
adc
push
stos
sbb
enter
les
mov
idiv
cmp
jne
stos
inc
aaa
xlat
mov
dec
loop
dec
dec
cmpl
int3
in
shl
sbb
jns
and
sub
add
in
je
mov
imul
add
daa
out
cmp
movl
stc
sbb
ja
mov
daa
cmp
jns
adc
roll
sbb
mov
mov
cmp
outsl
hlt
shrl
lahf
enter
sub
popa
mov
mov
cmc
and
lods
lea
imul
dec
andb
rcrb
outsb
loope
mov
sbbb
rcrl
divl
mov
in
and
fwait
and
iret
es
pop
into
mov
mov
movsl
push
jmp
aam
mov
iret
hlt
and
cmp
pop
scas
inc
cmpsl
aaa
mov
in
fildl
xlat
xor
in
bound
fnstcw
inc
push
lahf
call
inc
fcmovnbe
push
test
sbb
dec
sbb
aas
and
into
xchg
lods
push
lea
out
push
in
test
cltd
cli
loopne
mov
push
test
pop
std
out
add
ja
pop
mov
mov
pop
xchg
pop
ss
aaa
jl
pusha
cmp
sbb
fcoms
shll
insl
jge
sub
ja
std
mov
dec
or
sbb
push
aas
cltd
ret
pop
and
ja
fs
mov
outsl
dec
cmp
mov
ficoml
or
xchg
sahf
int
rorb
cmp
fdivrp
aaa
insl
jb
aaa
cmpsl
sub
pop
in
pop
xchg
pop
inc
lods
pop
lret
mov
add
shrl
bound
mov
push
mov
sbb
testl
add
sbb
or
in
int
pop
pop
sbb
ljmp
loop
out
cmc
ret
mov
jmp
fld1
ss
test
mov
pop
and
ror
adc
fsubrl
xor
cmp
cmpsl
and
enter
mov
jb
lcall
dec
leave
mov
decl
add
pusha
jmp
cwtl
das
hlt
sbb
cmpsb
inc
xor
outsl
mov
dec
mov
push
xorb
xor
jmp
iret
xchg
pop
push
aaa
dec
arpl
outsb
movsl
mov
es
pop
jns
stc
gs
dec
jmp
and
sbb
cmp
xchg
cli
mov
inc
or
jbe
mov
xchg
imul
jle
test
jne
std
cmpsl
inc
stos
inc
data16
and
ret
fsub
jb
dec
push
add
ljmp
and
xor
mov
daa
clc
xor
push
and
aam
cmp
pop
fwait
pop
out
mov
xchg
and
shlb
ljmp
shll
and
jecxz
movsb
cmpsb
xchg
and
inc
lcall
and
hlt
fdivrl
dec
jno
inc
fistpl
inc
or
rolb
ss
or
mov
and
mov
jecxz
lock
outsb
ds
lret
lods
xchg
ret
inc
ljmp
std
pop
adc
mov
inc
cmp
cs
iret
in
stos
mov
arpl
mov
mov
cli
sarb
mov
or
ret
cli
jmp
pop
jl
fimuls
roll
ret
ljmp
arpl
sub
xchg
add
fisttps
je
test
outsb
push
clc
mov
jnp
popf
rcr
in
and
add
ljmp
dec
and
std
fs
movsl
je
lahf
jle
inc
pop
aaa
inc
xor
loope
jle
jl
add
jne
push
leave
repz
jnp
jg
adc
mov
mov
pop
pop
popf
sbb
dec
cmp
stos
leave
imul
pop
pop
decb
adc
xchg
pop
fstps
pop
lahf
mov
cmp
ja
ss
xor
xchg
pop
faddl
mov
mov
int3
cmp
fiadds
test
mov
int3
cmc
pop
add
pop
fnsave
mov
dec
fwait
loope
push
cmp
iret
push
pop
mov
push
mov
or
arpl
xlat
xor
mov
mov
mov
mov
lods
fdivs
dec
xchg
add
push
jp
enter
add
add
jp
aaa
mov
stos
jmp
mov
xor
dec
out
jg
aaa
clc
jbe
push
out
mov
lods
push
pop
lcall
test
pop
fldl
loopne
sti
out
pushf
cmpb
jno
sbb
in
pop
cld
daa
cltd
adc
jo
sub
and
xor
sti
dec
popf
imul
push
fsubrl
cmp
pop
pop
fldl2t
mov
stos
inc
mov
xor
aaa
lret
xorl
xor
out
out
mov
mov
push
mov
xchg
aaa
stos
repz
dec
movsl
ja
jbe
cmp
cli
push
or
xchg
jae
xchg
pop
pop
icebp
repz
sbb
loope
mov
cmp
mov
bound
icebp
cmp
popa
cmpl
sub
xchg
shll
dec
notb
stos
push
nop
pop
mov
cmpsl
aaa
es
xlat
leave
xor
sbb
push
fcoml
and
lret
mov
cmp
cld
mov
sub
and
jmp
mulb
mov
gs
push
mov
imul
addr16
js
addl
xor
fwait
sub
loop
scas
das
insl
aas
mov
and
or
xchg
xor
xchg
out
sbb
adc
inc
inc
adc
pop
cmp
pop
into
imul
fnstenv
adc
pop
jecxz
pop
jb
mov
mov
inc
mov
orl
push
ss
cmp
jne
xor
sbb
mov
test
test
push
jb
xchg
inc
sub
mov
aad
fdivr
aaa
mov
loop
pop
add
inc
or
pop
sbb
fmulp
inc
mov
xlat
cli
mov
dec
sbb
xlat
in
aaa
add
lret
bound
xchg
pop
rorb
jp
loope
push
adc
in
lret
sbb
pop
jl
cltd
adc
imul
add
icebp
xchg
mov
xor
jbe
sbb
popa
xor
stc
cmp
sbb
call
push
add
in
and
push
in
add
cmpsb
fwait
inc
cmpsl
adc
mov
rcrl
cwtl
stos
xchg
repz
mov
jno
add
std
xor
fldt
push
cmp
cmc
or
or
mov
mov
jb
lods
lcall
adc
ss
jecxz
pop
ds
mov
push
data16
cld
or
test
pop
aad
mov
lds
adc
xor
fldlg2
outsb
jae
mov
mov
repz
jl
push
sbb
adc
jo
mov
cmp
and
sbb
jecxz
fcmovu
mov
mov
das
pop
xor
out
sub
xor
cmc
cmp
add
sub
cmpsl
mov
packsswb
jp
scas
fstpl
xchg
sarl
dec
roll
sub
dec
adcb
cli
cmp
popa
mov
mov
adc
fidivrl
insl
inc
fmull
bound
dec
fwait
repz
imul
cmp
mov
rolb
dec
or
xchg
fdivl
ss
cmp
jl
add
push
int
xor
icebp
test
or
lea
ret
cmp
pop
sbb
inc
std
push
sbb
testl
add
sub
jge
push
leave
stc
mov
adc
dec
jne
xchg
sbbb
ljmp
jne
cmp
push
mov
imul
leave
mov
lock
pop
jp
xchg
cmp
push
mov
sub
addr16
jmp
or
adc
cmp
movb
in
push
scas
push
pop
iret
sbb
dec
shll
adc
icebp
push
into
movsl
push
data16
loope
pop
das
mov
sti
aaa
and
jbe
xor
movsl
mov
sarl
flds
xor
pop
inc
fcomps
lret
inc
dec
or
pop
fsubrl
popf
bound
and
subb
scas
nop
cmp
cmc
movb
inc
pop
sbb
dec
cwtl
jmp
adcl
rol
rdpmc
fisttpl
pushf
inc
add
sbb
jno
pop
shlb
dec
pop
adc
xor
and
jns
out
cmp
mov
sub
mov
movsb
add
cmpsl
mov
leave
push
push
fwait
adc
out
cmpsl
into
lcall
ds
cmp
subb
mov
push
mov
sub
xchg
cmp
pop
push
addb
into
jle
mov
adc
xor
xchg
jno
xchg
mov
add
outsl
aaa
mov
inc
es
in
mov
cltd
ds
scas
inc
jle
imul
sbb
aaa
sbb
pop
loope
pop
mov
cmp
push
sub
inc
loopne
jns
out
loop
xor
fistps
fmull
aam
push
sti
out
push
sbb
push
daa
push
and
adc
or
test
adc
mov
sbb
into
mov
fisttpl
sbb
dec
nop
push
adc
fwait
scas
adc
orb
addr16
in
in
in
outsl
pop
cmc
scas
cmp
sub
outsb
andl
mov
sbb
mov
xor
xor
movsl
lea
mov
mov
mov
ret
movb
jle
or
cmc
pop
xchg
test
in
dec
mov
adc
sahf
aaa
test
inc
outsb
push
mov
jo
jle
fwait
inc
xchg
dec
mov
call
ljmp
cmp
jae
jnp
std
cmpsb
pop
pop
push
xchg
pop
dec
xor
inc
sbb
sub
lret
jecxz
call
fs
enter
sbb
test
repnz
iret
fldcw
pop
and
lea
mov
inc
mov
push
hlt
adc
dec
xchg
pop
mov
je
mov
movsl
jle
int
ret
pop
pop
cmp
sbb
xchg
push
dec
scas
push
jmp
iret
lock
mov
aam
xchg
inc
mov
push
fwait
mov
jbe
rorb
jmp
ret
add
jecxz
mov
out
movsb
sbb
mov
jnp
mov
pop
mov
iret
sti
push
xchg
inc
popf
lret
test
aad
popf
jl
fmuls
push
aaa
lcall
jge
aam
pop
or
insb
push
mov
xor
test
cmp
nop
xchg
add
and
fs
mov
and
push
xor
sub
adc
icebp
ficomps
mov
xchg
adc
add
mov
fimuls
pop
das
aaa
mov
jmp
jo
pop
pop
ljmp
cld
pop
adc
lret
and
fidivrl
ss
and
pushf
or
dec
mov
sbb
sub
sbb
rcrb
cwtl
mov
xchg
push
das
and
les
loop
aaa
push
or
int
push
ja
int3
push
in
and
cmpsb
xchg
jnp
push
add
xor
add
in
movsb
jns
shl
pop
aam
and
and
pop
sarb
orl
dec
enter
and
fiadds
aas
mov
mov
add
sahf
pop
dec
sub
push
test
push
ds
lret
cmp
and
sbb
mov
sbb
xlat
sub
jnp
xor
inc
sbb
sti
jbe
pop
lods
push
pop
and
loope
ljmp
add
ss
lret
and
out
roll
popf
jl
add
pop
or
sbb
clc
out
push
rorb
mov
popa
mov
sbb
dec
pop
pop
jecxz
xchg
push
mov
pop
jmp
push
sbb
mov
push
mov
ds
add
cltd
sti
es
dec
test
icebp
repz
fstp
icebp
scas
lcall
jge
ds
iret
pop
xor
out
cmpsb
outsb
dec
test
mov
pop
dec
sbb
push
mov
inc
inc
sbb
mov
hlt
add
mov
sbb
mov
mov
out
imul
lahf
aam
add
hlt
shlb
mov
cld
push
loope
or
cmp
pop
cmp
or
flds
mov
ret
and
push
test
push
mov
cwtl
jg
imul
notl
fdivl
dec
fildll
sbb
push
mov
and
sbb
jno
icebp
push
jp
mov
mov
xchg
cmc
pop
fldenv
mov
cmc
orb
jecxz
cmp
jg
movsb
pop
stos
loope
aam
pop
jnp
jnp
or
fbld
pop
pop
in
in
cmp
movsl
xor
add
test
cmp
jle
frstor
sbb
outsl
insl
dec
pop
cmpl
push
loope
pop
sub
movsb
pop
mov
sbb
stc
cmpsl
dec
out
push
test
add
cmp
jne
mov
scas
arpl
jo
andl
pop
jbe
pop
pushf
cmp
sub
lods
lahf
mov
hlt
and
imulb
mov
pushf
stos
adc
stos
ljmp
dec
fstpt
ljmp
lods
mov
sub
shl
or
outsl
jae
bound
cli
lods
fs
xor
test
xchg
aam
loope
aaa
int
out
mov
insl
pop
mov
inc
pop
inc
js
enter
push
xchg
mov
jp
in
aas
clc
sbb
mov
sbb
push
jb
aaa
jns
and
in
decb
mov
bnd
pop
lods
xchg
mov
push
jne
out
scas
insb
dec
mov
sbb
in
movsb
aaa
outsl
fstl
mov
sahf
mov
mov
mov
aaa
cs
pop
xor
icebp
sahf
lahf
shl
mov
shl
les
scas
stos
xor
addr16
mov
xchg
dec
push
sbb
or
jne
push
imul
add
add
jae
divb
sti
mov
and
aaa
mov
insl
cs
xchg
aad
js
cmp
pop
in
sbb
pop
stos
aas
gs
in
mov
pop
jecxz
arpl
sarb
xor
ja
push
adc
or
sub
fwait
arpl
mov
ror
and
adc
dec
into
cmpsl
xor
mull
pusha
mov
in
insb
insl
data16
imul
dec
loope
nop
jecxz
xchg
insl
jecxz
adc
pop
fsubrs
cltd
add
inc
fmul
shlb
ja
adc
push
lods
in
aad
cs
mov
idiv
mov
push
jmp
push
nop
popl
dec
or
jbe
sbb
insl
call
in
pop
fstl
scas
cltd
lret
sbb
mov
outsl
fs
push
fadds
pop
pop
cmc
jl
jge
xor
stc
xchg
js
pop
test
mov
cwtl
xor
insl
jle
inc
fldt
sbb
les
mov
loopne
ss
sti
jbe
clc
jle
xlat
int3
pop
les
mov
pop
mov
in
popa
dec
jo
sub
rolb
cmp
xchg
jno
cmp
cmpsl
je
or
movsl
sti
mov
sahf
sub
push
mov
sbb
jle
jb
stos
shll
mov
or
cmp
das
popf
push
movsb
push
xor
add
inc
add
and
insl
out
sub
sahf
xchg
out
push
push
outsl
loope
mov
pop
mov
lock
popa
or
inc
je
in
pusha
dec
cmp
adc
sbb
jp
and
mov
shlb
push
iret
out
rol
sbb
arpl
pop
sbb
xchg
icebp
std
and
hlt
mov
push
push
js
fldcw
jmp
push
addr16
and
xor
xchg
call
imul
pop
pop
sbb
ds
cltd
mov
pushf
aas
mov
and
ja
jp
dec
cmp
fidivrs
cltd
adc
cmpb
pop
divb
repz
fiaddl
mov
push
add
out
pop
sub
jmp
sar
sar
add
test
cmp
mov
shl
insl
jb
pop
dec
cmp
adc
outsb
push
insb
lret
jnp
pop
push
sbb
aas
pop
push
fsubs
hlt
xor
in
out
add
inc
aas
mov
and
jnp
push
aam
idiv
in
cmp
nop
and
in
movsb
in
xchg
lret
mov
push
inc
jo
lret
pop
pop
pop
sbb
add
fmuls
das
stos
pusha
push
jae
loopne
mov
mov
test
fdivl
repz
inc
ljmp
push
outsb
sub
mull
in
nop
push
mov
sbb
inc
mov
icebp
xchg
cmp
es
lahf
popf
aaa
dec
push
rcr
mov
popf
sbb
sub
mov
insb
push
mov
cmpsb
dec
int3
loope
pop
or
aaa
adc
xor
dec
ds
sub
jl
sbb
fldcw
xchg
xchg
sbb
movsl
roll
std
add
pop
decb
inc
jg
mov
and
and
dec
lods
pop
stc
movsb
xchg
sbb
fstps
fcompl
fistl
adc
movsb
jnp
mov
mov
cmp
inc
call
fists
mov
pusha
inc
jecxz
jae
stos
xor
xor
and
cmpsb
icebp
das
lcall
neg
push
loope
fwait
sub
pop
fldcw
loope
jbe
in
jo
fildll
inc
sbbl
push
test
call
xchg
inc
in
cmc
test
std
jne
insb
push
or
cmp
pop
int
test
icebp
cltd
sbbb
fwait
jbe
jo
inc
mov
dec
jne
sub
hlt
push
je
in
mov
ss
sub
arpl
jmp
jge
pushf
das
xor
dec
stc
push
push
xchg
fucomp
mov
fistpl
pop
inc
es
cwtl
xor
mov
push
sbb
imul
add
aaa
lds
push
pop
gs
in
jl
roll
daa
test
loopne
out
outsl
inc
shll
mov
dec
inc
mov
mov
pop
in
notb
xchg
mov
cmp
and
nop
icebp
xor
ljmp
pop
dec
xchg
push
lret
outsl
hlt
test
aaa
sub
fnsave
pop
pop
add
jecxz,pt
adc
aaa
add
sti
sub
out
and
sbb
das
mov
fdivrl
and
hlt
cmp
loope
add
insl
push
pop
jo
lahf
jecxz
shl
mov
adc
fldcw
jge
out
jae
push
les
inc
sbb
push
cmp
rclb
add
or
std
cmpsb
pop
jmp
ss
int
push
mov
lods
cmpsb
and
push
push
mov
mov
outsb
lea
sub
hlt
xor
push
int3
lcall
bound
loope
mov
sbb
fstps
jbe
mov
pop
stos
fstps
loopne
adc
pusha
pop
lds
add
movl
sbb
jg
imul
dec
xor
jl
outsb
mov
jecxz
lods
mov
mov
addr16
ret
fs
or
shlb
es
imul
lock
sbb
mov
shrl
cmp
push
jb
aaa
add
ds
imul
repz
fnsave
push
in
mov
popf
mov
loope
inc
jmp
mov
sbb
movsl
jbe
push
push
mov
mov
cmp
pop
push
jmp
movsl
and
xchg
icebp
shrb
pop
in
mov
imul
push
mov
movsb
enter
push
mov
loope
xor
sub
mov
lcall
inc
pop
stos
mov
adc
ja
sbb
xchg
and
fbstp
aaa
xchg
outsb
scas
jge
jae
arpl
into
add
jb
insl
and
bound
pusha
aaa
test
imul
mov
dec
insb
cli
cld
aas
call
push
pop
add
pop
fwait
xchg
lods
pop
jb
sub
mov
dec
fdiv
jo
in
repnz
and
incl
sbb
aaa
mov
test
add
jge
push
and
aaa
mov
push
bound
sti
je
popf
jle
pop
stos
push
xor
adc
out
add
push
jo
pop
mov
lods
jge
cmpsl
jle
xchg
outsb
push
push
xor
push
and
cmc
std
dec
js
or
cmpsl
insl
pusha
rorb
pusha
sbb
rcrb
lods
mov
aam
xchg
sti
scas
sub
in
pop
mov
inc
jns
and
xchg
dec
cmpsb
mov
xor
inc
lods
lret
sti
xlat
imul
je
inc
push
shll
repz
jbe
dec
inc
inc
inc
inc
out
mov
mov
mov
sti
mov
push
mov
push
jmp
ficomps
std
cmpsl
xchg
dec
xchg
lock
leave
pop
push
dec
outsb
jo
cli
inc
adc
sbb
repz
call
sbb
bound
test
call
xchg
stos
loopne
cwtl
aas
jno
push
adc
mov
sbb
push
and
lcall
mov
jl
mov
dec
add
add
scas
pop
dec
lea
pop
pop
and
inc
dec
inc
sub
loopne
ss
cmp
pusha
mov
popf
fs
push
jecxz
out
lods
fcompl
insl
sub
lea
sbb
div
lcall
jmp
daa
push
loope
pop
sub
jns
cltd
inc
enter
pop
sbb
jb
xor
xor
repz
sbb
das
iret
fildll
dec
cmc
fwait
loope
cli
stos
in
pushf
push
nop
outsl
push
xchg
sub
or
ljmp
cmpsl
rclb
jmp
pop
iret
cmp
out
push
mov
insb
pop
pop
or
inc
cli
pop
pop
sub
stos
sbb
pop
orb
icebp
ja
das
hlt
flds
ss
in
nop
stos
sti
pop
xchg
arpl
push
add
stos
bound
xchg
push
push
or
pop
arpl
add
shll
mov
jl
jns
loope
imul
mov
push
and
xor
jbe
int3
aas
push
into
xor
mov
and
jbe
jo
outsb
inc
dec
xor
loope
negb
xorb
cli
push
mov
mov
aam
test
lcall
int3
repz
loop
aas
jmp
cli
sbb
decl
leave
pop
icebp
cmp
dec
insb
je
push
mov
lgs
mov
lea
or
daa
out
roll
fsubs
aaa
in
frstor
cmpsb
adc
jmp
sbb
sub
dec
aaa
sbb
pop
push
icebp
jecxz
fistps
inc
mov
fsub
test
mov
jns
pop
cmp
aas
shlb
aad
stos
dec
sub
adc
dec
pop
jmp
aaa
dec
push
push
sbb
jl
inc
jnp
dec
push
cmp
xchg
call
add
or
loope
in
lods
mov
je
test
fs
add
icebp
pop
sbb
jecxz
pop
lcall
cs
xor
shrb
mov
fucomp
movsl
cmpsl
mov
setns
add
clc
push
lea
rolb
dec
add
sti
ds
mov
and
imul
movaps
loopne
push
cmp
aad
inc
out
popf
scas
jp
pop
rolb
bound
inc
imul
in
in
ja
adcb
xchg
push
mov
sbb
ss
mov
jno
int3
outsb
jbe
mov
in
stos
pop
xchg
and
movsl
cmp
pop
js
sub
mov
pushf
pop
mov
dec
lcall
in
sti
or
loopne
ja
push
sarb
dec
sbb
popa
adc
add
push
xor
aaa
sub
add
movsl
mov
or
mov
jns
mov
lea
add
xchg
jo
or
insb
xchg
aaa
je
pop
sbb
mov
testb
fidivs
push
cwtl
xchg
fucom
dec
aaa
popf
scas
add
repnz
pop
in
xlat
add
rclb
inc
inc
imul
es
sbbb
fcoml
jle
xchg
pop
inc
std
repnz
dec
mov
mov
push
and
popa
push
push
mov
mov
imul
mul
sub
pop
insb
adc
ret
arpl
xchg
je
shl
cltd
jo
adc
icebp
pop
adc
mov
push
les
ss
mov
insl
cmc
add
cmp
jo
push
loope
dec
pop
dec
loope
jno
pop
icebp
outsb
pop
mov
push
push
lea
fnstcw
fsubrl
xor
push
push
aam
xlat
xchg
std
fdivrl
lret
test
inc
add
mov
push
fnsave
negb
aam
scas
xor
and
inc
cmp
aaa
int
fildl
pop
cmp
jae
mov
dec
lret
push
pmaxsw
ds
call
imull
adcb
pop
fs
aaa
xorl
mov
ret
dec
add
in
adc
and
cmp
movsl
cld
mov
int
popa
add
pop
pop
jge
test
cli
pop
pushf
aaa
push
aam
outsb
lcall
mov
xchg
jno
nop
lcall
arpl
es
sbb
cmp
sub
fsubrs
or
lods
mov
adc
mov
pop
movsl
testl
cmp
loopne
data16
ja
adc
aaa
adc
das
mov
cs
pop
pop
bound
xchg
fnsave
mov
adc
mov
jne
sbb
mov
inc
stc
jmp
js
pop
mov
out
mov
in
int3
mov
xlat
mov
xor
inc
pop
mov
clc
aam
pop
xor
ja
mov
je
mov
mov
sti
xchg
cltd
jmp
adc
cmp
inc
out
aaa
dec
popa
scas
mov
ror
xchg
push
stc
bound
mov
lods
out
mov
je
lock
jb
js
add
sub
pop
cmpsb
sbb
dec
and
cltd
scas
xlat
clc
pop
or
mov
out
push
jl
repnz
or
cmp
mov
icebp
xchg
jne
cmp
mov
iret
xchg
fsubs
inc
mov
fsubrs
fwait
pop
jae
jbe
mov
push
fistps
arpl
jl
sbb
dec
in
cmp
stc
xchg
push
repnz
inc
cmp
sbb
pop
add
push
lret
mov
inc
xor
cli
aaa
popf
movsb
push
jo,pt
call
into
dec
aad
mov
mov
gs
es
ret
enter
cmp
lret
mov
mov
pop
mov
std
std
adc
sub
cmp
loop
imul
sbb
aas
stos
fnstsw
cmp
je
ds
mov
ljmp
cwtl
dec
pushf
cmp
dec
hlt
or
xchg
push
add
in
push
fwait
ss
loop
xchg
sbb
adc
hlt
mov
ds
cmp
fidivrs
push
xor
sbb
in
pusha
inc
inc
lock
ds
sub
repnz
and
push
in
repz
mov
push
dec
jbe
push
mov
loope
ret
int
lods
stos
in
repz
pop
sub
scas
movhps
pop
xchg
sarl
and
fiadds
push
repz
add
jne
shrl
aad
adc
jmp
mov
jle
sti
test
idiv
push
fstpl
mov
or
mov
mov
pushf
aaa
pop
fiadds
mov
or
pusha
enter
lcall
dec
mov
pop
xor
test
repnz
mov
add
cmp
sbb
test
stos
cmp
sbb
les
mov
pop
aad
cmp
dec
add
stos
sbb
scas
sub
fucomip
cltd
in
cmp
cmp
mov
in
jns
imul
repz
xchg
cmp
sti
mulb
lret
xor
mov
add
mov
push
sub
add
cs
iret
xchg
jbe
into
jge
inc
enter
pop
cmp
shll
aas
inc
aaa
mov
pop
pop
icebp
jne
iret
or
aaa
mov
dec
movsl
rcrb
popa
xchg
lcall
je
jbe
nop
xor
sahf
add
in
and
ja
add
loop
cltd
mov
sbb
insb
scas
mov
gs
push
sbb
jne
int
jnp
push
leave
pop
xchg
movsl
js
fstpt
xchg
push
inc
test
inc
cmc
popf
adc
arpl
push
or
jno
pop
idivl
pop
imul
lcall
sub
dec
mov
push
jg
pop
cmp
dec
pop
jnp
pop
mov
jl
pop
cmpsl
inc
xor
out
mov
fbstp
scas
cmp
jno
jge
xchg
iret
into
cltd
mov
mov
jle
adc
xor
stos
in
addr16
je
mov
push
sbb
push
hlt
enter
cs
adc
loope
data16
stc
pop
movsl
ja
dec
mov
aad
lret
pop
rolb
sub
cwtl
outsl
mov
push
bound
stc
stos
outsb
pop
mov
pop
sub
aaa
add
mov
inc
in
inc
jns
jne
push
les
bound
jge
pop
out
push
fwait
aaa
cmp
lods
das
loopne
jmp
lret
jbe
adc
push
sbb
xor
sbb
icebp
lahf
adc
push
ds
ja
fisttpll
xor
sbbb
lea
jbe
sub
insb
inc
xchg
or
aam
xor
adc
data16
jno
rolb
xor
or
cmp
je
add
mov
push
inc
dec
sbb
ret
in
xorl
inc
pusha
mov
fisttps
push
add
test
inc
xchg
sbb
push
loope
test
imul
push
xor
aaa
jecxz
ss
mov
adc
loop
aad
fsts
jne
pop
mov
ljmp
xchg
inc
pop
jl
sbb
xchg
outsb
neg
xchg
sbb
jl
pop
add
sti
pop
out
or
out
and
mov
fsub
jo
icebp
cmp
lret
js
cmp
push
cmp
sbb
cltd
sti
outsb
cmp
cmp
roll
jge
nop
adc
jno
ret
test
ffree
roll
bound
jg
fsubrl
popa
xchg
or
pop
into
hlt
out
aaa
sub
in
in
dec
rolb
in
enter
into
adc
push
mov
repnz
dec
and
inc
cmovbe
sarl
je
pushf
mov
sbb
int3
xlat
mov
push
pop
nop
sbb
sub
sub
sarb
or
lret
enter
xor
cmp
jnp
sbb
add
cmp
shl
xchg
push
cmp
pop
ficomps
mov
pop
jge
mov
sbbb
dec
imul
adc
imul
clc
jl
scas
pop
outsl
int3
sbb
pop
jmp
push
pop
push
cltd
cs
dec
dec
and
jp
ss
frstor
pop
andb
jge
faddl
add
sbb
pop
ss
nop
lret
loope
jmp
lea
fnstenv
fs
sub
lahf
or
sbb
iret
mov
mov
repnz
jle
pop
movsl
shll
and
mov
sbb
push
in
arpl
xlat
shr
call
aad
sub
xchg
adc
pop
mov
mov
adc
pop
mov
mov
hlt
jnp
std
nop
arpl
pop
mov
or
jbe
mov
stc
je
sbb
rcl
fsubl
add
cltd
push
mov
aaa
es
repnz
push
xchg
lahf
push
orb
fstpt
aaa
aam
inc
ss
pop
iret
mov
cmpsb
jmp
mov
inc
cwtl
pop
pop
das
rclb
mov
incb
add
jb
inc
mov
lods
shr
fimull
repz
shr
lock
enter
adc
push
enter
push
ss
xchg
ss
sbb
dec
lcall
popa
cld
or
dec
ljmp
push
and
mov
dec
loope
ret
fwait
pop
mov
sbb
lock
xor
dec
in
sti
movsb
inc
mov
mov
push
lock
adc
fxch
scas
out
loope
fucomp
dec
push
add
out
adc
xor
push
pushf
or
push
into
cmp
pop
je
dec
push
jbe
dec
cld
roll
pop
sbb
mov
xor
cmpsl
or
push
adc
jne
xchg
inc
lods
pop
cmp
sbbb
xlat
cwtl
aam
bound
addr16
aaa
fisubrs
mov
jl
decb
lahf
in
sbb
and
xchg
fstps
sub
sub
pop
jge
push
pop
mov
incb
std
jno
fdivr
sbb
mov
add
sbb
mov
add
test
dec
add
in
negb
xchg
lahf
fistpll
mov
push
out
movsl
out
repnz
sbb
xor
pop
loope
push
jbe
adcl
xchg
pop
adc
mov
in
aaa
mov
mov
pop
cvtdq2ps
aaa
add
outsl
jmp
or
gs
scas
cmpsl
outsb
pop
adc
fldcw
hlt
dec
ds
or
arpl
sbb
bound
subl
dec
popf
iret
mov
das
loope
test
xor
jb
icebp
arpl
ficompl
inc
mov
xchg
aaa
inc
cmp
stos
jle
cmp
fcompl
ja
in
dec
mov
stos
cmpsb
sbb
xor
pop
xchg
scas
lods
test
lret
push
in
jge
pop
call
pop
pop
jo
push
negl
gs
jle
inc
out
roll
sbb
test
in
movsl
mov
sbb
adc
scas
rcll
rcrl
mov
enter
pusha
leave
push
nop
xor
mov
jp
aaa
nop
xorb
repnz
popa
mov
stos
stos
outsb
jae
aaa
rorl
ds
push
xchg
int
cld
push
lcall
pop
mov
dec
lret
pop
push
add
xchg
mov
sbb
in
or
mov
fsts
pop
or
in
pop
xchg
lret
cs
add
mov
dec
mov
daa
lret
enter
sarb
jge
sti
pop
pusha
movsl
arpl
jle
test
sub
and
cmp
sbb
pop
and
sarb
cmp
pop
sbb
mov
ja
pop
lahf
inc
mov
push
popa
lcall
lret
or
dec
pop
ss
arpl
outsb
sub
adc
lea
dec
ficoms
or
aaa
movsb
pop
push
jns,pn
es
in
mov
pop
mov
es
xor
push
cli
push
mov
aaa
js
dec
fnstsw
loope
xor
lock
sti
je
sbb
insb
push
fdivrl
fsubl
popf
test
xchg
cmp
scas
popf
dec
aad
lods
pop
in
pop
stos
fiadds
jo
stos
lret
fs
xchg
jg
shl
add
ljmp
jp
xchg
mov
jno
arpl
mov
hlt
loope
add
pop
repnz
ds
mov
xchg
xchg
adc
jmp
es
stos
cld
stc
out
cmp
pop
lods
fs
in
insb
push
es
jle
mov
mov
mov
ljmp
and
pop
cmove
ret
xchg
clc
les
jp
inc
cwtl
dec
cli
jo
mov
scas
pop
aas
xor
notl
inc
push
ret
aam
shll
sub
fwait
add
mov
cwtl
out
cmp
loope
out
pushf
jecxz
jl
jecxz
adc
shlb
xor
aaa
sub
inc
mov
jp
test
into
nop
adc
or
das
add
movsl
adc
mov
mov
les
bound
testl
xchg
mov
push
sbb
xor
jbe
mov
int
sub
lret
outsl
add
jno
repz
mov
out
aas
das
sub
nop
cltd
mov
adc
hlt
aaa
stos
imull
jne
in
xchg
std
pop
inc
outsl
inc
pop
sbb
sbb
sbb
mov
cmpl
sbb
imul
inc
mov
leave
jmp
jp
inc
test
enter
mov
out
mov
push
insl
jmp
ss
test
fsubp
and
repz
lods
sub
inc
mov
cmp
cmpsb
lock
les
sbb
push
and
fnstsw
insb
decb
inc
mov
dec
jmp
lock
and
arpl
adc
insb
cld
out
flds
loope
add
inc
loope
sti
lret
aaa
aas
xchg
cmpsl
mov
add
mov
jg
dec
ret
sub
jmp
mov
add
aam
pop
fldcw
sub
push
arpl
call
inc
inc
ss
mov
test
inc
inc
jle
in
mov
ret
inc
lcall
jg
pop
cmp
ss
movsl
cmp
inc
dec
xchg
sbb
es
sbb
lds
mov
pop
inc
outsb
lods
addr16
xor
insb
push
xchg
daa
xchg
int
xor
push
pop
xor
ds
mov
pop
aaa
lret
or
pop
sub
lock
bound
aaa
cmpsb
stc
mov
mov
scas
insb
adc
mov
dec
xchg
fistpl
cltd
jle
popf
rcrb
outsb
sbb
sub
push
fndisi(8087
mov
cmp
push
cmc
sbbb
mov
xchg
pop
cmp
pop
ret
push
cs
outsl
adc
test
mov
and
pop
add
out
fcoms
js
into
xor
mov
push
outsb
mov
cmp
mov
repz
call
lock
sbb
mov
cmp
push
jbe
stos
mov
ret
outsb
push
dec
into
sbb
ret
jp
pusha
jle
dec
add
les
push
push
cmpl
cmp
or
mov
jg
into
aam
clc
and
call
mov
out
out
mov
dec
xchg
dec
dec
stos
cmpsb
in
imul
fcmovb
popf
outsb
xchg
mov
fistpll
das
arpl
out
push
adc
mov
test
sbb
pop
cmp
inc
xchg
loopne
inc
mov
adc
cld
xor
lea
mov
or
xor
xor
pushf
and
in
enter
sbb
aas
outsb
and
dec
adc
ds
jb
scas
dec
add
loopne
mov
push
mov
jo
xor
or
lock
inc
cmp
ds
fdivrs
push
mov
dec
mov
sbb
je
insl
and
gs
push
dec
xor
lret
fistpll
push
add
or
cld
and
or
roll
cmp
repnz
sbb
jno
cmp
inc
cmc
xor
test
cmp
pop
mov
pop
or
es
scas
xchg
cmp
in
inc
loope
pusha
mov
jmp
pop
js
or
xchg
cmpsl
xchg
mov
ds
mov
pop
sub
jle
dec
sarl
pusha
push
std
scas
push
pop
or
cmp
popa
je
in
cmp
dec
and
outsb
push
pop
pop
mov
push
cmp
xchg
loop
test
push
test
fildll
pop
jns
popf
or
cmp
stc
push
std
mov
pop
inc
rcl
mov
xor
push
enter
push
scas
inc
push
ss
xchg
jle
bound
or
dec
sub
dec
xchg
cmp
cmpsb
sarl
cmp
add
out
mov
ds
jno
ret
push
bound
jle
push
outsl
mov
jno
hlt
cmpsb
icebp
hlt
je
push
pusha
jno
cwtl
pop
cmpsl
nop
add
push
imul
fwait
mov
cmp
inc
jb
jo
in
push
pushf
in
jo
out
mov
jnp
aad
imul
ret
pop
int3
add
inc
push
pop
aam
mov
mov
mov
mov
pop
adc
mov
mov
cmp
and
fldenv
pop
push
test
daa
jne
jns
mov
xchg
and
imul
ret
lcall
sarb
mov
xorl
sbbb
out
push
inc
push
aaa
sahf
test
and
adc
push
lods
cld
pop
stc
sbb
aaa
xor
dec
adc
mov
cmp
popa
dec
out
inc
cmp
sub
xor
jmp
test
ret
in
xchg
sahf
mov
aaa
add
sbb
pop
fistps
out
cmp
adc
lock
inc
sub
lret
jb
push
inc
pop
in
pusha
pop
pop
lea
sbb
push
lea
dec
and
jle
imul
xchg
or
loope
arpl
mov
cmp
pop
push
mov
jne
lea
shr
push
inc
mov
fisubs
push
inc
sbbl
push
mov
mov
jns
cmpsb
ja
mov
sbb
add
jnp
mov
xchg
shlb
bound
pop
pop
in
loope
fistps
aaa
cltd
sbb
insl
jbe
arpl
sub
adc
in
mov
push
mov
outsb
add
pop
or
test
lds
mov
or
ds
inc
dec
je
clc
aad
push
fists
cmp
or
and
fidivrs
xchg
test
and
mov
popf
sub
das
lahf
pop
inc
nop
enter
push
hlt
dec
pop
lahf
clc
pop
out
sahf
or
std
inc
fsts
inc
addr16
xorl
pop
push
xor
nop
or
mov
sbb
xchg
and
pop
hlt
jge
in
out
addr16
scas
int3
sahf
pop
aas
divb
push
xor
fadds
scas
push
jl
stos
adc
hlt
xchg
xor
inc
xchg
or
dec
jo
aaa
jl
add
mov
dec
cs
std
fdivrs
aaa
lods
jle
sahf
stc
pop
push
in
les
mov
sbb
iret
push
arpl
and
jle
pop
push
jae
das
add
enter
pop
xor
lcall
pushl
cs
in
arpl
pop
cli
jno
add
je
repnz
sbb
lret
push
sbb
mov
fsubl
ja
das
sub
movb
aad
jmp
add
outsb
xor
jbe
xchg
push
ror
xchg
and
sub
sbb
mov
inc
inc
or
dec
call
stos
xchg
mov
fmull
shll
dec
ss
adc
scas
dec
mov
mov
out
dec
mov
pop
std
addr16
lahf
bound
sbb
scas
sbb
fdivs
mov
in
push
adc
pop
cli
jo
xchg
ljmp
int3
ret
insl
pusha
addr16
call
mov
or
mov
bound
gs
jns
sbb
jl
inc
aaa
or
jge
lock
in
mov
movsl
cmp
push
inc
and
iret
call
push
pop
push
popf
lds
arpl
cmp
mov
hlt
out
mov
lods
or
pop
lock
mov
cmp
sub
jge
sbb
adc
cmpsl
push
out
mov
mov
lret
outsl
aaa
fdivl
pop
sub
stos
out
jge
aaa
cmpsb
mov
aam
jp
jg
sub
ret
stos
pop
mov
inc
pop
dec
leave
fnsave
mov
push
and
adc
inc
call
xchg
and
daa
insb
or
shlb
fimull
cmp
inc
xchg
ret
dec
outsb
push
inc
push
popf
repnz
pop
jae
sti
pop
repz
lcall
dec
dec
inc
fnstsw
mov
stos
lret
mov
pop
add
push
pop
mov
and
scas
lret
lret
pop
cmp
hlt
xchg
add
cmp
out
adcl
fwait
out
xchg
test
pusha
loopne
fwait
aaa
test
jmp
mov
clc
jbe
enter
sub
inc
sub
bound
in
orb
les
dec
icebp
cltd
push
sub
lret
stc
sbb
aam
sbb
lea
movsb
ret
iret
push
das
xor
sti
xchg
or
fadd
mov
pop
xchg
je
inc
jmp
jle
or
xchg
push
into
or
or
dec
lods
fildll
repz
jl
jns
pop
cmp
push
testl
cs
nop
negb
pop
jbe
push
sti
sbb
or
xlat
xchg
movsb
in
adc
neg
adc
scas
cmpsl
fstpl
test
push
pop
xchg
repz
sub
sbb
pop
adc
pop
neg
pop
dec
add
aaa
sti
cmp
aam
testl
dec
jo
sbb
push
adc
movsl
enter
scas
and
xchg
popf
cmp
pop
push
rclb
ret
pop
iretw
in
insb
sbb
fists
js
cltd
inc
inc
aaa
loop
mov
jo
fwait
jg
nop
test
cmp
inc
jg
in
xor
shrl
fnsave
sti
sub
fnsave
jbe
jnp
out
pop
pop
pop
push
sub
test
shlb
pop
fdivrl
mov
add
rcrl
int3
clc
pop
rcrl
outsl
adc
sub
sub
fs
ss
cmpsl
lock
mov
push
stc
cltd
in
and
inc
aad
pop
adc
sahf
dec
pop
jbe
lea
jb
sbb
jg
sub
pop
mov
ss
call
stos
lcall
pusha
lret
cmc
mov
dec
mov
pusha
ljmp
fprem
pop
or
ret
xor
and
xor
or
lahf
ljmp
pop
fdivrl
push
inc
lock
inc
pop
inc
xlat
push
push
xor
das
push
mov
fdivl
mov
cli
lea
dec
xor
movsl
cmpsl
sub
pop
sbb
jb
sub
lds
stos
mov
or
mov
jle
mov
add
xchg
push
adc
adc
lret
or
sbb
dec
xor
xlat
bound
cmp
dec
pop
ror
in
or
loopne
test
jbe
sub
orb
pop
mov
cmpsl
cs
ljmp
pop
sub
xor
push
mov
pushf
imul
pop
jb,pt
pop
and
push
popa
pop
icebp
jbe
repz
cmpsl
mov
sub
mov
xchg
xchg
ss
jnp
cwtl
add
xorb
xchg
lock
inc
fmuls
push
pop
hlt
or
ljmp
inc
jp
push
jle
aaa
fdivr
outsb
andl
loopne
fiadds
frstor
ds
xlat
imul
pop
outsb
add
mov
jo
mov
sbb
loope
rcl
add
xor
pop
xchg
jecxz
aaa
imul
lahf
fstl
es
fldenv
lea
pop
sub
shll
sar
dec
mov
push
push
inc
mov
outsb
stc
movsb
pop
pop
lock
aaa
mov
pop
call
inc
sbb
mov
xchg
or
xchg
test
adc
pop
jp
stos
dec
cmp
fmul
xchg
aam
ret
repz
push
popa
mov
popf
jecxz
mov
lret
pop
pushf
sbb
aas
lret
mov
add
inc
lret
adc
loopne
mov
hlt
inc
cmp
in
ret
addr16
mov
in
stc
mov
inc
test
push
and
cli
sbb
fcmovne
push
dec
clc
jecxz
push
cli
mov
enter
sbb
mov
dec
orl
mov
or
jb
xchg
in
jmp
push
or
mov
imul
inc
scas
sub
sbb
mov
fs
test
sbb
push
xor
sub
mov
into
in
push
testl
pop
mov
je
xchg
mov
std
pop
adc
fidivs
cld
push
xchg
xchg
pop
fs
aas
shlb
mov
mov
gs
mov
repz
xchg
add
rolb
test
xor
aad
out
inc
fsubr
sahf
push
pusha
cmp
cmc
fisubrs
add
sbb
push
add
push
jle
movsl
das
aaa
flds
mov
sub
orb
fsubl
pushf
leave
adc
popa
mov
pop
loope
imul
inc
jmp
shrl
inc
loop
add
cltd
push
nop
inc
pop
mov
outsb
jb
cltd
inc
jl
add
cli
pop
lods
cmp
jo
jb
adc
out
popa
xor
mov
mov
fs
cltd
in
jo
xor
pop
mov
mov
dec
bound
dec
jle
pop
cmp
sub
dec
mov
aaa
int3
and
cmc
pushf
into
inc
je
sbb
and
shl
pop
sbb
push
xor
add
fmul
xchg
aaa
or
mov
xchg
pop
sbb
mov
rcrl
movsl
and
in
lods
ffree
ficomps
fistps
sub
dec
data16
cli
xlat
push
sub
mov
pop
mov
aaa
xchg
lahf
aaa
cltd
and
sahf
fstpt
test
xchg
adc
out
xchg
call
repz
leave
arpl
arpl
imul
push
pop
pop
fsubr
adcl
cmp
into
fidivl
fldl
jnp
dec
cs
pop
lods
fbstp
out
mov
in
mov
daa
loopne
sahf
adc
xchg
xlat
jbe
or
and
sbb
subl
addr16
pop
pop
stc
and
clc
push
push
sbb
sti
jbe
push
jne
movsl
dec
roll
pop
imul
xchg
aas
adc
xor
mov
pusha
aaa
mov
jg
sub
ss
enter
cmp
int
sub
sbb
inc
inc
xchg
int
xor
imul
jecxz
cltd
fistpll
nop
dec
push
mov
or
xor
call
aam
and
test
mov
push
out
xor
xchg
aam
xchg
frstor
pusha
sbb
mov
movsb
imul
push
loop
mov
inc
push
push
add
cmc
clc
add
iret
ss
pushf
inc
lods
sbb
js
stc
pop
or
xchg
inc
rcll
jp
mov
sbb
dec
insb
and
mov
clc
inc
roll
mov
pop
loopne
sbb
mov
das
fildll
xchg
sarb
mov
loope
lcall
sub
sahf
lods
dec
jl
mov
sbb
test
pop
jge
mov
lods
or
mov
imul
sbbl
sub
mov
push
jmp
into
pusha
or
push
out
and
mov
sbb
cmpsb
aaa
popf
xchg
sti
adc
jbe
sbb
cmp
xchg
dec
pop
arpl
bound
sbb
out
out
mov
push
jmp
mov
push
mov
mov
scas
test
jne
dec
addl
push
cmp
in
pop
movsb
fwait
iret
pop
jmp
and
test
mov
mov
loope
enter
lods
xor
mov
orb
aas
pop
std
xlat
mov
pop
out
and
cmp
in
add
mov
push
repz
adc
fucomip
jle
dec
in
sbb
mov
cmp
xor
mov
push
test
jg
cmp
sub
pop
mov
in
outsb
cmp
sbb
imul
rorl
or
aas
ljmp
adc
inc
bound
push
cltd
pop
ficomps
mov
adc
mov
or
insb
aaa
push
push
mov
sbb
dec
cmpsl
fsubrp
in
push
cltd
dec
sub
pop
inc
jb
pop
mov
mov
pop
adc
mov
call
mov
mov
or
stos
xchg
rorl
pop
out
sbb
mov
fadd
test
add
out
jae
xchg
xlat
fcoms
push
sub
ss
pop
repz
push
push
leave
sbb
add
fmuls
lcall
lods
sbb
sbb
mov
add
mov
inc
pop
mov
mov
xor
push
inc
sbb
aad
pop
dec
push
xor
inc
jge
inc
outsl
nop
outsb
jle
jnp
repnz
es
dec
mov
pop
sbb
mov
mov
mov
inc
dec
sub
mov
dec
push
lcall
icebp
xchg
pop
and
stos
pop
loop
shlb
push
cwtl
mov
fnstenv
mov
cmp
and
pop
sti
inc
add
and
orl
cmpsb
cmp
insb
or
lock
out
pop
sbb
mov
in
je
aam
lods
pop
sub
aaa
push
cmpsl
dec
sub
mov
out
jecxz
fldl
call
addb
cmp
lret
test
jp
cmp
cld
pop
aam
ret
ss
or
sbb
xchg
mov
aaa
test
cmp
ret
into
mov
mov
pop
and
cmp
add
pop
andl
xchg
or
shr
sbb
aaa
sbb
sbb
repnz
mov
mov
outsb
loope
test
mov
mov
nop
out
ss
pop
movsl
adc
mov
pop
pop
lock
push
int
inc
cmpsl
xchg
outsb
mov
pop
xchg
pop
mov
push
push
imul
push
jnp
test
rorb
mov
fdivrs
jle
push
in
aaa
in
lea
mov
push
dec
imul
cmpsb
inc
pop
pop
leave
xor
mov
mov
in
orb
shrb
notl
in
mov
int3
lret
dec
pop
sbb
jne
gs
daa
mov
xor
dec
sub
mov
stos
enter
stos
xor
ss
cmc
pusha
cmpsb
inc
sub
xchg
aaa
cmp
stc
aad
mov
or
adc
test
sbbl
movsl
mov
adc
rorb
mov
mov
jecxz
and
cmp
sbb
in
out
and
sbbl
cmp
dec
lret
out
in
mov
cs
leave
push
adc
cmp
scas
in
insb
cwtl
aam
xorb
fstpt
jb
pop
push
test
xchg
or
xor
lahf
fnstcw
lret
shl
push
pop
rsm
mov
jo
inc
pusha
aaa
fldt
jo,pt
arpl
xchg
and
jne
inc
insl
dec
loope
rcrb
pop
jge
std
leave
cmp
aaa
inc
xor
jne
jno
mov
adc
and
push
in
sub
sbb
test
das
mov
pushf
mov
and
xchg
inc
pop
pop
mov
jnp
outsb
cmp
je
jge
out
push
inc
arpl
nop
mov
scas
loope
stos
mov
sbb
enter
adc
iretw
outsb
xchg
sbb
and
and
fisttps
inc
stos
jne
mov
fdivrl
mov
fsubr
mov
shrb
ljmp
push
insl
sub
mov
test
aas
xorl
cmp
or
inc
outsb
in
out
dec
add
popf
push
ljmp
outsl
dec
sub
add
adc
repz
jbe
xor
pop
mov
mov
lea
xchg
aas
cmp
xchg
sub
into
mov
and
sti
sub
outsb
jecxz
mov
rcl
xchg
addr16
xlat
test
sahf
je
sbb
pop
push
popa
ss
fmul
movsb
mov
ret
ds
sar
aad
in
mov
icebp
pop
push
mov
pop
in
movsl
inc
sahf
ds
mov
xor
xchg
jl
loope
je
call
and
jo
addr16
shrl
jne
shl
out
push
movsb
cmpsb
popf
loope
adc
arpl
repz
pop
jae
stc
cli
mov
sbb
adc
push
icebp
ret
fwait
insb
inc
inc
shrb
dec
or
shrl
jb
sub
mov
loop
sbb
and
ds
jg
jp
jmp
in
stos
pop
inc
insb
push
repnz
in
out
pop
push
dec
shll
es
imul
cmp
or
pop
shlb
mov
jo
cltd
pop
stc
mov
mov
out
imul
rorb
cmp
add
xchg
in
cmp
aaa
xor
jge
xchg
xor
lds
sbb
adc
sahf
andb
fs
xor
repz
cwtl
ror
jmp
push
clc
or
jae
push
push
divps
jo
nop
das
fs
aas
pusha
xlat
and
nop
jg
push
and
fwait
cmpb
loopne
lcall
scas
shrl
loopne
xchg
call
pop
hlt
mov
xor
int3
sbb
leave
mov
jbe
push
ret
into
inc
loopne
sbb
ret
loope
ret
xchg
sbb
jge
and
mov
push
cwtl
aad
adc
mov
pop
sub
inc
aam
cli
arpl
pop
iret
cmp
push
pop
push
pop
mov
stos
sbb
adc
inc
idiv
orb
testb
mov
sub
xchg
sbb
dec
jbe
out
fwait
pop
ljmp
xlat
sub
cmpb
sub
push
mov
jle
add
lea
repnz
inc
fldt
mov
je
ret
sub
sub
sub
push
fwait
test
cmp
aam
mov
sarb
cmpsl
push
aas
outsb
je
push
outsb
adc
jnp
in
cmp
push
dec
cmp
xchg
test
outsb
mov
orl
cmp
ja
aam
mov
std
les
pop
jb
cmp
ss
jle
pop
cmpsb
add
movsl
es
xor
push
inc
imul
adc
bound
mov
mov
xchg
clc
xchg
or
pop
or
pop
mov
dec
dec
inc
xor
fdivrs
sahf
push
hlt
out
sub
sbb
adc
sbb
lahf
pop
out
imul
ret
mov
es
outsb
mov
icebp
addb
xchg
int
in
pushf
ds
pop
out
enter
aaa
xchg
aad
mov
data16
stc
loope
push
sub
outsb
call
xchg
in
or
pusha
fnstcw
call
xchg
stos
jns
mov
scas
aad
aaa
aas
out
pop
mov
in
lret
bound
outsl
mov
sbb
mov
push
outsl
mov
xchg
adc
inc
sbb
dec
loopne
jle
sub
shrl
insl
jbe
fistps
ja
int3
add
icebp
test
ret
arpl
lods
cltd
push
push
and
mov
or
aaa
insb
jge
dec
lcall
in
mov
sti
cwtl
dec
lea
bound
dec
outsl
fdivl
es
jecxz
jne
push
cmp
xchg
and
or
call
sub
aaa
push
je
dec
mull
push
mov
cmp
fiadds
mov
add
pop
nop
cmp
into
lods
mov
ljmp
jge
mov
lods
es
adc
and
outsb
add
and
stc
jecxz
int3
pop
or
push
popa
in
adc
push
aaa
mov
das
pop
cmp
cmp
loopne
insb
xor
lea
xchg
sar
sub
xor
and
test
icebp
push
fnstsw
adc
inc
movsl
pop
cmp
pop
fdivl
jnp
fisubrl
es
mov
mov
adc
xchg
jle
dec
loopne
pop
or
mov
xchg
adc
sahf
push
leave
daa
and
pop
pop
xchg
pop
into
movsb
or
dec
add
push
push
js
js
es
dec
sub
lahf
das
add
and
negl
stc
aaa
jp
mov
jle
lea
lock
lea
das
gs
jp
pushf
fnstcw
pop
clc
jge
orl
dec
and
cs
mov
pop
sbb
hlt
jl
arpl
lods
xlat
in
jge
jno
das
jl
iret
and
lea
jo
daa
fistpl
jmp
pop
xor
cmpsb
or
inc
push
adc
into
pop
mov
not
pop
popf
addr16
int
sbb
imul
jle
fcompl
cmpl
adc
mov
sub
jmp
adc
bswap
shlb
addr16
je
sbb
and
push
ffreep
jbe
adc
add
pop
dec
xchg
jecxz
loope
test
or
repnz
adc
ds
imul
cmp
jge
jne
jo
popf
sbb
jle
jns
dec
push
lret
ja
call
cli
shlb
loop
in
orl
xchg
xor
pop
push
sti
aaa
jmp
subb
mov
cltd
icebp
ret
and
mov
pop
jb
pop
dec
out
stc
jle
repnz
push
mov
sbb
cmp
push
aas
gs
xchg
shrl
mov
mov
inc
mov
jo
pusha
stc
cmp
cmp
pop
gs
pop
dec
pop
add
adc
cmp
pop
xchg
rorb
idivl
repnz
cld
in
sbbb
add
mov
inc
xchg
jo
jp
ljmp
dec
lods
imul
push
loopne
fbstp
out
fsubs
sbb
cmp
sub
mov
mov
daa
sarb
sbb
inc
jle
shlb
andl
imul
pop
jl
iret
scas
bound
ret
jno
pusha
data16
lds
dec
lods
pop
lea
mov
hlt
in
jmp
push
jb
push
ficomps
dec
inc
fwait
mov
cmpsb
cmp
and
fsts
test
aaa
cmp
push
subb
mov
cmp
cmp
lahf
jnp
arpl
jns
stos
hlt
clc
jb
mov
fstps
je
mov
push
stos
push
imul
sub
fisubs
test
add
cmp
xlat
cmp
pop
xor
push
ljmp
aas
imul
mov
xor
lret
and
leave
iret
jl
repnz
dec
mov
nop
mov
push
xor
imul
enter
decb
inc
mov
fcompl
lcall
jnp
test
cmp
lahf
sbb
dec
nop
rclb
loop
mov
ja
push
push
dec
sbb
outsb
popf
xorb
cmp
movsl
pop
test
or
maxps
jno
add
mov
jge
xor
dec
add
lds
pop
jmp
jo
int3
into
flds
push
cltd
jb
sarl
jns
cs
aas
ds
mov
in
stos
es
mov
lock
inc
stos
rol
mov
clc
pop
sub
cs
incb
sub
xchg
sub
jo
mov
adc
jne
pop
adc
adc
mov
add
loopne
mov
jge
inc
mov
loop
ds
test
sub
lods
lahf
adc
movsl
aam
xchg
aaa
add
ds
fwait
mov
add
jns
dec
lea
addr16
into
sti
push
push
subl
pop
jne
add
dec
dec
fldt
mov
repz
add
push
inc
cmpl
sbb
dec
mov
dec
lret
out
add
stos
cwtl
and
sub
pop
sub
negl
pushf
outsb
add
xor
pop
fcoms
fldt
dec
cmp
jg
push
lcall
push
cli
add
stc
mov
jmp
jle
in
mov
push
std
push
inc
repz
jmp
adc
mov
fsubrs
fsub
pusha
movsb
jge
cmpsl
dec
fimuls
gs
loope
and
pop
lea
jns
mov
rcrb
jns
loope
pop
dec
or
scas
adc
negb
jp
cwtl
and
mov
dec
dec
loope
dec
pop
xchg
in
sar
sbb
add
sub
cmp
pop
push
mov
dec
push
repnz
insl
xchg
jg
enter
xchg
jnp
inc
jle
push
scas
push
sbb
inc
nop
outsb
int
xor
or
push
dec
nop
sbb
mov
xchg
aaa
out
inc
jbe
fidivl
fisubrs
scas
xor
int3
scas
outsl
imull
cmpsb
jmp
jnp
out
sarl
or
pushf
out
insl
out
xchg
push
stc
scas
xor
rorl
or
repz
cld
adc
fsubrl
into
adc
jne
fildl
mov
push
mov
dec
outsl
mov
mov
adc
or
cli
inc
out
sbb
or
xchg
cmp
push
shll
inc
cs
xor
xchg
xchg
pop
dec
in
cmc
mov
xchg
mov
adc
jmp
scas
adc
push
add
add
jg
fnstsw
pop
insl
jae
rcr
int
dec
cmp
add
leave
and
sbb
or
jbe
cli
cld
jb
and
push
sarb
pop
sbb
sbb
hlt
pop
fs
xor
mov
outsb
pop
jo
bound
adc
test
shll
jmp
adc
dec
and
add
push
xor
stos
sbb
add
inc
mov
xchg
cmpsb
dec
jp
xchg
jle
xchg
out
mov
stc
scas
ds
mov
jge
mov
loope
mov
push
cmp
push
pop
sub
out
pusha
mov
or
pop
inc
sbb
push
mov
push
aas
js
push
add
pop
adc
jmp
das
jge
pusha
test
aad
test
in
int
shll
adc
mov
pop
stc
fists
jae
les
inc
aaa
in
and
jge
out
shufps
ss
cmpsl
fsubrl
popf
fidivrs
scas
dec
pop
add
ret
cmp
cmp
int3
xor
pop
lret
dec
outsb
aaa
sbb
pop
fidivrs
mov
ljmp
dec
lods
int3
pop
sarb
test
test
or
adc
into
fbstp
push
testb
fcompl
les
fstps
sbb
xchg
inc
cld
sahf
sub
pop
sub
push
push
or
call
mov
cmp
pop
push
add
sahf
in
mov
aaa
std
mov
xor
xchg
add
cwtl
roll
adc
cmp
sub
stos
sub
add
aam
jp
mov
sbb
shl
aaa
aad
xchg
pop
insl
cli
add
jle
cmpl
adc
cmp
jl
mov
mov
mov
loop
mov
lock
lea
cmovs
cmp
test
out
imul
add
arpl
repnz
mov
or
scas
dec
and
add
insb
mov
addl
test
nop
pusha
and
ljmp
out
mov
loope
pop
mov
push
jbe
cmp
pop
mov
aaa
arpl
dec
hlt
push
rorb
shl
cmpsb
scas
ljmp
jp
sbb
mov
addl
fmuls
inc
dec
jbe
lret
pop
push
addr16
push
xor
and
dec
push
sbb
cltd
xchg
ret
mov
and
push
std
xchg
adc
inc
out
lods
jae
or
jbe
in
pop
cmp
pop
mov
in
sbb
rorl
or
out
jge
add
mov
pop
and
sbb
mov
sub
push
mov
dec
and
cmp
sbb
adc
cwtl
enter
ret
cmpsb
inc
cmp
xor
mov
lret
push
and
dec
push
sbb
popf
stos
cwtl
fwait
or
loope
or
outsb
push
outsb
pop
aas
push
xor
iret
daa
rcll
ljmp
in
sbb
dec
pop
push
or
ja
push
cli
das
out
movl
popa
add
gs
orl
mov
xor
pop
inc
sahf
scas
or
dec
xor
jle
cltd
cs
bswap
popf
cs
loopne
xor
mov
push
leave
xchg
arpl
aaa
movsb
mov
add
push
or
test
xchg
and
cmp
adc
or
sbb
inc
lahf
aaa
fdivrs
cmpsl
jne
in
fmull
imul
xchg
and
and
out
add
mov
sbb
lods
mov
lret
call
je
subl
xor
add
es
decl
inc
push
jne
pushf
lret
cmp
std
mov
insl
pop
aam
faddl
in
mov
jmp
icebp
pop
xchg
dec
lret
lcall
push
ret
sbb
into
xchg
or
cs
push
mov
aaa
cli
mov
pop
jmp
imul
int
mov
inc
pop
in
es
push
add
jecxz
push
jge
rcll
mov
clc
lret
sahf
bound
jle
pusha
test
test
int
fldl
xchg
aad
fstp
mov
leave
jbe
jbe
push
scas
pop
cld
sub
and
xor
add
sbb
aaa
sbb
mov
jmp
mov
enter
enter
inc
or
scas
mov
and
push
adc
xlat
sbb
clc
fldt
imul
jnp
mov
sbb
mov
sbb
stc
rcl
inc
or
jae
push
ds
into
xor
lcall
gs
ret
test
imull
pop
mov
test
mov
mov
hlt
inc
movl
add
arpl
inc
and
pusha
fwait
mov
dec
fidivl
inc
add
enter
repz
pop
and
test
push
cld
movsl
imul
out
pushf
cmp
fcoml
stos
mov
add
in
lea
xchg
stc
ds
lea
sbb
pop
cwtl
cmpsb
jmp
loopne
jnp
fwait
iret
test
xchg
fstps
sub
popf
cmp
pop
pushf
push
adc
push
in
call
push
popf
pop
push
push
shlb
mov
rolb
arpl
adc
in
fcoml
and
and
das
ret
ret
pop
mov
sbb
hlt
jp
scas
xorb
push
jecxz
mov
dec
sub
daa
testb
mov
xchg
adcl
adc
push
cs
enter
movsb
push
add
sbb
push
adc
imul
loop
mov
sub
movsb
adcb
xor
cltd
add
sub
pop
ja
pop
and
sub
jne
lahf
dec
xor
inc
rcll
in
stos
xchg
out
lods
pop
dec
test
lea
dec
cld
jbe
xor
das
jecxz
mov
popf
fmull
or
dec
xor
push
pop
jb
stc
xchg
nop
mov
popl
mov
ret
imul
fldt
mov
mov
push
jno
outsl
loope
mov
mov
mov
jb
pop
dec
jle
inc
jnp
into
or
lret
out
imul
cli
mov
test
fnsave
andl
mov
cmpsl
sbb
ss
ja
out
mov
lret
add
test
ja
test
ss
mov
cmp
mov
mov
dec
rcr
test
in
xchg
gs
fcmovne
loopne
jmp
mov
inc
sahf
pushf
in
sub
mov
loopne
dec
jno
stos
js
cmpsl
insb
adc
clc
and
fcompl
mov
cld
inc
mov
xorb
push
pusha
outsl
aas
inc
push
test
out
add
and
mov
mov
or
add
call
repnz
pushf
add
jge
outsl
in
push
rcrb
mov
add
and
fwait
mov
and
pop
aas
leave
mov
pop
push
ljmp
or
mov
cmp
push
in
xor
or
dec
sub
pushf
pop
push
arpl
aaa
push
pop
mov
sbb
or
icebp
fxch
jns
int3
sahf
repnz
pop
xor
pop
jle
mov
or
cmp
push
outsb
shlb
push
std
add
fstl
mov
shlb
sbb
inc
outsb
adc
mov
pop
je
jmp
jns
sbb
mov
fucomi
clc
aas
in
popa
rcl
mov
stos
lcall
jle
in
sbb
hlt
icebp
add
repz
loop
lea
repz
lahf
jle
subl
jns
inc
jle
movsb
pop
out
leave
add
xchg
xor
add
inc
popf
jnp
or
aas
aaa
mov
mov
loope
push
fnop
cmp
xor
in
aam
lcall
arpl
jbe
push
and
sub
xchg
inc
jg
loope
fldl
adc
lods
scas
dec
xor
mov
sbb
call
fistpl
dec
jge
call
sbb
out
inc
loope
lret
mov
mov
add
xchg
cwtl
testl
add
adc
jg
ss
movsl
xchg
mov
add
push
fdivl
xlat
lret
aad
mov
shr
inc
int
jbe
xor
stos
push
stc
div
pop
pop
aaa
mov
insl
pop
cmp
in
shll
rolb
das
add
subb
add
fldl
mov
ljmp
mov
or
sub
aam
test
pop
setae
inc
mov
fiadds
int
and
xorb
sbb
les
push
and
ds
into
jmp
loopne
dec
and
nop
mov
cmp
xchg
sub
cmp
inc
push
out
loopnew
clc
jmp
lret
out
jecxz
test
pop
and
fisttpl
mov
xchg
imul
jbe
lret
icebp
ret
icebp
out
mov
push
xor
sub
mov
inc
xchg
mov
adc
sub
inc
mov
subb
or
add
das
jmp
jecxz
mov
ja
ret
pushf
icebp
int
mov
test
das
sbbb
cmp
icebp
mov
sbb
into
jle
jb
aaa
pusha
xor
cmp
jb
add
xchg
arpl
inc
xchg
ret
movl
lcall
jae
out
test
roll
mov
add
movsb
icebp
out
ficomps
aam
popf
fidivrs
es
ret
xor
pushl
loopne
icebp
xrelease
ror
add
mov
dec
xor
hlt
aad
sub
xchg
ds
sub
sbb
das
xor
cmp
stc
cmc
inc
js
or
ja
sbb
and
sbb
sarl
dec
mov
mov
cs
jmp
les
cmp
cmpsl
idivl
push
das
xchg
mov
xor
jo
loop
sbb
cli
inc
fdivrp
mov
sub
jo
out
inc
jl
lcall
outsl
sub
jle
pop
mov
loope
cmp
xchg
outsb
shll
insl
rol
lcall
mov
add
ss
sahf
xor
push
iret
sub
xor
jnp
rcr
sbb
lock
jmp
std
es
jno
pop
sub
add
push
fwait
loope
repz
dec
push
lret
mov
add
cli
in
hlt
ljmp
je
mov
ds
cmp
nop
sbb
push
xor
testb
dec
scas
adc
ret
adc
je
aas
inc
movsl
jmp
out
pop
or
repnz
cld
jb
mov
or
ja
cmp
jle
xchg
fs
inc
cmc
loope
sbb
add
lea
mov
mov
xor
pop
xchg
sbb
jnp,pt
dec
xchg
aaa
mov
or
aam
dec
dec
adc
adc
sub
inc
cmp
lcall
cmpsl
sar
nop
lret
into
jmp
lock
push
out
pop
jmp
fsubs
mov
imul
pushf
stc
call
mov
dec
jecxz
sbb
mov
pop
bound
add
inc
imul
mov
adc
in
outsb
sub
das
dec
mov
mov
inc
sbb
xor
push
and
pop
cmpsl
mov
cmpsb
inc
call
sub
add
xor
ret
lea
cwtl
cmp
insb
sbb
mov
xchg
test
jbe
push
rcrl
into
adcl
mov
push
pop
jnp
mov
je
mov
inc
pop
and
cmpsb
into
mov
cmp
push
lea
popf
gs
mov
inc
xlat
xor
xor
xor
imul
push
sub
mov
mov
jge
jnp
in
lcall
insb
std
adc
jbe
pop
mov
test
pushf
cmp
iret
stos
pop
jnp
dec
call
jb
enter
pop
jle
fwait
mov
pusha
add
sbb
jmp
jo
and
inc
pop
hlt
lods
add
arpl
jns,pn
xchg
pop
js
mov
movsl
repz
mov
test
pop
andb
push
pop
lods
cld
bound
add
scas
jmp
or
xor
add
shlb
lahf
inc
fmuls
inc
loopne
mov
pop
pop
sub
mov
lock
push
out
movsb
mov
and
push
and
pop
stos
push
pop
arpl
or
in
ret
xor
stos
inc
push
push
stos
lcall
sti
jge
adc
jg
rcrl
test
and
jns
flds
inc
sbb
out
fists
sahf
push
sub
xchg
sub
gs
out
dec
xor
fdivr
in
jbe
push
rorb
sbb
sarb
mov
cli
test
jp
mov
jo
inc
in
popa
push
push
jne
adc
imul
sub
aaa
xchg
cmpsl
in
sub
pop
sub
inc
sbb
outsb
icebp
push
aad
bound
fnstsw
cltd
ret
cmp
sti
inc
aas
xchg
jo
stos
xor
adc
hlt
cmp
lock
push
in
shrb
push
imul
clc
outsb
pop
repz
iret
mov
and
test
pop
adc
ret
pop
jnp
lcall
lahf
fisttpll
pop
cltd
dec
xor
ret
lods
mov
jle
addr16
xchg
add
aas
xor
addr16
jl
popf
aaa
add
fcoms
jge
dec
gs
xchg
fsubrl
mov
mov
insb
daa
loop
or
push
lret
ds
hlt
es
stos
ss
inc
stc
fmuls
rorl
xor
test
dec
sti
leave
cmp
aas
inc
mov
cmp
sbb
cmp
ds
push
out
dec
inc
mov
fwait
xchg
enter
cmp
inc
pushf
inc
aaa
push
xor
sub
les
insb
orb
mov
popf
push
jl
in
sbb
mov
das
jae
lods
push
jbe
mov
inc
and
mov
cld
aas
mov
add
push
push
push
in
pop
add
test
in
insb
xor
push
aaa
mov
and
or
pop
test
dec
dec
lcall
and
lea
pushf
insl
insb
push
add
add
and
sti
dec
dec
das
push
push
test
icebp
sbb
sbb
xorl
aas
bound
rcrl
sub
das
xor
jle
outsb
push
jmp
lret
sbb
aaa
addr16
aaa
mov
pusha
adc
sub
jb
cmpsb
bound
add
push
cli
ljmp
cmp
in
ss
aaa
js
pop
mov
mov
push
jne
and
bound
lock
shrb
adc
lahf
jae
mov
enter
rcr
mov
sahf
daa
aam
jle
sbb
sbb
pop
jno
cmp
sbb
pushf
mov
pop
dec
je
js
loope
inc
in
in
xchg
mov
in
out
mov
or
pop
and
jbe
aaa
push
jns
lods
add
mov
fs
pop
cs
mov
push
mov
decl
fwait
mov
pop
aaa
lea
ss
outsl
pop
pop
push
sbb
inc
in
and
cmpsl
jnp
cmp
jno
mov
mov
call
paddsb
pop
jp
scas
lds
jo
cmovae
and
add
jb
dec
inc
dec
inc
inc
mov
cmp
jnp
pop
xchg
pop
xchg
xlat
pop
inc
pushf
mov
pop
push
aas
adc
xlat
inc
in
mov
pusha
pop
ds
jne
repz
adc
in
pop
jb
push
js
mov
cmpsl
pop
inc
cmp
daa
ja
pop
rolb
adc
test
xchg
sub
xlat
xorb
lret
aaa
sbb
test
adc
out
aas
pop
inc
inc
pop
lods
std
in
shll
inc
pop
lahf
fstpl
xchg
mov
mov
cltd
outsb
cmp
les
aas
mov
xchg
cmp
adc
jl
out
push
dec
cmp
cmpb
call
cltd
icebp
pop
fsubl
inc
test
cmp
sbb
test
adc
or
mov
mov
ja
cld
in
fbld
inc
int
xor
dec
insb
add
jl
popa
popf
push
push
pop
push
push
jo
push
addr16
test
sbb
sar
pop
sub
pop
decb
aam
loope
jle
xchg
push
cs
adc
xchg
std
shrb
pop
mov
out
add
sbb
popl
lret
in
mov
mov
bound
stos
es
add
push
ss
out
cmp
sub
and
sbb
aaa
cwtl
dec
repz
mov
add
fwait
rolb
or
imul
fs
mov
cmp
std
js
aaa
bound
mov
leave
xorb
stc
dec
ffreep
pop
pop
sbb
sub
into
mov
jnp
jae
out
enter
lcall
sbb
and
pop
pop
loopne
out
cmp
in
out
mov
enter
leave
ljmp
bound
pop
repnz
jecxz
arpl
push
jbe
sbb
sar
push
lea
int3
xchg
and
nop
dec
mov
cmp
je
inc
xor
lods
lret
cmp
ds
mov
mov
mov
jle
dec
movsl
jmp
push
adc
sbb
pop
nop
and
lret
add
rcll
mulb
add
pop
rolb
mov
inc
insl
lock
mov
push
cltd
push
xchg
add
lahf
jl
jg
cmp
pop
cwtl
sub
mov
jg
int3
pop
dec
gs
rcl
jge
rcll
push
aad
dec
mov
cmp
addr16
xchg
add
inc
xchg
mov
add
test
insb
inc
cli
aad
in
dec
repz
inc
jbe
mov
or
xlat
nop
xchg
push
jnp
sbb
jl
pop
mov
xor
jge
shll
es
aaa
dec
movsl
sti
jmp
and
adcb
push
roll
add
and
sbb
outsb
sarb
pop
push
jno
sbb
pop
sub
fdivrl
adc
add
out
addb
pop
arpl
push
dec
xor
pop
enter
add
and
mov
leave
popl
push
mov
mov
pushf
and
sbbb
push
aam
stos
mov
js
fbstp
sbb
xor
fdivs
push
loope
xchg
xor
jb
addr16
int3
xchg
jbe
aad
cs
nop
popa
cwtl
pop
std
dec
shll
pop
xor
lea
out
xchg
jg
sub
cmp
dec
push
adc
sub
pop
sub
adc
dec
adc
in
mov
arpl
jb
push
je
pop
inc
in
aam
sbb
es
sub
lods
push
push
xchg
mov
js
lahf
mov
inc
jecxz
sbb
pop
sbb
add
sbb
rcrl
mov
mov
push
lcall
rcll
jge
sbb
int
and
or
push
xchg
mov
jo
in
cvttps2pi
fstl
insb
out
and
es
jno
mov
mov
jne
ds
adc
movsl
sub
dec
loopne
pop
adc
outsb
lcall
je
push
gs
test
inc
add
fisubrs
mov
aam
loopne
or
out
xchg
jbe
xor
pop
arpl
inc
ds
jecxz
stos
cmc
and
into
insb
sub
mov
movsl
aaa
fisubl
pop
sub
fmul
push
xor
cli
mov
dec
idivl
fdivrl
or
adc
ds
xor
jo
pop
and
arpl
rclb
pop
mov
loopne
std
xchg
stos
lea
out
rclb
jl
sub
sbb
push
sub
and
jb
pop
cmp
jmp
xchg
mov
das
stos
adc
inc
push
ret
aad
sub
mov
dec
push
add
lds
lcall
sub
xchg
pop
dec
xchg
int3
into
decb
into
aaa
xchg
into
dec
mov
cmc
add
sbb
cmpsl
and
mov
jg
pushf
dec
and
repz
je
faddl
dec
jmp
push
inc
sti
das
jecxz
or
enter
imul
aaa
xorb
xor
cmpsb
dec
jo
lret
pop
xchg
stos
loope
stos
fstps
mov
lods
push
adc
in
mov
jno
push
ss
and
out
sahf
pushl
mov
loope
repz
aaa
out
ficoms
clc
fwait
xor
pop
sahf
es
mov
mov
xor
jp
inc
aaa
xor
imul
cmp
add
sbb
mov
in
rcll
inc
sbb
std
ds
cmpsb
daa
stos
lock
pop
shlb
dec
sub
sbb
push
xchg
loope
popf
push
or
idivb
sbb
rcll
je
xchg
jno
es
loope
mov
cmp
cmpsb
xor
fwait
jl
scas
fnsave
add
push
jb
xor
xchg
mov
adc
mov
sbbl
bound
filds
ja
adc
iret
mov
int
fidivrl
sti
aaa
add
decl
xchg
push
xor
pusha
test
flds
pop
inc
sbb
les
mov
ds
push
cmp
xlat
jecxz
test
push
insb
testb
mov
pop
push
mul
fscale
push
addr16
and
bound
mov
mov
and
in
xchg
clc
sbb
mov
cld
aad
cmp
lahf
cs
adc
cmp
add
xor
push
jmp
cmp
popf
in
movsl
in
pop
and
ss
aam
mov
pop
dec
incb
ret
mov
adcb
sahf
mov
aaa
pop
adcl
sbb
enter
pop
test
adc
shll
icebp
into
inc
xor
adc
mov
push
insb
add
test
sti
push
or
lea
push
xor
cld
jmp
hlt
cmp
sub
pop
test
fisubs
pop
xor
lcall
adc
mov
jmp
enter
sbb
sbb
fstl
std
pop
mov
xchg
inc
sub
or
ss
imulb
and
and
cltd
xchg
rorb
jae
aaa
cli
sar
dec
mov
cwtl
frstor
cmpsb
das
inc
repz
adc
outsb
orl
inc
mov
test
xchg
cwtl
inc
push
cld
mov
cmp
insl
pop
outsb
cmp
cmpsl
inc
in
sbb
dec
jbe
push
in
adc
leave
jo
out
mov
mov
fistpl
es
icebp
sti
jg
and
mov
xor
jmp
adc
and
aas
fildl
dec
arpl
mov
shl
dec
xchg
push
test
test
dec
jbe
cmp
cmp
data16
mov
push
sbb
lds
xchg
insl
pop
aaa
repnz
in
outsb
xchg
icebp
out
sub
lock
or
mov
stc
mov
fsts
fisubrs
mov
inc
arpl
insl
dec
jnp
sti
pop
cmp
cmp
cmpl
add
jmp
fldcw
int
jmp
mov
xorl
pop
jbe
int3
popl
jecxz
loopne
aaa
daa
sub
pop
repnz
push
jecxz
std
cltd
pop
loop
sbb
sub
sbb
dec
mov
xor
or
nop
out
icebp
dec
xchg
push
dec
pop
or
inc
lahf
add
movsl
aaa
sbb
sub
loop
push
clc
mov
in
imul
mov
mov
sub
push
pop
jl
jmp
scas
sbb
les
mov
lds
inc
push
push
fcomps
inc
inc
xor
nop
mov
jae
dec
es
call
dec
sbb
fstp
cltd
shl
sbb
jbe
loope
push
mov
xor
sahf
inc
test
loopne
popa
pop
add
mov
mov
fwait
mov
jge
sahf
sbb
lods
pop
push
pop
sahf
cmpb
repz
aas
inc
xchg
aas
bound
add
pop
cmp
push
popa
rcrl
aam
inc
or
sbb
in
ds
rolb
outsb
xchg
add
sbb
imul
cli
pushw
std
adc
inc
xchg
stos
pop
jne
out
cmpsl
lods
aam
pop
cmpsb
sub
popa
push
push
push
xchg
jle
inc
clc
mov
aaa
popa
inc
push
jbe
shlb
xchg
in
or
loopne
pop
sar
pop
sub
adc
xor
sub
rolb
inc
mov
push
aad
jb
daa
in
add
xor
shrl
pushf
scas
mov
cmp
test
fmull
push
mov
xchg
cs
rcrb
cld
inc
outsb
test
cld
lea
mov
inc
lea
cmp
xorb
jecxz
jp
mov
int3
sbb
call
sbb
mov
inc
rcrb
push
das
mov
test
daa
rcrb
jns
fadds
mov
adc
add
jg
adc
fadd
or
arpl
loope
inc
dec
aaa
cld
mov
push
ds
xorps
mov
sub
call
js
test
push
iret
fdivl
call
pop
xor
cs
aaa
lret
or
xchg
xor
push
fisubrl
mov
sub
cwtl
jne
mov
pop
aad
jle
mov
repnz
mov
cmp
ja
out
dec
rclb
vphaddbw
rorl
xor
sub
inc
rol
sub
aaa
pop
out
xchg
jg
adc
xchg
xchg
adc
decl
or
or
sti
xchg
inc
mov
mov
dec
mov
in
or
xchg
sbb
mov
lock
sahf
fwait
ds
ficoms
bound
fwait
ss
hlt
mov
mov
push
xor
das
jmp
dec
pop
jbe
ret
enter
repz
add
into
lret
pop
jb
popa
push
sbb
enter
or
scas
lret
cmpb
push
cmp
jp
stos
cld
push
xchg
movsb
outsl
lcall
or
fidivrs
stos
das
or
jecxz
mov
imul
xchg
cwtl
jle
push
mov
xor
sub
pop
dec
outsl
push
xlat
movsb
pop
leave
mov
loopne
add
xor
ss
mov
mov
icebp
mov
xchg
imull
push
lods
insl
lret
jne
out
mov
cmp
jo
fsts
mov
pop
pop
hlt
mov
sbb
les
jle
sbbl
jmp
inc
popf
aaa
pop
jbe
into
std
lods
es
sbb
push
cwtl
pushf
push
out
pop
repnz
add
or
pop
xlat
sti
scas
and
jle
icebp
arpl
fmull
movl
idivb
lea
dec
inc
and
dec
cmp
pusha
and
jmp
dec
scas
cmp
cli
or
sbb
push
in
xchg
add
out
mov
dec
outsb
in
mov
mov
negl
pop
push
push
fidivl
mov
lahf
adc
inc
fstps
adc
pusha
mov
inc
mov
inc
mov
jmp
mov
js
xor
pop
mov
sbb
sub
push
and
cmp
cs
enter
and
aam
mov
cmp
loope
pop
mov
icebp
mov
adc
pop
and
dec
bound
aam
xor
popf
int3
and
inc
xchg
rcrl
fidivs
scas
ret
cmp
cli
xlat
lods
mov
pop
loope
hlt
jbe
or
pop
ljmp
jo
push
add
movsl
sbb
mov
into
pop
pop
mov
fildl
dec
cmpsl
aaa
ds
push
int3
xor
iret
push
cmc
jne
sub
xchg
aaa
fninit
mov
cmp
cmpsl
das
xor
out
outsl
aas
addr16
lcall
cmpsl
push
jp
add
mov
scas
sub
test
adc
sbb
dec
jge
mov
ss
xchg
lcall
cmpsl
shll
xchg
jle
clc
and
pop
sub
add
ljmp
sbb
addr16
aas
pop
jl
ficoms
out
cld
pop
or
fsts
out
in
jnp
dec
jg
push
sub
cmp
mov
sarl
lods
mov
sbb
fsubrs
out
push
adc
into
jno
mov
js,pt
inc
jnp
shl
inc
push
or
xchg
add
push
pop
stos
aas
mov
test
and
mov
aam
out
push
ja
jmp
roll
mov
lods
mov
push
adc
mov
stos
pop
ret
pop
lock
mov
addb
sub
orl
xchg
xchg
stos
stos
lods
mov
push
cmp
mov
add
cwtl
faddl
inc
sahf
dec
and
mov
aad
jne
frstor
stos
or
popf
adc
cmp
int3
lods
lds
mov
pop
and
sbb
jne
popf
gs
inc
lcall
nop
js
mov
and
in
adc
or
xor
inc
xchg
mov
mov
jp
nop
and
xor
in
sti
lea
jbe
mov
sbb
adc
scas
hlt
sti
sbb
jnp
dec
je
outsl
shll
aam
push
pop
inc
pop
push
cli
jbe
push
mov
inc
push
push
jecxz
in
jo
iret
fs
pop
xor
int3
out
jo
sbb
sub
push
xor
add
add
sbb
pop
adc
jp
sub
add
pop
mov
leave
aad
in
lods
mov
cmp
cli
inc
ds
mov
icebp
idiv
adc
sarl
pop
scas
js
pop
pushf
cli
lret
lret
call
outsb
jg
or
sahf
out
mov
xabort
lcall
stos
cmc
movsl
mov
in
mov
mov
mov
push
add
cmp
pop
js
aaa
pop
movsb
popa
in
test
popf
mov
jg
sub
xorb
cwtl
push
sbb
enter
and
or
jae
xchg
or
xlat
mov
push
mov
mov
ja
mov
ficomps
je
lods
clc
inc
jge
call
outsb
adc
aaa
gs
pop
movsl
repz
jo
adc
cmp
lcall
lret
xchg
push
push
xchg
mov
push
outsb
pop
mov
rcrl
xor
cmp
dec
inc
add
or
ds
out
mov
jo
mov
lret
frndint
fmul
movsl
into
push
stos
fmull
mov
cs
push
fmull
aaa
jb
cs
pop
mov
pop
ret
aam
into
mov
push
adc
cmp
lds
cs
ss
mov
push
mov
pop
out
hlt
loopne
push
sti
and
test
rcrb
xor
pusha
push
fcmovnu
pop
pop
push
loop
xchg
enter
and
add
movsl
js
shl
push
arpl
jne
adc
xchg
insb
dec
imul
lcall
mov
push
jae
mov
lods
jmp
xor
adc
mov
pushf
loope
mov
pop
adc
cmpsb
pop
mov
rcrb
add
jb
add
cs
jmp
mov
loop
aad
mov
stos
and
jae
pop
sub
cmp
jp
mov
sbb
jnp
mov
mov
push
ficompl
iret
shlb
cmp
stc
push
push
rcr
xchg
inc
add
sbb
movsb
sub
mov
fsts
adc
ss
jb
es
mov
xchg
paddb
jmp
mov
popa
andl
mov
xchg
inc
xor
sub
cmp
test
or
push
lret
jmp
cmp
in
sbbb
mov
jmp
ftst
into
insb
mov
jbe
xorb
jo
cmp
in
aaa
inc
mov
js
loopne
cmp
lret
mov
shlb
sti
pop
insb
add
mov
rcl
orl
and
jbe
popf
je
pop
cwtl
mov
insl
xor
fs
adc
cmp
sbbb
push
sbb
mov
fdivl
je
and
fs
in
inc
sarb
inc
bound
in
pop
test
jle
int
jnp
pop
pushf
mov
mov
stos
adc
cli
cs
inc
inc
outsb
fnstcw
or
pop
fistps
jne
adc
out
inc
sub
mov
test
mov
pop
pop
jl
out
rol
aaa
cmp
insb
cmp
loope
leave
insb
lret
push
mov
into
popf
pop
outsb
bound
in
inc
je
cmp
cmc
jae
add
mov
push
pop
xor
aas
stos
mov
in
inc
lret
clc
pusha
adc
call
lds
notb
mov
jbe
pop
icebp
repnz
and
cmp
dec
aam
jle
add
pop
push
pop
in
push
and
arpl
fistpl
xor
es
sbb
test
xchg
jp
dec
push
pop
mov
in
dec
sub
pop
jle
pop
add
pop
stos
inc
mov
mov
test
jmp
inc
hlt
add
jecxz
scas
or
movsl
movsb
mov
dec
mov
aaa
mov
dec
or
xor
mov
add
pop
ljmp
jecxz
cmp
test
movsb
pop
insb
xor
stc
scas
mov
sbb
jbe
movsl
imul
loope
pop
add
fstpt
fildl
jne
jle
loop
shll
ss
sahf
lcall
jle
xchg
jbe
or
adc
adc
in
or
aaa
and
cmp
xchg
setge
fs
adc
xchg
enter
mov
lret
dec
jmp
pop
add
xor
loope
inc
andl
adc
and
jle
aam
out
pop
inc
pushf
movsb
inc
in
movsl
pop
mov
add
pop
inc
das
pop
test
dec
pop
and
test
in
cld
xor
sbb
scas
cltd
sbb
sbb
std
aam
mov
mov
dec
sti
xor
orl
jl
scas
jns
lahf
add
bound
test
sbb
pop
mov
mov
lahf
cs
movb
mov
sbb
das
xchg
cmpsb
inc
lea
push
mov
adc
and
mov
mov
fs
jle
les
out
and
loope
sbb
sbb
sahf
repz
adc
aam
mov
subb
insb
jno
das
mov
mov
in
aaa
jns
popa
test
mov
je
sub
incb
dec
jne
push
mov
mov
stc
add
in
scas
lahf
and
outsl
aaa
push
loop
jle,pn
cmp
inc
add
jg
fnstenv
pop
loope
insl
mov
pop
and
sbb
cs
fwait
pop
and
je
mov
in
mov
dec
mov
aad
push
out
jle
mov
inc
adc
movsb
arpl
ror
pop
mov
mov
add
dec
or
dec
sbb
xchg
mov
pop
aas
daa
sbb
sbb
xlat
cmpsl
loopne
sub
inc
test
ss
ds
test
jbe
icebp
mov
add
arpl
mov
add
adc
xor
std
fcomps
jb
decb
jns
ret
imul
mov
ds
add
stc
sbb
in
pop
ja
movsl
adc
in
pop
movsb
rorb
psllq
xchg
loopne
imull
lea
out
pusha
push
ficoms
in
sub
xor
and
inc
mov
test
jl
push
sbb
xor
add
lods
or
dec
sub
mov
mov
push
daa
gs
jp
ds
push
sbb
call
mov
pop
pop
sub
jle
xchg
sti
js
cltd
xchg
in
cmp
ret
mov
testb
mov
push
cmp
add
scas
sbb
sbb
jne
pop
movl
inc
cmpsb
outsb
xchg
leave
pushfw
xchg
data16
fisttpll
jbe
pusha
in
sbb
pop
fnstcw
xchg
lahf
mov
mov
std
into
lods
fldt
sub
mov
add
lahf
popa
push
add
inc
mov
sbbb
out
test
bound
stos
push
push
fucom
xchg
aaa
push
sub
mov
in
adc
add
mov
negl
pop
sbb
pop
sbb
pusha
and
cmpsl
cmpb
testl
pop
in
call
iret
aas
fcomps
aaa
pop
lock
xchg
pushf
and
jecxz
mov
sub
mov
in
mov
and
mov
lock
test
cli
jnp
dec
pop
or
aaa
inc
or
int
and
ja
mov
insb
in
pop
mov
pop
jge
loopne
cmp
inc
movsb
xor
mov
sbb
arpl
sti
test
jl
pop
mov
mov
mov
add
aaa
fnstenv
sbb
outsl
xor
adc
cltd
mov
mov
js
jnp
adc
mov
mov
cld
adc
cmp
mov
subb
in
fnstcw
in
jle
jne
into
add
ljmp
jecxz
divb
pshufw
cmp
shrb
add
mov
push
mov
hlt
jae
jecxz
arpl
inc
pop
into
push
icebp
outsb
out
ret
pop
lock
sbb
sbb
jns
xchg
pop
pop
inc
std
cld
push
in
jbe
das
xor
cs
sbb
xor
js
lds
xchg
cmp
cs
and
dec
xor
xchg
xchg
cmp
cmc
sub
sahf
and
mov
add
xchg
cltd
push
mov
sbbb
pop
jnp
in
add
notb
cmp
fistpl
sub
jmp
push
add
add
divb
inc
or
push
jnp
and
and
mov
mov
cs
aas
pop
loopne
ljmp
out
pop
aam
pop
daa
inc
js
cmp
test
scas
mov
bound
mov
pop
and
jl
dec
pop
fsubrs
aaa
nop
aam
cmc
jge
xor
pop
ret
fistpl
in
jle
sbb
rcl
ljmp
stos
and
or
add
push
mov
jmp
xor
xchg
insb
or
insl
mov
dec
inc
push
and
rcrl
mov
outsb
adc
andb
je
mov
ljmp
aas
movsb
xchg
repnz
mov
jb
fsub
add
daa
cli
lret
add
lcall
push
lods
in
sub
sbb
int
adc
repz
xor
mov
and
pushf
push
outsb
insl
mov
inc
out
dec
fdivrl
cwtl
xor
cmp
xchg
in
sbb
cmc
shlb
arpl
dec
adc
push
push
loopne
lock
dec
mov
mov
testl
mov
add
lea
pop
pushf
les
pop
pop
jo
sbb
test
jbe
lahf
ret
dec
fmuls
xor
ret
jo
into
xchg
jp
push
and
nop
mov
inc
outsl
xchg
call
inc
sarl
add
andl
jbe
mov
sbb
mov
cmp
xor
xor
cmp
or
lds
bnd
lea
jns
pop
lret
inc
inc
cmp
add
incb
inc
lock
ja
aad
jne
push
aaa
mov
mov
sub
bound
xlat
inc
dec
push
in
jnp
out
dec
lock
add
or
popfw
aas
roll
xchg
sbbl
repz
mov
repnz
lock
push
xchg
aaa
dec
push
jmp
cmp
xor
sarb
push
fwait
jbe
push
mov
xlat
fldcw
mov
sbb
adc
popf
push
xor
aaa
mov
pusha
jae
push
jl
rolb
cmc
jle
ret
outsb
leave
pop
mov
sarb
cwtl
into
les
add
loopne
pop
out
push
js
in
pop
xchg
pop
in
js
pop
pop
push
inc
aam
cmp
pop
xchg
iret
adc
jmp
pop
cmpsl
out
jo
inc
sub
dec
loop
pop
bound
lods
dec
add
repnz
popf
in
mov
or
inc
adc
fwait
loop
push
push
and
push
jge
aad
hlt
mov
bound
scas
sahf
mov
or
ret
loop
mov
sbb
adc
xor
ret
in
pushf
test
xlat
pop
push
lret
shl
das
fstp
push
sub
inc
add
lret
jecxz
xchg
mov
in
cmpsl
xchg
daa
jo
test
push
cmc
outsb
popf
push
sahf
pop
add
mov
pop
out
mov
lahf
fsubrs
xor
pop
xchg
mov
cmpsb
xchg
repnz
lods
in
push
push
jae
outsl
pushf
mov
pop
cwtl
nop
mov
dec
push
gs
jle
mov
cld
pop
inc
inc
mov
dec
aaa
cld
jle
iret
call
sbb
loop
stos
cmp
adc
fisttpll
push
jle
sub
insl
cmp
add
pop
jae
pop
addl
rolb
and
cmc
pop
jns
test
and
ret
in
clc
aaa
xchg
jno
mov
xchg
sti
cmp
sbb
in
fisubl
push
adc
sbb
dec
ja
sbb
xchg
dec
jo
call
and
aaa
mov
lcall
bt
adc
js
aaa
frstor
push
mov
mov
dec
add
push
test
inc
pop
roll
add
push
jb
jmp
es
mov
js
dec
jno
inc
popf
adc
imul
dec
pop
mov
pop
aam
push
jg
adc
in
test
dec
cld
jae
das
pop
add
xchg
push
dec
xor
push
pop
mov
popf
addr16
cltd
addr16
out
pop
push
inc
popf
call
dec
adc
xchg
jle
lock
cmp
dec
aad
mov
adc
jnp
ret
adc
arpl
ret
push
mov
in
dec
aaa
in
repz
mov
aas
adc
and
cmc
cmpsl
push
das
pop
je
fistpl
push
lret
jns
jns
push
mov
and
cld
pop
jmp
aaa
fwait
push
movsl
sbb
js
mov
call
pop
mov
push
mov
xchg
dec
in
adc
sub
pop
push
scas
mov
insl
or
stos
cmp
xchg
insl
orl
jmp
es
scas
scas
pusha
ss
cmpsl
pop
pusha
or
dec
sub
ficomps
pop
insl
aaa
adc
sti
push
pop
xchg
mov
jae
jnp
push
fadds
push
cwtl
add
xchg
iret
cmp
lods
mov
pop
notb
ltr
cltd
js
js
dec
fsubrs
cmp
insl
repnz
sbb
dec
mov
mov
loope
pop
call
mov
mov
sti
ret
cmp
js
ficoms
wbinvd
jmp
outsb
jno
push
cmp
enter
sub
loope
divl
into
andb
lea
mov
pop
cltd
or
jbe
pop
aaa
add
lcall
push
push
pop
or
xchg
fimull
iret
xor
xchg
lea
inc
jno
inc
aaa
dec
lods
mov
out
imul
pop
xchg
jns
jmp
push
sub
roll
or
into
mov
in
sahf
sbb
adc
popa
xor
sub
dec
xchg
dec
insb
loope
mov
pusha
jno
pop
sahf
test
push
push
jle
push
psubw
flds
lods
lods
or
and
sbb
inc
mov
pop
scas
xor
mov
inc
adc
ss
jnp
cmpsb
mov
mov
jp
stos
roll
sbb
cmc
mov
push
sbb
pop
dec
inc
fistps
sti
shlb
push
outsb
test
push
sbb
imul
push
dec
pop
lcall
icebp
cmp
nop
sbb
add
jne
cli
test
movsl
outsl
sarl
push
adc
lea
mov
inc
mov
jae
sbb
lods
shll
xor
ja
push
lods
inc
or
test
sbb
popa
sbb
mov
mov
sub
xor
std
or
fcomps
hlt
add
push
pop
add
push
adc
mov
cltd
xchg
add
popa
push
sbb
call
fidivrs
xlat
mov
mov
xchg
test
xor
xor
pop
push
cs
scas
dec
pushf
jmp
jno
xchg
ss
ret
pop
jno
aam
pop
mov
pop
lcall
sbb
dec
out
push
and
or
cld
in
into
jno
scas
test
ljmp
push
push
movsb
fdivrl
jmp
jae
push
push
and
ljmp
cmp
in
jecxz
cmpsb
gs
pop
clc
pushl
adc
pop
in
out
fs
cmp
jle
adc
incb
inc
push
jp
add
cld
shlb
movsb
subl
mov
adc
and
mov
andb
jge
dec
lock
jecxz
jne
jle
test
data16
and
push
addb
leave
push
mov
and
lcall
xchg
cltd
sbb
fstpl
repz
ss
mov
scas
jbe
negl
xlat
mov
ljmp
inc
out
repnz
outsl
pop
outsb
cmp
stos
add
sbb
xor
lea
jo
add
sub
jo
jnp
xor
mov
insl
mov
cmpsl
or
mov
imul
fucomp
andb
ss
or
cs
pop
out
jg
pop
mov
mov
dec
data16
movsb
pop
aas
pusha
pop
insb
jl
xchg
pop
add
inc
mov
and
in
pushf
adc
add
insb
cmpsb
mov
xor
in
in
pop
adc
ret
loope
jmp
sbb
sbb
in
jge
loope
mov
ss
call
pop
sub
cltd
cmpsb
test
fadd
xchg
ds
adc
aaa
pop
ret
xor
mov
enter
cld
in
fimuls
jge
mov
push
add
imul
jl
mov
ja
loop
push
and
loopne
dec
popl
mov
adc
fidivrs
or
icebp
jo
sub
xor
pop
dec
fldenv
mov
sub
cmpl
mov
shlb
subb
or
mulb
and
inc
mov
adc
jmp
dec
push
rorb
cs
loope
mov
test
nop
jg
add
add
dec
mov
sub
pop
es
mov
push
bound
xchg
repnz
fcmovnbe
es
pop
fisttpll
ret
ret
lods
je
aaa
int3
sti
jle
fldcw
lret
mov
mov
es
nop
adc
imul
pop
daa
int3
jb
cmp
test
outsb
je
mov
scas
pop
iretw
stos
fldt
in
stos
mov
out
adc
lea
int
xor
jg
fstp
pop
fsts
pop
and
cli
out
dec
lret
sub
iret
fistl
xchg
rcrl
mov
push
inc
movsl
loopne
mov
inc
cmp
jnp
movsb
push
push
je,pt
xor
cmp
pop
aas
imul
dec
sbbl
xor
adc
loopne,pt
mov
les
adc
sti
sbb
mov
test
mov
pop
fbstp
or
or
push
inc
fwait
and
enter
cmp
jecxz
mov
nop
mov
lock
aam
sub
cmp
push
xchg
jnp
aaa
pop
es
fsubrs
jg
cwtl
jns
icebp
xchg
inc
jle
and
shll
lcall
cwtl
ss
jbe
ret
lods
mov
daa
cmpsl
xorl
bound
cwtl
mov
mov
out
ret
das
sub
jns
rcrb
cli
xchg
into
fdivrl
shll
and
xlat
ds
aaa
inc
mov
lcall
push
fidivrs
push
inc
stos
mov
into
ja
jecxz
repz
mov
pop
adc
in
mov
insb
push
in
jmp
in
and
in
loopne
push
bound
clc
jb
stos
es
std
add
adc
sbb
incb
jae
aaa
scas
push
out
enter
pop
push
lahf
mov
mov
ret
insb
aam
cmp
lea
ljmp
xchg
imul
mov
or
sub
enter
sub
into
and
es
jle
repz
xor
iret
int
pop
bound
xor
jae
mov
cmp
insl
xchg
mov
ficoml
in
jmp
fisttpl
jae
xchg
push
sub
jge
das
dec
mov
cmp
jmp
enter
call
mov
adc
sbb
lcall
sti
xchg
js
inc
iret
add
dec
or
ficompl
movsb
fsubs
cwtl
test
test
imulb
xor
fnsave
mov
cmp
xor
aas
shl
and
sbb
dec
or
scas
pop
fwait
mov
sahf
xchg
out
in
adc
sbb
test
je
pop
addl
cs
mov
adc
in
jns
add
mov
xchg
push
pop
bound
imul
iret
xor
insl
xor
xor
jmp
loope
mov
mov
repz
sahf
fsubrl
pop
icebp
sub
popa
jbe
arpl
jecxz
mov
and
xlat
aaa
mov
aad
add
jno
jbe
and
lds
and
in
inc
movntps
pop
sbb
adc
pop
jnp
push
mov
fstps
fistps
pop
and
dec
and
or
stos
loopne
test
mov
subb
mov
sub
sbb
popf
inc
and
out
cmp
jle
aaa
jno
jle
pop
and
dec
imul
push
push
fisubs
lea
jecxz
ljmp
jae
push
mov
aaa
sbbb
and
jbe
sbb
mov
fisubs
mov
and
adc
mov
inc
jl
inc
cmp
pop
sti
push
pop
push
sub
bound
test
out
loope
mov
cltd
loop
mov
xor
sbb
in
xor
xor
and
sti
test
hlt
insl
lahf
imul
mov
aaa
mov
pop
mov
inc
pop
ficoml
mov
test
repz
jo
pop
hlt
xor
xchg
push
cmpsl
xor
mov
and
in
pop
divl
popa
xchg
lds
push
mov
fwait
sub
cmp
aaa
sbb
xor
xor
pop
sub
adc
icebp
sbb
les
pop
pop
inc
stc
testl
ficoms
pop
jb
int3
push
mov
add
mov
and
push
popa
sbb
sbb
mov
es
sub
adc
dec
push
stc
lret
imul
ds
pusha
imul
jmp
repnz
cmp
cmpsb
movsl
arpl
pusha
xor
iret
jno
lods
mov
jbe
cmp
sub
rcrb
addr16
ret
lods
test
ss
out
mov
cmpsb
loopne
lock
pop
loope
sahf
data16
jp
aaa
cld
stc
lds
iret
scas
out
insb
cmp
sti
ss
jl
sub
aaa
xlat
cmp
movsl
inc
mov
jae
mov
mov
inc
ret
loope
jns
test
dec
mov
loopne
fstpl
push
ret
out
mov
incb
fidivs
iret
xchg
ss
cld
sti
outsb
rcrl
scas
cltd
mov
sahf
aaa
push
mov
pop
lods
push
mov
ds
scas
add
jno
and
cmc
pop
cmp
pop
aad
popf
ljmp
test
clc
lret
ret
pop
mov
in
add
popf
aaa
pop
mov
dec
push
in
fcompl
lock
mov
insb
pop
jno
aaa
and
movsl
xchg
adc
add
adc
and
jp
andl
imul
cmp
in
fnstsw
sbb
sbb
cmp
insl
stc
dec
pop
or
cmpsl
pop
and
cmpsb
adc
int
lret
mov
jmp
dec
loopne
leave
std
js
mov
pusha
mov
sbb
and
add
fmul
lock
cmp
lea
push
mov
push
enter
dec
pop
int
cltd
fildl
xchg
sbb
mov
push
data16
jnp
inc
ret
mov
dec
das
cltd
cmpsb
and
int3
xchg
jno
dec
xchg
sbb
pushf
sbb
loopne
nop
jbe
faddp
dec
sbb
aaa
cwtl
scas
pop
mov
loop
or
dec
ss
inc
dec
push
push
imul
dec
shlb
cli
dec
or
mov
add
pusha
sti
cmpsb
adc
and
cs
add
imul
push
or
movsl
dec
pop
xor
in
cmp
mov
insb
enter
push
sub
adc
dec
loopne
sti
jno
in
jmp
sahf
icebp
xor
sahf
mov
int3
push
addb
mov
rorb
cmpsl
std
stos
cmp
pop
mov
or
cs
pop
pop
cmovs
mov
notb
dec
pop
repnz
arpl
mov
cltd
xchg
popa
in
aaa
push
movd
cltd
testb
pop
stc
or
shll
dec
jmp
rcll
sub
movsl
adc
sbb
jp
xchg
call
in
outsl
out
loope
enter
lcall
pop
flds
in
jo
mov
sbb
jb
sbb
cltd
mov
push
push
dec
int3
cwtl
xor
xchg
or
inc
out
add
cltd
or
lods
jp
adc
pop
cwtl
sbb
outsb
nop
inc
push
mov
fdivr
dec
stc
xor
jp
sbb
and
shl
dec
mov
mov
push
adc
test
mov
mov
add
scas
out
test
mov
repz
add
sub
and
imul
loopne
jle
cmp
mov
pop
adcb
frndint
ss
fs
push
lret
adc
pusha
ficomps
out
stc
adc
imul
lea
or
dec
vmread
ljmp
push
loop
sbb
xchg
mov
mov
cmp
rcrl
loope
loop
rolb
add
mov
dec
inc
or
fsin
pop
pop
int3
adc
int
jbe
mov
mov
ffree
mov
outsb
mov
cmp
add
cmpsb
mov
jo
setp
sub
aam
xchg
jae
push
aas
ljmp
fnsave
xor
ret
or
ss
mov
das
outsb
or
lods
xchg
std
call
rol
lret
pop
dec
cmpb
xor
mov
jb,pt
movsl
popa
lds
sbb
and
push
sar
arpl
je
je
loop
in
daa
cld
jle
cmp
fisttpl
mov
adc
mov
xor
push
cmp
js
repz
andl
scas
pop
xchg
lcall
fnstcw
roll
test
aaa
and
idivl
sbb
hlt
push
mov
push
bound
inc
fsubr
xor
ja
pop
mov
aaa
sub
in
dec
sbbl
lcall
sbb
loop
sbb
rcrl
rcrl
mov
popf
sub
xlat
addr16
adc
sbb
into
jb
jl
adc
repz
js
fstpl
mov
movsl
pop
cmp
jle
out
lods
sbb
xchg
push
adc
add
imul
pop
nop
js
dec
arpl
mov
sbb
jge
inc
inc
dec
pop
xchg
adc
enter
pop
outsb
data16
dec
sub
je
arpl
mov
gs
cmp
popf
xchg
in
sbbb
mov
mov
stc
mov
pop
movsb
inc
aas
pop
jb
and
std
inc
mov
push
ret
sbb
xchg
aad
mov
or
sub
filds
xchg
cmp
stc
shrl
popf
xor
jp
cwtl
and
sbb
jae
mov
sbb
xchg
into
mov
in
cmp
inc
std
rcrb
jmp
in
jbe
rclb
cmp
or
inc
jbe
aaa
push
xchg
outsb
sbb
bound
pop
dec
sub
inc
xchg
xchg
mov
sbb
stos
jg
cmpl
adc
shll
push
xchg
pop
push
cld
shll
int
xchg
pop
cmp
sbb
and
in
loop
sub
and
hlt
sbb
pop
push
cmp
adc
fimuls
aas
daa
andb
mov
mov
lock
mov
fisubrs
test
pop
mov
jge
lea
or
cmp
xor
adc
inc
pop
inc
shlb
jmp
sbb
inc
add
fistpl
aas
shll
int3
add
jae
imul
adc
mov
xchg
pop
addr16
jmp
pop
int
testb
test
ds
dec
outsb
sbb
rclb
pop
pop
jl
xor
cmc
sbb
lea
stos
mov
fsubl
xor
mov
data16
cs
arpl
adc
shll
mov
pop
cwtl
addr16
call
imul
cmpsb
inc
jle
pop
mov
sub
stos
pmulhuw
aaa
cmp
and
cmc
and
jno
pushf
jns
mull
sub
or
lea
in
sbb
negb
inc
pop
fisttpll
jmp
push
push
cmc
jo
loope
jp
sbb
dec
ss
lods
es
nop
out
jmp
pop
add
adc
pop
mov
cmp
inc
pop
fnstenv
push
stc
xchg
leave
adc
add
imulb
xor
and
xchg
xchg
in
in
mov
and
imul
push
test
jle
mov
imul
mov
mov
lea
push
mov
cmp
jle
imul
repz
fsts
jns
mov
add
cmpsb
pop
dec
dec
mov
push
enter
ss
and
add
in
dec
push
jl
xor
cmpsb
loope
sbb
dec
aaa
mov
mov
sbb
or
fnstcw
sbb
sub
lret
repnz
andl
cmp
shlb
sti
jb
mov
push
jb
dec
dec
dec
addl
inc
pop
dec
xchg
int3
push
mov
cmpsl
jbe
out
fwait
out
push
pusha
lcall
push
jmp
inc
and
xchg
cld
insb
std
push
sbb
mov
cmp
ja
inc
insl
mov
cmp
pop
imul
adc
addr16
repnz
sub
stos
out
push
push
in
sbb
dec
push
insl
xsaves
jno
enter
insb
add
inc
sahf
arpl
in
es
lods
mov
adc
jge
pop
scas
jle
mov
arpl
les
cmpb
and
push
fildl
sbb
xor
lcall
cli
push
and
sarl
bound
mov
test
push
sbb
mov
stos
loope
enter
cltd
setge
sub
jae
sub
pop
shll
sbb
rorl
sbb
loop
mov
repz
div
in
mov
jo
xor
add
lcall
mov
das
ret
jg
imul
fdivl
and
push
inc
xor
jecxz
mov
cwtl
push
enter
jg
xchg
lret
pop
dec
pop
sub
sub
jnp
sahf
sbb
fisttps
or
pop
cmpsl
mov
push
stos
add
push
das
sbb
int
shr
test
shlb
aaa
and
call
nop
mov
cmpb
hlt
or
out
lret
loope
lret
enter
jp
mov
pop
dec
sub
mov
lret
or
adc
stos
push
lcall
sub
and
scas
aas
cmp
xchg
rcll
test
outsl
imul
in
dec
xor
inc
cmp
lea
jp
inc
jo
mov
pusha
aaa
in
arpl
jno
in
fnsave
outsb
ss
mov
mov
ret
popa
add
or
jmp
ss
sub
mov
dec
dec
xor
shrb
or
dec
cmc
dec
xchg
lahf
in
inc
inc
jp
in
fs
hlt
jmp
shrl
add
aaa
xchg
cmp
xchg
ds
adc
rol
add
leavew
adc
pop
movsl
subl
and
pop
dec
add
outsb
fadd
inc
adc
int3
lods
pop
jl
jg
cmp
and
lea
push
jmp
ja
jecxz
fdivs
mov
mov
and
shrb
lret
je
insb
loop
push
mov
lahf
or
mov
cmpsb
xor
mov
cwtl
mov
aaa
sbb
into
adc
idivb
call
mov
icebp
mov
je
lcall
and
lds
pop
mov
call
mov
jnp
les
arpl
cli
pop
nop
out
aaa
sbb
lcall
mov
addb
push
data16
icebp
arpl
into
xor
fwait
jnp
dec
repz
aas
imul
push
sbb
in
mov
fisubl
pop
sbb
ja
rcl
rolb
sbbb
sub
addr16
test
push
stos
pop
lcall
sub
pop
movsb
mov
xlat
int
repz
mov
add
add
sub
fdivl
lds
outsb
push
dec
mov
xchg
inc
cmp
sbb
or
dec
lcall
fsubrl
push
jle
popa
pop
sbb
cwtl
loope
mov
push
fildl
fxch
cmpsb
pusha
mov
lds
cmp
cli
and
xchg
hlt
cmp
pop
mov
pop
add
inc
mov
lret
cmp
xchg
pop
lods
jno
rcrl
xor
std
xchg
rolb
sbbl
imul
enter
out
sbb
enter
jae
testb
filds
out
jl
mov
sarb
cmp
test
push
in
pop
not
jno
jb
mov
adc
mov
jp
nop
mov
rorb
jmp
clc
jns
inc
imul
popa
into
xchg
cld
jecxz
pop
dec
sbb
jg
stos
dec
mov
ja
push
jb
pushf
aas
xchg
pop
int
mov
sbb
stos
jecxz
pop
bound
mov
dec
into
pop
dec
and
fsubrl
aas
addr16
pop
and
pop
and
inc
cltd
sub
mov
push
xchg
dec
jns
push
inc
daa
mov
cmp
sbb
jb
pop
outsb
loope
push
sbb
fwait
mov
fcompl
icebp
aaa
adc
ret
mov
clc
pop
cmp
clc
iret
icebp
mov
fprem
jnp
inc
jae
stos
pop
hlt
int
fsub
arpl
push
mov
inc
cs
mov
dec
pop
dec
jnp
or
in
icebp
inc
mov
and
xchg
push
pusha
dec
fucomp
adc
out
repz
roll
jo
cmp
out
mulb
cmpsl
aaa
sub
stos
push
pop
outsb
scas
and
xchg
xchg
cmpsl
jg
and
jb
pop
add
xchg
mov
iret
in
iret
sbb
xchg
jle
and
shlb
jb
cs
setno
popf
idivl
lret
sbb
cmp
sub
das
cld
xor
cmpsl
cld
dec
mov
jle
mov
out
shll
ficoml
in
popf
fidivs
inc
arpl
out
lea
sbb
mov
out
movsb
rcll
jle
leave
in
outsb
pop
sbb
lret
cs
ds
fnstenv
lret
push
aaa
cmc
push
lods
jns
les
cmp
jno
xor
or
pop
repz
aas
stos
pop
jae
cs
adc
dec
aaa
cs
aad
push
ds
or
mov
sub
hlt
mov
mov
cmp
adc
aaa
out
sub
imul
inc
call
jns
dec
mov
jmp
fadd
cmp
add
and
dec
lret
and
jge
jle
bound
repz
xor
test
add
push
inc
fisubrl
in
push
mov
pop
sbb
test
pop
loopne
inc
xchg
xchg
das
and
iret
mov
mov
push
jmp
xchg
sbbb
dec
dec
cmp
inc
xchg
aaa
orb
mov
cmc
adc
out
out
shlb
cmpsl
pop
dec
nop
mov
int3
pcmpgtw
sbb
inc
jl
mov
jmp
popf
sub
xchg
leave
jae
inc
pusha
jmp
mov
sbb
repz
dec
jne
and
cld
lcall
ljmp
jo
lcall
sbb
add
pop
lahf
xor
jecxz
aas
xor
adc
cmp
les
arpl
pop
loop
outsb
dec
dec
mov
imul
nop
int
push
shrl
call
es
pop
sbb
inc
dec
loope
adc
jge
das
imul
ds
cmp
aas
js
xor
push
lods
pop
mov
cmp
ds
arpl
aaa
ret
pop
aas
imul
cli
ljmp
inc
inc
push
dec
loope
pushf
std
lret
inc
iret
jno
mov
loope
sub
ss
fidivs
push
mov
pop
xor
lret
in
pop
cli
enter
icebp
add
push
pop
adc
fidivs
arpl
popa
fwait
scas
mov
cmp
or
std
cmp
mov
cmp
pop
mov
fstps
or
lods
in
andb
xchg
adc
insl
imul
je
scas
push
outsb
pop
inc
xor
xor
lret
in
aaa
nop
daa
clc
sti
aas
push
cmp
cld
sbb
js
and
push
sti
push
adc
add
cmp
data16
fwait
insb
js
stos
dec
outsb
les
xchg
dec
mov
sbb
sbb
fsub
push
pop
push
fcompl
pusha
jle
ss
jbe
std
in
inc
jno
mov
repz
xor
pop
mov
js
scas
jg
test
push
push
inc
aaa
loop
push
dec
outsl
arpl
stos
xchg
push
aam
push
lods
lcall
inc
mov
jl
loop
xchg
pop
pop
leave
mov
faddl
or
stos
fwait
jle
or
or
out
ret
sbb
dec
movsl
in
jecxz
rol
loop
aas
xor
add
fdivr
xchg
adc
dec
fbstp
lcall
jp
dec
mov
pop
pop
ret
jae
pop
ss
dec
mov
push
pop
mov
push
mov
mov
push
push
and
xorl
mov
out
adc
fcom
inc
dec
cmp
popf
fcmovbe
mov
aas
sub
push
or
shrl
imul
jbe
cmp
dec
jl
stos
xchg
sub
jae
cmpsb
femms
stc
jl
add
pop
inc
push
lcall
lret
xchg
cs
and
mov
and
push
pop
pop
cmp
and
mov
leave
mov
loop
sbb
shl
mov
and
cmp
ret
xorl
cltd
cmp
bound
push
fmul
adc
or
lds
mov
insb
push
ret
pop
mov
int
icebp
iret
xchg
scas
mov
cmp
fstp
cmp
and
jbe
adc
adc
sub
shlb
add
jle
outsb
mov
stos
mov
out
orl
push
pop
aaa
pusha
pop
mov
outsb
cmpsb
pop
push
pop
fstpl
xorb
push
or
mov
push
outsl
pop
mov
negb
jo
int
adc
push
daa
and
fstpl
imul
mov
pop
notb
bound
xor
add
ficompl
aas
push
sub
lock
fldt
xchg
call
push
std
je
insb
cwtl
mov
popa
repz
jle
mov
jmp
push
push
cmc
inc
pop
pop
lock
jno
cmpsl
sub
mov
xchg
bound
orb
dec
es
jne
xor
incl
outsb
inc
jo
xor
sub
and
fldcw
add
out
jae
call
scas
pop
test
aad
pop
mov
sub
mov
or
adc
dec
pop
jmp
aas
nop
out
add
arpl
fstl
incl
imul
addr16
xchg
clc
jne
aaa
out
mov
mov
cs
sub
adc
or
fisubl
and
in
sub
andl
mov
push
ds
fldcw
dec
cmpsb
testl
push
int3
imul
sbb
xchg
inc
dec
test
lock
idivb
in
sub
imulb
lret
fdivrl
pop
scas
in
jne
adc
rolb
lcall
sbb
xorl
push
out
lcall
push
mov
lret
add
imul
out
and
lea
pavgw
je
aaa
mov
push
dec
leave
mov
das
jne
xlat
mov
mov
pop
in
xor
jbe
or
jle
ljmp
aad
lods
xchg
insl
lea
dec
test
dec
sub
sbb
daa
aam
push
mov
xor
fdivrl
push
loop
nop
cmp
cwtl
mov
sbb
or
dec
loop
insb
lea
repz
mov
add
stos
pop
sahf
mov
cmpsl
mov
mov
xchg
lds
pop
jne
imul
jle
fistps
in
movsb
mov
jmp
ret
or
cs
sbb
mov
xchg
xor
test
jo
xor
outsl
fbld
xchg
pushf
sbb
push
addr16
push
mov
xchg
stos
push
jne
es
and
sbb
lea
cmpsl
subl
stos
mov
cmp
das
push
push
popf
add
xchg
dec
dec
imul
jmp
sub
test
xchg
cmp
pop
xor
or
and
jno
cli
pop
cmc
push
push
dec
mov
push
clc
jg
fisubrl
sub
xchg
loope
loop
jb
push
movsl
cmp
fiadds
aam
faddp
out
sbb
mov
and
in
adc
xchg
mov
in
mov
lcall
inc
les
mov
xchg
sbb
pop
pop
lcall
fisubrl
arpl
in
sbb
mov
jmp
sub
sbb
push
dec
adc
mov
jmp
mov
and
adc
jp
xchg
cmp
pop
sbb
mov
pop
sbb
push
dec
pop
les
push
rcr
rcll
sbb
add
mov
mov
mov
icebp
call
aaa
sbb
data16
xor
push
adc
xchg
fadds
mov
andb
push
cmp
imul
fadd
arpl
outsb
push
push
xchg
negb
mov
or
int3
data16
into
mov
fbstp
jl
popa
mov
inc
adc
dec
add
fcomp
ret
test
rcrl
sbb
push
ljmp
sub
popa
int3
lds
inc
or
es
insl
rol
or
aas
cmc
sub
rclb
push
decl
mov
aas
outsl
sub
insl
cld
sbb
inc
cmp
xchg
jl
repz
test
stos
mov
aas
fucomi
in
mov
add
xchg
jle
push
sbb
repz
in
mov
sbb
jns
ss
mov
movsl
adc
dec
inc
pop
xchg
popf
push
dec
out
xchg
ud2
cwtl
mov
push
fdivrl
add
out
jo,pn
in
jnp
call
aas
fwait
inc
cmp
test
cld
xlat
fdivrs
pop
sbb
mov
and
aaa
add
inc
adc
fmull
mov
push
fsubr
int
aad
push
sti
cmp
or
push
xchg
test
ret
decl
sbb
aaa
fwait
stos
pusha
fnstenv
mov
push
xor
mov
imulb
mov
imul
dec
push
and
cmp
ss
push
pop
mov
add
pop
stos
pop
aas
xchg
jp
mov
lcall
dec
pop
imul
nop
mov
xor
lret
aad
and
stos
popf
pop
mov
repnz
fisubs
pop
data16
add
fadds
adc
xchg
data16
aaa
sub
pop
aas
mov
dec
adc
loope
mov
loopw
cmp
ss
repz
int3
in
out
add
aaa
sbb
out
adc
inc
insb
inc
test
pop
add
pop
cltd
cmp
push
sbb
jmp
push
cmp
sub
ss
ja
popf
mov
movsl
flds
cmp
mov
idiv
jnp
stos
mov
ss
jb
pop
lahf
notb
inc
xchg
jle
imul
push
xchg
call
mov
jle
mov
movsl
test
xchg
push
sub
jno
xchg
mov
fistpl
fwait
adc
cmp
hlt
add
es
sbb
dec
fnsave
mov
int
cmc
dec
push
pop
lds
dec
hlt
xlat
fstpt
loope
sbb
shll
les
aaa
xchg
xchg
adc
push
mov
pop
pop
xchg
es
cmp
shrb
jo
mov
push
cmp
ficoms
in
sbb
lock
jle
mov
outsb
leave
ss
and
cltd
push
xor
sub
xchg
sbb
cltd
idivb
mov
fidivrl
inc
bound
push
hlt
and
pop
add
jl
in
bound
loope
xlat
out
mov
clc
dec
mov
repz
xchg
cltd
nop
push
lret
in
and
imul
inc
ret
cmp
mov
aaa
nop
add
cs
sbb
jle,pn
or
lods
push
and
pop
add
imul
jle
ss
xchg
jnp
dec
jb
jbe
push
mov
loope
and
adc
xor
xlat
outsb
xor
nop
adc
stos
in
or
lea
stc
int
movsb
fcomps
es
mov
mov
pop
mov
push
cwtl
dec
ficompl
int
cmp
sub
mov
loopne
sbb
push
std
test
sub
xchg
cwtl
out
mov
sbb
js
in
or
xchg
pop
jbe
lcall
mov
cs
push
adc
xchg
add
sub
jle
and
lcall
sub
mov
mov
lock
ss
ds
idiv
jb
adc
jle
cmp
push
inc
lahf
scas
jle
dec
mov
int
aaa
cmpsl
imul
dec
jp
add
dec
cmpsl
jae
repnz
xor
or
lahf
std
pop
fmuls
ret
mov
mov
pop
pop
mov
insl
js
inc
push
jp
nop
add
icebp
xlat
das
outsb
sbb
adc
inc
pop
leave
pop
test
in
pop
mov
pop
jae
mov
sbb
in
mov
mov
cld
cltd
test
call
mov
lea
pusha
pop
lods
ss
sbb
and
mov
aad
push
mov
jbe
push
pop
stc
cmp
pop
sbb
mov
aaa
jb
mov
push
dec
fdivrs
mov
fnsave
ud0
sahf
inc
es
adc
add
sub
shlb
pop
sti
repnz
mov
aad
push
pop
jmp
sti
add
sbb
nopl
sbb
xor
stc
sbb
leave
jns
testl
pop
loope
lods
js
mov
mov
hlt
push
ja
xor
cmp
pusha
add
and
push
dec
mov
popf
add
scas
outsl
aad
jl
sub
cmp
int3
fadd
nop
mov
icebp
ds
push
cmp
xchg
mov
adc
loop
xor
jbe
xor
mov
out
test
dec
inc
push
push
jle
cmp
fisubl
inc
push
sahf
jmp
xchg
pop
icebp
ficompl
mov
testb
icebp
pop
add
je
mov
inc
pop
std
or
jle
xor
in
add
adc
xchg
cld
pop
fdivl
hlt
sbb
mov
fcomi
adc
shl
lahf
insl
xchg
inc
pop
cmpsl
lods
shlb
cvttps2pi
aaa
and
adc
in
aaa
pop
divl
fildll
sbb
jecxz
jle
adc
push
sub
sub
dec
pop
pop
repnz
inc
outsb
sbb
inc
outsb
mov
sbbb
and
out
scas
in
lods
loop
aaa
lock
pop
xor
cmpsl
lret
shlb
mov
jno
aaa
mov
jecxz
sbb
lock
cmp
jg
pop
stos
mov
inc
cmp
add
int3
push
mov
sbb
pop
clc
pop
pop
sbb
mov
mov
xor
mov
gs
gs
mov
popl
adc
cmpsl
insb
pop
cmpsb
das
mov
ds
fldcw
dec
mov
jne
sbb
pop
popa
and
sbb
cmpsb
arpl
mov
aad
mov
adc
jbe
sbb
stos
dec
dec
lahf
dec
ss
aaa
clc
cmp
and
into
aas
ss
and
cwtl
in
xor
mov
mov
mov
add
mov
or
filds
mov
adc
jnp
fucom
lds
outsl
xchg
cmp
std
lods
mov
lods
mov
and
fnstsw
test
inc
lret
notb
jbe
call
sbb
in
aam
add
xor
movsb
and
decl
add
call
outsb
cmp
inc
xchg
mov
mov
mov
add
mov
fistl
inc
scas
pusha
in
mov
andb
in
jbe
sbb
bound
cld
aaa
mov
lods
das
insl
sti
pop
imul
outsl
xor
sahf
lods
sbb
jae
xchg
push
popf
ja
rep
dec
insb
cld
pop
or
xlat
push
mov
inc
ficomps
pop
cld
dec
adc
out
mov
mov
int3
clc
jp
dec
nop
in
mov
or
stc
xor
shll
dec
stos
call
sbb
mov
adc
addr16
inc
pusha
addb
pusha
movsb
jmp
xor
test
mov
out
inc
scas
xchg
pop
sti
rcrl
or
fdivrl
push
out
cmp
cld
pop
mov
outsl
and
push
push
and
xor
mov
mov
push
push
rolb
and
ret
jge
and
dec
cmp
icebp
dec
or
sbbb
insl
inc
and
jne
icebp
mov
add
je
dec
inc
les
pop
repz
jmp
add
popa
mov
rcl
call
test
into
cmpsl
mov
jg
adc
mov
push
out
xchg
mov
inc
jne
add
inc
aaa
int3
fs
mov
in
mov
mov
push
pop
lods
adc
push
sti
push
xlat
push
cli
push
mov
adc
jb
mov
sbb
pop
out
xchg
adcb
loope
adc
push
bound
mov
push
xor
cmp
lock
push
insb
in
mov
pop
je
or
push
jle
loop
mov
mov
cs
add
cmp
xor
or
adc
ret
pop
jp
dec
xor
fbstp
or
xor
adc
out
scas
cmp
cmpsb
adc
add
in
xlat
adc
in
aaa
mov
lret
adc
arpl
aaa
or
pop
test
shll
pop
stc
adc
rorl
in
sub
adc
xlat
into
fs
jl
dec
sbb
fcoms
cmpsl
inc
add
pop
cltd
mov
subb
inc
and
mov
add
popa
add
dec
bound
lods
rcll
imul
loope
push
adc
push
divl
mov
push
and
aam
clc
or
ss
fcomp
jne
cmc
and
test
movsb
jnp
lcall
fistpl
add
add
std
mov
sub
ljmp
les
je
cmpl
mov
jmp
call
in
push
xor
aaa
cli
dec
enter
inc
pop
out
pop
jecxz
or
adc
jp
pop
insb
sahf
inc
je
push
mull
mov
pop
mov
pop
das
stc
rcl
lods
pop
clc
outsb
sub
jg
push
push
mov
icebp
and
pop
outsb
sbb
imul
xchg
sbb
cltd
push
pop
cmpsl
std
std
aaa
dec
jnp
stos
faddl
sub
clc
aas
inc
bound
mov
repz
push
divl
mov
cmp
imul
pop
lcall
xchg
mov
shrb
mov
lods
sub
add
movb
or
imul
adc
push
fnstcw
fidivrs
fistl
insb
popa
imul
loop
mov
jo
ret
push
aas
push
and
and
enter
pop
inc
xchg
nop
jle
mov
inc
mov
lret
jle
mov
pop
test
test
mov
in
sub
jns
js
pop
xchg
outsb
mov
pop
dec
aad
loope
push
sti
dec
jbe
jmp
call
mov
push
push
and
dec
sbb
out
push
stc
and
jp
sbb
xchg
push
adc
les
xorl
adc
mov
and
sbb
cs
lret
ja
sub
inc
adcb
cmp
cmpsb
pop
aam
aaa
in
mov
stos
loopne
dec
shrl
movsl
pop
push
testb
inc
out
std
dec
imul
push
mov
lahf
cmc
in
xor
ds
adc
addr16
pop
inc
test
daa
dec
push
push
jo
add
shr
lret
out
cmp
pop
and
das
inc
sbb
insb
dec
icebp
popf
sub
in
push
pop
push
pop
sub
add
or
pop
daa
lea
dec
es
cmp
pop
outsl
test
gs
addr16
mov
sbb
and
pop
mov
ss
ret
data16
mov
fsubl
jg
aaa
sbbb
imul
sbb
xor
adc
sub
and
andb
mov
fdiv
enter
cs
negl
aaa
cmp
scas
xchg
fcmovne
pop
int
ds
aas
jo
cmpl
mov
jae
sub
mov
mov
mov
shll
inc
fisubrl
ljmp
cmp
popf
jge
cmpsl
lock
add
outsl
ljmp
outsl
out
xchg
lret
fs
fmul
mov
addr16
arpl
cli
rol
test
push
cmp
std
sub
push
loopne
aad
sti
scas
jmp
inc
add
mov
jg
mov
push
lods
pop
cmp
push
xchg
mov
sub
cmp
mov
sbb
mov
int
into
jno
ss
or
loopne
push
xlat
mov
and
loope
mov
test
nop
mov
adcl
mov
jp
or
jbe
sbbl
xchg
xor
fists
add
rorl
das
les
test
dec
in
adc
lcall
sahf
push
iret
data16
movsl
push
imul
jmp
cmp
out
or
add
jle
lock
mov
inc
rclb
ljmp
lods
sub
insb
mov
mov
mov
inc
mov
pop
outsl
jle
leave
cmp
dec
sbb
push
es
sub
adc
jl
push
lods
dec
in
push
mov
stos
test
mov
adc
test
cmp
or
cltd
out
xchg
ss
and
lods
int3
mov
daa
dec
inc
adc
outsb
push
push
enter
addb
add
daa
or
aaa
mov
jno
dec
outsl
add
orl
push
xor
cmpsb
out
xchg
js
pop
les
ror
inc
repz
sahf
and
push
jae
inc
jg
in
xchg
scas
popa
insl
push
dec
mov
cmp
dec
lock
mov
aad
pop
mov
mov
and
arpl
mov
imul
shrb
xchg
ds
xchg
push
fwait
test
mov
sbb
mov
push
dec
mov
int3
mov
jb
ds
lret
mov
sbb
jbe
sbb
das
jo
mov
fcomi
xor
std
add
mov
mov
lods
pop
lea
adc
jmp
mov
insb
mov
in
xor
pop
dec
jno
frstor
in
adc
cwtl
lds
and
fcmovnb
imul
adc
and
icebp
das
jmp
or
or
loopne
es
pop
xchg
dec
das
fdivs
divb
mov
fsts
jbe
mov
stos
aaa
lret
cwtl
adc
sbb
inc
pop
pushf
pusha
dec
ret
insl
push
mov
xor
pop
ss
push
mov
and
in
pop
lods
sub
push
add
mov
enter
shll
inc
jle
pop
jne
stos
rolb
je
mov
cmp
mov
imul
add
popl
ljmp
add
fstpl
lcall
mov
fwait
mov
mov
mov
rorb
inc
or
sbb
mov
jae
cmpsb
ffree
push
sti
mov
pop
outsb
sbb
outsl
popf
divl
fldt
out
cli
mov
cmp
push
lds
push
sbb
and
aam
cmc
xchg
xor
out
xchg
mov
cs
out
mov
and
stos
dec
cs
push
mul
cmp
ss
aaa
cmp
pop
es
hlt
xchg
outsb
mov
lret
lea
mov
loope
jbe
or
jo
and
ss
push
push
jbe
pop
insl
pop
je
adc
xor
dec
outsl
enter
push
add
sub
jge
mov
shlb
adc
jl
daa
imul
test
ds
pop
sub
jmp
ret
sbb
sbb
sub
mov
mov
sbb
lea
dec
add
js
sub
and
addr16
sub
xor
inc
pop
jmp
cmp
enter
in
adc
add
cmpb
lcall
jbe
fistps
push
sub
mov
dec
xor
sbb
xchg
jno
mov
lret
cmp
sti
stos
inc
and
mov
cmpsb
cmp
inc
stos
jno
or
ljmp
pop
cmc
xchg
ficoms
lret
dec
pop
push
sahf
jb
les
lea
dec
in
push
add
inc
mov
outsl
mov
shll
sub
out
inc
pop
cmp
fdiv
xchg
js
adc
add
popf
push
cmp
repnz
enter
test
mov
mov
insl
jbe
sbb
pop
pop
imul
sub
js
cmpsl
in
les
mov
add
pushf
lock
lods
mov
sbb
pop
push
sbb
sbb
loope
push
and
jecxz
ss
jmp
cltd
ds
lcall
pop
push
and
rcrl
inc
sub
sahf
dec
sbbb
adc
aas
sbb
js
inc
jmp
pop
out
dec
das
lods
cwtl
mov
lahf
push
ret
jbe
loope
push
pop
aam
sub
or
ror
cmp
mov
outsl
sti
cltd
aas
xchg
push
push
pop
sbb
xchg
push
inc
or
cli
mov
cmpsb
loop
shrb
repnz
icebp
jg
push
jbe
sarb
stos
dec
pop
daa
hlt
pushf
faddp
inc
or
ss
jmp
test
dec
cmp
enter
sub
movsb
push
fildl
cmp
dec
push
in
arpl
add
scas
cs
or
mov
cwtl
out
insl
out
rol
ret
mov
xor
popf
aas
push
out
call
jge
sahf
sub
add
xor
ss
cmp
inc
insl
dec
and
mov
fmul
mov
xchg
fiaddl
mov
mov
sbb
sbb
test
mov
sub
pop
ret
rolb
pop
xchg
mov
fcmovnu
ret
jbe
scas
cmpsb
pop
addr16
les
push
arpl
pop
mov
cmpsl
sbb
mov
inc
sub
movsb
movsl
push
enter
outsl
lahf
push
xchg
in
outsl
sti
xchg
popa
xlat
adc
scas
cmp
dec
or
add
jl
push
mov
adc
call
mov
fwait
cltd
cli
lea
aaa
mov
idiv
mov
aaa
mov
mov
mov
bound
lea
mov
xor
mov
packsswb
aam
repnz
mov
push
jmp
data16
mov
xchg
hlt
lods
je
out
repnz
cmpsb
mov
lret
xor
push
cmp
scas
pop
lcall
inc
pop
xor
cmp
xor
adc
pop
pop
push
ret
dec
cmp
inc
cmp
or
inc
push
pop
cli
sti
and
dec
pusha
xor
outsb
or
adc
jle
into
xor
repz
out
pop
cmpb
xchg
mov
jbe
mov
mov
jmp
sub
pusha
sbb
dec
outsb
dec
mov
jg
arpl
xchg
sahf
inc
mov
imul
scas
xchg
pop
or
ss
sub
jbe
popf
and
mov
xchg
testl
leave
cmp
xlat
lea
push
pop
imul
dec
les
test
sub
pop
fldl
inc
adc
sbb
push
mov
test
sub
jne
push
mov
push
cmp
in
aaa
shlb
fdivrl
loopne
dec
in
pop
ret
mov
mov
add
add
popf
loope
cmc
pop
xchg
int3
pop
addr16
mov
cmp
mov
mov
hlt
je
jbe
push
and
aaa
and
or
bound
sbb
inc
xor
or
fisttpl
lea
add
mov
adc
adc
add
sti
outsb
out
stos
lea
pop
jae
mov
sub
pop
icebp
aas
push
and
cltd
enter
popa
out
nop
push
push
paddusw
cmp
dec
jne
xor
mov
out
out
aam
mov
jp
in
out
push
mov
jp
add
xchg
mov
jo
roll
push
scas
punpckhbw
loop
mov
sub
shl
ljmp
aam
lea
add
adc
xchg
test
adc
aaa
add
cs
mov
clc
cwtl
push
in
mov
and
std
add
or
dec
cmp
aam
aam
jle
adc
repz
stc
mov
push
xor
and
popf
mov
fimuls
jne
dec
rcl
or
std
xchg
cs
push
shlb
enter
bound
data16
dec
jle
jle
lock
add
mov
add
clc
sbb
stc
shlb
aaa
ffreep
cld
add
dec
mov
mov
out
shlb
stos
jg
add
cmp
dec
movsl
and
push
test
mov
xlat
inc
jmp
repz
ret
call
inc
lods
aaa
mov
push
out
ja
bound
pop
sub
movsb
push
popa
jle
and
loop
mov
push
push
mov
leave
sub
enter
pop
lock
jle
dec
push
sbb
jg
xor
push
lods
stos
xchg
mov
sub
jo
mov
jmp
cmp
push
fstl
push
fwait
jge
lods
and
jl
faddl
ds
sbb
cmp
xor
inc
pop
sbb
xor
adc
or
aad
mov
xchg
jl
bound
test
icebp
and
in
sbb
lods
pop
jo
mov
cmp
xchg
rcl
inc
bound
or
adc
push
jb
or
movsl
sbb
mov
push
jp
aaa
and
cs
jne
cmpsl
inc
in
fisttpl
add
je
les
out
pop
and
xchg
mov
push
jg
repz
add
inc
std
aaa
xor
mov
pop
loopne
fstpl
cwtl
sub
push
pusha
sbb
and
aaa
push
jb
cmp
ret
mov
cmp
mov
jbe
mov
pop
stc
imul
out
xchg
pushf
int
push
lods
fbld
cmp
xor
addr16
inc
movsb
jecxz
cwtl
xor
arpl
lock
fs
bound
adc
push
push
mov
mov
cmpsb
xchg
push
inc
pop
pop
jne
hlt
insb
sub
xor
cmpsb
nop
push
outsb
jg
cmp
stos
lea
ficomps
pusha
inc
pop
dec
jle
lahf
mov
pop
mov
es
js
mov
in
sbb
mov
addr16
mov
sbb
pushf
lods
cltd
subl
xor
fwait
inc
fildl
imul
je
jl
sahf
mov
loope
sub
or
and
xchg
aam
jge
sub
ja
gs
loop
pop
sub
or
jmp
push
jl
inc
fwait
loope
mov
inc
outsl
jae
cmp
fdivrl
daa
mov
incb
push
test
mov
loope
jmp
push
cmp
add
push
jbe
lods
ss
sub
adc
and
push
jno
ficoms
loopne
xchg
cld
xor
outsb
dec
cmp
lret
les
mov
sub
pop
xor
fs
std
sbb
mov
out
ss
aaa
xchg
popa
pusha
jb
in
out
mov
mov
faddl
add
setl
xor
mov
sbb
push
jno
cmp
add
outsb
pop
xor
lcall
test
push
cld
xor
lret
add
pop
sbb
icebp
ja
stos
jmp
or
push
leave
imul
inc
leave
std
fildl
fwait
loop
stos
xchg
hlt
add
repz
cmp
std
dec
push
iret
scas
subb
outsl
pop
in
mov
jnp
ret
jecxz
pop
pop
and
rclb
mov
pop
and
iret
stos
lahf
pop
mov
insl
outsl
cmpsb
pop
xchg
cmp
aaa
xor
pop
sbb
outsb
mov
aaa
popa
shlb
cld
jno
bound
or
lock
jbe
inc
push
aad
das
loop
fldl2t
xchg
popf
cltd
add
in
mov
lea
push
pop
cmc
shlb
mov
dec
mov
sbb
xor
iret
jb
push
or
cmp
leave
insb
cmp
sbb
dec
lea
add
mov
mov
jge
jmp
sbb
inc
cs
inc
stc
push
jb
popa
lods
out
push
cmp
loope
push
les
test
jp
aaa
call
decb
dec
ss
popl
ret
adc
inc
and
pop
lea
arpl
insl
sbb
sbb
fidivl
sub
mov
mov
add
loop
sbb
in
jno
mov
adc
cltd
mov
sbb
sahf
imul
inc
inc
cmp
test
fcompl
or
cmp
jmp
aaa
jmp
cltd
frstor
push
imul
inc
jno
cmp
testb
cmp
adc
les
pusha
sbb
cmp
mov
sahf
aaa
lret
scas
jge
scas
popa
jb
ljmp
pop
push
loope
push
out
sbb
jb
xor
popf
orb
shll
pop
mov
sbb
sahf
out
mov
sbb
jns
cs
mov
mov
and
jb
outsb
call
stos
and
pop
mov
adc
mov
mov
add
inc
loopne
add
pop
pushf
mov
stc
and
and
ja
in
js
test
jo
add
add
jae
repz
das
push
push
std
lds
jle
scas
aaa
push
loop
out
xchg
jecxz
aas
cmp
xchg
arpl
ret
and
pop
mov
mov
push
inc
inc
test
xor
add
push
pop
jno
imul
add
and
lret
mov
aad
push
out
adc
iret
xchg
and
push
pop
lahf
inc
loope
pusha
push
sub
out
addr16
shrl
dec
xchg
inc
pusha
rcll
dec
and
jl
clc
inc
sbb
daa
push
push
and
stc
movsb
cmp
popf
mov
jle
mov
adc
xor
inc
repz
xchg
adc
enter
xchg
push
cmp
jg
imul
jo
push
scas
push
or
jl
shlb
enter
shr
jnp
das
inc
and
in
loop
stc
call
dec
insb
lldt
lea
push
mov
lods
clc
push
in
cli
add
mov
sbb
push
push
inc
hlt
adc
imul
pushf
mov
lcall
rcrb
outsb
in
dec
sbb
mov
scas
in
xchg
rcll
jp
jg
push
test
pop
repz
outsl
inc
movsl
repnz
arpl
mov
and
rcr
repz
sbb
sbb
sub
push
mov
xchg
std
out
nop
pop
mov
and
rolb
ds
in
pop
sub
lcall
call
cmp
daa
pop
dec
dec
iret
jle
mov
xor
ror
xor
repz
sbb
mov
jmp
sbb
jmp
dec
push
sbb
ds
incb
mov
dec
lods
jbe
lds
dec
jne
inc
cmp
fucomip
adc
pop
sub
sahf
and
insl
jge
inc
mov
xchg
insb
aaa
stos
sbb
pop
dec
pop
push
inc
aad
ror
bound
dec
push
sub
aas
hlt
ss
and
lahf
dec
push
xor
jmp
inc
sbb
jne
cltd
xlat
in
int
loope
mov
xchg
repz
and
mov
test
or
shrl
inc
sbb
jns
inc
in
outsb
in
sbb
shrl
jmp
fdivl
in
mov
lock
lret
imul
imul
outsb
lret
sub
mov
pusha
test
cmp
dec
jp
pushl
outsb
into
adc
push
movsl
xchg
popa
cld
addr16
nop
bound
mov
push
in
mul
jb
push
adcl
arpl
enter
or
imul
ljmp
xor
sub
jno
xchg
adc
cmp
and
lock
insb
inc
into
mov
dec
push
inc
dec
fsubs
mov
mov
mov
xchg
lret
icebp
mov
daa
push
xchg
mov
pop
xor
jae
in
rep
push
jp
loope
xor
cmp
xchg
sbbb
int3
xor
pop
rcrb
and
mov
mov
popa
ret
repz
mov
movsl
lea
jno
movsl
aaa
sub
int
in
and
cmp
mov
orl
push
out
cmc
push
push
adc
rcll
test
mov
push
lret
jb
cwtl
outsb
ror
dec
jle
jns
aad
stos
xor
test
out
sysexit
dec
scas
and
xor
pop
aam
scas
and
xor
mov
pop
aam
sbb
aas
rcl
je
xchg
cmp
jb
lahf
push
ss
or
xchg
enter
cmc
dec
lods
pop
push
lock
xor
sbb
negb
cltd
pop
xor
inc
jecxz
movb
xor
push
sti
dec
fsubl
pop
jo
out
ss
inc
and
cmp
mov
ja
dec
stos
sbb
mov
popf
loope
dec
pop
ret
fwait
add
stos
lds
cmp
outsl
sbb
ljmp
cmp
mov
pop
popf
je
add
jae
test
jl
add
xlat
push
pop
sbb
fadds
mov
divl
insl
rcrb
push
mov
xchg
aad
je
mov
mov
add
pop
mov
sub
repnz
sub
cmp
pop
and
mov
mov
mov
aaa
fmull
xor
in
imulb
lahf
add
je
hlt
adc
out
test
sarl
xor
mov
subb
jecxz
lret
aaa
fstpl
mov
ja
jne
push
outsb
inc
inc
ja
push
or
rcll
jb
idivb
sub
fsubs
cmp
mov
jno
dec
pop
add
fadds
push
rorl
xchg
jnp
insb
call
cmc
or
lcall
scas
shlb
xor
aam
mov
mov
sarb
push
movsl
into
and
xor
es
jg
loope
aaa
sub
icebp
mov
icebp
adc
pushf
or
out
dec
push
test
lret
jb
mov
sbb
out
lcallw
and
icebp
sbb
adc
cmpsl
dec
pop
test
sbb
nop
test
pop
arpl
cmp
pop
pop
imul
sbb
add
pop
mov
push
mov
imul
pop
xchg
lods
clc
jp
out
shlb
lock
in
mov
cmp
aaa
scas
pop
jbe
lock
mov
mov
mov
cmp
xlat
enter
repnz
aad
jl
push
shlb
dec
nop
sbb
ss
cmp
lcall
xchg
cmpsb
fs
mov
ficompl
xor
push
inc
enter
mov
addr16
xchg
mov
repz
or
repnz
xchg
loopne
imul
jnp
cmpsb
iret
pop
sbb
pop
movsl
fstps
adc
cmpsb
test
adc
dec
fsts
push
loope
xchg
int3
sbb
rorl
jne
lret
push
sbb
fdivrs
les
inc
push
incb
test
pushf
lret
push
test
jmp
push
adc
ret
cmp
daa
or
push
stc
dec
ret
adc
xor
pusha
xor
pop
bound
inc
and
dec
leave
xor
loop
sbb
inc
sbb
xchg
lock
pop
or
xor
imul
fsts
filds
add
mov
sbb
pop
lods
popf
adc
jmp
arpl
icebp
mov
outsb
cmp
addr16
jmp
adc
mov
mov
out
insl
xchg
icebp
mov
orb
aas
sbb
sub
outsl
dec
jge
mov
mov
xchg
jnp
sbb
jmp
sub
stc
cld
aad
mov
dec
add
js
and
inc
test
or
or
dec
icebp
mov
dec
push
in
dec
xchg
xor
pop
loopne
and
popa
je
xchg
dec
xchg
outsl
hlt
sti
or
push
fsubrs
lcall
icebp
pop
push
add
push
jb
push
cmp
out
add
mov
mov
mov
jecxz
mov
inc
or
inc
or
jno
add
aaa
mov
lods
sbb
arpl
cmp
arpl
jb
int3
jp
cmp
cmp
cs
jecxz
jns
sbb
addr16
sbb
data16
push
inc
aaa
int
pop
sbb
or
cld
lcall
dec
dec
xor
rcll
decl
mov
popf
sbb
icebp
outsb
sbb
inc
push
pop
jge
in
push
das
in
mov
xchg
adc
repz
jge
or
ds
mov
sub
pop
stos
shlb
aas
psubw
jle
outsl
ret
loop
lret
xchg
cmp
into
dec
mov
movsl
inc
lock
aaa
add
cwtl
sti
or
adc
repz
insl
repnz
jb
ret
jle
pop
jo
sub
or
mov
mov
xor
movsl
sub
pop
inc
xchg
adc
ljmp
out
sti
mov
cwtl
cmp
out
push
dec
inc
es
mov
mov
sbb
sbb
ret
lahf
je
or
aad
inc
jne
pop
lahf
inc
stc
fsubl
arpl
aam
aad
lds
sahf
mov
faddp
adc
rclb
push
jmp
sbbb
xor
ljmp
adc
outsb
push
xlat
pop
pop
in
pop
out
lahf
cwtl
aaa
in
push
xor
pop
mov
sti
fstp
leave
add
fwait
mov
outsl
sbb
lcall
ja
lock
popf
xchg
mov
stc
lea
aaa
jns
stc
dec
pop
add
out
mov
fistl
mov
mov
jp
aaa
or
push
inc
adc
cmp
fsubrs
in
dec
ss
or
inc
out
sarb
test
adc
fstpt
cmp
mov
insl
and
inc
sbb
ja
sahf
xchg
jns
and
pop
popl
in
pop
jbe
mov
cmp
das
fimuls
jbe
mov
push
adc
int3
inc
jo
or
xor
out
std
mov
rcrl
pop
mov
fmulp
cmpb
loope
arpl
push
pop
loopne
jl
jecxz
xor
mov
xor
mov
into
in
dec
ffreep
lahf
push
stos
push
pop
mov
or
fists
icebp
aas
jmp
cmc
inc
enter
in
pop
scas
cld
ret
mov
out
adcl
subl
call
pop
mov
sub
mov
icebp
inc
ss
imul
jns
dec
and
orb
push
int3
jl
leave
ss
daa
stc
into
les
movsb
out
inc
push
sahf
cltd
jbe
pusha
pop
mov
or
lods
popf
mov
insl
mov
pop
sub
sbb
push
xor
icebp
arpl
es
pop
or
xchg
sbb
insb
inc
ret
jnp
inc
xorb
sbb
mov
cmpsb
repz
outsb
stos
not
xor
inc
inc
stos
xchg
add
mov
cltd
add
pop
sbb
xorb
movsl
inc
cmp
fisubl
pop
lods
xchg
or
lea
or
lea
mov
shll
push
pushl
push
jl
cmpsl
shll
enter
popa
repz
jmp
jl
xor
mov
dec
outsl
push
push
dec
xorb
jbe
popf
inc
data16
aaa
aam
cltd
dec
mov
mov
jl
inc
ss
scas
mov
rcll
add
inc
imul
je
add
mov
push
jbe
pop
cld
mov
ss
mov
in
sub
jmp
loopne
ret
lods
sbb
js
inc
push
ret
cmp
xchg
xor
enter
out
mov
mov
std
cmpsb
insb
mov
adc
outsb
mov
xchg
sbb
out
jmp
loope
imul
jae
fldt
in
filds
dec
in
test
push
repnz
bound
cmp
test
push
icebp
xchg
or
sbb
in
jns
sub
and
dec
jno
xchg
add
mov
add
ds
decl
sub
cmpsl
stos
outsb
rorb
adc
push
cmp
imul
push
sarb
dec
cmpsl
pop
dec
pextrw
mov
cmpsb
enter
cltd
dec
inc
xor
push
rorb
stos
dec
dec
mov
cwtl
lcall
push
mov
aas
pop
icebp
inc
and
cld
jmp
jne
dec
testl
and
ret
mov
loope
jne
mov
inc
fadds
xlat
popf
jg
push
aaa
jge
mov
das
xorb
jle
xchg
xor
popa
pop
repnz
add
cli
addr16
dec
bound
pusha
lea
sahf
mov
sbb
mov
adc
add
fwait
aad
mov
push
ret
mov
fnstsw
dec
js
xor
dec
xchg
lret
xor
stos
jno
pop
and
insb
pop
lods
sahf
jnp
imul
test
stc
repz
push
arpl
xchg
xchg
jge
aam
mov
inc
js
imul
lea
xlat
cmp
jecxz
popa
jae
sbb
ror
add
cs
pop
outsb
movsb
push
cmp
xchg
mov
fwait
insb
xor
adc
sbb
adc
das
sbb
lock
xchg
loope
data16
push
shlb
push
gs
arpl
ds
sbb
enter
jne
push
dec
jae
mov
scas
jae
mov
jecxz
es
xchg
jb
out
fnsave
fdivl
mov
test
or
mov
push
mov
shll
xor
loope
fistpll
push
dec
sbb
cmpsb
pop
jae
ret
fdivrl
sub
scas
mov
andl
jb
mov
push
sbb
push
mov
test
sahf
pmulhuw
inc
jnp
sbb
push
lea
filds
ss
sub
mov
and
sbb
inc
outsl
jb
fstpt
fwait
pop
cmpsl
xor
adc
test
xchg
inc
stos
sbb
inc
sbb
cwtl
loope
ljmp
ficomps
gs
jno,pt
out
mov
sbb
fsts
mov
arpl
rdtsc
xchg
fistps
push
lea
nop
inc
fcoms
mov
inc
jae
popa
pushf
push
popf
stos
mov
sub
mov
push
pop
mov
mov
icebp
push
mov
lock
ss
and
sahf
push
mov
out
cmpl
sbb
aaa
and
ds
pop
data16
xor
cld
inc
xchg
mov
lahf
notb
into
lods
out
aas
jle
test
mov
lods
or
add
out
push
incl
mov
aaa
inc
sub
lret
add
cs
jo
inc
ljmp
inc
dec
cmpsl
pop
lods
jbe
loop
outsb
int3
enter
subl
movsb
fldt
dec
push
inc
mov
pop
push
jo
pusha
nop
dec
fcomp
sbb
and
cmp
aas
push
adc
pop
and
cmpl
subb
in
in
nop
scas
mov
aaa
dec
add
ds
fsubrl
ljmp
push
cs
repz
push
and
adc
inc
jle
imul
cmp
or
add
jnp
shlb
iret
pushf
cmp
popa
push
push
rcrl
shrd
push
and
xchg
mov
ljmp
arpl
xchg
mov
test
jo
pop
lret
jg
inc
cmpsb
idivb
cmpsb
add
push
jmp
pushf
push
ds
mov
mov
sub
popf
andl
insb
and
xchg
dec
dec
cwtl
inc
sub
add
lret
loope
sahf
pop
push
lret
push
push
in
xor
adc
clc
or
imul
mov
dec
or
cmp
jg
outsb
mov
lcallw
inc
test
xchg
push
mov
adc
fdivr
loope
cmp
cli
rcll
sahf
or
mov
sbb
cmp
arpl
dec
aaa
add
addl
xlat
subb
popa
fwait
sbb
mov
jnp
cmp
imul
jp
ds
lret
nop
lock
sub
icebp
in
int3
mov
adc
and
xchg
in
inc
ss
fldl
jg
lret
add
mov
addr16
je
fistl
mov
ljmp
ret
push
push
pop
mov
pop
fcmovnu
imul
xor
repz
ljmp
cmpsl
mov
sbb
out
adc
fwait
cmp
test
and
enter
or
mov
bound
push
arpl
push
sbb
inc
sbb
pushf
xor
and
mov
xor
jo
sbb
ret
xchg
insl
push
mov
cmovbe
sahf
arpl
jnp
pop
aad
sbb
adcb
je
dec
stos
jl
fdivrl
jmp
xchg
push
dec
loop
push
sti
lahf
sbb
jmp
add
fnstcw
shl
lahf
arpl
repz
push
loope
inc
dec
pushf
adc
mov
test
js
negl
mov
loope
sub
out
loop
pop
repz
lods
frstor
fisubs
push
icebp
movsb
std
push
xchg
push
js
cmp
sub
push
add
jle
or
jbe
push
pop
fsubr
and
cmp
loope
hlt
mov
in
lret
mov
insb
pop
xor
fsubrl
movsl
mov
adc
shr
sbb
cmp
fisubrs
mov
js
mov
test
cld
adc
jne
loope
sbb
cmp
jo
pop
push
push
inc
push
mov
add
pusha
jno
pop
xchg
insl
cmp
mov
mov
add
testb
aaa
je
inc
test
aam
sub
push
mov
mov
adc
inc
pop
cmpb
aad
lret
ret
jecxz
aas
mov
inc
lock
pop
ja
pop
fistps
repz
shlb
add
mov
cli
push
arpl
add
fistps
mov
gs
sub
dec
push
fisttpl
out
jo
xchg
sahf
xchg
subb
cmp
fisubrl
hlt
mov
sbb
orb
arpl
dec
and
jge
and
dec
pop
jo
insb
in
push
sub
pusha
or
loope
lcall
das
test
xor
push
mov
lds
fcompl
push
rcll
add
jae
das
mov
xor
jae
ljmp
mov
add
das
ret
test
mov
repz
ret
cmpsl
jns
jmp
push
xchg
imul
xchg
fistps
cs
sub
mov
js
in
push
inc
dec
in
loopne
fildl
push
xchg
xchg
sub
push
rcrb
and
aaa
add
negb
mov
pop
xor
or
pushf
inc
cmc
or
int3
jo
lock
or
pop
icebp
pop
out
shl
pusha
mov
inc
jecxz
cmpsb
sub
data16
bound
push
retw
dec
inc
pop
sub
cmpsb
ja
sbb
aaa
cwtl
push
xchg
scas
sbb
mov
xchg
mov
pop
addr16
xchg
out
fstps
aad
js
pop
mov
jl
loopne
hlt
adc
popf
stc
xchg
add
fldl
mov
mov
sub
les
in
adc
call
fsubrs
fnstsw
cmp
gs
in
and
xchg
ds
mov
movsl
addl
stos
fs
xchg
xchg
je
dec
push
sbb
fisttps
rolb
and
xchg
jmp
sahf
sub
in
clc
fucomp
mov
adc
or
sbb
clc
xchg
xor
cmp
shrb
pusha
push
cltd
dec
jbe
imul
dec
mov
fistpll
inc
jle
lret
or
je
outsb
dec
cmp
pop
imul
jno
cli
je
test
insl
push
shll
adc
out
lret
jmp
xor
cmp
lea
add
gs
mov
and
mov
sbb
jmp
insl
cmp
add
dec
fstpt
lods
pop
mov
daa
or
stc
push
pop
xchg
lret
inc
push
cmp
outsl
pop
scas
push
ss
loope
mov
pop
xchg
aas
and
sbb
jmp
pop
cmp
inc
aaa
mov
pop
fiadds
mov
in
mov
jo
lret
xor
push
pop
sahf
mov
lret
call
in
ja
shr
aam
cs
fsubrs
xchg
inc
mov
sbb
push
dec
jg
aaa
std
xchg
inc
xor
jle
or
push
ljmp
in
add
xchg
ret
xchg
aaa
push
adc
cmp
jl
push
sbb
fidivrl
enter
movsb
sbb
cmp
pop
push
pop
aaa
sub
xchg
fadd
jb
loop
out
sbb
xlat
xchg
inc
mov
mov
adc
fcmovnb
sbb
mov
jmp
lods
mov
fildll
push
lds
push
popf
push
dec
or
aaa
mov
bound
aam
sbb
inc
push
dec
pop
sahf
mov
call
dec
xlat
lahf
bound
in
mov
jle
icebp
dec
decb
ljmp
out
test
sbb
cli
cmpl
or
and
cmp
call
arpl
sbb
sbb
out
cmp
push
pop
cmc
cmpsb
je
pop
mov
add
cmp
cmp
jl
and
sbb
mov
cli
test
in
xor
sub
loop
cmp
repnz
jecxz
jo
push
adc
xchg
jge
adc
mov
data16
jmp
inc
xchg
lock
cmp
imul
dec
cmp
sbb
sub
push
xor
jl
shrb
jge
xchg
push
mov
or
inc
jle
shl
dec
xchg
push
pop
push
cmp
mov
pop
adc
ror
xor
test
xchg
cmp
inc
shll
aaa
sub
test
jle
jg
sbb
popl
lock
dec
icebp
jl
cmp
sti
pop
mov
or
pop
fwait
mov
sbb
xor
std
push
cltd
push
mov
fs
mov
mov
xchg
sbb
adc
dec
stos
fistpll
test
stos
push
lea
aam
push
dec
and
cmp
ja
sub
fnsave
push
jo
cli
and
cmp
add
jb
inc
lret
cmpsb
xchg
jecxz
aam
mov
mov
pop
mov
jecxz
and
dec
adc
ss
divl
shrl
stos
js
jle
repz
dec
outsl
lcall
popa
out
xchg
cmpsl
popa
mov
gs
loope
cwtl
lcall
lret
into
sbb
mov
shr
imul
lret
xchg
jmp
pop
mov
xchg
addl
xchg
jecxz
fwait
mov
sbb
out
pop
jmp
mov
jge
cmpsb
mov
inc
push
in
add
dec
int
rorl
adc
inc
push
adc
push
push
movsl
pop
std
aaa
jmp
cs
jg
mov
repnz
add
push
pusha
pop
jecxz
jbe
in
mov
pop
aaa
sti
jb
test
push
sbb
pop
push
lret
and
cltd
popa
xor
xor
outsl
loope
ds
cwtl
mov
cli
pop
sti
adc
push
xor
mov
sbb
insl
sbb
cmp
je
sahf
inc
icebp
scas
orb
dec
fistpl
mov
cli
enter
std
call
aas
fmull
add
int3
loopne
jnp
adc
inc
sbb
inc
sbb
je
aam
shlb
push
pop
push
adc
adc
and
sbb
pusha
mov
mov
pop
add
repz
jmp
add
push
jp
adc
pop
popa
push
lods
cmp
pop
pop
ss
test
pushf
add
bound
and
inc
stos
add
outsl
pop
pop
push
pop
stos
xchg
jns
mov
jg
aad
lds
ret
rorl
mov
int3
scas
lret
cli
inc
xchg
cmp
insb
adc
pop
cmp
adc
mov
das
aam
repz
aaa
cmp
and
mov
ss
nop
outsb
xlat
cmpsl
mov
and
cs
xor
mov
inc
cld
mov
mov
pop
movsl
into
in
push
and
sbb
cmp
sbb
loope
push
addr16
pop
lods
rcll
fisubs
stc
sub
sbb
push
aad
aam
adc
push
call
jle
jb
xor
test
popf
leave
cmpsl
aaa
movsl
ds
insb
sub
jno
js
dec
mov
inc
and
out
je
sbb
pop
inc
and
sbb
mov
push
and
mov
jle
je
call
imull
and
cmp
cmpsb
push
in
add
pop
xor
cwtl
fdivs
push
mov
fdivp
ds
dec
mov
stc
xchg
mov
cmp
add
repz
push
and
push
inc
and
jbe
mov
fwait
cs
pop
icebp
xchg
sub
pop
xorb
mov
add
aad
stc
lea
ljmp
inc
stos
sarl
scas
lds
test
cli
cmp
lret
push
add
push
jp
loopne
push
mov
push
shll
pop
xchg
stos
in
sub
pusha
cmp
int3
adc
pop
jns
and
cli
mov
cmp
icebp
jmp
in
jmp
adc
and
xchg
lcall
jbe
popa
hlt
cmp
lahf
adc
test
cwtl
aaa
fwait
jl
aas
loopne
mov
jb
aas
push
mov
cmp
ljmp
daa
xchg
pushf
es
cmp
xchg
daa
pop
cmp
mov
push
mov
push
ja
push
xchg
bound
outsb
mov
cmp
xor
sbb
or
cltd
aaa
jns
aaa
jae
push
pop
pop
movsl
push
lcall
clc
std
in
hlt
aam
add
pusha
and
and
adc
mov
mov
adc
mov
mov
sub
in
pusha
loope
pop
nop
mov
fwait
sbb
or
ds
aaa
xchg
dec
mov
jle
cmc
sti
sub
sahf
popf
xchg
test
fstps
lods
rcrl
inc
hlt
fs
push
cmp
fsubrl
pop
pop
cmp
jecxz
cmpsl
pop
pop
xchg
sub
std
sub
and
or
jmp
adc
dec
ficomps
mov
adc
iret
addr16
or
enter
inc
stos
es
jecxz
inc
mov
or
xchg
or
mov
popl
pop
rcrl
xchg
inc
aad
pop
outsb
nop
sahf
ss
or
fstl
xchg
jmp
out
imul
inc
and
mov
mov
add
jne
add
push
lret
sub
xchg
sub
mov
shrl
jg
lods
jb
les
test
mov
mov
sbb
xchg
xor
out
mov
roll
lahf
cmp
mov
aaa
mov
popa
pop
mov
jecxz
mov
push
jbe
dec
test
in
fs
mov
mov
dec
dec
movsb
mov
add
mov
mov
sahf
and
fs
stc
sub
sub
scas
pop
fcmovnu
jb
test
mov
cwtl
outsb
pop
repnz
orb
bound
ds
ss
cmp
jp
push
or
add
je
sbb
lret
gs
pusha
rclb
movsl
add
inc
ljmp
fcmovu
sub
repz
icebp
xor
jno
add
dec
std
fistpll
inc
or
mov
or
inc
jge
fldt
adc
pop
dec
insb
aad
dec
push
fdivp
xchg
xor
andl
stos
js
inc
jbe
and
imul
push
pop
into
ss
insl
inc
jl
insb
adc
shlb
lods
xor
mov
and
mov
dec
push
rclb
sbbb
cld
sbb
add
inc
jle
js
lea
and
stos
and
cmpsl
jl
or
mov
fbstp
sbb
pop
fdivrs
aam
xchg
stc
pop
push
dec
fdivrs
cmp
in
adc
push
sbb
ja
in
push
adc
jno
shlb
lret
movsb
jne
sbb
cmp
sbb
cmpsb
cltd
pop
inc
adc
popf
push
in
cli
jmp
pusha
in
mov
dec
pop
inc
popa
mov
fcomps
fsts
sbb
sub
xor
mov
sbb
sti
dec
cmc
sbb
cmpsb
sahf
push
cmp
lods
mov
push
pushl
ds
xchg
adc
nop
push
lds
rcrl
and
ljmp
div
dec
cltd
push
cmp
dec
xor
cmp
imul
roll
cld
sbb
cmp
mov
mov
dec
mov
add
mov
inc
or
push
inc
xchg
jb
mov
push
ss
aaa
mov
pop
push
pushf
sbbb
jp
xor
cmp
test
sub
jb
mov
in
xor
das
sub
test
mov
fst
and
sarl
cmp
adc
add
inc
ret
imul
push
jg
popa
shll
dec
cmp
data16
sbb
inc
imul
jnp
mov
shl
mov
push
pop
call
ja
ret
and
aaa
xchg
pusha
mov
cltd
pop
inc
into
and
mov
mov
add
enter
jnp
ret
or
fistps
int3
adc
xchg
fcomps
ja
xchg
push
pop
mov
push
arpl
fsub
arpl
dec
and
jg
stc
stos
cmovge
push
notb
sbb
inc
out
pop
rcll
dec
or
sbb
loope
imul
repz
or
cmpsb
idivl
add
andl
xor
push
mov
sbb
or
punpckldq
dec
push
xchg
mov
and
mov
sbb
arpl
pushf
enter
inc
dec
pop
jbe
aam
insb
sbb
nop
xchg
mov
xchg
push
insb
loopne
mov
lea
inc
jl
inc
scas
ret
push
pop
loope
pop
push
aaa
pop
aam
outsb
scas
aad
dec
insb
or
xchg
add
leave
push
call
jg
out
subl
push
arpl
inc
ljmp
jp
xlat
jnp
xchg
iret
push
fcompp
loopne
and
orb
stos
pop
mov
sahf
xor
std
scas
dec
es
ds
cwtl
lea
adc
xor
arpl
xor
cmp
add
mov
outsb
aaa
popa
sbb
iret
pop
ret
mov
call
and
or
ror
xchg
cld
popf
dec
iret
fists
pop
mov
test
je
cmp
pop
in
push
mov
loope
sub
sbb
in
xor
movsl
imul
andl
pop
into
dec
inc
sar
ret
arpl
pop
shl
inc
or
enter
mov
test
es
xor
roll
adc
add
inc
jno
inc
pop
imul
lea
jbe
fcom
mov
xchg
push
jl
ja
sub
mov
sub
stos
inc
mov
jbe
ret
sbb
les
std
sbb
cmp
cmp
int3
xchg
cmp
add
sbb
arpl
into
enter
mov
jp
scas
shll
jnp
jp
and
testl
lock
cmpsb
ss
dec
xchg
jns
pop
in
arpl
inc
out
pop
stc
sub
add
hlt
pop
js
push
mov
xchg
mov
push
hlt
popa
jle
les
outsb
cltd
pop
lret
sbb
out
aaa
mov
sub
mov
leave
outsb
pop
sbb
push
xchg
pushf
add
mov
insb
push
enter
cmp
mov
cmp
mov
stos
into
add
push
mov
cmpl
roll
bound
pop
int
jnp
sub
pop
fimull
sbb
mov
push
pop
je
xor
shrl
pop
jnp
dec
nop
clc
cmp
or
mov
and
fcomp
adc
aam
mov
ds
in
imul
jae
shl
fwait
aaa
push
pop
sbb
sub
psubusw
push
testl
push
mov
cli
leave
lcall
push
cmp
add
lret
cmp
pop
add
cmp
leave
mov
movsb
push
popf
and
int3
add
dec
cmp
nop
out
ret
loope
mov
mov
sub
in
inc
lock
mov
cmp
dec
sub
fistpll
rol
in
pop
in
dec
jnp
cltd
pusha
jle
xor
lahf
jbe
in
leave
mov
insl
push
xor
icebp
sbb
jle
inc
popf
pop
shll
stos
or
add
push
xor
imul
pop
fistpl
ss
int3
dec
in
popf
lcall
cld
repz
je
adc
sbb
popa
and
dec
inc
movsb
sahf
mov
shrl
jecxz
aaa
push
dec
fcompl
xchg
aaa
aaa
aas
in
jbe
loope
and
push
fldcw
or
jbe
addr16
data16
sub
andb
test
ss
mov
cs
jge
mov
mov
xchg
pop
sti
push
movsl
aad
add
xchg
test
aas
jle
aaa
repz
ss
aad
pop
cltd
sti
mov
pop
enter
sbb
push
aam
mov
lahf
addl
sbb
pop
mov
push
push
loopne
test
and
std
mov
fistpl
mov
fildll
in
adc
mov
jle
cmp
mov
push
inc
sbb
mov
enter
lret
scas
insl
push
ret
sti
jle
sbb
add
notl
fwait
outsb
cwtl
jl
int
adc
arpl
test
xchg
shl
xor
hlt
cmp
pop
and
ficompl
in
jle
dec
pop
push
jne
or
popf
jmp
std
cmpsl
jo
mov
pop
je
rcrl
jne
jnp
ljmp
stos
fsubl
or
loope
loopne
cmp
push
addr16
in
andl
add
insb
jle
ds
enter
fisttpll
inc
push
insl
nop
ja
pop
sub
adc
pop
bound
xor
jae
push
jb
push
mov
jge
push
icebp
movsl
lcall
adc
das
sub
jmp
fwait
rcll
add
xchg
scas
outsb
mov
js
shr
fisubs
cmp
cltd
and
ret
mov
arpl
es
add
or
fistpll
aaa
cmpsb
or
push
fldl
xchg
imul
push
jns
push
in
mov
push
repz
mov
jl
repnz
inc
js
mov
or
adc
mov
jg
andl
xchg
mov
jl
icebp
dec
jecxz
jb
aaa
mov
das
rcl
jl
in
enter
push
jmp
lret
cmp
dec
pushf
sbb
lods
and
sbb
les
movsl
adc
and
pop
fisttpl
jmp
and
scas
jnp
stos
cmp
dec
add
xor
fildl
mov
mov
push
mov
enter
cmp
push
cmp
fisubs
xchg
push
add
scas
jecxz
inc
cmp
repnz
fs
cmpsl
pop
aaa
fnstcw
sbb
sarl
xlat
pop
pop
jnp
bound
dec
cmpsl
in
icebp
pop
mov
mov
mov
dec
test
adc
push
adc
adc
call
cltd
stos
dec
cmpsb
add
lods
ror
rorl
pop
xchg
das
push
popf
jl
xchg
outsb
push
out
xor
imul
insl
das
cld
pushfw
xchg
std
push
rcrb
enter
fcomip
push
mov
mov
push
rorb
into
lods
aaa
jle
cld
cli
andb
arpl
popf
and
adc
pop
xchg
or
mov
mov
push
cmp
loop
popa
pop
dec
lods
pop
aaa
sti
scas
mov
es
cs
popa
cmp
push
push
mov
and
mov
lret
test
popa
lret
mov
outsl
push
pop
fsubrs
and
adc
pop
cmpsb
inc
push
push
outsl
pop
shl
scas
mov
in
jmp
and
arpl
xor
add
fstpl
dec
fcompl
push
ja
sbb
aam
add
test
pop
xor
push
faddp
or
inc
in
cwtl
xor
sti
mov
fwait
pop
scas
jge
pop
xor
mov
pop
shlb
or
dec
sub
mov
mov
std
push
je
aaa
jb
es
sbb
popf
mov
mov
test
xor
jle
out
outsl
js
fldt
lcall
push
mov
jnp
mov
mov
sahf
add
pop
adc
rolb
in
sbb
aam
pop
dec
xchg
pop
lea
inc
sub
sub
lods
ljmp
rcl
aaa
pop
mov
inc
lcall
mov
xor
mov
push
pop
rorb
out
test
in
pop
mov
int
mov
jle
scas
mov
les
insb
and
les
dec
shll
out
cmpsl
bound
cmp
repz
pop
addr16
sahf
inc
movsl
mov
int
addr16
lahf
aaa
jbe
mov
test
pop
lret
adc
test
pop
or
popf
jp
and
xor
pop
popf
sbb
jge
sahf
cld
dec
pop
jecxz
jge
dec
adc
mov
mov
push
loope
dec
sbb
dec
add
xor
call
in
pusha
imul
xchg
adc
push
or
aaa
test
cmpb
das
repz
jbe
repnz
loop
call
push
repz
pop
inc
movsl
movsl
js
add
inc
pop
out
or
jle
mov
pop
out
lds
jns
sahf
mov
out
mov
aam
inc
jno
xor
cs
std
cmc
xchg
fbld
sub
std
or
js
mov
cmpsb
mov
dec
cltd
adc
ds
mov
pusha
pop
push
push
das
jne
adc
mov
jg
sarl
fcoms
repz
aam
sub
inc
jnp
inc
xchg
inc
sub
ret
sub
loope
pusha
aaa
int3
push
out
pop
nop
mov
je
mov
test
xor
push
mov
adcb
enter
inc
scas
arpl
into
jl
mov
in
lahf
cmpsb
int3
jae
das
push
pop
pop
mov
cvtps2pd
pop
cmp
dec
adc
sarl
mov
stos
inc
sbb
inc
insb
ftst
jbe
subl
pushf
jnp
divl
test
mov
add
jbe
add
int3
push
std
pushf
imul
fdivrl
enter
sub
cmp
xor
jnp
fcmovnb
int3
mov
pop
jmp
jmp
in
adc
jl
cmp
lock
fnstcw
add
aaa
push
not
lret
push
mov
mov
push
shlb
jne
xlat
adc
dec
fld
fs
jb
cmp
fwait
stos
out
sub
insb
mov
movsl
push
push
pop
adc
or
mov
lcall
push
sub
aaa
test
cwtl
adc
pop
sub
out
lea
and
jo
pop
fcmovnu
sbb
fnstsw
jns
push
push
or
outsl
cmp
scas
and
ds
cltd
xor
int
sbb
mov
cmp
or
icebp
outsb
dec
in
jno
mov
fwait
dec
push
movsb
add
call
jl
and
lock
ss
or
add
fucomi
pop
fsubl
adc
arpl
dec
jno
add
rorl
scas
sub
cmc
jecxz
enter
orl
fs
out
push
ret
or
xchg
jmp
shr
push
in
adc
rolb
xchg
sub
push
mov
add
adc
mov
push
jle
orl
push
lds
adc
push
mov
dec
pop
inc
inc
inc
add
push
or
pop
push
subl
lds
loope
cmpsb
outsl
sarl
dec
inc
popa
pop
jo
sub
in
repnz
xchg
pusha
sbb
pop
ret
stc
inc
jge
push
inc
stos
and
pop
or
ret
push
jbe
cmpsb
out
mov
lcall
rcrb
push
dec
nop
mov
outsb
inc
xchg
in
xchg
not
jle
push
inc
in
popa
jl
dec
fnstsw
mov
movsb
les
rclb
call
jle
xor
addr16
xor
jle
push
cmp
push
sbb
mov
dec
pop
fsts
push
shlb
pop
jo
loopne
push
cli
fcomps
add
or
lret
jbe
lcall
fildll
aaa
add
xchg
lods
in
sub
lea
dec
fimull
push
add
pushf
adc
lcall
inc
je
inc
sub
leave
mov
sub
pusha
test
sbb
sti
fs
addr16
adc
mov
pop
lret
insw
scas
cmp
movsl
adc
pop
int
ds
lea
pop
mov
aaa
adc
sub
divl
out
pop
dec
pop
mov
xor
pop
lahf
test
mov
outsb
fnsave
sbb
push
inc
jle
dec
sub
scas
test
jge
outsl
lock
aaa
pop
or
shl
jbe
pop
push
je
jle
fdivrl
adc
cltd
test
jbe
jbe
mov
cmp
cmp
pusha
cmp
out
sub
lea
iret
adc
add
cmp
sbb
pop
iret
popa
pop
aam
and
jecxz
push
and
ljmp
std
lahf
outsb
sbb
pop
mov
bound
push
jle
mov
gs
sub
xchg
neg
or
mov
cmpsb
sbb
cld
aaa
jg
test
in
sahf
mov
sbb
or
ficoms
insl
negb
int
pop
dec
outsb
jl
dec
sbb
test
movb
in
sti
adc
jno
ds
mov
getsec
cld
nop
rcr
ss
mov
jne
add
xchg
push
cmpsl
xor
sar
mov
jmp
mov
jp
call
lods
or
mov
shl
add
pop
sub
scas
insb
aam
in
test
sbb
dec
pop
repz
hlt
fs
in
hlt
rorb
dec
xorb
and
pop
int
inc
es
xor
cltd
mov
jnp
imul
ljmp
push
loop
xlat
xor
sub
pop
les
leave
mov
enter
sti
lock
leave
push
arpl
dec
cld
adc
rcll
pop
into
idivl
inc
cmpsl
loopne
stc
jmp
cld
lret
ljmp
data16
mov
pop
pop
test
dec
jge
cwtl
add
pop
icebp
jg
dec
scas
jmp
popa
add
movsl
push
mov
dec
and
lds
fsubr
mov
xchg
cltd
inc
ja,pn
xchg
sbb
mov
je
pop
pop
push
cmp
pop
xor
jmp
cltd
cmp
mov
outsb
stos
or
rcrl
cld
xor
shrb
loop
pop
mov
es
sbb
push
in
pop
pop
cmp
popf
push
pusha
ss
fnstsw
ret
xchg
pusha
sub
push
int
xchg
iret
repnz
sbb
cmp
insl
jo
lds
test
notl
lods
sbb
pop
divl
lods
fdivr
rcll
in
push
das
inc
mov
pand
add
ss
in
in
inc
pop
pop
stc
das
pop
add
mov
sarb
adc
test
jo
xchg
data16
movsb
ret
aaa
push
scas
cs
js
mov
or
das
outsl
mov
push
or
in
push
jmp
pop
call
xlat
mov
sub
jle
mov
imull
adc
add
jbe
push
lds
lock
jl
mov
call
dec
jno
mov
shlb
movsl
sahf
test
jb
add
xchg
xor
shll
aas
movsl
pop
cmp
inc
cmc
sub
cli
jnp
pop
fnsave
nop
test
je
shlb
inc
insl
das
bswap
inc
cmp
fistpll
mov
fsubrp
adc
pop
icebp
pop
js
enter
add
cmp
lods
pop
mov
xorl
and
std
mov
mov
in
adc
aad
xchg
cld
dec
xor
xor
sbb
stc
cmp
dec
adc
or
scas
inc
imul
cmp
inc
jle
clc
icebp
inc
arpl
movsl
ds
clc
ret
push
out
int3
loope
les
lret
push
rcr
pop
jae
add
pop
loope
cld
cwtl
loop
cltd
push
fisubrs
movsl
jns
fcomps
cwtl
fstpt
cmpsb
and
frstor
in
cmc
add
std
xor
mull
cmpsl
fadds
inc
add
mov
xchg
outsl
out
outsl
dec
fwait
pop
ss
js
cli
sub
scas
repnz
jns
or
negl
mov
push
mov
mov
jno
sbb
xor
jecxz
fnsave
push
xor
inc
xor
xchg
movsb
sbb
sahf
or
cltd
xor
and
iret
mov
outsb
lock
cmp
cmp
or
popl
enter
jbe
or
cld
pop
fbld
pop
mov
inc
lea
fidivs
es
and
pshufw
aad
popf
es
into
movsb
pop
call
iret
mov
gs
int3
mov
add
rclb
jb
mov
out
push
mov
negb
pop
xchg
pop
adc
sub
sarb
scas
xchg
inc
jmp
ret
sbb
cmc
add
lock
scas
push
in
sar
pop
inc
ss
cmp
mov
adc
add
cmpsb
ss
int3
jle
cmp
inc
cmp
stos
mov
in
ds
sbb
aaa
popa
push
ja
int3
mov
fmull
jb
sahf
mov
dec
es
lret
mov
pushf
fnstcw
pop
mov
ss
repnz
cld
clc
adc
jo
fistl
pusha
mov
sbb
xchg
sti
xor
mov
in
ds
icebp
scas
xorb
mov
nop
repz
adc
dec
fsubl
dec
repnz
mov
mov
in
dec
jno
and
sbb
fwait
hlt
push
push
jo
into
shl
cmp
jnp
insl
js
sbb
sbb
les
subb
aad
dec
jns
lahf
mov
pop
mov
daa
adc
xor
sbb
push
std
aad
xchg
dec
pop
decb
sbb
or
pusha
pushf
add
lock
sbb
sbb
push
fistpl
shl
test
push
in
push
data16
cmp
cmp
in
and
popa
das
inc
pop
jecxz
outsl
in
into
cld
or
xchg
aad
pop
jne
ljmp
inc
leave
sbbb
movsb
cltd
ror
jmp
je
stos
xchg
inc
dec
mov
xchg
sub
jo
lea
test
lods
loope
fldl2e
mov
aaa
repnz
stos
loope
sbb
push
push
pop
add
mov
popf
xchg
cmp
jl
inc
fisubrs
jle
and
mov
push
cmp
jg
sub
subb
adc
cwtl
inc
xchg
pop
push
inc
jae
pop
out
pushf
inc
sub
cld
fnstenv
jp
test
fdivrs
jmp
rorb
adc
or
jae
push
fistpll
sahf
add
pop
loope,pn
jle
push
pop
sbb
movb
scas
out
dec
ss
aas
fisubs
push
xor
xor
mov
add
daa
mov
xor
stos
dec
and
cmpsb
lret
pop
fsubl
pop
imul
cli
dec
sbb
jle
lods
sahf
data16
jle
or
ds
mov
cs
inc
mov
ds
pop
cli
and
lds
push
push
push
in
push
fsubr
lods
adc
xchg
mov
fwait
aaa
push
mov
lea
aas
lods
lcall
ljmp
js
nop
mov
jp
push
push
xor
rcl
and
jp
or
add
loope
xchg
sar
adc
pop
push
icebp
dec
dec
push
call
pop
stos
adc
mov
pop
fsubs
in
mov
ret
mov
mov
jle
loope
fistpll
cmp
xor
mov
jno
lret
xor
adc
fmuls
pop
jle
cmpsl
loope
cmp
and
mov
inc
push
add
loopne
jmp
in
mov
sbb
pop
insl
xor
cmp
push
aaa
mov
int3
dec
nop
lret
pop
jmp
add
sbb
sbb
sbb
xor
sub
jmp
dec
rol
xchg
pop
std
pusha
cwtl
testb
jg
lea
lret
jecxz
push
mov
pop
ret
in
push
cmp
negb
jb
inc
cmp
lret
jle
out
ss
cmp
lds
popf
fdiv
dec
std
leave
shlb
mov
sbb
push
lret
inc
fldcw
dec
cmpl
or
std
loopne
test
xchg
xchg
push
push
loope
pop
lret
mov
dec
cmc
cmp
lods
es
arpl
rclb
inc
sbb
loop
arpl
mov
pop
or
xlat
sbb
lahf
gs
dec
cmp
dec
cmpsb
add
popf
push
pop
loope
push
stc
pop
js
icebp
cmpsb
xchg
notb
repnz
jmp
push
bound
pop
ret
aam
fdiv
jmp
sbb
flds
aad
aaa
loop
mov
fdivrl
pop
ret
cmpsl
adc
add
pop
repnz
inc
and
jge
mov
movsl
mov
cmp
je
std
mov
gs
andl
bound
sbb
jmp
and
in
movsl
push
repnz
mov
push
adc
jo
cmp
push
enter
add
imul
push
jb
cmc
xorl
xlat
sbb
inc
and
lds
dec
fildl
loopne
test
popa
loope
mov
inc
cmpsb
sbb
fld1
xchg
jno
dec
pop
sbb
jg
sahf
ja
hlt
lea
inc
loopne
push
test
scas
stos
add
mov
jne
mov
ds
out
mov
add
outsl
cmp
pushf
sbb
dec
sbb
cmp
rclb
or
add
xchg
jecxz
test
pop
mov
mov
outsb
sbb
movsl
out
xor
fsubl
mov
out
aam
lods
data16
dec
cmp
cmp
sbb
sar
xchg
jno
sub
das
xlat
xchg
bound
pop
pop
push
test
push
fs
mov
jne
adc
xchg
outsb
bound
push
jmp
rcr
pushf
jnp
push
sbb
dec
xor
ja
pop
stc
xchg
jbe
or
cmp
repz
loope
mov
clc
mov
pop
pop
push
imul
imul
mov
shrb
sarb
cmpb
lea
dec
aam
sbb
lret
fldt
testl
xchg
push
ds
cmp
das
xor
insl
xchg
sbb
lods
mov
test
scas
shrl
lods
mov
scas
aam
test
mov
ss
cwtl
pop
inc
mov
jno
mov
pusha
adc
and
or
sbb
cmp
pusha
pop
xchg
xchg
mov
sub
into
das
js
lahf
pop
imul
das
xchg
adc
movsb
jbe
and
test
cld
jle
inc
jo
jne
in
cmpsb
inc
xchg
push
mov
lods
sbb
jnp
inc
add
pop
mov
push
pop
jo
cmpsb
in
mov
mov
bound
and
push
aam
js
mov
aaa
add
testl
fnstenv
dec
arpl
lret
sub
push
rorl
mov
push
xchg
adc
jle
add
mov
fldenv
std
cltd
lods
jecxz
aas
jns
ret
imul
ret
inc
cld
mov
or
daa
popf
mov
mov
test
movsl
jnp
or
lock
xchg
lock
xchg
jnp
add
lret
push
jnp
or
cmpb
and
sti
pop
jmp
and
lea
repz
movsl
fildl
in
pop
push
mov
push
jo
dec
repz
insl
lret
ret
shll
push
testb
or
mov
mov
pop
loopne
jmp
ss
aaa
push
inc
out
fsubl
sbb
cli
xchg
lret
mov
mov
add
xchg
in
fcompl
jmp
cmp
sub
add
pop
ja
mov
ret
xchg
mov
decb
xor
in
loope
fnsave
sahf
bnd
test
pop
in
ss
clc
xchg
popf
ret
lods
cmp
jp
rorl
adc
dec
lds
ss
sbb
xchg
aas
int
insb
pop
jl
insl
lds
pop
sbb
pop
aad
jae
fbld
test
aam
mov
mov
sbb
popa
add
imul
nop
imul
add
cld
pop
pop
fwait
push
dec
xchg
icebp
inc
and
arpl
icebp
dec
add
mov
mov
inc
cwtl
ret
repz
fstps
dec
push
adc
xchg
xchg
pop
mov
push
add
frstor
add
pop
push
fnstcw
pop
hlt
stc
jbe
nop
jl
cli
std
pop
repz
addr16
sbb
adc
aam
sub
push
inc
mov
in
push
popf
mov
jb
push
fadd
aaa
fsubl
pop
dec
loop
adc
sahf
xor
pop
daa
xchg
dec
lods
adc
inc
or
sbb
ds
ja
outsl
inc
dec
pushf
sbb
adcl
xor
out
pop
addr16
push
movsb
mov
sub
test
in
bound
loopne
outsl
cmp
jo
rcrl
jae
fidivs
sub
outsb
outsb
enter
push
testb
dec
out
push
mov
sbb
mov
fadds
xor
outsb
mov
daa
fwait
orl
mov
and
fisubrl
dec
and
cmp
mov
sub
popa
imul
xchg
sbb
fwait
outsl
or
cld
jmp
jae
inc
push
add
mov
bound
divb
and
lds
inc
nop
rorl
cmp
inc
lahf
loop
and
ss
ret
repnz
push
test
sub
sbb
or
adc
and
retw
add
sbb
out
push
dec
mov
imul
or
insl
inc
jg
je
pop
aaa
sahf
daa
inc
dec
pop
ret
ret
and
fs
addl
scas
and
push
and
adc
icebp
pusha
loopne
aaa
imull
push
xchg
out
fsub
shrl
push
mov
cld
pop
sbb
enter
cmp
xchg
aas
push
pop
fsubl
mov
jb
imul
enter
imulb
cmp
xor
in
movsl
sbb
test
push
fldcw
cmp
imul
xchg
scas
imulb
pop
add
mov
pusha
aam
add
jno
icebp
xor
mov
idivb
mov
fxam
sbb
inc
pushf
outsb
or
pushf
push
lea
xchg
adc
loop
mov
adc
xchg
mov
inc
aaa
test
add
pusha
pop
pusha
xor
sub
inc
lcall
jle
enter
cmp
fcomps
xor
std
ds
pop
sub
xchg
ss
pop
xchg
cltd
sti
push
cmp
or
fucomip
push
enter
jle
sbb
into
cld
xor
gs
sub
leave
cmp
rcll
dec
repnz
mov
inc
mov
jp
mov
xor
bound
es
mov
ss
out
mov
pop
xchg
loope
adcb
push
pop
fstp
frstor
and
cli
and
mov
lahf
xor
jno
ljmp
rol
mov
lcall
mov
aam
xchg
repz
cmp
xchg
or
icebp
int3
adc
jnp
push
adcb
mov
cwtl
sub
jne
or
dec
xchg
pop
mov
and
outsl
mov
mov
test
jo
xchg
outsl
aas
test
pop
popf
ret
jmp
xchg
mov
inc
mov
int3
sbb
adc
xor
mov
fwait
packuswb
shl
adc
mov
and
mov
outsb
in
adc
sub
cmp
ret
cmpsb
pusha
sub
and
push
mov
sbb
jb
out
push
bound
mov
sbb
out
shll
icebp
adc
mov
faddl
and
cmp
out
inc
cmp
stc
outsb
and
dec
pop
cmpsl
push
mov
ss
js
imul
pop
repz
icebp
sti
test
es
aaa
mov
push
call
bound
xchg
stc
shll
xlat
inc
hlt
imulb
dec
sub
cmpsl
mov
add
xor
in
pop
jl
inc
cmp
mov
adc
imul
mov
jb
cld
add
repz
xchg
fimull
xchg
adc
jne
cmpsb
in
es
add
jne
fadd
in
pop
mov
and
sbb
pusha
addr16
xchg
fsubrp
ret
shrb
test
cltd
push
push
imul
sbb
xor
movsl
aaa
gs
jle
and
push
cmp
xchg
sub
sbb
sahf
dec
pusha
enter
cmpsl
pop
int
or
icebp
popf
aad
sub
jno
inc
jbe
jnp
test
divb
inc
cmp
adc
or
clc
mov
cs
ficoms
cld
icebp
sub
outsl
xchg
add
xor
sbb
and
push
lods
lret
lods
lret
fistpl
pop
sbb
xchg
call
jb
jle
leave
fwait
push
imul
push
fs
ja
add
jbe
cwtl
and
and
pop
xchg
loope
stos
and
pop
iret
adc
inc
ds
push
cs
adc
jo
cmc
cmc
out
sub
stos
cmp
mov
hlt
movsl
jl
pop
and
add
stos
aad
aaa
jbe
mov
fcmovne
pop
mov
pop
xchg
aas
in
ja
gs
call
jmp
pop
pop
lea
addr16
xchg
mov
sbb
push
push
in
jno
stos
shl
xchg
jle
inc
push
add
xchg
lock
push
test
dec
dec
inc
arpl
xchg
stos
push
aaa
les
ret
jmp
mov
test
lea
je
in
sub
pop
dec
insb
adc
es
clc
gs
sbb
cmp
mov
mov
or
jnp
mov
inc
hlt
sahf
inc
or
std
icebp
sbb
mov
mov
out
or
in
sbb
push
dec
mov
ss
mov
arpl
mov
sbb
js
jb
subps
in
inc
inc
subb
icebp
sub
mov
arpl
ss
pop
push
cwtl
pusha
lock
push
adc
pop
int3
pop
jo
ret
add
les
stos
jmp
mov
stos
xchg
inc
insb
aam
arpl
repz
loope
xchg
mov
ss
fiadds
dec
cs
jp
mov
loopne
stos
inc
rclb
je
xor
in
xchg
std
fistpl
jge
enter
std
cmp
in
pusha
xor
mov
adc
cmp
jecxz
and
push
in
sti
or
jmp
mov
mov
sub
pop
fcompl
pusha
pushf
cmpsb
push
loopne
xchg
mov
lcall
lcall
adc
frstor
repz
lock
movsl
sbb
sahf
jmp
fsubs
dec
pop
push
stos
lret
enter
andb
mov
clc
out
in
sub
fisubs
fmull
xchg
ljmp
and
das
out
jle
pop
hlt
and
sahf
xchg
dec
xchg
in
stos
fists
and
divl
jno
mov
popf
jo
nop
pop
in
sbbb
xor
lods
aam
mov
push
xor
or
adc
je
push
into
lret
mov
movsl
scas
mov
ljmp
pop
lds
test
mov
test
aas
test
das
push
push
call
push
pop
int3
int3
scas
fdivr
mov
in
hlt
mov
dec
leave
cmp
sbb
icebp
test
mov
insb
repz
mov
xchg
rcrl
xchg
mov
xor
mov
sbb
nop
xor
outsl
cmp
shl
cmc
push
cmp
subl
fwait
xorb
test
adc
jecxz
xchg
mov
int3
repz
pusha
xchg
xorl
stos
nop
ss
das
xchg
pop
jbe
aaa
dec
push
mov
stc
gs
fucomp
or
and
add
aaa
pop
test
mov
cli
enter
into
loopne
adc
orb
mov
movsb
aaa
or
stos
outsl
shrl
push
imul
arpl
addr16
dec
add
out
dec
icebp
cmp
out
fisubrl
popf
push
xchg
divb
or
call
cmp
xchg
xchg
out
out
movsb
cs
ss
jle
stos
dec
jnp
cmp
mov
shlb
and
nop
gs
pop
jbe
inc
or
jno
sbb
push
lcall
inc
dec
mov
mov
adc
dec
cs
mov
popf
add
cmpsb
fcompl
ljmp
jle
pop
icebp
scas
adc
filds
mov
mov
jnp
mov
scas
lret
bound
into
mov
cmp
inc
out
into
cld
jle
incb
xchg
jo
call
mov
stos
pop
out
sbb
dec
push
clc
cmpxchg
adc
jne
inc
xchg
xor
std
jmp
icebp
xchg
es
divl
mov
cltd
dec
aam
cs
pop
sub
push
or
mov
ss
cmp
testl
loopne
lcall
arpl
mov
inc
int
aam
xchg
das
mov
shr
gs
loopne
std
lret
stos
repnz
xor
sti
fwait
mov
sbb
out
cmp
int
mov
pop
and
pusha
sbb
cmp
data16
xor
outsl
test
shlb
push
data16
push
mov
mov
arpl
xchg
inc
loopne
insl
sqrtps
jl
data16
mov
mov
into
xchg
popa
xchg
aaa
xchg
repnz
push
aas
aam
outsb
aad
sbb
pop
mov
sub
xor
cmp
into
dec
data16
fs
mov
add
mov
imul
xor
jno
xor
or
mov
insb
loopne
add
sub
push
outsb
nop
in
addb
cmp
into
flds
les
icebp
and
xchg
and
arpl
cmp
lret
push
test
pop
ret
mov
loope
scas
cltd
lahf
jnp
mov
dec
movsl
add
push
pusha
jae
dec
cltd
push
cmp
scas
test
flds
leave
jl
out
outsl
jle
push
loope
push
pop
das
hlt
test
jg
int3
int3
add
and
out
push
pop
pop
push
stos
je
ja
sbb
std
addl
mov
cmp
cltd
adc
mov
add
xor
sbb
jae
in
icebp
or
fbstp
repnz
add
mov
andl
jle
pop
mov
fwait
sbb
xchg
repz
cltd
and
jmp
sbb
add
loopne
mov
or
sub
mov
cmp
das
and
ret
icebp
and
aam
pop
or
cltd
mov
push
ss
and
imul
sarb
jge
aaa
jo
insw
ret
fnstsw
popf
pop
pop
push
adc
and
nop
inc
xor
cld
jae
cmp
mov
dec
push
rcrl
ljmp
cmp
mov
std
add
inc
push
test
nop
push
fdivl
mov
test
mov
xchg
sti
cmp
fwait
pop
cmp
adc
pop
and
addr16
lea
mov
inc
push
jno
inc
jp
cmp
jb
std
inc
ret
mov
or
mov
push
xor
adc
push
decb
xor
push
jno
movl
lret
adc
in
inc
pop
std
jecxz
jbe
fisttps
cmp
add
adc
push
and
std
in
inc
jns
in
mov
xchg
sub
pushf
arpl
sbb
mov
enter
cmp
arpl
test
mov
xor
out
fsubr
rcr
pop
jnp
cmp
jmp
fsubrl
jb
nop
fadd
sub
faddl
fstl
pop
out
scas
jb
dec
imul
fnstenv
in
pop
xchg
jnp
xchg
jne
imul
hlt
sub
std
pop
mov
aad
call
push
adcb
aam
and
fsub
mov
aas
popa
jp
in
xchg
stos
ror
inc
and
aaa
xchg
lock
add
mov
cld
mov
jne
mov
inc
lahf
inc
and
mov
pop
jns
add
outsb
mov
cmp
push
fldl
pop
and
sbb
fimuls
jmp
aas
add
lods
mov
ret
shll
pop
pop
sbb
inc
jo
roll
sub
fnstsw
jle
das
mov
xor
sub
jp
add
push
inc
test
sti
in
rclb
mov
adc
sbb
cmp
into
and
repnz
dec
rcr
nop
out
rcll
dec
xor
jl
dec
push
adc
cmp
popf
into
popa
inc
arpl
cmp
adc
sbb
mov
pop
xchg
pop
dec
jb
aaa
arpl
cmp
xchg
inc
inc
jo
xchg
add
pushf
test
ja
ret
jle
rcrl
shl
pop
cwtl
rcrl
fcmovnu
outsl
jg
cmpl
sbb
mov
cmp
sarb
sbbb
sbb
dec
inc
mov
cltd
dec
scas
sub
fldcw
push
bound
or
loopne
push
and
outsl
pop
icebp
enter
sbb
cltd
stos
call
loope
sbbb
push
aam
mul
mov
push
icebp
mov
jb,pn
sbb
push
xor
sbbb
lret
lret
cmpsb
and
xor
lock
xchg
arpl
cmp
mov
loope
lds
push
mov
enter
fidivl
xchg
or
dec
cmp
push
scas
lcall
stos
xchg
loope
lahf
and
inc
fwait
jge
popf
push
pop
sbb
movsl
cmp
cli
rcl
ljmp
imul
pushf
and
cld
pop
hlt
sub
mov
jmp
add
push
push
dec
xchg
mov
pushf
call
fcoml
mov
imul
cmp
fildll
pusha
and
jge
not
jnp
out
push
cwtl
dec
jae
xlat
dec
dec
mov
cmpsl
and
ret
cmpsl
leave
or
xchg
cmp
imul
cmpsb
xor
jnp,pt
in
inc
jno
stos
dec
subb
pop
xchg
sbb
in
ret
jae
lds
push
in
test
xor
int
mov
mov
fldenv
lea
fsts
repnz
pop
cmpsl
push
in
inc
ret
pop
int3
fldl
jp
dec
inc
cs
xchg
mov
lret
xchg
sbb
rorb
fnsaves
fnstcw
xor
in
xorb
fidivs
ss
cwtl
mov
insl
insb
inc
pop
mov
lret
rolb
icebp
insl
push
mov
jmp
fs
leave
sub
push
jb
imul
pop
inc
push
mull
pop
nop
sub
sbb
mov
sub
cli
test
cmp
pop
loope
mov
xchg
push
outsl
cltd
pop
imul
mov
mov
xchg
pop
cld
shrb
jp
xchg
int3
jecxz
pop
sbbl
mov
popa
aam
jbe,pt
ret
fnstsw
fidivrl
add
pop
popf
fscale
pop
test
push
lds
sti
je
or
nop
outsb
jo
pushf
icebp
dec
pop
mov
popf
pop
sbb
aam
lods
adc
add
inc
pop
or
in
pop
jl
adc
fsubrl
ss
cmp
fistpl
push
sbb
inc
sbbb
ror
mov
loope
pop
stos
subb
inc
fnsave
or
fdiv
cmp
mov
inc
pop
sarl
in
cwtl
push
pop
repz
mov
int3
cmp
insl
push
inc
xorb
mov
jl
outsl
jg
test
pop
in
outsb
iret
xor
movsb
inc
sbb
stos
in
mov
fbstp
sbb
rcll
popa
sahf
scas
roll
pop
movsl
push
xchg
es
mov
add
fwait
pop
add
ss
pusha
push
cs
lahf
push
pushf
xchg
aas
fists
bound
jp
cmpsb
adc
inc
jp
xor
and
lock
add
and
sbb
and
outsb
pop
dec
jae
lock
or
out
mov
mov
cmp
xchg
repz
shll
pushf
pop
shrl
inc
push
inc
out
push
lods
bound
fsubrl
test
jle
lock
outsb
jp
xor
lcall
pushf
dec
out
jecxz
fst
sbb
sarl
nop
jg
pop
nop
sbb
aam
add
mov
adc
cli
fnstsw
out
fstpl
fsubs
insl
fdivr
pop
push
pusha
and
push
jecxz
fisttps
pop
add
lret
xchg
fisubrs
xlat
push
call
mov
lea
xchg
pop
pop
xor
cmp
aam
dec
add
push
add
lds
cmp
iret
mov
bound
sbb
outsl
mov
cmp
lds
loop
sti
in
fidivs
inc
test
fiaddl
rolb
out
repnz
cmp
xchg
fcompl
pop
lahf
fs
sbb
xchg
outsb
xchg
sbb
mov
stos
scas
jl
fists
sar
sbb
or
sub
sub
aaa
cmpl
mov
aaa
loop
jge
fistpl
movsl
mov
fbld
xor
cmp
cmc
cmp
mov
mov
imul
lock
inc
and
sub
rclb
fwait
mov
shll
xor
xor
out
lds
call
orb
dec
sbb
push
jae
js
mov
add
subb
nop
jg
shrl
xor
fstps
sub
cmc
frstor
call
xchg
aam
popa
rolb
pop
or
xchg
js
mov
les
loope
mov
lret
int3
sub
fcompl
scas
rclb
and
sub
jmp
mov
stos
dec
adc
jb
sti
jle
mov
lahf
popf
mov
mov
sbb
jo
mov
stos
movsb
cmp
mov
idivl
sbb
arpl
jle
lods
mov
push
int
pop
cwtl
sbb
hlt
and
clc
icebp
push
mov
inc
xor
sbb
add
das
scas
imul
or
lea
sahf
mov
pop
leave
bound
add
stos
push
stos
psllq
sar
shlb
pop
bound
sbb
and
mov
sub
mov
cli
fcom
inc
adc
inc
lret
lea
cltd
push
pop
xchg
lock
shrl
stc
outsb
rorl
pusha
fldcw
in
int3
shlb
das
fsts
std
shrl
mov
int
repnz
leave
cmp
hlt
mov
add
cmp
inc
test
cmpsb
sub
incl
pop
sub
dec
jo
sahf
ds
lods
cmp
mov
fisttpll
cwtl
inc
inc
das
arpl
out
inc
mov
cli
cmpsb
jb
push
mov
mov
and
call
mov
push
xor
call
adc
inc
pop
mov
jb
cmp
inc
jmp
and
jns
test
cmp
push
xor
sbb
cmp
lcall
inc
jb
jl
loopne
outsb
mov
lcall
les
out
or
loopw
loope
imul
aaa
jbe
movsb
lcall
xchg
icebp
mov
fcomp
subb
cld
sbb
pop
sbb
cmpsb
aas
xor
fimull
xchg
mov
daa
and
xchg
outsl
rorb
sbb
add
hlt
int
jae
push
inc
test
and
mov
xor
iret
pop
pop
mov
push
jo
push
repnz
insl
pop
ficompl
cmp
popf
inc
loop
xchg
pop
adc
inc
adc
xor
push
pand
std
pop
pop
sub
sbb
mov
add
push
mov
decl
add
mov
fsubl
call
sti
pop
movlps
cli
jne
pop
add
inc
outsb
enter
std
aaa
mov
sbb
jg
es
add
aaa
mov
xchg
movsl
sub
mov
inc
pop
stc
lcall
push
in
xor
call
roll
and
inc
dec
test
insl
outsl
outsb
js
xchg
dec
test
test
call
jo
sub
les
repz
mov
mov
fsub
bound
mov
aas
sbb
sub
jae
repz
push
sbb
aam
sub
jo
xchg
call
push
lock
insb
sub
inc
jne
jne
push
mov
ja
sub
mov
mov
lods
pop
sbbl
dec
outsb
dec
aaa
push
repnz
mov
lods
pop
and
dec
xchg
jnp
mov
call
or
xchg
aam
mov
stos
leave
mov
push
mov
rcll
jmp
jo
insb
push
mov
pop
test
fisubs
aaa
or
icebp
or
popf
cmp
ja
xchg
mov
dec
icebp
outsb
add
out
frstors
and
sbb
fildl
sub
mov
add
push
mov
inc
push
in
sarw
les
shlb
sub
cmp
pop
xchg
daa
cmpsb
xor
jp
xchg
sarl
mov
dec
jl,pt
stos
inc
pop
push
cmp
push
inc
fadd
outsb
sbb
dec
dec
pusha
pusha
cld
inc
test
lods
inc
ds
jnp
ror
in
jne
jo
inc
pop
add
ds
fiadds
xor
mov
xchg
push
mov
sti
jbe
negl
jl
jo
test
and
insb
stos
xchg
inc
push
lea
into
mov
or
dec
jmp
pop
stos
xor
enter
das
sbb
pop
andl
mov
sbb
sub
push
rcrl
test
fcompl
push
jg
in
int
push
push
nop
sarb
aaa
in
and
and
or
mov
xor
dec
in
pop
and
dec
jns
jge
xor
in
cli
out
xchg
jns
xchg
cwtl
sbbb
sub
nop
xchg
and
or
pop
sub
hlt
test
fcmovnb
pushf
sub
xchg
xor
mov
sarb
add
iret
jmp
add
push
aaa
fistpl
dec
mov
std
aas
pop
loopne
cltd
hlt
xchg
cmp
xor
jecxz
sbb
adc
in
mov
insb
dec
aas
aam
push
inc
subb
cmpsb
cmp
adc
repz
outsl
mov
pop
push
inc
fsts
sub
cld
inc
das
dec
es
shll
sahf
mov
ss
ret
lea
mov
and
js
dec
ss
mov
jecxz
jo
fwait
arpl
scas
je
in
into
aaa
in
pop
repz
xchg
scas
fstpt
int
add
outsl
lcall
jle
fmuls
insb
lods
and
sahf
sbb
imul
inc
jmp
inc
adc
test
test
test
fisubrs
insb
jecxz
and
push
adc
in
cmp
adc
imul
jecxz
fdivs
xchg
add
test
push
imul
pop
and
xchg
loop
fildll
dec
add
lahf
scas
inc
pop
out
mov
imul
clc
ljmp
xlat
jae
cmc
sub
out
dec
out
xor
aaa
push
xchg
mov
sbb
sbb
into
xchg
aad
mov
xor
das
cltd
loop
mov
mov
lods
mov
adc
sbb
aam
sub
ss
xor
lods
test
ror
out
mov
push
xor
sub
lret
and
sbb
sarb
cs
xchg
test
add
aaa
mov
arpl
rclb
repnz
lock
mov
imul
fwait
dec
movsl
mov
repz
pop
out
lds
movsl
inc
enter
nop
or
xchg
enter
xor
sti
loope
mov
sbbl
jge
adc
hlt
pop
mov
jne
pop
and
add
cs
ret
outsb
mov
cmp
les
pop
insl
fwait
sbb
mov
outsb
lcall
jg
in
scas
mov
jge
cmpb
mov
xchg
push
sub
mov
je
dec
mov
push
fsub
push
dec
pop
adc
ffree
aaa
nop
mov
notb
fs
aaa
sbbb
je
mov
inc
fimuls
push
rcrb
movsl
sbb
test
inc
loope
mov
jmp
dec
push
aaa
adc
or
popf
leave
adc
and
loop
lahf
inc
in
xchg
repz
sbb
in
jle
test
dec
icebp
lahf
pop
pop
sub
sbb
mov
jno
aas
dec
rcrb
or
shl
cmp
and
test
push
mov
aaa
gs
cmpsb
sbb
dec
popa
icebp
test
mov
std
ja
xchg
lea
cmp
cmp
ror
pop
stos
jge
decb
pushf
popa
pop
test
inc
push
sbb
adc
xchg
dec
or
outsl
add
inc
and
ds
das
push
sub
inc
xchg
lock
fistpll
data16
cltd
fisubl
dec
lock
jge
inc
orl
aad
aaa
cmp
adc
sbb
adc
test
mov
fistpll
sub
push
adc
lret
xchg
std
mov
dec
ljmp
pusha
pop
lcall
lods
stos
xchg
cmp
add
or
cmp
sub
aaa
or
jmp
fwait
mov
int
fsts
mov
rolb
outsl
xor
scas
jb
aaa
push
aas
arpl
xchg
imulb
push
push
cmpsb
dec
cmp
inc
inc
xchg
loopne
or
pop
sbb
icebp
icebp
ss
js
jo
cmpsb
es
movsl
inc
mov
insl
and
dec
repz
xor
xchg
sub
jo
je
ret
lahf
pop
push
dec
xchg
dec
push
mov
mov
sarb
pushl
nop
adcl
mov
jle
push
add
iret
and
cs
fnstsw
lcall
cmp
pop
jle
xor
add
pop
mov
into
mov
pop
test
jle
mov
pop
push
fldl
push
push
into
push
cmp
iret
test
inc
cmp
loope
push
das
mov
loope
jle
ret
iret
xlat
pmulhuw
mov
add
push
dec
sbb
into
stos
test
das
rol
add
cmp
cs
inc
xchg
pop
cmp
fmull
jb
cli
out
fnsave
xor
jns
enter
insb
das
xchg
rcrl
test
mov
sub
push
shlb
iret
sbb
inc
out
pop
mov
rorb
push
mov
jb
fidivs
dec
loopne
add
pop
clc
mov
imul
in
insl
mov
push
mov
ds
dec
ret
jo
scas
xchg
out
or
fnsave
popf
inc
cwtl
repz
cli
test
stc
sbb
sbb
int
jbe
das
addl
sub
pop
xor
icebp
xchg
adc
scas
loope
mov
push
test
sbb
loope
cmpsb
jnp
mov
xor
push
sub
mov
filds
add
stc
mov
stc
pop
sbb
cltd
sarb
test
into
inc
out
or
sbb
outsb
cwtl
cmp
daa
push
insl
dec
cmp
xchg
add
jge
ds
cwtl
mov
or
push
mov
movsb
test
loopne
lea
aaa
icebp
mov
movsl
add
adc
jnp
hlt
scas
loope
sbb
and
adc
shl
jb
dec
pop
cmp
adc
or
arpl
mov
xchg
mov
mov
jb
cmp
inc
sbb
mov
jns
xchg
push
insb
pop
lret
fsts
xchg
sbb
stos
sbb
push
enter
and
jb
cmp
lcall
and
jmp
loope
dec
pop
roll
imul
stos
pop
mov
outsl
jae
andb
and
add
cmp
xchg
scas
and
inc
call
xchg
fsubr
sub
mov
mov
in
sbb
mov
addr16
pop
aas
cmp
sarl
xchg
fsubs
jb
cmp
imul
mov
push
cmp
std
dec
cmp
fwait
ss
push
jge
aam
mov
mov
call
aaa
clc
mov
cmp
xchg
or
mov
mov
or
mov
cmp
adc
insl
cmp
jno
loop
pop
dec
sbb
and
lahf
adc
add
mov
pop
mov
mov
jbe
cmp
adc
loope
mov
cmp
cwtl
repnz
rcl
xchg
in
cli
inc
test
pop
mov
sti
or
mov
dec
inc
jns
mov
andl
mov
nop
jb
mov
inc
enter
sbb
daa
dec
xchg
jg
and
mov
repz
inc
and
addl
push
fs
cmp
sbb
mov
inc
popf
sahf
addr16
jno
pop
xchg
xor
mov
mov
lret
clc
mov
hlt
sub
out
add
xchg
lods
add
push
insb
mov
jb
aaa
xor
xor
out
popa
lret
or
xchg
adc
push
mov
pop
and
in
mov
jle
mov
test
lods
iret
cmpsl
pop
inc
inc
sbb
mov
jnp
pushf
xor
loope
repz
pusha
pop
cli
dec
push
aas
sar
push
add
jnp
sub
sahf
nop
lret
push
dec
jecxz
je
in
xchg
sti
ss
ret
es
inc
xor
sub
je
lret
pop
mov
sub
push
jb,pt
cli
push
repz
outsb
call
inc
inc
jno
or
testl
enter
in
add
icebp
adc
pop
outsb
add
sbb
cmp
push
loope
jns
stc
xchg
or
cld
fs
add
inc
pop
mov
js
push
jle
pop
out
bound
leave
out
inc
imul
ljmp
popl
inc
mov
lret
xchg
test
lea
dec
and
cmp
xchg
loope
and
cmpsl
pop
popa
jge
hlt
dec
inc
cmp
pop
adc
push
jecxz
fnstcw
out
xchg
aaa
dec
jo
sbb
or
test
imul
adc
call
xor
ds
pop
add
sbb
aas
xorb
jo
and
adc
xchg
popf
repnz
add
xchg
ja
pop
std
sbb
fs
aaa
data16
clc
idiv
inc
adc
pop
popa
and
sbb
add
cmp
mov
pop
or
outsb
jne
jl
dec
lock
addr16
les
inc
lods
clc
jl
mov
lcall
xlat
pusha
cld
push
imul
pushf
mov
arpl
push
sbb
test
enter
jl
add
jne
call
out
repz
mov
push
inc
lret
movsb
mov
and
cmp
sub
adc
lret
fildl
or
push
in
jbe
out
mov
sbb
movsl
enter
das
loope
add
cmp
push
xchg
sti
sub
inc
aaa
add
outsb
cmpsb
lods
push
pop
outsb
pop
sbb
stos
pushf
bound
sbb
call
mov
hlt
jle
lock
xorb
inc
push
mov
or
popf
cltd
and
jno
pop
cmp
jb
sbb
or
pushf
adc
push
ss
mov
outsl
cmp
dec
inc
sarb
sub
mov
insb
jbe
mov
lea
dec
sub
outsl
xlat
mov
iret
push
pop
lcall
aaa
repz
jmp
imul
cmp
std
cmp
lahf
loopne
push
cltd
dec
push
aaa
out
das
add
mov
outsl
mov
int3
aaa
mov
sbb
sub
mov
pop
pop
ss
pop
xor
mov
and
sbb
int
fwait
imul
shlb
jl
and
cmp
mov
mov
mov
std
ret
in
fsubrs
push
pop
sub
sbb
add
rclb
jb
fwait
arpl
mov
dec
aad
movsb
jle
loopne
xorb
inc
sbb
push
lcall
jne
cmp
stos
je
and
or
lods
fistpll
push
inc
dec
dec
inc
rcrb
icebp
ds
jle
out
bound
sbb
jecxz
arpl
rolb
cmpsb
repnz
aam
xor
adc
clc
sbb
xchg
pop
cmp
push
add
push
fsubl
outsb
stos
das
jg
aas
sub
js
sbb
push
pop
shrb
pusha
sbb
xchg
fwait
adc
adc
scas
dec
xchg
pop
insb
pushf
sti
addr16
xor
rolb
es
inc
bound
pop
cmc
mov
dec
xor
stos
icebp
add
sbb
lret
dec
mov
fisubrl
enter
ds
mov
sub
icebp
adcb
jle
mov
int3
movsl
mov
stos
sbb
dec
test
pop
loop
lock
insl
dec
ucomiss
add
xor
mov
pusha
nop
leave
xor
cli
push
push
adc
in
dec
aaa
dec
pop
mov
mov
jne
pop
in
test
fnsave
ds
sbb
pop
lods
ss
rcl
xchg
and
out
aam
lods
add
out
das
xchg
xor
int
in
inc
out
add
das
das
ds
push
jb
loope
imul
cli
fsubr
adc
imul
mov
cmc
mov
jp
jle
and
test
shlb
fwait
in
rcrl
sbbb
data16
imul
jnp
pop
jo
divb
and
push
test
sahf
imul
cltd
js
icebp
jl
add
push
loope
mov
mov
scas
inc
hlt
movsl
sub
or
or
inc
gs
push
icebp
adc
push
jle
out
jmp
loopne
adc
and
pushf
inc
not
pop
sahf
pop
movb
mov
adc
das
sub
and
bound
in
pop
mov
lea
and
js
adc
jge
jae
push
dec
das
cmpsb
adc
cltd
cmpsl
or
push
xchg
fsubrl
xor
in
cld
es
pop
mov
fadds
pushf
ret
in
push
pop
sbb
xor
add
in
jnp
icebp
cmpb
mov
ffree
lock
jo
or
scas
dec
xchg
pop
jns
xchg
or
mov
inc
xchg
shl
cmpsb
in
jle
cmp
scas
loopew,pt
ss
imul
daa
sbb
jb
xor
mov
shl
add
dec
andb
inc
ret
loopne
loop
js
mov
sub
push
jbe
insl
btr
shl
add
jle
xchg
mov
xchg
enter
inc
test
xor
ret
ljmp
pop
push
imulb
je
mov
and
jo
jno
or
xor
aas
pushl
pop
sbb
stos
pop
std
clc
in
call
mov
push
shl
imul
stc
scas
pop
mov
aaa
out
jbe
xchg
outsb
pop
mov
mov
daa
ret
les
mov
adc
aad
and
add
clc
jmp
inc
mov
arpl
cwtl
mov
das
imul
sub
aam
dec
mov
fldt
jno
mov
ss
fs
std
inc
sar
inc
enter
push
cmp
repnz
ljmp
inc
loop
data16
les
sbbl
ljmp
pop
test
lds
aaa
cmc
repz
leave
sub
push
adc
inc
push
xor
sbb
xchg
dec
fdivp
stos
cmpsb
insl
pop
call
popf
xchg
sub
lcall
xor
std
aaa
int
push
aaa
add
push
imul
ret
fnstenv
mov
xor
sub
add
insl
jb
mov
jle
mov
test
movsl
xor
jle
dec
bound
adc
pushf
jl
push
bound
fs
mov
insb
sbb
push
mov
add
jle
jecxz
in
test
dec
aad
dec
out
enter
call
jae
mov
inc
and
shr
pop
mov
fisubs
sbb
les
icebp
jns
gs
jno
int3
hlt
test
jle
push
sti
fldcw
je
cmp
scas
mov
bound
add
pop
repnz
add
cwtl
test
xchg
pop
lods
in
das
mov
cmp
incl
inc
add
push
push
enter
or
push
jnp
jp
cltd
pop
mov
in
pop
xor
xor
fisubrl
adc
mov
push
jmp
aaa
mov
lcall
test
enter
lea
inc
xchg
lret
inc
pop
stos
in
pop
arpl
shrl
pop
pop
cmp
cmp
addr16
jmp
inc
cwtl
or
inc
sub
loope
iret
push
push
stos
mov
mov
sub
leave
ljmp
mov
jecxz
das
insl
inc
repz
fidivrl
lcall
sbb
inc
xchg
push
aas
and
scas
inc
inc
rorb
cmpsl
pop
xchg
adc
repz
sahf
adc
and
sub
jecxz
sub
push
ficoml
pop
loop
mov
lret
dec
sbb
xor
rcll
outsb
int3
enter
pop
dec
or
pop
int
push
sbb
inc
jne
and
or
fs
aaa
or
push
xchg
lods
mov
stc
enter
orl
adc
fistps
sti
xchg
or
dec
cs
jle
aad
das
and
aaa
scas
adc
fs
mov
orb
popa
pop
shrb
nop
pop
loope
or
jle
aaa
push
fbstp
push
in
or
sbb
jl
cmp
lahf
push
mov
cld
sbb
stos
pop
pop
fidivrs
sbb
fchs
ffreep
jno
mov
inc
push
in
ss
iret
movsl
cmpsb
or
and
imul
das
pop
pop
mov
inc
kmovb
adc
xchg
sub
push
jl
mov
pop
enter
cmp
push
add
cmp
xchg
lods
dec
lcall
movsl
scas
stc
jno,pn
and
and
popa
stos
mov
rcr
xchg
ss
xchg
aaa
pop
sbb
das
push
inc
pop
or
jo
jl
inc
push
inc
add
js
cmp
or
cmp
xor
cld
sub
popf
sbb
pushf
sbb
test
js
ss
enter
jmp
inc
ss
pop
jne
popf
movsb
xor
rclb
xor
xchg
lahf
inc
pop
cmpsl
dec
pop
dec
aad
popf
sbb
in
cld
iret
jne
sub
rolb
int
mov
push
ds
and
aaa
loope
aaa
ficoml
lods
std
iret
cmp
sub
and
test
xor
xor
aaa
push
or
in
fnsave
lcall
jo
xchg
or
mov
dec
int3
outsb
sbb
arpl
ret
adc
imul
pop
aas
and
jne
in
out
pop
js
pop
xor
enter
int
out
fcomp
mov
filds
inc
aaa
cmpsb
incl
je
cmp
push
inc
std
div
les
arpl
jbe
pop
dec
mov
mov
fisubs
js
cmp
pop
pop
xchg
mov
repz
call
push
mov
movsl
insl
push
fistps
pop
and
inc
cmp
add
std
test
xchg
xchg
push
sbb
xor
in
push
stos
add
or
xlat
out
inc
aaa
sub
push
sub
aas
aas
js
jns
jle
pop
push
aaa
add
pop
aas
pop
mov
sbb
mov
push
cltd
mov
sbb
dec
dec
push
inc
xchg
fcompl
push
jo
mov
mov
lds
cmp
test
or
pop
cltd
mov
repz
lods
xchg
rcrb
xchg
test
adc
jbe
mov
aaa
in
sub
inc
jle
mov
xlat
aad
and
dec
mov
push
jle
jnp
ss
pop
nop
out
fldcw
shlb
loopne
fistpl
loop
test
or
mov
and
icebp
dec
outsl
pop
pop
push
fistpll
push
loope
gs
lcall
sbb
sbb
pop
mov
dec
pop
scas
insl
mov
inc
sub
jae
pop
imul
and
ficoms
mov
sbb
rolb
xchg
lds
pop
leave
fsubs
dec
and
dec
fstl
je
xlat
popf
loope
daa
inc
dec
cmp
jbe
int
cmc
ljmp
cmpb
push
js
stos
sbb
cmp
in
jmp
xchg
pop
jbe
mov
cwtl
lds
jl
out
and
mov
mov
pop
icebp
jo
push
testb
jle
pop
push
pop
and
shll
jge
in
inc
adc
insb
push
adc
xchg
fwait
and
add
shlb
adc
add
push
pop
pop
loop
sbb
pop
cmp
cs
ds
xchg
cwtl
add
movsb
lret
cmc
xor
xlat
pop
sti
fs
scas
test
pop
or
dec
scas
inc
sbb
or
out
cmp
pop
push
gs
in
xor
push
leave
aas
adc
lret
xchg
cmp
xchg
mov
aaa
jmp
pusha
arpl
mov
pop
fmul
pop
ljmp
fwait
mov
xchg
sub
fidivrs
inc
aaa
inc
sub
and
imul
lret
mov
xchg
daa
daa
aaa
inc
cmp
push
cs
or
jmp
scas
loopne
cmp
pop
jnp
les
pop
jnp
adc
outsb
in
cmp
jle
orb
or
mov
mov
data16
imul
call
push
sub
push
in
inc
in
add
xchg
or
aas
fs
rclb
mov
pop
icebp
data16
mov
loop
dec
adc
push
lods
jne
push
outsb
sbb
mov
clc
mov
sbb
popf
jae
imul
mov
or
jp
aam
loopne
xchg
sti
pusha
xor
ret
out
lods
icebp
in
mov
xor
lds
mov
push
cmp
pusha
arpl
jnp
roll
imul
cmp
nop
das
pop
scas
add
out
and
dec
aam
lods
mov
cwtl
xchg
mov
imul
dec
test
jle
aaa
cmp
mov
pop
int
inc
fsubrl
daa
loope
mov
xor
loope
mov
push
pop
test
ds
mov
scas
cmp
sarl
sbb
loopne
js
hlt
daa
push
cs
popf
sbb
jb
xor
aam
lcall
xchg
mov
aam
mov
lret
jne
lret
mov
and
sub
in
enter
push
pop
jno
jmp
add
push
sahf
jl
mov
aam
call
push
mov
dec
outsl
push
inc
xlat
jb
jecxz
cltd
pop
ret
cltd
rclb
pop
aas
pop
add
push
dec
xor
add
aas
adc
fsubs
xchg
pop
out
stos
sahf
in
adc
popf
sti
xor
std
stos
out
dec
test
arpl
sbb
pop
adc
stos
nop
shl
shl
lea
sub
push
cmp
add
ss
in
pop
mov
lea
inc
subl
cmp
mov
sub
insb
repnz
clc
nop
fdiv
rclb
sbb
xchg
sarl
xor
das
add
insb
subb
jge
inc
add
sahf
mov
push
push
pop
mov
jns
notl
dec
icebp
je
or
push
inc
icebp
sbb
cvtpi2ps
mov
and
fndisi(8087
mov
shrl
jnp
arpl
gs
clc
das
jno
add
mov
mov
cwtl
shlb
pop
dec
dec
sub
and
stos
outsb
mov
jbe
sbb
enter
aaa
jne
insb
je
sub
and
movsl
add
jg
cmp
lcall
xor
push
ds
fsubrl
sub
in
push
in
push
dec
xor
pop
fistpl
call
leave
jae
pusha
xlat
mov
and
add
xchg
int3
aaa
or
movsl
outsl
call
dec
imul
pop
insb
mov
sub
insl
jns
loope
mov
lret
lock
sbb
das
jae
fcmovnu
mov
ss
sar
sbb
loopne
jecxz
adc
push
outsl
pop
add
movsb
pop
ds
fstpt
jl
arpl
mov
aam
push
out
jge
xor
add
pop
lcall
aaa
add
adc
push
xchg
out
test
xor
mul
stos
adc
push
add
orl
ss
repz
and
pop
pop
repz
xlat
and
push
xchg
bound
fcompl
movsl
cmc
or
push
inc
mov
xchg
push
out
dec
xchg
cmp
pop
aaa
pop
adc
mov
clc
pop
mov
cmpsl
mov
sbb
adc
jns
into
and
shrb
and
out
jb
inc
sbbb
sti
sbb
inc
incl
loopne
mov
inc
and
mov
sub
push
mov
bound
mov
incl
ja
test
jecxz
xor
and
push
pop
dec
data16
test
je
aaa
or
cmpsl
popa
lock
dec
add
loope
test
cmp
push
aaa
negb
fstps
mov
out
or
stc
in
test
outsl
sbb
push
inc
dec
pop
sub
fwait
adc
pop
xchg
mov
lret
push
inc
xor
jmpw
fucomip
push
mov
xor
jmp
repz
out
je
pop
inc
lret
or
jbe
dec
jo
add
and
sbb
inc
cmp
jb
shll
push
mov
in
xchg
dec
jmp
mov
cmpb
out
cmp
fdivl
pop
xchg
and
mov
inc
and
cld
fisubl
jb
xlat
pusha
iret
mov
dec
adc
fbstp
lcall
sbb
push
xor
popa
aaa
xchg
das
sub
popa
mov
lret
xor
aaa
cmp
adc
and
mov
lret
and
dec
in
mov
mov
outsb
popfw
outsb
add
test
xchg
inc
lods
std
pusha
ss
popf
xor
jmp
ret
and
sbb
movsl
xorl
scas
cmp
ljmp
repnz
sbb
popf
hlt
int3
sar
add
and
sbb
push
adc
jle
and
sbb
push
mov
aas
aaa
loop
pop
fildl
mov
inc
incb
subb
jg
stc
lock
add
ss
out
loop
cwtl
mov
push
jae
add
imul
mov
push
sbb
adc
inc
mov
add
faddp
in
xlat
das
xchg
shl
dec
xor
xchg
cld
dec
aas
sbb
test
insl
cmc
mov
imul
test
add
push
test
ja
xchg
aas
arpl
pop
aaa
sbb
push
pop
int
jo
stos
xor
das
lret
mov
test
fs
mov
or
and
pushf
pop
cmp
cmpsb
cmpb
aam
loop
xor
jmp
in
pop
cld
mov
mov
mov
pop
nop
in
push
mov
aaa
push
pop
cs
jne
pop
xor
sbb
push
xor
dec
sarb
sub
xchg
fldcw
imulb
and
and
les
lcall
or
aas
sti
cmpsb
fildll
into
fwait
out
mov
xchg
push
push
push
das
sbb
cmp
cmp
lcall
jno
repz
or
add
data16
push
bound
lods
shrl
fscale
push
jbe
mov
stos
repz
icebp
push
pop
out
mov
xor
dec
sbb
mov
inc
das
mov
cmp
shrb
inc
mov
dec
mov
pop
rcll
in
pop
sahf
and
outsb
pop
addr16
jbe
pop
pop
ja
push
ficoms
pop
repz
mov
rcl
ss
sbb
push
xchg
hlt
andl
mov
cltd
cmp
adc
loope
jle
mov
add
lods
in
test
xchg
flds
xchg
push
pop
imul
pop
adc
inc
divb
sarl
mov
outsb
push
lcall
jecxz
adc
lret
inc
cld
sbb
adc
repnz
inc
xor
repnz
mov
xchg
xor
xor
ds
dec
jg
jg
sbb
or
mov
push
fistps
lds
jecxz
adc
data16
dec
pop
jb
add
or
pop
sahf
mov
dec
leave
cmp
xchg
out
pop
out
pusha
fs
fdivr
push
jae
in
xor
push
loope
test
loope
and
sub
out
dec
je
jmp
fistpl
pushf
sub
sar
test
sbb
jb
cmp
popa
pop
out
mov
push
arpl
fstp
cmp
and
dec
mov
in
adc
dec
divl
pop
stos
push
pop
sbb
sbb
and
clc
add
aas
sti
addr16
test
push
icebp
cmp
push
out
or
mov
mov
sub
sbb
dec
mov
ffree
je
aaa
cltd
push
pusha
xor
lcall
loopne
pop
cmp
enter
sbb
push
jo
jns
fsts
imul
shrl
into
sbb
enter
jecxz
loop
push
shr
xor
pusha
xchg
mov
adc
fldenv
mov
ret
dec
iret
imul
cmpsb
jg
sub
jne
scas
push
xor
outsb
test
add
pop
cmc
lods
adc
xchg
movsl
test
lds
push
outsb
sbb
cmpsl
popf
add
push
int3
repnz
into
inc
jl
bound
add
xchg
dec
es
sbb
insb
lods
arpl
xor
dec
ja
jbe
sbb
addr16
shl
mov
stos
jge
gs
xor
ffree
push
push
movsl
scas
push
cli
mov
jns
in
sub
mov
fists
daa
push
add
aaa
ljmp
aaa
fildll
imul
or
rolb
loopne
mov
and
cmp
and
cld
call
aas
xor
sahf
insl
lcall
repnz
mov
push
sbb
inc
cmp
outsb
rcrb
dec
icebp
cs
int
xorb
pop
and
outsl
das
dec
pop
pop
movsb
lds
out
std
push
scas
or
push
ja
pop
cmp
push
movl
pop
jbe
aaa
int3
xor
loop
pushf
stos
push
dec
lcall
pop
mov
inc
xchg
test
sub
sbb
push
in
ror
subl
or
outsb
mov
pop
sub
loop
mov
ret
dec
ja
adc
je
sbb
cmp
xlat
and
inc
imul
add
cmp
rolb
mov
push
dec
fwait
aam
loopne
sub
jmp
fcmovne
mov
imul
rsqrtps
push
cltd
sbb
aaa
test
mov
mov
cwtl
cli
lcall
xor
mov
mov
sbb
addr16
pushf
es
cmpsl
fldcw
mov
cs
int3
cmpsb
jmp
scas
lods
dec
push
inc
pusha
ljmp
sbb
push
cmp
movl
xor
or
js
stos
xor
leave
dec
inc
push
bound
shll
push
or
arpl
sbb
jle
nop
aas
pop
sarl
push
mov
shrb
push
xor
dec
fistps
and
adc
bound
push
inc
cli
sbbl
in
push
cltd
stos
cmc
cs
jg
test
push
jge
sahf
std
addr16
jno,pt
push
and
dec
or
mov
or
inc
test
add
adc
inc
cmpsb
dec
andl
inc
push
test
ud2
andb
test
adc
lret
into
test
ja
pushf
repz
mov
lock
mov
inc
pop
mov
insb
or
jg
jns
jl
hlt
lock
mov
pop
adc
lea
inc
cmp
mov
sbb
inc
pop
xor
popa
mov
imul
adc
lahf
test
int
out
insl
xchg
mov
out
lea
push
call
shr
push
aaa
cmp
ss
mov
rclb
icebp
frstpm(287
insl
push
and
fnstcw
nop
lods
movsl
lret
pop
jb
dec
and
push
mov
pop
jmp
in
adc
ret
lcall
mov
aas
sbb
pop
popa
add
clc
xor
push
fcoms
mov
mov
icebp
sbb
clc
jge
jp
xchg
cmp
outsl
out
in
and
fldenv
sub
push
push
adc
jg
mov
mov
dec
lea
and
pusha
loopne
in
jns
data16
and
sub
adc
fcomp
cmp
sti
jns
sbb
in
sbb
xchg
sub
xor
in
inc
mov
dec
sahf
jns
sub
stos
fs
rorb
push
out
std
lret
push
push
pop
sub
cmp
xchg
adc
insl
out
xor
movsb
cltd
push
insl
dec
nopl
out
pop
mov
insb
pop
add
push
mov
mov
jl
pop
sbb
xor
lock
orb
or
push
jne
mov
clc
xchg
pop
mov
scas
mov
out
cwtl
push
cld
roll
jo
data16
push
icebp
mov
cmp
je
pop
loope
mov
add
or
les
mov
std
inc
xlat
or
pop
stos
mov
shrb
or
aaa
andl
pusha
jne
daa
jae
movsl
cmp
outsl
sbb
ja
lods
pop
and
push
out
cli
cmp
xor
push
in
mov
out
std
into
out
das
es
add
ds
add
jg
cltd
mov
or
sbb
cmpl
inc
cli
mov
xor
push
jno
mov
and
and
cmpsl
dec
lahf
fidivs
mov
mov
lea
rorb
adc
std
fs
add
xchg
mov
jle
in
int
sub
adc
mov
mov
in
jl
outsb
cwtl
and
cmp
dec
push
mov
xchg
inc
push
xlat
jns
pop
sbb
fadds
repz
rcl
mov
cmpsb
and
js
jle
jno
or
jns
aaa
sbb
mov
aad
jbe
cmp
repnz
xlat
pop
imul
insb
and
mov
cmp
stos
insb
pop
ret
ja
das
jge
cmp
or
fucomip
mov
cmpsb
fistps
jle
dec
dec
outsl
iret
cli
loopne
push
shlb
jo
loopne
lds
xchg
popf
stc
movsb
sti
je
popa
lods
or
mov
adcb
xchg
pop
fdivs
push
jo
mov
pop
aam
ss
push
std
cmc
pop
mov
pop
pop
outsl
inc
sti
lods
mov
jp
cmpsb
cli
in
mov
jbe
and
ss
bound
fdivl
inc
fists
sub
xchg
ljmp
iret
push
jb
or
pusha
push
jg
loopne
neg
cld
jb
repz
stos
mov
pop
jl
aaa
inc
inc
sbb
add
cmp
shlb
fcmovnb
data16
pop
outsl
mov
push
fwait
loopne
in
cmp
icebp
mov
push
dec
mov
repz
xor
xchg
pop
jns
outsb
mov
jo
int3
pop
adc
and
subl
lret
push
cmp
add
aaa
lea
fdivr
in
inc
pop
dec
test
cmpsb
rcll
mov
shrb
lock
imul
pop
sbb
ret
inc
cltd
sbb
push
xchg
push
test
and
xchg
xchg
movsl
enter
popf
aaa
mov
cld
jnp
or
jno
cs
push
push
mov
and
xchg
sbb
dec
cmpsb
andb
mov
das
decb
lods
sbb
cmp
mov
mull
cmp
xor
xor
shrl
iret
ss
call
aas
ret
ds
xchg
fisttps
aas
push
into
in
mov
cmp
in
popf
aas
mov
push
xor
les
rorl
pop
mov
or
test
pop
pop
aad
stos
pop
enter
dec
pop
pop
and
push
mov
inc
push
mov
cmp
dec
jg
and
movsl
pop
mov
aaa
xchg
cli
inc
sbb
xor
std
pop
jbe
icebp
pop
xor
notb
inc
std
aaa
lahf
and
adc
push
jo
sbb
push
dec
test
pop
sub
adc
arpl
pop
adc
int
xchg
enter
aas
cwtl
cmp
aas
sbbl
insb
ja
stos
mov
fstpt
addr16
pop
add
lea
add
lcall
rcrb
and
mov
xor
push
pop
test
cld
mov
movsl
scas
xchg
arpl
add
sub
lret
arpl
push
cmp
test
mov
mov
mov
or
pop
aaa
jmp
inc
add
cld
mov
pop
sbb
push
adc
add
rol
add
xchg
mov
out
xchg
rcrb
pop
sbb
xor
mov
rcrl
adc
add
inc
fisttpll
and
adc
imul
lcall
push
ljmp
ljmp
mov
sti
jno
xor
rol
cmpsb
in
cmpsl
xor
dec
pop
aaa
lods
stos
fwait
xchg
dec
jo
or
cmp
xchg
pop
jle
stos
lret
fnstsw
cmp
sub
xchg
ret
lcall
jp
jmp
loopne
sbb
sahf
aam
inc
arpl
sbb
add
jnp
sbb
js
push
sbb
mov
jb
xor
stos
jbe
push
pop
in
pop
jnp
repz
movsb
aam
sti
adc
mov
es
sarl
push
icebp
jge
in
daa
lods
inc
inc
and
repz
inc
sub
sub
incl
aas
xor
lret
jle
iret
jns
out
bound
add
enter
adcb
inc
icebp
faddl
jno
or
faddl
jg
sub
mov
call
add
jl
popf
pushf
mov
inc
push
fnstcw
xor
shlb
repz
adc
push
mov
inc
outsl
xchg
cmp
xor
mov
ss
cwtl
hlt
pusha
rdmsr
pop
stos
es
aas
sub
imul
outsl
adc
mov
and
int
int
dec
aas
inc
aam
mov
jecxz
pusha
bswap
add
jecxz
fsubr
adc
sbb
pop
dec
addl
add
fsubs
jge
pop
data16
repnz
jbe
xchg
mov
sub
push
es
sbb
adc
inc
pop
lea
aad
dec
popf
aaa
in
mov
outsb
insl
push
fcompl
or
rclb
in
testl
je
xor
fadds
sbb
stc
in
jmp
repz
pop
and
cmpsb
pop
mov
in
test
je
leave
filds
ret
pop
fdivs
in
push
sar
and
mov
jecxz
jmp
jp
pusha
push
cmc
xchg
lods
pop
cmp
or
pop
loopne
xchg
sbbb
and
ret
and
mov
negb
popf
xorl
movsl
bound
negb
jo
aas
je
subb
mov
jp
sbb
testb
jmp
push
or
or
fwait
push
mov
mov
push
jb
xchg
and
insl
mov
imull
sub
xchg
mov
or
icebp
insb
pop
push
pop
insb
sub
push
in
sbb
jb
stos
dec
dec
adc
jo
mov
int
inc
inc
cmp
lret
and
mov
push
call
sarl
fdivrl
jnp
lcallw
in
inc
cmc
shrl
pop
dec
notl
aam
pop
or
bound
stos
les
popa
ret
fldcw
pushf
lcall
aaa
movsl
and
push
std
push
push
dec
mov
imul
nop
insb
inc
inc
sbb
dec
push
sub
je
sbb
jae
push
cld
rorl
insb
push
in
push
dec
xchg
jns
outsl
ljmp
cwtl
in
or
out
rcll
testb
stos
or
add
fildll
dec
push
xchg
aam
out
imul
mov
fwait
sarb
push
adc
hlt
ret
shlb
mov
fimuls
ljmp
mov
push
mov
push
jns
jg,pt
out
imul
pop
es
push
lcall
mov
repz
aad
mov
sarb
inc
mov
lods
xchg
lcall
test
sbb
sub
inc
ljmp
sti
or
dec
sbb
pop
ror
mov
mov
ret
xchg
pop
stos
inc
mov
call
fmull
and
xor
sub
sbb
pop
mov
das
inc
out
loope
push
mov
push
adc
or
mov
pop
scas
xor
lret
jl
xor
pop
in
inc
mov
pop
sti
dec
or
inc
insl
push
push
mov
fcomps
push
in
stos
push
loop
cmp
add
lret
add
fcompp
pusha
sbb
mov
dec
adc
sub
pop
nop
mov
jbe
mov
pop
lret
fwait
stc
jno
je
mov
aas
jbe
pop
cld
int3
stos
mov
in
sbb
jle
inc
sahf
push
jno
stos
xchg
inc
dec
mov
jle
bound
sbb
in
and
sti
dec
call
mov
push
insl
mov
pop
cmp
fcmovnb
test
mov
push
popf
test
xor
sbb
sbb
and
inc
xor
cld
jno
into
dec
lock
sbb
add
jae
and
das
inc
and
add
push
scas
sub
mov
cli
jne
lea
mov
popa
xchg
inc
push
mov
sti
xchg
lea
fisubrs
lcall
lret
pushf
mov
jecxz
repnz
or
clc
push
std
scas
bound
ret
lods
push
lahf
insb
jmp
ljmp
sbb
push
xchg
mov
xchg
icebp
mov
lds
arpl
xor
or
mov
pop
mov
sbb
mov
mov
aaa
push
in
inc
mov
pop
dec
xor
cmp
in
les
sbb
stc
pop
mov
insb
xor
arpl
jns
jmp
pop
scas
jo
sbb
pushf
out
jecxz
and
int
ss
dec
add
adcb
pop
push
repz
mov
icebp
add
sub
inc
daa
iret
in
sahf
cli
cwtl
and
in
pop
or
inc
push
rorl
std
inc
jae
aaa
sbb
push
fstpl
xor
pop
sub
repnz
xchg
addb
jl
and
call
push
int3
les
sub
std
push
push
sub
mov
fcomps
int3
mov
xchg
test
pop
inc
fmulp
mov
sbb
cmc
adc
fstps
sbb
push
stc
jno
cs
mov
mov
icebp
insb
pop
mov
pusha
push
cwtl
pop
pop
cmp
pushf
xchg
outsb
dec
mov
push
pop
dec
mov
data16
pop
cltd
inc
sti
movsb
loopne
popf
fstps
nop
dec
push
aaa
push
and
add
jnp
dec
cwtl
mov
xchg
sbb
push
aad
outsb
jle
nop
movsw
out
xorb
and
sbb
cld
or
fsubrs
mov
shlb
or
int3
rorb
imull
ss
stc
push
div
movsb
je
jnp
mov
cmpsb
sub
pop
dec
out
push
dec
mov
mov
or
lock
push
mov
mov
adc
add
int3
and
pop
add
mov
xchg
in
sub
sub
and
push
mov
jecxz
shlb
scas
faddl
bound
jmp
jns
sub
jmp
fadds
add
xor
push
and
repz
dec
imul
fldcw
in
test
shlb
in
mov
pop
ret
aaa
mov
repnz
sahf
aaa
out
icebp
jns
cs
xchg
loopne
cld
cltd
or
inc
jo
out
xchg
ss
cmp
je
fdivrs
rorl
test
add
push
sbb
call
cmp
dec
stos
add
aam
pop
mov
pop
jno
cmp
mov
jle
lea
mov
fiadds
mov
mov
fsts
into
pop
xbegin
les
setne
mov
mov
mov
xor
out
mov
scas
cmp
mov
sbb
or
add
inc
stos
push
xchg
lds
inc
cmp
jge
sub
pop
mov
xchg
dec
pop
cmp
pop
lea
inc
out
out
in
dec
adc
mov
inc
in
repz
pop
push
clc
xchg
pop
dec
cmp
sub
cmp
mov
push
repz
inc
jbe
xchg
pushf
arpl
mov
lea
cs
mov
nop
mov
dec
in
fs
dec
sti
xchg
push
dec
push
push
aaa
movsb
cmpsb
or
sbb
fsubr
adc
adc
movsl
cmc
jnp
jne
or
stos
mov
iret
mov
ret
xchg
neg
cs
dec
repnz
fbstp
out
sub
adc
and
jmp
pop
inc
enter
mov
jmp
popf
push
or
insl
arpl
xchg
xchg
fs
inc
pop
jnp
jb
push
add
sbb
rcr
pop
in
popa
bound
sbbl
je
fcompl
sub
iret
pop
sub
repz
xor
lahf
and
or
rcr
mov
inc
mov
aam
out
xchg
mov
pop
xor
cmc
push
sbb
addl
pop
mov
and
sub
outsl
arpl
into
sbb
fdiv
popf
pop
orb
xchg
fstpt
pop
enter
sbb
mov
xor
sub
push
cmp
xor
clc
ja
jge
aas
jecxz
jle
sub
pop
sbb
fisttpl
inc
dec
js
xchg
add
popf
push
in
pushf
jle
test
scas
fs
mov
aaa
mov
ret
pop
push
mov
mov
loope
mov
mov
push
xchg
pop
mov
xor
sbb
pop
or
in
call
ret
cmc
int3
sahf
ljmp
stc
inc
inc
andb
addr16
or
pusha
shll
sub
aas
scas
clc
jle
cmp
insb
popf
sahf
xchg
jne
pop
xchg
jnp
mov
stos
lock
dec
leave
bound
xor
pop
jp
push
xchg
sub
fnsave
je
dec
test
ja
hlt
iret
mov
stc
test
mov
inc
sub
mov
nop
cmp
jnp
adc
outsl
adc
call
pop
enter
mov
push
jns
test
xor
sbb
add
fcoml
push
sahf
sarb
mov
aaa
data16
or
arpl
imul
data16
psrad
outsb
mov
push
jo
in
fisttpl
push
add
test
pop
js
aaa
scas
int3
xor
dec
daa
inc
adc
pop
inc
or
cmp
cld
push
xor
cmp
mov
outsb
sbb
out
repnz
jmp
lret
sub
test
es
cmp
in
repz
jb
jle,pt
mov
lods
add
lret
and
push
mov
jae
or
pop
xchg
loop
jo
jle
adc
outsl
pop
push
adc
pop
adc
sbbb
push
les
aaa
push
xor
notb
inc
lock
loope
xchg
inc
out
lahf
push
bound
scas
std
jp
orb
imul
sbb
jle
icebp
jns
jle
test
xlat
mov
aas
loope
dec
test
in
xlat
inc
jmp
or
fistl
shll
adc
xor
xchg
negb
sti
aaa
mov
es
shrb
mov
dec
jecxz
shl
cmp
arpl
push
push
lods
xor
mov
sti
and
lret
sub
dec
adc
pop
in
inc
cmp
xchg
rcll
cmp
xor
outsb
imul
divb
sbb
loop
pop
aaa
imul
bound
dec
mov
and
pop
lret
sbb
inc
test
cmp
ds
comiss
pop
cmp
sbb
cmp
ficomps
decl
push
jno
in
or
xor
xor
adcl
jmp
cwtl
xchg
sbb
mov
fcoms
jns
movsl
jmp
sarl
sub
repz
sbb
enter
pusha
movsl
lods
fdivrs
outsb
shll
jae
seta
cmp
data16
or
loopne
cs
pop
nop
adc
lods
mov
shl
mov
jns
pop
aam
dec
cmpsb
jb
inc
scas
xchg
inc
push
rorl
sbb
mov
pop
cli
mov
jmp
scas
adcl
je
ds
dec
and
pop
int3
inc
aaa
xchg
jecxz
bound
loope
jae
push
add
out
sti
in
sub
jecxz
nop
pop
movsb
or
sbb
mov
cmp
out
pop
aaa
lahf
and
and
cmp
icebp
movsb
xchg
sti
out
in
pusha
pop
jecxz
test
xchg
pop
push
pop
mov
cmp
in
xchg
dec
pushf
mov
lods
sarl
dec
popf
mov
lods
aaa
into
shlb
lock
sub
cmpsl
loope
xor
push
adc
mov
sub
loopne
orb
push
dec
cmp
adc
push
lret
rolb
pop
faddl
subl
xchg
push
fnstcw
stos
push
xchg
inc
stos
orl
fcomps
cmp
dec
mov
in
cmpsb
pop
fscale
lcall
pop
mov
bound
and
sbb
enter
outsb
sbb
nop
imul
dec
in
leave
lcall
pop
sub
mov
mov
test
jge
call
sub
sbb
pop
adcb
lds
stc
or
and
cli
fwait
push
mov
mov
decl
pop
adc
mov
popf
dec
leave
jle
mov
jne
push
push
shll
clc
fnstsw
cmp
sbbl
ss
sub
inc
fdivrl
pop
jle
loope
std
rorb
cltd
xchg
add
cmpsb
out
in
pop
adc
outsb
mov
std
imul
ret
das
cmp
cmpsb
pop
jmp
mov
test
mov
add
dec
mov
addr16
add
call
jo
sub
ret
inc
add
aam
cmp
xchg
xchg
sbb
lock
or
subl
aam
push
and
mov
fcoms
mov
ss
ret
je
mov
sahf
imul
jns
xor
outsb
and
adc
mov
addr16
sbb
xor
adc
mov
mov
adcl
xor
into
jno
pusha
cmp
inc
pop
loope
sub
bound
sub
std
in
xor
icebp
inc
ja
push
nop
sub
push
pop
arpl
out
xchg
faddl
dec
sbb
mov
cwtl
mov
sbb
fcomps
test
pop
cwtl
loope
xlat
lock
pop
sahf
push
arpl
les
sub
mov
and
push
inc
adc
popf
mov
cld
stos
pop
adcl
shl
rcl
push
sbb
add
or
push
jmp
push
jnp
lea
push
or
xchg
repz
mov
jl
das
pop
dec
leave
inc
pop
int3
in
xchg
imul
cmp
in
nop
inc
call
xor
cld
mov
xorl
sti
xchg
gs
ss
sbb
in
test
movd
sub
ds
in
inc
jns
sbb
or
fmuls
mov
pop
inc
xor
xor
sahf
xor
inc
popf
dec
std
in
push
mov
fstps
pop
mov
lret
push
xor
imul
push
aaa
jo
mov
inc
ret
push
lods
bound
js
out
stc
xchg
push
lret
sarl
push
test
lcall
mov
add
jecxz
mov
out
adc
divl
sub
hlt
leave
mov
mov
mov
aam
dec
repz
shl
pop
fucom
sub
sbb
out
ret
sbb
add
and
mov
inc
mov
jbe
mov
or
pop
or
jnp
jmp
mov
pop
add
inc
rorb
pop
sti
adc
sub
das
cmp
out
xor
pop
sbb
cmp
push
sub
insb
test
add
cli
dec
or
fsubl
pop
jne
std
xchg
fisttpll
das
addr16
and
scas
cmp
shrb
aad
push
jno
pop
dec
pusha
mov
rcrb
scas
push
aas
les
int3
aaa
nop
cmp
add
nop
repz
cld
jb
cmpsb
jbe
mov
aam
icebp
or
pop
ret
arpl
and
push
pop
cmpsb
pop
mov
push
jge
pop
jecxz
bound
or
adc
insl
aam
outsl
mov
mov
pop
popf
mov
inc
or
mov
loope
in
mov
fsts
cld
push
lret
sahf
jg
sub
jle
hlt
dec
add
divl
mov
das
mov
call
add
lahf
push
push
pop
fcmove
adcb
lods
int
xor
sbb
jb
aaa
sub
cmp
out
push
cmp
pushf
jle
jbe
fnsave
test
jo
jb
cmp
push
sti
mov
aaa
push
stc
mov
cmp
loop
in
pop
in
es
cmp
fwait
or
test
fsubs
stc
jb
insl
imul
sbb
xchg
repnz
mov
fisubs
test
xor
add
std
sub
jno,pn
jg
or
dec
fwait
sbb
flds
inc
and
sub
xor
xchg
popf
test
xchg
cs
or
aam
dec
movsl
cmp
cltd
and
pop
jne
pop
adc
jmp
test
and
mov
cwtl
or
inc
outsl
pop
pushf
mov
add
xor
out
pushw
dec
cmp
jbe
xor
repz
inc
mov
cmpsl
lods
inc
jl
push
cltd
cmp
mov
jle
test
mov
repz
mov
je
and
js
mov
xchg
je
inc
std
mov
es
push
mov
or
mov
movsl
stos
aam
mov
adc
jl
push
sub
mov
adc
push
mov
jl
sbb
mov
adc
insb
xchg
mov
push
push
popf
mov
dec
cmp
jnp
sub
sahf
cs
movb
pop
jle
sahf
shlb
mov
add
ljmp
cli
or
mov
or
leave
jne
mov
push
xchg
add
inc
inc
imul
pop
jl
pop
in
out
dec
daa
cmp
jg
dec
cmp
mov
xor
and
push
inc
movsl
pop
fldl
add
loope
rcrl
xor
nop
test
insl
push
or
lret
and
jae
mov
dec
stos
jo
cmp
pop
adc
ds
push
jg
ret
test
das
and
jb
inc
jmp
ret
sahf
popa
push
mov
out
xchg
adc
int3
sahf
gs
int
or
inc
cmp
and
imul
mov
dec
cmpsb
pop
loopne
aas
or
outsb
xor
push
or
xor
push
and
insl
mov
dec
dec
ljmp
adc
pusha
xchg
mov
push
data16
xor
repz
pop
std
in
push
cwtl
lock
lret
xchg
lahf
and
ds
insb
add
adc
js
xchg
test
mov
and
xchg
adc
sub
out
jl
dec
pop
pop
pop
pop
and
je
call
iret
aas
push
adc
pop
sbb
adc
xchg
xor
jle
adc
sbb
and
cwtl
or
jmp
dec
push
jno
pop
sbb
pop
mov
aaa
xorl
adc
dec
xor
mov
je
xchg
pop
cmp
aaa
lret
mov
jmp
mov
dec
in
cwtl
or
cmpsl
adc
shl
outsb
int3
cmpsb
sub
fnstenv
jo
sbb
sub
bound
push
push
das
and
sbb
insb
clc
cmpsl
sbbl
adc
jnp
cli
mov
mov
inc
pop
mov
xchg
inc
imul
mov
ljmp
movsl
cmp
xor
jle
rorb
sub
pop
add
fstps
mov
inc
mov
cmp
pop
movsb
sahf
shlb
mov
xchg
subb
xor
aaa
insb
xchg
jecxz
inc
sbb
mov
cltd
mov
scas
sahf
movsl
push
insl
jo
loop
jg
adc
cs
mov
or
std
out
jecxz
sti
imul
inc
cmp
inc
mov
fldt
ss
hlt
pushl
imul
sbb
xchg
xchg
outsl
sub
inc
push
jle
jb
fs
push
fs
pop
push
cld
pop
push
xor
and
mov
into
push
xchg
pop
sbb
xchg
sub
popa
sub
popf
cs
and
xchg
push
pop
in
cmp
or
pop
jae
xchg
pop
call
fcompl
lods
dec
icebp
mov
inc
push
mov
aam
out
sahf
adc
and
in
adc
or
pop
loopne
or
sbb
loope
sbb
lea
aaa
call
jp
mov
jle
fldpi
je
je
loop
pop
mov
sbbb
pop
cmpl
cltd
push
mov
ret
xor
xchg
jl
fxch
cli
fs
outsb
pop
mov
and
fstl
push
out
mov
incb
sub
push
pop
add
aaa
push
sub
lahf
insl
dec
mov
hlt
xor
faddl
sbb
outsb
sub
xor
push
push
adc
into
xor
popfw
jnp
sbb
mov
adc
mov
push
sub
inc
xchg
ss
aaa
mov
push
mov
sti
inc
and
xchg
cltd
xor
icebp
mov
mov
lds
rol
data16
adc
sbb
mov
sbb
sti
cld
mov
outsb
fbstp
shl
push
dec
and
stos
das
cmp
mov
js
mov
cmp
sbb
fldln2
or
mov
mov
popf
pop
or
adc
pop
adc
inc
stos
pop
orl
xor
adcl
test
sbb
repnz
into
pop
inc
test
jae
loope
int3
adc
xor
sbb
outsb
aaa
mov
lcall
jle
xchg
nop
jmp
in
fstpl
into
not
pushf
dec
cmp
inc
outsb
pop
xchg
cld
leave
test
dec
insb
pop
push
aaa
adc
cmp
mov
mov
repz
pop
fwait
or
fst
dec
cmpsb
push
pop
or
push
jo
leave
dec
lret
xchg
dec
mov
js
mov
ret
orb
aam
mov
adc
icebp
fdivl
xor
inc
push
lea
ret
xchg
fcompl
sub
adc
xchg
popf
sub
push
add
in
mov
fs
fistps
cmc
jg
pushf
pop
lock
fdiv
mov
push
jmp
mov
sbb
pop
movsl
xchg
inc
mov
cmp
dec
lahf
add
scas
outsb
rclb
sbb
inc
jp
popf
in
jmp
ds
mov
sbb
gs
jl
adc
arpl
push
xchg
push
sub
ja
dec
outsb
sbb
lahf
sbbl
inc
fsts
cmp
lea
mov
aam
imul
outsl
lahf
in
add
cmp
sub
add
icebp
ss
cmpsl
rcr
mov
cmp
pop
movsl
mov
loopne
aas
add
adc
and
sbb
adc
sub
movsb
imul
lahf
popf
xor
pop
mov
pop
mov
or
sub
lahf
dec
pop
mov
mov
sbb
outsl
and
inc
fidivrl
or
fs
pop
inc
hlt
das
mov
pop
or
pusha
aas
leave
insb
outsb
or
movswl
and
add
repz
mov
xchg
or
and
mov
ja
mov
getsec
lea
sbb
mov
shlb
push
xchg
fisttpll
inc
push
xorl
push
inc
lret
nop
arpl
je
sbb
push
shl
aaa
pusha
sub
fisttpl
mov
and
pop
push
adc
jge
fs
push
int3
minps
pushf
ss
and
or
push
sahf
fs
pop
inc
addr16
xlat
pop
out
and
inc
dec
push
adc
sbb
mov
push
les
ja
xchg
orl
aas
outsl
nop
and
and
dec
xor
and
arpl
jo
js
xchg
dec
jl
and
outsb
fistpl
shrl
jns
imul
and
cmpsl
punpcklbw
je
pop
cwtl
xchg
push
sbb
ds
jae
mov
std
jmp
jg
sub
push
sbb
push
pop
arpl
pop
clc
dec
icebp
jmp
jmp
lret
imul
xchg
fsub
sbb
inc
loope
dec
xchg
imul
mov
js
insb
test
aaa
cs
push
adc
lret
push
sbb
test
imul
jo
dec
sbb
test
sahf
lea
in
push
xor
mov
inc
ljmp
cmc
push
js
aaa
and
les
or
push
sbb
xchg
mov
scas
fnstenv
mov
jno
aam
lods
lea
mov
shlb
pusha
add
loope
ficoms
stos
cmpsb
mov
mov
ljmp
push
fstpl
js
jecxz
sahf
repz
adc
cmp
mov
add
mov
outsb
xchg
xchg
inc
ss
fcoml
pop
jb
adc
push
sub
mov
loopne
and
imul
sub
sub
ds
fstl
sbb
add
cmp
ds
mov
pop
mov
sbb
outsl
ret
hlt
mov
sbb
dec
xchg
arpl
ss
mov
loope
pop
mov
push
clc
mov
fsubrl
inc
bound
dec
or
adc
leave
pusha
arpl
mov
xor
loopne
out
cld
loop
cltd
adc
pop
mov
test
mov
in
xor
outsb
mov
mov
ss
mov
cs
mov
dec
jno
fs
rorb
arpl
aaa
add
xor
mov
fwait
aaa
jne
cltd
pop
dec
sti
mov
in
dec
mov
outsb
jmp
push
mov
iret
gs
inc
jbe
outsl
sbb
inc
mov
push
dec
in
ffree
cmp
xchg
sbb
dec
shll
out
mov
lods
cmp
jnp
addr16
je
and
sub
inc
cmp
dec
and
sahf
inc
pushf
cltd
dec
aas
mov
or
or
dec
adc
mov
mov
pop
enter
fcoms
mov
dec
pop
ret
scas
pushf
hlt
add
sbb
mov
cmp
pop
movsb
out
push
bnd
imul
xlat
push
pop
arpl
imul
inc
cmp
in
dec
xchg
pop
mov
pushf
inc
iret
jecxz
xor
xchg
cltd
int
adc
xor
ss
push
popa
sbb
sbb
dec
in
pop
push
mov
insb
ds
mov
pop
xchg
push
cwtl
repz
mov
pusha
popf
cwtl
cmp
and
insb
mov
push
out
dec
mov
inc
dec
mov
out
jl
mov
or
push
lcall
xlat
mov
xchg
pusha
inc
call
aad
mov
mov
rcrl
jae
push
pop
jbe
cmp
sahf
mov
js
aaa
cmpsl
clc
int3
mov
lea
mov
enter
jno
lea
sarb
mov
mov
mov
pop
jnp
mov
jo
mov
outsb
out
sub
xor
lretw
cs
sbb
jmp
mov
pop
mov
inc
cmp
loope
in
std
jbe
cmp
or
inc
fadds
test
cltd
cmp
out
xchg
call
jl
pop
sub
repnz
fmul
daa
scas
test
pop
push
jb
or
pop
sub
lds
imul
xlat
fists
sbb
in
dec
aas
inc
jecxz
call
mov
stos
arpl
sub
nop
sbb
push
add
sbb
cmp
cld
in
rolb
aaa
mov
mov
stc
sbb
add
scas
sarb
popa
push
push
pop
out
add
pop
jne
pop
in
xor
loopne
aam
loope
idiv
outsl
mov
jo
out
andb
icebp
adc
in
mov
pop
cmp
cld
xchg
dec
push
pop
push
leave
dec
jnp
push
das
scas
js
push
lock
lds
lret
jo
add
in
in
jg
enter
inc
out
mov
adc
fsubrs
fistpl
sub
xchg
inc
les
pushf
sub
jl
aas
xchg
imul
repnz
scas
sub
inc
inc
inc
ret
xchg
push
jle
mov
pop
xchg
mov
push
inc
test
cld
aad
mov
pop
sub
push
sub
shrl
addr16
movmskps
ret
loope
xchg
mov
push
es
jg
outsb
push
mov
adc
add
aas
push
dec
pop
out
push
push
stos
lods
pop
mov
jl
in
cmp
lea
jg
cmp
lea
add
push
xchg
jg
adc
adc
push
cli
repz
sub
aam
mov
lods
mov
mov
arpl
xor
sarl
lods
xor
adc
movsl
lea
mov
insb
and
mov
sbb
inc
aaa
ror
pop
paddusw
pop
jg
hlt
cli
in
lds
xor
cmpb
mov
inc
inc
hlt
sbb
aaa
sub
int
or
mov
iret
xor
pop
adc
mov
in
and
pop
lahf
int3
nop
out
movsl
imul
pop
bound
push
int3
shl
into
test
pop
mov
add
push
sub
loope
sbb
incb
or
pop
dec
or
pop
out
mov
mov
xchg
popf
dec
stc
push
daa
sbb
jno
dec
pop
xor
mov
add
mov
out
ret
rcll
jae
jle
jb
push
je
push
inc
outsl
and
leave
xor
rcrb
fcmovne
mov
lods
push
in
push
xchg
dec
add
rolb
sti
cwtl
add
mov
test
loop
xor
fisttps
add
fldl
and
or
cmp
aam
pop
scas
fidivs
or
dec
pop
cmpsl
xor
movsl
int3
mov
std
add
aam
xor
pop
mov
xchg
and
cli
push
push
add
daa
jns
test
push
ljmp
xchg
mov
mov
stos
in
aaa
je
js
or
mov
jo
cmp
inc
je
mov
sub
dec
push
adc
in
xor
pop
mov
jnp
mov
xor
pop
mov
and
jno
iret
mov
cwtl
out
shlb
mov
push
enter
mov
xchg
xor
ret
imull
cmp
ljmp
add
aam
sub
fwait
cltd
add
pop
inc
sub
xchg
inc
dec
loopne
push
and
out
decl
adc
jbe
pop
mov
xor
and
outsl
dec
mov
call
xor
aas
insl
mov
lea
adc
xlat
inc
mov
inc
cmp
xchg
and
test
pop
lods
data16
jg
mov
leave
push
test
sub
in
pop
jnp
outsb
pushf
rcrl
test
push
ljmp
daa
mov
scas
pop
push
arpl
movsb
sbb
and
lret
adc
pop
dec
loope
roll
dec
jp
loop
leave
jle
mov
sbb
pop
push
xlat
aaa
mov
push
push
in
test
add
lcall
mov
push
jle
or
lret
ficoms
sub
pop
mov
in
cltd
arpl
push
sbb
fistpll
push
adc
je
inc
inc
stos
js
cmp
outsb
mov
xchg
std
dec
and
das
rcrb
inc
repz
test
fwait
pop
test
js
add
adc
sbb
sbb
push
js
pusha
sub
xor
sub
push
or
sbb
mov
aam
xchg
mov
sub
mov
int
push
and
adc
jp
enter
int
push
movsl
jno
in
mov
xchg
inc
bound
cmpsl
sbbb
and
jl
xchg
push
popw
push
ljmp
xlat
xchg
testb
mov
push
push
js
bound
push
icebp
add
loopne
mov
xchg
or
fdivrs
scas
jne
call
aas
pop
push
aad
into
pop
test
in
inc
int
fwait
lcall
js
pop
push
xchg
xor
push
or
pop
cmp
aam
mov
pop
test
sbb
std
cmp
clc
add
pop
pop
xchg
xchg
jns
mov
fcompl
jge
aad
jb
jl
mov
cmp
inc
mov
mov
orl
ss
jmp
pop
and
fwait
inc
repnz
push
test
enter
mov
mov
movsb
inc
inc
fs
fistpl
jge
ss
inc
pop
mov
icebp
mov
decl
cmp
jo
in
popa
cmpsb
or
jecxz
dec
in
xchg
jnp
negb
sar
sbb
out
and
cld
fs
pop
add
cmp
cli
js
inc
pop
out
mov
jle
sub
xchg
xchg
jno
pop
repnz
push
jae
cmc
sub
inc
ret
dec
pop
sub
in
lea
test
loopne
sbb
and
icebp
and
mov
push
push
std
lret
cmpsb
icebp
ja
inc
xor
outsl
inc
mov
push
xor
sbb
hlt
xchg
fisttpll
enter
jle
xlat
xor
pop
sbb
inc
sti
xchg
enter
mov
push
inc
out
and
aaa
imul
mov
stos
jmp
call
imull
cmp
jne
xor
push
daa
lcall
inc
popf
push
mov
pop
lret
sub
sub
bound
jge
mov
in
adc
idivb
jp
dec
push
dec
inc
xchg
jle
and
fildll
push
cmpsb
fdivr
xchg
sbb
inc
cmp
imul
scas
popf
add
shl
inc
cltd
xchg
out
std
addr16
sub
dec
bound
dec
sarb
mov
aaa
cld
lods
sbb
addr16
pop
mov
aas
cmp
push
inc
std
mov
xchg
or
clc
jne
les
jmp
loope
mov
negl
xlat
jmp
rclb
dec
cmp
lahf
loopne
in
cmp
loop
outsb
jl
push
mov
out
or
jae
xchg
call
inc
fwait
jl
loope
pop
add
cmpsb
xchg
fnstcw
jle
aaa
mov
jnp
movsl
add
add
adc
loope
sub
mov
scas
sbb
sbb
rcl
in
fistpl
xchg
mov
jae
pop
aad
pop
insb
mov
arpl
xchg
and
lea
jl
dec
pop
loopne
lods
mov
inc
repnz
cmpsl
out
cmp
mov
mull
sti
cmp
inc
sub
aaa
movsl
or
mov
cmp
cmp
and
push
xchg
xor
loope
in
xchg
inc
test
pop
inc
mov
sbb
test
lea
js
outsb
add
adc
insl
lahf
sub
ss
repz
outsb
inc
sbb
stc
fstpl
dec
mov
int
das
pop
sbb
jmp
je
dec
imul
or
lret
inc
test
pop
xchg
push
xchg
add
mov
cwtl
dec
jle
dec
fsubl
ret
mov
pop
stc
in
test
cltd
xchg
out
push
sbb
ficoms
sbb
les
push
pop
dec
fisttpl
xchg
pop
rorl
inc
lock
mov
stc
and
sbb
ja
cli
mov
sahf
add
xchg
jl
inc
icebp
push
sbb
sbb
mov
icebp
mov
pop
push
jg
and
mov
xchg
jno
inc
mov
loopne
inc
mov
iret
fwait
xchg
add
js
outsb
xor
xchg
rol
lock
ret
dec
adc
neg
cmp
insb
loopne
arpl
lea
stos
outsl
xchg
xor
adc
jnp
fisubl
push
add
leave
jp
neg
add
xchg
push
das
fistl
repz
andb
nop
cmp
adc
mov
out
adcb
and
lock
jmp
std
outsb
mov
jb
xchg
inc
lcall
hlt
pop
hlt
xchg
dec
inc
cmp
adc
repz
in
mov
loopne
pop
pop
sbb
pop
loop
jnp
fistpl
push
mov
and
mov
das
insl
sbb
idivb
jmp
inc
cmp
mov
testb
mov
test
faddl
mov
xchg
sbb
lret
inc
sbb
adc
js
dec
cmp
fs
sahf
xchg
push
mov
dec
arpl
in
js
es
cmc
hlt
popf
cmp
lcall
inc
aaa
inc
pushf
mov
sub
xchg
mov
cwtl
mov
push
mov
and
sbb
negl
mov
xor
jne
dec
dec
sbb
xchg
xor
loopne
push
sub
pop
adc
and
mov
and
mov
push
mov
pop
mov
int
sub
jge
hlt
loopne
push
ds
xor
sti
mov
icebp
lea
fldcw
fdivrs
in
pusha
jle
pop
decb
call
fistps
inc
aaa
or
mov
jnp
repz
ss
jae
mov
xor
cli
xchg
adc
loopne
lods
sbb
adc
add
aaa
fldt
jg
xor
int3
iret
aaa
jecxz
cmpb
cmp
jnp
push
aaa
stos
das
pusha
mov
xchg
push
imul
repnz
fdivl
adc
lock
sub
popf
sub
test
add
push
cli
push
and
dec
dec
dec
ss
pop
int3
sub
movl
fildll
roll
push
movsb
push
jg
cmp
fabs
mov
into
stc
pop
mov
inc
repz
dec
sbb
int
fldt
ja
mov
xchg
aaa
cmp
xchg
loopne
adc
mov
jg
dec
cwtl
jnp,pn
mov
lcall
jmp
or
out
das
fsubrl
adc
cmp
testb
push
mov
mov
sbb
jl
popa
into
outsl
xchg
cmp
icebp
sti
inc
imul
push
xor
insl
cmp
jnp
add
fisttpl
sub
enter
push
mov
xor
iret
sbb
push
push
push
call
incb
mov
dec
nop
push
cmpsl
aas
arpl
inc
xor
dec
xor
pushf
jl
push
in
xchg
int3
inc
cmp
mov
mov
push
fmull
inc
inc
rcrl
sub
in
ss
adc
mov
mov
icebp
das
and
adc
imul
js
cwtl
pop
pop
shrb
ja
inc
xor
fcompl
leave
dec
out
dec
mov
stos
sbb
popa
cmp
popf
cmp
mov
lahf
sbb
pop
in
mov
outsb
das
scas
and
pop
push
inc
pop
cmpsl
sub
and
jp
push
dec
and
push
dec
shlb
adc
sbb
cld
push
call
pop
aam
lret
ljmp
loopne
pop
test
ret
mov
cmp
sub
lds
fistpl
hlt
testb
sbb
std
or
insb
mov
xor
fwait
xchg
adc
jno
inc
dec
push
pushf
inc
enter
jge
mov
inc
enter
cmc
stos
mov
popf
ljmp
pop
fists
pop
repnz
in
push
sub
jne
gs
mov
fnsave
cmp
push
push
es
inc
js
aad
push
jae
jno
jp
push
xlat
inc
inc
js
cltd
mov
xor
in
addb
movsl
xchg
or
xor
xchg
mov
test
fs
mov
aam
dec
mov
adc
sub
jno
sub
inc
addr16
outsb
push
xchg
hlt
pop
test
lahf
fcoms
stos
fistpl
mov
mov
inc
adc
lret
decb
in
out
mov
scas
loope
lds
or
idivl
dec
pop
into
push
xor
xor
and
jmp
lods
push
bnd
icebp
cmp
inc
sub
mov
fwait
mov
xchg
jge
pusha
or
pop
adc
por
notl
rorb
push
xchg
cmp
jbe
jb
call
jp
jbe
mov
dec
pop
lcall
cmp
cmp
lret
push
xchg
pop
dec
push
inc
mov
sub
pop
dec
lds
xchg
imul
icebp
mov
das
adc
jo
jp
jmp
jb
pop
imul
xor
orl
and
test
and
adc
rolb
xchg
jno
pop
cmp
or
movsl
scas
jno
pop
pusha
dec
xor
push
ja
or
es
arpl
jmp
das
ss
orl
cld
push
es
add
xor
xor
int3
nop
cmp
adc
push
movsl
inc
fsubrs
loopne
cwtl
ljmp
movsl
push
enter
in
repz
cmp
pop
cld
test
fwait
lea
aad
xor
stc
xlat
loope
sahf
add
pop
pop
mov
mov
frstor
xlat
pop
jecxz
sahf
sbb
dec
add
inc
mov
sbb
xchg
jecxz
or
xor
xchg
aam
jmp
and
lods
mov
mov
xchg
scas
pop
jnp
shlb
aaa
cwtl
add
cmc
jle
pop
inc
push
push
mov
call
mov
fwait
sub
push
or
outsb
cs
mov
jp
and
and
into
loope
pop
int
loop
cmp
jb
cs
scas
cmp
mov
and
out
dec
jbe
pop
mov
mov
lods
push
and
js
cmp
stos
rcrb
xchg
push
scas
paddsw
mov
mov
int3
jl
jns
jmp
jb
test
mov
xchg
pusha
cwtl
outsl
cmc
sbb
frstor
iret
fistl
sub
pushf
jl
dec
xchg
mov
mov
repnz
ret
fistl
adc
stos
aaa
enter
jecxz
xchg
pop
xchg
sahf
setl
ds
pop
mov
xor
ljmp
jbe
pop
into
stos
lret
push
xlat
imul
fbld
adc
cmp
ljmp
mov
lods
pop
out
pop
fadds
sti
xchg
mov
loopne
push
jmp
imul
push
imul
and
pop
call
xchg
cmp
mov
cmp
push
adc
xchg
sub
pop
mov
adc
add
insl
pushf
fsts
xor
xchg
in
add
cmp
movsl
push
pop
repnz
je
dec
cmp
xorl
mov
push
aaa
xor
sbbl
pushf
adc
lret
pop
pop
nop
mov
dec
push
or
test
adcb
push
mov
data16
bound
in
cltd
mov
jmp
xor
pop
jbe
sbb
dec
ja
gs
jns
in
out
push
bound
movsl
outsb
lret
aaa
dec
push
sbbb
lahf
xchg
iret
cmp
dec
inc
sub
and
or
mov
cmp
adc
inc
ret
ljmp
add
jg
in
xor
mov
fbstp
fldcw
scas
out
xchg
sub
push
cmp
pop
std
xor
test
mov
arpl
pop
outsl
fwait
in
js
jbe
fnstcw
adc
out
push
sub
mov
sbb
cmp
les
js
mov
xchg
aaa
fidivl
inc
es
jae
xchg
call
xchg
test
aaa
lret
mov
and
nop
imul
cmp
inc
aaa
adc
pop
sbb
pop
test
popa
sarb
jp
cmpsl
arpl
ret
pop
cwtl
das
jge
call
fistl
arpl
jmp
aas
aam
popl
sbb
jo
sub
stos
subb
in
push
mov
mov
pop
dec
insb
jle
push
inc
xlat
mov
adc
pop
mov
mov
xor
inc
pop
scas
fstl
imul
bound
dec
leave
loop
std
cmp
fstl
pop
cwtl
ret
mov
mov
fnsave
mov
cmpsl
cli
push
pop
bound
cmp
or
aam
outsb
ds
push
dec
enter
pop
ja
jbe
push
xor
fldl2t
movsl
mov
jp
mov
cmp
push
or
jbe
mov
movsb
jne
lret
jmp
out
cltd
push
inc
lahf
ds
jl
jg
mov
repz
pop
dec
lret
dec
mov
rcl
arpl
adc
fdivr
pop
pop
popf
xadd
cltd
jae
jle
test
stos
pop
dec
inc
ds
not
mov
sbb
mov
add
in
aaa
mov
cmp
jle
pop
int3
or
push
jge
push
rorb
xor
ss
rolb
mov
leave
fbld
sbb
aaa
sub
bound
or
mulb
xchg
adc
pushf
and
bound
jmp
sub
inc
lea
pop
jg
pop
xchg
fld1
mov
imul
shr
jp
inc
push
fdivs
cltd
pop
adc
aaa
insl
in
push
sbb
push
or
ss
dec
fidivs
adc
sub
nop
out
lods
mov
imul
sub
or
inc
inc
mov
sub
cltd
negb
aas
cmc
mov
popf
data16
in
xor
xchg
jl
xor
pusha
rclb
and
jo
push
add
fisubrs
push
sub
sbb
arpl
nop
test
das
in
cmc
daa
loope
push
jp
inc
add
arpl
rcrb
xor
cmp
lods
sahf
test
movb
jle
out
movsl
adc
push
mov
push
mov
sbb
rcrb
fisttps
push
jbe
outsb
pop
sbb
aaa
aas
scas
lahf
mov
add
jmp
test
lea
jno
in
cmp
cmp
sub
jne
in
mov
jg
rclb
jg
xor
fs
add
mov
mov
pop
arpl
and
jl
push
insb
shll
in
xor
cmp
cs
jbe
add
lret
sub
outsl
inc
xchg
test
repnz
movb
data16
jp
sub
iret
outsb
std
mov
testl
stos
rcll
negl
xchg
insb
cmpsb
xchg
movsl
adc
xor
jl
mov
mov
sub
roll
idivl
lods
dec
dec
sub
ljmp
in
xchg
xchg
cmpsl
push
xor
nop
inc
je
xchg
sbb
fisttps
ss
cmp
and
add
sarb
int
mov
out
testl
push
pop
dec
dec
cltd
mov
dec
std
jl
jae
rcrb
test
fldcw
adc
and
jb
push
fists
push
cmpsl
in
loopne
inc
xor
xchg
push
fcompl
or
or
jns
xchg
push
sbb
daa
adc
add
push
sbb
jmp
push
cmp
movsl
outsb
jmp
pop
adc
push
mov
xorb
outsb
xchg
shlb
mov
or
outsl
cmp
xchg
out
lds
sub
andl
adc
popf
jecxz
jbe
lahf
jnp
lods
fnstsw
ds
gs
mov
sub
and
mov
and
xchg
adc
ds
lret
jae
or
por
clc
sbb
xor
mov
xrelease
ss
popa
xor
aaa
jecxz
js
jo
std
movsl
dec
notb
mov
ficoml
nop
push
push
cmp
push
jecxz
rcl
push
repz
shll
cmp
shr
jecxz
shlb
fsubs
mov
push
scas
aam
jge
popf
inc
imul
pop
icebp
and
xor
mov
sbbl
cmp
add
xchg
test
incb
mov
xor
cwtl
pop
mov
imul
ret
cmc
inc
jne
fldl
fcoml
in
jo
pop
test
mov
cmpsb
dec
loope,pn
lahf
push
imul
frndint
xlat
inc
inc
pop
iret
jmp
xor
pop
push
fdivrs
aam
mov
or
enter
scas
dec
sbbl
loope
mov
mov
push
xchg
mov
pop
pop
das
imul
xchg
pop
call
mov
lods
jecxz
inc
loopne
shrl
int3
lret
pop
push
out
enter
jmp
push
jmp
push
cs
and
ss
lea
lcall
stc
cwtl
cmp
ds
mov
std
sbb
notl
scas
fisubl
dec
leave
shlb
bound
sub
xchg
loop
push
and
aam
cmp
js
pop
cmp
iret
or
sbb
sub
push
loope
rorb
xchg
lods
xchg
das
mov
fdivl
popa
sbb
xor
movb
repz
loopne
jg
xor
outsb
aam
lret
sub
jge
test
je
pop
imul
xchg
call
pop
push
pop
lahf
aaa
gs
add
lock
jp
dec
mov
fidivl
adc
cmc
dec
mov
std
pop
sbb
adc
mov
in
enter
das
cmpsb
xchg
stc
sbb
and
into
mov
push
push
es
mov
cmp
je
fnsave
std
loope
jae
xchg
push
outsb
stos
sbb
jecxz
outsl
jmp
xor
inc
es
lods
cmp
cmp
popf
adc
jo
mov
cmp
es
and
fildll
and
add
hlt
pop
fnsetpm(287
mov
inc
idiv
pop
aam
repnz
and
and
loope
cmp
aam
push
lock
popa
and
fisubrs
xor
jmp
jns
inc
sarl
add
aas
dec
cmp
mov
das
je
mov
dec
pop
and
pop
imul
sub
sub
pushf
inc
aaa
jo
jmp
fstl
push
lea
sbb
shr
xor
adc
mov
sub
push
mov
push
push
adc
sbb
mov
data16
stos
lods
xchg
mov
inc
pop
in
push
add
add
fbstp
xor
adc
sarl
aas
sbb
sbbb
cmp
xor
pop
lods
shlb
imul
test
push
adc
mov
jmp
mov
cmpsl
popf
mov
mov
fildll
mov
cmp
call
jg
sbb
pusha
sahf
lea
aam
dec
mov
pop
inc
sarb
sub
sbb
xchg
mov
or
aad
cmp
mov
cltd
add
or
inc
cld
xor
sbb
test
lahf
aaa
pop
mov
std
js
mov
dec
jne
pop
or
aam
shll
push
dec
mov
ds
jb
in
repnz
roll
jmp
cmp
stc
arpl
out
xchg
in
fistpll
loop
inc
out
fs
sahf
ja
sub
and
stos
cld
aaa
jo
sti
inc
mov
sub
dec
fnstsw
xlat
int
ds
xchg
sbb
inc
test
imul
mov
mov
sub
in
sbb
mov
ror
aas
test
jmp
lea
aad
and
jne
push
inc
test
mov
incl
push
jg
imul
lods
in
jo
dec
ds
jecxz
or
movsl
xor
outsb
pop
cmp
clc
jo
mov
sbb
cmp
flds
dec
adc
adc
xor
std
aad
cs
and
inc
ret
add
and
in
into
loope
cmp
pop
fidivs
jp
testb
mov
fsubrp
mov
lods
inc
xchg
les
into
xchg
mov
ds
add
mov
mov
fst
lret
cmc
lea
sbb
and
pop
push
cs
sbb
jbe
cli
cmp
mov
mov
and
adc
mov
pop
aam
es
push
push
jl
enter
or
lea
push
push
in
mov
rorb
ss
fnstsw
and
push
lock
sub
dec
cs
lods
inc
xchg
inc
lret
dec
cs
xchg
test
iret
test
and
in
pop
dec
xchg
enter
push
mov
test
xor
outsl
jecxz
in
daa
test
and
bound
mov
ja
outsb
cmpsb
jmp
movsl
fcmovnb
hlt
dec
add
mov
add
outsl
iret
test
jmp
jae
in
pop
dec
sarb
loope
test
cmpsb
inc
dec
pop
mov
mov
xor
andb
pop
lea
xchg
adc
xchg
mov
push
push
push
adc
sbb
call
xchg
popa
rorb
fs
cmp
lock
mov
fcoms
and
jp
cmp
or
stos
adc
jae
fnsave
cwtl
cmp
mov
adc
jge
ss
dec
jb
sti
inc
cmpb
pop
imul
mov
jnp
negl
sbb
ljmp
daa
push
inc
xchg
push
stos
add
add
cmpsl
push
mov
push
scas
arpl
or
in
jae
fiadds
xor
js
sbbl
cmp
das
jo
xchg
inc
jb
pop
stos
jae
out
sub
mov
and
push
pop
mov
xor
notb
dec
pop
outsb
neg
push
sarb
repz
sbb
xchg
fucomp
xor
mov
insl
inc
stc
mov
pushf
cmp
das
sub
test
popa
push
add
sub
test
push
mov
add
andb
loopne
test
sbb
cli
outsb
dec
aad
fwait
ds
add
dec
add
mov
fildl
xchg
icebp
cmpb
adc
cwtl
popf
in
shl
das
movsl
xlat
jne
inc
rorl
fnsave
mov
aaa
loopne
mov
jbe
roll
fistps
xchg
or
xchg
sbb
clc
sub
test
lods
adc
aaa
test
jo
jno
arpl
xchg
push
add
add
inc
xchg
adc
lahf
sbb
pop
xchg
loope
mov
and
adcb
sarb
or
add
xchg
ljmp
fsubs
add
movsl
aam
mov
and
popf
stos
subb
sbb
lea
rcrl
xchg
loop
cmp
dec
not
lea
push
test
dec
xorl
cwtl
pop
lods
insb
pop
push
rolb
mov
jbe
outsb
mov
insl
dec
jle
out
add
jo
movsl
je
cltd
jle
push
inc
mov
outsl
in
cmp
or
cmpsl
subl
in
sub
mov
pop
and
mov
xchg
sbb
out
mov
neg
lea
inc
pop
lahf
inc
mov
inc
arpl
gs
ret
xor
sub
in
jp
addr16
or
std
cmp
mov
pop
sbb
add
mov
daa
inc
mov
sahf
mov
imul
inc
push
sub
imul
fnstenv
mov
into
sub
das
and
push
jbe
lea
mov
lcall
dec
jecxz
sbb
lcall
icebp
jg
in
and
mov
es
jne
add
std
filds
repz
movsl
xor
ds
pusha
dec
cmp
dec
clc
xor
std
mov
jbe
fs
movsb
fistpl
and
jecxz
and
mov
shll
xchg
mov
in
fstpl
clc
sbb
jbe
lea
ja
or
sbb
ja
cmpsl
inc
jecxz
fdivrs
jnp
stos
cmc
sbb
lahf
jb
mov
xchg
lcall
outsb
cmp
fcoms
push
inc
dec
lret
imul
dec
fcomps
mov
and
push
mov
in
cmp
mov
add
dec
inc
addr16
adc
icebp
jmp
jns
sub
jmp
pop
loope
sbb
int3
jb
aad
stos
std
xor
shll
iret
mov
adc
add
sub
mov
xor
shr
or
or
ss
push
mov
sub
out
mov
mov
cmpb
xchg
cmc
jle
xchg
out
push
mov
push
pop
ja
je
cwtl
aaa
mov
mov
mov
scas
or
add
sub
ret
or
xchg
pop
xor
mov
lret
xchg
jle
mov
push
int
or
psrld
mov
rcrl
push
inc
in
loope
loop
stc
mov
dec
aas
xchg
jns
jmp
loopne
cmpsb
xchg
jnp
cld
cmp
popa
mov
ss
ss
inc
dec
dec
pusha
cmpsb
and
loope
pop
movsb
into
push
in
push
mulb
pop
in
cmp
mov
inc
popa
aaa
fcmovnb
cltd
jl
jb
popw
clc
mov
sbb
mov
mov
nop
pop
push
sbb
insl
mov
jo
push
pop
shrl
jge
or
aaa
int3
mov
inc
pushf
xor
and
jge
push
iret
jmp
xchg
repnz
pusha
aam
mov
dec
movsl
out
push
fs
and
ficoms
out
mov
xlat
daa
push
out
cmc
add
fldt
fbld
push
outsb
test
jp
fwait
into
jl,pn
es
push
movsb
jge
into
aas
push
jb
arpl
sti
or
in
cmc
sti
adc
mov
aas
mov
or
dec
ljmp
ljmp
aam
add
xor
jae
adc
cltd
je
dec
pop
inc
push
pop
imul
dec
dec
pusha
ficomps
cmpsb
mov
cltd
insl
in
cwtl
or
aaa
inc
xchg
jbe
push
fmull
jo
pop
sbb
fbld
jne
sub
push
add
insl
cwtl
test
vmovdqu
jl
dec
fwait
aas
nop
mull
adc
ds
ret
in
lea
push
dec
push
inc
in
test
push
xlat
inc
inc
out
test
fisubl
mov
popf
into
xor
add
add
xor
xor
repnz
mov
jo
mov
adc
pop
push
inc
xchg
pop
loopne
push
inc
mov
cmp
repnz
ret
insl
mov
in
insl
andb
sub
scas
in
xchg
cmp
xchg
jecxz
iret
adc
hlt
test
adc
into
add
or
add
pop
and
imul
cwtl
xor
mov
cli
inc
mov
xor
movzwl
shrl
xor
je
andb
pop
lock
mov
jle
xor
imul
aaa
lea
cmpsl
mov
mov
add
dec
in
or
inc
jbe
push
sahf
mov
daa
pop
cs
or
jbe
gs
xchg
ds
add
ss
xchg
mov
push
aaa
xchg
push
rcrb
sarb
sbb
sti
dec
sbb
adc
rcrb
push
sub
pushf
jecxz
lar
rclb
fstps
fs
punpckhwd
jnp
adc
popf
in
outsb
cwtl
aam
jnp
ret
cmc
sub
mov
sub
je
rcrb
es
jb,pt
mov
mov
sub
mov
gs
xchg
ja
sbb
scas
adc
movntps
mov
call
in
mov
pusha
pop
repz
mov
jp
test
stos
stos
push
jae
je
sahf
pusha
fimull
out
mov
andl
push
clc
fadds
xor
jle
and
xor
sbb
in
jne
sbb
jecxz
push
stc
adc
popa
test
inc
je
cmc
popa
enter
fldl
test
mov
repnz
repz
mov
mov
cmpsl
in
rclb
inc
and
fcompl
jmp
inc
ja
pop
sub
mov
or
clc
mov
push
loope
fnstcw
fwait
xchg
pop
sbb
nop
cs
mov
cmpsb
loope
repz
bound
shrl
cmpsl
loopne
subb
sbb
cld
cmp
adc
pop
mov
push
punpcklbw
xchg
push
daa
pop
cmp
sub
jne
adcb
cltd
lret
popf
cmp
push
and
cwtl
pusha
pop
push
push
pop
pop
call
bnd
sbb
jp
lret
jecxz
mov
cwtl
test
pusha
bound
jg
push
sti
loope
push
fldl
dec
insl
add
jbe
sbb
push
popa
mov
add
and
dec
out
arpl
test
adc
inc
loope
push
mov
mov
xor
pusha
cs
pop
mov
lods
ja
cmp
or
inc
loope
pop
fdivrs
lret
sbb
mov
xchg
stc
xchg
push
les
adc
cld
data16
in
fbld
ss
mov
pop
jns
cmp
aaa
push
test
mov
xor
pusha
lcall
xlat
add
ficompl
adc
mov
mov
push
cmp
test
ret
mov
mov
ljmp
out
sbb
jmp
hlt
sub
pop
cmp
jnp
mov
jbe
aaa
js
inc
cmp
repz
cmp
les
pop
sbb
js
shll
add
jmp
jle
sbb
mov
mov
xorb
xchg
inc
pop
cmp
dec
icebp
out
lods
xor
das
fs
and
lahf
ss
fwait
cmpb
data16
fs
pushf
sub
jae
stc
cmpsb
test
pop
imul
xor
call
aas
test
les
push
shl
mov
jbe
mov
data16
adc
add
pop
cld
aas
dec
cs
mov
xor
or
xchg
pop
mov
pop
add
mov
imul
in
ficoms
jg
negl
adc
push
icebp
jg
mov
icebp
scas
int
lahf
cmp
sar
or
xchg
jne
lahf
mov
in
jge
cmp
rcrb
jb
jecxz
pusha
aam
lcall
push
sub
imul
scas
fimuls
ds
int3
and
or
roll
stos
dec
jb
mov
push
sbb
fwait
mov
int
in
lock
adc
nop
jae
pop
pop
mov
dec
orl
and
pushw
push
inc
aad
pusha
push
lods
xor
fwait
in
inc
aas
jo
rcrl
mov
mov
jbe
addr16
mov
sbb
push
add
mov
loopne
pop
out
cmc
cwtl
ret
push
pop
mov
fstps
inc
scas
pop
std
lcall
sbb
aaa
lods
aas
dec
lcall
decl
pop
jecxz
cmp
xchg
jmp
pop
sbb
mov
icebp
cli
sar
xchg
jae
outsl
sbb
xchg
mov
xchg
push
push
fmull
add
test
push
stos
rcrl
push
lock
idivb
and
xchg
jecxz
and
movsb
leave
and
push
sbb
leave
push
pop
sbb
icebp
adc
and
roll
int3
mov
test
enter
aam
jg
adc
sbb
add
sub
push
dec
cli
lods
mov
ljmp
ss
pop
aaa
cmp
cmp
mov
imul
cwtl
mov
imul
ret
ret
mov
pop
dec
mov
jne
jb
cmpsb
in
je
adc
inc
jp
cmp
add
leave
fistpll
pop
push
xchg
mov
cmp
into
cmp
jecxz
cmpsb
adc
movsl
ja
fwait
mov
leave
adcb
jnp
mov
loope
test
push
out
adc
push
cmpsb
test
xchg
arpl
or
jo
outsb
hlt
scas
stos
cli
inc
push
aaa
lcall
test
push
stos
and
pop
cmp
cltd
push
icebp
lahf
push
imul
addr16
in
es
mov
and
test
mov
jle
lods
xor
inc
pop
pop
sahf
sub
js
jno
inc
andb
call
sbb
into
fisttpl
xlat
push
or
jb
xchg
call
cmp
bound
push
push
ret
cmp
push
arpl
or
jns
and
cmp
xchg
mov
and
pusha
icebp
add
aaa
dec
and
loope
loope
rcrl
lahf
lea
push
cmp
push
cmp
lea
mov
jb
xor
sbb
jle
inc
cmp
pop
call
dec
ret
lahf
in
loopne
jb
and
push
mov
mov
cmp
das
cmp
repz
arpl
cwtl
fldlg2
xor
lcall
sbbb
cmp
fcomps
pop
mov
jl
cmp
add
xor
lods
call
lret
lea
pop
inc
add
mov
fidivrl
frstor
in
pop
pop
jo
cmp
adc
dec
xor
cmp
cmpsb
jge
inc
lock
sbb
loope
stc
std
cmp
ret
mov
incb
xchg
cmpsb
jg
loopne
stos
cli
test
cmc
mov
pop
sbb
cmp
pop
int
mov
loopne
inc
push
cmc
addr16
adc
aaa
inc
andb
pop
sti
roll
mov
dec
leave
jne
test
inc
cmp
sti
sbb
pop
sbbb
sbb
add
mov
dec
orl
sbb
pop
inc
xchg
and
aas
cmpb
add
daa
push
mov
jbe
aam
movsl
mov
bound
push
std
inc
pop
jle
aaa
call
loope
ret
lock
xchg
jns
and
stc
lret
test
jp
fwait
sbb
daa
sub
mov
aaa
xchg
dec
js
mov
aas
jle
insl
js
add
fmull
lock
sbb
shll
int3
lahf
je
or
sbb
les
bound
pop
sbb
cmp
xor
pop
jne
pop
leave
sbb
mov
pop
inc
shll
push
inc
out
in
and
pop
xor
jp
pop
cmpsl
out
mov
mov
iret
pop
dec
insb
out
cmp
loope
aaa
pop
xchg
push
and
scas
inc
cmp
jge
insb
outsl
or
cmp
pop
adc
rorb
pop
stos
jbe
loopne
lods
inc
ror
stos
mov
sbb
dec
lds
enter
lea
dec
stos
popa
call
cmp
lret
sbb
dec
loope
pop
inc
mov
inc
movsb
in
movsl
or
sysret
sahf
mov
test
notl
shr
stc
push
mov
clc
jle
iret
cmc
and
cwtl
push
dec
dec
sbb
cld
push
enter
cmp
add
mov
ss
mov
test
push
sbb
pop
in
pop
jle
jbe
shlb
lods
jb
sbb
fscale
pop
fidivrl
lret
adc
add
sbb
add
jb
push
loope
cmpsb
mov
ds
or
insb
or
push
jmp
pushf
push
sbb
mov
test
enter
mov
jno
pop
jnp
popf
push
mov
and
sahf
and
arpl
or
cmp
adc
scas
cltd
add
lret
jo
and
xchg
lods
jbe
cmp
je
sbb
cmp
test
call
inc
imul
arpl
pop
adcb
test
js
enter
sub
cmc
jl
dec
push
dec
push
jb
lock
outsb
pop
xchg
repnz
mov
add
aaa
xor
push
sti
pop
in
shrl
rcl
ss
loope
fwait
inc
sti
ja
push
jecxz
and
dec
loope
fmuls
das
jo
xor
xchg
mov
in
xchg
push
loopne
mov
sbb
dec
dec
inc
es
sub
push
popf
dec
pop
shll
add
aam
mov
pop
push
xchg
cmp
out
arpl
push
pop
dec
dec
pop
adc
xchg
icebp
call
sbbl
pop
or
idivb
mov
out
push
push
in
into
and
cmc
inc
decb
incb
nop
mov
sarl
pop
or
cmp
xchg
add
dec
lds
repz
xchg
inc
das
hlt
fldl
lcall
cmp
push
adc
add
sub
xchg
dec
cmp
mov
aad
dec
cmc
dec
push
inc
aaa
pop
jb
cmc
imul
pusha
mov
xchg
arpl
ds
mov
es
out
inc
iret
data16
gs
mov
aad
add
mov
xchg
jle
jecxz
imul
adc
inc
mov
mov
cmp
lods
testb
movsl
push
sbb
stc
sub
dec
sbb
xchg
enter
arpl
hlt
push
int
aaa
cmpsl
inc
lcall
sti
push
aam
pop
mov
std
ljmp
jne,pt
sub
xchg
outsb
adc
cwtl
daa
push
jo
cmpsl
js
shrl
test
popa
dec
xor
add
cld
mov
mov
jns
cmpb
pop
outsl
jge
movsl
int
push
add
mov
xor
mov
jae
cld
nop
pop
pusha
sbb
fistl
repz
xorb
test
loope
rcrl
lock
loop
rcll
pop
into
jmp
jns
outsb
dec
mov
push
pop
gs
inc
std
or
fisttpl
jecxz
sub
insl
lret
pusha
push
push
or
dec
pop
pop
outsb
adc
loope
xchg
imulb
jo
push
cmp
ss
insb
ret
and
lahf
test
hlt
jb
aaa
xchg
dec
arpl
pusha
or
fnsave
aas
xchg
lret
pop
cmpsb
lret
lock
in
jbe
rclb
sub
pop
aad
push
cmp
faddl
push
lea
push
mov
hlt
in
pushf
add
mov
and
insb
xchg
in
pop
fildl
pop
inc
add
mov
imul
movsl
jle
add
xor
es
aam
inc
fisttpll
lret
fstl
fiaddl
push
pop
mov
pop
stos
jo
lods
inc
mov
loope
mov
jge
and
dec
sbb
mov
out
mov
call
dec
mov
dec
test
jbe
and
testb
stos
mov
xor
pop
out
mov
scas
inc
shlb
fbstp
sahf
inc
add
mov
mov
jmp
lret
inc
jle
pop
sbb
lret
fidivl
fmul
xor
xchg
jg
sahf
or
xorb
pop
lret
dec
push
cltd
mov
inc
imul
movsb
es
and
sub
cmpsb
xchg
shlb
inc
dec
ret
das
mov
or
and
std
pop
mov
or
mov
mov
loope
in
and
aaa
pop
inc
mov
mov
in
psubd
ljmp
aaa
and
in
pop
xor
and
cmp
cmpsb
scas
lods
pop
lea
push
insl
std
andb
aaa
hlt
jb
inc
or
xor
loope
sahf
arpl
pop
das
mov
cld
xchg
daa
xchg
xor
imul
test
jle
cmpsl
lods
sub
ds
add
rcl
rol
popf
fisubs
pop
push
aas
adc
ljmp
std
pop
cmpsb
out
cmp
jmp
push
xor
pop
adc
mov
sbb
jmp
adc
out
icebp
add
sbb
lock
cmp
xchg
jp
stos
sub
jg,pt
enter
in
pusha
ss
sti
test
cmp
ja
mov
xchg
enter
in
aaa
out
bound
mov
cmp
xchg
or
scas
popa
xor
pop
xorl
sti
aad
dec
out
mov
mov
pop
or
call
cmpsb
js
push
or
nop
fcompl
lods
movsl
std
mov
sbb
mov
test
ss
mov
mov
pop
mov
jle
dec
mov
cmpsb
iret
pusha
mov
fstpt
fmuls
sub
pop
adcb
or
repz
jbe
outsl
pop
or
inc
or
adc
mov
xor
inc
inc
inc
sub
cmp
lret
lret
inc
jb
xchg
pop
xlat
loopne
xchg
lods
and
and
std
or
andps
jg
mov
fcmovu
fistps
loope
mov
orl
pop
pop
orb
xchg
sahf
xchg
cmp
aam
inc
adc
ret
dec
in
sbb
mov
ficompl
lcall
push
daa
mov
leave
aaa
lea
xorl
add
into
xchg
insl
inc
jmp
sbb
or
mov
pusha
div
int
sbb
scas
and
sbb
arpl
jle
sbb
in
jge
repnz
mov
sbb
cltd
jb
ret
pop
pop
xchg
inc
das
or
in
mov
shr
cltd
mov
aaa
mov
lds
aas
cld
cmpsb
mov
dec
hlt
test
lret
pop
adc
cmp
cmpl
mov
jmp
fimull
popf
dec
cmp
nop
aam
adc
adc
jecxz
sub
jl
repnz
ret
popa
js
rcr
loopne
test
arpl
stc
fisubrs
enter
mov
fistpl
mov
jg
sub
mov
and
dec
xchg
pusha
mov
adc
flds
mov
mov
cmp
push
mov
stos
inc
insl
lods
loope
test
push
roll
stos
mov
into
and
lea
idivb
and
push
lret
and
das
rcl
imul
movsl
pushf
sub
sbb
movsb
pop
ds
pop
pop
sub
cmp
loopne
stos
subb
xor
cmc
lret
mov
lods
pop
xor
out
push
rcrb
cmp
dec
lock
push
lret
les
mov
mov
pushf
add
lods
subb
push
ret
jle
and
fldt
aam
jle
jg
test
mov
add
arpl
mov
adc
lcall
dec
mov
push
jbe
mov
and
je
xor
jns
adc
xor
pop
insl
je
scas
in
pop
mov
clc
fistl
sub
subb
loope
fs
sub
sar
inc
incb
xor
int3
fdivl
stos
inc
stos
cmp
mov
mov
and
push
addl
js
aaa
scas
push
sub
popl
pop
bound
xchg
loopne
jmp
push
dec
and
pop
mov
push
inc
orps
inc
lahf
stos
lret
jne
mov
inc
daa
pop
ss
jnp
jae
data16
pmovmskb
push
pop
shrd
mov
imul
loop
cld
mov
and
cmp
jl
cmp
sbb
lock
fnstcw
lea
or
or
sub
and
adc
fcompl
pop
movsb
jle
test
cmp
mov
jg
outsl
push
push
ds
pop
jo
jb
push
scas
xchg
jecxz
rcrb
mov
ds
or
int3
mov
repnz
push
cmp
and
mov
sbb
das
scas
addr16
and
pop
roll
adc
and
add
cld
mov
push
push
iret
fldl
pop
std
sbbb
dec
xlat
push
inc
repnz
hlt
sbb
je
xchg
roll
fwait
mov
ds
rclb
pushf
fwait
jmp
test
jle
mov
xor
or
mov
inc
pop
scas
fisttps
cltd
mov
xorl
in
jo
mov
ss
mov
andl
ljmp
pop
shl
jns
mov
add
dec
call
adc
lret
cmpsl
gs
or
cmc
outsb
mov
or
sti
cmp
xchg
lret
and
xchg
das
adc
mov
fwait
mov
loope
test
int
nop
int
insb
adc
fs
lock
push
pop
inc
pop
cs
incl
cmp
push
cmp
test
repz
cs
repz
std
or
pop
stc
inc
push
pop
daa
jle
push
xchg
sahf
mov
test
fdivl
jp
inc
pop
insl
xchg
arpl
jo
mov
mov
xchg
stos
data16
or
ret
jb
mov
or
rcrl
out
lods
jns
pop
jo
imulb
xchg
out
jo
aaa
icebp
ret
jo
pop
xor
cmp
sahf
xor
pop
iret
jo
andb
insb
xchg
mov
fnstsw
and
loopne
test
cld
mov
inc
inc
movsl
adc
mov
adc
aaa
fdivrl
repnz
mov
js
mov
and
cmc
pop
sbb
and
enter
into
jl
rcr
and
push
mov
push
outsb
hlt
push
repz
add
push
loopne
ret
push
mov
xor
inc
loopne
xlat
mov
out
pop
lcall
popf
lret
mov
sahf
or
pop
loopne
jle
jnp
cwtl
orb
cltd
lods
pop
and
loopne
inc
or
cmpsl
xor
push
adc
clc
dec
sbbl
pop
shl
xchg
jae
push
xor
stc
mov
mov
test
push
aaa
stos
or
xor
jmp
in
lret
push
shll
and
shr
icebp
fwait
ss
push
push
int
insb
in
insl
ss
testl
sub
lahf
pop
inc
push
fnstcw
xchg
call
dec
iret
xchg
mulb
movsb
fldl
rorb
add
aas
mov
popf
int3
adcb
je
and
sub
popa
adc
or
aaa
sbb
jp
pop
enter
ss
inc
sti
pop
lahf
mov
out
in
add
shlb
imul
cmp
outsb
je
stos
repz
push
push
cmpsl
fs
in
outsl
insl
xchg
pop
jo
mov
ss
pusha
les
and
jl
pop
jle
lret
xor
push
jle
ljmp
lret
jle
mov
xor
inc
mov
pop
xchg
adc
out
jg
loopne
stos
or
std
sbb
out
clc
sbb
and
push
jmp
adc
add
lcall
or
outsb
in
fadds
xor
cmpsb
mov
push
in
rcrb
or
fnsave
mov
outsb
addr16
aad
xchg
sub
das
test
test
add
stos
cmp
in
mov
jp
in
mov
sbb
jno
sbb
sbb
ret
sub
ja
sarl
testb
xor
popa
pop
ss
cmp
sub
mov
cmp
aas
pop
sti
lret
push
das
jnp
out
adc
push
add
out
je
or
sbb
mov
insl
jp
shlb
add
dec
xchg
cmpsb
movswl
outsl
sbb
scas
jae
cmp
pop
pop
or
mull
dec
fs
inc
ficoms
pop
in
mov
xchg
popf
sahf
loopne
sub
xchg
jg
dec
xlat
loopne
cmp
adc
dec
cmp
fistps
pop
add
sbbb
push
jno,pn
xchg
xor
pushl
ja
mov
pop
pop
jmp
enter
in
imul
ss
jnp
add
mov
pop
test
mov
in
andb
xchg
idivb
bound
mov
push
ja
sbb
cmp
pop
popa
xchg
jle
and
pop
idivb
fucom
cli
clc
dec
mov
jns
lods
cmp
aaa
leave
scas
mov
pop
mov
jnp
fsubrs
pusha
mov
insl
dec
outsb
scas
leave
mov
or
pop
push
stos
insl
push
or
lods
mov
pop
xor
pop
aam
mov
jecxz
lock
aaa
cltd
mov
add
dec
mov
bound
out
sbb
pusha
js
jbe
movsb
test
inc
test
add
mov
mov
adcb
xor
jbe
sbb
scas
add
mov
rclb
push
enter
jle
push
dec
sub
aaa
xchg
jl
out
sub
jecxz
in
jo
or
dec
enter
inc
repz
ss
push
mov
pop
cmpsl
test
data16
rcl
in
sbb
adc
sbb
xchg
cmpb
lcall
out
dec
cld
mov
lret
arpl
fmull
lock
jbe
loope
cmp
daa
or
jg
mov
stc
das
jle
push
push
popa
out
pop
adcl
pop
jp
inc
cmp
sub
and
add
pop
test
rcll
push
das
jb
lahf
jne
pop
inc
and
push
pop
test
jo
mov
push
mov
inc
fildll
iret
push
fadd
add
in
xchg
aaa
push
or
std
test
das
push
push
fdivrp
xchg
fmuls
jle
xchg
pop
push
dec
add
mov
es
std
xchg
jnp
lret
scas
popf
cs
lcall
add
lcall
push
aaa
aas
cmp
repz
and
jb
or
icebp
and
inc
or
pop
pop
insb
adc
fistpl
orl
cmc
mov
es
inc
mov
add
fldl
lcall
data16
mov
cmp
pop
sbb
push
inc
cmp
ret
imul
adc
cmpsl
or
pop
mov
push
je
repnz
addr16
sbb
subb
push
xchg
sbbl
test
fwait
mov
loop
pop
cmpsb
inc
dec
outsl
arpl
in
js
mov
jns
into
cmpsl
repz
inc
hlt
sub
fucomip
jecxz
xchg
and
add
fldt
loope
scas
push
cltd
test
aaa
mov
add
pop
ret
adc
scas
xchg
adc
mov
fmulp
sub
xchg
lea
cmpsl
inc
sbb
lret
rcrl
lock
loope
das
mov
fsubrl
sbb
in
inc
xchg
add
inc
push
popf
mov
push
sbb
sahf
orb
jmp
pop
and
xor
mov
mov
fldt
insb
sub
popf
sbb
mov
mov
popf
push
mov
stos
pop
ret
dec
fisubl
push
adc
icebp
push
mov
std
jl
int
inc
sbb
add
call
outsl
xchg
sbb
push
pop
mov
test
lods
fstps
cmp
adc
in
dec
and
sbb
jbe
xchg
arpl
add
enter
out
rcrl
jbe
mov
xor
ljmp
das
stc
adc
pop
lahf
and
jle
outsl
test
mov
sbb
or
jns
pop
jo
mov
push
inc
inc
sahf
xchg
jp
fnstcw
sbb
mov
add
lea
cmc
in
fcoms
es
testl
fwait
arpl
xchg
inc
mov
jecxz
insl
pop
jecxz
push
and
xchg
fiadds
cmpsl
popa
mov
push
xor
adc
xorl
dec
enter
push
mov
add
fstl
rcrl
int3
pushf
mov
push
je
ss
lahf
pop
cmp
ja
mov
jae
pop
jg
test
and
bound
fisubrl
fxch
push
rcrb
cmpsl
jne
lcall
sbb
mov
lret
jbe
cld
mov
ja
push
cmpsl
inc
mov
sbb
es
dec
cmp
or
shll
lods
dec
jae
and
push
push
adc
ds
xchg
mov
js
jle
rorb
shrb
cmp
or
cmc
in
js
inc
cmpsl
fstpt
fldl
in
inc
ljmp
loop
in
push
inc
data16
jle
out
xchg
sub
into
jb
pusha
aaa
cmpsb
jns
and
cmp
ljmp
inc
cmpsb
mov
and
mov
push
and
or
and
mov
insb
pop
sbb
pop
ret
or
add
pop
and
mov
cmpb
popa
mov
das
adc
jnp
xor
mov
xchg
sub
push
mov
push
jno
mov
dec
sbb
call
fists
int3
mov
sbb
and
mov
add
lcall
out
pop
rcrb
mov
in
repz
icebp
sub
cmp
mov
lock
imul
or
into
jl
nop
pop
jg
dec
jbe
aas
fstps
inc
lret
in
inc
fiadds
pop
sub
out
pop
fsubr
mov
fisubrl
lock
pop
shl
pushf
inc
fsubrl
cltd
pop
pop
aaa
sbb
repz
in
cmp
js
mov
addl
inc
sub
test
mov
in
sub
outsb
jp
int3
lods
pop
leave
jno
popf
xor
inc
adc
inc
pop
push
das
bound
add
push
xchg
jbe
jb
movsl
xchg
sbb
sbb
pop
dec
loope
fdivs
pusha
push
sub
dec
sub
cltd
push
lods
adc
imul
popf
aaa
ret
inc
insl
sub
jg
lea
ss
sbb
outsb
imul
arpl
add
xor
repz
inc
mov
fucomi
loopne
jge
pop
imul
dec
pop
aam
stos
push
mov
std
or
jl
mov
add
out
popa
outsl
sbb
flds
out
fwait
xchg
sti
sbb
mov
cmp
aaa
jge
xchg
dec
mov
xchg
in
add
fs
test
dec
mov
xchg
jno
loopne
int
jmp
dec
dec
stc
dec
jo
aaa
loopne
ret
lret
lods
inc
adc
xchg
adc
sahf
bound
test
or
fpatan
ret
xor
push
test
cmpsl
aad
xor
and
pop
scas
push
dec
repz
subb
adc
jl
pop
cmpsl
push
imull
or
test
push
popf
and
std
inc
and
xchg
sub
addr16
mov
stos
stc
frstor
bound
pushf
fildl
imul
cmp
push
popf
mov
inc
jno
jb
jb
adc
lcall
pop
subb
or
dec
xchg
cltd
adc
xor
sahf
stc
jge
push
pop
sbb
clc
insl
mov
inc
sub
nop
or
mov
add
ret
mov
push
call
push
sub
cs
inc
icebp
test
outsb
jecxz
jmp
push
cmp
or
fbld
adcl
mov
mov
add
jle
bound
cmpsb
xchg
aaa
mov
icebp
add
jp
in
add
mov
push
and
mov
jnp
sbb
icebp
popf
rcrl
xor
lcall
movsb
mov
js
cmpsb
idivl
mov
adc
inc
xorb
pop
mov
loope
add
add
repnz
fidivs
jns
sahf
add
adc
push
loopne
arpl
jne
jp
pop
push
rep
sub
push
repz
ss
push
mov
cmpsl
out
stos
int3
and
cmp
test
lods
rcrl
cmp
pop
ss
pop
ljmp
or
lock
repz
jmp
xor
jb
add
dec
cmp
sub
das
jne
fldl
xor
sbb
mov
mov
mov
sahf
lds
mov
xor
mov
xor
fistps
aam
js
push
and
mov
je
inc
pop
or
sbb
pop
dec
outsl
xorl
ss
stos
ja
push
lret
stos
lcall
fcompl
push
add
or
aam
fsub
sbb
cmp
and
mov
lods
xor
adc
xchg
ret
fistl
dec
inc
pop
cmp
sub
test
jp
add
push
push
aaa
scas
jb
lret
repz
push
in
pop
jbe
pop
xchg
divl
cmpsb
bound
xchg
inc
inc
jnp
or
es
inc
mov
jl
mov
dec
mov
push
jmp
and
scas
notb
jmp
cmp
jbe
inc
sbb
mov
add
out
out
stos
ret
xchg
lahf
xor
pop
push
push
call
and
std
imul
je
mov
xchg
and
mov
and
shlb
movsb
loope
push
cs
data16
adc
lret
mov
adc
push
fstps
mov
icebp
xchg
jge
notl
adcb
push
loope
add
outsb
in
and
push
outsl
sbb
dec
popf
cltd
rcll
add
jle
popf
out
xor
mov
inc
lcall
test
dec
movsl
jb
inc
jo
or
mov
outsb
xor
imul
mov
imul
es
or
push
pop
popf
int3
push
movb
xchg
repz
fadds
leave
ljmp
add
cs
mov
cmp
lock
dec
mov
in
pop
jmp
jl
fstps
cmp
rclb
dec
cmp
imul
pop
mov
pop
es
pop
jae
xor
jb
jmp
xchg
sub
mov
jnp
test
dec
sbb
push
leave
jo
pop
dec
pop
sub
mov
xchg
add
fsub
mov
scas
add
push
jl
cmp
add
enter
repnz
mov
fs
decl
pop
out
inc
stos
push
ret
xchg
jl
lods
pop
in
sbb
xor
xchg
dec
pusha
bnd
les
fucomp
xchg
push
inc
fiadds
in
lahf
push
mov
xchg
dec
add
cmp
in
cli
mov
xchg
push
sub
mov
adcb
xchg
dec
pop
or
ljmp
jecxz
xchg
push
xchg
or
pusha
sti
pop
jl
and
sbb
out
mov
mov
imul
lret
mov
sub
lds
or
lcall
in
hlt
mov
xchg
sbb
jl
dec
in
mov
enter
jno
arpl
pop
test
push
push
add
addr16
loope
sbb
lods
mov
in
cmp
ss
cs
cmpsl
mov
xchg
fnstenv
inc
test
xor
cmp
in
xchg
std
mov
jl
iret
push
mov
stc
fwait
cmp
aas
movsl
loopne
scas
pop
dec
cmp
sbb
movl
dec
jbe
rorl
jo
jp
cwtl
mov
inc
inc
add
les
or
inc
cmp
pop
lods
call
pusha
cmpsb
popf
repz
dec
lcall
push
inc
test
xchg
sbb
pushf
sbb
enter
lcall
inc
dec
into
inc
insb
inc
pop
sti
out
dec
dec
aad
out
cmp
and
fsts
inc
outsl
test
inc
push
es
les
pop
mov
jmp
inc
pop
mov
int
and
cmp
test
push
pop
fcmovu
xlat
cmp
inc
fdivl
stos
shll
in
movsl
mov
mov
adc
adc
jnp
lds
jno
mov
push
in
dec
arpl
dec
lea
in
pop
mov
push
jle
dec
adc
and
or
outsb
fnstcw
fistps
pop
push
clc
push
xor
mov
adc
inc
jecxz
cmp
push
mov
pop
jecxz
xchg
dec
out
outsb
mov
push
mov
jp
push
fistpl
mov
repnz
mov
or
inc
sbb
enter
insb
ss
les
push
jnp
lock
add
adc
aam
std
pop
enter
sbb
mov
mov
jbe
add
jge
ss
inc
stos
cwtl
add
pop
imul
pushf
add
cld
test
mov
movsl
jae
pop
int3
je
cwtl
add
dec
fistl
dec
mov
ret
push
xchg
lods
lret
repz
pop
sub
es
sbb
aaa
push
xor
and
repnz
sbb
xchg
push
push
popf
cmc
pop
pushf
xchg
mov
jne
aaa
pop
lds
or
pop
pop
in
pop
mov
rcrb
dec
fadds
lret
add
pop
aaa
dec
idivb
push
rcrl
das
lock
rorb
cmpb
sbb
sahf
inc
arpl
icebp
gs
inc
gs
jae
iret
dec
insl
inc
adc
jb
pop
ljmp
push
xor
aad
and
imul
adc
hlt
pop
pop
repz
mov
mov
aaa
or
jbe
push
pop
lods
xchg
cmp
in
pop
mov
gs
iret
mov
inc
inc
pop
and
xor
iret
cmp
ret
clc
sbb
dec
or
sbb
jnp
mov
cmp
jmp
and
and
push
inc
loop
push
adc
pop
in
jne
clc
mull
arpl
pusha
repz
mov
cli
repz
xor
mov
imul
pop
xchg
lcall
mov
pcmpeqd
fst
cmp
xor
sub
daa
cmp
add
fmuls
imul
mov
cltd
std
push
mov
mov
mov
rolb
dec
and
icebp
push
stos
cld
mov
push
aas
int3
mov
in
dec
sbb
mov
repnz
xchg
fstpl
mov
mov
pop
pop
cmpb
adc
popl
out
cmpsl
add
fistpl
fiaddl
push
sub
push
neg
dec
push
xor
cwtl
jno
adc
dec
scas
pop
mov
stos
mov
shrl
clc
aam
mov
fcomp
ja
fisubl
mov
jnp
mov
mov
arpl
mov
dec
xchg
ja
push
data16
mov
cmp
and
cltd
lret
repz
cmpsl
push
out
jnp
inc
sbb
xchg
inc
imul
shlb
movsb
dec
call
xchg
cli
imulb
cs
adc
mov
jge
pop
xor
mov
pop
mull
push
insl
lods
push
inc
and
jmp
adc
arpl
jle
jne
addr16
xor
ja
pop
aaa
rorl
mov
stos
aaa
xor
or
test
sub
adc
mov
jge
loopne
and
dec
cmp
push
pusha
mov
fdivp
lods
loope
arpl
push
jmp
ja
jno
sub
mov
shlb
stos
push
push
pop
call
jo
adc
aaa
inc
dec
int
adc
popf
insb
pop
pop
jp
aaa
sbb
hlt
jle
daa
jp
test
aaa
cmpsl
mov
aam
ljmp
imul
mov
cmp
push
sub
push
inc
in
movsl
repz
int3
push
jae
sti
fmul
aaa
jno
mov
ret
xchg
ss
or
clc
mov
loope
xchg
mov
add
insb
or
arpl
pushf
inc
sbb
jae
inc
pop
daa
jge
dec
je
in
aaa
out
arpl
icebp
cmp
dec
nop
sub
push
xchg
dec
mov
push
sub
insb
xchg
push
sub
jge
ss
out
popa
in
push
dec
push
xor
lcall
imul
pop
lahf
aaa
insl
inc
pop
xor
ss
push
ret
shlb
sti
and
gs
testl
xlat
xchg
sbb
mov
mov
sbb
xchg
pop
or
movsl
jg
and
sti
outsb
sbb
and
sub
sti
xchg
movsl
pop
or
push
pop
sbb
addr16
dec
loope
pop
cmp
sbb
ret
sahf
pop
pushl
imull
jg
mov
xor
out
aad
fldt
mov
test
pop
test
and
pop
dec
lods
imul
adc
cmp
scas
jns
sub
stos
out
mov
cld
pop
cli
std
int
mov
jae
lea
push
hlt
popf
in
jae
jo
fldenv
adc
xor
adc
insb
fistpl
arpl
aas
push
adc
sbb
outsl
fdivrl
imul
out
add
cld
mov
inc
fimuls
lcall
dec
imul
loope
adc
sbb
jl
fldt
pop
xor
ror
movsb
or
fstps
idivl
cmp
insb
aaa
inc
jle
or
out
cmpl
xchg
mov
jno
and
push
notl
jl
bound
fstpl
jle
clc
adc
sti
outsl
jo
mov
dec
insb
jne
push
in
jge
push
mov
xorb
push
jae
je
out
shl
mov
fldcw
arpl
push
sub
or
scas
outsb
adc
dec
cmpsl
and
jno
enter
iret
sbb
dec
push
ret
daa
xor
jecxz
fstl
out
jbe
mov
das
ja
mov
mov
add
inc
jbe
jae
sbb
in
rclb
les
xor
es
push
in
mov
jle
or
sbb
addr16
pop
out
mov
lods
fadd
push
dec
pop
mov
lcall
leave
shrb
cld
pop
out
sbb
pop
lcall
jle
imul
lcall
sbb
sti
sub
xor
insl
jmp
clc
aaa
cld
scas
daa
mov
mulb
rcl
push
push
ss
dec
pop
call
int
jmp
bswap
in
pop
outsb
enter
pop
xlat
aaa
loopne
test
sbb
pop
mov
cmp
iret
lea
aam
out
jmp
inc
aaa
test
jbe
xlat
jnp
dec
insl
ss
cli
incb
or
sbb
sbb
in
ss
shrl
push
pop
stos
stc
inc
or
inc
mov
mov
into
mov
nop
imul
inc
xor
lahf
sti
mov
loop
push
outsl
outsb
push
leave
notl
dec
lcall
hlt
fdivr
ds
std
add
xor
cltd
jb
js
and
push
popa
je
popa
mov
popf
jmp
xor
sbb
pop
push
dec
inc
push
pop
sbb
std
inc
sahf
movsb
jb
leave
dec
pop
stos
call
andb
mov
cld
mov
jp
mov
cld
out
stos
roll
cmpsl
jae
dec
out
fistps
nop
mov
mov
ja
shll
pop
gs
xchg
mov
std
lcall
jmp
fnstenvs
jns
inc
repz
imulb
testl
xchg
pusha
nop
movsl
sti
aas
xor
mov
mulb
cmp
cli
outsb
test
inc
xchg
and
lea
stos
mov
pop
xor
jne
negb
mov
les
int3
rolb
sarl
int3
and
or
inc
xchg
xor
add
push
mov
mov
dec
int3
scas
lea
xor
jne
jle
mov
popa
push
loope
adc
outsl
and
fdivl
jl
div
and
filds
sub
push
shlb
jo
mov
in
loop
pop
push
je
push
icebp
pop
pop
jecxz
push
sti
push
sbb
sbb
cltd
pop
insl
add
arpl
mov
xor
movsl
out
arpl
test
out
pop
jb
xor
clc
sbb
xor
inc
jne
xor
xchg
enter
add
push
jne
dec
mov
out
dec
and
cmp
lret
loop
dec
outsb
popf
pop
repnz
popa
push
mov
sbb
pop
ljmp
inc
push
scas
push
cmp
xchg
loopne
inc
sub
lret
add
pop
sbb
pop
in
in
mov
into
and
addb
mov
movsl
inc
int3
sub
lahf
mov
cltd
dec
cwtl
jp
aad
mov
xchg
pusha
fcompl
cltd
addr16
loope
push
in
push
cmp
sbb
sbbb
jl
mov
popf
sub
mov
push
ror
outsl
adc
andb
xchg
enter
pop
out
rorb
icebp
push
out
imul
repz
filds
sub
imul
fadds
fldl
ret
stc
popa
sbb
xor
cmp
dec
and
les
cmp
inc
call
sbb
in
mov
flds
inc
inc
cmp
ret
mov
jno
out
nop
jno
jo
pop
push
sbb
pusha
mov
sbb
mov
dec
sbb
outsl
inc
cmp
jno
cmp
addr16
mov
push
xchg
sbb
aaa
insl
adc
pop
cltd
xchg
and
js
jecxz
scas
aam
insl
int
dec
test
mov
add
inc
push
inc
jl
jle
shll
imul
out
inc
sbb
stos
fistl
sub
test
pop
inc
stos
lea
mov
adc
loop
mov
jo
enter
scas
xchg
dec
leave
cmpsb
and
mov
aam
repz
mov
and
push
pusha
test
mov
pop
inc
sbb
repnz
punpcklwd
aaa
inc
cwtl
outsb
dec
pop
xchg
pop
insl
sbb
movsl
jo
xchg
adc
scas
shr
test
sub
sub
mov
dec
xlat
mov
mov
in
aaa
dec
pop
add
add
pushf
faddl
dec
test
or
in
test
aam
dec
and
pusha
pop
sbb
mov
push
mov
sbb
pusha
sbb
popa
xchg
loop
mov
dec
xchg
addr16
imul
daa
out
movsl
fistl
dec
leave
cltd
aam
jno
inc
stos
in
pop
loop
xor
hlt
cmp
lods
dec
mov
std
bound
pop
xor
cmc
pop
and
ss
cltd
xor
movsb
push
inc
int3
mov
pop
mov
pop
adc
jl
das
js
out
adc
jle
test
jae
mov
arpl
pop
outsb
dec
mov
in
xor
push
jae
fcoml
xchg
pop
popf
and
pop
cmp
sbb
adc
and
xorb
xor
das
push
mov
sti
or
ljmp
xor
aaa
out
test
fidivrl
sub
clc
xorb
addb
xchg
jbe
push
mov
cmp
jge
add
xor
inc
dec
push
les
ja
lods
pop
xchg
test
sbb
mov
inc
cwtl
cmp
jno
sbb
push
sti
into
aaa
or
je
cmp
fadds
pop
mov
inc
push
int3
inc
fwait
mov
loop
pushf
ss
arpl
aam
es
inc
push
fldenv
sbb
in
in
icebp
das
mov
aad
loope
iret
out
inc
push
mov
in
pop
jl
push
in
ljmp
jp
mov
mov
jbe
adc
fldln2
pop
xchg
push
jg
aas
inc
mov
int
jp
lea
in
push
mov
pop
lea
das
stos
stos
lock
lret
pop
push
sub
mov
pop
loop
insl
ret
jbe
pusha
push
mov
rorb
int3
subb
jb
fdivs
and
dec
int
sub
mov
adc
push
and
cs
xchg
int3
mov
fistpl
ficoml
fadd
mov
out
aaa
adc
xlat
jl
das
and
mov
inc
add
and
loope
je
imul
adc
and
addb
stc
in
mov
int3
jg
pop
fdiv
aam
fnstcw
jbe
pop
push
outsl
leave
lret
aaa
fnsave
outsl
pop
pop
jmp
add
int
inc
jne
sbb
scas
and
add
fnstenv
icebp
mov
mov
fnsave
scas
inc
cmpsl
fcoms
fadd
aaa
rcrl
pop
and
js
insl
dec
mov
push
xlat
enter
lret
scas
jp
hlt
std
fs
sub
push
cmp
aam
lret
push
and
sbbb
ret
jb
sbb
sbb
jmp
mov
adc
jg
xchg
jle
jno
adc
std
loope
loop
cmp
sti
jg
pop
and
xor
mov
inc
cmp
push
mov
sahf
lcall
xor
jne
jle
push
mov
stc
mov
inc
hlt
push
lds
mov
stos
lods
stc
and
cmp
push
mov
sbb
out
orb
ret
cmp
push
jno
sbb
pop
push
add
and
cli
adc
aas
push
cmp
pop
sbb
mov
test
and
jbe
xor
into
loopne
jns
sbb
ffreep
into
jecxz
fstps
sti
ss
das
js
mov
mov
jae
xor
pop
sub
mov
aas
shl
dec
pop
or
and
test
mov
pop
subb
add
mov
pop
mov
outsb
orl
rcrl
sub
cwtl
fwait
sbb
insl
sbb
mov
stos
push
add
fcomps
sbb
popa
inc
pop
sarl
add
fwait
pop
loope
ss
sarb
into
stos
xor
mov
jmp
clc
pop
imul
aas
adc
sub
mov
inc
push
cmp
icebp
fs
inc
aad
lcall
and
daa
push
push
mov
pop
inc
pop
sbb
sbb
aad
test
sub
movsl
cmp
fdivrs
pop
sahf
sbb
jecxz
insl
sbb
pop
cmp
fndisi(8087
pop
add
icebp
fwait
xchg
dec
inc
mov
pop
jle
bound
pop
shll
cmpsb
push
sbb
and
sub
lods
fisttpll
push
adc
ljmp
xchg
rorb
pop
xchg
in
add
xor
sarb
imul
bound
out
jmp
mov
fimuls
add
xchg
cmc
stos
mov
mov
pop
into
sbb
in
fisubrl
stos
inc
outsl
cmp
jg
in
pusha
push
push
push
aaa
lods
lret
lret
sub
aad
sbb
sub
and
push
mov
sbb
or
mov
ljmp
add
xor
add
jecxz
movsl
lods
into
jge
subb
xor
ret
and
push
pop
es
sti
and
std
cmpsl
add
inc
sub
inc
adc
stos
inc
jbe
mov
adc
mov
out
jb
push
loope
push
push
sub
adc
mov
jle
and
out
in
subl
add
fmull
xor
cld
push
pop
rcll
stos
stos
and
pop
pop
js
sbb
jno
push
bound
xor
mov
xchg
les
jns
out
pop
iret
dec
pop
add
rclb
mov
hlt
sbb
or
sub
std
fwait
arpl
push
out
outsl
mov
rorl
enter
lret
cmpsl
adc
cmp
mov
cmpsl
mov
movsl
lahf
repz
pop
inc
xor
adc
outsb
push
mov
pushf
sub
mov
test
pusha
cmp
adc
out
add
call
pop
cld
das
inc
aas
cmp
xor
addr16
loop
xor
mov
add
add
or
jne
inc
js
aaa
cmp
push
sub
pop
cmp
jne
iret
jecxz
adc
dec
dec
mov
sub
cli
ret
pop
lret
fisttpl
xchg
add
fildl
inc
or
stos
mov
add
push
or
aaa
ljmp
add
pop
push
je
xchg
cmp
into
jnp
jge
movsb
inc
sbb
jl
pop
sbb
lret
lock
sub
ret
sarb
pop
ds
sbb
fmull
push
cwtl
out
bound
sub
sbb
mov
add
pop
jg
pop
push
stos
jae
outsb
std
pop
lds
popa
dec
inc
mov
int3
pop
arpl
leave
dec
cmpsb
ror
shlb
mov
jnp
mov
add
xchg
dec
xchg
mov
and
sub
pop
cmpsb
out
xor
mov
cmp
cmp
add
sbb
or
and
mov
ljmp
lcall
push
andb
bound
inc
push
test
sbb
sbb
adc
cld
xor
repz
repz
sbbl
jbe
bound
mov
jl
popf
mov
dec
cld
loopne
add
mov
and
fdivrl
fisubrs
mov
incb
mov
movsl
faddp
cmp
dec
into
popa
xchg
push
and
inc
mov
out
mov
xchg
fs
and
sub
sarb
clc
cmp
idiv
std
fiadds
push
aaa
ljmp
scas
inc
in
stc
jbe
enter
push
or
and
cmpsb
cmp
xor
push
lret
push
out
mov
in
ja
sbb
pop
sbb
sub
and
movsb
scas
shlb
loopne
lret
sbb
mov
mov
movsl
jbe
pop
mov
icebp
jmp
add
dec
call
sbb
sbb
inc
push
lods
mov
or
leave
pop
jp
outsl
enter
adc
pop
mov
arpl
cmpsb
mov
xor
pop
adc
cwtl
out
cmp
adc
and
movsl
and
push
cld
jecxz
out
mov
adc
mov
fistpl
jmp
shll
cmpsb
jp
lods
std
fs
into
mov
cld
add
fistps
xchg
cwtl
jnp
ret
cmp
jb
cs
inc
loope
xchg
xchg
push
adcb
push
scas
jp
ljmp
hlt
arpl
negl
dec
fucomp
mov
cmpl
push
mov
jg
cld
gs
cltd
inc
fidivrl
fdivrs
movsl
lds
mov
dec
aam
lods
cmp
dec
mov
push
push
pop
rol
inc
bound
lcall
mov
pusha
adcb
push
pop
xchg
cwtl
add
xor
fists
sbb
adc
pusha
mov
clc
inc
sbb
ret
or
cltd
mov
pushf
push
push
adc
jp
dec
insb
dec
mov
leave
lret
test
jbe
ja
inc
mov
or
push
repz
xlat
dec
mov
adc
sub
sahf
push
xchg
push
repz
jp
pop
inc
push
pop
sbbb
aaa
xor
xor
dec
push
fidivrs
popa
xorl
sti
or
fnstsw
outsb
movsl
xor
dec
fdivs
rcrb
data16
pop
divb
and
jbe
push
fdivrs
xchg
aam
out
inc
sar
sti
cmpsl
and
call
cmp
inc
in
pop
push
sbb
cltd
and
add
sti
ss
ret
in
insb
aad
push
daa
add
add
outsb
inc
sti
movsb
xor
loope
adc
xchg
loopne
xor
mov
stos
add
sub
sub
push
push
adc
fwait
je
icebp
jmp
push
pop
movsl
sbb
inc
jge
out
bound
data16
mov
sti
mov
enter
jb
aaa
mov
in
pop
sbb
test
push
push
rol
addr16
addr16
xchg
mov
fwait
sbb
call
mov
pop
mov
pop
dec
jnp
jbe
mov
inc
mov
mov
push
xchg
and
mov
adc
pop
and
divl
lods
cltd
adc
jne
inc
icebp
jp
mov
mov
je
bound
subl
jmp
pop
jbe
popa
jle
sti
cmpsb
sbb
out
filds
xchg
outsl
outsb
push
jle
mov
mov
ja
scas
fnstenv
aaa
cltd
notl
push
mov
xchg
lds
out
sbb
or
mov
mov
sahf
repnz
cmp
in
cmp
mov
mov
pop
sbbb
in
jbe
mov
jge
dec
fwait
repnz
mov
les
mov
out
mov
pop
mov
enter
dec
push
add
sbb
mov
mov
inc
and
scas
mov
jle
aam
mov
xorb
dec
movsl
aas
fimuls
bound
daa
dec
sbb
inc
jg
std
loope
ss
fucomi
lret
mov
lods
pop
ret
jo
jno
adc
in
cmp
out
nop
popf
push
inc
add
push
inc
pop
lcall
fs
lahf
cli
add
mov
enter
xchg
aaa
shlb
je
pop
or
aas
lods
sub
mov
mov
mov
in
or
push
mov
ss
lcall
jle
jno
push
mov
jb
jp
mov
push
imul
iret
jns
loope
hlt
ss
mov
mov
jbe
frstor
xchg
pop
fwait
xchg
in
cmp
mov
sub
je
int3
mov
ror
cli
push
dec
scas
mov
jecxz
imul
cmp
loop
enter
jl
xor
inc
out
sbb
aam
dec
jo
cs
dec
xchg
in
fdivs
cmpsl
pop
cmp
cmp
in
repz
js
inc
pop
pusha
adc
aaa
mov
mov
add
hlt
push
cltd
cmpsb
ret
popf
dec
xlat
repz
popf
leave
lcall
jbe
stc
push
push
imul
push
push
ss
jne
call
xchg
in
sbb
mov
adc
mov
or
mov
dec
leave
sbb
cmp
std
and
das
div
sbb
dec
bswap
lea
pop
push
ret
pop
inc
pop
or
mov
pop
movsb
popf
sub
imul
xor
mov
aaa
in
imul
cmp
dec
add
pusha
jno
arpl
sti
mov
and
lods
mov
pop
nop
add
xor
imul
mov
push
icebp
enter
jle
scas
les
lcall
xor
mov
arpl
sub
fwait
nop
xlat
push
pop
in
push
into
xchg
lahf
dec
imul
jmp
and
pop
stos
dec
stc
jmp
mov
jle
bsr
ret
test
inc
cmp
and
or
cmpl
cld
cwtl
mov
unpckhps
push
or
and
sbb
add
decb
test
aaa
decb
lock
pusha
outsb
jo
or
int3
aaa
cld
lret
fisubl
cmpsb
adc
mov
sbb
mov
dec
jnp
cmp
sub
or
outsb
lock
lds
xchg
push
ds
fcmovnb
cwtl
cmc
adcb
and
sub
pop
xchg
scas
std
mov
repz
std
or
sub
repz
arpl
or
mov
push
bndstx
outsb
push
pushf
pop
mov
push
xchg
sub
std
test
sub
lret
push
enter
dec
sti
ss
push
cld
insb
inc
fisttps
and
mov
call
xchg
aaa
inc
test
movsw
rclb
lock
clc
lret
ss
cwtl
call
xchg
aaa
nop
jecxz
adc
push
loopne
jecxz
popa
add
movsl
out
dec
jecxz
and
call
mov
sbb
lea
movsb
das
xor
mov
bound
int3
punpcklwd
lock
jl
fwait
sbb
bound
add
clc
test
ds
mov
sbb
sahf
sbb
pop
ds
mov
push
sbb
push
mov
mov
push
jl
int
loope
aas
stos
or
or
and
insb
inc
mov
std
int
xchg
mov
add
and
fs
adc
inc
ret
mov
iret
and
xor
notl
aas
rcrl
inc
in
dec
dec
add
lahf
or
inc
stos
lret
jle
xchg
mov
cmp
fcomps
pusha
pop
repnz
adc
jbe
jbe
stc
add
outsl
outsl
dec
sub
jg
je
aad
cmpsb
divl
mov
add
or
lea
mov
in
pop
in
jbe
lds
inc
ss
out
pop
adc
subb
call
mov
lret
in
orb
mov
cmp
aaa
sbb
xchg
call
test
test
jmp
sbb
mov
mov
mov
inc
jne
jl
jo
mull
jmp
add
xchg
fwait
mov
in
imul
movsb
nop
outsb
pop
loope
stos
fwait
xchg
clc
mov
add
fwait
dec
mov
out
xor
popa
inc
sbb
rorl
adc
aaa
inc
jbe
and
pop
inc
cld
je
mov
cmp
cs
jne
mov
push
ret
or
jnp
loopne
jle
pop
xchg
sbb
add
loopne
stos
push
les
pop
enter
rcrl
cmpsb
test
incb
dec
out
mov
jne
xor
lret
push
out
adc
in
repz
add
in
insl
pop
in
and
cs
sbb
f2xm1
and
cmp
sbb
cld
out
into
hlt
jns
sub
pop
popa
shlb
shl
repnz
int3
popf
cli
push
dec
leave
scas
call
dec
sbb
pop
pop
and
pop
sbb
shll
add
iret
dec
movsl
push
test
cltd
mov
xor
push
aaa
adc
push
mov
xchg
in
jbe
sti
dec
pusha
jge
int3
bound
rcl
mov
lods
lds
ss
dec
jbe
adc
cs
repnz
xor
cmp
sub
int3
jmp
outsb
xchg
lock
mov
fwait
aas
ljmp
inc
out
std
aam
or
in
sahf
lods
jo
aaa
and
adc
rcrb
decb
data16
inc
cmp
push
xor
mov
faddp
out
test
fwait
rep
sbb
inc
mov
push
int
cmp
push
fisttpll
bound
mov
aam
mov
or
cmc
xchg
rcll
sub
mov
mov
aaa
sub
xor
pop
inc
fucomi
movsb
sbb
dec
pop
and
or
aad
popf
ss
mov
jo
outsl
outsb
sub
lcall
and
inc
fnsave
xchg
add
rcrl
stos
in
sahf
stc
lret
mov
out
test
fmul
arpl
js
inc
inc
push
mov
outsb
push
lock
fwait
xchg
cli
mov
and
fwait
push
sub
adc
fs
dec
fdivs
pop
in
sbb
xchg
ss
mov
das
outsl
icebp
stos
call
xor
pop
xchg
xchg
pop
nop
in
pusha
cwtl
pop
loop
jp
jmp
negb
cli
and
adc
arpl
cmp
in
rclb
loop
xchg
dec
adc
shll
rcr
jle
icebp
mov
aad
push
mov
or
mov
pop
fimuls
into
int3
cld
les
sub
adc
or
orb
loopne
jbe
xchg
into
jl
out
je
pop
pop
sti
push
loopne
dec
xchg
insb
dec
pop
ja
cs
cmc
xor
dec
inc
sub
aam
out
xchg
shlb
leave
addr16
out
add
cmpl
add
lods
notb
and
lock
xchg
sbb
and
dec
orl
outsb
sbb
notb
in
push
ss
sbb
aaa
orl
add
repz
sub
daa
cmpsl
enter
jl
mov
divl
sub
mov
sbb
out
cs
movsb
loop
xor
cmpsb
jnp
inc
das
mov
insl
dec
sub
aas
push
lods
pop
fisubrl
mov
loopne
push
lret
push
fucom
popf
push
sbb
cltd
and
mov
jle
hlt
push
shl
and
lods
mov
cmpsb
mov
push
cld
mov
push
fwait
shl
fmulp
xchg
popa
push
mov
pop
dec
std
and
out
stc
mov
repz
and
outsl
out
bound
ds
pop
mov
clc
movl
xchg
and
pop
jecxz
xchg
aam
add
sub
adc
and
hlt
xchg
outsl
mov
adc
arpl
insl
aaa
cmp
dec
or
pop
jno
push
shll
cmp
lock
dec
lret
lods
pop
in
sub
pop
cmp
lods
mov
jle
mov
inc
cmpb
dec
jp
jb
push
mov
das
loope
cmp
es
cmpsl
mov
sub
or
mov
inc
enter
add
inc
sub
aas
pusha
mov
test
rol
stos
sub
data16
repnz
pop
jge
pop
mov
les
cmp
xchg
subb
call
pop
push
je
mov
out
mov
pop
inc
fists
addr16
sub
loop
bound
xor
sub
addr16
pop
cmpb
movsl
mov
outsb
xchg
cmp
add
xor
cli
add
push
fcoml
add
pop
cmpsb
lock
sub
nop
fistpll
pop
ss
test
imul
scas
cld
lods
push
mov
mov
mov
imul
sahf
and
inc
movsl
mov
inc
mov
pop
in
jo
fmull
aaa
push
outsl
xchg
jae
and
inc
fcomps
pop
xchg
add
fadds
lret
mov
ficompl
cmp
sub
xor
push
jge
nop
ss
orl
or
xchg
cmp
outsb
test
push
loope
pop
aaa
sub
shll
jmp
les
rolb
dec
ss
int3
push
jl
in
daa
mov
test
xor
js
jl
enter
pop
push
cmp
mov
fists
add
shll
jmp
in
pop
fidivl
loopne
sarb
sbb
scas
pop
or
push
ss
std
icebp
cmp
es
shl
pop
xor
movsl
sahf
push
jns
movsb
cmc
pushf
scas
mov
mov
scas
mov
repz
fcoms
aam
fbld
insb
leave
and
jb
and
add
mov
aaa
jmp
rol
mov
or
roll
mov
adc
pop
out
cmp
out
out
pop
fnstsw
lcall
les
pop
jae
sbb
fs
jecxz
mov
add
or
fdivr
clc
sti
adc
or
push
in
fimuls
sub
xchg
mov
mov
sbb
pop
dec
imul
pop
pop
sub
fisttps
push
xchg
pop
or
or
push
mov
lods
aaa
or
je
sti
jb
push
or
arpl
sub
jle
push
pop
fbstp
adc
pop
add
adc
test
fdivr
dec
jns
std
pop
lods
inc
mov
and
and
les
call
pop
ss
mov
adc
int
sbb
xchg
jne
mov
cwtl
pop
inc
loopne
in
inc
jno
jbe
shrb
insb
push
push
in
sti
sbb
inc
cwtl
or
jge
aad
sbb
cmp
fwait
mov
or
sahf
xchg
xchg
jg
inc
jle
add
and
dec
popf
jmp
xor
fistl
testb
add
push
add
scas
pop
push
in
adc
pushf
and
sub
pop
mov
addr16
jae
loopne
dec
jbe
popf
dec
movsl
lahf
push
in
enter
pushf
inc
and
cmp
mov
icebp
scas
inc
lahf
pop
imul
inc
sub
jg
mov
in
mov
jae
mov
popf
enter
fsub
pop
cmpsb
adc
cli
mov
pop
imul
call
adc
test
dec
data16
pop
rorb
add
das
mov
lea
and
out
mov
sub
cmpsl
xor
push
lret
les
add
gs
mov
sti
or
cmp
nop
lods
rcrb
jle
loopne
jo
iret
scas
dec
sub
inc
shrl
xor
mov
push
lcall
lods
mov
mov
sbb
ds
mov
dec
dec
nop
insb
sub
jle
sbb
daa
mov
pop
ret
push
into
jge
popf
rcll
inc
mov
outsb
shl
adc
int
cmp
xor
mov
jbe
decb
roll
aas
aaa
arpl
enter
pop
jb
loope
leave
sbb
les
pop
xor
dec
jno
xor
mov
inc
outsl
outsb
push
rclb
orb
inc
push
ss
mov
inc
push
pop
pop
push
xchg
and
mov
lret
incb
and
add
cmp
mov
int3
mov
mov
push
pop
roll
mov
pop
insl
push
jne
test
jae
mov
les
jp
or
sub
stos
xor
cmp
inc
out
dec
pusha
sbb
nop
lret
push
xlat
pop
imul
lods
lcall
inc
addr16
dec
rcll
fs
push
aaa
fidivl
icebp
xor
jle
out
sbb
xor
aad
mov
mov
hlt
rcl
cmp
rclb
jnp
push
jmp
mov
adc
inc
sbb
mov
mov
fdivrl
test
pop
lods
outsl
mov
xchg
scas
cmp
das
outsl
mov
cs
sahf
aad
xor
dec
pop
sbb
pusha
sub
andb
fistps
into
adc
mov
sub
aaa
add
out
lret
cmc
xchg
mov
sub
sub
pop
xchg
jmp
add
add
push
and
dec
rcll
pop
xlat
push
lods
loop
xor
fstpl
and
insl
xchg
mov
pop
mov
test
lahf
push
pop
push
incb
or
cmc
lahf
sti
dec
sbb
repnz
test
int
xor
xor
add
mov
xor
rcrb
pop
aas
lret
stc
int
add
pop
mov
fnstcw
loope
xchg
xor
xchg
cmpsl
mov
orb
je
or
cmp
mov
jb
popl
in
mov
ret
in
dec
out
jnp
clc
mov
and
mov
ret
jae
pusha
lret
mov
cmp
test
imul
dec
stos
mov
loope
push
adc
xor
mov
addr16
mov
mov
js
aaa
in
rclb
repz
push
pop
jb
lock
bound
lea
ljmp
jno
in
xchg
pusha
cmp
loope
rolb
mov
es
fsubrl
loop
xchg
in
add
sbb
sub
jle
xchg
mov
cmp
pop
inc
xchg
mov
sbb
inc
push
xor
mov
and
pop
push
rcrl
sti
jp
sahf
add
push
ret
cmp
jg
sbb
mov
xchg
jns
fwait
pushfw
cmpsl
addr16
out
sbb
fstpl
inc
outsl
mov
repz
js
bound
cmp
pop
arpl
lcall
mov
mov
test
pop
inc
adc
ret
lock
les
lret
in
or
iret
imul
out
cmp
push
pushf
inc
xor
frstpm(287
call
sahf
pop
jb
jmp
add
dec
lea
repz
mov
mov
and
pop
mov
out
loop
sub
subb
push
arpl
test
aaa
testb
sbb
mov
adc
dec
push
pop
nop
jp
pop
inc
lea
fs
sti
fistpl
mov
cwtl
or
scas
xor
aaa
fsts
pusha
and
jle
add
int3
scas
dec
imul
into
jp
aaa
xlat
cmp
aad
mov
imul
popf
xor
stos
stos
mov
push
push
adc
mov
adc
and
lds
sbb
in
movsl
outsb
jno
mov
cld
and
gs
and
push
add
and
cs
xchg
test
adc
shl
frstpm(287
aam
subb
push
aaa
push
jb
rcrb
in
ds
lds
popf
inc
movsb
aam
ja
popf
rolb
test
out
mov
and
jle
pop
subb
pop
leave
test
cmp
add
cltd
jge
pushf
cmc
jbe
mov
mov
cwtl
xchg
jg
lret
push
mov
not
fstpt
call
push
mov
repnz
push
insl
pop
scas
inc
adc
dec
cmp
movsb
orb
mov
xorb
lea
das
mov
cmpl
test
neg
mov
push
xor
stos
sub
jge
cmpsl
lods
daa
mov
ljmp
shrl
aam
lret
cmp
movd
test
cwtl
std
ret
xchg
scas
ja
cmc
icebp
xchg
repnz
pop
mov
mov
data16
outsl
ja
pop
in
pusha
sbb
dec
mov
sbb
jb
ss
andl
push
testb
add
mov
int
inc
fidivs
xchg
jb
loope
mov
mov
bound
jl
mov
pop
aad
mov
mov
repnz
arpl
cmpsb
fildll
jmp
and
sbb
aaa
pop
imul
and
xchg
and
cmc
dec
sahf
sub
loopne
iret
out
adc
xchg
jb
iret
aam
mov
movsl
mov
pop
test
leave
lea
xor
in
sub
pop
pop
loop
adc
cmp
xor
and
scas
loop
stos
jne
mov
jnp
dec
xor
cli
xchg
popa
add
xor
and
add
loopne
pop
pop
mov
punpckhwd
push
mov
adc
test
pusha
insl
ror
jno
pop
inc
xchg
xor
inc
sbb
in
cmpsb
das
data16
jb
or
out
cmp
push
or
into
mov
pop
xchg
mov
jo
cltd
and
andb
xchg
cwtl
pop
pop
int
imul
xor
jle
sti
daa
test
pop
ret
or
mov
sbb
mov
inc
aaa
loope
push
and
xchg
out
gs
inc
xlat
adc
fstps
dec
inc
nop
orl
sbb
into
jl
jnp
pop
cmp
push
scas
cmp
jmp
pushf
mov
cmp
push
or
negb
xorl
pusha
jecxz
sub
std
xor
jo
fisttps
outsb
cld
in
ljmp
adc
push
loop
pop
mov
inc
push
and
lods
inc
push
sbb
aad
scas
xchg
xor
out
mov
mov
aaa
pushf
add
pop
mov
stos
aam
add
cmp
ret
pop
orb
sbb
icebp
pusha
lret
lahf
pop
ja
jp
mov
adc
pop
leave
rclb
out
fucomip
sahf
cmp
dec
popa
mov
jb
aas
test
fildl
push
std
ds
push
cmp
or
adc
outsl
push
pushf
pop
push
inc
inc
xchg
mov
out
aaa
cs
jns
in
sarl
inc
mov
decl
ljmp
in
jo
adc
adc
pop
not
popa
daa
jbe
mov
ljmp
data16
push
or
stos
in
xchg
cmp
cmpsb
in
loope
add
rcll
dec
das
notl
sbb
cmp
aad
lods
ds
pop
lds
std
aaa
aam
cmp
inc
push
mov
loope
xor
mov
cmp
xlat
push
push
pop
fildl
out
push
fcompl
lock
xchg
pushf
jo
ds
fldenv
mov
loopne
push
repz
fcompl
es
mov
cs
xchg
out
fimull
cmp
loope
dec
movsb
jbe
push
jge
mov
popf
and
or
cmp
sub
inc
cld
popf
push
sub
cmp
sarl
inc
mov
dec
inc
loope
dec
pusha
repz
push
clc
jb
out
mov
jge
sbb
pop
fiadds
outsb
imul
push
mov
jle
std
in
addl
loopne
imul
fstpl
stos
fsubrs
andl
stc
sbbb
cmp
jbe
loope
jle
dec
jno
in
ret
outsb
sub
mov
fcomi
cmpsl
ds
bound
rclb
mov
inc
add
rcrl
adcl
ds
mov
and
ret
cli
push
add
popf
dec
or
shll
pop
out
lock
inc
and
jb
xchg
fs
xchg
icebp
mov
push
push
sahf
pop
sub
in
cmpsb
enter
and
gs
movsl
andl
popa
insw
pop
lock
sti
aam
mov
jns
lods
jle
xchg
pop
rolb
jne
test
inc
and
mov
lods
cmpsb
cli
jecxz
pop
aaa
push
fwait
and
xor
sbb
sub
loope
mov
sbb
and
sti
imul
jle
inc
arpl
fldl
cmp
jmp
inc
or
xchg
loope
xor
jne
add
test
xor
dec
ljmp
pop
pop
bound
or
movsl
xor
movsb
sahf
lds
insl
add
clc
mov
aas
mov
loop
in
pop
ss
sub
sti
dec
testb
jle
test
inc
xchg
call
scas
pop
adc
imul
jno
int
pop
cmp
dec
jbe
lret
aaa
rcrb
push
in
mov
inc
div
pop
push
ret
lret
rol
xchg
xchg
ljmp
sahf
sahf
test
dec
inc
lcall
ss
adc
fimull
inc
dec
jmp
test
lret
imul
dec
test
pop
shrb
sbb
sarl
dec
ret
dec
in
mov
mov
pop
pop
pop
jns
jg
mov
sub
xor
mov
fists
mov
testl
or
loop
pop
fistpl
lock
inc
adc
sub
jne
mov
in
fs
mov
lds
mov
add
mov
inc
inc
inc
adc
push
mov
mov
push
rcrb
cmp
ss
stos
cltd
push
ret
jp
adc
shlb
jns
sbb
or
mov
lret
daa
mov
in
push
aad
out
rcl
mov
aaa
cmp
sbb
fldcw
data16
stos
lods
call
pop
stos
leave
shl
cs
fwait
insl
fistl
jp
jle
scas
jo
inc
xchg
repz
pop
inc
pop
mov
pop
mov
loop
into
fisttpl
jg
pop
inc
xchg
testb
fistps
xor
cmp
in
adc
and
inc
jge
nop
ljmp
fwait
xchg
add
test
push
inc
dec
mov
fistpll
addr16
or
xchg
nop
pop
dec
pop
push
clc
lock
stos
loope
pop
dec
sbb
out
dec
cmpl
sbb
mov
fs
insl
pushf
call
pop
xchg
enter
sub
pop
jae
push
pop
dec
lods
insl
insb
int
fiaddl
mov
shr
arpl
cld
xor
pop
adc
mov
movsl
js
pop
xchg
andb
mov
lock
mov
inc
xchg
out
cmp
into
in
cs
dec
sbb
or
mov
subb
sbb
push
movsl
repnz
dec
addb
icebp
or
movsl
fmuls
push
insb
iret
mov
mov
insl
call
cmp
cmpb
dec
sbb
icebp
pop
mov
cmp
negb
push
and
sahf
inc
arpl
shlb
mov
call
aaa
repnz
mov
in
and
adc
push
jle
jo
popf
stos
es
popf
cmp
stos
add
lea
fidivrs
inc
lcall
enter
fwait
outsb
neg
shlb
xchg
adc
cli
negb
sbb
xchg
icebp
mov
mov
lods
push
lahf
popa
inc
pop
xchg
mov
sahf
push
or
jg
or
mov
cs
dec
ret
lcall
fwait
loopne
push
dec
pop
aam
loop
jne
jb
mov
pop
shl
adc
xlat
ljmp
jle
aaa
ja
fwait
push
lret
sub
cmpsb
data16
cmp
stos
repnz
fistpl
mov
adc
aas
push
xorb
pop
in
jne
pop
push
aad
jg
lahf
push
inc
in
rcrb
pusha
adc
out
lret
sbb
inc
lcall
pop
aam
mov
sbb
lds
xchg
aam
xor
cmp
in
clc
jo
adc
outsb
int
and
jmp
pushf
aaa
dec
jg
ss
cmpsb
jl
cltd
cmpsl
mov
mov
enter
clc
add
fdivs
in
cmp
movsl
arpl
or
jae
adcl
sub
xchg
pop
sub
fwait
outsl
inc
sub
insl
insb
dec
je
xchg
shlb
sbb
pushf
in
jecxz
jns
sbb
jle
lods
add
dec
rcrl
lea
out
scas
xor
sbb
inc
mov
dec
mov
rcrl
dec
idivb
fstl
jno
mov
fisubrs
pop
movsl
repz
inc
cmpb
pop
ja
cmc
bound
xchg
push
sbb
fisttpll
jp
repz
ss
enter
cmc
fidivs
sub
sbb
test
sbb
mov
sbb
hlt
aas
jg
ja
mov
cltd
in
idiv
jbe
cwtl
f2xm1
push
mov
cmp
ja
shl
outsb
cwtl
pop
sbb
in
xchg
xchg
xchg
sub
mov
and
dec
jne
cmp
sbb
cmp
dec
fstpl
xchg
pop
neg
mov
xor
cmpsl
cs
or
mov
push
popf
ficoms
cmp
and
sbb
or
xchg
lret
pop
ss
pop
in
aam
and
dec
cwtl
xor
cli
mov
pushf
adc
pop
scas
mov
das
sbb
mov
ds
push
pop
xchg
mov
loopne
lahf
in
dec
aam
mov
cmpsb
popf
addr16
std
inc
add
dec
test
dec
push
adc
sub
lds
pop
out
ds
pop
call
fcmovnu
idivb
inc
stos
aas
mov
fdivrl
ds
dec
sti
call
iret
jbe
pop
push
ja
sbb
stos
and
outsb
inc
loop
pop
pop
mov
push
push
pusha
ror
stos
jge
lea
aad
lahf
adc
mov
inc
inc
cmpsl
mov
push
daa
cmp
inc
std
pop
icebp
sub
fstps
xor
mov
and
mov
or
mov
lret
jnp
in
movb
add
mov
xlat
mov
outsl
cmpsl
pop
arpl
cmp
dec
jecxz
inc
aas
xchg
in
in
repz
dec
or
lret
xor
ret
cmovb
pop
pop
dec
insl
stos
mov
pop
aam
repnz
je
mov
or
jl
push
lahf
mov
mov
xchg
das
fsubl
mov
adcb
insl
inc
mov
adc
inc
xchg
sub
adc
int3
adc
and
rorl
push
shlb
push
dec
and
sub
jo
out
ret
aaa
ss
fwait
adc
pop
cmpsl
cld
mov
inc
push
jo
lret
arpl
mov
in
lods
cltd
xchg
mov
ss
loopne
pop
cld
dec
out
movsl
mov
pushf
ss
popf
loopne
shr
xor
loopne
pop
or
mov
les
jnp
dec
es
mov
mov
call
adc
xchg
fs
shrl
fistpl
mov
gs
pop
in
divl
cwtl
mov
xor
sbbb
lock
leave
xchg
nop
in
es
xchg
xor
cmp
cmp
mov
sub
and
cs
mov
test
mov
sub
mov
or
sub
pop
call
pop
outsl
aaa
adcb
fnstenv
dec
std
pop
mov
aam
mov
jge
int3
inc
aam
xchg
inc
xlat
sub
push
shlb
push
xor
jns
ret
push
mov
roll
test
jne
sub
xor
mov
aaa
jg
jbe
adc
dec
cld
xorl
sbb
mov
push
push
imul
out
mov
pop
cltd
test
mov
stos
sub
xor
xchg
mov
pop
pop
dec
pop
scas
fisubs
mov
sbb
cmc
inc
and
arpl
pop
sbb
stos
cwtl
test
xor
test
jo
mov
sub
jb
mov
in
cltd
fwait
subl
mov
mov
xchg
adc
add
fisttpll
sub
nop
sbb
pop
mov
lea
sahf
rorb
out
mov
ds
jo
aaa
adc
jmp
xor
ret
dec
push
inc
sub
xchg
dec
faddl
dec
idivl
sahf
adcb
in
pusha
mov
lds
sbb
jbe
push
fwait
cli
test
imul
mov
shlb
mov
outsb
inc
repz
aam
push
dec
mov
jno
inc
sbb
or
pop
lods
and
mov
in
jnp
outsb
call
push
outsb
frstor
fcomps
cwtl
mov
out
mov
idivl
pop
subl
pop
addr16
gs
into
jge
fmuls
mov
sub
loope
jecxz
pusha
xchg
dec
xchg
add
dec
pop
outsb
sbb
rclb
push
lret
aaa
inc
add
sbb
movsb
fs
popaw
cmc
add
stos
fcomp
push
pop
imul
aaa
outsb
int
jmp
ss
and
lods
mov
scas
and
xchg
cmp
inc
push
fisttpll
gs
xor
push
adc
inc
and
adcl
and
adc
xor
stos
movaps
outsb
push
and
and
fwait
add
test
mov
scas
xchg
pusha
mov
dec
dec
aaa
outsl
fistps
lock
sbbb
jge
gs
cmp
lock
jb
lods
hlt
mov
fistpl
sub
and
icebp
das
adc
imul
xchg
xchg
vpandn
push
mov
ss
ljmp
sub
pop
xor
mov
cmp
ret
es
add
and
or
xor
pushf
shlb
psubd
pop
xor
sub
ret
testl
das
push
mov
ds
mov
mov
push
mov
lahf
and
enter
sbb
adc
cwtl
ss
cmovae
shll
outsb
aam
fistpl
enter
cmp
adc
push
scas
mov
sahf
push
int3
fstpt
lahf
xchg
adc
dec
inc
pop
loope
enter
ficoml
loop
or
push
xchg
push
insb
frstor
cmpsb
mov
xchg
jmp
addr16
inc
aas
ss
lods
icebp
jle
pop
out
and
std
je
cmpsb
cmpsl
pushf
xor
pop
loopne
dec
adc
js
push
arpl
adc
movsb
int
jo
popa
jl
adc
mov
ljmp
push
sbb
inc
mov
mov
sbb
and
addr16
lds
ljmp
insl
mov
enter
fildll
push
inc
jno
mov
push
pop
movsb
das
push
loope
aaa
adc
mov
mov
inc
pop
cmp
jmp
gs
aam
jl
ret
enter
pushf
inc
pop
lahf
or
xor
out
cmc
je
jnp
jle
fwait
cmc
ljmp
das
stc
inc
or
xlat
loope
jle
sub
dec
shrl
das
mov
sbb
fisubrs
dec
aam
popa
jnp
repz
inc
aaa
xchg
push
mov
div
movl
sub
dec
xor
inc
cmp
test
mov
adc
and
mov
sbb
cmp
jne,pt
sbb
stos
in
adc
rcll
sbb
outsl
mov
fcmovu
mov
jb
mov
loopne
sbb
aaa
push
add
incb
pushf
push
xchg
dec
lock
fdiv
in
xor
or
in
xchg
in
insl
mov
push
mov
jp
mov
inc
nop
dec
fdivl
fs
and
sbb
aas
std
push
outsb
in
je
pop
imul
xchg
aas
mov
mov
iret
rorl
dec
fstps
jg,pn
pop
mov
mov
outsb
cwtl
mov
ss
aaa
mov
push
in
je
int
jne
xor
orb
mov
jp
mov
jno
fs
adc
fcoml
jp
mov
scas
xchg
lret
pusha
repz
das
and
aaa
rcll
stos
ja
mov
scas
sub
andw
clc
xchg
xor
sbb
jmp
xchg
es
aaa
mov
mov
adc
push
mov
dec
icebp
int
insl
sbb
scas
mov
stos
jno
data16
jecxz
push
loopne
add
sar
cmp
enter
fbstp
out
je
into
pop
repnz
cmpsb
and
aaa
fsubs
cmpsb
push
pop
cmp
lret
add
mov
mov
inc
mov
pop
fistpl
pop
leave
mov
int
bound
shrl
pop
sahf
push
clc
push
pop
cmpsl
mov
push
fldl2e
jmp
lods
dec
or
jecxz
mov
jns
pop
push
xchg
mov
mov
sbb
dec
xchg
scas
lahf
sti
pop
and
js
cmpsb
mov
dec
ds
inc
or
push
nop
insl
mov
sbb
push
pop
and
loope
dec
inc
xor
adc
lock
jmp
movsl
pop
mov
je
push
pushf
nopl
addl
dec
jge
sbb
pop
mov
lret
sbb
mov
mov
insl
not
mov
mov
lret
lock
aam
insw
jg
sbb
add
jb
subl
ss
pop
addr16
mov
cmp
andl
mov
ret
iret
push
mov
rep
and
dec
outsb
add
add
sbb
fnsave
sub
add
jae
je
cld
inc
lcall
arpl
dec
lods
pop
xchg
in
pop
add
jp
daa
insl
in
push
push
or
sbb
ljmp
sbb
sbb
jl
jecxz
out
mov
cld
adc
imul
lock
inc
cltd
lea
xchg
mov
mov
push
cmp
xor
pushf
pop
pop
mov
cmp
xor
pop
mov
stc
fidivrl
cli
iretw
xchg
fnstenv
mov
mov
aaa
cmp
loopne
inc
por
test
mov
push
adc
cmp
les
mov
inc
fistps
sub
sub
jnp
lock
lea
inc
std
and
pop
les
jle
inc
icebp
repz
call
pop
dec
mov
js
lods
lret
jp
icebp
mov
jno
cs
lods
cmp
cmc
sahf
in
add
jo
aaa
mov
mov
cmp
dec
and
sub
repz
mov
dec
out
leave
xchg
stos
cli
add
addr16
cmpsl
repnz
pusha
pop
scas
imul
xchg
je
pushf
sbb
dec
or
xchg
sub
test
push
push
lods
sub
std
cltd
xchg
mov
arpl
cmpl
arpl
sub
xchg
insl
mov
and
test
cmp
ucomiss
repnz
push
mov
push
rol
mov
push
mov
mov
push
scas
add
in
push
cwtl
movl
sbb
cmp
or
xchg
clc
inc
inc
sub
add
repz
push
adc
push
adc
pop
pop
in
ss
cmp
pop
stc
aaa
aam
cmp
in
xchg
push
adc
aaa
dec
xorb
mov
push
jl
dec
jl
cmp
stos
enter
mov
sbb
shlb
mov
jb
xchg
shlb
sbb
lret
das
and
ret
enter
cmpsl
jle
dec
ljmp
data16
sti
pop
sub
sbb
sub
in
jns
inc
inc
movsb
inc
aam
inc
and
pop
push
aaa
int
lret
es
inc
incl
call
pop
loope
clc
arpl
aaa
repz
loope
fstpl
or
nop
stc
jg
mov
lret
xchg
xor
jnp
lods
inc
sbb
mov
push
cmp
push
sbb
sbb
loop
push
cltd
mov
push
jle
daa
xchg
out
jb
mov
adc
lock
test
jno
loope
aaa
pop
sti
nopl
mov
inc
aad
test
sarb
xchg
js
enter
jb
sbb
adc
mov
jb
dec
mov
bound
std
pop
out
push
pop
or
daa
ficomps
outsb
sbb
inc
push
in
shl
loopne
sbb
dec
sub
add
and
mov
cmp
pop
sbb
out
jmp
loope
inc
sbbb
popa
push
push
jecxz
push
mov
mov
shrb
test
jge
and
mov
xor
outsl
mov
popf
stc
pushl
adcl
mov
add
call
cmp
dec
lcall
addr16
jb
pop
jg
ficoms
inc
testb
sub
or
dec
fmuls
sbbl
in
push
jmp
push
ret
inc
xor
aaa
xorl
add
nop
cmp
and
data16
push
lret
ds
lahf
inc
sti
movsl
aaa
cmpsl
lret
cmp
addr16
adc
popa
jno
int
mov
shll
mov
inc
aad
insl
sbb
xchg
bound
jns
pop
jle
bound
fnstenv
movsl
pop
dec
out
xchg
aaa
mov
push
dec
outsb
sbb
in
cmp
cmpb
iret
pop
movsl
shll
call
sub
cld
push
sub
fdivs
aaa
int3
push
or
and
ss
and
push
std
arpl
sahf
lods
pusha
jbe
insl
jbe
sub
scas
popa
ss
cld
bound
dec
fdivl
cwtl
mov
es
movsl
mov
les
iret
sbb
call
sub
lods
jnp
sbb
mov
pop
rcrb
aam
mov
jbe
xchg
xchg
cmp
jecxz
pop
mov
sub
mov
add
fs
ficoml
mov
mov
and
dec
jb
inc
dec
lock
jnp
cmp
mov
pop
adc
ja
sub
xor
int
inc
xchg
mov
or
imul
lret
call
pop
shrl
cwtl
mov
ss
movb
fdivr
and
stos
xchg
outsb
jle
jae
sub
mov
add
mov
dec
leave
xorl
lea
dec
addr16
push
call
and
jnp
test
jle
xchg
dec
test
test
cs
pop
add
lahf
mov
cs
add
sbb
cmp
add
ss
mov
xor
mov
push
sbb
inc
push
movsl
xor
cmp
aad
jge
ja
ja
imul
pushf
stc
stos
push
jnp
movsl
stc
enter
sbb
jne
pop
shrb
stc
xlat
insl
xorb
cmpsb
dec
test
and
gs
mov
inc
sub
sti
icebp
pop
inc
xorb
into
push
cltd
ret
sbb
ss
pusha
nop
push
add
jle
fstpt
jle
sub
jg
sub
add
pop
lcall
int3
stc
sub
pop
je
out
mov
jle
sbb
sbb
and
test
pop
mov
push
loope
out
outsl
sbb
pusha
hlt
or
std
pop
rorb
dec
ss
mov
pushf
imul
andb
jne
mov
shll
cmc
aam
push
pop
das
dec
daa
fistl
aam
lea
sub
mov
in
cli
fisubs
jecxz
loopne
add
ret
pop
fnstenv
enter
sbb
ss
cld
mov
jecxz
jno
sub
sbb
dec
jmp
pushf
sub
sub
outsl
dec
popf
jb
xor
clc
sub
icebp
dec
sub
jmp
test
nop
add
out
rolb
mov
and
inc
ret
jle
ds
int
mov
dec
loopne
mov
mov
xchg
xor
or
pusha
out
push
add
dec
repz
jnp
aaa
dec
std
sub
mov
repz
arpl
inc
jbe
or
inc
cmp
dec
and
jg
ret
cmp
lods
imul
mov
lcall
scas
dec
js
loope
sub
xchg
xor
rcrb
js
sub
mov
xor
inc
stos
jecxz
loopne
outsb
cmp
rcrb
out
mov
nop
arpl
in
sbb
inc
cmp
scas
loope
inc
xchg
sub
call
pop
mov
test
scas
mov
pop
je
aaa
push
mov
xor
cmpsl
jbe
in
and
jmp
cmp
test
add
ss
or
adc
lret
ss
pop
cli
and
push
dec
cmp
and
icebp
ret
sub
test
mov
sbb
mov
lret
dec
adcb
and
xor
add
lahf
repz
lahf
mov
jmp
sub
es
jmp
or
push
cmp
mov
repz
in
out
add
stos
shll
movl
push
and
adc
call
js
pop
aas
adc
stc
cmp
aaa
cli
fisubrl
sbb
pop
pop
jl
shl
push
jnp
inc
dec
sbbb
jmp
lcall
xor
inc
inc
lods
mov
mov
mov
dec
aam
xorw
fwait
mov
imul
jmp
fdivrl
cwtl
lret
pop
mov
pop
loope
je
cmp
int3
lds
dec
sarl
scas
mov
sbb
xchg
and
jecxz
dec
iret
xchg
pop
mov
xor
mov
movsl
sar
rcrl
pop
pop
test
nop
out
andl
test
loop
int
push
mov
cmp
mov
add
cmp
fisubrs
mov
push
mov
xor
pushl
loope
xchg
pop
cmp
push
ret
enter
outsl
int3
push
xor
pop
ss
mov
mov
ret
out
test
fists
outsl
pop
jmp
lods
sub
jp
push
xchg
mov
add
jmp
jno
setp
and
aam
pop
out
xor
jge
test
mov
jne
ficompl
push
shlb
daa
sbb
in
enter
jle
mov
push
inc
call
sub
push
es
clc
enter
lret
movsb
pop
pop
fisttps
add
adc
lcall
ss
data16
lcall
pusha
movsl
imul
ret
pusha
in
pop
popf
lret
mov
dec
lret
aaa
sarb
push
xchg
in
es
repz
push
lock
rol
inc
adc
mov
inc
outsb
dec
lock
enter
jp
mov
xchg
xor
xchg
andb
fs
sar
cmp
mov
lahf
rcll
ds
fcoml
shl
inc
and
fs
push
ss
pop
call
lret
loopne
sub
in
jmp
ret
pop
data16
movsb
push
jmp
mov
mov
lahf
jns
adc
dec
add
push
mov
sub
cmp
jl
cmp
xchg
and
push
pop
punpcklwd
aad
divb
rcrl
sbb
adc
add
cmp
mov
xor
inc
das
je
repz
xor
outsl
pop
xor
in
jo
dec
sbb
insl
sbb
icebp
out
or
push
rcrl
cmpsl
stc
xorb
imul
jmp
mov
jle
pop
mov
into
jne
aaa
lods
dec
out
pop
xchg
or
dec
test
cmp
or
mov
outsb
mov
aas
out
sbb
in
push
ss
xor
fcmovne
xchg
jnp
lea
cltd
pusha
pop
lods
push
pop
sub
je
cld
aaa
aad
push
inc
fndisi(8087
mov
xor
or
dec
hlt
out
movb
clc
xor
inc
sub
mov
push
mov
les
xlat
add
mov
lret
aaa
inc
test
push
je
icebp
repz
outsl
adc
das
ds
addl
sbb
out
imul
sub
outsb
scas
mov
push
sub
mov
xchg
mov
mov
pop
xor
sbb
enter
mov
loopne
subb
dec
sbb
scas
std
or
sub
aaa
stos
jo
cltd
mov
ret
pusha
dec
shlb
xchg
sti
cmpsl
repnz
lds
aaa
in
mov
dec
adc
mull
pop
das
dec
xchg
cmpsl
leave
mov
add
daa
hlt
sbb
ljmp
repz
xchg
stos
out
imul
mov
shll
call
lret
adc
pop
shl
stc
ljmp
outsb
inc
fbstp
cmp
inc
pop
loop
int3
inc
in
enter
js
arpl
jo
mov
lds
mov
push
aad
or
fdivl
stos
sahf
xchg
lea
out
cmp
jbe
mov
mov
in
xor
mov
sub
xor
cli
push
sbb
ficoml
xchg
cmp
jne
cs
push
call
enter
les
xor
outsb
shlb
fs
inc
out
xchg
xor
mov
adc
mov
fsubrl
inc
dec
sti
mov
xor
in
cltd
and
push
push
enter
pop
mov
inc
pop
push
xchg
shll
adc
out
ret
adc
adc
scas
in
mov
push
adc
add
scas
push
stos
dec
nop
insb
dec
lret
icebp
mov
in
or
push
and
xor
pop
outsb
mov
aas
cmp
add
jp
xchg
popa
jnp
icebp
push
test
inc
pop
pop
iret
mov
xchg
sub
sbb
aad
pop
ss
aaa
sbb
pop
add
sbb
cmp
lcall
jl
xor
pop
movsl
xor
push
adcl
cli
movsl
mov
idivl
mov
hlt
lahf
inc
aam
out
mov
jae
insb
pop
movsl
inc
sbb
imul
jae
pop
cld
pop
leave
in
push
addr16
or
sti
and
aaa
test
out
sahf
xor
pop
push
cli
push
loopne
add
dec
loope
arpl
xchg
bnd
inc
and
add
les
dec
aaa
mov
cwtl
aaa
jns
rolb
in
fstpt
add
or
popa
jne
pop
add
ret
fsubs
stc
mov
jl
pop
mov
enter
or
jmp
out
stos
aad
mov
add
test
mov
jl
lret
jp
mov
pop
push
sbb
out
and
in
outsb
mov
jl
das
cmp
jecxz
insl
das
pop
mov
xchg
sbb
or
mov
fsts
inc
push
sti
out
jne
push
jecxz
in
sbb
dec
js
dec
nop
xlat
les
out
push
adc
xchg
pop
mov
mov
cmp
in
notb
mov
imul
ss
pop
push
mov
push
scas
nop
pop
adc
mov
movsl
and
insl
pop
sub
mov
orl
xor
ss
stos
mul
xchg
imul
mov
mov
aam
inc
insb
or
lds
mov
es
add
sbb
add
mov
loope
jle
push
xchg
jnp
out
pop
lret
cmpsb
add
push
add
je
popa
loop
bound
adc
in
test
cmc
movsl
lea
imul
add
xor
mov
loope
mov
cli
popa
or
mov
mov
lret
mov
sbb
xor
outsb
sbb
jmp
or
lret
jne
sbb
push
outsb
xchg
sbb
ret
jmp
mov
shlb
ret
and
pop
lods
incl
jne
out
push
add
xchg
arpl
xchg
insb
cmp
sub
and
lea
int
push
or
in
add
adc
xor
jecxz
ffree
rorb
movsb
aad
push
scas
xchg
mov
repz
cmp
std
sti
outsl
mov
pop
loope
xor
adc
push
imull
inc
testb
faddl
pop
lret
jle
push
pop
rcrb
sbb
data16
push
loopne
sbb
cmpsl
mov
xchg
sahf
jno
aaa
fstpl
pop
js
push
adc
test
aam
out
jo
js
inc
xchg
or
clc
jecxz
shr
dec
jns
in
adc
pop
or
sbb
sub
mov
push
cmp
nop
jle
pop
shrb
sub
jnp
push
clc
jg,pn
jo
push
adcl
dec
pop
repnz
mov
loope
sbb
aaa
ret
cmp
inc
jge
out
jp
adc
push
jecxz
or
imul
add
inc
cmpsl
aam
xchg
aas
out
test
cmp
mov
bound
jle
sbb
loopne
add
into
rorl
adc
lods
or
lods
popf
pop
test
int
mov
mov
xor
repnz
into
and
and
inc
loope
sub
and
jnp
sarb
and
jo
adc
mov
jae
sub
fwait
sbb
and
pop
jne
sub
cld
xchg
push
pop
pop
mov
pop
jnp
jp
pop
lock
mov
out
inc
in
jb
jecxz
lahf
lock
dec
pop
scas
pop
stos
ficomps
mov
mov
xchg
cli
fbstp
mov
loop
jb
pop
xchg
push
ret
adc
mov
mov
cltd
notl
cld
icebp
adc
push
ljmp
pop
cmp
jo
movsl
and
xorb
pop
or
gs
push
ss
jecxz
or
test
or
test
mov
lods
cmp
cmp
pushf
aaa
imul
pop
cmp
cwtl
push
dec
fisubl
dec
js
insb
outsb
pop
push
inc
jo
cli
mov
xchg
xchg
pop
and
sbb
and
dec
push
out
add
and
mov
pop
rol
test
call
gs
cmpsb
pop
cmp
lods
cwtl
icebp
andb
ret
sarl
enter
pop
xor
sbb
enter
pop
lods
aaa
or
pop
or
in
cmp
lods
imul
pop
lret
loope
aaa
dec
test
pop
rorb
sbb
pop
ss
insb
scas
cmpsb
jne
aaa
stc
cmc
lret
int
in
test
das
sahf
lcall
pushf
fstpt
iret
out
faddl
into
xor
sbb
sbb
push
lods
aas
cmpsl
and
push
pushf
jo
aaa
jbe
mov
fimuls
lods
add
cwtl
aam
loope
pop
pop
push
pop
push
aam
sbbl
lret
jbe
push
sbb
push
jp
std
rcrb
andb
sahf
xchg
ss
int
or
mov
pushf
aaa
lret
outsb
jl
pop
into
jle
lret
loope
out
inc
lock
push
mov
out
in
adc
inc
std
adc
test
and
xor
push
jle
fs
cmp
lods
mov
popa
sti
fxch
fisubrs
in
push
ss
out
xchg
jle
setnp
pusha
mov
bound
mov
mov
dec
mov
lahf
dec
inc
jnp
inc
cmp
dec
push
ret
popf
push
jnp
icebp
dec
std
stos
lods
jecxz
mov
push
jne
movsl
add
scas
xchg
popf
orb
dec
inc
mov
or
jo
std
sarl
pop
fldt
rorb
add
mov
cmp
into
ss
sbb
mov
inc
push
outsb
rcrl
add
nop
jl
movsb
mov
xchg
sub
cwtl
rolb
aam
add
ljmp
pop
or
sahf
shll
repnz
mov
and
popf
fisubs
push
inc
pusha
xor
mov
xchg
out
jle
insl
sub
mov
outsb
in
mov
fwait
inc
sbb
cmp
lea
gs
mov
aaa
in
rclb
sti
mov
pop
in
pop
sbb
jno
cs
fisubrl
adc
testl
mov
adc
add
je
aaa
in
fistps
mov
sub
pop
sub
inc
rcll
push
pop
into
mov
shlb
mov
jp
jmp
mov
jge
mov
add
dec
imul
stos
mov
fldt
aam
mov
push
ss
es
lds
sub
inc
add
and
jbe
fs
dec
inc
adc
out
and
mov
push
add
sbb
pop
sbb
fcoml
adc
test
add
rorb
add
ret
cmp
jne
mov
lods
repz
cmp
sub
and
add
push
pop
inc
sub
das
fdivrl
ud0
xorb
repz
aam
xchg
ljmp
ret
jl
stos
cmpsb
stc
ja
enter
mov
sbb
mov
mov
pop
mov
adc
mov
rolb
stc
in
inc
ss
aaa
xor
mov
adc
arpl
movsl
inc
push
psllw
xor
mov
inc
pop
mov
add
mov
xchg
cmc
push
data16
icebp
movb
xchg
mov
popf
loope
inc
sarl
xor
call
mov
dec
jo
cmpsb
lods
test
cli
sbb
mov
repz
mov
gs
cmc
lahf
fdivl
mov
lock
outsb
repz
push
insb
stos
dec
pop
pushf
mov
jno
pop
push
mov
dec
aaa
lock
mov
outsb
fisttpll
sbb
and
insb
push
push
add
adc
mulb
mov
or
dec
jns
das
lods
jecxz
pop
pop
fmulp
inc
xchg
and
fdivrs
fsubr
aaa
pop
pop
cltd
jb
ja
cmpsb
loope
popf
mov
xchg
jb
aaa
sub
lahf
pop
out
or
mov
mov
cmp
cmp
sub
xor
sub
pop
movsb
push
lret
fcoms
push
ds
popa
leave
out
jmp
mov
fistl
push
pop
mov
pop
mov
mov
ljmp
addr16
mov
jno
sbb
aaa
cmp
negl
cltd
mov
jle
pop
adc
add
ret
mov
mov
xor
dec
loop
cltd
mov
adcb
testb
push
xchg
std
in
rcrl
dec
inc
mov
icebp
mov
sbb
mov
fdivrl
js
lret
pop
fisttps
pop
int
cltd
loope
sbb
cltd
mov
sarl
adc
aaa
jge
scas
cli
sub
sub
out
cmp
cmpsl
iret
pop
bound
ror
sbb
adc
jge
int
sub
jg
and
testb
int3
pop
and
aad
mov
test
pop
jl
sahf
push
sbb
cltd
push
mov
mov
mov
shrl
mov
stos
or
add
sub
pop
inc
sbb
push
jp
lahf
push
int
cmp
lret
pop
addb
das
into
std
jle
inc
sbb
hlt
lds
lds
outsb
std
sbb
sti
xchg
insb
pushf
mov
test
xchg
pop
lcall
and
std
jle
mov
loope
push
jb
in
mov
cwtl
scas
pop
cs
arpl
addr16
push
push
push
inc
fyl2x
push
jecxz
cmpsl
icebp
add
test
mov
mov
sti
jge
loopne
imul
loopne
xor
push
mov
push
sub
call
and
jns
sub
addr16
lcall
add
push
push
shlb
inc
int3
repz
fistpll
adc
inc
bound
sbb
sbb
pop
add
ss
mov
mov
cmp
pop
stc
test
xor
pop
sub
inc
les
mov
decb
addr16
cmp
pop
push
xor
jns
addr16
xor
add
jl
push
repz
cmpsb
testl
stos
and
outsl
jo
enter
stos
jmp
divb
push
mov
addr16
jb
sub
inc
push
or
sti
loopne
xor
arpl
inc
and
stc
ss
jno
pusha
dec
leave
and
dec
inc
jne
push
mov
lock
cmp
jge
add
loope
stc
adc
cli
lret
adc
enter
pop
fidivl
pop
inc
and
fstpl
ss
outsl
pop
adc
rcpps
and
out
jae
pop
mov
jbe
sbb
js
push
pop
lods
jno
test
xchg
push
out
and
ja
insl
sub
outsl
sbb
push
mov
outsb
sbbb
inc
jle
xlat
filds
xor
lret
xor
xchg
jae
les
pop
adc
mov
psllw
cmp
jl
enter
imul
lock
addr16
jle
in
push
add
lcall
pushf
add
repz
pop
push
dec
xor
cltd
pop
das
sub
add
inc
jle
fsubs
lock
imul
repnz
or
test
mov
push
and
out
push
sub
bound
int
jp
mov
psubq
mov
push
stc
je
dec
inc
sbb
xor
lret
xor
dec
int3
sbb
shrb
fstl
and
push
push
push
sbb
xchg
pushf
clc
jle
cmp
xchg
xor
push
lret
pushf
ss
and
fiadds
push
repnz
pop
mov
dec
mov
lods
push
xor
pop
movsb
negl
stc
dec
cwtl
lods
jno
pop
andb
and
mov
in
xchg
icebp
gs
popf
les
in
dec
icebp
mov
inc
xchg
add
stos
push
mov
mov
into
fildl
mov
repz
cmp
sahf
jbe
and
jp
lcall
and
push
cmp
imul
in
imul
pop
inc
test
out
ss
fucomi
pop
push
inc
cmp
ss
mov
and
sbb
sti
clc
xchg
sbbb
or
sub
ja
and
out
popf
push
loopne
loope
stos
pop
test
fwait
stos
add
pop
jns
aaa
sar
shl
sub
xorl
jp
mov
sub
mov
ss
adc
jg
jle
mov
push
in
and
aam
aaa
lret
sub
in
push
push
mov
test
add
hlt
rolb
xorl
fnstcw
in
cltd
mov
mov
xchg
cs
movb
mov
popa
stos
jmp
xchg
test
dec
sbb
jl
inc
cli
cli
jmp
adc
das
sub
inc
mov
pop
jecxz
fadds
jl
loope
lea
mov
arpl
inc
inc
pusha
inc
test
cmp
mov
aad
add
test
shlb
out
mov
push
mov
repz
inc
in
jmp
add
cli
or
mov
popa
scas
add
push
add
sub
mov
cs
ds
pop
sbb
mov
outsb
test
xchg
mov
imul
scas
jne
pop
xchg
xchg
cmpb
mov
ds
add
mov
mov
inc
push
cmp
bnd
fstpl
mov
jecxz
ja
loopne
xor
push
mov
pusha
dec
nop
or
xorb
mov
lret
repz
or
sub
inc
aam
fldcw
dec
enter
test
imul
ss
jae
dec
repz
aas
mov
hlt
sub
fwait
mov
fistpll
ljmp
pusha
rcl
pop
movsb
in
xchg
cmovbe
ja
iret
shr
sahf
vpsrad
adc
or
cmc
popa
cmp
push
mov
xchg
dec
cmp
test
inc
push
mov
out
jl
fsubr
scas
and
pop
in
mov
mov
add
enter
adc
pop
outsb
or
gs
mov
jbe
imul
ss
add
push
out
pop
mov
lret
aaa
insb
mov
aaa
dec
cmp
sub
repz
leave
jge
data16
adc
push
and
mov
xor
in
lods
inc
mov
mov
inc
aaa
jbe
pop
outsb
mov
int
negl
dec
mov
fmul
popf
mov
dec
pop
mov
sbbl
shr
mov
cmp
inc
imul
je
mov
mov
insb
xchg
lock
push
sbb
mov
insb
cmpsb
dec
test
sbb
xor
mov
xchg
push
mov
add
mov
add
lea
sub
pushl
pop
loopne
lea
push
pop
mov
fidivrs
and
and
mov
fists
sbb
shrl
es
repz
push
repz
jl
das
sbb
mov
out
pop
mov
js
dec
mov
outsb
adc
aaa
cmp
mulb
lea
dec
nop
into
int
int
jns
add
ret
cltd
add
jecxz
push
xor
subl
dec
mov
mov
dec
ficoml
inc
add
mov
cmpsl
push
in
ja
sbb
outsb
test
sbb
sbb
jge
popa
ss
repnz
outsb
mov
push
lret
mov
mov
xchg
pop
les
sub
out
jnp
sub
loope
pushf
jmp
jecxz
ret
push
add
mov
test
in
jp
out
push
jge
pop
adc
mov
sbb
mov
cmpsb
pop
fildl
test
and
sbb
std
test
out
inc
test
xor
iret
add
or
mov
cmpsb
push
add
jns
add
lea
push
add
repz
aas
test
fldcw
rorb
ds
dec
aam
and
into
and
adc
jl
flds
or
cmp
inc
outsb
cmp
mov
stc
stc
inc
pop
xchg
jno
jne
xchg
sub
popfw
lahf
ret
cld
push
ds
add
loope
lock
inc
ljmp
std
sbbb
mov
push
or
push
jle
mov
outsl
fidivl
jp
in
pop
lret
into
aad
xchg
cmp
es
fadds
mov
ljmp
sbb
outsb
xchg
stos
dec
push
or
pop
adc
call
pop
mov
aam
or
mov
mov
xor
xlat
pop
push
ss
das
inc
movsl
pop
mov
pop
pop
stos
fistpl
mov
fistl
sti
push
sbb
cmp
mov
leave
mov
pop
addr16
inc
cmp
dec
xchg
cmp
std
stos
add
popf
aaa
les
pop
mov
dec
xchg
lcall
inc
and
or
stos
es
mov
test
jne
mov
clc
pushf
inc
arpl
cmpb
test
mov
cltd
push
outsb
mov
cmc
fists
cli
dec
das
xchg
rorl
and
icebp
int
xchg
pop
aaa
cmpb
stos
inc
and
loopne
ds
test
int3
ret
sub
sub
addr16
mov
mov
jp
in
xor
cmc
cmp
ret
push
shrb
mov
push
ret
sarl
flds
cli
aam
mov
mov
mov
inc
pop
and
repnz
sbb
dec
fistl
gs
data16
mov
cmp
mov
xor
lock
xchg
popf
lahf
adc
sub
lock
pop
scas
pop
xchg
push
mov
loopne
dec
pop
arpl
insl
lahf
xchg
arpl
in
rolb
std
push
insb
push
fdivp
lds
ljmp
imul
adc
inc
dec
add
test
mov
loopne
leave
bound
aam
cmp
addr16
scas
in
lds
jne
jge
fs
xorb
push
fmull
fisttps
sbb
or
sub
fnstsw
jecxz
in
add
cli
test
adcb
out
into
cltd
pushf
pusha
sbb
push
aaa
push
test
cmp
mov
cmp
adc
iret
popf
or
mov
pop
popa
dec
sarb
scas
call
push
dec
sbb
lods
jecxz
xchg
outsl
ds
iret
sub
push
sbb
lahf
and
stos
lahf
mov
jmp
mov
jp
mov
ret
mov
test
jno
outsb
sbb
mov
mov
arpl
aam
stos
les
fstl
or
je
xchg
clc
add
outsb
pop
sbb
push
adc
stos
dec
cmp
pop
mov
mov
cmp
bound
push
aaa
or
dec
and
std
pop
out
pop
push
and
cmp
inc
lret
mov
mov
pop
sbb
ds
pop
add
into
xchg
mov
push
fldl
fs
sub
rcll
aas
jp
sub
jp
pop
pop
mov
insl
sbb
inc
decl
out
aaa
inc
pop
mov
int
push
push
cmp
push
in
inc
adc
xchg
mov
sbb
lods
mov
faddl
push
jno
mov
clc
dec
mov
cmp
out
pop
jnp
pop
std
fnstcw
xchg
int
push
sar
add
pop
mov
push
adcb
mov
popf
test
cs
inc
sub
dec
jbe
icebp
out
sub
shll
scas
push
ja
aaa
pop
lods
loope
test
xchg
lret
mov
scas
sti
xchg
shrb
mov
push
inc
jae
imul
or
cmp
dec
mov
mov
bound
pop
jg
mov
rclb
je
fstpt
aad
mov
cmovae
negl
xor
add
push
dec
lcall
pop
xor
xchg
stos
pop
jmp
add
bound
insb
jge
dec
and
inc
in
dec
cmp
or
jg
lea
stos
jnp
dec
mov
mov
imul
mov
inc
bound
scas
clc
mov
inc
lcall
pop
lods
inc
inc
sarb
mov
ja
shlb
movsb
int
lock
mov
in
in
jne
sarb
mov
jno
subb
pusha
mov
jp
adc
roll
imul
push
mov
add
jbe
mov
pop
xor
aas
in
mov
arpl
test
push
xor
lods
fsubrl
fsubrs
mov
cld
push
jmp
jo
dec
adc
repz
in
add
repnz
enter
sub
inc
clc
and
in
std
push
jnp
mov
cltd
std
dec
pop
xor
cld
xchg
scas
sub
daa
mov
int
inc
push
lea
mov
out
fwait
xorb
insb
add
imul
sbb
fisttpl
data16
mov
push
cmpl
sbb
jle
mov
aam
push
xchg
jp
pop
adc
int3
push
cmc
sub
mov
push
push
pop
int
rorl
dec
push
sub
mov
push
push
and
ret
js
cwtl
sbb
pop
sbb
sbb
pop
jmp
orb
dec
out
adc
imul
rcl
inc
mov
dec
adc
jle
or
cltd
or
lea
mov
inc
mov
mov
mov
dec
inc
es
rorb
in
add
xchg
or
in
cmp
or
xchg
data16
repz
dec
icebp
popf
pop
mov
outsb
sbb
inc
das
mov
lea
stos
xlat
subb
push
push
mov
jbe
sub
push
pop
jns
jmp
xchg
jnp
pop
in
cmpsb
fs
paddd
popa
cmpsb
stc
jle
sub
imul
pop
js
mov
pop
ss
and
push
stos
mov
add
sub
test
sbb
fimuls
push
jle
pop
cmpsb
dec
mov
imul
sub
push
ds
xlat
cmpsl
inc
sbbb
push
das
add
pop
insl
ljmp
jne
test
out
aad
icebp
sub
push
bound
mov
imul
jnp
adc
xor
int
xor
or
loope
fidivrl
inc
fnstcw
and
xchg
or
pop
jae
push
pop
sete
decb
cmpb
sarl
stc
push
cli
sub
mov
jp
sbb
jo
fildl
xor
stos
sub
mov
fistps
inc
bound
adc
add
jg
bnd
push
xchg
add
cmp
sti
out
jecxz
fistl
je
sahf
add
pop
mov
mov
movsl
dec
fiadds
ss
rorb
lods
and
or
fdivrs
xor
or
jmp
lock
mov
loope
lret
cld
das
pushf
xchg
lret
dec
and
mov
cld
aaa
push
pop
cmp
push
sub
popa
testb
in
clc
cmpsl
addb
jb
adc
pop
hlt
nop
sub
adc
lods
dec
aam
pop
mov
arpl
nop
mov
into
mov
cmp
jo
clc
es
mov
decl
pop
test
repnz
loop
adc
insb
pop
sub
sti
pop
into
dec
sarl
push
and
out
pop
pop
or
aam
inc
js
ret
pushf
mov
push
mov
pop
xor
test
mov
pusha
lea
inc
push
jle
pop
sub
fwait
sahf
mov
inc
cmp
pop
stos
repnz
insl
inc
repz
sbb
push
or
push
adc
and
mov
call
js
dec
cmp
addb
in
sub
xor
test
dec
rolb
mov
cli
push
xchg
xchg
call
nop
aam
in
adcl
bound
cmp
add
pop
outsb
sbb
jb
or
dec
icebp
nop
out
xor
fstl
aam
sub
xchg
pop
out
inc
pop
sysexit
outsb
jmp
test
sbb
aaa
movsl
leave
jl
push
pop
shl
sbb
stos
push
xor
aam
std
cmpsb
into
sahf
add
negl
cld
xlat
scas
cmp
aaa
insb
popa
mov
icebp
aas
hlt
sub
add
mov
pop
xor
push
insl
mov
add
push
aaa
popf
subl
aam
xor
dec
sub
dec
cmp
mov
jg
subb
mov
add
sar
and
cmp
pop
jbe
outsb
sbb
stos
mov
push
mov
pop
mov
fsubr
stc
scas
js
cmpsl
inc
test
pop
cmp
sbb
mov
jb
inc
pop
ss
ret
inc
cmpps
insb
ss
repz
in
int
jge
ss
inc
lret
push
add
push
insb
loopne
xchg
loope
pusha
mov
pop
mov
dec
fxch
xorb
fistpl
mov
add
and
jae
popa
xchg
loope
pop
jecxz
mov
sar
sub
fwait
sub
mov
or
sub
add
and
xchg
adc
sub
out
or
mov
mov
lock
fwait
icebp
data16
mov
pop
mov
jbe
mov
mov
adc
xchg
xor
fnsave
into
cld
loope
pop
add
pop
xor
arpl
int
cs
sbb
mov
mov
adc
imul
jne
in
xchg
push
movsb
jg
push
test
ret
jle
cmp
ljmp
sahf
dec
loope
aaa
lret
popa
rorl
xchg
mov
adc
sbb
mov
pop
clc
mov
orl
and
das
mov
repz
in
adc
stos
lea
outsb
sbb
cld
ljmp
pop
in
andb
jmp
jb
lock
loop
pop
int3
lods
push
std
clc
movsl
cmp
jle
or
jnp
sahf
add
jo
jnp
push
dec
dec
fstpl
aaa
popa
aad
mov
lcall
jmp
cmp
movsl
sub
insl
lods
pop
cmp
out
out
adc
ss
inc
and
in
mov
outsl
aaa
popf
sub
adc
out
mov
sbb
mov
in
pop
jnp
fdivl
aam
outsl
xor
xlat
add
fisubrl
cmp
mov
mov
int
mov
rorl
test
jecxz
test
adcb
gs
ds
popf
mov
adc
in
popf
insl
dec
inc
aaa
pop
rclb
add
out
enter
adc
adc
std
dec
cmp
mov
test
shlb
nop
call
mov
stos
scas
jge
and
pusha
andl
jmp
pop
xchg
adc
popf
lods
outsb
jns
gs
mov
cmpb
jns
and
shlb
fistps
jbe
andl
in
pushf
rolb
inc
pop
out
push
outsb
add
inc
xor
jne
sub
sub
mov
add
in
push
inc
mov
aaa
cmp
mov
pop
xchg
shr
xchg
loope
adc
xor
add
loopne
loope
movsl
cwtl
mov
jnp
insb
pop
mov
xor
jbe
sub
icebp
cmp
sarl
jp
jnp
add
xchg
out
cmp
popa
js
mov
sbb
jge
arpl
pop
or
dec
pop
xor
in
test
iret
insl
xlat
out
pusha
outsb
push
fdivrs
mov
mov
call
loope
mov
push
ja
sub
add
bound
sbb
cmpb
push
pop
loope
and
xchg
stc
test
lods
jnp
dec
test
lcall
dec
mov
jmp
sub
clc
cmp
xlat
pop
shrb
xchg
push
icebp
adc
push
mov
ret
push
test
pop
sub
sti
popf
sbb
and
out
test
movsl
out
inc
nop
add
nop
inc
add
xor
pusha
movhps
mov
push
into
mov
movsl
in
sahf
xor
sbbb
mov
mov
push
xchg
inc
enter
pushf
sbb
fisttpl
repz
cmpsl
mov
jbe
pop
sbb
push
fdivrs
dec
mov
pop
aaa
and
and
addr16
and
pop
lahf
pop
les
jno
mov
arpl
pusha
fmull
in
or
sub
arpl
popa
adc
and
iret
pop
in
int3
push
ss
in
inc
mov
cmp
mov
inc
adc
mov
mov
out
cs
push
lret
pop
insb
sub
mov
mov
push
lea
lock
sbb
pop
sbbb
xor
and
mov
jns
jmp
push
jo
divb
pop
mov
pop
ret
enter
sub
mov
in
inc
js
aaa
jecxz
outsb
sbb
and
cmp
and
adc
fdivs
sbb
jle
push
out
adc
stos
repz
xchg
push
mov
daa
cmp
nop
pop
sub
out
lods
xchg
mov
fyl2x
inc
jmp
sbbb
sbb
test
std
int
rcrl
lret
loop
std
add
adc
mov
xchg
cmpb
das
out
xor
xor
dec
pop
aam
lods
cmpsl
pop
rorb
dec
adc
xor
mov
mov
jns
out
jbe
mov
scas
decl
jnp
js
sarb
outsb
pusha
jmp
dec
adc
arpl
cmp
push
cli
and
xor
dec
jbe
add
xor
mov
out
inc
adc
cld
add
sub
push
mov
cltd
cmp
pushf
dec
test
jp
fcompl
xchg
dec
inc
ss
or
xchg
add
push
ret
pop
aas
inc
adc
das
outsl
push
das
sbb
push
pop
pop
test
aaa
and
sbbb
repnz
jb
jl
jno
shrl
or
lahf
jmp
add
sbb
pushf
fldenv
pushf
dec
or
aaa
or
jle
sbb
roll
inc
add
mov
inc
ret
test
fcom
cmpl
push
sbb
insw
xor
std
sbb
pushf
sbb
aaa
inc
outsb
in
sub
ds
pop
js
sbb
std
dec
xchg
pushf
into
outsl
ja
test
jns
xchg
lahf
push
in
add
popa
xchg
cmp
cmc
cmp
cmpb
mov
dec
stc
icebp
mov
push
mov
or
mov
insb
or
and
fnstcw
fmuls
shlb
clc
sbb
jmp
and
xlat
ret
lds
insb
pop
setle
clc
in
jle
sub
mov
subb
movsl
add
popa
icebp
cmp
sub
call
lods
aam
push
rolb
ds
mov
out
das
pop
adc
leave
inc
rol
movsb
jp
cld
dec
sbb
sti
std
int
dec
add
in
into
mov
mov
dec
in
push
fidivs
pop
pop
mov
repnz
mov
and
jecxz
cs
jp
mov
out
push
fmull
mov
jle
loope
mov
mov
xor
jb
shll
inc
in
clc
push
incl
movsl
imul
inc
mov
add
inc
repz
adc
cmp
add
mov
xchg
fdivl
int3
outsb
lods
sbb
hlt
arpl
les
push
subb
enter
nop
int3
jne
or
fcompl
push
imul
mul
jmp
adc
in
lds
pop
xor
js
mov
in
test
and
aaa
fninit
push
pop
stos
loopne
xchg
jg
test
out
sub
mov
xchg
fimuls
mov
shll
jge
lea
aad
imul
imull
xchg
or
ds
imul
xlat
push
inc
fxam
mov
xchg
sub
inc
xlat
mov
les
stos
into
outsb
scas
push
push
pop
fcomps
lods
in
cli
push
xor
push
add
outsb
xor
push
sbb
push
jnp
sbb
fxch
mov
mov
adc
xor
add
cmp
shlb
subl
sub
cwtl
mov
mov
mov
adc
mov
hlt
push
push
push
scas
sbb
add
lcall
adc
xchg
ss
add
fs
pop
shlb
mov
sbb
mov
sbb
xchg
aam
xlat
push
mov
pop
inc
push
ljmp
adc
jecxz
jle
ljmp
or
out
data16
mov
pop
mov
and
dec
ss
and
fistl
orb
in
mov
popf
movsw
rcrb
out
pop
popa
mov
std
outsb
sarl
pop
mov
ret
inc
add
and
mov
add
inc
lods
inc
das
xor
fwait
xchg
scas
daa
inc
std
adc
loopne
repz
xchg
lods
adc
push
sub
push
jle
push
xchg
adc
jecxz
loope
xchg
int
dec
push
jne
nop
addr16
aas
cli
push
outsb
mov
fistpl
mov
lret
xchg
ret
sahf
sbb
dec
mov
xlat
adc
add
mov
ss
dec
lea
lret
cltd
pop
jo
cmpsl
lods
adc
stos
lock
push
cld
xor
and
adc
aam
sti
mov
inc
push
cld
loopne
sub
es
or
sub
outsb
mov
pop
outsb
push
sbb
movsb
addr16
fwait
aas
dec
sbb
pop
aaa
call
push
adc
sbb
fadd
mov
shll
cmp
icebp
sub
sub
push
call
push
bound
nopl
les
aaa
push
dec
in
xor
mov
adc
rolb
push
es
repz
xor
ds
or
fldt
pop
ret
adc
rolb
ja
push
lcall
mov
dec
mov
mov
cld
mov
inc
xchg
jl
push
pop
pop
inc
sub
repz
pop
cli
mov
jge
sub
outsb
push
test
xchg
pop
xchg
call
in
in
lcall
pop
mov
sub
jne
dec
out
jne
mov
mov
popa
and
cmp
mov
fcompl
cmp
movq
mov
sub
dec
jle
ffree
ss
or
push
mov
sub
aam
call
mov
icebp
clc
ja
add
and
lcall
inc
inc
stos
xor
xchg
sarb
shlb
mov
leave
imul
mov
jns
cmc
sbb
and
shlb
push
pop
sbb
pop
or
adc
stos
mov
mov
push
add
repz
dec
sti
cmp
sahf
push
push
mov
inc
adc
xchg
xor
push
call
xor
xchg
mov
pop
stos
xchg
push
gs
in
std
pushf
pop
jle
dec
cmpsl
ret
jno
adc
mov
mov
mov
and
inc
in
sahf
xchg
sbbb
mov
mov
mov
mov
aaa
or
sbb
fs
enter
ret
les
clc
inc
pop
mov
mov
inc
mov
scas
aas
movsb
sub
clc
sub
dec
fnstsw
cmp
js
movsb
mov
faddl
js
cmpb
push
cmp
lock
cmc
cmp
sub
test
pop
dec
test
sub
adc
mov
jg
scas
pop
xor
inc
add
jp
in
popf
lcall
mov
in
jge
push
jo
es
out
outsb
icebp
lock
push
mov
or
pop
loopne
cltd
mov
ret
stc
jle
mov
lea
dec
enter
pop
push
xchg
xchg
mov
lret
shll
aaa
sbb
xchg
pop
mov
lret
push
cmp
ret
fistpl
mov
dec
jecxz
call
insb
notl
movsb
lods
mov
mov
jle
mov
loopne
or
jg
adc
pop
xor
sbb
loope
pop
adc
mov
sti
out
insl
and
or
xchg
cli
dec
imul
cmp
mov
push
xchg
arpl
inc
popa
icebp
inc
xchg
cld
push
data16
mov
mov
lret
add
hlt
cmp
dec
pop
ds
sub
jecxz
xchg
add
inc
mov
jmp
test
cmc
aas
jne
adc
in
mov
fsubrl
push
pushf
xchg
push
inc
mov
or
add
cli
stc
fstl
mov
sarb
lock
xchg
stos
sbb
mov
scas
xchg
inc
pop
jnp
stos
pop
dec
adc
out
cmp
es
frstor
jecxz
out
mov
or
test
fistpl
inc
push
sti
in
dec
xchg
inc
cltd
addr16
dec
mov
cwtl
dec
jmp
dec
push
fisttpl
cmp
lret
pop
out
ja
push
clc
xor
cmp
mov
nop
in
mov
mov
mov
jbe
and
xor
cltd
loope
and
stos
push
jo
repz
fnstenv
xchg
cwtl
jbe
adc
pop
xor
pop
enter
test
mov
sub
and
arpl
dec
sti
pop
cmp
push
or
inc
adc
aaa
aam
push
or
lahf
pop
imul
adc
fcomip
jp
mov
jns
jmp
es
aaa
mov
outsb
xchg
push
sbb
jb
push
popa
and
movsb
jno
lcall
frstor
sbb
cmpsl
jns
push
loopne
icebp
mov
sarl
push
ss
adc
xchg
lret
cli
in
popa
xchg
cs
enter
push
std
cltd
push
pop
outsl
into
sub
jge
adc
sbb
push
jnp
outsl
call
imul
jge
les
mov
jecxz
dec
dec
jo
rcll
and
outsl
ds
push
sarl
aaa
ss
ret
mov
in
lret
adc
pusha
ss
dec
pop
pop
fsubr
jecxz
call
hlt
adc
in
xor
jecxz
js
repnz
add
jl
sbb
push
lahf
mov
adc
movsl
push
push
mul
arpl
cmp
mov
cmpsl
aaa
incb
ljmp
in
adc
cmp
imul
mov
jmp
popf
inc
add
movsl
dec
cmp
inc
addr16
filds
or
and
cmp
jbe
sbb
subb
lret
shlb
mov
int3
insl
sbb
lcall
jp
popf
pusha
aaa
jecxz
hlt
pop
int
int
adc
imul
jnp
pop
jb
jp
mov
cmp
mov
or
xchg
dec
outsb
mov
lea
inc
bound
jnp
aaa
add
addl
stos
pop
stos
sbb
mov
test
test
mov
sub
pop
test
fucomp
int3
cltd
add
repnz
push
or
pop
cmp
dec
popa
mov
cmp
pop
ja
test
push
lods
push
cmp
pop
cltd
push
test
stos
popl
pop
and
mov
jmp
inc
sahf
stos
jmp
call
dec
jecxz
push
loopne
sub
das
lods
mov
imul
loope
inc
xor
das
test
imul
mov
jl
test
loope
mov
aaa
call
fdivr
xor
cmp
out
lds
cwtl
cli
mov
sahf
pop
cli
outsb
out
leave
pop
xchg
add
adc
or
and
sub
arpl
sbb
sub
jg
push
push
and
xor
sub
add
je
mov
sbb
cmc
outsb
pop
inc
dec
icebp
and
ret
pop
sbb
sbb
mov
dec
inc
jge
push
pushl
pop
sahf
inc
rep
das
push
lds
sahf
jae
loopne
out
cld
cli
sub
test
fistpl
and
adc
arpl
xchg
in
mov
addr16
or
hlt
inc
outsb
or
arpl
cmp
imul
sub
jns
fistpl
std
sbbb
jbe
and
in
xor
ficompl
adc
addl
inc
fwait
xor
add
ret
lock
sbb
cmovne
inc
jp
sbb
clc
xlat
push
les
pop
dec
icebp
pop
rcrl
jae
pop
mov
and
push
fcmovne
icebp
repnz
cltd
sahf
in
ss
mov
push
sub
cmp
test
push
loop
sbb
sbb
pop
stos
fs
outsb
mov
fwait
mov
inc
pop
add
jns
jbe
cmp
movsb
iret
adc
push
stc
es
sub
test
adc
push
push
imul
xor
ret
popf
pop
cmp
loopne
arpl
enter
cmp
ret
sub
ss
fcoml
daa
ss
inc
jle
cmp
and
std
stos
cmp
out
je
jne
aaa
scas
loope
fsubrs
ret
jns
adc
cmp
imul
xor
mov
inc
fs
xchg
xchg
pop
ja
nop
stos
ret
cwtl
outsb
stos
aaa
leave
xlat
addr16
in
arpl
adc
mov
shrb
fwait
repz
out
xlat
mov
pop
movsb
xorb
in
cmpsl
cmp
mov
fsts
rcrl
and
mov
repz
shl
mov
or
cli
mov
notb
mov
sahf
push
jge
xor
dec
es
cmp
loopne
sub
inc
and
jecxz
push
bound
mov
mov
dec
fcompl
adc
cmp
fdivl
and
jle
xchg
js
imul
dec
adc
inc
xchg
jae
lahf
push
lock
movd
cmp
cld
mov
xchg
aaa
clc
mov
rcll
mov
xor
adc
sub
add
mov
pop
mov
lods
es
fnstenv
lock
pop
jno
incl
jne
push
sbb
icebp
or
lret
or
xor
gs
mov
pop
jle
lds
adc
pop
pop
or
adc
imul
sbb
mov
aaa
testb
xchg
loope
fstpl
outsb
dec
aad
fcoml
adc
call
mov
push
or
test
movsb
adc
push
push
mov
fdivs
sub
rcll
push
adc
in
pop
mov
push
ja
mov
repnz
in
xchg
pop
mov
mov
outsb
jns
fucomp
lea
mov
test
mov
inc
adc
rolb
dec
or
in
mov
gs
sub
icebp
fldenv
pop
test
mov
pop
cmc
int3
mov
pop
sbb
push
xchg
or
xchg
inc
lcall
pusha
cmpsb
or
movsb
out
inc
add
adc
sub
adc
loopne
push
cmp
lods
sbb
mov
in
int
and
pop
adc
cmp
sub
ljmp
dec
frstor
inc
ds
sbb
jge
mov
lods
inc
push
lock
push
bound
stc
sbb
inc
adc
aaa
xor
mov
loop
in
ss
push
cmc
mov
out
in
mov
jne
ss
lret
push
sbb
clc
push
push
add
lds
sbbb
dec
xchg
incl
aam
xchg
aad
lods
aas
ss
pop
scas
imul
jo
pop
mov
xchg
call
and
rclb
pop
add
fadd
js
lea
pop
sbb
pop
into
pop
dec
in
jae
pop
leave
xchg
jb
stos
shr
mov
shll
aas
cmp
xchg
lcall
jl
jno
push
pop
mov
je
xchg
cld
jl
adc
fdiv
cwtl
pop
inc
pushl
aaa
inc
daa
cmp
mov
shrb
jmp
and
je
repz
cmp
ret
sar
stos
dec
sahf
pop
jmp
add
xchg
lcall
imulb
xlat
sbbl
pop
jmp
aam
sbb
and
sbb
cmp
sbb
add
push
imul
cmpsl
loopne
dec
push
mov
ja
jae,pt
sbb
decl
sub
jnp
and
xor
mov
aaa
scas
das
push
inc
jns
jle
gs
inc
cmp
out
or
adc
or
divb
outsl
pop
stos
mov
rolb
jmp
outsb
lods
inc
or
mov
and
add
std
adc
mov
ja
mov
sahf
dec
mov
addl
xchg
call
enter
add
add
add
notb
jmp
lock
je
cwtl
aaa
cmpsb
jno
cmp
add
bound
and
push
xchg
pop
jb
mov
pop
sub
add
outsb
rol
shlb
sbb
add
scas
xor
push
out
lea
pop
mov
aas
inc
pop
jbe
adc
ficoms
insl
pop
mov
pminsw
clc
push
out
repnz
out
cmp
arpl
aaa
xchg
fdivs
ds
scas
subl
lods
sbb
leave
mov
inc
sbb
inc
jnp
add
xor
xlat
and
mov
jl
and
pop
fcmovne
sbb
cmp
mov
jecxz
or
jb
xchg
push
pop
or
lods
pop
xchg
fs
mov
xchg
mov
ss
shll
pop
das
xchg
push
push
pop
or
pop
enter
insb
faddl
pop
push
sbb
lcall
aad
push
and
pop
push
pop
pusha
sbb
push
mov
pop
pop
jg
lods
dec
xchg
xor
inc
pop
fstps
fldcw
jne
mov
aaa
stos
sbb
and
adc
add
in
cmp
jbe
out
cltd
fiadds
mov
in
leave
in
mov
xchg
pop
shrl
jmp
or
ss
in
mov
sbb
sbb
shll
test
xchg
xor
jg
sub
or
int3
sbb
setns
adc
ds
aam
test
mov
sub
fmuls
pop
hlt
dec
es
push
adc
xor
dec
jmp
inc
lock
lret
add
cltd
sub
mov
cmp
in
pop
fisttps
jns
dec
inc
fdivr
adc
push
imul
cmp
cmp
je
inc
lea
inc
mov
lcall
stos
aaa
cwtl
lea
xchg
lods
xor
dec
and
popa
jne
insb
cltd
mov
shll
cmp
sub
jae
lldt
xchg
sti
scas
sub
andb
sub
jmp
xor
xchg
je
fisttpll
mov
pop
lret
in
xchg
inc
sbb
inc
adc
hlt
mov
jg
xor
sub
jno
sub
mov
inc
loope
pop
adc
std
xor
outsb
leave
cmp
push
in
adc
data16
mov
loope
cltd
xlat
jmp
cmp
mov
adc
and
int
or
mov
ret
xor
push
imul
out
out
jno
mov
jbe
pop
push
mov
lea
push
jns
lods
xchg
pop
sbb
js
xor
or
pop
jbe
in
adc
sub
pop
pop
push
mov
mov
dec
jg
jle
cmc
aaa
dec
cmpsb
and
leave
mov
ret
dec
pop
fcompl
lds
adc
js
inc
cmpsl
lret
or
in
xor
pop
and
std
pop
sbb
js
mov
mov
pop
lods
xchg
pop
shlb
sbb
fisubrs
pushf
xor
jecxz
and
inc
pop
cltd
cmp
adc
cmp
pop
cmp
sbb
or
pop
das
mov
shrl
lcall
bound
in
or
sub
and
das
push
mov
sahf
test
mov
add
or
out
sbb
jns
outsl
lods
and
or
ret
idivb
add
int
in
pop
cmpsb
jge
adc
xchg
and
inc
sahf
cwtl
cltd
cmp
push
xor
fucom
sbb
pop
mov
mov
loope
cmpsb
jo
dec
cmpsl
mov
add
adc
fwait
mov
mov
cmp
daa
out
scas
push
ret
nop
mov
rol
in
pop
jecxz
mov
add
mov
int
mov
in
sbb
sub
popa
leave
mov
xchg
fmul
sub
rcrl
cli
pop
adc
inc
ss
xlat
xor
or
loopne
call
test
mov
push
aaa
rorb
xchg
jo
adc
pop
jns
scas
adc
outsl
mov
or
dec
mov
inc
push
sbb
xchg
shll
lods
flds
add
add
jno
enter
pop
xor
sub
ret
sub
mov
mov
popf
fsubr
and
push
in
mov
jb
sub
adc
sbb
mov
test
mov
aad
jmp
pushf
sbb
mov
lahf
out
or
lock
lret
sbb
pop
pushf
pop
mov
sub
inc
jle
ss
cmp
pop
int3
mov
arpl
fcomps
imul
loope
push
incb
inc
stos
loope
in
dec
pusha
inc
xor
pop
shlb
push
fcompp
lock
sub
fsubrs
aaa
jp
inc
data16
xchg
clc
enter
sbb
sub
push
mov
pop
in
inc
lret
ljmp
daa
lods
sbb
arpl
and
jp
aaa
cmp
repnz
xorb
ret
sti
mov
outsb
xlat
pop
inc
and
loopne
xor
xor
sbb
imul
lahf
fs
rcll
fabs
xchg
mov
es
jge
cmp
pop
or
add
push
mov
notl
pop
jl
push
and
sbb
push
add
les
inc
ficoms
cmp
mov
dec
out
shlb
cmp
lret
jp
pop
aam
inc
scas
loope
js
adc
jle
mov
lcall
sbb
xlat
pop
and
mov
cmp
inc
push
and
pop
cmpsl
out
test
iret
mov
aaa
jnp
xchg
sbb
testb
and
or
ret
push
push
xchg
ss
push
fisubs
add
push
ret
call
dec
jmp
xchg
sub
push
in
push
rorb
push
loope
bound
jae
and
les
fstpl
rcr
mov
xchg
fsts
mov
sbb
fstpl
dec
cs
fs
cs
lock
and
filds
cmp
lock
ss
sarl
loop
mov
loope
shlb
dec
testl
pop
cmp
pop
rolb
sbb
in
int3
dec
in
loopne
test
fprem
cmpsb
ja
outsb
ret
push
sub
adc
adcb
imul
and
inc
sub
ss
xchg
xchg
mov
fwait
inc
stos
mov
test
or
pop
sub
mov
mov
and
cmpb
addl
imul
mov
cmc
aam
or
shl
mov
adc
adc
or
add
insb
lret
pop
into
fs
mov
inc
je
push
scas
in
shrb
mov
enter
mov
lret
loopne
dec
mov
mov
movsl
and
adc
cmp
shrl
xchg
lock
jge
ss
into
xchg
lret
jo
js
xor
fstl
sti
push
adc
and
in
add
call
xchg
dec
pop
pop
sbb
jecxz
aaa
popf
shrb
push
xchg
out
mov
outsb
repz
mov
jae
xor
dec
mov
jle
push
sti
pusha
repz
je
pop
xchg
mov
loope
push
sbb
push
cmpsl
call
shr
pop
call
pop
ss
pop
sarl
xlat
adc
sbb
xchg
lea
pop
in
sbb
rolw
ds
sbb
mov
or
leave
mov
decb
in
sub
xchg
mov
in
aas
mov
adc
fcmovnb
call
add
push
lea
sbb
test
push
sbb
dec
outsb
sbbb
mov
mov
mov
nop
cmpsl
imul
push
fwait
sahf
sbb
rcrl
addl
aaa
sub
addb
fstps
cld
pop
sub
cmp
xchg
sbb
loope
push
rclb
popa
fwait
or
lock
sbb
loope
in
sahf
jmp
cmp
sti
inc
cmpl
pop
jb
imul
mov
lods
mov
jae
out
xchg
dec
xor
mov
subb
mov
xchg
mov
ds
lcall
andl
nop
fwait
and
fnstcw
mov
mov
fnstsw
pop
inc
xor
adc
scas
fld
test
sub
push
or
sbb
ja
ss
pop
mov
dec
mov
fdivrs
les
mov
insb
cmpsb
mov
adc
mov
int
cmp
mov
stos
jge
outsb
popl
pop
pop
fildll
cmpsl
pusha
cmp
test
xchg
xor
sti
gs
or
ss
jo
clc
ljmp
mov
dec
cmp
and
cmpsb
lret
cld
in
rcl
fidivrs
cmp
cmpsb
roll
decb
sbb
mov
mov
jae
xchg
bswap
es
notl
or
sub
mov
cld
pop
icebp
push
dec
arpl
mov
es
out
pop
sub
pop
inc
pop
std
jae
aaa
lds
mov
pusha
sahf
test
lret
outsb
push
scas
xor
inc
jbe
jno
push
shl
and
pop
aam
jnp
gs
lahf
insb
cmp
inc
mov
cmc
sub
xor
loope
negl
lods
in
or
aaa
jbe
dec
cltd
ret
daa
aam
pusha
inc
fnstenv
jbe
pop
fwait
pop
cmpl
ret
xchg
xorb
and
mov
popf
pop
xchg
je
dec
icebp
in
inc
push
and
or
mov
outsb
xor
fistl
adc
leave
arpl
jl
pushf
xchg
push
decl
fisubrs
mov
sahf
jae
aaa
xchg
push
ret
pop
xor
mov
mov
shll
pop
dec
mov
imul
cmp
das
pop
in
mov
cltd
dec
js
xor
xchg
faddp
mov
cmpsl
mov
jle
adc
loope
cmp
test
nop
add
clc
movsl
pop
adc
or
js
jge
fstpt
sub
stos
jne
push
sbb
mov
jecxz
inc
das
and
lds
fcmovnu
cld
iret
ficoms
sub
fidivs
mov
test
xor
mov
xor
jle
mov
adc
cmp
jo
jno
insb
or
jno
outsl
test
lret
and
pop
push
and
lea
outsb
sub
scas
scas
xor
xchg
jge
mov
sti
nop
mov
out
add
pop
mov
push
sbb
pop
test
mov
sub
int
push
inc
add
adc
inc
pop
incb
dec
leave
insl
movl
inc
mov
sbb
xchg
bound
movsb
mov
push
ss
add
mov
mov
sahf
sti
loope
jno
sub
mov
test
jp
cwtl
std
cltd
mov
orb
add
imul
dec
cmp
lods
aaa
mov
je
jb
xchg
pushf
sbb
in
push
jg
adc
mov
and
repz
sub
popa
add
inc
test
mov
adc
sti
nop
ret
pop
or
xor
mov
outsb
fsubrs
stc
clc
outsl
dec
shll
inc
push
xchg
pop
sbb
jo
mov
and
xor
mov
scas
lcall
push
pop
ja
pop
adc
pop
cmpsl
cmp
loopne
dec
pop
sub
stos
xchg
push
and
std
pop
mov
les
jnp
xor
pop
add
jbe
xchg
xchg
and
or
adc
call
in
pop
cs
mov
jb
push
aas
dec
lahf
mov
push
test
ret
pop
adc
cli
jmp
aaa
xchg
xor
jbe
inc
xchg
xchg
xor
repz
mov
mov
dec
cwtl
pop
inc
enter
adc
arpl
push
inc
lods
fcompl
stos
ret
les
cmpsl
and
pop
or
outsb
mov
mov
addl
xor
outsb
pop
insl
cmp
pop
or
mov
cwtl
mov
jmp
lock
jnp
cld
jp
out
hlt
jle
ja
ret
in
sub
roll
xchg
repz
bound
sbb
push
sbb
in
inc
inc
sti
xor
popf
or
les
lea
or
or
jle
outsl
adc
in
adc
xchg
in
pop
sbb
mov
lret
mov
dec
or
mov
mov
and
ljmp
sub
cltd
sub
repz
jbe
push
mov
sti
out
pop
mov
mov
lret
leave
popf
adcl
push
xchg
mov
das
pusha
sbb
fcompl
bound
pushf
xchg
sub
mov
inc
xchg
test
push
push
add
and
dec
jne
sub
sub
into
jno
shlb
pop
sahf
lods
dec
nop
std
and
and
hlt
ss
arpl
aam
cmpsb
and
lcall
stos
cmp
das
sub
bound
out
popf
dec
mov
xchg
cmp
stc
add
arpl
sbb
xor
cmp
cltd
xchg
out
icebp
out
aas
xchg
cmp
lcall
pop
sbb
inc
fdivrs
aaa
dec
pusha
or
inc
pushf
jae
xor
inc
enter
test
push
pop
in
incl
testl
ljmp
aam
notl
xor
lea
mov
xchg
shll
jl
adc
or
dec
inc
ss
cltd
sarl
cld
cwtl
mov
xor
pop
pushf
xchg
scas
in
sbb
jns
loope
xchg
pushf
punpckhwd
out
aaa
mov
repz
mov
inc
inc
lcall
pop
enter
addr16
hlt
icebp
pop
xchg
add
pop
jmp
rcrb
inc
mov
push
mov
imul
jo
cmp
andb
lcall
mov
loop
push
popf
in
and
cs
sub
out
dec
outsl
sub
jg
stc
mov
aaa
js
aaa
orl
stos
adc
xor
loopne
cmpsl
sub
arpl
cltd
adc
in
ficompl
lret
inc
or
dec
cmc
cltd
arpl
in
loopne
xor
stos
mov
pusha
pop
push
push
js
push
jns
scas
adc
sbb
dec
pop
mov
push
sbb
jo
inc
jne
pop
lret
push
aas
cmp
loop
sbb
xchg
inc
sbb
cmp
jmp
addr16
mov
insb
mov
clc
lods
jle
hlt
icebp
pop
xchg
cltd
jne
pushf
aaa
in
xchg
cmp
ret
or
lods
dec
sbb
loope
xor
je
cmpsb
rclb
sbb
pop
pop
movsb
fcmove
out
xorl
mov
pusha
call
inc
xchg
sub
test
mov
jo
std
or
ret
jne
nop
out
sub
xchg
jl
cmp
ss
aaa
cmp
sbb
andl
push
cmp
jge
xchg
rclb
xor
ss
pop
fsubs
cmpsl
divb
int3
repz
pop
push
sub
sbb
add
mov
iret
xor
xchg
sbb
outsb
loop
push
cli
pop
outsb
roll
add
int
xchg
xor
stc
mov
xchg
aaa
jmp
test
movsl
pop
inc
stc
in
pop
sub
pop
add
rcr
pop
mov
aaa
aas
or
or
jge
pop
or
in
adc
add
mov
mov
xor
sbb
aad
pop
sbb
mov
dec
inc
pop
icebp
aaa
arpl
mov
jmp
loop
ss
aad
rcrl
icebp
mov
mov
inc
fldt
scas
ss
pop
loopne
pop
scas
cld
shl
test
xchg
icebp
data16
sbb
loop
cmp
fcompp
sub
mov
ret
or
dec
addl
and
shlb
cwtl
or
xor
cmc
mov
mov
dec
pop
xchg
cmp
xchg
loopne
ja
test
lahf
das
mov
dec
mov
inc
add
std
adc
test
adc
popa
push
jo
or
pop
fscale
cwtl
pop
loopne,pt
pop
cld
cmpsb
int
mov
jno
xor
jno
mov
sub
pop
and
es
mov
pop
sbb
pop
cltd
adc
lea
je
xchg
inc
jae
sti
jmp
cmp
jp
xchg
xor
ss
cmp
adc
pop
adc
and
movsl
inc
push
loop
cmp
pop
popa
fistpll
std
adc
sub
sbb
cwtl
icebp
mov
outsl
add
loopne
mov
call
gs
cmpl
sbb
int3
pop
les
dec
pop
sar
mov
jecxz
fistl
mulb
push
pop
test
out
mov
add
call
bound
jb
cwtl
dec
loopne
inc
out
dec
lods
sahf
aaa
je
mov
and
into
dec
fsubr
insl
rcl
add
jle
dec
jl
negl
sbb
pop
sub
pop
enter
addr16
mov
pusha
adc
jnp
lds
mov
xchg
pop
subb
push
and
cwtl
repz
push
adc
inc
sbb
sub
jbe
mov
dec
int3
add
shlb
in
and
lcall
mov
ret
push
pusha
inc
cmp
mov
xor
push
insb
xchg
push
push
mov
mov
ret
xlat
sbb
xor
mov
pushf
in
aaa
stos
push
cli
ror
or
jno
jle
push
aas
loope
orl
lods
jno
sbb
inc
inc
cmp
das
icebp
cmpsl
fisttpl
imul
pop
mov
or
fmul
js
imul
pop
iret
aaa
sbb
test
aas
cld
or
jge
stc
cmpsb
dec
sbb
pcmpeqb
pop
push
imul
imul
cmp
scas
fisttps
test
push
rolb
dec
inc
xor
push
stc
jb
add
pop
inc
aam
loope
mov
icebp
sbb
add
sub
xor
sbb
xchg
lret
cltd
dec
sub
pushf
push
dec
faddl
cmp
xorb
adc
es
jle
and
addb
fisubs
sbb
lods
out
shl
or
clc
pop
lea
iret
das
les
andb
aam
mov
xor
ss
inc
lahf
cld
test
out
icebp
cltd
dec
xchg
adc
dec
ss
hlt
rorb
test
fnstenv
sahf
call
loopne
aam
ss
cmp
sahf
repz
xor
jle
mov
pop
aad
or
call
xor
mov
arpl
enter
fdivs
mov
invlpg
aad
push
sti
fimuls
mov
nop
dec
loope
inc
cs
mov
pop
bound
mov
mov
cs
mov
std
inc
jb
sub
pop
xchg
push
loop
imul
negl
notl
xor
sub
ret
aaa
popf
xchg
jno
loope
push
sub
das
push
push
jl
inc
pusha
push
aaa
scas
or
es
inc
cmp
mov
mov
fdivl
jecxz
adc
jp
push
xchg
repz
orb
push
mov
mov
mov
push
ret
in
and
les
lods
daa
mov
inc
jl
gs
and
jnp
mov
cmp
lret
push
aaa
mov
outsl
in
movsl
jmp
fdivrs
scas
test
repnz
mov
xor
les
jno
or
in
pop
dec
das
jp
cmp
xlat
pop
adc
orl
mov
mov
dec
xor
scas
xor
push
loope
push
imul
pop
popf
pop
scas
mov
out
pop
dec
lea
sbb
shrl
gs
cmpsb
popl
fstps
sub
jg
sbb
jbe
xor
push
jno
pop
mov
addr16
xchg
rclb
pop
xor
mov
fst
addr16
add
xor
pop
mov
xchg
dec
fdivrl
scas
jns
cld
cs
mov
leave
mov
int3
sbb
inc
imul
das
es
push
movsb
adc
cs
or
cmpsl
push
mov
lock
data16
pushf
xor
repnz
in
test
and
ret
pop
lods
sbb
mov
aad
xchg
mov
cmpsb
sub
xchg
mov
pop
data16
xor
mov
insb
int3
jo
push
xchg
stos
pop
int
pop
data16
push
inc
push
pop
ja
ss
push
pushf
sbb
mov
hlt
adc
cmp
stos
test
push
mov
in
inc
cwtl
sub
cmp
loopne
aam
test
iret
pop
movsl
inc
or
inc
add
fwait
mov
mov
sub
pop
fcmovne
out
mov
add
fsubrl
stc
mov
test
sub
pop
gs
push
push
cmp
adc
dec
es
ljmp
adc
dec
push
test
sub
fucomp
mov
adc
aaa
in
jecxz
xor
sub
lock
push
inc
mov
repz
push
rorl
insb
roll
cld
push
pop
sbbb
int
cmp
aaa
push
mov
dec
jg
mov
cmp
mov
stos
test
fmul
repz
cmpb
mov
lea
or
or
add
cmp
jnp
aam
adc
enter
mov
int
bound
aad
sarb
mov
mov
pusha
sti
add
sub
test
stc
jmp
cli
sbb
inc
jmp
imul
aaa
xor
mov
push
inc
outsl
sbb
sbb
mov
hlt
fdivs
xchg
mov
loopne
les
in
xchg
pop
stos
sub
fdivl
xlat
fdivrs
cmp
inc
mov
adc
adc
and
outsb
mov
popf
xor
or
sbb
loop
push
movb
pop
loopne
js
and
into
add
adc
into
lods
push
fwait
mov
xchg
lods
movsb
xor
jae
sbb
into
or
pop
xchg
jbe
dec
mov
lea
mov
fdivs
or
sbb
lahf
and
pop
fisttpl
stc
sti
mov
xchg
js
add
and
in
and
adc
or
cmp
ss
adc
aad
int3
insw
dec
cmp
jmp
inc
notl
in
shrl
sbb
jge
push
mov
mov
push
dec
mov
and
dec
inc
pop
call
aaa
ljmp
outsb
mov
lea
jp
and
loope
nop
mov
out
xchg
or
inc
jl
rolb
mov
leave
test
cmpsl
in
mov
loope
adcl
push
adc
int3
loope
jmp
inc
xor
pop
push
jbe
insl
pop
or
in
shll
je
jge
sbb
mov
lcall
and
sbb
add
ja
mov
cmp
pop
cmp
test
insb
in
cld
insb
mov
cmc
decl
popf
cmp
xchg
test
aaa
loopne
int3
sahf
xorl
push
push
jmp
cmp
sub
xchg
pop
and
pop
jo
mov
mov
pop
and
rorl
fdivp
rorl
sub
sbb
push
xchg
pop
negb
stc
je
and
les
das
sub
and
and
pop
pushf
in
in
icebp
mov
test
movsb
jle
in
jo
xor
rorb
push
push
lods
out
xchg
fcoml
cli
pop
dec
int
sbb
and
jb
mov
adc
sub
pop
popf
shl
sbb
cs
adc
pop
mov
jns
popa
loope
jecxz
inc
jge
xor
fcoml
lahf
mov
hlt
adc
pop
rcl
les
mov
int
fs
jns
das
mov
adcb
xor
repz
push
cmpsb
ret
mov
xlat
cwtl
lods
push
mov
push
ret
mov
mov
mov
push
mov
ja
xchg
jp
stos
fsubrl
cld
mov
dec
iret
mov
and
bound
mov
pop
fldl2t
push
mov
scas
push
mov
jg
xchg
rcr
lahf
dec
int3
fnsave
sub
lret
pop
jle
or
or
cltd
mov
jle
dec
mov
push
jmp
cmp
lcall
mov
jo
pushf
icebp
dec
stos
dec
inc
cmpsb
enter
dec
rorb
mov
das
add
stc
mov
xor
mov
rsqrtps
jnp
and
inc
sbb
repz
icebp
les
cmp
mov
mov
push
in
std
add
xchg
adc
aam
nop
int3
dec
pop
lcall
hlt
jle
sbbb
push
sbb
cmp
adc
pop
fsub
mov
clc
ret
in
fsubrs
arpl
sarl
inc
xchg
jp
xor
inc
sub
jo
mov
cmpsl
adc
pmaxub
push
adc
ficompl
sub
ds
add
aad
xor
out
mov
pop
push
xchg
mov
cmc
faddl
idivb
sbb
cmpsb
mov
sub
pop
add
cld
jno
cltd
xchg
sub
sbb
jno
dec
stc
sbb
aam
push
pop
jns
push
scas
dec
sbb
sub
repz
inc
pop
or
movb
ds
icebp
inc
sbb
inc
fistl
pop
push
jbe
mov
mov
lods
dec
push
lods
xchg
pop
mov
pop
and
xor
in
in
pop
arpl
pop
outsb
jo
jg
sub
stos
or
and
push
push
popa
mov
fstps
xor
aam
ss
mov
and
inc
xchg
lods
pop
adc
fcom
mulb
aas
inc
mov
das
subb
jle
lods
jmp
das
jae
fwait
mov
adc
mov
mov
cmp
lcall
loope
xor
cmp
imul
push
out
mov
mov
in
and
roll
imul
xchg
cltd
push
add
lock
mov
xchg
add
inc
push
mov
sbb
jo
add
aad
mov
loope
pushf
sub
cmp
and
imul
and
jg
sbb
leave
add
mov
lds
ja
jb
sahf
mov
pop
sbb
pop
movsb
inc
data16
add
pop
sbb
es
push
loope
mov
mov
xor
scas
inc
inc
ss
mov
aas
xorb
dec
mov
aad
aaa
adc
pusha
mov
jecxz
loope
add
sti
out
cmp
aas
jle
inc
fisttpll
aaa
enter
sbb
jo
mov
aam
mov
mov
sub
cwtl
inc
shlb
rcr
test
in
push
mov
scas
imul
fldcw
loopne
rorl
mov
rcll
in
popa
in
mov
pop
subb
ret
insl
xchg
je
lea
dec
pop
mov
bound
adc
mov
push
mov
js
pop
pop
mov
imul
in
push
or
pushf
jns
mov
sub
dec
pop
fs
fldl
add
cld
scas
popf
push
or
dec
or
into
hlt
mov
in
ret
and
inc
pop
enter
xchg
lret
push
jge
loope
jle
fs
int
pop
or
push
mov
insl
sbb
push
lret
sub
addl
fdivs
mov
repnz
add
fsubl
mov
mov
add
xor
push
dec
adc
int3
mov
dec
pop
jb
sbbb
and
test
jecxz
test
pushf
sub
andb
xor
or
adc
inc
clc
popa
push
enter
arpl
movsl
cmpsl
sbb
mov
pop
sti
enter
add
xabort
push
out
lahf
push
or
cmp
loop
pop
in
inc
jp
jae
cmc
ljmp
call
pop
cmpsb
insb
mov
push
lret
adc
sub
popa
loop
adc
mov
es
and
ljmp
in
decl
and
push
cwtl
rcrb
adcb
cmc
lret
cmpsb
xor
xor
or
cmp
fwait
in
orb
fs
push
sub
jne
outsb
daa
or
mov
sbbb
xchg
popa
ja
inc
xor
pop
lcall
nop
xor
xor
inc
das
xor
push
stos
es
cmp
jle
pop
xor
daa
sbb
sbb
mov
sub
push
cmp
lret
mov
in
push
faddl
nop
mov
dec
and
and
mov
jbe
shll
add
lock
pop
lahf
cli
sbbb
xor
lret
mov
sti
addr16
fmul
ficoml
mov
std
pop
xchg
sbb
icebp
jg
pop
pop
inc
les
xor
jnp
add
push
and
or
nop
push
fmull
add
xchg
in
adc
repz
xchg
add
sbb
xchg
subl
adc
push
push
mov
sahf
xchg
mov
psubq
es
cld
xchg
sahf
sub
pop
nop
scas
fcom
or
lea
mov
push
add
add
adc
lock
pop
mov
gs
jb
aad
inc
push
js
ss
int3
clc
dec
jnp
sbb
shll
das
inc
lods
out
fucomp
aaa
mov
xor
pop
cltd
push
mov
push
add
cmp
jb
cwtl
lods
sub
push
dec
or
stos
sbb
sbb
mov
in
jno
movsl
cmp
push
cmp
push
lods
outsl
sub
mov
mov
call
and
lcall
sbb
inc
sbbl
xlat
xchg
clc
cmp
pop
stos
std
ja
cltd
cli
adc
inc
pop
xor
mov
add
jnp
xor
testb
inc
mov
inc
sbb
sar
pop
mov
out
repnz
aas
lret
and
insl
loop
mov
adc
sbbl
mov
rcrb
pop
mov
popa
lods
mov
pop
lock
dec
jae
mov
cld
addr16
jmp
add
pop
lds
in
inc
push
lcall
pop
cmp
inc
push
mov
jecxz
pop
push
sbb
aaa
sub
mov
jecxz
mov
xor
mov
sbb
mov
push
jecxz
dec
push
loopne
arpl
aaa
add
fstps
pop
scas
fwait
mov
inc
sbb
inc
pop
js
pop
subb
enter
mov
dec
call
int
addr16
cli
jb
mov
js
cmp
cmpsl
jl
fstl
xor
inc
pop
ret
jl
sbb
jl
pop
repz
jae
adc
sbb
stc
rcll
iret
mov
inc
mov
rcrl
sbb
pop
popf
inc
cld
xchg
outsl
ljmp
mov
call
divb
stos
push
ret
push
pop
xor
sbb
dec
mov
inc
lret
pop
sub
fnstcw
and
jbe
js
push
in
dec
test
cs
stos
test
sbbb
fistps
xor
dec
js
pop
scas
es
cltd
mov
pop
stc
inc
mov
addr16
mov
add
xorl
lret
push
or
jnp
xor
dec
insl
jmp
fstpt
mov
loop
insl
push
aad
sahf
mov
js
sbb
in
faddl
hlt
je
push
lods
and
cmpsb
ret
cmpsl
shlb
jne
and
dec
pop
test
stc
push
push
jnp
sbb
adc
js
push
stc
jge
call
push
andb
adc
stc
lods
ljmp
mov
jo
bound
pop
mov
push
xchg
fisubs
das
ret
pop
add
jecxz
pusha
repnz
mov
pop
xchg
mov
xorl
adc
aam
les
mov
xor
fwait
rcrl
out
xchg
aam
daa
ss
lea
and
dec
jbe
pop
push
inc
cltd
bound
sti
jmp
cs
or
inc
push
xor
jnp
adc
xchg
ficomps
jl
and
insl
sbb
das
lcall
push
mov
push
pop
aam
cmc
popa
daa
aad
add
xor
cmp
ss
mov
adc
out
movsl
or
stc
mov
inc
sbb
repnz
popf
jb
leave
dec
cmp
sbb
enter
mov
sbb
popf
loope
cmp
outsl
orl
enter
in
mov
lcall
addr16
imull
pop
fs
aaa
xor
inc
sbb
dec
ljmp
pop
sub
out
cmp
in
pop
in
sbb
in
das
jecxz
dec
inc
shrl
xchg
lods
jl
sub
pop
sbb
adc
fisttpll
ss
arpl
mov
inc
xor
mov
mov
mov
jb
jl
push
sub
scas
mov
add
mov
pop
push
mov
xor
dec
divb
out
mov
pop
pop
or
pop
mov
adc
cmp
adc
jle
sbb
cwtl
add
pop
add
pop
pop
cltd
cli
push
js
push
pop
jo
insb
sti
sti
out
in
pop
insb
inc
cltd
pop
mov
nop
fcompl
dec
push
xor
int3
fmuls
shrl
scas
push
fldt
mov
iret
loope
in
gs
mov
test
pop
sbb
jae
xorb
add
push
data16
imulb
ds
out
aad
sub
push
jge
out
adc
sbb
aaa
adc
call
push
mov
cmpsl
icebp
popa
scas
pop
pop
dec
push
jmp
sbb
push
js
pslld
push
in
ds
fiaddl
sub
aas
xor
dec
pop
xor
sti
sbb
inc
sbb
pop
les
pinsrw
aaa
jno
testl
subb
jb
fists
fsubr
aam
ds
cmc
test
fwait
push
xchg
divb
adc
sub
pop
jl
sti
or
push
mov
test
sub
add
push
push
or
inc
daa
cwtl
jbe
cvtdq2ps
sbb
int3
xlat
mov
or
inc
fimuls
inc
dec
mov
pmaxub
jp
call
pop
inc
cmp
sbb
pop
xor
test
jecxz
pop
pop
into
jne
les
mov
aaa
push
lods
jb
or
into
mov
pop
xor
in
mov
stos
jne
cmp
cmpsl
sbb
addl
sub
scas
sbb
jg
and
lods
jg
arpl
cmpsb
repz
aam
sti
icebp
test
pop
repnz
ret
popa
push
loopne
popf
pushf
pop
add
cmp
push
rol
mov
and
push
addr16
orl
fisttps
ljmp
inc
mov
adc
movsb
lret
movsb
pop
andl
shll
lock
call
insl
jae
push
sbb
cltd
into
xor
mov
bound
jge
movsl
mov
push
and
mov
in
je
push
cmp
pop
mov
sbbb
add
fistpl
inc
push
pop
pushl
or
nop
gs
sbb
inc
mov
xor
inc
fbld
jecxz
test
cmc
inc
pop
jo
fcomp
outsl
pop
mov
and
fdivr
cs
pop
mov
push
cs
jecxz
inc
xchg
add
jno
push
jmp
jo
ss
fstpt
mov
jae
int3
dec
insl
pop
imul
jne
rcll
and
in
fistps
outsb
out
loope
mov
fimuls
js
sub
sub
lea
adc
dec
push
sbb
jns
cltd
jg
aaa
aam
loop
insl
add
lret
dec
push
jae
inc
lret
add
dec
push
cmp
das
fs
outsb
cmp
push
fucomip
outsb
sbbb
dec
cmp
jae
inc
push
cs
decb
mov
ljmp
das
push
push
pushf
fdivl
aaa
cwtl
mov
int3
fs
add
inc
mov
pop
cmpsb
xor
push
lds
add
pop
sbb
stos
xor
pop
cmc
daa
test
jnp
mov
repz
mov
dec
push
aaa
pop
ficompl
push
call
in
xchg
push
pop
ja
aaa
push
and
lcall
push
dec
sahf
inc
cmc
insl
ss
loopne
push
leave
push
mov
int3
test
aaa
jg
inc
mul
add
fstps
xchg
jae
mov
shll
mov
mov
fwait
add
das
jne
mov
mov
jnp
pop
sub
neg
ret
mov
jp
push
sbb
test
shrl
lds
and
cmp
jbe
in
cmpb
lea
aaa
sbb
cld
daa
mov
lds
insl
leavew
lcall
push
jg
pushf
sti
mov
cltd
stos
out
sub
nopl
daa
jbe
and
insb
into
out
es
cmp
cltd
sbb
sbb
pop
push
push
in
push
dec
sbb
dec
inc
rcrl
jl
adc
push
lahf
mov
adc
sbb
dec
add
ljmp
inc
dec
cmp
push
push
xchg
sub
or
xor
xchg
mov
js
or
sub
js
cmc
fs
xorb
scas
push
adc
mov
sbb
repz
cld
cmp
test
push
pop
out
jle
subb
sub
aaa
inc
test
ret
adc
subb
add
dec
das
int
push
scas
shrb
sub
popf
push
mov
imul
sbb
aam
add
mov
mov
sub
pop
push
mov
frndint
push
inc
popa
nop
cmpsb
jb
ficomps
data16
fdiv
lea
fstpt
cs
mov
jb
icebp
or
out
push
xchg
sahf
mov
int
lock
shl
inc
mov
cmp
jnp
aam
mov
jl
jle
mov
insl
sub
mov
adc
xor
cli
imul
cmp
jb
jl
lods
int3
pusha
push
fadds
adc
pop
aaa
mov
cmpl
pop
insl
jge
jle
aas
push
aaa
lea
mov
sahf
sbbl
ljmp
sbb
call
xor
sbb
mov
lcall
imul
xor
nop
out
cmc
in
pop
fs
add
mov
mov
sub
or
sahf
xor
adc
mov
mov
jno
scas
cmpsl
movl
push
pop
sbb
jecxz
dec
xor
push
pop
js
inc
xchg
jge
fsubs
jbe
inc
push
jo
jb
cmp
xchg
scas
pop
mov
jl
jecxz
jge
cwtl
mov
dec
clc
xor
xlat
gs
mov
jae
lock
je
adc
jmp
movsl
pop
dec
cmp
cmc
sbb
aaa
jae
cli
mov
js
outsb
stc
shlb
cwtl
lret
xchg
cmpb
or
push
jg
mov
test
pusha
repz
dec
ljmp
cwtl
adc
jl
cld
cltd
sbb
xor
adc
mulb
out
mov
jno
mov
mov
js
in
xchg
repz
pop
jnp
sub
pop
xor
mov
add
movsb
dec
jge
or
test
outsb
fdivr
aad
push
test
dec
jg
fsts
fsub
imul
sti
or
sub
mov
int
imul
cmp
popf
and
mov
cmp
outsb
fidivrs
sub
jmp
in
push
mulb
outsl
repz
add
insl
jbe
loopne
cmp
ret
sbb
mov
sbb
adc
jmp
xor
insl
push
jbe
sbb
mov
cmp
fdivr
mov
jl
dec
sahf
fiaddl
lea
jo
rolb
lret
scas
in
repnz
add
sub
dec
jg
inc
and
mov
pop
out
clc
jle
divl
aaa
mov
xchg
and
cmp
push
pop
pop
adc
enter
cmp
pop
ficoml
arpl
rcll
leave
lcall
movsl
shll
sbb
xchg
lock
imul
pop
ds
and
imul
mov
movsb
gs
mov
sbb
daa
addr16
dec
mov
cmp
cltd
data16
loop
std
push
mov
notl
cmp
push
popf
jb
dec
cs
cmp
xchg
into
hlt
in
dec
push
js
repz
pop
cld
jnp
mov
mov
mov
aaa
insb
shl
adc
add
cltd
in
into
sahf
repz
fcomps
sbb
mov
mov
push
adc
dec
push
inc
pusha
dec
adc
aam
test
pop
xchg
pushf
adc
xchg
test
outsb
imul
mov
jecxz
sbb
push
jbe
xchg
xor
pop
push
ss
lods
pop
mov
xchg
pusha
icebp
in
inc
add
pop
movb
lods
or
dec
adc
jge
outsl
push
or
fnstsw
pop
test
dec
insb
pop
pop
popf
push
xchg
mov
shll
cmp
scas
mov
sub
mov
inc
test
add
jb
pop
cmc
cmpsl
insl
mov
outsb
sbb
pusha
and
jb
mov
xlat
lea
arpl
push
add
int3
lods
rorb
stc
mov
stos
dec
in
pop
iret
dec
mov
pop
xor
xor
push
push
sbb
mov
inc
pushl
add
push
sbbb
pop
ror
daa
pop
jmp
pop
xchg
bound
xchg
cs
dec
adc
jl
push
sbb
pop
add
cmp
stos
xchg
enter
loope
out
out
test
scas
inc
mov
mov
js
popf
xlat
push
dec
push
aam
xchg
push
sbb
push
dec
jne
xor
pop
movups
xor
mov
jne
aaa
sub
pop
sbb
out
sbb
dec
jge
enter
pop
add
cmc
fs
shrb
addb
dec
push
push
mov
clc
pop
jmp
pop
pop
clc
jl
lret
test
clc
jp
arpl
lods
inc
pop
mov
pop
mov
loopne
enter
xchg
mov
push
aaa
pop
jecxz
fwait
test
leave
sarl
add
jecxz
sahf
xor
aaa
sbbl
arpl
cmp
mov
and
lds
adc
sub
xor
lods
push
orl
cwtl
xchg
cwtl
adc
shl
mov
jg
js
in
fstps
push
pop
jbe
cs
lret
repz
mov
jge
lods
pop
data16
sbb
sti
aas
xchg
cmpb
inc
pop
xor
out
inc
pop
adc
push
jle
push
push
jno
and
add
cmp
sbb
lahf
push
int3
mov
xchg
pusha
sbb
jne
in
mov
xchg
mov
xchg
sbb
nopl
test
jno
sub
fistpl
xchg
jns
lock
sub
in
lahf
out
push
xchg
jecxz
mov
divb
jg
lea
add
arpl
pop
inc
notb
mov
js
xor
andb
iret
fbstp
ss
imul
sbb
adcb
xchg
out
dec
pop
sub
xor
cmpsb
mov
out
ds
and
in
sbb
xchg
aas
ljmp
mov
sbb
dec
je
loopne
pop
repnz
addb
scas
add
xchg
mov
repz
xchg
pop
std
sti
ffree
push
imul
push
jl
mov
lret
lock
insb
je
cmp
icebp
imul
test
fsub
aas
inc
push
and
dec
fisubl
pop
orb
imul
xchg
push
scas
ror
mov
outsb
mov
jle
mov
scas
mov
je
jecxz
cld
sbb
adc
xor
jmp
xchg
pop
sub
add
pop
in
cld
je
pop
sti
dec
xlat
mov
out
test
mov
inc
outsb
mov
pop
mov
insl
nop
das
aaa
jecxz
inc
stos
inc
push
inc
dec
out
rcll
aaa
push
add
loope
repnz
xchg
aam
cmp
sahf
mov
adc
cmovnp
sahf
js
cmp
imul
mov
inc
in
int
sarl
adc
inc
subb
inc
mov
int3
das
cmp
mov
cmp
fwait
movsb
jle
push
fisttpl
mov
mov
inc
fs
pop
lods
test
cli
ss
pop
mov
pop
sbb
outsb
sub
imul
movb
popa
popf
dec
pop
push
scas
push
cmp
xor
call
xchg
std
shrb
cmp
rcl
int
jns
lret
fisttpl
loop
add
out
jecxz
jno
xor
sahf
jne
shll
repz
insb
mov
in
pop
call
fs
adc
loope
push
andl
mov
pop
dec
cmp
inc
in
and
das
mov
call
jb
imul
test
xchg
stos
pop
jle
loope
sarl
ficoms
test
push
add
xor
insl
movsb
imul
rorl
movsl
sarl
int3
pop
and
stc
ret
cld
push
sub
or
addb
xor
xchg
adc
in
in
and
pop
sahf
cmc
clc
outsl
lcall
int
dec
cld
xchg
push
inc
sbb
mov
out
or
mov
flds
insb
inc
push
inc
sub
neg
adc
pop
xchg
inc
pop
fnstenv
pop
lahf
nop
out
sbb
mov
mov
popf
loop
inc
clc
lea
cmpsb
adc
stos
push
add
jo
xor
pop
inc
mov
arpl
xchg
fistpl
lret
into
shll
test
into
lahf
mov
je
lods
shlb
jle
mov
jne
xlat
push
jo
jb
xor
loop
pop
shlb
insb
cli
push
insb
stos
fnsave
mov
sti
ljmp
pop
sbb
int
aad
movb
push
insl
ret
adc
push
push
loope
ret
xor
sbb
out
xchg
mov
pop
std
mov
aam
dec
cmp
add
lret
push
orl
push
mov
mov
imul
frstor
test
inc
inc
mov
test
les
inc
sbb
push
jo
addr16
fisttps
outsb
push
xchg
dec
adc
sbb
pop
out
imul
rcrb
icebp
pop
pop
inc
jne
insb
or
xorl
mov
lods
xor
scas
jecxz
push
mov
cld
xchg
cmc
inc
fdivl
inc
cmp
imul
sbb
cltd
push
pop
mov
pop
filds
in
nop
outsb
lahf
xchg
xchg
adc
lea
inc
mov
jle
push
mov
mov
push
sbb
xor
sub
mov
cs
jl
xchg
adc
cmp
adc
popf
outsb
cmp
jb
inc
jle
lea
pop
std
pop
fstpt
mov
push
data16
pop
pop
test
addr16
xchg
cmpsb
cli
dec
jp
in
xor
cmpsb
mov
aaa
iret
lcall
mov
inc
push
adc
loope
in
pusha
pop
jg
sbb
push
and
push
xor
sbb
movsl
lea
add
jmp
fldt
mov
out
dec
inc
xchg
pushf
je
aam
les
jo
cmp
imul
pop
jns
sti
in
clc
repnz
sub
mov
push
pop
push
shll
inc
aaa
mov
outsb
xor
ret
bound
adc
ficoms
push
test
fs
loop
and
xchg
xor
sub
bound
js
cmpsl
jle
mov
shrl
cld
out
push
xchg
push
hlt
cmp
pusha
sbb
aaa
dec
popf
sub
nop
out
es
decb
inc
push
pushl
ss
mov
int3
push
pusha
enter
pop
add
icebp
push
jle
dec
fnsave
daa
in
jo
mov
outsb
inc
lock
es
jne
mov
mov
lcall
outsl
jl
enter
dec
repnz
mov
test
and
lret
mov
into
jb
push
pop
jne
fiadds
sbb
mov
mov
pop
aad
cmp
fldt
pop
xchg
testl
jge
aaa
fcmove
repz
xchg
out
jne
in
inc
pop
lret
js
cmc
mov
aam
xor
lcall
imul
add
rep
incl
and
mov
sbb
loop
into
and
aaa
pop
out
ja
inc
pop
insl
mov
ds
xor
push
dec
fistpl
adc
scas
inc
mov
mov
ss
stos
inc
ret
mov
sub
in
loope
ret
mov
data16
icebp
and
xchg
jns
imul
jl
add
jle
mov
cmp
ss
test
mov
pop
stos
pop
sbb
or
sbb
and
pop
dec
flds
daa
repz
and
adc
push
rcrb
pop
int
outsb
push
mov
test
dec
jmp
dec
cmp
sahf
pop
test
and
je
cmp
dec
data16
fldl
subl
mov
in
sbb
outsb
and
or
aaa
ret
sbb
xchg
cmp
repnz
xchg
mov
mov
lock
push
pop
dec
movsb
xor
pop
adc
pop
inc
in
or
push
jae
into
cmp
or
lods
and
jb
aaa
int
sbb
sbb
dec
adc
cmp
mov
jb
xor
lret
scas
sti
push
sbb
push
pushl
int3
mov
rclb
pop
or
icebp
cld
arpl
sub
scas
push
push
and
movsb
lods
aaa
cmp
inc
int
and
pop
mov
js
sbb
jnp
jb
cmc
push
decl
inc
cmc
mov
sbb
push
sub
lahf
lea
enter
insl
dec
loopne
xchg
jle
scas
mov
subb
jle
jmp
pushf
sbb
or
stc
and
push
popf
shl
mov
mov
shlb
pop
push
xorb
inc
lahf
in
or
ds
add
es
insl
fldcw
jbe
sub
mov
push
xchg
lods
push
cmp
mov
jg
push
mov
mov
out
pop
ret
sti
mov
imul
int3
fdivl
dec
cmp
xchg
adc
mov
pop
fcompl
lret
push
fimuls
adc
xchg
push
pop
jg
lea
jns
lea
sub
mov
mov
scas
in
enter
out
nop
push
mov
add
std
mov
mov
mov
xor
fs
in
sub
popa
test
pop
or
inc
sub
in
mov
ret
rolb
xchg
xor
mov
sub
cltd
jb
fidivrl
push
pop
fld
imul
pop
sbb
pop
fnstsw
jbe
cmp
scas
adc
pusha
dec
ja
mov
in
mov
bound
lcall
outsb
sbb
arpl
jle
movsl
fs
ja
aaa
dec
test
in
xchg
jb
adc
mov
cmp
dec
add
and
in
or
mov
adc
and
xchg
stc
fisttpl
insl
sti
sbb
dec
sbb
nop
and
lret
ror
loope
sbb
jmp
imul
inc
push
pop
pop
adc
or
pushl
rolb
add
jp
iret
cmp
fldl
ja
ret
imul
in
ret
pop
test
push
lahf
mov
cs
dec
jle
mov
fists
ret
ss
dec
inc
es
icebp
popf
xchg
sbb
in
xor
push
push
dec
iret
inc
jle
and
lahf
out
outsb
decb
push
mov
push
mov
lods
inc
mov
sbb
out
sbb
fisttpll
das
mov
mov
push
lret
ja
icebp
fsubs
shr
loope
fsubrl
cmp
aaa
je
pop
fucomp
cmp
aad
sbb
mov
incb
adc
cmp
push
std
fdivrs
xchg
sti
addl
cmp
mov
imul
iret
adc
pop
sbb
hlt
adc
xchg
enter
xchg
mov
sbb
add
cmp
cld
in
test
mov
mov
ss
stos
push
xchg
jp
push
aaa
mov
xor
xchg
pusha
popa
aas
sbb
int3
sahf
loope
fbstp
xchg
mov
xchg
in
jmp
jnp
sbb
xor
inc
and
jg
cwtl
pop
mov
dec
jmp
repz
push
aaa
mov
jg
sbb
sub
adc
lcall
shll
xor
pop
repnz
cmp
xchg
jno
andb
aaa
mov
push
jnp
test
xchg
add
ja
or
sub
das
loop
pop
rcr
add
pop
mov
jge
loopne
xor
daa
movsb
ret
sahf
cmp
mov
int
xchg
addl
fmul
testb
call
out
mov
jne
pop
push
dec
pop
jno
pop
popf
inc
lret
popf
lods
xorb
jecxz
jae
sub
jg
rcll
std
in
jo
dec
bnd
push
jo
dec
movsl
mov
ss
addr16
lods
dec
and
or
in
or
in
into
pop
shrb
or
mov
stc
or
and
mov
sub
sahf
les
jo
mov
inc
ljmp
jle
daa
push
jbe
andb
inc
movsl
push
xorl
arpl
in
imul
jecxz
cmp
xor
xchg
jns
add
push
pop
int
adc
dec
repnz
shrl
fsubrl
std
aaa
or
jbe
loope
ds
sbb
mov
mov
cmpsl
into
rcrl
popa
sbb
mov
stos
pop
push
jae
sub
jae
arpl
mov
add
iret
call
or
add
sbb
aaa
pop
push
or
out
dec
and
add
pop
dec
push
mov
mov
and
sbb
add
and
jb
push
lea
push
or
adc
push
cmp
push
test
push
push
insb
mov
add
mov
sbb
ss
and
ret
pop
push
leave
pop
jle
and
inc
rorl
cmp
gs
mov
add
das
das
loope
aaa
loopne
stos
jle
cmp
rcl
add
pop
les
xor
popa
adc
mov
push
sbb
pop
mov
mov
daa
js
pop
fmul
mov
rclb
lcall
jb
dec
adc
icebp
js
mov
xchg
lahf
cmc
lods
and
ds
pushf
loope
dec
or
shlb
hlt
mov
stos
jecxz
dec
mov
rolb
bound
cld
cmp
es
sahf
hlt
xchg
je
fiadds
daa
sub
pop
out
shlb
cwtl
adc
fwait
ret
imul
inc
sbb
test
or
sbb
out
jl
dec
jne
lds
mov
pop
in
cmp
divl
lcall
aaa
outsl
sbb
pop
xor
cmp
push
out
pop
aam
das
and
mov
popa
pop
pusha
pop
push
ret
mov
movb
jge
inc
jmp
out
dec
std
add
push
push
loope
icebp
outsb
sti
addr16
xchg
adc
call
mov
dec
inc
push
fidivrs
movsl
aaa
xchg
or
lret
sti
jg
mulb
xorb
call
sar
repnz
mov
outsl
xor
jno
outsl
sbb
fwait
push
adc
jle
pop
pusha
lock
pop
fwait
xchg
and
imul
es
icebp
cmpsl
mov
pop
push
sbb
xchg
or
add
das
sbb
hlt
sub
fidivl
scas
jns
imul
add
cmp
rol
faddl
push
lret
and
dec
loope
and
cmp
ficompl
incl
pop
fists
mov
mov
lods
jp
in
aas
mov
aaa
in
pop
jle
pop
test
inc
test
fldcw
add
aas
lret
cmp
in
pop
push
xchg
lret
fldcw
outsb
das
imul
aaa
push
repz
mov
movsb
inc
fimuls
addl
ds
repz
ficoms
stc
jbe
aad
or
ja
outsb
jae
or
hlt
pop
cs
push
sbbl
pop
fdiv
je
fs
sub
jbe
jo
aaa
int
ret
push
mov
dec
int3
ret
push
fxch
jl
mov
mov
or
std
xlat
sub
add
loop
sbb
inc
and
pop
cbtw
loopne
ja
imul
data16
fisttps
jnp
pop
cwtl
rcrl
insb
test
testb
mov
and
sbbb
lock
movsb
mov
xor
aaa
arpl
mov
cli
pop
in
mov
sarl
arpl
or
sbb
es
in
ss
subb
fdivrs
jnp
or
in
mov
fidivs
das
sub
cmc
fnstenv
push
push
xchg
xor
stos
ss
pop
ss
lods
inc
xor
fnstsw
cmp
lret
outsl
and
out
dec
lea
jmp
out
movsl
mov
jmp
enter
dec
ds
xor
lods
xchg
icebp
iret
inc
notl
ja
into
ljmpw
popa
std
cwtl
or
jmp
dec
or
sbb
lret
pop
arpl
in
sub
push
aad
jno
pushl
cwtl
aas
mov
ss
inc
mov
ret
jo
js
jbe
xchg
aaa
push
push
pop
fistl
in
add
pop
ljmp
mov
push
movsb
rolb
cmp
mov
sbb
rcl
xchg
dec
push
pusha
repnz
cmp
vmovupd
in
cmp
pop
int3
xor
ja
pop
adc
ret
enter
sub
mov
shr
push
loope
leave
icebp
and
xchg
jbe
mov
or
sbb
call
insb
icebp
decb
cmp
pop
sub
push
or
jge
push
shlb
mov
push
loop
push
fmull
aas
adc
adc
cld
and
ret
out
out
test
popf
xchg
mov
in
cmpsl
mov
test
stos
dec
je
xchg
xor
lds
sbb
outsb
notl
jo
cmpb
mov
aaa
sub
cmp
in
xor
int3
lock
jmp
movsb
aaa
loop
fbstp
and
adc
inc
cmpsb
fnstcw
add
inc
xchg
ret
sarl
push
call
add
in
pop
mov
dec
xorl
mov
shll
xor
testl
and
imul
in
loope
pop
into
out
or
test
xor
das
fsts
aad
jno
mov
out
dec
mov
pop
sbb
push
mov
xchg
mov
push
stos
sub
dec
out
pop
outsl
into
inc
jg
mov
lcall
cwtl
shll
jo
mov
js
adc
sbb
push
sbb
push
adc
jge
pop
add
loop
pop
gs
in
lcall
insb
mov
jle
add
mov
sub
punpcklbw
insb
aaa
lcall
loop
inc
push
cli
sub
jae
rclb
rcrl
scas
mov
add
lods
fiadds
outsb
in
cmp
push
int3
pushf
cmpsl
loopne
ror
jbe
pop
jmp
jo
jo
or
inc
pop
push
lcall
enter
xchg
push
ret
inc
out
repz
push
pop
negl
cmpl
sbbb
insb
adc
inc
ja
jbe
mov
sub
pop
pusha
subb
bound
popf
loop
pop
adc
push
test
jnp
out
pmulhuw
adc
sub
divps
outsl
test
popf
push
ss
test
lret
inc
std
sub
mov
push
cltd
repz
sub
dec
outsl
xchg
mov
cmp
mov
bound
xchg
dec
jp
aaa
mov
jp
arpl
mov
mov
jmp
test
sahf
cmp
jmp
mov
push
push
fstl
mov
jp
fsubs
add
inc
in
call
cld
sbb
sub
xchg
xor
jp
mov
sti
and
and
xchg
pop
fwait
aaa
pop
cwtl
dec
test
lfs
xor
pop
pushf
sbb
adc
sbb
lock
mov
repz
adc
dec
leave
and
mov
repnz
pop
push
shll
mov
xor
and
scas
nop
push
jle
jne
icebp
jecxz
pop
cmp
inc
dec
sbb
sbb
add
fcoml
sbb
ss
repz
in
or
push
add
pop
arpl
sahf
cld
fincstp
clc
dec
push
cmp
push
jge,pn
mov
jp
xor
cltd
cli
or
add
jno
jecxz
outsl
jo
repz
dec
jge
sbb
pop
add
and
mov
push
loope
cmp
punpcklbw
xor
xchg
out
movsl
icebp
push
inc
lahf
jae
or
in
xor
call
test
xchg
jle
aaa
std
aam
cmp
out
sbb
in
dec
cmp
rolb
xor
cmp
outsl
arpl
es
push
mov
inc
push
jecxz
ljmp
mov
pop
aam
mov
mov
mov
pusha
ja
in
mov
cmp
sbb
stos
aas
stc
mov
mov
loopne
mov
dec
leave
mov
mov
lods
mov
cmp
aaa
inc
jnp
addr16
cmc
cld
pop
or
push
push
loope
pop
sahf
stos
pop
lret
dec
mov
add
repz
mov
jae
and
push
inc
mov
imul
push
outsl
mov
jp
js
sahf
ljmp
add
sbb
push
lcall
xor
outsb
test
sub
cmp
mov
sbb
xorb
mov
out
shlb
xchg
mov
dec
and
sub
scas
sub
pop
add
pop
inc
ss
dec
xor
push
sub
fsubr
cmp
xchg
idivb
orl
es
enter
inc
cmp
dec
outsl
push
cmp
dec
mov
out
insl
cltd
mov
mov
pop
inc
aaa
les
cltd
sub
adc
dec
js
dec
push
sarl
xor
and
pop
loop
aad
aaa
addr16
ljmp
cmp
lahf
sbb
sub
sbb
adc
xchg
aam
test
enter
imul
imul
mov
fmull
in
pop
jge
mov
into
insl
mov
pslld
mov
sub
pusha
jae
stos
jmp
ret
xchg
adc
in
fdivrs
jns
ficomps
das
dec
xchg
int3
xor
mov
test
aad
push
mov
ss
cmp
add
lods
mov
clc
xor
dec
or
inc
call
push
pop
cld
lahf
repz
inc
pop
cmp
jno
rep
add
sub
push
std
iret
shrb
mov
cmp
jbe
add
and
mov
inc
imul
add
sub
pop
lods
das
fdivr
aaa
xor
xchg
add
loopne
fucomip
imul
or
mov
imul
fnsave
aas
ret
outsb
addr16
ja
ljmp
mov
push
pop
test
mov
mov
lahf
sbb
xchg
in
jmp
mov
ret
or
adc
mov
hlt
or
push
or
mov
push
add
pop
ds
jge
loop
stc
rcll
jns
movsl
xchg
mov
stos
or
sbb
out
sbb
scas
push
arpl
cli
cmp
lret
sbb
mull
mov
lret
push
jp
call
shll
jecxz
repnz
adc
aaa
xchg
sbb
sbb
xor
cli
add
xchg
stc
sti
aas
fcomps
addr16
adc
jb
test
pop
fisttps
je
dec
cld
push
in
loopne
jb
in
sysret
xchg
pop
jne
out
icebp
xchg
hlt
std
sbb
xor
sahf
dec
sub
mov
ret
xchg
inc
push
mov
fisttps
mov
mov
stc
pop
adc
std
xor
insl
inc
mov
dec
sbb
xor
sub
out
imul
ss
xlat
scas
test
and
mov
adcb
pop
inc
push
mov
sub
fcmovnb
jno
lods
mov
shr
jae
nop
sub
aad
or
aad
dec
xchg
add
aam
int3
push
inc
cld
xor
inc
push
mov
adc
sbb
mov
into
xchg
sub
fs
dec
sub
test
mov
pop
jbe
les
sub
enter
dec
adc
mov
test
loope
push
pop
in
mov
fsubrl
add
push
or
jns
or
dec
icebp
mov
jno
xchg
push
pop
imull
dec
mov
mov
in
loope
or
pop
outsb
sbb
mov
fwait
gs
sbb
mov
scas
sbb
clc
aaa
pop
lret
outsb
push
loope
mov
fdivl
out
mov
sub
sub
xchg
insb
jbe
push
or
repnz
es
mov
mov
sub
xor
push
push
sub
adcl
and
aam
in
int3
jge
incl
mov
dec
push
adc
call
into
in
xchg
shrb
push
enter
loope
jge
jmp
mov
push
cmp
pop
bswap
in
sub
jmp
mov
mov
jo
xlat
fisubrl
int
sub
jns
pop
leave
xor
mov
jmp
mov
adc
scas
jle
inc
ret
outsb
aaa
mov
aaa
cmp
pusha
dec
sbb
int3
and
or
andb
cld
loope
sbb
xchg
jle
clc
mov
or
adc
jecxz
mov
arpl
movsb
pop
jo
arpl
loopne
aaa
xchg
or
push
das
fs
pop
out
orb
pusha
sub
push
and
int3
xchg
lea
add
stos
fyl2xp1
call
jae
movsl
jle
xchg
sub
jo
fistpll
cmpsb
cmp
inc
cmp
adc
fs
std
jle
fstp
shrl
fwait
jg
shl
addb
mov
dec
out
jno
shl
out
push
dec
test
lds
add
jo
fcmovnu
cld
push
imul
jmp
scas
mov
pop
push
push
repnz
xchg
xchg
add
mov
sub
or
inc
jb
jne
ljmp
jbe
sti
sbb
xchg
inc
scas
daa
fidivs
adc
test
lods
insb
scas
lret
arpl
test
pop
xchg
in
decl
cs
mov
jmp
xchg
inc
push
cld
dec
xlat
jmp
imul
dec
test
mov
and
inc
push
clc
push
add
cmp
mov
in
inc
idiv
lahf
add
loopne
mov
cwtl
jbe
mov
jle
jg
ss
insl
push
mov
xchg
subl
iret
or
pop
push
int3
dec
cmp
test
lea
sub
push
inc
jne
sub
fbld
push
sub
in
push
mov
pushf
shlb
in
mov
jp
jae
pop
add
sar
push
mov
push
sbb
pop
mov
pusha
xor
dec
arpl
push
and
enter
mov
es
xor
in
mov
aaa
aad
pop
scas
pop
popf
sbb
jbe
f2xm1
or
fsubrs
call
pop
xor
call
inc
inc
psubusw
jb
ret
enter
into
dec
cwtl
andb
dec
imul
add
inc
dec
aad
sbb
decl
imul
inc
in
pop
shr
mov
dec
jmp
push
int
sbb
push
pushl
ss
jecxz
ja
sarb
mov
int3
pushf
and
fstps
iret
sti
ret
rorl
cmp
mov
mov
adc
xchg
inc
or
arpl
push
aaa
call
xor
aaa
xor
xchg
cmp
adc
pop
sub
repnz
jle
jecxz
cs
fcoms
sub
xchg
mov
stc
pushf
pushw
jbe
and
pop
sbb
je
idiv
fcoms
sub
push
jecxz
dec
xchg
sti
movsb
inc
xor
jge
repnz
aaa
lea
xchg
inc
pusha
int
mov
pop
xchg
cmp
shl
add
cld
leave
lea
clc
clc
cmp
lret
aaa
dec
jbe
jl
add
div
enter
outsb
sub
inc
outsb
jno
ds
mov
mov
cmp
sti
mov
push
fisttpl
mov
sub
inc
stc
mov
push
outsb
sbb
dec
aaa
add
or
std
xchg
cmp
or
sub
pop
das
out
loope
and
popf
gs
loopne
mull
call
bound
add
cmp
bound
or
fnstcw
add
mov
sbbl
or
arpl
jno
fcompl
lret
popf
enter
stos
push
icebp
dec
int3
iret
mov
in
pop
push
sub
dec
pop
inc
es
loop
or
arpl
loope
pop
add
iret
add
es
hlt
xor
add
xor
xor
mov
xor
jge
sub
and
or
movsl
adc
mov
lret
mov
push
rcl
aas
pop
add
rclb
arpl
clc
fs
cmp
pop
shr
pop
pop
sbb
inc
in
je
lock
sahf
add
aad
ret
in
outsl
test
in
roll
int
add
or
inc
xchg
jle
adc
jge
pop
push
or
add
cmpsl
dec
sti
inc
cmp
push
popa
aaa
sub
cwtl
jp
jae
les
lcall
jp
mov
mov
aad
aam
cli
ja
loop
pop
test
ja
jg
aaa
mov
loope
repz
sbbb
push
sbb
xchg
fwait
jmp
push
inc
pusha
fnstsw
sbb
mov
push
jmp
push
push
into
ja
push
and
mov
jbe
imul
fidivl
lret
inc
mov
movsl
test
sbb
je
test
clc
lret
test
test
out
enter
adc
sbb
aad
pop
stos
and
aaa
add
adc
outsl
adc
sub
lock
pop
fildl
das
cwtl
jl
aam
cmp
adc
push
shl
aas
mov
aad
xor
or
xchg
movsl
mov
sbb
jns
ret
pop
xchg
pop
dec
popf
pop
aaa
xchg
cwtl
enter
fcoml
cmp
aaa
mov
es
lcall
pop
xchg
orl
and
popa
adc
cltd
fucomip
in
clc
cltd
or
cmp
pop
sub
in
fs
and
pop
mov
jbe
fwait
jecxz
pop
add
xchg
std
add
mov
negb
and
sub
out
ss
mov
aas
cmp
mov
mov
xor
lea
int
pcmpeqd
adc
mov
test
mov
push
lock
je
or
gs
push
repz
mov
mov
sbb
mov
pop
lea
outsb
fwait
aaa
outsb
arpl
xor
movsb
cld
pop
cmpsl
repz
and
jno
cmp
push
inc
pop
repnz
xlat
ficomps
adc
cld
aaa
fistps
aaa
mov
fisubrl
idivl
outsl
dec
xor
mov
call
mov
enter
xor
jo
lds
pop
and
adc
sbb
dec
fldenv
arpl
or
popf
aad
push
xchg
xchg
or
inc
adc
in
xlat
pop
push
sbb
insb
mov
mov
repz
jmp
mov
aaa
ss
dec
sti
loope
popf
mov
into
and
frstor
lods
inc
fsubrl
cmp
adc
icebp
aad
ja
mov
jae
xchg
mov
in
and
shlb
sub
adc
xor
mov
ss
add
pop
cli
sub
sarb
mov
jno
pop
outsl
jp
jg
lret
fildl
sarl
ss
mov
imul
in
push
fsubl
and
ficomps
jl
sbb
fdiv
arpl
mov
ficomps
repz
out
jbe
mov
mov
mov
adc
adc
ljmp
in
inc
push
and
mov
push
insb
lcall
dec
clc
out
outsl
inc
fsubl
ficomps
jge
and
push
insl
xor
mov
jb
or
cwtl
stos
call
add
sbb
xchg
inc
dec
and
jno
cli
out
int
inc
sti
add
fisubs
call
lcall
nop
cmp
xchg
jb
mov
enter
push
push
jmp
push
leave
sub
push
inc
stc
outsb
jle
and
sbb
cwtl
xor
ret
pop
jnp
mov
pop
jmp
lods
loopne
xchg
sbb
pop
lcall
cmp
and
scas
loopne
pop
mov
pusha
pop
push
pop
cmpsb
in
xchg
xchg
ret
rcrl
sub
cmp
movsl
aaa
in
stos
test
pop
sahf
mov
fstpt
ss
pop
mov
xchg
aas
xchg
fstl
cmp
in
fucom
cmp
cmc
push
repnz
faddl
xor
jge
loope
jbe
pop
sub
add
xor
and
jns
lret
xor
sbb
loope
pop
fwait
adc
xchg
pop
test
jp
aad
jle
iret
mov
test
pop
lret
mov
mov
fdivl
jnp
mov
popf
bound
sarl
test
inc
mov
das
lret
mov
mov
outsb
mov
dec
aas
push
das
shr
inc
pop
lahf
scas
lret
mov
dec
mul
pop
mov
dec
jnp
jb
jg
xlat
ja
pop
jb
lahf
cmp
popa
mov
xchg
mov
mov
mov
add
xor
cltd
in
gs
jle
jl
push
cmp
in
imull
rorl
popa
and
subb
push
dec
or
sbb
mov
jno
pop
movsb
clts
add
jp
xor
jp
pop
sub
sbb
adc
das
adc
inc
mov
mov
jl
add
adc
aam
shll
mov
das
cmpsl
popf
add
into
sti
cmp
ficomps
and
and
adc
loop
pop
adc
sarb
scas
xor
jl
jno
push
xchg
pop
pop
stos
inc
add
mov
out
in
shlb
loope
pop
rcll
jb
shll
push
xchg
push
aad
ljmp
shl
repnz
jns
jl
lea
push
mov
pop
pop
ficoms
push
aaa
adc
je
sub
repz
cld
insl
mov
jp
les
jmp
pop
mov
cli
push
jns
iret
in
out
out
cltd
outsl
call
and
cld
mov
pop
loope
pop
sbb
push
xchg
pop
repz
repnz
xor
sbb
push
int3
mov
inc
adc
pop
xor
push
mov
sbb
pop
push
dec
es
cld
inc
mov
in
xor
xchg
xchg
fstl
testl
mov
inc
and
xchg
stc
int
lahf
pusha
roll
sub
ja
imul
mov
arpl
popf
sbb
int
pop
adc
cmc
add
stos
mov
stos
adc
sub
xchg
fisttpl
inc
push
add
in
sahf
xchg
mov
pop
mov
fs
aam
dec
call
mov
pop
data16
or
outsl
adc
xor
stc
ss
or
cmc
mov
pop
pop
cli
jb
stc
aaa
or
lret
mov
int3
fbstp
ja
call
fcomp
sub
pop
aas
sbb
out
fstpt
mov
jle
aam
pop
xchg
outsl
out
ljmp
add
add
in
mov
out
je
into
loop
pop
jge
mov
fsubrs
addb
xor
test
aaa
in
cmp
movsl
mov
sahf
mov
es
cmpsb
icebp
push
iret
ss
push
loope
xchg
jnp
push
pop
test
and
stc
imul
imul
bnd
dec
loope
aaa
pop
xorb
cmp
jle
add
sbb
in
insl
les
loope
jp
cltd
dec
in
stos
xor
push
ret
pop
push
cmpsb
push
cmp
fstps
or
push
outsl
add
ja
test
adc
push
scas
stc
andb
pusha
xchg
ret
loop
outsb
out
mov
sbb
jp
mov
dec
mov
lock
sbb
pop
mov
and
aaa
aam
pop
push
nopl
dec
ret
and
cmp
fstp
testl
cmp
cmpb
dec
mov
push
ficompl
icebp
dec
aam
mov
ficoms
push
cmp
loope
cli
rcll
jbe
out
mov
jle
jnp
lret
fcmovne
jae
mov
jge
into
adc
xor
push
je
mov
mov
in
jb
mov
jge
lcall
test
mov
les
mov
or
jno
xchg
pop
pop
or
aaa
xlat
in
mov
push
stos
jl
push
lret
xchg
cltd
xchg
lea
pop
sub
adc
sub
out
inc
das
lods
pusha
stos
rcll
and
jns
aas
and
loop
imul
mov
adc
das
xlat
ret
fcompl
cmp
add
loope
cmpsb
out
cltd
inc
mov
repz
push
inc
pop
jle
sbb
mov
sarb
testl
aas
rcrl
jecxz
int
cmp
leave
repnz
and
fldcw
mov
test
shl
jbe
test
jle
popf
into
push
insb
popa
sbbb
jbe
cmp
xchg
test
ret
pop
mov
lret
enter
insb
repnz
icebp
loop
clc
fwait
xorb
cltd
fists
inc
pop
xor
subb
je
pusha
mov
fildl
sbb
xchg
pop
mov
mov
int3
js
cmp
mov
push
ljmp
dec
jnp
das
test
dec
mov
lret
dec
arpl
xchg
out
cmpsl
and
outsl
scas
cs
ss
icebp
add
fwait
insl
test
and
lret
push
fadd
pop
sti
aaa
faddl
aad
cli
sbb
sub
popa
ja
ret
push
rorb
pop
pop
fadds
mov
jnp
dec
jp
adc
jg
sub
lods
fnsave
push
shrd
popf
pop
stos
mov
pop
fwait
loop
sub
fwait
xor
add
sbb
out
cmp
loope
xchg
idiv
sbb
fstpt
test
jge
movsb
lods
pop
add
sbb
in
mov
pop
jg
and
cltd
mov
shll
xor
inc
lods
aaa
jp
jb
mov
enter
jbe
icebp
scas
fstl
pop
cmp
push
cmpsl
lods
xor
mov
pushf
daa
jg
jb
xchg
dec
enter
jae
inc
pop
or
and
push
cli
imul
cmc
ljmp
pop
repnz
mov
mov
mov
add
add
ret
mov
mov
pop
dec
fwait
loope
pop
icebp
addr16
inc
dec
inc
bound
stos
dec
mov
fists
sub
int
inc
test
inc
cmp
jge
sti
mov
in
ret
mov
dec
mov
out
inc
or
sbb
mov
cmp
enter
call
shll
enter
ja
aas
jge
pop
popf
movsb
iret
test
lcall
outsb
adc
push
mov
xchg
out
lods
jge
outsb
mov
ss
in
jle
or
xchg
pop
jne
lods
iret
pop
fnstsw
push
and
pop
dec
incb
das
xlat
mov
stos
std
mov
aaa
push
cltd
mov
jno
mov
scas
pop
inc
xchg
enter
jmp
pop
adc
sbb
adc
fwait
cmp
and
aaa
add
test
push
shlb
adc
lods
hlt
cmpsb
js
adc
movsl
cmp
shll
scas
inc
into
decb
pop
out
and
cld
add
sbb
out
jns
je
cmp
lods
add
loop
dec
pop
push
pop
mov
push
mov
lods
add
fldt
add
loop
pop
loope
or
clc
icebp
pop
sbb
popf
pushf
jno
lea
mov
int3
mov
clc
mov
jle,pt
loope
mov
pusha
inc
add
les
ds
sub
dec
cmp
int
mov
orb
clc
rorb
push
dec
cmp
ss
add
ret
sbb
sbb
push
jmp
outsl
or
leave
insb
push
and
dec
inc
sbb
dec
dec
push
jp
pop
sbb
push
dec
push
sub
out
lcall
cmpsb
add
mov
mov
add
jge
adc
mov
aas
clc
popf
inc
fstpt
loope
pop
inc
xchg
je
pop
push
mov
lret
dec
clc
bnd
and
mov
fwait
mov
outsb
pop
loope
dec
cmpsl
lds
mov
sub
or
dec
inc
push
cmp
loop
and
sub
ljmp
sub
repnz
mov
push
fucompp
int3
push
in
pop
mov
std
es
shr
fwait
or
ds
add
push
mov
imul
jb
mov
jmp
pushf
ss
sbb
iret
cmp
sub
movsb
xor
push
jl
xor
cmc
jecxz
or
dec
jnp
sbbb
shll
sbb
lods
inc
adc
popl
repnz
fsubl
or
cli
sbb
outsb
xchg
leave
out
ret
loope
ss
lea
pop
mov
mov
es
cmp
fidivrs
out
fsubrs
aaa
les
decl
shl
frndint
rorl
inc
inc
add
into
dec
pushf
mov
mov
jp
call
out
lcall
das
mov
and
jmp
lret
pop
pop
pop
call
xor
pop
mov
cmp
fisttpl
or
sahf
cmp
inc
loope
pushf
xchg
lods
imulb
fbstp
xor
imul
bound
dec
leave
in
stc
add
pop
loopne
stos
jns
xor
test
sub
fmull
push
xchg
test
mov
xor
scas
or
cmp
fdivr
enter
movsb
ss
fldcw
dec
mov
das
pop
add
and
sbb
push
cmp
cltd
test
lret
in
lret
inc
lcall
repnz
cmp
cs
lock
int3
xor
or
push
loopne
mov
jl
cmp
jae
and
mov
mov
sti
mov
insb
jle
jae
mov
setg
mov
fstps
xchg
enter
and
int
pop
call
in
cs
dec
inc
xchg
sub
add
pop
loope
fistl
jae
popw
imul
mov
call
push
xor
pop
pop
arpl
out
pop
sbb
xor
cmp
cli
mov
inc
xchg
lret
fnstsw
pop
mov
mov
add
in
icebp
mov
pop
int
mov
test
in
in
add
cmp
pop
jns
inc
mov
imul
add
stos
xchg
cmp
xchg
hlt
pop
fcmovnu
test
adc
mov
sar
aaa
ss
repz
mov
mov
pop
and
or
imul
daa
in
push
mov
aam
jmp
cltd
sub
jl
pusha
cld
sbb
cmp
mov
aaa
and
stos
in
not
add
jns
inc
int3
andb
stos
mov
lret
pop
lret
ja
int3
js
dec
cmp
fwait
popf
lods
ss
sti
call
pop
sbb
jecxz
inc
add
imul
adc
cmp
or
sbb
inc
inc
insb
mov
in
gs
cld
dec
loopne
addb
call
jns
and
mov
dec
outsb
cmc
inc
xchg
out
push
ret
jle
xchg
pusha
sbb
in
shlb
scas
cmc
test
fsubs
call
sub
dec
divb
pop
xor
mov
adc
xor
repz
insl
sahf
inc
pop
add
cmp
arpl
and
je
or
sbb
mov
inc
pop
dec
fmul
mov
dec
fstps
inc
ss
mov
roll
mov
or
jns
xchg
in
inc
inc
pop
adc
dec
push
pop
push
pop
mov
hlt
and
insb
and
cmp
and
mov
jb
inc
xchg
sbb
into
jecxz
jg
sub
pop
push
std
pop
inc
insb
and
or
push
lret
in
aaa
dec
movsb
movsl
mov
add
shr
pop
cli
jo
and
pop
sbb
sahf
push
test
sbb
ret
repz
mov
mov
leave
sbb
mov
and
arpl
pop
inc
cmp
fldt
inc
push
xor
mov
xchg
dec
js
stc
pop
sti
call
ret
mov
fdivl
xor
push
sub
xchg
repz
xor
xor
pop
dec
mov
out
dec
jbe
repz
test
or
mov
cmc
mov
ror
gs
sub
pop
xchg
mov
lahf
aad
aaa
push
bnd
jmp
xchg
clc
pop
cmp
pop
jb
sbb
xchg
outsb
adc
ss
mov
aam
jl
bound
jecxz
sti
or
lret
adc
jb
jg
add
cmp
jle
inc
and
dec
xor
pop
dec
lahf
aaa
cs
cmpsl
arpl
mov
fdivl
loop
leave
fmull
jnp
add
repnz
rcrl
mov
leave
jecxz
push
adc
jge
jle
adc
fdivr
jp,pt
mulb
mov
dec
push
adc
arpl
push
imul
sbb
pusha
mov
dec
aaa
add
cmp
add
outsb
cmp
adc
pop
test
pop
xchg
popa
and
bound
push
outsb
adcl
lods
mov
mov
mov
into
nop
leave
les
pop
jp
jle
arpl
xchg
scas
pop
iret
xchg
sub
lret
add
cmp
sahf
mov
repz
push
jns
pop
sbb
inc
stc
scas
lea
push
dec
lcall
call
inc
fadds
xchg
pop
sbb
xchg
fnstsw
fwait
ja
jp
mov
aam
lea
out
ret
push
in
cmp
cmp
push
pop
mov
icebp
mov
jle
sub
lret
hlt
push
mov
xor
jo
fldl
fsubs
fdivrs
push
dec
inc
fsubrs
xchg
push
sbbl
call
push
fmuls
dec
outsl
mov
lret
insl
adcl
repz
dec
mov
push
es
push
push
mov
shl
mov
aam
mov
push
xor
and
stos
pop
sbb
add
cs
jl
pushf
loope
mov
fstps
mov
movsl
mov
pushf
popa
test
idivl
push
sub
adc
cmc
pop
idivb
stos
xchg
loope
pop
sarb
lods
jns
add
pop
cmp
aaa
lcall
rolb
stos
clc
call
jns
xchg
push
imul
lea
in
cs
sahf
dec
mov
or
sti
cmp
cmp
sbb
test
lret
es
sahf
sbb
insl
mov
imul
pop
aaa
roll
push
icebp
cmp
push
sbb
cltd
movsb
into
in
hlt
mov
dec
add
jecxz
ds
pop
shr
mov
push
adc
rcrb
ret
pop
add
jae
test
push
sub
test
std
and
xchg
hlt
pop
xchg
mov
pusha
mov
loope
dec
fs
mov
jbe
or
roll
adc
ret
scas
pop
jl
sbb
mov
mov
std
lret
mov
movsl
sub
mov
jp
cmp
inc
xor
aaa
ja
fldt
inc
push
shl
rol
mov
push
rclb
mov
adc
or
out
pop
dec
xchg
mov
cwtl
dec
jecxz
cmp
fistpll
les
popf
lret
fwait
rol
mov
in
aaa
enter
cmp
mov
sbb
sbb
fdivrs
ret
dec
jp
out
ds
aaa
push
xchg
mov
xor
add
xchg
shll
popf
inc
js
pop
fld
enter
rcll
jp
jnp
stc
jno
dec
pop
mov
dec
dec
or
enter
daa
dec
xchg
xlat
sub
inc
dec
cld
insl
shlb
jl
xor
mov
clc
ds
sbb
shrl
pop
mov
mov
in
outsb
cmp
jno
dec
adc
push
stos
inc
or
xchg
aaa
mov
into
movsb
std
clc
das
out
jge
xor
xor
shlb
sahf
lcall
push
sbb
cmp
jecxz
and
cmp
iret
test
cli
sbb
mov
enter
pop
loope
adcb
xchg
cmp
mov
or
adc
sbb
lea
ja
call
lock
pop
bswap
movsl
push
or
in
cs
and
cld
push
sbb
rcrb
push
notl
inc
pop
pop
mov
push
pop
incl
pop
sub
pop
ljmp
mov
sbbb
inc
mov
adc
pop
sbb
sbb
pop
aas
sti
pop
cltd
ret
sbb
add
sub
nop
jmp
neg
ss
outsl
int3
fcomp
stc
sbb
cmp
sarb
pop
test
mov
js
sub
rol
js
pop
pushf
lret
push
mov
inc
mov
adc
ljmp
pusha
cmp
aaa
aam
mov
xor
add
fwait
adc
rolb
pop
jg
jecxz
test
divb
push
in
mov
mov
lock
jb
mov
jbe
mov
loope
cwtl
test
lea
xchg
pop
add
mov
add
pop
cmpsl
and
jnp
testl
pop
mov
sar
aaa
pop
fcompl
pop
xchg
mov
lret
fdivrl
xor
int3
fisttpll
xchg
push
xchg
pusha
dec
outsl
push
pop
jg
sub
sbb
or
das
cmp
insb
in
push
lds
push
push
aaa
xor
bound
test
lcall
dec
mov
add
push
in
in
xchg
jno
push
mov
je
cmc
mov
jbe
xor
loop
sti
pop
leave
mov
in
enter
add
push
cwtl
lods
adc
pop
bound
inc
incl
inc
dec
icebp
mov
mov
stos
lret
bound
nop
xlat
pop
sbb
aam
mov
outsb
ret
sbb
adc
lahf
sar
mov
sub
adc
mov
testl
mov
pop
pop
pop
and
cs
inc
call
arpl
lret
add
xor
mov
xchg
inc
inc
or
addb
movsb
sub
sbb
pop
inc
xchg
sti
data16
sahf
xor
jb
stos
fisubs
or
adc
sbb
dec
dec
inc
mov
jb
mov
ja
insb
jo
mov
leave
stos
push
lea
dec
inc
pop
xlat
inc
sahf
mov
aaa
bsf
lret
push
js
mov
in
dec
fisubs
arpl
and
pop
mov
ret
fistl
pop
insl
jo
icebp
mov
adc
jp
pop
inc
xchg
lods
inc
lds
cmp
mov
fwait
in
ljmp
xorl
ss
outsb
adc
mov
inc
push
shrl
inc
fistps
push
pop
xchg
jg
lods
std
dec
outsb
pop
mov
inc
jo
xor
in
pop
pusha
sbb
scas
jne
mov
mov
syscall
push
jno
jmp
lock
repnz
lods
pop
jo
pop
into
es
mov
jbe
pop
sub
mov
push
mov
mov
cltd
dec
dec
mov
jae
mov
sub
enter
cld
push
aam
xor
mov
and
dec
cld
dec
cmpb
cmp
loop
out
ret
loop
in
mov
jb
mov
imul
and
outsb
mov
push
adcb
add
aas
int
aas
mov
aas
mov
outsb
inc
push
ficomps
mov
xor
jl
int
xchg
pop
mov
add
sbb
or
data16
into
imul
jg
stos
jp
movsl
fbstp
in
lock
js
push
sub
jnp
xchg
sub
neg
imul
cmp
out
pop
rcrl
daa
out
lcall
dec
sbb
sarb
pop
enter
xchg
sub
jmp
mov
mov
in
inc
dec
pop
adc
outsb
jl
pop
sub
pushf
sbb
ret
movsl
sub
cmp
in
pusha
jno
ss
push
mov
pop
ret
sbb
pop
mov
xchg
sub
loope
loopne
fwait
and
packsswb
add
ja
push
mov
pop
in
xchg
sub
xor
sbb
sub
test
mov
pop
cmp
mov
pop
push
or
push
cmpsl
loopne
sbb
jmp
mov
aaa
jae
imul
push
inc
pop
addr16
push
push
cltd
popf
aaa
sti
shlb
push
pop
add
test
lods
andb
and
loop
sub
cmp
les
ss
sbb
and
push
fwait
fs
pop
scas
jo
mov
jp
ljmp
push
dec
dec
xchg
dec
testl
andl
cld
sbb
jo
add
insl
int3
jg
inc
ret
jl
or
pop
pop
test
pop
outsb
pop
leave
push
movsl
nop
push
jae
sub
push
out
adc
sti
or
cmpsb
repz
push
mov
pusha
dec
fmuls
lods
push
stos
cli
ljmp
in
repz
dec
and
pop
mov
cmp
pop
shlb
cs
addb
adc
dec
cmp
insl
mov
and
lods
and
in
xor
sbb
loope
lahf
cmp
aaa
popf
add
xor
pop
sbb
sub
cmp
stos
call
and
jno
pop
mulb
pop
push
movsb
add
idivb
pop
xor
add
dec
aaa
pop
psubd
fldl
pop
idivb
fsubl
pop
sbb
add
sahf
inc
pop
jle
inc
out
addr16
pushf
or
in
faddl
fldt
jl
mov
pushf
sahf
movsb
sbb
jnp
pop
lea
or
stos
push
popa
sbb
js
je
cltd
or
clc
pop
inc
ss
es
popf
pushf
icebp
jmp
setnp
das
aas
call
mov
xchg
shl
mov
push
inc
jns
pop
add
cs
pop
mov
sbb
inc
in
movsw
push
cmpsb
test
and
and
jp
mov
sbb
cld
pop
xchg
sub
push
loope
dec
mov
test
fnsave
and
adc
loope
arpl
push
out
fidivrs
pushf
xlat
stc
daa
ss
fcomps
xor
jmp
cmp
add
mov
jle
cmp
sbb
popf
cmp
dec
sbb
repz
xchg
out
cltd
ficoml
insb
pop
rolb
push
lods
icebp
mov
jp
sub
stos
push
inc
fcmovnbe
xor
sub
push
rolb
mov
dec
xchg
mov
ljmp
cltd
mov
ds
js
sti
sti
push
pop
hlt
rol
inc
and
iret
je
add
fsubrl
jmp
or
inc
fistps
imul
fadd
pushf
lahf
jle
aaa
fistl
or
repz
lds
ljmp
lcall
insl
lcall
pusha
ret
divl
insb
sbb
out
mov
xchg
popf
jecxz
cmc
jl
inc
js
aaa
stos
pop
push
sub
aam
lahf
add
xchg
mov
mov
dec
inc
sbb
enter
in
add
lahf
sub
fwait
xorl
pop
push
fsub
pop
xorb
subb
lea
cmpsb
cmpsl
mov
enter
shrb
xor
cli
stos
pop
cmp
mov
fbld
test
int
loopne
sub
pop
cwtl
xchg
inc
xor
popa
sbb
xor
nop
xor
xor
jge
stos
test
js
jl
and
sbb
mov
leave
mov
add
pop
inc
jns
pop
mov
pop
and
mov
dec
mov
jl
ljmp
test
inc
jge
loope
cld
aaa
jg
in
outsb
das
fdivl
inc
loop
nop
data16
pop
idivl
test
lock
inc
add
jne
dec
xchg
stos
fstpl
nop
push
js
cmp
mov
ss
bound
jb
sti
pusha
int
cmpb
xchg
jle
loopne
inc
dec
mov
sbb
jecxz
in
aaa
push
cmp
gs
mov
repz
and
fdivl
sub
sub
call
pusha
jo
cmp
aaa
les
cmp
decb
icebp
cltd
pop
les
or
ljmp
inc
std
inc
je
frstor
or
adc
jmp
bsr
jb
cmpsl
fsubl
aad
mov
pop
in
jb
push
push
jmp
sbb
and
pop
cli
aas
xchg
in
lods
aaa
cmc
mov
std
lahf
loope
stos
inc
pop
loop
sbb
dec
leave
jle
mov
cmp
dec
inc
sbbb
sub
inc
or
ret
cmp
add
das
je
inc
rolb
push
bound
fsub
test
insb
push
add
mov
pushf
sub
and
stos
dec
xor
xor
inc
mov
lcall
loope
sbb
lahf
sub
ret
jecxz
pop
loope
sub
adc
rol
adc
int
lret
scas
lock
test
and
je
sbb
std
pop
pop
mov
inc
pop
dec
push
mov
cmpsb
loope
rcll
sbb
jl
mov
cltd
xchg
daa
ljmp
jne
sbb
divb
pop
in
add
insb
mov
push
fsub
fwait
aas
test
dec
xchg
push
cmpsl
hlt
mov
sub
pop
shlb
dec
std
push
xchg
test
jae
mov
jne
xchg
sbb
rorl
mov
scas
add
call
push
lea
rcr
jle
in
xchg
loope
movb
cmpsl
cltd
outsb
mov
sub
pop
outsb
push
pop
pop
ss
repnz
adc
int3
inc
xchg
jle
test
pop
mov
enter
xor
pop
xchg
push
gs
test
es
mov
movsb
repz
adc
cmp
leave
sub
test
and
pop
das
jp
inc
fldt
jo
repnz
push
rcll
jl
jmp
lods
dec
nop
or
fcomp
pop
test
iret
fwait
out
bound
lcall
arpl
mov
int
push
push
push
loope
mov
pop
fwait
es
add
pop
xor
idivl
jecxz
pop
jne
jno
and
push
mov
mov
ds
jae
mov
dec
and
dec
sub
mov
aaa
test
ret
ds
pop
sbb
sub
pop
testl
xchg
es
inc
mov
mov
add
cmp
dec
idivl
sub
mov
mov
xor
xchg
fimuls
pop
and
in
mov
fst
cmp
push
sub
bound
adc
aaa
inc
arpl
jmp
orb
popa
add
xchg
andb
je
push
xchg
dec
dec
push
xchg
mov
jg
mov
shrl
int3
inc
ja
outsl
imul
jecxz
cli
pop
inc
sbb
arpl
pushf
iret
cmp
repz
enter
inc
jle
ret
fistpl
push
and
push
arpl
popa
pop
pop
out
rorl
rcll
mov
dec
push
out
pushf
out
pop
xchg
sbb
das
inc
sub
pushf
cwtl
dec
push
fwait
and
pop
enter
cmp
movsb
cmp
pop
xchg
mov
fnstenv
jbe
lea
mov
idivl
insb
cmp
add
outsb
jno
xchg
imul
mov
jo
cs
outsl
mov
icebp
sbb
fstps
out
cmpsb
push
add
pop
stc
lret
popf
ss
jbe
nop
test
lret
mov
outsl
pop
mov
fisttpll
jbe
sti
add
push
stc
dec
shl
ret
insb
cmp
ss
test
mov
arpl
sbb
fsts
cmp
pop
inc
add
mov
out
sahf
movl
dec
lods
xor
pop
testl
jp
sbb
ret
outsb
inc
mov
es
mov
int
mov
dec
and
sti
out
sub
push
add
dec
xor
xor
sti
into
inc
es
pop
jbe
push
and
pop
addr16
xor
out
mov
mov
aaa
sub
into
xchg
movsl
aaa
les
inc
enter
mov
mov
and
cmp
xchg
imul
scas
pushl
sbb
icebp
mov
dec
rclb
jne
enter
lcall
jle
or
rcrb
stc
dec
jp
or
call
hlt
sbb
mov
sbb
pop
mov
cmp
pusha
popf
fwait
add
xchg
out
pop
int3
movsl
pusha
mov
jbe
cwtl
mov
sub
lods
scas
je
aaa
xlat
repz
inc
stos
pop
cmc
push
adc
xchg
dec
in
sbb
jl
das
mov
lea
push
xor
xor
ja
xor
mov
mov
xor
push
inc
cmp
add
xlat
addr16
xchg
lahf
test
insl
test
dec
fsubrs
lret
mov
dec
jmp
jmp
jmp
add
in
mov
stos
push
pop
sbb
sbb
in
mov
mov
jle
mov
lret
hlt
jg
sbb
jp
adc
and
jmp
mov
push
ss
ret
sub
std
mov
mov
in
sub
stos
add
leave
loop
sbb
or
scas
imul
adc
sbb
das
insl
aas
xor
lahf
pop
addr16
cmp
lods
out
mov
pusha
jl
and
and
test
xchg
rcl
ds
mov
push
aas
lds
mov
push
scas
test
lods
jle
sub
loopne
and
push
popf
rcll
cmp
out
aas
add
les
sbb
test
cmpsl
push
inc
movsl
push
jnp
outsb
data16
xor
sbb
push
call
icebp
pusha
pop
pop
mov
xor
lret
das
mov
xchg
mull
aaa
jb
or
mov
pop
pop
fimull
push
jg
push
insl
mov
xchg
aaa
out
cwtl
cs
int3
out
je
pop
les
cltd
xchg
shrb
in
or
addb
jo
test
add
std
aaa
gs
nop
shll
push
daa
movsb
jmp
cld
inc
xor
mov
out
lcall
aas
in
movsl
pusha
cwtl
pop
clc
mov
cmp
lcall
cli
test
sbb
fnstsw
arpl
sbb
mov
push
into
negb
and
xchg
cltd
icebp
test
xlat
sahf
cld
push
sti
ret
mov
inc
and
mov
jecxz
out
aaa
shlb
mov
mov
mov
mov
jl
gs
fildll
adc
lret
orl
push
sarl
ret
dec
mov
pusha
sbb
nop
pop
inc
cltd
or
sbb
mov
and
repz
fwait
cmp
repnz
mov
and
lods
insl
xchg
cmp
mov
movb
and
in
push
pop
sbb
int3
mov
out
dec
std
loop
shll
mov
cli
and
jno
jg
or
icebp
in
rcll
and
ret
scas
pop
add
aaa
mov
decl
cmp
mov
jo
call
mov
dec
fbld
in
mov
popl
sahf
sub
pushf
sbb
mov
lret
ja
and
in
mov
int3
aaa
sub
dec
and
out
inc
sbb
out
aaa
mov
and
push
sbb
test
sub
pusha
orl
pusha
adc
repnz
add
add
ss
add
inc
and
cmpsb
pop
sub
mov
jecxz
and
pop
adc
and
fnsave
pop
lock
inc
lret
rolb
in
mov
scas
sbb
or
shl
int
lds
push
mov
jmp
xchg
negl
in
cli
outsb
aad
mov
sbb
mov
test
and
cmp
inc
idivb
aaa
mov
xchg
pop
mov
int3
popf
ja
or
bound
mov
roll
sub
out
dec
jae
aas
or
inc
xor
xchg
adc
cld
sub
jl
and
xchg
ret
and
inc
pop
cmp
arpl
not
mov
icebp
lret
pop
daa
ret
es
adc
test
in
dec
ss
cmpsb
lods
add
test
dec
xchg
aaa
shrb
enter
sub
pusha
dec
leave
jp
movsl
mov
cmp
xor
pop
push
into
gs
aas
xor
xchg
jnp
out
mov
xchg
dec
sub
cmp
pop
testb
fldl
sub
insb
dec
out
cld
push
call
sub
sub
mov
mov
adc
push
mov
cmp
dec
and
nop
addr16
or
repz
sbb
pop
js
mov
add
xor
int
adc
fnstsw
shrb
jb
icebp
jnp
out
outsb
popa
lret
les
pusha
mov
xchg
mov
mov
mov
test
xchg
mov
xor
mov
jle
lahf
push
mov
js
or
rcl
or
pushl
lock
movsb
mov
pop
out
and
add
cmpsl
and
push
jo
cmp
xor
cmp
pop
outsl
push
xchg
ds
lcall
rcrb
fxch
xor
or
push
xchg
ret
pop
test
pop
popf
arpl
add
insb
pop
push
xlat
xchg
mov
jno
mov
ret
pop
outsl
jnp
or
push
lret
push
daa
inc
cld
mov
add
fst
pop
push
fnstsw
aaa
lret
push
and
stos
cmp
fstps
cltd
push
pop
lret
lret
add
roll
cltd
cmpsb
or
cmpb
inc
inc
in
test
sub
pop
xchg
mov
pop
ss
scas
push
movsb
lcall
jb
outsb
in
or
out
cmp
mov
call
mov
and
jmp
mov
jb
mov
aam
dec
xchg
sub
and
pop
jnp
xchg
adc
cmpsb
sub
dec
jl
lcall
repnz
inc
push
fbstp
setb
sbb
imul
lock
or
ljmp
adc
sub
mov
test
test
and
fwait
mov
out
das
inc
fadds
sub
xor
sbb
add
icebp
bound
jo
sbb
xor
lret
pop
out
mov
repz
aaa
jno
cs
aas
dec
jle
push
or
outsl
mov
sub
push
ss
xchg
sbb
pop
dec
insl
cmove
lods
jmp
adc
pusha
ds
push
divb
ret
dec
popf
sbb
mov
xor
cs
stos
push
fdivs
add
mov
cmp
and
adc
ja
mov
arpl
out
test
sub
aam
mov
xchg
nop
mov
fsubl
aam
fnstenv
loopne
pop
cmp
arpl
fnstenv
xchg
pop
mov
or
mov
mov
pop
pop
ds
dec
mov
in
push
aam
les
imul
push
dec
mov
insl
and
and
dec
loop
int
insb
mov
cs
cmp
fidivs
mov
dec
lret
xchg
sti
mov
push
scas
dec
jecxz
scas
xor
shll
int3
cmp
ss
push
xchg
je
jle
testl
inc
movsb
pop
neg
imul
inc
mov
inc
cmpsb
lods
push
jmp
je
loope
inc
add
xor
jmp
ret
out
lret
pop
popa
inc
adc
sbb
cwtl
in
pop
xor
mov
pop
adc
iret
mov
add
incb
xor
push
dec
adc
push
fnstcw
jbe
js
loop
mov
jns
xchg
and
lret
gs
sbb
imul
sub
repnz
dec
xchg
lock
sbb
jbe
sbb
push
xchg
and
xchg
xchg
ja
loop
pop
ss
jno
jl
cmpsb
cmpsb
pop
pop
std
add
dec
aaa
ds
push
repnz
addr16
loop
push
jnp
sti
sbb
std
cltd
rcrb
test
and
adc
add
jle
sbb
jbe
adc
push
testl
mov
sbb
cmpb
jnp
aaa
pop
ret
loop
ds
cmc
arpl
repz
rcrl
cmpl
mov
lret
push
jmp
inc
mov
sub
sbb
inc
shrb
or
sbb
mov
or
shll
gs
xor
loopne
pop
xor
push
pushf
aaa
and
xor
xor
stos
mov
call
cli
popa
call
dec
imul
cmc
inc
inc
lods
adc
scas
mov
push
sarb
mov
add
mov
fldl
mov
cmp
rcrl
push
mov
sbb
adc
dec
leave
in
jne
push
jl
int
dec
insb
mov
cwtl
dec
pop
push
les
data16
mov
jmp
adc
ret
jmp
mov
in
adcl
loopne
sub
int
xchg
cmp
lods
xchg
loopne
incl
jecxz
gs
data16
sbb
inc
pop
popf
out
push
aaa
mov
test
push
cmp
in
cmp
add
mov
mov
cli
test
jb
or
imul
int
arpl
ror
pop
movsl
ds
ja
dec
and
in
int
outsl
add
jg
jp
push
xchg
imul
mov
je
xor
jae
aad
orl
sbb
cmp
jbe
test
xchg
cmp
pop
lock
jbe
sub
aaa
idiv
lea
shlb
inc
lahf
gs
lret
ljmp
or
inc
repnz
std
fstpl
aaa
xchg
pusha
xchg
xchg
data16
mov
pop
enter
adc
ss
lea
mov
fwait
sub
pop
dec
mov
imul
mov
pop
lret
pop
ds
inc
cltd
dec
sub
cmpsb
sbb
lds
adc
sbb
xor
adc
sub
push
testl
test
shl
inc
ds
mov
sbb
mov
xchg
sbb
and
call
jbe
movsb
push
es
add
push
dec
and
pop
insb
xchg
bound
fldcw
cltd
push
sti
gs
iret
pop
sbbb
xchg
cmpsl
push
insb
pushf
cld
pop
add
xorl
stos
repnz
xor
mov
mov
cli
loope
xchg
adc
lret
test
cmp
and
cmc
xchg
test
mov
sbb
mov
aam
cmpsl
fdiv
sbb
or
roll
mov
cld
sub
jne
popa
dec
je
sub
divl
adc
in
and
sbb
dec
call
cmp
mov
adc
mov
pop
aaa
add
stos
nop
bound
sbb
adc
adc
fistpl
std
jg
pop
sbb
fsubrl
aas
cmpsb
fcompl
xor
pushf
sbb
into
out
dec
faddl
jle
or
inc
into
cmp
lret
add
in
out
mov
in
loope
loope
aaa
jne
ja
faddl
cwtl
mov
fmuls
aad
adc
ss
mov
xor
dec
mov
xchg
outsb
pop
mov
nop
sti
sti
in
jno
fildll
lret
fists
inc
loop
inc
cmp
jecxz
shlb
movsl
sbb
imul
xchg
mov
dec
push
aam
int3
jno
inc
mov
adcb
dec
out
xchg
cli
ret
in
dec
out
lahf
pop
add
xchg
push
jl
push
push
popa
mov
add
and
negb
fldl
or
fcmovnb
pop
mov
jno
xchg
or
cmp
sbb
ds
aaa
sbb
pop
in
dec
mov
stc
test
cmpsb
into
in
dec
mov
pusha
jecxz
ss
shrb
or
cmp
dec
adcl
xor
xchg
std
sbb
sbb
repz
aas
loope
sub
sub
pop
and
lods
aad
inc
aaa
daa
and
pop
xchg
aam
push
lret
xlat
shll
mov
add
adc
and
mov
jne
pop
aaa
jbe
push
imul
inc
xchg
pop
jg
roll
clc
sbb
ss
pop
int3
xor
sub
int
sub
movsb
or
sbb
jb
lods
ds
xlat
imul
pop
inc
nop
pop
push
push
mov
pop
addl
imul
inc
jns
cmp
adc
fcomps
in
fnstcw
xor
dec
push
push
inc
pop
adc
mov
sbb
pop
adc
sbb
cs
xor
jl
sub
enter
popl
xchg
out
enter
pop
imul
cltd
mov
mov
adc
cmp
stos
or
les
addr16
das
xchg
sub
dec
pop
lock
jbe
adc
sar
ljmp
adc
jl
lret
add
movsl
ja
and
stos
arpl
jae
jbe
cmp
sub
lret
inc
dec
mov
outsb
or
jae
add
lret
test
das
push
dec
fimuls
jle
psrlq
push
cmp
ss
lret
mov
push
add
mov
insl
fs
mov
nop
cli
cmc
movb
sbb
icebp
pusha
aaa
sahf
cli
add
jbe
jp
pop
pop
mov
pop
mov
mov
dec
inc
fnsave
test
mov
insl
push
push
push
add
inc
adc
add
adc
mov
out
jns
xor
in
lcall
int3
or
stos
add
rcl
subb
xlat
mov
push
and
aaa
loopne
or
and
and
rcrb
jge
mov
popf
inc
mov
sub
mov
ss
pop
cld
aaa
inc
cmp
cltd
mov
lea
incl
lds
in
fadds
adc
adc
push
jg
bound
in
mov
daa
add
cld
inc
sti
or
cmp
fwait
popf
aam
and
sbb
clc
pop
cmpb
pop
inc
and
pop
insb
popa
addr16
mov
pop
lds
push
iret
cmc
notb
sub
movsb
call
add
and
dec
xor
dec
jns
pusha
jne
sbb
sti
hlt
push
sbb
sti
sbb
xor
icebp
les
ret
add
pop
pop
loop
mov
std
dec
inc
add
mov
jb
sub
mov
out
or
and
movsl
xor
enter
jno
aaa
pop
lock
xchg
scas
jge
fstpt
xlat
aaa
andb
jecxz
shrb
and
add
enter
adc
test
or
jb
jae
icebp
xchg
loop
push
pop
cmp
cmpsb
pop
mov
push
and
sub
int
fidivrl
xchg
jle
int3
lods
mov
sub
inc
fwait
adc
jo
jae
outsb
mov
adc
test
iret
std
xor
shlb
add
lret
test
xor
xorl
xchg
popf
sti
in
cmpsb
fbld
shrl
sbb
pop
ljmp
xchg
stos
cli
std
jp
pop
pop
addr16
dec
sahf
lahf
jp
filds
fs
sub
sub
dec
mov
outsb
mov
cmp
xchg
bound
fidivl
movsl
adc
sub
jb
scas
popf
lret
inc
test
outsl
push
dec
rcrl
popf
push
popf
fmul
fnstsw
bound
lock
pop
jb
cmp
fdivr
jge
mov
jmp
popa
sbb
push
repz
pop
test
fildll
jns
add
mov
xor
inc
stos
add
call
mov
mov
pop
mov
aaa
cmp
roll
xchg
iret
mov
int
push
dec
ss
cld
cmpsl
inc
jb
fistl
or
es
call
aas
bound
push
mov
inc
insl
in
lret
mov
dec
and
xchg
lret
push
mov
scas
pushf
add
push
js
push
jb
cmc
push
jmp
fisubrs
xor
loope
je
push
pushw
ret
or
pusha
jle
aaa
cmpsl
xchg
sahf
dec
cwtl
pop
mov
xor
enter
mov
xchg
dec
lret
in
sti
jmp
or
dec
inc
add
popf
pusha
jbe
into
cmp
cmp
stos
push
push
in
and
push
aaa
add
sti
ss
lret
inc
stos
gs
insl
or
js
pusha
mov
scas
adc
lret
popa
cmc
and
xor
inc
jb
cmp
add
imulb
pop
fstpl
hlt
inc
in
icebp
jnp
lea
push
dec
arpl
shl
movsbl
dec
xor
mov
sbb
jl
mov
pop
roll
aaa
lahf
mov
xchg
ja
dec
push
inc
cmp
repz
mulb
cmpsb
int
xchg
call
arpl
jle
outsb
es
cs
js
pop
loope
imul
sub
push
sub
cmp
bound
jl
mov
push
icebp
push
xorb
ss
roll
jge
call
mov
je
enter
mov
repz
jp
mov
mov
jge
js
sbb
leave
adcl
dec
jg
inc
lret
insl
lahf
mov
cmp
cmp
cmpsl
adc
arpl
xor
push
repnz
or
pop
push
or
sub
mov
in
addr16
push
movsl
add
paddw
push
inc
ds
add
aaa
pushf
outsl
sbb
cmpsb
insb
push
test
xchg
mov
addb
int3
ret
ss
push
push
push
in
push
cmp
insl
in
in
mov
pop
fstpl
add
push
push
jnp
jle
rol
lea
mov
popf
jo
cs
cmpsl
enter
repz
push
mov
movsl
loopne
jae
mov
jb
ficompl
mov
imul
xchg
ret
jle,pt
aas
dec
xorb
cld
jns
test
int
add
cmpsl
jecxz
jg
mov
or
xchg
sbb
and
shll
sbb
mov
cmp
outsb
out
xchg
call
sbb
jle
dec
rcl
jle
ja
test
popa
pop
in
mov
adc
fnsave
inc
sub
and
xchg
mov
in
and
mov
dec
adc
xlat
sub
lock
jns
sbb
es
sbb
mov
cltd
pop
sbb
pshufw
dec
movb
ss
cmp
sarl
je
and
outsb
sbb
adc
cmpsb
push
mov
dec
lret
lret
loope
lods
pop
cmp
sub
sahf
cmp
sbb
daa
xchg
inc
repz
or
push
out
stc
cmp
pop
scas
xchg
sbb
jl
outsl
xor
fildl
sub
je
cmp
ss
les
mov
xchg
pusha
adc
cmp
adc
sbb
sbb
mov
or
cld
sub
insl
fdivr
xlat
aaa
lcall
aam
test
pop
push
pop
loop
inc
push
out
xchg
repz
sbb
xor
aam
sbb
in
pop
aas
cmpsb
out
popa
pushf
jp
pop
repz
mov
jmp
add
add
pop
lods
stc
mov
add
xor
add
add
rcrl
jmp
dec
mov
in
mov
pop
mov
int
stc
loope
mov
aaa
xchg
push
push
in
mov
xchg
or
dec
and
cwtl
not
xor
hlt
sbb
add
das
mov
push
and
sbb
int3
sub
lcall
mov
std
loope
in
and
int3
xchg
add
cmp
add
push
addb
arpl
hlt
add
test
adc
inc
and
push
sbb
sbb
xor
lods
lcall
inc
and
pop
sbb
xor
nopl
and
orl
in
ss
xor
xchg
jecxz
cmpsb
andb
outsb
rcll
insl
ss
xchg
cmp
lds
adc
mov
xchg
sbb
xor
mov
imul
dec
pop
mov
xchg
es
cmp
xor
pop
jmp
in
rol
icebp
adc
add
add
test
lock
dec
cmp
pusha
fwait
sbbl
repz
inc
in
mov
jbe
in
push
inc
mov
add
std
jecxz
into
and
pop
in
cmpsb
pusha
or
stc
push
xchg
ss
add
or
lret
arpl
mov
cmp
sub
popf
out
cmp
mov
jnp
stc
xor
frstor
addr16
inc
and
xor
lods
dec
mov
jle
das
rolb
rcrl
sbb
out
cmp
ja
insb
cmpsl
subb
add
stc
popf
popf
std
cltd
arpl
pop
lahf
negb
push
stc
cmp
leave
mov
push
inc
cld
popf
sti
fldt
xchg
jne
adc
push
adc
pop
cli
out
jae
dec
addr16
cli
ds
fisubs
sbb
mov
bound
lret
lret
gs
sbb
aad
addr16
mov
xchg
adc
mov
stos
adc
and
dec
pop
ljmp
lea
fmuls
fstl
mov
insl
call
xor
popf
mov
ret
pop
pop
xlat
call
lds
ljmp
or
fisttpll
loopne
jo
shll
cmp
and
pop
int3
sub
lret
sahf
pop
cs
stos
pop
out
cs
jg
mov
mov
sti
arpl
movsl
inc
mov
imul
into
imull
xor
adc
push
mov
push
mov
stos
loope,pn
cld
push
pop
icebp
or
or
ret
add
push
mov
pop
mov
daa
jno
dec
mov
jne
test
mov
inc
jge
mov
mov
pop
and
movsb
xchg
inc
push
in
rcrl
insl
dec
push
popf
push
test
or
sbb
dec
incb
mov
stc
mov
mov
out
test
mov
shrl
xchg
push
movaps
cmp
or
mov
lea
scas
shll
xchg
push
sbb
jbe
sbb
mov
outsb
mov
cmp
sub
and
jle
mov
sub
and
mov
stos
and
mov
fstpl
loope
mov
mov
xor
pop
lahf
pop
rcl
imul
loope
pushf
inc
rcrl
adc
jg
enter
lret
cmp
incl
inc
xor
pop
aam
xchg
xor
andb
lods
int3
push
inc
push
mov
fldenv
orb
dec
sbb
out
data16
bound
arpl
ret
push
jle
inc
sahf
movsl
rcrb
ss
xchg
js
sbb
leave
int
pop
mov
pop
mov
inc
outsb
sub
pop
pop
bound
mov
sahf
pop
sbb
arpl
jbe
pushf
cmp
negb
jne
push
cltd
fstps
cmp
ds
fmull
jbe
sub
mov
scas
sarl
lods
pop
mov
clc
jbe
icebp
xchg
jns
arpl
ja
push
repnz
or
gs
pusha
cmp
cmc
es
mov
out
add
das
lahf
adc
xchg
push
mov
jno
mov
mov
mov
in
mov
xchg
xchg
xchg
cmc
rcrb
pop
pop
mov
push
pusha
push
push
inc
push
xchg
push
and
in
mov
lock
cltd
mov
scas
nop
fbld
push
xor
pop
xchg
mov
stos
rolb
mov
inc
imul
jge
bound
pop
pop
fdivl
mov
aam
add
outsl
out
xor
and
xchg
mov
fsubs
xor
push
out
cmp
fndisi(8087
jg
pop
add
or
jl
fnstcw
fmul
pop
scas
in
lods
mov
jp
das
pop
fprem
sub
cmp
out
push
xorl
jp
cmp
push
fcmove
stos
or
lea
sbb
lret
mov
xchg
repz
bound
cmp
outsl
imul
inc
xchg
adc
jb
jmp
lods
xchg
dec
push
js
mov
mov
jl
in
or
leave
jg
jl
out
aas
cltd
lret
scas
js
hlt
ret
mov
mov
sbbl
dec
adc
push
aas
jb
or
xchg
mov
jo
xchg
rclb
movsl
pop
add
ds
ficoms
cwtl
ss
push
sbbb
sub
pop
rorl
into
andb
adc
sbb
pop
push
ret
outsb
cmp
sarl
jl
mov
cs
xor
dec
pop
cmp
out
xor
xorb
mov
xor
stc
ljmp
mov
jp
or
sub
push
mov
xor
add
add
pop
sbb
jecxz
add
sub
mov
call
shlb
scas
leave
imul
jo
pop
sub
cmpsl
sub
jecxz
dec
lock
sub
mov
pop
and
lods
pop
sarb
cmc
adc
mov
or
aam
fs
pop
push
inc
inc
cmp
push
sti
pop
mov
sub
jns
fdivr
rcl
cmp
lahf
cmp
sbb
jbe
cmc
xor
add
movsl
xchg
cmpsb
out
cmp
lret
jno
inc
mov
loope
stc
sbbb
frstor
mov
test
pop
dec
mov
negb
push
aas
call
add
cli
test
jno
fcompl
sbb
dec
add
or
mov
cltd
sbb
rcll
and
js
pop
loope
lahf
mov
push
pop
ret
dec
ss
in
movsl
arpl
call
fucom
mov
sbb
xor
or
pop
sub
mov
inc
mov
aaa
push
xchg
dec
cltd
int
or
stos
ja
es
sub
mov
xchg
daa
adc
movsl
mov
xor
pop
push
fcmovne
adc
lahf
cmc
insl
pop
jo
fmull
repnz
in
pop
lcall
sub
inc
loope
sbb
sub
aaa
cmp
jp
sarl
xchg
xor
cld
test
cmpl
aad
mov
pop
push
loopne
sbb
in
in
xor
fstpl
mov
inc
pop
fistpl
cmp
inc
xchg
rol
mov
stos
sbb
addr16
sub
addr16
int3
jl
enter
xor
icebp
hlt
sbb
inc
fcmovu
pop
aam
push
xchg
outsl
jecxz
pop
popa
call
mov
mov
jle
mov
xchg
divb
in
in
add
mov
cmpsl
insl
inc
mov
popa
int3
xchg
sbbb
gs
divl
loope
repz
and
xchg
test
in
mov
les
mov
xchg
mov
lcall
out
adc
and
out
sahf
imul
mov
push
popa
icebp
sbb
loopne
inc
mov
popf
mov
flds
enter
nopl
fldcw
ffreep
inc
repz
push
fcoml
imul
sub
stos
cmp
stc
cwtl
std
mov
add
test
inc
mov
sbb
xchg
aam
mov
push
ret
xchg
inc
scas
mov
push
cmc
jp
aaa
add
xor
sbb
sbb
sti
jbe
test
jle
lret
leave
mov
hlt
push
ss
fcmovb
or
cmpsl
hlt
scas
pop
mov
pop
shlb
mov
push
dec
ret
test
cmp
pop
add
fldcw
mov
aam
jns
insl
cmp
and
repz
in
jnp
jnp
js
aaa
fdivs
lahf
push
mov
lret
jbe
aaa
xlat
mov
lahf
push
sarb
scas
push
xchg
dec
in
mov
push
jle
pop
jle
ja
pop
push
mov
gs
dec
push
test
sub
xor
dec
pop
cld
fwait
mov
push
iret
movl
xlat
inc
jg
cmp
xchg
loop
clc
pop
aam
mov
adc
mov
fbld
fcoml
adc
mov
ret
sbb
inc
les
sub
clc
sarb
jbe
inc
and
sbb
loopne
sub
add
add
movsb
cmpsl
pusha
lds
sbb
sbb
ss
mov
xlat
iret
xchg
sarb
sbb
add
rcr
ds
xor
push
mov
fldcw
scas
mov
pop
cmp
inc
leave
push
cmpsb
in
sub
jp
out
xor
stos
sbb
pop
mov
mov
aaa
movsb
dec
into
hlt
push
adc
das
push
inc
into
pop
leave
cs
ljmp
sbb
jmp
imul
inc
jb
pop
jl
aam
loope
in
daa
ret
cmp
push
or
add
pop
inc
repz
je
out
fucomi
test
into
or
sbb
adc
cmp
mov
mov
inc
scas
push
fnstenv
cltd
lock
jno
xor
lock
jnp
mov
in
divl
mov
mov
movsl
aaa
mov
sbb
add
lahf
dec
pop
sbb
cmp
mov
push
leave
push
mov
lods
movb
shll
shlb
mov
inc
fwait
loope
pop
adc
pop
int3
mov
pop
repnz
mov
or
enter
mov
dec
cmp
xor
sbb
lea
pop
cmp
mov
pop
cmpsl
xchg
test
clc
dec
ss
mov
xchg
loopne
nop
cmp
in
add
inc
sbb
add
sarl
xchg
enter
and
rcrb
pop
call
adc
add
insb
sbb
ds
loopne
fists
pusha
fidivrl
push
push
cmc
jnp
decl
inc
lahf
dec
aaa
movsl
in
daa
push
icebp
inc
sbb
ret
enter
cmp
xor
aaa
and
sub
mov
add
and
std
or
jo
pop
lret
cmpsl
jl
mov
loopne
add
popf
cmp
push
rcrl
mov
lahf
xchg
push
mov
push
xor
std
mov
adc
mov
fdiv
popf
jecxz
divb
mov
pop
cmp
sub
or
xor
pop
jbe
sbb
hlt
adc
push
lock
test
aaa
xchg
push
sbb
cwtl
arpl
pop
push
sub
pop
dec
imul
dec
aas
daa
inc
pusha
inc
push
popf
inc
test
inc
aam
adc
stc
shlb
mov
xchg
repz
sub
xchg
cmp
mov
pop
iret
int3
aas
xchg
sbbb
jae
jecxz
imul
neg
push
fwait
cmpsb
fbld
mov
dec
adc
xor
pop
loope
loopne
cltd
push
sbb
pushf
je
cmovne
test
popa
cmp
dec
sub
mov
pop
xchg
test
pop
ret
mov
pop
in
movsb
fwait
mov
icebp
pop
add
sub
and
mov
push
dec
mov
cmp
dec
push
sbb
xchg
pop
mov
add
lods
add
ja
cmp
mov
imul
int
call
push
sti
aas
dec
addr16
and
aas
movsb
sbbb
lea
lret
fdiv
pop
or
add
pop
cmp
clc
lock
jmp
test
push
dec
sbb
stc
push
pop
inc
mov
mov
lds
xchg
idivl
mov
or
rcrb
imul
dec
lahf
sub
sbbb
adcl
cwtl
sti
push
add
cmp
jbe
sbb
mov
push
xor
rcrl
nop
test
cmp
xchg
mov
pop
mov
aaa
arpl
sahf
je
xorl
xchg
out
jnp
mov
xchg
xor
xor
push
dec
jno
jbe
sbb
cs
mov
ja
ss
outsl
pop
mov
push
sub
mov
mov
jo
dec
test
mov
mov
xor
lcall
and
pop
pop
cmc
pop
icebp
adc
pop
push
and
jge
aam
inc
and
mov
xchg
pushf
fstpl
imul
mov
pop
in
pusha
pop
rcrb
aam
shl
add
pusha
xchg
xchg
or
adc
dec
push
xchg
push
cwtl
pop
pop
adc
call
sahf
push
in
cmpsb
inc
out
shlb
push
aaa
ljmp
dec
mov
adc
pop
sub
sbb
push
out
pop
jns
adc
mov
cld
adc
push
iret
bound
jge
push
adc
add
pop
fnstcw
jnp
and
enter
popa
mov
adc
cmpsl
mov
lahf
loop
fisubl
stos
insl
shl
jp
aaa
rcrb
int3
mov
mov
dec
dec
bound
je
mov
inc
sub
stos
stos
inc
or
sbb
jmp
mov
cs
cs
cld
stc
jecxz
jmp
mov
add
pop
xchg
xchg
push
inc
add
jne
loope
imul
inc
pop
iret
xor
jle
sub
xor
ljmp
pop
pop
jno
loopne
fnstsw
cmp
sarb
lcall
xchg
push
sub
js
pop
vpsubq
add
shlb
inc
push
jp
mov
inc
scas
add
or
and
sti
out
aas
sub
xchg
mov
add
jecxz
mov
xor
icebp
arpl
pusha
jns
stos
or
sbb
lcall
arpl
mov
push
push
pop
push
cmp
xchg
xchg
es
add
inc
ror
in
es
sti
jp,pn
sbb
cmp
pop
imul
xchg
fwait
pop
jecxz
in
aad
stc
pop
add
rclb
sbbb
and
stc
add
xchg
pop
std
dec
inc
fcomi
xor
pop
sbb
add
push
mov
cltd
je
xchg
lea
lret
cmp
mov
cltd
sti
into
insl
in
test
popf
outsb
or
addr16
loopne
jnp
in
add
adc
arpl
add
jne
xchg
jno
cs
ret
jo
in
mov
in
adc
push
and
in
andl
jmp
inc
pop
add
aam
xchg
std
sub
pop
push
dec
pop
dec
aaa
mov
stc
inc
fstpt
insb
enter
es
outsb
repnz
cmp
jb
push
jnp
cltd
lahf
enter
mov
shr
or
mov
inc
or
pusha
shll
ds
arpl
xor
cmpsl
pop
sbb
js
mov
test
fcmovne
mov
jle
dec
and
mov
std
repz
mov
push
fst
push
cmp
mov
sub
loope
cmp
sbb
mov
test
popf
push
lods
jb
xor
or
cs
pushf
arpl
push
jns
fadd
sbb
push
clc
pop
xchg
insl
int3
outsb
sbb
add
push
pop
push
fwait
je
dec
cmp
xor
push
std
es
jnp
cld
dec
aaa
rsm
mov
scas
jmp
cmp
scas
aaa
inc
sar
int
loopne
fstpl
or
push
das
and
inc
pop
pop
ja
mov
out
jg
mov
dec
bound
dec
jp
sub
bound
movsl
mov
loopne
pop
or
pop
popl
sahf
inc
dec
sub
and
xchg
push
dec
dec
daa
in
shlb
dec
rorl
pop
dec
cmp
sub
mov
es
insb
push
add
shl
push
xor
das
stc
das
lcall
push
arpl
mov
incl
sbb
inc
dec
inc
adc
jp
sbb
adc
pop
lahf
lcall
addl
or
ret
addl
loope
mov
mov
xchg
out
jne
stos
inc
inc
push
xchg
loope
mov
sbb
es
mov
out
ljmp
fs
cmp
adc
aaa
aam
dec
sbb
and
repnz
sub
clc
sub
xor
add
mov
pop
nop
and
movsl
addb
loop
mov
sub
movsb
icebp
jp
insl
and
outsb
xchg
cli
pop
inc
xchg
cwtl
lahf
rorb
ja
pop
insb
xorb
jne
jl
sbb
mov
aaa
cmc
outsb
imul
cmp
cltd
jecxz
mov
pop
inc
push
lcall
mov
xchg
dec
mov
lret
out
mov
cltd
bound
mov
mov
sbb
leave
iret
in
insl
xorb
loopne
aaa
hlt
aaa
inc
gs
mov
mov
xor
or
dec
dec
arpl
stos
loope
scas
aad
lods
sbb
pop
ret
outsb
dec
xchg
xlat
push
lret
push
pop
mov
pop
dec
stos
and
shl
mov
xor
aaa
inc
push
pop
in
jmp
stc
lods
call
xchg
mov
stos
inc
arpl
hlt
sub
data16
mov
outsb
cmp
mov
adcl
cmp
aam
test
loopne
jle
lds
insl
xchg
pop
and
push
loope
mov
lret
insb
aaa
xlat
frstor
pop
shll
and
mov
fstps
lea
xor
ficoml
shr
insl
es
inc
pop
mov
mov
imul
lods
std
into
lock
mov
mov
mov
dec
fsubrs
cmp
push
sub
push
and
adc
jbe
mov
mov
xor
sub
stos
lods
inc
lcall
lock
das
push
pop
jb
std
sbb
imul
in
sahf
inc
xlat
or
out
sbb
pop
mov
into
fldt
nop
pop
sti
dec
jecxz
gs
jb
lea
movsl
adc
cld
and
jmp
jle
repnz
dec
inc
cmp
cmpsb
add
clc
push
dec
cmpsl
pushf
pop
sbb
push
inc
mov
je
das
insb
les
sti
cmpsb
sub
clc
mov
and
cmpsl
bound
ret
icebp
ss
mov
icebp
insl
mov
mov
addb
insb
jmp
scas
divl
aas
sbb
loopne
test
push
subb
repnz
mov
or
movsb
outsb
push
pop
mov
sbb
dec
mov
aaa
test
ds
jg
sahf
jb
and
lods
xor
pop
std
stc
jle
mov
cmpl
jle
xor
xchg
or
dec
outsl
stos
or
mov
jne
jmp
fldt
push
jnp
xor
mov
dec
insl
movsb
cmp
repz
mov
fwait
sbb
cmp
mov
jne
cmp
std
fsubrl
mov
sbb
add
dec
lret
xor
add
pop
les
lods
lods
ret
push
and
xor
or
outsb
gs
xor
arpl
cmp
sbb
outsb
or
pushf
xor
jno
aaa
pop
insb
push
decl
jle
and
or
nop
shrl
pop
lds
cmpsb
or
stos
and
pop
popf
pusha
popf
inc
fadds
jmp
mov
fsts
fcmovnu
push
push
pop
ljmp
std
add
add
pop
in
and
fistpll
in
insl
or
out
inc
sbb
jp
xor
and
testl
lret
mov
inc
les
push
and
pop
inc
stos
pop
iret
xlat
testb
lods
icebp
push
int3
push
mov
scas
push
jge
or
jae
jecxz
mov
enter
outsb
pop
sbb
ja
shlb
xchg
mov
jl
jecxz
pushf
fs
outsl
in
mov
xchg
aaa
dec
lret
push
push
jmp
mov
test
pop
aaa
hlt
pop
push
and
inc
ret
jae
sbb
lret
pop
into
stos
test
aaa
mov
sub
sub
mov
test
push
pop
adc
aam
lds
lret
xor
and
es
cmp
jl
or
fmuls
mov
xor
orb
cli
int
mov
jl
aad
popa
cmpsl
pop
cwtl
lods
push
mov
jne
jns
pop
cmp
fs
adc
jp
or
sahf
xor
and
push
pop
lea
cmpsl
push
or
lret
loopne
mov
push
stc
fucomi
loopne
jnp
add
fisubrs
xchg
leave
ss
outsb
aad
scas
pushf
sub
mov
dec
sti
dec
cld
inc
out
mov
aam
adc
icebp
xor
aad
xchg
dec
in
in
add
sbb
subl
enter
cwtl
inc
push
js
loop
jecxz
sti
loope
jae
pop
in
subb
enter
aaa
mov
stos
cmp
pop
add
scas
in
loop
stos
add
imul
sbb
shlb
cwtl
jbe
mov
dec
outsb
ret
adc
cs
in
imul
dec
stos
out
mov
int3
fistps
inc
or
cld
xchg
outsl
mov
xchg
push
testb
lods
xor
sti
add
jns
cld
mov
dec
dec
pop
mov
sarl
mov
mov
pop
pop
pop
test
bound
fnstenv
sub
cmp
stos
lcall
jbe
jmp
pop
cmp
jnp
push
push
jp
cmpsb
inc
push
mov
cmc
sub
pandn
loope
mov
sti
in
rolb
cltd
add
out
jmp
and
jle
stc
mov
mov
lods
xor
mov
aas
movsb
and
push
xchg
incl
negb
repz
xor
dec
pop
jl
pop
xchg
pop
jl
int
fwait
inc
sarl
push
in
pushf
insl
mov
pop
push
pop
das
ljmp
jg
scas
mov
call
lods
loop
iret
shll
cmp
fisttps
popa
fcompl
fs
andb
or
mov
xchg
test
lock
loopne
sbb
loope
in
js
and
push
sub
jb
sbb
push
mov
std
add
in
aaa
sub
call
mov
sti
out
pop
pushf
xor
push
das
icebp
xor
jnp
cmp
repz
stos
outsb
sbb
lret
sbb
mov
pop
dec
mov
add
push
inc
into
or
aas
mov
mov
pop
hlt
jnp
mov
dec
aam
push
ss
pop
jnp
and
imul
xchg
loop
and
fnsave
hlt
cmpsl
rclb
inc
add
icebp
js
aam
mov
pop
cmp
mov
sub
or
xchg
sub
dec
push
shlb
imul
mov
jle
je
push
cmp
movsl
sub
in
jge
mov
dec
mov
in
data16
adc
jle
push
cmpsb
jo
push
push
mov
xchg
out
pushf
out
and
jl
pop
fs
and
fnstsw
ss
dec
dec
arpl
or
clc
sbb
cs
pusha
adc
ficomps
mov
push
jae
push
mov
mov
mov
in
xchg
push
mov
pop
mov
xchg
pop
push
jo
aaa
xlat
gs
popf
xchg
outsl
sbb
xchg
inc
mov
int
enter
stc
cmp
pop
adc
sbb
rcll
add
add
mov
jg
cltd
dec
outsb
mov
dec
or
push
add
add
inc
roll
popa
rcrb
cmc
idivb
xor
cmp
es
lods
push
in
icebp
mov
loope
fnstenv
lods
test
mov
pop
jb
pop
repnz
sub
add
std
ret
inc
shrb
loope
int
repz
cmp
mov
stos
std
incl
jp
sbb
jns
sbb
pop
sahf
mov
cmp
insb
mov
xor
mov
pop
sub
pop
cltd
aaa
sbb
in
push
sub
push
mov
leave
sahf
ja
xchg
dec
sbb
scas
xor
cwtl
clc
loop
test
pushf
test
iret
jp
adc
pusha
fnstcw
lea
push
lods
sbb
clc
inc
pop
sbb
sti
push
lods
inc
mov
fwait
cltd
xor
arpl
das
xchg
mov
rorb
js
sbb
pop
out
out
push
sub
icebp
pop
jmp
mov
lea
sbb
stos
pop
jbe
in
aaa
xorb
insb
jno
addr16
bound
mov
shlb
jl
jle
fadds
stos
or
or
test
pop
rolb
rclb
inc
sbb
std
push
cmpsl
out
inc
int
ss
cmp
int
out
je
dec
push
jmp
add
adc
aam
mov
xchg
dec
adc
addr16
inc
arpl
ret
pop
or
dec
inc
cmp
in
and
xchg
mov
pop
nop
inc
inc
or
repz
sub
and
cmp
inc
pop
out
cmpl
push
outsb
push
push
dec
xchg
cld
aaa
jbe
lcall
push
mov
xchg
testb
loope
fldcw
lods
mov
mov
ss
jbe
in
sub
outsl
sub
testl
and
jae
mov
ljmp
mov
and
out
cmp
push
cltd
lods
mov
or
sub
outsb
cltd
push
pushf
int3
xor
mov
stos
jp
xor
lahf
sbb
nop
insb
pop
sbb
in
lods
mov
jbe
sti
pop
and
cmp
cmp
inc
loope
pop
jg
xchg
xor
addr16
ljmp
pop
fdivrs
jmp
jne
fs
sbb
push
xlat
iret
loop
mov
enter
fcmovnb
jbe
pop
xor
sarl
mov
mov
jnp
rolb
push
mov
in
scas
sbb
js
mov
add
xchg
fisttps
mov
shll
jno
stos
push
xor
sti
dec
xchg
xchg
sub
sub
gs
adc
push
js
out
adc
outsl
mov
loope
mov
cs
jle
repz
pop
fadd
pop
sub
mov
jb
sub
lcall
xchg
lods
push
or
in
outsb
or
movsl
push
dec
daa
mov
cld
aaa
pop
fwait
inc
mov
or
jns
mov
add
out
test
test
mov
aaa
repnz
rclb
ja
pop
pop
cltd
add
stc
cmp
push
std
pop
outsl
incl
add
mov
and
sub
bound
mov
js
aas
push
sbb
xchg
pop
push
mov
in
inc
xchg
popa
addr16
cmpsb
inc
dec
lea
jl
outsl
push
mov
jecxz
lea
push
shr
adc
mov
cwtl
dec
jno
pop
cmp
mov
imul
xlat
mov
push
sbb
push
aaa
add
pop
sbb
testb
mov
mov
repnz
test
or
scas
clc
pusha
fwait
scas
push
pop
fwait
mov
push
jnp
lcall
push
fdivs
sti
cmc
loopne
into
ret
add
ret
mov
mov
xchg
insl
movsl
xor
sbb
inc
loop
sahf
jno
inc
les
inc
pop
in
jle
cli
ss
cli
jno
fs
push
mov
sub
adc
loopne
outsl
mov
out
jecxz
rorb
shll
ss
pushf
in
mov
fidivrs
pop
lock
push
push
cmp
les
xchg
divb
inc
add
sbb
fld
jbe
xor
lods
push
inc
mov
arpl
pop
and
cli
popf
das
pop
add
loopne
cltd
mov
xchg
dec
mov
sbb
mov
add
leave
pop
cltd
mov
adc
or
movb
lret
pushf
fsub
inc
xor
dec
shll
mov
jnp
sbb
in
sti
mov
hlt
sbb
dec
add
add
ds
and
xchg
test
in
and
jbe
cltd
mov
xor
clc
mov
inc
test
dec
xor
in
orb
jne
mov
adc
push
fdivrs
icebp
inc
xchg
mov
loopne
and
stc
pop
jo
jg
cld
cltd
xchg
lock
icebp
and
ss
push
sbb
pusha
mov
out
daa
dec
out
loopne
lret
pop
rcrl
cmp
dec
jmp
xchg
popf
enter
sti
pop
sbbb
mov
sti
jns
aas
and
imul
lods
inc
std
inc
ss
nop
dec
in
adc
pop
rcrb
das
jae
mov
cld
pop
fsubs
inc
test
mov
add
fdivrl
negb
cmp
or
push
dec
fwait
xchg
xor
ss
int
call
ja
dec
inc
mov
leave
hlt
cmp
push
jnp
sahf
ret
xchg
mov
push
pop
enter
sub
jb
fsubr
cmp
iret
in
dec
mov
shl
dec
int3
lock
hlt
push
mov
shll
pop
bound
pop
pushf
pop
aad
test
ficoml
iret
pop
pop
sbb
push
icebp
and
sarb
int3
aaa
shrb
xlat
add
int3
sub
out
xchg
mov
mov
stos
xchg
push
pop
lret
and
lock
sbb
pushw
mov
jne
jnp
pop
in
lods
dec
mov
mov
mov
loope
inc
out
cmp
jl
fcmovnu
movsb
addr16
insl
xlat
pop
fcoms
dec
aas
int
xchg
aaa
dec
cmp
into
mov
inc
jp
aad
dec
call
xchg
stos
pop
xor
repnz
sbb
jg
mov
push
arpl
inc
xor
or
and
and
and
mov
jae
lahf
dec
das
es
fmull
sbb
sbb
jmp
dec
jle
push
stos
push
jne
add
fnstcw
mov
notb
push
test
cmpsl
imul
push
mov
rol
fldl
arpl
push
jo
add
adc
inc
mov
sbb
test
scas
pop
mov
pop
adc
cwtl
ds
pop
lods
fnsave
fisttps
and
mov
fwait
push
lea
cmpsl
adc
pop
shlb
stos
push
out
cmpsb
jge
pop
ror
and
mov
inc
mov
test
or
int3
jns,pt
outsb
add
and
fstpt
ret
cmp
je
add
jl
inc
div
xlat
mov
cmp
repz
mov
and
adc
outsb
pop
clc
mov
cmp
xlat
iret
lods
in
enter
add
sbb
lods
mov
decb
inc
aaa
scas
scas
popf
int
push
jl
into
xor
mov
jl
movsl
nop
lahf
insl
inc
loopne
push
loop
mov
lcall
stc
loop
imul
rol
fstp
adc
aaa
and
jbe
lods
pop
scas
xchg
cmp
sbb
push
xor
shrl
inc
fdivr
ss
xchg
dec
in
jbe
xchg
lock
jle
push
fstpl
dec
pop
add
das
sub
lahf
lea
mov
add
popa
fnsave
push
jg
cwtl
cmp
fcoml
out
cmp
pop
xor
push
push
inc
push
push
fnsave
sbb
mov
shll
ss
aas
sbb
mov
fistpl
cmp
fwait
outsb
pop
xchg
mov
sub
pop
popa
lods
into
jne
mov
test
mov
jno
sbb
push
fidivrs
movsb
xor
ret
mov
lods
sahf
mov
jecxz
mov
call
das
xlat
les
sbb
mov
movsb
mov
adc
iret
stos
jle
in
xchg
mov
nop
lahf
dec
jmp
call
das
pop
add
cld
dec
add
mov
pop
cld
adc
pop
aaa
fisubs
mov
sbb
add
icebp
mov
mov
les
pop
mov
movsl
lcall
dec
fyl2x
ljmp
cmp
xor
arpl
sti
and
icebp
lds
pop
sub
fsts
adc
inc
loope
inc
addb
jmp
in
test
push
inc
xchg
xchg
fdivs
inc
add
daa
call
mov
add
pushf
jp
cmp
int3
add
mov
push
jo
pushf
aaa
aaa
out
mov
dec
jle
popa
cmpsl
add
jl
jbe
push
push
jbe
icebp
popa
pushf
cmpsb
cwtl
out
adc
and
and
sbb
dec
mov
out
push
gs
subl
pop
jmp
outsb
fdivl
xchg
scas
adc
sub
fstps
inc
adc
jle
lret
sahf
adc
pop
aaa
dec
push
push
mov
jp
decl
inc
shrl
xchg
xor
test
sarb
jnp
jp
mov
inc
xchg
cltd
scas
aaa
push
or
mov
pop
push
sub
ss
imul
dec
fadds
pusha
fistpl
aad
or
push
inc
inc
sahf
mov
out
sbb
loop
leave
mov
and
xor
popa
addr16
scas
sahf
mov
sub
jl
jno
sbb
jl
push
leave
pop
test
jle
cltd
pop
stc
je
insb
jo
cmp
popa
clc
sbb
sub
rolb
scas
gs
jo
ss
xchg
and
stc
mov
shrl
in
jmp
arpl
inc
lock
push
inc
mov
sbb
popf
adc
cmpsb
test
xor
cmp
push
push
adc
jne
pop
idivl
je
mov
push
cltd
lea
mov
xor
dec
addr16
dec
scas
shl
sub
pop
push
adc
xor
ret
mov
ret
jne
fnstcw
fndisi(8087
xorl
pushf
mov
add
push
fwait
sbb
add
icebp
inc
ja
mov
les
nop
or
rclb
xor
nop
dec
xchg
xchg
ret
pop
cs
lahf
popf
aas
sub
aaa
add
jecxz
and
jge
cli
fldt
jmp
add
jb,pn
or
cmp
faddl
pop
pop
inc
mov
in
dec
xchg
and
cmp
sbb
data16
addr16
cmpsl
stc
lret
adc
xlat
sub
push
dec
icebp
xchg
pusha
lods
enter
rolb
test
mov
movsl
aaa
push
sahf
xchg
jb
mov
push
dec
push
insb
mov
in
test
add
cmpsb
je
push
push
cmp
push
xchg
vphaddwd
jl
mov
or
jo
fldcw
int3
aad
aam
rclb
mov
pop
loopne
fcompl
push
out
mov
fwait
sbb
adc
inc
je
mov
outsb
inc
sahf
addr16
adc
pop
aam
mov
or
popf
outsb
push
ret
fcmovnb
pop
lret
push
pop
cmp
jo
loope
sbbl
and
lret
dec
push
les
ret
push
push
out
pop
loope
inc
cmp
and
sbb
sub
jle
push
aam
add
push
jge
pusha
movsl
xchg
pop
fcoms
outsb
icebp
xor
cmpsl
pop
push
sbb
outsw
loope
popf
cli
dec
lret
xchg
xor
scas
data16
sbb
out
mov
or
cltd
or
ds
and
in
xor
out
sbb
and
pcmpgtw
loope
xor
jge
sahf
jne
or
jbe
mov
mov
inc
push
push
jb
rorb
push
sub
je
lret
leave
fwait
mov
lds
and
jl
sub
inc
das
xchg
fsubl
insl
inc
push
mov
aaa
lcall
sbb
out
add
icebp
xchg
adc
int3
xchg
push
pop
jnp
lock
in
dec
les
std
test
test
aaa
mov
dec
jge
mov
test
xor
cmp
inc
in
cltd
jp
dec
sub
hlt
in
repnz
mov
dec
or
in
fs
std
popf
cmpsb
lcall
addr16
shl
xor
jnp
bound
add
sbb
repz
xchg
mov
aaa
bound
aaa
iret
ret
fadd
jb
out
sbb
pop
fs
test
add
dec
xchg
or
xchg
aaa
aas
pop
dec
mov
pop
idivl
fs
mov
sbb
add
test
dec
std
jle
rolb
push
cmp
les
jne
push
sbb
rorb
push
cmp
mov
ljmp
repz
push
push
or
adcb
xchg
or
cli
mov
mov
sub
sahf
or
jle
je
icebp
sub
rcrb
jno
jns
imulb
hlt
pusha
mov
aas
xchg
aaa
mov
xor
pop
fldenv
sahf
jns
sbb
adc
sahf
out
ret
jg
cmpsb
pusha
lret
in
cwtl
popa
cmp
mov
pop
mov
jp
aaa
cwtl
fisubrl
sbb
sbb
push
test
and
sbb
pop
nop
ja
and
sbb
cs
test
push
rcr
sbb
test
loopne
sbbb
ljmp
and
sbb
adc
mov
lret
fbld
adc
loop
sbb
xor
push
mov
aaa
sub
fsubrl
sbb
ficompl
out
loopne
mov
pop
pop
add
mov
or
push
fildl
mov
sahf
popa
lahf
jb
xor
lock
sbb
push
sub
das
pusha
lods
pop
test
add
loope
push
ja
fdivr
ss
mov
sbb
loop
adc
repz
sbb
pusha
push
mov
ds
push
loop
add
imul
or
mov
pop
sbb
jmp
ds
and
ret
xchg
xlat
stc
xchg
sub
repnz
ffree
jmp
xor
fsubs
pop
jno
inc
pop
aaa
xor
insl
fmul
imul
jne
into
mov
mov
mov
xchg
cmp
lret
ret
enter
dec
dec
cmp
inc
mov
xchg
push
lret
xchg
adc
je
cmovb
in
repz
sub
ret
fs
aad
rcr
outsb
in
orb
cmp
xchg
jg
stos
movsbl
cmp
lahf
fistl
cmp
bound
neg
lock
or
pop
mov
into
mov
sub
push
jo
mov
mov
or
int
xor
mov
jp
clc
repz
sub
push
push
sub
out
sti
imul
pop
mov
sbb
push
cli
lock
or
sbb
push
push
mov
dec
leave
push
pop
gs
xchg
sbb
mov
rolb
scas
dec
scas
jmp
dec
adc
pushf
xchg
lret
rcll
aaa
stos
mov
shrl
out
mov
fadd
mov
js
sub
pop
add
pop
xor
jp,pt
dec
jnp
jo
jne
stos
fsubl
push
sbbb
popf
jns
loop
imul
mov
push
mov
mov
icebp
cmp
xchg
sbb
fsubrl
push
mov
sub
push
popa
xor
aam
jno
adc
and
push
mov
cmp
mov
rolb
pop
adc
jp
mov
pusha
cmp
mov
clc
rcr
rcll
cmp
mov
fdivs
movsb
shr
stos
or
pop
xchg
mov
cmp
lds
xchg
fldt
sahf
scas
pop
repz
data16
cmp
inc
sub
cs
xor
xchg
and
jmp
sub
sub
repz
andb
adc
add
or
xor
lea
mov
dec
cmp
movsl
out
pop
push
xor
jg
cmpsl
push
dec
mov
hlt
pop
add
gs
outsl
popf
arpl
fisubrs
repz
sbb
xor
rclb
mov
outsl
sbb
sbb
outsl
iret
push
jge
out
or
mov
push
xchg
mov
js
fisubrs
mov
outsb
mov
xor
cld
aaa
sbb
push
daa
xor
imul
ja
add
sbb
inc
push
add
jo
mov
cmp
adc
sub
and
ljmp
push
fs
dec
pop
shll
push
cmp
bound
dec
mov
push
jnp
cltd
jo
icebp
cld
addr16
lds
push
popl
bound
xorl
int
sbb
mov
jnp
pop
mov
sub
jl
dec
sahf
inc
rcr
in
xchg
pop
sbb
addb
add
jae
js
sub
cmp
in
ss
dec
jae
test
in
fistps
dec
jbe
sbb
nop
lahf
add
aaa
dec
jmp
pop
pop
iret
call
adc
mov
mov
jge
mov
dec
inc
rcrl
fstpt
mov
add
xchg
and
cs
push
push
cs
sbb
xchg
and
xorl
xchg
adc
es
jae
out
lods
or
pop
and
ljmp
add
hlt
bsr
dec
aad
cld
dec
mov
aam
jl
mov
cmpsl
stos
adc
jp
push
ja
add
aam
ret
push
pop
fwait
sbb
mov
cmc
inc
push
mov
or
aaa
push
sbb
cs
mov
mov
aaa
dec
nop
daa
push
xlat
test
pop
push
sbb
adc
negl
sbb
aaa
mov
push
pop
or
scas
mov
pop
outsb
jo
push
lods
dec
mov
push
dec
bound
pop
mov
mov
adc
dec
cli
pop
imul
ret
in
xor
je
aam
in
sub
movsl
inc
adc
loopne
dec
loope
ss
aaa
jmp
push
icebp
leave
jae
lods
int3
std
out
aad
mov
mul
xchg
jle
in
incb
push
cmpsb
loope
pop
popf
mov
pop
in
push
add
test
fnstsw
fmull
shl
or
outsl
push
popf
dec
dec
ret
pop
mov
jl
in
jmp
mov
clc
push
ljmp
dec
jle
dec
adc
rorb
cmp
fucomp
fnstcw
and
out
outsb
lods
mov
fdivl
jb
sbb
xchg
push
loop
test
mov
push
sub
sbb
xor
sbb
clc
stos
fdivrp
std
out
inc
jbe
sti
sbb
sbb
mov
xor
pop
mov
mov
push
xchg
add
and
sub
pop
test
dec
mov
hlt
mov
add
pop
cmp
dec
insb
orb
outsb
addr16
clc
cmpsb
int3
sbb
pop
adc
push
pop
loop
sbb
fs
ror
push
je
adc
pop
movsl
push
pop
rorb
loop
add
push
pop
in
dec
mov
jo
or
sub
sahf
mov
jns
jne
mov
lret
sbb
enter
in
add
ds
push
mov
sub
in
dec
mov
out
insb
pushf
adc
sti
or
inc
clc
fwait
push
aam
test
sbb
repz
and
rcrb
push
ljmp
cmc
stos
repz
dec
xchg
jnp
add
aaa
cs
and
sub
pop
adc
pop
lret
js
popa
dec
add
cltd
jl
adc
int3
and
add
push
inc
je
lods
jp
mov
int3
in
mov
add
sub
cmp
xchg
fdivr
and
in
pop
mov
push
cmp
enter
and
push
mov
lea
or
ds
cmc
mov
js
mov
xchg
daa
movsl
and
add
sti
dec
cmp
test
pop
popa
pop
pop
fldl
mov
bound
sub
push
fbstp
jp
pushl
or
jmp
mov
xchg
out
test
fldenv
xchg
lds
pop
push
push
inc
nop
mov
sbb
cwtl
adc
repnz
dec
lcall
cmp
xchg
iret
add
push
xor
pop
mov
dec
and
sub
mov
add
dec
jmp
sbb
cs
cmp
mov
fwait
pop
pop
lock
shrb
cmpl
and
in
or
xor
push
jg
out
push
pop
sbb
push
leave
push
mov
enter
dec
xchg
lea
fadds
xchg
flds
int3
lahf
pop
fstl
adc
fnsave
lcall
sbb
mov
pushf
sbb
fwait
popa
jge
xor
and
arpl
mov
cwtl
cld
adc
mov
in
add
mov
mov
sbb
jns
lods
pushl
ss
test
adc
shlb
and
fwait
jle
ret
jge
inc
sbb
ret
dec
inc
mov
mov
stc
test
movsl
inc
out
cmp
xchg
mov
fcmovnu
pop
pop
adc
xchg
add
mov
xchg
scas
ss
adc
sbbb
jp
dec
mov
in
jmp
movsl
or
sbb
and
mov
mov
jg
outsb
jo
or
dec
sub
mov
dec
in
popf
mov
or
mov
fwait
xchg
test
outsl
in
mov
bound
enter
pop
ljmp
loop
popa
jmp
aaa
das
xor
in
jmp
push
repnz
mov
fisubrs
cmp
aad
and
and
xchg
fisttps
fcmovnb
inc
xchg
xchg
ja
mov
std
shr
xor
je
aaa
ds
out
movsl
jle
jl
negl
cmp
movsl
icebp
loope
sub
adc
mov
cli
insl
lret
cmp
in
mov
cmp
sbb
pop
loopne
lret
mov
pushf
ficoms
fdivrl
and
lcall
pop
or
icebp
enter
sbb
std
pop
inc
ret
pusha
dec
sbb
mov
lods
mov
sub
fadds
pop
fst
pop
pop
stos
inc
mov
pop
fldcw
pop
js
imulb
inc
mov
inc
cs
aaa
adc
sbb
push
pusha
sbb
xor
cwtl
pop
push
aaa
outsl
stos
pushf
rclb
imull
bound
xlat
sub
cld
cs
lock
lds
jae
in
sti
ds
pop
cld
ss
es
bound
push
or
test
nop
cld
in
movsl
pop
ficomps
sbb
xchg
out
adc
out
add
ret
mov
ss
push
mov
cmc
arpl
pop
and
in
out
mov
pop
cmp
ret
mov
jg
aad
sub
sbb
dec
out
pop
loope
mov
cmpsb
sbb
icebp
into
or
divl
jnp
lock
sbbb
sub
adc
es
adc
arpl
aad
cmp
jg
outsb
test
stos
mov
daa
rcr
inc
repz
scas
lock
mov
pop
fnstcw
mov
push
in
sti
sub
mov
fistps
and
lea
ror
repnz
mov
jno
std
in
ret
inc
pop
arpl
aaa
pop
es
push
or
orb
xor
imul
jb
jle
pop
shr
add
stos
ret
mov
mov
andl
aam
mov
in
dec
mov
out
xchg
dec
aaa
jecxz
adc
pop
stos
xor
nop
les
push
and
mov
sbb
stos
fldenv
or
lcall
mov
push
cmp
xor
insb
mov
cmp
xchg
out
iret
lahf
outsl
out
inc
pop
jno
add
mov
ss
into
cld
push
mov
sbb
jle
sub
cmp
mov
cwtl
pop
mov
xchg
ss
push
adc
mov
mov
outsl
mov
pusha
fwait
cmp
cmc
jno
mov
inc
jo
shlb
cli
push
sbb
mov
insb
imul
and
mov
jns
mov
cmpb
jae
es
or
lahf
and
aam
test
arpl
push
fiaddl
mov
rcll
and
inc
push
in
loop
fmul
test
sub
js
stc
rorl
mov
mov
mov
pushf
push
cmp
push
cmpsb
outsl
test
fnstsw
fistps
mov
dec
fsubr
mov
adcb
push
pop
adc
dec
push
pusha
mulb
mov
push
movsl
or
dec
lods
mov
pop
mov
mov
in
je
mull
lret
bound
imul
stos
mov
or
outsb
lods
lock
ds
stc
das
mov
push
je
enter
notl
aaa
mov
push
push
pusha
icebp
dec
or
in
adc
es
pop
xchg
clc
push
cmp
mov
push
sbb
aaa
int3
adc
dec
jmp
mov
aaa
mov
xorb
in
jb
cmp
outsb
pop
sahf
mov
mov
adc
xor
pop
sbb
aam
call
std
lods
mov
lret
mov
js
adc
imul
sbb
in
popa
out
lock
xchg
repz
cmp
xchg
sbb
push
in
mov
iret
loope
sub
mov
or
out
andb
nopl
aaa
adc
xchg
xor
push
shl
sub
scas
dec
jae
dec
movsl
lea
jl
adc
outsl
sbb
dec
dec
mov
aam
je
push
xchg
call
inc
mov
pop
mov
lret
sti
or
lods
mov
mov
push
cli
icebp
sbb
pop
icebp
pusha
mov
not
stos
in
movsl
adc
loope
js
mov
ljmp
xchg
shll
inc
adc
sbb
int3
mov
xor
push
mov
cmp
enter
sbb
inc
popf
jmp
jl
mov
adc
push
dec
outsb
pop
ret
mov
push
xor
std
movsl
outsb
frstor
fidivs
data16
jae
push
popa
ss
xor
mov
or
cltd
mov
les
aaa
dec
insl
data16
loopne
gs
addb
mov
push
bound
jno
loope
jecxz
adc
jl
enter
jo
shll
cwtl
cmp
xchg
pop
fcmovb
mov
and
bndldx
xchg
or
dec
fiaddl
add
xlat
jl
orb
mov
and
sbb
jo
pop
aaa
pop
clc
sub
pop
or
mov
or
fstps
mov
sbbl
aaa
pop
mov
xor
mov
adc
test
pop
pop
cmp
arpl
fs
and
pop
cmpsb
adc
aam
sub
jns
xchg
fisubrs
push
inc
sbb
ds
add
dec
paddw
adc
iret
pushf
sahf
xchg
js
scas
insl
push
test
popf
int
sbb
ret
loopne
and
pushf
rcrl
lea
call
scas
push
add
outsb
pushf
aad
sbb
mov
lods
mov
bound
loope,pt
rcrl
jle
xchg
aam
sub
and
cmp
arpl
add
push
xor
mov
xor
xor
aaa
incb
call
inc
adcb
adc
repz
xchg
jle
punpckhdq
mov
aaa
leave
lret
cmp
xchg
aam
bound
pop
aad
mov
loope
ss
mov
push
sbb
xchg
jns
int3
imul
mov
cmp
ss
add
mov
sbb
ds
jge
jae
xor
dec
push
fnsave
aam
stos
dec
inc
inc
or
push
cwtl
loopne
pop
jle
pop
add
add
jp
adc
xchg
mov
fsubr
pushf
pop
insl
jecxz
mov
loop
mov
and
mov
pusha
sub
in
or
and
xor
dec
fstps
mov
or
pop
cltd
inc
or
mov
push
fs
adc
mov
mov
mov
inc
mov
sbb
jp
out
fsubrl
aaa
fdivs
aad
mov
sarb
mov
arpl
and
or
outsb
repz
sub
movsl
es
pop
xor
push
sub
mul
xor
lock
aas
les
aaa
aam
pop
or
pop
pop
js
and
jo
shl
mov
push
loope
outsl
cmpsl
cli
and
sub
sub
ja
sub
push
aaa
loope
aam
sbb
mov
sti
adc
test
pop
cmp
fcoml
mov
sbb
dec
xchg
cmpl
outsb
push
mov
test
ss
lret
jge
ja
sbb
push
mov
jecxz
loop
out
pop
dec
adc
push
push
enter
arpl
int3
pushf
sbb
into
mov
shrl
rep
pop
stos
or
mov
inc
into
or
xchg
faddl
inc
and
mov
outsb
das
xor
adcl
mov
xor
adc
lahf
inc
sti
and
out
inc
dec
jecxz
add
dec
pop
push
mov
imul
lahf
js
icebp
mov
pop
jp
shll
jmp
inc
jns
pop
pop
cwtl
sbb
repz
sbb
data16
and
adc
popa
pop
mov
or
in
loopne
lret
ficomps
pop
xchg
adc
add
test
in
out
test
rcll
sub
adc
cmp
cmpsl
js
dec
enter
sub
or
jl
or
add
lds
sub
pop
and
pop
add
in
mov
aad
lea
dec
inc
sbb
inc
and
adc
dec
or
out
lea
roll
inc
jmp
shlb
test
mov
scas
inc
adc
and
shlb
stos
decb
clc
pop
sahf
lods
icebp
icebp
xchg
insl
add
adc
ds
xor
ret
es
push
dec
xchg
in
insl
aam
enter
mov
xchg
jo
pop
jno
fisubs
in
push
inc
fwait
out
inc
cmpsb
mov
outsb
jl
cwtl
in
push
mov
addb
scas
mov
dec
sbb
sbb
les
dec
cmp
inc
subb
aaa
cwtl
cmp
sub
push
xchg
stos
out
cli
push
jg
pop
repz
mov
xor
ret
inc
jbe
push
mov
push
xchg
sbb
iret
or
fwait
scas
cmpsl
dec
ror
adc
pop
add
xchg
inc
dec
xor
std
aaa
adc
pop
into
lods
push
lock
xor
push
push
hlt
adc
notb
push
imul
fwait
insl
outsb
adc
dec
mov
lock
sbb
jp
rcrb
aaa
jae
pop
sbb
fdivs
arpl
or
inc
loop
loopne
stos
cmpl
loope
sub
xchg
add
xchg
jae
cmp
js
push
jo
jl
ret
rcl
in
in
or
arpl
rcrl
popf
lock
nop
and
or
mov
cwtl
pusha
into
pop
imul
in
jne
pop
sarb
inc
jmp
movsb
adc
adc
mov
push
mov
mov
or
mov
inc
or
xchg
popf
fwait
aaa
mov
arpl
pop
aam
xor
mov
je
pop
jmp
sub
pop
mulb
icebp
in
add
mov
lahf
fildll
add
and
outsb
push
xchg
test
and
push
or
fnsave
jge
mov
movsl
cwtl
mov
dec
out
sahf
and
fsub
adc
adc
sbb
xor
mov
ficompl
lods
cmp
ret
and
jp
inc
push
ret
or
sub
fcmovnb
incb
cmp
in
pushf
clc
sub
mov
outsb
clc
xchg
loope
push
stos
in
sbb
sbb
adc
lahf
loope
arpl
sbb
cmp
scas
out
arpl
gs
sbb
test
cmp
enter
add
push
push
mov
fs
fdivs
data16
pop
push
fldl
dec
aaa
js
stc
cmp
pushf
jge
jecxz
pop
adc
adcb
aad
sub
xor
hlt
push
icebp
xor
mov
lods
jl
pop
fidivrl
jmp
ret
test
gs
loope
sub
pop
shll
mov
and
dec
call
subb
push
xchg
cmp
pop
or
dec
sarb
inc
call
mov
dec
ret
pop
daa
jge
push
repz
outsl
jle
jns
mov
in
and
pop
push
aaa
mov
stc
and
dec
mov
ja
in
and
arpl
mov
jg
lret
shll
xchg
adc
lcall
lock
repnz
dec
out
test
mov
mov
sub
int
out
std
cmp
or
jle
loope
fucom
popa
add
adc
add
push
fcoms
aaa
xchg
mov
mov
jne
fstpl
and
bound
fdivs
mov
aad
aam
popa
cli
scas
mov
mov
and
fwait
mov
add
mov
ret
pop
mov
mov
outsb
fdivs
jle
push
mov
pushf
test
xchg
mov
inc
or
mov
cmp
mov
icebp
pop
ljmp
mov
call
adc
mov
es
mov
out
jbe
jo
enter
dec
fimuls
push
cltd
sbb
mov
pushf
mov
pop
mov
stc
jp
sti
mov
cmpb
push
jns
cmp
add
xor
arpl
pusha
cwtl
mov
ret
dec
nop
jae
gs
push
pop
sbb
fadd
mov
jo
mov
jne
adc
cvtdq2ps
nop
nop
sub
xchg
shrb
inc
sub
xchg
dec
pop
inc
xor
jl
jge
xor
daa
mov
stos
adcb
cs
or
into
lock
xchg
mov
scas
push
lahf
lods
mov
cwtl
rclb
dec
stc
inc
cmc
inc
mov
in
sbb
dec
adc
mov
aas
jne
sub
dec
cmp
idivb
imul
aam
loop
mov
fbstp
jne
loop
dec
aaa
cltd
sarb
or
mov
pop
mov
xor
adc
inc
pop
sbb
rcll
add
mov
push
push
pop
add
andl
enter
fsubl
mov
fsubrs
inc
lahf
pop
push
pop
xchg
pop
sbb
cmp
in
or
int
cmp
and
sbb
roll
pop
outsb
pushf
iret
jp
lods
repz
cmp
aas
jbe
inc
mov
inc
shlb
or
cli
sub
inc
aaa
inc
xchg
adc
bound
cmp
xor
add
xchg
jmp
inc
add
mov
mov
pop
pushf
xor
movsb
test
ja
xor
pop
lcall
decb
pop
push
dec
pop
bound
leave
test
cmp
pop
divl
aaa
jns
int3
and
add
push
sub
push
xor
lds
jo
in
or
mov
xor
mov
fsubrp
cmp
mov
insl
xchg
pop
jl
movsl
jge
or
xlat
push
movsl
mov
dec
fisttpl
pop
cmp
bound
adc
and
inc
mov
mov
addr16
idivb
pop
jae
fcoml
mov
sahf
cwtl
jns
mov
ss
mov
out
fsubp
js
push
or
xchg
pusha
fcmovnb
cmp
sti
sbb
loop
pop
jne
test
mov
add
jno
xchg
scas
subb
sti
sbb
inc
mov
and
inc
dec
js
imul
push
or
movsl
mov
mov
inc
mov
inc
repz
jmp
push
mov
sbb
xor
jns
lret
lds
aaa
mov
sti
testb
pop
sub
call
and
sbb
les
pop
inc
int3
incl
cmpb
pusha
pop
out
mov
xor
push
xchg
movsl
cmpsb
ljmp
scas
mov
std
pop
test
push
std
and
mov
shll
sbb
rorl
bswap
in
ret
mov
cwtl
aad
pusha
xor
aam
insb
aaa
mov
shrl
addl
std
sbb
mov
xchg
int3
xchg
pop
loopne
mov
fldenv
loope
xchg
movsl
mov
and
in
frstpm(287
cmp
les
mov
mov
imul
dec
fstpl
xchg
or
fidivs
jbe
and
bound
cwtl
sub
pop
xlat
std
popa
mov
clc
mov
fnsave
mov
jmp
mov
call
dec
sbb
pop
dec
aad
xor
adc
outsl
lds
push
cmp
jge
pop
mov
mov
cltd
mov
mov
cwtl
sti
lcall
in
jle
pop
mov
test
jo
inc
mov
mov
and
pop
and
xor
arpl
mov
mov
fwait
xchg
dec
xor
fisubl
sbb
push
fcmovne
inc
shll
ret
adc
std
loope
in
into
sub
in
pop
int3
xchg
xor
cmc
arpl
xor
xor
push
xchg
insl
mov
sar
cmp
std
lds
cmp
aad
lahf
cli
repnz
push
cmc
push
pop
xchg
stos
sub
shlb
mov
jmp
mov
add
push
bound
xor
nop
fistps
pop
mov
cmpb
xchg
adc
loope
cmp
add
jl
in
pop
gs
shrb
cmpsb
xchg
xchg
sti
jno
pop
mov
sbb
and
add
add
mov
sbb
pop
pop
lcall
cmp
in
ja
fcmovu
jge
sub
push
lret
pop
or
inc
inc
in
push
hlt
loopne
sti
inc
das
outsl
xchg
pop
or
fwait
mov
into
punpcklwd
jg
testl
inc
cwtl
push
test
or
mov
cltd
sbb
cmp
js
pop
mov
cmpsl
mov
pushl
mov
mov
or
xchg
das
pop
rol
and
aad
bound
mov
sbb
notl
push
mov
scas
enter
jle
dec
rorl
rcr
xchg
faddl
in
xor
pop
dec
cmpb
fcompl
sbb
lods
cmpsb
fnstsw
push
xchg
outsb
sub
fisttps
pop
dec
imul
mov
ds
clc
decl
cmp
and
dec
sbb
cmp
mov
xchg
ret
pusha
out
in
adc
sub
icebp
sub
movsl
scas
jg
flds
fsubs
and
shll
inc
mov
hlt
push
mov
rclb
mov
pusha
mov
jb
enter
call
pusha
test
push
push
pop
call
pop
cmpsl
in
nop
push
mov
inc
aaa
jmp
rolb
jp
in
sbb
xorb
mov
movsl
add
sbb
mov
aad
lahf
jns
std
fildll
or
das
add
sbb
xchg
es
std
loopne
push
pop
push
add
mov
fistps
std
in
sbb
hlt
mov
cli
push
push
gs
hlt
insb
sbb
push
test
popa
adc
bound
xor
push
push
popl
pop
sbb
pop
mov
lret
mov
add
mov
enter
aaa
sbb
test
xchg
pop
jg
sbb
shlb
sbb
jg
cwtl
stc
lcall
and
loopne
xor
mov
and
push
pop
inc
pop
mov
add
dec
mov
jb
pushf
aaa
pop
mov
mov
pop
or
sub
les
sbb
outsb
mov
cmp
stos
pcmpeqd
std
mov
jp
aaa
or
sti
pop
push
add
in
mov
shrb
cmp
pop
xor
and
push
sub
push
mov
cmp
das
xlat
arpl
mov
lock
and
mov
jge
insb
dec
daa
sbb
je
sub
or
dec
sub
sub
add
enter
or
loop
imul
ret
cmp
lea
ffreep
xor
icebp
lea
in
mov
inc
add
mov
sbb
jp
ljmp
mov
cmp
mov
dec
pop
mov
add
inc
inc
addl
sub
mov
sbb
les
repz
gs
mov
pop
sahf
dec
stos
cmp
xchg
fdivr
xor
arpl
xor
xchg
and
push
insb
pop
pop
mov
xor
push
outsb
in
idivb
fisubs
fidivl
outsb
lods
push
int
cmc
and
mov
add
popa
sbb
mov
das
pop
push
out
adc
in
inc
lods
inc
pop
jp
icebp
in
aam
fisttpl
sbb
add
cld
andb
test
call
scas
popa
test
mov
sarl
pop
pop
mov
and
xorl
push
int
nop
mov
jle
loope
add
cmp
cmpsb
repnz
mov
xchg
shlb
pop
xchg
lea
jbe
jae
and
mov
clc
cmp
push
push
fcompl
xchg
aaa
pushf
std
or
xchg
fistpl
add
ss
mov
fwait
lret
mov
mov
leave
push
cmpl
cmp
pop
int3
mov
test
pop
inc
and
fdivrs
pop
imul
in
stc
mov
loop
xchg
arpl
rorl
data16
outsb
push
and
adc
shrl
mov
mov
rcrl
mov
test
adcb
stos
pusha
movsb
cld
repnz
ret
jmp
jo
xor
mov
into
pusha
test
cs
mov
mov
loopne
pop
scas
shll
push
out
outsl
iret
adc
fnsaves
inc
sub
lcall
arpl
add
jnp
lret
in
rol
add
scas
test
aas
idivl
pop
cmp
in
inc
mov
adc
mov
divl
in
rcr
outsb
xchg
push
cmp
jno
push
cmpsb
ret
sub
repz
insl
fimuls
out
and
arpl
or
ds
mov
outsb
and
mov
sbb
lea
adc
sub
jne
and
push
pop
int3
adc
mov
in
fmull
push
enter
es
push
dec
outsl
mov
add
xchg
sub
sub
mov
imul
xchg
mov
ds
push
rcrl
loop
push
loope
pop
jne
push
test
mov
mov
test
cmp
ds
stos
lock
aam
add
sub
icebp
loope
leave
subb
sbb
je
mov
pushf
inc
push
mov
xor
cmp
leave
cmpsl
loopne
mov
push
nop
sbb
and
je
data16
add
sub
push
addb
ds
sub
xchg
int
in
shl
in
cmp
aaa
int3
movsl
jmp
pop
sbb
fdivl
push
outsl
mov
xor
mov
ljmp
aad
aaa
fadd
mov
pop
test
sahf
aaa
add
insl
in
arpl
movsl
pop
mov
movsl
aaa
sbb
pop
sbb
lea
jmp
adc
outsl
cli
sub
adc
sub
sbb
addb
dec
loopne
lcall
shll
mov
xor
adcb
adc
ja
pop
insb
inc
pop
movsb
iret
dec
imul
adc
rcrl
add
ret
pop
pop
sbb
xchg
add
and
push
loopne
mov
in
pop
dec
popa
fcmovb
stos
sub
icebp
fstpl
mov
hlt
cmpsl
das
inc
mov
fsts
jnp
mov
das
pushf
lahf
cmpsb
pusha
jp,pt
sbb
jmp
js
movsb
aam
push
enter
adc
sbb
push
mov
cmpl
mov
sbb
ror
adc
dec
fwait
lret
das
push
push
push
sub
lahf
pop
cwtl
inc
pop
andl
fstpt
cld
arpl
enter
in
sbb
pusha
int3
jnp
bound
ja
lahf
pop
mov
icebp
mov
jge
xor
cmp
aaa
cmp
jbe
stc
pop
add
adc
lods
jp
push
pop
mov
jne
pop
sbb
cmp
pop
lea
fsubrl
enter
in
xchg
inc
adc
dec
adc
adc
jo
mov
pop
in
pusha
pop
add
ds
sbb
les
es
outsb
fadd
imul
push
cmp
sbb
mov
sbb
imul
in
pusha
mov
add
adc
aas
inc
cwtl
negl
pop
push
and
pop
aam
cmp
add
pop
inc
lods
add
dec
and
jge
push
adc
adc
pop
popa
adc
jecxz
jge
into
divl
popa
popf
pop
cli
adc
in
lock
sub
mov
mov
sarb
stc
and
mov
out
mov
sub
xchg
or
sub
in
sbb
sub
jae
xor
test
or
dec
sbb
jecxz
int3
lea
and
cmp
sbb
testb
xor
arpl
lret
sub
cwtl
mov
push
mov
adc
leave
adc
fnsave
pop
loope
es
fistps
cs
xor
push
ja
or
in
mov
in
mov
push
inc
std
loope
sarl
popf
aaa
push
mov
clc
and
jmp
lcall
test
mov
movsb
mov
jb
loop
fnsave
push
lea
cltd
and
pop
jmp
push
lret
das
pop
insl
jl
pusha
pop
dec
ljmp
fidivs
aaa
std
push
dec
mov
leave
jmp
and
push
dec
cmp
repnz
cmp
dec
dec
push
int
jl
call
fdivr
lock
push
cmp
jmp
mov
ret
into
insl
dec
ds
test
xchg
mov
enter
mov
mov
pop
mov
movsl
sti
and
sub
adcb
xchg
sbbb
jo
adc
or
mov
sbb
cmp
outsl
cld
mov
jp
movsl
aaa
pop
and
xchg
fdivs
xchg
js
and
mov
fs
and
add
jb
push
push
out
test
cltd
outsb
inc
lods
pop
inc
dec
pop
test
in
jbe
aad
sti
ss
and
inc
mov
dec
or
cmp
decb
mov
mov
mov
test
insb
cmpsl
jnp
dec
ds
lcall
pop
add
xor
fistl
or
scas
and
jl
pop
lds
data16
repz
lret
push
cmp
dec
shrl
ja
fisttpll
in
mov
mov
pusha
push
aaa
push
icebp
and
loope,pt
push
jp
sbb
mov
jecxz
leave
or
outsl
pop
jb
fwait
call
or
inc
into
xor
aaa
push
xchg
mov
add
aaa
test
push
adc
adc
call
adc
test
sahf
ss
dec
gs
xchg
sarb
jg
jle
mov
bound
dec
cltd
lea
inc
xor
cmpsl
xchg
mov
inc
lret
push
mov
std
into
cmp
andl
sbb
pop
movsl
pusha
dec
sahf
mov
pop
dec
mov
mov
jb
aaa
mov
fwait
and
sbb
pcmpeqd
cmp
pop
les
cwtl
pop
fists
jae
repz
ud2
in
sub
add
rol
mov
xor
sbb
cmp
cltd
sub
movsb
mov
rol
mov
inc
ret
out
add
imul
xchg
jne
in
mov
nop
pop
ja
in
cmp
inc
add
out
lret
sub
lret
mov
sbb
mov
inc
mov
pop
lcall
fwait
mov
pop
add
sub
jp
dec
dec
push
int3
cmp
jg
mov
idiv
xorb
cmp
add
cli
movsl
adc
sbb
cwtl
xchg
rcrb
push
aaa
xchg
int3
xchg
popf
data16
jle
push
pop
mov
pop
mov
or
push
icebp
lods
aaa
inc
out
push
mull
add
xor
sbb
xchg
xchg
andb
jge
adc
pop
sbb
adc
ret
loopnew
mov
fdivs
aaa
lret
ljmp
xor
cmp
fsubrl
pop
aas
adc
scas
test
cwtl
test
mov
subb
gs
push
mov
and
call
andb
mov
sbb
in
test
orb
mov
jle
add
mov
fsubr
pop
mov
jno
ljmp
push
pop
xchg
mov
jae
and
popf
or
sbb
in
fisttpll
cmp
sub
mov
push
out
mov
movb
inc
aaa
movsb
es
cmp
sti
shlb
xor
push
adc
data16
xchg
in
insb
push
pop
addb
ret
js
out
les
ja
jo
arpl
imul
pop
mov
jmp
imul
jmp
fadds
cmp
push
cmpsb
fsubs
call
xor
xchg
cmpsb
pop
mov
pusha
in
icebp
subb
adc
repz
xchg
jnp
aad
aas
fucomip
xchg
into
inc
jne
int3
test
cmp
movsl
mov
lret
lcall
adc
iret
imul
mov
cmp
aaa
pop
or
data16
cwtl
stos
pop
shrb
pop
jo
les
add
cvtps2pd
sub
and
mov
jo
mov
dec
jmp
dec
pop
mov
adc
pop
sub
mov
pop
shlb
repz
daa
rol
cli
sbb
lds
pop
lcall
into
stos
sub
cltd
mov
sub
dec
movsl
int
out
jle
in
fdivrl
push
test
out
adc
mov
out
mov
mov
lret
xchg
loopne
pop
cmp
xor
ds
push
aas
cmp
test
inc
xadd
mov
stos
pop
divl
insl
mov
scas
aaa
lahf
sub
clc
cwtl
fistpl
add
pop
sbb
cltd
sbb
sti
cmp
addr16
out
dec
xchg
add
mov
mov
pusha
sbb
pop
arpl
jbe
or
xchg
xchg
adc
inc
jp
adc
push
jbe
adc
add
les
aaa
lods
cli
js
ds
mov
ja
add
outsb
push
and
mov
mov
je
es
jnp
std
inc
xlat
push
sbb
mov
mov
add
mov
dec
inc
stc
inc
mov
in
js
push
insb
fninit
cmp
mov
push
out
push
sti
jp
jp
aaa
outsl
dec
jae
rorb
jno
dec
rcll
or
popw
cmp
into
cmp
aaa
inc
push
js
scas
into
lahf
mov
sbb
es
loopne
sub
dec
ss
aaa
xchg
or
mov
sbb
lret
test
push
icebp
scas
movsb
mov
sahf
jmp
les
sbb
push
adc
outsb
pop
pop
mov
pop
xchg
in
pushf
push
and
rclb
adc
pop
lret
sbb
sub
inc
cmpsl
aaa
fadd
cli
inc
pop
push
xlat
xor
roll
lret
cmpsb
and
cmp
xchg
xchg
lea
aam
stos
call
es
sbb
adc
mov
sbb
ret
jecxz
fcomip
lock
sbb
xor
ror
fsts
dec
shll
out
and
ret
xchg
pusha
movsb
cmc
cs
inc
mov
push
rcll
mov
sarb
out
insb
rcl
or
mov
mov
lret
dec
lea
and
mov
sti
lods
sub
enter
test
pop
arpl
dec
and
mov
xchg
outsb
pop
mov
adc
jle
test
mov
negl
outsl
cmp
and
aaa
aas
dec
jmp
push
add
shrl
enter
cmp
jl
pusha
dec
xchg
adcl
or
mov
sub
imul
ret
pop
sbb
fildll
int
push
push
dec
rcrb
je
pusha
ret
gs
testl
aas
lods
hlt
fistpl
sbb
lock
iret
sbb
gs
test
jo
push
adc
lret
in
mov
hlt
in
lret
mov
jne
inc
pop
push
add
push
pop
push
in
data16
add
dec
imulb
jo
add
jg
jecxz
dec
inc
add
jns
jbe
mov
xchg
xor
jecxz
mov
test
pop
mov
fcomi
sbb
mov
enter
pop
sub
push
ret
test
xor
jle
ror
lea
xor
pushf
jmp
xor
push
popf
movsl
sub
lret
xchg
and
inc
pop
push
cmp
push
je
aaa
xchg
cmp
sbb
xchg
dec
repz
pop
dec
add
pop
pop
clc
cmp
rcr
lcall
pop
nop
sbb
jbe
cmp
xchg
aaa
bound
mov
jae
jmp
scas
sbb
mov
inc
sbb
arpl
fwait
fwait
pop
push
inc
jmp
call
and
push
push
dec
push
inc
jle
xchg
jb
lcall
lods
fcomip
inc
jo
mov
lea
mov
pop
aas
mov
inc
in
imul
xchg
repnz
out
push
enter
xlat
pop
xchg
xchg
icebp
and
repz
xchg
cmp
call
in
adc
popa
cld
movsb
pop
stos
mov
lods
mov
add
es
fsubrs
pop
xlat
mov
xor
and
mov
leave
sub
mov
xchg
sub
pop
repz
fists
jp
arpl
cmpsb
in
ja
cmp
xchg
xor
int3
xchg
xor
mov
test
lcall
xor
push
adc
sub
xchg
dec
divw
push
jbe
or
sub
in
push
sti
add
fsub
push
cmp
test
add
fstl
inc
and
pop
sbb
mov
dec
pop
sahf
xchg
data16
jle
jb
jno
xchg
enter
rorb
mov
xchg
mov
in
int
push
faddl
popf
loope
aam
inc
jg
push
out
xchg
sbb
adc
ud1
dec
cwtl
xchg
fcomps
arpl
jns
and
jg
ss
call
add
push
jp
ljmp
nop
or
push
ss
sbbl
imul
sbb
sub
sub
xchg
mov
jmp
fcompl
xchg
scas
dec
jle
lret
les
outsb
in
lahf
sbb
pop
lea
ret
movsl
mov
pop
out
push
pushf
nop
aas
ja
pop
or
subb
arpl
fsubs
addr16
mov
mov
testl
in
movsl
jnp
xchg
pop
cmp
adc
xor
nop
sub
jnp
add
mov
xchg
lock
sub
loop
and
inc
sbb
cli
repnz
pop
data16
adc
pop
faddl
mov
sbb
add
add
pop
mov
jecxz
shll
push
in
sub
jae
clc
inc
int3
pop
cmp
sbb
jle
sbb
pop
or
sbb
fwait
lret
sbb
lock
sbb
fcompl
add
push
idivb
aas
adc
repz
mov
addb
sbb
cmp
cwtl
sub
lcall
jo
jo
pusha
push
aas
insl
and
mov
push
popa
fstps
in
into
jmp
mov
cmp
push
jae
repz
testb
push
aaa
insl
sar
xor
inc
and
push
aas
lods
sbb
in
cmpsb
and
aaa
push
adc
xor
pop
pop
dec
and
inc
push
or
out
call
xorb
sbb
ds
ja
dec
xor
pop
push
ret
cmc
inc
push
jp
sbb
pop
lahf
push
add
lret
sub
sbb
push
push
mov
inc
jp
cld
or
xor
lods
rcr
dec
stos
pusha
lds
adc
adc
xchg
push
lea
sub
mov
push
add
or
pop
ret
lcall
jle
cs
adc
mov
dec
imul
and
pop
mov
dec
and
in
mov
test
pop
adc
pop
ret
mov
outsl
imul
mov
lock
sub
and
push
cmp
adc
sti
pop
jecxz
int
sbb
lea
sbb
les
in
popl
aas
sbb
test
mov
mov
push
dec
cmpsl
in
jge
xchg
sbb
lea
aaa
incl
enter
dec
inc
sar
and
popf
mov
jmp
dec
ljmp
mov
mov
mov
sbb
mov
xchg
dec
sub
mov
push
adc
scas
and
insl
fsubrs
push
or
mov
aaa
enter
fnstcw
pusha
mov
pop
jmp
movsb
arpl
cmp
pusha
aad
pop
outsb
lods
lea
fisttpll
lods
inc
rclb
mov
fisubs
xor
pop
push
xor
xor
pop
mov
loopne
gs
loopne
jecxz
dec
rcr
cmpsl
push
mov
frstor
lcall
jecxz
and
in
pop
into
cltd
jge
sar
loopne
push
pop
and
int3
adcl
clc
jb
jne
bound
mov
mov
sub
lret
add
dec
outsb
iret
jo
dec
pop
loope
test
aaa
add
lret
sub
fwait
jbe
out
aaa
imul
test
dec
cmpsb
pusha
aad
xor
jl
popf
mov
cli
ret
aaa
out
into
in
or
fsubrl
jo
jg
sahf
pop
pushf
dec
loope
jge
shrb
push
icebp
cmp
fsubr
arpl
lods
loope
in
xchg
inc
pushl
imul
ja
imul
divb
mov
xor
stos
mov
pushf
lea
enter
sub
jl
push
xchg
enter
push
testb
inc
and
sub
popf
mov
mov
cmpsb
or
gs
rol
icebp
ffree
sbb
adc
dec
adc
fld
sub
adc
ret
lods
fdiv
scas
push
pop
dec
adc
sarb
popa
sub
jne
and
loope
sbb
and
or
pop
fdivrs
fs
mov
repnz
icebp
rcll
xchg
dec
icebp
sbb
je
pop
add
xor
mov
aaa
rorb
and
push
fdivrl
mov
cs
in
sbb
pop
in
rcll
repnz
mov
push
sti
pop
in
pop
push
int3
or
es
push
fwait
outsb
or
xor
in
cmpsb
pusha
adc
mov
mov
daa
test
xor
ss
ret
arpl
push
test
fstpt
xor
sub
mov
out
cltd
daa
sbb
enter
insb
stos
pop
in
lahf
mov
fisttpll
inc
sbb
or
call
lret
sbb
dec
cmp
mov
inc
adc
dec
add
sti
addl
fucomip
cs
push
in
cmp
rorb
out
xchg
add
lds
pop
jmp
insl
mov
call
pop
cltd
push
cld
nop
and
xchg
or
mov
ss
mov
fcomp
repnz
inc
add
div
xorb
fdiv
push
or
outsb
cli
ret
inc
cs
arpl
out
ljmp
xchg
iret
sub
aaa
cmc
loope
addr16
jbe
roll
jecxz
pop
lods
lret
jae
stc
sub
jmp
jg
loope
bnd
shlb
scas
and
cwtl
mov
cltd
adc
in
mov
insb
int3
aaa
cmp
and
test
sub
cmp
xchg
xchg
out
pusha
loope
push
repz
shlb
cmpsb
jnp
stos
ffree
stos
std
pop
adcl
test
adc
mov
in
push
ret
bound
mov
daa
ds
sub
sub
cmp
inc
ss
mov
mov
stc
sbb
xchg
ss
xchg
pop
je
loope
xorb
in
jae
nop
pop
fucomi
xor
es
add
pusha
adc
mov
ret
sbb
and
in
pop
mov
mov
rcll
lcall
jecxz
out
loopne
punpckhwd
test
insb
push
fldl
push
or
dec
mov
cmp
pop
push
adc
adc
add
xor
push
mov
jge
lods
push
jecxz
sbb
mov
daa
mov
scas
test
adc
cltd
lcall
hlt
das
jecxz
fsubl
sbb
xor
and
mov
lret
pop
and
adc
push
mov
adcb
jb
dec
mov
pop
es
outsb
in
pop
push
fistps
cmp
add
pop
lcall
push
jmp
push
aam
in
sub
mov
popa
adc
lret
pusha
data16
push
out
pusha
hlt
push
aaa
setnp
dec
pop
jle
xor
jae
rcrb
and
cmovnp
inc
aaa
mov
inc
and
ror
mov
movsl
mov
shr
pop
jmp
mov
add
cld
push
outsb
push
aaa
das
cmpsb
fistpl
cmp
inc
sarb
repnz
out
sbb
mov
orb
lock
or
imull
fldt
test
mov
imul
cs
jmp
add
inc
pop
cmc
stos
jno
loope
fwait
pop
in
out
fsubs
nop
push
ds
inc
cmp
cs
jb
or
jle
inc
rcll
mov
push
pusha
jecxz
fldenv
and
das
xor
jg
mov
mov
pop
jge
xor
aaa
insl
scas
adc
or
jmp
jle
adc
lods
in
mov
jno
jbe
sbb
add
mov
paddq
stos
rorb
popl
inc
jge
cmpsb
jecxz
and
icebp
mov
push
jo
pop
mov
mov
in
in
push
stos
adc
mov
push
jge
dec
insb
inc
in
push
divb
xor
jo
mov
shlb
aaa
push
lods
repz
ss
clc
cmp
gs
popf
pop
not
adc
nop
sahf
mov
mov
add
test
xlat
sub
insb
xorb
fists
fsts
stos
lock
outsb
mov
outsb
dec
mov
sahf
cs
pop
ja
push
xchg
inc
aaa
lock
xchg
cmp
les
inc
pop
and
call
sub
ss
jb
adc
es
pushf
jo
mov
lcall
and
inc
push
push
add
and
adc
push
push
je
into
mov
adcl
loopne
lret
fwait
cmp
int
pop
or
pop
sbb
pop
out
adc
sbb
jmp
or
rolb
or
adc
cwtl
sti
xlat
leave
in
inc
xchg
pop
pusha
xlat
les
mov
xchg
and
jns
ljmp
fisubl
mov
in
and
push
and
cmp
xchg
mov
inc
ficoml
add
push
adc
cmpsb
xor
stos
inc
and
ss
sbb
imul
pop
sbb
add
dec
and
test
pshufw
jl
xchg
xor
repnz
stos
pop
mov
and
jge
enter
out
add
out
cmpsb
hlt
push
popf
push
and
dec
aad
aaa
into
icebp
xor
xor
daa
xchg
out
clc
jbe
cmpsb
cmpsl
sbb
in
adc
fsubr
scas
inc
insl
push
xchg
ret
adc
imul
scas
out
sarl
pop
int3
sbb
xor
pop
in
jo
fcomip
rclb
popa
out
and
ljmp
cmp
std
rcrl
pop
dec
inc
inc
ret
clc
mov
stc
push
push
pop
xchg
and
jne
fdivrs
cmp
adc
je
fsts
outsb
pusha
pop
sbb
xchg
negl
or
into
mov
cmpsl
outsl
sbb
aaa
sahf
arpl
push
les
push
adc
add
mov
mov
inc
mov
mov
sub
push
nop
lcall
jne
mov
popa
inc
shll
or
imul
lcall
imul
mov
xorl
inc
dec
iret
or
jne
arpl
popf
daa
jle
mov
xchg
mov
xchg
call
adc
lea
shll
ret
and
pop
dec
pop
sbbb
rcrl
mov
cld
or
imul
bnd
inc
icebp
fcom
dec
dec
add
or
fwait
xor
js
adc
fwait
jo
stc
add
lds
inc
pop
pop
cmp
inc
xor
push
mov
shlb
dec
in
xor
ret
out
sbb
and
inc
loope
hlt
fbstp
fcom
stos
int
clc
ret
fisubrs
jbe
pop
scas
pop
iret
xchg
stos
int3
pop
push
frndint
push
jl
xchg
push
ja
sub
pushf
add
cmp
add
jne
loopne
mov
mov
add
jbe
aaa
test
es
mov
out
cmc
into
jge
jns
xor
sub
repz
ss
and
ss
dec
jns
xchg
jbe
or
sahf
aaa
pusha
xchg
xor
ss
push
sti
ret
pop
pop
cmpsl
movsb
out
push
jge
lcall
pop
andb
mov
adc
test
add
in
shll
pop
movb
or
aas
sbb
frstor
cmp
scas
mov
sarl
stc
lret
jge
cld
add
xchg
jno
sbb
stos
mov
cmp
hlt
sub
xchg
imul
xchg
loope
fistps
sbb
lret
outsl
inc
push
lock
sbb
push
or
mov
inc
int
pop
loopne
dec
push
cwtl
lods
mov
test
xchg
dec
cmp
shll
pop
cmpsl
sbb
out
jle
bound
pop
lea
inc
fldcw
gs
stos
stos
fbld
movsl
jg
adc
jns
mov
sarl
pop
lahf
dec
inc
add
out
aam
push
pop
jp
pop
jecxz
jbe
jne
in
popa
mov
fnstcw
sahf
sbb
arpl
loop
loope
ss
out
loop
jo
in
pop
cmp
leave
sbb
jle
lods
pop
fistps
pushf
sbb
cmp
pop
dec
add
jno
aaa
pop
adc
push
pop
jo
lcall
sbb
mov
outsb
cmp
mov
jbe
call
mov
or
mov
sbb
pop
and
lea
pop
sbb
push
lods
add
adc
xor
xchg
jns
inc
loop
xlat
push
sbb
xchg
icebp
ja
cmp
add
lahf
aas
sbb
push
dec
shr
test
fisttpll
and
cmp
mov
popa
pop
add
sbb
push
add
push
ss
sahf
inc
cmp
mov
xchg
out
imul
add
cmp
loope
dec
pop
cmp
mov
movsl
sti
outsb
arpl
loopne
int3
push
add
fmul
fstl
aaa
aam
cmp
dec
das
mov
mov
sub
ss
lret
jne
pop
add
decb
aaa
into
es
jbe
bound
inc
xor
inc
aaa
xchg
divb
and
in
cwtl
xor
mov
push
mov
xor
add
mov
push
mov
pop
xor
push
ret
mov
je
push
adc
sbb
mov
jecxz,pt
push
cmp
pop
mov
mov
mov
enter
ja
fcmovbe
mov
adcb
mov
jge
and
subb
pop
in
inc
pop
mov
jge
lock
xor
loope
stos
shlb
test
stc
sub
and
fsubl
cmp
cmp
push
mov
inc
popf
fdivs
ja
aaa
orb
xchg
std
xlat
jecxz
jecxz
jge
imul
enter
add
and
push
push
dec
mov
xchg
cld
pop
jle
add
jns
inc
aaa
ljmp
ret
push
loop
ja
ror
pusha
mov
ja
in
xchg
sub
sub
mov
ret
int
xchg
sti
jbe
out
xchg
stos
cmp
in
and
std
ss
mov
push
pop
pop
push
push
rolb
jg
cld
xchg
repz
mov
jne
jmp
mov
ret
popa
xor
stos
aad
stos
sub
pop
iret
rorl
cmp
mov
lea
inc
push
mov
mov
or
jl
aaa
or
pusha
adcb
mulb
sbb
inc
mov
jb
loope
jnp
sbb
xchg
pushf
sub
jl
xchg
cmp
cmpsl
push
sbb
mov
jp
jl
into
adc
pusha
clc
xor
mov
out
sahf
ret
cmpb
js
mov
adc
ret
testb
pusha
pop
sbb
jo
ds
mov
cmp
push
ror
rcll
popa
cltd
cmp
push
dec
add
bound
lock
les
pop
fidivs
pop
lret
push
or
lahf
pop
stos
mov
shlb
add
dec
mov
mov
iret
pop
cwtl
fisttpll
aam
pop
ss
cli
jmp
lods
cmp
test
popa
and
fsubrs
rorl
movsl
aaa
and
adc
popw
jp
lock
jbe,pt
cmp
fwait
ss
call
dec
sbb
outsl
fbstp
jb
ds
and
fwait
scas
pop
push
mov
sahf
jle
ljmp
jns
call
jb
and
not
xchg
cmpsl
repz
movsl
cmp
jb
dec
xor
pop
and
loop
adc
cld
pop
loope
adc
sbb
rcrl
ret
pop
inc
int3
in
out
xchg
lret
mov
dec
or
jmp
inc
sahf
jo
xchg
push
and
xor
inc
lods
push
sub
add
and
pop
lods
pop
addr16
test
inc
leave
mov
shll
push
sbb
jno
sub
push
aaa
cmpb
jo
hlt
fmuls
test
loop
lret
push
push
mov
outsb
sbb
cmpsb
xchg
sbbb
fadd
pop
aad
aaa
push
inc
pop
or
cwtl
jmp
daa
inc
push
es
mov
js
adc
aas
pop
xchg
and
aaa
add
push
add
jl
cmp
xchg
js
ds
push
jbe
sub
jo
into
cmp
mov
inc
mov
sahf
push
pop
mov
jle
lods
arpl
jl
xor
xchg
sbb
push
pop
xchg
stc
inc
icebp
sti
lods
shll
sub
aam
lea
bound
aaa
jno
push
outsb
jnp
push
test
jecxz
mov
push
fsubl
pop
jae
out
dec
fsubs
mov
mov
jle
bound
ja
pop
imul
and
mov
aaa
test
nop
sahf
fiadds
push
pop
icebp
mov
xchg
rdpmc
mov
outsb
movb
or
std
add
stos
mov
dec
and
lret
xlat
cmpb
add
push
jp
popf
and
ljmp
xchg
mov
stos
push
xor
mov
inc
xchg
jg
arpl
sbb
outsb
add
jb
cmp
stos
push
sub
ljmp
pusha
push
int
es
lock
mov
cli
mov
mov
ss
iret
insb
lcall
pop
jb
dec
scas
cmp
mov
fisttpll
jl
imul
mov
jge
push
mov
lret
out
pushf
mov
addr16
notl
sti
mov
mov
cmp
push
es
enter
leave
sbb
loop
in
sub
push
add
cmpsl
out
pop
inc
mov
pop
pop
jle
mov
int3
cmp
or
mov
mov
cwtl
jo
sbb
pop
push
loope
sti
add
rolb
or
sbb
push
add
and
int3
inc
inc
jbe
jecxz
jne
dec
js
xor
lds
outsl
test
mov
or
movsl
pop
movsb
mov
jp
xor
bound
testl
cmp
loop
popf
inc
and
ss
pop
loope
cli
sbb
jmp
movsl
and
xchg
add
inc
into
sbb
arpl
inc
mov
jo
shrb
add
push
mov
pop
inc
add
push
jmp
mov
add
inc
out
lock
jle
in
or
data16
inc
mov
pop
bound
aaa
jae
data16
hlt
xor
mov
loope
dec
fidivrs
jne
sti
mov
push
jbe
loopne
pop
push
inc
mov
or
repz
push
dec
insb
ds
loopne
test
fbld
mov
mov
pop
arpl
push
cli
js
add
imul
sbb
mov
mov
mov
jb
jns
cmpsl
mov
add
xor
pop
loop
push
push
push
ds
xchg
mov
in
mov
jbe
pop
mov
mov
fxch
fstp
pop
jo
xchg
arpl
xlat
jbe
fwait
xchg
dec
pop
push
xchg
and
sub
in
test
repnz
xor
push
aas
jnp
add
mov
mov
sbb
jae
mov
int3
cmpb
ret
aaa
add
jl
loopne
cltd
dec
dec
outsl
mov
xor
lock
stos
lret
repz
cmp
jmp
outsb
adc
nop
outsb
sub
mov
into
and
adc
jo
aaa
mov
push
push
popf
pop
xchg
fnstsw
arpl
cmpsb
loopne
call
xchg
mov
cmp
inc
sbb
sbb
repz
push
scas
fadd
ss
inc
push
outsb
jb
lods
xchg
mov
arpl
add
out
stc
aad
cwtl
sbb
call
pop
out
ret
jl
gs
daa
sahf
stos
sbb
out
inc
cmp
push
xor
icebp
aaa
push
in
pop
and
outsb
and
loope
fldcw
test
dec
stos
rcr
adc
pusha
imul
lea
das
repnz
fstpt
fcomps
xchg
pushl
push
imul
mov
mov
rep
out
mov
test
pop
pop
outsl
outsb
inc
jnp
push
insl
aam
addr16
pop
mov
lcall
imul
stos
lea
jecxz
jl
xchg
stos
lret
enter
mov
shlb
test
sbb
push
cmpsl
mul
inc
push
sahf
push
cltd
sub
fucomi
push
fcmovb
dec
popf
loop
xor
dec
popa
or
pop
mov
xchg
dec
push
cmpsl
push
push
push
fnsetpm(287
cmp
jb
mov
mov
std
lods
sarb
push
andl
push
inc
mov
add
adc
cwtl
pushf
mov
push
es
jo
lods
lds
jle
mov
mov
ja
popa
daa
fsubs
dec
xchg
pop
sbb
mov
movsl
aam
ss
mov
adc
pop
cmp
and
or
mov
push
cmc
pop
aaa
pop
inc
pop
mov
inc
push
xor
and
bound
int3
sbb
push
pop
data16
adc
inc
test
in
xor
pusha
scas
or
mov
lods
les
ja
aas
pop
out
outsb
insb
sti
icebp
sbb
stos
pop
sbb
in
pop
in
into
nop
addr16
sbb
pop
push
aaa
jle
aad
int
mov
add
dec
les
push
hlt
cmp
mov
ss
imul
out
in
jp
mov
cmp
mov
push
xchg
pop
push
scas
push
rcl
add
out
push
mov
data16
lahf
test
insl
cmp
add
in
das
imul
out
inc
fidivs
or
dec
mov
test
mov
test
pop
icebp
and
dec
cmp
jae
inc
enter
shrl
mov
lds
sbb
pop
mov
adc
lcall
test
cmp
rcrb
mov
rcrl
jecxz
inc
cmpsl
push
dec
leave
cmovs
pushf
add
out
pop
rcll
dec
hlt
cltd
push
sub
xor
int3
mov
bound
je
incb
push
mov
jnp
pop
fldl
pop
xchg
repnz
jge
test
nop
jbe
lods
nopl
frstor
aaa
in
and
dec
inc
loop
and
mov
dec
hlt
mov
loope
lods
scas
mov
mov
xor
or
loopne
sub
loop
inc
sbb
ja
lret
push
dec
xchg
jle
lret
jp
jae
push
or
push
inc
andb
pop
rcrl
gs
push
movsl
insb
adc
push
lcall
inc
pop
imul
cwtl
lret
mov
imul
xor
mov
push
loope
and
aam
outsb
loopne
jle
cwtl
or
mov
sbb
shll
aaa
cmp
add
enter
add
adc
add
inc
rorb
mov
test
shl
mov
mov
cld
xchg
call
and
mov
pop
bound
lret
ret
stc
jge
dec
jb
xor
ficomps
loop
or
bound
mov
sbb
in
xchg
mov
test
scas
xor
adc
jmp
daa
sub
mov
sbb
aaa
add
sub
loopne
xchg
out
aad
mov
jo
jae
ret
sub
xlat
add
sub
shlb
or
sbb
lds
pop
pop
inc
mov
and
jg
cmp
xchg
pop
cmc
xchg
cmp
lock
shll
popa
es
arpl
sub
mov
repz
adc
inc
mov
ss
add
pop
in
sbb
fsubl
add
outsb
xchg
mov
int3
lods
int3
inc
into
je
enter
out
or
lret
cmp
mov
jne
nop
int3
fbstp
add
sbb
push
fildl
dec
enter
lahf
jno
push
jecxz
and
dec
outsb
push
mov
sbb
or
stos
and
xchg
lret
cmc
js
xchg
push
push
sbb
aas
dec
cld
aaa
push
adc
inc
sarl
sbb
mov
insl
xor
movsb
sbb
mov
cmp
shl
andl
loopne
jns
xor
add
mov
inc
cmp
adc
cli
dec
frstor
cmp
sbb
aas
fs
bound
sbb
aad
adc
gs
adc
sbb
shrl
add
sub
sbb
les
fwait
dec
sub
out
aaa
repnz
jno
fisubrs
cltd
outsl
das
out
mov
aad
int3
lret
jle
fnstenv
sti
ss
mov
add
int
aaa
mov
pop
lcall
pop
push
leave
push
mov
in
outsb
and
pop
sbb
jb
loope
mov
pop
lret
inc
xor
imul
jg
shlb
xchg
stos
insb
subl
jmp
sub
sbb
mov
sbb
pop
lea
sbb
sbb
xor
pop
mov
lods
sahf
arpl
jle
jecxz
jbe
int3
push
mov
cwtl
fisubrs
outsl
ret
ret
out
popf
inc
in
xor
sbb
xor
or
dec
jle
dec
inc
jae
scas
clc
xchg
dec
dec
lock
pop
adc
icebp
xchg
xor
test
inc
inc
addb
outsl
jmp
stos
jg
call
add
push
lock
mov
inc
add
add
inc
in
jnp
out
int
aaa
xchg
mov
dec
aad
aaa
xchg
aaa
push
ss
loop
test
add
cmpb
in
roll
lret
aaa
mov
test
popf
in
jmp
pop
std
or
rcrb
mov
mov
test
lcall
cmp
stos
pop
cmp
movsb
sbb
inc
push
adc
lret
sub
mov
pop
bound
xchg
repz
mov
loopne
cwtl
mov
pop
mov
shrb
xlat
je
or
inc
sub
xchg
mov
nop
shrb
lock
loope
xchg
push
scas
jns
xor
push
ljmp
gs
fchs
movsb
push
adc
xchg
test
int
mov
and
lcall
cli
pop
ret
fiaddl
je
sbbl
dec
sbbb
mov
in
les
fdivrs
dec
mov
mov
in
ss
ds
fdivp
add
daa
or
mov
fiaddl
push
int
pop
adcb
bound
imul
inc
pop
inc
in
dec
cmpsb
js
mov
cmp
adc
cmp
adc
aaa
adc
dec
repz
add
jecxz
ret
aam
mov
add
sbbl
cmp
mov
mov
and
sbb
imull
xchg
push
je
bound
add
push
pop
into
popf
xor
mov
sbb
xor
nop
insb
dec
cltd
inc
pop
hlt
adc
xchg
or
sub
cmp
jp,pt
insl
lea
and
dec
stos
mov
dec
push
jbe
sbb
fcomi
push
sbb
lock
sahf
xchg
inc
mov
add
jp
inc
pop
cmp
sbb
dec
lock
push
lcall
push
and
push
inc
push
shll
add
enter
in
push
sti
daa
andb
mov
push
cmc
xor
pop
jo
jne
sub
scas
mov
mov
cmpsb
lods
lods
cmc
inc
repz
test
scas
xor
rorb
popf
imul
std
xchg
sbb
mov
das
sbb
mov
sbb
fistps
mov
stos
sbb
cmpsl
in
xchg
cmp
stos
xor
inc
jl
loopne
icebp
add
cld
xchg
dec
sbb
xchg
repnz
pop
sbb
and
dec
ficompl
mov
mov
sahf
stc
xor
sbb
addr16
aaa
push
sti
sahf
mov
push
mov
adc
mov
add
das
pop
jb
xchg
mov
or
sahf
pop
loop
fs
mov
ljmp
xchg
xor
add
dec
ret
je
test
add
pop
outsl
fisubs
gs
ja
outsb
add
push
jge
in
test
aaa
scas
gs
dec
cli
outsb
popf
pop
lea
bound
dec
sbb
aaa
arpl
arpl
pusha
sbb
lds
xchg
sub
stos
adcl
into
fbstp
push
in
mov
mov
cld
fidivrl
push
outsb
xchg
cwtl
sub
add
aaa
xor
std
sbb
popa
bndstx
pop
pop
ljmp
loopne
aas
xor
jge
fcomp
sbb
inc
add
scas
mov
fistps
outsl
subl
mov
pop
jl
xchg
lock
aam
movzwl
ss
inc
push
fcoml
sub
pop
out
pop
pop
inc
cwtl
insb
mov
je
and
xor
xor
pop
mov
inc
das
push
pop
add
sti
fcompl
pop
push
or
repnz
xchg
repz
ds
mov
in
add
pop
scas
imul
push
pop
add
fnstcw
inc
test
inc
add
sub
testb
ret
je
cmp
arpl
jle
dec
sbb
mov
lcall
pop
test
aaa
fisubs
sbb
xor
cmp
inc
pushf
mov
mov
loope
jb
fnop
mov
cmp
add
xorl
insb
inc
xchg
cmp
nop
xchg
sub
add
xor
pushf
scas
push
cli
hlt
cmp
in
jp
inc
inc
ror
fadd
jge
or
sahf
ss
popa
nop
sbb
xor
xchg
adc
mov
rorb
cmp
in
sbb
dec
js
jbe
fsub
add
jo
mov
rcll
and
jmp
adc
aad
pop
call
pop
push
adc
loopne
cmp
sub
jbe
xorb
inc
aaa
mov
cwtl
cwtl
pop
jmp
shlb
mov
jle
test
sbb
pop
aad
outsb
enter
test
pop
dec
into
pop
std
sbb
orl
out
fmul
add
xor
lods
sub
out
jecxz
mov
cmp
or
push
call
sbb
and
sbb
inc
rcll
jb
outsb
iret
add
popf
aaa
mov
push
pop
popl
in
ds
jge
repnz
jle
xor
call
test
cmp
es
scas
mov
inc
loope
aaa
sbb
test
ljmp
cmpsb
mov
or
mov
add
ja
clc
push
jge
adc
loope
cld
sbb
lods
movsb
xchg
jl
gs
adc
ffree
fldt
lret
lret
ja
insl
imul
dec
in
sbb
fcmovne
mov
mov
std
pop
inc
cli
sub
sub
jns
push
out
pushl
arpl
stc
sbb
inc
addb
dec
add
or
pop
inc
enter
and
dec
inc
cmpsl
in
inc
xchg
iret
les
cmp
inc
nop
jl
dec
dec
push
pushf
imul
fwait
int3
fsubrs
xor
xlat
sbb
cs
push
cmp
hlt
ljmp
shl
in
loopne
adc
jge
sub
add
pop
jecxz
push
ljmp
cltd
dec
imul
mov
sub
loope
fldenv
out
imul
insb
mov
cmp
stos
lret
sbb
loope
cmp
mov
repz
mov
adc
data16
mov
fstpl
dec
pop
or
sbb
mov
in
cltd
xchg
pop
stos
loop
mov
pushf
push
stc
imul
mov
push
xor
pop
mov
jmp
inc
mov
and
add
out
mov
lea
mov
lret
dec
fcoml
sub
rcrl
pop
nop
cld
pop
cmp
and
bnd
aas
repz
mov
inc
lret
int3
cmpsb
test
aad
outsb
xchg
das
test
fwait
imul
mov
xchg
push
mov
xchg
inc
inc
jg
push
lret
jmp
mov
fisttpl
and
imul
mov
aam
or
mov
jb
mov
pop
sti
dec
push
or
cmp
in
jbe
lock
rcr
scas
out
sub
xchg
unpckhps
sbb
sar
aaa
xlat
mov
mov
scas
ficomps
xchg
or
subb
push
repz
xchg
mull
sbb
adc
jb
loopw
outsb
sbb
sub
and
sbb
lret
dec
adc
push
mov
gs
fcompl
pop
fistpl
rcll
mov
pop
jmp
cmp
xchg
dec
cwtl
js
ret
xor
lods
mov
mov
xchg
sub
xchg
dec
aas
imul
mov
cld
pop
fscale
pop
movsl
mov
mov
sub
dec
pop
fadds
adc
sbb
and
add
fdivl
lahf
insb
dec
rcll
pop
jp
loope
in
push
cmp
orb
jnp
adc
fstps
adc
dec
subb
cmp
stos
inc
pop
mov
mov
cmpsl
fdiv
cmp
int3
imul
cmc
cli
sub
iret
stos
cmc
movsl
test
mov
cmp
push
lcall
mov
bound
xor
dec
int3
cs
push
push
jge,pn
dec
inc
adc
loopne
pop
loop
dec
lret
cmp
push
fadds
out
std
mov
mov
ret
and
out
testl
mov
cltd
ss
add
fwait
stos
pop
jle
mov
lea
pop
aas
mov
fisttpl
outsb
call
addl
lahf
mov
repz
jle
push
aam
stos
lods
lods
cmc
nop
pop
adc
dec
popf
aaa
and
cltd
ret
popf
inc
repz
or
imul
outsb
es
sbb
and
inc
add
das
jle
xor
sbb
add
or
iret
inc
ja
mov
and
add
inc
add
jge
jb
in
xchg
jns
sub
mov
stc
out
pop
sbb
dec
ret
dec
test
mull
sub
sub
pop
mov
out
or
inc
xchg
mov
fld
xlat
pushf
pop
fsub
cltd
repz
hlt
fwait
rcrl
arpl
sbb
std
cmpsb
out
icebp
xor
and
push
outsb
in
test
mov
clc
inc
cmp
sbb
and
pop
and
fsts
jbe
ljmp
jns
jmp
mov
add
cmpl
stos
inc
add
pop
mov
sahf
lret
xchg
jne
popf
inc
mov
int3
das
incb
sub
cmpsb
cmp
cwtl
adc
cmp
cs
xor
jb
mov
ss
mov
out
mov
push
pop
mov
xor
pusha
or
rorb
insl
mov
or
stos
stos
ret
inc
and
mov
repz
mov
mov
mov
pop
and
int3
jb
mov
lret
icebp
inc
sub
mov
cmpsl
lods
jecxz
sub
jae
outsb
jo
sub
jp
and
jge
pop
in
cvtdq2ps
fndisi(8087
orl
or
pop
xor
adc
ret
aaa
inc
inc
test
sbb
adc
lea
push
push
cs
sti
inc
lret
push
cmp
jg
inc
aaa
loopne
xchg
mov
cmp
lahf
add
call
xor
fists
fsave
ficoml
ja
aaa
or
sub
mov
lcall
xchg
aaa
jb
paddusw
pop
std
push
les
pop
sbb
mov
inc
sub
mov
lret
push
jne
jle
in
lea
sub
push
and
iret
into
push
aad
aaa
ja
ret
jle
push
xchg
xchg
mov
mov
jae
lret
cwtl
cltd
mov
sub
push
orb
and
push
or
mov
jnp
bound
out
lods
stc
cmp
sub
inc
sbb
lods
lahf
push
sbb
test
test
xor
pop
shrb
fmul
aaa
cmp
jae
sti
nop
mov
mov
aam
pusha
push
sub
push
aad
popf
or
out
xchg
movsb
push
mov
lret
pop
jne
pop
fildl
cmpsl
inc
mov
in
push
pushf
arpl
mov
mov
into
ds
jae
or
ss
subl
outsb
lods
enter
dec
shr
pop
aaa
cmp
pop
stos
out
sbb
jle
clc
sbb
or
push
popa
jmp
fstpl
mov
loopne
sbb
loop
test
dec
dec
mov
loope
pop
mov
xor
mov
std
jmp
pushf
stos
xor
mov
aas
jae
data16
add
lea
cmp
mov
loop
jbe
lcall
add
std
or
arpl
jg
aas
mov
aas
shll
in
jecxz
mov
mov
pop
mov
jmp
push
add
jnp
xchg
test
rcr
push
pop
imulb
fnstsw
cmp
fwait
pop
loop
jp
rorb
stos
cli
aam
shrl
gs
and
jb
pop
ret
dec
mov
push
pop
aaa
mov
in
outsb
nop
cltd
call
sbb
mov
aas
std
int3
or
mov
cmpsl
repz
dec
cltd
dec
es
sub
push
push
add
mov
stc
sbb
cmpsl
add
pop
leave
sbb
mov
nop
adc
sbb
sbb
ret
icebp
and
cltd
mov
pop
in
loopne
je
pop
jnp
sti
push
movsb
inc
lock
popa
imul
jb
out
test
cmp
aad
xchg
pop
xchg
movsb
inc
lcall
inc
pop
cmp
pop
push
inc
out
orl
push
jae
popf
ds
sbb
fcmovnb
inc
pop
mov
fnstenv
dec
cmpsb
nop
xchg
pop
and
or
adc
add
cmp
ss
call
or
sbb
pop
xchg
lock
inc
cmp
imul
cmp
pop
push
repz
jbe
enter
lcall
pop
jbe
push
test
xchg
jecxz
inc
and
dec
lock
cmp
fsub
sbb
aam
adc
cwtl
addl
pushl
jmp
xchg
cmp
fimuls
cmp
sbb
mov
inc
jno
or
or
push
cld
std
data16
xchg
sbb
pop
js
lret
xchg
jne
cmpsl
negb
imul
bound
insl
mov
and
movsl
push
repz
test
xor
mov
in
jne
popa
add
jmp
aam
push
pop
and
shll
rolb
scas
push
jo
jmp
xchg
addr16
flds
push
clc
dec
loopne
fwait
mov
sbb
inc
and
ds
repnz
test
jp
test
cmp
dec
pop
sets
xchg
subl
loopne
fsts
pop
pusha
pusha
pop
loopne
ret
std
push
cmp
and
dec
aad
in
adc
js
push
jno
adc
andl
scas
xor
vpcmpeqd
outsb
mov
out
test
push
sub
icebp
mov
lods
and
jmp
xchg
mov
sbb
mov
cmp
xchg
test
fwait
cmp
mov
and
outsb
nop
sarl
outsl
jbe
sbb
xor
int3
jb
aas
or
cld
xchg
sub
push
pop
xchg
or
and
jge
push
pop
push
js
xor
mov
mov
and
out
jne
insl
jne
jle
inc
out
lret
dec
outsl
mov
jl
cmp
mov
cltd
push
movsl
stc
add
and
dec
enter
xor
lock
das
push
push
cmpsl
cli
test
jle
dec
lock
es
cmp
cmc
pop
pop
adc
aad
dec
loop
add
xor
dec
nop
aad
and
xchg
addr16
sbb
popa
popf
jmp
jp
mov
arpl
jp
lahf
js
dec
enter
pop
fisttpl
pop
sub
jge
iret
adc
cmp
ss
mov
dec
ja,pn
mov
inc
loope
add
or
les
ret
mov
in
jmp
jg
sbb
stc
outsb
mov
popl
or
jl
push
sub
xor
cmp
in
lea
jle
add
ret
addl
pushl
out
nop
in
outsb
lcall
jno
lret
dec
scas
adc
xor
xchg
pop
aas
stos
mov
nop
add
fmulp
fistps
inc
popf
pop
test
xor
roll
cmp
cmc
fucomip
pop
repnz
push
out
movsl
aad
aaa
dec
insl
decl
pop
dec
jle
je
rcll
push
push
and
sahf
push
fisttps
movsw
push
push
sahf
nop
ja
or
enter
lret
mov
add
push
push
mov
inc
shll
aas
or
cs
div
fnstcw
sahf
inc
cs
test
in
jne
adc
dec
or
and
data16
push
push
pusha
pop
jg
stc
sbb
rclb
sahf
cltd
shlb
test
dec
sub
pop
aaa
ss
in
adc
jmp
inc
roll
ret
push
xchg
sbb
mov
std
dec
sub
repnz
pop
fstl
dec
add
and
test
aad
adc
or
stc
icebp
sub
stos
jb
sub
in
jl
aas
sbb
sbb
xor
aas
and
test
dec
scas
cmpl
pop
jp
pusha
out
aaa
hlt
mov
pop
jne
dec
or
xorb
imul
push
pushf
pop
and
bound
test
mov
shl
xor
mov
push
lret
add
cmp
aad
add
pop
lock
cmpsb
insl
dec
pop
insb
sub
jno
sbb
push
fstpl
rcr
push
add
ret
adc
xchg
dec
rolb
into
cmp
in
mov
sbb
dec
lret
cmp
lcall
fisttps
jb
mov
push
aaa
inc
add
cs
flds
jle
xchg
shlb
lods
ja
jp
popf
cmp
in
in
loopne
jle
sbb
lret
stos
cmp
cltd
xor
stc
rcrl
lods
cmp
xchg
mov
bound
xchg
cltd
xchg
jns
in
out
test
push
cmc
push
and
loopne
push
jmp
js
bound
pop
cmpsl
out
aaa
dec
sbb
mov
add
push
in
xor
in
mov
outsl
xchg
imul
fbstp
sbbb
dec
jecxz
mov
jmp
fs
cmp
adc
xchg
push
dec
and
push
int3
xor
mov
adc
sbb
js
outsb
arpl
ret
pusha
xchg
push
sbb
sub
fsubrs
jo
jo
ja
in
and
mov
pop
xchg
jae
js
fisttps
out
test
mov
ret
stc
fsubs
outsb
mov
cmpl
outsb
daa
inc
cli
sahf
ljmp
and
cmp
loopne
pop
imul
aad
ljmp
jae
add
lock
arpl
mov
dec
repz
inc
rclb
jnp
das
mov
and
mov
stos
pop
xchg
punpcklbw
pop
add
dec
fstps
sti
push
xchg
adc
pusha
mov
add
mov
dec
aad
lods
pusha
aas
sub
ja
scas
or
sub
fcmove
cmpsl
jle
mov
loope
jg
jbe
pop
scas
cmp
xor
mov
repz
sub
idivl
mov
push
pop
cwtl
nop
and
loope
inc
sbb
ljmp
xor
sbb
jmp
aaa
in
mov
fistps
adc
fists
lcall
rorl
lahf
inc
add
aaa
in
outsl
mov
and
adc
fildll
ds
mov
xchg
ja
fwait
dec
sbb
daa
in
test
xchg
pop
cmpb
gs
scas
or
xchg
adc
aaa
movsl
lret
rol
adc
cs
sub
loop
lea
pop
jge
push
dec
aad
sbb
mov
loope
iret
outsb
ret
popa
jae
fstl
mov
movsl
cmp
ss
inc
outsb
movsl
xchg
call
mov
inc
sti
in
and
movsb
das
add
outsl
es
pop
cmp
sahf
dec
xor
in
add
mov
pop
xor
push
mov
jge
or
mov
cltd
arpl
popf
inc
cmpsl
bound
nopl
xlat
xor
jle
shll
cmp
xor
fwait
test
add
clc
xchg
ja
xor
jnp
cltd
ret
lea
in
xor
testl
adc
fldenv
mov
in
mov
je
int
das
jge
xor
in
dec
mov
call
mov
aaa
les
adc
ror
sub
test
les
data16
dec
icebp
repz
fs
fdivrl
mov
out
test
mov
mov
dec
ja
roll
push
jle
adc
fsubr
xchg
push
or
push
add
les
adc
mov
sbb
arpl
imul
dec
or
js
cmp
stc
mov
scas
adc
sbb
add
imul
sub
adc
adc
mov
xchg
inc
outsb
sbbl
nop
out
cmpsl
or
test
rolb
and
aaa
dec
pop
jb
sarb
sbb
jmp
jno
dec
push
icebp
push
into
sub
test
sbb
fidivrl
aaa
lea
decb
loope
pop
push
divb
fiaddl
mov
jp
enter
mov
ret
cltd
mov
mov
jnp
roll
popa
loop
rolb
cmp
int3
daa
cmpsb
movsl
faddp
xchg
mov
loope
sbb
mov
ret
mov
daa
mov
jmp
outsb
xor
leave
fstp
xor
dec
in
rep
inc
pop
mov
sub
adc
fcompl
scas
fildl
and
push
inc
enter
neg
fstp
outsb
jno
stos
sti
xor
jl
inc
popf
ret
loopne
push
dec
fidivl
cmp
fwait
inc
cmp
dec
fstpt
test
fadds
in
pop
and
das
out
pop
mov
shlb
bound
pop
hlt
pushf
outsb
and
xchg
roll
sbb
push
xlat
cmp
imul
mov
dec
mov
icebp
test
cmp
adc
pop
and
pop
sbb
cli
out
inc
push
dec
out
rcrl
cmp
cmp
xor
pop
pop
mov
repnz
pop
repz
cli
das
bound
int
mov
pop
ja
or
jle
cld
lock
inc
mov
lods
push
lret
and
loope
jge
sbb
negb
sti
lcall
popa
loopne
insl
cmp
mov
add
nop
mov
lea
sbb
adc
insl
cwtl
xchg
movsb
adc
rcl
nop
add
sub
push
scas
push
es
cmc
and
push
clc
sbb
cmc
xor
data16
xor
push
fbstp
insl
stc
fdivrl
ss
scas
pushw
popf
ret
popa
mov
out
popf
inc
xor
imul
enter
mov
shrl
out
shrl
movl
aaa
inc
outsb
scas
fcompl
jle
dec
test
loop
and
mov
lods
inc
rcrb
ds
adc
out
ret
adc
jo
mov
out
enter
xor
or
add
in
ret
loope
jnp
das
int
mov
inc
scas
cld
inc
enter
out
or
dec
enter
fistpll
sub
loope
movsl
aad
push
sbb
std
rcll
imul
mov
addr16
and
dec
das
notb
mov
pop
shl
adc
aaa
lret
fwait
out
cmp
cmp
dec
nop
orl
rcll
cld
adc
jno
cli
pop
xchg
loope
push
sbb
test
jle
movsl
cltd
sbb
xchg
cmp
call
mov
popf
arpl
cmp
xor
in
dec
jnp
inc
sub
out
jl
inc
push
push
sbb
xchg
or
stos
in
ret
fwait
std
inc
mov
mov
adc
addl
iret
push
xor
adc
pop
xchg
push
popa
daa
lock
jle
push
mov
aam
aad
outsl
das
pop
pop
sub
cli
jcxz
in
mov
aas
cmp
jbe
mov
js
mov
fnsave
add
jl
arpl
icebp
insb
adc
jo
aaa
addr16
imul
int3
fnstcw
jnp
jl
or
fcomps
push
lret
cmc
pop
jmp
arpl
push
je
push
and
ds
shlb
push
ret
cmp
mulb
or
push
aad
repz
cmp
xchg
or
js
out
testl
sub
sti
int3
sbb
arpl
in
lcall
mov
xchg
test
xor
push
push
cmp
cmp
popa
push
notb
cwtl
movsl
aaa
lea
xchg
idivb
sub
repz
ss
push
pop
add
push
std
pop
sub
outsl
int
test
aaa
mov
movsl
mov
cs
mov
repnz
data16
sbb
jbe
mov
xchg
jge
sbb
cmp
push
insb
add
ja
aaa
test
negb
push
addr16
xchg
in
pop
test
clc
mov
xchg
stc
ss
popa
scas
andb
sbb
add
stos
mov
fildll
xchg
adc
or
cmp
popa
out
add
es
arpl
adc
fscale
sbb
addr16
xchg
push
or
scas
pop
push
jb
in
push
subb
out
inc
out
pushl
cmp
jno
pop
mov
mov
movsl
ljmp
loope
lahf
dec
cmp
jae,pt
outsb
jecxz
xor
stos
jl
ss
hlt
inc
out
jg
mov
xchg
mov
lret
adc
pop
push
repnz
mov
in
add
movsb
or
sbb
hlt
push
mov
mov
inc
pop
enter
fimuls
sbb
gs
add
xchg
call
inc
jno
push
pop
xor
sbb
xchg
sbb
push
outsb
iret
sbb
cmp
pop
fisttpl
arpl
or
int3
decl
ljmp
ss
leave
jne
insb
arpl
scas
in
idivl
pop
loope
ret
mov
popa
mov
push
insb
adcl
sbb
popa
sub
mov
mov
jne
mov
ds
cmc
inc
jmp
data16
mov
jno
push
outsb
jmp
movsl
and
pop
push
jp
dec
pushl
testl
fwait
push
adc
sbb
xor
xor
aam
sbb
testl
call
pop
in
pushf
jg
inc
je
mov
add
daa
push
sbb
inc
push
lock
loop
nop
mov
mov
push
or
lea
lret
mov
dec
outsb
mov
pop
out
test
dec
imul
mov
in
dec
pop
ds
jnp
xchg
or
xchg
loope
shlb
stc
aad
pop
add
in
mov
inc
aam
lcall
popf
aaa
inc
cmpsl
pop
in
aam
out
std
stos
cmp
js
cmp
gs
add
jnp
add
sub
into
loope
rolb
ja
xor
push
imul
repz
xchg
inc
adc
call
loope,pt
sbb
jbe
jns
in
aas
sbb
stc
outsl
mov
xor
mov
jb
push
mov
pop
out
mov
jb
mov
addr16
fadd
ljmp
push
lret
pop
ss
cs
xor
pop
mov
sub
sub
mov
mov
aaa
adc
sub
add
inc
cmpsb
adc
insb
xor
jae
mov
hlt
sub
push
or
cltd
cli
sbb
sahf
inc
cmp
nop
adc
jge
dec
lock
cmp
fcomps
ud0
lods
cmp
std
cs
push
jl
jecxz
dec
das
xor
sub
xchg
lock
pop
or
sahf
test
cmp
shrl
jnp
sti
push
ja
cmp
call
xlat
mov
cmp
mov
mov
aas
sub
jo
rcl
adc
adcl
lds
mov
mov
faddl
aam
sbb
dec
inc
incl
in
scas
pop
stos
mov
pop
sbbb
and
push
ds
push
jnp
push
pop
movsl
aaa
fsubr
ja
cli
push
push
popf
pop
adc
outsb
pop
mov
xchg
cmc
je
test
jl
jp
fidivs
aaa
xchg
int3
or
popl
das
or
or
jbe
jmp
addb
dec
add
sbb
cmp
outsl
pop
imul
inc
out
test
ds
mov
jnp
je
fdivs
shll
pop
je
sbb
pop
stc
jmp
mov
pusha
sub
addb
int
push
imul
sbb
pop
imul
fwait
test
dec
into
rcr
out
mov
sarl
push
arpl
repnz
scas
arpl
dec
lret
std
push
into
mov
fmulp
push
inc
pop
loope
jb
int3
jg
mov
incl
lcall
nop
or
dec
hlt
aaa
daa
pop
lret
pop
push
xlat
jno
mov
into
lret
mov
dec
pusha
dec
pop
dec
sarb
negb
pop
ja
pushf
sub
rclb
insb
mov
lods
mov
jbe
sbb
roll
insl
fistpl
add
fwait
imul
fxch
shlb
xlat
lock
fs
mov
dec
call
movsl
cmp
xlat
dec
adc
arpl
mov
add
sbb
in
ret
enter
push
lea
dec
inc
inc
xor
push
lds
sahf
mov
mov
mov
xlat
and
mov
sub
pop
sbb
mov
sbb
ss
jo
mov
fsubs
fistpl
push
imul
fs
mul
fidivrs
dec
jbe
push
pop
xor
dec
bound
mov
mov
add
cmp
dec
shrl
sbb
push
xchg
in
clc
testl
jmp
and
fdiv
je
into
sbb
inc
ss
xchg
loope
push
dec
pop
jnp
add
outsl
pop
mov
fwait
mov
or
ffreep
adc
fidivrs
mov
stos
pusha
add
out
scas
xchg
popf
outsl
pop
xor
xor
nop
mov
subb
pop
iret
jmp
inc
xchg
arpl
sbb
xchg
addb
xor
xchg
push
xchg
aaa
cmpsb
loope
push
aaa
arpl
les
mov
jae
pop
inc
inc
jle
aaa
lock
loopne
jmp
mov
jp
xchg
and
dec
sbb
push
jae
push
cli
xorb
adcb
and
cmp
faddl
jle
jns
aas
sbb
mov
ljmp
lcall
sbb
sbb
inc
xchg
in
xchg
mov
mov
sarl
add
dec
jmp
mov
mov
mov
adc
add
mov
pop
push
mov
or
into
jno
and
fildl
imul
lret
inc
push
ds
push
xchg
mov
loopne
in
ljmp
lock
pop
mov
out
sub
lea
push
sbb
rcr
out
push
push
sbbb
mov
pop
xchg
aam
add
sbb
fnsave
jecxz
mov
ds
pop
pop
pop
outsl
ret
xchg
xchg
outsb
aaa
les
adc
fwait
inc
popf
mov
jle
jo
fdiv
sbb
lahf
imul
jecxz
pop
push
mov
push
loope
testl
push
pop
mov
mov
mov
push
sbb
dec
pop
mov
sbb
lahf
xor
cld
sbb
pop
add
cmpsl
or
ds
sbb
bound
sbb
lea
push
ss
pop
mov
mov
adc
mov
lods
leave
cwtl
push
xchg
cmpsl
pusha
add
mov
jl
cs
fwait
aas
inc
loop
adc
cwtl
test
and
and
jbe
add
inc
mov
dec
mov
in
mov
in
addr16
push
repz
outsb
pop
aaa
xor
dec
roll
xchg
ss
nop
pop
shlb
mov
icebp
and
gs
dec
sbb
pop
jns
push
sub
aas
jnp
dec
add
add
xchg
imul
jmp
iret
push
or
cmp
xchg
add
mov
mov
cmp
jb
add
sub
pop
mov
sbb
lahf
mov
out
fldcw
rol
sbb
popa
mov
jl
pop
lahf
jp
clc
mov
hlt
xorl
pop
mov
mov
push
mov
outsb
pop
sbb
test
jle
roll
inc
fidivrs
push
mov
sub
adc
cld
jo
outsb
test
clc
out
inc
shrb
mov
jnp
sub
aas
imul
out
pop
imul
dec
pop
aad
ds
pop
lahf
in
push
orb
pop
test
jp
sti
int3
xchg
adc
xor
daa
jle
mov
addr16
and
cmp
jecxz
out
push
jbe
pop
push
ss
rclb
test
scas
cld
js
jae
adc
icebp
dec
push
xor
insb
fs
cmp
fsubrl
insl
arpl
sahf
pop
jbe
das
pop
xchg
xlat
repnz
pushl
dec
mov
pop
shr
mov
cld
lods
sbb
sbb
sbb
pop
js
fstpl
lcall
movsb
push
test
adc
push
fs
fists
xor
fisubrs
movsl
sub
ss
das
inc
dec
aaa
in
sarb
sti
push
jnp
adc
and
push
fimuls
jb
sub
imul
pop
lcall
add
push
pop
insb
sbb
in
add
test
mov
jp
pop
cmp
icebp
lea
shl
les
adc
addb
mov
sti
mov
cmp
jle
mov
sub
xor
sbb
pop
jp
std
negl
fistl
mov
or
popf
movsb
pop
add
cltd
mov
mov
cs
adc
push
notb
pusha
in
mov
in
mov
push
in
jno
pop
imul
adcl
push
add
fistps
add
sbb
or
fadds
and
jno
je
fwait
inc
fcoms
sarl
adc
ja
inc
movsl
jmp
lahf
sub
cltd
in
popa
mov
cmp
notl
adc
sub
int3
outsb
pop
icebp
push
jb
jnp
dec
sbb
popa
dec
cld
xchg
jg
cmp
mov
out
or
push
test
popf
inc
in
sbb
movsl
in
or
scas
push
mov
sub
popf
shr
push
fwait
sbb
fldenv
lods
call
and
out
cmp
arpl
jle
fsubs
add
addr16
mov
mov
fimuls
cltd
test
mov
shl
in
mov
imulb
lds
and
ds
std
lea
cmpsl
mov
xor
stos
xchg
xchg
aam
mov
cmp
mov
pop
out
jne
sbb
lret
icebp
push
add
scas
inc
scas
das
pop
in
cmpsl
pop
loope
repz
lret
repnz
xlat
jbe
ds
aaa
pop
sbb
lahf
mov
adc
int
loop
aaa
sbb
sahf
pushf
xchg
dec
cmp
push
pop
push
insb
scas
loop
push
arpl
lock
lds
mov
push
sbb
push
cld
push
pop
adc
mov
lods
es
mov
cltd
repz
rclb
bound
jecxz
inc
pop
pop
lcall
jmp
and
icebp
mov
add
add
jecxz
xchg
and
aad
aaa
dec
jmp
sbb
out
ret
imul
notb
jmp
jo
mov
inc
jl
arpl
pusha
push
mov
ret
or
and
mov
mov
mov
scas
or
mov
sbb
push
pop
jecxz
sub
mov
cmp
or
sbb
enter
fdivrs
pop
mov
sbb
or
xchg
lods
dec
or
lcall
ror
sti
or
call
sub
jg
jae
adc
sbb
testl
inc
push
addr16
std
push
rol
mov
or
add
dec
adc
call
mov
xchg
negb
jl
xchg
and
adc
jle
or
pop
lods
icebp
pushf
push
add
ds
jno
pop
push
xchg
pop
cli
js
inc
cmp
inc
lock
rclb
dec
in
xchg
xchg
int
dec
xlat
je
aad
test
adc
cli
push
repz
ja
fadds
cmp
sbb
sub
test
lds
lods
xor
test
imul
pop
clc
test
xor
push
push
xor
or
repnz
int
notl
loope
in
out
xor
or
cmp
push
lock
insb
scas
stos
xor
ret
fstpl
mov
sbb
sub
and
mov
rcll
pop
sahf
repnz
xchg
arpl
das
jle
scas
rcrl
popa
adc
mov
jl
arpl
jmp
mov
push
push
cmpsl
repnz
push
sbb
mov
outsb
adc
jne
inc
scas
sub
or
pop
dec
enter
inc
xchg
push
xor
xchg
xchg
push
sbb
mov
fsubrs
cwtl
leave
jbe
loope
and
mov
pop
outsb
bound
add
push
and
sub
das
xor
scas
ss
cmpsb
adc
out
cmp
aam
arpl
pop
jle
push
push
std
es
addr16
dec
xlat
in
rolb
inc
xchg
fwait
sub
jg
jb
jne
ds
xchg
mov
pop
xchg
and
mov
enter
jnp
sub
push
in
cmp
in
imul
call
fcompl
aam
jle
movsb
xor
insb
inc
jg
push
out
xor
ja
add
cmpsb
orb
jne
flds
sbb
mov
out
xchg
pusha
imul
int3
mov
xor
pusha
imul
sti
sub
in
xorb
mov
lahf
xor
enter
jl
and
mov
call
fdivl
pop
es
popa
and
adc
inc
call
jns
loope
into
testl
xchg
mov
mov
ljmp
push
insb
mov
dec
icebp
jb
shr
push
lcall
sbb
mov
pop
jno
mov
inc
scas
push
out
mov
cli
imul
adc
ret
fwait
out
sbb
cmpsb
mov
add
cmp
inc
in
mov
or
pop
aaa
aam
mov
repz
sub
push
mov
aam
fneni(8087
adc
lret
adc
sub
add
jb
outsb
mov
pop
out
enter
les
or
sbbb
pusha
or
aaa
mov
lea
ljmp
outsb
push
adc
stc
fwait
ja
lods
pop
push
xor
jbe
mov
lods
xor
in
leave
notb
sbb
dec
bound
push
pop
rcll
in
scas
push
pop
sub
add
cmp
mov
das
lea
adc
pop
mov
fs
scas
push
or
jge
out
and
dec
and
adc
push
adc
cmp
xchg
sub
adc
mov
mov
dec
sbb
andl
cmp
stos
jl
cmpsl
mov
iret
movsl
dec
mov
gs
mov
orb
lret
cli
ja
mov
outsb
pusha
push
inc
lret
sbb
add
cwtl
outsb
icebp
mov
sbb
sub
out
push
jmp
in
loopne
imul
push
inc
adc
aaa
outsb
pop
das
sbb
mov
pop
sbb
pop
mov
cmp
bound
pop
aam
jne
test
mov
mov
jl
dec
jle
push
lock
mov
sbb
fstpt
pop
mov
imul
loope
testb
xor
sbb
inc
and
jo
nop
mov
adc
loope
xchg
and
sbb
add
fs
add
sti
fsubp
aaa
aam
add
ljmp
xchg
pop
aam
popf
cltd
push
add
dec
inc
sti
push
aam
das
cmp
es
pop
inc
dec
adc
testl
loop
sub
scas
cld
sarl
loopne
aaa
jl
pop
dec
jne
sub
cld
daa
iret
cltd
pop
out
inc
dec
or
cmp
push
jbe
std
xlat
leave
jno
mov
mov
shlb
push
and
sbb
mov
lret
pop
jbe
nop
adcl
sbb
mov
into
js
sbbl
mov
jbe
and
es
pop
and
xor
xor
fcompl
fdivl
sbb
pop
mov
mov
int
cmp
rclb
sbb
aaa
mov
xchg
lods
je
inc
cltd
dec
xchg
popf
sub
aaa
movsb
scas
mov
repnz
dec
sbb
aaa
jle
ja
pop
jb
out
push
mov
scas
xchg
shr
xchg
pop
test
inc
movsb
out
sub
fistpl
jnp
inc
xchg
or
push
adcb
sbb
lahf
sbb
mov
mov
dec
les
fnstcw
inc
push
xchg
inc
dec
movsl
cltd
neg
push
fadd
xor
mov
outsb
sbb
jle
arpl
pushf
pop
shl
iret
mov
cmp
xchg
dec
xor
and
mov
addr16
adc
push
cmp
adc
pop
sub
sub
bound
jae
clc
aaa
mov
call
and
xchg
in
scas
mov
in
sbb
fists
call
out
ss
push
pop
mov
adc
mov
popa
or
dec
bound
sbb
mov
jo
popf
shll
push
xor
jmp
mov
fmul
pop
mov
loop
adc
and
aas
pop
ss
jnp
push
adc
in
in
add
stos
pop
bts
and
xor
pop
inc
stc
mov
dec
or
in
inc
dec
aaa
adcb
adc
sbb
or
loope
in
sbb
pop
inc
outsb
inc
stc
mov
pop
jmp
pop
mov
pop
into
test
outsb
jecxz
fdivrl
sbb
inc
pop
or
mov
sub
lcall
fidivrs
jo
mov
ret
xchg
pop
mov
mov
dec
ret
push
jge
dec
sbb
sub
es
adc
sbb
or
movsl
es
adc
pop
lret
dec
jns
mov
lcall
das
jno
ss
popf
push
loopne
imul
bound
popf
dec
jle
sbb
xchg
sbb
insb
lock
ret
add
push
jno
ret
outsl
cli
dec
sahf
cli
adc
sahf
xchg
stos
outsb
push
lcall
jecxz
and
into
movsl
and
test
and
and
into
in
jns
lcall
mov
aaa
push
outsb
sbb
sbb
rcr
mov
shlb
aaa
cwtl
push
data16
int
ds
movsl
mov
pop
fsubrp
pop
imul
iret
in
lret
push
stos
mov
mov
es
mov
pusha
jge
subb
loope
lock
hlt
rcrb
test
cli
mov
sbb
pop
adc
mov
or
mov
fstps
xrelease
shlb
xor
lods
xorb
adc
jg
aaa
xchg
cmp
mov
jp
dec
cld
xchg
inc
jl
hlt
jne
adc
mov
mov
cmc
sti
bound
adc
mov
adc
stc
jge
sbb
aas
add
mov
cmp
lods
mov
aad
outsb
add
jp
dec
in
push
lods
mov
fistpl
js
inc
test
mov
and
sub
negl
push
sbbb
rcrb
jmp
inc
ret
loop
test
repz
push
jo
fcomp
mov
sub
add
adc
mov
subl
in
mov
jle
ja
ret
cli
jmp
mov
fsubr
inc
in
je
xorb
jo
rorb
ret
mov
dec
in
cmp
pop
pop
cmp
add
push
lea
add
cmp
mov
mov
sbb
in
insb
and
cmp
cmp
cmp
jne
jbe
fsubrs
add
pop
mov
xchg
mov
mov
jae
mov
out
shrl
mov
mov
call
pop
push
jb
aas
or
ja
pop
test
aaa
in
push
imul
mov
lcall
xorb
inc
clc
aas
push
xchg
test
xchg
fwait
xchg
pop
and
dec
out
push
pop
jnp
add
push
push
pop
push
mov
pop
push
mov
in
loop
hlt
mov
fcoml
das
ss
movsb
jne
dec
in
push
rclb
jno
sbb
mov
mov
cmc
sbb
fcompl
fcompl
mov
mov
mov
mov
xorb
mov
sub
xlat
loope
push
dec
pop
mov
sbb
jnp
pop
mov
xor
dec
int3
adc
das
outsl
bound
jge
mov
repz
dec
movsl
in
mov
and
dec
in
cmpsb
mov
rcrl
popa
ja
mov
scas
jmp
sub
in
mov
cld
int
insl
jp
or
fnstcw
cwtl
mov
and
jl
inc
fwait
push
inc
jne
or
js
sbb
sbb
jae
aaa
std
xchg
add
das
mov
xor
aaa
inc
add
int
or
mull
nop
test
or
mov
in
aaa
fldenv
cmp
mov
dec
jmp
and
mov
jae
fnstcw
movsb
adc
push
in
or
push
fnsave
stos
xchg
push
dec
fsubl
jo
push
mov
fmull
inc
pop
sbb
arpl
repnz
imul
fldt
aas
out
inc
inc
dec
push
pusha
into
popa
mov
ss
xor
push
std
bound
dec
icebp
dec
leave
movsl
inc
fdivrl
pushf
jbe
out
fildl
ret
pop
push
loop
dec
sbb
add
hlt
push
adc
cmp
ret
mov
iret
cmp
mov
and
insb
dec
push
fldl
mov
out
jne
rcl
or
leave
and
and
shll
push
int
inc
inc
cld
push
aam
scas
idivb
mov
inc
les
add
cmp
inc
xchg
push
fisttpll
hlt
clc
or
dec
mov
aaa
mov
out
test
shll
pushf
xchg
sbb
das
xchg
movsl
fiadds
sub
pop
bound
jae
add
aam
sbb
addr16
mov
scas
adc
scas
shlb
sbb
or
daa
add
mov
jne
pop
stos
jae
setp
test
insw
dec
xor
das
lret
lret
inc
xchg
stos
and
sub
adc
mov
inc
test
ss
pop
popf
lcall
push
pop
xchg
mov
dec
xor
mov
xchg
jns
aaa
popf
sub
inc
or
jge
pop
xchg
mov
pusha
sbb
cmp
hlt
sahf
mov
aaa
shl
dec
mov
push
icebp
loope
jb
adc
xor
jnp
mov
sbb
fnclex
aaa
scas
fistpll
repz
cmpsl
sahf
xchg
in
inc
inc
push
into
stc
adcb
push
repnz
stos
jge
shr
mov
pop
sbb
pop
jne
insl
scas
lods
mov
xchg
sar
fcompl
pop
filds
bound
or
pop
dec
cs
aam
aam
dec
mov
sub
cmp
cltd
add
jb
outsl
jg
andb
jbe
outsb
arpl
outsl
sahf
popa
xor
push
add
fwait
mov
cmpsb
popf
hlt
add
sbb
int
jns
sti
jl
out
xchg
sbb
int3
shll
pop
in
fstpl
inc
in
lods
jp
stos
cmp
pop
outsb
insb
mov
cmp
sub
out
jns
xor
pop
mov
jno
mov
mov
scas
push
jno
pop
xchg
sbb
pop
add
jp
jl
xchg
mov
rorb
lret
shlb
test
xchg
mov
push
adc
dec
lock
mov
add
xchg
loope
xlat
pop
test
dec
mov
les
sbb
mov
fidivs
cmp
bound
pop
out
repz
nop
xchg
push
sub
jae
xchg
lret
jnp
scas
shlb
loopne
loop,pt
test
dec
pop
sahf
pop
jae
sbb
sbb
jno
cwtl
dec
sub
mov
push
or
je
dec
enter
arpl
mov
mov
sbb
in
lock
mov
and
mov
in
dec
or
mov
xor
sbb
pop
fildll
mov
adc
mov
mov
sbb
pop
or
xor
jns
dec
mov
mov
js
fidivrl
repnz
adc
jae
cmp
ds
shr
test
and
clc
adc
lea
push
cltd
and
hlt
outsb
cmp
imul
pop
adc
std
push
sbb
bound
push
xchg
mov
cmp
push
outsb
movsl
jbe
cmpsl
sbb
pop
pusha
das
imul
jns
mov
add
into
mov
push
dec
sub
mov
addr16
sub
fucom
sub
out
mov
dec
mov
loope
jns
enter
cmp
shl
jmp
mov
pushf
lret
rclb
les
push
pushf
nop
add
aad
jle
or
pop
lret
or
imul
ror
sbb
leave
mov
mov
cmpsb
sub
pop
cmp
cmpsb
jnp
cltd
iret
popa
add
mov
les
sbb
push
mov
cmp
pop
add
lds
push
dec
xchg
pop
mov
xchg
pop
mov
cmp
into
push
xor
aaa
aam
mov
xchg
rcrl
arpl
out
loope
fadd
dec
cmc
aaa
add
pop
cmp
sbb
cmp
push
jo
dec
inc
and
xchg
popa
popf
pop
lea
ret
pop
imul
mov
sbb
pushf
or
lcall
enter
and
cld
xchg
push
imul
pop
sub
ret
push
outsb
jo
pop
sbb
push
sbb
mov
inc
out
je
mov
add
shlb
xlat
lahf
pop
and
pushf
imul
outsl
sub
lret
bound
movsl
testb
sarl
push
or
jmp
adc
ret
lcall
arpl
add
pop
or
arpl
xor
cli
push
xchg
andb
push
test
div
scas
movsl
push
fsubrl
inc
stc
js
fdivrl
sub
addr16
in
cmp
add
push
fwait
jle
arpl
out
cmp
dec
dec
push
add
outsb
jmp
or
adc
ja
negb
mov
inc
das
cld
pop
subl
push
jecxz
insl
dec
frstor
fcoms
sbb
lods
popa
sbb
and
pop
into
in
push
mov
or
dec
or
sub
xchg
test
ret
pop
icebp
sub
and
test
inc
daa
mov
fcoml
jnp
cs
sarl
out
ds
out
jge
add
mov
gs
ds
rcrl
pop
or
rolb
xor
push
push
js
fs
xchg
out
adc
fadd
jns
mov
ficompl
cmp
insl
add
loope
dec
inc
push
push
sbb
repz
lock
lret
fsubp
xor
sub
test
pusha
fsts
dec
scas
sbb
sbb
sub
loope
test
aam
leave
adc
push
cmp
push
jo
push
lods
std
repz
cs
pushf
and
pop
pop
push
lods
stos
add
jae
movsb
xchg
arpl
adc
dec
cltd
popa
fwait
leave
arpl
add
cmp
mov
cmp
push
fists
add
divb
sbb
pop
push
pop
and
push
sbbl
pop
into
and
xchg
es
fwait
enter
fdivs
jo
pop
cmp
jp
sarl
pop
and
mov
jne
jp
aaa
push
imul
cmc
dec
js
rcrl
inc
jne
pop
adc
push
pop
je
xchg
xchg
mov
push
jg
pop
lds
mov
and
push
jno
shl
into
push
js
lret
mov
or
or
adc
movsl
out
mov
lret
and
or
cld
cmp
aaa
mov
pop
dec
xor
add
lods
mov
aaa
or
mov
or
js
dec
scas
lods
test
mov
adc
mov
stos
push
jmp
js
xchg
jg
jbe
dec
sbb
pop
ljmp
dec
js
push
lahf
mov
imul
shrb
in
inc
push
sub
mov
cmp
push
hlt
mov
dec
adc
aaa
fdivl
jg
enter
or
lods
jle
mov
in
push
inc
imul
sar
xor
xor
lea
jbe
frndint
aas
into
in
cmpsb
jb
pop
lret
inc
pop
lock
push
pushf
std
sbb
mov
or
add
pop
inc
das
jnp
cmp
lret
lods
fwait
cs
mov
jne
dec
test
cmp
push
dec
lret
xor
hlt
jle
cmp
idivl
stc
repz
cmp
mov
cltd
in
jle
sub
popf
subb
aaa
jnp
adc
loope
xchg
or
cmp
mov
and
add
dec
imul
jb
sbb
mov
push
mov
call
aaa
sub
jo
repz
rcrb
inc
dec
mov
fnstcw
pop
lcall
pop
jae
cwtl
jne
xchg
lods
sub
inc
pop
lret
and
clc
adc
push
pop
push
push
stos
mov
arpl
fcmovu
inc
pop
pop
repz
in
and
xchg
gs
orb
fldl
scas
add
roll
mov
push
jg
loope
pushf
mov
dec
dec
subl
adc
sbbb
mov
dec
mov
mov
mov
mov
pop
lahf
adc
fwait
mov
pop
in
mov
and
dec
push
mov
pop
xor
dec
jmp
adc
fdivl
stos
xlat
xchg
lret
out
clc
xor
rcll
sub
pop
mov
dec
test
data16
fadds
js
pusha
xor
js
xchg
pop
lods
out
int3
push
push
scas
push
mov
dec
int
loop
ret
cwtl
in
pop
enter
or
jbe
lcall
cmp
sbb
gs
inc
out
jb
mov
imul
sarl
push
jecxz
ss
xor
fwait
add
sbb
and
cmp
mov
repz
push
sbb
mov
inc
rolb
cmp
orl
xchg
je
in
lds
xchg
push
push
pop
int3
ljmp
and
xor
sbb
pop
and
add
ss
jp
setb
pushf
sub
fldt
repnz
leave
cmc
stos
push
jno
addr16
test
jmp
pop
shl
rcrl
push
movsl
xor
stos
and
sbb
std
mov
lock
popl
cmpsb
fstpl
mov
pop
mov
adc
cld
test
xchg
jbe
frstpm(287
sbb
push
fsubr
push
aaa
lret
pop
push
imul
sarb
imul
movsl
cmp
stc
lahf
push
pop
lret
sahf
cli
aam
in
lods
std
stos
pop
dec
cmp
int3
leave
es
sub
jl
inc
and
or
adc
xor
add
test
icebp
loope
adc
cmp
test
xchg
mov
inc
cmp
add
aad
lahf
loop
ret
aam
push
scas
cmc
imul
inc
push
dec
mov
mov
and
in
dec
aaa
jmp
jbe
cmp
push
lods
add
dec
lock
jp
test
jle
in
in
paddusb
repnz
jmp
pop
dec
adcl
inc
adc
push
pop
sbb
cltd
inc
xor
sbb
cmpsb
add
out
mov
pop
dec
sub
add
jmp
jns
sub
jbe
jb
dec
and
fcoml
nop
test
push
sub
inc
mov
inc
loopne
mov
cld
lods
pusha
mov
test
pop
mov
fcompl
xor
adc
mov
cmc
ljmp
loopne
test
addb
and
jmp
sub
jno
xor
xchg
ss
mov
js
pop
jle
out
push
jno
or
notb
dec
insl
in
icebp
test
je
test
add
push
ret
adc
lods
pop
pop
iret
pop
mov
aaa
pop
insl
inc
and
fsubrl
xor
scas
xlat
aam
or
mov
xor
loope
leave
adc
push
outsb
out
lcall
fmull
bound
xorb
stos
sbb
sbb
sub
mov
in
cltd
clc
jnp
push
int
pop
jmp
xchg
stc
subl
mov
outsl
arpl
push
sbb
push
popf
scas
stc
aad
js
loope
xor
mov
cmc
xlat
inc
hlt
lock
push
iret
out
ds
xor
roll
das
inc
mov
shr
mov
push
push
mov
mov
or
sar
cmp
add
jp
lret
xchg
xchg
in
mov
inc
insb
sbb
dec
sahf
mov
xchg
fistl
popa
cmp
movsl
roll
sub
hlt
paddusb
ds
pop
fldt
push
outsl
inc
in
icebp
loop
adc
inc
inc
daa
xchg
sub
mov
or
push
loopne
push
loopne
clc
push
xchg
insl
popf
fwait
mov
jbe
into
insb
imull
enter
clc
stc
push
test
adc
sbb
xchg
fmuls
cmp
lret
imul
jnp
icebp
sbb
lock
push
pop
decl
xchg
dec
lahf
pop
xchg
lock
pop
cmp
leave
adc
mov
out
mov
outsl
and
sbb
cmp
int3
or
or
xlat
ret
and
inc
in
cmp
cmp
gs
rcll
cwtl
insb
nop
cmpsb
fwait
stos
aad
ficoms
mov
bound
cmpsb
or
add
xchg
jp
pop
jno
xchg
or
mov
lahf
jg
ret
fs
cmp
jnp
inc
add
scas
scas
in
jmp
add
test
pop
adc
and
sbb
aad
mov
and
loop
ret
mov
shlb
xchg
std
out
xlat
adc
dec
push
xor
jg
mov
xchg
daa
push
dec
scas
fists
fiadds
dec
imul
add
gs
or
scas
imul
cmp
ret
or
call
sahf
outsb
push
inc
xor
adc
push
jp
pop
fmuls
test
cmp
lods
aaa
push
mov
insb
sbb
testb
ja
xor
out
xor
fisubrs
popa
mov
fistps
int
mul
and
push
dec
fnstsw
fs
aam
sti
add
sub
push
sub
mov
pusha
inc
push
inc
jo
fucomp
dec
ret
pop
push
pop
lret
lret
pop
cmp
sarb
test
insl
xor
and
cmp
arpl
mov
xchg
repnz
mov
add
xor
es
cs
lock
ja
push
shl
lock
inc
jmp
cltd
pop
mov
and
xchg
mov
mov
out
icebp
call
jmp
data16
cld
push
ret
inc
add
add
pusha
out
nop
push
stc
pop
push
xchg
sub
jle
mov
lds
sub
shlb
or
lods
test
jmp
mov
cmpsb
push
mov
ljmp
pop
pop
xor
int
enter
je
loop
mov
add
ret
scas
push
pop
dec
adc
cmp
stos
dec
xor
test
call
pop
test
ret
mov
lret
rclb
movsb
push
ret
inc
and
lcall
aas
sub
cmp
pop
int
iret
pusha
jbe
xchg
mov
into
dec
fsub
fidivrs
push
fucomi
cvtpi2ps
ljmp
xor
js
jl
xor
loope
add
jmp
dec
pop
lds
jmp
and
into
arpl
xor
jmp
sti
pop
xor
les
sbb
pop
jno
orb
rorb
mov
movsl
or
js
orb
lea
int
xor
popf
popf
mov
or
sbb
sbb
push
mov
mov
inc
push
cli
daa
cmp
cli
push
mov
bound
inc
sub
aaa
scas
xor
pop
pop
lds
xchg
out
xchg
jle
lret
cltd
xlat
gs
les
stos
out
pop
idivl
daa
dec
outsb
stc
jp
cmp
aam
stos
push
add
setbe
mov
pop
push
cmp
cs
dec
or
imull
lcall
pop
scas
je
dec
cmp
or
lret
fsubl
rcrb
ss
call
push
mov
or
xchg
xchg
sub
push
sbb
push
jg
mov
test
push
aaa
ret
int
push
jb
stos
flds
and
fucomp
jbe
dec
inc
xchg
fldt
cld
aaa
mov
pop
andl
and
inc
mov
andb
cmp
inc
pop
inc
bound
in
dec
movsb
lea
popf
push
mov
arpl
push
xchg
adc
dec
out
jne
pusha
push
xlat
or
push
pusha
aaa
and
shlb
push
xchg
pop
adc
loope
inc
shlb
sar
push
pop
jmp
jg
lods
lcall
cmpsb
mov
aam
orl
int
dec
mov
outsb
sbb
push
pop
push
stos
mov
and
mov
jp
and
les
push
cmp
jecxz
aaa
mov
push
adc
mov
in
sbb
and
cmpsb
idivl
es
xchg
jp
xor
int3
pusha
je
dec
cmp
and
insb
popa
adc
mov
or
jge
cmp
icebp
repz
std
xor
push
in
inc
cmpsb
rclb
mov
sub
lcall
mov
mov
or
sbb
mov
xor
int3
push
ds
xchg
out
mov
inc
xor
aas
push
sub
scas
xchg
ja
inc
loope
xlat
jl
lock
mov
bswap
inc
out
push
leave
movsl
in
jp
imul
imul
aaa
pushf
pop
cmp
jp
in
popa
into
cwtl
push
lods
sahf
movsb
cmp
pop
lcall
imul
and
or
sub
out
xlat
aam
and
or
nop
dec
push
xor
sti
xchg
lods
addl
push
es
icebp
outsl
pop
ret
and
mov
xlat
xchg
lock
stos
sti
int
cwtl
inc
add
ret
xor
xchg
inc
inc
inc
rorb
fistps
push
cmp
fdivp
and
or
es
and
mov
loop
xor
xor
stos
sti
in
aam
insb
cmp
mov
sbb
pop
dec
inc
xchg
sub
adc
push
stos
repz
and
jle
lcall
lock
lock
fwait
sub
stos
das
pop
xchg
add
push
rorl
ret
push
arpl
xchg
or
mov
push
aas
fldt
mov
out
jae
sbb
stc
xchg
and
pop
movsl
push
rcrb
xorb
xorb
push
call
push
stc
rorb
mov
cmp
and
mov
mov
sti
pop
out
andl
mov
dec
add
push
adc
scas
jne
pop
and
inc
dec
push
ss
sti
mov
pop
fistps
mov
pusha
push
imul
scas
imul
mov
mov
roll
std
test
xor
sti
jl
scas
mov
ss
push
js
call
mov
shll
jbe
js
sub
data16
imul
pop
imul
mov
cmpsl
mov
jbe
xor
lahf
or
aam
mov
or
cmp
sbb
pop
pop
jl
cmpb
loope
pushf
je
test
sbb
cmp
cwtl
mov
mov
and
jg
negb
aad
push
cmc
jp
ljmp
xor
push
mov
xchg
mov
fcoms
aad
xor
arpl
test
fwait
idivl
test
iret
sbb
scas
inc
add
dec
je
mov
shlb
inc
cmp
mov
jb
lret
adc
in
dec
mov
push
movsb
bound
ds
cmp
xchg
mov
mov
jmp
pop
mov
sbb
inc
jbe
out
lods
inc
jg
shl
sbbb
or
aaa
lock
addr16
pop
dec
sbb
enter
fwait
mov
sahf
and
fwait
xor
into
dec
fisubs
faddl
fcmovne
cmp
and
cmp
loope
aaa
hlt
stos
fcompl
imul
or
xchg
or
dec
sbb
adc
clc
std
pop
jp
fadd
enter
push
dec
ljmp
out
scas
ss
cs
jmp
dec
sbb
cmp
roll
bound
pop
in
into
in
pop
pop
sub
inc
std
in
aam
imul
js
dec
dec
xchg
mov
aaa
movsl
push
lcall
ret
dec
sub
push
push
push
loop
icebp
mov
push
sahf
in
pop
movsb
pop
arpl
fwait
mov
adcl
jl
bound
cmc
scas
fadds
sbb
pusha
loope
sub
aam
dec
aas
mov
aaa
stc
bound
sahf
jecxz
out
sub
ljmp
pop
das
out
adc
aaa
mov
mov
cwtl
lea
mov
cmp
push
stos
lds
mov
cmp
add
sub
bnd
or
aaa
jle
shrb
cltd
loopne
negl
jae
push
aad
stos
cltd
mov
jle
nop
push
dec
inc
loop
subb
inc
outsb
sub
subb
and
outsb
sti
sub
fidivl
adc
push
mull
push
es
push
dec
popa
jecxz
and
aas
lods
sbb
mov
call
sub
sti
in
mov
lret
pop
lret
mov
mov
xor
and
pop
jle
mov
mov
pop
mov
mov
pop
jmp
aaa
cmp
out
mov
xor
jb
ss
aaa
rcrl
jno
add
push
frstpm(287
xor
pushf
jl
das
mov
icebp
mov
mov
mov
push
sbb
dec
cwtl
in
inc
mov
inc
jbe
rcrl
mov
cmp
ds
dec
loope
cld
pop
add
pop
popf
mov
jle
jle
pop
aas
popf
lret
adc
xchg
mov
test
add
cmp
mov
push
xchg
pop
inc
aad
xor
bound
jle
js
std
mov
jno
jge
cmp
dec
bound
aam
outsb
repz
mov
in
sub
push
pop
aaa
xchg
es
call
xchg
pop
mov
mov
jbe
jno
addb
jle
sbb
loope
pushf
fbstp
stos
or
dec
out
inc
xchg
mov
ss
sti
push
sbb
aaa
cmp
or
mov
in
push
jae
inc
pop
pop
rcrl
adcl
dec
scas
jbe
divb
push
sti
inc
insl
stos
cmp
push
jo
adc
popa
addr16
sub
sbb
xor
add
or
out
xor
sbb
mov
mov
pusha
xchg
or
aam
jmp
dec
inc
sbb
cli
pop
push
mov
in
int
lods
push
aaa
popf
adc
sub
add
sub
push
loop
in
subb
test
in
repnz
add
movsl
jl
xchg
pop
hlt
fnstcw
xchg
mov
push
inc
xchg
repz
or
inc
rclb
adc
enter
lret
es
jecxz
test
adc
inc
xor
std
aaa
rcr
xchg
ljmp
push
sub
inc
out
inc
pop
and
mov
cmp
pop
fsubrl
xchg
dec
popa
mov
dec
int3
clc
mov
adc
dec
ret
and
add
add
jge
test
mov
out
testb
loope
add
fcomps
test
cwtl
mov
sbb
test
cmp
and
push
dec
loop
imul
xchg
addr16
sbb
cld
dec
jmp
dec
shlb
aaa
inc
arpl
jae
scas
dec
int3
testl
popf
aaa
xor
pop
cld
mov
and
cmpsl
mov
and
lock
jp
sbb
ror
mov
aaa
out
outsb
sbb
adc
mov
or
pusha
imul
rcrb
pushf
sbb
movsl
and
andl
das
mov
and
mov
mov
mov
in
pop
insb
sti
and
mov
mov
and
mov
inc
xor
incl
popa
out
cltd
push
andb
ds
pop
popl
dec
fcomip
mov
out
jns
scas
loope
adc
repnz
ret
out
call
bound
and
jbe
dec
icebp
insb
pinsrw
mov
push
std
fstpt
adc
xchg
sbbb
jb
xor
out
mov
stos
sub
push
jp
lea
mov
iret
outsb
cltd
add
cs
xor
inc
mov
push
sub
and
gs
jno
lcall
mov
lret
imul
adc
jo
in
mov
loop
and
mov
pop
pop
mov
inc
mov
test
popa
cmp
clc
or
ret
stc
cld
rcl
or
cmp
imul
enter
pop
jl
jg
nop
imul
call
jmp
pop
mov
and
jno
push
aas
mov
sub
jmp
dec
add
mov
push
lret
aaa
outsl
lahf
mov
mov
and
roll
dec
pop
lods
push
and
ss
pusha
sub
fcomps
into
dec
mov
xchg
sub
xchg
cmpsb
imul
mov
sub
std
repz
popf
sub
rolb
fstl
push
insl
mov
ret
lahf
add
loop
sub
mov
out
sahf
mov
mov
add
insb
jp
stos
cs
sub
or
cli
cmp
ret
push
push
push
mov
dec
loop
shll
mov
jnp
into
in
loop
push
xchg
in
pusha
sahf
sbb
sbb
sbb
cmpsl
push
pop
lret
loopne
mov
sub
nop
sbb
adc
lret
adc
sbb
mov
int
adc
sub
xlat
mov
das
and
pushf
push
in
aaa
push
jbe
pop
pmovmskb
popa
ret
add
cs
jmp
lods
lahf
ret
lea
enter
add
out
aas
lds
xchg
mov
inc
sti
push
out
xchg
pushf
into
popa
in
mov
lea
add
sub
push
cmp
jle
xchg
adc
ds
movsb
dec
out
sub
leave
in
out
jle
jg
enter
sub
outsb
push
in
gs
inc
es
subb
inc
ret
mov
sbb
fnstenv
cmp
sub
push
inc
and
cwtl
add
icebp
movsb
mov
jnp
out
out
setp
out
inc
inc
pop
jae
push
sub
jbe
int3
cmp
inc
into
jne
xchg
fcoml
arpl
outsl
mov
sbb
mov
out
test
xor
inc
out
repz
push
sub
and
inc
xor
es
out
inc
scas
push
gs
bound
adc
test
jno
in
pushf
inc
sahf
mov
leave
pop
mov
mov
jmp
in
and
stc
out
ds
mov
cmpsb
sub
mov
pop
pop
jno
std
cwtl
cltd
std
sub
and
dec
insb
push
addr16
sbb
mov
dec
pop
xorb
mov
mov
out
add
push
loopne
ficoms
nop
call
sbb
xlat
ret
jnp
and
push
pop
aaa
ret
je
test
inc
mov
cmpsl
lcall
cli
mov
dec
or
cmp
cmp
pop
aam
adc
es
sbb
mov
mov
add
inc
pop
dec
arpl
les
sub
aaa
and
jb
arpl
sub
aam
xchg
repz
jle
mov
je
mov
outsb
inc
rcrl
and
pop
xlat
stos
pop
pop
insb
jo
lods
push
hlt
es
mov
pop
sub
jp
mov
es
cmp
sbb
out
aam
je
sub
mov
push
imul
ja
fbld
mov
inc
in
je
imul
icebp
lock
mov
pop
fnstsw
negl
pop
enter
pop
imul
xlat
sar
mov
push
sarb
jp
mov
cmp
dec
mov
ficoms
stc
icebp
inc
ds
insl
lcall
sbb
ljmp
xchg
push
mov
ret
jbe
shlb
mov
jns
push
or
sbb
shll
add
mov
stc
stos
pop
push
shlb
jno
dec
stos
not
ds
and
ljmp
push
xchg
fdivrl
and
and
adc
sbb
cmp
pop
std
jne
pop
adcb
rcr
or
xchg
fcomi
aas
add
js
dec
xchg
jb
jg
sti
mov
repz
pop
lret
mov
mov
jecxz
fcoml
xchg
scas
test
aam
cld
testl
fdivp
sahf
test
inc
in
and
icebp
pop
inc
sahf
lret
lea
cs
and
xchg
adc
mov
jo
in
sub
test
out
fstps
jecxz
pop
sbb
sub
test
push
fisubs
cmp
mov
xor
add
aas
adc
lret
fsubrl
and
jle
mov
xchg
cmpsl
lea
insl
mov
inc
fldcw
rsm
iret
popf
bound
sbb
cmpsl
inc
adc
fdiv
xchg
sub
xor
dec
das
int3
subb
and
fisttpll
subb
lahf
adc
test
rol
popa
pop
mov
adc
cmp
or
addr16
inc
ret
cmp
or
xor
sub
and
or
push
sub
mov
std
or
cmpsl
inc
jnp
subl
xlat
mov
outsl
sbb
dec
add
fmuls
imul
mov
std
idivb
pushf
jno
sar
xchg
test
iret
mov
xchg
xchg
jbe
frstor
mov
pop
rorl
push
xor
leave
repz
adc
idivl
jg
mov
bound
stc
sbb
sbb
mov
adc
sbb
cs
mov
mov
sbb
mov
xchg
es
and
lods
jb
or
out
test
pop
aam
mov
cmp
jae
mov
sbb
fucom
aam
aaa
fwait
subl
jns
cmp
mov
ds
ja
movsb
outsb
gs
sbb
cmp
mov
call
in
xchg
and
sbb
mov
sbb
mov
add
arpl
rcrl
or
lret
imul
dec
jle
xchg
rcll
sti
outsb
and
out
mov
mov
cli
cmp
jb
popa
aaa
xchg
push
cltd
stos
repnz
xor
clc
in
aaa
repz
jno
sbb
mull
insb
mov
jnp
push
stos
frstor
aaa
mov
sub
mov
arpl
std
jno
in
outsl
outsb
pop
mov
ja
xchg
imul
inc
sti
push
push
int3
lret
ret
clc
out
inc
sbb
xor
fldcw
add
lock
xor
push
push
roll
ds
push
adc
std
pusha
add
push
sub
jbe
sub
add
stos
xor
inc
arpl
xchg
cmp
int3
push
sbb
sub
add
cs
mov
lcall
jae
dec
pop
orb
mov
xor
std
xchg
inc
push
adcb
leave
fldl
fidivrs
shll
mov
mov
lcall
pop
lcall
das
and
jmp
pop
sbb
cmpsl
sub
sub
cltd
outsb
mov
mov
xor
sbb
mov
sub
mov
pop
mov
popf
popa
pop
aaa
cmp
fdivl
jge
ja
push
cmp
or
test
js
sbb
mov
jmp
push
add
aas
arpl
sbb
or
inc
outsl
xor
in
out
pop
push
insl
inc
jl
push
or
jle
sahf
cmp
ja
fsub
bound
fwait
loop
or
mov
mov
movsb
jle
mov
pop
aaa
mov
and
jo
ja
pop
pop
aam
add
lock
je
and
insb
jbe
icebp
adc
test
xor
dec
push
pop
cli
mov
fldenv
scas
stc
push
adc
pop
test
cmpsb
pop
jae
daa
cltd
jae
movsb
cld
aaa
lds
les
pop
rolb
inc
jno
addr16
jne
roll
adc
icebp
mov
fcompl
sahf
mov
jp
test
mov
rcrb
jmp
mov
fildll
out
dec
lret
sbb
adc
test
jbe
lret
cmp
jl
fsubrl
xor
mov
mov
stos
cmpb
push
inc
and
or
mov
aam
arpl
lock
outsb
cwtl
dec
cmpsl
arpl
xchg
xchg
test
imul
cmp
mov
dec
push
popa
xlat
cmp
mov
ret
push
jle
xchg
push
lret
sbb
pop
pusha
in
outsb
fs
ss
in
movb
jmp
enter
pop
cmpsb
mov
icebp
sbb
addr16
xlat
inc
insl
std
cmp
mov
sbbb
movsb
push
pop
repnz
minps
int
fs
loope
cmc
ss
imul
in
aaa
les
pop
push
ja
jnp
popa
or
jg
outsb
lret
mov
xchg
pop
push
movsl
ds
dec
out
jb
pop
imul
fwait
ljmp
bound
mov
imul
adc
mov
jb
ficoms
sbb
push
inc
push
xlat
or
imull
inc
in
jl
inc
test
sahf
mov
mov
mov
test
pop
xor
repz
scas
cmp
ror
dec
in
xchg
jnp
jecxz
pop
in
pop
fdivs
stc
test
jno
popa
fcomps
mov
outsb
vpsubsw
add
push
test
ss
add
cmp
cmp
jl
js
mov
pushf
dec
gs
xchg
loope
fsubl
mov
push
insl
aaa
push
sbb
push
dec
jno
push
pop
int3
or
mov
or
das
test
xchg
icebp
leave
cmpsb
fistpl
sbb
not
jl
jmp
paddusw
xor
loope
ffree
in
mov
outsb
std
xchg
ret
add
push
fnstenv
rcll
mov
and
inc
push
stc
icebp
daa
icebp
and
xchg
inc
test
lea
adc
dec
sbb
xor
test
sbb
in
push
jo
pop
stos
icebp
mov
xchg
je
cli
mov
aaa
cmp
fists
sub
cld
repz
aas
mov
sub
imul
sti
cmpsb
cvtps2pd
sbb
dec
inc
dec
sbb
sarl
pop
ret
shrl
add
lcall
jl
test
sub
cmp
add
pop
push
inc
or
sbb
test
sub
loopne
incl
jp
lahf
andl
dec
outsb
int3
cmp
fistl
and
cltd
incl
inc
fucom
inc
stos
loopne
push
js
and
loope
dec
and
das
pop
in
pop
jnp
pusha
repnz
cmp
or
add
cmp
xchg
test
cmp
loope
jge
ret
stos
adcl
call
repnz
loopne
pop
lret
push
mov
sbb
push
aaa
and
jg
push
jecxz
and
clc
pop
sbb
movsl
sbb
cmc
into
inc
stos
lahf
fstpt
mov
mov
xor
idivb
scas
out
inc
out
test
xchg
jns
dec
add
outsl
or
pop
sub
fcompl
neg
jb
scas
es
add
cmp
cmpsb
xor
jb
cmp
lods
imul
lahf
mulb
mov
in
shrb
pop
push
lret
mov
inc
sbb
cmp
bnd
jl
stos
add
ss
pop
jl
lea
push
pop
fsubrp
fmul
lcall
pop
ret
xor
movb
or
push
add
lcall
mov
sbb
add
xchg
rolb
jmp
push
xchg
lds
adc
sbb
addb
loope
mov
mov
adc
mov
mov
push
jb
loope
cmpsb
xor
mov
loope
ret
mov
adc
mov
mov
test
rcll
mov
add
xchg
mov
insl
sub
mov
sub
idivb
mov
sub
fidivrs
adc
inc
push
aaa
jbe
mov
inc
int3
xor
sti
subl
xchg
or
mov
and
je
jbe
and
sar
adc
or
cmp
jns
sub
xchg
or
outsb
cmp
out
in
adc
aaa
popa
mov
ss
xchg
fildll
push
ss
mov
xor
jg
dec
and
mov
pop
ja
xor
jle
das
fistl
add
xor
divb
jbe
jge
ja
int
aas
js
pop
popa
stos
mov
popa
dec
xlat
push
in
mov
pop
xchg
inc
test
in
push
enter
fmulp
jle
mov
sub
or
lret
lret
in
arpl
mov
sbb
dec
xor
mov
sarb
shrl
aam
and
shll
adc
imul
and
inc
pushf
xor
inc
rcll
inc
and
or
fldt
divb
sahf
or
add
mov
cmc
and
cmp
push
xchg
imul
mov
sub
sbb
nop
mov
rorl
sbb
sbb
pop
mov
adc
adc
push
fs
int
adc
add
pushl
repz
pop
dec
jg
dec
sbb
pop
fldcw
pop
pop
pop
cmp
jle
test
lahf
nop
loopne
jo
aaa
in
pop
es
sub
daa
int
enter
popf
xlat
xchg
mul
ss
inc
adc
out
mov
sub
loopne
repz
icebp
pop
pop
gs
pop
or
push
mov
pop
shlb
and
insl
es
mov
sbb
stc
int
mov
add
push
and
jno
scas
adc
lahf
adc
add
mov
rolb
mov
sbbl
lret
movsl
sub
xchg
mul
addr16
cmp
jns
enter
mov
sbb
lds
dec
sub
xchg
add
push
mov
inc
mov
movsl
pop
es
adc
push
adc
inc
and
lods
sbb
push
repz
sub
pusha
outsl
out
lcall
adc
sbb
movsl
sar
push
pop
stc
push
cmp
jb
xor
out
insl
dec
xchg
repnz
sub
cld
ret
jb
es
add
mov
push
pop
inc
pop
lods
sub
inc
imul
std
jbe
fwait
sbb
xchg
sbb
adc
inc
push
inc
divb
jbe
aaa
cmpb
sar
in
es
fdivr
xlat
outsl
push
push
rorb
filds
lret
scas
jnp
bound
loope
addb
loop
and
pop
jp
sbb
rcrl
inc
fsubl
call
sahf
pusha
add
imul
or
cmp
mov
mov
adc
enter
sub
sbb
jmp
add
idivl
xor
outsb
adc
cmpsb
in
outsb
bound
imul
movsl
push
pop
sbb
xor
dec
or
in
fs
pop
inc
rorb
mov
imul
cmp
cltd
pop
scas
push
rorb
dec
push
rcrb
popf
fld1
pop
or
pop
mov
loop
pop
fnstsw
inc
loop
popa
les
pop
ds
jbe
inc
cwtl
and
xorb
ja
loope
dec
or
push
shlb
test
ss
clc
xor
lret
xchg
loope
and
outsb
pusha
sbb
fidivrl
mov
sbb
add
std
enter
jecxz
aaa
inc
xchg
addr16
pop
push
push
inc
push
adc
loop
pop
lods
sbb
js
aad
xchg
mov
fcomps
lea
fst
testb
mov
pop
mov
ds
mov
shrl
popa
aad
and
or
ja
insl
int3
sbb
jle
popf
xchg
xchg
mov
or
les
xor
test
cmp
jbe
rorb
sbb
aaa
xchg
mov
xchg
ds
leave
fwait
repz
lret
fsubl
dec
inc
pop
sti
call
pop
in
cmpl
pop
rcrb
push
insb
fistpl
pop
lret
sbb
add
pop
stos
mov
push
sbb
gs
dec
icebp
in
mov
imul
dec
dec
cmpsb
jg
jno
movsb
leave
adc
sti
cli
es
sbb
repnz
sbb
add
pop
insb
sahf
lea
ret
movsl
aaa
xchg
jg
dec
in
ss
dec
adc
push
xchg
lock
pop
pop
mov
push
pop
cmc
data16
ret
adc
sahf
sbb
out
xor
repz
push
mov
lcall
xorl
shrl
inc
movsl
mov
imul
dec
jbe
mov
mov
fistl
addl
xchg
rcrb
dec
sub
ficomps
iret
adc
sub
mov
pop
int3
sub
inc
lcall
sti
push
aas
push
lret
push
xlat
les
shll
push
xchg
loope
jle
inc
push
loopne
shrl
adc
push
cmp
add
test
shll
sub
outsb
sahf
push
popa
inc
imul
loop
push
in
shlb
push
mov
cmp
repnz
cli
mov
jno
mov
aaa
sub
jmp
fsubl
mov
dec
loope
pop
test
lods
rep
subb
lahf
pop
aaa
movsl
mov
sbb
test
dec
jo
push
push
lahf
adc
push
push
in
lods
or
jp
pop
adc
jbe
divb
mov
lods
jbe
push
pop
mov
cmp
dec
and
fdivs
pop
push
in
repnz
xchg
popa
icebp
movsl
sub
sbb
insb
xor
sub
pop
mov
inc
sub
cmp
stc
ljmp
lret
pop
jp
andl
mov
daa
in
mov
xchg
xchg
sbb
jno
int
mov
fldenv
mov
push
add
in
sti
sahf
sub
pop
adc
push
es
sbb
xchg
pop
cmp
dec
xor
pop
jge
xchg
dec
pop
inc
mov
mov
call
stos
xchg
sbb
jp
aaa
cld
xchg
inc
pop
loopne
jecxz
sbbb
push
popf
lock
push
sbb
adc
movsb
ret
inc
adcb
cli
push
mov
cmp
cltd
aad
scas
in
out
icebp
xchg
ja
les
addb
push
pop
lods
fldenv
jg
jecxz
mov
pop
aas
lret
inc
xchg
test
mov
popf
ret
cltd
mov
xchg
xchg
mov
pushf
mov
cmp
pop
ret
ds
mov
lret
fmul
xor
hlt
pop
aam
or
lcall
insb
push
lret
les
rorl
adc
pop
out
andb
pop
mov
into
ss
pop
dec
dec
out
clc
adcl
js
pop
jl
fdivr
movsb
insb
cld
daa
mov
popf
sbb
dec
arpl
jae
popl
loop
test
adc
outsl
sbb
push
and
jo
addr16
jge
push
std
bound
popf
test
mov
cmpsl
cli
push
push
and
xchg
pop
lods
pop
je
add
jp
dec
cmp
adc
out
inc
xor
push
in
in
jno
cmp
dec
ljmp
std
push
sbb
popf
ss
push
int
push
popa
cmc
aas
je
dec
js
push
mov
pop
sbb
call
jbe
popf
jecxz
fs
dec
inc
cmp
or
fstpl
les
mov
rcll
xor
enter
cmp
pop
jo
xchg
aaa
cmp
jmp
orb
jle
ljmp
mov
subl
ret
fucomip
in
fimull
ljmp
test
stos
aaa
jno
lret
es
test
mov
jns
loopew
jp
sbb
rorb
mov
inc
cmp
mov
dec
ret
cmpsl
and
call
inc
cmove
enter
repz
push
mov
cs
pop
lds
fdivp
mov
in
mov
bound
push
lret
jne
and
lods
fs
lret
call
fldl
pushf
dec
and
jmp
das
sbb
sub
pop
sub
sub
ss
lods
inc
mov
pop
mov
repnz
cmp
aam
sub
push
inc
jp
sub
sbbb
and
pop
cmp
push
pop
mov
xor
inc
cs
pop
push
shrb
sbb
stos
icebp
cmp
nop
or
mov
xor
push
mov
imul
fs
mov
dec
sub
adc
push
inc
mov
mov
imul
sub
sahf
cltd
dec
pop
sbb
dec
mov
in
cs
scas
call
xchg
mov
inc
cmpsb
sub
mov
cmp
or
andl
jl
cld
es
ss
out
xchg
inc
insl
stc
bound
sbb
xchg
push
mov
inc
xorb
notl
add
and
shlb
lret
push
jns
push
dec
jl
sub
jbe
icebp
mov
cld
mov
cmpb
pop
les
int
dec
clc
lahf
in
pop
cmpsl
sub
pop
mov
movsl
lcall
rep
inc
and
xor
rcrl
cmp
sbb
dec
pop
cs
cmp
jle
loope
xchg
stos
cmp
aaa
imul
cmp
or
sbb
shr
and
out
rclb
loope
xor
pop
call
mov
aaa
push
loopne
add
gs
enter
aaa
cmp
js
outsl
adc
int
mov
pop
sub
ds
mov
call
call
jbe
in
aaa
ljmp
int3
out
jne
dec
jns
mov
das
shrl
aas
gs
push
bound
ficomps
pop
mov
mov
sub
lods
sub
aam
pop
sbb
into
and
bound
or
aaa
pushf
jmp
sub
inc
dec
clc
adc
jo
dec
lahf
sub
inc
int
popf
jne
arpl
test
lea
xchg
mov
sbbl
int
inc
stos
shlb
lea
xor
push
push
cmp
xor
push
aas
jnp
call
pop
push
andl
pop
inc
rcr
jne
xchg
stos
pop
into
scas
push
pop
in
dec
xchg
mov
xchg
jne
push
sti
push
pop
mov
fstpt
idivb
pop
push
fadds
pop
pop
repz
in
cmp
inc
call
sarb
jle
mov
xor
pop
or
mov
out
scas
addb
jp
push
int
xor
cmpsb
pop
inc
pop
mov
lods
xor
jecxz
mov
aaa
aam
and
and
cmp
and
push
inc
dec
popa
sbb
lods
arpl
inc
jno
sbb
movsb
sbb
data16
push
lcall
loope
test
push
xchg
sti
push
int
es
and
dec
xchg
cld
sub
mov
add
aam
pusha
jg
pop
jo
push
lds
sbb
xchg
negl
or
xchg
test
adc
loope
in
data16
mov
fwait
jnp
data16
push
rolb
or
push
and
fcompl
adc
sbb
mov
mov
test
add
add
pop
fisubrl
lds
aas
pop
shll
cmp
sbb
add
loope
in
ret
xor
pop
mov
f2xm1
pop
daa
adc
popf
push
cld
sahf
sbb
mov
in
dec
pop
fimuls
or
and
aaa
fists
pop
xchg
aam
ss
cmp
and
arpl
and
adc
clc
and
cld
shll
rcl
lock
mov
rcrb
aas
dec
add
push
aaa
inc
ds
loope
mov
lea
lds
shl
sbb
rcl
mov
stos
pop
sub
lret
xchg
adc
add
pop
aas
jecxz
inc
in
fnsave
fnstenv
hlt
mov
sub
mov
unpcklps
rclb
inc
test
sub
sub
std
pop
les
insb
adc
lods
mov
and
jle
iret
xor
enter
aaa
inc
sbb
mov
movsl
sbb
loope
jns
outsb
ja
xlat
mov
lret
sbb
mov
fxch
cltd
sbb
pop
sub
scas
lret
dec
jp
sbb
in
dec
sahf
pop
outsl
fdivrl
sub
sub
in
jecxz
add
into
ficomps
aas
es
lret
leave
and
test
mov
data16
push
xorl
push
and
inc
pusha
out
ret
mov
fstps
lock
xchg
xorb
dec
scas
pusha
inc
ret
ljmp
inc
jge
xchg
aaa
sub
les
std
adc
jno
push
xor
pop
loop
ss
and
pop
mov
xchg
pop
js
pop
in
daa
xchg
pop
sub
aam
repz
shlb
clc
push
lcall
lods
mov
jg
pusha
rcl
je
pop
cmp
loope
out
aas
test
rolb
cmpl
faddl
iret
cmp
mov
inc
mov
clc
inc
add
jnp
push
sub
jne
mov
sahf
jb
outsb
add
pop
mov
xor
pop
add
arpl
std
push
fcmovnu
sub
in
mov
push
je
inc
loope
cmp
aad
inc
jg
pop
rcrb
and
xor
adc
adc
xchg
scas
ja
mov
pop
negb
cmp
je
cmp
mov
stos
ljmp
fsubl
fstl
arpl
pop
rcrb
imul
pop
lcall
lds
pop
imul
shl
sbb
sar
sub
addr16
loope
sub
outsb
ljmp
into
test
jecxz
add
mov
cmp
lret
and
pop
pop
sbb
xor
sbb
push
int
cli
std
add
leave
iret
push
xchg
inc
aaa
test
fisubs
aam
test
cwtl
popa
std
or
push
pop
aad
iret
push
sbb
xchg
cwtl
cmpb
xchg
or
es
fisttpll
mov
sar
jl
add
bound
xchg
sbb
add
xchg
out
jmp
into
js
sahf
jnp
pop
cld
outsl
and
fistps
movsb
cwtl
cmp
push
add
into
cmpsl
test
dec
sti
sbb
push
mov
insb
fimuls
inc
push
outsb
dec
sti
out
xor
mov
outsl
aaa
ss
mov
dec
in
mov
cmp
push
scas
lahf
dec
iret
clc
bound
push
jge
mov
test
jbe
ss
jo
testb
negl
fstps
inc
stos
sbb
sahf
adcb
sti
sbbb
out
sub
mov
gs
mov
aaa
xchg
mov
mov
xchg
mov
out
add
movsl
movsl
rorl
xchg
roll
ds
xor
loopne
pop
xor
push
pusha
ja
mov
xlat
cmp
add
xchg
movsl
inc
leave
int
push
mov
mov
push
sub
sub
cmpsl
out
push
pop
inc
daa
stc
mov
push
scas
in
mov
imul
sub
pusha
xor
jbe
lods
subl
mov
test
xchg
or
and
push
inc
cmp
mov
mov
inc
pop
sbb
nop
in
xchg
and
add
loopne
cwtl
add
sbb
or
cs
or
xchg
call
sbb
xor
into
pop
test
xchg
sbb
inc
jmp
push
aad
push
jb
mov
dec
rorb
scas
addr16
lret
and
pop
js
in
sbb
pop
fwait
xchg
ret
fstpt
iret
repz
lcall
dec
xor
lret
xor
add
subl
dec
lahf
cmpsl
scas
mov
cmp
inc
arpl
add
xchg
mov
push
dec
mov
sbb
stos
add
mov
jns
jb
aam
je
fistpl
lds
daa
and
pop
dec
insl
jbe
mov
sbb
imul
cli
inc
mov
jl
scas
adc
cltd
outsb
adc
mov
fisttps
adc
pop
in
mov
cmpsb
xor
loope
arpl
sbb
mov
and
cmp
daa
inc
mov
pop
jmp
insb
repnz
es
inc
adc
xchg
and
push
jo
or
inc
hlt
es
div
lret
js
mov
ss
mov
lock
movsl
add
rcll
sbb
sub
cmp
test
inc
call
ljmp
insb
push
jbe
jg
test
cli
jo
aaa
mov
lea
repnz
loop
roll
sub
and
push
jge
out
xor
lods
ds
andnps
hlt
mov
adc
aaa
mov
cmp
push
arpl
mov
shrl
ror
jl
push
call
notb
aaa
jb
xchg
movsl
and
cs
bound
adc
mov
aam
push
pushf
aaa
fwait
rclb
icebp
lock
aam
xor
scas
fs
add
dec
iret
lea
mov
lds
cmp
jo
icebp
int3
mov
inc
imul
fstcw
push
sbb
mov
hlt
or
mov
mov
cmp
imul
data16
xorl
in
pop
jecxz
clc
jnp
add
into
addr16
or
pop
std
aaa
popa
mov
leave
jl
out
lds
push
xchg
mov
add
jle
dec
cltd
mov
sub
push
mov
ret
popf
pop
sbb
pop
jg
inc
xchg
jns
ret
push
rorb
es
fdivrl
in
aaa
push
in
lcall
mov
cmpsb
outsl
add
pop
loopne
pop
xchg
sub
cmp
testl
aam
xchg
or
stc
lret
push
add
xchg
ucomiss
dec
and
sbb
mov
outsl
adc
insb
sub
push
push
mov
rcrb
push
sbb
arpl
aam
and
push
cmp
aaa
mov
int
ret
add
sarl
adc
sub
xorl
aam
fimull
xor
js
mov
cmp
or
adc
mov
jbe
mov
hlt
cmp
cltd
dec
ret
aaa
push
fsubrp
xchg
cmp
clc
scas
cmp
push
mov
arpl
sar
stos
mov
sti
ds
sbb
add
popa
enter
cwtl
cmp
inc
add
aas
mov
inc
ss
test
xor
in
scas
or
repz
divl
fsubrl
cmp
sbb
pusha
adc
mov
test
in
scas
mov
movsl
stos
dec
pusha
outsb
dec
push
sub
inc
push
and
jno
jg
aam
shll
push
jae
mov
inc
mov
adc
rolb
jle
inc
jmp
inc
shlb
adc
or
pushf
jle
pop
sub
and
inc
mov
stos
cmp
rcl
jle
loope
insl
pop
push
xchg
outsl
adcb
dec
inc
clc
bound
push
scas
pop
xchg
in
sub
enter
jnp
cmp
add
dec
xor
xor
xor
fisttpl
subl
push
inc
pop
aam
fdivr
push
fldcw
int
addr16
cmpl
stos
lea
in
and
aas
fldt
out
outsl
jbe
movnti
xchg
std
mov
mov
pop
or
arpl
xchg
popf
and
cmp
xchg
jnp
and
sub
xor
dec
lret
out
sbb
cmp
mov
lcall
cs
cld
sbb
ret
jnp
cmp
scas
les
fucomip
cmp
jp
gs
inc
sbb
cld
mov
leave
push
pushf
mov
or
push
and
mov
mov
addps
jle
loopne
aaa
and
cmp
lea
lods
je
loope
enter
psubq
movsl
outsb
icebp
scas
push
scas
pop
scas
lret
inc
jb
xchg
scas
loope
pop
mov
cltd
mov
lcall
or
and
dec
pop
pop
popf
enter
or
outsb
mov
loope
jbe
sahf
ljmp
mov
data16
adc
mov
inc
push
inc
in
push
mov
add
cli
add
int
ret
ds
jno
cwtl
mov
push
sbbb
ss
pop
cmp
jbe
mov
xor
loopne
adc
movsb
cmp
mov
pushf
les
hlt
add
pop
pusha
pushf
xor
mov
push
xor
jne
jl
xchg
cmpps
aaa
fstpl
fmuls
push
mov
rolb
inc
pop
dec
fsubrl
sbb
lods
jecxz
sbb
push
imul
fisubs
adc
cmc
add
in
rcll
or
mov
jo
and
test
mov
das
icebp
and
insl
outsb
ficompl
or
lcall
jl
cmp
jle
cs
pop
pop
cld
sbb
fwait
lret
loope
dec
add
outsb
mov
test
inc
adc
into
and
dec
xor
or
push
adc
fmull
lods
aam
push
add
xor
pop
inc
or
lock
sbb
mov
xchg
pop
dec
fstpt
pop
adc
add
push
or
inc
jnp
mov
outsl
push
fadd
mov
mov
iret
scas
and
xchg
push
cmp
jne
fdivrl
sub
fimuls
ret
in
in
add
mov
sbb
jp
xor
stos
jne
mov
nop
popf
jmp
xor
aaa
pop
sbb
mov
int3
xchg
xor
sbb
mov
ss
aaa
test
sbb
movsb
enter
push
sub
xor
sub
pop
ja
es
adc
add
loope
mov
push
push
and
inc
out
insb
cltd
xchg
or
cltd
imulb
add
cld
iret
aam
fisttpll
mov
or
fldl
xchg
es
cld
sahf
jbe
pop
stos
mov
es
adcb
mov
push
mov
push
xlat
lahf
mov
jbe
sbb
lods
in
dec
sub
addr16
pop
xchg
sbb
fnsave
pusha
pushf
in
sub
mov
pop
les
addr16
mov
xchg
loopne
mov
mov
call
pop
adc
cmp
xchg
mov
fs
add
insl
pop
leave
stos
fucomi
mov
cmc
inc
fidivs
in
xchg
dec
jle
test
push
gs
jbe
inc
cmp
aas
in
mov
adc
ljmp
in
ret
or
popf
loope
imulb
shll
or
push
repnz
dec
hlt
loop
shlb
aaa
pop
popf
xor
xchg
cltd
add
mov
adc
push
dec
nop
shll
jo
pop
mov
idivb
fiadds
cwtl
cmp
lret
fistpl
dec
fs
cli
dec
scas
push
testb
clc
xor
test
movsl
dec
cmp
xchg
fldenv
dec
jbe
mov
xchg
pop
pop
mov
jge
push
std
arpl
out
cmp
cli
leave
jb
inc
sub
loope
cmpsl
pop
ret
inc
imul
leave
sbb
push
icebp
pop
ja
pop
adc
ss
idivb
dec
out
shll
jae
rcrb
aaa
mov
leave
pop
fucomp
sbb
scas
xchg
popa
test
icebp
jecxz
inc
loop
sbb
and
imul
mov
insl
cmp
js
mov
rolb
repz
inc
mov
dec
cmp
push
mov
sub
fisubrs
fstpt
dec
loopne
push
nop
cmp
xchg
cmp
cli
ret
das
inc
xchg
cmpsb
xchg
add
ret
js
inc
or
aas
movsb
ja
mov
in
xchg
jb
and
pop
pop
ja
lock
adc
lea
fdivrp
lods
mov
jo
xchg
lahf
lret
stos
jl
les
inc
stos
adc
pop
fbld
mov
mov
cli
ds
pop
pop
arpl
add
xchg
mov
jmp
in
mov
fsts
jo
outsb
mov
mov
sbb
and
in
test
push
adc
lret
sub
adc
mov
sbbb
sti
adc
push
sbb
and
pop
fnstenv
or
add
dec
mov
loop
or
hlt
pop
mov
cmp
pop
mov
sub
and
cld
sbb
sahf
jle
fwait
shll
movsb
cli
repz
jae
outsb
call
clc
mov
mov
bound
mov
pushf
lret
into
in
outsb
sahf
mov
xor
mov
arpl
je
in
jb
shrl
cmpsl
rolb
ret
je
dec
pusha
pop
and
add
outsb
dec
jne
mov
aaa
es
cmpsb
lock
or
ret
cmp
jo
xor
push
in
xchg
and
dec
movsl
adc
push
xchg
xor
int
arpl
in
std
or
and
mov
mov
ret
outsb
jecxz
ds
lret
xchg
inc
out
cwtl
push
mov
int3
jmp
lock
mov
cltd
insb
aas
xchg
push
dec
mov
mov
in
push
flds
lret
mov
jmp
inc
sub
mov
bound
jecxz
test
mov
stos
push
inc
cmp
enter
enter
imul
lds
mov
add
mov
outsb
punpcklbw
mov
and
in
sub
subb
cmp
popf
push
pop
lahf
xor
in
addr16
fisttpl
push
cmpsl
lods
or
jle
mov
std
xchg
jp
mov
adc
shlb
dec
subb
jb
add
mov
cmp
ds
shrb
cmp
lret
mov
push
mov
and
add
out
push
xchg
dec
or
jge
ret
pop
out
push
aaa
sbb
aaa
and
mov
mov
cltd
sbb
call
jmp
xor
roll
sbb
leave
fcomps
insl
push
sub
mov
mov
inc
lret
jle
add
add
sbb
repz
arpl
je
dec
push
adc
push
dec
inc
scas
sbb
adc
or
jge
fnstsw
into
fisttpl
dec
or
aam
pop
fs
fimuls
std
jns,pn
shll
pusha
lea
xor
pop
jns
xor
cmpsl
lods
xor
cmpsl
push
mov
jle
inc
jle
aaa
ljmp
fcmovnbe
sar
in
mov
js
fcoms
fldt
outsb
dec
in
xchg
das
pop
mov
js
icebp
hlt
dec
int
jmp
lret
cltd
and
push
mov
leave
sub
push
push
pop
sbb
ss
aaa
in
push
je
outsl
or
or
mov
movsl
ljmp
jb
loope
dec
xor
arpl
cmp
int3
cmp
cmp
imul
inc
rclb
mov
js
xor
push
les
shrl
negl
repz
jle
aaa
xorb
icebp
sub
sub
pusha
cmpsl
cmpsl
in
movsb
push
push
mov
es
daa
stos
jp
mov
lds
mov
mov
sarb
pop
in
test
mov
mov
ret
ds
test
inc
ss
mov
dec
das
sbb
hlt
sbb
dec
jle
xor
xorl
leave
aaa
add
add
aad
inc
push
clc
fcmovbe
cmp
fdivs
inc
jge
dec
pop
fucom
xor
imul
mov
mov
stc
cmp
push
ljmp
cltd
inc
lods
xchg
push
cmp
mov
pusha
rcrb
dec
cmp
aam
mov
jnp
cmc
jmp
icebp
sub
lds
add
jae
sub
xchg
mov
and
and
sbb
ss
xchg
xchg
jmp
dec
jmp
lret
test
mov
jle
movsl
mov
or
ret
pop
scas
mov
sub
pop
std
lret
add
shlb
aaa
lods
jmp
lods
or
lar
and
out
mov
mov
pop
mov
lods
loop
cmp
int3
mov
aam
fbstp
jp
pop
sub
insb
stc
xchg
jb
neg
pusha
clc
add
sbb
nop
ss
aaa
inc
mov
cmp
bound
jno
insl
pop
add
popf
push
in
adcb
sbb
cmp
adc
sbb
mov
cmp
jns
pop
jbe
jne
pop
aaa
sub
cmp
pop
adc
fnstcw
ret
add
dec
faddl
mov
xor
xchg
sbb
fnsave
mov
fs
xchg
mov
adc
dec
pop
fbld
or
jmp
dec
push
and
xchg
out
les
call
add
jns
repz
jmp
and
jle
cmp
and
mov
je
ljmp
clc
push
dec
movsb
outsw
cmp
cmp
out
and
jo
push
xchg
idivb
inc
andl
insb
dec
push
mov
outsl
outsb
pop
dec
pushf
jle
inc
xor
sub
out
sbb
jns
fwait
adc
pop
fstps
outsb
idivl
push
push
inc
mov
lea
in
in
xor
mov
in
or
mov
cmp
jbe
xchg
idivb
test
adc
pop
stos
in
mov
into
js
pop
scas
push
out
xchg
or
jo
popa
inc
sub
js
jae
cmc
lods
call
xchg
shll
xorb
out
loopne
adc
push
jbe
xchg
gs
and
ljmp
inc
mov
aaa
cmpsb
push
push
cmp
push
dec
stc
xor
int
bndstx
lret
cmp
cmp
mov
dec
sbb
outsl
imul
adc
aam
cmp
jo
andl
adc
cmp
test
mov
mov
fs
nop
int3
jmp
inc
repz
xchg
dec
adc
xor
arpl
incb
cmp
push
inc
sbb
mov
movsl
or
or
adc
dec
and
inc
inc
jmp
add
pop
mov
jo
lahf
jae
lret
xor
jmp
jno
jns
stos
cld
mov
and
shll
mov
sbb
lea
cmp
sbb
fildll
cmc
out
mov
push
mov
mov
arpl
imul
xor
cmpsb
bnd
jl
dec
outsb
divl
pop
add
jns
pushf
and
push
and
stos
outsb
add
mov
cs
pop
cli
je
mov
in
test
arpl
into
scas
pop
outsl
jle
aaa
flds
pop
mov
jecxz
cmp
adc
jecxz
test
cltd
jnp
sahf
xor
mov
inc
sbb
iret
sbb
loop
and
repz
pop
sbb
lret
mov
inc
imul
adc
push
sbb
in
xchg
and
pop
ds
jno
and
and
lock
outsb
lcall
test
call
insb
mov
aam
inc
add
xchg
and
xor
jecxz
cmp
dec
xchg
cli
sub
lret
das
scas
inc
xor
jl
fstpt
push
inc
cld
das
cltd
sbb
ljmp
xchg
pop
sbb
sarb
movsl
mov
es
sbbl
jnp
out
jb
iret
pusha
sbb
ret
aam
pop
stc
jmp
pop
ljmp
mov
mov
pop
test
cmp
lock
jmp
push
es
push
cmp
push
jb
mov
cmpsb
rorl
xor
loopne
inc
push
inc
pop
loope
and
jmp
adc
enter
push
mov
loope
cltd
js
pop
ss
fs
push
or
mov
and
adc
pop
dec
pop
cmc
addr16
pop
cmp
cmp
repz
jge
jge
scas
push
or
mov
xchg
das
inc
popa
cs
mov
mov
and
repz
sbb
sbb
cli
xchg
mov
sub
and
jne
out
repnz
bound
cld
jecxz
lods
enter
inc
sbb
cmp
in
cwtl
push
clc
inc
lods
hlt
xchg
jo
pop
dec
jg
sbb
dec
rcrb
xor
mov
mov
mov
ljmp
xor
das
and
cmp
in
xlat
push
cmp
sbb
jbe
mov
ret
call
fstpl
js
push
es
dec
and
jg
pop
int
inc
sbb
jge
cmp
repz
fcmovnu
mov
outsb
cmpb
jbe
xchg
test
aaa
dec
fdiv
dec
out
je
pop
xchg
inc
inc
inc
push
negb
dec
jb
xchg
cli
adc
shlb
test
adc
adc
cli
stc
push
jp
das
mov
jae
into
mov
dec
cmp
js
loope
pop
jne
jmp
pop
jmp
fistpl
sbb
jl
cmpsb
int
jle
add
xchg
xor
lcall
mov
adc
test
rcll
imul
or
push
pop
jbe
and
add
push
mov
push
jle
jle
pop
pop
sbb
outsb
shll
push
sbbb
dec
mov
or
mov
nop
xchg
jnp
mov
pop
sbb
stos
add
insl
mov
jp
adc
mov
loope
in
iret
call
adc
sub
sub
xor
fistps
je
pop
dec
add
jbe
add
dec
inc
fstpl
mov
test
bound
xlat
shrb
call
jmp
das
jno
repz
movzbl
jb
ficomps
shrb
jle
sbb
cs
shr
sub
aam
dec
leave
adc
jle
test
dec
push
lcall
lock
js
push
sbb
sarb
imul
mov
cmp
in
ret
jp
aam
outsb
shll
mov
std
pop
insb
inc
sahf
jno
fs
in
push
popf
sub
mov
les
daa
push
jae
sti
jmp
inc
push
mov
sbb
sub
mov
aaa
adc
push
icebp
fsub
movsl
mov
arpl
pop
hlt
sbb
adc
xchg
pop
call
push
or
scas
arpl
leave
les
mov
ret
cmp
cmc
mov
les
xchg
add
xchg
pop
pop
js
mov
jle
pop
sub
lret
mov
xchg
push
pusha
inc
pop
cmpsb
and
cld
fwait
shl
cwtl
sbb
or
pop
mov
jb
mov
scas
sti
fimuls
pop
pop
fisubrs
sbbl
inc
pop
push
ljmp
ja
xor
or
mull
addb
dec
push
cmpsl
rorb
leave
add
lods
jbe
arpl
mov
mov
cltd
cmp
ret
xchg
stc
cmp
inc
popa
enter
pushf
xlat
rorl
out
inc
leave
jnp
lea
aaa
inc
mov
nop
popf
mov
in
xchg
call
mov
pop
push
adc
arpl
add
loope
lods
cltd
xchg
mov
andl
repz
pop
into
cli
shll
xchg
dec
lret
inc
stos
ret
icebp
mov
xlat
fistl
mov
rolb
pop
sbb
push
xchg
jl
out
push
cmp
dec
clc
jg
fucomp
pop
xchg
jp
sub
lret
mov
mov
sarb
and
loopne
adc
mov
jnp
pop
movsb
lret
sbb
std
xchg
aaa
dec
fsubl
clc
mov
pushf
rcrl
addr16
icebp
pop
in
cmc
fdivrs
aaa
mov
int
pushl
or
mov
xchg
mov
cmc
das
loope
ficoms
add
lock
jge
out
cmp
je
xchg
jns
inc
movd
add
enter
test
push
pusha
lods
sbb
addl
call
push
scas
aaa
test
aaa
call
outsb
mov
int3
jecxz
dec
push
push
sbb
sub
mov
cmc
mov
adc
pushf
xlat
xor
push
lods
js
aaa
subl
into
adc
fwait
push
test
dec
jl
ret
mov
icebp
xor
lret
inc
fwait
shl
cmpsl
in
fistl
xor
es
test
in
insb
mov
rcr
sub
pop
pushf
addr16
mov
imul
stos
lret
loope
jb
pop
imul
mov
sub
div
xor
push
xchg
scas
inc
pop
pop
in
xchg
int
outsl
iret
mov
xchg
push
inc
imul
add
pop
mov
ljmp
into
pop
pop
ss
icebp
dec
push
loopne
aaa
aas
pop
lahf
mov
mov
push
lea
mov
dec
lcall
adc
pusha
sub
stc
jle
fwait
mov
fildl
pushf
xchg
shlb
bound
push
xor
out
rcrl
adc
xor
scas
arpl
cmp
test
cltd
ret
repnz
es
enter
push
cmp
fstl
sbb
shrb
sbb
icebp
pop
addr16
arpl
je
dec
aaa
jmp
push
icebp
push
xor
push
in
dec
test
push
pusha
test
out
shlb
push
or
shlb
mov
dec
jnp
jecxz
shll
pop
xchg
inc
add
rclb
inc
cmpl
xchg
das
adc
psubd
pop
xchg
push
imul
mov
inc
subl
jno
and
lahf
xchg
pop
dec
push
dec
mov
js
aaa
mov
adc
shlb
lock
inc
sbbb
into
dec
sahf
pop
aaa
scas
mov
test
js
add
jb
pop
add
and
sbb
dec
lahf
in
pusha
mov
fstpl
jg
push
or
inc
xchg
push
mov
out
mov
cmp
cmp
xor
adc
lds
inc
ds
pop
jmp
ss
imul
sub
aas
sub
ss
test
and
mov
mov
pop
pop
xchg
in
add
shll
mov
je
rcl
out
out
mov
data16
aas
mov
xchg
xor
loopne
sub
lahf
push
push
shll
push
inc
sbb
push
mov
stc
jmp
jae
cmp
test
pop
das
shrl
inc
in
cltd
mov
int3
jae
cmc
out
ret
sub
nop
nop
jbe
imull
pop
sub
loope
cmc
aaa
les
outsl
sub
imul
push
test
or
adc
dec
or
adc
loopne
test
pop
push
cmp
in
pop
lods
les
sarl
out
arpl
sub
or
push
dec
sbb
cmp
lock
and
mov
rcll
xchg
shll
lods
push
push
sub
sub
xor
push
push
dec
and
in
lret
icebp
mov
lock
hlt
mov
sarl
mov
jne
and
push
add
pop
loop
in
sbbb
lret
xchg
mov
lret
movaps
out
push
lock
inc
cmc
mov
jle
mov
push
sub
out
sbb
dec
addr16
xor
shlb
push
sbb
int
jb
xor
pop
leave
popa
xchg
mov
shll
pop
dec
pop
outsb
cmp
pop
movsl
cmp
or
fdivrs
push
sbb
filds
out
xchg
outsb
and
adc
es
sbb
insl
lret
xchg
movsl
pop
in
pusha
dec
and
das
in
push
add
adc
es
ret
std
xchg
inc
mov
subl
mov
ret
sub
jecxz
cmp
enter
adc
inc
fwait
inc
mov
int
inc
pop
sarl
addr16
in
ss
pop
popf
loopne
or
divl
lods
adc
inc
sbb
outsl
inc
sahf
lods
inc
iret
adc
inc
xlat
rcrb
cmp
pop
mov
cmp
ret
inc
outsb
fldt
cmpl
add
scas
mov
cmp
cmp
cmpb
out
mov
mov
hlt
add
sbb
popf
add
xchg
das
pushf
mov
rclb
fbld
cmp
gs
pusha
adc
cwtl
dec
in
imul
mov
mov
in
xchg
jecxz
aaa
inc
pop
xchg
sbb
ds
popa
mov
sub
and
fistps
xchg
push
lds
push
sub
out
ss
pop
inc
or
inc
add
push
sub
les
pop
cmp
xchg
pop
sub
mov
push
out
and
cmp
clc
or
gs
cmp
pop
dec
sbb
mov
xor
pop
arpl
sub
add
cli
mov
lret
mov
or
sub
popa
pusha
repz
mov
mov
int
mov
jae
sbb
icebp
addr16
push
add
xchg
cli
pop
jbe
and
rol
pushf
pop
fnstcw
imul
ss
fwait
lods
and
jge
divl
mov
lea
xchg
movsb
test
test
jb
mov
mov
dec
imul
pop
sub
mov
cmp
ss
dec
lahf
sbbl
mov
shl
movsb
inc
pop
mov
popa
lods
nop
sbb
jl
loope
adc
les
cltd
push
push
push
jno
pusha
xlat
xchg
fistpll
aaa
or
lea
xor
cwtl
and
mov
fistpl
sbb
test
xchg
je
adc
test
int3
fwait
jb
stos
cltd
push
lods
sbb
mov
out
andb
pop
mov
xor
mov
aaa
push
test
loop
fdivrs
jb
cltd
or
imul
loop
cmp
fisttpll
rolb
shrb
iret
insl
lretw
inc
mov
lcall
cmp
jnp
cmpsb
lods
stos
aam
mov
mov
xchg
sti
push
imul
mull
fmuls
cmpsb
mov
adc
mov
loope
in
or
mov
frstpm(287
cmp
cmp
and
sarl
mov
push
stos
ljmp
into
cs
faddl
mov
push
int
sbb
or
and
mov
xchg
push
inc
sbbb
sarb
mov
popf
repz
mov
cmp
mov
add
insb
or
pop
fsts
jp
ror
int
pop
loopne
sub
mov
mulb
shrd
push
ret
stos
jo
mov
xor
xor
xor
pop
test
xchg
fisttpl
jecxz
jb
insl
jne
cmp
mov
and
pop
lods
aaa
idivb
dec
push
jno
and
sub
ret
cmc
in
xor
lahf
cmp
cmp
sbb
xor
dec
lret
orb
aaa
dec
push
movsl
std
adc
inc
and
daa
cmp
lods
and
jle
mov
enter
mov
push
loope
call
xor
icebp
xchg
fcomp
leave
orb
adc
cmpsb
mov
aaa
stos
fwait
bound
or
push
cmp
in
xor
jmp
inc
imul
outsb
cld
mov
or
subb
mov
jae
scas
aas
cmp
sbb
lcall
adc
push
pop
lcall
mov
adc
ret
test
into
inc
je
lods
add
pusha
sbb
movsl
jge
popf
xlat
xchg
outsb
mov
sbb
jg
je
sub
jge
pop
xlat
push
mov
adc
pop
scas
push
loopne
jge
fisttpl
jge
into
mov
pop
sbb
mov
pushf
shrb
push
jo
test
push
fdivp
jae
sub
or
lea
add
pop
mov
xor
cmp
test
clc
dec
jl
outsb
aaa
sbb
or
pop
pop
xchg
adc
dec
mov
mov
ljmp
xor
insb
in
cmpsb
pop
rcr
mov
cmp
add
pop
mov
adc
mov
lds
stos
mov
insl
jnp
mov
loope
out
or
jge
pop
push
jge
lcall
rcrl
jbe
or
cmpl
xor
or
sbb
fstpt
sbb
add
cmpsl
out
dec
xchg
xchg
mov
cmp
ret
and
jbe
fstps
pop
xlat
sbb
fwait
loop
popa
pop
das
pop
mov
jp
aaa
and
add
xchg
mov
cmpsl
or
push
sbb
movsl
hlt
arpl
push
arpl
jne
add
inc
ds
sti
and
ret
popa
cwtl
push
loop
pop
in
cli
jl
inc
cmp
xchg
jle
outsl
inc
movsb
mov
jge
xchg
jecxz
sub
sbb
push
lahf
fiaddl
aaa
lods
ret
adc
pop
out
notb
aaa
ss
loope
and
imul
add
push
pop
adc
in
js
xchg
sbb
in
mov
xor
mov
jmp
mov
scas
ret
inc
int
pop
cld
les
xchg
std
fildll
fs
push
enter
daa
mov
in
arpl
incl
clc
sub
test
ds
aam
jo
addr16
mov
mov
stos
lea
imul
push
nop
inc
inc
pop
dec
pushf
xchg
jno
ret
adc
jle
ds
cmpsl
push
sbb
push
xchg
mov
mov
test
dec
fldcw
mov
pop
adc
fldenv
adc
sti
or
cld
jae
shll
cmp
xchg
in
pop
or
sbb
inc
and
push
sbb
jns
jp
sbb
mov
pop
and
cwtl
outsb
mov
adc
and
mov
mov
aam
and
mov
sbb
add
jb
xchg
sti
aas
call
stos
sbb
push
dec
icebp
out
rcrb
jb
repnz
xchg
pop
lea
fisttpl
cmp
jge
xchg
cmp
in
repz
and
pusha
inc
jge
jle
pop
out
push
pop
xlat
push
loope
pop
xor
mov
cmp
xchg
mov
cmpl
popf
scas
and
imul
inc
in
fmul
mov
mov
push
stos
in
ds
loop
pop
push
das
stos
push
and
xchg
das
mov
dec
push
sbb
xlat
lock
jle
mov
cmp
push
mov
pop
in
and
pop
lds
fadds
icebp
inc
mov
push
cmp
sbb
icebp
in
testb
pop
dec
lret
in
inc
push
and
jle
pop
stos
popa
or
fdivr
addb
sbb
outsl
add
data16
xor
mov
movsl
sub
mov
or
test
outsb
sbb
add
jns
scas
push
std
in
xlat
sub
xor
clc
jecxz
jno
add
adc
adc
inc
shl
mov
xchg
mov
aaa
lods
lahf
ja
iret
cmp
test
lret
dec
pop
repnz
push
and
fs
adc
or
mov
int3
sbb
scas
pop
arpl
repnz
rcll
mov
call
jmp
mov
pop
cmp
pop
dec
sbb
imul
pop
push
js
cmp
aaa
jne
imul
and
arpl
aaa
jp
stos
dec
bound
int3
sub
inc
pop
sbb
stc
popa
pmaxub
jmp
add
cmp
bound
pop
push
fs
adc
movsb
ja
pop
mov
jno
pop
dec
sbb
pop
sahf
push
sbb
push
push
lods
and
pop
nop
or
ss
aaa
mov
jns
outsl
mov
das
imul
popa
aad
enter
inc
in
and
push
popa
adc
and
mov
mov
bound
test
bnd
movsbl
out
mov
out
loopne
mov
mov
cltd
test
mov
xor
sbb
xor
xor
pop
push
inc
std
xor
xchg
ret
rorl
mov
cmp
xor
add
cmp
pop
fsts
jns
jae
addr16
out
inc
dec
sahf
mov
fldl
aam
cmp
insb
loop
lea
rcll
into
out
pop
std
mov
iret
xchg
xor
rorb
or
mov
push
sti
cmp
push
or
lea
popa
and
cmc
push
dec
scas
test
add
fistl
pop
fbstp
loope
jp
mov
mov
jle
insb
stc
pop
xor
sti
and
mov
add
jb
divb
pop
in
add
dec
int3
jbe
add
test
stc
sbb
inc
fistpll
loop
mov
aaa
call
pop
pop
mov
mov
xchg
mov
out
enter
repz
les
std
repz
ljmp
fdivrs
imull
ret
stc
mov
jmp
push
adc
dec
sti
cmp
push
sub
mov
sub
enter
outsb
mov
es
aam
dec
leave
cmp
pop
add
cmpsl
push
pop
and
jae
push
xchg
lods
push
out
mov
or
imul
mov
sub
cld
daa
out
xor
inc
adc
insl
cmp
mov
das
test
sbb
int3
pop
cmc
pop
sub
icebp
out
pop
adc
mov
ja
cmp
jb
outsl
jno
data16
cmpsb
insb
pop
inc
aaa
and
test
loop
push
outsb
and
fwait
pop
sar
dec
pop
xor
das
xchg
sub
dec
aad
mov
cs
ficomps
jbe
arpl
mov
add
in
jnp
push
pop
int
pusha
cld
ret
es
cmp
sti
icebp
fstps
jge
mov
or
jp
mov
cs
data16
mov
and
and
pusha
repz
xor
adc
nop
popf
lret
call
jnp
jo
in
andb
and
fcoms
push
cmp
push
jb
into
out
jb
out
sub
cld
lcall
push
icebp
lea
in
push
jl
cwtl
incb
sbb
dec
stos
xchg
xchg
sbb
aam
imul
jl
cwtl
mov
pop
sbb
pop
mov
push
call
inc
xchg
pop
out
add
std
sbbb
je
int
dec
mov
rolb
jl
daa
fidivl
cmc
lea
aam
cmpsl
in
cmp
mov
sbb
out
sbb
mov
sub
cs
adc
push
jnp
sub
push
addr16
xor
adc
xlat
and
push
loopne
pop
jp
ss
xchg
cmp
jb
dec
xchg
mov
dec
gs
insb
inc
sbb
loop
pop
jae
lcall
das
pop
lcall
mov
inc
int3
lret
jecxz
sub
frstor
jmp
or
mov
dec
push
pop
hlt
mov
fidivl
push
push
cltd
mov
sub
pop
arpl
xchg
push
aaa
stos
jp
jo
outsl
push
mov
xchg
sbb
sbb
jle
and
push
aas
push
popf
movsb
es
sbb
push
das
cld
lret
push
mov
jnp
repnz
fsubrs
push
adc
add
inc
xchg
shrb
or
fs
hlt
ljmp
jl
push
pop
dec
inc
adc
xchg
rcl
add
popa
xchg
mov
pushl
and
daa
cmpsb
in
shl
mov
rcrl
lea
repz
sbb
and
cwtl
ret
mull
fdivrs
in
xlat
pop
ljmp
mov
ret
in
mov
outsl
arpl
pop
es
into
adc
inc
das
std
mov
push
out
ljmp
xor
inc
and
and
inc
jecxz
incl
mov
xor
mov
lods
adc
icebp
pop
mov
push
cmp
test
jecxz
dec
sti
push
dec
out
xchg
and
js
aaa
xor
loop
das
and
fmull
cmp
mov
pop
jecxz
jns
in
cmp
je
mov
popf
pop
xchg
pop
lds
adc
push
ret
jno
adc
int
xchg
pushf
popf
shll
push
cmp
sub
movsb
movsb
int
lea
xorl
xchg
out
mov
sbb
inc
jle
rclb
lds
adc
mov
pop
mov
fnsave
adc
jmp
das
outsl
stc
ret
push
sti
movsl
push
clc
mov
push
and
sbb
std
jae
xor
aas
mov
jecxz
in
cmpsb
inc
adc
icebp
loopne
out
test
cltd
xor
or
aam
dec
pop
mov
in
jmp
xchg
or
sub
or
sti
mov
pop
jmp
mov
les
fisubrs
jns
cmp
inc
mov
test
jnp
jbe
dec
sbb
pop
sub
sub
jge
jmp
and
jp
mov
aaa
pusha
dec
xchg
xchg
movsl
aaa
cmpsl
fidivs
inc
mov
sbb
cli
icebp
shlb
xor
test
push
call
lods
pop
sbb
jb
lods
rcrb
mov
icebp
jnp
mov
inc
rcr
or
pop
stos
dec
shll
icebp
xor
sahf
dec
and
jp
pop
mov
jo
dec
jle
imul
xchg
dec
push
pop
lock
movsl
les
iret
ret
out
push
pop
and
test
pop
pop
jbe
adc
push
js
adcb
pop
xor
add
xor
xor
shrb
mov
add
out
jns
mov
sbb
xchg
lret
je
pop
mov
push
pushf
outsb
sbb
mov
test
mov
push
xor
add
insb
aaa
mov
sti
sbb
imulb
mov
xchg
sub
pop
scas
pop
stos
lock
test
les
gs
and
scas
add
fwait
inc
pusha
shlb
sub
hlt
pop
enter
jl
js
push
xor
in
inc
in
and
fsubl
mov
adc
xor
pop
mov
push
inc
addb
jnp
xor
popa
cwtl
enter
sub
pop
fstpl
popf
in
setae
mov
push
cmp
outsl
push
add
scas
pop
call
adc
adc
mov
cli
outsb
aad
out
aas
xchg
mov
cmp
push
addr16
ds
sbb
cmp
lea
pop
add
ret
mov
pop
lds
popf
adc
loope
cld
or
mov
cli
sahf
push
pushf
mov
and
call
repz
dec
inc
subps
test
xor
push
ja
push
inc
jo
pop
cmpsb
lret
aam
xchg
pop
add
repz
pop
push
fnstcw
xor
pop
shl
lcall
loope
cltd
data16
jp
push
xor
add
lret
movsb
jo
mov
ret
sub
adc
outsl
sbb
movsl
add
push
push
dec
cmp
sub
sbb
int
out
lods
push
repnz
adc
fdivs
pop
clc
xlat
icebp
push
pop
push
mov
jnp
std
jmp
into
je
and
mov
aas
push
jl
aad
aaa
inc
std
lret
call
nop
cwtl
mov
xchg
pop
or
roll
fsubrp
arpl
push
mov
dec
xor
cmp
push
paddsw
sub
xor
data16
xchg
push
sahf
pop
int
pop
fiaddl
mov
ret
xrelease
pop
sbb
rclb
sub
and
int
pop
lea
cli
mov
mov
pusha
jbe
mov
xchg
out
shrl
sub
les
scas
sub
ret
or
and
mov
mov
or
outsl
pop
lods
scas
fcompl
insl
sbbl
movsb
popa
push
ja
imul
in
mov
mov
sub
mov
bound
repnz
pop
scas
dec
loope
sub
xchg
test
testw
inc
ss
in
push
add
pushf
xchg
mov
fdivl
insb
jl
add
jecxz
jg
and
push
sar
jmp
sti
int3
cmp
fwait
hlt
pop
cmc
mov
jo
out
ljmp
in
out
popa
pop
addl
push
nop
lock
cmp
inc
cmp
scas
xlat
push
xor
aam
adc
aaa
insl
xor
mov
xchg
jb
adc
in
cmp
fs
stos
in
xor
mov
sub
stos
mov
jle
sbb
jl
push
mov
xor
xchg
cmp
fbld
movsl
fdivrs
popa
jo
loop
pop
mov
iret
adcb
xor
out
jns
push
cld
ds
aas
xor
rolb
out
pop
mov
outsb
mov
xchg
push
mov
sbb
aam
fdivr
sarb
in
mov
imul
or
mov
sub
in
or
in
mov
add
sub
cmp
lret
fldt
pop
cmpb
jo
call
rcrl
push
inc
test
cmp
lds
js
cltd
sbb
and
jge
ss
inc
push
cmpsl
mov
outsb
adc
shrb
add
fs
xor
jae
mov
sub
fisubl
push
lods
mov
xchg
dec
shlb
int
add
cmp
stos
cmc
or
dec
add
sbb
mov
jo
sbb
aaa
in
cmc
push
jno
cmp
pop
testl
xchg
xchg
js
outsl
arpl
not
testl
out
outsl
dec
inc
push
repz
stos
iret
pop
in
lods
mov
xchg
movsb
xorl
fdivp
imul
jo
push
data16
pop
cltd
leave
dec
fstpl
out
inc
stos
or
testb
in
sbb
mov
loopne
enter
pop
insb
inc
loop
outsb
arpl
pop
jg
push
addr16
xchg
cli
ret
fcoms
cs
jns
sbb
xor
clc
iret
lea
pop
inc
push
dec
outsb
cmp
sbb
pop
adc
mov
out
aaa
mov
add
sub
inc
ret
testb
popf
pop
mov
pop
enter
test
lea
dec
hlt
arpl
dec
add
cmp
out
shl
out
dec
jae
scas
out
lcall
sbb
mov
iret
dec
fcmovu
loop
stos
rorl
enter
xchg
sbb
int3
jnp
hlt
arpl
stos
clc
jmp
inc
inc
in
movsb
ret
push
or
and
xor
inc
jno
aad
pop
ficompl
out
std
outsl
fdivrs
in
adc
mov
push
xchg
cwtd
pushf
clc
std
aaa
adc
test
pop
arpl
and
add
push
sub
aaa
in
inc
scas
nop
icebp
sbb
push
pop
ljmp
outsb
loope
mov
mov
inc
mov
cmpsl
das
out
xchg
movsl
mov
test
push
mov
lods
pop
pop
in
aad
call
add
pop
lods
fnstcw
aaa
sbb
xor
xor
and
pusha
mov
imul
imul
push
xor
pop
pop
xor
cmc
jno
push
stos
aas
cli
sti
cmp
inc
sbb
imul
adc
xor
loope
sbb
call
cmc
repnz
stos
pop
aas
adc
cmp
jns
aad
or
int3
and
aas
push
dec
add
jnp
adc
xchg
ljmp
mov
jno
adc
push
out
add
dec
std
sub
xchg
into
inc
sarb
shll
je
xlat
arpl
xor
stos
jg
outsb
std
test
leave
inc
push
sti
xchg
loopne
push
mov
in
mov
mov
sub
sub
adc
dec
mov
jo
mov
rcrb
mov
shr
xchg
jnp
dec
call
adc
shl
cmp
sbb
and
mov
loope
aaa
push
adc
pop
sbb
inc
sbb
dec
rorb
pop
pop
pop
shr
xchg
mov
je
jns
inc
inc
mov
dec
push
in
sub
mov
pusha
shll
popf
and
into
bound
jmp
add
dec
les
xor
movsl
jg
incb
pop
mov
jmp
mov
sbb
jo
fcompl
dec
arpl
push
repz
or
and
sbb
sbb
cmp
cs
and
inc
push
jb
inc
jmp
bound
cltd
mov
mov
pusha
jecxz
add
ja
ss
inc
in
arpl
push
fsub
sahf
cmp
repnz
aam
cwtl
std
sbb
outsl
mov
sti
dec
and
into
jo
fninit
pushf
pop
add
xchg
or
cld
sti
and
sbb
rorb
sahf
ss
movsl
test
dec
sbb
daa
push
sbb
push
push
subl
lea
pop
mov
cmc
popf
loop
adc
pop
sbb
cmp
push
leave
test
push
mov
jp
fwait
and
and
pop
sbbb
lahf
rol
test
insb
jno
repz
adc
imul
loope
mov
jne
jne
es
cmp
scas
repz
or
in
pop
xchg
insb
adc
push
cmpsb
pushf
lret
sbb
mov
xchg
iret
mov
mov
add
pop
add
pop
dec
les
lret
dec
cmp
adc
insb
ljmp
and
push
jmp
pop
push
aaa
cld
add
dec
and
sbb
rcrb
int3
inc
dec
dec
je
add
lds
adc
sub
dec
nop
jg
and
pop
xchg
repz
jo
sbb
jle
in
xchg
inc
jo
popf
rcrl
jnp
imul
test
mov
enter
test
sub
mov
mov
scas
iret
arpl
les
sub
out
adc
push
mov
cmc
mov
mov
sbb
sbb
lret
mov
mov
out
popf
stos
aam
fucomi
clc
int3
and
ret
into
add
and
ds
dec
xchg
mov
pop
mov
fistl
scas
pop
and
jg
and
xor
xchg
enter
jmp
movsl
test
dec
enter
cmp
inc
mov
ds
jmp
out
or
sub
sarb
mov
jle
mov
lret
sahf
pop
mov
jp
sbb
ss
and
outsl
mov
sub
push
pop
clc
pop
sti
imul
sub
ljmp
push
add
lcall
mov
rcl
xor
push
sbb
fisubs
ss
mov
out
jecxz
mov
xor
outsl
stos
xchg
dec
jle
adc
sub
dec
mov
shrb
jecxz
repz
xchg
xor
mov
ficompl
push
pop
insl
shll
dec
sti
sbbb
data16
mov
xchg
mov
lods
js
xor
pop
xor
cmp
cmp
sahf
les
out
ds
xchg
cmpsb
mov
in
sub
jnp
lret
xor
add
fsubrl
fsubrs
inc
sahf
mov
sub
bound
ss
fsubr
cmp
xchg
and
out
leave
mov
sarb
loopne
mov
xchg
fnstsw
stc
inc
adc
int
es
xchg
mov
inc
in
jle
rolb
sbb
and
insb
jbe
and
mov
or
aas
inc
es
clc
les
rolb
or
xor
mov
adc
repz
jnp
aaa
inc
pop
mov
push
add
in
aam
out
jmp
lahf
outsb
ret
sbb
jmp
movsl
xchg
jg
pop
hlt
adc
pop
cmp
pop
cmpsl
xor
adc
xchg
bound
sbb
addl
es
push
jns
pop
in
xor
fwait
push
loope
lea
lock
movsl
js
inc
inc
cld
xor
xchg
push
cmp
jmp
test
scas
inc
stos
xchg
shlb
mov
fwait
inc
movsl
cs
cmpsb
add
xor
push
sbb
aam
jl
rcl
mov
or
test
xchg
pop
sbb
or
mov
or
fnstsw
mov
repnz
sahf
inc
xchg
mov
fbstp
js
fyl2x
or
xchg
repz
or
movsb
inc
or
push
inc
jmp
enter
or
lcall
ljmp
mov
sti
stos
lods
mov
cmp
arpl
sahf
lret
out
mov
jnp
scas
sti
jbe
lcall
dec
lcall
push
mov
push
mov
movsl
jg
outsb
inc
repnz
jge
cmpsb
add
insb
nop
aaa
xor
mov
sub
and
sbb
dec
xor
add
pop
push
aad
ss
jecxz
lcall
jno
js
aaa
leave
lods
int3
outsb
repnz
gs
xchg
fnsave
dec
aas
jp
sub
mov
repz
es
push
or
lret
popa
addr16
sbb
in
or
pop
hlt
inc
xchg
sub
sti
sub
scas
into
into
loope
xchg
and
outsb
shlb
jnp
sahf
mov
jle
pop
pop
test
push
jae
adc
test
aaa
mov
jb
cmp
fsts
mov
lret
xchg
enter
outsb
add
jo
jbe
aaa
cli
idivb
andb
out
inc
cwtl
jl
sbb
or
outsl
data16
testb
aaa
and
pop
lcall
mov
ds
add
mov
mov
pop
mov
fildll
andb
scas
jbe
out
orl
fsubrs
lock
sub
fdivl
and
test
or
sbb
jno
mov
pop
leave
jmp
mov
out
bound
roll
xchg
clc
and
aaa
iret
jb
adc
mov
dec
adc
sbb
push
das
pop
popf
fidivl
je
fsubrs
sahf
les
sar
fdivl
pop
mov
mov
mov
ret
cmp
movsl
jbe
scas
jp
sbb
pop
jb
inc
mov
and
add
adc
sahf
mov
int
xor
lret
jne
shlb
nop
sti
inc
cmp
mov
stos
icebp
enter
push
cmpsb
ret
call
sbb
adcb
test
std
pop
fildll
rorl
stos
outsb
fldenv
mov
je
sbb
cmp
cltd
mov
ret
repz
mov
arpl
aaa
sbb
adc
insb
sbb
pop
je
cmp
push
push
fildl
insl
pop
jecxz
jg
sbb
mov
fnsave
stos
lahf
jp
stos
repz
sti
push
pop
nop
pop
sbb
and
ret
mov
aas
negl
inc
orb
out
pop
xor
lods
add
pop
int3
dec
mov
jp
xchg
sbbl
testl
imul
movsl
jns
pop
aam
nop
mov
cmp
adc
enter
test
push
add
mov
lea
mov
cwtl
pop
mov
pop
add
push
add
push
sbb
mov
jno
inc
cmp
jno
dec
inc
in
inc
mov
enter
fdiv
jp
lret
add
arpl
das
hlt
push
or
jbe
cmp
inc
pop
test
das
jmp
aam
and
std
cli
mov
imul
dec
enter
cmp
sub
int3
outsb
pop
aaa
and
mov
nop
cmp
jb
icebp
lock
push
ss
inc
dec
jnp
cmp
iret
enter
pop
test
bound
in
mov
sub
js
add
xchg
ja
rep
lahf
sbb
mov
pop
cmp
in
adc
sbb
jle
jp
aaa
push
fdivp
jnp
popf
add
fmuls
fildl
xlat
sbb
jae
rclb
sub
cmpsl
xor
and
inc
fs
inc
mov
ss
pop
pop
int3
mov
shll
stos
icebp
and
rcrl
and
jo
mov
lods
bound
stc
bound
mov
sbb
xor
out
ss
pop
mov
loope
shlb
xor
push
sbb
test
mov
or
ss
lods
mov
jno
cmpsl
jl
out
push
pop
jb
outsl
sahf
ret
or
xor
pusha
test
pop
mov
adc
test
hlt
in
mov
pop
inc
repz
sti
shll
fnstsw
inc
pop
js
rcll
cs
dec
mov
flds
sbb
cmp
mov
sub
xchg
push
fisubrs
fsubrl
jbe
mov
call
adc
pop
iret
loope
sub
pop
rcrl
fwait
rol
outsb
cmpsb
imul
sarb
sbb
jb
pop
mov
push
nop
pusha
inc
xor
loop
push
push
imul
inc
ds
xchg
and
fldenv
or
jge
and
stc
jle
icebp
out
cltd
shlb
inc
pushf
fisttpl
pop
cltd
sbb
loope
lret
aas
shlb
and
push
cli
fimuls
test
ljmp
movsl
mov
bound
push
cmp
sbb
push
ds
popa
mov
repz
sbb
inc
out
dec
lods
lock
ss
test
mov
mov
mov
mov
push
enter
pop
js
stos
xchg
filds
lock
jmp
push
movsb
sbb
xor
fcomps
lret
bound
cmp
test
pop
and
sbb
add
ud1
and
in
sbb
push
mov
sbb
and
sub
std
sbb
out
mov
scas
pop
je
in
xchg
push
jle
jne
pop
pop
mov
jno
mov
cmp
pop
shll
loop
push
cli
jecxz
daa
jnp
sahf
cli
arpl
jmp
jbe
adc
inc
and
test
scas
or
or
mov
rolb
add
rcrl
inc
and
xchg
insb
dec
je
shl
xchg
mov
and
negl
sbb
aaa
std
aaa
jbe
mov
lcall
fcoms
bound
sbbl
push
lods
scas
bound
popf
pop
sub
push
mov
or
jbe
aam
mov
pop
insb
and
in
pop
push
subb
loop
idivl
andl
xchg
and
add
mov
scas
out
push
in
movsl
jno
in
aam
pop
test
fcomp
int
push
mov
imul
jne
je
dec
mov
shrb
sub
pop
jo
stos
cltd
mov
xchg
sub
cmp
sbb
dec
adc
cmpsb
lea
pop
push
pop
push
xor
sarb
insl
sub
inc
arpl
pop
jb
ja
bound
sti
aaa
jo
cwtl
jb
dec
lods
inc
xchg
jnp
loope
aam
gs
and
fsubl
push
bound
es
mov
pop
outsl
cmp
or
outsb
icebp
push
imul
loop
adc
mov
xchg
shll
sub
mov
cmp
mul
movsl
loope
xlat
push
rclb
sbb
inc
into
and
mov
inc
push
je
std
ret
aas
cmp
or
push
push
aaa
dec
push
push
scas
rcll
adcb
jl
xchg
xchg
cwtl
mov
sar
lods
jb
mov
mov
adc
out
test
mov
dec
in
stc
push
fidivrs
sub
adc
xchg
sbb
insb
adc
cmpsl
nopl
dec
dec
push
aas
pusha
sbb
cmc
dec
arpl
and
fnstcw
inc
push
pushf
popf
sbb
fdivrl
xchg
xchg
pop
out
fidivrl
sbb
adc
mov
push
aas
jecxz
and
mov
aaa
ja
lcall
sub
mov
mov
and
add
out
shlb
add
mov
fcmovnu
daa
inc
push
mov
pop
cmp
mov
or
dec
jle
xchg
sbb
mov
push
mov
sbb
inc
jbe
xor
les
mov
ficomps
jg
pop
and
add
cwtl
adc
adc
sti
jecxz
add
in
mov
pop
pop
jnp
aaa
scas
mov
xor
and
add
stc
leave
dec
lods
dec
add
mov
mov
outsb
data16
mov
mov
pop
pusha
cmp
and
sarb
mov
aam
cs
pop
push
xchg
adc
out
xchg
mov
jnp
jae
xor
hlt
mov
dec
lcall
and
fnstcw
xchg
scas
mov
pop
mov
mov
fwait
xchg
ret
xchg
ret
xlat
icebp
pop
xchg
and
cmpsb
roll
insl
mov
scas
xor
mov
mov
cmpb
pop
aaa
jmp
jge
call
jge
mov
in
xor
push
fistps
xchg
adc
and
outsl
mov
jecxz
xor
add
jae
fwait
xor
in
mov
test
pop
xchg
mov
testb
cmp
push
mov
in
jo
mov
inc
sbb
mov
mov
and
mov
pop
mov
dec
outsb
cmp
and
pop
cmp
adc
sbb
sbb
cmp
dec
scas
jbe
dec
test
or
xlat
xchg
daa
repz
jnp
xchg
sub
mov
fildll
sti
push
inc
in
dec
fidivl
jne
dec
add
jle
pop
dec
or
xchg
pop
loope
pop
jns
gs
push
das
sbb
loopne
jae
nop
cmp
lods
and
mov
testl
pop
adc
xchg
inc
mov
ficoml
and
push
or
and
icebp
dec
pop
sbb
sti
push
push
cmpsl
fstl
jmp
push
mov
mov
jle
lods
je
cmp
mov
and
or
in
sub
dec
hlt
add
mov
sbb
sbb
or
sub
pop
test
icebp
fldt
mov
lret
mov
xor
loop
sbb
mov
jecxz
aas
jmp
dec
mov
push
cmp
int3
push
pop
sub
cmp
ds
lahf
std
ja
sub
aaa
int
add
pop
decb
mov
fcmovnb
shlb
js
sbb
pop
inc
xchg
stc
push
mov
jle
js
push
jle
int3
inc
aaa
mov
mov
test
insl
fwait
loope
dec
pop
xchg
pop
sbb
pop
out
dec
in
test
cmp
xor
sbb
push
std
push
xor
divl
sti
cmpb
les
and
inc
or
leave
fcompl
ss
mov
jns
jg
xchg
loope
pop
lret
or
lods
mov
mov
push
cmp
jle
movsb
fstp
fs
mov
adc
rcrb
pop
jmp
push
bound
out
inc
bound
hlt
in
outsl
mov
xchg
pop
add
jno
inc
arpl
push
std
sbb
jne
and
hlt
into
loop
push
adc
pop
outsb
sbb
cwtl
mov
icebp
dec
test
jp
movsl
imul
jnp
and
mov
push
ss
mov
mov
mov
jle
out
test
jg
jmp
in
cmpsw
hlt
add
mov
xor
rorb
aam
dec
cmp
notl
inc
fsubrl
mov
lock
jg
dec
out
enter
xchg
xor
dec
pop
push
pop
jle
dec
push
into
mov
cmpsl
stos
rcrb
mov
insb
imul
out
add
fdivs
popf
pop
sub
and
in
test
stos
lahf
aaa
sub
ss
xorl
idivb
pop
hlt
scas
push
pop
xorb
ret
mov
in
pop
lock
jnp
movsl
aaa
sub
stos
outsb
mov
stos
lcall
add
add
sub
xchg
outsb
leave
sbb
mov
cmpsb
aas
xchg
mov
out
push
data16
gs
cmp
pop
pop
in
jno
out
ds
adc
inc
sbb
jnp
xor
aaa
push
push
je
outsb
inc
jge
mov
sub
cmp
fchs
sbb
rcrb
push
ljmp
mov
push
sahf
inc
adc
mov
lret
cmpb
outsb
scas
mov
pop
or
pop
xchg
das
mov
dec
negb
inc
cltd
sub
add
jl
scas
mov
mov
ret
or
cld
out
shlb
lea
fs
push
adc
add
or
in
cmp
fstpl
push
rorl
pop
and
sbb
cli
adc
aam
imulb
rorl
push
jae
mov
daa
xor
in
movsl
dec
into
fbstp
scas
lods
sbb
xchg
pop
dec
out
push
mov
gs
aaa
adc
jp
hlt
pop
cmpsl
inc
scas
lahf
xchg
mov
aaa
push
insl
mov
or
push
jbe
arpl
jmp
push
mov
pop
mov
lods
pop
push
icebp
fnsave
xchg
pushf
jle
dec
pop
cld
stos
or
repnz
dec
je
cmp
add
push
arpl
test
add
xor
lods
aaa
or
pop
arpl
subl
in
int3
and
inc
int
daa
xor
std
les
sbb
dec
dec
ret
out
shlb
cmp
test
pop
jle
pop
sbb
insb
sbb
ds
mov
or
inc
repz
pop
mov
xor
push
mov
jp
out
shlb
aaa
xchg
gs
and
jle
jae
xchg
test
and
lds
shl
into
sub
jle
dec
adc
jge
je
push
in
call
push
inc
cs
xchg
adc
xchg
imulb
fisubs
jl
out
inc
mov
mov
fisubs
std
dec
sahf
or
dec
shl
sarl
sbb
xor
inc
or
xor
push
aaa
out
mov
add
push
fisttpll
xor
add
ljmp
sar
test
push
xchg
lds
sbb
jns
clc
fldcw
call
imul
cwtl
lahf
and
in
daa
loopne
pop
cmpsl
test
adc
cmp
sbb
or
jnp
mov
mov
das
jbe
sbb
js
pusha
inc
jbe
dec
testb
pop
sbb
cltd
ret
sbb
xor
mov
insl
inc
in
jns
les
loope
lea
jge
pop
mov
cmp
push
aas
mov
mov
loope
cmpsb
fucomip
imul
inc
jno
ljmp
cmpsb
addl
xor
pushf
adc
stos
sub
xchg
fadd
and
bound
adc
mov
std
lock
mov
mov
push
cmp
lahf
xchg
rcrl
or
jno
pop
fstpt
inc
fs
insl
xor
pop
mov
pop
jno
out
sti
pop
xor
paddsw
and
xchg
gs
xchg
jo
shll
mov
rorl
jbe
mov
jo
mov
xchg
and
sbb
push
add
rolb
jb
inc
push
stos
xchg
pop
sub
and
jbe
jo
pop
sbb
xorb
test
insl
movzbl
fldenv
lock
orb
xor
mov
rorl
fwait
imul
scas
add
in
fnstenv
sti
xorl
cltd
aaa
aad
sti
jle
ret
cmp
cltd
push
pop
movsl
cltd
mov
cmpsl
insw
std
mov
push
mov
je
nop
mov
mov
jb
mov
out
inc
mov
mov
mov
inc
lds
pop
cli
mov
mov
push
fcom
adc
loop
pop
sbb
adc
push
in
dec
dec
lcall
shld
push
push
out
jo
xchg
mov
mov
xchg
inc
pop
mov
stos
jl
into
push
inc
mov
pop
pop
mov
and
notl
push
lret
lods
push
cmc
pop
xchg
jp
jmp
adcl
push
repz
mov
cmp
mov
mov
enter
lret
pop
paddusw
aaa
test
insb
ss
pop
jecxz
nop
lret
or
push
sub
push
pop
mov
add
sub
xchg
hlt
push
outsb
lea
mov
add
addb
xlat
pop
frstor
push
data16
mov
or
call
lret
insb
lds
call
stos
jp
cmc
pop
das
out
arpl
lahf
cwtl
scas
jae
pushf
or
pushf
jecxz,pt
aam
add
adc
xchg
in
mov
repz
bound
pop
outsl
sub
or
fadds
loope
sub
data16
sbb
cld
pop
xchg
mov
sub
push
or
cmp
outsb
xchg
out
mov
mov
call
repz
cmpsb
add
add
mov
dec
xchg
out
add
and
daa
pushf
inc
cmp
push
fidivrs
lods
jecxz
int3
add
das
loop
dec
arpl
ret
out
sub
add
std
scas
and
pop
cmp
lcall
mov
jp
push
leave
adc
lahf
xor
in
xchg
es
mov
inc
and
in
sbb
leave
jg
pop
scas
sarl
mov
cltd
jmp
add
mov
vunpckhps
outsb
outsl
mov
mov
xor
loope
sub
pusha
mov
or
iret
jecxz
fstps
push
fstpl
sub
repz
cltd
xor
mov
xchg
out
pop
nop
xchg
fldl
outsb
mov
inc
loope
outsb
es
xchg
je
dec
dec
nop
rclb
lea
dec
ret
and
pop
imul
js
jecxz
jp
sbb
or
pop
pop
cltd
mov
and
mov
cld
adc
jle
xchg
xor
jmp
aad
aaa
inc
jae
stc
jne
inc
push
js
and
mov
lahf
or
add
jecxz
fstpt
out
add
fnsave
jl
xchg
jmp
call
cli
xor
add
mov
add
jb
mov
add
or
loope
cmp
popa
pop
jmp
mov
sbb
or
sahf
out
call
andb
mov
sbb
inc
out
jl
add
stos
cli
jge
pusha
jl
push
scas
sub
mov
loope
fidivrs
loopne
bound
stc
adc
jo
jbe
pop
sub
mov
test
or
faddl
sub
out
les
push
leave
adc
sti
loopne
jle
bound
pusha
xor
inc
out
and
or
faddl
les
out
ret
leave
xchg
aas
mov
sub
in
or
push
jmp
divl
scas
fldt
xchg
repz
aaa
jno
pop
cmp
test
daa
fwait
jp
sbb
or
mov
pop
arpl
fdivp
lea
mov
in
xchg
in
outsb
call
mov
cmc
sub
cmpsl
mov
daa
cld
mov
jge
pop
into
sysenter
inc
ret
push
dec
jmp
scas
shll
arpl
insb
mov
dec
dec
into
lahf
cwtl
xchg
movsl
dec
mov
xchg
ret
imul
sbb
inc
mov
jmp
outsl
add
or
aad
and
pop
mov
inc
push
pop
cwtl
mov
sbb
sub
add
inc
das
lahf
xchg
add
div
cmp
sub
mov
out
pop
frndint
lcall
mov
dec
pop
adc
mov
mov
mov
subl
bound
xchg
gs
mov
cmp
lock
es
push
and
cmp
adc
data16
testl
pop
and
pop
in
push
ret
fsubrs
adc
pushf
mov
dec
subl
mov
or
or
xlat
cmp
les
mov
lods
add
jb
xchg
cmp
xchg
mov
add
jno
sub
inc
pop
icebp
dec
jmp
pop
scas
bound
sbb
outsb
movsl
ljmp
inc
xchg
inc
push
pop
jae
add
mov
xchg
aam
sahf
push
push
jo
jg
sub
or
push
add
lret
imul
in
push
jmp
sub
and
scas
rclb
mov
xchg
cmp
cmp
scas
jge
pop
enter
and
jl
xor
or
fucomp
mov
sbb
jnp
aam
in
adc
fsubrl
bound
push
fmuls
jmp
scas
cmp
mov
push
inc
loope
dec
mov
pop
ficompl
repnz
pop
xchg
fldl
addr16
pushf
dec
notb
ret
ss
lea
ss
add
inc
sbb
jne
je
xor
idivl
fsubrs
lcall
or
pop
pop
xchg
mov
jno
data16
cmpb
xor
dec
dec
sub
cmp
pop
adc
push
and
loopne
subl
mov
mov
push
imul
add
aaa
cld
in
std
and
mov
outsl
sbb
mov
fsts
xor
add
out
mov
add
idivl
insb
scas
mov
pop
outsb
inc
scas
cmp
inc
add
jp
cmp
pop
jo
mov
icebp
cmp
mov
test
repnz
shrb
xchg
mov
lret
not
mov
xchg
icebp
mov
inc
mov
push
lods
and
popa
cmp
xor
fcompl
sub
dec
jnp
sbb
mov
loope
mov
dec
in
jle
push
lret
into
js
arpl
movd
inc
cwtl
stc
clc
pop
pop
and
cmc
ss
adc
shll
dec
add
pop
fildl
sarl
sub
jl
push
pop
mov
out
aaa
add
push
subb
pop
nop
mov
imul
pop
push
add
outsb
xor
icebp
mov
sbb
adc
test
xchg
adc
dec
pop
dec
pushl
push
fdivl
add
sub
fildl
popf
push
ficoml
jo
pop
fs
sti
aam
xchg
in
dec
lahf
xchg
pop
mov
push
push
push
mov
mov
pop
mov
in
sarl
push
sahf
lea
mov
pop
aam
xchg
aaa
fnsave
adc
mov
enter
inc
arpl
pop
dec
cli
jle
mov
es
push
shlb
jl
adc
pop
lock
pop
or
rorl
jl
and
dec
rcl
lcall
and
mov
xchg
std
push
push
stos
in
adc
and
sbb
fisttpl
es
lds
or
movsl
jae
lods
mov
mov
pop
pop
inc
mov
jnp
inc
fcompl
jmp
movl
pop
pop
shll
inc
pop
adc
sbb
push
mov
ret
jne
pop
lret
test
cmp
pop
rcll
std
fs
xlat
shlb
push
jnp
das
xorl
stos
push
aaa
jbe
in
cmp
pushf
lods
push
stos
inc
adc
jge
dec
lods
test
dec
movsb
mov
and
push
outsl
or
xorb
jne
outsl
cmp
or
adc
lods
outsl
arpl
or
jecxz
fstl
push
push
jnp
mov
jg
sub
lahf
sub
aaa
mov
popa
addr16
stos
inc
or
push
ret
pusha
push
sub
mov
and
addr16
loopne
add
ss
adc
mov
push
in
mov
xor
ds
add
jl
push
adc
aam
pop
dec
and
mov
pop
sbb
xchg
gs
pop
fcmovu
cmc
mov
aad
stos
lcall
icebp
mov
jle
cltd
outsl
mov
jle
sbb
push
lds
sahf
sbb
or
mov
xor
mov
stc
sub
outsl
fmull
ror
or
out
push
subl
in
mov
mov
dec
xchg
in
es
scas
jmp
cmpsl
bound
dec
icebp
xchg
scas
pushf
in
mov
dec
fnstcw
pop
ss
pop
or
fcmovbe
adc
cmp
scas
add
sub
mull
jbe
outsl
jle
mov
xchg
push
jl
push
xor
pop
int
mov
mov
test
loop
sti
ss
cmpsb
in
lods
or
and
jle
pop
mov
add
lds
push
in
cmp
jae
nop
push
and
inc
push
aaa
xor
insb
jae
dec
test
js
stos
ds
mov
or
dec
mov
pop
lea
push
and
divl
adc
aas
ss
insb
push
insl
pop
pop
or
add
repz
incl
sbb
and
pop
pop
bound
xchg
and
mov
fwait
data16
aaa
add
lcall
in
xchg
dec
xor
cmp
sub
pop
jmp
jae
dec
nop
sbb
jle
mov
insb
xchg
mov
pop
ret
dec
test
imul
das
fldenv
bnd
dec
adc
das
push
jno
pusha
xchg
dec
inc
popa
mov
out
icebp
shlb
push
test
adc
jge
loope
sbb
pop
and
out
je
call
xchg
adc
cmp
cmp
insb
packsswb
push
pop
es
jecxz
sahf
add
std
sbb
les
jbe
mov
mov
add
test
int
imul
push
jne
scas
movsl
or
mov
sub
jge
outsb
pop
sti
adc
arpl
jg
sbb
arpl
push
das
sub
add
bound
sar
or
addr16
adc
or
and
arpl
sarl
dec
add
mov
jle
lea
mov
stos
mov
movsb
nop
push
dec
adc
sbb
pop
push
hlt
xor
cmpl
add
pop
sub
std
xchg
addl
inc
pop
adc
pop
loopne
mov
imul
inc
pop
movsl
outsb
mov
jnp
rcrb
movsl
call
pop
popa
mov
adc
loopne
fwait
roll
addb
nop
aad
sbb
loop
jno
sbb
nop
dec
mov
in
xchg
fmull
xchg
pop
jl
inc
add
in
xchg
or
loope
sub
push
xchg
and
cld
cmpsb
idivl
xchg
cmp
bound
std
adcb
mov
lret
daa
cmp
pause
scas
mov
push
ret
sub
sbb
push
mov
inc
mov
pop
lcall
mov
in
sti
outsb
inc
gs
xchg
jae
sbb
fnclex
std
pop
cmp
cli
loopne
pushf
in
fisubs
repnz
xor
out
sub
cmp
cli
xor
xor
insb
repz
sub
std
stos
dec
adc
jmp
sbb
cld
fsubrl
pop
add
mov
test
lcall
mov
aaa
xchg
xchg
and
int3
popf
hlt
data16
aam
loopne,pt
lea
push
inc
int3
inc
adc
jae
aaa
pop
sti
test
push
fsubs
mov
int
add
adc
and
or
fwait
pushf
jbe
cmp
jns
fnsave
mov
sbb
xchg
jge
push
cmpsb
fbstp
inc
cltd
add
sti
sbb
cmpsl
inc
mov
push
or
in
dec
pop
lods
out
fadds
cltd
rcl
push
push
addr16
lret
jbe
mov
rcrb
adc
stos
mov
dec
repnz
xor
pop
xchg
popa
in
stc
pop
push
imul
or
cmp
sbb
aaa
pop
sbb
sub
das
pop
or
mov
adc
xor
jbe
insb
or
lret
sub
pop
fsubp
in
stos
sbb
dec
xchg
cmp
push
loop
push
mov
test
test
xchg
out
pop
sti
ret
xor
add
out
and
adc
data16
outsl
dec
loope
icebp
ffreep
je
ja
sub
jge
inc
adc
mov
push
aam
or
mov
repz
sti
sbb
xchg
cmp
inc
push
jbe
scas
popf
cwtl
js
arpl
sbb
mov
push
pop
dec
sub
jno
cmp
pop
cli
xchg
push
loopne
or
mov
adc
mov
push
sbb
lret
rorl
add
mov
fildl
push
mov
mov
aam
xchg
mov
imul
inc
aad
add
jle
jle
andl
pop
pop
cmp
lahf
xchg
nop
mov
test
test
mov
stc
jmp
sar
sti
iret
and
stos
pop
mov
pop
sarl
loope
fnstcw
push
adc
xchg
sub
and
mov
pop
mov
test
addr16
jecxz
shlb
xchg
push
or
repz
out
pop
adcb
inc
outsb
pop
push
stos
mov
jg
aad
aaa
or
pop
aad
repz
cmpsb
decl
push
jg
aam
xchg
pop
std
jmp
in
mov
mov
mov
jb
xor
xor
cmpsb
shlb
inc
xchg
add
sti
inc
cmpl
xor
sub
or
aam
cli
mov
xor
shlb
cs
push
add
sahf
jg
rol
xor
jp
repz
jmp
rcrl
inc
cld
pushf
sbb
cs
jecxz
outsl
push
aaa
scas
mov
test
pop
sub
movsl
add
shll
jmp
mov
test
enter
cmp
mov
xor
sbb
cmpsb
femms
cwtl
and
and
popa
lock
jg
pop
inc
icebp
shlb
inc
aaa
in
int
jl
add
arpl
and
enter
or
adc
pop
stos
dec
add
push
in
pusha
jno
cmpsl
fcomps
add
test
es
pop
or
push
adc
sbb
push
fs
hlt
jo
cmp
jbe
or
outsl
push
jmp
loope
inc
loop
test
cmp
je
pop
rcl
cli
mov
repnz
inc
dec
fwait
xlat
ret
mov
inc
pop
jmp
arpl
icebp
aam
dec
pop
cmpsl
loopne
pop
cwtl
arpl
xlat
test
jns
stos
cwtl
test
cmpsl
cli
inc
jae
mov
shrb
ljmp
int
imul
outsb
or
pop
scas
lret
mov
adc
test
loopne
out
aad
adc
imul
or
bound
inc
dec
out
xchg
pop
mov
loope
cwtl
mov
aaa
xchg
sub
dec
shlb
pop
push
xchg
mov
jecxz
adc
sbb
pop
inc
ljmp
push
mov
or
xorb
push
mul
add
in
mov
pop
sbb
push
mov
ss
jnp
xchg
fcoms
jge
jle
rcl
inc
cs
xchg
in
jbe
test
dec
mov
inc
add
jge
ds
sbb
pop
and
mov
mov
xor
add
repz
dec
pop
mov
loop
pop
sbb
mov
fiaddl
and
sbb
out
mov
ljmp
loope
mov
out
jle
adc
sub
into
shll
mov
jle
dec
mov
pop
and
ss
pop
sub
cmp
test
mov
xchg
or
hlt
mov
data16
mov
lcall
cmpsl
out
adc
outsl
mov
test
loop
pop
loop
xchg
addb
mov
mov
push
push
clc
mov
jae
fsubrs
mov
fwait
xchg
mov
cltd
repnz
shl
jg
loope
aaa
mov
sub
pop
int3
sarl
stc
pop
jne
cwtl
lock
aaa
cmp
das
mov
pop
into
dec
mov
xchg
jo
mov
mov
repnz
push
pop
push
in
cmpsl
add
add
inc
or
sbb
cmp
push
in
enter
mov
inc
arpl
std
daa
mov
mov
sti
cmp
inc
and
loope
add
pop
jp
std
outsb
cwtl
sbb
int3
cmp
add
popa
lock
cmpsl
sahf
lock
call
test
inc
icebp
pop
sbb
mov
lods
push
pop
sarb
in
and
imul
fsubrp
bound
sbbb
xchg
loopne
aaa
jno
mov
and
pop
push
or
mov
stos
in
outsb
ficoml
mov
mov
mov
lock
pop
jne
sub
icebp
xor
fsubs
jp
add
pop
push
mov
loope
push
mul
and
stc
nop
pop
push
insb
je
fs
stos
loope
aaa
lods
in
and
cs
or
pop
pushf
scas
mov
es
das
lret
inc
in
imul
into
lods
in
aaa
popa
xchg
xor
cmp
cmp
xor
add
mov
insb
jle
mov
idivl
outsb
inc
decb
fmull
in
movsb
jmp
sbb
push
jbe
xor
stos
xchg
aam
mov
ja
mov
lea
int
out
daa
adc
pop
adc
pop
icebp
sbb
rcrb
das
cmp
pop
mov
xchg
rcrb
sub
loop
pop
dec
jbe
jb
ror
inc
ds
dec
add
xchg
sub
jl
ds
mov
loopne
cli
push
pop
ret
shrl
jae
in
sbb
inc
pop
push
div
xor
adc
fsubrp
arpl
xor
jae
or
pop
or
mov
repnz
mov
xor
push
dec
jp
jae
les
je
sbb
xchg
dec
pop
inc
sbb
mov
or
mov
movq
out
jp
sbb
lds
or
ja
sub
mov
pop
jo
sahf
sbb
bound
sbb
shrl
adc
add
ret
mov
cmpsb
xchg
or
sbb
aaa
or
cltd
scas
rorl
flds
xchg
mov
aam
jnp
push
aad
or
sub
pop
aaa
push
sbb
dec
xchg
add
or
leave
push
bound
adc
call
test
sub
push
xor
and
int
or
mull
aam
mov
dec
ror
ljmp
jb
dec
movsb
repz
daa
loopne
push
pop
jmp
pop
mov
sbb
in
pushf
and
movsl
shll
pop
or
cwtl
mov
in
ds
mov
inc
pop
mov
addl
sub
test
inc
push
add
sbbl
movsb
cmpsb
push
jno
scas
std
dec
ss
call
and
inc
inc
aad
push
pop
adc
jbe
mov
or
data16
xchg
pop
in
or
xor
pop
xchg
push
and
pop
sbb
mov
shll
ja
rolb
inc
adc
mov
enter
icebp
xor
arpl
enter
push
lret
mov
xor
pop
imulb
in
mov
out
pop
cmp
movl
test
jl
cmp
sti
jb
push
cmp
pop
or
sbb
mov
jnp
iret
arpl
pop
xor
aaa
shrl
xor
loop
mov
xchg
push
cmpsb
std
mov
mov
cmp
movsl
popf
mov
xchg
hlt
inc
mov
push
fildl
addb
aam
jle
adc
mov
xor
add
je
bound
sub
dec
sub
pop
mov
aam
loope
pushf
rolb
in
int3
mov
inc
mov
pop
lret
test
mov
xchg
in
jae
pop
test
and
sbb
aad
arpl
data16
mov
insb
not
cmp
sub
outsb
sub
adc
mov
lret
pop
xchg
cmp
mov
std
xchg
push
lods
xor
or
fidivrs
mov
insb
xchg
dec
push
pop
pop
loope
xchg
or
movsb
sbb
mov
cmp
pop
pop
xor
dec
and
cld
xchg
pop
push
addr16
and
js
mov
ljmp
fcomi
xchg
fdivrl
js
xor
lret
aam
xchg
xchg
and
sub
mov
je
sbb
sub
imul
or
lret
xchg
fsubl
lds
adc
loope
lods
out
dec
aaa
addb
and
inc
rcrl
xor
or
lret
cltd
cmpsb
add
pop
cmpsl
loopne
rclb
sbb
jle
sbb
dec
cli
xchg
sbb
fstps
scas
xchg
aas
out
sbb
in
sbb
fmull
sbb
loope
cmp
jg
arpl
adc
repnz
adc
pusha
out
xchg
add
xchg
sti
dec
xor
std
add
cmp
aaa
loop
and
movsl
mov
rol
movsl
sarl
push
push
cltd
dec
sub
aaa
mov
sub
aaa
aad
dec
xchg
sbb
das
pop
add
push
cmpsl
sbb
int
mov
sbb
cmpxchg
clc
cmc
pushf
mov
adc
sub
outsb
mov
cld
and
mov
dec
cmpsl
dec
push
sbb
mov
ret
mov
addr16
jp
lahf
lods
adcb
pop
push
pop
adc
outsb
clc
xchg
int3
and
aaa
popf
mov
mov
pop
stc
fndisi(8087
adc
and
loop
jle
out
xchg
popa
mov
push
xchg
push
inc
xlat
out
int3
push
in
mov
push
or
nop
out
in
or
fimull
adc
iret
mov
dec
int3
std
adc
push
sbb
sbb
lahf
out
stc
outsl
adc
rcll
jecxz
sbb
lea
and
testl
jmp
cmp
ja
iret
scas
shrb
add
orl
rcrl
sub
scas
stc
mov
mov
jno
xlat
insl
pop
or
stc
movsl
cmp
in
and
mov
aaa
dec
aad
bound
in
jecxz
push
cwtl
pop
and
mov
xchg
int3
mov
add
das
sbb
lret
dec
adc
dec
cs
pop
testl
and
mov
adc
lcall
cmpsb
divl
outsb
shll
pop
cmp
outsb
sbb
pop
mov
add
jp
push
pop
out
cmpsb
pop
dec
outsl
mov
adc
and
inc
cmp
setge
out
pop
shrb
nop
in
rol
sahf
int
mov
cltd
jl
cwtl
jge
loope
nop
cmp
cmp
roll
cmp
inc
jo
pop
insb
mov
jns
enter
add
push
leave
insb
dec
lds
sbb
ficompl
and
jecxz
pop
and
popl
lea
ret
ja
fwait
lcall
or
loop
aaa
xchg
cmp
or
push
sbb
loope
cmpsb
pop
out
jbe
cmp
loopne
fildl
jp
pop
pop
std
outsb
mov
jg
ret
insb
jle
xor
pop
cmc
cmp
adc
cmpsb
scas
fbstp
mov
cmp
cmp
xor
aaa
das
cltd
imul
loope
push
bound
push
in
pop
stos
popf
dec
aaa
xor
repnz
loope
call
enter
mov
bound
pop
lds
mov
push
mov
stc
shlb
sbb
loop
push
cwtl
xor
inc
gs
inc
inc
xchg
je
fisttpl
sub
dec
cmp
cmp
pop
ja
xchg
inc
out
xor
fcomps
inc
push
add
scas
jno
lret
jge
lock
cli
dec
enter
mov
cmp
or
dec
out
pop
inc
jle
cld
js
sub
sub
dec
xchg
cmp
ret
mov
cmpsb
fildll
sbb
dec
adc
jle
aaa
jge
arpl
scas
cltd
jl
pop
xchg
sub
sbb
add
bound
loope
inc
insl
lret
fistpl
sahf
dec
pusha
pop
in
fisubrs
je
loop
push
les
popf
jo
insl
cmp
xchg
hlt
aaa
push
mov
jnp
mov
popf
ds
arpl
mov
jns
jecxz
pop
fildll
imul
dec
and
adc
adc
xchg
mov
mov
scas
push
cltd
hlt
stos
xchg
pop
cmp
in
sub
push
das
push
fdivrs
push
mov
ljmp
lods
in
jo
sub
or
cltd
in
loop
outsl
sbb
insl
aad
pop
mov
je
jle
pop
das
or
and
sahf
fdivrs
enter
and
jmp
fwait
or
jle
mov
jp
stos
inc
mov
inc
sub
mov
ret
hlt
jmp
cltd
aaa
ja
sahf
enter
xchg
sub
cmpsl
sbb
addr16
and
fisttps
lea
cli
das
in
jne
scas
shll
adc
inc
adc
idiv
arpl
stos
pop
or
sub
mov
mov
push
mov
push
loopne
movsl
shl
xor
fld1
movsb
cmp
add
das
je
or
xor
call
and
aas
push
aaa
push
ret
jne
bound
xor
aam
stos
pop
aas
or
add
mov
and
mov
js
cmpsl
inc
insl
aaa
aad
ss
sub
jmp
lret
outsl
push
jbe
pop
pop
cmp
stc
dec
fwait
fwait
pusha
aas
negl
notl
call
bound
int3
fmull
add
cmp
adc
xor
adc
stos
or
shrl
sahf
ds
je
lcall
mov
and
in
mull
inc
cmp
hlt
popf
ret
mov
arpl
push
lods
pop
push
push
pop
ja
adc
popf
cmp
pop
adc
shl
pop
daa
bound
xchg
icebp
xchg
js
xchg
pop
xchg
mov
add
xchg
aaa
jle
mov
mov
out
inc
adc
fnstcw
xchg
pop
jle
sub
leave
jns
push
loop
inc
sub
xchg
push
clc
pop
pop
mov
lahf
lret
fnstsw
cmp
push
movsl
jbe
lahf
push
ffreep
mov
sub
stos
ja
bound
pop
jmp
shl
or
call
jo
scas
mov
cmp
loope
aaa
and
adc
les
jle
daa
xorb
fstpt
imul
data16
sbb
cltd
xor
push
mov
lret
mov
std
sub
fsubr
shll
jne
pop
decl
into
xor
mov
jle
fwait
cmp
int3
fbstp
inc
push
in
idiv
xchg
lock
ss
inc
cs
fsubs
in
mov
xor
pop
pop
sbb
into
leave
adc
mov
cmp
pop
out
clc
xchg
cmpl
and
and
imul
jne
sahf
inc
mov
std
push
pop
pop
push
dec
jmp
add
xor
and
xchg
push
push
dec
ss
mov
out
outsb
subl
test
jle
mov
cmp
mov
popa
xchg
jno
repnz
mov
inc
addl
stc
jl
pop
gs
outsb
out
mov
mov
cwtl
add
dec
mov
xor
mov
jnp
enter
cwtl
bound
mov
loope
aas
cmp
mov
sub
pop
sbb
mov
sub
add
stos
sti
loope
adc
jecxz
js
mov
fstpt
xchg
jg
or
das
je
xor
pop
inc
bound
ss
dec
cmp
lret
movsl
xor
and
arpl
cmp
mov
enter
imul
ss
in
addb
and
xchg
div
cltd
lret
and
cmpsb
jno
sti
pop
jnp
loopne
xor
cmp
mov
scas
xchg
cmpsb
inc
pop
arpl
fdivrl
xor
lock
xchg
bound
xchg
in
sbb
in
mov
in
add
add
lret
shrb
xchg
aaa
loope
daa
mov
xchg
push
in
xchg
sbb
das
idivl
push
test
xchg
cli
and
popa
jp
inc
or
fwait
arpl
icebp
in
fnstenv
mov
in
lretw
or
jne
mov
sub
mov
push
pop
mov
or
iret
push
pop
test
out
dec
xor
das
or
adc
pop
xchg
sti
int
outsb
test
test
pop
push
add
pop
jns
in
mov
xor
scas
ret
sbb
inc
push
pop
stos
jl
test
inc
out
mov
flds
andb
xor
jae
lret
mov
pop
mov
ljmp
or
int3
jl
out
pop
push
and
mov
pop
add
xor
sahf
sub
adc
lea
shlb
insl
pop
mov
mov
fs
popf
int3
fdivs
push
fmul
sti
cmp
xchg
pusha
fsubs
les
mov
mov
in
test
adc
adc
adc
outsl
test
jbe
xor
mov
push
mov
xor
ss
mov
or
lcall
mov
jmp
mov
pop
data16
add
jns
pop
push
add
push
mov
mov
mov
sub
pop
out
movsl
shlb
mov
cmp
pushf
movsl
xor
xchg
cmp
popf
cmp
iret
leave
dec
aaa
lds
mov
hlt
notb
dec
movsb
bswap
jmp
test
sti
aam
sbb
leave
dec
dec
jo
mov
sbb
lods
or
paddsb
lahf
movsl
inc
xchg
jae
mov
cmp
dec
test
cmpsl
add
sbb
fbstp
mov
adc
aam
cmpb
push
and
mov
aaa
orb
int
dec
int
adc
ss
ret
or
insl
add
push
sbb
int3
pusha
mov
xchg
xor
mov
push
loope
adc
lahf
xor
cmp
cmp
stc
rorl
mov
jne
fbld
xchg
and
mov
sahf
cs
sbb
and
sbb
pusha
lock
into
jg
bnd
das
movsl
adc
adc
pop
orl
aad
jecxz
cld
repnz
ja
adc
jp
adc
pop
pop
insl
pop
inc
movsl
mov
push
xchg
enter
adc
aaa
dec
inc
mov
jo
outsb
sbb
clc
push
push
sahf
sub
call
jbe
popa
and
sbb
ds
cmp
sti
ljmp
ret
pop
push
sub
push
fucom
cmp
push
sbb
jmp
adc
fs
loope
xchg
or
rolb
ret
lea
dec
scas
cli
outsl
in
pop
pop
aaa
adc
lcall
push
jg
lea
dec
enter
stos
cmp
adc
cmp
pop
lret
jge
jle
aaa
std
gs
pop
fucom
outsl
rcll
mov
pop
ret
bound
xor
es
sbb
ret
repz
cmp
dec
xchg
andb
sti
aaa
mov
push
ss
inc
inc
pop
insl
sub
stos
sbb
pop
jno
scas
stc
mov
psubd
mov
xchg
xchg
out
into
adc
xchg
ds
icebp
in
lcall
inc
cmp
sub
enter
pushf
xor
cmc
les
scas
bound
cwtl
xor
out
call
push
stos
pop
cmp
rcl
lcall
out
int
mov
add
repz
stos
xor
aaa
dec
fs
sbb
jecxz
sahf
mov
mov
or
push
mov
mov
scas
bound
mov
add
mov
mov
cmp
jno
stos
mov
shll
orb
push
adc
adc
in
mov
inc
inc
cmpsl
fldt
imul
jbe
xlat
pop
pop
fisttpll
add
inc
mov
enter
test
in
mov
arpl
imul
dec
xchg
decl
xor
into
js
aaa
sti
inc
mov
and
out
mov
mov
das
repz
int3
adc
cmp
vsubsd
rcrl
cmpsl
mov
popl
xchg
sub
pusha
js
cmp
fstl
sti
jbe
dec
cwtl
push
lret
pop
idiv
jecxz
jae
arpl
das
mov
cmp
mov
mov
popf
fsubs
cmp
shl
jnp
jecxz
pop
mov
arpl
xor
js
push
mov
int3
and
mov
je
xchg
das
sbb
icebp
push
sbb
loop
stos
mov
es
stc
rorl
sub
sti
stos
sbb
sbb
lock
int3
sbb
and
pop
sbb
push
xor
push
adc
cmpsl
pop
inc
fsub
aaa
movsl
jo
lods
enter
nop
stos
and
enter
fcos
xchg
shll
mov
push
test
sub
xchg
add
sti
data16
sub
in
push
inc
xchg
or
jbe
out
mov
sar
push
lret
insb
cltd
aaa
iret
mov
cli
xor
dec
shlb
in
cltd
in
and
das
pop
arpl
fsubs
ret
mov
faddl
jp
sub
push
inc
pop
fisttpll
mov
cmp
cmp
bound
shll
mov
ds
stos
mov
std
ret
pop
test
in
js
pop
imul
add
push
sbb
sbb
negl
outsb
in
push
fstpt
test
xor
push
xor
mov
out
push
cmp
outsl
loopne
mov
popa
iret
fdivs
adc
cmpsb
loope
pop
outsl
fstpt
mov
pop
lds
xchg
mov
ds
rorl
mov
test
cmpb
int
mov
jl
loopne
imul
mov
in
fidivs
or
arpl
sbb
xchg
dec
hlt
int
pop
aaa
add
loop
push
and
jae
push
adc
inc
push
jns
pop
hlt
jb
dec
cmp
repz
fwait
cmpsb
in
and
subb
jp
outsb
pushf
es
nop
mov
insl
shrl
stos
pop
xchg
sti
cli
xor
fcmovnu
js
adc
loop
xchg
aaa
xor
icebp
mov
pop
xchg
sub
inc
inc
pop
data16
and
sub
nop
movsb
out
push
or
mov
out
push
mov
lock
insl
jg
cmp
fwait
adc
in
rcrl
nop
imul
add
loopne
mov
in
ja
insl
int3
aaa
ret
out
pavgw
push
sbb
scas
sti
cli
lret
shrb
arpl
ret
pop
add
jne
aaa
outsl
sbb
sahf
pop
add
xor
call
test
les
cs
mov
pop
imul
nop
roll
and
cmc
mov
pop
mov
loop
cwtl
ret
sbb
xor
enter
call
imul
mov
adc
data16
or
sbb
sbb
push
sbb
out
pop
lret
dec
cmc
aaa
cld
push
jne
das
fsubs
mov
pop
add
out
jge
inc
mov
mov
add
sub
jo
ja
cli
pop
jge,pn
pop
inc
notrack
pop
sbb
add
andl
cmpb
and
insb
push
andb
cmp
fwait
dec
xchg
inc
mov
fcomps
aam
jmp
xor
mov
add
jge
sbb
leave
in
sahf
sbb
push
sbb
cld
mov
pop
pop
aas
popa
out
ss
cmp
push
sti
outsb
sub
insb
divb
pop
pop
sti
icebp
std
adc
sbb
or
xchg
xor
in
in
mov
mov
stos
mov
and
sti
inc
push
out
aaa
sarl
outsb
call
test
sub
cmpsb
fmulp
cld
dec
stc
sahf
loopne
jl
cmp
outsb
sti
pop
mov
xorb
mov
hlt
or
and
xchg
popf
movsl
xchg
aam
mov
add
jle
sub
js
pop
mull
cld
pop
call
xlat
stos
dec
push
repnz
inc
mov
adc
fnstenv
cld
lcall
call
mov
je
cmp
cmp
sbb
in
cmpsl
aaa
adcb
fs
int3
popa
add
cmc
sub
fstl
sbb
outsb
sbb
xchg
jbe
adc
jne
mov
add
and
mov
add
lahf
addr16
push
jl
jbe
lea
xchg
cmp
fsub
sub
pusha
cmp
jns
pop
fstl
mov
arpl
pop
mov
mov
imul
mov
and
and
mov
sbb
push
sti
mov
cmp
mov
mov
inc
idiv
test
mov
scas
rcrl
mov
cmpsl
mulb
pop
cmp
icebp
loope
jmp
enter
jmp
imul
fmulp
hlt
jns
mov
sbb
add
aaa
cmc
lock
inc
negb
ds
sub
movsl
cmpsb
fcomps
mov
inc
sub
mov
mov
xchg
sub
sbb
push
push
mov
pop
rolb
and
incl
fstpl
clc
jo
mov
lods
aaa
fidivrl
jmp
loop
aaa
mov
cwtl
dec
sti
jle
xchg
in
sbb
xorb
cmp
mov
push
pop
mov
enter
sub
aad
and
mov
mov
pop
jl
in
enter
outsl
mov
xor
decl
sbb
mov
fisubl
rcrl
icebp
ds
ljmp
ret
adc
and
or
ss
xor
or
movsb
sub
rcrb
loop
sub
mov
scas
add
add
push
ret
scas
sbb
repz
in
mov
addr16
or
pop
push
cmpsl
sub
inc
arpl
lock
int
fmul
dec
jg
fistpl
and
scas
cwtl
dec
jmp
adc
mov
cmp
stos
push
fstps
mov
and
xchg
or
sbb
pop
mov
ss
fbstp
push
outsb
add
push
outsl
sar
in
sbb
sbb
dec
jns
inc
mov
data16
stos
sbb
aam
dec
push
inc
adc
push
jp
mov
sub
cmc
cmp
mov
popa
and
dec
mov
jecxz
dec
xor
push
dec
inc
inc
addr16
xchg
pop
cmpsb
fdivrl
push
int3
cmpsl
dec
adc
and
jnp
sub
and
cmpsb
scas
mov
imul
inc
outsl
dec
cmp
in
popa
xchg
decl
cmp
cmpxchg
iret
enter
loop
test
cltd
test
ret
arpl
sbb
sbb
cmp
flds
shll
jg
nop
cwtl
aad
adc
xchg
mov
in
sbb
mov
rorb
cmp
arpl
adc
ds
bound
mov
pop
jl
jle
cmp
and
in
aam
out
iret
sbb
or
inc
or
jne
pop
pop
sbb
pop
popa
xor
movsl
cmpsb
jle
pop
xor
pop
adc
int
fstpl
push
jle
lods
xor
mov
lock
sub
insb
andl
jg
arpl
jbe
and
sbb
pop
push
into
cmp
jmp
push
xchg
xchg
sbb
jnp
fmull
popf
adc
cmp
movsl
clc
imul
aaa
cmp
lock
sbb
jl
pop
jmp
xchg
mov
dec
push
inc
cmp
jle
daa
js
jne
push
int3
push
add
push
xor
daa
sti
jbe
pop
mov
sbb
stos
push
fistpll
test
dec
push
pop
data16
popa
sub
pop
testl
std
dec
scas
jp
pushf
dec
push
fiadds
pop
repnz
pop
pop
aaa
ret
shl
jg
sti
xor
push
insl
aaa
sbb
shll
out
std
or
jge
sbb
mov
cmp
push
inc
and
xor
aaa
mov
test
lret
xor
and
xor
cmp
push
aas
in
sbb
outsb
lret
pop
jae
push
imul
sbb
clc
fadds
and
xchg
imul
inc
jp
loopne
insb
outsb
addl
mov
cltd
stos
loope
push
mov
in
cmp
fdivs
icebp
inc
insl
push
adc
in
loope
sbb
in
inc
jne
xchg
push
add
mov
scas
jbe
dec
ljmp
xchg
sqrtps
pushf
in
push
stc
test
or
jecxz
jbe
inc
xor
jmp
jle
aaa
xlat
bound
mov
icebp
lret
dec
pop
pop
repz
les
mov
out
movsb
pop
addr16
repnz
cmc
sbb
cltd
int3
out
outsl
jle
fwait
aad
adc
push
daa
inc
les
aam
aam
dec
outsb
inc
aam
movsl
xchg
or
nop
icebp
jae
pop
in
inc
fistl
stos
shlb
sahf
loop
arpl
jle
dec
aam
mov
or
mov
das
mov
cmp
stos
fdivs
sbb
test
inc
jecxz
call
push
jecxz
dec
inc
iret
arpl
mov
pop
push
sbb
sbb
cmp
stos
adc
popf
pop
jns
or
push
fildll
push
ss
out
or
push
in
sbb
lret
pushf
pop
fildll
adc
ret
mov
jb
push
icebp
jecxz
outsb
aaa
insb
std
popa
cmp
or
mov
imul
pop
pop
sbb
adc
mov
cmpsb
push
sub
cmp
pop
fwait
jmp
sbb
pop
rorl
mov
hlt
jo
xchg
push
inc
sub
stos
das
in
stc
lock
lock
add
imul
jmp
cli
mov
jmp
iret
xchg
lcall
les
cwtl
sbb
cmp
icebp
push
repz
dec
loope
aaa
add
or
xchg
adc
ret
std
adc
jle
jno
jp
pop
movsb
or
jno
cmp
call
adc
cmp
fistps
shr
or
sub
les
nop
pop
jb
sub
cmpsl
stos
test
mov
mov
sub
iret
mov
pop
ljmp
xorb
ds
insl
pop
notl
test
pop
jo
and
add
and
add
dec
adc
je
jo
popa
std
out
jmp
in
pop
and
lods
xchg
jmp
push
mov
shll
xchg
int
loopne
aaa
mov
dec
std
adc
and
scas
aam
push
pop
lahf
gs
mov
and
ja
adc
sub
std
jecxz
or
jae
jne
jge
lods
nop
insl
adc
or
movsl
jp
xor
cmp
cmp
mov
icebp
cmpb
fwait
lock
push
loop
pushf
pop
cmc
sub
jae
clc
push
sbb
js
push
jae
adc
adc
sarb
sbb
jg
rolb
xor
adc
repz
ret
outsb
aaa
in
pusha
sbb
inc
std
push
sarb
in
addr16
jle
test
jns
enter
cmp
pop
push
cmp
mov
fucomp
jbe
and
ret
in
pop
mov
shlb
pop
mov
mov
dec
push
mov
stos
mov
mov
dec
loop
push
shlb
and
cmp
popf
test
daa
addb
js
in
idivb
pop
and
bound
mov
inc
xchg
push
lock
sbb
and
sarl
sub
pop
mov
sbb
cmp
shlb
in
cmp
push
cli
cmp
repz
pop
add
outsb
cltd
pop
sub
mov
es
lret
cwtl
mov
push
daa
sub
xchg
lods
mov
je
pop
mov
scas
out
mov
mov
sarb
jecxz
dec
or
jo
mov
mov
movsl
mov
pop
push
sbb
add
xchg
into
push
sahf
or
cld
xchg
or
inc
or
fidivrs
dec
and
dec
call
mov
mov
jbe
int
adc
jg
mov
xchg
push
sub
sahf
mov
repz
dec
jmp
dec
lock
jmp
sbb
fsubl
inc
fnclex
mov
mov
mov
inc
pop
mov
pop
subps
fdivrs
lret
cmp
xor
movsb
xor
mov
pop
jns
js
cmp
in
xchg
lret
aas
add
mov
pop
pusha
and
xor
mov
adc
js
ds
cli
test
es
in
pop
scas
and
sbb
pslld
mov
mov
and
jle
add
popf
je
push
cltd
cmp
jp
int
sub
sbb
lea
xor
pop
stos
mov
dec
jne
mov
jle
gs
ds
cltd
adc
andl
push
sub
dec
vcvtpd2psx
push
sbb
cmpsb
std
mov
jnp
aaa
clc
push
xchg
ret
jno
jecxz
push
lret
in
je
fisubrs
ficompl
cmp
ja
faddl
and
sarb
popa
or
rcrb
data16
das
pop
mov
je
inc
pop
xor
mov
inc
lods
insl
inc
cmp
mov
int3
ret
out
popa
bound
sbb
xlat
mov
sub
sbb
insb
xor
stos
mov
in
or
xchg
mov
cmp
inc
imull
or
aaa
mov
lahf
scas
loopne
mov
push
sbb
cmpsl
dec
aas
and
outsb
into
aaa
adc
cmp
dec
add
mov
fisttpl
ds
dec
sbb
fbstp
fs
or
addr16
pop
pop
call
and
mov
xchg
mov
mov
push
in
in
sahf
jbe
aaa
mov
sub
xor
in
cmp
rorl
jb
aas
es
sbb
fidivrs
lock
and
xchg
mov
cmpsb
icebp
packuswb
jb
push
aaa
mov
leave
jge
ret
inc
xchg
pop
out
out
icebp
sbb
in
jae
push
into
mov
cmp
cmp
subl
xor
ss
jbe
sbb
xchg
lods
cld
pop
push
or
frndint
sub
adc
jp
adc
dec
pop
sbb
push
shlb
pop
cmpsb
xor
fdivl
mov
cmp
inc
mov
test
dec
add
sar
notb
data16
loopne
mov
hlt
push
add
cmp
mov
jnp
lret
mov
add
jle
ret
pop
lret
fnclex
push
aaa
xchg
fbld
sbb
insl
sbb
pop
push
aaa
stc
cli
jbe
or
test
pop
int
roll
push
jmp
test
outsl
outsb
sbb
dec
add
jge
imul
xor
ret
iret
movsl
dec
addb
xor
add
dec
inc
loope
imul
xchg
dec
je
int3
icebp
xchg
std
arpl
jle
sbb
cmpsl
cli
cltd
pop
cltd
xor
mov
movsl
out
insb
cmp
dec
cs
insb
adc
xor
outsb
mov
in
arpl
fdivrp
jb
out
popa
clc
mov
bound
adc
dec
test
mov
inc
and
insb
push
iret
dec
mov
call
pop
adc
mul
es
aaa
adc
mov
xor
and
inc
sub
ljmp
fucomi
xchg
mov
lret
sahf
xchg
sbb
mov
push
jo
ss
cmp
push
mov
dec
xchg
punpckhbw
data16
outsl
or
push
pop
sbb
mov
push
pop
sbb
arpl
sbbl
jecxz
ss
aas
ljmp
out
xor
inc
xchg
cmp
into
fdivl
and
mov
sbb
es
mov
addr16
les
add
je
mov
aad
push
mov
push
cwtl
push
inc
adc
pop
cltd
mov
in
mov
pop
push
jle
outsb
push
jl
push
mov
push
add
icebp
hlt
dec
dec
cs
push
push
repz
adc
dec
ss
xchg
bound
idivl
jbe
mov
sarb
pop
or
out
jecxz
jle
fs
into
call
push
pop
int3
fstpl
dec
fstpt
mov
pop
push
sub
aaa
pop
adc
lds
outsb
xchg
addr16
and
gs
sbb
repz
movsl
popf
push
popf
pop
in
stos
mov
mov
repz
dec
enter
add
cltd
lock
aaa
fs
divl
adc
jp
mov
cltd
dec
into
jae
dec
insl
sub
cmp
ret
icebp
xchg
inc
xchg
mov
arpl
loopne
les
aaa
xor
pop
aas
aad
outsl
in
rolb
mov
mov
lcall
addr16
cltd
addr16
mov
sbb
xor
fnstenvs
jmp
pop
lods
negb
aas
enter
and
cltd
jle
xchg
repz
mov
into
xchg
aaa
dec
mov
sub
icebp
fists
or
pop
jg
bound
mov
mov
pop
sti
sbb
push
test
xor
insb
xor
sbb
xchg
insb
xchg
lods
sbbb
ret
mov
aas
push
and
cmp
dec
mov
mov
mov
lret
inc
in
aad
mov
jno
add
or
sti
mov
rorl
inc
enter
jns
push
pop
outsl
imul
add
xchg
xchg
mov
fnstcw
subl
push
sbb
mov
cmp
mov
sbb
push
enter
mov
push
call
add
in
icebp
xor
addr16
dec
mov
in
xlat
xchg
adc
insb
adc
push
cmp
cmpsl
pop
xor
into
fildll
scas
ss
or
push
testl
xchg
lahf
dec
test
add
cmpsb
jle
leave
sti
mov
jp
push
jl
push
inc
shlb
jbe
sbb
sub
ret
fistpl
lret
ss
fs
fistps
mov
addb
shll
rolb
rcr
sub
pop
dec
add
mov
dec
cmpsb
call
das
adc
xlat
inc
push
lret
dec
push
cmpsb
fdivl
jecxz
addr16
push
and
jle
pop
imulb
dec
push
sbb
pop
push
pop
aad
fs
cmp
inc
sbb
push
dec
stos
fwait
mov
jg
push
out
rclb
mov
push
jge
mov
insl
daa
aaa
mov
inc
mov
scas
test
lea
sbb
dec
insl
or
jo
or
mov
scas
testl
int
dec
call
gs
inc
adc
xor
nop
jo
roll
dec
sbb
aaa
stos
push
shlb
loop
mov
cmpsb
mov
push
sub
scas
cmpb
pop
into
mov
nop
scas
insl
std
jbe
ror
adc
in
cmpsb
leave
nop
pop
cmp
pop
xchg
push
popf
dec
sub
bound
fwait
jno
jo
push
mov
aaa
cli
popf
push
orl
addr16
das
shrb
and
push
fisubl
push
xor
mov
inc
cmp
fdivrs
pop
and
imul
pop
in
je
sbb
mov
xor
inc
mov
dec
mov
imul
or
pop
lcall
push
mov
gs
clc
mov
pop
mov
jp
push
jne
jnp
inc
sti
pop
pop
and
cmp
clc
cmp
xor
push
sets
fcmovne
aam
int3
jecxz
add
jno
out
enter
test
mov
imul
push
add
int
adc
dec
mov
lret
jb
aas
jmp
jb
pop
fcoml
arpl
icebp
sub
mov
outsl
icebp
ja
pop
int3
movsb
fdivs
ret
adc
sbb
adcb
dec
mov
push
lods
in
push
fidivl
jo
add
jle
pop
out
aaa
ret
cmp
xchg
pushf
mov
cltd
jnp
lret
or
push
pusha
ret
fstpl
xor
xor
mov
movsl
jmp
cmp
pop
psllq
sahf
outsb
ss
loope
ds
push
sbb
push
ret
xchg
adc
ret
pop
push
ja
sub
aaa
popf
shlb
loope
in
push
xchg
insl
adc
inc
jne
fstpl
shl
push
lods
jbe
fisttpl
sub
clc
jmp
push
or
cmpl
movsl
imul
hlt
mov
push
xchg
jl
pop
shlb
sbb
jae
shll
imul
cmp
dec
mov
pop
jnp
aaa
sub
loop
jmp
or
cld
cld
addl
movsb
jle
repz
pusha
idivb
mov
cwtl
outsb
scas
into
mov
ret
test
loop
pushf
dec
inc
pop
sti
loopne
inc
xchg
lods
adc
dec
dec
lock
inc
int3
lods
pop
inc
arpl
or
out
cwtl
fwait
sbb
in
gs
push
mov
sub
int
dec
nop
ds
cmp
js
xor
jbe
movsb
sti
ds
popf
jbe
xchg
loopne
push
push
jle
jb
hlt
push
mov
sub
jnp
jmp
inc
inc
fs
sbb
in
nop
fdivl
push
stos
je
les
sbb
aaa
jnp
sbb
jle
xchg
mov
mov
and
std
and
push
cltd
sar
jp
cli
inc
dec
lret
adc
movsb
inc
icebp
mov
mov
cmp
xchg
xchg
idivb
sub
jae
loop
movsl
aaa
or
xor
popa
and
push
push
in
cltd
jae
imul
adc
outsb
out
xor
ret
adc
stos
fwait
inc
clc
cmp
test
push
xchg
out
jp
sbb
mov
aaa
mov
mov
xchg
cmp
xor
jl
add
push
ret
and
into
push
adc
lcall
ljmp
inc
repnz
fucomi
aaa
dec
jae
stc
sbb
int3
push
sbb
insl
inc
cmpw
movsb
xorb
movb
jo
lock
sub
sbb
test
inc
mov
ds
pop
test
mov
out
inc
popa
xorps
sbb
push
insb
pop
test
add
out
lcall
in
mov
cld
mov
hlt
push
lret
into
xchg
adc
xchg
mov
jne
popf
inc
ds
mov
insl
cwtl
mov
xchg
pop
popa
sbb
ret
cs
jl
nop
stos
and
jmp
push
loop
jns
cmp
pop
or
mov
es
cmp
aaa
pop
sbb
xlat
pop
jnp
xchg
push
int3
xchg
dec
adc
mov
mov
cs
push
fldt
mov
inc
cmp
mov
fcmovnbe
xchg
loope
std
mov
imul
enter
push
ja
sahf
push
ss
xor
lahf
fnstsw
cmp
ds
and
popa
out
sub
repz
imul
jo
cmp
lcall
rorb
dec
in
aaa
shll
out
sbb
test
pop
sub
ret
cmc
jg
popf
aaa
sbb
mov
xchg
ret
sbb
sbb
in
sub
inc
lods
enter
shll
push
in
scas
popa
addl
mov
fisttpl
lea
in
insb
push
sbb
dec
arpl
cmp
adc
jge
pop
pop
mov
jle
push
cwtl
xor
push
sbb
sub
addr16
fs
fmuls
xchg
inc
lock
in
cld
loope
clc
mov
xor
and
lock
jo
and
cltd
mov
addb
lcall
fstpl
ds
outsl
aas
es
ficomps
ret
jge
push
mov
imul
movsl
js
jb
std
stos
pop
lret
cmp
pop
jo
mov
or
pop
sbb
pop
in
loope
mov
mov
repnz
jg
sub
push
mov
add
jmp
sub
adc
or
std
incb
lcall
inc
add
mov
lret
mov
imulb
fwait
cs
and
xor
inc
jnp
sti
jbe
mov
orl
sar
fs
js
mov
out
mov
dec
mov
mov
stos
add
popf
jecxz
pop
mov
and
lods
cltd
jle
les
mov
subb
mov
ja
test
cmpsb
lock
dec
ja
add
and
jae
cld
push
mov
ret
inc
mov
cwtl
cld
aaa
push
add
lods
sbb
and
push
or
inc
imul
inc
je
sbb
lods
pop
adc
sahf
gs
or
push
push
sbb
push
mov
test
cmp
adc
movl
jmp
add
or
adc
popf
and
mov
add
les
mov
test
push
jmp
aam
js
push
popf
and
adc
sbb
out
sti
mov
std
sbb
vpaddusw
push
outsb
popa
push
mov
lock
inc
testb
jg
scas
fsubrs
mov
data16
fs
call
jle
outsb
mov
jp
clc
out
out
insb
xorb
cld
push
mov
call
shl
and
scas
out
pop
mov
inc
xchg
pop
int3
add
icebp
push
fdivl
lahf
inc
test
cmp
push
loope
fs
xchg
in
cli
or
push
fbstp
mov
out
mov
bnd
arpl
adc
bound
outsb
scas
out
es
fyl2xp1
sbb
sub
bnd
adc
pop
and
int3
xor
cmpsb
imul
popf
adc
test
lea
and
in
mov
dec
or
mov
mov
jno
clc
out
pop
cmp
inc
outsb
imul
dec
push
xchg
loope
jno
sbb
addr16
mov
adc
out
popa
or
or
outsb
mull
adc
mov
add
aaa
les
aam
xor
or
loopne
fstl
mov
pop
adc
pusha
inc
add
in
pusha
add
aaa
push
insb
xlat
cli
cltd
push
add
nop
jb
shll
jle
setae
sahf
sub
outsb
insb
and
lahf
fisubrs
push
sub
out
sbbb
mov
imul
shl
cmp
push
pop
jb
sbb
aaa
inc
xchg
imul
or
jg
cmp
sbb
test
cmpsb
addr16
xchg
int3
and
and
mov
jle
mov
in
push
cltd
mov
clc
jp
lret
xlat
push
lods
shll
jge
enter
call
and
pop
cmp
je
pop
in
pop
jno,pn
mov
or
pop
add
pop
out
mov
popf
xchg
lret
aad
jecxz
dec
jnp
scas
adc
out
adc
inc
call
add
add
stos
ret
push
push
sar
mov
and
out
insl
sarb
jne
in
outsl
or
cmpsl
and
das
fdivl
ret
lahf
adc
fdivs
aaa
stc
filds
das
daa
dec
jmp
int3
pop
jl
inc
xor
popa
out
and
jnp
cmp
xchg
lods
sarl
arpl
and
pop
stc
sti
mov
cmpsb
dec
loopne
mov
inc
test
ret
xchg
popf
insl
fistpl
fcomps
mov
lea
push
shr
xchg
or
jp
push
mov
pop
sbb
call
dec
outsl
lret
imul
rcrb
pop
adc
call
push
loop
mov
jle
sub
subb
adc
pop
pop
jl
repnz
cmp
inc
bound
ja
in
jno
mov
rcrb
pop
jne
sub
fs
popf
xor
push
mov
xchg
call
sti
inc
sub
pop
jno
in
xchg
mov
cmp
inc
faddp
sub
cmp
adc
add
or
pop
mov
mov
add
cmpb
stc
sub
push
push
sbb
push
push
mov
inc
imul
ficoms
icebp
in
push
mov
mov
dec
add
xchg
mov
pop
sub
pop
pop
in
sub
lcall
outsl
mov
jecxz
stos
jecxz
push
call
jnp
jp
inc
mov
and
sbb
cmp
idivl
scas
inc
mov
and
aam
or
mov
inc
aaa
rcll
pop
and
aaa
xchg
adc
jb
mov
pop
push
add
inc
dec
int
sbbb
mov
mov
jle
fldenv
push
andps
cmp
sub
jnp
outsl
gs
test
rcrl
jl
stos
jle
cmp
dec
xor
mov
jmp
gs
cs
jecxz
mov
movsb
das
or
xlat
enter
mov
sub
pop
pop
adc
add
xchg
xor
cs
cld
repnz
ret
inc
jbe
ss
mov
pop
adcb
pushf
jge
enter
popf
sti
sbb
pop
pop
adc
leave
iret
ret
lods
xor
imul
sub
out
sub
pop
iret
bound
jae
int
or
jnp
fwait
je
int3
cmpsl
out
xchg
ja
packsswb
sub
push
adc
sbb
lea
pusha
jg
push
filds
mov
push
sbb
inc
or
adc
dec
pop
movsl
test
inc
lret
shrl
ds
cmpsb
std
mov
fsubs
pop
dec
sbb
mov
mov
mov
gs
mov
mov
enter
push
xchg
mov
or
subb
jbe
scas
mov
repz
sub
cmp
aaa
add
mov
movb
scas
push
movsl
mov
sbb
insl
pop
ret
cmp
push
ret
insb
sub
fldt
dec
jl
data16
add
xor
cli
lock
outsl
xchg
or
inc
enter
subb
cmp
cmpsl
test
outsl
sbb
sub
xchg
and
std
stos
scas
pop
adcb
loop
xchg
loope
adc
cltd
ret
aaa
mov
test
jne
int3
sbb
in
sub
dec
xchg
lahf
push
aam
fbstp
mov
lods
cs
ret
fwait
mov
stos
repz
inc
sbb
sub
cwtl
loope
adc
dec
mov
push
adc
mov
lahf
mov
jns
mov
push
xlat
orl
or
jmp
push
sbb
icebp
push
arpl
pop
xor
scas
pop
insb
inc
push
add
mov
imul
imul
outsb
and
cmpsl
out
xchg
fimuls
mov
mov
mov
testb
jbe
inc
sahf
mov
sti
into
nop
push
cmp
js
cmp
cli
push
bound
loop
pop
xchg
and
popf
mov
mov
push
sti
in
mov
xchg
pop
sub
mov
rclb
cmp
out
incl
lods
cld
push
sbb
pop
sarb
xor
pop
scas
sbb
aaa
xor
jle
lcall
stc
xchg
icebp
popa
jmp
fnstcw
or
mov
pop
mov
push
and
cwtl
pop
scas
and
stos
jp
rcr
daa
mov
cli
pop
ret
add
insl
cmp
loope
lds
data16
push
outsb
jmp
gs
lcall
cltd
sub
out
aam
daa
aaa
or
pushf
jecxz
mov
dec
outsb
mulb
pop
push
pop
arpl
inc
mov
xlat
out
ljmp
dec
dec
mov
loop
popf
and
mov
lcall
xchg
loope
mov
sbb
sbb
repnz
insb
sub
mov
out
sti
pushf
movsl
mov
stc
mov
in
sub
and
dec
sbbb
and
je
lret
adc
pop
mov
inc
test
outsl
mov
mov
movsb
scas
inc
xchg
call
setns
sbb
pop
pop
dec
inc
sub
inc
test
mov
push
adcl
xor
mov
and
std
call
sti
sti
insl
jle
mov
popf
mov
jle
add
out
xor
jg
pop
xchg
cmp
jne
add
push
mov
push
jl
lret
cld
inc
pop
or
rolb
into
icebp
inc
nop
sbb
sti
in
shrl
flds
movswl
adc
cmc
subb
pop
push
jnp
fcmovnu
mov
pop
push
or
aad
cmpsl
jg
jge
sub
inc
jnp
mov
mov
xor
lea
sbb
adc
into
arpl
jno
xor
out
rcrb
sahf
out
lods
and
mov
aaa
dec
pushf
dec
gs
jns
sahf
mov
into
lcall
rorb
cmp
sub
inc
lcall
push
lahf
add
xchg
cltd
jmp
subb
scas
dec
loope
xchg
adc
movb
mov
mov
jmp
fdivrl
pop
js
cmp
xor
pusha
push
jnp
in
mov
mov
pop
push
stos
fdivs
jge
and
or
inc
mov
adc
push
out
dec
jecxz
cmp
les
xor
aaa
das
pop
dec
mov
imul
into
pusha
adc
add
cmpsb
push
std
jp
add
mov
in
cmp
xor
addr16
mov
xchg
mov
mov
mov
pop
xor
cmpsl
mov
push
dec
out
aad
repz
js
aad
in
mov
add
inc
push
and
mov
pushf
push
pop
leave
pop
adc
jle
arpl
push
inc
ja
ret
mov
rcpps
inc
cwtl
push
or
outsb
mov
aaa
adc
out
cltd
xorb
or
and
pusha
push
sub
pop
mov
pushf
in
pop
test
icebp
int
popa
mov
fistpl
xchg
iret
jle
in
cmp
and
mov
fnstsw
adc
jg
mov
into
ds
lods
repnz
andb
cmp
jnp
fsubl
jb
sahf
jecxz
mov
mov
negb
in
insb
lock
test
pop
push
mov
imul
shlb
aas
aaa
jmp
xchg
sbb
fldt
jg
adc
lahf
dec
dec
inc
or
shll
push
inc
icebp
imul
shll
inc
sub
insb
pusha
out
idivb
shlb
inc
testb
fdivr
ds
dec
dec
mov
mov
xchg
lret
xor
push
insl
dec
add
ds
jecxz
mov
sbb
sub
ret
push
test
das
in
aad
adc
mov
shlb
pop
add
push
pop
push
scas
or
add
psrad
aaa
xor
int
xchg
hlt
inc
fwait
enter
and
lcall
add
loope
bound
mov
faddl
push
mov
xchg
xchg
test
add
repz
cmc
call
mov
pop
sarb
mull
aam
lock
data16
clc
ds
push
adc
test
push
ljmp
mov
and
mov
sub
fbld
sbb
outsb
scas
aaa
je
scas
xchg
pop
adc
das
pop
lds
xchg
jmp
lret
add
add
cmp
frndint
fdivs
adc
pop
pop
sbb
jle
xchg
xchg
mov
or
adc
aaa
dec
shll
push
cmp
and
push
jno
sbb
or
push
mov
sbb
jae
rcll
popa
sbb
addr16
xor
dec
addr16
pusha
jmp
jbe
pushf
mov
jne
outsb
xor
scas
sub
stc
fnsave
sub
add
xor
mov
arpl
push
fsubl
fnstenv
mov
xchg
jne
lods
loop
pop
mov
add
pusha
insb
pop
pop
insb
adc
jl
mov
inc
xchg
hlt
mov
in
mov
loope
sahf
add
or
ds
fistps
fwait
push
pop
jo
dec
jbe
jnp
dec
outsb
dec
adc
popf
shll
out
lods
hlt
mull
leave
popa
pop
outsl
in
aas
jmp
or
push
loopne
jle
mov
test
cltd
pusha
inc
daa
out
and
jle
out
or
popa
adc
pop
mov
pusha
fiadds
repnz
pop
mov
mov
mov
sbb
lock
inc
sbb
mov
shrb
jns
mov
push
jg
push
mov
dec
lds
or
sahf
xchg
push
out
and
jle
enter
mov
cmpsl
mov
loop
or
pop
inc
sbb
ljmp
cmp
shll
push
stos
repnz
mov
jle
cwtl
fldenv
jecxz
int3
jg
push
push
popa
sub
imul
paddd
adc
xor
std
add
popf
pushf
jb
movsl
jne
int
push
in
push
aam
into
mov
mov
jg
jg
dec
lea
dec
sub
mov
dec
jns
nop
out
mov
mov
mov
enter
bound
mov
ret
push
outsl
sbb
ss
insl
aam
jb
xor
push
in
adc
fistpll
and
and
xor
sub
jns
or
jg
pusha
shrl
or
adc
sub
stc
popl
pushf
jnp
inc
fidivl
arpl
mov
pusha
sahf
xchg
adc
aas
pop
mov
test
loopne
push
orb
movsl
xchg
mov
movsl
lock
out
cli
lahf
sti
add
cmpsb
sbb
stc
std
mov
aad
dec
add
cmp
sbb
outsb
dec
dec
aaa
insb
into
pop
and
ret
dec
rcr
xor
test
sbb
jle
mov
jle
mov
cli
gs
jle,pt
aaa
adc
outsb
push
adc
lea
std
and
popf
inc
jp
test
push
mov
lcall
jg
ljmp
stos
out
faddp
sti
aas
push
fsubrp
jl
xchg
aas
rcrb
jne
cmp
cmp
xchg
mov
stos
mov
decb
cmp
dec
imul
in
sbb
push
cwtl
std
movsb
nop
fstpt
mov
pop
popf
mov
mov
aaa
pop
sub
out
fsubrl
mov
jb
jo
cmp
push
mov
jmp
mov
cmc
imul
lcall
pop
sbb
rcll
lea
pushf
cmp
xlat
add
pop
adcl
dec
and
fcoml
pop
jno
mov
and
cs
int
cmpsl
popf
dec
sbb
lea
mull
mov
and
lock
test
push
test
mov
dec
in
push
fwait
test
mov
sbb
pushf
xor
fdivrs
jle
push
bound
adc
jnp
xor
cltd
loopne
add
or
ss
inc
das
jnp
je
cld
pop
and
loope
sub
mov
sahf
pop
and
mov
lds
push
enter
mov
imul
sbb
lea
cmpsl
push
rcrb
inc
add
cmp
loop
pop
aam
outsb
add
push
add
in
roll
movsl
or
pop
xchg
pushf
jg
out
clc
int
mov
ds
fstps
in
in
std
pusha
mov
aaa
cmp
scas
dec
xchg
mov
movsl
lods
xor
and
cmpsl
add
fidivrl
sub
jb
aaa
mov
pop
lret
ss
daa
jnp
lods
jg
notl
cmp
mov
pop
ss
push
add
jns
popf
xchg
mov
pop
adc
frndint
pop
pop
je
inc
into
pop
rorl
stos
or
and
mov
xor
inc
xchg
push
out
cmp
mov
push
stc
cmp
jmp
daa
je
out
ss
pop
mov
repz
push
mov
add
imul
aaa
pop
mov
mov
bound
out
xchg
and
fdivs
js
mov
lock
aam
push
icebp
pop
lcall
popa
aaa
xor
cwtl
cmc
inc
push
xor
jecxz,pt
mov
add
aaa
mov
test
inc
movb
ja
outsl
movb
mov
sub
mov
loop
mov
dec
xchg
in
xchg
test
mov
mov
xchg
loopne
cmp
icebp
ss
daa
cmp
or
incb
ret
imul
mov
dec
pop
lea
dec
ja
cli
in
xchg
xor
sti
es
jnp
pop
pop
xchg
movb
mov
cmp
aaa
movb
mov
sub
push
roll
gs
inc
arpl
out
call
jl
mov
mov
push
imull
cmp
incb
jl
mov
enter
inc
frstor
pop
xor
imul
std
lea
jecxz
mov
add
and
icebp
and
sbb
xor
pop
cmpsl
outsb
sahf
fwait
pop
adc
sbbl
cs
repz
idivb
sti
fsubl
jl
es
stc
adc
or
pop
pop
or
jmp
int
aas
mov
sub
ja
iret
into
inc
repz
mov
sbb
mov
jno
popa
cli
out
clc
mov
xchg
push
sbb
lcall
std
adc
dec
popl
cmp
mov
xlat
ret
int3
or
notrack
jmp
cmp
fbstp
in
jle
enter
icebp
push
and
cmpsb
or
ljmp
roll
ret
shlb
lcall
adc
pusha
mov
scas
jnp
sbb
jno
jbe
sbb
shrb
lock
or
pop
pop
cwtl
push
pop
ret
xchg
cltd
stos
faddl
enter
push
xchg
cmp
sbb
mov
fcmovnu
cmc
fsubrs
std
out
jl
mov
pop
mov
or
popf
jns
in
icebp
test
in
sahf
mov
mov
decb
cmp
cmc
add
lahf
mov
adc
mov
cmpsb
xor
mov
dec
adc
jbe
in
add
mov
pop
mov
push
or
sub
out
in
lret
adc
gs
testb
push
xchg
and
loope
in
sub
dec
shrb
fadd
adc
mov
aas
stc
lea
jo
adc
adc
stc
dec
mov
add
mov
xor
inc
dec
xchg
iret
fdivrl
or
sbbl
mov
stos
jmp
sbb
sub
loop
push
rcr
movsl
js
inc
and
jle
dec
push
mov
cltd
or
addr16
rol
cmpsb
sbb
fisubrs
cli
and
aaa
and
add
hlt
bound
jle
testl
pushf
outsb
mov
jg
sbb
insl
cmp
lret
mov
jmp
outsb
mov
and
mov
movsl
stos
repnz
pop
jo
out
adc
out
jb
push
repz
adcl
out
cmp
lds
add
shll
pusha
lea
xchg
shll
shlb
adc
lods
jl
hlt
sbb
cmp
arpl
push
pop
dec
aaa
hlt
inc
mov
pop
sub
jecxz
inc
jp
adc
fisttpll
int3
xlat
pop
das
jecxz
andb
push
loop
mov
repnz
and
lds
and
push
push
cmp
push
jb
pop
inc
lcall
cmp
mov
sbb
mov
sbb
xchg
jmp
hlt
lods
jle
pusha
insb
mov
fcompl
lret
xchg
pop
inc
push
mov
in
arpl
outsl
jl
rorb
sbbl
lea
xchg
cmp
and
cld
das
or
pop
jle
pop
sub
cmp
xchg
int
les
inc
int
test
js
mov
cmp
aaa
cmp
sti
mov
dec
in
ds
lods
into
idivb
outsb
xchg
in
or
xchg
test
dec
pop
mov
cmc
xor
add
enter
out
push
in
cmp
push
lret
push
adc
and
scas
cmp
jno
lret
out
jno
shrb
call
fbld
outsl
mov
mov
fucomi
sahf
and
mov
clc
mov
out
ljmp
cmpsl
cmp
cmpsb
fmull
sub
in
inc
cmpsb
fnstcw
lret
loop
mov
xchg
pop
aaa
aam
iret
mov
aas
push
pop
aaa
adc
cmp
jg
out
mov
push
stos
xchg
fisttpl
sub
sbb
xor
out
incb
cltd
sbb
in
push
mov
mov
arpl
ret
cmp
in
xchg
xor
xchg
scas
fbld
cmp
js
repz
xor
push
data16
movsb
clc
movsb
mov
mov
bound
aaa
in
bound
sbbb
rcl
sub
push
in
xor
jl
xchg
aaa
push
dec
sbb
cmpl
jle,pt
mov
pop
push
lahf
arpl
ss
int
in
cmp
mov
pop
cmovno
hlt
loope
rcrl
sub
popf
inc
aaa
adc
jae
push
mov
cmpsb
fcomip
cld
mov
movl
loop
fstp
mov
in
jl
stc
xchg
and
lds
dec
cwtl
cmp
lcall
push
mov
pushfw
mov
push
dec
xchg
mov
mov
and
fisttpll
dec
jp
cmpsl
dec
mov
jl
inc
pop
lods
xor
jmp
sbb
fnstcw
dec
push
mov
stc
outsb
lcall
jp
movsb
rol
jl
add
fdivr
push
pop
or
es
aaa
push
cmp
cmp
popa
loopne
dec
dec
push
shlb
fnstcw
xor
aam
pop
mov
jl
shrb
pop
outsb
stos
cmp
inc
inc
enter
or
shl
jb
icebp
xchg
cmp
fistps
imulb
pusha
arpl
aas
and
subl
scas
jle
push
inc
negl
filds
test
adc
or
sub
pop
cmpxchg
jle
pop
into
stc
imul
insb
subb
stos
icebp
add
test
in
jmp
cmp
mov
leave
iret
add
in
mov
jb
popf
sub
jo
sbb
rorb
sarb
es
push
out
mov
cmp
jae
sbb
and
pop
and
loop
cmp
inc
pop
or
in
mov
insl
rcll
sub
mov
in
pop
rolb
ds
frstor
cwtl
sbb
ret
xor
fprem
movsl
dec
cmpsl
add
or
sbb
mov
and
xchg
mov
adc
rol
xchg
int3
and
push
test
mov
sahf
imul
mov
in
xchg
inc
cltd
and
sbb
insb
cwtl
jp
jb
stos
and
push
jne
sbb
insb
xchg
pop
adc
pop
sub
in
adc
dec
cwtl
scas
push
add
or
mov
and
mov
dec
call
cli
or
push
repnz
mov
sbb
mov
pop
loopne
test
lea
mov
shl
inc
loope
icebp
xlat
pop
cmp
xchg
ds
sti
das
pop
mov
xchg
repnz
sub
arpl
mov
mov
stc
xchg
gs
add
jp
shlb
mov
icebp
out
dec
mov
and
xorb
imul
int
sbb
in
rol
iret
jb,pt
dec
stos
add
lcall
pop
xchg
cs
pop
std
mov
xchg
aad
aaa
push
jmp
mov
cmp
pop
popl
sbb
sahf
inc
clc
cltd
repz
jns
dec
inc
das
jmp
jbe
mov
and
mov
pop
mov
in
daa
ret
jns
push
ss
aam
clc
negl
xor
sbb
cmc
das
xchg
pop
push
rcll
xchg
or
add
xor
xor
loope
test
push
cmp
enter
jecxz
jl
dec
mov
ss
sbb
out
mov
fisttpll
inc
cmp
enter
lret
or
xor
int
rolb
int3
inc
lods
subl
mov
push
pusha
mov
test
insb
in
repz
dec
mov
xchg
jg
adc
cmpsb
clc
xor
or
pop
rorb
xchg
rol
or
dec
popa
pop
test
xor
pop
fimuls
cmpsl
add
sub
pusha
xor
stc
adc
popf
loop
jg
shll
dec
push
packuswb
inc
sbb
mov
add
jecxz
pop
mov
cwtl
xchg
mov
sahf
pop
add
test
fidivs
ficoml
lahf
cs
pop
ret
rol
rorl
mov
add
loop
mov
lahf
das
sbb
inc
jl
inc
pop
sarb
rorl
mov
imul
jne
adc
in
sub
cld
fucomip
nop
jle
std
mov
sbb
sub
pop
cwtl
jne
cmp
inc
push
jb
lret
mov
sbb
cmp
push
mov
ret
sbb
add
loop
jno
push
out
into
mov
lods
pop
cs
icebp
in
subb
sti
loope
sbb
lahf
mov
jae
icebp
or
fnsave
ja
shlb
adc
repnz
fs
les
scas
dec
mov
mov
loop
lret
ret
das
fsubl
jne
sbb
in
mov
cltd
jae
test
sbbl
push
adc
mov
pop
cmp
pop
lea
mov
sahf
loope
bound
mov
addr16
out
rcrl
cltd
div
jg
and
fbstp
and
push
sbb
mov
add
cltd
js
add
aaa
jl
test
lock
mov
xchg
icebp
push
pop
mov
jb
out
jo
imulb
push
andl
jge
imul
aaa
pop
imull
cmpsl
and
data16
push
push
div
call
jno
adc
cmp
fsts
pushf
jns
cmp
int
mov
dec
inc
dec
jbe
pop
mov
inc
mov
aam
outsb
jbe
xlat
rcr
sbb
les
lcall
es
stc
and
jb
fwait
xor
mov
adc
pushf
testb
movsb
out
inc
add
fmuls
rclb
inc
gs
pop
pop
and
aam
adc
shll
out
mov
xchg
mov
ss
icebp
pop
pop
arpl
sub
jl
push
js
out
aaa
dec
dec
inc
jle
add
push
aas
cmc
sbb
aam
lea
bound
sub
call
mov
mov
pop
lcall
test
mulb
pop
add
push
addr16
xchg
pop
and
xchg
ret
cltd
push
mov
inc
fdiv
push
clc
push
int
in
invd
adc
sti
incb
pop
add
fbstp
jns
mov
mov
add
nop
scas
fnstcw
xor
enter
pop
adc
shl
lcall
testl
test
dec
mov
pop
in
icebp
mov
out
adc
fcmovu
les
jnp,pt
ss
std
stos
mov
adc
pop
arpl
and
std
rolb
gs
push
test
mov
mov
in
mov
nop
pusha
ss
jg
scas
xchg
mov
popf
inc
cmp
jbe
iret
out
or
clc
and
stc
icebp
mov
push
and
push
fldt
pop
das
jge
popa
inc
cli
push
fbld
inc
ss
cmp
add
xchg
push
mov
xor
xchg
popf
dec
imul
ljmp
fs
sub
or
js
or
xchg
aad
das
jae
call
dec
scas
jne
push
aad
rcrb
std
jmp
into
lock
xchg
cmp
aaa
dec
scas
outsb
push
mov
cmpsb
cmp
mov
test
add
gs
out
xor
push
add
xor
jg
fildll
rcrb
sub
pop
add
jmp
mov
sbb
mov
adc
fnstenv
imul
sub
pop
decl
leave
mov
enter
out
sbb
bound
pop
jle
xlat
enter
cmp
call
mov
out
les
outsb
addr16
jb
in
es
adc
xchg
jne
dec
push
pushf
in
push
jmp
movsl
cmp
js
pusha
pop
je
mov
movsl
in
fstp
mov
xchg
and
and
sbb
int
es
sbb
and
mov
push
xor
jns
les
imul
adc
and
or
jle
xchg
scas
daa
cld
sub
push
into
int
inc
lds
fcomp
mov
arpl
push
adc
xchg
mov
add
and
lret
sub
popf
sub
xor
sbbl
ret
pop
aad
push
cmp
pop
aaa
or
pop
pop
andnps
in
js
fmull
popa
lea
inc
ja
pop
mov
pop
aad
push
out
and
inc
jae
push
in
pop
cmp
out
xchg
fistps
jne
test
shll
sbb
jne
mov
les
leave
jmp
jle
xchg
mov
sbb
dec
sarb
jb
pushf
lock
mov
in
pop
mov
into
jge
or
push
push
pop
addr16
cltd
fcomi
xchg
icebp
jmp
inc
mov
mov
or
lret
pop
repnz
lea
push
mov
enter
inc
fnstcw
std
push
in
lock
sarl
mov
stos
mov
nop
adc
and
insb
adc
js
push
xchg
inc
jecxz
jbe
xchg
pop
fcompl
push
popa
lea
xor
sbb
and
mov
inc
stos
pusha
cltd
sahf
xor
cmp
hlt
cs
xor
push
rcrl
cmpsb
lods
cld
das
xor
inc
add
aas
lret
mov
dec
ret
mov
mov
or
stos
jg
lea
std
fnstcw
pop
pop
nop
popf
adc
imul
jmp
in
or
in
push
test
cmpsl
pop
in
aaa
test
push
out
je
xchg
mov
lret
or
in
inc
xchg
sub
inc
aas
ret
pop
scas
shl
cltd
adc
movsl
ljmp
mov
jb
aaa
adc
lret
sbb
loope
pop
inc
xor
lcall
lods
cmp
in
add
jnp
add
sbb
mov
pop
adc
insl
inc
pop
and
fdivrs
jle
aam
stos
jmp
inc
pop
lea
outsb
mov
imul
mov
std
lods
dec
lret
jo
imul
lret
popa
ret
aaa
mov
jbe
or
xchg
sahf
rcl
mov
push
jne
inc
sub
jnp
push
testl
fwait
mov
jmp
jnp
into
lcall
iret
aaa
push
adc
cmp
add
xor
rolb
pop
jle
out
push
mov
rolb
add
jecxz
sarb
aad
rcl
pop
je
ret
icebp
out
cmp
call
movsl
aaa
clc
adc
sahf
adc
hlt
jnp
pop
cmp
pushf
sub
movsb
mov
jle
insl
int
mov
in
adc
jp
lret
ljmp
lcall
jmp
js
pop
cltd
xor
xchg
jmp
xchg
jbe
adc
hlt
dec
js
sar
sbb
fsubrs
and
arpl
push
nop
pop
push
mov
push
mov
loop
adc
cltd
pusha
jns
shlb
xor
pushf
add
push
mov
jb
jg
push
fnstsw
shll
in
outsl
pop
jp
push
out
cmpsb
inc
push
jle
ljmp
pop
jl
pop
xchg
in
ljmp
pushf
insb
adc
pop
sbb
enter
movsl
adc
in
inc
arpl
sub
or
add
outsl
cmc
xchg
cmc
or
into
lods
mov
jae
push
fucom
pop
sbb
mov
xor
xor
jnp
dec
sbb
sub
test
sbb
cmp
sti
adc
addb
pop
ljmp
cmp
fisttpl
sbb
pop
lea
pushf
xor
cmpb
cltd
mov
aaa
jmp
jne
dec
sub
inc
cmpsl
dec
mov
sti
aas
ret
xor
insb
orl
scas
xlat
fdivl
jle
xor
sbb
add
cmpsl
fwait
xchg
clc
or
jb
add
mov
dec
push
inc
lcall
adc
aaa
xor
pop
push
and
sbb
insl
jb
mov
jmp
ljmp
sbb
pop
xchg
add
mov
test
repz
repz
in
jo
leave
repz
and
pop
pop
in
dec
pop
sahf
cmp
leave
int3
jecxz
add
lock
les
sbb
adcl
inc
lret
sub
xchg
sbb
or
or
insl
stos
jns
cmpsl
stc
ljmp
jmp
aaa
rcrb
push
leave
add
movsl
stos
insb
adc
xchg
sub
xchg
scas
fwait
bound
dec
sub
and
cmc
jno
push
add
adc
jbe
push
cmp
sub
out
cmp
fsubrs
leave
ja
push
outsl
in
xor
sbb
push
pop
push
cli
out
mov
mov
and
mov
loop
sbb
cmc
andl
lds
push
sub
add
jo
dec
stos
add
pop
lea
stos
testl
fstps
xor
shl
push
sbb
mov
scas
test
and
xor
cli
lea
push
push
sub
mov
lret
call
subl
adc
aas
fimuls
ret
mov
pop
mov
add
stos
pop
add
sbb
pop
nop
repnz
out
mov
ds
pop
inc
cld
jno
mov
adcb
mov
pop
sub
out
jns
stos
lods
jg
add
cmp
rclb
rcr
in
xchg
mov
xor
jbe
movsl
cmp
insl
cld
push
push
push
and
enter
jmp
mov
cmpsb
mov
adc
sarl
mov
fidivrs
mov
dec
dec
pop
js
loop
repz
movsl
ret
sbb
enter
inc
pop
xchg
clc
insl
pop
lcall
das
mov
mov
divl
inc
dec
test
sub
push
inc
loopne
or
aaa
ficompl
adc
pop
mov
aam
outsl
jb
std
pop
out
cwtl
stos
call
xchg
fs
cmp
in
mov
stc
mov
leave
test
dec
or
push
cmp
xchg
bound
inc
mov
loopne
out
xor
jl
lahf
mov
jno
fsts
mov
shrb
jg
jb
outsb
jno
int3
in
je
pop
out
sbb
pushf
loope
pop
aam
xchg
xor
xchg
jle
in
inc
or
ss
mov
mov
sub
cltd
dec
jle
xchg
insl
ja
ljmp
in
or
shrb
std
xor
loopne
jbe
cltd
and
shr
in
sbb
out
push
mov
daa
sub
pop
push
pop
aaa
inc
arpl
mov
jbe
std
lods
lcall
push
mov
imul
mov
or
rorb
les
pop
xchg
add
into
push
mov
lea
mov
xchg
mov
roll
xor
jmp
mov
aam
cmp
jo
jl
inc
stc
and
sub
mov
xor
into
push
mulb
push
sub
push
mov
cmp
cmp
mov
repz
push
or
adc
xchg
pop
cltd
mov
subb
bound
andb
aam
push
mov
aad
pop
or
sbb
fdivs
repz
adc
arpl
rcr
sbb
nop
pop
sbb
ret
xchg
popa
cmp
loop
sub
xor
cmp
pop
xor
sub
test
jbe
popf
mov
and
ret
hlt
adc
add
popf
sbb
add
push
ret
popf
repz
push
pop
cltd
mov
pop
inc
in
push
push
dec
aad
leave
aam
les
test
add
loope
dec
pop
ret
adc
jbe
subb
scas
idivb
pushf
cmp
arpl
pop
push
jns
jg
out
dec
arpl
rorb
push
movb
std
cwtl
das
and
or
jle
cmpsb
rolb
push
ljmp
cmp
jp
imul
mov
movsl
rcll
xchg
jne
aaa
adc
sarl
imul
mov
push
data16
xor
mov
sti
jne
gs
and
test
xor
jbe
push
jbe
cli
xor
fmuls
call
adc
add
cmp
and
mov
bound
js
in
inc
lcall
and
push
aaa
into
and
xor
pop
jns
sub
pop
adc
int
into
inc
pop
jno
jmp
mov
lea
pop
stos
adc
adc
loope
pop
sti
aas
xchg
loop
js
dec
push
jo
sbb
push
sbb
mov
addr16
or
stos
pandn
les
popf
lods
inc
xchg
xchg
cmp
inc
add
data16
mov
sub
repz
inc
jno
int3
sbb
lret
call
mov
lea
aas
lods
insl
mov
negl
nop
dec
in
jbe
loop
pop
out
in
hlt
push
pop
push
mov
pop
mov
xor
fisubl
sbb
mov
cs
add
fcoml
inc
sbb
pop
mov
add
inc
add
popa
lcall
dec
iret
dec
xchg
jl
popw
dec
sti
outsb
pop
mov
clc
fdivl
idivl
jbe
pop
sbb
fisubrs
dec
mov
mov
jle
rorl
data16
lock
xchg
sbb
cmp
popf
shll
push
mov
pop
ljmp
jb
jmp
stos
mov
lods
bound
lahf
out
lret
test
loope
pop
push
xor
out
jl
xchg
cmp
test
out
scas
or
sahf
shr
das
cmp
fiadds
and
out
and
aaa
add
push
scas
pop
test
inc
jg
fstps
cmp
xchg
sbb
push
rorl
adc
mov
xchg
mov
in
pop
insl
mov
lret
cmp
mov
xor
add
pusha
mov
shr
pop
aas
ljmp
loope
cmc
inc
push
lret
mov
xor
or
aas
call
loop
sti
push
icebp
fstpt
out
nop
inc
adc
mov
pop
ror
xlat
dec
jle
enter
movsb
in
push
add
add
jg
jmp
jbe
sbb
fcoml
xor
mov
shl
mov
and
ret
push
nop
add
pop
pop
daa
arpl
push
dec
mov
pop
out
fisttpl
mov
jle
loopne
xor
mov
mov
lret
xor
inc
pop
fnsave
jp
cltd
outsb
xchg
sbb
push
repz
mov
imul
push
ja
mov
rolb
mov
adc
cmc
push
ds
adc
scas
cmc
repz
iret
int3
rorb
sbb
insl
lea
sub
dec
lods
jle
cmp
push
jmp
outsl
inc
cli
push
ss
cli
loopne
pop
sbb
pushf
adc
dec
outsb
dec
jno
inc
sbb
subl
subb
aad
mov
xchg
jle
in
jno
push
mov
loope
lea
popl
outsb
and
jno
dec
pop
outsb
and
scas
xchg
or
fstl
icebp
pop
test
or
pop
and
mov
cmp
pop
and
xor
movsb
sub
roll
outsl
out
mov
pusha
std
or
ret
xchg
and
adc
loope
test
call
pop
mov
adc
movsb
cmpsb
mov
frstor
jb
lcall
loopne
jle
test
sub
mov
mov
mov
ds
sbb
into
jle
xor
mov
mov
and
fwait
inc
push
mov
popa
mov
add
jp,pt
ret
movsb
mov
loopne
scas
je
in
das
inc
les
pushf
cmpsl
lret
ljmp
sbb
stos
addr16
fstpl
or
icebp
dec
js
push
xor
jno
lahf
lods
ss
enter
pop
aad
xor
mov
shrl
lea
fldt
nop
adc
arpl
pop
lret
pop
push
jb
repz
add
iret
mov
fnstcw
lret
sbb
and
inc
xchg
and
push
mov
lods
cmpsb
scas
sarb
jno
stc
adc
leave
in
arpl
call
pop
out
lods
imul
mov
inc
jae
sub
xchg
jmp
fldenv
xchg
cltd
cmp
cmpsl
mov
iret
jb
add
dec
repz
filds
ljmp
fdivl
xchg
adc
test
test
add
fdivr
fdivl
pop
aam
pop
popa
insl
pop
pop
and
and
popa
mov
mov
rcll
or
enter
pop
fucomp
sbb
das
jg
je
jb
mov
xchg
jg
fcompl
cmp
or
push
mov
jg
jne
add
shll
push
mov
mov
and
lret
jae
push
mov
cltd
negl
aaa
icebp
rcll
popa
lods
test
mulps
mov
jecxz
cmpsl
xor
fsubrp
push
push
fistl
pop
adc
aam
sbb
pop
cmp
or
lret
movsl
xchg
shrl
mov
lods
push
sti
inc
andl
xor
sbb
mov
xchg
cltd
pop
xchg
je
pop
or
xor
cmp
lcall
dec
mov
sbb
jb
fs
andb
xor
jb
fdivp
cmpsb
mov
scas
out
jl
movsl
mov
leave
xchg
jno
and
push
and
jmp
fsubrs
xlat
mov
cmpxchg
mov
push
lea
xchg
in
out
ss
loope
xchg
push
jae
cmp
sbb
pop
nop
jo
cld
jecxz
sbb
hlt
jmp
pop
shll
lcall
cmp
push
mov
aaa
addr16
dec
cli
movsl
xchg
mov
and
bound
push
int3
dec
add
or
in
aaa
mov
das
rcr
xor
shrl
or
jl
out
jl
push
pop
mov
pop
sub
aaa
jmp
push
inc
sub
inc
mov
add
push
test
aam
in
dec
loop
and
cmp
loopne
loope
fwait
jmp
inc
gs
jbe
imul
scas
pop
lret
push
or
xlat
jle
js
add
xor
pop
sub
jg
nop
aam
mov
icebp
and
shll
push
mov
repnz
push
aaa
sti
ljmp
stos
push
addb
inc
fucom
inc
inc
push
shll
jb
bound
push
sub
cmp
pushf
jge
jl
push
dec
jecxz
mov
negl
scas
js
push
stos
dec
pop
in
sbb
push
push
inc
inc
je
cmp
lea
mov
in
pop
pop
add
jecxz
dec
daa
out
pop
and
es
xchg
test
ds
out
arpl
cmp
idivl
jb
jbe
inc
jno
inc
cmp
into
dec
cltd
fwait
mov
pop
xchg
add
push
inc
mov
aaa
fiadds
sbb
out
int
adc
add
loopne
pop
push
cmpsb
shll
jns
inc
clc
mov
add
jge
mov
mov
and
notl
lock
sbb
aad
xor
in
and
aaa
int3
sub
fisttps
jnp
dec
ds
pop
xchg
loop
mov
pop
loope
loopne
xor
loopne
rcr
cwtl
cmp
es
ds
push
test
mov
lea
insb
lret
in
mov
mov
loopne
sbb
aad
cs
test
not
mov
hlt
std
scas
xchg
pop
loope
inc
and
sub
iret
mov
and
and
mov
push
imul
lret
adc
inc
sbb
ret
mov
xchg
cld
divl
insb
jnp
or
mov
mov
cmp
sbb
iret
pop
mov
jbe
imul
lods
mov
jge
scas
cmp
ret
loope
aaa
xchg
mov
lock
cmp
jb
lahf
popa
cmp
jo
aaa
call
notb
sub
psllq
pop
pop
mov
add
sub
in
and
sub
lock
cmp
cmpsb
dec
fadds
sbb
jne
aaa
out
ret
sbb
unpcklps
mov
fstpt
mov
mov
test
xor
cs
pop
mov
and
cwtl
xlat
xchg
imulb
inc
cmpsb
clc
push
add
sbb
aas
fmuls
movsb
fsubr
jecxz
movsb
xor
out
enter
jecxz
testl
jge
pop
mov
fildl
pop
aas
xor
dec
add
xlat
adc
mov
and
xor
cmp
push
adcb
lret
cmp
push
inc
pop
or
xor
lea
in
call
mov
test
in
stos
cmpsb
fcoml
cmovae
stos
ss
insb
mov
add
add
jge
inc
and
nop
fidivrs
sbb
add
sbb
lea
das
loope
dec
cld
arpl
popa
mov
push
dec
jb
jmp
fisttpll
mov
add
push
xchg
lock
ss
rcrb
iret
xchg
loop
testl
mov
popa
push
fistpll
dec
in
mov
ret
add
inc
and
or
fistl
loopne
pop
pop
fwait
pop
adc
inc
pop
out
and
sub
cmpsl
inc
and
lock
jmp
cltd
insb
lock
es
icebp
popf
jbe
out
ficoms
lea
mov
inc
fucomp
fsubs
std
sti
or
sub
shll
add
stc
stc
or
mov
xchg
outsb
sub
cmp
push
fwait
dec
test
xor
add
mov
jle
cmp
das
add
dec
push
sub
pop
mov
sbb
dec
inc
je
movl
insb
cld
fistps
bound
hlt
pop
or
je
ret
and
gs
cmpl
jbe
fsts
ss
dec
fucomp
pop
cli
fstps
fsub
std
adc
push
scas
pop
and
pop
scas
insl
decb
adc
xchg
aam
pop
les
repz
mov
dec
movsl
xor
sub
mov
fstps
divb
call
pop
jp
repz
sub
mov
jae
push
loope
aaa
sbb
pop
repz
dec
pop
mov
adc
lods
sbb
hlt
add
rcll
xor
push
inc
jb
lret
adc
adc
push
jne
mov
or
mov
mov
movsb
fdivp
sahf
pop
pop
adc
popf
push
sar
shr
pop
std
pop
pop
sub
dec
or
jae,pt
aaa
mov
adc
sub
push
mov
lea
insl
shrl
pop
mov
in
mov
xchg
imul
aad
sbb
in
outsb
in
aaa
push
into
js
test
sub
sbb
lret
jmp
cmp
popf
cmpsb
pop
push
lret
mov
imul
stos
dec
xchg
pop
push
cmp
decl
pop
xchg
fmuls
aaa
daa
jo
cltd
inc
push
push
or
daa
test
cmpsl
push
icebp
add
loop
into
jo
inc
or
jno
fldt
dec
push
das
lock
dec
adc
out
pusha
sti
add
add
or
dec
ss
stc
hlt
imul
outsb
test
mov
jle
jmp
test
hlt
popa
daa
mov
fwait
imul
mov
pushf
int
sbb
aaa
mov
mov
js
cltd
ljmp
cld
adc
popa
xchg
lretw
lods
xor
ja
push
xchg
fwait
std
sbb
or
inc
jnp
mov
sub
in
pop
pop
inc
jp
in
mov
sub
popa
jb
lret
pop
ds
cltd
and
dec
in
js
xchg
loop
sbb
xchg
jbe
insl
mov
call
decl
imul
adc
ficomps
das
push
adc
iret
mov
ss
stos
xor
imul
push
je
std
push
int3
push
mov
push
adc
push
adcl
mov
mov
in
mov
mov
mov
sbb
dec
stos
xchg
test
xchg
push
ds
ret
jg
call
add
ret
xor
dec
mov
jmp
int3
pop
xchg
fwait
pop
cmp
data16
js
add
pusha
mov
and
mov
or
lock
mov
adc
dec
sbb
lds
cmp
das
stos
arpl
gs
jmp
outsb
nop
sti
jmp
adc
xchg
pop
rol
cmpsb
add
sub
sub
fldt
cld
sub
push
popf
cs
cwtl
aaa
movsb
inc
inc
and
mov
pop
incl
sbb
mov
lahf
or
aam
jne
pop
pop
rcrb
in
imul
mov
int
pop
stos
cmp
push
in
xchg
test
mov
insb
inc
bound
stos
movsb
xchg
in
push
pop
dec
fadds
ljmp
andb
xchg
bound
movsl
xlat
scas
jmp
inc
pop
or
mov
pop
mov
std
inc
hlt
mov
ret
add
ret
push
jno
repz
ljmp
xchg
es
adc
jmp
push
jno
pop
xor
jbe
xchg
mov
test
shrb
cmc
orb
aam
popfw
xchg
xor
pushf
ret
jp
sbb
int
sub
loop
or
mov
movsl
in
lds
pusha
dec
jb
xchg
ljmp
es
scas
jle
sarl
aas
jg
xchg
enter
imul
rep
push
arpl
xchg
jmp
ss
pop
clc
sbb
xor
pushf
ret
cmp
loop
aaa
pop
xchg
lret
shrb
mov
and
dec
std
mov
pop
push
jge
loope
inc
lea
and
xor
xor
pop
adc
sub
fs
aam
stos
mov
call
test
lret
mov
sbb
cmpsl
aad
jecxz
stos
loopne
std
sbb
inc
cmp
maskmovq
imull
jmp
push
sbb
aas
push
fimuls
leave
bound
out
arpl
jns
xchg
sbb
inc
mov
insl
xchg
mov
cwtl
std
mov
out
xchg
je
mov
jno
inc
pop
aas
imul
adc
mov
cli
insb
ficomps
mov
xor
jae
das
mov
mov
jne
push
or
mov
push
or
push
mov
xchg
cmpsb
js
lret
xchg
adc
jp
sbb
test
cmp
sbb
call
mov
cmp
jae
fnsave
or
aaa
push
in
adc
leave
jmp
or
dec
in
cmp
pushf
cmp
stos
jecxz
aad
xchg
mov
popf
bound
in
sub
insb
idivb
imul
int
mov
pop
mov
mov
pop
aaa
adc
push
mov
pop
stos
das
arpl
dec
xor
xchg
sbb
pop
lea
jae
mov
fcmovnb
movsl
out
test
cltd
aaa
mov
je
es
pop
push
sbb
pusha
or
cmpsb
mov
lcall
push
addl
rol
data16
sub
mov
cmp
movsl
in
and
mov
pop
pop
jle
aaa
xchg
jne
ret
out
test
mov
and
mov
sbb
into
lahf
out
sub
and
pop
mov
mov
mov
sub
test
fisttpl
cltd
lock
dec
sbb
adc
push
lret
fisttpl
push
mov
adc
in
inc
sub
std
bound
or
arpl
in
sub
lcall
dec
adc
jae
dec
aaa
adc
sbb
xchg
push
repz
pop
sbb
stos
mov
or
fnstcw
test
imul
xchg
push
mov
or
inc
xchg
mov
mov
aas
jg
add
inc
mov
scas
stos
lcall
inc
movswl
aaa
fdivrl
aaa
mov
es
cld
in
sbb
sbb
ss
enter
jmp
pop
fwait
pusha
dec
mov
pop
dec
roll
cmpsb
stos
mov
jb
aaa
push
scas
fcomp
les
outsb
dec
fadd
movsl
inc
cli
jl
fdivrl
ret
pop
cmpsl
enter
pop
cmp
push
ds
push
ljmp
adc
insl
and
sbb
inc
xchg
mov
rclb
leave
addb
imul
fcompl
idivl
loopne
into
jge
and
je
lcall
and
cs
mov
jle
in
adc
in
sbb
dec
xchg
ficomps
scas
aam
fdivs
loope
pop
push
xchg
repz
or
scas
add
leave
sub
mov
repnz
pop
jae
fdivs
xor
mov
mov
jmp
out
sub
jl
or
popa
sbb
jle
xlat
dec
aas
jno
inc
push
inc
pop
ds
movb
and
sbb
pop
mov
mov
inc
sbb
or
jns
lcall
cmpsb
jle
shll
enter
and
orl
std
stos
xor
mov
int
pop
sbb
stos
aad
fsts
xlat
xor
repnz
xchg
adc
add
push
jge
lahf
ljmp
lcall
out
leave
or
lds
pop
and
fildll
clc
in
fwait
outsl
cmp
jb
lret
mov
bound
int
lods
pop
les
jo
rcrl
or
outsl
lret
fwait
scas
or
mov
loopne
xor
inc
std
xor
test
popa
adc
std
add
movsl
jg
js
xor
in
ja
pop
test
push
es
es
ret
or
ds
xchg
mov
dec
pop
fistpl
and
shlb
out
into
jmp
sahf
adc
xorb
pop
iret
aaa
test
inc
cltd
mov
push
xorb
pop
movsl
insl
jp
test
and
pop
add
lret
adc
inc
mov
jbe
and
adc
inc
pop
ss
es
mov
in
pushf
xor
lods
and
push
sbb
out
adc
sbb
fcmovnu
out
mov
ret
mov
ss
adc
add
stos
inc
pop
mov
int
icebp
aas
lds
mov
fdivrl
data16
inc
adc
loope
pop
pop
in
fwait
int
pop
inc
or
stos
and
addl
mov
ss
sbb
das
ja
enter
add
push
add
enter
in
mov
cwtl
mov
mov
in
add
mov
xor
loop
pusha
add
mov
mov
stc
mov
ret
test
lcall
cmp
inc
mov
mov
sbb
cmp
mov
in
xchg
push
xchg
mov
mov
ja
cmp
into
dec
jl
add
mov
lea
or
pushf
mov
ds
inc
jmp
fdivs
pop
shll
dec
lcall
push
or
call
pop
sbb
sbb
sub
and
out
rolb
inc
mov
jecxz
js
or
cld
fldcw
pop
push
xor
in
adc
push
repnz
stc
scas
xor
jb
xchg
pop
out
or
mov
push
ja
movsl
pop
test
aad
sti
clc
xchg
in
push
mov
xchg
push
mov
lds
lock
cmc
in
jmp
xor
dec
mull
into
aaa
hlt
inc
dec
sbb
xchg
jge
cmp
lds
add
jp
mov
das
and
add
bound
arpl
inc
loopne
insl
les
sbb
ss
fdivrl
fsts
cmp
dec
ss
push
xchg
fs
fs
das
jmp
daa
sub
xor
lods
arpl
fcompl
cmp
leave
pop
mov
jle
pop
psadbw
and
daa
xchg
insl
std
and
xchg
int
jle
jle
fildl
stc
xchg
and
mov
pop
push
lret
cmp
mov
inc
and
icebp
shlb
adc
push
xor
push
aam
inc
lcall
cmp
sbb
movsl
and
movsl
lods
jb
js
push
jp
aaa
scas
in
and
nop
fdivrp
iret
call
pop
into
sub
push
pop
jmp
adc
pop
mov
imul
mov
and
jecxz
dec
pusha
fwait
sbb
mov
pop
push
xlat
addps
pop
popf
fdivl
dec
imul
sub
sub
loope
mov
and
adc
mov
jns
je
test
mov
fwait
ss
push
pushf
je
pop
enter
cltd
cmc
pop
fs
xchg
xor
jmp
inc
loope
xor
adc
xorb
loope
mov
cltd
mov
mov
shlb
sti
sub
ds
and
jle
stos
outsl
in
sbbb
mov
xchg
out
jle
lcall
inc
add
mov
cmp
mov
add
fbld
leave
jb
lods
popa
mov
js
loop
sbb
test
sub
dec
cmp
pop
push
sbb
loope
sarl
in
clc
notl
xorb
cmp
adc
mov
mov
jmp
sub
pop
push
ss
or
in
ljmp
mov
pushf
dec
cmp
loopne
push
lods
dec
push
inc
push
jnp
cwtl
pop
mov
xchg
aam
dec
cmpsb
mov
call
cld
lods
mov
dec
rclb
mov
fcmovne
loope
aaa
fists
jns
aas
adc
in
dec
aaa
jl
push
jmp
ret
cwtl
mov
mov
sbb
aaa
enter
sbb
das
mov
jmp
cmpsl
pop
idivb
pop
shrb
aaa
dec
dec
sarb
jle
stos
outsb
push
mov
mov
push
ds
cmp
cwtl
mov
sbb
insl
push
add
push
imul
push
out
mov
ss
insl
aas
sub
into
out
cmp
dec
jo
pop
jnp
lcall
sbb
mov
or
push
sbb
shrl
push
notl
pop
xchg
sti
xlat
add
adc
jae
dec
pop
dec
mov
mov
imulb
shr
stc
inc
call
mov
outsb
subb
movsl
rolb
aaa
stos
lcall
mov
mov
loope
in
jno
jge
and
aaa
cmp
stos
dec
mov
fcom
add
stos
in
push
add
xchg
jno
xor
mov
out
mov
lds
jae
pop
dec
sub
data16
xor
out
outsl
mov
lret
mov
fistps
sbb
cmp
dec
mov
sar
push
add
xchg
push
fwait
lret
out
leave
faddl
add
stos
and
scas
invd
in
push
out
sbbb
inc
mov
xchg
sub
mov
xchg
test
and
xor
mov
xchg
scas
mov
pop
mov
sbb
pop
adc
lcall
push
and
imul
adc
sub
mov
cmp
cmpsb
adc
orb
dec
xor
jbe
push
mov
sbbb
pop
stc
sub
loopne
out
xchg
pop
shll
sbb
imull
jb
jno
ret
imulb
add
pusha
mov
jmp
xchg
fwait
pop
adc
das
adc
jle
ds
es
jne
add
cltd
in
fadd
and
test
aad
mov
mov
idivb
add
mov
adc
inc
cltd
pop
jnp
dec
pop
lds
add
add
inc
icebp
loopne
stc
and
xorl
insl
and
jns
xlat
push
jecxz
sub
mov
xlat
adc
jb
jecxz
add
pop
dec
sahf
sbb
push
int3
imul
lds
into
push
cmp
leave
mov
test
lods
push
adc
adc
sbb
cli
push
jb
cmp
sbb
and
rcr
in
mov
int
iret
cmp
add
sbb
jle
sahf
imul
gs
fwait
das
in
add
and
rclb
pop
push
mov
cmp
and
test
inc
movsb
xchg
es
fwait
outsb
rcpps
jle
dec
nop
int3
ljmp
and
bound
adc
aam
inc
cli
jmp
xchg
adc
aam
or
mov
xchg
xchg
add
adcb
inc
pop
test
incl
mov
dec
shll
fldenv
roll
pop
xlat
or
outsl
mov
in
scas
int3
ret
in
mov
outsb
in
in
jbe
push
inc
aaa
cmp
xor
mov
xchg
sub
mov
cmp
and
cmp
imul
add
add
sti
push
test
ds
lcall
sbb
shrb
sbb
xchg
fs
aaa
movsl
shrb
outsb
daa
mov
and
scas
orl
loop
cwtl
dec
mov
icebp
cmp
mov
ret
mov
add
cmp
sbb
cmpsb
mov
adcb
stc
lds
jnp
cmp
inc
nop
sub
stos
into
push
mov
pop
push
jp
pop
jae
imul
mov
lcall
flds
jo
pop
pop
lea
jns
push
jp
lret
fs
inc
pop
in
xchg
cmc
cltd
repz
in
mov
cli
or
popf
dec
push
pop
mov
cmp
xchg
adc
or
mov
push
pop
faddl
insl
mov
dec
lods
or
inc
cmp
or
mov
xchg
testb
lahf
sbb
hlt
loop
in
fwait
dec
js
stos
repz
rolb
adc
lds
in
iret
mov
and
fmuls
and
out
stos
lds
inc
xchg
cmpsb
sub
cmpsb
mov
xchg
and
das
fadd
pop
mov
cmp
hlt
push
lret
insl
cmp
sbbl
jmp
sub
push
mov
das
jl
sub
out
mov
push
sbb
adc
rcr
push
std
pop
out
pop
addr16
inc
mov
push
xchg
out
fsubrp
pop
in
cltd
cmpsb
jmp
notl
sub
mov
mov
mov
addr16
cmpsb
jle
or
pop
insb
mov
pop
sub
sub
lcall
and
push
sub
dec
jb
pop
and
sbb
bound
icebp
jo
loopne
mov
dec
enter
add
aam
adc
in
aaa
xchg
mov
pop
sub
inc
pop
jb
cltd
insl
repnz
out
stc
aad
add
ljmp
loop
pop
mov
adc
stos
or
sub
adc
adc
jbe
pop
xchg
push
sbb
fistl
in
dec
add
push
dec
out
mov
jno
jmp
mov
sub
cmc
mov
rclb
pop
lcall
mov
ss
sbb
cmp
jae
fistpl
fucom
out
inc
loope
xor
xor
into
jnp
jno
sbb
cli
jg
mov
pop
xor
push
inc
jne
mov
jl
sti
cmp
arpl
int3
inc
repnz
add
jmp
mov
adc
adcb
mov
lea
lock
fcomi
lods
lret
jne
sbb
pop
lret
shlb
jne
dec
mov
pop
imul
out
jmp
add
orb
ds
insb
fnstenv
movsl
pop
and
outsb
push
lret
scas
push
dec
fsubs
xchg
lahf
push
add
leave
lods
cld
mov
cmpsb
das
lods
push
fnstenv
inc
dec
sbb
fisubrs
pop
pop
icebp
in
cmp
ret
sbb
pop
pop
pop
popf
push
lret
jl
dec
cmp
cmc
out
adc
jbe
pop
call
ret
add
pop
outsl
sahf
leave
lret
dec
dec
inc
test
lret
fwait
ss
mov
mov
out
jae
jl
shl
xor
inc
dec
insl
pop
push
pop
add
aaa
jmp
push
arpl
mov
cmpsb
fsubr
test
inc
and
icebp
mov
jnp
movsb
repz
daa
jle
xor
ss
jo
pop
and
push
and
mov
push
loope
mov
pop
pusha
ljmp
xchg
inc
bound
mov
jmp
push
xor
or
push
adc
xchg
pop
pop
mov
in
fwait
push
xchg
adc
and
pop
xchg
push
cld
lretw
dec
mov
les
aaa
aad
int
jl
fmulp
das
xor
push
stos
test
out
fyl2xp1
sbb
sbb
push
dec
cmp
cmpsl
cs
outsb
and
outsl
aaa
mov
jbe
push
rcll
sub
pop
mov
add
push
stc
sbb
xchg
jae
mov
mov
pop
sub
dec
sub
pop
fcoml
adc
jecxz
push
in
cmp
aaa
xchg
xor
and
and
sahf
pop
and
loope
xchg
gs
repnz
xor
and
cmp
fmull
lea
fidivrl
mull
outsl
cmpsl
std
cmp
sbb
pop
hlt
ds
lea
and
das
jns
shll
add
inc
dec
push
add
sub
mov
es
bound
dec
int3
or
ds
ss
ds
aas
sbb
jb
inc
ss
cmpsl
loopne
aaa
nop
inc
jmp
nop
push
mov
adc
popf
add
adc
loope
lea
test
jl
comiss
jp
in
dec
or
testl
sub
jne
jo
imul
movsl
push
xor
stc
lahf
pop
shlb
fwait
out
dec
ss
and
or
adc
testl
jge
jp
dec
push
les
ret
inc
and
jecxz
push
scas
arpl
bound
pop
xchg
pop
xlat
cmp
jg
test
shll
pusha
scas
and
pop
pop
push
add
inc
aas
andl
jp
fldt
subl
mov
jmp
push
loopne
stc
or
mov
or
push
outsb
push
sbb
xchg
sbb
pop
pop
out
mov
jb
ds
test
mov
sub
and
adc
ret
sarb
pusha
push
js
and
lea
adcb
cmpsb
pusha
addr16
xchg
mov
outsb
and
xor
dec
sbbl
push
mov
pop
cmpsl
icebp
xor
fsub
sahf
mov
mov
into
push
test
add
sbb
jb
sti
jns
push
movsb
cmp
data16
movsl
mov
push
mov
add
sub
xchg
jb
cs
sbb
mov
sbb
push
dec
cmp
out
pop
push
arpl
fwait
pusha
add
ss
pop
pop
outsb
mov
imul
aaa
adc
bound
fildll
in
les
std
mov
jle
add
sbb
in
sbb
insl
int
sub
dec
cmp
pop
pop
xchg
sbb
mov
mov
push
mov
jne
fwait
repz
mov
push
insl
and
cmp
add
shl
out
cmpsl
lret
popf
fisttpll
outsl
test
std
cmp
or
fisttpl
inc
addr16
out
outsb
pop
dec
xchg
std
loope
orb
sbb
fnstcw
dec
push
test
pop
jecxz
data16
sub
lock
inc
or
and
add
btr
aaa
hlt
xor
pop
cld
fmulp
adc
loopne
dec
pop
jb
ds
push
push
pushf
pusha
stos
int
sbb
cwtl
mov
js
call
mov
xchg
in
in
and
xor
test
stos
sbb
mov
subb
popf
mov
lea
push
xchg
and
push
add
and
int3
frstor
adc
pushf
and
mov
xchg
loop
add
inc
adc
popa
xchg
sbb
pop
in
repz
pop
cmp
imul
adc
pop
xchg
vmptrld
imul
mov
pop
lods
and
hlt
test
pop
icebp
lret
int
loop
mov
ret
mov
dec
xchg
movsl
inc
cmp
andl
sub
fs
inc
enter
or
aam
mov
sar
out
sub
jl
add
mov
fwait
xchg
jbe
and
push
mov
xchg
xor
ficompl
movsl
in
in
in
ljmp
inc
ljmp
jne
aas
xchg
sbb
dec
movsb
and
cmp
mov
add
push
xchg
stc
lcall
jbe
mov
mov
pop
jmp
xor
adc
fstl
sub
sub
sti
enter
mov
cmp
push
fstl
and
loope
jle
mov
fnsave
in
pop
jne
xchg
push
rcll
arpl
xchg
inc
mov
outsb
cmp
insl
pop
jle
fsubrs
test
fcompl
push
xlat
sti
pop
cmp
sub
or
bound
push
lret
mov
cmp
outsl
jo
hlt
movsl
jno
xor
in
sbb
aad
cmp
clc
dec
cmp
adc
xchg
call
inc
pop
stos
stc
ret
cmp
ljmp
cmp
inc
lods
push
lahf
les
gs
es
lea
jg
icebp
inc
dec
mov
shr
push
jb
cmp
movsl
lret
adc
pop
out
inc
jbe
cmp
pop
xchg
inc
aaa
in
ret
rolb
pop
pop
or
cld
sub
push
mov
fwait
aaa
cltd
clc
pop
lsl
xchg
repz
mov
shrb
dec
scas
mov
cmp
mov
pop
push
cmc
cmp
xchg
mov
stos
fnstsw
clc
outsl
outsb
popa
loope
adc
loopne
jl
cltd
fwait
sbb
lret
pop
jae
popf
cpuid
movsl
jbe
and
cs
pop
jne
fwait
incl
jo
dec
fdivrs
cmp
daa
scas
ret
fistpl
sbb
loop
test
movsl
xor
cmp
pop
fidivrs
movsb
js
in
mov
sbb
sub
sbbl
loopne
xor
and
mov
cwtl
push
mov
mov
xchg
sbb
and
sarb
dec
lret
mov
or
cmp
add
adc
push
xor
pushf
movsl
xchg
jge
mov
sbb
les
aaa
sub
jmp
push
stos
icebp
aad
repz
and
shrb
jl
imul
xor
bnd
mov
mov
dec
rcrb
cltd
test
sbbl
mov
jnp
clc
jbe
dec
dec
icebp
xchg
xchg
lods
popa
in
sub
pop
fst
in
xchg
nop
cmp
dec
mov
cmp
scas
push
cwtl
pop
and
fs
pop
push
xchg
jo
fldt
addb
fstp
out
push
in
and
dec
inc
outsl
sarb
push
cltd
iret
mov
icebp
pop
xor
incb
adc
movsl
xor
and
sar
dec
stos
or
push
mov
mov
cmc
pusha
fnstcw
pop
movsb
je
xchg
add
xchg
push
in
cmp
dec
push
jnp
dec
and
clc
jmp
iret
mov
insb
ds
mov
xchg
das
push
add
cmp
jbe
popf
aaa
add
lret
pop
add
test
or
lea
jmp
testl
cmc
bound
dec
in
inc
xor
imul
pop
sub
nop
test
loope
xor
popf
pop
mov
ss
loope
ds
adc
rcrl
je
mov
cmp
and
aaa
cld
ss
outsl
jae
jg
icebp
test
inc
cli
ret
dec
pop
mov
mov
mov
mov
in
lea
mov
cmpsl
inc
jnp
xor
stos
and
imul
jle
fcoms
loopne
lods
ucomiss
cmp
popf
insb
mov
xor
pop
xchg
js
pop
out
insl
lret
mov
pop
jp
adc
cmpsb
fstps
xor
call
pop
sbb
mov
pop
sbb
jmp
push
adc
js
ficoms
xor
sbb
rolb
mov
xchg
movsl
push
push
fists
sbb
clc
sbb
shll
jb
jle
mov
jmp
and
sbb
and
jne
pop
sti
push
lods
adc
pop
ja
xchg
xor
pop
outsb
pusha
pop
ret
jnp
push
movsl
cmpsb
int3
pop
inc
xchg
imul
popa
dec
cmp
jg
mov
sbb
push
sbb
jne
jecxz
mov
xorl
sbb
adc
das
mov
xor
pop
cmp
jp
cmc
push
mov
lahf
inc
pop
xor
xchg
push
lahf
cltd
cmpsl
clc
lea
pop
jmp
push
lods
jbe
rcrl
repz
rcll
push
mov
leave
pop
adc
cmp
in
in
pop
push
or
cmp
or
data16
test
int3
adc
xchg
cmp
lods
pop
sub
dec
je
mov
testb
push
pop
in
stos
mov
fisttps
jno
test
add
in
push
sbb
lret
cmp
adc
repz
daa
cli
aam
ss
inc
fistl
sub
test
lea
pop
push
out
and
test
add
outsb
rcrb
data16
sub
imul
icebp
sbbb
lock
jle
in
les
pop
dec
mov
ror
and
lcall
cmp
jle
push
out
pusha
ss
repnz
sbb
sti
pop
out
pop
inc
sbb
push
sub
aaa
movsb
fwait
jle
mov
lret
dec
movsl
nop
sub
js
mov
xchg
aas
ds
jmp
ret
push
sbb
ffree
lods
movsl
clc
inc
cld
xchg
sahf
dec
dec
add
jbe
repz
pop
cmpsb
or
mov
pushf
gs
fisubrs
adc
jge
outsl
mov
js
mov
fcmovb
push
inc
mov
mov
jl
loopne
imul
fsubl
ret
pushf
cmp
mov
and
and
ds
mov
aas
repz
push
fadds
es
push
mov
imul
dec
popf
mov
clc
xchg
jo
sbb
or
push
push
stc
mov
cmpsb
ret
pop
cmpb
pop
repz
fildl
fcoml
mov
pop
outsb
inc
into
xchg
test
enter
sbb
loopne
mov
xchg
add
xor
xor
push
cmp
loopne
ds
inc
jl
pop
jg
imul
pushf
scas
jb
add
cld
sarl
add
pop
xor
popa
ret
sbb
mov
pushf
fnstsw
pop
jl
clc
cmpsb
test
pop
inc
xchg
movsl
mov
dec
sbb
sarb
jne
push
negb
or
filds
sub
and
mov
push
shrl
push
mov
in
aam
shrb
shrl
frstor
arpl
in
ja,pn
push
out
mov
pushf
loopne
loope
and
add
cmc
movsb
sbb
mov
and
push
push
mov
push
or
test
pop
sbb
sub
fmuls
movsl
jbe
out
mov
mov
insl
pop
pop
mov
jg
and
iret
ljmp
outsb
cmpl
ret
outsl
and
adc
addr16
sbb
icebp
mov
lret
jmp
push
jge
orb
les
std
sub
pop
popa
rol
cmpsl
push
adc
or
mov
and
cmp
cmp
sub
aas
addr16
mov
cmpsl
lock
cs
int
add
insb
aam
mov
fwait
insb
jecxz
mov
jbe
aaa
test
outsb
jge
mov
xor
call
mov
addb
aaa
jo
sub
sub
xchg
pop
imul
leave
fdivrl
sahf
in
popa
inc
mov
add
cmc
pop
test
adc
xchg
js
jg
fsubrs
stos
icebp
cmp
cs
sbb
pop
and
fisttpll
aaa
sub
xchg
arpl
in
data16
jle
shlb
xor
inc
aad
outsl
movsl
mov
cli
push
inc
das
adc
iret
loop
mov
jmp
loop
nop
call
and
cmp
mov
add
mov
cltd
push
out
or
dec
jae
imulb
hlt
andl
mov
outsb
mov
mov
out
dec
lea
ds
mov
mov
je
js
inc
xor
sbb
xchg
push
insl
ss
addr16
ret
test
hlt
test
mov
mov
call
shlb
xor
jecxz
mov
clc
lods
mov
sub
jle
mov
jg,pn
das
inc
add
pop
std
lds
stos
xchg
aas
fistpl
xlat
in
pop
nop
and
cli
test
int
aaa
cli
adcl
jge
aad
sbb
cmpsb
mov
adc
jbe
das
jb,pt
jne
inc
mov
std
jo
scas
imul
out
test
add
flds
dec
sbb
sbb
addr16
pop
jmp
pop
mov
mov
ja
popf
push
pop
mov
jge
jmp
ss
test
pop
dec
hlt
cmp
push
dec
mov
pop
jle
inc
jp
pop
dec
mov
sub
into
arpl
mov
aam
int
mov
shll
add
mov
sub
gs
sarb
inc
orl
out
xor
mov
jp
aaa
push
or
pop
mov
ljmp
adc
sbb
jecxz
sahf
mov
sbb
sub
add
push
pop
lahf
adc
inc
xchg
cmp
push
fwait
xchg
popf
xorl
ret
cmp
fwait
pop
push
test
popa
scas
adcl
rol
jbe
pop
pop
sahf
shll
push
inc
aaa
movsl
push
mov
inc
lods
pop
sub
rcrb
jno
or
xor
and
xor
jmp
mov
out
pop
cmp
arpl
adc
movsb
jl
mov
loope
pop
mov
inc
xchg
cmp
mov
test
xchg
cmp
mov
pop
xchg
aad
loopne
roll
or
popa
scas
pushf
xchg
mov
xor
mov
imul
aam
dec
mov
push
mov
sbb
sub
sbb
sbb
test
and
push
jle
leave
mov
dec
stc
cmp
inc
jnp
test
adc
in
rolb
jns
pop
ljmp
aad
cmpsl
xor
pop
xchg
and
jo
push
dec
imul
cmp
jl
loope
fldt
iret
jbe
cmpsb
divl
add
call
mov
lock
or
push
movsb
cmp
add
mov
pop
mov
adc
mov
ss
xchg
inc
daa
arpl
popa
in
mov
addl
push
insl
pand
pop
xor
push
aaa
in
sbb
sub
iret
ss
jmp
add
mov
mov
mov
mov
jns
jns
cld
jp
sub
lock
adc
jle
leave
fucomip
fisubs
call
jmp
mov
in
daa
frstor
test
sbb
inc
xchg
nop
mov
dec
fsubl
sbb
outsb
inc
jno
aaa
jmp
fwait
ljmp
outsl
sbb
dec
sbb
xchg
loop
dec
shlb
pop
arpl
dec
jmp
pusha
sub
in
pusha
inc
or
adc
int
xor
mov
pop
sbb
or
xchg
stos
xchg
cmp
dec
xor
outsb
sbb
daa
xchg
lods
adc
add
fwait
jmp
bound
push
les
inc
mov
out
hlt
mov
pop
call
mov
shlb
notl
test
cli
mov
lods
pop
arpl
aaa
loopne
sbb
adc
jle
cmp
subb
pop
jbe
pop
adcl
icebp
movsl
jmp
jg
inc
sbb
in
aaa
cwtl
hlt
xchg
sub
cmp
mov
inc
add
cltd
push
push
aaa
push
and
push
cltd
loope
pop
stc
pushf
push
je
aam
les
lock
mov
notb
outsl
xchg
sbbb
fdivp
pop
popf
fisubrl
jmp
lods
out
jno
xchg
aad
fs
inc
xchg
out
push
gs
in
stos
inc
push
sub
pop
xor
cwtl
cmp
stc
jp
loopne
mov
movlps
adc
ds
rorb
push
std
cmp
adc
mov
push
sbb
mov
cs
shrl
hlt
in
pop
js
ss
pop
sbb
sbb
ja
stos
lcall
jp
pop
add
push
insl
xor
push
push
pop
clc
mov
ret
negb
inc
sbb
jno
jle
mov
je
std
fisttpll
add
mov
cmp
icebp
add
push
lret
and
ret
fcoms
mov
inc
pop
test
call
movsl
cs
in
and
call
jg
je
sub
fwait
in
ds
pop
dec
pop
jmp
cmp
push
ficompl
push
femms
push
inc
mov
aam
cmpsb
jno
or
cwtl
and
data16
adc
shll
cmp
xor
lcall
cmp
or
pop
repnz
jno
fmuls
pop
popf
outsb
cmpsb
js
sbb
inc
dec
sbb
movsl
push
hlt
nop
aaa
lahf
lods
sbb
cmpsl
cmp
mov
pop
xchg
add
lds
pop
pop
mov
fidivs
mov
sbb
or
stos
ljmp
in
jnp
push
nop
lahf
pop
cld
push
fisubrs
add
or
popa
out
jbe
stos
lret
pop
pop
movsl
push
fbld
addl
test
mov
imul
fadds
sub
hlt
push
sbb
dec
outsb
std
mov
or
sbb
test
int
dec
and
aaa
and
int
scas
inc
jae
dec
sbb
push
adc
inc
add
ficoms
inc
add
jl
dec
rcll
outsl
fistl
cmp
adc
mov
jmp
mov
sub
test
pushf
inc
cmp
popa
fldcw
inc
push
lea
out
out
mov
pop
ja
lcall
push
inc
cmpsl
jae
mov
jg
cmp
pushf
pop
and
cmp
scas
cmp
xchg
sahf
sbb
test
jl
sbb
push
jne
js
pop
aas
mov
repnz
and
aam
adc
shlb
push
push
pop
dec
fcomip
cmp
cli
loopne
sti
mov
outsb
pop
lods
mov
cmp
sub
mov
es
adc
addr16
sar
out
jbe
aaa
lds
daa
int3
jne
dec
jno
arpl
jmp
dec
add
and
mov
jle
or
push
sbb
inc
cwtl
add
and
and
sub
add
imul
sahf
and
mov
es
push
dec
je
dec
jcxz
jb
into
mov
mov
jle
aas
or
sbb
lret
lock
mov
outsb
sub
lock
cmpsb
add
inc
shl
mov
out
push
cmpsb
sbb
xor
inc
insl
test
adc
jecxz
outsl
push
repz
mov
and
jno
idivb
jne
cmp
pop
push
sbb
std
pop
cmp
lock
add
dec
mov
cmp
add
pop
test
push
mov
mov
repz
dec
fnsave
out
js
hlt
mov
out
cmp
or
outsl
in
mov
rolb
or
gs
sahf
pop
add
adc
adc
pop
add
xor
ss
cltd
fcomps
aaa
mov
and
mov
das
lock
dec
cmp
fisttps
pop
shll
rorl
jbe
loopne
stc
call
stos
adc
xchg
cld
jo
xor
cltd
ss
lock
out
in
adc
data16
es
flds
movsb
bound
xor
sbb
ds
scas
cmp
push
into
xchg
mov
lcall
add
bound
out
and
or
xchg
jle
push
push
sub
pop
jle
push
out
and
mov
flds
dec
es
arpl
dec
in
dec
fstpt
pop
cld
cmp
sbbb
xchg
or
shlb
xor
inc
sbb
aam
xchg
pop
xchg
jb
movsl
xor
stc
fsubr
outsl
sti
push
mov
aaa
push
sub
mov
jle
push
sbb
inc
cmp
jp
xchg
or
cmp
mov
dec
ds
inc
push
cmp
lcall
mov
ret
loopne
mov
dec
pop
pop
jl
scas
aaa
xor
enter
pop
adc
xorb
pop
xchg
outsl
and
jae
enter
pop
imul
in
cmp
push
cmp
dec
fdivrl
lahf
pop
or
sub
roll
dec
xchg
sub
test
cmp
test
or
sti
outsl
mov
sub
fistps
jle
aaa
sbbl
enter
jl
pop
cld
notb
mov
mov
es
outsb
popa
inc
push
mov
ror
lods
enter
negl
mov
imul
xorl
mov
push
mov
das
lcall
outsb
add
sub
adc
and
pushl
xor
sub
and
mov
or
popa
sub
pusha
xchg
adc
pop
mov
push
xor
in
ljmp
jmp
loop
ja
fmul
loop
push
push
aad
pop
jecxz
sbb
rcrb
push
std
arpl
std
sub
insb
jl
subb
jmp
jle
repnz
bound
arpl
mov
stos
cmp
cmp
lret
loop
aaa
push
sub
test
or
aad
pop
in
ljmp
adcl
jns
jae
cmp
insb
cltd
pop
mov
pop
movsl
lret
rcrl
sti
or
bound
sbb
ss
lahf
xchg
cmp
lods
shlb
out
xchg
xchg
add
xor
sbb
mov
cmp
add
in
xchg
ds
shrl
sahf
rcrb
fcompl
xor
sbb
push
insb
and
ret
pop
pop
stc
test
adc
xor
ss
jmp
cmp
adc
mov
imul
sbb
and
rorb
add
pop
arpl
sti
test
aam
add
fwait
pop
jg
and
cltd
add
pusha
or
popf
jb
je
stos
das
jle
cli
aaa
mov
pop
add
mov
xor
mov
outsl
xorb
stos
popf
add
cmp
inc
arpl
xorl
jo
xor
scas
adc
les
adc
insl
xchg
and
ljmp
or
std
out
mov
mov
test
out
roll
cs
pop
test
xchg
mov
je
ja
mov
divb
dec
popf
cmpsl
jnp
out
pop
and
popa
andb
cmp
loop
ret
mov
popa
jp
push
out
jb
imul
in
pop
dec
imul
outsb
sbb
lret
pusha
test
lds
loope
jnp
in
lea
mov
push
add
loopne
mov
test
jno
subl
jae
out
imul
js
in
test
and
jmp
dec
fadd
hlt
jecxz
adc
cmp
clc
fwait
xor
cltd
add
sbb
sub
stos
or
mov
push
pushf
mov
and
inc
sub
mov
jp
pushf
mov
popl
adc
js
push
outsb
or
dec
push
sub
xchg
gs
jmp
xchg
jnp
lock
push
test
stos
mov
pop
mov
push
lea
xchg
xchg
fists
mov
xchg
adc
leave
loope
pop
add
ds
push
mov
or
sar
push
inc
in
mov
fstpl
popa
in
cli
push
jle
jecxz
dec
shl
mov
cmp
lods
jnp
int
mov
fnsave
jmp
add
cmpsl
shrl
xor
xchg
xchg
arpl
sbb
push
lcall
test
imul
cld
aaa
into
xchg
sahf
mov
dec
outsl
filds
sub
pushf
fstpl
sbb
pop
outsb
cmp
jge
mov
xchg
xor
mov
dec
js
push
stos
testl
inc
addb
lods
ror
mov
push
cmc
insl
jmp
inc
rcrb
dec
pusha
imul
xorl
push
mov
push
dec
enter
sahf
int3
or
shr
jl
aam
lea
add
and
xchg
or
push
mov
jge
pop
or
rcrl
aad
push
jno
enter
aas
mov
call
sub
xchg
icebp
inc
loope
adc
test
inc
mov
add
in
sub
fsubr
jecxz
rclb
sub
ljmp
jl
subb
outsl
lret
sub
idivb
fcoms
popa
sbb
inc
fbstp
cwtl
mov
lods
shrb
das
and
insb
lock
orl
and
inc
cltd
inc
pop
and
sbb
jl
cmp
fcmovnb
lock
and
nop
inc
dec
or
cwtl
xchg
popf
or
repz
cmpsb
inc
icebp
fistpll
adc
push
cmp
sub
outsb
dec
outsb
mov
or
lahf
fiadds
jmp
shll
mov
ds
stos
add
pop
sbb
pop
sbb
sti
push
insb
and
or
jo
mov
into
cs
mov
lret
out
push
sbb
lcall
jbe
mov
xor
and
in
sahf
fstpl
flds
arpl
add
pushf
adc
mov
cmp
loop
mov
ficoml
cmp
adcb
mov
jne
mov
lods
mov
fdivrs
sbb
push
rcrb
sbb
bound
stos
aad
shrb
orl
cmp
mov
xchg
push
sbb
ror
stc
aam
add
jecxz
sub
and
outsb
mov
push
jge
push
outsb
imul
ret
jge
fmul
fistpll
into
inc
cld
cld
jne
dec
mov
mov
out
insb
in
aaa
pop
aas
or
cmp
pop
fsts
shrb
ss
cmp
fcmovnb
inc
out
movsb
inc
cmp
inc
icebp
pop
inc
mov
je
loope
mov
xorb
push
add
test
sbb
sbb
sahf
sti
sub
out
ljmp
mov
and
outsb
mov
ss
addr16
popf
or
mov
push
jecxz
movsl
mov
ss
sahf
xor
fdivs
jg
mov
icebp
xchg
loop
lea
jbe
push
lods
add
dec
hlt
inc
xor
adc
cmp
pusha
pop
inc
cmp
pop
cmp
sbb
pop
popl
lret
cmp
int3
out
fs
stos
sub
sub
bound
cmp
idivl
sbb
test
fcoms
ret
jno
push
loope
and
mov
jecxz
push
xor
jb
cwtl
jge
sbb
mov
sbb
movsl
inc
push
sbb
aas
cmpsl
mov
out
dec
fwait
ds
cmp
ja
test
mov
or
loopne
cwtl
mov
mov
inc
loop
xchg
sbb
lock
jbe
jmp
lea
jl
call
insl
add
dec
loope
loope
aaa
test
cmc
dec
push
rclb
rcl
sbb
ret
aam
enter
cmp
pop
aaa
or
push
in
xor
loopne
stos
pop
cmc
inc
movsl
or
test
xor
inc
jmp
jl
add
popfw
xor
aaa
adc
push
mov
dec
faddl
sbb
sbb
or
std
pop
ror
leave
cwtl
push
pop
mov
lcall
dec
lea
pop
mov
pop
dec
add
aaa
lret
lret
loopne
shrl
dec
das
mov
dec
scas
leave
pop
dec
enter
insl
test
repz
cmp
sarb
orb
mov
enter
push
cmpsl
or
pop
mov
jbe
sbb
jno
jl
fstps
push
push
mov
daa
aaa
test
pusha
mov
fsts
sbb
mov
add
pop
mov
push
or
push
mov
jb
aaa
bound
add
outsb
nop
mov
mov
daa
lahf
insb
test
mov
es
or
sarl
adc
ret
test
in
pop
mov
repnz
dec
pushf
mov
sub
popa
add
jge
popf
fstps
mov
push
jbe
ljmp
jbe
in
loopne
xchg
sub
or
and
in
xor
and
mov
xor
pop
push
int
gs
pop
fdivrl
adc
aad
cmp
insl
and
lret
sbb
pop
jp
repnz
jle
shll
sbb
adc
pushl
add
pop
cmp
sbb
adc
hlt
cmp
jge
daa
in
call
lcall
in
adc
in
aaa
aas
lods
xor
jns
popa
fistpl
mov
gs
inc
std
lock
aaa
cmp
xchg
push
add
and
sbb
lea
into
das
mov
std
pop
fadd
xchg
mov
xchg
push
ror
cmp
xchg
popa
cld
sbb
les
dec
jbe
mov
in
jbe
xchg
sbb
sub
int3
mov
mov
aad
add
adc
fimuls
add
in
adc
mov
rolb
cld
imul
lea
and
dec
mov
mov
cmp
mov
stc
sbb
stos
dec
pop
fwait
pop
sbb
ss
dec
mov
jbe
cmp
insl
lods
ja
inc
enter
jmp
addr16
out
mov
xchg
sbb
ret
push
mov
sub
pop
cs
cmpsb
push
ss
pop
mov
insl
cmp
pop
dec
pop
push
add
loope
xchg
push
jle
sub
ljmp
sahf
sub
dec
inc
mov
push
test
hlt
push
ja
lret
push
data16
sbb
cmc
xchg
repz
and
lret
pusha
mov
inc
in
xchg
cmp
sbb
fcomp
stos
xor
js
dec
fsub
xlat
ljmp
iret
or
shlb
in
fwait
insl
pop
push
cmp
mov
je
inc
popf
add
sbb
mov
mov
xorl
add
insl
pop
cmp
cmp
fdivr
in
xchg
out
inc
pop
mov
xor
add
xor
insl
adc
push
outsb
inc
movsb
je
pop
and
add
clc
lret
pop
mov
jge
mov
dec
test
out
jnp,pn
mov
jb
mov
outsb
pop
popa
popf
mov
xor
popf
push
jle
test
into
jno
arpl
aam
int3
xor
xchg
xchg
enter
jl
mov
movsl
push
inc
xchg
mov
mov
jmp
xchg
jl,pt
add
in
sub
scas
in
pop
fists
inc
test
fldenv
loope
pop
sbb
mov
and
arpl
mov
and
mov
mov
enter
dec
andl
or
mov
cmpsl
pop
pop
push
pusha
repnz
push
jo
sahf
mov
mov
jmp
adc
in
dec
in
loop
adc
jns
ja
jp
pop
data16
test
pushl
movsb
ss
mov
dec
data16
in
mov
sti
jno
cmp
fcmovnbe
sub
push
mov
sbb
fdivl
dec
push
movb
jge
mov
js
adc
lcall
pop
adc
cmp
mov
inc
xor
rcl
pop
stos
in
or
lods
insb
mov
ljmp
cmp
test
js
add
aam
shrb
sub
pop
in
shll
aaa
stos
fnstenv
outsb
int3
jne
push
jno
jbe
jmp
aad
xchg
push
pop
out
push
test
cmp
mov
xchg
in
mov
sub
fwait
mov
in
test
lock
repz
push
and
pop
sub
cwtl
push
jae
mov
stc
xchg
lea
xor
and
aaa
lcall
add
dec
push
mov
dec
xchg
or
pop
jb
cmp
je
pushf
jl
call
repz
sahf
xchg
mov
inc
icebp
dec
divl
inc
movzbl
outsl
jo
adc
repz
push
cmpsl
or
leave
dec
jne
frstor
mov
mov
mov
cltd
jne
es
jbe
mov
inc
jne
xchg
loopne
xor
ficoml
xchg
bound
jge
hlt
aas
je
xchg
pop
push
adc
aad
sbb
push
mov
adc
push
push
jo
mov
jle
loop
push
lcall
loop
shrl
loope
mov
or
les
add
call
iret
sbb
icebp
jl
call
pop
decl
or
mov
iret
push
cld
cmp
div
xchg
fistl
adc
pop
jge
xor
stc
test
cmpsb
dec
cmpsl
or
stc
scas
jle
das
dec
loopne
push
adc
aad
xchg
cs
cmc
and
cs
ss
loop
and
inc
sti
inc
lds
into
icebp
sub
sarb
hlt
sub
outsb
imul
jecxz
inc
aaa
and
in
fs
mov
fcomps
movsl
push
inc
arpl
fwait
loopne
cmp
jb
pop
push
in
fists
sbb
mov
inc
lea
xor
mov
inc
popa
subb
stc
movsl
fs
movsl
out
inc
dec
fdiv
cmpsb
aaa
repz
dec
xor
jnp
arpl
repnz
sbb
xchg
xor
mov
adc
imul
push
outsb
scas
pop
lcall
and
ret
dec
pop
ret
aaa
and
sub
pop
mov
pop
scas
sbb
loop
sahf
cmpsl
push
sbb
data16
pop
sbb
imul
icebp
mov
dec
loopne
jecxz
rcl
xchg
fidivrs
pop
sbb
sbbb
inc
inc
push
ret
jmp
jle
and
inc
aas
es
pop
adc
sarb
cld
test
mov
sbbb
call
mov
imul
add
lea
mov
jne
outsl
stos
outsb
test
push
pop
ljmp
push
fs
add
sub
stos
btc
shll
and
cmpsl
or
sarb
pop
mov
stos
inc
fists
decb
mov
jnp
push
mov
cld
into
xchg
ret
mov
mov
push
aaa
push
push
and
push
pop
cmpsb
push
xor
push
dec
cmc
inc
pushf
int3
shlb
lea
pop
mov
pop
leave
orb
stos
push
or
cmp
arpl
out
fistpll
pop
mov
pop
and
jo
adc
lods
jp
add
pop
adc
and
cltd
aam
jecxz
cmpsb
in
mov
jmp
push
mov
loope
imul
push
nop
adc
mov
xchg
lret
xor
dec
sub
aas
popf
inc
stos
jo
arpl
cli
xchg
rcr
dec
adc
xorb
in
inc
mov
ja
add
lret
lods
hlt
in
dec
outsb
ja
repz
ss
or
dec
out
jle
in
xchg
jp
subb
rcrl
fsubrs
inc
mov
push
mov
into
in
push
out
cltd
lret
pop
sbbl
or
inc
loop
inc
add
imul
xchg
shlb
fsubl
jp
sbb
push
adc
inc
xchg
mov
sti
movsl
or
jmp
xchg
ret
mov
adc
dec
in
xor
fisubrs
fildl
jg
out
insb
push
mov
push
iret
aas
inc
in
jg
out
rclb
das
subl
push
imul
push
adc
arpl
add
lds
xchg
cmp
xchg
xchg
xor
mov
mov
sub
dec
jnp
push
cmp
xor
lahf
pusha
loope
xchg
bound
insb
adc
outsl
bound
lods
cmp
xchg
jecxz
movsb
jo
pushf
insl
xchg
xor
lock
or
push
inc
daa
push
sbb
or
mov
insl
pop
add
and
mov
in
and
ds
cmp
sbbb
out
in
mov
stc
add
sbb
jnp
pop
cmpsb
mov
pop
into
dec
adc
sahf
aas
outsb
cld
popa
push
fnsave
int3
adc
loope
xchg
jl
imul
rcrl
mov
outsb
fisubl
push
push
lret
outsl
inc
and
jnp
in
mov
out
call
stos
sub
xchg
mov
test
aaa
in
ja
inc
and
scas
rorl
or
aas
or
lcall
push
cmpsl
push
jo
mov
inc
jno
push
or
insb
push
dec
pusha
push
mov
xorl
sti
push
jae
sahf
repnz
mov
rcll
push
fsubs
ret
xor
sub
xchg
dec
js
lods
xchg
mov
mov
dec
std
push
faddl
cmp
push
popf
fistpll
imul
push
iret
clc
pop
or
ss
mov
add
sbb
fcmovnu
negb
or
and
arpl
std
pop
jle
or
adc
jae
aad
dec
xchg
mov
es
mov
cmp
shll
sbb
frstor
or
xchg
cmp
popf
mov
cltd
arpl
mov
das
out
jle
cmc
imul
fisubl
pop
xlat
add
fdivl
mov
test
insl
addr16
imul
lds
mov
sti
xchg
push
and
cmp
fadds
or
xor
dec
inc
cmp
pandn
aaa
sub
adc
jl
pop
inc
cmp
mov
mov
sub
push
pop
in
sbb
pop
fnsave
loope
push
ret
mov
arpl
sbb
dec
xchg
out
fistl
cs
xor
sbb
mov
mov
aaa
mov
es
fmuls
cmc
lea
or
icebp
and
fldt
loopne
sbb
cld
imul
mov
loop
int3
call
jno
pop
pop
and
lock
xchg
iret
adc
mov
rorb
xchg
scas
hlt
push
sub
lock
jge
sbb
jecxz
inc
or
faddl
dec
mov
lcall
ds
xchg
imulb
orb
outsb
scas
cmpsb
loop
cmp
std
lcall
xor
mov
adc
or
loope
jle
sub
push
xor
push
ss
clc
push
push
mov
dec
je
loop
imul
cmpsb
sarb
jbe,pt
shrl
lods
pop
jae
xor
mulb
mov
in
mov
mov
inc
int3
ret
sbb
cs
cmp
jge
rolb
inc
outsl
xchg
les
lods
pop
adc
lret
dec
rcrl
jg
add
mov
push
dec
insb
movb
je
push
add
fs
ds
mov
outsb
fdivs
cmp
and
push
sub
add
jle
pop
es
and
lods
in
arpl
ret
dec
sub
inc
push
mov
mov
test
movq
stos
flds
cmp
jl
lret
mov
push
push
mov
pop
xchg
movsb
fisttpl
adc
pop
pop
enter
out
jmp
int3
push
cmc
ss
lcall
rcll
or
dec
pushf
xchg
mov
test
cmp
xchg
xor
push
sbb
inc
pop
aad
lods
pop
cli
out
xor
rclb
xchg
and
pop
push
sti
sub
aam
aad
lret
nop
ss
cld
mov
cli
frstpm(287
fidivl
enter
mov
out
nop
orl
loope,pt
out
repnz
aaa
adc
adc
dec
and
push
inc
push
das
xlat
or
or
pop
jmp
in
aad
mov
mov
add
jb
repnz
sbb
sub
rorl
xchg
sbb
mov
cld
sbb
cmp
cmp
jecxz
aaa
push
movzbl
sub
lret
inc
jne
jge
cs
fdivrs
sbbb
dec
inc
int3
rclb
push
jbe
jle
xchg
push
push
sbb
insl
sub
dec
data16
ja
or
icebp
inc
push
lret
mov
xchg
cmpsl
adc
lods
fiadds
add
lcall
out
insb
pop
add
pop
dec
and
fsubr
fwait
cli
cmp
adc
pop
adc
lret
jl
dec
rorl
xchg
xchg
imul
int
sub
xor
lret
icebp
sub
adc
pop
and
mov
nop
mov
mov
inc
stos
scas
stos
movsl
shl
lret
test
mov
test
adc
push
and
jnp
mov
popa
jp
or
scas
icebp
rcrb
xchg
inc
push
aad
mov
pop
mov
mov
inc
adc
aaa
add
cmpsl
cmp
ret
sbb
xor
insb
xchg
mov
pop
pop
lret
loopne
dec
bt
mov
xor
push
inc
inc
imul
and
shlb
lret
sub
es
mov
dec
adcl
testb
jnp
mov
adc
push
jb
push
test
jl
shlb
aas
mov
lea
andl
mov
fadd
inc
jbe
in
mov
mov
add
mov
stc
jbe
lret
aaa
int3
inc
outsb
and
jecxz
push
aas
mov
in
mov
rolb
inc
mov
mov
pop
or
cltd
mov
push
pop
sti
mov
add
aam
loope
sarb
mov
pop
out
fcoml
pop
aad
push
jle
pop
sub
dec
rcr
pop
imul
enter
aaa
fstpt
fidivs
add
push
sub
fidivrs
xchg
xor
aas
or
push
sbb
stc
pop
shrb
int3
cld
flds
in
pop
pop
aad
mov
cli
scas
mov
loop
jg
jecxz
mov
repz
outsb
ficomps
or
push
push
rep
aaa
xchg
xor
sbb
cmp
shrl
jg
sub
in
in
mov
push
test
mov
add
sarl
push
test
jmp
or
and
dec
cmp
rcrb
aad
adcl
testl
data16
jp
sbb
daa
push
cmp
iret
fildll
movsl
sub
xchg
insb
mov
cmp
lods
aaa
xchg
aam
ret
shll
stc
cltd
fdivrl
loopne
scas
mov
and
je
sub
cmp
adc
push
cmp
adc
xor
pusha
adc
mov
sub
adc
sub
imul
mov
aaa
jle
jbe
repz
mov
outsl
inc
ret
aas
nop
jo
pop
lcall
jbe
loope
fstpl
test
aaa
xchg
repz
mov
das
push
es
rcrl
push
orl
inc
push
xor
testb
test
adc
mov
mov
inc
dec
leave
push
loopne
int
stc
xchg
pusha
cmp
into
sub
cmp
pop
dec
cmp
push
jmp
out
lret
adc
xchg
popa
xor
stos
add
aaa
addr16
cmp
es
sbb
cmp
mov
mov
and
test
scas
pop
pop
xor
xchg
es
lods
fistps
int
add
loope
in
pusha
stos
js
sbb
inc
inc
sbb
cmp
lods
test
or
iret
cmp
jp
aad
fcom
xlat
pusha
mov
pop
std
mov
clc
inc
cli
mov
lret
and
add
cmpsl
jo
stos
testl
sti
popa
repz
into
hlt
sub
xchg
aaa
push
push
es
jno
xchg
popf
jge
arpl
jge
jo
add
or
aaa
sbb
or
xlat
dec
js
or
cmp
outsb
ss
imul
not
dec
dec
mov
aaa
push
lea
mov
cwtl
cmpb
or
add
in
cmp
aaa
inc
test
insl
jp
pop
push
dec
sbb
xor
xchg
sub
mov
mov
fcompl
rcrb
dec
lcall
popf
out
xchg
lock
fidivl
pop
adc
pop
adc
mov
sbb
pop
pop
adc
lahf
insl
and
cld
das
pop
in
jmp
xor
in
and
rcrb
and
xchg
lcall
sub
aas
pop
fcompl
dec
cmpsb
neg
rcrl
pushf
aam
clc
mov
jae
dec
popf
jne
mov
cwtl
frstor
xchg
lods
outsl
lds
aaa
scas
inc
push
ljmp
pop
push
sarl
pop
push
jge
insb
hlt
and
cmp
push
arpl
imulb
and
or
loopne
mov
ret
and
dec
aaa
inc
mov
dec
in
inc
add
outsb
mov
loop
pop
cld
js
ja
stos
lods
inc
jne
sbb
add
or
pop
lods
stos
pop
loopne
shlb
repz
pop
imull
xchg
test
pop
mov
in
inc
popa
ret
mov
out
cli
mov
mov
dec
inc
dec
cs
stc
orb
xchg
rcr
lahf
adc
and
ds
fiadds
add
fisttpll
or
xor
divl
add
sbb
pusha
xor
test
sbb
add
imul
pop
mov
inc
or
jne
in
call
jbe
pushf
in
push
arpl
add
das
and
xor
pxor
fs
push
dec
je
fadd
cmp
test
sarl
lock
in
mov
xor
rcrb
pop
xlat
pop
and
mov
jbe
jbe
add
pop
cmp
push
push
out
into
outsb
test
dec
xchg
xchg
pop
add
xor
sub
nop
idiv
push
stos
push
sbb
lods
inc
push
pusha
cwtl
fbstp
cvtpi2ps
dec
fucomp
add
shlb
mov
rcr
imul
jle
push
adc
aaa
and
push
sub
imul
orb
add
movsl
xchg
call
push
cld
aad
jno
lcall
hlt
xchg
in
into
pop
jns
aas
mov
mov
lret
outsl
aam
adc
or
popa
rcrl
das
mov
mov
adc
fisubs
mov
test
je,pn
out
rclb
ret
jbe
pushf
sbb
clc
mov
aad
mov
and
ljmp
and
cmp
push
pop
dec
icebp
xchg
scas
lea
insb
or
and
push
popa
dec
jg
and
sbb
testb
lods
into
jge
into
jg
mov
pusha
mov
aas
pop
pop
cmp
pop
decb
lahf
enter
outsb
sarl
push
lcall
into
adc
sbb
pop
insb
out
lea
add
jle
and
dec
lea
jle
push
test
dec
or
or
xchg
inc
mov
adc
mov
fldt
cmp
nop
lock
cmc
mov
inc
pop
orb
lcall
faddl
sahf
xor
sahf
adc
inc
hlt
sbbb
js
bound
movsl
int
push
pop
mov
xor
push
in
ss
mov
sbb
xlat
fists
mov
mov
pop
ljmp
stos
adc
and
mov
mov
pop
loopne
shlb
pop
inc
and
dec
test
push
mov
fistl
inc
xor
inc
cltd
mov
xchg
jmp
mov
in
mov
xchg
jle
inc
shll
jp
mov
cld
mov
stos
xor
jb
push
mov
jbe
js
xchg
imul
mov
sub
lret
bt
bound
mull
xchg
in
push
sbb
pop
insb
pop
pop
xchg
mov
jae
js
mov
rcrb
cmpsb
push
dec
cmp
push
push
fnstcw
xor
inc
les
lods
inc
stos
jbe
leave
push
arpl
js
loop
and
lret
stos
shr
mov
dec
mov
sbb
mov
rorl
dec
repz
mov
cmp
cmp
jnp
and
test
sub
aaa
jmp
movsl
aaa
mov
sbb
jle
and
mov
and
dec
fwait
xor
or
mov
push
stos
inc
jb
xor
xchg
dec
sarl
insl
movsl
cwtl
push
mov
ss
lock
fs
xlat
and
sub
xchg
rclb
inc
div
scas
or
inc
movsb
shrl
jno
inc
jmp
insb
jbe
push
adc
test
sti
testl
adc
jp
fabs
insl
mov
adc
xor
rorl
or
jmp
leave
sar
cmp
pop
orb
data16
jo
cmp
jns
push
data16
push
sub
fdivs
out
jbe
adc
dec
lret
ret
adc
jno
add
jmp
mov
test
test
mov
test
data16
pop
aam
push
cs
scas
clc
pop
lods
inc
xchg
call
fnstsw
mov
loope
stos
cvtps2pi
xor
int
ret
dec
loope
add
pushf
xor
pop
fwait
mov
scas
pushf
inc
popf
xchg
cld
aaa
push
sti
jle
mov
pop
cld
sbb
outsl
arpl
xchg
mov
inc
aaa
sbb
jns
mov
push
jo
pop
stos
add
ja
sbb
push
xchg
mov
aad
mov
imull
fldt
mov
loop
out
inc
andl
iret
icebp
dec
or
and
xchg
cmp
mov
sti
out
into
std
push
cmp
sti
jmp
das
stos
lret
xor
adc
jl
data16
fbld
rcr
std
push
or
xor
fisubrs
push
std
mov
sbb
push
loopne
pop
nop
dec
je
cmp
repz
xchg
and
xorl
movsb
arpl
insb
and
testl
repnz
sub
aaa
hlt
cmp
sbbb
fwait
lcall
cmpsb
sub
push
pop
mov
adc
jle
movsl
adc
sahf
enter
dec
dec
push
lds
mov
jp
test
fcmovu
imul
xchg
jnp
inc
and
xor
or
lods
outsb
pop
add
nop
pop
insb
pushf
sub
jmp
jle
in
push
call
cmpsl
adc
sub
iret
pusha
lea
sub
call
xor
add
mov
jl
mov
sbb
fadds
divb
sbb
mov
and
call
and
jg
jg
sbb
jae
xlat
in
mov
pop
sbb
add
outsb
aaa
adc
gs
inc
je
mov
mov
mov
jg
mov
pop
cmp
test
aaa
lods
stos
adc
sahf
jmp
xchg
shlb
xchg
dec
xchg
inc
fdiv
pop
aaa
mov
xchg
data16
neg
ja
fdivp
arpl
adc
stos
mov
aas
mov
sti
mov
sahf
subb
test
out
dec
push
push
sbb
mov
cmp
pop
fcompl
fcmove
push
call
xchg
pop
xchg
dec
mov
cwtl
jns
aam
mov
shl
daa
cmc
jg
cmp
pop
adc
xchg
aaa
pop
iret
mov
imul
push
cmp
mov
cltd
jnp
jecxz
out
imul
xor
push
fldl
push
pop
movsl
pop
or
dec
das
cmp
les
aaa
in
movsb
xchg
jbe
out
nop
icebp
inc
out
mov
push
out
shr
xchg
xor
pop
enter
daa
cmp
fs
shl
movsl
pop
push
cli
out
xor
pop
sub
mov
lods
in
divl
xor
ror
mov
mov
adc
cli
lcall
fs
xchg
aaa
xchg
and
jmp
xchg
bound
dec
int
enter
aaa
pop
aam
data16
jbe
lods
sbb
lock
push
scas
dec
imul
aaa
mov
and
addr16
adc
dec
mov
test
sbb
test
in
scas
imul
js
arpl
xrelease
push
cmpsb
and
repz
shll
mov
dec
pop
sub
cmp
call
int3
into
hlt
nop
mov
fs
aaa
and
aaa
jecxz
push
fiadds
lock
and
jb
mov
dec
pop
push
push
popf
jg
push
xchg
inc
jnp
push
stos
mov
sbbl
fwait
jmp
nop
pop
cmc
bound
loope
mov
sub
sub
pop
cli
sbb
dec
dec
cld
jno
xor
add
insb
cs
cltd
mov
and
adc
lret
xor
fcmove
jle
aam
repz
lods
jl
jl
adc
out
pop
sbb
xor
push
loope
in
cmp
lahf
test
fucomi
aaa
stos
pop
and
mov
data16
std
jl
push
sahf
jmp
inc
xchg
cld
xchg
cli
out
or
inc
jmp
sti
cmc
sbb
subb
push
xor
loope
outsb
shl
mov
in
lea
add
push
pop
add
out
sub
jae
subb
and
std
sahf
pop
jns
and
repz
push
sub
loopne
mov
pop
add
pop
or
push
jno
ds
cmp
stos
jns
pop
jnp
adc
jp
or
jb
aaa
pop
add
jl
sbb
adc
mov
xchg
adc
mov
and
cmp
pusha
imul
cmp
lret
or
mulb
sbb
jbe
aam
mov
or
lret
sarb
mov
sbb
in
bound
iret
pop
fmull
pusha
mov
sbb
pop
scas
push
pop
ja
jno
in
cmpsb
faddl
push
push
test
nop
sarl
es
je
mov
cmpsl
xor
bound
ret
loope
dec
sbb
sarl
mov
icebp
ficoml
in
pop
sti
fstps
dec
aad
add
or
aas
add
xor
pop
fdiv
pop
jp
sbb
and
add
mov
xchg
fidivrl
inc
les
icebp
cld
in
mov
sub
jl
fiadds
outsb
enter
rclb
das
test
nop
sbb
imul
lea
xorl
lock
xchg
or
cld
repz
pop
lahf
jbe
pop
jo
fsubl
push
jmp
shrl
sbbb
add
add
fstpt
mov
push
dec
rol
ss
int3
mov
dec
addr16
cmp
push
or
push
mov
xchg
mov
jp
push
sbb
mov
sbb
mov
leave
stos
mov
lahf
rol
dec
icebp
hlt
shll
jne
stos
push
inc
inc
mov
mov
adc
inc
loope
pop
mov
adc
cli
sbb
outsl
jae
out
mov
sbb
push
cmp
lds
dec
insl
xchg
sbb
mov
jecxz
pop
jg
fs
xchg
iret
cmpb
aam
test
inc
das
mov
cmpl
stc
out
int3
sub
sub
out
push
fsubrl
sbb
pop
push
lret
jbe
sbb
dec
inc
push
fldenv
subb
and
dec
ss
orb
aaa
dec
add
pop
enter
dec
xchg
ret
cmp
loopne
insl
inc
prefetcht2
jnp
out
dec
cmp
in
dec
push
shll
xor
push
xchg
fwait
cmp
test
sbb
or
divb
adc
cmp
add
pop
das
sbb
cmp
inc
shl
shlb
andb
inc
out
jae
cmc
std
jo
fisttps
scas
lcall
add
and
and
insb
divb
adc
imul
xchg
sahf
push
push
push
sbb
mov
and
out
mov
or
push
pop
add
mov
aam
imul
and
push
mov
mov
jl
test
js
shl
adc
lock
mov
mov
mov
sbb
pop
repz
mov
loopne
outsb
ja
adc
mov
inc
and
cs
cmp
xchg
enter
or
cmp
mov
xchg
pop
or
out
mov
lock
xchg
cmp
fnsave
insl
sub
or
in
cmp
xchg
add
mov
inc
mov
dec
push
jmp
stc
dec
cmp
sub
fcmovb
imul
ja
cmp
std
addr16
mov
sahf
xchg
mov
loopne
jo
popa
nop
add
mov
leave
cld
mov
jo
loope
gs
xchg
sbb
nop
jo
sub
or
scas
in
push
stc
mov
test
xor
mov
xchg
in
jecxz
sti
call
dec
addr16
jnp
mov
std
neg
cmp
popa
jmp
inc
loopne
jge
jg
ss
pop
mov
mov
inc
aam
pop
sarl
jmp
and
leave
sbb
mov
pop
jo
dec
cltd
dec
xor
pop
andl
pop
outsl
arpl
adc
iret
xchg
and
sti
outsl
js
aaa
movsb
xchg
sar
lods
out
cmp
mov
xchg
mov
sub
stos
cli
or
cmp
rcrl
icebp
sbb
mov
and
push
or
loopne
sti
fcoms
inc
cmp
inc
pushf
lahf
out
sbb
sbb
pusha
repnz
test
pop
test
les
dec
cli
sub
jns
rcrl
sbb
jb
xlat
pop
dec
lds
push
ds
dec
cmp
loop
in
push
movsl
pop
aaa
xchg
dec
outsb
imul
add
fildl
gs
arpl
and
mov
pop
cwtl
lock
out
lds
mov
xor
jp
ret
mov
fldln2
jae
xchg
ja
shrl
pusha
idivb
xchg
cmp
stc
push
fucomi
jne
fistps
adc
xchg
sbb
cld
or
cmpsl
fwait
xor
jne
mov
xor
pop
in
mov
cmpsl
sub
mov
rol
sarb
mov
ret
lods
popf
mov
cmp
cmp
mov
mov
pop
scas
jecxz
push
test
ja
cmp
stos
mov
cs
aas
lock
outsb
jb
adc
xchg
mov
imul
sbb
hlt
sti
cmp
enter
pop
je
dec
icebp
js
push
lret
cmpsl
jno
mov
dec
cltd
in
arpl
xor
in
test
out
fs
je
nop
dec
cmp
sahf
fdivp
pop
push
pop
push
inc
enter
into
cmp
pop
sub
adc
aas
inc
repz
pushf
popa
mov
push
sbb
mov
int
je
push
pop
les
ljmp
es
pop
sbb
mov
mov
add
addb
jo
stos
outsb
mov
pop
pop
dec
and
pop
mov
sbb
pop
mov
fisttpl
insb
repz
add
lret
pop
jmp
lret
dec
loope
push
and
jno
fwait
cmp
add
icebp
dec
cmp
nop
enter
mov
add
cmc
jno
add
in
dec
adc
push
lret
scas
fdivrl
xchg
pop
bound
jno
aas
mov
xlat
je
push
pop
xchg
and
and
andb
dec
call
push
add
fistpl
out
addr16
outsb
pop
cmp
fimuls
movsl
icebp
aaa
mov
jns
sub
subb
inc
mov
inc
mov
sbb
popf
popa
adc
test
in
popf
ljmp
or
ss
xchg
lcall
notl
lea
int3
cmp
hlt
pushf
mov
stos
sbb
out
loope
fadd
pop
jo
cmpsl
mov
sbb
das
std
add
arpl
repz
or
lcall
dec
cmp
lock
xchg
icebp
daa
dec
lahf
jbe
mov
pop
mov
and
lock
in
repz
loope
sub
aaa
sbb
into
push
mov
pop
jbe
cmp
and
sti
push
or
aam
sbb
rorb
aaa
xchg
daa
test
neg
and
xchg
cs
lret
sbb
inc
ja
jb
jl
pop
mov
in
mov
xchg
mov
ss
adc
ret
in
jne
jmp
sti
add
push
mov
push
cmpsb
lret
notl
dec
test
inc
icebp
aaa
jne
jne
lods
mov
test
pop
push
rorb
jb
xor
stc
ds
add
mov
mov
repz
pop
adc
adc
shlb
cmp
in
arpl
push
fisttpl
daa
and
jb
aam
aaa
add
fmull
es
adc
fisubrl
jno
movsb
in
dec
cmpsl
xor
xor
addb
and
pop
dec
lcall
hlt
xor
lods
add
in
or
adc
cmp
adc
inc
xor
push
sub
sbb
data16
test
in
cli
cmpb
int
dec
mov
sub
sbb
cmc
mov
mov
mov
test
mov
das
in
xlat
cli
enter
jbe
shl
loop
scas
fsubr
push
inc
pop
mov
inc
pop
lret
pop
outsl
testl
loope
pushf
fisubrl
adc
jbe
insl
fisubs
cmp
sub
and
adc
stos
outsb
push
push
adc
push
mov
mov
lods
mov
clc
aas
lea
jo
cs
idiv
pusha
adc
clc
popf
inc
pop
enter
push
pop
cmpsl
fnstenv
loopne
sub
pop
mov
sbb
lea
into
mov
push
fcompl
sbb
mov
push
andb
jmpw
aaa
shl
negb
fstpt
push
sbb
adc
outsb
mov
lods
pop
stos
pushf
mov
mov
jnp
dec
xor
popf
jnp
inc
cmp
divl
insb
sub
add
in
mov
call
or
xlat
icebp
inc
push
arpl
push
and
push
fcmovnbe
xor
adc
mov
mov
idivl
cmp
lea
pushf
lods
inc
xchg
inc
pop
out
fistpl
pop
lret
enter
xchg
jbe
fwait
mov
data16
push
fstl
xchg
int
test
pop
movsb
mov
pop
adc
xchg
insb
xchg
repnz
sbb
call
pop
cmpsl
imul
add
loop
clc
sbb
cmp
imul
push
xabort
push
fldcw
repz
sub
bound
or
jbe
push
ret
std
loopne
pop
pop
stos
stos
jp
hlt
rcrb
movsl
dec
adc
mov
mov
or
push
pop
in
cmpsb
adc
mov
push
stos
popf
cmp
out
xchg
jns
aaa
cli
dec
add
mov
leave
leave
pop
sbb
call
stos
faddl
fs
inc
jp
sbb
cld
nop
push
xorb
cld
loopne
insl
and
fstpl
pop
js
mov
imul
outsb
sbb
aam
inc
mov
aam
fwait
jecxz
clc
scas
test
xor
lcall
jecxz
push
outsb
subb
xchg
pop
sahf
sub
in
mov
jmp
jmp
fstpl
fimull
nop
in
xchg
int3
dec
bound
adc
loope
and
mov
cmp
in
cmp
arpl
or
insb
adc
bound
std
arpl
das
and
movsb
mov
jo
repz
ljmp
jge
pop
fdivl
imul
gs
bound
les
js
aaa
dec
push
sbb
jnp
ret
mov
jp
mov
fistps
mov
addr16
std
in
outsb
cltd
lret
imul
sub
mov
scas
arpl
dec
movsl
inc
and
call
dec
mov
cmp
ja
or
inc
and
lods
shll
fildll
dec
test
lea
cmc
fisttpll
push
mov
mov
jno
jp
aaa
loop
das
xchg
cmp
loope
sub
and
pop
hlt
lock
lret
adc
mov
cmp
loope
jle
popf
adc
xchg
cmpsb
inc
iret
shll
fs
test
xchg
push
mov
push
scas
cmc
incl
sbb
inc
or
cwtl
dec
scas
pusha
aaa
sub
mov
shlb
ja
inc
sbb
in
es
adc
inc
and
jmp
push
hlt
in
cmp
das
ja
push
and
cmp
jns
fimuls
sbb
sbb
in
das
push
dec
mov
mov
stos
stos
mov
cmpl
rcrb
push
imull
pop
fisttpll
mov
push
pop
push
mov
and
mov
call
iret
mov
hlt
adc
jno
lock
jmp
aam
dec
mov
inc
inc
add
pop
and
icebp
dec
xchg
aaa
jmp
stc
push
fisttpll
das
test
scas
les
adc
popa
imul
mov
cmpsl
inc
insl
into
ds
in
add
xchg
or
icebp
xchg
xchg
jp
push
push
ljmp
and
aas
xchg
ret
mov
lea
aaa
adc
cmp
int3
cld
movb
pop
cmp
push
inc
repnz
pop
mov
add
mov
sub
mov
xchg
pop
inc
cld
xchg
scas
jmp
xchg
sbb
std
or
inc
call
mov
decl
int3
mov
ret
and
adc
fdivr
dec
in
repnz
sarl
inc
xor
or
cmp
test
sub
fildll
pop
xor
mov
mov
enter
push
das
mov
fstp
test
add
insb
sti
addr16
push
fisttps
xchg
test
lret
lea
push
xchg
jnp
dec
mov
shlb
and
pushf
stc
incl
jbe
push
pop
cli
jns
xchg
dec
mov
mov
or
int
lock
mov
ror
inc
xlat
cld
lods
mov
sti
pop
int
ret
inc
stc
mov
push
in
sti
xchg
adc
inc
out
dec
fwait
mov
pop
fadd
sub
test
mov
mov
imulb
xchg
loope
in
xor
cli
sbb
xor
or
sbb
xchg
adc
lcall
imul
jp
xor
mov
push
mov
dec
xchg
stos
loopne
aaa
bnd
popl
fidivrs
fwait
inc
jno
outsl
test
daa
xor
mov
sub
cld
in
mov
insl
jl
sbb
xor
subl
cmp
push
bound
xlat
push
or
mov
inc
jne
sbb
pop
cmp
pop
mov
jle
int
sbb
cltd
data16
shl
pop
jge
cli
clc
jle
mov
call
rcr
cmc
mov
lahf
ret
shr
int
push
jle
or
je
or
inc
adc
mov
movl
mov
pop
aaa
mov
int
in
inc
lds
in
rcll
jne
jae
adc
insb
sub
std
mov
pop
pop
mov
mov
inc
mov
fs
inc
mov
in
ret
jae
lods
pushf
ret
sub
daa
add
mov
in
popf
aaa
clc
push
dec
std
sbb
ret
cli
or
lret
repz
lods
xor
stc
je
in
popa
sbb
mov
int3
daa
mov
jb
mov
rorl
imul
roll
or
in
dec
sub
and
mov
sti
insb
inc
call
jno
inc
aas
mov
push
aad
loope
adc
mov
arpl
xor
jmp
cmp
jb
sarb
int3
mov
cmp
lret
xlat
jno
xchg
or
push
iret
out
xor
jmp
sbb
mov
cmp
imul
inc
dec
inc
mov
popf
cld
insl
out
lret
cld
push
cmp
xlat
jb
es
xchg
pop
cmp
xchg
shl
sbb
inc
sarb
jnp
push
pop
int
adc
enter
es
pop
jle
dec
dec
push
ficoms
addr16
out
xor
pop
adc
jnp
jg
mov
cltd
shlb
sbb
mov
or
mov
or
pop
xchg
jle
call
lret
adc
ja
sub
gs
mov
fnstcw
loopne
in
mov
mov
jg
jp
pusha
sbb
std
or
ss
mov
xchg
popa
sbb
and
xor
jmp
rcl
mov
jmp
loopne
arpl
cltd
mov
dec
push
cmp
xlat
xor
adc
sbbl
push
and
sub
into
insb
or
dec
pop
and
gs
sub
jb
stc
lods
mov
add
call
or
pop
subl
add
mov
pop
imul
icebp
sub
inc
and
mov
out
mov
int3
lcall
aaa
xchg
xor
sub
inc
ret
bound
imul
dec
shr
inc
fsubr
push
out
iret
imul
divb
pop
cmp
dec
mov
push
outsb
pop
xchg
int3
fistpl
dec
fxch
adc
aas
shlb
fldl
sbb
sbb
pushf
push
rorb
and
popf
movsl
and
imul
lods
add
repz
stos
outsb
stc
xor
inc
or
jae
std
aaa
xor
insb
outsl
or
ds
pop
insb
sub
dec
sbb
ja
rol
xchg
push
stos
pop
arpl
mov
cltd
inc
xor
clc
or
pop
push
es
sub
fsubr
mov
or
jbe
out
cmp
cld
or
jl
nop
inc
cmp
ja
ds
xchg
lock
jo
xchg
aaa
mov
xchg
aam
xor
cmpsb
pop
es
std
xchg
jp
repnz
and
hlt
pusha
mov
push
add
sub
or
push
aaa
sub
jns
mov
gs
adc
inc
aaa
jb
cmp
mov
jno
lahf
int
lods
mov
sbb
dec
cwtl
fxtract
lock
push
pusha
out
adc
in
or
xchg
out
es
or
xchg
cmp
or
test
inc
seto
and
andb
pushf
inc
jmp
pop
std
and
add
pop
lcall
xchg
bound
les
pop
mov
jl
cmp
dec
sahf
data16
jmp
xor
push
inc
pop
es
jecxz
pop
mov
out
pop
iret
add
jp
lock
in
sbb
inc
bound
cmp
repnz
ljmp
fldl
jmp
cmpsl
cmp
mov
jnp
and
push
fsts
fidivl
jbe
cmp
xchg
add
ss
fwait
lock
rcrl
push
and
mov
jbe
fmulp
fsubl
pop
push
jle
loope
xchg
dec
push
fcmove
xchg
and
pop
push
pop
add
mov
cmp
mov
lret
jno
lcall
jb,pn
adc
xor
sbb
shrl
in
push
add
jle
cmp
inc
js
mov
cmp
mov
ds
pusha
pop
aas
in
in
cmp
xchg
inc
pop
add
cmpsb
mov
sub
outsl
adc
nop
xorl
sub
push
and
in
mov
mov
lret
fwait
mov
sbb
in
lds
arpl
xchg
divl
jns
insl
int
out
mov
jecxz
fstpt
test
mov
cmpsb
jl
into
pusha
out
adc
imul
lods
outsb
jns
jo
xchg
out
das
jecxz
cltd
or
loop
sbb
push
leave
sbb
lods
xor
imul
cmp
fcompl
xor
das
mov
fs
or
aaa
dec
testb
test
mov
faddl
fisttps
out
sar
fs
cwtl
or
xor
lods
and
cld
daa
in
sub
push
aas
ret
repz
pop
test
lret
dec
and
jecxz
xlat
pop
sbb
inc
mov
jo
call
mov
mov
fdivrs
stos
jle
cmpsl
repz
xchg
or
sub
pop
pop
test
ss
mov
stc
shll
push
int
dec
sbb
mov
nop
movsl
adc
dec
stc
call
loop
clc
js
ret
xchg
cli
xor
ljmp
aaa
pop
mov
sbb
jmp
or
loope
outsb
js
shlb
lret
sub
mov
fmull
mov
sub
dec
and
mov
inc
or
adc
gs
mov
icebp
xchg
push
stc
cmp
jo
sti
rcrl
push
and
aad
je
jl
out
outsb
and
add
in
adc
stc
sub
and
jecxz
jp
out
xor
mov
add
xchg
ja
sbb
stc
mov
pop
jp
aaa
inc
jb
add
pop
and
sub
js
pop
in
cs
std
jle
outsb
add
scas
lcall
sbb
in
cmp
mov
pop
push
mov
lods
mov
rcll
std
loopne
or
pop
je
dec
out
mov
xor
lahf
ss
call
jmp
pop
mov
jp
jp
adc
jge
jmp
movsl
jmp
xchg
imul
pop
inc
jmp
mov
pop
popa
es
mov
and
xchg
pop
mov
nop
ds
lds
cmpsb
xor
lcall
ret
sub
ret
lds
rorl
xlat
clc
jg
push
leave
shll
fcom
jge
fyl2xp1
xor
pusha
out
cmp
into
adc
xchg
dec
mov
sbb
popa
jbe
into
dec
pop
pop
frndint
pop
adc
fcoml
lea
inc
push
and
outsl
xchg
ret
ja
call
jp
xchg
inc
add
popa
inc
ret
pop
call
dec
or
inc
in
jbe
xchg
or
insb
jmp
ljmp
lret
mov
rolb
mov
push
xchg
addr16
lcall
andl
mov
adc
jle
das
fwait
mov
in
stos
arpl
pushf
xchg
sbb
xor
fcmovnb
mov
lcall
pop
lea
in
lcall
mov
mov
pop
aaa
push
push
cmpsl
popa
push
sub
insb
dec
in
loope
mov
fldcw
pusha
or
jge
shlb
push
push
push
pop
pop
sub
dec
inc
fnstcw
sbb
out
int
jl
push
push
jb
pop
and
mov
pop
xchg
dec
imul
push
cwtl
add
sub
int
cmp
lods
rcll
cld
sub
clc
xor
in
jge
xor
add
sbb
cld
idiv
and
xor
bound
push
sub
aad
out
mov
pushf
or
inc
dec
popf
pop
jb
adc
rorl
pop
or
imul
js
mov
push
pusha
inc
popf
cmp
and
add
loop
pop
pop
fisubl
insb
lcall
jmp
jns
push
xor
mov
cmp
inc
inc
xor
sbb
mov
or
ror
repz
lahf
stc
sbb
sahf
pop
and
sarl
mov
jp
ret
bound
jne
xchg
mov
inc
fistpl
push
lret
lcall
cld
cmp
pop
push
in
pop
add
mov
imul
push
jno
dec
cld
call
jmp
jno
sbb
mov
or
cmp
cltd
cwtl
cli
int3
jb
mov
jb
fcomp
inc
mov
in
pslld
scas
mov
sbb
ss
adc
cmp
xchg
cmp
push
mov
pop
out
je
sbb
rclb
pusha
std
sub
jae
jno
jbe
pushf
rcll
cmp
jo
pop
movsb
mov
enter
loopne
mov
mov
xchg
lods
imull
aas
sbb
repz
std
ret
inc
bound
mov
les
into
cld
mov
stc
cmp
pop
aad
in
xor
ljmp
insb
xchg
xchg
pushf
stos
jle
jbe
pop
outsl
sarb
jle
sub
sbb
aaa
and
in
pop
stc
xchg
bound
inc
jmp
and
push
xorl
roll
arpl
clc
lret
fs
loope
mov
js
fwait
imul
popa
fcmovnbe
popf
cwtl
jnp
dec
fstpt
cltd
stc
push
sbb
inc
inc
mov
jp
fists
insb
lock
lods
jl
sbb
aaa
repnz
lcall
lods
or
inc
test
or
push
add
jb
push
je
stos
in
sbb
icebp
inc
dec
and
xchg
pop
lea
adc
mov
jnp
pop
ret
xchg
sbb
xchg
add
cmp
dec
inc
sbb
add
testl
test
fsts
test
inc
push
mov
mov
inc
push
pop
mov
call
dec
cld
push
jecxz
ds
push
cmp
nop
test
adc
mov
insb
sbb
add
sub
adc
mov
addl
aaa
arpl
hlt
or
mov
xchg
movsb
sbb
pop
jle
add
arpl
jns
dec
scas
xchg
xchg
aam
loope
lea
out
jo
push
movsl
inc
filds
mov
or
pushf
sub
int3
inc
shlb
add
out
pop
or
sbb
ss
fs
jecxz
push
add
inc
xchg
outsb
fstpl
aaa
out
push
insb
das
push
inc
push
dec
imul
xchg
jp
mov
xor
pop
add
ja
push
outsl
int
mov
push
cmp
test
mov
jae
mov
int3
into
je
sbb
xor
cld
mov
aas
movb
inc
lea
or
jo
cli
mov
cld
test
jmp
push
sub
icebp
leave
adc
mov
jl
pop
or
mov
pusha
push
inc
les
push
out
out
pop
add
icebp
lcall
cmp
fildll
fnstcw
jo
fs
jbe
movsb
sbb
subl
xchg
sbb
adc
mov
xlat
stc
sub
jecxz
cmp
stos
push
pop
sbb
jb
jmp
push
sub
xor
dec
mov
sbb
xchg
inc
push
push
test
sbb
fstpl
in
lock
in
leave
jae
mov
out
jno
cmp
inc
js
ficomps
enter
jge
negb
mov
jae
jmp
nop
mov
call
fwait
aaa
cmp
mov
push
cmpl
es
fwait
imul
pop
cmp
dec
dec
mov
jmp
fstpt
vshufpd
outsb
dec
repnz
and
imul
inc
arpl
loop
enter
cld
insb
xor
int3
and
lds
dec
addr16
add
pop
add
int
xor
scas
push
in
push
cmp
add
dec
lcall
jge
fdivr
and
inc
and
lret
in
mov
xor
jg
jae
lahf
xchg
mov
mov
pop
fwait
sub
pop
xorb
aaa
pop
lea
pop
shll
push
push
nop
shl
push
shl
push
das
imul
pop
repz
in
mov
xlat
adcl
xor
out
mov
mov
xchg
subb
sbb
mov
push
inc
push
scas
sub
cltd
es
cmp
lahf
loope
adc
lock
mov
test
imul
sbb
mov
jle
sub
cmpsl
imul
into
pop
fcomi
sarb
cmp
jmp
fistps
data16
jo
cmpsl
aaa
dec
call
mov
iret
aaa
xchg
fldl
push
ss
rcrl
inc
shlb
out
fstps
add
rcrb
xchg
pop
mov
shlb
mov
or
into
inc
add
jle
dec
pushf
mov
and
hlt
fs
mov
dec
loope
fistl
jl
bound
mov
xchg
cmp
push
and
inc
int3
loop
mov
or
into
jbe
sub
loop
lds
or
dec
add
ret
sarb
jnp
sbb
push
arpl
push
cmp
rolb
stc
or
mov
jge
sbb
std
pop
lods
push
pop
out
int3
bound
iret
jl
mov
sbb
sub
pop
aaa
xchg
jmp
test
ret
adc
and
ds
push
stos
push
jne
fldl
aas
inc
xchg
popf
test
mov
scas
fwait
pop
out
sbb
pop
scas
in
sub
xor
loop
xchg
mov
jle
xor
sbb
or
jl
pop
sahf
or
push
fcoml
insl
push
pop
dec
dec
lret
mov
notl
and
or
outsl
push
xchg
clc
add
pop
int
push
stos
icebp
fwait
imulb
popf
test
inc
fadd
cmp
out
imul
mov
cmp
xchg
filds
push
test
fidivl
loopne
mov
mov
pusha
sbb
pop
mov
and
fxch
nop
push
jle
xor
out
call
test
xchg
lods
sbbb
in
repz
push
call
popf
lret
cwtl
cmp
stos
xor
and
popa
pop
jae
pop
jnp
sub
inc
add
mov
bound
push
add
mov
lods
mov
jae
mov
push
insb
nop
jo
jmp
js
pusha
adc
out
push
fwait
push
jo
es
iret
push
add
icebp
fdivl
outsl
jecxz
inc
popa
push
cmp
ret
lcall
icebp
or
popa
jecxz
mov
push
and
cmp
xor
hlt
push
mov
cli
fs
mov
and
jg
push
es
cmpsl
jle
push
cmp
jmp
das
push
mov
orb
pop
pop
cmc
add
xchg
loope
inc
mov
and
sbb
inc
js
mov
enter
push
jecxz
jo
repz
mov
and
stos
data16
adc
sub
out
push
sub
pop
aaa
add
in
mov
pop
orb
mov
ja
jmp
adc
aas
das
aaa
pop
mov
aam
jg
in
mov
adc
pusha
sbb
rcrb
scas
jno
pop
jno
rcl
and
xlat
leave
movsl
adc
cmp
stos
into
sub
jnp
xor
ja
ljmp
cwtl
out
pop
mov
lret
cmp
or
scas
inc
rcrb
sahf
xor
push
fdivrs
pop
jmp
mov
push
aaa
lods
add
sbb
es
adc
fsubs
mov
sarl
icebp
movsl
aam
sbb
stc
cli
sbb
ljmp
in
in
xlat
pushf
lahf
cli
push
sub
mov
cmp
ljmp
push
push
mov
movsl
jg
add
adc
lock
inc
insl
fsubl
arpl
sahf
sub
outsl
mov
fsts
aam
popf
cs
sbb
cmp
pop
xor
lret
mov
push
mov
cmp
pop
xchg
stc
jbe
pop
lds
and
mov
push
push
inc
mov
cld
sub
das
push
inc
daa
popa
sahf
pop
outsl
add
in
aaa
mov
push
mov
xorl
push
mov
and
ret
xchg
mulb
jo
push
hlt
and
dec
fcomi
cmp
xor
rcr
or
negb
jo
or
in
adc
add
sbb
int3
add
push
in
in
jp
mov
loope
in
pop
mov
xor
in
dec
aaa
fcoms
mov
ret
mov
jg
nop
sub
enter
mov
xchg
popf
pop
in
pop
pop
cmpsb
out
ret
fwait
addl
lods
aad
jb
and
dec
pop
daa
cmp
mov
xor
mov
sub
in
dec
cld
jg
and
das
cld
call
xor
inc
jmp
lods
adc
aaa
lds
andb
mov
xchg
fs
test
std
mov
adc
outsb
pop
cmp
out
xor
pop
aam
or
sti
push
insl
adc
jl
dec
xorb
fstps
cmp
add
pmulhuw
sub
mov
ds
mov
pop
ss
cmp
push
mov
mov
mov
mov
orl
aaa
push
and
rcll
push
pushf
out
or
bound
mov
and
sbb
in
ret
nop
add
in
and
aaa
fldl
add
std
arpl
into
imul
mov
and
loope
inc
xor
mov
faddp
ret
mov
mov
adc
xchg
mov
add
pop
dec
inc
fadds
js
add
push
filds
out
and
jge
xor
lahf
jnp
repz
aaa
push
icebp
test
std
mov
testl
push
pop
pop
push
sub
jmp
pop
jo
in
cmp
pushf
cld
xor
shlb
fcomps
xchg
scas
lret
or
xchg
dec
mov
jno
jmp
adc
pop
insb
cmpsl
in
push
scas
lret
loope
sub
jnp
pop
xor
xor
rcrl
cmp
adc
fisttpl
scas
in
bound
imul
pop
cmpsb
ret
xlat
in
and
daa
popa
test
jo
js
cmp
daa
adc
fldt
add
push
lcall
pop
pop
mov
xchg
dec
fs
cld
sbb
lcall
mov
push
or
jmp
mov
inc
int3
aaa
enter
mov
cmpsb
fcomps
in
mov
xor
jg
jge
movl
add
jl
cmp
fucomi
mov
sbb
pop
nop
lret
repz
popa
sti
and
fwait
imul
add
dec
das
mov
insb
rclb
adc
data16
ss
orb
ja
pop
sbb
jbe
mov
adc
aaa
sub
xor
mov
cmp
fistpl
inc
xor
icebp
ficompl
xchg
pop
ficoms
imul
aaa
xchg
sub
fcmovnbe
adc
xchg
dec
sbb
sub
pop
push
mov
lret
mov
pop
pusha
cs
punpckldq
xor
lods
in
rcll
push
mov
popf
sarl
sub
pop
sbb
jp
add
cmp
mov
dec
ja
adc
xchg
out
stos
lea
leave
push
loope
es
xlat
mov
jb
mov
lock
push
scas
fnstcw
stos
ret
cmp
mov
in
sbb
mov
daa
xorl
adc
xor
adc
lcall
xor
xor
hlt
push
cmp
pop
popa
jnp
bound
cwtl
mov
xchg
and
clc
xchg
std
dec
shrb
in
sub
and
push
jg
or
cwtl
xchg
jb
in
lods
mov
sahf
sbb
lds
icebp
or
inc
imul
jp
cmp
pusha
sahf
inc
movsl
inc
aaa
cs
cltd
sbb
test
jnp
test
ljmp
sbb
movsl
adc
repnz
mov
jmp
fdivrl
sub
loope
pop
sbb
and
jle
adcb
ja
rol
mov
inc
or
push
inc
and
lret
mov
mov
outsl
push
ja
add
push
outsb
out
push
xlat
lods
fsubrl
loope
pop
sbb
cmp
popf
lahf
cmp
jns
pop
mov
jbe
or
ss
int
pop
pop
hlt
xchg
jne
push
ja
sar
test
push
lock
daa
fldenv
bound
inc
add
ss
inc
loop
sbb
addr16
lea
and
fistpll
pushf
dec
sub
push
inc
jle
call
fwait
pop
pop
sbb
jns
or
fildl
xchg
shll
cmp
mov
cmp
cmp
adc
lock
fistl
dec
jg
frstor
push
xchg
push
icebp
push
xor
in
aaa
dec
fs
fmull
mov
cmp
sarl
imul
adc
mov
adc
inc
push
rcrb
cltd
ss
pop
repz
stc
lret
jo
outsb
and
outsb
pop
fsts
rorl
bound
decl
outsb
ljmp
fisubs
lret
cmp
fistpl
in
xchg
jo
mov
push
xchg
mov
and
mov
lea
out
out
cmp
mov
pop
pavgb
aaa
jne
adc
mov
sbb
jmp
jge
sbb
push
rclb
dec
popa
lcall
clc
jno
in
pop
pop
inc
add
push
pop
inc
lret
pop
cmp
xchg
push
inc
cltd
push
addr16
cmp
int
fildll
mov
bound
mov
xchg
cmp
inc
mov
jp
dec
add
xchg
sub
iret
aam
lcall
jno
ja
outsb
in
je
daa
mov
sbbb
dec
in
iret
mov
cmpsb
xor
nop
cmpsl
outsb
aam
outsb
and
inc
sti
sub
xchg
loope
and
shlb
mov
int3
mov
mov
bound
mov
dec
xor
xor
pmovmskb
lret
jno
scas
dec
cmpsl
adc
fcoms
int3
mov
add
cltd
shll
adc
mov
xor
movsl
push
aas
or
adc
mov
jle
push
ljmp
and
orb
or
pop
cmpl
jmp
or
aaa
dec
lret
sbb
das
dec
in
add
xlat
into
stc
and
fnstenv
xchg
mov
and
fdiv
test
in
mov
aaa
jecxz
std
push
jo
mov
cmp
cmp
or
pop
adc
sbb
dec
sbb
mov
imul
push
das
jmp
lret
lea
cmp
jl
dec
movsb
ss
es
addl
pusha
jns
jmp
push
mov
add
mov
pop
ret
sbb
out
add
arpl
loop
das
pop
test
daa
enter
iret
mov
cmp
adc
andb
push
rcll
mov
pop
sbb
shl
cmp
out
jle
dec
inc
jle
testb
daa
jb
cmp
outsl
aaa
pop
in
gs
mov
test
sbb
dec
sub
out
ss
xor
aam
call
aaa
cmp
sarl
sub
fnstsw
outsb
leave
push
in
pop
pop
in
addb
add
shll
xlat
je
pop
sarb
imul
mov
loopne
mov
cmpsl
inc
in
push
and
cmc
fnstsw
inc
jno
cmp
imul
enter
loop
mov
jnp
sbb
fnstsw
xor
cld
cmp
ss
jnp
faddl
shlb
scas
loope
repnz
dec
andl
shlb
inc
jmp
xchg
dec
pop
cmp
repz
mov
fstps
cmp
mov
insl
fdivs
inc
jecxz
mov
loopne
ret
jmp
imul
outsb
mov
mov
fsqrt
mov
andl
add
jl
mov
and
dec
fisttpll
fdivs
push
test
sbb
mov
loope
mov
and
dec
mov
jno
cmp
es
imul
push
pop
mov
loop
mov
adc
mov
rorl
lods
pop
xchg
test
aad
xor
fs
jmp
in
xchg
mov
cwtl
ds
hlt
inc
rcrb
sub
pop
pop
loop
imul
sub
pop
cmp
loopne
adcb
cmc
fs
dec
mov
repz
add
cli
icebp
and
sbb
mov
sub
fisubs
outsb
sbb
clc
out
cmp
das
push
xor
sbb
decb
imul
lods
arpl
movsl
rcrl
jb
lods
mov
push
jo
xchg
sbb
mov
aaa
sbb
sti
xchg
rclb
movsb
push
mov
cmp
cmpb
push
adc
mov
xchg
or
ds
dec
cld
and
test
xchg
jbe
sbbl
outsb
and
mov
xchg
stc
dec
shll
mov
loope
jb
xchg
push
scas
aam
dec
push
inc
pop
cmp
pop
arpl
mov
mov
orb
cmp
cmp
and
test
mov
push
test
jmp
push
ffreep
and
cmpsl
scas
dec
ss
dec
mulb
adc
in
jecxz
dec
rcrl
in
dec
das
pusha
pop
sti
repz
pop
mov
in
ja
pusha
andb
bound
pop
arpl
test
ss
pop
fs
inc
cs
loope
push
jl
sbb
inc
ret
clc
mov
lret
cmp
mov
pop
fwait
dec
add
cmp
std
cmp
mov
mov
lret
ret
dec
frstor
or
pusha
outsl
sbb
lods
insb
xchg
mov
pop
cmp
mov
scas
pop
ljmp
pushf
push
mov
dec
mov
loop
test
popf
or
popa
inc
aam
cmc
add
mov
jb
dec
gs
xchg
scas
xlat
in
xchg
lcall
add
mov
popf
lds
xor
jg
lret
mov
mov
add
jbe
popf
aaa
adc
nop
pop
jae
sbb
aas
add
and
xchg
fisttpl
lods
cmpsb
and
in
in
fdivs
int
inc
push
fwait
mov
jle
idivl
dec
cld
les
rcll
ret
test
sbb
pop
loopne
into
ret
jns
cs
xchg
pop
test
dec
in
mov
out
sarl
imul
outsb
aad
xchg
mov
lahf
jg
xor
mov
or
lea
into
mov
in
push
mov
ds
mov
cs
pop
lahf
stos
pop
inc
xchg
push
sbb
mov
mov
sub
stos
mov
lcall
repz
lcall
push
xchg
cmp
sbb
stos
xchg
inc
add
scas
push
pop
push
ja
jl
arpl
rorb
sbb
jne
lea
push
xchg
loop
lea
cld
outsl
je
adc
jmp
inc
lea
dec
int
repz
lahf
in
icebp
or
test
ret
jle
cmpsl
daa
jg
cmovle
pop
dec
mov
ret
aaa
add
fwait
lock
add
imul
fimuls
or
daa
xorb
int
mov
add
icebp
movb
lea
sbb
inc
int
pusha
push
js
fs
mov
adc
lret
into
jl
push
jb
sti
ret
push
dec
jb
push
ljmp
mov
mov
mov
in
testl
dec
out
mov
xor
movsl
es
pop
cmp
loop
xlat
dec
cmp
inc
push
sub
idivb
mov
test
cs
rcrl
lahf
aaa
aaa
cld
lret
sbbb
jecxz
lret
add
mov
adc
shrl
daa
jnp
jg
jmp
xor
jle
xchg
lock
int
mov
shll
mov
push
loope
jbe
sbb
cmpb
inc
jg
int3
mov
or
jl
fstps
push
in
pop
sbb
imul
sub
das
pop
test
je
in
push
xchg
in
ss
insl
jecxz
testl
lcall
ret
jbe
pop
sbb
pop
add
ja
xchg
fildl
sti
call
jp
mov
jnp
imul
mov
push
push
cmp
push
jle
add
mov
loop
cwtl
ret
dec
xor
sub
lcall
bound
push
nop
das
inc
xchg
and
mov
lds
pop
inc
mov
lahf
mov
or
fsubs
test
xor
movsb
pop
std
lcall
pushf
insl
insb
ret
insb
xor
add
ds
cltd
ficoms
mov
mov
hlt
jbe
inc
push
arpl
out
std
xchg
notb
pop
add
pop
pop
adc
and
loop
ds
rcrl
imul
xchg
sub
push
jg
jb
xchg
xor
jl
push
jmp
mov
sbbl
aaa
enter
fcmovne
hlt
lods
inc
inc
lock
push
sbb
jge
stos
call
roll
jecxz
pop
jns
mov
repz
cmpsb
aaa
adc
pop
out
dec
inc
in
xor
pop
sbb
movsb
dec
push
add
and
xchg
xchg
testl
inc
xor
movsl
pop
mov
fsubrs
jmp
push
jmp
mov
adc
sti
out
or
cmp
out
sub
sub
adc
fistps
pop
mov
ja
subb
push
dec
pop
mov
lock
pop
jno
loop
pop
movb
js
iret
test
push
xor
insb
and
push
push
stc
repnz
fwait
xlat
mov
mov
xor
hlt
inc
ljmp
jnp
inc
xchg
rolb
inc
push
xor
pop
aam
hlt
xchg
loope
xor
int
jle
rcr
ds
inc
movsl
xor
pop
inc
cmpsb
pop
sub
out
push
jle
repz
sbb
xchg
xorb
inc
dec
sbb
arpl
ss
cmpsb
inc
cld
cli
outsb
inc
out
push
fsubrl
mov
jb
sub
pop
in
jne
out
inc
inc
jnp
pusha
outsb
pop
sub
aas
and
push
ja
sbb
lock
push
loope
hlt
je
pop
aam
test
dec
sti
out
adc
in
sbb
sbb
outsl
std
cmpsl
jnp
loopne
add
and
cmp
add
mov
into
pop
ja
pop
add
inc
add
xchg
or
mov
mov
and
loope
pop
dec
mov
scas
fwait
xchg
cmp
push
stos
ss
and
mov
lcall
movsb
jle
mov
fsubl
pop
aaa
mov
xchg
xor
push
pop
adc
sbb
ds
dec
and
sbb
fsts
push
lcall
js
repz
push
push
sahf
push
jo
aam
in
fsts
jmp
mov
cmp
sbb
dec
add
clc
sub
lret
dec
lock
cmp
jnp
mov
jns
jne
pop
outsl
sbb
loope
xchg
cmp
test
inc
bound
or
mov
lea
mov
nop
fdivl
add
outsb
add
lcall
pop
mov
lcall
pop
pusha
mov
imul
mov
or
aam
clc
xchg
icebp
out
ljmp
cmp
xor
cmp
mov
call
or
xchg
test
arpl
adc
outsl
ja
aam
sti
in
inc
adc
dec
imul
popf
enter
mov
arpl
and
call
cmp
lret
pop
sti
sahf
inc
mov
fmull
in
cmp
xchg
insl
pop
std
pop
push
aaa
inc
stos
jp
lea
xor
mov
adc
bound
xchg
mov
mov
sahf
cld
pop
sbb
lahf
pop
lahf
inc
pop
mov
sub
les
lock
imul
int3
lret
and
dec
rcrb
sub
xor
cmp
lret
pop
ret
fs
jmp
sbb
repnz
cs
in
push
dec
leave
xor
int
rcl
mov
mov
sbb
cld
mov
push
movsl
in
add
sbb
pop
in
clc
scas
shlb
push
pop
clc
inc
test
out
jle
push
mov
push
mov
jb
mov
aam
pushf
icebp
pop
sbb
hlt
sti
in
icebp
xor
or
jne
sub
pusha
jo
cmp
adc
jp
aaa
cwtl
sbb
adc
stc
fcomi
cmp
dec
popa
push
loopne
and
adc
pop
lds
in
leave
inc
jnp
xchg
dec
out
in
cmpsb
sbb
jl
sbb
bound
or
push
popf
pop
jmp
cld
aaa
lret
xor
cmp
popf
or
xor
inc
xor
mov
icebp
in
lock
mov
pop
ror
dec
sahf
dec
pop
sarb
andb
sub
adc
add
inc
leave
adc
lea
pop
pop
lret
xor
sub
jno
and
mov
xor
mov
mov
fdivrs
in
pusha
jb
xor
add
xorb
jae
test
add
inc
xor
cltd
iret
push
stos
int
mov
dec
dec
outsl
pop
sbb
or
xchg
inc
shl
aam
inc
pusha
sbb
ja
idivl
push
fs
cmp
dec
call
jl
mov
ljmp
dec
arpl
jbe
fdiv
loope
jbe
or
adc
fdivrl
inc
filds
sbb
push
out
addr16
repz
and
sahf
jne
adc
cmp
das
dec
aas
cmpsb
sbb
sti
call
ds
inc
mov
pop
dec
sbb
addr16
shll
popf
scas
xchg
jle
cltd
addr16
push
dec
and
cltd
aam
push
pop
lds
mov
pop
mov
jno
cmp
mov
sbb
daa
cld
negl
cltd
pop
movsl
sbb
std
cmp
cmc
clc
add
sbb
mov
test
mov
jle
mov
pop
test
repz
xchg
mov
xchg
or
xchg
jecxz
test
jle
test
lds
lret
sub
dec
sub
sarb
das
cwtl
lcall
test
pop
pop
icebp
push
pop
arpl
shlb
pop
ja
xlat
insb
frndint
xchg
cwtl
daa
pop
or
cmp
jl
and
pop
cld
add
lahf
js
sub
dec
fmul
pop
jo
bound
aam
test
cwtl
jmp
ret
mov
aaa
adcl
cltd
dec
test
add
xchg
mov
dec
shlb
lret
es
push
mov
inc
enter
loope
pop
sbb
pop
aam
or
sub
push
out
loopne
test
lret
jmp
popf
test
out
mov
mov
push
insb
nop
pop
add
pop
icebp
bound
xor
push
nop
stc
cltd
dec
mov
pop
je
lcall
xor
add
mov
imul
popa
mov
xor
fwait
scas
dec
push
aas
cmp
in
pop
sti
lcall
popf
fistl
es
lahf
push
outsb
add
cmp
sub
pop
adc
push
ss
repz
xchg
fimuls
mov
add
fcompl
movsl
fisttpll
movsb
mull
sub
imulb
mov
and
mov
sub
loope
pop
call
xor
pop
mov
test
fwait
js
cmp
pop
cmc
cmpsl
jle
jg
pop
insl
idivl
pop
cmp
inc
adc
and
pop
popf
mov
inc
ror
mov
mov
pop
cwtl
mov
pop
cmp
les
cltd
sub
lea
rcr
push
sub
orl
mov
xor
cmp
mov
aas
push
in
xchg
lock
lcall
loope
bound
aaa
push
repz
in
flds
inc
sbb
movsl
ret
mov
sbb
ja
loop
js
xchg
cwtl
inc
cld
incl
out
pushf
orl
add
aaa
and
roll
test
push
inc
and
mov
lret
xadd
loop,pn
ljmp
and
clc
dec
jnp
xlat
ret
xor
jbe
mov
mov
out
ss
push
or
sbb
and
xchg
lock
push
jb
cmp
ljmp
pop
adc
add
imul
mov
rol
jbe
add
push
test
fdivrs
cmp
jne
jg
in
push
daa
sub
sarb
ret
repz
imul
adc
lcall
in
sbb
mov
stos
sub
out
sbb
and
mov
popa
pusha
pop
inc
xchg
shrb
mov
aad
adc
cli
dec
lock
outsb
push
aas
and
and
dec
arpl
sbb
jo
cmp
jno
xchg
ljmp
popa
imul
aaa
icebp
adc
loope
fsubp
sub
scas
sub
pushf
push
lcall
xor
cmp
jnp
xchg
in
lcall
xchg
inc
ret
sbb
xor
mov
push
and
int
aas
shll
shl
jno
mov
or
sti
sbb
xchg
dec
shrl
frstor
call
sahf
stos
mov
add
in
icebp
inc
xchg
repnz
adc
stc
repz
fptan
int3
sub
fldcw
xchg
xchg
fwait
cmp
pop
dec
pop
sti
fsts
mov
mov
lret
push
repnz
push
and
das
push
mov
jnp
mov
add
and
xorl
sti
aaa
xor
jg
int
push
add
jns
adc
xchg
addb
pop
cltd
sub
inc
icebp
jne
push
insb
arpl
sahf
leave
cs
xorl
ror
rcr
cmp
mov
test
cmp
jnp
jne
aaa
mov
imul
sbb
pop
pushf
add
repnz
mov
out
dec
imul
sar
nop
fsts
add
mov
push
movsb
xor
divb
lds
xchg
fcomip
scas
aam
jae
sbb
rcll
cli
sbb
and
add
jo
pusha
fimuls
jge
cltd
dec
int3
xorb
ljmp
sub
imul
pop
sub
les
loop
cmp
bswap
push
push
cmp
mov
push
pop
loope
rcrl
sbb
sbb
aaa
sub
xor
xchg
sahf
dec
and
cmp
mov
xchg
dec
dec
xor
cld
xchg
or
inc
pop
and
aaa
and
stos
sbb
push
aaa
test
mov
lods
test
mov
cmp
fs
xor
std
add
aam
lahf
sub
out
cmpsb
and
jge
shrl
pop
pop
stos
es
mov
sub
jp
addl
aaa
jge
add
jmp
lret
pusha
push
push
sbb
pop
iret
addl
xor
sub
add
repnz
outsl
cmp
pop
cmpb
push
add
out
aam
jp,pn
pop
jbe
fmuls
xchg
cmp
sbb
es
xchg
lea
push
xor
ror
adc
adc
sbb
xor
cmpsl
xchg
ret
stc
pop
xlat
pop
jb
shll
leave
pop
mov
mov
push
pop
jecxz
add
sbb
sub
pop
sbb
les
cmpl
shr
mov
dec
std
fdiv
pop
jge
inc
push
std
sbb
mov
sbb
enter
inc
outsb
mov
add
cmp
pusha
xchg
cld
jns
sub
pop
cmpsl
fldl
inc
aaa
xchg
mov
icebp
or
call
or
lea
lods
lds
xor
sub
rcr
fs
pop
sub
leave
and
sub
pop
mov
pushf
adc
mull
aam
sarb
aam
in
jmp
fsubrl
inc
or
mov
call
sbb
int
adc
adc
into
inc
cli
inc
and
aaa
les
lods
mov
adcb
sbb
mov
add
push
cltd
inc
lea
ljmp
push
cmp
mov
ret
pop
pop
add
and
int
int3
jnp
outsl
lea
sti
xchg
lret
sub
pop
sbb
sub
ret
imul
push
mulb
sub
and
fistpl
mov
aaa
test
push
in
mov
fdiv
bound
aam
inc
mov
or
mov
clc
pusha
fwait
push
cmpsb
iret
mov
inc
sbb
xchg
or
test
loop
fmull
repnz
jmp
push
lock
out
sarl
adc
js
roll
jp
push
xchg
add
jo
out
sbb
jle
mov
fistpll
mov
add
rcrl
aam
outsl
ret
cmp
in
push
test
push
sar
shrb
pop
jno
xchg
cmpsb
jne
arpl
inc
mov
sub
jle
pop
adc
fisttps
jle
cmpsb
sub
xchg
arpl
loope
ds
bnd
stos
mov
movsb
aad
dec
and
addr16
mov
mov
shll
in
cmpsl
push
ss
mov
or
dec
addr16
movsl
xor
push
sub
mov
or
push
push
ret
fists
inc
lret
sbb
je
das
das
in
dec
fidivrl
popf
lcall
rorl
xorb
outsb
into
daa
push
int3
mov
pop
mul
sbb
sahf
fsubrs
andb
cmc
test
push
hlt
push
insb
leave
mov
pmuludq
les
and
loopne
cmp
arpl
aas
add
xor
in
pop
cmp
cmp
bound
xorb
shr
fwait
push
mov
iret
imul
cmp
xchg
pop
cmp
and
xor
enter
in
mov
push
aaa
ja
push
lahf
mov
data16
insl
mov
pop
imul
sbb
mov
mov
into
sbb
push
fucom
mov
push
pusha
cmp
bnd
or
ds
xchg
add
stc
lret
cld
lock
fnstcw
out
cmp
mov
or
push
and
popa
dec
icebp
addr16
popl
hlt
sbb
xor
popa
jbe
ss
pop
mov
test
xchg
add
jns
dec
jge
imul
dec
js
lods
mov
call
int
aaa
fisttpll
cld
push
sti
icebp
cmpsb
jp
cmp
add
sbb
push
add
pop
icebp
push
jne
movsl
inc
dec
xchg
pop
test
inc
xchg
out
jl
adc
gs
popf
cld
fists
pop
ljmp
jnp
stc
outsl
xor
addr16
jg
cmp
sub
inc
push
out
aam
cwtl
test
push
in
popf
lock
sub
mov
testb
jp
into
inc
in
push
aas
mov
bound
inc
in
mov
mov
pop
cmp
lcall
aaa
and
fstpl
pop
mov
or
repz
pop
sub
jmp
adc
movsl
push
lds
add
inc
xor
int3
lret
inc
shll
and
and
fiaddl
cwtl
fistpll
cltd
frstor
add
xchg
in
fwait
jnp
pop
dec
in
dec
loopne
lret
jne
jp
pushf
fnsave
outsl
shll
aam
inc
inc
cmp
push
mov
mov
push
add
push
orb
xor
pop
pop
inc
lock
dec
cmp
stos
mov
cmpb
pop
pop
jo
adc
add
fdivrl
jle
or
mov
js
push
fwait
adc
adc
shll
ja
sbb
enter
sub
xor
call
lods
xchg
cmpsl
xchg
aad
rol
inc
cwtl
mov
xchg
cmp
jbe
test
mov
jl
sub
dec
cmp
jbe
sbb
addr16
jno
lcall
jmp
jno
mov
jbe
pop
xchg
sahf
fistpl
fistpll
aaa
outsb
stos
pushf
pop
mov
shll
iret
cmp
fistps
fsubrl
ja
or
xchg
repz
jmp
jge
push
movsb
jge
pop
adc
das
in
icebp
dec
cmp
dec
xorl
sub
pop
movsb
fidivrs
pop
pop
into
and
shrb
fwait
sbb
xchg
out
rcll
pusha
mov
sbb
sub
aad
jp
add
lcall
cmp
mov
shrl
enter
or
cmp
lcall
lds
jo
loopne
aaa
stos
pop
mov
inc
or
sbb
iret
push
add
dec
in
jmp
add
in
aaa
loope
jmp
jb
aaa
cmpsb
inc
lods
lret
pop
mov
mov
clc
mov
push
pusha
and
fistpl
and
jle
sub
push
aam
es
inc
add
cmpsb
cmp
testb
subps
jns
ss
xchg
loopne
bound
xchg
mov
pop
int3
cmp
outsb
jb
and
sbb
dec
adc
sbb
imul
loope
pop
outsl
ret
aaa
adc
adc
cmp
shrb
push
cli
jle
add
sbb
push
test
adc
sbb
repnz
fnstenv
xchg
lcall
pop
cli
jb
push
add
pop
jno
in
aaa
xchg
jne
sbb
inc
pop
jecxz
bound
or
fbstp
pop
sub
xchg
out
jmp
out
sbb
cmpsb
cmp
fdivrs
push
adc
loope
push
and
pop
pop
dec
xor
fwait
hlt
out
cmp
aam
ds
add
dec
in
test
stc
in
int3
pop
and
xor
mov
cli
jne
xchg
push
aam
push
dec
outsl
or
out
hlt
or
mov
call
insb
in
ret
dec
ss
xchg
pusha
pop
loopne
jp
adc
stos
mov
outsb
in
push
lock
in
adc
test
or
dec
cli
xor
xchg
pop
aaa
sti
leave
jnp
das
mov
std
and
fs
pop
ss
pusha
and
enter
cmp
mov
imul
lret
cmpsb
cmpsl
xchg
xor
jp
push
je
fidivrl
sbb
push
fucomi
movsb
sbb
scas
aaa
out
aad
pop
stc
jno
and
fimuls
adc
out
aam
inc
shl
cltd
fstl
or
mov
adc
daa
sub
jae
push
data16
pop
lock
xor
fwait
into
insl
xchg
push
pop
inc
jl
jecxz
lods
add
loope
push
pop
jp
or
cltd
and
pop
push
inc
fsubrs
inc
pop
push
das
sbb
xlat
out
cwtl
fwait
lods
adcl
pop
sub
and
adc
movsb
xchg
lods
pop
jge
int
jle
jae
cmp
icebp
stos
jns
icebp
inc
push
imul
clc
dec
jl
data16
jl
add
outsb
pop
insl
inc
mov
xor
lods
sbb
dec
std
repnz
push
push
sbbb
popf
ds
adc
sub
pop
cmp
clc
pusha
rol
lea
mov
rclb
and
cmp
lea
lds
inc
sub
sub
enter
push
repz
sub
orb
mov
sbb
and
aam
mov
repnz
das
mov
sub
sbb
pop
xor
jp
xchg
mov
push
sbb
fwait
xor
mov
inc
dec
dec
lcall
mov
or
adc
lea
stc
mov
out
dec
inc
out
outsb
cwtl
popf
or
jecxz
test
aaa
push
sub
rol
pusha
cmpsb
pop
ljmp
popf
in
fidivs
lret
inc
aaa
aad
push
loopne
mov
xor
or
mov
mov
push
je
xchg
icebp
fbld
out
arpl
xchg
add
bound
push
dec
mov
out
fwait
and
js
aaa
pop
into
popa
out
pop
pop
sub
bound
js
js
jmp
in
mov
dec
and
pop
ret
mov
int
mov
rcl
sbb
mov
orl
jae
xor
fs
insb
insl
cmp
sub
jp
dec
data16
ror
inc
ret
xchg
cmp
pop
clc
ja
icebp
add
mov
in
pop
dec
sub
or
sbb
pop
rorb
ljmp
movsb
dec
fwait
add
lock
cmpsb
lret
cld
out
sti
lret
xchg
stos
cmpsb
dec
iret
sti
stos
mov
fists
js
lcall
pop
rol
mov
mov
or
mov
cmc
decl
jp
mov
jb
std
push
adc
aam
bswap
sbb
shll
out
out
xor
mov
jb
and
aad
sub
subb
dec
call
in
mov
push
inc
inc
mov
push
insl
mov
pusha
inc
and
clc
pop
dec
popa
xchg
pop
and
mov
jne
push
test
and
mov
outsb
inc
arpl
addr16
cs
shll
lock
add
jmp
add
mov
dec
aaa
in
inc
enter
pushf
icebp
jae
loop
pop
pop
mov
nop
mov
sbb
data16
mov
gs
jle
outsl
sarb
rolb
sbb
pop
dec
scas
jecxz
pop
idivl
dec
cmpsl
mov
pop
inc
add
hlt
popf
adcb
daa
pop
jo
pusha
out
sbb
push
xchg
sub
loop
and
scas
push
sbb
ss
sub
and
dec
xorl
sti
add
pop
pop
push
dec
push
mov
pop
or
add
or
pop
push
inc
jae
shlb
or
sarl
fistpll
orl
and
sbb
sbb
int3
fdivrs
push
push
jno
lret
inc
mov
dec
out
pop
sub
lock
stos
lock
jo
xchg
xor
jb
dec
cmp
adc
dec
xor
cmp
add
fucom
xlat
sub
xchg
dec
mov
sbb
loope
ret
mov
outsb
xchg
add
nop
movsb
mov
push
pop
rep
pusha
push
aam
lea
lods
enter
lahf
in
mov
jb
pop
pusha
jle
dec
int
test
or
movsl
sub
inc
adc
leave
pusha
fstp
mov
popa
push
lods
add
les
in
int
add
stos
inc
aaa
cmc
sub
lock
and
ds
inc
pop
ret
clc
sti
jnp
lret
je
add
push
mov
pop
scas
mov
movsl
aaa
sub
mov
cld
jmp
das
jmp
push
inc
add
xchg
fwait
jno
int
mov
jl
xchg
jb
aaa
push
outsl
stc
sub
scas
loope
and
inc
mov
inc
inc
dec
xchg
xor
xchg
inc
inc
loopne
push
jge
and
lahf
aas
shlb
repz
adc
mov
aaa
mov
fwait
sbbb
jge
repz
xor
lret
fucom
mov
out
jno
sbb
push
rcl
insl
das
out
imul
and
cli
repz
lret
in
xchg
mov
int
sahf
inc
andb
das
and
mov
sub
aaa
mov
gs
adc
je
sub
sbbb
sbb
in
mov
xor
and
gs
mov
in
inc
jo
push
not
in
jl
bndstx
stos
loope
daa
inc
add
sbb
jbe
js
test
fistpll
mov
xorb
sub
cmp
inc
push
rcrl
pop
mov
jle
cmpsl
mov
scas
cmpl
pushf
movsb
sbb
jle
cmc
xchg
add
stos
pop
add
add
insl
jecxz
push
cmovbe
sarb
jbe
fdivrl
sbb
stos
and
jmp
push
mov
push
mov
fdivrl
cltd
scas
and
cmp
pop
bound
mov
add
add
pop
adc
sub
shll
sub
pushf
sbb
add
dec
mov
gs
dec
lret
cltd
pop
int
test
add
pop
pop
pop
stos
outsb
jne
mov
stc
das
or
das
icebp
jp
mov
sarb
jnp
inc
add
lret
pop
inc
add
mov
enter
push
and
push
pop
pop
in
jge
add
jo
popa
sbb
hlt
lea
xchg
pop
jne
cmp
jge
and
enter
cmp
mov
pop
pop
mov
test
push
repz
sbb
ds
ss
fsubrs
stos
adc
popf
jp
jl
mov
inc
pop
jl
jbe
es
and
shll
sti
or
popf
aaa
cmpsl
jnp
in
inc
in
push
ffree
aaa
pop
inc
xor
fcompl
pusha
mov
mov
adc
mov
xchg
inc
stos
pop
fs
fwait
adc
insl
ret
bound
add
sub
lods
sti
lret
ret
divb
movsb
stos
sbb
je
hlt
mov
dec
popf
stos
mov
adc
imul
cmp
pop
psllw
inc
in
je
int
outsb
jb
std
sbb
xor
cld
jmp
aas
push
cmp
mov
xchg
and
dec
popf
popf
pushf
sbb
pushf
pop
jg
cs
aaa
mov
dec
fnstcw
lods
cmp
and
dec
and
adc
and
outsb
fmuls
cmc
xor
repz
inc
fsubr
fistps
inc
imul
test
xchg
test
xchg
pop
repz
out
inc
in
aaa
xor
add
inc
jae
and
inc
jbe
push
int3
mov
ds
out
and
sbb
sahf
xor
pop
sbb
loopne
std
push
loope
xchg
mov
sbbb
pop
stc
mov
adc
jbe
sbb
cs
in
adc
jle
xor
popa
scas
in
dec
movsl
pop
pushf
aaa
lds
fs
inc
pop
mov
test
cwtl
outsl
xchg
lcall
and
cwtl
dec
or
pop
mov
mov
add
cltd
rorl
or
lods
sub
dec
lret
insb
jmp
add
add
loope
inc
push
jbe
cmp
leave
setae
jl
popa
loop
cwtl
mov
imul
adc
mov
cwtl
pop
adc
dec
or
sbb
xor
xchg
push
scas
out
outsl
dec
orl
je
dec
pop
mov
sbb
add
push
shlb
push
inc
outsb
ret
enter
mov
cmp
aaa
cltd
outsb
or
and
xchg
in
mov
jmp
pop
lcall
sub
sub
fdivl
xor
push
test
or
orl
and
sub
sub
shrl
lcall
roll
jmp
stos
scas
and
into
mov
lahf
icebp
push
mov
into
aaa
fidivs
cmp
loop
sarl
jno
sbb
mov
enter
ret
and
dec
dec
enter
outsb
sbb
push
pop
je
scas
fildll
aas
xor
push
and
push
aaa
shlb
stc
aam
pop
mov
leave
int3
sbb
stos
ds
call
xchg
xchg
scas
sbb
pop
imul
in
out
xchg
cli
inc
pop
adc
push
jo
pusha
rol
jno
mov
stos
stos
inc
mov
in
sbb
lret
int3
popf
ja
add
in
movsl
cmpsl
adcb
popa
hlt
popw
and
cmp
lods
xor
dec
push
sub
fcompl
mov
scas
sub
push
sahf
mov
notl
fnsave
imul
sbb
push
ds
rcl
xor
pop
pop
mov
xchg
js
cltd
cmp
push
mov
fstpt
push
scas
add
loop
rcl
lea
inc
lea
lods
pop
push
bound
lcall
pop
stc
std
jo
lods
dec
int3
sbb
loope
and
mov
jecxz
jne
nop
and
mov
cmpsb
or
add
ds
dec
pop
arpl
les
insl
and
sbb
push
lods
outsl
push
pusha
xchg
mov
add
jge
push
ja
dec
jp
or
dec
fmuls
icebp
in
idivb
pop
and
subl
movsl
ds
mov
xor
pop
incl
es
jle
mov
scas
xchg
sti
cmp
scas
dec
mov
push
aaa
jmp
push
and
mov
jp
push
pop
cmpsb
pop
fwait
cs
js
les
mov
jae
aaa
push
ljmp
dec
inc
cmp
jle
or
pop
cmp
lds
pop
push
in
rorl
sbb
scas
adc
mov
adc
dec
cmp
arpl
mov
sub
in
mov
jbe
xchg
jl
mov
mov
pop
mov
rol
lock
mov
jb
dec
leave
sbb
ret
add
fcmovbe
movsl
sbb
dec
adc
dec
dec
inc
sbb
mov
fldt
shrl
aam
shlb
loope
fwait
loopne
cmp
mov
add
lds
adc
xorl
enter
mov
sbb
test
sub
insb
mov
jg
fcompl
adc
pop
mov
mov
popa
pop
pop
outsl
ljmp
lods
rcll
rcrl
mov
clc
push
mov
and
cmp
xor
loope
cmpl
add
jg
mov
ret
pop
sub
add
inc
jno
adc
pop
and
adc
repz
lret
pop
pop
cmove
mov
and
in
inc
mov
fiadds
adc
loope
movsb
mov
loop
dec
mull
mov
cmp
pop
sub
xchg
scas
mov
lret
sbb
ss
mov
aas
cmpsl
mov
int
bound
decb
cmpsb
roll
add
cmpsl
jg
lret
sti
xlat
and
out
xorl
lret
repz
push
sbb
mov
push
and
xor
jecxz
sbb
in
pushf
add
push
xchg
pop
aaa
sub
jbe
mov
xlat
jl
lods
test
sbb
ljmp
call
dec
dec
imul
push
adc
cmp
add
out
aaa
aam
fisttpll
lret
sar
dec
pushf
push
jbe
pop
xorb
hlt
jg
cmc
movd
jb
xlat
fisubrl
push
inc
stc
ss
int3
or
stos
xchg
jp
or
inc
lods
jbe
cmp
mov
mov
pop
inc
cwtl
outsl
daa
jmp
lret
shl
test
lret
mov
aaa
mov
js
dec
outsb
jl
add
xchg
jns
mov
repz
clc
lods
not
mov
mov
or
jo
jo
cmp
add
enter
add
and
inc
mov
xchg
lods
aaa
int
dec
fistpl
cmp
loopne
in
mov
fdivs
outsl
ror
mov
in
cmpsb
push
mov
shll
fists
jp
pop
mov
inc
fcompp
jle
jbe
fwait
xchg
outsb
mov
aaa
dec
test
sub
testb
push
inc
or
imul
je
sarb
sar
scas
jmp
cwtl
pop
mov
popf
push
pop
inc
xchg
nop
hlt
lea
movsb
lods
mov
mov
and
repz
or
add
leave
lock
push
idivl
mov
hlt
sub
pop
add
aaa
dec
xlat
lahf
incb
sahf
xchg
jno
mov
ss
jnp
test
lods
sbb
outsl
outsb
sbb
inc
sbb
movsl
dec
pop
es
and
cmc
je
mov
sub
dec
mov
jle
mov
dec
mov
push
cmc
lret
pop
notb
fstpt
xchg
scas
cli
add
cs
fsubrs
loope
ja
add
clc
jo
pop
pop
push
call
arpl
sbb
sub
pop
dec
cmp
and
aam
push
pop
xor
test
pop
add
dec
jno
mov
cmp
pop
cmpxchg
dec
mov
mov
or
sarb
and
orb
stos
in
sub
cwtl
pop
and
pop
jle
aaa
xrelease
xchg
dec
cmp
repz
das
mov
hlt
jg
incl
cmp
nop
sbb
dec
rcrb
cmp
call
aaa
mul
push
lret
aam
mov
out
cltd
mov
pop
movsb
es
scas
mov
stos
in
adc
push
push
pop
lcall
pop
cld
repnz
ds
mov
and
fwait
cltd
jle
cmp
sarl
add
pop
imul
sbb
in
push
ss
xchg
jns
dec
pushf
mov
ss
les
leave
cmp
add
mov
jmp
shl
ret
add
test
sub
jg
dec
cltd
movsb
pop
adc
mov
sbb
adc
cli
adc
push
shrl
adc
call
lds
lock
xchg
scas
jmp
in
das
sti
mov
inc
or
jne
les
imul
push
out
cmp
pop
pop
mov
xchg
xor
or
ss
or
sub
xchg
out
cmp
inc
sbb
sbb
pop
pop
dec
lea
pop
nop
sahf
cmpsl
xlat
cmpsl
add
sub
addr16
mov
mov
push
mov
mov
jmp
sbb
jp
aaa
sbb
fdivr
movsl
lods
lods
pop
jmp
and
in
jno
aam
repnz
jmp
mov
or
loop
lret
mov
fcoml
jge
or
xchg
je
insl
call
inc
sub
push
mov
loopne
adc
push
jb
pop
pop
dec
ja
sbb
jae
adc
sahf
jl
lods
mov
loope
push
xor
lods
fnstcw
pop
int3
dec
fcmovne
test
pop
push
mov
cmc
adc
pop
lock
add
arpl
pop
outsl
aam
pop
test
popf
push
adc
loope
lahf
inc
push
outsl
mov
pop
movsl
pusha
sbb
mov
pop
push
and
aaa
pop
dec
fimuls
leave
dec
sub
pop
les
in
inc
cmpsl
lods
icebp
stos
cmp
ss
mov
xchg
aaa
xor
fldt
fisubrs
pop
ss
jle
outsb
mov
sti
pop
aas
pop
test
and
mov
fwait
les
inc
es
test
jmp
inc
movsl
int3
aas
mov
fisttpll
push
aaa
aad
mov
or
out
out
mov
mov
fisubrs
cmp
add
fisttps
fisubs
push
rolb
mul
dec
sti
fcompl
fs
fnstsw
rolb
loopne
loop
pushf
testb
pop
or
mov
mov
ret
or
fadd
mov
sub
insb
pop
aaa
mov
pop
jnp
jns
leave
jg
in
and
dec
xor
jne
cmc
sbb
cmp
adc
jmp
dec
dec
in
add
xchg
xchg
cmp
pop
aaa
push
push
cwtl
sbb
pop
in
push
in
dec
mov
js
shlb
ja
adc
mov
jge
lods
cmp
jbe
cmpsl
lea
imul
scas
jle
faddl
stos
cmp
pop
mov
pushf
sub
sub
stc
imul
pop
int3
test
popf
inc
pop
in
pop
out
enter
out
lret
rcll
stos
rcrb
mov
xor
cltd
cmp
jecxz
xchg
mov
imul
lret
test
mov
xchg
pop
pop
loopne
sbb
push
mov
repz
and
adc
jns
jns
sarb
rolb
fsubrs
and
pop
xchg
aas
in
push
inc
and
call
pop
scas
sub
push
inc
aaa
push
jnp
int
mov
testl
lret
out
jl
popf
or
sbb
sbb
or
pop
pop
push
adc
scas
mov
shrb
push
in
inc
inc
or
push
mov
call
popf
pop
gs
aaa
pop
sti
out
cmp
lea
dec
jno
push
sti
aaa
pushl
andl
inc
jae
into
mov
mov
sub
xchg
jbe
sbb
leave
ss
inc
push
cwtl
and
push
aaa
jg
stos
push
das
pop
cmc
pop
add
enter
pop
cmp
dec
cmp
xchg
ficompl
std
stos
jmp
mov
add
int3
bound
nop
sbb
add
jo
xchg
push
fwait
cmp
arpl
lea
inc
fidivs
inc
pop
insb
mov
in
mov
aaa
push
mov
and
inc
dec
js
jbe
cld
lahf
add
push
add
popf
mov
mov
jbe
or
mov
mov
sbb
ss
push
lock
push
jmp
and
leave
aam
in
into
cltd
mov
pop
xchg
and
lea
pop
mov
push
mov
dec
jnp
jl
sub
and
hlt
mov
pusha
iret
add
xor
ret
mov
jmp
aaa
mov
xor
into
dec
ret
lret
dec
stc
dec
jle
jg
push
xor
xchg
jmp
adc
aas
sub
ljmp
leave
and
jmp
jnp,pn
pop
je
stos
dec
sbb
stos
jno
mov
addr16
jecxz
inc
aaa
mov
not
sbb
das
faddl
pop
bswap
push
ja
negl
aaa
divl
cmp
jnp
jg
les
sub
xchg
popa
into
neg
dec
sbb
js
xchg
pop
addb
adc
dec
jbe
jnp
loope
or
cmp
sarl
xchg
cmpsl
test
sbb
pop
jg
jno
mul
add
in
cmp
rcll
or
adc
mov
sbb
sahf
loope
in
mov
xor
xchg
push
sbbl
xor
lret
cmc
jecxz
push
dec
jo
test
ficompl
sub
cmp
sbb
push
mov
scas
jae
addl
leave
scas
ss
loop
xchg
ss
cwtl
adc
dec
fwait
and
add
xchg
adc
clc
inc
push
popl
adc
mov
and
add
pop
mov
cmp
mov
adc
insl
fdivr
test
loope
pusha
adc
outsl
sbb
xchg
adc
bound
in
shrl
mov
sbb
inc
negb
imul
rcrb
bound
je
jbe
pop
icebp
or
dec
adc
cmpsl
cmpsl
sbb
xchg
dec
icebp
popf
pushf
sahf
cli
dec
jge
xor
push
icebp
dec
pop
cli
mov
js
aaa
mov
jle
mov
push
and
mov
cmp
stc
sar
xchg
lcall
std
push
stos
adc
mov
push
sub
aaa
push
mov
xchg
pop
fisubl
push
popf
repz
adc
mull
into
outsl
add
push
stos
aaa
sbb
les
inc
out
mov
xor
loope
xchg
and
jbe
sbb
xor
cmpsl
sar
push
push
add
sbb
adc
out
pop
inc
add
lret
ret
push
rcll
xchg
btr
and
sti
leave
push
sbb
cwtl
mov
sbb
test
jbe
insl
out
enter
jbe
rcrl
mov
jecxz
in
mov
lahf
cmp
fwait
test
xor
cltd
pop
sbb
test
movsl
jno
mov
jmp
aam
xor
adc
mov
push
adc
add
test
xchg
jne
scas
cwtl
jmp
sbb
jg
out
xor
loope
cmpsl
fsub
mov
ja
dec
in
jp
sub
dec
leave
pop
fsts
push
push
xchg
mov
mov
negl
pop
jno
bound
fnstcw
cmpsl
arpl
jno
in
push
push
mov
fsubr
mov
and
aaa
inc
jecxz
fdivrs
out
addb
and
rcll
movsl
cli
out
xchg
cwtl
ss
repz
adc
es
lret
jp
int3
ss
sub
repnz
cmpsl
xlat
in
data16
mov
rcrb
arpl
jo
xchg
add
sbb
sbb
jae
pop
hlt
jle
inc
cli
mov
sub
pop
loope
pop
pop
in
stos
mov
push
add
sbb
ja
mov
insl
fsubs
into
dec
and
jp
cmc
ds
mov
jmp
into
aaa
jno
adc
pop
mov
mov
jbe
sbb
mov
sbb
push
or
ss
pop
push
fsubr
xchg
jae
mov
cs
mov
loopne
pop
arpl
dec
rcr
clc
mov
push
jbe
int3
icebp
pop
shll
dec
leave
sbb
cmpsb
mov
je
sbbl
mov
jae
inc
xchg
cs
xchg
out
ja
jbe
lods
rorl
and
pop
lret
inc
insb
add
jl
sbb
and
or
pop
movsl
lret
pop
test
push
popa
cld
inc
pop
outsb
and
xor
dec
lea
bound
xor
lret
and
or
lea
nop
imul
aaa
in
inc
idivb
adc
orl
pop
mov
lcall
add
and
mov
sbb
and
mov
mov
fcompl
mov
mov
aam
loope
sbb
addl
add
sbb
clc
shr
push
and
sahf
xchg
movsb
ret
das
mov
inc
es
mov
bound
aaa
lret
jbe
push
mov
mov
fcomip
dec
xor
mov
fidivs
cmp
pop
jge
lret
outsb
fcmovnu
push
shll
push
push
sbb
enter
push
in
sahf
pushf
movsl
movl
ss
aaa
pop
mov
mov
xchg
movsl
pop
les
dec
fwait
dec
fdivrl
add
movsl
pusha
rcl
sarb
jge
or
pop
jmp
icebp
js
in
add
inc
fwait
mov
dec
xchg
xchg
jnp
loope
adc
sbb
inc
fstpl
lods
sbb
xchg
cmp
push
mov
xor
push
sbb
stc
mov
sbb
jle
push
and
push
mov
jecxz
pop
inc
sahf
jle
mov
inc
loope
repnz
adc
and
int3
das
in
jmp
sysexit
aam
add
xchg
ret
and
pop
adc
aaa
adc
outsb
imul
or
arpl
mov
ljmp
jecxz
push
sti
ds
push
jl
xcrypt-cfb
cmpsl
jecxz
mov
sub
mov
mov
cmp
popl
and
fsubl
popa
mov
jno
xchg
xchg
push
dec
ljmp
icebp
add
sbb
pop
inc
xchg
jnp
mov
fsubrs
mov
cmpsb
push
faddp
jb
add
sbb
stos
int
inc
pusha
xlat
push
dec
rcrb
imul
movsl
cmpsl
incb
jp
jnp
roll
bound
fcomps
test
xlat
icebp
push
mov
jae
mov
fs
fstl
jnp
jmp
adc
std
or
rcrb
push
push
insl
nop
ret
std
stc
lods
adc
out
xchg
pop
cmp
mov
in
pop
pusha
jmp
movups
je
sbb
data16
inc
and
sub
ss
aaa
and
xchg
jg
out
pusha
cwtl
std
mov
sbb
mov
int3
xor
in
andb
repz
in
mov
loop
mov
into
lret
test
mov
inc
out
jbe
add
add
inc
sub
mov
into
movsl
rcrb
je
push
outsb
aaa
jns
scas
inc
je
sub
add
inc
add
daa
sbb
es
std
inc
pop
mov
jle
fldenv
mov
sbb
iret
ret
pop
les
addr16
aam
out
lret
es
add
in
cld
lret
clc
mov
subb
orl
insl
and
sbb
xchg
mov
dec
push
ss
mov
ret
add
insb
stc
dec
push
les
jbe
sbb
add
inc
xorl
loope
lods
mov
dec
jb
pop
aaa
fwait
ljmp
dec
daa
sub
cmp
je
ja
push
dec
mov
ds
shrb
dec
in
imul
xchg
pop
pop
out
jne
cs
jl
in
cmp
aaa
cmp
or
pushf
jae
enter
mov
adc
in
lahf
xor
and
imul
out
sub
ret
inc
jb
rorl
cmpsb
jle
pop
or
dec
lahf
adc
nop
xlat
cmc
lods
cmpsb
dec
repnz
in
xor
call
cmp
loopne
outsw
sbb
jle
cmp
sub
xchg
adc
aam
icebp
repz
mov
or
cli
push
xchg
lods
pop
arpl
pop
push
sbb
pop
je
xchg
mov
loop
sbb
stos
cltd
mov
sbb
mov
cli
fcmovu
in
arpl
mov
clc
cltd
or
popa
ja
mov
outsb
or
imul
jle
bound
pop
imulb
mov
arpl
mov
pop
cwtl
push
push
ds
sub
sbb
stc
adc
lea
in
add
inc
sub
xor
std
jno
cmpb
jns
adc
loope
aas
ret
mov
fstpt
adc
sti
aad
aaa
filds
fs
adc
mov
pop
icebp
adc
fbld
mov
push
push
aas
xor
das
add
pop
mov
insb
cmpsl
and
popa
xchg
into
push
push
stos
sbb
pusha
decl
push
push
sahf
sahf
mov
dec
ss
int3
push
addr16
scas
pop
lea
adc
mov
mov
add
xor
jbe
mov
pop
xchg
pop
xchg
push
push
aaa
xchg
stc
insb
test
jle
jle
popa
stos
aas
adc
fwait
aas
jmp
jbe
or
mov
inc
dec
adc
mov
push
and
repnz
lea
cli
test
aaa
cmp
idivl
fsubrl
mov
in
mov
mov
sub
movsl
aaa
fwait
push
adc
test
mov
sahf
cltd
add
scas
mov
cmpb
lock
jp
pop
scas
jnp
call
in
jecxz
scas
pop
inc
adc
cmp
enter
fs
pop
sub
and
mov
shlb
cmpsl
sub
sub
xchg
jo
arpl
or
cmp
and
bound
jae
xor
ss
dec
xchg
push
jns
int
std
sbb
jp
sahf
mov
sub
and
aas
dec
rclb
jb
insb
outsl
xor
pop
add
nop
lret
mov
mov
mov
js
dec
jno
arpl
shll
pop
cld
out
shrl
mov
jae
push
rcrb
fidivrs
dec
jl
sub
stos
xor
inc
out
addr16
mov
push
les
in
scas
test
mov
lcall
mov
xchg
loope
cmp
sbb
mov
inc
jb
pop
push
mov
test
jl
test
xchg
xchg
imul
lahf
fnstcw
insl
cmpsl
jl
xchg
into
icebp
add
mov
sub
cmc
in
lcall
adc
or
mov
add
cmp
inc
push
ss
cmp
push
dec
repnz
aam
cltd
repnz
sub
das
or
jp
dec
fwait
gs
scas
cltd
aaa
sahf
ds
mov
add
aas
fimuls
inc
pop
rolw
fdiv
mov
jb
pop
pop
add
addr16
je
das
orb
adc
test
movsl
jne
jno
cwtl
fldl
in
pop
fisubrl
or
xlat
test
es
jmp
sub
addr16
repnz
lea
dec
out
push
and
inc
insl
inc
pop
push
outsb
push
push
scas
mov
movsl
fldt
fisubrl
arpl
sbb
pop
ret
aas
jecxz
loope
movb
add
fstps
add
push
cs
mov
jbe
and
jp
add
push
cld
pop
dec
pusha
lods
mov
or
and
mov
into
dec
jmp
inc
pop
in
pop
xor
mov
fs
testb
pusha
sbb
cmpsb
fldt
out
loope
in
sub
lahf
stos
insl
push
xor
push
ficoml
xor
mov
lea
das
push
push
in
lret
cmp
jp
mov
sub
xlat
sti
in
jecxz
cli
sub
mov
mov
jbe
push
add
enter
pop
fbld
jg
fcompl
fwait
mov
jle
cmp
mov
jne
mov
mov
or
ret
sbb
outsb
pop
mov
fsubrl
cmp
cmpsb
mov
or
jns
fnstsw
jle
imul
pop
fsubs
je
dec
stos
inc
sbb
dec
push
adc
test
repz
popa
cmp
add
lahf
sets
scas
aam
pop
or
mov
fstpt
and
jge
push
fsubrl
loope
lahf
dec
adc
cmp
enter
stc
mov
sti
sbb
sub
ljmp
jp
out
pop
or
pusha
fsts
sub
mov
sbb
dec
inc
xor
pushf
stos
pusha
lcall
pop
loope
pop
cwtl
vpcomd
xchg
dec
mov
push
jle
loopne
imul
in
cmp
and
pop
sbb
ss
pop
aaa
addr16
cwtl
out
jmp
in
and
xor
cmc
mov
jl
sbb
in
scas
mov
jl
into
mov
into
in
push
push
push
mov
pop
dec
out
push
inc
shll
mov
stc
in
in
sbb
push
sub
sub
fiadds
inc
mov
lret
sub
mov
mov
adc
pop
std
pop
cmp
mov
das
int3
mov
adc
xor
xor
push
pop
xor
mov
out
mov
and
cltd
push
fsubl
clc
inc
pushf
inc
and
out
xor
leave
xor
movsl
or
or
sbb
in
xor
dec
xlat
push
aas
in
das
fs
pop
ret
push
enter
and
jb
mov
adc
sub
ds
arpl
and
out
xor
insl
cmp
dec
divl
decb
je
mov
fsts
cltd
mov
ficoms
pop
insb
xor
outsb
mov
aas
rolb
and
dec
add
out
cld
outsb
sbb
daa
and
sahf
push
pop
das
data16
xchg
or
sub
and
addr16
std
stos
adc
imul
mov
sub
dec
cmp
mov
in
out
jmp
jno
mov
movsl
pop
stos
sahf
mov
shl
movsl
loope
sbb
add
imul
dec
lret
jp
lret
adc
scas
pop
sbb
pop
xchg
xchg
pop
scas
std
fistps
cmp
je
sti
mov
inc
jo
push
mov
jecxz
cld
sti
mov
aad
es
addr16
arpl
mov
xchg
aaa
sbb
and
sti
push
mov
fnstsw
aaa
sub
adcb
adc
xchg
outsb
bound
pop
xchg
mov
cltd
ss
push
es
sbb
cmp
push
loope
adc
push
add
mov
xchg
out
cmp
mov
mov
into
bound
adcl
loop
iret
and
in
ss
mull
arpl
jmp
clc
mov
pop
inc
cld
js
insb
jle
and
lea
aaa
shrb
jg
push
pop
frstor
cmp
jo
xchg
loope
lods
into
dec
jmp
call
sti
lea
xchg
orb
shlb
push
mov
aaa
enter
or
cmp
ja
shrl
cmp
in
int3
push
sar
mov
mov
pop
loope
popf
lock
popa
nop
inc
xor
cmp
push
push
pop
insl
or
das
lock
jae
sbb
lret
sub
jns
fidivl
mov
in
pop
jb
pop
sub
aam
push
jb
jp
stos
outsb
dec
push
or
sbb
mov
xchg
mov
dec
sbb
gs
fcompl
aad
dec
cmp
or
loope
pop
xchg
adc
aaa
test
push
lret
xor
fmuls
sub
sbb
pushf
inc
mov
inc
fistpll
pushf
or
cmp
pop
jbe
loope
mov
aam
test
dec
jge
push
jbe
ljmp
pop
int3
lahf
dec
cltd
fists
cmp
or
fistpll
lods
mov
fs
daa
cmpsb
adc
data16
inc
stos
and
pop
cwtl
lret
daa
in
aaa
mov
xlat
push
imul
ret
push
xchg
xchg
cwtl
inc
push
jg
jl
mov
std
fnsave
pop
dec
das
imul
fsubrs
push
pop
sbb
es
inc
inc
fisttpll
test
cmp
mov
and
cwtl
pop
dec
movsb
dec
xlat
rcrb
mov
xchg
sti
pop
sbb
sahf
addr16
or
pop
push
mov
sub
sub
pushw
and
sub
xor
xor
out
lret
shlb
pop
push
stos
fs
scas
movb
push
idivl
enter
xor
lret
push
mov
mov
inc
andl
add
sub
xchg
xlat
push
ss
loope
roll
cltd
repz
shrl
sub
push
fwait
pop
adc
inc
push
xor
out
mov
and
xchg
mov
shr
imul
push
enter
and
call
fucomip
hlt
sbb
fwait
pop
es
push
ss
std
les
mov
adc
and
out
sbb
pop
cmc
mov
sbb
xchg
sub
mov
movsb
std
es
sbb
inc
dec
lret
mov
outsb
sarl
cmp
mov
aaa
add
addr16
pop
and
xchg
xor
add
daa
pusha
xor
ja
out
mov
jbe
sub
pop
xchg
sub
sti
dec
xchg
xor
in
dec
inc
ficoml
stc
out
cmpsl
les
lea
cmp
in
mov
pop
jle
fisttps
das
pop
cld
sbb
out
movsl
adc
add
push
fisubrs
xlat
enter
int3
jno
adc
sub
mov
xor
mov
mov
aaa
fiadds
mov
or
subb
iret
mov
jbe
ds
js
mov
sahf
inc
push
dec
in
mov
test
dec
dec
int
icebp
sub
sbb
sbbb
test
in
pop
dec
pop
sarb
push
inc
jmp
sbbl
mov
icebp
aaa
pop
in
jle
popf
mov
fadd
push
sbb
sub
int3
icebp
fs
repz
xor
push
shll
repnz
push
cmp
std
xchg
adc
aaa
aam
arpl
clc
sbb
repz
cld
add
jle
out
js
cld
scas
jp
inc
xchg
lret
pop
cmp
jae
aam
repz
sbb
fstpt
cld
mov
mov
insl
stos
or
xlat
push
mov
add
pop
into
or
pop
pushf
shr
adc
pusha
sbb
pop
mov
fsubs
dec
mov
jmp
xchg
fabs
movsl
fstp
pop
stos
mov
fsubrl
xor
js
adc
add
addr16
push
mov
les
mov
nop
xchg
lea
adc
inc
fstpl
incl
pushf
subb
repnz
or
addr16
or
in
xor
scas
out
inc
push
jne
ret
fcmovne
mov
cmpsl
ret
xlat
bound
sbb
sub
fcmovnbe
mov
or
call
not
insb
jle
dec
mov
mov
loop
jno
call
xor
xchg
jo
mov
inc
mov
in
pop
cli
adc
gs
sbb
fstpt
jne
movsl
inc
or
pop
stc
insb
cmpl
leave
pusha
fwait
push
icebp
rcrb
rcrb
cmp
or
loope
xor
add
mov
lret
or
cmpsb
in
xchg
lret
xor
sub
dec
lret
pop
push
cmp
push
cmp
xor
mov
dec
sbb
lods
xchg
inc
aaa
pop
fsubrl
fcomi
and
daa
nop
sub
mov
out
mov
es
test
mov
cmpsb
cs
bound
xchg
adc
jecxz
cmp
sub
mov
out
xorb
mov
fld
pop
sbb
aas
in
insb
lret
xchg
mov
hlt
add
out
scas
incl
cmpsl
xchg
fcompl
mov
dec
nop
pop
sbb
sub
jo
cmpsb
lea
std
sbb
dec
fadds
jg
cmpsb
fistps
mov
dec
insb
ficoml
cwtl
into
fldt
das
add
lret
adc
dec
push
dec
pop
mov
ss
outsl
sbb
int3
mov
aam
push
add
push
xchg
pop
hlt
loope
adc
scas
add
inc
cld
inc
call
pop
push
inc
push
hlt
pushl
pop
push
mov
jp
or
sbb
push
mov
stc
push
mov
arpl
xor
adc
aad
pop
jg
lcall
out
aad
fists
push
push
dec
pop
lods
in
dec
inc
push
pop
pop
dec
iret
mov
ljmp
lret
lret
insl
or
jle
add
mov
idivb
cmp
jno
out
fs
mov
jecxz
xchg
outsb
orl
xchg
push
aaa
scas
inc
cmp
mov
cmp
mov
mov
push
mov
or
push
les
call
call
push
jbe
and
ja
fs
add
shrl
cmp
push
pop
sbb
sub
lds
je
hlt
mov
jo
xor
jbe
leave
add
test
aaa
sub
imul
push
jo
cmp
or
and
stos
mov
sbb
mov
cwtl
ss
xchg
adc
sub
pop
enter
push
clc
lea
lahf
cmp
pop
sbb
stos
mov
push
je
ds
add
cmp
ljmp
repz
cs
pop
test
mov
jmp
in
sbb
sbb
sbb
jmp
pushf
cmp
push
sub
loope
dec
js
push
and
adc
lgs
mov
pop
cmp
ss
pushf
adc
test
add
jle
pop
mov
mov
xchg
pop
jp
jnp
lea
shrd
sub
jge
iret
add
aaa
mov
lock
sub
cltd
imul
sbb
adc
sbb
mov
xlat
jno
xor
jle
js
cmp
pop
or
stc
lea
mov
ljmp
fs
fwait
inc
cmp
pop
jns
shlb
dec
outsb
out
stos
mov
and
sbb
and
mov
pop
in
aaa
cmp
push
ljmp
and
in
and
sbb
sarb
push
xchg
xchg
dec
ret
jge
jl
cmp
jb
mov
lods
pushf
vpsllq
fs
sub
popa
jmp
mov
aas
jnp
and
cmp
stos
xchg
inc
rorl
adc
jmp
xchg
aaa
out
mov
repz
test
jbe
aaa
xchg
cli
mov
lds
xchg
pop
loope
popf
nop
pop
cmp
cmp
mov
les
push
cmp
mov
sbb
adc
push
or
in
xor
fsubp
ja
bnd
pusha
pop
movsb
ret
xor
inc
adcl
adc
push
jle
lret
out
mov
xor
jge
pop
dec
aam
xlat
data16
lds
xor
xchg
push
int
push
mov
pop
dec
cmp
sahf
sub
pusha
fcmovu
push
outsl
add
mov
test
and
mov
mov
fistpl
inc
int3
and
jecxz
popa
add
pusha
fadds
mov
mov
push
inc
adc
cltd
cmpsl
and
nop
jbe
mov
and
pop
andl
inc
jp
mov
jge
xchg
and
pop
pop
out
inc
dec
lahf
pop
lahf
ret
ret
fwait
jnp
insl
cltd
addb
xor
jno
jbe
sub
andl
mov
mov
inc
je
fstl
sbb
mov
rdpmc
cmp
addr16
push
sbb
aaa
jae
inc
das
es
popl
jb
jge
pop
pushf
in
adc
stos
mov
aad
std
dec
lcall
inc
in
test
test
scas
sbb
fldl
and
ret
push
inc
adc
and
adcb
mov
xor
push
mov
inc
jnp
int3
out
bound
cltd
out
push
pop
adc
mov
divl
sbb
xor
ret
rclb
repz
add
mov
xchg
inc
xlat
jl
mov
jl
lods
fnsave
jnp
stos
sbb
cld
or
inc
loope
sahf
inc
pop
pop
xor
imul
aaa
sbb
in
add
jp
xchg
aam
shll
rcl
into
repnz
or
mov
mov
ja
push
sub
pop
xchg
sbb
or
cmc
inc
mov
xor
iret
add
pop
test
out
or
and
imul
fwait
push
xor
dec
xchg
mov
in
jecxz
imul
push
adc
xorb
imul
sbbb
adc
xchg
aaa
clc
or
dec
push
mov
loop
adc
add
add
mov
addb
lods
cmpsl
or
data16
jo
int
push
mov
jg
in
loope
cs
shll
movsb
popf
cltd
pop
cmp
xchg
leave
pop
cmp
jecxz
cmp
test
push
int
insl
aaa
movl
jne
push
out
cmp
dec
push
ja
jne
jge
jae
adc
push
repnz
repz
dec
mov
cmp
xchg
adcb
jge
add
fsubl
aaa
test
cwtl
pop
inc
pop
negb
sti
xchg
notl
sbb
jmp
dec
mov
lods
add
sbb
test
dec
dec
rclb
pop
adc
shl
sub
mov
xlat
or
scas
pop
mov
pushf
bound
jae
dec
into
sub
lods
sbb
out
mov
push
test
out
stos
adc
fdivr
scas
sub
mov
jp
sbb
cmpsl
or
mov
sub
cmp
jle
jns
pop
mov
sbb
fisubrs
jb
push
xchg
inc
ds
jle
enter
sub
push
imul
sbbl
lahf
jecxz
xchg
std
mov
inc
movsb
rorl
repnz
das
pop
sar
mov
jl
lret
push
testl
pop
arpl
cmp
inc
and
xchg
bound
lds
xchg
pushf
imul
sarb
mov
xchg
jg
ss
and
sbb
test
and
sar
sbbb
jge
decl
fists
jg
mov
js
int
or
jmp
adc
in
fmuls
out
cmp
outsb
mov
aaa
rorb
inc
pop
test
pop
and
push
cmp
dec
popf
mov
inc
adc
mov
aaa
in
cmpsb
fimull
fdivrl
mov
ret
inc
je
pop
cmpsb
add
cmp
enter
out
test
mov
cmp
dec
aad
scas
mov
repz
or
jecxz
mov
jae
sub
sbb
push
in
test
lds
cmp
jo
sarb
push
addr16
pop
rclb
in
jge
popf
subb
sbb
mov
mov
std
aaa
sahf
fstpt
sbb
pop
mov
fmuls
in
adcl
fldt
inc
push
mov
ljmp
daa
pusha
lret
lcall
or
jp
sahf
push
pop
out
jmp
inc
dec
pop
ret
pop
pop
movsb
je
int
fistpll
mov
arpl
xchg
pop
popf
scas
rorl
iret
dec
dec
push
sub
insl
les
addb
mov
loopew
inc
sub
or
jmp
pop
lods
jle
push
mov
stc
fnstcw
mov
xchg
mov
shrl
inc
jo
je
adc
add
imul
pop
push
pop
xchg
arpl
and
add
cmp
sti
pop
insl
push
ret
cmc
aaa
pop
je
addb
sbb
nop
inc
sbb
jo
popf
call
pop
xlat
mov
push
inc
xor
cmp
jmp
sub
nop
mov
mov
mov
dec
cmp
ficoml
sar
jge
aam
movsl
je
jmp
imul
push
xorl
les
mov
pushf
add
jl
add
rclb
ds
cli
inc
leave
push
cmp
jmp
jno
sbb
ss
and
movsb
lret
sbb
pop
add
shlb
mov
sub
xlat
pop
fsubrl
out
push
jb
inc
fsubl
mov
push
xor
xor
sbb
add
add
lods
stos
ret
jle
insl
dec
add
jle
pop
enter
fidivrs
push
popa
int3
mov
sti
iret
je
push
sub
pop
pop
hlt
repnz
jne
mov
fisubrl
cmp
pop
aam
sti
loop
pop
not
jno
dec
loop
pushf
inc
aaa
inc
pop
adc
in
mov
inc
cld
ss
stos
mov
xchg
ret
push
fmul
imul
out
pop
jg
lds
cld
mov
add
add
int
repz
mov
mov
outsl
push
sbb
repnz
jle
add
adc
inc
mov
pop
adc
icebp
cmp
lret
mov
lock
jns
sub
inc
std
pop
shrb
in
aam
sbb
lods
jmp
fiadds
aam
lcall
pop
jns
jo
popa
dec
add
in
push
adc
jmp
or
rcrl
and
aaa
xor
pop
cmc
fwait
mov
sbb
cmp
fstpt
pop
or
xchg
cwtl
mov
sbb
mov
sub
jnp
mov
add
pop
sub
pop
sbb
movsb
jmp
sbb
mov
lock
call
fwait
test
bound
xchg
and
mov
je
push
out
aaa
jbe
and
push
jecxz
push
sub
shr
test
ljmp
jne
mov
push
mov
push
rorb
push
xor
mov
pop
pop
lcall
pusha
dec
jl
fdivrl
cmp
mov
pop
popf
sbb
int3
mov
std
rcrl
and
push
in
mov
dec
and
pop
imul
adc
popa
into
roll
int3
cltd
cmc
pop
sahf
int3
and
es
xor
inc
jg
add
cmc
mov
js
adc
movsl
jo
mov
loopne
jae
jl
jge
addr16
les
sub
icebp
into
or
cmpsb
adc
fistpll
dec
pop
inc
mov
adc
aas
test
mov
jg
popl
movb
inc
test
js
pop
pop
jae
jmp
repnz
test
and
lods
sbb
adc
mov
xor
or
ljmp
mov
sbb
aad
aaa
out
cmp
sbb
movsb
push
cwtl
pushl
adc
fldcw
add
hlt
mov
ljmp
stos
jne
jns
ret
out
andb
mov
mov
add
in
repz
test
pop
rolb
lea
xchg
push
stos
xchg
pusha
sbb
stos
push
loope
dec
stos
xchg
mov
cmp
push
push
test
push
pop
and
ja
xor
outsl
imul
lahf
fisubs
cltd
mov
xor
sbb
sbb
stos
lods
inc
mov
fidivl
dec
je
sahf
icebp
mov
push
in
push
add
loopne
out
pop
loopne
cmp
stc
mov
mov
inc
out
push
movsl
imul
jns
mov
mov
or
cltd
pusha
in
add
cmp
stos
hlt
push
test
lea
xchg
add
pop
leavew
jecxz
loope
mov
aaa
ret
mov
dec
lret
jbe
fsts
shll
sbb
push
popf
sub
dec
insb
jle
das
jle
xchg
insl
bound
sub
mov
inc
inc
in
test
aaa
scas
call
insb
out
int3
idivb
fcompl
jnp
push
inc
push
aaa
pop
or
dec
pop
insb
scas
xor
rcr
mov
pop
sub
mov
jg
and
xchg
divb
mov
lods
push
cli
xchg
jle
insl
sahf
mov
xor
jmp
adc
add
xlat
lret
mov
sub
aas
pusha
dec
add
pop
inc
add
or
push
pop
add
loop
cwtl
cmc
sbb
push
nop
or
xor
dec
cmp
mov
fwait
jl
roll
rorb
int3
sbb
mov
mov
ror
mov
iret
je
sub
push
push
mov
adc
mov
jmp
add
stc
pop
aaa
cwtl
inc
outsb
xchg
pop
sbb
push
jg
xchg
mov
jp
jb
les
xor
outsb
aaa
popa
jle
dec
hlt
movsl
loope
mov
lea
mov
popf
add
aad
pop
xor
out
dec
add
out
aam
imul
pop
mov
sub
xchg
ret
imul
push
add
sti
aad
mov
cmp
cwtl
mov
add
inc
mov
loop
cltd
mov
jmp
insl
cmp
repz
push
rclb
test
jo
pop
push
imul
mov
test
mov
adc
cltd
push
loop
lcall
inc
push
sub
repz
xchg
xor
icebp
insb
repz
lods
inc
fwait
arpl
std
push
jmp
jb
mov
pop
je
insb
pop
lods
xchg
loope
pop
lea
push
push
je
push
dec
push
jnp
inc
fcomps
or
and
bound
and
push
sub
adc
xchg
pop
sahf
test
xchg
push
insl
fnstenv
dec
fdivr
mov
push
jg
jge
cmpsl
sbb
fwait
imul
add
mov
push
inc
add
cwtl
jnp
lock
mov
push
sbb
lret
enter
inc
lods
inc
loope
push
mov
lcall
mov
pop
push
adc
insl
sub
xchg
mov
in
sbb
pop
ds
push
sub
mov
jno
aad
or
add
pushf
sbb
dec
movsl
pusha
lcall
dec
xor
push
and
jo
repz
push
dec
stos
inc
insl
pop
mov
jecxz,pt
lahf
inc
icebp
and
loope
negl
push
cmp
lods
iret
dec
lret
into
sbb
xchg
aaa
in
mov
and
imul
lock
jge
sbb
in
mov
scas
callw
in
fcomps
inc
into
adc
rcr
jno
ret
dec
and
aam
or
add
stos
push
aaa
pop
pop
cmp
outsb
scas
inc
jns
aaa
mov
xor
ret
xlat
xchg
jo
loopne
add
jno,pn
sbb
sbb
mov
xchg
sbb
popf
xchg
enter
cmp
sti
pop
gs
cmp
int3
adcb
call
mov
adc
arpl
adc
and
add
add
mov
aam
movsb
and
lea
in
fcompl
dec
push
mov
les
sbb
cmp
fiaddl
jae
pop
add
ljmp
push
ds
inc
cltd
push
mov
fistpll
in
in
and
jge
jne
sub
xchg
aaa
movsb
mov
les
sub
or
mov
insb
out
hlt
sbb
push
pop
mov
jb
xchg
mov
jge
mov
movsl
pop
aaa
or
jb
sbb
push
lahf
sbb
pop
fwait
inc
fadd
and
movsl
jp
int
flds
bound
jp
clc
xchg
insl
rolb
adc
and
inc
mov
ja
cs
dec
xorl
push
jae
into
subb
aas
push
sbb
push
inc
xor
fbstp
fucomip
push
fildll
inc
push
aas
int
lea
pusha
inc
ret
out
fwait
and
or
inc
repz
shlb
mov
jle
je
mov
rcrb
call
inc
nop
mov
aad
dec
inc
jae
aaa
loop
jb
mov
jno
pop
mov
js
fisubs
lock
pushf
jge
pop
and
inc
imul
fwait
cmp
inc
inc
movb
push
addr16
arpl
inc
cwtl
sbb
adc
push
scas
mov
icebp
enter
pop
inc
xchg
pop
pusha
sahf
jmp
out
push
ds
insl
lret
rep
sahf
mov
loop
mov
mov
xchg
mov
lcall
push
add
sti
pop
or
loop
push
dec
inc
and
jle
lods
mov
in
imul
mov
ret
sbb
cmp
mov
or
icebp
in
mov
mov
shll
das
iret
dec
mov
ss
pop
pop
pop
aas
xor
cmp
sahf
jl
sub
dec
call
iret
pop
mov
fstl
pop
call
das
hlt
mov
shl
push
pusha
imul
outsl
xor
mov
jecxz
daa
push
jbe
pop
cs
fistpl
shll
sub
js
aaa
sub
scas
loope
ret
movsb
xchg
jbe
popf
push
and
jp
aaa
xchg
inc
push
and
test
nop
sub
add
outsl
push
inc
jp
les
adc
cli
repz
push
jp
jbe
pop
and
mov
aad
pop
adc
pop
xchg
dec
sahf
xchg
dec
insb
out
aaa
nop
arpl
xlat
fwait
incb
inc
inc
cld
cs
inc
fbld
xor
push
fwait
sti
xchg
xchg
mov
xchg
xor
pop
add
rorl
mov
pop
loopne
cltd
push
ljmp
sbb
xor
ficomps
mov
les
pop
mov
lahf
sbb
mov
loop
add
sub
mov
in
xchg
inc
inc
das
xchg
mov
adc
fisttps
cmp
cwtl
insb
stc
loope
fstp
jge
pop
mov
and
int3
inc
sti
mov
jb
pop
addr16
jnp
cmpsb
and
jb
mov
jle
lods
jae
lods
cli
call
pop
cmc
pop
adc
jl
das
aas
shlb
or
in
adc
xchg
inc
inc
mov
cltd
mov
in
push
sub
negb
test
jbe
mov
push
loope
call
insb
push
cmpl
add
and
in
out
stc
inc
fcomps
imul
jbe
xor
dec
mov
hlt
les
jno
dec
mov
cmp
dec
cmp
push
dec
movb
push
cmp
jno
fisttpl
data16
or
jns
dec
repnz
cmpsl
ss
stos
and
ret
test
or
fistl
add
cmp
mov
sbb
inc
dec
rcrb
cwtl
mov
aaa
scas
outsl
movsl
or
fadd
cld
imul
mov
test
ss
mov
add
cmp
push
popa
je
fcom
dec
jge
jo,pt
mov
cmpsl
mov
hlt
mov
in
fidivrl
push
mov
mov
cltd
ds
jo
lahf
cmpsl
push
mov
fxch
mov
push
lret
repnz
pop
add
fistl
mov
pop
or
or
insb
jg
bound
aad
jp
inc
mov
dec
insb
xor
bound
cwtl
sub
ljmp
shlb
and
mov
sbb
adc
dec
in
in
mov
or
push
repz
bound
mov
jecxz
dec
and
test
sub
push
sbb
outsb
lahf
int
xor
lret
xor
inc
and
xchg
mov
push
jnp
mov
arpl
dec
in
rcrl
and
fcompl
ljmp
add
insb
xadd
fisubs
adc
xor
push
aad
fucomip
fstps
inc
push
pop
sub
push
clc
and
sbb
sti
test
xchg
rorb
mov
aam
xchg
jnp
fisttps
add
cmp
lea
and
sbb
xchg
hlt
iret
roll
mov
sbb
aad
das
fistpll
xlat
adc
cltd
dec
rcr
adc
xchg
and
fsubrs
ret
and
dec
xorl
fidivs
repz
cmp
cmp
dec
adcl
and
aaa
or
aas
stos
sbb
test
adc
jb
lret
imul
jle
iret
inc
adc
cwtl
nop
mov
mov
lret
or
insl
lods
adc
xchg
pop
xchg
pop
push
in
pop
or
xor
lret
lea
and
loopne
push
gs
jnp
or
sahf
or
inc
ss
fwait
clc
aam
popf
shl
pop
adc
cmp
xchg
push
iret
cmp
daa
jbe
das
xchg
mov
dec
add
xchg
imul
in
pop
push
outsb
and
lret
or
xor
pop
aaa
lock
jno
jl
stos
cmp
lds
jp
mov
mov
push
sub
xor
lret
cmpb
xlat
sub
jmp
pushf
pop
int3
dec
pop
sub
cwtl
shlb
stos
fs
inc
es
add
mov
loope,pt
mov
in
or
mov
cmp
out
xchg
ffree
push
adc
aam
lret
arpl
jo
xor
adc
sti
cli
inc
xchg
add
addr16
or
pop
sub
pop
or
sbb
jge
in
cld
xchg
mov
imul
bound
xlat
loopne
inc
mov
aas
mov
push
cmp
std
shr
pop
jns
aaa
out
add
arpl
popf
loop
shlb
pop
repz
or
sarl
cltd
lret
xchg
cld
clc
add
js
mov
jl
lock
aam
xchg
add
fcomip
push
xchg
inc
cmp
or
das
mov
mov
add
icebp
movsb
ja
pop
push
stos
mov
inc
cmp
inc
repnz
loop
test
push
sti
pop
adc
sbb
out
lock
adc
aam
cmp
adc
stos
out
add
movsb
jmp
call
das
dec
test
sub
or
pop
cwtl
sbb
icebp
jns
mov
jge
je
gs
dec
and
sbb
push
mov
push
mov
ret
lods
xchg
stos
and
in
cmpb
loopne
orl
pop
lahf
stc
jl
and
jnp
mov
xchg
outsl
in
cwtl
mov
jnp
add
les
hlt
rcrl
aaa
or
or
cltd
lcall
or
jns
fdivl
rclb
pop
inc
pop
mov
fisubrs
jns
and
lea
mov
inc
mov
pop
movsl
shll
je
test
push
aaa
mov
loopne
mov
mov
cmp
inc
mov
push
movsb
adc
in
dec
in
and
in
adc
cld
scas
cmp
xor
repz
mov
push
pop
push
jbe
outsb
pop
dec
push
mov
not
pop
cmp
inc
sar
call
shlb
pop
ficompl
or
push
xchg
pop
sub
insb
aas
aaa
fisubs
add
cmp
in
aas
testb
dec
add
jl
in
shlb
sbb
inc
cmpsl
xchg
add
jmp
mov
arpl
ret
sti
sub
push
sbb
scas
or
add
xor
fisubl
push
ds
lahf
sbbb
ret
sub
les
cld
sub
aad
dec
ja
clc
popa
in
dec
adc
sbb
inc
call
nop
inc
repnz
sti
ret
sub
jle
call
dec
push
cmpl
mov
push
or
out
test
xor
sbb
mov
movsl
cltd
fnsave
outsl
cmp
pop
pop
cltd
out
cmp
xorl
sbb
repz
popf
scas
lcall
pop
xchg
or
sti
xchg
mov
mov
fbstp
mov
adc
mov
push
adc
sub
fnsave
lods
push
xchg
jmp
fcomp
sbbb
fstpl
loop
cltd
xor
mov
xorl
jmp
bound
xchg
bound
mov
stc
jbe
bound
push
mov
pop
in
jecxz
rolb
nop
out
sbb
lea
pop
and
cmpsb
cmp
adc
xchg
xor
or
imul
addr16
or
enter
and
mov
add
js,pt
dec
adc
pushf
add
roll
adc
jge
mov
lock
inc
call
adc
outsl
stos
imul
mov
jmp
push
call
ss
add
adc
addr16
sbb
jb
push
inc
js
test
xchg
inc
xlat
pushf
aas
mov
add
notb
pop
mov
test
ror
add
push
mov
rcrl
jbe
sbb
outsb
push
lock
mov
out
lret
jns
sbb
sti
push
fst
xor
fists
push
iret
dec
inc
sub
addb
in
mov
xchg
mov
fdivl
std
shlb
shrl
cld
add
mov
cmp
pop
stos
xchg
adc
xchg
sub
pop
ljmp
mov
ss
loope
jl
lea
cmp
mov
or
mov
jg
sti
pop
mov
inc
xlat
jp
jae
push
xchg
and
xchg
mov
out
cmp
sbb
jecxz
scas
shll
js
mov
sbb
sahf
sbbl
outsb
divb
mov
repnz
dec
call
out
add
mov
outsb
pop
popa
ljmp
in
frndint
fcomps
jbe
push
js
and
es
ss
xlat
mov
push
xchg
mov
orb
adc
dec
mov
mov
jb
mov
es
pop
ret
add
popa
movsl
std
pop
xchg
mov
aam
lods
mov
lret
arpl
jp
insl
push
popf
jecxz
and
xchg
add
cs
cmp
outsb
mov
aaa
pusha
data16
jl
aam
hlt
dec
pushl
sub
lahf
sbb
mov
call
and
jmp
pop
rol
sbb
outsl
push
insl
ja
cmpsb
xchg
das
out
mov
out
shll
inc
add
std
out
mov
and
je
mov
push
fsubrs
rclb
scas
cmp
mov
aas
push
movsl
cmpb
pop
inc
cmp
cmc
js
ljmp
ret
fwait
loopne
mov
xchg
dec
jle
mov
mov
enter
cld
mov
push
roll
rolb
cmp
stos
in
and
push
dec
jae
inc
pop
sub
adc
sarb
push
mov
rclb
sbb
dec
dec
sbb
ljmp
mov
aam
rcrb
shll
pop
shl
sahf
dec
iret
pop
dec
nop
aaa
xor
jmp
cmp
mov
mov
push
cld
sbb
mov
test
and
sahf
test
cmp
mov
mov
aas
fwait
and
or
xor
repnz
jp
out
test
aaa
push
adc
dec
mov
mov
aaa
icebp
mov
xorl
cmp
stc
repnz
call
stos
jge
outsb
mov
movsb
mov
clc
mov
dec
loopne
jno
mov
push
dec
dec
arpl
inc
lcall
imul
dec
cmp
xchg
push
push
out
dec
xor
aas
adc
loope
dec
dec
mov
outsb
push
sbb
push
sti
cmpsb
jl
loop
jecxz
scas
adc
enter
stc
sub
cltd
mov
iret
sbb
inc
add
stos
cmp
hlt
imul
sub
add
push
insl
stos
pop
cmpsb
jb
fildl
loop
dec
lea
jl
test
sti
loop,pt
pop
xor
outsb
mov
loope
pop
mov
data16
mov
cwtl
stos
pop
push
mov
pop
mov
adc
in
adc
iret
loopne
mov
ja
add
sbb
lret
pop
add
in
js
dec
xor
loope
pusha
add
mov
fnstcw
fsubr
inc
aam
adc
xlat
aam
adcb
mov
std
jbe
imul
lret
in
scas
dec
leave
mov
jl
iret
dec
shlb
cmp
mov
pop
cmp
pop
push
sti
push
push
push
jb
mov
cmp
and
jb
push
cmp
xchg
adc
push
loop
out
mov
arpl
mov
sbb
push
jno
push
outsl
pop
push
pushf
push
cmp
loopne
mov
pop
mov
adc
sbb
fnstcw
jbe
in
xchg
aaa
scas
aam
out
mov
lods
sbb
add
vmread
in
and
sub
xchg
sub
sub
cmp
push
divl
pop
daa
aas
clc
fstl
sahf
out
push
and
jns
pop
or
addb
out
push
ret
pop
movb
bound
pop
or
mov
adc
xchg
jb
test
jp
sbb
pop
ljmp
stos
mov
or
mov
add
stos
insb
ja
sahf
shr
cmpsl
sbb
aaa
rcrb
aaa
mov
cmpsl
or
xchg
inc
scas
repnz
mov
push
rolb
dec
mov
test
cmp
je
fstps
inc
push
push
mov
xorb
xor
lret
push
dec
sti
aaa
ret
adc
sbb
test
pop
movsl
jp
fisttpll
mov
cli
cmp
mov
sbb
pop
shrb
jg
xchg
pushf
out
repz
push
insl
bound
xor
jecxz
push
ret
pop
out
lahf
loopne
aaa
inc
dec
sarb
sbb
cli
shll
andb
pusha
fcom
fimuls
repz
pop
mov
xchg
pushf
imul
sbb
in
ss
mov
pop
add
xchg
int3
xchg
into
mov
xchg
popf
pop
fisttps
fcompl
fmuls
inc
orb
mov
push
jge
dec
push
int
mov
out
roll
shrb
mov
mov
nop
pushf
mov
ds
in
inc
and
insl
or
pop
into
and
add
test
pop
test
fildll
mov
dec
lock
inc
pop
mov
popl
outsb
sub
xor
sbb
scas
sti
jl
dec
stc
jo
push
inc
sbb
fcmovbe
adc
or
lcall
popf
aaa
mov
xor
cld
and
aas
and
arpl
xchg
repz
mov
ss
xchg
stc
lret
loopne
fistpl
aaa
jo
pop
cmc
and
inc
mov
sti
int3
jb
or
fistl
aam
out
int
rolb
outsl
inc
pop
lods
mov
xor
jp
shll
popa
xor
cmp
mov
jmp
pop
adc
push
sbb
pop
adc
inc
inc
push
jle
adc
adc
push
mov
push
xor
shr
imul
mov
and
mov
cmp
and
jp
pop
dec
mull
xchg
inc
dec
pusha
lahf
aaa
adc
or
and
jle
xlat
stos
jl
pminub
pop
mov
mov
push
and
mov
dec
leave
add
dec
dec
in
ss
in
xchg
pop
negl
sbb
das
xor
or
in
sbb
sub
loop
mov
sub
pop
sbb
orb
fists
cmp
push
push
cltd
mov
lahf
shrl
cmp
adc
imul
leave
mov
inc
push
push
push
shll
into
cld
mov
pop
inc
std
test
pop
push
lret
xor
in
repz
cld
adc
dec
sub
dec
div
cmpsl
fdivl
mov
mov
or
incl
int3
sbb
into
outsl
std
dec
ds
pop
jecxz
and
mov
popa
jo
aam
pop
dec
hlt
add
dec
in
pop
icebp
icebp
xchg
jne
sbb
mov
inc
loop
icebp
pop
movl
xor
lcall
jae
leave
push
mulb
icebp
mov
cltd
dec
jmp
out
movsl
in
aaa
jle
mov
cmp
fisubrs
ret
mov
aaa
and
push
sahf
cmp
stc
fwait
jbe
and
or
or
sub
data16
pop
iret
popa
push
int3
xchg
xor
fucomp
and
int
adc
ds
and
rorl
outsb
lods
test
pop
arpl
sti
outsl
aaa
fcomps
lea
sbb
pushf
sub
xor
arpl
icebp
cmp
push
mov
pushf
jnp
jo
fmuls
push
sahf
test
push
lret
stos
arpl
adc
arpl
xor
movsb
sbb
adc
bound
mov
pop
jl
ds
dec
test
and
std
es
fwait
loopne
pop
loop
jp
dec
nop
and
lcall
jae
push
idivl
dec
shlb
les
test
lods
cmp
jae
cltd
fildl
dec
pop
xchg
mov
inc
dec
movsb
call
mull
int3
cmp
data16
inc
lret
scas
cltd
out
or
push
sbb
pop
jno
inc
jne
jne
ljmp
add
push
xchg
shll
std
cmp
ret
in
insb
outsb
dec
xor
xchg
push
jbe
xor
cmp
mov
and
loope
mov
mov
adc
arpl
push
adcb
dec
test
rolb
push
fildl
jnp
out
and
jl
shrb
jne
lret
aaa
stc
repnz
cmc
ret
sbb
imul
cld
movsl
les
sbb
shlb
fxsave
aaa
xor
adcb
icebp
je
insl
es
mov
loope
mov
pop
cmp
jle
insb
cmpsl
xchg
hlt
pop
fmul
dec
pop
sarl
sbb
outsb
js
loop
sbb
ljmp
pop
dec
nop
insl
in
cmp
es
jmp
repz
popa
pop
scas
hlt
test
movsb
ficoms
cwtl
mov
mov
cmpsb
iret
add
inc
mov
fldl
aam
in
imul
pusha
cld
ljmp
out
sbb
sbb
lds
les
shlb
pop
mov
mov
sub
push
ret
xchg
jnp
bound
loope
sbb
inc
sbb
dec
out
out
sub
fmuls
in
mov
clc
inc
arpl
bound
and
fdiv
neg
mov
fsubrl
dec
jns
mov
push
push
mov
add
leave
ljmp
je
inc
in
lcall
shrl
mov
pop
push
dec
sub
jl
inc
fsubrs
xchg
scas
adc
push
pop
aam
jbe
jmp
loope
xor
adc
dec
fistpl
inc
mov
andb
jle
pop
pop
push
sar
and
test
sbb
or
cwtl
sbb
shll
rclb
and
pushf
inc
inc
mov
cs
sbb
or
dec
pop
sahf
adc
sarl
fsub
push
lods
jb
stos
daa
lcall
js
loope
dec
push
inc
push
pop
mov
inc
jbe
mov
sbb
add
fmull
aam
jl
jge
movsl
push
jbe
into
mov
jae
js
xchg
or
cmp
jecxz
test
outsb
xchg
lock
lcall
adc
sub
pushf
inc
and
dec
bound
inc
and
por
push
mov
dec
xchg
repz
mov
pop
lods
xor
jl
in
mul
aaa
jl
sahf
enter
lods
pop
xor
and
mov
cmp
mov
cmp
jb
fstps
sbb
ja
shll
mov
push
icebp
xchg
adc
sub
pop
push
cmp
push
or
or
jmp
stos
add
mov
test
pop
sbbb
bound
push
ja
xorb
mov
sub
in
xchg
jbe
xchg
mov
cmp
mov
push
subb
pop
nop
out
sbb
fneni(8087
mov
inc
mov
sahf
inc
jle
mov
es
inc
movsl
out
push
mov
cmp
loope
push
popa
ja
std
pop
pop
and
insl
lahf
arpl
jl
jae
push
and
sbb
mov
dec
cld
mov
imul
mov
xor
fstl
mov
jno
mov
stos
push
sti
lcall
dec
and
push
sub
out
sub
rcrl
enter
shll
std
jmp
icebp
stos
bound
sbb
xchg
xor
sbb
shll
stos
test
mov
out
fstpl
xchg
mov
jno
adc
out
mov
imul
inc
out
add
fnstenv
jge
movsl
aaa
pop
sub
push
push
lods
sbb
jns
aaa
add
clc
xlat
sub
int
add
inc
inc
cli
fucomp
aaa
mov
and
pop
mov
inc
cmp
cltd
repnz
fildl
imul
jg
xor
push
push
lahf
xor
aas
mov
inc
xchg
fcomps
loope
pop
shll
mov
dec
mov
pushf
enter
pop
sbb
rcl
inc
xchg
and
sub
aaa
push
in
inc
push
jo
nop
jle
in
jae
pop
cmp
stos
gs
addb
push
test
cs
pop
xchg
push
jae
fcmovnbe
sbbb
sti
jmp
hlt
outsl
loope
lret
cmp
out
xor
mov
xor
xor
pop
pop
sbb
pop
ds
or
jle
movsb
sbb
test
jns
enter
jecxz
std
out
push
mov
cltd
pop
push
mov
mov
out
xchg
xchg
push
push
insl
orb
lea
fwait
ja
pop
sbb
in
sbb
pop
es
test
arpl
and
loope
sbb
sub
pop
outsb
push
jmp
inc
mov
or
in
aas
push
jecxz
pop
fsubs
movsb
pop
push
cmpsb
adc
jne
shlb
mov
aad
leave
shlb
fdivrs
dec
addr16
shlb
sahf
je
ret
sub
sti
out
lods
lds
shll
scas
push
fidivrs
repnz
mov
popf
and
cmp
sub
es
mov
add
ss
lahf
mov
push
and
mov
cmp
jbe
outsl
out
arpl
sub
jge
cmp
je
imul
sub
jb
mov
xchg
pop
xchg
mov
cltd
popa
push
cmp
out
icebp
sub
xchg
cmpsb
cmc
leave
jle
mov
aam
push
test
std
cwtl
sub
dec
sub
fnstsw
sub
jo
push
pop
or
in
xor
aaa
sbb
insb
hlt
pop
jo
mov
cmpsl
fstl
daa
xor
shrl
fisttpl
sbb
hlt
outsl
jb
xor
or
jbe
dec
cmp
shlb
push
aaa
and
sbb
dec
dec
mov
jecxz
add
lods
mov
pusha
sbb
push
cmp
add
stos
pop
pusha
cmp
scas
mov
cmp
shll
rolb
mov
add
mov
imul
sbb
cmp
xchg
repz
inc
enter
mov
mov
xorl
mov
xchg
jecxz
daa
sbb
sub
repz
mov
loopne
pop
fiadds
jne
int3
push
cmpsb
sti
imul
ret
pop
std
jbe
mov
inc
push
movsl
sub
sahf
xchg
sbb
inc
mov
cmpsl
cmp
add
xor
rorb
rcl
cmp
jae
cmc
sahf
pop
insb
sub
fisttpl
adc
jb
es
movsb
into
jno
popf
cltd
push
fwait
sbb
jbe
or
sbb
in
pop
enter
lea
or
jle
push
push
dec
or
fsubl
aaa
lods
push
mul
jle
push
dec
push
test
pop
sbb
es
cmp
aad
shl
imulb
sbb
call
pop
mov
pop
int
sub
xor
scas
jle
xor
jbe
dec
mov
mov
in
pop
pop
int
jge
or
add
push
imul
fucomip
pop
mov
js
jb
cmp
int
lock
sub
push
loope
arpl
sub
inc
popa
push
or
and
sbb
cli
in
rcll
dec
loope
pop
fdivs
lds
jnp
clc
add
ja
insb
aaa
dec
or
cmp
popf
jp
scas
fmul
or
popf
dec
repz
add
pop
jge
mov
adc
jbe
clc
or
dec
mov
push
pop
sbb
jp
and
sbb
int3
aaa
sbb
push
xchg
sti
cmp
out
divb
and
and
test
lds
in
xchg
daa
mov
fwait
test
pop
out
neg
roll
jecxz
dec
and
aaa
lret
xchg
addb
fnstsw
les
shlb
popf
mov
repz
jle
mov
dec
cmp
pop
mov
pop
or
xchg
jnp
dec
sbb
movsb
pop
dec
jb
imul
sbb
out
in
adc
inc
mov
fimuls
or
aad
mov
leave
ds
nop
mov
xchg
xchg
push
adc
sahf
imull
mov
adc
xor
inc
mov
ds
xchg
ja
add
scas
jle
jl
adc
in
pop
inc
lcall
out
ds
adc
mov
aaa
jbe
cmpsl
loop
inc
cmp
mov
aaa
insl
fcoms
mov
lods
pop
mov
dec
shlb
int
jo
repz
adc
in
sbb
push
mov
pop
jae
pusha
pop
mov
xchg
or
xor
cli
mov
ds
call
enter
jnp
outsb
and
inc
push
scas
push
sbb
outsl
cwtl
pop
in
and
pop
jbe
fucomp
mov
add
mov
mov
data16
cld
mov
inc
jae
dec
aaa
jmp
faddl
xchg
cld
in
dec
and
add
daa
and
adc
xchg
neg
xor
sbb
in
dec
xchg
cmp
mov
nop
aam
and
and
negl
mov
sbbl
xchg
das
pop
pushf
and
lods
aaa
cmp
inc
icebp
fistpl
popa
add
or
or
std
pop
sti
xor
adc
inc
arpl
pusha
repnz
add
add
xor
mov
imul
push
clc
push
in
push
and
and
inc
lds
mov
stos
in
xchg
out
cmp
adc
push
push
mov
mov
fucomi
add
cmp
pop
or
mov
push
pminsw
dec
pop
dec
xchg
fimuls
movsl
pop
std
dec
nop
dec
push
mov
push
popa
adc
mov
xchg
ret
aaa
test
jne
sti
or
mov
push
dec
xor
xchg
ret
mov
into
sub
icebp
xchg
aam
subl
fs
lea
cs
loopne
add
pop
mov
movsl
inc
in
je
mov
rcr
stc
jns
add
in
xchg
inc
aaa
adc
inc
outsb
ss
and
jp
jp
loopne
xchg
mov
jmp
jo
je
out
into
arpl
push
inc
cs
cbtw
mov
pop
mov
scas
mov
and
aas
std
fdivr
inc
pop
sbb
cwtl
aam
pushf
inc
movsl
imul
rcrl
dec
add
and
mov
loopne
xorl
cmpsb
divb
lods
push
out
adc
lock
mov
std
pop
xchg
and
mov
ficoml
in
pop
mov
call
add
fcompl
xchg
mov
ret
jg
sahf
enter
cmp
and
jge
dec
cmp
sbb
adc
mov
lcall
dec
sbb
test
stos
movsb
xchg
mov
clc
jne
sbbb
inc
push
ljmp
cmc
xor
data16
lea
daa
loop
xlat
stc
xchg
lcall
push
aaa
and
push
mov
inc
lret
cmp
lods
sbb
pop
sbb
push
xor
xor
rcll
loop
int
xor
or
mov
xor
icebp
mov
loope
icebp
inc
mov
pop
imul
test
movb
cwtl
sub
pop
dec
addr16
aad
adc
js
lahf
sbb
mov
in
stc
out
sbb
popa
into
jne
cs
dec
mov
sub
adc
gs
sbb
or
mov
clc
pop
js
cwtl
hlt
mov
aas
inc
xchg
pushf
xchg
aaa
pusha
sub
outsb
out
mov
dec
xchg
push
icebp
inc
mov
lcall
push
icebp
xor
mov
and
sub
pop
mov
popf
dec
pmaddwd
or
jle
mov
imul
mov
out
and
jne
inc
adc
stos
shlb
dec
rcll
pop
add
sar
test
cmp
sbb
cmp
xlat
cli
jmp
jo
inc
inc
outsb
gs
pop
dec
scas
xchg
mov
jne
dec
jnp
ret
push
popf
cmp
cltd
inc
loope
xchg
ds
les
or
pop
jb
pop
inc
mov
xchg
push
repnz
xchg
dec
sub
push
ret
inc
loope
in
cmp
clc
push
out
sub
lahf
sbb
and
lock
mov
push
sbb
test
in
xchg
xchg
cmp
mov
push
movsl
and
sbb
outsb
imul
or
mov
icebp
incb
imul
xorb
xchg
fists
push
jo
mov
ret
push
push
sbb
mov
data16
in
pop
es
popf
pusha
xchg
js
cmpsb
loopne
rep
pushf
inc
fildll
cltd
pusha
pop
iret
cmpsb
and
lods
insl
or
std
fsubrl
xor
pop
stc
fistpll
cmc
sbb
mov
roll
push
sbb
lods
imul
jp
fstpl
out
stos
sahf
imul
sub
dec
inc
in
gs
xchg
pushf
sub
jge,pn
pop
push
rcll
test
pop
fidivrl
bound
call
pop
rcrb
out
jne
rcl
pop
cltd
or
cld
sbb
insl
sti
std
push
in
jae
push
ja
xchg
je
aad
mov
mov
cmp
lcall
adc
jmp
jne
add
scas
or
push
sbb
pminsw
popa
loope
in
adc
int3
xor
or
mov
xchg
adc
aam
mov
sub
pop
lods
std
pop
cmp
xor
gs
gs
and
lret
fldl
les
mov
stos
repnz
cltd
sbb
add
adc
shr
and
xor
jle
mov
jg
jle
mov
imul
sarb
push
jne
or
inc
cmp
dec
xchg
xor
orb
push
add
mov
and
push
pop
jl
push
add
xor
mov
das
and
xchg
sub
push
and
arpl
in
ret
mov
dec
mov
xchg
sub
loopne
leave
jl
cltd
push
xor
jle
pop
idivl
je
movb
scas
add
sbb
int3
out
aaa
jecxz
mov
and
out
cmp
pop
nop
js
jbe
jnp
push
add
lock
cmpsb
xchg
aaa
test
repz
aad
into
aad
ss
cltd
scas
pop
arpl
mov
insb
mov
fcmovnu
test
adc
fdivrl
movsl
outsb
popa
mov
lret
ja
or
fdiv
jne
sbb
cmp
push
imul
push
std
pushf
in
loope
imul
es
fstpt
cwtl
cmp
mov
in
pop
adcb
rcll
sub
fnstsw
das
sbb
push
movsl
cmp
dec
cld
mov
in
lret
lcall
das
jle
pop
adc
add
loope
aam
aam
jne
test
lret
cltd
sbb
mov
popf
cs
sar
shr
jle
aaa
aas
add
mov
cmpsb
and
fcmovnb
lea
mov
adc
mov
lock
push
sbb
jp
std
pop
mov
repz
jge
and
leave
jae
out
in
adc
jg
incb
in
sti
mov
inc
jmp
repz
in
sbb
nop
cmp
adc
dec
enter
jb
add
shll
into
fldl2t
inc
and
aaa
xchg
push
outsb
imul
pop
jae
cmp
ljmp
out
pop
dec
les
jl
inc
inc
mov
daa
add
cwtl
ret
cld
pop
dec
push
cmpsb
stc
aaa
fnstsw
mov
xor
mov
add
mov
je
out
mov
push
sti
arpl
mov
scas
xchg
enter
jp
stos
jnp
sbb
jg
rolb
pushf
sub
popf
lods
or
dec
int3
jb
push
pop
and
out
movsl
imul
je
add
sub
add
icebp
add
xchg
cmp
adc
cmp
aaa
push
xchg
add
out
mov
mov
adc
pop
popf
std
mov
jp
jne
test
insb
out
scas
mov
cmp
scas
out
movsl
aaa
jnp
or
bound
imul
pop
or
jb
aaa
jmp
xchg
sbb
sub
out
dec
mov
loope
inc
xchg
push
cmp
jmp
test
lods
and
in
inc
push
and
movl
cmc
pop
jne
push
mov
dec
aam
sub
dec
mov
adc
xchg
orb
sahf
das
cmp
jmp
cmp
sbb
lods
notb
in
arpl
mulb
add
je
test
stos
inc
inc
push
insb
push
sbb
in
pushl
dec
ret
mov
push
add
mov
aam
das
xchg
cmpsb
jnp
adc
jmp
add
xor
out
push
ficomps
subb
xchg
cmp
into
outsl
jecxz
mov
dec
fstpl
push
add
shlb
push
in
out
sahf
aaa
push
sbb
xchg
cmpb
or
cltd
movsb
jp
cmc
pop
sbb
push
sti
mov
jo
lret
int3
ss
sub
scas
leave
mov
or
jg
je
pop
sbb
mov
xor
push
lock
mov
adc
xor
mov
lcall
and
push
fcmovb
insb
mov
xchg
aaa
ja
jb
jo
arpl
and
fistpl
aam
adc
leave
push
add
adc
push
dec
adc
ljmp
xchg
out
add
aaa
test
inc
cwtl
icebp
mov
js
cmp
mov
jno
nopl
push
fistps
icebp
jmp
sub
rcll
cmp
jl
sbb
iret
aaa
arpl
es
adc
stos
dec
js
aaa
inc
mov
sti
or
mov
xchg
stos
sub
popf
mov
sub
bound
lahf
sub
icebp
lods
pop
mov
jno
xchg
push
in
push
popa
xchg
and
lock
cli
push
jg
std
mov
pop
cmpsl
sub
sbb
adc
xchg
adc
dec
cli
ljmp
adc
out
cmp
inc
add
dec
mov
mov
out
sbb
fbstp
leave
mov
adc
jl
pop
pop
das
sbb
movsl
je
scas
cmp
fisubl
lea
call
mov
fcomps
dec
mov
out
in
pop
push
sahf
aam
mov
test
loopne
adc
fcompl
mov
cmp
inc
pop
in
lock
loope
lea
jbe
or
dec
jge
pop
test
push
xor
add
xor
stos
pop
ret
inc
xchg
and
and
les
ja
adc
mov
cmp
and
push
filds
pop
cmpsb
in
js
imul
cmpsl
jb
sarl
pushf
ljmp
ja
push
dec
mov
pop
lahf
xchg
movsl
ja
jle
xor
aaa
les
inc
dec
cmp
jbe
lret
fisubl
rorb
sub
sbb
imul
mov
pop
mov
add
push
cli
mov
sar
and
mov
dec
fdivrs
int3
setle
inc
push
jg
in
xchg
push
mov
std
insb
mov
jp
xchg
xrelease
push
jb,pn
aaa
enter
shl
mov
into
jecxz
or
popf
aaa
fdiv
and
xor
mov
dec
dec
inc
push
ss
push
xchg
adc
pop
jmp
sbb
sub
mov
sbb
push
sub
mov
add
rol
lret
inc
icebp
movsl
loop
int3
push
mov
push
das
push
pop
jge
xor
in
notb
or
cmp
pop
push
add
fsubrs
in
xor
lea
push
in
xchg
pop
addb
lock
sahf
mov
outsl
call
loopne
test
ss
lcall
dec
pop
pop
adc
mov
pop
add
loope
inc
insb
in
aaa
out
out
aas
inc
dec
fcoms
test
shrl
loop
out
repnz
sbb
out
jl
add
mov
aas
add
dec
ljmp
jae
mov
cmc
pop
cmp
sbb
mov
push
mov
out
jmp
inc
out
out
sbb
lea
mov
push
add
lea
int3
pop
cmp
sbb
in
cmp
out
inc
popa
ljmp
jne
in
fsubrs
lcall
cmp
and
enter
mov
xchg
cmp
adc
jg
aam
pop
mov
adc
idivb
sbb
mov
jle
addr16
push
pop
adcl
pop
xor
adc
mov
nop
mov
scas
jge
adc
aad
pop
stos
enter
or
imul
std
add
ss
in
sub
dec
ss
mov
ss
jl
loope
add
test
jne
mov
mov
sub
lahf
add
mov
popa
lock
in
imul
jmp
xchg
xor
mov
or
inc
mov
loop
pop
pop
imul
lret
pusha
or
bound
int
std
cltd
repz
cwtl
js
jne
mov
je
xchg
inc
jp
aaa
add
arpl
test
icebp
push
mov
sbb
movsl
std
into
cmp
and
push
sbb
jg
adc
or
or
loopne
arpl
lea
movsl
sub
xchg
lock
mov
data16
notl
loope
xchg
movb
inc
inc
jge
loope
pop
cli
mov
arpl
xchg
fbld
jo
xchg
mov
or
js
adc
dec
adcb
jle
pop
arpl
xchg
inc
popa
xor
jge
inc
mov
pop
movsl
mov
test
inc
cmc
jo
mov
les
xchg
adc
js
aaa
cli
iret
cli
popf
bound
and
xchg
mov
arpl
jbe
sbb
cmp
pop
push
sbb
out
leave
insb
mov
lret
mov
dec
mov
fs
lahf
out
push
lea
xorb
cmp
lret
mov
inc
daa
ss
cmp
xchg
je
xchg
cld
pop
outsl
and
xchg
in
jno
dec
lea
sub
and
sub
mov
es
aam
ret
into
mov
mov
pushf
sbb
ret
insb
out
pop
loopne
sarl
push
mov
fstl
xor
dec
and
rcr
test
adc
push
rcll
add
pop
icebp
cmp
outsb
mov
mov
dec
psubsw
gs
push
pop
out
xor
adc
jge
ret
push
or
stos
enter
adc
pop
sbb
push
mov
imul
cmpsb
mov
sub
pop
push
push
push
adc
lds
sub
inc
lock
dec
mov
adc
imul
add
nop
insb
sbb
ds
cmp
sbbb
ret
nop
jge
lret
jecxz
add
cmpsl
data16
sahf
ds
lret
pop
adc
aaa
cltd
cmc
jl
mov
pop
mov
or
push
shlb
stos
fldenv
pop
enter
jmp
sbb
dec
fdivp
in
repnz
ret
lds
dec
std
push
mov
pop
in
shlb
jle
les
dec
stos
xchg
xor
sarl
test
mov
pop
sbb
mov
adc
sarb
mov
mov
lods
lods
bound
push
insb
sub
xchg
mov
sub
je
sti
xchg
push
fsubl
hlt
in
mov
inc
aas
pop
mov
xchg
xor
dec
pop
mov
loopne
lret
jne
shlb
std
xchg
es
sbb
iret
jl
fadds
xor
sbb
xor
divb
les
loope
icebp
inc
sahf
movsb
cltd
sti
xor
iret
jecxz
dec
jmp
jmp
push
xor
mov
cltd
jmp
add
jge
push
push
adc
jb
mov
inc
jle
jg
mov
inc
push
repnz
jno
fucom
adc
mov
aaa
aas
fsubrl
and
sbb
lahf
loope
sub
push
mov
nop
mov
std
adc
dec
mov
leave
sub
nop
mov
cld
mov
sti
xor
lcall
pushf
push
rcl
cmp
sub
call
not
xchg
push
js
and
mov
les
popf
rcll
into
add
movsl
test
push
jl
fiadds
mov
dec
xor
jmp
pop
pop
mov
mov
jmp
xchg
inc
and
cmp
pop
mov
cltd
mov
add
mov
ljmp
sbb
push
gs
aaa
cmp
icebp
outsb
nop
mov
outsb
outsl
inc
fisubrs
push
lret
icebp
dec
pop
xor
and
jno
movsb
push
lea
xor
mov
push
mov
das
ss
push
push
mov
cmc
sti
xchg
jne
xchg
std
in
js
pop
movsb
in
out
or
sbb
add
loopne
cmp
and
jl
jmp
sbb
sub
push
mov
cmc
insb
dec
mov
iret
cwtl
push
lcall
les
dec
ffree
bound
lcall
ja
jae
mov
and
flds
fisttpl
sbb
jp
stos
mov
adcl
mov
sub
push
jns
cmpsb
xchg
push
adc
cwtl
lds
mov
pop
inc
popf
fs
mov
test
fisttpl
into
inc
icebp
jno
mov
dec
popf
loope
test
pop
or
faddl
ror
sub
xchg
cmp
push
and
cmp
ret
cwtl
sbb
push
enter
adc
xchg
push
push
mov
outsl
into
and
or
pop
mov
push
push
dec
je,pn
xor
fistpll
sbb
pop
push
test
xchg
test
jle
je
add
bound
js
ss
dec
or
scas
inc
inc
push
cmp
les
cltd
loope
ds
testl
lret
scas
dec
dec
clc
inc
jle
test
cmp
jnp
out
inc
xchg
mov
mov
lea
jnp
inc
adc
lock
pop
jns
das
xor
shll
xlat
adc
cmp
fisubs
inc
sbb
xchg
aaa
sub
push
out
dec
pop
aam
mov
sahf
cmp
outsb
repz
push
xchg
loope
pop
iret
lret
mov
stos
cwtl
and
add
outsb
dec
icebp
pop
popa
aad
and
push
cmp
aaa
mov
lea
cs
push
sbb
loope
shl
push
sbbl
fistps
lahf
enter
jecxz
xchg
daa
jnp
and
mov
jmp
scas
or
jmp
mov
loop
sarb
das
or
sbbb
mov
pop
dec
lea
jmp
cmpl
fldt
lahf
je
jmp
pop
sbb
test
pop
push
adc
test
cmp
or
out
or
xchg
and
push
lret
mov
test
inc
and
mov
push
push
out
dec
out
xor
inc
inc
cld
xor
sar
sbb
lahf
or
aaa
jecxz
lahf
ss
cwtl
fldl
cmp
mov
mov
icebp
fs
aaa
cwtl
les
ss
inc
pop
in
dec
loope
pop
test
cmpsl
popf
mov
pop
or
lret
pop
jle
mov
stos
iret
mov
jmp
je
repz
sub
jl
aaa
cltd
scas
jb
pop
addr16
push
insl
or
js
ret
clc
pop
and
outsl
mov
pop
aas
xor
fstps
push
mov
movsl
or
inc
xchg
ret
cld
mov
stos
sti
mov
add
mov
xchg
and
adcl
xor
inc
pushf
cmp
ljmp
sbb
inc
aam
pop
mov
pop
jnp
and
outsb
mov
aaa
pushf
lds
stos
push
pop
xchg
pop
orb
stos
dec
sub
ret
std
xchg
cmpsb
jmp
test
xchg
or
push
or
rorl
push
sbb
popa
mov
js
ret
jp
push
les
sub
add
aaa
int3
cs
mov
pop
in
leave
push
push
test
cmp
mov
repz
jno
js
aaa
inc
jns
jbe
pop
loope
or
std
sbb
mov
jbe
pop
sbb
mov
loop
and
ror
xor
or
pushf
loope
mov
mov
mov
xor
lahf
fstps
in
or
xchg
push
sbb
scas
loop
pop
mov
inc
and
and
or
fcomi
xor
pop
mov
enter
mov
sbb
pop
pop
ficoms
pop
insl
test
pop
and
js
pop
std
pop
pop
add
fwait
in
add
jp
in
pusha
push
xor
scas
imul
or
cmpsb
add
jge
imul
jle
dec
mov
arpl
fnstsw
aas
cmp
pusha
mov
test
pop
sub
pop
ss
add
inc
inc
cmc
cmpsb
jg
gs
lds
ficomps
cmp
lods
mov
sub
ljmp
lcall
add
pop
pop
icebp
mov
add
shl
pop
sbb
out
lret
add
jmp
cli
mov
pop
popf
xchg
jno
jle
je
lods
add
mov
push
aaa
and
sbb
jg
lcall
sti
out
or
mov
hlt
lcall
sub
stc
mov
push
js
in
fmuls
mov
mov
xor
mov
xor
mov
xchg
cmp
xchg
shll
inc
cmp
jmp
jo
sub
loope
out
jne
add
insb
push
dec
add
popf
int
xchg
or
adc
and
lahf
rorb
jne
inc
inc
sarb
mov
cmp
test
popa
lods
mov
sub
aaa
push
jo
push
push
pop
call
es
pop
inc
test
pop
xor
imul
xor
aam
mov
add
xchg
loope
in
or
push
cmp
ja
mov
call
es
mov
ret
mov
dec
test
in
xchg
mov
sub
or
mov
fs
shrl
loope
clc
ret
lods
std
push
add
pop
or
in
mov
and
sbb
inc
cwtl
sbb
sbb
add
in
lods
stos
pop
repz
imul
pop
aam
stos
lret
loopne
lea
sbb
stos
fldenv
pop
in
outsl
in
xchg
int
ds
mov
jae
push
mov
jp
ret
mov
push
and
xchg
pop
push
mov
leave
scas
jne
push
stos
push
dec
dec
xchg
inc
stos
cmpsb
add
dec
imul
inc
push
aaa
and
cmp
sbb
orl
push
mov
and
push
pop
cmpb
xor
cmp
dec
dec
jno
jo
adc
or
fwait
cmp
bnd
sub
cwtl
loop
shll
adc
icebp
jo
lods
sbb
pop
or
in
sbb
xchg
cs
add
inc
lds
adc
xchg
scas
mov
sbb
test
addr16
adc
fsubp
sub
cld
sbb
xlat
xchg
dec
je
mov
jp
icebp
sti
mov
enter
cmp
pop
mov
mov
fidivs
fisubrl
mov
xchg
daa
test
dec
jns
repz
inc
ret
xchg
pop
xchg
inc
aaa
test
popa
and
orb
pop
out
mov
xchg
adc
jp
in
jmp
cmp
scas
sbb
push
jle
outsb
mov
fiadds
push
shll
sub
add
add
addb
inc
jnp
out
fistpl
in
or
cld
cmp
dec
mov
test
repz
pop
in
or
jb
pop
inc
das
idiv
js
leave
inc
lods
dec
cmp
adc
rcrb
adc
outsb
pop
ret
gs
mov
inc
sbb
es
dec
scas
pop
movsl
cmp
cltd
push
mov
pop
pop
cld
lret
xchg
push
inc
icebp
pop
negl
adc
sub
in
and
outsb
dec
xor
popf
push
nop
shll
dec
test
pop
mov
lahf
ficoml
xchg
test
repnz
lds
and
add
mull
sub
sti
lret
mov
and
mov
pop
sub
fsubrs
mov
pop
fistps
push
mov
add
cmp
les
lods
ja
mov
es
outsb
sbb
cs
cmpsl
clc
xorb
test
repz
inc
bound
cmp
jns
sbb
xchg
cmpsl
xor
outsb
ret
push
pop
xor
inc
push
mov
jmp
push
xor
ret
mov
mov
jno
jbe
popa
divl
loop
mov
shl
jbe
scas
cmpsb
imul
in
lock
je
push
dec
jb
mov
in
aam
and
cmp
int3
clc
add
jecxz
inc
adc
push
das
sbb
aaa
and
incb
test
je
cmp
ret
push
dec
mov
in
stos
outsl
sub
push
xor
std
add
cmpsl
mov
ficomps
test
jbe
hlt
dec
icebp
sbb
or
imul
fstpl
daa
pop
sbb
cmpsb
cmc
stc
aaa
push
cmp
dec
and
or
lock
inc
lods
xchg
jns
lret
imul
das
cld
outsl
and
pop
adc
ss
pmuludq
jge
jb
mov
loope
pop
pop
xor
jmp
mov
ss
clc
in
mov
ret
mov
sub
jmp
loope
jmp
shll
pop
mov
out
sbb
sti
dec
pop
loope
sub
jle
sub
out
inc
outsl
or
bound
xchg
sbb
sbb
sub
fwait
iret
cmp
mov
xchg
fmuls
mov
repz
xlat
movsb
dec
fdivr
scas
push
loope
icebp
jo
into
or
xrelease
in
sbb
insb
rcrb
push
cmp
push
lret
test
jge
shr
pop
or
lret
xchg
mull
pop
scas
stos
lret
int
mov
out
adc
lret
mov
pop
ja
and
mov
xor
xchg
push
and
jae
fidivs
fnstsw
lcall
add
movsl
inc
cmpsb
cmp
gs
xchg
sbb
pop
dec
pop
xlat
ss
sbb
enter
rcll
add
lea
aaa
lcall
inc
pop
sti
mov
mov
inc
adc
scas
incb
ret
sub
inc
pusha
mov
push
repnz
shl
test
xor
negl
in
adc
sbb
dec
inc
and
imul
cmpsl
sbb
or
jb
fs
mov
push
ret
mov
je
sbb
mov
xchg
pushf
das
add
adc
out
mov
cmp
outsb
xor
sub
fisttps
shrl
not
xor
dec
lahf
mov
jno
orb
fsub
jae
cli
jecxz
nop
jbe
lock
flds
aas
push
mov
repnz
in
cmp
jbe
push
mov
inc
sub
and
mov
dec
mov
pusha
ret
scas
mov
int3
outsl
push
in
aas
push
push
xchg
sahf
add
pop
sbb
mov
jmp
mov
ret
test
cmp
jecxz
call
mov
jno
cmc
cmp
cli
cmpsl
loope
cmp
mov
jae
shr
or
in
scas
test
push
loop
lock
pop
inc
push
xchg
sbb
xchg
jecxz
movsl
add
xchg
arpl
scas
lret
aaa
fstp
pop
ficoms
and
fucom
insb
test
movsb
cmp
call
mov
push
add
add
ss
dec
push
movsb
sbb
clc
outsl
sbb
mov
je
xchg
mov
and
sti
incl
pop
jbe
sub
mov
frstpm(287
subb
in
sti
inc
shll
sub
rclw
push
jbe
loope
mov
xchg
imul
stos
or
adcl
lea
xor
jle
mov
mov
outsb
les
scas
push
stc
xor
mov
mov
push
inc
lret
adc
loope
add
cmp
outsb
stc
jne
insb
orb
and
dec
mov
jge
jge
or
dec
mov
jne
sbb
pop
rolb
pop
dec
aas
ljmp
pop
jge
sub
sub
in
dec
popa
and
jae
mov
fs
cmc
xor
stc
in
hlt
jo
lea
inc
sahf
cld
add
and
lods
dec
mov
mov
mov
pop
stos
adc
stos
adc
ret
push
imulb
push
push
mov
cmc
int
cld
sbb
sub
sbb
scas
mov
fwait
sub
outsl
jno
mov
addr16
nop
loop
pop
mov
lea
shrb
data16
xor
imul
cltd
mov
lods
das
cmp
inc
sbb
addr16
fcomi
fsubrs
out
jb
lods
jg
scas
sbb
or
cli
adc
xchg
pop
push
cli
pop
cli
inc
inc
mov
xor
mov
mov
adc
aam
jno
and
lret
cmp
and
cmp
pusha
push
jle
add
into
repz
mov
cmp
iret
xchg
scas
fsubl
sbb
jge
pusha
sbb
pop
fildll
xchg
bound
mov
inc
xlat
mov
fimuls
fisttpll
jns
jl
cwtl
add
insl
ss
pusha
push
mov
out
sub
xor
scas
shl
jae
pop
mov
and
nop
mov
loop
leave
out
in
mov
bnd
or
mov
xor
icebp
rcll
inc
xchg
xchg
xor
dec
leave
xchg
out
jl
lcall
mov
sub
out
sbb
push
sbb
mov
dec
jne
jbe
insb
sub
inc
fs
xor
push
inc
scas
cmp
pop
lahf
push
or
jl
int3
in
movsb
into
lods
ss
mov
inc
aaa
jns
pop
sti
ret
pop
in
mov
push
or
fistps
push
dec
je
pop
cld
ss
inc
pop
das
adc
dec
xor
dec
xchg
cmp
xchg
stos
sti
mov
hlt
push
outsb
xor
call
cld
repnz
add
jno
outsb
nop
notb
repnz
jb
sti
faddl
clc
in
sbb
test
lahf
movsb
inc
mov
cmp
jl
scas
push
andl
arpl
ja
sub
fnsave
addl
inc
push
xor
xor
aad
or
cmpsl
xchg
es
dec
shrl
push
test
push
pop
xchg
xchg
repz
sub
pop
xchg
jp
scas
shr
in
sbb
push
or
push
cmp
stos
mov
jo
pop
inc
sub
pop
xchg
ss
or
jne
inc
icebp
out
xchg
inc
jmp
sahf
mov
xchg
negb
mov
inc
test
cld
gs
imul
adc
je
cmpsb
repz
xchg
cld
push
ret
jg
push
rcrl
arpl
jns
stc
adc
mov
adc
sub
dec
movsb
les
into
add
jle
into
adcb
sub
cmp
test
pop
mov
ljmp
push
lods
add
adc
jne
pop
add
adc
pop
rclb
mov
loopne
fidivs
loope
xlat
aaa
adc
and
loope
and
ror
out
aaa
inc
inc
pop
adc
sbb
inc
xor
push
xchg
cltd
into
sub
aas
pushf
bound
int
gs
pop
fwait
aaa
outsb
jns
jmp
xchg
loopne
sarb
in
inc
jbe
jnp
and
or
cmp
fsubrl
lock
jp
mov
inc
sti
cmp
cmpsb
mov
xor
xchg
cmp
jbe
push
add
test
and
stos
pop
montmul
cmpsb
add
sbb
sahf
rorl
test
inc
mov
fcoms
pop
movsl
fsubr
repnz
sahf
stos
cmp
dec
sbb
bound
dec
dec
pop
add
jecxz
aam
mov
mov
xchg
push
push
push
mov
pop
cltd
loopne
sbb
shlb
jne
ss
sbb
insb
shlb
jb
fstps
pop
gs
aas
insb
mov
jno
lcall
stc
jle
imul
sbb
insl
lds
sbbl
arpl
es
add
adc
or
inc
dec
jnp
arpl
lret
jbe
ds
dec
and
outsl
inc
aam
mov
gs
pop
aaa
inc
out
xor
sbb
pop
int
loop
add
rcrl
mov
sahf
xchg
sbbl
dec
push
out
fistl
cmp
push
jle
mov
sub
cmp
fsubp
leave
and
js
out
daa
cmp
xor
cmp
loopne
xchg
mov
int
hlt
sub
bound
xchg
add
fucom
call
pop
push
add
out
dec
push
call
push
xorl
add
fistpl
cmpsb
pop
pop
pop
sbb
loopne
cmp
and
fcmovne
xlat
outsb
sti
mov
lea
rclb
js
mov
fimull
mov
xor
lret
testb
icebp
xchg
jp
bound
scas
ss
push
lods
sub
xor
addl
sahf
hlt
push
pop
les
push
mov
sar
aaa
sarl
xor
jo
pop
ss
scas
stc
in
xchg
pop
inc
jb
sub
xchg
dec
loopne
jmp
mov
sbb
adc
add
rcrb
sbb
push
lcall
mov
outsb
popf
in
xchg
clc
dec
pop
jnp
pop
aaa
xchg
fwait
out
jne
add
in
cmp
stc
add
xchg
pop
xor
pusha
xor
sbb
mov
pop
inc
lret
fwait
inc
inc
into
aaa
insl
sahf
mov
pop
je
mov
push
jne
test
int3
or
jle
pop
scas
mov
enter
pop
fistl
sub
mov
xchg
mov
orb
mov
stos
adc
hlt
mov
ret
inc
mov
ss
push
sbb
pop
insl
pop
out
jae
xchg
mov
outsl
push
into
scas
pop
in
mov
and
pop
dec
enter
mov
fsubrl
sbb
inc
mov
and
stc
mov
add
mov
adc
jno
data16
xchg
cld
mov
add
shll
push
daa
push
jb
dec
repz
ficoms
xchg
ss
lcall
aad
shll
shr
out
in
aam
fmul
sbb
jo
sub
lcall
hlt
pop
popa
ds
jecxz
pop
mov
add
push
cmpl
add
add
lcall
mov
data16
jmp
aas
push
in
daa
sti
mov
adcb
fists
push
daa
mov
pusha
pop
mov
jbe
mov
add
cmp
add
sbb
dec
mov
adc
popa
fcompl
dec
push
sub
shll
adc
inc
mov
or
jmp
insl
sbb
imul
pop
ret
pop
aaa
ret
mov
jns
xchg
mov
xchg
je
mov
mov
inc
lcall
inc
xchg
add
sti
call
lahf
pushf
outsb
sbb
mov
in
xor
mov
popl
out
stos
push
adc
fbstp
sahf
outsl
das
pusha
push
cmp
jno
dec
xchg
roll
dec
lods
and
cmp
loopne
mov
sti
mov
in
out
jle
and
mov
push
popa
test
fdivrl
out
inc
std
jle
push
int3
xchg
dec
aaa
sti
jae
fcom
sbb
orb
push
fmulp
insl
out
fisttpl
sub
push
pop
pop
imul
pop
ljmp
and
push
shll
test
push
inc
pop
std
aaa
inc
call
incb
mov
push
sbb
insb
in
cmpsb
sbb
add
xor
jae
lahf
dec
push
lret
rcrb
in
lds
cltd
adc
scas
orb
or
int3
jg
mov
faddp
pop
arpl
inc
orl
mov
out
dec
fistpll
fsubrl
ret
inc
mov
jl
loope
mov
bound
pusha
outsb
popf
sahf
xor
jnp
push
mov
loope
mov
test
jmp
or
lcall
jae
adc
lods
push
mov
call
jle
es
pushf
mov
lds
lea
sub
repz
and
fwait
cmp
ljmp
loope
ss
xchg
xor
inc
in
jmp
cmp
jb
xchg
cld
pusha
in
cmp
xchg
adc
insb
mov
jmp
push
rorl
sbb
xchg
in
pop
aaa
aam
les
jl
shrb
dec
cmp
int3
pop
in
add
xlat
mov
jl
pop
inc
push
inc
pusha
xchg
nop
das
pop
movsl
lods
roll
cmp
popa
pop
test
sbb
pop
sbb
pusha
pop
dec
push
stos
imul
inc
xor
fnsave
sub
pop
dec
cmp
jecxz
add
out
adc
inc
mov
outsl
mov
push
lods
in
cltd
jnp
and
inc
lock
and
mov
xchg
js
out
cld
ss
out
push
cmpsl
or
pop
leave
mov
lret
pop
fs
aad
orb
jl
movsl
fdivrs
in
dec
cmp
pop
sub
ret
repz
cmp
stos
jnp
sbb
je
out
movsl
push
arpl
movsl
xchg
pop
rorb
insb
xor
faddl
test
and
outsb
fwait
aaa
inc
or
into
fistl
loop
nop
insl
ss
jbe
jle
fldt
test
push
adc
in
fistpll
inc
push
push
push
xor
je
xor
jns
in
and
insb
test
dec
int
pop
aam
jl
jo
dec
fwait
cmc
cmp
cmp
xchg
inc
jnp
fwait
sub
sbb
add
data16
addr16
xchg
xor
mov
push
into
mov
mov
addb
mov
inc
mov
xchg
mov
push
shrl
test
sub
push
dec
loope
xor
xor
imul
mov
scas
gs
jecxz
dec
flds
imul
movsb
pop
push
jmp
mov
sti
fnstenv
into
mov
and
stc
fmul
sub
adc
sbb
dec
scas
arpl
sub
ss
cwtl
push
arpl
or
idiv
mov
push
inc
cltd
sub
shrl
pop
fiadds
pop
add
add
inc
js
scas
push
icebp
adcb
pop
rol
xchg
xchg
jmp
mov
cmpsb
loope
pop
jne
dec
stc
sub
aas
pop
mov
push
mov
int3
es
cwtl
sbb
lods
out
mov
adc
stos
cmp
jmp
iret
in
shl
dec
movsl
imul
pusha
mov
pushf
repnz
sti
mov
pop
pop
dec
mov
fisttpll
mov
sbb
int
pop
or
aaa
aad
es
or
imul
adc
cmpsb
ja
daa
hlt
mov
or
outsl
sbb
sub
xor
mov
movsl
and
aas
aam
imul
flds
outsb
jle
aaa
dec
aas
xchg
cmp
xchg
xor
sbb
pop
dec
and
cli
mov
pop
sub
lcall
movsl
nop
andb
inc
aas
arpl
sarb
jle
jnp
out
loope
push
cwtl
add
aas
cld
pop
jecxz
negb
jne
popa
cmp
pop
jge
mov
sub
cmp
mov
mov
roll
in
aad
pop
mov
aaa
gs
fcomp
cmp
ljmp
add
cmp
shll
sbb
in
sub
ret
mov
fstpl
cmp
mov
xlat
cs
fwait
mov
icebp
and
fistpl
jp
call
and
imulb
dec
cli
lret
lock
in
shlb
mov
movsl
jnp
hlt
mov
subb
popf
lea
xchg
aas
cltd
dec
ds
cmp
xchg
push
call
add
lahf
mov
subl
and
push
pop
jge
popf
pop
fnstcw
inc
sbb
arpl
xchg
enter
js
dec
leave
rolb
or
adc
in
cmp
fdivrs
stos
insb
fsts
jmp
mov
xchg
sub
jne
jecxz
jnp
test
ds
jecxz
jl
add
pop
aas
and
inc
leave
add
mov
movsb
in
imul
fucomi
mov
push
mov
insb
push
adc
inc
sti
outsl
jp
push
aad
and
pop
push
and
fstps
and
sbb
inc
lcall
lcall
dec
mov
mov
into
fstpt
loope
xchg
test
or
mov
shrl
inc
mov
xchg
mov
insb
movl
out
mov
and
mov
inc
lds
aad
pop
and
rcrl
adc
pop
xchg
add
dec
cli
je
sti
pop
inc
fistpl
and
mov
sub
xchg
cli
loopne,pn
out
mov
dec
or
movsl
icebp
scas
dec
jecxz
dec
add
pop
rcrl
stos
xchg
ss
push
jecxz
mov
int3
pop
cmp
imul
imul
leave
outsb
pop
xchg
lods
jge
aam
iret
or
frstpm(287
cmpsb
fcmovnu
bound
add
sbb
mov
or
jp
inc
aad
sbb
pop
aam
ficoms
mov
insl
fisttps
fisubl
xchg
in
xor
pop
popa
sub
jp
rclb
fst
cmpsl
sbb
inc
mov
nop
cmp
es
dec
xchg
dec
sahf
jne
sub
loopne
jge
inc
mov
fcmovne
xchg
push
sbb
sbb
adc
and
outsb
test
into
adc
cli
shll
push
pop
push
adc
pop
inc
nop
rcrl
mov
lock
psllq
dec
loopne
mov
push
or
xchg
xchg
outsl
call
mov
push
bound
stos
arpl
xchg
push
cmp
push
or
popf
pop
or
sub
repz
fsubr
or
in
lret
adc
adc
sbb
dec
pop
push
or
cmp
add
aam
psubsb
or
add
cld
mov
jb
test
aaa
dec
stos
fistps
ret
push
fs
test
pusha
cmp
arpl
cmp
xchg
adc
imul
and
frstor
xorb
in
int3
jle
and
or
push
pop
ja
dec
mov
sar
xchg
cmp
mov
cli
pop
xchg
mov
or
push
arpl
and
mov
pop
pop
bound
inc
sub
or
dec
daa
add
add
std
sbb
xor
pop
push
fsts
sub
test
xor
addr16
ss
jno
jno
push
mov
add
jl
bound
dec
pushf
inc
frstor
iret
imul
pushf
sbb
dec
das
adc
xlat
sub
sub
popa
sbb
or
adc
fwait
outsb
sti
aaa
pop
iret
push
sbb
cmp
fs
mov
fs
pushf
shl
xor
xor
jle
mov
ss
les
mov
mov
xor
and
or
mov
cwtl
push
dec
adc
ss
jae
pushf
jns
imul
idivl
dec
fnstenv
pop
js
adc
cmp
fnstcw
add
mov
fidivrs
popa
or
mov
inc
loope
pop
jle
mov
mov
cmp
pop
inc
test
lcall
and
adc
and
and
pop
jle
fwait
or
pop
loope
les
pop
mov
cmpsb
sub
fnstenv
mov
lret
jno
outsb
scas
push
negb
cmpsl
in
mov
repz
popf
and
pop
sarl
mov
clc
jmp
repz
loopne
in
cltd
cld
stos
aam
pop
aas
lds
aas
les
clc
jmp
nop
push
jp
mov
lcall
push
xor
jg
mov
mov
cmp
test
xor
xchg
icebp
mov
mov
ljmp
jae
pop
xchg
shlb
int
repz
push
inc
icebp
cmp
sub
push
decb
lods
add
fs
push
aad
outsb
push
lahf
cmpl
hlt
jecxz
mov
jo
sub
ret
loope
and
push
inc
or
sbb
sbb
pop
fnstenv
cmc
mov
int3
and
mov
imul
sub
or
sub
cmp
mov
sub
jle
pop
add
dec
xor
xlat
jle
scas
call
in
or
inc
outsb
xor
gs
push
icebp
xorb
inc
adc
pop
lds
adc
test
fdivs
push
xchg
pop
lret
inc
mov
popf
dec
mov
adc
xchg
lahf
push
mov
rcr
test
fisubs
sub
pop
pusha
std
pushf
pop
adc
stos
rolb
pusha
daa
jle
xor
mov
mov
xchg
mov
mov
or
push
mov
cmp
icebp
imul
testl
and
mull
mov
lods
mov
pop
jb
mov
add
sbb
sbb
or
xchg
aaa
fcoml
xlat
push
push
in
scas
cmp
pop
sahf
cli
pop
push
pop
sub
loopne
fwait
shll
pop
push
jg
dec
je
aad
fwait
mov
das
pusha
mov
or
fdivs
ja
repnz
inc
pop
mov
mov
lods
mov
fstpl
dec
outsl
js
cmp
stos
xorl
xchg
dec
mov
inc
nop
fmuls
cmp
mov
xchg
push
ds
push
cmpsb
sbb
enter
and
jl
xor
mov
dec
xor
fnstcw
inc
jp
cmp
push
in
movl
aad
pop
pop
lahf
sti
push
dec
icebp
cmpb
lods
fsubrl
aam
sub
mov
add
pop
aaa
mov
loopne
mov
ljmp
icebp
mov
fucomip
push
adc
jo
mov
loop
xchg
aam
push
sbb
add
mov
add
add
arpl
inc
lahf
stos
je,pt
push
lret
inc
inc
pop
cwtl
je
sarl
jle
pop
push
and
push
bound
lods
xchg
pop
das
inc
fdivrs
push
inc
or
jne
fstpl
rorl
movsb
jno
push
cltd
imul
push
into
test
fildl
push
pop
pop
inc
cmpb
xor
test
push
std
test
rcll
mov
movsl
sub
dec
pop
inc
fistpll
mov
jp
popa
arpl
jl
loopne
mov
jo
mov
mov
adc
mov
call
arpl
sti
das
inc
sahf
iret
inc
mov
lea
mov
enter
shrl
lret
mov
out
and
cmp
ret
lret
dec
insb
pop
adc
lret
ja
cmpsl
lret
jmp
adc
int
pop
inc
nop
cmp
mov
sbbb
jle
or
sahf
mov
xchg
jmp
cltd
mov
addr16
aad
outsl
fst
jle
enter
adc
jo
aaa
out
mov
imul
jmp
jo
sti
pop
add
add
lea
lods
call
cmp
cmp
pop
aam
pop
inc
sbb
aad
lea
aad
js
pop
leave
cli
test
pop
lret
xor
iret
inc
jb
pop
sub
and
and
mov
xchg
int
sbb
les
pop
or
ret
adc
pushl
or
add
call
push
jp
imul
or
xchg
jge
popa
ss
movsl
bound
inc
scas
push
add
cmp
aaa
sub
cmp
fldt
jb
movsl
lock
jmp
adc
in
pop
xchg
or
xor
pusha
or
loop
aaa
mov
push
fldl
or
pop
test
xchg
jl
arpl
fcomps
add
xchg
arpl
push
jnp
call
push
imul
mov
push
sub
or
pushf
rorb
or
jle
jp
xchg
fwait
lods
loop
loop
jle
mov
cmp
xchg
jg
jbe
or
add
jns
adcl
stc
in
xchg
push
lds
mov
xchg
orl
lret
push
jl
ret
mov
dec
outsb
std
scas
aaa
out
outsb
jns
loope
inc
scas
push
jl
in
sbb
sbb
mov
adc
arpl
add
aaa
inc
jmp
arpl
mov
cmp
cmpsb
popf
xor
aaa
adc
hlt
loop
cs
nop
mov
sbb
rolb
pop
pop
sti
lock
mov
cmp
mov
mov
lds
pop
out
dec
scas
loope
movsl
aaa
xor
fbld
jno
arpl
push
dec
xchg
sbb
dec
or
xchg
jmp
repz
mov
in
int3
add
test
pop
cltd
rolb
test
aas
aaa
mov
jge
cmp
jne
and
adc
les
lock
dec
test
mov
cmp
out
jbe
in
scas
jg
sahf
dec
sub
jo
jo
inc
mov
pop
clc
pop
mov
jno
out
das
mov
push
push
mov
push
inc
cmp
jp
in
pop
or
enter
and
cmp
movsb
loope
insl
out
sti
arpl
shll
int3
test
stc
cmp
pushf
ss
add
inc
jle
mov
pop
xchg
cmpsb
push
icebp
jp
jns
nop
dec
out
jne
fnstcw
rorb
fmul
push
sti
aaa
push
mov
cmp
movsb
jne
test
mov
test
in
aam
pop
roll
repnz
out
dec
jbe
pop
cltd
fbld
mov
cli
pushw
aaa
in
add
popf
andb
push
je
pop
repz
pop
mov
mov
or
outsl
jae
in
sbb
outsl
dec
or
pop
out
shrb
out
fs
mov
cmpsb
sub
loopne
xorb
mov
stos
xor
divb
sub
mov
pop
mov
lods
mov
enter
scas
cmp
xchg
out
and
sbb
notb
xchg
jns
jmp
out
in
negb
cmp
dec
daa
fbstp
in
inc
and
jne
fcmove
jne
sbb
mov
scas
arpl
mov
popa
adc
lret
xchg
insl
cmp
sub
mov
xchg
aaa
aad
push
nop
and
pop
aas
sub
mov
pop
jnp
rolb
pop
out
imul
mov
push
fmull
negb
fcmovnb
test
xor
add
shlb
in
jle
fildl
jecxz
imul
cmp
jno
lods
sbb
in
mov
add
fbstp
mov
rcrb
mov
cld
dec
sarb
sub
popa
inc
dec
sbb
ja
scas
mov
or
sub
pop
test
movsl
adc
xor
test
sbb
mov
fsts
mov
xor
sub
mov
aaa
leave
jecxz
mov
fs
ja
push
pop
sbb
insb
repz
ret
jne
aam
dec
pop
icebp
sub
sbb
addb
mov
jbe
ljmp
fistps
pop
dec
nop
xchg
pop
dec
mov
cmp
and
rcrl
mov
outsl
cmp
cmp
cmpsl
fistpll
test
xchg
into
sub
cmp
push
cmp
cmp
push
aam
imul
cs
daa
sti
dec
jle
insb
jmp
inc
mov
fucomip
pop
xor
inc
add
je
inc
sbb
aam
das
insl
pusha
inc
jae
mov
insb
xor
dec
fistpl
cld
movsl
dec
xor
fwait
mov
mov
fistpll
xchg
xchg
scas
ret
fildl
sbb
adc
xor
mov
mov
loope
out
sub
movsb
mov
push
fidivs
js
sar
mov
sub
mov
aas
daa
pop
repnz
or
loope
in
aaa
cld
adc
movsb
push
pop
push
xchg
cmp
push
outsl
pop
add
pop
js
cmp
adc
fiaddl
add
inc
call
sbb
aaa
pop
and
pop
mov
ss
lahf
out
xchg
stc
dec
mov
shld
inc
mov
andb
outsb
stc
lret
pop
shlb
fists
pushf
je
loope
lods
adc
clc
bound
pop
mov
aad
test
notl
outsb
aaa
shll
mov
popf
scas
mov
popf
and
and
comiss
arpl
push
and
mov
movb
aas
mov
add
int3
in
loope
cmc
repz
mov
negl
xchg
pop
ss
add
push
mov
jp
mov
orl
in
cmp
ficomps
push
adc
mov
pop
enter
cld
cmpsl
push
inc
inc
cmp
mov
mov
push
insb
add
push
inc
cld
mov
in
jmp
push
pushf
xlat
jl
data16
cmp
nop
mov
jbe
out
lods
daa
lods
pop
xchg
bound
stos
mov
dec
mov
mov
test
sbb
loop
icebp
ljmp
pop
sub
ss
sbb
ret
sbb
adc
lret
and
jp
aaa
clc
mov
inc
es
pop
pushf
mov
and
icebp
adc
mov
pop
jo
inc
gs
jle
dec
jne
dec
inc
dec
cmp
ds
in
and
jno
inc
test
sbb
ds
test
jle
jg
inc
cmp
fnstcw
push
add
repz
data16
cltd
xor
loop
add
sbb
pop
das
pop
insl
repz
dec
xchg
adc
repnz
loopne
mov
sbb
inc
fsubs
test
xchg
insl
sub
xlat
test
push
pop
jnp
in
sbb
outsl
sbb
inc
es
movsl
jge
pop
arpl
das
pop
stos
pop
pusha
xchg
in
pusha
add
out
dec
mov
cmp
daa
jae
pop
mov
sub
jle
sbb
outsb
push
mov
stos
cmp
addr16
inc
lahf
in
mov
movsb
insl
fistps
add
mov
int
mov
aas
loopne
jp
adcl
das
pushf
ja
jbe
in
pusha
mov
ljmp
and
lahf
jnp
mov
mov
push
add
jl
fldenv
enter
insb
sub
adc
jg
test
jle
int
dec
popf
sti
pop
push
add
int
jp
inc
jne
pop
xchg
push
dec
sbb
sub
inc
enter
enter
and
cmpsl
pop
mov
inc
ror
icebp
cmp
cltd
pop
cmc
cmpb
ret
aad
in
push
fldl
mov
pushf
es
rorb
inc
inc
outsb
popa
enter
sarl
cmp
cli
mov
mov
loope
bound
jnp
popa
pop
jno
sahf
xchg
test
pushl
mov
mov
xor
jmp
inc
push
push
iret
ficomps
mov
aaa
fwait
mov
push
pop
xchg
testl
ss
add
adc
jmp
stos
imul
shll
mov
fadds
or
popa
and
pop
sub
push
mov
pop
mov
dec
pop
mov
jb
push
xchg
fsubl
dec
jmp
mov
addr16
cli
and
dec
jle
cmp
push
jbe
scas
push
pushf
push
jmp
sub
pop
mov
lret
bound
jo
dec
rorl
ss
int
pusha
sbb
cmpsb
fistps
jne
pop
aad
sub
cmpsb
arpl
adc
pushf
call
in
mov
inc
push
lea
fwait
in
movsb
sbb
xchg
and
inc
jno
stos
pop
xchg
sbb
in
test
dec
add
rcrl
jle
mov
dec
icebp
outsb
fisubrl
xor
and
imul
cmp
sbb
xor
jle
add
aaa
jb
cmc
scas
sub
xor
in
pop
mov
sbb
dec
dec
std
sbb
aaa
push
cwtl
xchg
mov
mov
mov
cmp
lcall
jg
xchg
addl
lahf
aaa
xchg
in
sub
jo
mov
dec
inc
and
pusha
or
mov
ret
fisttps
pop
and
jbe
in
adc
das
bound
stos
frndint
push
test
clc
mov
jno
pop
rep
loope
nop
push
cmp
pop
pop
out
mov
ret
test
cld
xchg
push
cmpsb
loopne
sub
icebp
scas
jbe
movsl
or
dec
clc
cmc
sub
adc
or
popa
xchg
sub
push
cmp
fdiv
mov
jmp
inc
mov
jns
shrb
mov
xor
add
outsl
aas
ljmp
out
xlat
add
dec
orl
cmp
xchg
mov
popl
pop
jg
outsb
out
dec
cmp
popf
rorb
cmp
fisttpl
pop
sbb
mov
ljmp
xor
stc
cld
adc
je
ret
aaa
dec
mov
sub
cmp
ret
aaa
push
push
pop
cwtl
mov
test
mov
or
pop
shl
push
sub
addb
in
mov
xchg
or
orb
mov
jbe
or
inc
sub
push
into
or
test
aam
insb
pop
mov
sbb
add
fcmovnu
repz
sbb
and
mov
je
loopne
cmp
je
add
add
rclb
cmp
push
jae
jb
push
aas
lods
imul
repz
xchg
les
adc
fnstsw
roll
or
pusha
jmp
lods
sahf
pop
imul
cwtl
jmp
mov
pushf
lea
and
pop
sub
mov
mov
fsubrs
clc
push
adc
insb
or
shr
aam
dec
test
cmp
adc
addb
ja
mov
add
je
ljmp
cmp
std
int
outsl
sbb
imul
push
icebp
nop
icebp
xchg
mov
mov
js
cmp
out
xlat
jecxz
jmp
push
mov
sub
push
sbb
adc
iret
jns
loopne
int3
dec
and
dec
test
add
xchg
xchg
push
mov
pop
add
stos
outsl
fstpt
lods
dec
xor
jae
aaa
jne
ja
shl
in
cmc
pop
stc
push
mov
jb
cmp
dec
cld
sti
adc
cmpsb
call
xchg
cmp
imul
jle
pop
je
xlat
inc
in
aaa
inc
dec
add
push
mov
insl
out
mov
add
shrl
adc
test
lods
popl
test
jno
sarb
xlat
fbstp
dec
jg
sahf
pop
sbb
in
dec
mov
add
jne
push
jno
call
dec
mov
and
icebp
push
lea
push
mov
insl
xchg
xor
daa
out
test
icebp
daa
jns
aaa
add
push
or
in
mov
xchg
sub
and
loope
movsl
int3
dec
in
ficoms
inc
inc
pop
cs
pop
push
sbb
xchg
dec
addl
es
in
sub
stc
mov
xor
popf
in
fsubl
repnz
mov
fdivl
pop
jo
jo
adc
jp
sbb
test
sub
push
adc
fdivrs
in
es
add
test
mov
aaa
inc
mov
cmpsb
mov
adc
rclb
outsb
into
test
sbb
sub
in
movsl
aas
sub
pusha
push
fdivl
inc
xor
xchg
lret
nop
mov
movsb
push
mov
addr16
add
or
cmp
lods
pop
mov
int3
pop
mov
mov
inc
subb
xchg
pop
push
push
sbb
bound
mov
lods
rcrl
fstl
dec
xchg
popf
insb
and
and
dec
inc
mov
sub
dec
jle
xor
adc
test
dec
xorl
sub
mov
cltd
sbb
orb
jbe
repz
cmp
cmp
pop
cmp
nop
push
insb
iret
xchg
lcall
loopne
jbe
jno
inc
arpl
rolb
cmp
loop
mov
sub
inc
adc
jge
or
push
push
xor
jo
fistpl
mov
lret
out
inc
ret
loop
pop
push
xor
mov
jle
mov
jmp
sbb
inc
mov
dec
jecxz
jl
shlb
xchg
jne
sbb
aam
jno
in
mov
mov
adc
into
ror
sbb
inc
push
jo
rclb
in
cld
cwtl
jg
outsb
fldenv
pop
dec
mov
add
inc
inc
push
or
xchg
sahf
dec
fadds
cwtl
addb
insb
loopne
mov
mov
aam
sahf
mov
scas
scas
out
stos
sub
mov
sbb
pop
mov
push
cmp
in
fistl
fstpt
or
adc
xor
push
push
aas
out
pop
xchg
push
loope
sarl
mov
jle
ret
mov
pop
sub
cmp
jecxz
inc
xchg
push
repz
sub
lock
mov
loopne
test
adc
insb
mov
test
xor
mov
adc
fmull
imul
decb
aaa
and
loope
mov
pop
test
icebp
mov
bound
mov
xor
int
xor
mov
pop
push
outsb
mov
into
roll
in
xor
popa
into
out
out
dec
inc
xchg
jmp
sub
fidivs
sbb
sub
dec
lods
pop
in
jnp
ja
outsb
insl
out
sub
jo
or
and
mov
jmp
lods
movl
xchg
xchg
sub
pop
xchg
out
adc
bound
xchg
jae
sbb
fistl
cs
es
ffree
mov
es
repnz
addl
and
loope
add
adc
loope
jecxz
arpl
cmc
lret
fstpt
stos
fildll
adc
push
outsl
loopne
aaa
xchg
out
sub
pop
lea
xor
sbb
adc
loope
inc
cltd
sbb
fadds
inc
fwait
fs
fstpt
in
adc
inc
mov
mov
clts
daa
sbb
pop
mov
insl
aad
xchg
mov
jl
push
xchg
push
lock
sbb
or
roll
add
or
mov
inc
sarb
bound
lds
pop
subb
stc
shrl
sbb
mov
push
and
pop
rcrb
inc
lods
or
add
out
pop
dec
lret
stos
sbb
and
pop
cli
sub
fmul
aaa
mov
mov
in
test
movb
jg
dec
sbb
lret
fcoml
nop
mov
jns
push
rcr
fdivs
pop
mov
pop
push
aas
ds
push
push
pop
inc
icebp
xchg
daa
push
scas
call
rorl
in
mov
pop
mov
add
jp
ret
xor
sahf
out
lret
into
push
lock
or
das
ss
pop
faddl
push
test
inc
scas
jg
stos
mov
enter
popa
mov
loope
sbb
jp
xchg
mov
xor
sarl
fistps
stos
sub
pop
pop
pop
pop
mov
jbe
add
mov
and
jl
xor
fistps
in
int
lds
dec
sbb
mov
rolb
icebp
and
push
inc
jge
daa
lret
push
dec
loop
mov
add
sbb
leave
les
loope
mov
in
xor
dec
lret
sbb
sti
fnstcw
inc
into
mov
out
mov
mov
popa
movsl
repnz
inc
stos
out
and
jno
push
movsb
ja
add
sub
cmp
fwait
je
xchg
repnz
mov
sub
pop
and
push
testb
xchg
dec
jno
push
pop
in
test
fstps
ljmp
pop
jns
imul
out
sub
dec
cld
stos
loopne
aaa
mov
cld
cmp
mov
and
pop
mov
stc
and
fsubrl
repz
cltd
mov
cwtl
mov
add
push
test
xor
and
ret
sbb
rolb
jo
xchg
mov
push
ret
leave
sbb
xchg
inc
movsl
xor
mov
sarl
fnstcw
iret
inc
aaa
mov
or
insb
mov
and
cltd
dec
mov
or
ss
xchg
sub
fldcw
cltd
andb
and
mov
inc
push
mov
cli
push
sub
sub
out
pop
or
cmpsb
jno
push
pop
xor
aaa
xor
jp
loope
pop
dec
test
jo
sub
push
push
jg
das
fldcw
dec
ss
pop
addr16
jle
and
inc
outsb
pop
mov
mov
sub
cmpb
pop
mov
popa
adc
mov
jo
add
fstpl
cs
push
mov
test
xor
cmp
test
mov
jns
jl
or
lods
subl
aaa
daa
arpl
inc
sub
sbb
mov
or
jmp
mov
sbbb
nop
dec
in
bound
movsl
cmp
and
cmpl
add
inc
xchg
jnp
mov
sbb
fwait
xchg
xchg
mov
cmpsb
sbb
jbe
sbb
xor
fdivr
js
ret
or
fidivs
pop
stos
cwtl
xchg
iret
pop
mov
push
mov
loop
sub
mov
out
lcall
loope
inc
and
inc
pop
cmp
mov
jl
sub
cwtl
xlat
into
je
ret
enter
push
aaa
arpl
in
cmp
jp
cld
adc
pusha
dec
xchg
imul
push
mov
out
pushf
inc
jbe
cmpsb
push
cmp
and
jnp
xlat
aad
js
xor
sbb
ret
outsb
pop
in
std
xor
cmp
mov
add
aad
in
loope
push
fnsave
pop
pop
out
xchg
in
cltd
inc
je
cmp
int
xor
lret
inc
cmpsb
pop
lock
cmp
outsb
xchg
mov
pushf
mov
imull
cmpsl
mov
mov
sub
adc
pop
push
cmp
xchg
lret
xlat
arpl
rorl
mov
inc
outsb
into
sub
in
std
xchg
dec
insl
jbe
mov
and
xor
outsl
push
ja
hlt
sub
cli
xor
dec
fsubl
test
push
addr16
in
inc
daa
sbb
push
mov
lcall
xchg
jp
mov
pushf
arpl
add
mov
pop
jp
loopne
fwait
lods
popa
jl
aas
cmp
bound
cli
xchg
call
cmpsl
or
int
or
outsb
lea
dec
jne
lcall
ret
inc
les
fstpl
sbb
and
hlt
or
insl
sbb
push
fwait
test
adc
or
pop
and
mov
cwtl
push
ja
shl
jp
out
fnsave
adc
sbb
call
pop
int
test
pop
movsb
in
xor
orb
or
fwait
stos
cmc
loope
nop
lods
aaa
push
adc
lret
bound
aad
mov
mov
mov
or
cmpsb
cld
outsl
inc
mov
xchg
call
sbb
movsl
jmp
lcall
push
movsl
call
test
int3
fidivrs
lock
push
mov
aaa
pop
pop
mov
ret
xchg
adc
enter
outsb
in
sub
mov
loopne
xor
icebp
subb
mov
cwtl
adcb
inc
jo
xchg
mov
mov
push
pusha
imul
inc
pop
jge
sub
xchg
enter
pusha
cwtl
jnp
loop
rcrl
jb
xchg
jno
lds
mov
cli
outsb
inc
inc
leave
push
mov
push
lea
xor
adc
sub
pop
cs
outsl
mov
pop
ret
jbe
shll
js
and
stos
xchg
inc
into
fidivs
sarl
mov
ret
dec
push
pop
adc
mov
xchg
sbb
pop
adc
mov
pusha
mov
push
mov
fisttps
enter
inc
outsl
es
ss
and
popf
lock
es
add
cmp
ljmp
and
mov
push
or
in
xchg
mov
roll
sbb
shll
in
fsubrp
fnstenv
imul
jns
insl
pop
das
fistpl
movsl
xor
inc
jp
dec
dec
pop
mov
push
push
bound
sbb
sbb
push
fcoml
pop
aaa
dec
pusha
xchg
iret
add
clc
sub
or
xorb
gs
sti
inc
xor
add
push
sub
pop
jl
lock
test
repz
pop
cmp
fmul
icebp
inc
loop
dec
icebp
addr16
inc
adc
jb
arpl
pop
xchg
cmpsb
and
and
daa
add
lahf
pop
dec
sbb
outsb
pop
in
cmpsb
push
sbb
popf
push
mov
jae
mov
pop
scas
sub
pop
mov
cmp
ficoml
push
sbbb
push
pop
jecxz
ja
add
cmp
ret
xchg
popf
outsl
mov
rolb
inc
pop
out
sub
les
pop
pop
ss
add
pusha
rcrl
pop
jmp
push
je
sarb
cmp
enter
cmp
pop
sahf
jecxz
call
inc
fmull
cmpsl
xor
sti
sub
pop
outsb
sbb
loopne
push
pop
ss
mov
test
mov
inc
inc
and
inc
fsubr
mov
xchg
test
out
adc
mov
movsb
cmp
dec
scas
or
jle
sahf
add
inc
lods
addl
inc
repnz
cmp
arpl
std
enter
imul
mov
testb
ficoml
fcoml
loope
sbb
pop
or
fs
insb
mov
sub
pop
sub
mov
mov
mov
test
dec
scas
dec
jmp
xchg
sbb
repz
test
sbb
ljmp
shl
mov
mov
jns
or
shrb
adc
jbe
jl
pop
push
lret
xchg
fists
hlt
adc
out
mov
sti
push
inc
lea
push
je
aaa
nop
pop
mov
out
jno
inc
inc
xor
nop
pop
mov
in
loope
in
test
pop
push
xor
mov
add
add
insb
sub
jg
add
jae
test
lods
call
add
xor
dec
imul
mov
pop
cs
dec
push
mov
test
stos
and
pop
or
or
addl
scas
adc
jle,pt
xor
jo
mov
fucomi
dec
xchg
jne
sub
loope
pop
das
xlat
ret
push
lock
test
xchg
into
in
cmp
cmp
jae
or
dec
out
in
fistpl
out
pop
rol
jl
and
cs
or
outsb
sbb
and
jo
inc
call
adc
cmc
jle
out
and
test
lods
xchg
adc
leave
fnstenv
add
jl
push
or
jmp
adc
or
int3
xor
loopne
inc
js
mov
and
inc
stc
jmp
push
pusha
sub
fwait
inc
mov
pop
bound
adc
aaa
mov
push
imul
add
cs
ljmp
push
lcall
pop
in
ficomps
and
xchg
ljmp
in
dec
inc
sbb
push
mov
mov
in
test
pop
cli
mov
pop
add
loop
push
mov
push
fcomp
fsubl
inc
pop
inc
rclb
insb
repz
and
fidivrs
aaa
iret
inc
test
dec
test
loopne
lea
mov
push
jnp
jb
jno
ret
xchg
adc
or
test
pop
adc
pop
js
lret
jo
js
ret
sub
pop
loope
adc
fdiv
push
test
gs
xor
shlb
pop
xorb
movsb
iret
out
mov
mov
negl
and
push
sarl
adc
mov
lea
xchg
jb
pop
aad
fdiv
movsb
sub
repz
xchg
jle
rcll
push
fisttpll
fmul
imul
dec
and
lahf
fdivs
push
jle
sti
jp
les
jnp
jo
jne
imulb
test
lahf
in
in
sti
and
nop
mov
jle
and
jg
pop
jl
ret
idivb
pushf
sub
add
mov
ss
mov
shrb
mov
push
push
lcall
sarb
inc
and
jle
pop
pop
push
popl
addr16
jb
cmp
ss
pop
leave
ret
push
stc
jg
sahf
lret
test
test
inc
scas
xchg
cmc
sbb
lods
adc
aam
push
out
insb
cld
mov
cmp
subl
sbb
stos
push
cmp
sbb
nop
xor
mov
fmull
mull
pushf
rcrb
sbb
lret
in
mov
pop
enter
sbb
fnstcw
mov
jne
in
mov
loopne,pt
inc
faddl
aaa
cmp
jl
mov
jge
and
testl
dec
nop
mov
ret
sub
dec
pop
and
mov
cmpsl
ds
subb
fnstsw
mul
jne
in
fsubrl
sbb
clc
data16
mov
pop
adc
loope
pop
pop
pop
jbe
in
nop
mov
in
aaa
xchg
or
and
jae
xor
fcoml
aaa
jp
stc
nop
cmpsb
pop
sahf
loopne
adc
daa
sahf
pop
inc
mov
lahf
jge
lcall
cmp
fcompl
mov
mulb
cld
jle
dec
and
pop
imul
scas
insl
mov
add
imul
inc
mov
sbb
pop
aam
push
call
dec
adc
arpl
push
sub
jmp
lret
cmpsl
popa
bound
aad
jle
xorb
jecxz
cli
xchg
aaa
addr16
lcall
add
pop
add
imul
ret
and
lea
inc
xchg
sub
arpl
ds
pop
inc
pop
or
in
dec
pop
or
shl
cmp
mov
jbe
stos
pop
sbb
cmpsl
aam
mov
pshufw
xchg
jle
jl
aas
stos
dec
pushf
xchg
sbb
and
aas
mov
mov
arpl
sbb
inc
inc
nop
lock
rcll
add
or
inc
xchg
adc
inc
lret
lods
dec
pop
fstpl
in
add
andl
pop
out
pop
outsb
mov
fldt
mov
stos
loop
call
lock
negl
lcall
clc
leave
dec
pop
xor
enter
mov
add
xor
cmp
push
fcmovnbe
cmc
pop
pop
ret
pop
adc
inc
push
enter
pop
or
and
dec
inc
inc
add
add
fcoms
cltd
mov
jmp
leave
pop
inc
xchg
pop
sarb
iret
rcrl
mov
push
stc
int3
dec
sub
fisubs
or
mov
std
xchg
out
dec
mov
mov
rorb
pop
sub
or
push
and
mov
mov
xchg
test
sub
fsubl
and
jae
outsb
in
fstpl
mov
outsb
jmp
inc
jns
stc
dec
shrb
xor
pop
jne
daa
jge
push
push
insl
jo
pop
pushf
lods
stos
cmc
inc
sbb
mov
lea
movsb
or
repnz
mov
popa
mov
push
lcall
sarb
out
mov
or
adc
rcrb
cmp
out
shl
adc
sbb
je
sahf
jb
mov
push
fwait
sbb
pushf
jle
scas
dec
lea
mov
jle
and
jle
fstpt
fsubl
add
stos
fucomp
jne
std
push
scas
div
ss
loop
dec
sbb
or
sub
jb
xlat
rcr
cmc
and
push
int3
adc
aad
lods
or
push
movsl
xor
out
out
gs
ss
push
test
iret
lods
pop
lods
ljmp
pop
lret
fistl
adc
in
dec
pop
aam
adc
mov
fwait
lea
ljmp
in
aaa
xchg
leave
rcr
out
inc
outsb
sbb
inc
cwtl
push
lock
mov
add
dec
fcoml
jmp
ror
add
cmp
jno
imul
andb
inc
repz
jmp
jmp
icebp
nop
inc
xchg
sbb
aad
push
shl
std
outsb
push
cli
popf
or
sub
inc
aaa
pop
sbb
sbb
lcall
mov
data16
hlt
das
adc
push
pop
adc
aaa
mov
inc
add
xchg
sarb
lcall
arpl
xchg
push
xor
das
xor
sbb
stos
mov
pop
pop
inc
jp
xchg
adc
pop
mov
jbe
pop
pop
push
movb
add
mov
popa
iret
cltd
add
popa
outsb
xor
in
push
out
push
push
cmp
pop
jp
push
xchg
popf
and
adc
pusha
f2xm1
imulb
jbe
push
stc
call
and
ss
xor
shll
lret
loop
pop
sbb
push
xor
push
push
mov
in
pop
shlb
xchg
mov
xchg
loop
enter
call
mov
lret
mov
cmp
lds
insb
lret
insl
push
imul
sub
mov
xchg
notl
aad
xor
and
mov
mov
pushf
out
in
jae
lods
adc
movsl
xchg
mov
push
mov
xor
popa
pusha
or
mov
pop
push
and
pop
cmpsl
aad
into
mov
out
les
mov
pop
dec
in
cmp
jne
push
mov
lods
xchg
shl
inc
dec
mov
bound
xchg
and
jnp
dec
rcll
cmpsb
inc
inc
push
pop
ljmp
lods
jmp
shrl
loope
in
enter
cmc
std
aaa
sub
cli
cltd
pusha
inc
cld
xlat
test
jns
sti
mov
ds
nop
scas
lcall
lods
je
aaa
inc
mov
push
insl
cwtl
and
or
dec
jo
push
lcall
aaa
sbb
mov
pop
add
frndint
xor
out
mov
shr
lcall
sahf
lods
stos
or
arpl
enter
or
mov
cmp
sub
das
cmpsb
bound
pop
xchg
aas
and
imul
insl
pop
test
sub
pop
cmpsb
dec
sti
stos
mov
lahf
test
pop
cld
fnstcw
xor
fmul
jne
lea
mov
fucom
pop
sbb
jl
jle
and
stc
or
scas
jo
stc
sbb
pop
jecxz
mov
push
cmpsl
xchg
push
adc
push
loopne
sub
pop
sbb
es
mov
popa
addr16
sar
push
loop
mov
ljmp
inc
aaa
inc
stc
push
cwtl
in
push
imul
fisttps
inc
repz
inc
pop
xor
push
mov
jg
imul
mov
mov
push
inc
aad
sbb
aam
and
shlb
fcompl
sbb
cwtl
jle
sbb
adc
popf
dec
jbe
int
and
test
jnp
icebp
add
mov
pop
mov
in
repz
scas
mov
sbb
imul
mov
loope
sub
mov
pusha
aad
rcll
ret
popa
and
repnz
test
jnp
ds
sbb
out
das
cmp
int3
xchg
imul
lret
aaa
aam
or
aad
xchg
or
out
es
push
cmp
test
dec
repz
addl
sbb
add
into
js
leave
das
jmp
sahf
int3
jb
shll
xchg
sbb
dec
enter
adc
out
sbb
in
jno
pop
cmp
lahf
insl
mov
mov
sbb
adc
push
pop
ds
adc
outsl
loop
ja,pn
shrl
inc
ret
and
insb
xor
pop
loop
fisubrs
je
jl
cmp
dec
sub
add
pop
popf
sub
mov
insb
fsubrs
mov
jge
sarl
pop
push
loop
cmp
cld
sahf
ret
in
fidivrs
pop
jge
pop
sbb
out
or
xchg
xchg
sbb
icebp
mov
cmp
int
outsb
bndstx
rolb
sub
pushf
jge
syscall
loope
jnp
jae
and
inc
mov
sbb
push
inc
rolb
iret
dec
leave
popf
sub
jg
xchg
pop
cmp
pop
jle
sbbb
test
xchg
mov
add
mov
push
push
jno
jmp
cmp
xchg
push
into
cmp
and
dec
jp
aaa
cmc
dec
xchg
inc
decl
jle
in
std
int
inc
adc
sbbl
inc
xor
mov
push
dec
imul
in
xor
cmp
incb
cwtl
rolb
adcb
lret
subl
js
mov
call
daa
and
xchg
incb
ljmp
inc
push
sub
xchg
notl
jmp
or
loope
sbb
movsb
pop
cltd
add
mov
jp
add
mov
pop
adc
mov
out
cs
movsl
add
push
shl
shlb
ret
test
dec
fsubp
cmp
ficomps
cwtl
fsubl
in
lods
outsl
dec
stos
out
mov
push
sbbl
jo
out
pop
rclb
lea
cmc
lret
push
mov
dec
es
mov
mov
cltd
testl
dec
or
push
popf
mov
inc
xchg
push
je
pop
jg
ret
pop
jl
cmpsl
adc
jae
scas
push
sub
in
loope
xor
lret
push
pop
push
push
fcoml
subl
call
and
sub
cld
sbb
pop
adc
rcrb
aaa
mov
inc
xchg
jno
xchg
push
mov
push
jecxz
test
sbb
dec
test
xchg
mov
push
add
push
sub
push
sbb
jl
ss
or
sub
fwait
xor
mov
clc
adc
cli
cltd
mov
cmp
dec
mov
getsec
ret
das
cmp
add
sub
pop
cmc
jle
or
fnstsw
sub
in
mov
add
insl
pusha
fscale
push
aaa
outsl
and
jecxz
ret
and
sub
mov
add
mov
aas
aad
stos
jle
and
loopne
sbb
movlhps
leave
popa
jno
jle
ret
cltd
cltd
addb
aam
or
cli
mov
in
dec
scas
pop
cwtl
ret
jl
sub
shlb
xor
int3
loopne
xchg
jno
outsb
and
arpl
mov
orl
cs
jp
movsl
cld
iret
into
pop
neg
cmp
cltd
shr
push
xchg
pop
sub
cmp
adcb
adc
std
jmp
sub
bound
movsl
nop
fldl
sbb
stc
shr
mov
jp
dec
ljmp
into
in
sbb
cmp
mov
outsb
sub
jg
fsub
ds
cmovae
arpl
outsb
pop
lock
ljmp
inc
ljmp
and
push
cmpsl
into
adc
roll
mov
and
popf
jbe
movsl
pop
add
stc
dec
pop
aad
sub
pop
push
sub
cmpsl
lea
push
nop
subb
xor
jnp
scas
lahf
aam
dec
mov
popf
mov
and
mov
mov
pop
add
mov
outsl
jle
jmp
orb
cmp
repz
mov
sbb
sbb
aas
fs
ret
sbb
enter
loope
aas
fcomps
mov
rcll
imul
push
in
neg
out
add
mov
inc
out
sti
jnp
or
add
in
push
in
mov
pop
enter
sbb
mov
dec
int
pop
jle
and
sbb
jno
jle
push
aad
mov
dec
imull
repz
popa
rcrb
xor
aas
inc
jno
pop
pop
fucomp
sarl
pop
or
xor
xchg
push
lods
push
mov
sbbl
pop
mov
cmp
sub
add
mov
in
mov
sbb
or
pushf
dec
sbb
aaa
pop
popf
stos
dec
loop
pushf
aam
stos
stc
aam
neg
mov
fnstenv
mov
test
imul
testl
or
sbb
cld
fldl
inc
pop
loope
lret
sahf
enter
push
mov
in
sbb
test
arpl
xorl
mov
lahf
incb
sti
movsb
xchg
or
mov
mov
call
adc
shr
pop
stc
jle
rorb
lea
inc
or
pop
icebp
iret
adc
daa
jg
scas
gs
shr
cli
pop
imul
cmpsl
sbb
outsb
cmp
push
jl
in
jo
xor
scas
mov
sub
pop
mov
lret
mov
in
mov
jp
pusha
cmp
mov
in
and
sbb
lods
outsl
sbb
ss
inc
cmpsb
adc
stc
bound
push
fnstenv
ret
inc
cmp
push
and
sbb
gs
daa
jbe
cmp
test
clc
mov
enter
sahf
add
push
icebp
cmp
leave
push
out
xchg
testb
xor
adc
dec
push
sbb
loope
sbb
push
pop
xchg
inc
sahf
or
xchg
dec
jb
in
and
mov
push
loop
mov
fnstsw
stos
xchg
push
lea
stos
enter
inc
rorl
fcoml
sbb
pop
add
mov
mov
popa
loope
adc
pop
sub
iret
xchg
mov
sub
adc
cmp
mov
cmp
pop
mov
out
mov
cmpsb
lret
aas
mov
xor
sub
pusha
inc
cmp
ret
xchg
cwtl
xlat
lea
pop
pushf
push
jnp
pop
mov
inc
aaa
push
test
cmc
lahf
inc
or
xlat
or
shr
test
dec
mov
fisubrl
cltd
ds
cmpsb
mov
in
push
sub
enter
fsubp
ret
fsubrl
mov
mov
mov
mov
adc
in
cltd
fwait
and
push
movsb
bound
mov
cmpsl
test
jno
sbb
sbb
mov
inc
mov
jns
pop
sbb
in
lahf
mov
jbe
xorl
stc
icebp
add
mov
test
nop
scas
ret
pop
cmpsl
lods
sbb
cmpsb
btc
pop
push
jnp
jg
out
gs
cmpl
and
xor
test
test
push
xor
mov
call
popa
xchg
mov
xchg
pop
mov
xchg
hlt
jg
or
push
mov
pop
inc
mov
xor
lock
mov
fiadds
or
dec
test
paddw
jle
cmp
inc
pushf
pop
sub
jns
jmp
add
das
pop
xchg
mov
aam
jmp
imul
mov
xlat
cmp
hlt
pushl
sub
ret
mov
cmpsb
pop
enter
jp
jnp
popa
fidivrs
or
scas
pushf
mov
add
in
stos
adc
mov
in
mov
mov
aaa
adc
mov
fidivs
adc
xchg
inc
pop
cwtl
test
lea
aaa
pop
mov
xor
adc
push
aaa
adc
outsb
and
sahf
lds
mov
ds
loopne
shr
shlb
pop
mov
scas
sbbb
mov
rclb
push
xor
out
loopne
pop
lods
out
fwait
lock
jns
cwtl
dec
icebp
insb
fstl
jb
xor
lret
jbe
lods
mov
pop
popf
xchg
lcall
dec
and
and
pop
jb
fistps
hlt
aad
fcmovnu
dec
jb
bound
aaa
cmp
xchg
lock
fs
addr16
pushf
xchg
or
cmp
push
add
mov
mov
imul
fadds
xor
insl
adc
je
mov
add
mov
sbb
outsl
inc
jmp
cvtdq2ps
cmp
fstpt
cld
cmp
int3
pusha
sahf
aaa
pop
js
adc
ds
test
mov
jg
lods
paddb
gs
lock
or
aam
mov
sbb
aaa
or
mov
lods
test
mov
sarb
sbb
push
clc
int
pop
and
mov
adc
ja
ficoml
and
shll
ljmp
imul
ret
add
pop
inc
jp
pop
sbbl
add
ficompl
jecxz
pusha
adc
sbb
movsb
inc
out
bound
pop
add
push
aad
in
sahf
aas
mov
fcompl
mov
sbb
aam
mov
popl
pop
enter
repz
call
mov
and
lds
cmp
sub
sbb
ss
mov
sti
cld
popa
lret
test
cwtl
mov
call
fs
fs
add
in
lcall
adc
js
jle
popf
adc
sti
cmp
xchg
int
cltd
in
mov
lcall
insl
pop
in
mov
out
dec
pop
mov
sbbb
shlb
pusha
sbb
and
mov
imul
flds
or
dec
lea
data16
in
pop
iret
test
adc
aaa
rcrb
hlt
xchg
jo
xchg
cmp
int
loope
stos
ja
xchg
mov
insb
dec
xor
sub
pusha
ret
sahf
rcrl
or
xchg
pop
fistl
das
jle
push
aaa
scas
pop
mov
cmpb
jmp
out
pop
mov
xor
ffreep
aaa
mov
cltd
in
cmp
cmp
pop
ljmp
enter
jp
fadds
and
xor
dec
mov
pop
mov
loope
arpl
push
jp
dec
mov
mov
sbb
adc
sbb
das
sub
addb
lock
pop
in
lock
cmp
mov
sbb
pop
stos
mov
scas
adc
outsb
and
mov
ljmp
insl
cmp
pop
mov
xor
repz
add
jl
and
std
push
xchg
ljmp
loopne
mov
jnp
prefetch
or
lret
lahf
jb
mov
sub
inc
int
or
jle
repz
aaa
mov
icebp
pop
cmp
popf
pusha
pop
add
inc
lods
leave
mov
das
cmp
mov
outsb
into
das
movsb
sbb
mov
fldenv
in
sbb
cwtl
push
and
aaa
dec
cmp
mov
lret
rcr
fisttps
aaa
xor
mov
in
mov
cmp
xchg
inc
push
pop
mov
or
out
in
lods
lods
xchg
popf
mov
jecxz
shld
mov
inc
hlt
add
xor
and
mov
aaa
call
adc
cld
cmp
icebp
and
and
inc
push
xchg
dec
movsb
add
aas
push
rorl
in
xchg
sbb
adc
add
mull
call
pop
jmp
out
inc
das
cmpsb
in
pop
arpl
rorl
sbb
xchg
js
in
adc
insb
jnp
lcall
in
into
jae
pop
daa
mov
pop
ss
mov
pop
adc
out
in
in
or
data16
repz
inc
mov
push
call
sbb
sbb
sahf
xchg
add
push
adc
incl
jnp
enter
adc
xchg
xchg
aas
iret
jno,pn
lea
repz
lods
push
stos
movsl
mov
cmp
mov
movl
hlt
mov
rcrb
dec
jp
aaa
xchg
nop
inc
lock
dec
dec
imul
mov
sbb
cmp
loopne
stc
lret
sub
jb
outsb
in
add
in
ss
push
sarb
mov
repz
xor
out
xchg
scas
in
add
dec
daa
or
cltd
jl
pop
in
std
mov
insb
pop
lods
addr16
xchg
bound
adc
scas
dec
jo
aas
and
into
jns
xchg
loope
in
iret
mov
lret
pop
dec
push
mov
bound
fldenv
inc
xor
in
jne
xlat
pop
cmove
popl
mov
cmp
jg
sbb
dec
insl
lcall
sbb
outsb
into
subl
pop
mov
mov
jno
pop
inc
jb
mov
mov
xor
add
mov
mov
xchg
jg
es
mov
clc
pop
dec
scas
push
lods
and
in
pop
mov
dec
imul
fwait
pop
cmp
jmp
sbb
test
cmpsb
je
call
rep
sub
xchg
popa
dec
pop
push
jle
or
outsl
idivb
out
lret
jns
xor
repz
sti
out
mov
pop
xor
dec
add
test
pop
es
pushf
jae
aas
mov
movsl
mov
mov
sbb
shlb
mov
les
sbb
xrelease
mov
cwtl
je
cmpsb
lahf
popa
lret
data16
mov
fistpl
fwait
mov
xchg
adc
pop
xor
mov
or
cwtl
imul
sti
test
pop
mov
and
sbb
ds
jb
clc
pop
jb
cmpsb
push
inc
pop
or
add
repnz
scas
xchg
sahf
movsl
xchg
inc
jbe
sbb
xorb
out
or
sbb
lahf
inc
sbb
and
pop
inc
aaa
aam
lret
jle
pop
mov
sahf
sub
hlt
xor
dec
cwtl
sbb
cmc
leave
mov
mov
cmpsb
imul
rep
mov
xchg
enter
xchg
test
fsubl
sub
sub
mov
into
bound
out
mov
aam
push
sbb
mov
test
popa
lcall
xchg
xchg
sbb
jl
ret
xor
inc
sub
sbb
pop
mov
mov
inc
js
imul
sbb
scas
test
and
rcr
fbld
lret
xor
mov
aas
sahf
inc
mov
aas
add
mov
lret
xor
mov
adc
push
add
mov
dec
cwtl
lret
or
shll
rorl
mov
mov
push
or
lds
sub
mull
insb
adcb
inc
sahf
jle
mov
sub
jle
add
orl
clc
int3
sbb
andb
mov
dec
ret
enter
and
or
pop
adc
rcll
mov
adc
fcoml
sti
sub
stc
sub
test
leave
cltd
enter
xchg
sub
fcomps
mov
pop
dec
lods
mov
mov
inc
movsb
imull
js
fs
adc
mov
dec
xchg
test
mov
scas
mov
xor
jae
sbb
cmp
sub
jg
and
int
sbb
mov
jb
fisttpl
jmp
cld
pushf
std
mov
cmc
das
ja
dec
repz
aaa
sbb
pop
mov
bound
fbstp
dec
out
jae
aad
aas
jne
sahf
push
insb
sbbl
mov
fwait
xchg
mov
enter
lods
scas
fwait
loope
imul
jl
in
push
sub
dec
dec
jl
js
aam
push
aam
push
mov
popa
enter
xor
inc
ss
and
stos
push
pop
and
mov
push
mov
cmp
pop
arpl
iret
sti
scas
and
add
int
xlat
push
scas
outsb
push
cmp
pop
fnstcw
jb
mov
cmpsl
in
scas
sbb
adc
cmpsb
mov
repz
movsb
mov
mov
divb
cmp
sbb
adc
inc
add
repz
pop
lcall
int3
mov
dec
gs
pop
pop
mov
imull
xor
or
xchg
lods
adcb
setge
push
in
stos
push
aam
addl
pop
popa
push
pop
lea
adc
xchg
imul
outsb
arpl
inc
movsl
sbb
xchg
stc
test
rcrb
std
int3
outsl
iret
fnclex
call
fistpl
mov
mov
sub
sub
inc
add
ss
fimull
ljmp
repz
push
aaa
dec
daa
mov
jbe
pop
fists
les
and
loope
mov
inc
xchg
jb
mov
mov
ss
and
pop
xlat
fcmovnb
cltd
sbb
cld
data16
out
xchg
pop
add
ret
hlt
jle
shr
xchg
je
inc
sbbl
clc
loop
cltd
or
ds
stos
cmp
insl
sbb
insl
push
cltd
jbe
imul
scas
lcall
mov
xchg
jo
and
fmulp
loop
and
cli
add
sbb
push
imul
pop
sbb
daa
in
push
dec
and
popf
pop
jo
inc
jnp
add
mov
fwait
sbb
push
lea
das
jl
addr16
fmulp
push
jecxz
xor
xor
lea
pop
push
pop
and
pop
and
push
outsl
mov
inc
movsl
stc
pop
out
fs
ds
and
out
mov
dec
cld
fmulp
or
xchg
pop
cmc
and
sbb
mov
cmp
mov
jge
cmp
and
inc
scas
jp
cld
stos
or
inc
xchg
jbe
jmp
and
pop
out
out
adc
and
rcrl
add
mov
mov
jb
cmp
mov
xor
loope
push
cwtl
mov
xchg
cmp
outsb
xchg
mov
movsl
call
add
mov
int
sub
pop
push
add
xchg
mov
pop
xchg
jae
repz
pop
in
cwtl
mov
outsb
pop
dec
pop
repz
popf
add
and
and
push
dec
adc
inc
inc
dec
adcl
pusha
mov
in
stc
push
std
xchg
faddl
mov
dec
jbe
test
in
cld
sbb
in
xchg
je
dec
cmp
arpl
mov
subb
pop
mov
fmull
sbbl
xor
imul
outsl
mov
xchg
inc
movsb
jne,pt
inc
fwait
lret
popf
pop
mov
dec
or
mov
test
inc
jge
pusha
in
pop
lret
jg
sti
and
add
mov
or
cmp
dec
scas
lret
inc
pop
lret
pop
movsl
dec
ds
fnstsw
cmp
mov
cli
fmull
cmp
das
mov
sub
jmp
and
sub
mov
dec
aaa
dec
jb
iret
rol
enter
add
xor
enter
push
cmp
addr16
mov
ret
adc
popa
aaa
in
push
sahf
je
cmp
xchg
jge
jo
out
pusha
push
pop
sub
mov
sub
cmp
movsl
lods
cmpsl
fistpll
fstpl
sti
out
push
add
dec
mov
sti
sti
add
dec
shrb
jle
add
inc
es
dec
lahf
fnstcw
mov
dec
stc
bound
sbb
fwait
mov
add
jne
lcall
hlt
aas
add
cmp
pop
and
imul
cs
jle
mov
pusha
sbb
jg
imul
sbb
mov
mov
mov
into
mov
add
pop
sbbb
xor
imul
ljmp
cmp
mov
cmc
sti
ss
sbb
adc
movsl
inc
mov
jmp
pushf
stos
adc
sub
sti
pop
inc
les
shll
xchg
loope
pop
sbb
push
scas
imul
dec
and
fwait
push
testb
fbld
dec
fmuls
push
insl
arpl
push
mov
into
or
fimuls
push
xchg
addb
bound
jno
adc
arpl
push
mov
sbb
push
push
mov
cmp
jne
cmpsb
test
dec
sahf
xor
mov
repnz
add
jl
lcall
or
in
push
push
sbb
notb
faddl
and
pushf
inc
pop
sbb
xor
jmp
cld
es
aas
stc
inc
sbb
jne
add
movsb
adc
popf
push
sbb
ss
outsl
mov
dec
dec
mov
jne
cmp
scas
test
pop
jo,pt
push
push
push
mov
jle
sub
dec
outsb
or
inc
test
or
mov
movsb
int
jmp
std
push
test
js
pop
sub
arpl
cmpsb
std
xchg
outsb
sbb
imul
outsb
mov
push
mov
inc
movb
xlat
je
add
test
roll
mov
aas
xchg
cli
into
iret
lret
xor
pmulhw
jne
fistpl
aas
mov
in
nop
pop
shlb
pop
pop
in
lock
pop
jmp
push
pop
inc
repz
adc
mov
cmpsb
push
in
pop
jae
aam
pop
inc
and
fdivrl
adc
pop
lods
cltd
inc
pop
nop
push
shll
pop
pushf
pop
sbb
pop
mov
xchg
outsl
lds
mov
sub
xchg
xorb
hlt
clc
std
std
or
mov
and
rcll
jecxz
sub
adc
inc
add
movsb
mov
lret
orl
sbb
pop
jge
fidivs
mov
mov
lods
lds
or
inc
out
cmpsl
stos
xorb
imul
jne
mov
sbb
mov
pusha
mov
iret
push
xchg
add
cmp
call
in
lods
push
divb
pop
jmp
xchg
push
pop
sub
cmp
inc
mov
pop
popa
jp
out
test
test
cmp
test
pop
push
push
rep
mulb
jae
jnp
lods
pop
jmp
mov
sub
int
push
mov
fstps
xchg
add
lret
mov
xchg
mov
cmpsb
mov
rcr
out
ds
and
scas
or
hlt
test
sbb
jp
xor
test
xchg
jg
jge
dec
ss
sarl
rcrb
pop
jae
pop
inc
jge
push
in
rorb
sbb
test
adc
je
fnstenv
mov
lret
ljmp
mov
popf
add
pop
sbb
jecxz
add
call
test
loope
push
jmp
fldenv
cmpsb
inc
mov
clc
jbe
sahf
jns
pop
jmp
out
dec
pop
xor
xlat
pop
or
xlat
and
dec
jmp
bound
lea
lods
movsl
pop
pop
fidivs
lcall
jno
push
out
mov
pop
adc
sbb
add
jb
imul
xchg
lea
enter
aaa
out
fiadds
outsb
repnz
push
adc
push
jmp
pop
and
pop
jmp
sbb
cli
dec
bound
xchg
stos
loop
xorl
std
movsl
aaa
ret
sub
push
xor
cmp
jle
sub
mov
sub
in
enter
add
lea
push
push
pop
inc
arpl
push
pop
ficoms
aaa
hlt
inc
xor
cli
ds
in
mov
pop
es
stc
inc
push
mov
or
hlt
xchg
sub
cld
xchg
cmpl
inc
popa
stos
adc
fdivrs
enter
push
test
fs
sub
out
sahf
aam
push
arpl
loop
or
sub
xor
and
jb
pop
mov
aam
inc
rcr
icebp
or
shrb
push
jno
sbb
jle
adcb
push
lock
inc
push
decl
fdivrp
in
fidivrs
lea
push
bound
int3
pop
cs
lods
insl
jb
dec
push
sbb
aaa
dec
sbbb
stc
cmc
movsl
push
loope
mov
mov
rcrl
orl
pop
outsb
lea
mov
adc
aas
jns
mov
sbb
shl
or
jg
cs
in
data16
fistpl
mov
enter
lea
pop
push
mov
xchg
push
or
push
push
or
jg
pop
pop
out
mov
dec
and
mov
stos
dec
sarl
adc
push
lock
cmp
stos
lods
sbb
out
inc
mov
jl
fisubrs
ds
xchg
sbb
add
lea
cmpsl
and
mov
stos
mov
pop
lock
lret
sbb
js
jbe
int
xorl
dec
or
xor
stc
mov
fcomp
loope
aaa
icebp
in
dec
xchg
cli
fsubrl
je
loopne
pushl
jp
xchg
mov
into
addr16
bound
push
xchg
out
inc
movsb
cmpsb
cmpsl
mov
or
lcall
lock
aaa
movsb
mov
iret
or
out
fidivl
jb
sets
push
int
in
js
mov
jl
in
dec
add
mov
pusha
fbld
js
test
mov
sbb
fmuls
leave
jne
outsb
icebp
ljmp
lods
pop
lods
xlat
xchg
push
aaa
jg
insb
test
cs
in
or
xchg
pop
test
shlb
push
push
aam
mov
pop
sbb
fisttpl
dec
sub
mov
out
pop
pop
inc
push
test
sahf
xchg
popf
pop
pop
hlt
in
dec
jl
hlt
fsubl
aaa
mov
mov
dec
jbe
dec
cld
scas
push
sti
xchg
in
jp
pop
push
fyl2xp1
popa
cld
gs
call
aaa
push
aam
add
out
test
rolb
sarb
test
push
mov
sub
out
sbb
or
adc
loope
and
lods
in
aaa
xor
add
sub
bound
in
addl
adc
lcall
loope
out
insb
jp
jmp
add
xchg
pushf
mov
or
and
mov
ss
loopne
aaa
cld
sbb
dec
jne
sbb
pop
addr16
mov
inc
movsl
into
add
push
mov
daa
mov
test
fists
cmpsb
mov
mov
test
mov
xchg
out
outsb
test
movsb
out
or
or
push
mov
icebp
sahf
mov
stos
icebp
sbb
mov
aad
push
sbb
lods
les
lods
jae
mov
inc
nop
push
mov
shll
mov
add
lock
mov
pop
dec
neg
lock
add
roll
pop
sbb
pop
add
std
std
push
adc
mov
push
scas
cmc
pop
imul
and
mov
dec
inc
test
sbb
pop
cwtl
mov
jle
mov
sbb
inc
lahf
test
mov
pop
scas
adc
xchg
loope
sub
or
aas
ss
cli
loope
insl
mov
in
push
rclb
stos
cmovge
or
cltd
aaa
xchg
movsb
fs
ss
es
sbb
sbb
dec
xchg
ljmp
adc
pop
and
andl
push
jle
inc
cmp
aam
insb
mov
sub
xorl
jge
ljmp
ss
xor
pop
mov
push
in
aam
adc
outsl
push
lcall
pop
sbb
jle
dec
sbb
shl
gs
mov
pop
stos
sbb
adc
notb
cmp
lcall
fimuls
fs
insl
enter
aam
xchg
cmp
inc
mov
mov
dec
cmp
fs
movl
mov
mov
dec
push
arpl
ds
jae
sub
jp
stc
adcb
incl
lods
cwtl
or
cmp
fchs
pop
pop
adc
pop
pop
out
jno
add
dec
cmc
cmp
pop
pop
sbb
mov
sbb
fadd
popa
fmuls
or
dec
imul
jne
push
mov
jge
out
ror
bound
mov
pop
iret
xchg
inc
lahf
dec
popf
dec
imull
mov
addr16
cltd
mull
pop
mov
mov
ret
add
rclb
cltd
imul
jl
notb
lods
bound
xchg
push
push
mov
mov
cli
arpl
mov
or
outsb
adc
pop
add
push
jns
clc
scas
sahf
ljmp
fcoml
jnp
iret
into
adc
sbb
and
aas
ret
pushf
and
sbb
aaa
mov
in
jle
adcl
iret
fistps
imul
xchg
gs
sbb
adc
jno
sub
fldt
aaa
push
push
jle
enter
inc
ja
jns
mov
fcoml
popa
ds
mov
fwait
xor
add
and
adcb
lret
aad
arpl
or
jl
mov
jl
push
stc
xor
into
xor
and
in
mov
lret
pop
and
sbb
andl
sub
pop
mov
in
mov
nop
aaa
aad
mov
mov
cmp
insl
add
sar
inc
xor
lret
aad
xchg
repnz
aam
adcb
cmp
fnstcw
lcall
adc
or
add
shr
xchg
jl
and
xchg
inc
push
jns
test
pop
and
ja
jno
sub
pop
addb
int
mov
push
and
stos
mov
roll
sub
and
out
mov
adc
iret
xchg
movsl
pop
jns
pusha
addr16
enter
icebp
mov
rcr
xorl
cmp
mov
and
cwtl
ds
aam
pop
popf
les
loope
add
mov
nop
jge
cmp
xlat
pop
mov
scas
lahf
jl
enter
cmpb
andb
fstsw
popf
dec
add
push
pop
inc
lret
std
in
sub
or
and
sbb
sahf
cmc
xchg
lods
fstpl
in
cmp
mov
lcall
imul
divw
aaa
sbb
ret
push
cmp
push
or
pop
js
inc
pop
xor
push
adc
xor
fdivrs
cwtl
jecxz
xor
or
dec
adc
pop
cmp
lock
shrb
xlat
scas
ret
cwtl
add
pop
movsl
and
or
aaa
fidivrs
repnz
dec
or
mov
outsb
jo
rclb
bound
cmp
in
sbb
jle
add
fnsave
cmpsb
or
and
xchg
pop
fstps
dec
and
repz
xor
xor
shll
sqrtps
aaa
xchg
or
mov
jmp
pop
push
mov
fucomi
mov
repz
ficomps
test
and
cwtl
cli
jmp
pop
stos
push
cwtl
dec
dec
cmpsl
jnp
out
xor
and
cmpsb
mov
test
pushl
xchg
mov
into
inc
jecxz
push
cmc
jecxz
jle
add
push
aam
add
add
push
mov
cld
inc
dec
in
test
shlb
mov
insl
repz
ja
pop
mov
xchg
sbb
inc
test
fcmovnbe
mov
js
push
loopne
outsb
sbb
xor
loope
movb
pushf
rcrl
mov
inc
adc
pop
es
lds
loopne
adcl
jmp
in
sahf
cmp
and
xchg
jge
mov
insl
mov
fwait
imul
xchg
push
push
pusha
mov
sub
mov
mov
pop
add
cmp
lcall
testl
aaa
dec
push
jo
sbb
lods
out
sbb
mov
popa
mov
jbe
or
xor
into
lock
in
xchg
popf
out
sbb
mov
xor
adc
and
mov
add
ds
lahf
es
push
lcall
dec
jl
jp
movsl
ss
dec
mov
aad
inc
test
dec
jp
dec
mov
test
negb
push
push
clc
out
scas
sti
gs
inc
fsubl
outsl
test
outsl
mov
jns
sbb
cli
cmp
outsb
adc
aad
pop
mov
movsb
inc
ret
mov
xchg
shll
sbb
movsb
mov
int
in
popa
test
les
sarl
xchg
xlat
jmp
out
sub
jns
and
inc
sbb
iret
jns
scas
xchg
pop
cmovne
mov
push
mov
icebp
adc
sarb
xorb
jle
jnp
mov
shlb
test
mov
push
xchg
add
jnp
shl
lds
loopne
das
add
push
adc
jns
int3
or
pop
pop
sbb
mov
test
inc
es
ds
add
outsl
and
sub
xchg
mov
adc
in
jns
sar
push
pusha
mul
dec
daa
mov
adc
cli
sub
mov
mov
sbb
in
sbb
aaa
adc
or
push
sti
in
aad
in
xchg
loop
push
fmuls
add
inc
jp
lret
lods
xor
mov
sbb
in
lods
sbb
decl
out
das
adc
lea
sbb
aam
sbb
add
mov
fs
dec
mov
jl
and
mov
movsl
add
ret
ret
dec
outsb
jnp
sti
mov
xchg
cld
add
xchg
mov
insb
push
and
jo
outsb
idiv
mov
dec
arpl
dec
adc
or
sahf
and
mov
xchg
cmp
lock
xchg
pop
in
pushf
sbb
push
jmp
cmpsb
in
test
cld
pop
arpl
xchg
xchg
cwtl
or
add
hlt
sub
cmp
frstor
icebp
pop
dec
add
pop
aam
pop
adc
sbb
popf
or
adc
xor
cwtl
bound
lret
sub
sbb
mov
dec
push
loope
aaa
sbb
mov
pop
jecxz
test
cmp
in
pop
lea
sub
jp
imul
shrl
pop
sub
fstpt
in
sub
ficompl
mov
push
stos
xchg
inc
sarb
adc
pop
inc
pop
je
dec
rcll
inc
fistps
jl
into
cmpsl
hlt
mov
fs
push
enter
js
test
hlt
or
roll
jp
ja
dec
jo
lock
ss
and
subl
jae
stc
and
loop
fwait
adc
cmp
add
cltd
sbb
and
lret
ss
or
popf
aaa
je
pop
lret
inc
xchg
js
in
sbb
std
out
cmpsb
fnsave
mov
cs
in
test
push
fstpt
test
test
xchg
mov
and
mov
push
pop
sarl
pushf
or
dec
jae
cmp
int
shl
push
cmp
das
sbb
das
mov
pusha
xchg
icebp
mov
rcll
ja
push
pop
jl
mov
pop
jnp
dec
pop
mov
ret
inc
adc
adc
in
pop
cmp
xchg
xor
cmp
cmp
dec
daa
add
out
mov
fadd
lahf
jnp
out
jae
xor
dec
sbb
aaa
movsl
inc
pop
jle
jae
icebp
pusha
in
in
movsb
dec
lcall
sub
pop
filds
stos
daa
dec
into
pop
adc
cmp
cmp
push
sbb
and
and
push
xchg
popa
push
sbb
inc
stos
jp
test
lea
push
sub
xor
dec
pop
das
sti
pop
pop
lods
push
test
mov
les
movsl
pop
repz
dec
fucomip
adc
pop
mov
lahf
sbb
cmpsb
mull
dec
fsubrl
aad
loop
icebp
icebp
cmp
xchg
jb
mov
outsl
cmp
mov
jl
enter
sbb
inc
pop
mov
pusha
jecxz
cmp
in
mov
adc
shl
enter
adc
sbbl
inc
cs
or
notb
and
and
inc
aas
push
leave
jmp
and
frstor
inc
lds
xchg
adc
inc
push
aaa
cmc
retw
or
pop
push
cwtl
cmp
sbb
fcomi
mov
and
cltd
pusha
mov
sbb
repnz
imul
inc
fcoml
sbb
jp
test
xchg
out
lret
pop
ds
mov
xchg
pop
lods
pop
sub
ss
daa
pushf
lret
mov
dec
lahf
mov
mov
mov
jmp
fidivrs
aam
bnd
pop
sub
inc
mov
out
lret
mov
popa
sub
fldl
pop
repz
pop
mov
clc
pop
sub
lea
mov
insl
lcall
inc
test
fwait
inc
sbbl
daa
fisttpl
call
push
lock
fstl
int3
xor
xorb
push
mov
xchg
mov
jbe
dec
push
insl
fdivrl
pop
and
ja
and
pop
aaa
cmpsl
adc
ljmp
and
pop
nop
push
arpl
push
xchg
adcl
rolb
xor
mov
rcrb
enter
xor
mov
cmpsb
xchg
fimuls
rol
in
aaa
mov
xor
mov
sbb
pop
mov
inc
pop
xchg
dec
mov
lcall
outsb
loope
pop
xor
fs
insl
ds
sub
fildl
jmp
xor
ffreep
pop
testl
stos
mov
xchg
loope
pop
cmpsl
sub
lret
jmp
mov
xlat
fists
dec
stos
sub
and
mov
leave
ss
sarl
stc
shrd
sbb
lock
mov
jnp
cmpsb
mov
out
inc
arpl
in
add
into
sbb
clc
inc
nop
gs
and
repz
sbb
icebp
shrl
push
jb
fiaddl
movsl
mov
outsb
and
xchg
or
sbb
jecxz
repz
adcl
sbb
cmp
adc
sbb
fstpl
mov
pushf
mov
sbb
sbb
inc
pop
pop
cld
sbb
out
pusha
loopne
xchg
iret
int3
xor
adc
add
fdiv
loopne
ret
push
out
or
push
ficompl
ss
and
adc
jae
lock
mov
out
sbb
cwtl
out
ficoms
pop
mov
loope
repz
lds
pushf
dec
or
inc
and
negl
jmp
mov
scas
adc
jmp
pop
xchg
into
roll
pop
push
push
jmp
mov
pop
jle
inc
imul
adc
stos
sbb
xchg
insl
jo
xor
call
and
lea
lret
enter
pop
jnp
mov
cs
pushf
push
popf
int
test
call
aaa
mov
pop
imul
jle
cmpsl
add
out
cmpsb
inc
xadd
dec
dec
mov
xchg
jo
mov
jbe
dec
xchg
jg
ljmp
aad
outsl
pop
cmp
push
sbbl
jp
xchg
hlt
sarl
sub
jb
mov
test
cmpsl
lods
push
xor
mov
out
daa
dec
ret
loopne
loope
xor
xchg
popw
ja
dec
incl
aad
dec
js
scas
sbb
push
aam
dec
xchg
jnp
repnz
loop
pop
cmp
popf
sub
ds
jne
clc
fists
arpl
imul
je
xchg
adc
adc
outsb
flds
mov
jo
gs
loop
fucom
xor
cmp
ss
xor
inc
inc
aas
loop
inc
jo
cmpsb
mov
les
aad
dec
adc
add
and
mov
sbb
call
or
pop
test
pop
dec
mov
inc
dec
adc
inc
pop
and
int
mov
scas
jp
ss
adc
sub
call
bnd
mov
cmp
mov
dec
cmc
push
cmp
lret
and
dec
push
lods
fnstcw
cld
push
jmp
add
push
xlat
mov
and
bound
aam
in
inc
ret
fstpl
ret
add
insl
mov
xchg
xchg
jge
inc
xchg
aam
push
jmp
movsb
xor
test
aaa
sub
cmp
mov
andb
std
and
pop
push
adc
adc
cmp
sbb
pop
imul
jnp
sbb
call
cld
flds
das
inc
lret
inc
out
jno
sub
imul
jns
pop
out
sub
lds
stos
lods
stc
xchg
cmp
adc
leave
push
loopne
aaa
lock
pop
xor
adc
xchg
cmp
xchg
jbe
fxch
adc
dec
inc
insb
out
mov
or
in
cmp
xchg
and
int
adc
pop
sbb
xchg
push
jl
xor
ja
imul
pop
add
and
in
sbb
inc
jb
aaa
fidivrs
cmc
pop
leave
mov
sbb
dec
leave
fimuls
xor
insl
mov
lcall
jmp
in
xorb
stos
pop
dec
enter
sbb
icebp
stos
cld
inc
add
sbb
outsb
jbe
push
pop
jae
add
insb
das
push
ja
cmp
or
pop
add
sub
push
add
data16
sahf
rclb
mov
cmp
or
adc
jle
sbb
shrl
or
inc
out
fucomi
pop
test
dec
icebp
adc
scas
jb
fbld
xchg
or
fcoms
out
out
push
dec
aam
and
or
mov
adc
dec
jnp
push
aam
push
ret
pop
in
fnstcw
in
or
pop
and
fdivrl
jnp
das
rcrb
arpl
or
pushf
jp
gs
add
mov
ljmp
cmp
mov
inc
push
sbb
aaa
pop
sbb
pop
fwait
clc
add
pop
fisttpl
rcll
lret
adc
popa
mov
pop
mov
jl
inc
inc
jge
inc
mov
mov
jp
sub
adc
inc
xor
testl
in
pop
add
and
loope
inc
push
mov
or
inc
std
aaa
dec
pop
push
pop
mov
outsb
jb
ret
lods
mov
or
dec
push
cs
xor
sti
or
in
mov
and
mov
inc
test
lret
xsha1
cmpsb
dec
ds
clc
cmpsl
add
inc
or
popf
add
xchg
stos
jl
push
outsl
xchg
loope
xor
push
cmp
mov
rcrb
push
outsw
insb
aam
add
push
roll
push
gs
adc
lret
inc
add
push
and
lcall
mov
outsl
fscale
pusha
push
aad
sti
lahf
fbstp
stos
mov
dec
jne
jp
push
fs
add
jl
push
adc
rol
push
outsb
mov
inc
fmulp
cs
adc
popa
jbe
fsubr
neg
add
lret
jns
inc
mov
aaa
or
pop
mov
pop
dec
nop
cmpl
dec
jne
aaa
out
das
data16
dec
shll
and
mov
pop
sti
sbb
jecxz
xchg
mov
and
mov
repz
aaa
popf
dec
inc
mov
xchg
imul
pop
dec
inc
add
dec
mov
adc
es
lret
stos
bound
push
in
dec
pop
xor
jecxz
cmp
push
jno
pop
push
inc
jbe
shrb
test
aaa
xchg
adc
pop
imul
lret
fidivrl
mov
sub
mov
mov
add
out
mov
pop
pop
fdiv
xchg
bound
arpl
test
aaa
sbb
mov
cmpsb
mov
inc
int
fsubl
pop
les
inc
sti
dec
pop
sbb
cmp
andl
out
jae
or
or
xor
cmpsl
scas
dec
cmp
out
push
xlat
cmp
dec
pusha
cmp
sub
mov
outsb
mov
stos
mov
adc
jo
lods
and
sub
or
push
inc
jle
sub
cld
loope
movsl
inc
push
push
adc
cs
sbb
stc
jl
outsb
push
xor
stc
fldl
jle
push
aaa
dec
pop
fs
pop
addr16
scas
inc
daa
ds
mov
cmp
cs
scas
filds
mov
cwtl
push
mov
sub
cmp
loopne
pop
lods
mov
jae
or
push
arpl
pop
mov
stos
inc
arpl
mov
bound
aaa
xor
add
lods
adc
xor
iret
inc
xor
sub
fdivrp
sbb
outsb
test
cmp
cmp
add
xchg
das
inc
push
cmc
fs
jg
jle
push
push
out
sub
repz
fimull
fwait
in
mov
fnstcw
xchg
sti
pop
inc
xchg
mov
adc
adc
cwtl
jg
add
push
and
mov
fstp
js
sbb
xorb
mov
adc
add
pusha
xchg
push
test
jle
jl
inc
enter
fsubrs
shr
cmp
or
xor
fnstsw
cs
and
or
jl
dec
loopne
adc
mov
imul
lcall
fistpll
in
lcall
inc
xor
pop
das
int
aam
outsl
mov
push
inc
ss
mov
xor
push
test
frndint
xchg
dec
lahf
out
repz
push
sub
clc
insl
push
fstl
sub
or
pop
ret
inc
pusha
hlt
aaa
mov
pop
aam
in
pop
insl
out
jecxz
xor
sbb
ja
xchg
inc
mov
mov
shr
dec
and
popa
jle
xchg
movsl
aaa
mov
sbb
das
imul
sbb
mov
repz
out
lock
call
test
sbb
fs
mov
negb
dec
mov
fldenv
les
pop
jmp
mov
add
mov
inc
push
push
sbb
lahf
or
sbb
inc
outsl
js
cmpsl
mov
pop
in
mov
lcall
es
jne
adc
lcall
sub
pop
in
push
ss
sbb
stc
cwtl
mov
add
sub
xor
arpl
pop
cmp
and
fwait
pushf
aad
pop
pop
insb
cmp
sub
fbld
jle
mov
outsb
repz
pop
pushl
cmp
outsl
daa
int
cmpsb
mov
into
push
leavew
or
nop
cmp
mov
xor
adc
popf
dec
jb
pop
pushf
xchg
divl
push
iret
mov
aas
jmp
inc
insb
stc
inc
dec
cli
push
inc
in
inc
mov
pop
js
mov
notb
pop
cmp
arpl
aam
lret
adc
jp
aad
inc
pusha
fdivs
adc
pop
cmc
out
or
jne
sub
icebp
sbb
pop
pop
xchg
test
or
movsl
push
cmp
push
sub
loopne
ds
inc
mov
push
push
pop
cld
fldl
push
pop
ret
sbb
push
push
aas
mov
adc
fisttpll
rolb
clc
rcrb
jmp
cld
pop
hlt
adc
outsl
sub
jne
rorb
out
rorl
jns
jmp
aaa
dec
sbb
lock
fiadds
and
packssdw
lret
cmp
mov
jge
inc
dec
bound
add
fsts
pusha
ljmp
mov
test
mov
cmpsl
arpl
cmc
and
movsl
icebp
add
and
push
mov
push
sbb
test
xchg
in
scas
add
sbb
data16
js
imul
mov
loopne
imul
imul
mov
in
fistl
and
xchg
adc
fdivs
in
popa
push
xlat
pop
mov
sti
rorb
inc
and
cwtl
adc
jp
cmpsl
mov
mov
test
push
cld
inc
dec
inc
lret
in
rolb
lock
mov
inc
jecxz
insl
fisttpll
shrl
lods
sub
pop
mov
icebp
mov
movsl
sahf
push
in
or
xchg
not
cld
push
lock
and
nop
out
jp
aaa
outsl
inc
mov
movsl
push
cmpsl
dec
push
fistpl
jge
pop
cs
popf
ds
ds
in
jo
adc
or
int3
xor
mov
test
es
imul
xlat
insb
fsubs
inc
jl
enter
sub
push
into
sbb
cmpb
rcl
fisttpll
sbb
add
mov
aaa
and
push
repz
stc
push
movsl
and
xorb
dec
pop
cwtl
or
lret
sti
xor
pop
notb
outsl
cmp
sub
dec
imul
mov
mov
xor
je
sbb
popa
in
mov
je
inc
add
add
add
mov
dec
push
cltd
icebp
sub
jnp
inc
leave
cmp
pop
adc
inc
dec
aaa
outsb
pop
mov
iret
push
pop
inc
cmpsb
cmp
imul
adc
pop
insl
push
add
icebp
push
arpl
lds
nop
xchg
mov
cld
xchg
pop
cli
fcoml
in
cmp
sbb
or
cmp
xchg
mov
sub
mov
loope
rol
xor
enter
lods
pop
fistpll
ret
jo
push
std
popa
jp
mov
sub
loopne
loope
insl
mov
fwait
mov
dec
out
or
data16
arpl
jne
bound
loop
inc
popa
pop
out
into
test
movsl
jl
cli
fstps
inc
aaa
inc
pop
shr
push
mov
lret
add
inc
fucomi
dec
xchg
cmpsl
int3
insb
jo
push
dec
cmpb
push
xor
mov
rolb
cmpsl
jle
xor
xchg
xchg
jecxz
inc
xor
cld
pushf
push
adc
sub
push
pop
xchg
ljmp
ror
pop
cmpsl
sub
divl
fcoml
xchg
outsb
cmp
rcll
push
sbb
negl
pop
add
lret
cs
or
xchg
push
dec
addr16
out
push
je
fwait
push
in
movsb
lods
push
push
pop
jle
dec
fsubl
push
aaa
mov
shll
add
jge
jecxz
pop
mov
lea
ja
jle
out
jae
adc
cmp
jle
pop
outsb
ret
jg
js
icebp
dec
pop
inc
cmpb
clc
pop
cmp
cmp
mov
jne
sub
test
ljmp
mov
fs
sub
fnsave
outsb
jo
loop
push
stos
pop
push
inc
pop
push
sbb
hlt
inc
sti
mov
jecxz
loopne
insl
sub
xchg
pop
pop
mov
fistpl
cli
jl
jns
test
ljmp
andl
test
or
sahf
push
mov
test
pop
dec
fsubrs
dec
mov
mov
pop
xchg
or
jbe
mov
dec
xlat
xchg
xchg
imul
pop
xor
fisttpl
and
je
cmp
xchg
push
sub
mov
in
xor
es
sbbb
rcrb
mov
jne
hlt
cmp
mov
es
aaa
cli
xchg
dec
dec
xor
rcrl
test
ret
sar
push
mov
sbb
and
jno
pop
int3
data16
mov
out
adc
outsl
mov
push
icebp
push
xchg
pop
sub
js
jmp
cltd
movsl
mov
push
sub
out
rcrb
push
loope
sub
and
mov
bound
ss
incl
das
popw
adc
xchg
ds
or
push
movsl
test
fwait
and
push
ficoms
lahf
shll
imul
mov
pop
lds
dec
dec
pop
stos
mov
stc
jae
mov
lcall
sti
cmp
push
pop
or
cmpsb
cltd
arpl
dec
dec
jmp
out
mov
jae
inc
decb
cld
cltd
outsb
in
dec
cmpsl
scas
fsubs
pop
push
add
jecxz
pop
out
nop
mov
dec
fidivrs
inc
std
jo
fwait
ret
jns
fdivs
imul
jge
jno
test
mov
cld
pop
sbb
sti
push
cwtl
or
in
pop
mov
in
mov
mov
pop
xchg
lock
in
add
or
push
ret
mov
inc
xchg
jecxz
pop
in
inc
ja
scas
sbb
adc
xchg
sti
dec
pop
insb
inc
jle
xchg
push
pop
sbb
in
fbstp
aaa
adc
fs
add
shl
fisubl
dec
leave
mov
lcall
movsl
inc
out
jl
pop
mov
rol
jmp
mov
notb
pop
popf
sbb
cmp
inc
shl
lock
sbb
and
sbb
in
es
outsl
mov
shl
inc
cwtl
xchg
stc
xchg
push
push
pushf
inc
push
in
or
insl
outsb
pop
dec
js
gs
lds
out
int
mov
cmpb
call
adc
jno
pop
mov
loopne
mov
xchg
or
or
loopne
lret
rclb
mov
icebp
mov
xchg
mov
out
mov
adc
popf
push
pop
rcl
loopne
stc
jge
mov
xchg
mov
mov
stos
xchg
cmc
sub
inc
mov
pop
or
mov
or
mov
insl
fdivl
fs
pop
dec
lret
pop
jp
aad
xchg
je
mov
es
mov
in
push
cs
pop
fistpl
adc
pusha
in
mov
mov
adc
addb
xchg
adc
add
pop
inc
cmp
push
adc
push
loope
sub
mov
dec
jbe
xor
xchg
dec
pushl
jae
mov
and
push
mov
sahf
aam
lds
frstor
pop
jecxz
add
jb
or
xchg
xchg
into
cld
dec
inc
mov
inc
dec
jne
stos
arpl
mov
mov
das
xor
inc
fldt
xchg
in
lods
inc
push
cwtl
rol
or
scas
push
pop
nop
sbb
lea
jno
icebp
push
int
pop
push
lds
push
insb
push
add
aaa
sub
pusha
movsb
mov
mov
xchg
jne
adc
mov
mov
fmuls
test
inc
add
das
add
lret
xchg
sbb
rcr
pop
and
cs
test
inc
stos
jb
es
aaa
add
loope
hlt
nop
mov
add
sbb
test
sar
repnz
mov
xor
int
loope
andl
rcrb
mov
mov
repz
or
outsl
push
adc
xor
fwait
daa
bound
outsl
loopne
aas
ss
pop
rep
sub
lahf
push
aaa
cmp
mov
mov
iret
sbb
xchg
jo
arpl
js
dec
ss
aaa
pop
lret
popa
repz
add
jo
push
push
and
cmp
push
mov
cltd
mov
dec
mov
xchg
faddl
cmpsl
stos
es
jge
shlb
sub
ja
test
cmp
js
or
mov
mov
bound
xor
shll
mov
and
xor
dec
add
repz
imul
inc
pop
mov
sub
fmull
or
rorl
jge
adc
mov
pop
enter
stc
aaa
mov
loope
cmpsl
add
clc
imul
fcmove
jecxz
mov
lods
enter
or
repz
movsb
movsl
push
push
dec
fyl2xp1
jl
lea
mov
scas
jno
pop
jmp
mov
mov
inc
push
jge
iret
lret
loope
dec
jnp
test
psubsb
clc
sub
push
and
jbe
leave
inc
and
sub
mov
add
pop
adc
jmp
fnstcw
push
sbb
int3
shll
ficomps
push
lock
jb
ret
xor
test
cwtl
es
mov
xchg
stos
loope
repnz
mov
addl
inc
cli
xchg
add
sub
out
sbb
test
movsl
push
push
pop
test
std
xor
fsts
repz
shlb
or
mov
push
sub
mov
pusha
sarb
mov
les
repnz
jo
fstp
pop
daa
cmp
int3
inc
sub
mov
or
mov
sbb
lahf
cmp
rep
pushf
rorl
adc
int3
mov
mov
rcl
push
ret
dec
and
lea
mov
mov
inc
lret
aaa
pop
cmc
push
jp
sub
and
js
pusha
inc
sahf
push
insb
stc
test
sub
sbb
adc
pop
or
inc
lods
cmpl
cmpsl
xchg
dec
lock
xor
push
arpl
subb
sbb
pop
adc
int
jmp
push
adc
or
je
std
daa
pop
jge
adc
mov
mov
in
loopnew
dec
aam
movb
mov
scas
pop
adc
out
mov
xchg
cltd
stc
aaa
mov
adc
adc
or
inc
lret
mov
gs
les
push
shl
aad
push
outsb
aad
add
or
xchg
lret
dec
inc
lcall
push
leave
cwtl
fmul
pop
fsubrp
pop
jbe
mov
jbe
adc
repz
jle
xchg
pop
mov
hlt
int3
sti
sbb
cmp
mov
stos
test
dec
xchg
and
adc
leave
loope
pop
pop
imul
out
cltd
ret
stos
loope
jl
dec
add
shll
jne
fimuls
iret
mov
stos
pushf
sub
push
rcl
sub
ds
ss
scas
cs
outsb
sbb
test
jae
cld
push
ret
pop
jg
mov
xor
fwait
aam
cmp
mov
icebp
repz
dec
jmp
xor
xchg
cmpsl
sbb
dec
frstor
push
mov
pop
js
in
das
imul
in
aaa
jl
das
test
sub
lahf
repnz
pop
xor
fwait
repz
aaa
add
fistpl
aam
lcall
inc
jns
mov
xor
sub
data16
jp
pop
shrb
jbe
sbb
movsl
fimull
arpl
cwtl
lea
cltd
inc
jbe
mov
outsb
inc
and
adc
sub
iret
mov
clc
loop
add
sbb
mov
mov
add
mov
dec
mov
aaa
push
inc
xchg
mov
aam
sub
loopne
pop
stos
pop
ret
outsb
mov
add
and
lcall
push
cld
inc
out
sbb
xor
mov
and
or
loope
sbb
cmpsb
arpl
pop
iret
inc
in
dec
jne
inc
mov
mov
stc
mov
scas
adc
pop
ret
jmp
ja
cmp
sub
inc
jle
push
xor
mov
add
adc
jb
push
pop
stos
aaa
cmpsl
jns
sahf
ret
cltd
mov
icebp
into
xchg
test
jnp
pop
push
in
xchg
xor
fs
xor
icebp
popa
adc
pusha
mov
sbbb
sbb
ret
ljmp
movsl
ffree
and
imul
insb
cmp
pusha
dec
jb
mov
sbb
pop
mov
outsb
fcomps
sbb
pop
fnsave
jp
xchg
fcoml
and
outsb
push
sub
mov
push
and
pop
pop
gs
dec
insb
gs
nop
dec
je
jns
cmp
mov
cld
mov
cmpsl
jmp
pop
pop
popf
imul
or
and
and
mov
bound
and
aaa
or
scas
add
mov
ret
mov
aam
or
inc
pusha
cmp
cmp
adc
sbb
dec
flds
sub
inc
in
xchg
jnp
pop
sub
std
xchg
jb
sbb
adc
fwait
or
jp
into
push
aas
push
cmp
lahf
mov
push
cmp
lahf
inc
aas
mov
loop
jb
incb
aaa
sub
xchg
cs
sub
lock
sbb
decl
jl
adc
pushf
fiaddl
pop
mov
test
push
js
cmp
stos
repz
data16
aas
cltd
cmp
jmp
aas
mov
xchg
aaa
loope
push
sub
ret
mov
dec
outsl
int3
fwait
mov
loop
pop
popa
pop
scas
push
mov
adc
jmp
aam
orb
scas
pop
sbb
aaa
fidivs
ret
in
call
mov
sub
in
rcr
cmp
loop
out
xor
cmp
jbe
icebp
in
dec
dec
stc
mov
push
sbb
jmp
and
imul
test
adc
push
imul
jno
xchg
add
sbb
mov
cmpsb
aaa
jbe
stc
mov
pop
sub
sti
cwtl
jb
jae
pop
inc
mov
clc
xchg
inc
test
sub
and
int3
mov
xchg
mov
add
outsb
insb
jp
sub
pop
fstl
daa
xchg
ja
in
imul
fwait
imul
mov
and
inc
in
loop,pn
scas
outsb
std
sub
stos
dec
fdivs
sub
cmpsl
pop
pusha
ret
mov
adc
push
mov
das
xchg
and
icebp
fcoms
pop
aaa
movsb
add
push
add
or
cld
add
out
and
enter
fwait
dec
imul
inc
inc
hlt
adc
xchg
cli
andl
push
pop
rorl
push
cmp
xchg
push
mov
dec
pop
notl
jo
mov
cmc
mov
pop
mov
test
fcmovnb
mov
sahf
xor
mov
lcall
fsub
js
or
movsl
mov
sbb
sar
js
sti
pop
clc
sbb
pop
pop
inc
jle
orb
ja
dec
imul
mov
push
cmc
bound
jle
adc
adc
daa
mov
sbb
cld
in
aaa
add
rorl
mov
cwtl
popl
fistpl
test
or
insb
sub
scas
xchg
mov
mov
scas
pop
jl
sbb
push
push
hlt
sarl
aas
mov
test
sbb
sbb
add
in
movsl
aaa
mov
and
mov
inc
iret
repz
mov
in
lret
dec
cmp
mov
cmc
dec
out
push
orb
pop
and
jp
add
cmp
mov
pop
adc
nop
popf
rol
xor
rorb
jns
cmpsb
jmp
pop
cwtl
pusha
sub
mov
jecxz
imul
loopne
aad
pop
pop
mov
loope
jbe
push
pushf
mov
inc
add
movsl
cld
pop
movsl
js
lds
outsb
jo
cmpsb
cmp
or
mov
je
mov
nop
arpl
pop
jae
jge
xorb
cmc
jmp
data16
push
mov
in
in
movsl
shll
sbb
enter
dec
jmp
stos
push
mov
pop
pusha
bound
loop
mov
popa
mov
jno
jne
les
lea
int3
leave
mov
mov
mov
lcall
sar
adc
and
pop
jmp
scas
push
pop
fdivl
test
or
and
ret
mov
pusha
jno
cmp
scas
stos
xor
mov
stos
ret
mov
add
jmp
outsl
sub
aaa
sbb
xlat
loopne
adc
xchg
fisubrs
push
fwait
cwtl
scas
les
clc
mov
sub
jp
sahf
out
mov
fwait
pop
add
mov
dec
cmc
fmul
idivl
mov
popa
jl
in
xchg
int3
inc
add
xor
pop
icebp
mov
mov
sbb
pop
aaa
int
xlat
or
sahf
xchg
push
out
and
rorb
in
adc
in
addl
je
data16
or
cmp
fs
dec
push
test
mov
add
mov
jle
mov
icebp
lock
jl
jl
and
ret
sarl
jl
jbe
jae
es
inc
stos
int3
ds
or
data16
adc
sti
daa
pop
xor
xor
test
adc
or
pop
mov
inc
sub
movsb
sub
js
int3
mov
jle
inc
nop
stc
push
xor
lret
pop
cwtl
dec
iret
jbe
lret
adc
jb
sub
or
cli
aam
pop
adc
push
std
sub
cvtdq2ps
pop
jb
pop
inc
xor
xchg
aas
or
nop
sbbl
xchg
xor
pop
inc
jb
push
popf
aaa
inc
rorb
fsubr
ds
rolb
aaa
mov
mov
add
mov
sub
or
jb
mov
es
fstps
int
dec
enter
pop
jno
movsl
sahf
pop
dec
ljmp
push
sahf
in
inc
fisubrl
cmp
test
pop
push
ss
pop
out
popa
pop
pop
or
leave
lcall
cwtl
jl
push
movsl
test
es
loop
shrb
xor
xor
inc
mov
out
push
push
cltd
jle
lcall
repz
dec
pop
sbb
jae
sbb
shr
dec
adcl
sub
jae
out
add
outsl
shlb
adc
mov
in
ret
fldcw
or
addl
in
inc
daa
xchg
adc
jp
iret
aaa
aam
jo
dec
data16
push
subl
xchg
idivb
lcall
dec
aaa
jbe
shlb
int3
dec
sti
jle
cmp
inc
add
std
lret
sbb
les
nop
jb
xor
cmp
mov
sbb
cmpb
push
loopne
xor
pop
push
dec
into
push
sbb
nop
sbbb
fcoms
jne
xchg
repz
fdivs
mov
repz
loope
push
pop
cli
cmp
hlt
pop
cmp
sub
sbb
push
xchg
xchg
inc
push
lods
notb
lea
or
sub
mov
aaa
pop
pushf
or
pop
ljmp
std
xlat
pop
dec
scas
mov
push
loope
jle
mov
testb
aaa
jnp
pop
or
pop
in
aaa
xor
push
test
jae
movsl
jne
les
hlt
mov
in
cmp
jns
pop
sbb
cmp
fstps
inc
loopne
xor
pop
adc
sub
push
sbb
loope
add
bound
scas
test
jl
lods
pop
jns
mov
push
scas
jl
push
es
mov
and
xchg
out
dec
mov
mov
xchg
leave
bound
test
xor
insl
xchg
js
jae
jg
movsb
jecxz
lret
xor
sub
movsl
mov
adc
inc
repnz
sbb
jno
aad
jnp
movsl
in
sbb
stos
and
inc
outsb
xchg
push
repnz
mov
fildl
fbstp
mov
cmp
pop
ljmp
mov
call
aad
mov
adc
test
xor
jne
inc
addl
xchg
dec
jl
inc
insl
xor
cmpl
mov
ja
cmc
repz
mov
test
and
in
dec
jbe
mov
jl
sub
xchg
pop
inc
pop
jecxz
insl
xchg
jecxz
daa
sbb
je
sti
xorl
xchg
insl
mov
aaa
jae
cltd
jb
fs
test
dec
sub
arpl
nop
push
cmpsb
xor
sbb
jecxz
sbb
popa
push
or
loope
ret
out
loopne
sti
cltd
push
xchg
pushf
mov
sub
pushf
enter
sub
inc
std
jns
cmp
fidivrs
imul
data16
in
xchg
int3
add
stc
cltd
cmp
inc
pop
pop
inc
cmp
test
mov
sbb
loopne
aam
add
adc
pop
arpl
pop
inc
cmp
add
sbb
pop
ret
and
jge
outsb
xlat
cmpsb
rol
push
mov
mov
mov
dec
inc
scas
imul
inc
int
psrlq
scas
outsb
std
cwtl
gs
push
xlat
inc
aam
dec
or
sbb
dec
xor
push
and
arpl
sbb
inc
sbb
and
ds
pushl
jb
filds
xor
cmp
xor
fs
or
insb
pop
push
pusha
push
in
mov
icebp
loope
pop
add
lods
mov
movsl
arpl
lods
push
shr
and
hlt
std
cmc
ret
sbb
clc
pop
in
mov
cmp
cwtl
es
insb
adc
add
std
sti
and
adc
lods
mov
das
outsb
fnstenv
movsl
int3
and
in
xchg
dec
push
push
inc
inc
inc
fcoml
frstpm(287
cmp
pop
sbb
call
mov
dec
pop
loop
subl
fiadds
fistps
mov
pusha
sbb
shrb
inc
pop
add
je
add
adc
sarb
mov
jle
push
push
inc
xchg
fistl
pop
cmp
inc
shlb
and
pop
dec
out
mov
cmpsb
dec
pop
mov
jg
push
fabs
sub
jo
mov
xor
fisubl
push
fmul
cld
shll
xchg
add
inc
sbb
sti
lcall
sbb
stos
xor
clc
lret
fisttpll
lods
add
je
push
xor
stos
idivb
xor
lret
repnz
ss
movsb
jmp
pop
addr16
xchg
lret
cmp
push
mov
pop
mov
pop
add
jecxz
das
pop
int3
sbb
pop
add
cmp
dec
aaa
xchg
jns
mov
inc
adc
mov
jbe
or
mov
ja
repnz
add
jbe
imul
adc
inc
loope
movsl
dec
mov
jecxz
leave
dec
into
cs
cli
shlb
pop
jl
lea
aam
push
add
cmp
jae,pt
std
mov
inc
aaa
mov
fistpll
inc
loope
and
inc
sbbb
or
fidivs
add
push
xor
adc
repz
fwait
ret
mov
in
mov
dec
adc
addb
bound
dec
jp
cmp
adc
xor
mov
adc
ja
ja
fcompl
pusha
add
es
lret
mov
sub
in
jle
mov
shrb
xor
rorl
sbb
cli
cmpsb
outsb
arpl
es
aaa
cmpsb
cld
add
mov
pop
push
add
inc
cli
pop
or
aaa
mov
out
out
inc
jb
arpl
sub
fdivrl
test
out
stos
jle
loop
sbb
stc
cmp
push
jne
fadd
sub
add
out
ret
sub
daa
icebp
das
pop
adc
shlb
sub
mov
sahf
dec
sbb
rcr
lahf
jmp
pop
cltd
cmp
loopne
inc
scas
testb
jmp
push
data16
jp
sub
mov
scas
mov
lret
pop
js
mov
cmp
jle
xchg
repnz
adc
sahf
testl
imul
daa
cmp
pop
mov
jo
pop
insl
mov
lods
xchg
xor
mov
mov
xchg
jecxz
mov
adc
les
cmpsl
insb
mov
pop
scas
xchg
nop
adc
or
popf
orb
mov
xchg
pop
xchg
adc
and
pop
mov
push
mov
mov
cmpsl
in
sbb
leave
jle
sbb
mov
push
out
dec
dec
and
jbe
outsl
or
divb
jecxz
mov
bound
stos
mov
leave
int
loop
ret
sbbb
mov
repz
push
inc
cmp
jl
pop
aaa
mov
push
inc
enter
fcmovnu
xor
pop
bound
dec
movsl
aaa
loop
jp
mov
jo
aas
pop
stos
mov
popa
adc
push
jne
mov
mov
add
stos
outsl
xchg
cmpsb
lahf
mov
xchg
or
dec
aas
ss
inc
leave
std
mov
xor
mov
insl
push
sub
push
push
movsl
and
xchg
clc
mov
cmpsl
fcoml
lods
test
and
and
mov
mov
fsubl
pop
cwtl
fwait
inc
jne
xchg
aaa
pop
pusha
inc
test
cmp
jmp
sub
call
pusha
add
mov
lret
sti
cltd
push
fcmovu
aaa
imul
push
jle
mov
pop
push
ret
jp
shlb
jns
mov
data16
loope
stc
fistl
into
push
pop
dec
mov
out
out
outsb
in
jle
jle
pusha
stos
hlt
and
dec
pop
fisubrl
pop
jbe
ds
mov
outsb
jo
mov
scas
cwtl
xchg
dec
lock
scas
push
incb
pop
mov
repz
push
dec
aaa
sbb
xchg
sbb
xchg
repz
jl
sbb
dec
lods
mov
movsl
inc
leave
dec
sbb
popf
icebp
lcall
xlat
imul
mov
int
in
jmp
xchg
pop
scas
fldenv
sbb
xor
mov
cmp
lahf
insb
outsb
or
jg
inc
shl
adc
in
leave
xor
rclb
mov
clc
test
das
in
add
add
xor
test
jne
xchg
ss
outsb
pop
jo
inc
repz
and
cmpsb
into
jne
or
sub
mov
sbb
pop
or
mov
mov
sub
out
jle
icebp
outsb
push
std
mov
xchg
push
les
test
test
mov
ret
pop
add
sbb
fidivl
stos
cmpsb
test
adc
push
or
pop
and
fnstenv
mov
pushf
lods
lcall
and
xchg
and
lds
leave
or
add
aaa
stos
jmp
fdivrl
ret
pop
loope
ret
add
xchg
mov
clc
int
xor
fucomi
je
push
sbb
sub
mov
imul
shlb
xor
push
out
rcr
push
rcrb
inc
das
pop
push
lods
jp
ja
mov
sti
sbb
aam
scas
cmp
lea
shl
data16
in
orb
outsb
filds
in
pop
sbb
into
out
cmp
mov
int3
pop
cmp
xchg
call
lods
rcrb
loopne
stos
jnp
icebp
rep
or
or
cmpb
aam
mov
ret
out
sbb
and
out
sbb
push
jb
dec
aaa
repz
mov
lcall
lret
mov
neg
cmc
lods
jg
adc
test
lds
icebp
xor
aad
ss
cltd
sub
dec
test
add
pop
jl
pop
xlat
sbb
pop
dec
xor
scas
mov
mov
inc
lahf
repz
jno
sbb
inc
cmpsb
iret
sbb
pop
sub
mov
xor
sub
sahf
das
cmp
add
sti
push
dec
pop
insb
xchg
pushf
mov
push
mov
out
icebp
fwait
iret
pop
sarb
outsb
iret
cmp
imul
dec
fstl
in
sbbb
mov
push
inc
and
xlat
ficomps
stc
sub
test
mov
dec
push
icebp
mov
insb
subl
mov
mov
adc
mov
dec
in
sbb
clc
outsb
icebp
mov
enter
cli
push
adc
pop
add
adc
xor
data16
push
addr16
fcoml
cmc
push
push
ljmp
add
std
sti
xchg
aam
iret
ja
jl
cmp
cwtl
in
lahf
mov
pop
out
jmp
outsb
jno
mov
std
sub
gs
fs
fildl
mov
mov
pop
fisubrs
mov
lods
imul
pop
outsl
ror
into
jl
dec
jno
sbb
pop
sbbb
imul
ja
call
rcl
aam
ss
xor
mov
ljmp
pusha
cmp
arpl
or
mov
and
sbb
in
jbe
push
outsl
jbe
filds
int3
jbe
mov
into
push
pop
add
or
jp
std
lret
addb
aad
cwtl
jmp
jl
popf
pop
aaa
in
pop
test
xor
jmp
sarl
inc
ret
jb
jb
pop
mov
insb
pop
push
jmp
mov
dec
test
and
fstl
popa
fldenv
push
int
imul
pop
loope
push
push
mov
mov
out
xchg
stos
inc
dec
adc
inc
ds
fists
loop
in
xor
leave
mov
addr16
or
push
push
outsb
pusha
sbb
mov
daa
pop
add
ror
rol
jp
out
fsubrs
arpl
pop
shl
mov
enter
xchg
lret
cltd
es
loop
aam
stos
js
fwait
das
fcom
sub
mov
mov
sahf
lock
fidivrs
xchg
xchg
ffreep
cmp
sub
pop
dec
push
pop
cli
outsb
repz
aas
mov
sub
xor
fisttpl
stos
cmp
adc
and
out
xor
jbe
sbb
sbb
neg
add
mov
xor
mov
clc
addr16
test
movsl
in
nop
mov
repnz
mov
jge
das
pop
sarb
jo
pop
in
sbbb
mov
sub
jle
pop
xor
jb
outsl
ja
mov
inc
sbb
sbb
mov
jmp
mov
fwait
cmp
rclb
add
fs
fmulp
push
jae
push
pop
mov
repnz
adc
pop
fcmovnu
mov
mov
xor
and
mov
mull
mov
pop
lahf
lcall
pop
popf
ds
rorl
es
mov
int3
pop
setno
sub
stos
addl
add
aad
lods
shl
add
mov
cltd
mov
sbb
hlt
clc
cmpsb
sub
icebp
pop
xchg
cmpsl
orl
arpl
mov
ret
imul
push
repnz
pop
fldenv
and
mov
jmp
mov
xor
mov
and
xchg
pop
in
push
push
sti
mov
push
xchg
mov
paddusb
pop
subb
pop
out
sbb
pusha
pop
pop
hlt
lock
push
jmp
jp
out
xchg
pop
pop
mov
ret
jns
lret
fwait
jge
inc
pop
cmp
pop
in
fstl
inc
lahf
cmp
jb
out
cli
stc
mov
mov
push
xchg
dec
mov
pop
and
and
ljmp
aam
adc
cmp
cli
jg
nop
aaa
sbb
xchg
fnstcw
push
loope
out
push
scas
js
mov
or
jle
cltd
and
out
mov
inc
out
push
mov
movsl
cmp
push
pop
inc
cld
pop
pop
aam
dec
nop
mov
xchg
add
sbb
cmp
pop
mov
push
cmpsl
add
das
adc
or
lcall
fdivr
data16
jae
pop
jb,pt
mov
push
cmc
sub
mov
aas
mov
mov
lods
adc
in
stos
and
pushf
lret
and
cmp
inc
cmp
dec
add
ss
fisttpll
mov
add
imul
pop
aam
shll
pop
lret
movsl
push
xor
or
sub
push
pop
lret
jns
arpl
testl
xlat
lds
xor
cli
and
push
dec
add
outsl
nop
inc
lods
cmc
outsb
stos
bswap
pop
or
js
nop
xchg
cmp
sbb
mov
mov
inc
pop
push
mov
loope
into
pusha
out
jg
mov
cmp
icebp
out
lcall
fildll
xchg
das
jno
mov
sbb
insb
jo
lcall
xchg
sahf
and
call
add
mov
cmp
cmp
adc
push
aaa
push
and
and
call
loopne
and
cli
gs
in
lret
jp
mov
lcall
sbb
push
mov
lret
inc
out
stos
aas
push
out
fsts
or
outsb
js
scas
push
enter
mov
stos
and
pop
xchg
lcall
xchg
std
fsubrs
test
bound
mov
xchg
jne
mov
cmp
add
push
or
arpl
sub
xlat
in
pop
sub
dec
lods
xor
jo
xchg
dec
inc
push
fildll
xor
jle
mov
add
or
pusha
cmp
push
popf
js
aaa
pushf
stos
adc
popa
sbb
lcall
movsl
lods
clc
lcall
inc
movsb
in
cld
dec
insl
imul
pushw
mov
inc
sub
dec
jle
and
fnstsw
mov
push
cmp
popf
pop
cmpb
aaa
sub
imull
jne
popa
mov
sub
inc
or
pop
push
sbb
mov
lock
jo
adc
mov
mov
rol
fidivrl
cli
push
sbb
loopne
mov
fnstcw
cltd
lahf
enter
pusha
and
or
dec
in
cmc
dec
leave
mov
std
push
mov
dec
add
pop
inc
cmp
and
ds
jmp
icebp
inc
gs
test
pop
cmp
das
pop
mov
jns
rol
sbb
lock
inc
sti
adc
mov
pop
xchg
mov
dec
pop
cmpsl
fsts
adc
ds
loop
dec
dec
stos
mov
mov
icebp
mov
mov
lods
mov
add
bound
add
pop
cmp
jl
sub
pop
pop
cmp
insl
stos
sbb
loop
cs
iret
push
pop
mov
sub
push
bound
mov
cmp
sbb
pop
test
imul
and
mov
sbb
movsb
mov
mov
or
xchg
insb
xorb
scas
mov
or
cmp
fcompl
in
rorb
jp
cwtl
in
push
call
mov
xchg
sub
arpl
loop
cmp
push
aad
pop
call
jb
test
leave
movb
xchg
lods
pop
pop
outsl
lcall
mov
fucom
mov
icebp
aaa
aam
dec
and
cmp
loop
push
and
add
or
insb
xchg
mov
cmpsl
lods
dec
inc
clc
jne
add
dec
ret
and
xchg
dec
pop
pop
outsl
rcrb
cs
sbb
sti
stos
neg
xor
add
das
ljmp
cmp
mov
mov
or
jl
stos
xor
push
jmp
sub
dec
fcomip
fstpl
and
mov
sub
or
aaa
pop
pop
and
mov
xor
std
jne
loopne
ret
fsub
and
mov
mov
ds
push
and
xlat
ficomps
xlat
sub
call
addl
xorb
les
mov
shrb
cmp
mov
dec
aad
add
xor
sub
orb
outsb
pop
sbb
cmpsl
jg
cmc
push
sbb
sahf
in
cmc
loopne
dec
nop
adc
push
fisubs
clc
xchg
cmp
arpl
inc
divb
mov
inc
roll
adc
jbe
in
std
mov
lea
dec
pusha
pop
fmulp
cmp
ljmp
jbe
jne
shl
mov
sub
stos
bound
imul
mov
mov
out
enter
stos
rep
sub
loope
lcall
pusha
add
lahf
jb
sub
loope
sti
pop
jp
insl
and
inc
into
inc
jnp
jge
inc
xchg
dec
mov
sub
xchg
sbb
adc
push
sub
in
repz
adc
out
dec
in
stos
push
mov
mov
cmp
sbb
aas
push
jge
jle
jle
fwait
std
add
enter
jnp
cmp
mov
xchg
xchg
mov
cmc
pop
popf
ret
cmp
sbb
dec
pop
repz
push
dec
mov
in
dec
pop
shl
sbb
sbb
lcall
adc
jo
cmc
mov
arpl
imul
mov
xchg
mov
je
lods
and
popa
push
mov
sub
push
lahf
adc
aam
fs
inc
aam
and
les
pushf
outsb
push
mov
in
sbb
scas
mov
repz
inc
inc
jns
leave
pop
sbb
cmp
or
push
sbb
jle
mov
iret
insl
mov
lcall
fsubp
fnstcw
xorl
inc
push
and
in
in
nop
inc
push
stos
mov
push
neg
fnstcw
inc
sbb
movsl
rcrb
bound
andb
xchg
fsubs
jnp
adc
pop
popa
aaa
mov
pop
ret
sbb
inc
outsb
cmp
mov
pop
jle
sbb
cmc
xor
in
hlt
stos
pop
into
aaa
push
sbb
fdivrl
clc
sbb
mov
mov
jp
aaa
xor
jle
hlt
and
mov
rcrb
cmp
arpl
into
or
insb
sub
jb
into
das
gs
dec
aam
icebp
adc
mov
pop
and
pushf
xchg
stos
mov
xor
sahf
push
xchg
pop
pusha
cmp
repz
cmp
sarb
adc
cli
fnstcw
jbe
cmp
pop
sub
in
sbb
pop
cmp
in
mov
push
xchg
enter
rorl
or
mov
scas
push
pop
sahf
dec
xchg
sbb
mov
outsw
add
inc
or
data16
fwait
xchg
add
popf
or
ds
imul
mov
inc
xchg
push
and
cmpsb
mov
cmp
push
xor
sub
outsb
push
test
in
sub
fwait
mov
movsl
mov
inc
pop
cmp
loope
adc
and
mov
loopne
mov
cmp
shlb
pop
hlt
push
nop
fwait
dec
push
bound
imul
cmc
adc
div
sti
sub
push
add
xor
insb
jnp
cmp
xor
pop
mov
shrb
scas
push
jbe
fnstcw
arpl
lret
mov
mov
out
pusha
pop
cmp
push
adc
movsb
mov
pop
pop
out
pop
push
loopne
fdivrs
and
jp
pop
aaa
das
xchg
andl
pop
pop
push
pop
repz
jo
aaa
mov
ljmp
sub
mov
in
push
hlt
adc
lahf
ret
inc
orb
mov
cmc
push
outsl
add
lea
push
int
or
xor
mov
enter
in
mov
ljmp
inc
fnstsw
pop
lods
mov
loope
xor
outsl
sahf
and
out
lcall
jmp
insl
orb
pop
and
xchg
add
outsl
inc
pop
repz
ds
mov
gs
fnstenv
mov
outsl
mov
push
dec
push
mov
frstpm(287
mov
cmp
dec
cmp
in
aas
xchg
push
push
jmp
loope
fbstp
adc
inc
mov
xchg
xchg
je
dec
mov
jg
mov
sbb
jecxz
jle
mov
imull
int
jge
add
jb
inc
add
jmp
les
push
nop
mov
cld
addr16
iret
mov
imul
arpl
out
mov
loop
sub
add
lret
outsb
aaa
and
pop
xor
add
cmp
imull
cwtl
add
cmp
jle
mov
das
fcoms
bound
lock
mov
mov
pop
adc
clc
inc
rcll
cltd
jl
out
mov
icebp
outsb
testl
mov
dec
pop
adc
add
jp
shll
push
dec
mov
aad
push
pop
and
lcall
arpl
mov
fisttps
std
dec
mov
in
int3
outsb
jb
dec
fsubl
adc
pop
cmp
and
push
or
xor
int3
mov
pop
movsl
pop
xchg
sbb
inc
inc
or
ret
mov
sub
inc
pop
mov
sbb
outsl
cmpsl
mov
fmul
xor
cmp
adc
xchg
out
jnp
cmpsl
mov
add
inc
ror
fwait
pop
xchg
cs
mov
call
fsub
aam
jb
fists
sub
mov
or
pop
or
call
mov
clc
dec
cmp
sbb
imull
inc
mov
cmp
fimuls
lock
leave
jecxz
shlb
sbb
frstor
loopne
dec
and
cmp
sbb
inc
inc
rclb
hlt
gs
inc
mov
icebp
jmp
cmp
outsb
pop
xchg
dec
out
inc
push
mov
sahf
fistpll
lret
out
test
mov
mov
cmpsl
jl
rorl
leave
aaa
in
pusha
pop
and
add
je
in
icebp
adc
add
push
and
mov
imul
int
fcoms
icebp
cmp
jl
shlb
pop
inc
dec
add
aaa
cmp
dec
popl
sub
mov
lahf
shll
add
jmp
and
xor
mov
loopne
iret
cwtl
loopne
push
movsl
out
test
bound
ret
jle
outsl
push
pop
dec
lret
fs
loope
addr16
xor
pop
inc
mov
sub
in
or
outsb
sti
aaa
repnz
cmc
jge
xor
inc
mov
int
xchg
aam
jae
push
rcll
stos
mov
sub
push
cmpsl
jge
insl
in
fstps
jp
leave
push
mov
xor
out
arpl
call
inc
shrl
inc
repz
je
cmp
adc
std
xchg
out
or
xorb
outsl
mov
imul
mov
push
push
inc
inc
dec
sarl
arpl
bound
adc
xor
xchg
scas
test
je
cmc
inc
cltd
in
jno
sub
cmpsb
sbb
mov
xor
or
xchg
mov
int3
push
mov
repnz
inc
ds
data16
sub
test
icebp
lret
incb
add
cmp
icebp
jge
pop
sti
mov
adcb
mov
and
dec
in
aaa
lods
pop
push
pop
lea
xchg
jle
aas
mov
or
sub
imul
pop
mov
fldl
inc
xor
pop
xchg
xor
inc
xor
in
cli
add
inc
dec
mov
jle
gs
in
push
and
mov
dec
jmp
sub
sbb
aaa
and
and
icebp
jle
xchg
fdivl
cs
mov
rcr
out
negl
sbb
xchg
in
inc
fwait
push
test
cmpb
sub
movb
imul
movsl
mov
xor
lods
mov
cmp
cmp
js
aad
or
rolb
mov
push
adc
jne,pt
xchg
movsl
cmpsb
popa
and
fdiv
jae
int
int3
lods
pushf
nop
in
mov
ljmp
insb
jnp
and
stos
movsl
arpl
add
daa
in
mov
jno
aam
dec
inc
dec
cmpsb
stos
jno
push
cmp
adc
mov
pop
gs
adc
and
ss
aas
xchg
lret
das
pop
loope
or
pop
inc
dec
fsubrl
int3
push
idiv
mov
cld
loop
sti
das
inc
jne
fbstp
inc
pop
push
lret
popa
loope
aam
jno
jmp
xchg
dec
sub
pop
js
push
movsl
mov
les
xor
sahf
lahf
xchg
icebp
fcomip
loopne
lahf
add
call
rolb
dec
call
mov
mov
sbb
jp
pop
pop
mov
leave
rcrb
pop
sbb
bound
xchg
fistps
cmpb
mov
mov
imul
mov
sbb
inc
aaa
andl
insb
mov
cmpl
pop
add
and
pop
fsts
in
push
adc
out
jbe
shll
out
mov
dec
xor
pop
aam
mov
aaa
sarb
in
cmp
ror
mov
sbb
pusha
xchg
les
aam
mov
stos
out
jns
dec
pop
pushf
mov
and
ss
lret
cmp
and
bound
xor
sbb
outsb
push
daa
mov
sahf
int
sbb
pop
mov
push
push
mov
adc
sub
sub
cmp
shlb
int3
pop
insl
sahf
std
jl
sub
daa
outsl
sub
out
daa
dec
pop
cld
add
pop
loope
jp
lods
fs
inc
enter
jmp
inc
push
lods
pop
arpl
pop
mov
cld
scas
add
shlb
test
popf
pop
daa
and
inc
xchg
add
ds
inc
sti
cmpsl
mov
cmp
js
push
add
xor
xchg
test
imul
cld
in
sub
push
mov
xor
cmp
cmp
lock
enter
jne
inc
and
dec
pop
adc
arpl
scas
inc
ja
push
inc
outsl
movsb
mov
bound
in
jo
ret
jbe
xor
cmp
pop
jae
mov
bound
loopne
mov
loope
pop
add
sbb
push
inc
ds
push
lret
push
mov
in
inc
inc
pop
scas
ja
or
mov
and
xchg
int3
setb
mov
sub
mov
mov
xor
stos
nop
mov
shr
aaa
notb
subb
ds
insl
in
jbe
outsl
inc
pop
repz
repnz
es
cmp
jb
mov
inc
and
pop
and
jno
adc
pop
mov
idiv
shrl
xor
mov
pop
add
mov
jl
jbe
divl
cmp
movsl
leave
add
outsb
sbb
ja
mov
pop
ljmp
stc
loope
pop
loopne
mov
ret
mov
shll
mov
mov
mov
fs
iret
das
xlat
mov
inc
adc
ss
outsb
shll
sbb
mov
les
arpl
data16
in
pop
fmulp
das
and
out
mov
push
fmul
in
or
adc
movsl
dec
ljmp
mov
mov
pop
shrb
mov
icebp
push
loope
imul
je
add
push
dec
push
faddl
pop
fdiv
sub
lock
hlt
xor
test
addr16
mov
sbb
add
dec
push
jo
or
inc
pop
push
dec
outsb
add
roll
add
lods
push
xchg
xchg
push
mov
insb
hlt
push
scas
xchg
push
cmp
cmpsb
adc
std
pop
icebp
push
push
cli
mov
adc
popa
xchg
aas
pop
push
aad
loope
push
inc
testb
lods
mov
pop
ja
hlt
aam
arpl
mov
out
arpl
pop
dec
mov
xchg
push
pusha
cltd
aaa
or
jae
inc
mov
dec
add
ret
in
jno
push
adc
scas
push
mov
popl
fmull
femms
sbb
loopne
lea
pop
push
push
xchg
rclb
data16
lahf
dec
mov
mov
movsb
adc
cmpsb
cmc
pop
and
cmp
inc
sbb
dec
inc
mov
sbb
inc
sbb
pop
dec
pop
xchg
add
and
lock
aaa
cmp
cmp
xchg
std
out
je
int
jbe
mov
xchg
nop
mov
adc
mov
inc
jg
shrd
enter
psraw
out
aaa
sub
cmpsb
mov
mov
outsb
shr
cmpsb
lcall
icebp
in
in
xchg
or
pop
push
add
insb
loop
sbb
jbe
fcomps
sbb
sub
mov
jne
cltd
out
inc
in
mov
lea
popa
in
jmp
daa
cmp
ficoms
bound
mov
loopne
sbb
sbb
dec
adc
fidivrs
xchg
sbb
gs
pop
inc
push
mov
pop
push
je
daa
arpl
mov
adc
xor
ds
jmp
enter
divl
add
shrb
icebp
lock
add
les
pop
pop
int3
sub
insb
sbb
arpl
outsb
cmp
or
aas
test
cmpl
test
nop
add
jne
and
jns
test
jae
popf
std
andl
sti
sti
jecxz
fnsave
ret
pushf
pop
popf
out
mov
fcoml
inc
inc
mov
jb
test
jle
jp
fstpl
xor
leave
and
dec
inc
shlb
push
in
lods
popf
xchg
jl
in
push
and
cwtl
sbb
mulb
push
les
inc
and
hlt
sti
icebp
popa
jl
pop
dec
neg
and
js
push
fsubrs
aaa
aad
int3
int3
call
aaa
lods
inc
ficoms
into
mov
loope
jnp
lds
out
shlb
xchg
fiadds
in
xchg
xor
repz
je
enter
loop
test
adc
cmp
aam
icebp
cld
dec
inc
jmp
cli
inc
pop
dec
hlt
das
or
cld
mov
out
aam
jmp
cmp
and
jl
out
insb
stos
xchg
andb
addb
outsb
aaa
icebp
and
scas
pop
xchg
in
dec
sbb
mov
loope
pop
cmpsb
mov
mov
adc
fbld
aaa
cmp
add
negl
push
xor
add
or
push
fdivl
insb
addr16
mov
call
bound
xor
mov
aas
or
or
cld
das
mov
xchg
push
xchg
jmp
out
sub
sub
aas
in
stos
pop
test
xor
lcall
daa
shrl
aaa
or
loopne
ds
jnp
sbb
std
cli
xchg
push
ss
sbb
adc
and
scas
pop
loope
sti
gs
adc
push
jbe
fidivl
push
jb
loope
mov
int3
ret
sbb
ja
adc
inc
mov
imul
sti
addr16
icebp
push
icebp
hlt
push
lret
loope
pop
or
pop
jmp
hlt
fsub
test
sarb
mov
pop
dec
imul
cli
jecxz
dec
and
push
dec
leave
add
cmc
pop
or
sti
adc
sub
cmp
or
lret
lds
fstpt
fmul
cmp
and
cltd
loope
cltd
stos
and
mov
in
jnp
cmp
andb
sbb
int
or
add
rol
xlat
ret
dec
sti
jl
pop
xchg
call
je
mov
js
mov
adcb
mov
add
sahf
and
lahf
cmpl
cmc
sbb
daa
in
and
inc
out
dec
pop
shlb
repnz
fstpt
lcall
xchg
xlat
jl
xor
dec
jp
sbb
or
mov
loop
sbb
pusha
xor
pop
inc
sbb
cmp
add
repz
push
pop
hlt
inc
xchg
insl
and
pop
fisttpll
inc
add
pop
cltd
mov
mov
inc
pop
jnp
push
mov
jp
add
lret
ret
cmovno
mov
jnp
loope
pop
jmp
pop
ds
in
pop
adc
and
jmp
pop
sti
xor
sbbb
cwtl
mov
jns
jle
add
imul
push
es
xchg
stos
cmpsl
jmp
sbb
orl
js
int
mov
jg
outsl
aad
jae
or
jbe
fstpl
add
shl
aad
test
in
xchg
roll
bound
xor
inc
dec
dec
jmp
mov
xchg
rorb
decb
ss
mov
lcall
jae
and
mov
and
pop
xchg
iret
mov
xlat
hlt
mov
inc
pop
mov
mov
stc
cltd
jle
or
pop
sub
fsubrs
add
aaa
fldt
mov
jp
push
js
mov
dec
mov
mov
lods
push
popf
and
repnz
mov
loopne
insb
pop
sub
rcr
mov
cmpsb
mov
jo
jl
cwtl
sbb
fldt
aaa
gs
pusha
lock
and
rcrb
clc
std
mov
mov
jp
frndint
sbb
jbe
icebp
jmp
jp
jle
adc
or
mov
nop
insb
jge
cmc
mov
lcall
xchg
push
or
inc
cwtl
popf
outsb
stc
xchg
ss
cwtl
adc
sbb
jbe
and
fwait
ds
xchg
cmp
lret
test
sub
movsb
das
pop
shll
mov
stos
outsl
in
pop
mov
int3
out
rolb
sub
inc
fisttpl
aas
enter
test
add
add
dec
std
aaa
xlat
jne
pop
stos
test
sbb
icebp
jno
mov
xchg
aad
cmp
jo
movsl
cmpb
int
sub
mov
cltd
mov
pop
jle
or
mov
mov
or
mov
push
jnp
push
jmp
push
arpl
xor
pop
testb
inc
stos
ja
sub
insl
sub
pop
sbb
push
jnp
in
mov
mov
loopne
pop
sbb
fsubr
je
nop
imul
in
mov
sti
das
mov
shll
dec
shrl
mov
or
sbb
scas
ss
pop
mov
push
loop
pop
div
pop
popf
in
mov
ret
mov
sub
lret
fnstenv
movsl
lahf
xchg
mov
or
dec
or
jo
xor
insl
int3
fidivs
mov
out
xorl
outsl
add
mov
je
mov
xor
ja
jbe
sub
add
and
pop
outsb
mov
cmpb
jnp
aaa
fs
mov
cmp
xchg
inc
pushf
sbb
mov
jnp
pop
fwait
add
loope,pn
lahf
sub
out
xchg
sbb
scas
ja
popf
add
xchg
sub
sbbb
into
xchg
inc
push
push
mov
xchg
inc
add
sub
andl
int3
or
mov
int
mov
divb
repz
push
push
repz
pop
iret
jp
pop
sbb
adc
int3
cmpsl
sub
sti
lret
sbb
out
mov
xchg
aaa
mov
mov
dec
adc
ja
outsl
add
or
dec
out
lods
sti
xchg
stos
mov
jp
push
push
inc
xchg
faddl
push
ljmp
fwait
push
frstor
ljmp
inc
inc
and
jecxz
push
sbb
cli
pop
and
lea
rclb
jne
push
add
ss
fsubrs
fcoml
sti
sbb
jp
and
mov
pop
cmp
push
pop
xor
mov
outsb
jecxz
loope
xlat
pop
data16
pop
jp
inc
mov
push
pusha
ss
push
popa
push
add
jle
test
outsb
pop
call
cli
popa
pop
lea
dec
sub
sbb
pop
sahf
dec
movb
inc
out
lret
insb
imul
cmp
popf
aaa
jmp
dec
pop
ss
aaa
inc
jo
das
dec
jo
shl
xchg
pop
and
fisubrs
in
add
cmp
lods
mov
mov
sbb
and
cwtl
sti
divl
push
ss
pop
lea
mov
adc
cmpsb
loop
loope
test
or
xor
es
pop
or
out
push
mov
stos
mov
mov
sbb
popa
inc
cltd
outsb
fistl
inc
mov
cltd
and
xor
adc
call
pop
adc
adc
dec
arpl
fisttps
mov
std
cwtl
int
rorb
and
aad
arpl
mov
rclb
loop
cmp
arpl
xor
adc
in
push
pop
lock
jne
ret
add
ret
outsl
inc
repz
shlb
fwait
jmp
cli
push
jb
aaa
dec
call
xchg
jp
jp
ret
in
pushf
in
cmpsl
inc
pushf
ss
push
out
sbb
ror
and
pop
inc
push
mov
jl
and
push
xor
decl
or
xchg
cltd
sti
sahf
aam
mov
push
rcr
mov
jbe
mov
aad
mov
lahf
cmp
add
pushf
inc
loopne
inc
inc
dec
into
pop
es
or
ss
pop
cmp
push
inc
sbb
in
pusha
jecxz
mov
inc
mov
ret
addl
in
and
xchg
jns
sbb
add
mov
ficoml
ss
mov
mov
fcomps
inc
jae
pop
mov
adc
stos
pop
or
les
shrl
jle
pop
push
sub
mov
dec
out
loope
or
adc
cmp
push
pop
add
fadds
adc
insb
mov
pop
jmp
inc
in
movsl
jp
pusha
xlat
shrl
lods
js
xor
mov
scas
loopne
ret
cltd
cmp
fsubrl
sbb
push
xor
dec
repnz
push
enter
dec
mov
in
in
xchg
fistl
sbb
js
pop
fildl
ss
daa
cmp
mov
int3
xchg
insb
mov
pop
mov
jecxz
pop
cmp
jbe
data16
inc
inc
clc
js
ret
and
test
xchg
mov
test
fimuls
sub
out
inc
mov
and
jge
sub
cmp
pop
or
movsl
ficomps
js
fnstsw
and
cld
test
in
imul
xchg
cs
fsubl
imul
aam
inc
push
jb
xor
mov
lods
xchg
jnp
pop
jl
inc
ljmp
mov
outsl
loope
xchg
cli
mov
or
jns
lods
sti
daa
dec
xchg
leave
aas
mov
cmp
aaa
scas
add
jle
push
dec
push
fistps
pop
mov
psubusb
lahf
lcall
in
dec
icebp
das
divl
nop
aad
pop
xor
cmp
mov
lods
pushf
repz
ljmp
dec
adc
and
scas
jb
cmp
shrl
xor
outsb
mov
push
sahf
out
movsl
in
xlat
sarl
lock
in
popa
ss
add
and
dec
mov
mov
add
pop
cmpsl
cmpsb
mov
add
out
jb
add
dec
pop
insb
jo
inc
fwait
pushf
add
in
jl
xchg
jo
jg
cld
cmpsl
inc
movsl
fnstenv
cwtl
lret
pop
xchg
and
adc
mov
pop
xchg
fldt
daa
jmp
mov
xor
test
and
pop
stos
mov
mov
xor
repz
std
pop
inc
or
dec
sbb
dec
outsb
aaa
mov
scas
sarl
jle
sub
inc
ret
sti
cwtl
iret
das
add
cld
or
fisttps
add
je
jb
pop
out
push
aas
xchg
lea
push
dec
mov
or
dec
inc
cmpsb
stc
js
adc
inc
cs
cmp
jmp
push
cmp
in
lcall
loope
aaa
mov
mov
lcall
loope
mov
mov
mov
stc
ja
imul
sbb
fdivr
add
xchg
aas
dec
xchg
call
sbb
fdivs
jp
sub
sub
push
mov
sub
jae
cs
and
inc
fnsave
pop
inc
dec
aad
cld
fstpt
inc
lods
mov
scas
jl
sub
jbe
icebp
cmp
sbb
inc
aaa
jl
dec
cmp
clc
ficomps
sbb
icebp
jl
mov
pop
cld
aaa
fs
not
dec
xchg
jmp
mov
sbb
dec
rcrb
lea
rep
je
pop
sbb
aaa
sbb
xor
and
cmp
in
pop
ljmp
inc
inc
int
arpl
stos
and
mov
lahf
aas
lret
add
sahf
pop
inc
or
or
mov
stos
sbbb
inc
in
and
dec
adc
nop
dec
ljmp
push
add
or
mov
repz
mov
mov
aaa
xchg
int3
push
in
add
xchg
jne
push
aam
dec
aad
jl
inc
sti
movb
pop
push
sbb
js
loopne
outsb
andl
stos
test
add
pusha
mov
shl
jmp
sahf
or
mov
test
cltd
xchg
and
pusha
bound
in
sbb
popf
adc
jo
repnz
lods
mov
gs
cli
sti
test
or
push
dec
and
roll
repz
or
add
xor
push
imul
out
jnp
jecxz
mov
out
mov
xor
xchg
xchg
into
call
pop
lret
std
aaa
cwtl
xchg
mov
js,pt
push
xchg
pop
lods
mov
test
jge
sbb
loop
xchg
jge
cmp
aaa
pop
inc
cmp
inc
pusha
inc
xchg
mov
pop
and
je
icebp
inc
adc
imul
lret
repnz
and
pop
lock
mov
lods
jne
push
aaa
pop
daa
cmp
scas
add
pop
addr16
dec
pop
sub
je
outsb
mov
stos
ret
sub
push
inc
out
xchg
decl
aaa
xchg
jge
xor
sbb
ds
xchg
sub
sbb
mov
jbe
arpl
imul
ret
fwait
and
push
dec
lahf
aam
or
lret
into
jmp
int3
int
fdivs
xor
push
mov
inc
repnz
sarb
aam
jg
scas
and
ret
jnp
das
out
xchg
inc
ret
add
test
sbb
push
mov
inc
push
incl
imul
lcall
dec
lahf
pop
jle
pop
and
popf
lret
jp
enter
push
shll
aam
or
int
and
outsb
movsl
mov
dec
jb
in
jo
pop
aaa
dec
pop
pop
sub
ja
pop
push
sbb
stos
negl
loop
pop
cmp
xor
jge
sbb
and
pop
xchg
clc
sahf
pop
sub
movsb
sbb
out
sub
dec
std
jp
push
xchg
push
mov
jae
mov
lcall
icebp
imul
inc
push
aaa
cs
cmc
std
jl
mov
lcall
pop
inc
inc
fs
lea
loope
sbb
outsl
pop
xchg
ret
add
lret
pushl
bound
fdivs
mov
pop
in
lret
pusha
xchg
and
outsb
adc
cmpsb
stc
xor
shrl
mov
fstp
or
push
loop
cmp
cmp
inc
out
lods
aaa
in
addr16
jp
xchg
adc
pop
inc
mull
in
inc
mov
aad
pop
sbbb
movsl
inc
add
cmp
pushf
jns
aaa
adc
mov
addr16
mov
pop
cld
dec
movsl
std
jnp
rcl
push
stos
sbb
dec
leave
jp
lea
cmp
and
aam
sbb
mov
dec
fwait
shrb
js
in
mov
stos
bound
jg
pop
jl
lods
pop
mov
jp
inc
and
jle
xchg
xor
out
xchg
sbb
inc
and
inc
inc
push
mov
inc
jmp
jge
out
int3
jle
pop
sahf
push
in
shlb
cmp
stos
out
rolb
ja
jnp
mov
mov
loopne
or
in
into
xor
std
punpckldq
outsb
ds
fmuls
jp
out
jp
in
dec
xchg
pop
sub
push
int3
fadds
cld
cmc
pop
fwait
xor
dec
jp
bound
jns
nop
fwait
push
rcll
inc
arpl
pop
sbb
pusha
jp,pn
push
test
xor
insb
fcompl
pushf
popf
and
adcb
inc
sbb
ljmp
enter
xchg
sbb
pop
pop
push
repz
mov
add
push
mov
sarl
cltd
call
cmp
xor
rcrl
dec
push
popf
sbb
cmp
fwait
mov
mov
movsl
mov
insb
ja
mov
pop
rep
dec
adc
push
aaa
jae
dec
fadds
mov
push
aaa
cmp
jg
hlt
cwtl
mov
jmp
out
inc
jg
out
cmpsl
dec
data16
fwait
test
jecxz
fsubrl
lock
repz
xchg
aaa
push
jb
mov
loope
test
scas
jo
pop
loop
or
sbb
pop
in
sbb
and
shlb
jne
iret
inc
ret
faddl
dec
pop
push
idivb
jno
test
cmp
cli
mov
repz
inc
insl
adc
cmp
mov
pop
inc
pushf
and
sbb
arpl
and
pop
out
fsubrl
call
pop
add
add
xchg
in
cmp
xchg
ss
cmp
repz
fnstenv
jno
cs
je
nop
push
loope
mov
inc
test
fcoml
ss
loope
jle
std
sti
dec
sbb
mov
mov
mov
icebp
add
clc
sti
cmpsb
or
xor
mov
mov
sub
mov
dec
xchg
inc
shlb
push
mov
pusha
out
dec
cmpsb
mov
xchg
repz
pop
negb
mov
pusha
push
sbb
outsl
adc
jp
outsb
adc
icebp
mov
sub
loopne
mov
ljmp
fdivl
lods
jne
pop
outsb
outsl
or
mov
loop
aaa
push
ret
push
lock
push
loope
push
sub
call
sarb
lods
xchg
add
loop
push
aam
sti
dec
je
arpl
cld
cli
jecxz
mov
movsl
adc
pop
or
and
inc
jbe
mov
sbb
stos
mov
sub
pop
test
pop
and
or
cmp
xorl
sbb
lds
out
aas
shrl
out
imul
adc
pop
push
jecxz
inc
clc
fildl
mov
ja
je
bound
mov
bound
sbb
adc
sub
repz
pop
xchg
cmp
lret
scas
cld
jmp
addl
xchg
pop
jge
loope
lock
test
xor
test
clc
lods
xchg
add
in
rcr
outsb
xor
icebp
in
lret
inc
jl
pop
es
mov
jae
subb
push
das
aas
inc
jp
in
sbb
lea
fstpt
aam
movb
xor
fld
xlat
jl
ss
fldcw
addr16
cmp
cmp
iret
decl
dec
cmpsl
ret
sahf
xchg
xchg
and
push
lret
ds
gs
mov
call
mov
adc
jl
fists
pop
or
adc
pop
dec
sbb
test
push
lcall
pop
mov
sahf
iret
mov
sub
fstpt
sbb
repz
inc
shlb
ja
int3
sub
xlat
pop
jo
fbld
sbb
add
cmp
jae
pop
test
aaa
movsb
aas
lds
sub
lahf
fisubrs
sub
clc
outsb
jl
imul
cmp
fsubrs
fistpll
mov
sbb
push
adc
shll
sub
inc
data16
sti
mov
lret
xor
jge
jp
outsl
cs
dec
and
jle
jp
push
jmp
movsb
mov
icebp
es
test
pusha
fwait
adc
mov
inc
and
rcrb
sbb
mov
xchg
call
jle
push
pop
add
cld
lret
movsb
jl
pushf
repz
mov
add
test
fstps
int3
push
lods
out
and
jae
lahf
aaa
pop
loop
sahf
xor
mov
pop
mov
lea
cmpsb
mov
adc
adc
jle
adc
adc
mov
push
shll
lds
push
negl
ja
loop
xor
push
cmp
cltd
negb
pushf
cmp
aaa
lcall
jge
cltd
aam
mov
mov
fcompl
movsl
mov
add
inc
xor
dec
test
mov
mov
jne
sbb
inc
push
bound
cmp
push
testb
push
enter
pop
pop
dec
add
cmpsb
rorl
add
daa
nop
inc
and
stos
mov
mov
loope
ja
adc
frstor
repz
pusha
repz
out
in
xor
addr16
or
popf
ss
out
out
fcompl
dec
shll
das
in
mov
add
dec
pop
iret
dec
ret
sbb
insl
push
pop
add
mov
push
xor
xor
dec
xchg
xor
push
dec
pop
pop
sbb
inc
aam
inc
pop
jne
mov
aaa
mov
pop
inc
and
sbb
xchg
sbb
jmp
mov
mov
sub
in
add
mov
sub
out
js
stc
sub
push
loop
push
xchg
pop
jg
loopne
push
or
xchg
daa
add
enter
outsl
pop
int
push
cmp
dec
stos
push
sbb
adc
stos
xchg
adc
push
repnz
pop
cmp
pusha
fildl
sbb
std
fcomps
sbb
mov
sub
mov
out
sub
std
jbe
gs
fimull
je
test
add
mov
fnstenv
lret
inc
xor
push
mov
out
cmpsl
into
jbe
int3
es
dec
lret
jbe
inc
jns
dec
cmp
das
call
scas
cli
stos
adc
mov
out
xchg
fwait
xchg
jle
aaa
xchg
jecxz
out
xor
addr16
push
repz
mov
adc
cs
lea
mov
insb
sahf
push
jbe
out
icebp
and
dec
aaa
js
jp
dec
cmp
dec
dec
filds
xchg
loop
popa
xchg
in
jbe
ljmp
stc
popf
jecxz
mov
and
mov
push
in
mov
inc
pusha
mov
jne
arpl
retw
cmp
sti
xchg
fnsetpm(287
mov
xchg
mov
add
pop
loopne
pop
das
in
inc
fsubrs
push
sub
lock
cmp
sbb
repz
mov
popa
out
ljmp
and
pop
cltd
jnp
jo
sbb
jecxz
xchg
stos
adc
mov
pop
push
push
pop
fwait
mov
adc
mov
test
jne
jnp
jnp
out
cwtl
int3
test
cmc
pop
pop
jl
insw
out
pop
daa
loope
stos
in
lret
fwait
jecxz
add
add
pop
jb
pop
mov
je
and
push
dec
and
insl
std
pop
div
xchg
sbb
jb
ret
pop
xchg
pop
lcall
stos
cmp
in
sahf
pop
push
push
jg
and
js
outsb
mov
xchg
cli
push
cltd
aad
js
xor
fstl
stos
les
cli
xchg
cmpsb
in
sbb
data16
sub
xlat
mov
mov
jo
push
xor
pop
stos
push
push
push
lret
sti
in
nop
jge
sbb
jb
jmp
lds
addr16
mov
or
jp
sbb
mov
adc
mov
inc
xchg
push
fxam
imul
nop
xor
hlt
mov
cs
jb
pop
xor
mov
in
sbb
bound
ds
aaa
sub
push
adc
xor
test
les
mov
cmpsl
icebp
fimuls
psubsw
jo,pt
mov
dec
mov
ficomps
adc
andb
push
cwtl
popf
add
loop
mov
and
popa
aaa
xor
cwtl
rolb
sub
mov
push
or
out
add
inc
loop
jg
cwtl
adc
movsb
cwtl
in
jmp
icebp
mov
stos
jbe
mov
stos
aaa
test
ss
in
dec
adc
cmp
push
jns
mov
push
je
test
xor
mov
xchg
pop
test
and
inc
pop
sub
std
popl
es
sbb
pop
dec
mov
dec
hlt
cmp
imul
adc
addr16
cvttps2pi
pop
daa
adc
mov
xor
arpl
mov
ss
jbe
cmp
inc
jbe
cmp
repnz
push
pop
bound
lods
nop
inc
andb
sub
shl
rcll
push
into
push
dec
mov
popa
mov
jo
fcmovne
rcrb
faddl
mov
pop
mov
cwtl
or
int
scas
stos
xchg
mov
jecxz
sti
cmpsl
movb
and
and
jl
push
sub
mov
in
sbb
mov
les
lods
and
cmp
popa
push
dec
enter
jecxz
mov
mov
mov
icebp
das
shll
aad
bound
cmp
pop
ret
and
pop
or
xchg
test
sbb
sub
rcrb
fisubrs
insl
dec
jp
xchg
jecxz
jp
jns
dec
inc
aas
movb
movsb
mov
sar
mov
adc
lods
daa
fmull
enter
xchg
sub
mov
ja
add
bound
mov
jb
pushf
mov
or
or
cltd
clc
fs
les
testl
imul
rcll
push
lcall
icebp
mov
adc
repnz
mov
add
cmp
in
aaa
sbb
icebp
pop
roll
push
cli
scas
and
aaa
negb
in
xchg
sub
fcomip
pop
xchg
jnp
pop
cmp
loop
push
cltd
enter
sbb
xchg
or
pop
add
aad
jbe
inc
mov
inc
rcrl
fcmovnb
in
cld
fisubs
out
jp
mov
ret
insl
pop
imul
popf
jg
pop
inc
test
cli
push
dec
mov
pusha
xchg
push
cli
dec
shrl
push
dec
outsb
sbb
aad
pop
dec
aaa
sbb
push
imul
rcrl
sti
mov
movsb
adc
lds
cld
xor
pop
rolb
icebp
das
cwtl
ret
mov
mov
cmp
push
or
iret
test
pop
push
lret
push
data16
sbb
ret
mov
insb
xor
jmp
lods
push
cmpb
inc
cmovg
push
or
mov
cmc
filds
jo
rcrl
dec
nop
pop
ficompl
pop
mov
jle
jmp
stc
dec
cmp
data16
out
sbb
je
clc
push
in
cmp
leave
je
mov
push
pop
ret
add
repz
add
jmp
sti
mov
jo
fiaddl
inc
out
xor
jo
xor
jbe
jo
sbb
pop
jle
fld
sbb
aaa
adc
mov
xchg
mov
jb
cld
xor
repz
add
loope
add
stc
loopne
pop
in
enter
jno
mov
inc
or
sti
aaa
outsb
js
rcll
test
loope
jb
cltd
push
aad
jmp
rcll
cmpsl
mov
aaa
scas
sti
pop
jns
mov
sub
aam
sub
cwtl
xchg
bound
cmp
icebp
cmp
lds
adc
cmp
hlt
mov
aas
push
xor
mov
stos
dec
xchg
dec
call
mov
xor
pop
out
and
ds
lea
dec
lock
add
mov
out
in
lea
out
std
je
fwait
xchg
cmp
jnp
scas
pushf
mov
addr16
jle
mov
mov
add
lahf
les
xor
adc
pop
mov
pop
mov
adc
ret
dec
and
pop
jns
jmp
sub
push
loop
pop
aaa
mov
add
lret
shr
mov
jle
test
out
pop
push
mov
push
cmpsl
and
sbb
and
mov
adc
sbb
sahf
cmpsb
push
pop
cld
xlat
push
rcl
mov
aaa
cmp
or
insb
repnz
cs
cmc
sbb
and
sbb
sbb
cmpsl
dec
cld
mov
out
cmp
in
cmp
test
inc
xchg
jo
cmp
mov
dec
das
mov
loope
cwtl
cmp
in
jp
mov
sbb
cmp
mov
push
or
inc
scas
xor
imul
loop
int
mov
inc
add
sbbb
cmp
pusha
fdiv
xchg
sbb
or
mov
fcompl
imul
push
scas
push
pushf
sub
push
fldt
shll
or
addr16
ds
pusha
or
sbb
das
pop
inc
pop
pushf
xchg
rcl
lods
sub
jl
push
cmpsb
and
sub
call
pop
cli
xor
in
ja
push
and
xchg
rcr
sti
sub
or
jne
popa
in
cltd
insb
or
addr16
mov
jno
mov
xchg
gs
mov
adc
and
fcmovnu
push
and
jmp
push
mov
xchg
aaa
xchg
inc
lcall
lock
add
adc
xor
and
outsl
lds
mov
cmpsl
adc
sahf
insb
cwtl
mov
xor
sub
bound
adc
stc
xchg
jb
inc
divl
mov
int3
fdivrs
pop
add
flds
sub
in
pop
add
mov
xchg
enter
cld
mov
fmul
fists
in
sbb
xlat
mov
out
adc
push
add
jbe
xor
xor
subb
jmp
jb
xlat
rcrl
outsb
push
add
mov
dec
inc
sub
pop
pusha
sti
lods
pop
inc
ds
cmpsb
test
sahf
mov
imul
mov
lock
ja
lahf
jae
lock
pop
mov
lcall
jecxz
int
push
loope
sbb
and
sub
into
and
push
movsb
sahf
arpl
repz
or
inc
jle
sbbb
mov
movsb
ds
ss
lds
jge
repz
call
arpl
cli
cltd
jne
push
popa
sahf
lret
js
or
in
pop
or
outsb
add
test
in
xchg
loopne
cmpsl
in
mov
std
adc
pop
jp
cmp
mov
imul
adc
in
mov
xor
shlb
outsl
lods
enter
jbe
cmp
or
stos
ss
in
xchg
arpl
inc
adc
and
popa
ret
test
inc
es
cmc
dec
mov
pushf
std
push
vmwrite
jmp
mov
je
loope
lret
idivb
push
fimull
mov
popf
and
sub
push
lock
fnstcw
out
or
inc
int
outsb
mov
and
or
addr16
jo
in
xchg
pop
xchg
push
xor
push
ret
add
int
xchg
movsb
in
ds
mov
cs
loope
adc
xchg
adc
lcall
dec
adc
adc
pop
and
lcall
dec
xor
shll
mov
pop
subl
fldt
imul
lock
in
lcall
scas
cmpsb
repnz
test
fsubrs
xchg
aad
xchg
mull
cli
les
sbb
insb
cmp
daa
push
mov
dec
mov
cmp
pop
mov
adc
jae
ss
test
adc
inc
icebp
xchg
xlat
push
lcall
cmpsl
jl
aam
fisubrl
stos
jmp
out
rcrb
add
cld
pop
inc
xor
sahf
repz
push
jp
popl
pop
notb
jae
xorl
adc
and
data16
aam
adc
mov
pop
stos
push
cmpsl
cmp
mov
push
fdivrs
in
pop
mov
xorb
inc
mov
scas
cmp
mov
mull
sub
jbe
dec
cmp
arpl
jo
inc
push
in
sbb
fisubrs
lret
clc
push
mov
pop
mov
cmp
sbb
imul
cmp
mov
pop
xlat
pop
mov
imul
sub
jo
and
jle
mov
and
mov
mov
mov
sub
mov
jbe
sbb
fcoms
pop
fistpll
or
fidivl
mov
mov
jbe
and
cmpb
cwtl
das
sbbl
and
popa
pop
icebp
mov
push
ja
mov
jl
pop
dec
into
and
xor
mov
dec
or
ljmp
mov
xor
jo
jae
dec
push
pop
in
xchg
mov
enter
shll
movsb
cmp
inc
push
rorl
js
mov
or
into
pop
fisttpl
adc
cld
dec
sub
js
sbbl
pop
mov
dec
xchg
testb
xor
adc
push
shrb
mov
aas
sub
xchg
aaa
push
into
in
insb
inc
stc
sbb
push
sbb
cmpsl
xchg
xor
enter
test
dec
into
mov
movsl
pushf
or
notl
cmp
mov
lock
bound
iret
add
je
xchg
jl
inc
bound
mov
arpl
mov
cld
pusha
mov
into
jne
add
test
jmp
cltd
and
nop
dec
in
movsl
popf
test
mov
dec
enter
daa
repz
pop
out
subb
aam
inc
mov
sbb
fs
repz
repz
dec
push
mov
call
mov
push
and
addr16
arpl
outsb
inc
shr
mov
ss
outsb
int3
jno
dec
xchg
ss
dec
cmpsl
xor
imul
adc
into
lcall
cmp
jae
lcall
cltd
ss
int3
sti
insb
sbb
hlt
enter
call
sub
push
sub
dec
roll
cmp
inc
stc
out
sbb
push
sbb
pop
or
mov
jmp
mov
fcmovne
inc
repz
jns
out
cmp
fidivs
aaa
gs
push
lea
cmp
scas
test
jecxz
dec
in
push
jb
arpl
call
stos
ss
pop
shll
ja
rclb
cwtl
lea
inc
push
out
mov
add
mov
out
cli
pop
fcoms
notb
or
pop
push
je
in
sbb
rcl
imul
push
lret
imul
jae
cmp
pop
hlt
sub
cwtl
std
fs
loope
jmp
and
in
xchg
aaa
mov
or
mov
jle
sub
mov
sbb
sbb
cli
push
xchg
cmp
cld
jo
outsl
sbb
in
pusha
rcrb
push
mov
dec
and
unpckhps
cmpsl
add
dec
mov
adcb
icebp
push
faddl
sbb
lret
adc
mov
enter
adc
sbb
ret
fistpll
repz
sbb
pop
popf
aaa
add
mov
pop
loope
mov
jle
push
inc
add
pop
sbb
push
in
fstpl
xchg
cwtl
cmpsb
icebp
in
and
fwait
imul
scas
aam
jle
push
shlb
fsubrl
inc
add
or
iret
movsl
out
xor
in
cmp
push
push
aaa
hlt
cmp
pop
lock
jno
hlt
pop
je
shlb
jbe
cmp
ret
fsubs
fiadds
test
js
int3
scas
out
sub
pushf
lods
mov
sbb
jle
jl
pop
in
inc
dec
fldenv
or
inc
lea
cmc
in
mov
mov
das
hlt
mov
pop
lea
popa
sti
nop
fldl
push
js
adc
sbb
into
cmp
jne
jne
int3
mov
jb
cmp
arpl
daa
insl
gs
add
xchg
stos
jbe
aaa
adc
jge
ja
add
jecxz
push
movsb
out
out
inc
add
inc
jl
jbe
pop
cmp
and
fisttpll
pop
pop
call
pop
push
mov
test
jl
sbb
mov
fcmovnb
or
lea
push
xlat
in
add
dec
ds
pop
sbb
mov
pop
push
xor
sbb
mov
dec
cmpsl
js
jb
sub
mov
push
sub
and
test
lahf
lods
aaa
out
insl
dec
jle
mov
and
or
jg
daa
cmp
daa
call
jb
sbb
aaa
fcomps
fildll
in
out
pop
gs
stc
push
lds
mov
sti
in
xor
mov
imul
sbb
xchg
add
arpl
or
cmp
inc
imul
jnp
rcl
mov
sub
adc
xchg
cwtl
into
adc
je
insl
outsl
mov
mov
push
insb
or
mov
into
mov
add
dec
xor
rcrb
pop
xor
dec
sbb
xor
jae
les
adc
mov
push
dec
in
jb
fiaddl
fistpll
adc
xchg
pop
mov
repnz
fists
das
adc
push
imul
push
mov
lods
sbb
inc
pop
mov
jo
push
ss
xchg
mov
and
mov
cmp
xchg
or
popf
jb
xor
mov
das
cmc
test
cmpsl
test
jp
inc
pop
mov
outsb
sbb
lret
xchg
inc
insb
sar
sub
add
sbb
subb
loop
push
add
sub
xor
mov
cwtl
fisttpl
int
dec
outsb
insl
jb
aaa
mov
pop
fbld
sbb
adc
leave
out
dec
into
cmpsl
fs
cmp
jg
adc
pop
xor
pop
mov
cmp
daa
mov
std
mov
sub
or
dec
jns
sbb
bound
add
mov
jge
inc
ljmp
test
inc
fcmovnu
xchg
sahf
add
daa
loop
stos
inc
add
push
out
push
arpl
mov
and
xor
loope
add
outsb
mov
push
popf
stos
pop
sahf
push
cmpsl
scas
xchg
mov
lock
dec
lret
push
jae
ljmp
cwtl
mov
lret
inc
sbbb
aaa
mov
cmc
pop
pop
mov
js
push
pop
push
fabs
mov
arpl
or
xor
or
arpl
addr16
sbb
das
mov
xchg
add
lcall
lret
jp
pop
pop
jmp
in
lock
or
or
loope
js
add
imul
cli
push
jb
mov
add
outsl
xor
or
dec
shll
test
sahf
jle
and
sbb
jnp
push
enter
and
std
enter
jle
push
jge
xchg
jmp
call
pop
sbb
mov
cmpsl
stos
dec
cli
sbb
xchg
jmp
outsb
sbb
out
cmp
pop
cmp
mov
repz
out
add
scas
xchg
adc
cmpsl
cmpsl
clc
mov
repnz
mov
les
jbe
add
xor
in
imul
mull
fimuls
pusha
xorb
sub
loope
sbb
jb
imul
cmp
mov
loope
xchg
imull
mov
dec
jnp
mov
decl
mov
test
imul
mov
and
sub
cwtl
std
mov
lahf
int
faddl
jle
pop
jl
imul
xchg
xchg
jg
dec
lods
nopl
jecxz
je
pop
sub
icebp
cmp
jle
mov
mov
inc
sub
orl
push
dec
mov
sbb
adc
mov
iret
lea
jae
pop
sub
or
push
in
dec
mov
in
sbb
pop
cmpsl
mov
das
fsubl
addl
fcomp
push
push
out
mov
sbb
mov
fldenv
mov
je
adc
mov
repz
ss
inc
mov
mov
sbb
add
xsha1
cmpsb
dec
and
jmp
cwtl
lods
aaa
mov
cmp
inc
adc
jp
sub
lahf
add
jp
ret
out
xor
aad
out
push
adc
push
in
inc
xchg
mov
in
lds
shl
cltd
xchg
outsl
and
dec
addl
mov
push
loopne
imul
fmuls
mov
negl
lods
push
es
jb
std
push
cmp
stos
jle
push
int3
mov
popa
add
inc
inc
mov
adc
insb
cwtl
pop
aas
les
sub
adc
cmp
cld
add
xchg
and
add
xor
and
mov
mov
ss
sub
outsb
sti
mov
sbb
mov
jg
sbb
lods
fstpt
je
shr
lret
jge
outsb
inc
bnd
iret
cli
and
mov
push
lods
mov
mov
xchg
pop
in
push
inc
inc
adc
pop
les
in
pop
jle
jbe
push
push
adc
bound
pop
add
pop
sbb
sbb
push
and
adc
mov
addb
inc
jecxz
add
mov
adc
popa
lcall
cmp
mov
adc
dec
cmp
pop
or
or
lea
icebp
mov
push
out
test
xchg
jl
sub
xor
sub
mov
dec
pop
xchg
jnp
scas
adc
cmp
dec
sbb
dec
pop
cwtl
stos
jnp
fcomps
lret
stos
push
outsb
add
lods
cmc
mov
arpl
jmp
jno
mov
pop
mov
mov
xchg
push
fisubrs
in
outsb
jle
cmpsb
push
cmpsl
in
les
outsb
lock
inc
xchg
xor
add
inc
fildll
or
pop
cmc
push
jns
push
inc
insl
jb
mov
add
not
outsl
mov
mov
push
jmp
movsl
clc
sti
cmp
mov
add
mov
mov
aam
mov
xor
int3
fimull
push
xchg
aam
jno
adc
aas
or
xchg
jg
cmp
in
pop
dec
xor
sbb
ljmp
rorb
adc
clc
jmp
push
pop
enter
xchg
addr16
push
aam
insl
nop
jle
enter
icebp
leave
popf
dec
mov
sub
insb
dec
jo
xchg
sbbb
shrd
test
push
add
inc
leave
xchg
adc
popa
mov
push
adc
adc
pop
mov
push
pop
push
sbb
cmpl
aaa
cmp
mov
push
enter
mov
addr16
push
data16
mov
xchg
popf
in
mov
mov
and
test
cmpsb
push
adc
rorb
sbb
das
pop
cmpsb
sbb
sbb
repnz
mov
gs
lods
xchg
outsl
sbb
testl
pushl
sbb
push
aaa
inc
popa
xchg
imul
sbb
mov
sbb
jne
stos
push
repz
adc
das
pop
sbb
jbe
rcll
fwait
pop
jg
jle
cltd
sahf
jecxz
int3
pop
cmp
nop
inc
pop
sub
pop
pop
mov
sub
jecxz
pop
push
out
lods
aaa
xchg
xchg
cmp
pushl
rorb
fists
mov
loope
imul
or
in
pop
inc
lahf
stos
sub
clc
nop
ficoml
dec
mov
aaa
xor
movsl
jno
popa
cltd
mov
adc
mov
aam
out
idiv
jl
add
push
xchg
les
cltd
enter
add
hlt
add
cmp
xor
sahf
push
adc
ja
pop
cmp
pusha
pop
repz
sbb
and
pop
jo
daa
jae
ret
inc
addl
jg
or
mov
cmpsb
filds
sahf
stos
pop
pop
rorb
pop
or
test
push
jb
arpl
pop
daa
jp
sbb
ja
mov
xchg
mov
shl
into
bound
les
lea
dec
outsl
lcall
jo
repz
jbe
hlt
pop
cmp
jno
imul
cmpsb
andb
sub
add
pop
cmp
hlt
aad
mov
movsl
cmc
push
mov
ss
sbb
ret
cmp
movsb
movb
pop
inc
adc
add
in
sti
sub
xor
rol
stc
rclb
aaa
movsl
xabort
fs
fld
cwtl
and
push
lcall
lret
iret
lea
repnz
lods
jo
ljmp
andb
pop
xchg
dec
push
mov
xor
orl
ds
inc
pop
movl
js
mov
adcb
mov
push
mov
loopne
push
cmp
mov
mov
add
mov
and
movsl
loope
xor
jmp
pop
xchg
lea
loope
outsb
jmp
mov
and
cli
mov
adcl
loope
loope
mov
jmp
cmp
inc
loopne
pusha
out
pushf
in
inc
or
mov
mov
mov
sbb
call
inc
les
loop
pop
mov
xchg
mov
sub
jp
mov
jns
cltd
pop
out
lcall
icebp
xor
mov
lods
inc
into
adc
aad
cmpsb
jbe
je
sub
movsb
call
jne
or
fistl
lret
jbe
xor
or
sbb
mov
fstp
icebp
loop
sbb
xor
mov
int
hlt
pop
fwait
test
inc
repnz
loope
stos
lret
imul
xor
inc
hlt
bound
push
mov
dec
outsb
scas
leave
enter
in
pop
jle
je
into
cmp
push
and
inc
add
adc
stos
in
pushf
and
cwtl
sbb
push
ret
ret
gs
enter
inc
sub
inc
cmc
jno
lea
rclb
scas
movsl
push
mov
mov
cmpsb
jge
lock
cmp
adc
ss
movsb
inc
gs
imulb
loope
mov
dec
add
pop
mov
pop
fwait
es
test
add
xchg
packssdw
jnp
jl
cmp
pop
int
and
loop
sbbl
adc
xchg
xor
inc
daa
repz
movsb
sbb
xor
push
adc
fdivs
mov
xchg
mov
fwait
and
outsl
es
dec
push
mov
push
shrl
dec
pop
push
pop
in
jle
lods
in
xor
add
dec
ret
aaa
outsl
ficoml
loop
jecxz
jle
int
loope
loop
mov
iret
or
leave
movb
pusha
fadd
aaa
aas
leave
stc
vmovmskpd
test
mov
push
push
pushf
cltd
mov
bound
sbb
jae
cltd
iret
in
dec
js
jmp
test
in
xchg
add
fwait
adc
and
ja
adc
scas
xor
repz
mov
mov
aaa
mov
in
dec
outsl
cmp
iret
sbb
jb
subl
pop
sub
push
std
mov
popa
pop
push
sub
insl
xor
dec
test
jb
push
inc
push
jb
or
adc
aad
mov
cltd
and
shrl
daa
and
subl
addr16
cld
orl
sub
iret
and
xchg
daa
pop
pop
pop
fisttpll
mov
popf
mov
jl
add
mov
mov
cmp
xor
shrb
mov
push
addr16
inc
mov
fwait
cmpsb
adc
mov
hlt
fs
popf
mov
xchg
xchg
ds
jno
ror
cmp
out
cmp
push
add
push
lea
fstpl
pop
fstpl
lret
push
mov
xchg
push
or
std
fs
in
pop
mov
mov
jnp
test
test
jg
mov
sarl
sub
dec
dec
insb
xor
inc
and
cmp
insl
adc
ss
fcmovne
insb
stos
aaa
push
mov
or
xchg
inc
int3
stos
ljmp
push
inc
or
insl
push
pop
dec
mov
testb
adc
les
data16
xchg
inc
mov
in
jo
outsb
cmp
pop
in
push
cmp
outsl
cld
fistl
pop
adc
pop
fsubrl
adc
jo
aaa
pop
mov
mov
push
insb
push
mov
out
pop
pop
in
push
jb
leave
inc
ret
test
enter
sub
cmp
pop
mov
ret
cmp
in
lea
mov
pop
in
test
dec
adc
and
in
ds
dec
and
fwait
movsl
sbb
lret
rcrl
jge
push
mov
lods
jbe
andl
push
imul
ljmp
pop
jge
pop
outsl
xor
mov
cmp
or
push
pop
scas
jb
adc
push
push
pop
fcompl
push
and
fistpl
sbb
inc
dec
sbb
xor
shl
lcall
lods
sti
into
clc
sbb
sub
xchg
add
inc
and
fsubrs
dec
inc
dec
push
cmp
push
xor
push
rcr
out
cmp
cmpsb
jo
ss
pop
dec
gs
inc
sub
xchg
int3
shr
adc
xchg
sbb
iret
mov
sahf
pushf
ret
call
inc
dec
mov
or
and
je
daa
push
mov
enter
cltd
stc
mov
sub
push
push
dec
incl
sub
aaa
jge
aas
cmp
push
push
fiadds
push
and
out
dec
test
outsl
pop
fstpl
mov
movsb
jbe
out
ret
dec
stos
pop
dec
push
loopne
jle
dec
jmp
add
add
scas
std
xor
jbe
and
bound
repnz
dec
lea
mov
jp
shrb
jg
cwtl
repz
dec
pop
sti
shl
test
sarl
or
mov
inc
push
mov
bswap
pop
adc
push
cld
into
leave
xor
aaa
lcall
mov
les
sub
mov
xor
push
jecxz
cmovae
aaa
lret
push
outsl
inc
xchg
pushf
jmp
add
inc
ret
push
sti
xchg
inc
rclb
sti
es
jb
ss
mov
mov
or
faddl
jmp
mov
and
sarl
xchg
jle
test
icebp
insl
adc
push
scas
repz
mov
sub
aam
inc
adc
add
popa
inc
ja,pt
in
insl
cmpl
lods
jb
fstps
aad
in
test
and
sti
xor
out
mov
xadd
insb
sub
out
fdivl
iret
aaa
xchg
cmpsb
jle
cmp
sarl
aam
out
add
jb
dec
insl
xor
int
mov
sbb
out
ljmp
movsb
insb
mov
dec
filds
pop
pusha
jge
xchg
mov
inc
push
push
ret
push
sub
or
jecxz
add
nop
pop
mov
sub
mov
loope
daa
dec
aaa
inc
mov
movsl
add
push
pusha
sbb
inc
lcall
sti
sbbb
jb
and
xor
jb
push
sub
pop
fdecstp
pop
loop
sahf
sti
mov
dec
add
out
push
pop
divl
popf
and
test
cmp
scas
enter
in
adc
loop
jmp
xchg
insb
sub
mov
icebp
push
jnp
int
jle
test
mov
sub
std
in
adc
scas
mov
jb
enter
sahf
mov
push
pop
pop
add
push
adc
cwtl
jge
mov
dec
outsb
adc
jae,pt
xor
test
push
icebp
sub
pop
xor
xchg
dec
in
nop
jo
bound
cmpsb
test
imul
popa
gs
push
ljmp
mov
jmp
mov
sbb
xor
or
movsl
adc
pop
cmp
pop
ficomps
shl
ja
mov
jecxz
adc
inc
addb
in
roll
fcoms
test
xchg
pop
negb
icebp
movsb
dec
out
shr
fiadds
loopne
mov
in
hlt
popa
out
lret
ret
cmp
das
popf
imul
sbb
mov
jno
lret
arpl
mov
inc
cmp
inc
pop
sbb
std
fmul
add
inc
jp
cltd
gs
jmp
jns
aam
mov
pop
ljmp
test
test
fs
aaa
movsb
mov
inc
dec
mov
das
outsb
mov
add
in
sbb
fst
in
sbb
push
mov
push
adc
ja
xor
xchg
jle
adc
or
push
mov
and
jne
push
jmp
cmp
xchg
leave
out
lahf
or
or
mov
jle
fidivrs
imul
and
xchg
fidivrs
cmp
pop
pop
and
cmpsb
or
mov
inc
pusha
mov
jae
push
in
test
inc
mov
out
cbtw
sbb
mov
or
cmpsl
pusha
add
and
add
xor
fcompl
lods
inc
int3
pop
scas
mov
mov
xchg
aam
ds
aam
bound
push
imul
inc
pop
aaa
lods
cltd
push
mov
fcomps
xchg
test
outsb
lods
sbb
mov
add
js
sbb
jb
cmp
sti
sbb
scas
arpl
xchg
rorb
dec
cmp
movsl
pop
mov
mov
pop
enter
pop
repnz
ds
mov
push
jecxz
sbb
jle
aaa
xlat
cwtl
mov
xchg
push
cmc
mov
lret
jo
cmp
cltd
stc
hlt
pop
aam
lret
dec
mov
les
popf
cmpsb
jmp
aaa
lock
sahf
pop
stos
or
inc
lcall
frstor
push
pop
mov
push
pushf
aad
int3
xchg
sub
lds
iret
clc
pop
add
dec
repnz
xorl
lret
mov
sbb
and
jg
push
or
stos
adc
mov
fimull
jb
sbb
icebp
data16
mov
out
shlb
xchg
jle
sti
adc
push
hlt
jae
dec
popf
shlb
cmpsb
or
pop
mov
pop
sbb
cmpsb
stc
cwtl
mov
jno
inc
cmp
xchg
mov
std
jl
push
mov
enter
lea
jle
fisubl
inc
fst
cmp
adc
add
dec
inc
cmpsb
fcoml
iret
cmp
ss
daa
loope
mov
shrl
pushl
jne
pop
sub
aad
cmp
ficoms
enterw
leave
js
pusha
ret
and
sti
int3
push
adc
stc
xor
out
fdivp
dec
mov
das
xchg
inc
jle
adc
or
mov
cli
adc
push
sti
pusha
nop
xacquire
cmp
out
xor
lea
dec
data16
dec
sub
js
push
sbb
push
adc
adc
jmp
lods
xor
cs
xor
call
xchg
sbb
xchg
mov
rcr
and
mov
xor
popf
sub
jo
in
negl
or
aad
in
push
jle
mov
orb
lea
bound
or
lahf
ds
ds
bound
repz
dec
dec
test
xchg
xchg
sbb
pop
into
andb
adc
ss
outsl
ficoms
mov
fistps
outsb
dec
scas
xlat
dec
loope
xor
fisubrl
or
dec
pop
xchg
sbb
or
and
icebp
nop
xchg
loop
cld
pop
push
imulb
insb
lret
jmp
adc
pop
arpl
cmp
cld
sbb
sub
and
cmp
aaa
mov
ds
add
shrl
pop
test
dec
push
pusha
fisttpll
outsb
pop
xor
mov
jns
add
mov
fdivs
mov
mov
std
push
xlat
icebp
rcrl
pop
jle
fsubl
dec
jl
mulb
jl
xchg
mov
cmp
and
inc
inc
dec
out
dec
cmp
fwait
and
scas
bound
mov
xchg
mov
jge
je
add
fbstp
sub
add
movsl
push
jmp
xor
movsl
cvtdq2ps
cmpsb
mov
jbe
jg
or
fsubs
out
repnz
dec
mov
test
lret
dec
je
push
sbb
fnstenv
popf
inc
sbb
insl
iret
lret
clc
ss
mov
xor
pop
imul
mov
pop
sbb
arpl
sub
sbb
insl
imul
scas
lock
lret
and
sbb
xchg
adc
fstpl
lods
jp
mov
dec
lea
out
cmp
dec
call
dec
fsubl
mov
mov
mov
mov
pop
inc
pop
xchg
mov
outsb
sarl
rcrl
data16
add
outsb
lret
sbb
bound
ds
or
jns
lret
jno
stos
mov
jb
mov
data16
test
cmc
loope
dec
push
adc
dec
pop
outsb
sti
sbb
mov
orb
outsl
xor
in
jl
scas
adc
cmpb
test
nop
jbe
repnz
fstl
fistps
and
pop
mov
mov
adcl
pop
sbb
mov
sub
and
mov
sbb
std
push
xor
aaa
cmp
js
mov
in
xchg
fstpt
loope
test
in
imul
sub
jge
xor
or
xchg
aad
pop
stc
dec
pop
pusha
mov
mov
jecxz
push
pop
arpl
scas
pushf
jp
pop
cmp
out
adc
xchg
mov
je
xchg
addr16
dec
add
jb
jb
pusha
mov
sub
daa
jp
sbb
cld
loop
sarb
mov
xchg
call
mov
adc
imul
xchg
test
enter
inc
aaa
cmp
or
cwtl
repz
fisttpll
mov
mov
adc
sbb
xor
sti
lods
pop
mov
jne
sub
aaa
movsl
inc
je
popa
ljmp
outsb
mov
fs
gs
mov
daa
jb
fisttpl
mov
out
sbb
push
cmp
rclb
mov
and
fsubrl
andb
jb
inc
and
sub
push
lcall
sbb
divb
dec
pusha
jl
js
add
imul
leave
xchg
sub
or
cmp
and
jno
cmp
jb
dec
lcall
ja
sbb
jnp
icebp
mov
jecxz
push
iret
arpl
sub
xchg
fwait
mov
adc
jmp
dec
pop
jp
not
inc
in
pop
cmp
mull
push
enter
out
outsb
std
pop
or
sbb
sub
xor
fdivs
sbb
test
je
sbb
lds
mov
mov
test
dec
inc
jne
sbb
mov
mov
push
xchg
push
mov
in
shll
aaa
call
mov
rcrl
sbb
in
cmp
xlat
hlt
repz
cs
pop
lret
or
pop
lods
lock
hlt
decl
paddq
dec
xor
lds
ss
xchg
in
cli
mov
lret
push
mov
adc
add
xor
xor
ficoms
and
call
nop
popf
gs
sub
test
js
jbe
out
inc
add
inc
lods
inc
pop
inc
test
leave
fdivrl
jmp
pop
mov
test
xor
add
cmp
mov
sarb
cmp
test
xchg
subl
jge
and
ss
or
mov
inc
cmp
sbb
mov
adc
dec
cmovne
insb
xchg
repz
or
add
add
out
pusha
shrb
cmp
es
sub
inc
std
jno
gs
sbb
and
loop
add
sbb
aaa
pop
mov
dec
shl
stc
xor
outsb
sbb
ss
mov
sbb
dec
mov
repnz
insl
cmp
pushf
cmp
mov
adc
xchg
sahf
ret
cmp
fstp
cmp
movsl
fdivrs
push
push
cld
in
je
cmpsb
ljmp
jle
rcll
sbb
mov
arpl
daa
pop
inc
aas
push
jbe
mov
mov
mov
inc
aaa
out
insl
pop
sbb
dec
iret
popa
sbb
lahf
scas
leave
in
mov
mov
mov
pop
stos
outsb
dec
or
jg
stos
mov
xchg
pop
mov
mov
stos
rcr
xchg
repz
adc
mov
arpl
push
mov
scas
cmp
or
pop
fsubrs
and
inc
lahf
sbb
dec
lret
es
pop
fisttps
leave
pop
iret
adc
push
mov
mov
in
in
cmp
pop
stos
pop
out
fnstcw
and
mov
push
sub
inc
ss
or
xchg
loopne
pusha
or
insl
xchg
jo
imul
pop
cltd
int3
call
leave
push
addr16
or
sbb
mov
outsb
notb
rorl
aam
jle
std
mov
jmp
fwait
pop
aam
mov
or
or
inc
or
push
pop
cmp
faddl
lods
and
outsb
mov
loop
inc
sub
push
mov
mov
jne
sbb
insl
inc
add
stos
idiv
mov
dec
dec
push
inc
je
xor
push
jno
inc
mov
xor
xor
mov
imul
cmp
lock
pop
adc
aad
jmp
lea
ja
mov
mov
and
pop
aaa
icebp
xor
jge
test
les
jge
xchg
loope
add
pushf
jb
cmp
xlat
xchg
lea
bound
cmp
adc
lock
outsb
dec
daa
ret
lea
loopne
hlt
test
cmpsl
sub
push
and
enter
pop
faddl
imul
sar
push
pop
sbbl
dec
imul
int3
jg
aaa
cmp
inc
dec
mov
mov
stos
scas
pop
popa
mov
stos
add
sbb
jl
push
add
loop
aaa
mov
pop
cmp
mov
and
stos
aaa
adc
mov
movsl
jns
mov
sti
sub
jo
sbb
mov
cmpsl
subb
test
in
movsb
jmp
fcompl
push
hlt
movsl
or
arpl
xchg
in
rolb
mov
jne
pop
jl
or
and
cmp
iret
add
stos
mov
shrl
and
fs
les
cld
push
jo
and
inc
cmp
ret
imulb
jbe
je
dec
cwtl
scas
in
lods
call
sub
and
lret
scas
jp
pop
pop
mov
push
jp
jp
jne
fs
cmp
sub
mov
pop
testb
enter
pop
cmp
jb
xchg
pop
cmpsb
adcb
lea
jecxz
leave
pop
incb
sbb
icebp
rcll
push
stc
push
sbb
sbbl
and
leave
test
test
pop
movsl
inc
dec
inc
mov
aaa
xchg
inc
jno
push
inc
sub
lea
mov
or
dec
cmp
mov
xor
sbb
push
out
inc
adc
push
inc
pop
mov
push
or
ljmp
xchg
bound
popa
xchg
pop
fcoml
repz
jo
add
in
lret
push
cli
data16
out
fsubr
pop
push
inc
bound
cmc
jp
dec
and
sbb
movsb
gs
xchg
loope
jno
lods
nop
lret
jge
dec
xchg
imul
stos
cmpb
adc
mov
dec
jnp
aaa
add
pushf
icebp
pop
sbb
jo
sbb
sbb
shl
xchg
fnsave
push
int
and
lret
dec
jo
aaa
mov
adc
test
xchg
mov
lcall
arpl
fwait
lods
cmp
add
and
add
jbe
inc
sub
jle
lret
pop
popf
pop
std
test
push
sbb
push
outsl
stos
je
sub
int3
fistps
and
mov
pop
jno
out
sub
adc
aam
push
idivl
pop
fisubrs
mov
sbb
outsb
test
mov
inc
sahf
xchg
ss
jne
leave
mov
movsl
cli
add
and
pop
dec
inc
inc
add
jl
cmp
jb
bound
sti
inc
fs
in
iret
dec
jle
out
fnstcw
jp
inc
movb
test
mov
dec
sbb
insl
xlat
adc
or
jge
in
or
sub
mov
mov
mov
cld
mov
adc
pop
mov
sbb
lds
xor
imul
add
add
jae
pop
or
repz
pop
sahf
pop
push
push
jmp
adc
cmp
or
cmp
or
or
inc
lods
stos
loopne
and
ss
aaa
loopne
fwait
test
pop
insl
sbb
mov
adc
fnstcw
inc
bound
fcomps
push
jbe
jnp
push
pop
je
mov
sahf
dec
and
mov
add
push
mov
addr16
push
arpl
xor
fwait
shl
ret
jmp
pop
and
pop
fdivrl
jge
cwtl
out
inc
in
mov
fwait
xchg
lret
fisttpl
xchg
adc
push
sbb
xchg
xchg
jl
lods
xor
jp
inc
enter
int
and
dec
dec
je
fsubrl
pop
jecxz
rcrb
mov
mov
sub
inc
add
push
rolb
push
add
lahf
mov
xchg
sbbb
mov
roll
sahf
ljmp
daa
xor
lahf
js,pt
pop
sub
sbb
out
sti
jp
xchg
dec
loopne
mov
jne
push
pop
push
sbb
xor
pop
or
rcrl
jl
push
testl
pop
cmpsb
mov
cmp
icebp
icebp
push
add
int3
cmp
ss
out
xchg
lds
adcb
inc
call
push
push
iret
mov
push
and
adc
rorl
hlt
sub
xchg
push
je
leave
pop
mov
and
sahf
scas
sub
jne
popf
and
loop
pop
inc
adc
cld
add
pop
idivb
dec
subl
cwtl
mov
cmp
push
shll
sbbb
inc
adc
sbb
les
add
jge
sub
rcll
xchg
les
and
lret
fwait
adc
leave
out
mov
and
arpl
notb
das
push
testl
xchg
repnz
and
rcr
ja
jp
push
xchg
inc
pusha
pop
call
insl
pop
movsb
imul
repz
xchg
push
dec
mov
mov
push
sub
mov
mov
xchg
mov
into
hlt
jns
fbstp
movsb
or
icebp
daa
hlt
insl
in
stos
push
stos
dec
pop
rcrb
cmp
int
mov
add
shrl
adc
fwait
jne
mov
fsts
arpl
std
dec
pop
mov
mov
pop
repnz
jecxz
bound
xlat
scas
or
mov
pop
xor
jno
cmpsb
inc
pop
fnstcw
imul
jp
das
jge
into
and
fisttpll
iret
imul
lods
jno
lods
aaa
ss
inc
lods
sub
fwait
sub
outsl
or
push
xchg
aaa
decb
and
dec
mov
fcompl
xchg
mov
repz
rcll
jb
fistpl
mov
aas
add
mov
mov
test
xor
aad
stos
lret
cmp
pusha
jle
adc
hlt
hlt
dec
sub
fisttpl
es
int
fisubs
mov
push
mov
xchg
in
lcall
aaa
fs
or
cltd
jl
fcompl
push
pop
jg
sbb
aaa
xchg
pop
jae
gs
mov
ffreep
in
cmp
mov
add
jp
mov
jmp
xchg
inc
pop
ds
push
repnz
call
push
and
adc
aad
lcall
int
in
in
imul
sti
jne
inc
xchg
cmp
pop
cmp
add
cltd
sbb
flds
pusha
xchg
sub
mov
push
and
sarb
cmp
mov
mov
xchg
pushf
fisttps
cwtl
movmskps
out
sbb
inc
fisubs
cs
sub
lds
dec
pop
pop
adc
icebp
int3
mov
aam
inc
call
pushf
pop
sbb
std
push
cs
and
pop
jo
in
jo
jge
rclb
sbb
xor
jecxz
jle
nop
fs
pop
rcrb
int3
cli
xorb
adc
mov
mov
sbb
push
mov
lret
popf
mov
les
mov
pop
adc
jnp
test
sti
cli
cltd
aad
pusha
lret
pop
pop
ret
jp
inc
adc
fdivrl
mov
dec
loop
dec
cmp
jmp
pop
dec
push
jns
ljmp
lret
leave
scas
or
test
jle
aaa
push
xor
sarl
aaa
sub
out
ljmp
mov
test
lret
push
mov
fcompl
pop
test
push
rolb
aad
sti
cmp
inc
lds
push
pop
inc
ret
shlb
ds
and
ja
lret
pop
movsl
jle
int3
inc
pushf
mov
push
adc
insb
movsl
rol
and
xlat
aam
dec
sbb
inc
test
stos
mov
fs
pusha
sbb
pop
add
push
aas
fdiv
mov
cmp
lcall
xor
popa
ds
mov
dec
fsubl
push
into
movsl
aaa
push
jl
cmp
jbe
cltd
cmp
mov
test
mov
lods
push
adc
stos
jns
mov
sbb
stos
jle
add
mov
cmp
jp
xor
jbe
adc
cmpsb
pop
popf
xorb
adc
jo
xchg
cli
loope
jecxz
and
mov
rol
std
inc
jno
xchg
cmpb
cmpl
adc
in
int
fistps
das
icebp
fiadds
cmc
mov
inc
out
mov
add
push
and
jbe
inc
jmp
cmp
xchg
mov
lcall
nop
call
and
inc
lret
out
mov
jmp
out
outsb
mov
orb
dec
ret
jae
mov
sar
imul
movsb
rorl
es
ret
insb
push
pop
add
mov
xor
shlb
rorl
cmp
inc
shlb
loope
sub
sbb
sahf
mov
jnp
sbb
ja
div
mov
repz
fwait
outsb
push
dec
jmp
call
les
pop
inc
push
sub
push
pop
inc
or
bound
lret
jbe
fsubs
fwait
xchg
lea
dec
and
xor
and
cld
cmpsb
fs
sub
xchg
pop
pop
shlb
sahf
cmpsl
cli
lcall
mov
movsl
in
and
out
sub
repnz
shll
into
out
insb
cmpsl
jb
int
dec
add
pop
fisttpll
and
pop
and
idivl
mov
js
mov
in
ror
pop
aaa
leave
cmp
and
in
test
add
jbe
mov
xor
imull
pop
and
mov
adc
icebp
insl
sahf
xchg
das
cwtl
out
mov
jmp
nop
jecxz
mov
loopne
sbb
xchg
js
jno
cmp
lcall
insw
aaa
cmp
cltd
je
cmp
enter
pop
dec
es
lods
pop
jns
pop
adc
out
movsl
lea
sbb
sbb
clc
mov
dec
stos
addb
outsl
ja
mov
dec
push
pop
notb
mov
inc
push
push
xor
test
dec
mov
or
inc
dec
scas
cltd
dec
scas
pop
xor
push
int
or
scas
dec
xchg
cmp
pop
mov
aad
jb
sub
hlt
lcall
fstpl
mov
lret
std
mov
pop
inc
pop
ss
push
jbe
imul
lret
mov
ljmp
popf
dec
sbb
lock
fsubrs
add
pushf
insb
sbb
shll
cmpsb
lods
push
std
pusha
sbb
popa
testl
bound
jnp
popa
sbb
or
xor
xchg
push
dec
mov
sbb
dec
dec
cmp
mov
jb
lock
push
adc
in
xchg
xor
cmpsb
sti
mov
dec
xchg
mov
add
ja
sub
sahf
cmp
cmc
sbb
ds
repz
or
testl
nop
add
push
ret
jnp
and
lret
les
or
inc
loope
cmp
pop
add
cli
std
mov
bnd
mov
push
nop
or
lock
sbb
pusha
jp
sub
das
mov
jne
push
outsb
cmp
and
sbb
lods
insb
sub
push
int3
lahf
add
pop
xchg
mov
dec
inc
data16
aaa
bound
and
lock
fwait
or
inc
push
cmp
xor
xchg
les
cs
es
mov
aas
call
inc
jg
xor
push
xchg
jne
sbb
bnd
lea
xchg
in
ljmp
aas
add
push
mov
or
ja
dec
or
push
outsl
lods
cmpsl
and
jb
stos
arpl
lock
pop
mov
dec
mov
jmp
adc
scas
xor
sub
push
bound
dec
cwtl
mov
push
out
or
sbb
pop
pop
sti
xchg
pop
sub
pop
das
arpl
jmp
push
ret
movb
cltd
push
jns
int3
cmp
inc
push
sahf
and
add
sbb
orb
cmp
out
test
mov
xor
bound
xchg
scas
data16
pop
or
fwait
sbb
inc
in
xchg
pop
enter
bound
lea
push
test
mov
or
ret
ds
xor
mov
pop
or
ds
mov
mov
call
sub
mov
mov
mov
add
mov
enter
inc
ja
outsb
bound
addr16
mov
inc
aam
push
addr16
xlat
idivb
adc
jo
das
data16
adc
loop
add
aaa
xor
cmp
mov
rolb
outsb
popa
sbb
mov
inc
outsb
ss
sbb
jg
fdivl
hlt
hlt
sub
jmp
aaa
inc
push
sub
inc
cltd
das
push
add
imul
mov
js
rclb
in
mov
bound
xchg
cmp
lods
xchg
pop
out
out
aaa
inc
xor
daa
das
jae
jno
add
pop
pushf
xor
sub
insb
push
add
dec
mov
xchg
or
push
aaa
dec
dec
aaa
cmpsb
xor
cld
add
jb
sbb
push
repnz
lret
das
jno
add
lret
adc
pop
jle
clc
call
rcrl
dec
add
and
sahf
cwtl
push
sub
pop
jae
and
xor
aaa
sti
imul
xchg
in
xor
js
dec
loop
dec
sbb
pop
sbb
fsub
arpl
mov
subl
cmp
cltd
mov
insl
iret
pop
mov
shrl
cmp
dec
lds
scas
aam
sub
arpl
sti
sbb
orl
dec
jl
dec
cld
repz
mov
rorl
jg
test
add
call
pop
push
repnz
xor
push
ja
enter
pop
fs
sub
pop
sbb
and
jle
arpl
aad
addl
into
adc
and
sub
pop
jp
push
icebp
ret
jge
or
in
rorb
hlt
mov
rcl
imul
icebp
xor
into
xchg
xor
out
fldt
sti
xor
xor
jle
mov
add
push
fistps
iret
int
push
and
arpl
pop
fnsave
add
in
outsb
and
xor
sti
test
jle
sarb
sbb
mov
call
repnz
push
leave
hlt
lds
cltd
mov
arpl
pop
out
bound
mov
cmp
mov
movsl
sbb
enter
push
std
lods
into
or
addr16
cmpsb
and
cmpsb
dec
cmp
jno
xchg
mov
pop
pop
cmc
imul
sbb
popf
fnsave
lret
add
outsl
pop
ljmp
mov
sub
cmp
cmpsb
stc
pushfw
pop
in
lret
mov
jle
int3
iret
push
push
jae
cmp
outsl
shlb
mov
cmc
mov
inc
fwait
nop
aaa
and
ss
out
mov
das
mov
pop
jne
cmpsb
fsubs
cmp
cmp
ljmp
push
cmc
inc
je
icebp
adc
adcl
jmp
pop
icebp
mov
dec
xor
fwait
xchg
pop
sbb
cmp
push
out
nop
rcrb
leave
clc
jmp
cmc
roll
or
out
in
mov
xchg
test
inc
in
add
push
in
cmp
and
pop
es
int
addb
lcall
xlat
add
lods
lock
lds
push
mov
dec
fmuls
imul
jg
int3
and
push
fsubrl
push
sbbb
addr16
xor
or
rcrb
push
pop
push
dec
jge
dec
mov
cld
insl
pop
ret
xor
cmp
cmp
in
lods
mov
pop
mov
test
icebp
lret
add
cmp
xchg
repz
iret
int
jp
gs
jns
jno
mov
push
push
movsl
or
incb
push
adc
mov
cmp
es
stos
sbb
inc
in
push
xor
jo
sub
fbstp
mov
push
aaa
clc
out
neg
xor
ljmp
aas
fists
repz
je
sti
mov
rcrb
xor
lods
ja
lea
daa
jl
imul
mov
dec
pusha
mov
into
cmp
xor
outsl
push
push
sbb
cld
pop
jb
mov
inc
movsl
orl
fsetpm(287
lahf
mov
mov
inc
fiaddl
inc
sahf
sub
xor
push
xchg
cmp
mov
mov
pop
in
add
sti
ja
xchg
jb
pop
pop
rorb
cmp
dec
shlb
popa
xor
or
out
arpl
stos
stos
mov
mov
mov
xlat
arpl
test
inc
lods
mov
adc
dec
loope
movsb
cmp
mov
push
in
and
xor
gs
loope
std
sbb
lock
jns
mov
push
aas
push
mov
test
outsl
popa
mov
fs
xor
jne
xor
xor
xchg
lea
push
inc
movb
lret
and
frstor
loope
jp
add
je
notl
sbb
notb
xor
push
lea
jb
dec
test
cmp
cmp
add
negl
push
sub
out
mov
fisttpll
aad
cmp
sbbb
cmpsl
mov
pop
rcrl
dec
push
mov
jmp
push
pop
cmpsl
mov
jo
lcall
jae
fwait
sbb
cmp
cmpsb
pop
out
pop
jns
je
in
mov
gs
out
stos
or
or
xor
pop
cmp
ss
arpl
pop
push
sbb
push
arpl
aaa
mov
in
stos
in
mov
scas
inc
sbb
add
aam
pop
lods
pop
pop
jl
pop
mov
mov
ss
xor
inc
scas
ss
fs
in
cwtl
push
add
jbe
jmp
test
adc
rcl
loope
xchg
push
xchg
xor
loop
cmp
stc
xchg
aam
addr16
cmpsl
push
std
pop
jo
pop
dec
mov
les
test
cmp
lahf
or
inc
std
pushw
repz
sbb
inc
das
mov
loopne
dec
stc
mov
and
rolb
daa
imul
jp
jae
cmpb
bound
sbb
ret
adc
push
cli
sub
sbb
inc
and
inc
mov
and
adc
orb
popa
aam
or
xchg
insb
push
pop
test
shll
enter
and
into
cmp
sub
hlt
int
sbb
push
call
or
js
jo
dec
pop
lds
cmpsb
movsl
lods
push
and
jge
sbbb
sahf
mov
je
repz
pop
lahf
cmp
lret
test
inc
das
rcrl
sub
mov
cmp
pop
adc
pop
aaa
adc
rcrl
pop
addr16
mov
in
ljmp
icebp
outsb
daa
jae
xchg
xchg
mov
cmp
cld
pop
cmp
mov
and
dec
jge
test
inc
sub
dec
loope
test
pop
insb
fcoms
push
push
mov
jp
dec
std
arpl
push
fnstenv
fbstp
rolb
outsb
add
outsl
je
and
xchg
cmpsb
enter
jmp
pop
jo
or
mov
jle
inc
in
es
ljmp
mov
mov
and
loope
xchg
lret
pop
mov
sub
mov
cmp
add
mov
xorb
mul
nop
mov
dec
daa
inc
cltd
inc
cmpsl
pop
dec
sbb
xor
push
push
xor
sbb
sub
or
fcoms
xor
fistl
pusha
fisttpll
dec
ret
arpl
xor
or
cmp
scas
jnp
out
jae
clc
bound
sub
sbb
and
cld
pop
dec
or
sti
mov
lret
mov
ret
rclb
cmpsb
lea
mov
xor
jle
cli
imul
xchg
jo
jge
mov
dec
lret
mov
dec
jge
dec
out
loopne
pushf
sti
loopne
mov
mov
in
xor
push
cmp
shrb
push
inc
daa
mov
push
fiadds
enter
mov
pop
lock
sbb
sbb
pop
test
stc
shlb
mov
loope
lret
xchg
lcall
xchg
inc
fs
add
push
adc
push
pop
outsl
mov
push
insb
shlb
sbb
push
popf
aaa
xor
xchg
sub
inc
ja
lcall
test
inc
cmpsb
call
lds
push
fs
add
xchg
sbb
sti
in
and
xchg
jmp
pushf
cmp
xchg
dec
subl
repz
jge
dec
rcrl
cmc
jle
fldt
xor
pop
fs
imul
inc
sub
inc
inc
pop
nop
dec
enter
pop
lahf
in
fmuls
fsub
mov
imul
or
sbb
in
cmpsl
sbb
push
hlt
mov
jg
cmp
lret
movb
pop
fld1
leave
inc
loop
aaa
jno
stc
xchg
cli
ljmp
hlt
stos
cmp
ret
jnp
pop
jb
arpl
push
mov
pop
push
inc
cmp
sbb
jmp
add
mov
mov
pop
mov
or
ret
inc
mov
pop
adc
mov
cmp
xchg
cmpsl
jnp
adc
stos
mov
and
in
test
dec
sub
idivl
roll
fwait
mov
mov
mov
mov
push
aaa
gs
int
shrb
or
es
lret
inc
fcoml
rcl
insl
sbb
lret
jmp
sti
fildll
cmpsl
sbbb
scas
pop
lods
test
xor
adc
xchg
repz
xchg
mov
dec
mov
je
jns
pop
pop
lock
inc
ja
xchg
jmp
loope
fistpl
rorb
xchg
repnz
shrb
inc
mov
std
bound
pop
jns
stos
leave
add
jmp
int3
repz
je
cltd
inc
inc
ss
jle
data16
and
mov
mov
sbb
cmc
push
inc
xor
movl
add
dec
pop
jo
call
cmc
imul
cmp
out
addr16
pop
jb
enter
fistl
subl
pop
add
in
fwait
mov
xor
popa
sbb
jo
loope
fldl
jb
mov
adc
jmp
bnd
into
sahf
cmpsl
adc
dec
jle
and
lret
lahf
jecxz
dec
cmp
pop
loop
adc
mov
out
xor
addr16
ss
outsl
dec
insl
outsb
cmp
lock
popf
push
jl
in
jns
into
jnp
clc
sub
aas
sub
out
pop
sbb
scas
and
ss
push
or
mov
outsl
fisttpl
mov
dec
test
and
mov
in
in
loop
pop
dec
ret
mov
pop
pop
insl
cs
or
mov
stos
cmpsb
call
jecxz
jecxz
pop
pop
or
jns
jle
insb
push
inc
pop
cmpsb
and
push
shll
ja
xor
mov
call
sub
fdivl
mov
out
jns
cmpsb
stos
mov
jbe
outsl
lret
sbb
push
mov
sbb
inc
jge
jo
add
fiadds
test
cmc
ja
push
or
cmpsl
pushf
or
xor
into
xchg
or
jge
mov
pop
ljmp
sbb
cmp
pop
lods
fs
xchg
add
jo
mov
fldenv
loope
fstpl
sub
mov
cli
jge
fsts
loop
mov
xor
aas
xchg
adc
aaa
push
xchg
subl
call
cmp
cltd
sbb
das
cmp
sbb
push
mov
outsl
pop
das
fwait
arpl
sarb
xchg
pop
mov
fwait
jp
das
dec
jb
iret
xor
rcrb
scas
push
sub
xorb
pop
push
add
arpl
insl
jge
sbb
fisttpll
icebp
idivb
mov
sarb
call
mov
cwtl
cli
sbb
sbb
and
mov
cltd
ss
leave
jnp
mov
cmpsl
xlat
out
ret
add
js
stc
icebp
lcall
call
pop
sbb
lds
setae
sti
xchg
sbb
daa
pop
loope
aaa
decb
into
add
push
aaa
cmp
fsubrs
aaa
jae
and
dec
cmp
rcrb
add
sbb
cmp
xchg
in
dec
mov
ja
sbb
adc
insl
js
jmp
nop
add
imul
lret
loope
lret
add
fscale
adc
add
aas
inc
pop
push
push
adc
lock
mov
in
pusha
std
jp
out
imul
or
and
xchg
jp
loopne
pop
pop
stos
mov
sti
outsb
and
test
xor
sbb
pushf
mov
fwait
cld
mov
xor
add
loope
aaa
sbb
xchg
mov
pop
pop
push
xchg
mov
mov
and
loop
enter
stc
test
cmp
pop
mov
rcl
std
in
test
ss
ja
dec
dec
jo
pop
push
inc
xor
sbb
sahf
test
mov
mov
jo
mov
pop
sub
push
sbb
dec
jnp
aaa
mov
pop
pop
sbb
mov
and
mov
arpl
aam
ljmp
sbb
into
jle
jp
out
sub
in
fsts
fimuls
test
sub
push
repnz
fcoml
mov
push
sbb
fildl
sub
fbld
push
push
rol
ret
inc
pop
data16
pop
ret
ret
dec
pop
sbb
movsb
pop
or
adc
pop
push
sahf
push
pop
aam
dec
mul
movsl
jp
cs
dec
insl
pop
fisubl
dec
adc
fidivrl
sbb
fucomp
sub
icebp
sbb
xor
mov
pop
dec
jle
testl
jbe
mov
cmpb
cli
stc
cmp
xchg
mov
jnp
test
pushf
mov
arpl
das
pop
or
cmp
aaa
push
add
les
mov
ret
cmpsl
lcall
cmpsb
lea
cmp
int3
lods
sbb
fisubrs
push
add
out
rcrb
jle
xchg
aas
or
loope
xlat
jne
lea
mov
gs
loop
pop
jecxz
mov
shrb
mov
add
add
lahf
data16
sbb
aaa
push
js
adc
subl
imul
int
in
lret
push
jle
sbb
xor
ds
movl
aaa
xor
mov
int
daa
mov
sbb
push
push
insl
push
sbb
scas
add
scas
and
and
pop
push
sbb
add
sub
xchg
icebp
test
cli
ret
jno
push
fmul
and
inc
and
jne
and
sub
inc
xor
mov
scas
jge
orb
outsb
dec
daa
cs
jb
mov
push
jo,pt
ss
arpl
or
in
push
hlt
sti
xchg
or
mov
jo
imull
lcall
fstpl
cmp
sahf
test
pop
sbb
cmp
jle
adc
pop
pop
xlat
scas
out
rolb
dec
lret
loopne
inc
cmpsb
cld
imul
loopne
jecxz
cmp
jle
jnp
in
in
in
call
mov
repnz
loope
mov
inc
and
and
xor
outsb
sbbb
add
mov
inc
negb
lea
flds
aaa
hlt
sub
outsl
pop
test
adc
sbb
pusha
popf
out
stos
jle
cwtl
cmp
add
jne
push
cmc
ss
fldt
mov
or
stc
movsb
jl
pop
insl
push
imul
ret
sbb
inc
dec
mov
inc
add
test
and
mov
sbb
aas
inc
inc
pop
lcall
jmp
and
xchg
stos
dec
jle
fsubs
jno
jg
ds
push
inc
negl
movsl
mov
mov
aam
jp
das
lcall
mov
repz
or
jp
sbb
into
imul
cmp
fbstp
pop
mov
mov
push
mov
inc
mov
sub
pop
or
enter
outsb
jmp
stos
push
push
cli
fnstenv
sub
imul
add
fistps
test
lods
loop
push
subb
mov
fildll
push
sarl
cmpsl
xchg
jg
inc
out
pop
std
xchg
mov
in
inc
shll
adc
subb
or
sbb
sbb
inc
or
pop
mov
pop
and
inc
xlat
and
mov
ss
mov
loop
mov
xchg
dec
sbb
cmp
jmp
dec
xchg
mov
push
aaa
rorl
test
push
cmp
push
dec
les
fnsave
aaa
mov
push
adc
sub
jmp
call
subb
jecxz
jnp
rol
scas
jns
adc
out
outsl
sub
push
cmc
in
out
inc
cmpsl
adc
dec
dec
pop
sbb
ss
and
sbb
loop
xchg
pop
inc
es
cs
stc
loope
add
mov
pop
inc
repz
adc
cs
xor
jns
ds
xor
push
in
cltd
fwait
cmp
sub
push
bound
cmp
cwtl
and
inc
inc
out
adc
call
pusha
inc
cmpsb
jb
dec
inc
jae
imul
inc
mov
xor
inc
xchg
jle
dec
mov
movsl
test
jbe
fnstenv
jmp
pop
mull
in
jmp
adc
push
aaa
sub
outsl
jo
pop
inc
xor
push
adc
ss
mov
and
push
mov
pop
pop
pop
daa
out
adc
sbb
loope
and
push
mov
pop
dec
xor
aas
rcrb
jne
std
rorl
fcomps
lret
mov
or
imul
dec
repnz
lahf
les
call
jnp
mov
push
pop
int3
push
pushf
rorb
adc
sbb
in
fisubl
rclb
cmpsb
aas
adc
mov
stos
xlat
clc
mov
ror
pop
imul
mulb
setnp
push
call
je
inc
ret
shll
jae
ss
xchg
xchg
imull
mov
nop
out
add
pop
je
cmp
add
icebp
lock
mov
xchg
icebp
or
add
push
mov
outsl
adc
out
in
imul
lahf
int3
bound
imul
cs
mov
jb
sub
mov
packsswb
in
cld
dec
pusha
sbbb
fisubrs
call
or
sbb
pop
enter
les
xlat
call
adc
inc
xchg
mov
repz
aaa
pop
ss
pop
inc
pop
stos
push
ljmp
outsl
ficoms
popa
pop
sbb
into
sub
push
pop
cmp
add
bound
xor
add
mov
inc
and
jmp
and
adc
push
push
dec
mov
add
nop
movsl
xor
jo
cli
inc
arpl
add
mov
lods
dec
adc
ss
movsb
push
cmc
mov
dec
mov
or
in
lret
adc
loopne
or
jge
out
adc
cmp
aam
stos
fistpll
inc
insb
aad
jl
popf
push
clc
adc
push
subl
and
popa
incb
fidivl
int
xor
mov
rcrl
cmpsl
mov
aaa
hlt
pop
dec
sahf
dec
inc
push
mov
sbb
xor
clc
pop
inc
or
shl
dec
ljmp
lock
pusha
test
nop
data16
mov
cmp
lock
jg
pop
adc
sbb
xor
out
std
xchg
fwait
imull
pop
mov
outsb
int
inc
push
push
jg
push
mov
sbb
data16
mov
loopne
out
mov
mov
movsb
stos
shrl
xlat
or
test
mov
inc
fstpl
sbb
popa
das
js
add
push
jmp
repz
add
sub
add
les
pop
lods
mov
dec
cmpsb
pop
mov
outsl
stos
and
ja
jecxz
push
imul
fildl
in
mov
inc
testb
pop
mov
icebp
add
adc
loope
call
lea
cli
xchg
push
imul
pop
inc
loope
loop
into
shrl
pop
inc
sbb
jmp
sbb
lret
jmp
inc
rcrb
jno
arpl
pusha
mov
sbb
xchg
jmp
pushf
mov
pop
push
cmp
push
jae
sub
jb
dec
arpl
xor
nop
mov
std
mov
jle
mov
and
push
imull
repz
jbe
mov
imul
push
or
lcall
in
pusha
xchg
and
pop
into
jae
sar
lcall
and
push
aad
pop
adc
shlb
mov
iret
fsubl
insl
mov
ds
or
mov
pop
dec
fsubs
icebp
rcl
jno
stc
adc
pushf
xchg
jb
insl
mov
mov
jne
mov
bound
jbe
xchg
pop
fistpl
mov
push
cmp
pop
push
add
sub
pop
adc
jl
push
scas
movb
movsl
bound
mov
aas
shlb
lahf
sub
jecxz
mov
jge
jecxz
fs
mov
jb
cltd
mov
mov
pop
lahf
dec
addr16
inc
add
fstpl
push
fwait
jnp
out
out
cs
rclb
sub
aaa
push
cwtl
sub
pop
xorl
in
and
mov
in
or
and
cmp
push
sub
adc
idivl
aaa
sahf
insl
adcl
fcomps
je
nop
mov
push
jae
jle
inc
inc
push
fcmovbe
push
test
mov
adc
pop
orb
add
es
jne
cmp
lahf
lds
jge
xor
in
mov
dec
sahf
jns
mov
repz
mov
std
testl
and
out
jl
mov
adc
popaw
aaa
inc
out
pop
jl
mov
pop
ss
loope
leave
roll
pop
cmp
test
nop
push
in
ds
mov
xchg
mov
cmp
test
push
mov
loope
idivl
cmpb
mov
xor
sti
mov
aam
and
inc
out
adc
adcl
mov
mov
dec
ror
dec
pop
sbb
add
sbb
ror
stos
xchg
out
les
mov
popa
push
outsl
xor
jbe
cmp
into
rorb
loope
test
adc
inc
fdivl
loope
insl
daa
cmp
cld
fisubs
arpl
jge
mov
sub
add
or
cs
jne
out
pop
pop
jp
ds
mov
sub
fbstp
mov
push
add
das
in
jge
out
pusha
push
pop
cmpb
xor
ljmp
dec
pop
mov
movsl
data16
and
jbe
popf
sbb
int
andb
mov
into
fistps
jl
add
out
aam
shrl
and
jnp
pop
ret
in
xchg
xchg
inc
mov
orb
lea
mov
push
out
imul
pop
outsb
insb
jno
inc
fwait
and
arpl
inc
in
pop
sbb
mov
fnsave
in
imul
stos
mov
inc
test
pop
adcl
xchg
mov
fistl
sbb
data16
mov
add
xchg
push
out
popa
aaa
mov
or
dec
test
xor
in
iret
aad
outsl
icebp
sbb
enter
mov
stc
sub
iret
pop
push
cli
xchg
and
pusha
mov
dec
or
in
add
cmp
pop
xlat
sub
mov
test
repz
inc
xor
cmp
adc
and
push
jmp
into
imul
cmpsb
repz
icebp
add
insb
orl
pop
sub
jno
mov
sub
dec
adc
mov
xor
mov
cs
inc
push
push
pop
lcall
aaa
cmc
mov
jno
iret
pushf
std
push
dec
aas
xchg
pop
stc
inc
mov
loope
sub
je
aaa
lret
inc
push
int
and
cmp
cld
aaa
test
test
das
dec
or
jle
cmpsb
outsl
ss
xchg
pop
test
cltd
aam
lock
ja
xchg
ret
sbb
cltd
js
aaa
add
testb
xor
mov
xchg
inc
xchg
popf
mov
xor
pop
pop
and
lret
jno
inc
xor
xchg
pop
jge
in
repnz
addl
pop
out
sarb
out
add
sbb
pop
sbb
fildl
negl
mov
cmc
call
in
xchg
mov
sbbb
mov
or
cmpsb
mov
cwtl
mov
jo
push
les
cbtw
jb
push
lahf
loope
sub
dec
imul
add
inc
add
data16
popf
stos
mov
jb
bound
daa
lahf
sub
mov
push
stos
lea
fldt
fcompl
loopne
push
push
inc
mov
push
es
mov
fucomi
sbb
outsb
pop
xor
inc
xchg
pop
mov
fisubrl
jecxz
mov
out
jb
push
jb
arpl
out
jp
das
ja
ss
test
dec
fdivs
arpl
test
std
ss
sbb
dec
xor
pusha
jnp
andb
repz
cwtl
push
xchg
xor
sub
xchg
popf
int3
jo
jle
dec
pop
jbe
leave
mov
fldt
idivl
ret
aaa
out
outsb
idivl
pop
and
push
dec
arpl
arpl
jbe
sub
pop
rcll
lcall
xor
lret
xchg
pushf
std
aaa
dec
push
xor
sbb
outsb
pop
xor
jb
jno
push
das
pop
lcall
sub
lret
dec
js
loop
jl
in
aam
sbb
fmull
push
adc
movsb
lcallw
imul
into
repz
push
jmp
cld
pop
arpl
aaa
mov
loop
lret
xchg
add
pop
out
mov
lock
mov
inc
sahf
loope
sub
adc
loop
push
xor
pop
sbb
and
and
cmpsb
std
and
mov
mov
pop
mov
outsb
jg
aaa
jne
outsb
decl
mov
sbb
std
xor
push
mov
adcl
sbb
add
test
rorl
sarb
pop
in
bound
ficomps
je
lock
sub
stos
fdivrs
xchg
in
into
mov
sbb
ss
add
loopne
popa
aam
mov
mov
adc
push
idiv
scas
pop
push
sbb
cmpsl
jns
imul
mul
repz
add
icebp
stos
dec
and
out
push
xchg
mov
int
cmp
xchg
das
fldt
cmpl
je
mov
stos
call
aaa
and
fisttpll
pusha
mov
int3
cmpsb
out
incb
push
mov
lods
xorb
movsl
data16
pop
shll
inc
pusha
cmp
fcmovbe
sub
decb
xchg
fstpl
fcmovnb
push
pop
push
mov
push
mov
out
fisttpll
nop
mov
imul
jmp
jo
das
cmpsb
popf
dec
mov
cmpl
leave
lcall
push
or
fwait
ret
pop
inc
pop
and
lods
fistps
bound
lds
test
js
into
adc
xchg
sub
mov
mov
icebp
out
xlat
mov
mulb
fistps
xchg
jle
pop
cmp
pop
push
cmp
push
push
add
push
inc
js
jne
xchg
outsb
adc
aas
adcb
xchg
jle
jl
dec
cmp
inc
data16
psraw
jne
stos
in
pop
aaa
sarl
scas
fstpt
lods
add
aam
adc
lods
std
arpl
mov
aam
scas
xchg
imul
data16
inc
and
or
pop
add
ds
pop
cmp
in
in
lods
mov
jnp
jbe
clc
filds
adc
rcrl
sub
outsb
cmp
out
sbb
pop
inc
aad
cltd
sbb
xchg
mov
movsb
mov
xor
aam
dec
sbb
push
hlt
xchg
xor
inc
movsl
sbb
andb
xorl
hlt
stos
les
iret
inc
push
aam
or
movsb
adc
dec
jmp
push
mov
dec
pop
test
icebp
out
lahf
sbb
aaa
out
shlb
mov
jns
xor
hlt
dec
test
je
dec
lret
adc
rclb
dec
rorb
mov
mov
inc
repz
sub
scas
fldenv
lahf
aam
loopne
testl
pop
cmpsl
lret
shl
rcrb
jbe
xchg
mull
arpl
insl
lods
nop
call
repz
add
fwait
xor
cmpsl
in
ret
pusha
jmp
and
and
jae
sbb
add
adc
adc
pop
jp
pop
and
lods
add
jle
loope
sti
mov
jo
pop
cld
outsl
pop
xchg
sbb
imul
mov
fnstenv
out
sub
adc
add
and
imul
enter
or
mov
stos
mov
sti
sub
imul
dec
jbe
inc
push
mov
ret
rol
pop
ret
inc
and
lcall
out
fidivrl
add
pop
sbb
xor
rcrb
jae
cli
mov
pop
loope
rclb
jo
jo
push
dec
push
pop
imul
repz
movsl
repz
push
sbb
rorb
hlt
and
xor
sub
in
push
push
aaa
inc
loopne
pop
or
sahf
xor
std
xor
arpl
sub
push
mov
fldt
lock
mov
cltd
mov
cmp
int3
add
lds
inc
sub
mov
dec
lahf
mov
inc
imul
call
fimuls
subl
mov
repz
jg
pusha
pop
popf
sbb
in
ds
in
ja
jp
mov
push
adc
fdivrs
and
xchg
daa
or
dec
std
jle
push
xchg
xchg
xchg
aaa
fnstenv
xlat
fistpll
cmc
cmpsb
ds
and
pop
jno
and
aaa
iret
fists
int
mov
jg
and
in
clc
scas
lods
shll
pop
rol
cmp
fldt
pop
cmpsb
pop
push
push
dec
mov
and
idivb
loopne
cmpsb
sub
andb
cwtl
jmp
add
and
push
push
pop
adc
jns
loope
icebp
sbb
mov
mov
lret
stc
or
into
inc
push
aaa
add
pushf
xor
mov
inc
paddq
cltd
mov
dec
mov
xor
or
imul
pop
inc
das
jbe
fcom
stc
insl
xchg
xchg
push
call
cwtl
test
repz
mov
mov
lahf
inc
ss
xchg
cmp
out
push
jbe
adc
cmp
test
jp
leave
in
push
in
inc
mov
lret
bound
enter
idivb
data16
inc
fwait
jbe
inc
rolb
insb
clc
shll
stos
cmpsb
insb
insb
jmp
mov
and
popf
cmp
ds
and
mov
test
xor
fisttpll
divl
xor
aaa
test
js
out
and
cwtl
scas
sbb
cmp
pop
std
cmpb
push
dec
out
dec
mov
push
outsb
repz
rolb
mov
pop
outsb
test
push
cmpsb
push
dec
setae
add
in
outsb
adc
sbb
mov
ds
dec
cmp
inc
icebp
inc
sbb
inc
adc
cmp
ljmp
pop
sub
std
push
popf
or
aaa
cmp
sbb
das
push
pop
push
aaa
aam
scas
incl
arpl
cmp
iret
mov
mov
push
sbb
jl
add
sub
and
sbb
add
jb
loopne
jno
xchg
test
in
xchg
into
shlb
cmc
lahf
sbb
aaa
dec
pop
push
or
cmp
push
aas
sub
in
push
jnp
bound
jno
aaa
sti
or
cmc
inc
sbb
xlat
sbb
cmp
stos
lcall
and
imul
mov
pusha
sbb
jae
xchg
dec
mov
icebp
mov
les
jmp
std
push
and
sbb
adc
push
and
fscale
xlat
aad
sbb
lods
aas
inc
adc
int3
and
lret
and
adc
fldcw
test
inc
pop
jmp
add
testl
jmp
cvtdq2ps
xorl
cmp
sub
mov
sti
sbb
pop
ja
cwtl
pop
pop
push
sub
shrl
xor
testl
lods
push
sbb
and
data16
arpl
push
or
pop
sub
inc
pusha
js
pop
cmp
jp
orl
sbb
mov
xchg
jns
mov
mov
and
push
fcoms
insl
sub
xchg
roll
cltd
imul
mov
sar
pop
mov
dec
pop
xchg
pop
cmp
xchg
dec
mov
lret
stos
sahf
sbb
inc
jne
lahf
fdivr
scas
fisubs
in
sub
xchg
jb
aaa
movsl
adc
es
dec
push
jl
cltd
call
daa
dec
lds
out
lock
sarl
lret
jno
mov
rcrb
inc
in
jge
adc
mov
xchg
stc
add
or
into
mull
cli
pop
mov
dec
das
cmpsl
adc
jb
aaa
mov
bound
inc
cmp
pop
or
call
sbb
mov
dec
ja
push
in
sub
incl
movsb
sbb
lock
xchg
mov
popf
testb
xchg
push
pop
inc
and
mov
push
adc
ss
stos
ljmp
fwait
mov
out
pop
jp
psubsb
and
lea
lret
xchg
test
jl
mov
loope
xchg
imul
fwait
xchg
jl
in
aaa
sbb
inc
sub
pop
movsl
adc
inc
addr16
arpl
aas
stos
je
ljmp
fsts
push
cmp
jp
jb
add
aas
mov
pop
dec
fmul
cmc
mov
mov
xchg
icebp
hlt
out
sti
cltd
jl
adc
cmp
pop
inc
andb
dec
lea
imul
bound
pop
push
lret
jl
data16
nop
xchg
rcrl
pop
fsubrl
cmp
mov
stc
les
lods
imul
xor
mov
mulb
push
and
movsl
push
arpl
test
aad
aaa
jp
mov
pop
xor
popf
pop
sbbb
mov
into
loopne
frstor
sbb
inc
mov
negb
fistpl
aad
in
dec
call
jb
popa
jnp
or
imul
pop
stc
pop
sbb
dec
adc
addr16
andb
call
call
xchg
sbb
or
cmp
or
adc
mov
insb
xor
and
mov
std
jg
dec
push
lea
and
iret
test
mov
sbb
xchg
ja
pop
mov
out
pushf
sbb
pop
push
mov
stos
sbb
inc
in
cwtl
and
add
fwait
shrb
lret
out
mov
add
xchg
cli
iret
adc
cli
xchg
jo
cld
jle
rclb
std
test
popa
sarl
out
out
cmp
ljmp
outsl
push
loop
cmp
push
add
push
add
rclb
fs
push
ds
mov
add
pop
inc
mov
je
rol
jo
lcall
cmpsl
mov
mov
loop
les
call
sbb
scas
push
cs
inc
dec
rorb
pop
sbb
mov
lea
lods
dec
jbe
pop
jl
in
inc
imul
jl
push
ror
jne
cltd
push
or
sub
movsl
inc
lds
and
dec
dec
mov
sti
pop
lcall
and
jae
arpl
or
push
lea
mov
sbb
dec
push
add
fsubs
and
rcll
jecxz
fwait
mov
add
sbb
sbb
sbb
mov
jmp
lods
movsl
mov
bound
cwtl
ljmp
jp
pop
scas
jno
cmp
lods
hlt
iret
mov
and
dec
roll
mov
sub
sbb
scas
dec
subb
sarb
mov
cmc
xchg
jle
pop
mov
or
mov
mov
aam
push
xchg
and
push
sbb
mov
cwtl
fisubrs
or
arpl
adc
pop
ss
in
xchg
inc
inc
sbb
push
dec
hlt
int3
sbb
pop
in
outsb
int
fldt
ss
dec
xchg
or
sub
add
fsubrl
hlt
and
dec
xor
and
jp
lods
mov
addb
pop
jae
enter
jg
adc
sbb
mov
insb
sub
mov
stos
test
jge
dec
outsb
xor
sub
adc
fmull
imul
or
pop
jbe
lret
xchg
gs
orb
and
sub
inc
addr16
repz
and
mov
sbb
stos
lds
push
shl
loope
gs
in
pop
jge
loope
or
fsubp
pop
addb
repnz
call
mov
mov
into
into
movsl
rcll
jnp
stc
add
neg
sub
push
ret
lea
std
xchg
pop
mov
push
bound
cltd
push
add
repz
add
mov
in
cltd
mov
mov
dec
negl
inc
mov
push
int3
lods
inc
in
test
lahf
xor
fisubs
fcoml
loope
pop
push
cld
mov
in
mov
ds
xor
mov
lods
pop
jae
test
rep
cmpsb
subb
mov
lods
or
arpl
lea
in
shlb
pop
pop
in
aaa
push
orb
cmpsl
jo
cmp
fdivrl
enter
js
xor
sti
sbb
popa
inc
cmp
mov
fs
add
cmpsb
enter
lret
std
sub
rcll
fwait
jne
adc
push
loop
jne
fs
pop
jl
mov
jmp
jp
fdivrs
test
inc
ffree
or
das
pop
es
cld
push
sbb
inc
pop
cld
push
lahf
sub
pushf
ficoms
cli
test
push
xchg
mov
mov
pop
sti
fsts
fiaddl
inc
pop
movb
mov
mov
jo
dec
xchg
sbb
pop
out
sti
rcrl
xor
or
dec
fdivs
test
pop
xchg
repz
pop
ret
inc
push
arpl
ds
inc
inc
mov
lock
adc
mov
enter
push
inc
sub
cmp
sub
cmp
rol
bound
cmp
out
jle
and
xchg
je
repnz
pop
fchs
pop
daa
mov
aas
lods
fistps
sub
scas
pop
sbb
mov
outsl
adc
or
and
or
push
icebp
cmp
sbb
inc
cli
jp
mov
mov
punpckhwd
xchg
in
xor
mov
jb
je
or
lea
movb
cltd
mov
and
mov
jmp
jg
add
cmpsb
out
js
xlat
jge
das
insb
movsb
and
inc
jne,pt
nop
and
sti
mov
mov
or
inc
cld
fwait
mov
mov
pop
pop
lret
xchg
adc
daa
xchg
cs
in
addr16
cld
mov
xchg
ss
cmp
add
inc
mov
dec
xor
ficompl
add
pop
pop
mov
mov
fsubr
push
outsl
jno
add
aam
and
xor
int3
shl
daa
hlt
movsb
cltd
add
aam
mov
xor
outsb
pushf
xor
xchg
in
movsl
fildll
jg
cltd
repz
jbe
mov
pop
pop
dec
adc
fistpl
lods
cmp
test
lret
push
cmpsl
cwtl
rorb
sub
out
jo,pn
jl
inc
pusha
ret
xor
cmp
jno
add
roll
icebp
arpl
into
lret
cmpsb
dec
pop
jl
dec
pop
in
pxor
ss
xchg
mov
jg
fucomi
fisubrl
stos
out
mov
enter
ljmp
push
pushf
push
mov
mov
or
pop
cmp
cmp
or
out
lds
pop
sbb
and
xor
inc
push
pop
daa
std
add
lret
js
and
es
xchg
loop
jge
adc
call
bound
pop
jl
inc
outsb
rcrl
jmp
das
sti
xchg
pop
insl
ja
add
addr16
lods
sbb
push
inc
mov
xor
inc
push
pop
out
test
cmp
jle
pop
lds
push
aad
pop
cmp
stos
push
jbe
pop
mov
sub
and
pop
mov
pop
mov
push
ljmp
xlat
sarb
negb
sbb
jmp
xchg
repz
pop
insb
push
mov
fs
cmp
mov
pop
rol
mov
fsubl
mov
push
add
negl
ret
faddl
xchg
fnsave
sbb
outsb
dec
or
pop
inc
fs
push
pushf
xchg
mov
pushf
jnp
das
and
mov
in
iret
out
popa
call
data16
add
arpl
adc
lods
insl
sbbb
jno
cltd
cmpsl
cmp
cli
sbb
xchg
in
lret
inc
pop
xor
cwtl
xchg
mov
xor
std
push
push
sub
scas
in
add
je
sbb
mov
movsl
and
pop
add
loope
cmp
call
jne
jae
jo
dec
adc
popf
lods
sbb
cwtl
mov
pop
push
mov
mov
cmpb
int
inc
insb
std
jo
add
enter
mov
pop
push
cld
xchg
aam
push
clc
repnz
push
out
arpl
adc
nop
dec
mov
and
enter
mov
pop
mov
xor
movsl
mov
arpl
roll
out
add
cmp
mov
stos
push
test
adc
lods
lods
mov
xchg
rol
in
mov
lds
nop
iret
cmp
jle
gs
lret
sbb
pop
sbb
out
sbb
adc
out
daa
cmp
test
fildll
popf
out
inc
or
aad
arpl
add
push
xor
cld
jge
sub
in
and
add
fnstenv
jns
mov
stos
ss
cmpsl
mov
inc
add
push
cli
adc
xor
mov
push
mov
inc
les
sbb
pop
xchg
sub
mov
out
fxch
sbb
mov
clc
in
jno
outsb
push
insl
push
enter
mov
outsb
loop
scas
mov
pop
cmp
rclb
loope
sti
inc
sti
mov
int3
sete
xchg
pop
sbb
sti
and
sbb
mov
das
cwtl
add
lods
in
pop
inc
repnz
xchg
mov
out
dec
fwait
pop
sbb
lcall
and
inc
testl
fucomi
sub
testb
sahf
subb
pop
cs
cmp
push
xchg
cmpsl
pop
push
std
insb
loope
mov
jns
aaa
mov
jecxz
jno
outsb
out
dec
pop
outsb
pop
jl
aam
dec
das
sbb
loope
mov
or
pop
cmpsl
mov
push
scas
sti
jnp
pop
subb
and
fsubrl
in
mov
push
or
popf
push
mov
mov
jmp
add
popa
inc
popf
aaa
cmp
in
stos
iret
cltd
sub
mov
movsb
mov
es
aaa
in
dec
call
sbb
aaa
inc
and
je
repnz
pop
add
roll
jb
testb
iret
sub
sub
or
jecxz
scas
jnp
fdivr
and
sahf
icebp
mov
xchg
jmp
pop
ds
jle
les
and
out
jle
xchg
lds
dec
jmp
fs
repz
sar
jl
into
pop
aaa
mov
fnstsw
xchg
pop
in
mov
push
mov
popf
add
iret
cmp
outsb
sbb
repnz
cmc
push
push
popf
xor
stos
push
popf
ljmp
pop
mov
data16
and
cmp
xlat
sub
mov
insb
xchg
fcompl
ja
xlat
inc
stc
dec
stc
sahf
sti
push
sarb
pop
rcrl
sbb
pop
mov
xchg
xchg
loopne
cmp
scas
cmpsb
jnp
mov
pusha
aaa
imul
inc
pop
ret
add
pop
xor
fcompl
or
out
sbb
out
pop
aad
pusha
out
lahf
outsb
ja
dec
out
xor
mov
in
inc
push
adc
xchg
jmp
jle
roll
mov
mov
aaa
out
lods
out
adc
loope
popa
pop
pop
or
dec
outsl
lcall
movsb
clc
ret
sbb
sbbl
movb
mov
xor
adc
cmp
push
popf
cli
lret
aaa
dec
push
fsts
into
lds
push
sub
mov
inc
cli
imul
or
fdivl
inc
dec
xor
lea
push
xor
sti
fs
pop
mov
test
sti
inc
and
inc
jb
mov
sti
call
sahf
jge
inc
lret
stos
in
ret
pop
xchg
addb
or
fwait
sub
out
insl
sbb
addr16
sahf
push
jp
cmpxchg
xchg
and
cmp
sub
push
xor
hlt
loope
sbb
and
inc
imul
in
inc
iret
shl
and
js
add
jne
jle
out
lea
pop
sbb
cmp
sbb
adc
cmp
imul
stos
popa
mov
adc
xchg
pusha
sbb
nop
mov
mov
pusha
fcomps
int3
addr16
add
adc
push
imul
jns
cmpsl
push
inc
ljmp
rorb
sub
adc
push
fsubl
mov
outsl
shll
and
cmp
lea
movb
jecxz
pop
hlt
in
fmull
pop
pop
mov
jle
shrl
addl
dec
pop
lret
or
push
jb
dec
inc
sti
movsl
fwait
xchg
ret
jns
dec
cmp
imul
or
call
cli
add
outsb
mov
sub
jmp
push
jno
ret
cmpxchg
sbb
mov
xorl
ficompl
xor
stc
pop
shlb
fsubr
sti
sub
xchg
subb
push
fistpll
jge
inc
test
dec
pop
adc
push
in
or
push
mov
aaa
xchg
push
sub
bound
les
xor
in
repz
daa
push
clc
sbb
adc
push
insl
sarl
pop
jle
out
sub
jle
insl
addr16
repz
jmp
repz
out
pusha
xchg
cltd
xchg
mov
add
rorb
sbb
shlb
inc
mov
add
repz
jne
mov
in
jge
lds
jno
mov
out
fsts
sub
add
loope
sbb
mov
int3
pop
jno
mov
push
inc
test
insb
lods
adc
popf
test
mov
sarb
ja
push
test
mov
out
push
push
in
push
in
shl
inc
inc
sub
in
mov
inc
js
cmp
sbb
mov
fs
and
pop
subl
out
movsb
push
das
aam
lods
mov
fcompl
in
test
pop
sub
add
mov
jbe
cli
xor
jns
int
addr16
into
stos
fistl
push
fsubp
cmpsl
movsb
inc
push
sbb
jns
cmp
sbb
cmc
in
sbb
data16
das
fbld
cmp
inc
xchg
testl
sbb
adc
pop
mov
pop
orl
int
jno
int
loopne
cmp
xor
mov
xor
test
sbb
push
jnp
js
dec
and
mov
test
arpl
and
and
dec
pop
dec
aam
xchg
mov
cmp
pushf
sbb
or
sahf
mov
imul
fisubs
mov
dec
cld
fadd
cmp
ss
push
shr
cli
inc
pop
mov
out
popf
jne
leave
lods
sub
mov
cmpsl
repz
jbe
and
push
jb
fisubl
fsts
xchg
enter
int
push
push
adc
xchg
loopne
add
in
and
aas
xchg
push
adc
test
jns
sbb
les
dec
mov
insb
sub
pop
adc
lea
dec
mov
mov
out
das
inc
mov
arpl
data16
sub
hlt
lods
add
adc
xor
mov
test
pop
add
lds
lret
out
push
mov
xchg
int3
enter
movb
sub
outsb
je
orl
inc
push
and
ja
pop
in
addl
add
adc
andb
xor
push
add
in
or
mov
add
loop
pop
mov
cmpb
inc
push
psubq
out
jnp
cmp
fsubr
inc
daa
test
inc
pop
inc
inc
jnp
pop
mov
sub
sbb
mov
add
adc
pop
and
stc
int
add
sbb
daa
pop
jbe
and
lret
push
xchg
xorl
xchg
inc
add
in
jne
and
push
cmp
cmpl
cmp
das
mov
and
jge
add
dec
cmp
add
and
mov
or
imul
or
decb
pop
push
pop
leave
pop
in
mov
sbb
aaa
sbb
cwtl
bound
into
insl
int
pop
loop
add
divb
aaa
cmp
mov
mov
fdiv
lcall
aaa
jg
cbtw
stos
je
jne
sub
fs
loopne
ss
mov
pop
xchg
rolb
jle
sub
pop
cwtl
sub
bound
jno
and
sti
cmpsb
push
out
fnstsw
movsl
fs
je
sahf
ja
jp
shll
sti
xor
dec
sub
add
sarb
jno
jle
sub
xchg
bound
movsl
mov
enter
jle
nop
out
pushf
stos
dec
pop
dec
xchg
mov
inc
bound
cmp
sub
out
scas
lods
push
in
sbb
sbb
push
jecxz
inc
sbb
lcall
push
push
inc
cmp
push
jle
and
lret
adc
pop
xchg
ds
mov
xor
mov
in
cmp
shll
push
pushf
arpl
sbb
std
jno
sbb
and
mov
inc
and
aaa
lret
mov
xor
pop
lods
pop
loope
cltd
pop
aam
aam
mov
icebp
adc
xor
inc
sahf
mov
and
nop
imul
xchg
inc
mov
mov
add
hlt
jnp
cwtl
test
sub
sbb
insb
pop
inc
push
les
aaa
sub
sbb
add
repz
push
inc
das
mov
fldl
sub
lret
mov
mov
int
cmp
mov
fldl
dec
mov
lret
cmp
inc
mov
loop
icebp
push
fidivrs
mov
pop
cmpsb
adc
xor
jle
push
outsb
aaa
mov
dec
fimuls
out
and
xchg
jle
pop
dec
pop
ja
cltd
fldl
shll
lea
push
mov
lahf
and
add
fldt
mov
and
jle
nop
dec
out
push
sahf
cmc
imul
pop
sbb
addr16
push
sbb
sahf
mov
addr16
cmpsb
pusha
lds
push
sbb
push
test
pop
mov
dec
pop
add
scas
call
ljmp
daa
mov
aaa
movsl
cltd
stc
and
cmc
adc
mov
cmp
mov
out
mov
add
shr
outsb
cmp
fidivs
dec
int
jnp
xchg
fstpt
sbb
adc
inc
pop
popf
mov
dec
xchg
sahf
jle
jge
out
clc
cmp
repz
fst
pop
lods
movsb
loopne
nop
imulw
nop
imulb
mov
in
lret
jae
stos
stc
pop
cmp
xchg
insb
pop
mov
cmp
scas
test
lret
mov
jbe
leave
adc
jge
fs
mov
sbb
xchg
fwait
js
mov
hlt
xor
jp
pushf
in
mov
mov
push
enter
mov
xor
jle
test
fptan
pop
and
lret
enter
jo
sahf
fwait
mov
sub
sub
jp
pop
imul
push
jno
outsb
add
cmpsl
out
imul
xchg
popf
ljmp
fwait
inc
mov
jnp
movntps
push
inc
mov
sub
cmp
mov
lret
movsb
aaa
mov
loop
adc
cmp
adc
xchg
inc
sub
add
jecxz
iret
cmp
jb,pn
mov
dec
and
pop
popa
jno
add
in
mov
add
xlat
pop
pop
mov
jo
pop
adc
mov
aaa
push
sbb
sub
or
ficoml
xchg
icebp
sbb
call
cmp
add
sbb
or
pop
mov
addb
xchg
loopne
aaa
cwtl
cltd
outsb
cmp
inc
js
mov
mov
add
inc
inc
aaa
sub
mov
out
pushf
pop
iret
in
ret
call
inc
and
lods
nop
add
ret
add
lcall
mov
add
cwtl
cmp
aaa
jge
xchg
dec
dec
aam
sbb
mov
mov
mul
scas
inc
sahf
dec
sti
mov
adc
mov
push
sub
cmp
xor
movhps
aaa
xchg
pop
inc
jnp
test
mov
sub
inc
cmpsl
aaa
fmul
mov
and
push
jle
push
push
push
jbe
sti
aaa
dec
push
sub
lock
jecxz
lea
out
pop
loope
lods
sbb
inc
dec
imul
push
out
mov
inc
add
and
inc
lock
lcall
nop
adc
push
or
fcoml
insb
pop
popf
mov
adc
cmpsl
jmp
xor
pop
mov
mov
cmp
dec
out
in
sbb
aaa
cli
push
pop
mov
pop
dec
jge
insb
cltd
enter
xor
xchg
adc
shlb
cmp
es
push
shll
pushf
lret
test
sub
ss
push
or
add
mov
cld
jle
dec
xchg
int
cmp
pop
mov
test
fsubrs
loope
add
daa
xchg
imul
cmp
sub
lock
adc
ja
sub
sbb
in
jbe
push
adc
dec
jle
les
mov
sbb
enter
pop
mov
dec
hlt
fwait
pop
movsb
outsl
cmp
lcall
stos
cld
andl
in
test
xchg
fmuls
lcall
aas
test
push
idivl
pop
cmp
mov
aaa
sti
mov
iret
fcompl
mov
adc
add
xor
mov
enter
add
jnp
arpl
test
push
int3
xor
mov
idivl
pop
bound
stc
mulb
sub
daa
inc
add
sbb
cmp
in
cltd
jg
and
repz
bound
in
sub
std
fstps
and
ljmp
jb
popa
dec
decl
and
pop
push
iret
fwait
pop
orb
loopne
push
inc
mov
es
fists
lea
dec
and
mov
enter
pop
sub
cs
dec
cwtl
push
push
stos
push
rorl
pop
xchg
push
push
mov
std
in
xlat
ss
add
xor
cld
in
aas
pop
rcr
popa
adc
rcr
pusha
pop
mov
mov
stos
fldenv
push
subb
shll
addr16
mov
pop
jl
push
mov
lock
jl
aas
mov
das
jnp
cmp
movsl
sbb
mov
shl
lock
cmp
push
aas
jne
pop
inc
or
in
pop
inc
outsb
pop
dec
and
imul
xchg
pop
cld
bnd
mov
dec
inc
push
scas
sbbb
movsl
push
in
dec
loop
cltd
mov
cmpl
inc
push
into
push
nop
pop
out
lods
test
in
jg
and
repnz
jno
in
sub
mov
sub
fldl
add
hlt
jmp
dec
pop
push
and
or
int3
ljmp
and
sti
rolb
cmc
xchg
cmpsl
mov
xchg
fldenv
push
notl
arpl
add
push
fadd
fsubp
pop
imul
adc
mov
push
xchg
aam
pop
and
pop
mov
in
pop
dec
insb
pop
pop
ret
sbb
dec
adc
aaa
test
outsb
dec
xlat
cmpsl
and
imul
arpl
das
inc
jl
push
test
shr
sbb
daa
sub
aaa
es
dec
xor
ficoms
pop
xor
lods
ret
aad
rorb
faddl
daa
xchg
xchg
shll
cmp
mov
jb
btr
test
adc
stos
outsl
lea
movsb
jne
pop
xor
jp
xor
fldenv
daa
mov
sahf
les
inc
ret
repz
jb
in
mov
mov
add
inc
xchg
sub
insb
popa
leave
mov
pop
and
jae
test
mov
nop
jl
outsb
arpl
repz
sub
xchg
sub
mov
ret
imul
and
ret
enter
adc
aas
xchg
out
inc
mov
pop
cmp
jbe
les
bound
lcall
mov
jns
scas
cmp
push
je
test
in
sarl
fwait
mov
insl
movsl
inc
clc
dec
lahf
js
fnsave
xchg
out
pop
push
aad
aaa
xor
adc
sub
out
xchg
fcomps
je
insb
das
in
jmp
fwait
mov
pop
cmp
loop
or
aaa
movsb
cmc
jnp
lods
sbb
shl
mov
cmp
or
or
lea
imul
mov
icebp
fcompl
add
sbb
icebp
cli
mov
inc
sahf
add
adc
xchg
cli
sub
or
icebp
xchg
mov
mov
fdivrs
addb
mov
mov
insb
and
sbb
pop
or
sbb
push
pusha
cmpsl
das
dec
fwait
decl
dec
jno
sbb
in
cmp
shrl
fwait
fs
add
dec
out
cmpb
and
mov
xchg
jne
cmpsb
and
repnz
push
mov
inc
push
js
mov
shlb
lods
inc
adc
or
lret
cwtl
ss
mov
lret
fnstenv
fisttpll
icebp
cwtl
mov
arpl
outsb
add
aad
imul
in
stos
and
loopne
fisttpll
shrb
clc
sub
shl
add
and
push
sub
xchg
loope
sbb
cld
and
das
xchg
bound
lods
pop
or
sbb
jle
sbb
aad
xchg
xchg
iret
push
dec
sti
lret
jne
xchg
das
icebp
jecxz
push
pop
dec
in
cltd
mov
xchg
lods
scas
jmp
jb
lds
sarl
fwait
lods
mov
lea
ljmp
aam
dec
mov
jbe
leave
sbb
icebp
sub
mov
jnp
and
iret
push
das
xchg
xchg
mov
fstpl
sbb
js
out
ds
cld
pop
mov
es
out
jl
dec
and
xor
sbb
and
pop
icebp
daa
fistps
imul
sub
inc
cmp
movsb
imul
and
cwtl
and
lret
sahf
mov
shrl
add
mov
lods
movl
push
xorb
cltd
xor
dec
push
inc
xchg
lret
addl
inc
mov
xchg
mov
push
jg
notb
jnp
sbb
enter
add
mov
test
and
xor
adc
fbstp
mov
imul
lcall
pop
push
adc
fisttpll
das
sub
add
inc
mov
ds
lahf
scas
bound
gs
cmp
cmpb
sub
or
inc
popf
call
aaa
movsl
loop
sahf
jno
sbb
lea
adc
rcr
loopne
pop
pop
mov
sub
stc
rcrl
inc
icebp
and
lret
gs
jp
jo
popf
sub
push
xchg
rep
out
jb
nop
add
add
outsb
arpl
inc
jb
daa
sahf
mov
ret
ret
and
rcll
mov
sti
out
sub
or
rclb
push
sub
out
cli
orb
adc
or
xchg
loopne
sbb
mov
jbe
sbb
fsubr
in
in
call
std
rol
and
pop
repz
push
dec
sub
add
in
mov
xchg
imul
inc
pop
sbb
add
cmp
adc
ljmp
add
aaa
and
and
sub
das
imul
scas
lods
pop
adcb
add
mov
cld
lods
fisttps
inc
push
insb
lahf
fwait
imul
mov
xor
dec
pop
xchg
js
ds
mov
mov
outsb
xchg
mov
mov
sbb
push
adc
adc
dec
mov
xchg
push
scas
cmp
pop
rolb
enter
pop
sbb
add
pushl
rorb
mov
push
cmp
rcr
inc
test
sbb
adc
xor
xchg
inc
pop
push
pop
lock
ffreep
cmp
in
aaa
pmulhw
push
add
mov
jp
jecxz
add
pop
popa
fnsave
es
pop
jnp
out
dec
xor
dec
rolb
fwait
pop
out
arpl
pop
mov
lods
or
cmp
adc
jne
push
sub
bound
aad
or
xchg
inc
adc
les
mov
into
xchg
jp
pop
loop
aaa
movsb
pop
inc
iret
jmp
movsl
sbb
cmp
imul
dec
lret
sar
cs
dec
sar
stos
aam
pop
andb
cmp
jge
xor
mov
incl
push
xchg
inc
aam
icebp
cmp
dec
pop
movsb
lods
xchg
inc
xchg
mov
inc
cwtl
bound
adc
mov
lcall
dec
or
outsl
out
add
sbb
leave
push
cmp
xchg
mov
adc
inc
bound
push
in
pop
cli
dec
and
jmp
push
sub
push
mov
lods
lock
fisttps
mov
sub
movsl
and
sahf
jae
rcrb
sbb
cmp
push
adc
fs
cmp
add
addb
cmp
lret
sbb
mov
lods
mov
inc
xor
loope
fs
push
xor
nop
fiaddl
dec
jmp
punpckhwd
shl
dec
popf
idivl
mov
je
sub
jp
xchg
js
sahf
mov
mov
push
mov
sub
insl
adcb
mov
jge
dec
dec
jbe
arpl
fxch
xchg
in
jae
cs
pop
mul
fisttpll
out
sbbb
frstor
test
adc
push
insl
sarl
mov
movsl
out
xlat
sub
pop
and
into
jae
arpl
adc
mov
cmc
icebp
and
jb
ss
mov
pop
xchg
icebp
arpl
add
addr16
xorb
inc
pop
ds
imul
jle
inc
rorl
lahf
scas
mov
or
sbb
mov
in
xchg
in
sti
mov
out
movb
inc
lret
in
sub
jo
aas
xchg
outsl
and
inc
xor
xchg
mov
sub
stos
pop
out
stos
lret
mov
cmp
mov
mov
mov
mov
cmp
mov
push
stc
fsubl
popf
lret
and
aaa
xchg
sti
dec
fnstcw
repnz
in
mov
sbbl
cmp
cs
xor
or
mov
int3
sbb
cmpsl
sub
inc
out
inc
or
mov
dec
loop
sbb
xlat
adc
xorb
sbb
jb
fnstsw
mov
push
dec
decb
loop
outsl
ljmp
xor
jecxz
rcrb
sbb
rclb
mov
lock
sbb
pop
js
mov
pop
popl
repz
dec
aaa
mov
pop
dec
push
mov
cmp
bound
push
ja
and
mov
pop
sbb
int
movsl
xor
mull
test
insl
outsb
cmp
dec
push
notb
push
jle
xchg
sub
das
push
mov
adc
xor
push
jmp
xor
into
arpl
mov
xchg
lahf
jae
and
push
sbb
sti
outsb
sub
ficomps
rcrl
pop
insl
pop
sbb
adc
cwtl
loop
int3
inc
dec
lret
add
jnp
imul
lea
inc
dec
mov
xchg
std
xor
add
sub
mov
lahf
adc
push
xchg
or
xchg
xor
outsb
test
xorb
into
dec
push
add
je
dec
outsb
sahf
xchg
adc
ret
sub
mov
push
gs
popf
imul
dec
jp
jnp
nop
add
mov
jp
inc
cmp
lret
and
jp
mov
or
push
fsubr
mov
or
sbb
lock
int3
and
sub
xor
push
and
test
ss
mov
pusha
cmp
cld
xor
xorb
inc
dec
sbb
test
xchg
adc
dec
mov
mov
cmp
icebp
pop
movsb
int
shll
enter
cmp
movsb
imul
and
test
dec
aaa
test
cltd
and
test
clc
xor
jae
lret
shl
add
sub
jb
and
inc
adc
ss
pop
cs
sbb
repz
dec
or
cmpsl
adc
push
int3
pop
ret
cmp
and
ja
sub
inc
lcall
mov
loope
mov
mov
add
or
in
repz
mov
mov
or
sbb
dec
data16
mov
cli
les
and
jae
mov
add
xor
sbb
sti
pop
mov
or
adc
mov
in
sarb
pop
mov
jb
push
mov
das
cmp
or
mov
aaa
adc
repz
mov
dec
pop
aaa
jo
es
arpl
push
adc
movsl
aaa
xor
les
add
cmp
test
bound
sahf
push
test
lea
imul
cli
push
cli
lahf
dec
ffree
xchg
shlb
mov
cld
pop
testb
sbb
push
in
dec
ret
push
or
lcall
or
fcompl
addb
dec
fwait
sarl
push
or
sub
sbb
faddl
test
mov
enter
pushf
orl
cs
rolb
mov
and
andb
mov
xchg
shl
arpl
sbb
pop
xchg
idivl
jnp
sarl
jne
pop
adc
pop
mov
ss
das
inc
jl
xchg
sbb
or
pop
into
into
repz
sub
cmp
aam
divl
std
arpl
cmp
cmp
sub
cmpsl
mov
jle
ss
repz
mov
popa
cmpsb
aam
or
sbb
scas
js
mov
and
in
adc
pop
imul
repnz
push
fstpl
jnp
mov
add
lea
in
adc
mov
and
cltd
lods
sbb
and
stc
fildl
decb
testb
pop
das
outsl
jae
cmc
mov
lea
or
notl
je
sbb
mov
xor
dec
nop
in
dec
mov
imul
xlat
insb
arpl
jns
inc
and
add
test
pop
jle
and
xchg
add
xlat
pusha
pop
pop
pushf
arpl
cmp
cmpsl
in
flds
sub
fnstsw
cltd
push
mov
mov
fiaddl
xor
lret
xchg
sbb
sbb
mov
push
dec
jns
xchg
loope
sbb
in
adc
daa
fadd
mov
sbb
cld
mov
jns
sahf
push
outsb
jb
mov
movsl
aaa
mov
enter
mov
mov
mov
mov
pusha
add
ss
sti
gs
and
mov
lds
lea
dec
je
repz
mov
repnz
xorl
lret
sub
cmpsb
in
fstps
mov
imul
in
pop
pushf
push
push
sbb
bound
add
push
mov
sbb
iret
loope
adc
pop
sub
sub
shr
and
cmpsb
cli
es
or
mov
sbb
xchg
or
pushl
mov
jb
nop
push
add
sbb
mov
mov
cmp
fisttpll
adc
movsl
or
jb
xor
mov
stos
dec
push
aaa
in
aaa
fsubrs
sbb
lock
cltd
jno
sbbl
leave
ret
popa
mov
jns
pop
inc
mov
pop
and
push
insl
add
addr16
pusha
icebp
lods
mov
movsl
aaa
movsb
sarb
jl
loope
daa
mov
pop
int3
inc
jmp
mov
bound
sub
call
dec
xor
adc
jecxz
shll
cwtl
outsb
loope
mov
adc
loope
jnp
jns
cmpsl
sub
scas
dec
xor
hlt
cmp
pop
sti
loopne
mov
sbb
fdivs
in
push
pop
push
and
ss
mov
pop
mov
push
cmp
adc
lods
mov
push
insl
pop
in
lret
icebp
xchg
or
xor
addr16
mov
cmp
popf
cli
lret
add
repz
mov
arpl
jmp
adcb
push
and
or
out
jno
lcall
ss
imul
movsl
xor
adc
std
int3
shl
sub
pop
sahf
fistpll
stos
cmc
subl
jae
cmp
mov
push
jmp
in
push
js
dec
sbb
push
pop
and
mov
mov
push
mov
mov
and
sbb
out
enter
mov
cltd
stos
adc
mov
xchg
jbe
jecxz
or
sahf
mov
in
pop
stos
fcoml
push
xchg
in
adc
inc
fcmovnu
mov
sahf
ss
imul
orl
cli
insb
adc
test
push
and
jns
xchg
xchg
inc
jne
xchg
test
int
sbb
adc
or
sbb
out
clc
xor
imul
fs
scas
and
jp
sbb
aaa
jecxz
jno
les
sahf
cltd
jge
stos
les
adc
scas
decb
data16
mov
roll
and
pop
and
pop
cmp
loop
jmp
std
roll
mov
aaa
ljmp
inc
lods
fcom
push
outsl
pop
ret
repz
iret
cmpsb
psraw
je
outsl
mov
in
sbb
push
outsb
and
inc
in
xchg
je
cmp
or
aaa
pop
aam
push
mov
scas
movsb
repnz
sti
enter
sub
outsb
cld
or
jb
pop
dec
inc
inc
pop
not
sub
jle
loopne
add
xchg
bound
push
leave
lcall
repz
mov
pop
fwait
inc
add
sti
add
push
and
pop
nop
leave
xchg
push
sbb
and
adc
movb
enter
in
loope
aaa
or
pop
mov
outsl
adc
mov
es
push
scas
in
in
loope
imul
fsubl
stos
mov
rcll
loope
mov
lret
cmp
mov
movsl
movsb
push
pushf
jbe
dec
pushf
sarb
pop
push
jl
or
imul
cltd
or
das
adc
jle
push
xchg
jp
mov
cwtl
and
mov
inc
xchg
xor
inc
xlat
sbb
cmpb
mov
cmp
mov
dec
adc
jb
mov
pop
mov
cld
mov
mov
or
arpl
mov
adc
adcb
mov
sub
lock
and
fisttpl
cmp
mov
dec
loope
sbb
test
push
push
pop
dec
jl
testb
loope
push
cmp
lds
or
lea
cmp
jns
icebp
push
stc
inc
arpl
push
dec
sub
or
fnstsw
aaa
mov
xchg
sub
sbb
je
dec
dec
xchg
movl
xchg
pop
popf
aaa
ret
int3
pusha
inc
clc
fidivrl
push
hlt
bnd
sbb
push
mov
test
mov
sbb
insl
xlat
jmp
mov
sub
test
jl
push
add
mov
movsl
aaa
in
push
out
ftst
sbb
shll
mov
fnstenv
push
jae
jbe
cs
dec
rolb
stos
icebp
je
aaa
es
outsb
xor
mov
pop
lcall
and
pop
sti
add
je
cmp
lret
mov
pop
jae
sbb
push
cmp
or
aaa
cmp
fwait
cltd
mov
inc
dec
clc
push
sbbb
and
ljmp
cmpsl
xchg
mov
sbb
jb
in
cmpsl
sbb
pop
push
loopne
fistpl
hlt
sub
sbb
sub
lahf
and
enter
inc
inc
or
sub
jae
cmpsl
or
popa
lods
mov
cmc
push
iret
pop
into
imul
add
dec
jge
mov
mov
ret
stc
add
dec
imul
jne
dec
xchg
dec
xchg
sbb
jmp
enter
popa
daa
cltd
aam
mov
sub
rcll
enter
and
sub
dec
sbb
push
xchg
dec
sbb
push
pop
in
push
lahf
in
push
jmp
pop
fisttpl
fdivrl
xchg
js
sbb
lock
mov
ljmp
sti
mov
push
mov
fwait
mov
icebp
scas
or
inc
outsl
sbb
mov
jbe
bound
fldcw
cmpb
mov
fcompl
inc
movsb
push
stos
jae
cs
sbb
mov
dec
mov
xchg
jne
push
lds
mov
xor
filds
mov
clc
test
sbb
add
add
push
aaa
push
call
adc
arpl
dec
or
outsb
jle
fucom
std
jp
shll
push
jno
jo
ret
ljmp
push
pop
out
mov
inc
push
ljmp
jno
mov
dec
mov
and
call
arpl
sbb
jnp
pop
inc
aaa
out
xor
dec
insl
cmc
lods
mov
enter
js
test
sub
jae
adc
push
cs
je
add
fidivl
aaa
sar
cmpsl
inc
cmp
popf
cmpsl
pusha
mov
add
cwtl
lods
stc
loope
and
jge
push
jge
bound
sbb
fistpll
inc
ljmp
mov
push
push
jge
jp
nop
jno
pop
movsl
test
clc
aas
imul
cltd
xchg
jae
jo
mov
mov
sbb
roll
repz
into
stos
add
pop
enter
call
and
inc
nop
sbb
mov
inc
movsl
loop
sarl
pop
jns
pop
pop
mov
lods
cmc
and
movsl
cmc
add
jae
jo
push
shlb
xchg
mov
mov
arpl
imulb
mov
leave
js
mov
imul
add
out
sti
or
ret
test
jecxz
es
jnp
jg
jb
fidivs
out
loope
pop
outsb
stc
jp
push
dec
pop
out
test
mov
nop
popf
xchg
jl
dec
push
rol
mov
sub
lcall
mov
enter
and
mov
push
fisubs
pop
add
push
divb
push
test
or
aaa
push
xor
or
push
adc
inc
dec
test
fisttpll
icebp
jg
pop
scas
repnz
xchg
mov
pop
inc
int3
jmp
pop
inc
mov
outsb
ds
cmp
pop
test
andl
ss
nop
and
mov
add
push
mov
xor
push
mov
rclb
fimuls
or
loopne
xor
mov
rorb
push
sub
adcl
addr16
xchg
xchg
xor
fsubrl
push
addb
add
push
ja
std
inc
addr16
lret
jbe
sbb
sahf
pop
jns
or
imul
cs
enter
sub
pop
sbb
shr
fdivrs
sub
xor
imul
cmp
cmp
idivl
or
push
mov
aaa
and
daa
jle
mov
cwtl
lret
mov
std
ja
inc
rol
movsl
mov
inc
push
test
aaa
clc
xor
lret
mov
or
scas
sbb
ret
sub
addr16
das
and
arpl
je
mov
inc
dec
bound
es
dec
or
fbld
adc
sbb
sti
movsb
movsl
add
fildll
pop
jmp
or
jle
sbb
sbb
or
add
lea
and
std
adc
out
jp
inc
inc
mov
ret
adc
or
js
push
mov
jne
in
test
xchg
repz
adc
mov
sbb
iret
sub
inc
xchg
lea
mov
icebp
loope
out
push
jge
pusha
jbe
xchg
mov
sub
sbb
imul
aad
out
cld
lods
adc
or
sub
mov
mov
in
fsubl
cmpsl
imul
movsl
push
filds
inc
ja
jle
inc
ret
adc
imul
sarb
pop
hlt
rcrl
mov
mov
dec
nop
mov
or
sub
mov
rcrl
pop
push
jmp
cmp
adc
jo
int
movsl
mov
jno
pop
repz
add
pusha
sub
movsl
cmp
lods
fwait
scas
pop
mov
aad
imul
jg
leave
movsl
and
xchg
js
xor
int3
lock
test
lods
adc
lods
aas
call
imul
inc
jle,pn
mov
jge
dec
test
cmp
aas
add
push
xchg
dec
pop
sti
push
stc
push
lcall
cmpsl
dec
fstpl
add
jae
dec
push
push
sbb
mov
stc
adcb
mov
cmpsl
dec
xchg
xchg
cmpl
sbbb
mov
arpl
aam
add
cmp
cmp
push
xchg
pop
inc
fsubrs
push
in
rolb
jnp
lods
pop
shrl
mov
insb
cmp
mov
pop
inc
imul
push
push
pop
ficoml
movsb
loope
mov
clc
repnz
ss
cmp
pop
or
scas
fidivs
pop
mov
cmp
es
inc
pop
jg
ffree
dec
mov
addl
gs
adc
add
jb
popa
xchg
and
ret
lods
sahf
fs
adc
bound
imul
ds
jl
lea
jecxz
pop
fsubrs
loope
sbb
xorl
push
jb
cmpsb
sbb
shl
push
jge
enter
sbb
jo
movsb
xlat
lods
xor
aaa
repnz
in
sbb
sahf
jl
sbb
inc
jg
outsb
int
insb
jbe
popa
sbb
inc
pop
in
and
adc
adc
in
push
loope
sub
fldlg2
xor
rorb
or
aam
sar
pop
pop
sbb
and
js
leave
cli
sbb
sub
or
jle
inc
popf
int3
add
mov
outsb
roll
xchg
arpl
sub
adc
cmp
mov
push
shl
ret
push
sub
pop
mov
adc
fsubl
cmpsl
sbb
in
or
idiv
pop
sti
pusha
adc
dec
mov
mov
jb
addr16
push
pop
inc
fnstenv
mov
jp
loopne
vpunpcklbw
subb
jne
push
pop
adc
mov
mov
push
and
jle
int
outsb
pop
dec
in
out
pop
mov
movsl
push
push
mov
cmp
dec
test
xor
movd
push
mov
loope
pop
out
xchg
mov
xchg
push
lret
int
roll
loop
outsl
pop
ds
mov
lea
lock
subl
lods
aaa
idivb
iret
xchg
push
inc
lock
loope
out
pop
mov
pop
shll
sbb
fcomp
pop
or
js
arpl
jp
xchg
adc
out
sub
adc
inc
shl
mov
sbb
add
sbb
gs
out
inc
jecxz
push
sbb
add
mov
test
out
pop
movsb
jno
jno
in
pop
out
xchg
fwait
xor
mov
imul
lea
and
dec
dec
xlat
inc
outsb
call
scas
mov
inc
mov
pop
js
xchg
outsb
les
push
lock
sbb
bound
fwait
aaa
and
push
inc
sbb
push
mov
std
aaa
mov
loopne
mov
cmp
jecxz
fmull
aaa
inc
mov
pop
push
jo
cltd
repz
rcl
adc
ss
mov
sub
scas
mov
and
movsl
repz
mov
mov
inc
rcr
jp
sar
mov
fistps
adc
push
inc
leave
sahf
or
lea
sbb
sbb
mov
sbb
push
test
pop
cmpsl
loope
add
sbb
dec
fs
pop
fstl
ss
sub
adcl
aas
jp
js
jge
popf
scas
outsb
aaa
mov
out
push
sbb
add
jg
fldt
pusha
inc
and
pop
lret
fldt
call
xchg
cmp
xlat
dec
sub
add
cmp
xchg
mov
jmp
dec
addr16
and
scas
mov
ret
add
pop
and
fmull
cmp
jb
xchg
mov
mov
dec
mov
jnp
aaa
inc
pusha
mov
jns
dec
addr16
int3
enter
lods
or
jns
jne
mov
add
push
pop
adc
icebp
in
or
lcall
aaa
push
mov
movb
sbb
xor
or
in
enter
mov
xchg
mov
jl
dec
inc
test
cmc
pusha
ret
xchg
aaa
add
scas
imul
ss
aaa
jle
push
fnstsw
cld
sbb
sub
std
hlt
xchg
and
faddl
pop
jae
push
iret
add
xor
jecxz
mov
push
pop
push
shrl
out
dec
push
mov
and
jp
jb
xchg
adc
mov
xor
dec
popa
orl
adc
pop
scas
aam
outsb
jmp
repz
int3
cli
inc
nop
mov
sbb
lcall
aaa
aad
pop
iret
jge
pop
ret
das
pop
xchg
icebp
mov
add
outsl
aam
pop
inc
cs
cs
aaa
jno
mov
or
jecxz
rorb
cmp
jbe
push
shr
xchg
and
loope
sbb
sub
pop
test
push
pop
gs
jl
out
inc
dec
mov
dec
decl
pop
jp
adc
rcrb
test
sti
mov
fcomi
out
xorb
push
lret
push
mov
orb
cmp
fisttps
pop
mov
pop
cld
pop
in
aaa
mov
or
negb
cmp
mov
sub
cmp
push
fbstp
mov
pop
xchg
cld
out
adc
in
jo
xor
fucomip
pop
fucomp
dec
sti
mov
mov
negb
mov
xor
mov
lahf
cmc
js
jle
sti
cltd
jnp
lea
xchg
pop
dec
les
mov
sbb
mov
aaa
arpl
mov
dec
cmp
ret
pop
loopne
pop
je
pop
xchg
lcall
es
xor
and
push
aaa
mov
lahf
xorb
out
enter
test
jno
pushf
lods
inc
daa
cwtl
mov
and
bound
push
sarb
or
je
mov
push
add
subl
pop
std
call
dec
mov
inc
mov
push
pop
inc
add
adc
cmp
sarl
pop
scas
fisubrs
mov
mov
dec
fidivrs
int
and
xchg
push
testl
pop
imul
mov
hlt
das
jle
lret
dec
xlat
adc
mov
sbb
les
cmp
or
push
push
mov
sub
sbb
fisubrs
out
jp
jmp
adc
std
mov
sub
jp
sub
stos
adc
jno
adc
jle
jbe
pop
cmpb
dec
and
movsl
shlb
jle
sti
sahf
ss
jge
in
sbb
into
xchg
mov
sub
nop
movsl
leave
loope
xchg
inc
sub
mov
cwtl
and
xor
jmp
test
sahf
mov
imul
xor
int
pop
mov
lods
sub
inc
adc
cvtps2pi
shl
lret
pop
ja
ja
pop
sbb
jle
xor
mov
test
jnp
jl
and
js
mov
xchg
enter
lahf
inc
ret
outsl
add
in
ret
pusha
sti
pop
or
stc
mov
sahf
adc
mov
jne
push
push
shl
xchg
call
xor
inc
gs
pop
dec
adc
cmpsb
test
jne
inc
pushf
adc
add
lahf
jbe
gs
cwtl
jg
jge
xor
xchg
pop
mov
cld
aaa
imul
and
lahf
ljmp
jg
pop
sahf
daa
add
ret
jae
pop
scas
mov
jle
mov
repnz
push
pop
ss
stos
jl
jge
in
cmp
je
popf
inc
loop
ret
or
pushf
test
imul
sbb
dec
loop
pop
pop
stos
sub
mov
push
mov
pop
push
or
or
push
pop
mov
push
in
aam
mov
rol
in
pop
jmp
or
mov
in
repz
clc
dec
mov
stos
pusha
popf
aaa
dec
into
loope
cwtl
jp
in
js
repnz
pop
push
adc
repnz
inc
scas
push
pop
inc
outsl
shll
adc
pushf
pop
xchg
mov
push
adc
popa
test
lods
sbb
out
out
inc
add
sbb
sub
jnp
cwtl
mov
sbb
fmull
aaa
int
pop
pop
mov
pop
add
int3
mov
adc
enter
movsl
aaa
lock
and
jo
ret
and
test
aam
das
xlat
dec
int3
xor
hlt
sbb
lret
add
adc
push
bound
xor
xchg
nop
fisubrs
movsb
lahf
ret
xchg
xchg
add
inc
ret
mov
and
js
cmpsl
lods
add
shr
aam
xor
push
push
pop
jecxz
push
push
sbb
add
xchg
sub
loope
cltd
xchg
sarl
mov
mov
mov
mov
das
cwtl
je
sub
push
add
mov
mov
mov
xchg
bound
sub
movsb
cmp
std
aaa
sub
and
dec
cmpsb
stc
pop
stc
out
adc
cmpsb
add
repnz
lea
xchg
and
jae
mov
popf
rcll
sbb
and
jecxz
outsb
push
cmp
and
frstor
lods
gs
fisttpll
add
leave
andl
je
aaa
dec
sub
cmp
daa
mov
cmp
adc
stos
stc
dec
xor
call
nop
ljmp
push
das
mov
pop
cmc
mov
pop
mov
loopne
mov
mulb
int
fcomps
fadds
jo
mov
mov
loope
cmp
mov
shl
push
testb
xor
mov
repz
pop
nop
sbb
lds
std
testb
in
inc
movsl
xchg
adc
and
sub
mov
mov
adc
inc
fists
flds
add
js
and
jle
in
aaa
int3
inc
shlb
pop
inc
stc
fimuls
mov
enter
stc
pop
rcrb
jbe
ljmp
jle
jb
js
aam
out
rorl
xchg
jp
pusha
ret
cmc
jbe
mov
stos
mov
mov
mov
xor
jle
mov
mov
inc
aam
repz
adc
movsl
mov
dec
mov
jmp
lret
mov
negb
sahf
lock
push
xchg
stos
jmp
xor
or
fisubrs
adc
push
aaa
loopne
jge
lods
or
jae
aas
xchg
ss
dec
xor
stos
pusha
pop
mov
in
cmp
imulb
loope
xorl
mov
ficoms
nop
push
scas
mov
call
daa
rcrl
xchg
mov
negb
add
sbb
test
lcall
jbe
sbb
push
xlat
movsb
leave
adc
and
jns
jb
sub
push
mov
sarb
lds
sub
outsl
push
fwait
jmp
lcall
int3
cmp
mov
test
adc
je
mov
push
sbb
bound
loop
pop
mov
pop
stc
in
icebp
lret
xlat
sbb
out
push
sub
cmp
dec
das
mov
in
inc
shlb
jbe
fstps
cld
dec
inc
int3
loope
mov
mov
mov
and
ljmp
jge
jg
push
jge
fwait
sub
pop
jns
sbb
fisubs
push
lea
cli
mov
pop
imul
shlb
lahf
and
mov
aam
cmp
std
xchg
icebp
inc
movb
pusha
jae
sbb
je
daa
repnz
cmpsl
sahf
in
out
push
and
mov
mov
and
adc
mov
inc
cmp
or
lea
hlt
lret
fbld
xchg
loope
aad
fiaddl
xor
jle
popa
cmpsl
cmpsb
cmpsl
sbb
in
out
xchg
subb
imul
sub
sti
cwtl
jge
mov
sahf
inc
sti
out
jecxz
push
mov
out
test
icebp
jbe
xchg
push
aaa
not
pop
pushf
adc
sub
xchg
sbb
mov
test
imul
ret
outsb
sahf
jae
std
xchg
notb
ficomps
sbb
addl
fstpl
fcmovbe
imul
jecxz
xor
jb
mov
aaa
sub
ss
jns
sbb
jb
jp
data16
push
xchg
out
push
jne
push
fmul
jbe
shrl
mov
hlt
push
push
jecxz
xchg
insl
sbb
das
ret
shll
aaa
leave
sbb
pop
stos
mov
pop
pop
test
inc
jmp
aaa
sub
jb
jae
mov
inc
push
dec
repz
add
xor
xor
std
cwtl
dec
pop
inc
sahf
xor
bound
pushf
dec
push
push
mov
dec
in
inc
bound
or
stc
mov
aaa
rorb
sar
nop
les
sbb
stos
icebp
test
cmp
bound
inc
and
xchg
out
lea
add
inc
fcoml
arpl
aaa
dec
push
mov
xchg
hlt
pusha
gs
sub
out
cs
push
xor
inc
pop
pop
aaa
sbb
mov
jnp
xchg
ss
inc
adcb
and
test
jb
ds
daa
es
mov
test
mov
loope
sbb
fwait
test
popf
lret
dec
fldz
sbb
xor
cmpsb
popf
gs
out
ret
stos
sbb
mov
xorb
mov
lods
pop
mov
call
inc
adc
inc
jmp
dec
fbstp
cmc
jp
xchg
cmp
sti
xchg
arpl
and
or
pusha
jae
sub
mov
call
push
inc
scas
orb
xlat
lcall
jae
dec
mov
pop
out
cmp
lea
sub
adc
loope
outsb
stos
sbb
push
jp
cmpsl
jl
add
adc
sbb
mov
loopne
aaa
ljmp
xor
pop
add
out
test
xchg
inc
shll
lock
lahf
and
push
mov
enter
test
outsb
bound
mov
lods
and
aaa
lahf
push
mov
mov
insb
mov
pusha
dec
sbb
pop
xchg
dec
fisubrl
push
sbb
test
cmpsb
pop
fwait
push
mov
ljmp
cwtl
loop
xchg
sti
imul
mov
inc
add
jnp
loope
inc
pop
rcr
pop
push
insb
pop
dec
hlt
pusha
dec
sbb
dec
arpl
mov
ljmp
pop
lcall
addb
test
insl
arpl
notb
mov
lds
mov
fadds
pop
sub
sub
pop
push
inc
jbe
aaa
jo
imul
adc
sbb
push
jp
int3
cmove
sub
cmpsl
mov
arpl
add
xor
pop
loop
push
mov
mov
push
or
jle
ficomps
cwtl
jno
mov
pop
inc
pop
push
andl
inc
in
mov
shl
movsb
inc
popf
xchg
xchg
out
in
push
jno
mov
xlat
push
fdivrl
fdivrl
mov
lret
fwait
mov
sbb
xlat
jmp
xor
add
je
aaa
ret
cmpsb
jnp
mov
bsf
test
xchg
loope
mov
shrb
data16
pop
dec
jmp
mov
xchg
cmp
pop
imul
jae
push
push
aaa
mov
lods
icebp
mov
mov
add
idiv
xlat
imul
inc
mov
lods
xchg
or
fld
jl
pop
pop
clc
adc
pop
ret
iret
mov
fsubl
outsb
xor
dec
aaa
iret
stos
xor
mov
sub
sbb
pusha
pop
sbb
jnp
xchg
sbb
pop
pushf
popf
jle
inc
push
aam
aad
sbbl
stos
aaa
cmp
imul
xor
scas
mov
test
xchg
and
pop
pop
bound
pop
mov
mov
in
inc
test
sbb
mov
xor
add
sub
mov
jle
imul
jg
movsl
cmp
les
popf
pop
cli
mov
loope
sub
jle
jle
sbb
loopne
cmp
mov
aam
test
iret
xor
or
pop
pop
mov
inc
and
into
lcall
sub
jge
movsl
in
sarb
inc
adc
stos
div
inc
push
jns
loop
pushf
inc
and
or
push
pmaddwd
aaa
inc
mov
fwait
arpl
jbe
es
nop
sbb
xchg
repnz
fstps
or
cmp
jne
jge
mov
fnstsw
fdivrs
aad
popf
test
lods
xchg
inc
dec
sbb
adc
pop
xchg
add
aaa
xchg
dec
cli
xor
sub
cmp
jmp
and
dec
mov
insb
stos
data16
mov
ss
arpl
sub
mov
clc
cmpsb
push
jp
sbb
icebp
mov
xchg
mov
mov
ds
cmp
aad
fdivl
pop
arpl
ret
loope
jle,pt
mov
and
pop
fistpll
stos
je
sbb
enter
mov
sti
inc
jne
stc
loope
or
inc
sbb
cltd
ret
std
sub
cmpsb
xchg
mov
push
mov
xor
mov
adc
ja
sub
add
jmp
cmp
loope
add
dec
push
cli
aaa
and
pop
mov
fcoml
cmp
xor
adc
xlat
mov
jle
negl
outsl
inc
adc
pop
sub
mov
mov
pop
or
push
in
pushf
xor
and
or
mov
mov
test
inc
pop
mov
mov
loope
fbld
bound
subb
ds
call
popf
subb
sbb
xchg
mov
xchg
imul
lret
pop
cwtl
dec
fldcw
loope
cwtl
mov
xlat
pop
mov
andb
push
add
fists
repnz
pusha
adc
mov
movsl
push
cltd
mov
idivb
popa
sti
notl
fistpl
mov
mov
cmp
fadd
loope
cmpb
dec
lock
into
and
adc
push
pop
enter
jnp
dec
pop
mov
cmp
shrl
addl
fildl
jecxz
dec
sbbb
xor
sbb
jmp
xchg
add
fisttps
sbb
and
scas
popa
mov
movsb
lock
leave
sbb
cmp
xchg
jb
push
inc
xor
ds
add
xchg
enter
pop
cwtl
scas
pop
jl
imul
fs
cmpsl
inc
aam
addr16
loopne
adc
xorb
xorb
jae
cmp
mov
fs
icebp
push
clc
mov
into
and
stos
cmc
fidivrs
inc
or
dec
sbb
mov
xlat
push
clc
and
mov
mov
rclb
cld
bound
pop
aam
sub
mov
mov
push
ss
cmc
push
lahf
fldl
shr
adc
mov
arpl
xor
push
pop
and
aam
scas
insb
lret
arpl
out
popf
sub
cmp
bound
divl
dec
pop
sbb
pop
lods
mov
shlb
push
dec
fcoms
lea
pop
add
sbb
pop
jnp
aaa
jno
test
mov
or
out
and
lods
js
mov
bound
cli
jecxz
add
mov
mov
lret
jbe
mov
push
out
lods
and
mov
sbb
ficoms
gs
ret
scas
imul
enter
xchg
outsb
test
or
orb
push
pushf
mov
mov
adc
push
push
pop
xchg
push
push
es
pusha
loop
aaa
push
sti
push
cmp
sti
imul
push
mov
insb
mov
repz
out
ret
mov
in
rcll
mov
cs
dec
mov
mov
jae
ror
xor
and
push
jo
fwait
pop
jecxz
subb
adc
ret
dec
jmp
xchg
rcrl
punpckhdq
xchg
sbb
fisubs
mov
repz
inc
push
inc
xor
rol
fsubr
pop
out
xchg
fucom
or
xchg
lret
orb
add
loope
getsec
movsb
test
insl
iret
push
add
jae
ret
adc
xor
daa
jp
adc
push
mov
lret
mov
push
aaa
pushf
imul
pop
mov
dec
call
insl
outsb
push
ret
hlt
pop
xchg
mov
or
repz
push
arpl
add
push
scas
jbe
sbb
adc
js
aas
in
and
push
push
xlat
push
push
cmpsl
call
divb
pop
and
leave
outsb
rcl
and
loope
fwait
mov
xorl
out
jbe
push
es
imul
fwait
std
shr
fnstsw
testl
aas
std
jle
or
test
adc
fdivl
pop
arpl
sub
jbe
sti
in
xchg
inc
in
lahf
in
jp
pop
add
ljmp
adc
jbe
push
fistpl
cmp
bswap
cld
fdivrp
add
mov
repz
add
and
shrl
rcrb
imul
push
mov
loop
push
jge
subl
lahf
sbb
or
xor
xchg
push
push
iret
pop
fwait
mov
mov
pop
sahf
mov
hlt
jnp
cmp
mov
repz
popf
aaa
and
xlat
das
mov
decb
lds
out
nop
stos
fcomp
lock
imul
push
push
pmaxsw
xchg
xchg
pop
js
loop
lock
add
mov
popa
mov
aaa
mov
icebp
mov
or
or
imul
insb
shrl
dec
adc
inc
mov
int3
sbb
add
mov
push
mov
cld
xchg
lds
jo
das
jne
cld
sti
lret
jnp
jae
int3
data16
inc
mov
dec
push
enter
loope
mov
lret
mov
insl
or
out
in
sbb
in
push
jnp
xor
addr16
movsb
lock
sbb
mov
inc
xchg
add
fcmovnbe
popa
pop
sbb
out
sub
jno
test
push
adc
push
sbb
sbb
jp
xchg
lret
and
dec
xchg
scas
adc
dec
icebp
xor
push
mov
mov
lahf
fcmovu
lret
insb
fdivrs
nop
js
lock
call
mov
pop
repnz
add
adc
push
repz
pop
js
pop
repz
mov
cmp
nop
movsl
adc
nop
cmpb
fisubl
cmpsl
add
aaa
out
lods
call
dec
or
and
jbe
sbb
cmpsb
mov
push
in
inc
mov
mov
and
popa
pop
cli
cmp
scas
add
add
in
dec
js
lret
fs
cmpsb
mov
mov
call
stc
inc
loopne
bound
push
sub
and
mov
jl
jle
and
movsb
push
rolb
jmp
sbb
jl
sti
addr16
les
jecxz
imul
pop
das
sbb
dec
add
pop
pop
neg
test
aas
stc
ss
xchg
xor
pop
stos
int
inc
pop
mov
xlat
cmpsb
js
in
xchg
cmp
sbb
hlt
add
mov
mov
popa
jge
cmpsb
hlt
jl
inc
popa
loop
cmovp
js
sbb
test
dec
mov
mov
sarl
push
and
std
add
stc
pop
je
or
pop
iret
cmp
mov
push
insl
mov
stos
incb
popa
inc
repnz
int
ret
mov
outsb
push
das
and
mov
ja
addr16
adc
dec
mov
sub
call
mov
jno
pop
lock
aaa
jae
pushf
mov
lea
loope
inc
add
jge
sbb
xchg
jb
icebp
dec
orb
xlat
xor
and
lea
push
jle
push
jl
inc
inc
pop
cmc
cmp
cmpb
int
or
jo
gs
jbe
out
cld
out
adc
jge
das
inc
faddl
mov
loope
nop
bound
cltd
xchg
dec
bound
xor
into
mov
pop
stos
mov
sbb
nop
sti
aaa
jno
cwtl
mov
sbb
jbe
lret
insb
xchg
mov
fnstsw
jbe
inc
repz
mov
test
sub
ljmp
lcall
jb
pushf
cmp
xchg
pop
cmp
pop
xorb
adc
xchg
call
cwtl
push
in
pop
sahf
sbb
mov
cmp
lcall
test
outsb
lahf
sbb
pop
out
cmc
cld
mov
mov
inc
loope
push
mov
and
push
cmp
or
bound
adc
mov
mov
pop
mov
notb
ret
ss
aaa
std
mov
and
sub
iret
dec
cmp
ljmp
xchg
jae
loopne
jecxz
inc
pop
fxch
jne
push
dec
imul
push
inc
stc
shll
cwtl
iret
cs
pop
mov
mov
mov
pop
mov
cmpsl
divb
jns
jp
fcmovnbe
dec
jne
mov
mov
data16
bnd
imull
mov
cmpb
insl
loop
mov
fldenv
or
mov
pop
mov
mov
inc
scas
ret
enter
jecxz
cld
mov
dec
leave
sahf
mov
fs
dec
rcr
pop
popa
stc
mov
sbbb
loope
mov
xor
ds
pop
jnp
sahf
cld
sbb
pop
mov
lea
jno
dec
add
xor
in
sahf
dec
sub
aad
mov
jle
pushl
rol
bound
and
imul
stc
adc
xchg
hlt
jns
ja
mov
xor
cmpsl
jno
push
push
outsb
sbb
nop
arpl
aad
hlt
cwtl
mov
inc
dec
push
and
jp
cwtl
pop
fimuls
fisubrl
sub
test
out
adc
dec
dec
pop
pop
sbb
rorb
and
fsts
sbb
ds
loop
mov
and
cmpsb
bound
lret
leave
adc
es
sbb
mov
adc
cmpsl
mov
cwtl
pop
daa
outsb
shl
lea
gs
lahf
dec
cli
outsl
pusha
mov
ljmp
adc
jnp
pop
sub
push
test
shrl
loopne
sti
mov
jae
movsb
dec
das
jbe
nop
movsl
and
push
or
jg
cmp
mov
iret
sbb
int3
mov
aas
mov
and
pop
ss
sahf
loope
mov
pop
mov
push
imul
mov
mov
adc
sbb
das
in
int
add
cwtl
loope
pop
cwtl
cltd
mov
jg
mov
pop
sbb
push
repnz
sbbl
and
adc
inc
xor
pop
insb
and
ja
sbb
xchg
repnz
and
cwtl
and
fs
xchg
ljmp
dec
shr
sbb
jbe
call
and
fidivs
in
jb
aaa
test
int
xchg
xchg
bound
test
and
xchg
ret
nop
pop
loope
fcompl
lods
sbbl
dec
mov
mov
pop
mov
aaa
xchg
sub
mov
jbe
outsl
add
push
push
jo
scas
jno
dec
ret
imul
lcall
xchg
sub
lock
add
and
test
ss
sbb
pop
das
outsb
stos
cwtl
loop
add
sub
dec
and
lret
inc
rclb
push
xor
sbb
xchg
cwtl
scas
ja
push
enter
bound
outsb
repz
test
xor
jge
jecxz
inc
mov
data16
shll
mov
jp
and
pop
push
mov
mov
mov
jmp
mov
and
add
dec
sarb
leave
lea
in
out
mov
push
sbb
xor
pop
or
lock
sbb
sub
enter
hlt
xchg
mov
aad
sbb
cmp
out
jg
pushl
push
test
sub
cmpsb
xchg
lcall
out
cli
daa
in
jb
push
and
loop
mov
jne
pop
xchg
shr
aaa
xchg
inc
mov
inc
test
testl
cld
aaa
cmp
pop
std
pop
sahf
or
dec
jg
sarl
sbb
outsb
jne
mov
mov
das
mov
push
mov
stos
cmovge
dec
loope
push
pop
stos
sarl
xchg
lds
aas
shlb
push
add
mov
push
sbb
mov
dec
or
mov
fcoml
cmpsb
in
aas
xchg
jae
push
frstor
ss
stos
bnd
aaa
aam
int3
insb
or
lods
ret
mov
mov
jbe
inc
xorb
or
jle
mov
push
cmp
adc
mov
adc
cltd
call
jl
test
lock
fwait
pusha
shll
test
ja
mov
lret
sar
mov
and
or
faddl
test
aaa
shll
cs
xchg
mov
lea
into
lret
mov
mov
outsl
std
cwtl
mov
mov
cld
imul
sbb
sbbl
adc
aaa
fstps
dec
jae
lahf
shrb
mov
pop
pop
xor
es
and
in
gs
repnz
sbb
inc
and
pop
mov
inc
lcall
lea
inc
inc
dec
sbb
pop
push
pusha
ret
sbb
cmp
lret
insl
das
cltd
mov
lret
cmp
pop
mov
dec
out
jle,pn
adcw
push
push
inc
sub
mov
sub
cmpsb
loope
enter
or
add
dec
mov
jno
add
add
xlat
mov
negl
cmp
xchg
inc
ja
jbe
gs
lcall
adc
push
push
pop
icebp
cmp
jmp
stos
scas
sub
adc
jnp
adc
cmpsb
pop
orb
fadds
inc
jle
dec
xchg
leave
jg
shrl
cmpsb
push
dec
in
std
cs
stos
dec
pusha
xchg
add
sbb
inc
push
test
repnz
pop
jo
aaa
jmp
loope
sar
roll
cmp
nop
and
pop
xor
movsb
pop
jecxz
xchg
outsb
sbb
data16
or
shrb
les
xchg
or
or
nop
cmpsb
nop
lds
pop
adc
out
jbe
mov
test
aaa
mov
mov
xchg
xor
lret
xchg
adc
test
loopne
jp
mul
jl
xor
dec
gs
mov
sbb
xchg
fadd
xor
sahf
ljmp
aad
mov
sub
adc
push
jne
lock
orl
add
fpatan
dec
inc
pop
std
mov
push
or
pusha
inc
test
dec
inc
aaa
ss
pop
pop
add
xchg
loopne
arpl
arpl
fnsave
mov
mov
pusha
inc
adc
push
ljmp
mov
sahf
push
push
cltd
xorl
xchg
fucomp
into
imul
mov
sbb
sbb
adc
les
inc
pop
inc
aaa
sub
out
xor
or
dec
push
mov
cmp
push
imul
test
sbb
fs
inc
add
or
mov
jae
imul
lret
sarl
or
jge
push
and
push
aaa
lea
fstpl
push
cs
mov
cmp
out
into
jb
in
xchg
push
lcall
mov
mov
out
inc
mov
sbb
je
and
and
imul
sbb
fnstenv
jg
xor
pop
cmp
filds
jge
ja
out
fistpl
clc
or
xchg
roll
push
and
cld
pop
adc
clc
shlb
add
mov
scas
sub
insl
dec
pushf
dec
rclb
xor
divl
shll
sub
sbb
pop
sbb
pop
lret
nop
lock
in
xor
pop
or
popf
xor
dec
jno
lea
mov
ficoms
shr
push
and
adc
cmp
pop
enter
xchg
int
inc
push
fidivs
mov
nop
frndint
sbb
in
or
jbe
mov
int3
mov
stc
pop
fchs
mov
ss
pusha
sti
fsubrs
push
xchg
outsb
cmpsl
sti
imul
clc
sar
aaa
jb
fwait
imul
cwtl
jmp
jle
addb
add
sbb
jb
aaa
mov
jle
mov
aas
lcall
popf
pushf
cmp
and
fldt
and
insb
cmpsb
insl
outsb
sbb
jecxz
mov
std
hlt
test
fwait
std
ss
cmc
out
fstpt
xchg
push
jle
std
sub
in
sub
jp
adc
cmp
push
clc
jne
mov
imul
out
test
fimuls
fxch
inc
pop
sub
cmp
push
cmp
jo
cltd
mov
jb
jle
push
jns,pt
jmp
aaa
ja
cld
lea
data16
in
faddl
mov
adc
cmp
int
push
jle
sub
inc
pop
pushf
out
inc
cmp
dec
push
adc
shll
fstps
jbe
sub
cmpl
fisubrs
mov
sub
das
jo
aaa
dec
xchg
dec
mov
add
inc
out
sarb
push
lds
jb
push
inc
gs
mov
adc
clc
and
inc
lret
add
inc
add
hlt
ljmp
negl
mov
aas
movsb
icebp
add
rcl
cmp
fwait
xor
out
out
insb
das
sub
adc
xor
jbe
or
std
fistl
icebp
in
fstp
sub
mov
jecxz
mov
jb
push
mov
mov
and
cmc
shrl
not
lcall
mov
pop
push
shll
mov
lcall
cmpsb
add
adc
in
dec
aam
jbe
push
push
int3
or
dec
dec
ss
loope
xor
mov
outsl
pop
jno
mov
in
fnstsw
and
pop
sub
push
pusha
jle
dec
jnp
and
sahf
sahf
adc
lea
cmp
icebp
dec
ss
out
and
divl
push
mov
dec
or
jle
mov
fdivl
mov
loope
std
in
cmpsb
icebp
dec
pusha
xchg
fdiv
imul
push
in
in
sbb
mov
add
daa
cs
and
faddl
add
sti
adc
in
int3
cmp
mov
mov
mov
shll
in
cld
fists
pop
into
xchg
ss
enter
outsb
mov
fwait
sbb
arpl
xchg
mov
insb
sub
ja
out
movsb
bt
mov
js
jle
cmp
loope
aaa
fsts
dec
mov
and
lret
mov
jo
les
xchg
popf
clc
sub
xlat
icebp
add
jecxz
outsb
or
lods
into
lcall
jg
lods
in
jae
sahf
js
ljmp
add
xchg
xchg
mov
gs
loope
ficoms
mov
mov
ds
loopne
jb
nop
stos
lea
test
out
rcrb
add
push
mov
xchg
jecxz
das
jle
inc
pop
inc
lods
and
push
jle
mov
popa
cmp
fstpl
and
pop
out
pop
clc
xor
out
ljmp
nop
mov
rcl
mov
or
pop
cld
jg
sbb
push
clc
sti
jle
pop
mov
dec
dec
jne
out
cmp
cld
jle
lcall
mov
jp
push
rorb
roll
in
cmpsl
push
leave
out
push
sub
aam
arpl
ljmp
pop
adc
pop
pop
ret
mov
or
es
mov
or
into
insl
daa
mov
mull
mov
lods
fildl
lods
outsb
subb
push
inc
cmpsb
dec
inc
mov
add
mov
je
scas
jo
aaa
push
arpl
sub
sub
in
popa
sub
fidivrs
dec
ret
cmp
scas
adc
pop
pop
in
bound
mov
push
xor
imul
xor
fsubl
sub
outsl
xor
fildll
imul
daa
enter
clc
add
jge
loope
sbb
aaa
push
dec
movsl
cmpsb
scas
outsl
jmp
mov
imul
sbb
lock
and
sub
addb
rorl
sub
loopne
sti
mov
add
js
pushf
push
int3
shr
pop
sbb
addr16
cli
in
int
mov
insb
pop
pop
xrelease
or
fbld
out
xchg
sbb
mov
jle
jo
nop
mov
inc
push
mov
std
fidivrl
mov
dec
insl
int
aaa
hlt
push
push
xor
mov
les
pushf
outsb
dec
negb
cli
movsl
jle
and
sar
insb
push
mov
jnp
add
dec
loope
fbld
fwait
xchg
lock
xchg
lea
aaa
das
in
addr16
ret
repnz
pushf
int3
add
fsubs
subl
nop
subl
jge
inc
test
andb
or
add
xchg
jg
xlat
rcr
out
jb
imul
mov
cmp
mov
push
aam
jns
pushf
xchg
dec
filds
push
sub
dec
shlb
and
xor
repz
popf
movsb
daa
jae
jo
and
push
frstor
mov
add
inc
arpl
pop
cld
push
pushf
fwait
push
pop
js
push
or
jmp
imul
mov
icebp
add
dec
in
adc
repnz
testl
cmp
sbb
sub
pop
fstpt
cld
mov
pushf
aad
lret
das
fists
ljmp
push
pavgw
cmp
xchg
imul
mov
pop
push
dec
pop
scas
xor
aaa
das
lock
adcb
into
mov
in
mov
xchg
mov
pop
or
add
or
outsl
add
push
sbb
mov
inc
jle
mov
fistpll
gs
aas
data16
mov
xchg
push
jmp
push
push
mov
lret
adc
lret
mov
xchg
pusha
add
js
lret
imul
push
and
pop
pop
pop
incb
outsb
add
jno
bound
les
mov
lea
stos
jns
mov
popa
push
bound
scas
aaa
inc
arpl
cmp
sahf
pop
aam
pop
scas
repnz
roll
fldcw
mov
bound
gs
out
enter
xor
insb
scas
add
stos
repnz
mov
inc
out
sbb
adc
dec
xchg
lock
insb
inc
cmpsb
xchg
push
xchg
stc
ljmp
mov
mov
ret
xchg
je
and
repz
es
test
test
xchg
pop
xchg
dec
pop
es
xor
scas
lahf
dec
pop
jb
cmpb
pop
rcrl
xor
or
lcall
sbb
cmp
inc
das
test
and
sti
pop
xchg
sub
jno
jecxz
lahf
dec
rcrb
sbb
push
dec
push
jge
mov
or
dec
push
das
xchg
arpl
and
cli
fdivs
cmp
push
mov
xor
loopne
popa
pop
pop
gs
pop
ljmp
aad
ret
stos
sbb
insb
in
in
inc
std
sub
jmp
js
adc
aam
cmp
lods
inc
fwait
test
adc
adc
pop
mov
add
int
cwtl
pop
out
cltd
movsb
or
lock
in
mov
sti
pop
out
or
jle
push
dec
jmp
and
inc
adc
inc
stos
inc
and
pop
xor
jl
test
lds
adc
inc
jno
adc
and
test
outsl
loopne
sbb
adcb
sub
mov
das
push
lret
pop
pop
inc
dec
loop
fadds
jg
jg
stc
add
cmpl
aaa
mov
popa
jo
cltd
mov
ljmp
pop
cmpsb
ret
inc
jnp
cmp
xor
mov
test
mov
dec
push
ds
lret
fcmovnb
mov
sbb
ret
sub
and
subl
jo
fisttpll
int3
inc
dec
bt
data16
out
mov
mov
jge
adc
mov
mov
mov
mov
insl
aam
jle
pop
aaa
lock
stc
and
stos
bound
rorb
ds
adc
cmp
pop
add
fdivs
in
sub
lock
imul
movsl
push
scas
cld
dec
pusha
pop
push
insb
jb
mov
insl
mov
jl
bound
xor
in
shrl
popl
nop
jp
sbb
inc
aaa
int3
pusha
fstpl
sti
jle
je
cwtl
xchg
pop
mov
sub
xchg
mov
sbb
sub
mov
mov
addb
cwtl
push
ret
icebp
movsb
mov
fldl
stc
sbb
data16
nop
add
cmp
and
movsb
mov
enter
stos
dec
fucomi
or
imul
hlt
in
xor
mov
lock
lea
add
ds
aaa
add
out
mov
loop
cltd
dec
popf
aam
test
sbb
fstl
aas
mov
shl
std
pop
jecxz
mov
aad
inc
repz
sbb
sbb
mov
inc
lahf
sub
ljmp
sub
push
ds
add
sbb
mov
jg
xor
dec
dec
mov
arpl
and
jecxz
aas
or
xchg
movsl
movsl
cli
es
push
sar
dec
inc
out
aad
cld
inc
mov
lea
ret
ljmp
dec
cmp
adc
sub
out
cmp
jge
jg
sbb
xchg
xor
sbb
cmp
in
lcall
adc
icebp
sbb
adc
ret
adcb
mov
xchg
xchg
mov
push
lcall
push
mov
pop
int3
out
in
popf
lds
adc
or
stc
adc
icebp
adc
inc
add
inc
notb
xlat
stc
aam
adc
push
movsb
jl
dec
outsl
cmp
and
lahf
loopne
sahf
jne
or
movsb
cmp
ds
gs
add
sbbb
inc
push
pusha
ret
mov
push
jnp
sub
pop
push
xchg
mov
add
mov
out
xchg
jno
cmp
stc
jmp
cmc
and
inc
test
xlat
add
pop
adc
cmpsl
sbb
or
sbb
into
out
mov
in
push
push
and
mov
repz
insb
lea
sti
pop
sbb
add
jecxz
scas
fimuls
repz
test
mov
inc
xchg
in
mov
in
cmp
sbb
inc
jmp
ljmp
pop
xchg
roll
aaa
and
nop
mov
cmpsb
pop
lods
cmpsl
mov
inc
lcall
pop
sbb
dec
pop
xor
inc
sbb
lea
insl
andb
lret
pop
xor
fsts
test
divl
add
push
jmp
dec
outsl
and
stos
fildl
jle
jg
jmp
or
xchg
cmpsb
cwtl
call
mov
xchg
ret
pop
pop
aam
and
add
cmp
loope
rorb
out
rcrl
in
cmp
dec
mov
push
loopne
jns
adc
dec
bound
jge
cmp
xchg
ds
test
cmp
cmovb
jg
sahf
xchg
mov
cmp
cmovne
or
xchg
jge
sbbb
push
ss
in
rclb
mov
arpl
jg
xchg
mov
xchg
push
test
imull
xlat
mov
mov
addr16
sbb
pushf
test
adc
jle
in
lret
push
inc
mov
mov
mov
dec
loope
push
cmp
out
dec
cs
inc
sub
xor
push
jae
mov
xlat
lods
cmp
pusha
mov
comiss
outsb
or
dec
shl
in
xchg
in
sahf
push
mov
lods
test
lret
lea
jae
pop
and
xchg
test
lods
jmp
cmp
loopne
mov
cmp
jge
popa
xor
ds
sbb
push
mov
xor
popf
aam
mov
arpl
in
data16
mov
sub
leave
sbb
or
aaa
mov
push
fwait
loope
add
dec
push
mov
add
xchg
pop
outsb
bound
mov
in
sbb
adc
and
sub
mov
sub
insl
pusha
mov
mov
jbe
ficompl
aad
mov
clc
mov
push
pop
in
dec
sahf
clc
jb
xchg
pusha
pop
fsts
mov
jp
or
mov
sbb
in
jae
adc
ds
sub
sti
ss
bound
lcall
adc
fs
sub
notb
call
dec
in
je
sti
out
sub
mov
ficompl
repnz
shll
movsb
jmp
cmp
in
xchg
xor
pusha
movsl
jb
fcomip
pop
pop
movsl
xor
push
inc
repnz
cltd
out
sub
fldl
std
push
rorl
nop
jecxz
sub
popa
fstpt
scas
jae
pop
rcll
push
cwtl
fsubrl
test
mov
loopne
frstor
add
in
repz
fisttpl
test
mov
pop
sbb
fs
sbb
xchg
fsubl
loope
ret
jp
arpl
leave
pop
jmp
or
jb
mov
mov
cmc
mov
popa
dec
ljmp
outsb
jmp
and
cmp
je
movsb
mov
lcall
imul
and
cmp
cmp
cmp
push
in
les
aad
pop
popl
mov
in
scas
mov
and
inc
and
cmpsl
fsts
out
lock
adc
aaa
push
repz
orb
push
cs
mov
sarl
push
repz
iret
loope
ss
js
aaa
cmp
jmp
loopne
fistl
insl
and
inc
sub
movsl
sti
dec
jle
popf
mov
dec
js
dec
inc
xchg
in
pop
xchg
lock
mov
xor
rcll
pop
adc
xlat
pop
insb
addr16
or
dec
pop
or
lea
mov
jno
outsb
jmp
mov
and
in
mov
in
and
imul
mov
mov
dec
xor
cld
jle
mov
int3
subb
dec
mov
xchg
inc
push
jnp
cltd
push
out
pop
inc
testb
stos
pop
lahf
dec
sbb
xor
ret
les
pop
fs
ds
cli
in
adcb
in
sbbb
repz
xchg
jg
jge
cmp
loopne
mov
shll
popa
fsubr
das
adc
out
xchg
in
ja
pop
adc
sub
pop
insl
andl
mov
ret
jge
call
mov
mov
es
cmp
dec
repnz
mov
sub
dec
imul
push
mov
aaa
mov
xchg
cmc
ja
xor
inc
jns
jle
in
xchg
divl
xor
stos
popf
pop
mov
insb
popa
cmp
inc
or
xchg
in
aaa
cmp
adc
cmp
sahf
mov
inc
cmp
popf
int3
or
and
cmp
sbb
xchg
cs
jnp
sub
adc
nop
cli
je
sbb
fst
sub
or
in
mov
xlat
inc
xchg
sahf
lret
jle
in
fmuls
push
or
outsl
push
mov
mov
fadds
ret
pop
sub
jno
cmpsl
mul
imul
cmp
vphaddbq
rcrb
jnp
mov
pop
cwtl
ds
stc
xchg
push
pushf
in
aaa
xchg
mov
add
pop
adc
les
dec
push
inc
sbb
loope
inc
je
push
mov
sbb
push
push
add
repz
sub
sub
imul
sarl
or
push
jne
push
cwtl
push
jecxz
ljmp
inc
outsb
ss
hlt
int
add
push
fwait
lea
dec
fildl
sub
mov
pop
add
insb
push
mov
cmpsl
enter
rcr
push
fldt
cmp
dec
data16
outsb
push
push
mov
mulb
xor
fstpl
daa
push
pop
pop
leave
imul
test
dec
lret
inc
inc
sti
inc
add
cld
pop
add
mov
test
sahf
std
pusha
testb
pop
clc
bound
dec
xor
js
sbb
les
shrb
bound
mov
push
iret
or
popa
mov
lahf
cli
inc
xchg
push
psraw
cmp
jle
pop
or
xchg
cmp
xor
add
or
mov
sti
fwait
jne
lods
shll
jg
mov
shr
outsb
pop
out
icebp
in
ds
cli
ss
inc
or
lcall
outsb
mov
mov
xor
hlt
ds
mov
mov
outsl
dec
outsb
sbb
and
adc
fsubl
xchg
mov
mov
adc
les
ja
jge
pop
ljmp
mov
js
dec
movsl
aam
jne
jnp
lea
jnp
cwtl
in
mov
aas
pop
adc
mov
or
xchg
js
rcr
and
mov
add
shll
and
lods
pop
cmpxchg
jo
fdivr
jp
stc
cmpsb
in
icebp
insl
dec
cmp
pop
in
mov
sbb
bound
xlat
fdivs
inc
push
movsb
lods
outsl
inc
inc
or
inc
mov
dec
jae
or
sub
cmp
inc
sbb
mov
mov
dec
outsb
aad
xor
fbstp
in
jge
mov
xor
mov
test
ret
ds
jo
sbb
xchg
add
f2xm1
fwait
add
jecxz
jae
jp
nop
loope
jae
add
mov
jecxz
dec
and
fbld
mov
sub
dec
addr16
mov
and
mov
rcrl
xor
sub
loope
aam
imul
inc
pushf
mov
jecxz
in
sbb
into
aaa
or
lret
jecxz
enter
push
aaa
jnp
subb
add
cltd
lcall
and
rolb
jle
jnp
jns
sarl
push
addb
adc
mov
outsl
repnz
movsl
jl
test
pop
xor
mov
addr16
mov
arpl
jp
std
xor
xchg
je
sahf
mov
imul
cmp
inc
jnp
xorb
into
push
or
or
mov
add
lcall
in
mov
xchg
mov
push
or
jmp
jno
pushf
fcmovnu
jae
outsb
inc
cmp
pop
insb
dec
fisubrs
in
out
add
cmp
ljmp
pop
sbb
cld
jecxz
jno
or
mov
out
out
mov
in
push
int3
mov
inc
fstpt
mov
mov
xor
aam
arpl
sbb
xchg
int
mov
outsb
outsb
xchg
mov
mov
in
sub
test
push
popa
es
mov
sbb
fst
sti
stos
mov
loope
inc
imul
mov
adc
cld
pop
adcb
xor
jp
sbb
cmpsb
pusha
mov
adc
fsts
dec
leave
sbb
es
cld
repnz
into
repnz
cmp
dec
push
mov
ret
pop
mov
jne
data16
adc
add
add
push
inc
test
mov
lret
movsl
test
pop
jmp
bound
mov
loope
pop
xorb
fsubrl
sti
lds
add
fisubrl
dec
dec
inc
das
mov
lds
lret
xlat
cli
mov
add
add
mov
dec
rcll
lods
aaa
jp
dec
adc
mov
lret
xorb
cld
sti
ret
arpl
jb
sub
scas
adc
out
mov
repz
fwait
xor
mov
jnp
push
or
outsb
mov
mov
fwait
lods
mov
xor
push
push
dec
ret
mov
add
and
jle
xchg
add
mov
pop
aad
arpl
dec
sbb
and
jecxz
dec
mov
in
test
stos
pop
jge
sti
lcall
push
bound
loope
adc
dec
int
shlb
jecxz
or
repnz
xor
ret
pusha
mov
push
sbb
or
xchg
insl
dec
movsl
mov
push
in
cmp
fnsave
ret
adc
daa
and
lsl
dec
icebp
push
insb
int
ss
mov
push
mov
sub
test
aam
sub
shl
pop
mov
int3
xchg
jb
stc
iret
outsb
unpckhps
lods
test
repz
out
sub
ret
aaa
xchg
xor
aaa
mov
or
loopne
loope
ss
lock
jb
insl
sahf
jbe
or
in
pop
aam
test
repnz
xor
push
sbb
sub
aaa
cmpsl
addl
sti
fcmovbe
sti
clc
leave
or
mov
repnz
mov
jb
aaa
cmc
iret
dec
mov
cmp
daa
mov
mov
aaa
repz
iret
or
cmp
call
out
aaa
pop
dec
loopne
jle
test
jno
adc
add
jae
cmp
fadd
or
call
push
pop
push
je
imul
inc
and
addr16
adc
nop
jo
mov
inc
shl
xchg
xchg
and
or
leave
inc
xchg
add
scas
inc
out
cld
fs
add
test
enter
pop
shlb
jae
imul
enter
aaa
inc
cltd
pop
js
mov
fsts
sbb
mov
out
or
gs
sub
daa
xor
shll
cltd
xor
mov
add
xchg
pop
fst
gs
xor
adc
jnp
cltd
mov
pop
inc
stos
xor
dec
fstps
int3
dec
pop
jb
roll
cmpsb
rcpps
arpl
pusha
lcall
addl
or
jmp
into
jbe
pop
mov
es
add
fisttpl
inc
scas
xchg
cltd
push
das
pop
repz
pop
in
mov
mov
and
fadds
cmp
popa
mov
cmp
aad
sbb
hlt
rolb
and
test
dec
mov
roll
pop
add
loope
fnsave
shll
pop
js
rcll
jb
aaa
or
jbe
in
push
insb
xchg
arpl
xchg
xchg
je
int3
inc
pop
push
pop
fndisi(8087
jmp
jle
mov
lock
mulb
ljmp
in
ja
dec
ljmp
icebp
fistpl
es
out
enter
dec
pusha
scas
pusha
mov
icebp
mov
dec
sbb
mov
popf
adc
sahf
inc
lahf
mov
lods
jge
pop
aam
mov
add
fldt
imul
xor
sub
push
enter
xchg
jae
and
jp
pop
xchg
jle
ss
ss
push
in
jg
inc
jle
jmp
pop
dec
subb
ret
and
or
dec
jmp
xchg
pop
push
sbb
and
jmp
push
push
mov
xlat
int3
jns
cmp
pop
hlt
test
xor
mov
mov
cmpsb
pop
cld
xchg
ljmp
xor
insl
out
int
imul
sbb
sub
jns
imul
mov
xchg
jo
in
mov
add
pop
out
sub
xor
movsb
jmp
bound
pop
xchg
sbb
cmp
lods
cwtl
cli
jb
cld
scas
xchg
sub
pop
imul
mov
and
jo
lret
add
mov
dec
movsb
pop
sbb
adc
leave
popf
into
push
test
out
jecxz
icebp
lahf
add
fsts
cmp
stos
sbb
sahf
adc
cwtl
lock
mov
imul
mov
into
add
fistpl
dec
dec
add
jg
aaa
jge
cmp
sbb
add
mov
fistps
adc
pop
mov
cltd
xorl
xchg
loope
sbb
movsl
lods
lock
dec
insl
pop
or
leave
aaa
mov
xchg
aad
ret
cmp
outsb
sbb
pop
pushf
jbe
jecxz
inc
fwait
lret
dec
xchg
scas
adc
pop
mov
insb
ja
aaa
mov
out
popf
xchg
call
aam
dec
dec
jae
ds
mov
sbbl
cmp
sahf
nop
pop
in
sbb
lahf
ljmp
mov
scas
out
arpl
adc
adc
xor
movsb
jns
lret
jo
or
jge
cmp
in
bound
sbb
aam
test
jne
shlb
and
test
pusha
ss
popa
sbb
jnp
out
imul
mov
push
ss
jns
push
inc
sub
dec
xor
dec
ljmp
jecxz
lret
fisttpl
pop
insb
inc
jecxz
pop
ret
cmp
and
push
xchg
test
gs
xor
fwait
movsb
fsub
les
pusha
aaa
push
es
pop
iret
ret
ss
bound
sbb
inc
pop
enter
loopne
call
inc
ja
bndldx
and
aaa
out
sub
lret
sbb
in
ds
repnz
mov
repz
iret
shlb
sbb
data16
fcomps
push
out
clc
add
inc
mov
les
repnz
jg
lahf
lret
mov
stos
lock
cmp
sbb
sbb
sub
imul
mov
mov
lahf
addr16
out
imul
push
or
jg
jbe
pop
ss
mov
cmpsb
sub
enter
jg
aam
jmp
sahf
mov
pop
push
mov
dec
fdivrs
in
jbe
test
addr16
lock
and
push
mov
cltd
dec
clc
sub
adc
push
pop
es
sub
fsubrl
pop
sti
andl
ficomps
bswap
lret
or
sub
lret
rcrl
mov
adc
cmp
jl
js
pop
mov
ljmp
fdivr
sub
inc
addr16
ficomps
sahf
es
icebp
cld
aam
ret
in
jo
jge
xchg
xor
pop
in
xchg
sub
insl
mov
jle
inc
fcoms
enter
inc
stos
loope
mov
or
or
mov
imulb
iret
add
movd
std
orb
sub
sub
fistps
and
loope
fnstcw
negl
mov
popa
sub
stos
mov
inc
cmp
add
mov
dec
sar
scas
mov
lahf
jmp
adc
outsb
mov
int3
inc
aam
lock
aaa
movsl
cmp
push
jle
jmp
cmp
repz
aam
scas
inc
ret
scas
fsubrp
push
mov
orl
test
movsl
sbb
cs
pop
dec
xchg
or
in
lahf
push
jp
sahf
subb
imul
mov
aam
pop
adc
cs
inc
fwait
mov
fimull
rorl
xchg
int3
data16
data16
out
or
div
aam
jmp
jg
cwtl
sub
push
xchg
ss
dec
jno
sub
imul
call
cltd
jb
popa
jbe
aaa
xor
call
repz
lcall
mov
xchg
mov
jno
xor
fstpl
imul
mov
jno
dec
push
repz
cli
nop
in
fnstsw
push
ret
lret
jns
aaa
gs
push
inc
icebp
aas
das
in
xor
sahf
jp
or
inc
lods
mov
push
cmp
push
std
in
xchg
mov
mov
ss
nop
mov
scas
arpl
lods
cmp
mov
js
gs
cmp
lods
hlt
or
xor
pop
and
xchg
jnp
jmp
or
aaa
ss
nop
add
add
inc
push
push
and
orl
shl
jg
mov
add
inc
stos
rorl
into
jns
inc
aas
scas
or
aaa
xchg
jo
push
sub
ret
xor
inc
pop
stos
or
ja
adc
sbbb
sti
idiv
push
jne
leave
cs
in
movsl
out
jbe
aaa
jb
fs
cmp
neg
in
ss
xor
leave
inc
mov
mov
mov
mov
ljmp
or
mov
push
jge
fnsave
adc
pop
pop
and
dec
imull
repz
lods
pop
sti
loopne
aaa
aam
mov
mov
xchg
out
adc
sbb
pop
sbb
dec
or
imul
xchg
push
dec
mov
pop
push
xchg
sbb
cltd
test
sub
xchg
pusha
pop
fnstcw
pop
xlat
ds
mov
arpl
sbb
inc
dec
stos
add
add
jb
xor
mov
rcr
mov
or
rorl
sti
pop
add
pop
sub
test
imul
lock
lcall
out
js
idivl
cmpsb
mov
push
pop
pop
xchg
adc
fldcw
mov
out
loope
xor
add
mov
outsl
mov
xchg
ja
stos
sbb
jae
mov
push
out
jg
scas
or
cs
fstpl
stc
hlt
mov
testb
loope
sub
es
push
cmp
jg
xchg
inc
in
sti
movb
xor
je
shrl
push
popf
adc
fldcw
fnstenv
inc
fdivl
iret
push
jbe
and
enter
mov
mov
fisubs
outsb
add
push
mov
mov
adc
adcb
push
divb
out
stc
cmpsb
pushf
lea
push
cmp
jg
divb
xchg
bound
push
jmp
enter
ret
push
dec
adc
nop
pop
mov
notl
mov
scas
flds
jmp
mov
adc
fnstcw
gs
cmp
cmp
rol
sti
mov
xor
adc
cmp
inc
data16
adcb
pop
leave
xlat
cltd
sbbb
dec
pushf
xchg
mov
push
lods
fdiv
sti
add
popf
ds
std
mov
in
mov
sbb
fists
push
jbe
jnp
push
mov
xor
jns
push
in
push
stc
dec
test
push
sahf
and
stc
insb
pop
lret
dec
xor
mov
fnsave
repnz
dec
mov
fistpl
in
and
push
mov
adc
jp
aaa
aad
xor
push
inc
std
je
leave
mov
cmp
loop
mov
hlt
repz
xchg
add
adc
and
pushf
sbbb
ja
stc
push
aaa
nop
popa
xchg
push
mov
test
and
adc
sbb
loop
sahf
mov
insb
sbb
xor
fcompl
mov
mov
scas
cs
inc
mov
std
cwtl
sub
into
popf
aaa
pop
out
loop
insb
jo
out
lret
loope
push
loope
lods
scas
shr
in
sbb
xchg
lcall
or
stos
mov
setns
out
push
push
inc
adc
lcall
mov
jo
jecxz
mov
pop
inc
sbb
jo
mov
ljmp
rcrb
arpl
cli
push
jle
inc
cs
dec
push
mov
jb
fadds
sbb
push
loopne
jmp
repnz
idivl
jp
xchg
sub
insb
mov
jae
sarb
cmp
or
lcall
add
and
push
and
cmp
mov
push
sub
icebp
jno
rolb
mov
icebp
cmpsl
xchg
cmp
ss
pop
pop
mov
scas
call
icebp
jg,pt
xchg
mov
bound
pusha
and
lret
pop
cmp
iret
sti
mov
icebp
jo
loopne
xor
sbb
dec
inc
dec
cmpsb
pop
sahf
cmp
es
cmp
pop
stc
lds
or
sbb
cmp
aaa
jp
loope
loope
pop
sbb
jle
inc
aaa
cmp
jp
call
cmp
je
scas
push
pop
add
mov
sbb
rcl
lret
sbb
add
stos
and
je
test
test
push
inc
inc
push
int
in
cmp
mov
sub
mov
test
mov
inc
arpl
test
ret
cltd
sbb
pop
sbb
inc
ss
mov
dec
push
adc
cmpsb
aaa
inc
xor
outsb
add
inc
cld
jmp
dec
dec
enter
aaa
sahf
fimull
das
push
das
sbb
ret
mov
int3
pusha
cmp
pop
sahf
gs
in
xor
jnp
xor
out
data16
popf
pop
inc
test
cmpsl
nop
fildl
sbb
mov
testl
sbb
push
lahf
pop
jb
mov
xor
xchg
icebp
repz
ss
and
pushaw
xchg
lcall
pop
iret
sahf
aam
outsl
mov
or
xor
enter
dec
sbb
jo
jecxz
into
shr
imul
and
fnstcw
sub
test
clc
jg
shl
add
popf
out
in
loope
jns
lock
mov
mov
pop
add
lock
jecxz
arpl
fiadds
mov
mov
js
out
xor
pop
push
hlt
push
xchg
ss
mov
dec
imul
ret
mov
fidivrs
sbb
popa
mov
or
sahf
jge
iret
mov
jns
mov
xchg
adc
push
fdivrl
sub
add
sbb
lret
or
mov
out
cmp
pop
jl
or
mov
lcall
push
jge
cmpsl
push
in
xchg
fnsave
frstor
test
mov
out
and
pop
pop
mov
add
mov
xchg
jae
add
popf
sarb
rcr
pop
loope
jbe
mov
bound
cmp
jns
xchg
jle
lahf
das
pop
test
and
jmp
leave
stos
daa
cmp
aaa
pop
mulb
aaa
shrb
sbb
popf
pop
test
int3
movl
push
sbb
in
mov
sti
jp
pop
adc
mov
cmp
iret
mov
lock
jae
pop
cwtl
sub
lods
fsubs
inc
add
mov
ret
in
sub
jb
stos
mov
adc
fldcw
push
pop
sar
rorb
mov
in
scas
cli
mov
enter
sbb
repz
mov
add
pop
push
cmp
mov
mov
loope
lea
loop
sbb
xor
jne
sahf
dec
push
adc
push
and
das
stos
lret
mov
cmp
push
int
mov
lock
jbe
jo
sub
mov
inc
push
test
mov
adc
jbe
shrl
dec
xor
aaa
inc
cwtl
push
pop
sbb
dec
repz
jbe
pop
pop
adc
mov
ss
outsb
xchg
or
sbb
cltd
mov
fisttpll
pop
nop
in
mov
mov
ret
jp
es
incb
ss
ret
ds
adc
cwtl
mov
jp
or
enter
cwtl
pop
sub
idivb
mov
arpl
in
aad
and
inc
cmpsb
adc
mov
xchg
dec
icebp
pop
fsubrs
jle
mov
pop
shrb
xor
jb
xor
movsl
sbb
in
jl
jge
add
xchg
ja
scas
add
push
in
rcl
call
mov
mov
inc
inc
sub
jmp
in
mov
cmp
mov
jb
in
mov
xor
mov
sahf
in
mov
pop
push
xchg
mov
popa
pop
jmp
adc
xor
or
mov
push
stos
inc
jae
cmp
and
push
jmp
xchg
outsb
dec
imul
ss
mov
cmp
sub
dec
or
subl
out
jbe
add
sti
jmp
pop
fstp
jb
aam
xchg
insb
aas
arpl
outsb
std
mov
ja
adc
call
mov
icebp
std
jo
sbb
mov
sahf
and
xchg
fisubrs
mov
lea
fnstsw
xchg
cli
bound
inc
and
inc
mov
sti
jg
push
outsb
out
shrl
stc
aas
sub
mov
jns
sbb
add
push
add
inc
mov
adc
xchg
std
push
fldcw
ret
stos
mov
sbb
imul
movsb
cld
adc
or
jg
pop
xor
mov
cmp
xor
cmpsl
int3
push
fsts
cmp
call
test
xchg
pop
mov
pop
mov
push
adc
mov
test
add
mov
repz
push
lret
dec
nop
push
dec
stc
icebp
mov
cmp
flds
mov
jno
inc
in
mov
ret
dec
sbb
data16
sbb
bound
sub
pop
xor
enter
stos
pop
dec
movsb
neg
mov
ret
bound
loop
pop
cltd
sbb
mov
pop
adc
push
rcr
jmp
cltd
fwait
cmpsb
dec
push
icebp
and
cmp
sub
add
sbb
jp
sbb
gs
es
repnz
pop
push
add
pop
popa
testl
test
mov
das
adc
test
jmp
cltd
cli
jmp
sahf
push
jg
add
pop
push
int
in
xchg
movsl
test
fcos
out
filds
cmc
jg
out
test
mov
cmp
fmull
bound
insl
sti
inc
dec
ds
pushf
pop
bound
fwait
mov
push
inc
stos
in
loope
add
pop
sub
cli
xchg
or
cmp
sbbl
or
insl
xchg
sub
sbb
shrb
adc
scas
xor
sarl
jno
dec
stos
xchg
in
hlt
lea
jg
in
pop
sti
aaa
add
lahf
and
mov
shl
jmp
mov
jne
fdivp
cltd
mov
movsl
data16
sub
cmp
mov
mov
enter
cmp
jle
jne
lds
pop
orb
jge
inc
and
xor
xchg
cmp
mov
mov
mov
dec
pop
enter
insb
insb
dec
aaa
icebp
out
stos
ret
xchg
pop
enter
loope
in
into
pop
addr16
pop
fs
xor
push
jno
cmpb
sub
mov
and
lcall
inc
shl
mov
pop
push
mov
mov
add
dec
jbe
sbb
xchg
stos
jp
mov
sahf
sub
adc
inc
xchg
mov
xor
mov
push
fstps
ljmp
sbbb
xorb
insl
push
cmp
mov
aaa
mov
test
imul
and
lret
and
pop
outsl
pop
shlb
dec
mov
mov
je
fstpt
and
push
in
test
mov
jmp
lock
fisubl
lcall
adc
cmp
and
jl
jp
cmp
les
aaa
test
pop
daa
or
repnz
movsl
push
and
jle
pop
movsb
push
stos
outsb
pop
jo
sbb
sub
mov
out
jl
sahf
enter
daa
test
neg
push
mov
lahf
ret
rorb
sti
call
sub
sub
mov
jp
enter
sub
insl
popl
int
push
xchg
mov
inc
fsub
hlt
inc
lret
shll
push
sub
jecxz
cmp
push
fdivl
stos
sub
jo
inc
in
pop
push
movb
jbe
sbb
cmp
pop
and
mov
add
mov
xor
dec
push
nop
pop
mov
adc
scas
ss
jbe
push
fdivl
sub
movsl
push
mov
loopne
sbb
fmull
mov
out
pop
sahf
mov
xor
mov
pop
repz
cmp
mov
sbb
mov
cltd
pop
adc
mov
dec
add
pop
das
imul
xor
andb
jmp
imul
add
mov
sub
daa
movsl
fimull
jge
lds
aaa
mov
lret
and
test
add
insl
inc
dec
cmpsb
lods
lret
sahf
xor
jbe
xor
mov
lcall
jb
test
dec
pop
sbb
test
mov
popa
imul
xor
jo
pop
outsb
sbb
sub
sti
sti
jle
cli
cmpsb
push
xor
xchg
xor
sbb
movsl
outsb
pop
push
mov
dec
outsb
mov
add
sbb
lcall
sbb
outsl
mov
cmp
sbb
pop
pop
sbb
fnop
push
or
aad
aaa
popf
adc
sbb
jp
pop
scas
mov
push
mov
fmuls
pop
arpl
adc
mov
jnp,pt
in
jmp
xchg
xor
adc
aad
dec
mov
aam
dec
adc
std
fistl
insl
movsl
jge
mov
lcall
add
sub
popa
pop
movsl
push
rolb
hlt
incb
jge
xchg
out
mov
je
or
nop
push
push
mov
push
div
fsubrl
mov
cmp
sarb
dec
test
out
push
in
ss
mov
lods
std
aaa
das
mov
cmp
lock
mov
add
jl
ss
and
aam
pop
lcall
add
andb
sbb
push
movsl
jle
jbe
and
lock
movsl
aas
int3
cmp
xor
dec
enter
jge
mov
mov
leave
int
push
mov
pop
ror
lea
into
inc
aam
jo
pop
aaa
pusha
xchg
out
pop
pop
or
leave
in
pop
jecxz
shl
push
loope
push
ss
or
xchg
mov
cli
jg
in
das
dec
adc
addr16
cmp
ds
pop
lahf
mov
js
out
pop
pop
push
bound
mov
dec
sbb
outsb
pop
popf
jmp
lds
enter
push
mov
jb
mov
loope
jg
cltd
repz
dec
push
mov
das
jbe
mov
movsl
fcompl
loopne
jle
lea
jge
inc
xor
repz
or
push
push
dec
add
popa
pop
dec
pop
jno
xchg
mov
jle
aaa
rorb
sbb
sub
fcompl
stc
jnp
xchg
lret
cmp
insl
jp
pop
lahf
out
int3
add
add
push
dec
or
fwait
out
call
add
mov
loope
sub
adc
dec
sub
jno
jne,pn
mov
and
ret
push
repnz
inc
das
fwait
in
outsb
mov
pop
in
sbb
push
sub
int
add
adc
pop
sub
or
mov
cli
adc
lret
popf
stc
adc
push
sbb
sbb
sbb
pushl
jbe
insw
xchg
jp,pt
popf
pop
int3
jl
mov
pop
rcl
adc
jno
jb
inc
cmp
int
jecxz
push
cmp
pop
and
insb
xor
push
clc
imul
repz
and
ljmp
push
add
sub
pusha
popf
pop
test
andl
sbb
add
push
insl
jl
ret
aaa
jo
jmp
setae
pop
adc
cmp
mov
mov
cmpsl
xor
ss
adc
add
jo
insl
cmpsl
negl
shlb
repz
add
sbb
push
iret
js
adc
iret
or
fcmovnu
ret
jbe
daa
adc
les
dec
cmp
and
sti
and
push
inc
fsubrs
jnp
xchg
inc
sbb
and
pop
pop
lock
cmp
std
rcrl
xor
lea
in
inc
cmp
inc
inc
daa
incb
and
xor
ret
cltd
jns
aaa
xlat
iret
lods
and
popf
repz
mov
loope
imul
mov
test
pop
movsl
hlt
shrb
adc
outsb
aaa
icebp
in
xchg
fstps
fdivrs
mov
cmp
icebp
adc
push
pop
std
ficoms
aam
xchg
stc
mov
jnp
loope
mov
imul
loope
lret
ss
and
sbb
in
sub
mov
pop
fbld
sub
rcll
xchg
les
sub
fsubrl
loopne
sbb
pusha
sbbb
leave
push
jbe
out
sahf
fisttps
mov
jnp
and
sub
dec
insb
pop
pop
pop
pop
sti
push
xor
or
fwait
pop
mov
sbb
mov
and
sbb
stos
lds
out
popl
mov
sbb
fnstenv
in
clc
push
faddp
out
pushf
lret
xchg
insl
pop
inc
sbb
negb
cmpsb
inc
dec
aam
pop
ficompl
pop
adc
mov
pop
lret
pop
jge
mull
cmp
or
cmpsl
cmp
ss
jmp
shll
repnz
enter
stc
test
mov
push
xchg
push
daa
sub
test
jns
loope
ficompl
cmp
dec
fwait
sub
jmp
push
into
push
pcmpgtb
sub
in
sub
or
add
cmp
addb
xor
mov
pop
xor
dec
insb
aaa
cmc
dec
sbb
dec
mov
mov
sbb
inc
jmp
cmp
adc
inc
push
icebp
aas
and
push
addl
loope
jae
or
jbe
sbb
insb
adc
in
shlb
and
dec
mov
sub
setns
mov
repz
ds
cmp
push
jl
mov
mov
adc
sbb
std
cmovb
jmp
enter
cltd
inc
jecxz
cmp
and
scas
les
mov
test
push
adc
loope
rcrb
je
stc
data16
sub
lahf
dec
arpl
add
pop
mov
pop
inc
loope,pt
mov
std
jnp
lea
add
ret
das
add
fiadds
popf
int3
mov
dec
xchg
adc
jne
imul
or
sbb
xchg
jl
cld
shlb
lock
mov
pop
ret
xchg
mov
xor
jle
mov
test
test
aas
xchg
movsl
adc
icebp
rcrl
pop
jae
jnp
dec
outsb
insl
fistpl
xor
outsb
pop
mov
out
sarb
outsl
ja
shr
jle
scas
cmp
pop
in
lret
xchg
not
and
out
xchg
push
outsb
jo
pop
xchg
stos
adc
jmp
and
cmpsl
and
xchg
test
movsb
jnp
fmulp
pop
mov
pop
push
lea
les
sub
rcr
sahf
mov
insl
pop
dec
mov
dec
push
fstpl
push
xchg
sbb
mov
imul
and
pop
cmp
jge
and
jg
and
out
mov
aas
call
ja
mov
sbb
push
cwtl
add
clc
push
push
adc
fisttpl
movsl
aad
pop
shlb
out
dec
lods
mov
xor
pop
std
lcall
mov
push
adc
pop
ss
pop
pusha
adcl
pusha
xchg
sub
mov
incl
in
mov
mov
push
pop
out
cmp
sbb
xor
add
aaa
gs
test
cwtl
in
or
pop
mov
shl
pop
loop
stos
scas
imul
inc
push
call
mov
jecxz
dec
stc
inc
inc
jecxz
stos
mov
ljmp
xchg
decb
lock
fsub
push
out
inc
add
aas
push
push
sub
shll
dec
jl
mov
ss
mov
and
repz
cmp
movsb
dec
aaa
push
push
pop
push
cs
sbb
adc
repz
icebp
jecxz
out
aaa
mov
dec
ja
cltd
xchg
cmp
or
clc
cld
lcall
jecxz
inc
pop
or
or
ds
pop
push
lds
addl
in
mov
arpl
adc
mov
mov
xor
add
inc
push
or
scas
push
sbb
xorb
lods
jle
pop
int
inc
imul
pop
push
sbb
ret
mov
jns
pop
push
push
sub
jbe
push
repnz
in
dec
aam
pop
cmpsl
lock
aad
dec
pop
mov
inc
nop
mov
aaa
push
cmpsl
dec
repnz
in
cmc
mov
add
jmp
in
sbb
cmpsb
pop
shrb
pop
pop
xchg
lods
fbstp
or
roll
mov
fidivs
mov
sbb
lods
fwait
pop
popa
sti
popf
jmp
dec
sti
jno
lea
push
daa
js
xor
popf
inc
cli
scas
jo
pop
cmpsb
lock
mov
xchg
fwait
sahf
out
mov
dec
add
add
mov
dec
mull
mov
repnz
aas
mov
pop
xchg
mov
adc
inc
data16
sbb
out
adc
pop
adc
inc
daa
jl
sub
mov
lea
xlat
dec
add
mov
cltd
mov
aaa
insl
repz
int3
mov
push
lea
sbb
mov
scas
ss
fwait
outsl
cs
aaa
shr
mov
xor
xchg
push
push
lahf
sub
subl
hlt
ja
lock
jmp
sub
xchg
mov
cmp
repnz
and
cwtl
dec
in
sbb
jno
xlat
rcrb
fisubs
inc
dec
movsl
fcomps
xchg
lea
mov
filds
mov
pop
rorl
insl
shrl
addl
aaa
xchg
int
fmulp
int3
repz
sub
pop
es
pop
or
loope
loop
stc
scas
jb
call
leave
mov
mov
ss
or
pop
in
je
adc
mov
repz
scas
cmp
icebp
addr16
negb
sbb
ljmp
jecxz
aas
dec
mov
ret
sub
add
outsb
decl
dec
push
sbb
ds
jne
adcb
mov
addb
add
mov
adc
adc
pop
dec
sbb
cmpsl
out
subb
stc
and
mov
xchg
int3
sbb
xor
pop
pushf
lea
push
or
dec
xor
loope
sti
lds
scas
or
addr16
test
subl
dec
mov
push
in
jle
idivl
adc
jmp
sub
inc
and
dec
pop
and
pop
in
gs
inc
pop
std
nop
movsl
and
out
jne
mov
jae
cmpsl
cs
inc
pop
or
jge
push
cli
xchg
xchg
in
std
jg
sub
jecxz
je
sbb
fstl
pop
pusha
in
inc
stc
xchg
fwait
cmpsb
jl
lea
sub
pop
int
add
or
add
xchg
clc
mov
outsl
rclb
cmpsb
ljmp
dec
sub
mov
jns
xor
in
in
incl
stos
fidivrs
dec
sbb
shll
jl
mov
push
addr16
mov
fstpl
adc
mov
rolb
sbb
xchg
cmp
add
rcrb
lret
out
fwait
outsb
ds
les
popa
xor
push
mov
or
sub
pop
stos
enter
jo
aaa
stos
pop
sahf
sbb
stos
push
loope
cmpsb
ljmp
mov
and
inc
repz
adc
pop
inc
mov
lock
inc
call
les
fsubrl
inc
or
pop
push
lock
out
adc
lret
loope
pop
jmp
pop
js
inc
jae
dec
stc
pushf
xchg
aam
pop
dec
aam
scas
and
push
icebp
movsb
and
movsl
pusha
lret
sbb
push
dec
loope
sub
jb
xor
out
fwait
idivb
mov
add
cmp
xchg
mov
pusha
jnp
into
stos
iret
out
std
addr16
std
mov
cmp
hlt
lret
pop
imul
dec
or
insb
std
sub
mov
mov
sub
cli
repnz
les
nop
iret
ss
insb
lea
push
sbb
mov
mov
fwait
stc
pop
sti
jne
int3
add
dec
insl
adc
ret
push
shl
mov
fdivs
ret
add
fwait
pushf
arpl
jb
in
dec
mov
jmp
es
push
dec
or
mov
lahf
push
xchg
jb
loopne
inc
pop
pop
loope
fidivs
roll
cwtl
insb
jno
mov
or
jg
xchg
sub
loope
mov
jbe
xlat
mov
cs
ja
add
pop
das
subb
js
outsl
mov
jno
cmp
add
out
cmc
xchg
es
sbb
sbb
dec
lds
int3
aas
jg
adc
in
sbb
jmp
and
jne
test
aas
cwtl
and
sub
jno
jle
or
jno
inc
pop
xor
mov
mov
xor
inc
in
and
repnz
mov
decl
push
bound
xor
xor
lret
xor
ds
mov
imul
sbb
jle
roll
mov
cli
loope
adc
pop
push
mov
pop
mov
pop
sub
jae
pop
loope
rol
cmpsb
fistps
test
shll
fldcw
cmp
mov
jbe
icebp
adcl
mov
in
cmp
lock
cmpsl
rolb
lods
jp
cld
es
or
jne
pusha
mov
adc
mov
xchg
popa
mov
fs
into
xchg
leave
sbb
js
cmpsb
push
pop
shlb
or
inc
inc
popf
stos
adc
outsb
xor
daa
sbb
xchg
and
repnz
inc
push
xchg
pop
inc
inc
inc
mov
xchg
mov
ret
mov
dec
xchg
out
test
lcall
cmc
jnp
lea
jo
mov
decl
lods
pushl
jle
jl
rcrb
aaa
out
pop
test
xchg
or
fwait
or
and
in
fisubs
into
xchg
ds
pop
addl
pop
xchg
cmp
dec
stos
arpl
cmp
loope
dec
mov
xlat
sti
rolb
aas
les
ror
cmp
and
enter
add
fsts
nop
mov
pop
arpl
dec
cmp
mov
les
in
fsubl
pop
insb
or
lea
mov
mov
or
mov
cld
repnz
or
inc
sbb
jle
inc
pop
pop
fnsave
adc
sub
das
dec
aaa
or
ds
add
pusha
inc
dec
push
aas
cmp
iret
mov
js
fcmovnbe
pop
push
aas
and
push
nop
cmpsl
xor
negl
mov
push
sbbb
mov
aaa
imul
pop
iret
xlat
aad
ret
test
mov
jmp
mov
cmpsl
ret
data16
adc
lcall
xchg
lods
or
int3
cmp
fmuls
lret
out
dec
scas
fwait
sub
pop
fisubl
cmpsb
pop
mov
fldenv
fwait
jge
mov
xchg
pop
jl
jl
adcb
test
stc
sahf
outsb
idivl
imul
repz
xchg
xchg
jno
mov
loopne
add
loopne
and
xor
push
xchg
sbb
notb
stos
sbb
jl
scas
sub
pop
and
es
aaa
jns
sahf
and
out
push
cmp
mov
and
test
cld
push
jnp
ds
jmp
stc
pusha
push
mov
filds
into
xor
sbb
insb
shl
pop
shl
inc
stos
mov
js
ror
xchg
mov
lret
adc
mov
je
testb
or
add
pushf
fists
sbb
jge
clc
dec
jp
inc
cli
cmp
movsl
pop
xchg
mov
xchg
inc
and
orb
push
gs
cmpsl
lahf
addr16
xorb
std
jb
stc
push
push
inc
imulb
bound
sub
xorb
pop
push
xchg
sbb
adc
add
dec
insl
mov
mov
movb
scas
lock
rclb
outsb
jle
sbb
cmp
mov
loop
sbb
mov
xor
cmp
popf
mov
pop
sub
test
outsb
sbb
cld
cmp
rol
push
dec
pop
cmp
ss
jbe
xchg
imul
mov
push
pop
inc
cmp
jb
mov
jg
mov
sub
sahf
inc
insb
mov
adc
sbb
popa
lret
shll
cmp
xor
dec
sbb
data16
mov
push
push
pusha
sbb
in
add
cmp
mov
hlt
and
jae
aam
loop
icebp
pop
xor
xchg
inc
mov
mov
sbb
push
dec
and
fildll
out
pop
mov
fs
cmpb
jns
inc
xchg
movsl
lret
in
sub
repz
sub
repnz
mov
xchg
sbb
xor
adc
sbb
mov
fcomp
jne
scas
sub
mov
mov
dec
xchg
incl
cs
lahf
inc
jbe
aaa
add
jle
adc
add
push
xchg
push
or
in
loop
aad
mov
mov
adc
or
xor
mov
mov
stc
out
lret
push
ret
call
aaa
lret
pop
mov
jo
ja
stos
repnz
lahf
lahf
in
lock
fwait
pop
out
in
pand
out
jl
xchg
and
mov
movsl
dec
sub
push
aas
inc
jmp
sub
sbb
in
dec
fwait
sbbl
or
fwait
inc
sub
inc
movsb
sub
xor
push
or
pop
push
jge
enter
repz
dec
and
pop
and
add
mov
shl
arpl
lret
mov
add
test
and
ds
xchg
sahf
xor
dec
out
push
pop
and
insb
sahf
pop
push
cmp
es
lods
lea
popf
cmp
aaa
xchg
mov
call
ret
fsubs
dec
pop
loope
push
adc
aaa
inc
mov
cmp
or
pop
mov
scas
xlat
xchg
pusha
dec
test
aas
aas
push
iret
dec
call
imul
outsb
inc
fdivs
ret
push
and
jno
add
imul
push
mov
xchg
enter
aaa
sbb
inc
out
pop
add
jmp
mov
and
es
mov
lcall
icebp
pop
aam
mov
add
iret
sub
dec
ret
bound
cmpsl
inc
jg
pusha
lret
test
lahf
adc
js
sbb
mov
clc
cltd
stos
mov
pushf
icebp
lret
adc
and
cltd
call
adc
lods
jae
outsl
pop
fstpt
test
ret
sbb
xchg
jg
cmpsb
int3
mov
mov
dec
xchg
aam
jbe
jp
repz
sti
rolb
mov
pop
jmp
xlat
mov
out
aam
mov
adc
adc
int3
sub
inc
outsb
dec
int3
sahf
jmp
add
xlat
sub
scas
aaa
cmp
lret
call
jne
inc
and
outsb
cltd
jo
roll
cmpsl
in
cmc
xchg
mov
bound
cmp
cltd
repz
pusha
arpl
sarb
mov
mov
ds
rcl
mov
nop
test
pushf
cmp
mov
rorb
and
dec
cmp
cwtl
add
cwtl
addr16
arpl
int
or
inc
xchg
cwtl
pop
sti
add
ja
mov
lahf
pop
es
ss
push
jnp
popa
cmp
lret
sbb
mov
sbb
scas
push
fistpl
xor
popf
jge
or
add
and
jno
xchg
clc
adc
stos
xchg
push
xor
mov
add
je
repnz
sbb
add
aaa
in
ret
xchg
push
pop
leave
pop
fdivr
ret
jle
jmp
xlat
pop
lcall
int
sub
jbe
pop
in
adc
pop
cs
stos
movsl
das
push
cmp
sbb
orl
dec
jmp
loopne
shlb
pop
fs
cmp
push
jno
mov
mul
les
addb
and
mov
and
mov
stos
imul
inc
xchg
cmp
pop
jns
or
aaa
mov
pop
int3
push
cmp
push
popf
sub
test
add
lds
cld
aaa
xor
mov
xchg
sub
mov
sahf
push
push
xchg
or
mov
mov
movsl
cmpsl
jb
es
or
mov
cwtl
mov
xor
in
cmp
cltd
and
sbb
lret
sti
pusha
push
fisubs
cmp
shll
enter
jle
jne
enter
push
in
mov
mov
mov
imul
popa
ror
sbb
outsl
loope
imul
rorb
test
cmp
xor
or
pop
aaa
daa
push
mov
leave
push
xor
test
jnp
push
cmp
fistpl
outsb
mov
push
stc
inc
sahf
mov
push
cmp
fisttpll
and
incb
stc
int3
xlat
insl
mov
imul
js
fmul
adc
pop
and
add
test
int
clc
sahf
test
shr
or
lods
aaa
outsb
lret
cltd
fwait
adc
adc
xchg
aas
and
das
sahf
outsb
adcb
fldt
fldl
pushf
fldt
mov
add
or
push
fstps
mov
pop
out
mov
mov
jns
jl
push
inc
fxch
sbb
sbb
pop
add
fwait
in
ljmp
mov
insb
pop
adc
gs
add
add
xor
out
xor
cltd
in
xor
sti
xor
popf
std
aaa
loope
xor
or
repz
dec
push
add
in
xor
or
cmp
icebp
xchg
stos
xor
fldcw
add
jecxz
inc
in
gs
stc
popf
adc
and
int3
pusha
cmp
imul
or
inc
dec
cmp
gs
es
mov
inc
mov
xchg
sub
dec
lret
cmp
jb
repnz
outsb
adc
inc
sti
jl
ds
idiv
shll
jle
int3
lahf
add
aam
mov
ss
jb
xchg
sub
xchg
jle
int
pop
int
out
jge
lods
jmp
pop
dec
push
jnp
les
pusha
clc
push
xchg
adc
pop
hlt
std
dec
inc
cmpsb
pushf
cmp
push
in
rcrb
jecxz
lcall
dec
pop
out
ds
cs
adc
and
jle
sbb
cmpsb
out
clc
pusha
cmp
push
gs
cltd
pop
mov
int3
pushf
stos
mov
pop
lcall
mull
jle
frstor
and
cmp
xor
push
mov
add
jle
xchg
aas
or
push
stc
pop
pop
js
cltd
adc
in
inc
push
lods
cmc
outsb
and
cmp
push
adc
mov
bound
dec
movsb
std
lret
rcll
fsubrs
negl
inc
andb
dec
jo
jne
push
jns
pop
mov
in
in
cmpsl
lods
sub
jecxz
xchg
mov
dec
mov
fdiv
cmpsl
sar
sub
pop
int3
pop
rorb
iret
xor
ljmp
stos
lret
inc
scas
adc
cmp
aaa
or
mov
adc
ds
jle
popf
and
mov
add
pop
shll
mov
mov
pop
push
pop
and
sarb
mov
add
stc
ja
fsubrl
dec
adc
leave
dec
das
mov
ret
out
iret
sahf
xchg
dec
sbb
dec
test
mov
data16
rclb
pop
add
jp
and
dec
mov
outsb
and
insl
divb
test
sahf
dec
fiaddl
mov
loope
sarl
in
push
adc
push
pop
in
js
inc
jnp
imul
mov
or
xchg
cmovnp
out
cmp
dec
add
loopne
inc
jnp
sahf
pop
std
adc
es
icebp
mov
mov
add
lods
int3
pop
mov
aaa
ja
aad
in
inc
stos
and
pop
push
mov
push
sub
lret
mov
dec
outsb
jbe
mov
sbb
in
add
and
out
adcb
jecxz
stos
aaa
add
cmp
test
pop
aaa
inc
leave
sbb
movsl
cmp
mov
aaa
mov
fwait
dec
pop
out
add
aas
popa
mov
push
sbb
lcall
jp
xchg
cmpb
imul
outsb
or
leave
adc
rolb
lods
jg
xchg
push
cmc
divb
adc
adc
push
jecxz
mov
ds
loope
into
mov
stos
jle
pushf
in
in
std
enter
push
add
pop
mov
inc
imul
pusha
lock
jecxz,pn
mov
or
dec
fmuls
push
lret
mov
aaa
rolb
shrl
adc
stc
pop
test
jae
scas
add
ds
lea
dec
jl
pop
ss
fcomps
jnp
jle
add
add
mov
imul
out
cmp
cld
pop
inc
xor
push
fisttpl
jae
xchg
mov
dec
in
jo
or
jmp
mov
mov
mov
push
or
loope
add
cmpsb
and
push
mov
aaa
int3
mov
cmp
and
loopne
negb
jle
outsb
sarl
ljmp
bound
push
les
or
jle
arpl
stos
movl
lock
sub
add
pop
add
data16
das
les
icebp
arpl
xor
push
fdivrl
aaa
in
shl
fucomi
sub
mov
xchg
ds
xchg
adc
pushf
push
xor
mov
cmpsb
imull
aaa
jbe
sbb
inc
inc
jp
jecxz
jo
mov
arpl
mov
call
insb
mov
jo
adc
lcall
dec
adc
cmp
pop
inc
mov
jo
xor
outsb
cmp
stos
je
mov
add
mov
lea
xor
shlb
pop
pop
jmp
pop
or
hlt
loopne
jg
mov
in
cmp
in
pop
aad
or
andl
movsb
inc
divl
jns
int
mov
pop
sbb
xor
jbe
ficompl
movsl
sbb
mov
iret
popa
rorb
pop
mov
xor
fiadds
jb
scas
sub
xor
push
insb
aas
dec
pop
lock
das
ja
cli
push
sub
ds
mov
inc
jge
scas
xchg
out
pop
add
fisttps
aaa
and
shlb
cmp
outsl
rcrl
sub
add
pop
add
mov
loopne
inc
arpl
and
mov
aam
push
jns
inc
jp
add
push
fsubrl
push
std
fcoml
in
xor
sbb
std
mov
pop
xchg
sti
pusha
bound
andb
scas
pop
shrl
loope
fsub
inc
fnstcw
mov
push
pop
fildl
gs
andb
mov
inc
xchg
bound
sbb
mov
pop
sub
fwait
in
sti
push
fistl
xor
jle
mov
scas
aas
add
lods
add
aaa
adc
je
add
sahf
add
ja
cmp
sti
jg
in
cmc
loope
pop
mov
cmp
inc
mov
lea
push
sbb
call
icebp
cmp
dec
popf
jb
and
mov
lods
aam
and
or
mov
push
sbb
pop
mov
das
cmp
dec
or
push
pop
push
mov
lock
jbe
sbb
ds
mov
inc
fcompl
xchg
push
xchg
mov
xchg
pop
pop
cld
sbb
into
xchg
imul
jmp
fstpl
fwait
repz
loope
inc
cld
and
and
sub
data16
inc
in
leave
fcompl
xchg
mov
mov
test
mov
das
jbe
sbb
daa
mov
xchg
les
or
mov
cltd
sub
jl
xlat
fistpl
jge
inc
scas
sbb
dec
enter
push
pop
pusha
cltd
fiaddl
dec
mov
and
and
jo
jno
xchg
xchg
and
fst
push
in
mov
pop
pushf
mov
cltd
push
fisubrl
jp
jmp
xorl
cwtl
cld
popw
popl
lock
scas
pushf
aad
lret
enter
push
push
push
sbb
ror
in
mov
inc
jg,pt
inc
cld
lock
divb
xchg
sahf
pop
xor
add
fdivrl
fsubp
std
push
fidivrl
pop
lock
jp
mov
stos
mov
cmpsb
call
push
daa
es
cmp
add
stos
mov
into
jecxz
xor
ja
in
imul
cmpsb
lret
sbb
das
jne
cli
sbb
in
repnz
dec
inc
jg
push
mov
add
pop
inc
and
orb
ret
pop
ds
aad
and
icebp
in
pop
stc
or
testb
loope
fcmovnb
adc
aaa
outsl
cmp
inc
ret
icebp
rol
and
xchg
into
dec
es
daa
aas
sub
jae
adc
fnstenv
ficoms
loop
pop
dec
out
aas
xchg
out
jbe
es
dec
addr16
mov
xor
inc
mov
addr16
ret
stos
push
inc
lret
into
je
aaa
mov
loope
cmp
in
xchg
jp
stc
cmp
sbb
inc
sbb
mov
pop
out
ljmp
or
cmp
xlat
orps
cli
sbb
push
jo
rcrl
into
xchg
add
cmp
jae
sub
jl
cmp
push
arpl
push
fldl
fdivl
cmp
or
aaa
shrb
add
pop
mov
mov
cmpsb
xor
add
and
lcall
ds
dec
imul
lods
call
arpl
and
jp
xor
js
iret
mov
and
insb
jl
pop
xchg
bound
adc
mov
andb
jae
in
jns
or
cmp
or
lods
dec
dec
fists
add
add
mov
fcoml
mov
add
stos
xchg
pop
enter
shll
ret
cs
loope
xchg
enter
lods
scas
popf
int3
stos
fstpl
cmp
data16
pop
fbstp
cld
cs
jns
mov
fsts
jecxz
sbb
stc
pusha
shl
mov
orl
xchg
mov
dec
iret
xchg
mov
pusha
cmp
loope
ficomps
mov
jnp
jg
inc
ds
lahf
and
mov
push
xchg
pushf
dec
icebp
mov
cwtl
scas
loop
mov
aas
jno
inc
mov
ds
dec
dec
aaa
sbb
mov
xchg
lret
daa
scas
jge
and
outsl
das
leave
mov
pop
pop
shl
xchg
test
mov
mov
mov
stos
ss
js
jno
dec
in
arpl
stos
gs
push
inc
stos
pop
ss
or
outsb
cld
in
inc
sbb
push
cmp
dec
call
push
adc
sti
adc
fstl
sbb
or
ja
mov
sub
loope
ficoml
sub
into
loop
aaa
push
pop
imul
cltd
jb
jno
jbe
xchg
rcll
push
fistps
xchg
mov
stos
cmc
adc
sub
sbb
int3
adc
out
sbb
lret
add
insl
loopne
imul
js
call
loope
addb
mov
inc
ja
cmp
dec
mov
inc
cwtl
jg
push
fstpl
cmp
pop
iret
sub
fidivs
mov
pop
and
fcmovnbe
jbe
loopne
xor
inc
pop
jns
jecxz
or
jecxz
outsb
or
jnp
and
sub
mov
cmpsb
cmp
divb
repz
nop
fimull
pop
xchg
inc
loope
push
not
sahf
xor
outsb
sbb
aam
mov
aaa
std
and
std
inc
sub
jmp
neg
mov
repnz
sbb
and
shr
mov
cmp
and
push
sbb
movsl
and
mov
shlb
aas
push
imul
and
lret
jle
int3
das
jns
cmp
aaa
sbb
data16
pop
sahf
ror
inc
ds
adc
sbb
fisttps
sbb
add
js
es
dec
mov
add
adc
rclb
test
cld
dec
clc
hlt
sbb
in
inc
aaa
push
xor
sbb
icebp
mov
daa
loope
jno
inc
aaa
jmp
test
cmp
mov
repz
jp
push
add
mov
push
sub
adc
and
mov
fldt
fwait
and
fistl
xchg
fwait
rolb
cmp
sbb
push
pop
add
cltd
jns
pop
cmp
call
pop
movsl
sub
sub
outsl
dec
push
add
add
push
sbb
imul
cmpsb
imul
mov
push
aaa
dec
mov
mov
repnz
sbb
dec
xchg
xor
fldenv
aaa
jg
imul
std
lret
xchg
or
push
jmp
mov
stos
mov
mov
cmp
daa
mov
idivb
insb
pop
fnsave
pop
push
decl
xchg
mov
test
cli
mov
inc
sbb
imul
sbb
and
dec
std
hlt
enter
addr16
cs
fdivs
push
pop
adc
cmpsb
lcall
fisttpl
inc
xchg
loope
adc
fstpl
mov
sbb
aaa
andl
inc
shrb
push
inc
xchg
sbb
mov
sbb
in
cmp
lcall
call
mov
icebp
mov
pop
outsb
add
inc
sarb
out
jbe
cmpsb
testl
sbb
mov
xor
std
mov
stos
mov
or
add
jl
sbb
push
or
adc
cmp
enter
addb
push
cmp
daa
mov
and
jo
pop
pop
int
jbe
push
xchg
sbb
jle
cmp
je
add
mov
and
mov
xchg
inc
pop
jge
push
dec
call
dec
inc
push
cmp
pop
aaa
adc
dec
pusha
ret
aas
jmp
mov
sub
rcrl
aaa
inc
xchg
pop
popf
pop
scas
and
cltd
pop
out
es
adc
std
dec
inc
adc
ret
mov
out
mov
imul
mov
mov
out
sbb
pop
mov
sub
pushf
or
lret
inc
int
mov
insl
mov
push
xchg
ret
fnstcw
sbb
loop
push
sbb
stc
leave
inc
jp
ljmp
call
xchg
sbb
cwtl
test
aaa
addr16
loope
aas
pop
outsb
ja
test
cmp
inc
mov
mov
imul
add
mov
mov
leave
test
xchg
test
ret
jbe
mov
mov
test
xchg
orl
inc
xchg
loope
jle
or
notb
aas
jbe
pushf
inc
and
adc
jmp
or
or
mov
inc
fiadds
add
jbe
sbb
push
jecxz
xlat
ficoms
repnz
test
mov
mov
shrl
pop
lea
and
dec
ret
stos
pop
enter
xor
pop
jecxz
lock
dec
push
ljmp
in
mov
in
jo
std
pop
data16
mov
sub
incl
add
and
pop
data16
cs
cli
notl
test
daa
in
std
in
fstpt
aas
mov
pushf
enter
outsb
dec
cmp
mov
lret
sbb
jle
inc
shll
jle
mov
lret
push
add
out
pop
adc
leave
sbb
out
jl
dec
scas
mov
sbb
xor
addb
xchg
jl,pt
enter
mov
insl
cmp
hlt
push
cmp
push
xor
sub
push
and
repz
mov
imul
int3
mov
arpl
sti
or
mov
push
ficomps
xchg
xor
mov
inc
jle
popf
sub
sbb
or
movsl
xchg
sub
fdivrp
jns
ds
pop
mov
mov
xchg
xchg
nop
push
mov
mov
sbb
sub
jge
sbb
cs
inc
ljmp
adc
inc
js
test
rolb
sbb
movsl
ljmp
stos
cmp
sub
sahf
mov
inc
enter
xlat
pop
pop
fdivl
pop
sub
and
push
push
mov
int3
or
pop
mov
ja
fwait
inc
das
xchg
mov
dec
filds
mov
dec
popa
cmp
icebp
mov
adc
gs
bound
pop
push
add
cltd
stos
lds
jl
pop
pop
sti
sbb
push
arpl
or
push
inc
movsl
cs
cmp
cmp
add
inc
popf
data16
pusha
pop
jge
divl
xor
adc
add
xchg
inc
in
xchg
fs
add
ds
pop
and
mov
nop
popf
push
pop
pop
pop
loope
sub
inc
cmp
add
repnz
imul
mov
mov
cmpsl
hlt
insl
inc
cmp
ss
aad
fyl2x
insl
mov
nop
or
xchg
rcrb
dec
pop
popf
repz
pop
cmpsl
imul
jne
pop
sbb
ss
dec
push
jl
jle
mov
rcl
pop
pop
mov
sbb
xchg
shlb
ss
aad
push
pop
aad
push
fnstcw
sub
arpl
mov
xchg
bound
cmp
add
jo
inc
jl
enter
xor
inc
cmc
and
pop
sbb
aam
rcrb
lea
inc
sbb
mov
iret
pop
loope
adc
enter
test
jno
subb
or
aas
cmpsl
iret
pop
icebp
xor
cmp
push
sti
sahf
imul
sti
aaa
sbb
lcall
push
int
frstpm(287
scas
daa
lcall
adc
call
loope
cli
fsubrl
outsb
shlb
adc
orb
and
cmp
and
adc
push
sbb
cli
int
push
ficoms
outsb
dec
and
adc
or
jmp
jg
push
pop
fildl
pop
dec
pop
and
pop
es
xchg
sbb
adc
idivb
pushf
mov
xor
jnp
out
and
sti
loope
dec
lods
pop
or
sarl
or
js
cmp
shlb
add
sub
stos
xchg
dec
mov
mov
hlt
mov
in
dec
pop
loopne
mov
daa
jb
push
fidivrl
jo
addl
push
pop
add
inc
addb
xor
dec
nop
inc
adc
push
sbb
les
sub
and
bound
dec
dec
ja
mov
or
push
adc
ja
push
rcr
in
fwait
aaa
cmc
filds
enter
dec
pop
sbb
xchg
or
dec
pop
dec
loope
jle
mov
pop
mov
nop
test
push
jns
cmp
cld
and
clc
outsl
in
jb
adc
mov
loope
aaa
rclb
cli
dec
cmpl
lret
sub
outsb
jb
pop
xor
jo
andl
xlat
lods
cmp
daa
or
push
cmp
ss
cli
dec
and
popa
jge
ror
std
ret
cmp
arpl
imul
pop
and
inc
and
cmp
jmp
cmp
jge
roll
mov
mov
and
into
out
sti
loope
aaa
add
jb
jecxz
mov
mov
or
scas
push
inc
fdivl
leave
cmp
lds
sti
dec
pushf
push
pop
ds
jns
scas
mov
push
jl
dec
in
xchg
into
mov
cmp
mov
pop
dec
lock
enter
ja
movsl
jbe
stos
aaa
pop
push
sahf
in
mov
sti
mov
js
into
sbb
ret
xchg
jno
pop
inc
aam
mov
inc
mov
pop
xchg
fisubrl
push
pop
imul
call
aaa
xchg
repz
pop
daa
mov
add
pop
jb
in
jle
inc
sahf
ljmp
fisttpll
cmc
ret
mov
icebp
inc
imul
xchg
dec
in
mov
ret
aas
testb
out
arpl
jno
stos
inc
inc
push
std
mov
outsb
jmp
dec
out
faddl
add
xchg
flds
xor
pop
loope
or
aaa
mov
jb
aaa
fcmovne
xchg
jmp
aaa
loope
imul
mov
pop
adc
pop
mov
es
adc
xor
sbb
movsl
xchg
and
outsl
pop
jecxz
fistps
xchg
dec
dec
out
sahf
add
mov
icebp
sbb
mov
jecxz
sahf
jle
cmp
fwait
xor
add
dec
in
dec
pusha
inc
push
cmp
mov
aas
stc
dec
sbbl
inc
lahf
xor
xor
pop
mov
add
ja
aaa
into
push
sbb
and
sbb
mov
add
lea
leave
sbb
les
shll
loope
cmpsb
mov
mov
sarl
movsl
aaa
cltd
insb
jp
enter
mov
mov
jle
stc
data16
es
and
jge
jo
addr16
dec
jmp
pop
lock
cwtl
sbb
push
imul
or
das
movsl
addl
cmpsb
mov
fwait
xor
repnz
jmp
sub
push
mov
push
jl
fcoml
loopne
pop
cmpsb
aaa
icebp
cmp
push
dec
imul
aam
xor
movsb
add
pop
cmp
fsubr
aas
loope
in
popa
movsl
xchg
inc
mov
pop
aam
and
push
mov
xchg
mov
dec
or
dec
clc
inc
lods
add
push
out
fildll
outsl
fadd
mov
cli
inc
imul
cmp
fnsave
iret
sbb
cld
in
insl
xor
mov
xchg
dec
out
in
sub
xlat
adc
pop
sti
mov
inc
mov
fldt
in
int
sahf
jp
test
outsb
outsl
and
stos
popa
test
into
xchg
xchg
cmpsb
push
lea
cld
test
push
jo
lahf
xor
xchg
call
clc
sbb
xchg
in
jmp
in
jbe
lret
testb
imul
cmp
sub
add
mov
js
mov
and
inc
sbb
mov
adc
xchg
mov
sbb
cmp
aaa
mov
clc
or
sub
enter
xchg
pop
test
add
add
movsb
insb
in
jmp
outsb
sbb
cli
pop
in
jmp
push
shrl
ucomiss
adc
jnp
scas
xchg
or
push
inc
rclb
xchg
mov
addr16
dec
js
aaa
enter
jl
sbb
imul
scas
ss
jle
ds
fs
bound
dec
data16
add
jmp
lods
sti
loop
xchg
dec
lret
aad
jo
cmp
pop
cmp
xchg
mov
fwait
mov
lret
das
outsl
mov
pushf
dec
mov
insl
inc
push
gs
int3
mov
rorl
lret
dec
aaa
adc
dec
mov
lods
and
sbb
icebp
sub
pop
cmp
jecxz
mov
sub
mul
pop
jne
adc
mov
mov
hlt
stc
sti
scas
inc
ficoms
and
shlb
sbbl
mov
cmpl
insl
push
pusha
out
and
jmp
jo
jmp
mov
les
aam
fildll
xchg
pop
add
and
add
mov
jnp
pusha
movsl
lret
test
inc
ljmp
push
or
outsb
movsb
aaa
imull
cmpsb
iret
dec
dec
sub
jge
inc
jno
arpl
decl
enter
sbb
ja
mov
mov
ficompl
loope
mov
mov
xchg
dec
sub
mov
pop
mov
clc
adc
iret
aaa
push
inc
pop
fdivr
push
xor
roll
cmp
pushf
pop
movsl
or
ret
lods
xchg
jmp
push
insl
mov
data16
popf
pop
mov
pop
in
inc
sub
mov
arpl
fldcw
aam
push
loop
mov
lret
sarb
push
xor
out
mov
jbe
adc
dec
outsb
fldl
aaa
scas
dec
out
pop
sub
popa
jp
cli
cmpsb
push
fs
je
inc
xchg
iret
pop
cmpb
test
aaa
and
das
push
popf
fstps
test
sahf
mov
dec
jnp
pop
in
adc
mov
cmp
pusha
push
and
popf
push
mov
mov
lcall
push
data16
sub
jae
outsb
add
aas
jmp
js
dec
cmp
dec
xlat
jge
jl
inc
mov
popf
fdivrs
stos
outsb
insl
mov
cmpsl
repz
int
aaa
adc
xchg
loop,pt
mov
xor
lods
and
fwait
push
mov
sbb
dec
mov
fstps
xor
pop
and
pop
jge
mov
xchg
dec
mov
mov
sbb
and
sarl
mov
xchg
out
flds
inc
or
adc
insl
hlt
sti
adc
fidivl
xchg
push
loope
aaa
jns
xchg
outsb
mov
dec
sahf
int
test
ss
in
mov
sub
in
test
push
icebp
popf
call
xchg
fistps
cmc
leave
sub
push
xchg
adcb
scas
cmpsl
insb
jno
out
xlat
scas
and
mov
xor
pop
and
sbb
adc
mov
lcall
pop
mov
lret
jle
push
imul
push
xchg
cmp
psraw
pop
por
in
add
jecxz
stos
insl
fisttpl
sbb
out
js
sbb
not
clc
in
aaa
dec
fucom
in
mov
fisubs
dec
arpl
inc
fucom
add
je
call
mull
js
stos
inc
imul
ret
or
cmpsl
andb
shlb
inc
jmp
lret
xchg
into
inc
mov
push
jecxz
mov
sub
sbb
js
aaa
mov
pop
hlt
in
or
lret
mov
outsb
in
inc
fcmovnbe
movsb
push
imul
xchg
xor
add
test
sbb
jmp
stos
insl
lcall
inc
adcb
pop
scas
and
pop
sub
mov
mov
lret
lock
lcall
push
lods
jl
mov
and
ds
pop
cmp
aad
pop
jle
mov
adc
inc
ds
and
fdivrl
jmp
out
minps
mov
sub
loope
add
pop
jp
push
add
test
sub
arpl
adc
adc
cs
test
out
xchg
dec
andb
popa
push
fwait
in
xchg
enter
std
int
mov
sbbl
lods
and
outsb
fstpl
push
outsb
xchg
les
in
push
xlat
out
jmp
pop
ljmp
repz
lcall
xor
mov
lock
es
stos
lock
in
jo
rcr
and
lret
xchg
pop
dec
data16
jecxz
aas
mov
dec
add
pop
add
mov
ret
xor
cld
jo
in
call
cmp
mov
and
or
xchg
stos
jmp
popf
fwait
sbb
mov
sti
and
dec
jle
mov
enter
cmp
cmp
fldt
mov
mov
or
in
sub
cwtl
jnp
mov
mov
sub
pop
mov
xchg
adc
test
sbb
pusha
or
adc
lret
loope
sbb
ss
testb
xchg
jne
sbb
jo
inc
orl
pop
xor
fdivs
xor
test
movb
xchg
xchg
or
jp
rclb
push
fsub
icebp
rol
pop
sahf
xor
mov
xor
leave
pop
sbb
cs
push
das
mov
cltd
outsb
pop
mov
fcomip
add
xor
mov
ljmp
mov
es
in
mov
loope
inc
mov
or
out
cmpsb
sti
fisubl
ret
addr16
mov
add
jb
jo
pop
pop
sub
and
cmp
push
les
mov
mov
xchg
das
movsl
mov
cmp
inc
push
sarl
imul
sub
daa
jo
inc
lahf
add
lahf
js
iret
nop
rolb
inc
xor
mov
xor
xchg
fstps
mov
mov
xchg
adc
push
popf
loopne
pop
das
fcoms
adc
push
cmc
dec
inc
popa
inc
cmp
push
sub
add
out
push
lcall
dec
sahf
ja
sbb
cmpsb
push
pop
mov
and
or
jbe
test
pushf
mov
mov
mov
rclb
cmp
push
and
xor
sub
dec
in
pop
xor
mov
dec
dec
xchg
mov
lcall
or
scas
std
sbb
dec
sub
popf
sbb
jmp
cmp
sbb
insl
scas
inc
mov
dec
push
out
gs
std
and
add
inc
jns
add
orb
pop
inc
aas
adc
sub
ret
cmp
push
xor
push
inc
jbe
push
fsubr
jb
sub
mov
movsl
add
cli
ss
jl
sub
lock
mov
enter
out
adc
stc
cmp
sbb
jle
sahf
enter
mov
lea
mov
out
ss
xchg
cmp
pop
adc
pop
shll
sub
stc
movb
aam
xor
lock
lret
jecxz
pushl
nop
fsts
pop
adc
aam
rorl
mov
pop
lods
mov
call
inc
aaa
jae
dec
sub
sbb
rorb
popaw
hlt
ds
fcomps
pop
sbb
lcall
lods
and
mov
mov
sar
in
and
push
and
popf
rcr
jle
je
or
data16
adc
stc
and
sub
inc
jnp
hlt
cli
jbe
lds
cwtl
fsubrl
fnstenv
aaa
mov
xor
test
loopew
aaa
jne
inc
icebp
dec
xchg
in
repz
ljmp
jbe
jecxz
insl
jo
mov
loope
inc
mov
sbb
rolb
mov
fists
mov
imul
xor
outsl
push
or
scas
lret
pop
jbe
push
out
mov
sbb
cmp
cltd
popa
in
pop
jle
pop
jl
adc
jae
incl
imul
mov
arpl
sarl
out
fimuls
inc
aaa
jo
jns
std
mov
jle
inc
ret
aam
aaa
mov
dec
adc
outsb
sbb
push
je
arpl
andb
sbb
in
xchg
push
and
outsb
nopl
mov
inc
pushf
in
and
sub
push
ja
mov
ret
jp
dec
icebp
push
loopne
ror
inc
or
adc
mov
std
push
add
adc
std
cmp
xchg
test
jp
pop
pop
andb
lea
add
jle
call
in
mov
adc
addr16
mov
xlat
cmp
mov
dec
bound
popf
or
jmp
push
add
jle
adc
rep
in
hlt
dec
pop
fwait
sub
inc
loope
ds
cmp
sub
fmul
sub
cli
add
pop
test
pop
mov
out
mov
mov
out
pop
jns
movsl
lods
mov
cmp
jle
cmpsl
lret
pop
stos
or
iret
call
push
pop
jo
cmp
call
or
lock
xchg
scas
xchg
dec
scas
add
cmp
xor
sete
popa
xchg
pop
inc
adc
sub
movsl
dec
sub
mov
mov
jge
mov
sti
ljmp
mov
stos
jp
or
add
notl
xchg
sub
mov
fisttpl
fldcw
aas
jg
mul
dec
lret
into
mov
add
jno
outsb
cld
stos
mov
add
cmpsb
movd
dec
inc
mov
cmp
jl
and
mov
sub
ror
ss
xchg
lea
cmp
cmp
js
jo
pop
mov
test
outsl
dec
xchg
sbb
mov
mov
in
mov
sub
mov
xchg
into
or
push
gs
mov
sub
sahf
dec
cmp
push
in
jnp
mov
in
adc
pop
pop
mov
mov
push
int3
bound
fimull
jecxz
aaa
test
bound
outsb
pop
mov
cmp
mov
loope
sbb
ffree
fimuls
mov
dec
inc
jno
mov
cmp
sbb
sti
xchg
cs
fidivrs
fwait
adc
inc
dec
popa
or
add
pop
add
mov
and
lret
lcall
mov
psrad
jae
adc
fisttpl
icebp
mov
mov
arpl
jmp
js
int
sti
add
stos
fistl
and
rcrl
pusha
fistl
ss
and
sbb
sub
adc
adc
inc
test
popf
dec
ja
cmpsl
mov
dec
lret
je
mov
sub
sbb
shr
jmp
call
push
insl
pop
rcrl
hlt
leave
mov
rcll
jge
sbb
mov
xchg
popa
jb
jg
inc
and
cmc
add
int3
movsl
ds
lahf
outsb
repz
and
lods
into
out
jl
adc
idivl
les
or
mov
push
xor
mov
jb
data16
sti
into
xlat
inc
xor
test
sub
or
loopne
fiadds
sbb
xchg
jb
lret
out
int
fimuls
ss
enter
pop
dec
or
jnp
jle
lcall
push
idiv
pop
pop
aas
sub
or
cmc
cmp
int3
js
repnz
cmp
icebp
or
hlt
mov
adc
mov
pusha
daa
lcall
fdivrl
jne
nop
cmp
es
test
jnp
outsb
lock
mov
outsl
pop
xlat
pop
popa
aad
push
lret
insl
inc
in
cmp
or
out
mov
outsb
fxtract
and
je
push
push
stos
lods
jle
pop
aam
xchg
enter
push
push
push
test
pop
cmp
or
jle
icebp
pop
add
and
cmp
ljmp
cmpsb
inc
loop
cmp
imul
vpunpcklbw
aaa
push
subb
push
and
inc
push
pop
adc
push
cmp
mov
cmpsb
pop
push
dec
call
inc
xchg
jl
loopne
jno
lcall
pusha
dec
ret
add
sbb
pop
adc
aaa
inc
shlb
jle
xor
in
pop
shlb
pop
call
shlb
xor
add
sub
mov
sub
notb
cmp
jp
push
add
fsubrp
adc
stc
into
or
bound
cs
push
xchg
lret
sub
cld
mov
bound
bound
pushf
rcrl
fimull
mov
rolb
jmp
mov
push
pop
shrb
aaa
lret
xchg
into
xor
ror
shll
sti
cmp
dec
add
insb
ss
xchg
cmpsl
jg
pop
pop
mov
adc
sti
imul
inc
push
pop
push
inc
lcall
test
adc
jo
popf
insb
cld
or
aam
mov
notb
cmp
mov
jp
nop
outsb
xchg
cli
and
out
mov
xchg
aaa
jno
lods
and
xor
pop
mov
ret
mov
xchg
jle
js
jecxz
fucomip
shll
sarb
xchg
inc
lea
adcb
pop
push
ss
sub
cmp
jmp
fprem
pop
inc
inc
aad
pop
inc
pop
arpl
sub
push
ret
add
adcb
cmp
push
mov
jle
fndisi(8087
das
or
push
shll
push
aas
jl
pop
in
pop
add
jnp
call
test
or
in
dec
aaa
push
outsb
fsubp
aaa
das
scas
mov
adc
clc
mov
movsl
out
mov
mov
insb
dec
gs
mov
pop
lock
popf
ds
aad
cmc
js
sahf
aaa
clc
std
in
js
imul
cmp
pushf
mov
movsl
inc
push
sahf
or
jo
test
mov
enter
or
sbb
xchg
and
and
mov
scas
fucomi
rcr
xor
mov
pop
fldt
je
sub
jle
jno
mov
mov
out
and
mov
sahf
dec
movsl
and
dec
test
cmp
dec
shll
mov
je
movsb
les
aaa
int3
xchg
sbb
and
movsl
jg
sbb
in
jmp
cltd
and
pushf
cmp
jg
enter
xchg
loopne
mov
loop
pop
lods
jmp
nop
mov
xor
insb
imul
in
or
mov
sub
fidivl
shlb
mov
subl
mov
add
push
sbb
lahf
or
xlat
out
fs
movsl
push
xchg
sbb
inc
mov
pop
mov
aam
sbb
mov
add
jecxz
or
add
ljmp
cmp
xchg
push
pusha
ret
inc
mov
push
out
int
cmp
sub
lds
mov
pop
push
out
pop
sahf
inc
add
call
inc
and
mov
int
aas
ljmp
fisttpl
mov
sbb
pushf
xchg
jge
cmpb
mov
fs
lret
and
scas
daa
xchg
jg
imul
shll
sbb
call
sahf
adc
popa
sti
aaa
or
lcall
cli
stos
pop
sbb
jle
and
cli
aad
aaa
pop
dec
adcb
loop
int
fsubl
push
mov
dec
outsl
xchg
inc
aaa
cld
pop
sbb
and
sahf
lret
xchg
jmp
adc
mov
ret
or
pop
in
xlat
pop
and
mov
and
mov
imul
imul
rcrb
mov
mov
push
cld
insb
sbb
scas
test
inc
int3
inc
pop
lcall
xchg
add
stos
jl
add
movsb
aad
in
movsb
pop
stos
xor
cli
sbb
sub
xor
int3
out
cmp
xor
aaa
cli
imul
pop
adc
and
cmp
mov
ficoml
inc
mov
enter
cltd
or
roll
pop
add
jmp
mov
lret
sbb
divl
push
push
adc
jle
in
xor
out
sbb
push
popf
ret
pop
stc
pop
fisttpll
stos
stc
test
mov
pop
sbb
inc
add
pop
call
push
sbb
xor
dec
fmul
daa
loop
xchg
cmp
or
aaa
jge
outsl
xchg
call
js
mov
out
pop
sub
mov
and
cmp
xchg
add
xchg
push
jl
mov
dec
out
mov
sbb
nop
mov
sbb
lock
loope
arpl
das
pop
xor
fistpll
stos
inc
or
movsl
cli
enter
inc
and
xor
push
lods
in
mov
add
bound
aaa
and
ljmp
pushf
and
cmp
adc
add
lods
xor
lea
jae
cmc
adc
outsb
in
pop
icebp
sub
pop
imul
adc
cmp
js
jns
mov
add
mov
xchg
ds
cmp
xchg
lret
out
or
push
mov
sbb
mov
ret
jae
jle
in
ds
pop
stos
call
popa
adc
cmp
dec
pop
sahf
bound
xor
stos
aas
stc
sub
gs
jns
shrb
inc
daa
xchg
push
in
mov
sbbl
scas
enter
xchg
pop
push
add
add
cwtl
lret
and
mov
andb
sbbb
outsb
pop
enter
out
imul
push
sbb
lret
lds
pop
cmp
nop
pushf
mov
or
adc
pop
repnz
dec
and
pop
sarl
sbb
adc
movb
icebp
xchg
pop
sbb
daa
ficomps
arpl
cmp
in
rclb
ret
mov
stos
subb
fbld
jg
push
out
mov
ds
aaa
cwtl
inc
lock
sub
or
jp
popf
daa
loope
mov
mov
xor
or
xor
push
loopne
movsb
pop
lcall
push
ljmp
dec
jle
mov
xor
dec
aas
mov
dec
jnp
stc
sub
dec
sub
dec
stos
push
mov
push
xlat
sub
orb
jb
sub
sbb
inc
jns
adc
outsl
cmp
sbb
adc
mov
pop
dec
fs
popa
movsb
cmpsb
stc
shlb
jge
fbld
jbe
aaa
xor
insl
pusha
popf
fistpl
aaa
iret
cmp
ss
mov
mov
sub
enter
push
push
dec
mov
dec
in
inc
sbb
ret
movsl
or
and
je
xlat
gs
cmpsl
stos
lret
das
sbb
cmp
iret
pop
cmpsb
icebp
push
pop
es
lods
inc
xchg
movb
fldt
fisubrs
mov
xchg
sbb
arpl
test
ds
mov
loope
lea
ds
pop
lods
test
adc
mov
imul
cmp
mov
hlt
dec
mov
push
arpl
sub
xor
cmpsl
and
pop
jmp
lods
enter
fstl
dec
cmpsl
dec
rclb
mov
repz
bound
xchg
out
outsl
test
repnz
push
cmpb
inc
rclb
icebp
sahf
push
sbb
dec
adc
push
repz
xchg
mov
jne
aad
push
or
dec
je
sahf
and
and
or
lock
loop
aaa
aad
test
mov
cmp
add
xchg
pop
pop
clc
sub
push
in
cmpsl
incb
xorb
pop
ljmp
or
cmp
movsb
inc
and
lret
fists
mov
inc
imul
sbb
and
push
push
inc
aaa
cmp
lods
ret
push
lods
or
scas
je
sbb
add
dec
dec
test
sbb
fimuls
jbe
dec
cwtl
push
xor
pop
in
push
jp
popa
sbb
mov
stos
loop
and
xor
cld
mov
and
pop
lods
pop
xor
in
jae
mov
ret
repz
fsubrl
pop
adcb
inc
imull
fwait
cmp
push
mov
inc
mov
aaa
mov
mov
pop
pop
adc
inc
mov
stos
jg
cmp
xchg
cltd
mov
jno
lcall
and
add
push
fwait
and
nop
out
repz
add
push
jnp
cmp
sarl
mov
mov
fcmovnbe
jne
push
mov
mov
and
xor
aaa
sbb
outsl
dec
xor
iret
jb
mov
ror
push
and
pop
sbb
add
add
cmp
pop
ret
mov
and
add
iret
pop
or
addl
push
aaa
jo
jge
in
sbb
popa
in
out
jae
and
push
mov
fwait
clc
out
out
sub
int3
add
sbb
xor
idivl
inc
dec
jno
mov
lock
push
mov
repnz
xor
jmp
push
sub
adc
add
lea
mov
mov
cmp
scas
fstl
roll
sub
mov
push
sti
xlat
fwait
aaa
cwtl
hlt
es
mov
pop
jl
sub
mov
cwtl
imul
aad
imul
movsl
push
js
into
imull
mov
dec
and
sbb
xor
outsl
out
inc
icebp
clc
add
mov
jbe
lret
xor
out
cmp
pop
jge
or
sbb
icebp
arpl
js
sbb
js
jb
push
pop
push
fiaddl
mov
push
jmp
push
jns
lods
sbb
and
fs
subl
mov
fbld
subb
mov
jno
outsb
sbb
pop
lahf
mov
cmp
adc
mov
mov
adc
sbb
mov
enter
and
out
pop
adc
es
into
hlt
sysexit
gs
pop
sbb
push
mov
insl
andb
fstl
xor
shlb
adc
add
dec
adc
cmp
mov
cli
mov
test
inc
ds
imul
das
aaa
dec
and
push
stos
cwtl
les
xor
es
inc
out
cmp
and
std
movaps
movsl
xor
scas
setge
sub
jnp
jb
movsl
in
iret
icebp
enter
mov
push
imul
test
shll
shlb
add
cmpsb
mov
stos
fistpll
xor
pop
pop
insl
mov
jo
pushf
sbb
add
dec
mov
das
jl
aaa
icebp
sbb
xchg
jno
in
mov
fnstsw
les
stos
xchg
aad
ss
bound
dec
push
jle
dec
cmp
pop
imul
movsl
inc
pop
in
cmp
ffree
orb
mov
sti
push
aas
in
aaa
fldt
and
popa
mov
pop
sbb
and
stc
jge
int3
add
mov
sbb
aaa
and
xchg
jp
lds
popf
inc
mov
jecxz
or
into
test
and
fwait
cs
test
sub
das
sti
push
cli
mov
sub
je
mov
pop
pop
aaa
repnz
cmpsb
in
jbe
jl
mov
xchg
pmuludq
adc
jl
mov
inc
adc
sbb
jnp
jl
xchg
or
out
arpl
lcall
inc
push
xchg
lock
call
jmp
int
sbb
aaa
sbb
push
push
mov
nop
pop
loope
mov
popf
pop
or
jmp
mov
adcl
nop
mov
jl
fucom
add
aaa
pop
push
ljmp
add
in
les
inc
sub
dec
mov
pop
insl
test
lds
jns
cmp
jle
cmp
popa
test
idivb
xor
jo
mov
fadds
popa
test
aaa
and
mov
call
adc
pop
sahf
cmp
xchg
mov
xchg
xor
loope
int3
aas
fmull
fstp
stos
in
imul
ficomps
outsl
xchg
popa
xchg
adc
aam
ja
dec
jmp
ret
insb
outsb
int
sub
pop
mov
arpl
fs
fstl
lods
jb
jbe
sbb
xchg
pusha
sahf
pop
in
mov
call
int
sbbb
mov
fists
cmc
scas
fldenv
push
xchg
jbe
jmp
mov
jnp
pop
int3
dec
jns
ficomps
adc
push
adcl
sar
adc
inc
pop
jle
clc
pop
and
jno
sub
loopne
mov
daa
jmp
scas
sub
clc
mov
in
nop
fisttpll
popa
dec
ds
ds
ss
cmp
outsl
in
sti
enter
inc
icebp
out
pusha
sub
xlat
mov
ja
inc
inc
jecxz
or
push
inc
dec
nop
jecxz
push
sub
ret
scas
jle
sbb
out
push
arpl
cmc
in
mov
inc
adcb
mov
cmp
jp
dec
jmp
push
movsl
insl
repz
cwtl
mov
push
sub
decb
icebp
mov
and
sbb
and
sbb
sbb
dec
cld
addr16
jbe
lea
outsb
sbb
dec
nop
push
pop
lds
pop
ss
out
rcll
cmp
sbb
out
cmp
cld
popa
jmp
and
fs
inc
inc
jnp
mov
xor
mov
xchg
jae
test
cmp
sub
inc
jle
mov
mov
xchg
jno
xchg
sbb
std
scas
pop
mov
mov
inc
cmpsl
pop
mov
bound
pop
shl
xchg
clc
roll
push
push
aaa
ds
cltd
push
addb
xor
mov
jp
sbb
pop
je
frndint
pop
jns
push
xor
jne
in
out
das
or
jg
out
sub
aaa
inc
sub
pop
sbb
pop
mov
mov
movsl
test
ljmp
in
jb
outsb
cmc
daa
fsubrl
mov
jns
push
ljmp
lahf
ss
xor
lea
mov
sbb
fcomps
inc
pop
into
or
push
cwtl
loopne
sbb
jp
pop
adc
rep
push
jb
fs
nop
sbb
jb
cmp
cmp
xlat
sub
dec
pop
push
lea
clc
movsl
jo
jnp
lret
xor
stc
xchg
sub
push
inc
and
xor
mov
xchg
and
or
sub
cmp
aas
movsl
cmc
xor
jns
add
push
enter
int3
xor
and
ljmp
xorb
cmp
adc
jnp
rolb
jle
cs
lea
stos
fdivl
pop
adcl
dec
ds
sahf
sahf
ret
cltd
push
in
push
push
not
cs
pusha
sbb
push
adcl
xor
xchg
xchg
pop
ja
pop
cmp
mov
mov
int
mov
sbb
pop
cs
adc
jbe
cmpsl
jb
xchg
push
or
insb
std
xchg
push
pop
xor
fcomip
or
add
and
pop
bound
cmc
jg
cli
fldl
lea
aaa
stc
out
fwait
aam
sbb
ret
outsl
inc
enter
das
inc
movsl
adc
sbb
cmp
negl
test
leave
andb
jl
pusha
xor
in
ja
sahf
cs
fdivs
push
sahf
imul
mov
pop
or
cmpsb
inc
xor
push
mov
xor
sub
jo
sub
adc
imul
stos
xor
xchg
cmc
pop
xlat
sub
popa
insl
loop
lahf
into
pop
mov
push
mov
movsb
test
stos
adc
pusha
sub
cmp
adc
aaa
cli
les
xchg
loopne
inc
daa
call
mov
test
xchg
dec
js
sti
xchg
out
xchg
sbb
mov
jo
push
adc
pop
aaa
sub
mov
dec
mov
sbb
adc
add
push
xor
mov
test
pop
add
inc
xor
rcrb
ljmp
xchg
fwait
rcll
push
pop
cli
in
jl
hlt
adcl
jp
stc
sub
jb
cmp
sbb
cmp
xchg
adc
sbb
faddl
lcall
andb
aaa
addr16
outsb
repz
aaa
lcall
aam
pop
pop
dec
jmp
in
mov
push
ds
mov
add
inc
xchg
sbb
push
clc
mov
jbe
idivb
jo
ja
xor
int
xchg
jl
test
sbb
mov
xchg
xor
test
sti
iret
dec
testl
push
rcrl
enter
popf
push
loop
lgs
jno
cs
and
cmp
insl
icebp
lods
cld
xor
loope
mov
jecxz
xchg
dec
jle
inc
xor
dec
fmull
fdivrs
push
into
sarb
mov
ljmp
mov
ds
loopne
cs
icebp
cmp
cmpsl
cmp
mov
adc
dec
and
sub
push
sbb
sbb
sub
push
push
xchg
mov
lret
or
cmp
js
mov
cld
xchg
sub
inc
inc
fcmovnu
pop
test
stos
cmp
dec
or
push
mov
add
pop
testl
cs
aas
xchg
cmp
outsb
outsl
xchg
dec
pop
ret
push
dec
mov
cmpb
popa
mov
inc
lahf
pop
pop
imul
movsl
adc
ja
cs
negl
adc
or
test
cli
xchg
jecxz
shl
outsb
aaa
repnz
lea
pop
fwait
lret
mov
xchg
or
jge
jl
cmpb
ret
inc
pusha
adc
mov
out
dec
test
sbb
sti
mov
mov
sbb
and
xchg
push
jb
push
or
pop
push
sbb
xchg
and
cmpsb
leave
gs
xchg
in
cmc
xor
and
and
add
pop
xor
lret
test
pop
out
dec
cwtl
cmpsl
sub
cmc
adc
shrb
dec
sbb
jne
add
cmp
ljmp
cmpsb
in
jb
pushf
mov
mov
lea
mov
sbb
mov
dec
jp
push
mov
xchg
and
lock
push
dec
test
xchg
in
inc
jbe
sbb
sbb
loopne
sbb
cmp
pop
std
les
cmpsl
pop
in
orb
fnstsw
daa
jo
cmp
xchg
jnp
mov
aam
aaa
mov
or
push
in
cwtl
xor
and
jno
cmp
dec
sub
ficoms
out
imulb
adc
cmp
pop
sti
ss
mov
xchg
ss
pop
fdivs
sahf
fnstcw
imul
stos
push
fmull
pop
sbbb
aas
incb
pop
inc
in
pusha
fwait
ret
lcall
sbb
mov
lcall
mov
je
es
push
pop
jp
adc
adc
cmc
lods
lock
adc
into
and
cmp
jmp
aam
xchg
or
sbb
loopne
inc
fcmovne
cmp
xor
rolb
xor
pop
add
push
jl
fmuls
inc
out
aam
cmp
xchg
mov
cmp
dec
xchg
mov
cli
and
inc
pop
pop
shlb
sti
mov
mov
cmp
sbb
add
xor
sbb
hlt
in
lret
aaa
test
lcall
push
aaa
xchg
stc
pushf
lods
lret
jo
mov
or
jge
out
ret
bound
movsl
iret
mov
mov
pop
push
clc
inc
cmpsb
in
jl
in
adc
jl
std
aaa
mov
pop
jne
imul
in
sbb
or
aas
arpl
imul
or
sbb
jo
jno
adc
negb
lea
jmp
inc
sarb
ss
aas
jge
jge
std
push
mov
cmp
in
sbb
xor
les
aaa
inc
push
ss
pop
lahf
mov
popf
jb
dec
in
adc
pop
xchg
movsl
sbb
and
xchg
mov
lret
std
mov
push
sbb
out
push
jmp
adc
jo
dec
cwtl
mov
cmp
imul
ss
stos
sbb
sbb
out
add
ljmp
jnp
out
out
jmp
mov
push
je
pop
add
or
pop
ret
icebp
clc
push
fnstsw
mov
je,pn
jbe
icebp
int3
push
ds
jle
test
sbb
mov
cmp
ret
sbb
mov
xor
imul
pusha
stc
leave
sbb
pop
aas
sarl
push
pushf
xorl
imul
or
in
js
ss
js
sbb
sub
sub
lock
adc
in
sti
sti
sub
divl
in
in
pop
lcall
movsl
cmp
scas
xchg
aam
sbb
xchg
repz
test
jmp
jno
jecxz
arpl
pop
cltd
ffree
mov
js
pop
ss
je
sahf
sub
inc
mov
xchg
jle
aaa
cwtl
add
add
dec
lea
cmp
stc
jg
call
mov
push
fwait
out
or
in
ljmp
outsb
ja
xchg
mov
test
pop
mov
xor
pop
or
cli
add
std
inc
iret
dec
dec
mov
push
mov
arpl
lds
push
les
lock
gs
jmp
xchg
cmp
data16
and
test
inc
addr16
rol
mov
push
or
sub
sbbl
and
imul
bound
pop
lea
ljmp
sbb
push
jle
push
cltd
aad
sub
repz
aam
xchg
lods
cmp
dec
ret
adc
sti
mov
in
cmp
insb
ss
mov
sbb
inc
and
cmp
xchg
xor
cmp
pop
rorl
fists
mov
fs
int3
push
shll
jnp
rorb
aam
nop
cmp
jno
ss
scas
mov
mov
lods
sti
sbb
cmp
push
ss
cmp
mov
lea
add
pop
adc
cmp
mov
dec
xor
lcall
xchg
fldcw
push
push
cmp
mov
or
sbb
inc
repz
xchg
jmp
xchg
js
pop
dec
inc
and
std
aaa
mov
iret
pop
sti
loopne
repnz
sti
jle
mov
iret
adc
push
pop
pop
mov
mov
fstps
xchg
loope
push
fdivrl
push
out
cmp
ja
mov
mov
mov
sbb
jge
shrl
dec
add
mov
lods
ffree
test
jmp
sub
pop
xor
cltd
sarb
adc
mov
pop
dec
mov
rolb
and
mov
stos
push
jecxz
jecxz
push
jmp
arpl
sub
push
pop
jne
xor
and
leave
xchg
dec
fldcw
sti
push
test
loope
inc
lret
or
adc
add
jne
insb
lret
sub
jle
cmp
push
sub
xchg
xor
lods
test
dec
cmp
fucomip
pop
aam
push
in
cwtl
xor
dec
sbb
inc
xlat
xchg
jbe
cmpsl
mov
outsb
sbb
fildll
xor
loope
lea
insl
inc
std
pop
sub
xchg
mov
push
cmpsb
xchg
jmp
movsb
push
fcomi
push
stos
pop
bound
std
jle
inc
inc
ds
cltd
pop
rolb
sub
enter
sbb
shll
mov
pop
pop
in
cwtl
pop
pushf
push
movsl
adc
sti
rorl
daa
push
push
sbb
or
daa
into
xlat
xlat
inc
jp
lcall
cwtl
and
cmp
sub
data16
icebp
dec
nop
arpl
and
out
push
inc
jae
xchg
mov
loope
adc
imul
sub
push
push
mov
rcll
lcall
jb
pop
and
sub
inc
xchg
shl
push
push
outsb
pop
adc
movsb
loope
xor
fsts
gs
negl
adc
sub
stos
popa
fsubl
mov
js
mov
jo
push
pop
jp
cvtps2pi
xchg
and
cmp
lock
arpl
mov
dec
mov
addl
addl
aaa
cltd
mov
daa
sub
dec
inc
pop
fnstenv
push
test
orl
test
mov
flds
mov
movd
fcmovbe
jle
sbb
lret
dec
xchg
loop
sbb
test
and
mov
mov
popf
iret
popf
mul
push
pop
ds
fisttpl
mov
popa
sub
cs
mov
mov
pop
faddl
sub
sub
cmp
jnp
bound
outsb
imul
int
and
mull
outsb
push
aaa
rolb
aas
cmp
mov
mov
cltd
ret
std
rol
lods
pusha
test
mov
lcall
repz
in
scas
jno
push
cli
fcompl
dec
mov
test
mov
insb
dec
mov
aas
inc
add
insb
ss
arpl
fwait
shll
sbb
or
mov
fs
jae
loop
lods
mov
pop
mov
and
inc
and
test
loop
fs
rorb
adc
outsl
cmc
stos
push
icebp
sbb
inc
ret
movsl
sbb
and
mov
add
inc
jo
movsb
lea
pop
inc
call
loop
aaa
repnz
mov
xchg
addb
jno
mov
push
and
jl
lret
dec
stos
inc
ds
xor
mov
or
mov
mov
leave
push
testb
add
mov
jg
outsl
xor
cmpb
mov
inc
dec
add
in
adcb
xor
pop
out
fbld
mov
xor
into
outsl
scas
inc
pop
in
pop
aas
in
imul
repz
dec
xor
xor
sub
or
fs
arpl
or
xchg
pop
jg
ror
stos
jle
stos
push
mov
cmp
loopne
inc
pop
pop
bound
pop
addr16
and
push
pop
fwait
les
std
negl
sub
or
inc
test
sbb
sti
stos
loope
mov
lds
in
mov
inc
les
dec
dec
jge
into
or
adc
fcomi
add
mov
inc
ror
sbb
cmp
add
and
inc
test
mov
int3
loope
aaa
mov
ja
jb
push
loope
sub
pop
sti
repnz
pop
movsl
dec
out
add
and
mov
cmp
adc
and
mov
pop
push
out
mov
addr16
sub
loopne
lret
dec
jg
cltd
dec
ss
mov
xchg
imul
sbb
or
idivb
lods
jg
adc
out
or
and
test
push
mov
mov
in
stos
lea
movsl
je
insl
fldlg2
mov
in
pusha
test
inc
cmp
pop
push
dec
orb
add
outsl
mov
bound
cmpsb
xchg
lods
out
insb
jmp
add
rcll
xchg
and
dec
into
cltd
movsb
mov
adc
push
pop
les
jmp
test
pop
mov
add
inc
mov
and
and
aam
idivb
cmp
scas
cmp
lea
push
aaa
or
xchg
sub
clc
jge
mov
lds
mov
int3
inc
or
xor
pop
adc
jbe
fwait
mov
aad
sbb
pop
xchg
mov
push
lea
cmp
sub
addr16
bound
mov
insl
push
pusha
aaa
jno
cmp
adc
pop
sbb
inc
add
mov
lods
dec
jle
aaa
mov
nop
test
in
xlat
dec
mov
cmp
pop
sbb
jne
push
fiaddl
stc
loope
sbb
jo
loope
cmp
frstpm(287
aaa
dec
mov
pop
mov
and
xchg
testb
adc
dec
leave
lds
call
js
mov
jno
push
enter
mov
vcvtdq2ps
sti
xchg
add
pop
insb
mov
adc
daa
jb
fistps
adc
je
pop
into
mov
fwait
push
or
stos
seto
or
sysret
adc
or
call
mov
push
loope
push
dec
pop
xor
sbb
mov
fmuls
and
aaa
cs
or
xchg
sub
scas
jno
int3
test
mov
or
in
mov
scas
aaa
jb
lcall
movsb
cmp
or
in
scas
mov
push
std
jb
cmp
dec
pop
mov
js
dec
xchg
sub
sti
jecxz
sub
fstps
sub
dec
enter
pop
mov
cmc
push
sar
movsl
jb
inc
int
xor
std
lret
adc
movsb
mov
cmp
lea
ficoms
lret
xor
dec
xchg
inc
sbb
cmp
ljmp
lea
inc
sbb
and
xchg
adc
dec
xchg
gs
pop
and
adc
mov
pop
sub
pop
inc
dec
outsb
xor
scas
iret
lcall
push
xor
ss
dec
mov
mov
movsl
call
mov
mov
imul
push
rcrb
pop
xor
faddp
sbb
das
jmp
mov
pop
imul
shlb
push
push
aaa
push
dec
xor
outsl
cmp
pop
loope
nop
jb
xor
lret
in
popf
xchg
out
inc
sub
jne
cmpsb
dec
aaa
outsb
rcrb
iret
inc
aam
jae
movsb
inc
push
icebp
jmp
outsb
aaa
test
iret
loope
dec
mov
add
dec
inc
lret
out
repnz
mov
test
adc
or
dec
sub
scas
inc
pop
dec
pop
js
xor
mull
out
inc
add
cli
divl
cmp
sbb
mov
sbb
int3
addr16
jle
out
movsl
inc
xchg
push
lret
shl
mov
ljmp
jle
lahf
dec
leave
lcall
nop
bound
xlat
jge
bound
je
out
pop
sahf
mov
push
jae
out
xor
fscale
fimull
fnstcw
cltd
arpl
fs
cmp
lcall
cmp
push
aaa
xchg
jbe
movsb
mov
andb
jnp
mov
cmp
xor
cs
inc
ja
into
adcl
ret
sub
lock
or
enter
scas
fbstp
js
lock
fisubs
fwait
dec
addr16
pusha
inc
call
loopne
xor
mov
int
cmp
push
pop
dec
push
inc
dec
fwait
mov
cmp
cmpsl
or
dec
mov
aaa
inc
jg
sub
jmp
inc
and
sbb
dec
aam
cld
shl
mov
mov
mov
fiaddl
jle
pop
cmp
cli
and
dec
aas
xor
mov
mov
popf
push
pop
xchg
cmp
jae
jg
jp
es
mov
mov
sbb
js
sub
aaa
test
mov
pop
mov
and
xchg
sti
repnz
sub
push
adc
outsb
pushf
sbb
push
ret
cmpsb
insb
cld
loope
add
jp
int3
repnz
jecxz
jp
sahf
jle
push
repz
push
in
cmpsw
adc
nop
daa
push
loope
sbb
je
jecxz
mov
push
clc
push
mov
sbbl
dec
js
fwait
mov
aas
dec
int
push
les
insl
enter
dec
fs
sbb
jp
and
push
push
orb
xor
mov
lcall
cmp
jp
aaa
ja
inc
lock
ss
popa
fnsave
add
xchg
lcall
or
mov
loop
xchg
mov
or
ret
movsl
enter
cs
mov
sarl
dec
inc
lcallw
imulb
adc
mov
arpl
push
sbb
sarl
jecxz
cmc
mov
push
ljmp
cwtl
inc
test
mov
ret
ja
in
sub
pop
lahf
sub
xlat
subb
inc
sub
mov
in
adc
or
add
mov
pop
mov
mov
dec
movsl
pusha
mov
xor
xor
mov
inc
and
and
and
fisubrs
mov
inc
mov
outsb
add
mov
xchg
clc
rcl
enter
ss
loope
push
xchg
cmp
pop
ss
mov
movsb
std
sbb
cmp
mov
pop
jge
filds
stos
adc
test
test
int
fldenv
outsb
std
std
repz
lock
shll
arpl
mov
sarl
adc
int
pop
fidivs
add
hlt
sarl
int3
sbb
jbe
pop
lds
mov
jg
aaa
or
push
stc
cmp
sbbb
mov
push
insb
ja
add
les
sbb
imul
out
inc
sbb
dec
xor
loopne
add
ss
daa
mov
mov
push
mov
icebp
scas
jbe
ds
xchg
loopne
push
and
inc
pop
sub
sub
add
lock
sub
mov
pop
insl
and
data16
pop
xor
jl
cmp
ret
cwtl
pushf
fadds
js
mov
cld
sahf
cwtl
ljmp
ss
xor
cmp
rcl
dec
icebp
cmp
arpl
ret
inc
loope
xchg
js
sub
jnp
pop
icebp
bound
xchg
push
in
mov
dec
cmp
dec
and
repnz
cmp
hlt
jne
in
fidivl
pop
fistl
mov
dec
pop
adc
sub
xchg
pop
lret
mov
lea
push
loope
fbstp
aam
stc
subl
enter
sub
jg
nop
aam
in
fnstsw
aaa
dec
xor
stos
lods
ja
sahf
pop
popf
sbb
lahf
sbb
add
rcrb
loope
cwtl
mov
cmpsb
cmp
icebp
inc
jno
sahf
cmc
jge
cmp
cmp
sub
inc
aas
jp
aaa
push
rolb
pop
xor
fsubl
pushf
pop
cmp
fbstp
popf
pop
mov
repz
add
pop
call
loope
xchg
pop
sub
jne
add
mov
fiadds
pop
and
cmp
ret
cwtl
pop
sbb
or
and
fisttpl
mov
adc
inc
inc
or
sahf
aad
jb
leave
fs
dec
pop
dec
add
or
jbe
pop
pop
mov
jb
or
idiv
jno
lahf
sbb
xchg
jecxz
pop
outsl
rorl
cli
mov
sbb
insb
ret
jp
aaa
inc
test
push
fnsave
pop
inc
shl
cmp
mov
jl
cltd
push
popf
out
lds
jp
fnstcw
adc
pop
adc
iret
xor
jno
pop
movsb
push
sbb
and
repnz
push
pushf
sbb
jb
rorb
dec
and
in
xor
outsl
int3
inc
in
pushf
cmc
mov
push
pop
leave
cmp
repz
sub
out
cmp
lock
push
dec
mov
dec
adc
in
push
insb
into
dec
clc
lea
pop
es
xchg
fisttpl
sbb
enter
dec
pop
mov
cmpsb
rcrb
pop
enter
testb
cmp
pop
or
hlt
push
and
fnsave
or
cmp
cmc
rcll
xchg
mov
jb
imul
xorb
pop
lock
lods
xor
jge
mov
xorl
and
fcoml
aam
add
jae
clc
add
mov
fiaddl
sbb
mov
enter
scas
add
xchg
cld
dec
hlt
sbb
cmp
or
mov
inc
sarl
fstl
ss
adc
mov
inc
outsb
mov
xchg
pop
sbb
pop
sbb
and
cltd
loope
aaa
or
sub
mov
out
mov
mov
dec
pusha
push
in
jp
test
xchg
jmp
sbb
hlt
mov
roll
cmp
addl
and
jb
ret
sbbb
mov
pop
call
subl
imul
cmp
dec
xchg
mov
subb
xchg
mov
rcrb
jnp
or
lea
add
xchg
push
test
into
mov
jle
mov
cs
sub
das
sub
insb
call
mov
cmp
xor
pop
mov
sub
jb
xchg
add
jb
iret
jl
loope
mov
xor
pop
sti
aaa
pop
mov
xor
lods
mov
bound
arpl
mov
hlt
lret
sbb
mov
jl
jno
jg
pop
nop
push
pop
xchg
leave
jl
rclb
xlat
cmp
push
dec
add
jl
inc
push
xlat
jns
stc
mov
insl
fistpl
jnp
mov
notl
inc
add
and
xchg
adc
pusha
popf
shrb
nop
cltd
cs
sarb
adc
mov
aam
test
jmp
rcrb
pop
sti
movsb
addr16
sub
lods
jbe
pop
jbe
sub
aas
fcmovne
stos
cwtl
jge
scas
adc
and
or
jo
cltd
insl
je
movsl
xor
fcompl
lods
cmp
test
repnz
imul
jmp
das
in
pushf
mov
cs
divps
outsl
jb
imul
push
and
sbb
cld
hlt
lock
movsb
imul
pop
xchg
push
lahf
pop
jno
aaa
dec
jb
ja
push
push
jae
sbb
repz
pop
cmpsb
pop
scas
in
sarb
jge
jmp
gs
add
das
adc
inc
popf
xor
pop
sbb
daa
cmpsb
cmp
aaa
cmc
pop
jg
mov
mov
fnsave
sbb
out
js
imul
dec
lea
aad
rorb
sub
cli
xchg
add
lcall
mov
cmpsb
out
push
aam
testb
cmp
out
fistpl
out
dec
mov
cs
mov
push
add
rclb
pop
mov
jle
mov
shll
icebp
push
mov
xorb
push
pop
mov
push
lea
fsubrl
call
stc
lods
inc
stos
out
sbb
cmpsb
mov
outsl
cmp
repz
call
sub
jmp
out
pop
aaa
movsb
ficoms
cmp
test
bound
jno
insb
or
cmp
or
enter
arpl
sub
call
popa
repz
dec
jp
and
push
xchg
xor
loopne
add
test
jle
push
push
ja
test
scas
cld
scas
jmp
cmp
adc
cld
jmp
jbe
inc
jne
rcrl
pop
loope
xor
sub
orl
sbb
inc
gs
movb
inc
mov
inc
aas
xor
out
sarb
xor
cmp
mov
pusha
fcompl
xchg
sbb
sub
filds
stos
loope
wbinvd
lea
cmp
dec
add
and
mov
push
out
pop
aaa
outsb
mov
test
cmc
loope
jb
arpl
in
outsb
inc
inc
enter
push
scas
test
in
inc
push
enter
add
mov
push
mov
sahf
negb
aam
test
xorl
add
cld
outsb
xchg
cmp
jmp
sub
arpl
lock
sbb
xchg
push
xchg
adc
sub
add
mov
mov
xor
inc
sub
incb
inc
inc
mov
lret
out
mov
xchg
sub
mov
sbb
out
and
repz
rcl
push
jle
arpl
popa
jmp
dec
sub
mov
das
cmp
jno
push
xchg
mov
lcall
cmp
push
inc
daa
scas
push
pop
jp
add
push
leave
and
or
mov
push
pop
sub
or
mov
sub
gs
fnstsw
xchg
add
mov
cmpb
mov
xor
push
outsb
std
pop
mov
stos
inc
xchg
aas
xor
lock
push
push
pop
enter
add
clc
popf
insl
push
jnp
int
das
pop
loop
push
loope
xchg
stos
in
cmp
or
cmp
pop
cmpsl
jg
mov
in
aaa
pop
pop
inc
dec
arpl
push
scas
jb
mov
jecxz
pop
fmull
mov
fldl
xchg
imul
out
pmaxub
dec
in
scas
std
arpl
add
push
adc
pop
leave
in
inc
pusha
mov
adc
imul
xor
mov
in
stc
add
push
jge
jle
aaa
pop
imul
test
jbe
aas
mov
xlat
sbb
sbb
paddusb
rcrl
and
outsb
sti
pop
mov
mov
inc
nop
sahf
pop
fnstsw
cmpsb
sub
xchg
es
push
out
lds
xor
test
repnz
push
cmc
fnstsw
insl
gs
push
mov
popw
jle
push
lock
push
cs
js
test
sbb
gs
pop
insl
cltd
cwtl
je
mov
fsubrs
xor
xchg
mov
mov
and
push
jle
cmpsb
out
arpl
jecxz
pop
pop
in
bound
shl
xchg
inc
mov
pop
in
inc
and
clc
lds
addps
loope
push
aaa
push
int
xor
je
cmp
in
xorb
popa
push
nop
sbb
dec
dec
out
jae
and
mov
cmp
xchg
jle
pusha
out
sbb
enter
jne
xor
mov
xor
pop
pop
jecxz
inc
test
xor
jle
pop
push
xor
sub
pusha
rcrl
iret
icebp
and
xchg
sbb
jle
jno
jp
inc
xor
sbb
sub
out
jnp
jno
repnz
rcr
das
mov
incb
pop
cld
xchg
or
adc
inc
shrb
minps
pop
mov
mov
xor
mov
xorb
daa
xlat
inc
mov
cmp
js
ljmp
iret
xor
mov
adc
inc
and
sbb
repnz
mov
lea
adc
sub
addr16
or
cli
shrl
and
sbb
aam
pop
jle
adc
pavgb
pop
cld
fld1
xorl
add
enter
xchg
rorl
mov
stc
cmc
sbb
mov
cmpsl
cmp
pop
sbb
add
pop
xchg
sarl
arpl
jb
lods
nop
std
jle
outsl
std
push
lea
lcall
lret
scas
scas
jne
stos
dec
cmp
outsl
cmpsl
inc
icebp
mov
leave
or
and
mov
mov
aas
mov
mov
mov
ds
cwtl
inc
adc
cmp
stos
jnp
in
fdivr
mov
dec
in
cmp
cmp
sub
pop
cmpsb
jl
push
pop
dec
xor
adc
xlat
imull
add
sbb
mov
sahf
movsb
mov
xor
sbb
and
loope
ret
xor
xor
adc
mov
stos
fdivr
in
jle
xor
std
movsl
mov
mov
stc
popa
cmp
stc
in
jae
jmp
roll
mov
pop
inc
mov
or
inc
lahf
mov
cmp
xchg
aaa
jp
xchg
pop
stc
xlat
sub
cmp
ds
fadds
inc
cmpsb
cltd
push
arpl
mov
jmp
in
ss
dec
stos
in
lcall
cmp
inc
cli
sub
xor
pop
shrd
loop
arpl
sarl
pop
fstpl
sbb
mov
sahf
das
push
leave
cmp
adc
aaa
mov
faddl
jge
xchg
pushf
fidivs
mov
out
pop
lods
push
and
xor
inc
lea
sbb
test
inc
fistl
or
adc
pop
and
jb
sbb
fildll
int
xlat
inc
inc
gs
jp
mov
pop
movsl
mov
dec
fucom
sub
jge
cmc
mov
xlat
das
jecxz
mov
test
adc
lds
mov
dec
inc
dec
fucom
pushl
pop
sub
mov
push
enter
adc
and
sti
pusha
popf
sbb
add
inc
aaa
cs
jo
insl
arpl
sub
cmpsl
cmp
inc
out
jle
push
jg
adc
push
push
jge
xlat
jnp
pop
loope
dec
lret
jbe
cmpsb
pushf
add
stos
sti
sahf
repnz
mov
push
je
dec
mov
jno
mov
nop
dec
lret
call
push
outsb
je
sbb
xchg
dec
push
jb
or
insb
sub
mov
sti
mov
mov
jo
pop
or
pop
fistl
cltd
stc
pushw
jns
push
inc
ret
dec
in
aaa
adc
add
add
imul
fbld
das
sbb
sbb
lea
inc
push
mov
push
mov
mov
xchg
mov
inc
call
add
dec
jge
imul
push
inc
and
dec
repz
inc
xlat
aaa
sbb
push
jmp
fwait
int
jo
or
jne
ljmp
push
seta
xchg
jae
iret
leave
xchg
sbb
and
lret
subb
xor
addr16
cmp
aas
jae
cmpsb
sbb
call
aas
inc
add
inc
pop
jle
pushf
in
fwait
scas
insb
or
and
outsl
push
test
inc
cmp
fsubrs
adc
add
sub
cli
jge
push
inc
jle
jecxz
rcrb
dec
imul
adc
xchg
cld
lods
push
outsb
and
fsubrs
adc
ss
fdivl
pop
sbbb
test
jmp
add
stc
pop
aaa
pop
scas
add
inc
lcall
cmpsb
out
cmp
dec
lcall
ffree
cltd
mov
in
pop
ss
mov
in
jbe
xchg
subb
insl
sbb
cmpsl
mov
js
jae
mov
adc
and
insb
shlb
in
push
faddl
jne
popf
movsl
mov
inc
sbb
lods
sbb
movsl
and
sbb
std
push
cmpsb
inc
add
je
ljmp
stc
add
aaa
out
jo
add
adc
dec
pop
dec
push
inc
mov
push
cs
fldt
dec
cwtl
jge
popf
lret
es
push
enter
xchg
or
jge
sbb
mov
jge
xchg
cmp
dec
push
sub
std
sahf
sub
insb
jbe
and
mov
xchg
add
mov
adc
inc
mov
fisubrs
xchg
mov
mov
inc
inc
and
arpl
adc
repnz
and
push
dec
lea
cmp
cmp
jnp
mov
aaa
fs
bound
mov
mov
enter
pop
sub
test
pushl
push
nop
fsts
pop
movsb
imulb
cld
ret
xchg
push
and
ja
mov
call
lcall
adcb
mov
dec
inc
das
jp
test
jb
adc
mov
test
mov
cli
pop
lods
insl
test
test
cltd
dec
int3
and
andb
shlb
shll
jbe
mov
adc
adc
aam
adc
cli
scas
mov
jo
inc
mov
fwait
rcr
lcall
mov
popf
xchg
iret
jl,pt
push
fwait
lahf
lods
in
mov
push
mov
sbb
mov
scas
rcrl
andb
ja
add
ret
adc
pop
sub
aas
pop
cwtl
jo
xor
jmp
mov
out
cwtl
sub
popa
and
push
divb
xchg
call
pop
in
xchg
fwait
jb
das
lret
adc
inc
push
repnz
fsubrs
cltd
lcall
aaa
lret
xor
rcrl
repz
jbe
sbb
shll
inc
aas
cmc
add
jl
xchg
jbe
popf
in
movsb
fimull
lahf
mov
movsl
aaa
rorl
or
ret
and
das
inc
jne
in
vpshuflw
xchg
fbstp
lahf
jbe
les
xor
push
and
and
mov
pop
out
or
pop
fdivrs
aas
mov
sbb
dec
pop
cmp
lock
adcb
cmpl
mov
mov
inc
dec
sbb
xor
scas
pop
ret
in
xchg
push
fstpt
filds
and
cmp
mov
lcall
ret
dec
in
sub
pop
loope
ret
mov
jl
hlt
popf
push
bound
mov
daa
adc
add
inc
or
jmp
ja
jle
cmp
rclb
aas
inc
or
mov
rorb
out
mov
add
jle
dec
icebp
lret
pop
jmp
int
sti
mov
pop
dec
add
xor
inc
les
pop
cld
rclb
mov
mov
pop
sub
mov
fists
cwtl
insl
push
jns
bound
cmp
xor
sar
mov
jp
ror
adc
push
popa
jmp
cmp
mov
cmp
and
je
jns
add
jnp
fstl
test
lcall
jb
cmc
scas
xchg
mov
aam
imul
pop
sub
mov
aaa
jecxz
or
mov
mov
add
inc
pop
and
ffree
push
rcr
mov
movsl
jae
lea
cmp
xor
ret
or
iret
popf
js
push
ljmp
outsb
sbb
push
inc
mov
cmp
imul
out
sub
test
sub
std
leave
out
std
xor
cmp
enter
repnz
fldcw
pop
mov
sahf
xchg
cmpsl
xor
idiv
jbe
jns
loopne
inc
xor
imul
sbb
fldl
adc
arpl
add
mov
addr16
int3
and
xchg
mov
test
cmpsb
roll
cmpsl
and
cmpsl
jmp
xchg
sti
adc
sub
arpl
loopne
pop
dec
daa
push
aaa
mov
rcrb
dec
hlt
inc
test
ror
test
push
insl
sbb
rorl
mov
std
dec
or
rorb
and
ret
fcompl
dec
jmp
jo
lahf
jp
push
inc
ljmp
jns
mov
xchg
push
inc
ret
popa
inc
ret
in
outsl
add
pusha
mov
lea
jl
cmp
sub
inc
stc
jbe
imul
mov
pop
pop
sbb
lret
bound
sub
and
jb
jl
in
jbe
mov
sbb
sub
test
movsl
fisubs
jb
dec
dec
jg
mov
sbb
lea
in
test
call
shlb
loope
inc
lret
xor
es
addl
cli
and
cmpsb
or
js
xchg
mov
aam
ret
enter
pop
dec
fbstp
outsb
fdivr
mov
dec
test
stos
loopne
mov
std
les
out
stos
fldt
out
add
ss
and
lcall
bound
pop
popf
aaa
mov
mov
arpl
push
add
sbb
sbb
cmp
stc
mov
inc
mov
add
ds
gs
xor
std
clc
into
outsb
sahf
pop
setae
js
cmp
fdiv
jg
xor
pop
dec
scas
in
dec
fists
lods
jl
push
ret
sahf
jnp
or
inc
mov
pop
cmpsl
loope
mov
lahf
inc
mov
push
sub
fiadds
add
bound
ljmp
mov
loopne
divl
lret
imul
mov
addr16
sub
or
lret
xchg
shlb
pop
imull
rclb
or
lret
inc
mov
insl
sarl
inc
push
xchg
cmp
pop
mov
push
aam
outsb
mov
mov
mov
je
repz
jl
mov
loopne
pop
loopne
or
pop
in
rcll
addl
mov
jnp
sbb
mov
jo
subl
cli
dec
cmp
arpl
loope
imul
stos
cmpsb
sub
push
sti
fmull
sarl
jbe
mov
pop
popf
mov
inc
aaa
dec
mov
loope
sbb
ljmp
or
cmpb
push
out
int
jns
jge
sbb
ret
sbb
cltd
adc
xchg
pushf
pop
xlat
bound
in
inc
cmc
add
int3
cmp
dec
pop
xchg
xor
repnz
sbb
adc
cmp
js
jb
mov
int
gs
movaps
sar
roll
pop
cmp
jecxz
adc
fnstenv
pop
mov
insl
inc
movsl
clc
jg
int
dec
and
jmp
out
imul
scas
insb
add
ds
loopne
test
popa
std
xor
mov
lds
in
push
aad
ret
push
xor
icebp
adc
popf
dec
ret
das
mov
pop
xchg
mov
mov
popa
sbb
sbb
nop
push
in
adc
repz
jge
push
outsb
mov
adc
sti
mov
mov
pop
out
inc
daa
lods
repnz
jns
xor
xchg
mov
sbb
or
sub
mov
pop
sbb
sub
push
mov
dec
cmp
movsb
lea
push
fwait
mov
ds
dec
lea
fdivl
outsb
cmp
mov
ljmp
pop
mov
jecxz
lret
inc
dec
fcomps
jne
hlt
jne
push
sub
lea
push
mul
sub
xchg
pop
je
lods
lods
ds
jp
jo
bound
sbb
pop
mov
inc
out
das
out
repnz
test
lods
das
jl
push
mov
mov
pop
cmp
inc
mov
test
add
mov
mov
jo
mov
inc
repnz
cmp
fcomps
xchg
fcoms
pop
stc
jmp
aam
push
test
inc
sti
sbb
cmc
sbb
scas
jbe
call
dec
sub
add
cmp
repz
xchg
cmp
pop
sub
jecxz
nop
or
pop
fbstp
data16
mov
test
jmp
sub
cmp
test
ret
imul
cmp
lcall
cld
aaa
ds
mov
mov
movsb
aaa
std
sub
push
push
cvtps2pd
and
stc
scas
cltd
in
sar
outsb
iret
aaa
and
data16
cld
std
je
imul
pop
dec
int
sub
popf
and
mov
dec
jle
add
push
pop
fwait
mov
cmp
ficoms
mov
dec
jnp
jle
jmp
xor
jb
mov
out
ss
roll
cmpsb
mov
xchg
fwait
push
stos
test
sti
mov
into
divl
push
ds
mov
iret
jo
dec
jp
push
pop
xor
or
movsb
arpl
cltd
jb
insl
inc
sbb
mov
xchg
inc
inc
add
jmp
cmp
outsl
fnstsw
mov
pop
or
es
loope
sahf
arpl
push
ss
repz
lds
cs
inc
pop
xchg
add
push
jmp
adc
fs
xchg
jecxz
insb
test
out
mov
or
jb
mov
push
add
mov
int
aad
pusha
mov
loop
scas
xchg
rolb
roll
pusha
out
and
pop
pcmpgtb
bnd
notl
inc
add
mov
pop
repz
aaa
jecxz
rolb
imul
stc
sub
push
lea
ljmp
icebp
loopne
xor
mov
lods
or
subb
rcll
insb
cltd
int3
cltd
cmpsb
daa
lcall
loop
in
js
aaa
dec
dec
outsb
mov
pushf
pop
pop
pop
cmpb
mov
test
fldt
jmp
jle
dec
and
out
and
call
push
movsl
pop
sarb
dec
inc
fildl
iret
ss
jb
cmc
dec
mov
iret
jno
jne
inc
pusha
pmulhuw
or
jp
mov
add
scas
dec
xchg
pop
and
jbe
loope
es
sbb
cmp
ds
adc
fnstcw
inc
fcomps
scas
mov
xchg
xchg
dec
test
push
lret
nop
pop
scas
cmc
loope
sub
or
in
repnz
xlat
dec
push
dec
imul
mov
int
pop
hlt
idivl
les
dec
insb
aam
mul
xorl
xorb
fcmovnbe
aad
icebp
in
repz
pop
daa
jmp
and
bound
mov
pop
add
nop
in
mov
push
icebp
add
lret
xchg
cld
fs
xchg
data16
movsl
dec
cmc
popa
xlat
sbb
jne
mov
pop
lcall
loop
jmp
add
rcrb
mov
adc
aaa
push
mov
mov
jno
cmp
cmpsl
push
ljmp
into
push
cmpsb
xorl
mov
ret
sbb
and
aaa
out
andl
pop
pop
mov
xchg
outsl
sbb
dec
outsb
icebp
pop
aaa
mov
loope
in
adc
leave
push
jo
mov
or
movsl
fs
out
lret
fucom
aaa
es
ret
aas
inc
jb
and
xor
loopne
mov
aad
aam
xchg
or
lods
not
lret
inc
sbb
ret
out
out
fsubs
push
xchg
cli
sbb
xlat
push
fisttpll
cmp
data16
adc
jne
icebp
imul
js
and
sbb
sbb
xchg
sbb
push
imul
dec
pop
push
loope
push
fsts
xlat
addr16
pop
mov
and
dec
sub
cmpsl
xchg
ret
sub
scas
cmpsl
or
pop
add
push
ret
fwait
push
push
mov
ror
add
dec
xor
cmp
sbb
nop
adc
in
jnp
outsl
sbb
in
insb
push
or
xchg
pop
jae
pop
xchg
cwtl
ret
jle
or
push
push
fwait
stos
arpl
mov
pop
pop
and
jle
loope
inc
inc
dec
xlat
stc
cltd
adc
dec
cmp
sbb
scas
or
jle
loop
sbbl
push
pop
inc
test
pop
sbb
xchg
aaa
std
int3
mov
pusha
sbb
push
dec
push
or
repnz
mov
scas
sbb
nop
inc
inc
pop
xchg
les
adc
add
iret
sub
popa
repz
hlt
jp
cld
rcrb
adc
enter
subb
xchg
mov
int
dec
outsb
cltd
js
ja
xchg
repz
jns
dec
repnz
ss
filds
or
sbb
int3
outsl
pop
jbe
push
push
arpl
adc
sub
aaa
ss
cmp
xor
test
push
sub
mov
sarb
loop
xchg
rorb
int
aaa
mov
mov
ds
push
loop
sbb
sub
mov
aaa
adc
push
cmpb
pushf
xor
fcompl
jno
xchg
cli
push
pop
pop
push
inc
imul
ljmp
and
xchg
dec
pop
or
dec
xchg
out
sub
push
mov
nop
lcall
jecxz
cwtl
aaa
pop
divl
dec
jle
cwtl
xor
mov
sahf
cmp
mov
cmp
je
mov
call
data16
sub
in
and
loope
imul
stos
popf
dec
imul
sub
out
enter
sti
popa
arpl
lea
inc
push
je
and
movsl
ds
mov
jb
dec
fdivs
fcompl
fisubrs
outsb
inc
out
xchg
cli
dec
lds
push
ss
mov
pop
push
pop
push
push
sbb
ss
adc
lahf
mov
stos
xchg
dec
mov
ja
clc
addl
outsl
xchg
xor
pop
aam
test
jp
out
iret
xlat
xchg
les
repz
lret
pop
xor
xchg
cmp
sbbb
push
jp
jg
sub
dec
fstp
fcomps
js
add
jp
jle
aaa
subl
subl
lret
fisttpl
test
cmp
xor
inc
cld
aaa
ret
or
out
or
rol
or
sbb
sti
xor
test
and
push
pop
lcall
movsl
cltd
xchg
jge
and
jb
repz
and
repz
and
and
jg
mov
push
add
fstpl
xchg
js
push
out
xlat
inc
inc
bound
aaa
stos
loopne
test
fmull
push
jmp
repz
push
leave
insb
stc
fstps
sbb
add
int3
inc
pushf
enter
and
ja
les
in
jne
out
xor
sbb
lods
mov
mov
or
xor
repnz
or
shlb
adc
jecxz
add
cld
rcrb
add
dec
lock
pop
int
mov
in
pop
jmp
jbe
jbe
jmp
pop
cs
jbe
rcrl
lcall
jb
jo
cmp
push
pushf
fxch
cld
inc
jle
shrb
ficomps
scas
pop
pop
repnz
or
aaa
xchg
pop
xchg
mov
xchg
loopne
ret
push
and
stc
mov
mov
test
jp
push
enter
arpl
xchg
pop
fimuls
ds
jg
repz
adc
jnp
rolb
xchg
jecxz
das
add
jle
sahf
or
clc
jle
cli
sub
in
in
mov
mov
test
mov
pop
jp
dec
inc
pop
sbb
mov
lcall
pop
in
jle
imul
lahf
ret
dec
mov
int
scas
nop
mov
movsl
inc
xchg
dec
call
adc
push
and
jecxz
js
out
pop
dec
mov
add
lods
lds
inc
aaa
xor
push
xchg
xor
rolb
jns
xchg
in
icebp
and
fs
enter
push
sbb
stc
sbb
jo
push
inc
fst
dec
lods
xor
or
mov
push
and
cld
pusha
mov
or
add
inc
enter
jl
jne
inc
aas
mov
mov
cli
scas
push
pop
scas
or
add
push
push
sbb
mov
xchg
cmp
xor
rolb
test
pop
int3
mov
sahf
mov
mov
pop
add
stos
dec
add
shrl
and
je
sar
sub
das
fisttps
add
jle
lods
xchg
aam
addr16
insl
ljmp
fwait
cwtl
sbb
aaa
mov
jmp
mov
adc
outsb
mov
stos
push
pop
and
lret
js
adc
fwait
mov
push
sub
addl
test
pop
mov
aaa
dec
dec
cmpsl
mov
fsubrs
pop
mov
enter
sahf
sbbb
pop
mov
sbb
and
xchg
ret
xor
sbb
mov
xor
insb
pop
sbb
pop
ds
xor
popa
push
loope
mov
outsb
sbb
jno
add
jp
xchg
ja
lahf
push
mov
xor
pop
pop
dec
xchg
loopne
add
pushf
inc
push
xor
sbb
pusha
ds
mov
int3
sbb
xor
imul
xor
aaa
lods
inc
pusha
outsl
leave
test
cmp
scas
sbb
rorb
and
clc
dec
jl
gs
mov
inc
lods
cltd
mov
in
jl
or
aam
pop
dec
mov
push
jle
flds
xor
lret
and
fucomp
jle
adc
sub
fs
cmp
mov
jno
in
adc
jns
mov
clc
jmp
push
jo
mov
or
push
aaa
shlb
pop
or
sbb
ffree
dec
fcomps
repz
mov
inc
sub
gs
outsl
inc
inc
and
test
fsub
in
cmpsb
mov
and
in
mov
loop
jb
cmp
xor
daa
add
ljmp
push
fcompl
shll
out
addr16
dec
mov
popa
mov
jle
jno
fiadds
lret
pop
xchg
and
dec
mov
pop
fscale
cltd
mov
popa
xor
inc
cmc
xor
push
xchg
push
insl
xor
fwait
mov
mov
adc
cmp
and
cmpsb
xchg
jmp
push
repnz
cs
shll
and
and
adc
shl
push
in
pop
scas
or
not
popf
call
jp
and
pop
mov
xlat
cmpsl
sub
dec
imul
jecxz
mov
pop
cli
push
jb
fdivs
xchg
adcl
cwtl
jle
cmp
mov
stos
test
outsb
sbb
xor
pop
inc
xchg
pop
sub
sbb
fs
ja
or
sub
insb
inc
test
je
pop
push
mov
mov
subl
xlat
das
insb
pop
jno
aad
outsb
cmp
add
imul
icebp
test
pop
sbb
or
subb
stc
mov
dec
sahf
and
mov
dec
ss
jmp
ret
mov
in
and
push
out
ficomps
and
imul
mov
inc
sbb
inc
test
push
xor
jnp
pop
andl
fbld
cmpsb
divl
xchg
pop
inc
gs
cli
aaa
pop
xor
sub
adc
loopnew
inc
je
jbe
push
es
sahf
sbb
dec
rolb
sub
or
and
adc
jle
out
gs
jae
in
xchg
stc
scas
int
pop
and
cmovg
aaa
bound
loope
sahf
pop
jae
fwait
inc
and
pop
bound
data16
fldcw
mov
cmpsl
lret
pop
test
aaa
shlb
stos
nop
add
andl
and
xchg
loop
pop
inc
sbb
jnp
cwtl
divl
aaa
test
repz
mov
or
stos
scas
xor
mov
mov
sar
fs
push
add
push
or
jge
cmpsl
popa
add
out
jbe
push
jo
pusha
cwtl
xlat
and
jmp
test
aaa
popf
inc
sahf
add
adc
ds
loope
scas
jns
jno
loopne
mov
and
sbb
addb
pop
sub
mov
xlat
out
iret
cmp
mov
mov
lret
addr16
fucom
outsb
rolb
pushf
bound
sti
cmp
aam
out
mov
sub
mov
xchg
bound
sub
mov
jmp
xchg
adc
push
stos
or
jmp
mul
and
xchg
push
sbb
movsl
xor
jp
sbb
xchg
or
jo
push
dec
adc
add
andb
lret
rcrl
loop
ja
mov
jae
aaa
mov
xorb
pop
gs
pop
fwait
mov
aaa
inc
sbb
add
ret
mov
push
sbb
sarb
pop
sub
pop
push
dec
xor
pop
sub
cli
pushf
adc
mov
jne
pop
aaa
or
cmpsl
sarl
jae
in
pusha
xlat
mov
fistl
les
pop
lcall
lods
xchg
mov
aaa
cmp
mov
popa
jecxz
test
xor
ja
jae
inc
jnp
stc
jae
test
das
inc
sub
jle
int3
js
out
sub
and
daa
das
adc
sbbb
in
sub
insb
and
js
lcall
sub
orps
mov
lods
hlt
pop
sub
lcall
cmp
addr16
mov
out
push
gs
clc
scas
fisttps
push
test
repnz
sub
insl
mov
roll
daa
addl
sub
pop
push
arpl
jp
push
movsl
fnstenv
cwtl
filds
dec
and
loope
pop
adc
jg
pop
jp
call
cli
popf
add
enter
lret
cmpsl
or
or
icebp
jle
cmp
mov
jmp
popf
add
ror
mov
in
push
cmp
jb
pop
xchg
jae
jno
push
lret
add
loopne
repz
daa
mov
sbb
cmc
xchg
in
enter
ret
idivl
sbb
in
insb
add
idiv
sti
es
xchg
pop
ret
bnd
add
sbb
test
dec
adcb
scas
bound
mov
int
call
xchg
sub
push
shl
test
dec
push
jecxz
insl
mov
ss
dec
mov
push
fst
int
clc
mov
push
pop
leave
sbb
mov
addb
call
movsl
roll
adc
add
jmp
mov
ret
sbb
and
pushf
jle
in
inc
repz
and
inc
push
out
fcom
ret
mov
mov
jle
jnp
mov
add
repnz
stos
and
rcl
adc
inc
cmp
pop
mov
push
pop
in
and
loope
xor
cmp
mov
cmpsb
loopne
int
mov
ss
push
jecxz
fs
outsl
push
scas
cmp
cmp
addb
data16
mov
inc
out
ret
and
sbbb
pop
jns
mov
inc
dec
je
aaa
mov
pop
xchg
pop
movsb
arpl
pop
dec
andl
push
loope
and
scas
push
jle
sti
dec
pusha
cwtl
inc
sbb
mov
xchg
frndint
pop
pop
ss
ljmp
jne
jo
xchg
mov
jae
aaa
sahf
mov
das
mov
add
pop
ret
sbb
cmp
pop
mov
jb
sub
dec
ficoms
sti
sbb
test
jecxz
orb
repz
sub
nop
or
xchg
and
in
or
and
xchg
jmp
rcrb
das
cmp
jle
or
mov
outsb
cmp
mov
mov
add
mov
daa
mov
aaa
arpl
mov
pop
scas
pop
xor
ds
mov
cmp
mov
adc
and
jno
repz
jl
push
mov
fistl
adc
dec
inc
mov
cmpsl
in
stos
hlt
lods
xchg
lods
clc
pop
mov
in
in
cmpb
push
aaa
cmp
mov
jb
sbb
jl
lahf
adc
jecxz
jno
sub
cmp
mov
mov
push
pop
or
dec
pushf
icebp
mov
xor
outsl
add
xchg
cli
mov
xchg
aad
xchg
cmp
push
sub
cmpsb
enter
jb
push
sbb
jb
jno
inc
sar
pop
dec
data16
mov
je
xchg
lret
mov
rcll
cmpl
and
bound
test
aam
cmp
sbb
mov
push
ss
pop
xchg
push
sub
lds
mov
pusha
jl
fsubs
jb
dec
dec
aad
outsl
push
push
jl
sub
cmp
xor
and
pop
int
and
mov
pop
stos
lahf
decb
fisttpl
repz
rcr
lcall
mov
add
mov
cmp
push
adc
repnz
stos
xor
push
rcl
lret
jle
pushfw
cltd
push
inc
out
outsb
sbb
adc
movhps
jbe
pushl
mov
scas
sub
je
mov
and
and
push
pop
cld
lahf
jp
sbbl
mov
icebp
adc
int
insb
jl
mov
push
sbb
pop
arpl
js
int
inc
jbe
loop
sti
seta
fsubrs
ss
popf
xchg
xchg
cli
call
std
push
adc
xor
insb
pusha
mov
test
pusha
pop
adc
rol
lret
mov
in
sbb
icebp
daa
shlb
dec
jmp
test
sbb
movsl
mov
add
mov
cmp
leave
lock
mov
in
les
in
repz
das
outsl
push
dec
rcll
imul
cmpsb
inc
idivl
adc
xor
mov
pop
insl
popa
stc
sahf
mov
adc
ljmp
and
xchg
lcall
fwait
push
mov
or
mov
add
sti
clc
and
stos
sub
mov
andb
dec
fdivl
in
mov
inc
popa
fdivrl
outsb
xchg
push
or
dec
andl
dec
mov
xchg
and
jle
scas
mov
lods
insl
cmp
and
popa
loop
enter
xchg
jb
pusha
mov
icebp
push
push
int
mov
std
sbb
out
inc
orl
outsl
pushf
sti
outsb
mov
xchg
pop
xchg
jle
nop
dec
test
gs
push
cmp
sbb
push
inc
shlb
popa
insl
std
hlt
inc
xchg
enter
cmp
filds
inc
movsb
pop
in
push
push
fnstsw
cltd
mov
push
pusha
stos
cmp
pop
sub
pop
mov
mov
xlat
push
jle
add
jle
addr16
xor
jo
insl
pop
xchg
clc
push
jle
mov
pop
cld
jge
aaa
js
cmp
movsb
cmp
ret
jl
jno
movsb
sti
rclb
in
xchg
mov
test
cmp
pop
out
mov
pushf
hlt
sarb
roll
jb
mov
jb
outsb
add
rorb
jnp
repz
cld
cmp
sbb
repz
fnstsw
pop
movsb
cmc
popf
jl
sub
add
shll
fpatan
arpl
stos
ljmp
push
aaa
sub
imul
jmp
mov
repnz
jo
fistl
mov
inc
mov
cld
or
mov
std
scas
scas
ljmp
insb
mov
je
and
cmp
mov
xor
mov
pusha
pop
bound
lock
stos
mov
push
enter
mov
sbb
cmp
stos
in
jl
popf
jbe
cmpsb
icebp
pop
pop
sbb
lcall
int3
adc
jg
ret
xor
shlb
daa
sti
stos
scas
inc
pop
sti
dec
fidivs
outsl
push
in
imul
pop
inc
loope
iret
mov
xchg
xchg
cmp
mov
inc
out
dec
add
adc
dec
adc
ss
fsubp
sbb
pop
stc
mov
pop
sbb
orb
out
js
filds
rol
loopne
inc
mov
insl
mov
pop
cmp
jae
std
push
cltd
repz
arpl
sbb
sbb
push
mov
and
popa
sti
lcall
push
push
adc
adc
bound
loopne
push
clc
dec
sub
mov
ret
repnz
fistpl
push
es
je
mov
aas
jbe
mov
sub
inc
popa
push
and
ljmp
xchg
loop
pavgw
and
into
add
nop
lret
loope
cmpsl
ss
pop
adc
mov
mov
rolw
add
int3
jo
cmp
stos
mov
rorl
xor
push
jp
push
or
mov
test
mov
pop
test
lods
stos
jns
pop
dec
pop
pop
cmp
aad
mov
xor
and
dec
mov
cmp
inc
pop
popf
and
loope
clc
mov
push
in
xchg
dec
int3
das
hlt
sbb
fimuls
movsl
cld
adc
aam
dec
lock
popf
shll
jns
mov
mov
inc
mov
std
dec
ljmp
repnz
pop
cli
sub
xor
or
rcll
sbb
jb
fsubl
xor
pop
xchg
fwait
and
add
sub
clc
out
sahf
mov
and
ljmp
push
and
adc
cmp
je
rep
jg
aam
ja
lds
push
sub
jb
fimuls
xchg
cmp
lcall
sti
pop
arpl
pushf
shll
cmp
mov
sub
leave
mov
adc
scas
pop
repz
incl
cmp
hlt
data16
and
mov
shll
xorb
shr
mov
insl
fistl
les
aas
or
adc
sti
outsl
cmp
fisttps
or
test
hlt
pop
mov
pop
mov
das
lahf
pop
aaa
lret
dec
push
movb
bound
call
scas
jge
xchg
cmp
dec
mov
clc
bound
out
cmp
ret
pushf
in
scas
mov
call
in
add
xor
pop
xchg
push
or
mov
pop
cmp
sbb
imul
inc
test
fmul
mov
movsb
decl
jg
adc
aad
mov
daa
jp
or
es
pop
fsts
loopne
sbbb
out
push
cmp
dec
sbb
lods
fisttpll
test
outsb
sbb
cmp
mov
mov
jmp
sub
mov
push
fistpll
cmp
popf
into
jb
aaa
dec
aam
xchg
in
mov
int3
jae
lea
xchg
push
in
fs
and
sub
mov
xchg
inc
inc
push
dec
shll
jno
out
scas
imul
arpl
cltd
mov
pop
sbb
jno
lods
movsb
cmp
call
std
mov
cmp
ss
dec
sbb
push
and
cli
push
mov
fldl
aaa
popf
or
mov
cmc
push
pop
nop
ss
mov
pop
and
jno
in
pushf
arpl
dec
xor
popa
flds
stos
addr16
push
mov
into
pop
xor
inc
mov
dec
sbb
ljmp
lret
inc
inc
dec
rclb
out
ja
in
pop
adc
push
popf
inc
jne
sbb
pop
pusha
repz
or
xchg
fnop
insb
outsb
fists
push
jb
push
xchg
xchg
pop
lods
sarl
outsb
xor
push
aaa
adc
decb
cmp
xor
push
data16
stos
dec
lcall
pop
daa
sub
jmp
mov
push
sub
addr16
loopne
mov
pop
jge
cmp
adc
dec
xor
in
in
push
cmp
add
xchg
xchg
push
push
jl
cmp
pop
outsb
xchg
jns
sbb
sti
dec
lahf
aad
stos
or
fcoml
into
aaa
xchg
jmp
xor
loope
mov
mov
iret
push
sti
inc
je
rorb
outsb
cmp
cwtl
push
scas
xchg
scas
xor
pop
fsubrs
lock
lock
fsubrl
cmpsl
stos
decb
xchg
rcrl
ret
icebp
stos
mov
sub
divb
or
and
pop
xor
mov
mov
cmp
dec
cmp
cmp
dec
jbe
mov
les
push
add
mov
std
enter
je
pop
push
xchg
sub
iret
pop
cmpsb
dec
adc
push
popfw
ja
mov
adc
sbb
daa
cmp
ss
ds
cltd
bound
mov
pop
rorb
push
sti
sahf
mov
pusha
sti
testl
arpl
sbb
divb
dec
fnstcw
pop
inc
mov
and
cwtl
or
aaa
inc
enter
aad
fsubl
aas
call
aad
jb
dec
and
mov
or
std
pop
in
decl
mov
adc
push
lods
inc
add
adc
mov
jo
lea
jl
out
cmp
pop
push
icebp
test
aaa
xchg
mov
out
and
ja
icebp
xchg
ss
jae
adc
inc
insb
push
fisttpl
in
stos
pusha
cmp
fs
shl
cmpsb
out
xchg
xchg
fadds
jmp
pop
aaa
xchg
pop
mov
adc
mov
xchg
aaa
in
pop
sub
pop
stc
sbb
dec
and
sti
push
outsb
stos
jmp
push
out
or
scas
cmp
adc
shl
cltd
sub
push
das
ljmp
repnz
jnp
sti
pusha
arpl
cltd
filds
xchg
cmp
add
ret
jae
add
sahf
pop
xchg
pop
cmpsb
or
jl
sahf
das
xor
xor
ljmp
mov
aaa
dec
xor
mov
imul
fs
xchg
dec
int3
inc
cmp
sti
sbb
pusha
daa
adc
aad
add
stos
dec
xor
leave
lock
mov
rorl
aaa
jecxz
inc
jp
mov
jle
ss
mov
inc
xorb
xor
jns
sbbl
sub
sbb
dec
icebp
or
sahf
js
jmp
sbb
negl
mov
pop
and
lahf
push
nop
inc
jnp
fcomps
ljmp
mov
push
outsb
scas
inc
push
mov
inc
repz
jb
pop
cmpsl
or
dec
or
inc
add
add
dec
insl
popa
jmp
sbb
and
push
test
data16
inc
mov
adcb
mov
xchg
mov
xor
out
les
icebp
loopne
inc
jecxz
out
sub
or
ss
mov
pushf
jnp
add
cmovbe
or
ret
arpl
xchg
adc
sbb
icebp
push
lret
xchg
sub
xor
and
negl
mov
es
outsb
sbb
mov
ds
add
nop
pushf
push
aad
sar
and
xchg
add
mov
ret
push
mov
fst
fisttpl
in
fnsave
jns
mov
xlat
ds
nop
mov
cmp
sti
add
jbe
dec
cmp
push
mov
jmp
outsb
jecxz
pop
pop
jae
jo
mov
pop
mov
js
mov
mov
stos
js
iret
xchg
jbe
rcrb
pop
mov
icebp
rolb
cmp
sub
jo
es
xchg
sbb
xor
inc
mov
pop
mov
push
cmp
shrl
lret
add
push
push
push
ret
cmp
stos
push
jbe
sbb
in
cmpsb
mov
push
sbb
outsb
fcompl
inc
xor
or
pusha
leave
jle
aaa
and
jno
push
clc
and
xchg
scas
cmp
jbe
add
jb
sbb
pop
inc
int3
pop
inc
and
aaa
icebp
scas
in
and
enter
in
jbe
into
bound
dec
leave
mov
ds
lock
or
lods
ret
cltd
lcall
lret
lods
jnp
xor
adc
mov
subl
sub
push
stc
int
into
loop
icebp
pop
xchg
inc
push
repz
rol
jecxz
iret
sub
or
cmc
mov
stos
mov
lret
loop
ret
enter
pop
popf
mov
sub
nop
xchg
rcrb
imull
insb
scas
notb
inc
push
data16
cltd
sti
push
aaa
push
push
movsl
out
scas
shr
cmc
jbe
ficompl
pop
out
aaa
jnp
push
and
std
out
and
cltd
jg
adc
insb
rcrl
fildll
xlat
sti
imul
data16
les
cmpsl
jmp
gs
mov
sti
jnp
ds
pop
jne
ljmp
push
xor
pop
xorb
rorl
fistpl
sbb
jg
test
and
in
movsl
pop
incl
pop
jae
data16
jle
xor
iret
lea
jb
lds
js
arpl
aas
mov
outsb
dec
enter
xor
push
mov
fdivl
ret
cmp
jne
pop
gs
leave
add
cwtl
inc
sbb
movsb
sbb
pop
xlat
sbbb
lret
imul
jp
cmp
out
xchg
jge
call
fldt
inc
xor
cmp
pushf
lods
jnp
xchg
jo
ss
addb
jns
push
les
ljmp
ss
adc
mov
jno
fsubs
imul
pop
dec
mov
movsb
scas
jmp
sub
loopew
ds
pop
mov
sub
insl
in
ret
sbb
adc
movsl
insl
ljmp
jle
aas
jmp
jmp
repnz
sbb
sbb
mov
in
aad
xchg
aaa
fwait
and
faddl
ss
inc
xchg
je
inc
imul
jmp
call
adc
and
int3
fstpl
cmc
cwtl
enter
mov
jae
sub
shlb
sbb
cld
mov
pushf
inc
shl
mov
ja
push
cmp
mov
xlat
sbb
xor
mov
mov
jle
aaa
push
out
push
push
cmp
cmp
in
sbb
mov
pop
scas
inc
pop
call
inc
addl
jnp
lea
or
cmp
cmp
pop
mov
int
pop
jo
mov
loope
imul
pop
test
mov
or
in
cltd
or
ds
inc
xor
sahf
pop
in
hlt
pop
popf
fnsave
ds
into
inc
lret
out
aaa
data16
push
mov
hlt
lock
lret
ds
push
mov
stc
cmp
mov
push
pop
sbb
push
mov
inc
rcrl
dec
mov
adc
dec
dec
mov
mov
push
sbb
fsubl
cmpsl
pop
xchg
add
out
xchg
divb
and
or
bound
jge
pop
aas
ss
subb
jle
mov
inc
bound
fwait
jnp
push
daa
lds
adc
jmp
jecxz
adc
imul
sub
jp
mov
repnz
jp
clc
push
inc
incb
mov
cmp
cmp
add
dec
outsb
jmp
mov
imulb
mov
cmp
push
push
xlat
aaa
mov
das
cld
inc
in
and
adc
aas
jb
inc
cmp
xor
mov
sub
jecxz
sbb
adc
aas
js
frstor
call
movsl
dec
pop
jle,pn
cli
inc
ss
loope
cmc
dec
pop
pop
daa
xchg
je
push
inc
scas
sbb
outsb
fstps
out
stos
fidivl
adc
pop
xchg
pop
sahf
mov
pop
loope
aaa
jmp
and
imul
cld
jge
inc
imul
aam
push
pop
icebp
and
mov
xorb
dec
xchg
cmp
in
call
in
imul
ret
fistpl
lcall
xchg
inc
dec
lods
movsb
mov
gs
ja
es
mov
cmp
jnp
mov
sbb
fmull
mov
cltd
lcall
aaa
ljmp
jb
cmp
pushf
daa
xchg
mov
sub
add
mov
xlat
pop
mov
rorb
adc
and
inc
pop
test
and
in
jmp
movd
push
and
js
mov
lea
sbb
jg
scas
sbb
lret
es
lods
je
pusha
dec
cmp
push
imul
rcrl
sbb
mov
jl
dec
pop
in
cmp
inc
and
mov
js
icebp
aam
je
mov
in
mov
arpl
mov
mov
ljmp
sbb
jnp
dec
jg
in
aaa
mov
sahf
std
xchg
enter
aas
adc
pop
aam
in
insb
mov
pop
mov
mov
sbb
jbe
ljmp
cmp
sub
mov
js
repz
jmp
adc
mov
pop
and
ljmp
repz
sbb
aaa
jnp
pop
call
data16
jg
mov
xchg
ss
push
inc
jle
xchg
push
jbe
cmp
lahf
call
scas
mov
add
lods
cmp
mov
sub
in
inc
lret
ljmp
add
jne
pop
out
sbb
push
jnp
loope
orl
and
aam
subl
lret
mov
sub
fcmovu
sub
aas
imul
sbb
push
sub
cltd
outsb
or
push
xchg
enter
nop
aam
mov
scas
ret
inc
call
rcr
out
jl
xchg
mov
ffreep
xchg
ss
rep
inc
repnz
sub
add
loop
xlat
lret
popf
adc
inc
fildll
int
dec
and
mov
push
or
outsb
add
jb
mov
sbb
outsb
lret
cli
cmp
mov
push
in
mov
loopne
mov
dec
repnz
jecxz
aaa
add
popf
xor
xor
cwtl
or
shrl
mov
les
cld
in
std
jle
in
pop
push
mov
sbb
push
add
pop
push
sahf
xchg
lock
jle
push
loope,pn
inc
bound
sub
pop
adc
loope
xchg
clc
int
aaa
out
push
inc
loope
ret
jecxz
adc
loopne
lds
out
cmp
dec
faddp
enter
pop
into
or
pop
aas
push
xor
icebp
sahf
ss
enter
addr16
popa
test
sbbl
into
adc
cli
pop
fadds
rolb
xor
and
sti
das
cmp
push
dec
iret
sbb
mov
jle
or
call
inc
sub
das
jecxz
loope
test
sbbl
hlt
mov
mov
aad
sbb
xor
sbb
cmp
lcall
cld
push
sahf
xchg
dec
sahf
jbe
xchg
ret
test
sub
push
mov
cmpsb
lock
mov
xchg
mov
mov
mov
cmp
cmp
lods
mov
mov
stos
mov
or
or
imul
popf
and
mov
inc
xorb
bound
bound
jae
xor
jle
aas
push
addr16
iret
jno
dec
push
cmp
sahf
stc
adc
push
cs
jns
movsl
inc
mov
aaa
adc
movsl
leave
push
xchg
negl
lret
mov
adc
inc
sub
cs
in
dec
outsb
push
adc
cmpsl
mov
inc
dec
aaa
push
sbb
push
loope
adc
cmp
pop
bound
add
popa
mov
pusha
or
inc
pop
inc
jmp
pop
in
and
cmpsb
add
fs
out
aam
inc
push
popf
arpl
push
repnz
cli
andb
xor
push
pusha
and
imul
jo
mov
lock
movsb
loopne
ret
and
les
dec
push
divb
and
push
lock
in
lods
stos
popa
das
lock
out
rcrb
arpl
xchg
pop
clc
addr16
jnp
adc
pop
mov
sbb
push
seta
shr
cmp
xchg
ljmp
mov
pop
rcl
lods
push
pop
xor
mov
xor
and
mov
sbb
add
mov
inc
pop
sti
mov
testb
cld
sbb
xchg
sub
pop
aad
or
jnp
push
jno
dec
or
sub
outsl
push
mov
or
xchg
sub
inc
lret
jmp
cmp
add
rep
lods
out
jl
pop
loop
aam
dec
sub
popf
inc
jne
push
mov
movsl
add
push
arpl
out
in
mov
xchg
popa
scas
sbb
mov
je
aaa
and
mov
adc
in
addr16
dec
popa
adc
push
cli
sbb
mov
ja
hlt
inc
cli
sbb
mov
mov
lock
adc
stos
push
sub
aaa
out
push
pop
pop
pop
je
xchg
adcb
js
jle
stos
loop
imul
stc
xchg
in
outsl
std
into
iret
pop
mov
inc
test
sbb
cmpsb
andb
leave
mov
adc
repnz
cwtl
xor
es
mov
call
aas
insb
outsb
rcrl
mov
cmp
jns
cs
add
pop
out
cltd
sti
inc
imul
fnstenv
int3
js
xor
mov
pop
sbb
and
fistpll
dec
adc
pop
stos
inc
inc
pop
mov
cmp
mov
mov
lea
les
mov
addr16
add
cmp
sbb
test
pop
popf
dec
and
and
fs
sub
xorb
jmp
addb
in
sub
xchg
xchg
icebp
fwait
aaa
fchs
xor
popf
movsl
popf
jge
scas
mov
xchg
and
andb
add
jne
mov
and
mov
mov
jbe
mov
mov
sub
mov
es
enter
cmp
scas
das
pop
dec
cmpsl
jb
paddd
cmp
push
mov
lods
orl
daa
mov
pop
adc
popf
fnstcw
lahf
pop
ss
pop
int3
in
sbb
xor
inc
stos
or
adc
mov
nop
mov
jbe
clc
mov
mov
mov
cltd
add
mov
dec
arpl
repz
insb
adc
inc
lcall
aad
pop
movsl
mov
cltd
sub
aad
cld
sub
fstp
pop
aas
mov
repnz
movsl
push
cmp
adc
jae
scas
push
lret
je
and
push
inc
push
cmp
add
or
mov
or
cld
cmp
mov
lret
cmp
aad
loop
mov
aaa
js
jle
pop
das
mov
sbb
mov
sahf
mov
dec
push
pop
pop
les
jns
in
push
outsl
or
sbb
adcb
inc
in
jbe
and
mov
and
pusha
pop
mov
push
mov
mov
aam
jl
dec
nop
lret
inc
lock
pushf
aaa
push
xchg
jge
in
decb
insl
jb
vpunpckldq
mov
sti
shll
xchg
data16
jp
clc
sbb
pop
or
out
jl
imul
das
bnd
in
mov
cld
inc
call
faddl
push
sub
cmp
test
xor
jp
mov
mov
mov
lods
push
cmp
sub
xchg
mov
mov
dec
inc
dec
mov
insl
xlat
in
xchg
scas
outsl
out
setnp
ss
push
arpl
add
call
jb
aad
push
shlb
xor
mov
xchg
mov
pop
les
out
ja
or
add
jecxz
mov
fnstcw
push
repz
push
mov
cltd
mov
push
nop
jle
frstor
subb
jp
xchg
pop
jbe
inc
fadd
lods
dec
cmpsb
and
shlb
loopne
and
mov
jp
cmp
add
sbb
roll
cld
sahf
cmp
adc
mov
dec
jbe
jno
lods
dec
in
fidivs
jecxz
xchg
xchg
fdivr
sbb
out
cld
xchg
mov
or
xor
leave
leave
cmpsl
jnp
jb
hlt
add
mov
aaa
sbb
push
ja
ret
ret
cwtl
jbe
mov
cli
je
loopne
jo
push
xchg
sbb
notl
jmp
push
add
data16
xor
dec
cmp
dec
fsubr
mov
mov
mov
dec
fsubp
mov
sbb
movsb
pop
sbb
mov
push
jb
repz
sub
and
cmp
loope
push
loope
cwtl
les
decl
add
jno
pop
iret
inc
ret
icebp
adc
mov
shl
sti
std
sub
inc
cs
and
xchg
pop
aaa
sbb
lock
test
mov
outsl
in
cltd
jno
add
aaa
mov
imul
aam
sub
sbb
fmul
rorb
pop
pop
fidivs
ja
imul
sub
out
insl
add
addr16
ljmp
jns
stc
out
outsb
sub
fisubs
lock
fst
mov
sbb
in
pop
inc
aaa
mov
insl
imul
sub
jmp
adc
addr16
lret
outsb
loopne
adc
roll
mov
jge
inc
cmp
in
idiv
cltd
mov
out
std
aas
jne
lret
adc
mov
arpl
adc
sub
fwait
imul
cmp
jge
and
adc
aas
orb
fldcw
inc
pop
dec
mov
sub
push
in
aas
or
cmp
fwait
test
enter
cmpsl
cmc
jecxz
stos
insl
aaa
pop
insl
push
add
sub
pop
sub
jmp
shlb
mov
sbb
push
xor
data16
adc
mov
sub
aam
fs
stos
mov
pop
mov
or
inc
mov
mov
aam
cmc
fdivrl
je
ds
insb
pop
jl
sahf
mov
bound
movl
enter
mov
pop
cwtl
jecxz
dec
pop
cwtl
pushf
popa
add
cli
or
pop
adc
xor
scas
inc
and
push
jne
lret
cld
mov
push
movq
mov
cmp
imul
jle
mov
pop
fstpl
js
xchg
pop
std
add
mov
and
inc
test
shrl
jb
popf
mov
jp
pop
mov
fisttpll
mov
xchg
mov
push
sbb
mov
pop
stc
xchg
and
pop
mov
push
aaa
lcall
adc
or
jb
pop
loope
cld
adc
gs
icebp
int3
dec
pop
or
shrb
add
xlat
inc
dec
and
pop
lcall
add
popl
inc
inc
or
mov
jb
mov
mov
jmp
jbe
mov
pop
jne
dec
das
xchg
push
xchg
jle
mov
lcall
push
pop
lock
imul
push
xor
mov
pmaxsw
int3
int
add
aaa
dec
cmpsb
push
jno
mov
cmp
adc
pop
inc
and
cmp
add
loope
pop
jno
add
jp
pop
js
sub
bound
lahf
mov
loopne
push
xchg
mov
cld
sbb
and
pop
out
repz
sub
popf
outsl
mov
pop
aaa
and
ss
aaa
int3
or
cmp
cmp
xchg
leave
scas
iret
stc
mov
mov
in
ds
out
dec
into
outsl
shll
aaa
push
jle
or
in
adc
inc
push
cmp
sbb
pop
mov
in
stos
das
filds
cld
and
push
cmp
fildll
or
sbb
mov
pop
outsb
test
sub
stc
cmpsl
scas
adc
pop
ret
mov
inc
cmp
sbb
push
and
jo
cmpsb
je
cmp
pop
nop
std
mov
mov
lret
lock
mov
cmp
and
movsb
inc
rclb
xor
aam
rcrb
scas
fnstcw
add
pusha
pop
jl
pop
xchg
dec
xchg
sbb
inc
jle
pop
movsb
loope
mov
xor
jmp
gs
adc
jmp
sbb
xor
bound
aaa
xor
les
fsts
pop
mov
mov
movsl
dec
adc
loope
mov
jno
scas
lret
psubq
sarl
adc
sbb
insb
das
dec
push
jp
mov
cmp
jge
inc
icebp
jg
pop
jno
or
xor
shrl
aaa
pop
addr16
dec
lahf
pop
xor
mov
add
mov
fnstsw
jb
stos
fcomi
inc
and
leave
insl
cmp
push
dec
push
bound
lret
dec
dec
dec
pop
cld
dec
adc
mov
pop
sbb
pop
inc
jle
cmpsb
in
cmp
pusha
mov
aaa
sbb
dec
xchg
jl
push
dec
cmp
rcrb
push
mov
pop
add
jbe
sbb
lock
out
outsb
sbb
pop
call
or
int3
and
mov
test
push
sbb
and
jl
adc
rcrl
xor
jmp
shrb
sub
cmp
and
xchg
xchg
loope
fs
scas
and
pushf
jle
xchg
pusha
dec
add
and
mov
aam
mov
dec
sub
mov
rclb
inc
imul
push
cmp
jle
cmp
arpl
or
mov
mov
adcl
xlat
aam
pushf
pop
jb
loopne
xchg
loop
lret
jmp
fstp
mov
push
shrl
mov
loopne
nop
cmp
push
fs
xor
jmp
sub
fistl
es
call
lods
out
in
inc
pop
xchg
mov
inc
add
lea
movb
inc
push
jmp
jo
sbb
push
jmp
push
sub
xchg
mov
addr16
xor
jle
push
cmp
in
push
fnsave
int
push
imul
pop
sub
mov
aaa
roll
aam
dec
mov
sub
sbbb
sti
jb
add
repz
jmp
dec
mov
lahf
inc
es
nop
addr16
xchg
int
je
testl
iret
fsubl
lret
mov
fwait
mov
mov
push
mov
inc
sub
cli
mov
dec
lret
call
or
mov
aaa
sbb
xor
bound
pop
insb
outsl
test
push
xchg
sbb
jg
dec
fnstsw
or
xchg
pop
push
dec
mulb
dec
cs
jae
sbb
jo
popf
sub
dec
sub
rcr
lcall
push
out
lret
xchg
xor
fbld
fistpl
call
mov
push
in
dec
mov
bnd
sbb
dec
add
ds
xor
xlat
xor
in
xor
inc
cld
cld
stc
adcl
adcb
in
stos
mov
shll
pop
jbe
test
jmp
pop
iret
mov
dec
lcall
pop
add
test
test
das
pop
add
lahf
mov
jbe
in
popf
xchg
orb
jbe
sub
fmull
pop
sbb
push
dec
movsl
fmul
cld
aas
ja
pop
and
cmp
dec
mov
fists
mov
jecxz
gs
call
mov
mov
jb
jo
stos
sub
enter
movsb
or
clc
aam
and
maxps
sub
insl
data16
cmpl
icebp
repnz
stos
inc
mov
cmpsb
cmp
scas
cmc
dec
stos
dec
pop
add
cmpsl
icebp
mov
xor
in
outsb
sub
pop
cmp
lea
ds
jb
inc
dec
or
sub
pop
mov
lock
lahf
push
and
cwtl
test
dec
xchg
data16
lret
cmp
cmp
pop
pop
and
jl
adc
xor
in
aaa
push
xchg
dec
cs
imul
mov
adc
mov
pop
mov
cltd
push
dec
xor
loope
popa
inc
cltd
test
push
xor
cmp
cmpl
sbb
aaa
out
dec
xchg
pop
aad
jecxz
lahf
adc
inc
or
lret
jbe
fldenv
sarb
pop
xchg
fwait
bsr
add
pop
mov
cmpsl
mov
add
cmpsl
inc
pop
test
and
and
xorb
sub
mov
aaa
and
or
das
pop
push
sbb
mov
pop
loop
push
mov
mov
in
pop
mov
ffree
cmpsb
imul
pop
adc
adc
xor
push
outsb
push
stos
loope
aaa
xchg
test
xchg
jae
xchg
mov
pop
pop
mov
and
sbb
shll
jge
mov
movsl
in
inc
push
xchg
push
das
and
sbb
out
in
das
jbe
daa
xor
mov
ss
sar
sub
gs
lods
sbb
push
push
clc
push
jg
sbb
push
mull
es
ss
ss
pop
lods
daa
jnp
pop
add
fimull
xlat
mov
fisttpl
enter
loope
int
mov
cmp
mov
mov
movsl
lock
xchg
xor
movsl
pop
popf
push
sbb
dec
jae
andb
pop
or
jbe
sbb
sbb
and
movsl
fsubrs
sahf
movsl
je
in
imul
sbb
inc
adc
pop
jecxz
jo
arpl
inc
add
jge
rcrb
dec
inc
cmpsl
and
call
aaa
mov
fcmovnu
xor
lods
lcall
mov
and
push
mov
mov
or
cmp
call
mov
mov
sbb
loop
stc
cmp
lret
jo
out
repz
mov
mov
cmpsl
das
enter
inc
inc
sbb
rolb
dec
push
int3
cmpl
push
loope
push
sbb
push
hlt
imul
lcall
mov
mov
add
mov
push
in
int3
mov
xchg
mov
dec
repz
lret
xchg
inc
in
mov
xchg
in
aaa
mov
andl
rcrb
xchg
scas
iret
into
stos
mov
addb
stos
aas
push
lock
sub
aas
dec
jecxz
and
sbb
jbe
push
cmp
dec
aad
stos
cmp
dec
repnz
fistps
adc
jb
jp
sbb
addr16
jmp
or
fsubr
push
loope
dec
clc
mov
cmp
gs
fwait
mov
sbbb
pop
dec
cwtl
ja
or
xchg
ds
and
add
lret
pop
push
pop
pop
dec
inc
pop
fadd
pop
pop
test
adc
sub
popf
pusha
shll
inc
dec
rclb
leave
jle
popf
ret
cmpl
sbb
xor
and
shr
mov
sbb
fidivs
inc
push
mov
out
mov
sti
pop
push
xlat
daa
pop
jmp
add
cwtl
icebp
cmpsb
mov
bts
jnp
cmp
out
dec
cmp
adc
ds
jae
push
movsl
in
into
fistps
dec
aaa
js
cmp
sbb
call
push
pop
fnstcw
add
push
dec
push
jle
add
push
mov
mov
movsl
or
mov
fcomps
int3
jb
push
repz
mov
outsl
mov
movb
sahf
add
xor
xorl
enter
mov
test
cmp
mov
dec
and
popa
push
aam
stos
out
cmpsb
push
mov
rcll
or
adc
imul
xchg
sbb
cwtl
out
inc
hlt
cmp
lods
cltd
mov
jecxz
add
mov
in
aaa
fcomip
add
outsl
sbb
or
jl
jo
enter
sbb
sub
and
jb
scas
xor
pop
cmp
dec
xor
call
lret
test
imull
xchg
call
out
xorb
mov
jae
std
pop
ds
lahf
and
and
repnz
incl
cmp
push
cmpsb
cmc
cwtl
cmp
jmp
or
sti
loope
dec
pop
stc
in
add
lcall
xchg
cmpsb
cltd
aad
adc
mov
lods
jnp
add
and
in
mov
std
cmp
repz
xchg
inc
mov
fstps
jnp
inc
mov
les
aaa
lods
sbb
cwtl
in
int3
cmp
scas
xchg
sub
pop
fwait
add
cmp
bound
lea
mov
sub
mov
cwtl
adc
insl
addr16
dec
add
dec
mov
loope
enter
shll
daa
int
fiaddl
jmp
mov
fisttpl
xchg
mov
or
ds
add
lret
mov
ret
mov
cwtl
push
outsb
mov
in
pop
and
outsb
pop
outsl
cmp
jns
push
repz
inc
or
xlat
and
pop
or
push
pop
aas
mov
aas
je
pop
and
gs
and
mov
lock
fwait
push
sub
sbb
nop
jge
test
bound
out
popl
add
mov
je
mov
faddp
imul
enter
filds
imul
dec
and
xchg
push
pop
shr
mov
pop
sub
aad
xchg
shll
push
mov
ss
outsb
arpl
xchg
pop
in
aaa
inc
icebp
inc
or
mov
inc
jbe
add
imul
lcall
push
lahf
fwait
xchg
jb
lods
adc
popa
notb
xor
lcall
repz
push
pop
xchg
mov
cmp
gs
pop
push
fcmovb
stos
sahf
out
je
cmp
inc
add
pop
mov
std
inc
ds
ror
pop
pop
push
pop
pop
inc
dec
dec
xor
andb
pop
mov
test
insl
push
add
sub
pop
pop
pop
sbb
in
xchg
rcll
aad
call
mov
jle
push
not
inc
mov
jnp
jmp
mov
or
mov
idivl
int3
mov
stos
mov
adc
mov
arpl
jmp
clc
in
xchg
mov
jle
shll
pusha
sbb
cmpsb
aaa
xchg
mov
subl
fmuls
shll
dec
inc
addb
adc
inc
addr16
pushf
dec
sbb
gs
xor
test
sub
jecxz
aaa
sbb
outsb
je
cmpsb
cmpsl
sub
lcall
scas
lahf
pop
stos
sub
imul
jbe
and
ja
test
jle
mov
arpl
and
jl
shll
push
repnz
ret
popf
into
hlt
mov
addr16
jle
lea
or
or
inc
lock
pop
loop
xchg
les
push
and
pop
or
pop
ljmp
mov
mov
dec
cmp
mov
fidivl
lea
jo
xor
inc
cmp
outsl
aaa
lahf
sbb
cltd
loope
imul
dec
icebp
adc
pop
xor
inc
lret
in
xchg
fidivrs
mov
sti
pop
lds
cltd
push
sbbl
mov
jp
sbb
enter
and
adc
mov
and
sbbl
enter
adc
scas
pop
les
lret
loopne
push
add
mov
and
dec
jns
cmp
stos
popa
push
add
sub
mov
jae
jecxz
sub
adc
adc
std
mov
hlt
test
enter
and
push
add
sbb
cmpsb
ds
push
sub
lahf
add
pop
dec
add
sbb
pop
es
test
shl
addr16
jne
es
cmpsb
rorl
dec
test
pop
lea
into
insb
into
pop
lea
dec
shll
mov
jg
loop
in
sahf
pop
test
in
and
inc
pop
dec
push
mov
dec
pusha
shr
xchg
mov
pop
sbb
fdivs
xchg
push
test
mov
mov
sbb
push
test
push
mov
gs
cli
xor
aaa
in
xchg
in
cmp
cmp
sbb
add
xor
movsb
in
sarb
inc
popf
aaa
adcb
cmp
insl
xchg
in
clc
pop
add
lahf
fwait
divl
test
inc
jae
push
gs
mov
add
jmp
sub
cmc
cmp
dec
xchg
ss
pop
xorb
sbb
xchg
aaa
xchg
test
mov
pop
push
in
imul
pop
popa
jae
push
ret
and
mov
cwtl
outsb
sbb
test
inc
xchg
fstl
mov
lret
add
lcall
imul
ret
sbb
lahf
push
ss
mov
xchg
imull
aaa
mov
push
and
pusha
arpl
shlb
and
adc
js
pop
scas
outsb
pcmpgtd
fistpl
aaa
imul
pop
inc
inc
out
divb
das
sahf
fbstp
jle
into
adc
stc
push
pop
mov
jno
daa
std
or
loope
xchg
jno
xor
adc
mov
jb
icebp
adcl
popf
sbb
mov
xor
jnp
sbb
pop
dec
les
dec
ja
sub
jecxz
fistps
mov
or
push
cltd
cmp
out
mov
cmp
or
cmp
sbb
sub
out
inc
jmp
iret
ret
mov
sub
movsl
loope
cld
lods
aas
jp
sub
ret
sbb
aaa
stc
inc
add
insb
adc
pop
and
sbb
cld
aam
icebp
dec
push
push
mov
and
out
mov
add
jbe
mov
test
popa
mov
bound
push
push
mov
scas
lods
mov
push
fisttpll
mov
push
mov
push
bound
in
test
repnz
mov
pop
fisttps
jmp
rorb
call
and
lret
inc
sahf
ret
fisubl
mov
rorl
imulb
scas
and
pop
jmp
lret
add
pop
sbb
and
data16
loopne
aaa
dec
mov
insl
add
mov
mov
and
cmp
mov
jae
dec
icebp
orb
cmp
sti
cmpsl
repnz
cmp
ds
dec
adc
gs
cmpsl
adc
scas
loope
icebp
and
pop
push
mov
insb
mov
jo
pop
mov
sbb
clc
sbb
arpl
in
pop
sub
jnp
in
push
xchg
xchg
push
popa
jg
clc
pop
aaa
cld
lret
enter
push
pop
out
sbb
jo
cli
arpl
push
ret
movsb
mov
icebp
mov
or
ds
mov
jmp
jne
pop
and
jp
xchg
inc
cmp
add
lcall
jle
das
mov
cwtl
push
jo
repnz
das
and
in
ss
cmp
sbbb
adc
les
jb
enter
adc
outsb
out
pop
pop
adc
sub
test
iret
sub
sub
lea
jno
pop
arpl
jecxz
repz
inc
dec
clc
xchg
cmp
pop
adc
mov
pop
lods
int
stc
mov
mov
xchg
fistpll
cld
pop
cs
push
xor
in
adc
adc
sahf
mov
rcl
adc
sub
jbe
addr16
jge
sbb
jle
mov
shlb
in
je
jg
xchg
adc
dec
rcr
enter
cs
out
jo
in
inc
rcr
push
mov
add
dec
xchg
fs
outsb
stos
pop
adc
inc
push
clc
sbb
cmp
mov
cmp
jnp
sbb
pop
imul
xchg
aaa
dec
xor
sti
jle
dec
fidivrs
dec
dec
scas
and
test
sbb
and
cmp
sub
pop
jb
or
pop
or
arpl
test
aaa
out
push
addr16
call
fldt
insl
sbb
in
es
aaa
icebp
ljmp
aas
aam
sub
fwait
test
inc
push
inc
pop
enter
sbb
mov
dec
dec
jge
sub
sbb
xchg
orb
xchg
mov
and
out
and
push
dec
std
and
mov
mov
mov
addr16
mov
lret
or
xor
inc
jle
fsts
push
sbb
push
fdivl
mov
adc
jne
std
jb
sbb
lock
sbb
pop
inc
inc
sub
or
mov
insb
dec
loope
inc
cmpsl
in
std
repz
jle
and
inc
fsubrs
xor
repz
add
js
mov
call
jecxz
sarb
cmp
pop
clc
mov
jp
mov
ss
popa
fwait
jle
jp
sub
sub
pop
push
cmpb
adc
dec
adc
mov
jg
stos
or
inc
pop
add
jo
lock
push
scas
add
mov
int
insb
lods
pop
pop
sub
xchg
loop
pop
mov
test
sarl
cmpsb
jb
in
cltd
lret
and
call
mov
cwtl
and
hlt
rolb
or
pop
in
js
sbb
jge
sub
clc
mov
push
push
outsb
fwait
pop
mov
push
scas
mov
iret
adc
lret
les
sbbb
int3
pop
dec
fisttpll
or
fsts
sbb
outsb
pushf
aaa
dec
push
in
xor
cmpsb
data16
ds
je
in
dec
in
lods
sti
addr16
inc
mov
cmp
push
lock
or
adc
insl
bound
pop
mov
jecxz
lret
lea
sub
add
inc
fnstcw
ret
lods
cmp
imul
shll
push
cli
dec
push
cmp
in
bts
mov
scas
loopne
dec
mov
cli
icebp
inc
xor
daa
das
push
in
shr
repz
fs
imul
xor
inc
lea
cs
sahf
sahf
sti
inc
push
cwtl
clc
ret
lods
inc
jne
add
cltd
mov
mov
iret
stos
imul
and
jne
dec
ljmp
mov
push
mov
mov
mov
lcall
push
loope
push
arpl
add
cmc
or
inc
sbb
fistpl
les
clc
mov
loop
test
stc
addr16
stos
daa
inc
xor
jecxz
div
fsubrs
add
xor
mov
ds
jae
cmpsb
mov
std
or
into
aas
mov
xchg
dec
rcr
dec
outsb
in
scas
hlt
dec
lretw
jl
pop
inc
inc
cmp
pop
pop
imulb
add
add
pop
mov
sti
mov
adc
jnp
fsub
fucomip
int
sbb
inc
mov
sahf
pop
aaa
loop
pusha
sbb
sbb
sbb
stc
add
add
addr16
sahf
decl
cmp
aas
sub
cmp
mov
pop
xchg
sub
test
aaa
mov
ret
int
xor
xchg
aaa
sar
mov
es
adc
in
mov
adc
add
cmp
mov
aam
fld1
mov
mov
pop
int
fidivl
jae
inc
cmpsb
cmp
stos
ret
inc
mov
pop
jecxz
cmc
sbb
mov
push
pop
push
int3
pop
enter
scas
jecxz
out
push
jl
dec
mov
lahf
out
xchg
data16
cmp
icebp
pop
hlt
in
bound
lcall
dec
icebp
ljmp
push
mov
mov
loope
mov
in
jae
mov
adc
clc
mov
repz
testb
rorl
lahf
cld
pop
adc
in
cmp
fdivrl
push
dec
popf
pop
dec
xchg
push
aas
test
mov
inc
mov
ja
ds
pushf
adc
lret
repz
push
out
repz
mov
jecxz
push
outsb
repnz
mov
sbb
fildl
xchg
or
andb
add
xchg
shll
fistpl
mov
lock
call
adc
push
adc
loope
add
in
stos
cmp
pop
int3
adc
jb
jge
mov
ret
dec
lea
popa
insl
push
loope
xchg
aad
push
xchg
in
cmpsb
fistpll
push
test
fidivrs
pushf
das
mov
movsl
jb
jmp
cmp
int
fisubl
mov
fmulp
testb
add
fcomp
add
cmp
pop
adc
mov
in
icebp
mov
add
add
mov
loop
push
in
insl
dec
jno
cmp
ds
jg
adc
jp
stos
aaa
push
out
dec
aaa
xor
add
jae
jmp
cmp
mov
xor
push
adc
mov
adc
arpl
sub
rcr
imul
cmpsb
insb
mov
adc
dec
aad
sbb
pop
mov
inc
jb
inc
pop
jnp
aad
aaa
fmuls
pop
mov
add
out
aas
jno
xchg
stc
pop
lret
sbb
clc
test
mov
fucomi
mov
adc
in
xor
hlt
pop
sbb
js
ds
ret
cmpsb
xchg
test
outsb
outsb
loope
es
rcl
in
inc
xchg
or
pop
in
in
shrl
pop
mov
xchg
mov
pusha
xor
xor
jno
cmpsb
negl
bound
imul
adc
and
jnp
pop
in
rclb
arpl
mov
sarl
out
nop
ss
jnp
stos
idivb
ror
outsb
adc
cmpsl
or
mov
mov
dec
iret
mov
inc
dec
or
outsb
pop
mov
xchg
bound
notb
and
push
sub
pop
inc
into
rcrl
pop
sti
and
aaa
mov
loop
cs
sub
lcall
mov
add
mov
sub
sbb
mov
rcr
pop
pop
mov
popf
mov
add
xor
aaa
int
das
aas
add
add
bound
xorb
adc
aaa
std
add
ficoms
fucom
or
mov
aaa
xor
add
xor
jo
movsb
arpl
mov
pop
adc
mov
out
bound
inc
jbe
loope
xor
sarl
xor
mov
lahf
inc
dec
jl
ficomps
push
popa
dec
mov
push
jp
xor
cmpsb
pop
subb
sub
addr16
fbld
pop
pop
xor
lcall
into
pop
inc
push
pop
or
mov
mov
sti
in
sbb
mov
fldt
mov
cli
repnz
mov
jge
loopne
push
jecxz
xchg
popf
pop
jbe
aaa
sub
or
cmp
sahf
pop
inc
fwait
sahf
imul
movsl
pop
mov
sub
jle
or
sbb
adc
cmp
sub
cmpsl
pop
and
aaa
adc
lret
inc
rorb
hlt
into
lds
mov
push
pushw
iret
repnz
scas
jno
inc
es
xchg
sbbb
or
popa
outsb
je
sub
sti
inc
loope
ss
rcll
and
sub
scas
fldt
mov
adc
pop
mov
in
jle
sahf
shrb
push
ret
pusha
mov
lret
push
fbld
xchg
cltd
lea
out
pusha
mov
cmp
sbb
mov
dec
jb
into
stos
inc
jmp
xchg
pop
jecxz
jns
pusha
mov
pop
cmp
imul
addr16
or
inc
insl
or
sub
in
push
dec
cmp
jbe
stos
jp
jmp
mov
sub
or
jg
outsl
in
jns
mov
sahf
sub
enter
dec
or
scas
aam
repnz
pop
sbb
lcall
adc
rcrl
xor
mov
pop
testl
mov
xchg
mov
xchg
mov
in
sub
sbb
xlat
push
mov
sbb
aaa
arpl
adc
and
or
mov
mov
mov
repz
mov
lds
ret
into
popf
mov
xchg
dec
add
mov
mov
add
add
push
rcrb
push
xor
mov
xchg
sbb
insb
stos
repnz
insl
and
sarl
mov
adc
or
push
inc
out
inc
push
inc
jb
cmp
sub
xchg
dec
fbld
dec
ss
jecxz
dec
pop
xchg
or
shll
jmp
xor
sbb
add
arpl
inc
jns
or
add
and
adcl
aaa
mov
xchg
imul
cltd
arpl
adc
scas
hlt
cmp
std
jne
lret
out
out
insb
popf
lcall
in
adc
xchg
cmp
dec
dec
xor
ss
xchg
fcoml
mov
jmp
test
repz
push
sub
movsb
inc
push
mov
in
clc
jns
sbb
ficoml
sub
cltd
jns
outsl
mov
mov
xchg
cmp
pop
mov
lret
mov
fs
sub
mov
pop
enter
pop
cmpsl
shlb
or
aam
test
pop
movsb
xor
dec
mov
out
xchg
mov
push
ret
sbb
dec
and
mov
sahf
mov
nop
mov
shl
dec
aas
xor
movsl
lods
and
imul
test
mov
or
adc
lcall
fildll
inc
jbe
pop
inc
outsb
mov
out
ss
add
mov
stos
outsb
shll
mov
sbb
xor
pop
jo
mov
mov
lods
sbb
adc
xchg
int
leave
movsb
inc
mov
aaa
pop
cmpsb
lea
pop
mov
fdivrl
and
cltd
push
or
pop
mov
std
add
or
cmp
aas
sub
jmp
cmc
arpl
and
sti
pop
inc
mov
std
mov
loope
and
outsb
test
enter
bound
push
cli
adc
in
jp
and
std
pop
pop
jmp
int3
outsl
lret
add
push
push
mov
sbb
and
nop
aaa
mov
bound
push
mov
adcl
cmp
sbb
jbe
in
push
mov
push
pop
in
cmp
out
and
loop
jl
push
imul
mov
jp
cmp
pop
mov
inc
je
xchg
movsb
fistpl
mov
jmp
and
or
lods
mov
fcoms
jb
es
mov
dec
out
sub
adc
mov
sbb
inc
inc
sbb
cmp
fcomp
arpl
mov
les
and
jl
lret
mov
jae
test
jo
rcll
mov
xchg
ret
jp
push
lods
cmp
adc
ficomps
jl
dec
inc
inc
jge
enter
jbe
pop
sbb
xchg
mov
fcomi
fdivrs
pop
sbbl
mov
fsubs
push
out
sbb
inc
mov
sub
lea
jne
dec
cmp
in
adc
inc
jmp
outsb
jo
pop
mov
inc
mov
arpl
pop
xor
lahf
xlat
les
ficoms
in
fcmovb
xchg
dec
pop
dec
dec
leave
jl
aam
leave
mov
pop
testl
xor
and
cmpsl
inc
adc
loope
pop
incl
fidivrl
xchg
in
jns
std
xchg
pop
lret
fwait
mov
add
adc
push
jg
sbb
cmpsb
fldl
pop
add
and
cmp
lods
enter
icebp
mov
add
aam
lock
xchg
pop
jno
pusha
adc
sub
repnz
nop
pop
leave
inc
out
lret
sahf
cmp
add
cmpsb
xor
dec
insb
jb
adcl
cwtl
loope
jle
aaa
dec
mov
inc
das
sbb
sub
ds
pop
jecxz
das
jnp
push
mov
and
adcb
jb
mov
loop
push
sub
addr16
and
mov
dec
cmp
cmp
cs
fimuls
mov
dec
cmpsb
xchg
ds
push
dec
sti
in
xchg
pop
or
pop
idivl
loope
sbb
xor
cmc
fistpl
sahf
das
xor
adc
xor
stc
shll
adc
ja
xchg
flds
aaa
mov
jbe
testl
xchg
push
push
jne
sbb
gs
loope
cmp
sbb
aaa
xchg
aaa
pop
mov
and
mov
ret
nop
call
pop
xor
xor
sub
jl
mov
push
sub
dec
popf
dec
cld
les
ss
push
mov
mov
in
js
cmp
sub
stc
sub
and
aam
mov
push
outsl
ss
mov
mov
push
outsl
gs
mov
mov
stc
push
and
sbb
pop
xchg
addr16
fsubl
pop
and
adc
ds
mov
add
jge
enter
je
popa
lods
insl
stc
popf
mov
pop
shll
inc
test
add
mov
dec
stos
pop
and
jecxz
iret
sbb
sbb
and
sub
xchg
je
or
push
push
or
cmp
stos
lea
int
pop
enter
push
roll
cmpsb
les
push
mov
imul
je
ret
outsl
jns
jmp
movsb
dec
lcall
in
push
out
data16
dec
add
mov
adcb
fldz
adc
xchg
repnz
mov
cmpb
push
insl
pop
lods
cmp
dec
js
aaa
outsb
das
sahf
mov
gs
cmp
popa
je
orl
dec
mov
xor
mov
cs
add
dec
mov
mov
push
ret
imul
sub
jbe
jne
jnp
bound
add
loope
mov
push
push
lcall
fnstsw
adc
lcall
add
aas
loopne
pop
xorb
aaa
leave
mov
mov
mov
and
pop
cltd
push
dec
mov
aad
movsl
or
adc
and
jecxz
pop
inc
xor
pop
es
decb
js,pt
cld
pop
dec
shlb
push
add
lsl
cmp
repnz
xor
test
push
out
xchg
scas
pop
cmp
ror
imul
xor
jmp
jle
pop
nop
in
jmp
out
mov
push
aaa
xchg
adc
pop
test
dec
xlat
mov
cwtl
xor
arpl
punpckhbw
fnclex
ss
mov
lods
and
cmp
addr16
dec
jge
ja
dec
sbb
ret
fwait
sahf
add
mov
push
adc
fiaddl
lds
repz
in
pop
pop
subl
xchg
and
fistps
icebp
outsb
lods
fdivl
cvtdq2ps
mov
sbb
shr
push
bound
fstps
push
push
lcall
movsl
mov
mov
jnp
cmp
jle
enter
add
mov
adc
sub
frstor
sub
lea
sahf
push
xor
jns
les
pop
inc
dec
fsubrs
push
outsb
push
mov
sbb
push
dec
pusha
dec
negb
les
or
push
sarb
into
add
sbb
pushf
cmp
add
mov
inc
xchg
leave
adc
push
in
andl
test
cmp
in
push
mov
int3
inc
movntq
jbe
and
mov
push
in
bound
pop
sbb
bound
or
push
xchg
hlt
popf
adc
ss
loopne
mov
aaa
mov
inc
push
clc
push
ds
pop
lds
fistl
push
push
push
xor
iret
dec
out
inc
mov
jle
add
into
jmp
jns
sub
fildl
cld
and
xchg
fwait
cvtpi2ps
imul
inc
shlb
mov
lret
cld
js
lret
pop
xor
mov
inc
adc
jae
stos
add
cmp
addr16
pop
out
inc
outsb
pop
mov
jle
loope
push
int3
scas
cmpsb
lea
xor
pop
mov
sub
sahf
pop
jo
dec
cmpsl
pusha
pop
nop
das
dec
fsubs
sbb
mov
or
addr16
orl
or
loope
pop
repz
push
in
test
inc
jae
repz
arpl
and
inc
fstpl
mov
mov
loop
jecxz
test
aaa
xchg
cmpsb
mov
in
mov
inc
pop
or
mov
mov
ss
in
mov
ret
mov
push
mov
cltd
jg
dec
test
test
push
pop
jne
jne
lods
nop
or
sbb
stc
add
dec
cmp
addr16
or
push
call
push
imul
ljmp
outsb
xchg
add
repz
addr16
pop
sub
jle
mov
sbb
in
add
hlt
fistl
ret
sub
ror
addr16
sub
xor
jmp
dec
leave
pop
movsl
dec
cmc
sahf
shr
jle
mov
fistpll
repz
repnz
cmpsb
cmpsl
ret
or
arpl
sub
jnp
ss
lret
out
int
jae
mov
mov
in
push
mov
mov
pop
push
sbb
dec
sbb
jl
pop
xor
dec
push
pop
sbb
ficoml
pop
loope
insl
aam
sahf
xchg
mov
mov
mov
pop
sub
cmp
std
sub
mov
jnp
insl
fwait
les
cmp
xchg
ret
mov
xor
ret
jl
jecxz
aaa
fildl
negb
loopne
clc
outsb
fcmovnb
add
test
aad
cmp
inc
jbe
orb
mov
xchg
clc
dec
pushf
pop
pop
mov
inc
lea
xor
repz
mov
add
xchg
in
js
notb
inc
test
push
call
imul
inc
mov
xor
add
sub
dec
movsl
add
leave
jo
pop
les
bnd
decb
pop
subps
inc
mov
sbb
push
std
imul
icebp
push
enter
push
mov
jae
add
mov
dec
or
mov
cmpsb
popf
xchg
add
test
icebp
stc
mov
adc
fdivrl
loope
ds
jecxz
mov
icebp
outsl
in
movsl
pushl
out
dec
dec
je
leave
jnp
loopne
push
jecxz
inc
in
push
daa
js
imul
cmovne
push
add
mov
popa
pop
adc
cmpsb
xchg
jae
or
or
sub
fstps
mov
mov
mov
int3
out
mov
mov
jae
aaa
arpl
inc
sbb
in
mov
addr16
ds
mov
leave
or
inc
mov
lret
mov
stos
popf
repnz
jecxz
in
jo
rcr
mov
mov
cmp
mov
cmp
jbe
xor
cwtl
dec
les
hlt
in
xchg
outsl
int3
pop
lods
int
or
movsl
adc
mov
dec
dec
dec
pop
rorb
mov
ret
test
lret
test
mov
or
and
in
aad
jl
je
pop
sbb
cli
movsl
xchg
enter
and
mov
arpl
and
loopne
cs
xchg
sbb
sbb
dec
cmp
push
cmpl
ss
push
fdivp
hlt
outsb
repnz
mov
aam
sbb
imul
fldenv
into
adc
imul
loope
jbe
sbb
adc
or
bound
arpl
sbb
jno
int
repz
push
jmp
test
ja
sarb
rcrb
fidivrs
rclb
sub
pop
xchg
jo
pop
pop
inc
xor
mov
sti
mov
pop
fidivs
outsb
fnsave
jecxz
dec
rcrl
lcall
fsubl
ja
iret
jecxz
mov
ljmp
lcall
lret
xchg
cmp
mov
push
int3
pop
vmulps
mov
jae
jns
jb
out
mov
mov
ret
fmuls
call
push
jg
loope
pop
rcrl
jg
jae
pusha
mov
imul
out
push
cmp
jnp
insl
lods
add
scas
adc
rorb
inc
push
js
push
inc
adc
es
fsubs
stos
sbb
lds
sub
push
shr
andb
sbb
sbb
cld
mov
sbb
lock
mull
or
jle
popf
dec
pop
fcoml
pusha
mov
ss
jnp
aam
jle
or
cmp
push
int3
mov
frndint
pop
pop
icebp
push
arpl
cltd
test
jmp
xchg
and
lret
imul
adc
outsb
ja
pop
stos
movsb
xchg
push
dec
fbstp
mov
add
icebp
push
xor
dec
push
popa
dec
sbbl
or
ljmp
sbb
enter
mov
mov
xchg
sbb
mov
cmp
aaa
jnp
mov
xor
test
push
lock
mov
inc
jle
inc
imul
cmp
xor
adc
sbb
imul
mov
adc
out
xor
jno
cmpsb
cmp
aam
movsl
pop
in
pop
fisttps
sub
jb
pop
push
jae
add
lret
jg
sahf
aaa
int3
xchg
adc
inc
push
mov
mov
repnz
push
call
nop
mov
fbld
in
enter
cmp
and
outsb
mov
pop
and
paddusb
insb
mov
enter
or
enter
nop
les
add
adc
dec
les
dec
sbb
sbb
hlt
in
inc
bound
inc
jle
call
xchg
out
scas
add
arpl
mov
pop
pop
cmp
fimuls
mov
add
subl
leave
ret
mov
jle
fistps
icebp
lcall
dec
push
xorl
inc
xorb
xchg
cmp
in
fbstp
dec
popa
xchg
mov
test
dec
mov
jle
adc
sbb
push
pop
jg
addr16
push
faddl
dec
xchg
mov
sbb
sti
pop
stos
lods
cwtl
testl
xchg
mov
js
sbb
je
jb
adc
and
aaa
jmp
adc
addr16
out
add
hlt
arpl
sti
in
dec
ret
and
and
dec
add
jg
xchg
testl
and
xchg
test
lds
add
xchg
jnp
in
or
or
jae
inc
dec
dec
xor
pop
xor
xchg
fwait
std
std
imul
xor
pop
xor
add
push
int
xchg
out
ss
outsb
test
fsubs
xchg
mov
jb
loope
and
popa
sbb
inc
imul
dec
sub
ja
mov
jo
mov
dec
jns
pop
lods
inc
aas
jecxz
jge
xor
es
ds
incl
loope
cmp
jl
pop
cs
jge
movsb
pop
mov
jnp
test
aaa
cmp
mov
inc
mov
jbe
mov
and
xor
jge
jmp
xor
sub
mov
lds
sti
pop
lds
cmp
shlb
stos
inc
mov
sub
and
cld
push
sbb
sub
mov
or
int3
jmp
js
pusha
fwait
sbb
xchg
aaa
insb
int3
lret
leave
add
movsb
inc
mov
push
jns
mov
ficomps
pop
xchg
shl
jbe
into
push
dec
push
sbb
cmp
loope
in
dec
movb
cmp
in
ror
and
mov
jl
stos
mov
inc
pop
aad
inc
pop
cmp
jb
loop
stos
repz
inc
and
out
repnz
shr
inc
pop
inc
cmc
subb
xor
and
scas
cmp
out
std
jnp
lret
push
jb
outsl
mov
sbb
dec
mov
sub
jecxz
mov
xchg
shrb
int
cli
jmp
in
sahf
fadds
test
or
fwait
pop
das
out
inc
stos
mov
jbe
pop
or
xor
pop
in
xchg
mov
xorl
mov
mov
jne
scas
jle
lods
jae
into
jno
dec
jl
cwtl
jg
inc
xor
sub
or
adc
jno
jp
lods
sbb
or
imul
inc
push
loop
ja
pop
adc
fmull
push
outsb
sbb
dec
add
imul
loope
and
loope
insl
data16
aaa
mov
push
sub
test
adc
and
push
add
scas
lea
aaa
icebp
hlt
js
das
ss
cltd
hlt
js
loope
out
push
inc
clc
imul
lock
jp
xchg
sub
mov
dec
jmp
inc
jae
aaa
inc
pushf
sbb
push
xchg
jb
mov
and
call
or
and
sbbb
pop
mov
popa
and
test
fiadds
ret
aaa
mov
cmp
aam
jnp
cmc
dec
xchg
repz
xor
xorb
stc
test
addr16
mov
lock
push
in
aaa
xorb
outsb
push
jns
add
insl
loope
hlt
gs
xor
in
dec
sub
inc
bound
pop
gs
dec
pop
ret
cmp
nop
inc
das
inc
stc
push
int
cmp
loope
in
jb
ret
jge
push
stc
lock
inc
loop
loope
aaa
aam
cmc
stos
jne
pushf
pop
lods
imull
jmp
lcall
fiaddl
jp
xor
rcll
dec
lret
rcrb
stos
pop
scas
bnd
stos
insb
in
pop
out
je
push
mov
jmp
fcmovnbe
cmpsl
mov
adc
push
sbb
push
push
daa
cmpsl
ret
pusha
and
notl
adc
xchg
fcoml
stos
sbb
mov
dec
push
push
in
hlt
jl
into
lcall
dec
movsb
insb
jo
pop
sahf
dec
and
pusha
mov
or
test
mov
cli
xlat
mov
in
cmp
xchg
dec
cmc
jnp
add
scas
dec
dec
dec
rclb
pushf
sahf
sbb
cs
cmp
mov
mov
fwait
lea
imul
lcall
or
stos
into
insl
sub
xchg
mov
fmul
jge
or
jecxz
push
push
pop
outsb
pop
mov
in
jno
outsb
xchg
cs
in
mov
mov
out
pop
add
sub
icebp
inc
xchg
aad
inc
les
jne
stos
mov
lods
clc
mov
pusha
bound
xchg
ret
mov
loope
outsl
xor
cmp
popa
cmpsl
clc
and
xorb
mov
stos
aas
popa
movsl
mov
into
fistps
push
jns
sbb
xor
jle
xchg
test
sub
mov
daa
sahf
popa
mov
sahf
sbb
fistpl
pop
stos
mov
data16
loope
repnz
cmp
push
popf
outsb
xor
pop
jl
dec
jns
add
xchg
fdiv
mov
sbb
popf
in
or
xor
jnp
popf
aaa
add
mov
sbb
push
cmc
rcrb
push
pop
fs
in
mov
cmpl
push
call
mov
mov
cmp
int3
cmpsb
insl
cmp
or
pop
addr16
imul
adc
push
mov
repnz
mov
xchg
enter
adc
pop
add
popa
leave
and
mov
inc
out
jle
sbb
std
sbb
outsl
push
ret
imul
cmpsl
loope
pop
pop
jge
lods
push
inc
jecxz
icebp
dec
gs
in
lea
movsb
sub
ss
hlt
daa
aaa
lock
push
push
cmpsb
push
lods
insb
in
mov
lcall
jo
cmp
xchg
mov
cmp
dec
mov
fildll
cmp
movsl
xor
out
jnp
xchg
sbb
jl
dec
push
push
inc
fwait
mov
sbb
fcoml
and
fwait
jmp
and
dec
add
mov
cltd
sub
das
xor
hlt
jae
mov
or
popa
cmp
mov
cmp
and
xchg
or
lds
mov
sbb
into
mov
dec
pop
pop
fmul
aam
xchg
jb
bound
insl
scas
mov
fsubs
pop
cs
sbb
jns
inc
dec
leave
fwait
jb
repnz
jbe
push
ss
mov
jae
in
mov
stos
pusha
mov
loop
jo
and
dec
clc
sub
inc
or
xchg
popa
idivb
mov
pop
aaa
pop
cmpsl
adc
cmp
jle
sbb
mov
sahf
bound
aaa
into
shll
pop
mov
inc
push
lods
xor
fstl
cwtl
jle
jmp
xor
cmpsb
mov
dec
and
mov
ljmp
sbb
outsb
cltd
aaa
pop
mov
ret
test
mov
stos
scas
adc
dec
fwait
mov
xor
pushf
addr16
dec
jbe
negl
mov
mov
js
icebp
scas
dec
inc
js
test
mov
sahf
mov
out
dec
pushf
fbstp
jae
push
or
lock
movsl
fiadds
out
push
pop
dec
mov
push
jg
lret
bound
daa
jnp
jne
mov
and
inc
popl
fsubrs
movsl
repnz
ret
int
dec
and
jo
inc
pop
lods
orl
pop
jnp
pop
loopne
call
cmp
push
jge
lahf
xor
ret
scas
xchg
mov
jbe
enter
aam
outsb
sbb
push
mul
lcall
out
adc
sbb
dec
aam
ret
sbb
cmpsl
clc
adc
repz
in
in
ss
mov
mov
movsb
sbb
aam
xchg
inc
pop
inc
aaa
ss
loope
cmc
aaa
scas
push
add
mov
pop
mov
push
jne
xor
dec
sbb
aad
and
cmp
mov
fbstp
inc
mov
test
bound
ljmp
les
fbld
mov
imul
jmp
loope
lahf
add
test
stc
jne
outsl
sbb
mov
fnsave
push
popa
scas
iret
pop
repz
adc
stos
xor
mov
sar
xor
movsl
call
xlat
push
pop
popf
cwtl
outsl
mov
sbb
jbe
lcall
pop
push
jg
pushf
insb
fisttps
lret
pop
xchg
add
adc
scas
nop
mov
pop
xchg
push
iret
aas
pop
mov
sub
push
pop
mov
xor
xor
pop
lds
notl
mov
sbb
mov
fwait
fwait
insb
cmp
jg
xor
pop
adc
xor
sbb
fwait
xchg
dec
add
inc
sahf
enter
adc
cmp
pop
js
mov
ja
xor
in
ds
faddl
rcrb
adc
std
mov
pop
bound
pushf
dec
mov
push
inc
cld
iret
and
pop
adc
inc
push
lock
inc
in
in
and
rcll
mov
and
mov
mov
subb
aas
mov
mov
xor
shr
add
xchg
lea
shrl
cmp
enter
gs
inc
and
sahf
sbb
les
sahf
ja
mov
idiv
sarb
dec
popl
loop
jb
pop
imul
stos
inc
push
cmp
mov
test
xlat
mov
aad
movsl
sub
add
cld
dec
lret
or
fadds
pop
mov
jb
pop
sbb
jnp
xchg
fs
mulb
das
jl
cltd
scas
into
xchg
jg
xor
mov
adc
push
inc
enter
cwtl
aam
orb
sub
std
ja
xor
insl
cmp
push
mov
push
icebp
lcall
adc
xor
ljmp
cmp
dec
push
loopne
std
lret
shl
repz
mov
addl
mov
sbb
rcrl
es
outsb
jbe
insb
pop
cli
lahf
ret
in
fsubrs
pop
pop
pop
stc
out
push
jno
ss
rcll
jne
out
adc
cmp
data16
scas
movsl
jb
pop
push
sub
stc
in
jo
out
aas
push
mov
sub
out
fsub
leave
fwait
pop
pushw
and
cs
popa
sti
daa
add
sbb
sbb
rcll
cltd
jne
inc
in
shlb
movsl
imul
in
insl
lcall
xor
enter
popa
scas
pop
cmp
inc
fstpl
add
ljmp
ss
pop
data16
jb
push
mov
push
cmp
pop
dec
push
or
xor
lcall
mov
sbb
pop
stos
loope
mov
pop
inc
and
fs
push
pusha
aas
pop
ds
xchg
push
mov
aam
jae
or
adc
sbb
mov
insb
push
mov
mov
out
push
jne
mov
or
pop
sbb
scas
cmp
dec
xorb
mov
mov
loop
push
inc
test
cld
mov
in
cmp
orl
xor
je
push
test
jnp
dec
fstpt
mov
dec
in
sti
aaa
arpl
lret
cmp
jo
adc
pop
push
stos
pop
pop
and
mov
popf
insl
cmpl
push
lahf
mov
jne
leave
sbb
test
iret
fs
dec
enter
stc
cmp
lcall
ror
xorb
popa
mov
fs
mov
out
rcrl
and
pusha
mov
jecxz
adc
dec
lcall
inc
in
aaa
in
jno
stos
outsl
add
in
push
loop
fisubs
cld
scas
lds
dec
push
pushf
sti
into
fistpl
mov
push
mov
mov
mov
xchg
lods
mov
xor
xchg
clc
cmp
icebp
or
mov
imul
push
push
push
daa
lcall
bound
inc
pop
cmp
cmpsl
in
test
pop
push
data16
xchg
adc
daa
push
fnsave
in
cs
add
add
add
int3
lock
pop
inc
idiv
repnz
loopne
rcrl
push
dec
ror
xor
pop
mov
pop
orl
xchg
inc
xor
out
cwtl
mul
bound
sbb
sub
dec
in
loopne
mov
ficompl
cmp
jne
enter
or
push
dec
aas
cmpsb
mov
rcrl
test
mov
in
xor
add
jbe
push
pop
shl
add
in
test
cmpsl
cmp
ss
test
mov
cmp
out
mov
pop
ja
adc
add
and
movsb
xchg
dec
icebp
mov
fsubr
jg
fwait
sub
sbb
je
cmp
lret
rcrl
sti
cli
dec
mov
dec
mov
fildl
fimull
loop
mov
stos
mov
or
data16
pop
pop
cmpsb
in
or
imul
ss
cld
push
cmpsl
mov
out
movsl
mov
fsubp
and
mov
repnz
jb
ss
cli
decb
add
pop
add
pop
mov
push
jecxz
ror
pushf
mov
xchg
sbb
in
aad
aaa
jae
xchg
ficoml
fcmovnb
mov
movsb
arpl
adc
cld
lea
lret
shlb
loope
sub
pushf
adc
mov
std
std
xor
lret
test
cmc
outsl
fwait
dec
jl
and
mov
es
scas
push
and
adc
push
push
cwtl
inc
push
pop
imul
push
std
sbb
jbe
sbb
xchg
aaa
out
jne
push
mov
pop
jne
fs
fildll
fwait
into
lods
and
pop
xchg
push
cmp
hlt
out
mov
ret
push
jl
add
mov
xor
dec
pop
sbb
or
jb
negb
pop
adc
adc
gs
dec
gs
fwait
dec
xor
addr16
inc
jnp
cmp
sbb
jno
cmp
mov
cmc
pop
dec
sbb
insb
popa
loop
aaa
pop
adc
push
jno
push
adc
push
or
movsl
xchg
jge
mov
jo
mov
sbb
int
xchg
mov
scas
xor
add
add
sahf
or
sbb
xchg
loopne
cmp
cmp
das
and
arpl
stc
test
aaa
scas
mov
xchg
lock
imul
repnz
or
mov
xor
dec
jmp
xchg
sbb
and
movl
fucom
jmp
jle
ss
addl
xchg
lock
cli
adc
dec
mov
xor
mov
sahf
adc
loope
ds
lea
jmp
enter
jg
push
loopne
popa
in
cs
or
pop
adcl
imul
test
subb
loope,pn
icebp
rcrb
pop
and
stc
push
inc
sbb
jle
mov
mov
icebp
xor
outsb
int
dec
cli
rcrl
sbb
fsubrl
inc
pushf
adc
xor
pop
xor
adc
mov
pop
lods
pop
xchg
sbb
aam
ss
mov
out
or
and
inc
xor
insl
dec
sti
xchg
or
sub
xchg
test
fsub
xchg
push
mov
jnp
mov
dec
cmc
mov
jge
xor
adc
jl
add
movsl
sbb
mov
push
xlat
mov
or
add
stc
in
shl
imul
fsub
lea
lcall
fstl
pop
lcall
pop
add
repz
popa
cmp
jge
popf
and
push
pop
outsb
sbb
repz
jmp
xor
arpl
or
pop
repnz
adc
dec
fdivl
cmpsb
jnp
fisttpll
mov
or
cld
push
xor
popf
aaa
pushf
test
xchg
insl
mov
fsts
jo
pop
or
add
add
popf
jle
cmovl
mulb
mov
ljmp
int3
in
jnp
add
mov
icebp
xchg
enter
call
pop
mov
cmp
sub
lods
push
push
jge
fcmovnu
gs
mov
sub
in
jle
cmp
mov
adc
in
cmp
dec
pop
insb
ret
enter
mov
in
test
sub
mov
pop
jle
jl
mov
lcall
fcmovnb
leave
sbb
and
jnp
outsl
inc
test
inc
repnz
jle
cmp
data16
hlt
sub
xor
loope
inc
mov
xor
int
inc
dec
xor
in
pop
adc
adc
cmp
gs
sahf
cli
sbb
sub
xor
inc
test
mov
lea
xlat
cmc
cld
xchg
inc
dec
cmp
pop
fiaddl
fildll
test
mov
and
push
dec
stos
or
addr16
mov
sub
insl
sbb
or
pop
push
jnp
out
cmp
loope
xchg
movsb
scas
mov
rcl
jb
pop
mov
fdivrp
jg
outsl
addr16
dec
imul
insb
xchg
jnp
arpl
fbld
aaa
mov
or
loope
pop
shrl
mov
xchg
into
xchg
fnstsw
mov
cwtl
sbbb
cmp
movsl
je
scas
pop
mov
mov
std
test
ret
andl
mov
mov
mov
outsb
mov
mov
jmp
test
movsl
popf
xor
add
incl
jno
je
push
jmp
xchg
das
imulb
data16
ljmp
push
sub
sub
notb
ds
cmp
fldt
loope
outsb
jle
xorb
fmull
sbb
push
mov
push
push
inc
pop
movsb
dec
sub
mov
es
push
in
test
push
mov
loop
xor
fcoml
aaa
loopne
imul
push
jge
push
cmpsb
xor
pop
pop
sbb
in
movsb
shlb
mov
add
inc
mov
dec
jl
idivb
mov
notl
je
lahf
lcall
cwtl
pop
mov
cmp
movsb
hlt
adc
xchg
decl
xor
jle
dec
pushl
aad
outsb
push
sbb
cmpsb
cmp
dec
gs
adc
sbbl
xchg
adc
xchg
lret
sbb
lret
jae
dec
mov
mov
sbb
loope
or
xchg
push
xchg
adc
add
not
xor
pop
mov
and
adc
pop
call
mov
stc
out
sbb
outsb
lods
or
clc
ljmp
jb
loope
sbb
cmp
pop
negb
cmp
ss
xor
stos
pop
outsb
mov
test
cs
arpl
xor
ss
xchg
outsl
int3
xor
pusha
lea
sete
pop
and
jb
jecxz
imul
loop
cmp
ja
mov
pop
pop
imul
clc
andl
aaa
movsb
fidivl
mov
dec
pop
mov
mov
add
fsubl
inc
push
cmp
push
mov
aaa
dec
and
or
push
xchg
sbb
fdivrs
aam
int3
in
and
in
int3
aam
push
mov
movsl
cld
das
and
fstl
and
shrb
inc
cwtl
popf
stc
into
add
pop
lret
jb
adc
ss
sub
push
in
movq
sbb
jno
outsb
push
dec
aaa
xchg
aam
orb
fidivl
mov
aaa
bound
fs
jmp
in
imul
xor
jbe
or
xchg
jno
push
pop
scas
mov
sub
jle
xchg
cmp
inc
xor
mov
cmpsb
pop
xchg
push
cmp
cltd
add
and
sbb
ret
fld
xchg
and
jg
xchg
ss
iret
sahf
leave
xor
mov
scas
daa
lcall
push
outsl
adc
inc
mov
test
out
dec
hlt
mov
jmp
cmpsl
jg
in
push
jb
add
cmpsb
mov
sbb
lcall
call
push
mov
pop
lock
test
pop
lods
mov
inc
and
ficomps
jmp
cld
pop
ja
pop
jno
loopne
push
dec
pop
fsts
std
ret
arpl
arpl
add
aaa
int3
sub
cmp
jp
cld
adc
js
sub
stc
iret
or
xor
loope
outsb
addl
pop
inc
push
or
pusha
sub
xchg
xor
add
mov
test
shr
adc
mov
stos
mov
ds
lock
pop
sub
into
lahf
sub
lret
cmp
mov
jno
arpl
push
pop
call
fistpl
push
aad
xchg
cmp
test
push
ss
fcompl
cs
rcl
pop
inc
xchg
das
and
hlt
stos
jbe
out
jmp
adc
idivl
cltd
aaa
mov
out
in
testb
movsb
sub
sub
hlt
cmp
sub
sbb
cli
sub
jo
cmc
lahf
cs
or
sbb
fidivrl
lcall
stos
mov
lock
and
pop
mov
stc
add
and
inc
pop
inc
inc
call
xor
sub
and
out
out
jl
fistps
leave
aam
adc
push
xchg
stos
aaa
jecxz
out
lea
cmp
xor
cli
insl
movsl
xchg
sti
out
out
mov
add
jb
pushf
lock
jle
repz
or
aaa
outsb
std
mov
pop
mov
stc
cltd
das
mov
inc
cmp
dec
xlat
mov
loopne
or
fmuls
aad
or
insl
mov
xchg
call
mov
add
fcmovnu
stos
push
push
lahf
jmp
push
iret
inc
mov
pop
into
sbb
das
push
pop
add
jb
lods
pop
cli
mov
mov
and
cmpsl
cli
pop
adc
daa
call
xchg
dec
mov
fldt
jp
xchg
jnp
incb
out
mov
jp
add
xor
cmpsl
icebp
cmpsl
int3
xrelease
jg
xchg
mov
fists
and
sbb
ror
ret
mov
pushf
std
dec
incl
mov
leave
inc
shlb
insl
pop
adc
iret
enter
xchg
in
scas
mov
in
jmp
dec
movsb
mov
xchg
scas
jns
shlb
or
sub
das
push
adcb
sbb
clc
sbb
mov
fsubl
push
arpl
iret
adc
stos
push
dec
sbb
cmp
repz
shl
insb
jmp
sahf
std
popf
iret
cmp
push
inc
sbb
or
je
sbb
out
sbb
std
add
loope
cltd
inc
cmp
mov
stos
cli
out
sbb
pop
mov
xchg
and
pop
jo
fbstp
jns
andl
repz
ja
or
notb
push
sahf
sbb
inc
mov
add
adc
hlt
loopnew
shlb
stos
fnsave
mov
pop
cmp
xchg
popa
and
cmp
jg
inc
mov
inc
cmp
inc
loop
outsb
mov
inc
push
push
jl
jle
xlat
mov
int3
lcall
adc
gs
icebp
and
xchg
push
frstor
inc
mov
fisttps
or
or
movsl
push
pop
vprotw
dec
cmp
sub
pop
jp
jae
popa
cltd
mov
stos
scas
push
and
data16
nop
xchg
lods
mov
xchg
pop
pop
cld
ljmp
mov
inc
push
xor
lcall
lods
insb
outsb
mov
adc
cmpsl
loope
push
sbb
in
jo
loop
pop
sbb
arpl
faddp
fwait
int3
ret
enter
push
sbb
sahf
or
jne
pop
mov
jl
lcall
ljmp
call
adc
nop
inc
add
ds
sub
pushf
pushf
rcr
pop
cmc
imull
cmp
jne
pop
std
mov
fbld
pop
mov
test
ftst
push
ret
gs
in
sbb
rolb
add
mov
cmpsb
pop
pop
xor
cmp
imul
cmpsb
into
xchg
enter
mov
push
into
addr16
stos
jle
js
xchg
movsl
mov
iret
cmp
fsubs
and
loope
adc
mov
sub
aaa
jne
bound
jo
loope
xor
das
sub
add
testb
outsl
jb
aaa
shlb
jns
sub
xor
sahf
int3
add
ss
scas
mov
mov
and
repz
and
orb
testb
mov
sub
mov
or
sbb
sbb
dec
sbb
enter
fists
mov
dec
mov
mov
jecxz
aaa
into
ljmp
sub
xor
sti
mov
push
xor
hlt
cld
push
rcrl
mov
dec
loop
pop
and
lea
dec
add
cmpsb
sub
jbe
dec
xor
or
pop
rorl
in
aam
rorb
and
mov
lock
roll
mov
xor
bound
xchg
add
cli
jbe
dec
fcomps
cmp
arpl
aam
pop
pop
inc
xor
flds
or
and
scas
nop
jno
in
adc
mov
or
setns
cmp
mov
sub
xor
stos
mov
repnz
jmp
stc
fcompl
jae
daa
pop
out
cs
jne
pop
push
nop
lahf
add
or
push
mov
test
push
in
loope
in
sub
pop
add
into
cld
pop
das
mov
in
in
ja
aaa
movsl
jl
call
xor
loopne
adc
repz
push
push
es
push
adcb
pop
jno
jle
shll
jmp
cli
cwtl
fimuls
fs
cmp
dec
rorb
mov
ret
scas
xchg
add
int
dec
push
mov
or
stos
pop
std
jb
leave
dec
popa
cmpsl
frstor
add
sub
push
fninit
xchg
outsb
cmp
dec
int3
and
loop
dec
adc
cmp
mov
mov
mov
lret
lret
addr16
loopne
cwtl
pop
jmp
adcl
lret
xchg
in
adc
cmpsb
inc
push
dec
sarl
ljmp
addl
push
jge
cmp
lods
jp
mov
out
and
adc
push
stos
ret
test
sbb
negl
or
jne
aaa
jecxz
loopne
or
pop
cs
push
stc
cli
mov
out
adc
fldcw
je
stc
fldl
call
in
and
and
sti
js
out
jbe
sbb
adc
ss
jle
xor
lea
stos
push
popa
ret
inc
aam
data16
fidivrs
sbb
pusha
jg
pop
inc
imul
les
and
pop
dec
ret
ss
aaa
popf
lcall
adc
js
jecxz
jmp
xor
sbb
jno
sub
adc
dec
pop
adc
mov
mov
sub
push
inc
jmp
add
clc
sbb
xorl
pop
mov
pop
dec
mov
pop
cmp
push
cltd
push
jmp
lods
mov
cmpb
lret
jg
mov
or
inc
movsl
insl
pop
gs
jge
sbb
jle
pop
dec
or
lods
push
mov
aaa
jb
inc
cmpsl
and
xorb
xlat
dec
in
sbb
sbb
or
rcrl
push
mov
out
loope
jnp
jge
nop
jmp
pop
sbb
aas
adc
imul
into
xor
pop
mov
sti
dec
outsb
lock
xchg
int3
movsl
sbb
fwait
pop
jnp
jno
fwait
xchg
inc
rcrl
rol
pop
std
mov
mov
pop
scas
lcall
ss
sub
sbb
push
rorb
imull
sbb
inc
std
or
and
je
pop
sahf
faddl
xchg
push
sub
jae
jle
popl
sub
movsl
adc
jp
cmp
outsb
pop
xor
cmp
stos
lret
push
in
xchg
mov
ret
mov
clc
xchg
or
push
scas
es
mov
cmp
bound
adc
dec
jp
cmc
out
loope
or
and
aaa
decb
inc
pop
inc
or
repz
cltd
cmp
xchg
pop
scas
popa
push
sbb
js
lods
mov
mov
push
jb
fsubrl
imul
in
or
pop
cmp
inc
cmp
lds
orb
ret
pop
lock
ljmp
aam
xor
mov
rcr
jle
cmc
add
mov
movsl
sub
stos
cmp
pop
jle
fcompl
sub
mov
cld
pop
aaa
mov
cwtl
out
into
aam
pop
lahf
or
fcoms
stos
movsl
jno
icebp
rorb
jge
pusha
adc
push
mov
aad
ss
es
xor
pusha
cmp
push
sbb
aad
das
mov
sub
mov
mov
data16
pop
mov
sarl
paddq
jle
nop
push
cmc
push
pop
std
or
fbstp
dec
jno
arpl
es
push
addl
icebp
mov
ret
movsl
xor
in
pop
push
cmp
xlat
stos
sbb
sbb
popa
dec
cmp
jp
sbb
mov
push
imul
push
or
mov
jnp
loope
sbb
pop
aam
jno
mov
pop
sub
jo
sbb
adc
pop
nop
pop
fwait
or
sbb
fdivr
cmp
test
mov
andl
lahf
jo
jp
ljmp
sbb
int3
push
leave
dec
xlat
std
les
or
jle
xchg
jle
pop
aaa
adc
dec
add
jne
hlt
xchg
pushf
stc
xchg
aam
or
std
jle
push
jge
lock
mov
call
test
fnstsw
arpl
int3
call
inc
out
jl
lods
scas
bound
pop
iret
xor
adc
cmp
mov
ret
insl
in
inc
enter
and
sbb
mov
loopne
nop
scas
pop
or
xchg
scas
pop
aas
mov
mov
cmp
or
xor
push
sbb
xchg
xchg
adc
dec
mov
adc
mov
js
mov
cmp
repz
lods
mov
mov
mov
shll
repz
xchg
fsubrl
push
enter
out
data16
mov
jle
ret
imul
loopne
negl
jg
into
bound
xlat
clc
popf
cltd
test
ret
xchg
jp
sbb
js
and
sub
out
insb
pop
rclb
cltd
sahf
jge
enter
loopne
mov
shlb
lock
mov
incb
aad
fwait
not
movsl
nop
cmp
sub
aaa
add
dec
cmp
xchg
mov
xor
loope
rcrb
adc
jl
mov
dec
sbb
push
mov
and
mov
jmp
mov
mov
lods
movsl
push
divl
push
add
aam
cmp
xrelease
mov
jge
movsl
cmp
and
mov
ljmp
cmpsb
inc
pop
adc
sbb
fwait
xor
jle
sbb
xchg
loopne
std
xchg
jno
fildl
add
movq
push
and
mov
shl
or
jle
pop
xor
sarb
scas
adcb
jle
sub
cld
sub
repz
in
xchg
inc
hlt
popa
sbb
ret
sarl
pop
push
loopne
push
push
inc
jns
fnsave
adc
sahf
cmpl
xor
mov
jne
pop
test
inc
push
addb
gs
mov
push
sahf
int
fldcw
out
inc
arpl
cwtl
loopne
cmp
push
mov
mov
pop
loopne
fnstcw
sub
mov
hlt
mov
cmp
aas
sub
in
sbb
push
mov
lock
jns
lret
add
fsubs
mov
bsf
cmp
xchg
and
rsm
test
xor
mov
push
mov
std
pop
jle
loope
cmp
in
das
pop
xchg
mov
sahf
adc
add
repnz
push
xor
cmp
or
inc
mov
loopne
popa
push
fwait
lea
and
ljmp
lcall
out
je
leave
xor
push
add
sbb
fld
push
subb
jecxz
nop
fwait
dec
ret
sbb
ljmp
pavgb
outsb
jmp
loope
cld
in
or
pop
sbb
xor
sbb
pop
scas
mov
xchg
mov
lret
mov
add
jp
in
test
or
jmp
fld1
inc
pop
in
push
sahf
arpl
xorb
jp
out
mov
test
bound
arpl
cmpsl
dec
gs
mov
jp
call
insl
push
sub
pop
adc
and
sbb
push
pushf
dec
mov
aad
fwait
adc
mov
and
mov
test
jmp
mov
inc
pop
es
dec
aam
inc
jmp
cltd
jnp
push
cmp
aas
mov
pop
sub
das
pop
sbb
jp
clc
mov
mov
push
subb
std
add
push
sbb
loopne
dec
mov
xchg
jmp
jo
insl
jecxz
jns
xchg
and
iret
sub
or
aas
jg
fs
loope
out
dec
aaa
mov
sahf
fistl
in
in
sbb
out
fwait
jae
push
dec
fstpl
xchg
and
pop
divl
and
fdivl
stos
ffree
je
test
push
out
xchg
data16
in
mov
push
mov
cltd
cmp
adc
lods
sbb
add
sub
mov
push
push
jmp
popa
pop
xchg
mov
or
mov
mov
repz
cmp
outsb
pusha
mov
ss
sahf
jbe
jae
rcrb
pop
add
int3
ss
ds
sub
push
lret
inc
jp
loope
daa
std
and
xchg
inc
mov
pop
cmp
out
xchg
sub
shl
pusha
iret
sbbl
sub
ja
push
pop
sbb
and
je
je
pop
insb
mov
xchg
nop
nop
sbb
add
xor
cmp
xchg
in
loop
rcr
jno
arpl
add
adc
rclb
push
hlt
pop
andb
inc
sub
adc
sbb
jmp
loope
sbb
lahf
jbe
or
adc
and
mov
loop
xchg
mov
cmpsb
ja
xorb
repnz
and
xor
fs
mov
inc
inc
push
stc
add
sub
adc
xchg
jb
sbbl
stc
loopne
jnp
sbb
adc
lods
js
mov
cmp
pop
or
lret
add
call
mov
cmpl
rorb
jb
mov
cmp
sub
or
xchg
mov
dec
popa
cmp
in
adcb
xor
lds
sub
scas
lds
sbb
cli
dec
push
ss
xor
aam
sbb
mov
rol
loopne
out
scas
push
in
inc
mov
mov
push
enter
mov
gs
pop
in
cli
test
cmpsl
jl
jle
pop
mov
movsb
mov
enter
sahf
pop
jle
lock
xor
jg
mov
lea
dec
lds
jno
cld
pop
sbb
testb
add
into
xchg
jecxz
cmpsb
loop
outsb
xchg
push
adc
test
xor
insl
lahf
xchg
stc
lods
dec
pop
jmp
mov
sub
dec
fwait
cmp
mov
sub
imul
xor
mov
dec
gs
je
imul
and
in
mov
or
cmp
mov
nop
hlt
imul
or
lea
fimull
arpl
mov
repz
loop
mov
mov
in
xchg
pop
mov
clc
movsb
mov
loop
push
mov
mov
add
pop
inc
push
jp
ss
insb
jbe
xlat
inc
insl
lods
pop
xchg
mov
adc
inc
shr
in
cli
jp
fs
sub
popf
lea
lds
cli
sti
add
popf
jg
mov
sbb
outsl
sub
mov
imul
lods
bound
cltd
outsb
lea
sbbb
push
jge
pop
push
or
iret
mov
fmul
loop
in
xchg
sbb
mov
mov
lods
fstp
lahf
dec
add
push
repz
cmp
lock
adc
arpl
sti
icebp
jecxz
orl
sub
setns
repz
push
enter
pop
sub
mov
inc
pop
pop
dec
je
aaa
enter
xchg
insb
and
or
mov
icebp
nop
pop
push
dec
xchg
lret
leave
add
popa
mov
push
sarb
xor
jp
cmp
mov
out
mov
mov
mov
cld
nop
mov
xchg
in
gs
sahf
out
icebp
mov
cmc
outsb
ja
or
push
inc
pusha
test
ds
lret
cwtl
rorb
in
in
jns
jp
sbb
push
or
int3
mov
lret
inc
mov
ds
xorl
dec
fsubrl
test
cmp
aaa
in
daa
cmpsl
fistps
cld
xor
in
cmpsl
mov
jb
pop
cmpsb
rorb
insl
imul
jp
aaa
mov
loope
icebp
mov
push
xchg
xchg
xchg
push
lods
es
or
add
cwtl
mov
rclb
ds
divl
test
aaa
in
lods
call
shlb
cltd
mov
sbb
adc
jle
dec
loopne
cmc
sub
add
pop
jl
std
push
push
test
push
xor
lods
adcl
enter
int
popa
sahf
sbb
das
adcb
div
sbbb
lods
pop
hlt
xchg
jg
pop
xchg
pop
pop
pop
jecxz
dec
jl
jae
and
out
es
pusha
enter
inc
or
dec
sub
and
decb
cld
call
lds
add
enter
mov
daa
scas
sbb
and
jnp
and
mov
xor
cmp
sbb
mov
xchg
and
inc
sbb
shlb
mov
sub
jbe
pop
sbb
xchg
and
or
push
add
cmp
movsb
push
inc
jl
scas
mov
je
inc
adc
push
int
test
lret
cltd
pop
mov
repz
jl
jb
sub
or
aaa
stos
push
aas
xchg
cmpb
inc
jg
data16
into
mov
sarb
jmp
mov
sbb
mov
dec
in
shll
notb
lcall
imul
add
fcoml
inc
cltd
mov
ss
jg
mov
push
pop
arpl
aam
stc
mov
mov
and
mov
pop
insl
sti
pop
ss
push
mov
mov
xchg
ss
stos
les
out
xchg
and
inc
dec
or
dec
mov
mov
lock
and
rep
test
and
lods
loopne
jo
push
pop
adc
rcr
mov
loop
aaa
ljmp
iret
cmp
sbb
cmp
pop
cmp
out
adc
repz
scas
rcl
std
pop
mov
mov
outsb
xor
popf
inc
clc
push
adc
jp
test
aaa
clc
inc
sbb
sti
and
inc
lods
fwait
xor
fsubrs
xchg
jl
adc
insb
je
dec
aaa
stos
pushf
popa
mov
ret
popa
jg
xchg
jbe
pop
mov
pop
sub
cmp
sbb
push
rorl
inc
ret
inc
pop
outsl
xchg
and
inc
xor
cmpl
in
pusha
or
cmp
dec
mov
add
rorb
orb
push
sub
cmp
sbb
cmpsb
cmc
loope
dec
cmp
mov
aad
lcall
movsl
mov
inc
mov
insl
jle
push
test
sbb
popf
push
arpl
add
adc
outsb
cmp
pop
leave
mov
icebp
ljmp
push
cltd
cmpsl
rolb
or
sub
aaa
pop
out
adc
push
test
sbb
test
fdivs
cmpsb
mov
icebp
gs
insb
scas
lea
fcompl
mov
lods
aaa
xor
sti
mov
aas
sbb
jp
aaa
fadd
mov
rclb
dec
adc
cmp
mov
sub
fsubs
cmp
lock
mov
cmp
aaa
cmp
out
push
mov
int3
enter
les
xor
dec
xor
loopne
rcrl
lods
mov
sbb
jmp
mov
pop
xor
inc
cmp
push
iret
roll
pop
mov
sub
jo
adc
outsb
add
in
or
push
mov
mov
jp
out
pop
scas
data16
mov
mulb
loope
std
pop
mov
inc
xor
sbb
loope
iret
ds
les
repz
cmc
lret
or
pop
das
sbb
sbb
dec
xor
out
or
lea
sbb
push
das
or
ds
sub
mov
aam
fs
icebp
push
fidivrs
jbe
imulb
ja
add
mov
dec
dec
ret
call
sbb
sbb
int3
push
fists
jmp
flds
add
std
loope
icebp
pop
mov
jecxz
insl
ret
xcrypt-ctr
cmpsl
sbb
xor
ss
lcall
xchg
adc
cmp
pop
pop
jnp
jae
sub
lods
sbb
nop
xchg
add
pop
scas
nop
aas
sbb
sbb
jo
mov
mov
pop
test
loope,pn
insl
out
in
std
pop
add
add
in
dec
sahf
mov
ss
out
cmpsb
jnp
inc
sti
mov
sbb
sbb
dec
dec
mov
mov
bound
dec
pop
xor
and
pop
jmp
jns
jl
fisubrs
fwait
xor
pop
xor
data16
mov
sub
pop
sub
fstpl
xor
bound
pop
inc
ret
cwtl
pop
pushf
cmpl
hlt
std
inc
jno
adc
insl
out
mov
leave
inc
ret
test
adc
hlt
aam
pusha
fistps
arpl
sarb
pop
sbb
add
push
fnop
sbb
into
call
mov
and
mov
pop
aaa
aam
xorl
sbb
lret
dec
les
mov
or
pop
jle
movsl
jecxz
jle
pop
pop
add
sub
aaa
fcmovnu
fistpl
push
mov
cmp
jns
sbb
inc
loop
mov
push
inc
lahf
mov
lods
inc
jp
loopne
or
call
jle
dec
add
jns
dec
mov
pop
inc
mov
add
sbb
sbb
push
pop
sub
out
jge
insb
mov
sbb
lret
jo
pop
mov
mov
mov
hlt
addr16
push
popf
push
ret
push
inc
shll
aaa
clc
icebp
mov
cli
movsb
push
add
sti
aaa
sbb
js
jmp
jns
inc
outsb
pop
ss
and
mov
xchg
mov
fdivrl
dec
mov
je
xor
push
enter
dec
push
pop
ss
jno
shll
sub
scas
in
popa
inc
sti
or
adc
xor
cmp
mov
inc
xor
lret
dec
cld
mov
mov
fisttpll
push
cmpsb
ret
jecxz
xor
xchg
mov
clc
lods
lahf
daa
sbb
cmp
mov
in
xchg
dec
or
jmp
xor
jle
inc
movsl
jbe
xchg
mov
faddl
inc
popa
cmp
ja
jb
mov
adc
stc
lods
sub
add
in
add
dec
xchg
cmp
sbb
mov
fistpl
test
fstl
dec
cmp
mov
and
sbb
xlat
pop
mov
jne
jns
jp
xorl
jns
push
loop
push
jl
xor
aaa
sbb
mov
or
push
psraw
sar
imul
and
imul
jae
out
fs
push
add
fisubl
sub
mov
jp
cmp
or
cmp
jp
in
jae
int3
lret
xchg
or
inc
mov
cmpl
lea
and
in
cltd
shr
arpl
in
inc
add
fwait
adc
adc
addl
dec
xchg
fndisi(8087
cmp
dec
mov
lods
inc
pop
lret
add
inc
jne
cmpsl
cmp
js
aaa
sub
push
lock
sbb
icebp
xchg
enter
xchg
imul
std
in
lock
dec
mov
adc
outsb
insl
in
arpl
and
lahf
jb
push
jb
pop
mov
mov
imul
push
fucomi
fadd
pop
repz
test
sbb
and
hlt
int
inc
cld
xchg
cmp
xchg
pop
adc
mov
xchg
inc
fs
jl
inc
sub
outsb
ficompl
mov
dec
jle
xchg
cmpsl
mov
or
das
inc
xchg
xorl
das
and
test
inc
scas
fcmovnb
sbb
je
movl
iret
jl
mov
cmp
cmc
pop
xor
stos
xchg
jno
jecxz
xor
in
add
add
aam
jmp
adc
pop
jo
idivb
or
arpl
add
shl
js
pusha
cmpsb
push
add
mov
pop
and
mov
jbe
sub
sahf
sub
mov
out
mov
mov
dec
push
xchg
push
into
pop
bound
aam
leave
mov
fsubr
stos
js
add
rol
xchg
or
ja
dec
adc
xor
xor
lock
rcll
sbb
icebp
out
jmp
insl
mov
pop
scas
lods
call
push
popf
icebp
add
xchg
lret
xlat
das
push
sbb
or
out
arpl
xor
lahf
mov
sub
mov
ss
inc
inc
push
ret
xchg
aas
arpl
inc
and
mov
pop
jbe
test
mov
ja
mov
int3
cmp
mov
je
popf
xchg
sub
dec
sbbb
cmpsl
mov
adc
pop
dec
shll
gs
push
aad
jns
pop
jo
add
jp
cmc
pop
pop
sub
lods
pop
pop
jmp
and
in
iretw
sub
push
xor
mov
fscale
sbb
cmp
stos
sahf
pop
bound
pop
pop
cmp
test
mov
or
sbb
ja
icebp
jmp
pop
fs
mov
xchg
fs
mov
int3
out
jmp
inc
dec
mov
pop
in
nop
xchg
insb
ret
lcall
out
sbb
mov
mov
push
fcoml
aaa
fstps
imul
xor
jb
rorb
and
cmp
jp
js
sbb
jmp
icebp
xchg
mov
mov
loopne
insb
pop
dec
xchg
orl
sbb
les
pop
test
das
aam
into
jg
data16
aas
xchg
adc
sub
nop
pusha
dec
bound
sbb
mov
mov
aaa
movsb
ror
cmp
or
bound
in
aam
scas
pop
add
cld
mov
xchg
lahf
cmp
inc
pop
mov
pop
mov
adc
faddl
cmpsb
fsub
pop
and
dec
outsb
aas
pop
add
sbb
fcmovnu
push
inc
adcb
loope
dec
mov
fistpl
bound
sub
add
ja
cmp
jo
add
pop
insb
push
ret
xchg
jge
jo
jp
outsb
iret
sbb
mov
mov
test
inc
fildll
sbbl
mov
push
add
sub
cli
push
adc
mov
mov
imul
mov
xlat
push
sbb
xor
mov
out
inc
fisttpll
stc
shlb
inc
jb
sub
test
pop
pop
xchg
das
add
adc
sbb
addr16
xchg
and
jbe
push
jmp
aaa
push
pop
les
mov
mov
xchg
loopne
aad
jmp
inc
pop
inc
dec
fcompl
jne
xlat
or
scas
pop
icebp
int3
cmpsb
or
pop
lea
pop
xchg
adcl
loope
mov
pop
test
and
mov
js
clc
jo
inc
mov
lcall
mov
cmpsb
pushf
xor
orb
mov
pop
push
sbb
xchg
ds
data16
pop
loop
mov
sub
push
daa
dec
out
cmp
jp
push
rcll
mov
addr16
fsub
pop
js
and
call
dec
mov
jl
sbb
stos
nop
call
push
sbb
pop
clc
push
sbb
test
das
sbb
xor
call
mov
or
pop
enter
sbb
enter
sub
fwait
nop
aaa
aam
mov
lret
mov
in
pop
jne
out
test
xchg
lret
es
dec
leave
rol
inc
and
dec
or
pop
inc
mov
inc
jmp
push
fmuls
das
add
push
lret
inc
xor
andb
pop
popa
lret
movsl
stc
adc
fistpll
bound
sbb
jno
loope
jb
nop
jo
cmp
adc
pop
sti
aaa
mov
shrl
xor
inc
and
hlt
lcall
adc
xlat
push
mov
add
shll
or
inc
aaa
pop
cmp
idivl
sarb
and
ret
push
lcall
inc
mov
notl
inc
test
bound
mov
dec
dec
push
rorb
pop
outsl
jne
fld
pop
jno
jecxz
call
shll
in
aad
shr
or
inc
pop
das
in
gs
enter
pop
pop
pusha
pop
jecxz
inc
inc
adc
push
stos
insl
data16
jo
lahf
test
jne
pop
mov
sbb
cmp
mov
xchg
cmpsl
pop
sbb
pop
arpl
sbb
roll
xchg
scas
clc
jmp
aas
addl
mov
loop
inc
cltd
aas
stc
pop
loope
pop
or
pop
movsb
pop
fidivrs
add
ja
cli
aaa
mov
and
and
sbb
jo
jae
mov
repz
nop
and
mov
iret
sbb
push
push
xor
cmp
add
push
pop
lods
aaa
jne
aaa
adc
mov
sbb
test
in
insl
pop
adc
pop
outsl
inc
sbbb
testl
mov
f2xm1
pop
mov
jge
or
out
pusha
pop
dec
sarl
repz
dec
pop
xor
inc
cmc
cltd
mov
adc
push
jb
movsb
imul
data16
aaa
shrb
out
test
hlt
out
repnz
sbb
mov
dec
in
push
ja
fsub
sub
fcoms
hlt
add
call
fidivrs
imul
jae
icebp
pop
mov
sbb
and
ror
sbb
adc
cwtl
fdiv
enter
sets
mov
mov
sbb
movsl
addr16
jecxz
mov
cmp
fcmovnu
pop
pushf
aaa
mov
push
add
inc
xor
mov
jo
mov
shll
and
test
lret
adc
int3
scas
insl
lds
xor
cmp
inc
xchg
jb
call
jbe
lret
cmp
js
sbb
arpl
cmpsl
rorb
xor
test
pop
aas
sub
inc
xchg
sbb
xchg
iret
inc
idivb
mov
mov
lret
fwait
fucom
dec
rolb
pusha
test
popf
xorps
xor
inc
enter
dec
in
mov
sbb
xchg
xor
jge
cs
dec
clc
addr16
in
out
stos
mov
xor
pop
call
add
and
lret
outsl
mov
mov
loope
outsb
mov
sti
and
fcoms
cmpsb
lock
cmpsb
adc
pop
sahf
push
push
and
inc
mov
jp
pop
fucomi
adc
xchg
or
add
je
push
fcomip
mov
das
mov
inc
outsb
jae,pn
pop
mov
push
imul
jmp
add
jns
mov
inc
lods
mov
mov
mov
jno
in
mov
adc
push
scas
mov
cmp
xlat
outsl
sub
pop
sub
jnp
push
lock
xor
mov
jbe
lahf
cmp
movsl
in
fists
jle
repz
sub
push
outsb
pop
add
in
pusha
repnz
daa
sub
pop
in
ljmp
in
shll
add
adc
js
push
cltd
pop
leave
and
movb
jbe
addr16
adc
and
test
mov
aas
loopne
xchg
int
aaa
pushf
mov
popf
push
sbb
mov
dec
rcll
movsl
shr
mov
inc
dec
stos
lcall
jle
dec
in
sahf
cwtl
jb
fwait
sbb
iret
jg
push
mov
fbld
out
test
popa
loopne
and
jp
push
push
fsubp
dec
aas
dec
arpl
push
fbld
jae
dec
and
fisttpll
cmpsb
test
sbb
cmp
cmp
push
mov
dec
xor
scas
arpl
pop
push
pop
addb
adcl
mov
test
insb
adc
xor
or
sbb
dec
ret
xchg
enter
arpl
push
and
xchg
push
js
sti
sub
dec
int
adc
test
or
jbe
push
fdivrl
arpl
sub
repz
stos
inc
popf
inc
iret
jae
pop
popa
xchg
mov
loope
inc
cmp
mov
scas
mov
outsb
andb
into
inc
xchg
movsb
dec
lret
aaa
xchg
and
pop
mov
mov
mov
jg
aam
das
or
sbb
dec
jb
aam
xchg
xchg
xchg
push
gs
cmpsl
cltd
push
arpl
add
sbb
pop
out
cmp
pop
inc
andb
dec
mov
adc
pop
arpl
sbb
mov
lret
xlat
sbb
pusha
adc
push
daa
rclb
in
outsb
mov
insb
jno
fisttpll
cmp
shll
pusha
mov
outsl
inc
fnsave
fcomps
xchg
pop
mov
push
inc
out
cmp
push
lods
push
jo
sete
mov
pop
in
xchg
push
sub
mov
fwait
xchg
mov
inc
stc
and
into
push
outsb
or
cmc
sahf
incb
push
icebp
cmp
xchg
ret
mov
jb
cmpsl
int
inc
cmpsl
jle
ret
das
add
in
sbb
push
out
or
xor
pop
push
ja,pn
adc
lods
fists
pop
cwtl
xchg
mov
jae
jmp
out
or
imul
insb
out
cmpsb
jbe
mov
pop
jecxz
or
jg
inc
mov
stos
and
fwait
adc
mov
inc
pop
dec
mov
mov
sti
xchg
or
imul
inc
xchg
movsl
or
mov
lds
fldenv
mov
loopne
pushf
and
leave
jo
push
mov
mov
pop
pop
cvtps2pi
inc
and
and
add
ret
nop
push
dec
clc
and
lea
loop
outsb
cmpsl
or
test
in
loop
sbb
in
cmc
pop
pop
cltd
scas
and
push
jnp
push
iret
inc
aaa
ret
push
fisubl
cmp
inc
iret
jb
adc
push
xchg
dec
adc
sti
add
mov
ja
fs
out
and
shl
mov
pop
jg
cltd
push
stc
and
in
xor
in
pop
into
and
lds
out
call
lock
aam
pop
lret
and
test
pop
dec
adc
popf
scas
xor
inc
mov
mov
repnz
lahf
and
push
iret
sub
mov
push
pop
xchg
mov
lea
scas
inc
subl
shll
inc
mov
push
jne
sub
bound
pop
mov
pop
mov
and
adc
pop
cmpsb
sub
xor
cmp
inc
sbb
mov
mov
test
mov
pushf
mov
lods
loop
jnp
push
ds
mov
inc
xchg
mov
dec
subb
mov
ds
jb
cmp
rorb
lock
cli
imul
out
mov
xor
sub
stc
imul
negb
insb
fs
and
push
pop
adc
lock
adc
pusha
cltd
push
or
je
sbb
mov
popf
popf
mov
pop
sbb
lds
and
dec
aam
push
lret
or
xor
cmpsl
mov
inc
pushl
sbb
push
cltd
sbbb
hlt
sub
sbb
cmpsl
jns
pop
pop
push
sub
cmp
outsl
fisubl
mov
out
pushf
lds
popa
push
jne
popf
pop
push
pop
or
and
jl
mov
mov
ret
jecxz
adc
pop
ret
push
cs
aaa
or
stos
or
mov
mov
stos
shll
mov
pop
insb
filds
stos
imul
pop
cltd
popf
pop
dec
imul
sahf
imul
push
lea
bound
push
fnstenv
mov
pop
adc
sti
jg
jle
pop
sub
sahf
stos
mov
repz
jbe
in
gs
pop
push
or
cmp
test
sahf
xor
fwait
sub
and
test
sub
lods
iret
sbb
cmp
test
and
add
push
and
cmp
xor
nop
mov
test
jae,pt
hlt
aam
mov
cmc
imul
je
sbb
add
pusha
out
fwait
xor
aaa
shl
fiadds
fneni(8087
jns
ret
loope
scas
lea
mov
mov
lahf
sub
insb
push
cmp
insl
and
in
test
cwtl
sub
xchg
pop
inc
or
mov
dec
push
mov
mov
in
cmpb
pusha
sbb
jb
rcll
lea
in
in
pop
sti
push
imul
push
push
dec
cmp
sarl
fldt
pop
inc
icebp
inc
std
xor
clc
in
stc
or
lods
mov
jns
les
pushl
xorb
pop
and
pop
mov
fcmovnbe
faddl
xor
cld
js
mov
sbb
add
mov
push
mov
dec
rcll
add
in
fldl
sti
mov
dec
std
ds
lcall
push
fisttpl
fmul
repz
imul
xor
int3
aaa
scas
cmpsl
stos
insb
in
repz
loopne
into
xchg
pop
jle
std
dec
mov
push
pop
sbb
lea
mov
push
lods
cmpsl
mov
inc
mov
jnp
lea
mov
ljmp
or
adc
and
jno
pop
stc
in
mov
inc
jbe
adc
cli
mov
js
pop
jns
inc
stc
fnsave
stos
mov
mov
loope
sbb
clc
ds
shrl
mov
loop
ss
aaa
cwtl
nop
dec
inc
adc
into
mov
shrb
repz
nop
lods
data16
mov
cli
push
push
jg
hlt
arpl
mov
in
out
mov
test
add
lods
sub
rolb
outsb
fidivl
jbe
mov
int3
mov
xchg
sub
adc
clc
or
and
xchg
inc
clc
inc
sub
pusha
add
rorb
rol
mov
repz
cmp
mov
ret
in
sub
mov
xchg
in
mov
out
jecxz
dec
sbb
test
addr16
sub
ss
out
por
jmp
sbb
mov
dec
dec
sti
push
xchg
mov
pop
les
sbb
add
hlt
outsb
in
push
push
jle
mov
ret
jg
int
mov
fwait
jns
stos
pop
push
jae
fcmovbe
js
jmp
cs
cmp
daa
mov
mov
pop
fprem
cmp
and
repz
inc
leave
jb
push
sbb
sarb
testb
sbb
popa
pop
mov
cmp
sub
imul
aaa
aam
or
in
push
mov
jle
bound
jge
rcrb
cmpb
js
jl
rcrb
sbb
dec
push
or
mov
pop
jo
popl
dec
sbb
add
sahf
arpl
outsl
xchg
in
cmp
ret
andl
mov
in
pop
mov
fists
imul
jge
jle
xchg
push
and
cltd
jae
addr16
pop
arpl
adc
sbb
pop
sbb
cmp
push
jge
test
outsb
push
mov
cld
ret
pusha
aaa
xor
mov
inc
pop
jle
int3
repz
mov
jecxz
xchg
add
data16
push
cmp
movsb
and
fistpll
inc
push
cli
stc
les
xchg
add
imul
inc
mov
cltd
mov
push
sub
dec
in
mov
mov
repz
loopne
pop
scas
enter
roll
push
jle
xchg
adc
insl
mov
xor
in
aaa
jne
cmpsl
mov
push
jae
push
insb
daa
xor
sub
das
mov
cmpsl
loopne
mov
imul
rorb
push
jb
out
aaa
inc
sti
cmpsl
not
andb
cwtl
js
mov
dec
and
inc
xchg
push
dec
cmp
push
jae
rcrl
jmp
decb
mov
sbb
idivb
out
adc
bound
loopne
shlb
xor
pop
cmc
cmc
lods
sub
dec
outsb
jecxz
mov
xor
outsb
movsl
sub
out
adc
insl
jmp
call
mov
xchg
popl
inc
negb
push
adc
push
inc
push
imul
xchg
ds
mov
xor
mov
push
in
aad
jp
cmp
scas
adc
cmpsl
xchg
cli
lods
push
mov
xchg
dec
mov
mov
inc
lods
xor
jge
mov
sti
pop
sbb
ret
inc
mov
push
inc
sub
inc
fdivs
push
aas
test
mov
mov
mov
pop
jp
aad
mov
mov
fildl
sub
pop
adc
cmpsb
pop
lahf
xchg
imul
mov
pop
push
sbbb
jl
jo
cmpsl
addb
enter
xor
xchg
mulb
fst
and
shrl
xorl
adc
inc
adc
lods
popf
aas
jb
or
outsl
or
pop
loope
mov
inc
fstps
mov
xor
sbb
in
je
cmp
jnp
into
clc
xor
and
sub
inc
xor
jno
mov
lea
jmp
cmp
sbb
mov
xchg
in
and
ss
sub
and
sahf
cs
lods
loope
repz
and
roll
pop
lret
sti
das
inc
lahf
es
pop
jg
aaa
lcall
cmp
shl
imul
aaa
xchg
je
arpl
jg
pop
lea
jmp
mov
popf
popa
dec
and
mov
lock
xchg
inc
test
andl
ds
jmp
xchg
or
cmpsb
sub
cmpsb
pop
ret
sbbl
loopne
je
mov
test
add
ljmp
sti
ret
sub
and
shrl
xchg
icebp
mov
dec
cltd
sbbl
arpl
inc
movsl
bound
jno
xchg
insb
notb
sbb
pusha
loope,pn
loopne
in
xchg
xor
addr16
mov
movsl
cld
and
cmpb
sub
insb
xchg
dec
add
sub
lret
push
cld
arpl
xchg
inc
loope
and
add
outsb
and
or
out
je
xchg
add
push
mov
inc
mov
lods
loopne
add
fsts
mov
clc
push
or
dec
inc
push
pop
aaa
jl
fldl
idivl
push
sub
push
insl
arpl
push
inc
pop
mov
outsb
push
or
mov
cmpsb
sbb
pop
mov
mov
movsb
fstl
and
push
pop
jns
pop
cmpsb
out
enter
iret
mov
movsb
cmp
cmp
dec
cltd
lcall
mov
push
pushf
outsb
sbb
pop
mov
fcoms
cmpsl
into
lcall
int3
scas
and
ret
fistps
dec
mov
mov
cmp
mov
xchg
add
jns
inc
jae
icebp
int
ret
lods
mov
dec
arpl
jb
mov
pushf
fwait
lret
faddl
or
aaa
or
mov
ss
fsts
aaa
movsb
dec
lock
lret
push
xchg
jle
and
les
mov
mov
adc
cmp
imul
in
push
out
mov
pop
mov
mov
pusha
cmp
jns
xor
pop
lret
pop
or
jb
adc
mov
mov
aad
push
dec
sbb
movsb
pop
repnz
push
push
shl
popf
aas
cmpsl
jle
fadds
int3
clc
jno
std
cmp
icebp
in
cmp
pop
jae
pusha
aaa
jmp
mov
jbe
loope
mov
daa
mov
insb
mov
lods
pop
push
jl
aaa
mov
inc
aad
jne
pop
shlb
inc
inc
xchg
sbb
inc
add
sub
pop
cli
popa
ss
fldenv
push
mov
xchg
mov
cltd
jb
ret
add
fisttpll
add
iret
xchg
arpl
sbb
dec
inc
pop
test
nop
push
jl
and
mov
and
cli
sbb
add
push
insb
jg
in
addr16
dec
adcl
pusha
push
in
or
inc
xchg
pop
pop
nop
out
jb
pop
mov
xor
aaa
or
cmp
shr
in
enter
cmp
popa
and
movsl
mov
dec
fimull
sub
push
sub
jbe
dec
bound
push
inc
sahf
daa
das
insb
sarl
dec
xor
or
movsb
fstp
gs
push
icebp
sub
inc
pusha
mov
and
inc
push
push
fdivl
repz
jb
xchg
inc
dec
enter
and
jecxz
mov
fimuls
mov
mov
jnp
jns
sub
dec
icebp
mov
imul
js
cmpsl
mov
cs
imul
inc
inc
pop
fistpl
cwtl
fs
icebp
inc
stc
pop
xchg
push
js
mov
test
mov
pop
sub
jge
dec
jnp
inc
out
push
mov
lahf
fisubl
test
sbb
fidivrs
xchg
ret
push
mov
or
popf
pop
inc
insl
mov
in
inc
test
ret
call
pop
rcll
cmp
and
sbb
push
aam
and
ss
pop
adc
dec
testb
mov
bound
adc
aam
outsb
js
and
outsb
out
data16
fstps
hlt
sahf
push
daa
js
pop
loope
xchg
lds
dec
mov
xor
cmpsl
jno
leave
jg
pop
out
pop
cltd
hlt
movsl
je
xchg
imul
jb
pop
sbb
hlt
test
addr16
stos
pusha
dec
add
sub
sbbb
cld
dec
loope
adc
mov
jne
cmp
daa
addb
arpl
xchg
cmpsb
pop
mov
or
aaa
int3
lds
mov
fucom
pop
cmpsb
lret
data16
pop
inc
rcll
lret
insb
std
mov
sbb
mov
inc
clc
test
cmpsb
popf
shrl
sbb
out
outsl
push
call
int
fistpl
mov
pushf
pop
add
sar
ds
shrl
push
adc
sub
jbe
xor
out
mov
push
and
pop
mov
pop
out
andb
mov
xor
movsb
jae
jge
mov
fs
fisubs
sbb
jl
aam
fistl
and
bound
jbe
popf
lea
mov
push
jne
jle
loopne
pop
pushf
addr16
aaa
neg
inc
mov
xor
xchg
mov
jo
pop
mov
sub
mov
dec
dec
mov
and
sbb
fidivs
pop
inc
push
sbb
mov
in
adc
and
and
mov
inc
xor
std
fwait
inc
xor
scas
lret
adc
xor
add
adc
xor
loopne
inc
jne
pop
leave
mov
mov
mov
imul
jns
mov
or
insb
xchg
fs
mov
mov
test
stc
call
out
scas
pop
adc
cmpsb
jmp
imul
add
inc
jp
bound
ljmp
arpl
out
inc
or
lea
pop
push
pusha
add
sub
lcall
mov
xchg
sub
popf
inc
insb
jl
pop
adc
jb
xchg
sbb
notl
repz
aam
sbb
lea
mov
mov
fidivs
sbb
js
data16
mov
jle
inc
push
das
or
mov
cli
pusha
or
inc
pop
mov
clc
add
ficoml
mov
negb
divl
adc
push
mov
aas
mov
mov
fs
adc
jb
jl
ss
adc
pop
scas
jnp
arpl
ficoml
idivb
lds
les
mov
out
out
loopne
xchg
add
enter
jae
ret
scas
or
popl
mov
lods
sbb
in
push
sbb
imul
arpl
aaa
jp
xchg
fldl
cs
in
xor
in
arpl
jb
mov
mov
addl
pop
mov
sub
cmp
gs
sahf
inc
test
mov
in
sbb
cmp
aaa
lds
das
mov
mov
mov
or
push
in
xor
pop
pusha
stos
push
rcll
test
stos
leave
xchg
jnp
push
int3
aaa
sar
add
sub
test
or
rolb
mov
sbb
in
add
adc
enter
test
jb
pop
xchg
std
sbb
call
aaa
inc
fldenv
jb
loopne
test
nop
cs
cltd
cmpsb
jno
mov
xor
pop
nop
mov
addr16
shl
xor
mov
lcall
test
fwait
cmp
xchg
xor
dec
mov
sahf
ss
pop
jp
inc
mov
xlat
test
add
inc
sahf
lret
lahf
pop
mov
outsb
push
lahf
mov
arpl
add
stos
or
inc
inc
xchg
sub
popw
adc
add
pop
stos
mov
outsb
xor
in
sbb
dec
mov
pop
mov
adc
cld
pop
sahf
add
pop
jae
mov
pusha
mov
pop
inc
movsl
ret
mov
pop
imul
sbb
fs
add
in
pop
and
arpl
or
dec
nop
jmp
or
cmp
jbe
in
lods
insl
jbe
inc
icebp
fcomps
lock
and
ss
rclb
les
fisttpll
mov
cwtl
xor
push
dec
mov
popf
fnsave
or
pushf
jns
movsl
push
out
xor
xchg
push
rcr
ja
mov
jnp
fmull
aaa
pop
add
jp
mov
data16
jno
bound
lea
lret
pop
rclb
aas
insl
cwtl
add
xchg
sbb
fcompl
ss
in
mov
jp
inc
jo
in
rcl
in
adc
adc
jge
jl
mov
aas
mov
cmp
pop
inc
sub
hlt
sbb
sbbl
pushf
add
in
mov
bound
mov
into
jle
loop
pop
xchg
jae
mov
ret
out
cmp
add
fwait
stos
mov
test
jg
aam
xor
addr16
push
mov
dec
adc
pop
xchg
jb
cmp
push
mov
xor
arpl
push
loop
leave
mov
push
popa
cli
pop
lea
cmpsb
out
movsb
ret
sub
push
iret
fiaddl
into
and
daa
jge
nop
loope
lret
push
xor
fsubrl
dec
sub
adc
sbbb
add
bound
jp
std
adc
adc
mov
push
out
or
push
int
mov
aaa
incb
cmp
jg
and
cmp
sarl
into
rcrl
mov
pop
ret
aaa
lahf
stc
pop
mov
cmp
out
add
sbb
shrl
cmp
dec
movsb
sbb
add
add
pop
or
cmp
sub
fcmovnu
adc
ror
and
sub
aaa
inc
xchg
mov
fbld
outsb
fsubl
arpl
movsl
pop
inc
es
fwait
sub
push
hlt
cmc
or
lods
scas
pop
leave
aaa
pop
popf
push
outsl
sub
scas
xchg
push
or
stos
sbb
dec
dec
movsl
mov
lcall
imul
pop
mov
pushf
sbb
bound
push
pop
inc
sti
aam
faddl
adc
stos
push
add
loop
out
pop
outsl
out
rolb
test
sub
aas
movsl
mov
in
mov
loopne
pop
and
push
dec
bound
scas
xlat
lods
mov
movsb
int3
sahf
cmp
cli
push
jmp
sbb
mov
lock
add
pop
aad
and
mov
inc
and
movsb
mov
js
fidivs
out
mov
aas
push
xchg
jbe
pushf
aaa
dec
dec
pop
fadd
imul
mov
dec
fstps
pusha
push
test
push
ret
ficoms
in
push
lods
aaa
sbb
stos
or
push
in
jo
mov
adc
and
pusha
xchg
jecxz
pop
sbb
out
filds
test
ja
mov
mov
pop
rclb
mov
inc
ja
adc
dec
dec
stos
xchg
in
push
pop
mov
cmpsb
pop
pop
and
sbb
cs
testb
arpl
test
dec
xchg
mov
outsb
xor
arpl
mov
lods
push
lahf
dec
int
scas
loop
in
arpl
je
fadds
int
jo
inc
jno
cli
inc
xchg
pop
pop
pop
ja
test
ljmp
int
add
outsb
repz
aam
cmp
dec
mov
add
rorl
stos
lcall
aaa
adc
xlat
cmpsb
or
in
in
sbb
in
and
lret
xchg
sbb
daa
xchg
adc
push
js
mov
aaa
xor
addr16
in
lods
hlt
arpl
and
mov
pop
aam
cmpb
xor
xor
jg
push
ss
data16
xchg
jns
dec
leave
movsl
repnz
sbb
xor
dec
add
pop
pop
sahf
mov
idivl
xor
movsb
fnstcw
or
pop
inc
ss
xor
push
sahf
cmp
lock
push
sbb
and
arpl
adc
loopne
in
aaa
cmp
jbe
xchg
xchg
sahf
pop
and
mov
inc
jmp
iret
xchg
add
mov
loope
imul
stc
cmp
rcrl
mov
and
das
mov
pop
push
enter
icebp
push
inc
jne
sbbb
sbb
out
mov
sbb
push
in
test
pop
jp
xor
jnp
aaa
fstpl
cmp
dec
push
inc
repnz
fildl
loope
pusha
loope
imul
ja
or
fcoml
stc
mov
push
cmpsl
mov
dec
leave
insl
jp
sti
and
int
cmp
aad
jecxz
add
mov
push
in
sub
out
nop
call
adc
arpl
or
movsb
jle
cmc
mov
cmp
jno
cmp
lret
ds
cmp
adc
sbb
popa
mov
sbb
xchg
cltd
mov
lea
outsl
add
lret
mov
ror
pushf
adc
daa
inc
and
stos
data16
std
loop
inc
lret
pop
adc
lock
subb
cmpsb
into
dec
loope
rcr
pop
mov
cwtl
cmc
and
mov
xor
sub
mov
inc
test
jne
and
aas
loope
dec
inc
add
jg
xchg
repz
pop
push
js
mov
cmc
jnp
rclb
out
hlt
xor
movsb
fists
mov
and
jl
lods
in
jnp
ss
int3
nop
lods
jne
shll
jno
sbb
mov
ljmp
std
sub
mov
popa
jmp
aaa
lret
les
fs
and
scas
or
xlat
sbb
cs
jne
movsl
aaa
repz
enter
pop
fsubrs
xchg
aam
in
jp
fildl
cmp
mov
repnz
jno
fldenv
or
mov
cmp
pop
inc
icebp
push
sub
aaa
cltd
test
adc
mov
pop
push
jmp
icebp
add
es
pop
icebp
mov
inc
pop
mov
aad
dec
inc
sahf
jo
pop
ja
jg
jmp
scas
arpl
fwait
push
repz
loopne
fcmove
push
vphsubbw
stos
lods
loopne
sbb
pop
test
add
xorb
and
mov
movsl
inc
aaa
pop
adc
pop
pop
xor
jb
clc
push
movsl
and
xchg
in
pop
popa
sarl
sbb
icebp
cmp
inc
mov
in
mov
ds
or
dec
rcrb
inc
insl
adc
data16
push
call
cmc
fstl
outsl
inc
mov
inc
xchg
xorb
addr16
jle,pn
out
dec
scas
fstps
add
dec
insl
cmp
aaa
add
test
jle
mov
jno
pop
mov
ljmp
cltd
pop
xchg
mov
cmp
mov
xor
add
cwtl
incb
jl
enter
imul
aaa
inc
insb
out
pop
insb
aaa
push
adc
es
add
clc
ss
sbb
enter
in
dec
imul
sbb
out
and
xchg
add
ds
lret
xchg
mov
ret
inc
ds
push
pop
and
pop
mov
xor
pop
lods
into
sub
add
cmpl
repz
addr16
or
call
mov
pop
fneni(8087
test
std
jno
movsl
pop
pop
dec
lret
add
pop
push
inc
arpl
iret
or
pop
jle
dec
pop
sbb
cmc
popf
pop
mov
test
aam
hlt
cmp
add
inc
lea
pop
out
pop
ret
mov
ss
lods
mov
xlat
and
push
jbe
sub
jmp
mov
jl
arpl
loopne
pop
ss
pop
and
test
cwtl
xchg
mov
jnp
sbb
adc
xchg
icebp
ss
jno
lahf
sbb
les
cmp
lock
sbb
add
mov
lea
xchg
mov
xchg
aas
rcr
int
sbb
mov
pop
out
mulb
and
xor
fistl
aaa
inc
add
cltd
subb
test
cmp
jbe
imul
mov
lret
outsl
mov
add
push
jp
inc
into
scas
popa
xchg
loopne
mov
inc
xchg
cmp
cmp
sbb
es
adc
and
icebp
mov
lods
and
inc
lcall
mov
push
ror
mov
out
push
imul
xor
cld
and
dec
cmp
jbe
les
repnz
xchg
inc
or
pop
loop
sbb
in
push
or
negl
mov
jle
aaa
jae
push
and
mov
adc
mov
pusha
jnp
jp
and
stos
outsb
jl
push
icebp
mov
aaa
push
jecxz
xor
push
ret
pop
jbe
mov
outsb
sub
jb
adc
shrb
loope
rcl
pop
iret
sbb
pop
fistps
lret
cmp
and
rcrb
icebp
das
lock
int3
adc
mov
imul
ret
pop
scas
addr16
jnp
aam
mov
pop
and
data16
mov
push
xchg
add
xor
pop
xchg
sbb
in
shll
mov
xor
fbld
scas
ds
inc
mov
and
or
cmpsl
push
movsb
les
pop
fiaddl
rcl
dec
icebp
imul
push
lcall
in
sahf
loope
stos
sarl
sub
loop
adc
inc
mov
push
mov
mov
push
sbb
xor
test
jbe
fldenv
jo
in
sbb
mov
sbb
dec
outsb
xchg
and
in
cli
movsl
pop
inc
xchg
jecxz
aas
pop
mov
cmp
addr16
in
dec
xchg
loopne
add
pop
imul
cld
cltd
push
xor
fisubrl
test
and
pusha
xchg
fildl
cld
xchg
xchg
dec
xor
dec
mov
cmp
pushf
lret
mov
icebp
jbe
lods
sti
adc
mov
scas
data16
adc
cmp
cmp
lahf
sbb
jo
cmp
jb
negl
es
sti
xor
sbb
aas
xchg
icebp
xor
pop
aaa
adc
repz
mov
punpckhwd
pop
inc
push
cli
mov
or
mov
imul
sbbb
xor
lea
insb
cmp
pop
push
imul
pop
in
sbb
ret
xchg
in
mov
sbb
pop
mov
insb
dec
icebp
or
addr16
xchg
jbe
adcl
outsb
testl
out
mov
fistpl
arpl
sub
ljmp
mov
sti
test
outsb
mov
int3
xchg
out
mov
mov
jmp
incb
test
into
xor
inc
mov
lea
rolb
mov
enter
or
loop
mov
pusha
mov
popa
xorb
imul
dec
arpl
jb
notb
mov
lods
lcall
sti
pop
sti
gs
imul
inc
jno
fmull
push
push
nop
ja
adc
imul
insl
aad
pop
stc
aas
jae
lcall
mov
aaa
jo
adcl
insl
paddq
out
sub
ret
or
mov
sbb
xchg
addr16
into
push
sub
push
sbb
test
jl
sahf
aad
jle
adc
jecxz
loope
push
rcrb
mov
mov
aaa
dec
clc
pop
mov
mov
gs
and
jge
push
inc
test
sbb
or
add
ja
test
movsl
mov
pop
xchg
push
mov
insb
cmp
inc
imul
loop
inc
lods
or
add
int
ds
enter
in
lahf
push
rol
lahf
fistpll
jp
idivl
std
xor
mov
fildll
mov
loop
les
insb
cli
dec
sub
data16
pop
rolb
in
das
mov
jne
in
shlb
lahf
mov
dec
jp
lahf
aaa
xchg
mov
dec
mov
pop
js
dec
icebp
clc
in
lcall
dec
mull
add
in
cmp
sbb
fmul
pushf
xor
scas
and
pop
out
dec
xorb
or
scas
xchg
insb
xchg
jmp
repz
mov
cmp
pop
xchg
rcrb
loop
leave
fs
mov
xor
popa
subps
and
and
pop
sbb
pop
clc
outsl
outsb
loope
xor
jmp
cltd
notl
shll
or
push
aaa
and
mov
subl
mov
sbb
sub
mov
movsl
lret
jnp
cmpsl
loope
sbb
and
scas
sbb
std
dec
sub
mov
lahf
dec
ret
out
push
or
sbb
mov
out
addr16
pop
mov
jae
sub
cmp
pop
daa
inc
mov
loope
xor
sub
dec
shll
mov
add
push
outsl
xchg
dec
mov
pop
scas
dec
mov
jnp
test
xor
sti
iret
or
push
inc
push
test
push
and
aad
sbb
lods
test
jb
sub
xchg
xchg
jl
lock
mov
out
jne
cmp
insl
cmc
dec
dec
push
test
test
ds
lea
xor
cmpsl
jno
adc
dec
xchg
jno
cmp
popf
mov
mov
push
fstpl
cmp
mov
push
sub
mov
in
xchg
xchg
insl
mov
jge
loope
sub
pop
rclb
dec
mov
insl
cmp
inc
sub
dec
fmull
mov
imul
ror
js
test
insb
pop
icebp
cwtl
xchg
push
ljmp
jbe
xlat
inc
adc
shrl
and
dec
mov
add
ds
pop
xor
dec
pop
mov
cmp
adc
adc
aaa
and
rclb
sub
sti
fsubrl
pop
std
push
mov
outsb
iret
test
popf
sub
clc
inc
in
push
jne
sub
cmp
pop
fwait
enter
adc
mov
pusha
xor
negb
ljmp
stos
mov
jo
sub
jne
mov
push
ja
cmp
jmp
jecxz
aaa
idivl
xchg
imulb
out
rolb
imul
bound
and
cltd
sub
loope
icebp
adcb
aam
inc
pop
mov
jg
ja
and
cmp
mov
out
cmp
cltd
repz
out
mov
jns
cmp
sub
fistps
cmp
mov
icebp
nop
jae
mov
sbb
xor
call
cmp
xchg
jp
sbb
mov
push
loop
aaa
and
cli
add
xchg
sub
fisttpll
filds
out
push
or
out
jb
and
jbe
jg
push
dec
ljmp
inc
xchg
out
insl
push
or
daa
int
pusha
sbb
push
cltd
pop
push
je
sbb
lea
das
pmaddwd
aaa
gs
pop
xchg
xor
dec
cmpsb
out
pop
dec
xorb
xchg
js
std
into
cmpsb
add
xchg
cltd
mov
xchg
lock
popf
outsl
cltd
jg
xchg
pop
xchg
or
loopne
and
mov
push
mov
jnp
sbb
fdivrs
insl
fcomps
push
sbb
js
mov
out
push
lock
inc
aaa
repnz
sbb
test
aad
push
lahf
or
ljmp
sub
jg
loope
mov
hlt
sahf
push
mov
add
push
mov
test
fimuls
push
mov
int
adc
imul
out
bound
push
fmull
mov
mov
push
jmp
iret
add
call
outsl
repnz
xchg
int
sub
out
repnz
aaa
push
sbb
jg
pop
mov
xchg
es
pop
sbb
sub
pushf
pop
sub
ljmp
js
pop
push
mov
mov
in
pop
lret
mov
mov
xchg
hlt
movsb
arpl
xor
sarl
sub
test
inc
sub
sub
lea
mov
inc
pushf
or
lret
xor
sbb
out
or
bound
sbb
inc
jne
jp
push
cmp
fdivr
sti
sahf
imul
sbbl
add
loope
ljmp
mov
fxch
and
pop
and
push
loope
pop
or
xor
pop
push
adc
in
iret
mov
inc
and
adc
andb
push
mov
push
pop
sbb
fdivrl
enter
fcomi
pop
mov
call
insb
mov
insl
aam
data16
into
jecxz
sbb
shr
push
int3
and
jecxz
xor
mov
dec
jbe
popa
lcall
or
movsl
lods
lock
outsb
sbb
add
cmp
inc
and
cmp
and
cwtl
jg
mov
jmp
mov
jns
push
bound
inc
add
mov
jnp
pop
push
mov
test
icebp
pop
cmpsb
testl
dec
repz
lods
jp
inc
pusha
mov
cmp
shlb
sbb
std
mov
fwait
sahf
push
in
lret
out
mov
mov
pop
in
enter
jno
mov
out
xor
inc
mov
aam
loopne
ljmp
or
adc
ss
icebp
adc
cld
fnsave
pusha
in
pop
out
pop
rorb
movsl
loope
sub
push
and
pop
mov
adc
inc
movsb
repnz
ljmp
dec
jg
push
daa
inc
xchg
psubsb
sbb
xor
pop
imul
and
aaa
push
pusha
dec
fsubrs
ds
std
fildl
ret
push
jg
jo
test
addr16
or
ds
subb
sbb
push
ret
lret
ss
int3
xchg
subb
dec
xchg
add
sub
ret
cwtl
jmp
loopne
loop
test
adc
mov
std
sbb
or
mov
push
add
inc
jb
pop
push
jo
sub
dec
out
test
jns
aas
cmp
aam
xchg
insb
fidivs
andb
stos
rclb
mov
jmp
loope
cmp
jo
arpl
dec
pop
xchg
mov
movsl
aaa
shr
enter
loop
cwtl
testl
mov
mov
mov
xor
dec
lcall
sub
cmp
xchg
movsl
mov
inc
pop
jmp
in
push
push
sarb
test
xchg
int3
into
add
cld
dec
ds
xchg
adc
inc
movsb
fsts
sub
data16
and
test
out
aaa
daa
cmp
dec
push
cmp
rcrl
xchg
data16
and
add
mov
arpl
movsl
cmp
jp
loope
cmp
stos
outsb
sbb
sbb
call
aaa
jg
pop
shr
cltd
inc
cmp
and
push
mov
stos
or
cmp
fwait
mov
cmp
jl
rorb
repz
push
sbb
add
out
sub
stos
mov
pop
jg
fcompl
xor
or
leave
xchg
icebp
mov
fsubs
adc
jae
js
ljmp
mov
int
xchg
xor
out
jo
push
cli
jo
push
fwait
cmpsb
out
inc
pop
and
std
sbb
out
clc
jmp
test
dec
adc
xchg
jbe
imul
dec
lret
add
fcmovnb
and
lods
out
jne
push
mov
adc
xchg
pusha
cmpsl
xchg
dec
push
pop
mov
out
xchg
pusha
mov
jmp
lcall
stos
mov
mov
clc
sub
fiadds
sahf
mov
pop
test
mov
lahf
push
pop
xchg
adc
in
hlt
cmp
leave
jbe
int3
lods
cmc
push
xor
and
fdivrs
outsl
mov
and
lret
jg
scas
push
xor
inc
cmp
je
imul
roll
cmp
cmp
mov
repnz
aad
jg
pop
mov
addr16
jmp
popf
sub
push
test
popf
decb
push
xchg
jne
stos
push
sahf
inc
jmp
inc
xchg
ficoms
inc
jl
dec
mov
into
xchg
outsb
sar
inc
and
iret
loope
xchg
aaa
sbb
lahf
pop
lds
sub
and
sbb
push
mov
or
sar
push
nop
push
in
das
sbb
inc
sbb
jp
cmp
fs
fcmovne
xor
fnstcw
jl
pop
push
leave
mov
inc
vucomisd
pop
add
mov
cltd
adc
pop
push
aam
jecxz
jb
dec
aas
aad
in
add
xor
call
scas
xchg
imul
or
xchg
rolb
sbb
out
jecxz
push
adc
jbe
pop
push
dec
test
or
ret
cmp
loope
popf
dec
sbb
and
or
sub
push
push
sti
fidivrl
int
cwtl
idivb
je
push
or
push
stos
stos
out
xchg
lods
push
outsb
push
push
pop
cmp
dec
test
mov
dec
icebp
hlt
lods
dec
and
icebp
negl
arpl
pop
push
jbe
movb
mul
in
scas
push
mov
push
and
lods
aaa
push
cmp
mov
jae
jge
roll
dec
and
inc
cmpsl
cwtl
or
das
push
fisttps
mov
cmp
bnd
pop
icebp
xchg
and
xor
hlt
jg
ss
call
cmp
mov
mov
fwait
call
mov
jbe
nop
pop
mov
push
mov
sbb
pop
pop
popf
dec
in
pop
add
fiadds
mov
dec
jl
fldenv
or
add
popf
hlt
sbb
mov
lcall
and
cld
aaa
fwait
dec
cmp
into
add
lahf
cmp
int
int3
movsl
mov
test
jnp
push
in
negb
test
or
movsb
arpl
push
cmp
and
scas
xor
sbb
sub
pop
pop
clc
fmuls
insb
movsb
int
xor
test
scas
ficompl
inc
pop
xchg
pop
mov
pop
insl
mov
jecxz
jne
outsl
mov
xor
pop
inc
cmp
push
inc
pop
sub
pop
fdivp
jmp
sar
stc
fdivl
xor
fisubrs
cmc
pop
push
push
jle
imul
pop
mov
jnp
test
push
icebp
inc
mov
jo
sar
push
xchg
es
adc
sub
call
or
dec
ss
mov
aad
fmuls
xchg
inc
outsl
push
ss
xor
xlat
outsb
jo
dec
mov
add
fimuls
cmpsb
jmp
aaa
mov
or
js
mov
sarb
mov
dec
cwtl
test
jb
sbb
repnz
cmp
sub
test
mov
pmaddwd
lret
sub
sbb
int3
call
fnstcw
test
stos
nop
jns
adc
imul
add
push
dec
cmpl
andl
test
pop
sti
or
jne
jle
push
cld
ljmp
or
loope
out
sbb
jno
cmp
pop
outsb
nop
loope
pop
js
xchg
imul
inc
sub
dec
aaa
jno
cmpsb
js
push
cmp
jb
js
fmull
loop
ja
cld
js,pn
into
sahf
sbb
pusha
push
mov
sahf
call
cld
inc
mov
adc
add
dec
ffreep
xor
xor
roll
adc
sbb
xchg
test
ja
icebp
imul
or
cwtl
sahf
cmpsb
mov
pop
cmpsb
xchg
cmp
fld1
adc
lock
adc
lods
aaa
clc
repz
pop
inc
shll
ss
shlb
inc
shrb
pop
loope
mov
in
cwtl
jne
sub
cld
or
aaa
or
sbb
pop
adc
outsb
mov
aas
xchg
test
icebp
xor
mov
pop
xchg
jge
popa
ds
arpl
xchg
subb
pop
hlt
loope
inc
test
cmp
std
pop
cmp
in
imul
pop
stos
bswap
sbb
pop
popf
xor
lea
mov
rcll
sub
loope
sbb
imul
sti
or
pop
mov
cmpsl
out
pusha
aam
aad
adc
pop
mov
sub
pop
mov
stos
inc
arpl
jg
aaa
in
scas
push
mov
push
pop
jle
add
inc
inc
pop
repz
sahf
xlat
ror
fidivl
arpl
sbb
repz
cmp
cmp
mov
inc
fsubs
add
out
mov
out
popf
iret
ret
pop
jbe
cmp
in
bound
sub
nop
je
and
loope
sbb
xchg
loope
enter
mov
in
pop
jb
pop
inc
xor
sub
daa
cld
or
setb
fisttpl
cwtl
fs
and
loop
push
pop
sbb
fstpl
repz
sahf
pop
in
jo
xchg
fcompl
xor
ret
pop
mov
lock
test
leave
mov
in
out
cli
jge
jecxz
add
jns
sbb
das
xor
sti
iret
xchg
lock
pop
into
push
pop
pop
dec
sbb
jne
sti
test
js
pop
mov
xchg
inc
jno
aaa
ret
jmp
in
and
lret
sbb
push
inc
arpl
daa
jle
loop
cltd
mov
lret
pop
js
jno
sbb
mov
sbb
out
jmp
mov
xchg
adc
out
push
enter
push
leave
orb
andl
outsl
into
popa
jmp
aam
lods
jg
adc
mov
in
aaa
adc
sbb
jp
aam
push
mov
cwtl
leave
shl
cmp
add
sbb
das
js
sarb
call
loop
imul
sbb
push
jecxz
int
call
push
pop
fstpt
jns
fmull
ss
dec
push
in
aam
icebp
pop
or
mov
in
sti
xchg
pop
sbb
out
push
clc
test
inc
mov
in
pop
inc
leave
and
icebp
pop
pusha
xor
push
xor
jnp
add
and
aaa
pop
testl
js
cmp
push
js
push
popf
xorb
fsubrl
imul
lds
pusha
inc
sbb
inc
hlt
cmp
add
arpl
out
sbb
cmpsb
jecxz
lcall
ds
fisttpll
jb
add
push
and
pop
and
das
outsb
scas
or
aam
or
and
and
cmp
push
push
sbb
add
cltd
cli
repnz
ret
hlt
inc
arpl
push
subb
xor
fwait
lcall
ss
xor
xchg
mov
and
jp
clc
ja
pushf
mov
sub
sahf
push
je
shll
mov
and
cmpsl
das
inc
push
push
cmc
stc
mov
mov
movl
push
mov
pop
loop
gs
aad
enter
imul
inc
inc
add
mov
mov
xchg
cmp
pop
jbe
popa
sub
mov
cmc
mov
pusha
sbb
xchg
sub
cld
xchg
ss
sbb
in
test
jns
sti
arpl
cld
ret
mov
or
test
subl
sbb
mov
rcr
dec
add
cmpsb
pop
in
cld
mov
test
sub
mov
and
cli
insl
pop
sbb
repz
push
add
push
fsubl
mov
loope
sbb
loopne
rclb
nop
lret
xchg
das
jo
pop
mov
cmp
stos
mov
sub
sbb
lea
das
push
pop
xchg
push
stc
pop
adc
adc
loope
lea
out
jno
push
sbb
mov
adc
lods
pop
repnz
fwait
cmpsl
or
das
in
cmpsl
scas
lret
xchg
mov
sub
xchg
cmp
cmp
mov
cmc
push
cmp
push
sbb
repz
jne
in
sbb
aaa
lock
das
outsl
repnz
push
mov
push
dec
mov
mov
xchg
in
lcall
jle
bound
inc
std
aaa
xor
add
mov
shll
mov
cltd
repz
fsubrl
mov
div
adcl
cltd
cli
fiadds
decl
popl
in
pop
mov
ret
pop
xchg
outsb
inc
and
jg,pt
div
mov
cmp
sbb
mov
cli
pop
cltd
repz
jbe
and
hlt
mov
dec
scas
insb
adc
mov
pop
dec
mov
cs
cld
je
arpl
insb
sbb
ss
pop
cmp
add
cli
gs
mov
xchg
jmp
push
dec
in
xchg
orl
js
iret
pop
xchg
adc
dec
and
nop
ret
mov
jl
pop
cmp
xchg
and
movb
lea
insl
shlb
xchg
cmp
mov
pop
pop
pop
push
shrb
mov
add
pop
shll
mov
xchg
sbb
mov
pusha
mov
pop
jecxz
sahf
and
out
mov
lea
call
fnstsw
ret
pop
xor
inc
lock
sbb
dec
sub
les
jmp
mov
clc
dec
push
sub
cld
xchg
in
adc
pusha
sub
push
push
lods
shrb
cmp
mov
dec
test
sbb
xor
outsl
mov
imul
mov
aad
or
fucomp
push
sbb
lea
dec
and
mov
mov
sahf
dec
dec
sbb
xor
aaa
stos
pop
jns
push
add
jne
es
fldenvs
rclb
rcll
into
dec
ljmp
popf
icebp
jnp
add
jecxz
push
jge
or
jo
aam
rorl
aad
imul
pop
cmp
call
imul
pop
xor
ret
and
jg
dec
cltd
inc
aam
dec
mov
inc
cmpsl
jle
int3
sti
pop
pushf
push
xchg
sub
mov
insb
pop
rcrb
sahf
xor
mov
mov
pop
mov
cld
lock
mov
xchg
call
lcall
push
jae
insb
mov
jb
push
popf
jecxz
fs
je
aaa
xor
inc
xor
xor
jnp
icebp
loope
mov
push
push
add
mov
rcll
ret
mov
sub
mov
push
ja
xchg
jno
incb
loope
mov
fidivrl
sbb
bound
call
cmpsl
mov
or
daa
adc
mov
sub
mov
shrb
push
mov
aaa
jp
scas
lods
inc
add
fcmovnbe
xchg
pusha
jle
mov
add
dec
fadds
mov
push
dec
cltd
icebp
scas
ljmp
cmp
and
outsl
loopne
std
push
fwait
jb
rclb
jecxz
stos
or
outsl
or
aaa
push
fwait
adc
sub
or
inc
inc
jo
aaa
add
jecxz
out
sti
outsb
mov
push
cli
icebp
push
mov
mov
adc
mov
mov
add
dec
stos
mov
sbb
fnstcw
imul
pushf
jmp
cmpsb
imulb
xchg
jle
sti
cmp
fidivrs
pop
insb
add
notl
es
mov
movsl
xor
es
ss
outsb
sub
aaa
add
adc
and
mov
aaa
xchg
scas
xchg
dec
cmp
pop
dec
sbb
imul
ss
cwtl
inc
fsubl
mov
cwtl
movsl
clc
sub
dec
roll
loope
arpl
call
dec
pop
pusha
decb
fstps
cltd
dec
outsl
pop
push
cmpsb
out
je
pop
movsl
mov
adc
sbb
and
jle
mov
jne
pop
xchg
icebp
jo
ret
cmp
popf
sbb
movsl
fsubr
popa
ss
jg
pop
sub
xor
lods
clc
jg
and
aaa
pop
lods
xchg
data16
pop
stos
pop
ss
mov
cmp
ss
push
mov
cmc
add
leave
mov
mov
jb
add
sbb
xor
lds
cld
sti
xor
xorb
cmp
outsb
cmpsb
lock
sbb
jae
pop
and
mov
mov
pop
mov
pop
xchg
test
sbb
in
pop
pop
movsl
push
sub
lods
pop
ljmp
cld
sbb
push
mov
les
dec
xchg
pop
xor
xchg
adc
dec
push
adc
and
cmp
xchg
shlb
nop
jnp
and
fildl
add
nop
mov
adc
mov
cmc
je
sbb
iret
sbb
inc
mov
add
jmp
in
mov
jno
aad
sbb
shl
sbb
ja
in
pop
out
in
xchg
push
dec
dec
popf
mov
and
test
enter
jl
imull
cmpsb
out
shrl
dec
daa
nop
outsb
lret
cmp
mov
pop
xor
sbb
pop
pop
hlt
add
lret
outsb
popf
fwait
aaa
arpl
das
fisttps
test
adc
lods
scas
ds
mov
movsl
bound
mov
adc
jmp
in
lcall
jp
jmp
cltd
aam
in
lret
cwtl
imul
icebp
dec
jl
data16
pop
sub
ficomps
push
cmpsb
out
stos
mov
pop
dec
push
xchg
mov
jb
pop
subb
out
mov
or
sbb
faddl
js
mov
aas
pop
inc
dec
movsb
leave
pusha
les
movsb
nop
and
cmpsl
sbb
push
fnstenv
xchg
mov
jge
mov
xchg
adc
dec
mov
mov
dec
add
and
jle,pt
mov
std
stos
loopne
sbb
enter
mov
out
aam
xchg
add
cmp
dec
movsl
cmp
jg
adc
sbb
addl
push
std
cmp
inc
sbb
lock
dec
sbb
add
inc
jg
lods
inc
push
sub
inc
setge
pop
push
les
jmp
pop
sbb
cld
sbb
ret
push
in
adc
cmpsl
xor
xor
aaa
mov
push
enter
jge
sbbb
popa
mov
dec
popa
pop
sbb
int
mov
dec
sbb
out
pop
ljmp
mov
inc
cmpsb
aaa
mov
in
lret
sub
cmp
mov
add
pop
out
icebp
scas
repz
adc
test
int
mov
mov
aaa
fwait
sub
xchg
pop
in
jno
push
repz
mov
mul
pop
push
aaa
dec
je
mov
adc
fcoml
rcrb
sbb
push
mov
jl
hlt
jbe
arpl
pushf
jae
pop
xchg
adc
in
xchg
dec
movsb
xchg
gs
mov
outsb
inc
or
push
cmpsb
add
loopne
movsl
gs
hlt
push
dec
stos
pop
aad
hlt
and
mov
sbb
jae
add
mov
dec
icebp
cs
addr16
das
add
je
in
stos
add
push
dec
jae
cmpb
mov
pop
test
cmp
stc
les
nop
sbb
pop
pusha
pop
pop
ret
aaa
popa
fcmovnbe
enter
insb
out
xchg
xchg
add
mov
inc
pop
out
add
int
jp
aaa
fbld
mov
sbb
insb
std
aam
loope
jns
xor
and
adc
pop
xchg
cmc
setae
popf
into
movsb
aaa
mov
in
mov
cmpsl
add
or
popa
ss
mov
outsl
pop
jne
and
mov
push
xchg
sub
push
pop
sbb
lea
and
insb
add
pop
fistpll
dec
xlat
testl
aad
pop
aad
add
xchg
jmp
imul
jo
dec
pop
add
cmp
test
xorl
add
push
mov
adc
push
aaa
push
push
stc
push
movntps
stc
in
sbb
fwait
dec
cwtl
jp
pop
xchg
pushf
lahf
push
push
les
dec
adc
cmp
pop
pop
add
mov
in
jg
aaa
and
jg
rorb
les
inc
pop
lahf
in
jno
out
sub
jg
or
mov
lret
es
inc
lret
shlb
jle
out
jp
shll
jecxz
ljmp
push
mov
test
fwait
aaa
push
rcrl
imul
jl
xchg
scas
inc
adc
pusha
ror
in
inc
pop
cmpsb
loopne
sbbl
mov
inc
mov
inc
sbb
add
ljmp
adc
enter
lea
js
dec
cmpb
lcall
jne
imul
cmp
dec
adc
addl
movsl
add
lahf
xor
pusha
insl
in
xor
pusha
aad
shll
stos
adc
sbb
lsl
xchg
cmp
xchg
repnz
adc
sti
leave
mov
out
cmp
fucomp
mov
cmp
arpl
int3
into
and
inc
jnp
xor
inc
frstor
pop
dec
sti
adc
push
iret
shll
sti
dec
jmp
dec
fmul
adc
inc
add
jle
in
xchg
into
push
jb
and
int
popf
dec
stc
fistps
inc
out
add
add
mov
cmpsl
std
ss
and
xchg
shr
jb
xor
sbb
outsb
sbb
push
and
sub
scas
in
xchg
test
andl
jle
inc
dec
loope
xor
std
adc
mov
push
jbe
stos
jmp
dec
aam
mov
ret
repz
inc
fstpl
js
inc
ljmp
imul
mov
mov
mov
mov
inc
mov
mov
add
ficoml
pop
inc
xchg
jns
and
or
dec
xor
jmp
rolb
cmpsl
loope
or
xchg
ds
xor
enter
sbb
pop
push
in
enter
xchg
leave
enter
dec
sub
popa
mov
out
mov
jno
or
and
fcoml
in
insl
jb
cmp
fwait
ds
adc
add
roll
jns
leave
sub
mov
fs
xor
lods
mov
lods
xor
cmp
fnsave
jne
sbb
sub
fs
jp
jbe
or
and
sahf
push
mov
and
dec
loop
movsb
imul
and
and
dec
mov
addr16
jmp
shr
sub
hlt
jp
mov
stos
lret
dec
je
aaa
fistl
ret
xor
ss
cmc
xor
aaa
add
xor
sbbl
dec
mov
jle
add
icebp
xchg
inc
test
cmpsl
add
out
xor
push
push
inc
jae
xchg
sub
jae
repz
dec
xchg
add
jecxz
out
cmpsl
outsb
sbb
sub
push
insl
sbb
ret
mov
push
fistpll
push
aaa
lea
lea
adc
inc
sub
test
sub
or
fdivp
test
dec
frstor
imul
ficoms
jmp
lock
popf
pop
push
xchg
shrb
jg
dec
push
mov
sbb
adc
mov
xchg
mov
lret
sbb
repnz
leave
pop
daa
dec
sub
cmc
in
lock
test
daa
inc
push
in
add
xchg
inc
adc
xchg
xor
mov
mov
pop
or
xor
cmp
jb
xchg
mov
push
inc
add
fwait
dec
xor
xlat
repz
jbe
sbb
cs
insb
movsl
insb
and
add
ljmp
sbb
push
xor
inc
arpl
jl
push
fsts
pop
jnp
les
sahf
mov
sbb
jmp
dec
lret
ret
testb
sarl
jno
mov
addr16
mov
jg
adc
xchg
or
push
clc
movsl
jae
inc
aam
pop
lock
pop
or
sbb
xor
mov
jmp
bswap
mov
xor
pop
lods
outsb
aaa
pop
or
mov
lea
and
mov
mov
fstpl
or
pop
sub
mov
mov
test
mov
xor
dec
pop
dec
ret
enter
and
punpcklwd
jg
mov
jecxz
dec
loope
fsts
cmpsl
aam
jmp
cld
adc
sbb
xchg
cmpsb
and
test
repnz
ja
and
cs
scas
bound
fldcw
lods
mov
inc
mov
mov
sub
mov
inc
push
outsb
leave
push
outsb
scas
xchg
xchg
scas
int3
inc
jg
cli
es
imul
mov
lcall
out
subb
or
cmpsl
cmp
push
faddl
cmpsb
lret
or
push
fists
mov
gs
loopne
testb
cmpsl
mov
jp
inc
sti
ja
mov
cmpsb
fstl
cwtl
pop
in
addl
mov
popa
fucompp
and
fwait
mov
gs
cmpsl
mov
and
sti
ja
inc
ljmp
pusha
addr16
mov
fdivl
xchg
xor
mov
adc
and
mov
rolb
pop
repz
fs
aaa
inc
icebp
in
addl
das
in
stc
inc
out
jns
aaa
pop
fsubrl
hlt
xor
hlt
sbb
xor
pop
mov
inc
inc
lcall
jmp
jnp
inc
inc
pop
mov
pop
adc
jb
repnz
and
pop
jmp
data16
dec
dec
mov
xchg
out
lahf
les
call
cmp
sbb
add
add
sbb
jns
les
int
stos
cmp
movsl
popf
jbe
popa
insb
inc
inc
nop
and
je
dec
call
repnz
imul
push
out
cs
sub
dec
into
cmc
rorb
adc
and
pop
inc
mov
mov
rcrb
xor
sbb
add
mov
xchg
xchg
or
imul
repz
jno
aaa
mov
rcr
rcll
jno
cld
add
cmp
loopne
inc
scas
push
testl
push
mov
popa
enter
cld
aam
push
fsubl
adc
push
mov
pop
adc
cmp
pusha
popa
fwait
in
add
dec
sbb
cli
xorb
sbb
or
jecxz
test
divl
in
in
dec
je
pop
mov
sub
push
les
movsl
pop
ljmp
pop
and
or
xchg
push
aaa
lahf
xchg
lcall
mov
je
bound
push
in
in
je
faddl
push
jmp
push
mov
jo
call
inc
test
add
push
popa
dec
jl
std
and
pop
push
test
insb
push
pop
add
mov
jbe
loop
jo
imul
ficomps
mov
jns
mov
pop
loope
pop
aaa
in
stc
cmp
ss
mov
cmpsl
sahf
js
mov
sarb
sahf
add
shll
jle
pop
add
bound
adc
into
outsb
leave
jnp
repnz
pop
shrb
xchg
push
imul
insb
dec
mov
popa
mov
and
ja
pop
cvtps2pi
lret
in
outsl
mov
clc
add
pop
and
xchg
ret
mov
stos
scas
dec
jno
lahf
mov
fists
push
sub
filds
stos
mov
ja
inc
mov
sub
hlt
loop
repz
push
int3
add
mov
mov
xor
test
aaa
xchg
bound
mov
mov
xchg
push
addr16
jae
test
pop
fwait
mov
in
imul
sbb
mov
in
test
lcall
scas
add
push
pop
scas
mov
incl
jmp
mov
push
lea
sbb
pop
dec
cs
or
aaa
xor
aad
sub
aam
and
stos
lods
scas
mov
ss
ret
push
popa
dec
insb
lods
mov
iret
outsl
push
add
mov
push
mov
ds
sahf
push
insb
mov
leave
jo
aam
rorb
adc
inc
jmp
mov
test
in
and
outsb
mov
push
in
sbb
cmp
mov
nop
add
mov
and
add
xchg
std
aaa
leave
ja
call
mov
pop
jae
mov
cltd
pusha
sub
cmp
cmpsb
mov
stc
sbb
push
sbbb
in
in
arpl
insb
aaa
adc
dec
cvtps2pd
jne
mov
adc
adc
inc
std
ljmp
jbe
or
stos
imul
xchg
lds
cwtl
test
rcl
mov
push
in
icebp
push
orl
imul
or
jecxz
scas
loop
pop
xor
add
jb
dec
adc
or
xchg
test
push
sbb
lods
loopne
pop
popf
stos
nop
ror
cmovbe
mov
sbb
add
das
lcall
ja
scas
pop
or
mov
andl
lea
jle
xchg
push
cmp
addb
paddb
stos
divb
in
dec
movsb
cmpsl
sbbb
or
insl
ror
sub
mov
adc
mov
flds
fdivl
jg
xor
push
mov
out
leave
cmp
sub
and
bound
test
lcall
mov
push
enter
or
sarl
cmpsl
rcrl
lret
mov
xchg
popf
jge
scas
inc
add
ds
push
cmp
mov
sti
aaa
or
hlt
mov
or
das
inc
loop
jecxz
inc
pop
mov
call
and
xchg
movsl
enter
xor
mov
push
aad
push
dec
fwait
mov
rolb
cld
cwtl
sbb
lea
mov
mov
xor
sub
inc
sbb
mov
push
pusha
mov
popa
dec
adc
mov
xchg
clc
lahf
push
sti
repnz
and
pop
jno
inc
aas
push
mov
and
jl
cmp
pop
je
or
cli
nop
push
jp
add
sub
shr
je
inc
sbb
outsb
lds
fnsave
hlt
clc
ds
in
rep
sar
xchg
add
cli
xlat
fisttpl
iret
xor
fcoms
imulb
aaa
popa
rcrb
icebp
or
insb
lcall
les
inc
mov
jns
lock
push
sub
sub
sbb
inc
pop
jo
pop
jl
mov
sub
icebp
stos
xor
mov
pop
cmp
xchg
pushf
fcmovnb
mov
rcrb
mulb
jecxz
add
test
push
dec
sti
movsb
jo
push
and
movsb
out
leave
je
cmp
mov
add
jecxz
adc
mov
cltd
aam
pop
divb
jge
or
loope
enter
inc
mov
leave
jge
inc
arpl
xchg
xchg
or
and
ds
jae
ljmp
push
or
lea
les
sbbb
divl
aas
sbb
jmp
mov
cmp
mov
cmp
icebp
scas
rcl
and
leave
into
imul
xchg
pop
xchg
dec
fs
dec
aas
or
enter
ficomps
ret
mov
scas
in
push
inc
sub
into
ss
pop
push
in
or
andb
sub
icebp
jle
sub
ret
scas
enter
pop
adc
adc
aaa
std
lds
bound
ret
push
das
pop
mov
cld
xchg
push
inc
insl
ss
rorl
jbe
pop
in
iret
mov
xor
ds
jb
sbbb
jne
dec
in
adc
and
fldt
jno
jmp
repnz
mov
dec
fisubrl
sbb
lret
test
jge
mov
addr16
aam
fidivl
fsubrp
xchg
rcrl
jmp
mov
in
xchg
inc
cmpl
mov
sti
fwait
jl
jne
mov
xorb
test
std
ss
hlt
imul
cltd
mov
sbb
xor
dec
test
sbb
inc
outsl
pop
pop
xchg
sbb
std
pop
jl
andb
out
rclb
imul
cltd
push
lea
addr16
xchg
sbb
adc
gs
inc
rcrl
test
pop
sbb
stos
add
lods
ret
and
dec
sbb
pop
loope
jle
lret
adc
fadds
cmp
insb
dec
cmpsl
dec
mov
mov
rcl
imul
daa
fxch
in
mov
call
daa
dec
mov
stos
inc
push
in
orb
arpl
mov
inc
add
out
cmpsl
adc
cmc
xchg
pop
pop
int
mov
mov
push
out
adc
rcrb
pushf
rcrl
jbe
shll
cmp
sub
pop
jle
jecxz
test
inc
sbb
dec
pop
xchg
jg
mov
sub
inc
adcl
pop
lods
pop
outsl
add
repz
addl
fstps
mov
adc
bound
jle
pop
mov
mov
jnp
popa
enter
popf
inc
push
cmpsl
rorl
mov
cmp
push
dec
cwtl
imul
sarb
enter
jns
jb
test
inc
fistps
dec
ret
andb
sub
popf
insl
fiadds
fs
out
mov
lret
loopne
scas
inc
bound
cmp
packssdw
cmpsb
mov
push
mov
xlat
leave
sub
push
push
add
sbb
dec
jae
sub
popf
push
jp
cmp
dec
out
les
push
xor
mov
outsb
enter
adc
fnsetpm(287
les
cmc
rcrb
add
push
cmp
mov
jecxz
loope
popf
cld
bound
insb
jmp
jne,pn
dec
dec
and
cmp
fs
fs
and
dec
popf
fisubrl
cmpsl
xor
push
pop
mov
testl
outsb
cmp
add
orb
mov
push
sub
pop
jl
mov
push
push
mov
sbb
es
cmove
dec
nop
lahf
ds
mov
sub
negb
nop
jle
fisttpll
sub
repz
dec
mov
push
cmc
dec
cwtl
fcomps
push
mov
inc
mov
push
inc
pushf
es
cli
mov
je
jecxz,pt
insl
inc
mov
jo
mov
ss
std
lea
cmp
fstpt
dec
mull
mov
out
out
stos
mov
mov
jb
sbb
in
pop
ret
fsubrs
cmp
ret
ret
adc
adc
adc
push
mov
cmp
iret
add
xchg
xlat
adc
iret
scas
jno
fstp
jle
mov
adc
mov
cmpl
mov
add
pop
pop
xor
cmp
sahf
dec
test
jp
fcoml
movb
and
bound
sbb
xor
and
xchg
sub
pop
mov
push
xor
xchg
enter
cmpb
rclb
jmp
jb
in
popa
out
aaa
adc
inc
aaa
lret
inc
inc
inc
cmpl
or
jecxz
mov
test
out
imul
movsl
push
mov
pop
pop
push
jmp
jmp
insl
mov
sbb
or
ljmp
sbb
js
shrl
sbb
nop
lock
dec
mov
stos
add
mov
pop
mov
jp
outsb
int3
add
dec
jle
arpl
aam
pop
or
push
add
nop
inc
jge
dec
xchg
and
mov
popa
push
mov
push
pop
pushf
cmp
dec
sbb
cwtl
out
xor
cmpl
mov
mov
dec
push
aaa
out
push
xchg
sub
loope
imul
pop
adc
pop
mov
dec
aad
loopne
stos
ret
shl
mov
add
in
cmp
enter
aaa
pusha
add
xor
adc
rol
fwait
push
add
sbb
jle
imul
sub
adc
std
aad
add
lods
mov
or
push
mov
push
jae
cmp
pop
orb
lcall
add
out
mov
ljmp
and
push
shll
xlat
ret
aas
cmp
pop
sarb
shrl
out
movsb
test
mov
pop
mov
aad
mov
cs
jb
jp
xchg
dec
lock
sbb
mov
jno
stos
xchg
pop
sbbb
dec
xchg
lea
push
lahf
imul
in
cli
ffree
mov
std
aaa
mov
push
adcb
dec
dec
sti
dec
repz
mov
push
inc
xor
scas
xlat
fidivrl
pop
pop
inc
mov
fmuls
fcmovnb
pop
mov
dec
arpl
inc
test
xor
mov
pop
add
scas
lock
stc
mov
mov
adc
arpl
in
add
scas
inc
adc
dec
inc
xchg
sti
adc
pop
jns
mov
push
pop
xchg
sbb
pop
adc
inc
loope
xor
js
dec
aad
cs
ds
pop
xor
into
jl
cmp
leave
test
cs
adcb
inc
popa
ds
and
dec
inc
xor
pop
sbb
lcall
push
pushf
inc
in
sub
push
jmp
push
pop
push
push
aaa
lcall
xor
xor
xchg
je
mov
sub
add
ficoms
shll
pusha
cmp
test
jbe
test
call
mov
aad
mov
in
lcall
addr16
pop
lcall
adc
jno
sbb
fmull
jl
pop
div
or
sub
pop
mul
or
enter
or
insl
add
xor
sarl
add
into
ffreep
pop
jae
pop
cmpsl
lock
test
rorb
test
mov
bound
ret
jl
movb
rclb
fwait
mov
mov
movsb
ret
std
cmp
seta
stos
push
and
das
mov
xchg
les
adc
out
sbb
out
sarb
jae
inc
xchg
pop
loope
aaa
mov
rolb
adc
adc
in
jle
add
pop
inc
ds
and
xchg
pop
lcall
in
pop
negl
and
cmp
clc
hlt
pop
pop
mov
sahf
cld
jmp
aas
addl
inc
in
enter
movsl
push
pop
fbstp
sti
loope
jg
bound
cmc
xchg
loopne
mov
cmp
fs
inc
mov
fucomip
cmp
mov
inc
test
xchg
pusha
sbb
ljmp
inc
jne
cmp
aas
cmc
test
fsubl
add
cs
xchg
roll
out
push
mov
inc
mov
jo
lea
fmull
add
inc
prefetch
arpl
pop
stos
sbb
push
stc
sbb
scas
push
cmp
dec
and
movsl
pop
ret
es
jo
aad
int
fldl
xchg
leave
xchg
inc
and
dec
cmp
shr
repnz
mov
sub
sub
dec
mov
not
jl
jge
add
fwait
dec
lock
loope
jno
mov
adc
jmp
push
fwait
xchg
cltd
mov
ret
xchg
or
imul
jo
je
add
pop
xchg
xchg
sbbl
dec
xlat
mov
pop
divl
xchg
lret
cltd
and
imul
fcoml
movsl
pop
jle
fsubl
mov
sbb
out
lods
xor
mov
stos
jecxz
lret
mov
jnp
movsl
jno
ss
adc
pop
xchg
jo
xchg
sti
inc
pushf
shrl
aaa
lret
mov
adc
and
cwtl
leave
jg
mov
cmp
ljmp
pop
les
into
mov
int3
jo
xchg
ret
shrb
das
cmp
push
sbb
insl
jns
test
adc
jmp
adc
ror
ja
push
sahf
dec
outsl
jb
lea
stos
xchg
insl
inc
sbb
movsb
hlt
push
arpl
repnz
pop
sbb
mov
in
aaa
fsubrp
test
lods
sub
cmp
jb
jge
xchg
out
mov
sub
and
cs
mov
cmp
mov
fsubrl
jbe
movsl
add
cs
mov
jge
xor
dec
cwtl
and
mov
call
test
and
jae
cmpsl
mov
arpl
stos
dec
push
scas
and
scas
nop
fcoml
push
fwait
and
sbb
pop
das
and
inc
std
in
repz
pop
cmpl
fxch
dec
dec
lret
bound
sub
adc
aaa
dec
mov
jl
in
push
mov
add
add
jp
std
in
sbb
js
push
sub
or
adc
scas
aad
outsl
add
mov
stos
das
pushf
test
mov
sbb
aaa
sub
pusha
adc
std
test
jbe
nop
aas
mov
adc
dec
sbb
and
jp
flds
sar
push
leave
movsb
dec
sub
js
test
ret
push
ret
push
mov
adc
insl
fsubr
sbb
pushf
fdivrl
mov
adc
xchg
fcmovnbe
in
xlat
shlb
das
in
sbbb
sbb
sub
sub
arpl
clc
incb
xor
sbb
leave
lods
xchg
stos
sbb
std
fucomp
jmp
mov
cltd
xor
pop
mul
mov
sbb
cli
stos
adc
adc
dec
aaa
lcall
push
dec
sub
mov
stc
cmp
fcoml
in
xor
aad
imul
loope
int3
pop
aaa
mov
dec
pop
or
xor
pop
in
test
stc
cmc
sbb
sbb
xchg
mov
adc
xlat
imul
cmpsb
jl
jg
push
dec
push
cli
mov
cmp
rorb
xor
cmp
in
cmc
mov
fbld
ds
rcll
pop
into
pop
cmpb
sub
mov
xchg
aaa
and
sahf
lret
push
xchg
jl
or
pop
mov
sbb
or
jl
push
xor
mov
pop
cmc
mov
aam
xor
xor
xor
ss
gs
repz
inc
aas
and
lods
aaa
jmp
rolb
pop
loopne
lret
add
push
test
add
and
fwait
pop
xchg
jb
inc
adc
pop
inc
sbb
outsb
in
stc
aaa
cli
push
mov
xor
mov
mov
mov
aad
jns
sar
cmp
xchg
cld
popf
pusha
mov
das
stc
xchg
pop
xchg
mov
dec
in
shlb
add
fdivrs
or
sarb
in
and
mov
loope
int
add
arpl
les
mov
ss
fisttpl
mov
cld
rorb
rorb
fadd
jmp
icebp
aam
lcall
add
ret
sti
nop
out
gs
out
cmpsb
inc
daa
xor
jb
mov
test
repz
lock
jmp
push
adc
mov
add
fsubl
and
jecxz
shrb
xchg
aaa
add
dec
cltd
adc
icebp
mov
mov
cltd
test
mov
mov
pusha
and
pop
enter
ljmp
jg
push
mov
ss
enter
pop
dec
push
fwait
sbb
adc
jbe
mov
mov
and
fidivs
popf
les
inc
stos
and
cmp
cmpsb
scas
movsb
lret
cli
cwtl
mov
ljmp
jg
add
push
js
ffreep
jno
scas
adc
inc
mov
arpl
inc
dec
sbb
aas
mov
inc
adc
mov
sbbb
fmulp
aas
adc
sbb
call
fcmove
push
flds
sahf
push
mov
push
xor
into
mov
cld
mov
adc
and
pop
mov
enter
push
imull
sub
rolb
fneni(8087
sub
jp
jno
and
loopne
sub
leave
push
stos
adc
xchg
pop
das
xor
jle
dec
sar
push
daa
and
pop
mov
xchg
in
push
lods
and
xor
and
cmp
xor
mov
sarb
xor
das
repnz
addr16
lods
jb
mov
in
sub
and
jge
ss
out
adc
popf
mov
jbe
jg
fsts
push
sbb
and
sub
stos
cwtl
mov
lret
popf
enter
sbb
sub
xor
mov
inc
mov
sahf
push
cmpsl
lds
push
mull
sbb
xor
sub
or
xor
shll
jno
pop
test
andl
fs
sbb
aam
xlat
inc
fwait
in
fucomp
scas
imul
or
sub
mov
scas
lahf
jecxz
jle
fsts
aaa
jns
pop
mov
arpl
xchg
lock
xchg
xchg
fcomps
fdivs
addr16
out
bound
xchg
sbb
jne
sbbl
jb
imul
xchg
and
push
scas
pop
mov
xlat
test
inc
sti
and
inc
pand
jle
mov
jns
inc
les
es
in
loop
add
jge
mov
mov
ljmp
mov
jl
jg
fistpl
lock
adc
mov
pop
cmp
outsb
mov
or
out
push
sub
jne
fisubrl
push
neg
mov
add
dec
pop
xchg
int3
ja
push
mov
mov
fwait
ljmp
ss
testl
push
pop
cmp
mov
sub
into
cld
xchg
cmp
test
and
cmp
inc
jge
insb
mov
pushw
push
adc
sub
pop
mov
or
cwtl
stc
pop
lret
imulb
cmp
inc
bound
popa
push
shll
lcall
jb
aas
lods
lea
push
int
mov
inc
daa
inc
xchg
ret
shr
pop
fists
pop
jb
mov
add
xchg
xchg
rclb
sub
jle
xorl
fmull
sbb
pop
push
lock
xchg
enter
idivl
js
aaa
jb
retw
mov
pusha
push
cmp
adc
xor
dec
arpl
rcr
mov
mov
loop
cmp
push
xchg
out
clc
pop
jl
scas
push
test
pop
jnp
dec
inc
test
stc
dec
push
push
lock
xor
lods
aaa
sbbb
imul
lods
pop
push
dec
pop
out
xchg
pop
or
dec
sbb
inc
sbb
cld
and
dec
lods
dec
pop
jno
std
mov
test
imul
in
aad
cmpsb
rorb
mov
int
push
sbb
ret
inc
or
lock
jecxz
or
and
and
loopne
mov
inc
sbb
inc
adc
or
insl
lods
pop
mov
push
pop
repz
mov
fildll
pop
decb
inc
loope
adc
mov
in
out
lods
stos
add
mov
xchg
sbb
mov
aad
push
mov
add
jnp
xor
xor
in
cmp
jbe
sbb
and
xchg
mov
fwait
cltd
mov
repz
mov
mov
stos
out
sbb
pop
mov
sbb
or
jae
dec
cmp
and
cmp
and
jns
fwait
inc
imul
jb
jnp
jnp
dec
pop
fsubs
idiv
lods
lods
mov
data16
out
shld
dec
push
pop
push
inc
inc
repnz
xchg
lret
outsb
mov
test
test
mov
jle
test
in
outsb
mov
xor
mov
jno
cmc
xor
adc
adc
adc
add
inc
mov
fisttps
shlb
cmpsl
cmp
aaa
lea
mov
mov
sarb
popf
ds
pop
sbb
or
test
and
lds
mov
jecxz
rolb
aaa
dec
std
sar
arpl
jb
jae
jne
adc
std
aaa
xor
fisttpll
cmp
add
aas
jecxz
cmpsb
insb
arpl
add
mov
sbb
and
and
sbb
rcrb
push
push
inc
stos
add
cmpsl
aaa
inc
mov
adc
and
out
mov
ret
sbb
mov
and
sub
out
cli
jnp
mov
pop
sub
outsl
rolb
popf
mov
mulb
sbb
sbb
adc
scas
sbbb
add
and
sub
mov
push
and
enter
inc
pop
dec
nop
mov
mov
adc
jo
sub
cli
cmp
dec
add
xor
xor
mov
sub
or
aas
sbb
jl
js
jnp
sub
sub
dec
std
mov
xchg
fnstenv
fcoms
popl
popf
xor
out
popa
sbbl
je
xor
repz
shr
mov
cmpb
hlt
mov
out
mov
and
outsl
scas
cmp
or
repz
fdivrp
xchg
lret
mov
xchg
pop
mov
popa
push
mov
loopne
aad
cmp
jbe
mov
jmp
ss
and
mov
fildll
daa
pop
sbb
cmpsl
stos
mov
jg
push
jge
in
cmp
adc
inc
adc
xchg
in
mov
fs
fstpl
fwait
add
pop
int3
fidivl
xchg
jo
fwait
jmp
cmp
packssdw
call
adc
add
jno
mov
incb
aam
out
and
mov
lgs
inc
inc
out
and
pop
pop
xchg
addb
dec
adc
adc
lods
pop
imul
test
xchg
mov
in
out
sbb
pop
rolb
jbe
xchg
mov
daa
adc
cmpsl
fisubs
cmp
rorb
out
sub
fldcw
adc
mov
stos
popa
adc
push
push
pushf
inc
icebp
xor
lret
out
sub
sbb
jne
aaa
inc
notl
lock
push
xchg
jle
aaa
and
imul
jnp
adc
xor
arpl
icebp
mov
pop
jecxz
ljmp
dec
icebp
mov
andl
pop
test
fs
sbb
bound
mov
cs
mov
ja
ret
imul
push
ficoms
int
aas
push
adc
subb
and
cmpsl
pop
arpl
fst
pusha
cli
std
xor
ja
inc
and
enter
test
mov
push
inc
or
add
fisttpl
or
inc
hlt
push
mov
pop
push
popf
mov
pop
xor
or
dec
fmul
pop
push
pop
adcl
scas
lcall
sbb
pop
fistl
rorl
mov
dec
push
aas
rol
sti
cwtl
sbb
mov
loop
dec
leave
mov
in
pusha
in
pop
pop
cmc
out
xchg
pusha
cwtl
add
lds
mov
outsb
ficoms
sbb
popf
push
in
xchg
sar
xor
jbe
movsl
cld
cmp
shrb
mov
add
rcr
and
outsb
pop
icebp
sbb
adcb
mov
push
ret
inc
dec
fs
jnp
cltd
adcb
inc
push
nop
push
mov
push
jbe
jle
and
pmaxsw
adc
cmp
lock
fidivs
xchg
pop
outsl
inc
adc
push
shrl
sbb
movsb
scas
or
pop
ret
push
loope
and
test
out
adc
push
mov
aam
adc
sbb
rcl
inc
adc
std
out
clc
bound
add
lea
in
pop
sarl
pop
xchg
test
cli
sub
call
jno
jbe
sbb
lea
into
fsubrl
or
sbb
pushf
addr16
adc
pop
sbb
cmpsl
sbb
outsb
dec
into
cmp
mov
daa
cmp
pop
xor
je
push
jne
arpl
cld
pop
add
in
inc
pop
cmc
and
cmp
and
add
jno
jl
cmp
bound
or
xchg
jle
push
add
jecxz
fsubrl
fisttpll
adc
dec
xchg
das
cld
pop
push
aam
add
inc
sbb
lret
pop
mov
imul
push
sbb
into
lock
mov
lods
stos
aas
das
pop
push
aaa
cmp
ss
pop
xchg
jns
pop
or
fldenv
pop
fwait
mov
fildll
and
inc
fmull
sbb
inc
jle
xchg
leave
fsubl
or
call
mov
bound
mov
loop
enter
sub
inc
sbb
sbbb
lret
scas
flds
push
jb
push
sti
sti
fdivrl
push
cmpsb
mov
addr16
int
repz
mov
sti
jmp
in
fisubs
jge
mov
pop
les
or
das
mov
pop
nop
scas
inc
repz
sbb
cwtl
mov
lods
cltd
out
ret
jmp
lahf
jmp
dec
loope
push
arpl
xchg
test
out
pop
dec
dec
and
pop
pusha
in
aaa
fmul
out
push
js
or
inc
push
adc
daa
fwait
aaa
loop
pop
popf
cs
push
sbb
push
repz
lods
scas
xchg
cmp
hlt
xor
inc
mov
mov
mov
scas
pop
sub
inc
sub
push
mov
sbb
cmp
add
sbb
jg
adc
jns
mov
dec
loope
push
cmp
cmp
pop
or
mov
fstpt
sub
hlt
mov
ljmp
push
add
xor
out
sti
ret
jl
hlt
adc
rcrb
adc
inc
cli
and
cwtl
imul
xchg
jbe
insl
push
xor
mov
out
mulb
mov
enter
jno
sub
jge
scas
insl
aaa
fistl
lret
cmp
adc
loopne
push
int3
mov
jb
or
jl
fisubrs
imul
in
sbb
cmpsb
sbb
fwait
les
hlt
iret
dec
jecxz
mov
inc
outsb
pop
xchg
xchg
cmp
xchg
xor
pop
cmp
mov
dec
dec
loope
cmpsb
insl
aad
inc
mov
ret
mov
add
lret
outsb
pop
sarl
bound
add
pop
arpl
sbb
inc
push
dec
mov
push
in
sbb
dec
dec
lret
pop
jmp
or
add
jns
mov
sarl
mov
ret
cmp
rorl
mov
jl
ss
xor
cmc
adc
xchg
pop
inc
shrl
int
xchg
out
loope
mov
fs
shrb
ret
testb
call
lods
cmp
sub
sub
in
aad
xor
pop
sbb
lcall
mov
xor
pop
fwait
push
in
testl
mov
popf
jns
scas
lret
or
adc
arpl
inc
out
jge
push
sub
mov
xor
in
stos
pop
daa
jmp
pop
sbb
cld
test
xchg
mov
and
les
aaa
cmp
pop
fiadds
cmp
lods
adc
outsl
arpl
fnstsw
push
mov
imul
dec
push
mov
jno
add
push
xchg
cmp
iret
add
dec
fwait
arpl
outsb
inc
dec
pop
xchg
sbb
filds
je
repnz
xorl
cmp
dec
lcall
add
movsl
sbb
in
rcrl
aas
sar
mov
mov
loope
pop
mov
adc
repnz
or
dec
push
loope
ja
sub
in
dec
stc
int
sub
mov
lcall
adc
lock
adc
xchg
mov
aaa
pop
or
pop
out
arpl
xchg
push
dec
and
cmp
cmpsb
leave
jg
pop
sbb
insb
enter
aaa
pusha
addl
jmp
sbb
push
pusha
in
push
sahf
add
push
mov
arpl
add
pop
and
sbb
insb
jns
fnsave
jns
or
mov
cwtl
cmp
pop
sbb
cmc
pop
push
insb
or
jmp
and
in
pop
adc
add
lcall
cmp
movb
mov
lock
mov
or
lfs
scas
das
and
jl
out
pushf
xchg
dec
negl
push
scas
mov
push
and
fcmovne
add
out
xchg
dec
js
aaa
adc
dec
into
lock
mov
sahf
push
dec
jo
mov
sub
sub
pop
dec
pop
das
cltd
js
loope
jp
jg
dec
fwait
pop
xor
push
insl
inc
fisubl
scas
pop
cmpsb
jp
sub
fs
inc
scas
rcr
sahf
stos
mov
mov
icebp
add
push
aaa
and
pusha
les
xor
adc
out
in
dec
arpl
add
aaa
add
ffree
insb
mov
out
jnp
jae
icebp
mov
push
int3
ror
pop
jmp
divl
ljmp
ret
pop
pusha
or
jp
and
fsub
add
jmp
add
imul
jmp
mov
scas
movsl
adc
pop
push
cmp
movsl
jno
jp
push
adc
cld
and
mov
pop
and
popf
sub
mov
cli
xchg
jns
adc
fstpl
jle
loope
cmp
xor
pushf
les
xchg
pop
fstpt
outsb
enter
outsb
nop
stos
daa
cmp
xor
mov
pusha
dec
sbb
pop
notl
rcl
xchg
mov
xlat
xchg
xchg
cmp
mov
into
cmp
les
lcall
outsl
jns
jno
ds
in
pop
xchg
lds
xchg
add
mov
sahf
fadd
mov
mov
push
test
xor
inc
aas
jbe
aad
loopne
call
xchg
stos
pop
mov
aaa
sbb
lret
mov
dec
sub
push
aam
mov
inc
iret
sbb
fadds
push
inc
aam
insl
add
add
pop
or
call
mov
jb
addl
mov
rcr
ds
fstpl
mov
jmp
dec
mov
out
inc
pop
xchg
xor
addr16
pop
je
popa
mov
test
mov
sub
fisubs
adc
adc
mov
aaa
push
pop
push
ljmp
rsqrtps
and
icebp
leave
imul
pop
xchg
mov
mov
jne
pusha
stc
jmp
jge
daa
loopne
push
fdivrl
xchg
pop
ja
mov
xchg
cmp
add
xchg
inc
pop
dec
stc
mov
pop
mov
dec
inc
or
shr
aaa
mov
pop
rcrb
in
push
cltd
jae
pop
in
mov
jp
lret
loope
lea
cmc
icebp
push
fistl
fadd
fmul
adc
xchg
loope
test
and
lret
pushf
enter
in
and
in
sub
and
mov
mov
dec
sub
cwtl
decl
dec
add
addb
movsl
push
push
push
je
inc
stos
jae
aad
fldcw
jnp
inc
insb
fs
and
dec
push
jmp
iret
or
and
jecxz
and
sub
mov
mov
fidivrl
xchg
xor
inc
pushf
xor
fwait
mov
sbb
cmp
test
lret
fs
xchg
fdivr
sti
mov
jl
ret
mov
xchg
in
pop
into
movsl
adc
out
js
sbb
fistpll
and
mov
test
stc
fldt
aaa
and
es
ret
test
in
mov
cmp
pop
pop
mov
into
pusha
jns
add
ret
faddl
mov
adc
fistpll
mov
lahf
inc
jl
inc
testl
cmp
sub
sbb
and
ret
sbb
lock
sub
jl
sbb
jnp
enter
dec
insl
out
andb
cmpsl
or
bound
jb
pop
mov
pop
pop
loop
ret
ds
mov
xchg
mov
repz
inc
jecxz
mov
cltd
jp
mov
inc
mov
notb
and
dec
aaa
decb
add
mov
testb
jnp
sub
adc
mov
jp
push
stc
repz
rcl
inc
lods
sbb
mov
out
ss
mov
push
sahf
push
div
mov
mov
xchg
pop
xlat
ss
pop
pop
push
xlat
aad
lock
push
or
cli
pop
outsb
icebp
lock
xor
adc
movsl
aad
and
pop
in
adc
pop
inc
ja
cmpsb
push
sub
lods
std
bound
sbb
add
mov
pop
add
sub
fimuls
xchg
stos
sub
lret
sbb
rcrl
setns
mov
inc
jae
fidivrs
mov
jbe
or
push
pop
jno
outsl
fsubrs
enter
mov
insl
mov
lret
shr
insb
xchg
sbb
jge
add
cwtl
sahf
loop
mov
push
daa
stos
in
jb
cmp
cmpsl
mov
imul
jae
pop
lahf
enter
adc
mov
sbb
sbbb
int3
xor
loop
jo
aaa
cmpsb
loop
mov
jbe
or
iret
sub
and
pop
mov
dec
lods
and
sahf
xchg
mov
mov
int3
sbb
outsb
mov
xor
or
sar
ja
jo
ljmp
mov
aaa
push
push
arpl
jecxz
stc
subl
dec
popa
or
pop
cmp
lea
adcb
pop
movsl
loope
pop
pop
cli
mov
shlb
push
pop
cmpsb
sbbb
flds
cmp
das
stos
sahf
pop
js
push
call
inc
add
aaa
jecxz
pop
cld
out
jge
hlt
scas
fiadds
arpl
xchg
imul
lods
roll
ljmp
notb
add
mov
push
sti
or
mov
ja
and
cli
outsl
and
scas
jns
aaa
mov
jl
adc
jg
pop
aam
mov
test
scas
add
push
jbe
mov
sbb
negb
imul
xchg
adcb
insb
cmp
scas
add
xchg
mov
rorl
pusha
test
inc
sti
xor
mov
and
mov
iret
cld
pop
jmp
pop
jb
std
lods
push
and
jl
test
popf
jnp
in
aas
out
and
aaa
xchg
xlat
int3
mov
popf
or
movq
push
out
sbb
icebp
mov
mov
shl
pop
mov
add
add
mov
rcl
add
sub
leave
out
aaa
pop
adc
sub
dec
imul
add
fdivs
lods
ds
push
add
loop
rclb
cmp
and
into
add
js
fwait
insb
sbb
xor
outsl
jge
and
inc
icebp
xchg
fldenv
adc
aaa
orb
cmpsl
xor
nop
xchg
jp
and
dec
push
sub
dec
fstps
rep
loope
aaa
aas
popa
setnp
daa
imul
filds
xor
inc
xor
rolb
sbb
fiadds
jno
push
xlat
aaa
out
loopne
sti
pop
jg
pop
xchg
mov
mov
enter
movsl
lea
mov
sbb
or
shlb
lds
inc
adc
mov
out
lods
sub
nop
sub
pop
pop
add
mov
xor
movsl
lret
dec
cmp
add
or
pop
jmp
lret
cmp
icebp
lret
fists
insb
jecxz
jmp
cmp
cmp
mov
mov
adc
mov
mov
pushf
outsb
mov
sti
arpl
xchg
dec
mov
std
xchg
lahf
add
bound
cmc
adc
aaa
sub
insb
jp
mov
cld
and
dec
cmp
sbb
mov
loope
mov
rorl
sub
cld
or
pop
out
fildl
cmp
loope
lcall
lret
and
xlat
jb
sahf
in
das
and
dec
imul
jle
pop
fsubr
pop
push
pop
inc
pop
jmp
pop
inc
cmp
idiv
insb
and
cmpsl
aas
sub
sub
rclb
lahf
fsubs
fs
in
cmpb
sbb
or
test
loopne
fnstcw
or
or
xor
xchg
xor
jg
xchg
mov
loopne
pop
lret
outsl
jg
mov
or
pop
and
mov
std
stos
jb
sub
cmp
fwait
clc
in
fimull
or
shrb
fmull
aaa
in
pop
jo
xchg
ret
lock
std
in
xchg
sbb
cwtl
std
int3
jbe
ja
cld
pop
in
push
pop
push
xchg
pop
xor
aaa
cmc
inc
sti
push
aad
stc
into
incl
scas
imul
cmp
cmp
sbb
pop
add
push
pop
jb
jbe
dec
jle
ss
ja
cmp
push
push
sbb
lds
fisubs
jg
dec
cmp
jg
test
sti
inc
or
imulb
lds
adc
pushf
xchg
je
rcl
inc
jmp
push
std
xchg
sub
scas
mov
sbb
outsl
sub
divb
dec
insl
aas
mov
enter
sbb
inc
sti
cmc
mov
fstp
sbb
or
mov
sbb
hlt
sbb
lret
sbbb
movsb
xchg
push
test
xor
mov
in
xlat
addr16
pop
test
aaa
in
pusha
std
sbb
or
cmp
jg
push
xchg
or
cmp
cmp
fbstp
fadd
mov
icebp
fs
lret
mov
or
jb
pop
mov
inc
push
mull
shll
pop
idivb
push
mov
adc
data16
dec
jp
lcall
mov
add
in
js
dec
xor
rcll
movsb
fstpl
xchg
and
loope
jae
fsubs
sbb
sbb
push
movsl
sahf
push
sbb
add
es
inc
mov
cli
add
mov
xor
mov
mov
dec
fwait
sbb
jp
outsl
cld
rep
aas
cmp
mov
inc
lret
xor
add
dec
xchg
push
outsb
dec
sbb
adc
pop
jnp
movsl
aaa
ret
loope
mov
ja
pushf
imul
das
cmp
roll
cltd
cs
xchg
fwait
addr16
inc
sbb
and
pop
jecxz
push
loope
xor
mov
mov
or
aaa
movsl
test
into
lock
xchg
outsl
mov
je
repz
add
mov
sbb
inc
pop
pop
rol
inc
sbb
insl
shll
lret
pop
mov
cmp
inc
lahf
insl
cltd
fisubs
pushf
sub
fmull
lea
lret
nop
mov
insb
dec
hlt
aas
sbb
sti
stos
loope
mov
stc
inc
pop
ds
les
stos
scas
cmp
jp
pop
xor
or
inc
jnp
shlb
pop
cli
mov
leave
push
adc
pop
jle
mov
arpl
sti
addl
xchg
xor
dec
ret
inc
in
xchg
xor
int3
xor
sub
arpl
cmp
mov
andb
js
movsb
ss
jg
pop
imul
cmpsb
out
pop
jl
hlt
lock
push
sbb
lods
out
cmp
mov
dec
pop
xor
jmp
addr16
lahf
mov
js
mov
sub
xchg
xchg
in
adc
and
shlb
in
xor
pop
jp
mov
xchg
mov
xchg
sahf
mov
lret
xchg
add
xor
inc
and
subl
test
mov
enter
mov
sbb
mov
imul
adc
nop
inc
dec
leave
and
jmp
inc
mov
mov
popf
mov
push
or
mov
adc
cmp
mov
aaa
into
je
pop
shll
scas
cltd
pop
mov
rol
cmp
mov
insl
dec
xor
cmp
pop
sbb
push
push
jb
pop
pop
pop
xchg
adc
fstps
leave
push
sbb
imul
mov
scas
cld
pop
jmp
popf
push
aaa
stc
jae
in
pusha
pop
stos
xchg
dec
rcr
jp
fwait
xchg
adc
loop
test
ja
pusha
sub
jmp
cmc
mulb
mov
adc
sbb
push
scas
fadds
and
push
mov
adc
add
jg
pop
pop
fisubs
adc
add
mov
adc
and
inc
mov
movsl
pop
iret
popa
out
jle
test
in
notl
pop
and
cmp
push
in
popf
sahf
mov
cmp
arpl
nop
lret
adc
xchg
sub
subl
fldenv
sbb
and
aam
ret
add
xchg
fcompl
mov
add
jl
imul
in
sahf
lahf
aas
inc
jae
xchg
aaa
cmpb
mov
mov
imul
bound
dec
in
push
cs
enter
ret
scas
out
popa
and
cmp
fs
lret
pop
lahf
mov
loopne
adc
xor
scas
fwait
stos
add
lret
loop
xor
sti
jmp
push
out
sbb
pop
fcmovne
shl
cmpsb
and
pushf
pop
es
leave
push
inc
test
jb
fmul
dec
mov
push
pop
leave
mov
jge
sub
push
enter
sbb
mov
cmp
jp
add
sbb
xchg
aaa
push
lret
daa
loope
mov
mov
cmp
dec
xor
inc
loopne
sbb
dec
cmp
ficomps
enter
insl
inc
sarb
iret
fildl
and
push
clc
jge
insb
popf
cmpsb
fs
addb
stc
push
sub
mov
lods
test
jne
cli
xchg
sub
mov
cmp
push
xor
data16
fidivs
push
mov
call
scas
cli
mov
fistpl
pop
cmp
mov
call
pop
mov
add
andl
mov
sbb
xor
fwait
pop
jbe
xchg
push
sub
or
mov
jecxz
dec
nop
cmp
je
xchg
inc
cmp
adc
scas
jg
mulb
imull
or
imul
xchg
cld
call
mov
push
scas
inc
mov
and
outsl
dec
mov
jmp
xchg
out
pushfw
fsts
mov
xchg
aaa
sub
sub
push
fmull
lds
mov
pop
or
mov
lahf
adc
push
ss
jbe
aas
push
pop
ss
das
mov
nop
mov
mov
loope
jle
jo
sbbl
jle
xchg
mov
ljmp
enter
bound
test
jb
sub
pop
sbb
add
repz
in
add
jmp
pop
fdivl
cmp
cmpsl
outsb
pop
jmp
and
jmp
mov
lea
jmp
test
xor
outsl
in
add
pop
sub
cwtl
xchg
cmp
jge
mov
mov
cmpl
movsl
popf
jno
cmp
sbb
pop
scas
sbb
sub
cmpb
add
dec
inc
mov
pusha
cmp
repz
pop
dec
pop
jge
js
inc
cwtl
ljmp
mov
mov
mov
sbb
dec
dec
andl
lcall
imul
sbb
xor
repnz
lret
xlat
push
inc
mov
or
jno
inc
pop
cmpsb
out
setle
insb
lahf
jp
cld
jo
add
pop
mov
rcrb
and
cmp
sbb
outsb
add
int
mov
and
loope
test
pop
rcrb
sbb
jo
or
cmpsl
mov
cmpsl
mov
push
mov
popf
fldt
je
jg
dec
data16
dec
aad
add
arpl
adc
pop
cmp
jle
test
and
or
pop
shrl
mov
and
fmuls
fnstenv
mov
sbb
jecxz
jl
and
ficompl
adc
les
out
pop
xchg
orb
cli
push
in
loope
sbb
popa
jl
cmpsl
sarl
mov
sub
in
out
mov
pop
mov
dec
icebp
xlat
add
cmp
mov
mov
aam
scas
aaa
xchg
fmuls
sub
xor
rcr
out
pop
pop
mov
mov
mov
add
faddp
das
cmp
dec
mov
jae
ss
testb
enter
sbb
sarl
cli
lret
dec
inc
adc
cmp
or
lock
xchg
inc
pop
lock
mov
das
add
sbb
roll
rorl
xlat
in
push
pop
icebp
aas
or
adc
add
fdivrs
mov
es
das
pop
bound
inc
sbb
jne
dec
mov
cs
addl
lock
mov
pop
push
outsw
pop
test
call
push
add
push
pop
fnstcw
cmp
pop
out
js
mov
xchg
lcall
xchg
pushf
test
loop
mov
push
sbb
gs
lock
add
ja
test
xor
rol
pop
xor
cmp
ror
rcll
mov
or
aam
jg
pushf
push
push
add
pushf
lcall
mov
and
cmpsl
mov
push
sbb
arpl
sarb
std
cltd
rol
adc
pop
dec
xchg
and
pop
imul
rol
push
pop
lahf
mov
frstor
aaa
mov
mov
outsb
add
and
jbe
mov
ret
fucomp
icebp
fs
dec
push
in
sti
aaa
mov
test
dec
aas
adc
movsb
fdivrl
loope
mov
cmpsb
shr
sbb
xor
jge
pop
jno
mov
xchg
xor
fstpt
scas
repnz
fildl
or
repz
ds
fnsave
pop
pop
sub
in
xor
sub
lret
xor
movsb
nop
lea
cwtl
das
dec
ss
arpl
dec
dec
cmp
push
or
and
pop
dec
and
js,pt
push
test
or
icebp
in
jmp
and
and
pop
cltd
mov
arpl
push
pop
push
scas
add
lods
enter
popa
mov
lret
add
fisubl
repz
jb,pt
mov
addr16
add
out
mov
xchg
sub
pop
dec
pop
vpmacsdd
loope
jnp
imul
mov
and
mov
jge
cmp
das
sbb
jmp
dec
sahf
sub
repnz
insb
xchg
cmpsb
fs
lods
aad
insl
lea
rorb
add
lea
or
pop
fsubr
shll
cmpsl
ret
xor
cmp
push
addb
and
add
add
aas
sbb
or
xchg
mov
ss
loop
sub
xor
cmp
adcl
aas
inc
pop
push
lock
jmp
sbb
mov
push
mov
push
jp,pt
and
ja
cmp
outsb
pop
push
and
jp
xor
push
xor
sub
inc
mov
enter
aaa
ja
fistps
cmp
add
inc
aam
or
mov
jmp
ficomps
imul
cmp
sub
scas
cmpsl
sbb
mov
gs
shll
push
or
pop
inc
inc
inc
jne
jae
sub
pop
jl
lods
sbb
lea
ja
sub
mov
inc
in
xchg
xor
rcll
int
and
xor
jb
nop
cmc
icebp
sub
xchg
push
in
cmp
inc
xchg
aas
mov
jb
pop
dec
lds
mov
dec
cmp
jnp
lds
aad
and
push
push
sub
arpl
inc
sbb
loop
mov
notl
sbb
inc
nop
ss
adc
mov
sbb
sti
aam
cmpb
add
xlat
pop
push
fadds
movsl
fstl
xlat
dec
faddl
movb
jg
inc
jne
sbb
mov
ss
sbb
mov
jb
mov
cltd
add
in
jns
sbbb
xchg
popf
pop
js
xchg
movsb
pop
xchg
or
cmp
insl
push
cli
bound
mov
add
loope
ds
lea
cltd
push
mov
jecxz
fstps
fsubr
pop
scas
sub
mov
sbb
test
inc
test
imul
push
lock
fisubs
cmp
mov
ret
push
sub
test
dec
mov
xor
dec
mov
add
imul
or
push
cmpsl
push
cs
ds
jno
lret
or
mov
xchg
jle
jb
and
sbb
pop
jmp
fwait
mov
loopne
dec
jmp
divl
or
cmp
mov
jb
js
sbb
mov
in
cmc
jl
push
or
out
loope
sbb
add
pop
pop
arpl
cmp
aam
push
orb
sahf
mov
or
pop
adc
inc
hlt
add
ljmp
lcall
lcall
mov
cmpsb
lods
sarb
jb
cld
hlt
idivb
xchg
mov
mov
scas
hlt
in
js
xor
aas
inc
outsl
fisubs
mov
cmp
in
mov
lock
push
adcb
rcrb
mov
insl
call
sub
pop
test
repnz
pop
dec
pop
mov
jg
in
lea
dec
mul
incl
imul
push
mov
mov
inc
inc
out
push
rolb
inc
mov
data16
dec
out
adc
or
loop
push
inc
sahf
fsub
iret
sar
pop
sbb
jns
pusha
xabort
aas
add
popf
pop
scas
xchg
inc
aaa
fwait
loop
pop
or
sbb
pop
lea
pusha
dec
or
out
loop
xchg
cld
pop
push
cmp
std
add
push
cmp
cmpsl
clc
fs
xor
bound
fwait
pop
aad
inc
bound
cmpsb
cmp
xlat
push
xchg
lea
pop
jp
pop
push
or
sub
sahf
loopne
or
mov
mov
sahf
jecxz
pop
xor
lods
mov
jbe
mov
inc
add
jae
xor
das
out
lea
push
inc
pop
inc
stc
push
and
cmp
int3
lret
inc
push
push
inc
repz
ret
cmp
xchg
jo
fcmove
stos
popa
mov
push
subb
inc
sbb
inc
pop
dec
dec
in
jle
jno
mov
scas
test
cmp
inc
aaa
imul
cmp
and
inc
sbb
xor
pusha
push
es
inc
sub
in
andl
cmp
ds
adc
jo
cmp
mov
fcmovnbe
jmp
incl
jb
fistpl
negb
out
sub
mov
sahf
xor
lods
pop
dec
jmp
sub
pop
fsub
sarl
pop
iret
jp
fwait
mov
pusha
sbb
scas
insb
add
jge
push
mov
fwait
nop
lret
jecxz
push
lret
in
pop
imul
aad
mov
push
stos
cmp
sahf
rcrl
xchg
sbb
add
je
pushl
cs
cld
mov
sub
into
and
push
stc
mov
das
sbb
pop
inc
ja
popa
aaa
push
sub
mov
js
sbb
sbb
cmpsl
dec
mov
and
sbb
in
sbb
jmp
add
loope
es
cmp
popf
pop
dec
sub
or
aas
in
push
sbb
imul
jo
push
data16
fs
adc
cmpsb
or
pop
push
xchg
xchg
stos
pop
cmp
xor
xchg
cs
popa
mov
fisubrs
aaa
inc
cmp
imul
jle
sbb
fxch
aam
xchg
mov
push
outsb
sbbb
dec
test
sti
adc
loop
inc
push
cmp
push
mov
mov
pop
dec
adc
je
shll
add
pop
or
and
push
lret
bound
mov
sbb
popw
ljmp
jae
add
sub
xor
aaa
ljmp
out
push
jbe
xchg
test
hlt
pop
lret
push
ja
inc
push
and
out
adcb
and
sub
xor
jl
fcmovnu
in
push
push
fistpl
lea
pop
ds
mov
and
shll
push
ja
push
jno
fsub
jo
mov
mov
sub
in
dec
mov
cli
inc
das
mov
iret
lcall
jle
push
jno
shl
lock
aad
je
cmpb
hlt
call
outsl
int
ret
pop
and
inc
jo
scas
mov
jl
adcb
inc
and
sub
fistl
push
out
cmpsb
je
dec
mov
mov
stos
hlt
arpl
pop
sti
push
ret
outsl
int3
jecxz
dec
sub
mov
dec
jb
jne
xlat
mov
and
push
cmpsl
dec
jg
pop
clc
mov
push
jns
pop
rolb
dec
and
dec
fbld
loop
scas
sbb
shlb
sbb
dec
jmp
or
adc
inc
insb
mov
popf
xchg
and
stos
mov
dec
repz
mov
or
es
sub
mov
jle
aaa
xchg
cmp
iret
add
push
pushf
jne
or
aam
lea
repz
mov
nop
jne
shlb
jb
add
test
add
inc
sub
mov
mov
pusha
cld
arpl
sahf
adc
cld
jmp
aas
loop
mov
push
pop
lods
pop
test
and
sbb
jno
popf
icebp
xor
aam
ror
push
sbb
adc
pop
mov
movsl
inc
call
dec
cmp
jp
aaa
btsl
aam
repz
pop
aaa
lds
cltd
icebp
push
adc
xor
out
stc
sbb
mov
pop
aam
or
icebp
or
xor
int
dec
push
je
lret
ljmp
xor
idivb
jae
rol
icebp
stos
stos
hlt
jge
jo
xor
pop
pusha
mov
int3
add
cmp
pop
ds
stos
inc
push
insl
popl
mov
xchg
and
jb
lcall
adc
mov
mov
sub
mov
cmp
ss
lret
pop
mov
hlt
rolb
out
imul
push
sbb
mov
xchg
mov
lea
loopne
sbb
mov
aaa
fndisi(8087
xchg
fisubs
pop
jo
jno
std
sarl
and
lds
frstor
push
mov
icebp
inc
pusha
loop
pop
inc
lds
or
orb
xor
fcoms
test
aaa
dec
iret
idivb
loope
aaa
add
shr
and
lods
sbb
sti
call
push
jg
mov
jnp
movsl
xor
mov
mov
inc
arpl
mov
imul
dec
lock
fisttpl
sub
js
sahf
dec
popa
pop
bound
mov
dec
in
repz
mov
jmp
insb
das
ficompl
inc
loop
ret
rcl
int3
mov
fldl
and
and
iret
push
mov
sbb
sub
jns
jbe
dec
ret
xchg
out
pop
xchg
lods
mov
mov
loope
lea
cmpsl
pop
test
cwtl
mov
add
mov
call
mov
cmpsl
pop
xor
push
mov
ja
jg
xchg
sub
mov
dec
xchg
lods
pop
push
neg
imul
mov
mov
aaa
aaa
pusha
imul
scas
pop
fidivl
push
xor
icebp
jb
scas
fisubrs
enter
je
jmp
adc
add
out
pop
mov
dec
pop
lods
pushf
cltd
lret
pop
and
cmpsl
aad
xlat
pushf
pop
jge
adc
scas
jo
fwait
dec
push
push
scas
push
push
sbb
mov
clc
test
adc
xchg
sub
pop
loop
push
lods
imul
mov
stc
inc
mov
inc
rcrb
das
mov
in
push
lds
jge
dec
aaa
xchg
movsl
adc
ja
pop
mov
aaa
add
cmp
fcomps
jno
cli
jmp
fistl
xor
daa
ret
xchg
push
enter
push
mov
jae
adc
mov
xchg
xchg
mov
or
pop
out
orb
dec
mov
adc
push
mov
xor
sub
in
ret
mov
out
aaa
sti
cmp
das
pushf
jecxz
dec
jae
pop
lods
scas
xchg
fnstsw
outsl
int
xchg
xor
cmp
add
push
jl
shll
mov
pop
xor
sub
rcrl
jle
fwait
mov
pop
cltd
mov
aas
lret
xorb
notl
insl
sahf
mov
lea
les
inc
negb
push
push
add
pop
xlat
push
sbb
mov
sbb
call
jae
outsb
outsl
cli
ds
out
je
fwait
sbbl
mov
cli
les
addb
cmp
cwtl
int3
jne
inc
cmp
and
sbb
inc
pop
repz
adc
inc
test
pop
enter
pop
push
and
dec
add
in
lods
add
pop
pop
and
in
outsb
enter
bound
in
inc
cmc
pop
cmp
and
xor
les
enter
fisttpl
hlt
dec
mov
ljmp
adc
ss
and
mov
out
leave
fidivs
call
ffreep
add
call
lret
inc
mov
outsl
sub
push
popf
insb
pop
popa
mov
mov
dec
adc
imul
ja
imul
push
mov
aad
loop
cli
ret
add
xchg
stos
add
lods
mov
mov
lods
aaa
popf
in
pop
out
mov
icebp
out
inc
jno
fimuls
cmpsb
pop
lret
jl
push
into
test
jg
out
jmp
sub
xor
inc
dec
sub
stos
lods
orl
sub
mov
fst
xchg
pop
mov
sbb
inc
jmp
sbb
cltd
enter
adc
data16
stc
push
jo
xchg
mov
jle
cmp
inc
inc
xchg
in
clc
add
and
jle
sbb
push
and
popf
loope
in
fsubs
sub
das
inc
sub
mov
mov
push
repnz
jo
pop
pop
shll
inc
out
mov
xchg
mov
push
sbb
xor
movb
mov
push
lea
sarl
mov
sub
adcl
or
aaa
xor
call
add
sbb
adc
sub
stos
add
imul
xor
and
call
into
jg
aaa
adc
movsl
push
xor
cltd
mov
jge
pop
cmp
sbb
jle
inc
cmpsb
pop
cld
sbb
adc
loope
add
inc
in
push
push
std
sbb
push
dec
mov
mov
cmp
das
in
cmp
cld
mov
aam
sarl
and
cmpb
jb
shll
loope
pop
inc
adc
aaa
xorl
cld
lea
adc
cli
xor
das
pop
push
push
push
pop
icebp
push
adc
fadds
inc
repnz
loope
xor
fucomi
mov
fcompl
stos
mov
shll
pop
test
pop
push
into
jge
mov
outsb
xchg
fnsave
in
les
out
int3
mov
out
stos
lea
adc
loope
mov
nop
inc
push
adc
pop
pop
mov
add
outsb
shrl
into
xor
push
or
pop
test
mov
repz
pop
inc
jb
shrl
repz
repz
sti
test
dec
mov
in
fsubl
out
xchg
imul
lock
repnz
movsl
cmp
ja
jo
mov
lods
fcmovnb
shrl
fs
imull
mov
jb
cmp
call
popf
jmp
pop
fnstcw
fisttpl
inc
repnz
jb
in
jnp
test
idivb
push
push
jl
es
dec
push
in
jecxz
and
dec
fadd
cld
or
xor
icebp
mov
cli
inc
loope
jecxz
cmp
jns
xchg
sub
arpl
mov
jle
ds
jge
sbb
jno
jge
ficoml
adc
sbb
cwtl
in
jns
jo
mov
aaa
stos
repnz
dec
xlat
and
leave
inc
pusha
sarb
nop
ret
scas
imul
push
jne
pop
pop
adc
pshufw
push
dec
sub
cld
or
pop
jle
popf
aaa
jl
pop
add
adc
adc
jp
cmp
in
stc
mov
stos
mov
xor
sub
jno,pt
mov
dec
mov
mov
stos
mov
mov
test
popa
ss
mov
jl
in
sbb
outsl
mov
inc
fsubs
and
and
pop
lret
scas
aaa
fdivs
pop
or
fwait
and
in
fucom
fstl
lds
dec
je
pop
jo
mov
gs
or
mov
cmc
xchg
aaa
adc
imul
outsb
fdivl
mov
pushf
mov
sbb
inc
xlat
inc
das
test
in
sub
dec
inc
or
cwtl
sbb
outsb
loope
xchg
rcll
mov
lret
push
cmp
repnz
mov
test
popf
push
frstor
jp
dec
push
loope
xor
mov
popf
js
mov
fs
cwtl
jbe
pop
movsl
pop
push
jbe
test
mov
pop
ss
inc
inc
cwtl
icebp
xchg
jns
data16
insb
add
pop
fnstcw
pop
push
test
syscall
push
stc
push
xchg
popf
sbb
jo
inc
aaa
add
xor
fildl
enter
leave
dec
push
sbb
shl
inc
shll
dec
and
decb
fstp
sub
and
jmp
in
pop
mov
sbb
stc
sets
sbb
jg
dec
imul
out
and
and
in
nop
dec
rcrb
xchg
pop
cwtl
aas
jb
aaa
clc
inc
jbe
cld
sub
mov
lcall
dec
sbbl
mov
pop
outsb
cmp
idivl
xchg
xchg
cltd
pop
loope
pop
fisubrl
pop
leave
popf
jbe
cltd
leave
aad
sahf
dec
sbb
dec
dec
adcl
xor
cmpsb
bound
xor
fcmovnb
pop
cmp
inc
inc
sbb
aaa
mov
or
std
fbstp
cmpsl
out
test
mov
call
push
pop
inc
popf
int3
cli
pop
inc
mov
dec
push
add
cmp
xchg
push
mov
ret
adc
ss
jb
das
cmpsb
insb
test
jns
jle
xchg
pushf
pop
popf
sub
adc
xor
push
sbb
and
push
ret
mov
decb
into
cmp
and
popf
mov
sbb
inc
stos
fcoms
inc
mov
orb
cmp
js
and
jg
int3
mov
mov
jo
pop
inc
cmc
sbb
mov
fisubrl
adc
out
cmpsb
aas
sub
shrl
cwtl
pop
dec
sbb
jg
das
mov
push
loope
out
push
or
iret
sbb
dec
not
movsl
pop
push
lea
shlb
popf
mov
add
repnz
push
orl
cmp
fbld
das
pop
adc
jae
insb
pop
call
jnp
dec
out
outsl
xchg
or
out
inc
pop
or
sub
rorb
pop
js
fstl
cmpsb
rcl
jo
xchg
arpl
inc
loope
jne
jecxz
inc
push
sti
inc
scas
xor
int3
adc
push
das
sbb
in
pusha
dec
xor
lcall
imul
sbb
or
hlt
mov
push
in
scas
cmp
xchg
xchg
bound
sbb
std
jne
xchg
mov
scas
and
cmp
jmp
cmp
test
inc
jno
push
imul
lret
enter
inc
mov
or
scas
xor
int
sahf
in
scas
pop
pushf
or
nop
fdivl
xchg
loope
inc
dec
push
sbb
bound
push
cmp
aas
fwait
inc
mov
mov
sbb
lea
xor
sbb
aaa
stos
or
icebp
loope
ja
xor
pop
cld
cmp
push
in
mov
fnstsw
add
or
enter
loope
pop
mov
cmpsb
out
or
mov
nop
clc
sbb
in
sub
fwait
sub
add
mov
cmp
add
jecxz
lret
int
loopne
in
enter
sbb
xor
sub
sbb
sbb
sti
insb
xchg
pop
jae
fnsave
and
mov
jecxz
and
mov
push
mov
mov
adc
das
in
mov
push
bound
mov
loopne
pop
xor
jnp
enter
ja
inc
jmp
leave
pop
imul
push
and
sbb
inc
cmp
int3
dec
lret
jbe
mov
arpl
pop
sbb
outsl
xor
xor
aaa
stos
mov
xchg
mov
or
pop
mulb
and
repz
jns
jmp
jo
add
call
dec
gs
repnz
cli
mov
pop
and
sub
imul
or
jg
or
pop
mov
out
pop
push
sbb
jle
inc
repnz
xchg
arpl
cmp
out
or
and
arpl
sti
je
sbb
scas
mov
mov
lret
inc
jle
cmp
das
ljmp
outsb
add
or
sahf
stos
mov
xor
inc
push
outsl
pop
mov
cwtl
cmp
inc
mov
pop
loope
sbb
mov
imul
daa
mov
pop
push
out
ror
or
jge
adc
push
sub
xchg
enter
or
jecxz
pop
jg
lea
idiv
pop
ret
mov
inc
movups
sbb
mov
dec
sub
pop
add
mov
sub
sahf
aaa
jecxz
loopne
ret
mov
pop
adc
jno
in
shlb
mov
dec
inc
lcall
int
sbb
in
pop
js
sub
and
stc
jb
bound
dec
dec
rcll
xchg
outsb
sbb
push
xchg
loop
adc
cmp
mov
cmp
adc
loope
inc
pusha
cltd
push
pop
xchg
into
call
inc
pop
icebp
ljmp
jb,pt
mov
pop
ret
pop
pop
sti
xor
dec
imulb
mov
mov
aaa
in
push
lea
sub
xor
sbb
adc
stos
xchg
inc
pop
dec
insb
ljmp
jns
add
shlb
and
inc
push
push
andb
icebp
and
stos
in
ret
jp
push
inc
test
aaa
shlb
cmp
sahf
dec
test
ret
sub
push
sbb
adcl
outsb
dec
inc
mov
dec
test
lahf
xor
mov
inc
push
fdivr
jae
mov
xchg
inc
mov
popf
out
ss
ret
and
insb
cmpsb
add
dec
pop
in
cltd
out
mov
mov
add
lret
cmp
sub
and
and
in
cmc
cli
pop
in
stos
inc
cld
mov
pop
cld
push
sbb
bound
andl
add
push
and
stc
xor
dec
pop
scas
cltd
out
mov
je
stos
xchg
sbb
hlt
cltd
insl
add
fcmovne
sbb
inc
test
mov
bound
pop
mov
call
mov
cs
and
cmpb
mov
mov
scas
cmp
push
aad
inc
sbb
and
sbb
adc
jae
in
xchg
sub
push
in
stos
cmp
andl
cmp
mov
shl
fwait
mov
inc
sub
sbb
dec
ss
sub
xor
add
outsb
test
nop
rcr
and
xchg
add
xor
add
pop
loopne
push
mov
mov
jo
fstps
ds
pop
sub
js
or
mov
xor
insb
sbbb
cmp
ret
adc
fucomp
mov
iret
xor
in
jns
mov
jp
std
mov
aas
jge
popf
pop
jmp
in
jbe
imul
jo
mov
sub
stos
call
loope
adcb
jecxz
pop
mov
inc
sub
mov
orl
sub
mov
or
lods
aaa
popa
mov
sbb
movsb
ret
test
sub
outsb
dec
sbb
xchg
enter
xor
cmp
push
das
pop
int3
rclb
add
insb
aaa
loopne
repnz
int3
repz
sub
sbb
push
sti
pop
push
repz
ds
or
sbb
and
mov
fcompl
jbe
fdivr
mov
sbb
out
dec
jo
aaa
scas
stos
jns
in
movsl
repnz
es
sbb
fsub
inc
pop
imul
sbbb
data16
pushl
bound
add
xchg
mov
in
gs
jne
flds
subb
pop
adc
mov
lcall
mov
mov
out
lock
push
rcll
jb
sahf
scas
sub
fwait
pop
sar
adc
daa
sbb
dec
push
in
push
sarl
sub
int
aaa
xchg
les
sbb
or
loope
mov
push
mov
pop
cmp
inc
inc
fistpl
jl
scas
xchg
xor
ljmp
pop
add
inc
out
dec
ret
jge
cmc
fsubl
jg
ja
sub
in
pop
mov
sub
push
fidivs
in
in
rcrl
enter
loope
les
xchg
popf
push
pop
pop
sub
push
pop
pop
inc
sahf
and
rcr
mov
xchg
sub
jl
test
movsb
movsbl
jl
or
mov
adc
outsb
les
xchg
scas
mov
popf
and
inc
ss
or
inc
lea
lods
int
mov
mov
inc
fwait
dec
jnp
fdivl
push
adc
movsl
int3
lock
ss
add
mov
scas
dec
sti
cmpsb
mov
or
pop
sbb
push
mov
mov
xchg
push
sbb
ret
xchg
add
fs
mov
mov
and
adc
xlat
pop
movsb
fistpll
cwtl
mov
test
bound
xchg
aad
xchg
mov
mov
sub
jae
aad
inc
and
adc
jbe
stos
mov
fisttps
fs
xchg
ja
add
xchg
cwtl
adc
pop
adc
test
and
xchg
push
push
rol
sbb
sub
dec
sub
mov
sub
xchg
sarb
push
xlat
daa
and
jle
std
mov
std
loope
cmp
xchg
mov
inc
shl
lret
pop
jnp
aaa
mov
sub
gs
aaa
leave
out
xorb
pop
add
lock
cld
lds
in
mov
arpl
add
sub
cltd
jae
loope
fcmovnbe
mov
cmpsl
push
aaa
jbe
jbe
push
out
jecxz
insb
sbb
xchg
in
fdivrs
bound
dec
mov
xchg
outsb
sbb
inc
pop
dec
cmp
xchg
sbb
shrl
aad
pop
mov
popf
push
or
pop
and
and
shll
jns
xor
out
call
cmc
adc
shll
jge
cmp
dec
jno
movsl
shl
jl
nop
push
out
out
push
mov
jmp
inc
jo
scas
mov
rolb
inc
cmp
ss
sti
leave
or
cmp
add
sbb
ds
int
xchg
out
and
inc
in
sbb
loope
pop
adc
call
rcrl
pop
sbb
ss
cmpsl
gs
out
adc
mov
cld
xchg
sbb
aaa
mov
cmp
mov
jge
outsb
outsb
int3
push
dec
pushl
xchg
mov
pushf
push
pusha
push
daa
aaa
shlb
out
pop
fdivr
icebp
cmp
repz
rcrb
dec
mov
movsl
stc
int3
pusha
inc
stc
sub
test
test
in
ds
pushf
pop
or
jl
inc
in
jbe
mov
aaa
push
bound
addr16
add
call
dec
mov
es
in
dec
xor
jmp
fstl
mov
je
repz
outsb
popa
sbb
outsb
and
sbb
adc
add
sub
jae
fs
pop
jb
in
jb
outsb
in
sub
cmc
sub
or
cwtl
fcompl
popa
sbb
jg
dec
and
ljmp
sub
pushf
sub
ret
scas
push
lds
sahf
outsb
inc
sbb
mov
loope
std
fdivp
imulb
das
stos
sahf
and
mov
cmp
push
sahf
into
push
push
jo
rcrb
out
mov
dec
or
or
sbb
mov
mov
mov
jb
push
jl
test
xchg
je
xor
or
jb
mov
and
mov
push
jecxz
cmp
mov
out
and
popa
add
cmp
repz
mov
xchg
fmull
je
push
in
mov
shll
mov
sti
fidivrl
dec
adc
add
iret
xchg
add
jecxz
fnstcw
push
test
in
test
mov
mov
push
cld
cmpsl
or
jmp
lret
gs
popf
xchg
loope
jle
mov
cltd
pop
fs
call
pminub
adc
inc
mov
cmp
pop
push
inc
shlb
push
mov
sbb
test
insl
pop
fstps
xchg
mov
or
sbb
ljmp
sbb
gs
pop
sbb
outsl
xor
ret
inc
mov
cmc
cmp
lahf
pop
jne,pn
mov
mov
hlt
sti
fisubs
insl
and
pop
aas
movsl
lea
es
ror
negb
adc
jl
test
sarl
push
insb
stc
shrb
cwtl
jne
jb
shll
xchg
je
xchg
in
pop
lahf
mov
and
scas
pusha
jmp
outsb
imul
jle
sbb
sbb
inc
sbb
imul
add
ss
test
pop
outsl
xlat
jbe
xor
gs
ja
fldt
outsb
xor
mov
or
rol
jo
popf
mov
cmpsl
sbb
xor
movsl
dec
je
outsb
jb
outsl
pop
sub
pusha
cmp
pop
inc
jne
fbld
jbe
fidivl
sub
aas
or
xor
cmp
add
push
sbb
popf
or
xchg
lds
fistl
sbb
push
lods
jbe
sbb
aad
das
cmpsl
insb
ds
pushf
pop
xchg
imul
dec
cmp
decb
sbb
cmc
mov
pop
jnp
pop
push
mov
shlb
mov
adc
or
lahf
outsl
jae
ret
ja
mov
shll
rcrl
into
test
sbb
pop
data16
arpl
xchg
jns
sbb
inc
mov
cmp
jne
mov
xor
mov
outsb
daa
sbb
pop
jge
pop
rclb
adc
xchg
jno
loope
cmp
cld
pop
mov
mov
mov
pop
je
mov
cltd
sbb
jge
mov
sub
mov
in
jne
in
pop
pop
mov
pushf
inc
roll
call
repz
and
pop
loop
in
shl
outsb
js
xchg
ret
lahf
popa
jmp
fidivrs
cmc
jne
test
nop
inc
pop
mov
jns
arpl
push
xor
mov
scas
outsl
xchg
insb
push
dec
pop
jbe
mov
and
test
inc
pop
ljmp
ds
xlat
adc
fdivl
sub
scas
in
popa
adc
inc
popf
int3
jbe
push
adc
js
test
int
jbe
icebp
ds
pop
jl
push
cmp
adc
test
pop
and
fdivr
xor
mov
xor
mov
decl
sbb
orl
insl
push
std
pop
mov
jbe
adc
pop
lea
loop
enter
dec
test
sti
fldcw
push
or
cs
jmp
outsb
popf
cmpsb
pop
arpl
or
mov
jl
pop
fs
cmp
lret
fwait
mov
add
ja
push
dec
xchg
in
mov
out
jae
lret
push
adc
cld
loope
sub
int
cwtl
cmp
nop
cmp
push
pusha
scas
loopne
xor
mov
inc
aas
push
cmp
loopne
call
pop
add
pop
adc
scas
scas
and
jle
lock
pop
fildll
ja
adc
js
pop
lds
stos
jnp
hlt
pop
sbb
clc
std
jb
cmp
dec
repz
jg
insb
test
hlt
iret
add
pop
mov
std
cmp
push
popf
loop
std
push
cmp
cmp
lock
loope
outsl
xchg
dec
loopne
inc
mov
sbb
mov
jmp
cmp
fstpt
mov
test
ja
sub
out
repz
pop
cs
cmpb
adc
jp
sbb
sbb
push
fwait
inc
test
sbb
dec
sbb
mov
and
ds
mov
int3
mov
xor
stos
pop
jl
in
hlt
sti
loopne
add
mov
sub
mov
sbb
mov
in
xchg
daa
popf
jno
sub
cld
std
xor
ds
pushf
pop
ret
orl
test
push
cmc
outsb
push
scas
sbb
push
xor
mov
ds
pop
and
cs
cmp
lret
cmc
pop
sub
jle
scas
sbb
std
jp
ja
lds
xchg
jg
mov
jp
hlt
add
xorb
roll
xchg
jbe
loopne
neg
mov
jnp
pop
jo
ret
inc
pop
fsubl
push
mov
lahf
pop
xor
push
pop
inc
push
xchg
and
jmp
cwtl
icebp
sbbl
mov
lret
push
xor
pop
cmc
pop
fbstp
fldt
mov
in
mov
pop
jp
rorl
push
ds
pop
mov
insb
or
inc
and
ss
sbb
add
lds
addr16
shll
push
loop
fisubs
pusha
mov
rcrl
pop
xchg
push
adc
pop
inc
inc
fsts
fisubrs
dec
das
xlat
lea
pushf
pop
mov
out
outsb
jo
cmpsb
dec
loopne
sbb
repnz
sti
pusha
sahf
adc
enter
jle
dec
mov
sbb
nop
xchg
out
sbb
jle
shll
pop
inc
sub
jo
negl
out
sbb
adc
and
xchg
cmp
mov
push
mov
jg
mov
add
pop
adc
xchg
fwait
test
add
cltd
dec
lods
daa
xchg
leave
mov
in
insb
mov
call
aaa
dec
push
add
sub
fnstenv
movsb
push
ret
pop
sbb
xchg
jo
push
mov
orl
jg
adc
cltd
test
add
pop
jle
fwait
in
push
test
fcos
rcrb
mov
pusha
add
int3
sub
mov
rorl
pushf
jl
call
mov
outsl
pop
insl
jo
aaa
in
push
cmpb
sti
imul
arpl
lods
inc
out
enter
sti
mov
jns
xchg
js
sbb
popf
inc
push
mov
sar
adc
or
or
lods
out
andb
jnp
xor
sub
xchg
outsl
inc
xchg
inc
pop
adc
aam
pushf
dec
sbb
cltd
bound
adc
sbb
sub
or
in
mov
gs
popa
mov
repz
xchg
push
sbbl
in
cmp
dec
adc
mov
fstl
out
pushl
orb
mov
mov
and
ret
mov
dec
jmp
pop
mov
sbb
add
xchg
jecxz
jno
mov
mov
cmp
fbstp
notl
movsl
xor
add
in
sbb
movsb
aas
and
pop
loope
xchg
loope
sub
enter
pusha
jne
sub
es
or
inc
imul
fistpll
addr16
cld
fwait
sub
shll
pop
mov
stos
imul
fdiv
or
scas
inc
iret
dec
add
pop
lock
ds
dec
mov
lods
cmp
repz
cmp
arpl
mov
test
sub
adc
pop
jo
push
jne
jl
cmp
jmp
ret
fldenv
in
enter
and
shl
lods
aaa
outsb
js
pop
mov
shr
outsl
fcompl
adc
loope
movsl
dec
shrb
jne
mov
or
imul
dec
push
pop
jb
test
lods
fwait
mov
jb
lcall
std
add
rolb
dec
stos
jl
lods
aaa
popf
fwait
mov
pop
inc
fldenv
stc
into
cld
dec
xlat
lahf
dec
lock
nop
push
stos
add
cltd
xchg
inc
dec
pop
push
movsb
mov
aam
xchg
mov
leave
mov
loope
rcl
dec
mov
and
sbb
test
sti
lret
pop
hlt
je
pop
sub
rorb
fsubl
mov
xlat
mov
lods
ljmp
repnz
es
xchg
cmpsl
xchg
loope
arpl
fimuls
push
xchg
pop
xchg
add
mov
in
sti
pop
cmp
sub
sbb
stos
sbb
xrelease
and
sub
mov
mov
loopne
cs
pop
push
sbb
shrb
or
mov
xchg
aas
and
or
das
stos
arpl
push
nop
cli
inc
ss
mov
pop
jl
cltd
mov
or
sahf
aas
je
fbstp
push
pop
ss
inc
cmpl
dec
nop
int3
fldl
test
adc
sbb
xchg
pop
xor
lahf
jg
frstor
or
push
ds
loop
adc
adc
into
mov
pop
cmpsb
adc
rcrb
push
sahf
mov
adc
int3
pop
std
xor
repz
in
push
hlt
dec
es
mov
out
mov
dec
xor
outsb
sbb
pop
int
cmp
popf
mov
out
xor
or
fwait
cmp
outsb
jmp
mov
ljmp
imul
pop
mov
mov
sub
jp
push
cmp
add
aas
and
fs
shl
ds
fwait
sahf
lods
mov
inc
and
das
mov
aam
sar
or
jle
xor
sbb
rep
test
roll
xchg
stos
push
push
ss
es
fcompl
clc
jno
scas
jno
out
stos
push
adc
mov
stc
mov
mov
stos
fnsave
jo
jne
add
es
dec
push
je
and
cmp
push
adc
dec
fs
test
mov
dec
jle
inc
add
out
or
fwait
lea
cmp
jg
mov
fwait
clc
xor
dec
rcrb
out
hlt
fwait
aas
repz
mov
imul
mov
cmpsb
sub
shlb
mov
pop
leave
add
outsl
aam
inc
xchg
pop
xchg
repz
pushl
ret
sbb
loop
sbb
cld
fnstcw
test
in
fimuls
push
fisubrl
arpl
lods
mov
adc
sub
sub
cmpsb
popa
rol
mov
push
sbb
adc
jb
loope
or
adc
ds
pop
push
test
cs
mov
ja
loope
jno
aam
or
aam
dec
and
cltd
push
mov
xchg
gs
inc
mov
les
xor
shr
add
loope
jb
lret
sub
jnp
xchg
sub
adc
in
test
pop
leave
ljmp
pusha
ret
sub
cmp
popf
jge
outsl
adc
inc
mov
pop
cmpsl
jge
pop
das
pop
enter
sub
pop
fnstsw
or
cmp
push
and
pop
out
xchg
movb
jmp
inc
inc
test
push
clc
mov
movsl
fldcw
out
pop
cwtl
jb
ss
xchg
mov
sub
or
cmp
and
mov
xorl
rorl
mov
mov
ficoml
fsubrl
les
das
ja
stos
push
aaa
mov
imul
pop
rorb
mov
jb
pop
mov
aam
ret
mov
dec
fsubrs
pop
jbe
cmp
push
jae
fdivp
pop
inc
imul
ss
scas
dec
std
imul
xor
jecxz
jp
fnstenv
je
int
ffree
outsb
push
push
loopne
bound
divb
int3
popf
push
adc
das
inc
leave
jno
ds
andb
gs
and
pop
push
and
inc
dec
cmp
imul
pop
inc
jbe
daa
mov
sbb
mov
aam
cwtl
cmp
popf
je
lds
inc
dec
and
add
mov
sub
lds
or
es
push
insb
sbbb
sbb
cmp
imul
sbb
jge
pop
mov
loope
sbb
ds
dec
stos
aaa
out
mov
adc
jle
jecxz
push
sbb
loopne
dec
push
loope
fidivs
outsb
jo
enter
push
fsubrs
ds
in
jbe
mov
push
push
lret
mov
lahf
mov
and
inc
xor
cmp
pop
mov
in
sbb
jge
fildll
ds
jne
adc
adc
or
mov
push
jnp
add
aam
movsl
lods
sbb
inc
mov
sbb
outsb
ror
mov
ss
jl
jl
sbb
push
mov
mov
jecxz
xchg
popf
fstl
pop
dec
mov
aam
sarl
add
push
and
ja
mov
fs
jmp
mov
pop
inc
in
or
aaa
push
ret
out
sub
jl
cmp
jns
shrb
adc
stos
xchg
jmp
sti
insl
lock
fmuls
into
pop
gs
stos
jbe
dec
or
cmp
in
push
mov
dec
mov
mov
data16
pop
scas
std
sahf
into
sub
dec
mov
sbb
ss
idivb
push
movsl
pop
fdivrl
js
arpl
sub
cltd
xchg
fs
push
mov
cmp
bound
sbb
je
sbb
ja
add
sub
test
cld
scas
mov
push
cmpl
repz
and
jb
arpl
push
push
push
mov
cmp
clc
pop
sbb
in
out
jg
jnp
arpl
daa
idivl
das
loope
inc
jge
mov
push
mov
inc
jg
sbb
int3
push
xchg
std
out
push
pop
inc
sbb
mov
setne
mov
faddl
cmp
push
lds
pushf
pop
jbe
lods
movsl
lea
daa
jge
std
jb
add
and
cs
cmp
in
dec
roll
or
lds
mov
cmp
pop
loope
pop
das
nop
lods
jmp
andb
lock
sub
int3
pop
movsb
js
test
addb
inc
jp
push
or
daa
ret
cmp
sahf
mov
lods
iret
sahf
mov
cmp
int
jns
cmpsl
jb
fs
fwait
mov
push
push
pop
movsl
ja
cli
ss
adc
sbb
in
jno
mov
outsb
sbb
jmp
popf
andl
cltd
in
pop
mov
setp
inc
aaa
in
cmp
and
adc
pop
jns
clc
pop
stc
pusha
push
pop
scas
lds
movsl
sub
sarb
sahf
test
push
xchg
xor
sbb
inc
mov
imul
mov
cmp
pop
leave
cld
pop
push
pop
mov
in
hlt
fildll
fdivp
loope
pop
jle
aaa
cwtl
dec
jo
shrl
sbbb
dec
xchg
test
scas
std
cmp
outsb
data16
jmp
xchg
aad
lea
xchg
loope
fldcw
push
lret
fstpt
ffreep
mov
pop
rorl
ret
fdivl
xor
and
jp
sub
out
int3
add
inc
cmpsb
jo
scas
sub
xchg
jb
fiaddl
pop
je
sub
std
jle
lds
pushf
mov
add
push
and
mov
ds
leave
fwait
in
add
pop
mov
inc
enter
pushf
cltd
push
fistps
xor
lahf
push
pop
xlat
pop
add
rcll
mov
bound
or
gs
sub
xor
xor
jne
in
js
xchg
test
xor
push
mov
cmp
cmp
fldenv
rcrb
sbb
lahf
xor
scas
int3
icebp
mov
cmpl
scas
cmpsl
add
mov
jp
negl
pop
insl
xchg
cmp
add
push
sbb
ret
sbbb
lret
jno
int
sahf
fildl
pop
dec
push
jge
adc
popf
sub
and
adc
push
push
cmp
ret
outsl
test
add
dec
xchg
lods
in
in
jb
cmpsl
or
pop
psrlq
pop
push
sbb
outsl
movsb
pop
inc
mov
popf
xor
push
pop
and
sti
sbb
js
adc
rcrb
outsb
jb
push
inc
inc
repz
stc
sbb
pop
imul
mov
dec
test
lret
fisttpll
cmpsb
iret
je
aas
sahf
lret
ja
std
inc
aaa
jge
aad
bound
enter
push
outsl
mov
add
sub
cmp
and
sub
cmovp
imul
movsl
mov
and
mov
pusha
ja
mov
mov
icebp
jle
popf
test
pop
sbb
xchg
dec
mov
and
insb
inc
clc
es
icebp
mov
fldcw
mov
pop
push
xchg
dec
sarb
rclb
fisttpl
mov
adc
test
pop
aad
mov
arpl
ja
cmp
enter
lock
xchg
sub
cltd
or
sbb
sti
cmpsl
das
jns
cmpb
das
test
jb
mov
xchg
adc
int3
int
dec
inc
mov
or
inc
ja
ss
add
rcr
gs
mov
lods
xor
dec
sub
mov
daa
out
mov
pop
jmp
mov
in
push
sbb
faddl
cmovs
jns
jmp
mov
xor
xchg
push
push
into
push
aam
pushf
in
and
ds
fildl
es
jbe
ret
sbb
sahf
xchg
cli
lock
std
scas
cmp
lret
stc
pop
xlat
enter
insb
dec
imul
dec
push
sub
out
pop
push
bound
movsb
int
bound
mov
mov
in
sbbb
popf
mov
pop
sub
sub
test
lds
fs
or
xchg
addb
xchg
and
lcall
scas
sti
cmp
nop
lea
or
sbb
pop
mov
aam
xorl
popa
pop
loop
jle
das
pop
jns
cmpsl
ja
pop
pop
mov
sti
in
sub
push
cwtl
cmp
test
push
dec
dec
sub
mov
inc
popa
lea
pop
push
cmpsb
or
lea
divl
jle
mov
jb
or
pop
mov
cmpsl
push
mov
inc
fs
sub
sbb
cmp
fbld
xchg
dec
adc
jl
fsubr
sbb
inc
mov
cmp
ss
bts
or
bound
arpl
lock
sarl
mov
popa
mov
push
int
jbe
add
mov
push
bound
cmpsb
and
lea
aad
ja
aas
jno
inc
jbe
and
pop
mov
test
rcl
filds
push
repz
push
insl
cld
push
jae
ljmp
inc
leave
pop
push
jg
stc
sbbb
mov
sbb
test
xchg
xor
lahf
in
test
repnz
jle
ret
cmpsl
dec
sti
push
loop
lea
push
insb
clc
mov
int3
dec
hlt
out
inc
ljmp
sub
push
shr
or
dec
sbb
movq
fcomi
sbb
inc
sbb
push
cmp
lock
dec
into
fildl
mov
push
cmpsb
fst
cmp
mov
sbb
mov
pop
int3
repnz
lds
out
mov
jl
das
dec
out
ds
pop
mov
fwait
inc
bound
in
rol
loop
fildll
mov
ss
jno
pop
in
insb
xchg
jp
sbb
jge
pusha
pop
cmpsb
sbb
adc
test
popf
imul
leave
dec
shlb
pop
mov
mov
pop
push
mov
lock
outsl
sub
cmpsl
pusha
mov
xchg
or
mov
push
icebp
and
pop
mov
fdivrl
xor
mov
sbb
inc
cmp
stos
out
xorb
mov
int
andb
clc
insl
xchg
fldt
sbb
inc
cs
or
mov
shlb
call
mov
test
out
rol
lret
jae
rol
bound
pop
ja
xor
test
dec
sbb
test
and
jg
ss
jae
ret
mov
push
je
scas
pop
out
addr16
xor
mov
sub
pop
lret
or
push
ret
mov
cmp
cmp
fs
sahf
push
ds
inc
push
jnp
dec
adc
outsb
sbb
cmp
pop
push
push
jle
lds
adc
jl
or
int3
mov
daa
pop
or
std
adc
and
outsb
jo
cmp
inc
xchg
xor
sbb
in
aas
cmp
mov
inc
mov
mov
mov
mov
std
dec
inc
movsl
xor
lcall
cmc
loope
jg
test
xorl
repz
fs
mov
int3
mov
inc
inc
add
mov
fldt
xchg
icebp
pop
repz
push
jne
pop
int3
xchg
mov
cmpsl
loop
stc
inc
mov
jmp
mov
push
add
ss
cmp
aas
into
fisttpl
xchg
mov
mov
mov
adc
dec
ljmp
test
je
rclb
sbb
andb
add
popa
pop
jbe
push
add
pop
in
adc
cmpl
push
xor
add
inc
out
add
sbb
xor
or
repnz
aam
mov
jmp
cmp
and
sar
and
xor
je
pop
enter
repz
movsl
shrl
outsb
decb
dec
xchg
repz
inc
or
shlb
shll
mov
add
fisttpl
arpl
adc
sbb
push
repz
pop
cltd
sbb
cmc
mov
inc
or
lret
jne,pt
into
push
pop
lcall
loope
fdivl
sbb
in
cmp
scas
ss
mov
lahf
aam
xchg
faddl
push
jle
loopne
roll
popa
adc
aaa
adc
jo
pop
mov
xchg
push
sbb
mov
mov
sub
andl
inc
popf
jp
jb
lea
out
cltd
sahf
out
or
sbb
cmp
jp
dec
push
mov
and
xchg
cmp
jb
pop
pop
dec
cltd
in
lahf
repnz
cld
enter
mov
sbb
lods
sub
std
arpl
in
rcrl
sahf
loopne
lcall
push
cmp
jp
jns
mov
push
aaa
adc
test
pop
popf
nop
sti
stos
aaa
inc
pusha
sbb
ss
xchg
imul
mov
scas
adc
les
je
mov
scas
push
adc
int
jbe
push
cmp
imull
add
popf
xor
bound
and
dec
pushf
insb
mov
pop
cmp
mov
dec
call
and
or
xor
push
lods
in
or
sub
test
aas
test
push
jecxz
fsubrs
clc
mov
jp
aaa
or
ljmp
mov
jae
aas
insl
mov
arpl
mov
adc
daa
sbb
aam
icebp
fdivrs
out
sbb
add
push
lods
pop
cmp
ljmp
mov
cmpsb
rcr
inc
or
mov
out
sub
fisubrl
cmp
mov
mov
inc
jge
push
mov
dec
cmp
cli
mov
shlb
out
fsubp
sarl
and
shlb
stos
stc
fs
or
cmpsl
arpl
dec
loope
loopne
pop
and
mov
addr16
add
ds
jecxz
jecxz
push
push
ljmp
jmp
out
nop
dec
sub
cwtl
bound
lahf
icebp
fdivrl
sbb
enter
fisttpl
mov
mov
ss
nop
adc
sbb
lret
in
cmp
mov
fsubr
fcmovne
mov
cmove
pushf
push
inc
push
test
in
shll
movsl
mov
fisubrl
loope
scas
pop
test
xchg
xchg
cmp
inc
dec
es
mov
pop
sub
xor
lret
jb
sti
outsl
arpl
out
out
cmp
xor
aaa
mov
jecxz
cwtl
adc
xchg
aam
scas
sub
jne
outsb
imul
fildl
mov
mov
push
shll
cmpsb
lods
xchg
push
jb
std
or
push
sub
or
jg
inc
arpl
inc
aam
or
mov
test
mov
mov
fistpll
pop
and
jge
push
dec
sbb
xchg
or
inc
pop
xor
dec
push
inc
jl
call
sub
cld
scas
loop
in
call
sbb
cmpsb
pop
xchg
aaa
sub
xlat
push
jle
mov
and
xor
pop
arpl
movsl
jl
mov
jle
rcrl
shrl
or
add
jns
ds
mov
pop
xchg
stos
aaa
pusha
repz
pusha
scas
sbb
fisttpll
cmp
fs
dec
insb
push
cmp
add
lea
call
mov
mov
cmpsb
pop
pop
jne
cmpsl
cmp
jno
aaa
loopne
fwait
in
int
push
in
fwait
mov
scas
pop
into
add
and
loopne
cld
fldcw
add
aaa
bound
into
ljmp
mov
mov
pop
mov
cltd
pop
loope
repz
js
icebp
xor
les
mov
inc
mov
mov
shrb
lds
insb
adc
and
stc
and
popf
arpl
push
push
pop
xchg
lahf
jbe
das
loope
out
sbb
mov
mov
mov
data16
stc
neg
sub
pop
jmp
ljmp
xor
jmp
mov
sbb
adc
cmpsb
mov
jge
sub
push
mov
pusha
roll
pop
cmp
push
add
add
imul
dec
add
js
mov
sbbl
mov
cmp
and
xchg
inc
xchg
mov
push
mov
dec
fcomi
or
inc
data16
jae
pop
and
cmpsb
and
or
insb
xor
sub
test
cmp
lcall
push
clc
pop
adc
ss
pop
out
pop
cltd
icebp
jae
jmp
in
mov
mov
ss
sbb
popf
int3
lret
jne
aaa
int
call
addr16
push
push
mov
sbb
adc
jo
jnp
out
stos
sub
and
or
push
inc
xor
out
push
jl
test
lret
fdivs
mov
arpl
icebp
cmc
jae
push
fcompl
ret
js
dec
insl
call
out
push
jnp
sbb
aaa
pop
or
loopne
cs
orb
pop
mov
ss
mov
mov
popa
mov
mov
mov
sbb
lods
mov
push
not
xor
and
mov
push
xchg
pop
in
ja
insb
fisubl
push
imul
cmp
testl
pop
fwait
push
in
arpl
add
sbb
mov
mov
popa
repnz
jno
xchg
add
fwait
rcrl
in
sahf
ljmp
mov
mov
xchg
push
inc
icebp
push
aam
jno
cmpsb
push
push
cmp
add
mov
push
adc
aaa
add
aas
stos
inc
sub
ret
pop
pop
mov
les
xor
mov
sub
fwait
xchg
fdivs
mov
jg
pop
adc
call
cmpsl
sub
xchg
mov
mov
scas
push
push
scas
bound
addr16
inc
icebp
repnz
fnsave
dec
and
cmp
shrl
cmp
mov
and
loopne
fcoml
sahf
adc
mov
sbb
ret
and
movsl
aaa
and
pop
ss
sbbb
mov
stos
les
mov
xchg
or
mov
mov
add
cwtl
mov
out
leave
inc
pop
pop
mov
mov
popf
repz
outsb
dec
mov
sbb
push
stc
xchg
aas
enter
sub
xchg
lret
test
test
int3
mov
nop
push
test
hlt
fmuls
out
ljmp
stos
test
arpl
xlat
pop
movsl
out
cli
fxch
mov
cmp
imul
fwait
mov
jno
stos
mov
movups
push
sbb
addb
mov
sub
arpl
test
aaa
loope
sahf
and
pop
pop
pop
mov
scas
xchg
mov
dec
xchg
and
dec
push
mov
or
sahf
push
jp
pop
in
ss
ljmp
pop
or
jb
and
xchg
aas
stos
cltd
mov
xchg
out
subl
pop
inc
jns
push
negl
cmpsl
loopne
sub
cltd
ret
outsb
in
push
in
mov
es
cli
inc
fstl
in
mov
cli
and
loopne
xor
ds
aaa
movsl
jae
scas
push
fcompl
push
ret
ret
or
outsb
push
sub
xorl
mov
dec
arpl
xchg
lea
cmpsl
jl
std
shll
mov
mov
ret
dec
jae
mul
lea
cwtl
insb
cmpsb
push
cvttps2pi
incl
pop
pop
aaa
ljmp
movsl
ret
shr
fisttps
enter
out
or
sub
pop
xchg
mov
pop
dec
pop
sahf
mov
das
cld
xchg
fwait
adc
or
ja
aas
add
insw
jno
xchg
cmp
repz
xchg
sub
shrb
out
cmp
pop
mov
repz
adc
out
lret
adc
in
jnp
inc
es
mov
cmp
adcb
fnsave
fnsave
or
sbb
add
fucomp
mov
fcom
rcr
jb
aaa
hlt
lret
mov
push
mov
in
jp
adcl
xchg
inc
lret
mov
push
sub
outsb
in
push
fucom
pop
fwait
jns
and
and
mov
pop
inc
xchg
xchg
cmp
inc
inc
jle
ja
add
pop
insl
aaa
sbb
mov
imul
pop
jp
fildll
std
adc
movsl
in
sbb
sti
xor
or
jbe
or
mov
sbb
rcll
or
iret
loope
sahf
pop
dec
ja
inc
inc
inc
insb
je
sbb
fs
fs
dec
pop
mov
fnstenv
cmp
mov
sbb
pop
lcall
nop
pop
shll
xor
scas
scas
fldcw
inc
cmpsb
adcl
cmc
and
mov
cmp
out
jge
ficompl
pop
cli
mov
inc
dec
icebp
mov
jns
lcall
lock
jnp
cmp
mov
mov
pop
pop
adc
ds
fldcw
ficoml
lret
jb
sbb
repnz
cmpsl
pop
jae
xchg
lods
in
cmp
std
aam
sti
push
mov
ljmp
inc
pushf
and
cvtps2pd
or
pop
adc
push
enter
jg
xchg
cwtl
loopne
aaa
or
loope
cwtl
dec
lods
mov
pushl
add
outsb
add
fidivl
push
outsb
insb
fstl
nop
ljmp
aam
jle
ss
and
seto
test
jnp
ret
ret
test
xorl
dec
fstps
dec
popf
rorl
mov
mov
inc
sbb
pop
faddp
ljmp
pop
lods
loopne
pop
cwtl
jno
std
sub
inc
pusha
pop
iret
fnstenv
jmp
test
orb
push
stc
cmp
lea
std
cmp
lock
and
jle
movsb
or
dec
aaa
imul
sub
cli
scas
in
pop
scas
inc
fnstcw
imul
mov
push
adc
lret
int
fisttps
outsb
lods
sarl
in
shll
repz
imul
mov
mov
push
pop
fstpt
popf
add
scas
jno
out
lock
mov
inc
inc
add
iret
dec
mov
sbb
sbb
mov
jg
pop
or
loop
add
push
or
push
and
movsl
divb
pusha
insb
int
xchg
sbb
sbbl
push
fnstenv
mov
or
into
push
lods
inc
mov
sbb
adc
fsubs
xchg
pop
in
adc
jl
ss
popf
push
cmpsl
testl
push
pop
fwait
add
das
iret
push
aas
dec
scas
and
inc
mov
out
loopne,pt
lcall
sti
into
fdivl
xchg
lods
or
xchg
not
lea
ss
mov
jns
loope
mov
ret
mov
loope
loope
repnz
ljmp
sub
or
fdivr
pop
mov
fldt
mov
sbb
jo
bswap
dec
cs
mov
test
nop
std
in
push
or
std
lcall
dec
push
add
push
and
inc
loop
pop
imul
pop
nop
push
add
jle
mov
bound
or
add
xchg
add
dec
pop
add
mov
xchg
and
dec
mov
lock
bound
cmp
add
and
mov
roll
filds
nop
fsts
bound
into
xchg
cmp
cltd
xchg
pop
jno
xor
aaa
iret
mov
fstpl
inc
pop
rclb
jbe
adc
mov
sbb
out
scas
xlat
jg
shlb
mov
pushf
sarb
and
push
pushf
jne
enter
lcall
jbe
add
data16
aaa
aad
je
lods
nop
loop
lock
add
pop
sub
mov
push
pop
inc
jne
dec
pop
rcrb
dec
inc
pop
data16
push
push
inc
jae
les
lods
lock
arpl
lea
and
sahf
and
and
test
ret
out
or
stos
es
repz
movsl
push
adc
aaa
mov
lea
fwait
xchg
and
ret
fildl
pushf
mov
insb
mov
cmp
aam
jge
adc
rcrb
mov
les
push
mov
imul
stos
out
int3
aas
add
xchg
aas
pusha
rorl
iret
in
pop
add
mov
out
test
out
repnz
mov
popf
mov
lret
fsub
or
fwait
in
in
pusha
les
outsl
pop
pusha
push
mov
std
pop
dec
stc
sub
idivl
lds
and
outsb
xlat
jecxz
scas
inc
or
enter
add
ror
scas
jge
xor
sbb
mov
jne
mov
rcll
dec
push
pcmpgtd
or
loop
dec
call
inc
cmpsb
out
push
adc
inc
lea
sbb
pop
xchg
pop
push
mov
aaa
cld
xchg
sbb
inc
loope
jp
pop
popa
aad
test
std
cwtl
pop
imul
and
jmp
shlb
dec
cmp
out
aas
cmp
fs
lret
inc
mov
pop
stos
push
ficompl
enter
jecxz
cmpsb
lock
lea
aad
pop
cwtl
imul
adc
ss
daa
push
divb
movsl
out
in
sbb
andb
cmp
popf
aaa
jne
push
out
xchg
data16
or
inc
mov
mov
pop
pop
fadd
shll
ja
sub
pop
jo
pop
loopne
stos
scas
dec
mov
ret
jp
xlat
push
pushf
aam
mov
push
sbb
sbb
adc
loope
sahf
popf
and
iret
imul
cltd
dec
push
adc
lret
bound
pop
mov
stos
xchg
data16
adcb
je
imul
ss
inc
sub
mov
mov
ret
ja
or
popf
push
addb
fdivl
loope
in
je
pusha
jmp
xchg
outsb
cmp
fmul
jmp
cmpsl
pop
mov
pop
cld
push
sub
fbld
das
mov
sbb
inc
hlt
or
pusha
addr16
dec
adc
nop
xchg
cmpsb
fbld
in
mov
xchg
test
add
mov
fcmovnb
push
add
pushf
les
pop
lods
andb
jge
sahf
rcr
mov
xor
mov
cmp
movsl
mov
push
jmp
test
xor
adc
aaa
rorl
adc
pop
out
iret
int
push
cltd
and
in
inc
pop
push
scas
nop
adc
aaa
jg
jns
out
and
cs
int
repz
dec
xchg
iret
mov
push
jp
incb
push
and
mov
vcvttsd2si
or
int
ss
xchg
mov
pop
dec
jl
and
adc
out
bound
stc
jle
mov
test
xchg
jg
push
mov
in
xorl
push
pop
rcr
in
cmp
loop
repz
pop
mov
mov
insb
mov
idivb
fs
in
dec
and
icebp
aaa
lret
and
jbe
push
jb
mov
sbb
in
mov
fidivrs
mov
ljmp
lea
pop
xchg
jl
inc
cmp
rcll
ds
push
imul
xchg
jne
into
sub
mov
loope
push
fsts
stc
mov
in
arpl
into
add
nop
aas
mov
mov
adc
fnsave
xchg
fcmovnu
inc
lcall
jnp
cmp
cmp
sbb
popa
stc
and
sub
fnstcw
dec
mov
test
icebp
xor
in
pop
leave
stos
add
mov
pandn
sahf
scas
dec
dec
jl
ja
pop
call
inc
sub
adc
repnz
xchg
inc
add
sbb
xorb
jp
je
mov
mov
cmpsb
lods
aaa
sarl
lea
or
jmp
fistpl
jmp
push
cmc
and
outsb
pop
ret
fld1
jmp
lock
lahf
test
gs
dec
cmc
add
sbb
mov
shrd
aam
jns
cmpsb
clc
xor
inc
insl
sbb
cmp
rcrb
loope
mov
je
xchg
cmp
xor
cmpsb
pop
cmpsl
pop
pushl
jb
mov
mov
cwtl
mov
adc
xchg
popa
push
add
and
jl
push
loope
aam
sahf
clc
jl
sbb
pop
push
jmp
xor
imul
cmp
cmpsl
out
cmc
pushf
pop
dec
je
outsb
cmpsb
imul
mov
sbb
out
negl
mov
sbb
icebp
shrb
test
jp
cmp
inc
sahf
or
mov
in
mov
adc
out
lods
mov
mov
inc
js
sbbl
out
sub
mov
cld
lods
int3
jle
or
xchg
mov
jns
pushl
and
ret
lods
ljmp
adc
pushf
mov
jp
arpl
sub
sub
cmp
xchg
in
int3
outsb
call
adc
lahf
mov
jno
xchg
mov
dec
pop
cmp
test
mov
ss
dec
jnp
dec
jns
cmp
push
dec
xchg
sub
inc
dec
test
js
aaa
pop
or
or
mov
push
sbb
xor
js
mov
test
pop
daa
pop
pusha
repz
arpl
inc
scas
movsb
test
push
mov
bound
repz
mul
shrl
mov
pop
pop
mov
sbb
fstl
mov
push
daa
jb
movsb
inc
mov
xor
inc
pop
pop
or
lods
imul
into
aam
jmp
mov
xchg
ret
ds
clc
shrb
sbb
and
dec
jle
adc
push
xor
sbb
mov
dec
mov
jp
push
mov
mov
or
mov
lods
loopne
dec
mov
inc
sub
xor
data16
aaa
inc
lock
fists
ret
scas
mov
sarb
and
and
dec
cmpsl
jmp
xchg
int
adc
jle
jle
mov
sbb
stos
stc
ret
jmp
in
testb
test
push
mov
frstor
das
adc
mov
sbb
dec
je,pt
fdivrl
xor
clc
scas
mov
jge
fwait
lods
mov
addr16
lods
es
pop
fmuls
mov
icebp
insl
pop
arpl
aaa
add
sub
push
iret
push
jg
imulb
push
aas
add
xchg
mov
bound
cli
std
sbb
push
das
jno
insl
lods
fwait
in
movsb
jns
dec
sti
jp
jl
shll
ret
lcall
data16
mov
shr
push
mov
cmp
in
push
dec
and
insl
cli
add
cmp
outsb
sub
decb
sub
test
scas
repnz
in
push
sbbl
mov
jns
or
out
mov
inc
or
add
sub
pop
cmp
push
jmp
test
push
jp
shll
sbb
pop
push
or
jmp
aas
ds
mov
gs
call
mov
xchg
repz
repz
cmc
sbb
add
sub
and
sbb
push
inc
fwait
dec
jnp
pop
mov
in
incb
mov
xchg
lea
cli
je
out
mov
pop
mov
xchg
xor
cmpsl
mov
repz
clc
jp
out
les
mov
imul
xorl
aas
out
jno
push
mov
sbb
cmpsb
push
adc
into
lock
cs
pop
dec
and
icebp
in
fldt
push
insl
add
ret
enter
ss
mov
cmc
movsl
jmp
enter
jnp
mov
mov
aaa
pushf
mov
cmp
add
faddp
mov
leave
pop
mov
jae
std
push
lods
add
dec
jp
fwait
mov
repz
sub
push
cltd
add
mov
nop
xchg
popf
push
std
int3
loope
icebp
mov
and
push
out
loopne
sub
fwait
dec
arpl
mov
inc
pop
lahf
mov
test
jbe
ss
pop
popa
pop
sbb
mov
imul
pop
stc
mov
mov
cmpb
xchg
je
aam
cmp
cld
rcl
add
mov
adc
mov
into
nop
jo
adc
mov
icebp
mov
sub
hlt
pop
xor
add
sbb
aaa
loope
insb
rcll
cwtl
adc
xor
adc
inc
jecxz
or
and
mov
lock
ds
jo
pop
arpl
mov
sbb
scas
addr16
and
test
cwtl
sbb
test
addb
mov
and
call
jl
xor
jle
mov
xorl
jp
fwait
arpl
test
mov
rcrl
js
mov
divl
fldt
add
aad
nop
cmp
ljmp
push
std
outsl
filds
or
pop
mov
and
out
cwtl
dec
test
out
jno
and
xlat
jle
sbb
push
jl
sahf
sbb
fnstcw
jle
repnz
jb
inc
pop
inc
adc
and
fwait
bound
push
mov
xor
and
jle
ret
jns
pop
clc
ret
dec
push
in
sub
adc
fs
mov
jb
addr16
vcvtuqq2ps
cmp
push
mov
subb
cmp
aam
and
in
orb
inc
sub
mov
fsubl
jp
sub
inc
xchg
lock
and
fmull
mov
xchg
repz
popf
imul
fdivrl
lret
pop
cwtl
add
clc
outsb
outsl
aaa
hlt
add
aam
cmp
fst
dec
leave
mov
repz
sub
leave
arpl
sbb
rcrb
pushf
stc
sahf
call
cld
cmp
cmp
out
jecxz
pop
shl
dec
scas
aas
movsb
sbb
stos
mov
adc
nop
xor
sbb
xorl
cmp
cmp
inc
in
loop
xchg
aaa
cmpsl
dec
enter
movq
test
push
pushf
les
in
inc
sar
lods
mov
ss
and
fldenv
mov
xor
sti
ret
mov
into
jbe
in
mov
mov
out
push
mov
aaa
es
jmp
xlat
repz
pop
ds
push
sub
rclb
or
cwtl
xchg
outsb
push
aaa
mov
out
mov
stos
inc
xchg
cwtl
cmpsb
je
sub
jmp
sbb
add
add
and
and
pop
sbb
xor
icebp
jle
sbb
push
lcall
lods
adc
add
cmp
mov
cmpsb
int3
in
scas
in
dec
in
inc
mov
loope
aam
leave
add
push
loope
mov
fldl
or
imul
inc
pinsrw
sub
fldt
mov
mov
je
test
adc
mov
stos
lea
das
jmp
xlat
sbb
cmp
mov
mov
xor
mov
jne
call
popf
fucomp
aaa
cmp
stos
lods
sbb
mov
sub
inc
aaa
inc
xchg
stc
cld
jmp
fdivl
fisubrs
pop
inc
sub
push
push
shrl
inc
adcb
pop
pusha
mov
sbb
jp
xchg
sbb
xchg
push
outsb
in
add
loop
jne
ucomiss
sbb
insl
stos
bnd
out
shrl
adc
loope
imull
es
pop
pop
sbb
fsubrp
mov
unpcklps
and
movsl
idiv
test
jmp
cmpsb
out
sbb
movsl
test
fstl
mov
and
fwait
rorl
mov
cmpsb
pop
scas
pop
pop
iret
stos
mov
pop
fmul
mov
push
adc
pop
pop
loope
mov
pop
outsb
fmuls
out
dec
mov
mov
daa
lea
push
sub
and
xchg
loope
dec
nop
aam
daa
loop
sub
mov
lock
push
movsb
outsb
loope
cmp
sub
mov
mov
das
dec
idivl
ljmp
cmp
cmp
arpl
aam
test
mov
or
mov
cmpsl
xor
cmpl
mov
dec
aaa
lods
mov
adc
in
js
loope
jne
shlb
test
dec
mov
sub
sbb
cmp
and
sbb
mov
pushf
call
xchg
ret
fcomi
and
xor
scas
xor
sbb
cld
and
jb
adc
push
aas
fnstsw
gs
movb
mov
std
aaa
and
mov
cmpsl
or
inc
and
jle
fstl
inc
leave
sbb
and
jge
cs
ss
je
gs
pop
adc
dec
pop
xor
sub
jno
in
xchg
popa
sahf
nop
lahf
ret
sbb
adc
cmc
xor
popl
sbb
enter
je
jge
rclb
pop
lcall
pop
push
fwait
mov
loopne,pt
sub
mov
pop
add
cltd
or
xor
js
movmskps
cmpsb
sub
lods
call
adc
jle
iret
dec
inc
jle
aaa
outsb
adc
das
adc
andb
rcrl
mov
icebp
out
xchg
mov
and
sti
test
outsb
xor
jae
mov
pop
pop
ds
push
popf
shr
lds
in
mov
push
sbb
scas
sbb
inc
and
jnp
loopne
sbb
int3
adc
xchg
xchg
inc
bound
jb
andb
pusha
mov
addr16
jge
mov
leave
ret
lods
push
in
into
dec
push
jnp
adc
aas
sbb
in
pop
jle
jp
cmpsl
in
js
aas
xchg
pop
ds
rorb
stos
out
scas
adc
xchg
stc
movsb
cmp
pop
test
mov
fnstsw
lock
and
cmp
inc
lea
and
pop
testl
ret
in
decb
out
stos
jo
mov
sub
push
add
dec
cli
pop
push
fistpl
pop
or
aam
mov
movsb
add
push
loopne
pop
and
inc
dec
pop
sbb
xchg
inc
adc
scas
dec
sbb
rcrl
lret
gs
or
pop
std
xchg
lcall
cltd
sbbb
add
fs
xchg
cmp
outsl
mov
jbe
ss
push
add
ret
xorl
sub
repz
jecxz
ret
lock
ss
ja
std
bound
mov
out
imul
xor
pop
mov
xlat
sti
sbb
shll
fstpt
xchg
outsb
f2xm1
fisubrl
push
sbb
out
sbbl
and
test
cmpsb
mov
push
iret
ficoml
and
cmp
cmp
ss
xchg
or
or
xchg
or
cltd
xor
and
ss
and
jo
mov
lret
jae
subb
lcall
cmp
orl
jb
imul
xchg
xchg
adc
shrl
cmp
rcl
push
pusha
xor
in
xchg
pop
das
cmp
fistl
in
js
mov
sahf
adc
shll
outsl
stos
aam
add
jae
jmp
cmp
loope
and
and
push
pop
push
call
xchg
imul
mov
addr16
xchg
jle
pop
jecxz
fcoml
outsl
or
fwait
lods
pop
out
shlb
and
inc
sti
jne
push
outsb
scas
or
xchg
pop
pop
pop
icebp
mov
dec
xchg
cld
and
sub
aad
fwait
mov
or
pop
call
in
sahf
sahf
inc
loope
pop
push
arpl
xlat
add
add
loopne
mov
aaa
loop
addr16
stc
fstl
and
sbb
sbb
and
lea
lods
std
movsl
aaa
aam
js
lahf
mov
pop
cmp
es
imul
into
pop
imull
ds
jecxz
mov
iret
aaa
das
fmulp
sahf
insl
push
icebp
push
outsl
test
mov
mov
lds
mov
shrl
pusha
inc
xchg
lock
mov
cmpsb
push
repz
jo
scas
sub
sbb
bound
subl
int3
dec
jge
xor
inc
or
hlt
movsl
xchg
sbb
sbb
push
shlb
loop
adc
mov
jbe
in
pop
xchg
call
xor
xlat
popf
add
sbb
clc
adc
jnp
sub
in
ret
mov
push
adc
jae
aaa
out
mov
ffree
pop
insb
aaa
mov
dec
mov
cli
inc
aam
pusha
sbb
repz
jg
jbe
cwtl
aad
leave
jo
repnz
cmpsb
jno
imul
out
rcll
loopne
aaa
cli
rorl
in
xor
dec
mov
fisttpll
pusha
in
lahf
and
or
fnstsw
hlt
mov
push
scas
mov
stos
mov
sub
aaa
out
push
sahf
mov
pusha
lret
adc
bound
xchg
mov
xchg
clc
pop
stc
pop
in
insb
xchg
repz
scas
aam
mov
push
mov
pop
or
push
test
sbb
sbb
jle
bnd
cmpb
icebp
cmp
dec
in
cs
inc
sbb
xchg
iret
es
xor
jb
stos
mov
aam
bound
pop
push
jp
sahf
push
fcompl
push
in
push
xor
inc
jbe
lcall
dec
mov
ficompl
int3
and
test
push
sub
das
sub
add
push
fnsave
fdivrs
push
or
popf
push
cmpsb
in
jecxz
call
mov
stos
inc
int
into
cmpsl
pop
pusha
mov
ss
and
insl
mov
mov
inc
hlt
fs
xor
adc
jns
fwait
sbbl
sbb
subb
mov
push
enter
mov
push
test
adc
in
ret
ret
or
mov
adc
mov
pop
inc
fnstcw
cltd
push
loope
inc
xchg
pop
aaa
gs
cli
mov
std
sbb
in
mov
dec
das
aaa
call
push
jb
add
mov
out
jae
stos
inc
xor
mov
xchg
pop
xchg
in
inc
jmp
stos
pop
stos
ret
aad
mov
sbb
jp
push
inc
out
inc
fmul
push
aaa
fists
push
js
sbb
mov
loope
mov
mov
pop
cmpsb
sbb
push
add
xor
dec
outsb
xchg
insb
cmc
fldl
call
arpl
sbb
into
add
inc
out
loope
imul
je
xor
je
dec
inc
cs
loopne
sbb
mov
mov
and
and
aaa
or
and
add
inc
mov
jb
mov
lahf
xor
movsl
cmp
inc
or
xor
xor
daa
out
test
mov
in
lea
xchg
mov
scas
into
mov
sarb
sub
rorb
push
pop
ds
dec
push
test
mov
aaa
into
aaa
xchg
xor
mov
or
pushw
pop
loope
mov
js
roll
out
loope
bound
cmp
call
loope,pt
aaa
mov
insb
inc
cld
sub
add
pop
fldcw
inc
ds
pop
mov
sahf
orl
sub
in
pop
jp
sahf
jno
imul
test
into
lahf
sub
mov
mov
inc
gs
push
mov
cmp
xlat
jno
mov
mov
adc
je,pn
movsb
pop
test
ds
fdivrs
xchg
ss
pop
jnp
sub
mov
repz
aaa
pop
mov
pop
cmpsl
push
lods
rcl
xchg
pop
ja
es
mov
popa
sbb
mov
loope
jp
xchg
jp
int3
inc
inc
pop
lea
jno
mov
sti
inc
push
xor
icebp
pop
bound
pop
fucomip
push
ds
and
lahf
divl
popa
xchg
popa
sbbb
fnstsw
pop
dec
lcall
notb
imul
push
mov
sbb
and
cmp
xor
mov
sub
cmpb
mov
roll
add
les
mov
outsl
cmp
std
mov
insl
cmp
loope
cs
jbe
ljmp
gs
mov
and
cmp
dec
addr16
fldenvs
test
mov
enter
das
push
push
fsubr
sbbb
and
loope
push
dec
inc
cmpsb
cld
in
je
pop
outsb
addr16
rcll
xchg
mov
js
dec
add
xchg
or
movsl
inc
mov
or
pushf
out
fdiv
sbb
pop
stos
jp
jnp
inc
imul
aaa
dec
lret
jmp
cld
cmpb
jecxz
sub
arpl
shlb
mov
and
out
xlat
inc
icebp
loopne
ljmp
add
repz
adc
jo
sub
nop
out
sahf
jne
pop
lea
rorl
test
sub
pushf
sbb
dec
mov
repnz
ljmp
mov
ljmp
jne
pop
sub
dec
mov
cld
jl
outsb
push
inc
jae
mov
arpl
jne
xchg
pop
and
imul
data16
and
std
sbb
inc
cltd
pop
gs
arpl
jno
setg
xlat
sbb
fwait
jo
out
test
cmc
jmp
roll
sbb
sbb
dec
push
cmc
aam
scas
push
cmp
fsubl
flds
add
arpl
test
fisubl
imul
push
jns
cmc
lock
push
int3
loope
cmp
and
jge
in
mov
xchg
or
out
sub
push
sarl
shrl
data16
test
std
ss
enter
pop
jns
cmpsb
inc
adc
mov
fsubs
into
rcr
push
xchg
cmp
pushf
cwtl
int3
cmc
repnz
jle
bound
lahf
ja
inc
cmpsl
xchg
mov
lret
pop
fstp
test
pop
xor
stc
mov
in
push
adc
mov
sbb
or
adc
out
fsts
stos
dec
mov
mov
adc
ss
cmp
out
pop
or
sbb
test
enter
lds
push
push
jle
shlb
aas
jae
ds
scas
fiadds
push
or
into
test
adc
xchg
xor
or
movsl
cltd
in
aaa
das
or
pop
mov
roll
inc
jge
jp
inc
inc
repz
dec
stc
inc
pop
lods
nop
fsubrl
leave
in
sub
cli
dec
xchg
loope
dec
jge
push
sbb
loopne
leave
sbb
scas
xor
shr
fsubl
pop
ja
cmpsb
pop
mov
nop
mov
aaa
sbb
test
inc
ret
push
mov
xor
inc
loope
inc
sbb
out
sbb
inc
mov
in
mov
lods
adcb
xchg
pop
cld
les
mov
aad
ss
xor
jbe
dec
add
sub
fcos
xor
scas
enter
repz
ss
sub
jae
mov
imul
adc
xchg
pop
and
pushf
xchg
mov
sahf
mov
rcrb
xchg
mov
cmp
adc
pop
mov
mov
test
lret
int
gs
in
jg
rolb
xor
pop
fs
test
outsb
loopne
aas
int
out
cmpsl
xor
and
js
in
mov
cli
dec
arpl
scas
int3
and
aad
mov
push
pop
in
cmp
sahf
dec
js
movsl
lea
jne
pop
adc
pop
jae
jmp
xchg
orb
or
loopne
test
mov
mov
insb
jecxz
jns
inc
cmp
jge
dec
aaa
xchg
jne
xchg
sbb
pop
sahf
lea
fnstcw
fadd
mov
lds
mov
call
es
push
lea
mov
in
daa
pop
fwait
sub
pop
sbb
das
xchg
push
mov
adc
stc
inc
push
lea
outsb
enter
into
sti
fmulp
jmp
mov
sbb
repz
jge
es
aaa
stos
add
iret
inc
jbe
mov
gs
inc
push
add
lret
cmc
outsb
ja
idiv
mov
mov
icebp
pop
pop
adc
loop
mov
xor
ret
inc
mulb
repz
sub
cltd
jecxz
jmp
mov
imul
fstl
cltd
jp
dec
nop
pop
daa
ljmp
and
nop
cmp
call
aam
push
mov
iret
fdivrl
inc
shll
in
sub
das
loop
imul
mov
push
loope
mov
subb
xchg
scas
pop
push
imul
cmp
dec
push
xchg
xchg
sbb
test
inc
sbb
neg
fstpl
mull
pop
inc
out
inc
pop
imul
jno
fs
sarb
cmpb
pop
jge
jmp
loope
dec
cli
mov
sub
dec
cli
test
mov
adc
sbbl
pop
pop
push
out
mov
loopne
mov
outsl
das
xchg
mov
or
sbb
dec
rclb
inc
mov
add
popf
mov
mov
jbe
and
inc
dec
lret
pop
and
push
pop
cmp
xor
pop
or
std
adc
ljmp
push
or
icebp
push
aam
loope
movsl
pop
bswap
pusha
sbb
push
sub
jl
adc
movsl
loopne
inc
xor
aaa
ss
sbb
into
ret
aaa
push
ss
mov
xchg
xor
fisttpll
std
leave
rorb
lds
sub
popa
mov
cmp
sbb
fnstcw
mov
sub
sbb
mov
mov
in
test
sahf
je
mov
xchg
call
ss
xchg
cli
and
test
mov
into
mov
les
pop
lret
gs
aaa
xchg
mov
inc
div
and
mov
pop
xchg
aam
xlat
add
out
cmp
pop
xchg
jmp
les
jo
adc
outsl
iret
pop
ret
cmpsb
scas
jge
lock
idivb
in
lahf
stos
push
and
fistps
cmp
jmp
mov
cmp
mov
sbb
add
sub
in
dec
push
jmp
outsb
mov
cs
test
movsb
cmp
repz
fwait
adcb
xchg
imul
inc
cs
sub
mov
aaa
adc
cmp
outsl
stc
loope
aaa
jne
adc
in
pop
mov
sub
and
rcrb
jmp
mov
decb
rorl
ret
ja
sti
mov
pop
jg
mov
enter
aam
inc
insl
push
clc
cli
xchg
mov
aam
mov
cmp
jp
lods
lods
test
testl
xchg
xor
ss
fwait
cltd
shlb
mov
ss
imul
xor
rorl
adc
icebp
add
pop
mov
popa
mov
xchg
jne
pop
and
pop
mov
ds
adcl
arpl
aaa
inc
xchg
js
das
into
stc
addr16
and
adc
mulb
je
out
gs
inc
into
push
sti
mov
sti
cmpsb
push
mov
cmp
imul
mul
in
ljmp
push
nop
fwait
mov
xor
sahf
int
mov
lods
pop
jecxz
sahf
cwtl
pop
sub
sbb
fwait
out
addr16
jo
nop
out
or
push
sbb
rdmsr
leave
cli
mov
mov
xor
mull
or
pop
xchg
cmove
mov
sbb
std
jge
and
push
lret
jge
inc
jo
cmp
scas
push
push
int3
add
std
aaa
ja
cwtl
sbb
dec
out
into
loope
ret
push
lock
xor
cmp
aas
es
ds
mov
xor
mov
push
mov
pop
cwtl
sahf
mov
cltd
jbe
lcall
mov
sub
push
outsb
shll
dec
out
jl
sahf
sbb
dec
add
mov
cmp
pop
sbb
cmc
pop
std
mov
bnd
push
gs
cmc
xlat
out
pop
repz
dec
xchg
mov
sub
fdivrl
scas
aad
xor
or
movsl
int3
es
jnp
push
in
push
jmp
insb
mov
sbb
stc
in
rorb
mov
rorb
btc
pop
push
sbb
jp
popf
xor
test
dec
aaa
dec
add
ds
cmc
xchg
xor
inc
iret
add
les
lea
inc
mov
and
inc
ss
divl
shl
xchg
push
push
dec
mov
loope
ds
xchg
adcb
adc
pop
cmp
jmp
imul
in
in
jp
dec
out
jns
rorb
lret
cltd
in
into
aaa
or
add
add
cltd
xor
xchg
es
movsl
mov
xor
dec
and
push
into
sbb
fdivl
jno
xorl
call
inc
es
xchg
arpl
arpl
pushf
movsl
push
xchg
aaa
fcompl
mov
xor
in
sahf
popw
push
mov
xor
inc
adc
dec
pop
mov
jge
mov
pop
xchg
lea
sbb
xor
daa
scas
cmp
icebp
fsubrs
movsl
addr16
lock
mov
imul
xorb
add
jg
push
pop
pcmpgtd
lret
mov
cwtl
and
out
loopne
xor
mov
push
in
lahf
insb
outsb
sbb
jg
jl
fsts
jle
xor
xor
and
dec
push
xchg
std
xlat
cli
popa
mov
stos
add
sbb
call
ds
xchg
movsl
push
call
pop
push
bound
pop
aam
hlt
in
out
jge
into
xchg
mov
sar
and
xor
jo
cmpsl
inc
inc
pop
in
popa
pop
int
jmp
and
or
jl
inc
andl
or
cmpsl
xor
test
jnp
sti
dec
cmpsb
sbb
xchg
xchg
inc
jp
cmp
filds
add
cmp
dec
aas
jge
enter
scas
pop
mov
lock
arpl
aam
leave
mov
jl
lret
dec
cmpsl
mov
push
jmp
xchg
lods
cmp
pop
fs
js
cld
test
add
adc
lock
aam
mov
mov
add
out
jecxz
testb
cmp
xchg
and
add
pop
repz
pop
fists
leave
push
fsubs
push
out
and
sbb
jo
repz
mov
pop
cmp
fmull
push
fcompl
inc
jb
xchg
jbe
push
les
mov
mov
jp
sbb
jg
cmc
ret
and
rorl
mov
adc
jbe
fldl2t
pop
movsb
dec
lahf
xor
inc
or
lcall
orb
aaa
sahf
adc
out
dec
pop
mov
pop
int3
pop
neg
adc
sbb
insb
jnp
cltd
sub
mov
push
cmc
pop
cmpl
js
lock
and
cmp
ret
mov
outsb
sub
inc
mov
inc
push
jmp
push
pop
daa
push
dec
add
cmc
or
xchg
stos
aaa
jae
or
sbb
inc
ljmp
insl
xchg
sub
jae
fistps
andb
pop
pop
sbb
iret
cmpsl
inc
and
outsl
sub
inc
push
jle
loop
pop
insb
add
out
cs
mov
jmp
adc
inc
ds
shrl
sub
insl
inc
mov
push
js
mov
stos
idivb
adc
or
notl
and
mov
orl
dec
int3
shl
jnp
jo
cmp
push
add
cmp
jb
out
push
add
das
fsubrl
mov
inc
sarl
dec
pushf
jmp
push
mov
pop
daa
pop
cs
negl
pop
xor
nop
test
adc
push
mov
xor
paddsw
loopne
jmp
xor
pop
cmp
loopne
rcll
or
repz
mov
pop
iret
mov
inc
test
jle
cmp
ret
stos
outsl
repz
movq
jb
pop
notl
das
das
mov
scas
gs
fs
push
jnp
push
repnz
xor
lahf
bound
stos
sub
jbe
mov
shr
aaa
loope
sbb
add
and
or
mov
mov
cmpsl
mov
xchg
int3
pop
sub
aaa
dec
adc
mov
loope
lea
xchg
jb
jmp
xchg
les
das
cmp
shrl
cmp
cmp
dec
cmpl
lods
mov
dec
sbb
mov
clc
pop
cld
jno
loope
add
and
xchg
sahf
mov
sbb
and
stc
aaa
cmp
movsb
das
pusha
rcll
jecxz
mov
mov
cmp
pop
pushf
sub
loopne
jg
outsl
test
xchg
mov
ds
rorl
test
mov
lcall
pushf
sbb
and
pop
repnz
cmp
gs
fucomip
int
or
sysexit
cltd
loop
pop
push
mov
mov
aaa
out
andl
repz
outsb
inc
adc
sahf
in
mov
subb
mov
dec
push
push
cmp
xchg
lret
stos
mov
ds
dec
ret
in
xchg
icebp
add
dec
add
jmp
lret
push
outsb
sbb
push
ret
pop
popf
mov
xchg
and
lahf
lret
or
and
fldt
mov
mov
add
in
lret
xchg
or
cmp
fcmovne
mov
jb
cmp
in
jo
decb
icebp
cmp
mov
scas
xchg
lcall
push
orl
outsb
ja
out
movsb
mov
daa
push
mov
cmp
push
xchg
jle
or
bound
mov
xchg
jle
mov
and
outsl
jecxz
je
fdivr
out
insl
js
sbb
push
jmp
sbb
lods
enter
xchg
call
jmp
jae
aaa
jns
inc
data16
sar
es
inc
and
sbb
jae
addb
adc
cli
lret
inc
iret
mov
pop
xor
fstl
cs
jne
and
mov
das
jnp
xor
xchg
js
pop
push
xchg
inc
icebp
fnstcw
bswap
popf
aam
ljmp
ficompl
push
call
addr16
sbb
mov
mov
daa
push
sbb
enter
add
out
lret
jmp
mov
mov
push
leave
xor
lds
sbb
out
jecxz
mov
jp
pop
addr16
lods
notl
popf
out
icebp
xchg
add
cmp
jnp
cld
push
sbb
fnsave
push
pop
mov
inc
or
outsb
add
clc
or
popa
jae
ds
adc
push
jo
orb
jl
cmpsb
scas
xor
test
stos
popf
das
and
mov
mov
loope
stos
xor
mov
stos
mov
jge
ja
movb
mov
bound
mov
mov
pop
lahf
jmp
pop
lret
mov
out
cmp
pop
popf
cmp
xor
mov
ss
dec
icebp
pop
imul
xor
cli
cmp
push
and
jl
xor
bound
mov
aaa
sahf
nop
fwait
pop
jmp
pop
push
pusha
push
ds
inc
rcrb
add
adc
mov
popa
mov
repz
scas
xbegin
aaa
sub
dec
pop
jns
pop
sub
movsl
dec
cmpsl
and
cmp
jge
in
dec
pusha
out
flds
insb
orl
mov
orl
mov
or
add
inc
mov
jge
mov
push
add
cli
inc
push
orb
adc
sub
add
mov
jns
arpl
sbb
and
nop
sub
outsb
xor
pop
xchg
icebp
cmp
ret
xchg
jae
bound
push
les
outsl
outsl
xchg
outsb
xchg
pop
std
in
pop
scas
cmp
fs
xor
dec
int3
dec
jae
aaa
jecxz
lods
pop
aam
stos
jg
push
cmp
sti
mov
dec
pop
fdivl
inc
mov
fldl
push
jle
pop
and
fstpt
push
scas
sbbb
in
outsl
ljmp
pop
xor
or
push
cwtl
mov
aas
xchg
pop
mov
cli
jp
xchg
add
cltd
inc
loopne
lahf
aad
outsb
cli
lods
enter
and
cmpb
in
loope
or
pusha
lahf
jg
popf
pop
lock
sbb
push
pushf
cmp
fildl
fsubrl
nop
jmp
stos
push
and
pop
mov
imul
lret
cmpsb
pop
lea
movb
out
data16
inc
out
xchg
pushf
test
aaa
aam
mov
jle
lods
dec
push
jge
movsl
cmp
mov
mov
sub
mov
fistpl
cs
cmp
xchg
push
aad
leave
pop
ljmp
and
push
aaa
push
sub
loope
outsl
cmc
inc
pop
add
xlat
mov
inc
shlb
fistl
clc
outsb
stos
lcall
and
xor
int3
dec
and
loopne
jecxz
je
push
jge
pop
xchg
push
inc
lret
sub
xchg
or
arpl
orb
and
out
shl
jno
cmp
aaa
mov
and
inc
cmp
je
xchg
jle
in
jno
cli
arpl
and
jns
inc
data16
rorl
add
mov
push
push
mov
inc
pushf
orb
and
xor
jns
push
aam
adc
pushf
push
out
dec
push
mov
stos
nop
lock
push
inc
pop
add
push
or
mov
add
loopne
mov
std
adc
jnp
add
lahf
lret
aaa
enter
imul
xchg
arpl
pop
int
ds
in
lret
xor
sub
fimuls
mov
jo
or
dec
fdivl
mov
bound
mov
dec
ret
popa
scas
push
fsubl
clc
lret
cld
xor
mov
das
pusha
das
xlat
fnstsw
mov
mov
cmp
push
mov
mov
add
sbb
inc
inc
add
arpl
add
mov
in
xchg
jae
jo
lahf
pop
mov
fistpl
sbb
pop
jecxz
movb
jl
mov
or
xchg
add
mov
mov
das
inc
jp
dec
sub
fcompl
daa
negb
cld
xor
push
dec
std
pop
mov
orb
xor
mov
push
bswap
popa
add
out
lcall
orps
in
js
in
pop
and
out
and
ds
aaa
scas
adc
jmp
pop
xchg
fisttpll
dec
loopne
mov
jg
in
stos
pusha
sub
dec
inc
sbb
xchg
dec
add
dec
push
mov
insl
and
xchg
lods
in
sbb
xchg
popf
in
push
aas
cmp
aaa
inc
dec
push
cmp
mov
adc
add
mov
push
dec
lahf
pop
cmp
mov
mov
movsl
inc
int
push
into
push
cmp
xlat
outsb
adc
es
out
sub
fwait
lret
call
inc
inc
push
fdivl
loope
cmp
aad
jp
mov
mov
add
adc
andb
imul
xorl
lahf
add
outsl
dec
mov
dec
mov
data16
mov
fs
cmp
arpl
inc
xchg
jno
jae
xchg
mov
notl
jbe
mov
cli
mov
inc
outsb
jmp
cmp
pop
xor
pusha
pop
sti
and
lahf
push
pop
in
in
ss
repz
scas
pusha
jne
sbb
and
push
mov
lods
ja
jmp
inc
cmp
push
aaa
or
push
imul
mov
pop
test
cld
pop
sbb
enter
add
push
inc
ss
les
lods
loopne
push
sbb
xor
and
cmp
push
jno
rolb
inc
cwtl
cs
lock
outsb
dec
lret
inc
notl
pop
aaa
push
jle
jecxz
sbb
and
dec
push
sbb
pop
pop
pop
xchg
inc
mov
or
ljmp
inc
imul
ret
int
loope
cmp
sti
fidivrs
cmp
nop
mov
mov
xlat
mov
dec
insb
aad
aaa
cmp
jb
imulb
dec
mov
addb
sbb
jecxz
aaa
stos
bound
xchg
test
dec
movsl
or
inc
shl
lods
pop
inc
sub
cwtl
sti
inc
fldcw
sub
mov
pop
pop
in
push
outsb
repz
or
xchg
or
jle
in
jns
popa
in
movsl
les
in
xor
std
or
out
imul
lcall
push
push
and
popa
in
xchg
int
mov
mov
loope
lret
mov
pop
inc
pop
popa
mov
xchg
icebp
out
cld
aaa
in
xor
push
repnz
pop
fsub
and
jns
sbb
xor
push
pusha
popa
jb
fs
cltd
sbb
rolb
js
sub
cwtl
dec
lret
mov
and
mov
mov
sbb
or
imul
xor
fistps
cmp
dec
bound
mov
ljmp
in
loope
push
loope
pop
sti
dec
aaa
inc
mov
mov
cmp
ret
xchg
mov
js
add
jbe
mov
or
fisubs
in
jmp
pop
bound
les
jmp
mov
mov
sbb
cmc
lods
push
fwait
jmp
push
jl
pop
notl
subb
cmp
in
push
pop
mov
or
mov
dec
and
inc
push
cltd
cld
sbb
sub
adc
jg
scas
rorb
lods
aaa
ret
insb
and
dec
int
out
ficoml
insb
cmpsb
and
out
ret
aaa
imul
daa
icebp
arpl
or
out
js
inc
mov
adc
mov
push
js
pop
jns
inc
les
adc
push
in
arpl
mov
icebp
xor
aaa
mov
and
xor
sbb
icebp
jecxz
inc
or
test
in
xchg
loope
push
lods
movsb
testb
jecxz
mov
mov
cmp
and
pop
inc
xchg
dec
pusha
and
pop
sub
sbb
mov
mov
test
std
stos
add
cmp
jg
fstl
and
stos
ss
bound
pop
and
or
shl
into
and
leave
jmp
repz
mov
mov
ljmp
lahf
and
push
movsl
cmpsb
popf
pop
fs
mov
inc
outsl
repz
fnsave
adc
sbb
pop
adc
popa
or
cmpsb
lods
daa
xchg
loopne
ret
rol
or
call
lret
outsl
in
xchg
aam
sub
cmpsb
mov
rcr
ds
pop
push
and
mov
aam
push
popf
adc
inc
sbb
adc
pop
dec
pop
mov
inc
inc
movsl
inc
test
imul
repnz
sbb
pop
movsb
cmp
push
sub
orb
test
push
sub
data16
inc
loope
loop
dec
test
push
dec
rcrl
jae
dec
and
clc
mov
arpl
jno
inc
iret
outsl
les
sbb
pop
pop
push
push
inc
and
icebp
arpl
or
adc
pushf
jnp
popf
xor
lret
mov
mov
fistpll
lods
pop
pop
sti
sbb
push
pop
dec
icebp
leave
jmp
outsb
push
pop
cmp
jg
cltd
pop
jbe
movsl
xor
int3
aaa
fisubl
shl
sub
lahf
fwait
mov
pop
xor
aad
cmp
jg
add
fucomip
mov
mov
negl
stos
in
addl
push
subb
ss
sbb
iret
xchg
jbe
rorl
sbb
testb
call
addr16
or
push
icebp
dec
ret
push
push
push
test
outsl
mov
outsb
std
sbb
stc
in
arpl
push
mov
or
lcall
jb
and
xchg
jne
ret
je
or
jmp
ficompl
push
popa
pop
sahf
js
push
dec
in
cld
jbe
das
add
add
and
cmpsb
mov
aam
aad
popf
loopne
js
fstl
inc
xor
jno
mov
loope
lea
std
push
jbe
sbb
hlt
mov
jecxz
adc
aaa
lret
es
pop
cs
or
gs
lods
push
xor
sub
mov
jle
sub
aaa
jnp
fstpt
inc
sub
lahf
adc
pop
test
mov
or
mov
xchg
add
divb
sbb
sbb
jl
iret
push
testb
je
fcmovbe
lock
xchg
das
loopne
aaa
dec
mov
or
cld
cmp
xchg
push
loopne
scas
push
mov
push
xor
add
jg
in
fcmovnbe
inc
xor
xlat
xor
jno
or
lds
mov
jbe
cmp
push
movsl
dec
cmpsb
push
jecxz
and
cld
pusha
mov
dec
jnp
push
lods
sbb
xor
sbb
mov
push
aaa
int3
xor
mov
adc
jnp
dec
push
inc
xchg
ret
xor
push
or
repz
nop
test
inc
je
sub
pop
aaa
iret
sub
mov
mov
and
call
in
arpl
popf
ja
mov
int3
push
cltd
lret
push
scas
xor
outsb
push
loope
cmpsb
adc
cmpsl
loope
aaa
sbb
pusha
cmp
pop
data16
adc
push
mov
cld
mov
push
mov
push
jmp
iret
test
popa
xor
nop
lods
xor
xchg
sbb
cmp
out
jg
repz
jb
pusha
les
xor
push
jne
adc
add
lock
pop
out
mov
fbld
pop
sahf
nop
mov
push
inc
shrb
pop
jnp
xor
mov
pop
add
cmp
lret
lahf
scas
sbb
lods
loope
add
sub
mov
add
cmp
pop
mov
add
lret
icebp
call
data16
out
inc
and
arpl
cmpsb
sbb
pusha
cmpsl
fiadds
fwait
pop
push
jecxz
inc
dec
lea
fidivl
xchg
mov
mov
adcl
pop
pop
jbe
fsubrl
out
mov
xlat
in
std
jnp
pop
add
or
gs
loope
fnstenv
xchg
dec
mov
adc
test
outsl
fnsave
divl
jle
lods
movsl
int
decl
mov
jno
sub
call
out
pop
cmc
fldenv
push
fisubs
jg
sbb
arpl
lods
and
xor
or
cltd
femms
mov
sbb
ds
cld
fisttps
inc
adc
xchg
xor
inc
data16
jnp
dec
add
lea
hlt
inc
mov
outsb
pop
lcall
adc
xchg
in
push
fnsetpm(287
or
xor
pop
in
dec
int
inc
sbb
out
push
icebp
sahf
in
cmp
stos
adc
bound
pop
repz
add
push
shlb
stos
sbb
in
ficoms
or
inc
inc
jmp
push
cmp
pop
lcall
pop
push
xchg
or
add
enter
loopne
aam
rolb
or
ror
shrb
jecxz
out
push
test
pop
out
push
repz
or
mov
xlat
int
jg
jl
aad
cmc
push
lret
divb
sti
shll
js
mov
inc
pop
push
and
or
dec
andb
movsl
sub
jl
out
outsl
mov
adc
jg
aaa
adc
push
sbb
fdivrs
sbb
mov
cwtl
sbbb
repnz
mov
mov
mov
mov
mov
push
jns
push
int
xchg
lods
cmp
push
fnstsw
pop
push
inc
popa
pop
push
cmpsb
fdivr
pop
push
sbb
jl
xor
mov
xchg
xchg
into
xor
push
mov
dec
inc
sub
cmp
loopne
das
pop
popf
push
je
les
lahf
mov
setnp
ss
and
push
fistl
aaa
sbb
cmp
outsb
or
iret
ds
xor
sbb
push
jp
jle
xchg
popa
nop
pop
pop
fwait
lds
flds
xor
cvtps2pd
fwait
loopne
in
int
stos
ss
loope
or
sarb
xor
not
inc
push
jmp
insb
icebp
scas
repnz
popa
call
push
movsb
rorb
aam
fmull
aaa
divb
fwait
xlat
cmc
movb
call
add
arpl
xchg
or
in
adc
add
ret
xchg
lret
insl
loope
mov
ds
dec
cltd
xchg
lock
stos
cmc
inc
xchg
xor
sbb
les
adc
cmova
fistl
ljmp
inc
pop
mov
ret
in
push
aaa
repz
mov
pop
mov
jmp
shll
xchg
fldenv
xor
in
popa
in
sbb
add
push
mov
faddl
dec
cmp
mov
sti
scas
xchg
in
xor
pop
and
aaa
inc
adc
not
push
std
dec
push
lcall
test
push
mov
push
mov
inc
pop
sub
outsb
int3
pop
xchg
xchg
js
or
imul
fsubp
and
inc
and
cmp
repnz
sbb
adc
adc
pop
jb
into
repnz
push
cmpsb
ret
xchg
push
mov
fisubs
dec
loopne
lret
cbtw
nop
jne
dec
ss
adc
push
mov
ret
scas
pop
add
sarb
repnz
repz
ljmp
inc
jge
cld
test
loope
mov
pop
icebp
sbb
and
mov
adc
push
pop
mov
lret
jg
fisttpl
shrb
push
lea
ljmp
add
mov
ror
mov
cmpsb
or
or
sbb
push
pop
iret
movl
and
fldt
roll
add
pop
sbb
mov
jns
sahf
push
icebp
call
jmp
aaa
lods
dec
in
dec
or
lods
adc
pop
dec
das
and
insb
adc
mov
sbb
push
dec
loope
hlt
lcall
std
jne
xchg
in
and
lea
mov
stos
out
dec
pop
mov
add
adc
stos
test
sbb
push
cwtl
push
and
test
xor
push
daa
mov
in
push
xchg
pop
ds
inc
or
adc
mulb
lfs
mov
mov
mov
aaa
pop
sahf
rclb
sar
push
jne
xor
andb
mov
insb
out
and
jmp
dec
jae
push
push
pop
jne
pop
push
mov
out
adc
jg
loope
push
movsb
cmp
lds
out
sbb
loope
sti
push
js
jnp
cmp
ret
ja
xchg
add
popf
adc
mov
cmp
xchg
rol
daa
cmp
cmp
inc
push
inc
xor
fs
xchg
fmull
sahf
dec
adc
test
dec
pop
cmpsb
fwait
loope
and
scas
das
lcall
frstor
fld
sub
dec
clc
incl
push
mov
cli
lods
jl
xor
inc
enter
mov
dec
push
pop
mov
mov
stos
out
sbb
fwait
mov
je
xor
repz
jno
insl
les
sbb
pop
js
ljmp
inc
enter
dec
lock
pop
sahf
call
test
cmp
fwait
mov
std
ret
jb
or
insl
and
je
dec
xchg
in
sbb
push
jno
jmp
pusha
in
lods
popf
jg
inc
adc
mov
aaa
jno
mov
arpl
jle
pop
jnp
sub
scas
mov
sub
enter
pop
cmp
dec
xchg
xchg
cmp
jp
ret
cmp
jle
arpl
or
mov
sbb
and
cmp
pop
aaa
dec
addr16
imul
data16
add
xchg
jmp
sti
mov
scas
leave
aam
imul
sbb
push
js,pn
dec
sbb
pop
subb
sbb
lahf
mov
and
or
outsb
mov
in
jne
and
je
pop
sbbl
lea
lods
and
jl,pt
dec
icebp
adc
jo
pop
nop
loopne
and
push
fimull
mov
push
sahf
inc
mov
out
push
std
loope
push
lea
mov
mov
xor
xchg
outsb
xor
xchg
push
scas
sarb
test
fsubp
insb
nop
pop
add
xor
add
jb
jb
sbbb
mov
inc
inc
sti
jp
stos
add
cwtl
mov
test
scas
out
add
je
mov
les
ret
ret
aas
push
icebp
rolb
jb
xchg
data16
sub
or
pop
out
xor
mov
icebp
das
test
adc
push
inc
dec
aaa
inc
xchg
inc
out
lcall
fisttpll
hlt
hlt
cmp
sub
sbb
mov
add
xchg
loopne
adc
loope
or
push
jne
dec
stc
mov
xchg
dec
ljmp
cwtl
hlt
pop
test
out
mov
stos
stc
cmpsb
es
push
notl
jp
dec
xor
outsb
pop
adc
outsl
and
push
pop
int
pop
cmp
mov
push
mov
movsb
dec
outsl
lcall
imul
std
int
mov
jo
adc
aaa
stos
daa
std
popa
cs
repz
sbb
xchg
or
das
ret
dec
inc
dec
dec
int3
push
xchg
ss
mov
lods
pop
jp
jb
mov
scas
popl
mov
push
push
pop
aas
sbb
cmc
or
or
movsb
ret
or
xor
mov
sub
clc
pop
adc
mov
out
jbe
popf
std
add
inc
gs
shrb
pop
push
mov
imul
int3
ja
lods
xor
or
bound
pop
fs
sub
mov
xor
jbe
mov
inc
pop
mov
lret
mov
int3
push
jnp
aaa
sub
lds
adc
mov
aam
mov
pop
mov
out
std
jnp
popf
fldt
jg
push
stos
pusha
stos
xchg
pop
sarl
cli
adc
cli
jns
scas
enter
push
inc
jb
cmp
mov
pop
sbb
pushf
movsb
dec
xorb
mov
push
and
mov
das
add
sub
push
pop
call
xchg
pop
cmp
lods
adc
sbb
jp
mov
jl
mov
or
stos
mov
les
pop
add
sub
test
and
sarl
push
jb
mov
adc
inc
loope
inc
shlb
notl
or
js
roll
and
adcl
jl
repz
test
je
add
sahf
clc
loope
cld
sbb
fnstsw
mov
pushf
xor
jmp
push
mov
es
xchg
push
xchg
mov
aad
aas
jnp
leave
lea
ss
sbb
mov
inc
jle
enter
dec
pop
or
cmc
pop
loope
sbb
movsl
pop
sbb
mov
decb
jno
dec
repz
out
pop
call
cli
cltd
sahf
insb
xor
fisubs
cmp
cmp
mov
lret
xchg
fstps
xor
fsub
iret
mov
lret
add
out
jne
test
fildll
insl
dec
jae
pop
loope
or
sbb
mov
jne
rorb
mov
mov
and
icebp
inc
cs
or
mov
pushf
ds
add
mov
sbb
xchg
or
pop
data16
fisttpl
mov
pop
imul
mov
aaa
push
mov
into
mov
repz
aaa
adc
leave
fildl
mov
pop
aas
loopne
idivl
lcall
mov
push
mov
mov
notl
js
mov
sbbb
jp
add
push
mov
iret
rolb
or
jp
pop
pop
lods
inc
stc
lods
sbb
jo
jg
pop
js
ja
les
sbb
lret
jne
jbe
jle
test
push
loope
mov
adc
bound
mov
and
push
xor
dec
or
iret
jl
add
xorb
cs
sbbb
jo
mov
aad
fldt
inc
jp
sbb
adc
pop
rol
test
adc
sbb
fdivr
mov
aad
lcall
bound
jae
push
aad
lock
enter
sub
test
into
mov
jns
pop
jg
gs
mov
inc
dec
loope
test
fwait
push
pushf
dec
sub
arpl
and
mov
add
jb
mov
hlt
cmp
push
cmp
push
pop
in
negb
mov
call
loop
test
mov
aam
mov
push
xor
std
lret
imul
inc
inc
aaa
notb
mov
daa
mov
cld
std
je
mov
inc
mov
push
inc
js
ss
dec
out
adc
pop
adcl
push
daa
cld
lds
pop
sbb
ljmp
leave
stc
insb
add
mov
cmp
add
xchg
jmp
daa
mov
pop
jno
cmp
sub
and
xchg
lahf
in
sbb
lea
mov
or
dec
call
lsl
inc
imul
inc
outsb
fsub
shlb
mov
add
jo
arpl
rcrl
push
mov
mov
outsl
lcall
xor
ss
cli
icebp
adc
loopne
enter
lea
push
xor
mov
sub
inc
mov
jle
mov
jbe
mov
ss
dec
out
jno
cmpsl
add
mov
repnz
or
mov
sub
jno
xchg
dec
fldenv
mov
mov
test
dec
sbb
aaa
into
sti
rcr
xchg
sbb
rcll
fstpl
inc
and
jl
jbe
loop
repz
popa
sbb
out
aam
dec
orb
sub
jle
in
mov
popa
loopne
into
xchg
js
cmp
cmpsb
insl
xchg
sbb
jle
movb
add
fwait
cmp
xchg
decl
outsl
adc
int
pop
scas
pop
jnp
mov
dec
mov
pop
clc
jmp
pop
in
fadds
adc
scas
pop
mov
mov
xchg
dec
mov
xchg
sbb
and
jl
sbbb
adcl
inc
pop
sbb
aaa
loopne
cmpsb
call
movsl
call
mov
inc
mov
fisttpll
jl
mov
in
lcall
push
ret
cmp
loope
push
sub
shlb
ret
and
js
sub
xchg
sbb
add
fstl
cmp
sub
jmp
inc
pop
mov
inc
mov
pop
call
shlb
add
jae
inc
lock
outsb
sbb
jns
dec
cmpsb
loopne
sub
lods
mov
aaa
xchg
jp
or
shrb
pop
movsb
push
pop
out
lods
mov
push
nop
dec
jle
push
or
jg
inc
add
sbb
imul
call
bound
imul
fnstenv
push
in
repz
je
loope
pop
jmp
and
jb
enter
js
sbb
adc
inc
adc
xchg
sbb
cmpsl
dec
jl
repz
stc
cmc
loopne
imul
es
mov
jge
inc
fsubrs
je
outsb
sbb
dec
outsb
and
or
adc
sbb
cmp
dec
mov
ret
outsl
pop
repz
sub
mov
pop
pop
dec
adc
dec
mov
in
fldcw
out
and
ljmp
sub
push
jne
loope
jo
pop
jne
jb
lods
mov
arpl
loopne
in
test
pop
xlat
call
pop
jb
in
cmc
push
lds
xor
pop
jp
ret
in
jl
push
lahf
fdivr
std
sbb
aad
les
pop
lods
push
lret
xchg
enter
and
aaa
scas
sub
sub
sbb
jmp
cltd
push
jno
pop
jo
push
jbe
movsl
xchg
cmc
mov
mov
sbbb
sub
jmp
lret
cmp
cmp
mov
dec
mov
mov
pop
inc
ljmp
clc
aaa
ss
dec
mov
fisttps
out
adc
pop
es
notl
cmp
loopne
ret
mov
push
sarb
repnz
xchg
pop
cmp
mov
or
fdivrl
push
rorb
push
dec
jnp
xor
mov
mov
fstp
movsl
sub
lcall
sbb
aam
push
xchg
jp
sbb
jl
pop
ljmp
mov
and
loope
pop
add
push
cld
pop
addr16
in
mov
mov
sahf
dec
pop
and
lea
sub
ljmp
dec
test
pop
jl
or
ljmp
cmp
add
jbe
or
mov
aaa
in
mov
jb
outsb
inc
pop
out
fnstcw
inc
dec
in
dec
push
cmp
or
dec
pop
mov
addr16
lds
mov
push
fstpl
outsb
mov
test
mov
pop
xchg
mov
and
ds
mov
dec
data16
mov
rcll
in
push
out
stc
jp
push
cli
mov
pop
xchg
ret
sbb
fwait
push
test
mov
arpl
sti
das
pabsw
adc
or
mov
js
push
shrb
dec
xor
mov
dec
int3
pmaxsw
xor
push
or
xchg
das
jle
test
cltd
cmpsb
loopne
int3
or
in
mov
popa
xor
or
cmpsb
mov
aad
icebp
cmc
insl
jle
pop
xchg
xor
jp
jo
test
mov
insb
rorl
mov
mov
xor
es
xor
repz
jle
sbb
mov
lods
mov
popa
xchg
pop
inc
and
pop
and
hlt
and
out
in
aaa
inc
pop
and
out
adc
dec
sbb
pop
inc
inc
mov
dec
fucomip
dec
jl
xchg
lods
ja
or
push
ss
push
inc
pusha
jmp
pop
jmp
cld
inc
testl
push
dec
pop
and
bound
cmc
ja
jno
sub
xchg
cmp
xchg
cmp
pop
stc
ficomps
mov
dec
sbb
mov
and
push
lret
mov
sbb
daa
inc
arpl
and
enter
lcall
test
popf
jbe
sbb
adc
icebp
aaa
rolb
jnp
dec
mov
int
adc
scas
repz
or
xor
sub
pop
mov
cs
xor
into
fisttpl
dec
push
bound
lock
cmp
inc
lods
outsb
sahf
inc
les
push
xchg
mov
mov
mov
cmp
mov
addr16
jno
ds
out
jae
pop
push
ficoml
inc
mov
lret
lcall
idivb
les
fwait
or
xchg
cmp
std
dec
sbb
mov
outsb
pop
aaa
mov
push
fnstsw
repz
dec
dec
stos
inc
add
dec
inc
in
lock
push
bound
icebp
dec
sahf
out
dec
cmpl
jmp
xor
pop
dec
jmp
cmp
ja
lock
push
xor
jge
push
jecxz,pn
or
aad
mov
js
inc
aam
sbb
imul
leave
cmp
sub
pop
ljmp
pop
stos
mov
inc
imul
pop
xchg
subb
cmp
mov
pop
adc
fcoml
sub
enter
aaa
notb
cmp
cltd
mov
xchg
add
fldl
jle
xchg
lods
mov
test
stc
loopne
cmpsl
lods
sbbb
ret
jnp
insb
mov
decl
xor
lret
cmp
lret
mov
inc
int
sub
das
xlat
push
lods
cmpb
cld
sti
mov
sbb
cmp
dec
jge
cmp
lea
xchg
dec
outsl
test
fistpl
addr16
repnz
mov
pop
fs
stos
shll
shlb
inc
mov
sbb
fisubs
lods
sahf
or
mov
add
movsl
out
jecxz
mov
jbe
add
insl
pusha
or
pop
in
sar
nop
out
sarb
stc
enter
mov
and
cmpsb
and
xchg
pop
cmp
jp
ja
loope
pop
lock
mov
push
lea
sbb
mov
imul
setl
lea
xor
cmc
into
ss
in
movsb
mov
pop
pop
clc
pop
mov
pop
sub
mov
pop
xor
ss
mov
push
adc
jno
loop
icebp
pop
test
out
in
mov
cmp
push
std
inc
mov
and
popf
xor
push
mov
adc
daa
pop
fs
subb
rcrl
inc
mov
mov
aam
xlat
icebp
cmp
adc
xor
test
sbb
loopne
pop
jb
push
mov
mov
mov
push
cmp
jo
mov
lods
std
repz
add
cmp
enter
repz
mov
xor
stos
push
js
fsubs
addr16
shr
sarl
inc
mov
in
pop
mov
rcrl
aad
add
test
jb
cmp
popa
sbb
mov
xchg
add
pop
aaa
cmpsb
icebp
jbe
pop
sbb
fcomi
mov
sbb
ljmp
jno
sbb
mov
push
in
push
fsubrl
sub
lcall
xor
pop
loope
and
aaa
and
cld
pop
or
and
push
cmp
cmpsb
outsb
pusha
scas
inc
mov
mov
cmp
cmpsl
push
xlat
sub
movsb
jle
data16
addr16
stos
rolb
dec
outsb
out
push
lods
dec
jb
sub
inc
push
pop
add
jl,pn
xchg
mov
hlt
push
inc
mov
int3
sub
mov
out
or
out
ja
xor
popf
aaa
pop
jne
cli
pop
cltd
inc
add
testb
fwait
roll
icebp
sub
in
clc
push
bound
ss
enter
dec
pushf
dec
pop
xchg
mov
or
jecxz
fildll
mov
shrb
jl
into
and
aaa
mov
fsubrl
rol
jle
xchg
jnp
xor
add
sbb
enter
dec
mov
dec
push
inc
add
pop
adc
js
add
fsub
lock
adc
mov
out
mov
xor
mov
push
lret
dec
icebp
rcl
and
sbb
ss
jb
inc
adc
jns
cs
jno
mov
popf
cwtl
xor
lock
add
cmp
mov
fcompl
loopne
ja
scas
cmpsb
jb
repz
repz
sbb
mov
cmp
cmp
in
xor
out
cmp
adc
dec
bound
dec
stos
jmp
mov
lods
fwait
sbb
cmp
aaa
dec
push
fdivrs
jle
adc
mov
xorb
lds
pusha
fisttpll
add
bound
push
lret
cli
lock
in
out
mov
pop
incb
inc
scas
rcll
enter
jle
jnp
fildl
andl
sbb
or
insb
mov
iret
sub
mov
pop
sbb
fs
xor
or
inc
mov
negl
xchg
jle
xlat
mov
sbb
mov
xchg
add
jl
popa
pop
cmp
stos
lds
ljmp
in
jg
mov
mov
cli
ficoml
jg
cmp
dec
mov
lahf
incb
add
pop
mov
or
test
je
fsubrs
xlat
dec
xor
sub
push
or
adc
jne
movsl
mov
xchg
dec
jle
insl
outsl
mov
jnp
lcall
and
xchg
mov
sub
inc
jge
aas
cmc
ret
or
cmp
pop
imul
pop
sbb
mov
sbb
sub
pop
mov
pop
in
pop
in
fcmovne
dec
test
mov
fists
scas
es
or
pop
es
add
or
gs
sbb
ljmp
xchg
sbb
xchg
sub
xlat
out
rol
jns
push
dec
push
mov
roll
xor
out
mov
stos
mov
mov
sub
pop
aam
jle
xchg
push
adc
pop
arpl
scas
fdivs
repz
adc
out
xchg
faddl
and
lea
sub
or
popa
mov
daa
aad
ss
clc
stos
jnp
cltd
push
shll
adcb
pushf
jb
dec
sahf
mov
ds
or
push
enter
cmpsb
idivl
ss
cltd
test
adc
pop
dec
dec
cmp
rorb
imul
cwtl
add
popa
cmpsl
push
pop
addr16
out
push
mov
or
std
je
xchg
in
ret
scas
mulb
test
adc
or
cld
mov
or
insl
lock
add
jle
cmc
ss
out
sbb
mov
in
and
mov
out
mov
arpl
inc
aaa
cmp
inc
es
jno
in
std
dec
push
or
or
xchg
pop
xor
mov
inc
stos
std
jl
insl
pop
mov
mov
xchg
in
add
push
sbb
push
add
ret
mov
aaa
mov
inc
push
call
lret
adc
data16
add
push
pop
cmp
fsubrs
testb
aaa
aam
sti
scas
repz
cwtl
dec
dec
or
paddq
sbb
cmp
sbb
pusha
adc
insl
repnz
pop
fcomip
cmc
out
jge
mov
inc
movl
out
cs
shl
ja
inc
or
fs
insb
adc
xchg
into
js
rorl
mov
fstpl
out
push
cmp
push
dec
repnz
xchg
dec
cmpsb
pusha
aam
and
test
fisubs
bound
or
adc
mov
ljmp
cmp
clc
inc
mov
jg
jecxz
add
fninit
mov
loope
sub
das
jne
aaa
jmp
push
fwait
call
xor
dec
inc
mov
add
leave
dec
cmpsb
sbb
pop
push
mov
and
iret
cld
dec
test
dec
popf
mov
in
sbb
aaa
xchg
add
movsb
mov
popa
ret
xor
push
xchg
loopne
aaa
xchg
cld
into
cmp
sub
pop
scas
xchg
adc
aad
pop
mov
mov
fisttpl
mov
out
adc
aaa
adc
pop
and
lret
xchg
inc
pop
leave
imul
iret
jns
pop
cmp
loope
fiadds
inc
cmp
je
mov
testb
dec
jl
test
test
inc
jbe
ror
call
pop
cmpsb
pop
leave
lret
bnd
cmp
nop
cwtl
imul
imul
sub
mov
sub
sbb
fsts
and
xor
or
or
neg
aad
dec
xchg
xchg
adc
ret
mov
cmp
or
ret
fldt
fs
mov
dec
std
int3
aad
cmp
sti
test
test
sbbl
and
repnz
lods
push
dec
pop
aaa
xchg
movsb
sbb
mov
and
scas
dec
xor
xor
inc
jecxz
xchg
mov
sub
dec
hlt
lock
mov
test
dec
sub
int
jo
out
push
fstpl
fldenv
fildll
xchg
stos
fcmovnu
imul
stos
int3
sahf
stos
cltd
out
lea
fnop
adc
adc
rcrb
shrl
push
push
out
pop
adc
in
stos
adc
jmp
sbb
lock
fstpt
sbb
push
inc
jbe
push
sbb
push
mov
sahf
gs
xor
in
and
mov
and
addr16
mov
jno
repz
sbb
pop
icebp
cmpsb
subl
sbb
ret
xchg
movb
cmc
dec
fistpl
mov
pushf
mov
mov
icebp
dec
out
loop
jp
int
push
mov
jp
xor
mov
ja
ljmp
push
and
inc
decb
enter
aaa
sbb
xor
cmpsb
push
lds
mov
in
cmc
sbb
push
mov
xor
decb
in
into
jns
idivb
cmp
leave
test
or
inc
adc
mov
leave
imul
fsubl
sbb
adc
mov
mov
lcall
loop
push
jp
fldt
sbb
aaa
mov
inc
scas
adc
pop
sarb
cmp
lcall
stos
imul
popf
and
lea
and
stos
xchg
stc
dec
inc
loop
pushf
jecxz
outsl
mov
std
pop
pop
imul
dec
push
jb
aaa
mov
loop
sub
cmp
pop
xchg
sbb
sbb
cmpsb
lds
test
xor
decb
pop
mov
lret
loope
arpl
arpl
xor
push
out
test
leave
in
mov
das
or
cld
into
mov
aaa
jb
out
popf
in
inc
mov
sbb
addr16
pop
adc
out
jmp
inc
stc
popf
jge
mov
ficoms
rcl
cld
push
sbb
cmp
lret
inc
adc
arpl
pop
js
data16
inc
jp
scas
add
inc
mov
js
dec
shrb
notb
bnd
push
xor
jo
dec
ja
addr16
or
jb
sub
gs
fsub
out
out
out
pop
push
negl
bound
adc
data16
add
scas
aas
fdiv
pop
pop
lods
mov
sbb
dec
and
es
insl
sbb
or
jnp
inc
fdivs
fists
lret
xchg
sti
das
pop
adc
imul
inc
stc
out
dec
adc
add
ret
and
pop
push
mov
es
mov
xchg
push
pop
and
je
inc
adcl
mov
lods
jb
dec
nop
loopne
fisubrs
and
stos
mov
push
test
mov
daa
inc
stos
mov
adc
repnz
or
cmpsb
imul
aaa
cmc
mov
or
movsb
xchg
pop
add
mov
shlb
mov
rolb
or
stos
cmpsb
xorb
je
bound
rol
xor
jle
aad
ds
loop
outsl
xchg
mov
and
mov
pop
sti
dec
mov
jl
or
jns
rcrl
pop
ficomps
jno
add
cmp
sahf
or
cli
imul
fnstcw
jbe
aaa
dec
jae
push
test
push
pop
push
test
pusha
sbb
add
loop
shll
imul
push
xchg
nop
fs
jns
inc
push
outsb
test
scas
test
add
in
loope
mov
cld
push
js
ljmp
cmc
adcb
lahf
push
inc
cltd
leave
adcb
pop
aaa
jp
push
sbb
mov
fiaddl
sbb
jg,pt
sbb
and
test
jle
push
mov
jg
and
mov
mov
add
out
lret
xor
bound
imul
aam
mov
xchg
adc
sbb
sbb
pusha
and
leave
movsl
pop
daa
enter
push
jg
sbb
mov
mov
outsb
in
pop
inc
and
arpl
in
stos
add
jns
into
push
cmc
jmp
aaa
int3
outsl
insb
aam
or
pushl
xchg
mov
inc
pop
and
arpl
ljmp
inc
sub
xchg
push
subb
pop
jmp
inc
pushf
and
jle
mov
bound
push
inc
imul
xor
lods
inc
cld
out
jge
push
add
inc
hlt
pop
mov
bound
dec
dec
cltd
icebp
push
and
and
pop
add
inc
arpl
into
scas
jne
sbb
mov
push
pop
call
cwtl
lods
cmp
inc
add
test
aam
xchg
mov
ds
nop
mov
arpl
insb
xor
xchg
ret
sahf
outsb
inc
push
mov
sub
ficoml
je
js
mov
ja
mov
js
cmp
popf
adc
incb
in
sbb
repnz
cwtl
cmpsl
bound
iret
sbb
xor
mov
dec
push
aam
jb
dec
punpckldq
sbb
jmp
pushf
push
in
sub
enter
jge
aaa
aam
lcall
and
in
and
fs
stc
mov
mov
dec
bound
mov
call
or
cmpsb
mov
cmp
mov
pushf
sbb
shrl
rcr
sti
dec
xor
mov
dec
ret
lcall
das
mov
arpl
xchg
in
and
cmpsl
cmp
sbb
ret
ss
dec
pop
jecxz
in
cli
jb
sti
or
push
and
mov
push
dec
insb
nop
dec
stos
mov
sbb
mov
jmp
roll
cltd
fcompl
shrl
jns
xchg
es
fs
in
loopne
lds
lcall
test
adc
in
pusha
mov
jmp
jge
fwait
lahf
imul
mov
cld
dec
cmp
scas
and
mov
add
mov
or
inc
or
and
jp
adc
data16
xor
ds
or
fidivs
icebp
add
pusha
fcoml
cltd
xchg
leave
shll
iret
mov
pop
fadd
xchg
mov
mov
push
imul
int
push
repnz
jb
aaa
flds
mov
push
or
popf
ss
ficomps
and
sbb
jae
sti
add
sub
rcl
jo
das
mov
push
icebp
and
sbb
jge
cmp
jge
inc
lods
jecxz
jle
jno
pusha
pop
repz
add
mov
repnz
ja
sbb
pop
jl
fcoml
mov
ja
cwtl
je
sbb
mov
ss
aad
mov
mov
pop
jnp
cltd
sbb
pop
sub
lahf
xor
lods
aaa
adc
out
pop
dec
add
cwtl
ret
jbe
movsb
jmp
sti
imul
pop
mov
inc
ja
jb
mov
ret
ds
fidivrl
aaa
mov
leave
imul
xchg
push
push
sbb
je
dec
inc
mov
iret
mov
dec
mov
pop
mov
xchg
mov
inc
cmp
ret
mov
jb
jb
das
pop
jp
or
xchg
cmp
jns
call
and
pop
xchg
inc
sub
cmc
imul
inc
sbb
sbb
cmp
xor
sub
test
shrl
in
and
mov
or
pop
stc
mov
jbe
adc
fcompl
add
cmpl
mov
stos
imul
and
mov
xor
outsl
imulb
or
jle
pushf
cld
fdivrl
fistpl
jbe
push
mov
insb
jg
sbb
jle
jno
clc
dec
mov
or
test
dec
jbe
pop
arpl
adc
and
dec
sub
add
sub
in
pop
les
push
mov
scas
call
mov
cmp
and
inc
mov
jecxz
jle
mov
mov
lret
repz
cmp
dec
in
aas
mov
dec
add
pushf
ret
ds
aas
lret
loopne
dec
add
sub
clc
jb
and
cmp
sub
movsb
or
xor
pop
insb
push
aaa
icebp
mov
push
cli
aam
dec
pop
icebp
push
popa
push
sbb
es
bound
lea
loop
jo
testb
pop
sar
ficompl
cmp
mov
or
nop
mov
pop
lods
in
xchg
or
xchg
mov
push
mov
push
pop
aas
dec
cmpsb
pop
mov
adc
int
insl
loope
jl
outsb
loope
fists
arpl
inc
pop
fcmovnu
iret
sub
bound
or
insb
cs
in
dec
in
inc
test
fidivrl
lret
mov
add
pop
jno
test
add
jae
mov
ret
sbb
in
addr16
inc
adc
in
icebp
inc
push
pop
lods
sbb
add
mov
or
aaa
sub
fucomi
sahf
adc
pusha
cltd
testb
leave
pusha
mov
dec
dec
xor
in
stos
out
addr16
movsl
stos
ror
sti
mov
inc
aaa
movsl
fs
xchg
push
loope
pop
stos
add
push
dec
mov
push
jl
lret
lcall
rolb
iret
or
mov
dec
fimull
std
icebp
adc
mov
movsl
aaa
mov
pop
aam
mov
orl
call
push
and
shrl
rolb
pop
mov
fprem
jb
push
pop
insl
dec
jo
cld
shll
aas
jecxz
sub
sbb
rclb
cmp
rolb
pop
pop
pop
sbb
pop
rolb
jo
jae
cmpsl
mov
pop
lods
xchg
addr16
mov
aaa
push
mov
dec
lods
icebp
cmp
push
lret
dec
cmp
test
sarl
movsl
and
pop
cmp
aaa
jo
lock
vcvtpd2ps
inc
push
jae
mov
data16
mov
outsb
and
inc
pop
stos
push
push
adc
sbb
sub
sub
repnz
popa
adc
test
sbb
sbbb
cmp
mov
dec
ror
cmp
xor
addr16
jbe
outsb
add
testl
sbb
imul
xor
insb
lea
iret
push
push
enter
sbb
loope
push
mov
pop
mov
pop
popf
push
repz
out
mov
jb
aaa
xor
cmpsb
iret
dec
or
cmp
inc
add
jmp
mov
mov
inc
test
pop
in
dec
imul
jle
and
cmp
subb
cmp
jl
ficomps
jbe
stos
push
dec
mov
movsb
repz
mov
jne
sahf
mov
aaa
jg
notl
sbb
sub
and
cmp
sbb
and
push
push
scas
sub
mov
cmp
ss
jne
bound
cmp
ret
pusha
dec
aas
inc
in
out
fdivl
jne
dec
mov
push
addr16
inc
or
out
rol
andl
xor
sbb
das
aam
fcompl
and
mov
push
mov
pop
stos
scas
xchg
pushw
jo
mov
mov
sub
popl
pop
cmpsb
cmc
sbb
int
sarl
push
shlb
loope
test
push
xorb
pop
jns
adcb
xchg
repz
sbb
pushl
jbe
imul
mov
addr16
jp
and
andl
fcoml
adc
cwtl
fisttpl
and
pop
icebp
test
pop
pop
ret
and
pop
repz
cmpsb
dec
cs
test
cmp
nop
leave
stos
inc
and
sbb
mov
jp
xchg
xchg
test
lret
xor
fstpl
sbb
outsl
mov
adc
inc
loope
mov
bound
cmp
fs
dec
inc
call
inc
cmp
lahf
push
adcl
jle
push
data16
mov
pop
es
outsb
insb
mov
scas
jmp
or
dec
outsb
ret
hlt
lcall
xchg
jg
push
inc
mov
outsl
fwait
sahf
push
adc
xchg
adc
out
movsl
fdivs
push
dec
mov
mov
fldt
andl
in
outsb
mov
push
ja
out
or
mov
fmull
and
icebp
xor
sahf
cld
mov
cs
in
xchg
inc
push
aaa
cmp
mov
in
fidivrs
sbb
pop
in
movsl
lahf
pop
negl
xchg
push
mov
dec
in
sbb
pop
pop
aas
push
into
push
push
mov
rcll
dec
shl
xor
push
ljmp
pop
mov
int3
push
pop
jno
je
imul
inc
cmp
mov
mov
stos
mov
xchg
mov
mov
adc
rcrl
and
loope
xor
cmp
loopne
mov
dec
dec
pop
jbe
in
pop
imul
rorb
ss
lahf
add
xchg
aad
loop
dec
insl
ds
jecxz
loope
jns
xchg
int3
pop
fstpt
dec
mov
jge
inc
xchg
inc
stc
mov
aaa
ret
xlat
push
mov
and
sub
mov
jne
add
js
aad
push
popa
push
stc
adc
mov
push
dec
sbb
sub
mov
mov
imul
push
stos
mov
sub
inc
dec
xor
pusha
paddsb
sbbb
roll
pop
xlat
mov
les
fwait
add
mov
or
test
dec
push
lret
inc
add
data16
push
rorb
xchg
jb
repz
outsb
gs
push
sbb
shrl
aam
cmp
lret
cmc
xchg
jle
pop
or
das
xlat
jno
arpl
inc
pop
sarl
push
js
jne
and
fiadds
fldt
jb
sub
jg
repz
mov
test
dec
push
mov
xorb
push
pop
aaa
sub
mov
rcrl
pop
or
mov
jecxz
outsb
jp
js
scas
cmpsb
cmp
mov
pop
lcall
xchg
inc
lret
and
shlb
insb
push
mov
mov
ret
add
rcrl
leave
dec
ja
movb
jae
jbe
jno
dec
sub
shr
mov
xchg
jae
loopne
aaa
lret
fs
jne
scas
jno
mov
dec
mov
mov
jns
outsb
cmc
sahf
scas
roll
pop
jmp
jp
fcompl
movsl
and
mov
or
xchg
mov
imul
mov
sub
mov
xchg
inc
xchg
xchg
mov
stc
inc
xor
xchg
stos
jo
mov
or
and
outsb
sbb
inc
loope
lret
push
mov
arpl
sbb
insb
push
mov
insl
jb
adc
lret
lods
xor
movsb
orb
xor
sbb
mov
out
arpl
xchg
sub
shll
mov
aaa
rcrb
cld
pop
dec
mov
cmpsl
iret
fildll
sbb
xchg
iret
push
cmp
jo
fdivrl
es
sbb
push
sarb
pop
scas
pop
lret
stos
xchg
aaa
sub
sub
jl
pop
cmp
push
testb
ja
or
jg
xchg
push
dec
outsb
fwait
enter
pop
rcrl
dec
cltd
jle
fwait
sbb
cld
aaa
and
xchg
xchg
xor
mov
dec
jno
ss
push
fxch
movsl
inc
dec
sub
jle
pop
or
dec
pusha
adc
and
cmp
clc
cltd
sbb
jl
jns
xor
add
adc
mov
nop
fistps
inc
loope
dec
ds
push
mov
cwtl
xchg
lcall
ds
movl
das
sbb
lock
imul
out
pop
fdivs
mov
cmp
push
sbb
sub
add
or
adc
adc
loopne
imul
sahf
out
pop
stos
int
pop
mov
pop
xor
aaa
insl
rclb
test
mov
sbb
inc
popf
mov
or
dec
cltd
push
das
lea
push
sub
js
in
sbb
mov
out
pop
ret
arpl
outsb
add
mov
test
lods
pushf
ja
pushf
fldcw
xchg
or
jl
pop
movsl
into
xor
test
xor
lret
bound
fsub
out
push
pop
add
in
out
jb
cltd
adc
int3
in
insb
and
mov
mov
cmp
fwait
loop
int
aam
test
sbb
out
adc
loopne
and
push
fldt
lea
pop
mov
sbb
stos
jbe
ret
xor
cmp
test
or
int
mov
xor
scas
pop
addr16
cmp
cs
ss
inc
xchg
or
push
ss
mov
add
test
sub
shrb
lods
loope
jp
sbb
fwait
popa
jb
xor
ds
dec
push
push
bound
in
sbb
jae
dec
xchg
jg
push
aaa
fiaddl
insb
jno
and
mov
cs
imulb
cmp
jg
cmpl
xorb
jmp
push
add
jmp
lods
imul
mov
repz
int3
aas
xor
pop
mov
inc
dec
cwtl
push
lods
jno
inc
mov
xchg
add
cmp
test
fmuls
or
fsubrl
loopne
xor
sub
xor
out
push
loopne
jle
scas
sbb
dec
xchg
pop
mov
cs
cmpsb
adc
xchg
mov
test
mov
push
lahf
enter
popf
in
pop
bound
add
adc
jbe
push
in
loope
ds
cmp
xchg
rorb
mov
ljmp
sti
adc
dec
pusha
push
fnstcw
das
and
icebp
inc
outsb
roll
push
sbb
mov
pop
bound
jns
mov
lret
add
ss
and
das
jl
sub
cvtpi2ps
aaa
mov
mov
push
arpl
jmp
inc
incl
enter
dec
mov
xchg
std
push
outsl
outsl
lcall
or
cltd
adc
sbb
daa
sbb
fwait
imul
dec
inc
adc
mov
stos
mov
pop
mov
mov
aas
push
aas
push
sbb
lcall
loopne
inc
sub
dec
adc
xchg
cmpsl
pop
jmp
shlb
aas
outsb
sbb
scas
xchg
cmp
and
adc
mov
das
cmovnp
inc
loopne
push
adcl
aaa
pop
jecxz
and
mov
sub
pop
sub
add
nop
xchg
ds
cltd
jno
mov
or
pushl
repnz
mov
add
pop
pop
dec
in
jge
cmpsl
push
jb
out
pushf
outsl
rcll
mov
fwait
std
je
in
sbb
mov
add
mov
sub
pusha
sbb
daa
or
ds
enter
jne
icebp
cmp
push
mov
mov
stc
test
or
call
push
add
pop
mov
arpl
outsl
sub
adc
push
mov
pop
aad
dec
mov
neg
cmc
lds
jb
mov
mov
jle
push
popf
adc
cmpsl
arpl
outsl
and
pop
push
jb
push
testl
jmp
leave
cmp
push
cwtl
in
outsb
cmpsb
jp
ja
xchg
lock
lret
mov
lret
pop
call
dec
inc
gs
addr16
mov
ljmp
dec
icebp
sbb
gs
sahf
fimuls
out
sahf
xor
js
adc
jle
std
jmp
insl
out
dec
das
in
ds
loope
sahf
cmpl
and
adc
push
sbb
sub
pop
das
jno
add
jge
cmp
cbtw
jle
and
and
lret
aad
cmc
push
inc
jno
repz
bound
insl
call
loope
sbb
loope
ss
cmpsb
lcall
mov
das
inc
dec
xchg
mov
mov
mov
aas
lret
pop
out
push
outsb
sbb
ja
pop
orl
push
mov
mov
into
mov
add
xor
and
adc
dec
in
jb
enter
mov
mov
repz
jnp
enter
aaa
clc
mov
fdivl
xchg
adc
mov
adc
mov
aaa
xor
xchg
sub
frstor
mov
js
jbe
and
inc
leave
rorl
std
pop
cmp
jbe
cld
std
add
xchg
icebp
xor
pop
movsb
clc
ficomps
mov
sub
push
dec
push
stos
cld
push
push
sbb
add
dec
movsl
pop
ja
mov
mov
jbe
into
lret
mov
lret
cmp
or
popa
pop
jmp
lcall
loop
lock
loopne
adc
js
cmp
repz
or
jno
outsb
stos
dec
nop
fnstcw
movb
mov
arpl
dec
jge
dec
mov
jmp
sbb
scas
fnstsw
inc
sahf
push
pop
pop
mov
pop
push
les
outsl
adc
lcall
cmp
mov
cmovbe
xor
arpl
cs
xorl
mov
repz
loopne
imul
jbe
mov
jno
cwtl
pop
mov
subb
add
fstpt
dec
pop
mov
mov
cmpsl
pop
add
pop
sbb
or
dec
adc
mov
jbe
loop
stos
rclb
int3
mov
adc
out
cwtl
adc
jmp
mov
lret
out
call
inc
cmp
aas
popa
fldl
or
cmp
leave
scas
int3
in
sahf
inc
xchg
shr
pop
sbb
cmp
leave
cmp
jecxz
sbb
rorb
lds
rcll
sbb
js
cmp
cmp
sbb
ds
jl
es
repnz
push
js
cmp
lods
jl
or
cltd
xchg
jne
pop
adc
sub
cld
add
shll
bound
jnp
mov
ds
xor
icebp
mov
das
and
cmp
clc
push
adc
insb
pop
mov
outsl
in
fstpl
or
mov
rcrb
clc
and
push
rcll
pop
hlt
xchg
ja
scas
adc
aaa
xlat
cmpl
xlat
add
cld
jno
arpl
inc
add
add
loopne
push
add
or
inc
subb
mov
mov
test
andl
in
orb
out
ds
xor
fistl
fildll
lea
jo
leave
sbb
repnz
dec
xor
ss
shrb
stc
ja
push
ljmp
scas
fcoms
lcall
sub
dec
adc
fcmovne
mov
sbb
jne
rcrl
jecxz
jp
out
inc
sub
inc
insl
rcl
push
xchg
or
mov
out
sbb
mov
inc
mov
jae
jecxz
out
dec
and
aaa
add
push
sub
pop
scas
and
adc
inc
jno
or
sub
or
lods
ss
aaa
stc
aas
fwait
pop
jb
dec
mov
bound
mov
xchg
jmp
push
sbb
pop
pop
jbe
mov
pop
inc
enter
xchg
ss
xor
scas
inc
les
pop
sahf
loope
lea
fs
cltd
mov
sar
sbbl
sbb
mov
xchg
inc
mov
sub
sub
or
mov
cmp
inc
sub
popa
xchg
incl
mov
pop
imul
dec
or
dec
xchg
test
xlat
cld
pop
cmc
cli
dec
xor
and
jp
push
jl
ss
adc
push
int
sbb
pop
ret
sbb
or
pushf
mov
outsb
lods
jp
scas
loopne
jmp
dec
decb
bound
xchg
aaa
and
pop
in
and
lret
mov
xchg
jns
in
push
jo
mov
sbb
add
and
aad
icebp
adc
notb
call
jle
imul
pushf
mov
jmp
adc
mov
into
sbb
pop
adc
clc
sub
xchg
pop
jp
jb
leave
push
pop
gs
ret
icebp
daa
fistl
jo
xchg
loop
mov
aas
imul
orl
cmp
lcall
mov
xchg
pop
mov
pop
dec
movsb
std
xchg
clc
dec
inc
jge
fnstsw
cmp
jg
out
push
dec
fcomps
mov
pop
insl
ss
pop
push
adc
xchg
shll
sbb
add
push
jl
std
sub
cmp
add
pop
pushf
shrb
sbb
dec
xchg
or
sub
and
xchg
mov
outsb
add
fnsave
push
ds
mov
popf
inc
jno
dec
fstpl
and
inc
dec
repnz
mov
push
and
enter
jle
cli
dec
push
push
mov
jecxz
idivb
sti
mov
jge
stos
sbb
jae
loopne
popf
fdivrs
inc
push
push
dec
sarl
ror
sbb
inc
int3
sbb
imul
stc
push
mov
ret
add
mov
mov
leave
push
jmp
cmpsl
jbe
sub
sahf
push
lcall
inc
mov
jne
arpl
xchg
loop
into
aaa
int3
mov
dec
test
mov
sti
cmpsb
icebp
add
imul
mov
mov
aam
in
fnstsw
or
leave
mov
scas
icebp
dec
gs
fidivrs
pop
xchg
jno
mov
pop
push
arpl
sarl
mov
hlt
js
flds
dec
loope
xchg
sarl
pop
pop
inc
sbb
fsubrs
hlt
pop
outsl
mov
lcall
ret
pop
pop
mov
repz
dec
cmp
jg
xchg
int3
out
jecxz
jg
xchg
aaa
sub
test
cmp
xchg
insl
lret
js
pop
xchg
sbb
arpl
sub
scas
mov
xchg
sbb
out
sbb
fadds
aaa
pop
sbb
mov
cmp
out
add
sbb
add
dec
push
jnp
addl
jle
pop
inc
jne
aaa
or
xchg
cmp
push
sbb
and
out
in
mov
inc
and
pop
pop
pop
and
adc
rclb
mov
lock
out
nop
outsb
fadds
jge
jmp
xchg
jns
pop
mov
push
adc
stc
mov
pop
pop
aaa
cmc
xchg
cmpsb
mov
mov
xchg
cltd
mov
adc
shlb
ficomps
sbb
inc
scas
ret
xchg
sbb
or
test
cltd
inc
jnp
stc
or
dec
sub
dec
jp
inc
shll
xlat
jle
push
xor
testl
sbb
adc
ds
loope
fnsave
inc
push
aam
mov
jnp
fstpl
pop
mov
mov
leave
sbb
sbb
pop
mov
sbb
mov
ss
mov
mov
fstl
jno
jl
sbb
lods
inc
jl
inc
xor
je
cmp
mov
pop
pushf
mov
xchg
dec
ret
aaa
out
cli
loope
mov
or
sbb
xor
icebp
push
pushf
imul
in
mov
add
mull
cs
or
mov
mov
inc
and
sub
mov
jmp
outsl
mov
outsb
dec
pop
xor
pop
sbb
cltd
ret
mov
jmp
push
les
loope
outsb
sbb
jmp
xchg
mov
insl
sbb
pop
pop
in
cltd
fadd
pop
scas
sbb
lods
lods
pushl
push
repnz
dec
jg
cmpsb
xchg
scas
int
pop
enter
push
push
sbb
out
ja
data16
xchg
or
adc
ss
mov
fmul
sbb
stc
cmp
sahf
sbb
push
stos
cmp
out
or
aad
jge
ss
xchg
inc
inc
adc
das
pop
pop
mov
loope
outsl
add
js
jmp
sbb
std
mov
filds
xchg
outsb
fcoms
jnp
jbe
xor
lret
jb
sub
lds
and
fnstenv
sub
inc
sbb
jb
movsb
inc
aaa
lcall
or
xor
into
fcoml
movb
arpl
cld
shr
aam
popf
sub
js
loope
out
sbb
outsb
ret
inc
pop
jnp
mov
add
leave
repz
lret
ss
sti
fadds
outsl
test
pop
stos
push
mov
inc
lret
repz
push
mov
add
push
fwait
jne
gs
data16
test
mov
mov
jg
lahf
test
fidivrl
adcl
mov
test
cmp
xor
pop
test
in
sbb
xchg
dec
gs
cli
movsl
shll
js
xchg
or
in
push
adc
scas
push
pop
adc
test
lcall
cmc
mov
mov
adcl
pop
dec
repz
dec
fwait
iret
cmp
aaa
mov
pushw
jo
sar
repz
inc
and
loopne
aaa
add
int3
mov
cmp
cmp
cld
sbb
cmpsl
aas
out
pusha
mov
jg
mov
out
jbe
xor
sbb
jae
bound
pop
cli
loope
xor
mov
data16
pop
outsl
cmp
cmpl
xchg
pop
pop
cltd
pushf
fisubrs
fsubrl
es
jg
popa
mov
adc
xchg
mov
cs
or
lds
pushf
ss
ret
xor
mov
lods
loopne
pop
sbb
jg
sub
dec
aad
cmpsb
adc
sbb
jg
sub
enter
jne
push
aas
cltd
xorb
scas
pop
sbb
loopne
xor
loop
sbb
loope
repz
mov
ficoms
mov
and
dec
dec
daa
and
fbstp
and
push
ss
cwtl
loop
hlt
sbb
xor
dec
add
xchg
lea
inc
xchg
movsb
jbe
out
into
adc
and
in
das
inc
insb
lret
test
and
mov
push
insb
mov
jo
fimull
sub
lret
and
xchg
jbe
loope
dec
scas
jl
push
inc
mov
outsb
push
push
dec
sbb
shlb
fstp
fcomps
and
cmp
stos
aaa
xor
mov
mov
sub
aaa
adc
jp
movsl
push
lret
jecxz
mov
and
sbb
push
lret
data16
pop
in
adc
cltd
es
fmuls
pop
push
outsb
stos
mov
popa
and
leave
iret
cwtl
aam
add
dec
pop
fcomp
mov
mov
cs
fwait
jb
pop
cmp
push
adc
icebp
test
aas
push
cmpb
jmp
stc
push
rorb
sbb
pop
outsl
stos
test
pushf
jp
arpl
inc
pop
push
mov
fadds
cmp
insb
lock
lret
xor
repz
pop
xchg
mov
inc
sbb
pop
loop
repz
repnz
fdivrl
dec
inc
pop
adc
pop
and
stc
pusha
xchg
pop
xchg
mov
jnp
pop
sub
xor
aam
push
jbe
sub
daa
dec
jne
stos
add
inc
jge
add
jecxz
mov
xorl
add
lret
inc
add
mov
sbb
or
sbb
call
push
mov
xor
sbb
sub
pop
movntps
sub
xchg
ficoml
cmpsl
into
stos
mov
fisttpll
adc
repz
inc
fdivr
cmp
and
sahf
push
in
js
sbbl
outsl
xchg
out
fdivs
xor
clc
push
dec
xchg
xchg
mov
mov
sbbb
cld
cmp
arpl
stc
pushf
mov
and
push
jecxz
shrb
aas
mov
sub
cmpsl
mov
cmp
cld
mov
cmp
adc
jl
pop
pop
shll
cltd
mov
stos
sub
pop
xor
mov
cs
push
adc
out
adc
jg
in
std
out
mov
or
or
fldl
xchg
cmp
and
fst
pop
jo
in
lret
outsl
test
sbb
xor
repz
incb
xchg
jp
push
fwait
loop,pt
push
popa
stos
mov
pushf
inc
push
cltd
ss
mov
inc
test
sar
add
mov
jg
les
int3
out
mov
push
mov
pop
pop
arpl
stc
rclb
fimull
sbb
aas
adc
add
mov
and
lods
je
mov
push
dec
sub
push
pop
pusha
shll
xlat
lret
js
out
idivb
outsl
lahf
int3
aas
push
inc
aaa
in
mov
mov
popf
inc
adc
ret
xchg
js
pop
icebp
sub
mov
and
adc
cmp
popa
scas
sbb
out
push
or
or
mov
aaa
inc
sbb
and
pop
jb
movsb
fildll
cmp
sub
repnz
sub
jno
mov
cli
in
mov
push
push
mov
xchg
int3
mov
stos
mov
sbb
loope
pop
mov
lcall
xor
jnp
fsubr
lods
pop
mov
je
mov
cwtl
addb
call
cmp
inc
add
rcrl
fnsave
xchg
inc
push
stc
in
adc
mov
scas
outsb
push
dec
aaa
sti
cmc
mov
in
mov
fs
cltd
sub
mov
stos
orb
xor
or
or
movsl
test
sbb
test
mov
pop
jbe
xchg
pop
repnz
inc
insb
sbb
adc
xor
cmc
or
cmp
sbb
lds
sbb
add
in
gs
jno
lret
out
ljmp
arpl
repz
inc
ss
pop
jno
aaa
insl
xor
and
push
cld
call
xor
sti
repz
fnsave
push
testl
iret
add
sbb
jno
shlb
enter
js
rcr
sbb
enter
ljmp
dec
and
sbb
es
lock
push
mov
xchg
push
rcrb
aaa
jno
clc
cmc
jne
mov
in
dec
jo
pusha
loope
pop
idivl
mov
xchg
pop
sbb
imul
xchg
mov
mov
ds
dec
mov
jl
test
test
aaa
in
lods
jae
jmp
jmp
sbb
in
outsb
pop
shll
and
sbb
jae
adc
mov
cltd
mov
xor
stc
cmp
in
push
mov
fsubrp
adc
cmp
outsb
push
push
pushf
cwtl
and
sbb
mov
mov
rclb
lret
xchg
add
mov
xor
mov
aad
cmpsb
int
add
outsb
pop
or
and
js
push
inc
pusha
cld
xchg
and
jb
mov
sbb
js
cmp
call
adc
pop
popl
pop
inc
gs
pop
shr
pop
mov
movsl
out
and
subl
out
sahf
mov
daa
dec
sti
rcrl
scas
sub
lea
and
stos
inc
ret
cmp
leave
sub
scas
sahf
cltd
cmp
pop
jge
add
dec
xchg
cmp
clc
in
pop
sbb
int3
shlb
jae
cmp
add
inc
dec
or
pop
and
outsl
aam
stos
imul
xchg
aam
pop
dec
and
mov
ret
dec
sub
movq
cmpsl
mov
test
sbb
je
call
sbb
jmp
mov
fisttpl
inc
and
sbb
fildl
insl
xor
cld
std
rcr
dec
out
push
gs
sub
aaa
xchg
mov
cmp
lahf
test
fwait
mov
pusha
fchs
xchg
add
and
push
cmc
aaa
mov
jg
into
dec
mov
sbb
cltd
loope
pop
fwait
inc
rol
data16
jns,pn
lret
xchg
jbe
js
add
push
shlb
fldcw
aaa
push
in
mov
aad
outsl
cmp
and
lret
cli
inc
or
fstp
push
push
lds
loopne
sub
insb
add
test
or
add
jne
ljmp
aaa
cld
das
pushf
dec
pop
cmp
dec
int
sbb
dec
std
ds
cmp
addr16
icebp
push
pop
mov
jecxz
mov
outsl
and
xor
sbb
int
sbb
in
aam
push
lcall
push
sbb
mov
mov
jge
hlt
in
cmp
push
ljmp
loope
lret
add
inc
ficoml
int3
pop
pop
mov
inc
fbstp
adc
outsb
pop
xchg
dec
push
inc
adc
dec
fdivr
mov
dec
cmpsl
ss
dec
dec
xchg
in
sbb
cltd
ret
ffree
dec
jmp
pop
in
popf
xchg
inc
pop
mov
fwait
mov
pop
shlb
mov
mov
out
addr16
inc
dec
sub
mov
nop
sahf
fnstenv
xor
test
aaa
mov
rolb
lds
je
dec
dec
popa
inc
push
push
fldenv
pop
mov
lock
in
ffree
inc
mov
mov
lret
sub
cmp
fstl
fsubrl
mov
and
adc
imul
orb
cs
leave
cmc
xor
shl
jbe
mov
add
std
outsb
jle
or
dec
mov
loopne
pop
jg
inc
pop
addr16
cli
data16
in
sahf
or
popf
push
insb
xor
ret
sbb
lods
dec
push
rcll
movsl
push
fcomps
js
push
adc
movsl
adc
cmp
push
and
imul
jbe
jmp
hlt
add
mov
mov
sbb
pop
and
mulb
push
adc
cltd
scas
push
movsl
xchg
and
stc
imul
cmp
data16
mov
es
sbb
scas
sub
movl
aas
and
aaa
xchg
fstpt
and
mov
psubsw
mov
jg
pop
fstpl
outsl
cmp
xlat
ror
and
cwtl
mov
xor
lods
in
nop
faddp
adc
and
mov
xchg
fisubl
roll
add
inc
jae
mov
imul
mov
push
push
nop
fsubrs
stos
icebp
fcmovnb
stos
dec
cmpsb
pop
out
and
sub
cltd
mov
outsb
loopne
mov
mov
jge
inc
incb
mov
xor
cmp
test
imul
icebp
xor
sbb
and
outsl
clc
loop
into
xor
jb
out
push
rcll
cmp
mov
add
les
in
insl
loope
cmp
inc
sti
sbb
clc
sub
js
jne
push
sar
mov
scas
lcall
pop
arpl
aaa
mov
pop
insl
repz
lcall
cmc
ja
test
sub
add
insb
mov
inc
or
xlat
inc
sub
cmp
ficompl
rcrl
inc
pop
mov
jnp
and
jno
jns
std
imul
mov
jle
cmpsl
push
pusha
mov
pop
jge
pop
bound
add
and
pop
mov
mov
xchg
das
sub
sub
jl
jo
ds
jb
push
pop
mov
div
lret
ss
dec
sahf
negb
movsb
pop
insl
daa
and
imul
icebp
sbb
push
aas
stc
subb
jp
incb
jb
pop
mov
cmc
into
jle
pop
es
push
jl
cmp
in
pop
adc
fs
jo
dec
es
repz
std
mov
sub
add
inc
push
scas
push
or
movsb
xchg
cmp
jno
or
insl
ds
test
mov
jl
daa
sbb
repz
jnp
insb
mov
aad
mov
cmp
jp
ret
sub
push
jno
fisubrl
cmp
mov
bound
cmp
imul
call
bound
hlt
push
jmp
mov
pop
pop
cmp
adc
xor
insl
sarb
ss
loopne
ficoms
loop
ja
shrb
push
mov
int3
xchg
cli
push
sahf
ret
int
out
std
add
into
jno
ret
sbb
loopne
or
aas
in
int
dec
or
scas
mov
in
imul
jmp
mov
jg
ja
cli
es
push
ret
outsb
mov
jle
stc
aad
cmp
mov
addr16
xor
cmp
mov
fcmovnu
lahf
enter
insb
iret
push
adc
push
add
and
sahf
in
dec
sti
adc
incl
mov
pop
cmpsb
sbb
jmp
xchg
cmp
xor
mov
dec
in
push
std
add
add
fsts
lods
test
push
in
fidivrs
jo
stos
imul
xlat
pop
outsl
xchg
or
pusha
mov
sbb
mov
mov
dec
ja
lahf
xchg
sub
dec
sub
out
mov
jecxz
test
fidivl
inc
loope
cmp
aaa
enter
cmp
movsl
adc
or
xor
into
out
movsl
mov
mov
or
add
cmp
dec
push
idiv
pushf
sbb
repz
jns
imul
inc
movsw
push
sbb
fcoml
int
add
sbb
iret
fisubl
dec
dec
push
adc
dec
jbe
xchg
or
adc
cltd
mov
mov
xor
mov
in
insb
xor
fisubs
iret
sub
dec
call
pop
mov
pop
lods
out
cmp
jecxz
xchg
sti
lret
pop
add
lret
sti
rcrb
xor
jl
pop
into
add
cmp
aaa
or
cmp
test
xchg
lds
dec
outsl
fsubrl
shrb
mov
test
popf
push
jnp
cwtl
cli
adc
xor
xlat
bound
ficompl
movsb
jg
mov
popf
adc
add
pop
mov
mov
inc
mov
inc
fisttps
pop
fstpl
bsf
aaa
rolb
mov
add
gs
mov
adc
test
dec
ret
je
push
pop
loope
jnp
sbb
pop
jns
pop
cltd
jge
loop
push
sbb
jmp
inc
cwtl
in
cmp
in
xor
mov
in
sub
rcr
movsl
pop
jae
fnstcw
sub
jge
lret
inc
jecxz
popf
out
nop
jmp
pop
fstp
dec
bound
out
and
push
add
in
xor
dec
sahf
cwtl
dec
sbb
push
ss
pushf
addr16
add
inc
bound
and
push
testl
pop
mov
and
or
mov
jne
clc
rcl
push
push
sub
insb
lods
out
xchg
pop
fnstsw
fwait
mov
mov
xor
pop
movsb
clc
mov
jnp
cld
mov
xorb
loopne
pop
inc
xchg
in
jb
push
dec
sub
icebp
adc
xchg
xor
leave
xchg
test
in
jp
into
in
or
mov
jb,pt
test
jno
js
adc
orb
cltd
sub
or
push
lret
fidivs
or
daa
push
jmp
cmp
std
jge
pop
mov
push
push
mov
pushf
data16
dec
sahf
stc
pop
lret
pop
testl
cmp
add
lret
xor
lea
sbbl
mov
ss
mov
mov
jb
imul
xor
jg
sbb
push
mov
shl
in
in
add
cmp
push
mov
jns
pop
and
ljmp
sbb
push
inc
stos
push
adc
loop
shlb
cmpsl
push
rorl
pop
mov
xchg
shll
mov
xor
adc
pusha
mov
shrb
lods
pop
jb
jne
aad
daa
cmpsb
inc
xchg
or
cwtl
adc
xchg
daa
out
aaa
movsb
mov
push
hlt
push
popf
inc
jo
sub
mov
cmc
pusha
sbb
mov
enter
in
mov
or
repz
dec
mov
sar
mov
pop
push
pusha
cmp
cwtl
das
sbb
mov
mov
ret
imul
xchg
in
pop
and
aam
add
repz
outsl
mov
loop
jbe
enter
sahf
ret
fadds
dec
leave
in
jbe
pop
ss
mov
xchg
stos
inc
add
mov
fistps
mov
icebp
gs
cld
adc
sub
push
lret
sahf
xor
pop
addb
aaa
add
pushl
ds
xchg
hlt
pop
push
mov
or
push
cmp
aaa
mov
dec
sarl
movsl
dec
cmp
pop
push
or
loopne
pop
or
popf
ljmp
cmp
nop
pop
fcomi
ret
aam
loope
dec
mov
xchg
rol
shll
int
xchg
pop
and
in
sbbl
in
xlat
aas
mov
pop
mov
push
out
ss
mov
add
adc
dec
icebp
mov
fstpt
imull
sub
loope
lea
mov
lods
dec
mov
pop
ds
push
jbe
lock
in
mov
inc
and
push
cld
jmp
stos
jbe
sub
into
mov
outsl
jo
pop
addr16
mov
sub
loopne
cmp
xchg
adc
inc
push
in
xor
scas
push
cltd
mov
adc
int3
pop
fistpl
cltd
lea
cmpb
sar
stos
pop
nopl
mov
movsb
sbb
fldcw
pop
jae
sub
dec
scas
bound
xor
xchg
ret
sub
mov
pop
inc
test
mov
lahf
mov
mov
inc
adc
ficoml
cltd
mov
push
ljmp
sbb
repz
mov
adc
sbb
adc
mov
inc
or
je
loope
aaa
sbb
sub
pop
enter
negl
lret
push
lea
insl
fisttpl
dec
std
outsb
fnstcw
inc
dec
push
add
outsb
cltd
pop
ss
frstpm(287
hlt
decb
pop
add
lea
or
ljmp
jo
bound
repz
icebp
cld
out
ret
push
repnz
cmp
sub
je
popf
sub
pop
nop
ljmp
ss
mov
daa
stc
in
jne
pusha
and
imul
mov
aad
loop
aaa
das
cmp
jmp
rolb
stos
and
aas
ljmp
sbb
xchg
imul
jb
incb
bound
movsl
pop
push
jbe
pop
out
outsb
sbb
cmp
iret
or
aaa
nop
and
mov
repz
mov
aad
xchg
leave
dec
cmp
les
out
xchg
fcmovb
in
add
xor
test
cmpsl
sahf
inc
adcl
jb
outsb
loope
xor
fldt
xor
cmpsl
or
stos
mov
mov
mov
lret
popf
push
in
xchg
mov
or
hlt
shll
add
divb
jns
lcall
clc
cmp
dec
popf
nop
pushf
in
shll
out
add
dec
add
mov
cmp
jg
rclb
cmpsb
xor
sbb
test
shrb
cmpsb
loopne
xchg
jecxz
mov
and
jnp
out
cmpsl
fstl
push
sarl
movsl
insb
into
lea
sbbb
mov
scas
stos
scas
xchg
or
and
rcrb
ja
leave
dec
jp
fstpl
sub
xchg
push
outsb
and
in
mov
jno
push
test
xchg
fsubrs
rcll
cmp
repz
outsb
mov
mov
pop
movb
enter
fbld
or
mov
or
stos
xor
fstp
stos
pop
sub
sub
arpl
xchg
outsb
add
push
in
adc
jg
int3
aas
rorb
notb
cmp
rcll
addl
data16
jmp
aaa
jo
push
cmpsl
xlat
cmp
scas
int3
nop
jne
mov
movsl
adc
insl
icebp
arpl
mov
pushf
int3
push
xchg
xor
pop
out
adc
mov
aas
repnz
lcall
xchg
jg
out
push
inc
cwtl
jo
sti
shrb
or
aaa
mov
out
loope
iret
fcom
and
push
dec
xor
icebp
popa
aad
push
jl
jo
or
push
cmp
ficompl
jp
push
lcall
dec
orb
adc
std
or
adc
pop
loope
xchg
loop
clc
inc
pop
push
sub
xor
xor
xor
mov
jo
stos
xchg
out
adc
popf
jmp
xchg
adc
mov
ja
es
in
mov
les
push
add
adc
test
fsubrl
push
mov
push
lock
inc
in
sbb
addr16
sti
add
arpl
pop
lahf
sbb
add
xor
xor
push
shll
or
lock
icebp
loop
add
gs
cwtl
dec
out
xchg
frstor
scas
je
lods
or
push
mov
jecxz
jo
aad
xchg
popa
lea
push
pop
mov
and
mov
aam
xor
and
stc
movsb
fmull
pusha
ret
rol
jg
xchg
xor
fisubs
lock
jle
popa
xchg
test
xor
subb
inc
mov
call
aaa
int3
inc
notl
inc
movsl
loope
cmp
jbe
test
mov
mov
daa
in
mov
push
push
and
pop
and
aaa
pop
dec
dec
mov
fstcw
mov
dec
andl
pop
repz
test
fneni(8087
add
insb
pushf
aaa
xorl
pop
jecxz
mov
dec
mov
jge
dec
pop
in
imul
sbb
in
add
sub
lcall
pop
pop
pop
dec
outsb
jl
adc
push
or
mov
imul
lahf
xor
imul
daa
mov
insb
loope
ret
dec
gs
jnp
xor
and
outsb
jno
repz
cmpsb
add
mov
mov
mov
inc
and
dec
xchg
aas
fdivs
xchg
mov
out
gs
cmp
stos
mov
cmp
push
push
pop
mov
add
icebp
rcr
ficomps
bound
xchg
loope
pop
inc
in
cmpb
sbb
push
fstpt
call
add
inc
mov
aaa
leave
insb
leave
rcll
pop
jl
mov
gs
xchg
mov
add
outsl
jo
inc
dec
roll
push
mov
call
into
sub
outsb
sbb
sub
das
dec
popa
call
movb
mov
dec
arpl
xchg
fs
adc
movsl
or
ljmp
leave
cmc
mov
push
adc
frstor
push
jp
aad
aaa
push
pop
fwait
dec
dec
rcr
jno
and
cs
adc
lea
xorl
jb
pop
lret
fistl
pop
pop
fnstcw
sbb
mov
pop
mov
xchg
xchg
out
xchg
pop
mov
jbe
mov
outsl
out
jle
pushl
sub
push
sbb
fstpl
sub
in
ja
call
push
in
loope
fwait
cmpsb
xchg
ffreep
mov
lods
in
leave
test
sbb
and
stos
add
in
inc
lods
dec
lahf
sarb
cmp
js
adc
dec
cmp
aaa
loope
movb
outsb
mov
jno
pusha
mov
icebp
inc
adc
ss
repz
aaa
mov
jo
mov
lock
adc
in
movsb
sti
test
adc
into
cmp
xor
inc
fcoms
pushf
add
repz
and
in
mov
iret
loope
idivl
mov
stos
pop
xor
add
cmp
mov
mov
or
repnz
jecxz
inc
push
dec
popw
xchg
cmp
or
das
sti
bound
icebp
adc
out
sbb
and
sbb
out
push
data16
push
jecxz
in
dec
jns
daa
sub
aad
adc
lea
int3
jb
cmp
sub
dec
jo
dec
add
stos
jle
inc
inc
cmp
jmp
imul
pop
push
scas
xchg
add
imul
popf
inc
sbb
mov
pop
add
in
cs
xor
push
mov
mov
lea
lock
cmp
cmp
int3
adc
fwait
jmp
and
add
out
int3
pop
adc
lods
ss
imul
sub
jle
fisubs
mov
fisubrl
mov
sub
sti
imul
lret
inc
xor
addr16
outsl
out
xchg
sti
ret
pop
mov
cmpsb
push
mov
insb
les
mov
jge
add
push
ret
add
leave
inc
add
stos
loopne
pop
cmp
adc
je
xchg
sub
loope,pt
std
lret
jmp
and
popa
adc
xor
rol
mov
test
add
mov
incb
mov
add
aam
sbb
cmp
testb
aaa
movb
inc
adc
push
inc
imul
popa
xor
lea
mov
loop
cli
js
hlt
gs
test
int3
enter
and
push
adc
negl
or
adcl
pop
sbb
mov
decb
notl
js
incb
fisttps
adc
stc
xor
xchg
popa
stos
sbb
push
repnz
pop
xchg
dec
pop
xor
js
xchg
mov
cs
jmp
pop
aaa
mov
and
mov
sahf
gs
pusha
inc
push
jle
lret
inc
add
insl
clc
cmpsl
test
sub
out
bound
fdivp
sub
pop
mov
jb
adc
and
mov
cmp
jmp
xchg
cmp
mov
mov
push
scas
lret
inc
das
pop
fwait
pop
inc
jecxz
rorb
xacquire
shrl
fidivs
push
adc
jb
jmp
ss
xchg
insb
add
push
int3
sbb
clc
les
sbb
mov
pop
sbb
xor
mov
je
loopne,pt
adc
jno
push
adc
and
push
cld
push
stos
jl
scas
push
es
lds
loopne
bound
loope
jle
orb
xchg
push
inc
daa
jns
lret
outsb
cmp
aaa
push
xor
push
cli
sub
andl
cmp
mov
xchg
dec
jb
pop
jne
push
cmc
pop
popf
mov
cltd
jbe
xor
ror
inc
dec
xchg
push
dec
inc
test
and
sbb
jle
xchg
pop
and
xor
inc
arpl
sbb
jbe
pop
push
and
insl
in
lods
mov
outsl
xor
fdivrs
loopne
sahf
mov
sti
data16
roll
aam
push
dec
jl
mov
shlb
ds
enter
movsl
jl
push
incb
out
mov
lods
ss
and
les
push
mov
inc
add
xlat
inc
or
ret
lock
lock
pop
xor
pop
sub
lahf
add
mov
cmp
dec
push
cld
repz
mov
stos
mov
negb
ret
das
and
dec
dec
xor
push
push
pop
pop
aaa
push
into
repnz
lcall
jg
add
jg
aaa
in
mov
fwait
push
mov
mov
dec
jecxz
insb
cmpsl
aaa
clc
xchg
sbb
mov
loope
mov
jo
in
test
aaa
enter
in
xor
lock
mov
push
scas
mov
adcb
out
les
cmp
enter
sbb
cmp
movsl
xchg
xchg
mov
or
pop
sbb
push
pusha
jns
clc
scas
jb
cmp
shll
pop
mov
mov
enter
and
outsb
pop
stos
add
xchg
xor
gs
cmp
sbb
test
sub
aam
push
and
out
arpl
sub
mov
pop
sub
xchg
icebp
call
test
mov
mov
pop
mov
pop
dec
or
jmp
and
test
mov
add
stos
mov
daa
xchg
rcll
mov
cld
in
fsubrs
add
lods
or
inc
lock
cld
and
fsubrl
sbb
imul
or
push
jbe
leave
nop
inc
lods
mov
push
das
aam
sbbl
push
scas
adc
jb
push
imul
xchg
into
clc
jo
and
dec
data16
das
jg
cltd
sub
mov
dec
cmp
mov
mov
test
add
and
sub
sub
popf
loope
negl
sbb
mov
push
dec
and
call
mov
push
aaa
push
xor
adc
insl
pop
push
ret
lea
xchg
fdiv
or
popf
aam
sbb
adc
jp
mov
bound
rclb
enter
xor
repz
into
scas
dec
test
mov
xchg
into
pop
adc
fisubrl
int
adc
mov
lret
jno
and
pusha
lea
repnz
mov
add
aaa
and
pop
out
push
test
cltd
lods
aaa
bound
xor
sbb
out
sub
aaa
cs
sahf
inc
fmulp
inc
fiadds
mov
jno
add
pusha
xor
popf
mov
int3
outsb
xchg
xchg
xchg
stos
jl
push
fstpl
ret
jb
mov
push
cwtl
sub
daa
pushl
pop
mov
sub
xor
imul
mov
adc
in
lea
frstor
cmp
jle
inc
fnstenv
jbe
mov
arpl
ret
fstpl
mov
sti
popf
inc
jle
imul
dec
cmpsl
adc
mov
mov
jmp
mov
jbe
xchg
push
hlt
stos
jge
es
aas
lcall
add
jmp
shlb
xlat
jecxz
aaa
mov
push
shlb
or
mov
addb
ss
subb
mov
pop
sbb
out
xchg
stos
je
jp
mov
int3
add
and
scas
xor
dec
cwtl
sahf
mov
loopne
mov
sbb
addb
outsb
pop
dec
icebp
xchg
inc
icebp
lcall
dec
jle
mov
in
mov
stos
and
aas
cmp
aam
int3
test
in
dec
sub
pop
sbb
pop
sub
jp
arpl
xor
cmpsl
xor
push
mov
adc
adc
test
push
xchg
mov
ss
ficoml
xor
jo
dec
dec
dec
xchg
inc
ljmp
pop
fnsave
add
sbb
loopne
jle
mov
je
sub
mov
addr16
pop
jle
ljmp
xchg
mov
in
jno
add
push
rorl
pushf
shl
sbb
je
sub
mov
xor
push
and
cld
ljmp
cmp
adc
adcl
dec
fstl
pop
push
jnp
sub
dec
outsb
enter
and
dec
push
inc
add
add
ret
in
mov
aaa
repz
cmpsb
pop
loope
sbb
dec
sti
cmc
ds
bound
aaa
orb
and
and
and
in
fwait
sahf
push
cmp
test
pusha
fwait
orb
into
sub
gs
sbb
nop
insl
pop
inc
jl
out
cmp
in
inc
and
out
pop
out
xchg
lcall
mov
inc
sbb
add
loop
test
xor
in
inc
cmp
add
dec
mov
mov
jbe
jge
sbb
mov
add
mov
xor
sub
fstps
or
xor
je
fmull
jbe,pt
nop
sti
popa
sbb
out
xor
arpl
mov
scas
out
nop
inc
and
push
mov
subb
cmp
dec
aaa
in
test
repnz
faddl
push
cmp
push
ljmp
and
mov
jb
dec
jo
in
rcll
add
push
or
test
and
push
mov
xchg
fidivs
cmp
sbb
out
adc
pop
add
cmp
hlt
dec
jp
shlb
in
mov
pop
ss
pop
adc
dec
sub
mov
push
pop
call
xlat
in
scas
sbb
filds
aaa
inc
stos
call
mov
add
cltd
mov
pop
or
gs
insb
dec
es
leave
mov
adc
sub
andb
xor
mov
pop
stc
xlat
lahf
add
icebp
popf
cltd
xor
push
div
pop
in
movsb
add
ret
pop
mov
sbb
push
int
sbb
and
inc
and
cwtl
jl
stc
push
jbe
mov
push
rclb
and
mov
das
std
cmp
dec
xchg
fmull
add
fdiv
icebp
cltd
xor
adc
mov
ret
push
xchg
in
xlat
dec
das
jnp
insl
pop
dec
fistl
or
enter
fldt
adc
imul
push
divl
mov
or
sbb
adc
iret
push
jne
es
cs
addb
add
in
fdivrl
test
push
cmp
jl
lcall
pop
xchg
mov
pop
std
or
cmp
jne
pop
add
mov
ret
jl
aaa
imul
out
push
sub
gs
jns
xor
pop
push
lahf
or
cmc
aas
dec
push
xchg
mov
sbb
jp
negb
gs
cmp
pusha
lods
pop
mov
mov
fwait
cltd
jnp
test
cmc
arpl
ss
outsb
jnp
mov
ss
mov
sti
fimuls
mov
lods
ss
shr
push
push
dec
popa
stos
data16
out
and
sbb
mov
nop
fcoml
mov
aaa
jl
push
mov
and
pop
aam
out
dec
mov
fst
xchg
mov
jne
pop
aam
popa
arpl
cltd
cmp
and
push
adc
in
rcrl
cltd
push
mov
jne
aaa
flds
sub
mov
cli
push
and
push
ficomps
fbstp
xchg
cmpsl
push
mov
cwtl
jl
mov
bound
push
mov
xor
pop
adc
shrl
xor
jb
and
arpl
dec
scas
stc
xor
mov
push
jl
or
dec
lds
push
xchg
ficomps
rolb
fcompl
xchg
xchg
xlat
xchg
jmp
fs
mov
lret
lsl
leave
add
aam
and
and
fstpl
xchg
cmp
sub
fmul
cwtl
push
xorb
mov
psraw
pop
push
ret
push
mov
xchg
dec
mov
cmpb
cmp
bound
mov
inc
test
lret
push
mov
adc
insb
cmp
add
mov
adcl
add
sub
test
or
add
rcrl
cld
add
rcrl
lods
popa
sub
nop
sbb
ds
jno
and
addr16
dec
mov
loop
push
ss
outsb
adc
jp
mov
pop
xor
sub
cwtl
pop
push
in
sbb
lds
aam
pop
inc
xchg
sbb
into
xchg
mov
dec
and
xchg
scas
sub
inc
jb
jmp
mov
push
mov
mov
aaa
mov
cmp
cmpsb
sbb
push
insl
loop
cltd
dec
addb
scas
fs
popa
sbb
mov
pushf
int3
sbb
pop
cmp
in
jb
mov
je
jl
xchg
inc
pop
arpl
xor
outsb
dec
cmp
dec
in
push
cmpsb
test
xchg
sarl
pop
adc
enter
jo
leave
push
pop
scas
dec
icebp
test
aas
pop
add
sub
fldt
mov
cmp
mov
pop
pop
aam
push
xor
push
jg
call
gs
scas
cwtl
outsl
movsb
lods
mov
insl
out
scas
mov
in
add
push
xchg
sti
push
jb
adc
xchg
outsb
stos
cwtl
cmpsl
jbe
xor
sub
mov
shrl
test
xlat
dec
and
sahf
xchg
cmp
cmp
lret
pop
test
in
mov
sub
jb
pop
scas
fwait
mov
aas
inc
dec
sbb
pop
pop
cld
sbb
sub
sti
repz
insl
scas
mov
push
flds
jb
das
icebp
mov
movsl
nop
push
ljmp
push
andb
mov
pop
sbb
xchg
and
test
movsl
hlt
into
imul
xlat
loope
dec
mov
dec
dec
and
jb
xor
inc
mov
pop
cli
and
cmc
push
pop
jno
jle
inc
add
cmp
adcl
adc
stos
xor
pop
dec
clc
add
sarl
ss
add
imul
push
pop
nop
inc
mov
push
in
lcall
cmpsl
xorb
xchg
mov
add
sub
and
adc
push
cld
icebp
cmp
shrl
adc
enter
std
popa
lcall
dec
pop
and
jmp
cmp
loope
mov
sub
mov
or
sbb
test
jecxz
jle
cwtl
adc
aad
add
push
adc
out
jl
mov
iret
xchg
mov
inc
ljmp
add
cmpb
or
cltd
test
dec
movswl
jae
mov
mov
mov
mov
mov
dec
cs
cmpsb
mov
adc
mov
dec
popa
and
pop
orl
loope
fidivrs
add
arpl
clc
popf
push
add
adc
fnsave
outsb
lds
aad
shl
imulb
add
jnp
dec
inc
stc
pop
mov
xchg
aam
into
push
push
inc
and
loop
aaa
dec
ret
or
jg
pop
pop
sbb
add
cmpsb
sub
xchg
clc
rorb
sbb
decl
push
xor
pop
dec
jle
or
lcall
dec
push
lods
shrb
mov
pop
mov
insb
push
aaa
sub
mov
popa
scas
loope
pop
sub
jmp
sub
idivl
data16
flds
sbb
cwtl
pop
lods
mov
jg
in
fwait
ds
jecxz
jle
enter
cmp
pop
jecxz
nop
call
out
addr16
inc
in
aaa
jo
dec
cmp
mov
xor
das
push
xchg
setge
std
pop
aaa
ja
outsb
lds
mov
mov
push
pop
mov
icebp
ljmp
popf
add
sbbb
jns
sbb
loop
push
mov
imull
aad
shll
ret
xchg
xchg
xchg
mov
inc
hlt
jle
ficoms
fwait
dec
sbb
notl
aaa
addr16
or
dec
sbb
pop
pop
jl
inc
std
jnp
xorl
pop
subl
in
push
dec
cmpl
loope
adc
mov
xchg
or
ret
arpl
pop
cmp
jecxz
rcrl
inc
bound
xchg
test
outsb
dec
push
shl
pop
and
dec
lea
mov
xchg
aas
sbb
sub
ljmp
pop
repz
addb
sahf
push
ss
adc
dec
icebp
cs
cs
jecxz
jo
cmp
sbb
jmp
xchg
push
mov
jno
fcmovbe
cmp
push
shrb
adc
cmpsb
ret
cmc
shr
cmp
repnz
repz
dec
cmpl
mov
sbb
ss
sti
and
lahf
pop
xchg
lcall
fldenv
cmp
pop
jb
or
xchg
mov
pop
sbb
enter
int
ret
mov
in
imul
pop
aaa
stos
xorb
mov
sbb
out
pop
arpl
pop
ficoms
pop
lahf
rcl
push
outsb
lods
and
jmp
insb
sbb
into
adc
sarl
cmpsb
bound
jbe
insb
pop
pusha
jo
mov
push
jns
pop
sbb
adc
xor
sbb
lods
scas
sbb
xchg
sub
xchg
mov
xchg
pop
popa
mov
lret
pushf
out
push
mov
mov
fmuls
popa
fnsave
sbb
xchg
call
mov
movnti
enter
into
add
sub
mov
sub
fistps
sbb
add
and
pop
stos
mov
mov
dec
scas
dec
cmpsb
ret
lahf
jmp
in
out
xchg
pop
pushf
mov
andb
mov
fistpll
mov
xchg
orb
lahf
aaa
mov
mov
pop
and
mov
sbb
pop
in
jg
pop
dec
sub
pop
arpl
gs
in
jge
xorb
adc
sbb
mov
adc
ss
pop
std
and
mov
sbb
inc
cmc
imull
push
mov
inc
jl
inc
test
push
insb
adc
add
pop
in
pop
inc
int3
dec
pop
mov
jecxz
ret
scas
sbb
sahf
push
nop
mov
cwtl
push
pop
dec
insl
je
pop
out
xchg
arpl
popa
mov
jne
hlt
into
mov
pop
loope
into
jnp
icebp
stos
inc
mov
inc
in
mov
test
fldl
inc
sbb
rclb
lcall
addb
jle
sbb
jecxz,pn
pushf
xchg
loope
inc
push
cmc
in
ret
jbe
mov
fbld
dec
sbbl
pop
sti
jl
mov
in
pop
fnsave
icebp
xchg
lcall
lret
dec
jp
pop
not
jb
xchg
push
and
jle
cmpsl
and
pop
stos
nop
mov
mov
fstps
jmp
adc
lods
pop
add
insb
aaa
xlat
push
and
test
mov
adc
scas
xchg
or
sub
adc
jns
movsl
scas
and
in
fwait
test
stc
push
fnstcw
mov
fiadds
jle
or
stc
and
int
push
incb
in
sti
movaps
jle
cmp
push
dec
xor
in
dec
lahf
cmp
loope
push
pop
and
je
push
xor
add
mov
jns
iret
nop
cwtl
fwait
push
pop
jnp
fadd
mov
push
cwtl
loopne
adc
jo
jo
in
mov
ret
and
xor
inc
cmp
imul
notl
cmp
xchg
mov
sarl
fwait
jbe
cmpsl
mov
sbb
sahf
call
aam
ret
cmc
push
out
clc
faddp
push
push
ficompl
cs
ds
in
jp
sbb
mov
fxch
xor
sbbl
sbb
mov
and
push
jns
adc
cmp
ss
dec
jne
jle
bound
lahf
jp
jns
jmp
inc
sub
hlt
sti
je
jmp
add
in
ja
fmul
orl
sub
lahf
insb
rcrb
pop
scas
addb
sarb
and
dec
jg
ficomps
fcoms
daa
adc
inc
ds
aas
inc
mov
and
sbb
push
dec
fistl
jle
sti
xorl
push
add
jg
subb
das
shll
xor
iret
xchg
or
jb
les
imul
pop
xor
pop
sub
rcr
imul
aaa
inc
jle
sub
pop
xlat
push
insl
test
push
aam
cmc
fisubrl
sub
std
loope
add
xor
inc
pusha
ljmp
fs
pop
cmp
enter
jecxz
jns
mov
data16
das
mov
mov
adc
push
mov
lea
adc
aam
push
inc
mov
add
insl
add
mov
jb
jno
ret
xor
jl
pop
test
sti
mov
or
pop
mov
mov
movb
movsl
aaa
fdivrl
cmp
add
or
enter
stos
adc
dec
inc
les
ja
gs
icebp
jg
cmp
test
arpl
scas
sahf
fs
cmp
sub
aaa
ret
lret
rcrl
imul
push
sbb
xchg
fdiv
pop
mov
jecxz
jecxz
sbb
inc
in
in
subb
adc
hlt
mov
iret
les
pop
pop
adc
rorb
push
or
sbb
inc
pop
int3
xorb
fcoml
and
sbb
aaa
lahf
shlb
daa
lret
jne
cmp
faddl
fidivrs
addr16
ss
dec
xchg
ds
sbb
loopne
call
inc
call
cltd
rcll
pop
mov
insb
jo
movsl
pop
sbb
arpl
sahf
jbe
ljmp
pop
sbb
stc
jle
dec
leave
sbb
pop
push
stos
repnz
imul
mov
sbb
rcr
mov
add
lods
adc
test
lcall
sub
je
or
xor
or
xchg
mov
testb
pop
push
and
inc
push
inc
arpl
les
adc
fnsave
loope
imul
mov
scas
sbb
shl
arpl
inc
insl
pop
addb
pop
mov
sti
cmpsb
mov
xchg
mov
aaa
cmp
lret
fiaddl
jo
leave
cmp
ficomps
pop
scas
int
sbb
jmp
jle
nop
fiadds
cmp
jecxz
loope
aaa
xchg
insl
dec
out
fsubl
sbb
js
loope
or
jge
mov
pop
xchg
xor
loop
into
decl
cmp
push
jp
movsb
sbb
movsl
in
pop
ss
loope
mov
sub
xlat
js
and
test
lea
inc
outsl
sarb
arpl
les
repz
je
adc
loope
jo
inc
xchg
fistpl
mov
push
cld
lock
push
insb
pop
push
cmpsl
add
mov
jae
out
pop
leave
pop
std
mov
cmp
xor
test
mov
push
in
push
idiv
sbb
mov
fisttpl
push
aaa
xchg
shr
mov
mov
push
mov
pop
and
push
sti
cmpsb
inc
xor
sbb
loop
push
dec
bound
imul
sbb
xchg
sbb
lea
out
stos
pop
loop
shlb
movsl
aaa
mov
jl
cwtl
push
insl
movsb
stos
icebp
inc
fstpl
pushf
mov
xchg
cli
pop
mov
out
add
jnp
inc
daa
dec
sti
cmc
mov
inc
lock
dec
pop
jbe
shl
jmp
sbb
push
fcomi
jns
in
imul
ficomps
ss
jne
stc
out
mov
adc
jecxz
mov
data16
adcb
mov
or
inc
and
stos
call
add
movsl
scas
icebp
in
and
insl
cmp
mov
inc
fstpt
sbb
pop
call
pop
lahf
sub
cwtl
loopne
bound
xchg
mov
test
xchg
aas
add
mov
adc
push
test
pop
outsb
lret
les
jle
add
and
jmp
enter
jecxz
inc
xchg
popf
jg
loope
xchg
std
pop
fst
sub
cmp
pop
loope
inc
dec
and
pushf
sbb
arpl
inc
and
fisubrl
push
sbb
jno
stos
push
icebp
jecxz
mov
popf
mov
mov
ss
inc
loope
xchg
ja
icebp
mov
clc
sbb
sbb
mov
mov
mulb
push
sbb
ss
mov
jo
fs
jns
jno
push
in
mov
sbb
fstl
pop
pushf
push
sbb
in
and
adc
or
mov
fdivrs
hlt
gs
andb
or
and
inc
pop
cmp
push
mov
in
and
shlb
push
add
xor
adc
dec
gs
lret
pop
loopne
cmpsl
popf
std
test
lds
sbb
pop
or
insb
mov
fistpll
movl
push
push
jl
pop
cmp
shll
out
xor
dec
pop
movsl
fldenv
les
test
push
xchg
jle
lock
sub
or
dec
ds
cmp
ljmp
sub
pushl
lds
std
shl
sbb
scas
imul
pop
mov
pop
std
mov
sarl
sbb
cmp
repz
add
out
push
mov
or
sti
xchg
out
hlt
loope
mov
lods
sahf
js
mov
in
pop
aad
cmp
nop
pop
ja
xor
add
mov
in
mov
out
or
ret
fs
cltd
inc
into
pop
inc
lods
out
hlt
or
xchg
sbb
xchg
mov
in
aaa
add
lods
inc
inc
mov
push
dec
sbb
dec
sbb
popf
ficoms
aas
js
ret
sbb
enter
push
pop
fstl
xor
push
cmpsb
in
xchg
stos
cmp
pop
fstpl
cmp
cld
xchg
sbb
push
sbb
in
pop
sbb
mov
cld
imulb
repz
inc
cld
dec
mov
push
orb
or
sub
cld
adc
pop
sbb
inc
jge
pusha
lods
mov
fisttpl
jle
call
scas
adc
xchg
movsl
add
adc
into
lcall
sbb
pusha
or
add
xchg
imul
sbb
outsb
pop
and
outsb
in
dec
loopne
push
movsl
and
jl
adc
mov
xor
adc
mov
cltd
inc
cmp
sbb
cmp
mov
add
mov
addb
loope
pop
popa
into
mov
mov
sbb
dec
mov
cli
or
xchg
xor
cmp
lock
xor
test
push
xchg
in
mov
adcl
mov
inc
push
outsl
mov
push
dec
mov
lret
in
sahf
cmc
dec
int3
aas
pop
ds
lahf
mov
popf
sbb
pop
ror
incb
enter
insl
xor
out
fst
test
stos
out
in
cmp
add
jb
loope
and
lcall
in
ret
aaa
sbb
gs
cltd
outsl
mulb
add
mov
test
les
outsb
push
xor
jne
mov
mov
mov
jbe
xchg
je
scas
push
jg
loopne
mov
or
add
test
cltd
pop
adc
mov
jno
mov
mov
aaa
aas
mov
in
and
mov
push
pop
imul
add
mov
aas
in
xor
js
pop
and
std
stos
mov
out
or
lcall
add
xor
dec
mov
insl
imul
jl
pop
xor
mov
popl
sbb
mov
in
sti
je
sub
push
pop
icebp
into
je
pop
inc
adc
and
mov
inc
jg
test
cmp
pushf
popa
pop
xor
in
fs
pop
repz
fdivr
jae
std
fistpl
sbb
gs
call
rep
push
pop
inc
sahf
pop
in
shlb
sub
mov
pop
fwait
nop
adc
daa
in
arpl
dec
std
xor
scas
enter
jle
dec
mov
mov
jmp
testb
jmp
sub
xchg
push
sub
andb
jp
mov
xlat
sub
or
leave
shlb
mov
ds
pusha
or
movsl
lods
stos
push
js
push
pusha
movsl
ds
out
int3
dec
dec
xchg
lret
and
fs
mov
aaa
fisubrl
pop
cmpsb
je
mov
dec
pop
dec
cmp
mov
inc
mov
je
dec
in
insb
dec
popl
fsubl
push
push
add
int
add
cmpsb
or
popa
add
loopne
add
std
test
mov
enter
push
popf
pop
repnz
cmpsb
jle
xchg
mov
add
jecxz
sub
mov
fcomps
cmp
sbb
fistl
dec
je
jae
mov
out
aas
into
or
aaa
dec
mov
movsb
insl
pop
lea
cmp
fdivs
xchg
jnp
pop
inc
shl
sub
rcrb
ljmp
and
sahf
popf
in
pop
cmpsl
push
andl
adc
jp
cmpsb
fdiv
push
jno
and
jl
adc
movsl
pop
and
loopne
pop
in
adc
mov
push
cmp
push
push
jl
adc
pop
xchg
pop
inc
or
inc
push
mov
repz
lcall
xchg
lahf
call
inc
sbb
mov
jmp
pop
push
sbb
push
mov
cli
or
scas
out
dec
mov
push
shl
gs
and
and
sub
push
mov
pop
jp
jle
add
jno
or
xchg
lock
inc
mov
dec
in
mov
sti
imul
add
cmp
mov
cwtl
or
push
bound
or
and
or
mov
out
clc
pop
and
fstps
lods
lock
inc
fs
pop
std
outsl
lret
push
sbb
cli
adc
movsl
push
rorl
dec
adc
lods
inc
fwait
pop
lea
or
mov
jle
repz
enter
push
repz
repz
mov
repz
cmp
mov
push
xorl
popa
out
hlt
sub
xor
mov
push
jo
sbb
pop
lea
mov
push
imul
sbb
add
out
scas
inc
cmp
fistpll
out
cmp
xchg
and
add
push
sbb
scas
xor
out
data16
jno
push
aam
int3
add
insb
xor
inc
sub
mov
and
xor
out
cwtl
mov
xchg
dec
into
mov
dec
sbb
jecxz
call
mov
and
jg
sbbl
fsubs
shl
cmpl
hlt
aaa
xchg
or
fsubrs
sub
movb
pop
out
sbb
mov
aaa
jge
xchg
stos
in
mov
aaa
divl
dec
cmp
addb
aas
pop
push
xor
movsl
sbb
jl
cmp
enter
mov
xchg
cmp
ret
mov
jp
cmp
outsl
sbb
pop
js
ds
fst
lret
jno
pop
sti
sbb
mov
in
mov
jge
xor
fldl
jge
xchg
push
out
jae
ret
xchg
adc
enter
dec
mov
mov
ljmp
mov
ss
pop
stos
ret
lock
mov
out
arpl
stos
jb
jp
mull
xchg
jmp
mov
add
pop
inc
add
inc
aam
lret
mov
loope
mov
lcall
pop
ljmp
mov
inc
cld
inc
mov
into
andl
pop
sbbb
mov
loope
dec
sbb
dec
and
es
and
jg
mov
mov
ss
pop
movsb
addr16
lcall
adc
jge
aaa
add
ds
and
adc
fistps
mov
mov
enter
pop
out
or
mov
sti
xchg
minps
test
or
push
divb
pop
in
cmp
stos
movsb
push
dec
fcoms
cmc
add
aaa
inc
adc
es
dec
dec
jge
into
sub
aad
in
push
jle
jae
jecxz
or
aaa
es
cmp
mov
imul
or
and
test
aaa
push
pcmpeqd
dec
push
xorb
arpl
push
ss
sub
add
rcrb
sbb
pop
inc
cmpsl
pushl
and
xor
mov
mov
dec
mov
sub
scas
lea
pop
int3
sahf
cmpsb
icebp
enter
dec
aad
mov
lahf
dec
and
jne
test
xchg
xchg
pop
sbb
imul
mov
cld
bound
inc
dec
mov
inc
and
mov
mov
mov
in
bound
out
xor
cmpsb
mov
cmp
sub
mov
jbe
subb
mov
jle
push
cs
xor
fistps
in
out
push
pushf
fildll
inc
lds
sarb
add
sbb
imul
xchg
clc
sahf
xor
cwtl
mov
inc
outsb
jne
sub
in
sbb
adc
in
ss
aaa
lahf
mov
xor
jle
add
jle
sub
lock
js
dec
xor
andb
popf
push
sbb
jbe
insb
push
mov
and
call
lea
cmp
int3
clc
sbb
or
pop
xor
push
push
push
dec
enter
push
fisubrl
lret
xor
cmp
pop
add
insl
inc
aaa
into
sub
lret
push
fnstsw
mov
add
jnp
pusha
mov
repnz
int3
add
sbb
adc
fnsave
push
js
adc
inc
and
pop
xor
clc
push
movsb
shll
push
mov
movsl
nop
dec
sahf
and
sbb
mov
mov
ss
xor
and
sub
jg
aas
push
adc
dec
rolb
loopne
rolb
jp
pop
mov
mov
movsl
frstor
jae
pop
pop
cld
sbb
shll
sti
mov
daa
in
adc
xchg
or
add
cwtl
or
sbb
adc
mov
ret
push
jne
sarb
aaa
push
mov
xor
pop
sbb
pop
push
insl
jle
mov
aaa
xor
sub
rclb
in
movb
cmp
dec
mov
cmp
in
fidivrl
fcompl
mov
call
mov
sbb
ss
sahf
or
aaa
icebp
push
mov
adc
inc
sub
push
mov
mov
sub
adc
xchg
xor
sbb
cmp
jns
push
push
mov
pop
jo
jg
xchg
mov
fxch
push
repnz
jle
ret
cmpsb
or
mov
jb
imul
cmp
push
jbe
fsts
mov
imul
adc
jb
aaa
movsl
sbb
adc
aam
leave
dec
sub
out
inc
aaa
sbb
cmp
jb
lods
sbb
aam
fsubrs
in
jbe
popf
lret
jl
ja
enter
cmp
cmp
sbb
or
add
fstpt
mov
xchg
pop
jl
inc
adc
sbb
push
mov
scas
dec
jmp
icebp
push
cmp
lcall
dec
inc
jmp
pushf
test
ret
scas
call
inc
inc
fistps
or
ljmp
test
or
rorb
jmp
jno
mov
mov
test
sahf
mov
jo
xchg
xor
xchg
jne
aam
jle
pop
roll
mov
ja
loopne
sbb
lds
cld
pop
pop
inc
mov
inc
icebp
test
mov
pop
inc
repnz
jb
sbb
pop
je
mov
dec
ret
cmc
icebp
push
fldl
jnp
ror
push
icebp
test
pop
mov
pop
add
nop
scas
pop
stc
xchg
into
mov
and
lea
ss
add
int3
sub
push
push
cmpsb
pop
mov
addr16
in
pop
lret
movsb
sub
fcoms
pop
icebp
pop
xchg
dec
icebp
popf
xchg
lods
adc
pop
cmp
ja
stc
in
testl
shl
in
adc
call
ja
cld
mov
fwait
movsb
inc
mov
mov
cmp
mov
jae
pop
in
aam
mov
sbb
iret
adc
addr16
xlat
insl
scas
mov
and
cli
std
fisubs
cmp
pop
sbb
mov
mov
loope
add
push
addb
lea
push
lds
jecxz
js
mov
ficoms
in
sahf
push
fcoms
dec
adc
and
xor
inc
cmpb
jne
fs
lods
out
shl
movsl
mov
mov
lret
cmc
ss
pop
stc
cmpsb
jl
arpl
push
cli
mov
ret
icebp
mov
sarb
das
and
dec
dec
lret
jp
adc
test
addr16
push
les
popf
aas
loope
imul
ljmp
mov
jb
add
mov
sbb
push
mov
cmp
rorl
outsb
mov
inc
and
or
in
jo
cmpsb
idivl
xor
mov
ud0
cmp
das
test
mov
lea
and
outsl
add
mov
pop
xchg
sbb
repnz
jbe
and
or
push
cmpsl
sbb
ss
mov
add
mov
int3
add
inc
pop
inc
arpl
sub
rcll
arpl
popl
pop
mov
sarb
fwait
insl
lret
dec
in
push
fcompl
stos
xchg
jl
lock
mov
adc
js
test
scas
xorl
adc
push
inc
mov
ret
push
lret
inc
mov
dec
xchg
sub
cmp
clc
stc
fcompl
int
xchg
arpl
lea
test
lods
dec
or
cmp
in
xor
pop
mov
mov
insb
fildll
sub
pop
jb
mov
push
mov
adc
pop
add
xchg
sbb
cli
sub
cmpsl
mov
dec
xchg
sarb
xchg
push
loop
popa
lret
fmuls
aaa
addr16
stos
push
sbb
jle
mov
or
xchg
jae
popw
and
add
push
cld
pop
adc
jl
push
mov
imul
sbb
lock
adc
sub
fnstcw
or
movsl
aaa
push
push
cmpl
data16
in
ds
incl
ret
xor
fisttpll
aam
jae
pop
fsubp
shlb
mov
and
into
in
and
adc
in
cwtl
lea
fcoms
pop
dec
jbe
xchg
mov
xchg
ss
adc
cmpsb
pop
pop
in
xchg
push
adc
sti
jl
xlat
ds
jg
repnz
fadds
sub
icebp
sahf
add
mov
jbe
mov
into
mov
xchg
mov
in
test
lret
add
icebp
sti
into
pop
stos
cmp
mov
dec
std
xchg
movsl
mov
pop
outsl
dec
jbe
int
pop
and
mov
cmpsl
jno
shlb
cmp
rclb
mov
push
xor
inc
mov
inc
movsb
popa
mov
loope
insb
clc
cmpsl
mov
test
jge
inc
aam
or
fistpl
inc
leave
arpl
mov
cwtl
dec
push
jp
in
arpl
push
std
rorl
scas
arpl
cmp
fwait
in
adc
jnp
fs
fidivs
dec
add
jp
mov
pushf
dec
sub
adc
scas
stos
ret
mov
dec
dec
cmp
add
jle
sbb
push
dec
mov
xchg
add
lock
icebp
ret
xor
fistpl
mov
fistps
aad
addr16
ret
ds
mov
fadds
mov
stos
shl
sbb
mov
addps
ss
push
add
aaa
ljmp
jecxz
dec
ret
cltd
fisubl
fdivl
std
inc
pop
jecxz
xchg
jns
repnz
insl
repnz
or
push
imul
adc
sub
lcall
ret
pop
and
dec
and
std
fnsave
mov
adc
mov
aam
push
pop
adc
cmpsl
sbb
cmp
hlt
test
sahf
sub
mov
add
pop
movsb
ret
xor
sbb
aaa
xor
icebp
inc
int
div
mov
push
xchg
jg
and
fwait
jl
inc
adc
loope
clc
push
and
jnp
jg
pop
leave
jae
jo
ljmp
push
push
lret
and
enter
cmp
mull
mov
jmp
pop
iret
cmp
out
dec
xor
rol
pop
mov
and
lods
mov
addb
lahf
dec
nop
or
pop
pop
fsubl
and
mov
int3
das
push
jle
sub
sbb
cmp
mov
xchg
aaa
aam
push
in
enter
xor
mov
add
sti
and
jp
lahf
cmpb
mov
add
insl
jl
cld
mov
mov
xchg
addb
testb
jge
rcrb
imul
rclb
sarb
push
stos
or
pop
inc
movsb
xor
sbb
lock
xchg
jb
adc
push
jmp
aam
notl
cmp
out
icebp
pop
lahf
jae
push
mov
jno
sub
cmp
adc
mov
out
stos
mov
xor
incb
popa
sbb
xchg
imul
cmp
mov
dec
cmp
push
and
loopne
cmp
lcall
push
jp
hlt
push
push
adc
mov
cmp
add
in
pop
iret
push
movaps
mov
lcall
push
je
add
inc
push
dec
adc
push
pop
push
dec
mov
jbe
mov
push
sarb
fdivrs
std
pop
sub
xchg
mov
add
aas
aam
insb
sti
shr
loopne
cmp
nop
test
pop
int3
loope
pop
pop
mov
sbb
mov
popl
scas
fadd
inc
adc
imul
inc
add
rorl
jecxz
fld
sbb
ds
jecxz
add
shrb
out
dec
mov
push
mov
test
lods
sahf
inc
shll
xchg
push
icebp
inc
jmp
shr
lock
push
mov
mov
jle
cmp
inc
outsb
cs
dec
mov
jns
pop
inc
in
jecxz
pop
mov
outsb
jmp
mov
push
icebp
out
fstp
aas
pop
mov
xchg
jbe
xchg
out
cs
pop
cmp
std
xor
popf
je
xchg
pop
sub
mov
stos
mov
push
xchg
int
sbb
mov
push
ds
gs
cld
and
aaa
push
or
ss
faddl
insb
lret
test
push
jl
test
inc
jp
mov
cmpsb
pop
int3
cmp
pop
mov
test
mov
icebp
inc
loop
jbe
adc
mov
mov
mov
mov
xchg
inc
jb
arpl
mov
mov
pop
sbb
pop
xlat
pop
sub
pop
into
cmp
adc
mov
cld
sub
mov
xchg
out
ret
jb
cltd
stos
dec
pop
xchg
rcrb
pmullw
pusha
pop
icebp
dec
je
insb
mov
sub
jo
repz
cltd
xchg
sbb
popf
xchg
dec
cmp
lret
jg
sub
pop
push
mov
cmp
test
xor
cli
sub
insl
int3
sub
push
sti
inc
test
call
lods
dec
lock
cld
inc
adc
mov
add
call
loope
sbb
adc
jo
aad
mov
add
mov
repnz
mov
push
adc
pop
lds
push
testl
out
insl
int3
in
xor
mov
loope
dec
xchg
icebp
push
aad
jbe
nop
es
ss
call
sahf
cmp
mov
out
adc
jg
inc
inc
adc
stos
ret
mov
mov
mov
lea
out
loope
jne
pop
dec
movsb
inc
xchg
add
inc
sub
bound
fdivrs
lds
xor
sub
repz
sti
or
dec
icebp
push
leave
inc
loop
out
out
mov
jmp
lcall
cmp
movsl
cmp
loope
ss
ja
pusha
and
aaa
shlb
outsl
rcrb
dec
pop
adc
cmpsb
pop
jb
pop
nop
push
ss
push
je
push
and
add
xchg
popa
mov
mov
movsl
scas
sti
fisttpll
jne
popf
push
pop
jp
inc
sbb
sahf
lea
sbb
cmp
sub
xor
add
jge
jmp
scas
aaa
xchg
push
xchg
push
outsl
out
pushf
sbb
xchg
stos
adc
xchg
ret
mov
sbb
cli
gs
sub
adc
cli
int
mov
cwtl
mov
out
cpuid
insb
jns
movsl
pop
rcrl
adc
ds
xchg
aam
sahf
fs
fdivl
push
mov
xchg
shlb
push
out
xor
std
cmpsb
in
ja
dec
and
jp
push
aaa
jl
movb
xlat
mov
inc
pop
notl
sbb
in
jb
popa
in
test
sbb
pop
and
in
cmp
inc
insb
jns
les
test
mov
movb
sub
add
mov
xchg
loop
dec
pop
or
dec
sub
push
pop
inc
ss
pop
sbb
mov
imul
stc
mov
nop
stos
repnz
jb
push
popa
out
jnp
stos
dec
cld
inc
inc
cwtl
cmp
pop
push
iret
aaa
imul
xor
mov
es
mov
adc
push
jbe
xlat
das
scas
mov
xor
and
mov
icebp
add
jmp
cli
inc
adc
inc
fistpl
lahf
push
sbb
popa
cwtl
insl
jno
mov
ljmp
lock
push
enter
pusha
sti
dec
ss
add
int
loopne
pop
mov
in
je
in
lods
popa
into
add
cwtl
stos
jbe
push
pop
mov
xchg
sub
inc
sbb
imul
inc
data16
cmp
pop
scas
pop
ret
mov
fs
movsl
out
xor
push
es
sbb
adcb
les
mov
outsb
je
cmp
into
scas
xchg
jno
es
mov
daa
test
push
in
mov
add
add
mov
cmp
mov
cmp
jle
and
divl
sahf
push
mov
or
insl
stos
jno
push
loope
mov
mov
adc
sub
pop
xchg
inc
jge
mov
adc
test
mov
adc
insb
push
lcall
pushf
scas
popa
jbe
sbb
inc
imul
mov
mov
xlat
cmp
nop
pop
add
sub
xchg
jl
cld
subb
jo
mov
dec
add
aaa
in
imul
fnstcw
cmp
sbb
ds
scas
lea
mov
xchg
cmp
movsl
pop
lea
cltd
lds
scas
mov
ds
pop
sbb
mov
cli
xor
pop
aaa
jne
pop
xorl
stos
xor
fnstsw
arpl
push
add
sub
orb
pop
movsb
aaa
insl
nop
insb
out
ret
sub
into
pop
lcall
bound
pop
iret
pop
imul
pop
loope
pop
sbb
jg
push
popf
repz
push
sbb
lret
enter
jnp
jb
stos
cmpsl
lret
jb
pop
mov
mov
loopne
inc
js
jno
pop
add
mov
shlb
loop
xor
cltd
insl
imul
xchg
mov
in
fildl
stc
into
frstor
lret
out
dec
xor
imul
inc
push
adc
pop
pop
cmp
inc
cmp
stc
lcall
xchg
fmull
aas
pop
imul
and
pusha
add
xor
pop
sti
mov
adc
gs
lret
sbb
pop
imul
rol
add
sbb
sbb
dec
add
popa
movsb
lret
mov
mov
aaa
cmp
in
in
stos
shlb
mov
pushf
pop
ds
sub
pusha
xchg
sbb
hlt
inc
push
or
inc
jmp
std
or
mov
cmp
les
lea
mov
ret
mov
push
fs
cs
push
push
inc
aaa
xchg
fwait
jl
sbb
sub
push
ret
into
sub
mov
cmc
mov
pop
sbb
xchg
fisubrs
mull
or
pop
inc
sbb
xchg
add
in
mov
mov
ret
nop
and
add
loope
mov
mov
pop
shll
inc
int3
mov
pop
das
dec
or
out
mov
mov
jnp
mov
push
dec
cmp
cltd
sub
mov
xor
pop
cmpsb
std
aaa
aas
imul
test
inc
mov
mov
ss
dec
and
mov
inc
push
inc
flds
inc
adc
fimuls
cs
sub
fsubl
rorb
imul
and
daa
lock
call
push
jle
xor
sbb
shl
and
mov
pop
in
testl
call
bound
rcrb
xchg
jg
lahf
in
loope
or
arpl
mov
stos
lds
arpl
aad
aaa
push
hlt
das
incl
outsl
inc
sahf
jp
pusha
pop
loop
or
icebp
add
cmpsl
mov
mov
mov
in
inc
clc
pop
sbb
xchg
icebp
pop
pop
mov
mov
clc
sbbb
and
and
xor
or
dec
mov
push
pop
sub
fcomi
cmp
scas
pop
add
mov
loopne
pop
inc
or
mov
lret
inc
fwait
mov
push
lds
sbb
sbb
test
or
imul
loop
mov
and
test
repnz
mov
mov
and
and
or
jbe
mov
out
adc
pusha
xchg
mov
std
out
mov
outsb
std
pop
sbb
jl
or
sbb
jecxz
jge
out
out
pop
xor
adc
int3
repnz
sub
mov
xor
cmc
pop
jmp
and
fcoml
xchg
fcompl
ret
add
inc
pop
popl
add
sbb
orb
add
out
jmp
lock
fucom
dec
pop
jbe
mov
mov
pop
cli
mov
jle
xor
xchg
subb
lret
lock
fwait
repnz
std
pop
and
xchg
inc
and
loope
mov
out
dec
push
jmp
int
fstpl
shll
dec
fsts
inc
jge
xor
scas
lret
add
dec
add
gs
outsl
fs
ret
loope
or
pop
sbb
and
test
stc
pop
pop
test
and
ljmp
jmp
mov
aaa
in
mov
push
push
sbb
push
lcall
push
iret
outsb
and
lcall
sbb
ja
cmpl
xchg
mov
popa
in
aaa
outsl
inc
repz
push
rorb
xchg
ss
scas
cmp
pop
test
sbb
mov
cld
mov
xor
xchg
inc
mov
jno
cmp
aaa
adc
mov
cmp
jae
test
sti
addl
dec
xchg
dec
and
lods
mov
sub
xchg
popf
sbb
fnstcw
sbb
insb
lahf
adc
daa
adc
pop
jns
cmp
pop
adc
xchg
mov
ss
add
fmuls
insl
jge
sbb
fstpt
ljmp
inc
and
sub
mov
push
sbb
std
hlt
jne
cmp
cmpsl
aas
pop
pop
jl
das
add
sbb
xchg
dec
rol
imul
fmulp
subl
xchg
xor
add
sbb
add
jns
jmp
mov
mov
pop
loope
rcrl
push
icebp
mov
sub
adc
imul
sub
mov
xor
frstor
cmpsl
or
fidivl
xchg
or
jle
dec
addr16
add
fsubrs
push
pop
xchg
dec
mov
xorl
cwtl
pop
mov
mov
movsb
into
iret
icebp
arpl
sbb
aaa
call
mov
pop
insl
outsb
dec
pop
movsl
or
into
cmp
cltd
sbb
pop
nop
dec
jo
mov
adc
cmp
fucomp
xchg
ljmp
shlb
pop
lock
jg
call
or
add
imul
out
lods
or
aaa
xor
xchg
clc
xchg
pop
sbb
dec
jae
push
inc
movsl
xchg
inc
add
popf
cmp
push
or
sbb
addr16
fmuls
sub
dec
or
pop
dec
xor
test
stc
dec
xchg
sub
adc
pop
sbb
pop
mov
lcall
and
inc
in
aaa
enter
xor
rorb
lcall
mov
pusha
mov
push
mov
lods
dec
lock
add
out
dec
xor
cmp
rcrb
call
loopne
and
stc
xchg
push
pop
in
inc
jnp
jmp
adc
addr16
sbb
pop
add
pusha
push
jo
cmp
scas
lcall
test
fstpt
jmp
addr16
cmpsb
adc
lahf
stos
int3
dec
lret
daa
jbe
mov
push
pop
rolb
pop
outsb
inc
and
js
pop
pusha
leave
lock
clc
inc
outsl
cmpsl
call
fbstp
shr
sar
subl
mov
add
lds
int
push
push
sti
int3
imul
and
mov
mov
jmp
add
cmpl
push
out
das
xor
lret
rorb
aam
das
or
scas
mov
inc
adc
jle
into
in
and
xor
adc
mov
shl
pushf
sub
push
cmpsl
pop
pop
adc
push
dec
hlt
cwtl
in
inc
sahf
and
imul
lea
mov
adc
ror
sbb
nop
or
mov
insl
scas
push
ret
popa
daa
fmuls
cmp
and
pop
ss
cmpsb
pop
add
into
aam
mov
sub
es
jp
mov
cltd
dec
pop
shll
dec
pushf
scas
xor
sub
orb
divl
lret
into
xchg
hlt
cmpsl
ss
stos
dec
arpl
cmp
mov
fwait
mov
mov
mov
inc
mov
dec
arpl
test
or
pop
sub
jl
push
sub
adc
lock
aas
fnstcw
andb
sbb
push
cs
mov
idivb
mov
mov
pop
addl
dec
cmp
jg
dec
test
bound
pop
mov
mov
ss
or
imul
out
in
jecxz
push
cmp
pop
dec
mov
mov
sub
movsl
lcall
loope
in
pop
adc
lea
cmp
mov
mov
xchg
iret
lcall
push
inc
in
scas
mov
mov
shr
adc
pop
sub
les
ljmp
pop
mov
inc
jo
pop
idivl
lods
mov
mov
cmpsb
mov
jecxz
and
sub
dec
popa
je
stos
sbbb
hlt
lret
out
ljmp
dec
jg
xchg
push
xchg
ss
jnp
lods
mov
or
xor
fwait
mov
mov
mov
push
jnp
fstl
mov
mov
ret
addb
rol
lahf
mov
pop
jecxz
das
xchg
rol
push
push
sub
inc
lcall
test
movsl
lcall
loope
mov
loope
insl
jae
fs
andb
out
jmp
jg
sbb
mov
dec
cmp
adcl
fiadds
dec
pop
outsl
sahf
push
aad
sbb
push
xor
fmul
call
outsb
sbb
mov
adcl
sub
loop
popa
les
xchg
and
insb
pop
add
insb
mov
in
popf
pop
pop
psadbw
es
cmp
inc
push
out
sbb
dec
mov
mov
xchg
sti
jmp
mov
mov
and
inc
lret
pushf
cmp
cltd
jle
jae
mov
movsl
mov
insl
xchg
ret
pop
addr16
scas
jo
aas
aad
xchg
mov
push
ret
cli
fwait
in
hlt
push
mov
adc
out
mov
dec
outsb
cmp
push
fstl
and
out
mov
dec
enter
sub
push
popf
aam
mov
js
dec
mov
push
cmpsl
ja
mov
lea
ss
add
pusha
sub
lahf
imul
mov
pop
and
mov
ja
add
loope
add
into
cwtl
repnz
xchg
pop
cmp
cs
into
je
rcrb
pop
mov
mov
lret
add
mov
fistpl
ret
cmc
inc
ja
sub
jns
adc
jb
push
sbb
fistpll
imul
scas
imul
repnz
push
mov
xchg
mov
es
das
ss
mov
xchg
aaa
rolb
cs
xchg
jo
push
mov
mov
xlat
dec
xchg
sub
or
arpl
lret
es
loope
insb
aas
ja
mov
jp
int3
and
cld
popa
ss
shll
jns
dec
push
loope
cmp
sub
movsl
pop
out
push
mov
sbb
pop
mov
mov
jb
cltd
ja
cmpsb
pop
scas
ds
mov
push
pop
clc
pop
adc
inc
xlat
loope
imul
fstpl
cs
call
cmp
orb
lock
mov
inc
movsl
andl
jbe
cmp
pop
jnp
movsl
scas
sti
jae
and
sub
pop
fs
pop
push
adc
and
sub
lret
shrl
cmp
lcall
dec
inc
loope
clc
int3
sub
pusha
pop
cmp
popa
sub
jns
dec
add
mov
xchg
add
dec
xchg
cmpsl
sub
and
pop
and
mov
fsubrs
lret
popf
test
das
cwtl
push
imul
lret
adc
popf
xchg
je
xchg
mov
shlb
insb
mov
xchg
mov
in
mov
cmp
cmpl
add
inc
or
std
inc
xor
jecxz
aas
adc
dec
pushf
pop
pop
imulb
add
pop
aam
mov
into
add
lods
sbb
pop
push
arpl
imul
mov
pop
mov
ja
aas
loop
push
dec
int3
add
mov
jns
or
in
in
popf
sbb
ret
pop
fisttpl
cmp
xlat
cmpsb
xchg
enter
cli
subb
inc
or
fdiv
mov
or
xchg
mov
xchg
cs
aaa
xor
pop
cmpsl
sbb
xor
pop
sub
adc
bound
idivb
dec
fadds
and
push
push
sbb
lcall
xchg
xchg
das
mov
pop
mov
dec
cmc
mov
adc
and
push
push
enter
jno
mov
push
mov
mov
and
inc
mov
xor
pop
lahf
rolb
pop
push
cld
cltd
mov
les
inc
repz
xchg
mov
shrb
scas
inc
xchg
sarb
out
push
loope
pop
in
stc
lahf
and
ret
pop
push
dec
mov
dec
ss
jnp
stos
repz
rolb
imul
fidivrs
sub
out
inc
adc
mulb
inc
arpl
pop
push
mov
mov
in
pusha
jg
in
leave
arpl
cld
mov
pop
pop
fsub
sbb
dec
add
push
adc
push
dec
hlt
fsubr
push
arpl
add
in
cmpsl
adc
sub
add
gs
sbb
cmp
dec
cs
mov
jb
sbb
jno
loope
mov
xorb
jbe
call
mov
jbe
mov
xchg
or
dec
lea
add
es
push
xchg
sbbb
mov
ss
xor
test
std
add
inc
cwtl
cs
cmp
xchg
lea
insl
clc
sbb
repz
sbbl
stos
outsl
push
inc
pop
xchg
mov
inc
pop
insb
and
cmp
cmpsl
loopne
sbb
xor
mov
in
pop
cld
mov
aam
push
jno
cmpsb
adc
mov
mov
mov
rcpps
cltd
pop
sbb
mov
sets
lods
subb
xor
faddl
aaa
je
cmpsb
push
cmp
cmp
cld
sub
sub
sahf
fldl
lock
lds
xchg
daa
mov
or
push
and
aaa
xchg
fsubp
or
in
rcrb
test
xchg
adcb
mov
cmp
pop
fiadds
inc
jnp
pop
icebp
call
dec
pop
or
test
mov
add
pop
lea
decb
ja
mov
js
call
mov
xor
lea
xlat
mov
pushf
pop
jp
jbe
in
in
xorb
inc
ds
in
cmp
xor
mov
loope
mov
fsubl
in
mov
pop
jmp
je
vpmacssww
out
xchg
adc
sbb
loopne
mov
sbb
pop
mov
fldl
addb
push
mov
fst
je
push
aad
sbb
lock
mov
data16
pop
popf
js
jns
push
jb
in
and
test
mov
sti
insb
mov
mov
pop
cmp
lahf
jne
sti
mov
sub
sbb
pop
push
iret
jne
divl
dec
sbb
jmp
sub
or
push
sub
loope
pop
dec
xor
test
repz
pop
sbb
mov
sub
xor
cmpsb
dec
loop
test
pop
mov
inc
mov
arpl
push
jns
mov
loope
and
leave
fxch
aaa
xchg
adc
mov
scas
dec
fsubrs
dec
fnstenv
inc
or
imul
cmpsl
pop
mov
sub
push
xchg
pop
mov
cmpsb
push
push
shlb
push
lret
cmp
push
pop
adc
rcll
stos
adc
push
pop
cwtl
or
push
pop
loopne
pop
xchg
mov
inc
test
divl
push
push
mov
sub
call
add
pop
mov
pop
out
cmpsb
fnstcw
mov
in
ds
pop
xor
cld
stos
adc
cmp
frstor
nop
add
dec
add
pop
cmp
ja
and
in
ss
stc
cwtl
push
xor
pop
push
sbb
popf
jnp
push
mov
cmpsb
jmp
sub
xchg
inc
rcl
pushf
js
outsb
mov
std
aaa
jecxz
pop
lock
add
pop
xor
push
mov
js
scas
pop
cmp
lret
imul
mov
loop
stos
shrl
inc
ficoms
mov
mov
fwait
mov
lods
add
shl
inc
rol
lea
pop
clc
stos
call
adc
lret
arpl
add
lret
out
out
imul
or
adc
fistl
mov
es
fldcw
pop
cmp
inc
sahf
andl
pop
cs
scas
and
push
ja
push
inc
fldenv
mov
mov
cmp
rcrl
inc
jge
pop
push
es
nop
sahf
adc
int
pushf
add
std
xor
xor
lods
jecxz
repz
aaa
int
mov
cs
cmc
movb
push
repz
pop
mov
addb
push
loop
sti
addb
ds
sbb
inc
xor
daa
call
cmpsl
dec
mov
and
shrb
mov
fsubs
lods
or
aaa
lahf
xor
movsb
es
jno
stos
xchg
jmp
imul
or
subb
js
test
jge
cmp
aad
cmp
popf
sub
xor
xor
icebp
adc
sbb
shrb
mov
cmp
pop
fsubl
push
loop
mov
sub
and
mov
mov
push
cmp
cmp
add
mov
cmpsb
xor
and
sarb
lcall
or
jp
cli
or
xchg
sub
inc
mov
leave
and
and
out
in
rorl
fnstenv
mov
sbb
dec
sbb
mov
cmp
push
cmc
xchg
mov
mov
inc
neg
sub
push
cmp
inc
xchg
sub
cmp
mov
lahf
test
daa
and
xchg
negb
fstl
or
or
stos
out
fwait
push
aam
lods
add
dec
pop
xchg
scas
jae
inc
out
icebp
and
test
pop
out
cli
loope
rolb
sub
jg
sbb
andb
leave
sub
dec
ss
mov
adc
mov
mov
push
mov
lds
dec
test
movsl
add
add
sub
nop
xchg
in
clc
push
js
sub
mov
data16
scas
ljmp
popf
sub
pushf
inc
rorl
dec
fstl
sar
xchg
sarb
add
ss
scas
cmpsb
lcall
push
mov
fxam
les
imul
iret
pop
and
std
outsb
sbb
cmp
sbb
scas
iret
push
xor
fadds
xor
add
into
dec
pop
xchg
lods
hlt
lcall
cli
mov
cmpsl
test
outsb
out
sbb
stc
mov
out
push
xchg
aaa
loopne,pn
pop
xchg
mov
stc
cmc
jnp
shr
dec
mov
adc
fidivrl
lock
popa
negb
rcr
bound
push
enter
push
jge
daa
lcall
in
cs
pop
cmp
ss
mov
sti
xor
out
loop
imul
mov
xchg
movzbl
sbb
jne
push
call
dec
sbb
lcall
or
repnz
outsl
outsl
ljmp
ss
push
xor
adc
ljmp
cmp
adc
xchg
xor
jns
aas
push
push
dec
aas
jne
mov
out
repnz
add
sbb
aas
adc
inc
aam
bound
or
push
jb
in
mov
popa
sbbb
arpl
pop
cmp
ss
loop
loope
movsl
sbb
shl
jle
insl
in
jns
jno
arpl
inc
pop
arpl
jb
mov
in
jle
mov
rcll
cmp
push
sub
orb
lcall
popa
mov
or
push
sub
mov
cmp
push
push
sub
fucom
add
adc
or
xchg
cmp
ret
xchg
and
inc
rcl
data16
ficoml
mov
cmp
in
dec
xor
inc
and
dec
pop
sbb
imul
mov
ljmp
pop
and
add
stos
out
mov
iret
jno
into
push
test
int
push
loope
dec
shrb
push
fcoms
push
repnz
int3
cmp
cmp
mov
test
data16
jns
fimull
incb
sub
rcrb
stc
pop
sub
xor
dec
je
bnd
aaa
add
pop
dec
sub
xor
repnz
rolb
mov
push
in
adc
jno
in
stos
mov
lcall
repz
add
add
inc
icebp
pop
movsl
fcomp
roll
inc
mov
pop
jno
lds
loope
popf
shll
xchg
aad
in
or
pop
pushf
enter
subb
clc
out
adc
pop
inc
repz
lret
in
inc
xchg
jge
dec
sub
dec
aam
sub
int3
lahf
adc
cmp
aaa
jb
insb
jp
out
negb
push
jecxz
cltd
lods
ret
mov
push
dec
out
cmp
mov
add
sbb
roll
sub
pop
lret
mov
or
dec
nop
push
mov
shr
popf
jg
ss
dec
sarb
shr
lcall
shrl
notb
cmp
adc
lds
imul
push
leave
or
jns
mov
sbb
scas
outsb
int3
and
sub
repz
data16
mov
add
inc
dec
pop
adc
into
imulb
fsubs
sbb
das
jb
sbb
mov
pop
add
clc
rcl
mov
jmp
loope
mov
xchg
dec
das
aam
out
cmp
aaa
xchg
mov
sbb
sub
xor
sbb
jnp
xchg
popf
comiss
cli
jno
ret
ror
notl
cmp
mov
cmp
ds
in
fcoms
and
jmp
dec
in
stos
inc
pop
jmp
sub
adc
fyl2xp1
fstpt
ss
mov
aam
sub
push
pop
adc
lahf
rcrl
adc
jbe
xchg
and
bound
dec
mov
push
data16
dec
push
sbb
pop
std
icebp
mov
jle
int3
mov
mov
mov
mov
popa
test
pop
int3
ds
enter
add
in
movsl
add
sbb
cmp
sbb
lret
lret
js
out
xor
jl
jb
rcrb
sub
ds
jle
mov
out
loop
ret
sbbb
cmp
xor
nop
mov
mov
or
les
fucom
pop
xchg
cmc
cltd
jbe
fwait
stos
sahf
pop
and
pop
add
xchg
lods
stos
cmp
xor
rclb
dec
int
dec
push
sub
les
cmc
xlat
cmp
ret
jmp
cmc
lcall
cmp
das
mov
shlb
call
xlat
aad
xor
push
and
sbb
enter
xor
lret
push
inc
or
loope
js
lcall
cmp
push
lret
sbb
in
test
pop
test
xchg
cli
and
lock
pop
or
testb
insl
pop
loope
add
daa
add
inc
jo
mov
sub
aaa
sub
fistpl
mov
fisubs
mov
mov
js
cs
mulb
rorl
lock
aas
test
test
pop
fnstcw
cmp
les
and
aaa
or
xchg
mov
addr16
sarb
inc
or
pop
lods
loope
pop
adc
jge
mov
loop
mov
shll
inc
pop
jl
push
jno
mov
outsb
cltd
std
clc
icebp
mov
and
push
js
aaa
jbe
in
dec
or
sahf
movsb
aaa
jl
sti
add
pop
fwait
loope
inc
mov
push
mov
push
scas
and
cmp
inc
inc
dec
pop
in
jmp
jge
pop
into
and
push
push
mov
and
in
je
xor
jle
pop
push
mov
adc
dec
add
aas
pop
fwait
push
sub
mov
cld
jp
ss
stos
add
bound
pop
mov
adc
std
in
dec
repz
mov
mov
xchg
in
jno
dec
out
inc
pop
push
adc
imul
sbb
mov
cld
movsl
repnz
not
sbb
pop
inc
in
mov
cmp
pop
add
jg
pop
inc
jne
scas
fldt
les
aaa
mov
clc
add
in
sub
pop
jmp
mov
mov
mov
mov
and
jl
push
std
dec
push
and
movsl
insl
mov
fldl
sbb
fucomi
mov
add
stc
cmpsb
out
aas
pop
pushf
xor
mov
imull
inc
stos
scas
into
jle
jg
push
jl
std
imul
aas
xchg
scas
pop
test
shll
pusha
dec
sahf
into
sti
lock
neg
sarb
lods
fistps
pop
cmp
das
rcll
loope
mov
and
imul
sub
fxch
cltd
ret
xor
pop
dec
sbb
fmuls
cmpsb
in
fs
cmc
jno
frstor
pop
inc
das
and
aam
sbb
xchg
and
int3
xor
call
mov
hlt
mov
sbb
fdivrs
or
cmp
arpl
pop
stos
aad
lcall
movsb
sbb
test
dec
aam
icebp
popf
cld
sub
dec
outsb
pop
jno
out
cmp
jecxz
scas
cli
push
out
enter
dec
fisubl
leave
daa
or
or
shrl
mov
pop
pop
sahf
pop
mov
pop
filds
stos
mov
sbb
test
or
les
test
int
enter
pop
xchg
push
jb
push
jne
xchg
js
sub
mov
pusha
iret
cmp
cmp
push
sub
cmp
add
fildl
sbb
dec
sbb
pop
stos
daa
push
js
repz
cmpsb
sahf
xchg
jo
out
data16
jp
pop
rcr
inc
adc
in
hlt
lcall
es
orl
fdivl
inc
mov
fisttpl
push
push
dec
outsb
in
mov
dec
xchg
divb
pop
std
dec
push
push
pusha
in
enter
mov
bound
je
add
mov
fs
dec
das
xor
int
xchg
andb
xor
loope
adc
leave
jo
mov
dec
jg
icebp
std
and
std
mov
out
sub
mov
fistpl
pop
rclb
adc
aad
pop
imul
mov
add
push
dec
test
pop
pop
and
aaa
ret
push
xor
cs
and
or
xlat
dec
lods
and
fcomi
lret
jl
aas
dec
push
cmpsl
and
lods
movsb
aad
mov
mov
rcll
out
pop
imul
lock
outsl
and
jns
jmp
inc
cmp
outsb
and
inc
jecxz
dec
cltd
int
sbb
stos
xor
mov
inc
xchg
cli
adc
and
push
mov
cmp
adc
pushf
push
inc
lock
sbb
or
cmpsb
sub
insl
sub
jne
dec
lods
enter
rclb
int3
ss
lahf
iret
fucom
out
ljmp
push
aaa
and
loope
lea
push
mov
mov
adc
mov
xchg
inc
mov
jns
push
adc
push
pop
out
mov
notl
lods
jb
sahf
mov
jmp
jle
pop
xor
jno
in
sti
cmpsl
lods
jmp
ss
cmpsl
out
into
stos
xchg
fisubl
repz
mov
pop
icebp
fwait
jle
and
std
mov
lret
mov
jb
cmp
data16
in
pop
sub
add
pop
data16
movsl
mov
addl
jmp
dec
cltd
idivb
and
push
mov
dec
or
and
dec
mov
jecxz
xlat
ljmp
mov
pop
lock
pop
jmp
fwait
dec
in
dec
mov
xchg
ret
mov
mov
and
in
fneni(8087
outsb
sub
jne
push
popa
or
inc
sub
test
sti
jl
mov
movsl
fndisi(8087
aas
cltd
mov
or
inc
cmp
out
std
add
in
fwait
and
inc
jecxz
mov
pextrw
sbb
add
jecxz
fldenv
stos
orb
push
imul
sti
inc
pop
fldcw
adc
mov
pop
loopne
cmp
mov
mov
and
sti
jp
and
add
das
mov
sbb
jb
cltd
ret
push
mov
outsb
sbb
pop
sub
jmp
lret
es
fnstenv
or
imul
xor
cmp
insl
loop
bound
gs
popf
mov
test
xor
pushf
and
outsl
loop
fcmovb
test
sub
dec
dec
aad
pop
or
les
ss
stc
mov
aaa
mov
movsb
mov
sbb
bound
popf
adcb
add
cmp
adc
jmp
jle
movsl
push
sbb
mov
stc
or
xchg
adc
and
lret
jl
movsb
cmp
inc
xchg
punpcklwd
mov
in
out
or
aaa
mov
xchg
lock
mov
sbb
sub
ja
decb
pop
inc
sarb
dec
daa
jns
scas
scas
add
mov
xchg
cmp
stos
push
or
movsb
std
enter
gs
popa
xor
sub
cmpsb
pop
sbb
aaa
les
lea
je
jne
outsb
lret
fisttpl
mov
sub
mov
sbb
pop
lcall
mov
xsaves
dec
stc
ret
dec
movsl
jle
sahf
in
pop
dec
sti
sbb
daa
pusha
in
sbb
mov
aaa
movsl
sahf
push
xchg
pop
push
popa
cmp
push
bnd
xor
or
test
pushf
mov
sbb
cmp
or
arpl
adc
in
arpl
movsb
scas
dec
push
cmp
repz
sbb
call
ds
inc
test
xor
inc
in
outsb
movsb
sti
mov
xor
into
inc
hlt
int
mov
mov
lcall
dec
cmp
arpl
shll
jg
sub
xor
bound
orb
dec
insl
shll
fwait
test
cmp
aam
movsl
xchg
bound
outsb
rcrl
or
je
mov
inc
out
dec
cmp
int3
insl
xchg
enter
add
int3
sbb
xchg
in
xchg
xchg
cmpb
jecxz
insl
mov
dec
loop
cwtl
dec
jle
ret
push
or
rol
repz
xchg
xor
popf
pop
adc
or
push
outsb
cmp
cmc
arpl
xor
jle
or
push
push
outsb
stc
mov
jle
push
jns
mov
out
iret
cmpsb
pop
out
dec
lods
cltd
inc
addr16
hlt
inc
xchg
in
xor
xchg
std
cwtl
icebp
mov
xlat
testl
push
stc
in
xchg
dec
loope
rcrl
test
gs
add
js
outsb
mov
ret
enter
cmp
out
push
pop
fwait
mov
bound
ret
aas
arpl
adc
imul
mov
popf
sub
jnp
cmp
jb
mov
sti
adc
ret
jnp
bound
mov
fsubrp
inc
bound
dec
adc
xchg
mov
add
in
pushf
cmpsb
cmp
aam
test
xor
addr16
fists
cmpsl
cli
pop
ret
jl
jge
lods
mov
imul
xchg
fmul
sbb
fidivrs
fiaddl
aaa
cmc
pushf
rclb
sbb
lds
cmp
cmp
ss
fldenv
in
pop
aas
or
push
cmp
sahf
dec
sub
hlt
icebp
and
aad
dec
xchg
aam
mov
and
push
lret
or
xchg
mov
cmpsb
into
push
ret
push
mov
jmp
sbb
adc
enter
pushf
and
addr16
jmp
cmpsb
ss
fistpl
xchg
movsl
mov
iret
jmp
hlt
xor
mov
in
xchg
inc
mull
sbb
sti
dec
dec
mov
sbb
inc
push
xorl
icebp
mov
test
mov
shll
mov
adc
jmp
lea
ret
mov
test
ret
test
mov
ss
mov
add
inc
push
jmp
and
push
lret
pop
push
mov
dec
cmpsb
or
cmp
enter
sub
and
or
push
push
aaa
jg
push
rcrl
sbb
push
xor
mov
out
fldt
or
div
sbb
mov
mov
jle
sarl
and
adc
mov
xchg
adc
jnp
push
xor
xchg
aam
dec
outsl
cmpsl
das
push
add
adc
inc
add
cmp
arpl
xchg
xchg
push
xchg
in
int3
cmp
stos
stos
cmpb
fiadds
sbb
jmp
xlat
cwtl
stos
sti
cmpsl
ss
idiv
in
test
test
xor
stc
xor
adc
movsl
cmp
fucomip
lret
popf
lock
inc
inc
mov
inc
mov
push
pop
jmp
xchg
in
aaa
cmp
sbb
inc
dec
inc
push
pcmpgtw
xor
dec
dec
lahf
ret
call
and
enter
mov
out
lea
xor
sti
inc
push
pop
inc
adc
cwtl
rcrb
bound
mov
jle
mov
scas
in
jo
adc
push
pop
imul
movhps
out
data16
mov
dec
and
mov
fs
push
out
jecxz
ss
pop
cmpsl
mov
mov
mov
shl
push
cmp
dec
and
sbb
fnstsw
mov
cmpsl
push
in
incl
mov
jbe
cmp
in
pop
ljmp
fwait
fwait
imul
fidivrs
cmpsl
dec
enter
aaa
sub
ljmp
and
test
rcrb
or
stos
sub
xor
pop
mov
inc
adc
push
pop
xor
pop
bound
push
adc
cmp
in
ljmp
push
push
aaa
ss
push
dec
push
xchg
cmp
loope
push
into
aam
cmp
outsb
mov
xchg
ret
popf
outsb
add
lcall
push
popf
or
lea
imul
sub
pop
das
aaa
aas
jg
sti
in
pushf
dec
inc
enter
addb
cmpsl
data16
sub
mov
mov
aas
jecxz
cmp
outsb
popa
aaa
int3
ljmp
sub
popa
cmpsl
pop
inc
add
dec
xlat
sti
popf
push
sarl
pop
lahf
test
pop
dec
pushf
ret
inc
fsubrp
ror
lea
push
popf
xchg
shlb
aad
mov
lgs
ja
jmp
sbb
sti
push
clc
sarb
mov
push
shrb
push
xchg
movsl
cmp
xchg
sbb
pop
and
mov
test
outsl
xchg
pop
sbb
cld
push
sbb
jmp
jns
pop
test
and
fsub
add
push
jb
cmp
inc
pop
jo
repz
pop
cmp
loope
or
push
scas
negl
ss
ds
arpl
add
pop
pop
mov
fildl
jb
mov
sbb
fidivrl
mov
aam
dec
fistpll
insb
pop
rolb
js
movsb
fistps
jmp
dec
pop
xlat
enter
insb
lret
inc
push
ja
jne
fadd
movsl
rcrb
push
cmp
cmp
pop
and
ljmp
inc
or
add
scas
mov
jnp
enter
add
cmp
xchg
push
movsb
sub
mov
mov
bswap
push
mov
mov
aaa
mov
mov
test
mov
add
or
dec
sti
dec
pop
arpl
mov
mov
pop
mov
or
cs
jnp
sub
xor
imul
fsub
sbb
lock
in
jo
cltd
xchg
pop
mov
cld
stos
nop
adcb
repz
rclb
push
push
sbb
popf
push
ret
in
inc
xchg
aam
bound
inc
aaa
lahf
sub
fistpl
mov
scas
sahf
dec
icebp
das
mov
push
hlt
push
out
adc
mov
cmp
shlb
testl
jb
lds
jmp
std
mov
xor
sbb
popf
lock
dec
pop
cmp
jmp
cltd
aam
pop
pop
mov
xchg
xchg
xor
mov
xchg
mov
sti
js
in
add
dec
push
or
sub
and
xor
cltd
mov
enter
pop
xchg
enter
mov
loope
aaa
sbb
jbe
sbb
push
mov
das
add
fdivrl
xorb
inc
fwait
call
pop
mov
inc
or
fs
push
add
sahf
pop
imul
sahf
inc
mov
jnp
das
xchg
sbb
lods
jmp
ds
pushf
mov
mov
adc
cmc
sub
sbb
call
add
adc
push
lods
mov
dec
bound
cmc
test
aas
cmp
mov
ret
xchg
push
add
mov
aaa
repnz
ljmp
sub
js
jle
ret
mov
pop
mov
pop
ds
sahf
mov
jecxz
cmp
insl
rcll
jl
xchg
out
fildl
mov
mov
pop
lods
icebp
stos
in
aaa
scas
out
jnp
js
inc
pop
int3
lahf
mov
jle
push
loope
aad
mov
jae
pop
mov
push
inc
mov
mov
jb
pop
and
sbb
and
in
int
mov
pop
cmp
mov
fwait
ret
cltd
dec
cmp
test
notb
sub
dec
fisttps
mov
call
les
popf
push
outsb
fnstsw
imul
rorl
and
dec
push
jmp
in
pusha
xor
fnstenv
into
lret
fimull
movsl
outsl
push
js
cmp
call
punpcklbw
lds
test
ret
addr16
pop
faddp
jp
in
push
pop
fdivrl
add
movsl
in
mov
ret
call
fwait
pop
sbb
jne
xchg
enter
push
test
in
andb
scas
add
inc
mov
insb
mov
repnz
xchg
push
jno
movsl
aam
inc
mov
movsl
xchg
and
mov
ds
mov
xor
dec
push
ja
xchg
shlb
fwait
ret
shrl
ficoms
test
adc
cmp
popf
divb
jns
mov
aam
jp
inc
push
dec
test
pop
add
pop
inc
in
adc
das
scas
cltd
mov
xchg
cmp
scas
jo
mov
idivl
jo
arpl
push
mov
sbb
and
es
inc
adc
mov
fdivrs
pop
mov
mov
lods
jecxz
mov
inc
push
test
mov
cltd
les
inc
pop
loop
aaa
lods
inc
rorb
lea
pushf
loope,pn
and
push
inc
test
rorl
xchg
dec
or
jp
gs
sub
push
hlt
or
push
mov
xchg
dec
pop
in
stos
jno
rcl
psllw
lea
pop
mov
out
jb
in
adc
mov
fistl
cmp
lcall
xchg
inc
add
cwtl
sbb
fmull
dec
aaa
jnp
sub
loope
add
pop
xor
dec
adc
out
or
faddp
popa
adc
pop
xor
xlat
push
incl
lock
and
xor
in
cmp
add
faddl
rcrl
clc
or
and
test
xchg
dec
icebp
sub
cmp
xor
ljmp
ss
xchg
sub
sbb
mov
mov
cwtl
mov
je,pt
in
cmp
and
mov
lret
mov
clc
push
fwait
bound
push
and
les
pop
iret
dec
mov
xlat
cld
arpl
roll
leave
xlat
scas
ss
mov
xorb
lods
mov
adc
nop
sub
push
jbe
pop
fists
sbb
popa
xchg
push
push
xchg
scas
sbb
xor
xchg
mov
lods
and
lret
lcall
xchg
mov
addr16
inc
add
les
ss
lea
lock
fmuls
inc
ret
std
pop
jle
push
push
pop
imul
mov
scas
xor
push
aaa
adc
dec
or
mov
jo
jns
xchg
push
lret
dec
inc
and
subl
sti
adc
push
int3
dec
lods
push
push
shll
hlt
jb
pop
mov
sub
aaa
xchg
and
jg
sbb
cld
and
aaa
inc
fildl
jae
and
in
pop
pop
mov
inc
mov
bswap
bound
mov
inc
cmp
sub
adc
mov
sbb
dec
xorl
cmc
and
jbe
imul
or
mov
mov
addb
aaa
mov
sbb
out
fcomps
xor
psubw
dec
lret
pop
adc
aaa
mov
xor
pop
ljmp
std
sahf
into
out
in
adc
out
shrb
aam
mov
movsl
fisttps
cli
mov
or
stc
pusha
push
fistpl
or
sub
lock
mov
mov
fcomps
or
fcompl
lcall
movsb
mov
sub
sbb
and
ds
lods
adc
mov
pop
fnstsw
inc
xchg
cmpsb
and
jnp
lock
pusha
mov
inc
rcll
mov
lahf
fildl
ds
xchg
dec
out
mov
dec
jmp
and
xlat
dec
push
xor
rol
pop
xor
je
push
lcall
adc
push
cmp
pop
cmp
int
test
enter
out
mov
mov
xor
or
mov
dec
rol
insl
add
ret
test
call
mov
push
inc
aaa
or
dec
call
fcompl
jno
xchg
pop
cmp
scas
clc
in
mov
xor
mov
in
pop
mov
push
and
stos
sbb
icebp
pop
je
in
mov
jg
aam
dec
push
adc
push
imul
sti
mov
sbb
ds
inc
mov
pop
test
jle
in
and
stos
xlat
mov
add
push
rcpps
xor
outsb
sbb
test
xor
pop
fucomip
sbb
repz
push
mov
std
ja
pop
inc
pop
pop
jle
mov
xor
test
lret
sub
sbb
es
es
pop
add
ret
pop
push
fcoms
aaa
pop
adc
ficoml
into
shrb
mov
sbb
or
xchg
push
xchg
aaa
push
inc
outsl
push
pop
sbb
enter
movsl
push
in
sub
or
xchg
cmpsl
outsl
shrl
cmp
pop
pop
das
mov
lahf
sub
dec
push
daa
pushf
xchg
mov
adc
jo
in
or
adc
in
je
dec
andl
sbb
test
stos
pop
and
mov
cmpsb
inc
pop
jns
aaa
scas
xchg
movsb
je
cld
out
inc
adc
sbb
and
pop
nop
out
fscale
pop
scas
stos
sbb
mov
cmp
jno
stos
fxam
jge
mov
clc
cmc
dec
adc
xor
addr16
imul
add
jl
test
xchg
mov
inc
adc
aam
push
dec
and
test
loope
push
scas
cmpsl
mov
xchg
mov
push
aas
pop
out
inc
mov
xchg
xchg
lahf
fdivrs
iret
adc
fisttpll
adc
movsb
xor
fsubp
sbb
push
xchg
sbb
jo
pop
notb
or
imul
jb
das
xor
mov
sub
outsb
or
repnz
enter
std
adc
cmp
iret
out
jb
xchg
arpl
ss
jle
aaa
mov
xchg
cmp
adc
data16
and
adc
add
sbb
data16
test
inc
pop
cld
clc
fldcw
push
pop
cmp
cmpsl
mov
in
lock
nop
push
add
adc
jl
dec
imul
inc
ficoml
pop
adc
mov
sti
cld
sbbl
xchg
repz
jmp
cmp
jnp
adc
xor
lret
sub
dec
cs
sbb
mov
xchg
mov
and
push
fsubl
sub
mov
int3
cmp
aaa
cmp
aam
fnstenv
push
jle
enter
lret
ds
dec
xor
mov
lahf
stos
fwait
ljmp
mov
jg
cmpsl
std
stc
xor
aaa
jle
and
fwait
orb
push
cmp
out
and
pop
enter
sub
pop
mov
mov
outsl
or
fld
jmp
or
ficomps
jecxz
pop
les
rorl
call
test
jmp
adc
sbb
int3
js
xor
ds
js
inc
in
fdivrl
test
lods
dec
cmpsb
pop
mov
ret
push
and
cwtl
jl
mov
sarb
push
pop
xchg
loop,pn
push
imul
inc
js
adc
pop
iret
aaa
repnz
mov
aaa
in
inc
mov
or
loop
stos
xlat
outsb
pop
mov
jo
rolb
incb
stc
mov
test
mov
push
cli
pop
mov
cmp
fldl
repnz
pushf
dec
dec
sub
jae
xor
jle
mov
or
test
rcl
ja
jb
mov
and
xchg
jnp
adc
push
cmpsb
mov
das
cmp
adc
nop
fsubr
xor
xchg
inc
stos
jbe
inc
cmp
mov
adc
inc
loope
sbb
cmp
dec
xchg
outsl
mov
xlat
pop
jb
sbb
dec
inc
jnp
rol
aaa
lock
jecxz
test
fidivrs
dec
fnstcw
sub
stos
outsl
sar
and
sub
rorb
inc
ljmp
nop
mov
outsl
in
popa
jmp
lahf
xor
adc
xchg
movsl
or
lret
mov
or
arpl
pop
cltd
out
sub
sbb
les
loope
test
aas
divb
into
loope
jmp
pop
addr16
call
xchg
push
inc
stc
xor
cmp
xchg
push
icebp
add
std
dec
pop
jmp
sub
adc
xchg
mov
stc
lahf
mov
shlb
rcrb
mov
pop
adc
add
fs
gs
mov
test
fildl
pop
dec
jmp
sbb
das
scas
ss
ss
mov
and
cld
loop
lock
push
adc
push
pop
mov
and
int3
xor
jbe
lea
sub
dec
inc
jbe
std
nop
add
imul
xchg
pusha
sbb
jo
nop
popa
sub
sub
inc
out
outsl
cmp
movsl
sbb
inc
mov
sti
mov
pop
pushf
jmp
push
lods
jbe
add
jae
xsha1
cmpsb
int3
fdivrs
cmp
andb
pop
movsl
jge
push
cmpsl
and
repnz
rol
cld
mov
test
imul
mov
mov
push
inc
popf
add
test
cmpsl
add
rorl
dec
and
lea
cmpsb
fbld
dec
cmpsb
movsl
aas
and
mov
inc
in
jle
outsl
jnp
and
sub
xchg
add
das
inc
sbb
repz
icebp
fwait
cltd
int
and
and
add
insb
sub
adc
and
popf
cmp
or
sbbl
xchg
aam
fstpl
push
jmp
jbe
mov
sub
sbb
movsl
sub
cmp
inc
mov
pop
mov
sbb
mov
mov
adc
pop
pop
dec
mov
pop
das
mov
and
push
xor
add
inc
dec
movsl
pop
mov
aas
adc
cmpsl
stc
fstl
xchg
pop
jo
test
jo
popf
xchg
xchg
inc
in
or
dec
je
imul
mov
or
fs
xchg
sub
and
fwait
nop
call
std
pop
adc
loop
sbb
loope
mov
mov
jmp
mov
popf
lods
enter
js
repnz
cmpsl
adc
jl
ss
mov
xchg
pop
rcrb
jp
dec
mov
and
xor
push
xchg
cmp
movsl
enter
cmp
pop
in
or
mov
adc
add
fwait
pop
in
pop
pop
push
in
fistps
or
mov
mov
movsl
popa
sahf
xor
mov
ret
lcall
jge
rcrl
jne
push
outsl
sbb
hlt
push
stc
shlb
adc
ret
push
in
ret
push
fnstcw
popf
repnz
ljmp
and
add
fstl
add
int
inc
loop
sarb
mov
push
in
mov
lock
jle
inc
mov
enter
pop
out
mov
mov
adc
ja
int
mov
mov
lea
mov
xchg
stos
lods
or
jb
enter
xor
push
jbe
inc
xchg
pushf
xchg
das
pusha
jb
sbb
fdivrp
jg
pop
idivb
mov
sbbl
and
pop
call
cmp
push
mov
loope
icebp
stos
leave
cmpsb
jne
pop
mov
adc
fsub
xor
adc
sbb
repnz
in
lret
jno
jb
mov
fidivrs
loope
cmp
out
push
in
aaa
out
add
and
push
stc
adc
push
rolb
inc
jecxz
jnp
out
lahf
push
pop
mov
cmpsb
or
sbb
shll
rorb
xchg
mov
lcall
dec
icebp
nop
pop
fs
sahf
mov
insl
lea
dec
jmp
xlat
mov
test
stc
push
xchg
shlb
pop
cwtl
roll
mov
lods
movsl
pop
xor
xchg
bound
test
jno
inc
cmpsl
gs
repnz
sub
mov
jge
outsb
test
sbb
out
cwtl
lcall
dec
inc
rolb
in
lods
loop
sbb
inc
mov
insl
loope
and
adc
mov
enter
rclb
inc
or
and
push
adc
dec
nop
mov
jge
pop
in
pop
adc
inc
aaa
stos
enter
dec
hlt
jg
ret
dec
subb
enterw
pop
mov
pop
aad
or
cmp
sti
mov
cmp
lods
dec
outsb
sbb
push
and
sbb
cmp
aaa
mov
sbb
fs
mov
adc
stc
fs
scas
add
sub
mov
jne
rcll
xor
adc
adcl
inc
mov
int3
movsb
pop
into
dec
xchg
loop
mov
push
imul
inc
out
mov
cmp
jge,pt
push
ss
or
cmp
lcall
adc
sarl
cs
mov
data16
pop
xchg
icebp
pop
push
aaa
pop
cmp
ja
xchg
orl
pop
pop
push
and
inc
add
fcomps
jmp
dec
shll
and
pop
js
mov
jns
cwtl
and
mov
xor
pop
das
mov
test
add
pop
cmpsl
jae
ja
pop
js
pop
jns
aaa
movsb
int3
in
outsl
lods
mov
adc
mov
jle
mov
sbb
xchg
adc
insb
ds
fldl
mov
mov
pop
leave
dec
int
mov
fcmovne
cmp
mov
lods
adc
mov
mov
clc
jmp
and
adcl
mov
and
enter
pop
shl
cld
dec
orl
xorb
dec
lahf
mov
inc
gs
push
jbe
cltd
ds
fildl
cmpsl
into
sbb
adc
jg
scas
sbb
aam
xchg
lcall
test
shrb
sbb
mov
lret
mov
adc
sbb
and
push
mov
stos
icebp
in
and
xor
pop
pop
pop
out
xchg
pop
inc
ja
les
out
je
incl
aaa
pop
xchg
leave
or
jne
sahf
push
insl
aaa
push
pop
jae
sbb
pop
sbb
jae
inc
push
mov
sub
mov
xchg
scas
sbb
insl
sub
lret
and
pop
sub
nop
aam
inc
pop
jb
cltd
sbbl
add
jae
fwait
aaa
rolb
les
ret
lea
rorl
mov
in
imul
add
push
lds
xorl
pop
lahf
xor
adc
fsubr
jge
pop
lea
mov
lea
pushf
sub
xor
aaa
xchg
pop
cmpsb
mov
jne
push
pop
lods
adc
hlt
push
aad
les
jmp
aaa
mov
fidivs
test
inc
sahf
pop
cwtl
push
jae
lea
push
fdivrp
push
ss
inc
mov
les
xor
cmp
pop
sbb
dec
cmpsl
xchg
mov
sub
push
cwtl
inc
iret
mov
in
ret
jmp
jl
push
rcll
cmp
adc
aam
repz
decl
push
movsl
aaa
subl
cmc
stos
fstps
jmp
scas
sbbb
xor
stos
add
dec
scas
nop
bound
adc
in
test
jg
imul
mov
and
ds
jmp
in
push
addb
adc
mov
cmp
hlt
incl
mov
cltd
jb
scas
jno
flds
jmp
or
jle
aad
add
pop
idiv
jb
sub
sahf
out
nop
sbb
movsl
cmpsb
jnp,pn
jmp
out
mov
push
and
test
stos
test
push
insb
and
rol
push
mov
mov
mov
or
movsl
in
movsb
enter
adc
addr16
add
loop
in
sub
je
loop
jbe
inc
and
test
pop
insb
sbb
idivb
cvtdq2ps
mov
mov
scas
test
xchg
repz
sarl
pop
in
mov
mov
xchg
dec
mov
jne
fcomps
scas
add
arpl
out
cmp
pop
cmpsb
dec
scas
test
lods
pop
sbb
insb
push
loop
pop
shlb
loop
cmpsb
inc
or
fisttpll
mov
ret
pop
sub
subb
inc
mov
inc
out
xor
rorl
xor
stos
push
xchg
aad
dec
dec
mov
enter
loopne
es
enter
addb
mov
lods
scas
add
cmp
gs
sub
xor
cmp
lods
cmp
fists
in
mov
mov
mov
sbb
testb
mov
incb
cli
inc
inc
in
xchg
push
add
mov
xor
sub
jge
mov
and
push
fiadds
adc
outsl
mov
jb
push
mov
dec
lcall
sub
repnz
inc
enter
or
mov
add
std
mov
push
jmp
sub
fildll
addr16
dec
sti
pop
dec
hlt
adc
and
cli
push
pop
lods
imull
sub
dec
cmp
sbb
mov
in
xor
cmc
pop
pop
push
aaa
fcmovb
nop
clc
add
sub
aaa
aam
hlt
jg
ss
repnz
test
fsubp
pop
xor
std
pop
sub
cmp
mov
sti
and
outsb
f2xm1
gs
push
fsubs
dec
sub
sar
xchg
mov
sbb
imul
mov
lods
bound
aaa
and
cmp
and
das
rcrb
icebp
pop
lea
shr
cltd
jmp
and
sub
cmp
fstpl
jecxz
mov
xchg
gs
aaa
test
push
repz
pop
ss
dec
xchg
jge
shl
nop
push
mov
sbb
lret
outsl
sbb
jge
data16
pop
test
stc
or
stos
ja
pushl
movsb
test
xor
jbe
sbb
mov
sti
movsl
cmp
pop
adc
xchg
push
sbb
add
loope
pusha
jl
lcall
pop
inc
mov
push
mov
lock
imulb
mov
je
leave
mov
into
das
ja
enter
jb
repnz
push
jae
ret
sub
lds
inc
mov
inc
cli
cmp
mov
push
xor
fisttpl
out
dec
fdivs
outsb
sbb
jno
arpl
xlat
xlat
int3
inc
mov
mov
in
rcl
and
scas
add
dec
adc
mov
in
je
aad
xor
jbe
cmp
cmpsb
sub
outsb
arpl
dec
add
loop
in
hlt
lea
test
cmp
push
dec
pop
clc
pop
fldcw
jb
jle
sbb
mov
lea
sbb
sub
rorb
and
or
out
mov
cmp
aas
insb
test
cmp
pop
push
and
mov
mov
sarl
pop
es
sbb
jg
sub
flds
adc
int
iret
outsb
insb
xchg
pop
cmpsb
adc
mov
js
orb
div
cmp
mov
insb
lret
cs
ss
stos
pop
and
mov
lods
movsl
mov
push
pushw
lock
mov
nop
sbb
popf
inc
sbb
jl
jno
cmp
adc
or
or
inc
daa
sarb
mov
sub
pop
push
leave
pop
or
popf
cmp
into
imul
clc
mov
add
std
stc
mov
inc
dec
cmp
fsubp
cmp
cmpsb
cwtl
je
sbb
mov
andb
faddl
cwtl
mov
es
sbb
or
add
mov
stos
ret
aas
test
sbb
adc
enter
push
pop
mov
lds
or
pop
sbb
mov
pop
popl
ljmp
jmp
push
cli
ljmp
xchg
cmc
fldt
sub
fxch
sahf
fs
cmp
dec
mov
data16
ljmp
pusha
dec
ja
filds
xchg
repnz
lea
pop
lods
xchg
inc
repnz
push
dec
lods
in
and
or
int3
jbe
mov
mov
pop
aaa
testl
pop
rolb
dec
xchg
sti
sub
pop
sbb
shrl
jae
push
cmp
pop
cmpl
xchg
mov
mov
pop
cld
push
dec
push
sbb
xchg
pop
sbb
addr16
pop
daa
arpl
out
mov
addr16
jle
jp
pop
pop
test
push
pop
sbb
jg
xor
aaa
dec
and
ss
arpl
testb
pop
mov
icebp
sbb
pushf
inc
cmp
xor
js
cmp
jge
xchg
lods
push
out
inc
out
je
fistpl
rcrb
mov
inc
sub
jno
aaa
lea
mov
sarb
int
cmp
inc
push
out
or
inc
scas
push
sbb
xor
pop
je
sarb
arpl
add
xchg
pop
push
dec
push
outsb
ds
std
or
lea
js
dec
fs
cmp
lds
popa
pop
or
cmp
add
in
jge
adc
loope
cli
addr16
call
imul
outsb
mov
jb
inc
mov
movl
stos
pop
rclb
icebp
jnp
jp
rcrl
aam
imul
stos
aam
sub
jae
imul
cwtl
pop
push
and
jbe
testl
out
mov
or
sarb
fnstsw
and
pop
sub
and
sub
sbb
mov
jp,pn
fwait
inc
not
pop
xlat
jg
inc
push
mov
sbb
push
mov
add
add
hlt
add
fsubl
dec
mov
movsl
fsub
outsl
popf
sbb
out
pushf
and
aam
push
insw
mov
jo
or
sbb
sub
add
popf
sub
cwtl
push
dec
push
lret
mov
or
popf
js
js
and
ljmp
scas
repz
pop
jg
int3
cmp
push
mov
push
jnp
add
sbb
iret
jae
imul
mov
mov
jle
fldenv
inc
into
and
sbb
pop
xorb
sbb
mov
popf
out
sti
lret
fs
in
add
jge
int3
pop
pop
out
adc
push
jo
mov
mov
adc
xchg
ss
faddl
hlt
and
xchg
lods
idiv
outsl
pushf
mov
std
lcall
cltd
sti
dec
ds
push
in
push
or
jle
mov
mov
ljmp
les
xor
mov
mov
xor
cmpsb
pop
push
xchg
pusha
lods
xchg
or
fwait
cmova
inc
jl
fsubl
mov
jno
jb
dec
scas
scas
js
pop
and
inc
stos
add
xor
pop
mov
inc
loope
sbb
icebp
sti
inc
in
popf
subb
lock
xchg
adc
dec
ss
in
xor
hlt
negb
jge
xor
or
and
ret
orb
jno
dec
jns
inc
push
and
sub
mov
lea
aaa
xlat
inc
push
xchg
inc
lea
fsubl
loopne
loope
sti
dec
cmp
fcomps
pop
inc
lahf
cmpsb
hlt
cmpsb
pop
pop
xor
in
sub
shr
lret
jb
dec
pop
pushf
push
into
mov
sub
pop
ret
pop
cmp
inc
dec
insl
cmpsl
cmp
mov
xor
pop
pusha
scas
inc
xor
jle
sbb
btr
add
mov
aaa
sbb
sbb
test
dec
mov
imul
faddl
cld
mov
adc
sbb
idivb
das
xchg
or
mov
pusha
movsb
mov
icebp
pop
leave
mov
insb
shrb
push
push
inc
jg
loopne
mov
xor
lahf
xor
loop
icebp
dec
pushfw
add
cmp
aam
rolb
jae
loop
sbb
lods
inc
nop
arpl
fistl
pop
push
sbb
insb
xchg
mov
ss
mov
push
sbbb
xchg
into
out
push
loop
cmp
xor
ss
and
mov
xchg
in
in
arpl
das
xor
or
push
or
loop
in
xchg
insb
ror
lock
lret
lea
imul
es
lds
xchg
sub
ss
adc
xchg
popa
lea
ret
loope
jns
and
scas
sub
out
sbb
mov
test
sbb
es
xorl
lock
mov
or
cs
adc
pop
in
mov
xchg
dec
js
decb
das
mov
cmpsb
xchg
and
fstps
mov
pop
xchg
mov
dec
cmp
dec
imul
xor
mov
fisttpll
cmp
jle
or
push
das
mov
mov
mov
js
rcll
ret
inc
fsubrl
jmp
in
or
mull
jg
mov
cld
mov
es
add
jle
ja
pop
es
xchg
dec
cmp
mov
mov
pop
mov
jae
popa
mov
in
ss
jno
inc
inc
push
in
fnclex
inc
jb
mov
push
and
out
jno
in
mov
dec
fisttps
fnstcw
arpl
popa
dec
fwait
decb
mov
mov
dec
loope
cmp
xor
lahf
pop
pop
sti
xor
scas
mov
lods
sti
ljmp
loope
enter
mov
sub
adc
add
data16
jg
addr16
sbb
into
and
mov
enter
hlt
sbbb
loopne
pop
movsl
aaa
push
movsl
push
xor
ds
pop
imul
icebp
mov
mov
pop
xchg
cmc
mov
iret
or
incb
xorb
scas
push
sahf
stc
icebp
repz
call
pop
sub
cld
sbb
sbb
xchg
lods
inc
xchg
sub
aaa
mov
xor
mov
incl
jnp
or
push
cmp
enter
add
add
mov
and
les
imul
jge
push
pop
cmp
pushf
dec
in
mov
hlt
fs
cmp
adc
nop
pop
pushf
repnz
mov
jecxz
xor
jb
mov
push
sti
pop
sub
pop
add
push
cmp
aas
fs
testb
jle
movsb
ss
jg
jl
push
nop
xor
pop
fstpt
mov
and
outsl
mov
xor
or
xor
inc
jns
cmp
in
dec
dec
dec
loop
adc
fs
mov
popf
rcl
shl
sti
pand
sbb
mov
scas
daa
bound
dec
aas
mov
aad
or
repz
filds
fst
sub
ret
inc
push
pop
rcl
lods
push
sub
mov
and
and
scas
xor
jbe
sahf
mov
adc
pusha
push
clc
pop
xchg
xor
lcall
mov
mov
insb
ret
xchg
flds
dec
cmp
jle
jp
mov
pop
sub
ss
call
or
test
pop
repnz
out
push
xchg
xchg
sbb
scas
push
pop
or
mov
mov
lret
xor
in
das
jmp
pop
stos
lock
cs
mov
inc
pusha
xchg
pop
jo
pop
xor
push
jmp
pop
fcompl
aaa
imul
call
mov
outsb
inc
sbb
cmc
cld
pop
adc
mov
das
push
adc
cld
dec
and
aaa
ret
inc
dec
mov
and
into
pushf
adc
pusha
addr16
add
fsub
loop
movsb
add
mov
lcall
sbb
loop
xchg
loope
sbb
xchg
adc
mov
mov
pop
imull
insb
pop
mov
js
out
push
adc
xchg
testl
cmp
arpl
fistpll
sbb
lret
mov
xor
fbstp
js
fwait
mov
mov
cltd
xchg
jnp
loopne
pop
aaa
sub
rcrb
call
bound
sub
lahf
add
pop
insb
sub
pop
adc
push
jbe
mov
int
push
mov
incl
dec
push
fcompl
loope
pop
mov
sbb
movsb
js
aaa
or
mov
ret
mov
aas
cmp
fcoml
aas
cmp
sbb
loope
lock
dec
sub
add
xor
subb
pop
pushf
out
push
pop
pop
loopne
das
mul
xor
cmc
dec
rcll
xor
pop
cmp
pop
inc
test
aaa
xor
lods
push
pop
int
xchg
add
push
cmp
cwtl
adc
cmp
divb
outsb
add
pop
add
hlt
repnz
mov
jecxz
clc
bound
pop
jno
fsubrp
mov
fdiv
mov
js
xor
mov
pop
adc
jno
xchg
mov
cmp
aaa
jge
mov
mov
dec
mov
cmp
fsubl
sbb
lock
lods
push
loop
mov
imul
add
std
out
ss
push
std
out
add
add
arpl
sbb
pusha
push
sub
lea
nop
sahf
iret
sbb
lret
dec
mov
in
andb
lods
repz
and
pop
jle
sti
adc
inc
adc
popf
mov
ret
test
sbb
int3
dec
lock
jg
mov
add
adcb
aaa
sub
in
loope
sbbb
xchg
gs
jmp
ret
aaa
sbb
not
mov
lock
divb
mov
scas
jbe
mov
ljmp
les
dec
add
ds
pop
or
shrb
mov
xchg
push
add
inc
adc
xchg
inc
les
mov
out
jbe
adc
rorb
lock
cs
and
int
fdivrs
ret
cmp
cltd
lea
jecxz
mov
jmp
pop
pop
cmc
sub
jle
testl
push
enter
repz
test
jecxz
mov
cs
les
cmp
lock
push
iret
or
pop
jecxz
inc
lea
andb
jae
mov
push
cmpb
xchg
je
out
cmp
mov
lcall
hlt
xchg
faddl
pop
xorb
xchg
lcall
arpl
imulb
fmuls
push
mov
and
xlat
sbb
lcall
lret
and
call
xlat
in
mov
enter
xchg
mull
std
lods
pop
mov
mov
sub
push
pop
and
gs
scas
dec
and
ret
sti
pop
mov
inc
int
and
ss
aaa
int
pop
dec
int3
sub
pop
adc
mov
mov
movsl
mov
fidivrl
cli
adc
shlb
pop
fwait
and
adc
jg
lea
xchg
mov
push
push
in
and
ss
clc
into
ds
in
gs
clc
push
lret
inc
lahf
pop
imul
sbb
jo
std
jge
xor
mov
and
mov
loope
sub
andb
aam
cli
mov
sub
pop
xor
stos
pop
movsl
pop
sbb
insl
push
jge
ds
daa
mov
and
adc
mov
cmpsl
int3
mov
pop
add
inc
cmpsl
lret
rcrl
cmp
ds
ds
xorb
push
iret
inc
fwait
sti
ret
pop
cmpl
sub
adc
jne
pop
dec
jl
cmpsb
loope
out
mov
add
stc
adc
imul
fiaddl
dec
testl
or
mov
andb
mov
push
push
test
pop
cmpsb
loope
int
cmp
aad
int
cmp
loope
repnz
mov
add
aam
xchg
inc
cmp
std
pusha
imul
lods
push
xchg
pop
repnz
pop
sti
xlat
add
sbb
jecxz
pop
icebp
jg
inc
test
pop
mov
fwait
arpl
lods
inc
xor
lods
jne
stos
clc
shl
dec
sbb
adc
mov
inc
cld
in
cmc
add
ds
call
bound
mov
jle
mov
push
pop
jne
xorl
aas
mov
fs
mov
jne
loope
inc
mov
int3
dec
xchg
pop
add
push
in
idiv
mov
jno
jb
push
pop
cmpsl
mov
pop
mov
lea
fwait
out
jge
xchg
movsb
mov
int
insl
aaa
aam
popf
pop
pop
mov
and
mov
stos
mov
repz
xchg
xchg
lds
dec
in
or
bound
add
fimuls
outsb
sub
mov
mov
sub
ljmp
push
jecxz
out
sbb
out
clc
aas
cmp
dec
lods
cmp
mov
add
dec
sysenter
ss
in
inc
and
notb
xorb
inc
and
mov
mov
mov
sbb
mov
cmpsb
mov
cmc
and
adc
xchg
cmp
aaa
adc
in
repz
fidivs
outsb
arpl
cli
push
cmp
push
aaa
pop
out
mov
pushf
dec
mov
stos
jno
mov
and
dec
jae
rcll
pop
mov
test
test
int3
and
or
lcall
call
mov
ds
add
mov
outsb
cmpb
xchg
mov
hlt
repz
addr16
stos
nop
inc
cmpsl
adc
cmpsb
bnd
rcrl
cltd
and
jg
fidivrl
inc
sub
jl
xor
in
jg
shll
mov
sbb
negl
mov
push
je
nop
les
jle
sbb
mov
adc
or
fimuls
jne
ret
in
repz
xor
sahf
jns
call
push
loop
add
icebp
std
outsl
xor
adc
xor
je
int
add
inc
movsb
aad
cmpsl
popf
js
or
sbb
add
mov
jp
sarb
into
dec
sbbl
icebp
mov
divb
pop
push
inc
cmp
mov
out
jno
fmull
sahf
outsl
mov
mov
hlt
mov
push
mov
fsubs
mov
cmpsb
pop
fcompl
iret
xchg
and
arpl
push
outsl
movsb
icebp
inc
leave
int
mov
sbbb
sub
jbe
sbb
mov
and
std
repz
subl
inc
js
mov
xchg
gs
jge
add
in
stos
insl
add
in
pop
andb
inc
int3
sbb
fildll
in
adc
cmpsl
fidivs
dec
bound
jecxz
popa
into
sbb
xchg
mov
fmuls
bound
fsubrl
pop
mov
cmp
ds
push
clc
rol
push
rcll
adc
fwait
cli
push
mov
add
add
sbb
aaa
test
fisttps
inc
movsl
or
xor
adc
es
lcall
into
cltd
out
jno
test
das
ficoml
pop
push
loope
jo
in
add
mov
fistl
push
inc
cmpsb
xlat
rolb
mov
cmp
mov
inc
into
imulb
push
pop
pop
imul
push
adc
lock
dec
cmp
ret
std
sbb
mov
jmp
stc
gs
mov
fwait
popa
loopne
add
fnstsw
push
or
inc
mov
loopne
repz
jne
sbb
loope
sub
cmp
int
shr
jbe
pop
and
mov
dec
xchg
jle
pop
or
out
lret
mov
push
dec
cltd
pop
inc
call
pop
popa
pop
std
xor
xchg
sti
add
mov
arpl
jmp
inc
xchg
inc
nop
xchg
mov
call
xchg
push
int3
aad
nop
sbbb
cmp
orb
test
aam
mov
ss
aaa
cs
stc
add
lea
pusha
xor
inc
add
sahf
hlt
loope
dec
inc
movsl
pop
cmp
ds
pop
or
cmpl
mov
mov
dec
mov
and
mov
das
adc
pop
push
add
shll
push
outsb
mov
add
push
aam
js
cmp
sarl
pop
push
mov
pop
subl
lret
out
and
mov
and
pushf
arpl
pop
arpl
pop
jle
jmp
aaa
push
je
mov
into
sarl
sahf
xor
push
imul
testl
icebp
push
int
es
jp
jg
adc
or
aaa
call
pop
cmp
inc
mov
add
mov
scas
jecxz
pop
out
aam
pop
sbb
rorl
sbb
js
sahf
xchg
adcb
jo
out
push
aam
fdivl
add
sub
outsl
pusha
and
push
loope
aaa
hlt
sbb
dec
stos
nop
ret
popa
inc
nop
jbe
test
pop
icebp
sub
mov
mov
cld
aaa
mov
or
ja
jp
aaa
int
sub
fmul
xchg
icebp
fsubl
fxch
pop
push
gs
sti
push
enter
mov
push
pop
int3
test
dec
or
add
xor
mov
xor
in
push
fistpl
push
or
cwtl
mov
inc
stc
push
in
js
fs
scas
int3
mov
ljmp
loop
adc
in
jb
inc
adc
fs
aas
negl
mov
pop
jle
push
xchg
mov
lret
pop
dec
rolb
iret
cmpsb
int3
mov
pop
aaa
fwait
or
push
cmp
dec
sahf
and
xchg
out
lcall
insl
add
fistpl
dec
lret
cs
out
jle
pminub
sub
sbb
pushf
push
dec
xchg
in
jmp
into
dec
sbb
mov
insl
xlat
push
pop
sub
nop
mov
loope
mov
push
sub
aam
leave
arpl
pop
push
lock
mov
add
and
jo
ss
scas
push
push
mov
scas
xor
loope
xlat
pop
lea
xchg
or
push
fmuls
pop
out
push
inc
sbb
adc
lret
cmpsb
in
jo
fnstcw
aaa
loopne
cld
pop
fsubrs
sbb
faddl
call
gs
jecxz
xchg
std
flds
add
add
xchg
pop
rorl
cld
push
mov
sub
aaa
sub
dec
fisttpll
lea
inc
leave
or
push
popf
jb
sar
jmp
xchg
add
jae
adc
int3
and
cmp
inc
jle
or
addr16
and
mov
aam
cmp
push
imul
jb
pop
dec
rcrl
xchg
lds
mov
or
aam
jno
loope
lret
cmp
cmpsl
cs
lahf
xor
mov
pop
call
sub
in
cmp
cmc
pop
mov
jecxz
push
idiv
pop
mov
arpl
sub
jno
jl
xchg
out
pop
repz
shlb
icebp
mov
mov
aad
pop
popf
aam
lret
pop
cmp
lret
mov
or
test
lods
insl
int3
xchg
jmp
cmpb
filds
test
pop
jmp
dec
mov
push
pop
mov
leave
jne
in
loope
repz
ret
and
xorb
stos
ss
inc
sahf
jns
pop
fs
jno
cmp
dec
cmpl
int3
mov
pop
jmp
sub
add
loop
pop
xchg
ljmp
icebp
test
js
nop
in
mov
mov
adc
dec
mov
sahf
stos
xchg
loop
jl
mov
lods
inc
repz
addr16
adc
idivl
and
pushf
fwait
jae
sub
in
cmp
sub
push
sarl
xchg
enter
mov
in
jno
ss
push
sub
inc
mov
sbb
mov
sbb
aaa
or
lahf
add
test
aaa
mulb
sbb
call
fwait
push
xchg
jg
das
xlat
pop
imul
cmpsb
dec
mov
mov
rcrl
xlat
and
sbb
filds
xor
dec
pop
cmp
pop
inc
xorl
push
dec
or
pop
adc
push
stos
inc
in
push
inc
push
movsb
dec
pop
xor
pop
andb
fstps
int3
cmp
pop
ficompl
lock
cmp
lret
call
mov
cs
dec
push
mov
mov
outsl
push
dec
loop
sbb
push
sti
jne
inc
mov
xchg
mov
xchg
cmpsl
rcrl
lret
and
push
jl
pop
cmp
loope
mov
mov
in
popf
icebp
jge
inc
mov
aaa
notl
jbe
enter
mov
pop
sbb
aaa
test
fsubrp
and
ds
xchg
dec
adc
into
mov
jmp
inc
lods
adc
lods
lods
subl
fwait
cwtl
cmc
lods
pop
les
adc
pushf
sarl
inc
cltd
inc
loope
xchg
xchg
adc
loope
pop
sbb
pop
xchg
fmul
mov
test
out
lods
pop
jmp
pop
jle
loope
in
cli
inc
mov
mov
mov
int3
cmp
sub
mov
stos
aas
inc
sbb
adc
loop
dec
push
xchg
mov
mov
lods
mov
les
push
add
adc
jnp
bound
push
lds
xchg
sar
shll
add
in
ds
ror
xchg
jle
aaa
lret
jbe
movsl
bound
push
packsswb
adc
mov
sbb
mov
rorb
in
scas
and
rol
mov
sarb
outsb
push
or
arpl
jae
lods
xor
add
arpl
mov
push
aaa
out
jnp
jmp
add
xorb
pop
ret
xor
and
adc
sbb
inc
pop
bound
jo
push
std
out
jbe
dec
jle
int3
inc
cmpb
jbe
inc
xor
mov
ds
aaa
mov
lret
jns
lret
sbbb
das
push
cli
dec
adc
or
fdivl
mov
cli
xor
rolb
push
mov
add
fdiv
loope
lea
fs
fimuls
push
js
mov
ljmp
in
loopne
nop
and
sub
inc
push
ss
mov
push
pop
xor
aad
push
xchg
imul
mov
cmp
xor
cli
cmp
mov
das
and
fnsave
and
adcb
mov
inc
xchg
xor
pop
lods
pop
loope
jmp
mov
scas
pop
enter
mov
out
daa
aam
and
jmp
cwtl
fstps
sti
jbe
jns
mov
mov
mov
add
imul
push
in
flds
cltd
outsb
lock
das
mov
int3
in
movmskps
lret
incl
shl
jbe
fimull
lcall
push
push
out
sub
cmp
pusha
cmpb
movsl
arpl
jne
aaa
add
mov
fstpl
jno
lcall
iret
or
mov
xor
xchg
add
repz
imul
leave
gs
and
imul
ds
mov
pop
mov
lret
and
das
mov
dec
inc
inc
rcrb
insl
in
jno
pusha
inc
mov
std
mov
mov
es
and
das
sbb
hlt
loope
pop
push
mov
xor
jle
pop
mov
repnz
inc
adc
adc
fs
pop
cwtl
mov
mov
sbb
std
inc
or
mov
adc
aas
sbb
fists
jo
xchg
out
jmp
adc
rcl
incb
mov
xor
pop
mov
sbbl
fmul
movsb
cld
lds
lret
pop
in
fisubs
out
sub
push
fwait
inc
cmp
in
mov
js
jns
inc
movsl
pop
add
sbb
mov
mov
test
aaa
mov
push
loop
jl
mulb
or
ljmp
jge
push
add
test
fiadds
call
push
mov
mov
in
arpl
cli
push
hlt
dec
jb
fxch
movsl
cs
push
mov
es
dec
inc
adc
adc
sbb
push
jne
jns
pop
shrl
pop
mov
jbe
sbb
pop
mov
add
pop
adc
push
dec
addb
jg
pop
cwtl
or
rcrl
icebp
xor
out
dec
xor
push
mov
das
pop
lret
lahf
dec
jge
mov
cli
nop
stc
movsb
or
stos
cli
movsl
inc
cmpsb
jne
aaa
inc
les
nop
add
inc
jge
rclb
cmp
test
push
mov
in
add
xlat
push
add
cmpsl
stos
mov
jp
jle
pop
adc
jle
pop
cmp
aaa
jge
push
push
jbe
addl
or
arpl
mov
ss
lcall
mov
in
mov
or
ja
inc
xchg
push
arpl
push
mov
cmp
out
jg
lods
pop
jmp
imul
mov
rorb
mov
aaa
incb
and
xor
mov
adcl
sbb
pop
add
lock
sbbl
pop
jle
inc
mov
xor
jb
or
clc
nop
sub
jge
pop
dec
movsl
leave
sub
in
ja
mov
adc
mov
fwait
cmp
std
in
leave
stos
cmp
mov
cmp
adc
push
fadds
xor
pop
ja
fcomp
mov
sti
repnz
rclb
inc
dec
and
out
push
lcall
out
xor
aaa
inc
aad
sub
sub
pushf
adc
and
or
pop
sbb
jecxz
sbb
cld
push
aam
mov
lods
fbld
mov
cmp
orl
test
andb
out
mov
or
sub
push
mov
adc
lods
xor
xchg
maxps
aaa
mov
rcrl
mov
push
out
jecxz
ficoms
xchg
xchg
loope
inc
jbe
enter
adc
call
push
dec
mov
cli
and
pop
pop
rol
mov
subl
fldl
and
xlat
idivl
out
test
enter
mov
std
aad
mov
xchg
sbb
sarl
loope
jp
out
jmp
push
int
sbb
pop
pop
adc
notb
fwait
mov
mov
pop
ret
aam
jmp
xchg
mov
std
and
pop
inc
xchg
and
mov
jbe
rcr
mov
loope
divl
es
dec
pop
lahf
sbb
divb
push
fwait
cmp
pop
fs
mov
leave
add
in
push
popf
sub
xchg
pop
ljmp
push
push
inc
shrb
insl
mov
pop
js
fwait
out
out
cmp
hlt
jp
shll
cld
mov
dec
sbb
add
push
pushf
and
outsb
fistpl
sbb
inc
lret
roll
frstor
adc
jle
popf
xchg
and
fisttpl
pop
out
xorl
push
jge
lods
pop
fwait
mov
fiadds
mov
into
and
inc
fstpt
push
mov
lcall
rolb
or
cmp
mov
test
idivb
mov
pop
das
or
pop
sti
ficomps
jle
out
cmp
out
push
xchg
mov
jb
arpl
jo
sbb
pushf
fstpt
sub
dec
repnz
das
sbb
add
cmp
pop
aas
push
mov
cmp
mov
pop
cmp
in
sbb
dec
adc
xchg
imul
fsub
adc
fidivl
add
push
ficoms
inc
in
popw
sbb
dec
shl
and
iret
cmp
sub
enter
add
xor
jle
mov
jle
dec
xchg
jbe
mov
dec
sbb
clc
ljmp
je
and
mov
mov
pop
push
insl
push
aas
fmulp
dec
aam
inc
cmpsl
icebp
mov
push
inc
mov
clc
push
push
jb
pause
sar
sahf
mov
fstps
or
push
repnz
add
mov
push
adc
dec
cmp
aam
inc
cld
mov
dec
outsb
push
sbb
sub
jnp
ds
aaa
inc
xorl
and
dec
pop
push
lea
pop
mov
insb
aaa
mov
pop
dec
mov
jle
pop
xchg
stc
fsts
push
push
jnp
jmp
test
or
fwait
lret
lcall
icebp
and
mov
cld
sub
inc
xor
into
adc
call
je
jo
jmp
lea
cli
sbb
jp
das
fnstcw
sbb
loope
shrl
jmp
jl
fst
xor
scas
test
mov
icebp
enter
bound
xchg
xchg
jle
add
mov
jmp
mov
std
xchg
loope
and
lcall
icebp
loop
shlb
jle
jl
push
lret
pop
into
jnp
adc
ljmp
and
loope
inc
or
mov
divb
mov
loope
xor
mov
jecxz
pushf
ficomps
in
jg
jbe
adc
jecxz
mov
mov
jno
dec
data16
aad
ljmp
sarl
pop
pop
cmpps
mov
inc
sbb
or
cs
ss
cmp
aaa
or
addr16
jmp
xchg
mov
pop
pop
sub
mov
stos
pop
jge
dec
mov
dec
or
mov
fldcw
pop
add
or
mov
cmp
sbb
cmpsb
mov
out
aaa
lret
inc
xor
mov
clc
xor
fistl
xchg
in
ja
or
pop
jo
adc
and
out
inc
aaa
aad
xchg
and
inc
pop
repz
push
fnstenv
lret
add
sbb
sub
imull
xchg
popf
sub
leave
ror
and
mov
stc
cltd
ds
jns
ljmp
xlat
jl
fstpl
jg
sbb
cltd
cmpsb
rorb
lahf
mov
jne
ljmp
cmp
fnstcw
jne
sets
out
cli
pop
sarl
mov
xchg
popf
dec
aaa
fwait
jnp
popa
pop
sub
pop
mov
mov
inc
aaa
pop
cmc
pop
cmc
leave
pushf
mov
je
push
jno
icebp
inc
adc
sub
fsts
pop
movsl
outsb
sbb
pop
jno
mov
ret
xor
sbb
dec
clc
ss
cmp
or
lds
fnstenv
or
cmp
xchg
mov
out
sub
pop
lea
lock
int3
pop
jno
sub
fisubs
sub
pusha
out
and
imul
push
aaa
jl
fcomp
or
fwait
ds
rcrb
call
std
in
je
jecxz
hlt
jl
sbb
jge
stos
repz
insb
dec
pop
xchg
mov
std
sbb
int3
loopne
sahf
lods
mov
in
repnz
jmp
pusha
cmp
sub
imul
std
cmpsl
lods
into
pop
push
push
or
data16
icebp
inc
sbb
xor
mov
xor
shl
sbb
mov
ja
in
xor
lcall
cmp
jle
sbb
inc
mov
rclb
mov
movl
sub
lock
iret
adc
xor
xchg
lea
dec
sti
insl
xor
cmc
aaa
xor
cmp
std
mov
xor
sub
icebp
lods
in
jbe
jmp
insl
push
cmp
sbb
scas
in
pop
cmp
dec
dec
xchg
push
and
pop
bt
lods
jge
std
addb
repnz
push
sub
dec
scas
mulb
aaa
fwait
jbe
pop
les
dec
xor
jnp
mov
jns
inc
mov
mov
dec
mov
fs
ss
outsl
daa
ret
sarl
push
loope
loope
push
stos
cmp
xchg
push
mov
jge
sbb
jo
pop
mov
dec
xor
daa
test
xchg
adc
sbb
or
add
out
es
aaa
ret
cmpsl
cli
mov
mulw
aas
int3
dec
into
aam
into
mov
sahf
lret
fwait
mov
or
iret
in
loope
inc
iret
cmp
push
pop
sbb
aaa
lock
cltd
dec
divl
pop
cmp
enter
mov
inc
push
mov
test
into
sbb
lods
sbb
add
lcall
fidivs
daa
in
mov
bound
icebp
lcall
out
cld
dec
jmp
inc
fdivrs
test
ss
jnp
mov
in
lcall
mov
ss
sti
push
popf
cmp
dec
pushf
mov
adc
xor
jecxz
and
cli
aam
outsb
cmpsl
iret
pop
loop
int
jae
ss
dec
pop
xchg
pop
sbbb
imul
xlat
jnp
pop
push
mov
pusha
fcoms
lods
pop
pop
cld
scas
mov
test
nop
stc
pop
out
je
outsb
jo
push
xor
sub
xchg
lock
mov
add
pop
sub
jl
xchg
pop
lods
pop
adc
sub
mov
push
mov
stos
mov
inc
outsb
xor
add
dec
repz
je
lds
push
jg
out
mov
ret
push
stc
movsb
push
imul
and
popf
xor
push
icebp
call
pusha
jno
or
out
inc
cmpsb
mov
mov
lods
dec
jbe
adc
gs
lahf
adc
imul
clc
in
outsb
out
adc
out
pop
movsl
aaa
mov
inc
pop
pop
rcrl
stc
cmp
cmpsb
jbe
in
divb
data16
in
pushf
movsl
inc
rcll
mov
orl
sti
call
ret
xlat
pop
imul
mov
sbb
repz
cmp
enter
fbstp
jnp
cmpsl
jle
xchg
lea
repnz
mov
jb
push
popf
cs
in
xor
pop
sub
mov
loop
test
push
ljmp
xlat
enter
testb
xchg
imul
mov
push
xor
sbb
fcompl
mov
push
jae
cmpsb
outsl
push
push
inc
jle
cmp
add
jge
repz
daa
or
lahf
adc
repnz
xchg
loope
lds
imul
xchg
sub
into
loop
arpl
mov
cltd
adc
jnp
int3
ljmp
xchg
sub
lcall
sbb
push
adc
in
outsb
in
or
rcll
dec
sbb
mov
cmpl
call
in
rcl
cs
js
popf
lahf
insb
mov
insl
push
fwait
or
mov
mov
mov
mov
icebp
cmp
mov
dec
out
dec
std
je
clc
enter
in
outsl
cmp
jno
xchg
mov
into
and
jne
lcall
jne
inc
xchg
mov
int
sbb
sbb
ljmp
dec
ret
push
add
out
sahf
jle
ljmp
push
es
mov
pop
rcrl
fsubrs
mov
push
lcall
lock
daa
jl
cmp
scas
or
inc
pop
xchg
ja
dec
xor
push
xchg
mov
sti
xchg
xchg
adc
mov
push
inc
orl
pop
adc
cmp
popa
push
pushf
shll
push
push
jp
pop
les
jns
dec
adc
ds
dec
inc
and
inc
fisubl
fwait
dec
shrb
sti
aam
pop
cmpsb
icebp
xor
mov
and
mov
ljmp
loope
or
pop
sbb
seta
xchg
inc
sbb
fwait
lret
push
sbb
xchg
xor
pop
pop
ret
sbb
push
push
repz
jbe
mov
movsl
mov
mov
mov
inc
mov
pop
insl
mov
sbb
mov
dec
jae
jle
sub
adc
and
int
sbb
pop
fisttps
in
mov
pop
cltd
or
in
pop
int3
mov
je
insl
and
in
jl
fidivs
or
xchg
in
test
ljmp
jbe
pusha
cmp
mov
lds
push
sti
repz
cmp
xlat
dec
fstpl
iret
push
mov
ds
xchg
cmp
adc
and
out
dec
cmp
jp
jb
fcompl
int
in
xor
inc
mov
insb
adcl
push
cmp
adc
inc
add
inc
cli
lret
aad
add
inc
enter
mov
cmp
jnp
sub
gs
mov
xchg
mov
mov
rolb
outsl
mov
in
movb
adc
cltd
sub
push
stos
xchg
hlt
jg
out
scas
xlat
jg
das
pop
scas
sbb
movsb
add
es
adc
test
inc
add
out
in
out
pop
int3
xor
push
pop
sub
cmp
mov
nop
or
mov
daa
mov
sub
std
or
add
or
pop
scas
cmp
xchg
in
inc
movsb
and
sbbb
pop
ret
cmp
mov
fnsave
jmp
sbb
call
aaa
addb
mov
into
mov
add
mov
push
mov
mov
cmp
cli
mov
dec
cmp
outsb
fsub
test
arpl
out
loop
add
dec
and
imul
icebp
cltd
push
push
fistl
scas
cmp
dec
icebp
scas
cld
pop
imulb
mov
push
aaa
aaa
fsubs
sti
in
mov
cmp
inc
daa
insb
jle
jle
adc
cmovnp
rcrb
cmpsb
push
dec
fwait
ret
sub
push
pop
cmp
push
pop
dec
xchg
cmpsl
inc
ja
in
jae
cmp
rcrb
outsl
jl
pop
pushf
popf
xor
ret
mov
lds
stos
jge
test
mov
pop
stc
push
pop
aaa
fildll
mov
pushf
sbb
pop
sub
pop
inc
pop
sarl
aaa
js
adc
sub
inc
inc
enter
out
addr16
testl
ret
imul
xchg
fldz
bound
test
movsb
mov
jbe
call
imul
xchg
dec
pop
cmp
dec
fwait
inc
push
loop
popa
cwtl
pop
aaa
pop
test
loope
sub
xchg
and
mov
adc
call
mov
jecxz
pop
xorb
pop
cltd
outsb
out
sub
insl
pop
lods
out
fsubrl
fwait
out
in
filds
in
inc
pop
mov
ss
test
pop
add
mov
call
cmpsl
or
adc
jecxz
and
lock
ds
aaa
jbe
cmp
loope
movsb
jbe
jo
mov
cmpsl
loopne
imul
or
imul
mov
xchg
cltd
icebp
mov
add
add
movsl
aas
jb
xchg
xchg
adc
outsb
mov
pop
mov
scas
repz
xchg
xchg
inc
scas
cmc
fldl
sub
lock
xchg
sbb
int3
adcl
mov
aaa
in
dec
insl
fisttpl
sub
jmp
fistps
mov
cmp
mov
jbe
sbb
fscale
pop
xor
sbb
mov
adc
and
cld
xorl
loop
cld
fs
cmpsl
mov
shr
dec
sbb
icebp
sub
fimull
jb
jno
sbb
repnz
pop
outsl
adc
pop
mov
rcrb
sbbb
pusha
out
test
cmp
js
sub
ret
jecxz
inc
jno
data16
sbb
jle
cmp
push
pop
mov
rol
push
jecxz
mov
out
fcmovne
inc
inc
pop
in
ds
pop
cli
je
xchg
pop
jae
pop
mov
shlb
pop
or
mov
xchg
insl
jle
pop
mov
imul
mov
and
adc
or
test
insb
jle
lcall
imul
pop
push
loope
fadd
xchg
push
int3
outsl
scas
shll
daa
into
add
aaa
xchg
pushf
hlt
cmpb
insl
lcall
mov
ret
mov
push
sbb
ret
jle
daa
imul
sbb
pop
icebp
cltd
scas
in
and
mov
scas
stos
sbb
and
sbb
arpl
subb
cld
jmp
loope
ret
push
lahf
out
and
jnp
pop
mov
xchg
cld
test
inc
stc
pushf
pop
mov
ret
dec
push
lods
je
nop
mov
dec
loop
fadd
sbb
jp,pt
std
sub
cmp
ret
push
sarl
push
fadd
sbb
push
call
lret
cmp
push
xchg
pop
pop
repnz
ss
mov
in
xor
lcall
push
dec
fstl
mov
xchg
pop
jmp
rorl
jge
pop
cld
jb
cmpsb
inc
cmp
push
inc
mov
push
clc
cld
mov
jl
xor
and
lock
pop
std
xor
push
in
sbb
cmp
std
push
pop
dec
and
scas
in
dec
lahf
mov
js
sub
popa
loope
adc
pop
sub
mov
mov
push
les
sub
ret
daa
pop
in
dec
testl
or
inc
xlat
add
jno
mov
scas
dec
sbb
jbe
push
lock
ret
push
cmp
cmpsb
stc
sbb
clc
mov
lahf
add
adc
sbb
aam
cwtl
mov
aam
sbb
pop
cmp
push
xor
xchg
mov
aaa
mov
jmp
fs
xor
lret
mov
adc
push
pusha
cs
mov
lock
xchg
aaa
push
lcall
dec
jle
dec
scas
imul
pop
dec
pop
andb
imul
inc
dec
cmc
jno
stos
dec
mov
ds
int3
fildll
out
lods
jnp
xor
out
ret
sub
cmp
idivb
out
add
hlt
mov
enter
mov
faddl
leave
out
jp
aaa
popa
repnz
xchg
in
subl
aaa
in
ja
incl
jl
out
loop
adc
dec
mov
mov
loopne
jle
push
inc
adc
lea
jno
and
pop
pop
cmpsb
icebp
mov
sbb
xor
repz
das
loop
lea
jp
out
mov
xchg
jo
cmpsl
or
xor
sbb
idivl
enter
xchg
sbb
mov
dec
arpl
stos
cwtl
sbb
xchg
outsb
and
cmc
mov
in
pop
or
hlt
scas
movsl
push
addl
xchg
mov
pop
imul
in
and
gs
pop
pop
mov
push
mov
or
mov
dec
xlat
inc
hlt
out
dec
sbb
lods
and
pop
sub
jae
stos
divl
push
sbb
push
insb
mov
scas
aam
dec
push
dec
sbb
insb
fwait
notb
xor
rcrl
lea
adc
clc
fstpt
cmp
jns
jne
pop
cmp
and
fld1
jne
popa
inc
push
pop
cmp
sbb
xlat
mov
or
lea
lds
sbb
rcll
and
fsubrs
pop
inc
sbb
jmp
bound
or
shll
out
adc
mov
push
movsb
jb
iret
cmpsl
sub
div
jmp
mov
pop
mov
xchg
cmp
dec
mov
iret
mov
into
mov
testl
or
cli
mov
mov
lcall
sbb
pop
cwtl
dec
repnz
xchg
into
cmpsl
sub
add
jns
push
inc
test
sub
jle
pop
out
int
jg
and
ret
push
mov
insb
pop
xchg
je
jp
dec
mov
jo
jne
dec
inc
out
repz
or
pop
and
test
and
sbb
js
xchg
pop
xchg
sub
dec
test
fistpll
pop
sbb
imul
aas
and
and
push
add
int
out
icebp
clc
xchg
push
mov
jp
scas
aam
sbb
lea
mov
jmp
stos
in
ljmp
ds
xchg
mov
fadds
xor
cmpsl
aas
sub
fcomi
cli
push
in
imul
cwtl
cmp
push
fsubrs
repnz
aam
roll
int3
sub
test
pop
in
stc
sub
aam
std
cmp
sub
adc
mov
xlat
xchg
pop
push
sbb
push
xor
xchg
jge
xor
sbb
sbb
lcall
jns
pop
ret
test
lret
lcall
mov
pusha
mov
cmp
or
sbbb
sbb
inc
push
jnp
and
out
je
ds
sahf
aaa
mov
lcall
dec
cmove
test
data16
push
dec
add
ds
std
mov
mov
xor
jb
push
das
fistpl
adc
cs
lds
sub
stos
mov
cmpsb
cmp
push
jb
inc
jno
push
xchg
aad
pop
adc
xchg
sub
hlt
stc
pop
cwtl
add
daa
pop
call
inc
pop
sbb
test
and
adc
in
out
sub
pop
mov
mov
mov
ja
pop
add
cmp
out
dec
in
fsub
pop
mov
lock
mov
inc
jmp
adc
pop
data16
cmc
pop
repz
and
outsb
mov
push
pop
lock
js
enter
inc
fdivrl
inc
aaa
push
imul
adc
add
popf
js
xor
pop
mov
pop
mov
jns
sti
push
in
inc
aad
cwtl
fisubrs
out
xor
jns
mov
sbb
mov
push
test
fadd
push
pop
xor
push
cmp
sbb
in
and
sub
cmc
popf
xchg
in
mov
dec
xor
sahf
cmp
mov
dec
mov
in
jo
ret
out
or
mov
jns
jnp
jp
das
imulb
bound
add
rcr
and
inc
add
jo
xchg
pop
push
fldcw
test
mov
mov
shrl
in
jb
and
adc
fcomp
fdiv
xchg
pop
sub
insb
inc
cmpsb
jle
lahf
pop
mov
jmp
pop
mov
sub
mov
lret
into
cmp
jbe
sbb
ds
mov
sti
mov
and
and
aad
xchg
pop
mov
and
das
movsl
push
add
fistl
fistl
dec
sub
jl
nop
ficomps
test
inc
mov
cwtl
pop
pop
pop
push
adc
xchg
test
sbb
inc
in
testb
push
adc
sahf
idivl
mov
push
pop
cld
lcall
enter
cmp
cltd
xchg
in
inc
push
mov
daa
push
aam
std
aad
pop
pusha
fwait
jmp
mov
push
cmp
fidivl
inc
outsb
unpckhps
push
dec
mov
scas
lods
sahf
test
loopne
pop
push
mov
pop
out
fcompl
push
cmpsl
mov
mov
cmpsl
push
fisttps
mov
jns
ljmp
jl
jge
leave
es
movq
mov
imul
enter
cmpsb
xchg
sbb
inc
mov
xor
pop
push
mov
insl
pop
mov
mov
cmp
out
push
dec
xor
rdtsc
aad
aaa
outsb
mov
jmp
mov
pop
cld
mov
mov
mov
cmp
pusha
jbe
data16
xchg
rcl
mov
xor
mov
mov
push
ja
adc
test
das
dec
inc
call
dec
ret
add
cmpsb
sahf
ss
adc
hlt
push
sbb
idiv
mov
cld
push
push
in
test
lods
dec
fists
sarl
jb
aaa
jecxz
add
cmp
mov
mov
mov
in
or
mov
loope
and
imul
out
pop
add
rcrl
ret
or
inc
mov
out
jb
cmp
lds
and
aaa
outsl
cli
mov
ret
hlt
adc
sarb
and
aas
mov
outsb
xor
add
roll
sub
or
xchg
push
xor
in
out
push
popf
sbb
inc
mov
movsl
mov
arpl
into
cli
es
jmp
neg
int3
aam
fdiv
jne
hlt
push
cmp
lods
ss
pop
movsb
and
push
jecxz
cmpl
fld
jge
inc
push
loop
add
or
cmpsb
stos
or
xor
xchg
add
es
sbb
jb
scas
mov
cwtl
ss
addr16
sbb
fwait
dec
mov
shl
aaa
in
insl
dec
and
rorb
jb
call
js
xlat
in
in
adc
cmp
test
out
in
inc
cmp
rol
in
lret
jne
sub
mov
push
adc
aam
js
loop
push
and
xchg
sub
fnstcw
jns
jmp
cltd
scas
fildll
or
dec
mov
pop
sbb
push
pop
sbb
push
je
out
ret
ret
cli
data16
mov
mov
xor
cmc
adc
jecxz
pop
loope
lret
lea
adc
out
into
lcall
sahf
sbb
xor
pop
xchg
sbb
das
ss
mov
or
ret
inc
sbb
imul
mov
aaa
nop
aam
mov
cmpsl
or
add
lret
adc
ds
aad
enter
test
dec
call
cwtl
sub
arpl
ljmp
loopne
pop
xchg
cmp
adc
mov
ja
sbb
xchg
and
dec
mov
or
sub
test
cld
pop
into
das
fisttpl
pop
pop
cmc
sbb
es
xlat
rcll
adc
int
ds
add
scas
out
jo
cmpsb
and
adcb
mov
loope
mov
popa
xor
popa
adc
add
lahf
cmp
push
cmc
mov
mov
adc
in
dec
inc
jnp
call
add
sub
push
std
jns
jo
pushf
and
cmp
push
adc
push
pop
repz
mov
push
lods
fdivrp
jg
ljmp
iretw
jnp
icebp
fnstsw
mov
adc
mov
das
jns
pop
cmpsb
xchg
movsl
fstpt
mov
in
cmpb
mov
mov
push
pusha
inc
aaa
outsl
mov
cltd
xchg
inc
dec
jmp
sti
int3
push
pop
jo
push
sub
call
adc
mov
mov
lods
mov
sub
sbb
insb
cld
jmp
arpl
in
cmp
mov
lea
insl
iret
fistps
or
xchg
push
lret
cmp
sbb
clc
lcall
cmp
in
mov
fcoml
aad
jge
cmp
and
aas
push
dec
dec
shrb
xlat
cli
iret
sahf
insb
jecxz
jle
push
imul
pop
inc
fnsave
in
lea
add
mov
out
jb
sahf
imul
xchg
sbb
mov
or
xlat
jb
xor
outsb
push
imul
jle
hlt
lds
jb
sbb
push
add
add
or
mov
pusha
sahf
fistl
cmpl
xor
movsl
add
cwtl
mov
cmpsb
test
outsb
jb
pop
call
xor
aas
and
pusha
mov
popa
adcl
mov
or
sbb
stos
enter
cmp
sbb
jno
aaa
add
or
mov
push
popf
pop
bound
mov
sub
loope
pop
shl
aaa
mov
movsl
inc
and
pop
loopne
jb
call
and
mov
test
subl
idivb
mov
dec
push
movsl
dec
dec
push
icebp
jmp
mov
push
fsubl
stos
das
cmp
xchg
mov
xor
cmp
movsb
mov
out
scas
add
insb
pop
aaa
jbe
addr16
cmp
lret
push
dec
xlat
pusha
je
mov
into
mov
in
push
popf
push
lret
daa
test
stos
jl
aaa
lods
sahf
mov
add
adc
negl
les
push
imul
ja
test
sbb
inc
imul
jo
leave
mov
mov
dec
loopne
mov
mov
jl
xor
mov
not
push
ret
inc
insb
sbbb
outsl
test
cmp
int3
xor
bound
jg
dec
mov
xor
jg
jno
xchg
push
xlat
es
icebp
mov
fnstsw
mov
es
jnp
pop
jne
dec
ss
or
fidivl
push
push
sub
xchg
jmp
sbb
imull
xor
dec
cmp
cltd
mov
inc
cld
mov
in
inc
pop
loopne
push
sarl
int
cmc
jle
lret
and
or
aaa
inc
loopne
in
mov
icebp
jle
jp
push
mov
ss
in
sbb
and
jl
and
iret
int3
das
xor
stc
and
cmp
xlat
inc
outsb
xor
xor
and
jge
ljmp
imul
sbb
movsl
dec
js
faddl
xor
sub
mov
cmp
popf
stos
add
inc
test
push
mov
mov
pop
fwait
loopne
aas
scas
ss
in
jns
fbld
loopne
repz
push
pop
sbb
xlat
stos
imulb
imul
push
xchg
mov
jl
inc
mov
xor
ds
mov
adc
cwtl
jl
push
xlat
insb
aam
fwait
push
xchg
xchg
adc
and
push
xor
sti
test
daa
or
addr16
mov
je
test
xor
mov
aam
add
jmp
in
dec
mov
xchg
loope
cs
adc
mov
sub
es
push
loope
repz
mov
lea
psllw
ljmp
in
sub
pop
add
xchg
jg
aaa
sub
insl
daa
aaa
stos
mov
adc
aad
cmp
cmp
mov
or
add
inc
inc
arpl
push
xchg
mov
push
std
xchg
add
push
pop
sarl
mov
loop
mov
lods
sahf
into
lret
int
xchg
inc
or
gs
add
push
sbb
push
or
fdivrs
ds
xlat
cld
push
pop
dec
or
icebp
stc
pop
adc
movsl
sub
cmp
aaa
stc
test
enter
std
adc
movsl
ja
fnstenv
movsb
or
push
dec
lods
icebp
ror
adc
fdivl
jg
sti
dec
and
into
add
lock
add
dec
mov
jo
xchg
xchg
arpl
ret
pop
fidivl
push
dec
push
jle
in
push
jle
in
jge
xchg
push
in
push
test
cmp
and
mov
pop
inc
and
mov
or
jb
lret
inc
in
adc
cmp
jb
idivl
mov
aaa
cltd
and
lret
lret
mov
inc
sahf
lods
js
aaa
in
les
andl
pop
pop
sbb
out
mov
sub
push
test
or
fstl
mov
adc
fsubr
pop
push
icebp
xlat
and
add
jle
ds
dec
add
pop
push
cmp
xchg
pop
push
dec
cwtl
fcmovnu
dec
popa
imul
stos
roll
inc
mov
jmp
lcall
xchg
inc
gs
mov
pop
lods
dec
mov
push
mov
mov
dec
and
scas
in
jge
rcrl
lock
push
insl
aaa
mov
dec
dec
pop
xchg
and
loope
mov
mov
fnsave
jns
push
sbb
insl
movsb
jo
test
aad
xor
or
test
fldt
cmp
movhps
lea
int3
rcl
in
pushf
or
lret
loope
cltd
mov
or
outsl
or
insb
sbb
inc
push
ja
jno
ds
aas
push
inc
repnz
repnz
adc
in
jp
es
pusha
popf
popf
inc
push
test
cmp
rcll
outsl
mov
sysenter
fwait
mov
sbb
pushf
xorb
leave
inc
pop
adc
rcrb
pop
fimuls
mov
mov
addr16
lahf
rol
jo
cli
in
nop
lds
test
fsubl
push
int3
pop
repz
and
std
pop
out
ds
loope
push
jmp
sarl
out
sarb
or
pop
sbb
icebp
aaa
icebp
cli
add
cmp
xor
leave
and
jp
pop
dec
adc
in
or
mov
mov
xchg
mov
std
sbb
sbb
ffree
ret
jae
push
jnp
push
mov
popa
sbb
xchg
test
inc
mov
lahf
sub
mov
jle
das
loop
cmp
shl
test
sbb
int
sahf
pop
or
push
bound
outsl
pop
dec
stos
pop
ds
pop
rcl
sbb
in
xchg
cmp
push
push
fistl
filds
sbb
xchg
aaa
aad
popa
mov
jmp
adc
iret
bound
inc
dec
mov
adc
test
test
outsb
in
adc
scas
or
icebp
bound
xchg
xchg
xor
dec
jns
and
push
insl
xor
aas
cmpsb
mov
out
sub
jne,pt
shl
jnp
and
int3
push
push
loopne
push
mov
mov
mov
xor
add
jb
push
push
out
out
into
mov
ds
dec
arpl
cmp
in
icebp
pop
pusha
jl
inc
imulb
gs
es
lret
dec
sbb
in
aaa
lea
scas
aas
je
pop
add
mov
adc
es
jmp
add
sub
subl
mov
dec
ds
pop
test
sub
and
rol
call
inc
xchg
cmp
test
stc
mov
xlat
mov
push
mov
in
insb
sub
repnz
inc
pop
sub
je
xor
repnz
pop
mov
outsl
add
inc
mov
out
sahf
add
push
sti
mov
push
mov
sub
push
dec
hlt
loopne
lds
xlat
xchg
jo
js
mov
jg
das
fstl
push
or
jp
ret
fiadds
add
mov
leave
jp
outsb
add
decb
push
xor
inc
sbb
mov
push
outsb
out
pop
sub
or
mov
pop
shlb
fsubrs
and
bound
add
jbe
cwtl
ret
enter
aam
outsb
mov
imul
rolb
andnps
stos
lods
adcb
push
enter
jbe
push
clc
inc
gs
adc
cs
jmp
imul
test
or
dec
rol
scas
cs
pop
pop
adc
data16
repnz
jmp
pop
push
cltd
test
int
pop
mov
pop
xor
xchg
dec
int3
aaa
fdivrl
aas
pushf
mov
popf
ja
jecxz
pop
outsl
push
cmpsb
xor
insb
inc
sub
push
cmp
hlt
pushf
cld
call
sbb
lock
pop
ficoms
jecxz
cmp
mov
mov
outsl
lcall
push
add
loopne
test
imul
lds
jmp
sub
xor
mov
icebp
or
icebp
inc
push
jmp
movsb
mov
mov
push
gs
xchg
xlat
negl
mov
movsl
adcl
mov
pop
add
xchg
in
sbb
mov
lea
xchg
mov
mov
testb
jle
loope
pop
pop
and
mov
cmpsb
inc
arpl
jmp
push
dec
les
inc
mov
cld
xchg
inc
in
adc
mov
das
andl
inc
daa
lahf
js
insb
pop
jmp
sbb
into
loopne
xchg
xchg
inc
cmpb
lahf
out
lret
mov
sti
and
add
das
aam
frstor
dec
in
fisubrs
and
movsl
ljmp
hlt
sbb
xor
mov
bound
lock
add
lock
imul
in
pop
xor
dec
mov
pop
xor
dec
lcall
decb
mov
add
cmp
mov
sub
out
sbb
fsubrs
mov
popl
shll
in
mov
pushf
rcr
xchg
std
orl
dec
add
fldenv
repz
xchg
in
enter
sbb
adc
ret
inc
pop
xor
and
and
shlb
inc
dec
bound
sbb
add
jp
int3
add
hlt
icebp
push
fcmovu
add
leave
pop
sbb
in
addb
leave
mov
pop
scas
mov
mov
mov
dec
mov
and
jecxz
pop
bound
cmp
push
mov
jmp
sub
mov
in
sbb
data16
dec
and
dec
add
fsubs
mov
dec
xchg
push
jae
mov
aaa
imul
jmp
cmp
aaa
scas
add
sbb
call
lret
rorb
sahf
xchg
shrl
jecxz
sti
and
in
arpl
push
mov
aas
add
ss
jp
cmp
xor
rcrb
xor
and
inc
mov
outsb
stos
mov
in
xchg
mov
or
les
or
mov
sbb
mov
ret
das
jb
mov
dec
jl
cwtl
mov
jle
into
sahf
enter
arpl
stc
mov
sub
imul
pop
aam
shrl
cmpsl
mov
add
cmp
or
stc
in
inc
rcr
scas
fwait
mov
adc
bound
pcmpeqw
shrl
mov
inc
push
pop
data16
pusha
out
cmp
mov
xor
push
loope
jecxz
js
pop
mov
inc
adc
xor
repnz
cltd
mov
dec
xchg
aad
jo
aam
xchg
imulb
mov
mov
jge
ds
insl
adc
jno
dec
xor
call
aam
out
ss
jp
arpl
repz
pop
ja
cwtl
mov
pop
loope
popf
mov
push
mov
cmp
mov
in
outsl
ret
sbb
cltd
or
jbe
cmp
push
andl
adc
adc
int
aaa
aam
mov
xchg
pop
cmp
xlat
repz
xor
push
ret
fsubr
cmp
xchg
jp
mov
pushf
jb
loope
sar
or
push
test
dec
push
dec
cmp
mov
sub
and
adc
mov
sahf
push
repz
xchg
or
in
jae
scas
rcrl
add
int
pop
das
cmp
call
sub
mov
call
jle
nop
lods
add
pop
filds
sub
add
push
outsb
mov
and
mov
mov
or
pmulhuw
cltd
inc
js
mov
out
pop
jne
aaa
daa
push
popa
into
ja
inc
xchg
pop
jae
cmp
sub
mov
lea
sbb
les
sbbb
jg
nop
pop
mov
ret
test
mov
fcomps
outsl
fnstcw
sub
sub
xchg
pop
dec
inc
or
xlat
repnz
and
mov
xchg
dec
iret
push
sbb
jle
lods
pushf
dec
iret
test
sbb
inc
and
dec
pop
dec
rcrl
pop
aaa
shlb
jle
pop
jecxz
aam
fldt
fs
aaa
ficomps
outsb
pop
dec
nop
sbbb
dec
xor
mov
mov
lcall
iret
ss
test
inc
fldt
test
or
rorl
in
adc
loope
mov
repnz
add
xchg
call
testb
jg
pop
adc
test
mov
inc
xor
mov
xchg
in
jp
add
fs
outsb
sbb
mov
stc
addr16
arpl
push
cmp
cmp
nop
xchg
mov
lcall
or
adc
cmpsl
int3
mov
mov
out
scas
mov
cwtl
sub
lock
jo
sbb
push
mov
mov
movb
cwtl
in
dec
cmp
sub
shrb
inc
sub
push
pop
push
data16
jnp
push
stc
test
inc
jg
pop
mov
in
pop
push
cmpsb
jae
push
inc
fidivs
sbb
cmp
inc
sbb
mov
andb
leave
mov
cld
mov
js
enter
js
cltd
inc
andb
insl
lret
lcall
divb
add
in
test
pop
and
stos
repz
ds
dec
stos
je
cmp
xchg
add
fildl
out
iret
aaa
and
test
clc
inc
or
dec
pop
push
pop
cli
cmpsl
bound
push
push
jb
xchg
jb
in
sahf
fs
xchg
mov
cmp
pop
stos
fucomi
xor
test
mov
ss
xchg
push
dec
xchg
loopne
cmp
lret
aas
imul
or
sbb
and
scas
frstor
cmpsl
adc
inc
jle
sub
in
and
bnd
in
subb
push
pop
lock
pop
or
xlat
pop
loope
aad
xchg
jge
xor
int3
sub
mov
cmp
les
push
mov
pop
movsl
aas
sbb
gs
mov
jecxz
mov
add
insl
clc
ss
fwait
xor
cld
add
xchg
jmp
loope
outsl
jcxz
adc
mov
xchg
push
scas
mov
xor
sub
cmp
bound
movb
icebp
push
je
arpl
mov
mov
sub
push
aad
cltd
in
mov
jmp
fnstsw
hlt
jecxz
mov
rep
addr16
hlt
sub
fstps
lea
inc
xor
aam
adc
fmuls
lods
mov
push
sarb
mov
push
iret
add
loop
es
aas
popa
sbb
adc
sub
jne
fst
fimull
jae
stc
mov
notb
ja
stos
cld
arpl
push
sbb
iret
add
nop
sbb
adc
rorb
dec
pop
sub
popa
dec
push
xlat
push
imul
push
lods
push
imul
mov
jb
movsb
jecxz
stos
out
mov
push
sbb
jne
aas
dec
mov
push
cmp
sub
sub
rcl
sbb
ja
mov
outsb
shrl
sbb
lret
cmp
jl
lods
outsb
out
dec
push
lret
jle
aaa
sbb
push
clc
sti
lret
xor
dec
imul
cli
sub
lock
sub
mov
imul
stc
lss
xchg
adc
push
int3
push
ret
mov
sar
shlb
ret
and
fimuls
pop
in
leave
jae
call
pop
adc
and
push
xor
inc
jg
dec
pop
ds
pop
test
sarb
aas
push
sbb
adc
out
jno
pop
mov
push
mov
push
movsl
mov
data16
or
add
fnstsw
add
sbb
pop
lods
xchg
scas
pusha
cld
or
adc
out
mov
bound
sbb
xorb
icebp
pop
decb
js
hlt
loope
pop
sbb
stos
divb
das
aam
sbb
mov
xlat
and
rorl
ror
clc
call
mov
cli
pop
jp
pop
outsb
mov
lret
dec
iret
dec
mov
arpl
or
imul
lcall
xchg
sbb
mov
add
jnp
jge
fwait
js
fdivrs
fdivl
dec
pop
je
xlat
cmpsb
in
roll
jle
pusha
loope
fs
aaa
aad
aas
iret
jle
mov
lcall
fnstcw
pop
pop
rcrb
and
call
scas
movsb
xor
mov
hlt
iret
or
cmp
das
cmp
mov
sbb
addr16
mov
js
fisubs
js
mov
ss
push
mov
xor
xchg
pop
mov
int3
lret
iret
push
pop
aam
jb
ret
cmpsl
or
mov
fcmovnu
pop
sub
push
ljmp
mov
sub
les
addr16
pop
sub
mov
dec
mov
data16
fnsave
push
xchg
jbe
and
or
mov
ljmp
das
pop
in
push
fxch
cltd
in
xchg
ljmp
jmp
push
mov
ds
lods
and
sahf
add
je
xchg
push
andl
add
jno
je
mov
dec
add
jg
movsl
mov
cmp
mov
mov
cmp
bound
sub
jae
sahf
sarl
daa
mov
sahf
mov
add
xor
fsubl
fistps
sbb
test
cmp
in
movsl
mov
sbb
add
dec
cmc
push
fdivrp
xorb
jecxz
insb
arpl
mov
stos
cmp
gs
insb
add
loope
cmp
xchg
movmskps
sbb
inc
jp
fwait
lret
pop
push
mov
popa
mov
clc
pop
pop
cmc
sbb
aad
stos
jle
sub
movsb
fistpl
jl
mov
xchg
jl
push
sbb
add
in
daa
mov
loop
sbb
lahf
rcrl
repnz
mul
xchg
int3
jle
jno
pop
pop
in
cld
adc
push
fildll
insl
cmp
scas
arpl
or
aam
stc
jb
cmp
add
in
mov
loop
inc
fildl
xlat
rcl
add
mov
ffree
outsb
mov
lret
lahf
leave
pop
out
insb
int
iret
test
cmp
out
add
rolb
sub
push
cmp
jle
dec
xchg
aaa
cmp
jns
pop
stc
sub
push
or
aam
push
sbb
test
pop
mov
into
push
or
add
jb
sbb
inc
push
mov
inc
or
jge
lahf
mov
adc
xchg
outsl
push
std
mov
cmpsb
pop
fistps
fnstcw
mov
inc
mov
je
sbb
jp
mov
pop
ret
push
adcl
dec
xor
lret
and
sub
jbe
add
jbe
fbstp
ficompl
dec
pop
out
pop
fwait
mov
cmp
std
ss
inc
cmpb
inc
rorl
adc
iret
data16
je
insl
fs
jo
push
lea
cltd
mov
aas
ds
loope
dec
adc
sbb
dec
mov
add
test
sbb
fstpl
out
int
mov
push
pusha
out
xlat
push
push
dec
mov
sbb
mov
or
mov
pop
xor
inc
mov
xchg
sbb
bound
dec
sbb
pop
mov
inc
sub
xchg
sbb
loop
push
push
push
mov
loopne
inc
loopne
cmpb
iret
jbe
xlat
sub
xchg
jg
add
out
aaa
mov
pop
sub
mov
sbb
pop
dec
mov
mov
fidivrs
sbb
mov
rorl
mov
inc
pop
inc
fisubrs
push
mov
pop
movsl
adc
loope
mov
neg
xchg
repz
push
xor
push
loope
xchg
jb
mov
pop
into
cmp
inc
ja
push
pop
mov
xchg
ss
and
mov
out
cmpsb
iret
mov
jle
add
xor
sbb
rcrb
mov
loope
maskmovq
testl
push
aad
sub
fwait
stos
repz
sub
jmp
aas
aaa
repz
or
cs
cld
jl
mov
sbb
sub
xor
ret
jle
push
xchg
adc
fcompl
adc
test
mov
cmpsl
cmc
add
es
mov
stos
into
sti
pop
pop
in
and
movsb
push
lock
pop
test
jecxz
nop
adc
std
add
mov
js
setp
mov
pop
dec
enter
and
push
aaa
dec
arpl
pusha
es
sub
xor
inc
jecxz
jo
stos
orl
ret
jno
xor
xchg
pusha
sbb
cwtl
arpl
cmp
inc
adc
movsl
rorb
jno
in
ds
iret
in
adc
int3
jp
shll
xchg
pusha
lcall
cltd
xchg
adc
lcall
lcall
dec
mov
leave
jo
jp
bnd
aad
push
mov
fstpt
aaa
push
adc
add
sbb
dec
push
sub
test
shr
mov
adc
xchg
pop
dec
xchg
jle
repz
mov
lods
mov
push
imul
pop
icebp
pop
repz
js
push
sbb
pop
pop
mov
out
in
imul
jecxz
dec
cmp
test
sbb
push
and
mov
jg
andl
mov
pop
pop
add
push
mov
jge
incb
insb
out
rolb
ds
popf
cld
mov
lds
dec
or
adc
ja
dec
lcall
in
dec
adc
xchg
outsb
fiadds
pusha
mov
out
insl
imul
inc
repz
mov
add
in
cmp
imul
lcall
sbb
imul
sti
push
imul
out
stos
push
rclb
mov
sub
ret
aaa
push
jnp
fnstsw
fisttps
mov
jecxz
or
shlb
pop
jbe
in
push
sbb
dec
xor
mov
mov
mov
inc
aaa
and
out
push
inc
lea
pop
ret
clc
jecxz
inc
outsb
dec
dec
loopne
fcomp
popf
mov
pop
jne
xor
push
sbb
outsl
mov
fmuls
loopne
fwait
xor
mov
iret
jo
loope
andb
rolb
gs
int
adc
lods
cmpsb
add
jns
xor
push
hlt
pop
out
out
xor
jnp
pop
ss
adc
jbe
ret
sbb
push
sti
shrd
scas
loop
add
mov
xlat
jle
fsubr
outsb
cmp
popa
dec
cmp
cmc
sbb
cmp
fcomi
jne
push
adc
xchg
mov
sbb
push
ss
push
clc
iret
sahf
xor
shll
pop
pop
lcall
xchg
push
jmp
mov
xor
mov
xchg
and
push
in
mov
pop
sbb
dec
mov
adc
cli
aas
insl
or
inc
ss
arpl
jo
mov
test
add
xchg
repnz
or
imulb
jnp
outsb
loop
dec
inc
and
popa
cmp
xchg
pop
aaa
les
and
add
adc
fldl
pop
dec
xchg
add
pushf
xor
jecxz
push
mov
xlat
in
sbb
mov
rorl
movsl
push
out
xchg
dec
jb
inc
orb
inc
enter
in
sub
adc
push
push
sub
adc
or
xor
sahf
addb
dec
shll
push
ljmp
sti
and
ss
jl
add
mov
lret
decl
hlt
scas
pop
insb
push
dec
lret
xchg
add
inc
jle
mov
imul
leave
insb
cmp
imul
aas
scas
pop
mov
mov
inc
dec
icebp
and
jecxz
push
pop
jnp
stos
jno
adc
ljmp
push
xor
jnp
aam
xor
mov
fistl
jo
pop
int3
push
cli
dec
aaa
cmpsb
loop
mov
int
mov
ss
scas
push
icebp
mov
jo
sbb
jb
in
jno
push
jge
fadds
jp
aaa
dec
cltd
pop
xchg
push
push
and
testb
dec
sub
movsb
fcompl
xchg
xor
iret
xchg
cmp
aaa
je
sub
pop
mov
inc
jne
dec
or
outsb
sbb
cwtl
mov
lock
lret
cmpsb
xor
fs
mov
add
arpl
aaa
cmovbe
enter
mov
scas
xor
fmull
xor
push
movsl
pop
fstpl
cmp
adc
and
add
notb
mov
aam
arpl
outsl
sbb
adc
push
jmp
push
clc
push
test
int
sbb
push
cmp
jo
push
fwait
dec
enter
sbb
aam
test
mov
das
mov
iret
cmp
imul
and
sub
cmpsb
mov
aam
and
stos
outsl
cltd
or
icebp
jmp
popa
add
sub
push
mov
out
out
mov
in
in
mov
jns
xor
ljmp
sub
mov
dec
mov
in
mov
jl
lret
or
xor
pushf
std
adc
xchg
aaa
push
shrl
aas
jl
pop
adc
xor
data16
cltd
sti
add
dec
push
sub
cld
jne
or
in
ss
dec
mov
leave
das
shl
cmpsl
adc
inc
inc
mov
push
cmp
int
mov
aaa
int3
bound
push
loope
jle
imul
popf
push
stos
xchg
dec
loopne
pop
test
xor
inc
mov
cli
rcll
dec
jno
outsb
sbb
xor
adc
pop
dec
dec
fadd
notb
mov
aad
xor
mov
pop
fs
fadds
push
sti
int3
and
mov
test
arpl
mov
scas
push
mov
mov
dec
add
mov
pop
icebp
lods
cmpsl
lahf
xor
and
stc
dec
push
sub
faddl
aaa
push
add
jne
fdivs
sub
out
mov
xchg
cmpl
mov
inc
push
ds
sti
jb
sahf
enter
xor
add
lret
movb
xchg
push
cwtl
pop
aas
outsb
inc
mov
cmpsb
sbb
ret
sahf
mov
push
fwait
jp
mov
lods
movsl
mov
jmp
cmp
bound
adc
cmp
mov
sbb
xor
mov
in
subl
sarb
stos
daa
lods
push
jl
push
ret
call
cmpsb
scas
orl
fsubrl
divl
rcrl
push
or
jb
inc
and
ret
mov
push
ret
stos
rclb
mov
jnp
pop
popa
shl
pop
push
addr16
mov
fsubrs
pop
cmp
inc
mov
fxch
inc
std
jp
push
out
and
fstl
imul
pop
ret
jnp
xchg
in
mov
sub
mov
leave
cltd
stos
fcoml
mov
sbb
cmc
stos
mov
push
push
cmp
lret
inc
and
ds
fcoml
fsubrl
mov
in
mov
imul
out
cwtl
hlt
cmp
inc
js
mov
rorl
add
jno
loope
and
sbb
and
jno
pusha
rcrl
push
int3
dec
imul
movsl
test
cld
movsl
dec
add
adc
sahf
mov
pop
sbb
cmp
and
inc
mov
clc
std
xor
jns
movsb
jne
in
sub
inc
arpl
in
scas
cmpsl
idivb
jb
aaa
je
fwait
jg
add
cmpsb
pop
push
push
push
sti
jmp
pop
mov
stos
mov
test
inc
fldt
sbbl
shll
in
sbb
pop
cmp
pusha
cwtl
pop
out
jbe
bound
mov
mov
mov
sub
sarl
dec
int
ds
mov
and
pusha
movsl
test
out
nop
xchg
push
add
in
dec
cmpsl
repz
fld1
sbb
popf
pop
cltd
and
add
pop
lahf
push
in
xchg
out
loopne
sbb
insl
repz
push
mov
in
dec
jp
pop
mov
jae
incb
push
ljmp
mov
jno
ret
fmull
lcall
pop
scas
mov
or
and
stc
fnstcw
push
pop
sar
nop
jmp
scas
js
push
fmull
cmp
icebp
jle
shll
xor
call
push
out
leave
addr16
imul
pop
mov
aaa
or
add
inc
or
leave
sub
push
lcall
jle
aaa
test
push
fsubrs
jb
cltd
in
pop
xchg
xlat
pop
pop
imulb
test
or
mov
add
insl
cmp
adc
ret
inc
ja
cs
and
mov
loopne
fiaddl
mov
pop
std
leave
cmp
jg
cwtl
and
repnz
in
jb
xor
push
xchg
and
mov
xor
outsb
fwait
mov
cmp
aam
jp
mov
mov
jmp
sarl
sbb
sbb
in
sbb
lcall
cmpsb
fcompl
nop
push
mov
pop
fstpt
cld
sbb
insb
xchg
outsl
dec
in
xor
mov
cld
xor
fwait
mov
inc
jp
mov
sahf
test
cmp
sub
call
dec
aad
int
shrl
sub
popa
inc
adc
xchg
lods
and
pop
push
jle
addr16
pop
fistl
push
es
dec
into
loop
sbb
pop
and
lret
aaa
or
jg
add
lock
fildll
fsubs
stos
lock
in
sub
mov
dec
push
pop
out
mov
lahf
test
xchg
scas
dec
and
or
mov
mov
loop
jp
cmp
sub
inc
test
imul
add
jmp
pop
aas
and
jl
inc
xchg
xchg
movsl
cli
mov
inc
sti
xchg
daa
jl
or
fnstcw
mov
jnp
sarl
outsb
int3
pop
pop
call
pushf
jp
pusha
mov
mov
push
fsubr
mov
scas
das
xlat
sti
ret
dec
sub
rorl
fwait
les
in
pop
jle
mov
pop
sarb
loope
dec
dec
stos
push
in
fsubl
sbb
aaa
popf
and
sub
fnstsw
dec
scas
stos
addr16
pop
out
fldcw
loop
xchg
cwtl
std
and
mov
js
jle
and
mov
xor
and
jp
bound
pop
mov
std
in
jmp
lret
or
dec
pop
push
repz
std
jno
dec
adc
sbb
jbe
push
aaa
jnp
push
imul
loope
lea
outsb
pop
sti
outsl
dec
cmpsb
mov
xchg
mov
and
xchg
cltd
mov
adc
pop
add
adc
push
push
dec
mov
and
mov
adc
pop
cmp
stos
push
inc
outsb
lret
es
aas
mov
int
cmp
xchg
js
lods
push
add
loope
rcll
sbb
cmpsb
fbld
leave
out
std
lret
repz
ljmp
sub
jge
pusha
mov
pop
pop
mov
jne
push
xchg
jbe
sbb
jecxz
in
jge
shl
sbb
movsl
add
or
and
fildll
fsubrl
inc
in
lahf
or
out
enter
dec
inc
mov
popf
xchg
ss
imul
mov
test
or
pop
ret
repnz
mov
ss
clc
imul
dec
mov
and
pop
dec
add
mov
data16
in
sbbb
inc
lods
pop
addr16
mov
inc
mov
jnp
mov
in
aaa
gs
xchg
hlt
xlat
idivb
fsubrs
icebp
mov
in
es
call
mov
inc
mov
add
out
pop
mov
test
aas
scas
daa
mov
ds
cwtl
mov
jg
lret
sbb
push
and
jno
icebp
jge
jge
mov
xchg
cmp
jnp
jp
fcoms
xchg
bound
je
ret
pop
add
out
xor
and
outsb
js
mov
add
aaa
xor
ja
sub
mov
popf
fs
cmp
xchg
sub
or
incb
push
bound
aaa
repz
test
mov
sti
in
and
push
mov
movsb
ret
into
or
lea
jmp
sbb
fwait
inc
in
nop
daa
push
lock
push
arpl
mov
pop
fs
fdivl
dec
out
loop
test
pop
out
jbe
mov
cmpsb
shlb
leave
add
sbb
jb
and
mov
idivb
int3
pop
iret
or
dec
fidivs
cmp
push
repnz
jno
adc
cmpsl
es
pop
popa
dec
mov
outsl
jg
adc
add
pop
std
lcall
cmp
pop
push
movhps
cmpsb
push
push
bound
jecxz
jns
sbb
pop
hlt
pop
cmc
out
sub
ret
addb
inc
lea
inc
push
jns
out
ret
sub
pop
aam
imul
nop
cld
aaa
lea
icebp
pop
cmp
lock
adc
sahf
push
and
movsl
jmp
outsl
pusha
xor
cs
ja
fbstp
xchg
sbb
nop
push
push
or
adc
mov
push
addr16
insl
lods
call
lds
jp
shlb
mov
push
test
mov
sub
and
aaa
xchg
lcall
mov
je
testl
xlat
or
cmp
insl
cwtl
loope
call
mov
or
js
mov
xchg
sahf
jno
sti
aas
pushf
dec
cmp
xor
mov
pop
dec
inc
sahf
aas
test
aas
outsb
test
inc
int
cmp
pop
mov
je
pushf
jmp
adc
mov
es
fdiv
fistpl
adc
cmp
subl
icebp
fwait
ret
inc
push
fmull
mov
fdivl
dec
dec
fldcw
cwtl
ret
ss
sbb
fstpl
repz
xchg
push
lea
les
loope
out
mov
movsb
sti
ds
mov
jge
stos
dec
ss
cltd
ret
push
movsl
lods
cltd
pop
xor
cmc
sub
cwtl
shlb
mov
and
sub
inc
cltd
cmp
pop
xchg
pop
jge
enter
int3
lods
mov
dec
xchg
je
shl
and
test
and
xchg
pop
dec
imul
lock
jb
enter
push
cmp
mov
mov
mov
repz
lcall
sbb
cmp
push
call
sub
adc
loop
pop
adc
inc
jle
xor
add
or
popa
in
mov
add
jb
sub
movb
nop/reserved
sbb
jno
outsl
inc
outsb
mov
popw
in
mov
in
mov
pop
pusha
aaa
arpl
pop
lret
xor
jno
add
lea
push
inc
jnp
adc
fdivl
xor
mov
xor
dec
je
movsl
pop
mov
fnsave
and
adc
adc
pop
dec
sub
cli
cmp
sbb
push
xchg
and
pop
cltd
sbb
cmp
and
aaa
sub
xchg
jne
or
mov
ret
icebp
pushf
sbb
dec
movsl
dec
sahf
adc
sti
push
nop
insb
add
sbb
xchg
ss
scas
sbb
dec
or
icebp
inc
addl
je
fs
in
push
xor
ret
xlat
mov
lret
sub
out
ret
pop
dec
cmpb
lahf
int3
sahf
mov
shrl
into
cmc
sbb
xchg
mov
sub
outsb
call
cltd
mov
leave
rclb
sbb
shll
popa
or
mov
sbbl
pop
push
rcrl
pop
out
popf
add
icebp
pop
mov
in
jmp
imul
ss
push
out
pop
add
mov
inc
test
fwait
aad
fdivs
mov
loopne
icebp
xor
int3
fwait
mov
addr16
mov
dec
popf
xor
pop
push
std
sbb
testl
push
aas
enter
imulb
push
cmp
out
gs
aaa
xchg
loope
into
jbe
sub
jmp
das
jecxz
loopne
jl
aam
pop
adc
push
imul
jno
aaa
in
insb
cmp
sbb
xchg
ds
inc
jno
jge
hlt
jb
orb
test
lods
mov
aam
imul
in
ss
in
out
aaa
cmp
mov
fs
hlt
sub
inc
and
fnsave
lret
jle
std
cmp
mov
stos
xchg
jmp
jg
xor
in
xor
arpl
dec
inc
icebp
shrl
pop
mov
xchg
ds
aaa
subl
mov
sbb
sub
std
aaa
lcall
push
fsub
das
ljmp
jno
pop
test
filds
pop
jo
adc
push
popf
mov
mov
mov
mov
cmp
lret
sbb
push
fsubrl
pushf
aaa
xlat
insb
stos
mov
xchg
ss
loope
push
loop
push
jo
xorb
inc
repnz
add
nop
and
push
mov
repz
inc
decl
push
pop
jbe
mov
lret
inc
push
and
jno
arpl
imul
in
icebp
mov
ret
push
adc
rolb
jb
js
pop
mov
inc
adc
sbb
bound
cmc
imul
mov
aas
sbb
jne
aam
jb
sbb
jmp
lret
data16
mov
mov
inc
push
push
ljmp
xor
xor
jle
fucomi
insb
sbbb
das
xlat
sub
iret
mov
fbld
in
rcll
jmp
dec
jb
nop
imul
lods
jl
fxch
sbb
fcom
imul
xchg
ja
ds
sbb
int3
and
sub
jno
lods
loop
test
xorb
roll
in
dec
dec
push
adc
movsl
outsl
jecxz
insl
pop
les
inc
bound
ljmp
cli
pushf
aaa
fisttps
xlat
fisttpll
into
dec
negb
js
pusha
das
cwtl
stc
fists
and
lods
int
push
imull
sbb
aaa
iret
mov
push
push
or
outsl
xor
das
pop
xchg
pop
sub
pop
ljmp
cmp
dec
dec
ss
and
ss
ss
mov
ss
sahf
cmpsl
pushf
push
imul
pop
dec
icebp
aad
sbb
add
inc
and
cmp
xor
stc
mov
mov
sub
movsl
dec
lock
mov
std
das
push
push
or
inc
mov
pusha
lcall
mov
mov
and
sbbl
sub
in
cmp
pop
dec
cmp
push
mov
add
inc
rep
pop
sahf
add
or
sbb
je
jbe
push
dec
inc
lret
push
out
shl
jle
adc
fiadds
stc
adc
push
leave
scas
push
je
jp
popa
ss
cmp
cwtl
cwtl
jp
fsubrs
in
sbb
fdivrl
mov
rclb
insl
addr16
jno
aam
mov
jle
jno
out
xor
pop
dec
push
xchg
cmp
pop
mov
aaa
in
and
push
scas
pop
gs
sbb
movsl
adc
les
dec
sahf
jo
pop
ret
mov
mov
sbb
adc
and
mov
or
outsb
or
push
int
cmpsl
test
ret
test
int
cwtl
mov
fwait
aaa
dec
test
mov
fistps
xor
pop
xlat
mov
xchg
dec
sub
lods
cmp
cld
xchg
sbb
mov
pop
mov
push
test
imull
sbb
outsl
test
aaa
pop
or
cmp
clc
fmuls
shr
mov
xor
xchg
xor
fisttpll
push
pop
pusha
fsubrs
lret
pusha
popa
xor
les
ficompl
mov
call
out
cs
out
xor
mov
cld
test
inc
enter
arpl
mov
push
or
adc
daa
xchg
stos
pop
int
push
je
out
jnp
subb
push
push
mov
js
imul
mov
popa
inc
fsts
rorb
rcr
fisubrl
loope
in
je
xchg
pop
cltd
jo
and
fnsave
bnd
dec
call
xchg
jg
push
out
inc
sbb
aad
add
sbb
popa
dec
imul
aam
sub
xor
jl
jbe
out
outsb
push
loop
pop
pop
clc
xchg
sub
daa
jns
adcb
jmp
aad
hlt
lret
pop
inc
xchg
loop
out
lock
push
pop
mov
aaa
pop
push
loope
scas
loopne
ret
push
dec
jmp
jb
repz
mov
clc
push
jp
arpl
ljmp
fbld
sbb
lahf
mov
lea
sub
pusha
xor
daa
aaa
test
shlb
repz
pop
mov
and
pop
dec
push
testl
nop
bound
jge
cwtl
pop
icebp
cli
push
cmp
jb
movsl
mov
test
lcall
jl
daa
leave
dec
fbstp
mov
and
push
scas
add
cmp
push
data16
and
sarl
jge
mov
push
cwtl
pop
arpl
ret
xchg
sbb
inc
inc
and
or
in
arpl
xchg
cwtl
clc
aas
lock
loope
fcomip
mov
or
pop
sbb
adc
int3
xor
arpl
aaa
xor
push
pop
sti
hlt
pop
jb
movsb
xchg
andb
cmp
aaa
outsb
icebp
scas
adc
mov
jge
or
jb
or
lret
movsb
rcl
in
in
mov
cwtl
repz
aas
jecxz
rcrb
mov
out
and
adcb
adc
pop
xchg
pop
ss
test
sbb
sbb
mov
outsl
push
dec
or
dec
das
lods
ret
mov
andb
aam
xlat
aad
shr
std
inc
inc
scas
cmp
into
sub
sub
push
push
out
mov
mov
and
add
add
dec
aaa
mov
and
mov
cmp
aad
mov
add
inc
xor
lret
les
mov
xorb
xor
cwtl
rolb
push
out
divb
sub
cmpsb
lea
out
ds
aaa
jg
push
or
dec
or
call
test
sub
adc
out
or
stos
ficoml
lret
hlt
out
rcr
notb
mov
aaa
ror
scas
sbb
cmp
xchg
or
test
jecxz
mov
mov
mov
es
or
inc
js,pn
inc
push
mov
or
and
jae
lcall
pushl
loop
ss
xor
sbb
pop
std
pop
adc
jge
loope
mov
stc
int
sub
mov
pop
xchg
push
sbb
ss
push
movswl
sbb
push
mov
mov
lock
ss
je
pop
in
jb
push
adc
pop
fmuls
popa
adc
daa
cmp
xchg
xor
xchg
sbb
push
ljmp
fdivrl
pop
cltd
pop
adc
movsl
add
xchg
adc
lcall
das
outsl
in
push
jnp
sbb
add
in
outsb
mov
icebp
cwtl
stos
ja
sub
insb
push
ret
inc
scas
imul
hlt
add
mov
inc
fcoms
jecxz
enter
inc
add
aad
cmp
sub
pop
and
out
aas
das
fbld
cmpsl
or
ss
lret
insb
pop
test
subb
dec
ss
dec
popf
jle
cmp
call
or
outsl
xchg
jbe
sbb
cmpsl
push
lds
test
mov
int3
popf
cmp
xchg
push
jbe
cmpsb
testl
loop
push
aas
arpl
xor
les
inc
fistl
xor
loop
leave
inc
js
aam
repnz
lds
pop
xor
fldcw
lock
jmp
or
jno
pop
dec
push
sbb
pushf
mov
iret
xchg
xchg
pop
xchg
inc
icebp
jle
jmp
add
outsb
sub
stos
jnp
jns
jecxz
xor
xchg
mov
mov
xchg
sub
je
pusha
in
push
fbld
add
loop
fisttpl
xchg
test
pop
movsl
fwait
cmp
push
fstl
cmpsb
loope
sub
cmpsb
jae
add
jecxz
repnz
mov
addr16
repz
mov
shlb
pop
mov
jle
or
ja
xor
sbb
shr
repnz
aaa
js
out
into
cmp
jo
cmp
sbb
dec
push
push
pop
in
cltd
andb
adc
in
fdivrp
adc
dec
dec
push
mov
mov
aad
negl
dec
in
lea
push
jnp
fst
mov
push
stos
dec
cs
jb
mov
sbb
bound
enter
pusha
dec
imul
pop
in
pop
adc
stos
mov
cmp
pop
sbb
inc
push
mov
mov
inc
aaa
mov
rcrb
sbb
insb
sbb
xchg
inc
jne
pop
jmp
jp
fistl
xor
jg
std
repnz
aaa
xchg
adc
fldt
cmp
xor
out
and
xchg
repz
jae
std
into
imul
dec
add
aas
in
xchg
fmull
mov
mov
jge
push
mull
insb
aaa
xor
jnp
add
sbbb
stc
pop
in
imul
mov
fidivrs
cmpsb
loope
push
movb
inc
out
mov
sub
int
pop
subb
dec
inc
xor
cmp
adc
cld
mov
jge
inc
iret
adc
sbb
sub
push
ja
push
icebp
daa
and
lret
xor
mov
cld
aaa
and
and
mov
lcall
sbb
movsb
xchg
inc
orb
inc
insl
aaa
fstpl
mov
pop
shrl
je
cmp
adc
xchg
dec
jmp
inc
pop
push
loop
xchg
lods
dec
arpl
call
pop
aaa
inc
in
flds
mov
xchg
scas
js
mov
shll
fcomps
jl
scas
jg
sbb
cmpb
dec
jae
rolb
into
aaa
fimull
fnstsw
sarl
push
jbe
jmp
movsl
aaa
adc
lock
mov
outsb
pop
fwait
inc
cmpsl
inc
gs
inc
cmp
cld
mov
pop
sub
sbb
adc
int3
adc
leave
ret
dec
jne
cld
mov
push
sub
loope
sub
add
out
push
jg
shll
xor
sbb
jle
sbb
jmp
mov
mov
add
pop
push
jge
int3
icebp
mov
fcmovnu
push
sub
cmp
test
pop
mov
dec
in
xchg
fcomps
xor
xchg
sbb
out
jp
aaa
decb
out
cmpsl
add
sbb
and
push
sub
cmp
dec
ss
dec
mov
aam
pop
xchg
sbb
pop
cld
or
repz
pop
sub
push
fwait
pop
lods
sub
and
pop
adc
inc
pop
jle
adc
mov
into
and
xchg
pop
cmpsl
fstpl
ljmp
loope
jge
das
insb
ss
jno
fwait
cmpsb
test
jge
and
dec
or
inc
divb
dec
daa
mov
andb
jne,pn
sub
dec
jge
rorl
aam
sar
incb
cmp
sbb
inc
aam
pop
ret
pop
lock
fiadds
inc
aaa
jae
scas
stc
xchg
pusha
cltd
jge
outsl
inc
xchg
movl
mov
enter
orb
inc
lret
fs
inc
aad
dec
cwtl
mov
adc
push
aaa
inc
cmc
push
fbld
aam
sti
mov
add
xor
lds
notb
in
sbb
lock
adc
mov
add
sbb
mov
xchg
clc
mov
add
lock
cmp
fmull
xchg
sti
cmpsb
jg
sarl
or
insb
adc
mov
jmp
sbb
cmp
pop
outsl
jns
addr16
scas
pop
adc
cmp
addr16
nop
ret
out
fstps
arpl
shrb
sub
sbb
je
cmp
std
jo
lret
jge
cmpsb
xor
ja
push
in
addr16
movlhps
mov
mov
jno
lods
inc
cmpb
jmp
jle
adc
daa
repz
and
push
iret
sbb
pop
andb
cltd
sbb
std
and
out
lret
inc
dec
scas
mov
pop
frndint
lcall
lret
test
repz
push
aas
fimull
es
les
mov
sub
adc
xchg
dec
dec
movsb
shll
mov
push
sbb
je
fdivrl
add
mov
lea
sbb
arpl
xchg
push
sbb
cmp
or
xor
dec
jb
lret
int3
jp
sub
and
add
mov
aam
sub
rclb
sub
jmp
fwait
xor
repz
stos
aaa
xchg
jne
andb
mull
dec
mov
lods
or
push
pop
pmaxub
aaa
mov
test
cmp
outsl
adc
dec
pop
push
pop
pop
outsl
adc
push
fwait
pop
orl
ds
cli
jge
scas
lock
arpl
sti
outsl
cld
ds
inc
mov
jl
neg
loope
adc
testb
sbb
dec
inc
mov
out
xchg
popf
jp
jns
pushf
jg
push
lea
js
mov
lds
out
pop
mov
test
ja
mov
cmp
sub
dec
cmp
dec
jo
daa
data16
and
arpl
ret
jmp
in
jno
imulb
jp
sbb
adc
aaa
adc
das
add
push
adc
inc
cld
or
aaa
mov
pop
fisubrl
mov
fstpl
dec
rorb
mov
gs
or
arpl
fwait
jle
push
pop
out
jg
lret
sahf
xor
cwtl
dec
shlb
dec
push
fmull
iret
in
lock
fs
dec
push
pop
mov
mov
mov
mov
test
dec
mov
and
aam
shl
jbe
in
scas
sahf
sub
adc
div
jno
sub
pop
xchg
pop
shrl
je
sub
sbb
into
sbb
in
dec
inc
xchg
jb
mov
insl
out
loope
pop
inc
insb
mov
mov
cmp
inc
fimuls
mov
adc
mov
out
and
fnstenv
adc
adc
pop
fnstcw
pop
cs
jmp
mov
jle
pop
and
cmp
and
mov
nop
data16
rcl
sbb
jne
xchg
lock
data16
cmp
lret
jp
faddl
inc
imull
mov
dec
adc
pop
jae
loope
dec
cmp
das
push
adc
mov
adc
mov
nop
jmp
scas
xchg
pop
and
sub
pushf
negb
push
pop
repnz
int
jbe
push
out
ljmp
sti
or
add
leave
jmp
fsubl
pop
adc
xchg
pushf
dec
mov
insl
out
jo
cmp
jle
stc
sahf
xchg
call
orb
xchg
xchg
jp
movsl
or
pop
imul
pop
pop
pop
aam
adc
jmp
dec
clc
aaa
xchg
in
mov
dec
fcomps
in
jne
das
sbb
lcall
test
lcall
jmp
imul
hlt
gs
dec
add
data16
and
mov
lcall
cmpb
fwait
mov
addr16
xor
xchg
std
jp
in
jle
fwait
and
inc
push
insl
mov
rcll
icebp
lods
aas
xchg
fimuls
xor
lods
cmp
xor
sub
cmpsb
cld
fsubs
mov
mov
jbe
in
xchg
sub
jnp
and
dec
pop
or
mov
shr
or
xor
mov
or
push
rolb
sti
int3
pop
add
add
jmp
dec
stos
xchg
daa
pop
das
or
lock
dec
jle
xor
and
mov
sub
ret
leave
negl
fsubrl
push
adc
dec
das
iret
aad
outsl
pop
shrl
adc
data16
pop
push
mov
mov
subl
jecxz
pop
mov
jbe
bound
cmpsb
push
inc
lret
xor
adc
pop
ja
xor
in
pop
stos
rcr
lahf
push
fadd
or
mov
sub
xchg
pop
jecxz
sub
aaa
imul
xlat
pop
push
test
inc
incb
mov
mov
push
cld
mov
jecxz
adc
rcrb
dec
fsubrs
shll
bound
ss
pop
jae
push
stos
inc
jbe
mulb
je
adc
inc
mov
stos
ret
mov
fcoml
cmp
push
in
pop
or
enter
aad
sbb
xor
fcmovnb
adc
lahf
lods
push
add
mov
pop
dec
daa
sub
test
test
call
stc
jns
mov
aaa
in
repz
mov
loopne
popf
pushf
cmp
mov
pop
mov
insb
dec
lods
fwait
sahf
ret
and
inc
lret
jle
cld
jg
lahf
ss
mov
adcl
xchg
negl
sbb
xchg
js
ret
ds
nop
cmp
movsb
and
xor
movsb
out
sahf
mov
mov
test
inc
pop
repz
scas
mov
pushf
dec
pusha
popf
gs
mov
push
and
nop
shlb
xor
sbb
mov
leave
adc
sahf
lea
inc
lret
fmull
add
bound
adc
cmp
pop
inc
jmp
subl
mov
mov
aad
and
pusha
inc
imul
nop
pop
sbb
cli
push
imul
xlat
push
scas
or
push
lock
push
cld
stos
push
or
pop
shlb
pop
popf
push
cmp
sahf
sub
sbb
mov
fwait
jno
arpl
fldt
xchg
cmpsl
out
sub
pop
jae
test
mov
inc
or
mov
scas
leave
repnz
sub
fistpl
sub
pop
mov
push
lock
and
ds
cmp
sub
arpl
rolb
dec
inc
test
fdivs
inc
in
test
aam
xor
push
js
fisttpl
pop
inc
jo
mov
je
fwait
jae
mov
xor
repnz
push
mov
cmpsl
icebp
pop
lcall
test
cmp
pop
add
loope
out
test
adc
jmp
xchg
fnstcw
lock
repz
inc
push
add
outsl
jbe
mov
aad
lods
xlat
adc
cmpsb
xchg
push
fdiv
dec
gs
insb
mov
or
cmp
jg
xchg
add
dec
enter
ja
jmp
clc
sbb
jp
lods
xorl
std
adc
mov
inc
sbb
aam
sti
jle
jle
jg
jp
mov
pop
sbb
pop
repnz
cmp
adc
sbb
cmc
pop
lret
and
fs
jg
mov
adc
popf
mull
pop
mov
sbb
pop
stc
inc
xor
jp
cmp
push
and
or
adc
jbe
dec
adc
into
pop
pop
or
sub
frstor
push
push
inc
sub
test
jnp
outsl
mov
cmp
push
dec
xor
sub
cmpsb
jle
xor
aas
mov
push
mov
xchg
push
in
xchg
mov
inc
fmul
jo
fisttpll
movsb
adc
sub
cmp
add
lret
xor
fwait
xchg
xchg
pcmpeqw
fs
cmp
and
aaa
test
lcallw
jno
rcll
add
inc
cmp
pop
stos
mov
jns
loop
and
aaa
iret
fcomi
insl
icebp
sbb
call
push
cmp
sbbb
mov
xchg
mov
sbb
xor
inc
fstl
fldenv
mov
and
pop
loop
insl
and
call
pushf
test
mov
int3
aad
mov
cmp
and
mov
out
jb
fdivrl
mov
mov
fistpl
xor
lret
sub
inc
xor
and
adc
sahf
pop
fsts
lcall
xchg
or
rolb
std
and
aaa
in
ficompl
repnz
pushl
or
pop
sbb
mov
mov
dec
mov
mov
ss
mov
or
add
mov
fdivs
ret
jno
gs
pop
mov
cld
sbb
push
jmp
and
repz
add
cmp
dec
cld
pop
mov
into
loop
xchg
in
mov
cmp
adc
aam
lds
sub
andb
ss
ja
iret
lock
shrl
dec
out
fwait
rcrl
into
xchg
xchg
xchg
cmp
dec
add
fbstp
pop
pop
and
pop
fdivrl
jp
pop
push
ljmp
jno
add
leave
std
adc
pop
pop
dec
pop
je
out
sub
fidivrl
shll
jecxz
dec
inc
mov
and
mov
shrl
jmp
cmp
sbb
adc
mov
scas
xor
add
cmp
cmpsb
dec
jmp
loop
int
in
sub
outsb
dec
pop
jle
sub
mov
push
out
sub
ret
sbb
test
add
lret
xchg
push
pop
sub
divb
cmpsl
andb
cmp
fisubl
in
mov
je
add
pop
mov
pop
mov
xor
cltd
loop
outsb
xlat
fldl
sti
sub
mov
inc
sbb
sbb
scas
xchg
popa
jecxz
int
cmp
std
mov
imul
aad
xchg
mov
aaa
pop
add
or
add
mov
sub
js
cs
sub
sbb
bound
and
push
pop
xchg
aaa
push
into
mov
cs
or
test
lret
jbe
push
pop
shl
xchg
adc
test
sub
jle
jecxz
imul
scas
test
leave
dec
sub
in
cmp
xchg
popf
mov
push
jle
xor
sbb
inc
dec
aaa
addb
cli
and
and
icebp
sbb
pop
cltd
or
inc
call
dec
sbb
aas
movsl
shlb
pop
nop
push
ss
pop
push
scas
mov
dec
aaa
test
sti
jb
cmc
push
fnsave
shll
cmc
add
lods
in
imul
iret
ret
mov
mov
ret
mov
pusha
ds
xor
cwtl
mov
mov
idivl
jmp
cvttps2pi
les
xchg
pusha
mov
outsb
fucomp
aaa
fxch
jmp
cld
ds
jp
int
out
adc
popf
pop
fsts
push
sahf
lea
inc
or
out
or
iret
loope
or
add
jno
cmc
mov
scas
pop
lret
mov
cli
inc
xlat
mov
sbbl
ficomps
icebp
pop
and
add
stc
test
lock
scas
bound
aam
gs
push
jl
stos
into
hlt
mov
mov
xchg
mov
xor
lods
mov
pop
inc
cmp
fidivrs
ds
lcall
jle
sbb
daa
loope
jmp
pop
and
fnstsw
pop
dec
xor
cmpsl
push
in
test
cmp
adc
xchg
add
lea
sub
mov
jle
jo
pop
sbb
or
dec
imulb
jge
xor
mov
lods
insl
mov
stos
sbb
jp
fstp
pushf
xor
dec
outsb
push
sbb
in
arpl
daa
or
mov
flds
or
cmp
aam
ds
cmp
pop
cltd
shll
mov
xchg
fcmovb
decl
fwait
cmp
cmpsl
scas
lcall
shll
and
sbb
in
call
fistl
daa
sub
clc
ja,pt
add
aam
mov
ret
lds
pop
add
adc
je
cmp
les
inc
mov
cld
cmp
cmpsb
cmp
orb
stc
mov
cmp
mov
andb
out
arpl
inc
xchg
adc
enter
outsb
pop
sbb
lds
sub
sbb
aam
push
cmpsb
jle
std
enter
fwait
cltd
push
mov
popf
inc
sub
mov
lock
dec
xchg
repnz
std
mov
push
or
mov
pop
mov
sti
sahf
cmp
mov
fistl
fstpl
dec
jns
je
mov
inc
sub
andb
push
jmp
fsubl
pop
xchg
pop
leave
sahf
addr16
fsts
loope,pn
cmp
dec
bound
test
rolb
test
out
dec
jle
fmull
gs
push
inc
pop
sbb
xor
pusha
mov
cld
loop
pop
call
lret
ror
test
pop
mov
cmp
imul
mov
inc
jmp
mov
jnp
mov
sub
subb
les
fbstp
movsl
pop
lcall
fs
lcall
cmp
push
sub
push
sbb
jbe
repnz
add
add
fs
jbe
mov
or
shl
xor
cmp
adc
or
out
pushl
push
push
ss
xchg
dec
daa
jg
jno
popf
enter
pop
jge
and
sbbb
seta
sbb
aas
pusha
xor
sbb
outsb
dec
pop
loope
adc
or
cmp
pop
mov
lahf
outsb
sub
es
xor
sub
push
sbbl
mov
aam
sub
jae
lods
xor
push
mov
inc
arpl
aad
push
ja
std
fsubp
push
mov
push
xor
and
clc
or
aaa
mov
insb
aam
insl
sbb
out
fcompl
hlt
adc
into
xchg
cmp
sbb
sbb
push
pop
push
js
pop
mov
pop
push
pop
pop
lock
outsl
mov
pop
ja
cmp
cmc
pop
dec
push
add
pop
ss
sbb
sbb
dec
icebp
xor
push
sarl
jl
xlat
imul
nop
nop
inc
pop
mov
ljmp
pop
out
hlt
call
lods
loope
aaa
addr16
sahf
cmp
sbb
or
fwait
sbb
adc
sub
cs
imul
jle
jns
test
cli
lret
adc
push
jb
push
lea
js
mov
movsl
repz
and
push
enter
ss
inc
dec
imul
mov
xor
pushf
pop
cmc
pop
ss
inc
xor
cmp
jmp
push
dec
and
movsl
push
fsubrs
neg
lea
in
mov
sahf
add
in
addr16
gs
mov
jl
sahf
pop
pop
cli
lods
jp
aaa
loop
mov
mov
lret
lahf
fwait
lds
mov
nop
jnp
and
pop
mov
mov
mov
fldenv
popf
mov
xchg
mov
fldlg2
cmp
aaa
cmp
pop
and
pusha
cwtl
xchg
sbb
ret
decl
int3
out
bound
push
lcall
add
das
pop
inc
sbb
mulb
pop
mov
cmp
jle
enter
xchg
pusha
pop
jno
divb
mov
int3
cmp
push
fwait
mov
or
idiv
shlb
stos
in
mov
arpl
ja
lret
add
xor
pop
add
aas
xor
lea
mov
in
cmp
pop
iret
out
xor
or
push
jle
inc
push
and
mov
mov
test
shlb
xor
push
jg
aaa
in
xor
inc
mov
sarl
hlt
mov
les
ret
push
out
fsub
lods
ret
les
sub
enter
ficoms
std
aaa
xor
test
scas
mov
enter
mov
mov
jmp
scas
cwtl
negl
dec
lods
jnp
das
mov
jnp
push
lret
pop
push
out
add
xor
hlt
jle
aas
fcoml
scas
pop
sbb
pop
mov
jg
sub
xchg
sub
xor
push
cltd
into
popa
inc
push
je
pop
divl
adc
mov
cmp
push
mov
aas
rcrb
adc
lret
jp
mov
sbb
inc
and
or
adc
hlt
int3
in
xchg
dec
aas
dec
add
dec
mov
icebp
fnstcw
outsb
sub
push
lods
mov
call
repz
imulb
xorl
cmc
flds
out
xchg
enter
mov
pusha
das
fistpl
jecxz
into
and
in
push
rcrl
inc
scas
and
or
cmp
add
adc
push
mov
cli
mov
jle
aaa
test
fiadds
loope
jns
in
sbbl
ss
add
fsts
leave
shlb
cmp
int3
clc
jp
add
je
mov
pop
nop
inc
cltd
mov
jbe
aaa
cmp
xchg
and
fistl
icebp
std
in
inc
cmp
dec
or
mov
mov
or
flds
inc
pushf
adc
push
adc
mov
jbe
sbb
loope
pop
mov
mov
lcall
and
data16
or
fcompl
cmp
lcall
mov
filds
pop
inc
pop
fsubs
mov
push
iret
mov
fnstsw
mov
cmpsl
stos
stos
fistl
adc
sti
loope
adc
and
push
push
push
jmp
pushf
jmp
std
out
mov
dec
fcoml
pop
cmpsl
xor
std
xor
add
in
mov
outsl
out
xchg
test
pop
fndisi(8087
andl
outsb
sbb
add
insl
faddp
jo
push
cli
cmp
push
sbb
lret
jecxz
lret
inc
pop
mov
mov
mov
add
pop
sub
sbb
cltd
or
lods
mov
dec
pop
lock
and
mov
pop
imul
sub
cmpsb
lahf
inc
fldl
daa
fs
jae
pop
or
out
mov
sub
or
adc
neg
jmp
rcrl
rol
cmp
sti
lret
stos
jmp
repnz
adcb
test
and
gs
pushf
pop
out
mov
outsl
jbe
pop
pop
push
xlat
aaa
jnp
sahf
popf
popa
shrl
adc
outsb
sbb
add
orl
mov
add
sbb
inc
clc
repz
xor
pop
rcr
pop
fwait
pop
mov
insb
fs
ss
jp
cmpsb
lret
cmp
shll
push
fsts
push
rol
fstpt
xchg
mov
sbb
add
inc
ja
adc
pop
cmp
imul
fnsave
lock
lcall
sbbl
test
pop
mov
ss
popa
or
dec
daa
fcoms
or
sbb
mov
fcoml
imul
je
leave
aaa
aam
mov
sub
outsb
sbb
mov
mov
cmp
aaa
into
mov
lret
dec
jge
pop
jb
rcrb
icebp
mull
out
sbb
leave
pop
xchg
xchg
fs
stos
inc
add
mov
pop
and
push
add
std
shrl
arpl
divb
dec
test
pop
jle
jno
inc
je
mov
jge
arpl
mov
cmpsb
or
out
mov
shr
add
dec
jno
test
bound
stos
in
pop
jnp
inc
ja
pop
jo
fsubs
push
pop
jo
xlat
or
pushf
inc
push
bound
xchg
pop
repnz
mov
in
outsb
scas
mov
cmp
sbb
test
inc
aaa
fs
add
push
les
imul
js
sbb
mov
into
push
add
fdivrl
aaa
cmc
dec
shll
repz
mov
jmp
mov
sbb
imul
cld
mov
or
outsl
cmp
jp
and
sub
mull
lds
cmp
sti
pop
lods
add
icebp
clc
rolb
mov
sbb
mov
loopne
mov
in
dec
stos
lods
in
pop
or
rclb
jecxz
jbe
xor
mov
and
sbb
cmp
arpl
clc
dec
aaa
fnsave
mov
std
pop
jp
dec
inc
jno
in
jle
pusha
aam
jb
push
mov
faddl
mov
in
fwait
in
xor
lahf
mov
fucomip
andl
jbe
mov
xchg
sub
push
loopne
jle
inc
dec
fists
test
jmp
ja
nop
sbb
fcomps
push
scas
jge
aad
jg
pushl
cwtl
dec
pop
adc
data16
mov
iret
mov
push
push
daa
jle
lcall
shrb
pushf
je
inc
mov
sub
inc
insl
aam
es
xchg
inc
inc
pop
int3
inc
sub
es
jmp
cmp
xor
les
lods
mov
xchg
stos
sub
stc
pop
out
fsubrp
cs
add
imul
lret
enter
aam
aaa
mov
aam
push
divl
xor
sbb
and
loopne
pop
mov
adc
dec
mov
fimull
adcl
ss
pop
dec
test
fildll
adc
flds
enter
xchg
outsl
inc
and
jg
stos
push
stc
popa
cmp
bound
test
lret
jl
mov
jle
lea
fucomp
fildll
outsl
add
mov
push
or
lock
xchg
ret
cmp
and
sbb
jns
fmul
ss
mov
dec
aam
dec
xchg
sub
mov
les
ret
popa
pop
xlat
pusha
ret
fimuls
add
inc
mov
addr16
enter
sbb
pusha
jl
jecxz
insb
subb
paddsw
stos
movsl
dec
cmp
fwait
adc
and
push
dec
dec
hlt
outsl
les
push
jns
cs
inc
push
adc
jp
inc
fildll
lret
in
sbb
pop
dec
int3
pop
jmp
pop
jo
pop
aaa
lahf
adcb
insl
sbb
inc
adc
sarb
imul
daa
xchg
xchg
divb
jne
in
sbb
aam
dec
jge
imul
jns
lahf
xor
call
push
jbe
sbb
jl
sub
dec
dec
fwait
pop
sbb
lds
lea
fs
js
insl
in
scas
jp
mov
std
lods
inc
fidivrl
ret
repz
and
adc
sub
jo
pop
cmp
xchg
mov
sbb
test
inc
aaa
xchg
scas
mov
les
cmpsl
jo
cmp
cmp
mov
lock
add
mov
adc
dec
out
and
fcmove
jecxz
pop
ss
xor
pop
lock
std
notb
in
roll
data16
fnsave
test
pop
push
aaa
pop
adc
sbbb
aad
add
adc
push
xchg
icebp
les
mov
sbb
inc
aaa
std
and
jl
dec
fsub
out
mov
aaa
movb
mov
jecxz
add
test
popa
popf
scas
mov
bound
out
sbb
and
pop
pop
fwait
shrl
cmp
popf
add
pop
repz
lea
stos
xor
dec
push
fists
enter
iret
sub
adc
cli
cmp
pop
aad
push
imul
fs
adc
icebp
int
push
or
es
fnop
stc
dec
jo
push
cmpsb
jnp
pop
sbb
ss
icebp
mov
testb
stos
shrb
sahf
inc
imull
lret
out
mov
rcrb
sbb
or
or
icebp
xchg
jecxz
in
pop
xor
cmp
loope
sbb
sahf
jl
push
out
add
pop
stc
aad
jp
inc
jmp
mov
push
pop
push
dec
dec
fidivrs
cmpsb
loope
xor
in
fcmovbe
insb
loope
repnz
xchg
mov
or
movsl
mov
out
jae
bound
mov
sub
jnp
mov
jbe
js
cli
cmpsl
enter
jae
mov
mov
xchg
sbb
or
cltd
and
push
pop
lock
lret
sbb
nop
aad
cltd
jae
dec
rolb
lret
daa
cmp
pop
pop
hlt
in
mov
xchg
les
fidivs
cmpsb
lods
inc
test
push
lret
sbb
push
movb
jle
lods
call
mov
stc
lcall
sbb
sub
lret
and
and
xchg
pusha
popa
jecxz
inc
xrelease
insb
scas
push
xor
int
and
xlat
loopne
add
in
hlt
cmp
ja
int3
stc
adc
mov
call
pop
int3
mov
loop
out
xlat
jae
cmp
sub
add
rcrl
sbb
imul
addr16
arpl
sbb
fistpll
pop
imul
fld
xor
push
inc
jb
cwtl
repz
pop
sbb
or
add
mov
push
cwtl
repnz
jge
xchg
xor
push
ss
lahf
int3
movsb
lret
sarl
stos
mov
popa
imul
xchg
or
sbb
movsl
out
dec
lea
pmovmskb
push
lahf
sar
popf
push
add
push
jae
ret
push
dec
cld
cmp
les
out
xchg
jb
pop
xor
or
popa
into
sbb
test
cltd
inc
mov
or
loop
add
fistpl
mov
stos
das
push
push
lcall
and
inc
mov
ds
imul
aas
jmp
xor
sub
adc
in
mov
jp
mov
fidivs
mov
jecxz
iret
jnp
xchg
xorb
mov
in
cwtl
test
cmp
pop
pop
repnz
fs
xor
pop
sbb
cltd
negl
or
mov
clc
insb
das
das
aam
cmpsb
cmp
or
repz
lret
data16
or
cmpsl
icebp
scas
outsb
inc
clc
cmp
cmp
dec
in
adc
leave
mov
jbe
mov
ror
push
xchg
cmpsb
test
ss
push
insb
sahf
pop
pop
jne
insb
xor
xor
scas
pop
pop
sbb
and
sbb
in
das
add
xchg
aaa
into
jbe
je
pop
jns
popa
sub
les
sbb
sbb
and
mov
jno
xchg
pop
pop
in
sub
out
ja
enter
xor
mov
jnp
cmp
push
aaa
add
in
stc
rcr
jge
sbb
lret
sub
test
fstpl
dec
cmp
push
mov
push
dec
sti
mov
fcomip
insb
test
dec
xchg
out
call
scas
xchg
and
jne
cmpsl
je
sbb
jnp
hlt
nop
mov
and
adc
addb
ss
jecxz
jmp
jne
mov
adc
out
insl
mov
sti
fldl
orb
xlat
movsl
aam
push
pop
aaa
xchg
jp
mov
rcrl
adc
ret
popa
ds
push
pop
fidivrl
sbb
and
ss
add
and
push
push
push
sbb
xchg
inc
inc
inc
add
aam
in
ljmp
subl
pop
or
pop
enter
xchg
sti
xor
and
fistl
stos
jbe
push
scas
mov
out
mov
mov
pushf
and
movsb
loope
repz
pop
loope
push
inc
imul
nop
pop
movb
pop
jp
xchg
push
fadds
fdivrl
dec
push
jp
jl
test
and
inc
mov
xchg
arpl
sbb
dec
cs
hlt
fstl
stos
dec
pop
icebp
lret
jne
leave
cltd
es
pop
push
sub
repnz
iret
rorl
push
inc
inc
dec
sbb
cmp
test
mov
cmp
xor
cmp
pop
ret
dec
repnz
sub
push
inc
cmpsl
mov
cmp
jnp
lds
popf
sub
inc
xchg
enter
sbb
out
push
push
testb
movsl
cmp
adc
sub
sbb
movsl
bound
dec
cmpsb
loope
cwtl
mov
call
stc
inc
xchg
mov
push
jl
shr
cmp
mov
inc
xchg
mov
cmp
sbb
adc
rcr
mov
pop
sahf
ret
add
orb
jae
mov
cmp
mov
fcoml
enter
icebp
dec
push
gs
lea
dec
mov
sbb
cs
lea
int
mov
lods
sub
aam
mov
pushf
imul
pop
mov
pop
cmp
jo
jecxz
js
sub
xchg
lods
andl
jne
push
in
aaa
pop
push
jge
leave
in
adc
push
pop
sbb
xor
in
fadd
cmpsb
mov
or
push
push
pop
daa
pusha
sbb
mov
push
insl
inc
pop
sub
icebp
and
std
jae
pop
stos
lods
pop
mov
mov
mov
pop
sbb
stos
repz
push
fadds
call
imul
bound
cmpsb
xchg
pop
adc
add
ljmp
jecxz
nop
push
xchg
pop
cmpsb
outsb
mov
and
fucom
inc
xor
arpl
loope
pop
das
and
push
cmpsl
rcll
mov
inc
ss
jmp
cmp
in
dec
add
cmp
imul
pop
in
xchg
cmp
xchg
xchg
mov
mov
add
xlat
shrl
lahf
fstpt
mov
scas
sarl
adc
test
stc
adc
ja
sub
aas
push
xchg
add
cwtl
in
bound
mov
cmp
or
lea
push
orl
das
call
pop
repnz
xchg
arpl
pop
jns
mov
mov
or
movsl
adc
mov
push
jns
xor
negb
fstps
fs
outsb
jb
movsl
lret
add
push
dec
scas
ss
cmc
fisttps
add
enter
shl
jo
mov
inc
mov
movsl
mov
test
push
push
mov
and
int
loope
out
into
cmp
aas
mov
out
mov
and
data16
icebp
mov
cs
adc
and
mov
pop
ret
test
jb
cmpsl
orl
es
cmpsl
inc
fwait
adc
negl
mov
fsubp
mov
negl
leave
divl
std
pop
and
ret
imul
mov
and
cmpsb
cld
pop
nop
in
sbb
aad
cmpsb
pop
adc
int3
jmp
fbstp
sbb
push
xor
hlt
push
ret
jge
popf
js
int
outsb
nop
lods
stos
fistps
dec
imul
dec
adc
fdivrp
aaa
jae
rorl
sti
scas
ret
orb
dec
mov
rcl
pushf
stos
mov
lahf
jns
mov
lret
xchg
cmc
fnstsw
dec
lds
mov
imul
jmp
cmp
jb
lea
in
mov
popf
lret
enter
inc
adc
or
push
cmc
sbb
lcall
insl
aaa
sub
rclb
cmp
dec
scas
inc
imul
push
bound
dec
addr16
outsb
mov
dec
fstpt
aas
dec
popf
bound
ds
sbb
push
fmul
aaa
xchg
push
mov
lock
lea
incb
jne
pop
mov
out
lahf
xchg
or
jmp
or
jo
sahf
push
call
or
sahf
ljmp
mov
arpl
mov
add
xor
mov
filds
popa
in
dec
out
dec
stos
cwtl
cmp
test
repz
sbb
pop
aad
cmp
jbe
out
and
loope
int3
inc
cmp
in
stos
dec
jno
popf
inc
scas
xchg
enter
or
sahf
ss
adc
jecxz
pop
test
push
xchg
mov
inc
add
fistpl
icebp
add
mov
inc
fildll
add
aaa
test
repz
out
add
xor
sub
aaa
add
mov
sub
sbb
mov
inc
fnstenv
mov
mov
lds
ja
xchg
pop
mov
test
push
dec
neg
rolb
push
out
out
inc
xor
enter
push
sbb
mov
je
icebp
mov
mov
mov
push
push
cmp
pop
xchg
mov
inc
mov
adc
mov
jbe
arpl
mov
bswap
cmp
in
mov
xchg
and
pop
jne
jo
sbb
sti
add
bound
mov
and
sbb
xor
in
inc
nop
add
xchg
push
scas
int3
lea
sahf
out
aaa
add
repz
jecxz
and
lahf
dec
jle
and
adc
fiaddl
lret
movsl
push
test
inc
bound
sbb
lret
fnstsw
dec
push
cmpsb
mov
inc
push
fwait
pop
adc
out
call
subb
cs
arpl
mov
imul
enter
int3
jae
and
adc
ja
mov
add
nop
in
jmp
cltd
dec
arpl
repnz
lahf
add
add
rcll
aaa
out
shr
sub
jne
xchg
pop
sub
fldenv
ljmp
in
bound
xor
dec
sub
not
jge
outsb
pop
dec
add
cmp
ret
rorl
ret
jb
dec
mov
lods
add
push
pop
lcall
pop
lock
shrb
add
mov
pop
jns
dec
aam
mov
cmpsl
decb
and
dec
int3
and
mov
jb
fmuls
popa
mov
mov
adc
and
xorl
pop
outsb
outsl
cltd
outsb
xchg
das
icebp
pop
pop
orps
lods
imul
jnp
dec
mov
or
scas
lcall
pop
jbe
das
loope
cld
sbb
mov
mov
mov
jle
clc
push
lcall
inc
add
xchg
mov
push
inc
jb
mov
enter
scas
mov
dec
ds
sar
sar
leave
addb
mov
daa
pusha
xchg
sbb
enter
in
in
sub
cli
xchg
sub
sbb
sbb
push
daa
push
add
ret
and
test
mov
in
mov
jb
movsl
cltd
es
fucom
addr16
sub
outsb
mov
sarl
sbb
pop
jno
jecxz
xchg
jno
lds
jmp
arpl
sub
pop
scas
movlps
testb
in
lods
pop
xlat
test
lcall
lahf
lods
ret
out
sarb
adc
aad
negl
ss
je
sbb
xchg
xchg
dec
push
lock
cmpsb
fistps
xor
fisubs
popf
cmpsl
int3
lock
add
insl
jle
push
sti
and
push
int
push
in
or
loope
push
dec
popf
ss
fwait
mov
fcoml
dec
clts
sbb
pop
add
mov
jbe
lea
push
pop
jle
cltd
ret
pop
xchg
sbb
add
sti
inc
scas
xchg
lods
fldt
inc
add
out
cmp
xor
ret
in
repz
mov
dec
xor
ficompl
adc
xchg
pop
mov
ss
push
jae
decb
pop
mov
add
cmp
cmp
movsb
mov
pusha
and
jo
mov
andl
xor
inc
mov
lods
popa
pop
adcb
mov
push
xor
fstl
pusha
aam
pop
cld
lret
jp
push
sahf
sub
pop
sbb
insb
cmpsb
inc
adc
fildl
add
cmpsl
pusha
dec
imul
aas
je
int3
and
movhps
pushf
jecxz
dec
pop
push
mov
fistpl
cli
pop
jb
sbb
pop
ja
and
in
outsb
xchg
adc
je
mov
insb
dec
mov
fstl
jbe
mov
jle
sub
sbb
pop
sub
xorb
jecxz
lahf
mov
sbb
test
shrl
jp
aaa
push
pop
lret
stos
sbbb
xor
sbb
sub
lcall
pop
cld
shrb
fistpll
popf
ret
pusha
xchg
dec
push
add
xchg
fcmovne
cmp
inc
imul
mov
push
mov
mov
in
pop
test
lds
pop
or
and
inc
push
mov
add
sub
adc
aad
mov
xchg
lret
and
pop
in
sub
sbb
idiv
mov
fsubs
lret
sub
fiadds
in
adc
bound
aad
pop
insl
imul
pop
in
pop
or
in
outsw
insb
lret
aas
jb
cwtl
add
jbe
jo
push
pop
stc
outsb
int3
enter
cmp
pop
aaa
pop
push
int3
dec
cmp
mov
jecxz
aas
cwtl
and
insl
push
arpl
ret
outsb
bound
pop
sub
dec
jns
leave
cli
in
sbb
push
and
aaa
push
iret
pop
sub
cmp
mov
icebp
mov
scas
aad
mov
jbe
dec
sbb
std
pop
repnz
lods
ss
xchg
les
cld
mov
xlat
dec
pop
xchg
aaa
mov
jmp
dec
cmp
xchg
mov
repz
daa
mov
jle
sbb
or
push
sbbl
dec
lea
pop
loopne
shll
test
cld
and
xor
lods
data16
ds
int3
loope
xlat
aaa
icebp
lret
call
imul
mov
xor
ret
pusha
mov
aad
in
mov
outsl
xor
aaa
aam
shr
es
inc
push
push
ss
leave
fs
or
mov
inc
lea
and
rol
stc
jge
sbb
sub
sub
cld
or
cmp
js
shrl
in
sbb
pop
mov
and
ljmp
ret
push
push
hlt
mov
in
pop
dec
pop
sbb
add
sahf
inc
inc
in
fdivrp
addr16
cmp
add
arpl
dec
mov
adc
xchg
push
pusha
arpl
in
bound
xchg
jae
sti
push
imul
mov
in
mov
das
mov
scas
mov
in
mov
inc
mov
fstpt
cs
or
add
push
call
fwait
cmp
mov
cwtl
out
sub
lahf
test
shl
lret
dec
mov
sbb
aaa
and
jbe
iret
dec
sub
dec
mov
pop
aam
push
pop
sub
push
add
out
mov
pop
into
lock
mov
outsb
in
jo
arpl
lcall
pop
and
xor
das
je
decl
aas
pop
pusha
push
icebp
imul
adc
xor
inc
xor
sbb
lea
das
in
inc
ret
sub
loope
dec
sti
jo
sub
dec
push
mov
rcrb
bound
xchg
push
dec
icebp
mov
lret
sbb
jle
fidivrl
aaa
dec
sbb
imul
and
xor
or
pop
inc
sbb
lods
push
push
rorl
out
push
aaa
sub
pop
movsl
mov
adc
sub
cmpsl
cmp
or
push
sti
push
dec
pusha
ss
stos
ljmp
xchg
xchg
add
pop
cmpsl
ljmp
xchg
cmp
add
in
mov
aaa
adc
insb
lret
movsl
jb
cwtl
jmp
out
arpl
aad
cmpsl
loopne
es
lret
hlt
add
or
jno
push
jmp
fisubs
and
jmp
jo
ds
lcall
mov
in
cwtl
stc
cwtl
pop
push
ljmp
call
mov
push
aaa
insl
mov
sbb
jnp
xchg
mov
mov
int
out
in
sbb
aas
inc
xchg
adc
jg
adcb
add
sti
out
push
or
ss
aaa
pop
xlat
mov
dec
clc
mov
cmpsb
loope
fbld
loope
ds
test
sbb
imul
imul
lods
jle
sbb
pop
roll
scas
dec
mulb
xchg
mov
js
loope
mulb
pop
mov
jmp
push
xchg
cmova
clc
xchg
xor
outsb
sbb
into
cltd
sbb
push
jne
subl
pushf
dec
dec
cld
mov
cmp
fstpt
cli
cmp
and
aaa
xchg
sub
cmc
sbb
frstor
push
fistpll
fsts
mov
mov
jmp
lcall
inc
aaa
lock
call
in
jmp
jb
sarl
imul
test
push
outsb
bound
dec
orb
xchg
or
cmp
stos
into
icebp
jg
pop
jmp
pop
in
push
add
inc
arpl
rol
pop
pop
sbb
test
sub
mov
dec
hlt
and
add
scas
jp
dec
jmp
jp
mov
icebp
cmc
push
cmp
adc
xor
mov
sbb
cltd
or
push
xor
jns
xor
stos
pop
testb
sub
sahf
push
cli
dec
fstp
push
adc
jge
pop
push
bound
sbb
cmp
loopne,pt
cmp
or
add
mov
call
xchg
sbb
dec
push
out
data16
push
mov
frstor
inc
je
sbb
or
xchg
push
jg
in
call
sti
jg
mov
mov
and
loope
jne
xchg
call
push
lcall
or
dec
rcrb
jb
enter
out
ss
xchg
fnstsw
pop
lds
push
mov
adc
mov
pop
std
fnstcw
adc
dec
lea
inc
inc
adc
push
pop
jae
jge
lock
enter
sbb
xor
mov
mov
jle,pt
ja
mov
add
pop
and
sahf
xor
dec
imul
push
out
fbstp
int
sahf
push
fs
fs
sub
dec
nop
push
push
pop
in
and
mov
or
inc
std
sub
inc
shlb
add
pop
shll
aam
jbe
aaa
inc
dec
bound
push
in
and
mov
mov
xor
xchg
test
pop
jle
xor
insl
push
jmp
repz
mov
sbb
mov
enter
sub
outsl
fstpt
jo
mov
cmp
push
mov
adc
repz
cmp
mov
pop
push
fmull
test
dec
xchg
mov
pusha
pop
xchg
lds
push
clc
repz
mov
fnstenv
hlt
adc
push
outsl
int
pop
push
pop
inc
sub
sbb
lahf
mov
cli
lea
add
sbb
lea
cmp
mov
popa
aaa
mov
xor
loope
lret
repz
dec
xchg
dec
nop
mov
xor
cltd
push
shlb
mov
iret
dec
fcomps
setle
and
fistps
out
popf
lcall
aaa
not
adc
jnp
test
arpl
das
push
or
jno
xchg
and
outsl
aaa
ficompl
icebp
push
inc
subl
sahf
ficomps
loop
push
and
rcr
out
sub
cmp
test
xlat
pop
jle
scas
mov
push
data16
or
adc
cmpsb
popa
cmc
aaa
imul
icebp
imul
cmp
sbb
imul
jle
in
into
mov
data16
ret
mov
push
add
stos
mov
outsb
mov
cmp
iret
cltd
nop
or
sbb
inc
ret
shrb
mov
jb
cld
mov
sbb
jb
dec
rsm
jb
pop
cltd
sbb
fstl
push
into
pop
sbb
sub
push
insb
sbb
pop
mov
out
and
mov
inc
jb
lret
lahf
mov
std
xchg
movsb
ss
mov
sbb
lock
lods
sbb
jmp
add
out
arpl
in
test
mov
push
mov
xchg
in
inc
sarl
mov
xor
jbe
dec
aaa
mov
xchg
jne
jmp
test
rcrb
pusha
sbb
insl
xchg
push
and
adc
imul
sbb
addr16
ret
push
and
cmpsb
orl
shrl
jbe
negb
enter
xchg
imull
pop
imulb
data16
test
ds
pop
ss
dec
mov
sti
fnstcw
sub
xor
and
xchg
mov
pop
or
in
sbb
push
xchg
daa
jecxz
jno
jp
aaa
and
pop
and
pop
cmpsl
pop
loope
enter
insl
shl
aam
jno
lret
das
hlt
imul
imul
dec
icebp
outsb
inc
and
sahf
pop
in
enter
fsubrl
add
aaa
int3
mov
xor
popa
sbb
xchg
mov
fwait
aas
pop
enter
push
call
inc
xchg
dec
adc
lds
aas
pop
rclb
jecxz
pop
jmp
dec
sub
bound
sbb
adc
dec
stc
popf
or
aad
arpl
frstor
lods
fmull
into
cld
jl
popw
add
mov
sub
lcall
push
mov
in
mov
lods
into
xor
std
mov
cltd
in
mov
add
lock
mov
leave
sub
iret
sbb
addb
push
subb
outsb
andb
adc
idivb
in
sbb
jne
stc
je
mov
movsl
imul
mov
scas
pop
pop
inc
or
push
mov
insb
and
cmp
xchg
pushl
pop
push
pop
rcll
fsubs
adc
cltd
mov
shlb
xlat
fisubs
add
cmp
pop
js
orl
pop
ss
aaa
jg
je
mov
bound
jge
pop
rolb
aaa
sbb
movsl
cmp
mov
sub
out
mov
push
xor
pop
jmp
fldpi
push
lea
mov
int3
shll
xor
cld
add
jnp
inc
pop
stc
mov
mov
clc
mov
add
pop
xor
loopne
mov
cmp
dec
out
cmp
gs
ffreep
xor
jb
pop
lcall
cld
pop
push
aaa
jns
pop
sub
setp
mov
push
test
xchg
xchg
imul
sbb
or
xchg
loope
mov
jle
fs
aaa
inc
fmul
dec
mov
fwait
subb
jne
cmp
arpl
adc
aas
int3
cmpsl
jnp
out
push
xchg
rol
cwtl
mov
je
sbb
cwtl
stc
xchg
sahf
movsl
adc
xchg
push
dec
outsb
sbb
movsb
not
data16
jb
pop
cs
lock
std
jecxz
push
rcrl
aaa
cld
jecxz
xor
lods
lcall
lea
jb
and
call
arpl
sar
cmpsl
pop
inc
cmpsl
mov
inc
and
cmp
aaa
xchg
adc
pop
inc
and
cmp
add
jmp
and
pop
or
out
add
mov
lret
jp
push
jnp
and
jno
repz
push
es
daa
gs
adc
fsts
pop
cmpl
push
out
fldl
add
stos
in
pop
ret
outsl
loop
fsubrp
scas
nop
shrb
sub
dec
mov
stos
out
in
inc
out
mov
sub
mov
stos
pop
fwait
dec
icebp
pusha
xchg
add
xchg
mov
imul
int3
mov
jmp
ffree
fld1
jle
scas
push
or
ficompl
ret
jae
pop
fs
xor
clc
cmp
in
stos
sub
mov
cmp
repz
mov
mov
insb
insb
lahf
push
cmp
cmp
stos
mov
xchg
outsb
lock
add
pushf
pop
idivl
das
xchg
push
push
xor
mov
sub
dec
push
mov
xorb
mov
fildl
mov
mov
push
and
add
scas
insb
dec
aaa
adc
popa
fcompp
xchg
push
jle
cmp
mov
mov
mov
lret
inc
xor
js
add
pop
repz
and
fsubrp
lret
inc
shll
mov
jo
pop
stos
cmp
dec
icebp
inc
sub
xchg
jecxz
pop
outsl
sbb
xchg
iret
lods
mov
xor
cltd
dec
outsl
and
xor
nopl
add
stos
fnsave
das
or
push
test
pop
or
adc
dec
test
fidivrs
shlb
mov
add
jb
sbb
int3
pop
data16
cmc
or
xchg
fstpt
mov
dec
int
test
xchg
and
aaa
lods
orl
ss
repz
pop
xchg
arpl
jno
pop
sbb
dec
adc
dec
fldt
mov
xchg
mov
sahf
fsts
movsl
inc
fsts
xor
out
pop
mov
xchg
xchg
pop
sub
cmp
push
pop
jb
movsl
fstpl
jmp
call
fsub
ljmp
jmp
cltd
test
xchg
pop
sub
aaa
inc
imul
aad
pop
pop
cli
icebp
inc
pusha
insl
lahf
and
mov
jne
inc
pop
push
cmp
inc
bound
mov
sub
pushw
repz
imul
clc
mov
sub
rcll
aaa
in
arpl
inc
mov
popf
repnz
adc
cli
add
mov
fmuls
and
cmp
jnp
pop
sbb
movsl
aaa
mov
test
ficoms
mov
push
dec
negb
scas
ret
mov
rorl
pop
outsl
mov
mov
je
xor
pop
push
adc
adc
ds
pop
mov
mov
inc
pop
les
out
cmp
mov
dec
cmp
mov
and
inc
jmp
inc
push
add
push
sti
pmaxub
leave
or
shll
imul
xor
scas
adc
stc
aam
mov
xor
or
xchg
ss
mov
pop
and
movsl
fnsave
xchg
int3
negb
xchg
enter
xor
and
dec
fistpl
adc
inc
sahf
in
and
notb
pop
lcall
das
add
adc
or
cmpsb
mov
mov
sbbl
out
add
push
int3
lds
fcoms
push
pop
or
aaa
jae
das
pop
dec
jl
jno
push
arpl
pop
jl
cmpsl
mov
cmc
das
mov
movsl
xor
xor
add
sbb
mov
fmul
lret
xchg
int
imul
int3
pusha
push
movmskps
ret
jecxz
enter
pop
sbb
mov
pop
notb
adc
add
int3
sub
adc
mov
aas
mov
bound
jo
rcrl
jl
cwtd
lahf
outsb
sahf
into
out
mov
cmp
popf
cmc
mov
xchg
xor
les
dec
adc
ds
inc
pushl
pop
push
inc
rcrb
adc
lds
mov
rol
in
pop
jecxz
nop
bound
push
stc
mov
inc
dec
mov
out
movsl
dec
stc
std
sbb
sub
out
lds
xor
orl
data16
mov
shll
cmp
cmpsb
sbb
lahf
ja
push
or
xor
mov
in
xor
sbb
popf
das
out
pop
or
test
mov
mov
enter
cmp
inc
icebp
sbb
mov
pop
popa
mov
pop
pop
mov
in
jge
aad
cwtl
repz
in
inc
insb
pop
dec
icebp
mov
cmp
jmp
les
jb
enter
notb
mov
pop
push
mov
jns
mov
aam
cli
idivl
fstps
into
push
int3
pop
loope
mov
pushf
and
iret
or
cmp
dec
pop
cmc
pop
mov
aam
dec
pop
jle
aaa
dec
push
pop
dec
xchg
test
mov
imul
pop
mov
xlat
popf
xchg
or
push
sbb
in
pushf
inc
lahf
xor
sbb
adc
lock
lods
adc
mov
mov
inc
inc
out
addl
shlb
add
jp
gs
adc
std
inc
aaa
xchg
cs
fdivl
add
add
arpl
xchg
xchg
cmp
pop
push
cmpsl
daa
mov
xor
or
imul
sbb
es
pusha
jg
fmuls
imul
sbb
sbb
loope
fsts
lret
sahf
mov
into
mov
scas
cmp
ret
lcall
jg
into
lcall
xchg
ror
inc
sbb
mov
and
cld
xor
mov
fisubs
add
cmpsb
and
in
and
pop
in
fidivs
sahf
clc
fldt
mov
jb
cmp
cmp
ss
jp
mov
fwait
out
and
nop
sbb
mov
aam
testl
mov
mov
in
cmp
dec
and
dec
rclb
add
sbb
arpl
frstpm(287
andb
int3
fstps
rorb
mov
lcall
mov
stc
scas
in
bnd
subl
xor
add
inc
xor
imul
cmp
adc
out
inc
in
aaa
cmpsb
pop
stos
aam
lcall
mov
addr16
inc
jb
add
pop
call
push
mov
mov
lds
fwait
mov
xchg
shrl
sub
aaa
add
pop
shl
ret
test
sub
sbb
dec
aad
call
sti
int
xchg
aam
cmpsl
stos
mov
mov
sub
rolb
mov
mov
xchg
push
fcmovnu
mov
sar
push
insb
push
aaa
lea
mov
cmp
nop
les
in
cmpsl
add
mov
jbe
xor
lods
aaa
cmp
sub
mov
test
pop
mov
ret
in
adc
fldpi
inc
cmpb
je
add
cmc
cmc
fists
aam
frstor
test
and
popa
sub
lock
inc
mov
pop
cmp
sahf
push
fs
jbe
cmp
test
testb
cmp
jb
push
sbb
mov
push
push
loope
test
pop
jne
iret
pop
daa
test
dec
dec
push
cmc
out
aas
rorb
push
dec
test
cmp
popf
repz
adc
or
leave
sarl
adc
cmp
push
rclb
sbb
push
scas
test
dec
in
mov
mov
pushf
mov
lock
ds
xchg
movsl
lods
xchg
sti
cmp
lds
sub
cmpsl
loope
push
daa
test
inc
lea
sbb
aaa
inc
sti
push
ja
cltd
mov
jb
in
sbbl
imul
push
das
mov
lahf
pop
sub
jp
xchg
std
adc
jne
ds
inc
pop
jl
push
cwtl
repnz
fistpl
pop
jp
push
mov
push
jecxz
call
les
add
ss
popa
inc
jle
vhsubps
and
inc
adc
mov
sahf
cmp
inc
aaa
notl
jmp
lret
lcall
pop
sbb
lea
sub
in
lock
adc
movb
push
inc
outsl
mov
and
add
push
insl
fstpl
sbb
fstpl
and
mov
inc
rcrb
mov
jns,pn
pusha
sbb
fisubs
cltd
push
cmp
xor
sbb
icebp
outsb
ljmp
push
sbb
sbb
pop
ss
fwait
xchg
scas
adc
subb
xchg
jno
add
ss
pop
mov
mov
lret
jmp
lahf
repz
mov
outsb
pop
movsl
inc
jge
sti
adc
cltd
lret
std
fnstcw
mov
pop
push
lret
mov
aaa
adc
mov
cli
inc
xchg
push
push
jo
jns
imul
sbb
push
loope
and
mov
xorb
push
pop
push
lea
out
addr16
mov
add
add
jo
ds
push
or
insb
cltd
lods
ds
jne
add
xlat
into
hlt
fdivrp
pop
inc
movsb
jae
sub
mov
ret
and
push
xor
cmpsb
test
mov
enter
push
into
out
add
push
sub
repz
mov
mov
dec
xchg
aad
enter
and
leave
aam
pop
ret
aaa
in
outsb
jnp
and
repz
sbb
mov
xchg
gs
xor
je
xorb
pop
dec
jecxz
inc
dec
pop
pop
mov
inc
xor
aaa
adc
mov
pop
jb
and
rcll
cmp
lods
push
cmpl
dec
and
pop
fsubrl
cwtl
mov
ret
add
pop
aaa
or
dec
decb
aaa
inc
aaa
lods
rorl
dec
in
push
ss
and
mov
aad
aaa
mov
test
pop
jmp
mov
jae
cmp
jp
and
dec
in
enter
jg
push
jno
jle
aas
cwtl
mov
lods
clc
fisttps
data16
mov
lret
arpl
xchg
xchg
les
mov
add
sbb
and
test
push
int3
arpl
mov
incl
jp
cmpsl
lods
sti
pop
stos
sbb
mov
lret
cld
inc
pop
aaa
in
or
xchg
push
push
jb
orb
movsl
inc
stos
and
jge
mov
dec
dec
add
inc
xchg
jl
pop
ss
hlt
or
pop
jnp
mov
jnp
inc
adc
stos
and
inc
outsb
pop
nop
sahf
push
jns
lds
int
popf
div
push
enter
pop
call
lret
dec
or
andb
jne
pop
cld
pop
jnp
je
ficoms
inc
lahf
or
divb
lcall
jl
dec
lret
adc
hlt
jle
push
adc
and
mov
ds
clc
out
inc
xor
sbb
sbb
and
mov
ljmp
mov
pop
ss
mov
inc
mov
stos
pop
js
frstor
aaa
dec
pop
jno
sub
pop
sbb
popa
outsb
int
pop
testb
dec
fcomps
push
and
les
sti
xorl
pushf
aaa
imulb
faddl
sahf
incl
pop
enter
xlat
aaa
xchg
dec
jnp
inc
sbb
aaa
and
xor
popa
dec
shlb
xor
scas
loope
movl
cmp
divb
dec
ljmp
lret
mov
aaa
sub
outsb
pushf
xchg
es
mov
add
push
sbb
fisubs
cmp
insb
jg
mov
fnstsw
sbb
call
mov
xor
in
aad
or
aas
inc
dec
pop
ss
dec
loopne
and
add
outsl
movsb
xlat
inc
jmp
adc
cmp
addb
or
sbb
pop
lahf
cld
repz
aaa
es
pop
imul
mov
fwait
sbb
or
push
std
xchg
stos
pop
mov
push
mov
addb
mov
hlt
mov
or
enter
jge
xor
mov
cmpsl
sbbb
sbb
sbbb
fs
sub
out
ret
xchg
sub
pop
das
mov
inc
and
clc
test
enter
fildl
out
jbe
cltd
repnz
ljmp
mov
les
add
negb
insl
arpl
vmovshdup
cmp
inc
dec
cmp
aaa
cmp
pop
push
jle
outsl
out
mov
add
imul
cmp
mov
das
mov
fwait
lahf
dec
lret
mov
jno
pop
test
sbb
int3
fbstp
sbb
in
std
pop
cmp
fisubrs
jl
mov
in
in
mov
repnz
sbb
inc
jmp
cmpsb
cmpsl
insl
mov
cmp
xchg
int
negb
aaa
jmp
pusha
test
push
nop
mov
mov
ds
cmp
ss
push
cmp
sub
insb
or
pop
out
sbb
and
xor
sub
add
into
pop
call
push
mov
je
rolb
daa
mov
cs
aaa
xor
cmpsl
lahf
pop
sbb
es
add
cmp
movsl
jg
adc
pop
adc
add
or
dec
into
dec
test
stos
out
push
sbb
ret
into
add
and
ljmp
inc
mov
inc
inc
fdivrl
pop
sahf
ret
jnp
xor
jl
scas
cmp
stos
xor
insl
test
loopew
sahf
sub
int3
sub
mov
movsb
cmpsb
in
rorb
mov
in
adcl
out
adc
or
pop
addr16
dec
xchg
pusha
sbb
cmpsb
int3
ret
push
xlat
sti
rolb
jmp
mov
cmp
movsb
lahf
repz
push
test
adc
pop
jle
mov
mov
int
in
mov
mov
pop
aas
and
mov
loopne
jecxz
mov
test
and
sahf
in
shll
in
mov
das
inc
mov
cmp
mov
add
pop
cmp
push
mov
fdivl
push
gs
pop
jne
aam
dec
je
fcoml
xor
cmp
pop
ror
popf
fs
insl
sahf
xor
cmp
bound
gs
pushf
mov
cmpsl
and
or
mov
cmp
dec
push
jl
inc
push
and
cmp
mov
fstl
out
movsb
incl
cmp
js
pop
fadds
cmp
aaa
jae
jmp
jp
jle
clc
cmp
test
sub
mov
enter
stos
mov
loope
push
cmp
loope
mov
cmp
outsl
es
jge
jo
repz
xor
lcall
cli
inc
push
xchg
cmp
fadd
aaa
push
dec
push
pop
call
push
loope
in
aas
shrl
mov
shll
adc
push
mov
jae
add
pop
adc
pop
push
cmpsl
dec
add
mov
pop
insl
fcmovnu
mov
cmpsl
inc
sbb
jge
add
repz
sahf
fstpt
sti
mov
push
push
cmp
dec
sub
aad
adc
inc
push
fisubrs
and
mov
sarl
jl
fstl
out
into
cmp
cmp
pop
push
shlb
cld
jecxz
pop
outsl
xor
in
dec
leave
mov
sahf
sub
cmp
jne
xchg
pop
rcl
sahf
jb
pop
mov
push
test
int3
out
je
sti
inc
test
aad
push
dec
cmp
cmp
cmp
or
inc
ror
int3
xchg
mov
mov
outsl
movsb
cwtl
sahf
pop
push
pop
frndint
adc
sahf
xchg
mov
lock
fimuls
aaa
outsl
cmp
cs
repz
divb
fcomp
mov
imul
adc
jp
mov
dec
mov
or
inc
cld
adc
xchg
lods
popa
mov
push
dec
xor
dec
adc
pop
mov
in
testb
pop
mov
push
aam
lods
or
cmp
outsb
pusha
and
mov
ja
mov
imul
sbb
mov
sub
fbld
fistpl
imul
rcr
out
out
lret
adc
ds
test
mov
sbb
mov
mov
sarl
sbb
loop
dec
mov
dec
cmp
mov
cmp
lods
cmpsb
pop
mov
lods
jecxz
dec
ret
mov
aad
push
mov
in
mov
add
xor
sub
mov
clc
icebp
repz
mov
scas
fnsave
jae
lret
das
sbb
out
js
imul
ficompl
pop
push
fld
bound
adc
aaa
pcmpeqb
out
mov
fidivs
and
adc
add
pushf
xchg
fs
jp
daa
sahf
adc
sbb
xlat
pop
loop
pop
pop
scas
lea
mov
push
dec
loopne
pop
mov
imul
or
adc
pop
stos
into
dec
insb
and
cmpsl
enter
fmulp
das
add
or
push
insl
mov
addl
shl
pop
mov
mov
push
push
clc
fisubs
lahf
not
jno
push
fcoml
inc
idivl
dec
inc
adc
pop
test
mov
hlt
inc
movsl
push
mov
loope
cltd
lcall
xor
in
lock
cmpsb
add
mov
hlt
and
cmp
mov
pop
in
das
jmp
das
adc
sbb
ss
sub
or
loop
mov
aaa
sahf
sbb
inc
push
ss
fstl
pop
scas
mov
cltd
push
hlt
repz
fcoml
pop
sbb
icebp
ss
enter
push
xchg
pop
mov
stos
sbb
push
adc
fldenv
mov
xor
imul
mov
jne
orb
daa
cli
in
pop
mov
mov
scas
push
add
out
inc
cli
jge
lret
js
lahf
and
sbb
lock
lret
sbb
and
push
add
or
xchg
sbb
push
inc
mov
jmp
mov
mov
cltd
jae
es
sti
inc
cltd
ljmp
mov
jae
xchg
push
pusha
mov
add
adc
lea
pop
adc
pop
flds
xlat
mov
or
jbe
push
push
cli
loope
int3
or
sub
mov
push
sti
sub
jg
xor
icebp
mov
pop
fwait
add
jp
cwtl
dec
lock
stos
mov
jle
int3
and
and
inc
mov
fisubs
adc
cmp
jg
push
enter
inc
mov
and
xchg
ss
or
mov
lret
mov
les
jecxz
mov
adc
sbb
push
mov
pop
clc
ss
test
cmp
and
cltd
add
cmp
jno
dec
jge
lods
stos
imul
arpl
jo
cmpsb
sti
jle
loope
lea
sbb
ds
mov
jb
stos
fidivs
xchg
mov
ljmp
jb
test
scas
mov
repz
pusha
popa
mov
sbb
mov
inc
mov
or
fbld
gs
adc
cs
and
mov
jge
pop
xchg
enter
fs
inc
cwtl
popf
icebp
ja
test
adc
add
pop
jl
mov
sbb
je
inc
fdivp
xchg
fsubrs
push
test
or
aas
mov
nop
adc
lea
out
js,pt
lahf
pop
cltd
popf
out
sbb
lret
outsb
jnp
sbb
cmp
in
mov
aaa
cli
xchg
sub
dec
xlat
jmp
xchg
cmp
loope
pop
or
and
out
mov
and
push
xchg
sub
sub
loop
clc
sbbb
imul
push
fsubrs
push
enter
jb
add
mov
iret
xchg
jnp
add
cmp
shl
mov
aaa
arpl
ficoms
mov
leave
adc
push
mov
ss
imul
cmp
lret
pop
int
cmc
movsl
mov
push
sbbb
rcll
cmp
xchg
cmp
xchg
mov
push
lods
ret
pop
jg
fbld
pop
sbb
out
add
bound
ret
mov
into
xor
cli
int3
xlat
mov
cmpsl
inc
jb
xchg
lcall
pop
add
push
icebp
aad
cmp
shl
in
lods
push
jb
imul
mov
cmp
subb
pop
pop
loope
aas
sbb
cmp
jne
incl
xchg
mov
sbb
mov
push
int
mov
movsl
ss
dec
mov
sub
adc
icebp
insb
sti
outsl
in
cmpsb
outsl
jb
pop
cmp
mov
in
repnz
imul
repnz
outsl
mov
pop
out
inc
aas
sub
lret
test
movsb
pop
scas
pop
bound
mov
and
xorl
xchg
lret
insl
aad
insl
cmp
arpl
cmp
mov
fcomp
int
negb
icebp
in
adc
idivl
push
int3
jl
scas
pop
int3
xchg
jb
aaa
push
jns
push
mov
sub
cmp
sahf
in
fs
data16
pop
xlat
mov
insl
cmp
imulb
and
xlat
subl
sbb
out
pop
insb
sbb
aam
xor
divl
inc
cltd
mov
es
psubsb
dec
insl
sub
mov
cmc
sub
and
sub
call
hlt
stc
mov
push
js
outsb
test
fnsave
cmp
add
mov
push
fstps
es
xor
mov
adc
rorb
and
inc
add
mov
fstp
mov
push
aad
xor
rcll
cmp
cmp
sahf
das
shlb
lods
cmc
jge
mov
lret
into
popa
sub
xlat
jmp
stc
sahf
pop
popf
mov
dec
aad
jo
jne
fdivrp
jo
add
adc
mov
sahf
add
mov
into
lock
jecxz
mov
bound
xchg
popf
je
pop
pop
ljmp
xorl
orl
mov
push
jecxz
jnp
mov
mov
add
mov
pop
jbe
and
sbb
sbb
add
cmpsb
enter
mov
repnz
rcll
jle
bound
and
icebp
add
cmp
sbb
in
xor
dec
sub
fsub
add
mov
dec
jns
shll
ret
jp
dec
cmp
lock
cs
jns
cmpsl
out
cmp
cli
push
sub
sahf
ds
das
add
pop
sbb
icebp
rolb
or
scas
addr16
adc
sub
fistps
movsb
sub
jp
adc
adc
popa
scas
sbb
fs
outsl
test
mov
adc
aam
push
jmp
outsl
xor
mov
and
or
dec
fidivl
cmp
mov
cmp
xor
push
pop
fidivs
mov
je
repz
sahf
leave
sub
inc
pop
mov
mov
mov
mov
pop
std
push
cmc
dec
daa
movsb
mov
jne
scas
adc
mov
and
pop
aam
dec
pop
fistpl
or
jl
xchg
inc
inc
pop
mov
stos
jl
and
push
mov
add
push
pop
xlat
and
pop
popa
sbb
aaa
push
push
push
stc
mov
jecxz
xchg
mov
jp
bound
mov
bnd
sbb
inc
inc
sub
les
stos
lea
in
int
cwtl
pop
mov
push
lea
test
adc
les
xchg
adc
cmp
pop
mov
jp
sbbb
shlb
std
cmc
xchg
movsl
lcall
pop
push
cmpb
dec
jno
cmp
loopne
lods
mov
lahf
pop
dec
mov
mov
cli
ds
push
ret
cmp
and
jmp
and
incl
daa
xchg
or
lret
xlat
push
jmp
mov
and
lea
xchg
and
pop
loope
sbb
add
in
mov
or
loope
pop
push
mov
mov
adc
push
fisubrs
imul
xor
movsl
sbb
add
shrl
jle
sub
bound
sub
outsb
fcmovnb
movsb
sbb
popf
pop
xchg
in
push
stos
dec
mov
inc
fcomps
sti
xor
in
mov
popa
sbb
iret
or
stc
mov
sub
fisttps
jp
ss
jl
add
test
fmull
sbb
pop
jo
insb
fsubs
std
popa
rclb
lods
inc
cmp
orl
jecxz
xchg
mov
sbb
jg
ljmp
mov
mov
cmp
push
jle
xchg
pop
lds
test
jl
mov
frndint
cltd
inc
dec
sub
jno
sub
rcrl
in
pop
xor
or
cmp
mov
je
into
inc
popa
call
pop
xor
pop
adc
adc
gs
and
dec
jle
aad
inc
jmp
jl
xor
jecxz
jmp
push
and
lods
adc
std
pop
push
outsb
mul
and
jnp
jg
jg
ret
test
pop
add
sti
lds
pop
idivb
cmp
mov
arpl
push
popa
mov
outsl
add
pop
adc
jbe
sub
mov
xlat
jmp
mov
pop
pop
dec
adc
sub
aaa
and
fsubl
lods
add
xchg
mov
dec
inc
jbe
fidivs
icebp
scas
dec
scas
xorl
shrb
jno
push
mov
aaa
aam
aad
mov
adc
pop
or
jno
cmp
lcall
mov
lret
pop
into
scas
loope
jne
inc
xor
pop
xor
cmpsb
jno
dec
jl
or
and
cld
pop
pop
out
sbb
insb
push
mov
aas
cwtl
test
outsb
add
push
jle
dec
or
dec
cmp
mov
popl
popf
bound
imul
das
and
aaa
outsb
cmp
mov
or
mov
ljmp
sbb
cmpsb
enter
xchg
jle
aaa
lcall
xchg
in
clc
dec
pop
test
aad
shl
in
cmp
mov
pop
xchg
mov
inc
imul
inc
addb
push
cmp
or
mov
and
dec
sahf
mov
test
ds
jb
in
aam
push
xor
fidivrs
cmc
add
and
pop
add
mov
in
sub
stos
lods
out
gs
adc
insb
repnz
pop
mov
mov
pop
addl
inc
add
push
pop
jl
mov
sbb
pop
stos
ficoms
out
call
je
or
push
mov
or
push
and
pop
iret
pop
roll
fimuls
fwait
pop
scas
push
and
xchg
sub
lea
jb
ss
pop
lods
lock
rcrb
lcall
imul
std
push
dec
cmp
in
in
fwait
out
mov
es
cmpsl
test
clc
push
or
test
fldenv
std
sti
mov
sbb
jp
mov
push
xchg
ret
mov
arpl
lea
std
inc
add
popa
adc
js
jl
jle
sbb
push
hlt
les
dec
popf
jp
ret
ljmp
pop
shl
push
test
jo
adc
cmpsl
aaa
xlat
fistpll
push
movsl
pop
xchg
pushf
push
jge
js
out
daa
sbb
aaa
adc
pop
sub
cwtl
push
mov
out
push
mov
jns
jne
call
es
mov
or
fstpl
in
adc
in
push
fstl
xchg
fwait
jno
xchg
dec
push
fwait
and
cmpl
inc
out
movsl
in
inc
mov
das
mov
repz
cmpsl
mov
out
adc
and
scas
and
jle
cmp
and
neg
push
stos
into
fldt
ss
aas
sub
out
in
sbb
stos
pop
fsubl
sbb
fisubrl
push
xor
sti
je
mov
fidivrs
jmp
lahf
outsl
stc
push
arpl
push
sub
and
or
inc
fsubrs
scas
loopne
and
sbb
jbe
jl
aaa
jg
scas
rcrl
popf
push
unpckhps
cmp
cmp
sbb
mov
jb
sub
sysexit
imul
xchg
les
adc
es
sbb
ss
sbb
jb
push
jb
imul
test
loopne
mov
out
repz
outsb
ret
lds
mov
subl
xchg
inc
mov
pop
push
add
inc
iret
stos
scas
pop
jle
lahf
cltd
xchg
pop
daa
lret
mov
sbb
and
ljmp
pop
jl
cmpsl
enter
js
jmp
and
cmpsb
dec
idiv
testb
jnp
ret
ficoms
out
movsb
mov
out
xorl
cmpsb
or
stos
fdivrl
sub
pop
or
jno
xor
lahf
lock
scas
jne
aaa
or
cmp
add
inc
adc
push
std
sbb
ret
pushf
subb
mov
shrl
xchg
in
adc
cmp
sub
pop
pop
sbb
pop
push
ljmp
in
int3
or
stos
push
jecxz
jle
shlb
jbe
xor
add
test
push
adc
jbe
repnz
jo
mov
xchg
xchg
mov
xor
ret
cmp
cmp
in
outsb
std
mov
xchg
jecxz
iret
rclb
sbb
arpl
test
lods
rcll
sbbb
divb
push
jo
pop
cwtl
xchg
and
pop
ret
fsts
jb
test
jae
push
mov
outsb
mov
enter
jmp
mov
add
fisubs
pop
pop
cwtl
jbe
pop
lahf
mov
pop
jae
mov
std
clc
outsb
out
adc
stos
fisttpll
add
out
pop
inc
mov
ljmp
jle
mov
or
push
fcom
jo
inc
scas
scas
arpl
fsubl
imul
mov
push
imul
test
mov
jbe
scas
dec
lods
rcrl
test
fdivs
push
lock
jg
and
inc
push
rcll
add
jl
pop
sbb
add
pop
jl
sbb
pushf
cmp
popa
leave
jbe
cmp
sbb
ja
xor
sbb
push
ljmpw
add
in
push
jae
roll
lcall
shll
dec
xorb
das
mov
mov
in
mov
out
out
sti
aaa
mov
adc
dec
add
pop
xor
clc
divl
xchg
inc
pop
lret
aaa
dec
ja
adc
cmp
mov
xchg
mov
lahf
outsb
pop
adc
xor
mov
testl
je
fisttpl
cmp
inc
js
pop
push
stos
jecxz
add
jne
inc
sub
repnz
outsb
fildll
loope
sub
pop
xchg
jo
mov
lods
nop
insl
dec
ret
ss
push
mov
jecxz
shrb
push
xchg
popf
icebp
sbb
or
in
mov
mov
and
jmp
lock
jmp
cltd
pop
lahf
cmp
jbe
call
push
ljmp
arpl
sub
cmpsb
xchg
ss
ja
fisubs
icebp
inc
mov
xchg
ja
push
inc
aas
call
lcall
inc
pop
xor
and
mov
adc
sahf
imulb
xor
rcr
out
mov
clc
xchg
mov
jbe
addb
scas
into
mov
imul
mov
orb
push
scas
jno
pop
in
sbb
mov
rol
lds
jbe
icebp
aaa
mov
jg
stos
cmp
arpl
jns
je
test
inc
pop
sub
cwtl
adc
fwait
movsl
add
call
lds
jle
popa
sub
push
inc
mov
cmpsb
addl
push
pop
test
cltd
mov
jl
pop
push
mov
dec
pop
pop
mov
pop
in
jbe
fmull
mov
ss
mov
pop
std
dec
and
pop
add
pop
lret
and
incl
push
jo
ret
daa
jp
mov
loop
sbb
arpl
fstp
mov
out
rorb
fwait
jae
repz
notl
pop
mov
popa
jg
arpl
out
pop
sbb
cwtl
mov
sub
lcall
cld
jecxz
outsb
sbb
popa
mov
pusha
gs
fmuls
popa
lea
mov
cmp
stos
dec
dec
iret
push
lea
mov
or
inc
jle
inc
cmp
imul
mov
dec
push
inc
pop
jp
imul
cmp
scas
push
insb
fdiv
fnstenv
lret
mov
pop
sarl
cmp
jg
in
fstp
cmp
aaa
lret
jno
lds
cmp
insl
sbb
or
loope
out
add
pop
sub
pop
rcrb
cli
dec
loop
leave
cltd
in
std
push
hlt
out
clc
repnz
jbe
sub
mov
ljmp
pop
cwtl
xchg
addl
xor
outsb
sbb
pop
mov
cmp
jno
cmp
inc
orl
jbe
std
cltd
out
and
push
jge
dec
inc
cmpb
mov
sbb
cmp
popl
xorl
repz
xchg
sbb
pop
inc
push
jp
lea
jle
inc
icebp
fdivrs
inc
sbb
test
add
inc
fildl
add
or
movsl
xchg
push
push
or
scas
andl
mov
dec
and
fisubs
push
pop
cmp
icebp
ficoml
jo
xchg
pop
add
cmp
out
jnp
shrl
mov
mov
cwtl
addr16
pop
ret
negb
lret
or
outsl
jge
jmp
cmpb
xchg
xchg
sbb
test
mul
dec
loope
push
jae
or
add
pop
adc
and
xor
and
mov
pop
cmpsl
icebp
ljmp
popa
xchg
and
jae
outsb
out
jge
adc
movsl
nop
and
inc
push
pop
repnz
mov
cmp
jge
enter
inc
pop
aaa
cmpsl
sbb
mov
andb
push
loope
jae
int3
jo
adc
or
sarb
sahf
dec
es
sarl
stc
jb
pop
pop
cmp
pop
inc
test
jae
add
sub
repnz
pusha
push
xor
cmpsb
movsl
sti
mov
bound
mov
pop
mov
mov
repz
jmp
xchg
sbb
orb
dec
data16
adc
pop
xchg
add
and
sub
mov
pop
mov
pop
sub
or
add
push
pop
fstpl
jmp
out
jmp
clc
fnstsw
push
movsl
xchg
lret
pusha
fdivrl
cmp
mov
mull
lret
xor
adc
arpl
ret
repz
pop
pop
dec
xor
or
xorb
mov
in
in
add
jno
pop
xchg
and
cltd
xchg
test
xor
aas
pop
fcmovnb
fstl
mov
mov
insb
rolb
push
aam
repz
cs
pop
cmpsb
fistpl
pop
mov
pop
sub
loopne
dec
mov
mov
fstpt
cmp
pop
push
pop
repz
inc
xchg
sbb
or
dec
adcb
xor
jnp
outsb
loopne
inc
lea
mov
jb
lods
int
mov
mov
or
push
sub
jecxz
pop
aaa
in
pop
jp
pop
mov
mov
outsl
negl
add
addb
pop
imul
inc
xchg
jo
or
xor
pop
jbe
pusha
pop
jne
ret
mov
pusha
inc
cmpsb
icebp
sub
add
popa
add
mov
fnstcw
clc
or
cli
movsl
test
add
sub
repnz
and
jge
and
addr16
and
dec
pop
mov
cmc
cli
lret
roll
cmp
xchg
push
pop
ror
and
cmp
cmc
cmp
out
cmp
bound
ficompl
adc
insb
bound
cmpb
aad
and
jbe
movsl
repz
sahf
arpl
mov
fs
pusha
outsb
push
pusha
bound
push
loope
add
add
jbe
shrb
ja
jl
adc
or
jge
movsb
xor
ss
insb
and
ds
xor
jbe
scas
fdiv
adc
testb
mov
pop
cli
sub
pop
adcl
test
pop
ja
cli
lahf
xchg
mov
pop
gs
loopne
inc
jbe
push
iret
fsubrs
mov
fiaddl
and
push
lcall
push
add
lcall
xchg
jle
inc
in
outsb
pop
jg
and
aas
mov
sub
pop
jbe
shll
push
jbe
push
sbb
xor
push
xchg
subb
pop
jmp
mov
jno
dec
aas
es
sub
xchg
imul
mov
bound
inc
jne
lahf
mov
das
lret
xchg
nop
sbb
test
sbb
stc
in
pop
add
lods
mov
daa
or
shlb
mov
loope
pop
aaa
jecxz
aam
dec
xor
imul
inc
popa
or
sarb
sbb
sub
inc
cmp
push
push
add
add
aam
jmp
stc
pop
test
ds
pop
rorl
mov
adc
out
aaa
ret
xorl
sahf
das
and
clc
pop
adc
stc
mov
push
mov
andb
rolb
sub
pop
sbb
mov
out
lea
ds
iret
sbb
cmp
xor
cmp
test
xor
es
push
bound
mov
imull
xchg
add
or
iret
sub
pop
dec
jns
mov
and
sbb
push
adc
gs
movsl
fstl
out
insb
pop
shl
lret
aas
cmp
bound
je
es
inc
dec
adc
pop
sub
sahf
xchg
dec
mov
sbb
jns
xor
in
jle
push
add
out
daa
dec
shr
jb
decb
cmp
ret
add
pop
imul
imul
outsb
sub
pushf
into
jb
pop
in
mov
test
fnstcw
arpl
pop
push
or
xchg
push
into
jle
push
xchg
and
pop
mov
dec
ss
pop
pop
negl
mov
adc
sub
pop
cmp
cltd
mov
cmp
pop
or
outsb
imul
sbb
int3
test
cmp
push
in
int
hlt
fsubl
insb
ss
xor
xchg
pop
mov
and
stos
test
cmp
leave
call
cmpsl
xor
jmp
jl
xor
outsl
inc
sbb
xlat
jge
mov
test
and
ss
mov
in
insb
mov
xlat
sbb
dec
test
movsl
xchg
stos
outsb
data16
je
pop
adc
adc
xchg
add
jge
push
mov
inc
clc
test
mov
or
jbe
cwtl
adc
in
pop
mov
add
icebp
daa
sub
jb
xchg
mov
fbld
mov
push
stos
jg
jbe
gs
repnz
mov
cmpsb
pop
into
xor
mov
sub
lock
andl
into
jne
sti
js
pop
test
enter
pop
stc
inc
push
inc
push
adc
in
insl
jle
repz
jl
into
pop
sub
cmp
jecxz
test
sub
mov
pop
outsb
jb
nop
sbb
dec
pusha
jae
xchg
mov
xor
cmp
std
es
in
shr
js
sub
dec
scas
insl
pop
xchg
pop
in
inc
outsb
popa
add
mov
pop
sahf
adc
ja
jae
addb
ret
out
pop
cmp
push
pop
mov
pop
mov
add
xchg
and
in
fwait
mov
push
aas
mov
dec
lret
jle
jmp
cwtl
sbb
mov
pop
mov
sbb
jge
inc
mov
pop
push
and
ja
sub
push
pop
out
push
bound
imul
jnp
pop
sbb
mov
mov
adc
xchg
arpl
inc
lock
insb
je
out
sbb
dec
and
repz
jae
sbb
in
ds
jecxz
into
ss
jge
enter
loop
dec
ss
and
or
jbe
jne
fwait
addl
pop
pop
sbb
adc
jne
ror
mov
add
int
lahf
or
std
xor
pop
xor
aam
push
jbe
xor
adc
jg
pop
mov
sbb
inc
dec
out
push
sahf
lret
pop
sbb
faddl
test
scas
pop
pop
gs
outsb
pushf
decb
or
sub
cmc
fdivs
mov
sbb
outsb
xchg
push
cwtl
push
lds
add
insb
call
push
fcmove
out
jl
xchg
mov
loop
in
mov
cmp
sub
mov
adc
and
loop
bound
es
push
xchg
lahf
fstpl
out
pop
mov
push
inc
pop
jo
leave
jmp
xchg
div
and
pop
cmpsl
pop
sahf
imul
mov
test
push
pop
mov
into
pop
ss
push
js
pop
in
add
leave
aad
pop
pop
pop
sbb
dec
jecxz
pop
sub
push
aaa
fildl
xchg
adc
push
hlt
and
iret
pop
mov
xchg
xchg
mov
outsb
lock
lret
ljmp
fs
fsubl
mov
adc
push
pop
ja
push
xor
sbb
add
cmp
leave
adc
pop
add
dec
sahf
pop
outsb
or
repnz
inc
mov
pop
sbb
xor
das
push
jle
cltd
imul
pop
out
lods
lds
mov
inc
out
sbb
mov
and
iret
je
xchg
dec
jle
pop
into
fidivrs
xor
jae
mov
rsm
scas
sti
sub
mov
jp
mov
dec
sub
cs
bound
add
pop
jb
dec
adc
sbb
sub
fs
cmc
in
inc
outsb
movsb
lret
add
pop
bound
stos
sarl
pop
mov
or
test
adc
into
in
mov
pusha
inc
inc
ds
leave
imul
cld
sub
and
jecxz
aaa
arpl
pushf
insb
pop
in
adc
mov
cli
cmpsl
ss
jg
hlt
pop
stos
mov
xchg
shlb
sbb
add
outsb
lds
jge
loope
push
stos
aas
outsb
mov
in
dec
or
push
sbb
ss
sub
jge
jl
pushf
pop
imul
push
add
ss
mov
jge
ret
cmp
pop
dec
add
push
pop
jno
nop
push
addb
jmp
frstor
inc
cld
dec
pop
les
pop
mov
mov
sub
xor
pop
stc
push
dec
cmp
sub
pop
lret
sbbb
fwait
mov
rcrb
out
cmp
push
add
out
daa
jl
mov
and
pop
pop
jg
fistl
imul
in
pop
push
sub
push
sbbb
rcll
insl
repz
fs
dec
cmp
sti
pop
xlat
leave
sahf
fnstcw
xchg
outsl
std
call
and
in
push
mov
pop
daa
xchg
and
rolb
sub
aas
add
xchg
xlat
sbb
and
sub
fistpll
popa
loop
fcomps
add
pop
jae
and
jbe
icebp
sbb
pop
outsl
cmp
call
mov
gs
pop
cld
push
cs
add
jge
jge
mov
aad
or
mov
push
xchg
push
xor
xor
stos
fstpl
divb
iret
aas
pop
mov
adc
movsl
stos
or
xchg
decl
dec
and
mov
pop
out
mov
add
inc
div
ljmp
mov
jmp
or
jge
pusha
es
and
icebp
jo
sub
les
call
lds
mov
iret
jb
in
pop
ret
and
pop
call
xchg
and
ds
xlat
cltd
jne
sahf
sahf
inc
jle
std
loopne
shrl
dec
jmp
mov
jecxz
aaa
stos
xorl
lret
por
scas
inc
fisttpll
ds
daa
faddl
pop
std
ds
jbe
pushf
push
frstor
sub
es
loope
pop
sub
xchg
sahf
pop
mov
inc
mov
xchg
lods
sub
repnz
js
repnz
pushf
cmc
fs
mov
fcompl
inc
and
hlt
repnz
es
add
cld
repnz
sub
xchg
jbe
movsb
dec
pushf
in
lods
shll
les
inc
push
jecxz
nop
je
dec
fldenv
outsb
fs
add
sub
pop
mov
mov
mov
lods
dec
mov
mov
jns
movsb
pop
loope
pushf
dec
jg
pop
sub
lea
add
and
mov
push
mov
xchg
jns
pusha
stc
and
gs
hlt
popa
or
jg
pop
pop
aas
inc
mov
mov
lret
xor
mov
aad
outsb
fs
pushf
out
add
scas
mov
push
lods
cld
mov
ljmp
cmp
insb
inc
fistpll
arpl
fcompl
lret
not
pop
mov
in
jnp
add
cld
mov
shlb
xchg
in
fdivs
mov
lods
loopne
test
mov
leave
jge
sarl
mov
jne
fdivrl
lahf
outsb
hlt
repnz
mov
mov
cmp
fbld
scas
mov
fidivs
jo
cmpsl
mov
lahf
mov
jmp
add
fs
out
fiadds
mov
pop
jnp
outsb
cld
ret
xchg
repnz
mov
ja
icebp
sub
outsb
mov
jg
int
xchg
mov
rorl
scas
mov
lods
cli
adc
cmpsl
int
fs
lret
dec
leave
or
mov
sbb
mov
sub
in
loopne
mov
iret
mov
mov
jne
movsb
and
js
dec
lahf
jg
mov
add
and
sub
push
jge
shl
push
push
mov
frstor
lock
dec
in
push
jg
pop
add
dec
xchg
loope
movsb
sarb
or
les
jge
ja
int
xchg
sbb
push
pop
movsl
pop
call
cmpsl
in
sub
xchg
shrl
fidivl
movsb
test
pop
je
pushf
lds
stc
imul
lahf
push
mov
pop
lods
inc
pop
test
and
bound
inc
fbld
jp
movsl
imul
and
in
mov
mov
cwtl
and
xchg
lcall
mov
mov
gs
and
dec
bound
xchg
repnz
cmp
mov
test
addr16
dec
dec
cmp
insl
popf
pop
pop
jl
int
fdivr
mov
dec
in
add
xchg
or
popa
aaa
cmpsb
enter
mov
shl
jg
pop
repz
push
int
push
xchg
roll
and
fistl
lret
mov
xor
cmp
insb
mov
jno
lea
add
adc
cmpsb
popa
ret
popa
icebp
clc
jg
icebp
and
out
push
pop
jne
fs
and
popa
in
inc
jg
mov
clc
lods
out
es
and
mov
mov
repnz
imul
loopne
jbe
les
fwait
or
popa
adcl
mov
lods
dec
or
or
jge
loop
js
fmull
es
add
xor
push
pop
stos
xchg
imul
pushf
push
mov
and
lods
repnz
add
xchg
test
push
mov
fcoml
out
dec
bound
and
repnz
sahf
jge
hlt
setne
jbe
in
push
add
cld
sahf
xchg
mov
inc
pop
adc
lods
shll
fdivl
int
pushf
dec
mov
rdpmc
movsl
and
scas
or
mov
sub
sbb
out
sbb
inc
es
fcoml
push
mov
and
out
jae
mulb
aad
repnz
or
dec
mov
jo
data16
mov
and
mov
and
adc
or
nop
testl
leave
pop
xorl
cld
push
xchg
bnd
mov
movsb
insl
pushf
mov
popa
iret
mov
mov
mov
test
ror
outsl
mov
push
cltd
int
sbb
sub
dec
and
jae
fs
cmp
loopne
pop
loope
repnz
xchg
fs
dec
add
cmp
fbld
xchg
xchg
push
icebp
movsb
or
int3
push
daa
sub
mov
xor
lods
outsb
cmp
mov
sub
iret
fdivrs
mov
movsb
dec
dec
loope
fs
jp
fwait
sbb
rol
int
hlt
add
ror
cmp
xchg
xchg
loop
popa
jmp
inc
jg
mov
scas
xlat
dec
call
adc
pusha
sti
les
fdivs
add
orl
shll
xchg
loopne
iret
mov
in
and
dec
inc
cmp
dec
and
addr16
jge
mov
pop
cmc
sbb
sbb
add
xor
pop
mov
int
shll
inc
subb
cld
pop
or
ret
sub
xchg
negl
mov
xchg
jg
lret
cmp
jle
scas
dec
repnz
in
in
call
enter
in
repnz
xchg
mov
adc
push
lods
sub
mov
cmp
mov
outsb
jnp
mov
rcr
pop
rcl
sub
es
negb
mov
movsb
repz
cmp
adc
sub
push
and
je
sub
dec
pop
jne
fnstcw
and
int
fsubl
sub
jmp
jg
hlt
add
jle
shlb
xchg
repnz
in
xchg
mov
dec
movsb
fdivs
outsb
or
lods
mov
cwtl
and
jae
dec
js
pop
xor
fwait
cmpb
out
es
lret
and
cmp
out
mov
and
lods
repnz
pop
cs
lods
mov
dec
mov
inc
mov
sbb
adc
int3
ja
loope
out
ss
ss
jne
mov
idivl
cs
roll
mov
out
jbe
mov
je
movsb
dec
and
pushf
repnz
cli
xchg
fdivl
xor
sub
pop
and
mov
xchg
mov
outsb
fmul
icebp
lods
cltd
xor
shlb
lock
repnz
ficoms
mov
bound
loopne
lods
sbb
cltd
and
dec
xor
pop
fisttpl
mov
int
in
arpl
pop
paddb
xchg
aam
repz
dec
mov
movsb
fxch
leave
dec
inc
mov
pushf
dec
or
push
mov
pop
movq
xchg
sbb
pop
ret
fcoml
js
pop
pop
jb
insl
cld
loope
repnz
sti
mov
movsb
pop
jne
pushf
xlat
and
and
lods
sbb
rol
xchg
push
mov
sbb
imul
js
hlt
jb
loop
ficomps
in
daa
add
cld
jp
sbbb
aas
je
xchg
arpl
ss
movsb
mov
jl
mov
cmp
mov
dec
rcrb
or
xor
fstpt
fdivl
mov
ds
insb
jl
fstpt
inc
imul
xchg
sbb
popa
sbb
xchg
test
lods
fwait
or
popa
add
icebp
adc
push
dec
dec
xchg
mov
add
je
fsubl
jnp
push
mov
mov
insb
xchg
cld
push
das
sbb
pop
fimull
clc
fisttps
xorb
das
jl
pop
or
loope
dec
push
sbb
popa
sti
and
and
xchg
hlt
outsl
test
in
bound
xor
push
add
xchg
mov
jno
lock
aas
mov
in
mov
jne
mov
test
adc
cmp
jg
jp
or
pop
jne
pop
mov
cld
mov
cld
sbb
fidivs
add
jae
or
cmc
mov
sub
es
push
dec
jne
fs
cmp
mov
imul
add
xchg
repnz
xchg
shlb
pop
mov
and
cmp
lahf
mov
jg
pop
dec
cmp
scas
divl
filds
fs
sub
dec
lods
jne
test
aaa
and
jecxz
int
sahf
mov
add
loope
cld
jo
mov
cmp
mov
jbe
pushf
add
mov
loope
push
cmp
fadd
ret
fdiv
cmpsb
jae
jp
add
and
jl
push
mov
pop
and
jnp
pop
pushl
pop
or
bound
add
or
push
push
mov
es
push
hlt
lods
hlt
sbb
cld
mulb
and
mov
mov
lret
cld
dec
jge
popa
movswl
leave
int
es
add
xor
cmpsl
mov
lods
inc
or
and
dec
pop
pop
mov
push
jp
mov
mov
int
out
mov
inc
je
mov
jg
pop
test
cmp
js
sbb
mov
mov
or
pop
icebp
mov
mov
pop
pop
sbb
mov
xchg
lods
call
mov
ret
in
push
sbb
sub
dec
and
inc
inc
sbb
mov
mov
stos
icebp
loopne
bound
xor
js
cld
leave
and
jbe
mov
pushf
aam
xlat
cmp
dec
lods
es
inc
es
adc
sarl
popf
cmp
fs
mov
pop
sbb
into
cmp
push
add
push
add
in
in
adc
popf
fs
sarl
mov
mov
imul
aad
int3
jns
dec
loope
and
jge
mov
push
sahf
gs
hlt
jle
mov
sub
mov
pop
or
adc
int
fildl
mov
cmp
loopne
subps
mov
into
jg
icebp
lock
mov
in
movsl
shl
dec
mov
popa
push
add
pop
inc
cld
scas
sarl
movsb
jp
int3
ficomps
pop
in
aam
dec
adcb
push
adc
dec
mov
rcrb
add
jno
cmp
jl
jno
pop
int
hlt
dec
and
in
shlb
and
add
xor
ss
repnz
idivl
xor
xor
lods
repnz
cld
pop
shr
lock
rolb
push
test
fs
add
js
fmull
fnsave
loopne
setg
xor
ja
adc
je
xchg
mov
mov
and
repnz
mov
rorl
les
aas
push
insb
cs
ss
popa
jl
push
sbb
mov
mov
or
fldl
or
inc
cltd
push
cld
sbb
cmp
leave
es
pop
and
out
jp
pushf
mov
ljmp
cli
into
cmp
jne
cmp
sbb
int
mov
das
je
jmp
adc
leave
icebp
dec
scas
out
sbb
mov
cmp
fstl
mov
lods
or
fnstcw
inc
xchg
and
and
imul
je
lock
pushf
clc
sbb
icebp
dec
mov
push
fistpl
push
inc
loop
xor
loope
iret
cmp
jle
faddl
hlt
or
inc
repz
fdivl
push
dec
pushf
mov
mov
mov
and
xchg
mov
mov
orl
mov
lcall
push
fs
mov
xorb
cmp
lods
fdivr
sbb
popa
loop
cltd
outsb
adc
sub
inc
sub
outsl
bound
pushf
fdivrs
sbb
pop
mov
int
les
dec
jl
xor
pop
inc
and
and
jae
add
jno
jnp
pop
inc
xorl
stos
cld
xor
lcall
adc
sub
pushf
shll
cmp
jge
les
push
popf
dec
and
jbe
and
sub
add
jl
adc
jo
cli
xor
push
ret
dec
movsb
popa
test
pushf
into
icebp
addr16
cmp
aam
stos
notl
sub
ss
fwait
or
jp
imul
fdivrl
jg,pn
pop
in
mov
sbb
int
cld
dec
test
repnz
xchg
mov
or
sbb
mov
cli
pop
push
mov
dec
shlb
sbb
fs
pusha
mov
cmp
shrl
xor
js
cli
cmp
shll
ss
movsb
jbe
test
sbb
addr16
inc
les
pusha
repnz
push
ret
pop
aas
xchg
mov
jae
and
pushf
inc
lock
pop
and
ret
fsubr
cmpsb
in
repz
stc
cld
sti
and
mov
pop
pop
stos
mov
lods
shll
arpl
ja
xor
fmull
ss
fisubl
add
cld
int
xchg
test
movsb
cmpb
les
testl
dec
shll
or
fwait
in
inc
and
fisttps
imul
mov
lds
pushf
lock
pop
jb
popf
mov
std
push
cltd
shlb
add
adcl
movsl
clc
hlt
enter
stc
sub
push
divl
test
or
pop
mov
movsb
jle
pushf
test
mov
out
movsl
jp
sub
jno
sbb
pop
xor
jl
imul
pop
mov
mov
call
jmp
imul
mov
stc
ljmp
add
pop
adc
mov
ss
aas
xchg
fs
scas
idivl
sbb
xor
jo
aaa
je
hlt
js
push
int3
pushf
mov
mov
mov
cmpsb
int
movsb
and
xor
inc
jae
mov
jle
pop
mov
push
cmpb
xor
push
cmp
pushf
inc
outsb
test
jbe
fiaddl
push
jnp
popa
push
jb
xchg
pop
dec
or
and
add
sahf
mov
addr16
lods
add
ss
rcrb
stc
pop
mov
jmp
ror
test
mov
push
pop
xchg
movsb
lds
push
and
les
js
pushf
in
dec
or
jle
dec
iret
faddl
cmp
js
sahf
jnp
mov
sbb
add
outsb
cld
cmp
push
mov
mov
pop
pop
movsb
cmp
push
jg
pop
cmp
shrl
mov
and
je
negb
repnz
jb
hlt
stos
aaa
stos
dec
testl
mov
and
mov
mov
jno
cmpsb
push
lret
les
mov
pop
pop
xchg
cmp
and
fcoml
or
dec
movsl
add
jg,pn
and
lock
sbb
mov
lock
jnp
adc
int3
mov
inc
xchg
push
inc
sti
and
and
mov
enter
nop
jg
pop
mov
movsb
push
pushf
popf
lret
mov
mov
mov
cmp
sahf
cltd
loopne
bound
mov
dec
in
int
rcrl
add
mov
stc
mov
into
mov
fsts
in
jp
lds
xchg
add
pusha
pop
mov
xchg
in
data16
jne
cs
ret
inc
sub
jl
mov
dec
mov
jg
add
ret
sub
xor
fildll
popa
lahf
outsb
add
pop
hlt
pop
pop
iret
push
push
cmpb
pop
adc
and
and
repnz
push
insl
lods
sub
in
les
jg
shrb
sub
fidivrs
fwait
icebp
jg
inc
xor
cmp
das
fcoml
or
in
jg
xor
jnp
pop
jmp
adc
cmp
les
out
xchg
or
jno
aaa
cmp
push
cmp
out
in
fisubrs
faddl
int3
push
pop
and
bound
cld
push
xchg
lods
xor
fwait
outsb
mov
jl
outsb
test
repz
lahf
outsb
mov
xchg
int
push
mov
int
mov
mov
push
fmul
hlt
xor
lea
jp
dec
test
adc
aam
jbe
sub
adc
pop
in
mov
sti
mov
nop
fs
xlat
sbb
sti
and
idivl
add
lock
mov
pop
push
mov
fildl
xor
fldenv
movsl
mov
mov
jnp
ficompl
iret
in
mov
mov
sti
xchg
nop
loope
mov
int
sbb
jg
test
cmp
aam
sub
and
in
adc
test
sbb
outsl
popa
les
aas
mov
cmp
rorl
push
mov
mov
sub
sti
lds
sbb
jb
inc
in
outsb
pop
xor
bound
jbe
mov
sbb
repz
or
jno
xchg
js
or
cmp
mov
push
loopne
dec
mov
lds
stos
xor
pop
int3
xchg
test
dec
icebp
sar
dec
push
mov
mov
xchg
mov
cmp
xor
fildl
jo
dec
cmp
sbb
add
out
or
jge
imul
push
icebp
mov
jle
iret
pop
inc
in
jo
adc
xchg
sbb
mov
jmp
push
inc
sub
mov
iret
sub
dec
xor
sbb
hlt
mov
mov
cmp
nop
adcl
mov
xchg
and
movsb
repnz
add
mov
das
mov
mov
and
jnp
repnz
jbe
mov
fidivrl
fmulp
jne
adc
popa
inc
mov
cmp
sub
cld
stos
mov
sbb
int
std
adc
js
rcrb
in
push
icebp
sbb
notb
das
loopne
mov
push
in
fsubl
bound
adc
pop
out
mov
mov
cmp
inc
clc
loop
icebp
mov
xor
mov
lods
dec
les
jle
adc
and
jno
add
lods
divl
in
or
imul
cld
in
icebp
push
cmp
test
mov
movsb
mov
fimuls
push
xchg
mov
icebp
jb
popf
mov
pop
xchg
mov
sarl
pop
ja
push
mov
int
sub
das
mov
fucomi
mov
add
jecxz
mov
movsb
insb
popa
mov
xchg
inc
les
mov
xchg
es
out
mov
pop
in
cld
loopne
test
movl
jge
mov
sti
cld
pop
icebp
adc
lods
cltd
pushf
mov
cmp
pushf
cmpsl
test
lods
add
mov
jg
mov
inc
lods
js
xchg
dec
jnp,pn
pop
add
fmull
inc
lods
ror
std
in
mov
mov
cld
xlat
jg
sub
push
movsb
pop
push
popf
lods
int3
and
in
mov
lods
push
in
mov
test
out
mov
jge
mov
inc
hlt
inc
cmp
jp
into
lock
cwtl
push
aas
fsub
pop
fucom
sbb
rorl
pushf
out
add
cmpl
xchg
and
adc
negb
out
ss
lahf
cmp
mov
ja
aas
sub
or
out
icebp
inc
test
cmp
mov
pop
push
sahf
push
lea
mov
mov
mov
inc
mov
fdivp
jnp
push
ja
xchg
sbb
or
pop
sub
fwait
cltd
outsb
and
movsb
repnz
ret
xchg
xchg
inc
xchg
inc
lods
dec
loope
les
bound
pop
dec
aas
rcr
cltd
sbb
adc
loope
pop
fnstsw
roll
mov
jl
int3
fsubrl
sub
sbb
sbb
incb
icebp
mov
dec
in
popf
mov
ret
movsl
mov
stc
fcomps
mov
sbb
in
and
inc
faddl
test
lret
repnz
dec
movsb
sub
and
jae
xchg
xorb
ret
xchg
cmp
mov
loope
lods
mov
mov
test
sar
jno
push
test
jl
mov
cmp
nop
jg
fistl
lods
push
jae
orl
insb
out
jl
fcompl
aad
mov
in
pop
add
cld
mov
add
das
movsb
imul
leave
jnp
sbb
jle
mov
mov
repz
jne
push
out
pop
mov
xchg
jae
dec
ret
jecxz
mov
jno
push
jge
lods
lods
mov
aam
es
testl
cs
sbb
mov
sub
or
imul
lret
jg
test
dec
and
adc
pushf
and
pop
stc
sub
add
jge
adc
jb
add
cmp
add
movsl
hlt
popf
xchg
and
pop
cli
jg
cltd
xor
in
mov
cmpsl
jl
sarb
mov
sahf
shrb
mov
jmp
les
push
dec
sbb
mov
xor
loop
inc
adc
in
rcll
jp
inc
xchg
inc
sub
sbb
outsl
rorb
jns
dec
mov
test
fbld
jnp
sbb
jo
bound
jo
and
mov
adc
jb
xchg
xchg
dec
sub
out
int
mov
lods
cmp
jge
sub
pop
and
je
icebp
les
sbb
xchg
pop
cmp
in
cwtl
inc
pop
jge
pop
xchg
adc
mov
jle
mov
mov
pop
in
cmpsl
mov
sahf
mov
loopne
xchg
sub
mov
inc
jae
push
outsb
sbb
lea
out
popa
or
adc
push
jg
pop
in
sbb
cmp
sub
jnp
and
pushf
cmc
repnz
add
xchg
pop
mov
leave
jns
dec
sbb
jae
adc
imul
es
data16
in
mov
mov
sar
ljmp
mov
adc
in
jle
adc
stos
pop
jle
inc
mov
out
fbstp
les
sbb
push
mov
ret
and
xor
add
loop
jecxz
xchg
inc
ficoms
mov
lods
xchg
call
sbb
sahf
outsb
fldt
lods
rol
dec
outsb
push
ds
sbbb
mov
fcompl
in
std
add
dec
and
xchg
rorb
mov
or
repnz
xor
mov
in
mov
rcll
adc
dec
repnz
jge,pn
mov
or
cmp
dec
xchg
pop
add
icebp
fs
jle
jbe
and
pop
pop
mov
jge
and
sub
lds
int
cmpsl
pop
push
fimuls
loop
std
mov
imul
cltd
adcb
idivb
pop
mov
pop
add
jle
movsb
das
icebp
xor
iret
loope
xor
loop
mov
jg
fs
inc
jb
popf
insb
mov
mov
jle
bound
lods
dec
ds
dec
jo
lahf
lahf
repnz
xchg
cmp
lock
push
negl
loop
stos
test
cmp
cmp
jnp
stos
fsubrl
pop
mov
loop
add
or
jae
sub
mov
sub
lods
mov
rol
push
fnstcw
into
sbb
cli
mov
xchg
lods
ljmp
leave
add
pop
mov
addl
repz
outsl
cmp
outsb
mov
dec
movsb
xchg
push
sbb
addr16
lods
inc
mov
mov
and
bound
xchg
lret
hlt
insl
addl
dec
in
cmp
fcmovnb
and
and
jae
shlb
push
sub
dec
mov
gs
jge
sbb
sub
xor
pop
mov
fcomp
cmp
inc
ds
jl
in
or
lret
push
push
and
inc
sarb
jp
popa
mov
movsb
push
and
mov
test
int
les
pop
mov
jmp
pop
mov
fstpt
sub
jge
mov
arpl
movsl
push
xor
jmp
fstpt
out
pop
ds
dec
in
mov
cltd
jae
pop
ljmp
xchg
pop
or
pop
fmull
mov
mov
jnp
xchg
xchg
cmc
jno
xchg
pop
add
fbld
jecxz
pop
sbb
mov
lods
subb
cmpb
jo
mov
fwait
mov
subl
test
imul
pop
jle
icebp
inc
jo
out
pushf
and
shrl
stos
int
mov
arpl
push
mov
mov
mov
mov
and
jecxz
xchg
and
adc
and
sbb
pop
mov
pop
ret
and
jge
mov
push
lar
int
test
adc
lock
cld
inc
jge
cs
xor
les
cmp
aam
jae
pop
idivl
sub
inc
jg
aam
shll
fwait
out
mov
xor
les
pop
arpl
jns
inc
cmp
nop
popa
test
mov
lret
pop
push
inc
sub
push
xchg
push
pop
out
int
mov
inc
movsb
jg
loopne
and
lods
loop
add
dec
mov
or
fidivrs
loopne
popf
inc
fdiv
repz
xchg
jg
xor
and
repnz
adc
fcoml
xor
jnp
sbb
popf
mov
adc
pop
icebp
mov
movsb
mov
push
mov
fst
fs
cmp
in
js
and
cltd
in
cmp
push
xchg
repnz
loope
pop
movsb
push
iret
fxch
inc
adc
lods
cltd
jo
inc
push
add
mov
sbb
bound
fnstsw
mov
jecxz
ljmp
and
in
mov
lea
imul
add
add
sub
mov
mov
mov
lods
dec
inc
or
insb
in
cmp
cmp
pop
mov
fsubrl
dec
hlt
paddsb
pusha
jno
xchg
add
jge
mov
and
mov
mov
mov
je
lret
int
mov
mov
jno
jl
inc
jg
ror
sysenter
in
sahf
shlb
mov
lods
imul
roll
dec
adc
xor
cwtl
in
jle
pop
popa
shll
xchg
pop
lea
rcrl
jbe
push
and
jnp
scas
loop
fs
push
jl
call
jno
push
inc
stos
lret
mov
cltd
popl
push
cli
mov
pop
outsl
sbb
sub
fidivs
setnp
cmp
or
jo
or
or
dec
add
dec
int3
pop
inc
test
sub
sbb
hlt
ret
sub
adc
out
jbe
rcrl
jae
fistpll
icebp
jg
pop
jecxz
outsb
sahf
add
pop
mov
arpl
gs
js
xor
sub
in
pop
insl
int3
mov
or
scas
add
bound
and
add
inc
pop
mov
andb
cmc
cmpb
mov
mov
and
adc
imul
xor
mov
or
and
dec
sarb
jle
in
sub
sbb
lock
adc
bound
mov
dec
sub
dec
mov
pushf
dec
dec
xchg
lods
out
push
xor
pop
push
and
add
sub
pop
jl
rolb
je
adc
fidivs
jae
call
inc
insb
jbe
push
mov
push
push
sbb
adc
push
fisubrs
cltd
js
adc
inc
loop
xor
sbb
nop
sbb
cwtl
in
sti
mov
add
ret
dec
mov
mov
dec
adc
sbb
cmp
shll
fs
punpckldq
hlt
add
xchg
gs
or
in
jle
in
mov
adc
sub
mov
mov
sahf
bound
std
jle
fcompl
ljmp
or
inc
mov
leave
inc
fwait
jle
push
adc
pop
mov
in
popa
es
jo
push
out
fidivrs
sbb
xor
stos
hlt
mov
adc
loop
push
mov
xchg
cld
cmc
pop
out
mov
or
pusha
ret
jg
aam
sub
fldcw
add
add
sub
lods
push
aas
pop
mov
popf
mov
aam
je
cmpsb
push
pop
lods
aas
add
cld
sarb
pop
sarl
cmp
jnp
icebp
movsl
lds
loop
mov
sub
cmp
and
add
outsb
or
inc
lahf
add
sub
xor
xor
mov
adc
arpl
push
arpl
adc
mov
fsts
jmp
adc
pushf
pop
jl
hlt
test
pop
add
ss
cld
cltd
dec
adc
lahf
ret
sar
out
in
mov
xchg
and
inc
cmp
int3
jp
int3
push
fdivrl
push
rclb
push
insl
pop
fcomip
jl
cld
ret
test
in
sub
mov
mov
xchg
gs
lock
pushf
xchg
in
jmp
push
sub
icebp
rcrl
pop
lahf
or
mov
cmpsl
insl
and
sub
cmp
repnz
sbb
lods
stos
lahf
push
add
sub
lods
incl
push
mov
movsb
shrb
mov
insb
pop
mov
push
jp
add
insb
cs
adc
ucomiss
outsl
in
xorl
mov
loopne
hlt
and
fiadds
cwtl
jp
xchg
cmp
mov
jno
inc
lock
sbb
mov
jb
sub
xchg
inc
mov
dec
and
in
popf
hlt
imul
pop
or
imul
and
js
mov
push
cmp
mov
sbb
jg
push
adc
cmp
push
pop
fdivrl
shlb
mov
je
in
xor
xchg
ja
or
jae
fidivrl
cmp
pop
dec
and
inc
mov
popa
add
jg
sbb
inc
adc
lcall
js
clc
cmp
jbe
ret
xchg
pop
inc
ss
stc
je
mov
rolb
test
mov
sub
push
in
fsubl
adc
jo
inc
add
and
addl
fdivs
test
adc
mov
push
or
jp
dec
int3
lea
loop
scas
jg
ds
and
ret
hlt
in
push
in
outsb
push
decb
adc
test
icebp
mov
mov
cmpsl
jp
mov
incl
inc
ud1
gs
in
sti
push
add
icebp
inc
fistps
sbb
jge
lret
jnp
div
pop
mov
mov
cmp
jns
into
lret
sbb
popa
jb
les
js
adc
and
lea
test
fcomip
mov
lret
jmp
jmp
loopne
and
xchg
scas
inc
int
sbb
movsb
lcall
jo
sti
xor
sahf
loop
lods
add
and
mov
and
sbbl
ss
hlt
pop
or
mov
loopne
push
pop
sub
jb
xchg
pushf
mov
scas
pusha
mov
nop
mov
jl
mov
aam
mov
mov
andb
mov
sbb
jno
bound
push
test
int
and
or
sahf
insl
ss
adc
les
pusha
sahf
push
dec
push
fs
jmp
cmc
loop
or
push
sbb
add
pop
pusha
jg
adc
cmc
mov
pop
add
outsb
dec
pushf
jle
push
leave
inc
mov
jno
xchg
cmp
and
hlt
mov
out
xor
lretw
ret
stos
out
sub
lret
bound
ficomps
pop
lret
push
loopne
lds
adc
pushf
add
int
lods
lret
mov
cli
cmp
pop
lock
imul
xchg
loopne
cmp
jae
xchg
mov
sub
inc
jo
xor
pop
inc
movsb
stos
jg
and
pop
int
in
fisubs
pop
sub
adc
imulb
imul
je
stos
cmp
cmp
or
mov
adc
imul
lahf
push
pushf
lret
popa
sti
movsb
lock
inc
imul
pop
pop
add
int3
push
out
decl
jp
pop
hlt
in
inc
outsl
fdivl
clc
sahf
sbb
sub
cld
pop
imul
xlat
ja
lock
popa
outsl
ret
push
fstps
and
loope
pop
jle
adc
fists
ss
mov
sahf
cmp
mov
jb
int3
dec
insb
lods
add
adcl
mov
fisubrs
arpl
cmp
sbbl
fwait
and
xchg
jae
cmpl
cltd
je
xor
jb
sub
fisubs
jbe
fcompl
lock
pop
rclb
lahf
pop
lods
cltd
es
and
xor
repnz
adc
sbb
mov
aam
jl
sub
in
mov
and
pop
inc
pop
je
pusha
cmp
inc
pushf
jmp
and
sub
add
jae
sub
add
insl
push
je
imul
sbb
test
jp
fidivl
sub
or
pop
sti
push
xor
out
sub
pop
add
mov
fs
ret
cmp
in
mov
mov
add
lea
scas
cmp
mov
mov
int
repnz
cmp
jecxz
ss
dec
push
cmp
push
and
notl
adc
imulb
shr
cld
or
push
add
es
and
pushf
test
adc
nop
cmp
repnz
repnz
xor
int
test
mov
or
insb
sub
inc
lods
sbb
bnd
adc
dec
sub
rolb
andb
test
xor
fsubrl
lods
mov
jb
cmp
and
pop
fidivs
inc
sub
loope
cltd
jae
dec
ret
inc
and
cmpsl
cmp
pop
sbb
test
adc
repnz
jbe
add
sti
loopne
pop
ss
sbb
cmp
sahf
pop
sti
shlb
lods
xor
dec
pusha
andb
mov
mov
inc
mov
icebp
rcr
insb
aaa
push
test
or
pop
icebp
push
cmp
and
shrb
push
lock
push
lret
bound
mov
hlt
dec
mov
pushl
aad
insb
xchg
dec
add
mov
inc
or
icebp
xor
icebp
add
cli
imul
popa
mov
shr
in
pop
icebp
in
and
setb
pop
xor
adc
and
mov
in
int
das
call
push
jge
push
loopne
sahf
andb
pusha
loopne
pop
jg
pop
add
or
sub
sahf
mov
insl
dec
xchg
ret
outsl
jae
push
sbb
loope
jg
and
sub
loope
add
rolb
push
or
sub
jle,pn
push
sbb
jnp
xor
jle
sub
aam
je
sbb
mov
or
sub
and
shr
inc
fisubrs
lea
add
jb
loope
shrb
pushf
adc
mov
xor
mov
iret
pop
andl
adc
add
test
pop
sbb
movsl
movsb
jno
enter
cmpb
lods
lds
iret
cmp
pop
lret
jb
xor
add
add
add
xchg
add
or
jge
mov
mov
add
je
or
sub
or
mov
cmp
and
sbbl
jge
inc
push
jle
sub
sbb
aas
nop
lods
sub
jmp
jl
ds
mov
iret
xor
into
lods
int
cmp
nop
dec
pop
pop
mov
bnd
stos
xchg
mov
rorl
cltd
subb
sahf
dec
in
jo
js
testl
fcompl
and
cmp
icebp
dec
inc
mov
and
sub
jo
lods
test
cmp
pop
push
sub
icebp
movsl
jg
or
in
jb
add
lods
int3
sub
icebp
cli
popa
out
mov
andb
pop
push
pushf
stos
inc
jb
fwait
cmp
shlb
das
adc
cld
add
push
jae
push
cltd
jb
mov
add
fistpl
hlt
in
cmp
and
cld
or
in
jo
mov
icebp
outsl
bnd
and
fwait
and
cwtl
lods
sub
test
jbe
adc
push
movsl
dec
stos
popa
mov
cltd
sub
and
cmp
cwtl
je
or
shll
add
sahf
stos
loopne
dec
add
jp
pusha
repnz
imul
lods
int3
loop
sub
jb
jmp
popa
stos
mov
pop
fstpl
lea
sub
and
je
xchg
in
aaa
jg
push
fimuls
fmulp
jmp
pop
pop
inc
loope
sbb
lods
ja
loope
repnz
stos
inc
mov
push
dec
je
pop
sbb
pop
mov
pop
xchg
mov
lret
sbb
je
pop
ret
push
movsb
jb
sbb
popf
insb
cvtpi2ps
outsl
adc
fs
inc
aas
fildl
cmp
mov
jbe
and
xchg
lods
imull
movsb
cmc
pushf
jnp
push
je
lods
mov
imul
and
out
shl
int
loope
std
jl
lods
addr16
out
in
cmp
or
loopne
push
push
scas
jge
inc
mov
pusha
xchg
mov
mov
pop
lahf
in
test
lahf
inc
loop
pop
cmp
lret
mov
insl
cs
inc
ss
lret
mov
pushf
call
lods
xchg
fildl
and
inc
std
roll
insb
sti
push
bound
cmp
into
jle
in
add
cld
jb
shlb
push
pushf
repnz
xchg
aad
mov
hlt
and
inc
test
jl
xor
mov
or
stos
mov
inc
lret
cld
cmp
ja
xchg
mov
pop
outsb
inc
addr16
push
add
icebp
or
sahf
in
ss
mov
aas
imul
je
scas
cmp
es
and
push
dec
fwait
push
pop
xor
pop
test
dec
hlt
arpl
and
xor
inc
ss
loope
inc
push
into
cmp
adc
fildl
jg
cwtl
je
ret
pushf
orl
icebp
lods
fcomp
das
jecxz
mov
and
xchg
cmp
lods
int
sub
mov
loopne
mov
or
lcall
and
pusha
mov
xchg
out
pop
jg
mov
nop
add
pop
movsl
jmp
int3
int
ljmp
movsl
mov
dec
clc
mov
cmpb
test
xchg
jno
lahf
mov
and
and
nop
mov
or
jmp
mov
cli
fwait
jo
jnp
jns
cmpl
aaa
sti
cmp
pusha
mov
and
mov
movsb
adc
repnz
jl
rorb
push
jmp
jmp
jne
add
cwtl
ja
pushf
add
cltd
je
insb
int3
cld
les
adc
fbstp
int
jl
js
xor
outsb
inc
jne
les
int
push
inc
add
dec
arpl
sub
popa
jl
or
adc
out
ja
in
cs
mov
sahf
out
lods
repnz
ss
lds
int
sub
mov
mov
lahf
aaa
popa
sub
shl
call
in
jno
jae
ss
xor
jecxz
les
push
in
loop
dec
in
inc
ficoms
test
icebp
cmp
loop
sub
popa
int
cwtl
jle
xor
fmul
ss
xchg
movsl
sti
jg
or
hlt
mov
xchg
mov
and
lret
mov
mov
int
pushf
xor
mov
cmp
sbb
inc
mov
mov
repnz
das
aas
lods
adc
jmp
mov
sbb
jnp
adc
pop
rcl
and
push
mov
ret
mov
lcall
lcall
adc
or
sub
push
and
and
lods
icebp
into
mov
sahf
jno
pop
sub
mov
popa
outsb
lods
mov
sbb
mov
fwait
xor
repnz
das
idivl
leave
fwait
jb
mov
nop
loope
mov
fidivrl
mov
lds
cmpsl
cmp
rcrl
cmp
insb
loopne
lods
outsl
add
mov
rcrb
inc
mov
popa
repnz
pop
xchg
shll
insl
pop
mov
jno
repnz
dec
mov
shr
sub
repnz
xchg
loopne
es
jg
mov
mov
les
sub
iret
scas
sti
jne
insl
or
icebp
idivb
sbb
out
xchg
inc
das
sahf
push
arpl
mov
sbb
cmp
and
jae
cmpl
testl
mov
cmp
mov
mov
add
sub
bound
or
in
inc
cmp
notl
int
mov
dec
xchg
jo
ljmp
sahf
dec
ss
mov
sub
pop
lock
pushf
sub
sub
push
rep
nop
dec
imul
insl
in
fcomip
nop
lods
jo
add
sbb
popa
ror
and
and
pop
mov
jo
sbb
repnz
add
jg
in
adcl
and
adc
push
fs
mov
sbb
cld
xchg
xchg
iret
mov
jno
add
jb
dec
dec
enter
fistpl
mov
xor
dec
scas
and
popa
hlt
popf
cld
jl
in
push
outsl
loopne
sbb
add
test
les
aaa
mov
adc
mov
fildl
sbb
xchg
aas
pop
dec
cltd
jg
push
push
sub
cmc
insb
sbb
jle
cltd
sub
ficoml
aas
repnz
cmp
sub
enter
fimuls
or
adc
mov
dec
movsl
sbb
cmpsl
pop
mov
lods
ss
mov
arpl
jo
dec
loop
sbb
outsb
sbb
aam
pop
loop
pushf
inc
lock
insl
inc
sti
jg
push
push
pop
psllw
mov
push
mov
cmp
mov
mov
cmc
lret
cwtl
cmp
mov
pop
lahf
and
inc
int
mov
mov
xor
pop
mov
dec
inc
and
xlat
sbb
fimuls
sarl
fwait
inc
jge
hlt
dec
lods
cmpsl
or
push
dec
dec
stos
mov
sahf
fisttps
add
shr
nop
sahf
or
xchg
xor
mov
jo
fidivl
loopne
mov
test
imul
fwait
es
pop
adc
sub
pop
imul
jg
mov
cmpsl
xor
dec
mov
int
adc
test
xchg
jne
add
movsl
push
stos
jae
imul
scas
add
lahf
cs
arpl
jb
fistps
rorl
push
pop
shlb
cwtl
jnp
jne
test
rcr
outsl
adc
cmp
insb
lret
cld
or
sub
dec
xchg
cmp
xor
pop
rclb
sbb
in
ss
cmpsb
mov
out
lods
pop
es
mov
sub
mov
xor
lods
sub
popa
out
jne
std
mov
xor
filds
insl
loop
rcl
or
pop
dec
jo
imull
test
add
repz
sti
ja
in
pop
cmp
jl
arpl
ret
mov
sub
inc
sub
lret
inc
inc
loope
cli
sahf
cmp
sahf
mov
ret
aas
sbb
in
add
hlt
mov
fwait
push
pop
ss
push
jnp
mov
icebp
jl
rcl
xchg
push
push
or
and
mov
fildl
adc
int
orl
pop
mov
fs
pop
fldt
dec
icebp
sub
and
repnz
scas
mov
mov
lea
jle
mov
push
int3
les
andb
call
push
mov
stos
push
sub
sub
adc
cmp
ret
icebp
add
push
mov
aam
fistps
and
xchg
mov
clc
loop
sbb
cs
cmp
add
and
mov
mov
cmp
dec
test
cmp
lret
cmp
fistl
les
pop
jae
jno
adc
and
in
cmp
repnz
in
nop
mov
push
popa
push
pop
push
push
jg
and
jge
fsts
push
mov
dec
add
push
add
lea
movsb
mov
mov
adc
pop
push
push
mov
and
lods
addr16
xchg
das
add
or
xor
mov
lahf
mov
cmp
ja
or
icebp
std
mov
sbb
cmp
sbb
mov
int3
mov
popa
gs
mov
mov
sub
cmp
inc
shrb
repnz
jo
inc
lea
xor
sahf
inc
push
pop
jg
pop
mov
jo
or
in
xchg
pop
mov
iret
inc
pop
xchg
insb
mov
shl
jnp
sti
cmpsl
cwtl
jae
pcmpeqw
push
shrb
jecxz
cmp
mov
hlt
push
loope
add
or
sbb
jb
jne
je
push
add
xchg
and
inc
les
shrl
mov
pop
mov
sbb
fidivs
int
adc
popa
bound
push
mov
dec
mov
loope
or
sub
mov
mov
jg
sbb
in
pop
dec
push
and
add
lea
xor
jge
aam
ss
out
dec
repnz
inc
sti
pusha
lret
or
pushf
loop
xchg
pushf
int
loop
mov
mov
fisubs
scas
jg
cltd
adc
fs
stos
xor
mov
popa
daa
fadd
sarl
mov
jg
xor
jge
push
xchg
adc
shrb
dec
fndisi(8087
fstps
ror
les
dec
mov
mov
lea
pop
mov
cltd
ja
jae
mov
jl
movsl
hlt
mov
fwait
mov
rolb
movsl
push
xchg
imul
and
push
adc
outsb
add
scas
mov
js
xchg
inc
pushf
ljmp
pop
jl
mov
pop
add
dec
dec
mov
sbb
jecxz
jno
xor
ret
pop
jno
push
sbb
or
inc
add
mov
mov
loop
subb
imulb
std
pop
jge
out
ss
js
sbb
pushf
les
aas
mov
and
cmp
sbbb
add
and
fwait
mov
mov
mov
jae
pop
cmp
loop
push
movsl
std
fs
fdivrl
test
mov
outsl
bound
mov
aas
push
arpl
push
jmp
mov
ret
popa
repnz
or
test
ss
in
sbb
add
loope
outsl
test
fcmovnu
lret
dec
mov
das
icebp
jno
int3
mov
and
cmpb
scas
add
fidivrs
or
lahf
and
and
push
mov
push
icebp
cmp
outsl
push
movsb
loopne
jmp
lret
sbb
loope
insb
mov
roll
inc
cmp
insb
add
mov
shrb
mov
popf
movsl
xchg
pushf
fdivl
cmp
push
sub
jl
stc
push
pop
pop
fs
fsubr
lea
inc
cld
lcall
jg
lock
pusha
lods
popf
mov
mov
dec
lea
movsl
push
lea
sbb
push
pop
sub
xor
or
dec
push
notl
pushl
in
jae
dec
test
inc
mov
rcrb
mov
repnz
lcall
push
add
bound
inc
in
stos
nop
jo
notb
mov
ljmp
ror
icebp
decb
inc
push
icebp
sti
loope
pushf
mov
pop
xchg
xchg
test
popa
stos
pop
sbb
sarb
aam
mov
jno
pusha
test
mov
sti
pusha
pop
push
dec
mov
and
leave
loop
popa
sbb
cwtl
fsub
out
jo
cmpsb
jle
jl
ds
mov
jg
mov
xchg
adc
mov
cmp
std
loopne
jmp
mov
or
rcll
pusha
push
hlt
fs
test
jge
push
hlt
push
inc
test
jg
cmp
dec
sbb
mov
dec
push
push
lods
adc
sahf
sti
xchg
pop
in
mov
cs
dec
xchg
out
test
inc
inc
add
adc
add
pop
sbb
out
mov
shr
daa
sahf
int3
repnz
add
mov
inc
lods
shll
scas
mov
bound
pushf
add
faddl
cld
arpl
int
fisubs
fwait
lock
lods
data16
mov
xor
add
insb
fldl
dec
lods
lea
popl
lock
fbstp
ds
ss
je
sub
sti
and
cltd
outsb
jo
mov
ficoms
scas
sahf
pushf
jnp
mov
mov
test
mov
popa
cltd
aaa
sti
fdivrp
mov
aam
lock
lret
inc
push
sbb
enter
dec
aas
push
in
repz
mov
shll
push
or
insb
pop
push
xchg
cmp
ret
adc
int3
jb
imull
ja
adc
push
sub
jle
mov
push
loope
mov
push
lret
insl
mov
push
loope
les
mov
std
aas
sahf
aam
jmp
int3
fstl
cmp
popf
aam
jbe
es
adc
pusha
cld
cmp
mov
fstp
aas
leave
mov
stos
mov
dec
mov
mov
lds
jae
jb
outsl
loop
iret
outsb
sub
ss
sbbb
or
push
rorl
hlt
sti
xchg
dec
mov
ret
push
ret
or
in
jge
push
sub
lods
fnstenv
les
rolb
or
fcoml
cmpb
push
or
jp
in
lods
add
lret
test
mov
dec
repz
stos
fstps
lcall
popa
xor
push
mov
icebp
lahf
dec
add
mov
pop
loopne
adc
xchg
jnp
pop
sti
adc
pushf
pop
mov
ljmp
lret
lds
add
fisubrs
sti
or
mov
jp
imul
scas
cs
pop
dec
and
outsl
xor
repnz
mov
jns
pushf
fsub
mulb
mov
or
sbbb
scas
ss
cmc
xor
popa
int3
xchg
imul
mov
pop
int3
adc
adc
filds
lock
ja
insb
pop
repnz
pop
jae
out
cmp
xor
loopne
push
imul
in
sub
mov
shlb
arpl
loope
outsb
jns
nop
and
movsb
mov
and
ss
fdivrs
fsubp
loop
sub
fimuls
jb
cli
xor
xchg
cmc
scas
mov
pop
mov
sti
ss
lahf
js
int
mov
xchg
loop
mov
jle
dec
adc
or
loopne
xlat
adc
xchg
rolb
jp
mov
cmpl
mov
adc
lahf
mov
scas
xor
loope
xorb
ja
xchg
aas
sub
push
fisubrs
loopne
lods
jo
pop
add
or
and
lahf
pusha
arpl
pop
pop
xchg
jg
shrl
adcl
ja
adc
adc
inc
je
fadd
lret
aam
pusha
fcomip
cld
lret
and
int3
fbld
loope
sub
pusha
pop
push
movsb
and
sbb
inc
nop
add
add
std
cmp
repnz
loopne
mov
mov
shll
jnp
push
pusha
and
inc
cmp
mov
imul
sub
jnp
inc
ss
lods
mov
jo
jl
bound
cwtl
es
mov
push
push
int
lods
xor
mov
lea
cli
mov
pop
pop
sbb
jnp
and
aam
mov
xchg
hlt
mov
imul
nop
push
loope
mov
pop
dec
pop
lea
and
dec
push
dec
inc
fidivrs
fsub
and
sbb
inc
jb
dec
fidivrs
bnd
stos
popa
inc
dec
mov
ret
and
push
cs
mov
jmp
icebp
push
arpl
std
push
and
and
pusha
hlt
cld
mov
mov
mov
loopne
dec
sahf
pop
sarb
pop
incl
sub
adc
cld
icebp
loopne
jle
or
lods
adc
daa
sub
rcl
loop
mov
or
dec
pop
jle
sbb
fmull
pop
fistpll
cwtl
jle
cmp
in
mov
or
xchg
sbb
leave
lahf
icebp
sbb
cld
mov
push
ss
and
pusha
jecxz
jb
jbe
rclb
add
or
faddl
ret
and
inc
xchg
sahf
lahf
fwait
repnz
inc
js
mov
fisttpl
hlt
mov
cli
loopne
mov
pop
loope
mov
cmp
aas
jo
or
stos
stos
add
xchg
out
mov
pop
sbb
je
ss
into
sahf
pop
repnz
pop
inc
test
sub
push
adc
xor
adc
mov
and
xchg
xorb
bnd
shll
mov
and
and
loopne
xor
out
xor
ss
dec
lock
in
xchg
sbb
push
xor
and
das
mov
xchg
aas
pop
adc
and
push
pusha
cmc
mov
inc
clc
bt
xchg
shl
sar
add
neg
mov
cmp
sar
mov
movsbw
cmc
dec
mov
mov
setno
add
mov
sar
setno
and
xor
lea
call
push
clc
clc
add
stc
stc
mov
pushl
test
mov
call
cmp
add
clc
cmp
cmc
pushf
not
test
cmp
test
cmp
shr
pushf
call
pop
mov
call
add
dec
outsl
arpl
inc
jb
add
mov
dec
xor
fs
xlat
scas
and
mov
xor
mov
mov
mov
popf
loop
leave
pop
push
mov
dec
push
xchg
inc
push
xchg
inc
inc
pop
stc
cli
scas
pushf
in
or
cmp
sti
or
test
pusha
jb
movsb
jmp
loopne
sbb
stos
cltd
or
cmp
insl
cmp
andb
jo
sbb
lds
ds
mov
cmp
sub
dec
pusha
jge
sbb
std
jl
movsb
not
push
lea
jns
pop
pusha
movb
pushf
lea
jmp
add
or
lods
mov
int3
je
cltd
mov
sbb
jmp
adc
jb
adc
mov
rcrb
sahf
cmp
mov
addl
enter
adc
jne
hlt
or
push
sahf
sti
sub
xchg
jmp
out
mov
cmp
lahf
lock
mov
sbb
insl
pop
adc
inc
rolb
lahf
call
cltd
xor
xor
pop
rcrb
imul
ljmp
daa
pop
sub
sbb
push
insb
sahf
pop
xor
mov
push
hlt
call
push
push
clc
add
push
xlat
jae
pop
dec
sbb
add
xchg
cmp
test
loope
pushf
call
ss
popl
scas
scas
je
pop
repnz
mov
pop
out
jo
xchg
inc
add
pop
mov
mov
jo
and
clc
push
and
pop
push
xchg
push
or
shll
jb
fimull
inc
sub
xor
add
jp
adc
fwait
shrb
jmp
aas
rcl
inc
fprem
inc
in
xor
push
iret
add
or
add
dec
pop
iret
imull
dec
popl
scas
int
mov
jns
insl
lret
sbb
movsl
or
insb
xchg
subb
ret
jg
dec
pop
dec
and
and
fs
push
mov
iret
ret
sbb
mov
and
jbe
pusha
dec
lea
jle
clc
shl
call
call
jmp
shr
setne
mov
aas
push
ror
mov
rol
sub
shr
shl
aaa
push
clc
push
test
shld
daa
das
push
clc
bsr
dec
push
mov
daa
mov
pushf
test
movb
pushl
mov
lea
je
rol
mov
jmp
push
pushf
mov
inc
dec
mov
pusha
inc
call
call
lods
lock
jnp
in
xchg
push
aaa
test
push
aaa
add
fcoms
and
xor
xchg
leave
mov
cmpsb
mov
dec
jb
or
scas
sbb
mov
push
inc
into
push
jle
jae
insb
add
jg
xchg
mov
cwtl
pop
fists
outsl
sbb
shrb
cltd
push
mov
enter
mov
mov
scas
dec
adc
mov
push
jl
inc
test
scas
in
test
inc
inc
aad
jg
push
rclb
sub
mov
out
scas
cmc
cmp
repz
xor
xchg
das
loopne
cmp
aad
out
push
and
clc
lahf
ret
call
jb
jge
and
mov
stc
mov
test
nop
addr16
mov
iret
mov
es
out
and
push
int
adc
add
fildl
add
lcall
dec
lea
arpl
arpl
ficoms
pop
jmp
and
add
xor
insl
lods
sbb
movb
aam
int
and
mov
mov
fwait
mov
and
call
daa
lahf
rol
xchg
xor
jno
pop
sbb
sub
add
loopne
mov
and
xor
movd
push
sub
rcll
mov
mov
cld
je
push
sbb
or
jl
popf
and
adc
mov
mov
fdivrl
xchg
add
insb
cwtl
loope
aam
inc
rcrb
mov
mov
mov
loop
pop
shlb
xchg
fnsave
sbb
sub
push
xorb
cmp
pop
in
and
sbb
fldl
push
xorl
repnz
jmp
call
rorl
cmpsl
mov
in
push
stos
fldl
mov
cli
lds
jb
xor
testb
mov
mov
sti
movl
or
adc
hlt
jmp
pop
imul
add
jae
out
mov
ja
movsb
jnp
dec
cmpsb
out
cltd
lahf
dec
dec
loope
scas
sbb
jbe,pn
stos
bnd
and
fidivl
out
adcl
jmp
cmpsb
jp
cmpsb
cld
es
dec
in
push
cli
daa
rclb
add
cmc
mov
hlt
xchg
add
sar
and
jmp
mov
dec
cmpsb
int3
ljmp
sbb
cs
and
jnp
pop
lods
xchg
fstpt
enter
out
inc
adc
cwtl
pop
and
jb
jae
outsl
sarl
jecxz
dec
sbb
stc
mov
xor
or
test
fs
push
outsl
mov
dec
nop
call
lcall
xor
jnp
lahf
rolb
adc
xchg
push
xor
imul
rep
not
movzbw
lea
push
mov
mov
pushf
movb
pushf
lea
jmp
inc
jo
xchg
add
and
xchg
and
cmp
xor
mov
xorl
hlt
fdivrl
jp
add
cmp
xchg
xchg
repnz
jns
clc
add
push
xor
addr16
or
fisubrs
sbb
push
lock
std
std
mov
arpl
mov
ret
jnp
adc
lret
lds
std
sub
pushf
mov
pop
mov
xor
pop
lahf
sbb
jge
leave
in
mov
inc
and
aam
pop
les
in
aad
adc
test
adc
inc
icebp
push
push
inc
xchg
jae
xchg
push
jbe
push
cmc
imul
std
or
ror
cld
sbb
dec
pushf
lea
jb
push
pushf
stc
cmpb
pusha
jmp
lea
jae
add
shl
movzbw
and
mov
dec
shl
sar
and
mov
and
mov
clc
cmp
stc
xor
cmp
call
and
xchg
pushf
and
ja
inc
rcrl
out
push
jge
shrl
pop
xchg
cmp
lods
cmp
mov
push
xchg
cmp
jge
icebp
cmpl
out
mov
jmp
insb
ret
sbb
mov
aam
test
cmp
mov
adc
mov
xchg
icebp
cmp
or
add
mov
mov
cltd
lret
divb
push
xchg
bound
jl
xchg
add
in
xlat
ljmp
mov
xchg
dec
ret
xchg
pop
xchg
shll
xchg
push
jae
bound
fistl
gs
mov
mov
mov
xchg
mov
icebp
cmpsb
xchg
or
push
loop
sub
push
loop
roll
lcall
push
into
sub
or
sbb
or
inc
push
test
fdivl
xor
sbb
test
mov
stc
pushf
cmpb
pushf
pusha
movb
call
bsr
seto
push
mov
clc
ror
and
mov
test
cmp
cmp
pushl
repnz
pushf
push
pushf
lea
jne
mov
movb
bswap
push
lea
lahf
lea
pushf
call
adc
pushf
pusha
lea
jmp
dec
jmp
mov
clc
add
cmc
pusha
movl
movzwl
and
mov
bt
clc
cmp
movw
add
pushf
call
pushf
pushl
popl
cmp
cmp
call
pushf
jmp
lea
jne
bswap
mov
clc
clc
test
push
add
call
push
lea
jae
not
mov
inc
inc
inc
setl
not
mov
mov
jmp
sub
repz
add
rcrl
and
arpl
mov
cld
mov
in
call
push
mulb
or
jne
pop
xchg
jns
jbe
mov
sub
bound
add
or
sbbb
xor
cmc
pop
mov
outsb
enter
push
inc
loope
stos
bnd
addr16
scas
dec
rol
cmc
dec
addr16
arpl
dec
cs
fwait
out
xchg
adc
add
push
add
dec
cltd
subl
fisttpl
bound
jo
pushf
adc
ret
push
lahf
ljmp
cmp
mov
fildll
rorl
lret
mov
loop
imul
xchg
outsb
xchg
xor
xlat
fcompl
dec
fsts
test
subb
mov
sbb
xlat
call
lret
cmp
mov
hlt
das
xchg
aam
jns,pt
lock
xor
add
rcrb
mov
fldt
cmp
lret
test
mov
xchg
and
jne
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
hlt
add
cwtl
add
clc
arpl
adc
mov
cld
fwait
pop
sbb
push
cmp
pop
sti
in
jp
rcrb
in
ficoml
rorb
xor
divl
lcall
xchg
adc
fcomp
shl
daa
sbb
int3
pop
xchg
mov
cmp
cmpsl
int
addr16
xor
cmp
imul
stos
mov
dec
js
outsl
sbb
imul
cwtl
aad
lea
into
out
nop
mov
xchg
xchg
or
pop
xlat
enter
push
push
outsb
dec
sbb
mov
adc
xor
jae
inc
mov
adc
mov
outsl
inc
sbb
das
mov
popa
jle
jns
loop
in
enter
into
add
dec
sti
das
and
push
not
sar
shrd
add
shrd
inc
shrd
mov
cmc
cmc
jns
stc
test
call
call
adc
mov
push
cmp
xchg
pushf
aad
cmp
xchg
and
jmp
xor
mov
add
arpl
xor
and
out
stos
adc
lea
pop
push
xor
cmp
fmull
sbb
push
mov
add
mov
ret
mov
mov
ss
sti
push
xor
push
push
stos
movsb
add
std
iret
jmp
xlat
xchg
pop
mov
loopne
out
jmp
push
sub
iret
inc
repz
cmp
cmp
and
lret
pushf
lea
jae
clc
bswap
xor
mov
bsr
mov
shld
mov
pusha
call
ficompl
lret
pop
loop
shll
mov
sub
mov
shl
fwait
ds
sbb
lret
cmc
incb
jp
imul
push
adc
lods
lds
test
sub
mov
inc
sbb
aaa
sbb
das
jle,pn
mov
adc
pop
cld
mov
xor
pop
daa
cmpsl
mov
mov
movsb
xchg
notl
adc
push
outsl
push
mov
mov
cmp
cmc
mov
xor
add
adc
inc
add
clc
inc
push
outsl
mov
mov
imul
xchg
pushf
in
js
jmp
lahf
out
cmp
mov
sub
pop
sub
insl
xor
test
lcall
cs
ret
xor
fstpl
lods
xchg
imul
pop
scas
cs
mov
pop
clc
or
inc
fwait
xor
push
dec
dec
xorb
mov
add
sbb
loop
or
cmc
and
loope
ds
mov
in
push
pop
or
mov
and
lods
mov
jns
mov
push
dec
test
push
or
dec
inc
add
ret
repnz
insl
push
xchg
or
orl
cwtl
nop
insl
push
mov
jp
sbb
dec
call
lret
jecxz
mov
fwait
leave
dec
sub
mov
inc
push
cmp
sub
fildl
and
add
test
imul
cmc
loope
jo
or
scas
call
or
jg
sub
dec
or
jo
repz
sub
pop
mov
and
push
inc
sub
scas
cmp
inc
cmp
sbb
jns
dec
mov
and
outsl
xlat
nop
add
out
iret
add
xchg
inc
aas
ss
mov
xor
inc
push
or
pop
jns
and
fmuls
pushf
add
je
and
inc
nop
call
test
ss
xchg
leave
sbb
xorb
leave
xor
xor
cmp
add
push
mov
outsb
cmp
dec
mov
test
push
mov
movsl
or
or
fcoml
repnz
sbb
push
mov
imul
pop
or
pop
test
ret
mov
les
movsb
cmp
jge
pushf
xor
cmp
fs
idiv
mov
scas
nop
int3
std
ret
ss
push
in
fisttps
or
xlat
std
fwait
out
int3
xchg
divl
xchg
or
mov
rcll
cmpl
jmp
enter
inc
fstpl
jg
nop
scas
stc
loope
adc
outsb
dec
mov
std
push
lret
jbe
cmp
sub
rcll
pop
cmp
add
jmp
mov
fisttps
out
mov
and
xchg
lret
add
pusha
movl
lea
jno
push
pushf
lea
jmp
pushf
movw
lea
jle
jb
bt
call
bt
pushf
pusha
repnz
push
pushf
call
push
lea
call
stc
jmp
outsl
sub
sub
adc
movsl
dec
sbb
leave
mov
imull
call
push
ret
bound
mov
mov
aaa
cmp
les
je
out
mov
jge
pop
jle
popa
push
inc
stos
push
pop
inc
fdivl
rorl
mov
subb
outsb
mov
mov
pop
fldcw
pop
ror
cmpsb
inc
arpl
addr16
add
fidivrs
fucomp
ret
xchg
cmpsb
pop
ljmp
mov
cmc
sub
push
call
add
out
fwait
les
cwtl
add
xor
or
pop
jbe
add
mov
push
adc
lcall
adc
clc
push
ja
repz
in
mov
mov
sti
scas
pop
cmp
test
lock
xchg
add
sub
xchg
aaa
data16
dec
jae
test
rcrb
dec
shr
stc
insl
pop
out
xorb
popa
leave
or
aad
sub
push
dec
cmc
mov
push
bt
repnz
mov
pushl
lea
jne
setb
push
cwtl
not
movb
pusha
mov
bswap
lea
pushl
pusha
push
movl
pushf
mov
pushf
pushf
pushf
movb
pushl
ret
gs
rcrb
cmpsb
mov
mov
mov
movsl
lcall
push
add
pop
int
popf
enter
pop
jne
mov
pop
sub
daa
lds
stc
jns
xor
or
or
pushf
inc
inc
test
adc
mov
mov
jge
fdivrs
pop
push
mov
mov
iret
cltd
repnz
xchg
enter
cs
outsl
loop
jo
mov
cltd
push
fs
cltd
xor
lahf
add
daa
xor
add
jg
xor
test
movntq
out
mov
jg
popf
mov
rcr
pusha
int
lods
or
inc
xchg
cmp
iret
adc
cmp
pop
inc
sahf
dec
xor
mov
jb
test
ds
mov
xor
sub
xorb
aad
gs
sub
jnp
testb
jecxz
lcall
fmul
push
adc
jecxz
js
cmc
sub
jne
and
pushf
lea
jbe
xor
shld
sub
and
rcr
mov
shl
bsr
shl
bswap
mov
add
cmc
shr
shl
add
sub
bsf
stc
shr
pushf
bswap
xor
mov
btc
add
jmp
outsl
or
scas
in
loopne
jb
add
aaa
shrl
mov
fs
lcall
ljmp
pop
cmp
jp
jle
sahf
fcoml
shl
sub
mov
pop
sbb
call
data16
and
in
pop
inc
test
fwait
mov
adc
loopne
hlt
cmp
mov
add
pop
out
and
in
call
mov
inc
cmp
hlt
mov
xchg
fsubl
sbb
xchg
mov
and
insb
lcall
push
push
sub
lods
scas
xor
or
fistps
lds
push
and
jno
loopne
iret
jecxz
xchg
dec
shlb
mov
adc
das
int3
mov
and
aam
mov
das
loope
inc
lods
mov
dec
pushf
lea
jne
call
aas
dec
mov
cltd
mov
jb
es
xlat
nop
inc
sti
inc
icebp
gs
or
fstpl
addl
lods
adc
lea
push
xor
lret
jl
jg
xchg
ret
push
add
out
sub
mov
inc
leave
pushf
out
mov
call
dec
rdpmc
or
inc
xchg
jl
mov
in
sbb
and
ret
bnd
ljmp
cmp
inc
sbb
fwait
dec
pop
adc
jb
int
dec
jno
fisttps
or
pop
movsb
iret
notl
pop
cmp
pop
add
mov
and
mov
xchg
fwait
in
pop
add
out
fscale
punpckhdq
inc
aas
test
popf
aaa
lea
aaa
divb
jb
jg
mov
adcb
mov
popf
mov
fmuls
or
es
push
dec
loopne
pop
pushl
push
cmp
sub
jmp
push
movl
jmp
movb
jmp
stc
xor
push
bt
push
call
cmpb
pushf
lea
jmp
stc
repz
mov
addb
pop
pushf
lahf
jle
jno
push
fucom
aas
push
lret
and
sub
or
mov
and
pop
cmp
dec
cltd
js
pop
push
dec
pop
sub
insb
adc
enter
cmovno
push
push
cmpsl
sti
insl
sahf
leave
int3
dec
cmpb
repnz
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
push
push
movb
pushl
not
pushf
jmp
pushf
lea
ja
pushf
lea
jb
cmc
call
lods
cmpsb
or
dec
jbe
ljmp
sub
call
mov
lret
mov
outsb
movsl
push
mov
aas
mov
mov
mov
leave
xchg
or
outsb
add
hlt
shlb
aas
aas
mov
mov
mov
hlt
adc
insl
or
cs
sarl
jg
cmp
push
push
fs
in
test
inc
imul
lcall
ficoms
add
jno
movsl
lods
pop
aas
test
push
ret
or
mov
imul
movsb
add
inc
pop
push
icebp
insb
mov
lahf
mov
dec
popa
xchg
jecxz
out
or
cld
xchg
and
sbb
scas
jle
insl
negl
iret
sbb
int3
xchg
lock
icebp
setns
sahf
scas
imul
pusha
mov
mov
and
mov
sbb
push
lret
push
xchg
or
dec
movsb
decl
xchg
out
and
mov
ss
fsubrp
mov
inc
ret
lock
loop
int
dec
js
inc
push
inc
xchg
test
ljmp
cmpl
fisubl
push
aaa
cmp
jnp
xor
mov
movsl
or
test
jns
or
cmp
sub
fnstsw
xor
mov
js
rcrl
xchg
cmc
push
ret
lea
fnstsw
sub
jo
shrl
mov
aam
jg
add
cmpsb
mov
sbb
mov
loopne
mov
mov
cmp
test
xor
bt
pushl
push
push
rol
test
cmp
clc
add
call
jmp
lea
sbb
mov
bts
shld
and
mov
dec
jmp
clc
mov
not
mov
jmp
lea
ja
shr
sub
pusha
xor
sub
add
jl
mov
not
call
stc
jae
cmpsb
add
movsl
lock
orl
test
cmp
jno
push
call
outsb
inc
sbb
push
xor
sahf
lods
movsb
add
jae
sub
push
stc
xor
inc
shlb
pop
repz
jne
mov
popf
mov
inc
aad
outsb
scas
inc
xchg
and
sbb
nop
outsl
push
cmpsb
add
and
das
sarb
repnz
and
adc
out
ret
jmp
lahf
sub
mov
xchg
fnstcw
or
xchg
push
cmpsb
xor
cmp
jne
sbb
xchg
xchg
xchg
mov
jl
pop
cmc
sbbb
push
push
mov
xor
fldl
sbb
dec
popf
dec
jle
andb
iret
push
xchg
push
jmp
les
mov
pushf
push
lea
ja
ror
stc
sub
shl
bsr
shl
add
movzbl
mov
clc
call
movb
pusha
lea
call
pushf
pushf
call
sti
int
inc
jp
push
cmp
or
sbb
movsl
jnp
aaa
push
mov
sub
into
sub
or
xchg
sbb
add
mov
sar
mov
movsl
and
pop
daa
jbe
cmp
stos
dec
popf
faddp
rcrb
or
pop
inc
xchg
std
jno
mov
cs
adc
jnp
inc
pop
gs
cltd
js
or
xor
loop
popa
or
cmp
jge
pop
mov
jl
jle
fnstcw
popf
aaa
fwait
sub
cmc
push
sbb
push
push
jp
in
pusha
dec
adc
sbb
repnz
pop
insl
jb
in
lret
and
or
push
inc
das
aaa
sti
mov
scas
and
xor
mov
adc
nop
pusha
sahf
fsubrl
dec
std
sbb
in
cs
jle
jbe
adc
mov
sahf
mov
shr
popf
cld
aaa
pop
inc
stc
xchg
adc
pop
adc
or
jp
ljmp
mov
jle
shrl
filds
ja
push
shrl
jbe
push
pop
adc
data16
push
nop
in
or
pop
jle
repnz
fnstsw
cld
pop
add
xchg
repz
inc
enter
cmp
outsb
cmp
mov
dec
stos
jle
inc
cmp
js
shll
mov
scas
jbe
and
sub
mov
sbb
jle
mov
rcl
and
and
pop
or
jle
loope
pop
pop
fcoml
xchg
or
mov
es
aaa
das
dec
dec
adc
sbb
sub
cmp
mov
cmpsb
adc
jae
jo
es
pop
pop
test
icebp
and
xchg
sub
xor
push
jp
jo
dec
test
jle
out
loope
xor
pop
dec
scas
aad
scas
fbld
jb
jo
lret
cld
dec
jno
inc
enter
or
icebp
and
cmp
dec
mov
xor
pop
hlt
inc
adc
loop
fdivrl
in
in
cmp
cld
mov
mov
fwait
sbb
pop
sbb
popf
add
das
fbstp
sbb
pop
aam
xchg
addb
mov
outsb
pop
sub
xor
fistpl
rcll
and
push
jle,pn
pushf
push
jae
and
ss
addr16
push
sbbb
ds
loop
daa
mov
cmpsl
and
std
and
mov
pushf
scas
cmc
cmp
pop
jl
fildl
jmp
arpl
jl
rcl
jl
pop
rorl
jbe
or
clc
loop
xor
jae
and
outsl
mov
ss
std
jle
scas
pop
xorl
frstor
inc
or
frstor
jns
aas
xchg
sbb
sbb
pop
loop
sub
and
pusha
shlb
fucomi
aad
fucom
std
std
fldl
xorb
popf
dec
imulb
insl
or
mov
pop
dec
mov
fldl
mov
or
mov
adc
jmp
mov
sbb
adc
or
mov
dec
jmp
faddl
jae
popf
sbb
popf
xor
mov
push
mov
pop
ss
pop
push
mov
iret
cs
hlt
subb
addr16
mov
insl
ja
xor
sub
and
jg
in
pop
inc
mov
cmovge
sub
popa
jo
decb
pop
ss
jbe
push
mov
mov
cmpsb
mov
inc
sahf
sbbb
addb
divb
negb
add
xchg
and
insb
ds
push
add
pop
aad
add
and
in
xlat
fcoml
xchg
sbb
push
add
fstpl
mov
fsubrl
outsb
int
es
and
int3
hlt
add
faddl
fldl
dec
je
push
pop
in
sub
hlt
pop
outsl
mov
push
outsl
pushf
inc
mov
lods
dec
faddl
mov
jo
fs
and
insb
hlt
fisubrs
out
or
mov
sbb
jnp
gs
gs
xchg
sbb
and
cmp
outsl
fdivl
lret
inc
mov
jmp
mov
jmp
out
xchg
sub
cmp
fstpt
ss
pop
cli
mov
pusha
rclb
loop
mov
repnz
std
test
cmp
sub
and
jbe
lds
fwait
and
out
subb
push
mov
mov
or
inc
lret
ret
xorb
popf
pop
negb
mov
jmp
outsl
and
mov
repz
mov
pop
adcb
adc
mov
sbb
aas
or
mov
mov
lods
popf
pop
outsb
sub
mov
jmp
fnstsw
dec
loop
mov
adc
cmc
push
cs
inc
andl
popf
negb
sti
or
cmp
jmp
add
push
xchg
popf
jge
popf
mov
or
sbb
push
mov
jle
popf
mov
or
idivb
push
dec
cmpl
mov
popf
pop
negb
inc
or
push
test
jl
cmpb
hlt
or
pop
or
mov
xor
jbe
dec
mov
test
jne
sbb
addl
jae
in
fdivp
popf
lret
cmc
xlat
hlt
jmp
add
fistpl
jne
push
popf
rorl
mov
pushf
jmp
lods
sbbl
fadd
popf
add
popf
xor
or
iret
fs
je
add
pop
hlt
test
inc
mov
sbb
loopne
gs
xchg
xchg
aad
sub
and
shl
loope
fdivl
inc
xchg
outsl
fildl
add
aaa
repz
fiadds
jmp
hlt
mov
fdivrl
mov
loope
test
push
lock
mov
hlt
fsubrl
and
test
dec
dec
mov
push
cmp
fbld
jo
jae
ljmp
mov
test
jnp
loop
mov
or
test
xchg
and
pop
and
xor
sbb
inc
mov
cmp
test
cmp
sub
and
ljmp
push
rclb
xor
cmc
inc
mov
vpackssdw
mov
sub
stc
ss
fldl
dec
dec
testb
xor
das
push
sub
jle
jmp
out
clc
subl
mov
push
pop
dec
push
hlt
popf
sbb
mov
in
inc
jge
sbb
and
cli
stc
pop
sub
jle
test
mov
push
mov
dec
ja
cmc
jecxz
jmp
and
xorb
popf
xor
popf
in
or
mov
jmp
lahf
xorl
ret
pushf
or
mov
aaa
jmp
xorl
negb
mov
cmc
xchg
mov
jb
outsb
inc
mov
xchg
cmp
popf
icebp
or
mov
cmc
xor
fs
ss
in
je
add
add
std
sbb
pop
mov
movsl
fldl
stc
negl
and
repz
adc
out
aam
jbe
movsb
jne
or
add
insl
and
std
frstor
xlat
jg
cli
pop
test
or
mov
stc
jg
and
pop
or
aam
and
push
stc
jg
fstps
icebp
xor
jno
sub
lock
jmp
cmp
fwait
int3
popf
arpl
popf
pop
or
mov
hlt
jmp
add
in
andb
rcll
roll
test
add
xorb
popf
std
negb
cmc
fidivl
lods
cmpl
insl
les
shll
cmc
fnstcw
dec
andl
xlat
mov
mov
mov
cmc
outsl
pop
jmp
je
addl
roll
test
add
xorb
popf
std
negb
cmc
fimull
add
adcb
jge
jae
sbb
xor
xor
mov
test
stc
incb
addb
imul
cmp
mov
cmc
push
shr
jnp
adc
cmp
imul
mov
add
cmc
and
jg
cli
out
repz
mov
popf
outsl
or
mov
add
mov
subb
xorb
popf
mov
popf
insl
or
mov
fwait
jmp
mov
xor
jae
stos
mov
xorb
popf
xor
popf
repnz
mov
push
jmp
dec
cmpl
cmp
popf
lock
mov
jae
cmp
sbbb
addb
negb
cmc
fnstcw
add
adcb
subb
mov
orl
andl
sub
inc
popf
data16
jmp
jmp
loop
call
popf
negb
out
cmc
fwait
lcall
and
andl
jge
and
jae
lret
negb
in
cmc
mov
sbbb
jecxz
jae
jp
negb
mov
jmp
adc
and
or
mov
dec
jmp
inc
and
jae
rcrl
or
mov
stc
jmp
or
in
andb
sbb
popf
mov
or
sbb
jmp
outsl
jle
hlt
fsubrs
add
jnp
cmc
aad
jmp
jg
cli
ficompl
add
popf
push
or
mov
stc
incl
xorb
popf
cld
negb
cmc
fnstcw
add
adcb
subb
mov
orl
or
push
and
sub
and
popf
jnp
popf
aad
sub
addb
jae
cmp
shll
cmc
pop
xor
xor
aam
cmp
imul
mov
add
cmc
and
jg
cli
pop
rcrb
or
mov
and
sub
and
popf
jnp
popf
aad
lock
stc
addb
jae
add
shll
cmc
pop
cwtl
jmp
nop
cmp
imul
mov
add
cmc
and
jg
cli
pop
mov
rorl
mov
and
sub
and
popf
jnp
popf
aad
pop
mov
and
cmc
ficoml
add
adcb
jge
imul
mov
orb
and
jg
fnstenv
add
popf
push
or
mov
stc
incb
xorb
popf
sti
negb
adc
test
add
xorb
popf
std
negb
cmc
fidivrl
jmp
xor
mov
mov
orb
and
jg
popf
add
popf
push
or
mov
stc
incb
xorb
popf
sti
negb
addr16
outsl
out
jmp
pop
addl
sti
negb
xchg
dec
fadds
popl
cmpsl
popf
std
negb
cmc
ficompl
sahf
mov
data16
popf
jmp
push
mov
dec
jmp
pop
andl
ja
out
popf
fwait
or
mov
jg
out
andb
jge
and
jae
aaa
popf
imul
mov
aas
jmp
into
and
jae
out
negb
idivb
jmp
incb
mov
or
mov
mov
fs
andb
and
jae
mov
pop
or
mov
jmpw
shll
cmp
in
fldl
xorb
popf
in
popf
mov
popf
sbb
es
adc
cmc
sbb
jmp
inc
cmpl
xlat
mov
mov
orb
and
jg
fxch
popf
add
popf
push
or
mov
stc
incb
xorb
popf
sti
negb
in
dec
fadds
add
aad
mov
subb
cmpb
or
push
jmp
jg
cli
pop
movsl
popf
xor
aam
popf
mov
stc
jg
fnstenv
push
lods
popf
jl
popf
shll
cmc
mov
xorb
cmp
xorb
popf
das
negb
xor
cmc
subb
xor
mov
and
icebp
sbb
or
pop
xor
scas
mov
hlt
push
sbb
inc
dec
cmp
push
pop
jl
and
jb
ss
mov
icebp
cmp
movsb
sub
pop
and
sbb
fistps
xchg
aam
fst
leave
hlt
repz
push
pushf
mov
fstpl
in
push
xchg
out
mov
inc
fcmovnu
mov
fildl
xchg
loope
outsb
mov
lods
stos
je
fdivl
fimull
jecxz
adc
iret
popf
aam
jne
popa
hlt
addr16
cmc
dec
mov
cmc
xchg
pop
jbe
aaa
jbe
das
jbe
inc
outsb
and
sbb
mov
jle
adc
pop
stos
xchg
add
inc
pop
in
jp
add
ss
outsb
dec
jge
jl
into
push
ret
stc
push
insl
mov
add
cmc
mov
outsb
aam
cmp
and
jl
ss
and
shll
push
lds
aad
push
in
mov
int
movsb
ss
inc
cmpsb
jp
in
mov
leave
sbb
fnstcw
add
outsb
mov
lea
cmp
pop
scas
outsb
lret
ffree
insl
cmp
mov
ss
cmc
jl
outsb
shlb
xorb
jbe
jg
and
jmp
pop
adc
pop
popf
scas
add
jo
cmp
pop
insb
xchg
pushf
es
jo
add
les
aam
jnp
ss
jecxz
loopne
sbb
scas
cmc
movsl
in
sti
jge
sbb
stc
mov
stos
jl
xor
mov
sbb
stc
push
insl
inc
jl
addr16
in
jge
jl
hlt
push
mov
lds
jl
mov
and
xchg
jge
sbb
stc
or
call
shrb
jl
sahf
pop
add
adc
mov
jge
or
mov
pushf
jle
in
aaa
xchg
loope
cltd
je
xchg
aaa
out
popf
loope
loope
adc
hlt
lock
xchg
jge
jl
lods
push
dec
stc
lret
jl
hlt
pop
les
adc
cmpsl
insl
std
mov
stc
subl
mov
and
fs
int3
pop
jp
mov
xorl
mov
insb
stos
sub
cld
sbb
pushf
xchg
jle
insl
insb
int3
stc
jnp
or
mov
jl
xor
inc
in
mov
jl
cmc
xchg
insl
icebp
jl
pop
and
adc
jl
or
cmp
fisttpll
add
sbb
jmp
xor
jns
pop
insl
pop
jl
sar
jbe
cmc
and
pop
push
and
jmp
jns
sti
xchg
jae
mov
or
ss
jl
inc
push
xchg
stc
or
cmpb
ss
xor
inc
insl
mov
jge
jl
repnz
in
cmpsl
insl
add
add
pop
jecxz
cmp
add
stc
shrb
pop
add
jl
aaa
and
jp
in
push
insl
pop
add
jle
cmp
mov
or
add
cmp
mov
into
mov
frstor
stc
stos
cmp
in
mov
fstps
frstor
mov
imul
add
jle
sbb
stc
fucomp
mov
loop
pop
add
stos
dec
cmp
cmc
aad
outsb
bnd
sub
cmpb
dec
and
lret
jge
std
mov
sbb
and
mov
xchg
insl
add
cmp
cmc
sub
popa
jge
repnz
mov
pop
outsb
xchg
imul
outsb
jbe
in
dec
jbe
loop
popf
loop
popa
imulb
or
int
stc
sbbb
sub
stc
ss
fldl
or
add
insl
and
pop
mov
mov
add
outsb
loop
inc
sbb
insl
dec
pop
inc
sub
cmp
in
pop
insl
xor
jle
jl
cmp
fidivrl
sarb
ljmp
stc
ss
addr16
pop
mov
rcrl
add
pop
je
push
push
cmc
sub
dec
adc
mov
cmp
or
cmc
or
jl
mov
insl
ficomps
mov
push
cmc
int
outsb
inc
jge
sbb
stc
pop
fstl
cmp
xchg
pop
bound
jmp
jp
insb
jb
mov
push
in
les
pop
movsl
lret
mov
jb
sbb
popf
pop
cmp
pop
in
rcll
jg
ss
sbbl
cmp
popa
xor
dec
bound
bound
shll
jmp
psubw
icebp
jp
in
out
cmp
sar
dec
fstpl
insl
sbb
and
cltd
jp
in
outsl
insl
xor
popa
stc
or
xlat
stc
dec
and
sub
out
fucomp
mov
mov
jle
jl
jmp
mov
jp
cmc
cmpl
jle
jl
sbbl
cmc
and
out
insl
out
pop
mov
jl
jg
xor
pop
dec
ljmp
jbe
shlb
call
loopne
pop
fdivrp
in
lea
mov
outsb
imul
mov
push
enter
push
jmp
test
push
cmpl
jo
inc
jl
cmpb
imul
es
xor
pop
and
iret
push
mov
in
push
test
cmc
xchg
add
je
insl
sbb
cmp
mov
sub
insl
xchg
jl
mov
or
mov
fistpll
sbb
and
cmc
xor
stos
jl
cmpsl
and
int3
jge
sbb
stc
jmp
pop
jl
xchg
cmp
sbb
stc
fsubrs
jl
iret
cmp
jge
mov
fucomp
jne
in
ljmp
call
mov
repnz
clc
in
dec
mov
cmc
aad
outsb
push
jge
sbb
stc
cli
insl
jp
shll
jge
jl
cmpsl
push
pop
stc
faddl
xor
mov
mov
in
inc
jge
jl
lahf
push
cmp
jl
mov
mov
mov
das
mov
cmc
cs
lods
mov
in
mov
adc
add
pop
out
mov
mov
adc
fs
iret
push
push
jl
push
pop
dec
movsl
cmp
sbb
stc
ljmp
sub
sub
cmpsb
insl
dec
pop
jle
sbb
stc
inc
fst
ja
in
jl
hlt
cmp
stos
stc
inc
insl
mov
pop
in
jno
or
stc
mov
jl
jg
xchg
add
stc
lea
out
pop
xor
pop
pop
inc
cmp
cmc
test
outsb
sub
sub
fidivrs
test
dec
popa
pop
insl
push
test
mov
rcrb
and
cltd
and
cmc
jg
testb
test
cmc
hlt
outsb
jp
and
and
mov
and
jge
sbb
stc
cmp
jl
xor
lahf
in
scas
jge
sbb
stc
sahf
fisttpll
out
std
jl
jge
in
in
cld
jge
arpl
pop
push
fidivrs
and
bound
out
jp
adc
xchg
outsb
rorl
or
insl
ss
jl
pop
ss
mov
jo
cs
fwait
inc
hlt
aad
dec
aaa
sub
int
loope
mov
jbe
lods
int
cmp
jmp
outsb
fildll
sub
pop
adc
cmp
std
mov
xchg
pop
dec
or
sbb
stc
out
fstl
add
and
jp
in
mov
and
jl
pop
cmp
in
push
sbbb
mov
jl
sub
inc
in
push
jge
sbb
stc
dec
fnstsw
sub
aam
in
pop
jge
repnz
jl
inc
push
jmp
and
mov
jg
add
mov
pusha
xor
minps
aam
mov
adc
cmp
cmc
inc
int3
lock
sbb
jl
in
sar
xor
jl
cmp
in
into
jge
jl
fcompl
in
push
insl
inc
in
dec
jge
sbb
stc
mov
mov
and
xor
sbb
stc
and
and
je
mov
ss
sbb
ss
out
jae
xchg
pop
aad
push
jae
loope
pop
insb
jns
je
add
xorl
and
pop
push
xchg
jl
dec
cmp
in
mov
dec
sbb
stc
scas
insl
pop
aad
jl
pop
cmp
in
mov
stc
push
insl
arpl
cmp
dec
jge
sbb
stc
cmp
jl
sub
xchg
mov
cmp
cmc
aad
outsb
push
or
pop
lods
jle
sbb
outsl
and
jle
sbb
mov
jmp
xchg
xchg
jle
jne
sbb
push
xorl
dec
repz
lea
jge
sbb
stc
mov
pop
push
fs
dec
cmp
cld
jge
sbb
stc
sub
jle
or
sbb
adc
insb
int
insl
sbb
test
cmp
jl
rcrb
and
adc
bound
jl
cmp
in
adc
out
xchg
lods
xchg
pop
push
push
push
xor
add
dec
repz
ss
and
lea
cmp
mov
mov
stc
insl
dec
pop
les
mov
mov
imul
jl
mov
jge
sbb
and
sub
lds
jl
mov
in
xor
mov
test
mov
gs
mov
imul
cltd
loop
cmc
jmp
insb
pushf
adc
ficoms
dec
rorl
ss
jge
sbb
stc
call
lret
jl
sbb
out
cmc
mov
outsb
sub
sub
mov
xchg
cmp
in
sysexit
inc
dec
push
ret
in
pop
jge
mov
jbe
pop
mov
mov
repz
ss
cwtl
cmp
in
mov
faddl
jle
sbb
stc
cmpsl
fstpl
sub
lahf
cmc
int
jbe
mov
dec
and
xor
mov
cmp
sbb
int
pop
or
xor
push
rcrb
in
sarb
or
mov
and
loope
xlat
fst
stos
insl
sbb
daa
cmc
inc
ret
outsb
rorl
xchg
ret
adc
mov
pop
fdiv
adc
addl
sbb
push
cltd
cli
push
jae
jo
xchg
outsb
outsl
lcall
sub
lea
push
sub
mov
sub
and
jg
push
jne
sbb
es
sbb
test
bound
test
mov
sbb
jecxz
jp
out
add
and
mov
sbb
pop
je
popf
sbb
pop
or
jge
pop
fbstp
clc
sbb
popf
faddl
or
cwtl
insl
cmpb
pop
xchg
dec
in
sub
dec
cmc
pop
sbb
adc
pop
jg
sbb
stc
mov
test
and
and
cmp
and
or
sub
iret
inc
xor
ss
xchg
cmc
int
outsb
jge
fcompl
jg
jl
cmp
xor
test
sbb
stc
inc
insl
jb
xorb
fstpl
add
jo
xor
adc
and
andl
subb
sarb
sbb
stc
jns
mov
jl
mov
cs
lea
out
add
stc
jnp
std
imull
pop
cmpsl
out
jl
xchg
or
test
jns
jmp
push
or
js
cmpsl
xor
or
ss
mov
jle
mov
stc
dec
push
daa
and
cmc
add
pop
pop
ja
add
pop
outsl
mov
inc
jg
cmc
punpckldq
daa
jp
cmc
pop
jbe
das
jbe
inc
xchg
add
push
mov
ficoml
div
jns
jle
or
mov
sub
ljmp
cmpsb
insl
xor
cmc
mov
cmpsl
scas
pop
inc
pop
rcll
mov
test
insl
ss
adc
out
sbb
dec
je
or
push
jge
add
std
in
inc
lock
mov
mov
push
lds
pop
sub
daa
push
jp
movsl
mov
cli
jnp
push
std
jl
inc
push
test
pop
jl
je
push
int
pop
in
insl
mov
jle
jl
add
add
mov
mov
lea
sbb
mov
jp
cmc
aad
clc
mov
lds
insl
xchg
mov
dec
jl
gs
xchg
outsl
pop
push
xor
nop
insl
enter
and
test
jmp
mov
push
icebp
mov
xlat
or
fstpl
insl
jl
dec
xor
adc
pop
or
pop
sbb
sub
adc
jl
cmp
aam
nop
fstl
insl
xor
fdivrl
pop
in
repnz
add
movsb
xchg
jp
cmc
add
insl
or
icebp
and
cmc
inc
les
jns
jle
call
fs
mov
dec
je
test
dec
or
and
adc
scas
and
jae
pop
sbb
sbb
add
cmc
fs
imul
pop
rorl
lret
or
fcomi
jle
mov
adc
fsubrl
sti
loope
mov
rcrb
and
cmp
fs
pusha
insb
pop
add
roll
pop
adc
ret
test
pusha
stc
jl
push
inc
repz
add
add
add
bound
mov
scas
stos
jbe
ret
and
int
stc
sbbb
push
push
mov
ss
fucomp
mov
sahf
sbb
ljmp
pop
dec
arpl
ss
sbb
and
pop
push
mov
cmc
and
cmpl
cmpsl
jnp
pop
cmc
sbb
outsb
pop
insl
or
jle
or
and
xorb
sbb
pop
and
cmc
dec
fldl
insl
mov
in
cmp
fidivrl
sbb
stc
dec
insl
sarb
pop
rol
cmp
or
sbb
stc
pop
insl
mov
sbb
inc
stc
push
sub
cmp
and
es
sbb
mull
adc
add
push
push
push
or
pop
jl
mov
fcoml
pop
jmp
jl
xor
adc
fsubr
xor
fimuls
jecxz
mov
ss
xchg
and
bound
in
sbb
stc
mov
clc
jl
jge
jp
cmp
in
add
sbb
stc
pop
insl
scas
pop
inc
jb
push
int3
cmp
jge
sbb
stc
mov
jl
clc
cmp
mov
in
outsb
adc
jg
sbb
stc
cli
insl
sub
sub
movsb
pop
dec
loopne
mov
push
xorb
mov
jl
clc
cmp
jge
outsb
adc
sbb
stc
pop
insl
inc
and
test
cmp
test
fcompl
add
adc
jl
sbb
popa
in
popl
ss
sbb
and
and
hlt
cmp
jl
das
and
bound
dec
jp
in
sbb
jl
inc
push
sbb
cmp
pop
inc
fsts
dec
jge
jl
rcrl
mov
mov
outsb
aas
add
test
mov
rcrl
imul
das
push
outsb
and
sbb
cmpl
jno
dec
mov
cmpl
add
jle
sub
jecxz
aaa
pop
cmp
pop
xor
pop
dec
sbb
fdivrs
sarb
call
mov
sbb
hlt
xchg
stos
pop
mov
mov
push
loopne
clc
ss
lea
jle
jl
add
push
and
push
fsubl
cli
mov
xor
out
jnp
fstpl
pushf
sbb
cmp
insl
aaa
in
add
inc
cmp
dec
mov
imul
arpl
outsb
test
outsb
movsb
ljmp
jle
sbb
mov
loope
scas
fldl
mov
xlat
pop
hlt
out
and
clc
pop
frstor
and
in
pushl
pop
dec
and
insl
sahf
or
fistps
xor
pop
hlt
xchg
ss
outsb
in
test
stc
fsubrs
pop
lds
sbb
iret
cmp
cmc
add
fdivr
not
add
xor
insl
cmpb
data16
mov
outsb
ljmp
into
cmc
lret
gs
mov
fisubs
test
mov
fmull
int
sbb
mov
push
je
sbb
add
push
inc
stc
data16
arpl
cmp
icebp
adc
jmp
jle
dec
and
repz
and
insl
jl
mov
es
push
lahf
xor
cwtl
cs
ds
int
xor
stc
shrl
out
and
jp
in
and
and
fnstsw
in
sbb
sbb
and
push
stc
in
fstp
rcrb
xlat
cmp
std
jle
sbb
stc
xor
xchg
pop
mov
pop
lea
mov
sbb
popf
sti
and
mov
out
aas
jge
cli
in
lods
outsb
dec
jge
sbb
push
mov
jns
lock
lds
mov
lret
pop
ret
jmp
mov
loop
inc
mov
ss
and
mov
push
dec
jle
sbb
mov
ss
inc
cmp
in
and
lcall
xor
xor
adc
pop
pop
jnp
ss
sti
jne
xor
xor
imul
and
xor
add
jbe
cmp
mov
mov
fcompl
cmc
hlt
mov
adc
test
inc
jg
cli
inc
cld
loope
xchg
hlt
push
or
mov
mov
inc
and
aam
and
mulb
pop
push
ss
je
mov
adc
ss
repnz
push
sarl
cmp
cmp
jge
shrb
or
cmc
pusha
mov
xchg
ss
add
cmp
xor
addr16
sub
or
jbe
lret
outsb
lahf
insl
je
in
insl
mov
repz
movsl
andl
ds
mov
pop
jmp
mov
fwait
jp
and
fstpl
outsl
dec
mov
mov
mov
pop
push
enter
pop
pop
xchg
pop
jae
and
fisubl
and
in
testb
popf
sbb
aam
and
mov
xor
sub
inc
xchg
and
push
lock
push
mov
outsl
inc
cwtl
fcompl
ficomps
cltd
insl
cmpl
mov
cmc
push
ljmp
fdivl
mov
repz
fisttpll
cld
and
into
sbb
sbb
clc
aas
dec
jle
fistl
cwtl
outsb
rorl
dec
mov
xchg
push
mov
jns
pop
dec
cmc
push
pusha
ja
jo
cmc
xor
ja
and
or
ja
dec
cmc
sub
ja
dec
dec
cmc
dec
pop
and
out
jg
mov
add
stc
pop
jo
aaa
es
fstp
nop
das
jp
out
and
push
mov
nop
ret
fstl
jae
xchg
pop
into
cli
aaa
sub
fstl
out
xor
pop
sbb
pop
out
scas
je
in
sbb
stc
sbbb
xor
stc
add
sbb
xchg
subl
xor
incb
ss
sbb
mov
jge
cmp
jne
and
cld
stc
stos
dec
sub
lods
or
mov
ret
out
cltd
pushf
push
dec
cmpsb
push
jp
push
push
mov
xchg
ss
sub
mov
outsl
fistpll
mov
insw
and
push
stc
pop
nop
outsl
loope
pop
dec
inc
or
cmc
in
movsl
bound
mov
sub
push
pop
jbe
inc
cmc
jbe
mov
pop
adc
sbbl
push
mov
ds
test
jne
pop
lea
pop
xor
in
jo
lods
fsubr
lds
fcomip
test
popf
insw
add
out
lods
imul
sbb
jmp
jne
cmc
arpl
mov
insl
out
ja
sub
data16
push
and
outsl
push
sbb
hlt
xor
cmp
cmc
bound
dec
fcomps
pop
pop
fildl
mov
mov
mov
lods
aaa
sub
frstor
lods
adc
rcrl
test
out
pushf
sbb
aaa
popf
sbb
rolb
push
adc
jl
adc
mov
push
insl
mov
jle
sbb
stc
fstpl
insl
or
and
jb
push
jl
jb
pusha
pop
test
cs
jp
in
fnstcw
jl
push
and
lods
movsl
stc
or
jbe
pop
adc
dec
sub
sbbl
sub
pusha
repnz
mov
repz
ffreep
dec
sub
jmp
push
int
push
dec
lret
popf
aad
and
pop
or
add
dec
lods
cwtl
ja
cld
leave
adc
sarb
adc
dec
js
xchg
add
fcoms
iret
add
fisttpll
test
jo
dec
aas
insl
adcl
sub
fcmovnbe
cmp
out
cmp
cmp
mov
jb
popf
push
out
mov
es
pop
loope
insl
ret
adc
mov
sbb
lahf
rcr
out
orl
or
popf
fstpl
and
cmp
push
sbbb
fbstp
lcall
push
cmc
jge
fsubrl
in
addb
mov
in
inc
sbb
inc
les
shlb
loope
jl
inc
fistpll
negb
js
cmpsb
lds
je
rcrb
mov
add
out
jge
repz
mov
pop
xchg
and
xorb
lahf
dec
jmp
in
in
aad
movsl
or
cmp
das
and
and
dec
std
or
jge
mov
jle
add
gs
sbb
pushf
mov
push
xor
xor
fucomp
cwtl
sbb
lds
mov
loopne
fsub
sub
out
dec
or
jge
aas
mov
stc
dec
pop
mov
stc
insb
add
or
xchg
fiadds
rorl
jle
push
inc
mov
cwtl
jge
sbb
mov
movsl
mov
in
and
ds
sub
sub
fmull
and
inc
movsl
mov
cmp
push
lods
lret
or
insl
mov
mov
mov
sbb
cmp
xchg
mov
nop
dec
xlat
push
jl
add
cmpsb
jb
mov
pop
icebp
cmpl
dec
pop
popf
inc
dec
inc
push
out
outsb
inc
xchg
loope
cmc
mov
insl
ds
mov
jae
loope
out
movsl
fcmovnu
imul
fstpt
jns
sti
cmp
inc
cmp
add
cld
sbb
mov
sbb
test
jge
mov
mov
mov
pusha
negb
push
adc
jae
cmp
stos
test
mov
jbe
bound
loopne
sbb
adc
sbb
jge
lds
xchg
push
jne
xchg
ss
cwtl
jge
shlb
popf
sub
repnz
or
pop
adc
ds
dec
adc
or
inc
out
push
jno
sahf
jl
pop
repz
inc
ror
cmp
ja
mov
mov
mov
sarb
inc
xchg
mov
movsb
insl
lret
movsl
hlt
shl
inc
pop
test
cmp
push
repz
bound
test
dec
adc
daa
fmul
dec
jp
test
loop
popf
sahf
les
jne
fdivl
pushf
stos
lahf
mov
loop
or
test
xchg
or
and
sahf
outsb
mov
mov
aas
xchg
das
pop
jo
and
popf
mov
inc
mov
lret
pop
xor
push
ljmp
mov
pop
lods
jecxz
add
or
cmc
or
push
jbe
mov
outsb
pushl
pop
jae
xor
int
mov
std
lock
jp,pt
add
sarl
xchg
lock
fst
xor
popf
mov
xchg
aas
xchg
or
inc
outsl
or
jae
and
mov
inc
jae
outsb
add
in
sbb
add
je
jo
in
jae
outsb
push
jle
push
cmp
test
inc
loop
sub
jae
pop
outsb
jg
pusha
pop
jb
jae
outsb
fimuls
pop
jecxz,pt
and
test
divl
outsb
jge
xor
outsb
pop
icebp
lret
fsubl
jns
fdivl
test
mov
loope
enter
sub
std
pop
mov
mov
inc
push
xchg
outsb
loope
or
pop
outsb
pop
stos
push
jp
dec
pop
mov
jne
sub
ds
outsl
iret
outsb
ret
xor
nop
nop
xchg
mov
cmp
popl
outsb
jmp
sub
gs
fdivrp
xor
mov
pop
pop
mov
lods
sbb
or
dec
das
push
aam
jo
mov
mov
mov
les
outsb
fbstp
rcl
jo
and
push
sahf
dec
out
add
outsl
jmp
dec
add
das
je
outsb
cwtl
dec
mov
mov
inc
scas
adc
fwait
and
adc
outsb
pusha
movsb
insl
jbe
xchg
jmp
adcl
fldl
es
scas
outsb
cmc
jae
sbb
pop
adc
dec
ret
movsb
push
push
push
xor
sbb
jle
cs
fsubl
ds
cmpsl
lods
fldl
movsl
cmp
cli
push
push
push
add
pop
jle
mov
clc
fdivrs
in
jle
add
bound
test
push
inc
mov
adc
divb
push
outsb
and
loop
insb
push
jns
stos
out
in
jne
insw
sub
stos
push
xchg
dec
ret
push
fsts
stc
pop
leave
mov
andl
test
data16
mov
push
pop
es
pusha
xchg
cmp
dec
jge
sub
xor
mov
cs
cmp
ds
insl
xchg
test
ret
loop
popf
int
cmp
in
hlt
adc
mov
push
mov
leave
loop
cmc
pop
mov
fcomip
cltd
pushf
fstl
inc
fdivrl
push
sub
or
xor
adc
in
jno
pop
adc
push
cmc
sub
inc
inc
pop
fsub
lret
sarb
call
xchg
mov
lock
cwtl
ret
pop
xor
loopne
and
adc
fwait
shrb
pop
pop
fstpl
test
in
pop
fs
cmp
mov
nop
loop
popf
test
mov
pushf
enter
rcr
cmp
shll
fdivr
js
jle
jo
add
adc
bound
js
pop
mov
jo
call
dec
pop
jb
imul
xlat
cmp
iret
loop
dec
rorb
sub
jmp
faddl
mull
add
movsb
pop
xchg
pop
adc
and
mov
sub
int3
adc
mov
xlat
loop
inc
loopne
mov
dec
cmp
lods
iret
xchg
xchg
rcrl
loop
dec
ss
pop
popa
lahf
popa
shrb
test
lahf
mov
cmp
pop
mov
fsubr
and
push
sti
jns
out
insl
shr
in
cs
pop
popf
push
cmpsl
adc
fsubrl
add
fwait
cld
not
push
and
popf
adc
push
mov
clc
push
shr
dec
pop
fstpl
and
and
test
sahf
or
je
rcr
sub
ljmp
loopne
js
rcr
sbb
push
lret
add
sbb
cmpsl
and
xor
and
inc
jmp
pop
bound
decl
sahf
stos
imul
jp
xchg
cmpsl
dec
shll
repz
pop
or
jno
mov
scas
int
or
nop
std
adc
mov
popf
xchg
jg
adc
pop
rcrb
enter
jae
idivb
jo
jnp
sbb
jae
cmp
add
xor
mov
pop
int
and
loope
jp
jp
sub
cmp
jbe
xchg
adc
mov
or
pop
ds
cmp
adc
inc
addr16
andl
loope
popf
fnsave
adcl
daa
sub
cltd
pop
fmul
push
cmp
lcall
into
adcl
inc
sub
sub
pop
call
lahf
pusha
add
loop
mov
pop
out
pop
xchg
sub
push
sbb
pushf
xlat
mov
mov
test
pop
shll
xchg
iret
mov
push
jle
mov
mov
push
mov
pop
and
into
fdiv
das
jbe
out
push
fistps
jbe
pop
addr16
fnsave
inc
inc
popf
pop
pop
lahf
pop
sbbb
das
xchg
xchg
pop
fcompl
popf
sbb
punpcklwd
push
ffree
pushf
imulb
push
scas
mov
fistpl
outsb
pushf
xchg
movd
daa
iret
pop
aaa
shlb
mov
pop
xchg
push
sbb
loop
ret
jae
mulb
ja
ds
scas
loop
pushf
cmpsb
sahf
xchg
mov
sbbl
jbe
push
fistpl
dec
xor
gs
sbb
out
cli
mov
gs
cmp
mov
adc
sbb
sub
mov
dec
out
jbe
jo
add
jnp
cmp
mov
repnz
pop
pop
jno
dec
insl
popf
sub
dec
dec
xor
cmc
cli
loopne
push
cmp
dec
scas
pop
or
les
cmp
xchg
inc
imul
ret
fsubrl
insb
insb
xor
pop
mov
sub
sbb
add
pop
cmp
push
int
movsl
lods
insb
and
fwait
pop
mov
jmp
rcrl
inc
sub
aad
movsl
dec
int
and
repz
cmp
mov
es
popf
lds
gs
cli
mov
mov
lds
jle
push
add
mov
insb
stos
dec
out
cmp
jle
popf
jne
xchg
test
call
ja
adc
adc
add
and
lcall
jns
ret
sub
jbe
fsubl
fs
addr16
mov
fstl
jb
push
cmc
sbb
pop
pop
clc
and
leave
outsl
push
xchg
aaa
adc
in
xor
xchg
and
push
lret
pop
arpl
pslld
sbb
mov
popa
sbb
pushf
lret
pop
pop
pop
cli
cmc
and
add
scas
or
arpl
cltd
xchg
sbb
out
mov
pop
mov
jp
flds
push
fdivrs
pop
jecxz
dec
jne
jne
cmc
pop
jmp
imul
mov
and
pop
or
bound
pop
jge
fnstcw
dec
xchg
dec
add
pop
bound
cmp
jae
out
add
and
insb
push
jg
jns
out
in
rorl
xchg
shlb
jo
cmp
push
ja
out
nop
cmp
pop
ret
je
dec
insl
mov
mov
mov
pop
cmp
fisttps
push
and
pop
gs
pop
in
je
js
clc
int3
mov
and
gs
in
gs
int
ficoms
push
scas
sbb
ficomps
filds
daa
and
aad
mov
jle
popa
fs
sbb
cmc
jno
pusha
lea
repz
mov
rolb
mov
mov
call
or
sub
jne
js
popf
in
ffree
enter
out
icebp
adc
fistps
mov
and
out
test
bound
jns
lds
mov
cmpb
mov
fcompl
mov
fsubs
addr16
jp
adc
sbb
mov
adc
fists
jae
inc
js
cmp
je,pt
loop
cmpb
mov
imulb
pop
stos
nop
jle
loopne
sbb
outsb
loope
das
pop
lret
loop
mov
fdivrs
and
leave
aaa
xchg
xchg
jp
outsl
sub
fcoms
fbstp
ud0
into
ret
dec
pop
es
call
clc
out
push
mov
push
cmp
xchg
pop
js
add
ss
dec
bound
adc
js
sbb
loop
jae
sbb
hlt
ja
daa
cli
inc
sbb
aaa
loop
inc
cmp
pop
outsb
jb
int
pop
aas
das
jb
int
outsl
cmpsb
pop
popf
pop
int
daa
testb
ficomps
mov
mov
push
sahf
cmpsb
ja
push
ja
int
mov
scas
jb
int
push
mov
pushf
and
xchg
lods
push
subl
adcb
jae
adc
fwait
inc
push
lods
pop
int3
ret
push
test
pop
insb
adc
mov
jo
jl
push
es
xor
or
cmc
jbe
jle
push
ret
in
jne
pop
pop
cld
push
inc
jbe
cmpl
fsubl
movsb
push
repz
fwait
jo
xor
cli
pop
js
je
xchg
push
adc
and
mov
fs
xchg
fwait
add
mov
lds
les
popa
fucom
lret
test
push
sub
fwait
repz
shl
sub
cmc
sahf
mov
adc
and
cli
bound
insl
mov
lock
ss
inc
pop
push
xor
sahf
mov
addr16
push
mov
fists
inc
arpl
fildll
cmpsb
dec
jl
out
test
mov
outsb
pop
fistpll
jbe
outsl
xchg
mov
fdivl
and
movsl
orb
stc
pop
mov
push
outsb
pushf
adcb
jle
addr16
fucom
mov
pop
xor
stc
pop
out
ss
cmc
jle
sbb
out
add
jmp
lret
jle
out
outsb
mov
dec
inc
push
fisubrs
sarl
jle
xchg
icebp
cwtl
and
pushf
jo
mov
sbb
mov
mov
icebp
sarb
sub
pop
jmp
movsb
xchg
outsb
mov
add
jge
outsb
or
push
std
and
inc
sbb
mov
sbb
mov
xor
cld
xor
sahf
dec
push
cmp
in
jle
inc
inc
cmp
sti
mov
ss
xor
popf
xchg
add
test
ja
pop
test
pop
xchg
jg
sub
cmpsb
xchg
bound
fisubrs
outsb
fisttpll
jle
out
outsl
mov
and
addr16
mov
dec
lcall
mov
aas
mov
das
adc
out
outsb
push
mov
fidivrs
adc
push
sub
addr16
pop
push
jg
fucomp
mov
js
aas
inc
dec
xchg
sbb
pop
inc
lods
out
stc
sbb
or
jb
xor
add
pop
call
push
mov
ljmp
lcall
mov
sahf
or
in
pop
cmp
mov
or
pop
xor
into
mov
out
mov
push
stos
and
jmp
jle
ss
cld
jle
out
sbb
nop
pop
cmp
xchg
adc
outsb
mov
xor
gs
daa
sub
lods
shlb
sahf
in
pop
clc
xor
lock
push
mov
and
jne
add
jle
pop
mov
add
outsb
cmp
cmp
pop
push
pop
jle
stos
rcll
jne
ss
sub
cmp
xorb
jp
dec
fsubr
pop
aas
test
and
xchg
lods
mov
jle
push
inc
addr16
sahf
mov
fadd
cmp
mov
pop
xor
pop
push
xor
jnp
pop
notb
out
dec
jle
pop
xor
das
outsb
xor
dec
push
lret
jmp
cli
cmpsl
loopne
sub
outsb
mov
xor
mov
outsb
push
inc
ficompl
or
daa
dec
jle
pop
xor
mov
push
pop
sbb
pop
ljmp
outsb
lock
xchg
mov
rcr
jb
mov
push
sub
lahf
mov
sub
imul
pop
imul
enter
sub
inc
jl
or
push
jg
inc
addb
cmp
pop
enter
fldcw
mov
or
sub
ja
outsl
sub
xchg
rorb
aaa
ficompl
sbb
mov
cld
jecxz
jmp
popa
lcall
add
pop
and
cmp
mov
xchg
fwait
xor
jle
pop
fidivl
ds
outsl
cmpsl
xchg
std
mov
pop
sbb
xor
cmp
in
mov
jmp
pop
stos
xor
add
sub
jns
mov
or
push
aam
loop
fs
jle
cmpsb
out
xor
out
xor
xor
fwait
aam
bound
mov
out
loopne
cmpsb
in
fstps
outsb
std
jle
pop
jns
mov
repz
dec
adc
fbstp
cmpsl
pop
leave
jle
stos
and
push
and
in
jmp
std
xor
das
sbb
inc
adc
imul
rcrl
xchg
cmp
mov
pop
call
xchg
repz
mov
push
jge
add
testl
jle
and
jle
sbb
ds
jmp
and
movaps
mov
pop
pop
fidivrs
jmp
xchg
mov
mov
fadds
cli
mov
in
psrad
daa
pop
movsb
pop
mov
ret
das
cmpsl
pop
shl
mov
out
ss
jle
mov
pop
sbbl
orl
mov
addr16
or
hlt
xchg
push
and
fadd
push
aam
ja
pop
add
push
hlt
pop
fsubrs
jecxz,pt
icebp
imul
sar
sbb
xor
jg
jg
cmpsl
add
clc
incb
xor
bound
sahf
fstl
lahf
inc
mov
inc
pop
sub
rorl
and
out
out
add
xchg
inc
push
ss
jle
or
push
jp
jle
pop
in
lods
jecxz
push
add
ss
mov
imul
mov
arpl
cmpsb
push
fwait
cli
sbb
insl
pop
outsl
sahf
ficomps
add
scas
xchg
pop
movsl
sbb
push
sub
shlb
add
ret
cmp
inc
out
cmp
add
xchg
mov
cmpsl
jle
adc
sbb
pop
dec
dec
mov
mov
fnsave
incb
fnsave
mov
mov
sbbl
push
rcrl
push
sbb
mov
mov
ss
mov
sbb
xlat
jmp
sbb
pop
movsl
jo
and
xorb
push
and
cmp
xlat
and
iret
dec
xchg
jle
ds
out
push
sbb
mov
pop
sub
mov
ss
or
jge
jge
imul
mov
into
inc
sti
mov
mov
push
inc
sub
sub
cmp
inc
dec
xchg
sahf
gs
pop
mov
sbb
sahf
fnstsw
lea
push
pusha
repnz
bound
mov
pop
jle
inc
mov
fstpl
mov
frstor
and
and
cmp
je
insl
mov
adc
aaa
mov
pop
jnp
push
insb
insb
bound
insb
mov
pop
jmp
jle
or
pop
out
imul
pop
xchg
xor
lahf
jnp
jp
push
pop
mov
push
enter
rcl
jle
ljmp
out
in
ret
fisttpll
insb
movsl
insl
inc
pop
iret
lea
mov
jle
jge
push
xchg
dec
add
push
ss
scas
andl
push
gs
jl
test
mov
icebp
sub
out
outsl
jl
xorl
fcompl
sub
fdivrs
push
adc
fidivl
or
cmp
pop
mov
push
scas
outsl
jmp
sahf
cmp
dec
pop
cmp
enter
popf
nop
sbbl
adc
cmp
sbb
inc
jle
xlat
push
pop
fcompl
loop
or
mov
sub
ss
push
je
and
sub
fnsave
jle
mov
or
jle
std
in
lods
ss
cmp
jne
test
add
ss
jg
cmp
jne
test
xor
ss
xbegin
or
xor
jl
or
cli
insb
pop
and
popw
and
mov
js
pop
imul
add
lock
or
add
pop
jae
pop
jnp
pop
and
cmp
jle
jo
ljmp
push
mov
jle
push
sarl
imul
loope
addr16
or
pushl
jle
pop
icebp
imul
imul
cmp
jge
push
or
ds
xor
int3
pop
popf
faddl
xor
repz
jae
cmp
ss
out
pushf
mov
pop
aaa
data16
add
cmp
sahf
out
std
push
aas
cmpsb
mov
outsb
sahf
lock
xchg
sti
fstpl
rclb
clc
ret
fisttpll
mov
test
push
mov
cmp
leave
jle
pusha
bnd
add
xchg
outsb
cmpb
or
xor
dec
sbb
popa
popf
lea
cmp
pop
jmp
incl
outsb
xchg
mov
lret
icebp
fdivrl
pop
jge
loopne
test
or
adcb
ss
pop
fdivl
add
fists
lods
jg
pop
xchg
popf
push
clc
pop
popl
ds
jno
cmc
xchg
sbb
outsb
jne
lahf
jb
inc
and
sub
push
cmp
dec
jecxz
inc
rep
fsubr
ss
jle
push
stos
cmp
add
pop
imul
outsl
shlb
push
in
fstpl
jle
inc
ds
in
loope
cmp
sub
push
iret
cmp
ret
pop
ficoms
popf
lods
add
mov
shll
lods
insl
cmp
or
insl
sbb
int3
in
hlt
and
jle
push
inc
pushf
ss
mov
in
mov
in
inc
jmp
xchg
or
leave
jg
jle
xchg
fstps
inc
pop
shl
and
sub
pop
mov
stc
pop
xor
sahf
scas
ds
fwait
pusha
mov
push
insl
sbb
sbb
andb
sbb
loope
add
fdiv
jle
mov
dec
cmp
and
nop
jae
jnp
and
fisttpll
push
jle
jle
insb
jo
mov
je
out
xor
adc
and
insl
adc
sbb
lods
push
jge
mov
ss
jl
insl
mov
adc
out
pop
push
xor
add
fsubr
in
fwait
jge
cld
jp
or
mov
ds
stc
mov
xor
fistpl
test
mov
sahf
sbb
out
jmp
lret
lea
pop
push
sbbl
cmp
in
jns
jle
insb
jle
test
insl
jle
xor
cmp
jge
movsb
mov
mov
fisttpll
mov
push
mov
xor
je
fidivl
ljmp
adcb
push
push
cmp
ds
jge
lods
sub
jle
std
mov
sub
sbb
out
jle
sbb
stc
jne
test
ds
or
out
es
gs
pop
pop
hlt
jl
xchg
out
pushf
add
insl
les
cmp
test
pop
or
lcall
sub
cmp
fistl
xchg
repnz
scas
lahf
inc
mov
insl
adc
in
push
push
sbbb
fs
pop
add
xchg
insl
adc
add
loop
fstpt
in
call
jle
ret
push
cmp
push
mov
jne
mov
push
pop
add
push
cmp
jle
mov
jge
push
jecxz
std
insl
sahf
xlat
mov
inc
or
adc
loopne
lods
mov
adc
pop
inc
jl
jne
push
and
mull
and
and
jle
push
jle
imul
testb
cmp
insl
pop
ret
fbld
and
es
cmpb
push
out
pop
cltd
ss
pop
sarb
aaa
data16
sub
rol
pop
fdivp
sarl
lods
jp
pop
mov
je
pop
mov
jl
adc
fucom
enter
jne
fstpl
nop
cmp
jge
or
sbb
jle
ljmp
ficomps
jb
and
push
xor
jle
sbb
sbb
ljmp
mov
add
insl
push
fwait
test
push
ds
sbb
aam
fmull
push
ds
stc
add
xchg
ret
lods
out
es
je
cmpl
ds
inc
out
push
lret
ss
pop
out
jbe
cmp
addr16
outsl
imul
sub
sbb
aaa
push
and
sbb
jl
cmc
mov
push
leave
cmp
push
test
pop
les
jae
pop
mov
addl
jp
stos
ds
jg
and
xor
jl,pt
enter
jb
fnsave
fldl
sub
fnsave
and
lods
int3
dec
ds
xlat
pop
iret
jecxz
inc
popf
popf
sbb
mov
sbb
push
pop
cmp
outsb
test
es
dec
or
sub
cmp
ds
out
ja
add
outsb
cld
pop
movsb
sbb
mov
les
xchg
insb
fisttpll
sbb
fdivrl
sub
outsb
cmp
jecxz
xor
decb
pop
mov
add
pop
jmp
std
and
xchg
lock
lods
add
jge
out
push
frstor
xchg
push
or
push
or
ja
je
jle
jl
sbb
cmp
dec
inc
outsb
inc
lret
lods
jle
jl,pt
lock
jo
dec
jge
jle
jnp
enter
loope
ret
push
loop
sbb
popf
sub
xor
insb
jle
ds
js
mov
popf
adc
ret
gs
jne
ret
jge
push
adc
in
xor
aam
loop
fsubl
fistps
in
xor
ds
es
sbb
pushf
pop
pop
lods
out
add
lret
test
insl
and
xor
inc
in
lret
jge
cmp
ss
mov
mov
mov
mov
push
inc
pop
jecxz
decl
pop
loope
in
xchg
hlt
ss
push
add
arpl
je
insl
jle
xchg
fstl
sub
ds
stc
sbb
insl
cmp
pop
jge
jnp
jle
xchg
shll
inc
jle
cmp
jbe
sbb
sub
mov
cmpb
sub
jle
mov
jl
mov
lods
pop
mov
cmp
pop
lret
ds
loope
test
hlt
adc
std
sbb
ds
sbb
imul
lret
ds
mov
jbe
testl
xor
inc
out
jle
lret
repz
sti
pop
mov
jmp
pop
aam
pop
sub
std
cmpsl
sbb
loop
add
pop
fstps
outsb
out
frstor
loope
add
push
in
jge
movsb
and
in
push
push
jno
negb
cmp
sbb
cmpl
jle
and
cmp
jle
ret
mov
push
cwtl
ret
mov
jnp
outsb
in
mov
push
shlb
dec
loope
pop
in
call
pop
imul
adc
and
xchg
ss
dec
mov
pop
and
xorb
aam
jae
jne
test
jbe
inc
xchg
xor
cmp
or
in
jecxz
add
push
xchg
cld
ds
cmp
cmp
dec
pop
pop
insb
cmp
sbbb
sub
jl,pt
jecxz
xchg
and
loope
mov
out
jne
cmpsl
fadds
xor
sub
pop
and
mov
push
sub
pop
and
xorb
aam
push
add
mov
out
pushf
mov
test
push
loope
and
ret
out
xor
add
test
or
xchg
pop
mov
nop
mov
mov
lret
mov
jl
xorb
sub
adc
sbb
jae
inc
fcompl
int3
pop
fldenv
outsl
jmp
and
mov
add
jl,pt
je
test
push
and
ss
in
inc
loope
lret
ds
jle
sbb
stc
fwait
and
xchg
pop
xor
pop
repnz
jnp
sahf
lcall
repz
xor
idivl
stc
sub
rcrb
xchg
imul
mov
pop
leave
loope
je
adc
imulb
xorb
dec
insl
xorl
sub
inc
cmp
in
and
dec
adc
or
mov
ds
pop
jle
leave
pop
mov
jle
jne
test
jge
cmp
ficoms
mov
outsb
xor
int
cmp
dec
dec
dec
pop
inc
fcompp
mov
outsb
inc
jmp
imul
outsb
jl
push
sbb
mov
cmp
lods
jecxz
popf
mov
mov
push
mov
outsl
mov
movsl
xor
call
pop
adc
popf
int
and
xor
jle
mov
add
mov
pop
shll
mov
sbbl
and
pop
inc
mov
jb
jecxz
add
ja
mov
negb
mov
xorl
insl
lret
jge,pt
jmp
pop
jb
and
imulb
and
lods
cld
pop
movsb
cmp
loope
fs
test
pop
inc
pop
mov
ret
iret
je
xorb
out
adcl
lods
sbbb
into
or
daa
pop
fwait
incl
int
or
jmp
add
hlt
dec
in
add
push
pop
loope
ret
sbb
sbbb
lea
and
ds
adc
fadds
call
je
out
outsl
jecxz,pt
mov
inc
int
push
loope
pop
push
test
mov
jl
or
mov
jl
cmp
fsubl
gs
pop
pop
add
jl
pushf
aaa
xchg
ss
ds
pop
pop
jl
jl
outsb
sbb
sub
cmc
cmp
jecxz
repz
js
mov
mov
mov
stos
xor
pop
jecxz
in
sbb
xorl
pushf
popf
aad
jge
fsts
fcomi
sub
inc
cltd
stc
fsubrl
jge
and
ret
movsl
jno
sbb
gs
loope
jl
xor
push
sbb
call
clc
xor
fnsave
lret
jb
gs
cmp
jne
shrl
lods
jge
lret
jl
sbb
jg
int3
loope
hlt
jl
cld
cmp
and
mov
je
test
mov
and
in
fstp
sub
lods
cmp
jecxz
jbe
dec
pop
sub
scas
add
fwait
xchg
mov
sub
fst
dec
insl
ss
push
cmp
sub
xchg
int3
repnz
jle
jnp
jle
in
dec
jg,pt
addl
jl,pt
inc
inc
sahf
rorb
repz
cmp
mov
inc
mov
insl
mov
xorb
sub
or
xor
aam
jle
out
push
hlt
and
ss
cld
ds
outsb
les
push
push
out
es
and
add
push
and
push
xor
jae
inc
out
jae
lret
cld
pop
pop
cmpsb
ficomps
xor
sahf
stos
aaa
cli
push
scas
mov
cltd
pushf
push
lods
or
pop
add
jle
loopne
fnstcw
rcll
insl
or
fwait
aad
hlt
push
adc
faddp
cld
push
in
imul
aas
ds
addl
ret
cmc
inc
sbb
sub
shr
xor
fidivl
fistpll
jo
xor
jne
jle
call
adc
out
pop
push
sbb
mov
jle
pop
push
int3
mov
push
hlt
sub
in
inc
sub
cld
and
movsb
lods
pushf
pop
lods
cmp
mov
sub
pop
and
cmp
jnp
ss
push
cmp
ss
stc
pop
stos
push
and
add
jmp
inc
or
jg
adc
sub
and
push
or
jae
jmp
cmc
add
cmp
mov
shl
xchg
outsb
push
insl
jns
outsb
jno
jle
jl
fs
je
and
cmp
ret
xor
inc
ljmp
lods
finit
mov
ds
inc
mov
insl
jg
test
push
adc
pusha
push
popf
sbb
xchg
pop
xor
mov
outsb
hlt
and
xchg
mov
movsb
xor
ds
push
les
mov
mov
jl
xor
xchg
add
mov
pop
daa
out
add
ret
pop
ds
sbb
pop
pop
and
mov
lods
add
push
adc
testb
rcrl
mov
jl
cltd
mov
and
mov
leave
in
jp
in
push
sbb
imul
push
outsb
adc
jl
test
dec
dec
mov
aam
ja
mov
jle
mov
pop
cltd
pop
cmp
jb
jle
std
jge
es
rcrl
cmp
int3
cmp
mov
outsb
cld
and
lods
lods
pop
testb
int
loope
jl
and
xor
in
pop
cmpsl
and
icebp
lods
pop
jecxz
mov
lods
in
xor
sbb
test
pop
lahf
pop
sbbb
sub
and
ds
push
fnstcw
push
jmp
sbb
cmp
push
leave
and
pop
cld
je
out
xor
cmpl
pop
clc
mov
lods
lods
pop
mov
sbb
enter
test
ds
in
loope
sub
add
adc
cld
shll
cmp
push
je
ds
and
inc
pop
out
pop
push
pushf
xor
pop
and
jle
mov
pop
fwait
add
fwait
pop
jns
jb,pn
mov
insl
sbb
and
gs
push
insl
jmp
int3
jl,pt
out
push
cltd
jge
mov
add
in
jbe
add
ds
jns
and
push
adc
jecxz,pt
mov
les
jl
sahf
cmp
mov
mov
add
jnp
mov
loop
xor
test
adc
enter
out
outsb
xor
sbbb
pop
faddl
push
add
movsl
xchg
push
mov
ss
mov
fldl
loop
outsb
insl
pop
or
jecxz
lods
mov
out
lcall
jp
repz
std
dec
jecxz
mov
pop
movsl
sbb
adc
subb
jne
inc
sbb
jg
gs
ds
fisttpll
and
mov
push
xor
push
push
cld
jle
jl
pushf
jle
lods
jae
push
movsb
pop
aas
lea
stos
pop
nop
mov
ss
mov
addb
dec
ss
push
xor
and
or
sbb
cmp
std
hlt
sarb
es
and
pop
pop
pushf
pop
add
imul
ja
insb
out
jbe
out
xchg
loop
fs
xor
and
lcall
inc
repnz
adc
pop
mov
js
jl
loope
pop
xchg
or
stc
sub
pop
cmp
inc
fnstcw
shr
jmp
jge
sbb
jl
push
mov
shll
mov
sahf
mov
pop
mov
push
jl
xchg
popf
ficomps
mov
push
test
test
test
outsb
adc
xor
push
and
jo
cmp
std
fsubl
gs
pop
roll
lods
xchg
pop
movsb
cmp
cmc
lods
pop
pop
leave
and
xor
pop
adc
sahf
push
jge
dec
arpl
jle
pop
jno
dec
lahf
jle
pop
not
pop
cmc
jle
shl
ds
je
pushf
push
ds
adcb
adc
and
mov
push
fst
jne
jmp
adc
cltd
sbb
mov
cmp
jns
outsb
jno
jbe
jle
lock
jle
xchg
sub
mov
sbbb
pop
ds
and
cwtl
lods
test
ja
or
sbb
sbb
in
fstp
int3
mov
mov
add
push
imul
out
outsb
enter
dec
fs
cmp
mov
sbb
xchg
push
test
cmp
aaa
nop
pop
sahf
out
jmp
in
mov
or
lea
insb
sub
jl
inc
xor
ja
jne
push
stc
sbb
icebp
outsl
cltd
and
sub
int3
ffree
ret
in
xor
loopne
fidivrs
popf
mov
ds
fiadds
push
cmp
gs
sub
aas
in
insl
test
popa
jge
lea
cmp
insl
xor
xchg
jg
hlt
pop
in
or
push
movsb
int3
std
push
pushf
mov
outsl
jae
push
out
pop
push
dec
imulb
pop
fiadds
rorb
push
xor
cmp
lahf
outsl
cmpsb
out
pop
cmp
stc
loope
test
jecxz
cmp
sbb
cmp
icebp
imul
idivl
xchg
and
hlt
leave
aam
ror
cmpb
pop
loopne
rolb
pop
lret
call
dec
mov
ret
lods
jo
mov
gs
inc
ss
fwait
cmp
jge,pt
adc
mov
xor
cwtl
push
push
aam
rcr
ds
hlt
mov
cld
mov
add
aaa
pop
out
push
cltd
mov
jge
add
push
lcall
pop
and
xchg
jle
sub
in
testl
loop
gs
xchg
push
pop
lahf
sbb
divl
scas
and
addb
sarl
into
pop
push
out
ja
mov
jp
scas
push
jle
pop
push
jle
or
inc
int3
add
std
fcompl
in
cwtl
push
add
mov
jle
pop
les
pop
sbb
sub
jle
and
daa
cwtl
mov
imul
adc
xchg
out
imul
dec
sub
lock
sbb
fcompl
in
mov
pop
xchg
add
pushf
bound
mov
mov
scas
inc
mov
bound
sar
pop
das
loopne
push
push
dec
xor
ss
sarl
ret
jge
pop
hlt
pop
shr
push
insl
cld
mov
jg
pop
or
outsb
out
decb
ljmp
pop
imull
fidivrs
rclb
icebp
push
and
fdivrl
jb
hlt
loopne
push
add
outsb
cld
clc
pop
std
sbb
sub
xor
fstps
sahf
adc
jle
pop
addr16
push
add
jle
mov
pop
int3
shlb
push
in
divb
call
push
pop
push
notl
jo
dec
movd
push
lock
or
andl
push
push
cwtl
push
dec
nop
push
sbb
out
pop
push
adcb
out
xor
inc
js
fiaddl
mov
in
inc
repnz
pxor
cli
scas
test
dec
sub
inc
sbb
xorb
out
pop
adc
pop
and
pop
or
outsb
mov
push
or
xchg
and
push
cmpb
insb
mov
xchg
mov
scas
aas
jmp
mov
inc
scas
inc
dec
ss
sbb
pop
loopne
cmpsb
fmulp
pop
stos
jl
mov
mov
pop
rolb
jne
sbb
insl
push
aam
ja
or
mov
sub
or
out
push
std
fstpl
sbb
mov
pop
mov
out
jle
dec
mov
and
push
inc
lahf
nop
pop
pop
cmp
scas
sbb
movsb
cmpl
fucomp
jge
adc
out
jae
and
or
cli
push
or
scas
jo
ja
push
mov
rcrb
push
leave
add
inc
sar
pop
add
mov
sarl
lods
jge
pop
or
out
adc
pop
mov
out
pop
roll
pop
pop
fmuls
or
mov
lods
pop
add
leave
cld
pop
xchg
mov
ss
push
xor
mov
pop
push
mov
jb
lahf
cmp
andl
jae
jnp
ss
repnz
outsb
outsl
push
and
pusha
jbe
js
jo
pop
mov
xorb
aad
jbe
sub
ds
daa
and
ficoml
gs
loop
repnz
and
add
stos
mov
ss
outsb
lret
sbb
stc
bound
fwait
notl
mov
int3
mov
sbb
add
jne
test
sbb
xchg
sti
cmp
pop
sarl
call
repz
mov
lods
cmp
pop
mov
pop
mov
push
xchg
leave
sbb
push
pop
push
cmpsl
push
push
lahf
jns
jno
mov
jbe
sbb
adc
sub
dec
pop
decl
push
mov
sbb
ss
aam
loopne
fcompl
and
jecxz
rcrb
sbbb
adc
dec
mov
cmc
cld
xchg
sbb
call
cmp
cmp
and
jne
pop
test
cmp
sub
daa
jle
adc
push
inc
add
ss
inc
xchg
jg
sub
jb
push
xchg
sub
aas
aas
insl
jne
test
mov
pop
push
xor
pop
dec
pop
sub
push
pop
sti
jnp
ss
xchg
mov
es
in
jecxz
jne
outsb
push
scas
das
mov
lcall
scas
xchg
xlat
push
jge
sti
test
lahf
movsb
pop
scas
sbb
cmpsl
outsb
mov
mov
pop
aaa
pop
cwtl
mov
cltd
jle
mov
pop
jno
push
push
stos
jmp
arpl
mov
jmp
repz
shlb
add
sbb
scas
pop
icebp
enter
pop
out
push
ljmp
and
mov
in
fsubs
mov
jle
pop
sti
cli
mov
scas
iret
jle
inc
aaa
push
xchg
into
in
xchg
mov
fwait
xchg
sbb
movsb
loopne
add
sbb
out
lcall
sbb
stos
out
mov
push
stos
jno
xchg
jg
inc
cmpsb
outsb
mov
cli
fucomp
pop
data16
and
std
pop
les
sub
das
addr16
jl
pop
and
xchg
push
fcomps
les
scas
sahf
sbb
dec
mov
add
pop
out
push
idivl
xor
mov
imul
arpl
jle
sub
inc
mov
stos
out
sbbl
notb
movb
dec
lea
jle
jecxz
jle
insl
pop
icebp
jns
inc
ficompl
dec
pandn
sbb
mov
xlat
pop
inc
sti
stc
pop
push
sahf
mov
fsubrp
outsb
inc
pop
pushf
sub
pop
mov
push
push
fsubp
xor
pop
push
scas
inc
jle
and
inc
lret
add
mov
scas
push
incb
pop
aas
mov
cmpsb
into
jle
out
sahf
and
and
rorl
pop
push
jle
pop
nop
jle
pop
jg
dec
jle
ret
mov
xor
mov
ficoms
fmul
push
mov
mov
lcall
or
pop
ss
jne
addl
or
sbb
inc
push
pop
dec
leave
pop
ret
inc
mov
pop
ljmp
xchg
sub
aas
dec
mov
push
jle
sbbb
int3
add
aaa
fs
fsubl
imulb
fsubrs
push
sub
outsl
addr16
sahf
mov
aaa
push
pop
pop
mov
int3
jle
fs
out
outsb
pop
push
fsubs
pop
add
into
aas
imul
pop
mov
inc
sarl
mov
pop
sbb
cmpb
xor
das
arpl
fsubp
inc
fisubs
pop
aaa
fs
mov
sbb
push
pop
icebp
cmpb
pop
enter
cmp
cltd
mov
jle
notl
sub
jg
or
push
pop
xorl
mov
or
out
shrb
sub
pop
xor
pop
pop
mov
pop
cmpsl
jecxz
daa
fbld
out
outsb
sahf
cmp
pop
pop
sub
std
cltd
mov
xchg
out
mov
pop
xchg
sbb
jg
cmp
cld
push
imul
outsb
jge
into
or
cli
mov
inc
in
out
jns
sub
pop
mov
jns
sbb
mov
mov
pop
mov
div
test
outsb
push
sarb
sbbl
sahf
mov
pop
mov
pop
jmp
add
pop
inc
mov
rol
push
adc
popf
arpl
pop
repnz
ds
scas
negl
test
sub
arpl
rcrl
sbb
pop
inc
and
mov
sub
pop
inc
sbbb
pop
pop
lods
sbbb
popf
inc
fdivrs
pop
xchg
lahf
lcall
into
scas
out
inc
push
lret
ja
lret
scas
ret
push
mov
push
adcl
pop
lods
outsl
pop
cmp
jbe
int3
cmpsl
jns
pop
into
in
mov
cld
fisubrs
push
icebp
imul
mov
add
ja
in
pop
xchg
mov
jge
bound
sbb
push
popa
cwtl
adc
lods
cmpsb
outsb
arpl
pop
dec
cltd
imul
movsl
pop
dec
mov
pop
xor
dec
pop
dec
sahf
cmp
push
sbb
cmp
pop
push
loope
adc
pop
mov
add
dec
dec
mov
orl
mov
lret
push
mov
lods
scas
fnsave
in
pop
push
jo
aaa
pop
lcall
negb
shll
call
addr16
test
frstor
pop
arpl
fildl
dec
jo
aaa
call
sub
sbb
cmp
and
and
subb
imul
cmpsb
cmp
mov
in
icebp
das
pushf
sahf
movb
ret
pop
lahf
and
cmp
jbe
add
mov
cmp
dec
mov
mov
push
lods
sbb
cwtl
pop
pop
inc
sub
inc
mov
jg
imul
jo
and
adc
jp
outsl
mov
outsl
loop
fcomps
popa
inc
cmpsb
cwtl
dec
mov
fs
pop
jg
push
pushf
adc
enter
pop
push
mov
pop
mov
pop
repnz
cmpb
movb
fisubrs
imull
aaa
sahf
and
scas
inc
and
cmc
cwtl
mov
cmp
nop
out
xchg
xor
mov
imulb
sahf
jmp
icebp
add
scas
leave
pop
mov
stos
andb
jg
xor
jge
dec
mov
mov
xor
push
pop
xor
cmpsl
lret
into
mov
pop
mov
dec
mov
adc
push
jg
pushf
pusha
sub
jg
mov
idivb
xor
outsb
xchg
pop
stos
cmpsl
push
pop
stos
jge
xchg
jne
mov
aas
sti
sarl
lock
call
incb
cmp
mov
mov
pop
inc
jge
jmp
sub
push
call
xchg
pushf
cld
pop
jmp
cmpl
stos
pop
jge
aas
popf
mov
lcall
xor
mov
inc
sarl
push
or
outsb
stc
pop
stos
and
xchg
sahf
fsubrs
sahf
arpl
gs
subl
sahf
loopne
sahf
adc
das
push
pop
call
pop
pop
inc
outsb
cmp
and
jg
pushf
cmp
idivb
rolb
fstpt
arpl
loopne
lret
mov
pop
jecxz
xor
sbbb
sahf
stos
xor
js
jo
in
loop
pop
inc
outsb
push
and
push
icebp
fwait
imul
popa
stos
adc
in
addr16
sahf
mov
rcrb
icebp
addr16
inc
dec
and
hlt
mov
sbb
mov
lret
xor
or
xchg
out
imul
iret
pop
xor
inc
mov
fisubs
push
jbe
pop
in
sub
sahf
lahf
bound
jbe
lods
dec
or
push
sahf
jp
lods
pop
fcompp
jp
pop
pop
mov
pusha
pop
jp
adc
mov
push
jae
xchg
mov
jecxz
repz
jecxz
mov
mov
xor
jns
push
pop
jno
pusha
frstor
sub
xor
fs
mov
sbb
repz
dec
ljmp
jmp
fstpl
xchg
pop
test
sahf
pop
sub
in
add
in
sahf
sahf
sub
fs
sbb
pop
adc
xor
pop
xor
data16
pop
mov
xor
sbb
dec
rcll
int3
popa
sti
enter
push
jecxz
mov
xor
pop
xor
pop
sbb
dec
fs
xor
icebp
cmp
fcmovu
cmp
lret
bound
stc
sahf
fs
adc
sbb
std
dec
mov
test
adc
ds
cmpsb
loopne
jg
sub
push
stos
mov
add
xchg
push
data16
pop
mov
xor
or
fiaddl
scas
jb
dec
xchg
fisubrs
cmp
xor
jg
or
iret
outsb
movsl
push
sahf
cmpsb
mov
pop
push
pusha
jle
rol
mov
ss
jb
and
lods
aas
cld
popf
mov
bound
jb
pusha
sbb
pushf
adc
sub
and
sub
mov
jo
inc
sbb
dec
xchg
outsb
dec
shlb
andb
and
push
jno
xor
ss
pop
fstp
dec
out
outsb
lods
cmc
out
dec
add
mov
arpl
loopne
dec
xor
outsb
push
sbb
in
out
pop
mov
pop
ja
out
es
aaa
jg
dec
push
daa
pop
mov
idivl
out
outsb
ret
mov
aaa
repz
pop
mov
sub
mov
rorl
aaa
inc
mov
es
pop
lock
ja
aam
cwtl
js
daa
ret
pusha
dec
daa
cmp
test
or
rolb
and
movd
out
movsb
fisubrs
pusha
aaa
jle
sahf
pusha
mov
mov
push
inc
push
dec
shr
leave
pusha
in
insl
addr16
jmp
jo
add
mov
or
mov
outsb
mov
ss
xor
and
popa
flds
and
cltd
aaa
bound
jns
pusha
in
ret
add
addr16
addr16
ja
addr16
mov
sub
clc
fimuls
in
ffree
js
xchg
mov
bound
fldl
mov
loope
cmpsl
cwtl
stc
mov
xlat
outsb
ss
xchg
test
mov
and
icebp
inc
pop
pushf
aam
stos
lods
sbb
gs
inc
lahf
push
add
pop
push
loopne
test
mov
subb
add
pusha
sub
arpl
in
loop
sbb
add
insb
pusha
xor
mov
dec
sub
cmpb
dec
mov
icebp
add
pop
out
out
mov
lahf
ja
cmpsl
leave
jge
frstor
into
fldt
mulb
xor
lds
orb
jg
jmp
popf
popl
mov
popf
mov
and
inc
fcoml
xchg
dec
fdivrs
scas
fcompl
add
dec
notl
inc
and
fbld
jg
push
rorb
sbbl
imul
fld
or
push
ret
lea
bound
out
out
add
or
fstpl
pop
cmp
lods
sub
pusha
adc
push
jnp
mov
and
push
jno
mov
idivb
lcall
mov
pusha
ja
dec
adc
cmp
push
pusha
dec
and
push
addl
in
in
mov
dec
pusha
std
test
neg
enter
push
fucomp
adc
xor
mov
cmp
fisttpl
ret
test
es
and
js
scas
dec
xor
out
inc
push
jnp
add
mov
pop
pop
push
pop
into
out
adc
in
pop
in
pusha
shl
icebp
pop
push
imul
popf
add
pop
jle
mov
iret
popa
in
inc
mov
add
call
std
nop
imul
mov
bound
sbbb
ret
mov
cmp
loope
and
cltd
pop
jle
mov
loope
or
jns
hlt
cmpsl
sub
and
jo
lahf
insb
mov
sub
push
jecxz
popf
gs
and
ret
js
out
test
pushf
cmp
out
or
adc
addr16
bound
cmpsl
stos
cwtl
mov
pop
cmc
imul
sbb
fisttpll
add
add
arpl
or
cmp
push
js
popf
pop
sbb
xlat
fisttpl
push
pop
fisttps
outsl
jge
js
xor
jb
xchg
pushl
out
outsb
je
js
sbb
jae
lret
and
xor
std
mov
lahf
ficompl
out
bound
mov
pusha
rcrb
jno
loopne
sbbb
movsb
push
push
mov
adc
push
xor
shl
push
clc
icebp
mov
mov
xor
mov
gs
xor
push
jl
insl
xlat
pusha
fstpt
inc
sahf
test
cmp
push
and
and
sbb
dec
test
mov
repz
es
and
jo
cmpsl
pusha
jg
testb
pusha
stos
ss
mov
cmp
lods
xor
stc
pop
sbb
jg
and
fdiv
fnsave
and
pop
mov
jns
in
sbb
fstpl
fmul
std
loopne
sbbb
sahf
xchg
pop
push
minps
daa
insl
xchg
pop
loope
jae
ss
jg
fidivs
mov
add
sub
jl
ss
jp
xlat
or
pop
iret
mov
cmp
jl,pn
inc
jle
dec
pop
cwtl
ret
ljmp
pop
test
lock
pusha
and
cmp
push
dec
add
dec
and
mov
popa
les
pop
and
ds
inc
fucomp
imul
or
inc
rcll
in
cmp
outsb
ds
cmpb
mov
and
pop
cmpb
ficoms
inc
test
loope
xchg
shlb
inc
inc
push
pop
pop
data16
and
pop
icebp
inc
scas
pop
push
jb
jbe
jle
mull
lea
std
in
jp
ss
rorl
sub
and
aas
in
push
je
sub
rolb
lret
pusha
ja
and
les
xorl
inc
in
pop
loopne
sbb
add
or
inc
jbe
dec
out
lods
aaa
jnp
movsl
jo
sbb
xlat
subb
pop
add
mov
push
jp
sbb
fiadds
ret
flds
push
xchg
cmp
int
pop
fbstp
sbbb
fs
jbe
int3
and
fbld
lods
enter
rolb
pop
ret
sbb
push
mov
lret
jo
inc
insb
mov
or
inc
aas
jae
sbb
dec
mov
pusha
das
stos
ss
jo
repz
ds
das
push
push
mov
mov
and
mov
jle
loope
jp
add
sti
mov
add
cmp
cmpl
push
cmp
test
push
insb
jge
push
mov
mov
mov
rclb
mov
jp
dec
push
loop
aam
sub
ds
bound
mov
call
je
xor
mov
jle
jge
mov
int3
jo
sub
and
fdivr
or
int3
std
imul
movsl
clc
sti
pop
lods
dec
jb
or
test
fwait
dec
push
gs
imul
nop
or
test
add
mov
mov
push
lods
andl
sbb
out
push
pop
pop
dec
adcb
mov
jp
iret
jmp
inc
jge
push
nop
js
mov
and
mov
push
inc
rcr
mov
jp
nop
jg
mov
add
mov
mov
aam
or
ss
add
pop
bnd
fwait
rorb
jge
push
cmp
xchg
icebp
bound
into
pop
dec
xchg
addr16
adc
scas
inc
rcrl
fistpll
dec
ss
cvtps2pd
dec
int3
fs
outsb
add
pop
lahf
mull
loop
mov
mov
lea
jg
cwtl
movb
out
jp
and
pop
inc
aas
ret
rcr
pusha
sarb
out
lcall
addr16
dec
loopne
jle
push
out
pusha
pop
insb
outsb
pusha
test
inc
outsb
fnstsw
addr16
and
mov
push
mov
fldl
and
xor
mov
sahf
out
loope
push
jo
cmpsb
mov
jge
jmp
push
inc
ja
pusha
pop
das
mov
ja
pop
imul
dec
arpl
mov
sbb
xlat
jg
sbb
push
call
loopne
out
andl
jmp
pusha
dec
cmp
inc
inc
mov
jle
mov
xor
and
cmpsb
lret
sbb
repnz
shlb
into
ret
pop
out
int3
push
mov
es
mov
shll
jno
mov
or
ret
scas
inc
dec
pusha
lea
test
sbb
sahf
cmp
mov
cmp
sbb
and
pop
pop
loopne
mov
cwtl
xchg
add
mov
mov
in
enter
pusha
hlt
and
push
add
sbb
jo
ss
jbe
pop
loop
xor
pop
pop
aas
in
adc
imul
mov
cmpsl
ret
fsubrl
pop
jnp
shll
shr
ja
mov
jg
arpl
test
push
sub
faddl
dec
out
in
xorl
pop
xor
pusha
cmpsl
pop
iret
outsb
ds
push
neg
sti
pusha
jo
setg
and
jb
lcall
bound
push
pushf
imul
fsubrs
lahf
cmpsl
xor
data16
aaa
rsm
sbbb
pop
mov
pop
aas
out
mov
xor
mov
xchg
sbb
mov
mov
mov
mov
inc
cmc
inc
pusha
cmp
ds
push
inc
loopne
pusha
call
out
push
clc
pop
out
enter
es
and
fisubs
pushf
bound
mov
test
test
adc
adc
jl
daa
inc
outsb
insb
lcall
bound
insl
push
push
imul
or
jecxz
sbb
int3
fbld
fsubs
out
jg
jl
icebp
jl
nop
mov
arpl
jl
dec
sbb
push
push
adc
mov
pop
daa
test
push
sahf
inc
addr16
dec
fucomi
js
pop
outsl
enter
pop
mov
das
bound
pusha
or
fdivrs
sub
dec
mov
mov
fcomps
aam
call
sbb
lock
dec
clc
iret
pop
add
ret
jle
cmp
inc
pop
push
adc
dec
adc
mov
aas
pusha
pusha
xchg
testl
pusha
and
sahf
pop
jl
clc
stc
bound
ja
insl
fiadds
sti
jl
leave
jmp
rcrb
imul
pop
jecxz
shrb
pop
aam
push
pusha
daa
outsl
pop
xchg
push
icebp
jmp
pusha
mull
push
pop
test
js
das
cmpsl
notb
sbb
pop
lods
lret
sbbl
ss
xchg
into
mov
sbb
bound
mov
test
pop
jo
ret
push
pusha
getsec
outsb
lret
fidivrs
rcrl
inc
cmpsl
jno
bound
je
dec
loop
cld
out
daa
dec
out
cli
cwtl
cld
pusha
test
jb
push
sbb
pop
inc
xor
sbbb
bound
pop
out
and
or
jo
addr16
popf
out
mov
and
mov
stos
pop
sti
dec
xorb
andb
ret
aaa
inc
push
push
sbb
push
sti
inc
pusha
push
ret
mov
push
mov
in
daa
dec
xchg
ja
out
enter
xchg
sbb
ja
add
ss
xchg
lock
out
in
jo
xchg
inc
mov
mov
cld
xor
mov
sbb
jl
enter
sahf
ds
inc
jl
dec
jl
bound
test
and
cmpsb
push
idivb
pusha
sbb
fisubrs
mov
ret
nop
out
jg
mov
bound
add
xor
ss
fiadds
dec
push
dec
sbb
icebp
clc
adc
mov
xchg
pusha
call
pop
scas
mov
push
fcompl
icebp
aas
xor
or
aad
sub
outsl
pushf
inc
sbb
add
repz
dec
jb
sbb
pop
push
subl
jbe
xor
fstl
inc
lahf
sub
mov
mov
dec
push
xor
xor
loop
icebp
orb
scas
outsb
adc
ljmp
aaa
fwait
xchg
int3
int
or
jge
xor
insb
js
sbb
loop
mov
sbb
cmp
xchg
adc
mov
sbb
inc
push
or
pushl
bound
shl
sahf
xchg
inc
ja
in
push
fcompl
inc
test
push
bound
jle
pop
lret
mov
in
cmc
pop
jle
insl
bound
add
mov
push
and
mov
pushf
dec
sbb
inc
incb
xor
sub
daa
and
sbb
sahf
xchg
faddl
xor
cmp
fwait
out
xchg
pop
icebp
mov
inc
mov
fistl
mov
hlt
nop
pusha
in
aas
dec
adc
mov
in
flds
cmp
shrl
pop
call
cmpsl
xchg
ss
mov
cmp
scas
mov
bound
enter
and
andl
in
jnp
out
inc
cmp
pop
push
ja
ljmp
out
data16
stos
xor
lahf
sbb
xor
movsl
rcrl
jne
in
enter
ss
and
bound
pop
shll
push
sbb
jl
enter
cmpb
ror
add
jge
jle
fidivrs
inc
jg
fistpll
inc
outsb
lock
push
cltd
cmpsl
jno
mov
scas
pop
sbb
adc
jmp
bt
mov
jo
pop
sbb
jecxz
loope
loopne
loop
sub
in
aas
dec
lea
popf
pop
pop
cmp
pop
dec
outsl
in
jmp
movsl
cmpsb
xchg
and
mov
adc
imul
aas
mov
dec
mov
xor
and
dec
pop
jo
and
pop
sbb
xor
mov
mov
ljmp
jne
xlat
cmp
add
push
fwait
sbb
mov
gs
cmp
gs
movsl
add
jo
scas
repz
call
push
ret
sub
dec
sti
bound
jmp
xor
mov
cmp
push
jl
pop
cwtl
dec
arpl
jne
js
jbe
ret
rcrl
loope
andl
jns
hlt
cmpsl
jb
lods
lahf
test
roll
scas
popf
in
call
push
insl
bound
js
shr
bound
cmp
test
fwait
insb
rolb
xchg
mov
push
mov
push
push
ss
jb
loope
js
out
push
xor
aam
jbe
mov
pop
fisubs
inc
xor
jp
imull
inc
popf
mov
mov
or
add
fwait
loope
push
test
pop
fsubs
jg
dec
push
mov
cs
and
fwait
pop
sbb
jg
jo
push
inc
leave
push
mov
fnsave
in
xlat
outsb
std
lods
iret
add
pop
sbb
mov
movsl
lahf
pop
rolb
lahf
add
xchg
pop
shll
pop
pop
cmp
mov
into
and
ret
lods
shlb
inc
inc
jbe
add
shll
out
stos
pop
in
jg
jle
int3
and
in
sub
orb
and
jbe
or
jno
out
popa
mov
ret
fdivl
sbb
push
add
inc
sahf
sbb
mov
mov
mov
push
subl
bound
sbb
push
loop
push
ret
mov
push
es
mov
mov
add
xor
adc
out
pop
std
imul
inc
fnstcw
jg
hlt
jmp
sub
pushf
sbb
fisubl
rclb
pop
test
mov
inc
mov
cmp
std
pop
rolb
mov
ret
bound
jge
dec
andl
cmpsl
ljmp
push
inc
mov
jo
push
sbb
loop
inc
and
bound
popa
inc
jp
pop
fucom
cmp
xchg
xchg
adc
add
ficoms
shll
pushl
add
or
sub
sub
scas
dec
xor
inc
inc
mov
loop
jl
je
outsb
push
aas
xchg
mov
les
xor
incb
mov
pop
mov
scas
imul
scas
mov
dec
cmpsb
adc
bound
cmp
pop
xlat
jns
out
jle
xor
add
loope
or
cmpsb
mov
jl
inc
sub
mov
pop
inc
push
or
push
dec
xchg
adc
jo
data16
movsl
scas
mov
loopne
push
xchg
daa
cmp
cmp
xor
in
cld
push
sahf
inc
cwtl
jle
pop
lods
pop
fbld
addr16
dec
nop
movsb
insb
negl
cmpsl
imul
cmp
push
add
inc
call
jae
inc
testl
in
cmp
call
cld
aaa
in
fwait
in
roll
sbb
imul
pop
leave
outsl
adc
cltd
sbb
in
cmp
jne
lahf
aaa
xchg
push
jo
scas
cwtl
repz
cmp
notl
rolb
cmp
pop
xchg
shrl
aas
mov
lcall
sbb
pusha
ret
dec
fsubs
sahf
pushf
mov
arpl
mov
pop
shlb
pop
push
dec
bound
lods
dec
and
popf
add
adc
loopne
inc
pop
rcrl
lahf
add
cmp
bound
pop
push
dec
xor
bound
xchg
and
ss
inc
pop
pop
jge
cltd
dec
mov
mov
in
pop
add
add
bound
push
imul
bound
mov
xor
push
ret
jns
sbb
out
divb
scas
jmp
bound
dec
pop
shrb
sbb
pop
inc
in
inc
xorb
divb
mov
push
and
pop
jg
ja
mov
gs
ss
xchg
xchg
jnp
add
sahf
adc
pop
sbb
xor
fninit
sar
out
dec
scas
fiadds
and
ja
mov
push
add
add
out
je
les
mov
arpl
fnstsw
std
xor
mov
pop
inc
out
call
pop
or
jl
add
mov
addb
push
enter
pusha
mov
sub
jge
stc
mov
xor
sbb
je
and
xchg
pop
mov
loope
icebp
fmulp
bound
cld
mov
ror
pop
jg
lahf
jg
jl
pop
in
pop
outsl
sub
pop
push
sbb
ds
sbb
cltd
fdivrs
jecxz
jb
out
iret
pop
jnp
outsb
enter
adc
ret
addl
mov
sbbb
mov
imul
pusha
xchg
aaa
and
inc
icebp
jbe
pop
cmp
pop
inc
js
mov
pushf
lahf
sbb
mov
pop
add
aas
sub
and
adc
jg
inc
in
insl
rcrl
pop
xorl
pop
sub
inc
sti
dec
lcall
lock
or
outsb
pop
daa
call
sti
test
cld
mov
data16
jno
mov
inc
pusha
mov
idivb
mov
and
addl
enter
cmp
imul
jle
outsl
cmpsb
aas
scas
jne
in
je
pop
adc
add
ret
mov
adc
subl
jl
pop
add
adc
bound
adc
data16
daa
mov
lret
pop
test
pop
pop
pop
leave
aaa
stos
iret
lods
ret
jp
mov
rcr
popa
aas
das
jp
xchg
and
push
ret
pusha
xchg
sub
hlt
fimuls
out
ja
pushf
xchg
push
and
test
fidivrs
mov
fsubrl
jns
dec
inc
ret
add
inc
pop
jg
cmp
dec
jl
mov
mov
push
int3
stos
fisttpl
or
mov
pop
mov
xchg
call
jg
adc
icebp
lret
mov
xchg
jbe
stos
nop
jecxz
adc
lock
pop
incb
mov
jp
pop
push
scas
add
mov
pusha
sahf
out
stos
jg
imul
bound
jle
loope,pn
jp
push
jg
ret
out
orl
loope
and
push
cmpb
and
sbb
pop
jg
ljmp
xchg
ja
out
xchg
ss
or
outsl
outsb
sti
aas
adc
cmp
push
mov
pop
adc
jge
pop
in
loop
es
repnz
es
enter
aaa
lea
test
adc
push
fcomi
jae
ficoml
mov
xchg
push
push
int
or
push
cs
in
into
pop
popf
xlat
rorl
jae
add
jae
adc
hlt
iret
sub
int3
in
pop
jp
test
fbld
mov
push
mov
add
pop
push
enter
nop
call
sbb
inc
lock
out
xor
dec
dec
jbe
cmpsl
cmpsb
jns
call
push
lds
dec
outsb
adc
push
fidivs
pop
inc
push
and
insb
in
add
ljmp
mov
mov
mov
in
push
pop
outsl
jle
pop
sti
adc
mov
lea
aad
pop
call
in
jg
jbe
data16
or
pop
inc
loope
sub
adc
pop
test
fisubrl
movsb
pop
mov
les
stc
movsb
cmp
inc
push
cmc
test
stc
mov
outsb
push
inc
mov
in
add
xor
sub
in
or
iret
adc
lods
loop
jne
es
inc
cmp
es
pop
add
push
cmpsb
icebp
ljmp
sub
or
enter
xor
popf
outsb
scas
mov
ja
and
int
loope
mov
loope
inc
mov
xchg
jo
pop
insb
cld
pop
scas
enter
pop
mov
ss
push
xchg
or
mov
xor
ss
ss
sub
xchg
cmp
push
adc
or
mov
loope
loope
loop
xor
push
cmp
cs
lods
xchg
inc
push
xor
fisubs
ja
sbb
xor
es
mov
jp
sub
fucomi
inc
popl
outsb
jmp
fstl
hlt
mov
push
mov
lcall
pop
roll
sbb
adc
pop
ja
push
pushf
je
jge
push
sub
dec
pop
jmp
js
outsb
xor
push
push
hlt
fstl
outsl
mov
push
adc
mov
icebp
jle
push
imul
pop
in
pop
es
mov
lret
mov
mov
xor
fcomi
sub
pop
mov
fistl
pusha
mov
jle
push
fisttpl
sbb
add
mov
fisttpll
jne
pop
mov
pop
xchg
pop
or
sbb
fdivrp
mov
pop
xchg
popf
in
xor
jle
dec
pop
pop
adc
jl
push
clc
fst
pop
inc
pop
sbb
mov
clc
sarl
outsb
sbb
adc
outsb
sub
push
jmp
sbb
pop
clc
sarl
outsb
sbb
adc
scas
jne
ret
mov
pop
outsb
subps
nop
jle
push
push
pop
adc
jp
outsb
mov
push
dec
fucomp
pop
or
data16
pushf
fisubs
andl
inc
add
jno
jne,pn
jle
fdivr
sbb
js
xchg
pop
mov
loopne
js
mov
insl
sti
sub
pop
mov
xchg
test
sbb
pop
les
lds
pop
pop
test
mov
pop
lcall
adc
push
sarl
inc
mov
leave
pop
testb
jecxz
push
int3
cbtw
popa
mov
adc
pop
insl
jle
repnz
lret
sahf
add
inc
cli
xchg
fsubrs
pop
mov
adc
enter
xchg
and
loopne
xchg
xor
into
or
fs
test
or
adc
arpl
jmp
or
mov
mov
xchg
shlb
jg
pop
icebp
mov
mov
push
aas
mov
pop
sysret
leave
lds
push
mov
mov
pop
enter
jns
aaa
dec
mov
addr16
mov
inc
jbe
rcr
and
dec
xorb
fistps
jl
shlb
pop
lahf
or
jnp
push
mov
outsb
out
mov
cmpsb
jae
xchg
and
aas
sub
cs
pop
cwtl
push
out
jmp
inc
paddw
push
bound
add
add
sbb
mov
sub
xorl
pop
add
es
dec
xchg
xor
pop
fwait
or
in
cmp
cmp
xchg
ja
pop
lret
sub
mov
sub
pop
bound
add
pop
mov
xchg
les
testb
and
lds
out
sbbl
pop
mov
cmp
pop
leave
jbe
into
lds
xchg
ljmp
sbb
mov
sbb
out
fistps
and
in
fucomi
inc
pop
mov
cld
mov
loop
pop
jle
cld
mov
pop
scas
xlat
inc
aaa
lock
fldcw
jbe
subl
dec
adc
pop
imul
or
xchg
lock
js
push
sub
imulb
shlb
das
sbb
sub
pop
inc
mov
js
add
adc
in
cmp
fdivrl
dec
lret
cmp
and
push
mov
out
pop
movsl
lret
mov
das
out
mov
push
scas
lcall
jle
nop
xchg
pop
inc
gs
shlb
dec
std
sub
daa
outsl
imul
pop
pushf
into
sub
lret
ljmp
xor
push
outsb
shlb
rep
inc
sbb
int3
orl
inc
jne
inc
push
in
sub
cmp
in
dec
adc
mov
rcll
in
jmp
in
test
and
lea
lock
xor
out
pop
dec
mov
mov
in
out
dec
sub
jge
sub
lahf
movsb
add
jle
sahf
dec
int
or
cmp
jno
jnp
or
inc
lods
inc
sbb
lahf
dec
cld
adc
mov
mov
js
mov
cmp
add
sub
mov
or
in
mov
int3
int
push
es
fwait
outsb
outsb
cmc
lahf
adcl
jge
outsb
aad
ljmp
jo
ljmp
fimuls
inc
ljmp
movb
sbb
xchg
outsl
jle
movb
jl
in
cltd
stc
rcll
lods
jge
pop
js
movsb
add
cmc
std
mov
fs
aam
decb
or
inc
scas
mov
cmpsb
test
insl
mov
pop
pop
inc
ja
loopne
test
shl
mov
loopne
xor
pop
jbe
mov
lock
push
call
sub
fidivs
pop
mov
cmp
scas
add
xchg
xor
outsb
in
mov
outsl
inc
js
cmpl
ds
xlat
cmovne
out
push
in
popa
in
pushf
pop
jbe
add
subl
jl
cmc
cmp
sbb
sbb
bound
jg
out
push
mov
shr
jo
inc
sahf
lock
clc
pop
dec
xchg
mov
cmp
dec
push
out
xchg
sbb
les
out
into
push
fldl
lds
pop
sbb
fs
pop
mov
cmc
push
inc
mov
adc
nop
dec
and
push
dec
xchg
imul
ds
out
repz
adc
push
pushf
int3
test
add
xor
test
push
sbb
repnz
xchg
jle
es
push
mov
movsl
push
sub
sarb
ds
in
fstpl
cmc
enter
cmpsb
popf
add
in
movsl
popf
mov
and
jbe
xor
mov
aaa
jecxz
mulb
pop
mov
inc
xchg
mov
popa
sbb
data16
inc
dec
push
xchg
jbe
lods
and
xorl
mov
outsb
fwait
jle
fnsave
mov
pop
in
jne
je
add
insl
cli
std
in
jp
jns
push
test
xchg
jmp
xchg
jge
imul
sbb
mov
adc
sub
movsb
pushf
mov
test
or
sbb
sub
sti
xchg
pop
mov
jnp
push
or
sbb
sub
lcall
mov
and
xor
or
cltd
xchg
pop
test
mov
and
xor
or
adc
in
mov
jbe
sbb
sub
fdivr
out
pop
pop
call
scas
pop
ja
xchg
pop
pop
aaa
das
imul
push
xchg
mov
cmpsb
sahf
mov
lahf
sbb
pop
pop
imull
add
cmpsl
mov
es
in
lea
bound
repz
add
insb
jno
pop
cmpsl
test
pop
ficoms
cs
ja
test
scas
sbb
enter
lahf
xchg
pop
popa
and
pusha
dec
pop
shr
or
xchg
mov
sbb
loopne
xchg
jbe
rclb
bound
fdivl
int3
cltd
outsl
cmp
in
cmp
cli
insl
lods
leave
das
adc
mov
pop
mov
xchg
jbe
imul
mov
pop
pop
inc
dec
cld
bnd
pop
add
mov
xor
xor
sbb
subb
jbe
js
adc
mov
pusha
xor
fistpll
mov
push
pop
iret
pop
fcompp
xchg
sbb
out
loopne
scas
or
shlb
jbe
or
xchg
aas
negl
cmp
xchg
std
shll
leave
es
jp
mov
pop
out
mov
push
lea
push
sbb
adc
movb
lcall
loopne
or
cli
pop
outsb
aam
lret
mov
and
jle
mov
xchg
mov
jb
jge
into
pop
rorb
notb
aas
inc
pop
inc
jmp
test
pop
xchg
add
adc
sub
pop
pop
outsl
adc
fucom
push
in
sbb
jne
roll
pop
inc
mov
sbb
sub
cmp
repnz
sbb
movsl
pop
fwait
in
sbbb
out
test
rcrl
jecxz
inc
ljmp
xlat
xorl
adc
adc
and
mov
rcrb
lret
popa
sbb
gs
loope
pop
fcoms
cmp
pop
cmp
loopne
ret
cmp
sbb
and
call
jmp
push
orl
test
adc
movsb
mov
cltd
pop
cmp
popf
pop
jb
int3
in
xchg
stos
lcall
mov
sbb
dec
in
sbb
mov
fidivl
adc
fdivl
or
jb
xchg
lcall
mov
pop
push
inc
mov
dec
mov
add
jbe
popf
add
mov
bound
sbb
pop
ret
aas
sbbb
push
push
sti
bound
mov
adc
jbe
repnz
jecxz
dec
and
daa
out
je
in
aas
pop
cmp
and
xor
scas
cmp
and
ljmp
xor
fsubp
mov
or
inc
pop
ret
cltd
loop
jno
inc
test
aam
mov
mov
repnz
xchg
cltd
inc
cmpsl
out
push
gs
repz
aam
movsl
ljmp
pop
ds
pop
jnp
mov
cmp
or
popa
pop
mov
int
lods
cld
mov
dec
fldpi
js
cli
fdivp
mov
jle
loopne
adc
xlat
enter
mov
push
jno
xorl
cmc
dec
sub
clc
cwtl
pop
iret
stos
dec
jecxz
xor
sbb
xor
and
cmpsl
out
dec
fbstp
pop
cmp
ds
mov
xchg
lret
insl
movsb
outsb
ljmp
out
es
pop
fistpll
mov
mov
cs
mov
jp
cmp
push
mov
insb
fnstsw
movb
in
mov
mov
rorl
push
scas
es
push
out
and
ds
pushf
push
jae
nop
mov
loope
int
dec
and
push
xor
pop
pushf
aad
jne
in
ret
aad
xor
addr16
in
ds
sub
ds
in
sbb
xor
icebp
jge
ds
mov
xchg
push
jnp
insl
inc
cld
ret
mov
sbb
scas
adc
hlt
xchg
nop
call
jo
leave
inc
sbb
lds
xor
dec
insb
fnstcw
bound
stos
shlb
jnp
insl
ss
loop
jnp
xchg
ss
xchg
scas
and
jl
xor
fbstp
out
sbb
fwait
mov
aad
std
jbe
repz
lret
das
xchg
outsl
fstps
mov
sbbl
cld
popf
call
out
ss
sti
daa
inc
jns
push
ds
mov
roll
lret
xchg
and
outsl
and
push
xor
push
inc
cmpsl
loopne
imul
xchg
xor
stos
repnz
inc
mov
mov
scas
fxch
xchg
fsubs
movnti
ja
and
movsl
or
pop
insl
sbb
pusha
xor
loope
pop
insb
and
or
mov
jbe
and
or
fwait
int
test
cmc
callw
es
mov
sti
xor
adc
movsb
ja
xchg
mov
mov
das
shl
xchg
in
push
add
jbe
inc
ret
cmpsb
lahf
outsb
pop
and
in
sbb
sub
mov
in
cmp
xchg
sbb
xchg
movsl
std
inc
hlt
add
and
and
cmc
loope
aad
repz
loopne
dec
aad
int
stos
cwtl
fdivp
lods
pop
popa
xor
xchg
outsl
jbe
push
pop
test
lcall
sub
mov
loopne
fcomip
subl
in
insl
outsb
cld
ss
sbb
repnz
xchg
insl
loope
sub
pop
cmpb
insl
insl
loop
mov
adc
pop
jle
cs
stos
mov
pop
cmc
rclb
push
or
cmc
in
cld
cmp
pop
sbb
xchg
es
stos
popa
sub
push
mov
and
cltd
adc
add
aam
push
xorb
loope
outsl
push
push
shlb
aad
or
push
adc
jnp
in
dec
jge
inc
sbb
lea
sub
mov
iret
dec
outsb
xor
test
mov
mov
push
ds
lds
cmp
pop
ja
movsl
clc
sarb
fcoml
in
int
dec
lock
push
out
nop
jmp
lahf
cwtl
orb
mov
xchg
test
sbb
pop
inc
sbb
lret
mov
mov
jmp
fsubl
outsb
incl
jne
xorb
xorb
loope
daa
push
pushl
jl
sbb
mov
outsb
leave
sub
push
aaa
fdivr
inc
jb
enter
mov
mov
xchg
loope
cmp
je
mov
sub
js
push
push
mov
insl
out
std
insb
in
xor
inc
add
pop
dec
inc
push
outsl
mov
jno
xchg
sahf
lea
retw
add
jl
gs
adc
xchg
sub
cs
push
in
xacquire
scas
lods
in
fdiv
or
mov
outsl
pop
mov
inc
sub
jbe
in
xchg
cmp
adc
xor
mov
bound
xchg
mov
pop
faddl
jnp
bound
and
in
hlt
shrl
scas
pusha
nop
out
cmp
cmp
jp
push
sub
fdivr
mov
int
pusha
loop
fstpl
and
jnp
push
adc
je
push
into
outsb
mov
icebp
shr
adc
jge
aad
cmp
fsubr
shr
push
inc
push
jae
dec
es
jo
add
and
pushf
sub
popa
lahf
jnp
mov
mov
push
lea
jo
jmp
arpl
pusha
cltd
insl
and
andb
add
sbb
jnp
sbb
repz
fwait
and
cmp
mov
divb
clc
cmp
ret
pusha
pop
and
push
xchg
ret
pop
daa
popf
loop
sub
jmp
dec
test
dec
inc
shrb
fmull
adc
and
stc
cmp
adc
jnp
outsb
pushw
mov
sub
xchg
setnp
push
jbe
in
test
push
jge
cli
hlt
pushf
add
fcoml
fucomp
sahf
sbb
fdivs
jg
faddl
mov
insb
jae
nop
loope
in
cld
or
repnz
or
cwtl
adc
shrl
add
outsb
dec
adc
xchg
jle
xor
repnz
fcoml
test
aaa
in
sti
push
sbb
mov
hlt
movsb
es
and
nop
cmp
rcrl
les
insl
jl
add
pop
in
mov
jmp
test
std
adc
add
sbb
or
frstor
push
dec
xchg
fiadds
dec
lock
call
outsb
in
push
hlt
shrl
ret
xchg
loop
and
shl
sub
incb
pop
mulb
mov
xchg
loopne
dec
outsl
sti
pop
cmpsl
in
pop
ret
subb
xor
xor
inc
dec
mov
fimuls
dec
fisubs
and
aaa
mov
sahf
or
test
xchg
lods
out
add
adc
pop
pop
aam
mov
sbb
call
adc
adc
inc
inc
fcmovu
jo
repz
pop
int3
cmp
es
and
cmc
imul
sub
hlt
es
dec
push
cmpsl
cld
pop
push
insb
out
ljmp
add
into
aas
and
sbb
pop
out
ss
lds
cmp
movsb
adc
xor
dec
inc
sbbl
add
sahf
jbe
testb
mov
xor
lods
xchg
dec
aam
fstps
dec
imul
mov
jmp
lcall
pop
stos
hlt
out
xchg
push
adc
add
inc
mov
sahf
mov
dec
mov
int3
scas
mov
movsl
lea
pop
mov
mov
jmp
insl
shl
xorl
aam
adc
pushf
fdivrp
pop
bound
in
add
pop
push
cmp
lcall
popa
adc
mov
pop
mov
inc
in
cli
hlt
jl
cmpsl
rcrb
adc
aaa
imul
mov
repz
mov
aam
je
xor
xchg
pop
xor
cwtl
add
pop
aas
inc
into
mov
pop
mov
stc
mov
xchg
mov
pop
sub
enter
push
pop
push
cmpsb
xor
test
sar
es
pop
dec
pop
xchg
mov
add
sub
iret
movsl
int
nop
or
mov
jmp
pop
xchg
cmp
pop
and
push
ret
pop
or
es
or
std
test
repz
mov
enter
cli
and
pop
rcll
mov
jae
subb
in
inc
push
fcomps
sub
pop
sub
outsl
aam
inc
mov
pop
cmp
jl
loope
pop
mov
push
jmp
gs
ret
pop
mov
cmpsb
fiadds
and
mov
mov
in
push
pop
xor
popa
sbb
add
adc
push
pop
push
daa
mov
pop
pop
lfs
ja
or
xchg
sbb
inc
pop
sti
call
lcall
mov
mov
pop
mov
and
rcl
imul
pop
push
add
pop
lock
sub
fistl
pop
movsl
mov
ss
sahf
bound
loopne
push
clc
pop
call
sbb
fidivrl
clc
pop
loopne
push
fwait
mov
pmullw
sub
loope
pop
cmp
adc
in
mov
aas
sub
bound
dec
lds
lret
or
xor
test
dec
sti
call
sbb
mov
es
in
pop
out
lret
popa
cmp
leave
jecxz
rcll
push
xchg
rcrl
cmp
test
fwait
jmp
inc
jmp
mov
shll
xchg
clc
dec
cs
adc
cwtl
push
in
into
in
mov
rolb
outsb
sub
mov
in
sbb
cmpsl
pop
sahf
push
sub
xchg
mov
mov
ds
cmp
cmpsl
mov
add
push
or
adc
mov
mov
test
mov
popa
int3
std
mov
jbe
push
push
mov
ret
call
xor
and
push
ds
arpl
mov
jg
sbb
pop
shlb
aad
in
sub
test
inc
cmp
cwtl
icebp
out
scas
dec
jo
fdivs
fnstcw
mov
xchg
xor
pusha
jp
mov
sbbl
lods
jle
jge
test
dec
mov
push
ss
xor
sbb
jne
cmpsl
mov
sahf
test
mov
pop
xorl
mov
pop
cmp
fimuls
inc
daa
cmp
dec
push
cli
lock
les
pop
int
repnz
imul
shlb
inc
adc
in
cwtl
cmp
push
pop
mov
idivl
pop
imul
inc
inc
scas
out
dec
pop
int3
mov
test
icebp
xchg
adc
bound
imul
mov
push
stc
xchg
int3
mov
rcrb
lods
out
xor
aas
jb
and
outsl
es
sub
rcrl
popa
sahf
rcrl
repz
push
dec
mov
sbb
inc
pop
movsl
inc
loopne
xchg
dec
test
push
or
ficompl
and
fcmovnbe
xchg
mov
jecxz
lahf
popf
jnp
pop
adc
jl
in
das
jge
outsb
or
mov
roll
ret
pop
icebp
popa
xchg
dec
push
fimuls
xchg
pop
fcmovb
ja
cmp
pop
jle
mov
sbbb
cmp
pop
mov
out
mov
jg
hlt
mov
mov
inc
adc
push
mov
dec
aam
jo
pop
in
inc
fisubrl
xor
sbb
pop
dec
sahf
int3
mov
pop
mov
jne
mov
or
pop
dec
cli
loop
fdivrs
pop
scas
into
test
outsl
imul
stos
xor
lcall
cld
push
push
fwait
call
xchg
outsb
jno
lahf
xor
pop
mov
mov
add
push
inc
sub
bound
mov
sub
adc
sti
fimull
sbb
xor
pop
adc
push
mov
fiaddl
sbb
mov
jbe
cs
scas
subl
inc
pop
fnsave
icebp
cs
push
mov
sbb
push
pop
mov
xchg
inc
push
or
nop
push
punpcklbw
and
stos
xchg
cmpsl
pop
insl
push
lods
out
lds
fwait
pop
cltd
rolb
pop
lods
inc
mov
mov
add
mov
dec
aam
call
bound
unpckhps
std
sub
and
cmp
push
movsl
pushf
pop
adc
push
pop
mov
xchg
dec
in
jo
loopne
lds
mov
adc
push
mov
xor
adc
pop
mov
cltd
dec
cmpsb
or
out
xor
subb
es
push
ja
lds
dec
movsl
divl
dec
ffreep
pushf
pop
rorb
pop
daa
rcrb
adc
pop
xor
pop
bnd
pop
lods
mov
negl
adcl
inc
mov
cmp
cwtl
mov
xchg
and
enter
aaa
call
nop
xor
flds
rcrb
mov
pop
ja
outsl
stos
xor
xchg
out
jne
pop
push
jle
cmc
sbb
mov
test
lcall
xchg
cld
pop
lret
dec
out
out
adc
clc
or
bound
or
mov
and
enter
push
je
shlb
ds
pop
pop
xchg
inc
in
and
add
lds
fsubrp
dec
shrb
mov
xor
pop
rcrl
mov
cs
pop
lcall
push
out
fidivrl
pusha
lods
loopne
inc
cmp
insl
in
dec
mov
imul
loop
add
inc
mov
bound
pusha
xor
or
pop
mov
and
dec
push
jle
ss
test
pusha
mov
pusha
pushf
cltd
or
pop
add
outsb
jle
inc
xor
stos
rorb
mov
sti
cmc
in
cmp
in
iret
cld
jno
push
pop
js
les
push
or
jne
rorl
pop
ds
clc
xchg
les
cld
jl
jl
es
les
sbb
xchg
fsubrl
aam
sbb
mov
addb
pushf
push
jne
jl
enter
cld
faddl
out
mov
das
in
xchg
cmpsl
push
out
cwtl
jbe
mov
iret
out
test
in
dec
mov
xchg
ss
mov
sub
add
mov
jae
jno
std
xor
mov
in
in
sbb
pop
mov
push
iret
xor
mov
xchg
std
xor
cmp
arpl
sub
scas
mov
in
scas
in
and
shrl
jl
in
ja
jp
mov
mov
outsl
add
rolb
and
in
mov
outsb
lds
mov
aad
sub
inc
mov
jle
aas
and
rcrl
addl
and
fldl
in
stos
lds
xchg
fs
pop
push
mov
jle
add
dec
add
mov
in
ficomps
pop
addb
sub
jbe
call
movsl
fsubr
mov
jmp
xchg
mov
sbb
lock
mov
roll
pop
cli
pop
repnz
inc
xor
mov
insl
std
gs
or
dec
cld
mov
les
adc
xor
pop
mov
push
clc
int
mov
shll
cs
hlt
pop
pandn
mov
lock
pop
pop
and
adc
ret
xor
out
mov
dec
pop
and
cmp
mov
mov
bound
xchg
sbb
lock
outsb
add
mov
pop
out
icebp
movsb
leave
pop
lret
mov
pop
ret
push
push
bound
outsl
pop
lret
stos
jmp
ret
cltd
add
and
mov
or
iret
sarb
inc
fs
fisttpll
mov
sbb
je
movsl
pop
jbe
dec
sahf
nop
and
jne
mov
dec
and
inc
mov
mov
xor
jnp
lret
cmp
mov
test
xor
pop
jne
icebp
fstl
shlb
pusha
cmp
xor
pop
lods
stc
xor
sub
loope
insb
sub
pop
xor
xchg
adc
dec
cli
jne
mov
lock
mov
or
scas
rcr
ja
mov
adc
cmp
push
jne
lea
int
jnp
stos
test
fisubrl
cli
jle
iret
ret
cld
pop
call
mov
sahf
pop
mov
xor
cli
or
shrl
or
dec
pusha
lods
rclb
test
inc
aad
aaa
pop
addr16
cmp
adc
icebp
pop
sbb
mov
bound
pop
mov
inc
inc
pop
xchg
insb
popa
push
inc
jl
je
aas
add
hlt
and
int3
fdivl
stc
dec
pop
ss
adc
fwait
loop
insb
jmp
jle
in
ja
loop
jmp
xor
mov
inc
xor
movaps
and
adc
repnz
pop
mov
and
pop
in
icebp
sti
sub
test
sub
sbb
flds
jmp
iret
shrb
stos
je
xor
mov
xchg
lcall
popa
jo
lods
stos
adc
or
push
scas
cmp
xchg
pop
fcoms
rcrl
add
std
add
mov
sub
mov
inc
es
jb
pusha
cmc
sti
mov
repnz
cmp
ljmp
inc
pop
push
add
jmp
or
dec
popa
lret
imul
ds
lcall
pop
mov
pop
xor
jle
popf
nop
je
push
inc
pop
sub
dec
cwtl
xchg
xor
sbb
repnz
out
fcmove
int
gs
and
pop
pop
push
dec
arpl
inc
fwait
sub
insb
cs
fsubl
test
lcall
bound
rcrb
cmp
sbb
pop
lock
jne
xor
ss
or
mov
adc
cltd
add
in
adc
or
mov
insl
jg
out
cmpl
pop
sar
insl
xchg
sub
maskmovq
testl
mov
scas
pusha
ss
add
and
lea
mov
roll
fwait
pop
pop
jle
rol
and
in
ljmp
movb
mov
rcrb
or
mov
xchg
lcall
pop
pusha
push
movsb
or
mov
mov
mov
inc
fcompl
scas
sbb
and
inc
xlat
cmpsl
adcl
shl
test
out
xor
push
pusha
lcall
cmp
pop
jno
mov
ret
sub
or
insl
insl
and
add
xor
jp
in
cmp
jecxz
sar
in
jmp
jne
fldl
cs
shlb
inc
cs
aam
or
fsubrl
andb
adc
pop
mov
push
push
pop
cmpsl
add
jmp
xor
mov
xchg
xor
cmp
in
and
fidivl
xchg
xchg
sti
xchg
mov
aas
data16
dec
xchg
add
sbb
add
hlt
add
popf
xchg
shrb
in
push
jge
push
pop
mov
sub
inc
in
xor
xchg
pop
pop
ss
lods
push
add
cmpsl
cmp
xor
mov
in
rolb
inc
test
mov
test
insb
pop
inc
packuswb
test
lods
in
jne
sbb
hlt
pop
hlt
cld
push
in
jp
mov
outsb
fsts
xorb
inc
inc
or
outsl
pop
popa
adc
xor
dec
adc
add
push
sbb
shrl
xchg
sub
and
fmul
loopne
sbb
outsl
hlt
in
pushf
fdivr
sbb
cmp
or
cmc
hlt
mov
fcoml
add
in
jge
mov
iret
add
mov
jmp
mov
inc
movsl
sub
jl
movsl
popfw
lods
mov
add
sub
aas
es
ds
pop
mov
jo
ja
push
cmpsl
mov
call
sub
push
add
sbb
mov
xor
mov
iret
hlt
or
subl
dec
in
rcll
repz
add
fcompl
out
pusha
jnp
fistpl
int
and
dec
inc
repz
mov
jmp
repz
mov
mov
pushf
stos
and
sub
hlt
movsb
int
into
shr
scas
pusha
pushf
adc
jecxz
mov
sub
pop
sbb
jmp
sbb
pop
test
int3
shrl
mov
sbb
add
call
mov
pop
sbb
adc
test
xchg
rcr
push
mov
imulb
ret
lock
pop
and
dec
cmp
repnz
fldl
pop
stos
cli
ja
mov
sub
pop
mov
add
lock
mov
cmp
cld
jae
jp
pop
and
xchg
jg
fisttpl
jae
inc
call
repnz
lea
ss
inc
dec
test
daa
fildll
psrld
clc
lahf
pop
fnsave
les
jne
enter
add
lret
stc
xchg
xor
sub
lods
test
cmpsl
push
shlb
out
jne
jl
push
andb
pushf
fwait
sbb
add
mov
loope
stc
lahf
inc
cmc
push
push
mov
aam
out
lcall
subb
faddl
mov
in
outsb
jbe
frstor
sbb
or
sbb
cmp
push
pop
cld
lods
push
shll
cmpsb
sbb
test
xor
push
xchg
negb
mov
xchg
and
ss
push
jp
rclb
add
fwait
data16
ss
test
or
imul
addl
rcr
jbe
cmp
ss
jp
jne
cld
in
push
xor
xchg
stc
icebp
pop
sbb
inc
xor
ja
inc
mov
xchg
lods
and
jb
cltd
jnp
jae
mov
loop
stos
push
dec
or
pop
stc
or
add
out
bound
aad
std
cli
std
in
rcl
imul
fsubr
xchg
and
aam
call
adc
or
or
int3
push
inc
movsl
inc
imul
add
sub
and
mov
add
and
fwait
sbb
insb
dec
push
mov
add
dec
fsts
add
xchg
in
mov
and
lret
lds
xchg
cmp
jge
xchg
jecxz
jnp
in
mov
push
jp
or
hlt
in
add
push
sti
movsb
mov
xlat
inc
cmc
xchg
adc
inc
cmc
pushf
cmp
mov
imul
movsl
mov
aam
xor
inc
addl
jl
cmc
jecxz
loope
mov
pushf
pop
sub
jp
cmc
xor
cli
cld
and
xor
jns
xor
test
mov
inc
fwait
and
out
shrb
xor
dec
mov
sbb
outsb
mul
in
loop
mov
lret
insb
fcomps
xor
jmp
hlt
xlat
repnz
cmp
sub
aam
insl
cmp
xor
iret
test
cmc
fbld
cmc
popf
xchg
in
sti
push
sbb
in
cmc
jbe
shlb
test
hlt
and
fistps
jl
xor
mov
dec
cmp
fstpt
add
xchg
dec
jle
mov
mov
fidivl
lods
jg
push
outsb
insb
mov
mov
movsl
dec
pop
adc
stc
sbb
dec
and
xor
dec
dec
lea
xor
dec
lods
out
sub
imul
xchg
shrb
loop
test
xchg
insl
inc
fstp
leave
or
xor
adc
inc
movsb
movsl
pop
insl
fadd
xorl
std
ds
jle
enter
sbb
mov
jne
loop
fcompl
es
cmc
repnz
push
mov
cmc
dec
lahf
popf
or
cld
mov
in
inc
jge
jbe
mov
pop
stos
fdivl
and
cs
fnstsw
mov
add
add
xchg
inc
insl
hlt
pushf
hlt
xor
aad
std
or
cmc
in
movsb
xchg
add
in
jns
hlt
jbe
movsl
mov
es
imul
popf
hlt
adc
pop
and
sbb
xor
test
sbb
data16
lcall
lahf
and
lret
pop
mov
rorl
cmc
hlt
pushf
xchg
lock
out
in
out
repnz
mov
std
js
fistpl
cmc
jge
jg
imul
push
sbb
cmpsb
in
push
adc
jne
movsl
sar
js
jge
ss
or
repnz
fdiv
xchg
and
loopne
ds
ss
xchg
and
insl
cld
xchg
lods
adc
push
adc
jb
movsb
fstl
sub
shlb
in
push
push
mov
mov
and
sbb
or
sub
sbb
jg
js
clc
inc
and
xchg
in
pop
adc
or
bound
dec
push
test
data16
fsubrs
jnp
adc
xor
mov
in
fstpl
cmp
clc
call
push
in
mov
jmp
test
cmp
arpl
std
or
cmc
add
in
pop
andl
mov
jg
repnz
daa
jmp
fwait
cmc
and
in
sbb
stc
cld
or
push
cmp
fcoml
xchg
jae
bound
sbb
mov
cmp
insl
inc
add
fisubrl
stc
sbb
fsubrl
push
movl
dec
push
fldl
jle
and
adc
pop
shl
xor
aas
cmp
lea
cmpsl
cs
and
xchg
mov
insl
dec
outsb
push
sub
mov
pop
mov
push
push
jle
lock
aam
imul
mov
fs
or
ss
pop
sbb
pop
pop
cmc
cmp
mov
test
jb
mov
pop
leave
sbb
jae
or
fistpll
jno
jmp
add
loopne
xchg
or
and
outsl
test
aas
fidivrs
cli
rol
stos
jg
mov
jo
mov
inc
pop
idiv
sub
gs
lret
int
sbb
pop
fcomip
mov
lret
ret
outsb
push
mov
outsb
cli
jp
push
pop
rep
pop
lret
aad
pop
jae
adc
pop
xor
and
cmp
pop
outsb
pop
sub
out
out
mov
sbb
cmpsb
loop
repnz
pop
fildll
pop
mov
data16
xchg
pop
cmp
imul
pusha
or
dec
push
pop
les
sub
xor
in
push
inc
int
rol
jecxz
mov
pusha
popa
lcall
jno
inc
in
pop
mov
pusha
shll
popf
fstps
push
out
inc
int3
mov
insb
and
negl
pop
sub
xchg
loop
popa
pop
mov
sbb
rep
mov
pop
jge
rol
mov
cltd
cmp
pusha
jo
xchg
out
pop
mov
mov
mov
adc
and
test
fnclex
int3
xchg
pop
test
idivl
les
pop
add
jmp
jg
dec
scas
jecxz
sub
in
loop
lods
faddl
fwait
dec
adc
pop
pop
dec
xchg
and
nop
outsb
cwtl
scas
std
ficoms
sbb
mov
fisubs
popa
outsl
adc
jge
add
pop
scas
mov
cmpl
bnd
iret
cltd
test
stos
mov
pop
test
mov
das
pop
loopne
outsb
dec
push
ror
nop
add
mov
ds
pop
aaa
xlat
lds
iret
dec
mov
jo
adc
stos
insb
add
push
ret
push
loope
and
sbb
in
call
fisttpll
or
dec
fdivs
cwtl
lret
iret
jl
lret
or
mov
cmp
std
xor
add
fistl
xchg
xor
add
and
pop
jle
data16
inc
gs
orl
sub
push
pop
jbe
pop
mov
shll
jl
push
nop
pop
or
jecxz
pushw
scas
aaa
jg
add
into
mov
add
out
fldt
inc
cmp
pop
and
jp
dec
int3
xchg
fwait
pop
xchg
daa
xchg
cli
mov
repnz
pop
scas
cwtl
popa
out
lock
push
bound
add
sub
pop
sub
mov
int3
dec
arpl
test
inc
xchg
xor
and
fdivr
or
cmp
aam
dec
aas
pop
popf
inc
iret
sbb
in
push
pop
mov
leave
push
cmpl
jno
test
mov
cmpsl
cltd
ret
leave
push
pop
lock
dec
pop
mov
fwait
sub
sbb
iret
rorl
repnz
xlat
mov
dec
shrb
or
iret
pop
mov
fcompl
jge
xor
add
shlb
cwtl
pop
pop
xchg
int3
xchg
fs
sbb
push
outsl
enter
data16
pop
jbe
in
sbb
lods
jle
inc
or
add
jl
mov
or
dec
and
sbb
or
sbb
shll
aas
push
pop
into
mov
cmp
pop
xor
rorb
rorb
sbb
jecxz
cltd
adc
sbb
adc
pop
dec
test
arpl
bound
dec
fldenv
push
xchg
and
cmc
loope
inc
or
inc
stos
pusha
loop
inc
lret
fs
lods
mov
mov
and
add
and
pop
mov
jnp
push
fiaddl
mov
mov
inc
lahf
push
mov
enter
dec
lods
mov
mov
fstps
ss
sub
lcall
dec
mov
dec
arpl
pop
push
rcrb
sub
sbb
or
or
sahf
xchg
and
lea
pop
daa
mov
loope
mov
push
sub
jl
stc
sbb
pop
ret
or
dec
jg
dec
imulb
aaa
mov
aad
in
jle
jle
cld
push
andl
mov
cld
lret
sarb
or
xchg
cmp
and
pushf
xchg
mov
fld
rcr
pop
insl
lds
jl
arpl
lahf
mov
push
pcmpeqd
dec
jbe
in
aad
mov
add
bound
cs
in
inc
cmc
inc
mov
iret
test
cltd
push
add
pushf
push
mov
dec
pop
std
sub
outsl
adc
adc
push
mov
push
dec
lock
incb
pop
dec
pusha
incl
bound
pop
enter
mov
xchg
pusha
sbb
int
dec
mov
xor
outsl
pop
add
ds
mov
xor
popa
push
test
bound
cltd
sbb
mov
cmc
test
adc
pop
mov
and
dec
lock
push
mov
cmpsl
scas
pop
jae
sub
or
outsb
pop
pop
pop
test
pusha
arpl
jmp
lock
in
out
adc
outsb
push
and
sbb
lahf
in
push
xor
mov
lods
std
mov
in
imul
mulb
ds
ds
xor
jge
jl
push
xor
lea
sbb
xorl
mov
testb
jp
das
pop
adc
pop
jo,pn
fbstp
pop
jno
out
sbb
sub
mov
dec
xor
loope
out
enter
notl
jl
std
insb
sbb
pop
and
insb
iret
pop
in
add
insb
std
or
cs
in
jne
int
stos
rolb
push
xor
jle
or
iret
notb
cmpsb
sbbb
pop
and
mov
add
sbbl
xor
addr16
shlb
in
sbb
out
cld
push
lods
or
aad
push
push
mov
mov
fstpl
js
fstl
addr16
dec
fstl
push
xor
jle
sti
lods
push
fwait
aad
mov
push
add
fdivrs
data16
mov
lods
pop
bound
stos
push
insl
cmp
cld
inc
adc
xchg
loop
pushf
push
ficoms
popf
mull
xchg
jg
test
aas
jno
xchg
insb
mov
subb
sbb
test
frstor
dec
lea
xchg
jae
sub
frstor
xchg
push
or
fstps
push
aam
sbb
dec
adc
mov
jne
dec
out
mov
lahf
hlt
pop
xchg
jle
jnp
mov
cmp
cmpsb
xor
ss
inc
xchg
hlt
sahf
jl
mov
push
aad
inc
insl
out
push
fdivrs
cmp
mov
enter
jmp
cwtl
scas
mov
icebp
sub
mov
test
shlb
aad
notl
gs
repz
lahf
dec
hlt
adc
pop
ss
cmc
jge
lret
inc
jae
fdivrl
xchg
inc
hlt
mov
push
mov
jns
cmp
mov
mov
jbe
outsb
pop
pusha
hlt
mov
clc
and
imul
test
es
sub
mov
push
lods
adc
xor
std
cli
xor
ljmp
push
sbb
cmp
jbe
mov
cmc
jg
ds
int
in
inc
je,pt
ljmp
es
push
mov
outsb
ss
ds
aad
inc
sub
mov
add
lods
gs
push
mov
int3
and
std
push
sbb
hlt
cld
outsb
pop
gs
mov
test
repnz
mov
mov
int3
add
ret
push
and
fldlg2
jo
xlat
sub
lret
mov
movsl
icebp
popa
dec
jbe
cs
pusha
mov
outsl
inc
pop
push
inc
xchg
jnp
lret
fwait
or
rolb
or
push
imul
sldt
enter
xchg
jno
mov
scas
shll
push
ret
inc
adc
xor
adc
jbe
push
cmp
push
jno
pop
jp
aam
js
mov
insb
out
or
mov
lcall
pusha
jge
and
ja
out
or
pop
lods
cs
lret
jbe
aad
imul
mov
js
lock
adc
cs
mov
andb
dec
inc
xchg
sbb
bound
dec
dec
pop
stc
lahf
mov
sbbb
sbb
dec
pop
cld
inc
jb
dec
cltd
mov
pop
fimull
pop
mov
movb
movsl
stc
push
xlat
pop
int
icebp
scas
adc
loop
pop
insl
adc
xor
sbb
stos
xchg
ret
mov
dec
mov
mov
push
imul
stc
push
jno
fidivrl
mov
pop
and
mov
imul
sub
sbb
call
push
bound
je
filds
mov
lret
dec
inc
es
mov
insl
loope
pop
xorb
or
adc
pop
arpl
inc
ja
pop
adc
addr16
nop
pop
cmpsl
int3
shl
jge
or
jbe
les
out
pop
xchg
inc
mov
bound
mov
and
rclb
cmc
pop
lods
add
jl
insl
in
cwtl
push
out
sbb
arpl
push
sbb
rorb
cmp
and
jge
cmp
mov
imul
cmp
insl
mov
int3
lods
jbe
push
cs
into
xlat
sahf
icebp
aaa
pop
daa
pop
pusha
mov
jbe
jge
mov
mov
pop
enter
or
fidivrs
int3
push
aas
xchg
pop
icebp
mov
add
scas
movsl
int
fisubl
int
addr16
and
mov
push
mov
pop
jge
clc
daa
push
das
mov
pop
enter
pushf
loop
sti
pop
in
mov
pop
cmp
mov
stos
sbb
pop
jno
popa
icebp
aam
dec
pop
shll
jns
ds
pop
pop
sti
and
mov
out
jae
leave
fistl
jno
mov
lds
ds
andl
incb
mov
pop
mov
into
std
push
cltd
jg
cmp
xchg
lods
push
outsb
roll
cli
xor
lcall
cmp
mov
test
je
scas
test
insl
cmp
outsb
adc
into
pop
mov
sub
dec
mov
repz
xchg
out
or
sbb
cld
mov
int3
dec
lret
insl
ret
pop
int
in
mov
aaa
pop
aas
ja
push
out
mov
cld
stc
pop
sub
mov
jl
sub
xchg
adc
and
fisubl
lds
stc
in
and
cmp
cmpsb
lock
pop
mov
sarl
xchg
xchg
arpl
jmp
add
fistpl
inc
pop
ret
cmp
repnz
pop
sti
popa
int3
in
je
dec
mov
ja
mov
andb
mov
mov
mov
test
imul
xchg
sahf
push
push
and
mov
sub
js
jp
test
dec
adc
arpl
repz
in
mov
pop
lcall
mov
pushf
cmp
lea
jg
inc
push
pop
mov
and
adc
shrl
sti
shll
push
sahf
pop
cmp
negl
aam
sbb
rclb
mov
inc
fwait
sbb
pushf
xchg
push
xor
jmp
xchg
subl
push
test
in
in
dec
push
inc
mov
in
jecxz
push
and
jae
mov
cs
jge
jp
xor
lods
mov
aaa
jle
jp
jmp
ror
mov
dec
ret
or
in
daa
hlt
das
sub
jbe
jp
xchg
push
arpl
out
jmp
push
cmpl
hlt
clc
cs
xor
rclb
repz
enter
mov
jae
test
or
mov
adc
ljmp
push
imul
pop
ss
cmpsb
cmp
add
popf
add
test
sub
iret
xchg
push
lret
pop
test
dec
lds
dec
dec
mov
lods
andb
mov
fimuls
movsb
jmp
lods
jbe
dec
imul
ss
roll
aas
jo
fildll
daa
xchg
or
pusha
jg,pn
cmpps
cmp
pop
mov
cmp
test
xor
bound
sub
push
test
fmull
cmc
and
jg
addl
mov
arpl
not
shl
xor
push
adc
push
pop
jns
sub
dec
insl
popl
lahf
jg
movsl
std
das
mov
sub
adc
movsb
adc
sbb
mov
in
xchg
adc
adc
sahf
ljmp
mov
push
cmp
dec
dec
push
ds
adc
pop
push
xor
mov
inc
pop
loopne
je
and
push
pusha
outsl
movsl
jb
push
ljmp
aad
fistl
fnop
mov
or
xchg
adc
lret
cltd
lahf
fmuls
sbbb
mov
repz
jge
out
mov
sub
cld
jg
mov
daa
jno
pop
or
fsubrp
mov
jmp
ret
pop
ss
add
push
sub
scas
add
xchg
pop
pop
dec
pop
pop
addr16
mov
sbb
pop
or
mov
pop
sbb
add
dec
das
es
and
jg
jmp
pop
sbb
sarl
mov
movsl
inc
rolb
pop
jo
stos
sub
xlat
add
mov
in
sbb
aam
pop
into
cltd
lods
push
mov
dec
inc
pop
call
add
cmp
fcompl
pop
pop
jl
cltd
or
mov
pop
pop
push
jne
sbb
dec
sbb
mov
outsl
inc
pop
push
or
inc
fwait
pop
dec
mov
ret
cmp
sahf
stc
add
or
ror
adc
mov
dec
xchg
out
cld
addr16
dec
stc
add
cwtl
lret
pop
fxrstor
out
cli
outsl
int
int3
pop
icebp
sub
mov
jge
push
and
out
pop
and
sbb
nop
jbe
rcrb
aam
lcall
fimuls
sub
pop
sbb
int
loop
rcrl
inc
out
repnz
movsl
push
sub
inc
fs
dec
stos
aam
dec
mov
inc
add
pop
dec
xorl
pop
and
jbe
mov
dec
pop
test
outsl
call
ret
pop
cmp
out
xchg
aad
insb
das
pop
inc
pop
push
test
movsl
inc
or
inc
dec
test
bound
sub
lahf
imul
jno
push
inc
testb
scas
add
mov
or
out
in
mov
and
in
and
mov
ja
cli
jge
repnz
cmp
int3
aam
es
insl
sbb
dec
hlt
out
shrb
ret
mov
gs
jge
mov
enter
xlat
test
rorb
pop
sbb
daa
pop
and
mov
dec
sbb
sahf
and
fwait
addr16
in
mov
sbb
pop
mov
test
imul
jl
sti
push
pop
into
push
and
ret
push
xchg
test
mov
xor
sbb
mov
sbb
pop
jmp
or
lods
pop
inc
loope
add
loopw
es
mov
adc
idiv
jbe
inc
or
iret
jle
dec
movsl
lcall
add
cwtl
testb
pop
cli
sbb
pop
lahf
nop
sarl
xor
xchg
pop
popf
jbe
add
and
mov
add
jbe
lds
fildll
add
imul
push
jl
frstpm(287
pop
jg
jbe
lock
testl
adc
es
cld
leave
pop
push
mov
xchg
or
jmp
cmpsb
cmp
xchg
int3
push
shrb
popa
cmp
mov
outsl
adc
jecxz
sbb
dec
pop
mov
push
mov
xchg
sbb
or
inc
pop
scas
stc
ret
lea
push
cli
cmp
cld
loop
dec
pop
and
xchg
adc
dec
cmp
fldt
xor
xlat
mov
mov
pop
gs
ljmp
cmp
mov
pop
pusha
dec
jge
fwait
push
lcall
int
pop
adc
jecxz
insb
xor
push
pop
inc
sub
jnp
testb
push
mov
sahf
inc
jecxz
xchg
jmp
add
stos
shlb
mov
fs
pop
bound
int
mov
flds
dec
mov
mov
ficoms
add
aaa
cli
mov
mov
add
rclb
test
mov
lock
stc
pop
in
cmp
cmpsb
repz
into
push
movsb
ja
daa
cmp
fdiv
aas
xchg
mov
add
push
lcall
and
cld
pop
xor
and
pop
leave
sbb
cmp
or
sbb
add
or
dec
pop
mov
cltd
adc
push
fs
arpl
jbe
adc
dec
mov
cmpsl
shlb
pop
outsb
lret
xchg
subb
iret
pusha
add
mov
loop
and
or
sub
mov
dec
pop
adc
call
push
lock
divl
es
or
fucom
sub
test
xchg
or
push
test
enter
cmp
sbb
jae
test
and
mul
adc
gs
int3
push
rclb
cmp
jg
fs
ja
ja
fists
subb
lea
pop
es
mov
lds
pop
fs
jmp
decb
push
adc
push
std
jbe
outsl
daa
lea
sub
test
push
dec
aad
push
mov
ds
mov
enter
aam
sbb
loope
dec
loope
xchg
inc
or
shrb
adc
insb
jae
pop
outsl
ret
mov
cli
mov
jle
fcmovb
cmp
aaa
aas
jno
pusha
mov
mov
xchg
xor
mov
or
fstl
cmp
jge
into
ja
int3
sar
xchg
in
es
mov
or
insl
add
and
aam
mov
pop
and
mov
inc
je
add
lahf
pop
icebp
ret
rolb
mov
movsb
jae
inc
cmp
bound
es
mov
bsf
and
pop
mov
add
sarb
push
jb
aaa
add
pop
jo
pop
add
pop
inc
cmpsl
call
sub
mov
rclb
dec
xchg
int
adc
push
bound
dec
movl
inc
push
lds
sar
in
sub
mov
add
sti
push
aaa
mov
or
aam
pop
mov
cmp
mov
xchg
sti
mov
in
pop
mov
cli
sub
dec
ja
rcr
dec
ret
loop
cmpsl
jae
adc
sub
mov
mov
pop
inc
adc
shrl
pop
cltd
dec
out
sub
pop
jo
and
imul
test
ret
sahf
loope
out
pop
pusha
in
jge
arpl
ja
xchg
push
es
cmpsl
cmp
add
push
hlt
inc
outsl
stos
testb
mov
lods
pop
addl
push
mov
pop
out
insl
dec
mov
adc
adc
lcall
xor
aam
mov
cmp
dec
pop
jp
int
std
pop
xchg
mov
mov
cwtl
lahf
mov
jmp
or
xchg
jo
inc
pop
fidivrs
push
out
push
jl
je
in
loope
jne
sti
cwtl
int
xchg
xchg
cmp
push
mov
pop
or
bound
cmp
add
xorb
les
loopne
daa
pop
xchg
out
or
and
sub
push
sub
mov
or
push
xchg
push
clc
sahf
pop
lock
xor
mov
stos
ja
cmp
out
ret
testb
mov
fidivs
pop
fnstcw
xor
out
sbb
xor
pop
hlt
jge
daa
es
mov
jmp
fsub
loopne
pop
sub
sbb
xlat
pop
pop
mov
stos
cmp
jge
pop
sub
aam
pop
pop
sbb
inc
adc
iret
ds
cmp
or
xor
addr16
rcrb
mov
jmp
xchg
inc
repz
cltd
or
mov
push
outsl
inc
leave
enter
fimull
xor
fadd
and
pop
xor
in
push
fistpll
test
mov
xor
lds
inc
pop
cmp
fs
xor
mov
pop
shlb
mov
ja
inc
movsl
dec
sbb
aas
leave
xchg
pop
outsl
and
arpl
xchg
xlat
mov
das
mov
push
pop
pop
inc
movsl
pushf
out
shlb
je
outsb
shrl
or
dec
out
jo
fidivrl
cmpsl
lcall
dec
cmp
dec
mov
ss
sbb
jne
test
sub
pop
adcb
push
aam
or
mov
jae
clc
xchg
xchg
xchg
mov
das
push
pop
mov
xorb
clc
jmp
mov
stos
sub
stc
xor
xchg
jbe
mov
push
xchg
imul
pop
add
mov
lods
out
lods
add
cmp
mov
mov
adc
pop
in
and
pop
mov
xchg
xchg
xchg
and
pop
mov
cmpsl
cltd
mov
test
jl
fs
and
bound
xor
rcrb
int
mov
andb
pop
xchg
aad
gs
inc
mov
jbe
pop
cmp
fwait
sub
sbb
aas
cmovg
pop
sbb
in
idivl
gs
gs
push
jp
mov
lock
daa
inc
cltd
mov
mov
lods
jl
cld
dec
je
sub
and
punpckhwd
xchg
ds
movl
bound
testb
cmp
push
fisubrs
dec
push
add
in
fcmovnbe
int3
popa
imul
push
mov
pop
pop
and
testb
xor
loopne
mov
dec
mov
movsb
dec
mov
and
xchg
lea
push
popa
js
adc
push
xchg
jle
jbe
jo
cmp
jno
sahf
cmpsl
pop
cmc
mov
sarl
jbe
pushf
adc
sahf
cwtl
ja
stos
or
pop
xchg
xor
fs
fisttpl
mov
lcall
repz
pop
nop
pop
dec
mov
hlt
in
pop
dec
push
push
mov
mov
aas
push
cmc
cmpsl
jge
movsb
adc
mov
pop
pop
lea
push
mov
mov
popf
add
xor
repz
and
lds
pop
je
ret
mov
jbe
aam
iret
or
jl
repz
sub
sub
pop
jmp
or
jb
add
jle
int
xchg
mov
mov
push
cli
addr16
fistpl
jbe
iret
xor
ficomps
cli
jle
xor
out
jl
test
jne
mov
dec
jne
pushf
outsl
sbbb
mov
in
jl
cs
pop
lret
sbb
in
inc
mov
jge
mov
xor
mov
in
shrb
scas
add
loop
push
xor
dec
cmp
imul
test
push
mov
mov
in
test
xchg
fsubrl
fs
mov
xor
push
sahf
sbb
or
mov
push
aad
mov
pop
dec
dec
xlat
mov
pop
subl
mov
das
pop
mov
leave
lea
or
push
jns
jecxz
xchg
cmp
out
or
scas
mov
xchg
mulb
lret
enter
inc
mov
into
mov
out
pop
push
ret
outsb
out
test
movhps
dec
imul
aad
rorl
push
mov
cmp
fistps
aam
lcall
jne
aas
mov
popf
or
jae
ljmp
ds
jl
bound
xor
push
in
push
stos
stos
fistps
or
ret
jle
sub
iret
ret
push
fstp
mov
sti
mov
pop
fstl
popa
test
cs
cld
stos
jecxz
mov
test
dec
mov
std
pop
cmp
cli
jnp
add
mov
pop
sbb
push
pop
or
cmp
push
cmp
pop
inc
daa
cmp
sahf
pop
out
out
sbb
lcall
xor
sub
mov
fistl
pop
ljmp
or
mov
scas
pop
jge
repnz
mov
cli
xchg
jle
mov
xor
jns
xor
sub
pop
fidivl
shlb
sti
pop
push
loopne
dec
scas
sub
pop
sarb
clc
int
push
mov
jle
cs
xor
stc
lock
push
shr
or
mov
pop
push
jmp
jno
lret
pop
jae
push
bound
xchg
mov
pop
xchg
stos
mov
fdivrs
filds
jbe
or
cltd
dec
push
loop
jo
out
cli
jge
gs
into
pop
int3
repnz
jg
imul
or
outsl
in
stos
in
mov
jne
inc
jp
in
inc
xchg
sbb
push
inc
bound
test
push
cmc
push
and
out
adc
and
adc
hlt
adc
and
xchg
popf
add
das
loop
xor
test
sbb
adc
jmp
mov
pop
sub
lahf
clc
pop
and
mov
xchg
sti
xor
or
stc
mov
push
pop
jns
orl
xchg
cmp
jge
xchg
mov
push
dec
divb
dec
movl
nop
pop
cmp
jmp
sbb
push
gs
movsb
aas
mov
sub
pop
and
jp
pop
movsl
push
dec
addr16
inc
fstps
icebp
pop
mov
pop
bound
dec
pop
mov
xchg
int3
cld
jg
imul
dec
dec
inc
add
mov
cs
out
sub
lret
pop
fcomps
cmpb
movsl
cmp
xor
jmp
jo
fs
fcmovb
fiadds
inc
testb
mov
sub
mov
pop
cwtl
mov
sbb
mov
bound
icebp
push
in
sbb
outsb
jp
or
push
lahf
fnstsw
in
push
into
ret
dec
jl
mov
pop
push
int3
and
pop
je
push
jp
lds
add
jno
inc
insl
es
loopne
loope
xchg
int
jmp
xchg
pop
add
insb
xchg
and
aaa
pop
mov
sti
mov
cmp
push
inc
bound
lock
dec
sub
mov
rcll
pop
aam
mov
mov
or
nop
call
xor
hlt
pop
adc
rcrb
mov
and
mov
cmp
add
mul
repz
lcall
pop
aam
add
xbegin
scas
mov
xor
dec
push
pop
mov
movsl
mov
inc
daa
sub
sahf
pop
adc
pop
movsb
pop
aaa
pop
dec
repz
and
pop
enter
mov
out
scas
xchg
jg
xchg
imul
aas
fistl
lea
mov
std
dec
xor
ds
dec
add
popa
push
pop
cmc
std
or
ja
pop
adc
push
mov
icebp
sbb
push
ja
inc
mov
dec
mov
in
xchg
adc
pushf
adc
and
jae
rolb
ret
or
adc
roll
in
mov
add
xor
mov
xchg
cwtl
loopne
cmpsl
pop
pop
sbb
pop
scas
xlat
js
jns
subb
testl
fucom
or
xor
int
in
and
cmp
mov
fiadds
push
push
std
pop
mov
ja
lret
xchg
sub
mov
pop
or
fwait
xor
mov
jge
pop
pusha
pop
notl
cmp
std
sbb
jo
mov
add
bound
imulb
or
daa
mov
bound
pop
nop
push
lds
cmpsl
mov
mov
fisubrs
pop
xchg
ljmp
jo
mov
in
and
and
mov
mov
ffreep
jg
dec
mov
xchg
and
arpl
dec
jecxz
push
movsb
cmp
jp
or
pop
or
jns
imul
adc
dec
xlat
test
push
popf
jle
mov
pop
out
xor
ljmp
pushf
add
lock
cmc
rclb
pop
in
push
ja
xor
jmp
cmc
add
inc
insl
pop
jl
dec
sar
insl
hlt
add
loop
and
cmc
hlt
clc
lock
popf
push
push
xlat
and
mov
out
enter
pop
mov
insb
adc
pop
lods
jno
adc
outsb
inc
dec
xchg
ds
insl
stc
xchg
jne
stc
adc
hlt
orb
loope
cld
sbb
mov
inc
push
rclb
inc
inc
inc
jle
rcrl
xorl
lea
insl
in
lret
or
loop
arpl
adc
loopne
inc
inc
pop
inc
inc
jl
negl
xor
clc
add
adc
xchg
pop
lock
sbb
mov
clc
ja
mov
or
mov
xchg
test
jmp
jge
mov
stc
test
jae
cld
in
and
test
sub
loope
and
xchg
and
xchg
cwtl
outsb
and
bound
cld
shl
adc
fidivrs
into
js
cmp
mov
les
adc
sbb
stos
fwait
adc
push
ds
into
pop
sub
loopne
out
mov
mov
out
cmp
push
int
sub
in
arpl
subb
mov
cwtl
clc
adc
sarl
shll
jno
xchg
inc
xchg
mov
pusha
lds
lcall
add
adc
fidivrs
shrl
sar
out
xchg
cmpsl
cmc
rol
roll
ja
fldt
sub
lds
jbe
pushf
out
test
sub
cmp
pop
push
shll
and
or
insl
sbb
inc
cmp
daa
lret
dec
xchg
ss
sub
pop
lods
pop
scas
aas
xor
or
in
movsb
pop
insb
pop
xor
inc
jno
jbe
out
jb
cli
lret
cmp
pop
sub
jne
push
jl
pop
xchg
adc
sub
pop
scas
xchg
aaa
jecxz
add
es
sti
inc
lock
jne
pop
sbb
jle
dec
or
xchg
rcrb
ret
rcrb
mov
sub
mov
push
xchg
out
pop
aas
xchg
adc
inc
xchg
mov
sbb
cmp
pop
stos
mov
fisttps
mov
stc
push
cmpl
xlat
sbbb
mov
pop
rcll
dec
outsb
cwtl
fcmovb
or
pop
mov
cs
aas
das
add
mov
and
push
mov
fistl
jbe
xchg
int
stos
repnz
push
popa
daa
outsb
add
aad
jns
int
jo
je
mov
test
sbb
cmp
pushf
add
cmc
in
push
jne
icebp
pop
cmp
mov
out
movsl
pusha
sbb
jge
mov
fsts
pop
js
in
mov
jbe
adc
dec
int
mull
jae
cmp
pop
xor
jg
jo
sbb
jmp
mov
add
adcb
int
pop
and
dec
inc
mov
fldenv
jnp
inc
fs
or
mov
adc
adc
out
stc
and
das
popa
repnz
imul
je
movsl
jns
sub
cwtl
sbb
mov
sti
add
xchg
rorb
xchg
mov
sbb
mov
push
jns
mov
aam
pop
add
mov
cmp
movsl
shl
jp
adc
maxps
lods
mov
adc
negb
jnp
pusha
xchg
sub
popf
push
in
cltd
stos
add
call
sbb
hlt
cmpsb
mov
inc
aad
adc
pop
in
sub
mov
add
jo
test
mov
loopne
popa
push
data16
inc
enter
nop
leave
das
xor
push
inc
mov
dec
and
jno
inc
test
cli
pop
inc
pushf
fcoml
jmp
test
pop
sbb
int
in
ds
idivb
jg
adc
pop
rorl
pop
xchg
inc
xchg
outsl
std
mov
add
pop
xchg
scas
pop
icebp
sub
pop
mov
mov
jg
jp
dec
or
xor
xor
test
pop
rcll
ds
hlt
sbb
pop
ljmp
push
pop
shl
add
mov
xchg
push
pop
andl
adc
mov
addl
mov
mov
mov
cltd
pop
xchg
insb
push
movl
leave
notb
xchg
push
mov
add
sub
sahf
repnz
and
ret
fsubr
adc
movsl
pop
inc
pop
subb
mov
inc
push
into
push
xchg
in
popl
bound
sbb
daa
sub
out
push
push
pop
pop
sbb
sbb
nop
mov
mov
fld
dec
pop
iret
lock
mov
pop
xchg
jecxz
push
idivb
iret
jnp
mov
lahf
cmp
add
jb
adc
bound
cmp
mov
jo
or
loop
std
cs
pushf
int3
shl
shrl
dec
out
icebp
add
inc
lea
mov
cmp
mov
jbe
and
mov
jb
pop
repnz
jg
pop
jp
jmp
sti
mov
cltd
int3
pop
cmpl
cmpsb
ret
cmp
sub
and
mov
fcompl
sbb
or
jo
insl
and
scas
mov
popa
push
dec
jmp
pop
pop
jno
pop
adc
pop
das
xchg
adc
cwtl
xor
mov
inc
cmc
repnz
notl
fdivs
mov
xor
subl
or
icebp
cmp
lods
shlb
test
xchg
es
push
inc
popf
daa
sbb
jb
test
pop
cmp
lock
mov
aam
negb
add
cwtl
jnp
xchg
xchg
pusha
icebp
push
repnz
jle
adc
and
mov
loope
sbb
pop
xchg
inc
enter
pop
outsl
out
icebp
leave
dec
int
push
fidivs
pop
cli
push
popa
and
jg
out
xor
jnp
xor
and
pop
pop
scas
sub
xchg
sbb
sub
dec
lret
ret
popa
cltd
adc
int3
sahf
add
jns
stos
fcompl
push
loop
ret
loope
lock
repz
iret
cld
and
pop
gs
sti
pushf
loopne
pop
js
or
shl
sbb
cmpsb
pop
adc
mov
cmpl
out
std
mov
push
dec
ljmp
outsb
aam
cmp
in
jl
stc
pop
pop
out
jge
into
std
sub
mov
scas
xor
pop
popa
fstpt
aam
sti
dec
adc
int
and
inc
dec
push
cli
jae
dec
push
pusha
loop
xor
push
pop
outsb
shlb
add
pop
or
scas
xchg
pop
lahf
lock
repnz
lods
mov
pop
lea
stos
pop
inc
test
mov
mull
scas
cmp
popf
ja
repz
ret
adc
pusha
nop
and
mov
cmpsl
mov
les
mov
pop
mov
imul
or
mov
test
inc
jae
cmp
pop
into
pop
cmpsb
push
mov
out
mov
inc
mov
add
sahf
fisttpl
sub
in
clc
and
and
or
mov
lahf
int3
or
ret
dec
dec
dec
mov
pop
aas
call
popf
in
dec
or
insl
ds
test
stc
lds
lock
pushf
or
xor
std
mov
add
cli
mov
dec
push
loope
jecxz
cmp
jp
mov
or
imul
bound
sub
pop
xor
insb
ficompl
cltd
jle
ja
xchg
xchg
xor
pop
adc
icebp
adc
pop
test
lahf
push
pop
stos
out
jle
mov
xlat
stc
repz
xchg
cmp
pusha
movsb
add
ret
sbb
sub
sbb
sarl
pop
jmp
mov
sahf
mov
lcall
xchg
push
les
pop
fdivs
fcmovb
jbe
cmp
clc
loop
int3
pop
rol
add
jl
iret
jno
imul
pushf
pop
cmpsb
add
dec
push
test
mov
adc
ja
xor
out
mov
or
ret
xchg
sub
es
in
cmc
scas
mov
and
cmc
mov
xchg
inc
mov
bound
and
add
mov
cltd
sbb
fistpll
adcb
mov
sub
push
inc
jg
and
rol
div
adc
ja
push
and
js
popa
dec
sbb
sti
push
xchg
das
gs
jge
int
mov
loope
pop
repnz
fcomip
push
xor
xor
and
push
and
jl
cmc
shrb
mov
sub
lea
sbb
sti
vandps
into
bound
fidivrl
shll
dec
and
mov
pop
push
les
test
incb
cwtl
mov
inc
mov
lds
lock
pop
fsts
lcall
jnp
cwtl
mov
or
push
mov
pop
das
jle
imul
jg
xor
fcmovnbe
loopne
mov
xchg
mov
xchg
aad
bound
lock
out
xchg
cmp
cli
pop
dec
push
test
mov
movsl
inc
jno
jmp
sbb
inc
ret
in
pusha
mov
jo
jge
repnz
xchg
jg
ljmp
and
movsb
in
mov
inc
bound
test
rcrl
xor
in
fisubrl
and
or
cli
sbb
insl
sub
aaa
in
sbb
pop
stos
xchg
cmp
pop
mov
pop
sub
jge
fs
push
bound
aaa
xor
add
in
pop
add
pop
mov
xchg
or
pop
push
mov
sub
inc
lcall
dec
or
add
and
mov
popa
ja
xor
lods
pop
clc
push
or
pop
icebp
ret
pusha
iret
and
pop
xchg
cmp
cmp
push
les
icebp
out
ss
cs
and
cmp
or
pop
pushf
cmc
push
pop
js
shr
pop
push
in
or
data16
pusha
in
mov
sbb
push
jl
inc
jge
loopne
out
pop
shrb
fistps
js
mov
std
mov
sti
fildl
mov
adc
pop
out
pop
mov
mov
and
lock
rcrl
shll
mov
sarb
dec
pop
pop
test
sub
push
mov
sbb
xchg
cmp
fistpl
push
cmp
cs
jge
pop
cltd
xor
mov
lds
movsb
loop
arpl
dec
mov
pop
mov
adc
or
xchg
add
js
xchg
repnz
pop
mov
bound
mov
js
push
push
stos
pop
in
mov
sbb
pop
and
pusha
lahf
cmp
cmp
add
adc
mov
jnp
and
xchg
jno
push
out
hlt
add
iret
sti
in
cmpsb
mov
repz
imul
ljmp
xchg
inc
sub
pop
cmp
xchg
xchg
cmp
outsl
andl
scas
xchg
sbbb
mov
lahf
aad
jl
dec
sub
int
aaa
insb
hlt
jne
jle
inc
lcall
imul
out
cmp
dec
and
cmp
mov
xor
cmp
dec
lock
fsubs
sub
push
bound
xor
repz
fdivrl
call
outsb
jno
in
xchg
fwait
jge
testb
adc
xchg
std
jo
aam
aad
pop
insl
pop
jecxz
outsb
les
cli
popa
cmp
sbb
subl
jo
pop
mov
xor
ds
std
js
inc
and
sub
loopne
mov
push
arpl
push
call
add
add
push
test
fstps
xchg
lds
loop
into
cmc
iret
jb
and
jl
push
push
shrb
lret
jp
pop
scas
inc
test
movsl
xlat
inc
dec
mov
call
cmpsb
and
mov
aam
push
in
cmpsb
loopne
jo
mov
mov
test
add
into
pop
mov
paddw
pop
lret
pop
rcl
je
lods
arpl
fnstsw
jb
fs
pop
sbb
mov
es
pop
xchg
testl
and
int
xor
es
mov
test
adc
cwtl
dec
jl
in
pop
pop
lret
loopne
mov
mov
stos
add
ret
stos
push
pop
add
inc
aad
mov
push
mov
rclb
pop
jb
mov
pop
add
in
adc
lods
jbe
lock
mov
bound
out
in
pop
loopne
pop
push
mov
das
mov
pop
test
rorl
xlat
clc
loopne
mov
dec
mov
inc
pop
pusha
loop
into
mov
mov
mov
push
pop
dec
jbe
movsb
cld
lock
add
lds
mov
inc
in
out
dec
lcall
add
add
loopne
cmp
mov
adc
hlt
pop
stos
in
jle
in
cwtl
int
fldt
ret
sub
and
incb
sbb
pop
loope
and
inc
inc
cs
cmpsl
jg
sti
mov
sarb
mov
push
ds
out
ret
idivb
add
insb
xor
imul
mov
pop
idiv
pushf
sti
adc
or
cmc
cld
in
mov
int
cltd
sub
xchg
jne
jnp
jae
movsb
cmc
loop
lods
jne
shll
xlat
scas
in
sub
adc
jmp
cmc
push
es
je
popf
ds
push
adc
push
mul
jo
insb
shl
fiadds
cltd
out
loope
sbb
cs
cs
sbb
std
aam
cmpsl
sub
adc
mov
sbb
adc
xor
jns
leave
stos
mov
in
adc
cmc
add
cwtl
mov
sbbl
xchg
mov
int
and
scas
jnp
cs
push
sub
pushf
sarb
idivl
mov
std
or
std
or
fisttpl
adc
aad
std
push
mov
fnstsw
in
es
gs
mov
loopne
cld
pop
mov
push
mov
cmpsl
addr16
jo
fbstp
dec
lock
pop
stc
pusha
lods
ds
push
sbb
aam
loope
cmpsl
mov
bound
add
xchg
scas
cmpsl
xor
jge
mov
cmp
stos
pop
mov
rcrb
and
shl
scas
stc
dec
lock
pop
inc
popa
mov
sub
cs
cld
push
dec
mov
nop
pop
pop
and
int
cmp
das
jge
ds
es
xlat
mov
std
int
mov
mov
mov
mov
enter
addr16
cmp
addr16
imul
fisttpll
lret
subb
inc
loope
repnz
dec
pop
push
lahf
xor
scas
nop
dec
or
lock
push
xor
cmpl
das
cmp
xorb
das
cmpsl
dec
inc
inc
sbb
mov
and
ja
cwtl
pusha
mov
fists
pop
pop
mov
sbb
into
rolb
sahf
push
pushf
mov
add
push
lret
aam
jmp
out
sbb
mov
lret
imul
daa
fwait
adc
inc
pop
add
int
pop
mov
jl,pt
adc
in
mov
lret
pop
adc
adc
sub
fwait
inc
sbb
popa
pop
outsl
xor
std
aam
jo
fisubs
sub
jl
jl
imull
dec
stc
faddl
movsl
xchg
lcall
lods
xchg
insl
inc
sub
pop
add
mov
outsb
jp
fld
and
xor
cmp
fcompl
add
leave
pop
pushf
or
cld
sahf
ljmp
enter
sbb
and
xlat
pop
mov
pop
shrb
leave
int
add
mov
or
cmp
lods
push
scas
push
decb
sub
pop
stos
lea
mov
lods
adc
scas
sbb
xchg
addr16
dec
xchg
xor
mov
mov
pop
inc
rol
pop
dec
mov
out
or
xlat
xchg
mov
mov
fildll
add
xor
cwtl
das
pop
jns
mov
push
mov
repz
out
es
ja
pop
popa
dec
aam
pop
or
xchg
pop
mov
jmp
dec
inc
inc
sub
push
mov
cmp
pop
sbb
sub
sarl
mov
pop
push
pusha
repnz
xchg
xchg
mov
jns
test
and
mov
rorl
outsb
pop
inc
xchg
cmp
outsl
jbe
jge
sbb
popf
sbb
adc
xchg
cld
pop
sbb
cli
mov
and
sbb
cmc
les
and
cmp
inc
pop
mov
aad
mov
cmpsb
jns
push
mov
bound
mov
lods
loopne
outsb
rcrl
call
sbb
sub
dec
jmp
mov
lahf
xor
inc
sbb
fwait
xor
pop
int3
cwtl
aaa
add
lahf
or
adc
jle
jns
sbb
mov
scas
push
cmp
bound
fisubs
rcrl
mov
inc
popf
lock
add
dec
int
mov
insb
or
mov
outsl
pop
pop
addl
adc
mov
xchg
pop
mov
xchg
mov
pop
clc
arpl
push
enter
pop
mov
lods
xchg
into
pop
pop
jo
test
rol
mov
idivb
pop
test
jbe
pop
jmp
inc
out
pop
faddp
sub
into
push
enter
add
pop
mov
dec
and
daa
push
ret
inc
xor
jbe
lcall
jb
pushf
xchg
subb
cmc
adc
sbb
nop
fs
or
out
movsl
pop
imul
outsb
mov
loop
in
stos
fwait
insl
cli
cmp
xor
imul
xchg
sahf
test
pop
push
out
xchg
add
shl
pop
cmp
fbld
pop
pushf
jns
imul
xlat
addl
dec
pop
sub
test
push
pop
add
pop
push
push
bound
cwtl
cmp
fidivrs
sub
out
test
jmp
push
and
loopne
cli
imul
inc
int3
mov
fld
test
cmp
and
jbe
movl
test
jbe
pop
xchg
cld
daa
mull
pop
mov
pop
or
cmpsl
fsubs
mov
movzwl
les
pop
dec
dec
mov
mov
mov
dec
jmp
das
cmpsl
in
movsb
push
pop
enter
mov
rcrb
push
leave
test
bound
xchg
cmp
incb
cli
xchg
arpl
adcl
fnsave
mov
push
lea
pop
scas
dec
push
rcll
imul
push
xchg
xor
insl
cld
and
or
xchg
mov
int
and
mov
lods
outsl
dec
stos
pop
sbb
sub
cmpsb
add
pop
jp
fdivs
jbe
sub
push
lret
ficoms
cltd
xchg
in
mov
xor
xor
sub
into
lcall
imul
inc
xchg
aad
xor
jns
pusha
xchg
inc
lret
mov
pop
push
xchg
and
cmp
mov
pop
in
push
shlb
pusha
int
or
movsb
lret
push
scas
add
sbb
pop
mov
iret
cwtl
dec
xor
mov
sub
call
push
mov
fisttps
mov
gs
and
push
test
pop
jb
adc
dec
jmp
mov
pop
negl
add
xchg
mulb
scas
sahf
repnz
inc
scas
stos
lds
jle
in
sbb
cld
jl
int
pop
inc
int3
xchg
sahf
fcomi
push
orb
sti
sbb
outsl
and
mov
rorl
pushf
in
mov
xchg
cmpsl
sbb
mov
jbe
cli
das
lahf
cwtl
ret
dec
fimuls
jle
add
shr
test
pop
jbe
xor
in
lds
pop
mov
test
and
sbb
xor
repnz
mov
push
es
shl
out
xorl
les
mov
cld
sub
out
sbb
leave
push
xor
add
xchg
call
mov
sub
cwtl
or
mov
inc
fiadds
or
jbe
dec
xchg
aas
scas
mov
les
pop
outsb
inc
dec
cmp
pop
cs
mov
cli
xor
in
jns
dec
pop
mov
roll
aam
xor
mov
jbe
and
cmpsl
jl
push
xor
test
cmp
mov
push
cltd
stos
mov
inc
cmp
pop
std
sub
mov
stos
stos
mov
sbb
imul
out
fmul
xchg
inc
js
loopne
push
push
aam
sbb
lcall
xchg
inc
stos
pop
adc
cwtl
and
stos
scas
ss
roll
movsb
mov
pop
pop
and
mov
or
xor
les
lret
aaa
pop
adc
xchg
test
mov
inc
nop
shl
or
mov
ret
stos
mov
push
xchg
pushl
pop
cmp
mov
cmp
pop
fistpll
dec
shl
stos
inc
out
movsb
std
in
pop
sbb
xor
pop
lret
adc
fld
mov
or
imul
call
out
pusha
pop
jp
js
lcall
mov
scas
cmp
jnp
sbb
clc
jg
out
and
test
mov
or
adc
sbb
rcll
jne
adc
dec
and
pushf
mov
dec
jle
pop
fisubs
pop
mov
sub
pop
jmp
sbb
push
mov
add
and
adc
sti
fcomps
push
scas
pop
aaa
lret
rcrb
sub
aam
xchg
cmp
jb
cltd
sub
xchg
pop
mov
and
mov
stc
jbe
mov
inc
bound
daa
out
mov
movsb
mov
xor
adc
lods
out
inc
jg
movsl
xor
xchg
pop
into
mov
pop
leave
lcall
pop
rcl
xchg
and
mov
dec
mov
fsubp
imul
push
mov
inc
push
push
xchg
bound
cmp
ret
pop
out
push
mov
aaa
shlb
fs
dec
mov
into
mov
testl
lahf
outsl
je
clc
leave
sub
push
lea
or
int
pop
clc
push
arpl
ds
lret
mov
dec
dec
mov
stos
or
xorb
outsb
push
bound
lock
xor
or
ds
in
in
insb
insb
mov
mov
push
pop
add
mov
dec
data16
and
or
ret
int3
in
lea
jbe
jae,pn
in
sub
outsb
shlb
lds
rcrb
sti
xchg
jl
push
sbb
loopne
or
inc
es
mov
add
push
xchg
dec
mov
loope
fstp
cs
icebp
jno
lea
fcom
outsb
subb
int3
fdiv
and
sti
into
rol
push
sub
stos
aaa
and
mov
sub
sbb
jo
int
and
mov
arpl
out
dec
sti
enter
mov
or
dec
scas
pop
pushf
mov
or
or
pop
dec
lea
roll
outsl
mov
bound
loopne
adc
int3
dec
scas
out
xor
cltd
sarl
scas
pusha
ret
cmp
add
aas
push
add
in
and
push
clc
aaa
outsl
pop
cltd
test
pop
pushf
mov
insb
aas
cmp
gs
call
rcr
xor
es
popl
push
fmuls
inc
inc
test
or
adc
mov
adc
add
pop
add
add
adcb
fmul
push
xchg
adc
fisubrs
xchg
and
inc
je
inc
sbb
loopne
pop
fistpl
push
pop
stos
jle
cmp
inc
sub
int3
jns
mov
pop
sbb
jmp
out
psrad
nop
and
incl
pusha
dec
inc
movsb
arpl
pop
dec
bound
shll
adc
mov
nop
faddl
out
cmpsl
lcall
xchg
and
mov
pop
cltd
call
out
xchg
mov
sbb
aam
or
adc
ja
jmp
mov
push
adc
lock
xor
ljmp
mov
xor
fldenv
pop
xor
pop
mov
mov
aas
popa
sti
test
and
pop
adc
sbb
add
xor
test
pop
orb
ficomps
fcoms
in
subl
fistl
cmpsb
pop
mov
repz
in
or
inc
popa
adc
jbe
pop
outsb
aad
test
aaa
fmull
cld
jb
jne
jg
pop
xor
pop
nop
sahf
mov
out
or
push
aam
mov
out
sbb
stos
dec
inc
stos
pop
mov
jbe
sub
push
ret
adc
jne
ret
sbb
mov
lods
into
out
ret
pop
mov
pop
cwtl
addb
loope
out
jne
pop
lds
cmp
ret
ds
fdivl
fwait
insl
outsb
les
jb
cmp
sti
inc
out
fimuls
sub
and
sub
outsb
or
iret
sub
push
xchg
es
xor
shrb
pop
into
or
sbbb
add
dec
pop
pop
fsubrs
pop
add
pop
mov
pop
mov
inc
push
insl
pop
push
push
dec
adc
jecxz
push
push
mov
mov
xchg
jbe
std
pop
xchg
cmpsb
xchg
bts
adc
subb
dec
outsl
shl
fwait
lock
cltd
aam
test
cli
ret
out
lret
pop
and
cwtl
jg
cmp
xchg
inc
mov
cld
aam
pusha
push
mov
inc
push
pop
add
xchg
add
scas
out
pop
getsec
push
out
mov
jbe
stos
mov
xchg
jmp
push
sub
loopne
pop
push
mov
outsl
jecxz
sub
sub
pop
mov
addr16
cmp
bnd
push
mov
test
or
xchg
out
sbb
xlat
inc
ljmp
mov
movsb
push
pop
shll
mov
jbe
stc
addr16
sbb
gs
xchg
fwait
pop
xor
arpl
pop
in
lea
mov
pop
sbb
jecxz
outsl
push
imul
je
movsl
adc
lock
pop
adcb
sbb
pop
sub
and
push
mov
mov
ficomps
sub
sub
and
push
test
subb
xchg
sbb
pop
mov
insl
int
add
sbbl
arpl
fsubrp
adc
pop
aas
lods
aam
das
push
int
pop
xchg
jle
rcrl
int
fmuls
sbb
lea
js
ja
fcmovb
cmpsb
inc
lock
ret
lods
gs
add
mov
leave
or
loop
mov
lds
add
pop
jl
pop
push
das
inc
test
cmpsl
in
lods
sub
sbb
shlb
dec
fs
in
xchg
and
inc
outsl
enter
pop
xor
push
shll
ja
add
lea
inc
pushf
ret
mov
popf
and
xor
stos
test
cwtl
pop
in
arpl
test
sbb
pop
scas
sbb
mov
inc
in
loope
movsb
jbe
cmp
mov
inc
push
test
xor
ss
xlat
pop
and
xor
mov
pop
push
in
icebp
pop
and
pop
fiaddl
hlt
lahf
out
inc
pop
inc
jne
ds
mov
pop
ljmp
mov
xchg
jmp
adc
inc
or
call
dec
dec
dec
add
pop
adc
inc
inc
outsl
cmp
pop
ret
dec
jnp
shlb
lds
xchg
add
jb
mov
outsb
add
call
bound
jns
sahf
ljmp
mov
or
repz
pop
pop
mov
testb
xlat
in
sub
cmp
outsb
loopne
popf
cmp
mov
adc
and
add
jns
cs
lret
roll
sub
arpl
push
push
and
inc
dec
lds
ja
cmp
stos
and
dec
enter
iret
addl
stos
dec
cltd
or
ja
outsb
mov
pop
xlat
adcb
jle
insl
mov
int3
and
sti
mov
fdivr
inc
aas
fistpll
outsl
popf
gs
fnstsw
in
popa
xchg
jne
push
out
rorl
xor
hlt
inc
cmp
fsubs
xor
cwtl
xchg
vpunpckhqdq
xor
push
loopne
test
push
cmp
sbb
pop
fwait
jnp
push
xchg
nop
mov
pusha
outsl
mov
mov
cmp
roll
inc
cmp
push
mov
js
in
pop
mov
cmpsl
sarb
sub
and
pop
outsb
pusha
lcall
call
cmp
lahf
fnstenv
jbe
jne
mov
sbb
inc
sub
pop
xlat
mov
mov
mov
lcall
iret
test
jnp
icebp
pop
repz
rcrl
or
add
fistpl
sub
xor
js
add
pop
lock
adc
hlt
cmp
repnz
adc
enter
cs
pop
adc
repnz
pop
scas
pop
dec
cmpsb
int3
pop
pusha
push
pop
pop
dec
mov
mov
add
sarl
sub
mov
pop
pop
or
mov
mov
mov
or
dec
push
add
pop
mov
adc
pop
and
mov
shrl
int3
sbbl
and
bound
outsb
cmp
hlt
jle
dec
cld
dec
mov
cld
pop
orb
pusha
push
xchg
sti
mov
pushf
test
pop
and
fdivl
pop
std
and
sbb
jp
scas
pop
xchg
sarb
pop
or
xor
adc
leave
pop
pushf
mov
aaa
fisttps
xchg
xor
pop
mov
add
lods
xchg
inc
lahf
mov
inc
jbe
sbb
cli
jg
adc
lods
mov
icebp
pop
inc
movsb
into
ret
jns
gs
jb,pn
imul
xchg
jb
push
mov
pop
adc
pop
cmpl
mov
cld
pop
fsubrs
sbbl
aam
adc
push
lock
adc
pop
lret
xchg
stos
scas
or
mov
in
addr16
cmc
incb
das
outsl
cmp
ss
inc
in
adc
pop
mov
add
sbb
imul
bound
jl
or
pop
xchg
dec
mov
imul
xchg
pop
jg
fs
cmp
push
inc
mov
or
loopne
scas
clc
pop
sub
dec
nop
ficompl
unpcklps
shll
lret
dec
int
aam
cmpsb
or
or
ror
jmp
jg
mov
xor
popa
jbe
sarl
cli
in
mov
mov
inc
cmpsl
xchg
sbb
lahf
ss
cli
adc
cmc
push
jle
push
fstps
xor
loope
jo
lock
int
lahf
add
add
adc
imul
sbb
mov
push
push
sub
std
sub
rol
pop
mov
or
pop
aad
mov
repnz
xchg
inc
dec
nop
stos
mov
leave
xor
into
and
in
pop
pop
incb
add
pop
cmp
push
inc
fwait
dec
mov
pop
pop
outsb
rdpmc
sahf
rcrb
ficompl
sbb
in
jnp
push
repnz
add
xchg
push
xor
push
sbb
mov
xchg
jnp
xlat
loop
mulb
mov
test
sub
add
xor
insl
add
in
mov
daa
sub
dec
in
es
jb
jbe
xor
cmp
pop
jecxz
fnsave
or
pusha
test
xor
orl
pop
fistpll
pop
lcall
leave
pop
xchg
push
movsl
jecxz
mov
or
xchg
mov
cmp
add
jmp
stos
xchg
ret
mov
pop
push
dec
cmp
push
insb
xchg
lods
shlb
shlb
jbe
cmc
enter
clc
bound
aas
pushf
ret
mov
ret
push
inc
mov
insb
mov
cld
dec
in
das
dec
pop
loop
cmp
ds
mulb
jl
and
adc
scas
mov
fs
dec
bound
xchg
sti
cmp
mov
xor
xor
push
cbtw
pop
or
or
jecxz
mov
sbb
es
dec
sahf
lahf
pop
decb
xor
push
lret
xchg
fwait
test
pop
xchg
jns
sub
push
lds
aas
mov
aam
dec
mov
lahf
xor
cmp
jge
mov
cmp
mov
cwtl
pop
enter
push
jb
in
xchg
sub
push
push
cs
movsl
dec
pushf
rcrb
mov
pop
mov
test
dec
add
push
xchg
pop
cmpb
and
pop
push
xchg
std
movsl
in
cmc
pusha
xchg
bound
or
mov
jb
mov
pop
sbb
pop
and
out
jge
jbe
sbb
mov
mov
clc
bound
mov
mov
movsb
lret
xor
clc
and
icebp
adc
adc
pop
push
pop
lods
adc
mov
xchg
push
out
fldenv
mov
cmpsb
xor
shrb
cs
ret
push
mov
mov
xchg
in
xor
es
pop
cmp
repnz
and
stc
out
mov
cmc
or
jg
inc
and
mov
test
insb
xor
adc
pop
mov
push
pop
js
or
or
and
jns
stc
sub
xor
xchg
lret
mov
fwait
cmp
sub
insl
mov
xor
in
or
mov
pop
cmpsl
sub
fdivrs
xchg
das
push
pop
dec
stos
mov
adc
pop
addb
rcr
fs
mov
repnz
loope
nop
inc
mov
pop
ljmp
fbld
inc
adc
mov
inc
add
sub
aam
lcall
int
leave
dec
ljmp
inc
pop
popf
sub
push
dec
xor
pop
push
decb
pop
adc
dec
addr16
int3
int
pushf
jmp
movsl
dec
out
pop
mov
mov
sub
stc
pop
xchg
andb
lea
fst
loop
pop
cmpsb
cs
mov
int3
jle
or
mov
das
pop
mov
mov
mov
test
cmp
jge
loopne
fadd
dec
cmp
arpl
xor
cld
sbb
add
jp
inc
and
pop
pop
xor
in
aam
pop
sti
pop
jmp
cmp
insl
xlat
stos
mov
clc
dec
shll
or
rcrb
or
not
dec
and
ljmp
mov
sbb
test
xchg
pop
out
push
dec
movsl
adc
jb
es
enter
addb
pop
insl
into
inc
xchg
call
cmc
or
cmp
hlt
push
push
mov
rcll
pop
push
mov
repz
mov
mov
shrb
popa
or
gs
lret
mov
std
sub
mov
cli
pop
int3
sbb
test
lods
add
movsl
mov
mov
xor
sub
dec
in
push
bound
int3
outsb
stos
lret
stc
insb
jne
jl
sbb
jg
inc
dec
and
mov
push
sub
bound
adc
add
es
lahf
movsl
add
negl
in
pop
sub
pop
cmp
push
movsb
adc
inc
pop
mov
lahf
mov
out
mov
fcmovb
nop
sbb
jmp
shlb
lret
outsl
lds
outsb
xchg
sub
push
jbe
addr16
mov
adc
in
inc
mov
gs
xchg
pop
inc
mov
jne
pop
shll
dec
jns
movl
add
in
enter
lret
es
into
inc
mov
xor
sarl
outsl
cmp
sub
dec
ds
clc
jnp
fisubs
xor
add
pop
and
inc
fildl
cmp
lods
shlb
pushf
mov
push
imul
es
and
mov
jae
lahf
in
andb
or
mull
daa
addb
push
or
frstor
pop
cwtl
out
lahf
int3
js
stos
and
xchg
lcall
xchg
mov
sti
lods
push
pop
inc
enter
pop
mov
int
add
add
cmpsb
jbe
mov
fwait
jnp
pop
fadd
pusha
push
inc
mov
cld
loopne
call
sub
sahf
enter
mov
outsl
jl
push
cmp
mov
dec
gs
inc
call
inc
test
pop
sarb
pop
lret
lock
dec
jecxz
mov
filds
popf
imul
jno
ret
testb
adc
addl
xor
nopl
loope
cmpsl
mov
outsb
jge
arpl
jg
xchg
xor
fs
pop
mulps
pop
push
scas
jbe
jae
sub
push
jns
stos
mov
lods
add
in
lcall
pop
xchg
adcl
pop
or
lods
mov
or
loope
subl
mov
bound
fdecstp
inc
push
pop
xchg
int3
cmp
enter
iret
jo
lret
nop
mov
add
sbb
pop
aam
pop
and
ss
mov
mov
mulb
inc
in
sbb
mov
xlat
rcrb
mov
mov
push
pushf
clc
rorl
jno
scas
int3
jge
mov
dec
mov
sarl
loope
inc
push
sub
push
stos
fwait
xor
es
xor
ffreep
mov
lcall
clc
dec
mov
in
sbb
jp
adc
mov
cs
aaa
mov
loop
hlt
outsl
jecxz
scas
add
fistps
push
cwtl
cmp
dec
cli
cltd
xchg
inc
leave
pop
mov
mov
rcrb
jl
mov
lock
pop
pop
fadd
add
dec
popf
testl
bound
test
pop
dec
ret
xchg
push
ds
in
pop
icebp
mov
lods
mov
cmp
es
fldcw
in
sbb
loopne
shl
insl
enter
mov
fmuls
mov
fcompl
movsb
cltd
xchg
lods
jge
fwait
pop
sub
int
jg
hlt
pop
out
fisttpll
pop
pop
scas
cmp
mov
stos
adc
jae
xchg
dec
aaa
xchg
pop
sbb
hlt
push
xor
ret
push
or
mov
pop
mov
je
adcb
outsl
aaa
or
sbb
push
jbe
pop
mov
sub
inc
insl
imull
enter
int
cmp
adc
shr
out
repz
push
pop
add
cs
push
arpl
mov
fs
test
cld
adc
pusha
jmp
xorl
mov
int
cli
mov
scas
repnz
js
jbe
mov
sahf
out
aam
andl
xchg
bound
xchg
pushf
pop
rcrl
into
inc
fstpl
aaa
mov
lds
pop
arpl
push
pop
cmp
frstor
dec
adc
ja
xchg
ss
adc
adc
pop
jno
mov
imul
cmp
inc
add
or
push
push
push
pop
sub
call
cld
movsb
movsl
dec
in
cmp
test
and
mov
insb
xchg
xor
cs
fistpll
dec
xchg
dec
imul
mov
fs
mov
js
xor
cwtl
jb
and
push
sbb
pushf
ds
sbb
mov
movsl
mov
pop
jno
xor
rorl
add
ljmp
stos
cltd
push
push
out
pop
adc
js
outsb
dec
mov
movsl
sti
dec
test
fsubl
xor
popf
fbstp
pushf
push
es
adc
and
add
jl
or
out
lds
loope
aas
mov
xchg
pushf
je
je
jo
test
jne
mov
in
add
aas
and
xchg
loop
jp
mov
imulb
mov
inc
int
mov
and
call
jne
mov
in
mov
mov
add
fstpl
outsb
cmc
loop
sbb
pop
sbb
inc
adc
add
jle
jl
les
fildl
fnclex
jo
iret
cmpsb
mov
mov
sahf
sbb
ja
inc
xchg
jo
test
jne
mov
jmp
aas
mov
push
pushf
and
les
fsubl
jg
pushf
push
push
stc
sbb
loopne
pushf
fistpll
clc
popf
jbe
sti
stos
ja
adc
sub
pop
fnstsw
loop
aas
es
cmc
sbb
push
cmp
ret
mov
mov
and
mov
loopne
pop
ret
mov
rcrb
test
mov
push
imul
insb
xchg
jne
or
sbb
or
jnp
cld
pushf
xor
sarb
int
fistps
mov
jmp
jp
push
add
outsb
outsb
hlt
aad
cmc
inc
mov
push
decl
jne
inc
std
fstps
inc
daa
hlt
fmull
pop
in
pop
add
mov
add
cwtl
subb
orl
loop
jo
and
popf
mov
inc
mov
lret
stc
repnz
jp
ljmp
fstp
andl
xor
xchg
test
inc
xchg
bound
jne
add
dec
in
les
jae
fcomps
sarl
push
test
lock
fidivrs
jp
movsl
sub
push
fnsave
mov
aas
xchg
movsb
fisttps
fs
mov
add
loop
loope
loop
loop
fwait
rcr
inc
std
and
sbb
inc
pushf
sti
mov
in
lahf
mov
mov
mov
cmp
or
jb
mov
sub
jp
ss
dec
nop
frstor
pusha
pop
lahf
fcomps
push
and
pop
imul
pop
clc
mov
mov
cmp
pop
and
je
mov
fisubs
sahf
pop
invd
or
mov
lock
mov
xchg
xor
xchg
mov
pop
mov
outsl
mov
dec
pop
xchg
mov
jne
inc
mov
roll
pop
scas
mov
xchg
dec
cmp
or
sub
mov
cmc
aam
mov
push
cld
cs
call
lods
sub
xchg
mov
sarb
mov
and
add
adc
int3
jecxz
test
push
test
addb
insb
jle
adc
pop
jne
add
push
add
and
cmc
aas
lods
and
push
mov
pop
stc
mov
mov
or
test
pushf
cmp
imul
mov
test
bound
pushf
outsl
aas
insl
hlt
popa
mov
cmc
adcb
outsl
sahf
mov
and
push
shll
loopne
add
andb
imul
mov
popa
stc
fwait
and
mov
popf
roll
and
cmp
jbe
sbbb
iret
and
inc
mov
and
pop
add
cmc
sub
test
setb
mov
outsl
mov
mov
lret
pop
fnstsw
repnz
adc
xor
fisttpll
add
inc
pushl
inc
pop
add
scas
fbstp
sti
inc
mov
popa
fwait
xor
push
jg
ds
sbb
sti
adc
lds
popf
data16
jne
imul
ret
insl
xchg
jl
loopne
pop
in
xor
sbb
stc
imulb
pop
inc
xor
popf
adc
jge
sbb
stc
or
jl
fnstcw
mov
sub
sbb
stc
iret
insl
jl
xchg
and
jp
in
mov
push
in
sub
sbb
stc
stc
insl
push
jl
mov
jge
sbb
stc
mov
push
inc
insl
add
lods
in
and
sti
sbb
stc
shrb
jl
cltd
cmp
call
stc
insl
xchg
and
cmp
movsl
in
jge
hlt
sbb
stc
inc
insl
fwait
jl
repnz
inc
jge
sbb
stc
or
jl
scas
cmp
in
insl
jbe
jle
sbb
stc
sbb
jecxz
mov
sbb
stc
loope
pop
jl
test
sub
jge
sbb
stc
sahf
fstl
lret
insl
in
jl
cmp
jge
sbb
stc
fisubrl
jl
add
jns
sarb
sbb
stc
xchg
insl
outsl
jl
mov
in
test
sbb
stc
sub
mov
push
in
dec
jge
sbb
stc
lock
push
paddsw
sub
jge
sbb
stc
cld
insl
je
lret
ret
cmp
in
lcall
insl
cmp
cmp
in
push
jge
sbb
and
cmc
cmc
insl
dec
jl
pushf
cmp
cmp
mov
popa
cmp
in
mov
sub
stc
ja
into
jl
push
pop
jmp
cmp
in
mov
insl
cmpl
xor
test
stc
push
insl
dec
jl
pop
cmp
in
insw
add
sbb
stc
add
pop
jl
stos
cmp
in
add
sbb
stc
leave
insl
and
cmp
in
mov
and
push
jl
movsb
cmp
jge
sbb
stc
mov
imul
adc
stc
pop
insl
jl
es
xchg
std
cmp
int3
jge
sbb
push
in
ret
sbb
stc
mov
jl
xor
cmpsl
in
jg
negb
and
cmc
popf
insl
adc
rclb
rcrb
add
ss
jbe
jp
jge
jg
cs
add
es
mov
lret
dec
jne
pop
outsl
lock
dec
jne
mov
mov
and
jns
sub
jl
mov
xor
dec
in
frstor
or
jne
pop
outsl
mov
outsl
outsl
push
pop
outsl
sbb
dec
jne
pop
daa
dec
sahf
mov
idivb
aas
in
movsb
out
scas
cld
jne
into
outsl
pop
out
or
orb
mov
ds
mov
mov
xchg
test
in
push
cmpsb
divb
in
subb
jne
scas
jg
sbb
test
and
fists
push
mov
fs
outsl
sbb
pop
push
sub
sbb
fst
outsb
div
xchg
test
and
mov
pop
push
mulb
in
mov
push
adc
cmp
call
ds
mov
in
push
fnstsw
in
mov
xor
mov
loop
mov
nop
fbstp
jns
mov
pop
cld
jne
mov
jne
outsl
negb
jne
insl
outsl
cmpsb
test
mov
outsl
push
or
outsl
xchg
outsl
ss
jne
int3
outsl
in
dec
jne
hlt
outsl
xchg
add
jne
cld
outsl
lds
jne
dec
jne
lods
outsl
and
push
outsl
aam
dec
jne
pop
outsl
add
dec
jne
test
adc
jne
or
fs
jne
xor
adc
dec
or
orb
int3
test
and
filds
lret
sub
movsl
jecxz
mov
fstl
cmpsb
jle
mov
jmp
sbb
add
fstps
lcall
enter
in
jbe
out
cmp
das
sbb
test
pop
fstps
xchg
mov
stc
sarb
in
outsb
test
sbb
sbb
sub
inc
jns
jae
imul
cld
jne
subl
dec
or
sbbb
xchg
and
stc
aas
jns
sbb
fucomp
xor
xchg
cld
jne
sub
inc
dec
or
jmp
fidivrl
mov
ljmp
insb
mov
bnd
sbb
or
fstps
inc
lcall
idiv
stos
in
cmpsl
insb
mov
dec
jne
mov
test
cmp
push
cmp
mov
pop
notb
test
in
dec
test
fstps
and
mov
xor
sbb
test
insb
mov
dec
jne
and
xor
addr16
outsl
imul
jne
shrl
loope
jne
stc
outsl
rorb
dec
jne
add
xchg
dec
jne
test
jne
mov
push
outsl
adc
jne
jns
inc
jno
jne
subl
sub
and
lds
outsl
push
dec
dec
jne
fsubrs
rorb
and
dec
jne
or
add
add
jg
sbb
mov
imul
and
enter
insb
stc
rorb
pop
jg
sbb
push
cmpl
js
or
cmpb
out
push
icebp
mov
lahf
jns
sbb
fisttpll
divb
in
cmpb
mov
xlat
negb
in
popa
out
mov
in
adc
idivb
out
jle
jmp
decb
add
loopne
push
cmp
add
pop
mov
adc
dec
add
aad
test
sbb
pop
mov
outsb
ret
ret
sahf
mov
mov
pop
aaa
pushf
and
mov
xchg
xchg
aas
bound
sbb
lds
lahf
cld
popf
push
sbb
pushf
or
xor
xchg
sub
aas
push
sub
subb
mov
mov
in
fcompp
add
hlt
in
fistpl
jne
outsb
sbb
sbb
loope
test
push
testb
popf
mov
fcmovnbe
xchg
in
or
insl
andl
in
push
mov
mov
and
popf
and
sarl
shll
jne
outsl
fdivrl
fucomip
cs
mov
and
jg
mov
shll
jne
outsl
std
adc
movsl
sbb
repnz
and
fimull
sbb
and
push
sbb
jg
repnz
dec
and
insl
frstor
cmpsb
jg
imul
pushf
in
loope
jge
pushf
stc
andb
mov
mov
sbbb
repnz
mov
in
add
mov
and
pusha
push
iret
jge
repnz
and
loope
cmp
inc
cmp
mov
mov
in
mov
push
fcmovnb
jg
mov
xchg
adc
outsl
jle
hlt
ret
mov
mov
and
jg
mov
in
shll
jne
jg
repnz
repnz
cld
in
or
insl
popa
mov
add
test
bound
sbb
jg
repnz
dec
and
insl
inc
and
test
loope
negb
in
pusha
roll
sbb
out
and
mov
int
pop
test
loope
idivb
popf
jp
inc
mov
cmp
jnp
repnz
dec
and
insl
fiadds
lods
mov
idiv
cmp
sbb
and
fisubl
sbb
xchg
pop
mov
mov
cmp
add
pop
jg
mov
pop
repz
and
hlt
sub
add
and
jg
mov
fcoml
jbe
test
jbe
fcmovnu
roll
pop
adc
mov
in
jg
jl
shll
jne
outsl
fsub
hlt
fucomi
in
mov
ret
stc
cmp
xor
cmp
inc
cmp
imul
inc
repnz
mov
in
pop
stc
loop
shlb
jge
rcrl
or
jne
outsl
sahf
cli
hlt
sub
mov
mov
or
repnz
mov
sbb
sub
and
sub
sbb
loopne
sbb
mov
shlb
add
mov
and
stc
frstor
cmp
or
insl
lahf
jp
bound
in
sub
sbb
stc
iret
insl
jl
xchg
and
jp
in
mov
pushf
ret
mov
inc
fbstp
xor
fwait
enter
bound
cmp
test
fbld
cmp
pop
fwait
inc
mov
loop
jne
stos
loope
enter
outsl
fnsave
rcrb
insb
and
jne
stos
loope
enter
enter
jg
int3
out
mov
shlb
ja
add
inc
push
outsl
popf
ret
test
rcrb
dec
insb
loope
jne
stos
loope
enter
int3
outsl
fsubl
bound
dec
or
out
adc
adcl
fildll
cmp
pop
or
outsl
pop
rorl
pop
clc
es
pop
mov
mov
cmc
gs
mov
adcb
push
movsl
mov
xor
cmp
and
lahf
sbb
arpl
mov
fldt
xor
std
xchg
sbb
int3
mov
fwait
popf
pop
sbb
sbb
pop
and
int
sarb
aad
cmc
xor
cmc
add
rol
cmc
std
movsb
icebp
lods
lock
aad
jo
ficompl
cld
imul
pop
je
mov
test
frstor
add
push
xchg
adc
mov
fdivrp
dec
aaa
out
shll
jle
jbe
add
add
sbb
in
frstor
or
icebp
mov
fcmovne
fadd
jno
lock
mov
xor
ds
mov
cmp
orl
pushf
pushf
test
outsl
jg
hlt
inc
loope
jecxz
popa
mov
fistl
incb
sbb
pushf
mov
jns
stos
sahf
into
loop
pop
imul
in
mov
call
lea
fsubl
mov
cmpl
pushl
lret
out
jnp
add
popf
fcmovu
sub
aas
jne
outsl
push
jns
subb
sub
repnz
dec
aam
jns
addl
jg
mov
into
jle
popa
pop
mov
jno
repz
loope
testb
popf
std
xor
icebp
fstpt
rcrl
std
mov
mov
test
loope
testb
jge
and
loop
test
sbb
imul
insl
cld
lea
lahf
fildl
lea
and
mov
cmp
shlb
and
jne
outsl
fstpl
hlt
sti
in
imul
and
sbb
xor
dec
and
insl
jnp
stos
test
loope
negb
popf
cmp
sub
test
xor
mov
sub
pop
sub
ret
jnp
add
popf
out
inc
mov
in
popf
mov
jne
outsl
sahf
sub
inc
in
jle
pop
and
jne
outsl
loop
hlt
add
xor
lods
js
add
sbb
add
fbld
ljmp
and
test
loope
testb
sarb
cmp
inc
roll
cmpb
loopne
fwait
test
addb
push
sbb
dec
test
cmc
jge
popf
out
in
mov
lret
incb
aas
popf
pop
sbb
inc
mulb
dec
popf
cmp
pusha
roll
mov
mov
inc
inc
adc
hlt
adc
adc
inc
hlt
ds
repz
pop
inc
mov
in
sti
fadds
repz
and
jne
jg
repnz
in
iret
aad
mov
sbb
pop
adc
adc
pop
mul
rcrb
mov
sub
adc
and
test
lcall
lcall
andb
imul
pop
in
sbb
pop
fstpt
aas
mov
add
inc
sbb
push
cltd
and
push
inc
int
pop
push
and
std
pop
jg
mov
loop
push
or
loope
jne
outsl
popa
clc
in
mov
mov
sbb
or
jge
sarl
sbbb
decl
fldt
sbb
inc
jg
sbb
mov
fidivrs
xor
loope
or
jl
or
jne
outsl
ret
and
outsl
xchg
sar
ja
and
mov
bnd
pop
mov
cmp
iret
lcall
sub
pop
and
addr16
jg
sbb
and
dec
sub
sub
sahf
out
mov
adc
sbb
cwtl
and
jns
and
jbe
push
in
loope
sarb
push
mov
cmp
subl
stc
andl
sbb
nop
in
pusha
repz
sub
add
jg
repnz
test
jl
or
aaa
mov
test
lahf
jmp
jge
aaa
sbb
lods
stos
jge
sbb
sbb
sbb
mov
and
mov
pop
mulb
mov
sub
cmc
shll
sti
fstpt
mov
fiadds
xchg
sbb
out
pop
mov
in
sti
mov
mov
fildll
pop
repnz
dec
and
insl
push
and
test
loope
jg
imul
loope
sbb
popf
test
cmp
adc
mov
mov
imul
popf
outsl
add
fildl
mov
fsub
mov
add
sbb
jg
repnz
ds
mov
inc
sub
repz
jne
sbb
adc
xor
and
mov
sarl
and
sbb
pop
or
jne
outsl
ds
mov
fs
ret
fndisi(8087
fwait
idivb
pop
popf
ret
cmp
add
test
sbb
jg
repnz
test
stc
shll
mov
mov
and
out
int3
pop
fnstsw
repnz
test
push
sbbl
and
push
sbb
mov
lock
loopne
jnp
mov
jns
stos
popa
and
mov
shlb
mov
pusha
popf
cmpb
mov
xor
sbb
xchg
std
add
jne
outsl
mov
jns
repnz
in
and
in
repz
mov
sub
pop
and
jg
mov
jg
addb
jo
aas
cmp
ficompl
sbb
mov
lahf
roll
mov
mov
in
mov
sbb
out
xorb
jg
mov
fistps
repz
mov
jge
xor
popf
aas
repnz
and
cmp
fmulp
fwait
loope
negb
jge
repz
rcrb
fucom
scas
testb
cmp
loopne
mov
adc
cld
repz
test
mov
in
add
outsb
hlt
xor
push
shl
in
xor
pop
and
push
and
jg
mov
xchg
or
outsb
orb
mov
ret
or
pop
outsb
hlt
pop
in
xchg
mov
std
sbb
mov
mov
cmc
and
and
cwtl
sbb
mov
cmp
pop
sbbb
sub
mov
sub
stc
jge
add
ret
pop
jg
and
jbe
ret
and
lock
cmp
and
inc
xor
call
xor
sbb
mov
loope
mulb
repz
pop
mov
loope
idivb
add
test
cltd
repz
and
pop
shll
test
adcb
xor
in
cmp
inc
fcomip
mov
fstpt
and
cmp
sarb
mov
loope
mulb
popf
pop
cmp
test
ficoms
outsb
frstor
mov
aas
popa
mov
cmp
push
aaa
or
pushf
outsl
pop
outsb
repz
frstor
aad
dec
jle
jnp
loope
mul
out
cmp
mov
push
jg
shl
shrl
xor
sbb
js
fs
xor
test
mov
icebp
cmpb
pop
fstpt
mov
int3
imul
and
xchg
test
mov
testl
sub
push
sbbb
mov
out
inc
jl
and
jne
outsl
add
add
xor
mov
sub
pop
out
adc
jecxz
push
pop
ds
pop
sbbb
mov
pop
and
xchg
inc
push
pop
ds
incl
shl
dec
and
insl
add
test
push
out
shll
pusha
sub
pop
and
test
jge
cld
xchg
popf
fmull
daa
jnp,pt
inc
repnz
and
insl
pushf
ret
add
pop
movsb
mov
inc
jl
pop
shll
jne
outsl
pop
popl
sbb
jg
repnz
popa
mov
adc
fwait
test
pop
ror
and
repnz
cmpsl
mov
test
and
lahf
cmpsl
imul
push
mov
dec
test
mov
jns
ficompl
sbb
mov
mov
mov
pop
repz
sub
sbb
iret
stc
xor
and
cmp
hlt
jp
cmc
pushf
scas
inc
mov
pop
jne
jg
repnz
imul
dec
test
mov
repz
pop
and
mov
loope
shll
loope
imul
pop
test
jne
outsl
std
mov
mov
mov
mov
pop
jns
loope
out
inc
mov
in
je
mov
and
ficompl
gs
movsl
adcb
lock
stc
fbld
mov
push
shrb
test
insl
into
pop
adc
jg
sbb
jg
repnz
dec
and
insl
lahf
rcrl
iret
std
mulb
mov
mov
mov
pop
pop
sbb
sarl
shll
pop
hlt
fsubrp
mov
pop
enter
outsl
sbbl
push
pop
and
ja
mov
sbb
and
push
cmp
mov
outsl
popf
fisttpll
dec
rcrb
fildl
popf
adc
mov
in
mov
stc
pushf
and
jl
mov
jne
outsl
inc
xchg
fsubr
iret
les
fdivrl
pushf
test
push
and
sbb
sbb
and
cmc
pop
pop
and
and
cmp
out
mov
and
ret
sub
mov
sub
dec
test
pmaddwd
dec
mov
mov
sbb
shll
jne
outsl
xchg
adc
or
repnz
jae
movsl
and
mov
mov
and
pop
and
push
sbb
dec
and
insl
mov
insl
cmp
jne
mov
imul
adc
loope
popf
jno
stos
add
aaa
mov
adc
add
test
push
jne
mov
inc
pop
and
lret
inc
pop
fnsave
repz
jnp
repnz
mov
cmp
mov
add
adc
mov
ds
jae
mov
repnz
dec
and
insl
fsubl
test
lods
out
jg
pushf
in
lods
mov
mov
aas
sbbb
lods
add
jle
sarb
xor
loope
dec
mov
sbb
shll
jne
outsl
rcl
sti
in
xor
sub
std
into
cmpb
and
push
inc
into
popf
jnp
push
pop
push
xchg
negb
repz
add
pop
and
test
and
loopne
fildl
bound
repnz
and
stc
cmc
and
or
insl
loope
hlt
popf
and
jg
mov
roll
fildl
fcomi
popf
cmpl
repnz
dec
dec
test
div
inc
xor
and
mov
add
roll
inc
outsl
and
hlt
shr
pop
enter
outsl
pop
out
add
repz
test
dec
dec
test
cmc
inc
xor
and
mov
push
nop
pop
into
mulb
shll
mov
jne
stc
ss
insl
mov
cmp
in
cmpsb
insl
jle
jle
sbb
stc
inc
insl
pushf
jl
jmp
arpl
cmp
sbb
stc
or
jl
mov
sub
jge
sbb
stc
fstpl
mov
jl
in
mov
sbb
stc
loop
pop
jl
test
jge
sbb
stc
lahf
insl
pop
jl
data16
cmpsb
jp
in
or
stc
shrl
jl
add
jp
sarl
sbb
stc
cwtl
insl
jo
out
cmp
in
mov
sahf
jle
sbb
stc
sub
repz
inc
jge
sbb
stc
icebp
insl
imul
jge
sbb
stc
scas
frstor
mov
std
jl
int3
cmp
in
sbb
xchg
sbb
stc
ljmp
mov
loopne
pop
sbb
stc
cmpsl
insl
jg
testb
scas
jp
in
adc
stc
cmp
mov
or
cmp
fnstcw
sbb
stc
add
jl
cmp
in
xchg
insl
outsb
jle
sbb
stc
xor
fstpt
sbb
stc
stos
insl
cmpb
dec
in
mov
stc
insl
aas
jl
push
pop
mov
aam
lods
sbb
stc
sti
insl
jae
ror
cmp
in
cltd
jge
sbb
stc
shrb
popl
and
insl
jge
hlt
dec
cmp
jge
sbb
stc
push
inc
jl
adc
or
pusha
jge
sbb
stc
daa
insl
pop
jbe
jl
lds
sbb
xor
dec
pop
mov
lcall
mov
xchg
jg
xor
lret
push
mov
in
inc
call
mov
mov
xchg
imul
jecxz
ret
mov
addr16
jg
xor
mov
imul
sub
jbe
inc
mov
mov
in
jge
mov
rcrb
rol
int
inc
andb
divl
std
mov
bound
imul
test
data16
pushf
xchg
outsl
jle
cwtl
jnp
cmp
pop
lahf
jns
mov
mov
sbb
aas
sbb
mov
jl
movsb
jge
cmp
cmp
sub
rolb
jg
and
pop
mov
or
jne
mov
shlb
mov
pop
xor
addl
jg
push
jne
sbb
inc
pushf
or
jne
ret
cmp
lcall
jg
ret
jb
out
mov
ficoms
xchg
jo
push
mov
data16
mov
arpl
cltd
inc
jg
in
fcomps
cmp
shll
or
orb
and
aas
mov
insb
adc
ja
xchg
dec
add
jne
sbb
mov
jne
jmp
cmp
jnp
pop
jbe
sbb
cmp
sbb
into
test
xor
mov
cmc
xor
xchg
jne
loop
and
push
sbb
orl
mov
and
test
lock
stc
aam
jne
mov
ljmp
fbld
mov
in
sbb
les
movsl
xchg
es
or
sbb
jl
and
mov
add
mov
pop
arpl
cltd
mov
mov
jmp
cmp
rcrb
inc
ret
repz
jg
stc
icebp
out
sbb
inc
cmpb
int3
cmc
push
jne
cltd
fcompl
cld
inc
cmp
push
orb
jne
xchg
fadd
test
lea
out
andb
sub
test
out
mov
inc
jo
cwtl
aaa
sbb
shrb
mov
mov
add
push
pop
mov
cmp
add
cmp
jp
jg
add
sub
out
shll
xor
insb
sub
dec
jl
rcrl
mov
mov
in
mov
outsl
std
add
lcall
addl
cmp
shrb
and
jne
sti
mov
inc
pop
call
dec
sub
out
add
fisttpl
mov
adc
jne
inc
mov
jge
mov
cld
inc
cmp
addb
pop
sbb
jbe
xor
pop
mov
jne
sbb
and
xor
mov
movsl
cltd
insl
pushf
or
mov
adc
fsubs
or
cmp
and
and
cmp
insb
adc
add
outsl
mov
cmp
pop
test
fs
outsl
adc
cmp
mov
cmp
cld
dec
sbb
jmp
pop
test
cmp
jmp
mov
inc
and
jmp
test
or
in
jge
lret
cmp
mov
xor
cmp
or
mov
cltd
andb
std
cmp
idivb
cmp
out
inc
pop
mov
mov
mov
enter
xor
jg,pt
mov
mov
dec
mov
bswap
cmpb
cmp
mov
mov
jl
fwait
adcb
cmp
jbe
xor
pop
mov
sub
jg
fnstsw
inc
mov
jne
inc
data16
mov
dec
xor
ds
jmp
mov
jge
mov
mov
inc
cmp
movsb
jge
shl
pop
pop
testb
loopew
sarb
cmp
std
rcrl
xorb
jbe
add
jne
mov
add
inc
dec
add
jmp
pop
jbe
jmp
mov
pop
pop
subb
fs
lock
roll
out
mov
jl
mov
add
dec
mov
mov
jns
test
clc
ds
lds
sub
mov
cmp
orb
stos
loope
rolb
outsl
sbb
cmpb
pop
pop
cmp
dec
test
data16
rcrl
orb
std
or
ds
xchg
or
call
cltd
add
outsl
jle
xchg
loop
add
cmpsb
and
out
adcl
test
cltd
mov
mov
test
enter
sbb
sub
out
jg
jnp
ds
pop
pop
in
outsl
les
cld
xchg
dec
pushf
sahf
mov
push
add
lret
inc
pop
mov
mov
jge
stos
cmc
cmp
and
stos
or
inc
call
inc
mov
daa
xorb
mov
test
mov
push
sbb
fisubs
jnp
data16
push
add
gs
jle
leave
andb
mov
push
ret
mov
inc
fiadds
incb
mov
mov
adc
xchg
aad
mov
out
das
inc
stos
andl
into
sub
sbb
sub
and
or
ljmp
std
mov
lock
sub
idivb
stos
jl
pop
fstps
fmul
mov
out
adc
outsb
jl
js
sub
mov
insb
lods
mov
push
icebp
or
sbb
dec
aad
pop
inc
dec
test
ljmp
in
or
sbb
xchg
frstor
fstl
inc
fildl
aad
or
jne
push
mov
mov
cmp
cmpb
imul
gs
sub
icebp
aas
mov
data16
out
and
fisubs
xchg
jns
dec
aad
std
push
push
repnz
aad
xchg
cld
jne
xchg
loopne
sub
push
and
sub
mov
and
inc
xchg
in
data16
imulb
popf
cmpsb
xorb
outsl
popf
push
dec
test
dec
push
addr16
int
lret
dec
test
ffree
andb
adc
imul
add
insb
inc
insl
inc
outsb
mov
cmc
inc
and
cmpsb
insb
arpl
je
insb
jecxz
aad
cwtl
fcomi
popf
jmp
pop
xorb
outsl
dec
xchg
dec
out
mov
out
jnp
mulb
push
and
insb
push
or
fistpl
push
cmpb
mov
test
jmp
cmc
adc
call
jne
bound
jb
sub
cli
fstps
jg
mov
imul
pop
in
loop
jne
push
add
mov
mov
orb
inc
xchg
sub
jno
adcb
add
imul
jns
lret
hlt
sub
movsb
test
aad
lea
push
pop
mov
add
sub
nop
mov
dec
in
ds
imul
jne
and
adc
mov
inc
fisttpll
testb
cmc
jae
and
jne
aam
mov
hlt
arpl
push
fstps
loop
mov
mov
mov
xchg
and
jl
sbb
test
fstpl
mov
insb
inc
testb
and
insb
xor
push
or
bound
movsb
push
test
mov
shll
push
mov
sub
out
repz
and
testb
xorb
outsl
jne
dec
test
movsl
mov
adcb
movsl
fucom
pop
sub
add
inc
insb
add
inc
or
cmc
out
and
insb
jb
dec
jne
inc
daa
sbb
fstl
divb
mov
pop
sbb
repnz
subb
imul
aad
fstp
rolb
cmc
xchg
and
adc
hlt
stos
je
ss
in
ret
ret
push
in
sub
push
in
dec
sub
xchg
iret
popf
lret
lahf
out
or
addl
or
divb
leave
je
andl
sub
mov
fst
push
inc
insb
data16
fsubl
dec
fsubl
cmp
lods
mov
test
xorb
pusha
mov
repz
jne
push
pop
lea
jnp
es
jbe
cmpsb
fisubl
loop
jnp
ss
mov
jl
dec
mov
cmp
mov
test
mov
fnsave
hlt
and
fildll
mov
xor
mov
inc
jae
andb
cmc
ds
cmc
mov
mov
push
sbb
sbb
mov
insl
shrb
pushf
popf
fisttpl
and
mov
fiadds
inc
fsubrl
insb
jbe
cmp
stc
mov
lods
jmp
pop
loope
sarb
stc
sbb
fsubp
std
rolb
jle
mov
and
xor
movd
in
pop
aaa
cmp
jne,pt
mov
jge
push
sbb
sbbb
les
mov
in
pushf
mov
in
cmp
cs
mov
in
and
jge
add
sbb
dec
mov
fdivrl
sbb
dec
test
lods
sbb
repnz
and
outsl
jl
fcompl
mov
xor
arpl
mov
incb
push
sbb
insl
ss
shlb
lahf
in
pop
jge
sbb
and
push
and
mov
ss
sbb
stc
mov
fisttpll
jae
pop
mov
xchg
in
mov
and
sbb
stc
inc
insl
mov
pop
in
incb
ss
cmp
sti
in
mov
stc
ret
jl
cmpl
sbbb
ljmp
jl
fisubs
jle
jp
in
cmp
stc
mov
add
ret
jge
sbb
stc
shrl
sbbb
push
std
stc
sbb
loop
inc
in
cmpl
fstpl
sbb
jge
pop
mov
jge
sbb
stc
pop
fnstsw
insl
pop
in
jnp
bound
stc
mov
fisubrl
ss
jge
sbb
stc
mov
aas
and
inc
push
mov
mulb
jge
sbb
stc
lahf
insl
fimuls
pushf
fstpt
sbb
bound
sbb
stc
lahf
insl
fisubs
adc
in
ret
ss
and
cmp
aas
jge
jl
lret
push
mov
pop
cmp
inc
or
loop
cmp
in
add
sbb
stc
mov
mov
int3
push
jecxz
ds
popf
jl
fdivrl
mov
sbb
stc
cmp
jl
loope
shr
jge
sbb
stc
inc
insl
lahf
jl
fidivrs
mov
std
jge
sbb
stc
pushf
push
dec
mov
insl
add
cmp
sbb
stc
and
pop
repz
in
pushf
jge
sbb
stc
inc
insl
and
cmp
cld
jge
sbb
stc
and
jl
mov
add
jge
sbb
stc
subb
rcrb
outsb
cmp
stc
fwait
insl
pop
jl
loop
mov
sbb
stc
mov
js
outsb
popf
jge
sbb
stc
pop
insl
mov
pusha
in
lahf
jge
or
mov
pop
insl
fwait
jl
popa
cmp
in
inc
jge
sbb
jns
push
push
xchg
mov
ss
dec
cmp
and
xor
outsb
shll
shlb
cmpl
je
add
mov
adc
and
dec
loop
shll
addr16
mov
fidivl
aaa
pusha
repz
sbb
test
iret
mov
jg
std
mov
fstpl
fucomip
pop
ja
mov
frstor
clc
jg
push
xchg
add
mov
xlat
add
inc
ds
xor
test
cmp
mov
pop
sahf
or
sbb
in
push
stc
add
cld
jg
jl
ds
push
sbb
bound
popa
jp
sti
mov
inc
or
in
dec
xchg
mov
enter
mov
ret
andb
icebp
pusha
outsb
fstps
sub
in
jne
push
adc
jecxz
add
or
cmc
jnp
lock
inc
jno
cwtl
and
insb
pop
fisttps
pop
stc
xor
ret
jge
rclb
push
mov
sbb
inc
add
cwtl
test
and
ficompl
xor
xchg
stos
pop
jg
popf
add
or
add
jnp
ljmp
inc
mov
jecxz
mov
mov
std
jne
subb
data16
xchg
aas
in
cmp
dec
lock
je
jle
mov
push
fcoml
lods
mov
inc
mov
pop
push
xor
push
jp
and
xchg
inc
pop
push
dec
lock
pop
iret
cld
out
movsl
out
add
xchg
out
xor
cmp
or
loop
and
andb
cld
mov
clc
jl
dec
loopne
push
mov
sub
lods
scas
outsb
xor
incb
imul
jg
sub
inc
xor
repnz
mov
cmp
adc
out
or
fwait
lods
out
outsl
subl
data16
xchg
cmpsl
dec
repz
or
mov
pop
pop
hlt
xchg
enter
and
pusha
je
nop
and
xchg
xchg
cmpsl
sbb
and
push
cld
jle
addr16
fiaddl
sub
or
add
mov
ds
mov
mov
add
je
nop
js
lea
decl
loope
sbb
dec
cmp
lret
cmp
sahf
jp
jns
call
aas
and
insl
mov
fistpll
scas
jge
mov
rcr
inc
pushf
cmpsl
cmpsb
iret
jbe
ficomps
xor
jae
pop
mov
jle
cmp
outsb
lea
push
lock
jle
cld
xchg
pusha
cs
sub
cmpsl
outsl
and
iret
fisttpll
fisubrl
jbe
ds
sarb
repnz
in
ja
inc
roll
ret
adc
sarb
cmpsl
push
and
push
sbb
and
inc
push
pusha
add
mov
pop
pushf
arpl
fistpll
repnz
cmp
sbb
rorb
adcl
stc
cmp
jg
aas
int
and
not
cmp
mov
xor
add
pusha
jg
sbb
int
mov
jp
loope
push
frstor
mov
sbb
popf
cmc
std
jo
repnz
xor
lods
repz
cld
inc
faddl
inc
cmp
adc
mov
test
ret
jecxz
inc
adc
mov
test
jl
pushf
mov
and
add
adc
fiadds
jle
cmc
and
or
insl
in
fwait
mov
mov
cmp
add
je
mov
sti
test
jmp
out
loope
pushf
lods
jne
andb
inc
mov
push
jnp
jecxz
data16
icebp
imul
lahf
rcll
inc
inc
cmp
ljmp
sbb
fwait
pushf
pushf
and
cmp
rcrl
shll
stos
sbb
loop
or
and
bound
in
jmp
cmp
loopne
sbb
out
inc
incl
mov
loop
and
icebp
aad
sbb
es
inc
add
and
add
test
sbb
dec
shll
jecxz
inc
mov
cmp
fstpt
push
add
scas
mov
jae
cmp
xor
and
pushf
sub
and
dec
cmp
lods
sbb
popa
and
add
test
jg
and
aam
sub
cmpb
cli
mov
cld
test
std
std
fcmovnb
test
jb
shlb
insb
pushf
std
hlt
subl
fcoml
inc
xor
jno
mov
add
int
ljmp
jne
mov
rcr
subb
fwait
sbb
mov
imul
push
inc
adc
jp
shlb
stc
jae
xchg
mov
sbb
in
dec
or
mov
inc
fsubrl
jns
ja
sahf
pop
xor
pop
push
ljmp
pop
inc
xlat
leave
push
jbe
cmp
addr16
sub
outsb
pop
mov
xchg
pop
mov
idivl
push
jle
push
repnz
cmp
into
xor
pusha
mov
xchg
adc
in
xchg
jo
mov
daa
pop
or
jg
in
loop
sbbl
sar
xchg
sbbl
faddl
mov
pop
jmp
sbb
pushf
stc
add
fwait
push
sti
in
push
dec
xor
add
stos
lahf
mov
xor
xchg
out
sbb
sbb
sbb
lods
adc
popf
xor
hlt
in
inc
ficoms
add
adc
popf
jnp
rolb
imul
inc
push
inc
pop
xchg
sbb
mov
mov
orb
cld
popa
add
fdivl
comiss
mov
xor
and
jg
repnz
mov
jecxz
push
xchg
add
sbb
hlt
mov
andb
mov
popf
in
and
test
jne
sbb
in
sub
xor
repnz
xor
aam
mov
cmc
in
movsb
and
incl
add
repnz
xchg
mov
push
xchg
pop
push
adcb
fisttpll
cmp
add
movsb
sbb
sub
jns
add
insl
push
add
cld
mov
push
aas
mov
xchg
xlat
jecxz
or
and
jnp
xor
or
or
pop
inc
lock
adc
pushf
repz
push
sbb
sbbb
push
pushf
in
adc
stc
add
movsb
sub
and
push
jo
mov
pushf
pushf
and
fsub
rorb
shll
inc
sbb
jno
jnp
push
pop
sub
cmp
sub
mov
test
inc
inc
outsl
cld
mov
enter
add
call
push
fisubrs
add
mov
jb
mov
mov
fnsave
mov
fisttpll
sar
imul
hlt
movsb
push
push
rclb
popf
sbb
pop
fstps
sbb
xchg
sub
add
mov
mov
jb
adc
sbb
push
xorl
dec
sbb
adc
test
lret
and
jne
jle
inc
xchg
mov
add
jmp
inc
cmc
fdivrl
hlt
mov
in
popf
xchg
cltd
hlt
add
sub
dec
mov
push
outsl
rolb
adc
les
mov
inc
and
push
sub
xor
std
in
jge
xchg
hlt
cld
adc
jl
pusha
jns
lea
mov
jge
or
rcrb
adc
je
pop
jo
mov
pushl
mov
mov
xchg
push
je
jl
fcoml
lahf
jno
mov
sarb
loop
xor
dec
stos
xchg
cmp
jg
adc
jg
aas
cli
andb
pop
mov
scas
in
popf
mov
mov
cmpsb
dec
and
loope
popf
imul
ret
repz
mov
lret
jp
in
mov
pop
pop
lods
mov
je
int3
jl
mov
imul
fldl
add
add
jne
sub
loop
lods
pop
in
jnp
jae
push
ljmp
dec
xchg
rcl
jnp
push
pop
and
pop
repnz
pop
aam
sub
mov
add
repz
lret
fistpl
notl
cmp
jb
inc
je
inc
aad
cmc
rcrb
inc
cmp
cmc
and
xor
cltd
lahf
fs
shrb
pop
mov
loop
int3
jle
stos
idivl
ds
roll
mov
sub
shrb
xor
push
jns
mov
outsb
dec
sbb
insl
ss
jl
jl
mov
in
add
out
fidivrs
push
push
cmpb
pop
push
filds
out
pop
mov
push
mov
xchg
add
cmp
outsb
jge
movsb
cld
sbb
insl
loop
mov
mov
insl
in
aaa
mov
mov
bound
fnstcw
repz
jb
jecxz
lcall
adc
jge
fimuls
cld
lcall
es
fnsave
xchg
cmp
cmpsb
jns
std
adc
cli
sbb
fcom
pop
std
pop
add
jp
into
sbb
fidivrs
gs
dec
jge
icebp
fistpll
loop
mov
add
fldl
and
mov
sbb
or
sbb
addl
and
in
ja
adc
sbb
sbb
and
pushf
dec
push
sub
mov
loop
cltd
fsubl
jp
dec
rcrl
sti
decb
mov
popf
jl
lahf
lea
dec
jne
aad
outsb
test
imulb
fucomp
jmp
out
repz
xor
mov
lods
jp
and
std
sub
pushf
pushf
xor
cld
shr
mov
int3
je
imul
sahf
jo
insl
mov
mov
add
ret
push
imul
lods
push
jbe
cmp
mov
mov
sub
idivl
cmp
push
test
popa
gs
in
jmp
xor
adc
std
sbb
add
hlt
add
rcrl
or
test
sbb
xor
jnp
and
xor
jno
mov
cli
je
pop
lods
test
mov
outsl
and
fldt
into
sarb
arpl
fldt
pushf
fstpt
push
popf
jge
push
cmc
add
insb
mov
mov
outsl
cld
test
xor
sub
fcmovb
push
psubw
addl
loope
jae
sti
and
inc
jg
pop
lret
in
jne
loop
adc
sbb
loop
gs
ds
lcall
cmp
test
sbbb
xor
inc
cmp
lret
adc
sti
test
and
popa
int
out
mov
test
pushf
jg
inc
jg
jge
mov
jns
mov
inc
inc
sti
test
popa
mov
push
xor
and
stos
mov
subl
in
inc
pop
adc
je
cmp
loopne
mov
cs
inc
mov
cmp
mov
stc
sti
mov
sbb
jbe
sbb
jg
loop
pusha
xor
jl
and
fildll
cmc
pop
out
push
sbb
jne
jp
fldt
lods
stos
pop
movsb
or
pop
cmp
add
mov
stc
pushl
mov
and
inc
jbe
sbb
sahf
in
sbb
cld
test
sbb
sbb
jnp
pop
ss
mov
mov
rcll
lcall
fldt
jl
sbb
sub
pop
out
lods
or
in
bnd
loop
mov
popa
and
jle
and
rcrl
lods
dec
dec
add
push
xor
or
cmc
loop
out
push
push
orl
insl
jl
push
sub
test
adc
outsb
cmp
add
mull
cmp
push
rcrl
loopne
sti
mov
jl
and
fstpt
pushf
sbb
popf
mov
nop
and
cmpl
sarl
dec
jnp
adc
mov
into
dec
jno
ds
jne
ljmp
mov
hlt
add
push
adc
ss
movsb
mov
push
add
mov
fisttpll
or
lea
xor
hlt
int3
add
mov
out
loopne
sbb
and
fldcw
cltd
pop
popa
out
add
xor
push
and
sti
stos
outsb
int3
push
outsb
inc
sbb
rcrl
jle
cmp
je
mov
inc
adc
je
test
jecxz
loop
jbe
and
loop
pop
enter
pop
push
push
and
jle
or
push
cmc
icebp
adc
mov
mov
in
jae
stos
sub
adc
pushf
mov
mov
fnstcw
ret
cmp
push
rcr
popf
sbb
add
jmp
cmp
int
filds
icebp
ret
mov
int3
xor
arpl
mov
jge
mov
and
jns
mov
lahf
add
aas
jns
aad
cmp
loopne
bound
or
loope
push
pop
push
cmp
jnp
xchg
sub
lock
lods
std
cld
mov
inc
push
stos
roll
test
cmp
mov
push
mov
sub
icebp
adc
fstl
loope
push
dec
int3
loop
jg
fsubs
pop
inc
sbb
dec
lret
fwait
ret
in
lea
cmpsb
cs
push
dec
and
or
mov
cld
mov
ss
sub
mov
dec
cmp
sbb
repnz
jl
jne
inc
inc
movsl
in
inc
icebp
mov
loop
xchg
fnsave
cmp
cmp
imul
int3
andb
cmpl
rcr
jl
in
in
out
sbb
int
push
sti
pop
mov
int3
pop
fidivrs
sbb
loope
insb
cmp
in
in
rcl
and
lods
rorl
jae
bound
adc
and
outsb
imul
stc
and
sarl
pop
in
adc
xor
enter
in
adc
jge
sti
aas
pop
xor
push
ja
xchg
pop
adc
arpl
rcl
orl
xchg
lahf
cli
push
mov
cs
adcl
lods
repnz
mov
pop
inc
es
mov
lock
pop
pushf
ret
or
pushf
sub
dec
sbb
xor
lods
in
cmp
divl
imul
add
insb
cmp
jmp
std
dec
shrb
fstpt
inc
mov
je
cld
xor
pop
adc
xchg
xchg
mov
repz
fldl
add
cld
je
sub
and
aam
pushf
testb
out
int
lods
add
add
scas
repz
ret
xor
ljmp
inc
xorl
mov
lcall
orl
jp
push
mov
fsubs
mov
mov
and
repz
mov
mov
mov
ds
filds
mov
in
imul
aam
in
jecxz
dec
push
add
jle
lods
les
cld
jno
or
push
lahf
inc
ret
adc
mov
sub
dec
test
cld
add
aam
fidivrl
pop
push
sbb
adc
push
imul
loope
cmp
inc
xor
addb
cmp
add
popf
out
add
xchg
outsb
stc
pop
xor
add
rcrl
loopne
in
xchg
jl
mov
mov
mov
sbb
mov
push
pusha
in
std
ds
lods
xchg
cld
mov
mov
lods
adc
sti
mov
fnstsw
stc
xorl
std
or
int3
call
and
inc
push
repz
cltd
fidivrl
jae
rorb
jne
mov
fbstp
mov
cmp
mov
inc
ds
jbe
push
pop
sbb
outsb
sub
adc
and
jle
jecxz
loope
shrl
sbb
cmc
mov
sbbl
cmpsl
arpl
mov
std
mov
repnz
fldl
sbb
repz
sbb
jmp
int
sti
ret
loop
into
push
ds
lods
mov
cmp
outsb
cld
sbb
ds
lods
adc
xchg
pop
dec
outsl
loop
lock
mov
xorl
pop
jmp
fnsave
lods
jnp
ds
push
flds
sub
test
or
add
mov
add
push
repnz
add
imul
setge
cmp
xor
sbb
xor
inc
jmp
xor
fldt
pop
pop
jmp
mov
lret
fdivr
jne
xlat
cmp
sbb
cmc
test
xor
sub
push
or
sbb
fsubl
std
fldl
mov
xchg
mov
pop
std
jns
addb
inc
sbb
adc
fiaddl
std
test
cmc
pop
adc
repnz
in
jp
ret
push
dec
mov
int
or
cmp
bound
lahf
xchg
rcr
shl
push
std
cmc
jmp
xchg
jno
daa
sbb
xchg
dec
push
mov
mov
mov
out
mov
imul
pop
pop
jecxz
cmp
dec
popl
jnp
aas
stc
lea
sbb
jns
cmp
stos
lret
add
push
jbe
imul
mov
push
jge
xor
cli
jb
and
data16
sbb
fldenv
scas
sti
ret
xchg
jne
arpl
cmova
mov
cmp
cld
loope
jg
stc
mov
sti
sub
jae
aaa
jbe
jne
push
pushf
inc
insl
cmp
jle
fcmovne
fstp
cs
icebp
hlt
popa
in
sbb
fsubrp
fs
push
out
inc
rorl
insb
cs
push
cs
add
push
ds
or
stc
subb
rclb
stos
cmp
cmc
insl
cmp
mov
dec
gs
mov
mov
vpaddw
jg
cmpsb
imul
pop
jecxz
clc
adc
addb
pop
jae
xor
adc
pop
add
outsb
lret
fsubrl
les
imul
jb
add
lods
cwtl
push
sahf
and
pop
jo
sbb
jne
jg
pushf
aas
jmp
inc
jge
mov
cmpb
ffree
jl
popf
sbb
mov
xchg
mov
adc
in
jl
cld
test
adcl
pop
fisttps
fimull
rorb
sti
imul
je
stc
inc
and
andb
jle
call
fnstsw
je
mov
lret
loope
shlb
add
pop
fwait
test
pop
int
sti
fildl
dec
dec
fwait
add
mov
inc
fcmovu
mov
sub
pop
adc
je
cmp
push
fsubl
mov
push
cmp
sbb
pop
hlt
mov
jge
push
decb
loopne
adcb
outsb
cmp
xorl
mov
js
adc
sbb
stc
inc
pop
cmp
stc
mov
fsubl
mov
xor
shlb
adc
sti
push
shlb
scas
repz
inc
mov
dec
adc
jb
into
pop
sbb
insl
xor
jle
lcall
sub
sbb
cmpl
mov
xlat
jnp
xor
loopne
mov
aad
loopne
insb
fwait
push
sbb
and
or
adc
xchg
mov
sub
test
test
xchg
lock
fucomp
js
mov
jl
jo
or
mov
mov
lret
add
mov
adc
arpl
mov
add
and
bound
in
imul
movsb
sbb
outsb
or
sbb
jae
mov
in
lret
mov
jle
fadds
pop
xor
xor
xchg
arpl
xlat
and
cmp
mov
aam
fcmove
adc
or
repnz
fistps
cltd
cmp
mov
stos
adc
sbb
cmc
cld
pusha
je
mov
add
andl
mov
mov
loop
push
add
loopne
xor
add
mov
jl
mov
inc
mov
sub
and
xor
add
aad
inc
mov
jns
pop
cmp
sti
es
adc
jmp
mov
pushf
cmp
xor
sbb
sbb
mov
xor
filds
std
cmp
pop
sbb
pop
cmp
or
mov
in
shlb
sub
and
mov
add
test
inc
dec
insb
adc
shll
ss
outsb
inc
mov
shrb
cld
pop
cltd
aaa
sbb
dec
popa
pop
xlat
cmp
imul
out
in
mov
repnz
inc
sub
out
dec
mov
xchg
mov
shll
xor
imul
jae
xor
das
xchg
and
cmc
mov
popa
cmp
mov
adc
into
push
and
pop
jg
fcoml
push
popa
add
mov
lret
xor
lcall
cmc
mov
fildll
outsb
stc
dec
mov
pushf
add
push
push
test
sbb
cli
fcmovne
lea
mov
and
adc
fsts
add
fstpt
jnp
sbb
aas
cmp
xchg
rcrl
jl
mov
mov
loopne
sub
adc
mov
jecxz
stos
mov
mov
sbb
mov
xchg
bound
std
mov
sub
or
fidivrs
jl
aaa
sub
adc
mov
adc
xor
sti
mov
push
lds
jmp
aaa
fucomi
jne
pop
insb
std
sub
scas
icebp
sbb
pop
cmc
ds
in
sub
jl
add
mov
cli
sbb
out
in
mov
std
insb
insb
xchg
push
sbb
inc
insb
mov
nop
xor
fisubrs
insb
mov
xor
xor
jne
jg
mov
cmpsb
insb
sbb
fldl
imul
mov
and
jecxz
test
in
negl
pusha
cmpl
test
lret
sub
xchg
or
cmp
fwait
mov
push
test
test
cmc
insb
fbld
fistpll
and
loopne
jns
std
ret
jg
jne
lret
jg
ficompl
popf
push
insb
mov
mov
popf
and
sbb
xor
sub
sarb
cmp
lods
mov
test
out
pop
xor
sub
test
xor
insb
ljmp
mov
cltd
sbb
into
test
push
mov
test
test
test
movsb
stc
test
test
jg
ljmp
jl
or
cmpsb
pop
dec
push
lds
jl
inc
aaa
xchg
fnstsw
decl
popa
jmp
add
popf
ret
pop
cmp
cltd
fidivrs
or
icebp
sub
roll
add
adc
ret
cmp
cltd
pop
cmp
icebp
sub
mov
mov
test
aam
out
mov
xor
out
mov
mov
or
test
and
mov
sbb
add
sub
dec
fstpl
mov
popf
stos
push
loope
ret
test
test
int
je
addb
mov
test
and
jl
xor
lea
sar
mul
ret
test
out
cmpsb
and
pop
push
add
pop
pop
lahf
mov
add
push
insb
insb
sbb
dec
loop
rcr
cmpsb
xor
lret
out
push
shll
sbb
neg
sbb
mov
jne
jg
mov
insb
outsl
add
pop
mov
mov
or
lret
mov
pusha
xor
and
sub
mov
cmp
insb
loop
mov
pop
dec
or
out
insb
pop
and
push
mov
pop
out
test
out
rolb
mov
dec
or
out
jl
stc
jl
scas
movsb
push
fs
push
insb
mov
cmc
add
mov
jl
xlat
subb
lds
in
ja
insb
lret
pop
and
insb
out
insb
gs
mov
fs
mov
loop
into
std
adc
inc
xor
scas
jge
cld
jge
jecxz
xor
pop
and
aam
cmp
test
test
inc
pushf
fidivrl
in
sub
iret
roll
mov
call
inc
aas
dec
std
pop
dec
adc
dec
popl
mov
jg
xacquire
sbb
sbb
or
mov
sbb
ds
jmp
popf
xchg
popf
and
movsb
adc
ss
cld
jl
ffree
std
fildl
jle
fiaddl
jb
mov
jg
fnstsw
jmp
cmp
add
stos
std
fldl
push
or
frstor
add
mov
mov
mov
push
clc
sub
fldl
in
jmp
ret
cltd
hlt
pop
nop
pop
and
xchg
pop
insl
cmp
sbbl
ds
mov
mov
mov
or
cmp
mov
je
inc
mov
insb
mov
gs
sbb
add
cmp
pop
mov
jnp
pushf
ds
loope
out
in
dec
test
sub
out
hlt
dec
or
xor
mov
pushf
sbb
push
je
jne
jg
mov
push
scas
xlat
fcomi
pushf
in
lahf
jl
inc
mov
cmp
ret
fnsave
stos
mov
arpl
ret
mov
sbb
mov
sti
jge
nop
rcrb
fisttpll
mov
jge,pt
fwait
sub
inc
sbb
call
xor
inc
sbb
fstl
movsb
jg
ret
stc
mov
xor
enter
and
adc
and
cltd
sbb
sub
mov
gs
dec
and
and
jl
test
ret
sbb
push
test
jg
ret
stc
je
je
and
and
jl
test
ret
stc
fsubr
fmull
out
cld
movsl
stc
add
add
and
and
mov
gs
jg
ret
mov
mov
mov
scas
adc
adc
xor
sbb
cmp
mov
stc
je
or
sti
cmp
pop
shl
loope
fdivl
and
jl
fmul
stc
out
mov
and
and
test
adc
scas
adc
lret
jmp
fldl
in
dec
mov
insb
cld
add
xor
hlt
jg
ret
stc
mov
sbb
jl
xor
mov
or
je
stc
adc
test
mov
mov
stc
out
or
and
and
cltd
ret
fcomp
stc
add
hlt
dec
and
and
mov
gs
sbb
xchg
xchg
add
and
and
pop
loop
adc
test
adc
adc
stc
adc
adc
mov
push
jl
add
dec
and
and
gs
test
xchg
test
out
test
mov
aam
add
dec
add
aas
adc
inc
jne,pt
jg
mov
cmpsb
pop
mov
dec
jl
loopne
jl
sbb
add
hlt
dec
and
and
mov
test
int3
fdivl
lret
lahf
push
inc
frstor
xchg
int
add
insb
jl
jl
and
and
test
ret
stc
jl
jl
mov
ret
jl
jl
pop
filds
cld
push
add
jne
mov
mov
ret
pop
test
stc
je
or
and
push
test
stc
out
adc
xor
cld
out
fmull
mov
cld
rolb
add
hlt
dec
and
cmp
mul
and
movsb
pop
jnp
pop
xor
and
ds
dec
test
jne
jg
push
stos
add
cs
ret
pop
xchg
jmp
dec
and
and
gs
into
stc
cmpsb
sbb
sbb
gs
je
jnp
pop
lods
cmp
adc
test
mov
cmc
jecxz,pt
pop
fcompl
std
ret
sbbl
enter
xor
pop
push
mov
sbb
sti
pop
pop
aaa
filds
test
ds
dec
ljmp
imul
add
and
jl
ja
fs
cmp
shrb
js
insb
insb
jecxz
arpl
bound
adc
fimull
ds
dec
in
mov
subl
sti
cmp
insb
and
xor
xor
dec
or
fnsave
and
and
pop
std
popl
and
lods
mov
dec
incb
and
pop
xlat
ljmp
fldl
cltd
cld
fs
pushf
or
sbb
outsb
sbb
mov
sbb
hlt
les
in
mov
xchg
lods
xor
pop
dec
test
lods
and
sub
sbb
bound
and
es
cs
sub
pushf
in
cmp
cltd
pop
sbb
in
push
or
mov
xchg
stc
jle
lret
cmp
into
adc
add
and
fisubl
call
xor
or
outsb
sarb
xchg
icebp
mov
cmp
cmp
cmc
sbb
fildll
sbbl
test
repz
int
xor
and
push
je
outsl
cmp
mov
lods
cli
mov
loopne
add
insb
lcall
test
mov
mov
cmpsl
push
fwait
pop
loop
adc
ljmp
lret
push
lret
ret
jecxz
mov
mov
lcall
sbb
cwtl
mov
add
xor
mov
fsubrp
gs
jl
mov
mov
shrb
pop
push
add
dec
fisubl
test
hlt
sbb
outsl
dec
insb
fsubl
test
and
mov
movsb
subb
xor
bound
ljmp
sbb
bound
test
jp
dec
fcmovnb
sub
jne
imul
test
subl
ds
std
mov
mov
mov
push
outsl
or
jne
pop
jae
std
cmp
std
hlt
sbb
xchg
cmp
jg
jo
adcb
stc
cld
inc
dec
rcrl
lea
lods
lcall
scas
cmc
pop
inc
inc
pop
int
in
mov
repz
nop
mov
sub
popf
cmp
pop
xor
cld
cs
sbb
cmp
xor
insl
pusha
ss
sub
mov
sbb
jmp
and
xor
add
out
mov
sti
inc
ret
pop
std
sub
cmc
out
push
and
or
add
sbb
mov
rolb
cld
mov
sarl
or
jmp
insb
fnstsw
mov
sti
imul
jge
loop
cmpb
pop
adc
inc
int
fwait
or
dec
jns,pt
loop
jno
loope
push
inc
pop
jbe
sbb
dec
insb
fisttpll
stos
push
ljmp
repnz
xchg
addr16
outsb
adc
lret
and
cmp
adc
in
jb
push
sbb
jae
faddl
loope
movsb
testl
in
cmp
mov
loopne
xchg
arpl
push
mov
inc
dec
aaa
adc
inc
cmp
jns
and
fnstcw
xor
cmp
jns
add
jle
push
ljmp
mov
jbe
and
xor
dec
or
jl
stos
push
xor
sub
jmp
in
imul
andl
adcb
sbb
outsl
repnz
loope
xor
test
sbb
fstpl
cmc
and
dec
jbe
jmp
int
and
fildl
loope
cli
and
shl
jg
fisttpll
and
inc
mov
cmp
lods
outsl
ss
rclb
cs
ds
in
outsl
mov
cmp
xor
jmp
push
in
inc
fbstp
subl
add
mov
std
push
adcl
loope
sbb
stc
jge
push
pop
stos
inc
mov
jle
jge
push
add
sarl
jne
jne
je
jmp
sbb
orl
ss
gs
or
mov
jle
cmpb
sbbb
sbb
xor
lret
or
fisttpll
adc
ret
mov
inc
loop
cld
jl
adc
jne
sbb
and
cmp
fwait
pop
fnstsw
push
or
fnsave
nop
ret
out
into
shl
cmp
mov
test
loope
insb
popf
jmp
xor
sbb
adc
and
mov
xor
repnz
sbb
loope,pt
outsl
inc
dec
adc
popf
fwait
imul
cmp
or
jo
fisubs
xor
insb
pop
std
sub
xor
cmp
shrl
lcall
js
sbb
mov
sub
sbbb
lock
out
pushf
jge
lret
push
aas
ds
in
outsl
mov
pop
or
cltd
fistps
jno
dec
test
neg
rcrl
ds
adc
insl
mov
adc
ss
push
nop
mov
insb
pop
loope
insb
pusha
sbb
in
outsb
xlat
jg
push
jle
std
in
cmp
je,pt
lods
push
pushf
inc
or
push
out
cld
or
xchg
enter
xor
jge
sub
cmp
out
and
and
cs
and
sbb
cmp
lret
call
and
add
push
ds
xor
push
pop
aas
loop
stos
add
cltd
sahf
into
cmp
sbb
fsts
and
lret
jge
repnz
cld
pop
mov
xchg
pop
repnz
sbb
xor
jnp
test
sti
mov
sub
jmp
push
cmp
add
int3
test
shlb
inc
subl
in
cld
jg
mov
out
pushf
dec
xor
add
cmp
mov
jg
ret
stc
cld
out
xchg
dec
and
and
xor
gs
fistps
idiv
xchg
adc
cmp
subl
and
idivl
mov
inc
out
ss
test
mov
add
repz
inc
cmp
jmp
add
mov
add
sti
icebp
pop
mov
and
std
xor
ret
mov
jo
in
pop
mov
pop
stos
loope
mov
inc
out
aam
aad
std
push
fwait
mov
fwait
xchg
or
add
int3
xor
pushf
pop
imul
movsl
ret
push
and
int3
imul
outsb
xlat
jb
add
jno
jecxz
jbe
xchg
push
cli
sbb
jne
sbb
and
loope
mov
stc
fbstp
andb
aad
cmp
hlt
pop
inc
cli
pop
dec
or
in
xor
or
cmp
fistps
sti
mov
sbb
and
sti
pop
add
pusha
int3
and
cld
mov
inc
push
inc
bound
xor
loop
push
leave
jo
mov
pop
cmp
xrelease
and
ret
and
mov
jle
pop
adc
xor
sub
sbb
test
subl
pop
xchg
pushf
inc
lret
adc
stc
jb
mov
stos
fisubl
jmp
bound
mov
repz
fidivrl
jle
pushf
jg
fldenv
outsb
sub
or
lcall
mov
hlt
mov
and
jecxz
std
fmul
loop
pop
mov
lret
and
sub
jmp
jge
mov
popf
push
and
cmpsl
arpl
imul
mov
lcall
subl
jno
test
popl
in
jl
mov
imul
jge
stc
fisttpll
cmp
test
xor
or
cltd
add
lods
pop
pop
std
mov
insb
push
cmpb
jle
pop
mov
cmp
xor
cli
loopne
dec
sarl
pop
lods
loope
sti
push
jmp
mov
repnz
push
sti
xchg
mov
jge
out
sbb
jge
std
sub
xor
mov
jge
imul
mov
sub
test
stc
xor
sub
and
push
inc
mov
push
sbb
jl
notb
out
jnp
mov
inc
stos
pop
cmp
pushf
test
push
push
loop
add
frstor
mov
mov
movsb
lret
fwait
out
lods
test
xor
inc
mov
mov
repz
fidivrs
outsb
mov
jle
sub
outsl
ret
gs
push
and
ds
stc
ja
add
sbb
ret
xchg
mov
loopne
lock
mov
fisubs
int
clc
jmp
xor
out
scas
add
out
mov
adcb
cs
jmp
stc
jbe
cwtl
subb
add
loope
in
jae
loop
dec
sub
jnp
ret
xor
fstpt
inc
jg
test
bound
enter
and
sub
xchg
std
cmp
mov
cmc
and
in
push
scas
mov
dec
repz
and
jns
sbb
repnz
ficoms
div
pop
fcoml
xor
in
jl
inc
dec
fstpl
pop
arpl
jnp
mov
fs
insb
ffree
add
xchg
lcall
test
ss
loope
in
std
fsubrs
pushf
pop
jecxz
out
xlat
inc
lods
xchg
cmp
std
jns
shll
mov
pop
inc
cmp
nop
ret
adc
jecxz
mov
pop
sti
frstor
int
outsb
and
push
jge
lret
jge
ds
in
sbb
jge
cs
add
out
mov
jns
and
popa
jmp
adc
jp
imul
xchg
lretw
pop
nop
adc
pop
imul
pop
into
xchg
es
pop
test
pop
repz
mov
jle
jnp
cltd
rclb
mov
mov
inc
push
shll
fmulp
ret
cld
jb
mov
mov
imul
cld
cmp
pop
pop
ds
push
pop
fcompp
std
jle
fxch
cmp
popf
sbb
jmp
std
sbb
std
mov
lret
stos
inc
push
jle
pop
sbb
insb
int3
or
loope
xchg
aas
jg
mov
xor
xchg
cmpb
repnz
icebp
and
push
lret
sar
mov
cmp
loope
jge
fldl
pop
imul
std
jl
fisttpl
mov
cltd
std
jne
jl
or
cmp
adc
pop
mov
movsb
jge
sbb
imul
ficoml
ret
inc
adc
cmp
cld
test
mov
fcomi
fnstsw
pushf
stc
push
scas
mov
insb
je
mov
mov
jmp
lahf
out
pop
pusha
inc
std
pop
push
stos
std
daa
incb
sbb
push
lods
lahf
and
mov
mov
scas
xchg
cmpsl
xchg
repnz
imul
or
adc
xchg
pop
outsb
sub
jnp
add
in
int3
or
out
mov
lods
cmp
xchg
icebp
or
popf
or
icebp
int3
add
pop
aad
dec
xor
in
push
inc
lods
fdivl
mov
push
pop
cmp
adcb
sub
repnz
lret
std
xchg
jl
and
and
mov
je
repz
sbb
fildl
cmp
jne
loop
jnp
cltd
and
fwait
inc
add
mov
outsb
int3
mov
lret
mov
hlt
fucom
pushf
pop
mov
ljmp
popf
mov
lret
xchg
push
xchg
cmp
jne
mov
fisubrl
or
lock
xor
mov
cld
mov
addr16
int3
sub
shl
xor
outsl
pop
ljmp
andl
jo
testl
add
mov
cld
cmpb
and
faddl
lret
xchg
push
inc
idiv
pop
pop
and
adc
xchg
mov
mov
lock
sub
cmp
lret
lcall
jno
jecxz
mov
cmp
and
or
push
add
add
and
and
jg
inc
add
in
sbb
mov
mov
sbb
cmp
iret
mov
inc
data16
lahf
addr16
leave
shl
sbb
fcomi
adc
pop
cmpsb
mov
and
ljmp
jl
xor
fiaddl
cmp
pop
ss
jl
lods
jecxz
add
dec
into
dec
sbb
ret
mov
jl
dec
addl
jae
adc
insl
xlat
xor
add
mov
xorb
insb
xor
jge
add
icebp
xor
mov
adc
pop
cld
add
sbb
rcr
jno
xchg
pop
xor
ds
inc
sbb
mov
rcrl
jae
scas
mov
mov
fnsave
ljmp
mov
jmp
mov
xor
fwait
push
inc
cmp
fnstsw
push
cmp
fldl
and
lcall
ljmp
imul
das
dec
mov
pop
xor
mov
jnp
cmpsb
and
jg
out
dec
and
insb
pop
stos
dec
sti
ret
jg
push
out
dec
and
and
mov
pop
lcall
out
dec
mov
jne
out
cmpsb
and
outsb
mov
cld
jns
lock
and
jne
stc
mov
ljmp
and
and
addr16
lret
out
dec
xchg
in
roll
push
jne,pt
pop
pop
add
inc
adc
ljmp
sti
popf
cwtl
repz
addr16
mov
mov
dec
sbb
std
sbb
push
out
dec
test
addr16
loope
and
jg
sbb
loope
cmpsb
and
jg
out
dec
and
and
mov
in
sub
iret
sub
xor
and
cmp
mov
lret
fnsave
out
icebp
sub
mov
negl
ljmp
cmp
jns
pop
ljmp
lret
out
dec
mov
aam
rcrl
test
addr16
inc
gs
out
cmpsb
and
jg
inc
jmp
dec
mov
ret
cmp
cmpsb
and
jg
out
dec
fbstp
lock
ds
adc
or
cmpl
cmp
in
roll
hlt
pop
lcall
or
outsl
subb
cmp
mov
jne
out
cmpsb
and
jg
fisubrl
push
test
in
mov
mov
add
dec
sbb
pop
cmpsb
and
and
add
mov
out
push
pop
mov
popf
add
dec
adc
sbb
mov
lret
out
dec
mov
ret
sarl
and
inc
shrb
push
test
sbb
loope
adc
jle
sub
mov
cli
pusha
out
dec
xor
cmp
mov
and
and
jg
out
dec
test
test
ret
push
test
pop
sti
adc
aam
int
int3
cli
pop
lret
out
dec
and
and
mov
in
sub
mov
cli
cmpsb
and
jg
cli
sub
jg
repnz
push
and
repnz
xorb
rol
repnz
ljmp
inc
lret
repnz
pop
fiaddl
loope
or
jg
out
dec
mov
jne
out
cmpsb
xor
lret
cld
cmpsl
dec
ffree
jmp
dec
and
and
lret
or
stc
or
cmp
addr16
dec
cmp
add
sub
call
and
dec
and
and
mov
gs
imul
mov
ret
add
out
dec
test
addr16
and
lret
add
loope
cmpsb
and
bound
nop
insb
pop
negl
in
sub
stos
cmpsb
and
jg
out
dec
xor
sbb
sahf
adc
cmp
mov
mov
test
sub
test
ret
push
test
jg
push
out
mov
cmpb
and
mov
push
xor
jge
jmp
out
leave
std
test
mov
sub
xor
mov
push
sbb
cmpsb
and
jg
mov
fcomip
popf
adc
ret
and
mov
out
dec
and
and
mov
loope
mov
or
cmp
out
mov
sub
mov
out
dec
jmp
frstor
xor
shlb
dec
add
jl
sahf
dec
test
pop
mov
mov
aam
inc
mov
mov
mov
jmp
sarb
push
mov
popf
data16
mov
pop
xor
shlb
fdivrs
push
es
ljmp
out
and
push
icebp
mov
frstor
inc
hlt
jle
inc
test
or
push
pop
adc
mov
outsl
daa
loop
sub
xchg
jge
aad
data16
pop
jg
pop
test
iret
jge
xchg
outsl
sbb
mov
dec
add
arpl
mov
sbb
cltd
push
sbb
xor
and
or
pushf
mov
sub
arpl
jle
es
pusha
pop
xchg
or
mov
sarl
adc
mov
adc
jle
jp
xchg
imul
pop
fistl
xchg
sub
jmp
push
xchg
fnsave
jle
push
pop
rcrl
jp
sbb
int
loop
jmp
mov
sub
outsb
jmp
pop
mov
sbb
outsb
push
jle
push
adc
je
dec
jle
push
mov
icebp
outsb
mov
imul
fucomp
repnz
pop
cmpsb
es
fs
lahf
fcomi
mov
mov
cmpsl
add
mov
fisttpll
jne
pop
mov
pop
xchg
pop
or
sbb
fisubrs
lods
cmpsl
push
mov
push
or
dec
jle
push
mov
insb
fldt
int
cli
mov
xor
outsb
outsl
in
pop
adc
mov
jle
push
rcr
inc
pop
sbb
adc
pop
clc
pop
roll
sbb
adc
jp
outsb
dec
jle
push
or
mov
pop
clc
pop
roll
sbb
adc
scas
loope
fdivrs
loope
minps
nop
outsb
xor
push
icebp
fstl
pop
mov
shrb
mov
jle
push
in
fisttpll
mov
popa
sbb
aam
repz
dec
es
fwait
xchg
sti
jle
cmp
hlt
adc
sbb
mov
js
bound
push
enter
test
sbb
jno
sbb
xor
pop
pop
mov
data16
xor
cmp
sbb
rcrb
pop
xchg
pop
mov
shll
pop
push
mov
adc
aaa
jg
pop
fcoml
mov
in
jl
cs
pop
lret
sbb
in
inc
mov
jge
mov
xor
mov
in
shrb
scas
add
loop
push
xor
dec
cmp
imul
test
push
mov
mov
in
test
cmp
sub
fs
mov
xor
push
xor
daa
mov
pop
aad
mov
dec
pop
dec
xlat
mov
sbbl
push
mov
das
mov
xor
lea
or
jns
pop
jecxz
xchg
cmp
pop
or
mov
in
cmpsl
rolb
je
lret
enter
inc
mov
dec
in
xor
mov
out
mov
pop
xlat
test
push
mov
imul
sahf
push
addr16
dec
jbe
push
and
cmpb
lcall
jp
lcall
sbb
add
popf
or
and
jbe
int
data16
dec
or
call
jle
dec
cs
xchg
es
sti
jge
outsb
out
scas
cmp
pop
in
jle
xchg
in
mov
int
inc
icebp
add
and
out
je
in
pop
sti
add
std
ss
mov
jbe
push
arpl
rorl
cmc
and
mov
ds
ret
pop
test
hlt
aad
cmc
data16
cmp
or
repz
sbb
cli
outsb
mov
push
push
dec
imul
push
xchg
ds
xlat
inc
inc
test
push
cmc
std
enter
add
ds
popf
daa
push
popf
scas
mov
xchg
xor
mov
pop
add
std
pushaw
aaa
in
pop
adc
sbb
push
push
pushf
data16
jecxz
jbe
sarl
es
test
push
leave
push
pop
je
daa
cmc
pop
in
jne
je
push
add
cli
std
pop
in
jp
jns
test
js
jmp
fidivrs
imul
jb
lea
mov
adc
xor
movsb
pushf
mov
lods
test
and
xor
sub
sti
xchg
mov
cmpl
and
xor
pop
xchg
stos
mov
sbb
sub
cmp
icebp
or
pop
cltd
xchg
test
mov
sbb
sub
cmp
lock
or
cwtl
nop
test
mov
sbbb
sub
cmp
out
pop
call
mov
ja
xchg
divps
pop
aaa
das
imul
push
outsb
xchg
mov
lahf
push
out
cld
outsb
xor
jb
int
sub
lahf
cmp
stos
jns
cmc
popa
jl
pop
push
in
je
es
add
std
insb
scas
bound
jmp
xchg
std
testl
lods
scas
movsl
mov
jb
scas
fbstp
mov
pop
and
shr
or
push
push
xchg
and
mov
pop
fstpt
sub
popf
pusha
imul
inc
pop
push
pop
mov
in
cmp
cli
insl
lods
lcall
pop
mov
xchg
bound
xchg
imull
nop
loopne
in
mov
pop
pop
inc
dec
cld
repnz
ret
add
mov
pop
xor
rcrl
subb
mov
js
adc
mov
pop
xor
ss
bound
add
mov
push
iret
pop
fcompp
xchg
push
sbb
out
fsubrs
adc
clc
shlb
bound
aas
idivl
cmp
cs
shll
leave
xchg
fsubp
xor
mov
push
sbb
adc
movb
pop
lcall
or
outsb
aam
lret
mov
and
jle
mov
xchg
mov
jb
jge
pop
into
rorb
notb
mov
stos
ljmp
add
adc
sub
pop
pop
outsl
adc
pushf
fstl
mov
jne
roll
fistps
inc
mov
sbb
sub
cmp
nop
mov
sbb
movsl
cmp
xlat
int3
out
test
rcrl
jecxz
inc
int
test
lret
pop
ja
xorl
adc
pop
adc
fnsave
es
dec
lret
fistpl
aam
jmp
add
pop
fcoms
cmp
ljmp
cmp
sbb
and
call
jmp
push
orl
test
pop
adc
movsb
mov
pop
cltd
cmp
popf
fstpl
jb
int3
in
xchg
lods
stos
or
lods
fs
cmp
sbb
aaa
and
jbe
iret
faddl
lock
lcall
and
stos
out
das
cmpsl
mov
leave
call
push
push
and
cli
mov
gs
push
pop
sub
rclb
insb
dec
out
lods
push
fs
imul
mov
pop
adc
xchg
fstl
dec
pop
jns
in
sub
fisubl
scas
scas
test
in
addr16
popa
nop
out
mov
xchg
add
gs
jbe
sbb
hlt
cli
jns
lahf
decb
fisubrl
pop
jecxz
xor
pop
mov
aad
ljmp
mov
pop
xor
jmp
jge
push
ss
imul
pop
xchg
lahf
dec
cltd
pop
push
inc
fcomps
xchg
pop
mov
sub
inc
inc
inc
lods
xor
outsb
shrl
jp
mov
mov
pop
sub
push
outsl
loopne
fwait
sub
adc
push
adc
ljmp
inc
push
rcl
pop
movsl
test
xchg
mov
sub
or
arpl
aad
test
mov
lock
inc
sahf
es
insb
or
loope
popa
inc
fwait
xchg
sub
movsl
aaa
mov
mov
pop
mov
pop
cli
xchg
inc
popf
push
push
inc
mov
in
cmc
and
inc
pop
sbb
mov
push
lret
pop
lock
ret
cmp
roll
lds
pop
xchg
push
sbb
dec
in
arpl
in
aaa
scas
lret
cltd
outsl
pop
ss
addr16
cmp
sbb
sti
pop
imul
into
pop
mov
inc
pop
es
add
inc
mov
cwtl
orl
jbe
repnz
in
mov
pop
pop
xlat
and
jo
jle
fcomps
xchg
inc
mov
lods
mov
jp
cwtl
and
pop
pop
push
cmp
out
mov
fcomps
mov
lods
sbb
into
stc
xlat
les
or
mov
ret
jns
stos
mov
lods
add
in
lcall
pop
xchg
adcl
pop
or
lods
mov
or
loope
subl
mov
sbb
fldenv
push
xchg
int3
pop
cmp
enter
iret
jo
lret
nop
mov
add
jmp
popf
imul
pop
shlb
mov
push
movsl
pop
xor
jmp
add
in
sbb
pop
jno
stos
shlb
outsb
std
push
pushf
scas
clc
pop
rorl
jno
scas
jge
jbe
sbb
loop
mov
pop
pop
mov
push
sub
push
stos
fwait
xor
es
xor
ffreep
mov
lcall
clc
dec
mov
in
sbb
jp
adc
mov
popa
rcll
mov
jecxz
add
pop
fistps
cwtl
cmp
stos
dec
cli
cltd
inc
jmp
gs
pop
mov
mov
inc
pop
mov
mov
jl
and
inc
pop
les
movsl
sbb
dec
popf
testl
pop
ss
pop
dec
ret
xchg
push
ds
in
pop
icebp
mov
add
or
pop
push
es
fldcw
in
pop
sbb
or
imull
int3
or
ret
or
fdivs
rcr
mov
fcompl
movsb
les
pop
mov
dec
sbb
out
fisttpll
in
scas
cmp
mov
stos
pop
adc
ja
sbb
pop
xchg
sbb
hlt
push
pop
xor
ret
push
or
mov
cmpl
loopne
push
pop
xor
or
sbb
push
mov
mov
pop
sub
insl
mull
imul
xchg
cmp
lcall
shr
out
repz
jge
jne
pop
push
inc
add
pop
cs
sbb
sahf
mov
sub
scas
test
cld
adc
adc
jmp
pop
xorl
jae
mov
mov
scas
repnz
fisubrs
arpl
ret
out
sahf
out
pop
aam
xorl
fisubs
mov
pushf
rcrl
pop
into
inc
ffree
aaa
mov
and
andl
pop
mov
aam
jmp
sbb
dec
adc
jbe
aas
xchg
mov
adc
adc
es
jno
into
test
in
imul
cmp
inc
add
fisttpll
mov
push
push
push
push
pop
sub
call
cld
movsb
movsl
dec
in
cmp
pop
test
sbb
jbe
inc
xchg
xor
cs
pop
jnp
jno
dec
sahf
push
popl
es
nop
mov
scas
sbb
pop
dec
ficompl
cmc
daa
xor
pop
scas
xchg
pop
roll
xor
lret
repz
bound
jle
pop
push
mov
popa
push
xor
mov
jno
push
stos
pop
sti
lods
push
clc
xchg
pop
xlat
in
pop
mov
int
add
add
cmpsb
pop
lret
fwait
jnp
pop
pop
pop
pusha
push
inc
mov
cld
loopne
call
sub
sahf
enter
mov
outsl
jl
push
cmp
mov
dec
gs
inc
call
inc
test
vpsubd
pop
sarb
lret
lock
fwait
dec
jecxz
mov
filds
jbe
xor
pushf
pop
dec
jno
ret
add
adc
inc
sbb
xor
jo
sbb
popa
pop
jge
xchg
push
pop
cmp
xchg
inc
add
xor
mov
adc
push
scas
aas
jae
ret
inc
and
cs
aaa
mov
shrb
imul
mov
fs
mov
mov
bound
sbb
pop
pushf
ds
sbb
mov
jbe
movsl
mov
pusha
jno
add
push
mov
fisttpll
push
mov
dec
jne
popf
jbe
lea
mov
data16
ret
and
shrb
fimuls
jmp
ret
rcrb
mov
in
scas
or
jecxz
in
and
xchg
fstps
lret
pushf
inc
leave
pushf
inc
addr16
inc
lods
and
cwtl
push
gs
outsl
in
bound
cld
pop
mov
dec
adc
xor
hlt
pop
sbb
xor
pop
fcomip
sub
out
addr16
inc
ret
mov
lods
repnz
mov
pop
dec
and
sahf
mov
arpl
dec
bound
pop
jno
pop
xchg
adc
popa
cwtl
mov
mov
sbb
or
xchg
popf
xor
scas
gs
das
bound
xor
add
inc
sahf
int
jo
sub
pop
pop
adc
pop
in
dec
sub
addr16
outsl
mov
jle
es
mov
dec
test
fwait
or
pop
ret
out
arpl
fs
pop
popa
les
push
out
int3
ljmp
cltd
and
mov
lea
outsb
or
inc
sub
repnz
out
rcl
sahf
gs
xchg
into
pop
cmp
xchg
inc
fsubs
in
or
into
xor
mov
idivl
cwtl
xor
dec
pop
aad
lods
repz
ret
in
sahf
dec
mov
or
dec
arpl
aaa
pop
jne
ja
sbb
jno
roll
cmp
pop
inc
adc
dec
pusha
imul
idiv
out
mov
test
lea
pop
out
cwtl
fldenv
dec
sbb
aaa
mov
sub
andb
mov
mull
sub
cltd
mov
je
mov
inc
rcrb
pop
sub
mov
mov
pop
out
add
adc
popf
das
push
in
jno
sbb
fsubr
add
adc
jle
mov
dec
lret
pusha
adc
decb
fnstsw
jae
jb
and
pop
push
jge
xor
sbb
push
aaa
pop
sbb
dec
scas
arpl
dec
pop
sbb
mov
lea
inc
adc
sbb
pop
dec
push
adc
icebp
mov
mov
inc
gs
pushf
mov
clc
sbb
stos
arpl
sahf
adc
mov
in
outsb
lods
mov
dec
xchg
in
add
arpl
neg
movsb
es
lea
stos
imull
int
fldenv
cmpsl
add
lret
inc
mov
fistpl
jg
test
lock
pop
sub
pusha
rclb
pop
pop
and
sub
cmp
sti
cltd
mov
pop
or
cmp
test
cmp
jl
fwait
insl
outsb
les
sub
shll
cmpsb
js
push
or
push
jbe
fildll
test
scas
xchg
jo
sbb
repnz
mov
dec
mov
pop
lret
xor
or
pop
js
xchg
lcall
inc
ret
pop
sub
mov
sti
and
cmp
popf
inc
jbe
adc
jecxz
outsb
mov
fimuls
loopne
iret
push
in
mov
cmpsb
mov
bound
ret
inc
sbb
add
sbb
pop
and
shrl
in
fdivr
cmpsl
xchg
stos
out
or
pop
hlt
mov
insb
push
pop
xor
mov
pop
dec
xor
xchg
in
or
pushf
cmpsl
cmp
enter
pop
dec
adc
pop
loop
lods
xchg
popa
jno
ret
push
dec
push
sub
sahf
adc
insb
fimuls
sbbl
and
inc
xchg
test
sbb
pop
jge
int
outsb
mov
out
pop
adc
cld
mov
xor
jbe
insb
das
cmc
stos
or
mov
repz
xchg
call
out
mov
push
pop
outsb
iret
mov
dec
xchg
test
ret
stc
add
jmp
xchg
mov
enter
cmp
mov
aad
pop
dec
pop
subl
sub
ret
xor
xor
lahf
mov
inc
adc
or
mov
mov
adc
pop
fstpl
vdivps
or
sbb
aas
divl
xchg
push
test
dec
loope
cmp
cmp
jge
cltd
in
pushf
pop
mov
in
les
loopne
dec
imul
bound
dec
mov
mov
xor
shlb
fmuls
jo
fs
pop
icebp
das
and
es
repnz
pop
hlt
in
or
sub
negb
mov
mov
pushf
cmp
sbb
aaa
lret
ret
mov
scas
bound
out
sahf
xor
ret
push
test
sbb
cltd
pop
mov
lods
dec
jmp
cmp
shlb
pop
mov
adc
fstl
pushf
adc
adc
bound
adc
pusha
cs
jno
out
pop
sahf
imul
push
ds
inc
push
pop
or
ror
xor
pop
dec
hlt
and
sbb
or
jecxz
jle
push
xor
mov
sub
mov
or
test
aaa
mov
pop
xchg
mov
mov
and
inc
aas
pop
pop
pop
ret
lods
icebp
je
mov
pop
and
mov
mov
pop
shrl
fwait
mov
pop
sub
jbe
sub
push
ss
push
adc
jo
ja
out
aas
xorl
in
pusha
sub
int
imul
pusha
popa
arpl
out
dec
sti
enter
mov
or
dec
scas
pop
pushf
mov
or
pop
mov
lea
sarb
pop
mov
mov
pop
cwtl
pop
fcmove
dec
scas
out
xor
rcll
adc
push
int
sbb
jne
and
xchg
push
cmp
test
mov
xchg
rcl
mov
fldenv
rcr
xor
jo
sti
popl
push
cwtl
fmuls
inc
test
xlat
or
adc
mov
adc
add
add
outsb
add
adcb
leave
mov
adc
push
pop
xchg
and
ror
pop
inc
sbb
mov
into
push
stos
jle
pop
cmp
sub
pop
int3
jns
mov
sbb
in
cwtl
mov
out
punpckldq
nop
and
pop
inc
movsb
arpl
dec
bound
jbe
rcll
or
mov
mov
mov
jle
inc
push
mov
push
mov
mov
cltd
call
inc
out
xchg
cmc
add
push
sbb
aam
add
inc
adc
ja
jmp
mov
push
adc
lock
pop
xor
ljmp
mov
xor
bound
xor
pop
pop
mov
sbb
dec
popa
sti
test
adc
sbb
int
nop
mov
xchg
leave
jg
jmp
push
movb
sbb
adc
sub
xchg
dec
sar
cmpsl
jbe
je
cld
or
inc
adc
fnsave
outsb
aad
test
aaa
fmull
cwtl
cld
imul
xor
pop
nop
xchg
xchg
mov
inc
jbe
push
aam
mov
out
xchg
stos
inc
stos
pop
mov
jnp
stos
jo
aam
fnstsw
mov
pop
loope
jno
in
mov
movsb
sub
push
push
gs
int3
mov
pop
or
jg
sbb
imull
mov
pop
pop
cwtl
subb
loope
out
jne
lds
es
ret
jbe,pt
jnp
mov
in
in
stc
icebp
dec
adc
push
push
call
jne
push
mov
mov
sub
outsb
gs
loop
push
bound
inc
jmp
adc
adc
es
push
push
lcall
js
ja
mov
imul
mov
repz
dec
sub
dec
sub
adc
xorl
push
push
cmp
pop
xor
imul
hlt
or
nop
lea
inc
jge
jecxz
test
fiaddl
pop
stos
ret
pop
add
pusha
scas
mov
mov
dec
adc
lahf
bound
test
sbb
pop
pop
lods
mov
stc
push
pop
mov
imul
addr16
cmp
gs
repnz
mov
dec
int3
addr16
inc
mov
jle
mov
mov
inc
xlat
xchg
enter
sbb
push
sub
mov
pop
sti
xchg
repz
les
pop
and
sbb
mov
aad
xor
fldt
popa
mov
pop
or
fisubrs
fs
pop
cwtl
imul
lds
mov
popa
jns
std
mov
repz
pop
inc
cmp
mov
test
ret
and
sbb
inc
in
add
lcall
push
jmp
mov
mov
inc
pop
fstpt
push
jmp
cmove
push
jnp
aad
pop
pusha
mov
jge
xchg
mov
std
cmp
movsl
aad
enter
in
xor
pop
mov
cwtl
shr
testb
sbb
in
pop
sbb
xor
adc
pop
aad
daa
and
fmuls
sub
sub
pop
xchg
jno
lret
add
jmp
aas
stos
pop
push
dec
or
push
sbb
pop
loopne
jl
sub
out
inc
jbe
ret
pop
fidivrl
jmp
pop
into
out
push
mov
pop
dec
jo
push
add
scas
inc
xchg
shlb
sub
loopne
add
inc
and
rorb
outsb
pop
movsl
fcmovnbe
push
add
mov
inc
call
jno
sahf
insb
jo
inc
fistpl
inc
das
inc
xchg
push
add
xchg
pop
lods
jbe
push
jb
sbb
outsl
sub
cmpsb
sub
aas
test
and
ja
sahf
fcomps
mov
mov
imul
je
sar
aaa
cmp
lock
add
scas
sub
cmp
icebp
pop
push
mov
xchg
dec
inc
outsl
flds
outsl
and
daa
fdivrp
in
fimull
in
inc
addb
insl
stc
test
jle
sbb
pop
cmc
mov
pop
xlat
nop
mov
call
adc
dec
cmp
add
or
add
jle
mov
cmp
xor
dec
movsl
ret
fisubrs
mov
cli
sub
pop
add
xor
outsb
setae
cmp
xchg
xchg
ds
gs
xor
add
pop
mov
xchg
or
sbbb
call
cmpsb
sahf
inc
pop
inc
arpl
cld
movsb
mov
pop
es
and
sbb
in
ds
mov
mov
dec
push
shll
dec
or
pop
or
lahf
mov
xchg
xchg
pop
sub
jmp
pop
xchg
dec
sbbl
scas
push
pop
lahf
inc
aam
stos
mov
jg
pop
jmp
jo
pop
pop
fucomp
xchg
or
cltd
fs
pop
pop
mov
sbb
sbb
adc
cmp
mov
pop
mov
sbb
fwait
pop
push
gs
push
jge
lods
jns
lret
jbe
js
imul
and
dec
inc
mov
jp
imul
inc
adc
mulb
stos
dec
push
pop
push
mov
sahf
or
in
int
fcomip
sub
jb
dec
inc
pop
jno
fs
hlt
imul
in
ret
loope
mov
and
and
mov
mov
jecxz
dec
cld
out
mov
add
add
cs
push
dec
je
fildl
in
push
fisubrs
sbbb
and
ret
mov
in
sbb
fisubrl
and
jge
mov
pusha
jbe
es
std
mov
call
and
mov
xor
gs
repz
outsb
std
ucomiss
pop
inc
outsl
mov
xor
movsl
ja
cmp
mov
fsubrs
cmc
mov
cmp
adc
xorb
dec
xchg
movsl
xor
stos
call
out
into
shlb
sub
addr16
scas
cmp
pusha
pop
test
cmp
mov
into
movsb
test
sub
fwait
xchg
inc
fisttpll
ja
into
cmp
push
cwtl
dec
faddl
pop
out
ret
pop
inc
dec
adc
pop
mov
sti
xchg
inc
pop
out
xlat
cmp
cmpsl
nop
gs
pusha
mov
in
shlb
mov
outsb
lahf
cmp
push
mov
pushf
cltd
mov
lock
sub
test
push
push
pslld
mov
cwtl
stos
decb
sahf
arpl
or
mov
pusha
sbb
mov
mov
push
mov
pop
jbe
push
jb
les
pop
in
insl
ds
into
scas
test
jbe
jno
rcrl
outsb
addb
clc
adc
pop
jae
and
and
jp
mov
cltd
movsb
fdivrl
jb
cli
imul
push
push
push
sbb
test
sub
mov
xor
scas
pop
dec
cli
mov
ret
popf
leave
imul
inc
jno
test
arpl
mov
call
sbb
pop
add
jp
xchg
aad
stc
and
daa
roll
cmp
or
lea
nop
in
pushf
mov
xchg
movsb
xchg
push
pop
jg
push
jae
fs
lcall
pop
outsl
sbb
sub
sbb
pop
or
sub
pop
dec
add
mull
insb
inc
jmp
add
fadds
push
pop
rol
lahf
scas
or
cmpb
adc
jae
lcall
divb
ljmp
jbe
nop
add
pop
call
xor
and
repnz
mov
jle
sbb
xchg
sbb
xor
sbb
xchg
pop
cltd
popa
rclb
mov
or
lods
mov
std
fstpt
push
xor
ret
add
jle
pop
inc
cmpsb
imul
cli
and
xchg
leave
pop
mov
sbb
scas
repz
pop
test
lods
movl
lcall
push
push
andl
mov
pop
dec
xchg
jo
push
std
ja
jns
mov
fimuls
scas
mov
xchg
adc
and
in
pop
fcmove
aam
mov
negb
mov
fcmovbe
pop
aam
xchg
icebp
sbb
pop
mov
divl
cmp
hlt
sub
jecxz
pop
dec
std
aaa
mov
xchg
jmp
dec
or
pop
pop
and
mov
pop
cs
sbb
loop
call
push
sbbb
inc
xchg
pop
push
or
in
add
pop
cmc
aad
lock
pop
into
cmp
cmpsb
fiaddl
sarb
pop
pop
inc
jo
mov
mov
test
bound
loop
xlat
sub
fs
mov
or
pop
sti
jg
stc
filds
inc
xor
sub
and
fs
pop
idivb
pushl
pop
std
mov
das
lods
rcrb
lcall
cmpsl
in
adc
rcrl
jg
pop
cmc
jne
iret
pushf
mov
and
lret
into
lods
mov
mov
hlt
in
iret
in
lret
push
adc
dec
add
lods
lds
mov
dec
call
pusha
push
ljmp
adc
aad
popf
sahf
push
pop
daa
inc
push
dec
adc
dec
loope
add
jecxz
xchg
fbstp
fs
pop
jno
dec
jbe
enter
pushf
sbb
sahf
mov
lea
adc
int3
xor
inc
jg
dec
fcoml
insb
or
jbe
decb
pop
jmp
push
sbb
xor
gs
je
fisubs
popf
push
std
repz
cmpsl
dec
push
mov
in
inc
aad
dec
arpl
jge
fidivrs
mov
pop
fmull
int
jno
ds
sti
push
hlt
in
jns
out
pop
jle,pn
push
jbe
adc
pop
mov
cmpsb
pop
fisubrs
loope
adc
dec
popf
fisttpll
sti
push
jg
fisttpl
inc
ss
ret
jecxz
push
xor
es
mov
insl
jbe
loop
popf
inc
movsb
mov
mov
adc
xchg
pop
ret
and
add
out
pop
aas
negb
cmc
mov
nop
xor
shlb
sbb
mov
mov
push
pop
and
fsub
dec
fcmove
aam
push
stos
pushl
pusha
in
mov
adc
dec
loop
test
sbb
sub
push
pop
add
and
mov
lcall
dec
outsl
pop
sti
cmpsl
in
pop
ret
jbe
cmp
movsb
faddl
rcrl
pop
les
mov
lret
enter
or
daa
cmp
out
pop
les
int
repnz
imul
mov
inc
adc
in
cwtl
cmp
push
mov
inc
idivl
sbb
cmp
inc
scas
out
pop
add
int3
mov
jbe
icebp
xchg
adc
sub
lahf
xchg
dec
lret
mov
push
pop
stc
xchg
mov
pop
rol
lods
out
pop
xor
aas
jb
mov
pop
outsl
es
rcrl
lcall
pop
in
dec
mov
lods
pop
pusha
icebp
aaa
sbb
inc
loopne
dec
xchg
dec
test
push
or
fidivl
push
pop
leave
fcmovnbe
xchg
mov
push
dec
test
movsb
pusha
popf
jnp
adc
jl
jno
das
jge
or
mov
adc
inc
pop
ret
icebp
popa
xchg
pop
dec
push
fimuls
xchg
fcmovb
ja
push
cmp
jle
mov
push
out
cmp
sbb
pop
mov
mov
mov
hlt
mov
nop
mov
inc
adc
mov
pop
dec
aam
jo
in
inc
ficompl
xor
sbb
dec
sahf
int3
pop
mov
mov
ss
mov
or
dec
cli
loop
jge
mov
scas
lods
into
test
inc
outsl
imul
test
push
std
leave
add
cld
push
push
pop
call
xchg
jno
sbb
movsl
mov
mov
fcomps
sub
fsubp
sbb
pusha
ret
or
pop
es
or
jbe
xchg
fidivs
dec
push
mov
push
pusha
pop
rcll
in
fcompl
jmp
pop
lds
dec
int3
sahf
mov
sub
adc
sti
fimull
sbb
xor
pop
adc
push
mov
fiaddl
sbb
mov
jbe
cs
scas
subl
inc
pop
fldl
and
mov
mov
mov
push
pop
xor
popa
sbb
add
adc
push
push
pop
daa
mov
pop
pop
pmulhuw
cs
push
mov
sbb
pop
push
mov
xchg
inc
add
and
and
stos
xchg
pop
cmpsl
insl
push
lods
out
lds
pop
fwait
cltd
rolb
pop
lods
inc
mov
pop
mov
mov
js
mov
xchg
mov
call
pusha
xor
adc
push
sub
and
cmp
jbe
movsl
pop
pushf
adc
push
pop
mov
mov
dec
in
jo
lahf
push
mov
adc
push
mov
xor
adc
mov
cltd
dec
cmpsb
or
out
xor
subb
mov
ja
dec
movsl
notl
pop
pop
pushf
rorb
pop
daa
rcrb
adc
pop
xor
sub
lods
mov
negl
adcl
inc
pop
mov
ljmp
cmp
push
ret
add
pop
call
xor
fsqrt
add
rclb
jb
pop
ja
les
iret
xchg
out
jne
pop
outsb
push
test
sbb
mov
test
pop
decl
xchg
cmpsl
pop
cld
lret
dec
out
out
jle
clc
or
pusha
push
push
or
mov
and
pop
iret
sub
rolb
pop
xchg
inc
lea
and
cs
mov
subb
fsubrp
outsb
dec
shrb
lods
arpl
dec
std
mov
dec
shll
test
pop
lcall
scas
out
fidivrl
pop
lods
loopne
or
push
dec
mov
xor
imul
and
ss
sbb
das
push
mov
and
call
lds
inc
pop
mov
or
xchg
mov
pop
cmp
mov
test
in
sbb
out
call
neg
mov
movb
push
dec
lea
in
dec
xchg
nop
fcompl
hlt
xor
or
xchg
dec
stos
push
bound
dec
pop
and
or
mov
loop
cmpsb
lods
cltd
push
clc
cld
add
outsb
mov
xchg
pop
scas
ljmp
imul
gs
leave
pop
push
mov
pop
mov
scas
cmp
adc
lds
push
mov
mov
insl
inc
in
push
adc
cmpsb
xor
mov
ret
inc
mov
dec
push
pop
mov
cmp
jge
cli
pop
jns
rcll
and
mov
sbbb
test
pop
and
mov
lcall
pusha
cwtl
push
pop
das
xchg
inc
mov
jmp
pop
pop
jb
mov
lods
jge
adc
inc
mull
fmull
aad
repz
push
shrb
xchg
rol
or
push
test
enter
fistl
dec
ds
pop
std
fisubl
lea
adc
inc
aad
aas
into
lcall
outsb
das
dec
xchg
mov
push
cwtl
ficoms
lock
mov
pop
test
mov
ja
and
and
pop
or
xchg
bound
sub
repnz
aam
sbb
add
add
adc
pop
xor
and
int
stos
jb
pop
testb
add
jle
fabs
xor
dec
and
gs
pop
cmp
arpl
clc
bound
shlb
lcall
roll
dec
inc
mov
fldt
fwait
dec
scas
mov
icebp
push
sub
negb
shrb
mov
ja
ss
aam
les
jbe
cmp
xchg
out
leave
lahf
jg
pushf
rcll
bound
rorl
mov
fsubs
push
pavgw
insb
pop
hlt
out
push
mov
ljmp
mov
cltd
mov
insb
lahf
nop
fcomps
loop
test
adcl
jns
mov
adc
cmp
in
dec
cmpsl
sbb
inc
add
pusha
stos
rorb
adc
lods
cs
push
in
sub
dec
in
mov
inc
faddl
pop
shrl
jnp
into
ficompl
dec
mov
or
not
xlat
mov
lret
inc
pop
aad
mov
or
adc
test
pop
add
dec
mov
pop
cmp
mov
outsl
pop
arpl
pop
pusha
scas
ret
pop
or
push
lods
mov
cwtl
sbb
fwait
jne
inc
or
clc
imul
outsb
sbb
and
fdivrs
cwtl
inc
pop
das
imul
movsb
lods
call
push
pop
sahf
testl
fsubs
incl
ss
cmpsl
pop
fwait
push
lret
sbb
pop
push
adc
xor
mov
loop
loope
dec
cvttps2pi
pop
fcmovnu
stos
cmp
inc
mov
mov
jmp
add
jno
sarb
lret
pop
inc
test
aas
xchg
xor
mov
gs
xchg
pop
xchg
sub
add
aaa
loopne
sbb
mov
addl
lahf
cmpb
sbb
imul
daa
push
js
or
push
popl
fwait
mov
add
cmpsl
mov
dec
repz
into
imul
jnp
test
pop
jb,pn
ss
mov
jmp
mov
inc
gs
sbb
push
mov
jae
sub
xlat
push
cmp
jne
pop
adc
push
mov
arpl
lahf
sahf
xlat
mov
and
rorl
rorl
mov
pop
or
icebp
lea
jno
adc
mov
insb
and
pop
mov
pop
negb
fstp
pop
sub
mov
sbb
in
xor
hlt
test
int
mov
cwtl
sub
pop
mov
aaa
repz
jecxz
push
lret
icebp
lock
das
jb
push
loope
hlt
cmp
and
stos
shll
cmovg
pop
notb
test
ret
les
jecxz
pusha
lods
sahf
or
jbe
das
xchg
stos
ss
push
lds
test
fwait
cs
jg
push
pop
push
mov
jmp
inc
inc
fcmovu
call
mov
mov
mov
jmp
pop
fcmovnb
leave
mov
dec
int
in
enter
push
loope
mov
insl
and
popf
push
pop
out
adcl
in
and
out
adc
pushf
call
rcrl
inc
enter
bound
imul
sbbb
pop
mov
xchg
fmuls
push
adc
mov
sbb
ffree
addr16
sub
xchg
dec
aam
fstps
dec
imul
or
sbb
daa
ret
imull
inc
lret
je
stc
mov
jp
push
sbb
dec
pop
lret
aas
pop
enter
mov
adc
pop
nop
shll
cmp
loop
dec
je
pop
test
addr16
sbbl
pop
les
in
add
sti
cmpsl
cmp
hlt
ljmp
pushf
jne
pop
pushl
cmpsl
in
mov
mov
ljmp
pop
iret
and
push
and
dec
jbe
adc
rcr
imul
fwait
sub
aam
push
cld
enter
jmp
stos
jbe
pop
jl
and
push
push
push
pop
push
sbb
mov
arpl
push
je
mov
mov
fstpl
push
add
pop
lcall
les
sub
pcmpeqd
inc
fdivrs
lock
dec
sub
jecxz
jl
inc
push
lea
call
mov
gs
repz
inc
inc
fcoms
sbb
adc
fnstcw
psllw
pop
lahf
lret
clc
sub
out
pop
fwait
mov
push
pushf
pop
mov
xor
jns
push
dec
push
lods
out
in
stos
into
clc
ja
lds
ljmp
shll
or
loop
xchg
idivl
push
push
shlb
sti
mov
fstl
cld
pop
mov
ret
xchg
in
cld
pop
add
stos
shr
jbe
sub
jg
dec
fs
lods
or
push
mov
cmp
lret
xchg
mov
push
and
xchg
das
dec
dec
pop
push
les
dec
pop
in
sub
ret
out
pop
sbb
sahf
push
sbb
jle
adc
mov
pop
test
dec
or
cltd
int
push
test
adc
lea
jbe
cltd
inc
inc
cld
movsl
jg
jne
jl
pop
fldenv
das
js
jne
jae
lahf
push
rclb
ret
cmpsl
cmp
lahf
mov
push
xor
add
jle
mov
dec
mov
cmc
movsb
in
xor
add
lahf
nop
icebp
jecxz
int3
adc
dec
dec
pop
cmpsb
call
test
jmp
cmpl
imul
sub
add
int
and
out
lock
xor
lea
push
add
ja
lret
ret
aad
or
das
mov
stc
adc
dec
mov
pop
out
pop
enter
sub
das
xchg
fimull
hlt
xchg
mov
fs
out
or
jg
inc
pushf
fs
call
repz
scas
jmp
mov
scas
pop
sub
jo
stos
xchg
pop
xchg
aad
sub
addl
test
pop
aaa
add
scas
bound
sbb
mov
loop
adc
enter
icebp
inc
jmp
mov
add
orb
dec
fcoms
addr16
mov
and
pop
jo
imul
jge
in
ds
test
pop
xor
mov
dec
jecxz
cmc
dec
cmpsb
jbe
std
repz
das
addr16
dec
std
pusha
test
out
mov
in
mov
jbe
dec
pop
ret
push
js
loopne
pop
jmp
out
or
jp
outsb
popf
mov
pop
sti
fidivrl
lea
sbbl
or
std
adc
mov
jge
push
push
push
mov
pop
and
xchg
dec
outsb
lods
out
daa
leave
cmpsl
into
bound
addr16
jecxz
aad
and
mov
push
fcoms
jbe
and
push
popf
cmp
jo
ja
orl
mov
adc
mov
dec
pop
and
cmp
mov
shl
sub
int
pop
aam
rorb
call
adc
adc
pop
jo
inc
pop
int3
cmp
bound
cmc
imul
sub
xchg
inc
dec
push
cmpsl
cld
ficoms
out
es
and
aas
jg
xchg
sbb
out
ss
mov
pop
push
cmp
leave
adc
fdivl
dec
inc
and
jne
mov
sahf
lret
jo
fnstsw
jge
xchg
mov
sub
sarl
incl
sbb
xchg
push
adc
jnp
outsb
inc
mov
sahf
mov
pop
int3
scas
mov
movsl
lea
xchg
pop
mov
mov
jmp
rcrl
xorl
aam
adc
inc
push
lods
mov
scas
movl
pop
mov
inc
in
cli
hlt
jl
cmpsl
rcrb
adc
aaa
imul
mov
repz
mov
aam
je
xor
xchg
pop
xor
cwtl
add
mov
lock
mov
mov
xchg
mov
sub
inc
enter
push
push
cmpsb
pop
xor
test
sar
or
mov
mov
add
sub
les
sub
mov
pop
push
cmpsl
test
cmp
cmp
aam
mov
in
lahf
inc
push
lahf
mov
pop
sub
shrb
xchg
inc
mov
cmp
cli
jl
call
jmp
gs
ret
mov
out
cmpsb
fdivp
inc
mov
and
push
sub
test
movsl
rclb
pop
call
lcall
mov
mov
dec
mov
pop
mov
mov
pop
pop
push
add
lock
sub
mov
add
sarl
pop
loopne
push
clc
call
xchg
sbb
fidivrl
mov
push
fwait
mov
gs
ret
jle
dec
push
inc
aam
int3
adc
push
xchg
movsl
cmp
aam
sub
mov
lret
or
in
and
ljmp
mov
sahf
arpl
in
lods
pop
out
lcall
rcll
push
es
rcrl
and
pop
test
fwait
incl
mov
shll
lret
cli
clc
pop
push
call
pop
cwtl
push
in
into
in
mov
rolb
outsb
sub
mov
in
sbb
cmpsl
pop
sahf
push
sub
xchg
mov
mov
ds
cmp
cmpsl
mov
add
push
or
adc
mov
mov
test
mov
popa
int3
std
mov
sahf
or
push
mov
ret
call
cmpsb
ret
add
push
ds
arpl
mov
jg
sbb
pop
shlb
aad
in
sub
test
inc
cmp
cwtl
icebp
out
scas
dec
jo
fdivs
fnstcw
mov
xchg
xor
pusha
jp
mov
lahf
pushf
adc
push
shlb
xor
push
das
xorl
jp,pn
inc
push
nop
lds
jle
movb
adc
call
mov
jp
push
mov
cmc
icebp
push
and
lcall
pusha
push
sub
scas
sahf
mov
cwtl
pop
stos
je
ret
lcall
pop
aam
pop
shll
lret
fwait
icebp
xor
daa
int3
mov
pop
cmp
int3
mov
dec
es
out
ds
sbb
jl
cltd
jnp
gs
insb
gs
enter
cmp
aad
inc
xchg
out
sbb
pop
mov
out
mov
adcb
pop
imul
jns,pt
adc
push
ds
popf
or
insb
or
push
pop
test
adc
out
push
adc
loopne
in
aam
int
xchg
es
ret
sti
sub
arpl
push
inc
cmp
jmp
jle
cmc
imul
imul
jmp
outsb
dec
and
jmp
mov
pop
sahf
push
ss
sbb
cmp
gs
test
int3
push
sbb
test
jb
sahf
jae
xchg
repnz
dec
jne
xchg
xor
cmp
insl
ja,pt
mov
movsb
fists
jecxz
sub
mov
xchg
ret
push
xchg
mov
out
push
sbb
lds
nop
dec
dec
push
jecxz
ficomps
ja
lock
sahf
sub
sbb
pop
out
pop
pop
push
push
mov
pop
sbbl
mov
iret
pop
push
xor
cmp
int
mov
andl
loopne
xchg
fsubs
push
popa
push
es
pop
jecxz
arpl
push
xor
jno
sarl
clc
into
pop
andl
pop
ret
jle
int
push
pop
dec
ret
pop
or
mov
out
subb
sub
mov
mov
and
xchg
or
pusha
sbb
sbb
pop
pop
out
and
push
pop
adc
pop
mov
mov
jae
push
lea
or
fs
inc
sahf
xor
lahf
sbb
dec
and
test
divl
cmpsl
stos
jge
pop
xor
mov
outsl
jmp
in
stc
jne
dec
out
jge
cli
push
mulb
xchg
adc
pop
and
dec
outsb
pavgw
jl
add
jmp
mov
mov
imul
orl
scas
fwait
dec
cmp
ds
cmpsb
pop
xchg
jmp
in
push
pushf
in
imul
and
dec
int3
sub
mov
lahf
sahf
sbb
xchg
cmpsb
push
jmp
mov
xchg
in
push
test
test
dec
gs
adc
inc
es
lret
mov
add
in
sub
bound
pop
sbb
inc
sti
shl
sbb
mulb
xchg
push
sahf
mov
ljmp
cmc
pop
cmp
ret
cmpsl
dec
push
in
sbb
cmp
mov
cmpsb
loope
inc
loop
les
fimull
sbb
fcmovne
int
dec
pop
std
sbb
sub
pop
popf
pop
and
jmp
cli
aad
pop
out
xor
outsb
mov
inc
or
outsb
aad
jle
push
xorl
into
jle
repnz
movsl
xchg
pusha
or
mov
sub
fimuls
cmp
inc
xor
lcall
into
repz
repnz
push
jg
inc
in
mov
aas
cmpsl
sub
push
lcall
mov
lea
mov
xchg
pop
dec
out
inc
jo
aas
iret
ds
in
mov
sbb
xchg
fildll
cmp
clc
fmul
fsubs
pop
pushf
xchg
repnz
add
jmp
pop
pop
push
fiadds
ret
insb
mov
repz
xor
enter
push
mul
dec
cwtl
gs
push
pop
push
pop
into
lods
push
addr16
mov
sbb
repz
mov
sub
and
mov
gs
fdivrp
imul
dec
iret
test
sub
jmp
sub
imul
or
in
insl
mov
pop
inc
test
mov
adc
sub
repz
int
xchg
add
popa
sti
dec
mov
push
dec
fcmove
cli
sbb
pop
mov
push
nop
imul
test
pop
aas
jae
loop
enter
and
pop
inc
push
xchg
mov
push
adc
push
into
inc
or
pop
ja
aaa
nop
imull
pop
or
cmp
cwtl
out
inc
pop
sub
test
ss
bound
jbe
or
xlat
inc
idivl
xchg
push
mulb
jl
call
sbb
xor
repz
or
jbe
xlat
inc
push
nop
mov
shll
jo
test
call
xchg
shr
and
push
pop
mov
stos
mov
mov
cmpsb
hlt
mov
fs
ficompl
mov
mov
fcoml
ret
pop
sbb
dec
adc
and
push
mov
pop
mov
adc
cwtl
sbb
mov
or
das
cmp
icebp
ss
movsl
cld
mov
ret
xchg
pop
mov
pusha
je
outsb
xor
sahf
ljmp
xchg
mov
or
in
imul
inc
pop
sahf
pusha
mov
and
adc
sbb
inc
lods
inc
push
pop
mov
mov
mov
mov
or
xchg
push
cs
arpl
add
inc
pop
imul
nop
xchg
mov
shlb
mov
sub
negb
inc
sarl
xor
icebp
pop
or
in
mov
pop
cltd
sub
mov
xor
scas
xchg
bound
push
out
in
stos
pop
mov
lea
sahf
push
test
fiadds
dec
sbb
out
cli
pop
flds
imul
lods
jg
xor
sbb
repnz
arpl
cmpsb
fiadds
push
in
aas
inc
ds
ret
jbe
arpl
add
out
lret
mov
imul
mov
mov
int
xchg
inc
push
push
dec
mov
stos
dec
jbe
xchg
pop
insb
push
pop
in
dec
sub
pushl
and
cmpsl
cli
inc
push
mov
dec
inc
pop
daa
andb
and
movsb
and
adc
jns
pop
xchg
mov
test
or
push
lods
push
xlat
std
mov
mov
sbb
add
cltd
aam
loop
pop
sub
hlt
pop
movsl
insb
sbbb
movsb
mov
test
mov
add
dec
push
jmp
repz
int
stc
mov
xchg
out
mov
ja
dec
stc
cmpsl
fs
ljmp
in
xchg
fcomps
arpl
in
fs
jae
loop
lock
pop
test
mov
push
sbb
xor
add
bound
lmsw
dec
pop
cmpsl
pop
dec
mov
cli
dec
in
dec
int3
sahf
mov
sbb
mov
inc
fsubrl
push
cwtl
sbb
mov
stos
push
pop
out
fs
pop
orb
sbb
daa
pop
ficompl
dec
in
addr16
in
cmp
xchg
fcmovnu
repnz
daa
outsl
imul
ja
inc
push
sbb
mov
arpl
jmp
jle
pop
fs
in
das
repz
mov
push
push
sahf
out
inc
push
pop
dec
adc
nop
add
je
or
insl
in
inc
push
pushf
jp
in
mov
jp
pusha
cld
imul
fsubl
in
jne
xchg
scas
int
push
pop
jecxz
stc
aam
loopne
mov
lahf
pop
shrl
mov
sahf
dec
inc
mov
sub
sub
dec
jl
test
jbe
jae
xchg
add
jns
pop
cs
fs
fisubl
adc
pop
fidivs
sahf
bound
adc
pop
pop
mov
mov
mov
scas
ljmp
les
in
jmp
inc
jbe
xchg
xor
dec
mov
loope
xchg
call
xor
xor
in
scas
or
push
das
pop
stos
out
add
into
aas
adc
pop
frstor
inc
pop
sub
xchg
cltd
pop
rorl
push
xchg
inc
jne
cmpsl
sub
loopne
fimuls
lea
mov
push
dec
rcrl
les
out
xor
xchg
lahf
mov
lods
sub
fmull
inc
dec
cmp
repnz
pop
and
pop
adc
gs
push
je
pop
mov
or
sbbl
push
pop
notb
leave
es
push
jne
loop
lcall
sahf
call
popf
cmp
xchg
pop
inc
pop
loopne
mov
rcrl
in
adc
jbe
pusha
push
xchg
cwtl
ljmp
pop
xchg
cmc
inc
nop
mov
pop
or
stos
movsb
clc
jae
jle
lock
mov
mov
test
dec
or
pusha
sahf
add
or
lods
mov
xor
pop
hlt
jo
cmc
adc
dec
dec
pop
pop
outsb
test
mov
mov
scas
stos
adc
or
imul
jns
mov
shr
aad
adc
mov
xchg
pop
in
mov
ds
sarl
cmp
repnz
test
out
les
lds
sahf
es
cmc
xlat
mull
xchg
jg
scas
pop
or
sub
push
pop
adc
jle
pop
jne
inc
sbb
pop
cmpb
adc
sub
xchg
fldcw
subl
inc
sahf
out
xchg
mov
mov
ftst
scas
insb
js
mov
pop
xchg
je
out
int3
jns
ja
xchg
mov
mov
pusha
inc
out
add
in
icebp
aaa
mov
mov
cltd
xorl
lds
xchg
mov
jecxz
mov
pop
imulb
nop
int
ficomps
cltd
popa
dec
ljmp
xor
jmp
das
outsl
pop
ret
sbb
mov
lret
pop
outsb
lret
jnp
repnz
xchg
addr16
out
pushf
xor
aam
xorl
jle
adc
sub
mov
pop
out
pop
shll
mov
dec
add
mov
sub
sbb
nop
xchg
or
pop
xorl
push
enter
daa
sub
pop
sub
or
push
leave
ror
pop
jae
sarb
lcall
aad
dec
repnz
test
cmp
ja
xchg
add
pop
call
or
sub
and
popf
add
pop
outsb
mov
dec
sub
ret
andb
cwtl
adc
cs
imul
rol
or
test
dec
xchg
test
push
or
pusha
fidivl
stos
subb
cltd
loop
or
add
idivl
add
cmp
and
arpl
pop
pop
mov
movsl
mov
es
xchg
and
inc
pop
gs
loopne
pop
and
insl
filds
pop
mov
jp
repnz
xchg
add
xchg
pop
mov
stos
ja
mov
pop
pop
jecxz
pop
sbb
pop
mov
es
jbe
out
mov
clc
mov
ljmp
aam
test
das
clc
inc
aad
popf
js
shr
mov
in
pop
rcrl
repz
call
addr16
xchg
out
std
das
bound
nop
mov
and
xor
jbe
leave
sub
dec
inc
mov
and
out
mov
or
lock
mov
popa
in
cld
cs
jae
pop
pop
cmpsb
add
std
mov
push
push
sub
in
test
and
ss
dec
pop
mov
ja
fidivl
rcrb
repnz
mov
push
pop
enter
jl
cmp
in
movsl
shlb
sbb
xchg
inc
enter
xor
mov
and
xchg
jecxz
dec
push
lock
jne
jp
fwait
pop
jg
dec
dec
icebp
insb
dec
jns
and
es
ret
pop
nop
cmp
test
cmp
and
sbb
or
xor
pusha
in
pop
pop
mov
into
xchg
lret
lods
pop
cmp
bound
mov
inc
test
pop
sub
mov
jmp
scas
stos
pop
adc
fisttpl
pop
or
jle
mov
mov
sub
sbb
cld
pop
cli
cwtl
sbb
inc
rcll
cmpsl
ficoms
imulb
jo
mov
sub
xchg
pop
sbb
pop
fadds
movsl
shll
fnstsw
in
mov
dec
mov
mov
dec
test
fisubs
mov
jmp
push
subb
xchg
push
fnstsw
pop
xor
pop
pop
mov
stos
push
push
push
mov
sbb
jmp
push
ret
outsl
fs
dec
jo
movsb
mov
sbb
mov
jns
xchg
les
pusha
add
pop
jno
add
aam
outsl
mov
mov
das
iret
cmpsl
pop
dec
cmp
dec
lods
pop
into
in
add
lcall
cmp
es
pop
or
inc
jb
leave
inc
inc
pop
out
pop
sbb
dec
scas
divps
jae
std
ljmp
lcall
adc
cmpsl
pop
mov
cwtl
push
imul
and
lret
jl
jg
lret
lret
xchg
int3
pusha
ljmp
mov
push
imul
adc
mov
outsl
sub
xchg
mov
push
adc
mov
inc
outsb
adc
and
jo
mov
pop
pop
jge
adc
loop
outsb
jp
dec
roll
cmp
xor
cltd
mov
rorb
sbb
or
hlt
pop
les
push
cltd
test
xchg
inc
movsl
movsl
mov
pop
dec
lret
mov
dec
sbb
aaa
add
push
adc
sbb
lods
fistpl
cld
xchg
push
out
push
and
fidivs
mov
sahf
mov
xchg
mov
adc
test
int
dec
push
sahf
push
vandps
scas
aam
stos
mov
or
pop
pop
icebp
or
cmp
cmp
jge
jnp
lcall
jg
pop
sub
ret
outsb
cmp
imul
sub
jp
subb
testb
dec
int3
ljmp
xchg
out
aam
filds
cmp
mov
sti
pop
fwait
jne
mov
sbb
cwtl
dec
push
pop
in
sbb
xchg
xchg
push
adc
pop
jnp
push
sub
imul
flds
pusha
xchg
xchg
rcrb
fisubs
cmp
cmp
mov
jecxz
pop
lcall
adc
dec
adc
pop
jge
xorb
jle
xor
cmp
pop
xchg
test
sub
pop
sti
aaa
adc
add
arpl
int3
sub
pop
fsubl
ja
xchg
lods
cmp
sbb
mov
adc
pop
ret
xchg
aad
fs
leave
dec
or
pop
xchg
dec
dec
fsubrs
dec
jge
cli
inc
or
lahf
fists
movl
jno
pop
xchg
fiaddl
mov
pop
cmp
jae
xchg
jge
stos
inc
and
pop
lcall
pop
mov
mov
pop
rclb
push
jne
push
imul
data16
fdivrs
movsl
stos
add
jbe
sub
jb
cmc
aas
xor
vzeroall
idivl
aas
pop
rcrl
or
lret
in
lcall
rorl
sbbb
push
push
dec
stos
push
iret
clc
mov
xor
lret
pop
movb
sbb
pop
and
fcomip
or
pop
push
movsl
mov
addr16
shrb
lahf
pop
test
int
or
sahf
pop
pusha
mov
or
subl
aam
push
pop
int3
add
inc
pop
call
pop
popf
rcll
mov
bound
push
sahf
xor
sbb
ret
ljmp
dec
rcl
out
ja
pop
add
addb
and
inc
and
jae
out
in
pop
test
cmc
pop
mov
mov
pop
xchg
movsb
in
xor
ss
pop
rolb
ret
lret
test
inc
jle
insb
mov
mov
andb
leave
add
mov
fisttps
inc
pop
mov
enter
sbb
pop
dec
cmp
add
pop
adc
sar
dec
or
jl
jge
jbe
shrl
pop
mov
pop
aad
je
pop
adc
cwtl
jmp
push
sub
fs
sahf
dec
or
cmpsl
pop
icebp
mov
push
dec
iret
dec
pop
jb
jbe
mov
loopne
aaa
lds
es
inc
in
xor
cmp
mov
ds
loopne
adc
push
sub
mov
xchg
rcrl
mov
inc
stos
fidivrl
dec
adc
int
leave
iret
cld
popa
idivl
and
mov
test
pop
push
or
xor
rclb
les
mov
dec
out
mov
in
dec
ja
call
test
loopne
or
pop
sub
add
int3
insl
add
pop
push
fwait
xchg
pop
ficoms
pop
fs
enter
test
pop
pop
mov
stos
dec
dec
xor
repnz
dec
sbb
ljmp
dec
pop
inc
push
sti
mov
hlt
pusha
fistl
sbb
aas
inc
movsb
loop
pop
jp
mov
shlb
testb
cmp
les
test
pop
ja
sti
jno
fisubl
ljmp
lock
out
jns
xor
inc
sub
adc
out
jbe
gs
mov
pop
dec
pop
or
aam
test
mov
fnsave
cmpsb
mov
sbb
lcall
mov
xor
and
jmp
jb
shl
sub
rcrb
and
ret
outsb
inc
movsb
icebp
adc
jg
pop
or
push
mov
mov
js
lcall
xchg
push
push
inc
testb
pop
rorb
divps
das
push
lods
pop
jmp
mov
shlb
leave
pop
ljmp
or
cwtl
mov
mov
jmp
inc
shll
scas
dec
cwtl
mov
out
push
fimuls
cmpb
bound
pop
add
mov
outsl
dec
add
xchg
pop
ficompl
stc
rclb
dec
sbb
mov
movsl
adc
xchg
sahf
pop
and
idivb
mov
xor
adc
pop
out
inc
dec
adc
push
pop
cwtl
sahf
mov
xor
repnz
mov
movsl
and
popa
mov
mov
out
ja
push
pop
repz
cwtl
rorl
lock
arpl
insl
dec
push
aam
bound
push
pop
dec
xor
and
pop
and
or
fs
into
in
mov
shrl
or
pop
mov
into
lcall
ret
inc
lea
loope
pop
mov
sub
pop
pop
cmc
and
xchg
push
pop
cmpsl
lret
loope
popf
jne
bound
xlat
fldt
push
jbe
sub
scas
dec
nop
pop
mov
or
inc
pop
add
loopne
pop
iret
inc
and
sbb
dec
jnp
push
out
test
mov
jp
pop
xchg
mov
pop
gs
cmp
enter
xor
ds
cltd
pop
pop
je
jnp
xor
xchg
out
mov
pop
test
stos
xchg
nop
les
pop
xchg
mov
mov
popa
std
dec
inc
pop
cwtl
test
adc
addr16
decb
pop
cmp
inc
xchg
lcall
pop
dec
lock
or
inc
in
leave
cmp
fistpl
xor
push
out
add
xchg
jmp
mov
sahf
dec
or
push
jge
dec
pop
test
roll
ljmp
nop
add
test
sub
mov
mov
dec
sbb
in
icebp
ficomps
in
out
int
inc
iret
mov
sub
imul
lcall
mov
ljmp
mov
sahf
fcomps
and
cld
fs
sub
sbb
push
lret
pop
test
lret
adc
sti
pop
fcomi
xchg
dec
rcl
mov
in
aam
push
out
call
mov
ficoms
jecxz
sbb
or
scas
mov
ljmp
dec
xor
fsubp
sbb
in
fldt
fwait
add
out
in
lahf
mov
pop
pop
movsb
pop
vpshab
push
es
dec
sub
ja
xchg
xlat
mov
jne
or
call
mov
sub
inc
pop
mov
jnp
pop
inc
roll
dec
lea
dec
jbe
ficoml
nop
dec
sub
jb
insb
popf
int
sbb
call
push
loop
push
lods
adc
xor
std
cli
xor
sub
or
lods
mov
cmc
outsl
jle
ds
push
in
fisubrl
push
sub
push
movsl
es
push
mov
outsb
sub
ds
or
cli
inc
aas
mov
in
add
gs
pushf
push
mov
and
sub
sbb
hlt
cld
bound
and
gs
or
sarb
in
jne
push
xor
cmpsb
sti
pop
xchg
fldlg2
jo
xlat
sub
lret
mov
movsl
icebp
popa
dec
jbe
cs
pusha
mov
outsl
inc
pop
push
inc
xchg
jnp
lret
fwait
or
rolb
or
push
imul
sldt
enter
inc
lret
jno
mov
shll
push
ret
adc
loop
and
jg
stos
addr16
sbb
mov
loop
push
cmp
sub
rcl
bnd
pop
mov
insb
out
or
mov
lcall
pusha
jge
and
ja
out
or
popa
lods
cs
pop
lret
xlat
aad
imul
inc
mov
js
lret
jne
pop
pop
mov
andb
popl
xchg
sbb
mov
inc
mov
stc
pop
lahf
mov
sbbb
sbb
dec
cld
pop
inc
jb
dec
cltd
mov
ficompl
and
add
pop
int
icebp
scas
adc
loope
pop
insl
adc
xor
sbb
stos
xchg
ret
inc
rorl
mov
imul
sbb
lea
add
shrl
out
pop
xchg
clc
pop
fcomps
sub
sbb
fiaddl
scas
movsb
mov
add
jle
es
mov
cmp
dec
inc
loope
mov
sbb
pop
xorb
pop
or
adc
arpl
or
pop
pusha
sbb
addr16
nop
cmpsl
int3
shl
pop
jge
or
lret
pop
ss
xchg
inc
mov
dec
fdivrl
mov
rclb
cmc
pop
lods
add
icebp
insl
jbe
cwtl
push
out
sbb
arpl
push
mov
pop
cmp
mov
adc
pop
cmp
mov
bound
sti
pop
mov
mov
mov
pop
int3
lods
out
push
cs
gs
xlat
pusha
mov
insb
dec
jge
mov
pop
mov
enter
pop
or
js
int3
pop
push
aas
xchg
icebp
mov
aam
mov
mov
addr16
lods
and
mov
mov
fdivrs
clc
cs
push
das
mov
enter
pop
pushf
loop
sti
in
mov
add
cmp
mov
pop
stos
sbb
jno
popa
icebp
pop
aam
dec
shll
jns
pop
ds
pop
sti
and
mov
jae
pop
leave
fistl
das
pop
mov
lds
jbe
andl
incb
lods
add
jbe
cmp
push
cltd
je
cmp
pop
xchg
lods
push
roll
cli
pop
xor
sub
insl
cmp
sub
cmp
test
insl
cmp
outsb
adc
into
pop
mov
sub
dec
mov
repz
aam
or
andl
ret
jmp
push
in
mov
pop
aaa
aas
ja
push
out
mov
cld
stc
popa
sub
mov
jl
sub
xchg
adc
and
xchg
lds
stc
in
pop
and
cmp
cmpsb
lock
sub
sarl
push
js
xchg
arpl
pusha
repz
add
pop
fldt
loope
jbe
repnz
pop
sti
popa
pusha
int3
in
es
mov
ja
mov
xchg
lods
sbb
outsb
xchg
out
mov
lcall
mov
test
imul
cmc
je
mov
movl
into
mov
jp
test
repnz
nop
pop
cmpsl
mov
divl
pop
lcall
mov
pushf
cmp
lea
jg
push
sub
stc
and
pop
adc
shrl
pop
pop
sbb
sahf
pop
cmp
imul
aam
sbb
insl
rclb
aas
inc
jge
sbb
xchg
pushf
push
xor
lds
scas
je
push
inc
mull
dec
push
inc
neg
in
jecxz
push
and
mov
mov
cs
jge
pusha
mov
sbb
lods
je
gs
jle
pop
dec
jmp
sub
mov
ss
insb
popf
or
in
daa
das
jnp
jbe,pn
stos
xchg
outsb
int
xchg
jmp
in
sub
inc
and
js
mov
stc
test
xchg
gs
pop
repz
enter
mov
jae
test
or
mov
dec
jae
cmp
mov
cmpb
stos
repz
xor
xchg
test
fistpl
pusha
test
dec
lds
dec
dec
lods
andb
insl
ret
dec
pop
mov
test
movsb
jmp
js
cmp
imul
ss
roll
divb
fildll
hlt
xchg
or
bound
jg
cmpps
cmp
mov
cmp
test
xor
bound
sub
push
test
fmull
cmc
and
jg
addl
push
ret
pop
pop
movsb
shl
loope
cmp
in
mov
js
dec
insl
mov
jmp
mov
cli
dec
lahf
movsb
int3
adc
es
dec
bound
adc
decb
adc
push
pop
ljmp
push
cmp
dec
dec
js
into
adc
mov
test
mulb
aas
loopne
lds
push
mov
cwtl
push
ljmp
inc
pop
fistl
rorb
addr16
mov
lret
fmuls
orb
scas
add
sbb
nop
out
pop
mov
sub
jg
mov
pop
daa
jno
or
rcr
ljmp
lret
pop
jns
ret
ss
add
push
add
xchg
imul
addr16
in
mov
mov
stos
or
jbe
lret
pop
sbb
add
dec
das
dec
and
jg
sub
mov
pop
xchg
sarl
andb
pop
loop
jo
stos
sub
jbe
xlat
add
imul
jg
push
in
aam
into
cltd
lods
push
mov
dec
inc
pop
call
inc
add
fstp
pop
pop
orl
push
ret
bound
push
jne
add
pop
jge
sbb
mov
adc
inc
push
or
xor
dec
mov
hlt
ret
inc
xchg
cmp
int
add
push
ror
xchg
sub
jmp
out
pop
cld
addr16
stc
add
cwtl
pop
lret
fxrstor
out
jbe
outsl
ror
pop
icebp
lahf
mov
mov
jge
push
jle
or
and
mov
inc
sbb
inc
nop
mov
pop
fcmovbe
adc
jmp
lods
test
icebp
loop
rcrl
inc
out
xchg
push
inc
push
sub
inc
fs
dec
stos
aam
dec
pop
mov
add
pop
dec
xorl
xor
mov
dec
bound
ret
xchg
shlb
cmp
out
xchg
push
aad
das
pop
inc
pop
push
test
movsl
add
flds
test
mov
sub
lahf
imul
jno
pop
push
testb
ss
mov
ljmp
jbe
xor
pop
out
in
mov
and
in
and
mov
mov
repnz
cmp
int3
aam
push
shl
insl
sbb
dec
hlt
out
shlb
xchg
gs
jge
mov
enter
xlat
jbe
xor
or
sbb
daa
pop
and
mov
aam
lcall
fwait
addr16
and
sbb
mov
testl
xor
pop
into
popf
push
and
pop
xchg
popf
test
jge
stos
pop
sub
rcrl
sub
iret
sbb
jmp
jle
in
lods
inc
loope
js
xor
mov
pop
adc
out
aaa
pop
maskmovq
into
inc
push
or
pop
jle
dec
movsl
lcall
add
negb
test
pop
cli
sbb
xchg
mov
pop
xchg
popf
jbe
add
push
mov
or
int
jbe
pop
stos
push
inc
xor
mov
out
mov
push
push
jl
fistl
jg
fwait
es
les
clc
in
fimuls
pop
test
cld
leave
push
mov
aaa
xchg
or
pop
jge
cmpsb
cmp
cmp
int
shrb
bound
mov
adc
jl
inc
sbb
jle
mov
pop
push
mov
sbb
loopne
stos
pop
mov
stc
pop
ret
lea
cli
pop
cmp
cld
loop
dec
and
sbb
repnz
int
fldt
xor
xlat
mov
mov
rcrl
ljmp
jbe
pop
dec
mov
pop
pop
dec
jge
push
lret
int
mov
int
adc
pop
jecxz
insb
xor
push
inc
sub
jnp
testb
mov
lea
jmp
add
shl
pop
xchg
mov
push
pop
dec
xor
jg
outsb
cs
dec
mov
mov
pusha
xchg
or
push
aaa
cli
das
mov
add
rclb
pop
fsub
fs
lock
stc
in
pop
cmp
cmpsb
repz
into
pop
push
movsb
ja
daa
cmp
fcomps
aas
xchg
mov
add
push
pop
lcall
and
cld
xor
out
and
leave
sbb
cmp
pop
test
int3
test
mov
ja
in
mov
pop
adc
push
fs
arpl
or
jecxz
jbe
adc
in
cwtl
mov
ja
lret
xchg
subb
inc
iret
add
pop
mov
mov
jp
mov
or
jge
pop
jno
mov
addr16
push
adc
call
lock
in
divl
mov
ficomps
fucomp
ret
pop
test
or
mov
test
jbe
cmp
jbe
ljmp
xchg
and
jne
adc
arpl
mov
push
dec
cs
lea
repz
es
dec
lds
fs
jmp
std
lea
outsl
daa
dec
adc
cwtl
cmp
inc
test
aad
lret
jbe
imul
orl
or
shrb
adc
insb
jae
pop
outsl
ret
mov
cli
mov
jle
fcmovb
cmp
aaa
aas
jno
pusha
mov
mov
xchg
xor
mov
adc
jbe
push
sub
es
cmc
xchg
cs
sbb
push
addr16
and
jne
push
pop
dec
lods
pop
rcl
jns
das
scas
rorl
pop
cli
lcall
mov
hlt
test
cmc
jno
jle
and
pop
xor
icebp
hlt
jge
sub
pop
es
dec
push
xchg
out
xor
shlb
pop
mov
mov
jmp
jge
push
gs
pop
cmp
push
lret
das
jbe
outsl
pushf
aam
add
jns
mov
pop
hlt
jge
fldt
orl
popf
pop
shl
xor
add
inc
jp
jmp
addl
pop
dec
sub
iret
dec
pop
addr16
arpl
or
mov
mov
into
cwtl
pop
fmuls
push
pop
pop
cmp
pop
enter
clc
push
call
mov
mov
xor
insb
in
out
pop
pop
lret
jo
push
movsb
test
cmp
sarl
push
sub
jno
mov
mov
in
cmc
and
in
sahf
sbb
pop
xlat
stos
ret
pusha
jp
mov
call
rcrl
mov
and
test
mov
mov
fdivrl
fdivr
pop
jmp
icebp
test
inc
cmp
xchg
popa
mov
push
aas
jbe
mov
xchg
lock
stc
lods
fisttps
cmpsb
pop
in
ret
cmpsl
rcr
subl
sbb
jo
fmul
subb
cmp
push
ss
and
ret
stos
mov
mov
dec
lods
sahf
pusha
jecxz
mov
mov
mov
out
fisubl
mov
test
mov
xor
jp
adc
and
jae
xor
pop
mov
loop
mov
out
push
mov
aaa
arpl
or
call
mov
pop
sub
inc
jle
xor
in
pop
jl
fnsave
or
xchg
dec
call
cmp
jecxz
push
pop
dec
adc
notb
cli
pop
pop
xchg
inc
in
sub
push
xor
adc
ret
mov
add
outsb
dec
adc
ss
pop
nop
mov
push
flds
pop
add
out
pop
push
out
mov
rol
enter
and
push
inc
lret
pop
dec
jae
std
cmp
out
in
xchg
je
popa
mov
lea
sahf
jecxz
pop
out
fsubrs
test
leave
sub
inc
mov
jge
mov
push
nop
inc
jg
push
pop
or
lret
push
fcoms
insl
sub
nop
pusha
jecxz
cli
cmp
bound
stc
sub
xchg
into
pop
push
sbb
mov
push
jbe
xor
rcr
daa
mov
xchg
dec
lock
call
jb
dec
fwait
dec
ss
cmp
mov
xchg
imul
pop
cmp
push
push
mov
clc
cld
push
push
jno
shrb
dec
ljmp
movsb
mov
jae
dec
xor
ljmp
ljmp
push
lahf
icebp
shrl
in
pop
dec
aas
and
inc
cld
inc
adc
out
xchg
mov
pop
jl
pop
xchg
inc
sbb
dec
pop
fsubp
subb
push
push
pop
in
gs
and
inc
push
push
xor
jecxz
or
fwait
adc
and
push
out
ret
ljmp
xor
aaa
pop
cmp
inc
outsl
shr
push
fistps
xor
dec
clc
fidivrl
xor
xchg
outsb
or
and
xchg
dec
mov
sbb
pop
mov
cwtl
pop
xchg
add
add
imul
cmp
pop
jns
and
inc
pop
and
jnp
xchg
push
lods
inc
or
pop
lret
test
mov
outsl
mov
test
movsb
adc
mov
push
mov
aaa
mulb
adc
push
insl
pop
arpl
push
jp
faddp
outsl
int
es
or
pushf
xchg
sbb
pop
cmp
inc
pop
push
cmpsl
out
and
lahf
pop
rcrb
mov
add
jge
jae
xchg
push
and
movl
pop
mov
mov
out
outsl
push
lret
cmpsl
test
push
fildll
pop
and
xor
jmp
popa
mov
insb
pop
ret
fcomi
inc
push
fs
mov
xchg
jmp
iret
out
stos
mov
sub
dec
mov
pop
push
sub
xor
push
cli
in
imul
fidivrl
test
dec
gs
mov
mov
jmp
pop
pop
cli
and
nop
adc
dec
jle
shlb
shlb
jae
or
cmp
jl
jle
cli
aaa
push
pop
push
adc
mov
scas
mov
fstps
fsubr
jnp
sbb
xlat
or
es
mov
sbb
pusha
or
sub
adc
mov
je
and
aas
testl
lret
push
pop
push
test
rcrb
addr16
inc
jmp
or
shlb
out
mov
mov
jbe
inc
add
dec
sar
test
je
daa
jo
jae
jnp
or
rcll
jae
dec
push
int3
sarl
mov
mov
dec
lcall
jnp
stos
pop
mov
push
in
dec
xchg
outsl
inc
adc
cmp
mov
stc
or
jb
push
xlat
xchg
int
mov
sub
push
ret
mov
sbb
pop
inc
xchg
xchg
inc
arpl
and
lret
ror
mov
repz
fmuls
xchg
sbb
pop
mov
jno
cld
pop
in
fisttpl
sbb
sub
gs
addr16
popa
jb
jns
push
jge
ret
add
stc
lea
jle
cmp
sub
and
jne
fbstp
pop
cmp
pop
sub
cli
jmp
out
lods
cmp
jp
inc
jmp
ss
in
fimuls
hlt
and
in
test
cmp
or
cmp
push
fisubs
sbb
cs
loop
js
sbb
dec
adc
mov
nop
dec
adc
aaa
repz
sbb
cmc
outsb
lret
adcb
pop
jbe
xor
xor
xlat
cmp
sbb
fwait
shlb
out
mov
cmc
outsl
test
fidivs
mov
dec
cs
sbb
fcomps
mov
imul
push
dec
iret
inc
push
movsb
mov
jne
stos
adc
fwait
xchg
lret
in
jp
jge
inc
jno
dec
and
pop
sbb
dec
outsl
inc
bound
jmp
pop
adc
sub
xchg
and
and
ret
pusha
sarb
pop
scas
das
repnz
cmp
fsts
jmp
mov
pop
jecxz
xchg
daa
pop
push
js
xchg
icebp
pop
les
cmp
xchg
jp
std
pop
sub
jb
movsb
jbe
xchg
out
cs
shl
addb
xchg
sbb
mov
and
pop
loopne
xchg
in
addb
repnz
test
cmp
jb
stc
cli
ss
sahf
xchg
or
cmp
aam
pop
imul
and
adc
cltd
add
outsb
sub
sbb
out
pusha
pop
xchg
in
leave
outsl
int
push
rcrb
sbb
mov
jecxz
cmp
pop
sbb
and
cld
xchg
das
cmp
or
inc
pop
xchg
xor
sub
push
mov
ja
pop
mov
lcall
mov
shll
arpl
dec
cs
pop
mov
xchg
push
call
mov
test
pop
loop
jnp
mov
bswap
ja
flds
fnstsw
cld
pop
stos
cwtl
pushl
mov
jns
mov
pop
inc
adc
sbb
cmp
mov
pop
cltd
pop
cmp
aaa
dec
pop
jecxz,pn
sub
fisubrl
cmp
repnz
and
test
or
sub
pop
loope
cltd
nop
push
sbb
add
sub
xchg
pop
shll
add
mull
outsl
xor
sub
pop
adc
xor
jle
cmp
xchg
adc
push
daa
jecxz
sbb
sub
push
pop
fistps
sarb
rcrl
inc
test
sbbl
lcall
adc
mov
outsb
repnz
mov
mov
stc
rcrl
out
cmpb
cli
js
js
vmovntps
pop
adc
dec
shlb
fldl
pop
add
pop
jmp
mov
cmpl
test
pop
fs
pop
subl
pop
mov
ret
outsl
adc
inc
fldcw
jp
or
pop
jle
daa
in
sti
cmp
inc
das
lcall
adc
sahf
out
aam
dec
dec
imul
lret
pop
shlb
jb
test
cmp
scas
mov
pushf
mov
jnp
pop
and
add
fdivrs
push
or
sbb
mov
paddusb
and
cld
jae
addr16
dec
xchg
pop
sub
jmp
mov
sarb
jnp
fs
sbb
and
fnstenv
jmp
andb
add
mov
in
arpl
pop
das
movb
cmp
xor
add
inc
inc
in
test
pop
fwait
and
outsb
adc
hlt
xchg
sub
push
in
in
sub
dec
push
push
ret
out
lcall
mov
lret
testb
mov
cmc
pop
xchg
inc
fsubrs
pop
and
jl
lcall
jne
push
in
addb
shll
dec
inc
push
test
dec
push
jbe
xchg
lret
scas
push
pop
dec
orb
in
shrb
jmp
add
shl
sub
or
pusha
xor
jbe
mov
sahf
push
inc
fsubl
mov
in
add
pusha
gs
dec
push
mov
pop
pop
xor
pop
or
sub
je
sub
add
add
test
sbb
pop
inc
mov
sub
pop
pop
leave
mov
cs
sbb
int3
or
add
inc
jmp
xchg
xor
jae
rcrl
or
lods
out
and
sbb
mov
leave
mov
adc
cmp
pop
stos
pop
sbb
outsl
sti
jb
xor
cmpsb
and
call
enter
in
mov
or
mov
jbe
sub
mov
pop
sub
sbb
sahf
cmp
pop
es
mov
mov
mov
mov
out
sahf
lret
inc
jbe
pop
mov
shlb
pop
pop
mov
push
es
repnz
outsb
mov
xor
sbb
mov
inc
outsl
push
push
adc
mov
clc
mov
add
mov
mov
addl
push
adc
adc
cmp
lret
jbe
xor
in
adc
pop
scas
fs
xchg
push
sub
jmp
les
ficompl
xor
fbstp
mov
mov
push
bound
repz
lods
sbb
xor
arpl
push
shll
jge
inc
es
xor
cwtl
imulb
imul
cmpsl
cmpsb
mov
imul
jb
out
or
and
inc
in
and
pop
divl
into
xchg
adc
int3
lret
and
xchg
jmp
call
push
pusha
mov
mov
pop
push
mov
xlat
sbb
and
loop
outsl
shll
es
in
das
jle
sahf
mov
lock
hlt
pop
sub
shlb
out
arpl
xchg
stos
jg
sub
push
xlat
repz
mov
cmp
xlat
js
out
cmpsb
push
es
xchg
fsubr
adc
mov
inc
pusha
pop
jns
sbb
jae
add
notl
sub
insb
imul
inc
inc
ja
lods
sbb
inc
mov
leave
xor
les
inc
into
movsl
adc
test
xchg
push
sub
sub
repz
sub
mov
in
pop
in
sahf
ja
loope
movsl
scas
mov
fwait
push
sub
cmc
dec
and
sbb
xchg
adc
push
fwait
ss
push
outsl
les
andl
pop
sbb
imulb
pop
mov
icebp
xlat
repnz
js
dec
lea
bound
call
std
pop
add
push
in
add
mov
shlb
cli
jno
sbb
xor
std
mov
stos
mov
icebp
shrb
shll
add
push
mov
jo
mov
add
aas
mov
pop
push
sbbl
mov
push
pop
lret
sbb
adc
and
fistpl
mov
test
lock
pop
xor
lea
pop
scas
mov
jne
cmc
sarl
xchg
inc
push
xor
das
xchg
ljmp
adc
outsl
out
ret
mov
sbbl
mov
push
int3
fiadds
jne
pop
mov
stos
mov
cmc
mov
pop
pop
negb
call
into
pop
mov
push
pop
jmp
divps
and
ljmp
andl
frstor
and
push
in
adc
nop
addr16
pop
test
mov
xlat
subb
mov
sbb
fmuls
push
out
sub
xchg
lret
inc
pop
cwtl
out
in
fldcw
cmp
xor
inc
in
pop
jmp
mov
push
shrl
push
aam
mulb
addb
std
inc
lods
xchg
shlb
cltd
sub
in
leave
pop
inc
mov
adc
adc
xchg
adc
pop
xchg
ljmp
pop
cmp
dec
hlt
and
mov
mov
out
jl
call
outsl
pusha
into
push
adc
add
sbb
xchg
pop
or
rcr
enter
mov
xchg
aam
lret
xchg
lea
mov
push
out
xor
les
or
mov
or
pop
xchg
scas
clc
insl
xchg
pop
xchg
cmpl
sbb
in
push
fistps
mov
fisubl
in
out
stos
push
pop
shrb
aaa
xchg
pop
pop
and
test
pop
push
push
into
inc
and
nop
lret
xchg
mov
scas
push
xor
jl
enter
pusha
xor
cmpsl
sbb
fnstsw
addr16
inc
push
arpl
pop
pop
sbb
js
inc
push
pop
iret
cld
dec
popa
pop
loope
or
xor
ss
adc
jp
pop
xchg
ds
insl
jo
xor
push
push
xor
inc
in
xchg
pop
mov
dec
scas
pop
mov
call
repz
or
popf
outsb
aas
adc
pop
into
pusha
fimuls
gs
lret
imul
sbb
pop
lea
xchg
mov
xchg
adcl
shl
es
xchg
jnp
mov
xchg
pop
pop
iret
enter
or
xlat
pop
sub
adc
mov
mov
fcom
jnp
xchg
fs
in
adc
aam
dec
hlt
mov
xchg
pop
dec
les
arpl
pop
repz
outsl
push
xchg
in
lds
sahf
and
adc
mov
popa
inc
pop
jmp
scas
jbe
leave
pop
jb
aad
and
jbe
stos
pop
pop
mov
sub
mov
mov
xor
jecxz
loopne
and
mov
cmp
xor
pop
out
loop
insb
cld
stos
insl
dec
jae
loopne
ficoms
mov
in
fidivrs
pop
jecxz
sahf
loop
leave
cli
adc
rol
sti
lret
sbb
out
cmp
bound
lfs
pop
push
fwait
xor
cltd
stos
test
jle
dec
jl
push
pop
and
leave
gs
das
mov
push
out
cmp
movsl
lcall
pop
cmp
xchg
aad
inc
pusha
adc
gs
mov
pusha
stos
adc
fsts
aas
dec
jne
sub
popf
cmp
outsb
dec
sub
shrl
xchg
ficomps
mov
sbb
inc
movsb
pop
scas
add
fcompl
or
das
pop
je
and
jns
jmp
orb
push
or
inc
in
push
mov
gs
test
mov
xchg
outsl
inc
pop
mov
daa
loopne
pop
pop
adc
rol
inc
xor
lcall
sbb
pop
test
js
loop
add
bound
lret
lcall
fs
xchg
dec
lds
mov
sbb
cwtl
out
push
gs
inc
imul
cmp
push
lds
sub
jbe
cmp
sub
cli
push
pop
in
or
or
jnp
pop
cmp
jg
cmc
std
and
sub
jge
pushf
scas
jp
cmp
pop
roll
mov
adc
aaa
xor
push
push
data16
mov
test
cmc
or
inc
arpl
pop
addl
push
mov
dec
out
insl
dec
mov
adc
adc
pop
lcall
jl
push
pop
aam
enter
pop
jp
push
paddw
push
imul
je
cwtl
aas
mov
pop
jmp
sub
jo
dec
fidivrs
push
pop
sahf
jl
je
pop
sub
sti
cwtl
jge
xchg
xchg
cmp
pop
bound
jmp
fwait
insl
gs
add
andb
loop
sub
sub
pop
mov
xchg
out
gs
sub
cmp
cld
sub
out
dec
push
pop
or
xchg
scas
fsubs
push
clc
pop
lock
xor
int
rol
ja
cmp
out
ret
or
or
sub
inc
sbb
push
xor
jnp
xor
sahf
pop
sbb
pop
jge
daa
cli
mov
jmp
and
sub
lods
sbb
pop
and
out
jge
sub
rcl
into
pop
sbb
inc
jbe
xor
iret
ds
cmp
or
pop
xor
addr16
shl
mov
pop
jmp
bound
and
cmp
hlt
cwtl
push
pop
outsl
inc
leave
enter
dec
pop
in
xor
shlb
fildl
das
jmp
mov
pop
sbb
push
mov
pop
ljmp
iret
pop
mov
shlb
pop
mov
ja
inc
dec
sbb
xor
leave
xchg
pop
outsl
and
arpl
outsb
nop
in
call
fwait
das
mov
stos
push
pop
inc
movsl
pop
pushf
out
shlb
je
rcrl
sub
cld
or
dec
out
jo
fisubl
loope
pop
sahf
imulb
aaa
push
in
pop
dec
mov
inc
sbb
pop
jne
push
sub
sbbb
push
aam
ja
pop
jle
push
clc
xchg
jl
es
cwtl
out
das
push
pop
mov
pop
xorb
jmp
fs
stos
sub
xor
xchg
push
mov
jl
shrb
mov
stc
ret
mov
stos
lods
out
lods
add
fstpt
and
in
nop
cmp
pusha
or
shlb
pop
mov
pop
mov
and
pop
pop
ficomps
mov
inc
cmpsl
pop
cltd
mov
sbb
pop
insb
idivb
dec
and
ret
movsb
sub
lea
jno
pop
rcrb
rorb
test
xor
xchg
aad
pop
gs
inc
mov
pop
pop
cmp
or
pop
sub
xlat
sbb
cmovg
jg
in
mov
idivl
mov
mov
push
jp
pop
mov
dec
daa
inc
pop
cltd
mov
shrb
repz
dec
pop
je
sub
xchg
xchg
pop
punpckhwd
xorl
xchg
movl
cwtl
mov
notb
out
rorb
push
xchg
push
add
js
fcomi
sbb
ljmp
pop
repz
in
dec
flds
call
in
mov
push
testb
xor
loopne
sub
mov
int3
pop
shr
gs
movsb
gs
mov
and
pop
lea
popa
js
adc
mov
xor
es
cmp
jno
pop
cmpsl
cmc
mov
adc
push
inc
and
adc
pop
cwtl
ja
fs
or
xchg
inc
xor
mov
dec
fildl
fcoms
pop
or
pop
nop
dec
mov
inc
hlt
in
dec
push
xchg
mov
mov
push
pop
cmc
cmpsl
jge
movsb
adc
push
dec
ret
pop
mov
pop
lea
rclb
fistpll
popf
add
xor
lock
popa
and
mov
pop
bound
mov
or
es
iret
or
jl
fldenv
sub
sub
jmp
pop
or
jb
add
mov
in
cmpsl
xchg
mov
mov
pop
test
jecxz
sahf
aad
das
cmp
inc
and
scas
es
pushf
popf
adc
dec
pop
push
ljmp
mov
aam
pop
movsl
mov
lods
ret
mov
insl
fiadds
gs
ror
lret
cmp
push
push
imul
pop
arpl
cmp
lahf
push
mov
jmp
repnz
insb
pusha
jg
lcall
push
or
inc
xor
dec
ret
push
inc
jmp
lock
jb
sbb
mov
subb
les
mov
loope
dec
jp
test
roll
shll
pop
fstps
or
in
cld
repz
movsl
or
and
or
pop
insb
fists
hlt
popf
push
out
jg
es
into
mov
jnp
fildll
cmpsl
aas
out
mov
jbe
test
jge
push
jno
dec
sub
scas
cmp
stos
test
loop
pop
push
sbb
push
popa
lcall
ljmp
pop
cmpsb
mov
mov
clc
mov
push
pushf
mov
call
cmpsl
cmp
les
inc
and
cltd
xor
push
pop
mov
mov
dec
int
mov
inc
sbb
dec
mov
mov
mov
cmp
stos
jmp
movups
fcmove
out
mov
dec
cli
mov
adc
jmp
adc
gs
or
out
mov
mov
ret
aam
adc
pop
movsb
dec
es
shl
fmuls
adcb
pusha
in
cmp
ficomps
lahf
rcrl
jge
imul
pop
dec
pop
sub
int3
sub
in
pop
test
testb
xchg
sbb
mov
jbe
mov
lret
test
cmp
xor
add
mov
popf
imul
pop
pop
dec
sub
test
sub
cwtl
gs
push
dec
bound
lret
mov
xchg
vdivpd
or
sub
dec
sub
sarl
xor
mov
outsl
lds
fbld
mov
push
adc
lock
mov
mov
jo
ret
pop
test
int3
rclb
xchg
sub
sti
dec
divps
arpl
out
xchg
iret
xor
xchg
popf
mov
fs
bound
dec
ljmp
test
jmp
jb
pop
pop
push
and
pop
pop
mov
dec
dec
das
pop
mov
mov
imul
adc
push
movsl
push
pop
and
push
adc
fisubrs
mov
std
bound
push
ret
mov
lods
daa
pusha
lahf
leave
mov
ficompl
js
inc
in
insb
xchg
pop
dec
sbb
aad
xor
adc
icebp
popf
in
mov
in
fs
test
adc
pop
lods
jecxz
mov
iret
jbe
mov
dec
jge
insb
lret
out
dec
jle
push
inc
stc
xchg
sbb
mov
imul
pop
fldcw
or
push
dec
mov
popf
test
out
movsl
popa
into
xchg
pop
push
sbb
pop
or
int3
adc
fdivl
pop
ret
test
pop
adc
ss
push
mov
mov
mov
push
bound
pop
mov
push
out
pop
out
xchg
addb
jecxz
push
inc
scas
test
pop
mov
mov
adc
out
xor
inc
pop
out
jg
stos
pop
jmp
orl
lods
mov
mov
pop
lret
add
push
mov
mov
pop
xchg
jmp
adc
pxor
fs
or
and
aaa
jns
pusha
je
lods
adc
in
or
loopne
inc
popf
nop
inc
and
pop
lock
in
imull
mov
mov
jecxz
mov
sahf
push
sub
rcrl
pop
in
nop
push
scas
sub
jp
pushf
jns
adc
loop
ss
xchg
repz
push
imul
and
mov
sti
dec
gs
loopne
xlat
in
push
stc
std
pop
in
lcall
into
das
sbb
or
roll
add
ret
es
pop
bound
je
dec
xor
pop
and
xorb
lahf
jo
mov
mov
xchg
inc
sbb
mov
sub
into
sbb
dec
add
loopne
mov
dec
jl
ljmp
fxrstor
dec
mov
xor
and
jne
insb
sbb
loop
push
pushf
popa
insl
pushf
pop
ss
xchg
jne
push
imul
pop
lods
mov
cwtl
pop
cli
mov
push
inc
adcl
push
hlt
sahf
or
scas
push
jge,pn
mov
arpl
dec
in
sahf
leave
cli
outsl
pop
fstpl
jno
mov
push
xlat
inc
in
inc
cld
icebp
pop
sarl
jno,pn
dec
xor
push
jae
js
sub
xchg
aaa
cmp
jnp
mov
in
ja
xchg
inc
xchg
fwait
nop
scas
mov
push
pop
inc
das
jge
jb
sbb
push
pop
and
jne
push
cltd
mov
xchg
jle
push
mov
sbb
push
mov
pop
or
sbb
jmp
jae
mov
cmpsl
stos
push
push
and
inc
dec
sbb
pop
pop
call
xor
nop
pop
jecxz
mov
push
int
ret
sub
adc
cld
test
out
sbb
and
test
jg
scas
dec
pop
xchg
xchg
dec
sbb
imul
repnz
jle
push
pop
sbb
mov
and
pop
or
push
loopne
inc
stos
xchg
fwait
lock
cltd
aam
test
in
dec
dec
jecxz
mov
pop
pop
nop
mov
xchg
repz
mov
adc
dec
iret
jbe
xor
daa
rcr
stos
fidivs
adc
aas
leave
mov
sbb
dec
mov
cmp
pusha
pusha
cmp
lds
arpl
cld
jmp
xchg
lea
notb
dec
mov
enter
mov
cmpb
inc
ja
xor
in
pop
adc
xor
dec
mov
adc
out
loop
scas
inc
dec
mov
fisubrs
pop
sub
dec
scas
or
sbb
xchg
pop
pop
and
dec
and
jbe
sub
out
fsubr
push
jl
pop
sub
pop
xchg
clc
ss
jbe
and
aam
les
push
pop
sar
jae
push
popa
scas
xchg
sbb
fwait
push
add
sbb
repnz
pop
xor
xorl
jbe
mov
dec
mov
dec
inc
adc
pop
and
ret
pop
insb
loopne
or
jl
dec
pop
mov
add
or
ftst
push
cmc
sahf
pop
addr16
and
push
mov
sbb
jns
push
popa
imul
ja
sbbl
jl
add
adc
pop
push
int3
movsl
sub
aaa
mov
faddl
mov
lods
pusha
int
rclb
ret
call
inc
divl
pop
nop
cmp
adc
mov
movsb
insb
adc
mov
subb
outsl
and
dec
sub
pop
add
inc
mov
outsl
pop
xchg
call
arpl
rolb
mov
xchg
testb
ret
mov
popf
and
xor
stos
push
jbe
xor
lods
pop
fs
or
add
bound
idivb
and
inc
and
ljmp
pop
and
stos
xor
mov
rcll
pop
push
in
icebp
pop
and
fiaddl
hlt
fwait
mov
and
test
outsl
inc
dec
or
outsb
xchg
aaa
roll
jle
stos
dec
push
fs
inc
fisubrs
mov
dec
sbb
push
cmp
nop
in
je
pop
sahf
jp
inc
xor
inc
lret
dec
nop
add
dec
std
xlat
ss
aad
pop
sub
push
add
and
pop
cmp
outsb
dec
sub
pop
jo
mov
inc
pop
push
fucomp
cmpsl
jecxz
adc
mov
sahf
cli
pop
mov
testl
mov
xor
mov
and
out
add
bound
test
mov
fcomps
orb
adc
int3
inc
pop
sbb
mov
jge
xor
mov
cmp
loop
xchg
das
fs
fsub
and
fptan
stos
pop
fiaddl
mov
mov
gs
push
ljmp
subl
idivl
jmp
and
cmp
and
sbbl
cmpsb
sub
lcall
gs
pop
mov
sub
jnp
xor
add
call
fistpll
jb
dec
dec
and
push
out
popa
mov
outsb
xchg
xor
cmpl
fcmove
push
out
and
in
in
sub
pop
out
pop
ret
in
adc
pop
fwait
movsb
cmpsb
loopne
mov
je
jl
cltd
imul
sub
mov
outsl
fmul
insl
icebp
cld
dec
hlt
out
int
add
push
cmp
lods
mov
out
inc
je
ljmp
fucomip
cmp
jmp
xchg
xchg
popf
scas
fst
lods
ficoms
icebp
cmp
sub
and
jno
xchg
cli
popa
cli
scas
imul
psraw
mov
lds
mov
mov
bound
shlb
mov
push
jg
dec
sub
jle
in
jge
xchg
jbe
dec
push
sahf
and
in
inc
pop
mov
mov
xor
jae
aad
test
jg
pop
add
mov
sub
in
mulb
lret
hlt
mov
jae
mov
mov
xor
and
sar
jecxz
or
adc
or
jne
fimuls
jmp
dec
pop
fildl
das
ss
iret
sub
push
xchg
push
pushf
mov
or
sbbb
add
dec
pop
pop
fsubrs
pop
add
pop
mov
pop
mov
inc
push
insl
cmp
adc
pop
push
push
mov
add
imul
jge
cmpsb
xchg
bts
out
subb
dec
outsl
sarl
pop
cli
ret
out
lret
or
cwtl
jg
cmp
xchg
inc
fdivrl
cld
aam
ficoms
mov
push
pop
add
xchg
add
dec
out
getsec
push
out
mov
adc
stos
mov
pop
add
pop
mov
jno
ret
dec
loopne
gs
gs
jecxz
mov
mov
addr16
pop
inc
ds
dec
bnd
mov
imul
out
sbb
inc
and
lods
cmpsb
enter
dec
ficoms
fimuls
pop
push
shll
mov
mov
fsubp
pusha
inc
test
pop
gs
xchg
fwait
xor
inc
arpl
in
pop
lea
mov
sbb
pop
jecxz
outsl
push
imul
pop
je
movsl
adc
lock
adcb
dec
sbb
sub
pop
and
mov
push
mov
fisubs
sub
sub
and
push
test
stos
mov
scas
xchg
sbb
mov
pop
insl
int
add
sbbl
out
pop
xor
xchg
jmp
loope
aas
lods
pop
aam
das
push
int
xchg
jle
dec
rcrl
adc
imul
sti
add
js
ja
les
inc
lock
inc
fisubrs
add
repnz
sub
pop
lds
add
pop
jl
pop
push
das
inc
test
cmpsl
in
lods
sub
sbb
shlb
dec
fs
in
xchg
and
inc
outsl
enter
pop
xor
push
shll
ja
add
push
lea
sub
test
arpl
scas
mov
xlat
sub
out
inc
pop
inc
jne
ds
mov
pop
ljmp
mov
xchg
jmp
adc
inc
or
call
dec
dec
dec
add
adc
inc
inc
add
jecxz
ss
jnp
rclb
dec
pop
xchg
add
je
cli
xlat
ret
add
call
pop
arpl
sub
jmp
test
jp
repz
pop
pop
mov
testb
xlat
in
sub
cmp
outsb
loopne
popf
cmp
mov
adc
xor
or
fucom
pop
lret
roll
sub
jno
push
jecxz
dec
lds
ja
cmp
stos
and
xchg
mov
mov
stos
dec
cltd
or
fnstcw
add
inc
xlat
adcb
jle
insl
mov
lods
and
sti
mov
cli
pop
inc
aas
fistpll
outsl
gs
out
fnstsw
inc
popa
js
push
pop
cs
jne
out
shr
mov
cmpsl
mov
out
mov
sub
gs
xor
les
xor
push
loopne
test
pop
push
push
mov
push
sbb
pop
fwait
jnp
push
xchg
nop
mov
pusha
outsl
into
inc
shrl
loop
in
loope
jp
dec
xor
stc
ret
ljmp
call
jno
cmp
ret
push
sub
test
pop
stc
pop
mov
call
sbbl
xlat
leave
pop
add
jns
jge
divl
aad
shll
jno
in
or
out
sbb
in
adc
popa
xor
inc
leave
in
ret
in
pop
add
mov
lds
cmp
sbbb
xor
or
aas
and
inc
test
mov
cltd
pop
vpsubsb
bound
lea
mov
loop
cmp
add
test
pop
movb
dec
fnstenv
or
cmp
pop
push
les
inc
mov
jno
in
test
loopne
arpl
dec
sub
fisubl
pop
jns
pusha
mov
lret
lods
pop
dec
icebp
adc
arpl
shrb
pop
mov
inc
imull
pop
les
mov
pop
das
adc
xchg
arpl
test
pop
dec
dec
out
faddp
cmpsb
xchg
lea
push
xchg
pop
fidivrs
mov
iret
insl
xchg
sbb
pop
dec
add
pop
decb
bound
sbb
mov
les
mov
mov
fwait
rorl
push
mov
adc
popf
xor
fdivl
fisttpl
sbb
mov
sbb
xor
bound
popf
cs
sub
pop
popa
mov
pop
int3
push
js
lret
cmc
or
pop
xor
pop
testl
lcall
push
aam
xchg
mov
pop
sub
xchg
loope
xor
int3
flds
pop
pop
dec
jp
mov
adc
cmpsl
es
call
les
sbb
icebp
leave
cmp
lock
xor
int3
dec
dec
out
test
rcrl
add
sbb
cltd
repz
push
ret
out
adc
ljmp
lock
mov
lcall
movsl
mov
mov
rcrb
movsb
xchg
sub
mov
inc
aam
pop
ds
or
outsb
gs
ret
dec
popa
mov
push
adc
jecxz
pop
and
and
inc
lds
jle
sbb
das
mov
mov
inc
shll
test
insb
inc
push
out
mov
add
or
cmc
or
fistpll
xchg
stc
sub
xor
mov
lret
mov
cmp
sub
lods
insl
mov
xor
in
sbb
add
cmpsl
sub
cmp
lock
das
push
dec
stos
mov
push
adc
jg
out
sbbb
push
sub
pop
loope
fs
mov
repnz
bound
nop
inc
mov
pop
ljmp
jg
inc
pop
adc
mov
add
push
dec
push
sub
mov
pop
orl
push
ljmp
rol
mov
dec
xor
lret
pop
xchg
inc
pop
dec
mov
int3
mov
dec
out
int
pushf
jmp
movsl
dec
out
pop
mov
sub
stc
pop
xchg
sahf
push
inc
movsl
arpl
imul
cmpsl
cmpsb
iret
xor
cmc
ficomps
imul
lret
pop
leave
testb
mov
cltd
or
jmp
xchg
fld
lods
pop
sub
sub
xchg
cld
pop
leave
fimull
pop
push
enter
mov
pop
ret
xchg
in
mov
es
dec
sbb
push
push
pop
inc
mov
pop
addr16
lahf
daa
push
inc
dec
mov
andb
stos
push
cmp
cld
mov
sub
mov
daa
jbe
cmpsb
in
pop
dec
xlat
les
addr16
shrb
push
pusha
stos
mov
ja
ss
in
out
push
insb
pop
fisttps
pop
das
andb
sub
push
mov
out
pop
sbb
popa
mov
mov
jbe
out
push
pop
scas
push
pop
push
push
gs
mov
jmp
mov
sahf
pop
mov
std
xchg
pop
jp
or
mov
jmp
popa
lret
xor
fadds
mov
cmp
or
outsb
sbb
xor
pop
insl
pop
sbb
sbb
fxtract
push
jle
enter
or
jne
mov
ret
movsb
sbb
pop
add
loope
movsl
dec
push
mov
push
imul
pop
shr
js
rclb
xchg
cmp
lods
pop
ljmp
addl
xor
cmp
lahf
je
es
adc
loope
inc
sbb
mov
lock
icebp
push
inc
mov
jbe
dec
add
xorl
mull
jg
sub
loope
das
out
pop
inc
push
cmp
xor
lret
dec
dec
mov
pop
mov
notb
mov
pop
mov
or
push
mov
pop
dec
xor
mov
jmp
adc
mov
inc
xchg
mov
rclb
imul
addl
pop
scas
and
mov
add
ss
fisttpll
popa
insl
in
cmp
add
lds
pop
adc
jg
jne
popf
jl
and
data16
scas
std
test
scas
jb
hlt
imul
fisttpll
pushf
ret
test
pop
mov
sti
mov
fstl
fbld
pop
add
cld
stos
pop
push
pop
jbe
test
std
popa
cmp
push
cli
jnp
add
sarb
pop
or
jl
movsl
es
cld
mov
pop
adc
pop
dec
xor
shl
cmp
scas
or
mov
mov
lcall
rcrl
pop
fildl
add
inc
sub
gs
lods
xchg
out
insb
mov
push
scas
jmp
fbstp
add
pop
inc
loopne
enter
iret
cmp
and
sub
pop
fwait
lret
mov
xor
bound
pop
popf
fcmovnb
ret
pusha
stos
push
mov
or
lret
call
add
repnz
cmpsl
int
mov
xchg
cmp
pop
dec
inc
test
imul
jge
mov
das
and
mov
bound
xchg
push
mov
daa
add
aaa
mov
cli
pop
jno
lretw
inc
fsubrs
push
cmp
or
jg
xchg
arpl
jp
das
orl
lea
sbb
pop
or
cmpb
cli
sub
ljmp
lret
jg
rcl
jp
push
mov
int
icebp
sbb
pop
sbb
cmp
or
cmp
in
cmp
inc
daa
cmp
add
sbb
lea
and
inc
mov
xchg
pop
jo
sub
imul
mov
scas
into
jge
cmp
xchg
mov
pop
xchg
jle
mov
int3
jns
pop
xor
sub
fidivl
mov
mov
jbe
push
loopne
scas
sub
jg
rcrb
xor
mov
jle
xor
stc
lock
xchg
push
pop
in
or
lcall
jmp
jno
adc
lahf
loop
subb
mov
cli
mov
cmp
mov
sub
mov
lret
filds
inc
or
pop
cltd
dec
push
cli
push
jge
gs
into
int3
bnd
mov
push
or
outsl
in
stos
adc
inc
fsub
or
push
std
jl
iret
stos
cmpb
out
clc
dec
xchg
cwtl
loop
inc
jg
mov
or
fists
sub
mov
adc
and
xchg
cli
popf
add
fcoml
mov
sbb
fdivrl
adc
pusha
test
pop
mov
sub
test
adc
pop
xchg
sti
xor
or
stc
mov
and
idiv
dec
sub
gs
jns
orl
xchg
cmp
jge
xchg
mov
push
dec
divb
dec
movl
nop
pop
cmp
jmp
sbb
push
gs
movsb
aas
mov
sub
pop
and
jp
pop
movsl
push
dec
addr16
inc
fstps
icebp
pop
mov
pop
bound
dec
pop
mov
xchg
int3
cld
jg
imul
dec
dec
inc
add
mov
cs
out
sub
lret
pop
fcomps
cmpb
movsl
cmp
xor
jmp
jo
fs
fcmovb
fiadds
inc
testb
mov
sub
mov
pop
cwtl
mov
sbb
mov
bound
icebp
push
fs
sbb
pop
inc
inc
pop
mov
inc
pushf
insl
imul
xorb
push
pusha
cmpsb
lcall
les
pusha
loope
mov
pop
outsl
dec
mov
stos
jmp
pusha
pop
stc
in
jmp
fbstp
xlat
mov
xor
pop
mov
push
push
mov
lock
leave
and
jb
pop
sub
por
jecxz
out
int3
jnp
mov
les
movsb
dec
sbb
lods
push
dec
push
or
xor
shlb
mov
fwait
adc
xchg
inc
pop
iret
shll
lcall
push
mov
add
xchg
gs
add
and
popa
and
cmp
mov
push
xor
sbb
sbb
loope
fstpt
add
mov
cmpsl
xor
mov
ja
jp
pop
sbb
inc
xor
jbe
outsl
call
pop
movsb
aaa
pop
andl
movsl
mov
or
cmc
jecxz
shll
iret
pop
inc
and
mov
fdivl
push
dec
rcrl
out
lcall
pop
ljmp
out
arpl
inc
jl
icebp
mov
jbe
cmp
adc
mov
cmc
lahf
sbb
dec
cmp
loop
jl
psubsw
pop
shlb
outsb
adc
sbb
jae
mov
jno
jmp
add
mov
outsl
test
add
and
xchg
sbb
jo
mov
push
add
int
sbb
add
idivl
enter
outsb
dec
push
mov
xor
jp
push
pop
rep
lret
aad
pop
pop
jae
adc
xor
and
cmp
pop
outsb
sub
out
dec
out
mov
sbb
loopne
cmp
pusha
adc
add
pop
mov
data16
xchg
pop
cmp
imul
pusha
or
mov
sub
xor
cmpsl
gs
inc
int
rol
jecxz
mov
pusha
insb
lcall
mov
or
push
pop
add
mov
data16
jo
ja
dec
xchg
les
pop
pop
and
dec
je
sub
xchg
and
jns
lret
out
push
pop
push
repz
sub
jle
mov
sbb
push
fwait
mov
pop
aas
cltd
add
icebp
outsl
jl
xor
mov
jp
loop
cld
popf
pop
loopne
sbb
and
mov
mov
test
pop
andb
pop
adc
cli
xchg
push
lock
push
loop
pop
cmp
push
sbb
mov
mov
pop
inc
cli
je
sbb
test
fists
cltd
pop
sub
inc
lret
jp
repz
movb
in
jg
or
pop
ret
clc
jl
push
sub
xor
xor
sbb
and
mov
sbb
fimuls
int
pop
inc
cmp
dec
push
shrl
nop
mov
rclb
data16
add
cli
mov
push
mov
jg
in
test
fs
pop
sub
cld
popf
in
jnp
jb
int3
out
test
mov
popf
in
or
dec
sbb
pop
lods
into
call
test
push
outsb
lret
mov
int
mov
pop
pop
mov
les
imul
pop
bound
fistl
inc
sahf
loopne
jo
bound
ja
and
ficompl
mov
dec
fiadds
cmc
iret
out
mov
aad
push
insl
pop
pop
push
je
cmc
dec
add
pop
into
push
and
and
test
or
adc
xor
int
mov
push
mov
fsubrs
add
ds
pop
jne
cmp
jne
push
out
repz
xchg
dec
call
loopne
fmull
pop
fucom
popa
and
mov
or
shll
cmp
bound
xchg
out
pop
mov
mov
mov
adc
pop
and
test
fstpt
cs
xchg
ds
out
mov
les
scas
call
sbb
adc
shl
xor
es
fwait
dec
adc
loop
dec
xchg
and
scas
std
sahf
xchg
xorl
pusha
repz
pop
pop
jge
add
xchg
scas
mov
cmpl
repnz
xchg
cltd
test
stos
sahf
pop
and
xchg
sub
lret
xorb
scas
mov
lds
jbe
out
pusha
pop
mov
in
out
repz
and
and
sub
dec
int
and
jae
cmp
pusha
xor
loope
jo
sbb
jmp
xchg
pusha
add
and
lods
ds
cmp
push
xchg
stc
and
pop
pop
or
test
dec
rcrl
mov
fcmovne
lods
ds
add
pop
xchg
or
sbb
pop
sbb
sub
pop
iret
push
xchg
dec
lahf
push
or
mov
sbbb
sarl
loop
lods
jno
pop
cmp
and
inc
push
dec
in
add
cmp
and
hlt
and
jnp
xlat
ds
dec
dec
xchg
push
les
or
fs
or
imul
movsb
into
gs
enter
dec
add
mov
outsb
ret
cmp
leave
sbb
and
mov
cmp
fnstenv
rcrb
lods
sub
push
pop
and
jecxz
shlb
bound
dec
xlat
push
data16
shll
jge
mov
mov
insb
test
dec
xchg
int3
mov
and
pop
sbbb
or
dec
inc
mov
fldenv
jnp
pop
jmp
leave
fs
cmc
or
in
adc
adc
shrb
sub
popa
repnz
imul
je
movsl
jns
jbe
scas
cwtl
sbb
or
and
sti
add
xchg
rorb
xchg
mov
sbb
pop
mov
jns
mov
aam
sahf
add
mov
pop
cmp
inc
adc
pop
sbb
pop
mov
push
bound
jg
scas
jnp
pop
xchg
sub
popf
es
jmp
outsb
leave
sbb
hlt
cmpsb
mov
dec
movsl
mov
in
and
mov
out
fs
test
pop
imul
popf
jbe
cmpsb
loopne
and
jne
jnp
sub
mov
add
loop
mov
adc
mov
roll
lods
inc
mov
or
pop
fnstsw
jb
fs
pop
sbb
mov
dec
or
jecxz
xchg
test
pusha
and
int
dec
xor
jecxz
jns
mov
pop
test
adc
cwtl
dec
jl
pop
in
pop
lret
loopne
pop
mov
inc
and
add
aaa
push
fcmovnb
inc
aad
jbe
mov
rclb
pop
jb
mov
pusha
add
mov
push
lock
mov
bound
out
in
pop
loopne
pop
push
mov
das
mov
pop
test
rorl
xlat
clc
loopne
mov
dec
popa
jae
mov
inc
bound
cwtl
into
mov
mov
jne
pop
push
pop
dec
aam
cld
lock
lds
push
inc
in
test
lret
pop
pop
out
inc
cmp
jne
push
cmc
sub
popf
mov
xor
lods
mov
dec
movsb
jb
pushf
fistpll
gs
cmpsb
loope
js
dec
movsl
adc
add
leave
fcompl
loope
adc
push
test
es
cld
cmc
outsl
shl
rcll
mov
pop
and
pushl
repnz
sbb
pusha
into
addr16
pop
jno
test
sbb
sub
adc
std
incl
pop
adc
lods
xlat
aaa
loope
or
lea
scas
fsubl
xchg
add
movsl
fmuls
movsl
jp
push
std
xchg
sbbl
jnp
pop
sti
pop
mov
lret
add
pushf
inc
and
mov
cli
sub
xor
or
test
pop
add
jle
pop
fdivs
pushf
outsl
mov
pop
cmp
dec
aas
push
pop
jno
cmp
adc
movsl
into
faddl
sub
jb
leave
in
mov
push
pop
inc
sub
sldt
fcoms
loop
in
xchg
xchg
shl
in
inc
sarl
lret
pop
lock
gs
adc
pushf
bnd
loope
insl
test
movsb
rcrb
dec
cli
pop
imul
xchg
mov
sub
les
push
das
fimuls
pop
xchg
xchg
test
in
dec
mov
cmp
and
stos
pop
sbb
jb
pop
stc
inc
sub
cmp
push
pop
call
mov
dec
lock
ficoms
and
push
push
rcrl
jge
cwtl
xor
mov
stos
pop
pusha
ret
pop
out
cmp
popf
sarb
jo
pop
imull
mov
and
jmp
push
enter
pop
lea
xchg
out
out
call
faddl
mov
pop
add
push
or
scas
lock
jbe
pop
aad
sbb
mov
mov
or
and
test
mov
add
push
lret
pop
dec
shl
cmp
push
push
ljmp
cmp
rcrb
mov
sbb
iret
push
pop
or
ret
push
dec
cltd
int
push
aam
popa
shll
add
dec
sbb
pop
pop
add
daa
push
adc
addl
scas
loope
push
int
add
mov
leave
shl
jecxz
and
stc
rorb
test
lahf
stc
ja
lods
imul
lds
jbe
pushf
out
test
sub
cmp
pop
push
shll
and
or
insl
sbb
inc
cmp
daa
lret
dec
xchg
ss
sub
pop
lods
pop
scas
aas
xor
or
in
movsb
pop
insb
pop
xor
inc
sbb
in
repz
lret
popa
cmp
sub
xchg
push
jl
xchg
pop
adc
sub
scas
xchg
pop
aaa
jecxz
add
in
sti
inc
lods
lock
sbb
sbb
loopne
mov
sarl
out
sub
ret
pop
inc
push
mov
sub
push
jae
out
aas
xchg
adc
cmc
inc
push
mov
push
sub
push
stos
mov
jbe
mov
lds
mov
stc
pop
push
cmpl
xlat
pop
popf
ljmp
ret
rcll
dec
cwtl
fcmovb
in
or
pop
mov
cs
aas
das
pushf
add
mov
and
mov
lods
xchg
ret
call
mov
int3
lods
repnz
mov
das
enter
test
xchg
lcall
lret
sub
sub
dec
pusha
mov
sti
jmp
adc
xchg
mov
add
out
lds
pushf
pop
or
xor
pop
dec
push
outsl
lret
dec
jl
in
cmpsb
mov
int3
shlb
shll
shlb
xor
mov
mov
push
cs
jne
mov
insl
cmpsl
int
xchg
pop
rolb
xchg
lcall
arpl
icebp
rcrl
xchg
dec
mov
into
mov
cltd
pop
inc
bnd
mov
lcall
loopne
pop
push
pop
dec
add
xor
movsl
in
jnp
jge
test
lahf
pop
push
sub
push
add
fisubrl
add
int
leave
insl
pop
pusha
dec
inc
repnz
popf
lods
mov
fs
or
ja
mov
add
cs
std
xlat
pop
jns
jecxz
arpl
stos
pop
divb
call
pop
pop
or
ds
add
mov
pop
addr16
testl
pop
pop
pop
adc
mov
adc
scas
jecxz
adc
pop
cltd
add
outsl
pop
and
pop
andl
dec
dec
adc
xchg
xchg
inc
jge
dec
mov
lahf
add
cmp
aaa
lcall
addb
inc
mov
sbb
int
in
sti
popf
idivb
jg
inc
cmp
pop
dec
je
inc
xchg
outsl
std
pop
mov
mov
mov
pop
icebp
es
test
mov
in
jg
jp
dec
or
xor
add
jecxz
adc
pop
das
hlt
sbb
ljmp
pop
push
shl
add
mov
xchg
push
cltd
andl
adc
out
mov
cmpb
test
xchg
or
add
xchg
insb
push
movl
leave
notb
xchg
push
mov
add
sub
pop
sahf
repnz
ret
fsubr
adc
movsl
inc
pop
subb
mov
inc
push
into
xchg
fimuls
cmp
andl
and
out
push
pop
pop
sbb
sbb
pop
nop
mov
rol
lret
fstps
dec
iret
lock
mov
in
jecxz
push
idivb
iret
jnp
mov
cmpsb
bound
add
jb
xor
ss
test
cmp
imul
insl
clc
or
fbstp
and
cli
sbb
rol
cmp
imul
xchg
adc
jno
test
mov
loop
dec
pop
test
push
or
lcall
xor
mov
dec
push
push
sub
lret
mov
pop
pop
xlat
mov
mov
ficoms
or
add
lods
sarl
dec
int
sub
cmp
mov
loope
scas
or
push
adc
fdivrl
push
push
frstor
or
das
test
sbb
sub
outsb
lea
sbb
or
insb
fadds
mov
xchg
ret
sbb
inc
sti
outsl
inc
and
mov
pop
mov
add
inc
pop
cmp
pop
mov
jbe
pop
mov
jle
xchg
cwtl
mov
insl
and
lret
pop
stc
jbe
jecxz
sbb
cwtl
lcall
pop
inc
jno
and
mov
cmp
dec
call
mov
stos
mov
mov
xor
dec
push
sbb
sub
or
movsl
jns
jne
popf
sbb
rcll
fwait
cmp
fldt
and
and
sti
stc
mov
daa
push
cmc
add
inc
push
xchg
bound
and
mov
lret
jb
arpl
xor
pop
jg
jp
jmp
sti
mov
cltd
int3
xchg
adc
or
mov
or
sahf
cli
pop
and
out
ja
jbe
fcompl
sbb
or
add
mov
popa
push
dec
jmp
pop
pop
jno
pop
adc
pop
das
xchg
adc
cwtl
xor
mov
inc
cmc
repnz
notl
fdivs
mov
xor
subl
or
icebp
cmp
lods
shlb
test
xchg
es
push
inc
popf
daa
sbb
jb
test
pop
cmp
lock
mov
aam
negb
add
es
jnp
fists
repnz
jo
push
and
jg
pop
sbb
xchg
inc
enter
shrb
leave
dec
int
sbb
mov
bnd
mov
or
es
jnp
iret
xor
and
pop
pop
scas
sub
xchg
sbb
push
out
call
adc
jge
push
rclb
sar
dec
cmp
pop
cmp
pushf
jmp
pop
cmp
es
sti
mov
xchg
mov
and
pushf
cli
fs
xchg
and
shrl
aas
xor
jns
sub
pop
add
roll
repnz
ja
and
popa
filds
pop
mov
xor
pop
mov
std
adc
jg
pop
jns
scas
cltd
orl
shl
inc
pop
mov
fimuls
pop
repnz
xchg
shrl
bound
sub
sbb
pop
bound
jbe
sub
dec
jecxz
pop
lods
mov
test
lret
mov
xchg
xchg
mov
pop
pop
movsl
mov
add
push
lcall
add
pop
dec
push
dec
push
pop
lock
test
outsl
inc
pop
fistpl
jbe
pop
cmp
lds
push
inc
or
jnp
dec
jbe
ror
pop
cmpsb
nop
out
push
pop
inc
push
push
ficoml
pop
mov
in
push
les
jg
pop
adc
adc
pop
jns
pop
ljmp
xchg
xchg
push
xchg
sbb
bound
cmc
lods
mov
adc
sbb
js
and
xor
push
inc
std
shll
stc
ret
mov
ret
and
mov
lods
mov
xor
pop
test
popa
out
sub
gs
sti
pushf
bnd
js
or
test
mov
or
out
std
mov
imul
xchg
add
cmp
bound
jl
stc
pop
out
and
into
std
sub
mov
jo
xor
popa
fistpl
in
rcrl
int
mov
xchg
popa
out
inc
dec
cli
jae
cmp
jae
xor
je
outsb
rcrb
add
pop
or
jbe
pop
lahf
lock
lods
mov
sub
dec
ret
stos
pop
inc
test
mov
negl
ficompl
ret
movsl
adc
nop
and
mov
pop
cmpsl
push
adc
aaa
jo
cmc
lds
xchg
aas
fildll
dec
or
enter
hlt
test
jae
cmp
xchg
jecxz
ret
pop
cmpsb
push
mov
out
pop
sbb
sahf
testb
push
adc
sub
loop
and
pop
popa
push
dec
pusha
xlat
mov
enter
orb
lea
rol
fstenv
mov
aas
pop
call
popf
in
shr
pop
je
ds
test
and
lock
push
ficompl
mov
and
xor
push
pusha
mov
xchg
and
imul
sbb
add
fdivl
pop
insb
ficompl
jle
out
test
xchg
xor
pop
xchg
adc
adc
test
lcall
pop
lds
sbb
aam
cmp
or
aas
ret
sbb
mov
xlat
sbb
sarl
jmp
mov
mov
sbb
pop
leave
xchg
les
inc
jmp
mov
shrb
filds
lods
jp
bound
rol
pop
add
cmpsl
iret
popa
jno
or
dec
sbb
cmpsb
add
jg
test
aas
push
cmp
jle
ja
sbb
pop
out
mov
fwait
lret
in
jbe
xchg
aaa
outsb
loop
sbb
push
inc
mov
ja
jne
mov
das
out
mov
popf
jg
and
jmp
and
push
aas
movsb
pop
cmp
stc
xchg
mov
mov
sahf
cmp
xchg
aaa
mov
test
add
pop
inc
jno
pop
jmp
sbb
jbe
add
es
adc
xor
adc
mov
inc
xor
leave
dec
ss
aam
push
xor
dec
adc
pop
sarb
mov
xor
aaa
rclb
movsl
push
inc
repz
xchg
mov
rcrl
sub
lcall
loopne
sbb
daa
andl
mov
pop
mov
clc
or
movsb
mov
scas
pop
testl
leave
push
into
and
pop
fstps
mov
push
pop
repz
bnd
xchg
hlt
sub
push
dec
daa
lock
jae
scas
adc
dec
and
mov
or
mov
or
mov
and
push
xorl
loopne
sbb
pop
jnp
adcb
mov
and
cmc
div
adc
jg
pop
js
dec
sbb
sti
push
xchg
in
sbb
jge
int
mov
loope
pop
repnz
fcomip
push
xor
jbe
jecxz
fwait
and
push
jg
jae
xchg
jns
sub
shrb
pop
mov
push
xchg
pop
in
or
vandps
xor
daa
shll
dec
loope
add
test
or
pop
jno
test
incb
cwtl
mov
inc
cmp
mov
movsl
and
popa
popf
lock
fsts
lcall
jnp
cwtl
mov
or
push
mov
pop
das
jle
imul
jg
xor
and
loopne
jbe
xchg
mov
xchg
aad
pusha
inc
jnp
es
dec
xchg
cmp
mov
test
mov
pop
xor
dec
jmp
cld
frstor
push
lahf
jp
xorb
jp
mov
lea
adc
ss
pop
pop
fs
xchg
mov
sbb
sti
lods
into
pusha
jge
or
jnp
leave
inc
fs
mov
push
jo
fidivrs
jp
and
pop
stos
add
shr
add
sbb
xor
cmp
jno
fimuls
cmp
xor
xchg
or
call
sbb
cmp
pop
xchg
add
adc
inc
test
or
cwtl
xor
push
pusha
xchg
dec
pusha
cmp
fwait
and
lock
lcall
insl
cltd
rorb
or
bnd
mov
xchg
testb
xchg
ret
mov
push
push
pop
add
jb
div
lds
lret
sbb
in
pop
dec
lods
les
out
jg
gs
mov
mov
sub
iret
dec
jb
mov
jnp
int3
sahf
adc
gs
pop
cmp
jo
inc
and
test
lcall
jnp
mov
sarl
add
push
jne
icebp
pop
add
out
push
pop
and
movsl
mov
lods
in
ljmp
push
cmp
repz
jb
jne
pushl
sti
daa
lret
lret
and
sbb
ret
mov
cld
jbe
loope
jo
jg
fs
idivb
dec
jno
mov
pop
cld
leave
adc
rcll
outsb
cli
pop
lahf
idivb
sbb
cli
outsb
dec
xchg
mov
mov
paddq
sarl
movsl
ret
mov
and
cmp
jbe
add
frstor
push
mov
in
mov
jecxz
push
mov
mov
cmp
scas
sub
icebp
or
gs
negb
out
cmp
push
jo
imul
mov
arpl
movsl
repnz
xchg
jg
pop
call
mov
push
repnz
xor
cmp
sbb
cli
pop
repnz
inc
mov
jp
fisubrl
and
or
dec
lds
pop
sbb
xchg
xor
aaa
pop
in
sbb
stos
xchg
pop
cmp
pop
mov
mov
adc
jge
insl
push
dec
add
xor
add
in
fildll
pop
mov
xchg
or
pop
push
mov
sub
inc
lcall
dec
or
add
and
mov
popa
ja
xor
lods
pop
clc
push
or
pop
xor
jbe
and
xchg
cmp
and
mov
out
addr16
cs
mov
or
aas
roll
pop
xchg
out
cmpsl
pop
sub
cmpb
xchg
cli
cli
push
in
xchg
movsl
adc
movsb
in
out
and
shrl
pop
in
xlat
pop
andb
pop
loope
and
pop
and
xchg
imul
mov
lret
lret
adc
xchg
dec
lret
icebp
pushl
or
jb
ficomps
lds
push
mov
pop
sbb
cmp
push
sub
les
cltd
mov
popa
stos
shrl
mov
cld
lock
in
lahf
jmp
pop
push
repz
and
popf
ljmp
and
int3
mov
xor
ja
leave
rcr
mov
in
cwtl
popa
dec
icebp
cli
mov
jmp
shrb
dec
add
add
cli
or
pop
jbe
fcoms
mov
cmpsb
out
pop
push
xlat
dec
jnp
or
mov
pop
and
push
xchg
or
pop
fwait
in
addr16
pop
jmp
xor
aas
add
inc
dec
dec
pop
mov
bound
in
in
pop
bound
gs
jl
xor
adc
and
add
fdivl
cmp
js
mov
movsl
std
mov
jb
aad
mov
adc
mov
pop
out
mov
fnstenv
xchg
inc
lock
sbb
and
pop
test
sub
mov
pop
sbb
xchg
cmp
dec
aas
cmp
fistpl
push
cmp
cs
jge
cltd
pop
xor
mov
lds
movsb
int
sbb
bound
jmp
mov
adc
mov
or
xchg
add
js
xchg
repnz
mov
mov
adc
outsb
or
push
push
stos
pop
mov
les
lahf
cmp
xor
faddl
loope
mov
push
aas
in
mov
and
mov
jno
out
hlt
ss
roll
push
sahf
adc
sbb
pop
push
inc
aas
and
adc
push
movsb
xchg
add
into
and
adc
insb
xor
aaa
clc
sub
rcrb
mov
mov
and
fnsave
sub
imul
pop
mov
int3
and
add
adcb
mov
sbb
mov
lea
pop
fsub
rorl
shrl
add
push
icebp
push
sbb
jbe
rolb
cmp
push
mov
enter
clc
inc
mov
nop
add
int
dec
add
jae
cli
pop
mov
cmp
pop
xor
stos
sarl
aam
cwtl
test
and
js
push
and
cld
jge
sti
dec
add
xchg
push
pop
mov
negl
and
inc
mov
fmuls
test
mov
lds
gs
fisubrs
add
negl
movsl
sub
xchg
push
incl
in
sbbb
mov
repnz
aaa
xchg
outsb
cmp
call
popa
jno
sbb
xchg
adc
pop
mov
roll
pop
mov
jb
inc
insl
std
sub
and
pop
add
pop
pop
adc
xor
mov
adcl
shll
icebp
cs
pop
rorl
fbld
mov
clc
sbb
rcrb
xchg
sub
and
inc
add
insb
mov
mov
pop
and
cmp
mov
int
inc
fwait
negb
sbb
lock
outsb
add
mov
pop
out
icebp
movsb
jbe
lret
mov
loop
jo
push
push
pop
cmp
outsl
lret
pop
stos
jmp
ret
cltd
add
and
mov
cmp
fnstsw
fidivrl
pop
dec
sahf
nop
jle
xlat
xchg
cmpsl
pop
imul
lds
outsl
lds
and
gs
adc
xor
or
testb
mov
pop
sarl
add
pop
out
test
pop
sahf
fidivrs
leave
xor
popa
mov
push
bound
pop
std
jge
mov
pop
out
mov
icebp
ds
or
test
rcrl
bound
xchg
adc
bound
mov
adc
xchg
xor
pop
jg
pop
inc
cmpb
std
int3
mov
leave
mov
push
pop
sbb
cmp
pop
xchg
pop
jge
sahf
daa
and
inc
cmpsb
xchg
adc
fsubs
mov
xchg
add
int3
push
addr16
xchg
cmp
cmc
sbb
lcall
int3
iret
ret
xor
push
dec
fcomp
cmp
inc
push
mov
xor
pop
in
decb
nop
jmp
sbb
insl
lods
sub
and
pop
adc
divl
cmp
icebp
jnp
std
mov
repnz
icebp
fnsave
adc
in
dec
bound
or
pop
lods
stc
xor
sub
lea
insb
sub
lock
xchg
adc
cli
jne
mov
mov
sub
dec
scas
rcrb
mov
pop
adc
cmp
push
int
lea
int
xor
stos
dec
stos
shlb
pop
fisubrl
jle
mov
call
push
mov
sahf
mov
and
fwait
js
lret
shrl
or
pop
in
dec
mov
xchg
mov
inc
pop
aad
aaa
addr16
cmp
pop
adc
icebp
sbb
imul
pop
ds
cmc
adc
loope
bound
out
dec
pusha
shl
iret
out
pop
jg
rorb
pusha
popf
ljmp
xor
subb
mov
adc
mov
ds
jg
stc
push
pop
push
jecxz
add
fcomip
jecxz
dec
orl
jl
cs
push
lret
mov
lods
pop
fbld
gs
xchg
mov
fcomps
mov
loopne
sub
jge
rolb
pop
xor
inc
test
pop
push
lods
dec
ret
test
aas
cmp
rcrl
mov
lock
ret
cltd
repnz
dec
xor
sbb
mov
sbb
pop
repz
fiaddl
pop
adc
lahf
jecxz
or
divb
cmp
inc
mov
adc
mov
out
pop
xchg
mov
aas
jg
imul
pop
jp
testl
jbe
jl
mov
iret
fists
mov
push
es
addr16
jle
xor
push
aas
sbb
sbb
imul
adc
pushf
mov
lea
pop
adc
fwait
loop
insb
jmp
jle
in
push
sbb
mov
xor
dec
movaps
and
cmpb
dec
pop
mov
xchg
and
leave
in
icebp
sti
sub
test
test
add
jmp
iret
shrb
stos
out
shll
mov
dec
xchg
xor
jo
lods
pop
stos
adc
or
push
scas
cmp
dec
xchg
fcoms
rcrl
pop
add
add
mov
leave
mov
inc
je
pop
jb
fdivp
sti
int
sahf
repnz
outsl
add
stos
pop
pop
add
daa
inc
push
add
jmp
lret
aam
fbld
es
punpckhwd
pop
bound
cmp
mov
repnz
xor
aas
popf
nop
pop
je
push
inc
sub
dec
cwtl
pop
xchg
xor
sbb
pop
and
int
pop
sbb
andb
jg
dec
ret
outsl
cmp
jge
push
outsb
pop
fisttps
pop
outsl
mov
incb
pop
ds
cli
sbb
sarb
imul
loop
pop
pop
icebp
push
adc
add
sbb
add
fcmovnb
sahf
sbbb
jbe
pop
lret
jb
leave
insl
das
add
lcall
cltd
cs
fdivrl
mov
lods
sub
xchg
mov
popa
xor
cmpsb
mov
push
clc
popf
adc
mov
stos
cmp
push
ja
push
pop
das
int3
push
dec
mov
jae
and
mov
outsl
fisubs
push
pop
adc
pop
cmp
incb
jno
and
adc
pop
sub
inc
mov
arpl
pop
shrb
out
or
mov
aas
scas
xchg
pop
pop
popf
and
nop
flds
ljmp
iret
clc
or
out
pop
jns
rcl
leave
xchg
adc
inc
add
lds
cmpsl
mov
or
jne
mov
clc
xor
int
dec
mov
test
jno
pop
aad
mov
sub
adc
mov
je
incl
in
jp
mov
test
fldl
dec
and
adc
das
shlb
cmp
sbb
sub
mov
es
xor
mov
or
std
xor
xor
sub
xchg
mov
insl
jg
out
cmpl
pop
sar
insl
xchg
sub
maskmovq
testl
mov
scas
pusha
ss
add
and
lea
mov
roll
fwait
pop
pop
jle
rol
and
in
ljmp
movb
mov
rcrb
or
mov
xchg
lcall
pop
pusha
push
movsb
or
mov
mov
mov
inc
fcompl
scas
sbb
and
inc
xlat
cmpsl
adcl
shl
test
out
xor
imul
ljmp
and
sub
push
mov
out
push
push
cwtl
and
pop
push
inc
int3
xchg
int3
std
xor
dec
push
out
pop
cmp
outsb
and
icebp
push
push
arpl
xor
lret
pop
adc
icebp
dec
push
sbb
pop
add
and
pop
sbb
pop
sub
jb
cwtl
pop
test
insl
sbb
jmp
mov
aam
jno
and
loope
mov
lahf
pop
and
pop
xor
mov
call
mov
icebp
stc
pop
jno
inc
mov
push
repz
xchg
dec
loope
pop
leave
mov
test
or
mov
cs
sbb
bound
jmp
lds
lcall
aaa
xchg
aas
stc
es
xchg
sbb
jbe
int3
leave
mov
clc
fs
pop
in
sub
push
pusha
mov
fs
push
pop
pop
mov
rorb
dec
ja
mov
arpl
pop
fwait
cmc
add
orl
arpl
adc
adc
push
push
loop
pop
jmp
mov
sub
aas
pop
dec
icebp
push
jbe
add
movsb
jae
sarl
sbb
movsb
pop
bsf
jbe
xor
mov
mov
imul
int3
push
jb
pushl
add
jo
pop
add
lret
inc
cmpsl
pop
jnp
popl
fwait
cmp
rclb
xchg
dec
adc
push
popa
push
dec
pop
add
rol
pop
mov
cli
xchg
pop
cltd
sub
std
add
in
sti
aaa
mov
or
pop
aam
mov
cmp
mov
pop
xchg
mov
pop
in
mov
cli
sub
pop
dec
ja
loop
pop
cmpsl
jae
cs
mov
pop
mov
inc
adc
shrl
imul
jo
and
imul
pop
test
out
dec
out
jne
inc
sahf
adc
or
push
test
jle
arpl
rdtsc
loopne
and
inc
xchg
and
mov
repnz
lds
bound
in
imul
adc
inc
cmp
fmul
and
mov
xchg
adc
xchg
sub
punpcklbw
xor
je
jne
mov
pop
mov
inc
or
cmp
arpl
repnz
pushf
ljmp
cmp
cs
testl
adc
jae
sbb
jbe
ja
mov
out
inc
int
mov
pop
mov
pusha
cmp
je
xchg
les
lahf
popa
xlat
or
outsl
pop
sbb
in
mov
test
xor
lahf
mov
fs
mov
int
mov
inc
pop
call
fmul
pop
in
sbb
fld1
push
pop
rcrb
adc
push
pop
inc
pushf
mov
pop
jmp
dec
mov
loop
sub
dec
adc
sahf
push
dec
les
mov
insl
pop
pop
mov
pop
mov
in
jle
jno
stc
and
mov
xlat
jg
inc
jl
or
pop
and
test
sub
pop
test
shlb
je
pop
int3
sti
mov
adc
fs
xor
adc
jge
xor
or
mov
pushf
sti
jns
adc
xchg
mov
lret
jbe
mov
in
adc
jmp
div
mov
xor
sub
pop
pop
lods
lcall
repnz
stos
xchg
pop
mov
pop
jae
add
pop
lods
rcrb
or
repnz
sbb
or
push
push
lcall
jecxz
pop
flds
jae
and
pop
fmuls
jp
xor
mov
fs
in
cmp
movsl
adc
jge
filds
fdivr
es
lcall
cmp
dec
xchg
shlb
push
nop
push
xchg
imul
mov
xor
fdivrs
leave
mov
push
or
xor
cmp
std
push
sahf
adc
jl
outsb
je
pop
rcr
das
lea
roll
loope
into
pusha
cld
xchg
sti
sub
sub
jae
sbb
xchg
sbb
insl
pop
pop
cmp
sub
xor
mov
push
cs
xor
pop
jmp
xchg
or
mov
arpl
jecxz
out
push
mov
fidivs
inc
lea
fwait
cli
notl
push
test
adc
adc
xor
mov
pop
adcl
and
aas
mov
jp
test
mov
ret
or
aas
lret
es
lods
mov
sbb
dec
sarl
fs
pop
lahf
pop
test
lret
pop
mov
cmp
in
mov
add
push
fsubs
push
jg
or
pop
xlat
jmp
loop
pop
dec
call
mov
sbb
and
gs
cmc
fwait
pop
xchg
out
sub
shl
scas
xchg
in
pcmpgtb
xchg
xchg
pop
in
lods
mov
jge
xchg
insl
push
in
cmp
xor
mov
test
inc
aam
mov
mov
push
and
pusha
jb
or
push
mov
in
ret
sti
and
sbb
pop
int
mov
xor
push
mov
jg
and
adc
test
mov
mov
fsubrs
call
das
add
ss
scas
pop
cmp
mov
out
dec
mov
cmp
movsl
aam
rcrb
lea
imul
shrb
jecxz
popa
push
cmp
mov
sti
add
mull
repz
lcall
xchg
aad
nop
and
scas
mov
xor
adc
ret
mov
lds
fldenv
mov
xchg
add
fwait
sub
and
fisubrl
out
push
ror
outsb
jg
lods
mov
push
push
pop
inc
xchg
pop
jecxz
cs
mov
inc
sbb
cmp
inc
insl
rcrb
int
jae
lds
push
lret
cmpsb
int3
lods
std
and
std
insb
sbb
jmp
or
push
mov
pop
and
dec
je
push
jp
adc
mov
mov
rcrl
call
sbb
sub
dec
jmp
mov
pop
xor
inc
sbb
cmp
cwtl
pop
aaa
add
lahf
or
adc
sub
jns
sbb
lods
aam
mov
xor
push
mov
shlb
hlt
pop
pop
mov
push
push
es
inc
mov
insb
or
movsb
mov
pop
jbe
addl
dec
pop
mov
cmp
adc
inc
pop
clc
arpl
push
pop
enter
mov
fldcw
push
pop
dec
rol
mov
jg
pop
mov
cmpsb
incb
pop
jmp
in
out
faddp
sub
nop
into
push
enter
aaa
or
xchg
cmc
or
aaa
test
sub
pop
or
mov
dec
xor
jle
dec
add
adc
cmc
les
jno
xor
inc
imul
mov
sbb
xor
dec
lcall
lcall
iret
sti
sub
das
inc
es
mov
imul
out
mov
pop
sti
nop
aaa
lahf
xor
push
inc
and
or
sub
imull
shrb
cmp
or
cmpsl
pop
add
fcoml
int3
pop
jmp
xchg
loope
xlat
mov
lods
arpl
push
and
pop
push
leave
nop
rcrl
ja
mov
pop
adc
pusha
fildll
mov
sbb
addr16
pop
sahf
mov
mov
pop
push
les
out
iret
push
ret
ja
or
ljmp
in
inc
in
dec
into
pusha
sub
pop
mov
push
mov
outsb
pop
jb
and
gs
fisubs
and
inc
sti
cmp
mov
xorb
insb
adc
shrl
ss
sbb
das
out
pop
lcall
pop
addl
sbb
pop
or
scas
add
mov
push
pop
enter
pushl
mov
cmp
inc
movsl
jne
mov
push
xor
mov
aas
cmpsl
and
push
sbb
pop
mov
add
adc
cmp
int
imul
pop
pop
adc
lret
pop
out
jnp
pop
fs
rcll
mov
cmpsl
outsl
outsl
mov
pop
ret
pop
mov
pop
out
cmp
int
pop
fildll
rcrb
ret
ficoms
or
in
lock
jmp
pusha
into
incl
outsb
push
sbb
gs
push
and
pushf
mov
decl
or
lcall
sbb
frstor
test
fldl
push
dec
aas
inc
xchg
cmpsl
lret
and
or
and
xchg
mov
fdivr
mov
and
jb
pop
lcall
mov
mov
rcrl
inc
out
mov
pause
call
adc
pop
mov
and
mov
cmc
push
and
cmc
add
movl
shl
adc
inc
daa
sahf
mov
dec
pop
lret
adc
rcrl
aaa
pop
dec
repz
ret
and
enter
mov
out
scas
xchg
jg
aas
jmp
dec
pop
sub
xor
sub
sub
xchg
into
fldl
sub
dec
or
jne
jne
xor
jno
out
sub
xlat
jbe
inc
sarb
sub
mov
dec
pop
cmp
into
icebp
pop
sub
mov
popf
jbe
stos
or
pop
call
xchg
and
jbe
and
arpl
sub
test
addr16
mov
test
jp
lods
push
mov
loope
std
pop
mov
addb
dec
pop
mov
flds
hlt
and
push
stos
iret
mov
negl
mov
fsubs
push
cmp
push
insb
pusha
mov
mov
inc
pop
push
push
ret
movntq
mov
mov
addr16
mov
mov
imul
mov
jecxz
mov
out
jbe
shlb
ljmp
imul
xchg
bound
jbe
pop
sub
push
cs
and
cmp
call
jb
mov
iret
sbb
stos
sbb
jns
dec
cmpsb
mov
cwtl
pop
dec
sbb
xor
sbb
pop
repnz
cltd
xchg
xchg
enter
mov
test
pop
mov
and
pop
xor
add
and
sub
pop
lods
add
add
outsb
pop
or
xor
pop
xchg
imul
inc
ret
loopne
or
pop
push
lea
dec
xor
fcmovb
test
cmpsl
jno
pop
iret
fists
in
mov
cmp
xchg
call
xlat
mov
sti
mov
hlt
jle
sbb
lret
ja
jbe
dec
int
add
jecxz
rcrl
add
out
and
pop
mov
test
fadd
cld
inc
mov
pop
repz
cmpsb
push
mov
test
push
mov
aas
outsb
daa
mov
cs
inc
fucomp
rol
pop
or
or
pop
push
mov
lahf
adc
dec
mov
testl
insb
shlb
pushf
pop
jae
insl
xchg
imul
lret
push
adc
dec
clc
xor
jge
lea
fiaddl
pop
mov
gs
push
xorb
leave
jbe
pop
sub
push
outsb
out
xchg
and
jle
fisubs
les
in
loopne
xchg
pop
jmp
sbb
jmp
jns
and
call
pop
sti
add
pop
test
aaa
lret
rcrb
sub
aam
sti
ficoml
jb
sub
xchg
pop
mov
add
ljmp
push
pop
mov
mov
scas
add
daa
out
pop
icebp
dec
jbe
mov
xor
adc
push
lods
out
inc
loope
xor
lods
xchg
inc
bound
leave
lcall
nop
rcl
pop
xchg
and
mov
dec
mov
ficomps
add
mov
les
pop
push
xchg
das
lahf
cmp
ret
int3
out
pop
pop
loop
shlb
outsl
dec
and
jle
mov
jle
movsb
cmpb
add
outsb
sub
inc
int
push
dec
sbbb
outsb
cld
into
sahf
and
into
imul
push
add
ds
fsubrs
inc
pop
cltd
mov
das
cwtl
cmp
or
mov
arpl
xor
inc
add
cli
rclb
push
lea
and
ja
and
lods
lret
cmp
fisubrs
push
dec
mov
pop
sbb
mov
sbb
inc
stc
inc
mov
mov
sahf
jbe
fistps
cmpsb
adc
daa
mov
popf
pop
lcall
jl
rcrb
push
pop
out
xchg
es
and
mov
out
mov
rcll
cmpsb
pop
addr16
loop
jecxz
lret
es
daa
cwtl
xchg
call
js
imul
jmp
mov
xchg
xchg
sbb
mov
stos
jns
in
push
pop
pop
das
popf
in
sbb
and
imul
adc
aam
push
or
push
es
cltd
es
fcoml
sahf
insl
jmp
xchg
mov
and
rcll
hlt
cmp
inc
shl
push
sub
jle
fisubs
adc
aas
int
fildl
lods
pop
cld
inc
incl
enter
xor
sub
jle
out
cltd
pop
cmp
jbe
xor
xor
std
into
cmpsl
adc
or
out
mov
adc
loopne
fldl
ficompl
sub
sahf
pop
inc
je
sbb
mov
fcomi
neg
dec
lret
pop
mov
xorl
xchg
jns
push
mov
mov
lcall
pop
gs
pusha
mov
test
out
shrb
test
mov
orb
aam
mov
mov
int3
stos
mov
std
adc
pop
and
mov
push
mov
insb
shrl
mov
push
ret
sahf
cs
push
pop
push
jnp
push
stos
dec
cmp
mov
lcall
popf
sbb
lods
loop
sti
in
cltd
movsb
cmpsl
pop
pop
mov
in
cmp
mov
xchg
cmpsb
in
jecxz
or
fdivs
push
xchg
sub
push
push
lret
pop
adc
xchg
fidivl
outsb
mov
xor
test
sahf
and
imul
inc
xchg
cmpsl
fiadds
mov
push
xchg
and
pop
cmp
xacquire
pop
in
outsb
push
shlb
and
or
lret
push
scas
jbe
sbb
jg
nop
xchg
cwtl
xor
mov
loopne
dec
call
rcrl
fisttps
mov
jae
and
jbe
lock
and
loopne
dec
jmp
mov
negl
add
xchg
mulb
arpl
cmc
lds
mov
cld
not
xchg
mov
sahf
dec
jne
aas
sti
sbb
std
repnz
and
inc
outsb
push
push
or
test
and
jg
ljmp
mov
mov
bound
rcrb
sub
cmpsl
jbe
mov
xchg
fidivs
shll
rcrb
enter
cwtl
dec
mov
push
mov
and
and
dec
sub
and
mov
dec
fld
inc
adc
mov
mov
es
mov
cmp
in
or
mov
jbe
test
dec
int
pop
hlt
pcmpgtw
xor
dec
rcrl
push
mov
int
lds
push
movsl
xchg
mov
leave
movsb
cmp
sar
cmp
inc
out
push
scas
push
push
pop
negl
pop
jecxz
lods
dec
enter
sub
sub
movsl
mov
and
mov
int
push
inc
sbb
ret
popf
adc
push
jbe
push
lahf
pop
lods
bound
les
pop
int3
jbe
rcrl
jge
pop
xor
xor
arpl
mov
and
mov
or
and
loop
and
sti
popa
xor
outsb
xchg
aaa
jg
negl
jl
stos
push
scas
add
pop
pop
and
inc
xor
sbb
and
call
lret
xor
enter
sar
add
je
jae
sete
dec
fmul
popa
scas
pop
inc
xchg
xor
jns
xlat
das
cwtl
mov
cld
jbe
xor
or
out
pop
es
dec
push
jmp
inc
dec
and
add
aad
rcr
jg
xor
mov
sbbl
call
rol
fmuls
pop
fs
pop
aad
xchg
mov
xchg
ret
add
xchg
lahf
clc
xchg
pop
daa
mov
jmp
lret
push
subl
out
push
push
mov
outsb
ljmp
inc
adc
pop
jb
inc
out
mov
call
pop
inc
xchg
test
inc
clc
xchg
iret
fldl
outsl
scas
sahf
test
inc
sbb
push
sbb
pushf
jns
imul
xlat
addl
dec
pop
sub
test
pop
push
add
pop
push
push
js
fistpl
xor
cmp
sub
out
test
jmp
push
and
loopne
cli
imul
int
mov
fld
test
pop
jo
sbb
xchg
inc
mov
test
add
daa
mull
pusha
mov
or
cmpsl
fsubs
decb
mov
fs
rcrb
xchg
xchg
inc
xchg
pop
dec
dec
mov
mov
mov
jmp
dec
das
cmpsl
sbb
xacquire
pop
dec
addr16
or
ret
mov
push
jbe
xchg
cmp
sub
mov
push
adcl
loop
mov
adc
xor
fxrstor
pop
fprem1
jo
push
test
out
imul
sub
xor
xor
popa
push
ss
xchg
sbb
and
xchg
or
enter
or
clc
pop
sbb
pop
lds
pop
sbb
addr16
xchg
mov
mov
add
xor
mov
push
mov
cmp
inc
movsl
or
mov
flds
outsb
repnz
push
mov
mov
pop
sbb
stc
je
mov
scas
pop
pop
pop
ljmp
inc
adc
ret
or
sbbl
loope
xchg
pop
cmc
jmp
ret
or
sub
fs
movsb
fdivrl
push
xchg
aaa
xlat
mov
push
cli
push
daa
xchg
inc
lretw
and
and
arpl
push
mov
addr16
push
negl
idivb
add
jb
xor
cs
pushf
ret
ficoms
xchg
addb
arpl
adc
cmp
fcomi
arpl
dec
mov
pushf
test
ds
sahf
lahf
int
mov
sbb
mov
push
icebp
mov
cmp
add
scas
dec
xor
push
js
sbb
fcoml
sub
or
jp
pop
pop
insb
push
sbb
push
pop
test
xchg
dec
mov
loopne
loop
in
fidivl
pop
cmp
pop
push
mov
aam
push
lret
fldenv
out
push
cwtl
popa
fimuls
mov
das
bound
pop
nop
cltd
pop
fiadds
adc
cmp
mov
scas
pop
cmp
adc
pop
icebp
dec
test
xchg
inc
cwtl
rcrb
or
leave
mov
pop
mov
sbb
das
pop
lahf
test
push
pop
pushl
cmp
mov
mov
ljmp
lcall
mov
into
pop
pop
xchg
aam
add
mov
shlb
jmp
mov
mov
inc
xchg
cltd
test
sub
pop
pop
outsb
les
mull
mov
pushf
int
jge
or
cmc
aas
add
fmull
adc
sarl
inc
jmp
xor
cltd
mov
pop
mulb
cmp
std
pop
sub
mov
stos
into
mov
xor
sbb
imul
out
pop
lret
js
xchg
les
sub
jp
lcall
xchg
inc
stos
adc
cwtl
and
scas
into
mov
or
xchg
push
pop
dec
movsb
mov
pop
pop
and
mov
pop
adc
pop
jne
adc
mov
inc
nop
xor
cmp
sub
xchg
pusha
cmp
pop
fistpll
addr16
roll
movsb
in
fistpl
pop
pop
xor
lret
rclb
mov
sarb
nop
jbe
adc
and
enter
call
data16
pop
jp
sarb
and
pop
mov
scas
cmp
loop
jbe
clc
jg
and
cmpsl
lcall
or
popf
test
scas
std
xor
insl
inc
pushf
aam
pop
ds
js
jns
mov
data16
repz
rolb
pop
mov
outsb
aad
ret
sbbb
pop
ret
pop
enter
bound
clc
pop
andl
sbb
lret
loope
pop
xor
pop
adc
lea
xor
or
movsl
push
loopne
jg
jp
shr
adc
es
insl
fldcw
pop
cmp
jno
jbe
or
cmp
xor
pop
rolb
call
inc
inc
and
mov
int
mov
pusha
cltd
inc
lahf
xor
int
mov
pop
fcmove
nop
jae
pop
xor
inc
test
mov
pop
pop
cmpsl
xor
dec
mov
push
cs
test
adc
mov
out
push
jg
add
jge
push
dec
jns
popa
sub
sbb
cmp
sub
pop
mov
daa
xchg
sub
xchg
sub
flds
nop
in
mov
sarb
lea
push
pop
mov
stc
dec
dec
fwait
mov
ret
push
es
jecxz
add
out
or
ret
dec
lods
mov
pop
push
repz
adc
notb
push
mov
mov
jbe
mov
cmp
dec
pop
popl
call
and
jp
jle
xor
mov
pop
jb
mov
and
int3
loope
cmp
repnz
test
into
gs
jns
leave
jle
cmpl
shll
fsts
ret
xchg
adc
jnp,pn
pushf
pop
pop
out
mov
in
adc
pop
cli
pusha
sub
xchg
pop
jne
inc
pop
dec
dec
push
les
mov
test
and
jbe
dec
test
decl
in
js
push
lods
insb
cmp
fisubs
jmp
inc
mov
aad
mov
adc
pop
ds
pop
sbb
pop
or
aaa
pop
pop
fldt
xchg
jnp
pop
adc
inc
enter
mov
mov
rol
inc
bound
mov
in
or
pop
or
cmp
jno
sbb
test
loope
loop
xor
rcrl
test
andl
pusha
jle
das
adc
pop
roll
test
xchg
movsl
fnstenv
xchg
in
cli
dec
fadd
cmp
mov
xor
cld
sbb
push
jp
inc
and
pop
pop
xor
in
aam
pop
sti
pop
jmp
cmp
insl
xlat
stos
mov
clc
dec
shll
or
rcrb
or
not
dec
and
ljmp
mov
sbb
test
xchg
pop
out
push
dec
movsl
adc
jb
es
enter
addb
pop
insl
into
inc
xchg
call
cmc
or
cmp
hlt
push
push
mov
rcll
pop
push
mov
repz
mov
mov
rclb
call
mov
push
std
sub
mov
pop
cli
int3
sbb
test
lods
pop
add
movsl
mov
mov
xor
pop
mov
in
mov
inc
scas
std
add
jl
int3
xchg
std
jle
add
and
and
cltd
idivb
ret
dec
xor
pop
jmp
adc
out
cmp
pop
jg
adc
pop
dec
xchg
push
inc
lea
cmc
lock
mov
mov
pusha
push
das
xchg
fdivrs
pop
add
adc
cmpsb
inc
arpl
in
adc
pop
call
pop
adc
sarb
test
imulb
cmp
pop
xor
mov
daa
sbb
mov
push
or
out
pop
subb
xchg
mov
ret
jg
movsl
sbb
mov
inc
push
jns
fldt
inc
cld
jl
cmp
mov
test
fsubp
and
inc
lahf
mov
arpl
in
enter
pop
mov
ret
mov
mov
shrl
scas
ss
push
xchg
jno
sbb
pop
adc
fistl
out
test
icebp
and
pop
pop
pop
mov
xchg
xor
sbb
jno
jmp
xchg
cmp
push
pop
in
adc
pop
add
call
inc
mov
dec
pusha
bound
sub
or
or
sbb
aas
cmp
mov
pop
stos
ljmp
pop
inc
cmpsl
fistps
sbb
and
sahf
loop
mov
es
inc
mov
ret
or
mov
mov
mov
daa
mov
pop
mov
cmp
call
cmpsl
dec
jle
mov
out
cwtl
lret
shlb
arpl
jg
dec
pop
mov
lret
push
sbbl
jb
imul
push
data16
faddl
dec
and
dec
repz
int3
sbb
repz
test
sahf
sub
jo
cli
outsl
push
ss
sub
pop
push
adc
add
es
pop
lahf
add
idivl
pop
sub
cmp
push
movsb
sbbl
inc
mov
lahf
mov
aam
mov
nop
sbb
mov
xchg
mov
negb
sbb
mov
pop
push
dec
xchg
sub
jbe
jbe
std
mov
adc
mov
gs
inc
xchg
inc
mov
lods
jne
fadd
mov
xlat
mov
in
add
and
pushf
or
into
inc
pop
test
dec
xor
sarl
mov
jbe,pt
sub
lret
clc
jnp
sub
xor
mov
pushl
rolb
and
jg
cmp
push
stos
sub
cmpsb
adc
jae
ja
in
imul
pop
sahf
lret
pop
les
bound
enter
cltd
add
or
mov
mov
gs
test
mov
sub
jno
xchg
pop
mov
bound
and
xchg
inc
sub
push
stos
push
aad
or
sti
loopne
clc
or
push
ret
nop
daa
lahf
fmul
push
xor
leave
std
rcrb
cli
mov
sub
push
push
push
lock
lods
xchg
into
pop
mov
and
push
push
pop
pop
jp
test
dec
pop
test
mov
jl
lret
mov
add
or
pop
adcl
xor
stos
ljmp
xchg
pop
imulb
sub
test
mov
xchg
stos
xchg
into
xchg
pop
mov
xchg
push
jmp
shrl
pop
mov
js
movsb
arpl
movb
in
loopne
daa
in
test
es
jns
xchg
mov
pop
pop
mov
add
data16
lret
es
jp
int3
lcall
xchg
popa
mov
jb
jns
mov
jne
mov
lock
pop
test
mov
lods
pushf
stos
popa
adc
pushf
les
xor
sbb
lock
cmc
mov
or
adc
mov
or
and
sbb
bound
push
mov
pusha
in
or
push
repz
xlat
pop
stos
loop
jb
lcall
jbe
outsb
jp
in
mov
inc
xchg
out
sbb
jl
cmpsl
mov
jge
dec
pop
imul
aad
push
xor
hlt
mov
jecxz
rorb
int
pop
mov
inc
mov
pop
lret
sbb
xchg
sub
icebp
dec
cltd
mov
dec
pusha
mov
stos
pop
out
jb
xchg
aam
inc
xor
cwtl
pop
xor
jecxz
adc
test
pop
adc
pop
popl
ljmp
dec
shll
jg
sub
cwtl
sub
cmp
or
pop
cmp
or
push
scas
mov
cld
out
dec
arpl
push
pop
pop
cltd
jae
mov
test
add
dec
and
gs
pop
iret
push
cvtdq2ps
add
into
enter
das
loopne
lcall
mov
test
out
out
fwait
enter
push
stos
bound
in
lret
push
cmpsb
pop
pop
push
mov
arpl
mov
xor
mov
xchg
jno
inc
pop
xorb
cltd
fildll
andl
xor
pop
adcl
fisttpll
lods
xor
dec
pushf
test
aam
inc
mov
js
loop
lods
test
lods
jp
inc
fld
and
dec
cmp
fdivl
add
bnd
cld
cmp
lahf
sub
dec
sbb
insb
bound
xlat
mov
mov
int
jbe
xchg
andb
pop
sub
push
scas
push
decb
sub
pop
stos
lea
mov
lods
adc
sbb
lock
les
call
jbe
stos
pop
imul
bound
mov
jl
inc
pop
lret
dec
aas
adc
mov
xlat
xchg
mov
mov
fildll
add
in
stos
cwtl
das
pop
jns
mov
push
mov
repz
out
mov
cwtl
ja
pop
pop
dec
aam
or
xchg
mov
lcall
push
xchg
cmp
pop
sbb
sub
sarl
in
jecxz
pop
ret
mov
jns
test
setbe
mov
cmc
pop
xchg
xchg
cmp
pop
outsl
sahf
jge
sbb
popf
sbb
adc
sbb
pop
sbb
cli
sub
inc
xchg
sbb
cmc
les
imul
xor
movsl
sub
sub
dec
imul
hlt
fisubrs
push
xchg
xor
jne
stc
xlat
pusha
je
out
xor
stos
jle
addr16
pushl
or
sub
pop
stc
mov
std
mov
xchg
lods
push
pop
in
movaps
inc
out
jg
imul
je
xchg
dec
pop
aaa
out
shll
jb
or
lods
in
dec
or
fs
int
lcall
xlat
mov
aas
mov
and
fucom
fidivl
test
add
int3
jns
mov
ret
and
cmp
lods
xchg
or
dec
cmpsl
in
push
jp
es
inc
jmp
jns
pop
loope
ja
mov
adc
add
int3
add
popa
push
lret
shl
pop
pop
dec
scas
ss
insb
xchg
orl
fisubrs
je
cs
movsl
jg
mov
ss
adc
fstps
fisttpll
mov
jnp
push
jo
aad
xor
adc
es
fildll
mov
adc
xchg
pop
dec
and
or
test
popf
ljmp
popa
pushl
jno
jb
jg
push
pop
pop
pop
sbb
lcall
test
jg
movsl
pop
mov
popf
loopne
sbb
pop
pop
sub
inc
mov
jae
nop
es
stc
ljmp
rorb
mov
nop
fmull
xor
pop
ja
mov
out
jnp
add
cmc
es
sub
jecxz
xor
add
fs
sbb
xor
dec
dec
adc
std
dec
add
lods
das
out
add
ret
jmp
rolb
movsb
into
jl
hlt
pop
loope
enter
in
lds
test
test
and
sbb
jnp
mov
movsb
cmp
mov
shl
out
xorl
les
mov
inc
xor
test
mov
mov
mov
call
mov
sub
cwtl
or
mov
inc
ja
cmpl
aas
scas
mov
les
pop
outsb
inc
dec
cmp
pusha
cs
mov
pop
cmp
inc
sarb
es
fwait
jns
dec
bound
mov
lea
pop
jle
pop
popa
xchg
xlat
mov
jne
rol
cmc
popf
dec
dec
pushf
or
popf
mov
inc
test
and
mov
dec
mov
fwait
pushf
xor
test
mov
push
sub
iret
and
push
sub
pusha
repz
dec
pop
icebp
in
fldenv
pop
cmp
mov
xor
call
xor
inc
pop
out
cmp
pop
sub
loop
xor
lds
out
lahf
call
leave
data16
mov
dec
cmpsl
iret
dec
push
pop
push
in
push
shll
daa
pop
inc
mov
xchg
push
push
test
pop
mov
ja
dec
xorb
mov
bound
cld
pop
xchg
cmp
enter
xchg
pop
xchg
xlat
daa
or
lahf
jp
int
dec
lret
addr16
pmulhw
mov
les
pop
mov
pop
std
mov
out
push
aas
rcr
adcb
call
lcall
pop
dec
ret
cmpsl
mov
repnz
mov
sub
sarl
test
popa
push
pop
lcall
rcl
cwtl
fnstsw
push
push
out
jmp
into
jle
repnz
xchg
cmp
and
pop
fcomp
loop
push
jns
jb
fisttpl
pop
cmp
adc
jle
hlt
jp
pop
je
and
push
ds
sub
mov
or
fisubrl
pop
sbb
sub
add
push
xor
and
shl
mov
arpl
add
mov
in
addl
es
stc
das
std
fidivrs
int
or
xor
test
jmp
test
mov
daa
xchg
fnstenv
ficomps
inc
pop
pop
and
int
cmpsl
loope
push
cmp
add
mov
cld
and
test
push
rol
test
adc
mov
cmp
inc
xor
inc
es
and
outsb
mov
in
push
shl
fdivl
inc
test
outsb
add
push
fwait
adc
clc
mov
popf
fiaddl
jp
push
lahf
lret
popf
jne
pushf
test
and
xchg
lret
push
xchg
cld
frstor
jae
inc
mov
orb
into
mov
mov
stc
dec
std
movsl
add
out
mov
cmp
and
jp
les
xchg
fwait
xchg
daa
xchg
pop
cli
mov
repnz
scas
cwtl
popa
jbe
lock
push
inc
je
add
sub
sub
cli
mov
dec
arpl
fldt
setbe
loopne
lret
xor
inc
pop
stc
or
cmp
aam
dec
aas
popf
pop
inc
iret
sbb
in
push
mov
push
adcl
fstps
aaa
pop
jno
test
fsubr
push
outsb
cmp
lock
dec
mov
aad
sub
sbb
test
repnz
bound
push
rcrb
mov
fcompl
jge
das
loopne
stos
pop
cli
pushf
es
test
pop
sahf
xchg
push
int3
xchg
fs
sbb
lret
outsl
stos
enter
mov
mov
movsl
cmpb
xor
shrb
dec
xor
fdivs
mov
xchg
pop
mov
pop
sub
sbb
xchg
int
sub
idiv
push
and
orl
xchg
mov
mov
scas
push
mov
sbbb
cwtl
or
arpl
xchg
inc
in
clc
jg
loope
jne
or
mov
pop
mov
sarb
loopne
push
xor
fnsave
or
mov
inc
and
pop
mov
mov
mov
lds
pop
mov
daa
dec
test
in
lcall
mov
pusha
dec
lret
push
push
mov
scas
sub
and
shl
cwtl
mov
pop
pop
scas
das
bound
push
mov
add
pusha
jle
sahf
lods
fninit
loope
test
outsb
insl
fldl
add
cmc
in
sub
lahf
sbb
push
jg
sbb
inc
les
ret
cmp
push
mov
int
lea
addb
xchg
sub
pop
scas
cld
xor
adc
clc
in
fidivl
jp
addr16
xchg
mov
fcomi
lock
loope
loop
ret
es
push
mov
xor
xchg
out
push
pop
pop
xor
sbb
pop
mov
add
cmp
xlat
push
pusha
fisttpl
mov
add
out
pop
aad
int
mov
or
pop
ret
lds
rorb
nop
fimull
or
scas
cmpsb
pop
dec
clc
mov
mov
adc
ss
inc
ficompl
sbb
adc
and
pushl
test
in
push
inc
jno
bound
sbb
inc
sarl
mov
add
mov
xchg
bound
popf
fidivrl
lahf
push
insl
and
push
push
jmp
inc
les
sbbb
jg
cmp
push
mov
pop
ret
es
pop
jmp
sti
mov
pop
into
mov
cmp
pop
xor
rorb
rorb
sbb
jecxz
cltd
adc
sbb
adc
pop
dec
test
arpl
bound
dec
fldenv
push
cmc
xchg
and
mov
mov
fstpl
inc
lret
adc
push
mov
cwtl
lahf
xor
test
inc
xchg
add
and
cmp
lcall
xchg
aam
pusha
scas
xlat
mov
lret
push
mov
or
fildll
mov
gs
ret
cltd
pop
jmp
pop
clc
cs
sahf
pop
sbb
pushf
rcrl
roll
push
mulb
mov
xchg
add
or
xchg
cmpsb
test
icebp
jle
scas
inc
adcb
xchg
iret
mov
sarl
outsl
dec
aam
pop
mov
cld
jns
test
addb
xor
dec
pop
inc
push
sub
insl
test
mov
leave
adc
add
mov
sbb
mov
inc
mov
and
jno
sbb
int3
popa
cli
xor
sub
enter
mov
push
sub
inc
xchg
loopne
aam
icebp
xlat
xor
pop
call
inc
xchg
add
in
pop
push
leave
pop
dec
addr16
push
loop
bswap
push
insb
and
hlt
xchg
or
loope
jecxz
movsl
xor
xchg
pop
sti
mov
mov
mov
lcall
frstor
cmp
pop
lret
jle
pusha
inc
call
loop
pop
int
mov
jl
push
push
jl
jbe
lods
lgs
and
dec
add
inc
dec
and
in
inc
jne
andb
cmpsl
adc
das
fnstsw
sbbb
mov
loope
sbb
cs
in
andl
and
cmp
outsl
gs
adc
leave
push
es
int
lods
add
js
mov
scas
lcall
leave
pop
aam
push
sub
mov
sub
repnz
cs
pop
or
jo
xchg
inc
nop
into
mov
cmp
mov
enter
xchg
inc
movsl
ljmp
cwtl
movsb
and
fiaddl
scas
sub
test
push
aas
popf
in
xchg
out
hlt
lea
push
xor
push
mov
pop
cwtl
inc
pushl
inc
clc
mov
leave
in
test
ror
fwait
sub
xor
ss
dec
add
sete
push
inc
sub
xor
mov
push
and
shll
and
movb
sti
loopne
mov
jbe
cmp
div
xor
sub
in
mov
pop
sbb
je
in
aas
cmp
add
cmp
and
lods
ljmp
aad
rcrl
pop
movsl
out
ret
cltd
loop
push
jno
inc
test
push
mov
add
out
enter
xchg
cltd
inc
cmpsl
loope
pusha
repz
aam
mov
xorb
xchg
mov
mov
mov
int
lods
pop
cld
mov
fldenv
es
mov
aaa
mov
pop
test
not
xlat
enter
bound
test
test
rolb
mov
dec
cmpsl
pop
dec
incl
push
adc
in
pop
jb
pop
adc
push
jbe
cmp
and
es
sub
das
xchg
loope
pop
xchg
push
out
or
outsb
adc
loop
jbe
rcrl
into
push
mov
jmp
enter
arpl
in
mov
jbe
loopne
pusha
pop
aad
fdivr
popf
sbb
mov
inc
jl
adc
mov
push
fidivrl
jno
addl
out
pop
cmp
clc
mov
jle
inc
dec
xlat
hlt
std
mov
insl
lea
jge
pop
test
call
mov
pop
mov
int
mov
popa
mov
jbe
or
mov
pop
and
sbbb
xor
xchg
adc
adc
inc
sarb
xor
pop
mov
iret
add
dec
lock
int
mov
es
mov
into
stos
inc
bound
mov
inc
popf
pop
cmp
mov
dec
inc
pop
mov
dec
xor
pop
pop
xor
cmp
je
lea
cltd
ss
jbe
inc
jne
mov
ja
sub
jle
movsl
call
cld
inc
lea
sub
pop
lahf
mov
jle
sar
popf
call
out
pop
ss
daa
inc
jns
push
pop
ds
roll
lret
xchg
push
and
outsl
pop
and
push
xor
push
pop
ss
xchg
xor
loopne
pop
adcl
mov
pop
mov
fxch
xchg
scas
addr16
ret
movnti
ja
loopne
movsl
add
sub
push
rcrb
loop
push
pop
push
insb
and
je
inc
inc
mov
jbe
cmpsl
shll
xchg
push
div
xor
and
daa
sbb
std
lods
mov
xchg
std
push
sbb
cmp
jmp
insb
addb
mov
xchg
es
mov
pushf
mov
pop
sbb
or
mov
push
xor
js
lods
or
and
test
add
pop
mov
add
lock
adc
dec
pushf
inc
pop
hlt
out
xchg
leave
fsubrs
jo
mov
jle
scas
push
int
sahf
out
pop
adc
adcl
outsl
mov
or
je
test
or
pop
adcl
mov
or
rcll
addb
mov
pop
push
mov
cmp
xchg
or
inc
in
sub
inc
ret
scas
mov
pop
sub
imul
mov
mov
jp
dec
ret
pop
mov
lea
cmp
in
iret
jmp
es
jg
inc
dec
and
mov
adc
outsl
dec
lea
adc
sbb
push
lods
sub
es
xchg
jecxz
imul
or
sbb
mov
push
popa
cli
mov
adc
and
pop
push
stos
sti
das
pusha
dec
mov
lods
add
les
ljmp
or
aad
into
pop
movsb
dec
mov
jbe
dec
movsl
aaa
dec
mov
testl
push
es
mov
andb
mov
add
fnstcw
push
stc
lods
int3
mov
fcmovnbe
cltd
jle
xlat
mov
inc
arpl
mov
pop
pop
into
rclb
pop
out
cmp
add
pop
xchg
mov
test
jno
xchg
inc
or
inc
xchg
std
imul
xorb
xchg
jg
push
fs
cs
xchg
mov
sbb
push
lahf
cmp
in
xlat
enter
mov
inc
mov
lcall
iret
test
jnp
icebp
cli
rcrl
or
add
fisttpl
sub
xor
pop
adc
lock
adc
hlt
cmp
mov
stos
int3
mov
enter
sbb
and
addr16
push
scas
pop
dec
cmpsb
int3
pop
outsb
pusha
push
pop
dec
mov
xchg
bound
mov
inc
mov
mov
mov
cmp
out
je
inc
es
mov
push
ficoml
xlat
mov
or
dec
lods
push
fcomps
cmp
popf
sub
pop
and
mov
jp
fimuls
adc
int3
fcompl
imul
hlt
lret
cmc
mov
xchg
call
aam
adc
bound
movsb
pop
push
pop
sti
mov
mov
mov
sbb
sbb
adc
imul
inc
sbb
push
add
out
sbb
xchg
or
pop
pop
fisubrl
pop
icebp
aam
mov
lock
js
and
push
outsl
inc
pop
fwait
loop
mov
mov
je
pop
bnd
insb
sub
cmovs
call
jecxz
sbb
popf
dec
lret
push
int
popl
push
lret
lahf
sub
out
shlb
pusha
jns
scas
adc
pop
into
xchg
pop
enter
or
pop
fisttps
lret
popa
or
lahf
sahf
test
push
loopne
ss
xchg
pop
push
push
out
movsl
mov
mov
into
jle
repnz
xchg
xchg
pop
out
push
aas
xchg
std
xor
sub
enter
adc
pusha
pop
xlat
in
std
jnp
sbb
rol
mov
sub
lods
frstpm(287
cmp
cs
sbb
pop
xlat
shrl
lret
xchg
mov
inc
pop
mov
xchg
sub
divl
imul
or
pop
push
enter
fldcw
repnz
scas
sbb
fidivrs
inc
xlat
pop
mov
es
test
test
pop
cmp
fmull
bound
outsb
lret
aad
push
mov
orl
xchg
jnp
mov
mov
add
rcrl
pusha
mov
sti
jnp
mov
cmp
push
sbb
movsl
ds
pusha
in
cmc
mov
or
ss
dec
arpl
dec
pusha
bound
xchg
sti
mov
pushf
test
pop
and
fdivl
pop
std
and
sbb
jp
scas
pop
xchg
sarb
pop
or
xor
adc
leave
pop
pushf
mov
aaa
fisttps
xchg
xor
pop
mov
add
lods
xchg
inc
lahf
mov
inc
jbe
sbb
cli
jg
adc
lods
mov
icebp
pop
inc
movsb
into
ret
jns
gs
jb,pn
imul
xchg
jb
push
mov
pop
adc
pop
cmpl
mov
pusha
fsubrs
inc
mov
adc
push
lock
adc
pop
lret
xchg
into
add
push
jg
insl
int
cmpsb
outsb
fnsave
push
pusha
cmp
dec
xor
push
jbe
lcall
jg
jp
in
xchg
sub
sbb
cltd
out
jnp
pop
and
sbb
xchg
pop
lret
rcl
push
cwtl
and
pop
pop
xlat
mov
pop
fmul
rorb
and
mov
jb
mov
outsl
xlat
and
addb
rcrl
and
imul
movsl
xchg
cmp
and
insl
lcall
mov
out
fs
mov
add
lods
movsb
idiv
push
scas
out
loopne
arpl
mov
sub
pusha
ss
lret
sbb
mov
adc
in
push
mov
sub
pushf
mov
fstps
add
and
pop
xchg
jle,pn
jnp
pop
pushf
dec
bound
add
mov
add
insb
mov
xchg
sbb
push
test
loopne
repz
pop
cmp
lret
les
les
jmp
test
ret
sub
loop
cmpsl
push
fld
mov
lret
mov
cmp
outsl
adc
pop
test
mov
lea
pop
pop
aaa
or
loopne
lock
and
jns
int3
mov
mov
inc
mov
mov
jb
xlat
scas
dec
mov
lds
xorl
test
and
fnstsw
daa
mov
aas
and
pop
ss
inc
bound
or
pop
mov
mov
add
rcrb
inc
imul
jg
pop
mov
rcll
scas
adc
sub
cmp
push
inc
mov
jae
pop
jno
ret
lahf
scas
outsb
clc
sub
dec
pop
cmp
cmpsl
unpcklps
rcr
push
lcall
lret
dec
lock
or
loope
test
lret
sarl
gs
leave
xor
jno
add
mov
mov
int
and
outsl
outsb
mov
push
push
inc
sub
rorl
fs
cs
lods
es
jbe
divb
aad
mov
and
cltd
into
pusha
dec
cmpb
jnp
lret
sub
in
xchg
xchg
xor
fs
notb
xchg
lods
mov
clc
fisubrs
cwtl
xor
cmp
inc
inc
pop
sbb
ljmp
lods
cmp
fcmovnb
js
dec
inc
arpl
jecxz
loop
test
test
add
testl
lods
pop
xchg
mov
adc
inc
cmp
jae
xchg
int
sbb
mov
mov
pop
mov
repz
pusha
adc
out
jo
mov
dec
mov
push
stos
jg
insl
cs
dec
test
dec
addr16
pop
adc
lret
fsubrl
ss
xchg
fimull
pop
out
push
lods
inc
iret
in
outsb
xchg
mov
dec
jnp
pop
das
je
jl
insb
jbe
cmp
aaa
out
dec
lret
setbe
jp
and
pop
adcb
cwtl
stos
ss
jbe
repnz
out
pop
stos
daa
and
mov
mov
fcmovb
rol
mov
ret
shl
ja
imul
lcall
movzbl
test
pop
test
jge
mov
cmp
cmp
rcl
punpckldq
xlat
movsl
shlb
inc
dec
dec
mov
push
or
push
cmpsl
mov
and
and
out
pop
ror
ljmp
push
cmp
sbb
pop
xor
pop
xchg
sub
sbb
mov
pop
push
push
sub
sub
xor
mov
or
push
aad
mov
pop
repnz
adc
or
leave
xor
into
lahf
adc
dec
divb
pop
incb
add
cmp
push
inc
fwait
dec
mov
pop
outsb
pop
rdpmc
sahf
rcrb
pop
sbb
in
jnp
repnz
loope
fs
in
push
xor
push
sbb
std
sub
mov
and
jnp
loop
jno
dec
and
ljmp
stc
loope
and
or
ljmp
mov
div
aam
mov
inc
dec
std
cld
add
in
pop
jle
add
xor
ficompl
cmp
adc
jns
xchg
mov
dec
repnz
in
and
out
mov
clc
adc
rcll
les
lret
mov
sub
xchg
lret
mov
cmpb
popf
loopne
js
or
daa
push
dec
enter
in
xor
xor
arpl
cmp
cli
movaps
test
sarb
push
fisttps
negb
rcll
sub
pop
call
scas
lcall
adc
fdivl
push
lods
adc
sbb
mov
mov
cmc
shr
in
imul
jmp
fcmovnb
movsl
ret
push
cmp
inc
and
pop
push
jp
mov
pop
leave
mov
int
ss
sbb
jp
lea
pop
and
fisubrl
into
pop
pop
sti
orl
jp
cli
scas
ss
jg
mov
inc
insl
adc
xchg
mov
int
test
dec
sbb
sarb
lds
mov
daa
xchg
mov
bnd
inc
insl
mov
or
inc
mov
mov
lods
sub
orl
aas
mov
mov
pusha
push
sub
ja
xchg
mov
dec
push
ret
inc
push
jle
les
push
mov
jle
or
addb
daa
push
aad
dec
jo
es
xor
cmp
pop
jecxz
fnsave
or
sub
pop
mov
or
shrl
fistpll
lcall
xchg
leave
xchg
xor
jecxz
mov
addl
xchg
jns
test
cmp
add
mov
in
xchg
dec
sub
and
dec
cmp
push
insb
xchg
lods
rcrb
mov
cmc
enter
sahf
clc
scas
sti
xchg
ficomps
jb
add
sarb
lods
in
das
dec
pop
loop
cmp
jbe,pt
cs
mulb
adc
cld
sarb
insl
push
mov
mov
lret
in
rcll
mov
mov
cmp
jg
iret
or
dec
sahf
mov
adc
mov
sarl
or
jle
outsl
mov
mov
xor
clc
jae
cltd
pop
push
inc
mov
mov
rorl
fdivs
sub
lahf
pop
les
jp
push
in
popf
loop
pop
and
push
cmpsb
push
js
sbb
jnp
cltd
in
shll
push
jmp
outsb
mov
les
repnz
pop
int
aas
ret
xchg
push
jnp
nop
mov
mov
fadd
cmpxchg
int
or
adc
mov
pop
and
daa
in
or
lea
push
jns
lret
dec
test
movsl
pop
push
daa
sahf
cmc
xchg
and
cmpsl
mov
jb
jns
cmp
pop
arpl
sahf
shr
nop
jl
mov
jecxz
out
jle
int
sub
lcall
in
rcrl
pop
pop
pop
decl
mov
lret
sub
int
scas
or
les
cmp
pop
mov
lds
int3
mov
fcomps
movsb
out
mov
cwtl
enter
push
jb
pop
inc
int3
ret
subl
push
dec
push
mov
icebp
jne
xchg
out
rcrl
adc
hlt
mov
pop
test
mov
dec
test
movsl
xor
mov
fisttpl
jle
pop
test
adc
sbb
rcrl
xorb
test
bound
mov
push
xor
jle
stos
arpl
jl
cmp
pop
push
mov
inc
xor
push
push
cbtw
or
or
jecxz
mov
add
dec
push
es
wrmsr
outsb
pop
sbb
lret
xchg
test
pop
xchg
jns
movsb
sub
push
bound
pop
sbb
dec
mov
lahf
xor
outsl
and
dec
in
adc
pop
push
push
cs
dec
pushf
rorb
push
mov
pop
pop
or
jbe
test
dec
aas
test
sub
pop
cmpb
repnz
bnd
push
ret
mov
adc
popa
mov
mov
jbe
xor
iret
jns
mov
pop
xor
and
sub
cmp
pop
or
into
jle
sub
sub
inc
and
mov
nop
fisubl
xor
add
sbb
popf
sahf
jecxz
pop
cmpsb
fldenv
push
add
xchg
cmp
loop
cmp
pushf
or
and
cmp
das
cs
gs
pusha
dec
andl
lods
decl
popa
xchg
out
in
adc
mov
mov
nop
ret
add
ss
insb
cmpsb
bound
push
lcall
out
stos
test
test
mov
xor
xchg
sub
fisubs
test
and
fsub
fwait
ljmp
insl
xchg
jg
outsb
push
sub
scas
test
movsb
or
outsb
inc
in
and
push
bound
mov
push
call
andl
andb
lods
lcall
loope
mov
shrl
sarl
sbb
pusha
push
in
pop
push
and
daa
pop
pop
pusha
sub
lahf
push
jg
adc
cmpsb
fcmovb
mov
stos
jne
add
dec
iret
sub
and
lods
loope
fildll
jle
shrb
and
dec
and
jle
leave
int3
cmp
mov
roll
or
rcrl
cmpsb
and
insl
or
fwait
ss
imul
fldenv
push
add
in
pusha
xchg
ss
or
mov
pop
mov
repz
pop
and
out
jge
add
lcall
xchg
enter
mov
xchg
fstps
lret
xor
sbb
scas
pop
lods
adc
mov
pop
push
out
mov
cmpsb
xor
shrb
jbe,pn
ret
push
mov
mov
xchg
in
xor
es
lret
cmp
repnz
in
and
cmp
cmp
mov
enter
movsb
jp
sub
popf
dec
shrl
cld
push
lea
imul
loop
sahf
outsb
ja
jp
mov
test
incl
stos
cmp
sbb
faddl
cmpb
bound
mov
pop
dec
int
inc
and
push
pop
pop
mov
lea
add
pop
jbe
insb
mov
pop
sub
les
inc
sub
sbb
das
incl
or
and
rorl
mov
test
push
dec
mov
push
les
mov
inc
sahf
aas
dec
shl
cmpsl
mov
pusha
mov
pop
out
adc
popf
fdivs
pop
jp
add
inc
decb
arpl
outsb
int
dec
mov
repz
cmp
push
ret
sbb
mov
xchg
das
pop
pop
adc
push
daa
jbe
push
arpl
int3
pop
add
pop
mov
enter
pop
ja
stc
dec
xchg
les
stos
push
or
call
scas
jbe
movsl
std
cwtl
add
sub
mov
xchg
subb
pop
mov
sbb
push
movsb
int3
pop
or
inc
das
jmp
sbb
outsb
add
mov
adc
pop
fbstp
and
jg
stos
sub
adc
push
mov
pop
out
in
xchg
xor
xor
pusha
insb
xchg
sub
das
iret
pop
xor
push
scas
lcall
xchg
xorl
inc
mov
call
lahf
or
sbb
mov
shll
push
in
dec
mov
mov
and
pop
xchg
bound
pop
testb
jp
xchg
xchg
mov
xlat
and
lock
jns
add
scas
xor
or
daa
rcrb
mov
add
ljmp
bnd
pop
mov
inc
outsl
popf
mov
mov
dec
or
es
mov
hlt
add
int
lret
xorb
pop
mov
mov
add
rcrb
popa
les
lds
mov
lret
sti
and
adc
cmp
pop
inc
mov
sub
push
gs
cbtw
pop
mov
adc
insl
pop
jle
repnz
inc
sub
sbb
insb
cmp
fsubrs
pop
mov
adc
lea
bound
xor
es
or
imul
test
push
or
adc
mov
popa
loope
sahf
or
mov
mov
xchg
adcb
movsb
dec
sarb
pop
push
icebp
mov
mov
push
aas
mov
or
pop
leave
lds
push
mov
mov
push
enter
jns
aaa
test
in
addb
inc
dec
inc
jmp
fiadds
mov
call
mov
jae
pop
inc
lahf
or
jnp
push
mov
mov
push
and
jg
subb
pushf
outsb
je
and
sub
je
out
ficomps
sub
in
stc
insl
mov
cmp
lea
bound
xor
fisttps
mov
jo
sub
outsb
pop
xor
and
mov
test
ja
fimull
loop
imul
add
mov
in
push
dec
call
aaa
xor
cmp
mov
test
les
lea
or
in
fwait
negl
pop
push
add
mov
adc
push
mov
xor
call
lods
cmpsb
pop
pop
and
or
lcall
notl
pop
mulb
ljmp
call
scas
xlat
lcall
push
iret
inc
pop
cltd
xchg
sub
inc
lret
pop
mov
bound
ljmp
inc
sub
popa
in
adc
aad
arpl
inc
dec
daa
rcr
push
aad
inc
inc
sub
ret
outsb
xchg
fwait
pop
push
pusha
in
push
mov
sub
jp
mov
sbb
sbb
xchg
aaa
sti
das
filds
adc
inc
adc
lods
cwtl
and
mov
mov
xlat
or
pop
mov
jge
mov
test
lret
cmp
and
sub
inc
lea
sbb
lock
aad
push
jg
repnz
xchg
xor
test
inc
push
pop
in
outsl
adc
test
cwtl
xor
xor
iret
inc
mov
mov
inc
popl
enter
fmul
inc
gs
sahf
stos
out
repnz
fisttpll
jno
jle
mov
lcall
lock
xor
std
pusha
sbbl
in
int3
push
neg
and
push
inc
inc
pop
into
lods
jl
pushf
orb
mov
cmp
jmp
cld
mov
cld
xlat
inc
aaa
pop
lock
scas
sti
pop
popf
add
jecxz
outsl
ret
mov
adc
imul
decl
popf
or
repnz
js
push
sub
imulb
rclb
mov
addr16
sbb
mov
mov
sub
bound
adcl
mov
push
in
cwtl
fdivrl
jae
dec
lret
cmp
and
push
pop
mov
pop
movsl
lret
dec
mov
das
pop
mov
scas
pop
lcall
xlat
lds
notb
std
sub
or
outsl
imul
pop
pushf
into
sub
mov
xchg
mov
xor
push
jne
xchg
mov
jne
jge
pop
or
or
test
push
and
loope
mov
adc
xor
sub
leave
lret
stos
lods
sbb
bound
nop
inc
lcall
leave
fcmovnbe
stos
rcrb
xchg
int3
and
fcmovb
xchg
fcoms
or
dec
push
dec
stos
in
pop
pop
pop
xchg
xchg
ret
pop
dec
mov
pop
or
inc
pop
pop
add
or
negl
je
push
inc
lods
or
stos
leave
pop
ret
push
rol
cmp
inc
adc
repnz
cmpsb
push
mov
inc
movsl
cmp
pop
mov
push
mov
pop
cmpsl
mov
test
enter
dec
scas
add
cmc
outsl
xchg
in
in
push
packsswb
xor
push
mov
arpl
mov
pop
xchg
push
mov
imul
sbb
cs
add
push
adc
pop
outsb
pop
jns
push
push
add
pop
sbb
sub
xor
inc
mov
jmp
lods
aad
xchg
cmp
lock
sub
dec
pop
pop
lret
ret
mov
leave
push
stos
sarl
nop
mov
fcoms
cmp
clc
pop
push
sub
in
in
or
repnz
out
xor
mov
je
or
and
push
test
mov
test
inc
dec
aam
mov
mov
cmp
ds
arpl
fdivrl
cmpl
push
insb
jecxz
xor
mov
pop
mov
jmp
inc
divps
test
sbb
popl
cmp
mov
jmp
es
aas
mov
imul
mov
lcall
cmp
xchg
sar
ja
pop
lret
mov
add
add
pop
mov
xchg
les
testb
and
lds
out
sbbl
pop
mov
cmp
pop
leave
jbe
into
lds
xchg
ljmp
sbb
mov
sbb
shlb
fistps
loopne
push
jle
repnz
pop
dec
jno
jo
and
and
sti
pop
add
or
pop
adc
insb
sub
sub
jno
mov
add
and
push
mov
rcrb
cwtl
bound
rclb
mov
mov
add
cs
jge
arpl
xchg
inc
fadd
pop
pusha
stos
movsl
and
pop
xchg
call
add
pop
lock
push
jmp
adc
sub
pop
cmpsl
cmpsb
mov
jecxz
pop
and
jmp
xchg
imull
mov
int3
and
xchg
out
ffreep
mov
sbb
xchg
in
push
mov
xcrypt-ecb
cmpsl
int
mov
and
push
cmpxchg
pop
pop
push
arpl
vpshld
ja
pop
sbb
outsb
adc
lcall
std
sub
lods
adc
and
mov
shrb
sub
or
lods
jp
push
out
inc
sub
mov
out
mov
mov
sub
dec
subl
push
ud0
xor
sarb
pop
xor
mov
mov
cmp
fisttpl
pop
pop
mov
xlat
lods
cwtl
dec
rcrb
lret
sbb
xchg
inc
mov
or
bound
sti
lock
clc
xor
mov
adc
sub
shll
mov
or
jl
aam
xchg
outsb
sbb
inc
mov
fcomip
out
outsb
jnp
loope
and
sahf
das
pop
adc
cltd
adcl
mov
or
out
inc
sub
pop
mov
imul
orl
pop
push
sbb
in
inc
les
cmpsl
push
xor
mov
sub
pop
stos
xchg
xor
int3
and
inc
inc
pop
xchg
mov
jge
lret
xor
repnz
enter
xchg
jle
push
jo
ja
addw
pushf
es
loope
and
xchg
pop
jns
cmp
sub
pop
sbb
jmp
sbb
pop
test
int3
shrl
mov
sbb
add
call
mov
pop
sbb
adc
test
xchg
imulb
ret
lock
and
dec
pop
cmp
repnz
inc
mov
ja
mov
sub
out
mov
dec
add
lock
addr16
mov
cmp
cld
pop
jae
jp
and
imul
mov
call
enter
fsubrs
ss
pop
and
inc
test
out
fwait
in
imul
and
jnp
mov
cli
test
test
imul
add
jbe
stc
sub
push
pushf
jle
mov
cmpsl
cs
jl
repnz
cmp
cmp
inc
jp
shlb
loopne
push
jbe
lahf
leave
mov
cs
loop
movsl
lds
loop
cmp
sbb
mov
dec
xchg
stos
push
xlat
cmc
int
mov
insl
scas
frstor
xorb
mov
push
jne
std
jbe
bound
jle
push
es
ss
test
sub
lret
mov
push
push
cmc
pop
in
jne
je
add
insl
cli
std
in
jp
jns
push
test
xchg
jmp
xchg
jge
imul
pop
mov
movsl
popf
mov
adc
xor
movsb
pop
pushf
mov
test
and
sbb
sub
sti
xchg
mov
cmpl
and
xor
or
lcall
mov
and
xor
or
cltd
xchg
pop
test
mov
and
xor
or
pop
cwtl
nop
test
mov
sbbb
sub
cmp
out
pop
pop
call
scas
pop
ja
xchg
pop
pop
aaa
das
imul
push
xchg
mov
cmpsb
sahf
mov
lahf
sbb
pop
pop
imull
add
cmpsl
mov
es
in
lea
bound
repz
andb
std
insb
and
add
ficoms
jge
ja
adc
jns
ret
scas
inc
mov
lahf
icebp
in
repnz
sbb
shll
int
pop
into
dec
push
sahf
add
jo
add
sub
dec
pop
pop
mov
xor
dec
inc
mov
pop
stos
mov
cmp
sub
pop
pop
sbb
cli
cmpsb
repnz
lahf
pop
cmp
mov
pop
jo
or
fs
pop
fisubl
dec
jbe
push
mov
shrb
jg
push
pop
or
mov
or
out
and
lret
push
sahf
mov
push
sub
fidivrl
or
pop
lea
jbe
and
fstpl
push
mov
xor
sbb
lods
sti
data16
add
xchg
sub
cld
dec
push
lret
pop
inc
in
xor
sbb
adc
imul
sub
andb
decl
add
jg
pop
mov
gs
pop
lret
or
pusha
mov
pop
arpl
sbb
enter
xchg
pop
sub
cmp
mov
xchg
push
pop
movb
lea
lods
mov
sub
xchg
das
pop
repnz
fwait
mov
xchg
push
sarl
loop
cli
iret
mov
pop
dec
mov
fmulp
and
outsb
fsubrl
rcll
hlt
xchg
jge
push
add
es
idiv
in
fimuls
stc
out
aaa
pop
sub
orb
push
decb
scas
sub
inc
mov
adc
inc
pop
arpl
test
pop
addr16
cmp
jecxz
out
pop
pop
leave
dec
add
push
lret
mov
js
xor
pop
mov
aas
push
pushf
add
pop
lds
adc
and
push
enter
stc
pusha
setg
sahf
xchg
test
pop
lods
add
jecxz
pop
or
shll
flds
pop
lret
outsb
adc
jbe
jle
jecxz
push
in
pushl
int
jnp
xor
dec
cmp
push
and
dec
mov
mov
mov
sbb
pop
and
jmp
out
stos
cwtl
leave
es
pop
mov
fs
cmpsl
inc
xor
jp
ljmp
push
loope
cmpl
shll
xchg
fs
mov
mov
in
ficompl
pop
call
push
jmp
addr16
ret
xor
sti
push
in
push
pop
iret
int
scas
inc
pop
mov
aaa
push
add
xchg
pop
jbe
push
sbb
rolb
pop
fcmovnu
pop
rcr
cmp
in
outsl
pop
sahf
call
in
and
push
mov
in
sub
pop
aaa
and
xchg
push
call
into
rcrl
pop
bound
out
rol
lcall
bound
mov
adc
fbstp
les
jp
roll
clc
cmpsl
pop
jb
push
adc
pop
ret
pop
stos
add
daa
movsl
pop
xor
and
adc
pop
repnz
xchg
outsl
pop
iret
sub
dec
aad
test
pop
rcll
call
and
stc
enter
stos
and
pop
xchg
or
daa
or
enter
inc
into
shll
cltd
negb
aam
cli
pop
arpl
adc
mov
ret
jmp
xchg
nop
adc
addr16
dec
fxch
jae,pt
popf
jg
mov
mov
out
xor
dec
pop
mov
lret
pop
push
jmp
mov
sub
push
in
outsb
pushf
cmpsl
mov
dec
pop
and
pop
scas
lods
lds
fld
movsl
pop
xchg
pop
mov
pop
pop
ja
or
shr
stc
and
xchg
sub
and
loop
and
fs
jne
xchg
cmp
in
ds
out
iret
pushf
outsb
insb
pop
cmp
pop
jmp
in
cli
push
lea
pusha
jmp
out
push
xchg
call
pop
js,pt
gs
mov
dec
into
dec
pop
addr16
fsts
pop
add
fisubrs
inc
std
dec
out
dec
pop
push
aam
js
int
popf
gs
ret
popf
lods
das
int
dec
leave
cli
pushf
pushf
lcall
mull
sbb
mov
mov
mov
xchg
lock
out
ss
mov
mov
ja
inc
pop
leave
xor
dec
jp
sahf
test
push
pop
jecxz
scas
mov
inc
aaa
or
or
std
lock
pop
cwtl
mov
push
andl
test
mov
xor
sti
add
jmp
loope
cmpb
ljmp
das
or
cli
pop
mov
sub
sub
or
dec
subb
inc
or
sub
addr16
pop
inc
ret
push
jae
ljmp
jecxz
xchg
push
stos
pop
les
and
adc
mov
rorb
or
mov
push
mov
jbe
movsl
cmp
incb
jbe
subl
inc
mul
sub
pop
shll
daa
sub
fcomip
cmpl
pop
or
jnp
inc
notl
rclb
and
jle
ret
das
addl
bound
jnp
fs
outsb
bound
outsl
xchg
daa
nop
pop
push
dec
scas
fs
xor
mov
adc
lods
pushf
stos
cld
dec
push
add
pop
dec
xor
arpl
mov
fcoms
loop
push
jae
jo
mov
dec
pop
ja
daa
xor
adc
or
pop
adc
push
aam
push
imul
pop
fucom
cmpsb
mov
push
fldenv
pop
mov
push
outsb
mov
sbb
push
pop
xchg
mov
dec
cmp
mov
mov
mov
jg
pop
shll
dec
mov
jno
sub
xchg
notb
out
std
xor
sub
push
sub
pop
fcoml
ret
pop
mov
add
lcall
scas
stos
iret
cwtl
dec
dec
pop
pop
push
adc
leave
cltd
jecxz
mov
xchg
adc
and
xchg
mov
fisttps
pusha
pop
cmp
lods
xchg
pop
incl
jg
pop
push
mov
mov
jmp
divb
lret
fs
shll
push
sub
lods
jecxz
bound
pop
scas
xchg
popf
outsl
out
dec
out
js
in
test
andl
push
push
add
shlb
andl
addr16
pop
sbb
mov
stos
pop
add
mov
cmp
js
bound
mov
les
and
lods
dec
xor
jbe
int
cmpsb
xorb
dec
ds
test
in
js
push
pop
sbbl
cmp
int3
lods
lahf
adcb
xchg
push
mov
mov
mov
pop
pop
mov
xchg
and
vcmpsd
xor
sub
das
sbb
mov
cmpsl
shl
inc
idiv
pop
ljmp
inc
lcall
mov
loopne
cs
int
or
out
xchg
cld
pushf
dec
mov
xor
push
movsb
pop
push
pop
push
leave
popf
aas
pop
mov
push
addb
push
or
gs
mov
loopne
ret
jbe
test
jbe
add
test
xor
int3
lret
or
outsb
jno
sub
add
int3
cld
scas
rcrb
test
lahf
mov
pop
enter
sbb
rcrb
sti
push
mov
js
ljmp
dec
add
jmp
mov
repnz
mov
xchg
rcrb
mov
pop
mov
lea
add
mov
xor
imulb
sti
sahf
loope
ss
test
sub
rcr
sbb
jl
negl
pusha
and
es
test
sub
es
pop
pop
lcall
pop
daa
hlt
cmp
aas
loopne
leave
gs
adc
push
xor
jns
add
repnz
pop
gs
push
or
icebp
xchg
sub
cltd
pop
aaa
mov
fwait
xchg
out
imul
pop
push
dec
hlt
jmp
cwtl
call
mov
pop
push
bound
pop
test
jmp
inc
aad
fsub
push
mov
aaa
scas
or
cs
std
pop
mov
sbb
insb
inc
ja
adc
pop
jae
addr16
mov
xor
popf
cmp
jb
cmp
push
ficoml
bound
or
mov
xor
pop
add
jmp
pop
pop
push
push
test
mov
sbb
scas
push
sbb
mov
and
jbe
mov
push
xchg
mov
mov
and
jl,pt
lret
mov
mov
bound
mov
lahf
outsb
push
es
data16
xchg
pop
sbb
inc
dec
ss
mov
lcall
mov
jle
push
outsb
cs
and
xchg
add
cmc
loope
int
cli
cmp
sub
jge
mov
test
lock
jnp
cmp
and
mov
in
mov
fnstcw
les
jnp
sbb
xchg
insb
xchg
and
loope
aas
jae
stc
repz
mov
inc
insl
jmp
lea
sub
cmp
and
push
loope
lock
in
jnp
mov
xchg
insb
hlt
and
add
pop
sbb
fwait
jne
lret
idivl
jl
mov
jne
jnp
adc
mov
jnp
sbb
xchg
insb
xor
inc
add
lahf
aas
cli
sbb
cltd
jne
mov
inc
insl
sub
cmp
jl
popf
sub
cmp
pop
lock
cmp
cmp
sahf
lock
lea
sub
cmp
sub
mov
xchg
mov
in
ljmp
mov
inc
test
adc
add
jne
jnp
mov
inc
insl
adc
cmp
cmp
fidivrs
sbb
adc
aam
jl
mov
push
xor
dec
insl
push
in
stc
sbb
push
sbb
sahf
aas
jne
stc
jp
pushf
loope
cltd
inc
insl
dec
jne
mov
mov
jnp
cmp
mov
push
cmp
mov
in
subb
insl
jle
push
fstpl
pop
jge
les
jnp
sub
mov
jae
jg
rcl
stc
ret
mov
inc
insl
imul
jge
jnp
cmp
sub
mov
sbb
jnp
std
push
mov
cmp
adc
mov
mov
inc
sbb
cwtl
mov
in
cld
push
loope
lock
insl
fildll
and
les
jnp
sbb
xchg
insb
mulb
lcall
lock
aaa
jnp
sbb
xchg
insb
pop
and
and
mov
insb
ja
cli
add
aas
xlat
insb
outsb
and
lahf
pop
rcrl
jl
sbb
xchg
mov
fwait
cld
and
pop
rcrb
in
cmp
cmp
sbb
ja
sbb
cmc
mov
call
cltd
push
sbb
faddl
cmpb
sbb
cmp
in
rclb
lock
jge
les
jnp
sub
mov
cmc
ret
fldl
sbb
aam
sbb
pop
xor
sbb
sub
cmp
fnstenv
loope
lock
jge
les
jnp
sbb
xchg
insb
sbb
sub
xchg
sbb
nop
xor
mov
int
mov
test
bound
pop
test
icebp
add
jne
jnp
inc
call
loope
lock
jnp
sbb
xchg
insb
xlat
and
loope
aas
cmp
stc
inc
jne
mov
inc
insl
sub
xor
inc
mov
inc
insl
or
sar
idivl
icebp
icebp
inc
rcrl
and
mov
cmc
shlb
test
pop
and
add
add
xchg
insb
xchg
push
icebp
sbb
lcall
mov
and
pop
les
jnp
inc
jl
popf
test
pusha
jne
mov
inc
insl
test
fsubrl
jnp
cmp
and
push
loope
lock
jge
les
jnp
sbb
xchg
insb
fldenv
mov
sbb
xorb
cmp
lds
sbb
sub
cmp
mov
adc
std
roll
sbb
sarb
sub
sbb
outsb
repz
mov
and
push
push
loope
lock
les
jnp
mov
mov
andl
adc
sbb
cmc
sahf
xchg
int
mov
mov
dec
in
ficoms
lcall
fst
lock
jge
les
jnp
sub
loope
insb
repz
loope
aas
ficompl
stc
std
xor
inc
insl
iret
test
add
cmp
and
mov
in
inc
and
jnp
cmp
fcomip
xor
test
idivl
lea
add
out
adc
adc
sub
cmp
lret
loope
cltd
mov
cmc
add
in
jg
loope
lock
ret
cli
jnp
sbb
xchg
insb
mov
aas
lcall
push
inc
insl
pop
test
mov
sub
cmp
and
lahf
in
rclb
lock
les
jnp
sbb
xchg
insb
jns
jno
xchg
negl
inc
insl
scas
test
xchg
lea
test
movl
and
mov
in
shrl
push
sbb
xchg
insb
stc
and
add
cmp
loope
mov
mov
inc
insl
dec
test
aad
jl
mov
cmp
fdivs
loope
lock
jge
les
jnp
sbb
xchg
insb
jns
ja
add
clc
sbb
sbb
frstor
outsl
jne
mov
inc
insl
lods
test
xchg
jnp
cmp
and
mov
cmc
shll
jl
mov
pop
sbb
xchg
insb
mov
lock
lea
sbb
push
push
repz
cmc
rcll
in
jl
add
lock
test
pop
jge
les
jnp
sub
sbb
insb
js
aaa
loope
aas
js
loope
cmp
mov
inc
insl
das
test
mov
sub
cmp
and
mov
in
pop
push
loope
lock
jge
les
jnp
sbb
xchg
insb
mull
and
and
pop
aas
xchg
sbb
into
xor
sbbb
lea
sub
pop
cmp
les
sbb
fidivrs
inc
aas
jae
loope
cmc
aam
push
loope
ja
idivb
les
jnp
sub
sbb
insb
pop
and
loope
pop
cltd
sbb
sbb
in
sarb
rcrb
push
loopne
jnp
cmp
and
mov
in
and
repz
inc
les
jnp
sbb
xchg
insb
shll
loope,pt
aas
xchg
sbb
mov
sbb
and
add
cmpsb
loope
aas
adc
stc
jne,pn
mov
inc
insl
sahf
test
lock
jl
inc
sub
mov
bound
loope
aas
push
rcrb
scas
mov
es
int
ss
in
loop
loope
lock
jge
les
jnp
sbb
xchg
jne
outsb
jl
jl
test
push
sbb
dec
mov
jl
jl
shrl
stc
dec
or
loope
add
mov
inc
mov
aam
jle
pop
mov
ja
jle
les
jnp
sbb
xchg
insb
jne
out
stc
fwait
pop
loope
xor
les
jnp
sbb
xchg
insb
push
and
sbb
xchg
mov
inc
insl
outsb
test
in
sbb
shll
sahf
cltd
cmp
outsl
fdiv
hlt
mov
int
push
ret
sbbb
insb
xchg
and
loope
sbb
ret
lahf
and
and
adc
repnz
jge
in
jbe
lods
cmc
cmp
insl
arpl
inc
xor
xor
repz
divl
ss
cmp
aas
xchg
cmc
mov
adc
sbb
cs
sub
jnp
cmp
out
cs
xor
pop
mov
mov
sbb
jnp
rcl
out
jge
les
cmp
aad
inc
pop
xchg
insb
ss
mov
jl
ret
fdivrs
loopne
mov
jl
cmp
jnp
cmp
and
fucomp
mov
loope
test
sbb
jae
stc
cmc
xor
inc
insl
pop
test
lock
push
sbb
fs
fbstp
jl
jl
mov
sbb
mov
in
cmpb
adc
ret
inc
cs
mov
cmp
cmp
fstpl
imul
sbb
sbb
pop
cmp
inc
mov
sti
xor
test
sbb
pop
mov
sub
add
jb
adcl
xor
pop
jns
out
push
xor
jno
pop
pop
push
pushf
sahf
sti
dec
stc
sbb
sahf
or
int
inc
jl
pop
outsb
xchg
jp
ds
mov
imul
int
loop
inc
in
add
jg
sbb
mov
push
jbe
lea
adc
in
popf
mov
sbb
and
mov
add
mov
roll
insb
push
popa
mov
pop
shlb
sub
lcall
lcall
mov
jbe
dec
mov
jl
mov
pop
fwait
and
sarb
pushf
insl
fmulp
jle
sbb
stc
popf
fstp
mov
and
pop
mov
jle
jl
call
loop
mov
mov
fnstenv
pusha
inc
mov
ss
pop
dec
insl
popa
add
mov
jo
cmp
loope
cmpl
cmp
movsl
and
out
in
insl
sub
movsl
and
adc
ss
inc
mov
jbe
nop
clc
divb
pusha
cwtl
clc
ja
popa
add
insl
bound
xchg
lock
ss
ds
jno
jns
pushf
fnstenv
fisubs
add
popf
fildll
and
jns
push
mov
ss
cmc
lahf
pop
lock
sbb
cmc
fldl
roll
pop
add
pop
cmp
or
ret
xorb
mov
sbb
and
xor
pop
sbb
fwait
push
bound
mov
cmp
and
fidivrs
mov
ss
sahf
jge
cmp
add
cmp
jle
sarb
ss
stc
ss
insl
ds
loope
and
mov
clc
mov
or
pop
cmp
mov
cmc
jge
lahf
cmp
jl
mov
inc
fstpl
and
inc
add
ss
or
std
mov
jl
sarb
loopne
and
push
popf
lock
ss
or
push
pop
and
cmc
mov
mov
in
cmp
jg
ss
jl
sub
push
sbb
popa
insl
fcoml
mov
pusha
mov
inc
stc
jp
imul
jo
sahf
sub
shll
sti
in
sarl
cmp
shrb
add
and
cmc
cmp
jl
jl
and
ljmp
ss
sbb
cltd
mov
inc
adc
cmpl
jg
ss
cmp
sti
stc
shrl
cmp
rcrb
add
jl
mov
insl
mov
and
jmp
mov
inc
jl
mov
inc
cmc
std
shrb
sbbl
ret
pop
ds
jl
sarl
cmc
cmp
sarb
cmp
add
pop
jge
jl
add
mov
inc
jge
jl
mov
aaa
xchg
mov
push
sbb
mov
pop
cmp
mov
mov
sub
and
es
jns
fdivrp
jbe
les
push
jg
pop
fnstsw
pusha
jp
outsb
mov
frstor
rcrl
pop
jecxz
mov
sbb
fwait
adc
and
dec
push
pop
adc
and
sbb
ret
orb
in
push
fisttpl
and
fsts
in
and
es
fisubs
xchg
mov
mov
in
rol
cmp
mov
cmp
outsl
pop
in
sbb
movsb
rorb
aad
mov
lret
sbb
fisubrl
pmaddwd
lea
sub
repz
add
cmpsb
push
addb
lahf
mov
dec
mov
dec
lds
sub
fsubp
andb
ja
loop
xchg
push
jmp
sbb
sbb
pushf
dec
xorb
push
and
addr16
adc
dec
add
ret
sbb
out
jmp
and
push
aas
pop
movsl
jns
cmc
jle
fstps
cmp
and
lahf
cmp
aad
or
sbb
jbe
repz
and
orl
pusha
js
push
mov
cmp
adc
bound
xchg
xchg
adcl
lock
lds
lods
and
lahf
jnp
and
cmp
sbb
sbb
repz
dec
fstpl
fmull
ss
movsb
or
jmp
scas
loop
and
jmp
push
sbb
mov
enter
fdivrl
shll
pusha
lret
sub
pop
dec
pop
loop
out
popa
pop
xchg
add
stc
xlat
pop
callw
push
xor
cwtl
inc
sub
lea
ljmp
mov
dec
pop
pop
in
push
test
mov
test
sbb
adc
pop
cltd
pushf
and
xor
pop
pop
jg
pop
outsb
push
pop
sbb
orl
jmp
and
xchg
add
in
mov
mov
rcll
popa
rcrl
and
popa
unpcklps
mov
inc
sbb
xchg
mov
push
dec
adc
sub
or
mov
inc
sbb
bound
insb
sbb
jmp
in
bts
not
jo
fists
xchg
jp
or
jg
mov
ds
outsb
mov
jbe
pop
test
push
and
aad
in
lea
les
nop
test
je
mov
pop
sahf
mov
sahf
sbb
in
jns
cs
hlt
lret
and
out
and
mov
mov
out
cmc
mov
test
inc
ror
adc
dec
das
and
loop
clc
pop
add
loop
mov
pop
insl
jae
pop
mov
inc
cs
shll
bound
sbb
push
push
insl
mov
push
loop
mov
jne
rcll
mov
sti
repz
popf
in
fistl
sbb
lods
jnp
int
lret
sbb
or
repz
fsubl
inc
mov
mov
pop
scas
sub
and
sub
mov
lahf
loope
push
adc
or
imul
jbe
pop
aaa
jecxz
js
pop
scas
std
stc
xchg
cmp
lea
in
sbb
adc
adc
fwait
xor
mov
in
int3
test
xor
enter
push
insb
pop
pop
mov
add
sbb
jl
insl
add
loopne
popa
or
lahf
fisubs
add
aad
pop
pop
push
mov
loope
pushf
fsubl
popf
dec
or
pop
sub
popa
insl
aas
mov
in
int
fdivrl
pop
movsb
mov
pop
or
mov
cmc
xchg
ret
data16
adc
sbb
mov
inc
ss
dec
jle
xchg
inc
cs
add
add
repz
icebp
aam
shll
icebp
ss
popf
aas
mov
dec
negl
dec
cli
adc
insb
rolb
filds
shr
xchg
pop
rorl
sbbb
jg
dec
add
cmpb
cmpsl
mov
add
inc
pop
pop
push
std
push
xor
pop
cmp
repz
scas
and
jmp
mov
jge
inc
ss
shl
std
jg
std
mov
inc
inc
jnp
pusha
jecxz
jle
popf
adc
sbb
pop
in
lods
cmc
jae
or
in
std
mov
jno
les
sbb
jmp
pop
enter
rcrl
xorb
mov
repz
jo
sti
stc
lret
mov
push
lcall
cld
adc
push
jge
test
scas
int
stos
add
add
mov
mov
mov
cld
mov
and
insb
dec
sbb
xacquire
cmpsl
jle
testl
les
inc
cmp
xchg
dec
repz
adc
pop
movsl
sbb
inc
cmp
jno
cmc
clc
dec
shlb
jo
fucomp
in
push
add
or
push
add
jmp
xor
jbe
aad
popa
push
jo
daa
add
loopne
pop
xor
adc
jl
xor
lahf
xchg
mov
test
out
push
mov
in
jne
adc
push
std
and
popf
es
cmp
jmp
add
pusha
sub
fiadds
sbbl
inc
push
das
repz
fsub
in
add
test
pop
jno
enter
xchg
insl
outsb
lret
jns
xchg
cmp
bound
fdivrs
daa
mov
es
test
jg
lods
push
pusha
and
in
fdiv
sbb
add
insl
cs
and
cs
mov
int
aam
push
pushf
jnp
pop
mov
loope
adc
ret
push
mov
jnp
add
inc
rclb
xchg
in
push
and
sbb
imul
std
mov
push
mov
fwait
arpl
stos
inc
pop
loope
popa
jo
and
mov
icebp
aas
jno
adc
mov
not
mov
and
mov
out
mov
pop
or
sub
pop
ds
mov
pusha
cmpsb
lahf
sub
dec
adc
push
adc
and
jge
jne
ss
mov
loopne
or
push
pop
xor
adc
xlat
mov
xor
mov
popa
push
dec
and
iret
xor
and
cltd
lahf
mov
or
mov
std
pop
mov
and
out
inc
and
mov
mov
lds
leave
sbb
cld
in
jp
arpl
ljmp
adc
inc
rcrl
mov
popf
xlat
xchg
lock
sahf
adc
jae
fdivl
std
mov
es
push
fmul
jmp
jle
sub
andl
jg
insb
pop
mov
push
mov
mov
sbb
or
xor
jmp
cmp
or
or
jg
sbb
out
nop
loop
nop
jl
aaa
inc
cmp
jb
fs
push
sbb
jp
pop
mov
in
jge
int3
icebp
test
shrb
pop
aad
lds
push
subb
xor
add
add
or
dec
sub
sbb
xchg
or
or
push
insb
sti
and
dec
and
daa
dec
or
gs
loopne
cmp
mov
lods
adc
pop
push
jg
pop
fistpll
pop
loopne
icebp
xor
mov
sbb
fiadds
ja
in
int
in
pop
jbe
in
mov
jae
movsl
mov
pop
dec
mov
cmp
outsb
or
andb
lods
fildll
jge
mov
dec
dec
cmp
push
jbe
aas
sub
lret
in
stc
sub
cmc
pop
adc
xchg
lret
in
mov
stc
je
push
outsb
outsb
xchg
sar
lcall
mov
lds
mov
xor
repz
sub
in
outsb
sbb
jne
cmp
icebp
fdiv
pushf
stos
repz
sbb
inc
jg
and
fwait
mov
es
push
pop
lahf
push
repnz
popf
jle
pop
cmp
std
cmp
cmc
jno
or
ljmp
or
push
cmp
insl
push
pop
mov
fisttps
or
scas
jbe
and
fists
in
enter
jo
cld
sub
call
sbb
lds
sub
and
sbb
or
sarb
pop
sub
rorl
out
xchg
mov
outsb
xor
and
xor
lahf
inc
sti
push
cs
stos
cmc
mov
inc
sahf
ret
insb
enter
leave
test
fstpt
in
jg
mov
pop
jne
jnp
lret
in
push
jg
pop
jle
push
lahf
add
xchg
sbb
inc
xchg
jmp
lea
push
mov
test
ljmp
and
cmp
pop
outsb
pop
jns
int
push
outsl
std
fdivrl
les
in
jmp
cs
and
push
mov
ss
push
fcoms
xchg
or
cmp
std
stc
sahf
sub
mov
push
jmp
out
addr16
adc
repz
sub
loope
loop
sub
scas
jge
neg
movsl
pop
aam
mov
pusha
push
jbe
and
dec
xor
mov
jns
xorb
mov
scas
lock
jl
jmp
repnz
xor
insb
sub
pop
cs
pop
lods
imul
aaa
push
inc
frstor
push
or
repz
fmuls
sub
push
jo
xor
jl
popa
mov
mov
sti
call
sbb
mov
push
mov
xor
out
jl
ja
gs
xlat
inc
mov
xchg
adc
stc
ds
ss
push
mov
lahf
loop
stos
fildl
pusha
push
mov
push
jge
xchg
jmp
pusha
test
mov
js
outsb
jbe
push
push
popf
xchg
stc
xchg
xchg
xor
ret
loope
popf
inc
and
pop
dec
push
insl
fcoms
mov
roll
into
stc
mov
jnp
clc
jb
cmpsb
ret
imul
jle
add
sbb
pushf
ljmp
and
sbb
test
xlat
jnp
movhps
pop
mov
sub
icebp
add
cmp
fs
adc
and
add
les
cmp
mov
add
subb
loop
add
pusha
mov
inc
mov
lahf
dec
xor
repz
data16
and
jl
pop
mov
mov
jne
sahf
cmpsl
xchg
cmp
cli
sbb
push
push
add
xchg
inc
sbb
sub
jmp
cmp
sbb
sbb
cmp
popa
adc
dec
xor
xchg
mov
mov
mov
and
xchg
sub
mov
add
add
lahf
ret
loope
fnstsw
jno
xchg
sbbl
jnp
mov
xor
push
lea
xchg
aad
sbb
cmpsb
and
sbb
jo
sarb
imul
enter
xchg
dec
cwtl
ret
ja
adc
jno
fwait
pop
adcb
lds
cwtl
add
aad
jle
es
in
loope
cmp
jmp
test
cmp
cmp
jne
inc
adc
sub
sub
scas
sub
xor
ds
je
jge
mov
jo
test
std
jmp
test
jns
cmp
jecxz
dec
lcall
fistpl
inc
cmc
add
sbb
dec
cmpsl
outsl
sub
add
jl
xchg
andb
or
int
pushf
repz
mov
add
dec
pop
add
shl
jno
jnp
aaa
or
jp
popa
xorb
stos
ret
sub
rolb
mov
sbb
sub
movsl
mov
fisttpl
pusha
mov
mov
ss
pop
pushf
mov
inc
cmp
or
inc
push
sbb
and
adc
jmp
add
shrb
cmp
pop
push
adc
inc
jne
push
ficompl
roll
and
jg
hlt
add
mov
in
and
sbb
push
aaa
lea
mov
adc
std
lea
lcall
mov
xchg
gs
loopne
fiadds
add
fldt
addr16
mov
push
cld
std
cmc
outsl
inc
or
lcall
roll
sbb
aam
mov
jmp
adc
jb
aad
add
out
dec
shlb
out
push
outsb
inc
mov
pop
mov
lret
sbb
scas
add
sbb
push
popf
subb
xor
aas
std
ja
bound
gs
repz
mov
mov
das
fstpt
jno
pop
push
fistps
jp
outsb
pusha
jle
push
mov
pop
inc
and
mov
test
std
rcrl
fcomi
rcrl
das
movsl
push
in
pop
hlt
adc
lock
mov
int
stc
cmp
lods
cmp
js
rcrl
leave
push
int3
or
das
test
lret
ret
sub
out
inc
inc
and
fstpl
sub
sub
and
mov
les
jg
insl
cmpb
imulb
into
mov
sbb
pop
add
mov
hlt
and
je
std
push
cmp
imul
test
or
xchg
push
jmp
add
inc
and
sbb
add
cs
insl
loopne
sbb
add
popa
cmc
dec
fnstenv
cld
mov
xchg
popf
rolb
and
jo
pop
jne
jne
js
outsb
popf
mov
enter
nop
out
jo
cmp
cmp
lcall
repz
std
and
rcrl
jns
cmc
inc
out
je
in
out
dec
popa
mov
xchg
mov
or
push
jns
lahf
les
sub
xchg
data16
pop
add
jb
fwait
leave
pop
addb
imul
jne
lods
ror
sub
add
jge
pop
repz
push
clc
in
xor
mov
sub
inc
aas
sahf
or
add
and
fstpl
icebp
xor
dec
pop
lahf
pop
add
sub
inc
test
out
jg
sbb
lahf
jne
out
insb
cmpsb
jl
sbb
push
mov
xor
cmc
shrl
push
cs
mov
mov
aas
sub
jmp
loopne
imul
imul
dec
std
mov
test
sbb
add
jg
mov
add
loop
test
lea
adc
repz
add
hlt
mov
outsl
lahf
dec
or
test
cld
or
insb
sub
cmp
lds
cs
out
or
cmp
loope
mov
add
pushf
mov
and
add
inc
push
lock
lea
jne
mov
jmp
mov
xor
dec
xor
sub
push
ffreep
shl
sub
and
mov
jmp
mov
inc
in
inc
or
pop
shld
out
mov
jno
xchg
jl
sub
fists
test
push
push
pop
aam
sub
and
fildll
ret
je
fcompl
subl
jg
pusha
loopne
cmp
push
cmp
inc
jne
mov
lds
movsl
decb
pop
mov
dec
jns
pop
nop
lods
insb
mov
loop
fs
fists
loop
data16
push
data16
mov
inc
push
div
push
icebp
mov
cmp
cmp
push
loop
push
mov
sbb
xchg
mov
push
fldt
inc
mov
outsl
cmp
push
lods
out
fsubl
dec
or
inc
jne
ljmp
push
int
cmpb
cmpb
cmpb
cmpb
cmpb
addr16
mov
test
dec
push
jb
cmc
fwait
and
mov
int
sti
dec
jmp
sub
ds
in
inc
mov
sub
jmp
sti
mov
xchg
test
dec
insb
lahf
dec
cmpb
and
das
push
out
add
lods
cmp
lods
jno
xchg
jl
sub
pop
xchg
fstpl
sbb
outsl
sub
js
mov
repz
test
test
movsl
and
inc
xchg
lds
rcrb
and
int
pop
xchg
mov
fnstcw
sbb
sub
jnp
sub
mov
test
cld
sub
in
subl
jmp
scas
push
cmc
subb
cmc
fdivl
xchg
jl
les
mov
outsl
mov
sub
cmc
test
lock
push
stc
mov
jl
shlb
call
jge
das
push
sub
inc
fldl
mov
addb
pop
push
loope
rol
mov
mov
cmp
mov
mov
xor
fisubrl
push
addl
push
inc
cmp
push
cmpsl
loope
push
and
push
shl
test
stos
mov
xchg
out
std
sub
and
repz
bound
and
xchg
insb
notb
add
push
jno
cld
or
and
jnp
in
lret
sub
ljmp
sub
push
jle
push
inc
jne
mov
inc
mov
enter
daa
mov
stos
gs
push
lea
repz
ret
ret
ret
sahf
mov
loop
sarl
push
loop
subb
mov
or
and
test
subb
jbe
pop
negb
int3
fs
cmp
mov
push
sahf
test
movsl
cli
es
jne
stos
fisttpll
inc
and
ret
inc
jo
dec
cmc
imul
cmc
mov
or
and
and
insb
jg
and
add
jae
pop
cmp
or
and
frstor
sbb
in
jb
inc
pushf
dec
push
dec
pushf
add
mov
jg
push
lea
xchg
ret
into
jne
cmpsl
loope
test
stos
sub
lds
sbb
lods
jno
xchg
jl
sub
add
sbb
add
mov
js
push
inc
sbb
add
repz
and
dec
and
lods
sar
adc
push
cmp
inc
jne
mov
inc
mov
add
and
lcall
push
sub
lods
jno
xchg
jecxz
xor
and
sub
loope
mov
pop
push
aam
frstor
mov
loop
fldl
aas
add
pop
in
insb
sub
xor
sub
jge
ss
cmc
add
rclb
or
sub
test
call
into
mov
insb
lret
and
cmc
jnp
test
or
and
repz
and
dec
aam
inc
call
mov
subl
jnp
popa
sub
in
inc
sub
pop
pandn
xchg
aas
mov
push
mov
sub
lea
std
inc
xor
jnp
jl
shrb
inc
xorb
cmc
cmp
test
sti
or
and
fpatan
cmp
add
inc
pop
cmp
mov
xor
loope
or
and
xchg
fldl
inc
sbb
and
cmp
jmp
popf
pop
jmp
loope
add
test
add
scas
test
add
inc
sbbb
test
xchg
jno
andb
andb
andb
andb
andb
andb
frstor
mov
hlt
fnsave
xchg
cli
rcr
ret
fstps
and
push
mov
push
sbbb
mov
mov
test
sub
push
xchg
jg
in
and
shlb
insb
loop
jns
out
push
pushf
lds
insb
sbb
push
jne
dec
dec
xchg
out
xchg
cmp
jne
mov
jmp
sbb
or
imul
mov
inc
xor
outsb
mov
repnz
lahf
pop
and
push
jb
cmp
inc
jne
lahf
sbb
scas
cmc
sbb
loope
test
stos
sub
jno
xchg
jl
sub
cmp
cmp
test
pop
jle
sti
sbb
int3
subb
cs
idivl
lods
sub
xchg
insb
fcomi
jecxz
push
movsl
pop
cmp
pop
cmpsb
jno
mov
pop
push
sub
jnp
les
dec
and
push
cmc
xorb
xchg
rcr
sahf
lea
jle
outsl
fwait
jle
outsl
fwait
jle
outsl
fwait
jle
outsl
fwait
jle
out
aas
jl
into
sbb
jbe
pop
inc
xchg
mov
pop
sbb
fwait
test
mov
movsl
and
fnsave
push
movsb
aas
movsl
insl
mov
test
jl
push
pop
and
jle
push
loope
test
stos
dec
mov
lock
imul
outsl
sti
jle
outsl
sti
jle
outsl
sti
jle
outsl
sti
jle
jg
les
mov
int
push
fwait
int
and
sti
xchg
fstpl
js
pop
fistpl
mov
mov
cmp
sbb
fdiv
sti
movsb
mov
and
inc
push
adc
and
aas
cli
clc
fstpt
cmpsb
cmpb
fnstsw
mov
jle
out
mov
jp
repnz
test
clc
sub
popf
and
jne
mov
inc
subb
sbb
push
mov
sub
lea
insb
ds
incl
mov
and
cmc
cmp
test
or
and
sub
in
mov
inc
pop
jecxz
cmp
and
cmp
sub
xchg
ja
xor
and
xchg
ljmp
mov
jle
jne
mov
lds
movsl
decb
pop
sbb
jne
jecxz
jns
fstp
bound
sbb
and
cmc
sbb
test
jne
sbb
sub
lcall
faddp
mov
aas
sub
movsl
push
cmp
xchg
ds
sub
gs
xchg
xor
nop
sub
sbb
jns
sbb
jno
movsl
decb
pop
pop
mov
add
test
mov
mov
test
mov
pop
sub
ffree
cmp
push
and
cmp
repz
data16
mov
inc
sarl
xchg
pop
sbb
bound
ja
pop
and
jb
fisubrl
xchg
push
mov
inc
mov
mov
push
test
fpatan
pushf
lods
jno
xchg
jl
les
mov
xorb
imul
and
or
and
dec
jl
enter
jne
mov
xchg
test
sub
rolb
sbb
shrb
std
jle
sbb
fldl
mov
fldl
mov
loope
rolb
adc
add
or
and
sub
loope
movsl
jl
imul
or
loopne
jne
jnp
les
fstp
push
mov
sub
jb
cmc
insb
jo
ds
cmc
xor
and
fpatan
or
cmpsl
ret
test
popa
xchg
cmc
popa
jns
jle
out
rcll
rcr
sub
and
mov
shrl
popa
inc
jne
mov
rolb
fldl
test
stos
mov
push
add
hlt
fdivrs
test
cmpsb
js
mov
push
out
cld
nop
sub
fucomp
aaa
push
daa
popl
fwait
inc
pop
add
pop
and
in
insb
add
xor
dec
dec
pusha
and
add
mov
mov
xor
add
cmp
cmp
loope
loope
and
mov
lods
jb
cmc
inc
and
mov
pop
fnstsw
or
mov
or
pop
mov
jb
movsl
and
addl
lock
cmp
mov
cmp
inc
jg
xor
sub
dec
jle
mov
cld
sbb
fbstp
shl
jg
outsb
and
mov
mov
in
cmp
test
pop
inc
lahf
sbb
in
inc
in
fsubp
flds
jecxz
xchg
jg
shll
bound
lahf
repz
sub
dec
cmp
push
adcl
jno
jle
inc
mov
inc
jne
cmpsl
fnsave
and
xorb
ret
ret
jmp
bound
sub
mov
mov
adc
and
iret
loopne
lahf
jns
repz
dec
pop
negl
and
xor
rolb
fwait
sbb
test
js
ret
cs
std
and
jge
sbb
stc
lahf
jecxz
jno
ds
dec
pushf
int3
dec
imulb
stc
jb
cs
imul
dec
push
mov
inc
cmpsb
jnp
sbb
add
push
xlat
jg
aas
test
xchg
cltd
mov
xchg
mov
rclb
sub
jp
xor
pop
data16
push
and
pop
into
jno
adc
in
stc
push
jle
scas
les
push
adc
shrl
scas
and
cltd
lods
int
jb
subb
inc
sti
int
test
lock
cld
or
fwait
dec
pop
in
jne
jg
fdivr
cmp
and
popf
and
test
cltd
aam
mov
cmp
mov
mov
loopne
stos
push
stc
mov
int
mov
or
cmpsl
dec
sub
imul
pop
sti
loop
jnp
sbb
bound
jne
movsb
mov
push
arpl
mov
out
push
loop
insb
sub
filds
push
xchg
cmpsb
add
insb
fwait
mulb
pop
pop
push
stc
loop
insb
mov
repz
lods
fnstsw
mov
xor
cmp
or
dec
scas
int
movsb
fstpl
in
dec
and
sti
mov
int
jl
mov
jl
data16
xor
pop
and
add
jae
cli
jle
mov
adc
jle
push
jle
dec
cmpsb
int
jl
sahf
or
mov
xor
repz
lods
pushf
jle
mov
in
jmp
es
leave
add
inc
push
pop
and
pop
insb
mov
sbb
jns
jle
movsb
sti
cli
jle
push
and
movb
shrl
out
add
sub
cld
push
push
cld
push
push
cld
push
push
cld
push
push
cld
push
push
fdivrl
fcompl
outsl
in
test
pop
lock
fldl
cld
jne
push
dec
test
dec
insb
jle
push
fbstp
xchg
sar
stos
movsb
mov
mov
jmp
idiv
inc
nop
jmp
and
arpl
pop
sbb
stos
jbe
adc
fstp
push
data16
push
data16
push
data16
push
data16
push
data16
mov
inc
addb
xchg
pop
out
mov
popf
xchg
cmc
popf
jns
push
in
std
push
loope
rolb
in
mov
sbbl
pop
push
std
negb
fadd
jno
movsl
decb
pop
rcr
insb
ds
jns
aaa
pop
jg
frstor
push
data16
push
fs
fisttpll
data16
push
loope
rolb
push
jne
fnstsw
jle
push
fisttpl
push
test
lods
popa
mov
inc
dec
dec
push
in
jp
mov
sahf
repz
das
push
push
fisttpl
cmpsl
loope
push
and
std
xchg
das
push
ljmp
lea
cmp
and
xchg
lods
mov
scas
inc
sbbb
pop
mov
js
jle
fisubs
sbb
mov
scas
sub
movsl
xchg
mov
outsb
mov
dec
mov
sub
scas
or
mov
dec
sti
movsb
sub
jg
inc
mov
in
jb
std
or
cmp
xchg
jl
sub
loope
pushf
adc
pop
sub
ffree
mov
movsl
pop
adc
or
cmc
mov
sub
loope
jne
mov
int
mov
mull
jbe
scas
lds
jmp
or
shl
push
pushf
xchg
fnstcw
insb
scas
push
pop
test
imul
and
cmc
inc
xor
and
scas
jns
scas
inc
and
xchg
pop
pop
add
xchg
test
addb
daa
and
jb
gs
sub
js
jbe
scas
lds
jmp
or
rolb
push
inc
orl
inc
ffree
scas
sub
sub
loop
loop
lds
mov
test
fpatan
mov
pop
sbb
rcl
add
sub
loopne
mov
xorb
fistpl
dec
lcall
cmp
loopne
cmp
cs
mov
jl
in
mov
inc
and
pop
test
lds
fwait
sub
fwait
xchg
cmc
fwait
xor
and
movsl
jns
lock
frstor
ret
scas
sbbb
lods
ffree
scas
mov
push
add
mov
popa
sbb
cmpl
inc
scas
test
jne
ljmp
std
lea
cmp
pop
flds
aas
sub
loope
insb
loope
scas
jge
pusha
pop
mov
clc
sub
inc
and
cmc
mov
and
add
sbbb
lea
repz
std
and
out
fimuls
mov
push
mov
mov
bound
out
jle
call
fstpl
data16
sbb
mov
sbb
push
mov
ret
add
int3
cmc
add
movsl
push
jle
mov
scas
outsl
sbb
outsl
add
mov
pop
pushf
fwait
popf
jne
mov
dec
arpl
cmc
bound
scas
fldcw
ja
ret
test
dec
insb
orl
sbbl
pusha
xchg
lds
sbb
cmp
test
or
and
repz
sub
xchg
insb
sbb
cmp
push
or
jne
loope
and
cmc
cmp
jne
mov
inc
sbbb
outsb
pop
shrl
out
loopne
mov
fldcw
ja
sbb
add
popa
dec
sarl
call
fwait
scas
add
mov
xchg
movsb
xor
test
sti
or
and
fpatan
add
sti
les
lret
xchg
pop
aaa
mov
jl
sbb
fpatan
cmp
and
insl
dec
popf
push
dec
loop
test
aaa
jg
adc
in
sarl
fstp
lock
push
stc
add
add
and
jnp
aam
push
ja
ret
scas
cs
sti
or
and
fpatan
shrl
les
mov
cmpsb
shr
and
xchg
fstpl
pop
sub
pop
out
aas
int
and
fiadds
or
out
fimuls
and
scas
fldenv
shll
fsubrl
dec
push
inc
cmp
fimull
scas
fistpll
cmc
ss
mov
inc
sub
sbb
dec
test
jge
cltd
loop
jle
insb
mov
xor
scas
lds
loope
dec
aas
fidivl
mov
scas
push
fsubs
xor
and
pop
xor
and
popf
int
popf
dec
pop
fmul
int
sub
std
sub
sub
fstl
addl
xor
aad
push
frstor
sub
std
mov
int
pop
push
inc
and
arpl
pop
xchg
jg
shl
push
lea
fstpl
and
push
push
ret
and
push
push
ret
and
push
push
jle
jle
outsl
xor
test
test
mov
sub
ffreep
push
sub
mov
ss
ret
and
pop
sub
and
jo
mov
jne
lahf
ret
lret
pop
ret
pop
out
movsb
fwait
mov
push
mov
ret
and
loopne
pop
rcrl
and
push
and
jne
push
dec
jne
push
dec
lcall
insb
fidivs
add
lret
mov
and
mov
aas
mov
and
push
push
pop
mov
jne
mov
lds
mov
subb
ljmpw
jb
in
mov
aas
dec
std
mov
sub
and
mov
sbb
ret
sub
jecxz
or
cmp
push
add
sub
mov
outsb
fsubrl
arpl
int
insb
jno
cld
test
pop
xchg
jecxz
dec
xor
xchg
mov
fstpl
in
imul
jl
jnp
xlat
sbb
test
inc
adc
xchg
mov
sbb
out
mov
pop
pop
arpl
pushf
loopne
dec
fimuls
mov
and
and
sti
and
pop
lcall
adc
cltd
inc
out
gs
mov
subb
sbb
in
enter
out
fisubrs
enter
push
ljmp
fbld
cmp
mov
pop
sub
sub
rcrb
incb
pop
pusha
push
test
mov
and
jns
ror
jo
mov
push
loopne
inc
dec
bound
lea
pop
mov
test
aas
popf
ja
bound
pushf
mov
lds
lea
sarb
in
mov
xorl
out
inc
push
adc
repz
adc
in
push
repz
jl
cmpsl
cpuid
or
stc
int
in
fadd
pop
lods
mov
jb
test
in
shll
xchg
loopne
popf
pop
pop
cli
shl
pop
cwtl
push
mov
in
cltd
in
subl
pusha
lret
cwtl
dec
ja
dec
bound
shl
sahf
hlt
and
mov
sahf
rorl
ffree
mov
cmc
les
movsb
adc
pop
xor
ffree
mov
mov
add
mov
ret
and
jne
jnp
sub
fsubl
jg
in
aas
repz
in
add
test
jmp
repz
fwait
xchg
cmp
aam
mov
int
sbb
jne
int3
pusha
adc
mov
out
push
jl
in
cltd
jns
cmpsb
scas
je
or
or
scas
ficomps
in
in
dec
rcr
imul
movsl
mov
scas
and
and
stc
inc
pop
sarl
push
mov
pop
jbe
lahf
repnz
pop
mov
or
xchg
icebp
fidivs
jne
das
sub
in
jns
lds
jl
mov
fsubr
mov
lea
cmp
dec
lods
jp
add
adc
xchg
pop
das
jmp
and
jb
shll
cmp
repz
adc
loope
pop
ljmp
dec
inc
cwtl
mov
orb
mov
pop
fwait
shl
movsl
and
sarl
in
adc
popf
and
outsb
pop
cmovp
mov
sti
add
outsl
call
jno
cmp
aam
cmpsl
in
mov
jmp
cmc
pop
ja
movsl
in
cltd
int3
cmpl
xor
adc
gs
loope
mov
and
pop
into
shll
push
cld
cmp
test
jae
aam
mov
jmp
inc
push
mov
xor
lods
mov
stos
adc
sbb
in
jmp
bound
pop
stc
and
pop
pop
or
cmpb
fcompl
and
enter
adc
cmp
lahf
fstpl
loop
addr16
arpl
or
icebp
adc
xor
pop
xor
or
add
mov
sbb
jbe
sub
sub
andb
jmp
ja
cmp
pop
jmp
dec
sti
or
mov
sbb
repz
pop
popa
insb
shl
insb
inc
mov
in
xor
mov
dec
jp
pop
pushf
fnsave
mov
out
shll
outsb
inc
add
dec
pop
mov
aaa
ljmp
cwtl
pop
jge
pop
add
les
adc
push
jg
outsl
sbb
daa
cld
jecxz
rorl
idiv
mov
loopne
stc
into
adc
repz
mov
std
pop
outsl
int3
add
repnz
in
jo
cmpsb
scas
dec
out
pop
sub
cmpsb
push
mov
test
outsl
push
pop
pop
in
ljmp
enter
cmc
aam
mov
loopne
mov
push
push
dec
sbb
push
sub
and
pop
sbb
jle
jle
clc
jo
mov
bound
aam
std
xchg
xlat
andl
bound
adc
jbe
scas
jge
cmp
shlb
pop
imul
std
cmpsb
or
outsb
add
pop
andl
imul
lcall
subb
divb
push
adc
mov
repz
shlb
jecxz
sahf
mov
dec
movsb
jp
lahf
gs
outsb
and
into
mov
xchg
addb
and
cmpsb
sbb
sub
or
and
rorl
jp
add
mov
notb
inc
and
push
add
and
js
xlat
adcb
cmpb
mov
cmp
pop
xchg
adc
js
fstpl
shl
imul
pushf
lods
insb
lods
push
mov
sbb
mov
fs
cmp
lods
pop
push
jbe
ret
idivb
rcr
das
loope
xchg
dec
dec
scas
iret
xor
and
xor
cmpsl
sbb
and
mov
ljmp
imul
or
ffreep
les
pop
pop
out
addr16
jmp
scas
fs
cld
jnp
jae
lea
imul
aam
xor
adc
pop
push
call
cmp
je
es
mov
push
inc
pop
inc
mov
push
popf
push
mov
in
in
shll
out
les
jb
stc
cmp
repnz
ficoms
push
loopne
daa
int
lods
xchg
mov
mov
lods
shrb
jo
js
xchg
je
sub
lock
and
call
inc
out
jl
ret
leave
aaa
add
andb
mov
jne
jecxz
xchg
mov
jbe
out
orb
subb
inc
xor
mov
add
in
aaa
aaa
int3
les
fdivr
aas
pop
dec
cmc
jnp
mov
std
lcall
inc
pushf
cmp
push
les
mov
mov
push
and
and
push
mov
cs
loopne
testl
fs
cmp
mov
cmp
cli
pusha
dec
movsl
mov
les
jb
push
ret
mov
push
pop
ficoms
sbb
lds
jnp
fistl
dec
pop
sti
xor
pop
lret
and
popf
das
fcmovne
pop
pop
mov
dec
in
insb
mov
loop
sub
sub
push
mov
cs
lds
mov
xor
inc
jg
mov
jno
mov
call
hlt
in
loope
jl
pop
jmp
pop
sub
test
mov
fwait
sub
sbb
mov
add
xchg
iret
or
dec
push
orl
jno
mov
xchg
pusha
xchg
pmaxsw
and
cmc
cmpb
int3
cltd
loop
mov
jmp
call
dec
jne
xor
and
mov
scas
pop
loopne
loop
and
dec
mov
xor
pop
and
and
jle
sub
ficoms
inc
inc
in
push
pop
jp
loope
lahf
pop
ds
mov
sbb
sbb
lea
xor
aas
cs
push
dec
xchg
pop
add
jmp
jmp
icebp
cmp
or
inc
cmp
mov
xor
mov
sti
bound
mov
lcall
fmul
sar
and
sbb
ds
dec
cltd
and
scas
fistl
dec
xchg
out
insl
in
insl
cmp
insb
cld
lock
jg
mov
inc
lods
jg
out
cli
or
mov
clc
mov
cmp
xor
shrl
fidivs
sbb
xor
pop
jnp
ss
cmp
xchg
sbb
mov
mov
sahf
push
ja
jmp
mov
pop
inc
and
mov
xor
add
jne
movsl
push
rclb
iret
in
xchg
popa
ljmpw
sub
mov
mov
in
clc
adc
cmp
mov
pop
loopne
or
jl
cmpsb
lret
or
jl
icebp
rcr
dec
jno
std
fisttps
icebp
pop
stos
sbbb
and
and
test
sahf
jno
mov
jp
mov
mov
push
mov
imull
loopne
or
sbbb
adc
pop
loopne
pop
addb
pop
out
pop
inc
xlat
repz
cltd
pop
xor
pushf
xor
push
inc
lods
dec
xor
dec
add
rclb
mov
mov
and
dec
dec
leave
mov
icebp
xor
and
and
js
cwtl
out
cmp
cmp
sbb
imul
sub
push
aas
subl
mov
cltd
inc
pop
fstpt
aaa
mov
jmp
mov
mov
jp
jnp
sub
repnz
cmovg
push
mov
adc
jo
sbb
sbb
in
pop
adc
repz
sbbl
mov
jnp
add
push
fidivs
stc
inc
jge
dec
leave
in
dec
test
mov
fwait
dec
adc
lahf
ret
lcall
pop
mov
fst
fwait
cltd
ret
mov
mov
cmc
pop
sub
jb
jp
xchg
push
int3
ja
xchg
pop
jp
loopne
cwtl
jno
jns
jge
add
mov
and
andb
lds
in
test
pop
mov
movsl
pop
jnp
cmp
inc
cmpsl
and
sbb
push
stos
out
inc
ds
and
mov
mov
sub
stos
in
pop
dec
inc
rcrb
aam
outsb
mov
pop
push
xor
mov
add
lcall
or
inc
jge
add
cli
add
inc
inc
xorb
sub
call
xchg
out
mov
mov
jg
fildl
and
jnp
sbb
loopne
mov
les
fldcw
std
test
jns
lds
fidivl
push
xor
arpl
mov
shrb
mov
cmpsl
dec
adc
std
sub
add
push
cmpsl
subb
cmpsl
jns
lds
push
and
shlb
andb
dec
add
test
dec
mov
insb
testb
push
in
pusha
sbb
mov
dec
cld
out
nop
sub
sub
jnp
xchg
leave
add
mov
fistpl
js
aam
int3
xor
loope
lock
mov
push
and
push
fistpll
push
rcr
pop
rcrl
and
jo
add
adc
mov
lods
jne
and
cmp
sbb
xchg
pop
mov
jle
mov
mov
jne
ffreep
in
cld
repnz
or
movsl
mov
xchg
mov
inc
mov
das
and
mov
xorb
in
das
push
mov
imul
outsl
mov
adc
mov
jecxz
push
jmp
jg
and
jecxz
ss
mov
add
fcmovbe
or
xchg
outsl
or
insb
sbb
mov
addb
outsl
jne
ror
scas
add
arpl
les
push
and
inc
cmpsb
imul
sub
push
cltd
scas
sub
in
fdivr
pushf
inc
jmp
repz
push
insb
cmp
es
xor
dec
mov
test
popf
pop
jle
stc
repnz
out
pop
cmp
imul
imul
pusha
loope
jae
in
push
push
fldt
call
shrb
push
pop
in
and
jle
lcall
inc
outsb
xor
cmp
adc
lcall
dec
or
lock
mov
popf
and
adc
fs
push
pop
jne
decl
shrb
shrb
pop
arpl
das
in
push
sub
add
jecxz
xor
jb
shll
inc
add
outsl
mov
sub
push
pop
and
mov
cld
das
sbb
in
lds
mov
sahf
cmc
inc
add
pushf
lcall
adc
inc
xor
movsl
cmp
testb
jbe
ja
popa
lods
js
inc
arpl
mov
mov
xchg
xchg
xlat
loop
cltd
out
negb
sahf
filds
xor
mov
rcrb
movsl
mov
pop
sti
test
xchg
insb
mov
mov
pop
fldenv
loope
jmp
push
aam
jecxz
jecxz
insb
pop
adc
adc
pop
test
dec
inc
adc
pop
jo
daa
icebp
call
mov
jl
cmp
pop
lret
jno
mov
pop
sub
icebp
movsl
sti
and
sbb
push
les
loope
movsl
push
xchg
frstor
inc
push
shlb
add
cwtl
outsl
flds
fcmovb
clc
popf
xchg
in
inc
movsb
ljmp
pop
insb
roll
mov
jo
sbb
jne
xchg
xchg
insb
inc
push
fyl2xp1
fildll
push
mov
or
aas
mov
hlt
insl
in
push
scas
mov
fwait
and
repz
movsl
mov
jl
je
mov
cmc
inc
push
loope
jp
jge
ljmp
or
jnp
sbbl
pop
add
and
jnp
sti
in
jl
cld
jge,pt
test
jne
and
dec
jl
in
pushl
test
and
jnp
in
sti
mov
ds
adc
rorb
add
fs
cmpb
xchg
sahf
mov
mov
adc
mov
cmp
add
pop
dec
cmpsb
into
adc
fucomip
outsl
mov
mov
lods
sbb
mov
jb
sub
imul
cwtl
into
jno
mov
or
test
add
push
cli
sti
adc
and
roll
push
outsb
xchg
dec
es
insl
mov
insb
loope
in
push
cmp
fwait
adc
imul
imul
out
jne
sbb
mov
popf
jb
mov
jnp
roll
add
cltd
in
sti
enter
movb
adc
inc
fisttps
add
jle
cmc
decb
inc
pop
lock
and
cmp
stc
push
jmp
enter
xchg
and
imul
add
ss
pop
xchg
inc
cmp
cmp
mov
xchg
xor
sub
lcall
sahf
sar
fstps
popf
cmp
jg
sbb
loop
sub
scas
xor
add
int
scas
or
and
shrb
add
fwait
jle
jmp
pop
jl
xor
dec
repz
leave
jle
mov
std
xchg
push
ret
pop
lods
pushl
and
or
jmp
popf
subb
sbb
and
add
ljmp
adc
cmp
jmp
repnz
cmp
adc
sub
in
mulb
pop
cmp
clc
std
popa
shl
out
std
insb
icebp
sti
mov
dec
jno
in
repz
sahf
add
inc
ja
mov
jle
mov
and
push
pop
or
push
and
mov
jecxz
jge
mov
push
sahf
push
ret
div
jnp
sbb
push
mov
pop
adc
xchg
imul
jge
in
jge
test
test
ficoms
jp
rcll
sbbb
add
jecxz
sarb
imul
xchg
hlt
jnp
jne
test
subb
fiadds
cmpsb
push
jg
in
pushf
subb
add
repz
mov
int
subb
jl
inc
and
repz
dec
pop
xchg
es
jge
xchg
sti
xchg
mov
or
sbb
add
push
xor
inc
jg
incl
add
aas
add
in
cld
hlt
jl
dec
pop
or
mov
cltd
movsb
add
jmp
cmp
mov
mov
sub
shlb
incl
jnp
sbb
test
jo
mov
mov
cmc
push
outsl
pop
xchg
nop
mov
or
movsl
in
insb
pop
jbe
cmpsw
sbb
mov
sub
fnstcw
add
lcall
jl
or
je
pushf
mov
icebp
add
movsl
pop
push
cmp
cmpsl
add
aaa
shll
xor
int3
mov
test
lds
pushf
fldt
pop
pop
xor
loope
roll
lock
xchg
pop
mov
add
and
jne
je
addb
mov
dec
add
mov
sub
add
push
cmp
add
sti
pop
mov
cmpsl
jnp
push
aaa
jno
mov
xchg
adc
dec
mov
pop
cld
mov
pop
cmp
lahf
cmp
adc
push
sbbb
mov
inc
push
add
in
sbb
jae
or
insl
nop
xchg
xchg
aaa
iret
stc
inc
dec
inc
rol
pop
push
xchg
mov
adc
jns
pop
cmp
aas
ret
inc
test
int
std
cmpb
cmp
ficomps
lret
jp
push
pushl
cmp
movsl
adc
repz
add
pusha
out
mov
cmp
loopne
cli
in
in
sbb
leave
push
fsubrl
outsl
mov
int3
cmp
inc
popa
jne
aad
jbe
add
add
push
sbb
and
dec
cmp
les
jae
xor
pop
xor
sbb
mov
pushf
lcall
inc
mov
popa
or
sub
or
and
or
pop
pushf
sbb
fstsw
mov
inc
call
loope
or
lahf
ret
pop
movsb
jl
push
xor
loope
and
mov
ret
sar
scas
inc
fwait
gs
or
imul
dec
mov
jmp
loope
fsubrs
pop
cmp
stos
mov
out
xor
icebp
pop
rcrb
cmp
adc
inc
push
dec
lcall
mov
dec
add
ret
call
xchg
cs
les
out
push
mov
mov
fcoms
iret
repnz
mov
xchg
loopne
jge
xchg
lahf
push
fstl
jae
or
sbbb
loopne
mov
fists
fstpl
mov
loopne
pop
xor
rcrb
inc
leave
mov
pop
lcall
push
in
jns
xchg
mov
lds
xchg
dec
loopne
mov
out
dec
fstl
pop
push
sahf
mov
pop
mov
sub
cmc
and
call
sbb
pusha
mov
pop
adc
jbe
pop
clc
js
gs
sbb
out
mov
pop
push
in
push
aad
out
jp
pop
movsl
jo
fildll
jbe
inc
mov
pop
sub
fistps
push
rcl
cmp
ret
jno
push
popf
cmp
aaa
and
int3
fists
roll
mov
cmp
rol
push
lock
sbb
xchg
stos
jae
lods
push
push
sbb
mov
add
andb
repnz
add
jbe
insb
and
jae
adc
scas
fstpl
push
int
cmpsb
xchg
outsb
sub
mov
movsl
jb
adcb
leave
into
hlt
lea
ds
push
jecxz
mov
int
aaa
cmc
subb
inc
je
in
add
jns
pop
sbb
push
idivl
mov
add
in
or
mov
lock
hlt
jnp
js
pop
push
insb
dec
sub
fbstp
cmpb
shlb
cmp
cmc
aas
int
push
pop
aad
loopne
add
pop
enter
mov
cmp
pop
int
in
xor
jmp
xchg
lds
push
and
cmpsl
gs
inc
push
inc
cltd
fwait
xor
xchg
fstpl
lahf
sub
and
stc
loope
lea
sub
sti
xor
jbe
push
inc
in
mov
inc
push
push
repz
pop
dec
adc
popa
add
add
aad
fcmovnb
pop
inc
dec
xchg
mov
test
inc
aam
lret
in
mov
outsl
jle
mov
mov
pop
ret
fldenv
outsb
or
mov
repz
and
xchg
iret
fldz
jge
movsl
insb
gs
roll
push
outsb
out
or
adc
xor
sbb
jo
dec
stos
adc
bndldx
shrb
xchg
aam
and
fistpl
ds
xor
xchg
push
out
xchg
xor
xchg
inc
xchg
pop
adc
dec
cmp
cli
fisubs
pop
sbb
pop
pusha
mov
dec
out
dec
pop
and
push
loope
mov
iret
jo
addr16
iret
sbb
inc
jb
sbb
xor
das
push
les
sbb
fstpt
fxch
sub
jmp
pushw
cld
jbe
pop
insl
or
mov
fs
andb
mov
push
mov
std
call
ret
shrl
sahf
in
stos
xchg
jl
sahf
xchg
add
pop
add
iret
xor
sti
in
jnp
lahf
mov
cmp
xchg
adc
std
out
push
aas
imul
cmp
jne
cmp
adc
xor
rorl
pop
addb
out
aaa
and
sbb
push
repz
dec
shl
scas
xchg
mov
jecxz
mov
lods
addr16
xchg
add
addr16
in
das
xchg
xor
xchg
push
popf
jb
push
jge
xor
lea
popf
mov
adc
xchg
icebp
adc
pushf
push
cs
test
out
mov
cld
xor
lcall
fisttps
in
push
lds
pop
xor
push
call
cmp
push
shrb
pop
mov
jb
js
adc
mov
dec
or
push
adc
cmc
data16
lret
push
and
arpl
fadds
and
pop
pusha
and
xor
lret
cltd
stos
rcrl
pop
jae
fistpll
xor
jg
fadds
mull
jecxz
icebp
dec
xchg
mov
pop
xchg
les
in
in
jne
adc
or
xchg
nop
pop
bound
fcomps
jmp
sbb
fstpl
in
stc
mov
lods
push
inc
sub
popa
int
inc
xor
lea
daa
mov
movsb
cld
fwait
mov
jge
jae
out
xor
jnp
sbb
mov
mov
add
push
int3
daa
sbb
dec
cmp
jnp
pop
or
dec
filds
or
push
repz
push
popf
fdiv
cmp
pop
in
add
and
inc
xchg
inc
pop
cmp
stos
mov
rcrl
add
and
jmp
int
pop
insb
stc
add
push
and
xchg
cltd
cld
mov
lods
dec
insb
mov
adc
imul
mov
in
push
test
insb
cmpl
testl
outsb
std
sbb
and
out
loopne
inc
mov
stc
aas
xchg
ret
inc
jb
jmp
dec
idivb
push
outsb
insb
ja
movsl
fisubrl
es
insl
fsubr
adc
ss
out
jle
ds
adc
das
or
loopne
lret
mov
aas
int
in
mov
outsb
rorb
mov
popf
lcall
in
pop
stc
mov
daa
mov
sbb
mov
orb
mov
loop
sub
push
and
stos
repz
outsb
push
loope
loope
sbb
add
mov
sahf
cmpb
dec
inc
loope
fstps
mov
and
das
jecxz
lahf
dec
fcmovnb
out
and
int
pop
and
sbb
or
ss
adc
loop
xchg
dec
or
cltd
mov
clc
mov
xor
jo
jb
cwtl
jmp
fldz
sub
test
sahf
cmp
jbe
adc
pop
push
lock
arpl
dec
pop
adc
add
lods
pop
pusha
pop
add
in
push
add
call
aam
fldt
gs
add
js
adc
ret
jmp
and
pusha
hlt
out
stos
es
insb
or
inc
mov
cmp
cmp
sub
inc
jecxz
dec
shll
std
jne
inc
loop
std
in
push
mov
stc
lods
jb
cmc
mov
jb
loop
sub
and
repz
mov
sub
popf
pusha
sub
clc
push
mov
aad
outsb
bound
das
lea
and
or
imul
popa
pusha
pop
fs
clc
dec
insb
add
repnz
sub
xor
cmp
and
das
inc
push
movsb
sub
or
inc
fsubrp
int
js
push
and
int
mov
sub
xor
and
inc
ja
lock
mov
inc
inc
shr
jg
outsb
inc
pop
mov
repz
imul
adc
jno
dec
and
pop
aas
sub
jp
fs
push
imul
lods
aam
fcmovnb
sbb
enter
adc
aam
pop
cmp
testl
mov
outsl
push
pop
in
cmp
jbe
mov
dec
inc
mov
movsl
cmp
rcrb
sub
mov
xor
cmp
testl
clc
aam
add
outsb
sub
sbb
pop
les
in
sub
je
cmp
sub
mov
int
outsb
adc
aam
inc
jge
sub
add
inc
sub
sbb
dec
xchg
lods
inc
outsb
adc
pop
push
gs
pop
add
cmp
aad
xor
bound
fnsave
sbb
mov
or
or
mov
cmc
xchg
stos
xchg
rclb
outsl
ret
mov
sbb
rep
scas
cmc
movsl
inc
jno
ljmp
jno
pmaxsw
mov
fisttpll
mov
sbb
jge
mov
repz
mov
gs
lds
fstps
sbb
shrb
add
popa
mov
dec
dec
mull
push
jge
pop
push
bound
aaa
sbb
dec
push
cmp
sbb
mov
or
in
scas
mov
dec
mov
jecxz,pt
repz
jmp
push
pop
jb
push
aas
jmp
and
push
leave
sbb
adc
fiadds
mov
cmp
into
divb
aaa
hlt
sbb
fs
rorb
sub
out
inc
icebp
mov
icebp
stos
das
mov
jbe
shrb
jo
lea
and
movsb
jl
int3
cmp
sub
adc
xor
js
xchg
pop
test
pop
mov
mov
loope
or
daa
iret
mov
pop
and
insb
lea
add
fwait
pop
icebp
lea
lcall
push
aad
add
and
cmp
mov
cmp
cmp
fdiv
lods
jmp
out
cmp
fnstsw
push
lds
and
add
or
sbbb
shlb
subb
iret
pop
aas
loope
repz
and
and
mov
test
sub
call
sbb
popa
fidivrs
aaa
inc
jp
outsb
adcb
stos
jnp
fldenv
sahf
jp
inc
outsl
mov
jne
mov
imul
shll
push
cmp
in
xor
out
or
xchg
mov
ss
lock
inc
mov
cmp
jno
mull
dec
fistps
xchg
sub
xorl
stc
out
cmp
roll
dec
mov
bound
sahf
pushf
jb
jno
push
ljmp
aam
or
adc
cwtl
mov
mov
cmp
cmp
popf
push
sub
gs
movsl
or
pop
movsb
push
fwait
add
adc
pop
push
movsb
jl
int3
cmp
testb
xchg
pushf
mov
std
test
enter
test
ret
add
pop
inc
or
int
rep
movsb
in
fisttpl
mov
and
arpl
fstpl
lods
xchg
rcll
rcll
and
ret
push
dec
imul
sti
cwtl
negl
adc
popa
fildl
push
sub
jmp
mov
pop
lock
std
lea
jno
incb
popa
cmp
test
popa
jo
push
movsb
jl
inc
cmp
sub
loop
test
jne
mov
jbe
add
pop
pushf
or
insb
mov
xor
test
and
push
lea
adc
sti
cmc
xor
popa
enter
fimuls
push
jle
jnp
dec
popa
dec
pop
xor
data16
aad
mov
int
cmp
mov
fcompl
fincstp
and
pop
inc
gs
and
nop
fsub
ja
and
sub
int
sub
test
adcb
sub
jb
mov
jne
cmpsl
fnstsw
sbb
jle
fs
xchg
pusha
arpl
insl
lock
sbb
xchg
mov
jne
jp
sub
data16
mov
push
lret
pop
sub
inc
and
je
xor
cs
icebp
push
fdivrl
sarb
cwtl
data16
inc
fsubrl
frstor
shlb
mov
loop
test
jo
sbb
xchg
pop
mov
ja
movsl
in
and
lds
movsl
sti
loope
and
fwait
sub
fldenv
jb
fcmovnb
mov
clc
fsubl
and
push
stos
xchg
sbbl
xor
fs
lea
pop
rclb
add
das
dec
jl
mov
les
mov
dec
ss
scas
jno
or
fidivrl
int3
lods
subb
mov
pop
movsl
fs
shlb
rclb
gs
jo
mov
movsb
fdivrl
lock
cmc
cmc
rorl
jne
lcall
sbb
jmp
mov
popf
test
mov
movsl
loope
test
ret
stc
loop
add
movsl
loop
push
rolb
fcmovnb
sub
xchg
test
xor
rcr
clc
cmp
add
aaa
mov
lds
cmpsl
pop
aaa
pop
sbb
push
aad
out
std
addr16
or
fstpt
testb
push
in
dec
jecxz
lahf
inc
nop
cmp
sbb
dec
mov
inc
mul
adc
ror
nop
and
cmp
push
add
pop
inc
cmc
sub
cmpsb
and
outsl
xchg
sti
in
ret
push
and
stos
xchg
mov
lahf
pop
jne
shrb
lret
push
shlb
nop
and
out
fisttps
pop
dec
pop
jno
mov
dec
or
aas
pusha
sbb
dec
add
movsb
lods
rcl
sbb
bound
and
push
loope
mov
xchg
ljmp
cli
inc
xchg
ljmp
jle
aas
lahf
inc
mov
loope
enter
jmp
dec
repnz
pusha
xchg
xlat
enter
push
adc
adc
sbb
fstpt
je
cld
fildll
sub
xchg
xor
xchg
mov
adc
mov
addr16
mov
inc
adc
xor
mov
xor
jne
and
filds
adc
xchg
shlb
fldcw
sub
add
push
xchg
add
fwait
sbb
rorl
xchg
dec
fisubrl
pop
xchg
jo
and
pop
fcomps
cmp
popa
mov
andl
daa
dec
stc
push
in
popa
mov
popa
sbb
jle
inc
imul
or
pop
inc
subl
test
js
sub
je
int
jno
lds
jmp
aaa
dec
add
xchg
push
jne
jle
subl
push
sbb
and
mov
or
cld
imul
ss
cmp
cmp
lods
add
popa
jmp
adc
push
inc
pop
mov
mov
je
stos
in
pop
decb
test
xchg
inc
mov
pop
test
popa
jl
push
inc
pop
cmp
xor
cmp
lods
lcall
loope
pop
dec
pop
cli
and
into
and
addr16
aaa
and
mov
sar
add
inc
inc
es
ja
aad
add
lods
cwtl
jo
frstor
in
sub
pop
gs
movsl
push
mov
and
mov
sbb
stos
repz
popf
cs
xor
add
cmpsb
mov
out
movsl
pop
sub
and
nop
sub
mov
in
cmp
popf
imul
pusha
sbb
and
jecxz
mov
ds
mov
std
data16
xchg
pop
mov
and
push
mov
cld
outsb
cmp
adc
add
add
repnz
jne
cmp
xchg
mull
popf
mov
dec
mov
inc
into
dec
or
or
jecxz
movsb
pop
cld
xchg
movsl
cli
pop
aaa
inc
insl
mov
and
push
jne
xchg
lahf
and
insb
push
dec
and
test
mov
cs
mov
mov
push
out
cmp
aaa
mov
popa
in
pop
rcll
jl
lea
lods
jle
xor
mov
xor
inc
and
xchg
and
aad
dec
add
mov
add
fsubrl
in
adc
lahf
xchg
cs
sub
arpl
popl
add
mov
lcall
adc
rcr
outsb
or
bound
insl
sub
mov
movsl
jle
inc
push
add
jne
xchg
les
add
add
mov
gs
test
jge
cmc
adc
jmp
pop
pop
cmp
pushf
cld
sbb
dec
pushf
fnsave
stc
insl
lds
cli
mov
xor
mov
subl
adc
movsl
or
in
in
fistpl
jnp
mov
mov
push
push
sub
ror
xor
dec
loop
ficomps
call
ss
sbb
shlb
dec
jno
rcrb
xchg
cltd
js
andl
decb
or
aaa
daa
lcall
or
mov
add
jnp
mov
arpl
sbb
repz
lahf
lahf
lds
imul
pop
scas
mov
loop
lret
push
popf
push
add
pop
jnp
movsl
gs
jge
jg,pn
out
cmp
sbb
dec
repz
insb
outsl
pop
sbbl
adcb
addl
sub
lcall
add
loope
cmp
scas
lods
xor
jmp
add
addr16
std
in
adc
mov
xor
mov
sbb
xor
push
fwait
pop
inc
aaa
lock
mov
enter
xchg
and
testl
ficomps
test
and
arpl
adc
jl
add
std
dec
ja
pop
inc
adc
cmpb
add
mov
mov
inc
xchg
add
cmp
fsubl
mov
dec
in
scas
push
cwtl
jne
popa
test
test
mov
sub
lods
ljmp
cwtl
sub
cld
add
aas
inc
insl
mov
call
ret
lea
and
insl
dec
bound
stos
cld
dec
sub
jbe
fistpl
mov
inc
jl
mov
out
mov
stos
repz
and
fwait
out
std
dec
mov
lea
js
aad
mov
xor
arpl
sub
arpl
cmpsl
xchg
in
or
popf
push
sti
xchg
inc
pop
add
outsb
out
lahf
data16
sbb
adc
sub
mov
sbb
cmpsl
xor
icebp
dec
push
shll
sbb
ja
mov
ja
inc
jp
sbb
lret
adc
inc
dec
ss
loope
call
sar
femms
adc
inc
lods
pop
or
popa
call
inc
insl
pushf
mov
mov
sti
pusha
push
aam
mov
fsubl
daa
popa
mov
movsl
sti
bound
push
cltd
mov
cltd
fimull
ja
ds
ljmp
lods
jno
movsb
jnp
int3
cmp
ds
std
call
lds
test
in
jle
push
mov
insb
and
jg
xor
movsl
sti
xchg
push
inc
fdivs
mov
fwait
push
inc
pop
fdivs
shrl
xchg
iret
xchg
es
rorl
sbb
jmp
xchg
jg
pop
in
and
push
enter
cltd
mov
int3
mov
lret
loop
sbb
popa
sti
or
aas
sbbl
sbb
sbb
test
lock
xchg
jl
shlb
adcl
lcall
mov
movsl
dec
int3
loopne
fisubs
mov
mov
addb
pop
jg
ljmp
stos
imul
gs
shlb
rcll
xchg
and
lahf
push
pop
jg
ljmp
dec
pusha
push
and
mov
lret
sub
mov
push
fcomps
jg
addb
inc
jae
adcb
shlb
aas
stos
fs
xchg
jg
fcomi
sbb
or
aas
and
fcoml
pop
or
push
fmuls
out
popf
push
fwait
enter
lret
mov
pushf
ja
fxch
mov
movsb
cmc
jb
movsl
fwait
sbb
fnstenv
pop
push
int
fildl
add
mov
in
sbbb
ljmp
stos
jnp
sub
mov
test
dec
movsl
jb
pushf
je
fldcw
dec
jle
push
jo
aas
inc
stos
push
fbstp
or
ljmp
jecxz
cmp
addb
and
push
cmpb
push
mov
lods
xlat
dec
mov
pushf
mov
aaa
in
xchg
inc
sbb
pop
inc
sbb
xchg
dec
lods
and
xor
sub
lret
xor
ss
push
cmp
popl
jle
ret
push
aam
sti
sub
push
loope
xor
sbb
fcompl
popf
stos
addr16
popf
push
cmc
and
fidivrl
mov
setns
ljmp
ljmp
add
mull
jecxz
push
jmp
mul
or
fldt
push
inc
inc
push
cwtl
jno
dec
mov
call
pop
lahf
jecxz
enter
push
xchg
ficoms
mov
xchg
pop
xchg
aaa
sbb
push
pop
xchg
pop
aaa
hlt
lret
inc
ss
mov
cwtl
mov
sbb
cmp
sbbb
dec
add
out
jl
sbb
mov
loopne
andb
lret
mov
aam
mov
inc
jge
mov
nop
aam
dec
push
mov
mov
dec
jge
arpl
popf
and
jnp
incl
in
mov
mov
mov
fnstsw
or
repz
les
sub
inc
xor
mov
insl
and
loopne
movsl
jo
ja
and
and
xor
cld
push
les
mov
clc
das
repz
popf
in
std
fisubrs
test
lcall
pop
iret
jae
jnp
int3
es
xor
jne
push
adc
test
hlt
dec
cmp
push
insb
rcl
pop
pushf
mov
scas
pop
jmp
dec
dec
adc
jnp
and
cmp
jp
pop
test
lea
stc
jg
or
cmpsl
fstp
or
and
jmp
fs
cmpsl
outsl
mov
dec
outsl
adc
jp
xlat
faddl
push
in
inc
jns
pop
push
pop
test
inc
jbe
popa
clc
ret
jl
cmpsb
das
dec
jne
aam
mov
addb
mov
mov
int
aam
cmc
ret
and
add
jns
or
xchg
inc
fs
movsl
xor
pop
cli
add
push
push
out
xor
ja
and
inc
jne
xchg
pop
pop
jne
lods
xor
loop
cld
and
sub
cmc
inc
mov
addb
das
insb
pop
ss
and
inc
clc
pop
mov
dec
inc
jl
jne
cmpsb
push
imul
in
gs
inc
mov
mov
mov
movsl
jb
push
fwait
fwait
cld
and
sub
jmp
jle
insb
pop
jbe
and
movsl
sbb
roll
jne
inc
addr16
pop
imul
in
shr
shll
lret
hlt
scas
mov
push
adc
inc
adc
dec
clc
xchg
cmp
pushf
push
mov
adc
push
in
cmp
rcrb
push
jbe
pop
iret
mov
and
stos
inc
in
jb
paddsw
push
sbb
shll
std
popf
jle
mov
push
fildl
and
jnp
int3
pusha
mov
shll
ss
push
stc
lahf
dec
scas
mov
cmp
ret
shll
push
adc
dec
dec
bound
jl
clc
cmpsb
in
loop
xchg
pop
pop
mov
cmc
dec
push
out
pop
push
fidivrs
xchg
and
mov
add
shrb
mov
mov
sbb
pop
push
pushf
inc
nop
sti
lea
fisttpll
inc
pushf
jl
xor
inc
push
xchg
aas
pusha
pushf
dec
mov
sahf
imul
push
dec
push
rcr
enter
cld
sub
xchg
fucomp
ja
clc
and
inc
popa
add
subb
mov
xor
jecxz
lahf
push
popa
repnz
sahf
pushf
cmpsl
std
jne
xchg
addb
mov
inc
jne
xchg
jle
pop
or
rcr
mov
in
mov
jb
jecxz
mov
ret
lock
sbb
pop
jl
lahf
test
scas
and
arpl
push
push
aad
cld
and
jno
push
dec
lahf
scas
mov
ret
mov
notl
popf
mov
mov
in
inc
cmpb
arpl
fs
cld
insb
mov
sub
push
add
loopne
int
stc
mov
cmp
in
addb
lahf
jmp
in
or
mov
mov
push
and
mov
mov
mov
loope
scas
and
insb
fdivrs
gs
fwait
mov
addr16
mov
inc
push
inc
iret
adc
dec
push
fwait
xchg
lods
add
cmc
shrb
jle
aaa
daa
test
adc
inc
insb
mov
pop
mov
nop
jmp
mov
and
and
js
shlb
dec
cmc
decl
inc
jg
push
cmp
cs
jbe
mov
jg
cmc
jg
or
xchg
addr16
imul
mov
mov
push
test
xchg
cltd
imul
sahf
jecxz
rcrb
sub
cmp
and
in
ds
mov
dec
sub
sahf
mov
xorb
loop
fnstsw
jl
jo
inc
sbb
pushf
xchg
in
adc
enter
jge
fs
sub
movsb
cmc
mov
in
ret
ret
shll
push
pop
xorb
push
jnp
in
xchg
push
lea
testl
pop
push
inc
mov
inc
shrl
sti
or
in
pop
data16
fnstsw
jl
mov
push
lea
arpl
and
xchg
jno
shr
dec
mov
push
and
and
sbb
pop
add
mov
push
pop
sub
push
mov
inc
call
cmp
pop
cli
cmp
push
jmp
in
testl
fldcw
out
ds
mov
jl
jmp
jns
movsb
inc
or
mov
cmpsl
mov
pushf
xchg
and
pushf
and
enter
pushf
sbb
cs
adc
int3
adc
fwait
dec
mov
das
inc
push
inc
jnp
popf
call
icebp
data16
roll
sbb
push
add
into
jmp
sbb
movsl
repz
jns
in
fnstsw
enter
fnsave
jae
gs
insl
pop
pushf
jne
call
push
jge
es
push
popf
ss
mov
rorb
and
std
pop
add
cmpsl
frstor
xorb
inc
rcrl
add
std
scas
jbe
push
loopne
and
arpl
dec
mov
cltd
pop
test
lcall
fwait
xchg
adc
pushl
movsb
add
pop
adc
mov
jle
mov
lret
outsb
in
push
sub
fisubrl
faddl
inc
sub
popf
push
inc
add
sbb
cltd
testb
lcall
add
rol
xchg
wbinvd
ret
pusha
mov
xchg
andb
dec
lcall
sbb
bound
nop
mov
pop
cli
push
mov
fwait
aaa
sbb
out
aas
xor
insl
and
dec
cmp
push
sbb
sbb
and
sub
inc
pop
out
cmp
adcl
mov
add
hlt
das
jge
cltd
pop
dec
xor
mov
outsb
add
xor
stos
cli
std
cmp
add
pop
out
cmpsb
pop
shll
xchg
xor
les
cmc
adc
sub
xchg
mov
inc
xor
mov
adcb
cwtl
mov
and
xchg
cmc
inc
enter
sub
jle
add
outsl
or
in
xchg
fstpt
push
and
mull
int3
sahf
xchg
xchg
and
push
int3
cwtl
mov
mov
std
xor
add
and
xor
imulb
fstps
pop
fs
sbb
push
xlat
and
enter
inc
in
dec
xchg
shl
ja
ss
data16
imul
jg
testl
repz
mov
stos
mov
push
push
mov
out
lret
cli
iret
test
ret
push
xchg
push
pushf
xor
dec
mov
fisttps
testl
inc
or
inc
add
iret
xor
jbe
aaa
fisubs
and
inc
mov
lods
push
pop
push
jmp
int
jb
cmc
push
pop
push
out
push
movsb
outsl
inc
add
shlb
xor
jg
add
jb
inc
pop
pop
add
flds
cmpsb
mov
in
outsb
adc
imulb
out
in
add
cmp
lcall
sub
insl
adc
adc
xchg
cmp
jle
mov
pop
popf
jb
mov
xchg
push
loope
outsb
and
jmp
jp
mov
aad
bound
cmc
mov
es
fdivr
jle
in
add
inc
add
add
add
adc
xchg
stos
xchg
mov
insb
in
jnp
cld
aaa
bound
cmp
and
int3
dec
rclb
or
mov
pop
fs
add
adc
push
mov
push
jbe
adc
fisttps
xor
inc
test
dec
notb
test
lock
pop
pop
cltd
imul
push
scas
cltd
jns
pop
jmp
xchg
sbb
lods
jne
fstps
mov
sub
cmp
pop
das
pop
jle
dec
inc
dec
mov
adc
testb
hlt
add
adc
popa
call
pushw
and
adc
push
and
aas
es
inc
sti
mov
adc
pushf
push
popf
mov
mov
frstor
inc
push
cmpsl
cmpb
dec
or
pop
lds
in
adc
mov
or
xchg
cs
adc
xchg
popf
and
cmp
jo
push
or
dec
lahf
sub
jecxz
push
pop
dec
rcll
add
cmp
sbb
jno
push
adc
push
jl
test
jg
pop
in
mov
fistl
data16
movsl
sub
pop
iret
jg
push
jecxz
mov
sub
stos
dec
cwtl
pop
in
int
jge
shrb
mov
jmp
pop
xor
pop
cli
scas
jle
enter
popw
js
xchg
and
std
xor
idivb
das
lock
dec
mov
arpl
add
pop
mov
sub
lea
arpl
decl
in
push
popf
movsb
xchg
std
add
out
lea
jo
adc
js
jg
lret
loope
mov
loopne
mov
mov
into
out
lds
sub
loope
and
loope
lock
sti
mov
insl
fisubrs
jae
shlb
dec
mov
negw
or
push
pusha
mov
pop
dec
inc
or
mov
movsl
sbb
aam
push
xchg
jb
scas
push
dec
inc
inc
pop
pop
ret
mov
sub
jge
enter
in
mov
popa
dec
ja
cmc
push
test
cli
cwtl
mov
js
pop
fisttps
enter
mov
out
into
cmpl
enter
mov
dec
stos
out
cmc
jg
mov
insw
fcoml
lcall
push
mov
cmp
lret
pushf
imul
inc
data16
test
adc
repz
mul
xchg
shrb
in
add
push
mov
inc
arpl
adc
add
icebp
mov
in
das
adc
push
inc
push
or
incl
test
out
insl
out
dec
imul
xor
or
jle
adc
or
pop
or
test
ja
push
inc
pop
sbb
in
xor
and
addb
jle
xchg
jmp
mov
pop
aaa
xchg
fstl
lahf
dec
xor
pop
aaa
push
jle
mov
xor
std
cwtl
scas
jge
out
arpl
xchg
push
dec
sbb
mov
push
ds
add
insl
xor
pusha
ljmp
push
inc
add
sti
mov
adcb
fsubrs
movsb
sbb
and
subb
or
out
arpl
mov
icebp
pop
pop
fnsave
les
add
and
mov
mov
jl
ret
popa
leave
ficompl
repz
gs
cmp
movsl
gs
popf
cmp
jge
jl
push
out
sahf
pop
mov
repz
xchg
adcl
dec
pop
xor
movl
add
mov
aam
or
mov
lcall
loop
sub
cmp
test
dec
loop
inc
and
icebp
pop
and
test
xchg
insb
mov
stos
out
xchg
lret
xor
add
push
pushf
clc
ds
fstp
popf
mov
test
mov
test
lds
loopne
cmc
cmc
sub
incl
mov
inc
frstor
xchg
into
xor
mov
lret
sahf
cmp
in
ret
jne
test
jmp
ficoml
push
xchg
push
fcompl
into
pop
ljmp
jmp
inc
mov
adcl
arpl
dec
aam
int3
cmc
sub
pop
pop
add
sarl
xorb
dec
inc
lret
push
dec
xor
mov
out
sahf
cltd
das
jo
xchg
test
mov
sub
shll
push
dec
mov
sub
adc
clc
jle
dec
jae
push
lods
xor
or
sbb
repz
rcl
mov
das
jae
cmp
mov
gs
insb
fnsave
fucomi
pop
and
std
int
xchg
cmpl
fistps
sub
aas
mov
stc
push
movsb
fsubr
decl
mov
fsubrl
sarl
pop
mov
inc
and
bound
xchg
mov
roll
pop
inc
cmpsb
inc
push
arpl
push
hlt
je
in
xor
scas
cmpsb
add
jl
mov
insb
push
and
push
idivl
decb
fdivrl
xchg
stc
pop
inc
dec
push
and
jmp
mov
xchg
pop
mov
lods
out
es
nop
push
and
sub
mov
push
pop
lcall
arpl
sbb
jg
data16
pop
cwtl
testb
add
sbb
arpl
mov
push
pushf
jne
push
scas
pop
mov
loope
xchg
movsl
fnclex
pop
mov
scas
add
cbtw
fdivrl
jg
data16
mov
pop
orb
out
mov
xchg
push
subb
xchg
mov
js
xlat
inc
jo
mov
int3
mov
mov
jno
rcrb
add
repz
popf
stos
call
int3
inc
ljmp
fisubrs
fmul
mov
pop
sahf
test
sub
stc
loopne
push
loop
xor
inc
jb
cmpsl
test
test
or
aas
pusha
sbb
mov
lds
out
fs
aas
shrl
pop
add
pop
popa
inc
add
push
sub
pop
inc
dec
iret
lods
xchg
inc
fldt
les
cli
pop
mov
pop
cmp
inc
jns
shlb
bound
popf
mov
jl
int
push
add
pop
dec
add
out
inc
rolb
insb
inc
repz
int
push
in
dec
repz
pop
fisubl
mov
dec
test
call
cmpsl
pop
loopne
mul
pushf
cmp
push
lcall
rcrl
push
jg
pop
add
sbb
cwtl
dec
cmpsb
repz
sub
and
pushf
sbb
scas
in
test
mov
or
mov
jb,pt
pop
mov
ror
cmp
negl
popf
push
dec
mov
adc
repz
out
dec
pop
xchg
pop
mov
cld
pushf
cmpsb
ss
repnz
or
movsb
test
push
jnp
push
add
fnstcw
inc
cmp
ret
pop
inc
add
mov
mov
cmp
fdivrl
jnp
mov
sbb
or
shr
loopne
mov
lea
je
pop
scas
sub
push
mov
movsl
inc
test
pop
mov
inc
cmp
pushf
idivb
test
jge
loop
addr16
push
mov
pusha
mov
push
loop
fnstcw
push
mov
mov
pop
fidivrl
lea
fists
or
pop
and
xchg
push
mov
js
out
inc
push
push
js
daa
pop
sahf
jl
or
fiadds
push
and
or
xchg
scas
sub
nop
sbb
ss
jg
lcall
jmp
imul
ja
fs
divl
xchg
push
ds
push
iret
sarb
shlb
jnp
lods
call
or
inc
lea
je
and
lahf
ds
pop
jb
out
mov
sarb
int3
pushf
push
mov
xchg
sbb
jge
popf
aas
add
pop
pop
ret
jne
fst
pushw
pushf
cmp
or
aas
sbbb
mov
int
adc
mov
jne
mov
cli
jle
testl
lds
ja
cmp
test
pop
add
jg
cmp
inc
int3
sbb
pop
loope
fcomps
jp
enter
dec
test
sahf
aas
mov
and
popa
jmp
mov
mov
jmp
fwait
mov
loop
jecxz
dec
cmp
sbb
push
jge
std
call
dec
fisubrs
aaa
movsl
pop
rolb
imul
push
and
cld
cmc
jle
mov
repz
mov
inc
adc
imul
gs
fstl
pop
ror
mov
std
test
mov
inc
inc
pop
insb
lods
push
and
fistpl
in
pushf
repnz
jne
outsl
into
jne
mov
fwait
cmp
jb
movsl
lods
sub
mov
movsb
int3
test
mov
pop
pushf
in
js
int
pop
fpatan
xor
jle
int3
sub
or
testb
ret
pop
push
insb
fldt
and
or
dec
in
mov
inc
fmull
and
push
rorl
insb
aad
test
test
mov
pop
negb
and
push
pushf
push
shlb
pop
push
repz
je
dec
out
ret
test
pop
push
test
loop
push
sub
leave
pop
mov
pop
loopne
adc
mov
stos
imul
pop
push
lcall
cmpb
in
ss
jae
fs
jg
cmp
mov
pushf
xor
push
sti
xchg
mov
add
push
mov
and
bound
loopne
sbb
mov
push
fistps
shlb
enter
test
mov
test
cmc
or
daa
iret
mov
xor
xor
das
test
cli
ret
mov
ret
ficomps
sahf
adcb
adc
pop
xchg
cmc
fisttpl
xrelease
mov
pop
pop
mov
fnstsw
enter
pop
mov
pop
filds
shrb
jle
jle
sbb
cmc
push
outsb
mov
movb
test
fs
iret
mov
mov
std
mov
jp
dec
push
add
cmp
lea
xor
push
or
adc
cld
jle
stos
lahf
sub
and
cli
inc
outsb
mov
out
pushf
out
xorl
adc
loop
pusha
loope
divb
lcall
jbe
enter
loope
pop
stc
pusha
and
ja
inc
daa
mov
jle
nop
mov
jle
test
cltd
aaa
das
jg
shrb
stos
popf
xchg
sub
test
pop
es
in
jle
cmp
xchg
sub
cld
decl
push
repnz
pusha
inc
push
mov
ja
mov
stc
sti
aaa
inc
or
scas
aaa
mov
lds
frstor
int
fcmovnu
lcall
in
rcll
lds
mov
lods
push
add
adc
negb
push
mov
pop
lcall
jle
frstor
jne
jle
mov
mov
and
push
cmp
pop
add
imul
pop
shr
outsb
test
sbb
les
cwtl
and
ret
lds
sti
sub
iret
pushf
int3
fldl
pop
pop
jle
and
sub
lds
pop
xchg
inc
pusha
test
imul
mov
push
xor
shrl
mov
and
jo
fdivl
inc
lock
cwtl
adcl
jecxz
dec
cmc
mov
and
lret
pusha
adc
xor
jge
inc
sbb
loope
mov
xchg
add
sti
xor
ds
dec
sbb
xchg
push
push
dec
sbb
loop
and
jecxz
adc
sbb
mov
adcb
pop
rolb
lahf
out
push
jb
roll
mov
imul
inc
popf
js
adc
out
sbb
jp
lock
dec
jne
lds
fwait
mov
push
int
cli
ds
shll
lret
aas
xor
add
and
push
mov
cmc
test
gs
and
cmp
imul
rclb
dec
pop
add
daa
sbb
push
loope
mov
lcall
pop
and
sbb
dec
rolb
push
mov
and
int
sub
mov
and
das
xor
test
mov
lock
sub
xor
xchg
testb
jo
movsl
mov
push
add
cltd
jo
xor
mov
aad
jo
fnsave
fnsave
jo
and
daa
xor
mov
enter
jae
cli
lods
js
in
xchg
and
jg
xchg
ffree
bound
sbb
xor
push
add
negl
sub
out
fistpll
lds
fwait
and
pop
iret
mov
push
sub
into
jmp
jne
push
and
push
cmp
dec
mov
cmp
test
subb
les
xchg
sub
and
jmp
clc
shll
mov
lds
fwait
push
loope
inc
fsincos
aaa
lahf
or
loop
sub
push
jecxz
sub
jno
inc
mov
pop
mov
lds
pop
push
repz
add
push
sbb
lods
stos
jo
mov
imul
cmc
push
nop
out
jmp
das
adc
jnp
loopne
insb
popf
mov
lods
pop
inc
jbe
loopne
dec
movsl
fsubl
lahf
aad
in
jb
je
mov
xchg
push
in
popa
add
xor
pop
sub
fistl
pop
or
add
js
dec
in
mov
aaa
fisubl
sti
jb
jl
push
mov
lahf
mov
in
or
and
addl
jge
mov
movsl
aas
int3
sub
pop
and
pop
fstpl
sbb
adc
enter
clc
lret
aam
fcomi
loop
xor
add
xchg
shlb
xchg
imulb
pop
test
cmpsl
jno
or
inc
stos
and
jmp
sar
test
and
mov
aaa
lea
divl
pop
jmp
mov
es
ret
push
in
jle
mov
orl
loop
fwait
stos
jnp
inc
out
aad
push
and
roll
out
xchg
test
xor
push
cmp
fcomps
ret
mov
in
dec
popa
inc
mov
adc
inc
push
imul
pop
inc
xchg
aad
in
jg
movsl
add
aad
inc
mov
mov
call
pop
jnp
daa
cli
mov
lds
int
sub
and
and
outsl
or
je
lock
jmp
repnz
into
jne
and
rcrb
pushf
pop
int
popa
dec
js
jecxz
js,pt
in
xorb
mov
sbb
mov
jnp
jne
insb
mov
stc
data16
test
mov
in
popa
dec
test
sti
insb
ret
push
data16
xorb
jnp
dec
cmp
push
popa
dec
dec
popa
inc
lahf
add
mov
xchg
pop
jl
in
test
loop
inc
mov
pop
pop
ja
ja
inc
loopne
sub
ret
xchg
pop
mov
stc
enter
jle
mov
aam
sub
das
cmp
mov
mov
mov
out
lea
rcll
sbb
cmc
push
push
pop
mov
imul
sahf
fwait
push
mov
js
ja
sub
mov
jp
push
lahf
and
popf
jb
cmpsl
ficoml
adc
xor
orb
call
jge
loopne
and
and
inc
shll
push
add
out
mov
neg
dec
mov
andb
xor
pop
mov
dec
mov
lods
push
sbbb
jg
push
mov
gs
and
popa
sbb
pushf
sbbl
bound
negl
inc
aas
mov
std
jnp
dec
es
scas
and
jle
int3
mov
cwtl
in
outsl
xchg
je
aas
cmp
scas
pushf
or
mov
call
frstor
rcrb
and
pop
shll
inc
push
and
andb
jmp
push
sti
jnp
sti
test
cld
adc
dec
jl
mov
stc
sbbb
mov
imul
or
lods
out
aam
sti
cmpsb
cmp
ret
aaa
add
movsl
stc
ss
lea
test
in
dec
mov
mov
fsts
mov
dec
cs
cmp
aad
gs
sub
pop
lcall
pusha
lret
ss
flds
adc
jne
and
jo
orb
int
hlt
mov
fistpl
outsb
addr16
inc
cld
popf
das
sahf
test
mov
and
lcall
repz
and
nop
jne
loope
jmp
insl
ja
push
inc
xchg
test
cmc
cltd
cmp
movsb
and
fnstsw
jbe
sbb
insb
daa
repz
movsb
test
outsb
sub
xor
inc
insl
sti
push
mov
iret
jb
sbb
mov
adc
cmp
jno
hlt
jnp
cmpsb
mov
std
inc
pop
movsb
sbb
cli
add
js
inc
or
and
subb
pop
inc
test
fimuls
ja
sub
jne
popa
dec
sub
pop
mov
mov
add
dec
out
ds
jmp
ret
aas
sbb
push
aaa
cmp
dec
fs
push
xor
jb
xchg
xlat
stos
insb
movsl
or
popf
lock
out
push
out
fstps
jge
mov
popf
mov
xor
xchg
repz
pop
test
lea
inc
push
cmp
jmp
pop
addr16
and
in
sbb
std
dec
outsl
and
gs
xchg
outsl
dec
dec
cmpsl
mov
insl
decl
stos
movsl
jne
out
aaa
test
lds
in
xchg
cmp
das
cmc
ret
loop
ja
out
icebp
mov
cmp
mov
out
jmp
dec
jge
jmp
lret
iret
xor
movaps
fcmovne
cmp
loope
add
mov
mov
fsubrs
push
sbb
add
in
pop
pop
adc
cmc
ja
sbb
sti
imul
mov
cs
mov
jl
lret
pop
loope
jp
cld
lods
dec
add
popa
jecxz
xor
pop
std
push
mov
jge
mov
fcompl
rcrl
pop
jl
jge
cmp
cwtl
loope
mov
jmp
jmp
push
fistpl
js
inc
popf
pop
adc
jns
pushf
pop
fwait
dec
mov
mov
dec
and
jbe
decb
cmp
loope
das
stc
std
insl
pop
aas
push
add
sbb
push
pop
inc
imul
fwait
push
cmc
jp
movsl
sub
rcrl
cmp
xchg
push
fistl
movsl
adc
ja
test
test
ret
xchg
sbbl
adc
lret
mov
ret
pop
sbb
mov
or
push
aam
sbb
push
xor
jge
test
icebp
lahf
cmp
dec
popa
mov
jg
xor
pop
adc
push
pop
mov
aas
insl
pop
out
sbb
cmp
scas
inc
popa
rcrl
loop
test
cld
loope
fldl
and
jno
notl
sub
in
pop
jbe
xchg
inc
xor
insb
cs
repz
xor
sbb
idivb
lods
or
insb
hlt
repnz
sti
cs
push
loope
lcall
sbb
filds
sahf
cwtl
insb
cs
sub
test
xor
pop
jb
pop
je
ds
pop
xchg
hlt
sbb
cmp
shrl
imul
clc
icebp
int
std
fidivs
insl
sub
ljmp
push
cld
lock
lea
ljmp
loopne
xchg
ds
mov
aaa
jl
inc
mov
pop
pushf
ljmp
inc
sub
and
in
sub
fstpt
mov
in
add
jge
cwtl
std
adc
xchg
and
ret
mov
les
sti
ljmp
stos
test
int
pop
cs
sub
insl
push
cmc
movsl
and
insl
mov
sbb
mov
push
dec
in
xor
mov
arpl
popa
addr16
sarb
orb
pop
int3
mov
movb
cld
jnp
or
push
aam
cltd
sub
cmp
sbb
test
push
jecxz
call
sti
pushf
test
stc
inc
xor
mov
mov
insb
cltd
cmp
add
call
sub
mov
sbb
out
xchg
clc
mov
in
pop
jae
inc
in
adc
fwait
ss
in
push
loop
push
mov
sbb
adcb
pop
jbe
xchg
lret
clc
jp
jle
jg
cmp
dec
jp
in
push
sbb
mov
in
rorb
add
mov
cwtl
aad
add
sahf
dec
inc
cmovbe
repz
movsb
sbb
pushf
cltd
jmp
jo
loop
and
cmp
in
cs
popa
xchg
lahf
inc
push
sbb
stc
sbbl
pusha
pop
add
sub
shll
cmpsl
sub
mov
int
sti
pop
and
out
std
xor
in
fstpl
insl
cmpsb
cs
fidivs
push
cmp
ss
sbb
loop
in
fisttpl
rcrl
xorl
jl
shll
lock
mov
rol
jp
divl
add
mov
push
cltd
mov
xlat
xor
jne
sahf
sbbl
push
add
add
jle
mov
cmp
xchg
cmc
cmp
iret
icebp
sub
cltd
push
fdivrl
sub
nop
mov
push
jo
out
mov
fisubrs
into
cmc
xorl
test
pop
roll
insb
adc
fnsave
loope
adc
pop
mov
je
test
rorb
icebp
rep
pop
and
rcr
push
mov
pop
lahf
jge
adc
inc
push
xorb
lcall
out
sub
sbb
pop
push
rolb
mov
mov
dec
add
mov
adc
cmp
inc
in
dec
repz
mov
pushf
add
push
and
repz
imul
xor
lcall
add
sub
bound
xor
xchg
fdiv
mov
fnstcw
jno
jnp
mov
jne
jg
push
bound
or
add
mov
push
pop
imul
in
or
push
fsts
mov
fcoms
and
outsl
or
jb
add
cmpsl
ret
or
int
push
andb
hlt
push
dec
jle
popf
mov
sub
testb
shl
ds
lea
popl
mov
fwait
push
movsb
xor
mov
sub
cli
mov
lea
xor
jge
push
icebp
dec
jo
inc
aad
dec
lods
xlat
decl
mov
mov
xchg
dec
inc
xchg
mov
lds
cmp
push
xchg
enter
push
fistpl
xlat
or
outsb
ret
mov
inc
out
lea
popa
dec
loope
sub
mov
popa
xchg
add
aas
lea
mov
insb
nop
mov
pop
jmp
les
and
adc
cld
and
cmp
sub
lock
fistps
adc
loope
or
stos
roll
roll
sbb
dec
xchg
mov
gs
cmc
mov
lret
popa
mov
xchg
inc
cmp
cmp
loope
jmp
pop
jmp
filds
mov
cltd
ss
daa
pushf
or
pop
mov
js,pt
pushf
ss
dec
mov
jne
in
push
int
mov
movsl
ss
push
inc
or
xor
out
add
arpl
bnd
cmp
aaa
dec
lahf
sbb
cld
repnz
xchg
fadds
insl
stc
adc
xchg
and
fadd
lods
xchg
subl
cli
mov
ret
loope
icebp
inc
inc
in
out
ds
inc
mov
mov
pop
loope
xchg
add
in
popa
pop
es
pop
or
scas
jns
or
cmpsl
adc
mov
call
insb
pop
out
push
dec
adcb
inc
leave
sbb
and
sbb
inc
stc
loope
dec
scas
and
aam
jb
pop
fucom
cmp
adc
mov
xchg
dec
mov
or
outsl
icebp
cmp
daa
pop
insl
pop
aam
mov
cmc
js
in
imul
mov
cmp
arpl
xchg
jo
jle
and
mov
aaa
clc
xchg
popw
mov
mov
in
out
adc
andb
out
cmp
fdivrl
pop
movsl
xchg
fucom
adc
sbb
in
jbe
inc
pop
push
lock
arpl
div
and
mov
jle
push
loope
sbb
rcll
loop
loopne
mov
xchg
add
loop
sarl
cmp
jl
popf
xchg
pop
add
fsubrl
mov
pop
in
xchg
lods
popf
daa
xchg
cmp
out
loopne
clc
xor
mov
inc
mov
jge
dec
sbb
xchg
xor
pushf
insb
cmp
jp
in
incb
js
fidivs
or
or
mov
out
pusha
lcall
mov
lahf
xchg
cmp
jecxz
jp
stos
dec
sbb
test
inc
sbb
push
adc
in
jb
jns
sahf
jp
fisubrs
imul
cmp
insb
and
xor
frstor
pusha
mov
fs
add
insl
mov
add
sub
es
lds
inc
sbb
fistpl
scas
pushf
jecxz
xor
mov
add
mov
lea
pushw
push
lock
push
sub
dec
cmc
mov
sbb
loop
arpl
inc
sarb
fucomi
call
jp
pop
lcall
lcall
aaa
cltd
dec
repz
sahf
jbe
xor
add
nop
lods
cwtl
push
xor
inc
andl
test
dec
jnp
out
adc
mov
cmc
cld
dec
mov
pop
cwtl
lret
enter
popa
and
add
out
inc
shll
pop
icebp
xchg
dec
leave
xor
push
pop
push
data16
int3
fisttpll
inc
subl
sub
dec
in
add
mov
dec
and
lods
faddl
push
stc
jmp
inc
and
mov
pop
mov
lea
and
push
sbb
lea
pop
cltd
mov
push
fwait
repnz
push
sbb
data16
jne
jnp
push
add
ss
insb
add
mov
repnz
pop
pop
cmc
lahf
divl
inc
jnp
imul
sub
outsl
dec
sbb
sbb
lea
in
jb
int
mov
push
pop
rcl
inc
jecxz
cmp
lds
inc
sbb
jno
out
scas
add
push
mov
sbb
jl
cmpsl
popf
jno
loop,pt
cs
cltd
sbbl
jecxz
lods
repz
sub
mov
pop
cmp
adc
push
inc
xchg
mov
pop
mov
sbbb
cltd
xor
fs
cmc
cld
pop
cmc
mov
mov
test
add
push
repz
pop
outsb
fistl
mov
lahf
jae
loope
imul
xchg
pop
pop
mov
and
rcrb
and
and
mov
fbld
sbb
dec
and
andb
mov
cltd
lds
inc
mov
call
jns
jb
loopne
pop
outsb
xchg
hlt
mov
insl
stc
xor
cmp
cmp
insl
jns
xchg
dec
lock
and
test
popf
dec
fnstcw
or
loopne
push
outsb
inc
push
es
insb
sti
jne
and
sahf
cli
repz
enter
fstps
cltd
cmp
mov
fsubrs
fldl
imul
mov
mov
sbb
adcl
jmp
in
mov
orb
mov
int
sub
stos
pusha
call
dec
pop
add
ss
and
jo
add
push
add
mov
xchg
mov
sbb
out
lcall
cmp
cmp
jno
dec
ret
mov
sti
push
pop
sbb
in
mov
cmpb
jmp
imul
pop
gs
jg
xchg
aaa
cmp
push
lahf
dec
int3
js
pop
pop
xor
mov
xchg
lods
out
fs
fwait
fs
loope
sbb
scas
push
mov
pop
pusha
sbb
push
xchg
adc
or
mov
pop
lret
aad
pop
sbb
outsl
push
out
fcmovnu
sahf
push
xor
pop
test
mov
and
mov
pop
mov
add
fistpl
adc
fisttps
aam
mov
push
or
jp
jo
pop
and
lcall
push
icebp
pop
int
mov
loop
fisttpll
scas
add
ss
fisttpl
es
mov
fnstsw
leave
outsl
sti
mov
int3
out
add
mov
loopne
shll
stos
pop
outsl
cmp
sets
push
mov
pop
scas
mov
outsb
xor
or
cmc
and
fidivrl
rclb
ja
dec
sub
lret
je
sub
into
adc
fstps
rol
ret
sti
xchg
ss
ss
xchg
cmc
sahf
std
sbb
jbe
arpl
fidivs
cmpsl
jbe
sbbb
fwait
loope
push
insl
dec
inc
jne
loop
cmc
lods
in
and
pop
outsl
test
mov
popf
inc
std
fstpt
fdivr
inc
cmp
jb
int
loop
adc
insl
push
sbb
mov
lods
mov
mov
movlps
jne
jno
test
jno
cld
test
add
test
sub
lcall
mov
pcmpgtb
sahf
aas
push
imul
sub
loopne
adc
movsb
scas
xchg
fisttpll
and
insl
inc
fcoms
std
pop
dec
push
sti
cmp
out
pop
cmp
add
jne
repz
ljmp
push
lock
inc
ret
push
mov
out
icebp
xchg
ljmp
mov
mov
cltd
fsubl
cmpsb
iret
jae
and
or
xor
and
sbbl
add
js
pusha
mov
and
fs
push
sahf
loope
pop
cmpb
dec
test
lea
popa
inc
in
push
out
cmp
mov
inc
or
push
sbb
sbb
fisubl
xlat
cmc
insb
pop
xor
sbb
push
out
mov
add
adc
lcall
lea
push
adc
test
popf
div
shl
std
pop
jl
mov
test
fs
mov
ds
in
aad
jecxz
sbb
mov
pop
fbld
in
movsb
push
sub
mov
mulb
add
lcall
jg
loope
add
iret
dec
call
lods
mov
pop
sbb
aam
cli
xchg
sub
mov
mov
and
push
les
jmp
aaa
sbb
fmuls
or
or
inc
sbb
test
jp
or
into
jp
sti
or
adc
ret
push
pushl
inc
or
rol
inc
add
and
fdivs
and
pop
das
jge
divl
bound
mov
pop
loope
ss
rcll
fsubrs
bound
iret
pop
cmp
setle
outsb
cs
loopne
fwait
push
sbb
xor
jg
outsl
leave
ret
jnp
in
gs
ret
loop
fucomp
lret
insb
xor
add
pop
mov
stos
das
mov
adc
jmp
cmp
adc
fs
mov
mov
push
insb
fistps
add
mov
cmp
jne
push
mov
mov
roll
aas
mov
xor
mov
addl
es
ds
mov
mov
shrl
or
cli
mov
xchg
jl
xchg
sahf
mov
sub
pop
jne
out
gs
loop
mov
sub
push
inc
pushf
aad
mov
in
push
mov
cmp
and
repz
faddl
arpl
sbb
sbb
cmpsl
imul
out
add
js
xchg
sti
lock
cmovp
loopne
fisubs
ds
mov
iret
je
xchg
cmp
fistpl
lahf
pop
mov
pop
das
sub
mov
jl
xor
int
adc
pop
and
jecxz
mov
xchg
fsubrs
movsb
hlt
lea
mov
mov
push
mov
fnstsw
adc
push
fstpl
pop
xor
sub
lahf
idivb
andb
xor
lock
xchg
jp
out
pop
test
stos
add
or
test
in
add
imul
subb
jae
add
push
dec
jl
int
add
fnstenv
xchg
mov
cld
insl
mov
mov
pop
pop
pushf
add
adc
cmp
in
idiv
aad
mov
fcoml
test
jne
loope
and
in
sbb
cmp
fistl
xchg
ds
adc
and
jnp
in
loop
add
mov
stc
andb
cwtl
cmpl
lcall
sbb
or
mov
lahf
popa
in
and
jmp
add
push
mov
sarb
xchg
or
cmpsl
lock
pop
xchg
push
dec
pop
mov
pop
xchg
mov
and
cmpsl
jne
mov
mov
std
adc
sahf
pop
lret
xchg
push
mov
or
push
xorb
cmp
pop
mov
in
out
xor
pushf
rorl
pop
mov
out
mov
pop
dec
mov
outsl
add
xor
loope
push
pop
mov
fisubrs
jbe
add
jge
cmp
cmp
cld
loop
sbb
mov
cmp
pop
scas
cld
dec
std
inc
and
shll
adc
push
cmp
push
push
frstor
ret
or
mov
mov
cmp
mov
mov
push
mov
lods
pop
cli
leave
lret
dec
in
cmpl
mov
movsl
arpl
incb
cli
insl
out
jle
mov
xlat
movsl
or
das
decb
pop
jmp
outsl
loopne
shl
orb
ds
mov
sbb
xchg
sbb
sub
addl
test
cmp
push
in
mov
push
and
pushf
and
test
sbbb
xchg
push
loop
xchg
pusha
mov
xchg
outsb
pop
repz
or
mov
mov
in
pusha
jge
cmp
mov
mov
addb
es
and
inc
outsb
jno
lcall
popa
jb
pop
mov
popa
push
pop
lcall
jge
test
sbb
mov
mov
iret
xor
cmp
jle
out
in
push
std
mov
notb
int
bound
popa
sub
jnp
in
nop
xchg
out
jb
lcall
xchg
test
dec
mov
and
rolb
mov
add
jbe
mov
imul
in
push
xor
bound
xchg
fwait
mov
in
scas
sbb
outsl
jg
push
rcrb
lods
jp
shrl
add
and
inc
in
cmc
dec
sub
xor
push
and
sub
sub
cld
cmc
mov
push
mov
mov
cltd
dec
popa
cmpsl
adc
out
mov
push
jg
pop
mov
test
and
jnp
add
cwtl
insb
rolb
pop
pop
xchg
mov
pop
jp
cs
lock
cmc
rclb
ffree
imul
stos
jl
pop
cmpsb
mov
ror
lret
fiadds
enter
das
and
fists
inc
jg
lds
push
adc
loop
pop
cmp
sub
cltd
sahf
leave
or
addb
mov
jg
mov
jecxz
pop
fcmove
iret
insb
sahf
clc
mov
xchg
adc
pusha
inc
loope
jo
xchg
cli
popf
inc
dec
mov
out
ljmp
rcr
test
mov
in
jno
cmp
mov
repz
jbe
in
fsubrl
push
insl
inc
popf
jns
xchg
mov
je
fwait
ss
mov
stc
std
push
add
add
jmp
jle
cld
incb
and
outsb
jmp
mov
xchg
les
orl
push
neg
ret
lea
jo
dec
popf
mov
mov
xchg
xchg
mov
sbb
adc
xchg
insl
mov
cwtl
jns
icebp
add
cs
mov
ficoms
mov
fists
jns
fldenv
and
xor
sbb
fdiv
loope
cmp
movsb
dec
and
dec
in
pop
adc
orb
adc
int3
mov
or
sub
push
cmp
sbb
inc
mov
and
into
aas
shll
mov
sarl
xor
and
jmp
lret
and
mov
sbb
mov
cwtl
jnp
push
jle
adc
inc
pop
ss
leave
xchg
loope
mov
insb
add
pop
jno
lods
xchg
xor
in
sahf
fwait
sub
dec
mov
insb
inc
jle
idiv
push
outsl
xchg
mov
push
outsl
lods
movsb
pop
loope
cmpsb
and
or
pop
sub
fcmovnu
and
inc
pop
lods
adc
insb
cltd
fisubl
xchg
cmpsb
adc
fstpt
and
mov
mov
jmp
pop
add
sub
test
and
repnz
cmp
out
pop
mov
pop
pop
inc
daa
dec
sub
jl
imulb
daa
sbb
jg
cltd
xchg
fwait
pop
fdecstp
or
jne
js
shr
adc
outsb
shll
cmp
je
iret
dec
xchg
mov
mov
inc
mov
push
pop
pop
push
cmp
lcall
or
jno
test
mov
jmp
xor
mov
push
outsl
lea
and
pop
and
adc
inc
inc
insl
int
jmp
sub
pop
jns
push
std
cmp
lcall
shlb
cmp
insl
in
shll
in
xorb
xor
mov
xorb
and
fnsave
ss
jecxz
fwait
mov
les
pop
push
push
js
andb
mov
inc
in
mov
inc
pop
jae
arpl
sbb
daa
inc
mov
inc
aas
pusha
call
sub
dec
mov
out
arpl
and
negb
inc
fstpt
or
aad
push
push
xchg
popf
popa
cltd
mov
mov
pusha
lods
sub
mov
xlat
mov
popf
dec
push
jo
jg
in
cmc
sub
pop
jle
test
ret
cs
int3
fscale
orb
out
sbb
rcr
lods
lods
jp
lcall
insb
popf
jne
rcll
sub
xchg
cltd
stos
fsubrs
xor
xor
notb
jg
cli
mov
neg
cmpb
sub
loopne
dec
add
and
in
adc
mov
mov
push
out
mov
xchg
mov
les
mov
jl
imul
popa
sarb
sub
in
and
jno
push
pop
sub
xlat
dec
pushf
out
aam
mov
jle
dec
mov
xchg
jmp
push
aam
cmp
dec
cs
xchg
stos
xor
xchg
jo
fldpi
lea
fistps
sub
jecxz
inc
sbb
popl
jb
push
fidivrl
pop
enter
idivl
inc
push
call
nop
or
inc
sbb
adc
lds
and
loop
xchg
mov
test
aad
push
outsl
cmpsb
frstor
add
cltd
call
mov
cmp
or
cli
jbe
and
jmp
mov
dec
xchg
pop
iret
lret
ret
pop
jno
sbbb
outsl
inc
push
fnsave
fisubl
lods
sub
jle
in
jbe
imul
push
add
insl
push
push
insb
std
mov
outsb
das
test
insb
popf
and
xor
jne
sti
and
jmp
jo
or
push
lea
jb
mov
scas
xorb
les
cmc
rcr
not
push
popf
sbb
xchg
and
mov
add
fisubrl
sbb
and
sahf
sbb
xor
add
fimull
pop
lret
lods
fnstsw
xchg
cmp
or
ljmp
daa
and
in
rcll
test
add
js
dec
dec
dec
fdivl
leave
sbb
loope
sbb
leave
lock
lahf
mov
push
push
jb
popf
cmovp
push
pop
cmp
xchg
aas
add
mov
push
add
out
lcall
pop
test
or
out
pop
and
mov
fs
sbb
outsl
loop
movb
mov
jno
push
mov
dec
int3
popf
lea
aad
pop
adc
sub
cwtl
mov
arpl
xor
mov
dec
ds
mov
push
enter
out
stos
fsubs
jge
pop
fwait
adc
jne
xor
imul
sub
mov
cmp
inc
xchg
orl
inc
inc
xchg
inc
adc
dec
not
inc
lock
ljmp
jne
shrb
push
xor
add
pop
push
cmp
inc
setl
jns
adcb
fimuls
xchg
inc
test
lods
xchg
or
or
stos
outsl
dec
dec
ljmp
push
mov
in
cmp
outsb
bound
in
imul
and
push
jnp
pop
cmp
fnstenv
pop
inc
scas
ds
xchg
sahf
les
movsl
clc
fidivrs
filds
out
enter
pop
push
loope
shrb
jmp
scas
jae
sub
cmp
xchg
lcall
xor
and
stos
fcmovu
push
mov
dec
cmp
cmc
mov
and
jnp
xor
fdivp
loop
sarb
outsb
jmp
dec
push
int
rcl
in
push
sahf
mov
jo
jns
mov
push
jmp
jnp
inc
inc
in
and
mov
cmc
jbe
roll
mov
jne
adc
fiadds
aas
iret
pushf
sub
int
fstp
das
and
jg
outsl
sbb
in
ficompl
out
fs
xor
in
fbld
pop
hlt
in
fpatan
aas
xchg
jmp
xor
rcl
dec
aas
push
fisubs
xchg
push
jl
lret
mov
lods
mov
aam
fiadds
add
ficoms
outsb
mov
fimuls
incb
pop
pop
iret
aad
pop
sbb
mov
add
fldl
loopne
ficoms
bound
xchg
pusha
jl
rorb
xchg
fidivrs
and
stos
jne
lcall
cmpsl
cmc
lods
repnz
push
sub
dec
cmp
out
pushf
ficomps
lcall
jne
jnp
push
and
xchg
adc
ret
out
stos
add
xor
pop
lods
jb
in
mov
fs
loope
cmpsl
repnz
rcrb
mov
jae
pop
test
je
dec
pop
js
sti
lods
clc
jle
push
ret
push
pop
leave
push
addb
pop
hlt
add
scas
cmp
movsl
adc
decl
dec
push
jno
push
sbb
mov
mov
mov
inc
inc
js
stos
dec
jne
and
outsb
xchg
lea
iret
jns
aas
cmp
lahf
sub
xchg
pop
push
xchg
cmp
mov
ja
fwait
pop
and
add
mov
or
cld
add
inc
popf
lcall
popf
mov
mov
lods
popf
jecxz
andb
jl
stc
jbe
pop
les
sbb
mov
ja
les
sbbb
xor
jl
sbb
xchg
cmpsl
inc
xor
xor
fnstenv
fldenv
cltd
rorl
jbe
les
fnsave
in
fwait
mov
pcmpgtb
gs
push
pop
jne
ret
andl
addr16
cld
inc
sub
rcrl
ret
sbb
int
lock
and
jle
popf
dec
xor
lret
out
cmp
ja
push
in
cmp
popa
arpl
pop
push
addr16
push
test
ja
mov
daa
mov
mov
inc
sbb
loopne
rcr
pop
jbe
fistpl
cs
les
inc
fdivs
movsl
rcrl
rolb
pop
sbb
jle
movsb
push
testb
inc
out
in
jnp
aad
pop
cmpsb
push
cmpsb
outsl
and
arpl
rorl
mov
sbb
pusha
inc
cmpb
lock
movsl
fbld
lret
pop
cmpsb
mov
dec
das
add
pop
icebp
adc
addb
fisttpll
jg
mov
pop
push
js
inc
mov
sub
movsl
xchg
repz
mov
ret
movsl
insb
rolb
pop
dec
aaa
push
das
jle
and
dec
lcall
out
push
push
cmp
popa
add
mov
pusha
jmp
lods
std
cmc
sbb
das
lret
pushf
add
push
push
mov
mov
sbb
in
push
jns
sbb
ss
sbbb
clc
aam
sbb
fldcw
vmread
push
pop
jne
lea
sahf
push
add
popa
dec
pop
fadds
push
xchg
sub
popf
ficomps
jg
movsl
xchg
cmc
sahf
enter
lret
xor
or
fwait
pop
fmulp
insb
xchg
das
test
dec
xchg
mov
xor
fiadds
fsub
in
test
bound
sub
xchg
bound
aas
insb
cmp
aam
insb
inc
mov
jge
fwait
cltd
movsl
stc
rcr
int
pop
in
cwtl
push
sahf
xchg
rorb
std
inc
test
mov
jmp
ja
add
sub
jl
pop
jnp
fiadds
adc
push
js
inc
dec
jb
or
je
mov
in
sbb
pop
arpl
pop
sub
shr
mov
arpl
int
cmpsb
in
dec
pop
inc
cmp
popf
test
cmpsb
lret
jo
mov
ds
movl
pop
and
in
int
outsl
mov
ja
int3
pop
jns
gs
cmp
pop
jmp
pop
aas
push
lods
fistps
push
fsubl
push
adc
hlt
ret
pushf
fistl
and
push
xchg
out
enter
outsl
pop
mov
fs
sahf
add
cmp
arpl
pop
push
xchg
aaa
push
loopne
push
cmc
or
mov
xchg
pusha
test
inc
cltd
xchg
or
lret
insb
imull
jecxz
pop
data16
imul
cli
pop
in
dec
movsl
fisttps
cmc
cwtl
leave
in
arpl
lds
idivb
pop
add
out
xor
insb
add
fld
rolb
mov
loop
insb
adc
jl
aaa
dec
leave
add
jmp
je
inc
add
fs
inc
lods
dec
cmp
inc
xor
aas
out
test
lea
adc
jne
cmpsl
push
mov
in
add
cmp
dec
lea
aas
pop
pushf
adc
and
fisubl
push
shlb
mov
popf
jb
mov
int
int3
xchg
jno
push
sahf
and
por
xchg
xor
movsb
cmp
pop
in
das
adc
insb
cmp
pop
lcall
sbb
jo
in
popf
cld
nop
rcr
rcrb
icebp
fdivl
out
dec
pop
cmc
stos
push
int
add
orl
mov
test
mov
incl
xor
scas
mov
xchg
jle
adc
leave
add
jmp
inc
das
xlat
and
push
stos
cmc
mov
add
enter
pop
shlb
aas
mov
pop
gs
jns
dec
lcall
lods
dec
mov
add
inc
pop
rcrb
fs
rolb
mov
fisttpl
push
pop
sti
xorb
les
cmp
adc
jno
jbe
push
sub
cs
pop
pusha
pop
movsl
pop
push
jns
pop
insb
mov
shl
loop
add
les
in
iret
add
lea
cmpsl
add
adc
inc
push
pusha
outsb
in
imul
rol
popf
jl
fstpt
jl
push
arpl
sub
repnz
arpl
sbbl
ss
loopne
pop
pop
les
add
dec
lcall
pop
add
mov
repnz
pop
std
orb
les
icebp
fists
xchg
mov
jb
jmp
xor
lods
pop
inc
jp
andl
mov
inc
and
jno
xchg
mov
mov
arpl
into
mov
adc
movsl
mov
jns
lcall
cmp
dec
stc
jo
out
gs
in
and
pop
je
cmpsb
dec
fiadds
add
fiadds
pop
stc
mov
xor
xchg
jb
push
adc
gs
xor
mov
cmovbe
or
call
sti
cli
dec
push
sbb
lods
outsb
leave
sbb
sbb
add
aam
push
mov
shr
mov
sub
xor
dec
mov
lods
push
sbb
pop
mov
rorl
stos
out
jb
or
sbb
dec
add
jecxz,pt
sahf
loopne
or
sub
test
scas
cld
dec
aam
rcrl
sbb
std
xor
cs
lods
icebp
push
mov
or
cld
sbbb
jae
push
subl
mov
icebp
fnstenv
dec
push
in
in
fadd
call
and
push
stc
xor
add
sbb
jmp
out
add
mov
jnp
outsl
mov
cmc
dec
popl
rcrl
dec
sti
push
fiadds
cmp
ljmp
add
pop
cmp
in
ficoml
jbe
mov
lea
adc
rclb
pop
inc
ds
sahf
push
or
pop
addl
adc
or
xor
mov
leave
mov
jno
or
push
pop
fisttpll
xor
outsl
packsswb
dec
push
xor
adc
popa
faddl
mov
addr16
jp
loop
cltd
push
mov
popf
movl
pop
mov
lahf
lea
cmp
test
jbe
lahf
les
dec
jne
repnz
jnp
mov
xchg
cmc
sbb
pop
add
cmc
cmp
jmp
std
in
lods
shlb
loopne
mov
js
jmp
je
ds
ja
jp
es
inc
mov
jno
fstps
pop
aam
bound
or
pop
lods
mov
hlt
adc
add
jnp
sbb
cmpb
outsb
repz
add
jne
cld
add
imul
repz
cmpsb
sahf
inc
cmc
leave
mov
lcall
into
lret
js
sub
lea
pop
add
ja
inc
or
loop
add
xchg
std
cmp
es
or
loopne
or
sub
inc
lds
mov
loope
pop
gs
outsb
pop
mov
aad
out
or
loope
pop
pop
sarl
xor
push
shlb
cwtl
bound
sub
bound
mov
outsb
popa
in
fnstsw
bound
jo
or
bound
ss
lock
fcoml
add
mov
movsl
push
sub
sub
mov
xchg
pop
pop
mov
adc
jnp
fs
lahf
call
gs
mov
int
fistl
sub
adc
xchg
or
mov
inc
test
push
lds
and
xor
in
bound
add
mov
bound
pop
fldcw
test
popf
push
dec
mov
leave
bound
pop
lahf
jb
push
insb
bound
fisttpl
bound
std
mov
or
mov
mov
jo
test
push
bound
scas
sbb
jne
push
dec
outsl
adc
ffreep
popa
or
rcrl
cld
jns
pop
andl
mov
pop
out
sbb
fwait
push
bound
jle
add
lods
jne
add
gs
test
jle
pop
test
fisubs
gs
xchg
cltd
loop
and
mov
test
bound
cmp
ljmp
and
cmc
cmpsb
int
inc
cld
insb
loopne
mov
cli
pop
xchg
shll
jmp
mov
in
outsl
inc
pop
cli
shrl
jne
push
dec
xchg
push
xchg
inc
cld
out
mov
addr16
mov
add
mov
das
aaa
xchg
fisttpl
int3
push
addr16
fidivs
fdivs
push
cwtl
mov
jno
pop
mov
mov
jae
pop
aad
xchg
imul
adc
inc
dec
dec
orl
fidivrs
sbb
sbbb
pop
sti
jnp
negl
ss
es
add
iret
mov
push
cmp
hlt
out
add
and
sub
sar
pop
or
addb
aaa
inc
mov
push
xchg
push
pop
pop
ja
loope
mov
clc
dec
popa
cmp
aaa
inc
pop
sarl
cmp
mov
jne
and
aaa
mov
or
adc
stc
jg
mov
push
pop
mov
inc
jno
inc
fstpl
icebp
pusha
dec
sub
pop
xchg
sbb
push
cmp
outsl
mov
out
sbb
insl
sub
sbb
push
stc
filds
sbb
pushf
mov
cmpsl
sbbb
mov
jb
xor
test
mov
ss
fs
xchg
pop
pop
fnstcw
es
imul
jle
pushf
out
loopne
insb
mov
int
push
jns
in
icebp
fcompl
push
xchg
pop
add
mov
sahf
pop
xchg
movsl
sbb
push
cld
cmpb
inc
push
mov
cmpsb
sub
jo
cmc
and
inc
scas
scas
bound
dec
addr16
shrb
adc
xor
lock
fildl
jmp
cwtl
loopne
and
pop
xor
pop
jg
inc
lock
xchg
stc
mov
dec
add
mov
fcmovnu
jnp
push
pop
pop
loop
test
subb
out
pop
lea
mov
xor
push
or
push
mov
lahf
xchg
negb
pop
je
pop
add
push
mov
pop
es
aad
pop
shll
mov
aam
jge
xor
leave
insl
int
jp
inc
test
add
fstpl
loop
mov
mov
xchg
pop
add
aas
jne
frstor
jo
mov
xchg
sub
and
mov
pushf
or
daa
and
jl
jne
inc
repnz
dec
lock
push
fwait
xchg
pop
mov
mov
jge
jle
jl
pop
sbb
stc
fisttpll
pusha
pop
mov
jne
gs
fstl
jp
add
int3
fscale
pushf
mov
pop
mov
jbe
mov
out
push
lea
shll
ss
lahf
lcall
mov
outsb
shll
out
std
movsl
xor
jle
stos
fisttpll
dec
lea
cmc
mov
xchg
adc
in
mov
add
mov
lods
adc
or
pop
rol
push
nop
imul
jp
sub
pop
stc
xchg
push
mov
xor
mov
pop
push
roll
cwtl
int3
loope
loopne
jl
int3
icebp
outsb
subb
loope
sahf
fwait
sbb
scas
loope
xor
loope
enter
sti
loope
push
fsubl
sbb
fldl
pusha
xchg
adc
dec
or
add
enter
popf
push
dec
sti
fisttpll
aad
mov
dec
cmc
add
fists
inc
popa
pop
add
mov
call
cmp
mov
or
mov
insl
loope
pusha
jo
mov
clc
pop
cmpsl
stc
pop
das
and
sub
loope
enter
std
push
push
ficomps
aaa
pushf
loop
jne
push
mov
les
jns
sbb
push
jl
cmp
test
mov
pusha
arpl
xchg
mov
aas
jne
adc
push
loopne
push
jmp
jo
mov
sbb
pop
sti
ds
push
and
mov
or
fsts
pop
dec
testb
stos
andb
lock
xchg
stc
jg
or
loopne
out
outsl
fistl
pop
adc
push
inc
lock
cwtl
loopne
mov
and
imul
loope
insb
loop
gs
std
mov
mov
lcall
mov
and
lea
adc
pop
pop
loope
lock
pusha
jnp
push
pop
cwtl
push
pop
mov
push
pop
or
enter
ret
add
mov
loopne
imul
mov
es
xor
add
mov
pop
jmp
adc
mov
xchg
bound
jb
fstpl
pushf
sbb
stos
lods
clc
loopne
lods
sbbb
std
call
daa
pop
add
pusha
daa
loopne
insb
loop
mov
xchg
ja
cmp
mov
out
fs
lret
cmc
in
filds
push
and
in
icebp
ret
cmp
lds
stc
fstpl
outsb
je
int
xchg
pop
popf
ss
and
push
or
lock
ss
sbb
sub
nop
pop
enter
shll
sbb
arpl
shlb
insl
pushl
pop
mov
adc
test
stc
loopne
add
pop
sti
fisttpll
cwtl
loopne
pop
lods
and
jle
pop
out
lea
fdivl
pop
ret
pop
sub
gs
jnp
inc
or
mov
cmc
mov
or
lock
pop
sahf
mov
test
subb
pop
shl
loopne
js
gs
adc
and
pop
xchg
or
inc
outsb
sub
stos
cs
pop
inc
test
adc
insb
sbb
pusha
aaa
sbb
int
and
popl
mov
push
adc
push
cltd
sahf
aas
and
insb
jno
jmp
mov
push
and
sub
and
in
mov
xchg
bound
mov
jo
imul
sub
aas
loopne
adc
loopne
repz
lock
xchg
or
lock
xchg
sti
movsb
mov
and
stc
filds
jmp
loopne
push
and
xchg
push
hlt
stc
imul
das
xchg
mov
lods
cmp
cltd
pusha
je
stos
movsl
in
gs
sarb
mov
ss
out
out
loopne
incl
rcr
pop
ret
adc
jecxz
xchg
mov
lock
adc
fistpl
in
shlb
fmull
cmp
mov
fistl
loopne
add
and
mov
int3
jb
lret
cmovo
push
inc
add
and
pushl
test
push
fistpl
shlb
fstl
jg
cmp
add
sub
in
popf
push
push
insb
in
sti
movsl
xchg
jecxz
in
gs
mov
enter
js
pop
jo
sub
insb
sbb
adc
daa
shrb
jno
gs
mov
jae
jl
fisttpll
cmpsb
sbb
movsl
dec
push
inc
jle
push
dec
pop
jno
gs
ret
ficomps
push
test
jp
pop
sarb
jo
insb
mov
fnstsw
in
popa
sub
mov
mov
mov
jno
int3
insl
pop
fwait
movsl
lods
jle
inc
adc
or
jne
cmpsb
push
pop
ret
push
inc
aaa
std
cmpb
mov
imul
adc
outsl
cmp
stc
inc
mov
repz
into
jl
jne
stos
or
pop
loopne
cwtl
and
sbb
ffree
and
push
inc
cwtl
ljmp
jb
inc
mov
mov
scas
and
sbbb
lahf
cmp
out
add
ja
lods
ds
cmp
pop
pop
jnp
dec
movsl
xchg
loope
and
enter
fiadds
imul
xchg
xchg
js
jb
add
gs
inc
loopne
dec
in
pop
and
pop
mov
xor
lock
fiadds
mov
jne
jge
loope
enter
push
jmp
jns
sahf
pop
jl
pop
jl
test
gs
in
jge
jne
ret
add
addr16
subb
out
pop
sbb
xor
insb
xchg
and
incl
add
imul
push
push
mov
popa
imul
pop
je
add
ljmp
addb
sub
or
jmp
cwtl
loopne
add
or
adc
ja
subl
push
imul
xchg
pop
mov
loop
jnp
push
xchg
test
jnp
xchg
or
lock
outsb
fistpl
pop
popf
mov
jecxz
fsts
sahf
fs
jge
jo
sbb
sahf
popa
fldl2e
inc
mov
xchg
mov
test
fwait
mov
popa
jae
inc
push
pop
and
bound
dec
push
cmp
fidivrs
jae
pusha
mov
mov
lock
inc
cmc
adc
js
dec
inc
pop
sahf
pop
inc
sbb
push
pop
cli
jge
mov
fwait
dec
insb
js
adc
xchg
insb
pop
aaa
ljmp
fildl
in
pop
int3
add
in
faddl
inc
jo
mov
ljmp
rcrl
cmpsb
xchg
pop
mov
das
movsl
adc
mov
pop
jo
mov
sub
fstpl
adc
pop
daa
fidivrs
icebp
add
loope
cmc
sti
in
testb
dec
push
sub
movsl
imul
movsl
push
lods
pop
shrl
cmpsl
pushf
test
outsb
mov
sbb
inc
sbb
push
insb
int
loopne
sub
pop
add
sbbl
sbb
sub
fstl
es
loope
xchg
int
shlb
jg
movsl
add
cmp
cmp
xor
loop
loope
in
pop
mov
and
pop
inc
mov
sbb
and
je
sub
es
std
js
jle
jne
repnz
xor
pop
fsubr
sti
jne
push
add
insl
loope
jne
add
pop
or
mov
xchg
push
pusha
pop
sub
loop
addb
mov
mov
call
cmp
pushf
mov
inc
outsl
jl
cmp
aad
sub
fdivs
and
pop
mov
push
fistl
movsl
je
push
cs
sbb
into
push
test
xchg
pop
sti
fisttpll
std
sbbb
shl
jb
pop
add
and
sbb
outsl
adc
xchg
insb
inc
pop
pop
int3
gs
loopne
xor
incl
mov
andb
sbb
mov
sarl
sbb
jge,pt
loope
jnp
int3
aad
aam
ficomps
sbb
pushf
aaa
fnsave
cmpsl
cmc
bound
and
push
jbe
pop
fistpl
sbb
pusha
push
inc
and
fstpl
frstor
jnp
mov
cmp
fists
aas
add
dec
sbb
fidivs
out
js
push
sbb
pop
pop
jle
jns
xchg
call
mov
xchg
xchg
fidivrs
dec
sbb
data16
loope
mov
sbb
lahf
push
mov
ficompl
loope
and
xchg
insb
mov
aad
fsubr
jno
loope
loope
enter
aam
push
dec
mov
mov
loop
test
inc
and
jl
int3
add
inc
cmp
in
xchg
pop
idivb
sbb
imul
sahf
jp
loopne
insb
push
test
call
jns
dec
jle
pop
ja
lods
inc
outsl
loop
imul
inc
mov
loopne
int
cmc
jb
cmc
and
movsl
jle
lods
outsl
pop
push
repz
rcll
add
lea
pop
push
mov
imul
imul
int
fsubrp
sti
jne
dec
dec
mov
xchg
call
jae
test
js
dec
fwait
icebp
movsl
sbb
adc
hlt
or
lea
movsb
mov
pushf
fbstp
loopne
xchg
loope
incl
outsb
dec
fwait
cmp
or
or
and
pop
movsb
jne
int
stc
dec
jg
pop
js
and
cs
sbb
pusha
push
inc
jge
in
fisubs
xchg
insb
frstor
cmp
cmc
pop
pop
inc
and
xchg
pop
into
ss
push
xchg
pusha
fdivrp
arpl
mov
jae
and
pop
loope
subl
dec
int3
inc
pop
jno
sbb
insl
pop
pop
inc
and
movsl
insb
dec
push
call
ret
pop
loope
inc
ret
xchg
xor
jb
or
xor
jle
aad
negb
mov
xchg
int
push
stos
inc
fst
cmp
inc
js
aaa
inc
fnstsw
dec
es
inc
jge
int
andb
out
jle
lods
ja
or
loopne
frstor
ds
pop
push
in
sub
push
inc
sbb
loope
pop
mov
call
addb
push
int
gs
bound
shll
lock
bound
mov
fbstp
add
loop
or
pop
insb
lret
scas
orb
loope
rcrb
xor
fisubrs
sbb
leave
push
ds
and
jl
int3
add
movsl
cld
mov
out
mov
or
inc
out
or
dec
adcb
fsubrl
add
jp
pop
cmpsl
and
or
pop
aas
les
popf
arpl
mov
dec
lret
andb
pop
jl
int3
es
adc
in
jle
lods
out
or
clc
pop
xchg
fnstsw
xchg
call
mov
cmp
jb
mov
push
loope
insb
lahf
test
leave
in
int
loopne
sti
jne
pop
xchg
fucom
sub
loope
mov
push
adc
or
icebp
cmp
dec
cmp
fcompl
cmp
push
jp
pop
ret
jo
and
cmpsl
sbb
and
pop
pop
xchg
test
and
sbbb
loop
xchg
in
inc
loopne
ljmp
bound
hlt
cs
gs
pop
and
jb
lock
dec
or
push
mov
jnp
push
fwait
mov
or
push
fsts
adc
fistpl
in
inc
lock
loop
test
sbbb
fsubrp
pop
cmp
jmp
fcomi
jg
xchg
xor
jb
mov
stc
pop
inc
sahf
jmp
int
dec
mov
test
ret
scas
jae
es
pushf
imul
popf
mov
std
jb
mov
stc
loope
sbb
in
cmpsb
out
stos
fsub
ret
lock
fs
lret
push
ds
add
xchg
or
lock
jbe
pop
jbe
int
mov
stc
pusha
inc
mov
sub
jb
mov
stc
filds
jmp
js
int
push
jmp
js
pop
jl
inc
lock
fldt
inc
movsl
jle
pushf
gs
enter
jno
fs
pop
sbb
mov
loopne
mov
jnp
push
dec
pop
repz
lods
mov
loopne
pusha
dec
mov
xchg
ja
cmp
fists
fistpl
clc
fiadds
ret
lock
jbe
pop
icebp
pop
ds
jmp
and
pop
pop
cmpsb
add
fs
enter
ret
xor
cmp
test
xor
loopne
and
jne
sti
fucom
adc
lods
aas
fnstcw
sub
dec
test
fcoms
loope
scas
xchg
imul
sahf
popa
fnstcw
push
fwait
pop
push
in
movsl
mov
or
clc
sti
imul
or
shl
sub
jg
loopne
jnp
xchg
cmp
int
in
shlb
fisttps
pop
jns
jge
test
push
test
lods
mov
lods
aas
fcompp
jnp
push
les
andl
cmc
xor
sti
fisttpll
push
in
out
loopne
incl
add
fistpl
dec
mov
or
pop
xchg
icebp
andb
call
add
fsub
inc
stc
pop
sti
fnstsw
cwtl
loopne
pop
lods
and
int
sub
cmc
push
loop
cwtl
fsts
fs
fcomps
pop
add
pop
ret
xor
cmpsl
jo
xchg
negb
nop
inc
outsl
xor
sti
scas
ja
xlat
mov
divb
les
push
jecxz
cmpsl
jnp
inc
xchg
jmp
inc
add
pop
inc
loopne
popa
xchg
stc
jl
mov
pop
or
lods
mov
or
lock
adc
add
sub
in
arpl
and
pop
pop
dec
jecxz
filds
lock
pop
call
fsub
ret
lock
fistl
ljmp
add
loop
xor
jle
sub
in
and
pop
or
push
test
xchg
ret
inc
pushf
push
push
enter
andb
mov
int
in
shlb
fmull
dec
in
fidivrs
pop
fnstcw
xor
rol
sub
jmp
inc
test
sahf
sarb
fs
lock
xchg
rcrb
push
add
mul
lods
and
mov
fs
test
jge
mov
mov
loope
scas
fs
cmc
cmpsb
mov
cmpsl
andb
jl
pop
or
sub
sbb
cmpsl
jnp
inc
test
fiadds
pop
and
test
push
stc
pusha
inc
jnp
sbb
negb
adc
sub
jmp
adc
cltd
push
sub
push
push
cmp
movsl
mov
or
lock
stc
add
fnsave
pop
inc
fnstcw
es
jb
int
pop
pushf
out
loopne
xchg
lods
and
dec
repnz
loop
test
pop
xchg
stc
sbbb
push
pop
and
inc
lock
repz
pop
aam
in
lods
sahf
pop
fnstcw
test
testb
lods
cmc
jmp
inc
fildll
push
cs
mov
mov
lock
fcompl
xor
loopne
and
mov
lds
aad
imul
inc
std
loopne
pop
pushf
pop
popf
jne
jo
iret
xchg
mov
lods
and
lods
mov
pop
or
jg
loopne
jmp
sarb
inc
loopne
mov
gs
cwtl
inc
mov
mov
pop
push
stc
inc
push
mov
inc
loop
and
mov
ds
mov
fnsave
arpl
popf
sahf
negl
out
pop
mov
stc
push
inc
lret
das
jge
mov
dec
in
loope
movsb
fmul
leave
pop
pop
aas
pop
jne
int
sbb
enter
addr16
ss
push
or
jns
adc
sub
mov
xchg
mov
lods
and
mov
cmp
test
push
mov
loopne
in
ds
mov
jnp
push
sbb
movsl
add
rcrb
lods
mov
loopne
inc
mov
call
cmc
shlb
fsub
and
pop
jmp
inc
pushf
arpl
test
pop
xchg
stc
sbbb
test
and
cmpsl
sbb
test
sahf
xchg
jl
into
push
cli
pop
sbbb
cmp
cmp
data16
aas
adc
mov
jecxz
sub
inc
imul
push
add
loop
loope
jne
add
loopne
jo
or
sbb
shlb
inc
jp
mov
movsl
js
int
bound
call
imulb
xchg
loope
cmp
and
pop
stos
pushf
push
mov
push
pushf
push
mov
ss
mov
cli
loope
and
lods
into
add
loope
loope
mov
pop
out
jmp
push
pop
push
popf
imul
movsl
dec
icebp
sub
ja
shl
mov
inc
loopne
xlat
cmc
pop
fcompl
xchg
insb
cmp
in
fwait
jae
cmp
loopw
insb
outsl
fstpl
inc
loope
lea
mov
jmp
int
movsl
add
pop
add
ds
xor
mov
movsl
push
pop
pushf
jnp
jo
and
mov
ret
sub
sarb
loope
pop
lahf
stos
test
pop
inc
mov
loopne
mov
into
jne,pn
cmpsl
cmc
fildll
and
xchg
jle
inc
lock
bound
out
in
ja
loope
pop
inc
adc
imul
inc
and
jl
int3
xchg
push
cmp
fistpl
es
lea
ret
xchg
repnz
cmovno
dec
jne
aad
and
cmp
pop
loopne
xchg
cmc
pop
mov
aaa
jne
sbb
dec
cmpsb
pop
pusha
add
les
ja
sbb
insb
shll
test
shl
or
lea
and
pop
iret
mov
frstor
aaa
outsb
into
push
adc
mov
jmp
insb
aaa
testb
js
stc
loope
cmc
and
mov
adc
popa
pop
add
loope
mov
in
pop
iret
xorb
mov
test
shlb
aaa
pop
loopne
ja
inc
fsubl
mov
loop
push
inc
ret
jne
mov
lahf
aas
dec
in
jae
lods
in
loope
and
xor
add
sub
ret
xchg
pop
dec
aam
xor
jo
xchg
xchg
lds
into
movsl
jbe
pop
mov
aad
rcrb
int3
inc
loopne
xor
js
lcall
pop
sub
add
and
cmp
mov
add
fistl
aas
lret
jne
add
push
js
in
dec
jb
popf
insb
dec
frstor
mulb
push
mov
bound
movsb
mov
imul
pushf
add
loope
enter
test
xor
loopne
push
push
bound
dec
ds
and
ljmp
jle
dec
pop
mov
mov
out
popf
dec
popa
repnz
shrb
sbb
test
std
jle
lods
outsl
bound
xor
jb,pn
adc
xchg
insb
fcompl
pop
pop
xchg
repnz
xorb
mov
dec
add
pop
mov
xor
js
cs
fdivrs
pop
mov
xor
loope
and
cmc
pop
cmpsb
int
mov
jle
lods
out
aam
mov
xor
or
loop
push
enter
cmpsb
bound
stos
cwtl
fnsave
fwait
insb
mov
add
pop
add
ja
mov
bound
mov
ds
and
loope
push
es
std
int
testb
icebp
cmpl
ffreep
jns
cs
stc
pusha
das
shll
call
jl
fsubr
cmp
movsl
loope
dec
adc
bound
and
aam
inc
push
pop
mov
stc
loope
fists
stos
insb
sbb
add
adc
xor
adc
fstl
jle
lods
outsl
pop
push
repz
inc
popa
pop
jno
mov
shlb
ficoms
pop
jmp
fidivs
push
mov
mov
sbb
add
aam
jb
sbb
in
ret
insb
cmc
push
xor
push
rcrl
shll
jbe
adc
scas
inc
int
js
lds
pop
jb
cld
cmc
xchg
ficomps
repz
outsl
push
pop
pop
pop
mov
loop
insb
lods
push
mov
pop
je
push
pop
inc
lcall
inc
sbb
pop
out
inc
dec
xor
fwait
insb
xor
mov
int
fstpl
cmp
mov
pop
dec
mov
jno
movsb
xor
xchg
pop
pop
add
ds
sbbl
mov
imul
lret
ficoms
sbb
lahf
push
dec
pop
jo
ror
fbld
jg
lock
sahf
enter
insb
xorl
cltd
push
pop
popf
loopne
mov
test
enter
pop
inc
and
outsl
add
movsl
je
fsub
js
cs
subb
pushf
cli
popf
test
pop
sbb
jo
pop
pop
insb
push
cmp
xchg
lods
jle
lods
out
int3
movsb
mov
insl
loope
mov
pop
sbb
xchg
insb
jg
adc
das
or
ja
pushf
mov
jne
cs
bound
pop
js
mov
dec
fistpl
push
xor
add
cli
in
cmp
nop
pop
mov
loopne
jle
lret
scas
sbb
cmc
addr16
imulb
sub
push
jmp
inc
test
jae
cli
bound
aad
loopne
popa
lods
and
jle
pusha
std
mov
loopne
fsubl
pop
jo
in
cmc
imul
and
pop
sub
sbb
mov
loopne
test
mov
mov
inc
jbe
jle
mov
xchg
negb
and
mov
int
push
pop
mov
loopne
test
mov
imul
mov
arpl
xchg
jb
xchg
cmc
add
cmc
fnstsw
xchg
inc
inc
test
loopne
sbb
pop
xor
add
loopne
pop
fnstcw
xor
push
cltd
and
add
loopne
sbb
mov
pop
idiv
stos
loopne
pop
fnstcw
xor
cmp
out
call
sbbb
xchg
jne
std
out
xchg
pop
inc
jmp
int
xchg
mov
lods
cmp
pop
ja
xchg
cs
loopnew
cmc
bound
jmp
lret
sbb
movsl
divps
or
test
inc
imul
dec
test
stc
popa
inc
popf
call
repnz
test
and
cmpsl
and
jne
sti
test
xchg
mov
lods
and
mov
test
mov
sub
jge
add
negl
jne
and
fwait
inc
dec
mov
arpl
xchg
pop
repz
mov
ret
cmc
xor
jb
ja
popf
mov
ret
pop
and
mov
popa
pop
insb
mov
pop
cmp
mov
mov
or
jno
out
scas
cmp
pushf
push
inc
aam
mov
inc
leave
pop
push
insl
popa
sahf
mov
frstor
dec
pop
mov
jbe
jle
std
add
fstpl
cmc
sti
jb
popa
push
jl
cmp
and
fstp
ss
lcall
movsb
cltd
push
lcall
fwait
inc
jmp
push
and
sub
inc
push
inc
dec
sbb
cmp
sub
or
pop
jg
xchg
push
cltd
cwtl
mov
add
fcompl
lret
shlb
mov
sbb
aam
in
sbb
sbb
jne
mov
inc
xor
repz
pop
adc
and
cmc
scas
aad
add
stc
std
fsubrs
pop
jno
movsl
dec
test
mov
mov
pop
ret
pop
cmpsb
loopne
inc
insl
movsb
push
pop
ljmp
and
fcompl
data16
pop
fstps
std
repz
pop
cs
ds
orl
int3
lods
inc
inc
lock
mov
and
cmp
pop
in
and
ja
and
jge
je
xor
cmpsl
out
fnstsw
fcompl
pop
stos
outsl
mov
push
sub
pop
and
inc
sbbb
adc
pushf
in
cwtl
sub
sbb
ffree
jmp
jmp
in
mov
or
mov
popf
jge
pop
jl
dec
out
cmp
mov
in
ret
jne
xchg
cmp
test
fstpl
scas
cmp
sub
dec
imul
sbb
aas
adcb
sahf
pushf
sbb
jmp
pop
push
mov
pop
cs
shlb
jmp
cmp
dec
pop
leave
not
sbb
rolb
lods
sahf
test
roll
stos
sbb
xor
in
pop
and
cmp
ja
jle
jbe
lods
gs
xor
push
aam
popw
adc
xor
sub
cld
mov
cld
xrelease
or
int
mov
je
pop
adcl
lods
repz
in
jbe
sbb
push
pand
mov
mov
in
cmp
xchg
icebp
jnp
call
and
jg
outsb
push
jecxz
fcmovnu
push
sarb
rcl
add
lcall
fdivr
xchg
jle
push
inc
in
and
xchg
outsl
fsubl
out
pop
cs
mov
adc
xchg
cmp
insl
adc
in
cld
icebp
lahf
add
adc
loop
inc
pop
or
inc
les
push
les
out
imulb
jb
mov
mov
jge
ss
xor
sbb
shlb
xchg
rcrb
mov
cmp
repz
aad
pop
call
pop
int
fstps
or
jle
insl
sub
or
lahf
loopne
add
mov
cmpsb
mov
xor
mov
sub
fstl
dec
cld
rcrl
adcb
push
xor
arpl
mov
push
xchg
je
dec
xorb
bound
lahf
into
rcll
ljmp
and
repnz
xlat
lcall
inc
xchg
aas
and
loopne
push
shll
pop
jle
popa
repz
mov
aas
adc
push
loopne
hlt
adcb
movsb
test
negb
inc
js
pop
mov
sbb
loop
sti
xchg
call
jg
adc
or
cmovg
add
lcall
fistps
mov
arpl
cld
xchg
pusha
xor
lea
in
test
push
sub
popa
jle
cs
push
outsb
or
pop
sbb
hlt
cmp
push
jbe
in
xchg
icebp
and
mov
lcall
xor
jne
and
js
in
push
arpl
xchg
das
imul
push
jp
subb
je
sti
in
cmpb
out
jbe
mov
popa
aad
movsl
pop
adc
and
xor
mov
stos
xor
lahf
loope
mov
into
std
or
or
ficomps
and
mov
xchg
repnz
jecxz
mov
loop
sbb
clc
pop
imul
lret
xor
in
mov
fildll
jmp
push
xchg
repnz
cmp
add
xchg
loopne
pusha
xchg
mov
jp
cmc
rcr
mov
popa
mov
cmp
jnp
loop
jl
dec
insb
fucomip
data16
aas
sbb
lahf
adc
pop
add
test
call
push
sarl
add
loope
inc
pop
and
or
jne
loope
and
jnp
in
jnp
pop
ds
sti
loope
and
sbb
pushf
mov
ds
adc
pop
jnp
in
add
test
insl
orl
xor
push
hlt
xor
faddp
inc
lahf
cmc
jg
les
and
sbb
cmp
xchg
jnp
stos
xchg
jmp
fistpll
sbb
xor
ficomps
cmp
int
repz
imul
ficomps
inc
shrb
jo
jns
and
sbb
mov
in
addl
repz
add
xchg
xchg
out
fxch
lcall
aaa
filds
xchg
and
mov
jle
pop
out
push
adc
lcall
mov
jle
mov
je
sbb
jle
orb
stc
orl
jl
loopne
sbb
adc
cmp
or
test
cmp
lea
stos
loop
rcll
mov
sbb
lret
lahf
lds
or
jle
loopne
adc
cwtl
inc
jbe
aas
add
jnp
scas
inc
jge
mov
popf
in
imul
and
cld
test
pop
push
nop
inc
in
mov
stos
pushf
sbb
and
push
cmc
mov
push
pop
jae
jbe
sbb
insl
addr16
daa
push
sti
into
mov
push
aas
xchg
pop
std
lahf
in
imul
or
addr16
mov
mov
add
sbbl
rol
outsb
pop
mov
sub
test
pusha
pushf
repz
iret
cmpsb
mov
cmp
jge
cmp
push
fildll
pop
test
add
sbb
sub
movsl
loope
pop
or
cmp
cmp
fldenv
sti
inc
fwait
insb
push
mov
loope
mov
loop
sbb
push
and
add
sub
pop
pop
sbb
pop
sbb
pop
cmpb
loop
xchg
inc
dec
cmpl
loope
cmpsl
pop
dec
test
lea
mov
icebp
push
andl
clc
imul
dec
jne
mov
add
jnp
mov
cmp
addr16
mov
jmp
jge
lds
jl
sub
repz
ds
inc
imul
inc
adc
pushf
lods
in
xchg
clc
mov
cs
mov
cmpsl
loope
imul
std
aaa
xor
jno
rcrb
pusha
add
mov
in
int
jae
jbe
push
in
jge,pn
cmpsb
adcb
es
imul
outsl
and
push
push
cwtl
sbb
push
push
pop
pop
jne
and
jmp
or
popa
mov
sahf
or
iret
xor
out
stos
jl
inc
and
cltd
add
inc
and
outsb
scas
add
mov
mov
fwait
ret
pop
les
pop
inc
pop
push
mov
cmp
mov
out
xor
add
inc
ss
dec
jge
and
or
sahf
push
mov
jmp
adc
outsl
and
fnstenv
cmpsl
cmpsl
popf
dec
push
push
pop
fdivr
push
loop
test
out
adc
cmc
push
fildl
ret
cmp
sub
repz
push
push
shlb
pop
dec
jp
mov
sub
and
jb
pop
or
shll
dec
movsl
shlb
push
or
mov
sbb
fisttps
sbb
add
mov
xor
outsb
lcallw
aad
pushf
in
clc
and
inc
cmp
js
notb
das
jl
xchg
fidivs
cs
filds
jle
pop
popf
and
mov
inc
fcmovne
jp
lods
ss
je
pop
sbb
sub
dec
rcl
popa
inc
and
iret
xchg
cmpb
xchg
mov
mov
mov
and
sbb
pushf
xor
movsb
mov
xchg
pop
jecxz
rcrl
xor
push
lcall
push
or
fsubr
data16
cmp
and
scas
negb
ret
fistpl
pushf
jmp
cmp
cmpsl
jmp
mov
mov
movsl
jmp
cmpsl
dec
cmpsl
jg
mov
mov
and
add
mov
mov
test
xor
movsl
outsl
pusha
pcmpeqd
cmpsb
mov
jge
mov
cmc
jb
xchg
dec
test
cmc
stos
pusha
pop
dec
push
in
pop
jle
lahf
pop
sti
mov
jge
insl
fdivrl
test
sahf
cmpsl
outsl
rolb
cltd
das
mov
daa
push
stos
xor
movl
push
out
in
lock
int
add
inc
imul
push
xlat
cwtl
or
pop
mov
push
hlt
aad
xor
insl
mov
cmp
rcr
enter
addps
fnstsw
ss
lods
les
jno
add
jne
sbb
call
ss
cmp
add
jno
push
sbb
fs
sbb
mov
stc
lret
ljmp
and
add
jle
stos
popa
push
cltd
sbb
stos
dec
cmp
jmp
hlt
fdivl
aaa
adc
cld
aad
mov
pop
jb
loopne
ljmp
cld
mov
dec
add
in
mov
mov
pop
sub
aaa
adc
mov
push
cmp
test
sbb
out
dec
add
fcomps
inc
pop
pusha
cmp
mov
loopne
or
aad
test
aaa
dec
and
adc
adc
jns
in
cmp
popa
rcll
add
pop
inc
std
add
sub
fists
jle
das
jo
or
insb
add
sub
out
aam
je
bound
mov
out
leave
lea
push
mov
in
fistps
mov
in
inc
lods
inc
mov
jp
sub
fstl
sbb
sub
xor
jle
mov
mov
dec
pop
movsb
xchg
xor
pop
xchg
and
push
into
adc
rorl
sbb
aam
adc
or
das
stos
jne
fwait
push
mov
inc
iret
jl
xchg
je
inc
in
ja
insb
jbe
scas
stos
ss
cmp
xchg
add
in
dec
cmp
daa
push
ljmp
fistl
and
mov
inc
fstpl
inc
icebp
loop
or
dec
sub
dec
jnp
mov
cmc
mov
imul
sbb
ffree
es
pop
push
push
mov
or
push
out
or
fildl
mov
ffree
mov
pop
push
lahf
notl
sbb
push
push
popf
xor
pop
movsl
inc
jo
mov
cs
pop
sub
fidivs
pop
fistpll
lods
fcomi
sub
sti
es
test
flds
pop
popf
sbb
and
aas
lahf
cmp
jp
stos
mov
sub
daa
sbb
popa
and
push
mov
dec
mov
out
into
nop
andb
sbb
das
cwtl
outsl
push
and
fimuls
imul
jl
mov
xchg
jnp
add
mov
sub
fs
in
sbb
imul
icebp
sahf
sbb
mov
xchg
xchg
out
mov
fsubl
adc
in
bound
std
or
iret
imul
push
jns
and
inc
stc
imul
add
loop
fdiv
call
mov
mov
fdivrs
fbstp
push
mov
mov
les
lea
jns
outsl
mov
out
cltd
aad
pop
xor
sti
insb
idivl
cmp
out
add
lcall
jbe
dec
jl
mov
and
mov
fdivrl
push
xor
out
mov
lret
mov
jbe
jne
push
mov
sub
outsl
push
add
mov
in
jno
inc
arpl
div
dec
jp
mov
xor
aaa
fstl
sahf
enter
aaa
add
test
fwait
ds
sub
insl
cmp
movsb
enter
iret
adc
repz
adc
sub
mov
repz
bound
popa
jmp
sub
jecxz
rcrb
in
pop
xchg
inc
xor
jp
jae
in
xchg
sub
loop
stc
sbb
sbb
pop
frstpm(287
push
pop
loopne
xchg
fstpl
popa
xchg
pop
inc
pushf
pop
xchg
inc
call
sbb
inc
inc
cld
dec
lock
icebp
mov
cs
and
sub
movsb
mov
pop
push
cmp
xor
inc
je
outsb
xchg
ss
sbb
ss
adc
or
or
jge
sbb
popf
inc
sub
sbb
add
data16
adc
neg
and
test
mov
inc
pop
push
xchg
bound
jp
xchg
pop
daa
lock
stc
enter
push
lcall
out
cld
adc
sbb
aaa
jae
mov
mov
xchg
adc
loope
ret
push
mov
pop
add
cmp
repz
push
lea
cmpsb
daa
movhps
mov
pop
xchg
std
js
in
imul
sub
repnz
loope
cmp
add
dec
inc
pop
and
or
lods
out
lea
xchg
jo
lea
jl
cmp
ss
sbb
mov
dec
or
pop
sub
sub
or
stos
loope
repz
add
test
mov
xchg
shll
mov
dec
cmpsl
pushf
out
testb
dec
addb
jns
push
pop
ljmp
xlat
mov
sub
iret
push
rorl
sbb
and
or
repz
fstpl
bound
bound
pop
stos
adc
call
mov
lock
jae
mov
test
mov
rcll
push
mov
ds
ds
inc
adc
mov
and
add
ficompl
dec
in
pop
je
add
xrelease
and
cmc
mov
sbb
int
sub
xor
loop
and
sbb
fistl
adc
sub
jl
sahf
xor
pop
jb
jnp
rcll
jp
popa
repz
mov
jle
sahf
adc
shll
lds
cmc
xchg
gs
add
rcrb
pop
jge
xchg
outsb
in
ret
lods
movsb
and
sbb
es
and
jle
dec
movsb
mov
fidivrl
cltd
sub
and
cmp
lahf
pushf
rcr
xchg
cs
push
pop
popa
in
jmp
push
add
and
ss
int
movsb
mov
das
frstor
movsl
jne
mov
mov
dec
mov
movsb
addr16
push
clc
mov
jp
add
js
lds
mov
int
sub
mul
ds
sahf
and
push
cmc
add
push
outsb
enter
fcmovbe
fldt
sub
mov
jp
ficomps
imul
push
jle
mulb
movsb
mov
clc
in
rorb
jo
cmp
movsb
fwait
popf
jp
lods
movsl
movsb
movsb
sub
ljmp
cmc
push
lcall
push
push
sub
scas
cs
lods
aad
movsb
fiadds
inc
pop
dec
pop
movl
popl
xor
pushf
push
into
pop
sub
ljmp
pop
aas
lret
add
add
jno
in
pusha
xchg
loop
pushf
sbb
mov
jnp
lret
adc
adcb
pop
sub
arpl
push
dec
js
lcall
xchg
js
ficoml
enter
leave
call
inc
xorb
out
orl
int3
cmp
repnz
or
shll
addr16
pop
movsl
cmc
push
fstpl
aas
fsubrl
add
int
pop
lds
loopne
sbb
xchg
incb
js
pop
mov
inc
pop
in
mov
movsb
fimuls
sub
faddl
test
clc
out
insb
and
push
loopne
jp
pop
mov
ds
jle
and
ret
dec
leave
loopne
in
int
and
repnz
cmc
fistps
xchg
pop
icebp
es
lea
cwtl
shlb
movsl
inc
pop
push
mov
and
insb
lahf
clc
in
int
decb
popf
pop
outsb
shl
daa
jmp
cld
loopne
or
mov
ljmp
movsb
movsb
jo
lcall
lahf
ljmp
cmp
sbb
testb
dec
cmc
sub
orb
add
fstpl
and
shlb
clc
popf
mov
loopne
outsb
xchg
lret
mov
push
loopne
pop
mov
jb
or
or
mov
xchg
jge
pop
push
movsl
pop
push
loopne
pop
xchg
popf
stc
movsb
add
mov
push
ss
mov
movsb
cmpb
add
push
movsb
jb
xchg
aad
fnstsw
stos
flds
jne
repnz
dec
xor
aam
ljmp
xlat
xchg
push
and
fwait
mov
movl
ss
or
in
jne
repnz
scas
les
cltd
add
js
add
fwait
lods
xor
push
add
sbbl
pop
frstor
out
cmp
pop
and
int
ret
mov
negl
dec
pop
into
int3
and
push
insb
jle
push
xor
inc
int
pop
aam
jle
pop
xor
and
dec
dec
lods
out
bnd
push
rcrl
mov
pop
push
xchg
ljmp
ret
jns
pushf
int
xor
mov
repnz
aas
cmp
insb
loopne
add
loopne
push
and
je
mov
lahf
push
pop
jge
jmp
and
cmp
in
inc
rcl
arpl
cmp
mov
sbb
repnz
sub
sarb
inc
mov
mov
and
popf
and
dec
jl
aaa
pushf
repz
inc
xchg
pop
jecxz
out
mov
shlb
in
cmpsb
jle
ljmp
or
out
dec
sbbb
das
xchg
fldt
sub
ljmp
adc
negb
in
bound
or
mov
sub
pop
xchg
jecxz
movsb
outsl
adc
fidivrl
inc
es
xchg
mov
add
cmp
xorb
adc
and
insb
cmp
gs
xor
push
jo
cmp
dec
mov
in
mov
int
mov
decl
popa
xchg
insb
xor
jl
jno
das
sbb
sarb
addr16
mov
popf
test
test
push
lahf
lcall
dec
imul
and
imul
jae
cltd
ja
push
andl
push
xchg
xor
push
mov
ljmp
mov
pop
ficompl
test
cmc
push
test
push
cmpsb
sahf
or
test
add
lret
push
mov
pop
push
jae
dec
aaa
or
fimuls
inc
sbb
xchg
pop
les
shr
push
lcall
cli
mov
insl
cmpsb
movsl
sbb
sub
push
test
push
stos
pop
daa
inc
mov
jg
sbb
int
pop
fnsave
insb
outsl
add
cmp
sbb
movsl
add
int
mov
push
mov
xchg
fmull
mov
xchg
cmc
and
pop
popa
sub
and
in
lods
jns
sub
pop
xlat
pop
rcrb
enter
inc
leave
js
cmpsb
push
les
jecxz
das
ret
pop
mov
arpl
sahf
and
ss
pop
movsb
xchg
js
out
inc
sbb
in
and
and
sbb
sar
mov
sbb
rcr
idivb
mov
repz
in
aaa
push
cmp
lret
loopne
aad
mov
jo
sbb
fwait
imul
lds
cmc
sbbb
test
jne
int
out
push
loope
ja
xchg
cmp
xchg
clc
insb
jle
insl
cli
pop
pop
mov
bound
jg
jecxz
aaa
sub
pop
test
in
jle
movsl
push
sub
lods
xchg
icebp
loope
or
pop
adc
cmp
mov
out
pop
shrb
mov
insl
jbe
adc
cmpsl
aaa
pushf
jmp
insl
enter
pop
test
inc
pop
fimull
jne
cli
xor
and
jb
std
test
push
loope
enter
xchg
in
ffree
and
insb
andl
cmpsl
cmp
mov
mov
shll
outsb
icebp
cmpsl
jnp
int3
and
adc
lahf
cwtl
in
bound
aad
insb
mov
clc
push
in
loopne
int3
test
jbe
clc
sti
lcall
jo
mov
fidivs
orb
lahf
mov
sub
xlat
jo
lret
std
mov
sarb
lret
popa
push
inc
fdivr
dec
arpl
addr16
xchg
pop
push
aaa
xchg
push
rcrl
cmp
imul
jnp
add
pop
jmp
mov
fwait
jmp
cmpl
daa
and
bound
cmp
in
daa
jne
stos
cmc
sbb
cltd
mov
sbb
out
lods
stc
cmpsl
cmp
stos
or
cltd
jmp
outsb
jecxz
bound
dec
lea
xchg
mov
pop
pop
inc
dec
adc
rorl
and
repz
cld
nop
mov
mul
jbe
xchg
popf
add
jne
xchg
andb
shl
and
jge
adc
cmp
std
mov
nop
and
mov
mov
xor
icebp
rcl
and
pushf
clc
jmp
sti
int3
mov
fwait
xchg
cmc
mov
imul
cmp
mov
loop
push
adc
fstl
sub
rolb
and
ljmp
pushf
les
push
enter
jl
lahf
jne
jle
adc
cmpsl
adc
sbb
aad
scas
lds
or
jecxz
filds
cmp
addb
xor
dec
push
jg
sti
jno
push
imul
push
out
sub
jge
adcb
imul
ds
mov
and
scas
and
mov
xor
add
or
outsb
pop
popf
outsb
mov
or
mov
mov
lcall
mov
cltd
jge
in
xchg
jle
cmp
adc
enter
ret
adc
add
pop
jg
xor
sbb
mov
imul
fldcw
inc
movsb
mov
jmp
push
icebp
ret
sbb
jp
stos
jb
push
pop
das
call
lret
repnz
fidivrs
int
adc
std
fwait
xchg
and
xor
pop
int3
pushf
xor
loop
mov
cs
std
std
jne
xor
addr16
aam
mov
push
cltd
cmpb
pop
dec
icebp
mov
cs
pop
xchg
push
pop
pushf
sub
call
xchg
test
push
and
sbb
add
sahf
xor
loope
lcall
mov
adc
iret
jle
test
mov
fstl
pop
xchg
jbe
pop
scas
mov
inc
out
bound
push
icebp
inc
push
int3
sbb
and
std
stos
lock
dec
or
movsl
xchg
dec
in
xor
adc
popa
dec
fnstcw
inc
outsl
xchg
xor
jbe
pop
sub
jo
jbe
repz
pop
inc
fcom
cmpsl
xorb
mov
xor
imul
mov
add
jp
fucomip
loope
mov
mov
dec
inc
stos
dec
subl
test
inc
xchg
jle
sbb
inc
insl
mov
frstor
lret
pop
lods
inc
loop
mov
std
pop
das
repnz
mov
inc
and
add
add
sub
rol
push
inc
popf
jns
in
cmp
ss
jno
pop
dec
subl
jmp
in
and
adc
push
add
pusha
aad
aas
or
popf
stos
and
in
lea
pop
bound
and
mov
jmp
dec
outsb
rolb
mov
mov
lahf
outsb
pop
ret
inc
popa
pop
aas
cmp
push
std
sbb
cmc
cltd
faddp
jnp
insl
ds
pop
or
fstl
es
jno
jle
dec
data16
repz
xchg
jb
push
outsl
arpl
scas
and
data16
add
test
push
xchg
cmp
imull
lods
in
add
xor
jns
xor
jne
add
push
sub
jecxz
jmp
leave
xorb
jo
shll
loope
jnp
test
and
xor
inc
jg
mov
sub
test
adc
pop
inc
shll
xchg
cs
in
sub
outsl
sbb
dec
mov
imul
adc
repz
jl
cmp
and
jle
xchg
jle
jmp
add
sbb
loopne
test
into
insb
sarl
and
adc
jp
mov
lret
jbe
and
mov
cmp
jne
jb
mov
pop
outsl
and
sub
fwait
lds
add
inc
inc
pop
and
push
adc
or
scas
xchg
push
fistpll
adc
cmpl
nop
outsb
sbb
ljmp
movsl
js
pop
ret
aaa
adc
pop
loopne
push
pop
ret
sbb
int
roll
repz
mov
ss
xchg
jne
and
insl
rclb
and
movsb
loope
adcb
lock
xchg
mov
push
fwait
jge
inc
outsl
aas
xchg
mov
sahf
xchg
insl
orl
lahf
jle
sbb
stos
jl
push
inc
lock
fnstcw
jne
jle
aas
cld
sbb
add
lret
mov
sbb
add
jg
insl
in
idivb
shrb
imul
test
mov
aam
push
adcl
pop
hlt
push
out
and
aas
inc
ret
stos
in
not
and
dec
test
fsubl
mov
insl
subb
xchg
pop
stos
lahf
fldl
sbb
cld
or
xchg
pop
mov
inc
xor
aaa
mov
sbb
int
ljmp
jl
jbe
repnz
adc
cmp
hlt
rolb
push
insb
pop
test
mov
jo
pop
rep
and
push
xor
push
mov
add
roll
ja
loop
xor
push
mov
cmpb
cmp
outsl
popf
pop
push
sub
mov
jo
loop
and
test
insl
pop
xchg
jmp
lcall
xchg
jmp
fldt
test
fsubr
cmpsb
adc
xlat
push
and
mov
push
push
jmp
iret
push
pop
enter
fistpl
push
repz
mov
imul
jg
movsl
push
loopne
pop
aad
jl
popa
xchg
mov
add
jne
inc
and
lcall
xor
sub
pop
mov
pop
inc
xorl
jnp
decb
mov
das
and
pop
jno
adc
mov
ljmp
mov
push
loopne
xchg
aam
dec
push
leave
lret
gs
jbe
aad
mov
aad
dec
fisubrl
inc
ret
push
addr16
aad
mov
cmp
arpl
in
sbb
cmp
popf
mov
cmp
mov
shll
ss
fwait
jae
jp
mov
das
fldl
hlt
out
inc
push
jns
push
add
aam
andb
mov
fstpl
cs
out
add
aaa
dec
mov
xchg
lock
jl
jle
push
data16
mov
jecxz
pop
out
dec
loope
and
pop
fucomp
sbb
lea
js
xchg
pop
jmp
ljmp
jle
push
imul
push
outsl
jbe
lods
and
sbb
les
dec
push
xchg
mov
in
push
sahf
push
mov
test
xchg
cmp
jge
or
mov
and
stos
push
in
push
test
stc
lahf
pop
mov
repz
pop
lahf
js
pop
loop
xchg
pusha
addr16
mov
mov
int
leave
jno
or
dec
cmp
stos
clc
cli
jg
inc
rorb
cmpsl
pop
lret
add
or
cmp
mov
movsl
jne
sbbb
jnp
inc
xchg
mov
xchg
sgdtl
jl
adc
jl
fwait
shlb
lds
imul
push
cmp
jg
or
cmp
sub
or
push
or
das
frstor
ljmp
pushf
loop
push
jo
insl
cmp
mov
pusha
fistpl
push
xchg
jno
or
fldl
pop
sbb
mov
arpl
jge
add
sti
int
dec
jp
mov
jmp
frstor
dec
or
andb
das
or
fs
push
clc
in
mov
xchg
adc
push
pop
mov
push
loopne
sub
dec
sub
insb
fidivs
mov
div
ss
mov
pop
push
push
arpl
lods
addb
dec
xor
mov
mov
dec
outsb
pop
pop
inc
or
jne
jge
mov
push
fldenv
cmp
and
stc
cmpsb
fistps
rcrb
outsl
xchg
loop
loopne
or
push
lock
adc
mov
shrb
sbb
outsb
lods
cmc
sub
cmp
dec
call
repz
push
push
aas
add
pop
pop
test
jg
add
fistps
jmp
xchg
ret
ret
mov
outsb
sbb
pop
pop
into
xchg
push
scas
sti
int
sub
daa
mov
stos
call
push
sub
cs
dec
sbb
lcall
je
cmp
sbb
mov
jmp
insb
shlb
push
xchg
push
push
xchg
inc
push
pop
push
jle
add
mov
mov
std
mov
leavew
iret
ffree
sbbb
sub
mov
lcall
scas
mulb
jbe
aaa
in
mov
mov
and
and
into
sbb
inc
jns
xchg
cltd
lea
or
fs
adc
xchg
pushf
movsl
lea
ret
inc
mov
aas
test
add
mov
push
xchg
xchg
add
xchg
jae
jmp
fstpt
fnsave
xchg
ret
adc
add
lods
aaa
out
cmp
out
push
loope
mov
add
dec
xor
pop
je
sbb
fstpt
jmp
leave
aam
xchg
loopne
fldl
adc
pop
test
push
int
stos
mov
or
jmp
dec
lahf
aaa
cwtl
push
xchg
mov
and
inc
push
cld
insl
mov
rorl
mov
and
pop
lcall
call
xor
sub
inc
mov
popf
adc
pushf
push
jbe
xor
fisubrl
out
lret
in
das
push
dec
lods
int3
pop
ljmp
ja
bound
push
loop
lret
adc
push
inc
push
stc
das
mov
out
stos
mov
mov
mov
or
mov
test
xor
pop
pop
ret
fistpll
pop
sub
mov
mov
leave
shrb
cmp
fisttpl
pop
sub
mov
test
popf
jb
fcmovbe
imul
fwait
mov
aad
jp
sbb
mov
jb
loope
je
sub
loope
mov
jp
in
cmp
xchg
ds
or
loopne
jmp
ficomps
xor
pop
fcompl
xor
fcom
pop
push
test
add
push
leave
jecxz
and
sbb
jb
div
xor
repz
and
in
push
jle
xor
int3
arpl
leave
dec
adcl
cmc
add
pop
outsb
mov
push
cmc
mov
mov
outsl
popl
and
fisttps
mov
dec
push
jge
mov
inc
push
xorl
jle
cmp
popa
mov
leave
or
stc
aaa
xchg
push
pop
jl
mov
cwtl
pop
in
xchg
addb
test
sub
stos
and
xchg
outsb
push
push
and
jle
inc
cmpsb
scas
js
pop
rcrb
lds
push
je
cmc
in
jbe
pop
add
stos
jne
cmc
ret
mov
popf
ja
pop
inc
jecxz
cld
sub
lds
pop
pop
fstpl
fdivrl
fs
movsb
adc
cld
mov
mov
into
fidivs
sub
mov
sub
mov
lods
out
ret
sub
ss
lret
sub
xchg
je
add
cltd
outsb
fistpl
aaa
xchg
jle
cltd
jno
std
mov
jae
inc
lcall
stc
push
jae
jle
cmp
push
mov
xorb
in
push
sar
dec
insb
add
or
data16
stc
int3
in
sub
bound
ja
and
fcomi
mov
test
sub
dec
daa
notb
mov
and
stos
fs
pusha
pop
scas
cmc
pop
or
popf
jo
in
negl
pop
and
inc
fwait
xchg
push
and
xchg
daa
loop
sbb
jle
les
fcmovne
mov
inc
mov
xchg
fldl
cmc
mov
push
push
add
mov
je
pushf
insl
loopne
cmp
lret
dec
mov
fucomp
into
jne
imul
push
mov
lea
ja
pop
hlt
sbb
mov
sub
mov
loope
push
add
lretw
imul
cmp
popf
pop
test
mov
cmp
mov
mov
pop
mov
outsl
lcall
fucomip
cld
popa
add
sbb
aad
jbe
jo
cmc
pop
pushf
std
jle
cltd
popf
cmp
xor
imul
dec
lret
repz
jne
sbb
pushf
adc
popf
sub
rclb
inc
jo
push
es
sahf
cld
imul
jae
inc
movsl
js
call
pop
ret
inc
rcrb
in
loopne
sarl
push
fldcw
xor
rcr
or
mov
out
jns
in
lds
add
idivb
hlt
ss
addr16
cwtl
iret
xorb
inc
push
insb
in
pop
loop
add
sbb
sarb
icebp
xchg
mov
es
mov
push
mov
inc
lcall
or
fnsave
movsb
lret
fdivl
dec
imul
loope
mov
les
shl
ret
dec
pusha
xchg
sbb
loope
adc
gs
stc
call
loope
in
scas
jg
jge
pushf
fsubrs
mov
shl
sub
sbb
xchg
mov
xor
testb
mov
std
pop
outsl
in
and
fistpl
jl
imul
pop
jmp
jecxz
sahf
cld
mov
or
mov
shlb
loopne
jb
je
or
sar
and
inc
xchg
ja
fimull
push
out
pop
cmpsl
fisubl
jae
adc
and
and
xor
js
scas
loopne
pop
movsl
sbb
pop
mov
add
leave
cmp
push
movsl
in
sbb
fadds
fwait
pop
das
out
push
bound
push
test
ss
jge
jl,pn
insl
ja
rol
test
je
xchg
jo
ficompl
cwtl
loope
adc
and
jmp
add
loope
mov
fisubl
outsl
mov
mov
or
jp
sub
int3
lahf
mov
sbb
jb
subb
jne
ljmp
nop
int3
jo
mov
fadds
insb
sbb
rorl
outsl
ja
movsb
mov
adc
adc
add
cld
or
and
mov
adc
inc
in
mov
dec
dec
cmp
mov
inc
sub
pop
xor
cmpsl
jo
loopne
or
mov
shr
sub
cwtl
arpl
aas
dec
xorb
loop
loop
inc
xchg
push
dec
xchg
orl
out
icebp
outsl
pop
shl
imul
frstor
out
add
shll
push
mov
sub
xchg
dec
cmpsl
jg
iret
xor
pop
pop
pop
pop
mov
jb
xchg
notl
bound
fdivrp
jae
dec
mov
mov
xor
mov
movsl
repz
ror
rcrl
stos
call
outsl
cwtl
mov
fsts
clc
cli
test
add
mov
filds
mov
ss
cmp
fildll
popa
stos
aaa
push
push
outsl
pop
mov
mov
and
and
cld
inc
in
lahf
loopne
jnp
jge
cmp
mov
in
jnp
shll
jecxz
dec
test
inc
xchg
jns
adc
pop
mov
rcl
mov
imul
mov
add
mov
out
mov
mov
xor
inc
pushf
lahf
stc
xchg
jmp
mov
or
cmp
pop
test
push
outsl
imul
out
outsb
das
sbb
pop
aas
cmp
cltd
adc
out
cmp
jle
mov
push
fdiv
add
pop
movsb
fiaddl
stc
mov
loopne,pt
mov
adc
add
xor
jmp
mov
push
adc
outsb
mov
cltd
mov
inc
jb
push
test
cwtl
mov
add
loop
lds
push
pop
add
mov
dec
int3
sub
adc
jnp
cmc
lods
notb
mov
outsl
xchg
sub
lock
adc
jnp
push
movsl
mov
insb
sahf
mov
push
jbe
insl
fdivrs
jne
sbb
je
mov
imul
lea
retw
sub
dec
mov
push
int3
loope
mov
xor
jne
insb
js
lea
mov
mov
outsb
fbld
push
sub
data16
and
mov
xor
rolb
clc
xchg
std
gs
enter
loop
jg
add
adc
mov
jne
add
loop
fstps
adc
and
scas
adc
push
cmpsb
in
addr16
cld
popf
stos
xor
cmc
cmpsl
mov
js
jnp
ss
aaa
xor
xchg
inc
scas
push
loop
outsl
cmpsl
sbb
ljmp
jo
mov
addr16
and
scas
cmpsb
pop
pop
rcr
mov
push
popl
pop
xchg
xchg
popa
jge
adc
mov
imul
in
inc
loopne
aad
push
mov
xor
mov
cld
sub
aaa
cmpsb
int
dec
mov
inc
les
out
pusha
jecxz
pop
mulb
or
lcall
pop
rcl
and
jl
add
rol
push
cmp
movd
or
in
pop
fcmovnbe
frstor
int
and
inc
addr16
sbbl
scas
and
push
fs
or
iret
aaa
cld
cmp
imul
cmpsb
jle
mov
subb
sbb
xchg
bound
inc
test
sbb
mov
push
stc
sbb
call
outsl
test
pop
push
mov
and
jge
sub
xchg
popf
xor
pop
sbb
and
pop
pop
popa
sub
in
aas
xchg
test
push
sbb
gs
jmp
fucom
mov
xlat
repz
lea
jo
rcl
gs
test
movsb
fbstp
sbbb
je
cmpsl
outsl
je
loopne
stos
lahf
dec
sbb
aas
pop
mov
mov
aam
int
sahf
cmp
sbb
jb
lret
mov
add
dec
aad
pop
shlb
fwait
mov
xorb
adc
out
fwait
loop
flds
enter
xor
mov
call
push
sti
xor
jno
ljmp
push
mov
and
pop
add
movsl
add
add
imul
mov
adc
fistps
sbb
aas
ja
mov
inc
dec
pop
lcall
aas
xchg
push
mov
push
push
push
xchg
pop
xchg
pop
sub
inc
cmp
mov
push
jne
jo
mov
fbstp
aaa
push
dec
fdiv
mov
xchg
ret
sbb
jle
ret
dec
inc
aas
sub
sub
rol
inc
loopne
pop
inc
jae
dec
jo
in
les
bound
jo
sub
lret
lret
pop
cmp
nop
push
cmp
push
adc
cmp
loope
add
nop
or
xchg
mov
das
outsl
jne
ret
xorl
pop
cmpsl
mov
sahf
cmp
cmp
test
cmp
cmp
in
jmp
xor
adcb
out
mov
xchg
adc
sahf
shl
dec
add
imul
hlt
cwtl
aas
imul
adc
addr16
jecxz
das
scas
mov
mov
push
into
out
lea
fcoms
int
aaa
bound
ljmp
xchg
dec
loop
or
outsl
add
sahf
loope
or
dec
out
leave
iret
cltd
loop
icebp
cld
icebp
insl
iret
jge
rcr
xor
lock
mov
push
mov
jo
push
jge
xor
jg
stc
cmp
fcom
mov
mov
in
sub
out
leave
aaa
inc
sti
imul
in
inc
dec
sbbl
mov
push
cmp
mov
inc
jae
mov
sti
jmp
fisttpl
fstps
pushf
testl
xor
jg
sub
lahf
push
in
shlb
int
lods
inc
xchg
and
xchg
cli
sub
sub
cld
push
and
jns
imul
jp
icebp
stos
xchg
dec
or
stos
inc
push
inc
jp
outsb
add
push
add
lcall
inc
les
rolb
pop
sub
es
rclb
inc
dec
pop
ds
jb
es
push
mov
jae
mov
push
or
cmp
jbe
push
and
push
lock
outsb
jne
pop
inc
cmp
push
pop
add
cld
in
pusha
add
jg
loop
adc
sarl
cs
bound
sbb
push
mov
movnti
push
jnp
xchg
sbb
sbbl
mov
xchg
pop
cmp
pop
push
aaa
xor
mov
push
dec
lret
cmp
hlt
in
adc
cmp
or
cmp
xchg
pop
mov
loope
jnp
clc
fcmovnbe
push
mov
adc
add
cmp
int
rclb
out
fisubs
jecxz
push
lahf
adc
or
xor
or
pop
std
stc
pushf
pop
movsl
jmp
mov
outsb
adc
inc
or
or
popf
in
rolb
push
adc
push
icebp
pop
inc
repz
fcmovne
pop
mov
sbb
mov
shll
iret
jo
jl
xchg
subb
mov
loop
pop
in
inc
xchg
adc
std
push
outsl
dec
jno
cmpsl
subb
cltd
insl
push
cld
and
ljmp
xchg
xor
movsl
cmpsb
adcl
aad
cmpsl
std
lahf
cmp
push
lock
sbb
mov
arpl
jo
shll
xor
decb
push
mov
pop
sbb
mov
pusha
or
xor
add
pop
rep
mov
clc
jmp
out
adc
jnp
insl
data16
addr16
push
cmp
ss
mov
push
roll
push
pop
lods
pop
xchg
in
xor
inc
mov
leave
sbb
int3
loop
inc
jbe
mov
jle
ss
inc
xor
adc
adc
push
xorb
push
mov
int
rolb
ret
add
cmc
std
fistpll
repz
decl
aam
ds
sub
mov
push
aaa
mov
pop
icebp
pushf
dec
add
sub
aas
repz
and
cmp
pop
not
or
pop
aam
popf
pop
shr
lea
cld
sub
push
jo
jmp
sub
mov
push
aas
mov
ljmp
mov
inc
add
rorl
cs
jl
sbb
xchg
jae
inc
pusha
cmpsl
sbb
aaa
imul
sbbb
cs
testb
clc
addl
and
mov
in
ja
in
push
push
ljmp
xchg
cltd
ds
pop
cmp
sahf
pop
or
inc
sub
arpl
sbb
fwait
jnp,pn
arpl
or
loope
sub
dec
cli
test
loope
lock
stos
repz
and
ljmp
stos
mov
push
sbb
xchg
rep
xchg
push
cmp
sbb
and
mov
xorb
xchg
pop
lcall
loope
and
xchg
jb
je
in
dec
test
cltd
pusha
and
fnsave
hlt
sbb
shll
ss
sbb
aad
pusha
sbb
inc
frstor
jne
loope
pop
mov
push
inc
fldl
andl
sahf
inc
add
out
cmc
pop
mov
inc
ffree
int3
and
jge
jne
in
es
les
adc
xchg
mov
rorl
inc
das
mov
lock
xchg
std
mov
in
lock
xor
pop
outsb
cmp
pusha
sbb
aas
cmc
sbb
sahf
sbb
imul
mov
adc
adc
jp
lock
leave
dec
add
popf
cli
shl
pusha
jmp
sub
and
outsb
jne
loopne
adc
or
popa
lret
cmc
lods
aad
dec
mov
jle
xchg
loopne
pop
mov
lods
inc
testb
ja
add
xchg
dec
mov
adc
repz
lock
sbb
add
cmp
inc
xchg
inc
mov
or
popf
dec
cltd
in
dec
xor
jne
rcrl
xchg
xor
add
fldt
out
mov
mov
rol
ficoms
cmp
pop
mov
xchg
push
insb
mov
test
xor
jno
sub
add
roll
lret
int3
test
xor
and
mov
jle
test
mov
movsb
jle
bound
jle
pop
test
mov
xchg
jmp
push
mov
movsl
or
dec
cmp
cltd
ljmp
jo
push
push
mov
lret
and
sti
mov
ss
xchg
add
and
mov
adc
and
dec
sub
cmp
je
in
inc
xor
jae
fwait
sbb
or
inc
fs
insb
out
xchg
jle
xlat
sti
jb
sub
jae
shll
insl
jae
loope
pop
pop
fcompl
mov
sbb
mov
mov
mov
mov
cmpb
inc
out
fisubs
test
mov
arpl
addl
add
lds
or
xlat
gs
and
cmp
xchg
popa
push
stc
and
sub
pop
adc
mov
pusha
repnz
xor
shll
cltd
inc
or
aad
data16
test
pop
jb
inc
mov
xor
dec
pop
adc
jmp
mov
int
andl
mov
cmp
call
xor
lcall
cmp
and
or
popl
push
inc
jnp
cmp
or
insb
mov
mov
in
mov
jno
lahf
sub
jno
mov
pusha
push
add
push
lea
mov
in
jge
mov
scas
xchg
jno
add
in
outsl
lahf
push
dec
imul
sub
and
push
pop
jns
jl
dec
cld
jmp
and
cmp
mov
mov
cmp
lret
and
push
jnp
mov
jmp
inc
in
push
cmp
int3
adc
shl
fwait
pop
lcall
mov
sub
adc
sbb
pushw
aad
xchg
pop
mov
add
aam
sbb
inc
xchg
cmp
and
xchg
in
in
sti
lahf
dec
add
out
xchg
mov
add
incl
jne
inc
frstor
loopne
cmpsl
xor
fistpll
scas
jge
std
fbld
mov
sub
cmp
add
into
lret
in
jns
adcl
and
in
jg
out
addr16
int
cmpb
ljmp
lea
pop
xor
jle,pt
pushf
add
and
jg
jne
and
sti
aaa
mov
icebp
decl
push
lock
inc
add
jnp
pop
and
push
pop
scas
cmc
shl
test
mov
dec
cwtl
dec
loopne
pop
aaa
inc
out
loop
stos
or
xor
repz
mov
pop
dec
mov
call
mov
jmp
push
std
inc
and
pop
rolb
mov
sbb
pusha
dec
cmp
loop
xor
nopl
mov
jl
push
add
icebp
pop
sub
repz
adcb
rcr
rcrl
inc
sbb
fldl
jg
inc
pop
insl
pop
ss
cltd
dec
mov
push
lods
fcoms
jmp
pop
popf
jb
sti
loop
sbbb
loopne
das
ret
lret
ds
jle
sbbl
mov
mov
xchg
xor
pop
div
mov
jp
int
push
sub
pusha
dec
push
les
xchg
adc
or
pop
xor
dec
xchg
in
adc
add
add
jbe
jne
fbstp
push
inc
out
jbe
fdivp
ss
pop
fcompl
xor
fnstcw
jnp
outsb
inc
ss
pop
cmp
xor
ds
push
or
sub
ds
pop
sub
pop
imul
push
das
scas
sahf
into
xor
mov
ficoms
jnp
mov
mov
insl
sbb
pop
movb
jl
or
adc
iret
and
pop
add
cs
jecxz
and
mov
xor
cmpsb
lea
mov
mov
cmp
mov
in
ret
cmp
bound
orb
in
pop
xchg
jne
lret
aas
dec
push
out
jp
cs
xor
and
sbb
int
pop
fidivs
std
or
ret
out
cli
mov
jno
xchg
ret
mov
rcr
push
adc
sbb
xor
add
lock
testl
lods
cmp
add
aas
scas
jns
inc
out
outsl
sbb
jno
in
add
inc
push
repz
sbb
das
inc
stos
xor
xor
mov
ss
nop
jo
adc
jge
divb
mov
hlt
add
js
mov
lret
inc
out
add
dec
repz
test
lods
xor
jl
xchg
cmp
outsb
fidivrl
cltd
mov
mov
push
imul
icebp
in
hlt
cmp
mov
ljmp
nop
jmp
mov
cmpb
mull
daa
xor
pop
ja
lods
push
mov
mov
fisttpll
cld
out
fwait
lahf
pop
xchg
js
xchg
loopne
fwait
push
xchg
cltd
sub
mov
imulb
pop
lods
test
insb
sbb
mov
call
cld
ret
daa
cmc
pop
xor
xor
cld
std
jmp
es
xor
das
int3
sarb
filds
dec
jl
pop
pop
adc
data16
cmp
lock
add
add
dec
cmpl
fwait
in
sbbb
shll
insb
add
int
push
imul
clc
nop
addr16
mov
or
sbbb
rcrb
sti
xor
outsl
das
cmp
xchg
push
in
cmp
rol
add
ret
in
sub
sub
and
sahf
pop
jecxz
cmp
cli
lcall
push
mov
fnstenv
push
js
add
add
fstps
cmpb
mov
stos
fstl
cmp
jmp
fwait
add
in
push
mov
ret
jnp
aam
adc
jp
pop
jbe
mov
and
sbb
jno
aaa
repnz
and
xchg
cmp
and
jmp
imul
xchg
fwait
jae
gs
add
cmp
jnp
popf
dec
push
xchg
cmpb
sbb
sub
xchg
ja
js,pn
pop
jns
pop
fstpl
test
cmp
js
push
lock
movsl
adc
shll
xchg
pop
xor
or
ret
sbb
sub
shll
xor
mov
cli
cmpsl
int
mov
sub
dec
pop
mov
sbb
sahf
cmp
adc
and
in
ds
loopne
add
xor
inc
lods
mov
je
out
in
adcb
mov
sub
icebp
fwait
dec
inc
pop
and
xor
mov
test
push
pusha
rclb
xor
fnstsw
andl
mov
or
sbb
ss
mov
fnsave
ss
fisubrs
cld
inc
sbb
pop
int3
call
in
push
std
add
aas
pop
stc
mov
mov
pop
imul
pop
xchg
pop
inc
xlat
pop
pop
clc
sbb
outsb
sbb
adc
in
mov
in
push
subl
outsb
inc
mov
and
ss
aas
and
fstpt
adc
negl
jge
mov
adc
stos
jecxz
shr
hlt
cmp
add
std
jb
dec
fucomi
adc
stc
mov
dec
sbb
stc
pusha
lock
and
add
mov
movsl
mov
ret
adc
insb
jle
subl
push
add
mov
test
out
mov
mov
mov
jnp
inc
test
sub
ljmp
loopne
jle
adc
rcrl
ljmp
enter
adc
add
push
lahf
loopne
fcoms
dec
and
imul
adc
inc
mov
sti
adc
and
xabort
jnp
adc
loopne
bound
addr16
mov
test
mov
lds
sbb
add
frstor
jle
mov
add
outsl
add
icebp
inc
ljmp
rcrl
mov
repz
inc
dec
insb
sbb
sbb
jle
fildll
mov
push
repz
cmp
nop
add
fdivrs
mov
adc
cmp
xor
sub
nop
sbb
jne
mov
in
nop
andb
daa
mov
mov
and
insb
cmp
push
push
add
sbbb
jne
frstor
and
jg
inc
jne
fstpl
and
jg
inc
jne
fnsave
imul
dec
and
pushf
add
jns
pop
sub
bound
sub
loop
fldt
xor
inc
jecxz
dec
rcrb
mov
cld
jno
outsl
cld
xchg
repnz
int
xchg
or
add
addb
jne
pop
mov
pop
mov
push
stos
aad
movsb
sbb
push
inc
test
fisttpll
clc
add
gs
es
popa
and
mov
lds
inc
inc
pop
ficoms
lds
mov
mov
push
or
sbb
out
pushf
mov
jb
cs
adcb
in
fwait
push
arpl
movsl
int3
inc
dec
in
adc
aam
pusha
mov
jmp
push
inc
in
negb
pusha
pop
shlb
aaa
pop
loopne
inc
and
out
pop
popa
shl
inc
aaa
cwtl
lcall
xor
push
loope
and
or
cmp
adc
insb
xchg
mov
es
mov
mov
inc
inc
cmpl
dec
cmpsb
icebp
fnsave
test
push
mov
push
mov
sub
cld
jmp
scas
xchg
mov
int3
aas
inc
stos
mov
test
fcomi
int
mov
into
push
loope
fwait
ret
lret
rcl
icebp
xchg
inc
pop
ret
cltd
push
out
and
adc
and
pop
hlt
aaa
les
int
sahf
dec
pop
sahf
inc
jle
xor
xchg
fisubs
dec
and
mov
xchg
jb
in
cmp
lds
addr16
dec
jecxz
nop
movsl
dec
adc
test
push
dec
test
mov
testl
lret
imulb
mov
jb
std
mov
and
stc
in
mov
add
repz
jne
ret
and
xchg
jle
sti
mov
shl
repz
xchg
mov
mov
jbe
xchg
cmp
les
fistpll
sarb
int
aam
int
xchg
frstor
and
mov
repz
sti
adc
inc
pop
out
mov
enter
in
mov
and
mov
cld
sarl
cltd
cmc
sbb
cltd
aas
lahf
xchg
aas
jp
les
lock
ljmp
jb
imul
dec
pop
jmp
data16
stc
jmp
pop
or
loope
int3
shll
add
mov
jo
xchg
sub
push
pop
cmp
fisubs
data16
inc
data16
or
push
sbb
xchg
jp
and
jmp
mov
xchg
inc
mov
or
jne
cwtl
mov
and
or
rolb
xor
mov
mov
jb
jnp,pt
enter
pop
xchg
jb
mov
fwait
jle
xor
insl
std
cld
lods
jno
xchg
mov
lds
jg
mov
lea
outsl
jb
xchg
push
cmc
jg
jle
int
inc
add
push
lock
jg
cmp
pushf
pop
fnsave
inc
icebp
jp
fadds
fists
add
jle
fs
cmc
sub
addr16
adc
jb
mov
jle
push
shll
sbb
mov
jae
fmul
add
jle
test
add
aad
cmpl
mov
sub
or
mov
adc
cmp
jle
fstp
xchg
in
jmp
pop
or
lea
push
movsb
xor
cli
icebp
cmp
cltd
sbb
jmp
jo
inc
cmc
jle
int
and
movsb
jae
in
ss
dec
jle
loope
push
fstp
xchg
in
add
cmpsl
cld
sbb
jl
sub
lcall
pusha
xor
and
and
add
pusha
mov
mov
and
fcompl
dec
sbb
mov
jle
out
bound
ja
pop
pop
xor
int
cmc
mov
mov
xchg
cmp
cmp
jmp
popa
xchg
in
popa
push
and
ja
subl
jmp
inc
fstp
inc
fsubrl
jg
sbb
adc
test
hlt
in
mov
sahf
mov
pusha
jno
cmp
pop
lea
sbb
insl
out
scas
frstor
sub
sbb
lea
push
add
add
fdivl
jns
out
sub
out
lods
int3
jne
fisttps
sub
dec
jo
adc
into
js
mov
hlt
fcmovnb
dec
xchg
nop
cs
data16
adc
and
lret
ljmp
int
outsl
dec
xchg
and
in
and
inc
int3
lock
jne
fists
subl
in
pop
leave
add
fstpl
cs
pop
decl
ja
inc
ss
movsl
lock
pop
outsb
sub
lea
cli
dec
cmp
int
jnp
fwait
std
add
or
cli
imul
xchg
icebp
ljmp
and
sub
adc
add
mov
inc
cltd
mov
xlat
xchg
shl
xchg
pusha
scas
mov
pusha
gs
mov
loop
insb
enter
pop
lret
imul
sbbl
divb
shl
push
cmp
ret
test
mov
dec
aad
xchg
je
mov
in
loope
inc
fnsave
fbstp
sub
jl
lods
fstp
rcrl
cmc
es
push
mov
insb
mov
jg
scas
adc
repz
adc
xor
cmp
jmp
or
cmc
pushf
cs
pushf
daa
cmpsb
mov
mov
sbb
pop
mov
jo
jmp
scas
fwait
xchg
ss
arpl
lret
sbb
ja
push
test
ret
jne
mov
sbb
loop
scas
fcomi
lret
push
scas
push
data16
pop
insb
xchg
call
xchg
in
and
in
jne
scas
and
stos
dec
test
jns
cltd
rcrb
mov
mov
cltd
mov
pushf
div
insb
sahf
fildll
push
mov
dec
pusha
add
insl
cmp
ja
jae
dec
test
cmp
lahf
in
mov
pop
mov
test
out
stc
cmpb
push
ss
or
mov
outsl
sbb
pop
push
sahf
aas
loopne
jecxz
dec
mov
lock
xor
or
pop
pop
mov
int3
push
sub
dec
or
sbb
push
adc
sub
pop
xchg
pop
pop
jno
in
pop
jg
gs
pop
or
sahf
jle
adcl
in
dec
inc
mov
pop
push
in
dec
dec
sahf
pop
mov
jno
push
jne
pushf
jne
pusha
jmp
inc
shl
cs
rclb
push
jle
mov
push
cmp
aaa
nop
out
dec
bound
jle
mov
shrl
mov
test
pop
jb
arpl
jle
jne
add
insl
cmpsb
stos
or
scas
jne
insb
adc
pop
mov
xchg
int
lcall
ficomps
sub
sbb
adc
outsl
in
xchg
mov
pop
push
daa
sub
jbe
movsl
jg
les
fstp
xchg
jb
dec
sahf
pop
jge
imulb
or
movsl
into
pop
popf
sar
data16
add
bound
sub
ficomps
rcrb
xchg
pop
aas
adcb
push
jnp
loope
ja
xchg
mov
mov
test
loopne
test
push
adc
push
ror
adc
inc
cmp
lods
and
ret
iret
into
shl
testb
shll
jle
sub
int3
push
out
mov
push
mov
leave
inc
loopne
aad
sub
inc
loope
int3
pop
lock
loopne
jl
dec
push
inc
inc
mov
in
test
pop
adc
lret
sbb
lock
push
outsb
aas
pushf
pop
mov
push
pop
push
sbb
sbb
pop
stos
ret
cmc
push
mov
jnp
push
or
fstp
xchg
imul
lret
lcall
stos
dec
test
sar
arpl
dec
loop
and
jp
xchg
xchg
jl
enter
loopne
sti
sub
dec
lahf
cmp
pop
dec
stos
mov
je
aaa
cltd
in
sarb
subb
cmp
mov
sub
cmpsl
xchg
inc
std
mov
popf
mov
push
jno
lahf
insl
orl
outsb
sbb
pop
sub
inc
jne
mov
pop
xchg
icebp
testb
xchg
inc
inc
add
imul
jnp
sbb
cmp
jmp
repz
mov
test
mov
fiadds
xor
ds
pop
pop
mov
das
in
xchg
repz
lods
sub
pop
shl
cmp
test
xor
dec
in
lret
jo
mov
mov
mov
push
cmpsb
popf
pop
stos
loop
sbb
repz
adc
pushf
inc
push
hlt
loope
sti
push
jg
jge
mov
arpl
js
push
aam
xor
into
pop
cmp
cmp
xchg
lods
movsl
in
cmpsb
cmp
repz
mov
fs
loope
cmp
sbb
jl
mov
pop
imul
mov
cli
mov
mov
addb
enter
mov
xchg
sbb
mov
aaa
xchg
push
pop
sbb
repz
rol
jns
cmc
sbbl
mov
sbb
scas
push
add
incb
sbb
ja
mov
ljmp
loope
pop
mov
lods
sbb
jge
jb
pop
mov
movsl
rorb
lcall
js
xchg
or
cs
arpl
jne
fwait
adc
inc
push
or
jne
xchg
jge
cmpb
pop
push
cmp
and
fbstp
adc
icebp
xor
add
ss
and
nop
lret
dec
insb
inc
push
pop
fcmovbe
leave
and
aaa
xchg
adc
bswap
shrl
sbb
outsb
mov
xchg
daa
and
xor
push
out
dec
mulb
mov
sub
push
sbbb
lahf
mov
xor
sarb
cltd
les
jle
in
pop
xchg
imul
fbstp
xchg
fbstp
push
jp
dec
cmp
inc
outsl
mov
mov
push
call
mov
cs
pop
jecxz
adc
jne
push
test
adc
xchg
xchg
pop
mov
inc
in
pop
mov
sbb
clc
loope
int
jbe
int3
xchg
loope
pop
mov
mov
dec
inc
or
push
inc
jge
insb
sub
xchg
lahf
fcompl
je
addr16
loop
repnz
fsubrl
xchg
cwtl
movsl
andb
push
sbb
cmp
mov
fisubrl
mov
sub
paddusw
push
fidivrs
loopne
in
lea
lock
dec
push
pop
cmp
es
or
movsl
int
push
add
mov
mov
out
cmp
push
adc
push
cs
pop
in
in
xchg
pop
in
outsl
mov
js
sbb
mov
jnp
sub
test
push
pop
cmpsl
push
aad
mov
mov
movsl
mov
scas
sbb
das
mov
mov
lret
insl
rorl
daa
push
cmp
pop
jo
xchg
or
int3
fldl
mov
int3
pop
scas
jle
in
addr16
lock
xchg
and
ret
xchg
sbb
mov
jo
pop
inc
popa
loop
and
pop
outsb
sub
shrl
add
xchg
push
aad
mov
bound
adc
cli
fnsave
cmp
iret
gs
pop
add
ss
mov
sub
mov
sbb
mov
mov
pop
pop
lret
rcrl
dec
loope
xchg
jg
fwait
mov
mov
cmpsb
je
or
lods
outsb
mov
push
nop
fnsave
cmpsl
test
sbb
repz
cmp
xchg
jo
in
push
rcll
rcrb
xchg
lds
jge
xchg
mov
test
ret
and
and
sub
jne
fwait
and
sbbl
cmc
pop
fsubrl
cmp
aad
les
insl
andb
jp
mov
inc
sub
loop
and
mov
lock
push
mov
xor
aas
roll
ds
sub
lea
in
mov
aas
pop
add
movsl
pop
mov
mov
scas
fimuls
cmc
jne
out
xchg
sahf
mov
sub
dec
jo
gs
fstpl
mov
insb
mov
xchg
sub
in
fnstsw
pop
call
es
dec
and
jle
push
and
popl
rolb
jp
sbb
jp
test
xchg
mov
mov
ss
cli
pop
aaa
push
loop
je
fidivrs
mov
jns
mov
faddl
push
sbb
std
add
push
test
jns
lods
cs
or
adc
and
aas
outsb
sub
pop
lods
fisttpll
sahf
inc
movsl
or
mov
adc
in
fs
fs
jne
fistps
mov
dec
repnz
mov
filds
and
aas
jle
push
jnp
mov
scas
add
js
jnp
in
mov
bound
pop
mov
fucomp
mov
in
cmp
int3
push
inc
hlt
xchg
out
pop
mov
movsl
jo
mov
add
data16
int
push
in
fimuls
mov
ret
lea
or
pop
sub
sbb
shll
aam
pop
ret
test
int
mov
mov
xchg
rdtsc
lret
dec
add
ffree
bound
jnp
lret
ljmp
imul
arpl
jmp
dec
xor
push
xchg
xor
enter
ljmp
mov
icebp
pop
jmp
imul
xor
insb
fldt
mov
jo
adc
lea
shlb
pop
repz
int
icebp
inc
in
xchg
out
cmp
addr16
stc
jmp
adc
out
lcall
xchg
pop
pushf
cmc
cs
gs
test
lahf
stc
pop
imul
pop
int3
xlat
sub
pop
in
icebp
xchg
mov
pcmpgtd
and
cld
dec
jp
sahf
fs
mov
cli
fiadds
fmuls
jge
pop
add
adc
jg
cmp
xchg
mov
movsl
stc
xchg
adc
imul
sbb
adc
push
lods
and
adcb
ja
cmc
arpl
outsl
cmp
pop
mov
out
popf
loopne
enter
xchg
mov
add
pop
inc
sub
cwtl
dec
rcrb
pop
add
mov
or
movsl
xchg
pop
in
add
push
sbb
repz
addr16
mov
andl
and
pop
pop
xchg
sahf
aad
notl
xor
inc
sub
in
sbb
sub
push
xor
push
and
jmp
mov
dec
fwait
stos
pushf
das
xor
jg
dec
mov
jno
cmpsl
scas
mov
dec
test
fisttpll
inc
push
in
iret
dec
mov
sub
std
mov
add
movsl
sti
mov
inc
test
sub
push
shlb
les
ds
out
push
stos
cmp
adc
xchg
test
repz
cltd
mov
stos
icebp
jp
xchg
adc
or
mov
loopne
or
cmp
xchg
rcrb
test
out
cmp
sub
mov
sarl
and
jb
jle
sar
inc
scas
xchg
pushf
xor
ss
mov
push
inc
int
dec
cltd
jo
hlt
out
sahf
lods
pop
push
in
add
inc
add
test
jno
fisttps
lahf
mov
inc
or
push
mov
push
and
out
int
roll
lods
popa
mov
scas
test
mov
sbb
jge
mov
inc
movsb
cmc
push
imul
ljmp
cli
es
ficomps
outsl
sub
pop
fistpl
xchg
and
and
sbb
cmp
mov
mov
xchg
in
push
push
std
sahf
and
rcrl
mov
xchg
mov
xchg
and
mov
mov
int
or
push
filds
outsb
sub
sbb
out
xchg
adc
add
sbb
push
aas
lcall
lcall
cwtl
add
cwtl
and
subb
pop
ret
lcall
cmp
aaa
iret
outsb
cmc
int
jno
inc
inc
push
push
dec
inc
mov
std
jno
inc
cld
in
inc
inc
xchg
insb
dec
ret
call
mov
xchg
mov
jnp
dec
or
dec
loopne
adc
add
fisttps
aaa
cli
loopne
stc
int
inc
cmp
add
xchg
lods
cmp
andb
aaa
xchg
and
test
xchg
mov
sbb
pop
fisubs
xor
mov
or
dec
ret
loope
int3
fs
or
or
andb
push
scas
aaa
bound
inc
cs
and
pushf
mov
jo
imul
xchg
cmp
push
jl
out
cmp
jl
in
sbb
jmp
cld
xchg
fldl2e
jge
mov
aam
arpl
cmp
add
into
dec
push
pop
js
pop
adc
std
jo
int
addr16
dec
push
out
jl
repz
cwtl
sti
inc
in
lret
andl
imul
add
pop
add
js
in
xor
xchg
test
nop
insb
mov
xor
rcll
scas
icebp
sahf
mov
jnp
dec
add
rcll
sub
addb
jg
and
and
push
clc
xchg
push
cmp
mov
pop
jg
pop
mov
in
fldl
lods
or
inc
repz
mov
cld
inc
cmpsl
mov
cltd
in
shl
or
outsl
xchg
jecxz
addb
popa
sbb
jle
and
sbb
imul
xchg
and
outsb
add
ja
push
or
jge
ds
cmpsl
pop
in
fstpl
icebp
outsl
jmp
mov
and
adc
add
xor
lea
and
call
aas
mov
sbbl
ljmp
push
sahf
insb
dec
jns
dec
in
cltd
push
in
inc
xchg
filds
test
mov
loope
jge
or
adc
in
xor
movsb
subb
insl
pop
inc
mov
sub
dec
adc
sub
subl
jne
lods
enter
xchg
cmpsb
mov
ret
cmpsl
icebp
mov
rcrl
pushf
adc
mov
aaa
push
dec
aad
sbb
mov
shll
in
imul
xor
mov
outsl
add
xor
or
mov
int3
lret
dec
push
in
mov
fwait
rcrb
mov
mov
mov
ret
jecxz
xchg
xchg
cmp
xchg
mov
dec
test
faddp
inc
jp
popf
fimuls
data16
fucom
sbbb
sub
add
test
adc
adc
test
sbb
add
ret
jg
adc
out
cmpsb
jle
les
adc
int
pop
cmp
adc
int
insb
add
dec
sub
pusha
inc
ja
sub
xor
xchg
dec
xchg
int
pusha
outsl
in
mov
repz
pop
jp
and
and
frstor
pop
fmull
je
add
fistpll
outsb
aam
data16
lcall
lock
add
les
aaa
int
pop
gs
sub
shll
imul
pop
xchg
stc
mov
lods
pop
cmpsl
and
sbb
pop
cmp
pusha
dec
sbb
sahf
add
in
fistl
inc
in
lods
sbb
pop
xorb
std
lcall
outsl
int
adcb
sbb
fwait
insb
cmp
movsl
cmp
sub
shlb
test
mov
repz
mov
pop
subb
xchg
xorb
inc
std
les
jns
xchg
outsl
jmp
pop
outsl
shll
imul
call
push
and
jbe
pop
popa
loopne
inc
push
inc
sbb
and
mov
iret
movsb
and
shll
add
dec
les
sub
xor
int
xchg
adcb
scas
repz
push
mov
sub
cs
jmp
out
int
jnp,pn
stos
and
jne
lahf
ljmp
dec
inc
push
push
cmpb
movsl
sub
push
mov
into
orb
les
pop
mov
mov
cmp
cmp
pop
aas
push
addr16
scas
sbb
push
ja
sbb
fwait
lahf
outsl
sahf
push
and
xchg
insb
cmp
rorl
sbb
jbe
out
xchg
sbb
movsb
xchg
sbb
and
cmp
sbb
scas
stos
test
and
out
pop
pop
push
and
mov
xor
cmp
sbb
nop
mov
and
aas
mov
add
push
pop
cmpsl
mov
adcb
adc
movsl
nop
push
pop
out
lea
fbstp
shr
push
and
mov
add
add
cmp
and
jno
mov
dec
test
dec
test
iret
add
jle
dec
pop
push
dec
movsl
lock
sub
repz
cmpsb
xchg
cmp
push
inc
call
out
jl
daa
add
das
int3
shlb
jnp
outsl
inc
ljmp
shrl
push
in
add
in
out
mov
pop
into
and
xor
sbb
dec
lods
xchg
mov
sbb
and
mov
test
pop
aad
jns
pop
adc
call
ret
xlat
js
leave
int
cwtl
inc
mov
mov
syscall
sbb
test
sub
adc
or
xchg
jne
fstpl
pop
and
xchg
pop
xor
sbbb
push
push
cmpb
mov
aaa
inc
xor
lret
and
xor
and
loopne
jno
movsl
adc
jmp
mov
fwait
mov
and
xchg
int
leave
loop
lret
xorb
push
loop
mov
insb
sar
dec
fbld
stos
lret
xor
in
sbb
mov
ret
insl
pop
mov
mov
pop
nop
test
push
sub
jge
rorb
adc
roll
adc
xor
bound
subl
pop
mov
push
outsl
push
fs
pop
jne
and
cwtl
mov
mov
sbb
shr
sub
clc
mov
subl
cmp
es
ja
ss
pop
xor
push
pop
jns
outsl
push
jne
jg
int3
and
mov
xor
mov
xchg
cmp
mov
cmp
ret
or
xchg
inc
lea
out
sub
pop
jecxz
clc
mov
xchg
lods
cmpb
lea
rorl
lock
sbb
nop
mov
and
add
ds
mov
dec
mov
ss
or
mov
insb
sbb
pop
adc
mov
xor
inc
in
clc
mov
iret
js
inc
call
cmp
jo
mov
lahf
fs
pop
shrl
or
lock
mov
and
fwait
push
notl
js
int
pop
sub
loopne
sub
shr
int
popa
inc
ss
and
pushf
add
out
pop
mov
jne
cmp
jb
outsl
add
xchg
mov
jl
mov
and
and
rolb
xchg
int
inc
push
push
aad
add
testl
cmp
lcall
adc
mov
mov
rorl
push
cmp
leave
pusha
mov
out
pop
xchg
dec
and
add
aam
ds
je
cltd
cmp
xchg
test
pop
mov
repz
and
fdivrs
inc
es
loope
inc
mov
js
jb
xchg
cmpsb
xchg
mov
idivb
sbb
mov
pop
lea
xchg
push
mov
xor
stos
inc
or
mov
adc
idivl
lret
int3
cli
pop
jnp
sub
xor
or
push
or
pop
add
cmp
popa
cmp
les
mov
add
fcomp
cmp
test
adc
mov
pop
add
es
jp
sub
jl
mov
cmp
pushf
movsl
dec
cwtl
mov
cmp
pop
loopne
dec
ss
sub
add
test
xor
shrl
data16
or
and
sti
ffree
jecxz
pop
jmp
jne
inc
or
idivl
inc
pop
arpl
movb
out
int
popa
add
jns
sub
lods
jmp
cs
lahf
ja
lcall
subl
jo
js
xchg
sbb
jnp
mov
js
lds
and
repz
jge
in
lahf
sti
or
cmc
inc
out
pop
fbld
sbb
das
mov
into
ss
xchg
out
stos
and
jo
mov
dec
loop
aad
or
mov
jno
fs
mov
pop
lret
lea
in
rorb
adc
jle
test
add
add
pop
mov
ss
dec
in
add
dec
lea
fstpl
and
mov
sbb
outsb
lea
sub
pop
stos
enter
mov
andb
mov
xchg
mov
dec
jmp
sbb
adc
aam
mov
mov
xchg
pop
hlt
mul
or
add
repnz
in
sub
orb
sub
lods
notb
inc
rorb
adc
jg
push
in
push
mov
and
cmpsl
int
aad
dec
mov
add
in
in
mov
fstl
and
cmp
outsl
andl
pop
mov
or
push
mov
or
sbb
int
insl
and
lock
je
or
test
pop
addr16
push
out
std
js
int
imul
mov
mul
xor
lret
gs
jne
sahf
xchg
mov
addl
mov
jb
les
xchg
insb
inc
pop
ss
xchg
jmp
cmpl
ds
pop
mov
nop
fldenv
sub
repz
jmp
cs
mov
scas
ret
mov
adc
adcb
sahf
dec
cmpl
loopne
scas
lea
sbb
push
jne
add
sbb
mov
fstps
out
mov
push
pop
mov
xchg
push
and
xchg
test
lods
and
dec
cmpsl
and
jge
sub
and
lret
mov
aad
xchg
ret
push
push
mov
ret
push
dec
xchg
popa
inc
push
pop
xor
cmpsb
insb
mov
xchg
sti
jle
pop
adc
lea
mov
iret
lcall
fistps
inc
sub
dec
sbbb
and
call
adc
sbb
mov
int
fisubl
dec
clc
into
addb
pushf
shll
pop
pop
sbb
pop
imul
ljmp
sahf
add
xchg
je
sub
loopne
inc
das
loop
insb
imul
pusha
and
insb
jns
repz
fwait
push
mov
dec
sub
cmc
sub
loopne
inc
push
bound
dec
gs
andb
jle
pushf
fcompl
push
lods
xlat
sti
outsl
pop
fldl
mov
ss
push
and
xchg
push
test
xchg
es
fistpl
jle
int3
dec
fists
jne
pop
neg
int
pop
xor
loopne
and
sub
push
or
lea
subl
inc
jecxz
cs
mov
xchg
movsl
lods
iret
xor
insb
cmp
adc
mov
push
mov
pop
movsb
test
jae
dec
cs
idivb
dec
and
cmpsl
insl
out
icebp
fwait
iret
data16
add
adc
lahf
stc
and
sbb
sbb
adc
mov
fsub
int
mov
popa
sub
sbb
xchg
mov
sbb
pop
ficoml
xchg
arpl
mov
imul
lret
mov
loop
sub
pop
lret
decl
es
lea
lock
push
and
push
dec
jne
js
pop
xor
jae
aam
je
js
push
and
fs
and
popf
iret
das
xorb
jo
insl
test
std
push
aas
pop
test
inc
fcmovnu
push
sbb
sbb
mov
mov
or
bound
bound
sub
cmp
bound
push
das
and
dec
dec
pop
jno
add
in
fwait
push
lods
roll
out
pop
mov
outsl
pop
std
imul
out
push
push
pop
mov
jmp
icebp
shlb
out
or
pop
sub
pop
sub
movsl
cmp
ret
or
pop
stos
lock
push
das
arpl
dec
ret
pop
jne
add
movsl
or
lock
jno
dec
test
xchg
and
test
inc
pop
pop
outsb
cs
and
loop
fwait
loop
test
aas
xor
cli
push
shr
and
pushf
nop
add
push
rolb
xor
ficompl
fnsave
dec
cli
scas
mov
icebp
in
lods
mov
mov
pop
mov
movsl
dec
add
pop
push
sub
test
testl
or
addl
imulb
dec
std
loop
cltd
loopne
dec
xor
call
in
mov
incl
mov
inc
dec
ffree
add
jl
mov
mov
or
lea
scas
jne
jg
sbb
bound
daa
std
or
pop
int3
push
inc
dec
std
mov
sahf
mov
xchg
into
xchg
push
scas
imul
les
lods
in
push
int
imul
lahf
xor
sub
andb
pushf
out
jne
outsl
mov
and
ficoms
dec
jno
cmpb
in
fnstsw
push
in
xorb
sub
lea
les
jnp
mov
mov
mov
pop
scas
pop
or
stc
test
icebp
out
cmc
cltd
fdivp
jmp
adc
pop
pop
popa
mov
mov
jns
mov
adc
movsl
cmp
mov
stos
or
test
icebp
outsb
jno
or
mov
movsl
push
mov
sarl
scas
test
es
popa
aad
mov
dec
push
dec
int3
inc
js
aaa
jle
js
inc
into
cmp
jns
and
sti
int
inc
js
push
pop
jle
mov
push
sbbb
sub
adc
stos
xor
mov
push
inc
jb
movsl
push
fstp
mulb
pop
mov
mov
ss
in
pop
lods
loope
stc
movsb
and
and
or
out
push
negl
cmp
imul
dec
mov
pop
jmp
shll
in
mov
rcrb
es
and
jle
rolb
dec
loop
mov
dec
ss
inc
out
pop
push
shrb
pop
xor
mov
test
nop
xchg
pop
arpl
xchg
pop
lret
movsl
jb
mov
jecxz
test
or
das
test
and
popa
pop
hlt
insl
loop
insb
addr16
jmp
mov
sub
fiadds
repz
in
jb
jae
xchg
push
lea
mov
lcall
jne
mov
inc
dec
mov
pop
and
int3
aas
filds
inc
push
les
push
inc
shll
popa
xor
sbb
inc
and
loope
push
fwait
jg
outsb
leave
jb,pn
sbb
pop
into
int
into
cmc
push
pop
or
or
jnp
mov
fisttpll
data16
mov
stos
pop
or
icebp
cmpb
std
dec
mov
ds
mov
outsl
aas
dec
jne
std
pop
mov
add
addl
mov
aaa
int3
ds
jle
test
scas
fcomp
in
sbb
call
test
out
in
push
out
cmc
dec
stos
adc
add
fmul
jne
fbld
cltd
add
adc
dec
jae
js
int
jns
pushf
out
in
adc
ljmp
push
mov
cmp
stos
pop
mov
jno
sahf
cmp
vpmulhuw
out
insl
ds
sti
push
lret
jle
adc
push
and
arpl
mov
add
pop
or
adc
clc
lea
dec
dec
adc
sub
std
mov
adc
push
jecxz
jecxz
jno
scas
out
cmp
pop
mov
fcmove
xchg
mov
cmp
aam
ss
movsb
leave
in
and
pop
mov
bound
negb
add
mov
test
jnp
insb
shlb
call
cs
insb
ds
xchg
push
cmpsl
imul
jnp
ljmp
js
inc
and
xor
cld
cmpsb
enter
cltd
cmp
aad
sbb
sub
in
adc
aam
xchg
cmp
push
dec
dec
les
das
aad
adc
inc
fstl
scas
inc
clc
cmp
xchg
pop
adc
xor
pop
in
mov
in
and
jb
popa
dec
sbb
ret
sbb
jae
out
cmc
js
int
imul
push
std
outsl
lea
ljmp
pop
inc
or
jp
pop
xchg
sub
pop
lret
aad
sub
in
pop
jb
btc
adc
stc
xor
sar
mov
arpl
in
fdivr
scas
ss
jecxz
mov
lods
rcrb
pusha
loop
test
inc
in
xchg
dec
stos
jns
rcrb
add
in
js
or
pop
call
aam
push
cld
or
es
dec
and
xor
inc
mov
shr
jb
movsl
inc
outsl
xchg
lock
and
and
mov
mov
in
xorb
dec
leave
or
in
int
mov
outsb
call
push
and
pop
movsb
push
fucom
cmp
push
andb
or
in
aas
mov
xor
jo
lret
int
add
stos
jge
jle
std
inc
push
loopne
lock
mov
sub
int3
mov
jo
pop
xchg
jl
ds
mulb
sti
ss
insb
test
sub
sahf
lods
mov
push
inc
adc
stos
clc
and
cmp
sbb
cmp
in
fcoms
cmp
sbb
rorb
mov
adc
lds
push
aas
aas
rcl
jne
lcall
and
add
pop
in
lret
movsb
pop
xorb
inc
jno
movsb
scas
es
add
outsl
pusha
xchg
movsl
push
cmp
and
std
xchg
ret
pop
pop
mov
stos
and
add
xlat
movsl
sub
mov
pop
dec
mov
dec
js
pop
in
or
out
jmp
pop
daa
xchg
cs
jns
pop
jle
imul
loop
sub
call
icebp
outsb
negl
std
shrl
jns
test
popa
daa
lea
in
xchg
aas
in
ss
xchg
sbb
pop
or
test
jns
shrb
mov
push
js
addl
jb
push
call
in
jns
test
rcrl
cwtl
lcall
aam
pop
mov
adc
pop
xchg
jne
sti
mov
int
loope
inc
int
add
push
insl
stos
cmp
sbb
sbb
mov
xor
idiv
and
add
push
into
fldt
andb
in
in
sbb
push
out
fistpl
dec
push
push
pop
mov
loop
pop
fnstsw
pop
adc
in
insb
cmp
cmpsb
mov
jno
add
and
jp
sub
out
jecxz
cs
popa
adc
insb
popa
adc
mov
cltd
dec
clc
dec
rorl
jl
or
into
cmp
jno
inc
clc
inc
into
fucom
or
push
dec
push
add
inc
movsl
scas
pop
arpl
nop
sbb
cs
cmp
ss
daa
pop
adc
dec
int3
loope
mov
xchg
jecxz
ds
mov
arpl
enter
ror
jnp
pusha
lret
in
xchg
cltd
imul
sbb
stos
cld
aas
jbe
dec
jle
pop
neg
ds
and
fwait
mov
fnsave
jbe
jge
push
cwtl
mov
xor
aas
repnz
push
es
mov
sbb
dec
cld
into
and
sub
pop
pushf
sub
int
pop
mov
loopne
out
icebp
pcmpeqb
stos
cld
pop
outsb
pop
pop
loopne
push
xor
outsb
xor
into
push
dec
in
ss
jg
lods
mov
ds
dec
mov
inc
mov
testl
push
aas
cmp
cld
filds
mov
les
ds
test
push
out
int
xchg
add
xchg
mov
shlb
xchg
dec
xchg
push
scas
push
addb
xor
cltd
cld
lahf
cmp
std
inc
pop
mov
cld
mov
pop
push
push
int
mov
outsl
pop
pop
pushf
gs
sbb
mov
push
xlat
push
sbb
sbb
pushf
int3
add
jle
movsl
jecxz
inc
add
push
mov
mov
cmp
sub
and
cld
xchg
aas
loope
int3
bound
cld
xchg
jp
pop
mov
inc
sub
jle
mov
xchg
movsl
push
test
inc
add
out
jb
push
inc
imul
ljmp
push
sub
mov
pop
test
mov
jo
adc
int
out
adc
dec
les
ror
adc
pop
imul
mov
int
test
inc
movsl
test
imul
in
jge
rorb
push
push
cld
and
xchg
pop
nop
pushf
test
and
mov
sub
and
lcall
xor
xor
ror
add
cs
add
pop
imul
pop
not
xchg
fistpl
shll
inc
jmp
js
incb
cmc
sbb
int
lret
pop
sub
ss
sbb
fstl
adcl
jnp
mov
mov
add
stc
testl
lds
jb
je
jo
adc
andb
fdivrs
jb
mov
push
addr16
inc
out
or
aam
bound
stos
sarb
jecxz
jg
popa
repz
data16
cmc
push
fistl
sub
jno
cmp
push
pop
je
push
fs
in
inc
enter
add
fbld
xchg
jg
mov
test
out
addb
or
dec
add
xchg
adc
push
jle
dec
push
dec
orl
punpckhdq
jne
clc
inc
sub
xchg
js
insl
std
push
lods
int3
scas
jnp
lahf
push
icebp
mov
push
pop
dec
jb
jle
data16
inc
pop
mov
cmp
push
xor
sbb
movsb
popa
inc
inc
cmpsl
sbb
out
movsb
icebp
xor
cmpsl
adc
out
xchg
lret
push
roll
push
clc
adc
cs
inc
out
cwtl
pop
leavew
push
test
pop
cs
lahf
dec
pop
push
sbb
ficomps
aam
fisubs
jg
test
mov
sbb
test
cmc
pop
xor
push
push
stos
cmc
inc
jno
movsl
jl
push
popa
cmp
test
inc
adc
leave
in
inc
push
popa
bound
cwtl
lock
loopne
or
pop
ja
dec
jno
add
push
std
addb
xchg
lret
add
push
pop
pop
jg
loop
or
mov
sti
cs
ja
jle
aam
pop
imul
and
push
out
jns
lock
in
into
outsl
sbb
in
dec
pushf
lahf
out
pushf
daa
cmc
fwait
in
roll
jle
cmp
test
push
std
push
jecxz
outsb
mov
push
mov
mov
dec
mov
xor
nop
lock
clc
in
jg
in
lock
dec
lea
xchg
dec
in
pop
shlb
fisttps
in
imul
ss
insb
or
stos
xor
adc
and
dec
add
movsl
sahf
xchg
pop
cmc
pusha
aad
movb
or
inc
add
push
repz
add
int
xchg
gs
or
pop
sub
cmp
fidivl
dec
or
dec
jb
or
sbb
into
dec
push
and
sbb
inc
jg
sbb
dec
sbb
imul
mov
cltd
icebp
or
lea
lcall
jne
jp
jecxz
jbe
pop
outsl
test
ficoms
gs
sbb
pop
xchg
pmullw
push
fsts
filds
inc
sbb
push
pop
cmpsb
mov
test
cmpsl
jle
cwtl
xchg
inc
outsl
push
and
push
pop
mov
push
and
jp
push
inc
int3
adc
mov
test
faddp
mov
pushf
out
outsl
je
aad
imul
addr16
test
sbb
pop
popa
add
push
inc
push
cmc
es
jb
aam
ficoms
mov
mov
int
inc
jl
mov
inc
fdivrl
xchg
loop
mov
add
gs
outsb
lock
insb
cmc
lcall
cs
mov
jo
jp
adc
jo
cld
xchg
lods
es
mov
sbb
cmc
nop
sub
out
dec
lcall
es
int3
cld
dec
pop
push
cmp
mov
insb
pop
mov
lahf
push
mov
cwtl
repz
sti
pop
aaa
jbe
mov
test
adc
ja
jo
aas
xor
xchg
inc
stos
and
sbb
lahf
inc
pop
push
sbb
push
mov
inc
mov
jle
pop
jle
faddl
mov
jmp
adc
add
lds
inc
pop
inc
js
into
xor
ret
mov
add
and
inc
push
sarb
and
jmp
dec
jne
add
cmp
add
add
pop
sbb
fldl
push
outsb
aaa
mov
and
xchg
inc
mov
shlb
fnstsw
push
fwait
cmp
sti
sti
push
jnp
inc
adc
das
dec
push
cmpsl
cmpl
jne
sub
je
or
sbb
mov
sub
jmp
enter
inc
sbb
pop
sub
cmp
or
xchg
fucom
lods
push
dec
lahf
push
lcall
jb
clc
or
push
xchg
pop
ret
xchg
loopew
cmp
sbb
and
in
test
hlt
xor
xchg
mov
xchg
jnp
mov
jae
cmc
mov
jg
sahf
out
in
cld
sbb
dec
fisubs
xor
mov
leave
outsl
and
adcb
jge
adcb
sahf
test
gs
lods
mov
mov
xchg
in
cmp
jmp
mov
jle
fnsave
std
insb
jne
fldt
cmpsb
cmp
mov
sti
adc
lret
std
sti
pop
shll
push
jge
out
add
mov
jp
dec
lds
sahf
sbb
jbe
bound
mov
add
in
dec
pushf
cmp
in
cltd
mov
cmp
je
inc
push
pop
jl
out
inc
pushf
and
je
pop
pop
sub
fisttpll
dec
jno
lock
dec
push
adc
adc
aad
mov
inc
sub
loop
in
xchg
push
popa
and
jle
mov
mov
add
jp
and
in
adc
add
lahf
test
push
jae
add
xor
aas
lcall
sub
or
or
sub
fwait
mov
jge
loope
rol
push
addr16
out
fwait
outsl
mov
out
fcoml
shl
inc
out
cmpb
loope
out
sbb
jg
les
out
cmp
sbb
scas
les
std
out
fcomip
xor
pop
adc
pop
mov
or
dec
add
inc
dec
mov
xchg
jne
add
push
lds
mov
outsb
pop
popf
clc
pop
dec
push
jno
icebp
pop
or
xor
sahf
sbb
addl
jg
jne
outsb
or
pop
fwait
daa
inc
out
sub
ret
lock
test
daa
xlat
nop
into
add
add
cmc
cmpsl
stc
aad
stos
fisubrs
stos
ss
test
xchg
xor
jg
adc
push
frstor
lret
loopne
test
aad
cltd
jnp
les
add
pop
lea
lcall
in
adc
int
aam
sub
jle
add
jns
mov
outsb
dec
rcll
cmp
pop
xchg
test
das
and
fwait
ljmp
arpl
inc
int
dec
jne
xchg
xchg
mov
shrb
hlt
mov
pop
ss
in
sub
xorb
std
shll
pop
rcrb
fwait
std
pop
sub
in
add
jno
add
call
scas
std
lds
dec
mov
jg
ret
sbb
jecxz
out
dec
das
pop
cmpsl
in
in
mov
sbb
add
mov
mov
sbb
scas
add
out
std
jb
xchg
js
and
sbb
imul
cltd
and
imul
cwtl
push
bound
mov
outsl
cmp
movsl
lret
rolb
jo
shrl
sub
push
or
jnp
ret
cli
jge
int
adc
jecxz
or
int3
ljmp
scas
and
cmp
xchg
shl
mov
mov
fsubrl
shr
sub
aaa
mov
add
mov
adc
dec
insb
and
add
jge
leave
int
testb
insb
pop
subb
cmp
mov
filds
and
aaa
or
dec
int
mov
sbb
pop
leave
adc
or
dec
ljmp
cld
rorb
scas
mov
mov
insb
out
push
add
push
pushw
xchg
pop
mov
sbbl
inc
jmp
insb
scas
imul
jns
iret
lods
inc
aaa
stc
out
pop
sti
int3
and
push
arpl
mov
bound
cmpsb
daa
in
dec
rsqrtps
push
stc
jae
jl
lock
lahf
and
pop
outsb
pop
xchg
jg
pop
sbb
dec
jno
idivl
lret
mov
push
lahf
les
jmp
jbe
lcall
fdivl
or
and
in
adc
ds
jp
out
aam
insl
jne
ret
insl
and
mov
imul
mov
cmp
hlt
or
and
mov
sbb
in
in
lea
mov
aas
arpl
popf
fnstcw
push
std
aaa
xchg
out
cs
jmp
ja
xchg
inc
subl
fs
repz
in
cmp
add
mov
mov
sbb
jp
das
inc
mov
or
popf
jae
mov
mov
mov
mov
outsl
fistpl
loopne
xlat
lahf
add
add
adc
imul
add
xchg
jae
inc
adc
mov
xchg
sub
inc
enter
sti
scas
out
pop
or
mov
and
pop
adc
fistps
fstl
out
mov
orl
test
mulb
cld
addr16
mov
mov
test
push
add
sahf
jo
ljmp
test
lcall
or
xor
insb
push
cmpsb
mov
mov
inc
cmp
movsl
rcrb
out
mov
xchg
or
cmp
bound
mov
fdivl
inc
in
dec
dec
cmp
aam
ss
fcomp
out
push
dec
push
pop
fistpl
lahf
sub
hlt
movb
and
pop
mov
pop
and
fld
mov
mov
scas
ret
lods
pop
xchg
lock
outsl
and
and
push
jl
mov
sub
test
cld
mov
lds
movb
jbe
incb
imul
popf
loope
jb
test
dec
lock
cmp
fldln2
test
shrl
mov
and
add
add
ljmp
pusha
movsb
mov
and
ret
mov
loope
lock
movsb
mov
and
jg
mov
cmp
mov
mov
fwait
inc
cmc
mov
sti
mov
mov
fistpl
stc
cmp
insb
cmp
mov
jne
jnp
ljmp
mov
and
lds
cmp
pushf
lock
lea
data16
mov
inc
test
push
faddl
sbb
inc
push
cmp
sbb
fidivs
iret
in
cmp
sub
xchg
mov
lcall
loop
or
addb
rolb
push
lret
mov
jmp
insb
dec
sbbl
movsl
inc
insl
loope
jb
sbb
pop
adc
cltd
mov
or
xchg
fstpl
insb
std
lock
fs
add
fstl
jmp
push
fs
and
rcr
fdivs
fwait
mov
dec
fs
sub
and
pop
incb
jne
jnp
ljmp
cmp
jne
jnp
ljmp
cmp
jg
inc
jne
jnp
ljmp
cmp
mov
lds
cmp
ljmp
mov
cmp
inc
test
mov
lds
aam
movsb
jmp
mov
loop
mov
test
pop
insb
cld
aas
pop
pushf
aad
test
orl
sbb
dec
sbb
and
stos
lock
add
sbb
mov
adc
dec
sub
xchg
xor
pop
aaa
xor
push
xchg
insb
ret
and
imul
shr
xchg
ss
cmp
push
and
lahf
rorb
pusha
ja
push
mov
mov
mov
xchg
sbb
inc
inc
jne
jnp
ljmp
mov
sbb
cmp
jne
mov
inc
test
loope
inc
sbbl
popa
mov
rep
push
shll
addr16
inc
jne
jnp
ljmp
cmp
mov
cs
fwait
aas
mov
mov
lea
and
sbb
shll
sub
jge
dec
pushf
sti
mov
cmp
jmp
jns
enter
mov
push
test
xchg
and
outsl
inc
jmp
loopne
js
out
inc
movsl
rcrb
roll
ljmp
stos
repz
dec
shl
xor
xchg
xchg
jmp
mov
and
inc
pop
shrl
push
sbb
arpl
jmp
gs
inc
mov
jb
mov
mov
lret
ror
jo
fadd
iret
mov
sbb
mov
ret
and
cmp
add
add
loop
loop
test
loope
inc
cmp
push
mov
inc
test
jnp
stc
jg
and
insb
pop
and
addr16
inc
adc
fstpl
insb
sti
lock
fs
mov
loope
inc
cmp
insb
sbb
sbb
mov
and
pop
inc
test
mov
insb
pushf
lock
movsl
mov
sub
in
ret
sti
add
inc
xor
pop
lcall
jne
cmp
test
stos
loope
inc
cmp
lock
and
jnp
inc
test
loope
inc
mov
lock
fs
cs
push
rcr
inc
fucomp
insb
ds
and
push
jnp
inc
test
mov
imul
push
adc
inc
inc
jne
jnp
ljmp
mov
and
mov
lds
xchg
loope
lock
jg
jne
jnp
lret
sarl
ret
in
stos
push
rorl
movsb
add
in
cmp
test
aad
or
lret
jo
push
movsb
loop
push
sbb
fs
sub
and
lcall
ljmp
cs
mov
lds
test
addr16
inc
jne
jnp
ljmp
jg
mov
and
faddp
mov
cmp
mov
or
add
jne
jnp
ljmp
cmp
dec
inc
out
ljmp
and
and
test
loope
inc
shr
insb
mov
pop
xchg
fwait
push
rorl
test
in
pop
mov
jnp
fucom
sbb
pop
and
scas
ss
and
xor
loope
fldl
pop
das
movsb
mov
push
jnp
inc
test
xchg
loope
inc
sub
insb
lock
cs
push
jnp
inc
test
add
insb
loop
loop
mov
and
push
jnp
inc
test
xchg
loope
inc
jnp
insb
pop
lock
fs
and
test
sti
jmp
fistl
cmp
test
loope
inc
sbb
arpl
sub
pop
repz
bound
in
loopne
out
lret
mov
jl
mov
fnstsw
das
xor
sub
xchg
stc
cld
scas
and
mov
inc
jne
mov
gs
sbb
lock
stc
jge
and
and
inc
jne
mov
gs
popf
sbb
push
lock
xchg
stc
std
scas
push
jns
frstor
sbb
push
lock
xchg
stc
push
scas
and
and
inc
loop
shl
scas
iret
mov
and
aam
inc
jg
jno
into
fldl
xchg
dec
ffree
movsb
mov
aas
xchg
test
sub
lret
xchg
imul
mov
lods
jne
fstpt
mov
inc
and
mov
lds
cmp
pop
lock
lea
data16
mov
inc
push
dec
insb
lahf
lock
lea
ljmp
cs
mov
lds
test
addr16
inc
jne
inc
xlat
addr16
jmp
inc
lock
mov
inc
test
rcrb
mov
insb
mov
add
add
ljmp
cmp
out
ljmp
and
inc
subl
in
pop
push
pop
aas
inc
popa
sbb
cmp
mov
sbb
loope
mov
and
arpl
or
inc
jle
cmp
pop
neg
mov
push
arpl
clc
sub
out
dec
out
mov
in
cmc
lods
sbb
aaa
adc
das
dec
stos
and
xchg
mov
jbe
dec
jmp
xchg
jo
ret
and
incb
lahf
loop
jp
lods
mov
fidivrl
test
mov
push
lock
outsl
inc
fs
test
mov
add
loope
jnp
push
lock
xchg
stc
inc
scas
and
mov
inc
jne
mov
gs
bound
jnp
push
lock
ret
mov
jne
mov
gs
loop
jnp
push
lock
sbb
jnp
jnp
inc
pop
sbb
push
lock
and
jne
mov
gs
xchg
icebp
fcmovnb
xor
lock
add
dec
subl
push
add
in
and
insb
aaa
rorb
jo
pushf
movsl
lret
pop
xor
in
mov
cmpsl
gs
and
mov
push
jl
sti
test
std
pop
inc
inc
pop
cltd
fs
mov
jnp
inc
test
jmp
fsubl
and
test
jge
insb
pop
lock
fs
and
test
std
jmp
fstl
ds
test
xchg
loope
inc
push
jmp
jle
ret
addb
cmpsl
inc
xchg
daa
lods
fistpl
sahf
dec
lods
bound
mov
mov
lahf
mov
stos
in
in
mov
shrb
sbb
and
cmp
inc
xchg
ret
xlat
and
pop
roll
out
xor
xchg
das
push
fdivp
out
lret
in
rolb
scas
jno
movsl
and
stos
jmp
adc
push
loop
sbb
ja
sahf
fnstcw
inc
jmp
lock
sbb
cmp
and
mov
lds
aam
movsb
mov
and
lahf
lds
cmp
lahf
lock
lea
data16
ret
aas
cmp
fcomip
fisttps
inc
sub
push
jae
mov
loope
lock
and
pusha
sbb
cmp
shl
lea
data16
mov
inc
test
push
add
sbb
ret
loopne
insb
loopne
into
int3
icebp
mov
mov
cmc
cs
mov
pop
add
dec
pop
ss
push
push
jl
xor
lea
das
dec
mov
lods
pop
inc
out
fwait
cmpsb
sub
stos
sub
insl
push
icebp
in
pop
xchg
xor
mov
and
fstpl
jno
movsb
mov
faddl
lock
lea
shll
loope
inc
mov
and
mov
loop
jg
inc
jne
shl
push
inc
and
addr16
inc
jne
jnp
rcrb
add
loopne
adcb
dec
xchg
push
add
xor
popf
aas
xor
xchg
xchg
orb
fs
vpaddq
jno
sbb
cmpsb
loop
popf
mov
pop
aad
mov
push
jmp
xchg
jbe
and
in
push
mov
es
pop
imul
loopne
jl
mov
push
jmp
xor
sub
pop
dec
pop
xchg
xor
dec
sti
cs
mov
loope
pop
repz
mov
add
les
mov
mov
imul
and
dec
jnp
sbb
push
inc
pop
or
fcoml
das
pop
or
stos
push
jno
xor
add
repz
pop
pop
je
ss
sbb
jl
test
fnstenv
pop
stos
rorb
repz
cmpsb
pop
imul
hlt
mov
out
xchg
mov
push
mov
aad
pop
out
fidivs
mov
push
jmp
jmp
jnp
add
push
jge
and
repz
mov
outsl
jecxz
popl
and
push
xor
push
mov
mov
mov
and
ja
dec
int
mov
fsts
in
xor
mov
dec
jge
jb
mov
cltd
fdivrl
and
sbb
sbb
insl
pop
cli
adc
repz
mov
dec
dec
mov
in
adc
sub
push
pop
and
repnz
aaa
jnp
xchg
sbb
decl
or
in
leave
outsb
mov
outsl
decb
sbb
xchg
and
ds
fildl
jne
mov
insl
popa
cmc
fimuls
mov
jmp
outsb
sbbl
cmp
repz
loope
add
mov
xor
sub
fistpll
mov
out
aam
call
cmpl
cmp
mov
xchg
jne
popa
dec
popf
jmp
fnsave
sub
and
in
fwait
push
fninit
jle
and
test
ds
adc
mov
sub
insb
js
repnz
mov
popf
xor
test
ret
pop
bound
jl
lret
mov
inc
xchg
pop
cmc
mov
pushf
jl
imul
pop
lahf
addr16
mov
xchg
jb
push
adc
cmc
add
jl
inc
fistpll
pushf
nop
push
xchg
imul
jnp
hlt
jg
fisubl
cs
inc
add
add
sbb
cs
test
xchg
mov
jb
sbb
pushf
mov
or
mov
cmp
cwtl
subb
adcl
sub
in
jl
mov
mov
mov
inc
jo
dec
repz
int
scas
jmp
sbb
fisubrs
repnz
scas
xchg
outsb
sub
sbb
sbb
test
push
cmc
mov
xchg
cs
cmpsl
into
in
jnp
in
push
dec
xchg
in
xchg
mov
cltd
inc
lods
jl
push
jle
ficomps
sahf
clc
ret
in
mov
mov
jbe
pop
jbe
jnp
stos
and
sbb
inc
mov
jp
mov
repnz
pop
jmp
pop
insb
mov
dec
sub
sbb
pop
adc
cld
mov
xchg
jmp
pop
idivb
inc
fildll
das
add
movsl
mov
jle
ret
jmp
in
insb
cs
cli
es
cli
cmpb
add
bound
xchg
mov
lods
jno
insl
fidivs
push
dec
push
cmp
xchg
mov
jne
out
stos
pusha
imul
js
jle
sti
pop
outsl
add
jl
jns
sbb
test
sub
ret
imul
mov
xor
int3
in
repz
jns
xchg
ret
decl
pop
add
in
out
jle
jne
daa
push
and
rdmsr
sbb
idivl
std
jb
add
in
jmp
imul
incl
jle
push
sbb
sub
mov
xlat
mov
imul
jl
inc
insl
cmc
xor
or
cmp
adc
ret
pop
and
jp
mov
mov
adc
jb
outsb
dec
jle
add
rorb
mov
cltd
out
adc
pop
inc
adc
imul
mov
jge
aam
std
notb
sbb
adc
add
dec
jl
xor
leave
js
cli
sub
xor
pop
cltd
push
dec
cli
sbb
push
sub
mov
mov
mov
insb
je
pushl
insl
sub
test
fldt
cwtl
hlt
bound
push
clc
popa
fmulp
sbb
push
push
aaa
fdivl
inc
jecxz
inc
jecxz
fnstenv
xchg
cltd
push
in
cld
sub
push
sub
jl
repz
cmp
adc
push
xchg
cmp
pushl
lea
push
js
jle
dec
hlt
pop
jp
sbb
in
ds
adc
or
jno
push
stc
aas
mov
mov
and
test
mov
sbb
out
dec
adc
gs
or
lods
inc
loop
rcrb
call
repz
jg
pop
mov
dec
into
aam
jbe
ret
addr16
out
jno
jae
popf
ds
lcall
ret
mov
in
dec
cmp
les
fnsave
mov
cmpsb
and
fldcw
shrb
jg,pn
push
inc
and
xchg
pop
mov
xor
xor
pop
les
fisttpll
xchg
adc
add
mov
popf
adc
sbb
stos
xchg
cs
mov
in
sarb
xchg
adc
fwait
cmc
loopne
nop
mov
ss
cwtl
xlat
fisubrs
fdivrl
lcall
loopne
pop
add
mov
fstl
sub
in
push
jle
adc
jne
sbb
cs
xchg
pop
in
jno
into
push
dec
mov
sbb
imull
lds
int3
test
pop
sahf
fcmovnu
imul
mov
clc
inc
sbb
aam
xchg
push
popa
loop,pt
inc
sbb
aam
xchg
push
dec
mov
push
pop
lret
dec
into
sub
mov
inc
in
clc
sub
fwait
sbb
mov
scas
inc
sbb
pop
cs
ret
cmpsb
pop
adcb
lods
cmpsb
in
push
sub
jmp
xchg
in
clc
xor
fistpll
jmp
xor
jge
jp
push
cmp
nop
test
add
repnz
mov
test
sub
xchg
insl
or
cld
jne
outsl
das
sbb
faddl
push
movsb
js
je
inc
cmp
push
push
pusha
in
pop
cs
inc
outsb
movsb
and
jmp
dec
push
or
repz
cs
xor
pop
and
daa
sbb
sub
jmp
jp
pop
incl
ja
and
mov
pop
stc
inc
loopne
pop
mov
cmc
test
subb
jb
and
or
sub
jae
daa
cmp
xor
addl
mov
sbb
cmp
aas
lea
enter
test
mov
and
loop
icebp
loope
dec
xchg
xchg
add
incb
sbb
jb
movsl
or
insb
cltd
jle
sbb
popf
fucomip
sbb
xor
jbe
popf
dec
stos
sbb
mov
jg
jmp
test
imul
cmc
sbb
mov
mov
clc
call
out
cmp
out
frstor
jp
inc
repz
cmp
je
rorb
jbe
decl
sti
push
cmp
xchg
xor
sbb
iret
das
stos
stc
int3
std
jmp
jno
mov
jg
push
aam
out
aas
push
stc
aas
sahf
aas
shl
lea
in
lret
arpl
cmp
pushl
std
jmp
push
movsl
pop
pop
mov
fmull
in
xchg
xchg
iret
test
cmc
lods
sahf
pop
sub
jmp
outsl
mov
adc
arpl
cltd
fdivl
mov
cmp
popa
xlat
mov
pop
lods
iret
cmp
xlat
add
ret
in
cmc
lret
sbb
xor
cmp
pop
ret
jg
orb
out
sti
cmp
or
jge
sbb
aaa
pop
adc
jge
xlat
mov
xchg
lds
fnstenv
pop
popf
add
mov
and
cltd
das
sti
or
xchg
xchg
rcl
std
dec
mov
test
loope
jno
std
or
mov
pusha
cltd
mov
xchg
pop
mov
ss
sub
cli
aad
repz
icebp
outsb
stos
adc
adc
jg
stos
and
subl
fwait
cmp
xchg
jo
mov
mov
insl
iret
jns
jbe
dec
or
negb
and
jmp
cli
loope
sub
inc
ss
cmp
pop
in
call
testb
stos
and
insl
add
sbb
adc
push
lock
sub
cltd
ss
jnp
into
inc
mov
sbb
hlt
mov
add
jnp
jmp
inc
call
sub
loop
add
sub
jns
and
inc
pop
cmp
cmp
jg
fistpl
pop
and
jle
push
loope
inc
out
pop
pop
outsl
loope
cmp
sbb
je
movsb
xor
jne
les
dec
mov
cli
and
mov
inc
ror
clc
mov
pop
add
dec
mov
sbb
outsl
mov
add
or
ficompl
or
int
lock
outsb
aam
pop
sub
icebp
add
jmp
add
in
inc
mov
out
stc
push
mov
fcoms
sbb
out
cwtl
mov
push
sub
fwait
sbb
orb
dec
fwait
popa
xor
sub
cs
outsl
jmp
xchg
nop
out
sbb
mov
lea
fxam
ret
pop
outsb
aam
ss
stos
jns
das
loop
or
cmpsl
pusha
adc
xor
jo
cmp
xchg
fists
xchg
pop
sub
adc
inc
add
add
hlt
shll
xor
jle
mov
fcmovnu
adc
jle
cli
jmp
sbb
add
jb
sbb
pusha
roll
and
adc
inc
cmp
and
adc
mov
xchg
mov
and
mov
xchg
xor
sti
popf
std
and
jnp
fcompl
dec
orb
push
inc
repz
pusha
push
orl
and
in
jge
flds
add
testl
test
or
testb
into
cmp
ds
pop
sbb
push
insl
cld
jle
iret
repz
std
xor
push
add
es
test
lock
cmc
adc
xchg
jg
cmp
push
jo
mov
mov
jne
sbb
rclb
add
push
dec
sti
push
pop
movsl
clc
jae
sub
jnp
push
mov
adc
jnp
cld
push
push
add
cld
sahf
in
fistl
mov
cmp
sti
lcall
int
aas
outsb
out
enter
call
push
jno
pop
lock
mov
jno
outsl
mov
xchg
pop
push
lds
pusha
mov
daa
push
jo
pusha
gs
sub
push
stos
fisubrl
add
dec
mov
push
ja
stc
in
daa
cmp
outsb
add
pop
clc
push
std
pop
fstpl
cld
xchg
and
lcall
out
dec
mov
sahf
pop
or
bound
sub
fistpl
leave
in
add
fwait
stos
imul
jle
cmpsb
scas
dec
out
or
outsb
ret
pop
add
aad
repnz
add
inc
xchg
add
bound
adc
lods
pop
pushf
pusha
loope
jbe
adc
out
daa
clc
shl
loope
dec
add
icebp
pop
mov
mov
pop
mov
add
xor
pushf
pop
add
in
pop
pusha
filds
leave
sub
sbb
into
lcall
lcall
jmp
push
dec
ss
dec
enter
dec
stos
movb
out
movsb
scas
cmc
outsb
pop
in
sbb
cltd
adc
stc
sbb
sbb
je
ljmp
pop
movsb
mov
cmp
fucomi
sbb
cld
mov
jmp
les
sub
test
fsubs
or
outsb
push
js
cs
cltd
lock
xchg
ss
negb
jns
adc
cmp
jp
aaa
cld
sahf
cmp
sbb
pusha
dec
inc
xor
mov
fwait
call
test
mov
and
les
shll
pop
fdivrp
imul
xor
pop
fcompp
xor
sahf
andl
inc
push
insl
push
mov
pop
mov
adc
in
cld
std
xor
es
push
das
jle
ds
push
xchg
std
movb
sub
inc
fnsave
arpl
popa
mov
pop
pop
add
mov
or
inc
out
mov
pop
add
jle
std
ftst
cwtl
add
outsl
loop
outsl
cmp
mov
jl,pt
adc
push
cmpsl
and
inc
adc
repz
add
xor
adcb
insl
cmc
mov
les
sub
cmp
pop
adc
dec
sbbb
in
fdivrp
push
adc
inc
clc
movsb
xor
es
insl
mov
aam
xor
sbb
and
stos
aad
adc
sbb
mov
add
stc
jl
movsb
in
sbb
roll
insb
mov
jae
push
aad
sbb
push
mov
ss
jge
insb
inc
cmc
adc
and
push
or
daa
outsl
mov
mov
cmc
roll
xchg
bound
sti
jne
push
sbb
outsl
into
xchg
ret
ret
mov
push
jnp
insl
repz
nop
mov
aaa
popf
push
cltd
stos
pop
sbb
mov
sbb
push
xor
lods
outsb
adc
push
xchg
mov
sbb
inc
xor
adc
fwait
enter
sbb
jne
mov
inc
xchg
jb
fisttpll
mov
ljmp
pop
jb
add
icebp
cmpsl
push
cld
fucomp
sub
fisubrs
sbb
pop
push
gs
cwtl
nop
adcb
loope
aam
test
mov
cmc
bound
or
sbbl
sbb
lret
gs
subl
mov
xchg
inc
xor
adc
mov
mov
cld
lahf
orb
adc
call
aaa
loop
cli
adc
push
sbb
add
and
mov
cmp
and
cmp
lods
out
repz
inc
cs
push
sub
or
inc
adc
or
adc
mov
xor
rcrl
xchg
es
pop
inc
sub
cltd
inc
jbe
and
jbe
sarb
popf
out
rsqrtps
pushf
mov
pusha
jbe
add
pop
xor
jg
pusha
push
sarl
sub
xchg
or
and
jp
fdiv
divb
add
pavgb
iret
add
jne
or
test
sbb
xchg
in
sbb
inc
jge
insl
jg
decb
cmp
bound
pop
dec
scas
out
mov
xchg
dec
loope
mov
aas
cltd
ss
pop
jg
cmp
and
test
inc
cmp
mov
aaa
pop
mov
fstpl
lret
jp
inc
in
dec
push
out
push
or
add
mov
ljmp
and
pop
shrl
clc
pop
inc
inc
repz
outsb
cmp
pop
mov
mov
loop
inc
mov
ss
movsl
sahf
stc
xor
add
std
lret
inc
mov
iret
int
in
das
daa
clc
pop
jbe
mov
test
push
inc
in
and
cmpb
rcr
pop
add
jp
outsb
cmpl
mov
data16
pop
cmp
fstpt
pop
adc
push
pop
loope
ss
aad
cli
scas
adc
push
jbe
push
in
fnstcw
and
xchg
ds
lea
mov
das
push
mov
cmpsl
inc
jmp
add
fwait
and
jno
sbb
xchg
sahf
mov
loope
and
adc
and
es
push
mov
popf
sti
mov
inc
or
jle
add
dec
push
mov
lahf
or
pop
das
orb
stc
inc
rcrb
movsl
in
mov
xor
dec
bound
mov
outsb
ss
std
leave
adc
inc
bound
mov
inc
ret
xchg
iret
pushf
int3
enter
xchg
or
inc
std
xchg
mov
int
cmpsl
int3
das
jmp
out
iret
out
xchg
popf
adc
push
fisttpl
addb
pop
popa
lahf
or
movsb
pop
out
sbb
lea
lods
pop
push
dec
xor
shl
inc
dec
lea
notb
ds
adc
inc
test
test
loope
sbb
adc
xchg
sub
push
scas
ss
push
push
mov
jnp
fildl
pop
pushl
sbb
leave
add
jl
sbbb
mov
frstor
adc
xchg
jge
inc
inc
mov
int3
jg
dec
dec
cmp
sub
mov
mov
aam
aaa
setbe
sub
outsb
lock
push
cmp
lret
sub
loop
xor
pop
add
fdivs
xor
jg
outsl
push
cmpsl
sbb
sbb
fldt
inc
pop
rol
fildll
xlat
adc
mov
jmp
mov
cld
add
cld
mov
mov
cmpsb
adc
push
jae
jmp
push
test
cmp
int3
xchg
inc
psllq
setle
inc
inc
jle
mov
outsb
pop
ret
inc
fwait
or
test
and
mov
dec
loope
jne,pt
gs
repz
nop
cltd
jo
cmpsl
cmp
mov
popa
lahf
cmp
lds
mov
jp
scas
loopne
js
ja
inc
inc
das
mov
pop
test
add
addl
push
in
bswap
std
add
mov
stos
dec
cli
mov
shr
push
dec
mov
and
and
in
adc
and
sbb
xor
mov
ds
mov
mov
push
jmp
loope
fcomi
pop
fidivs
cltd
std
les
push
lret
aad
push
or
or
outsl
and
in
stc
enter
mov
orl
loope
ret
sbb
and
jmp
lret
or
xor
xchg
mov
push
cmpsb
negb
xchg
aad
int
xlat
xchg
mov
cmc
ss
hlt
enter
shlb
or
mull
idivb
imul
inc
dec
jg
icebp
push
ret
push
mov
shrb
inc
or
lret
clc
call
pop
lock
push
mov
jne
mov
movsl
xor
mov
in
fs
push
bound
lods
rcr
sahf
std
adc
dec
jl
cltd
fidivrs
push
clc
dec
sbb
sbb
loop
out
int3
pop
push
out
xor
jge
daa
sbbl
adc
mov
mov
push
pop
fdivp
and
mov
fldt
insb
jle
dec
inc
jns
cld
sub
sub
daa
sub
cmp
lret
lret
add
push
or
mov
pushf
and
pop
mov
push
mov
add
sub
subb
pop
jl
push
adcb
aaa
pop
icebp
scas
cli
adc
and
jle
push
push
bound
sub
pop
cmc
or
adc
mov
js
push
mov
js
js
stos
cmpsl
cmc
js
loope,pn
fldl
sub
jae
xchg
sbb
jo
adc
mov
popa
lahf
mov
enter
xor
fstpl
push
insb
pop
push
push
into
fnsave
mov
adc
jo
sub
ss
in
call
subl
call
das
jle
stos
add
sub
jecxz
les
add
mov
sub
sbb
ds
jno
xchg
push
sbbb
mov
cmp
push
cld
xchg
outsl
inc
out
enter
sub
adc
mov
inc
pop
dec
pop
movsb
mov
jnp
in
lock
push
add
aaa
shlb
test
lret
js
js
jae
push
rolb
push
or
js
outsl
loope
js
mov
cmp
in
std
test
test
fsubl
cltd
xor
pop
xchg
lret
js
pusha
adc
insl
outsl
cwtl
add
jns
mov
xor
dec
lea
push
inc
cmp
jmp
cmpsl
jmp
push
bound
ret
mov
in
add
lea
mov
in
outsb
push
mov
xchg
push
add
xor
stos
in
add
pop
inc
loope
push
lcall
mov
sbb
push
mov
jg
inc
dec
mov
fmulp
dec
popa
int
cs
repnz
cwtl
pop
sarl
pop
hlt
outsl
sbb
pop
lock
sbb
add
into
inc
in
fmul
jg
fsts
daa
insb
cld
jle
shrl
add
jnp
xchg
cltd
push
dec
sub
pop
lds
adc
mov
and
inc
mov
ss
cs
sbb
xchg
xchg
mov
movsb
je
shlb
cwtl
dec
inc
call
mov
insl
jmp
adc
lods
pop
shll
in
rep
pminsw
push
pop
insb
insl
fisttpl
xchg
sahf
imul
mov
mov
push
xchg
push
cli
push
sub
dec
jmp
pushf
pop
jne,pt
ss
nop
pushf
push
xor
out
sbb
add
divl
negl
lds
shll
inc
fcomi
cmp
mov
sbb
in
rcrl
fdivp
test
and
bound
lea
jno
cld
adc
int3
sbb
jle
sub
and
cmpl
nop
pop
mov
popa
push
dec
flds
push
iret
adc
test
sub
and
test
call
pop
mov
popf
mov
or
jne
hlt
ds
cwtl
inc
or
test
movsl
insb
lock
mov
sbb
lods
sbb
call
inc
xor
fwait
jne
xor
mov
and
test
xor
sbb
cmc
addl
js
testb
xor
shrl
add
jge
popa
xchg
pop
aam
push
or
add
jnp
and
jmp
dec
sub
in
loop
mov
inc
in
xchg
ss
sahf
incb
pop
push
pop
dec
aad
outsb
mov
xchg
std
shlb
jno
icebp
inc
jne
loop
push
fs
lahf
popa
out
pop
sbb
mov
imull
jns
mov
dec
in
bound
or
jl
push
mov
insb
push
pop
or
testb
adcb
pop
std
sub
cmovo
inc
and
pop
sbb
cmp
push
jg
in
cmp
adc
lock
jge
inc
xchg
jle
dec
jnp
sbb
out
sbb
cmp
fs
fstpl
das
enter
mov
jne
roll
outsl
add
jnp
cmc
jg
clc
shll
dec
push
dec
mov
dec
mov
and
jbe
lock
outsb
mov
mov
mov
inc
je
js
mov
lods
call
mov
pop
jg
out
add
into
mov
or
in
add
mov
sbb
xor
add
hlt
fstp
cmpsb
and
and
mov
pop
mov
jnp
imul
adc
xchg
std
shlb
insb
test
and
loop
add
insb
mov
xchg
sbb
aas
les
outsl
movsl
icebp
cld
push
ss
out
mov
call
outsl
mov
cltd
cmp
or
and
in
lods
and
cmpb
ja
out
or
add
mov
cmp
lock
or
cmpsl
and
sbb
test
faddl
fdivr
jo
and
mov
jno
lods
shrb
int3
sub
dec
jge
push
int3
lcall
jl
aaa
hlt
repz
in
sbb
pushf
pusha
lea
int3
fwait
mov
hlt
cmc
sbb
scas
push
outsb
sub
test
mov
ret
pop
ss
sbb
mov
stos
test
xchg
js
adc
push
jecxz
mulb
adc
stos
jbe
enter
or
into
in
ljmp
inc
and
ss
pop
and
iret
push
xchg
pop
lock
mov
fisubs
es
jnp
and
add
inc
insb
lock
xchg
cs
add
outsb
push
push
lods
cmpsb
mov
and
sbb
jns
add
lods
sbb
xchg
cltd
outsl
push
and
fisttpll
dec
out
mov
dec
sub
shl
jbe
push
in
mov
imul
xchg
lret
inc
addr16
lcall
push
and
notb
imulb
and
movsl
push
jl
insl
ds
in
daa
xchg
cmc
and
inc
push
in
insl
and
push
or
mov
push
and
xchg
jne
push
sbb
fnstcw
aam
pop
sub
jl
fwait
popa
push
mov
dec
xor
sub
jne
push
xchg
pop
adc
into
jle
fisttps
std
and
mov
xchg
sbb
lods
loopne
mov
hlt
pop
iret
rolb
cs
fnsave
out
add
cmpsb
jo
xchg
add
adc
int3
out
xlat
loope
in
sti
dec
adc
pushf
dec
loope
inc
repz
aad
lret
pusha
add
cmp
dec
adc
inc
das
push
lret
je
pop
sub
xchg
or
repz
aaa
push
in
imul
stos
or
lea
xchg
fiaddl
data16
jo
insb
sbb
mov
add
outsl
cld
mov
stos
pop
jno
mov
test
mov
jbe
jg
add
cli
inc
sarb
xor
sbb
inc
call
jae
xchg
out
mov
cltd
sub
iret
dec
pop
xor
fmull
jnp
cmp
jle
repz
sahf
subb
sbb
adc
jmp
jo
pop
jno
call
mov
jno
lds
push
cwtl
loopne
fwait
sub
popf
cmp
cli
lret
inc
rcr
adc
add
mov
jne
repz
or
push
push
repz
cmc
sahf
push
and
jg
sbb
jno
in
jecxz
and
jbe
test
jbe
inc
stos
mov
ljmp
jl
shlb
movsl
adc
pop
and
xchg
sbb
xchg
push
pop
incl
fistl
scas
mov
push
pop
mov
sbbb
cmp
clc
rcrl
mov
inc
xchg
add
into
push
insl
mov
jmp
insl
mov
mov
push
mov
lret
cmp
or
lcall
iret
add
in
push
outsb
loopne
dec
xor
and
mov
test
fisubrl
xorb
out
shl
push
add
loope
fisubrl
idivb
push
pushf
jg
sbb
inc
push
mov
inc
sub
xchg
in
cmp
pop
test
iret
jle
hlt
add
ds
push
inc
or
stos
insl
lret
lods
popa
repnz
or
adcb
mov
dec
inc
add
aas
xchg
add
leave
and
syscall
mov
dec
lock
push
or
jo
mov
insb
std
xorb
lret
cmp
jl
push
push
mov
add
loope
shlb
jl
test
andb
cmpsb
lods
jb
push
mov
repz
repz
mov
pop
xor
pop
sbb
mov
add
mov
adc
insb
pop
mov
cld
push
mov
jl
or
rcr
sub
adcb
pop
jge
xchg
ss
dec
dec
jb
jmp
out
lea
sbb
pusha
imul
push
push
mov
xchg
and
and
add
inc
jle
sbb
inc
js
repz
xchg
ret
sub
ds
mov
imul
fwait
adc
pop
addl
sub
dec
xchg
out
lock
pop
pop
cs
inc
sti
xchg
xor
xor
pop
jnp
fadd
in
adc
bound
jns
inc
test
cmpsl
push
mov
shlb
insb
push
push
pop
push
inc
jle
ds
pop
sub
mov
push
cli
mov
outsl
and
test
les
mov
jnp
cld
jp
xchg
mov
out
fldl
lock
sbb
lea
pop
lods
out
cmp
hlt
cmp
fstpl
out
dec
pop
out
fstp
test
iret
or
jle
lock
mov
fcmove
pop
inc
mov
dec
sub
mov
xor
and
xor
add
and
mov
ds
sahf
jge
scas
je
movsl
loop
xor
jge
jecxz
std
jne
dec
out
fldcw
cltd
jmp
pushf
adc
jge
or
loopne
cmp
cmp
sbb
push
test
jae
std
ljmp
sbb
jg
xchg
les
pusha
add
mov
push
lahf
pop
gs
fistpll
js
gs
in
jge
mov
and
fs
pop
inc
gs
xchg
insl
xor
mov
inc
mov
or
push
or
pop
pop
mov
pop
add
mov
sti
or
add
outsb
cmp
sbb
out
jg
jne
std
in
push
mov
ds
pushf
mov
sysenter
jp
mov
fldl
insb
in
push
jno
dec
popf
rorl
enter
push
xor
and
aam
mov
subl
pop
jo
cmpsl
mov
cltd
ss
pop
pop
sbb
cmpsl
out
dec
subl
mov
push
sub
xlat
pop
and
push
mov
mov
sbb
out
and
push
sbb
or
push
push
jl
in
pop
push
loope
adcb
imul
cmp
pop
push
mov
testl
pop
divl
pop
movsb
es
cmp
pop
push
pop
mov
iret
xor
outsl
lods
es
jmp
outsl
add
jbe,pn
negl
out
faddl
sub
jno
fisttps
mov
mov
arpl
jg
scas
cs
bound
push
xor
into
loope
ss
or
jg
mov
xor
in
lods
into
and
fwait
jecxz
insl
repnz
stos
je
adc
xchg
pop
cwtl
jne
cmp
mov
inc
test
inc
cwtl
jp
ljmp
or
push
cltd
adc
adc
push
mov
mov
adc
fstpl
dec
jnp
jle
xchg
mov
into
std
sbb
sti
inc
sub
lock
adc
and
and
fstl
xchg
sbb
movsb
pop
test
addr16
inc
pop
negb
insb
jg
stc
pop
into
add
add
adc
sbb
sub
fildll
add
imul
shlb
aad
jle
dec
rolb
mov
lock
push
mov
leave
jno
fldl
jbe
out
add
and
stos
xchg
xlat
jb
insb
jg
js
sub
leave
jg
pop
iret
addl
and
or
jg
jg
mov
lret
rorl
stos
sub
imul
mov
daa
xchg
cmpb
ss
cmp
int
cmpsb
es
lods
mov
hlt
pop
hlt
mov
mov
sti
sbb
sbb
andb
fnsave
jg
or
aam
push
or
iret
std
aam
dec
sbb
scas
outsl
lcall
jnp
cmp
mov
jmp
ljmp
mov
xchg
fcompl
loope
mov
mov
and
jbe
enter
adc
cmpsl
and
fisubrl
outsl
push
test
cmpb
jge
lods
xchg
or
jge
add
cmp
xor
inc
dec
faddp
scas
and
addr16
cmp
int3
mov
xchg
inc
cld
jne
add
outsb
sbb
test
mov
and
popf
sub
jnp
pop
mov
ds
mov
ljmp
push
gs
mov
aaa
pop
sahf
sbb
sti
push
dec
lods
mov
sub
jbe
leave
daa
ss
fwait
inc
xchg
nop
test
lcall
pop
jae
cmp
push
nop
xchg
and
sub
sahf
mov
dec
mov
push
orl
sub
pop
xchg
jmp
shrl
sub
push
frstor
mov
sub
pop
jecxz
out
outsb
xchg
push
dec
xchg
out
inc
adc
aam
std
aas
pop
jge
test
xor
mov
fmul
sbb
repnz
mov
inc
push
ret
cmc
orb
jmp
cltd
and
or
lea
lret
dec
gs
loope
lahf
inc
repnz
inc
aaa
xchg
xchg
hlt
sub
or
mov
loope
rep
lret
out
or
inc
mov
inc
arpl
dec
add
rol
add
loope
out
sbb
int
push
xor
push
dec
mov
scas
push
in
cmpsl
xor
inc
fbld
bound
ja
xor
enter
xorb
add
add
sbb
nop
popf
jl
aam
jecxz
dec
aad
std
fmull
push
jne
mov
cmp
mov
push
add
daa
cs
dec
mov
inc
shl
add
dec
xchg
fsubr
pop
lret
lods
insb
sbb
pop
push
mov
sub
fstl
cltd
sbb
mov
mov
inc
mov
insb
push
sbbb
insb
cld
mov
inc
je
ds
jno
adcl
pusha
neg
sbb
clc
gs
insl
pop
outsb
jge
push
insl
pop
adc
xor
not
add
aad
popl
lods
inc
sub
and
mov
cmpsb
mov
and
and
push
sub
loope
scas
jae
rclb
push
mov
testl
lret
leave
xchg
fnsave
xchg
xchg
fiadds
nop
mov
and
and
jecxz
cli
gs
inc
in
jmp
das
push
fidivrl
add
movd
lods
movsb
loop
insb
sub
lret
add
sbb
push
les
xor
push
mov
cmp
inc
push
mov
fwait
jo
mov
es
jae
fnstenv
loopne
push
mov
xor
in
jbe
insb
enter
fcmove
inc
add
cmp
sbb
push
xchg
fsubrl
aaa
outsb
sbb
and
adc
stos
cmp
inc
loope
pop
js
pop
or
pop
les
and
push
mov
mov
jne,pn
stc
mov
lock
pop
jl
sbb
and
loop
adc
aas
mov
fwait
adc
push
lret
adc
cld
ss
xlat
pop
sbb
mov
adc
and
and
insb
adcb
cmp
popa
cld
adc
cmc
lahf
jp
sbb
gs
adcb
adc
out
cmpb
loop
dec
jae
clc
pop
dec
cltd
in
fcmove
xor
lahf
jnp
arpl
jbe
adc
mov
sub
les
out
cmp
rolb
aaa
popa
xor
cmp
and
negb
popf
outsb
push
lret
push
inc
dec
and
push
es
jecxz
pop
ja
and
sbbb
push
push
add
test
dec
inc
dec
adc
push
push
mov
data16
mov
dec
out
mov
shr
pop
jle
mov
and
dec
xchg
xlat
push
xor
cltd
xor
push
sbb
ffree
mov
pop
and
fldl
or
jne
jecxz
pop
ja
and
inc
mov
in
ror
inc
imul
xchg
iret
shlb
int3
shll
notl
sbbb
call
cltd
pop
sbb
sub
in
adc
mov
add
jnp
dec
mov
add
or
xchg
rorl
std
outsb
std
push
mov
cmc
and
pop
add
outsb
icebp
pop
cwtl
jle
pop
in
push
lret
pop
fwait
sbb
adc
outsl
fnsave
pushf
mov
cmc
mov
in
add
cmp
pop
clc
push
push
idivb
cmp
fucomi
filds
lea
jbe
sbb
mov
jl
sbb
push
add
push
insb
dec
mov
test
pop
cwtl
std
loope
out
fdivl
loope
addr16
pop
scas
mov
test
push
outsl
xchg
outsb
leave
sbb
adc
inc
push
xor
xchg
arpl
sub
mov
jnp
aaa
test
pop
movsl
xchg
cltd
shrb
jne
jle
mov
pushf
fsubrl
inc
loopne
mov
std
rcrb
popa
sbb
pop
cmp
jge
cmp
and
pop
push
sti
shlb
inc
or
xchg
aaa
xor
dec
inc
jno
dec
loop
push
push
imull
push
sbb
pop
ret
jmp
loope
arpl
jno
orl
inc
insl
fistps
mov
mov
mov
jo
enter
rcll
push
xchg
ja
loop
enter
jne
scas
idivl
fstpl
aad
cmpsl
mov
sub
and
std
jbe
aad
movsl
mov
out
and
in
xchg
inc
push
nop
in
mov
sbbl
jl
fistpll
jbe
ds
jne
aad
addb
sarl
cltd
and
mov
add
sbb
fstps
fstps
push
push
push
push
inc
xchg
mov
adcb
insl
xor
fnstcw
jl
push
push
inc
outsl
mov
cltd
clc
aad
jns
mov
cltd
out
popa
test
fsub
xlat
add
mov
shll
push
sahf
repz
mov
push
push
jecxz
nop
and
clc
nop
xchg
fnstsw
repnz
pop
in
mov
dec
insb
mov
xor
scas
mov
xchg
leave
sbb
hlt
push
cs
adc
in
cs
push
call
loopne
repnz
mov
das
imul
aas
repz
adc
jg
js
mov
inc
cmp
test
jg
inc
jle
jae
push
in
mov
and
jl
cld
pop
inc
sbb
mov
mov
push
pop
and
inc
push
insl
cmpsl
adc
or
cmp
out
mov
mov
sbb
mov
dec
jns
and
or
jle
pop
sub
cmp
sub
sahf
sbb
push
les
push
dec
insb
das
pop
inc
das
enter
sub
cmp
add
test
cmc
cmp
das
pop
mov
xorb
aad
aas
mov
pusha
xor
dec
xchg
and
sbb
xor
mov
lcall
in
push
insb
outsb
mov
es
mov
fwait
test
movsl
sarb
push
in
inc
lea
outsl
and
mov
push
fimuls
out
cmp
sbb
cmp
std
and
rcrl
ss
adc
loopne
stos
sti
test
lock
fs
and
arpl
jp
jne
out
mov
cmpsl
cmp
lret
ja
jne
shl
xor
mov
loop
cmc
add
xor
out
stc
adc
jmp
xchg
dec
add
push
jne
cmp
jmp
test
mov
dec
test
lea
xchg
lea
stos
ret
dec
dec
scas
mov
cmc
fwait
and
out
cmpsb
jecxz
sbb
rorb
lahf
or
or
mov
test
inc
and
mov
inc
je
into
jmp
lock
mov
ret
add
xor
mov
xor
or
dec
out
inc
pop
cmp
push
sub
and
inc
xor
mov
pop
inc
test
rcrl
imul
cmpsl
pop
xorl
daa
xor
pop
pop
inc
imul
xorb
andl
stos
lahf
mov
xorl
inc
mov
cmp
cmp
mov
fstl
dec
push
int
push
jmp
movsl
xchg
repnz
sub
jb
sbb
lcall
jecxz
mov
cmp
outsb
add
fistpl
xor
icebp
aaa
xor
sub
and
lret
fsts
scas
mov
push
and
out
jne
xor
lret
das
les
outsl
or
subb
shlb
cmp
xor
in
push
add
mov
fucomi
pop
and
dec
inc
cmp
jo
fucom
in
pop
xor
sbb
jg
test
push
js
xchg
out
js
jmp
iret
nop
pop
bound
push
dec
in
std
sarl
int
add
fs
mov
dec
test
subb
mov
bound
aad
jne
cmp
test
aad
lret
push
mov
dec
mov
pop
bound
les
in
sbb
int
adc
notb
sub
cmc
sbb
inc
in
cmpsl
xorl
dec
jne
sub
pop
aam
aad
ret
mov
test
es
fnsave
lret
push
in
arpl
sub
ss
inc
pusha
xchg
pop
jne
sbb
push
pop
pop
push
cmp
pop
in
push
cmpsb
bound
mov
push
shlb
sub
adcl
ret
fstps
ljmp
lods
lcall
andl
jp
popf
inc
adc
dec
jle
push
sbb
aaa
or
cwtl
jge
jns
das
inc
sub
sbb
dec
stc
ja
mov
test
insb
cmpl
in
pop
dec
int3
push
sub
dec
inc
xor
out
jae
repz
subl
je
xchg
cmpl
js
mov
jge
lods
cmpsl
fstpl
into
pop
adc
lahf
rep
adc
add
mov
inc
or
and
jae
add
sbb
sar
pop
cmc
mov
push
inc
insb
xor
fnstenv
sbb
jl
pop
test
inc
shr
test
rolb
inc
inc
sub
jnp
xchg
int3
sub
push
insb
dec
mov
stos
imul
out
and
add
xchg
rol
adc
and
repnz
int
xlat
out
push
ss
notl
inc
cmp
fistps
call
xchg
in
jb
push
test
jne
cmpsl
out
add
push
adcb
cmp
jne
out
adc
enter
cmp
jne
jnp
jl
fsts
cmp
scas
lcall
jno
fsts
adc
imulb
and
mov
std
stos
push
mov
and
mov
ljmp
fs
and
and
mov
jne
out
add
push
adc
push
push
fsub
xor
push
and
mov
outsl
mov
test
negl
in
in
mov
gs
xor
push
sbb
test
cld
add
and
add
pop
jo
inc
xor
imul
dec
inc
sub
push
sub
sbb
jnp
xor
xchg
dec
nop
cs
and
push
adc
lcall
mov
cmp
cmpsb
xchg
std
out
xchg
sbb
cs
pop
mov
and
cmp
add
cltd
sbb
mov
dec
sbb
outsb
xor
call
data16
dec
lcall
pop
sbb
imul
dec
fcomps
fdivrs
in
push
xchg
lea
jle
repnz
movsl
mov
xchg
sbb
sub
lcall
and
cs
pop
mov
sub
in
ds
out
cmp
fsubs
roll
dec
jo
mov
iret
dec
jne
sar
ljmp
vpmaxsw
xor
mov
adc
xchg
add
and
sti
insb
add
sbb
push
lret
addb
add
and
add
jge
inc
fprem1
mov
lea
push
inc
outsl
push
dec
pop
mov
negl
mov
hlt
and
xchg
dec
stc
dec
sbb
jns
hlt
in
xchg
icebp
jno
inc
imul
dec
xchg
sbb
xchg
and
in
inc
push
test
jl
mov
and
mov
and
sbb
cli
popf
dec
cmpb
mov
push
mov
or
fistpll
nop
mov
fdivrl
xchg
nop
sbb
dec
mov
cltd
rcr
add
loop
xchg
lret
fisttps
jae
icebp
push
es
sti
in
sbb
jl
inc
mov
and
test
push
xlat
loope
mov
std
cmp
jno
into
aad
jmp
xchg
or
sbb
movsb
mul
jl
mov
cmp
loope
fnstcw
stc
cmp
mov
inc
mov
dec
movsb
call
cs
xchg
adc
repz
xchg
aas
xor
sbb
movsl
lcall
or
mov
jl
call
mov
sbb
cmp
inc
loope
mov
loope
iret
in
fidivl
xchg
lods
aad
iret
fbld
xchg
pop
out
outsl
ds
inc
inc
insl
loop
or
adc
mov
and
cmp
jo
das
jle
loope
sbb
pop
add
stc
pop
dec
loop
jmp
rolb
push
dec
adc
lock
add
data16
loope
add
roll
and
cmc
scas
js
fcmovbe
add
xchg
mov
ss
add
movsl
movsb
sbb
popf
sub
adc
dec
cmc
and
insb
mov
add
and
lods
dec
cmc
negl
in
xor
filds
adc
scas
mov
add
add
mov
or
dec
and
sbb
mov
pop
test
sbb
and
int3
mov
sti
sub
mov
inc
xor
das
lea
jno
out
xor
orb
shl
sbb
fadds
test
fldl
sub
or
sbb
js
roll
stos
fisubrs
push
dec
add
cmp
add
dec
mov
das
sub
adc
cmp
sub
xor
cli
mov
std
cwtl
fbstp
icebp
imul
mov
cmc
aad
pop
shr
pop
popa
pop
inc
jmp
lea
shlb
pop
test
popf
fs
adc
mov
cmp
and
mov
ljmp
js
popa
inc
pop
and
fisubs
jg
stos
and
add
dec
xchg
push
xor
sbb
sbb
dec
popa
and
mov
ljmp
push
sarb
leave
xor
shl
lds
ret
pusha
fucom
fdivrl
sub
hlt
mov
ljmp
push
mov
mov
mov
add
lods
mov
dec
fstl
sub
jg
push
jne
out
test
out
call
sub
test
scas
test
rorb
sahf
xor
cli
aad
cld
add
int
xchg
mov
ljmp
enter
pop
cmp
cmc
imul
pop
in
jb
mov
loope,pt
jns
sub
movsb
mov
ljmp
mov
std
lea
imul
mov
jmp
pushf
sbb
mov
ffree
cmpsb
and
ljmp
test
popa
ja
lods
in
sti
pop
push
andb
pop
mov
cs
loop
and
outsl
add
inc
mov
imulb
popa
pop
dec
ljmp
sub
les
orl
popa
lahf
bound
adc
mov
cmp
inc
mov
imulb
pop
mov
ds
outsl
jmp
flds
mov
push
popa
notb
fldl
fs
lea
repz
aad
out
mov
test
or
iret
pop
rcll
je
jp
ffreep
outsb
jge
mov
and
les
push
mov
mov
jge
mov
dec
test
out
fwait
rorb
test
pushf
jns
icebp
test
jl
dec
dec
mov
mov
mov
mul
loopne
jno
push
xor
sub
fwait
mov
fldl
or
fisubrl
dec
mov
mov
imulb
loopne
inc
lock
and
out
sbb
or
pop
sub
mov
sbb
xor
test
ljmp
movsl
outsl
mov
push
adc
loop
or
aaa
out
les
lret
lret
in
test
mov
add
sbbb
das
mov
mov
inc
test
pop
and
test
cwtl
mov
push
push
xchg
jno
nop
or
adcb
push
outsl
jecxz
jl
push
jne
out
mov
sub
mov
mov
cmp
aad
push
in
or
sbb
xchg
ret
cwtl
add
mov
mov
fsubrl
cmp
cmp
std
rorb
int
mov
testb
inc
jmp
shll
lea
xor
out
roll
and
mov
out
dec
mov
mov
mul
jne
mov
mov
xor
mov
outsl
mov
addb
sbb
sbb
and
dec
aas
mov
aad
outsl
sbb
cmpb
jnp
jge
ja
or
fldl
sbb
fsubl
cmpsb
int
lret
and
mov
push
cltd
mov
dec
jne
cld
lods
pop
or
fwait
jbe
and
or
repnz
std
stos
and
dec
inc
ljmp
adc
std
outsb
call
in
jecxz
and
xchg
and
stos
movsl
std
and
pop
aas
fs
fnstsw
dec
daa
out
sub
repz
and
push
dec
jne
test
mov
add
aas
imul
inc
stos
jmp
jnp
cmc
jle
jge
mov
lods
sbb
aad
xor
xchg
jo
loop
enter
pop
xchg
sti
test
fbstp
jmp
fadd
sahf
rcrb
push
imul
mov
push
int
mov
cltd
xchg
das
cmp
fldl
and
adc
stos
out
and
fdivs
jno
ljmp
out
aas
enter
fadds
mov
subl
fwait
sub
int3
in
ja
dec
imul
cld
int
jmp
ss
test
push
mov
cmp
add
pop
push
sub
push
mov
fstl
inc
icebp
test
popa
int3
js
jmp
cmc
js
xor
push
jg
push
mov
mov
imul
sbb
inc
or
sbb
add
ljmp
mov
iret
sar
cltd
pop
xchg
pop
push
or
rolb
in
loope
mov
lret
das
les
inc
pop
sub
cli
call
push
cmc
fwait
sahf
fildll
push
insb
dec
mov
insb
mov
jg
push
int
aas
aad
mov
addb
incb
jns
cmpsb
mov
mov
ss
add
rol
andb
out
lea
mov
dec
je
ret
rolb
mov
and
ljmp
mov
shlb
lods
pop
in
jo
cli
rclb
cmc
dec
ds
mov
jl
adc
add
leave
jp
pop
pop
adcb
pop
mov
enter
dec
mov
mov
mov
jb
jbe
aad
sub
cmp
cmp
loop
les
call
mov
push
pop
xchg
xor
pop
outsb
mov
cmovle
ljmp
call
mov
fildl
cli
dec
sbb
in
and
ficoml
sbb
adc
int3
nop
cmp
outsb
nop
mov
inc
xchg
and
jnp
sub
and
test
std
mov
inc
jne
cmp
push
and
pop
pop
xor
adc
jecxz
in
jle
cmp
sarl
dec
popa
xor
sti
adc
jg
fstpt
popf
filds
and
add
pop
pusha
xor
cmovle
adc
pop
dec
sbb
repnz
pop
jle
hlt
mov
repz
fst
add
addr16
test
loop
jno
stc
sbb
dec
mov
hlt
xor
jo
jne
sub
mov
mov
dec
lods
push
std
pop
ret
cmp
bound
dec
mov
jno
inc
jne
mov
pusha
loopne
mov
popa
or
pop
adc
dec
test
mov
push
mov
xor
dec
cltd
push
in
push
sub
sub
xchg
cmp
mov
xchg
mov
dec
mov
or
inc
adc
aas
xchg
cs
je
scas
scas
xor
insb
cmp
sub
cmp
mov
outsl
fmuls
xchg
in
jle
push
pop
and
mov
std
dec
outsl
cmpsb
test
pop
pop
mov
pusha
jle
push
inc
outsb
and
inc
xchg
je
or
mov
jle
lret
shrb
cmc
les
and
inc
stc
pop
add
adc
jle
and
lds
mov
adc
jle
aam
std
lcall
adc
subb
xchg
ret
int3
and
jge
jne
loope
clc
lcall
push
mov
es
andb
sub
outsl
xchg
out
mov
arpl
fwait
dec
cmp
loop
xchg
pop
shll
adc
jo
xchg
hlt
cmp
cmp
stc
inc
jecxz
xchg
cltd
and
and
rcll
xor
nop
leave
jne
mov
ljmp
xor
cltd
pop
inc
pop
mov
fistpl
fstl
sbb
in
int
xor
shlb
pop
and
inc
dec
jle
add
out
mov
dec
add
out
ret
fwait
or
xchg
bound
mov
fnstsw
subl
loopne
sahf
cmp
jmp
mov
shll
enter
mov
js
loope
mov
cli
add
xorb
sbb
rcl
dec
lcall
clc
lahf
mov
sbb
int
mov
xorl
jb
mov
mov
lds
ja
dec
loop
cmp
cmp
inc
pop
cmpsl
add
xor
ds
daa
leave
aaa
add
mov
bound
inc
mov
fdivrl
lahf
push
aam
mov
dec
inc
mov
pop
xchg
imul
inc
test
les
test
jg
insl
rolb
loop
addr16
add
mov
mov
inc
insb
pusha
loope
cmp
lods
jg
cmc
pushf
out
adc
mov
addb
push
pop
sbb
ljmp
les
loope
fisubrs
inc
dec
add
and
lods
jnp
add
out
popa
imul
adc
push
lea
sti
xchg
inc
pushf
data16
mov
and
fidivs
insb
lods
xchg
adc
call
ss
mov
pop
arpl
out
call
add
jne
mov
cltd
adc
mov
push
pop
aad
std
add
test
loope
pop
dec
lahf
dec
stos
loop
sbb
adc
xor
sbb
xchg
daa
dec
add
lock
cld
test
daa
icebp
xchg
rcrl
test
jmp
mov
clc
mov
sbb
inc
dec
jle
and
mov
insb
ds
rcrl
imul
adc
sti
fistpl
jbe
cmpsb
int
js
inc
mov
jo
es
repz
sbb
dec
jl
cmpb
mov
xor
in
cmp
ret
andb
rolb
add
sti
xchg
out
sti
pop
cmp
push
iret
and
and
sub
loop
test
jb
mov
in
in
cld
push
outsl
pushf
pop
loop
pop
or
inc
lahf
pop
test
into
sub
call
test
and
sbbb
inc
jmp
sbb
adc
test
jb
or
and
sub
jne
inc
test
and
pop
imul
ret
mov
out
fdivl
cmpsl
lock
loope
xor
jge
lahf
mov
add
call
sub
cmpsb
test
push
out
cmp
in
xor
and
decl
pop
lahf
nop
test
xor
sar
cld
xchg
mov
ss
mov
inc
cmpsb
lods
inc
push
shrl
xor
sbb
lea
sub
sarb
lret
xchg
mov
jb
in
fimuls
adc
ror
in
and
ret
and
sub
and
pop
jg
out
ror
inc
in
dec
xlat
rep
xchg
adc
bound
xchg
jp
jo
ljmp
lret
in
pushf
popa
cmp
out
jp
jb
in
sbb
clc
add
pop
std
jne
push
outsl
mov
sub
fistpl
pop
push
int
inc
int
int3
sbb
dec
cwtl
cmp
out
setns
sahf
es
cmp
add
leave
ret
push
or
jmp
fs
jle
ds
hlt
push
imul
dec
mov
mov
mov
lret
addb
insb
cmp
adc
cmc
and
lcallw
lahf
cwtl
jbe
hlt
and
pop
xor
insl
insb
je
mov
fnstsw
xchg
shll
int
shrb
jg
adc
pop
enter
jge
push
repz
les
test
mov
aaa
mov
xchg
subl
cmp
sub
adc
outsl
mov
jae
inc
cltd
sbb
inc
mov
pop
mov
and
jne
imul
in
pop
mov
cmp
pop
pushf
or
insl
cwtl
mov
mov
test
jecxz
out
lret
lea
fnsave
push
jno
xor
xor
add
shl
mov
imul
add
and
sbb
pusha
imul
jl
imul
ffree
outsl
and
jecxz
mov
in
je
hlt
push
cs
fbld
adc
jno
std
or
jne
jl
insl
fs
pushf
sbb
aam
push
pushf
test
add
mov
movsl
sub
sub
and
popa
xor
pop
sbb
mov
insl
in
mov
pop
inc
sbb
and
jnp
sbb
cmp
fisttpll
jns
cltd
push
cmp
mov
sarl
jne
in
cli
jne
shll
cltd
mov
cltd
sarb
mov
loopne
fcompl
in
cmpl
xchg
push
sbb
imul
arpl
repz
cmp
mov
shll
cmp
test
inc
fstps
xor
ror
rorl
loop
lock
sub
lock
out
cltd
lods
dec
cld
fnsave
sbb
mov
in
inc
bnd
aam
pushf
or
add
int3
dec
push
ds
or
cwtl
lahf
ror
adc
cmp
push
je
cmp
push
sti
int3
dec
pushf
lds
jne
cli
lcall
sbb
pop
cmp
jg
insb
or
jnp
outsb
repz
adc
test
mov
sbb
jl
rorb
push
sub
xchg
in
fdivl
push
negl
cs
mov
ret
dec
stc
cmc
cmc
incb
leave
outsl
mul
cmp
pop
ret
std
dec
xchg
imul
jl
fdivrs
out
fldl
lods
mov
sbb
xor
cmpb
and
fdivl
pop
dec
jb
mov
cmc
push
cmp
jg
out
in
pop
daa
hlt
and
sti
insb
sub
xor
inc
mov
cs
xchg
inc
rclb
sub
cltd
adc
cs
aam
jl
push
ss
ja,pn
test
sub
sbb
popa
test
daa
dec
ffreep
mov
test
addb
xchg
ja
ss
mov
out
cmp
fstpl
fs
rcll
scas
push
int
inc
insb
cmpsb
push
icebp
mov
in
pop
lcall
sub
push
insb
xchg
xchg
gs
push
sub
dec
insb
xchg
dec
dec
cltd
hlt
xchg
jge
scas
mov
aad
cld
mov
outsl
pop
outsl
lea
sbb
jne
repz
inc
and
insb
pop
outsl
insl
xchg
cmc
test
adc
sbb
inc
xchg
cmc
cmp
xor
xchg
insb
xchg
push
dec
jne
pop
pop
in
pop
ret
dec
add
rclb
pop
jo
xor
and
les
and
mov
fsubrl
call
jg
iret
loope
sub
addr16
lea
ret
xchg
mov
loope
add
mov
bound
cltd
mov
xchg
and
sub
lcall
arpl
mov
mov
sub
fiaddl
adc
mov
push
rorb
cmpsl
or
xor
and
cwtl
or
push
mov
mov
in
cmp
xlat
inc
xor
into
and
sar
or
adc
xor
dec
fisubrs
outsb
add
mov
mov
inc
dec
jne
jg
ds
sbb
sub
pop
into
call
das
lods
fadds
jbe
jmp
jecxz
cmp
xchg
sbb
es
sbb
leave
jge
rorl
movsb
sbb
jbe
or
push
mov
mov
cmp
subb
scas
imul
cmp
dec
mov
jecxz
mov
hlt
lods
cs
in
mov
mov
negl
push
lret
mov
dec
adc
addl
sub
repnz
adc
ja
mov
jge
sbb
stc
jg
push
outsl
dec
adc
jmp
jp
imulb
dec
lret
jl
pop
test
sub
pop
cmpsl
imul
hlt
aas
scas
cmpsl
adc
stos
data16
push
or
push
loop
sub
inc
mov
imul
xor
icebp
and
mov
dec
dec
cmpsb
dec
push
and
sbb
rol
popf
decb
xor
stc
sbb
xchg
into
lcall
dec
pop
scas
pop
jnp
sbb
popa
pop
dec
mov
dec
xorb
or
mov
sbb
adc
mov
jle
cmc
mov
sbb
push
les
into
into
xor
fnsave
mov
push
rclb
cld
mov
out
and
xor
repnz
dec
mov
addr16
and
fwait
xor
subb
lahf
adc
cltd
les
inc
push
mov
mov
test
insl
loope
add
xor
daa
push
and
insb
xchg
xchg
pop
orl
xchg
addb
movsb
clc
and
imul
sti
lahf
push
lea
cmp
or
inc
adc
aad
dec
push
add
loopnew
cmp
cmp
pushf
add
and
out
lahf
xchg
repz
sbb
mov
cwtl
sub
jnp
imul
iret
push
xor
adc
mov
orl
repnz
insl
stc
dec
cmp
cmp
pop
cltd
xchg
fndisi(8087
mov
shrl
sar
loope
punpckldq
stos
arpl
add
jge
or
or
pop
push
jne
aad
je
push
aam
test
loope
out
mov
push
or
out
out
push
fisttpll
lahf
insb
dec
sbb
es
inc
cmp
in
xor
and
fstpl
test
les
cltd
fucomp
add
pop
ja
push
frstor
ret
les
das
push
mov
ret
out
fmull
arpl
jnp
in
push
cmc
pop
inc
xchg
mov
int
inc
rcrb
jg
loop
sub
inc
out
cmc
hlt
sahf
incl
flds
and
fdivrl
cmp
bnd
jbe
mov
inc
add
lock
hlt
fsubrl
mov
lods
mov
jae
aam
stc
scas
sbb
cmp
insb
in
cmc
mov
pop
fmuls
cmpsl
aas
adc
idivl
adc
inc
insl
xchg
data16
sbb
xchg
and
sbbl
fdivrs
inc
inc
inc
pop
sbb
and
sbb
decl
pop
or
inc
fwait
sub
scas
lret
sub
aas
gs
sub
rolb
pmulhw
xchg
xchg
mov
pop
aam
mov
mov
sbb
cmp
hlt
fcomps
outsb
arpl
lea
pop
cmp
pop
push
popa
stc
aam
ljmp
les
dec
and
cmp
aam
cld
mov
and
cmp
jmp
outsl
xchg
adc
and
push
insb
cltd
loop
inc
mov
aam
in
mov
jnp
repnz
jg
out
sbb
adc
mov
mov
cmc
jo
add
test
or
add
in
inc
aam
movsb
cmp
fldt
test
addr16
repz
cmp
in
jns
dec
and
push
add
lahf
jmp
outsl
or
dec
mov
ja
ds
data16
mov
aaa
aaa
out
mov
push
andb
fnstsw
push
or
lods
and
lret
cltd
xchg
movsb
add
movsl
add
adc
movsl
mov
push
iret
pop
fstpl
pop
ja
and
movsb
and
jg
dec
std
push
rorb
pop
stos
lock
mov
and
enter
std
mov
jne
out
mov
call
push
mov
sbb
inc
push
lock
cltd
push
dec
xorb
pushf
loop
jl
stos
and
dec
adc
lods
and
xchg
insl
add
add
pop
inc
imul
jp
lods
out
outsb
jo
mov
ret
cmp
out
jns
sarb
js
ss
pop
push
or
std
push
adc
fisttpl
jle
aam
outsb
into
rcll
lods
out
xchg
sub
mov
lret
xor
repnz
fcomps
test
lock
les
call
out
lea
sbb
stos
jg
stos
and
and
outsl
bound
inc
mov
test
sub
outsl
sbb
mov
inc
shrl
pop
push
sub
popf
jae
push
xchg
push
outsb
push
ret
adc
push
aas
imul
push
jle
mov
into
sahf
and
mov
mov
leave
jl
lea
xor
sub
in
call
aas
cmp
inc
and
js
les
push
pop
enter
jge
pop
sar
lea
repz
cwtl
into
lock
sbb
call
jmp
aaa
sahf
aam
mov
jns
mov
or
push
sti
xor
inc
std
sub
ret
adc
test
adc
popa
sahf
sbb
add
jnp
cld
movsl
in
mov
dec
int
and
outsb
lods
fmuls
movsl
jg
cmp
cmpb
and
arpl
xor
sahf
xchg
jnp
in
sub
push
lods
inc
add
mov
inc
mov
mov
xor
jmp
shl
ss
mov
inc
out
lret
lea
mov
sbb
sub
mov
in
ds
fwait
dec
sbb
fildl
aad
and
arpl
repz
mov
inc
out
jmp
or
dec
jne
push
insb
add
fstl
jns
cmc
sub
lock
xchg
mov
inc
out
mov
jnp
insb
mov
in
fwait
mov
lods
inc
loope
mov
insl
adcb
cs
aas
mov
leave
cmpl
mov
stc
lahf
sub
pop
push
addb
arpl
sbbb
add
add
inc
pop
and
pop
fstp
ss
pop
int
mov
pop
outsb
and
cmc
loopne
fstpt
popf
inc
mov
and
frstor
test
fstpl
adcb
mov
insl
loope
xchg
dec
adc
mov
pop
frstor
loope
ffree
movsl
and
pop
xor
xchg
push
mov
and
movsb
and
repz
jnp
stos
jg
popf
aad
lea
dec
fnsetpm(287
mov
divb
ret
cmp
push
test
adc
mov
jg
cmp
jno
xchg
insl
frstor
adc
xor
pop
push
rcrl
cmpsl
dec
sarl
loop
sbb
test
sub
test
jo
addl
ret
fcoms
pop
mov
aam
fmul
cs
fists
nop
sbb
movsb
mov
pop
lods
jp
clc
mov
or
cmpb
lock
xor
jne
cmc
inc
push
mov
pop
int
mov
xchg
shll
inc
or
jle
push
pop
jl
fisttpl
rcll
xchg
inc
xchg
pop
mov
sub
cmp
arpl
and
jns
mov
sbb
movsl
push
xor
jp
jo
ss
push
jge
push
xchg
and
loope
add
and
sbb
aad
lea
stos
pop
gs
test
in
cmpb
pop
nop
cmp
hlt
pop
aaa
mov
push
popa
arpl
mov
fwait
pop
leave
sbb
arpl
fstl
outsl
std
lds
jae
enter
mov
or
inc
std
cli
push
lods
jno
mov
popf
movsl
and
outsl
or
popf
shrb
inc
test
add
adc
pop
push
cmp
stos
jp
inc
pop
int3
lcall
leave
push
adc
dec
dec
ret
pop
ds
mov
loope
cmc
xchg
cmp
xchg
sarb
repz
pop
out
jns
pop
push
sbb
jle
push
clc
pop
dec
and
mov
jno
data16
data16
push
orb
imul
push
arpl
xchg
cmp
roll
mov
xchg
jle
adc
cmc
or
and
bound
inc
and
es
std
sub
mov
mov
sub
aas
xor
aas
fildl
mov
and
push
adc
jl
mov
outsb
mov
jle
outsb
adcl
hlt
or
in
xchg
bound
outsb
in
fldenv
inc
addr16
sub
in
sub
mov
cmp
es
cmp
mov
inc
ljmp
xchg
xchg
xchg
pop
mov
xchg
daa
enter
imul
sub
cmp
pop
loope
mov
jmp
adc
xor
js
divb
sub
test
and
lea
xchg
in
mov
shll
xchg
rcr
pop
xor
or
jmp
pop
cmp
outsl
and
sub
sti
xchg
mov
xor
jnp
js
dec
lahf
in
add
cmp
mov
and
fldl
repnz
loope
testl
sti
mov
or
xchg
pop
push
and
add
mov
dec
arpl
inc
sbbb
in
es
xor
popa
pop
inc
jle
mov
pop
shlb
cmp
lret
aas
mov
mov
popa
and
mov
fld1
or
push
pop
and
push
sbb
in
sbb
pushf
ds
and
jl
jo
or
xchg
jns
push
xchg
mov
sbb
pushf
subl
lahf
imulb
dec
dec
fnstcw
pop
push
fcmovnbe
leave
in
push
ds
mov
bound
ss
mov
xor
cld
adc
adcl
inc
mov
shl
aas
and
sub
fildl
fwait
in
icebp
fldl
adcl
sub
ljmp
jbe
inc
sbb
mov
dec
and
mov
or
push
les
andb
or
adc
pop
jne
inc
out
pop
insl
in
popf
int3
sub
test
in
pop
push
inc
xor
mov
test
push
or
dec
inc
jbe
adc
out
add
and
xchg
pop
inc
push
push
shlb
jb
pop
insb
stc
fistl
jo
fcmovnu
sbb
pop
sti
movq
push
xlat
pop
jne
stc
std
add
jo
repz
jmp
cmp
cmpl
and
repz
jae
insb
xchg
call
or
scas
sub
pop
cmpsl
outsl
push
psrad
fidivrs
push
pop
push
pop
mov
sub
popa
cltd
cltd
insb
dec
cmp
lods
xchg
ret
cmp
inc
cmp
mov
sbb
mov
sti
mov
icebp
outsb
stos
add
sbb
jns
sbb
push
pop
fbstp
outsl
jmp
add
subb
jp
sbb
fnsetpm(287
fistpl
inc
inc
mov
xor
fwait
cmpsb
mov
push
ss
clc
sbb
inc
xlat
loope
inc
das
or
imul
repz
call
fldl
jns
popa
les
fcomi
sbb
fmul
inc
lods
pop
ror
shll
push
jbe
repz
cmp
or
lahf
jns
cmp
js
test
loope
inc
pop
flds
mov
outsb
xlat
and
jnp,pn
ds
adcb
bound
dec
cltd
pop
xchg
cltd
jo
add
test
cmp
lea
jmp
dec
or
mov
push
adc
ss
xor
xchg
mov
int
rorb
in
mov
cmp
or
mov
lds
cmpl
add
jl
mov
popa
jns
inc
jp
ss
sub
dec
hlt
xlat
mov
enter
sub
jl
roll
cmp
scas
adc
pop
pop
and
fiaddl
iret
pusha
ret
pop
mov
jnp
repnz
int
xchg
mov
pop
data16
fs
inc
in
xor
and
test
sub
fcompl
xor
inc
frstor
aas
out
les
stc
fstpl
and
adc
lods
cmp
pop
ss
scas
push
xchg
nop
cs
push
inc
push
sbb
jl
stos
mov
out
fiadds
icebp
in
aaa
jg
int
inc
push
cld
insl
pop
or
xchg
rcl
jg
adc
jg
sbb
pop
jne
jl
test
hlt
lods
jle
sti
sub
cmpsl
and
repz
stos
push
insb
sbb
push
imul
lods
movq
je
mov
push
jle
dec
xchg
fstpl
test
in
frstor
push
inc
push
test
sarb
or
cmc
inc
jle
fstps
fwait
push
sub
push
es
in
and
mov
mov
adc
sub
jnp
sbb
dec
pop
jge
orb
jg
hlt
xchg
inc
xchg
pop
and
adc
xchg
pop
popa
int
call
xor
mov
add
arpl
pop
adc
ja,pt
lahf
enter
inc
push
movsb
repz
lcall
push
lcall
push
cmp
push
and
jecxz
mov
jno
imul
je
test
mov
sub
sub
clc
mov
in
and
insb
test
js
sbb
and
xor
movsl
insb
push
jb
loop
push
inc
add
inc
js
lret
adc
adc
dec
jne
movsb
imul
data16
ss
cmc
mov
aad
jle
cld
xchg
fiaddl
out
jns
mov
mov
xlat
cld
pop
add
cs
cmp
add
jmp
imul
mov
out
divb
pop
in
push
pop
in
mov
pop
inc
test
orb
test
nop
jo
out
frstor
xchg
jbe
stc
mov
jl
jno
nop
sbb
dec
cli
cmp
mov
out
inc
xchg
fisttpll
mov
ret
in
test
and
jmp
inc
fisubs
add
xchg
dec
scas
mov
dec
and
leave
fucom
mov
cmp
jb
daa
out
ss
test
xor
add
ret
push
sub
mov
sub
lcall
cmp
add
push
arpl
cmp
inc
add
nop
sahf
mov
add
mov
rol
xor
call
pop
cli
xchg
push
pop
xchg
xlat
rcrl
dec
out
mov
rorb
xchg
cmpb
jg
cmp
ffreep
push
or
and
test
inc
and
fwait
imul
rorl
mov
lahf
cmp
pop
dec
in
jnp
in
inc
pusha
or
fistpll
movsb
loop
sbb
mov
hlt
les
sbb
sub
outsb
les
and
xchg
ret
lcall
rcr
fisubs
or
dec
push
jle
or
and
jle
shlb
jp
les
push
inc
mov
and
pushf
sub
sbb
mov
int
cs
lea
push
push
cmc
mov
sbb
std
aad
int3
mov
sub
in
push
sub
scas
movb
jge
shrl
or
insb
std
es
mov
mov
xor
sbb
sub
stos
dec
sub
add
push
nop
popa
jne
push
and
cli
sub
jle
jne
cmp
pop
mov
stos
mov
imul
push
clc
inc
mov
in
ds
pop
adc
scas
dec
sbb
dec
cmp
sub
lret
pop
adc
mov
aad
cld
mov
push
or
jo
insb
cmc
outsl
add
lea
jl
int3
jne
rep
inc
and
gs
and
and
and
and
sbb
sub
push
loope
out
outsl
xor
in
push
std
and
sbb
cmp
in
add
sbb
int
dec
lret
sarb
mov
push
divl
out
cmpsb
sbb
fwait
lcall
jmp
les
jg
xchg
jle
into
xor
sub
in
jle
mov
or
cmp
sbb
imul
nop
repnz
mov
sbbb
enter
pop
not
dec
nop
fs
jmp
sbbl
xchg
jge
in
adc
loopne
rclb
inc
lock
add
bound
jo
mov
sbb
mov
cmp
inc
or
jne
enter
add
lea
and
mov
insl
inc
pop
int
adc
lods
lock
aaa
hlt
jae
adc
cltd
push
fcomip
shll
hlt
dec
jne
je
in
pop
xchg
scas
ss
adc
cmp
add
pop
jle
loop
out
xchg
xor
repz
xchg
cmp
pop
and
xor
mov
dec
xchg
mov
repz
mov
sbb
jle
clc
addr16
cmp
out
mov
adc
sub
loopne
jmp
pop
mov
fdivrl
jnp
sbb
loope
sub
ljmp
test
dec
sbb
sbb
aaa
pushl
push
mov
repz
aaa
xchg
mov
insb
add
xchg
push
dec
sbb
pminub
sbb
or
rolb
addr16
jb
in
repz
sub
cmp
jne
stc
mov
or
sub
add
xchg
mov
push
sbb
repz
popf
loop
shll
jne
mov
sub
mov
jne
jo
loop
ja
inc
jge
adc
push
sbb
aaa
sub
loop
sbb
cs
dec
xchg
add
cmp
repnz
jne,pn
sub
int
add
sub
sub
and
cmp
jbe
add
test
xchg
cld
into
inc
sar
adc
arpl
pop
idiv
pop
add
int
sub
dec
mov
icebp
inc
mov
cltd
mov
lods
out
push
or
xchg
imul
adc
mov
xchg
cmc
and
sbb
data16
cli
inc
push
clc
lea
cmp
pop
lret
push
mov
ret
outsb
lahf
mov
ret
or
cltd
add
int3
xlat
cs
jmp
mov
xchg
pop
test
hlt
aad
loop
faddl
xlat
in
into
or
mov
ss
and
pop
mov
mov
lods
loopne
inc
jnp
test
sbb
int3
jo
mov
push
pop
aad
stos
sahf
push
and
repz
test
imul
jmp
xchg
andb
fstpl
out
insb
data16
mov
iret
into
out
in
lret
dec
push
stc
into
out
pop
cmc
in
sub
lods
sub
push
push
dec
inc
subl
push
push
mov
sub
mov
imul
loope
and
cli
mov
jle
out
retw
test
ja
and
loope
and
fucomip
test
data16
mov
xor
pop
shll
push
pop
cli
ja
fucomp
add
add
add
add
lret
mov
dec
and
mov
stos
jo
outsb
nop
push
and
ss
ss
xchg
mov
scas
dec
or
mov
popa
xchg
pop
les
out
jmp
xor
sar
pusha
fwait
movsb
pop
jp
int3
sub
sbb
pusha
insb
jnp
jp
ds
subl
inc
cmpsb
adcb
sbb
pop
add
in
fisubs
in
push
add
into
movsl
loope
push
inc
das
xor
subb
pop
sub
dec
dec
movb
test
adc
fidivrs
or
dec
ljmp
push
jns
ficoms
mov
scas
mov
xchg
xchg
loop
ja
pop
call
inc
int3
inc
dec
cwtl
sbb
addr16
mov
adc
mov
cmp
cwtl
fbstp
or
jne
jge
jle
fisubrs
cmp
and
jl
jl
aaa
pushf
rep
inc
sarb
sbb
push
pop
or
testb
cmpsb
mov
in
loope
xchg
or
sbb
dec
xor
sub
sbb
sub
pusha
add
enter
sbb
inc
out
outsb
push
mov
cmc
add
or
cltd
lcall
mov
loope
mov
orl
cwtl
sbb
popf
cmp
jecxz
cmp
icebp
shrb
faddl
loop
push
mov
sub
pop
test
sbb
sahf
jnp
adc
pop
push
adc
sahf
xor
stos
cmp
mov
sub
cmpsl
ja
not
outsl
sub
aaa
andb
repz
jg
mov
jg
jle
pop
add
je
push
imul
xchg
jle
cmp
mov
and
leave
stc
mov
sti
fsubr
pop
xchg
pop
dec
fbld
pushf
fldt
pop
mov
mov
push
js
push
fidivs
cmpsb
mov
addr16
in
data16
imul
cmc
scas
mov
into
dec
mull
sub
test
mov
addr16
or
adc
bound
fs
push
dec
mov
test
cmpsl
into
inc
data16
mov
inc
push
inc
loop
ja
sub
mov
lods
lea
outsl
xor
push
mov
addr16
pop
into
xchg
pop
xchg
addr16
dec
inc
mov
test
and
int3
addr16
or
mov
test
or
adc
ja
pop
mov
loope
dec
lock
out
cli
add
lahf
icebp
testl
daa
out
out
jbe
push
test
sbb
ds
add
out
and
maxps
sti
cld
dec
int
push
std
cmpsl
into
push
out
mov
xchg
xchg
jo
bound
into
lret
orb
dec
adc
addr16
and
pushf
movsl
loop
loope
dec
fisttpl
xchg
jo
lahf
in
cltd
sbbb
mov
mov
dec
or
add
and
inc
inc
push
es
push
out
in
xchg
addr16
nop
outsb
dec
out
sbb
sub
test
lret
cmp
lcall
in
dec
pop
mov
mov
jbe
repnz
rcrl
stos
jle
add
dec
xor
jl
pop
mov
xor
into
movsbl
dec
in
jns
dec
loopew
mov
stos
test
mov
pop
dec
cmp
cltd
mov
lods
cmp
pop
aam
and
clc
jns
hlt
dec
and
push
test
xorb
stc
sahf
pop
testb
cli
dec
outsl
call
push
data16
sub
inc
insb
int3
jnp
lcall
rcll
cmc
cmc
iret
or
int
pop
mov
movsl
aaa
jb
fbstp
ret
pop
lcall
in
pop
lcall
adc
out
push
xor
aad
outsl
fdivrl
dec
loope
fdivrp
jns
in
rcrb
popa
fstpl
push
sahf
pushf
and
outsl
add
movl
adc
sub
fcmovb
push
cmc
loopne
add
mov
test
fs
mov
inc
loope
dec
push
rcrb
mov
popa
inc
mov
mov
es
fcmovnb
xchg
popa
stc
shll
gs
inc
xor
mov
xor
insl
fwait
xchg
popa
mov
adc
xchg
mov
andl
or
out
pop
shll
cmp
dec
ja
loope
jno
xchg
jl
sub
loope
loope
stc
loope
loope
negb
mov
mov
sbb
fucomip
sarl
std
outsb
mov
mov
dec
cmc
add
popa
addb
jbe
shlb
pop
pop
push
loope
ret
or
add
dec
lods
jecxz
jmp
xlat
mov
popa
and
inc
jle
arpl
inc
stos
add
sbb
mov
xor
sub
xor
xchg
mov
fcomps
aaa
test
jbe
mov
mov
mov
and
xor
movsl
ret
lock
jp
ja
inc
loope
sub
push
inc
cmc
imul
les
cwtl
jle
hlt
pop
dec
sahf
fmul
sub
pop
jne
daa
pop
mov
ret
pop
sahf
filds
loop
and
stos
in
push
iret
jecxz
loope
out
cmp
cmpsl
std
mov
fs
pusha
test
cmp
adc
dec
mov
sbb
int
dec
xchg
xor
stc
push
and
ror
in
xchg
mov
and
cmp
adc
sbb
dec
pop
pusha
xchg
ret
ljmp
and
aas
xchg
fwait
jno
xchg
jecxz
sbb
je
jle
mov
ret
inc
pusha
jne
xor
lahf
add
imul
dec
int
jno
mov
das
push
dec
jecxz
cli
decb
stos
cmp
out
pop
xor
andb
outsb
mov
outsl
stc
add
outsb
sub
mov
scas
push
cltd
stc
mov
stc
stc
outsb
sbbb
mov
push
jl
sti
outsb
cli
cs
mov
icebp
sub
std
daa
ja
mov
cmp
shl
cltd
add
push
push
add
xor
inc
lret
mov
cmc
sbb
cmpb
xor
lods
jne
jb
pop
push
ss
dec
test
loop
shl
dec
in
ja
outsl
cli
mov
push
cmpb
loop
popa
push
mov
sbb
jl
int
in
and
mov
je
push
add
fst
inc
cmp
inc
sti
mov
out
inc
sbb
inc
push
dec
loop
lock
jecxz
aaa
lret
rolb
sub
or
lods
ss
sbb
xchg
xor
pop
jl
inc
jne
sbb
pop
jl
dec
lods
lahf
ja
mov
jo
push
in
stos
mull
lods
les
popf
ret
pop
test
sub
loop
xchg
cmp
jae
aaa
and
leave
sbb
jmp
and
mov
es
mov
jo
jnp
js
out
fistl
push
ds
mov
adc
test
imulb
int
add
fnstcw
insb
filds
mov
subb
xchg
xor
mov
out
and
test
and
out
jmp
scas
outsb
sub
add
push
insl
ljmp
cld
adc
add
or
xor
push
add
pop
imul
lret
push
clc
iret
xchg
test
test
insb
xor
xchg
test
dec
xchg
std
jne
jbe
in
iret
xchg
inc
rorb
int
jbe
push
mov
ss
inc
int
andl
mov
les
outsb
loop
xor
sub
mov
fcoms
dec
lcall
cs
sbb
and
adc
fwait
lret
inc
cmp
jns
push
pop
sbb
add
push
out
lea
pop
pop
sub
jp
decb
aaa
inc
jno
pop
jecxz
dec
dec
push
jne
fwait
enter
sti
lret
sti
out
fcomi
fsubp
aaa
mov
sti
insl
inc
test
jne
enter
enter
jl
jg
push
jno
and
mov
lds
push
popf
test
fistps
popf
out
cli
xchg
addb
cmp
jmp
push
xor
and
ds
sub
test
push
lods
jne
sti
jl
es
push
out
pushf
repnz
fbstp
dec
jb
jecxz
jno
pop
mov
jb
cmpsb
push
loop
dec
imul
and
into
in
dec
dec
xor
cwtl
das
or
or
pop
xchg
xlat
jns
andb
std
or
mov
movsl
nop
stc
adcb
pop
cmpsl
int
cmpsl
xor
jb
sbb
jb
xchg
add
mov
sbb
sub
or
dec
cmp
xchg
pop
mov
sbb
lock
mov
jb
adc
push
cmp
ss
jb
loop
sub
and
push
and
mov
rol
out
jnp
dec
cli
jb
outsb
lret
pop
movsl
mov
sub
inc
jb
jbe
scas
fldl
sbb
xor
test
std
imul
mov
int
cmp
das
cmpsl
xor
jb
mov
mov
cmc
ret
push
add
and
inc
mov
pop
cmp
or
push
repz
fisttpl
movsb
add
insl
push
dec
rol
jo
jecxz
xchg
cld
ret
xor
outsl
sbb
inc
adc
test
mov
jmp
add
mov
lcall
std
sarl
mov
xchg
sub
insb
mov
pop
cmpsb
test
mov
fisttps
push
push
in
xchg
dec
pop
cmpsb
ror
mov
outsb
mov
mov
in
imul
in
arpl
dec
icebp
lock
inc
enter
mov
dec
inc
sub
or
fdivp
push
in
dec
clc
scas
repz
das
pushf
cmp
fldcw
pop
jo
mov
xor
xor
sub
insb
mov
lahf
insb
jle
and
lea
sbb
push
pop
fsubs
fsubl
in
mov
and
mov
mov
aas
dec
in
adc
jle
repz
pop
adcl
sahf
repz
in
mov
xchg
insb
adc
mov
icebp
pop
nop
shl
sub
add
data16
xor
inc
mov
sbb
out
dec
unpcklps
xchg
pusha
fcmovnb
mov
cs
mov
sub
adc
jne
in
into
pop
and
cmc
mov
adc
jmp
aam
adc
mov
or
icebp
pop
dec
xchg
loopne
loop
mul
jnp
lahf
sub
sbb
cmp
aas
les
in
inc
jmp
into
lods
lods
loope
out
data16
icebp
mov
cmp
push
lret
mov
dec
dec
fs
dec
dec
xor
fnstsw
std
andb
sbb
andl
jge
je
in
adc
adc
xor
test
mov
fstps
into
xor
xchg
loop
out
xchg
aaa
testb
pop
xorl
push
mov
aaa
pop
and
mov
inc
insb
mov
mov
mov
jge
lcall
int
jbe
or
pop
push
movsl
pop
lods
pop
inc
aas
mov
inc
inc
xchg
mov
mov
cmp
pop
dec
or
fstpl
cltd
pop
mov
loope,pt
mov
aas
cmpl
fs
jnp
sbb
pop
repnz
mov
inc
sub
jne
cmc
inc
and
addb
xor
or
pop
dec
and
push
subb
scas
xor
xchg
mov
pop
mov
shlb
dec
int3
add
xlat
mov
or
clc
mov
mov
pop
mov
mov
aas
into
sahf
mov
lods
jno
and
fldln2
faddp
in
loope
pop
cmp
or
icebp
pop
dec
je
in
int3
cli
sub
inc
std
mov
inc
ss
ja
fiaddl
sub
adc
dec
or
pop
pop
or
xor
inc
pop
in
ss
pop
int3
ret
inc
scas
fistl
stc
lock
xor
pop
and
jmp
xor
adc
int
test
sbbb
push
mov
pop
or
rcr
mov
push
cmpsb
ret
fldcw
les
jae
jmp
out
fdivp
es
insb
ret
add
lods
int3
mov
sub
jecxz
sub
pop
insl
add
lahf
stc
jbe
aas
fdivs
lahf
pusha
jmp
pop
subb
xor
imul
push
dec
jle
pop
sbb
inc
fimuls
aas
mov
cltd
gs
lret
push
incb
xor
add
es
push
xchg
push
test
mov
jl
xor
jg
les
outsb
pop
aam
ret
std
jle
push
push
fldl
pop
xor
push
loope
out
sub
int
inc
in
loope
ret
lcall
dec
and
xorb
cmp
jb,pt
movsl
mov
lcall
pop
xor
jno
movsl
sbb
pop
call
loop
test
push
jle
pushf
mov
pop
push
in
das
xchg
pop
in
addb
loop
and
fsubrl
mov
push
js
pusha
and
xchg
stc
push
mov
xchg
es
stos
fldl
and
iret
or
mov
ret
or
repz
mov
or
pop
pushf
vpaddq
adc
ficomps
sbbb
add
movsb
push
int
cmp
and
into
xorb
js
in
jbe
cmp
sub
add
ja
test
repnz
stc
fucom
cwtl
outsb
cmpsl
movl
jmp
fildll
dec
int3
or
movsl
adc
ret
enter
shl
push
fists
in
stos
cmc
movsl
sub
sbb
xchg
adc
push
jl
fistps
and
mov
sub
mov
out
cmp
xchg
add
inc
xor
imul
andl
bound
outsb
mov
sub
popf
bound
movsb
jle
push
mov
pop
ja
es
lds
pop
and
push
out
movsb
jl
sub
loope
movsl
pop
test
inc
bound
pop
aas
stos
ss
in
sbb
mov
out
outsb
xor
pop
sahf
shlb
loop
sub
aam
push
pop
ffree
mov
in
es
bound
mov
push
adc
or
loop
test
and
jmp
pop
xor
in
mov
push
lds
call
pushf
pop
sahf
adc
clc
adc
mov
mov
sbb
sti
insb
xor
outsb
ss
enter
xor
mov
push
sbb
int3
mov
add
insb
cs
mov
ja
mov
lahf
test
push
scas
bound
aas
or
bswap
sbb
clc
mov
sub
daa
sbb
lea
cmp
cmpsl
sub
rolb
aad
mov
test
pop
xchg
push
test
adc
mov
bound
ja
ror
mov
add
cmp
bound
xor
repnz
push
movsl
or
mov
test
pusha
pop
or
add
sub
lahf
lods
jnp
mov
lods
pop
sbbb
push
es
outsl
std
jbe
gs
or
pop
repz
jne
push
pop
out
ss
mov
adc
jae
cmpsb
push
lds
jne
fwait
add
fnstsw
sbb
int3
and
lcall
in
bound
aad
sahf
cmp
sbb
aad
bound
dec
inc
cmp
jne
inc
mov
cmc
and
test
pop
jmp
daa
mov
mov
pushf
fbstp
and
jnp
rcrb
je,pt
rorl
fcomi
nop
mov
push
or
mov
stos
test
jne
mov
mov
jmp
jle
pop
pop
pop
xchg
loope
stos
mov
outsl
fsubrl
adc
lods
lock
sahf
fisttpll
pop
das
and
xorb
xchg
adc
in
pop
mov
mov
jnp
push
sti
xor
unpcklps
inc
rol
loop
adc
cs
add
addr16
fsts
sub
outsb
stc
or
mov
dec
lock
sub
pop
sbbb
xor
imul
push
icebp
mov
addl
ss
xchg
cli
lock
sbb
cmp
into
cmpsb
push
mov
cld
movsb
inc
sbb
repz
pop
lea
ret
imul
or
adcl
fists
jp
stos
movsl
add
and
push
outsl
mov
cmpb
repz
fidivl
cmp
push
dec
in
scas
fucomp
lock
mov
gs
mov
add
cmp
mov
ljmp
jge
jno
adc
sbb
stos
mov
mov
lea
in
jns
mov
and
test
out
mov
mov
and
cs
or
cld
add
xchg
movsb
cltd
or
jle
stos
ss
arpl
push
pop
in
std
and
loopne
mov
pop
xor
sub
cli
ljmp
int
int
pop
in
pop
loope
popa
pop
mov
mov
loope
test
ret
pop
xlat
pop
cmc
push
sbb
push
loope
pop
ret
in
cmpsl
push
pop
sbb
ds
fisttps
jo
sub
mov
fnstsw
mov
adc
add
icebp
or
push
cli
loope
out
sub
mov
adc
loope
sbb
stos
push
lcall
push
fcompl
pusha
xchg
fstpl
xor
loop
test
push
js
in
int
stc
mov
xchg
lea
popa
movsb
in
lret
ret
cmc
jne
ss
pusha
lcall
jmp
inc
outsl
fcompl
pop
push
fdivs
add
push
insb
popa
push
push
outsl
int3
cmp
in
inc
jg
mov
daa
adc
jmp
inc
aas
mov
and
adc
cwtl
out
push
insl
mov
loope
test
pop
out
inc
lods
sbb
ss
dec
add
lahf
clc
scas
insl
jne
jnp
lret
or
pop
mov
add
push
jecxz
and
mov
outsl
jecxz
sti
les
push
mov
aas
mov
mov
mov
push
loopne
push
push
loop
cld
add
adc
es
dec
fcmovne
aad
cmp
lock
add
push
sbb
outsb
pop
add
pop
jg
jmp
mov
push
in
adcb
mov
mov
shl
int3
jecxz
adc
cs
push
pusha
shlb
outsb
sub
mov
ljmp
cmp
pop
cmc
mov
lahf
cmp
adcl
lods
aaa
ja
xchg
xor
es
stc
ss
pop
mov
loope
jle
in
js
mov
xchg
push
insl
inc
int
pop
notl
lods
mov
lock
repnz
mov
fnstcw
ds
push
je
push
add
jbe
loope
xorb
mov
mov
and
sub
add
pusha
insb
xchg
daa
pop
mov
cmp
cs
lcall
lea
inc
dec
sbb
js
fucomip
js
int
add
xchg
aaa
call
repz
ds
pop
sbb
add
pop
or
mov
iret
inc
push
out
mov
insl
and
enter
pusha
fistl
cmp
loop
cmpsb
lahf
xor
or
imul
idivb
mov
imul
sbb
jno
dec
mov
push
repz
das
aaa
call
pop
jg
or
jecxz
shr
adc
push
jns
fcomip
popf
pusha
cwtl
popf
icebp
std
lcall
roll
mov
sbb
fdivrl
in
xchg
push
pop
sbb
andb
xchg
test
mov
sbb
fstpl
mov
mov
xchg
inc
movsl
add
rcll
cmp
mov
adc
das
push
fcomi
cmp
mov
mov
sbb
popa
pushw
mov
inc
adc
into
popw
push
cld
lods
int
sahf
fmulp
and
imul
cmc
cltd
loope
nop
jle
mov
push
jle
ja
cmc
push
cmp
out
push
cmp
mov
call
mov
lock
ret
jge
pop
andb
icebp
mov
pop
lock
pop
mov
pop
popa
daa
dec
sbb
int
sarl
mov
shll
mov
dec
jl
enter
rcrb
lahf
jl
pop
andb
push
and
lock
es
mov
les
add
inc
mov
and
adc
inc
insl
loope
jno
fldenv
xor
roll
ss
iret
pop
out
xor
or
add
mov
mov
lea
frstor
sbb
es
cmp
rolb
mov
cmpsb
ss
sbb
or
mov
ja
inc
jmp
cs
inc
cmp
dec
jno
std
roll
inc
mov
mov
std
cmp
or
add
add
out
or
lods
js
xor
jecxz
xchg
add
std
push
rcll
fcompl
adc
repnz
clc
ficoml
pop
pushl
leave
ret
dec
jbe
scas
inc
int
push
xorb
out
sarb
dec
or
rcr
hlt
ret
pop
cmp
mov
or
sbb
jl
pop
add
iret
xchg
mov
cs
in
xor
adc
aaa
push
es
sub
jae
in
addr16
xchg
dec
ds
pop
push
testb
fstpl
mov
sbb
insl
xchg
or
ss
and
jae
pop
fstpl
push
lods
outsl
outsb
xchg
jg
sti
in
je
pop
pop
sbb
bnd
fwait
hlt
or
mov
xchg
jle
pop
sti
movsb
iret
xor
insb
fwait
and
mov
pop
aad
jae
ret
fiadds
loopne
addb
ljmp
sbb
mov
jle
add
in
mov
inc
sbb
sub
jae
xor
or
xor
movsb
jae
jl
pop
add
mov
outsb
imul
jo
in
jge
bnd
call
add
and
jnp
out
and
sub
push
pop
out
movsb
stos
subb
ljmp
pushf
enter
shl
andb
jl
sub
and
aam
fwait
aaa
cmp
jnp
inc
or
sub
cmp
cmpsb
aas
xor
xchg
loop
lock
inc
loop
pushf
add
inc
leave
int
fs
ss
sahf
dec
dec
cmp
lret
out
push
cli
fdivrl
and
push
subl
add
cltd
add
cli
outsb
pop
lcall
aad
cmp
into
lcall
mov
push
jle
pop
repnz
jle
aam
inc
std
out
jo
mov
stc
aas
out
pop
repz
jbe
imul
pop
leave
mov
test
dec
sbb
out
insl
jp
adc
shr
mov
sbb
outsl
and
cmp
jne
dec
or
cmp
stc
les
xchg
pop
jg
lods
dec
cmc
imul
pushf
aaa
roll
or
jge
lods
stos
icebp
pop
aam
fwait
add
je
add
lret
data16
cmc
lret
in
cmp
pop
iret
xchg
fwait
pop
lcall
mov
lods
ficoml
jbe
dec
pusha
aam
sub
xchg
jp
cmp
pop
leave
aaa
xor
pusha
mov
int
lret
adc
pushf
adc
les
fs
inc
notl
add
ret
ja
add
fcmovne
lahf
mov
popa
lret
loope
sbb
loop
cld
and
adc
fildll
dec
and
fimuls
inc
fmulp
or
cmc
or
or
jnp
in
push
push
in
and
popa
imul
loopne
outsl
push
orb
fsts
xor
xchg
cmp
pop
jmp
add
dec
in
lds
jnp
pop
and
test
ss
xchg
or
test
xchg
aad
nop
aas
lret
xchg
cmp
aad
pusha
addb
flds
bound
popa
sub
sub
jle
std
movsl
push
jbe
dec
cwtl
pop
jnp
jns
jg
mov
xchg
jl
jo
dec
into
es
cs
xor
pop
bnd
insb
push
out
adc
ds
jle
popa
in
aas
nop
stos
out
je
push
out
aas
and
push
sub
jns
les
cmpsl
es
ljmp
lea
jmp
pop
xchg
cmp
adc
push
hlt
enter
test
rorb
and
pop
push
push
insb
inc
ja
les
pushf
dec
fistpl
adcl
pop
adc
inc
jbe
insl
push
or
xlat
jae
cld
cmp
outsb
lcall
sbb
jecxz
sbb
add
mov
test
xor
pop
dec
mov
inc
repnz
xchg
inc
mov
cmc
xchg
dec
lock
cld
xchg
repz
dec
or
and
cmpsb
push
outsb
mov
je
mov
mov
sub
nop
inc
int3
fsubrs
in
or
jne
enter
push
pop
xlat
outsb
xor
outsb
cs
sbb
pop
push
loope
test
push
inc
loop
mov
cli
fdivr
inc
mov
ss
repz
pop
jns
cmc
or
pop
add
addl
int3
push
ja
fstps
mov
jb
repz
mov
decl
cmpsb
cwtl
loopne
push
sbb
push
ret
inc
jg
movsb
xchg
pop
or
push
fwait
push
insl
push
sub
in
ss
pusha
int
imul
scas
je
cmp
jg
mov
jg
popa
cmpl
inc
xchg
cmp
arpl
xchg
movsl
jmp
imul
les
es
lods
mov
jle
lahf
sbb
aad
in
cltd
xor
loop
jle
je
inc
pop
test
insl
mov
mov
mov
in
call
popf
into
jge
mov
xorb
xchg
jbe
rcrl
test
inc
push
cld
int
jle
push
je
fcmovnbe
lods
cli
in
movsl
jnp
shlb
sbbb
mov
add
fdivr
xor
int
aaa
jb
gs
sahf
cld
inc
out
push
bound
sarl
inc
sub
les
jg
jle
cltd
sub
int
shl
and
push
testl
sub
add
rol
lock
in
pop
mov
pop
mov
lds
mov
ds
pusha
aad
sbb
lret
mov
nop
jge
test
cmc
ds
ss
pop
jecxz
mov
jle
shrb
pop
mov
insb
popf
push
mov
push
dec
push
sbb
out
pop
and
jne
push
insb
jns
sbb
les
lret
cld
pop
dec
add
sti
bound
sbb
push
push
out
out
ss
add
movsb
movsb
in
adcb
sbb
push
clc
fwait
inc
inc
pop
push
aam
outsb
mov
adc
sahf
xchg
and
ret
cmc
and
or
fst
lods
cmc
mov
cmc
andl
test
push
enter
adc
adc
mov
mov
push
stos
xchg
xor
cli
dec
add
jne
lods
fsubrp
inc
addb
lgs
and
imul
adc
fsubrs
pop
dec
aam
inc
pop
jbe
sbb
sbb
sbb
loope
inc
ss
jl
mov
cmp
mov
sbb
inc
sahf
test
or
add
mov
xor
addr16
push
hlt
and
xor
in
adc
pop
mov
fs
outsb
fstpl
xorl
sarb
jb
pop
outsb
arpl
xchg
adc
outsb
cmp
inc
and
in
in
ss
stos
xchg
push
pop
ja
push
sti
push
jecxz
ret
push
xor
lea
mov
or
inc
lcallw
pop
sub
divb
inc
fwait
and
xor
frstor
xor
fldenv
pop
gs
popa
fstpt
icebp
call
pusha
mov
imul
jne
insb
aad
mov
or
sti
sbb
jmp
mov
fucomip
ds
pop
popf
pop
out
mov
gs
fcomps
mov
jnp
int3
inc
xlat
js
fisttps
cmp
push
mov
pusha
aaa
paddusw
test
dec
loopne
pop
pop
mov
pop
inc
insb
push
or
out
jle
jl
mov
push
push
bound
es
insl
repnz
sub
mov
push
sub
popf
fistps
push
in
dec
dec
rol
je
out
add
out
pusha
pusha
out
aaa
add
inc
popf
mov
shl
stos
xorb
cmc
dec
mov
rep
out
andl
leave
out
repnz
adc
mov
xchg
pop
ffree
lahf
push
or
pop
test
jne
jmp
dec
cmp
mov
test
repnz
mov
pop
mov
popa
pop
inc
std
and
clc
enter
xor
out
insb
frstor
in
out
xchg
jne
dec
pop
and
jne
jmp
lock
add
in
iret
inc
outsb
lods
sbb
mov
pop
sarl
in
mov
loop
pop
inc
ret
jne
dec
mov
pop
bound
stc
push
sub
orb
pusha
jne
push
push
or
pop
push
fwait
adc
in
push
nop
in
and
out
int
mov
sti
sti
popf
lcall
stc
and
dec
test
xorb
ror
inc
dec
sbb
sarl
loopne
push
sbb
out
push
inc
lods
inc
test
test
les
icebp
incl
xor
cmp
and
add
test
loope
shlb
lahf
fsubrs
stc
sti
and
mov
mov
test
pop
mov
clc
fdivrs
and
or
add
pop
js
mov
adc
jle
in
es
das
sub
cmp
lcall
loope
jmp
or
inc
push
lret
leave
mov
call
xor
pop
inc
mov
insb
outsb
mov
call
mov
pushf
cmpsl
std
nop
sti
cmc
push
pusha
stc
orl
mov
jp
inc
ds
imul
loope
fsubrl
iret
repnz
inc
addb
cwtl
cs
xchg
adc
add
and
inc
and
or
out
sbb
insb
movsl
xor
test
lods
fucomi
outsl
adc
mov
out
fcoms
and
dec
ja
mov
cltd
lret
shlb
mov
imul
and
bound
mov
cwtl
pop
femms
test
fstp
lock
add
and
pushf
cmc
pop
jno
jge
sbb
movsb
xchg
and
ds
sbb
lcall
inc
inc
push
adc
cmpb
inc
aad
cmp
jge
xor
push
outsb
cwtl
or
push
sbb
sbbl
fnclex
lcall
push
mov
sub
dec
mov
test
gs
jno
arpl
jne
out
sub
repz
jnp
push
dec
stos
xorb
ss
cs
test
shlb
and
mov
pop
cmc
test
stc
cmp
inc
test
dec
cltd
dec
inc
imul
mov
out
lcall
das
jne
inc
jno
dec
cmpsl
mov
xor
push
xchg
ret
pop
push
and
mov
or
or
and
and
cwtl
movsb
pop
clc
pop
xor
cmp
decb
mov
pop
push
sub
ret
push
jg
dec
and
les
push
jbe
pop
xchg
fistpl
lock
out
sbb
xorl
add
repz
or
xchg
pop
add
mov
push
or
pop
push
and
mov
mov
cli
dec
lret
ret
sti
fcomp
in
outsb
push
shll
std
shll
cli
add
ljmp
dec
cmp
mov
sbb
inc
loope
sbb
cmp
fnstsw
rorl
mov
dec
pop
in
mov
push
adc
hlt
sub
xor
inc
mov
dec
sub
sbb
insl
rcrl
mov
cmc
icebp
stos
popf
xor
jle
inc
sub
ljmp
fadds
bound
stc
fbld
mov
add
push
sub
jne
lods
adc
loop
pop
test
ja
popa
pop
pop
dec
or
nop
inc
dec
outsb
clc
push
imul
aad
sub
in
enter
add
pop
lahf
shrb
bound
or
or
push
dec
push
pop
lods
sub
sbb
push
stos
push
jle
inc
in
insl
out
insb
mov
jns
movsb
sti
sub
frstor
mov
mov
arpl
inc
mov
jbe
inc
cs
das
sahf
pop
jne
repz
popf
xchg
jp
push
pop
rolb
fwait
and
dec
push
es
out
inc
repz
mov
outsb
jne
sbb
sub
pop
pop
scas
lcall
xchg
and
test
dec
add
imul
add
loop
ja
cmpsl
rorb
inc
data16
lret
shlb
in
mov
test
fnstcw
out
in
push
nop
jnp
xchg
std
xchg
mov
les
jbe
in
adc
mov
movsl
addb
lcall
lcall
movsl
and
stos
lcall
xchg
mov
jle
insl
add
xchg
push
outsl
hlt
popa
mov
lret
xchg
fdivl
and
in
outsb
pop
mov
les
int3
push
daa
xchg
in
xor
loopne
pop
aas
push
js
fucom
push
cmp
ficomps
pop
cmp
dec
inc
mov
push
cltd
mov
pop
fistpl
fldcw
push
push
in
pop
jbe
xchg
insb
jbe
rorb
pop
mov
fs
stos
ret
and
cltd
cld
dec
push
movsl
test
jb
ljmp
jg
jb
iret
mov
icebp
loopne
loop
mov
in
repnz
push
scas
pop
mov
addl
incl
cs
repz
pop
cmp
pop
adc
clc
jle
daa
mov
pusha
mov
mov
push
cltd
mov
pop
mov
arpl
das
cmc
jl
sub
mov
sbb
cmp
and
adc
jbe
adc
gs
jg
xchg
mov
cltd
inc
and
andb
in
ljmp
push
into
out
negl
dec
push
mov
inc
jge
mov
inc
xchg
in
bound
stc
cmp
add
inc
cmp
inc
sbb
stos
and
stc
loope
fldt
sbb
xchg
fwait
add
aas
jbe
pop
das
out
sbb
ss
aaa
or
dec
movsl
jnp
aas
lcall
lock
mov
leave
dec
daa
and
clc
nop
aaa
push
daa
in
push
adc
sub
in
xchg
frstor
jmp
push
fldl
sti
inc
aas
pop
adc
jnp
in
xchg
mov
jge
in
add
call
popw
mov
outsl
adc
les
std
lret
inc
dec
popa
sbb
cmp
xor
sbb
inc
pop
push
lret
je
mov
xchg
dec
jns
in
int
sahf
jmp
fcoml
push
xchg
push
mov
jle
insl
add
adc
cmp
das
lods
mov
inc
lret
sub
imul
in
mov
sbb
adc
dec
scas
xchg
pop
lret
sub
stc
xor
cmpsb
andb
enter
fsts
dec
add
jl
jge
icebp
test
xor
xor
sub
sub
mov
or
addr16
std
jno
or
sub
pop
sub
out
mov
fwait
cld
push
cwtl
addr16
mov
call
cmp
mov
dec
frstor
push
movsb
in
sbbb
cmpsl
jle
dec
xorb
add
test
pop
pop
addr16
jns
aaa
dec
inc
ljmp
xchg
lea
push
or
dec
xchg
sub
push
pop
and
add
mov
and
fwait
repz
cltd
dec
push
scas
push
notl
mov
outsl
mov
jno
ljmp
push
pop
inc
pop
scas
push
jp
cltd
adc
test
add
and
addb
jae
insl
push
cwtl
xor
rcll
inc
dec
lret
fisttpl
jno
mov
fidivl
and
pop
mov
jnp
jge
repz
outsb
jmp
inc
xchg
cmp
enter
jge
ret
push
xchg
pop
mov
sbb
add
loopne
push
test
lods
mov
jg
lods
jno
std
sub
xor
xchg
sub
test
cwtl
outsb
add
fsubrs
add
imul
inc
cmpsl
movsl
pop
ss
xor
adc
add
in
xchg
fs
movsl
mov
cltd
testl
jno
push
dec
adc
xchg
jno
iret
xchg
push
enter
jno
cmpsb
cmp
jbe
push
cmp
ffree
cmp
rolb
cmpsl
inc
push
ljmp
dec
add
xchg
out
in
and
dec
inc
jnp
dec
scas
push
cli
sub
pop
sarb
or
dec
mov
push
lock
cmp
sub
les
pop
test
or
shlb
iret
addb
aaa
scas
xchg
sub
dec
cmpsb
and
fnstcw
cmp
xchg
push
add
fwait
push
cmpsl
and
adc
dec
mov
test
cli
cmp
xchg
out
cmpsb
and
ljmp
stos
and
sub
add
es
xor
lods
dec
mov
es
jbe
pop
movsl
stos
sub
nop
inc
mov
out
pop
dec
mov
mov
notb
shrb
stos
insl
dec
cmp
imul
cmpsb
jbe
sub
ss
inc
lahf
outsb
push
inc
xor
inc
jb
sbb
in
in
fnsave
sub
sub
dec
mov
inc
std
or
pop
jge
and
out
mov
jge
out
sub
adc
insb
dec
mov
or
test
insb
mov
dec
mov
or
test
sahf
mov
pop
adc
jge
bound
icebp
or
push
insb
dec
mov
inc
scas
jge
mov
pushf
dec
mov
mov
test
cld
shl
in
pop
shr
jle,pt
sbb
ffree
ds
sub
loop
test
sbb
dec
test
lcall
mov
dec
dec
mov
mov
rcrl
cmp
gs
out
lcall
push
cwtl
out
push
pop
mov
fnsave
cmp
cs
popl
sub
inc
mov
imulb
outsl
push
dec
mov
mov
test
lods
sarb
int3
int3
sub
movsl
dec
sbb
xchg
cs
mov
pop
call
push
push
js
in
inc
ficomps
sbb
imulb
push
inc
imulb
mov
gs
sahf
lret
das
les
mov
ret
xor
xor
scas
rolb
mov
xor
subb
jmp
or
pop
pop
jb
in
aam
daa
inc
sub
int3
mov
dec
in
out
xor
xor
inc
xor
in
cmp
aad
dec
fisubl
sti
test
lcall
sbb
outsl
or
arpl
data16
adc
sbb
mov
jg
inc
and
insl
fmull
inc
cmp
jne
push
push
xor
add
inc
dec
lock
cmp
out
data16
stos
icebp
daa
jge
or
insb
sbb
mov
dec
in
loop
mov
push
inc
stos
aaa
fdivr
mov
leave
sbb
outsb
jmp
sub
rcll
aaa
pop
push
push
loope
jp
or
add
cld
test
and
xchg
add
mov
mov
clc
arpl
popa
mov
test
jp
xlat
js
js
les
jne
fstl
push
jg
lods
ret
dec
popa
cmp
int
scas
inc
add
dec
lods
into
bound
sbb
ja
test
lods
fsubrp
pop
dec
pushf
mov
insb
push
movb
mov
pop
outsb
push
add
aad
add
jp
adc
ss
popa
push
aas
jo
enter
aad
sbb
ret
mov
xchg
xor
dec
iret
cmp
outsl
popa
lea
ss
push
dec
popa
fwait
pop
mov
outsl
ss
call
sub
into
pop
add
mov
out
add
inc
int
out
cmpsb
push
inc
jge
jo
and
mov
mov
inc
dec
ret
jo
adc
and
fiadds
lahf
fnstenv
pop
pop
jmp
pop
pop
cmp
and
cmp
negl
fsubl
lods
xor
jne
xor
lods
leave
cmp
icebp
mov
lock
fs
lock
jg
push
or
test
fs
push
subb
pushf
push
inc
test
jmp
addr16
lret
insb
jle
iret
mov
pop
imull
repnz
push
dec
test
and
jl
cld
dec
scas
adc
mov
data16
movsb
cwtl
jmp
mov
scas
daa
cwtl
lahf
dec
pop
fnstenv
pop
stos
mov
gs
inc
ss
and
add
mov
rolb
mov
ret
lea
xchg
int3
jno
pop
xlat
out
bound
pop
stos
mov
push
jecxz
stc
shl
inc
pop
xor
add
mov
jle
mov
aaa
stos
mov
xchg
mov
pop
cltd
addl
in
lret
hlt
aam
mull
sbbb
lock
in
rcl
and
test
lds
sub
dec
iret
adc
push
scas
jge
lods
lcall
std
scas
lods
insb
and
unpcklps
aas
pop
data16
xor
notb
outsl
pop
aas
pop
data16
cmp
pop
aas
dec
cmp
iret
pop
jo
fs
loop
mov
xchg
rep
jnp
dec
inc
xor
cltd
sub
ret
shrb
lods
and
cmc
fidivrs
inc
xchg
pop
jne
ss
dec
inc
jg
adc
xor
test
pop
aas
xor
adc
mov
aas
and
sbb
cmc
testl
push
ja
mov
int
mov
mov
imull
sub
cmpsb
push
mov
mov
mov
lods
inc
mov
inc
mov
fildll
insl
sar
sbbb
insl
lock
push
mov
mov
enter
call
and
or
pop
ret
das
xor
cmpsl
in
inc
pop
mov
cwtl
and
lret
adc
mov
and
mov
jle
push
adc
in
add
sub
sti
insl
mov
push
cmp
inc
pop
xlat
ret
lret
mov
and
lahf
cmp
lret
aad
outsl
icebp
outsw
arpl
fs
jbe
adc
xchg
out
insl
cwtl
adc
in
and
fnsave
sbb
inc
fs
mov
mov
mov
and
icebp
pop
xchg
mov
xor
leave
cltd
jle
pop
clc
dec
lahf
pop
add
cmp
jb
push
push
and
popf
int3
leave
loope
mov
fsubrl
lret
pop
or
or
out
lea
add
pop
mov
cmpl
loope
mov
pop
and
mov
inc
in
sbb
cmp
test
jg
hlt
in
inc
lds
and
push
fnstsw
stos
and
push
mov
movsl
insb
pop
xchg
fs
mov
mov
subb
xor
inc
lock
loopne
insb
fwait
dec
mov
and
sti
rcr
mov
lcall
pop
imul
mov
add
iret
sbb
sub
cmp
sti
insb
add
jge
mov
loope
mov
jbe
outsl
cmp
xchg
xchg
stos
xorl
pop
xchg
movsl
movsb
aaa
and
loope
mov
and
and
and
loope
iret
fmulp
popa
xchg
int
in
ss
ljmp
fldcw
dec
in
jne
jl
inc
stos
mov
shl
adc
mul
jg
hlt
jne
int
pop
loope
enter
lcall
imul
loope
loop
and
and
jne
jl
add
or
add
bound
loope
out
popa
addr16
inc
addr16
add
cmp
cmpb
stos
cmpb
lods
cmc
aas
jbe
les
pop
mov
cmp
loop
or
pop
push
movsl
push
pop
test
xorb
xor
sub
xor
xor
out
popa
push
inc
mov
xchg
out
add
stc
sbb
in
jnp
dec
fstpl
in
mov
call
aad
das
push
cmp
mov
or
fstenv
test
das
pop
test
in
outsl
mov
fdivrl
sub
sub
jmp
outsl
mov
and
out
mov
mov
ss
push
mov
or
cli
mov
sbb
jnp
jae
sbb
out
push
pop
or
inc
ja
jns
pop
sahf
inc
loop
inc
rorl
adcb
jl
in
or
jno
push
jne
mov
cmp
cmp
pop
sbb
jmp
jne
sbb
or
fsubrs
shl
cs
mov
fsubs
test
sarb
jne
out
mov
test
mov
loopne
fwait
lea
pop
repz
adc
pusha
stos
dec
mov
jne
stc
jnp
jae
pop
nop
out
je
cli
loop
jo
cmc
cmp
in
add
es
or
orb
jne
out
test
out
fdivrs
insl
pop
cmp
test
or
sub
lret
and
repz
ret
and
add
mov
mov
or
cmpsb
and
sub
and
cmp
addr16
and
dec
and
ret
or
pop
adc
pop
aam
push
jo
loopne
add
nop
or
sbb
push
cmp
cmc
mov
inc
jno
dec
mov
mov
div
enter
ret
mov
cltd
inc
xor
or
shll
rcrl
sbb
add
ret
and
fimuls
fnstenv
cmp
mov
outsb
mov
push
sub
mov
and
push
jnp
imul
das
les
dec
pop
jno
xchg
mulb
push
outsl
repz
cmpb
jg
push
pushf
cmc
pop
jmp
mov
inc
sbb
hlt
sub
cmp
cmpsl
mov
dec
and
mov
inc
std
or
sbb
mov
inc
outsl
mov
ds
or
and
mov
push
or
pop
jle
in
xor
pop
and
lret
das
les
andb
sub
mov
ja
xchg
jne
scas
addb
out
lea
mov
loop
outsl
lods
mov
adc
xor
push
xlat
mov
lahf
cmp
aad
gs
mov
mov
imul
xchg
divb
loop
pop
rcr
leave
push
jl
imul
sbb
mov
sbb
cmpsb
and
ljmp
stos
and
pop
xor
mov
in
and
test
stc
test
shl
in
inc
lret
or
pop
in
cmp
ljmp
and
in
unpckhps
test
incb
push
jg
and
daa
sahf
lret
das
les
out
fcmovnb
addb
lret
das
les
sub
les
cmp
pop
inc
fstps
pop
test
inc
js
hlt
push
inc
push
mov
test
sbb
cmpl
add
mov
imul
hlt
aam
pop
orb
int3
jmp
std
mov
or
shrb
outsl
pushf
les
jg
das
shl
fadd
sub
add
test
aad
pop
pop
mov
insb
in
idivb
lock
fdivrl
sar
push
jge
mov
stos
cmp
xchg
ss
jbe
add
sar
push
sahf
outsl
push
das
stos
cmc
pop
dec
or
cmpsb
and
fldcw
ret
sarb
shl
lds
push
pop
les
mov
add
cli
std
fs
aad
jmp
std
mov
enter
leave
lods
mov
push
mov
xchg
cld
scas
sahf
sub
dec
mov
sub
cwtl
outsl
push
les
jg
das
les
cmc
push
pushf
push
adc
pop
out
xchg
sub
repnz
jne
inc
push
cmp
mov
lods
sub
inc
shrb
clc
sahf
push
mov
cmpb
pop
fwait
add
shll
push
mov
out
and
jo
mov
cltd
jnp
jge
mov
mov
jo
push
mov
das
add
fst
mov
sub
cli
jnp
sbb
lret
jge
and
subb
fidivrs
push
sub
test
out
mov
xchg
pop
dec
jne
push
cmpsl
push
push
xchg
mov
out
test
out
outsl
decl
stos
sahf
and
not
xlat
cmp
dec
test
bound
push
icebp
rcr
sbb
jp
pop
sub
aad
push
mov
test
or
jbe
sbbb
jnp
push
out
std
mov
or
shrb
push
fisttpll
mov
cmp
push
mov
inc
bound
pop
jae
aas
aad
pop
dec
xor
or
jne
push
push
xchg
and
in
insb
push
jno
xchg
insl
inc
jnp
dec
stos
in
push
xchg
lock
lcall
scas
cmc
shrb
jae
jno
jle
mov
pop
aad
pop
rcll
fnsave
mov
call
out
and
cmp
out
rclb
mov
pop
inc
fisttps
and
adc
mov
pop
fimuls
push
imul
or
out
popa
roll
adc
sti
out
in
andl
cld
jecxz
out
lret
jne
cmc
call
je
hlt
mov
jmp
push
jnp
push
les
in
xchg
jecxz
lock
jle
dec
nop
aad
inc
cs
jmp
xchg
fstpt
sbb
pop
inc
xchg
pop
sub
sub
pop
or
jns
out
mov
addl
mov
mov
mov
and
jae
cmp
sbb
pop
jg
aaa
sub
mov
je
add
mov
testb
mov
sbb
xor
loopne
pop
stos
pushf
lock
outsl
fsubr
dec
mov
mov
test
jno
jno
xor
pop
sbb
imul
mov
lea
push
adc
lahf
aaa
xchg
test
pushf
sub
mov
les
pushf
jnp
push
xchg
cmp
setge
cltd
outsl
lret
dec
movb
scas
mov
notb
mov
cmpsl
ds
icebp
jp
js
inc
sahf
fwait
xchg
mov
mov
sub
sub
call
jmp
loop
imulb
dec
add
lahf
jle
sbb
mov
or
movsl
and
aad
xchg
inc
and
push
lock
adcb
mov
cmpsb
jbe
aam
add
ficomps
xchg
push
cltd
sbb
mov
push
pop
test
icebp
xor
jnp
ljmp
xchg
jp
imul
js
dec
ss
in
sub
xchg
cltd
and
arpl
daa
repz
aaa
cltd
mov
popa
jne
ljmp
addr16
cltd
bound
aas
or
mov
stos
cmpl
ds
imul
popf
sbb
out
mov
xchg
fmuls
pop
imul
in
pop
adc
mov
push
xor
loop
mov
mov
es
fimuls
cmp
cltd
adc
adc
mov
roll
dec
or
loope
imul
popf
cmp
xor
cli
bound
adc
cmp
inc
aas
test
aas
jbe
pop
push
add
ret
ret
cmp
jbe
inc
xchg
push
mov
cmp
pop
enter
mov
xchg
mov
in
ss
lret
jmp
out
push
add
and
fst
xchg
adc
add
pop
outsl
cmp
inc
mov
negb
pop
xor
shrl
cmc
adc
adc
mov
pop
mov
daa
loope
jno
sbb
and
push
jmp
push
cmp
and
dec
cmp
push
add
inc
mov
mov
lea
jl
xchg
stc
pop
dec
adc
push
out
lea
loope
fidivrl
jo
or
sbb
dec
inc
or
stos
into
xchg
ror
jnp
sbb
stos
mov
pop
pop
insl
lods
loop
and
mov
dec
push
inc
divb
roll
lret
clc
adc
and
pushf
xor
sbb
sbb
in
and
insb
cmc
fwait
dec
jne
fistps
mov
push
test
and
insb
push
inc
sbb
dec
in
ljmp
fsubp
adc
pop
dec
fwait
push
sbb
in
mov
or
mov
stos
shlb
leave
pop
cli
and
xlat
jne
jo
lret
xchg
sbb
es
push
ss
out
scas
pop
add
and
addr16
xchg
pop
adc
test
mov
inc
nop
inc
int3
enter
and
insl
add
pop
test
mov
push
nop
arpl
ret
sub
jbe
outsl
scas
testl
or
pop
xchg
out
sti
push
add
sub
enter
shll
fyl2x
mov
test
icebp
cld
stos
mov
xor
mov
enter
cmp
insb
cmp
sbb
lock
push
idivl
dec
out
push
ret
mov
mov
into
icebp
pop
mov
ret
jmp
js
mov
insb
adc
fwait
mov
cs
mov
pop
dec
mov
push
xchg
dec
jne
cmc
fisttps
jge
cmp
stos
adc
xchg
sbb
test
into
mov
xchg
mov
int3
xor
cmp
cmpsl
sbb
faddl
sti
or
jne
inc
sbb
mov
push
mov
ljmp
dec
test
xchg
jecxz
and
insb
stos
push
mov
and
jg
rclb
into
sarb
mov
add
sbb
test
mov
in
sbb
and
sti
dec
test
xchg
lret
stc
and
insb
push
jle
std
gs
lret
das
les
sbbb
fnstenv
in
xchg
add
add
addr16
repz
jne
cmc
jl
test
cli
dec
test
outsb
push
mov
dec
pop
ds
lahf
fnstenv
jne
jbe
lods
jno
push
insb
into
scas
jecxz
fucom
into
and
stc
lds
movsl
and
push
adc
xor
icebp
jno
jno
push
mov
inc
pop
and
adc
and
call
inc
sub
xchg
popa
cmp
ficomps
pop
jno
jp
push
pop
mov
pop
ds
push
cmpl
imul
call
cmpsb
mov
addr16
scas
cli
sbb
adcb
fcos
sub
aas
mov
mov
ds
mov
shlb
pushf
cmp
cmpsb
pop
les
and
addr16
mov
les
mov
mov
dec
leave
xor
push
xchg
sbbb
sbb
pop
pop
imul
popf
jge
stc
fisubl
je
les
fnsave
adc
jmp
cmp
out
js
ret
fwait
mov
pop
adc
jae
jbe
xor
ss
outsl
cmc
lahf
push
pop
lock
sbb
jmp
loopne
fwait
insb
stc
std
clc
pop
loopne
jl
cmp
xor
insb
fwait
xor
loopne
shll
repz
inc
je
bound
imul
mov
ja
xor
pop
test
shl
mov
in
xor
adc
mov
xchg
mov
lock
test
fists
adc
es
rcr
add
je
out
cmc
hlt
cmp
inc
orl
lcall
jle
mov
and
jo
xchg
fwait
and
adc
pushf
xchg
and
shl
mov
adc
dec
stc
pop
jmp
negb
stos
pusha
xor
ss
dec
fnstcw
push
aaa
pop
aas
sti
jl
flds
icebp
aad
addr16
xor
xchg
fdivr
mov
xchg
aad
jo
lods
nopl
jne
xor
push
pop
stos
icebp
sbb
cs
sahf
pop
xlat
arpl
mov
popf
mov
mov
sbbb
cmpsb
sbb
push
fucomp
jno
in
lcall
xor
repz
in
jne
mov
sahf
add
loop
push
adc
inc
cmpsl
jns
mov
add
xchg
faddl
test
mov
xchg
loope
pop
out
or
jne
jnp
add
mov
shlb
mov
data16
adc
inc
and
inc
adc
test
in
pop
out
cmp
loope
jne
push
sbb
std
pop
lgs
mov
push
fcmovu
jne
in
adc
jmp
jmp
pop
dec
cmp
xchg
push
insl
out
lret
out
mov
xchg
pop
cmp
push
aas
out
scas
or
movsl
mov
popf
fisubrl
lret
pop
sti
jnp
sbb
or
aad
or
xchg
and
insb
repz
sbb
shlb
fsts
dec
dec
xor
data16
xor
pop
jg
push
sub
mov
mov
jecxz
cmpsb
aas
aam
daa
and
cs
or
cmp
jbe
adc
es
mov
and
xor
fidivs
int3
or
in
fldl
sbb
inc
out
pop
fucomip
jl
xor
popa
mov
mov
dec
jmp
mov
in
dec
xor
sub
jb
js
insl
inc
lock
jmp
mov
xlat
and
add
in
pop
mov
insl
mov
aad
dec
outsl
mov
inc
test
jnp
arpl
bnd
or
mov
jns
and
mov
dec
inc
adc
mov
xchg
ja
or
pop
inc
or
dec
cmpsb
adcb
fdivr
mov
push
jecxz
mov
mov
aas
insl
xchg
out
sbb
in
fnstenv
roll
mov
or
jge
push
add
push
out
cltd
mov
insl
stos
roll
in
inc
out
pushf
xchg
insb
mov
mov
mov
jo
xchg
popa
and
insb
inc
aad
xlat
push
insl
fs
pop
xor
loop
or
adc
andb
fs
test
push
clc
mov
mov
mov
clc
mov
loope
fcos
insl
mov
hlt
and
stos
push
xor
xchg
mov
dec
jns
push
sbb
push
dec
cltd
stos
mov
dec
fmuls
push
mov
inc
mov
jmp
mov
pop
mov
and
repnz
pushf
nop
xor
dec
pop
fnstcw
loopne
dec
cmp
cwtl
cltd
sbb
jo
arpl
insl
inc
mov
add
add
pop
mov
aas
scas
je
adc
sub
aam
int3
call
lret
into
mov
call
aaa
lds
lods
jno
mov
cltd
lods
and
push
and
pop
dec
stc
pop
sti
mov
call
xor
pop
cmp
push
mov
or
aam
dec
cmp
jmp
push
pop
inc
aas
outsb
ja
xlat
mov
sbb
push
aad
sahf
lret
push
inc
fsubrl
jl
sarb
addr16
xor
das
das
in
out
imul
sub
cmc
cmc
jg
xor
cmp
pushf
cmpl
iret
orl
lret
xlat
adc
aas
add
pusha
xchg
pop
sub
dec
int
add
pop
out
jl
cmp
jmp
jmp
outsl
call
test
fistpll
pop
sub
popa
dec
sbb
jecxz
pushf
cmpsb
in
sbb
xor
push
dec
cltd
fwait
sub
test
adc
subl
dec
rorb
mov
jg
inc
adc
sub
pop
repz
jl
insl
jge
and
pushf
push
adc
fstpt
fwait
jp
orb
jo
dec
xor
pusha
les
inc
push
cmp
loope
testb
inc
test
shll
cwtl
jl
aaa
in
sbb
in
divl
daa
xchg
mov
inc
sub
lret
lods
xor
push
das
xchg
xchg
push
adc
sysexit
mov
aad
in
cwtl
xorb
inc
fidivs
cmp
in
xlat
shl
stos
or
mov
mov
inc
orb
ds
and
adc
lea
jns
neg
pop
adcb
lcall
pop
fildll
aaa
xor
les
or
jnp
mov
inc
test
push
stos
jge
js
xchg
hlt
or
out
adc
test
lsl
push
nopl
pop
adc
out
xor
pop
aam
inc
lods
and
mov
and
dec
notrack
mov
or
insb
loope
int
loope
je
xchg
jns
ficompl
xor
jl
jbe
cmp
pop
je
aas
sahf
cmp
out
cmc
add
ljmp
std
outsb
pop
dec
fs
jo
andb
xor
ret
ficoml
sbbl
addb
sub
pop
loop
addr16
imul
imul
and
hlt
in
pop
inc
insb
fsubrl
clc
sbb
cmc
mov
cli
mov
scas
inc
inc
imul
faddl
or
cmp
add
imul
cmpb
push
pop
dec
test
sbb
cli
ss
pop
push
pop
cmpb
loop
jmp
push
dec
jp
add
clc
mov
imul
add
cmp
jae
aad
mov
pop
pop
imul
sub
aaa
jae
jae
sub
xchg
pop
popa
cld
es
pop
jo
jbe
fcomps
sti
mov
or
add
ja
push
jo
pushf
mov
ss
mov
loope
popa
pop
pushf
xor
jbe
sub
pop
push
lods
pushf
xchg
and
mov
push
mov
inc
sti
frstor
dec
xchg
icebp
xchg
jne
inc
sbb
leave
xor
loope
jno
cmc
jmp
sbb
stc
ds
or
nop
jno
gs
mov
fnsave
leave
in
adc
in
sbb
lahf
daa
fldl
sbb
mov
decb
fsubr
mov
outsl
jp
fisubs
out
add
mov
or
add
andb
add
fwait
jecxz
cmp
push
push
and
clc
fs
or
push
scas
test
jl
inc
insl
stc
shll
rcl
push
jnp
adc
repz
cmp
cwtl
mul
jl
pop
xchg
int3
mov
push
mov
scas
repz
pop
xchg
ljmp
outsl
pop
cld
inc
scas
stos
jg
aad
fsubs
and
in
add
sbbb
pop
push
pop
or
popf
jnp
cld
test
xor
xchg
adc
add
cmp
gs
and
push
pushf
mov
mov
jno
sub
pop
push
lret
test
dec
mov
cmc
push
jno
cld
test
out
in
test
in
jl
out
mov
popa
stc
enter
test
cmp
jo
in
movsl
mov
cs
jno
shll
ret
sbb
insl
out
pop
cld
test
lahf
test
test
mov
push
test
hlt
mov
xor
cli
mov
out
pop
jns
pop
in
in
pushf
dec
mov
dec
jle
shl
push
repnz
jb
pop
push
jle
mov
rep
lret
and
push
or
fstp
sbb
fbld
fstl
iret
xor
cmpsl
add
dec
pop
pop
loope
icebp
cmp
loope
inc
and
adc
or
pop
add
xor
add
or
push
push
es
and
cltd
inc
and
pop
push
adc
mov
push
test
cltd
cmpsl
fldcw
sbb
imul
lret
cmc
mov
pusha
cltd
ret
loop
fldl
fdivrl
and
pusha
xchg
jne
sahf
cmp
std
aas
dec
negb
jo
push
loope
push
jo
push
mov
inc
cmc
data16
xchg
cmc
and
pop
ja
iret
repz
fxam
and
xlat
inc
cmc
scas
mov
pop
mov
jle
mov
ss
mov
pop
xor
int3
inc
xchg
je
pop
sub
repnz
loope
push
push
mov
fnstsw
fimull
and
in
loopne
jmp
sub
sti
sbbb
mov
and
dec
popa
add
fidivs
inc
push
negb
outsl
fstpl
pop
push
out
cmc
cltd
aad
subl
xchg
insb
loope
cmp
mov
mov
push
sbb
adc
rcl
popa
lock
fs
cwtl
das
xor
mov
sbb
cmp
rclb
sti
ret
lret
das
in
notl
stos
arpl
mov
ret
mov
std
lret
ljmp
les
xor
inc
mov
adcl
insb
xchg
dec
cld
lods
movzwl
and
cmp
pop
xor
out
adc
mov
push
out
xor
mov
dec
stc
fsubs
cld
mov
adc
loop
cmp
inc
jecxz,pn
sbb
lea
sbb
decl
out
insb
mov
adc
in
pop
dec
test
fstpt
cwtl
repz
imulb
jle
lret
fwait
movsb
int3
or
int3
inc
in
loope
cwtl
push
cmc
js
popf
jge
mov
arpl
push
ficoms
addr16
add
mov
jl
mov
dec
push
ljmp
add
fildll
or
push
popf
push
repnz
sub
iret
mov
jnp
add
lods
lcall
mov
sub
or
fldcw
add
fnsave
xchg
loop
and
jno
or
stos
push
xchg
adc
enter
addb
xchg
iret
mov
jbe
add
push
mov
dec
orb
loop
loop
lods
lret
enter
jne
ds
mov
mov
jnp
fsubl
cs
mov
mov
mov
mov
aaa
xchg
dec
sti
cmp
popa
fistl
or
xor
les
sub
clc
in
push
in
pop
sbb
or
cld
dec
nop
cmp
sbb
push
inc
fstl
inc
push
repz
jmp
mov
dec
cmp
jae
jb
insb
mov
fistpl
call
adc
test
fistps
jns
repnz
cmpsb
mov
arpl
aaa
sbb
jle
pusha
movsb
sbb
testl
push
sub
cmp
int
and
cmp
fs
iret
rolb
andb
sbb
xor
mov
cld
xchg
les
sub
mov
lret
push
outsb
jle
cmp
cmpb
test
lret
test
jle
out
push
arpl
mov
ss
cmpsl
pop
mov
mov
cmp
data16
jg
lods
popa
dec
add
in
adc
push
scas
xlat
mov
arpl
add
or
lcall
sbb
ficoml
lahf
cltd
imul
insb
fucomip
inc
test
dec
ja
in
mov
int3
xor
enter
inc
sbb
push
enter
adc
enter
call
sbb
cltd
ret
sbb
in
pop
test
outsl
ror
cltd
in
ss
sbb
fcoml
push
sahf
sbb
scas
mov
popf
xor
out
push
dec
xor
testb
xor
push
xchg
jg
push
sub
in
mov
dec
sahf
xorb
jns
cli
cs
pushf
enter
and
clc
mov
dec
mov
push
cltd
mov
cmpsb
stc
cld
mov
sar
add
outsl
inc
xchg
mov
lret
enter
adc
jg
out
or
enter
or
add
ljmp
shr
or
imul
inc
out
ror
daa
push
sti
jne
mov
aad
mov
movsb
enter
jns
cwtl
sbb
jmp
out
negl
insb
popa
call
lret
enter
and
xchg
aad
mov
movsb
enter
into
aas
cwtl
sbb
stos
enter
mov
shl
add
outsl
inc
xchg
mov
lret
enter
cwtl
cli
inc
dec
cltd
mov
movsl
mov
movsb
enter
cwtl
jae
scas
jecxz
cli
mov
mov
ficompl
inc
cmpsb
repnz
ja
jbe
push
jmp
out
testl
sbbb
push
hlt
dec
gs
dec
cmp
jno
imulb
and
dec
imul
leave
sbb
test
xor
popf
subl
lret
pop
cmc
cld
pop
ds
fidivrl
rorb
jo
mov
pop
mov
aaa
aam
jbe
pop
push
push
dec
enter
sbb
push
int
rcr
ja
jmp
clc
popf
jge
shrb
jb
jnp
jmp
std
sbb
push
shll
sub
cmp
int3
push
enter
cmp
or
test
xchg
dec
dec
sub
dec
scas
out
cld
or
lock
and
sahf
fimuls
shl
pushf
fnstcw
dec
data16
movsb
push
mov
test
xor
mov
jle
into
loopne
int
pop
test
pop
jbe
cmpsl
das
pop
stc
sub
mov
arpl
mov
mov
jle
jns
inc
push
enter
and
stos
cmp
add
fsubrl
fs
pop
adc
or
fcomi
sahf
pop
jmp
push
test
xchg
arpl
lret
lret
adc
inc
ja
aad
pop
dec
cmpsb
out
sarl
xor
outsl
pop
push
pop
imul
loop
enter
out
jne
dec
push
fistpll
fisttps
jne
mov
dec
cmc
sub
mov
mov
dec
dec
out
out
and
push
sbb
push
pop
xor
jnp
repnz
jno
jecxz
jno
mov
sbb
fdivl
in
sbb
loop
pop
jo
push
jecxz
pop
das
cmpsl
and
int
test
pop
push
mov
xor
jg
iret
das
test
cmc
sbb
inc
push
cmp
inc
mov
push
or
cltd
adc
outsb
sub
inc
fwait
jle
jmp
pushf
sub
ret
in
and
cmp
imul
push
cmp
insl
movl
daa
and
cmpsl
and
xor
push
or
and
das
jne
jmp
jle
adc
jle
shr
jg
pop
repz
and
loope
xorb
in
stc
jne
or
das
xor
mov
adc
fbld
jecxz
adc
adc
hlt
cmpsb
pusha
pop
cltd
pushf
in
cmc
ss
add
lcall
aad
mov
dec
cltd
push
jg
xchg
add
jmp
fsubrs
sbb
or
push
in
sub
outsb
das
cli
cmpsb
rorl
ss
mov
aam
in
xchg
sbb
pop
lods
clc
movd
aas
push
push
inc
movsl
jnp
cmp
in
out
pop
aas
frstor
ret
mov
cltd
push
xor
sbb
jnp
stc
sbb
add
xor
inc
in
dec
pop
rolb
in
gs
popa
mov
jo
mov
cs
mov
fnstenv
cmp
lahf
cmp
pushf
fcomi
push
xor
pop
sbb
insb
sbb
pop
js
in
or
je
lret
and
and
in
sub
ficompl
fbld
icebp
test
out
or
push
inc
or
flds
lea
inc
jp
in
outsl
cmpsl
pushf
jbe
insb
dec
xchg
cs
xchg
mov
add
push
mov
mov
fwait
shr
xor
jecxz
mov
push
and
sbb
icebp
sub
sbb
pop
es
cmc
loope
jp
cltd
adc
call
push
pop
or
xor
add
ja
sub
cmp
xor
or
adc
jmp
push
and
cmp
pop
dec
std
cltd
mov
jb
aaa
int
pop
sbb
push
leave
dec
loope
add
dec
jns
scas
cmp
inc
adc
inc
or
dec
jo
repz
dec
test
xor
mov
inc
xchg
ret
pop
dec
test
jae
popa
outsb
jle
out
push
jecxz
sub
mov
jecxz
cltd
mov
sbb
stc
inc
int3
mov
fstp
push
in
sbbb
aas
pop
movsb
fistps
jg
pushf
sahf
test
insb
mov
cmp
and
es
mov
aad
and
and
push
pop
cli
ds
std
into
xor
cmpsb
and
mov
sbb
outsb
sbb
mov
int
pop
adc
jno
xchg
shrb
cmp
out
xchg
jmp
out
testl
xchg
mov
xchg
dec
sbb
inc
je
lahf
push
sti
icebp
in
cmp
sub
inc
imulb
xchg
sbb
fdivs
in
cltd
outsb
ss
adc
cmpsl
repz
fnstsw
dec
mov
dec
fiaddl
enter
sub
fnsave
sub
pop
mov
jg
cld
xchg
cwtl
fstl
scas
cli
inc
stos
inc
push
ds
fistl
xchg
pop
sbb
pop
xor
xchg
xchg
rcrl
fadd
pop
push
adc
adcl
inc
push
jecxz
adc
fstpt
jge
jo
lea
mov
roll
loope
add
pusha
jl
dec
lret
push
mov
aaa
sub
push
mov
pop
scas
push
dec
negb
shrb
jp
fstps
daa
add
aaa
jb
dec
and
jbe
xchg
enter
mov
or
cmp
or
bound
pop
sub
gs
jae
imul
dec
push
jno
cmp
movb
dec
fwait
cmpsl
test
out
ja
xchg
jno
ljmp
inc
xor
notb
inc
into
popf
aam
ja
js
sub
xchg
or
fstps
xchg
jmp
ffree
cltd
inc
mov
fiadds
push
sub
test
fldl
sahf
jns
push
mov
fstpl
jge
sbb
mov
es
mov
dec
ret
mov
imulb
lahf
and
imulb
stc
add
lahf
arpl
pop
xor
sbb
ljmp
jle
xchg
ljmp
sbb
inc
cmp
fnstsw
int
andb
mov
jle
inc
inc
rol
test
shl
ret
and
fnstcw
test
sub
es
ljmp
sub
repz
mov
push
push
mov
cwtl
push
insb
jmp
and
mov
stos
cwtl
and
or
mov
adc
cmp
push
dec
outsb
add
adcl
movsl
push
pop
push
fbstp
scas
dec
xchg
cmp
inc
rol
pop
jmp
mov
std
xchg
das
add
and
and
push
std
sahf
push
jne
or
xchg
push
ret
dec
jne
add
jae
sub
xchg
rcrb
dec
mov
push
cltd
xor
scas
fnstsw
stos
cwtl
and
cli
data16
stos
and
int
push
xchg
loopne
in
add
mov
test
jnp
ret
and
fnstcw
jg
push
jne
out
test
out
push
and
and
jne
stc
pusha
sahf
pusha
adc
xchg
add
test
out
cmpsb
and
ljmp
cmpsb
and
ljmp
stos
and
ret
ljmp
stos
and
stc
test
mov
fwait
pop
adc
ljmp
jne
or
sbb
movsl
aas
lock
mov
adc
mov
pushf
sarb
jne
out
mov
cli
cmc
repz
jne
loope
push
jbe
dec
and
jmp
fsubrl
inc
jle
mov
loopne
sbb
inc
inc
loope
sub
mov
jge
ret
loope
test
inc
daa
ss
jo
mov
cmp
stc
xchg
sbb
cmpsl
cmp
pop
stos
push
xor
adc
pop
sbb
clc
mov
mov
xor
idiv
push
int
mov
mov
mov
ffree
xchg
sahf
sbb
mov
lahf
push
loope
iret
sub
lock
cld
and
ja
push
int
mov
mov
mov
sub
push
push
mov
subb
push
cmc
cmp
imul
push
mov
subb
jecxz
push
inc
add
adcb
push
push
and
mov
pop
sbb
testb
lahf
sahf
mov
int3
daa
or
jp
pop
push
les
add
addr16
repz
test
fimuls
sub
jg
xor
ror
push
inc
and
lret
fsts
pop
push
lcall
mov
jg
addr16
cltd
cmp
pusha
xorb
cwtl
addb
push
xor
outsb
incl
outsl
push
xchg
push
add
mov
push
mov
cmc
mov
loop
scas
cmp
mov
sti
mov
int
push
outsl
fsubl
mov
cmpsl
and
dec
test
jne
cs
push
clc
mov
xor
cwtl
lret
fsts
stos
add
push
adc
cwtl
and
repz
das
lret
mov
fstl
push
inc
inc
sbbb
inc
pusha
ffreep
and
xor
add
das
xlat
les
pop
stos
and
hlt
mov
imul
mov
xor
test
out
jg
push
xor
loopne
out
cmpsl
mov
add
jne
stc
mov
lcall
push
inc
mov
cmpsl
and
dec
test
jne
std
push
fisubrl
fst
push
push
test
mov
jecxz
ret
fstps
add
xorb
pop
addb
push
out
mov
fs
fwait
adc
push
cmc
mov
stos
pop
jb
xor
cld
or
and
arpl
and
push
jb
lcall
mov
addr16
pop
push
fists
pusha
addr16
das
loop
adc
data16
mov
fwait
add
lods
repnz
test
test
popa
mov
ficompl
inc
cmp
in
pop
insb
inc
xlat
sbb
xchg
adc
pop
mov
nop
fsub
add
or
and
push
jecxz
jno
rorb
lahf
je
sbb
mov
and
fsts
aad
push
mov
mov
decb
lret
sbb
cmp
pushf
push
adc
and
mov
fstp
test
insb
or
jnp
pop
sarl
sarb
out
inc
lcall
lock
jl
js
inc
jbe
mov
dec
insl
add
out
sub
cltd
mov
imul
movsb
cwtl
sub
test
je
pop
loop
sbb
stc
mov
add
or
fabs
lahf
adc
sbb
jb
jns
mov
adc
pop
push
pop
test
and
xchg
loopne
mov
nop
jbe
pop
fimuls
jge
mov
mov
mov
and
mov
and
or
mov
dec
add
aam
or
mov
cmp
push
cmp
jne
outsl
leave
xchg
adc
inc
add
xchg
push
or
xchg
rolb
cmp
cmp
add
sbb
cld
pop
repz
movsb
mov
cmp
lock
stc
cli
mov
push
push
adc
out
jmp
push
cmpsb
loop
sub
dec
pop
icebp
push
jle
jge
sbb
adc
scas
in
and
out
enter
lcall
popl
fstpt
xchg
aas
pop
xor
aas
inc
mov
adc
jne
imul
movsl
push
test
pop
cli
cmp
sbb
insb
fidivrs
roll
pop
push
cmc
pop
rolb
or
and
xchg
and
xchg
or
fnstcw
mov
jae
cmp
mov
movsl
pop
out
lock
fwait
cs
jle
push
fstp
pop
pusha
pop
loopne
cmp
pop
inc
notb
adc
sbb
hlt
lea
jnp
sbb
lea
in
lret
xchg
or
push
in
push
push
repz
cmp
test
sbb
sub
mov
inc
push
add
mov
inc
std
mov
cmp
je
push
mov
sbb
shl
test
dec
push
sbb
sbb
or
pop
add
mov
pop
fwait
push
cs
fistl
out
ja
jle
popf
pusha
fcomi
sbb
or
test
jmp
sub
repnz
jae
jbe
cmp
adc
add
ds
imulb
fidivrs
push
add
push
cmp
addr16
cmc
mov
int
jge
scas
sub
cmpsb
xchg
in
shr
pusha
add
cmpl
xchg
pusha
hlt
aaa
mov
ja
call
addr16
call
xchg
into
fiadds
adc
sub
xchg
mov
xor
stos
call
jns
adc
ss
aam
sti
in
ret
cwtl
insb
je
outsb
xchg
loope
fstpl
mov
and
sbb
xchg
pop
hlt
jge
push
pop
sbb
mov
dec
pop
adc
insl
fildll
testb
fwait
test
add
popf
negl
push
adc
mull
jnp
push
sbb
lahf
or
xor
testl
mov
push
ds
jp
cmc
lahf
jmp
enter
push
mov
xchg
xchg
cmp
mov
adc
cmp
inc
dec
in
mov
sarb
jns
push
push
pop
test
inc
shrb
rcr
test
jmp
push
push
inc
pop
sub
pusha
iret
mov
out
outsl
in
xchg
movsl
es
icebp
aas
jge
lahf
xor
mov
push
shl
and
das
sbb
jbe
test
loopne
jno
sbb
test
orl
aad
cmpsb
pop
insl
xchg
int
jmp
int
jae
inc
push
pop
addr16
mov
repz
das
cmc
je
inc
out
out
jge
sbb
jns
ja
jl
mov
cmp
sbb
xlat
lcall
popa
repnz
sub
and
or
jp
push
fildl
jmp
mov
je
popa
fisttpll
loope
and
jmp
lods
dec
jb
leave
sbb
xor
dec
sub
or
adc
mov
xchg
cli
jl
jge
or
jns
cltd
add
popf
sbb
rcrb
or
aad
iret
push
cs
andb
in
jnp
mov
ficoms
in
aas
call
xchg
or
insb
sbb
ret
add
jge
push
jle
push
sbb
fs
sahf
xchg
and
jb
jl
sbb
addr16
je
ficoms
pop
mov
push
ffreep
cmp
lods
mov
jecxz
sbb
mov
adc
jl
jnp
and
ss
push
fimuls
dec
int3
lcall
jbe
xchg
in
mov
dec
fwait
or
fdivl
sbb
stos
mov
and
push
xchg
add
sbb
jl
icebp
sub
push
adc
lcall
repz
in
addb
cmp
and
and
lea
cltd
pop
adc
ljmp
mov
clc
dec
dec
xor
lcall
sbb
shr
repz
xchg
push
jg
cwtl
fxch
call
pop
icebp
xor
icebp
in
popf
add
mov
in
mov
cli
rcll
es
outsb
popf
cmpxchg
sbb
ret
mov
jo
lcall
jle
in
mov
sbb
dec
or
cmp
cmpsb
ret
xchg
in
mov
adc
insl
je
pop
aas
jo
dec
sub
sahf
push
add
pop
sbb
and
insb
xchg
cmp
mov
in
or
stos
imul
xchg
add
aaa
mull
jne
or
cmpsb
in
mov
fs
mov
mov
fmuls
into
jno
je
pop
adc
in
imul
xchg
and
mov
js
and
mov
cmp
pop
xor
stc
in
into
scas
leave
inc
pop
and
dec
shlb
leave
sbb
repz
cmp
cmp
inc
cmp
call
mov
pushf
push
add
nop
in
test
adc
cmp
sti
jle
adc
xorb
test
mov
add
mov
shll
faddl
rcll
negl
test
and
incl
jo
lods
mov
loope
jne
loope
jge
xor
cltd
jl
xor
jne
enter
sbbb
mov
pop
sbb
inc
push
sti
inc
mov
shlb
push
insb
inc
jo
scas
outsb
cltd
mov
loope
sbb
les
dec
ret
fs
adcl
mov
jl
arpl
xchg
push
lds
sub
lcall
jmp
mov
es
sub
inc
mov
jmp
in
pop
mov
aam
jge
scas
cld
insl
ds
movsl
add
xor
xchg
sti
xor
pop
gs
ja
out
aam
add
jecxz
outsb
dec
popf
test
ret
test
lret
sti
cmpsb
pop
and
xlat
sar
in
dec
lock
push
jg
lock
mov
ret
jmp
fs
cwtl
pop
mov
cmpsl
sub
les
test
addr16
xor
pop
xor
or
aad
pop
sbb
popa
das
sub
add
xchg
sub
push
sti
test
pop
or
push
xchg
scas
pop
dec
ljmp
and
mov
sbb
aaa
mov
and
fdivl
fsubrs
pop
mov
jecxz
push
jle
sub
pop
outsl
xchg
xchg
mov
out
lcall
lods
and
cmc
jmp
cmp
lahf
and
jecxz
mov
cld
stc
pop
push
imul
lods
jb
lcall
mov
jae
and
aaa
les
dec
cmp
imul
adc
pop
xchg
mov
in
lret
or
scas
lock
ss
push
sbb
fsubr
mov
cmp
jle
or
insl
add
add
cwtl
push
imul
pop
mov
inc
insb
dec
ds
scas
cli
push
cmp
mov
mov
jnp
jmp
add
push
out
sub
xchg
add
pusha
fmull
add
mov
into
test
xor
mov
jmp
lcall
scas
push
loope
mov
jl
out
dec
test
mov
pop
in
inc
dec
rcrl
jmp
popa
repz
xchg
dec
jg
mov
mov
jge
orb
xor
jmp
pop
lahf
push
pop
push
adc
sub
aaa
mov
out
cmp
xchg
add
dec
lock
lock
icebp
fldt
push
int
pop
pop
mov
scas
xchg
sub
inc
cmpsl
jo
cmpb
loop
adc
aas
es
jle
shlb
or
jnp
add
loop
mov
xchg
adc
adc
push
lret
sub
jbe
cmpsl
scas
dec
xchg
sub
hlt
push
out
fnstcw
ljmp
push
jge
cltd
shll
pusha
push
imul
arpl
fcmovne
cmp
dec
sbb
les
sub
rcrl
repz
daa
popf
imul
xchg
xchg
push
ret
lret
mov
fs
test
jne
aas
ljmp
je
xchg
jnp
mov
mov
mov
xor
test
xchg
push
jae
fwait
scas
sub
push
in
mov
sbb
sbb
jp
fisttpll
xor
loopne
stos
xchg
out
ljmp
lods
ret
data16
addl
imul
mov
jo
cmp
inc
sbb
inc
mov
push
cmpsb
mov
fidivs
mov
dec
push
arpl
sahf
out
jg
addb
dec
add
xor
inc
jo
dec
sub
push
dec
mov
mov
outsl
mov
cmp
and
lcall
mov
loop
push
movsl
xchg
repnz
jg
inc
jg
rclb
ja
push
add
push
aad
push
aas
dec
inc
cmc
mov
inc
push
pop
xchg
and
xchg
enter
daa
scas
daa
icebp
sub
cli
test
lods
loopne
pmaxsw
sbb
aad
lahf
push
inc
fdivr
mov
jbe
jl
loope
mov
mov
add
and
inc
cmpsb
and
jmp
and
lret
jmp
and
data16
inc
cwtl
jbe
cmpsb
scas
vlddqu
popf
and
sbb
ja
cmp
inc
push
fildll
test
and
mov
imul
lods
rcll
sbb
nop
lds
cmpl
pop
jmp
add
adc
cmp
sbb
out
mov
dec
sahf
sbb
testl
xor
fs
frstor
test
dec
hlt
nop
cmp
adc
add
test
push
pop
pop
sub
sbb
inc
cmp
and
out
adc
adc
fcmovnb
popa
jne
cmp
je
and
std
mov
outsb
call
jnp
adc
add
mov
out
mov
and
cmp
out
mov
inc
mov
adc
test
in
mov
ss
push
jae
push
jmp
mov
inc
or
es
jmp
xor
add
mov
insl
inc
pop
in
jns
xor
sub
pop
inc
pop
dec
in
iret
jno
sbb
jge
loop
lret
std
xor
push
xchg
push
mov
dec
outsb
cli
cmp
ret
xor
sbb
dec
fnstsw
fistps
test
mov
inc
clc
jp
ds
inc
ds
in
shrl
adc
mov
sub
cld
test
fdivrl
in
push
sub
pop
enter
icebp
pop
cs
hlt
mov
jl
lahf
aad
cmp
out
fidivrl
xchg
in
jle
mov
cmp
jmp
add
imul
inc
mov
loopne
mov
popf
bound
jo
push
cmp
in
push
decb
mov
test
add
jecxz
dec
lret
inc
jno
sub
xor
imul
pop
or
pop
daa
xor
gs
cltd
and
inc
xor
pop
mov
stos
fs
pop
mov
pop
in
mov
sbb
xor
xor
jbe
pop
fnstsw
es
fimull
es
adc
cmp
inc
fs
cmp
xchg
and
cs
pushl
sbb
rolb
movb
fcoml
pop
mov
notl
lret
mov
pop
pushf
sub
imul
insb
mov
jnp
push
ret
mov
jge
pop
mov
push
fcoms
jge
add
jmp
insl
mov
insl
les
clc
mov
ss
jl
sbb
xlat
push
es
push
ja
aam
or
mov
push
jbe
rorb
sbb
inc
jl
jl
data16
push
ds
dec
sbb
xor
jl
inc
loop
sbb
sbb
jbe
push
jp
xchg
out
or
push
orb
or
inc
stc
add
pop
cmp
popf
jns
xchg
inc
dec
sub
test
cmp
idivl
fcomip
popf
jno
dec
mov
push
cltd
insb
ret
dec
cmp
jne
pop
xchg
sub
inc
cmpsl
and
inc
xchg
push
call
sbb
pop
sbb
xchg
out
mov
mov
xor
dec
frstor
adc
push
xchg
mov
cmp
insb
jge
adc
sbb
mov
shll
fstps
cmc
inc
jg
mov
fldl
sub
pop
add
rcr
jno
repz
rcrl
js
repz
xchg
dec
decb
jmp
xchg
jne
fadds
stos
in
sti
dec
and
jae
jne
adc
rep
repz
mulb
sub
fwait
test
cmpb
mov
adc
sub
fwait
out
in
or
push
dec
loop
mov
fnstenv
fcomp
xor
xchg
std
push
add
add
lret
cmp
test
in
test
mov
shl
jnp
jne
xor
in
ja
pop
add
roll
pusha
stos
jmp
leave
sbb
outsb
pusha
inc
fwait
mov
inc
into
test
stc
and
ret
mov
pop
jp
mov
incb
jno
dec
cmp
in
pop
mov
xchg
jl
lret
pushl
ret
cltd
push
imul
jb
cmpsl
push
loop
aad
test
jmp
fadds
inc
mov
add
mov
pushf
rclb
shll
or
repz
cmpsb
je
icebp
dec
mov
fimuls
daa
mov
sbb
jmp
xor
andl
mov
test
mov
jno
ss
xorl
dec
jmp
aas
inc
cwtl
mov
loopne
sbb
jl
lret
lock
xchg
sub
pop
ret
xlat
xor
jnp
push
pop
or
xor
cwtl
xor
daa
and
push
cmc
push
je
enter
and
loope
scas
je
push
data16
shll
fcomip
xchg
mov
jmp
xchg
popf
push
add
add
in
xchg
mov
jnp
xor
dec
imul
add
jecxz
and
sbbb
and
mov
fldenv
pop
sbb
dec
lcall
out
fs
cli
in
and
insb
lahf
dec
mov
lds
cmc
cwtl
gs
mov
loop
outsb
and
sub
mov
or
imul
push
cltd
cmpsb
mov
jnp
jne
xchg
loopne
nop
fldenv
mov
sbb
arpl
out
das
std
sbb
push
push
pop
fisubrs
push
loope
jae
push
or
scas
mov
xchg
dec
cs
dec
xor
icebp
loopne
std
jg
sti
test
inc
call
and
cmp
in
loopne
fcmovu
ljmp
lahf
stc
add
inc
aam
leave
mov
push
sub
or
push
jge
push
adc
sub
mov
xchg
and
fiaddl
pushf
movsl
jp
jmp
call
in
into
fstpl
aad
xorb
xor
pop
das
lods
inc
or
data16
jmp
mov
test
add
cmp
add
sub
mov
pop
dec
mov
hlt
lcall
into
stos
call
jno
push
les
or
pcmpgtw
mov
jp
fnsetpm(287
dec
inc
mov
mov
dec
xlat
xorb
sti
arpl
frstor
add
pop
sbb
movsb
sbb
adc
movsl
mov
call
in
imul
xor
cmpb
enter
jp
jle
push
xchg
fnstcw
cli
sahf
aad
cmpsl
not
mov
or
cltd
dec
notl
push
jbe
cltd
adc
jnp
cmp
or
cld
dec
push
shll
into
sub
sub
dec
mov
ss
out
push
and
pop
xor
ss
dec
dec
pop
and
mov
push
mov
jecxz
ret
jge
push
call
push
decb
aam
push
negl
dec
jno
mov
pop
sbb
shll
sbb
data16
xchg
outsb
cltd
jge
lcall
call
adc
sbb
sub
mov
mov
jmp
or
mov
sar
lahf
fldenv
test
mov
repz
lods
and
dec
lds
or
shl
or
sub
out
movsl
xchg
data16
cs
int
push
add
jne
jbe
aas
jbe
xor
cmc
lods
aaa
sub
jne
push
pop
sub
lods
scas
jge
xchg
jnp
mov
or
cmp
into
iret
pusha
or
push
ss
adc
xchg
imul
push
lret
dec
addr16
jg
lock
jle
mov
mov
xchg
cmp
mov
scas
hlt
fldt
add
std
pop
popa
dec
call
pop
test
pop
inc
shr
rolb
dec
jb
popa
push
in
repz
pop
cmpsl
movsl
loop
pop
stos
xchg
loope
mov
sub
adc
push
adc
push
cltd
adc
fisubl
push
pusha
adc
fbstp
cltd
loop
cltd
xchg
xchg
les
xchg
adc
scas
movsb
out
xchg
or
std
jno
mov
loop
add
in
fisttpll
lcall
aas
cld
sar
add
shl
lret
jnp
add
adc
or
stos
sbb
xor
in
mov
xchg
and
lret
jns
inc
inc
sub
fadds
sub
dec
adc
mov
and
jmp
incl
outsb
cs
mov
sbb
insb
das
andb
ss
sbb
dec
sbb
out
repz
xchg
sub
inc
xchg
lret
cwtl
mov
clc
ror
insb
and
jmp
xchg
cmp
push
push
inc
add
xchg
sbb
inc
das
ljmp
push
adc
add
mov
pop
ficoms
gs
push
out
outsb
arpl
push
imul
fnsave
int
out
sbb
pop
imul
lock
fadds
jns
in
pop
xchg
data16
mov
mov
in
test
fstpl
jne
cmp
in
push
add
cs
lcall
dec
test
mov
mov
outsl
fists
outsl
adc
lcall
frstor
pop
dec
pop
dec
adc
addb
inc
outsl
adc
pop
ja
inc
in
dec
inc
mov
and
jecxz
out
push
sub
pushf
sub
test
test
cmpsb
and
adc
in
test
aas
sub
dec
dec
add
mov
arpl
xchg
dec
sbbl
testb
cmpsb
push
outsl
mov
fdivrl
out
or
cwtl
adc
push
lret
iret
std
icebp
das
sub
mov
xchg
insb
pop
mov
fs
xchg
push
test
outsl
cmpsb
aad
sbb
mov
inc
push
les
xor
mov
in
pop
movsl
shr
or
repz
push
sbb
std
jp
pop
mov
jo
aam
repz
lret
scas
aas
add
lcall
inc
mov
fst
pop
cltd
sbb
in
dec
mov
inc
shlb
lods
and
adc
mov
test
xchg
mov
mov
cmp
sub
std
jl
mov
test
push
and
jne
jl
sbb
add
in
ret
bound
xchg
sub
dec
and
int3
add
pop
jb
mov
mov
inc
jmp
jge
sarl
shrb
pop
push
cltd
mov
push
std
and
insb
or
pop
cmp
lcall
insb
xchg
dec
pop
mov
negl
ficomps
mov
inc
fidivrl
test
cltd
and
loope
dec
add
bound
pop
bound
add
and
rol
insl
cmpsl
cmp
mov
mov
jo
mov
xchg
mov
pop
sub
cmp
dec
xor
outsl
fldcw
sub
lret
call
sub
add
test
mov
neg
aad
out
or
stos
adc
mov
rolb
add
outsl
mov
imul
mov
cmp
or
or
fisubrl
outsl
xchg
adc
mov
std
inc
sub
xorl
sub
inc
and
mov
and
subb
fsubrs
dec
cmp
lahf
std
add
cmc
shll
pushf
xchg
jns
cmp
lea
popf
jl
jae
jns
sbb
pop
sub
sub
push
js
adc
mov
dec
and
inc
out
jne
arpl
mov
mov
test
test
jl
inc
jg
daa
clc
xchg
push
fadds
pop
fs
insl
fs
aaa
in
xchg
xor
jmp
insb
jne
test
pop
into
addl
stos
push
lods
rolb
inc
adc
inc
xchg
adc
mov
insl
push
imul
pop
sub
outsb
mov
insb
pop
movsl
dec
mov
lds
rol
leave
pop
push
xchg
pop
cmp
subb
pop
lahf
test
ficompl
pop
lds
sub
push
inc
jle
sub
ror
addb
pop
clc
pushf
in
addb
test
aas
les
pushf
pop
in
mov
lcall
movsb
scas
test
inc
dec
dec
push
cmc
jmp
add
lret
in
pop
out
fmuls
insb
mov
insb
stc
pop
sub
dec
imul
mov
push
sub
sub
cmpsb
fistpl
sbb
push
rolb
mov
test
shlb
shlb
incl
and
sahf
cmpsb
lods
mov
ds
les
outsb
xchg
pop
mov
push
mov
inc
test
stos
cli
pop
pop
jp
pop
mov
xchg
int
add
ja
mov
pushw
mov
mov
pop
sbb
loope
and
addl
test
ljmp
adc
pop
enter
inc
dec
rol
cmc
rolb
mov
mov
int
out
lds
push
ja
push
das
fnstsw
mov
rcl
ja
push
cmc
loopne
inc
jns
add
fs
and
mov
pop
arpl
push
mov
lret
push
push
lcall
mov
mov
fs
jb
mov
and
mov
pop
adcl
cmpsb
int
mov
rcrl
test
adcb
pushf
lahf
insb
fwait
cmp
jg
rcl
loop
aas
test
push
setp
jne
stos
pushf
jp
iret
pop
push
adc
jb
test
dec
and
inc
adc
add
orl
nop
inc
jg
jbe
xor
pusha
sbb
push
iret
xchg
add
mov
fiadds
jbe
fsubrl
std
std
and
push
adcb
test
jbe
movsl
in
add
ljmp
test
inc
fldl
fisttpll
sbb
inc
push
into
insb
fbld
ret
adc
cmp
inc
in
mov
xor
and
mov
add
sub
add
ficoms
mov
add
sahf
nop
loope
pop
imul
xor
cmpsb
add
pushf
jg
fnstsw
sbb
and
xor
addr16
ljmp
iret
push
mov
xor
cmc
bound
mov
mov
loope
pusha
lods
mov
fstpl
fistl
lret
pop
adc
jg
data16
push
pop
in
mov
sbb
jnp
xor
push
arpl
jns
pusha
movsl
and
mov
loopne
ffreep
jb
int3
repz
into
and
mov
fists
pop
addr16
stos
pusha
movsl
mov
stos
incl
sub
cmp
popa
push
mov
sub
mov
xchg
ss
inc
push
scas
sub
enter
insl
inc
es
and
les
in
pop
and
xchg
cmp
push
popf
cmpsl
adc
sbb
xchg
dec
fstl
stc
aad
or
dec
jbe
dec
mov
push
aad
xor
ss
rcrb
idivb
pop
jns
mov
xor
adc
pushf
push
fldl
lock
xor
and
in
int3
fidivrl
or
push
and
or
jle
pop
mov
mov
repz
adc
xchg
daa
push
fdiv
stos
cs
fmulp
cli
sbb
or
test
dec
int
rcrb
pusha
xchg
fnsave
adc
dec
cmpsb
enter
xchg
repz
pop
lahf
pop
repz
sub
pop
mov
mov
pop
sub
cmp
dec
arpl
aas
fwait
sbb
insl
lahf
jmp
ja
aas
fdivrl
mov
cmp
aas
test
std
clc
xor
jle
jle
xchg
jle
dec
jo
test
popa
adc
mov
out
fisubrs
in
mov
and
sbb
jne
clc
insl
jge
jle
cwtl
sahf
sbb
shlb
inc
mov
test
push
jle
mov
add
mov
enter
cmp
jg
cmpsl
movsl
test
sbb
jecxz
pusha
add
mov
test
fistps
sbb
imul
jbe
les
sub
dec
xor
pop
cli
pop
inc
adc
aad
dec
jno
xchg
stos
sahf
mov
cmp
popa
in
push
add
inc
push
mov
cld
inc
push
mov
in
es
test
push
es
adc
clc
es
mov
stos
xchg
cli
inc
insb
inc
iret
pop
je
cmp
std
xor
incl
subl
inc
ret
push
pop
iret
in
cmp
push
pop
insl
das
roll
into
cmc
jle
jno
cmc
xchg
push
jmp
or
fldl
mov
insb
frstor
in
pushf
enter
mov
aad
dec
icebp
xor
jne
cmp
aas
jb
repnz
push
fwait
in
pop
je
bound
mov
sub
sbb
sarl
push
out
js
aas
inc
sub
lret
pop
out
jnp
and
sbb
pop
sbbl
insb
lock
push
pop
in
mov
push
jno
push
push
xchg
mov
and
repz
cld
or
push
inc
mov
push
add
jp
fildll
mov
push
cmp
inc
in
cmp
inc
in
or
inc
and
std
push
loope
out
mov
xor
mov
pop
mov
jno
fwait
and
pushf
xchg
out
ss
xor
scas
push
repz
dec
adc
lods
sub
stc
and
or
mov
sahf
scas
sbb
int
cltd
inc
std
sub
outsb
arpl
push
push
outsl
pop
xor
js
xlat
xor
imul
pop
jne
sbb
add
jb
mov
jp
lock
add
in
pop
lcall
ss
mov
xor
sbb
jo
pusha
push
adc
add
jo
inc
push
mov
jne,pn
jl
and
push
jg
shlb
loope
loope
push
sub
jle
jg
xor
lret
and
popf
cmp
insl
jg
dec
jge
jno
inc
push
popa
sbb
cmc
movsl
or
cmpb
std
jne
mov
jne
cltd
pushf
popf
jne
mov
ja
fdivrl
loopne
jle
fisttps
nop
out
or
mov
repnz
rcrb
jmp
scas
mov
and
icebp
test
push
push
xor
inc
ds
fbstp
mov
outsb
stos
mov
dec
mov
cmc
iret
inc
out
shll
push
insl
sbb
adc
in
or
xor
xchg
or
jne
pop
inc
push
cld
or
pop
push
movsl
adc
adc
fstl
dec
cmp
in
mov
filds
jb
inc
jge
and
rcrb
and
popf
dec
push
ficoms
sbb
inc
imul
in
push
fs
jl
sbb
daa
enter
cltd
ret
sbb
pop
loopne
rcr
xor
mov
cmp
xchg
fdiv
jno
cmpsl
insb
pushf
mov
mov
or
nop
imul
cltd
jno
adc
pop
inc
push
and
push
ret
inc
leave
cmp
ss
loop
jb
les
xor
xchg
mov
ljmp
rcr
sbb
mov
test
xorl
cmp
outsb
mov
mov
xchg
insl
add
jg
mov
push
pusha
fbld
pop
jl
clc
sbb
cmp
push
mov
test
sub
dec
mov
inc
fisttpll
orl
and
mov
arpl
fistpll
inc
fcoms
push
int3
mov
cmp
mov
fnsave
xchg
aaa
and
inc
dec
adc
rclb
iret
icebp
movsb
xchg
mov
mov
cmp
add
fcoml
push
add
push
xchg
test
pop
orb
lea
pop
bound
jp
fxch
cmp
or
sbb
js
sar
cli
push
and
faddp
mov
cmp
je
jb
dec
in
or
dec
xchg
sub
daa
mov
mov
adc
jmp
enter
scas
mov
or
lcall
sub
pop
test
aad
jo
xchg
int3
adc
daa
das
cmp
outsb
fcmovnb
js
jmp
dec
stc
push
pop
add
ljmp
lods
inc
cltd
movsb
adc
jecxz
mov
add
lock
mov
cld
dec
jno
sbb
cmp
or
jge
cmpsl
sub
mov
rcrl
sub
cmpsl
push
mov
mov
cmpl
push
xchg
cs
xor
arpl
subps
jle
jns
insl
jbe
cmp
jecxz
test
sub
in
pop
sub
fistps
ljmp
fnstenv
mov
idivl
mov
pop
mov
mov
xchg
mov
sbb
imul
lea
aaa
inc
sub
jne
sbb
loopne
ss
aaa
scas
mov
sbb
stc
jle
xor
cmpl
popa
rol
sbb
sub
and
mov
adc
gs
jmp
scas
adc
push
mov
inc
cmp
pop
adc
aam
data16
stos
add
mov
hlt
xor
and
fimull
jle
cs
push
popl
add
sahf
filds
jge
mov
mov
sar
mov
lods
aaa
aad
xor
arpl
sbb
or
sub
jle
sub
or
xorb
fnstsw
pop
pop
cmp
jo
pop
gs
test
adc
xor
pop
xor
mov
ja
add
lret
incb
lods
outsb
mov
push
pushf
adc
pop
loope
mov
push
sbb
mov
mov
lret
insb
adc
sub
movsl
ret
jmp
cld
sub
inc
push
das
push
fisttpl
rcrl
jge
pop
mov
xor
loope
dec
sub
cmp
out
lock
lods
sbbb
mov
mov
add
mov
les
int3
sub
pop
pop
cmp
add
mov
jnp
shl
mov
push
imul
jg
xchg
and
inc
shll
jne
push
mov
mov
lods
sbb
sahf
mov
and
in
xchg
cwtl
jle
pop
dec
cmp
mov
insb
filds
dec
in
cmpb
mov
in
add
xchg
int
fmull
clc
test
and
in
push
ja
push
fstl
fldln2
fistl
mov
aas
cmp
popa
push
loope
push
xor
arpl
jmp
es
sarl
data16
test
jle
and
fnsave
mov
ss
shlb
in
les
fstpl
loope
mov
hlt
sahf
negb
push
cmp
add
add
pushl
pop
aas
add
xchg
repz
stc
lahf
dec
mov
add
loope,pn
loop
push
imul
cmpsl
into
push
pop
mov
pop
mov
fildl
fsubrl
cmp
sbb
add
sub
icebp
lcall
jnp
rorl
inc
adc
push
mov
arpl
ds
frstor
ret
js
sbb
mov
fs
mov
aaa
fs
xchg
mulb
sub
jns
shr
add
fstpl
aaa
jmp
imul
xor
stc
mov
cld
stos
imul
xor
add
es
popf
fs
or
push
mov
pop
or
cmpsb
push
lcall
dec
pop
xchg
int3
push
jne
arpl
lods
in
mov
inc
test
pop
aad
in
jmp
sahf
pop
mov
enter
addb
xor
cmpb
fwait
bound
mov
mov
cmp
cmpl
dec
cs
jmp
loope
das
and
loopne
inc
xchg
jnp
hlt
fwait
push
lods
out
test
jg
aam
mov
shr
adcl
xchg
mov
sub
push
mov
lods
scas
out
or
jecxz
dec
sbb
sub
insl
call
dec
nop
mov
pop
ljmp
xor
mov
jmp
lret
add
push
call
pusha
dec
fisttpl
lea
xchg
or
in
test
loopne
lcall
jno
mov
loope
xchg
popf
pop
push
scas
cmovp
cmp
psrad
mov
mov
outsl
punpcklwd
repz
cmp
aaa
int
pop
mov
pusha
pop
jmp
into
push
jno
cmp
push
mov
mov
jo,pn
loop
mov
loop
sbb
insb
mov
icebp
xchg
jb,pt
xchg
jg
ljmp
cld
adc
daa
mov
mulb
mov
inc
adc
xlat
int
xor
incl
fs
dec
mov
loope
das
in
pop
mov
dec
dec
xlat
cli
fsubrs
jmp
pop
push
lods
mov
jno
es
jmp
xor
decl
fistpll
pushf
pop
fildll
push
lret
pushf
or
fldcw
push
cmp
mov
adc
push
jnp
cmpb
push
fnsave
and
ja
pop
push
jno
push
mov
pop
pop
insl
ret
aad
std
sbb
jl
mov
adc
push
mov
sub
push
hlt
xor
out
xchg
adc
adc
xor
or
popf
add
mov
movsl
sbb
fidivrs
mov
jbe
pop
cmc
jns
dec
pop
or
push
sbb
and
pop
inc
and
push
inc
pop
call
sbb
xlat
lock
mov
and
cmp
mov
ret
cltd
or
push
stos
cmpsl
push
shlb
sbb
mov
sbb
popa
xchg
inc
pop
or
xor
mov
shlb
sti
pop
in
jno
in
cmp
outsb
ja
mov
add
enter
fistl
jb
mov
shlb
andl
fistl
dec
jnp
js,pt
push
mov
aas
pop
lea
push
outsl
imul
cltd
fstpt
sub
stc
cmp
inc
sub
or
sbb
lcall
outsl
stos
adc
push
pop
in
and
scas
and
mov
push
pop
cmp
insl
pop
cmpsl
dec
pushf
inc
enter
jecxz
shlb
dec
daa
cmpsb
inc
jo
ds
mov
or
dec
ss
sbb
and
daa
enter
sarl
mov
mov
fwait
icebp
test
inc
loopne
mulb
inc
jbe
inc
jle
inc
cmpsl
mov
dec
dec
out
test
sbb
jb,pt
xchg
adc
lret
je
add
mov
imul
fs
pop
cmp
mov
pop
fcmovnb
lret
cmpl
push
and
divb
pop
dec
fiaddl
aaa
sbb
std
sbbb
aas
xchg
cmp
aaa
pop
imul
stos
mov
imul
add
push
insb
test
call
divl
fiaddl
ss
pop
and
cmc
rclb
jge
or
jle
inc
addr16
inc
jnp
icebp
insb
lahf
insb
ja
mov
jge
mov
pop
test
aas
mov
cmp
jo
js
pop
sub
mov
pop
mov
jp
fsubrl
jo
loopne
jle
es
data16
push
cmp
jl
sbb
pop
push
pushf
jecxz
in
push
dec
ds
insb
sbb
add
mov
std
sarb
test
pop
mov
mov
or
add
pop
mov
xchg
and
pop
shll
hlt
add
adc
cld
and
aaa
or
and
pop
jl
cmp
sbb
add
push
fistpl
ret
sub
sub
jne
int
mov
or
jb
and
ss
cmpsb
dec
jge
mov
in
subl
cs
inc
xchg
cltd
xor
add
sbb
adc
je
mov
xchg
fidivs
loopne
and
xor
pop
or
mov
es
sbb
sti
pop
and
cli
imul
mov
add
xor
stos
cld
pop
inc
adc
cmp
mov
les
push
fmuls
insb
add
addr16
mov
push
jo
mov
xchg
sbb
xor
pop
repnz
sti
inc
test
cmpb
pop
adc
jg
sbb
lea
pop
cmp
cmpsb
fldcw
jne
fwait
cmp
pop
repnz
jnp
mov
or
repnz
sbb
cmp
cmp
xorl
in
sbb
push
xchg
jg
cmp
stc
movsl
xchg
jg
loop
and
mov
mov
loope
bnd
adc
sbb
lock
or
and
mov
add
fucom
lock
push
lods
jne
jnp
mov
mov
jne
sarl
cmp
jge
pop
insb
popa
xor
or
jne
jnp
mov
lock
or
and
xor
loopne
xchg
frstor
jns
add
push
lahf
mov
lods
jne
adc
repnz
stc
add
mov
xor
aam
mov
push
gs
pop
rcr
hlt
and
push
lahf
sbb
lock
add
pop
mov
stos
or
std
xchg
add
sub
fstl
mov
jl
mov
lock
mov
fwait
out
fyl2xp1
add
lea
repnz
jge
inc
mov
sbb
fdivp
cmp
push
loope
insb
fsubl
hlt
fidivrs
and
fsub
sub
push
clc
pop
test
jl
jle
push
repnz
add
sbb
sbb
ja
test
andb
addl
and
andb
testb
jne
imul
mov
and
xor
xchg
std
mov
or
cld
xchg
std
and
rcr
push
pushf
mov
jmp
jg
test
lock
add
cmp
jno
push
repz
rep
dec
jl
push
sub
adcl
adc
popf
xchg
pop
rorb
add
cltd
pop
cmpb
add
fistpl
test
loope
pop
pop
jg
lahf
in
sub
lea
icebp
cmpsb
inc
jno
lret
repz
dec
or
lea
adc
pushf
sbb
jl
rep
sbb
pop
push
lahf
pop
xchg
rep
push
mov
xchg
mov
lahf
repz
in
add
sbb
out
xor
gs
repz
sarl
je
cmp
mov
jecxz
jns
jg
ret
cwtl
push
loop
or
in
stc
jg
out
inc
pop
push
inc
or
mov
loope
and
push
sub
sbb
jmp
adc
xchg
into
mov
push
jle
and
in
xor
xchg
jbe
fbstp
mov
xlat
dec
sahf
roll
adc
daa
jp
add
dec
xchg
or
or
mov
pop
arpl
mov
mov
nop
out
xlat
or
mov
lahf
adc
leave
test
sub
jne
jnp
fisubrl
sbb
add
jnp
lahf
js
loope
lret
mov
mov
cmp
repz
sub
mov
hlt
daa
mov
daa
mov
cld
mov
ret
jno
insb
xor
lret
push
repz
fnsave
mov
out
mov
pop
mul
fimuls
in
pop
sub
lret
cltd
roll
insb
cld
xchg
mov
mov
test
cmp
push
sub
push
rcrb
pusha
call
mov
in
test
loope
adc
push
jne
popf
jbe
push
push
gs
add
xchg
mov
jo
push
mov
cmpsl
shlb
xor
shl
adc
mov
fiadds
pop
sub
push
or
lods
lea
std
ret
xorb
push
or
add
loop
scas
lret
sbb
pop
cmc
popf
test
xchg
jp
bound
pop
sbb
fcmovnb
jo
lret
push
stc
pop
xchg
insb
pop
rcrb
aad
int
insb
push
cmc
jge
adc
inc
jg
fs
xor
jl
cld
mov
mov
lods
and
sti
jle
fs
fnstcw
mov
cmp
fwait
add
pop
cli
mov
inc
mov
xorb
ficomps
mov
jecxz
inc
loope
mov
stos
test
mull
jl
add
push
mov
inc
mov
ds
mov
pusha
inc
jmp
loop
daa
mov
scas
out
pushf
xchg
insb
cltd
and
sbb
jge
loop
stos
mov
push
fbld
or
cs
mov
push
lock
inc
js
pop
fisttps
repz
sub
dec
repz
fdivrs
rcrb
pop
dec
addr16
push
pop
movsl
loope
cmp
arpl
std
or
addr16
lret
jb
add
insb
mov
incl
outsb
lret
mov
cwtl
inc
fstp
lock
inc
push
inc
pop
inc
jp
fcomip
fistpll
dec
xchg
inc
popa
shr
jge
cmp
and
sub
sub
dec
jnp
inc
arpl
jg
sub
push
xchg
push
fdivs
lret
pusha
dec
lea
sub
ret
shll
fsubrl
cmp
mov
fistpll
or
push
mov
mov
pushf
mov
mov
addb
jnp
push
jle
xor
xchg
dec
arpl
push
push
pop
pop
into
lret
inc
aad
out
jg
sub
ffreep
in
adc
les
pop
sbb
xchg
data16
mov
orb
insb
sti
lret
jge
jmp
lock
loope
lods
ja
ja
jno
xchg
and
pushf
push
mov
mov
pop
iret
fwait
inc
inc
and
jl
jne
dec
fnstsw
lcall
xchg
outsl
stos
push
adc
repz
in
fwait
pop
mov
out
xorl
push
add
push
sahf
sbb
sbb
push
ret
pop
add
fs
push
xor
ds
int
imul
imul
sbb
mov
push
sbb
loope
or
jg
dec
mov
mov
jb
pop
push
mov
stos
mov
sbb
mov
xchg
adc
in
lock
push
sbb
test
mov
les
sbbb
out
call
repz
mull
stc
loopne
insb
pop
shlb
or
jns
and
or
add
andb
frstor
insb
rcrl
jp
inc
adcl
push
push
in
add
jp
xchg
lahf
fldt
and
mov
rcr
test
mov
in
pop
aam
repz
push
push
push
pop
cmp
loope
enter
fwait
gs
jl
test
test
cmc
jl
mov
adc
inc
in
sbbl
dec
sbb
xchg
sub
xchg
sbb
push
xchg
cwtl
ds
in
ja
aad
mov
cmp
stc
loope
mov
sbb
xchg
mov
cli
push
adc
fldt
mov
pop
mov
xor
out
mov
pop
cmp
cs
imul
sbb
lcall
cltd
popf
das
adc
inc
mov
fldl
stos
in
inc
cmova
cli
add
js
pop
pusha
fldcw
xchg
dec
mov
test
call
inc
mov
mov
addr16
lods
mov
pushf
xchg
mov
jle
pop
in
cs
and
pop
jno
mov
mov
pop
jne
in
and
inc
popf
sbb
push
jecxz
shrl
sbb
xchg
lea
popf
mov
mov
pop
ds
jmp
cmp
mov
ds
ss
sub
xor
xor
roll
jne
imul
cmpsb
adcl
inc
xchg
dec
mov
push
xchg
jmp
out
adc
popa
adc
into
sbb
shrl
fstpt
xchg
repz
pop
mov
push
push
pop
and
test
pop
cwtl
out
mov
add
adc
inc
mov
in
ja
adc
dec
imul
jl
mov
cmpsl
in
inc
xlat
daa
and
jl
std
push
mov
rcrl
lea
jg
loop
inc
lea
jnp
insl
jmp
lock
pop
fnstsw
loope
cmpsl
fiaddl
testb
add
fsubp
add
xchg
sub
cmp
xchg
addb
inc
adc
xchg
and
shrb
mov
cmc
push
sub
cmp
fsts
mov
cmp
cmpsl
mov
add
sub
sub
sbb
shrb
or
insl
and
fisubrl
cmp
xchg
push
lcall
lret
pop
push
jg
mov
loopne
in
int
adc
xor
ds
push
xorb
cli
loope
mov
cmpsl
push
popa
pop
dec
sbb
inc
add
xchg
cmp
pop
mov
inc
es
cwtl
dec
and
jae
jnp
xchg
outsl
cmp
mov
cmp
ss
xchg
inc
in
add
setae
push
sarb
xchg
in
jns
test
mov
movsl
sub
xchg
lock
cmp
lret
rorb
push
mov
fldcw
repz
xor
or
sbb
sbb
sbb
pop
pop
jecxz
icebp
push
push
or
xchg
adc
in
pop
jbe
int
and
push
jbe
mov
aam
mov
xorb
xchg
sbb
call
subl
sti
dec
idivl
int
jo
dec
iret
js
xor
movsb
cmc
add
sbb
jnp
lea
xor
outsl
push
add
push
das
xchg
repz
jg
lods
jae
imul
and
fstpl
loop
dec
ficoms
jg
inc
xor
xchg
sub
dec
lcall
mov
and
sub
sbb
cmc
jl
insl
mov
adc
imul
mov
stos
or
sahf
cltd
test
loop
inc
inc
push
add
dec
lcall
jp
cld
mov
ret
std
ja
insl
std
mov
jle
int
push
sbbb
push
sbb
mov
push
mov
push
cmp
jg
aad
jge
push
in
xor
cmpsb
andb
imul
mov
mov
into
dec
and
xchg
aaa
fsubrs
fstps
push
jb
int
insb
popa
aaa
icebp
or
test
jg
pop
lods
xchg
push
jae
out
inc
cltd
movl
mov
out
mov
xchg
push
mov
fstpl
jl
pusha
test
daa
rcll
repnz
fnsave
cmc
mov
mov
mov
cmp
sbb
dec
xchg
push
iret
ror
mov
pop
inc
jle
dec
dec
add
add
cmp
push
cmp
mov
lahf
scas
cli
dec
repz
cmp
jae
mov
test
insb
sbb
push
cs
inc
rorb
jl
jno
mov
in
or
test
inc
insb
pop
inc
mov
fldl
loope
add
scas
cmpsb
xlat
mov
xchg
adc
cmc
add
loop
insl
xchg
cs
inc
add
loopne
xorl
dec
and
movsl
fdivrl
sub
sahf
sub
xor
dec
sub
bnd
ds
ss
or
xchg
or
and
pop
xchg
fdivp
cmp
and
xchg
and
sbb
dec
cld
push
fnsave
mov
push
bound
insl
aam
test
out
cmp
jne
inc
jnp
mov
aad
mov
xor
sti
ret
sub
mov
pop
insl
jo
dec
mov
sbb
pop
rcrb
jle
in
inc
outsb
andl
jge
and
fnstcw
pop
mov
aas
stos
mov
cmc
add
push
sti
icebp
repz
jle
and
adc
inc
sbb
std
jb
xorl
addb
mov
popf
jle
sub
int3
jnp
cmp
adc
xchg
in
mov
xor
nop
sbb
pop
imul
jo
xlat
push
xor
test
sbb
xchg
inc
jl
das
lcall
sub
mov
mov
cmp
jo
ret
xchg
inc
jbe
ja
cs
mov
sbb
pop
popa
xlat
cs
xchg
mov
sbb
in
push
push
and
dec
fistpll
repz
fiaddl
push
and
sbb
inc
jno
push
cmp
int3
bnd
icebp
mov
lahf
or
jne
mov
xchg
jmp
jle
sbb
inc
leave
jle
push
enter
roll
xor
inc
cwtl
fimuls
cltd
pop
movsl
fidivs
inc
aas
int
sbb
dec
int
jg
ss
pop
pop
adc
loopne
xchg
adc
repz
pop
mov
sti
or
rcrb
aas
fldl
insb
xlat
xor
fcomp
pop
lock
and
push
xor
test
stos
mov
fnsave
xchg
dec
push
test
jge
test
and
cli
jnp
xor
lea
add
xchg
dec
popf
jb
xchg
sahf
stos
adc
aaa
out
mov
addb
les
cltd
pop
jae
loopne
daa
test
adc
das
jle
clc
mov
push
std
add
shr
mov
shl
aaa
push
sbb
popa
jae
and
int
faddp
shlb
scas
cmpsl
fnstsw
push
aas
or
cmp
pop
xor
pop
jge
out
call
insl
cltd
cmpsb
xchg
inc
mov
push
test
sub
cmc
or
or
jne
fwait
mov
xorl
jae
pop
fildl
gs
xchg
cwtl
and
mov
sub
in
lock
clc
into
or
pop
pop
sbb
fwait
aam
xlat
pop
fst
pop
movsb
xor
mov
insb
fcomps
mov
dec
sub
loop
lods
sub
inc
push
fdivr
xchg
jb
movsb
cs
jp
pop
jbe
cwtl
sar
mov
fcompl
fwait
aam
xchg
jne
xor
lea
outsb
push
int3
xor
or
jg
mulb
pop
inc
repz
out
call
cmpsl
stos
lahf
jmp
fisttpll
arpl
int
js
pop
mov
inc
ficomps
inc
stos
aad
mov
mov
jbe
jae
cmp
push
jle
test
cwtl
std
pop
pushf
mov
lcall
adc
lods
or
or
shr
mov
loopne
inc
adc
xor
popf
les
sahf
push
adc
ljmp
js
mov
push
sbb
jns
enter
mov
xchg
pop
xchg
sub
and
in
ds
xchg
sbb
sbb
stc
push
loopne
and
cmp
ret
rorl
dec
pop
fcom
pop
jo
outsb
dec
jmp
or
push
push
bound
jle
jnp
add
push
fstps
dec
rcrl
push
dec
iret
mov
ret
mov
in
mov
cld
loope
and
jnp
hlt
push
push
jg
test
jne
loope
and
pop
adc
sahf
push
mov
pop
or
adc
lret
xorb
xchg
mov
mov
fnstcw
or
lret
xor
push
mov
loope
scas
and
adc
aam
add
mov
cmp
aam
test
jns
mov
ficoms
xchg
insb
cltd
dec
repz
fucomi
xorl
mov
in
jp
rcrb
add
loop
mov
mov
jno
data16
add
add
shll
mov
pop
xchg
inc
mov
adc
push
jns
push
push
rcr
add
sahf
std
push
lods
push
arpl
mov
cltd
call
push
std
mov
push
inc
shrl
out
and
cmpsl
fisttpl
cs
fwait
add
decb
mov
mov
mov
mov
aad
sbb
and
pop
cmp
sbb
lea
int3
loope
mov
xor
lods
mov
adc
stc
outsl
dec
add
jb
dec
outsb
divl
cmpsl
mov
cltd
inc
cwtl
mov
sbb
repnz
mov
pop
pushf
xchg
js
lods
xor
test
js
shl
jnp
out
lcall
icebp
xor
mov
pop
pop
stos
aam
sub
jbe
pop
xchg
daa
push
jmp
mov
sbb
sti
cmp
lret
test
and
pop
test
cld
in
mov
je
in
cmp
cld
in
mov
cmp
outsb
pop
push
lret
dec
test
sbb
idivl
idivb
in
popf
pop
enter
sti
cmp
push
imul
rcrl
clc
jb
outsb
mov
pop
shlb
insl
leave
push
loope
jg
xor
rol
inc
cmc
jg
mov
into
in
cmc
or
pop
or
flds
pusha
test
push
jb
aam
xchg
sub
and
push
jb
out
scas
mov
adc
push
int
pop
adc
imul
shll
jge
push
inc
call
push
jmp
jne
dec
lret
mov
or
inc
outsb
cmp
loop
ss
ds
add
jl
pop
sbb
xor
loop
or
pushf
xlat
or
ljmp
mov
jmp
jo
es
lret
jg
pop
xor
sub
cmpsl
mov
ds
leave
dec
negb
push
fstpt
insb
cmp
xor
popf
and
xor
popa
xchg
add
xchg
loop
sub
sbb
cwtl
inc
leave
aaa
aam
mov
inc
int
inc
xchg
cmpsb
cmp
sbbb
test
inc
cmp
repz
in
fnstenv
sbb
ljmp
add
cmovb
notl
test
and
ss
inc
fnsave
ss
insl
pushf
push
fistl
pop
cmp
inc
push
ss
inc
mov
popf
fisttpl
mov
push
je
in
xor
lcall
outsb
push
push
inc
cltd
inc
adc
lea
out
je
xlat
int
or
jno
aad
rcrb
adc
push
int
fsubrl
inc
popf
jmp
adc
loop
jnp
sbb
add
mov
or
dec
or
or
fisubs
ds
cmc
dec
lcall
add
int
dec
mov
push
lea
and
hlt
and
rcll
push
push
jge
int3
push
lea
add
ficoms
and
inc
fstpl
or
add
in
ljmp
in
adc
push
jl
mov
xchg
sahf
cwtl
mov
add
pusha
in
xor
stos
and
and
popf
mov
jo
jle
sub
sbb
outsb
shll
out
pop
sub
ffree
test
pop
jmp
cs
cmp
in
adc
sub
ss
test
repz
sti
outsb
mov
jb
fistl
lret
sbb
add
mov
repz
adc
sub
pop
scas
les
popf
loope
shr
xor
sub
mov
xchg
imul
jo
out
repnz
sahf
outsb
push
pop
xchg
and
pop
xor
andl
subb
jns
or
pop
jg
jmp
mov
mov
inc
scas
les
mov
jl
mov
scas
jge
lahf
xor
stos
pop
cmp
lods
std
jbe
jp
cwtl
loop
cwtl
lock
mov
lcall
test
popa
inc
inc
sub
in
pusha
xorl
pop
cmpsb
inc
jg
leave
cmp
adc
pop
add
pop
hlt
repz
push
cld
loopne
mov
or
imul
jge
imul
push
mov
pop
push
xchg
cs
dec
cmp
ds
push
lea
mov
popa
cmp
mov
sbb
sbb
ret
cmp
cmp
lods
pop
mov
and
lret
sahf
and
mov
mov
push
mov
and
xchg
fistl
cltd
inc
xchg
arpl
das
add
xchg
cmpsb
pop
in
dec
test
adc
jbe
jnp
cmp
inc
lcall
repz
outsl
xchg
lea
out
shl
movsb
inc
and
mov
sbb
repnz
mov
jle
in
dec
mov
sti
inc
rcrb
test
icebp
notl
jno
mov
jle
fwait
les
addb
sub
and
jmp
dec
aam
loop
std
mov
shl
inc
dec
adc
cmc
test
sbb
cmc
mov
gs
inc
test
adc
pop
add
dec
insl
jbe
fisttpll
out
and
fstpl
add
test
pop
fbstp
mov
and
adcb
bound
loope
and
mov
ds
cmpb
daa
push
push
xchg
jb
bound
mov
sbb
adc
rcr
pop
shlb
bnd
cs
or
ja
xchg
add
and
fidivs
jl
std
cmp
pop
xchg
les
mov
cs
in
inc
lretw
in
and
in
repz
jg
jmp
bound
in
pushf
adc
sbb
sub
xor
cmp
decl
in
in
cltd
xorl
in
cltd
push
cmp
in
popf
lcall
decl
inc
hlt
sbb
ret
fwait
in
shrb
out
mov
adc
fsubp
ja
mov
stos
lret
ficomps
ret
push
sub
inc
jnp
jnp
and
and
in
xchg
inc
and
xor
pop
pop
mov
loopne
jle
mov
pop
mov
add
std
cmp
frstor
dec
sub
scas
cs
orb
in
jbe
fildl
inc
and
fwait
adcb
or
sbbb
aad
scas
aad
dec
cmp
sbb
mov
cmp
popa
jne
inc
andb
sbb
dec
inc
lahf
xor
xor
sbbl
repz
inc
lcall
mov
call
pop
inc
scas
push
adc
rcl
mov
inc
das
add
stos
mov
cwtl
sbb
or
outsl
push
xor
mov
cli
inc
int
jo
bound
loop
xor
loope
fwait
or
jmp
pop
outsl
mov
lods
inc
sbb
jnp
std
xchg
out
mov
flds
jb
jae
cmp
pop
shl
cmpb
fistpl
rclb
cmpsl
cmovg
mov
je
clc
jge
cmp
int
xor
stos
repz
lods
or
sbb
out
mov
mov
frstor
push
xchg
cmp
inc
loop
jg
out
add
adc
xchg
jl
fwait
in
add
data16
mov
pusha
jo
xchg
insb
pop
xor
adc
and
mov
adc
jns
mov
jns
mov
push
adc
mov
add
mov
push
repz
stos
jge
fildl
cmp
jmp
mov
mov
cld
les
jle
aam
or
cld
xchg
push
xchg
xchg
ret
aaa
push
lock
ljmp
cmp
inc
jnp
test
pop
lods
sbb
popf
ds
sub
push
loope
ja
mov
fisubs
popf
mov
sbbb
repz
subb
jbe
mov
add
inc
sbb
sub
jecxz
lods
xor
add
adc
mov
push
inc
sub
dec
push
or
sbbl
push
icebp
das
xchg
stos
shll
popf
js
mov
lahf
push
pusha
fcompl
cmp
in
sbb
repz
shlb
lahf
icebp
fdiv
test
shrl
repz
xchg
jb
pop
lret
adc
xor
ficompl
cmp
adc
loope
jb
dec
shld
mov
xor
inc
mov
popf
pop
hlt
push
pop
bound
js
mov
in
jne
in
add
cmp
shlb
pop
pop
in
js
stc
sbb
cmp
cmc
insl
repz
sub
adc
andb
mov
stc
cmc
ss
xchg
out
add
aaa
and
inc
in
dec
xchg
jae
xchg
mov
sahf
xor
inc
lds
mov
popa
and
pushf
push
fisubrs
mov
pop
idivl
sub
xor
lahf
mov
std
xchg
inc
cmc
ffreep
notb
xlat
cmpb
fstps
sbb
cmp
inc
jno
pop
lea
aad
loop
leave
sbb
lea
loope
or
add
rep
repz
pop
and
mov
bound
popa
adc
and
sbb
jl
pop
enter
nop
adc
dec
dec
stos
ljmp
scas
pop
jno
cmpsl
and
loopne
mov
int3
fsubl
and
and
dec
in
jp
mov
sub
inc
cs
sub
and
push
pop
pop
das
add
inc
mov
or
push
pop
andl
dec
lock
push
sti
in
jl
cld
jge,pt
jl
pop
in
mov
push
add
andb
jmp
bound
sub
call
lret
in
lods
jo
fsubl
addr16
mov
push
mov
outsb
out
adcl
or
push
sub
and
jmp
das
adc
cmp
cmpsl
sub
mov
jmp
addl
cmp
insl
jl
faddl
pop
mov
mov
cld
repz
push
nop
and
cmp
sbb
mov
sub
mov
jecxz
aad
mov
in
mov
pop
subb
into
out
sbb
sti
std
mov
push
aad
sti
scas
imul
push
repnz
jecxz
repz
ret
inc
jbe
movsl
xchg
es
das
mov
xchg
adc
in
cmp
adcl
dec
cmp
fidivrs
test
frstpm(287
jp
fsts
cmp
add
mov
or
inc
push
bound
stos
fucomi
sbb
or
and
fucomi
scas
lods
or
push
jecxz
pop
sbb
fcomps
loopne
pop
lcall
push
in
mov
jle
repz
stos
xchg
inc
mov
addr16
inc
mov
and
pop
out
out
sbb
mov
jae
jbe
pop
or
pop
xor
jl
sub
lods
ss
cmp
pop
subl
pusha
sbb
pop
mov
sub
jns
sbb
sub
aas
subl
mov
xor
fiadds
cmc
inc
loope
loope
insl
jge
pop
mull
xor
cmp
in
or
pusha
sub
pop
xor
jecxz
pop
sbb
ss
dec
xchg
icebp
mov
push
mov
inc
fstpt
inc
ss
and
sbb
xor
imull
popf
xchg
add
aam
lahf
jnp
pushf
adc
aad
dec
lahf
jle
js
sbb
lock
pop
add
jg
cltd
invd
cltd
cmpsb
mov
cmp
rclb
push
inc
jmp
and
push
out
fildl
push
into
loopne
pop
stc
jecxz
dec
add
andb
roll
rep
xlat
cmp
outsl
outsl
fadds
dec
and
jno
add
popf
clc
or
popa
enter
push
cld
divl
jmp
out
cmp
rol
ds
push
es
mov
push
cld
scas
sbb
fnsave
jne
mov
dec
mov
test
js
dec
cmpsb
loopnew
andb
test
stc
xchg
pop
movsl
test
mov
inc
xor
stos
aaa
nop
jmp
lret
jno
or
test
push
sbbb
jo
inc
in
cld
xor
cmp
inc
push
movsl
sub
enter
pop
jnp
mov
push
dec
in
xor
mov
mov
add
or
adc
mov
ds
aas
out
sahf
push
movsl
sbb
jo
movsb
test
addr16
adc
adc
jae
popa
fildll
insb
orb
cmpsb
mov
inc
xor
or
pop
pop
add
roll
mov
dec
loopne
sbbb
je
sub
mov
pop
mov
xor
fcompl
stc
push
rclb
push
sbb
xchg
or
ficoms
cli
loope
jecxz
push
dec
and
xchg
inc
push
lahf
shr
je
ds
out
cmp
cmp
subb
aam
xchg
cmp
jns
jl
lock
and
add
shl
insl
push
adc
jo
lods
fdivl
mov
lahf
jae
cmp
in
mov
jbe
lret
call
push
pop
je
pusha
aaa
xchg
das
pop
in
inc
rolb
pop
adc
xchg
addr16
mov
mov
xchg
push
cmp
push
incl
pushf
daa
cmc
sub
rcll
leave
icebp
adc
mov
pop
xor
cmp
xorl
xchg
push
bound
dec
loopne
in
stos
fistl
addr16
popa
sbb
xor
int3
rcrb
pop
dec
outsb
pop
xchg
fistl
xor
push
cltd
sbb
test
ficomps
dec
aad
icebp
les
lcall
add
xchg
out
mov
jl
xchg
or
mov
fsubrs
lret
cmc
sbb
pop
sbb
lods
or
xor
xor
fists
pushf
push
mov
les
xor
inc
jl
sub
icebp
and
mov
or
adc
cld
xor
mov
stos
jmp
rcl
lods
pop
cs
int3
aad
in
lods
pop
inc
add
add
sbb
lahf
call
popf
or
push
add
mov
adc
and
push
xchg
xor
call
inc
mov
inc
ret
push
scas
cmpsb
test
jbe
sbb
push
mov
push
pop
and
ja
testb
jb
adc
xchg
aad
repz
scas
cmpb
icebp
mov
or
mov
cmc
daa
shll
sub
inc
mov
push
adc
mov
shl
imul
sub
fmull
mov
addr16
bound
or
nop
repz
jnp
mov
jbe
aas
and
stc
mov
dec
je
cmp
push
in
adc
jg
sbb
push
cmp
sar
mov
stc
scas
rcll
xchg
loop
aas
testb
sbb
test
in
cs
loop
fsubr
push
sahf
loopne
fucom
ss
fwait
jl
jne
jbe
pop
sti
xchg
adcl
jge
scas
mov
aad
jle
xor
mov
andl
in
aad
cmp
or
ds
scas
jl
in
pushl
test
jne
loope
and
jnp
in
add
test
jne
loope
and
jnp
in
add
test
jne
loope
and
jnp
in
add
test
jne
loope
and
in
jge
std
jle,pt
ret
and
fiadds
fstpl
fldenv
or
pop
sub
push
js
lods
xor
mov
aam
xchg
and
ret
fnsave
mov
xor
insl
jmp
ss
cmc
inc
leave
mov
andl
js
es
push
cmp
rcrb
or
std
jns
jl
jge
push
movsb
xchg
jnp
pop
dec
pop
push
fiadds
mov
lods
divl
in
in
cltd
jle
mov
pop
xor
cmp
outsl
stc
push
xchg
sbb
fldenv
mov
mov
aaa
out
cld
movsl
test
jmp
in
pop
and
fcompl
je
outsl
dec
fadd
shl
repz
add
xchg
ljmp
xchg
jp
aaa
push
outsb
jmp
sub
mov
mov
mov
sbb
mov
cmp
mov
xor
rcrl
pop
outsl
add
jne
mov
mov
std
xchg
push
mov
xchg
mov
mov
mov
loop
add
cmc
sbb
inc
inc
push
cltd
cmp
cmp
push
dec
adc
sbb
xchg
loope
fstpl
mov
cs
cltd
mov
and
jle
mulb
ds
pop
adc
and
pop
frndint
cmp
mov
inc
pop
repz
mov
jmp
jl
xchg
cltd
rep
in
xchg
lahf
out
xor
mov
movups
outsb
iret
push
ja
or
test
je
sub
jle
out
pop
add
ss
or
test
sbb
add
sarb
movb
fcomi
cmc
loopne
dec
std
xorl
and
xchg
add
insb
shl
mov
lds
cli
pushf
int
insb
orb
bound
cmp
andb
in
test
jp
jge
sti
ret
jnp
sti
xchg
jmp
jb
sahf
push
loop
lcall
hlt
bound
test
loope
add
popa
popf
addl
loopne
add
test
cmc
pusha
and
hlt
fistps
push
sub
pop
push
jo
imulb
mov
jge
cld
popf
jl
jmp
in
jge
insl
push
cmp
subb
lcall
jmp
mov
ret
inc
mov
hlt
out
movsl
adc
pop
scas
fwait
sbb
movsl
lcall
popf
add
ret
and
hlt
loope
add
mov
and
hlt
loopne
add
mov
and
hlt
fistps
push
sarl
clc
adc
mov
in
and
cmpb
mov
in
rorl
mov
jo
adc
sbb
jo
scas
mov
loope
nop
jecxz
cmp
lods
jg
push
call
lock
cmp
push
fiaddl
pop
cmp
add
lds
push
mov
fldcw
mov
aas
push
pcmpgtw
jp
outsb
add
and
sbb
push
fwait
mov
ds
xor
add
cmpsb
arpl
inc
push
sub
push
lret
test
dec
lret
sub
mov
jl
inc
sub
mov
dec
pop
cltd
movb
in
fcompl
movsl
mov
repnz
fwait
mov
and
sbbb
sti
lods
mov
push
dec
jns
add
inc
sub
aad
loopne
fcmovu
add
int
jge
or
mov
sub
jl
pop
inc
loop
arpl
jns
fs
shl
dec
inc
scas
and
sarb
imul
mov
fs
dec
pop
add
jg
dec
pushf
dec
jle
hlt
mov
push
pop
mov
dec
popa
and
bound
shlb
shll
mov
jmp
pop
mov
jb
and
xor
shlb
xor
mov
es
mov
enter
push
dec
out
push
out
pop
push
leave
push
pop
test
popf
pop
mov
xor
mov
or
push
sub
pop
add
dec
shll
lcall
sub
cld
call
ret
pop
push
sub
cltd
xrelease
fnstsw
add
jns
jg
xchg
cmp
stos
push
adc
fidivrs
jns
xchg
js
insl
push
sub
jns
cmp
pop
adc
fidivl
out
in
mov
pop
xchg
xor
jge
mov
pop
mov
ret
fnstcw
and
sbb
pop
in
xor
xor
js
pop
mov
mov
xchg
jge
sti
outsb
jmp
cmc
xchg
and
fistpl
and
in
inc
repz
xchg
pop
push
push
and
inc
push
loopne
insb
xor
dec
sarb
bound
xchg
ja
jb
shl
mov
pop
xchg
xor
out
mov
aas
pop
dec
clc
dec
fnstsw
xchg
int3
pop
or
bound
pop
data16
sbb
inc
mov
aas
arpl
mov
cmp
pop
std
out
and
in
or
cmc
out
loopne
or
sar
add
out
loopne
ds
xor
shll
cmpb
mov
sbb
xchg
jle
jge
stc
outsl
les
int3
scas
call
inc
xlat
std
sbb
mov
and
movsl
fwait
mov
jno
mov
lcall
add
push
sbb
xor
mov
stc
pop
mov
shlb
je
mov
or
mov
repz
sbb
mov
dec
aaa
sub
push
es
cmpb
fdivrp
adc
inc
mov
outsb
add
jns
icebp
movsl
and
jae
push
int
jp
insb
xor
jge
sahf
fsubs
stc
sub
out
pop
pop
idivl
mov
mov
fisubs
cmp
sub
call
jnp
lcall
data16
test
mov
ljmp
and
sbb
push
lock
add
pop
push
pop
mov
mov
pop
push
nop
neg
fnstcw
pop
sbbb
cli
inc
xchg
outsl
inc
pop
and
pop
movsl
mov
mov
pusha
mov
and
jne
jl
scas
xchg
or
decb
add
fs
pop
stc
add
lahf
sbbb
or
adcb
sbb
dec
adc
lcall
jb
jle
outsl
clc
shll
inc
ret
xchg
sbb
xchg
fwait
jg
xor
push
mov
and
lret
in
fimull
inc
jae
fisttps
js
lods
sarb
adcb
fsubl
pop
cmp
shlb
fs
mov
mov
stos
jnp
outsb
or
nop
aad
scas
dec
xor
jge
jle
mov
sub
adc
pop
outsl
out
movsl
jmp
ror
cmp
out
mov
adc
daa
lds
sbb
dec
xchg
mov
ds
dec
addr16
or
out
lea
mov
insb
repz
sub
out
adc
adc
sub
and
mov
negl
in
lcall
push
je
pop
push
pop
ret
jne
add
jg
pop
push
outsl
mov
jno
adc
sub
mov
into
push
in
out
push
mov
in
aas
adc
stos
push
jmp
repz
nop
fstl
sub
js
sbb
inc
roll
das
and
popf
daa
jge
add
out
int3
jl
jmp
push
inc
movsb
data16
incb
pop
mov
ret
mov
andl
andb
gs
pop
dec
repz
jb
add
dec
sbb
fisttpl
and
xchg
jmp
adc
pushf
xchg
cmp
les
ljmp
xchg
xlat
lods
mov
push
mov
jmp
pop
repnz
movb
or
jno
arpl
add
es
popf
mov
xchg
fmull
sbb
bound
jge
sub
dec
jae
xchg
jl
rcrl
mov
mov
jne
clc
mov
xor
jnp
loope
jo
pushf
xchg
icebp
repnz
and
inc
lahf
fisttpll
sub
push
and
es
mov
call
xchg
mov
fstpl
rcr
mov
rcr
add
mov
std
mov
push
fldenv
and
xorb
sbb
inc
leave
inc
sahf
dec
add
jg
cmp
cmp
add
mov
pop
str
ret
cs
aas
and
pop
pusha
mov
data16
jmp
in
ljmp
pop
and
fistpll
or
andl
aas
add
daa
pushf
xchg
mov
call
cld
inc
jl
mov
aad
pop
pusha
sub
sti
pop
rcrb
data16
pushf
aam
aam
pop
pop
pop
icebp
push
sub
movsl
pop
jnp
sub
mov
inc
sub
inc
rcrb
jne
es
and
jg
mov
sbb
testb
xchg
addr16
jae
inc
test
test
loope
out
decl
lahf
sub
jge
xor
inc
out
shr
push
cmp
cmp
ss
and
mov
adc
dec
mov
fsubrs
fneni(8087
hlt
mov
inc
jge
mov
pop
fnstcw
fisttps
stos
pusha
fs
loope
enter
jnp
ljmp
cmc
pop
jne
incl
addb
mov
xchg
jl
fs
sub
cmpsl
jle
outsb
orb
and
movsl
add
jle
add
cmp
push
jecxz
cwtl
addr16
cmpb
jmp
pop
sub
or
and
xor
jecxz
cmp
jmp
shrb
insl
js
ror
mov
jge
stos
call
in
sbb
adc
add
or
sahf
adc
ss
mov
sbb
subb
lea
inc
jge
cmp
clc
sbb
cmp
lret
sahf
stos
inc
mov
call
pop
push
pop
add
xor
in
or
mov
push
imul
mov
call
loopne
outsl
ret
push
adc
inc
mov
out
fistpl
xchg
adc
cmp
add
pop
dec
fsts
rol
repz
fisttpll
and
outsl
dec
jecxz
sbb
fucom
lahf
cmp
adc
inc
mov
add
adc
arpl
jmp
inc
popf
subb
movb
dec
adc
outsb
mov
push
dec
mov
loope
inc
cs
jo
push
adc
inc
sbb
jo
add
push
pop
test
movsl
fildl
enter
into
rorl
xchg
inc
or
pushf
jle
cwtl
mov
fnstenv
cmp
pop
insl
fistps
xchg
push
mov
arpl
rcrl
adc
dec
scas
icebp
adc
jg
jg
mov
ss
sub
rclb
add
sub
cmp
mov
push
jb
mov
je
les
movsl
xchg
pushf
ret
data16
pushf
mov
ss
repnz
dec
stos
ret
gs
pop
imul
ret
fucom
imul
sub
or
pop
lret
sub
jle
test
sbb
les
es
imul
addr16
into
mov
subl
ret
add
lcall
push
outsb
add
push
jg
mov
cmp
cmp
push
repz
lahf
mov
ret
pop
mov
xchg
jp
push
mov
inc
xor
sar
pop
outsb
xchg
cmp
mov
sub
loopne
stos
mov
aad
push
dec
andb
not
and
inc
pop
mov
ja
mov
test
and
inc
and
xchg
sub
cwtl
js
inc
popa
adc
sbb
mov
adc
rclb
gs
leave
jbe
das
mov
push
sub
fldt
jg
push
adc
mov
ret
subb
sub
ds
pop
and
cmp
xchg
insb
mov
push
xchg
movsl
jnp
lods
gs
mov
and
mov
push
in
or
jecxz
sarl
mov
jp
jp
ret
add
xchg
insb
addr16
or
shrl
sbb
into
inc
dec
add
inc
ljmp
cmp
rcrl
mov
mov
test
add
fdivr
mov
xor
mov
jp
sub
sbb
push
iret
ja
idiv
sub
out
pusha
movsl
cmp
es
sub
sub
ret
inc
pop
mov
lods
adc
fimull
xchg
and
add
sub
fildl
xchg
insb
dec
pop
rclb
sbb
pop
sbb
das
inc
icebp
outsb
fildl
cld
insb
loop
inc
sarb
sub
ret
pop
pop
jnp
cld
test
imul
sub
push
and
add
hlt
iret
es
jns
add
lock
mov
pop
sub
std
fs
out
sub
or
icebp
ja
mov
loope
mov
jecxz
fnstsw
loop
mov
or
xchg
cmp
xlat
inc
icebp
in
stos
and
int3
ret
pop
stos
or
adcb
pop
scas
aam
pop
mov
sub
add
int3
cmp
gs
mov
sbb
imul
rol
dec
or
xchg
repnz
adc
iret
out
fimull
pop
sub
xchg
mov
fsubp
int
push
push
jne
and
and
dec
int3
cmpsl
dec
imul
mov
add
push
sub
outsl
adc
lcall
sub
pop
add
fldl
mov
jne
pop
sahf
inc
sub
cwtl
dec
pop
xchg
loop
test
jle
int3
and
mov
fnstsw
mov
int3
test
sbb
mov
push
or
jge
push
loope
mov
push
cmp
fcompl
sub
jg
or
clc
lods
xor
aaa
jg
ss
nop
jg
sbb
or
cmp
xchg
std
iret
int3
jb
mov
ja
add
xor
sub
fwait
pop
mov
cmp
cmp
mov
adc
sub
jne
bnd
jg
in
jne
xchg
in
add
clc
jno
cltd
sub
mov
fcmovnb
pushf
test
adc
inc
sub
js
mov
push
push
or
inc
sub
pusha
int3
dec
mov
int3
dec
in
jge
std
xchg
sub
inc
test
sbb
cld
insb
mov
pop
test
loop
leave
fnstenv
dec
sbb
repnz
inc
test
int3
xor
shl
lea
div
cmp
jecxz
enter
int3
adcb
lods
pop
out
cli
aad
std
jne
loop
xlat
sbb
cli
in
push
rcrb
sub
pop
inc
rcrl
adc
js
mov
inc
adc
repnz
scas
pushf
push
lods
xor
decb
icebp
pop
js
xlat
sbb
xorb
lds
sub
sub
test
push
insl
pop
push
idivl
movsl
imul
jg
int3
jecxz
xor
push
jno
cltd
sub
sbb
es
inc
jae
jle
mov
stos
lret
les
add
cmovl
jno
movsl
jnp
in
add
jne
pop
popa
inc
sub
out
in
ficoml
ja
push
pop
sub
icebp
sahf
lods
repnz
out
sbb
mov
cld
cmp
jns
nop
js,pn
dec
dec
cmc
js
in
inc
xchg
int3
xor
or
xor
mov
jne
pop
pop
imul
es
xor
ss
cmpsl
jno
and
add
jne
mov
mov
loop
rcrl
sbb
rcrb
sub
push
sbb
testl
and
faddl
xor
sti
sbb
lahf
pop
mov
sbb
rcr
shrb
sbb
das
inc
sbb
pop
xorb
jno
cltd
sub
cmpsb
int3
cmp
gs
popa
jne
sarl
cs
mov
enter
dec
dec
sub
sub
out
xor
pushf
jne
jg
xor
jns
test
or
int3
jle
pop
scas
mov
ret
loope
mov
sub
sub
out
inc
sbb
and
adc
sub
sbb
gs
lds
sub
test
test
push
add
mov
add
mulb
ss
jb
and
push
loope
sarb
push
fsubrl
sub
js
jno
pop
mov
push
orb
mov
testb
cld
insb
pop
aas
cmp
addb
jb
notl
ljmp
add
mov
lahf
add
mov
imul
pop
add
mov
or
xor
sub
loope
mov
arpl
jl
int3
and
sbb
inc
dec
sub
fstpl
sub
mov
mov
inc
push
fnsave
out
cmp
sub
or
push
lds
fwait
int3
and
mov
mov
pop
cli
sub
iret
mov
cltd
jno,pn
movsl
adc
sub
pop
and
lock
pop
dec
jle
in
sbb
fwait
pop
int3
mov
outsl
mov
push
xor
int3
add
pop
mov
es
lods
mov
xchg
and
je
xchg
inc
lods
cli
sbb
sub
jae
jae
sub
ret
pop
imul
inc
pop
sbb
sbb
cmp
lahf
jns
sbb
mov
xor
inc
add
negl
inc
clc
enter
out
test
lahf
sahf
pop
test
sub
push
mov
mov
push
mov
int
sbb
sub
add
jo
cmp
fstpl
sub
mov
or
rolb
push
in
in
aam
xchg
cltd
movsl
mov
aas
sub
inc
sbb
pop
push
js
roll
sbb
insb
fimuls
aad
add
mov
sub
xor
lock
movsl
rcrb
dec
pop
mov
sub
loope
pop
test
ret
nop
repnz
sbb
sbb
mov
enter
sbb
jmp
out
sbb
sub
sbb
daa
inc
add
mov
cli
lods
cli
test
int
xor
cmpsb
pop
pop
jg
shll
mov
inc
cltd
sub
iret
shl
loop
cmc
inc
lods
cmp
shl
push
rcr
pop
or
idivb
pop
shr
sub
dec
inc
cmc
push
adc
pop
sbb
cmp
jg
int3
xor
sub
or
mov
jg
in
sub
lret
pop
imul
adc
add
sub
inc
pop
enter
insb
sbb
push
inc
jp
pop
das
mov
sbb
cmp
sub
out
icebp
jle
jno
outsb
mov
pop
cmp
push
test
aad
sbb
add
add
lock
push
pop
sub
jo
lcall
insb
adc
sub
pop
xchg
fmull
imul
xor
popa
mov
mov
mov
cs
xor
ja
jno
std
cwtl
imul
jo
pop
inc
ss
xchg
inc
add
pusha
movsl
fucomp
cmc
cmpsl
jle
fists
jg
push
dec
mov
mov
mov
daa
es
mov
xchg
sub
add
xchg
aas
aam
jno
test
push
pop
sbb
ss
mov
lock
push
ja
das
sbb
int3
jnp
aam
ret
in
pop
pusha
pop
mov
aaa
repnz
das
and
lods
xor
jns
xchg
scas
cld
insb
pop
aas
out
rcr
push
or
sbb
popa
mov
push
adc
fscale
mov
pusha
fdivs
jge
dec
jne
xchg
pop
sub
jp
jo
push
js
in
add
aad
bound
int3
dec
xor
cmp
dec
sbb
sbb
mov
test
mov
sub
loop
test
fsubrl
mov
cmpsb
outsb
mov
add
xchg
sub
std
xchg
in
jne
xchg
insb
cmpsl
negb
dec
jmp
sub
outsl
sbb
scas
jae
xor
lea
pop
pusha
lods
xchg
pop
sbb
or
xor
add
cmp
and
mov
sub
xor
outsb
loopne,pt
push
cld
xor
push
inc
add
push
lcall
rol
sub
sub
pop
jge
repnz
jge
add
fildll
neg
inc
lock
movsl
outsb
pop
hlt
in
add
mov
outsl
ja
mov
out
inc
fstpl
jnp
shl
rorl
jne
dec
insb
scas
pop
pop
es
mov
fsubrl
sbb
jo
mov
jns
sub
dec
jo
jb
pop
adc
out
xor
mov
js
in
loope
dec
insb
xlat
daa
jne
or
popa
xor
mov
std
sub
inc
mov
mov
xchg
dec
imul
stos
pop
stos
es
dec
sahf
sbb
mov
inc
xchg
mov
dec
xor
add
pop
mov
fbld
mov
lods
not
lods
jne
xchg
insb
cmpsb
imulb
jmp
jno
mov
test
xlat
lock
sahf
sub
repnz
aad
inc
jle
or
sahf
add
addb
mov
cwtl
sbb
adc
fs
fidivrs
inc
bound
pop
movl
jge
sbb
jle
pushf
inc
ret
sub
fisttps
push
js
in
jl
xchg
insb
dec
jg
jo
xor
fscale
sti
sub
jne
loop
and
shlb
jnp
or
xor
mov
xor
idivb
cmovne
dec
jnp
int3
cmp
in
sbb
sub
push
int
adc
int3
daa
jno
mov
ror
jle
mov
clc
sbbb
push
sub
xor
add
push
lock
xorl
sub
xor
fwait
jecxz
sahf
mov
add
lods
push
mov
idivl
sub
out
movsl
dec
pop
shr
xchg
outsl
mov
movsl
outsb
mov
push
lret
mov
fstpl
pop
xchg
xchg
ds
lock
jbe
pop
lods
adc
jne
xchg
insb
jg
jo
mov
ror
lea
jae
cli
popa
xor
cld
add
push
sbb
insb
push
insb
push
inc
dec
xorb
sbb
imul
movsl
sbb
dec
jge
iret
enter
xchg
dec
mov
sub
imulb
fdivl
test
add
push
sbb
adc
jle
mov
call
cmc
jmp
push
jno
cltd
sub
int3
ss
mov
jp
mov
sub
add
xchg
cmpl
sbbl
jb
aam
cld
insb
add
dec
sbb
pop
cmpsb
stc
or
andb
mov
jmp
xor
testl
mov
jb
mov
pop
sub
loope
shlb
sub
jne
jg
int3
xor
sub
dec
fs
adc
decb
test
outsl
pop
cmp
or
mov
sbb
push
mov
sub
or
movsl
lret
aaa
mov
jg
int3
repnz
pop
cmpl
fs
mov
jle
ss
cmp
inc
sub
and
rolb
dec
dec
test
cvtps2pi
sbb
push
int3
and
xchg
xchg
in
push
inc
xorl
and
mov
ror
mov
pop
inc
sub
aaa
add
or
and
push
loope
pop
ss
cs
ret
sub
test
adc
pop
xor
dec
std
inc
add
add
in
icebp
mov
sub
loope
mov
dec
sbb
sbb
add
in
call
push
mov
push
pusha
test
mov
inc
loope
lods
mov
insb
sub
dec
sbb
add
and
or
fisubrs
push
mov
add
dec
lods
repnz
dec
movsl
imul
mov
xchg
mov
push
cmp
lea
daa
sub
sub
loope
cld
jmp
add
fistps
cmp
sbb
sbb
xchg
inc
add
std
or
out
mov
es
sub
jle
insb
mov
stos
in
lods
rcrb
bswap
idivl
dec
jecxz
sbb
lods
sahf
pusha
incb
and
dec
arpl
adc
mov
sub
test
sbb
int3
add
clc
and
jo
fnstenv
cld
cmp
jg
jne
loop
jb
add
jne
xchg
insb
enter
mov
daa
sub
push
popf
jb
test
inc
lock
aaa
out
sub
sub
loope
shlb
loope
enter
add
out
jae
jno
inc
mov
mov
pop
add
lock
sbb
jne
fwait
mov
arpl
scas
sti
xor
ja
pop
pop
sub
xor
adc
pop
pop
ret
and
sub
pop
xor
mov
adc
push
in
xchg
adc
inc
sub
mov
push
sbb
sub
out
outsb
add
dec
int
push
dec
mov
out
and
cmp
cwtl
test
add
mov
mov
jno
cltd
sub
mov
in
pop
rcr
out
pop
movsl
jnp
int3
jle
pop
sub
fldt
cwtl
test
push
push
and
fisttpll
imul
shlb
jne
xchg
jne
cmp
test
dec
add
ret
mov
add
popa
push
loope
mov
jle
fldl
xor
mov
enter
insb
insb
sub
call
ss
dec
and
leave
sub
cmp
test
jne
xchg
insb
xor
ja
pop
enter
mov
sub
out
lods
add
sub
sub
cmp
mov
cmp
sub
adc
xchg
jmp
sub
mov
je
cmp
xchg
adc
jle
sbb
sbb
mov
and
cmc
jle
mov
inc
add
push
movl
sub
jno
inc
dec
jo
adc
cld
test
orl
ljmp
add
es
es
mov
xor
xchg
mov
inc
inc
lock
xchg
sub
add
jo
testb
and
xchg
andb
jns
dec
cmp
push
pop
ss
es
inc
sub
cmp
cs
rcrl
xchg
sub
repnz
jae
aad
jle
inc
add
movsl
or
push
sbb
sbb
ja
cmp
push
popf
arpl
add
and
shlb
push
pop
imul
add
out
es
add
pushf
sub
out
out
movsl
cmp
lcallw
sub
scas
sbb
pop
fnstsw
in
fildl
mov
dec
gs
or
mov
inc
test
in
sbb
lahf
pusha
inc
xchg
mov
outsb
jno
cltd
sub
xlat
int3
mov
outsb
adc
pop
add
push
jecxz
xchg
vmwrite
xchg
insb
mov
jmp
lock
repnz
movsl
jnp
int3
cmp
push
mov
push
testl
shrb
sub
sbb
and
mov
or
sbb
and
into
lret
lahf
inc
sub
mov
dec
int
fistps
and
xlat
jmp
mov
enter
mov
fucomip
cmp
add
adc
cmp
out
cmp
jno
jne
mov
fiadds
lea
xor
sub
in
pop
mov
pop
add
inc
sarb
adc
xor
sub
loope
mov
scas
cld
aam
cmp
sub
dec
push
pop
lcall
test
ss
jecxz
orb
mov
xchg
test
dec
jmp
sub
sbb
dec
xchg
pop
loop
cmp
orb
int
ucomiss
add
iret
movsl
es
aad
lds
inc
cmpb
rolb
insb
mov
popa
test
scas
frstor
and
jne
mov
cmp
movsl
shlb
dec
int3
idiv
imul
sub
mov
aas
jo
fmull
and
adc
mov
sub
outsb
mov
lahf
add
pop
sbb
sub
scas
test
bnd
push
cld
insb
sahf
cmp
inc
cmp
xchg
jle
push
mov
sub
add
pop
cmpsb
adc
sbb
int3
subb
dec
sbb
cld
jmp
sub
sbb
rcrb
ret
sub
out
push
movsl
or
cmc
adc
xor
sub
pandn
dec
cmc
xor
test
sbb
cld
insb
fwait
aas
sbb
jle
enter
loop
jnp
int3
int3
sbb
xor
jb
add
add
mov
out
arpl
jg
sub
insb
cmp
outsb
sbb
insb
and
das
sbb
dec
mov
mov
sub
add
push
cmp
movsl
sbb
sbb
sbb
jle
sbb
cmp
sbb
mov
and
mov
sub
out
or
xor
pop
dec
or
or
xor
mov
mov
test
adc
dec
int3
clc
addb
mov
pop
fstps
pop
loop
mov
ds
sub
sub
movsl
movsl
lret
mov
shr
ror
ja
test
rcrb
add
mov
ret
js
cld
int3
add
idivl
cmp
pop
cltd
sub
dec
es
lret
int
jle
mov
inc
fdivrs
push
mov
dec
dec
or
fisubs
sub
pop
outsb
pop
add
cld
jmp
add
outsl
sbb
mov
cmp
fiadds
outsb
jg
or
cld
insb
bound
insb
lcall
roll
shr
std
inc
sub
jne
mov
jmp
and
sub
mov
popa
subb
frstor
enter
rorl
dec
add
decl
int
frstor
cmpsb
xor
push
cmp
xchg
movsl
rolb
movsl
imul
es
cmp
jg
mov
sub
jo
and
aam
dec
sti
and
sub
ret
fwait
loop
test
mov
jg
data16
mov
outsl
insb
sub
sub
push
dec
sbb
sbb
xchg
mov
sub
fildll
sbb
data16
vfrczss
cs
sbb
aaa
inc
xchg
outsb
popa
xchg
addr16
and
insb
sbb
aam
push
sbb
sbb
lahf
sub
mov
adc
inc
sub
jns
pop
xor
jmp
sub
rcrb
and
in
push
outsb
sbb
aam
sub
cmpsl
gs
pop
test
mov
movsl
int
js
or
inc
sub
pusha
xchg
insb
pop
fiadds
push
std
fildll
jne
mov
ss
mov
mov
push
pop
dec
test
push
jl
int3
and
add
lock
outsl
sbb
pop
mov
fadds
dec
jle
push
int3
loope
cwtl
inc
sub
xor
std
fsubs
dec
icebp
or
data16
cs
fisubs
idivb
orb
in
je
cmp
jge
mov
cmp
in
cwtl
push
sahf
ret
adc
test
jg
pop
inc
jle
int3
pop
fbstp
test
and
pop
jle
jne
pusha
cltd
outsb
add
jns
bound
or
push
xchg
jno
xchg
repz
lret
xchg
dec
ret
push
sbb
add
sbb
pop
sub
sti
and
pop
pop
fcmovnu
xor
push
jg
js
outsl
sbb
mov
push
adc
inc
jmp
es
ret
jle
mov
jecxz
mov
stos
in
bound
jbe
sbb
pusha
add
mov
lahf
in
cmc
aas
xchg
adc
mov
mov
jo
inc
inc
test
aaa
test
lret
dec
jne
jns
dec
xor
cmpsl
dec
test
fisttps
dec
cmpsb
xor
jp
xor
roll
mov
inc
xor
aam
insl
sbb
loope
lahf
push
pop
mov
lock
inc
pop
int
and
jbe
dec
xchg
loope
mov
xchg
add
rol
inc
dec
and
push
pop
jne
push
cmp
adc
repz
loope
jb,pn
adc
sub
mov
mov
out
fldln2
xchg
out
push
add
divb
xchg
pop
fistpl
jns
rcll
inc
cmp
mov
push
out
lock
xor
popf
ss
sbb
dec
subb
call
lret
inc
adcl
mov
sbb
adc
sub
cs
lds
sub
push
imul
out
mov
icebp
je
jo
push
inc
jge
loope
and
xor
fidivrs
sub
push
mov
push
jg
push
cltd
cmp
in
and
sbb
outsb
popf
cmp
jecxz
inc
inc
sub
add
std
cld
loopne
sub
sbb
fisttpll
jl
and
adc
data16
sti
inc
push
aam
push
or
push
inc
test
loopne
aaa
scas
add
ds
arpl
pop
stos
lcall
stc
lahf
outsb
add
fstps
push
dec
in
pop
cmp
mov
and
jmp
sbb
pushf
ds
cmp
pop
mov
inc
int3
inc
dec
clc
idivb
fs
ds
sti
pop
push
or
mov
cmc
in
adc
test
cmp
hlt
pop
sub
sub
shll
add
shr
push
push
popf
sbb
das
pop
lods
mov
fcoms
jb
jg
lods
push
popf
dec
pop
pop
or
mov
jle
pop
movsl
xor
rolb
and
sub
xor
in
mov
and
mov
scas
imul
inc
int3
and
int3
sahf
imul
xchg
and
jg
test
pop
xor
pop
movsl
sahf
xchg
loop
adc
mov
mov
std
js
jmp
mov
push
jne
sbb
sbb
inc
mull
and
mov
test
fmuls
mov
jge
out
dec
push
cmp
push
cmpb
lea
fsubr
mov
jl
pop
cltd
mov
pop
mov
scas
ljmp
or
pop
push
stos
jo
mov
movsl
jmp
mov
inc
push
cli
add
push
es
mov
and
popf
pushw
enter
pop
jge
les
into
sbb
adc
and
inc
pop
add
daa
cmp
bound
in
ljmp
popw
push
repnz
sbb
jle
pop
fs
push
rol
pop
jmp
lock
inc
call
and
test
push
sbb
sub
mov
jae
xchg
fildl
outsb
fstpt
pop
sub
cmc
jl
push
lea
sbb
shrl
int3
shlb
pop
push
sbb
jle
jg
jl
enter
stc
push
sbb
rorb
mov
sbb
push
inc
mov
shll
cwtl
sbb
or
insb
push
push
in
das
scas
xor
push
test
pop
popa
cld
push
scas
fists
leave
sbb
push
jge
out
shll
cmp
call
imul
inc
popw
sbb
sar
mov
enter
cltd
dec
mov
in
int3
gs
sub
and
arpl
jmp
stos
mov
movsb
stos
xchg
mov
cmp
adc
lods
mov
pop
dec
out
cmp
push
in
mov
dec
lods
adc
sarl
stc
cwtl
dec
lret
jg
js
inc
sub
or
dec
negb
or
data16
fldt
loopne
and
adc
mov
xor
cmp
mov
popa
jmp
mov
or
pop
add
pop
dec
sbb
jbe
mov
lret
decl
mov
cmp
and
pop
pushf
sahf
fistps
mov
in
cmp
sahf
nop
call
sub
xor
add
cmpsb
movsb
jp
pop
clc
enter
adc
imul
xor
fimuls
jne
mov
aaa
outsb
test
xor
xor
jbe
jne
test
or
in
loop
sub
sbb
adc
cmp
cltd
cwtl
sub
repnz
test
cmp
pop
mov
pop
sub
inc
ds
clc
pop
aaa
jmp
shrb
flds
and
idivb
jp
pop
and
fmull
push
cmc
cmp
mov
in
mov
pop
out
jle
sbb
pop
mov
test
push
mov
pop
xchg
mov
and
mov
aam
mov
fsubl
popf
dec
hlt
mov
call
test
sub
sbb
mov
lods
out
pop
push
mul
insl
fisubrs
out
and
insb
pushf
insl
jle
mov
sbb
xchg
inc
push
std
insl
push
into
sbb
xlat
pop
adc
ss
call
ljmp
loopne
jecxz
mov
fbstp
sbb
mov
push
add
sub
repz
xchg
jno
pop
or
lret
sbb
fldt
lea
jo
adc
inc
ficoms
icebp
pushf
insb
push
sub
xchg
xorb
cmp
push
fistpl
lock
pop
mov
sbb
cld
pop
popf
jo
xchg
mov
andb
rcrl
cmp
mov
cmpsl
loopne
adc
popa
mov
out
xchg
dec
lahf
push
sbb
in
dec
push
add
in
mov
loope
dec
ret
inc
out
lock
inc
xchg
sub
stos
sarl
insb
mov
pop
das
rcll
aas
notb
add
popf
mov
xor
dec
jl
fcoml
pop
inc
lock
cmp
stc
in
add
mov
hlt
push
push
out
adc
mov
sbb
jb
push
mov
stos
dec
and
mov
and
cmc
mov
jno
push
outsl
jge
fnstsw
push
out
inc
rcll
dec
hlt
mov
inc
je
xchg
repz
mov
fiaddl
xor
dec
and
fldl
loope
and
pop
fisttpll
jle
pop
xorl
add
jne
cmp
add
adc
sahf
cmp
dec
jnp
pop
outsl
mov
sbb
add
jne
scas
lret
push
sub
ret
jae
add
inc
xchg
and
jle
cmp
dec
sbb
pop
insb
jecxz
jge
pop
ja
cld
sub
jp
adc
jae
data16
inc
rcrb
sti
ss
dec
jnp
xchg
icebp
out
outsb
sbb
andb
pop
xchg
pop
jae
push
xchg
jae
shll
jmp
inc
rcrb
mov
pop
fstpl
lds
bound
lods
ss
push
add
pop
sbb
insb
push
push
push
out
mov
aad
dec
jge
sub
and
clc
mov
mov
inc
outsb
lcall
sahf
fisubrl
inc
add
xchg
dec
cs
jno
push
mov
fs
icebp
icebp
sbb
mov
pop
daa
pop
and
sbb
imull
mov
outsl
mov
mov
pop
or
fdivrl
nopl
add
sbb
ja
jno
ja
je
mov
jne
jno
popa
hlt
addr16
xchg
mov
jnp
dec
stos
pop
push
xor
mov
rcr
push
jecxz,pn
xor
jge
aas
mov
jnp
cmp
cs
sbb
pop
mov
outsb
clc
xor
out
and
xor
dec
xchg
mov
outsb
mov
dec
lds
xchg
pop
sbbl
pop
cmc
mov
repz
cs
or
push
jg
daa
inc
negb
andl
inc
repnz
cmp
addl
lret
jnp
push
ljmp
and
mov
dec
jnp
mov
push
jecxz
data16
mov
xor
les
lods
je
es
sbb
mov
cwtl
sti
aad
nop
and
gs
jge
dec
sbb
adc
inc
lret
sub
push
inc
mov
xor
lea
call
cmpsb
out
jle
pusha
push
insb
sbb
adc
lcall
loop
jle
fcomps
jbe
or
pop
leave
sbb
in
sub
mov
pop
pushl
sti
pusha
sub
daa
xlat
pop
adc
pop
lcall
sti
lods
pop
sub
or
xchg
pop
iret
inc
or
jle
jge
stc
xchg
pop
mov
sbb
jbe
mov
popa
ss
push
jge
sbb
stc
jg
pop
cs
cmp
xor
stc
ss
insl
fstpt
cmp
jle
je
jl
push
and
inc
add
mov
int3
push
ja
xchg
add
cmc
int3
insl
ss
sub
push
or
ss
jl
push
inc
cmc
shlb
pusha
cmp
add
jl
push
pop
outsl
push
inc
jne
cmc
or
cmp
fwait
jnp
hlt
imul
repnz
into
ss
frstor
jne
mov
fildll
mov
xchg
cmp
in
dec
jge
sbb
stc
xchg
insl
cmpb
push
in
inc
jge
sbb
and
and
stc
jge
int3
jl
fwait
cmp
in
add
cmc
and
mov
fisttps
pop
inc
cmc
inc
ss
mov
add
arpl
movsl
aas
cmp
cmpb
add
sarb
sbb
stc
mov
cmc
add
ss
cmc
jl
pop
and
mov
push
pmaddwd
mov
lods
mov
insl
ss
xor
mov
add
cmpl
daa
jp
in
insl
adc
inc
sub
add
adc
xor
insl
mov
in
rorb
inc
xor
mov
ss
mov
or
jae
xchg
cld
fmuls
cld
incb
rcl
mov
inc
cmp
jge
adc
dec
and
pusha
ja
cmp
adc
ret
pop
fwait
mov
cmp
push
pushf
cwtl
mov
dec
push
ficoms
mov
sbb
add
fs
or
add
push
pusha
aaa
and
jno
pop
pop
fcompl
push
aaa
xor
decl
and
add
in
push
push
fwait
mov
aaa
xchg
and
fisttps
xchg
pop
dec
arpl
mov
push
orl
xor
outsl
nop
ficoms
jp
sahf
sahf
add
sbb
cmp
in
mov
xor
jmp
adc
cld
insl
aaa
je
push
or
shll
jmp
and
sti
imul
cmp
cld
fld
outsb
adc
aaa
mov
bound
clc
rcll
aaa
je
hlt
sub
xor
xlat
jle
or
fsts
cmp
sar
into
push
jb
or
in
jo
sub
ss
pop
divl
lret
js
sbb
mov
push
imul
jbe
mov
jle
fdivrs
mov
aaa
mov
jno
mov
ss
xor
mov
push
cmp
push
jmp
mov
jo
aaa
ds
bound
dec
out
xchg
hlt
pop
mov
push
aaa
cmp
pusha
and
popa
jp
rcr
aas
sahf
mov
lahf
sbb
push
sbb
popf
mov
aaa
fsubrl
xchg
cmp
mov
push
sbb
and
out
lods
pushf
dec
sub
out
fldt
dec
ficompl
adc
loopne
in
mov
xor
jmp
mov
in
pusha
in
mov
sub
popf
les
in
sub
jge
imul
xor
outsl
sahf
mov
cs
mov
xchg
es
dec
pop
jp
pop
jae
jge
pop
sbb
xor
add
sub
lea
jmp
pop
push
sahf
shll
pop
or
pop
add
imul
jno
jo
jmp
popf
xor
pop
cmp
pop
dec
lahf
pop
frstor
adc
divl
loope
lods
aaa
or
xor
xchg
in
mov
mov
pop
cmp
pusha
adcb
pop
fbstp
sbb
lahf
jmp
call
xchg
xor
pop
and
loope
fdivl
pop
adc
jbe
aad
shrl
jg
call
movsb
jp
mov
jge
mov
cmpsl
sub
jle
pop
out
pop
cmp
adc
lock
jg
jp
mov
pusha
mov
jmp
add
dec
inc
pop
add
mov
fmuls
sbb
test
add
mov
call
and
out
dec
in
push
cmp
aaa
push
pop
mov
and
inc
sbb
pop
xor
mov
mov
pushf
mov
and
mov
jl
pop
add
mov
cmc
pop
cmp
jle
sbb
movsb
pusha
lods
mov
mov
mov
in
lcall
insb
mov
xor
bound
fwait
sbb
filds
pop
sbb
push
aaa
push
icebp
mov
sti
cmp
into
mov
sahf
xchg
scas
mov
xor
pop
and
mov
scas
or
xchg
lods
hlt
in
jl
shlb
lds
push
ss
sub
xchg
mov
xor
inc
ljmp
jl
adc
jl
pop
subps
inc
imul
jne
orb
or
pop
cmp
fdivrl
add
pop
jle
sbb
jp
out
scas
jb
xchg
jbe
mov
ds
mov
out
inc
mov
movsb
outsb
and
mov
cld
cmp
sbb
mov
fstl
inc
push
fstl
fcmove
and
mov
sub
jnp
aam
pusha
xor
mulb
call
jne
pushf
jmp
lds
outsb
outsl
neg
jo
jns
jl
in
xor
repnz
cs
mov
shll
stos
inc
cltd
jno
in
xor
mov
in
push
mov
imul
xor
pop
in
mov
mov
or
icebp
or
in
jge
adc
push
data16
or
adc
add
loope
sbb
test
or
test
cltd
mov
sbbl
mov
jmp
lock
cltd
jb
sbb
enter
bound
jae
pop
mov
mov
aaa
jl
out
inc
mov
dec
aas
outsl
jbe
xor
xor
repnz
mov
das
daa
pop
sti
outsl
ss
popf
push
into
je
pop
outsl
inc
icebp
xor
cmpb
mov
mov
jbe
int3
jo
jbe
lea
into
je
arpl
and
pop
push
sahf
jp
ljmp
jo
mov
insb
in
adc
jb
fsubl
xor
bound
mov
push
jp
inc
sub
dec
jbe
clc
jge
xor
add
loop
cmpsb
lcall
sbb
ret
shl
jmp
jns
ss
xor
mov
sbb
mov
jnp
mov
xor
loope
xor
in
sbb
mov
mov
add
cwtl
pop
mov
mov
inc
mov
jmp
fwait
lods
fstl
xor
test
jae
push
nop
imul
cmpsl
add
cli
in
out
les
pop
fnstsw
ret
push
mov
mov
int
mov
pop
add
sbb
xchg
outsb
push
pop
adc
add
pop
mov
sbb
test
cmp
lock
pop
fcoms
jl
jb
inc
dec
cmp
mov
addb
in
outsl
ds
push
dec
aaa
jno
in
pushf
mov
pop
loop
mov
adc
cmpl
mov
mov
movsb
ljmp
mov
fs
jle
pop
adc
sbb
xor
sub
inc
sub
sub
jno
and
push
js
cmpsb
adc
jle
or
pop
in
pusha
mov
or
adc
aaa
ss
mov
adc
ret
icebp
insl
mov
jbe
xchg
fcompl
nop
sbb
clc
jmp
pushl
call
dec
or
push
lea
in
cwtl
jecxz
mov
xchg
mov
adc
fldenv
xchg
rolb
pop
sti
or
mov
inc
cli
xchg
sti
shld
cwtl
and
push
insl
ss
mov
mov
jne
adc
cmp
cs
inc
sub
movsb
cmp
and
cmpsl
fcmove
sbb
and
xchg
outsl
mov
xor
fs
js
pushf
mov
mov
pushf
lods
clc
pushl
clc
clc
sub
call
call
cmc
cmp
call
jmp
stc
bt
bt
pusha
test
pusha
jmp
xchg
dec
arpl
scas
test
push
jle
push
cmp
into
clc
mov
lock
xchg
jle
mov
icebp
cmpsl
add
cmp
sub
mov
push
ljmp
sbb
mov
mov
mov
xlat
ljmp
fstl
sbb
or
fwait
and
push
sbb
push
or
xchg
scas
jp
xor
outsl
mov
add
lods
enter
jb
xor
xor
dec
xchg
mov
xor
addr16
in
pop
pusha
fsubr
pop
push
adc
test
sub
inc
mov
aam
xor
leave
int3
in
sub
sbb
outsl
xchg
imul
cltd
adc
fwait
ja
and
adcl
outsb
rclb
aas
cli
jbe
sbb
xlat
mov
dec
stos
or
and
dec
push
lock
mov
lock
cmpxchg
das
mov
and
sbb
pop
cmpsb
nop
cmp
clc
or
xchg
outsl
xor
adc
mov
scas
jl
in
sub
add
xor
repz
in
or
iret
pop
clc
xlat
add
inc
mov
or
ficompl
lds
mov
aam
pop
sub
scas
sbb
push
cmpsl
rorb
popa
setno
cmpsb
into
pushf
push
mov
lea
jb
cmp
jno
bt
cmp
jmp
pusha
pushl
pushf
lea
jb
clc
bt
stc
pusha
cmp
pushf
pushf
jmp
mov
call
lea
je
cmp
bt
add
pusha
cmp
movb
call
pushf
cmc
add
mov
not
jmp
jmp
lea
jae
cmp
cmc
push
cmp
mov
call
pushf
movl
pusha
call
pushf
xor
lea
jmp
not
xor
scas
mov
jb
inc
jmp
pop
stos
xor
sbb
pop
sbb
repnz
test
out
mov
fwait
imul
in
push
ljmp
adc
pop
lret
sbb
add
cmp
lcall
test
cmc
jmp
call
pushf
pop
cli
or
sbb
stos
jne
call
inc
mov
mov
adc
push
xchg
pop
xor
mov
jnp
icebp
insl
test
repnz
adc
mov
stos
mov
jmp
test
fcoml
push
ja
mov
data16
pop
mov
pop
or
mul
pop
mov
sub
mov
sub
xchg
sub
jno
repz
jns,pn
or
lahf
or
push
repz
lods
xor
lods
xlat
sbb
adc
sub
jns
shrl
adc
dec
inc
xchg
mov
roll
push
enter
xor
insl
or
jg
add
dec
mov
or
xor
sbb
cmp
lahf
fbstp
pusha
pusha
pushf
lea
call
call
pop
mov
or
pushf
test
stc
subl
data16
icebp
push
push
ficoml
cmovno
ja
mov
mov
jae
shrb
mov
xchg
out
nop
aam
add
xchg
and
pusha
push
lahf
cld
fsubp
call
mov
cmpsl
subl
loope
mov
and
push
out
pusha
xor
pop
or
std
sub
fisttpll
enter
sbb
shll
int3
jb
fs
jae
pusha
push
jmp
cs
or
sar
adc
xor
push
test
out
mov
mov
pushf
and
push
add
pop
push
lock
jne
mov
mov
adc
mov
icebp
or
nop
outsb
push
in
stc
lret
xor
popa
int
lods
sti
xor
insb
pushf
adc
fwait
mov
inc
mov
push
imul
push
int3
pop
test
rorb
add
mov
test
or
add
and
pop
xchg
xor
or
cltd
enter
daa
movb
lea
jb
push
pushl
ret
add
stc
clc
jmp
call
stos
pushf
pusha
lea
jmp
pusha
call
cmc
sub
pushl
lea
jne
push
pusha
lea
call
pusha
lea
jmp
push
pushf
jmp
movl
push
pushf
pushl
lea
jmp
xadd
push
rcr
test
loope
ja
mov
lods
call
loopne
imul
push
mov
push
xor
and
shl
sar
out
jns
sub
js
and
xor
fnstcw
sahf
mov
xor
ds
mov
lret
out
push
jg
out
repnz
xor
hlt
mov
sub
xor
or
add
add
cmp
mov
ja
jecxz
sub
add
fs
imul
add
push
lcall
sbb
scas
clc
popa
stos
ret
sbb
xchg
rol
cmc
push
sub
adcl
push
jae
mov
lahf
xchg
rcll
and
ja
jbe
xchg
jmp
jae
cli
mov
pushf
das
cwtl
mov
jmp
cmp
mov
cpuid
push
loop
insb
aam
jo
popf
and
outsl
push
push
bt
stc
sub
pusha
pushl
push
lea
jmp
pushw
popfw
pushl
call
aad
push
push
scas
rol
mov
mov
xor
das
sbb
test
or
cmp
inc
mov
jge
add
pop
sti
push
inc
sub
cmpsl
les
push
scas
adc
call
sar
add
aad
lock
push
lahf
imul
push
xchg
aad
sub
and
inc
xor
lods
pop
xor
js
push
mov
cltd
xchg
inc
clc
xchg
lea
mov
clc
clc
cmc
sub
call
clc
ror
push
dec
clc
cmc
clc
rol
push
pushl
call
movsbw
lahf
pop
call
mov
push
pushl
pusha
cmpb
push
pushf
pushf
mov
lea
jmp
jmp
insl
cmpsl
or
scas
pop
gs
ljmp
fwait
movsb
dec
sbb
jne
icebp
cwtl
fimuls
clc
inc
addr16
and
mov
pop
daa
mov
dec
bound
mov
negb
and
sbb
cmc
icebp
and
adc
cmp
dec
test
jnp
aam
mov
xchg
nop
mov
jno
mov
mov
cwtl
ljmp
outsl
xor
call
push
scas
push
and
xchg
fldl
pop
xor
mov
dec
jmp
xor
mov
test
jle
aad
cmp
fmull
pop
rolb
bnd
js
jb
movsl
mov
push
daa
icebp
aad
sti
fcmovnbe
iret
scas
dec
stos
pop
cmp
inc
test
inc
loop
xchg
bound
add
push
fidivl
iret
mov
mov
jne
lea
push
jmp
jmp
jmp
mov
bt
mov
call
push
sub
lods
xchg
inc
mov
pop
data16
pop
inc
in
aad
pop
push
cwtl
jnp
adc
inc
mov
mov
jo
xor
cmp
xlat
mov
jo
sbb
lahf
mov
push
pop
repnz
in
add
xor
and
xchg
jne
xchg
and
lret
and
push
cmp
and
hlt
cld
aad
pop
pushl
call
push
lea
jne
bsf
bsr
aas
xor
xor
call
rep
pop
movzbl
mov
push
push
lea
jmp
lds
insb
or
sbb
sub
jge
scas
fwait
adc
xchg
out
and
jmp
pusha
jns
aaa
push
das
divl
movsl
mov
mov
popf
es
or
jecxz
mov
sahf
inc
loope
fmul
adc
xor
cmpsl
cmp
aaa
stos
stos
mov
adc
ret
sbb
icebp
hlt
adc
or
add
jp
popa
pop
or
adc
pop
or
scas
sbb
repz
div
popa
orb
xor
insl
or
mov
mov
aas
das
lcall
dec
stos
jbe
mov
inc
sbb
jns
cmp
adc
in
sub
cmp
cmpsl
jecxz
mov
mov
ret
jo
xor
sub
pop
mul
sbb
cld
fidivl
or
cmc
out
pop
iret
add
jecxz
xchg
jp
bound
adc
bound
mov
insl
or
jmp
sbb
out
sbb
xor
mov
sbb
ja
xor
in
cmc
mov
xchg
jo
int
jnp
rcr
pop
int3
sub
cmpsl
fists
ds
ljmp
aaa
scas
cmp
in
sub
loop
into
mov
mov
cld
jbe
push
aas
pop
ret
scas
fnstenv
mov
out
push
insl
pop
push
ret
cwtl
dec
jne
or
xchg
push
lea
jne
btc
mov
add
rcr
sub
inc
sar
movzbw
sbb
mov
clc
pushf
sub
clc
pushl
popl
stc
cmc
call
add
and
scas
jnp
dec
hlt
jg
inc
lret
in
xchg
stos
jae
sub
pop
pop
das
fwait
sbb
pop
cmp
sub
pop
pop
jo
xor
xlat
dec
mov
jae
mov
fidivl
cmc
je
hlt
insb
jmp
movzbw
test
mov
stc
test
pushf
pushf
and
call
imul
push
ret
sub
jecxz
xlat
shlb
add
xchg
fdivrs
divb
mov
jmp
or
sbb
loopne
std
outsl
icebp
fisubs
lods
sbb
inc
addl
jecxz
xor
or
out
sub
add
mov
lds
shrb
push
pop
sbb
lcall
dec
xor
outsl
or
cmp
out
pop
popa
sub
cld
jns
mov
and
ss
jmp
es
cmp
ljmp
dec
mov
add
or
add
sub
enter
loop
out
mov
fdivr
and
divb
cwtl
mov
jno
cli
jmp
rorb
adc
stc
inc
mov
cmp
repnz
outsl
or
into
mulb
mov
inc
mov
or
mov
rclb
repz
pop
add
cmpsb
loop
in
xchg
les
add
arpl
jg
jecxz
xchg
test
or
bound
movsl
mov
hlt
pop
call
mov
scas
xchg
mov
inc
xor
inc
stos
add
pop
ret
xchg
jne
repz
cli
int
mov
xchg
hlt
std
add
cmpsb
loop
mov
mov
lahf
sub
jecxz
inc
test
xchg
outsl
hlt
inc
icebp
xorb
lret
mov
and
inc
inc
cmpsb
mov
andb
adc
add
sahf
inc
mov
into
leave
rcrl
sbb
outsb
cltd
xor
jl
cltd
cmp
adc
sar
inc
cmp
xorl
iret
lcall
xchg
push
ss
gs
in
push
jne
cwtl
jecxz
call
lret
mov
lods
inc
sub
ljmp
aaa
popa
pop
push
cli
inc
test
and
mov
mov
mov
lahf
std
mov
loopne
ss
pop
cmp
nop
testb
inc
jnp
jle
ret
add
fcompl
js
jb
mov
or
xchg
int
cmpsb
aad
cmp
or
or
sarl
or
and
arpl
je
cmpl
push
add
pop
jo
in
push
cltd
jmp
mov
push
lcall
jmp
sub
push
mov
sub
sub
mov
insb
fs
fs
add
mov
xlat
insl
loope
add
push
xchg
aam
xor
dec
inc
mov
in
mov
xchg
scas
inc
outsl
jns
insl
int3
and
inc
fistps
jecxz
in
push
xorb
add
fiaddl
pop
mov
mov
pop
outsb
cmc
pushl
lea
ja
pushf
jmp
cmp
jno
scas
jle
cli
orb
enter
cmp
push
dec
jns
lods
sub
xor
adc
mov
mov
xor
and
es
pop
or
push
inc
xorb
cmc
sbb
sti
dec
lods
scas
lods
fwait
in
and
jecxz
rcrb
enter
xor
sub
and
xchg
dec
cmp
xor
pushf
add
or
pop
cmp
pushf
call
inc
jecxz
jb
scas
rcrb
push
pop
add
pushf
popw
inc
cs
mov
cmp
out
cmp
stos
adc
dec
repnz
lock
sub
sbb
jo
stos
add
pusha
out
xchg
aam
mov
pop
negb
mov
sbb
decl
or
mov
loope
add
outsl
ret
inc
jae
scas
shll
mov
cmpsl
xchg
cmp
out
pop
cld
and
pop
data16
fidivrs
jbe
xchg
sub
inc
fcoml
fidivrl
outsb
mov
cmp
iret
sub
ficoms
gs
cs
cwtl
rcrl
push
xor
cmp
ds
fisttps
xchg
mov
mov
push
dec
lods
jae
scas
sub
sarw
scas
cmp
jmp
or
aaa
fistpl
cli
mov
xchg
xorl
lods
mov
fidivl
daa
cmc
out
xor
sarb
xchg
shlb
pusha
mov
dec
fwait
ljmp
sub
pop
inc
test
outsl
clc
das
xor
xchg
push
ret
cmp
adc
jnp
das
dec
inc
imul
int3
xor
lahf
jo
hlt
fs
enter
adc
sub
int3
inc
sbb
dec
pop
rcr
and
das
mov
lods
aaa
sahf
test
sub
ljmp
orl
xchg
lock
push
aaa
popa
or
adc
cmp
xor
pop
pop
loop
xor
leave
jp
in
xor
lds
xor
pushf
sbb
sub
fs
call
add
or
aad
xchg
out
dec
jl
mov
std
shrl
dec
in
mov
filds
repnz
inc
out
or
push
xchg
andl
inc
xlat
call
popa
xor
lcall
or
adc
scas
mov
iret
testl
push
jns
push
or
jnp
mov
out
sbb
mov
xor
test
stc
fwait
pop
negl
pop
push
cmp
add
jo
xorb
xchg
dec
jno
sti
mov
or
shll
pop
cmc
pop
pop
ljmp
movsb
je
sbb
xor
push
jno
lret
adc
scas
bound
pop
popa
lret
xor
add
imul
in
popa
xor
test
pop
out
mov
mov
or
in
aas
in
xchg
lods
leave
in
adc
andl
pop
pop
mov
sub
stos
and
cmc
not
movb
mov
movsbl
bswap
jmp
bsr
mov
call
cmp
pushf
pushf
lea
jae
btc
bsf
mov
shl
mov
rol
neg
jmp
fidivl
xchg
jne
scas
in
js
lods
xchg
mov
scas
cmp
dec
xchg
jmp
and
jmp
xor
push
mov
fwait
mov
outsb
hlt
ficoml
push
ljmp
adc
je
cmc
enter
lock
and
dec
pop
jmp
xor
pop
jbe
scas
fisttpl
bound
orl
add
inc
add
stos
dec
das
cmp
lods
sub
inc
arpl
cmp
loopne
push
or
or
cmp
xor
mov
out
xlat
movsb
aaa
xor
test
call
xchg
ljmp
ret
pop
insb
mov
fadds
pop
jno
cmpsl
in
mov
and
pop
loop
inc
enter
and
movw
mov
dec
call
pushf
jmp
lea
jne
bswap
call
bound
lahf
jbe
scas
out
cmp
adc
mov
sbb
div
cmp
das
add
enter
arpl
filds
jmp
popa
aas
ja
cld
pop
sti
add
neg
test
daa
cmp
iret
pop
punpckldq
incl
and
scas
mov
scas
add
push
mov
lock
mov
cli
add
pop
sti
xchg
mov
sar
mov
cmp
mov
push
add
jmp
ljmp
sub
jb
and
les
out
les
mov
jmp
mov
test
stos
mov
mov
adc
mov
mov
nop
aad
ret
pushl
cmc
clc
cmp
pushf
pusha
jmp
cmc
cmp
jmp
adc
sub
or
mov
int
aas
sbb
sub
or
repnz
jb
bound
dec
and
lds
dec
lods
or
and
in
xchg
cwtl
xor
sti
add
shll
jge
push
in
cmp
xor
stos
and
test
jmp
cmc
mov
push
pusha
test
movl
pushf
jmp
adcb
js
scas
in
xchg
pop
pop
mov
add
ss
mov
stc
inc
lods
movsl
xchg
fwait
dec
out
fstps
jecxz
ss
mov
pop
xor
jp
mov
clc
push
in
ds
std
test
push
mov
jecxz
lret
mov
add
cmc
sahf
mov
xor
jae
jl
pop
or
mov
and
xor
mov
pop
filds
mov
imul
pop
adc
xor
aad
push
or
pushf
call
add
movsl
pop
fistps
outsl
fcmovu
sub
pushf
js
scas
sbb
cmp
lret
mov
xchg
fwait
inc
push
cmp
push
fwait
es
outsl
jbe
mov
dec
insb
mov
mov
mov
mov
sub
adcb
jge
shr
and
sbb
outsb
and
addl
cmp
test
add
jmp
fdiv
gs
mov
roll
repz
mov
dec
push
pusha
pusha
mov
lea
jmp
stc
cmp
movzwl
shrd
movw
shr
xor
mov
stc
pusha
add
cmp
jmp
bsr
mov
bt
clc
push
sub
movb
pushl
lea
jmp
js
inc
jns
scas
shlb
lods
testl
add
mov
dec
lret
pop
mov
mov
cld
das
cltd
xor
add
jmp
rorb
call
int
xor
imul
sti
push
xor
sub
pop
fstp
lret
test
pop
mov
jbe
sbb
pushf
dec
subb
add
xlat
lea
mov
movsbw
mov
seta
lea
mov
pusha
pushf
mov
push
mov
pushf
pushl
ret
pusha
movl
mov
push
movl
pushf
movl
lea
jmp
sub
call
lcall
jne
sub
inc
in
notl
imul
jno
rorb
push
inc
push
pop
sub
xor
cmpsl
xorl
loop
scas
repnz
xchg
in
push
xor
stos
xor
lods
pop
xchg
mov
xor
jnp
or
dec
jae
aas
pushf
cmp
or
push
and
add
in
mov
mov
pusha
rcrl
pop
mov
dec
cld
out
and
bound
mov
aas
fucomi
jns
ret
bt
push
movzwl
clc
movzbw
mov
pushf
movw
add
clc
push
mov
pusha
test
jmp
pushl
lea
jb
pushf
cmpb
jmp
push
mov
pushl
lods
clc
jmp
call
jmp
call
push
movb
pusha
call
lock
or
sarl
stos
mov
daa
adc
inc
rcr
cwtl
pop
cmp
lods
add
repnz
inc
stos
mov
jno
in
cltd
jl
test
inc
movswl
shl
jb
jae
shl
faddl
shll
push
sbb
popa
cwtl
or
mov
mov
mov
std
lcall
push
daa
cmp
or
push
mov
lahf
cli
or
push
cmp
pushf
lea
ja
shr
test
bt
sub
dec
add
clc
mov
neg
clc
bt
sub
mov
call
pushf
lea
ja
dec
call
xor
inc
sub
subb
mov
popa
dec
aad
fimuls
faddp
dec
repnz
cwtl
cmp
mov
mov
movb
cmp
mov
mov
js
movsl
jecxz
imulb
mov
push
rolb
fcmovnbe
int3
fisubrs
push
mov
sbb
push
mov
fists
daa
cli
dec
dec
pop
push
sub
dec
pop
mov
pushf
movw
lea
jmp
mov
jmp
xor
lea
jo
bt
rol
test
push
call
in
sub
or
or
add
neg
pop
test
mov
xorl
bound
jp
scas
mov
cmp
xchg
out
jmp
mov
aaa
subps
add
cld
movsl
movsb
bswap
pop
jmp
dec
fstl
push
and
repnz
stos
and
call
fs
ja
jmp
or
mov
out
xlat
and
cmp
cld
jp
addr16
stc
add
repz
push
sbb
mov
push
and
add
cmp
in
xchg
or
xchg
jge
mov
add
adc
out
imul
inc
fldcw
outsb
stos
and
lret
insl
jge
scas
dec
flds
push
jge
iret
cmp
jmp
inc
pop
sub
xorl
mov
fnstcw
xor
mov
or
popa
sbb
enter
mov
out
std
xchg
sbb
data16
mov
pop
cmp
and
stos
jnp
fwait
ss
adc
mov
sbb
add
lret
cmp
ds
and
cmp
mov
jmp
sub
sti
and
je
imul
lods
movsl
mov
leave
cs
addb
xor
imul
mov
or
lahf
inc
sbb
sbb
stc
fimull
add
inc
push
or
mov
xor
loope
add
je
mov
add
push
ljmp
aaa
loopne
xchg
sbb
cli
ret
mov
ret
inc
xchg
mov
jne
sahf
xchg
sbb
out
lods
cmp
xchg
mov
jnp
pop
xchg
in
dec
xchg
jne
jb
jg
jmp
loop
mov
and
sbb
add
push
movsb
fidivl
xor
push
out
add
leave
call
jp
ds
addr16
mov
mov
adc
lret
or
add
push
lods
sahf
mov
pop
jg
scas
fmull
and
cwtl
inc
mov
dec
or
in
mov
mov
and
call
insb
mov
push
xor
imul
fcompl
push
dec
cmc
cmp
popf
push
in
pop
test
ret
sub
push
or
push
scas
sarl
pop
neg
int3
cmp
not
push
testb
mov
push
and
call
ret
lahf
cmc
ret
mov
pusha
pushf
pushl
pushl
pushl
ret
add
popa
jmp
lea
ja
pusha
pusha
push
lea
jmp
pushf
pusha
lea
jne
pushf
cwtl
lea
movb
pushf
bswap
mov
mov
bswap
lea
mov
jmp
lea
jae
add
push
setb
bts
mov
movsbw
sar
cmp
add
mov
rcl
dec
mov
test
mov
movb
pushl
xor
sub
jle
pushf
repnz
jmp
pushf
lea
ja
lea
pushf
mov
jmp
loopne
jl
or
into
xor
xchg
imul
imul
adc
or
lods
jo
repnz
xchg
xchg
inc
adcb
inc
jg
pop
push
push
ljmp
push
mov
popf
cmp
mov
ret
push
inc
stos
lea
mov
mov
sub
push
insl
rorb
push
sub
out
pop
add
inc
mov
xor
push
and
xchg
add
dec
stc
ror
call
movl
push
pusha
pusha
pushl
lea
jmp
pandn
or
daa
out
push
jecxz
popa
or
pushf
mov
lahf
fidivrs
cmp
jg
enter
fsubrp
mov
mov
push
out
cmp
ja
push
cwtl
cmp
cmp
scas
or
xchg
stos
inc
lahf
pop
add
out
fwait
bound
add
clc
jne
dec
stos
fcmovnu
dec
inc
loop
stos
das
rcrb
imul
inc
in
xchg
dec
ret
mov
xor
push
jnp
mov
popa
decl
mov
rolb
gs
xchg
out
decl
orl
out
inc
lds
mov
rol
pop
bt
movzbw
mov
inc
shrd
mov
pushf
jmp
movb
lods
cmc
call
movsbw
lea
call
xor
scas
imulb
ffree
jo
and
xchg
fdivl
mov
push
inc
mov
pop
ljmp
or
hlt
mov
jg
push
lock
xor
or
test
js
jp
mov
push
push
insl
adc
cmpsb
pop
bound
imul
jae
sbb
xlat
and
lods
and
mov
jp
mov
cli
mov
inc
mov
pusha
mov
mov
pusha
pushf
movb
push
lea
jmp
movw
call
pushf
mov
xlat
lahf
adc
ss
push
pop
shrl
cld
subl
ret
fdiv
in
mov
jmp
sub
dec
add
xlat
push
cmp
adc
adc
rcl
loopne
hlt
enter
cmpsl
repnz
mov
pushf
mov
shl
lret
adc
loopne
inc
xor
into
push
dec
push
outsb
in
inc
shlb
ds
sub
lock
cmp
lea
jmp
pusha
jmp
call
call
pusha
add
pushl
pushf
mov
mov
lea
jmp
pusha
pop
mov
pop
rorb
mov
out
lods
jns
dec
cmpl
cltd
lods
jae
mov
movsl
loopne
idiv
flds
push
arpl
pop
mov
into
cld
xor
ds
shll
movl
adc
adc
andl
or
das
aaa
ja
ss
add
push
js
or
mov
cmp
aam
aas
ficoms
lcall
mov
jne
daa
les
shrl
sahf
pop
fs
xor
mov
call
ret
fmul
movsl
mov
les
pop
stc
sub
sti
es
xchg
imul
inc
test
scas
les
ljmp
jle
loop
int
stos
sbb
xor
add
cltd
and
ror
repz
jecxz
mov
mov
adc
js
sti
adc
cld
movsl
fimuls
sub
and
push
or
mov
iret
add
xchg
movsl
std
scas
push
mov
pop
fucomip
jb
inc
adc
repnz
std
xor
mov
add
das
xor
mov
gs
xchg
jo
dec
mov
mov
sti
and
pushf
out
fcomip
arpl
jno
sysret
add
pop
cmovae
inc
mov
pop
push
pushf
addr16
pop
and
aas
addr16
in
dec
adc
and
xor
xlat
jbe
mov
arpl
sub
mov
mov
ja
pop
stc
pop
xor
daa
pop
mov
loopne
mov
into
xchg
jo
push
scas
shl
sbb
xor
pop
ficompl
jge
dec
jg
add
jbe
sbb
out
or
dec
add
andl
mov
xchg
insl
sub
xchg
mov
mov
push
loop
inc
jnp
mov
xlat
and
xorb
mov
cli
sub
and
insl
cmpsb
scas
fcomip
rcr
int
out
add
insl
daa
fistps
daa
sbb
xchg
fildl
leave
addr16
lds
loop
sbb
inc
lahf
lods
sahf
repz
xchg
out
jns
ja
jecxz
sbb
inc
in
cmp
mov
movsl
icebp
je
jo
outsb
call
in
and
rorb
xchg
push
imul
lret
sub
jnp
call
mov
sub
adc
adc
clc
mov
ss
jl
mov
shl
bound
aam
lcallw
sub
inc
add
imul
daa
sbb
jp
mov
cmp
xchg
mov
mov
cli
sbb
push
pushf
pop
cli
repnz
sbb
mov
icebp
pop
maxps
mov
out
jne
cmp
push
loop
dec
lahf
fisttpl
daa
addl
jle
mov
popa
in
lods
aad
and
nop
nop
sahf
gs
lock
pop
mov
sbb
push
mov
mov
and
jb
jno
inc
mov
cmp
mov
push
xor
mov
nop
and
or
lahf
sbb
pushf
enter
sub
test
aad
jle
cmc
mov
xor
mov
sub
add
stc
in
add
out
fs
clc
dec
sahf
jb
jge
insl
cmp
daa
inc
and
orl
iret
adc
loopne
out
mov
in
mov
pop
and
sub
mov
movsb
int
cmp
out
mov
jmp
mov
enter
dec
inc
and
mov
adc
int3
sti
lods
and
popf
push
mov
test
mov
bound
mov
xor
stc
dec
xchg
adc
loop
fs
add
stos
adc
sahf
test
outsl
cli
and
inc
aad
push
hlt
mov
in
xchg
ret
fldenv
pop
pop
jno
ljmp
sti
adc
sub
sbb
movsb
mov
push
sbb
leave
jge
lods
sub
mov
sbb
mov
test
mov
shrb
pop
scas
cwtl
les
subb
pop
sarb
jmp
out
mov
lret
call
addr16
add
xchg
jp
cmc
pop
add
mov
jb
push
cmpsl
lret
add
jne
enter
jnp
mov
sbb
and
xchg
fwait
sub
outsl
jb
pushf
xchg
pop
lods
xor
sub
xorl
mov
pop
inc
pop
scas
jne
pop
int3
sbb
xorb
or
push
movsb
xlat
push
hlt
cs
dec
xchg
fmul
pop
xor
adc
inc
jbe,pn
fdivl
push
xchg
lcall
rcll
inc
arpl
testb
mov
stc
inc
add
lods
int3
imul
scas
jnp
fucomp
and
or
cmpsl
andps
mov
jne
xor
popf
cmp
inc
pop
cmp
jb
je
jbe
mov
cli
sub
fdivr
jg
push
push
mov
jae
sub
call
and
arpl
dec
fimull
push
idivl
pop
cmovp
mov
data16
iret
dec
sub
lea
out
dec
inc
adc
loope
and
loope
and
cs
orb
je
lea
push
into
inc
jns
lods
ss
xchg
push
movsb
xchg
xor
es
cmc
outsb
out
dec
cmp
or
and
mov
jns
add
mov
inc
sbb
enter
add
cld
fistl
pop
dec
xor
repz
out
add
mov
and
repnz
xlat
and
pop
xor
cmpsb
in
adc
cmp
xorb
adc
sub
xchg
outsb
scas
addr16
arpl
xor
mov
in
rol
iret
dec
cmp
imul
enter
dec
and
dec
pop
aad
sbb
and
adc
adc
ja
add
inc
jnp
pop
inc
push
xchg
in
roll
push
add
cmp
test
insb
and
fwait
bound
inc
pop
and
sub
test
shll
outsb
inc
jbe
xor
xchg
adc
sbb
daa
pop
add
jge
add
xor
adc
subb
inc
pop
lods
pop
lock
mov
xchg
mov
mov
rolb
bound
and
add
pop
dec
imul
data16
mov
rclb
ffree
aas
xor
jp
and
push
push
call
and
out
cmp
dec
or
movsl
cmpsl
lcall
cld
xor
imul
outsb
add
sbb
add
inc
jne
call
int
sub
mov
jle
icebp
lods
jae
hlt
mov
sti
ret
jecxz
mov
and
insl
inc
inc
push
mov
jl
mov
inc
in
ret
outsb
and
add
inc
mov
stos
mov
lea
sbb
mov
push
mov
sub
xchg
fidivrs
inc
adc
xchg
xor
subb
push
jb
cltd
jnp
mov
or
push
xchg
sbb
mov
pop
push
rcll
dec
xchg
shl
call
inc
lahf
cltd
push
in
add
mov
imul
stos
mov
or
ret
cmpsl
movsb
stc
pop
frstor
enter
mov
mov
int
std
dec
movsl
mov
push
rolb
xchg
sub
stc
inc
mov
mov
cli
cmp
ljmp
xchg
ss
adcl
lock
mov
sti
dec
fcmovb
inc
or
push
test
jmp
cltd
out
sbbb
mov
push
jg
cmpsb
adc
lcall
dec
mov
repz
ss
stc
sub
ds
cmp
test
and
andb
scas
push
mov
mov
je
mov
sub
repz
mov
iret
xchg
push
scas
sahf
test
repnz
fsubrl
jne
and
fimuls
repz
jg
mov
mov
cmp
fadds
test
pop
lahf
pop
insb
mov
in
mov
data16
cmp
push
xchg
adc
mov
adc
xlat
inc
sub
js
rcrl
jmp
dec
push
inc
scas
xor
mov
sti
aaa
fcoml
fisubrs
pop
cmp
jo
pushf
out
rorb
mov
popf
ficomps
mov
push
mov
in
shr
cmpsl
inc
gs
fistl
sub
sahf
pop
insb
mov
notb
xor
sti
mov
bound
xchg
or
dec
or
ja
mov
sbb
mov
hlt
test
lods
mov
into
cmpsl
cmp
jne
rolb
xchg
push
mov
pop
repnz
push
pop
cmpsl
ror
aas
nop
pusha
sub
push
add
cmp
nop
inc
or
adc
in
inc
int
outsl
mov
jecxz
lea
rorl
cld
adc
in
movsb
insl
inc
fidivl
adc
jge
dec
cmpsb
rcrl
jmp
cmp
xor
sbb
push
sub
xchg
int3
ds
arpl
in
jae
sub
mov
nop
xchg
js
jae
push
adc
cmp
pop
mov
jmp
mov
outsl
std
arpl
call
xchg
shll
mov
in
divb
inc
out
inc
push
and
ja
stos
iret
fwait
cs
cli
int
dec
loopne
inc
jae
cmc
or
pcmpeqb
cmp
lret
adc
movsb
test
or
mov
push
mov
jno
mov
cmpsb
and
std
xchg
push
ja
paddw
fwait
adc
inc
ror
lods
cmc
lds
mov
sub
lret
out
push
shrb
shl
ja
mov
and
and
sahf
add
in
adc
adc
aad
push
movsl
mov
rcll
rcrl
push
inc
repz
test
repnz
je
mov
or
jo
xlat
cltd
pop
insb
push
mov
mov
jle
jg
add
jecxz
lea
out
loop
sti
pop
insl
jo
dec
scas
jl
pop
push
in
jg
loopne
leave
mov
mov
dec
add
push
iret
subl
mov
push
cs
fsubr
xchg
mov
movsl
mov
fisttpll
cmp
push
test
and
sub
ss
data16
out
and
test
dec
add
push
nop
imul
cli
scas
add
in
lret
cld
out
mov
jnp
addr16
mov
sub
or
inc
rcll
addr16
in
jnp
insb
or
xchg
test
sub
mov
mov
jne
iret
inc
iret
xchg
scas
leave
pop
push
das
fs
mov
or
add
cmp
aaa
roll
xor
mov
add
pop
mov
jno
sub
cli
loop
adc
xor
sbb
push
sahf
and
mov
xchg
lock
and
fwait
test
pop
jp
pop
in
push
xchg
sub
fs
and
test
test
pusha
lahf
push
cmp
outsl
mov
xor
xchg
push
lods
ss
dec
adc
sub
arpl
push
inc
in
xchg
and
shl
xchg
push
decb
std
imul
jno
adc
and
rolb
and
xchg
add
push
cmp
push
lods
push
mov
jo
das
mov
imul
inc
loope
push
cwtd
add
adc
xchg
and
jb
pusha
lret
inc
or
pushf
cmp
pop
push
cltd
mov
stos
pop
ds
sub
mov
inc
push
cmp
dec
hlt
dec
pusha
mov
sbb
jle
in
rorl
ja
pop
xchg
jp
push
xchg
jno
sbb
lock
sbb
js
dec
ds
dec
popa
push
les
push
mov
cwtl
sub
sub
out
data16
sahf
sub
xchg
lret
inc
popa
movsb
rcll
popa
push
dec
xchg
push
repz
stos
fisubrs
jg
pop
jo
sarb
push
dec
fs
cltd
xchg
and
fsubrp
fmulp
adc
push
pop
and
aaa
test
dec
sub
dec
lret
mov
or
mov
cmc
xchg
insb
movsb
repnz
in
mov
or
loopne
or
pop
iret
adc
mov
jmp
cmp
push
test
test
inc
xchg
sbb
mov
shll
inc
mov
inc
or
pushw
xor
push
stc
test
je
ljmp
xor
pushf
sub
in
mov
rcrb
mov
pop
lods
pop
sahf
jle
or
fxam
xchg
dec
xchg
mov
add
icebp
mov
or
scas
lret
minps
aad
fbstp
fstl
xchg
mov
out
cmp
add
aam
add
mov
int3
add
enter
sbb
sub
xor
imul
fs
push
fiadds
int
sub
cmpsl
jnp
fisttpll
jge
or
xor
cmpb
es
adcl
push
outsb
sbb
push
insl
mov
fcmovne
insb
dec
loope
in
cmovae
inc
pop
jg
inc
xor
imul
mov
add
mov
cmp
repnz
cmp
orl
test
jb
popf
xchg
fsub
das
in
pop
xchg
cld
jne
popl
stc
out
dec
xchg
or
jns
aaa
out
mov
mov
lea
add
ja
jecxz
sub
sub
cmp
sbb
mov
adc
sti
jns
mov
pop
movsb
data16
sbbl
xchg
jbe
xchg
imul
mov
xchg
jmp
lret
pusha
xchg
shll
addl
jl
imul
add
jg
add
mov
mov
iret
fsts
aas
and
push
repnz
aam
jnp
pop
movsl
fnstenv
fs
jne
add
inc
jge
sbb
test
lret
pop
sub
insb
sbb
push
shll
fisubrl
fiaddl
adcb
jae
mov
cmc
out
ds
mov
dec
inc
leave
inc
xor
in
popf
fdivrp
int3
aas
lret
jge
dec
push
sub
jno
int
inc
sub
mov
iret
ret
shlb
out
idivl
xchg
cmp
xchg
mov
test
adc
mov
pop
in
jno
shll
fwait
test
call
mov
mov
jg
mov
repnz
cwtl
into
sbb
jo
inc
loop
mov
xchg
cmp
inc
gs
bsr
les
mov
adc
scas
out
xchg
pop
jnp
ss
xor
call
sub
sar
push
fs
lret
lcall
pop
loope
movsb
push
lcall
lock
mov
adc
jb
into
add
cld
daa
lret
mov
mov
inc
leave
push
jnp
out
cmp
add
mov
test
loop
inc
cmp
jecxz
lods
sub
xchg
sbb
aad
cmc
cmpsl
inc
jb
pop
sti
in
stos
jns
push
push
ret
adc
and
push
mov
pusha
scas
xor
jecxz
pop
and
jbe
jo
mov
dec
aam
sub
sub
push
xor
mov
and
pop
cmp
inc
mov
fsubrl
mov
dec
fwait
out
push
aas
push
jns
adc
and
add
int
fistpll
aad
aas
test
jmpw
push
loop
jmp
ljmp
pop
fbld
adc
cmp
mov
or
repz
int3
jge
and
mov
mov
add
or
inc
scas
je
xchg
push
sub
push
out
int3
mov
inc
mov
loop
imul
push
xor
lcall
test
mov
dec
sub
adc
imul
xchg
icebp
push
xchg
cmp
in
jne
mov
dec
aaa
and
push
pop
mov
mov
aaa
sti
ss
xchg
bound
sub
sub
mov
xor
rcrl
push
jno
inc
adc
add
sbb
xorb
cmp
das
add
test
jmp
fs
loop
popf
les
daa
fildl
mov
push
or
lahf
loop
add
out
inc
jns
int
iret
test
shlb
sti
nop
enter
das
and
xchg
xchg
repz
dec
cmpl
fdivs
jl
out
or
sahf
imul
sub
je
stos
lods
add
into
mov
mov
filds
dec
mov
cmc
mov
cli
sbb
push
xor
push
hlt
das
add
cwtl
mov
cld
lock
lret
inc
push
cli
jnp
jns
aaa
xor
jno
dec
das
and
mov
ds
sub
bound
xor
or
cmp
fwait
jg
ret
adc
cltd
or
add
and
orb
aad
test
movsb
scas
jbe
sub
popf
pop
outsl
clc
sub
sbb
adcl
push
dec
sarb
ljmp
dec
xchg
sahf
fdivl
add
pop
movsb
pop
mov
mov
inc
jae
cmc
jb
scas
mov
push
addr16
mov
lcall
xchg
jnp
jg
sahf
cmpsl
mov
or
add
aad
mov
test
dec
pop
verw
push
nop
mov
sti
roll
add
dec
gs
popa
addr16
outsl
js
add
dec
adc
ljmp
lea
ja
inc
inc
not
inc
seta
pushf
inc
dec
sbb
shl
xchg
aaa
rol
bt
mov
pusha
mov
push
test
bt
mov
push
push
sub
mov
jmp
add
aam
add
mov
daa
add
aam
add
or
add
add
add
add
add
add
repnz
call
ret
cwtl
or
cmp
mov
or
mov
arpl
divl
mov
sarl
aam
pop
xor
popf
dec
pop
into
jnp
and
pop
imul
jo
scas
fsubs
jecxz
movsb
ret
movsb
dec
or
adc
sub
jecxz
pop
or
dec
push
int
xor
stc
or
or
insb
pop
loopne
inc
incl
movzbw
mov
jmp
or
xchg
cwtl
or
into
push
jg
jb
es
stc
mov
jle
test
jl
jg
sarb
sub
fcoml
into
out
out
jl
and
dec
mov
out
arpl
xchg
ljmp
add
sbb
scas
fwait
dec
lret
lock
ds
bound
mov
loope
pop
addb
mov
dec
mov
aam
sbb
jne
mov
cmp
mov
rcrl
fcomi
xor
push
pushf
mov
inc
lea
push
push
movb
lea
call
pushf
movb
pushf
adc
movw
jmp
jmp
fs
mov
in
aam
cmpsb
adc
xchg
inc
mov
fcoms
jno
push
cmp
fcom
jle
cmp
lods
outsb
movb
fdivl
les
stos
pop
mov
call
mov
sbb
inc
mov
jb
push
mov
pop
pop
cld
and
jno
mov
add
divl
xorl
sbb
sahf
lds
lds
push
and
fcmovnbe
aaa
cltd
or
test
inc
stos
bnd
xchg
pop
ljmp
inc
adc
mov
xor
and
or
xchg
rcrb
add
dec
pop
outsl
ret
aam
mov
pushf
or
mov
lea
jne
cmc
mov
ror
sub
shl
mov
pushf
cmp
sub
jmp
pushf
sub
mov
clc
push
test
cmp
movb
pushl
lea
jae
pusha
pushl
movb
push
lea
jmp
pushl
lea
jae
test
pusha
test
cmp
movb
pusha
lea
ja
not
inc
pusha
jmp
jns
movb
lahf
movsbl
push
movsbw
lea
push
pushf
movl
call
xor
fwait
or
or
pushf
in
fldenv
negb
mov
daa
jmp
repnz
es
aaa
pop
inc
push
int3
aas
pop
insb
bound
mov
cmp
cltd
lds
fucom
add
stc
xor
fidivl
ret
adc
or
aas
sbbl
cmp
insl
out
rolb
fwait
fwait
or
pop
inc
or
fisubrs
lcall
std
stos
fucomip
mov
lcall
test
adc
add
inc
in
test
dec
in
add
jp
mov
pop
das
loopne
inc
mov
mov
cmp
add
pushf
and
xor
scas
xchg
dec
repz
mov
xor
iret
das
ret
dec
jmp
andl
inc
scas
cltd
bound
pop
or
insb
insb
sbb
fmull
repz
and
cmp
gs
pop
ja
dec
xor
fsubrp
xorb
std
punpcklbw
sbb
lea
leave
rcrl
cwtl
fs
mov
test
sbb
sbbl
jns
xchg
sbb
push
into
scas
repz
push
xchg
and
adc
mov
ljmp
jle
mov
negl
fldpi
loop
or
dec
leave
jmp
cmp
mov
movsb
je
sbb
sbb
shl
push
scas
jg
mov
popf
cmp
cmp
push
lea
jae
add
mov
shld
xadd
stc
shr
mov
bswap
bts
mov
cmc
sub
cmc
call
mov
mov
pushl
cwtl
mov
lea
jmp
bt
test
add
call
pusha
shl
setne
jmp
jmp
mov
mov
call
stc
cmp
mov
pushl
call
fidivrl
popf
or
sub
jle
xor
and
outsl
or
push
data16
lods
test
xor
jle
or
sbb
pop
add
popa
fdivs
mov
lcall
jecxz
or
aam
and
test
dec
repnz
jecxz
mov
adcb
sub
cld
dec
sahf
xor
lds
jmp
xor
add
imul
jae
mov
pushf
bt
and
call
jo
insl
popf
or
cld
mov
test
sarb
out
xchg
add
loopne
cmp
mov
or
cmpsl
dec
fildl
xor
sbb
cli
loop
xor
push
ret
mov
cmp
mov
jb
or
add
xlat
cmp
ds
shll
mov
sbb
insl
mov
xchg
push
lock
or
jge
cvtdq2ps
ja
fnstcw
ss
js
loopne
or
out
sarl
into
sbb
sar
mov
mov
rsm
loope
mov
inc
pop
dec
in
mov
gs
clc
push
andb
cmp
aad
in
mov
repz
sub
pop
std
xor
int3
fwait
or
pop
gs
outsb
dec
sbb
mov
dec
cmp
outsl
fisubrl
pop
xor
cs
scas
mov
dec
xor
dec
mov
mov
jle
or
sbb
xlat
subl
subl
loope
jp
push
inc
dec
xchg
mov
pushf
xor
test
xchg
xchg
mov
mov
sub
cmc
inc
ss
add
sub
mov
mov
sbb
cltd
or
inc
and
mov
push
pushl
ret
cmpsb
lods
lahf
or
sub
sbb
push
pop
div
cmp
inc
push
lret
or
aad
mov
adcl
and
scas
dec
pop
mov
pop
insb
and
je
pop
imul
mov
and
loopne
cs
sti
and
inc
js
mov
inc
pop
inc
loope
mov
sbb
fimull
icebp
add
pop
push
pushl
cli
dec
adc
sub
lea
jae
clc
push
bt
xor
push
pushf
lea
call
push
call
pusha
lea
jne
rol
mov
cmp
bt
add
cmc
movzwl
push
bts
cmp
mov
clc
cmp
add
bt
jmp
mov
setg
not
lods
pusha
stc
stc
sub
call
lea
je
cmc
add
clc
cmp
pusha
push
lea
jb
bt
pusha
cmp
pushf
push
lea
jae
neg
rcr
pusha
pushf
mov
not
shl
call
pushf
add
mov
lea
jmp
movl
push
pusha
movb
lea
jmp
movl
call
fidivrs
lcall
inc
icebp
sbb
lret
pop
into
fcmovnu
and
stc
cltd
adc
pop
imul
mov
out
nop
movsb
pop
lea
je
xor
outsl
daa
pushf
stc
sahf
aas
lcall
pushf
out
and
cmp
test
and
mov
lods
dec
icebp
outsl
xor
fistpll
fs
enter
dec
pusha
mov
mov
cmp
jmp
push
pusha
pusha
stos
push
mov
lea
jmp
lea
je
cmc
clc
add
pushf
pushf
pushl
cmp
mov
mov
jmp
push
sub
dec
rorb
sbb
sarl
or
lods
and
pushf
xlat
insl
lods
movsl
gs
inc
and
fwait
dec
dec
push
sub
pusha
adc
decl
xor
adc
popa
clc
adc
lret
mov
insl
mov
pop
dec
lahf
mov
cmp
jle
mov
xor
mov
cmc
sub
aam
fdivs
jo
je
mov
push
dec
stos
pop
cwtl
cmp
mov
and
cwtl
and
adc
cld
jae
adc
scas
mov
jae
lock
pusha
fcmovu
push
sub
data16
movsl
mov
arpl
ja
dec
mov
mov
mov
lock
decb
cmpsb
cs
scas
lret
fdiv
cmp
outsb
cmp
pushf
and
cmp
pop
ja
sub
sub
or
out
xchg
loop
dec
push
loop
arpl
ret
pop
clc
pop
shl
or
cmpl
mov
xchg
or
adc
popa
xor
xchg
lret
pushl
aam
jno
sbb
sub
bt
push
jmp
cmp
call
lret
and
mov
dec
mov
out
sbb
scas
xchg
orb
jl
add
sub
lret
pop
aad
int3
mov
mov
je
jae
or
aaa
and
rcrb
push
add
adc
and
jbe
adc
add
fists
clc
sarb
adc
xchg
push
xchg
cmp
jl
jge
ret
jbe
pop
or
imul
int
outsl
mov
cmp
push
call
movw
push
inc
cmc
cmp
cmp
cmp
pop
seta
lea
pop
mov
lea
jnp
pusha
push
lea
ja
push
pusha
lea
jb
call
pop
sub
incb
mov
mov
sbb
push
cmpsb
mov
rcrl
pop
js
jno
lds
xor
je
test
sbb
scas
je
fidivrl
cmp
emms
sbb
push
icebp
or
and
insb
jae
or
cmp
test
test
cmpsb
mov
pop
adc
sub
cmp
in
xlat
das
mov
cmpb
sub
bound
xor
insb
or
mov
mov
sbb
jge
fwait
ret
outsb
insb
clc
push
loope
cli
hlt
push
movsb
or
outsb
cltd
inc
mov
pop
iret
sub
aaa
push
int
push
xor
test
push
or
dec
je
lea
mov
inc
pop
les
movsl
jle
nop
mov
jo
mov
lret
jp
stc
mov
xor
dec
jae
add
cmpsb
add
push
mov
lea
ja
or
rcr
rol
bt
sub
shl
xor
btr
shl
add
btc
not
mov
bt
push
mov
stc
repnz
call
lea
pusha
pusha
movl
jmp
inc
add
adc
lret
push
add
push
jns
or
inc
outsl
pusha
sub
lods
je
xchg
mov
ss
mov
shll
int3
dec
lcall
repz
ss
mov
fucomp
stos
scas
cmpsl
cmp
lock
jmp
int3
sub
rcr
sti
pop
cmp
fnsave
pusha
xchg
and
sbb
fnstenv
mov
pushl
popl
cmc
cmp
cmp
jmp
cmp
pushf
mov
lea
ja
jmp
out
daa
mov
jne
rcr
ret
pop
imul
and
xchg
lods
loopne
movsb
add
lods
sub
cmp
lods
add
icebp
cmpsb
add
add
pop
gs
dec
mov
shr
fucomp
lcall
cmpsw
cltd
pushf
in
xchg
sbb
pop
or
mov
pop
cmp
inc
and
push
shr
aad
aaa
dec
pop
sub
loope
cmc
ret
popf
scas
push
push
inc
dec
mov
sets
not
inc
rol
rcl
ror
xchg
and
xchg
shrd
pushf
mov
or
not
adc
add
mov
clc
stc
jmp
mov
dec
cmpsb
or
sub
sbb
dec
notb
jge
ljmp
andb
mov
and
loopne
xchg
int
sti
pusha
aas
std
add
lods
push
xlat
jae
push
sub
or
cs
ret
cmp
push
and
and
or
scas
cmp
jmp
fiadds
cmp
insl
adc
pusha
pop
and
int3
mov
mov
jb
add
test
xor
mov
or
in
add
aaa
cltd
jbe
js
cmp
xorb
out
test
pushf
and
insb
loopne
sti
pop
mov
jl
mov
fidivrl
sbb
rcr
repz
mov
pushf
pushl
pushf
pushl
ret
dec
test
cmpsl
or
jbe
filds
ss
clc
cmpl
adc
cmp
pop
jge
and
popf
mov
add
add
pusha
sahf
repnz
xor
and
scas
ret
cmp
mov
loopne
imul
adcb
mov
cmc
leave
data16
or
and
xlat
mov
adc
sbbl
cmp
xchg
xchg
fisttps
add
call
stos
push
lock
movnti
out
gs
cli
or
aad
jge
sub
xor
xchg
inc
in
mov
xchg
xor
ja
scas
mov
movlps
repz
mov
fwait
xor
fstl
aam
xchg
shll
inc
push
jno
mov
outsl
pushl
or
insb
pop
shrb
mov
pop
dec
addr16
add
loopne
cld
sbb
mov
sub
jbe
movsb
dec
xlat
test
and
arpl
dec
out
dec
adc
cmp
cld
dec
mov
mov
add
xor
les
scas
pop
push
pusha
popf
jbe
scas
xchg
push
xor
lret
stos
adc
notl
dec
mov
xor
scas
das
or
inc
sbb
cmpsb
cmp
ret
fwait
add
dec
inc
push
xchg
pop
sbb
repnz
movl
jmp
push
bt
repnz
push
pushf
movl
lea
jne
rcr
neg
not
mov
adc
lea
sub
xor
bsf
dec
btc
mov
cmp
pushf
cmp
sub
pushf
call
cmp
call
bts
mov
call
or
ljmp
jno
push
or
test
ror
sub
jbe
movsl
into
in
jno
in
fwait
dec
insb
addr16
mov
aaa
sub
outsl
xor
or
stos
mov
xchg
push
push
xor
fstl
jbe
stc
iret
ljmp
xor
jp
lds
or
jp
gs
movsl
movsl
or
lcall
add
testb
inc
cli
mov
push
scas
sub
rclb
lds
js
scas
jge
orb
mov
mov
inc
jnp
jmp
outsl
xor
dec
pop
and
xor
fimuls
or
pusha
das
repnz
int3
dec
jmp
mov
cltd
mov
pop
cli
cs
adcb
push
push
jae
arpl
jnp
push
ret
daa
rcr
inc
cs
add
xor
je
sub
rcl
mov
shlb
xor
stos
sahf
icebp
hlt
std
sub
xchg
test
lea
sbb
mov
sub
imul
insb
sbb
jp
inc
aad
rol
sbb
mov
testl
dec
pop
movsb
iret
stc
cmp
and
adc
pusha
lahf
mov
pop
aaa
lds
pusha
imul
inc
gs
insl
stos
insl
js
div
pop
insb
xor
jmp
xor
movsb
xlat
inc
mov
mov
sub
fimull
jge
push
pop
sti
xlat
sub
mov
mov
push
add
je
push
push
xorb
push
scas
in
loope
or
push
jns
jno
and
inc
push
movsb
mov
stc
xchg
and
push
imul
insb
loop
pusha
lcall
cmp
or
xor
sbb
add
loopne
mov
jnp
das
pop
sub
arpl
std
xor
jb
sub
imul
add
push
inc
pop
cmp
aam
add
mov
sbb
fcmove
sahf
das
add
es
mov
sahf
mov
icebp
push
cmc
mov
shl
mov
clc
stc
call
lea
lahf
movzbw
pushf
mov
pushf
call
push
mov
lea
push
pusha
mov
lea
call
call
lea
ja
shr
add
test
bt
sub
dec
movzbw
rcr
bsf
add
test
mov
bsf
mov
cmp
rol
rol
mov
test
repnz
pusha
pushf
lea
jne
pushf
pop
pusha
movb
lahf
mov
movsbl
call
movsb
adc
lods
or
repnz
cmp
dec
xor
pop
lds
imul
leave
adc
and
push
sbb
push
fisttps
push
ljmp
mov
mov
inc
dec
fsts
adc
je
xor
inc
popf
mov
arpl
push
fsubrl
lds
mov
xor
sbb
cli
in
lahf
pusha
mov
mul
cmp
out
mov
sub
cmp
pop
mov
call
js
push
lods
or
out
test
rcrl
add
jecxz
fistps
add
xor
dec
sub
inc
xchg
xchg
or
pop
jbe
ds
add
sub
outsl
rclb
dec
fwait
or
daa
jae
mov
lods
or
ror
std
push
xchg
cwtl
loope
aam
sahf
or
xor
cmp
and
xchg
aam
outsl
mov
cltd
push
fstl
test
push
fwait
cld
adc
into
mov
mov
hlt
pushf
mov
jbe
aaa
int3
test
cltd
xlat
sbb
cwtl
out
inc
xchg
mov
ds
sub
cwtl
push
push
push
mov
das
xor
and
dec
fwait
call
adc
jo
lock
je
xlat
call
add
and
je
loop
lods
and
sub
clc
mov
jmp
cmp
lods
or
jl
lock
movsb
dec
xchg
fisttps
shll
mov
in
repnz
rcr
sahf
enter
push
dec
dec
inc
andl
sbb
fs
inc
add
or
jmp
push
mov
dec
or
or
out
mov
jl
fiadds
sar
xlat
xor
xchg
or
mov
cmc
push
jge
mov
cmp
dec
sub
scas
or
cld
out
fldenv
mov
sbb
xchg
test
dec
pop
rcr
jmp
mov
lods
enter
fidivrl
out
je
sub
js
sbb
into
adc
xor
jnp
das
xor
xor
mov
or
xor
std
pop
shr
int
loopne
mov
jae
mov
je
mov
paddsb
xor
pop
cmp
test
scas
or
stc
les
mov
adc
xchg
xchg
addr16
jb
cmc
andb
and
push
call
dec
add
inc
sbb
aas
lock
clc
imul
push
out
mov
add
cmpb
pushf
pushl
lea
jne
shr
lahf
shld
aad
xor
btc
aaa
lahf
shl
mov
pushf
add
cmp
cmp
mov
pushl
test
movb
pusha
call
bt
movw
cmpb
call
cmp
scas
repz
int3
push
pusha
dec
push
jnp
or
jne
pop
dec
test
js
mul
sub
mov
mov
pop
xor
pop
adc
insb
aam
mov
or
xor
cltd
and
mov
cmp
inc
fs
mov
mov
pop
ret
pop
sub
xchg
and
jl
push
dec
rcll
cmpsl
cmpl
popl
test
jmp
lea
jne
mov
rcr
mov
mov
adc
sub
adc
bswap
rcl
mov
test
cmc
sub
pushf
pushf
stc
cmp
pushl
popl
movw
call
movb
sub
pusha
lea
jmp
lea
je
cmp
jmp
jecxz
pop
mov
scas
fists
ret
jg
add
jg
les
add
addr16
push
or
insl
cwtl
pusha
lret
shlb
cmp
stos
scas
or
loopne
xchg
mov
cs
dec
xchg
cmp
or
ja
ret
xor
les
repz
mov
xor
or
mov
jnp
cwtl
faddp
inc
in
adc
mov
add
xchg
call
pop
sub
xor
aam
inc
xor
jp
jle
jecxz
inc
testb
andb
push
add
js
mov
scas
pop
int3
aad
daa
adc
and
js
jo
out
sub
or
dec
push
dec
fidivrs
sub
add
mov
xchg
dec
jle
jg
sbb
movsl
fs
cltd
mov
push
outsb
push
iret
add
adc
xor
insl
loopne
xor
in
or
fimuls
mov
mov
std
stos
inc
lcall
lret
sub
mov
cmc
addl
jge
adc
fdivrl
in
sub
test
pushf
xor
cltd
lret
jle
fwait
je
sub
shll
and
pop
adc
cmc
pop
out
push
incl
sbb
daa
lret
and
jecxz
cmpsl
sub
or
push
jg
sub
lcall
xor
popa
xchg
out
cmp
call
pusha
pusha
lea
jae
pusha
pushl
cmp
movb
pushf
jmp
mov
nop
mov
scas
adc
mov
mov
rorb
xor
cmp
sbb
jle
mov
cmp
adc
mov
ret
mov
out
clc
ss
addr16
lock
cwtl
bound
outsl
sub
mov
notl
mov
daa
add
adc
lea
xor
jecxz
and
inc
ds
jecxz
or
call
push
clc
cmpb
mov
lea
jne
aaa
mov
cmc
bswap
xor
neg
aad
movsbl
btc
mov
jmp
cmpsb
push
int
or
ret
lods
cmp
push
pop
inc
scas
cmp
cmp
push
out
cmp
pop
sti
fwait
aam
push
mov
in
pop
jmp
and
test
lods
pop
insb
aam
mov
sub
xorps
sbb
imul
jbe
cli
pop
inc
adc
in
mov
jns
pushf
mov
imul
imul
test
sahf
mov
push
in
call
pop
movb
popaw
iret
adc
dec
scas
mov
scas
decb
pop
xchg
js
sub
mov
test
xor
mov
cmp
out
jbe
dec
movsl
jecxz
ss
outsb
mov
mov
pop
loopne
loopne
mov
mov
outsb
movsl
jl
mov
or
daa
lahf
sbb
inc
daa
into
push
jb
inc
push
xor
push
mov
hlt
test
imul
jo
sub
mov
add
ljmp
mov
xor
or
mov
and
movb
lea
jmp
sbb
mov
shrl
test
mov
xchg
out
in
addr16
xor
scas
mov
xchg
jb
scas
dec
add
inc
ret
ss
cli
fsubs
outsl
ret
imul
stos
mov
xor
mov
lea
mov
rolb
movsl
cwtl
pop
sbb
adc
cmp
ret
jne
gs
xor
fs
insb
add
mov
cmp
mov
lea
ja
mov
inc
sets
mov
push
inc
neg
shl
rcr
xchg
clc
test
shrd
movw
mov
and
not
ror
jmp
lahf
bswap
jmp
pusha
lea
ja
shl
sbb
adc
sub
shl
movzbw
add
jmp
mov
fidivl
sbb
pop
sti
pop
mov
cltd
sbb
mov
mov
mov
fidivrl
mov
pop
sti
pop
fistpl
xor
mov
jnp
xor
fwait
int
ret
lea
jge
cmpb
push
pusha
push
push
lea
jmp
jmp
out
imul
addr16
lea
push
jns
mov
pop
cmp
xchg
xchg
sahf
sub
jnp
sti
xor
mov
add
lret
mov
int
pop
jp
outsl
sbb
adc
das
rolb
xor
mov
xor
or
push
xchg
cmpl
push
mov
cwtl
mov
adc
mov
adc
sub
not
test
add
shl
mov
pusha
bt
test
movb
lea
je
clc
pusha
pushf
stc
sub
lea
test
cmc
pusha
bt
cmp
pushf
pusha
jmp
lea
je
pushf
pushf
movw
lea
jmp
call
push
loope
mov
scas
fmuls
and
pop
add
xor
aam
cld
lock
lds
and
jbe
xor
loopne
mov
mov
pop
cmp
adc
in
xchg
insl
pop
push
movsl
cmc
cmp
add
pop
push
pop
push
inc
aaa
sub
sub
and
and
lods
and
inc
push
pushf
dec
pushl
inc
add
sbb
mov
ror
sar
xchg
push
mov
xor
pushf
mov
add
cmc
pushf
push
mov
bswap
rcl
not
shrd
mov
pusha
bt
sub
pushf
jmp
stc
pushl
popl
cmc
cmp
pusha
call
jmp
sub
jmp
inc
pushf
test
jmp
sahf
sbb
or
push
mov
cmp
mov
scas
enter
xor
stos
movsb
xchg
nop
das
push
sbb
xchg
jecxz
in
add
test
mov
sub
xor
push
enter
pushf
and
jle
call
movw
lea
jne
jmp
into
aas
mov
or
push
nop
fwait
ret
mov
sub
mov
mov
mov
mov
lods
add
icebp
and
lea
sahf
push
movl
sub
bound
jle
ret
push
test
ret
jnp
call
leave
xor
sbb
xor
sbbb
mov
xor
cwtl
or
xor
mov
test
popa
pushf
sub
pushf
pushl
call
lods
cmc
clc
cmc
cmc
sub
cmp
xor
bt
pushl
rol
push
test
clc
cmc
add
mov
not
movw
lea
call
pushf
stc
cmp
cmp
lea
jp
pusha
movw
lea
jae
clc
cmp
jmp
movzbw
and
add
mov
bt
cmp
cmpb
pushf
pusha
lea
jmp
push
inc
sar
and
adc
xchg
aaa
adc
dec
mov
neg
push
not
mov
mov
cmp
stc
clc
mov
bswap
add
bt
movzbw
mov
pushf
sub
pushf
push
call
jmp
lea
jbe
shl
bsf
sub
sbb
stc
mov
xor
mov
pushf
push
bsr
pop
add
shr
or
rcl
shr
jmp
mov
cmp
stc
push
mov
add
clc
stc
pushf
cmp
test
movb
push
lea
jne
push
lea
jae
pusha
pusha
mov
push
mov
jmp
call
lea
jae
stc
pushf
pushf
cmp
jmp
shrb
mov
adc
inc
out
xchg
mov
jno
insl
sarb
pop
xor
enter
lods
movsb
or
cli
mov
stc
sbb
sub
fsubs
mov
inc
notb
test
mov
xor
int
sbb
ljmp
call
lcall
mov
cli
or
movsl
or
pop
cmc
call
adc
andb
out
push
call
pushf
movl
pushf
mov
movb
pushl
ret
push
jmp
inc
lcall
mov
sub
in
mov
subl
clc
cmp
nop
mov
arpl
jbe
stos
pmaxsw
jb
std
add
lods
std
in
loopne
ret
fimull
cld
int3
pop
mov
jns
es
jmp
bsf
mov
jmp
out
arpl
or
mov
das
dec
and
fsubs
or
inc
ljmp
mov
xor
push
scas
or
mov
add
out
sti
jl
inc
lret
leave
stc
lods
push
rolb
or
dec
cli
pop
and
addr16
pop
pop
pop
cld
jns
adc
add
nop
mov
dec
imul
mov
mov
imulb
cmp
sbb
shr
fistl
cmp
call
cli
pop
cmp
loopne
aam
movsl
sbb
int3
push
fisubs
jno
xchg
xchg
cmp
repz
ss
push
inc
sbb
jle
int
fwait
cmp
lahf
xor
in
ss
or
pop
jns
mov
or
fcmovu
aad
jecxz
dec
and
and
sbb
pop
xor
sbb
in
test
cmp
cmp
pop
add
inc
nop
dec
cmp
rorl
add
mov
mov
jmp
adc
stos
icebp
pushf
test
mov
dec
sarl
pushf
sbb
cmp
mov
mov
and
pop
fs
mov
fidivrl
jb
loope
fldz
in
xchg
cmp
lods
dec
std
add
outsl
int3
mov
inc
adc
loopne
cld
xor
mov
outsl
jmp
scas
sbb
testb
pop
es
movsb
cmp
lahf
or
popa
sub
push
push
shll
xor
test
pop
xor
sub
fcoml
loop
in
add
pop
and
cli
dec
aas
icebp
sbb
pushf
and
in
add
pushf
mov
cmp
test
call
test
ror
xor
seto
mov
sub
cmp
pushf
mov
call
clc
add
stc
stc
cmp
pusha
mov
lea
jb
bt
cmp
pusha
call
pusha
pusha
jmp
jmp
test
xor
movb
pushf
pushf
pushl
lea
jmp
repnz
mov
sub
ret
dec
ja
or
cmp
dec
dec
cmp
mov
xor
test
xor
xchg
jmp
xchg
or
in
add
hlt
mov
pop
aaa
test
stos
pop
xor
rol
ss
das
pushf
and
or
rcrb
cmc
add
call
jmp
bt
add
lea
push
push
cmp
bt
add
mov
jmp
movl
jmp
not
lea
lea
call
cmp
cmp
call
setno
jmp
jo
pushf
movl
jmp
mov
clc
repnz
pusha
lea
jne
pushf
stc
or
and
mov
stc
neg
bts
sub
not
sub
pop
mov
call
pushl
lea
jae
pushf
lea
jne
ja
push
stos
pusha
movb
pushf
lea
jmp
call
scas
jle
outsl
pop
mov
sarb
mov
and
es
and
push
in
and
jno
adc
fmulp
ds
pop
ficoml
js
add
out
sub
je
ret
out
push
mov
ja
fucomi
sbb
xor
inc
jne
std
insl
mov
arpl
shl
mov
stc
sub
clc
test
clc
call
jmp
call
sub
mov
push
add
push
lea
jmp
mov
pusha
call
das
bswap
shl
lahf
mov
pushf
pusha
jmp
rol
pushl
cmp
test
pusha
sub
bt
sub
jmp
mov
movb
repz
popl
mov
movb
pushl
mov
push
pushf
push
push
mov
push
pushf
pushf
lea
jmp
mov
pushl
push
pushl
movb
lea
jmp
mov
dec
neg
cmp
neg
add
xor
stc
mov
cmp
stc
add
pushl
call
pushf
neg
stc
sub
stc
mov
cmc
bt
test
clc
sub
call
pushf
jmp
bt
movzbl
pushf
jmp
call
pusha
shl
pusha
push
call
push
push
pusha
call
mov
push
movb
movw
push
lea
jmp
bt
pusha
add
call
pusha
mov
pushf
push
mov
lea
jmp
push
jb
pusha
pusha
mov
pushf
jmp
movb
mov
pusha
mov
pushl
pushf
lea
jmp
repz
popl
movb
mov
movb
jmp
mov
movb
repz
popl
jmp
call
push
push
jmp
movb
pushl
popl
mov
lea
jmp
pusha
pusha
jmp
mov
push
pushf
call
clc
pusha
cmc
sub
stc
clc
jmp
jmp
pusha
mov
call
clc
aam
mov
and
cmp
mov
cmp
jmp
mov
pushl
pushf
pushf
mov
lea
jmp
pushf
mov
mov
movb
pushf
lea
jmp
pushf
popl
jmp
pushf
mov
pushf
movw
movb
mov
lea
jmp
mov
jmp
pushf
xchg
pushl
jmp
add
add
seta
not
mov
jmp
movb
pushf
popl
jmp
pushf
call
pushf
popl
call
jmp
sub
movw
mov
movb
pusha
mov
mov
lea
jmp
pushf
call
dec
stc
call
jmp
lea
jne
rcl
mov
cmc
call
pusha
shr
bt
call
jmp
pushl
pushl
popl
pushf
mov
pushf
push
lea
jmp
mov
mov
mov
movb
lea
jmp
btr
sets
setnp
xchg
mov
rcr
test
ror
add
pushf
jmp
lea
jne
pushf
pushl
popl
movw
pushl
lea
jmp
mov
pushl
popl
movl
pusha
pushf
push
lea
jmp
mov
call
pushf
popl
jmp
mov
mov
mov
lea
jbe
pushf
push
pushl
mov
pushl
push
pushf
lea
jmp
mov
movb
pushf
push
lea
jmp
bsr
bswap
mov
setae
ror
ror
shl
sub
pushf
btc
rcr
ror
setg
not
xor
jmp
or
jmp
call
mov
jmp
mov
jmp
inc
call
cmc
xor
movb
mov
clc
cmp
test
bt
sub
push
mov
pushl
push
push
lea
jmp
push
pushf
mov
movb
mov
pushl
pushf
pushf
pushf
lea
jmp
jmp
xor
pushl
pusha
inc
stc
lea
clc
push
neg
call
jmp
pusha
call
sar
mov
not
add
bsr
stc
sub
shld
add
movzbl
clc
xor
shr
mov
bt
call
push
pop
cwtl
mov
call
movzbw
mov
ror
bt
add
test
sub
lea
bsr
mov
cmc
cmp
cmp
shl
cmc
call
pushf
call
call
pushf
lea
jae
push
pushl
popl
pusha
pushl
lea
jmp
push
lea
movb
pushf
call
mov
movb
lea
jmp
push
mov
push
pushl
repz
popl
call
movb
mov
pushl
lea
jmp
mov
push
pushf
movw
pushf
lea
jmp
call
call
call
mov
mov
call
pusha
movsbw
rol
movsbl
pop
lea
inc
rcr
btr
not
xor
xor
cmp
cmc
and
stc
sub
not
mov
jmp
mov
call
lea
jo
pusha
pusha
mov
movb
mov
lea
jmp
cmc
xor
stc
sub
stc
lea
jno
test
sub
jmp
shl
cmc
btr
movzbw
mov
shl
mov
jmp
pushl
popl
movw
mov
lea
jmp
mov
mov
push
mov
mov
lea
jmp
jmp
pushf
add
pusha
lea
jmp
cmp
cmp
add
call
pushl
call
sets
movzww
pushf
cmc
stc
pushf
xor
jmp
pushl
push
pushl
popl
pushl
lea
jmp
jmp
sbb
mov
and
mov
test
clc
add
call
pushf
movb
pushl
popl
movb
pushf
mov
lea
jmp
pushl
call
pusha
sub
ja
sub
cmc
add
pusha
pushf
pushf
popl
pushf
call
clc
xor
pushf
clc
add
push
mov
mov
pushl
ret
sub
bt
ror
dec
pusha
not
movb
movw
setl
jmp
neg
test
call
add
pushf
movw
cmc
call
pushf
pushf
mov
mov
mov
mov
js
repz
push
mov
pusha
pushf
call
jns
shl
mov
cmc
cmp
call
mov
push
lea
jmp
not
pusha
lahf
mov
sets
call
bsr
adc
pushf
dec
mov
pushl
pusha
add
pushl
movb
jmp
inc
inc
mov
sub
neg
inc
btc
sub
bsr
call
mov
jmp
cld
pushf
jmp
jmp
setb
mov
pushf
push
mov
pusha
call
pushf
movl
mov
mov
pushl
lea
jmp
push
mov
pushf
mov
pusha
mov
pushf
movw
pusha
jmp
mov
push
lea
jmp
push
mov
push
mov
pusha
pushf
repz
popl
call
shr
shr
mov
bt
jne
clc
test
sub
pushf
pushl
test
cmp
shr
pushl
push
mov
pushf
pushf
mov
mov
pushf
popl
jmp
pushl
popl
mov
pushl
lea
jmp
pushf
popl
pushl
mov
pushl
popl
mov
mov
movl
lea
jmp
mov
jmp
mov
pusha
pushf
push
pushf
popl
call
not
movw
push
and
jmp
push
mov
jmp
pusha
call
clc
ror
clc
mov
pushf
pushf
call
push
mov
mov
mov
pusha
push
pushf
lea
jmp
jmp
cmp
pushf
shld
push
jmp
pushf
mov
mov
lea
jmp
jmp
jmp
neg
rcl
daa
movsbl
mov
pushf
mov
bt
cltd
mov
shl
bsf
mov
stc
mov
cmc
cmc
mov
sar
sbb
xchg
ror
mov
xchg
btc
mov
cmc
pop
add
bsr
mov
std
stc
std
lea
pushl
popf
pushl
xchg
not
mov
pop
mov
push
pushf
pushf
push
pushl
ret
pushf
pushf
pushf
mov
movb
lea
jmp
pushf
push
jmp
push
jmp
not
stc
movzbl
pusha
cmc
cmc
call
bswap
mov
mov
pusha
pusha
lea
movl
pushf
mov
pushf
lea
jmp
jmp
push
mov
call
call
mov
call
sub
push
pushf
pushf
mov
pushf
movb
movb
movw
lea
jmp
pushf
call
mov
jmp
pushf
stc
mov
bts
jmp
pushl
popl
mov
lea
jmp
pushl
popf
pusha
mov
movw
mov
lea
jmp
btr
btr
neg
lea
clc
cmp
jmp
mov
push
mov
push
push
pushl
lea
jmp
mov
mov
call
pusha
push
push
call
shld
mov
jmp
lea
je
cmc
test
sub
bt
xchg
cmp
cmp
cmp
push
cmp
test
sub
pusha
pushf
pusha
lea
jne
cmp
xor
call
jmp
pushl
mov
pushf
call
movb
mov
mov
pushl
lea
jmp
mov
mov
push
lea
jmp
push
mov
push
mov
jmp
bt
not
jmp
mov
dec
clc
clc
call
mov
push
movb
movw
pushl
lea
jmp
jmp
or
mov
clc
test
clc
bt
sub
cmp
clc
test
pusha
shl
pusha
jmp
movl
push
push
movl
mov
mov
pushf
pushl
ret
mov
call
movzbl
pusha
jmp
cmc
test
sub
pusha
add
pushf
pushf
popl
call
pushf
push
mov
movb
jmp
bswap
mov
dec
pusha
mov
jmp
call
mov
mov
push
call
gs
fcoms
xchg
fcoms
xchg
fsubrs
xchg
fadds
xchg
fsubs
push
xchg
fsubs
xchg
fsubs
pop
xchg
fsubs
outsb
xchg
fsubrs
addr16
fcomp
push
xchg
fadds
jle
fdivs
xchg
fdivs
xchg
fdiv
bound
fadds
xchg
fdivs
fcoms
outsb
xchg
fdivs
xchg
fdivs
xchg
fsubrs
outsb
xchg
fsubs
push
xchg
fdivs
xchg
fcomps
pusha
xchg
fsubrs
push
xchg
fsubs
pop
xchg
fadds
xchg
fsubs
push
xchg
fcoms
jl
fdiv
bound
fsubs
pop
xchg
fsubrs
push
xchg
fsubr
pop
xchg
fsubrs
insl
xchg
fcomps
push
xchg
fadds
pop
xchg
fsubs
xchg
fsubs
xchg
fcomps
jne
fdivs
xchg
fdivs
xchg
fsubrs
push
xchg
fdivs
fadds
xchg
fsubs
xchg
fsubs
bound
fdivs
xchg
fdivs
fsubs
push
xchg
fsubs
xchg
fcoms
fs
fmul
gs
fadds
xchg
fdivs
xchg
fsubs
push
xchg
fsubs
push
xchg
fsubrs
push
xchg
fsubs
xchg
fsubs
xchg
fsubrs
push
xchg
fadds
xchg
fdiv
bound
fsubrs
insl
xchg
fsubrs
xchg
fsubrs
xchg
fadds
xchg
fdivs
xchg
fmuls
push
xchg
fmuls
pop
xchg
fadds
pop
xchg
fsubrs
outsb
xchg
fdivs
xchg
fdivs
xchg
fadds
xchg
fsubs
push
xchg
fsubs
push
xchg
fmul
gs
fsubrs
outsb
xchg
fcoms
jl
fsubrs
outsb
xchg
fcomp
push
xchg
fdivs
xchg
fsubs
push
xchg
fsubrs
popa
xchg
fcomps
jns
fsubrs
outsb
xchg
fsubrs
jg
fsubrs
push
xchg
fcomps
xchg
fsubs
xchg
fmuls
jg
fdivs
xchg
fdivs
xchg
fdiv
jg
fsubrs
xchg
fcomp
push
xchg
fcomps
push
xchg
fmul
gs
fdivs
xchg
fdivs
xchg
fsubrs
outsb
xchg
fcomp
push
xchg
fsubs
push
xchg
fadds
xchg
fsubrs
insl
xchg
fmul
push
xchg
fsubrs
push
xchg
fdivr
push
xchg
fsubrs
xchg
fcoms
jl
fadds
pop
xchg
fadds
xchg
fsubs
xchg
fsubrs
xchg
fdivs
fdivs
fsubrs
push
xchg
fcomps
pusha
xchg
fadds
xchg
fdivs
xchg
fcoms
push
xchg
fdivs
push
xchg
fsub
fs
fsubs
pop
xchg
fmul
push
xchg
fdivs
xchg
fdivs
xchg
fmul
gs
fdivs
xchg
fmuls
pop
xchg
fsubrs
push
xchg
fsubrs
xchg
fsubr
pop
xchg
fadds
pop
xchg
fsubrs
addr16
fsubrs
push
xchg
fdivs
push
xchg
fcoms
jl
fmul
push
xchg
fcomps
jg
fsubs
pop
xchg
fcoms
jl
fsubrs
insl
xchg
fsubrs
xchg
fcomps
xchg
fdiv
bound
fdivs
xchg
fcomps
push
xchg
fdiv
jg
fsubr
pop
xchg
fmuls
xchg
fsub
fs
fdivs
xchg
fdivs
xchg
fmul
gs
fadds
xchg
fsubrs
push
xchg
fadd
gs
fadds
pop
xchg
fcomp
push
xchg
fsubs
xchg
fcoms
insl
xchg
fadds
xchg
fcomp
push
xchg
fadds
xchg
fcomps
bound
fmuls
bound
fsubs
pop
xchg
fcoms
outsb
xchg
fdivs
xchg
fdivs
xchg
fsubs
gs
fmuls
popa
xchg
fdivs
fcomp
push
xchg
fdivs
xchg
fdivs
xchg
fcoms
push
xchg
fsubr
pop
xchg
fcoms
addr16
fsubr
pop
xchg
fadds
jle
fadds
xchg
fsubrs
push
xchg
fsubrs
push
xchg
fsubs
bound
fadd
gs
fdivs
push
xchg
fadds
xchg
fsubrs
xchg
fsubs
bound
fcomps
xchg
fmul
gs
fdivs
xchg
fdivs
xchg
fadds
xchg
fadd
gs
fsub
fs
fdivs
xchg
fcomps
xchg
fadd
gs
fdivs
xchg
fdivs
xchg
fdivs
xchg
fsub
fs
fmuls
push
xchg
fcoms
jg
fcomps
gs
fcom
mov
jmp
call
pushf
jmp
bt
sub
pushf
stc
cmp
stc
cmpl
pushf
call
mov
pusha
movb
call
ror
stc
bt
call
pushl
popl
push
pushl
push
lea
jmp
call
mov
lea
jp
pushf
pushf
pushl
mov
movb
lea
jmp
rcr
adc
xchg
adc
mov
jmp
cmp
test
pushl
pushf
add
pushl
stc
pushl
popf
pusha
pushf
pushf
lea
jmp
jmp
pushl
popl
pushf
pusha
pushf
lea
jmp
pushl
lea
jle
push
mov
pushf
pusha
lea
jmp
mov
movl
pushf
lea
jmp
pusha
mov
call
not
clc
push
sub
test
cmp
and
push
jmp
pusha
mov
pusha
jmp
xor
mov
call
shl
aas
mov
bsr
push
or
inc
mov
pushf
pushf
add
jmp
movl
mov
pushf
mov
call
call
not
jmp
mov
push
lea
jmp
call
rep
call
call
mov
call
mov
push
movb
call
push
pusha
mov
pusha
pushf
push
pushf
mov
push
repz
popl
mov
mov
call
pushf
lea
jl
mov
pusha
push
pushf
lea
jmp
jmp
mov
cld
pusha
pushl
popf
push
mov
push
pushf
lea
jmp
pusha
xor
notl
pusha
shl
mov
clc
cmp
clc
test
sub
test
and
mov
mov
call
mov
jmp
push
call
push
lea
not
call
movb
mov
pushl
jmp
call
movw
cwtl
cmc
movb
cmp
call
not
jmp
test
or
lea
aad
mov
xadd
mov
dec
mov
call
not
bswap
std
lea
mov
call
bswap
rdtsc
pushf
mov
movsbw
not
mov
pusha
divl
pushl
mov
push
mov
push
jmp
add
pushf
movl
pushf
push
mov
pushf
pushf
lea
jmp
jmp
pushf
popl
call
mov
movb
pusha
push
lea
jmp
jmp
pushf
pusha
pushf
jmp
mov
pushl
push
movb
repz
popl
jmp
pushl
popl
pushl
lea
jmp
movw
movb
mov
push
pushf
pushf
popl
mov
pushf
pushl
popl
push
mov
mov
lea
jmp
movb
jmp
call
mov
mov
mov
mov
lea
jmp
cmc
jmp
mov
push
lea
jmp
pusha
pushf
mov
mov
lea
jmp
pushf
cmp
pushf
add
pusha
mov
mov
mov
pushl
lea
jmp
mov
pushl
lea
jmp
inc
pushf
decl
push
call
movl
mov
call
jmp
pusha
cmp
jmp
call
mov
pushf
movb
mov
pushf
pushf
lea
jmp
pushf
mov
mov
push
lea
jmp
jmp
rol
ror
sbb
mov
jmp
shrd
pushf
mov
pushf
call
pushl
mov
mov
lea
jmp
push
clc
xor
jmp
pushf
test
sub
jmp
daa
dec
mov
sbb
mov
bsr
movsbw
mov
pushf
pusha
cmp
call
mov
repz
popl
jmp
mov
mov
pushf
popl
call
or
mov
clc
xor
push
jmp
pusha
pushf
repz
popl
pushl
call
jmp
pushf
mov
jmp
clc
add
jmp
sub
pushl
call
sub
pushf
pushf
pushl
sub
jmp
ror
bt
adc
mov
push
sub
clc
shr
movb
call
call
pushf
mov
jmp
mov
push
mov
push
repz
popl
pushl
movb
call
pusha
pushl
popl
pushf
pushl
movb
lea
jmp
push
mov
movb
mov
jmp
jmp
push
pusha
mov
push
repz
popl
jmp
stc
mov
cmc
pusha
cmc
sub
lea
jnp
push
pushf
movl
mov
mov
pushf
lea
jmp
pushf
pusha
pusha
jmp
lea
ja
daa
das
xor
dec
mov
clc
lea
shl
aas
sub
neg
neg
lea
stc
cmc
bsf
adc
and
shld
sub
push
pusha
mov
lea
lea
movsbw
pushf
mov
jmp
pusha
mov
pusha
movb
call
mov
push
pusha
pusha
pushf
lea
jmp
bts
aaa
mov
movsbw
rcl
jmp
cmp
sub
call
call
push
pushl
popl
pusha
pushf
pushf
mov
lea
jmp
mov
shl
jmp
pushl
not
pusha
pushf
push
lea
push
push
push
dec
bt
push
xchg
bt
clc
test
bt
xor
test
bt
test
mov
cwtl
cmc
sub
call
mov
mov
movb
pusha
lea
jmp
mov
movw
movb
repz
popl
mov
movl
pusha
mov
mov
call
adc
sub
movzww
bt
pushf
jmp
call
and
lea
rcr
mov
jmp
lea
jne
pusha
pusha
mov
pushf
pushf
mov
push
lea
jmp
pusha
xchg
movb
aam
mov
rol
mov
cmp
bt
pushf
bt
sub
movb
stc
cmp
shr
pushf
call
jmp
pushf
push
rep
rcl
mov
movzbl
mov
mov
call
shr
btr
btc
mov
pusha
shl
cmp
cmc
mov
bt
cmp
bt
add
jmp
not
dec
dec
xor
mov
bt
jae
test
sub
test
add
pusha
push
pushf
popl
movb
call
mov
push
repz
popl
push
pushf
mov
call
mov
pushf
movl
movw
pushf
lea
jmp
jmp
pushf
call
repz
pusha
pusha
mov
pushf
jmp
pusha
movw
repz
popl
pusha
pushf
jmp
mov
pusha
pushf
mov
pushf
pushf
movl
push
lea
jmp
pushf
popl
call
neg
cmc
ror
movb
pushf
push
inc
clc
sub
stc
bt
sub
bt
push
sub
jmp
pushf
popl
jmp
push
repz
popl
pushf
pushf
push
mov
call
jmp
call
inc
shld
shl
test
sbb
lea
adc
neg
call
pushf
mov
pushl
popl
push
pushf
mov
lea
jmp
pushf
popl
pushf
call
pushf
pushl
popf
pushf
pushf
mov
lea
jmp
pushl
push
mov
mov
lea
jmp
stc
add
cmc
cmp
push
jmp
push
jmp
setl
or
jmp
pushf
push
repz
popl
jmp
pusha
pusha
jmp
mov
pushf
push
mov
lea
jge
push
pushf
repz
popl
jmp
mov
pusha
call
pushl
pushl
popl
pusha
mov
mov
pushf
lea
jmp
sbb
bsr
mov
bts
test
pusha
bsr
sub
bsr
neg
btc
ror
jmp
mov
pushf
pushf
mov
std
lea
pusha
movb
cld
xchg
not
lea
ja
pushf
bswap
mov
cld
pusha
cld
push
mov
pushf
lea
jg
rep
and
rcl
xadd
rol
pop
shl
push
mov
cld
jmp
lea
cpuid
call
push
push
jmp
pushf
call
sub
jno
xor
pushf
pushf
not
call
bsf
test
adc
rdtsc
bt
pusha
stc
sub
jmp
bt
test
xchg
lea
jp
stc
pushf
xor
push
bt
cmc
pusha
sub
bt
sub
pushf
pushf
jmp
pushf
pushf
lea
jl
pusha
mov
mov
jmp
mov
cbtw
call
shr
push
mov
push
push
mov
jmp
pushf
mov
jmp
call
sub
pusha
stc
clc
pusha
add
call
push
call
pushf
pushf
mov
jmp
repz
popl
jmp
mov
push
mov
pushf
lea
jmp
inc
push
mov
rcr
add
bt
sar
mov
pushf
shr
mov
push
stc
stc
stc
add
pusha
lea
jg
clc
stc
shld
pusha
jmp
push
call
mov
movw
mov
mov
repz
popl
pusha
call
test
mov
sets
add
jmp
jmp
push
bswap
xchg
btr
and
push
pushf
mov
shld
push
neg
pushl
cmc
shl
push
jmp
pushf
pushf
pushf
pushl
popl
pushl
mov
lea
jmp
movw
neg
clc
ror
pusha
push
inc
push
sub
push
inc
jmp
cld
not
push
std
std
lea
call
jmp
shrd
movzbw
mov
xor
mov
test
push
cmp
sub
sub
jae
push
cmc
clc
shl
pushf
jmp
pushf
popl
pushf
push
call
pushf
popl
mov
mov
movw
pushl
popl
movb
movw
lea
jmp
dec
cmc
xchg
clc
jmp
mov
call
push
mov
mov
jmp
pusha
push
jmp
mov
mov
movb
lea
jmp
pushf
pusha
mov
pushf
mov
pusha
call
pusha
shrd
mov
pushf
cmc
stc
add
pusha
pushl
push
mov
mov
pushf
mov
movw
lea
jmp
movw
ror
cmp
xor
clc
mov
call
mov
call
rol
clc
rcl
mov
cmc
cmc
push
sub
jmp
push
mov
call
push
jmp
clc
xor
call
popl
push
pusha
mov
lea
jmp
bsr
mov
call
mov
call
rcr
mov
shld
pusha
test
shr
xor
pusha
pushl
inc
jmp
jmp
movw
bt
and
stc
movl
cmp
pushf
mov
pusha
lea
jne
cmp
xorb
setnp
movsbw
mov
push
mov
pushl
pushf
pushf
pusha
lea
jmp
mov
movb
push
cmp
stc
sub
cmc
pushf
shl
mov
call
pushf
popl
push
push
pushl
popl
pushf
lea
jmp
mov
shrd
jmp
push
mov
movb
repz
popl
call
mov
push
pushf
lea
jmp
mov
pushf
pushl
jmp
add
neg
bsf
test
sub
rcr
pushf
lea
sbb
bts
rcr
shl
mov
bt
movb
add
mov
mov
mov
lea
jmp
mov
movb
lea
jmp
cmc
btr
rol
not
pushf
inc
shr
neg
xor
btr
pusha
seto
and
shl
shl
sbb
pusha
mov
mov
test
cmp
stc
sub
mov
pushf
pushf
push
mov
movb
mov
mov
mov
lea
jmp
test
mov
sub
call
mov
neg
pusha
sub
neg
or
neg
xor
clc
bswap
btr
bsf
lea
lea
sar
bsf
bsf
sub
add
cmc
mov
test
btc
shrd
xadd
mov
xor
rol
add
mov
mov
sub
shrd
and
call
jmp
add
call
mov
movb
pushf
popl
call
shl
rol
mov
adc
neg
mov
cmc
sub
cmc
shl
push
jmp
mov
mov
pushf
lea
jmp
add
push
pushf
popl
jmp
push
mov
pushf
pushf
mov
movb
lea
jmp
bswap
mov
movzbw
lea
repz
rol
movzbw
push
shrd
push
btr
clc
jmp
mov
jmp
